inc
jg
pushf
mov
inc
hlt
add
mov
push
push
and
jnp
xchg
and
dec
call
inc
jmp
xchg
mov
fs
dec
into
mov
ss
adc
popa
xor
loop
sti
dec
dec
shl
inc
ins
jg
mov
and
adc
into
loopne
xchg
sti
in
int3
int
sub
xor
ins
xchg
mov
js
loopne
(bad)
pusha
xlat
sub
and
out
push
addr16
in
mov
(bad)
inc
xchg
sub
outs
and
data16
daa
pusha
icebp
ror
dec
jmp
(bad)
add
cmc
ins
enter
das
bound
data16
add
push
and
fisubr
cdq
cli
stos
adc
jae
fcom
test
inc
push
pop
push
cvtdq2ps
push
aaa
aam
add
inc
pusha
mov
call
sbb
cdq
cmp
sti
or
dec
push
cli
(bad)
imul
dec
outs
mov
mov
outs
add
push
and
fidiv
lds
jg
add
inc
mov
fwait
cld
mov
mov
imul
xor
int3
sbb
into
fwait
push
test
xlat
js
pop
xor
xchg
dec
dec
or
div
shl
fs
js
adc
nop
(bad)
push
mov
add
mov
cwde
ins
out
cmp
fs
push
mov
or
xor
lods
fsub
lahf
mov
imul
shl
daa
arpl
retf
sub
mov
xchg
xor
addr16
hlt
or
fs
mov
outs
and
popa
cmps
int
daa
paddd
mov
call
inc
dec
inc
mov
(bad)
pushf
(bad)
mov
inc
push
xchg
inc
retf
ins
(bad)
(bad)
cs
xchg
xchg
ins
cwde
pushf
inc
jmp
lods
and
sub
mov
jmp
leave
shl
xor
mov
sbb
jl
retf
sbb
and
cld
cmp
dec
mov
or
sbb
loopne
xchg
cmp
or
push
test
mov
stos
hlt
or
outs
pop
jl
mov
xchg
inc
jle
test
mov
jno
retf
jmp
lds
pop
xchg
out
sbb
mov
rcl
imul
retf
ret
in
ds
stos
mov
mov
aaa
ja
mov
pop
imul
leave
mov
jle
mov
mov
mov
jmp
mov
out
mov
imul
cmc
pop
mov
(bad)
retf
in
sbb
jp
cmp
inc
into
sub
jmp
sbb
scas
retf
shl
aas
shl
push
movs
inc
lock
pop
adc
outs
out
test
push
fs
pop
xor
mov
mov
inc
cmp
mov
xchg
cmc
sub
mov
inc
push
cli
ret
idiv
retf
adc
cmp
xor
cmp
inc
imul
inc
das
xor
mov
cmc
and
dec
mov
add
push
ss
mov
stc
mov
add
xlat
jae
mov
fnsave
(bad)
xchg
jmp
pusha
aaa
cwde
xchg
out
sub
fisttp
idiv
inc
cmp
adc
cmps
push
jb
xor
(bad)
(bad)
ss
ss
mov
sub
enter
aas
mov
jno
mul
clc
mov
imul
loope
or
scas
stos
pop
div
repz
or
test
xchg
hlt
int3
xor
mov
push
push
sub
mov
(bad)
cmp
push
retf
loope
add
sbb
dec
or
sub
sahf
std
cmp
push
sub
jecxz
sbb
pop
pop
in
imul
and
dec
xor
imul
and
inc
dec
xor
stos
or
fisubr
mov
ss
cmp
ss
loope
stos
xchg
outs
loopne
or
pop
jmp
xchg
mov
mul
sub
test
pop
push
dec
lods
into
inc
fisttp
mov
pusha
push
hlt
sbb
cmps
or
ins
(bad)
out
cmp
add
mov
sysenter
sub
dec
mov
add
in
pusha
cmp
sbb
or
or
xchg
add
pop
adc
lahf
lea
and
stos
pop
xor
mov
ins
mov
add
inc
inc
or
cmp
push
retf
fs
int
cwde
dec
mov
(bad)
shr
push
mov
repz
push
stos
or
ret
cld
int
add
jae
cmps
loop
mov
nop
or
adc
xor
sub
jae
fsub
jle
cmc
or
cs
inc
shl
jmp
adc
push
mov
rcl
out
xor
mov
push
xchg
xor
aad
mov
dec
or
push
loopne
or
pusha
(bad)
daa
shr
mov
xchg
in
jg
sti
iret
cmps
add
out
dec
sub
(bad)
mov
leave
in
and
cli
es
ja
leave
add
not
aad
test
add
jge
js
sbb
jae
cmc
sbb
fisttp
hlt
or
call
xchg
ins
pop
cmp
mov
mov
jo
xchg
sbb
inc
mov
dec
loope
fstp
push
xchg
test
popa
fadd
dec
push
loope
(bad)
xor
sub
dec
sub
cld
sbb
aas
loopne
call
mov
cld
scas
lods
ficom
sti
iret
xor
retf
add
test
jmp
dec
mov
jle
pop
xor
and
or
or
cmc
pop
and
cmp
call
push
inc
xchg
push
jl
and
cmp
ins
mov
arpl
pop
add
loop
push
push
jmp
jecxz
xchg
pushf
int3
out
mov
pop
(bad)
sub
stc
inc
mov
pusha
mov
xchg
lods
ror
push
sahf
mov
xchg
pop
dec
popf
pop
test
xor
out
enter
xor
stos
fidiv
pop
inc
sahf
mov
loop
dec
mov
int3
out
or
cwde
sub
sub
or
mov
int
daa
data16
jne
mov
push
lock
pushf
jge
or
stos
lods
xor
jo
xchg
mov
mov
loop
out
frstor
aad
mov
popa
shl
xchg
cmp
jnp
push
scas
inc
sahf
cmps
loopne
mov
cvttps2pi
pop
dec
or
ret
rol
sbb
lds
iret
dec
jle
adc
add
jmp
add
xchg
rol
in
ss
(bad)
adc
xor
mov
jae
pop
pusha
ss
out
adc
popf
cmp
and
clc
mov
lock
daa
mov
les
imul
call
mov
mov
mov
add
outs
adc
ja
sbb
cmp
dec
or
xor
push
and
pop
inc
sbb
(bad)
dec
inc
push
mov
mov
lea
dec
sub
je
inc
sub
nop
aas
outs
mov
adc
mov
outs
sbb
into
pop
and
fistp
enter
jmp
push
pop
xchg
xor
fistp
shr
(bad)
add
dec
cmc
dec
xor
bnd
cld
xor
xor
mov
or
shl
daa
xchg
or
sar
lds
mov
cmps
xlat
in
mov
push
push
out
pop
arpl
pop
add
jmp
mov
aas
bound
mov
ds
scas
rol
cmps
cmp
pop
adc
pop
inc
out
mov
push
sbb
inc
sub
or
push
ss
fwait
jo
xlat
cli
push
test
sbb
ret
ss
jg
mov
test
int3
ins
add
mov
enter
outs
sbb
sub
jle
pop
adc
daa
dec
jnp
mov
fstp
enter
push
adc
inc
pop
sbb
sub
mov
dec
push
repnz
adc
dec
daa
adc
outs
inc
jae
pop
(bad)
add
xor
hlt
(bad)
(bad)
mov
xor
mov
packuswb
nop
out
cmps
pop
movs
add
jge
pop
push
(bad)
repnz
add
push
lds
rcr
inc
mov
push
outs
ins
sub
xchg
(bad)
or
movs
pop
loope
mov
xor
fistp
cmovae
mov
dec
dec
mov
clc
xor
pop
data16
mov
cmp
xchg
cmp
addr16
xlat
stos
jge
adc
mov
cld
or
fwait
pop
std
icebp
in
inc
retf
mov
fcomp
mov
mov
mov
pop
push
cmp
lahf
ins
fwait
inc
mov
sub
inc
in
lods
clc
sub
fcomp
loope
dec
mov
in
jmp
and
imul
jns
into
mov
into
dec
idiv
mov
mov
sbb
imul
xor
jle
push
daa
mov
push
sbb
cld
hlt
add
(bad)
cmp
out
js
pop
adc
sti
xchg
mov
cli
vcvttss2si
or
data16
mov
jno
sbb
mov
xchg
jae
mov
jmp
sbb
call
push
jge
mov
mov
pop
aas
or
push
dec
xchg
push
xor
sbb
into
enter
add
shl
outs
push
movs
push
fld
es
mov
mov
add
jmp
aam
inc
jb
jne
(bad)
in
mulps
push
or
mov
push
sub
leave
or
push
aas
es
push
and
mov
test
jle
test
pop
sahf
cld
ss
xchg
movs
ins
arpl
(bad)
add
pop
xor
sub
add
push
push
jmp
add
fs
mov
dec
cmp
repnz
arpl
dec
pop
sbb
or
repnz
imul
mov
leave
imul
xor
stc
leave
outs
mov
mov
repnz
cmp
popf
sub
mov
xor
sub
stos
inc
(bad)
bound
push
dec
cdq
xor
and
ins
shr
pop
(bad)
loop
xor
push
scas
les
in
int3
call
mov
mov
popf
xchg
xchg
and
mov
xchg
in
dec
pop
pop
sub
xchg
std
pop
rcr
dec
sbb
in
or
adc
fld1
repz
daa
iret
inc
jo
pusha
leave
bnd
and
inc
jns
ror
inc
sbb
outs
pop
in
outs
adc
jmp
mov
mov
in
cmp
(bad)
jg
out
cdq
sbb
loop
(bad)
int
ret
xor
je
push
je
xchg
aas
ret
sbb
mov
int
scas
dec
cmp
fucomip
je
cmp
mov
xchg
mov
dec
icebp
leave
cmp
cmp
inc
adc
mul
adc
enter
rcr
push
sub
jmp
jno
bound
xchg
jnp
loop
scas
jbe
push
adc
mov
fcom
clc
add
loop
popf
push
std
or
mov
add
sar
jmp
out
pop
xchg
lds
mov
mov
xlat
inc
cs
mov
fs
xchg
or
add
mov
into
xor
cmps
clc
add
shl
(bad)
mov
sbb
popa
add
lock
arpl
push
fucomi
sbb
aas
sbb
or
sub
or
fs
xchg
cmp
adc
idiv
(bad)
neg
not
sub
lods
(bad)
sti
cmp
iret
inc
fisttp
add
cmp
pop
sbb
test
es
jge
push
sub
int3
jg
fst
scas
jmp
pop
dec
add
popf
add
sbb
rol
adc
js
int
jnp
adc
dec
arpl
jno
pop
sahf
jp
dec
cld
lahf
cld
cld
clc
mov
out
(bad)
stc
or
mov
xchg
mov
add
cmp
and
mov
sbb
test
test
(bad)
dec
and
mov
fiadd
inc
fild
test
ins
fs
dec
add
inc
push
movs
mov
pop
push
loop
mov
and
or
(bad)
push
pop
test
bound
das
pop
out
mov
dec
xchg
sbb
loopne
pop
mov
ret
test
push
nop
inc
dec
fisttp
dec
push
sbb
call
pushf
mov
and
pop
out
push
inc
lahf
stos
(bad)
ja
int
mov
and
scas
jle
push
cmps
or
cmp
jge
dec
int
mov
jl
mov
lds
loope
gs
shr
jg
sbb
or
clc
popa
inc
push
cdq
ror
xchg
ss
sub
push
je
in
push
jns
out
mov
int3
cmp
xchg
stc
mov
and
(bad)
mov
sub
popa
push
mov
repz
out
lods
push
mov
sub
adc
sbb
xchg
mul
xchg
lds
add
add
add
stos
lds
cmp
fcom
sti
arpl
neg
shl
iret
cmp
ss
inc
jp
mov
movs
mov
jmp
push
popf
lock
fcomp
stos
mov
pop
jmp
xchg
xchg
mov
push
xor
jae
loopne
ss
sar
adc
outs
mov
pop
call
inc
aam
call
mov
xor
mov
and
jp
mov
mov
xor
xor
daa
sbb
cld
mov
push
or
xchg
pop
in
mov
inc
pop
xchg
and
ret
ret
dec
fwait
int3
pop
mov
ret
push
add
pop
adc
adc
adc
jno
pop
sar
mov
push
xchg
dec
clc
daa
int3
fstp
mov
add
pop
add
cmp
aaa
stos
mov
sbb
(bad)
mov
mov
std
mov
add
(bad)
sbb
addr16
(bad)
add
loope
imul
or
stc
sub
aam
lods
mov
add
jmp
outs
or
into
xchg
cmp
xor
add
inc
cmp
std
pop
mov
mov
pop
jae
push
and
repnz
lahf
popf
mov
(bad)
add
imul
mov
test
cli
sar
mov
xor
push
idiv
push
adc
or
pop
add
fidivr
inc
cmc
rol
int
lods
in
pop
mov
pushf
outs
adc
mov
jns
inc
bound
stc
push
xor
adc
fild
inc
retf
dec
lds
js
and
lea
jb
inc
rcr
mul
push
sub
int
inc
mov
pop
jns
fisub
cmp
ret
or
pop
mov
push
(bad)
iret
retf
mul
daa
jge
adc
cli
sub
call
ins
jnp
push
adc
lea
enter
popa
jg
(bad)
movs
sbb
hlt
push
inc
xchg
imul
ins
das
outs
(bad)
sub
fsub
ror
sbb
and
xor
fmul
or
xor
stos
scas
jnp
ficom
jno
stc
loope
mov
mov
xchg
jmp
inc
mov
dec
(bad)
fist
jl
iret
xor
mov
enter
cmps
mov
or
cmps
rol
xor
ret
aad
dec
enter
sbb
idiv
sbb
inc
aad
pop
sbb
lods
mov
jmp
pop
pushf
ins
mov
sti
cmc
jecxz
jae
(bad)
pusha
push
push
rol
cmp
cwde
out
out
sub
jnp
movs
cli
fcomp
loop
push
mov
xchg
int
or
fisttp
daa
xor
sub
push
cwde
adc
xchg
mov
jmp
jne
outs
mov
out
mov
jl
mov
(bad)
push
aas
and
test
sar
enter
add
ds
and
mov
push
jne
aam
mov
jmp
xchg
pop
cmp
sbb
mov
mov
fwait
add
pop
and
cdq
sbb
sub
dec
or
push
shl
mov
jmp
xchg
shr
xchg
jns
enter
cmp
nop
nop
pop
es
cld
cdq
add
inc
leave
clc
(bad)
pop
(bad)
pusha
mov
mov
lds
leave
retf
cwde
push
test
xor
sbb
dec
jmp
dec
mov
or
jae
jg
test
icebp
mov
inc
mov
outs
sti
in
inc
ss
sbb
js
mov
pop
sub
popf
das
nop
out
mov
xor
adc
or
pop
movs
adc
pop
lea
inc
adc
ror
lock
fnstcw
ror
dec
cwde
mov
xchg
dec
push
stc
fmul
sbb
push
mov
stos
fs
sbb
sub
pop
push
pop
xor
xor
inc
pop
out
jecxz
mov
dec
rcl
mov
xchg
mov
adc
lahf
sar
call
pop
mov
pop
repz
stc
xlat
mov
std
jl
inc
aad
sub
xlat
out
and
leave
int
inc
vrsqrtps
stc
mov
add
push
test
aaa
cmc
cmp
mov
dec
pop
ins
pushf
cli
pop
and
int
add
addr16
inc
mov
add
repz
mov
inc
bound
cmc
pushf
adc
aaa
xchg
cwde
ror
jne
rol
sbb
cld
pop
sbb
inc
nop
clc
sub
xor
pop
outs
or
xsha1
cmps
dec
jae
add
arpl
adc
(bad)
or
retf
push
add
dec
mov
mov
fwait
sub
pop
cmps
in
jge
xor
call
push
scas
int3
repz
call
stos
cld
not
pop
pop
mov
push
xor
push
sub
jae
or
repnz
push
jnp
test
cld
dec
jo
xor
or
call
retf
inc
stos
jp
mov
dec
xchg
ds
pop
repnz
xchg
loopne
ins
stos
add
dec
test
adc
imul
ficom
dec
add
mov
enter
mov
out
out
(bad)
idiv
adc
rcl
sub
cmp
add
ror
or
cmp
lods
or
lods
cmp
pop
jmp
xchg
pusha
cmp
lea
shl
mov
arpl
push
mov
push
shl
mov
sub
pop
push
test
test
adc
bound
xor
adc
inc
push
test
jg
and
or
jne
cmps
aas
aas
int
in
gs
push
aaa
xchg
test
dec
adc
leave
sar
dec
ror
dec
mov
jecxz
add
inc
jns
xor
jle
loopne
cdq
jnp
xor
ins
pop
test
outs
pop
mov
mov
jge
sbb
call
shr
lods
or
fisttp
add
retf
out
mov
push
stc
mov
inc
xor
push
adc
test
pop
cdq
xor
es
out
icebp
(bad)
push
xchg
mov
pushf
and
daa
push
jmp
xor
popf
hlt
mov
push
pop
sahf
jle
aas
mov
jo
cmp
sbb
jbe
cmp
js
inc
test
lahf
mov
pop
clc
scas
cmps
test
xchg
iret
cwde
sub
(bad)
loopne
call
int
call
or
arpl
mov
outs
pop
and
or
hlt
repz
fild
xchg
adc
cmps
pop
fs
or
test
pop
adc
mov
cmc
aaa
push
fild
xchg
add
mov
nop
or
in
sub
and
mov
xor
imul
and
or
mov
pop
mov
dec
pop
test
adc
jo
repz
mov
adc
mov
mov
jae
movs
mov
sti
loop
arpl
adc
xchg
inc
cmp
in
sbb
xchg
mov
rcr
adc
div
dec
add
fimul
mov
xor
fadd
cli
cwde
jecxz
jmp
retf
loopne
mov
push
xor
or
aad
push
frstor
clc
outs
jb
mov
icebp
mov
sbb
pusha
mov
and
xchg
aas
loop
aam
loopne
(bad)
fiadd
lea
(bad)
cmp
fsubp
(bad)
push
scas
ja
stos
in
sub
mov
cmp
les
out
out
cmps
or
ret
sub
push
rcl
xchg
pop
or
and
ins
in
aas
sbb
adc
jge
jl
dec
or
sub
daa
sti
dec
aad
nop
dec
mov
lods
cli
inc
inc
dec
or
(bad)
pop
sub
shl
jne
pop
and
adc
nop
lods
(bad)
(bad)
(bad)
cmc
js
mov
popa
adc
mov
push
mul
lds
(bad)
neg
out
bound
xchg
push
ror
and
mov
adc
je
mov
(bad)
fbld
inc
rol
pop
mov
or
cwde
clc
out
lods
add
xor
repnz
push
ret
sbb
sahf
loop
cmps
add
aas
fs
cmps
scas
jl
xchg
mov
cmps
fisubr
sub
shl
test
mov
mov
cwde
in
ins
iret
pushf
sub
cmps
jnp
jmp
scas
fisub
mov
jmp
pop
mov
xchg
cmp
xor
test
push
neg
cwde
xor
pusha
mov
adc
jmp
mov
test
test
pushf
arpl
sub
rcl
das
dec
lods
adc
cmp
mov
in
mov
mov
sahf
mov
adc
sbb
sub
pop
rcl
fs
iret
push
mov
sbb
xchg
xor
xchg
sub
lds
fdivr
je
adc
shr
dec
fsub
lods
inc
sub
(bad)
das
and
in
das
(bad)
int3
or
cmp
test
adc
outs
sbb
stc
mov
or
out
dec
into
inc
hlt
cmc
mov
adc
lahf
hlt
int3
outs
fwait
sbb
and
xchg
jle
loope
and
repz
gs
test
adc
or
repz
arpl
into
jns
aad
into
sbb
sbb
or
call
add
mov
push
push
adc
lods
jp
sbb
aam
repnz
dec
outs
jmp
lods
or
add
ret
push
and
(bad)
jo
and
add
mov
lock
and
mov
dec
stos
fwait
mov
mov
cmps
movs
test
jecxz
push
dec
fwait
daa
rcl
push
pop
leave
out
pop
mov
cmp
push
xchg
sbb
mov
fs
dec
adc
cld
fs
dec
and
in
popa
or
inc
je
jbe
scas
mov
or
cmp
ficom
xchg
sbb
ror
cli
into
rcl
popa
lds
xor
jb
dec
retf
daa
inc
inc
cmps
fmulp
cmp
shl
ss
loop
in
pop
retf
outs
or
jg
imul
pushf
mov
popa
fnstsw
jno
lods
jmp
inc
inc
push
outs
fcomp
daa
cmp
lods
adc
clc
mov
cmps
pop
push
jbe
jecxz
sbb
ror
outs
mov
mov
inc
outs
das
and
adc
(bad)
push
mov
dec
clc
fwait
mov
and
cwde
add
icebp
adc
and
jnp
push
xor
mov
outs
push
jo
loope
inc
test
push
cmps
sahf
out
sbb
add
add
xchg
jge
sub
jmp
add
add
xchg
ja
scas
cmp
push
rcr
push
pop
cmp
jmp
mov
mul
jl
push
cmp
xchg
push
fld
out
pop
push
inc
(bad)
sbb
adc
and
mov
cmp
imul
add
xor
sbb
cmp
and
push
inc
sbb
rol
aas
xchg
mov
mov
push
cmp
ret
sub
nop
push
xchg
fs
mov
mov
out
jp
je
fs
daa
inc
add
ins
fwait
(bad)
pusha
pop
xor
test
adc
inc
lds
cmp
inc
test
xchg
arpl
pop
hlt
mov
cmp
jmp
call
add
rcl
repz
(bad)
out
dec
loope
or
fistp
sbb
jmp
mov
dec
daa
cmc
jb
fisttp
ret
pop
sbb
cmp
test
or
cmp
gs
pop
ror
lea
fnsave
movs
ds
and
jmp
jecxz
xchg
xor
cdq
out
cmp
pop
jns
lahf
mov
aaa
sub
jno
cmc
push
xor
hlt
cmc
xchg
push
sbb
and
dec
jle
arpl
out
mov
mov
enter
jo
xchg
push
rcl
call
sti
mov
mov
cwde
xor
jb
icebp
int3
or
add
xchg
sti
lock
jae
push
mov
(bad)
push
enter
jno
fs
inc
ins
mov
sbb
xchg
daa
mov
loopne
push
repz
mov
movs
or
and
data16
xor
pusha
pop
in
rcr
sti
int
mov
jbe
adc
push
jl
xlat
jnp
inc
push
call
loope
fadd
xchg
stos
jnp
adc
add
test
sahf
shl
popf
sub
cli
pop
imul
shr
call
fwait
cmps
mov
rcr
mov
ins
out
jmp
in
cmp
pushf
dec
jmp
mov
jns
lahf
dec
lds
xor
adc
xor
in
sub
mov
in
cmp
dec
or
xor
(bad)
mov
retf
mov
pop
fld
into
xor
inc
xor
sub
frstor
xchg
jle
movs
mov
cmp
fldcw
call
out
cmps
(bad)
add
ja
mov
pop
mov
pop
arpl
out
sub
cmp
retf
xor
idiv
and
call
dec
or
cdq
div
mov
inc
mov
mov
enter
adc
mov
out
int
jle
jg
leave
sbb
mov
xchg
cli
aaa
call
ins
xchg
ret
xor
repz
pop
bound
loope
sbb
sub
test
stos
iret
cmp
or
(bad)
movs
dec
dec
mov
cld
push
xor
out
les
fdivr
loope
add
(bad)
cwde
sti
mov
jne
(bad)
jge
pusha
retf
mov
jo
push
cmp
jle
mov
inc
sbb
repnz
cmps
or
test
xor
out
and
inc
(bad)
pop
clc
shr
(bad)
outs
in
inc
push
inc
dec
ins
inc
imul
mov
mov
jge
in
inc
cmp
and
mov
lea
and
dec
into
sbb
add
out
dec
fld
fcom
sar
cmp
in
ja
sbb
add
push
mov
sbb
dec
mov
inc
ja
clc
pusha
(bad)
adc
cmc
or
cmps
xor
jb
xchg
or
in
lods
sub
fisubr
or
scas
or
aad
sahf
mov
inc
(bad)
sbb
pop
adc
dec
jb
dec
adc
stos
push
inc
sub
and
clc
cdq
pop
stos
jno
ja
mov
push
cmps
mov
mov
mov
stc
mov
repnz
and
xor
int
test
or
dec
repnz
pushf
xchg
sbb
pop
xor
daa
stos
dec
(bad)
push
mov
jns
xor
scas
mov
dec
fwait
push
xchg
xchg
stos
hlt
jle
(bad)
neg
jnp
jecxz
dec
jmp
dec
fnsave
out
cmc
ret
inc
repz
inc
int
sub
mov
std
dec
and
push
inc
(bad)
fs
dec
fisub
(bad)
pop
aad
pushf
adc
fmul
mov
and
lock
sti
xlat
dec
and
fstp
or
inc
jl
jge
xchg
push
fadd
xor
scas
test
inc
aas
inc
push
lods
jns
lods
cmc
or
cmc
mov
sbb
push
adc
lods
inc
in
(bad)
jnp
cmp
outs
stos
jmp
fldlg2
ss
out
mov
call
jo
inc
ja
(bad)
int3
mov
aam
mov
add
ins
mov
int3
mov
sub
ret
sub
inc
ret
rcr
xlat
in
lods
pop
fld
cmp
mov
jmp
xchg
ins
ret
or
mov
sbb
cdq
dec
and
push
imul
ficomp
pop
jmp
sbb
not
mov
mov
aaa
jbe
add
popf
mov
cli
aas
add
in
jg
or
inc
adc
jbe
mov
dec
cmp
xchg
adc
call
fstp
hlt
call
fs
jge
jmp
sti
pop
rcl
shr
repz
cmp
rol
adc
dec
pop
sub
mov
shr
adc
popa
retf
shl
adc
sbb
call
out
shl
mov
jmp
adc
dec
test
pop
std
xor
or
add
dec
in
call
jae
dec
push
sub
fistp
jle
add
xchg
scas
add
enter
sub
inc
jle
fs
inc
and
mov
mov
cmp
push
addr16
lock
jecxz
cmp
cdq
push
iret
lods
sbb
adc
sub
(bad)
in
add
test
xlat
bound
add
mov
dec
pop
or
sub
(bad)
push
enter
div
jmp
add
inc
add
mov
(bad)
imul
out
mov
sub
inc
shl
in
or
or
and
cmp
pop
mov
into
test
nop
std
in
pop
cmp
mov
and
(bad)
xchg
add
and
(bad)
pusha
stc
mov
sub
inc
popf
push
sbb
cmp
xlat
jns
test
jbe
xlat
rcl
or
jg
retf
xchg
mov
mov
test
push
neg
cwde
lahf
add
je
scas
xchg
jmp
jle
cs
add
into
adc
fsub
das
pop
popa
imul
fdivr
or
je
push
and
jg
fcomp
fisttp
mov
mov
pop
dec
loopne
inc
xchg
mov
cmp
dec
js
push
nop
(bad)
iret
xor
xor
rcr
xchg
xchg
loopne
mov
cmps
js
out
add
test
inc
not
rcl
mov
and
fdivr
jmp
push
jne
mov
cmc
(bad)
jne
scas
inc
imul
and
ins
hlt
fistp
(bad)
ja
sub
ss
add
ins
fs
inc
shr
mov
test
arpl
sbb
lahf
js
xor
ins
adc
stos
jae
(bad)
std
push
xchg
movs
popf
das
lahf
xlat
inc
xchg
ret
shr
push
or
je
or
xchg
push
add
mov
ficom
jp
mov
shr
dec
imul
pop
movs
nop
dec
mov
add
xchg
dec
enter
adc
mov
xchg
call
fist
inc
pop
mov
nop
jno
jmp
imul
(bad)
or
or
cdq
enter
or
cmps
sub
mov
pop
aad
cmp
rol
xchg
jmp
xchg
push
inc
cmp
inc
scas
jmp
(bad)
mov
fwait
cmp
jnp
ins
fdivr
repnz
hlt
and
outs
ja
add
ret
jmp
inc
inc
outs
adc
adc
ja
inc
mov
push
ss
addr16
pop
shl
xchg
(bad)
test
adc
push
call
lods
xchg
aaa
icebp
(bad)
sub
adc
test
cmps
lea
cmp
int3
add
shl
mov
clc
ffree
out
shr
push
xor
cmp
movs
inc
pop
and
adc
rcl
dec
ins
in
adc
mov
aam
pop
inc
icebp
aam
rol
jmp
in
rcl
fucomi
hlt
aad
cmp
stos
out
daa
mov
adc
dec
xchg
int
movups
pop
adc
mov
push
push
loope
int3
retf
ret
call
add
sub
sti
js
test
test
imul
loopne
outs
loop
sar
mov
sub
je
sti
xchg
add
xchg
hlt
stos
stos
sub
inc
mov
test
jle
adc
nop
iret
(bad)
test
test
fstp
jo
and
outs
int
retf
xchg
mov
xor
enter
(bad)
scas
fisttp
adc
pop
adc
or
inc
xlat
outs
xchg
mov
add
es
mov
or
stos
inc
jo
push
mov
sbb
fld
mov
dec
retf
ret
push
daa
push
mov
aam
(bad)
je
aam
push
(bad)
dec
mov
cmp
popf
xchg
imul
retf
xchg
aad
add
and
jae
hlt
repz
js
icebp
out
ja
sub
xor
nop
mov
repz
stos
stos
mov
mov
xchg
inc
xchg
lds
test
lock
movs
or
repnz
jle
xor
jmp
ss
mov
es
jle
jbe
adc
xchg
cmp
(bad)
sbb
push
cld
scas
dec
js
rcr
in
jnp
clc
pop
cmc
adc
movs
dec
loope
ret
out
aas
loopne
push
out
and
sub
adc
push
aam
out
xor
push
repnz
jbe
mov
out
pop
xchg
ds
outs
adc
daa
inc
sbb
inc
int
sbb
stos
out
xlat
push
jge
push
fnstsw
neg
movs
pop
dec
jmp
sbb
shl
pop
cmc
int
jge
(bad)
xor
lock
outs
retf
push
cmp
or
scas
ds
cwde
pusha
mov
aam
jne
mov
out
mov
adc
fisubr
inc
xchg
sti
ins
lods
lahf
out
aad
fdivr
sub
leave
std
xor
imul
dec
inc
clc
call
mov
mov
inc
pop
scas
mov
pop
xor
or
xchg
cld
neg
xchg
mov
popf
or
(bad)
fild
push
xchg
neg
iret
mov
loop
jmp
int
mov
sbb
xchg
and
fbld
ror
nop
dec
jne
push
mov
out
xor
retf
jl
xor
test
jg
jmp
push
test
out
js
lods
popa
in
jmp
sub
les
jne
shr
cli
out
in
imul
sub
cmp
cwde
sbb
das
adc
les
loopne
xchg
push
push
dec
push
stos
jo
gs
mov
(bad)
and
push
int3
cli
mov
ret
popa
xor
neg
jp
xor
popf
adc
(bad)
xor
push
fwait
stos
xor
lea
and
inc
xchg
mov
iret
cmp
sub
sub
sub
dec
out
sub
faddp
push
or
jmp
ins
xchg
xor
nop
cli
push
jb
or
gs
pop
inc
movs
dec
aad
mov
jne
push
frstor
arpl
sub
cmp
rcr
sbb
je
ins
ins
scas
loopne
aas
stos
adc
push
mov
push
or
in
fld
jno
pop
mov
into
add
ja
xor
out
clc
xchg
push
xchg
sbb
xchg
jge
retf
loope
ret
xchg
test
xchg
xor
int
gs
or
ja
lahf
mov
lea
into
cld
mov
fistp
ficomp
mov
jnp
cli
ret
inc
into
imul
test
push
mov
shl
jge
out
adc
sbb
mov
sti
push
(bad)
ror
push
int
mov
bound
push
pusha
push
push
dec
xchg
mov
and
outs
pop
xchg
fs
xchg
loop
dec
sbb
in
jnp
lods
or
into
das
cmp
das
and
enter
mov
js
push
pop
loope
cmp
jbe
pop
mov
inc
mov
std
(bad)
xor
cmp
ror
sbb
loope
pushf
ins
cwde
mov
fisub
mov
ss
add
pushf
and
clc
adc
jp
lahf
dec
scas
xchg
mov
sbb
stc
imul
adc
inc
push
push
xchg
jb
(bad)
inc
in
shr
mov
mov
test
jmp
loop
aaa
add
pop
in
add
or
sbb
or
call
mov
jbe
or
inc
xor
xchg
dec
loop
out
push
or
sbb
cdq
dec
xchg
jmp
fwait
pop
mov
mov
mov
int3
movs
scas
mov
inc
mov
add
fisubr
es
mov
jne
fnsave
jg
jecxz
enter
fisubr
mov
test
mov
mov
xor
lods
xchg
(bad)
int3
and
cmp
sub
push
stos
movs
loope
mov
mov
push
inc
add
iret
loopne
adc
(bad)
leave
mov
pop
cmp
lods
sbb
jmp
jmp
(bad)
jnp
(bad)
jbe
rcl
add
cmp
xchg
inc
retf
pop
mov
jmp
or
inc
popa
aaa
call
mov
movs
sub
ret
mov
mov
popa
sbb
add
add
sahf
daa
and
in
mov
lahf
jle
shr
and
mov
mov
cmc
std
xlat
bound
jge
std
shl
mov
mov
jno
mov
mov
imul
mov
inc
imul
rcl
mov
cmc
cwde
cmp
or
jmp
ret
ret
rol
jmp
imul
jp
pop
mov
xchg
sti
pop
mov
data16
jle
gs
dec
lock
retf
jmp
xor
les
cdq
or
inc
adc
mov
(bad)
rcl
push
daa
pop
add
pop
aad
mov
jbe
out
mov
sti
add
pop
iret
lods
enter
int
fidiv
pop
pop
adc
nop
push
mov
call
cld
and
push
and
push
movs
push
ja
mov
fwait
and
(bad)
jae
(bad)
jbe
mov
jmp
push
dec
mov
mov
xchg
mov
sub
mov
xor
xchg
(bad)
fstp
test
aad
jnp
sub
mov
xbegin
inc
add
mov
and
push
push
into
loope
call
aaa
rcl
inc
xlat
push
stos
mov
shr
rcr
xor
in
aam
inc
push
and
cmp
loope
lds
xor
or
imul
ins
mov
mov
or
ror
shr
cli
dec
push
xor
adc
pop
movs
add
mov
movs
pop
fidivr
fistp
(bad)
push
push
mov
dec
lods
cmc
outs
xor
dec
int3
mov
jl
lods
xor
dec
ins
aas
movs
lock
shr
(bad)
and
repnz
or
shl
mov
(bad)
xchg
movs
or
inc
fimul
movs
sbb
push
sbb
fucomi
cld
sub
jae
cmp
dec
push
dec
cmp
xchg
les
jmp
mov
es
pop
pushf
lds
xchg
or
ins
cdq
lods
pop
jle
sbb
call
cmp
clc
pusha
mov
and
jb
sti
dec
(bad)
mov
in
mov
sub
sub
aad
mov
js
mov
mov
inc
cmp
jae
out
adc
cmp
movntps
xchg
push
jno
mov
out
aam
pop
mov
inc
ins
lahf
mov
pop
mov
jl
fisub
out
mov
add
in
mov
repnz
xor
or
push
adc
ins
sbb
sbb
sahf
and
xchg
loop
ins
(bad)
aad
pop
popf
pop
inc
pop
outs
(bad)
jne
xchg
in
scas
enter
mov
mov
add
cwde
dec
sbb
push
sbb
push
mov
fdiv
cli
js
cdq
add
stos
xchg
movs
cmp
push
pop
jge
and
mov
sub
jmp
sub
movs
push
mov
(bad)
and
data16
imul
push
inc
lock
int3
adc
retf
call
and
mov
(bad)
push
adc
(bad)
mov
(bad)
xchg
mov
arpl
jbe
cmps
out
mov
fnsave
and
xchg
pop
dec
je
add
pop
xchg
lea
jp
out
xchg
pop
jo
pop
xchg
in
or
pop
jg
pop
fcom
ss
aad
test
mov
push
je
xchg
fwait
push
sbb
pop
push
jmp
pop
cmps
jbe
jmp
sbb
and
inc
arpl
cld
pusha
cmp
cmps
jle
dec
jl
inc
sbb
ss
mov
and
sub
add
leave
inc
in
out
mov
inc
sub
(bad)
call
clc
out
loope
call
pop
js
(bad)
rol
push
and
es
std
mov
mov
lods
mov
gs
fiadd
pop
cmc
jne
push
jne
xchg
and
jns
bound
cmps
test
imul
sbb
jmp
pop
mov
outs
mov
xor
pop
std
push
mov
xchg
pop
popa
jne
sti
cmp
xor
xchg
and
xchg
repz
mov
push
add
sti
mov
pushf
in
push
in
inc
int3
ja
stos
movs
aam
mov
shl
das
int
fild
or
or
movs
cmp
mov
daa
sbb
pop
mov
dec
mov
and
lods
movs
(bad)
xor
daa
leave
jl
cmc
cmps
das
jne
mov
and
inc
arpl
jmp
stos
lea
mov
sti
and
jno
and
into
loop
fsub
mov
aaa
loop
or
fisttp
loope
add
arpl
jmp
and
call
fld
stc
test
sub
in
ret
inc
clc
out
fidiv
jg
inc
adc
imul
add
mov
dec
stc
fs
mov
xor
test
jne
call
retf
(bad)
fistp
retf
sbb
or
pushf
xchg
int3
das
lods
(bad)
jge
mov
jnp
mov
push
daa
sbb
mov
cmc
cmp
loopne
sub
leave
mov
sar
mov
mov
in
mov
popf
cmps
mov
das
stos
loope
ja
jmp
pop
mov
loope
rol
imul
sbb
pop
push
inc
scas
mov
xor
inc
mov
mov
sahf
fnstsw
mov
loope
popa
movs
xchg
jns
or
cmp
push
ins
gs
(bad)
dec
out
sbb
ror
add
(bad)
sbb
fnstcw
dec
out
aaa
cmp
inc
bnd
or
or
jnp
fwait
push
jl
fwait
ror
pusha
adc
nop
dec
dec
push
pusha
xlat
pusha
mov
cmps
adc
sub
out
popf
push
aaa
jmp
out
and
jns
test
(bad)
movs
div
lea
cli
mov
and
push
loop
test
and
iret
mov
inc
mov
test
dec
cwde
push
mov
mov
xor
push
aad
push
outs
and
sbb
mov
adc
mov
inc
call
sbb
jmp
mov
(bad)
sti
push
sbb
mov
leave
loop
lds
mov
mov
pop
pop
mov
inc
xchg
mov
mov
sbb
addr16
jae
or
sub
jmp
mov
push
in
ficom
fs
and
je
adc
int
retf
mov
xor
dec
jl
and
pop
mov
push
or
mov
dec
(bad)
shl
mov
in
ret
jle
pop
and
ss
cmp
sbb
cwde
sub
xchg
ret
inc
push
(bad)
outs
popa
lahf
rcr
(bad)
mov
jmp
add
cmc
cmps
lods
aad
(bad)
in
adc
bound
bound
xchg
int
call
adc
test
out
loopne
pushf
or
xchg
mov
(bad)
mov
xchg
lock
ja
add
stos
nop
xor
cmp
pop
imul
push
ins
dec
dec
mov
xchg
push
addr16
pop
push
movs
lods
xor
dec
jge
or
fisub
loop
dec
push
popf
lods
inc
cdq
adc
test
aam
bnd
test
call
pop
jo
mov
mov
jge
mov
sti
std
cmps
clc
jns
jge
cmp
pop
repz
xor
(bad)
in
shr
cmp
ja
mov
xchg
cmps
hlt
adc
xor
mov
mov
fimul
test
jmp
repz
clc
dec
out
cmp
push
and
mov
jge
push
retf
jecxz
mov
jmp
rol
jae
imul
(bad)
in
mov
out
scas
repz
push
pop
fisubr
fcmovnbe
jmp
sub
sbb
cs
dec
sbb
jo
sbb
cs
mov
into
movs
out
shr
std
push
call
popa
outs
arpl
ins
dec
mov
pop
movs
xor
std
xchg
popf
in
mov
xor
add
mov
lods
dec
lea
cmp
std
popw
ds
xor
xchg
popa
mov
aam
int
call
push
pop
or
lods
jle
push
mov
push
in
mov
xchg
sar
(bad)
sbb
mov
jns
push
xchg
outs
ror
sub
mov
lods
adc
xor
inc
sahf
add
cmps
xor
jb
sub
rol
push
jae
movs
shr
lods
ret
and
sahf
cmp
cmp
pop
xlat
mov
out
aas
cdq
loop
add
dec
inc
loope
loopne
xchg
sub
cwde
int3
and
add
in
loop
mov
push
xchg
clc
std
cmps
xchg
scas
dec
leave
push
cmps
xchg
pop
test
mov
lock
push
cmp
test
add
loopne
loopne
xor
int3
cmp
mov
mov
lock
xchg
into
dec
cs
or
dec
gs
lahf
ficom
pop
mov
xchg
jae
dec
xor
and
in
fs
mov
cmp
mov
aad
adc
add
sub
push
push
mov
repnz
(bad)
out
repz
arpl
mov
jecxz
add
bound
mov
shl
sub
nop
sar
mov
(bad)
lahf
pop
add
les
pop
and
bswap
(bad)
pop
sbb
mov
movs
js
js
pop
cwde
jae
(bad)
out
sub
cmp
pop
adc
daa
mov
pop
xchg
call
sub
gs
cmps
inc
inc
xor
ins
sub
stos
ja
push
pop
pop
repnz
mov
dec
rol
push
adc
cmp
lock
inc
fimul
arpl
jg
inc
mov
or
push
and
lea
cwde
ja
push
clc
inc
mov
add
cld
pop
jo
je
jns
pop
and
xchg
sbb
mov
rcr
mov
sar
mov
xor
mov
lea
fst
inc
or
mov
cli
out
call
and
and
movs
xlat
clc
pushf
imul
adc
cmp
mov
xchg
leave
sbb
fsubrp
outs
inc
cmps
ror
add
push
enter
cmps
xchg
sbb
int
mov
fstp
hlt
mov
mov
xor
mov
data16
pop
aaa
add
cli
clc
jno
ficomp
aaa
aas
or
fsubp
and
sub
mov
(bad)
sbb
popa
dec
pusha
push
les
mov
jnp
ss
or
or
ret
jno
or
addr16
mov
pusha
inc
and
cmp
stc
popa
jmp
inc
(bad)
jge
lahf
jno
leave
cwde
add
sar
ins
or
lds
inc
sub
call
lock
adc
stc
imul
pop
mov
in
ds
push
adc
js
mov
cmp
inc
inc
mov
xchg
xor
jns
jo
add
mov
fisttp
ins
adc
(bad)
outs
ja
pop
pop
add
sbb
sub
adc
mov
add
(bad)
sahf
ffreep
xchg
inc
js
mov
push
nop
jle
push
gs
cdq
pop
ins
clc
jno
mov
add
inc
sbb
pop
pop
xchg
mov
xchg
arpl
mov
jg
push
adc
xor
(bad)
sbb
pop
fadd
nop
pop
add
gs
jg
cld
aas
mov
mov
enter
daa
mov
dec
mov
(bad)
jnp
nop
xor
or
cmp
sub
les
inc
jg
int
sub
lock
popf
cmps
xlat
dec
sahf
fadd
sbb
xor
test
sar
enter
xchg
inc
add
xor
add
js
mov
shl
jbe
test
xchg
repz
movs
(bad)
setge
jmp
ins
in
or
push
clc
mov
push
dec
daa
bnd
cmps
or
idiv
sahf
jnp
jge
sub
arpl
(bad)
in
dec
cmp
xor
xor
adc
in
xchg
ss
icebp
mov
std
add
js
stc
xchg
test
add
jnp
mov
cmc
stc
push
cmc
xor
rol
push
in
movs
xor
xchg
shl
sub
xlat
bound
(bad)
xor
push
sbb
mov
sub
ret
cmp
call
ins
je
push
xor
adc
mov
jg
cmp
or
scas
cmc
lods
aam
mov
fdiv
mov
jb
and
bswap
fdiv
not
add
fcom
pop
jmp
movs
fsub
or
mov
loop
test
dec
push
leave
mov
or
mov
add
jno
mov
cmps
or
call
push
mov
ins
xchg
sub
lahf
push
and
sub
test
int
sub
push
loope
hlt
push
mov
pop
int
loop
(bad)
pop
pop
es
pop
jmp
cmp
mov
(bad)
push
mov
jecxz
mov
test
ss
les
sahf
mov
std
mov
pop
popa
mov
mov
push
sub
popf
sahf
mov
in
ret
fcmovb
sub
aas
push
sub
xor
(bad)
scas
mov
enter
xchg
aam
enter
inc
mov
inc
cmps
cmp
jg
loopne
jns
sbb
std
out
xchg
jnp
inc
js
add
es
push
mov
mov
and
cmc
call
cld
addr16
xchg
mov
dec
call
xor
push
cmc
dec
push
pop
movs
add
xor
movs
and
daa
push
ja
and
imul
xchg
mov
cwde
rol
ss
fiadd
leave
cmp
or
lds
arpl
inc
aad
or
fist
or
aam
fiadd
ins
mov
fstp
aam
sub
or
mov
stc
pop
nop
xchg
jmp
cli
dec
rcl
pusha
shr
enter
pop
lahf
xor
push
int3
loope
es
dec
cld
outs
xor
test
jg
js
in
scas
dec
jp
cmp
mov
or
sti
imul
sbb
loope
mov
fistp
(bad)
dec
inc
add
call
sub
pop
dec
sbb
and
mov
push
cli
ficomp
shr
repz
addr16
cmp
lds
jbe
push
pusha
sbb
pop
daa
sti
lods
and
xor
movs
dec
(bad)
adc
and
sbb
retf
mov
cmp
ret
in
mov
adc
push
cmp
push
pop
aaa
popa
sbb
inc
aaa
push
mov
jne
cmp
mov
push
or
adc
in
inc
ja
imul
mov
inc
into
cmps
mov
cwde
add
adc
dec
and
mov
jp
sar
data16
mov
cmp
sub
lahf
aam
pop
hlt
sub
inc
out
pop
inc
pop
test
into
mov
loop
xchg
sub
mov
mov
fsubr
test
rcr
fdiv
push
popf
and
retf
mov
pop
mov
dec
dec
mov
add
hlt
repz
jno
jmp
out
shl
imul
cwde
push
cmp
sbb
cmp
pop
in
loope
das
push
repnz
xchg
mov
adc
pop
mov
stos
clc
adc
leave
inc
dec
cmp
stc
rol
pop
cld
mov
and
mov
sub
mov
cmp
imul
dec
add
in
int3
aad
dec
pop
push
push
sbb
push
mov
push
xchg
imul
and
add
data16
xchg
xchg
pop
(bad)
mov
xchg
ds
(bad)
or
fdivrp
jnp
movs
adc
push
cmps
(bad)
js
mov
mov
xor
imul
push
shl
div
sahf
push
scas
cmc
xchg
test
push
or
icebp
retf
mov
js
cmps
cs
add
and
adc
scas
push
dec
add
(bad)
sbb
push
seta
jmp
mov
pop
push
fadd
dec
dec
dec
push
adc
dec
gs
ffreep
inc
mov
lock
xor
add
popa
jb
int
push
push
(bad)
push
add
inc
add
xor
push
call
test
jae
pop
push
cdq
imul
jmp
cmp
popf
mov
repz
jnp
mov
push
inc
lods
and
sahf
or
ja
jmp
mov
pusha
mov
idiv
lea
inc
push
ja
in
pop
mov
xor
lahf
lds
mov
add
movs
inc
inc
push
xor
ins
adc
pushf
fldenv
sti
out
lea
clc
push
inc
movs
push
call
pop
mov
lahf
xor
ficom
mov
dec
mov
push
add
xlat
xlat
loop
sahf
add
mov
aas
sbb
outs
call
lock
jo
pop
xchg
mov
test
mul
adc
push
fild
js
pop
sbb
scas
push
cmp
push
mov
sub
cmp
test
bnd
test
jne
adc
jnp
lods
mov
inc
jp
pop
jo
stos
cmc
into
adc
ins
hlt
cmp
out
imul
jg
add
or
in
cmc
and
add
mov
jl
push
xchg
or
jnp
pop
sub
std
jns
jmp
xor
jnp
aad
xor
pop
rol
test
adc
shl
mov
inc
dec
call
rcr
and
mov
enter
or
and
adc
mov
stos
mov
adc
dec
xor
inc
and
jno
test
retf
cmp
xor
jbe
test
fcomp
add
mov
mov
mov
outs
aas
xor
and
pop
fs
push
jmp
cmps
and
dec
sbb
add
popf
and
push
dec
and
repnz
inc
add
mov
icebp
push
rcl
mov
fld
nop
fcomp
out
jge
mov
mov
mov
dec
ds
adc
sahf
mov
jl
or
stos
cwde
mov
sbb
test
cwde
popf
repnz
ret
fldcw
jb
sbb
stos
mov
sbb
mov
popf
dec
jp
mov
adc
and
in
xchg
sbb
xchg
and
cld
bound
pop
inc
(bad)
fisubr
repnz
pop
test
stos
mov
inc
pop
sub
cdq
int
push
scas
dec
xchg
iret
jo
aas
xchg
cld
cli
bound
dec
enter
ja
xchg
pop
dec
cmps
cmp
scas
(bad)
out
daa
and
lock
das
shr
pushf
das
test
addr16
inc
or
and
imul
loope
ror
(bad)
xor
test
leave
loopne
inc
fild
jl
test
mov
cmp
pusha
ret
gs
inc
mov
jg
std
out
int
cli
enter
shl
cmp
push
push
popf
jno
mov
test
cmc
mov
shl
arpl
lods
shr
add
xor
iret
fadd
mov
adc
jp
sti
iret
jecxz
cmps
pop
xor
aam
fild
sahf
or
in
shl
cmc
sbb
loope
push
and
or
sbb
and
out
(bad)
sbb
popa
push
cmp
stc
ret
ret
sub
arpl
sub
ss
push
fyl2x
push
int
inc
rol
lea
js
dec
mov
push
jecxz
dec
pop
enter
lea
aad
sub
js
xor
icebp
mov
outs
shr
sub
jno
mov
or
xor
cmp
call
jns
fisub
push
dec
pop
lds
call
push
fld
jl
(bad)
fst
in
retf
mov
sub
(bad)
out
enter
sub
gs
pop
push
dec
popa
inc
fbstp
xchg
paddsw
push
mov
sub
rcl
shl
imul
mov
icebp
xlat
(bad)
push
pop
fld
mov
or
in
pop
shl
mov
inc
inc
repnz
cmp
outs
in
test
dec
add
xor
cmp
push
out
mov
dec
and
push
sbb
test
sub
ret
repz
mov
jne
call
shr
or
sub
sub
inc
inc
xchg
ja
stos
jae
pop
cmp
mov
loope
dec
out
ss
outs
sbb
cdq
rol
les
sub
jl
sbb
inc
lods
or
cwde
cmp
out
ins
es
xor
pop
cwde
pop
std
aam
mov
mov
jle
lock
ins
(bad)
stos
adc
pop
ret
hlt
xchg
fcomp
mov
les
(bad)
rcr
pop
(bad)
push
data16
mov
mov
(bad)
ret
inc
pushf
sbb
mov
je
test
push
mov
sub
jmp
mov
retf
sub
cli
add
(bad)
out
fbld
sub
int
cmp
or
sahf
lods
jle
fnstenv
loope
jne
and
enter
adc
add
jge
cdq
push
dec
int
outs
add
aam
push
(bad)
iret
rol
es
push
cmps
jno
pop
cld
push
out
mov
frstor
sub
jno
push
out
dec
or
xchg
add
retf
imul
dec
add
bound
pop
mov
push
rcl
pop
in
or
push
aaa
jno
cmps
test
inc
test
inc
push
pop
mov
out
adc
shl
and
test
icebp
pusha
mov
mov
mov
lock
pop
loopne
ds
and
xor
mov
(bad)
xchg
into
loop
jge
nop
mov
int
cmp
pop
test
pop
stos
out
loop
or
shr
ficomp
push
popa
sbb
shl
sbb
xchg
std
dec
out
(bad)
xor
icebp
cmp
push
mov
adc
nop
xchg
or
pop
movs
lods
movs
or
dec
retf
fs
dec
push
push
jmp
xor
mov
loope
pop
push
jae
adc
mov
add
hlt
mov
xchg
jecxz
mov
scas
jnp
gs
pop
out
xor
mov
rcl
jmp
in
push
mov
jg
aad
out
daa
jo
pop
xchg
sti
mov
jg
fadd
xor
pop
sti
mov
xor
push
mov
push
jo
fwait
cdq
scas
xchg
out
fmulp
nop
mov
rcr
std
pop
mov
repnz
test
pop
ss
dec
cmp
jmp
loope
jno
add
mov
inc
cmp
pop
jae
cwde
cmp
imul
ja
(bad)
out
pop
cmp
idiv
call
jo
hlt
(bad)
sub
jns
jp
sub
(bad)
rcr
pop
xchg
add
sub
fwait
lods
xor
scas
push
scas
push
add
sub
jmp
in
push
lds
(bad)
frstor
sbb
pop
and
lock
add
jg
add
je
fisub
or
loope
addr16
pushf
sub
push
sbb
scas
shl
mov
sub
ror
sub
jnp
jg
inc
inc
int3
xchg
pusha
jg
int
pop
pusha
out
ins
jo
fistp
push
sub
adc
push
test
add
imul
add
cmp
(bad)
nop
add
out
mov
dec
push
or
sbb
pop
cmps
test
pop
mov
fisttp
add
fucomp
cmp
inc
cs
sub
repnz
clc
push
ret
jb
mov
inc
pop
or
pop
ds
push
aam
fidivr
movs
pusha
add
and
int3
or
test
mov
jge
pop
sub
dec
aad
add
push
dec
fwait
sti
bound
jmp
sbb
jmp
push
outs
mov
test
push
cs
jp
sbb
rol
test
and
cmp
mov
aas
data16
loop
cs
jbe
xor
mov
fwait
in
mov
push
je
jno
outs
call
call
jmp
(bad)
scas
dec
ret
inc
enter
fisubr
xchg
push
in
mov
fst
pop
fcomp
mov
push
js
ja
fnstcw
hlt
push
icebp
loope
inc
ins
sub
dec
adc
jp
push
lds
push
outs
in
mov
add
push
rcl
cmps
xor
mov
add
(bad)
out
mov
clc
test
mov
mov
leave
aaa
pop
(bad)
dec
add
movs
outs
push
and
push
or
add
lds
cmp
push
sbb
push
pop
pop
jns
jmp
add
jae
and
xlat
cmps
call
push
retf
fistp
jo
fadd
imul
sbb
xchg
js
mov
and
out
xchg
ja
cmps
test
pushf
mov
cmps
cmp
mov
out
pop
out
lds
jecxz
frstor
pusha
sub
mov
sar
xlat
jp
mov
xor
fild
cdq
mov
outs
dec
sbb
sbb
retf
retf
adc
stc
cwde
repz
push
mov
loope
jbe
xchg
add
inc
mov
stos
xchg
xor
sub
jne
outs
mov
push
mov
lock
pop
fidiv
pop
gs
pop
and
add
dec
mov
mov
cmp
fmul
sahf
ficom
(bad)
xor
jge
inc
lods
sti
adc
mov
sub
push
jns
xor
fmul
or
xchg
jb
xchg
mov
ins
stc
es
out
jno
rol
pushf
cs
jg
in
cmp
or
push
xchg
mov
adc
sub
jp
mov
mov
mov
mov
sub
dec
mov
outs
shl
xchg
fwait
mov
test
mov
inc
lock
sbb
mov
mov
outs
inc
inc
cmp
cmc
add
mov
cmps
xchg
cmp
clc
xchg
xchg
xchg
retf
adc
or
mov
mov
jne
sub
stos
xchg
and
ds
(bad)
ds
cmp
aaa
sbb
rol
inc
mov
pop
mov
aas
data16
call
push
or
inc
dec
jo
mov
xlat
sub
mov
test
jbe
jb
sahf
pop
push
outs
loope
xchg
push
jbe
out
in
jae
sti
in
add
retf
sub
mov
xchg
dec
sbb
push
hlt
sub
ins
popf
out
lods
fistp
clc
data16
stos
sub
out
jo
mov
iret
mov
repnz
jl
adc
dec
xor
pop
sar
dec
fstp
dec
and
ja
mov
mov
push
dec
mov
add
fmul
cs
pop
xchg
cmp
pop
mov
cmp
movs
in
repnz
add
sub
adc
xor
out
xchg
iret
and
mov
shl
add
repz
clc
aaa
lahf
shr
sbb
add
cmp
pop
and
sar
mov
repnz
push
aaa
cmp
add
fcom
xchg
jnp
fiadd
aas
pop
mov
shr
mov
push
sbb
fiadd
ja
pop
xor
sub
stos
js
pushf
jmp
push
shl
add
loop
cdq
pop
int3
xchg
inc
rol
mov
ins
lods
mov
mov
sbb
cmp
mov
lahf
in
in
add
cmp
push
mov
jo
push
cld
fisttp
xchg
add
dec
sti
jmp
movs
xchg
aam
nop
scas
pop
xchg
sub
loope
xor
jbe
cmp
mov
fnstsw
imul
mov
clc
not
and
popa
imul
(bad)
and
jns
lahf
xchg
mov
push
mov
je
xchg
cmp
add
repnz
scas
add
stc
push
cmp
pop
sub
jno
xor
cmp
leave
into
scas
and
in
push
dec
mov
stos
adc
(bad)
jo
sbb
popf
jle
retf
inc
cmp
hlt
sar
xor
add
lock
sub
mov
in
mov
cli
mov
adc
pop
mov
adc
mov
jns
xchg
(bad)
test
ins
test
cwde
inc
jne
mov
dec
aad
jno
xchg
sub
scas
dec
dec
sti
and
icebp
loop
cmp
xchg
out
add
push
dec
popa
push
adc
adc
retf
sbb
cmps
mov
jp
fimul
pop
mov
jnp
push
ret
loop
mov
(bad)
push
push
movs
jae
mov
mov
dec
and
or
dec
ins
cmp
lock
cmp
or
jne
jg
in
sbb
jbe
or
test
icebp
cmp
and
sar
loop
adc
cld
(bad)
lock
or
pop
cmp
xchg
or
pop
rcl
cli
jbe
sub
inc
sub
test
add
mov
and
test
(bad)
popa
mov
out
lds
push
sti
out
xor
nop
les
jb
xchg
xchg
dec
mov
adc
loop
test
retf
mov
scas
jbe
xor
lds
inc
and
popf
xor
shl
ins
fwait
pop
push
or
aas
clc
jne
jl
adc
mov
ror
add
std
ds
adc
fcom
shl
mov
adc
pop
rcl
adc
mov
dec
cdq
sub
fcom
in
sub
popa
sbb
pop
mov
inc
cmp
addr16
shl
fnstenv
jl
iret
mov
rcl
(bad)
xor
mov
int3
popf
push
adc
imul
fld
stos
add
mov
les
mov
or
pop
jge
shl
mov
inc
shr
lods
mov
jmp
stc
loop
cmps
sub
sub
stc
ret
popf
ins
pop
imul
mov
rcl
loope
mov
aad
xchg
mov
jge
push
fisub
fs
leave
mov
sahf
push
lods
or
mov
(bad)
jg
pop
sub
inc
mov
imul
in
retf
push
por
mov
aas
mov
outs
mov
or
cmps
xor
scas
mov
mov
push
inc
dec
or
cdq
leave
xchg
mov
dec
lods
cmp
and
stos
dec
(bad)
push
sub
xchg
jno
loope
jg
lea
call
inc
js
jp
pop
add
(bad)
imul
and
ins
sub
in
lock
call
mov
dec
shl
and
sbb
test
push
test
popa
jl
push
sbb
gs
cdq
es
pop
scas
push
(bad)
out
xchg
or
xchg
xchg
int
xchg
mov
inc
sqrtps
push
loopne
xor
into
adc
outs
in
jbe
adc
push
dec
ror
daa
sub
test
lds
or
jmp
fistp
dec
in
je
xor
gs
out
stos
xor
and
sbb
stos
icebp
pusha
aam
sbb
imul
out
aas
jmp
dec
adc
cmp
push
sub
test
outs
imul
iret
std
sbb
jmp
sti
push
inc
xlat
xchg
jno
pushf
mov
movs
loopne
fnstenv
es
out
mov
lea
and
pusha
and
sbb
add
cmps
fdivrp
sub
scas
push
push
cdq
stos
call
mov
popf
ret
jecxz
jp
daa
mov
cli
xchg
repz
mov
addr16
mov
push
cwde
xor
out
daa
sbb
push
setnp
jns
cdq
cdq
retf
fistp
das
push
adc
mov
ss
push
(bad)
enter
push
scas
movs
sar
mov
stos
xor
rol
fcomp
bound
fld
daa
fs
test
mov
xor
adc
mov
dec
sub
sbb
sub
sub
idiv
aas
aam
pop
mov
dec
sbb
(bad)
movs
bound
jbe
lahf
stos
test
pop
scas
jb
cmp
(bad)
adc
cmps
mov
cdq
mov
repz
cmps
dec
int
leave
shr
xchg
stos
xchg
aad
sub
icebp
cmp
xor
pop
xchg
or
pop
jnp
or
out
mov
inc
push
call
push
(bad)
outs
mov
lahf
dec
lock
or
sub
sar
adc
push
inc
cdq
lds
data16
xor
movs
ret
(bad)
movs
lds
adc
sub
aas
sar
add
inc
sub
push
imul
add
into
stc
jmp
cmp
lods
(bad)
in
push
shl
inc
jg
pop
cs
xchg
inc
push
mov
push
dec
in
or
lods
pop
sub
in
cmp
test
push
jecxz
bound
scas
cmp
test
loope
pop
aas
cmp
jl
int
dec
ret
cmps
xchg
xchg
das
xchg
aas
jp
push
out
mov
push
jmp
bound
xchg
loop
sbb
stos
dec
jl
add
or
push
xchg
sub
dec
mov
test
push
mov
outs
stos
or
aad
pop
adc
pop
cdq
test
adc
fstp
(bad)
or
dec
call
popf
loope
es
adc
jmp
movs
arpl
jp
dec
xchg
fwait
stc
jle
sti
mov
or
and
jg
sbb
cmps
add
repnz
jnp
mov
shr
adc
sub
adc
fbstp
arpl
inc
add
mov
cmp
adc
mov
pop
xchg
and
push
xor
test
jle
ins
imul
iret
das
loope
mov
and
in
xchg
sar
(bad)
cmps
xbegin
xlat
cmp
dec
fwait
dec
sub
pushf
retf
xchg
popa
xor
pop
int
div
jecxz
out
test
xor
shr
jno
push
jp
ja
jmp
cs
mov
cs
xor
lock
dec
pop
push
into
mul
inc
xor
inc
add
add
add
inc
ja
repnz
lds
and
movs
push
adc
pop
xchg
rcr
(bad)
retf
add
adc
rcl
push
call
adc
inc
jno
popf
enter
inc
retf
test
movs
jbe
sub
stos
lods
xor
jbe
cld
out
jo
addr16
pop
push
mov
retf
das
cdq
loopne
sbb
and
add
add
and
mov
test
lock
mov
loopne
jp
cld
mov
and
and
fisttp
mov
(bad)
fadd
mul
bound
xchg
add
and
data16
lods
pop
cmps
push
pop
icebp
pop
push
loope
loope
test
lds
fs
mov
sub
iret
jge
nop
xchg
nop
in
scas
mov
add
int3
pop
mov
icebp
aas
dec
hlt
xor
int3
dec
dec
loope
push
xlat
mov
sub
repz
das
mov
cmp
das
xchg
pusha
call
and
test
pop
mov
fimul
push
pop
mov
mov
loop
repnz
xchg
out
and
popa
pop
add
dec
inc
pop
mov
cmp
inc
(bad)
mov
cmc
mov
scas
dec
sub
sbb
(bad)
(bad)
inc
pop
mov
shr
loopne
cmp
sahf
xor
and
sti
sbb
repz
dec
dec
mov
jne
jecxz
push
lahf
add
fild
xchg
pop
aaa
daa
cmps
call
pop
scas
aaa
les
or
mov
call
push
jno
push
fs
into
mov
leave
and
mov
xchg
sbb
addr16
imul
jecxz
cmps
cdq
xchg
adc
repnz
cmp
mov
inc
sbb
inc
pop
inc
push
aam
and
pusha
xor
scas
shl
shl
loop
sbb
inc
jg
ret
mov
(bad)
pop
inc
jle
test
sub
call
ss
add
or
sub
adc
pop
shr
lock
das
mov
shr
icebp
mov
jmp
inc
mov
scas
es
adc
add
pushf
in
(bad)
hlt
retf
inc
cmp
loope
inc
sub
jns
jg
das
cmp
or
icebp
es
jns
mov
push
lea
cmp
outs
fwait
shr
add
sub
aam
in
scas
cmc
ins
inc
leave
out
mov
and
retf
icebp
ja
adc
movs
jne
std
pop
push
dec
dec
lahf
leave
mov
out
jb
mov
jb
dec
fs
cs
call
lahf
push
inc
inc
sbb
popa
jo
push
ins
mov
stc
stos
xchg
retf
in
push
cmps
add
xor
push
or
pop
adc
nop
arpl
addr16
cs
idiv
xor
loope
mov
mov
jbe
xor
call
aaa
cmc
rol
imul
mov
push
mov
push
mov
mov
pop
enter
pop
mov
or
repnz
dec
js
aad
shr
jae
ins
ret
add
sbb
mov
and
out
mov
sub
aad
retf
push
add
loopne
pop
fs
popa
test
add
xor
cmp
jp
mov
or
pushf
call
mov
fwait
stos
fsub
jge
shl
outs
adc
in
rol
sar
lock
sub
adc
out
push
rcl
sub
sub
sbb
mov
hlt
retf
adc
outs
cmp
mov
push
inc
adc
leave
ret
mov
mov
add
addr16
sub
adc
lock
imul
mov
call
jno
add
cmp
repz
test
mov
inc
lahf
hlt
ror
ins
mov
pusha
xchg
es
add
jp
add
dec
call
mov
xchg
sbb
dec
cld
cmp
fisubr
xchg
pop
jp
mul
mov
fwait
and
cli
xor
mov
and
out
jecxz
fcmovbe
nop
mov
xchg
pop
mov
sub
push
(bad)
pop
inc
pop
cwde
in
enter
dec
aaa
scas
dec
call
test
dec
mov
test
dec
xor
jp
xchg
add
bound
les
sub
fs
push
cmps
mov
dec
xor
jge
jl
jmp
fidiv
in
jne
or
in
jg
mov
sbb
push
mov
jmp
push
dec
enter
pop
xchg
aaa
inc
outs
adc
scas
data16
mov
data16
jmp
jl
xor
xlat
adc
or
jns
(bad)
aad
std
xchg
jbe
fsubr
xchg
mov
inc
jmp
in
std
pop
mov
xchg
outs
xor
mov
fwait
test
push
cmp
cmp
fiadd
int3
popw
jge
adc
sbb
mov
mov
xor
loop
cli
mov
fwait
and
push
pusha
cmp
out
fld
fcom
int3
das
inc
adc
(bad)
pushf
pusha
ja
in
sbb
or
push
add
aam
test
std
or
rcr
(bad)
add
stc
ret
adc
jns
repnz
push
mov
pop
pusha
pop
cld
push
push
repnz
cmp
and
mul
inc
retf
push
sub
inc
mov
retf
mov
ds
(bad)
jno
cmp
push
shr
push
cwde
dec
clc
ja
aas
ret
mov
jb
cmp
icebp
stos
jbe
xchg
fstp
int3
add
loopne
mov
sahf
fwait
scas
nop
mov
nop
retf
outs
add
push
mov
ins
(bad)
pop
mov
rol
xor
stc
sar
cmovno
pop
lds
imul
or
xchg
add
jo
pop
dec
cwde
fcomp
stos
xchg
rcl
stos
and
xor
fsub
adc
fs
jno
(bad)
std
lods
mov
xor
pop
shl
(bad)
outs
dec
fstp
adc
pop
cdq
out
mov
outs
out
loopne
sbb
in
jno
pop
pop
retf
icebp
std
je
aad
pop
int3
mov
movs
mov
sbb
stos
enter
dec
xor
ja
mov
shr
inc
xor
fucomip
sti
adc
cmps
pop
retf
stos
loopne
mov
push
mov
mov
popa
enter
mov
push
jp
fadd
bndstx
jge
adc
fisub
ror
out
sub
imul
cld
daa
loope
mov
retf
repz
and
push
leave
std
data16
jmp
dec
inc
inc
dec
sbb
xchg
retf
mov
sbb
je
cmps
and
(bad)
cmps
addr16
shr
repnz
dec
adc
mov
sbb
mov
jo
sub
dec
lock
les
mov
mov
lea
div
sub
out
popa
fdivr
adc
sub
push
jbe
pop
or
cdq
xor
fisubr
cld
call
push
cdq
bound
out
add
es
pop
jae
sub
cdq
inc
call
mov
xchg
dec
fnsave
cmps
lods
push
lock
sahf
jle
xlat
push
push
call
loope
xlat
mov
scas
mov
pop
cwde
fdiv
xchg
and
push
xor
dec
cld
xor
and
sahf
js
inc
loope
cmp
sub
cmps
xchg
mov
rcr
and
icebp
mov
mov
jbe
adc
jae
stc
fild
(bad)
stos
icebp
dec
aad
sbb
fist
cmp
dec
lods
mov
xor
jecxz
aas
xor
jmp
pop
enter
mov
sub
jmp
mov
sbb
xchg
mov
cmp
rol
scas
push
(bad)
pop
mov
add
in
jle
cmp
sbb
rol
ror
inc
(bad)
adc
stos
push
inc
jne
loope
gs
xor
mov
loop
aad
out
mov
inc
pop
or
add
leave
lods
scas
inc
mov
call
ins
cwde
scas
mov
mov
push
and
movs
pop
int
daa
push
jmp
jmp
loope
push
sub
jg
je
or
fs
xchg
add
repz
xor
xchg
mov
sbb
xchg
xchg
push
cwde
inc
xor
adc
out
push
loop
into
test
push
mov
dec
mov
cmc
adc
mov
out
xchg
inc
stc
shl
out
xchg
push
dec
cmc
pushf
into
test
sub
popf
push
in
xchg
imul
push
aad
dec
dec
pop
movs
ss
movs
ins
xchg
mov
je
ja
jbe
mov
(bad)
cmp
or
cmp
mov
(bad)
rol
stos
aas
mov
jns
push
adc
aas
mov
pushf
dec
mov
hlt
pushf
jb
xor
jg
xchg
jle
and
sbb
mov
inc
pop
push
dec
xor
ins
jb
hlt
jmp
outs
int3
jmp
xor
cmp
jmp
dec
loope
call
xchg
xor
imul
xor
cmps
mov
fisttp
sbb
stc
sbb
jecxz
je
out
add
(bad)
fs
(bad)
cli
aam
out
pop
sub
in
sbb
xchg
jne
dec
iret
rol
pop
ins
je
aas
outs
(bad)
fbld
test
xor
or
ja
mov
scas
js
or
rcr
xor
jge
mov
inc
arpl
pop
mov
aaa
rcl
pop
jb
hlt
test
xchg
and
push
fwait
or
xchg
adc
push
mov
into
mov
call
and
sbb
mov
rol
aad
mov
push
pop
stc
cmp
scas
test
xchg
lea
adc
fld
ja
xchg
inc
or
shl
fnstsw
or
cmps
bound
inc
add
(bad)
push
sbb
sub
pop
and
in
mov
pop
or
and
daa
in
shr
(bad)
bound
loopne
inc
jnp
retf
call
lock
jmp
xchg
rcl
mov
cmp
retf
add
imul
shl
mov
out
scas
in
xchg
adc
mov
sbb
xchg
jns
jmp
push
(bad)
or
adc
add
dec
shl
push
inc
dec
sbb
sbb
mov
outs
aam
sub
hlt
push
sbb
out
leave
inc
aaa
xor
pop
jb
fld
and
jb
in
sub
pop
aaa
hlt
add
pop
add
or
jge
cwde
repz
sbb
mov
mov
and
enter
lods
aam
sub
xor
sbb
icebp
pop
(bad)
pop
clc
lock
jle
xchg
push
loop
mov
push
jmp
das
mov
sbb
xchg
xor
inc
pop
add
or
jbe
xchg
xchg
xchg
xlat
push
sub
jle
sbb
jge
mov
ja
inc
jb
dec
cld
xor
inc
pop
xlat
test
mov
xchg
cmp
mov
xlat
jae
call
icebp
sub
jle
cmp
mov
test
xor
das
cmp
dec
loopne
and
jns
cmp
xchg
enter
push
push
xchg
movs
mov
dec
cmp
or
jae
jmp
add
pop
jb
push
pop
cwde
xor
mov
jle
out
jle
sub
cmc
jecxz
add
jmp
jmp
push
call
seto
xchg
add
fisub
sbb
xor
xor
loopne
inc
pop
scas
fs
cld
add
xchg
xchg
pop
jne
ds
xchg
add
imul
retf
inc
loope
jmp
cli
test
mov
mov
sti
mov
or
mov
pop
add
mov
pop
mov
retf
gs
cld
pop
mov
mov
adc
mov
loop
adc
idiv
push
jns
cmp
lds
(bad)
push
cdq
push
xchg
lds
mov
cmp
xor
add
ja
or
dec
aas
stc
aam
cs
mov
in
xchg
sub
icebp
cmp
sti
mov
add
push
push
fld
and
cmps
push
(bad)
scas
in
loop
or
test
enter
add
xlat
mov
pop
int3
mov
mov
xchg
push
sub
jecxz
xchg
sahf
xchg
ror
adc
mov
mov
or
xchg
mov
test
loopne
push
aad
lahf
xor
cmc
xor
xchg
sub
je
mov
push
mov
(bad)
push
sub
mov
xor
jbe
xchg
cwde
add
xchg
fstp
rcr
push
pop
lahf
add
sar
pop
dec
adc
xchg
xor
jbe
add
push
rol
stos
lock
dec
outs
stc
shr
jne
push
in
push
fcomp
addr16
mov
enter
mov
mov
stc
test
mov
scas
mov
or
jno
xchg
or
pusha
adc
mov
and
mov
sbb
jns
jne
pop
jg
pop
adc
cmc
xor
inc
call
xor
sbb
mov
and
mov
mov
sub
icebp
and
mov
sub
test
push
ins
and
mov
and
aas
cmp
add
inc
ret
sbb
cs
shl
push
mov
xchg
(bad)
push
lea
imul
xchg
in
sbb
pushf
icebp
mov
push
push
ret
ret
rol
cmp
xchg
sub
retf
mov
leave
or
adc
aaa
jae
loopne
mov
sbb
fwait
mov
and
pop
fst
jge
mov
cmp
lea
mov
jle
pop
adc
sub
or
dec
sar
push
xchg
es
shl
xor
test
sti
imul
aam
adc
pusha
cwde
fld
adc
push
in
dec
iret
xor
retf
sbb
call
into
mov
mov
fnstenv
imul
push
push
lds
xor
jne
inc
nop
inc
sub
loope
arpl
repnz
jmp
popa
mov
jno
mov
fsubr
and
nop
cli
lods
dec
mov
fdivp
and
and
cmp
mov
mov
call
arpl
or
stc
jnp
ins
cmps
jb
dec
mov
jno
mov
cmp
add
ja
test
out
and
imul
shl
cld
fdivr
xor
shr
(bad)
jecxz
add
jp
push
adc
mov
mov
stc
dec
or
push
jl
sub
sub
in
mov
rol
inc
imul
ret
aad
add
clc
mov
cmp
push
rcl
lds
xor
aad
mov
out
adc
xor
push
lea
pop
push
dec
mov
fist
fs
test
and
fadd
add
mov
xchg
add
sub
sbb
lea
lods
push
scas
sbb
out
jge
lahf
in
pusha
lods
or
sbb
sbb
movs
icebp
repz
out
or
add
mov
adc
sub
and
push
jnp
push
jg
dec
test
mov
out
addr16
imul
jmp
div
jne
jg
and
inc
inc
dec
popa
mov
mov
mov
movs
jge
test
cmps
cmp
cmps
sbb
ret
in
dec
div
push
call
jo
sub
cli
xchg
dec
popf
dec
pop
mov
cmp
adc
jae
cli
dec
pop
ss
mov
or
out
into
and
mov
inc
mov
sbb
sub
in
jb
pop
mov
inc
cmp
pop
je
aaa
sahf
iret
ret
out
jmp
cmp
inc
add
adc
mov
cli
arpl
or
enter
iret
xor
je
icebp
bound
jae
xor
ret
and
(bad)
int
xchg
and
add
lock
fcmovu
outs
push
inc
jnp
out
pop
fdivr
mov
stos
mov
ret
test
mov
jb
lods
idiv
(bad)
adc
and
dec
test
and
mov
jbe
dec
and
jae
in
or
rcr
test
push
test
push
or
arpl
pop
lods
push
adc
adc
jnp
sbb
pop
out
repnz
(bad)
ds
push
or
(bad)
mov
xchg
mov
ret
dec
push
and
cmps
cdq
jne
aam
or
jb
mov
das
gs
mov
adc
mov
pop
lea
(bad)
outs
rcl
pop
ds
xchg
mov
or
(bad)
xchg
loop
loopne
test
dec
sbb
xor
je
nop
jbe
mov
dec
shl
jne
enter
repz
push
scas
hlt
sub
fcom
stos
jg
movs
pop
cld
rol
ret
sub
push
xor
inc
popa
sysexit
xchg
int3
push
scas
pop
std
sub
pusha
dec
push
jl
and
gs
sbb
mov
push
lods
and
fsub
push
stc
lahf
cdq
adc
repnz
cmp
nop
mov
pop
in
fcmovbe
xor
mov
dec
dec
jmp
xor
test
jp
mov
(bad)
xchg
inc
ror
les
in
pop
clc
mov
adc
adc
pop
clc
jle
pop
mov
sti
mov
clc
push
dec
lods
adc
push
cmp
or
aas
adc
cmp
js
inc
adc
jns
mov
pushf
sbb
mov
sbb
js
jecxz
mov
dec
xor
inc
ja
adc
adc
icebp
push
clc
nop
popf
popa
nop
mov
cmp
and
je
test
ror
dec
test
int3
sar
sbb
fucom
xchg
cmp
mov
movs
mov
out
bound
hlt
retf
add
add
test
inc
icebp
xor
(bad)
fstp
mov
mov
or
pop
imul
popf
sbb
push
les
imul
ja
inc
rcr
xor
fs
or
add
inc
out
pop
push
iret
rcl
fbld
xor
adc
mov
push
mov
int
add
fcom
sar
push
stc
or
lods
cmps
mov
enter
mov
push
adc
bound
dec
mov
sbb
xlat
out
xchg
fsub
mov
pop
and
pop
pop
cmp
fs
inc
xchg
fcmovne
stc
data16
push
in
ins
mov
and
rol
pusha
cs
cdq
cmp
mov
dec
mov
xor
lahf
fwait
ret
sub
xchg
mov
mov
ja
add
mov
cmp
call
mov
cmp
dec
outs
ss
test
cmp
jle
clc
pop
rol
jns
inc
sbb
pop
sub
imul
idiv
aad
cmp
sar
pusha
retf
xor
aad
adc
imul
fcomp
mov
das
bound
push
push
cmp
ret
(bad)
xchg
inc
and
popa
or
je
jne
mov
mov
(bad)
test
add
aaa
xchg
mov
outs
cs
fisub
sub
push
lock
mov
aam
mov
pop
push
sbb
bound
sbb
je
pop
repnz
dec
jecxz
sub
sub
mov
in
inc
enter
mov
psubusw
jmp
movs
scas
sbb
out
arpl
sub
icebp
push
cmp
lods
fcomp
add
fld
jle
mov
sbb
pop
cmp
aaa
adc
popf
push
xor
adc
add
cdq
aam
repz
sub
add
add
inc
mov
push
xchg
mov
je
jbe
mov
pop
add
das
and
jle
ret
adc
rcl
adc
ins
push
bound
mov
add
nop
mov
mov
ins
sbb
ret
in
jbe
and
xor
out
addr16
dec
pop
mov
pop
inc
(bad)
xchg
jbe
js
cli
js
sbb
adc
gs
mov
aas
shl
pop
jg
push
jp
iret
(bad)
mov
mov
jge
arpl
cmp
pusha
sub
sub
shl
dec
inc
fst
ret
repnz
into
xchg
inc
test
mov
iret
inc
pop
das
ficomp
xchg
das
xchg
nop
pusha
sbb
ins
(bad)
mov
jnp
xchg
jnp
inc
jbe
adc
add
repz
xor
jmp
pop
ins
(bad)
fs
mov
in
call
fld
mov
sub
retf
push
jl
sub
adc
and
std
aas
or
adc
mov
sub
sbb
mov
mov
and
sbb
jmp
and
sbb
sbb
pusha
xchg
nop
pop
cmc
inc
jge
sti
push
mov
sbb
cmp
scas
mov
call
into
sbb
imul
xor
rol
sbb
sub
aad
sub
push
mov
or
jbe
jb
mov
outs
aaa
aaa
das
and
fbstp
xlat
out
or
shr
mov
scas
inc
ins
jmp
loopne
mov
pop
out
xor
jbe
out
mov
inc
aam
xor
cli
sahf
push
jl
push
and
movs
cmc
lahf
imul
inc
cwde
add
ja
mov
cwde
xchg
gs
push
xchg
sub
pop
fld
mov
jb
sub
(bad)
xor
jno
mov
clc
push
sbb
sbb
adc
xchg
inc
jno
(bad)
int
cld
mul
cmps
fist
dec
push
and
outs
cmp
cmps
scas
xchg
lds
aam
cli
js
or
lahf
pop
scas
jge
jbe
clc
int
jge
cdq
mov
pop
inc
je
mul
mov
dec
and
sbb
imul
sbb
int
cmc
ja
jnp
shl
push
in
mov
and
jbe
cmc
leave
(bad)
fsubp
sahf
mov
test
add
stos
int
(bad)
fisub
mov
sbb
dec
data16
ins
shl
in
push
out
sbb
fiadd
and
inc
aas
mov
push
shl
cmps
in
xor
int
jmp
rol
mov
popa
pop
add
hlt
xor
dec
jnp
cmc
jp
inc
repnz
aam
mov
xchg
cmp
ja
sbb
inc
lods
mov
mov
pop
inc
mov
pop
clc
retf
pop
icebp
cs
mov
jecxz
pop
xor
popa
lahf
dec
push
mov
push
ret
(bad)
adc
cmp
jg
popa
mov
mov
sbb
add
aaa
sahf
add
or
cwde
adc
dec
fcomp
popa
mov
bound
test
xchg
call
sub
out
mov
xchg
cvtpi2ps
add
mov
or
int
call
outs
xchg
loope
es
cld
xchg
mov
repz
loopne
pop
aam
sub
fnstcw
fsub
mov
jno
cmc
ret
and
sbb
cwde
addr16
outs
in
out
push
sub
dec
jns
(bad)
cmps
sti
dec
es
push
mov
sti
xchg
cwde
mov
aad
sub
movs
push
icebp
lahf
retf
pushf
jne
adc
test
mov
xor
test
stos
hlt
push
mov
inc
and
ins
imul
addr16
(bad)
rol
cmp
enter
or
in
aad
cmp
cli
repnz
xor
scas
mov
xchg
je
sbb
loope
lods
popa
loope
imul
push
add
mov
dec
cdq
jno
inc
mov
cmp
sub
mov
push
adc
push
adc
ror
retf
imul
icebp
mov
ja
(bad)
jp
les
ret
push
and
xchg
aaa
add
cmps
mov
inc
cmp
pop
test
neg
mov
imul
scas
loop
sub
mov
in
inc
cmps
adc
jg
or
(bad)
xchg
jg
sub
(bad)
ret
retf
dec
outs
pop
add
mov
adc
in
xor
sbb
lods
popf
dec
inc
add
and
std
ins
and
cmp
mov
fidiv
lds
call
sbb
clc
pop
sti
adc
(bad)
pusha
in
inc
mov
mov
push
lock
or
ret
pop
jbe
(bad)
dec
dec
movs
jo
cmp
test
jb
xor
mov
test
sahf
or
ins
mov
mov
adc
dec
sub
pop
adc
loop
adc
out
jg
sar
dec
cmc
gs
or
inc
sbb
mov
jae
mov
xchg
inc
and
lock
mov
mov
xor
jo
popf
inc
inc
cmp
out
dec
cs
in
dec
stos
push
cmc
push
and
icebp
hlt
inc
scas
xor
movs
xchg
push
push
imul
retf
mov
or
ins
shl
cmp
outs
dec
call
clc
loop
test
(bad)
mov
(bad)
mul
xchg
test
xlat
mov
leave
fisttp
dec
loope
adc
adc
mov
mov
push
cs
jo
cs
fisub
dec
stc
cmp
sub
sub
cmp
inc
(bad)
fdivr
mov
fsub
or
std
fisub
(bad)
mov
mov
mov
dec
xchg
mov
addr16
pop
mul
sti
fnop
cld
fimul
sbb
xchg
fisttp
jl
or
add
scas
dec
clc
mov
sbb
jnp
dec
mov
test
mov
mov
(bad)
mov
jb
jns
or
pop
mov
ret
xor
xchg
stos
retf
push
fwait
adc
xor
adc
outs
in
rol
sahf
add
stc
and
or
ret
arpl
out
mov
dec
lock
xchg
ret
fwait
adc
loope
mov
xchg
dec
out
(bad)
int
in
mov
pop
(bad)
fcom
inc
lea
das
leave
mov
int3
fstp
xchg
clc
dec
mov
int
cmp
fimul
adc
dec
or
jge
ret
mov
out
jge
fidiv
jmp
add
mov
mov
imul
jge
cmps
out
mov
mov
mov
sahf
pop
mov
inc
mov
sahf
jle
bound
enter
pop
gs
fxch
mov
mov
jge
ss
inc
mov
sbb
ja
adc
mov
xor
mov
xchg
jmp
lods
mov
cdq
into
sbb
adc
rep
cmp
out
jbe
jbe
cwde
mov
add
inc
dec
mov
and
xor
push
xor
pop
sub
mov
add
lods
lea
movs
and
xor
and
xlat
sti
cld
and
fs
sub
cmp
(bad)
in
cmp
push
add
sub
inc
sub
xchg
push
mov
jp
cmp
xchg
add
push
movs
int3
mov
ja
lahf
push
test
mov
popf
mov
loope
or
shl
mov
jmp
rol
test
fld
test
int
(bad)
retf
jmp
xchg
and
(bad)
out
mov
jp
ss
or
xor
and
inc
jmp
push
movs
add
stc
mov
xchg
popf
js
and
rcl
sbb
fwait
pop
or
inc
out
dec
ret
in
popf
out
ror
jge
loope
mov
es
rol
lock
mov
pop
mov
and
iret
xchg
out
sbb
jle
mov
xchg
jns
jle
pop
sbb
and
nop
mov
iret
cmp
xchg
pop
clc
enter
data16
jns
popf
push
aad
adc
lods
or
or
dec
or
outs
fsubrp
dec
xchg
scas
jbe
pop
out
ret
mov
sahf
fs
push
adc
fiadd
dec
xor
mov
cmps
dec
jne
mov
nop
xor
pop
lods
push
out
sub
retf
ja
pop
and
retf
xor
inc
xchg
mov
int
fs
and
popa
dec
call
call
pop
mov
lock
sbb
lods
iret
test
xchg
ss
adc
sti
call
pop
push
(bad)
ret
or
mov
outs
gs
mov
enter
push
mov
adc
inc
rol
lds
das
push
retf
adc
out
in
dec
idiv
in
mov
fld
adc
mov
cs
cmc
mov
mov
sub
movs
movs
test
call
sbb
push
push
jmp
and
push
cmp
aad
pop
std
lock
mov
pop
(bad)
idiv
pop
add
jno
pop
(bad)
fs
retf
sbb
jnp
stc
push
and
sbb
xchg
(bad)
nop
cmp
mov
push
xor
popa
inc
inc
imul
pop
repnz
data16
scas
int3
adc
loop
mov
(bad)
and
outs
dec
or
scas
dec
scas
arpl
out
adc
jp
into
mov
outs
mov
xchg
rcr
jg
ins
shl
xchg
rol
jnp
hlt
dec
mov
xlat
cdq
movs
add
ss
shl
mov
(bad)
ss
mov
sub
test
mov
or
adc
int3
add
mov
cmp
adc
inc
cmp
mov
pop
test
(bad)
pop
sub
or
aas
jbe
push
cwde
in
fidiv
mov
addr16
rol
sbb
ins
jne
adc
das
mov
test
mov
iret
jns
xor
shl
xchg
adc
cld
cmps
call
iret
cs
fst
cmp
setae
cmp
pop
out
sti
das
add
mov
inc
aad
mov
imul
cmps
ret
push
jl
sbb
call
xor
jno
leave
lods
jp
mov
rol
pop
pop
mov
mov
mov
icebp
jle
int
push
sbb
fstp
ror
jmp
mov
stos
push
mov
adc
fucomi
xchg
icebp
popf
div
adc
dec
push
adc
add
pop
push
outs
inc
cmp
test
mov
popa
jae
bnd
sub
xchg
popf
adc
into
push
aam
fdiv
ins
dec
ins
icebp
pop
lods
outs
je
push
mov
push
lods
mov
xor
sbb
pop
arpl
mov
icebp
(bad)
(bad)
in
add
and
test
jae
fdivr
int
jnp
(bad)
out
stos
pop
(bad)
mov
iret
scas
enter
cli
fmul
test
mov
cmps
(bad)
popf
(bad)
sti
xchg
cmc
pop
xchg
add
lds
push
or
push
xor
add
test
cli
dec
dec
imul
push
fwait
mov
fsubr
not
or
xor
aas
test
jo
repz
ror
shr
xchg
loopne
out
cmp
addr16
pop
inc
scas
mov
cmps
xor
dec
cmp
and
xchg
loop
dec
cmp
xor
pop
push
lods
dec
add
mov
xor
sbb
stos
(bad)
sbb
pushf
ds
and
mov
rcl
(bad)
loope
test
xor
retf
(bad)
push
pop
and
pmulhuw
or
dec
push
mov
(bad)
xor
clc
push
pop
xchg
int
and
mov
leave
push
dec
stos
data16
(bad)
xlat
aam
mov
pop
add
mov
add
loope
and
ja
push
mov
nop
les
add
jmp
(bad)
push
scas
adc
mov
loope
test
xlat
and
call
arpl
xchg
repnz
mov
sub
sahf
gs
or
test
xchg
icebp
pop
enter
inc
idiv
into
cli
or
(bad)
pop
ins
cmp
ficomp
movs
test
movs
test
sub
sub
dec
mov
and
pop
inc
or
test
jmp
in
mov
in
xchg
and
mov
lahf
push
cs
mov
mov
mov
jns
mov
(bad)
xlat
xor
cmc
and
add
adc
pop
ins
xor
shr
mov
xor
cdq
aaa
push
cmc
scas
pop
aaa
jmp
inc
dec
imul
jbe
(bad)
repz
(bad)
ja
jecxz
adc
(bad)
not
cwde
xchg
jg
xor
push
jp
scas
fwait
and
jge
pop
push
or
retf
inc
mov
jle
mov
js
lock
jbe
cmc
jecxz
shr
dec
hlt
mov
inc
sbb
stc
inc
mov
push
fimul
lahf
jmp
fcomp
stc
movs
dec
push
movs
outs
mov
fwait
dec
sbb
addr16
dec
xchg
imul
pop
les
push
iret
int3
cmp
fucom
ror
mov
(bad)
shl
mov
repnz
mov
scas
retf
mov
inc
ja
jbe
sbb
or
cmp
int
outs
fmulp
mov
je
cmp
and
cmp
pop
pop
cmp
imul
(bad)
mov
minps
push
test
mov
fs
cmp
(bad)
iret
pop
add
mov
call
or
sti
dec
maskmovq
div
cmps
push
sub
pop
adc
in
mov
inc
xor
cmp
ror
ins
push
inc
add
fist
cmc
pop
fsub
jmp
loopne
stos
push
mov
add
lock
mov
movs
mov
pop
add
loope
xchg
pmaddwd
xlat
or
jbe
add
xchg
int3
mov
add
jmp
adc
aam
gs
scas
dec
dec
ret
loopne
xchg
inc
cmp
arpl
push
xchg
dec
fwait
aas
pop
cmp
cmp
cs
xlat
xchg
dec
fcmovb
add
and
(bad)
push
cmc
dec
in
stos
dec
cmp
rcl
mov
xchg
xchg
cwde
loope
mov
popa
dec
aas
xchg
fs
ret
sbb
push
xchg
movs
mov
mov
dec
in
mov
fs
xchg
inc
mov
jbe
add
and
nop
test
sbb
cmp
pusha
lods
test
repnz
test
rcr
jecxz
or
mov
jp
(bad)
retf
je
sbb
nop
jmp
sete
int
xchg
xchg
inc
xchg
pop
mov
int3
call
sbb
lds
iret
mov
sub
cmps
jge
into
fcom
and
pop
xchg
and
fimul
xor
pop
push
mov
push
cdq
push
nop
sub
sbb
stos
push
loope
xchg
add
pushf
shl
adc
stos
test
fst
ds
mov
repnz
adc
adc
sahf
pop
jb
lock
retf
int3
(bad)
cmp
shl
stos
ror
(bad)
and
adc
push
push
xchg
mov
xchg
loope
ins
loopne
sub
push
movs
test
(bad)
js
mov
push
out
das
scas
fld
and
and
popf
(bad)
scas
xor
call
inc
aam
mov
int3
jne
fisubr
mov
idiv
jmp
or
and
and
(bad)
mul
dec
stc
stos
retf
mov
xor
xor
in
xchg
cmp
gs
sub
dec
and
add
cmc
lock
fmul
xchg
xor
sub
and
inc
jo
sub
sub
mov
std
inc
cs
push
ror
neg
or
mov
ins
cdq
cld
xor
push
adc
jecxz
cwde
cmp
mov
or
jae
pop
neg
jg
test
adc
imul
bound
nop
sbb
movs
push
pop
ss
push
ret
daa
xchg
bound
xchg
mov
std
rol
lods
cmc
aaa
inc
mov
adc
jb
fiadd
(bad)
nop
mov
aad
cmp
jl
outs
sub
test
int3
inc
scas
inc
fld
and
stc
fild
retf
inc
out
push
pop
add
jg
inc
mov
push
pminsw
xor
cwde
sub
sub
dec
ret
xlat
pop
xor
mov
or
int
(bad)
push
fisubr
xor
jmp
xor
fs
gs
loopne
cmp
test
(bad)
sahf
sub
(bad)
adc
xor
sub
sahf
out
sub
mov
pop
jbe
cmps
sbb
jb
stos
mov
dec
icebp
lock
xor
mov
push
xchg
push
out
adc
inc
push
out
js
test
xchg
mov
push
pop
or
add
int
cmp
ins
dec
adc
aam
popf
mov
mov
retf
mov
in
cmps
lods
cmp
scas
test
push
xchg
adc
inc
retf
retfw
pushf
mov
jmp
sub
gs
dec
or
std
sub
or
adc
dec
jne
(bad)
and
dec
daa
es
lods
pop
inc
mov
jb
mov
fdivp
sbb
inc
cdq
pop
ds
std
fiadd
popf
push
loope
xchg
sbb
mov
lds
pop
test
cwde
add
repz
(bad)
pop
ret
xor
repz
or
xlat
jbe
movs
xor
std
sbb
icebp
dec
(bad)
xlat
idiv
pop
push
add
daa
hlt
mov
jns
or
idiv
xor
mov
scas
mov
stos
cmp
and
jo
out
or
sub
jno
dec
mov
mov
add
jns
stos
shl
sbb
xchg
sti
(bad)
sbb
dec
repz
dec
(bad)
or
mov
sti
mov
pop
out
ja
lds
leave
movs
pop
cmp
scas
ds
pop
rcl
cli
mov
inc
xchg
jns
cmps
sbb
jecxz
ret
or
jo
iret
add
ins
and
(bad)
dec
(bad)
sahf
test
adc
or
sbb
mov
jns
jno
addr16
clc
fcom
dec
mov
das
add
mov
or
jne
pop
pop
xchg
and
jp
sbb
adc
pop
add
push
and
pop
pop
pop
ror
out
(bad)
in
test
mov
es
in
ret
(bad)
xchg
movs
sti
sub
mov
imul
push
rol
scas
pop
sub
call
mov
jnp
icebp
sbb
fisubr
xor
or
xchg
test
pop
or
xor
fs
add
xchg
and
xchg
and
je
ja
or
xor
cld
mov
xor
xchg
sbb
jno
jge
cmp
mov
sub
scas
push
xchg
mov
push
imul
dec
loopne
adc
sar
push
loopne
stos
daa
iret
sub
push
dec
add
fistp
jmp
xchg
in
test
xchg
jb
sub
jl
mov
mov
iret
dec
arpl
adc
je
mov
out
fwait
sub
sti
je
and
test
pop
adc
adc
les
xor
out
in
push
xor
jecxz
xor
aas
mov
pushf
ja
or
sub
sbb
stos
stos
loopne
sbb
sub
lods
lods
cmps
rcl
push
ss
out
push
jno
cwde
add
lock
(bad)
mov
mov
aaa
sub
call
or
jno
sub
mov
pop
in
out
imul
sub
pop
enter
pusha
test
jnp
cli
xor
loope
(bad)
cmp
mov
xor
push
leave
out
mov
jo
repnz
cmp
inc
mov
mov
dec
retf
mov
aas
in
cmp
loope
adc
fucomp
jae
retf
cli
dec
jmp
xor
or
dec
pop
xchg
dec
in
fisubr
lods
adc
adc
mov
inc
dec
sbb
mov
jns
mov
out
xchg
sbb
(bad)
std
sbb
jno
jmp
pop
pop
fs
jns
enter
xchg
inc
sbb
mov
push
jae
and
pop
clc
inc
sti
mov
stc
ins
push
xor
(bad)
shr
push
sub
jl
jnp
mov
push
jo
(bad)
xchg
add
aam
adc
repnz
loopne
push
les
(bad)
cmps
cmps
ss
adc
mov
cmp
outs
mov
cmp
std
push
lock
pop
pop
ds
jb
int
dec
popf
and
inc
push
xchg
pop
push
enter
mov
adc
ins
test
jae
fist
add
dec
nop
shr
into
xor
sbb
aas
jae
mov
pop
push
inc
sbb
scas
mov
push
sub
call
es
or
push
stos
mov
inc
(bad)
std
inc
stos
out
cld
and
arpl
push
push
push
xlat
pop
or
push
xchg
das
cli
sbb
ret
jg
sub
call
aad
fcos
add
scas
mov
(bad)
(bad)
fstp
imul
pusha
dec
fisttp
mov
sbb
bound
sbb
daa
cld
sub
xchg
out
and
lods
shl
cs
stos
inc
(bad)
call
data16
push
ss
loop
aam
(bad)
pop
inc
jle
jecxz
test
push
push
xchg
adc
scas
sahf
inc
mov
lea
dec
jb
fdivr
jmp
lds
jg
mov
and
mov
mov
cld
push
mov
push
xchg
jno
jns
cld
rol
push
out
dec
mov
es
sub
jo
jae
faddp
sub
ds
mov
jo
inc
lds
pop
mov
xor
cmps
jl
push
mov
data16
stc
xchg
or
or
jp
pop
xor
adc
xchg
fldcw
out
mov
in
push
out
or
jl
inc
cmps
push
or
jno
pop
xchg
in
adc
popa
ret
outs
(bad)
jae
lock
push
xchg
mov
mov
and
lea
stc
inc
or
daa
add
dec
stc
dec
pop
jne
xchg
sub
xor
out
out
sar
xchg
out
jae
mov
xchg
(bad)
repz
bound
mov
dec
push
test
jne
inc
shl
stc
fdivr
pop
leave
leave
out
add
and
aas
jnp
data16
imul
adc
cli
xrelease
or
pushf
test
cmc
ss
(bad)
fist
adc
or
sbb
sbb
outs
imul
cmp
dec
ins
scas
jle
jb
xchg
arpl
pop
stos
cmp
mov
push
xlat
cld
aad
les
sub
inc
aam
sbb
ss
or
add
mov
jns
pop
mov
xor
lods
xlat
movs
xchg
(bad)
mov
dec
jmp
mov
(bad)
mov
add
pop
sbb
fcom
mov
clc
mov
dec
ret
fst
mov
rcr
xchg
loopne
mov
push
test
add
mov
sub
into
test
in
cmp
ret
(bad)
hlt
pop
xor
lods
mov
mov
add
cmp
icebp
lods
or
adc
outs
outs
scas
adc
dec
loope
ret
test
push
xchg
cdq
mov
mov
xchg
in
jle
push
out
pop
mov
mov
enter
jns
dec
cld
xchg
ffreep
cmp
xchg
xchg
das
or
sbb
mov
sbb
adc
jmp
outs
or
hlt
mov
jmp
pop
mov
imul
fdivrp
into
popa
movs
fcomp
dec
cld
sub
out
jae
inc
sbb
bound
add
retf
test
pop
and
sub
rol
movs
inc
and
cmp
arpl
cmp
js
inc
call
(bad)
ins
jp
jae
inc
sub
xchg
xor
fisub
push
pop
jb
call
cli
add
mov
in
shl
(bad)
mov
xchg
stos
ror
out
sub
and
jno
push
out
shl
cmp
mov
stos
push
pop
xchg
lods
call
inc
pop
pop
and
or
inc
sbb
jl
(bad)
or
cmp
in
ffreep
sub
idiv
(bad)
cmp
jp
pop
sbb
popa
sbb
sbb
inc
mov
lahf
jns
sti
or
jbe
add
push
push
mov
aad
stos
leave
sbb
mov
in
add
popa
and
push
enter
pop
inc
test
jle
ins
jl
fdiv
js
add
jnp
xchg
sbb
aas
mov
imul
fistp
jl
jl
fneni(8087
(bad)
xchg
or
outs
or
aam
cwde
xor
xor
push
sub
in
mov
loope
pusha
test
mov
pop
out
cli
pop
dec
mov
jp
in
or
mov
popa
stos
xchg
scas
xor
cwde
fistp
jb
inc
jb
xor
or
dec
stos
mov
leave
mov
or
sti
cwde
lea
(bad)
xor
clc
les
pop
inc
sub
scas
out
scas
sub
mov
inc
mov
mov
call
add
jae
pop
jno
xlat
xor
mov
sar
inc
jp
and
lahf
dec
cmp
fwait
popa
jg
xchg
and
sbb
aad
iret
adc
ret
mov
(bad)
retf
jmp
mov
or
popw
pop
es
test
(bad)
jbe
mov
ins
(bad)
jge
rcr
xchg
push
mov
dec
cmp
jmp
neg
imul
mov
call
inc
sub
dec
aaa
call
loop
jl
fmul
imul
cmps
push
mov
leave
mov
ins
push
test
sti
jbe
cmp
jp
ins
jle
mov
leave
dec
cmp
arpl
inc
inc
lods
es
cmp
sbb
sar
xchg
xor
aaa
jg
xchg
sub
sahf
pop
pop
xchg
ret
iret
mov
mov
popa
ret
outs
test
push
mov
ret
or
imul
in
jns
dec
jbe
and
sbb
(bad)
mov
sbb
inc
mov
push
movs
push
ds
fs
pop
cmp
push
xchg
xlat
call
retf
clc
mov
mov
retf
adc
(bad)
into
clc
inc
lds
push
mov
jmp
sbb
dec
in
mov
mov
ja
lahf
cmp
clc
dec
hlt
retf
aaa
repnz
add
idiv
xlat
ja
ret
hlt
mov
adc
ret
xchg
dec
ds
lds
sbb
pop
into
cmp
in
dec
aas
mov
mov
int3
xchg
mov
push
scas
je
popf
retf
and
xor
ss
push
fst
lock
adc
xor
push
and
fmul
push
xchg
dec
add
pop
push
jne
fcom
dec
hlt
dec
aas
cdq
cmps
in
data16
pop
inc
test
cwde
jmp
cmp
jae
sub
iret
(bad)
jecxz
sbb
pop
sbb
pop
popf
repnz
ret
dec
mov
(bad)
test
xlat
mov
cmps
out
inc
push
push
outs
(bad)
sbb
mov
ins
and
pushf
test
cwde
adc
xchg
daa
jecxz
loop
push
leave
jno
(bad)
sahf
add
cmps
adc
xlat
(bad)
and
dec
dec
das
add
out
sub
ja
push
adc
test
mov
adc
je
or
test
or
add
gs
xchg
sahf
dec
cmp
jl
repnz
push
dec
jno
jecxz
stos
out
int3
popf
cmp
jae
pop
jg
and
jg
mov
add
int
dec
loop
sahf
fist
ret
(bad)
mov
mov
inc
cmp
or
ins
fst
mov
cmp
(bad)
vmread
aad
rol
sub
mov
xchg
adc
icebp
(bad)
sar
or
shl
inc
jbe
jae
push
je
mov
pop
fwait
sub
je
loop
inc
xchg
pop
in
jo
retf
mov
xchg
pusha
sbb
aaa
or
outs
les
mov
call
popa
addr16
mov
xchg
div
loope
inc
mov
push
mov
xor
in
jb
test
shr
js
and
sub
adc
gs
jecxz
pop
test
jb
pop
xor
pop
xchg
adc
test
stc
sbb
and
and
jns
loopne
cmp
lods
sub
imul
and
xchg
enter
adc
mov
sbb
in
shr
mov
ds
pop
xchg
jmp
ins
xor
lds
mov
mov
sbb
dec
fs
cmps
add
xor
and
pop
jle
mov
xor
retf
test
jl
sub
and
adc
mov
call
aam
xchg
fisttp
outs
mov
push
les
or
adc
daa
inc
or
pop
lods
lock
xor
add
cmp
sbb
(bad)
push
ret
faddp
in
ret
cs
jmp
(bad)
cmps
mov
xor
cmp
mov
popa
addr16
aaa
jae
mov
sbb
mov
ret
ret
shl
jl
stc
pop
imul
jae
hlt
cmp
push
sub
lods
xchg
daa
xchg
gs
popf
push
aaa
sub
retf
lock
add
push
lods
jmp
or
inc
sbb
test
jae
aam
and
lods
outs
into
or
xchg
dec
and
inc
and
pop
and
adc
into
jne
inc
std
stc
sub
int3
cmp
inc
jbe
push
data16
jo
stos
jmp
inc
fistp
xchg
pop
icebp
fsub
(bad)
bound
cmp
cmp
xchg
jl
pop
stos
in
or
(bad)
leave
fisttp
rcr
jg
push
arpl
mov
(bad)
imul
movs
pop
xchg
shl
and
inc
cmp
aad
xchg
fadd
mov
inc
pop
ss
push
fs
jg
gs
shl
cmp
xor
jmp
and
ret
test
jecxz
cmp
mov
sub
push
mov
xchg
dec
idiv
out
mov
xor
fs
cli
add
pop
rol
adc
sbb
ss
jl
icebp
cmp
leave
pop
push
or
fsub
test
adc
push
dec
nop
dec
sub
push
addr16
dec
sbb
fmul
std
dec
jecxz
dec
fmul
xchg
dec
cmps
dec
loopne
lahf
jnp
frstor
mov
push
cmp
int3
xor
cdq
aad
(bad)
in
cmp
call
data16
push
xor
jmp
push
stc
fidivr
ins
nop
mov
jl
movs
xor
dec
jae
add
daa
das
out
sub
ret
pop
push
mov
fcom
lods
dec
xchg
ret
jecxz
push
mov
movs
sbb
sub
pop
mov
mov
adc
jo
rol
add
or
jle
sub
(bad)
push
mov
lock
shl
mov
adc
loope
sbb
or
inc
inc
add
mov
mov
xchg
or
cmp
mov
std
xchg
out
and
push
clc
shl
imul
fwait
push
dec
adc
ins
cmp
repnz
mov
mov
dec
mov
jo
stos
and
jl
adc
pop
dec
or
into
data16
shr
sar
(bad)
or
adc
dec
jmp
cmps
inc
and
retf
jecxz
retf
cmps
xor
xlat
pushf
(bad)
pop
push
adc
call
std
dec
sbb
mov
dec
rol
shl
push
test
call
dec
bound
ds
ins
sbb
and
fst
outs
pop
push
scas
repnz
mov
jle
(bad)
mov
xor
mov
mov
and
movs
xor
mov
jg
pop
out
(bad)
sbb
dec
mov
mov
xor
or
sbb
cld
mov
sahf
ror
iret
add
(bad)
push
ins
out
pushf
cli
jecxz
xlat
test
pop
aas
rcr
hlt
pusha
pop
push
push
push
cmps
cmp
jnp
mov
mov
test
mov
bound
push
mov
mov
sub
jbe
adc
retf
cmp
push
movs
jae
dec
fsub
stos
shl
pop
enter
into
xchg
dec
jne
es
aaa
(bad)
add
jmp
push
test
dec
outs
shr
add
je
iret
mov
js
fmul
mov
mov
dec
test
mov
jmp
adc
cmp
arpl
jo
cmp
mov
sub
inc
mov
lea
and
and
test
adc
jnp
pop
mov
lods
ss
(bad)
fisub
out
mov
jp
push
push
mov
dec
cmps
es
add
mov
outs
ins
fcom
inc
inc
test
pop
(bad)
mov
add
mov
out
pop
sub
adc
jbe
xchg
sub
push
in
outs
mov
sub
push
adc
rol
out
shl
cmp
xchg
(bad)
push
call
mov
ja
mov
pop
push
push
cdq
mov
and
retf
lock
mov
je
call
xor
jmp
imul
and
and
shr
clc
xlat
out
hlt
in
ficom
movs
mov
push
into
mov
fs
icebp
inc
add
fldenv
push
loope
jl
fwait
push
xchg
pop
mov
mov
pusha
jg
jb
int3
adc
adc
and
(bad)
inc
add
cmp
cmp
pop
aam
lds
inc
dec
mov
mov
scas
lea
and
pop
bound
add
clc
adc
out
jp
dec
cmps
adc
sbb
mov
mov
jo
rcr
repz
dec
out
adc
push
adc
push
sub
es
data16
sahf
sub
jmp
xchg
imul
xchg
pop
mov
bound
daa
mov
(bad)
push
pop
jle
cld
adc
inc
xchg
int3
sub
jl
dec
sub
push
aaa
xor
xchg
add
aad
shr
mov
loope
push
mov
mov
xor
push
cmp
sub
mov
aas
(bad)
mov
dec
and
sub
xchg
lods
shl
add
cmp
jns
inc
xor
into
inc
jo
aas
xor
fbld
mov
shr
dec
sub
stos
or
daa
or
xchg
push
sar
clc
scas
push
xor
(bad)
and
adc
inc
jecxz
mov
adc
mov
jne
sahf
xor
mov
mov
inc
mov
retf
out
enter
jle
push
pop
push
scas
cmps
aad
pop
pop
js
pop
pushf
mov
imul
out
mov
je
mov
add
xchg
cmp
pop
and
mov
xchg
add
in
push
(bad)
sbb
cmp
data16
or
jmp
ins
sub
mov
das
ret
cmc
xchg
icebp
sub
or
jecxz
outs
xchg
xchg
lods
in
sub
add
popa
mov
imul
repz
dec
sub
and
inc
jo
stos
out
imul
adc
(bad)
ins
and
cmp
es
xor
mov
int3
ret
jbe
inc
sar
jbe
push
or
add
lock
xchg
leave
mov
cs
fbld
fistp
imul
shl
bound
mov
scas
jecxz
sbb
test
aad
mov
cli
dec
mov
mov
mov
(bad)
(bad)
push
and
std
ficomp
sbb
fisttp
jo
mov
mov
je
xchg
cdq
sbb
jg
test
pop
test
lock
sbb
ror
sub
fbld
out
call
enter
test
imul
fs
(bad)
out
cmp
xlat
repz
mov
and
xchg
rol
cmp
lods
in
sbb
sub
dec
test
or
imul
lods
call
xchg
jmp
xchg
outs
shr
dec
test
mov
sbb
(bad)
fdiv
adc
fidivr
and
jmp
push
stos
jmp
dec
mov
retf
mov
(bad)
jmp
mov
jmp
jb
pop
sti
inc
inc
bnd
and
push
mov
sbb
cmps
loope
ds
sub
jnp
ret
nop
jno
bound
jmp
daa
std
xchg
in
xchg
or
in
retf
mov
out
lods
das
mov
and
mov
and
ins
inc
stos
dec
mov
adc
jns
mov
and
jmp
int3
call
xor
mov
sub
cmp
aad
aad
jmp
mov
into
fwait
jecxz
aas
xchg
and
push
test
cmp
icebp
sbb
in
sti
les
sub
jnp
xchg
dec
ret
aad
lock
pop
push
inc
sub
nop
mov
jmp
push
fwait
in
ins
fistp
stos
shl
jmp
cmps
jge
adc
in
or
mov
aas
into
jge
outs
and
(bad)
jbe
out
mov
fistp
cmp
xor
mov
dec
call
setnp
js
pop
adc
sets
outs
jns
mov
inc
sbb
test
fnstenv
ds
sti
inc
mov
shl
(bad)
fcomp
in
in
mov
jbe
aas
cmp
xchg
adc
xchg
mov
and
fwait
loope
or
cmps
mov
ins
aad
push
rol
adc
inc
dec
xor
stos
jns
xor
pop
cmp
mov
cmp
shl
enter
mov
inc
inc
mov
lods
mov
popa
mov
fadd
gs
add
stc
movs
in
inc
(bad)
mov
hlt
xor
test
mov
push
fs
stos
push
push
xchg
inc
jae
cdq
dec
adc
and
add
mov
jne
pop
(bad)
or
stos
scas
xchg
jne
add
in
cmp
xor
or
push
or
mov
loop
sub
jno
retf
(bad)
aas
and
mov
out
dec
xchg
or
mov
je
xor
js
xchg
sub
or
adc
push
ins
outs
mov
add
adc
test
sbb
jo
test
add
fld
jg
das
xchg
repz
mov
adc
outs
into
std
imul
ffree
xchg
push
add
cmp
mov
xchg
aaa
iret
xor
sub
lods
aas
xor
popa
jecxz
jne
jns
push
out
cmp
mov
mov
out
mov
push
loop
fwait
cmp
call
rcl
or
mov
movs
aas
fwait
(bad)
in
loop
stc
cmp
sar
outs
out
aaa
dec
cmp
call
jns
(bad)
xchg
mov
jne
pop
xor
mov
rol
inc
out
out
imul
push
push
ror
inc
jecxz
scas
imul
dec
jmp
push
stos
pusha
lods
les
movs
aam
mov
cmp
aad
dec
and
icebp
xchg
xor
int3
cmp
or
arpl
mov
loopne
std
mov
ret
icebp
call
jge
in
jb
shr
sub
stos
mov
mov
stos
sbb
ret
mov
sub
bnd
dec
mov
cmp
daa
data16
jne
aad
std
sar
aaa
xchg
mov
adc
xchg
js
inc
bound
mov
mov
(bad)
push
cli
cmc
mov
push
sar
(bad)
scas
rcl
adc
mov
xor
jb
mov
xchg
push
rcr
dec
dec
dec
popf
jmp
in
js
jnp
adc
jp
jp
(bad)
xor
push
jecxz
jg
pop
jmp
ins
repz
xor
icebp
cmc
(bad)
sub
mov
arpl
stos
out
xchg
mov
mov
jmp
outs
cwde
repz
test
mov
xor
xor
icebp
pop
add
jo
ins
cld
cdq
adc
or
sahf
or
cwde
mov
and
and
push
aaa
lds
add
repz
mov
jmp
lea
sbb
gs
test
pop
hlt
call
add
or
bound
cmp
cli
inc
mov
mov
inc
outs
sbb
add
pop
pop
mov
jae
or
add
enter
mov
pop
pusha
mov
mov
call
(bad)
sti
cs
into
retf
jo
movs
mov
dec
xchg
aam
rol
jp
jecxz
out
jnp
xchg
mov
mov
push
jno
clc
and
sub
xor
push
test
inc
jp
xchg
pop
jg
push
mov
or
scas
fdivr
xlat
in
dec
xchg
adc
scas
iret
xchg
mov
sub
and
inc
imul
das
arpl
and
cmp
mov
xchg
aam
mov
clc
inc
repz
jl
shl
push
jae
adc
out
sub
addr16
cmp
lock
or
clc
mov
dec
pop
movs
mov
dec
test
and
pop
mov
mov
adc
dec
mov
or
lock
sahf
es
mov
sub
mov
(bad)
push
pop
jb
cwde
pop
lods
sbb
cmps
cli
dec
jg
mov
enterw
jl
mov
sti
shr
stc
(bad)
or
out
and
mov
jmp
and
out
dec
icebp
add
and
pop
adc
and
cmp
fmul
lods
sub
push
aaa
test
hlt
iret
xchg
mov
inc
pop
ret
xchg
jmp
jmp
repnz
mov
rcr
imul
fucomi
or
inc
cmp
out
mov
in
and
xor
mov
add
and
mov
push
or
dec
fsubp
jne
shr
jge
xchg
pop
sbb
cdq
or
or
test
retf
xchg
push
in
dec
cmp
and
xchg
ds
gs
push
ins
test
std
ja
pop
inc
lock
(bad)
(bad)
or
cmp
data16
fst
ss
(bad)
cs
jl
push
test
inc
cmp
lock
test
(bad)
mov
jmp
out
or
xlat
popa
push
out
movs
sub
js
leave
je
cwde
(bad)
fistp
scas
call
pop
or
mov
fisubr
jb
adc
dec
mov
push
cmp
xchg
mov
lock
sbb
mov
cmp
test
lods
sub
jge
or
inc
jb
fstp
(bad)
sbb
sbb
jmp
adc
js
push
lock
xchg
jns
sub
jnp
cdq
cs
dec
dec
mov
add
in
mov
xchg
jmp
stos
cld
outs
cmps
jmp
and
mov
mov
rcr
and
push
in
cmp
call
ret
xchg
int
xchg
js
leave
test
pop
hlt
out
add
add
mov
pop
das
retf
jmp
popa
mov
xchg
sbb
bound
fs
neg
int3
mov
stos
fsub
push
loope
retf
repz
call
clc
outs
retf
push
xlat
mov
retf
test
cmp
pop
xor
sbb
fucom
sbb
xchg
sub
sub
cmc
mov
dec
push
cmps
mov
arpl
jnp
xchg
mov
loope
movs
test
jmp
aaa
pop
aam
sbb
xor
sbb
imul
data16
fcmove
gs
cmp
jge
jbe
pop
mov
xor
xor
loopne
repnz
ss
retf
sbb
sbb
(bad)
retf
sbb
(bad)
mul
mov
mov
hlt
test
movs
xor
cld
pushf
aaa
push
jg
cs
loop
(bad)
lock
mov
sbb
or
outs
add
ret
(bad)
repnz
aaa
popf
(bad)
fsubr
dec
sbb
ficom
add
movs
bswap
das
mov
push
ins
inc
pop
fiadd
retf
iret
shl
jge
and
and
(bad)
and
movs
nop
and
in
mov
std
xlat
xor
xor
repz
xchg
(bad)
sbb
and
xor
cmp
jo
add
xor
lock
jb
pushf
cs
mov
(bad)
fadd
jge
int3
add
sbb
sbb
and
or
lahf
enter
imul
repnz
sub
loop
loopne
das
cmp
cs
(bad)
push
aad
sbb
sbb
int
cmps
jp
jnp
scas
popf
jb
dec
dec
xor
mov
rcl
pushf
scas
test
stos
stos
(bad)
xor
cmp
fist
xor
out
xchg
jae
or
xchg
inc
push
pop
rcr
push
scas
push
inc
lahf
aas
shl
pop
retf
dec
push
mov
lds
jp
call
cld
ret
dec
repz
sbb
mov
adc
jle
xor
popf
jae
or
push
aad
pop
mov
and
jmp
mov
mov
mov
sti
(bad)
(bad)
and
adc
xchg
mov
je
sub
out
lock
sbb
mov
arpl
cwde
jae
add
movs
inc
jmp
arpl
dec
mov
sub
cmp
fnsave
lock
jbe
into
mov
or
mov
xchg
mov
cmp
inc
sub
mov
pop
dec
(bad)
out
pop
icebp
or
js
loope
and
adc
cmp
cmp
push
ins
gs
sub
pop
mov
cmp
sub
or
movs
pop
jmp
cmc
mov
pop
push
xchg
fcmovnu
push
aas
inc
call
xor
in
(bad)
call
outs
int3
push
in
and
iret
lods
mov
jmp
sub
(bad)
ds
arpl
call
inc
mov
aam
xchg
in
jbe
mov
(bad)
outs
jno
lods
mov
pushf
pop
pop
mov
retf
outs
dec
jns
in
sbb
mov
dec
jae
and
ja
imul
fsub
into
cdq
mov
push
and
xor
lods
dec
inc
sbb
jle
sbb
xchg
shl
push
pop
jg
jmp
and
fcomp
(bad)
pop
test
call
rcr
push
pop
mov
jnp
cli
icebp
nop
cmp
pop
push
jbe
movs
iret
inc
mov
fwait
aam
fs
movs
push
xchg
dec
cs
outs
cmps
jg
fwait
jo
loopne
xchg
mov
icebp
(bad)
mov
cmps
ds
inc
pop
push
pop
push
xchg
cwde
and
lods
rcl
mov
jae
cmps
mov
ror
sub
ins
pop
push
push
pop
or
or
sbb
mov
jecxz
pop
mov
daa
mov
xor
cmp
push
icebp
inc
add
(bad)
dec
ret
jbe
cmps
into
jge
das
loopne
mov
in
movs
adc
jae
scas
mov
addr16
mov
test
out
cs
repnz
mov
movs
mov
call
into
(bad)
sub
into
outs
repz
xor
push
fisubr
cmp
ins
add
sbb
push
add
iret
push
outs
dec
mov
push
mov
(bad)
adc
scas
stos
outs
and
lods
cmp
cmp
dec
out
outs
rcr
push
mov
add
push
xchg
enter
cmps
mov
inc
adc
jo
jbe
ror
jecxz
cdq
data16
and
add
fdivr
outs
outs
jge
lds
jmp
lock
sbb
loop
sub
jge
popf
and
push
inc
nop
arpl
fidivr
inc
out
inc
cmp
mov
in
fldenv
and
daa
retf
into
xchg
add
out
je
xchg
shl
ds
jmp
mov
jne
mov
and
or
mov
lds
scas
mov
and
repz
cmp
inc
mov
and
push
dec
xor
frstor
pop
cmp
leave
mov
mov
sub
mov
push
mov
adc
mov
xchg
mov
jl
cdq
and
and
mov
xor
cmps
add
aaa
sbb
pusha
cmps
fwait
push
out
fwait
prefetchnta
mov
mov
pop
lock
popa
shl
inc
cmp
daa
cmp
or
shl
fidivr
pop
and
mov
cs
call
je
xchg
dec
xor
mov
clc
add
mov
test
fcmove
inc
arpl
addr16
mov
mov
pop
in
movs
outs
xchg
jno
dec
ror
adc
mov
push
test
shr
ror
cdq
xor
add
sbb
pop
loopne
(bad)
sbb
aam
push
mov
rcl
jns
xor
call
push
pop
or
mov
call
xchg
jne
icebp
lahf
ret
out
dec
in
adc
sub
lock
data16
and
mov
mov
fld
imul
loop
retf
add
sti
push
in
xlat
xchg
push
xor
(bad)
out
int
ss
push
xchg
sahf
jne
clc
pop
sub
inc
mov
sahf
scas
jo
mov
jp
cmp
xchg
mov
jge
sbb
sbb
jb
lds
cli
cmp
aaa
cmc
lahf
loop
mov
repz
sbb
inc
push
sbb
or
push
lds
int
fisub
fmul
push
push
lock
cdq
lds
cmp
add
fmul
mov
stc
pop
scas
adc
inc
dec
scas
data16
test
jle
inc
aad
(bad)
(bad)
sbb
mov
sbb
mov
push
mov
and
test
mov
mov
enter
and
cmp
adc
push
ds
xor
push
adc
popf
dec
sub
or
mov
test
call
mov
push
lods
jns
es
dec
fist
icebp
aaa
sub
fiadd
sti
inc
cs
pop
enter
and
ror
add
cs
js
mov
rcr
push
icebp
nop
inc
into
test
sub
dec
je
inc
vpmacswd
xchg
push
jae
fld
scas
pop
loop
mov
lock
not
imul
adc
mov
in
pusha
push
sbb
ret
addr16
pop
test
sub
iret
cwde
jb
mov
cmp
xchg
add
sub
xchg
xchg
xor
scas
lds
or
jbe
cld
or
pop
rcl
or
outs
retf
sbb
mov
ficomp
push
(bad)
adc
mov
jle
call
jl
mov
cmp
enter
out
push
in
aam
or
and
(bad)
call
loope
jp
cmp
mov
adc
cld
call
lea
jnp
mul
and
lods
mov
sub
pop
xor
aam
fst
xor
add
jl
aad
xchg
dec
lea
and
scas
jmp
push
popa
je
cmps
ja
shl
cmps
jns
adc
shr
inc
push
int3
mov
jno
cmps
jmp
jle
cdq
fs
enter
ins
rcl
(bad)
popa
or
xchg
je
adc
cli
xlat
mov
jge
enter
jp
sar
aad
sub
fmul
idiv
pop
daa
std
inc
inc
dec
jb
test
sub
enter
push
(bad)
jne
add
fisubr
sub
push
fwait
or
fs
shr
add
retfw
push
jo
push
inc
icebp
enter
stos
imul
leave
movs
sbb
dec
and
inc
call
push
(bad)
fcomp
gs
ror
inc
push
mov
dec
je
loop
xor
jns
and
or
loopne
int3
fwait
mov
push
mov
jne
jne
mov
(bad)
fcmovne
and
mov
cmp
cmps
mov
pusha
pop
and
sub
clc
jecxz
popa
dec
push
xor
push
push
sbb
jecxz
pop
and
movs
mov
jb
xor
xchg
xchg
cmps
jecxz
jge
(bad)
int3
and
je
dec
test
adc
mov
sti
jae
xchg
xor
cmps
mov
aam
xchg
lahf
dec
xchg
or
jae
mov
jmp
jae
std
mov
xchg
jnp
loop
fld
lods
shr
inc
sub
js
mov
shl
test
mov
mov
jb
fnstenv
adc
gs
shl
aad
outs
arpl
sbb
addr16
sub
jne
outs
aaa
pop
jle
fild
loop
xor
xor
sub
dec
test
pop
jns
icebp
fcom
(bad)
jecxz
dec
lock
xor
xchg
jo
mov
inc
inc
pop
or
(bad)
and
test
mov
dec
add
mov
mov
jns
xchg
sbb
fimul
popa
sti
xor
sub
nop
inc
mov
out
mov
icebp
lods
loope
fsub
movs
pusha
test
pop
fsubr
xor
jle
jp
mov
test
adc
mov
add
test
loope
fsub
in
retf
and
cmp
ja
imul
add
mov
jbe
push
mul
jge
push
push
mov
dec
sub
add
js
shr
inc
mov
jb
mov
cmc
sub
arpl
sbb
fisub
int3
or
popa
lods
cdq
mov
int
stc
pop
fwait
dec
push
cli
mov
sub
imul
add
sahf
add
nop
mov
dec
push
pop
pop
ins
fist
xchg
leave
sub
retf
mov
retf
movs
sahf
pushf
sti
add
out
in
add
adc
das
loop
jle
sahf
in
xchg
dec
mov
mov
lock
lea
mov
dec
push
adc
(bad)
push
mov
in
popa
cmp
xor
and
inc
pop
and
push
dec
mov
inc
rol
xchg
cld
and
(bad)
(bad)
data16
in
xchg
sub
or
shl
mov
xchg
xor
gs
in
sub
inc
dec
jmp
iret
jmp
cmp
add
xchg
rcr
out
or
cwde
popa
test
ret
dec
mov
xor
jb
push
adc
sti
push
sub
fisttp
adc
and
stc
(bad)
shl
sbb
call
mov
cli
adc
popa
mov
push
mov
das
repnz
push
sub
lods
or
(bad)
scas
add
inc
mov
aam
jmp
ins
sbb
pop
or
or
jb
ret
mov
push
sbb
mov
stos
add
push
fld
xchg
bound
test
sbb
xlat
xchg
js
es
sub
ret
jmp
or
lods
shl
retf
xlat
dec
fdiv
and
jp
mov
out
mov
xchg
mov
dec
jecxz
pop
inc
mov
lods
push
cdq
mov
icebp
mov
mov
es
cmp
or
or
jecxz
into
sbb
inc
aad
dec
adc
mov
pop
push
xchg
jge
cmps
add
pop
rol
adc
jmp
mov
je
ins
out
sub
sbb
pop
sub
dec
push
jle
pop
mov
adc
sbb
ss
outs
cmp
add
push
fbld
pop
xchg
mov
mov
loopne
push
shl
das
inc
push
mov
jecxz
mov
inc
call
ja
xor
mov
es
out
dec
scas
nop
dec
mov
mov
push
xchg
frstor
add
out
das
ret
xchg
sub
mov
mov
fs
stos
add
add
in
sub
out
mov
or
or
dec
or
xor
(bad)
fdivr
in
pop
stc
es
mov
sub
or
xor
cmp
jns
lock
fst
mov
sbb
add
lock
aad
rol
stos
(bad)
mov
iret
and
adc
xor
cmp
cmp
inc
lea
(bad)
push
lahf
push
fsubp
or
xor
push
adc
in
pop
cdq
mov
and
xor
arpl
in
addr16
imul
push
push
jecxz
pop
and
cmps
jge
pop
push
sub
add
jo
add
or
call
daa
or
xchg
jp
sub
sub
mov
jns
push
lock
jmp
or
loopne
or
stos
adc
scas
push
mov
mov
xor
dec
xor
cmp
push
add
push
and
sti
je
mov
iret
scas
fisubr
cmc
add
ds
ret
sub
or
jl
cs
and
push
arpl
mov
push
loop
ins
xor
adc
vmwrite
pop
movs
ins
jbe
dec
dec
outs
inc
out
pop
retf
jns
shl
and
pop
adc
mov
out
sub
mov
mov
int
pop
test
pop
push
cmp
pop
fcom
cmc
dec
pusha
retf
or
retf
mov
xlat
loop
inc
xchg
rol
int
dec
je
(bad)
not
ins
mov
sub
ret
fldenv
(bad)
(bad)
(bad)
mov
mov
adc
xchg
add
pop
sub
inc
push
loop
mov
fistp
xchg
push
out
sbb
es
xchg
inc
jb
cmp
jns
mov
scas
iret
jnp
dec
cwde
sbb
aaa
lods
daa
sar
call
push
and
out
jl
ds
fld
div
js
pushf
xchg
pop
dec
dec
inc
cmp
xchg
mov
sti
icebp
lds
xor
xchg
dec
fs
movs
fcomp
ins
jmp
xchg
pop
mov
cmps
jmp
sbb
lds
fnsave
pushw
sub
pop
jg
cmp
pusha
(bad)
in
dec
ss
lods
jl
cmps
jae
fyl2x
jns
xor
ret
lods
xchg
cld
adc
sbb
xchg
cmp
adc
sti
cmp
adc
sbb
push
das
dec
xor
int3
jb
inc
xchg
imul
adc
push
arpl
jle
push
icebp
inc
pop
sub
and
jle
and
in
jno
daa
jmp
or
les
fist
test
rcr
lds
cs
push
xchg
adc
setb
je
mov
gs
xchg
mov
sub
jle
jne
push
mov
and
mov
push
repnz
inc
mov
loope
jl
mov
adc
ins
add
jmp
imul
mov
or
jb
pop
cmp
daa
call
mov
xchg
adc
(bad)
sbb
sbb
cmc
imul
add
jle
popa
xchg
fisubr
mov
sti
sti
and
adc
push
cmp
mov
aas
or
sub
jmp
pusha
dec
in
test
and
lods
jmp
je
push
add
add
ins
push
xchg
jno
xor
and
mov
push
cdq
push
xchg
dec
fs
idiv
cmps
js
add
test
test
call
test
xchg
fucomp
push
cmc
xor
xor
shl
push
jno
fisubr
test
lods
or
xor
cli
mov
sbb
jb
leave
sub
add
mov
loopne
call
push
xchg
cmps
or
cmp
xchg
cmp
sub
pop
imul
jae
push
sbb
nop
pop
dec
jbe
je
mov
pop
ss
(bad)
stos
pop
push
popa
js
jle
and
dec
jmp
xchg
dec
(bad)
leave
xchg
jne
(bad)
push
mov
(bad)
xchg
enter
out
or
les
jne
shl
sbb
test
outs
adc
sbb
test
fstp
add
fadd
sbb
pop
daa
sti
cmp
maskmovq
jae
adc
push
and
push
mov
aad
mov
out
fwait
mov
mov
popf
and
fldenv
mov
sbb
imul
pop
jns
ins
rcr
call
idiv
or
sahf
cmp
addr16
xor
imul
pop
leave
sub
sbb
mov
hlt
pop
push
mov
movs
jmp
pop
frstor
inc
mov
and
pop
push
int
iret
gs
punpcklwd
stos
mov
cmp
hlt
ja
pop
pop
fiadd
ror
cmp
scas
inc
(bad)
(bad)
test
jnp
sub
pop
dec
repz
shl
mov
and
fcomi
and
mov
pusha
in
fdivr
mov
loope
adc
aaa
cld
dec
mov
in
push
inc
mov
pop
push
and
out
or
ret
lds
sub
pop
adc
test
cbw
mov
or
mov
xchg
xchg
mov
mov
hlt
dec
jl
xchg
lock
xlat
shl
sbb
popf
xor
xlat
add
cmp
sub
push
or
xchg
jo
pusha
jne
jmp
sahf
adc
enter
dec
stos
aas
into
push
or
js
scas
in
out
jge
add
ret
cmp
hlt
lea
in
pop
jno
inc
test
mov
xchg
pop
daa
aas
retf
shl
jne
aaa
jns
jg
and
fcomp
daa
outs
(bad)
outs
dec
(bad)
mov
fs
pop
rcr
add
and
call
scas
mov
aam
or
add
inc
scas
mov
cmp
clc
out
test
cmc
bound
test
pushf
iret
fldlg2
push
sub
outs
leave
aad
xor
stos
movs
sbb
ficom
jle
push
jno
daa
lea
sahf
mov
fst
(bad)
and
jns
sub
push
add
retf
sar
push
and
dec
icebp
gs
mov
push
jae
inc
or
mov
in
xlat
or
mov
enter
and
jmp
sahf
hlt
sub
stc
fisubr
jns
pop
adc
sbb
jp
push
clc
adc
and
add
jge
push
pop
scas
cmps
lods
movs
lods
out
ins
lds
ret
arpl
dec
pop
ret
jl
sub
jge
(bad)
cmc
aaa
movs
sbb
inc
jecxz
mov
xchg
test
scas
push
mov
adc
add
inc
jl
imul
inc
xor
ja
test
xchg
arpl
jno
sar
mov
dec
jbe
mov
popa
inc
loop
je
sbb
push
pop
mov
scas
lds
sbb
pop
in
(bad)
sub
push
aad
mov
add
push
jg
mov
call
jae
sub
sbb
inc
popa
xor
scas
inc
push
or
out
inc
cwde
fwait
lahf
js
jns
movs
mov
cwde
sub
push
lods
adc
sbb
pop
mov
or
jg
sbb
rol
sub
mov
pop
inc
div
sbb
loopne
lahf
inc
mov
push
push
int
test
mov
xor
cmp
lock
push
aad
(bad)
in
sbb
jb
push
push
jp
pusha
out
or
cli
xadd
nop
stc
stos
outs
xor
adc
data16
pop
mov
ds
cld
pusha
mov
lods
dec
out
stos
jmp
scas
or
xor
loope
repnz
sbb
dec
enter
popf
imul
popf
xchg
cmps
in
sub
jbe
repz
jge
fs
pop
mov
and
mov
or
push
mov
iret
rol
and
lea
hlt
fldcw
mov
lahf
inc
js
inc
lea
push
inc
or
div
arpl
les
or
nop
fisttp
add
fld
rol
ins
add
das
data16
jbe
sbb
out
inc
rol
xchg
in
xor
pop
fidivr
fdiv
mov
cwde
cmps
sahf
rol
sub
aas
in
mov
mov
inc
fstp
xchg
mov
sub
mov
add
adc
imul
dec
loope
xrelease
push
loopne
(bad)
cmp
hlt
mov
mov
jno
ror
jae
mov
movs
sub
pop
mov
mov
push
pushf
arpl
or
outs
pop
mov
jle
jg
or
push
xchg
and
cmp
hlt
sti
inc
out
ja
xor
or
mov
je
call
loop
(bad)
mov
push
mov
mov
xor
and
mov
jge
leave
mov
aam
das
ja
mov
jbe
(bad)
pop
in
xor
lods
or
and
cmp
xchg
mov
das
mov
aad
and
push
cmp
and
mov
imul
xor
push
jnp
dec
aaa
push
dec
mov
aaa
loopne
add
stos
loop
and
adc
ins
stos
popa
sti
xchg
and
mov
add
popf
aaa
lds
mov
lds
bound
push
call
out
ss
neg
jnp
add
arpl
and
adc
js
and
jmp
sbb
ret
mov
sahf
pop
orps
sbb
sub
jge
lock
xor
jle
aas
cmp
pop
jecxz
jmp
in
out
retf
lea
pop
cmp
pop
sbb
in
mov
fnstcw
call
ficomp
pop
out
js
push
std
sub
hlt
imul
ja
pop
out
push
mov
(bad)
icebp
mov
int
mov
mov
shl
inc
popf
ja
fs
mov
add
push
nop
popf
inc
mov
loopne
jno
rcr
inc
test
pop
lea
lock
repz
retf
repnz
sub
sahf
jg
xor
in
fsubr
sub
push
dec
mov
aad
data16
fsubr
rol
es
sub
mov
cmp
iret
jmp
cwde
fdivr
out
pushf
push
inc
adc
or
ret
in
push
mov
add
pop
jne
push
adc
test
into
ret
push
mov
popf
not
stc
cmc
ds
lods
cmp
popf
pop
mov
pop
aaa
out
(bad)
lahf
repz
test
fimul
sbb
mov
icebp
sar
sbb
ficom
popa
loop
cwde
jno
cmp
pop
push
in
test
dec
inc
les
xchg
mov
mov
inc
ret
xchg
rol
mov
popf
pop
jne
mov
movs
retf
push
cmps
inc
ret
jmp
pushf
or
inc
xor
in
mov
ins
fmul
jae
jmp
movs
jo
mov
mov
mov
sbb
rol
jp
icebp
stos
in
and
test
pop
jne
fdiv
push
adc
sbb
enter
xor
push
mov
push
sbb
mov
es
sub
cmp
cmp
mov
or
shl
adc
stc
push
sbb
loopne
pop
xchg
clc
dec
pop
cmps
cmp
inc
clc
fisttp
iret
lahf
or
test
jg
in
in
inc
aad
pop
adc
shl
pusha
sub
push
cmps
pusha
xchg
mov
cdq
loop
mov
dec
pusha
sbb
cdq
adc
pop
xchg
cmps
mov
cmp
adc
add
push
adc
cmp
inc
and
imul
adc
cmp
gs
pop
mov
cmps
movs
ret
sub
mov
test
mov
pop
enter
ficomp
ds
test
ss
push
jecxz
int
cwde
mov
cmp
push
jl
adc
test
xchg
push
xor
mov
rcl
push
popa
lods
loop
popa
add
loopne
and
mov
stos
popf
outs
lods
sub
in
imul
dec
call
xor
cmp
popa
and
push
lahf
mov
pop
sbb
je
lods
mov
push
inc
scas
fcom
sar
leave
ins
jns
idiv
mov
stc
cmp
mov
push
jne
lahf
mov
push
push
dec
addr16
dec
fcomp
mov
jae
mov
push
dec
xchg
cwde
fs
shr
div
js
add
inc
mov
ss
sbb
mov
fcom
xchg
cmp
push
mov
xchg
or
mov
stos
(bad)
inc
loopne
or
xor
add
iret
xor
loopne
pop
lahf
inc
pop
adc
sub
jae
mov
cmps
push
js
push
xchg
mov
test
repz
mov
inc
gs
outs
sbb
(bad)
push
add
stos
cmp
and
stos
mov
je
inc
es
cs
lahf
leave
ret
xchg
pop
mov
inc
mov
jmp
iret
ret
mov
or
in
pxor
in
mov
es
lods
inc
test
xchg
ss
xchg
pop
fdivr
mov
fwait
(bad)
cli
inc
es
sub
add
cmp
cld
mov
add
lods
xor
jmp
out
add
call
add
ficomp
jmp
fcmovb
sbb
test
add
push
mov
sbb
cwde
stos
push
xchg
lds
in
mov
fdivr
or
push
fild
out
outs
loop
pop
or
cmp
rol
push
dec
sbb
ud2
ja
push
std
stc
xor
sbb
lods
dec
fdivr
enter
movs
pop
pop
ss
div
mov
out
jp
xor
or
adc
and
add
dec
(bad)
out
outs
outs
mov
push
scas
or
leave
das
test
int
movs
push
lods
mov
stc
mov
sbb
aas
mov
push
fistp
or
mov
or
jle
movs
add
push
sti
cmps
jge
lock
fnsave
xchg
inc
pop
push
jmp
or
xchg
cmp
mov
xor
mov
ja
and
mov
or
and
push
ss
out
and
push
test
outs
or
shr
xor
es
out
das
push
loop
stos
mov
mov
sub
repz
pop
movs
or
je
xor
cwde
and
xor
imul
push
fdiv
xchg
dec
cmp
sbb
push
leave
dec
add
sub
sbb
xchg
mov
sbb
push
scas
test
sbb
xlat
pusha
ffree
ds
enter
pop
test
fwait
cld
sbb
test
xor
lahf
(bad)
aam
in
shr
adc
ror
retf
cdq
jmp
movs
jle
imul
pop
scas
or
xchg
sahf
sub
pop
cmps
clc
adc
cld
out
pop
cdq
sub
jbe
loopne
push
shr
xor
pop
ret
or
movs
xor
xor
outs
inc
popa
push
or
adc
cmp
dec
das
cli
adc
adc
lahf
in
sbb
mov
pop
stos
sbb
arpl
mov
mov
iret
mov
fadd
popa
push
in
mov
dec
call
jae
addr16
push
test
out
mov
pop
jo
ds
sbb
in
xor
dec
cmps
ins
call
xchg
pop
cmp
fbstp
and
lods
cwde
mov
dec
pop
(bad)
jmp
fmul
sti
das
mov
mov
mov
xchg
and
dec
int
lock
das
(bad)
shl
jg
cld
dec
lds
in
data16
xor
jl
push
mov
add
cmp
sub
mov
xor
imul
push
sub
sbb
out
sar
out
push
add
cmps
sub
call
inc
in
fdiv
jmp
push
arpl
cmp
sbb
neg
loope
inc
retf
jl
mov
mov
es
xchg
pop
js
jecxz
xor
xchg
popf
mov
push
or
jnp
rcl
push
ja
sbb
pop
(bad)
mov
push
pop
adc
int3
or
push
and
retf
mov
(bad)
loopne
push
fs
add
sub
out
xchg
out
dec
stc
shl
cmc
mov
mov
cwde
mov
push
test
int
imul
cmp
push
dec
or
ss
sahf
pop
retf
icebp
jmp
pop
cld
fsub
mov
loop
sub
aam
es
jg
les
and
mov
xchg
aaa
sbb
aad
sub
pop
push
push
daa
push
mov
mov
int3
adc
frstor
pop
mov
push
dec
jp
push
jecxz
in
push
shr
mov
js
or
cmp
pop
hlt
outs
pop
lock
inc
dec
inc
repnz
mov
std
xchg
mov
inc
xor
fisttp
xchg
dec
sub
push
xor
shr
addr16
das
iret
add
jo
in
rcr
sbb
cmp
add
xor
icebp
rcr
scas
dec
rcr
xor
and
pop
sahf
and
xchg
test
pop
ret
pop
xor
(bad)
jl
xlat
in
lods
loopne
cmp
pop
idiv
fwait
lds
jb
push
xchg
(bad)
(bad)
xor
push
adc
gs
xchg
jle
add
add
call
jge
jle
pusha
push
sub
stc
push
das
lds
cmc
jp
push
inc
pop
pop
add
clc
push
push
das
mov
(bad)
out
enter
mov
mov
ror
loop
ficomp
rcr
ss
sahf
(bad)
jno
mov
jmp
mov
(bad)
mov
scas
loope
adc
ins
hlt
je
bound
jae
xchg
test
lds
sti
aad
mov
int3
add
mov
lds
mov
jl
daa
fcom
pop
int3
stc
sub
cmp
div
sbb
es
rcr
outs
into
push
push
movs
stos
test
cmp
stos
cli
(bad)
sahf
dec
sub
jo
mul
mov
idiv
(bad)
and
pop
imul
in
xchg
jno
and
test
add
cmc
std
daa
and
aad
mov
into
idiv
xchg
pop
jge
pop
jo
pushf
fbstp
add
pop
jb
(bad)
fistp
sub
cdq
fcmovnb
push
pop
mov
sub
add
cld
cmps
aas
pusha
cmp
je
cmp
jp
jbe
cmp
call
loope
adc
dec
jns
mov
js
lods
out
mov
pop
imul
ret
ins
jle
scas
inc
pusha
jle
adc
jno
pop
fsub
push
ret
out
push
xor
add
mov
(bad)
mov
pop
shl
(bad)
ja
xchg
lods
add
rcr
mov
icebp
push
pop
cmp
outs
dec
sahf
adc
ins
fisttp
inc
add
test
dec
pushf
icebp
cmp
(bad)
sub
jge
dec
pop
popf
or
xchg
mov
jge
cmc
xchg
mov
cmp
inc
push
inc
pop
adc
je
inc
xor
xchg
idiv
or
jns
shl
xchg
xchg
push
enter
sbb
repz
or
sahf
(bad)
(bad)
stos
or
aaa
pop
fist
push
jl
xor
adc
out
mov
mov
inc
imul
lock
vmaxss
sbb
sbb
jmp
sbb
sahf
jns
jg
in
and
ret
or
dec
jmp
inc
inc
push
iret
jmp
popa
xchg
sbb
mov
inc
mov
enter
dec
(bad)
cmp
add
mov
leave
jb
sahf
jmp
data16
or
jmp
xor
retf
stos
leave
dec
add
xchg
cmp
aaa
(bad)
and
aad
ret
mov
xor
push
xor
int3
clc
mov
push
or
sub
dec
mulps
sbb
mov
pop
loope
into
jl
inc
mov
inc
sbb
dec
repz
in
xchg
imul
dec
fild
cdq
cld
xchg
rol
lds
push
ret
lea
bound
hlt
fs
inc
arpl
cmp
add
movs
enter
je
adc
loopne
sti
sub
add
out
mov
cs
fst
inc
xchg
or
xchg
mov
mov
push
cmp
push
fld
enter
aas
jne
sti
neg
adc
cmps
in
aas
lahf
test
mov
inc
js
call
cmps
mov
div
fsubr
push
or
pop
pop
out
lahf
cmp
pop
add
push
mov
icebp
adc
icebp
in
js
mov
mov
stc
mov
test
cmp
rcl
gs
mov
pop
xlat
vpcmpeqw
mov
test
jecxz
sbb
add
jp
shr
pop
xor
call
(bad)
mov
icebp
mov
sbb
push
cmc
and
in
(bad)
mov
cwde
mov
or
sbb
lods
in
add
enter
push
mov
hlt
inc
mov
pop
or
or
loopne
sbb
clc
push
add
sbb
seto
push
mov
xchg
adc
cli
jbe
jae
mov
cld
jle
pop
pop
aas
push
mov
gs
imul
mov
jbe
sub
pop
add
lds
add
(bad)
in
stos
xor
lods
aaa
push
ss
popa
xchg
or
movs
and
mov
xchg
daa
stos
xor
push
fcmovb
sbb
aad
jmp
fcom
mov
lock
xchg
hlt
pusha
ss
xor
aam
mov
hlt
and
in
jl
pop
int3
pop
addr16
cmp
stc
call
call
das
pop
mov
jecxz
fwait
adc
(bad)
stos
clc
mov
fild
aaa
imul
lea
fisttp
ja
sbb
out
sti
jp
cmp
lahf
xlat
mov
das
xchg
cmp
add
leave
adc
add
faddp
fdivr
retf
(bad)
cmp
dec
inc
mov
fwait
packuswb
and
push
adc
dec
in
mov
dec
ret
nop
clc
or
pushf
in
dec
in
jge
pop
lods
test
or
adc
add
(bad)
push
push
fs
scas
scas
outs
(bad)
stc
cld
push
or
push
cmps
xchg
or
inc
or
mov
loope
test
nop
lods
dec
orps
daa
jbe
hlt
mov
push
sbb
sub
leave
push
outs
inc
jle
push
inc
out
lods
mov
inc
xchg
addr16
xchg
shr
mov
xchg
mov
jmp
movs
ins
sahf
sub
repnz
arpl
leave
in
int3
jbe
push
add
xor
mov
mov
mov
dec
in
mov
add
stos
cmp
or
push
pop
(bad)
pop
fbld
cmp
popf
ror
push
sbb
cmps
in
push
mov
in
push
out
push
je
(bad)
sub
out
xor
sub
ret
mov
cdq
imul
lods
je
push
xchg
mov
and
lock
cdq
outs
aad
jle
jg
mov
fwait
sbb
and
or
sub
xor
add
pushf
aaa
movs
mov
in
sti
das
ret
mov
hlt
outs
fwait
sti
lahf
mov
imul
jmp
stos
shl
push
mov
sahf
(bad)
stos
sbb
or
sub
leave
jl
ds
lods
sub
orps
jg
pop
mov
js
mov
pop
sbb
test
lea
push
sar
cmc
movs
das
mov
je
adc
adc
sub
std
jle
popa
out
loope
mov
fdiv
pushf
(bad)
(bad)
mov
adc
push
xchg
test
pop
fs
cmp
cmp
dec
sbb
fisub
dec
pop
jne
fcomp
mov
cmps
or
call
ret
push
int
aas
push
popa
push
cs
loop
sar
add
scas
or
inc
loop
cdq
(bad)
push
push
cdq
pop
push
mov
repz
jns
(bad)
sub
or
aad
cmps
fisttp
push
fs
jno
movs
or
ret
xor
cmp
dec
mov
in
xchg
mov
xor
push
rcr
xchg
test
mov
cmp
xor
cmp
mov
femms
int
pop
pop
mov
mov
iret
hlt
ret
repnz
dec
rcr
xchg
and
icebp
jno
mov
movs
push
inc
shr
das
icebp
cdq
dec
push
icebp
push
pop
add
ins
aam
repnz
mov
shl
xor
ret
mov
ret
adc
push
inc
sub
les
jg
clc
fldcw
mov
jp
push
nop
xchg
(bad)
jb
bound
das
arpl
test
push
sub
inc
popa
mov
sub
cli
pop
jge
fidiv
stos
push
loopne
aaa
and
xchg
imul
sub
cwde
jmp
call
sbb
ss
loope
jns
into
fnstsw
jge
lock
or
dec
sbb
jnp
xlat
push
ins
xor
push
in
mov
popf
(bad)
and
mov
out
cmp
mov
fwait
xchg
mov
pop
test
test
mov
hlt
cwde
pop
xor
xchg
mov
cmp
retf
in
push
aas
xor
ror
jp
jb
cmp
aaa
leave
std
inc
push
fisubr
inc
aam
fdivr
movs
and
xchg
(bad)
data16
dec
pop
inc
mov
aam
out
dec
bound
aas
pop
outs
pop
xchg
lea
mov
into
nop
xchg
daa
(bad)
mov
or
push
push
pop
jnp
sbb
mov
ins
cmp
call
jno
jmp
sbb
fsubr
mov
popf
xchg
das
call
add
fs
repnz
js
ret
xor
scas
stos
xchg
fcomp
mov
add
mov
dec
jl
push
dec
mul
jecxz
fcomip
aaa
mov
loopne
data16
in
movs
xchg
cmc
iret
add
outs
cmp
outs
xor
leave
daa
fldenv
retf
pop
fsub
cld
into
loope
sub
(bad)
(bad)
retf
pop
push
push
pop
and
shl
ss
mov
dec
xchg
cmp
(bad)
dec
xchg
mov
test
fild
mov
sub
jle
inc
cmp
call
inc
sub
ins
ss
push
(bad)
sti
cmps
out
add
test
xchg
xlat
push
das
dec
xlat
mov
xor
enter
mov
in
push
xlat
jp
mov
cld
jo
ret
mov
add
inc
daa
sbb
(bad)
lahf
jmp
shl
push
stos
push
rcr
out
test
jle
(bad)
popa
icebp
dec
cmp
dec
into
mov
fs
cmc
jae
pop
lods
fdivr
jl
ds
xchg
add
call
fmul
xchg
jb
stos
popa
enter
in
adc
cli
and
cmp
jle
inc
mov
bound
xchg
movs
mov
fisttp
dec
adc
jecxz
push
mov
sub
outs
enter
cmp
jp
adc
or
shl
dec
fstp
sub
ret
fisttp
cs
movs
push
retf
cmp
pushf
xor
cmps
jo
les
dec
jmp
loop
dec
dec
push
pop
xor
lahf
dec
hlt
add
fsubr
in
rcr
inc
lea
outs
(bad)
cmp
iret
cmc
bound
add
push
sub
add
jb
push
jg
jecxz
mov
xor
lods
sbb
xchg
inc
jbe
xlat
xor
arpl
mov
xchg
inc
xor
clc
(bad)
mov
retf
lea
jg
ins
dec
leave
cli
jl
lahf
(bad)
rcr
add
pop
cld
add
xor
outs
cs
icebp
pop
jb
hlt
pop
add
inc
stc
dec
das
xchg
push
and
sub
pop
loope
cmp
hlt
call
jge
daa
data16
pop
retf
popf
or
ss
mov
test
fs
ins
jp
mov
push
and
adc
mov
sbb
enter
mov
xchg
cmp
sub
mov
dec
jl
shr
and
jb
dec
and
les
repnz
(bad)
clc
test
and
pusha
lods
inc
mov
loope
xchg
jp
inc
rcl
int
cmp
es
jmp
sti
lods
xor
fisttp
sbb
dec
fsub
lods
mov
mov
test
jno
xor
pop
mov
stos
aaa
mov
cmc
add
push
sub
sbb
mov
scas
cdq
gs
lods
gs
aaa
xchg
dec
sbb
icebp
push
or
adc
nop
loopne
add
dec
and
xchg
mov
xchg
dec
cmp
dec
sbb
(bad)
jb
adc
dec
fs
xchg
inc
add
inc
mov
pop
mov
(bad)
pop
adc
pusha
jb
(bad)
adc
fmul
mov
or
mul
sub
mov
dec
inc
test
fmul
or
cwde
shl
jg
test
mov
retf
inc
jb
push
push
jle
in
cmp
dec
rol
mov
es
xor
in
push
(bad)
(bad)
arpl
jge
int
and
pop
adc
xchg
das
xor
mov
jno
jno
std
addr16
pop
js
or
ss
dec
fdiv
push
loopne
jmp
jo
in
imul
sub
and
inc
or
jg
popf
mov
enter
xor
gs
sbb
stc
mov
or
sub
ins
pop
mov
cmp
mov
sti
add
inc
add
inc
mov
fmul
lods
or
adc
div
adc
ins
outs
pop
retf
pusha
xchg
jmp
(bad)
aad
nop
mov
dec
repnz
mov
push
xchg
xchg
aaa
lahf
and
push
xor
mov
pusha
stc
dec
push
sbb
jne
add
cdq
sbb
dec
sub
mov
or
test
addr16
je
rcl
and
xchg
rcl
or
ins
movs
xchg
jmp
xor
and
das
xchg
push
push
ret
repnz
(bad)
dec
dec
dec
loop
jle
ins
cmp
mov
jnp
xor
mov
xor
ret
es
and
pop
jecxz
mov
sbb
add
push
xchg
jg
hlt
xchg
inc
mov
retf
xchg
cmps
cmp
aas
push
popf
mov
ins
(bad)
jbe
push
js
or
adc
cmp
inc
lahf
push
pushf
shl
int3
pcmpgtd
jl
test
pusha
and
mov
bound
inc
jl
mov
xchg
ja
mov
jnp
imul
out
aas
push
imul
or
fucom
jno
sub
and
mov
aas
lock
push
repz
mov
mov
popf
adc
call
pop
ins
or
mov
mov
ret
dec
push
mov
and
push
aas
inc
adc
imul
sti
test
sub
mov
mov
cmps
stos
aad
inc
int3
xchg
loop
dec
test
sbb
ss
or
ja
(bad)
ret
add
push
cmc
lods
jg
shl
ds
cld
fwait
jns
mov
out
rol
sbb
adc
pop
ss
movs
cld
mov
sub
jg
loope
and
and
mov
jno
into
dec
clc
pop
shl
imul
popf
call
cmp
cmps
xchg
mov
add
in
mov
cdq
push
fs
dec
out
stc
cdq
fsub
fist
mov
xchg
stc
inc
mov
add
fs
cmc
addr16
mov
adc
jbe
jne
or
add
data16
cmps
push
sbb
xor
mov
add
sbb
ins
into
mov
iret
lahf
pop
setne
jb
(bad)
cs
test
lahf
inc
jmp
xor
inc
test
pop
add
sbb
sub
mov
push
scas
test
sar
into
push
cmps
dec
mov
cmp
cmp
aas
retf
iret
push
outs
or
jecxz
cmps
mov
mov
add
sub
dec
movs
in
sub
cmc
int
int3
mov
popf
or
cwde
mov
dec
sub
loop
fwait
repnz
mov
push
mov
mov
std
dec
stos
xchg
jnp
pop
push
and
cli
inc
ret
push
and
cwde
(bad)
dec
push
movs
dec
and
fsub
mov
dec
xchg
(bad)
jle
push
mov
jp
inc
outs
in
mov
pop
and
das
out
inc
arpl
hlt
aad
ins
fs
cmp
inc
int
fisub
or
stc
repnz
and
mulps
inc
hlt
(bad)
cmp
dec
and
sub
dec
loope
add
(bad)
aam
push
mov
add
les
inc
jl
(bad)
or
mov
sbb
aad
fmulp
xchg
xor
test
clc
clc
std
jmp
and
sbb
daa
pop
jp
dec
add
mov
cmp
mov
add
sub
sahf
jl
int
lahf
fsub
pop
push
and
pop
push
cmc
xchg
stos
mov
dec
sub
out
daa
into
jne
xor
(bad)
aam
jnp
pop
into
fwait
xchg
xor
test
pusha
aas
jge
mov
pop
inc
bound
mov
stc
cmp
les
xchg
xor
outs
imul
add
jecxz
loop
cmp
(bad)
in
pop
imul
aam
pop
(bad)
rcr
jge
mov
call
jmp
mov
lock
dec
fst
pop
pop
out
mov
fcmovb
scas
in
shr
test
movs
gs
jb
jl
mov
test
mov
add
(bad)
sbb
inc
or
xchg
or
out
pop
sahf
mov
cmp
cmp
popa
or
in
and
inc
int3
adc
es
cmp
cmp
out
mov
xor
cs
movs
imul
sub
cmc
enter
fcomp
push
dec
sahf
push
icebp
cdq
js
sbb
mov
mov
jmp
daa
fwait
bound
repnz
outs
push
jmp
loopne
mov
(bad)
iret
pushf
sub
xchg
sbb
push
clc
aaa
mov
mov
jg
inc
std
or
popa
mov
icebp
jmp
inc
std
retf
cmc
push
jo
lods
xchg
xchg
jecxz
mov
jmp
clc
cs
sub
in
arpl
add
inc
jle
mov
cmp
arpl
mov
pop
push
call
repnz
enter
sbb
cmp
xchg
shl
sub
cs
mov
jo
into
fist
add
pop
loopne
mov
cld
gs
rcr
clc
sub
pop
inc
test
in
cmp
fwait
mov
mov
test
add
daa
cdq
jle
jae
in
mov
adc
sahf
or
adc
into
mov
mov
popf
movs
int
xor
ror
(bad)
fild
out
jg
shr
outs
ds
fstp
push
adc
mov
pop
aad
push
fbstp
xor
push
xor
and
sbb
ficom
call
inc
retf
mov
pop
mov
dec
mov
pop
or
outs
mov
loop
xchg
in
ds
dec
cli
out
cmp
in
in
scas
adc
mov
add
push
shr
sti
movs
add
mov
inc
out
fbstp
push
(bad)
cmp
mov
mov
sar
sub
mov
xchg
fmul
aad
ja
ret
dec
ja
cmp
imul
outs
cmp
sub
scas
push
xor
and
rcr
in
outs
jl
xor
std
cmp
xchg
dec
test
push
dec
or
icebp
dec
stos
push
shr
daa
shr
dec
ror
jmp
jae
clc
aas
jl
mov
pop
cmp
jbe
or
mov
sbb
sub
xchg
fmul
or
mov
stc
cwde
dec
mov
mov
cld
push
gs
jae
imul
pop
int
dec
and
dec
(bad)
int3
and
retf
xchg
iret
call
call
mov
and
add
adc
xchg
loope
lods
xor
cdq
retf
loopne
jecxz
jmp
or
push
push
leave
cld
fnstcw
push
jbe
rcl
mov
je
stos
sti
mov
pop
mov
je
cs
std
sbb
loope
lahf
rcr
jl
mov
add
iret
mov
mov
hlt
add
fistp
adc
add
(bad)
pusha
jb
outs
leave
retf
pop
ins
cs
push
sbb
daa
mov
call
add
push
fstp
and
xchg
fs
xor
nop
cmp
outs
inc
push
or
dec
push
mov
ss
test
add
and
imul
clc
add
fcomp
cmp
sbb
cmp
mul
rcr
add
xchg
popa
shr
push
movs
lds
test
mov
adc
xchg
aaa
ret
mov
aad
mov
and
lea
xlat
mov
test
or
mov
inc
ss
and
push
cmp
daa
sub
and
push
int
jno
jecxz
mov
jb
shl
retf
nop
mov
sbb
and
call
mov
retf
push
data16
gs
sub
dec
mov
xlat
inc
mov
or
retf
fs
out
loopne
inc
push
dec
ret
test
or
neg
xor
(bad)
dec
mov
ins
out
jp
ret
xor
(bad)
jne
pop
inc
icebp
mov
mov
jecxz
lods
push
jmp
pop
pushf
movs
ja
mov
aas
mov
(bad)
adc
ret
shl
mov
mov
(bad)
repz
sub
int3
and
out
push
ds
sub
es
sbb
xor
mov
fist
xchg
pop
jecxz
adc
xlat
add
and
pop
iret
aam
test
loopne
lahf
ins
int
sysenter
pop
push
mov
pop
movs
test
(bad)
data16
mov
(bad)
mov
jg
jo
pop
pop
mov
stos
in
clc
sbb
push
mov
js
xchg
mov
or
in
push
and
(bad)
push
mov
pusha
dec
xchg
imul
addr16
(bad)
dec
push
mov
retf
add
jge
push
or
inc
ficom
sahf
xchg
mov
add
dec
aad
mov
mov
add
rcl
push
jmp
stos
ja
pushf
popf
sub
mov
clc
mov
jb
mov
mov
jl
fstp
leave
xor
(bad)
dec
cmovl
daa
imul
lods
(bad)
hlt
(bad)
div
ja
mov
das
cli
pop
fsub
in
mov
out
jns
and
xchg
fld
and
mov
inc
sbb
pop
loope
int3
pop
ds
and
sbb
(bad)
and
add
sbb
retf
cdq
mov
xchg
imul
(bad)
sub
dec
cmp
pop
div
and
repnz
scas
push
add
cmp
mov
nop
mov
cmp
(bad)
push
jmp
sbb
push
jmp
gs
cmps
jmp
push
xchg
and
outs
imul
dec
push
mov
call
icebp
inc
ja
xor
dec
mov
loope
mov
push
fiadd
and
ds
sbb
and
xor
cmps
sub
inc
jae
loop
inc
retf
xchg
cs
daa
lahf
pop
xor
jmp
pop
sub
xchg
xlat
push
ss
jp
or
scas
stos
cmp
(bad)
cmp
jne
xchg
sub
scas
enter
loope
and
mov
popf
mov
inc
popf
pop
pop
cmp
jb
mul
mov
jge
dec
xchg
add
call
ficomp
mov
shl
mov
pop
sub
in
outs
out
push
out
retf
out
shl
dec
fcom
test
out
jecxz
inc
leave
in
inc
or
sub
popf
int3
push
and
sub
lods
cld
dec
jbe
and
jp
dec
ds
mov
mov
inc
and
xchg
stos
sub
mov
in
and
cwde
int
xchg
jmp
and
dec
fwait
loope
outs
mov
rcr
out
in
into
xchg
cmp
sar
dec
shl
dec
std
cs
clc
mov
lods
rol
out
fidiv
push
js
fild
jg
mov
mov
jo
xlat
cld
mov
mov
out
loopne
aaa
icebp
sub
jns
adc
xor
je
inc
scas
mov
push
fdivr
sub
or
dec
ss
les
inc
(bad)
sbb
es
pand
dec
test
and
out
jecxz
int3
popf
cld
sbb
aad
sub
pop
add
and
int3
dec
cwde
sub
jp
cmc
inc
frndint
mov
test
std
jbe
sbb
sub
hlt
pop
inc
scas
jmp
or
xchg
les
scas
mov
hlt
cmp
fdiv
imul
sbb
bnd
jge
mov
and
stc
movs
cmp
lods
(bad)
out
scas
test
cmp
sbb
les
adc
xchg
cli
(bad)
jnp
add
lahf
xchg
rcl
das
xor
jae
cmp
neg
push
lahf
loopne
data16
mov
nop
xchg
imul
pop
push
xor
arpl
jnp
or
in
xor
and
dec
cmp
push
ret
lods
add
sbb
fmul
arpl
inc
das
cmp
dec
lods
lahf
sbb
add
icebp
inc
imul
ins
call
dec
push
pop
pop
out
enter
inc
fisubr
sbb
fstp
fwait
push
jae
shl
mov
sub
std
cmp
pop
pushf
or
xor
add
xchg
ret
inc
or
pcmpeqw
jl
mov
pop
jae
adc
push
add
jne
lahf
(bad)
leave
cmp
jle
ins
int
and
ret
outs
dec
arpl
and
sub
rcpps
stos
stos
outs
jmp
sbb
push
test
(bad)
ds
ss
mov
cmp
xchg
pop
cli
cli
xchg
lods
add
inc
imul
mov
lds
add
xor
movs
push
out
xlat
ja
mov
xchg
ja
xor
jmp
fnstenv
cmp
jae
inc
xor
jae
int
mov
mov
fwait
sar
add
ret
ret
stos
xor
push
push
xor
xor
jne
imul
aas
add
(bad)
int3
inc
xchg
mov
or
shr
loopne
jnp
sub
pop
adc
scas
jecxz
xchg
xor
(bad)
xchg
add
pushf
lea
mov
ja
push
cmp
dec
cmp
push
push
mov
jmp
scas
and
scas
jne
retf
cwde
fst
lahf
stc
(bad)
fistp
inc
int
out
pop
mov
mov
add
loopne
mov
inc
test
mov
dec
push
dec
or
mov
inc
rcl
xor
ret
pushf
or
clc
push
es
in
rcl
out
addr16
(bad)
les
pop
test
sti
aam
pminub
push
sbb
mov
repz
mov
fcomp
aas
aaa
sub
and
aad
and
mov
dec
sbb
jmp
jns
hlt
inc
adc
sub
push
clc
jp
push
in
(bad)
fbstp
jne
jb
jmp
call
(bad)
sbb
add
cmc
jmp
dec
mov
jno
or
mov
push
mov
mov
mov
shl
dec
stos
loope
(bad)
data16
js
jle
cmp
pop
test
pop
xchg
dec
or
das
inc
push
inc
shl
call
push
cld
pop
add
in
shr
xor
xor
add
adc
and
push
out
sub
push
retf
aad
ds
or
(bad)
fnstsw
push
cmp
mov
sbb
lods
lahf
jge
in
retf
and
(bad)
mov
aad
sub
pushf
and
push
mov
or
dec
sti
or
bound
enter
pusha
xchg
sahf
fadd
inc
or
clc
fcomp
stos
jmp
pop
les
adc
lea
ficom
and
sbb
(bad)
and
push
ins
mov
pop
or
dec
gs
mov
xchg
in
icebp
or
sahf
sub
mov
xchg
loopne
mov
and
call
int3
fiadd
(bad)
(bad)
and
ror
cmp
mov
(bad)
and
sub
outs
in
mov
lahf
fsub
lock
sub
jl
dec
dec
xor
popf
mov
popa
sahf
imul
and
push
iret
js
mov
pop
jno
out
out
scas
sbb
ins
mov
or
stc
fadd
in
ins
dec
pusha
stos
mov
and
in
out
mov
bound
out
nop
int3
lgs
sbb
cmp
ror
xchg
pop
sbb
and
ds
fwait
cwde
push
adc
pushf
cs
(bad)
leave
xor
sub
mov
sbb
pop
jb
or
inc
js
mov
add
ins
(bad)
and
outs
mov
lds
push
inc
xchg
dec
mov
out
shl
lahf
jl
sar
in
mov
mov
hlt
inc
xor
mov
cdq
shl
sbb
retf
mov
aaa
inc
not
es
leave
test
dec
pop
jae
scas
stos
push
out
bound
xchg
dec
jbe
jp
jl
dec
add
push
push
adc
mov
lods
fcomp
xchg
daa
stos
outs
retf
push
cmc
dec
sbb
sub
adc
sbb
inc
shr
adc
popf
sub
and
xchg
mov
adc
movs
mul
int
fisttp
pop
dec
loope
inc
fidiv
fmul
xor
xlat
mov
hlt
or
cmps
and
push
fistp
dec
scas
fidiv
add
es
nop
pop
or
stc
cli
mov
xlat
mov
mov
daa
fs
stos
in
or
add
cmp
lahf
or
rcl
xchg
outs
out
push
inc
xor
adc
out
enter
mov
xchg
call
addps
push
push
jne
push
loopne
movs
fld
inc
std
mov
cmp
(bad)
fdiv
mov
push
sbb
loope
jmp
pop
sbb
sub
imul
cs
xchg
or
ret
sbb
push
add
lods
mov
gs
inc
je
xor
add
shl
xlat
out
mov
pop
xchg
mov
push
inc
cmp
sbb
rcr
cmp
shl
inc
gs
das
sub
mov
push
cmp
mov
aas
pop
mov
xchg
popa
aad
mov
fdivr
scas
popf
dec
xor
jns
psadbw
sti
dec
push
inc
mov
mov
rcr
das
fstp
adc
jl
sbb
push
or
int3
loope
out
movd
cwde
xor
and
rol
inc
inc
pop
add
fcomp
lods
push
sbb
fistp
icebp
cli
loop
mov
je
cmovl
add
ins
sub
jmp
and
push
imul
leave
out
fisub
adc
shl
mov
sbb
jp
sahf
pop
dec
fbld
push
sub
scas
mov
stos
ror
mov
sub
ret
jns
adc
dec
enter
fdivr
sub
mov
sbb
neg
sub
pop
fsubr
cmc
shl
and
inc
and
bound
in
out
aaa
sbb
cmc
xor
ja
into
add
xchg
dec
ret
daa
inc
out
hlt
fisub
pop
test
shl
jbe
popf
fsub
mov
outs
xor
imul
int3
mov
addr16
aas
push
fld
mov
pop
push
mov
test
sub
and
push
arpl
arpl
test
xor
xchg
jge
cld
imul
jecxz
test
fisub
cwde
(bad)
jnp
hlt
test
fcomp
sub
inc
(bad)
jno
mov
mov
mov
pop
pop
and
imul
xor
mov
mov
ret
pop
addr16
fsubp
and
pop
dec
add
jnp
push
cmp
push
lahf
in
dec
or
in
add
xchg
add
repz
jnp
jmp
in
jp
fldcw
into
jg
(bad)
rep
test
adc
out
shl
(bad)
retf
enter
or
fcomp
scas
(bad)
scas
jns
fs
icebp
dec
not
dec
jnp
repnz
and
out
push
and
dec
fwait
push
nop
out
icebp
mov
ror
out
clc
iret
mov
sbb
add
xlat
shl
ss
movs
jle
stos
dec
mov
(bad)
adc
inc
out
rol
jno
nop
je
inc
mov
mov
mov
aas
push
jp
cmp
jmp
rol
push
push
lea
scas
aaa
push
sub
cmps
mov
imul
cdq
leave
mov
sub
mov
and
ffree
arpl
or
inc
add
ret
mov
pop
adc
or
fdivr
in
xlat
loope
jne
xchg
in
mov
xchg
leave
mov
push
push
xor
out
aad
inc
out
ror
jne
loop
xchg
sbb
in
adc
jae
mov
inc
cmp
test
mov
cmp
add
add
dec
in
xor
adc
xchg
sub
call
mov
cmps
lahf
mov
enter
pop
mov
test
pop
sbb
call
jae
inc
push
outs
hlt
fadd
push
mov
push
outs
ins
daa
nop
inc
xchg
push
jbe
jecxz
not
les
ins
hlt
out
dec
pop
jmp
or
test
mov
lods
pop
sbb
sub
push
mov
fadd
ror
mov
jmp
popa
adc
mov
push
shl
dec
(bad)
arpl
out
jp
outs
pusha
ret
cld
inc
out
cmp
cmps
add
out
sbb
mov
mov
daa
shl
inc
mov
mov
add
pop
xor
setg
xor
div
imul
adc
xor
xlat
jbe
sub
adc
(bad)
(bad)
sub
js
std
inc
cmp
jo
and
inc
retf
add
fcmovu
jmp
(bad)
mov
jns
stos
popa
in
fistp
data16
or
xchg
push
(bad)
fisttp
xor
shl
rcr
dec
les
inc
xchg
js
in
call
or
pop
es
xchg
icebp
pmaxsw
pop
imul
addr16
aas
mov
pop
add
popa
jg
and
fwait
cmp
outs
icebp
mov
lahf
xchg
hlt
sub
mov
mov
sbb
fs
dec
inc
mov
mov
out
sbb
xchg
imul
lea
add
or
cmc
jo
out
ret
jecxz
inc
je
adc
pop
mov
(bad)
mov
inc
sbb
xor
sti
push
mov
pop
ss
mov
adc
jbe
gs
loopne
aam
stc
push
inc
push
aas
add
sbb
(bad)
jecxz
call
xchg
xchg
fidiv
mov
bound
pop
sahf
daa
jp
sbb
test
inc
test
sahf
mov
sub
ds
aam
sbb
xchg
pop
mov
sti
pop
ds
xor
jmp
sbb
stos
pop
xchg
push
adc
inc
lea
rol
fidivr
pop
lahf
movs
stos
fistp
jmp
retf
ds
repz
cmp
and
out
popa
shl
adc
jo
mov
retf
dec
jecxz
mov
mov
in
shr
dec
fcomp
adc
outs
add
outs
je
push
cmp
and
add
jno
pop
fdivp
stc
xchg
inc
xchg
xchg
or
push
mov
dec
push
xchg
and
mov
loope
or
loope
mov
stc
in
movs
pop
scas
out
sbb
cmps
loope
nop
ror
cmps
jmp
xchg
das
out
or
adc
mov
outs
jmp
dec
pop
movs
jge
mov
aaa
fldcw
stc
mov
std
push
add
sbb
mov
ja
inc
jo
imul
hlt
dec
jnp
or
fsub
pop
cmps
pop
sub
iret
mov
(bad)
add
pop
(bad)
clc
setge
adc
ds
cmp
mov
mov
cmp
jne
test
movs
adc
xor
mov
xchg
push
(bad)
movs
nop
dec
ja
cmps
xchg
js
jg
mov
stos
loop
mov
mov
jecxz
jns
fadd
aas
jp
fs
push
pop
cmp
std
mov
outs
sti
cmp
into
inc
cld
add
test
enter
je
jno
sub
jno
aas
lods
mov
loopne
or
arpl
xor
sub
jns
sbb
(bad)
call
out
fdiv
scas
sub
loope
pop
jno
adc
and
mov
push
mov
cli
bound
pop
ja
mov
jle
das
test
mov
sbb
sbb
hlt
dec
inc
pop
mov
adc
cmp
mov
test
repnz
pop
repnz
mov
retf
cmp
mov
ja
in
in
mov
fucom
and
sub
dec
and
loope
call
lods
bound
dec
mov
mov
iret
jo
xchg
stos
pusha
add
inc
popa
aas
pushf
jecxz
xor
cmp
addr16
mov
lahf
sub
push
sahf
test
test
ror
sub
pop
xchg
xchg
icebp
mov
mov
adc
mov
movs
ret
fisubr
cmp
int
xchg
pop
mov
fld
inc
mov
add
leave
mov
add
and
dec
jo
sub
mov
mov
mov
clc
pop
jae
pop
call
jns
arpl
inc
mov
cmp
mov
xchg
cli
mov
loope
rcr
cwde
pop
sar
or
rcl
mov
dec
(bad)
sub
push
outs
iret
iret
pop
sub
stos
jns
ds
xchg
outs
rcr
inc
cs
fisubr
cmp
dec
sahf
cwde
jns
jmp
sub
jno
mov
(bad)
push
popa
loope
shl
pop
pop
out
push
outs
lods
or
sub
int3
push
sub
cs
rcl
je
sbb
ss
xchg
push
sar
shl
sbb
adc
aas
out
mov
test
mov
lock
push
mov
mov
cmps
repnz
(bad)
aam
sbb
ror
(bad)
add
shr
nop
xor
je
test
out
stos
adc
arpl
push
xchg
sbb
gs
dec
mov
sbb
out
ja
cli
jmp
(bad)
call
test
lds
add
mul
test
and
repnz
pop
out
dec
jmp
ret
ja
and
bound
and
loop
cmp
jecxz
push
loop
inc
sub
dec
js
repz
lea
fcmovnbe
and
aad
inc
call
dec
dec
jmp
je
fnstsw
mov
sti
pop
cmp
int3
leave
sbb
adc
jae
mov
into
ret
in
adc
push
or
call
aad
pop
cmp
seta
sbb
xchg
add
mov
xchg
ja
pop
jg
add
rcr
popf
(bad)
enter
test
or
fwait
pop
daa
pop
popf
(bad)
xlat
iret
xor
push
test
leave
pushf
jnp
clc
mov
lock
add
cmp
push
xor
adc
xchg
fs
cwde
cdq
(bad)
fnstcw
mov
mov
fs
mov
fidivr
movs
out
ins
gs
adc
inc
xor
ins
in
aad
jb
mov
xor
inc
jle
dec
pop
add
mov
jp
sahf
xor
jp
jns
jg
and
int3
test
cld
inc
jnp
pop
mov
push
pop
adc
and
loope
cli
or
(bad)
mov
idiv
jo
mov
sbb
stc
mov
and
fimul
cmps
xor
mov
fucomi
test
push
movs
mov
ds
rcr
lahf
inc
xchg
inc
xor
push
push
test
sbb
mov
dec
dec
mov
fadd
xchg
jb
das
pop
jmp
ja
inc
sub
mov
adc
xchg
ret
add
jp
cmp
iret
add
(bad)
out
rol
int3
repz
icebp
lock
jg
and
inc
cdq
stc
mov
rcr
xchg
push
inc
cmp
int
jno
xor
add
int
outs
xor
cld
mov
adc
mov
pop
dec
cli
and
popa
cs
and
call
mov
fs
mov
out
xor
mov
pop
cmc
enter
icebp
adc
xchg
xchg
pop
not
lds
xchg
push
test
pop
arpl
in
mov
(bad)
popf
call
inc
fwait
xor
std
ins
sahf
ins
dec
mov
mov
lahf
rol
or
loopne
inc
jmp
push
aas
mov
cmps
push
mov
bound
cld
xor
(bad)
jl
cmp
or
cmp
(bad)
outs
pop
or
stc
push
jae
cmc
add
push
or
(bad)
adc
sbb
cmp
cmp
stos
pop
mov
test
dec
sub
sar
cmp
xor
or
daa
dec
xchg
test
movs
xchg
xchg
lods
xor
(bad)
dec
jecxz
xchg
stos
inc
leave
lahf
xor
mov
movs
sub
retf
pop
fwait
add
lock
adc
push
clc
mov
and
cdq
clc
loopne
inc
or
popa
pop
lea
cli
pushf
imul
jecxz
bnd
adc
mov
lea
loopne
loopne
adc
repnz
and
xlat
ficom
jg
scas
sbb
clc
(bad)
dec
in
push
push
push
xchg
and
sub
(bad)
or
inc
fcomp
sbb
xchg
mov
xchg
push
(bad)
fsub
imul
ror
cdq
adc
and
lahf
push
mov
and
sbb
ret
cdq
push
dec
inc
pusha
call
aam
push
jl
add
shr
or
jmp
pop
pusha
icebp
bswap
push
xor
inc
adc
and
push
jl
push
mov
cmp
fs
sbb
les
movs
in
in
pop
dec
leave
and
outs
out
mov
xchg
leave
add
sub
pop
daa
in
push
sub
test
mov
xchg
call
sbb
adc
xor
hlt
stos
sub
leave
push
dec
ffree
push
inc
adc
sbb
add
mov
fisubr
fstp
sbb
adc
and
cmp
outs
lods
push
sti
and
pop
ins
stc
sub
out
inc
ror
xor
into
stos
sub
sbb
mov
ja
out
sub
iret
mov
das
sub
xor
(bad)
cld
fiadd
push
fadd
push
sub
pop
fidivr
cmps
das
mov
paddsb
nop
cmp
xor
mov
add
pusha
push
xor
mov
mov
mov
int
call
adc
xchg
movs
bound
push
cld
outs
or
fdiv
popa
fdivr
inc
dec
cmp
(bad)
call
data16
or
movs
sub
std
(bad)
mov
inc
pop
adc
cld
cli
jl
mov
repnz
popa
and
cwde
lea
adc
ret
loopne
sbb
mov
fist
adc
(bad)
shl
mov
push
test
mov
and
out
xchg
into
mov
sti
int
dec
leave
push
nop
xor
mov
dec
je
icebp
test
sbb
scas
cmp
iret
push
push
sti
xor
cmp
scas
add
push
in
bound
(bad)
push
ret
loopne
cmp
test
movs
pop
in
jge
xchg
bound
popa
xor
lahf
call
movzx
sub
mov
inc
dec
jae
pop
outs
sub
scas
xchg
mov
jne
adc
jns
movs
and
sbb
(bad)
jge
mov
std
adc
mul
jl
in
mov
std
mov
ins
add
cld
mov
push
mov
loopne
mov
cld
push
jno
or
adc
rcl
aas
pop
lds
adc
mov
adc
popa
pop
dec
sub
xchg
inc
in
sti
cmc
adc
xchg
js
popa
sub
inc
stc
leave
pusha
dec
call
inc
push
jns
mov
inc
mov
xchg
xor
mov
in
clc
sbb
(bad)
lock
adc
fsubr
scas
jmp
sbb
sub
lea
fistp
inc
mov
in
out
adc
les
and
add
pop
pause
pop
xchg
fisttp
outs
pop
xchg
test
xor
push
test
add
add
mov
cmp
pop
clc
loop
adc
jp
jo
sbb
js
icebp
pop
fadd
push
mov
retf
lds
jae
ret
mov
ret
xchg
push
push
in
push
je
mov
scas
out
sbb
add
shl
mov
(bad)
fisttp
push
push
lods
js
out
sbb
fidiv
xchg
arpl
xchg
or
(bad)
bound
aad
cmp
mov
aad
sbb
push
xchg
int3
mov
xor
inc
vshufps
cld
pusha
and
add
sbb
pop
cmp
and
push
cmp
aas
sbb
sub
add
mov
pop
gs
push
and
mov
xchg
jl
int
ja
pop
es
xchg
out
inc
ret
mov
ret
scas
push
fs
pusha
pusha
test
clc
jae
mov
add
iret
xchg
test
enter
mov
stos
aaa
lock
stos
mov
sbb
rol
push
pushf
jnp
mov
cmp
addr16
and
or
xor
adc
inc
outs
dec
cmp
fdiv
or
nop
mov
ret
(bad)
ror
jne
add
scas
and
loopne
fcom
mov
shl
mov
xchg
outs
les
ror
fcmovb
aaa
xchg
mov
pop
stos
pop
aam
adc
add
pop
push
imul
hlt
ja
jae
addr16
loope
pushf
cmp
dec
xlat
xlat
enter
mov
adc
inc
adc
pop
in
sti
lods
mov
jbe
dec
mov
out
arpl
aam
aam
sbb
leave
inc
mov
add
cmps
push
stos
jmp
fadd
into
repz
mov
push
and
sub
mov
fcomp
adc
(bad)
mov
lds
shr
aam
ret
inc
stc
or
mov
pusha
mov
int3
fbstp
imul
xor
mov
push
mov
mov
rcl
scas
xchg
push
fcomi
jne
sbb
je
aaa
test
div
cdq
clc
adc
sbb
mov
inc
adc
(bad)
mov
push
xor
aas
fdivr
dec
inc
jne
xchg
and
retf
ss
mov
test
aam
mov
in
sbb
call
das
(bad)
push
and
movs
loopne
inc
jnp
or
mov
inc
les
jno
push
xor
jmp
jb
stos
jmp
retf
pop
rcr
popa
addr16
adc
outs
(bad)
dec
jg
cli
rol
mov
sbb
adc
mov
cmp
das
cmps
loopne
mov
cld
push
test
in
jae
pop
(bad)
les
je
loope
cmp
das
push
(bad)
inc
enter
or
cmp
mov
lds
test
add
dec
fisub
loope
(bad)
rcl
fld
mov
inc
sub
jle
mov
mov
fucomi
mov
add
jb
adc
inc
pusha
fiadd
cwde
cmp
sbb
out
loop
leave
cdq
scas
push
sbb
jge
and
or
cwde
sar
mov
mov
dec
(bad)
cmps
es
dec
mov
adc
imul
out
inc
add
mov
add
push
adc
push
out
cmp
inc
push
aam
outs
iret
in
mov
outs
in
and
ds
lea
movs
fwait
daa
rcr
cmp
mov
dec
movs
gs
cmp
xchg
xlat
mov
push
cmp
shr
mov
dec
jbe
test
inc
lds
pop
jnp
and
sub
push
mov
push
xor
mov
dec
(bad)
adc
and
sub
push
jb
rcr
les
xchg
(bad)
jb
imul
addr16
and
add
ins
dec
mov
pop
aas
pop
sub
or
mov
repnz
add
aaa
movs
mov
(bad)
clc
dec
jle
xor
push
pop
push
push
cs
les
xchg
mov
ds
ja
leave
mov
dec
sbb
inc
jl
cmp
adc
cmp
repz
and
mov
mov
loop
(bad)
sub
test
mov
pop
jo
mov
out
xchg
outs
adc
out
clc
xchg
int
jne
call
inc
xchg
xor
dec
mov
cdq
jns
popf
push
mov
es
add
and
cmp
in
stos
or
fld
xor
dec
stc
push
and
nop
mov
das
nop
jmp
nop
mov
pop
lea
(bad)
stc
ss
lock
stos
out
push
lods
fcmovnbe
(bad)
lahf
push
imul
out
xchg
xor
pop
cs
xor
mov
xor
(bad)
fdiv
push
outs
or
outs
(bad)
jbe
pop
adc
xchg
(bad)
jmp
gs
adc
fidiv
test
cmps
jmp
xchg
pop
repz
(bad)
pop
sbb
ins
jmp
sub
jecxz
mov
mov
jne
ins
jno
sbb
call
aam
sbb
xor
cmps
ror
xlat
call
ins
adc
inc
sbb
dec
jb
or
pop
popa
xchg
or
mov
call
push
iret
adc
xchg
sub
xchg
push
mov
cmp
mov
jo
sahf
clc
scas
cmps
int
and
enter
push
pop
(bad)
lods
inc
sbb
sbb
cmp
xchg
rol
(bad)
out
inc
clc
les
in
cmp
ret
push
(bad)
jl
fadd
ds
bnd
repnz
ficom
sar
dec
ins
xchg
mov
jnp
loop
leave
xor
lahf
cld
shr
call
add
push
arpl
mov
jnp
jno
lds
(bad)
fild
int3
add
push
jnp
xchg
ds
ss
pop
sub
sbb
mov
or
xlat
cmc
repnz
sub
mov
push
push
(bad)
jp
aam
pop
jp
mov
inc
clc
mov
popa
or
jp
(bad)
mov
icebp
stos
cmp
adc
jp
ret
leave
add
jae
mov
push
pop
loop
pop
or
mov
test
adc
cmps
xchg
in
addr16
and
icebp
xchg
test
iret
inc
cmc
push
jo
mov
jp
jle
dec
fwait
daa
mov
xchg
lods
(bad)
mov
fmulp
push
stc
outs
dec
fnstenv
sub
(bad)
mov
cmps
pop
jl
jge
push
push
pop
dec
jl
jae
mul
stos
or
mov
leave
sahf
mov
mov
inc
adc
out
cmps
(bad)
push
jb
or
xchg
xlat
fdivr
int
cmp
test
test
repz
jne
jg
js
mov
retf
mov
push
icebp
shr
sbb
cmp
mov
pop
in
retf
int3
hlt
mov
loopne
add
ror
xchg
push
fwait
retf
dec
jle
or
iret
and
call
xchg
cmp
push
popf
xchg
sti
stos
push
les
pushf
cmps
jmp
cmp
sub
push
cld
imul
cmc
xor
call
(bad)
jge
stos
std
push
mov
pop
sbb
into
fimul
or
ins
aam
retf
xor
jmp
add
xchg
std
in
shl
aas
lods
std
aam
test
sbb
mul
jmp
adc
xchg
les
add
inc
cdq
and
neg
xor
sub
mov
nop
mov
push
scas
or
cdq
call
movs
mov
mov
js
jb
inc
ret
call
sub
icebp
sar
jne
xchg
cmp
stos
das
or
enter
mov
dec
cld
pushf
(bad)
and
retf
mov
loop
mov
sahf
out
stos
adc
add
jecxz
jae
fs
ret
dec
sbb
inc
scas
test
inc
daa
fsub
ins
(bad)
xchg
leave
mov
js
(bad)
add
popf
shr
sbb
std
aam
mov
pop
rol
inc
(bad)
sub
retf
jecxz
rol
jmp
mul
movs
mov
out
dec
clc
xor
xor
dec
cmc
ins
nop
inc
dec
jge
(bad)
jne
xchg
ret
jb
stc
dec
imul
xchg
call
call
cmc
push
sbb
pop
fisttp
fwait
rol
icebp
xchg
rcl
or
cmp
leave
daa
ffree
adc
push
xor
inc
fst
xchg
lods
stos
in
jb
ins
ret
sbb
les
or
movs
push
cmps
mov
adc
dec
and
and
sti
dec
bound
mov
xor
lea
arpl
icebp
imul
pop
das
mov
aas
ret
cmp
aad
aaa
push
inc
clc
or
cmps
jge
out
or
sahf
sub
pop
(bad)
ins
dec
lods
arpl
repz
aam
test
mov
mov
mov
out
sbb
jbe
imul
std
retf
dec
mov
mov
shl
cmp
scas
nop
xchg
das
xchg
(bad)
rol
and
mov
leave
sub
dec
aam
test
push
aam
or
call
pop
jmp
jnp
icebp
sbb
(bad)
jo
sub
sub
mov
iret
in
or
stc
dec
fisttp
mov
cmc
mov
add
movs
adc
popf
in
pop
push
stc
lods
push
in
dec
or
ja
mov
test
ss
imul
jp
popa
ins
pop
jbe
lock
jns
pop
dec
call
movs
stos
scas
push
add
shr
int3
sahf
add
pop
adc
iret
ja
ins
std
cmp
pop
mov
mov
lahf
sbb
dec
push
xor
aaa
cmps
and
sub
aad
ror
ins
dec
gs
mov
das
sub
repnz
jns
cmp
xor
cmps
movs
mov
cmovno
repz
mov
daa
push
push
aad
or
pop
inc
jnp
cld
pop
scas
pop
mov
dec
mov
push
out
pop
push
pop
adc
sub
std
or
or
mov
icebp
imul
push
nop
mov
jns
jecxz
push
cli
push
pop
add
daa
cmp
lds
or
cmp
mov
popf
jno
pop
mov
inc
dec
bound
push
sar
out
xchg
hlt
scas
out
mov
sub
dec
jo
ret
call
sub
inc
in
retf
nop
movs
or
outs
pop
and
out
mov
movs
fwait
xchg
fld
out
xor
cmp
test
daa
xor
push
inc
pop
mov
push
stos
rol
dec
xor
inc
fcomp
mov
mov
(bad)
movs
xchg
aad
mov
dec
add
(bad)
mov
xchg
xor
les
jge
ins
out
shl
(bad)
hlt
scas
loope
bound
and
push
ds
cmp
retf
cmp
ins
pop
sbb
adc
repnz
adc
pusha
aad
dec
cmp
push
inc
ins
xor
shl
mov
sar
outs
fs
scas
mov
ja
cmc
loop
fistp
dec
sub
add
sub
test
(bad)
dec
imul
ins
nop
mov
jb
ja
lahf
scas
popf
jmp
inc
(bad)
mov
(bad)
sbb
std
push
jns
jge
rcl
jge
push
ret
push
or
sbb
out
mov
and
mov
jecxz
cwde
fs
jns
ds
and
push
cmp
in
outs
lods
lds
push
pop
lahf
lds
add
jb
xor
pop
shr
and
inc
into
(bad)
cs
ficom
lds
in
stos
xor
pop
lods
or
xchg
xchg
or
mov
dec
inc
or
loopne
jmp
clc
pop
mov
out
adc
jb
sub
daa
imul
outs
cmp
xor
sbb
sub
sbb
test
dec
cmp
pusha
add
push
mov
stos
jne
mov
cmp
jecxz
inc
outs
sub
es
dec
jl
mov
jno
add
bound
lock
mov
mov
test
fstp
cmp
(bad)
sar
jae
out
push
test
call
mov
dec
ds
push
scas
lahf
je
out
cmp
jns
xor
call
test
add
mov
pushf
mov
sbb
or
(bad)
sbb
mov
dec
jp
mov
xchg
imul
push
mov
push
dec
rcl
out
test
xor
sbb
outs
and
adc
rcl
or
lea
fidivr
push
xchg
outs
mov
sbb
cmp
pop
mov
dec
aad
mov
xchg
sub
aaa
cmp
jle
pop
hlt
shl
pop
xchg
xchg
enter
or
(bad)
push
jge
ins
pop
jecxz
inc
ret
adc
pop
outs
addr16
test
sub
sub
shr
pop
mov
or
es
jg
fld
inc
and
dec
add
xchg
(bad)
stc
loope
or
stc
les
sbb
mov
cmp
cs
cmps
mov
mov
push
jb
and
cli
jbe
fisttp
and
rcr
inc
xchg
fsub
ins
adc
data16
(bad)
aam
popf
pop
test
inc
aas
test
dec
imul
xor
(bad)
into
pop
mov
mov
mov
loope
mov
hlt
mov
out
xor
xor
ret
shl
cmp
dec
cmp
sbb
mov
adc
rcr
fiadd
mov
iret
add
push
sub
xor
sbb
dec
retf
out
mov
mov
call
lea
fld
mov
add
inc
imul
pusha
jbe
or
sbb
aaa
jecxz
(bad)
xor
push
into
or
jg
push
mov
icebp
xor
mov
add
lock
and
jge
(bad)
mov
xor
sbb
dec
icebp
test
popa
mov
mov
imul
dec
icebp
dec
sbb
rcl
or
sar
push
and
and
pop
mov
jno
cmps
push
push
stos
cmp
inc
lods
mov
les
fsubrp
jl
retf
cmp
cmp
aad
sub
xor
ins
xchg
jmp
scas
adc
and
sbb
mov
mov
stos
out
pop
(bad)
push
outs
cmc
not
add
(bad)
loopne
dec
xor
out
shr
out
in
ret
pop
or
das
mov
pop
mov
aas
mul
or
popa
xor
ret
sub
mov
jo
mov
cmp
mov
stos
jnp
fcom
jmp
cmc
adc
pop
scas
div
(bad)
std
sub
les
icebp
imul
pop
push
das
hlt
movs
jns
imul
scas
push
jmp
(bad)
icebp
add
call
push
in
arpl
push
mov
jecxz
ins
pop
xor
add
xor
mov
mov
or
or
push
loop
or
aas
in
push
add
and
mov
adc
jle
scas
aad
xchg
pop
data16
inc
clc
leave
xchg
ins
movs
inc
pop
mov
dec
in
pop
xchg
jb
std
lods
and
inc
outs
pop
cmp
jo
xchg
push
cmc
xchg
stos
jnp
ins
xor
mov
shl
pop
jo
mov
and
ficom
inc
out
into
rcl
cld
xor
cmp
test
jl
data16
cmp
ss
mov
push
mov
sbb
or
xor
jecxz
imul
xchg
add
cmps
test
in
push
es
out
pop
int3
or
and
imul
add
adc
(bad)
pop
arpl
xor
imul
and
and
jno
pusha
retf
or
ja
fs
in
inc
mov
cld
repz
icebp
mov
iret
mov
push
mov
xchg
data16
fld
je
xchg
push
mov
popf
jmp
aam
jnp
mov
pushf
push
mov
movs
mov
cmp
mov
pop
mov
mov
mov
jmp
or
ins
aas
dec
(bad)
dec
cli
test
cli
mov
sbb
sbb
mov
push
mov
sti
xor
xchg
xlat
fs
sbb
jne
mov
test
arpl
test
add
aaa
dec
daa
std
es
mov
cmps
adc
loopne
fidiv
sbb
jecxz
xchg
mov
mov
in
sbb
sbb
rcr
xor
ret
push
imul
xor
sub
cmp
fwait
mov
push
mov
inc
imul
xor
cmp
int
mov
xchg
call
btc
inc
ins
das
ins
dec
mov
stc
sub
push
sbb
cmp
movs
sbb
dec
and
jmp
pop
push
and
lock
int
cmc
cmp
stos
and
(bad)
adc
mov
es
pop
es
mov
xchg
test
pop
imul
and
cmps
mov
mov
(bad)
pop
ds
pop
out
outs
mov
test
and
push
aas
outs
mov
lahf
ret
pop
iret
and
cmp
xlat
push
ror
out
cld
ret
mov
xor
loopne
or
cli
add
das
xor
add
or
sub
pop
pop
dec
(bad)
jmp
push
jmp
test
pusha
daa
(bad)
push
(bad)
int
jno
aas
arpl
mov
int3
data16
clc
adc
jp
call
add
movs
xlat
cmp
loope
xchg
adc
xchg
test
repnz
pop
loope
pop
lds
jmp
into
push
push
loope
push
mov
fsubr
inc
pop
adc
or
xchg
mov
sbb
int3
retf
adc
adc
(bad)
jecxz
data16
sub
test
out
jbe
adc
rol
mov
mov
and
cdq
aam
out
ret
retf
jno
sbb
jmp
mov
call
out
adc
cli
cs
arpl
test
test
push
inc
pop
add
inc
retf
js
rcl
rcr
and
fstp
add
loope
popa
pop
lea
sub
(bad)
rol
pop
push
sti
cmps
addr16
push
gs
mov
gs
stos
mov
xchg
cwde
in
scas
mov
out
and
popf
and
or
popf
push
aas
xor
cmp
outs
pop
mov
(bad)
aad
mov
sbb
sub
test
push
pop
leave
adc
test
inc
aam
outs
dec
sbb
shl
dec
mov
cwde
pop
add
xlat
test
hlt
pop
pop
jbe
fmul
push
jmp
mov
scas
and
in
stc
mov
leave
rsm
loopne
jge
mov
into
sbb
mov
mov
dec
sbb
cmc
push
pop
test
js
or
loopne
xchg
retf
jns
sub
imul
pushf
pop
aam
fs
fldenv
loope
xor
in
push
fs
or
sub
ja
in
mov
loop
mov
inc
daa
inc
(bad)
and
cmp
(bad)
leave
lea
inc
or
out
lods
jl
cs
mov
jb
mov
arpl
in
inc
cmp
repnz
sar
cmp
sbb
dec
mov
ret
mov
cmc
aad
and
push
xor
loop
sbb
lds
mov
inc
inc
pop
push
std
mov
pushf
cmp
mov
scas
adc
xor
sar
sti
out
sbb
outs
dec
sub
add
and
inc
shl
lods
lahf
outs
fadd
and
imul
pop
and
lods
jecxz
push
pusha
retf
push
addr16
mov
pushf
jns
inc
cmps
cmp
loop
repz
add
mov
xlat
mov
cli
jbe
call
stos
into
ret
fadd
adc
in
shl
mov
mov
adc
and
jle
inc
push
into
mov
sub
xchg
dec
out
dec
lods
mov
data16
xor
je
jmp
jns
(bad)
loope
test
xchg
iret
aas
repnz
jmp
movaps
jl
jecxz
out
mov
pop
ins
jns
je
ds
test
pop
push
repnz
xor
data16
les
xlat
and
push
scas
inc
or
pop
test
movs
xchg
test
dec
out
dec
loopne
ja
ss
scas
ins
sub
push
movs
add
pop
dec
aas
xchg
clc
push
shr
push
xchg
pop
dec
hlt
push
jo
popf
pop
call
push
dec
cmps
call
ds
or
push
xor
sbb
mov
mov
ins
into
shl
push
push
nop
mov
iret
sub
je
adc
adc
sbb
add
adc
psrlw
nop
lds
pop
fist
pushf
jno
jne
xchg
test
adc
scas
mov
into
je
mov
aad
mov
mov
ins
dec
sub
mov
iret
adc
pop
and
retf
xor
retf
cld
mov
pusha
out
mov
dec
sub
pop
sbb
ret
mov
xchg
repnz
mov
cmc
pop
inc
pop
adc
sub
out
pusha
and
hlt
dec
dec
inc
mov
ds
pop
jg
adc
pop
sub
push
push
inc
ficom
retf
(bad)
test
aad
cld
inc
sbb
es
stos
or
int3
mov
mov
sbb
pop
clc
lods
cmp
ja
pop
mov
mov
xor
repnz
rol
xchg
stc
push
adc
cmp
ins
xchg
or
pop
and
jmp
test
mov
bnd
mov
push
adc
cmp
sub
ret
loopne
mov
or
xor
retf
(bad)
ja
iret
xchg
jge
test
dec
mov
mov
mov
mov
and
xor
adc
pusha
mov
cmp
cmp
push
add
mov
push
hlt
add
xor
addr16
or
xor
lds
test
add
jns
xchg
stos
pop
jo
popf
repnz
js
jmp
clc
les
cmp
mov
or
cwde
mov
cli
out
ins
retf
popf
pop
and
ret
or
pop
out
retf
cmp
outs
jbe
iret
int3
test
adc
aam
dec
pop
fsubr
jbe
push
(bad)
fstp
pop
xchg
cmp
and
jno
pop
scas
mov
(bad)
ret
adc
jmp
in
gs
cdq
pop
cmps
mov
je
inc
fld
mov
fmul
mul
cdq
mov
push
adc
jne
dec
and
mov
adc
repz
jmp
xor
jno
pop
(bad)
and
aam
addr16
shr
sub
adc
repnz
leave
jns
xchg
les
dec
mov
mov
rol
jns
xchg
dec
(bad)
pop
xor
pushf
cmp
mov
add
jg
aaa
imul
fs
ret
inc
outs
adc
pop
sbb
aaa
test
lods
sub
add
fdivrp
xlat
sub
jno
enter
mov
add
sti
fldcw
inc
push
test
ins
push
sbb
xchg
dec
std
push
jne
xchg
xor
aas
push
add
and
push
stc
scas
fs
xor
sbb
(bad)
mov
test
leave
enter
lahf
push
mov
pop
mov
imul
pushf
push
jmp
std
sti
mov
not
pop
ds
das
icebp
(bad)
lea
lods
outs
fwait
pop
out
lds
and
sub
je
and
push
mov
imul
sbb
icebp
add
pushf
pusha
adc
sbb
dec
add
mov
sbb
xor
mov
add
jns
push
jnp
sbb
loop
movs
dec
jno
add
xlat
sub
fcomip
int3
cmp
in
icebp
mov
gs
(bad)
retf
enter
inc
mov
dec
jns
enter
mov
and
fld
jno
mov
out
pushf
dec
pop
dec
daa
jno
xchg
jl
test
ss
or
sub
and
call
mov
int3
lea
or
cli
mov
jecxz
pushaw
add
lods
sbb
jl
ret
inc
movs
push
jo
pop
mov
or
push
test
mov
mov
outs
out
stos
push
mov
cmp
mov
fidivr
shl
leave
call
mov
adc
dec
pop
sbb
aad
xor
aam
cli
xor
mov
xor
xchg
ins
stos
xlat
inc
xabort
sub
or
push
movs
dec
pop
jae
pop
xor
pop
push
adc
jecxz
inc
hlt
sbb
mov
aad
cmps
pop
cdq
or
mov
xchg
rol
cmps
ja
fwait
jl
mov
or
add
pop
popf
movs
jmp
dec
mov
push
retf
scas
jae
cmps
jo
add
int
or
adc
(bad)
push
cs
aaa
cmp
enter
aaa
or
aam
test
dec
xchg
pop
and
push
pusha
in
ffree
pop
inc
adc
gs
outs
dec
xchg
hlt
jmp
(bad)
call
adc
call
mov
aad
ss
jmp
sbb
push
fiadd
ret
out
je
(bad)
ret
fnstsw
or
out
pop
fisub
ret
or
cmps
rol
add
loopne
fimul
add
enter
jo
push
test
lods
lods
(bad)
cli
xor
sar
outs
push
adc
aaa
psubusw
stc
jp
js
rol
xor
dec
loope
out
out
sub
push
pop
cmps
jno
(bad)
fs
fcmovnbe
shr
jecxz
inc
mov
(bad)
pop
pop
cmps
dec
cwde
imul
nop
or
scas
fisttp
push
pop
stos
ins
daa
rcl
xor
int
(bad)
js
leave
pop
daa
je
pop
inc
xchg
inc
mov
arpl
popa
dec
mov
or
push
xbegin
in
mov
test
mov
pop
jg
or
cs
pop
aaa
or
cmp
int3
jno
adc
sbb
js
dec
movs
sbb
jb
jp
xor
in
aad
aad
in
jge
out
jnp
iret
cmc
sar
pusha
aam
sub
repz
add
out
dec
xor
jb
mov
pop
ds
xchg
jge
push
xchg
lea
dec
js
rcr
inc
fsub
push
add
add
jno
inc
sbb
nop
jle
jne
pop
iret
ror
push
out
jbe
and
or
adc
push
or
hlt
and
loop
cld
test
sub
push
aad
dec
lds
outs
pop
sub
divps
pop
mov
push
std
scas
getsec
imul
cmc
xchg
pop
adc
cmps
sbb
out
push
stos
inc
ja
scas
or
pop
mov
cmp
(bad)
sub
stos
mov
dec
jno
out
scas
imul
aaa
clc
jb
sub
mov
retf
mov
gs
dec
inc
psubb
mov
stc
push
sar
(bad)
pusha
stos
popa
push
in
sub
and
mov
inc
dec
sub
movs
stos
mov
cmp
es
xchg
push
movs
loopne
dec
ret
xchg
xor
nop
xchg
popf
cmp
in
push
xlat
mov
sbb
aas
in
and
shr
dec
jl
cwde
loopne
push
data16
push
out
dec
mov
cmps
gs
sti
rcl
mov
shl
cmc
into
inc
sar
add
dec
dec
cld
cdq
and
fwait
sbb
mov
fdivr
push
pop
hlt
divps
call
mov
fs
and
pop
adc
jl
add
out
je
ret
mov
sub
aas
fld
pop
hlt
push
or
or
cs
cmps
xor
ins
cmp
rol
xor
xor
movs
jne
movs
inc
enter
jnp
sub
adc
in
pusha
dec
cmp
mov
push
lahf
movs
xchg
dec
mov
xchg
fwait
mov
sub
cmps
ret
je
(bad)
scas
push
cli
push
(bad)
sbb
aas
inc
xor
(bad)
lock
jne
sub
xchg
add
cmp
es
or
leave
mov
lods
mov
sub
adc
cmp
sbb
cmp
lods
xor
(bad)
scas
(bad)
ds
scas
mov
addr16
test
xchg
js
add
leave
pop
call
loop
sbb
or
dec
sub
xchg
and
js
or
mov
dec
mov
ss
int3
daa
jecxz
loop
fiadd
push
adc
dec
jg
iret
outs
dec
bound
int
movs
mov
mov
cmp
scas
stos
movs
mov
mov
fldcw
jg
add
loope
(bad)
sbb
jnp
das
push
or
sti
cmp
xor
lea
test
out
or
iret
aas
xlat
js
sbb
dec
mov
xlat
xchg
ficomp
add
push
push
popf
sbb
sub
xchg
mov
xchg
and
dec
int
sar
mov
mov
aam
pusha
xchg
push
pop
fimul
inc
xchg
out
adc
adc
or
(bad)
out
out
jl
hlt
mov
sti
repnz
(bad)
jmp
pop
gs
mov
mov
sub
adc
es
xchg
or
ret
imul
call
jecxz
(bad)
lods
jnp
sbb
sub
mov
push
mov
lock
sti
cs
(bad)
(bad)
popa
vpunpckhbw
(bad)
mov
pop
scas
shr
fsubr
out
test
pusha
mov
cs
out
mov
adc
aaa
sub
push
sub
fdiv
cmp
bound
lods
loop
jecxz
sub
and
nop
mov
scas
push
div
dec
ss
sahf
movs
shl
dec
scas
sub
sub
push
jg
imul
test
adc
jg
push
int3
jns
cmp
popf
lock
es
mov
sbb
in
push
ja
sub
xlat
scas
mov
pop
lods
imul
not
iret
inc
out
fsub
cwde
aaa
in
dec
imul
cwde
mov
add
inc
mov
jmp
xlat
jle
call
popa
fs
pop
add
inc
sahf
mov
jbe
dec
out
mov
or
pop
mov
or
sbb
outs
xor
mov
pop
push
sub
mov
popa
call
mov
out
and
movs
sub
and
jmp
jecxz
mov
pop
pop
mov
dec
sbb
jbe
repz
sti
dec
dec
(bad)
enter
sbb
dec
xchg
(bad)
jg
sbb
retf
idiv
(bad)
imul
dec
xor
mov
(bad)
in
dec
jne
and
add
jmp
or
cmp
and
dec
aam
or
stc
xlat
xchg
dec
stc
lock
cdq
push
out
xchg
fsub
inc
pop
out
cmp
aam
or
fwait
retf
(bad)
cmp
push
into
outs
pop
iret
mov
ret
xchg
push
stos
push
fwait
mov
add
addr16
or
mov
add
shl
int
sbb
and
jmp
mov
daa
cli
popf
sbb
adc
pop
dec
push
mov
fdiv
fs
fild
cmp
out
jno
and
in
jg
jae
dec
pop
jle
cli
call
add
es
out
ins
and
cmp
inc
push
jnp
sti
inc
(bad)
dec
popf
in
bound
xchg
or
or
stc
jecxz
into
inc
imul
push
sbb
mov
sub
sti
mov
(bad)
push
jmp
dec
out
sub
sub
loope
or
retf
outs
xchg
add
shl
jbe
adc
(bad)
dec
out
mov
lods
mov
mov
nop
cmp
jne
cmc
jl
cmp
dec
jp
mov
outs
mov
add
mov
xor
sti
fist
(bad)
xor
cmp
sub
and
pop
jl
lods
jmp
lea
and
ins
push
fimul
adc
adc
dec
and
pcmpeqb
fnstcw
or
sbb
mov
and
leave
mov
pop
fs
add
cmp
mov
dec
ins
dec
sahf
sbb
lods
test
sub
retf
int
in
inc
inc
loopne
test
mov
fnstsw
movs
push
pusha
pop
sub
mov
jecxz
add
push
cmps
into
or
mov
adc
pusha
pop
(bad)
lahf
ret
rcl
cmps
pusha
aad
in
jmp
cs
push
xor
shr
dec
aas
push
cdq
and
adc
aas
push
in
jl
fsubr
sbb
retf
push
adc
sub
sub
jbe
or
xor
mov
push
adc
inc
inc
lahf
outs
out
add
jo
xchg
mov
xchg
cld
or
sbb
xor
jno
pop
in
jl
stos
xor
ret
cmp
loop
out
sahf
ss
fstp
jl
push
fiadd
xor
fnstenv
(bad)
mov
outs
or
inc
vpunpckhqdq
(bad)
cmps
and
retf
ret
mul
imul
ret
in
sub
loop
jp
pop
sahf
arpl
das
inc
push
sbb
retf
push
cmps
ins
repnz
dec
sub
stos
cmp
(bad)
nop
xchg
cmp
(bad)
in
fbstp
aad
scas
shr
jo
mov
lock
sub
jae
mov
cmp
(bad)
jp
jl
sbb
dec
mov
jp
xor
sub
cdq
inc
cs
pusha
xchg
cmps
sbb
xor
xchg
jne
cmp
push
retf
cmp
aaa
and
in
dec
loop
xchg
xchg
sbb
pop
push
push
xchg
jle
mov
loop
cmp
imul
repnz
push
adc
ds
fsubr
and
or
rep
out
pop
xchg
jb
xchg
and
jge
lea
shl
sbb
sahf
call
inc
(bad)
xlat
repnz
std
test
std
or
mov
jecxz
and
iret
movs
loope
pop
ins
push
ror
loope
jo
loope
out
in
dec
dec
jmp
addr16
sti
or
mov
outs
retf
jmp
popa
cmp
mov
fadd
jo
sbb
jecxz
cdq
dec
jge
and
xor
jae
jmp
or
pusha
mov
loope
and
add
repz
inc
dec
adc
(bad)
pop
mov
jp
pop
mov
mov
ss
mov
fist
dec
push
sbb
add
or
pusha
pusha
xchg
sti
ja
fsubr
leave
in
retf
scas
pop
(bad)
xchg
iret
out
mov
or
lea
std
ss
jmp
push
mov
arpl
mov
push
jae
add
into
js
cli
cld
pop
xor
mov
bound
add
mov
cmp
cwde
jle
iret
test
pop
cmp
fcmovnbe
mov
bnd
mov
es
jo
call
xchg
pushf
test
sti
sbb
cwde
loop
xchg
add
push
add
repz
ins
in
shl
frstor
adc
xor
aad
mov
fidivr
xchg
and
mov
cmp
mov
in
and
mov
dec
adc
lods
mov
jmp
mov
cmp
and
retf
and
mov
push
mov
sbb
jnp
push
push
adc
or
or
jno
test
adc
mov
and
ins
adc
add
cdq
mov
pop
pop
jecxz
dec
push
and
outs
mov
mov
xchg
dec
out
dec
pop
fs
mov
icebp
into
bound
daa
or
pop
out
xchg
jmp
bound
call
leave
aad
jmp
in
pop
inc
xor
cmc
stc
sbb
rol
sahf
jnp
adc
cmp
jne
in
mov
cmp
test
jb
jno
pop
cwde
retf
sbb
mov
add
cli
not
stos
js
mov
popa
xchg
pop
ret
xor
push
jae
not
xchg
call
popa
or
loop
xchg
and
pop
pop
retf
lds
push
ss
inc
lea
adc
(bad)
jb
enter
outs
dec
add
mov
lea
cdq
xor
dec
jg
pushf
inc
cmps
les
fwait
push
sub
cwde
mov
mov
enter
add
xchg
jmp
mov
adc
pop
fiadd
inc
adc
xchg
int3
test
arpl
inc
jg
sahf
dec
mov
clc
out
xchg
sub
mov
or
inc
clc
cmp
push
mov
fcom
fild
xchg
fld
imul
add
rcr
lods
out
ins
dec
adc
push
pop
call
xor
test
gs
rcr
jb
and
cmp
add
fld
ja
jecxz
jmp
adc
cmp
push
cmp
sub
sar
shl
es
xchg
jno
mov
js
pop
jo
pushf
cmp
mov
fcomp
dec
xchg
add
dec
adc
out
pop
cmps
inc
push
adc
dec
mov
and
retf
dec
push
mov
ret
fs
sub
cmp
add
dec
jb
arpl
rcl
lds
sub
outs
xor
mov
jle
sbb
movs
mov
push
and
pop
pop
gs
hlt
mul
jle
fiadd
retf
fld
ins
(bad)
repnz
sbb
mov
and
push
shl
xor
sub
push
stos
push
add
mov
popa
repz
and
shl
fist
int
or
cmp
cs
mov
adc
mov
sar
sar
out
adc
add
dec
jns
mov
xchg
fstp
jg
(bad)
imul
jno
add
(bad)
into
jbe
push
ret
cmp
inc
push
(bad)
mov
ror
push
fs
mov
aas
or
js
cmc
or
arpl
xchg
jp
ret
leave
clc
out
in
cli
imul
adc
push
ja
repnz
push
push
mov
js
sbb
mov
xor
aam
dec
in
cwde
or
push
out
xchg
pusha
mov
ret
cmp
hlt
test
aam
fwait
(bad)
stos
hlt
test
mov
mov
in
(bad)
stc
icebp
std
inc
jmp
or
ins
sbb
pop
or
cld
mov
adc
sub
xchg
push
stos
inc
push
mov
mov
sahf
outs
cmp
xchg
push
popf
cmp
jmp
dec
(bad)
jecxz
clc
aad
mov
in
call
leave
popf
lods
mov
(bad)
and
imul
popa
mov
bound
popa
pushf
cmps
sbb
shl
test
stc
and
imul
mov
js
dec
xchg
js
int3
mov
push
out
jno
icebp
jmp
jecxz
push
lock
mov
cmp
push
idiv
xchg
xor
cld
mov
dec
ja
sub
pop
inc
and
sti
pop
in
dec
(bad)
in
arpl
dec
sbb
inc
out
pop
push
mov
mov
test
add
repnz
mov
test
mov
fdivr
leave
cmps
cwde
mov
jae
ret
ret
sbb
(bad)
leave
iret
xcrypt-ofb
cmps
scas
popf
cmp
sub
icebp
sbb
jecxz
sbb
ins
pop
jmp
jp
pop
enter
dec
aad
xchg
pop
mov
pop
loope
or
outs
mov
(bad)
mov
cld
movs
pop
mov
loopne
inc
es
xchg
sbb
mov
pop
mov
xchg
and
cdq
adc
into
push
data16
jp
gs
mov
sbb
push
jne
addr16
test
jne
mov
ins
cmps
loop
jo
jnp
adc
xor
or
imul
popa
xor
outs
outs
cld
or
jb
out
pop
mov
cmp
cmps
(bad)
jnp
jnp
mov
cs
push
cld
add
pop
loope
ds
retf
mov
outs
adc
cwde
in
mov
arpl
jbe
jo
push
pusha
add
jb
out
es
cmp
mov
icebp
int3
xchg
inc
shr
loope
dec
jbe
mov
fwait
push
push
scas
jg
pop
enter
pop
mov
inc
jno
jp
push
jmp
jg
mov
xchg
inc
inc
push
xlat
shr
cld
cmps
or
fidivr
xchg
pop
push
adc
loop
jb
inc
add
(bad)
jmp
jmp
into
mov
(bad)
xlat
cmps
sub
jns
cmp
call
es
ret
and
enter
cmp
pop
adc
je
sbb
push
cmp
and
xchg
sub
fistp
adc
push
int3
fcmovnu
shl
and
inc
inc
mov
stc
push
mov
and
xchg
fdiv
shl
xchg
fnstcw
push
mov
je
les
cmp
es
sbb
mov
rol
out
mov
pop
xor
leave
dec
inc
data16
jl
fcom
mov
ins
pop
mov
hlt
jae
ficom
adc
and
retf
rcl
mov
imul
mov
aaa
data16
gs
lock
jecxz
jb
mov
nop
sbb
jne
and
sbb
out
push
(bad)
retf
xchg
xchg
mov
cmp
mov
push
aad
adc
add
icebp
xchg
cmp
jmp
push
ss
add
addr16
movs
(bad)
test
inc
icebp
sub
fmul
mov
cmp
lock
lods
jmp
loopne
ins
mov
dec
mov
jns
in
ds
mov
test
push
loopne
mov
ret
xchg
inc
frstor
fnsave
jp
and
je
push
in
xchg
stos
push
push
mov
mov
je
pop
pop
fst
jb
enter
js
mov
sub
mov
jb
sub
xchg
ds
lods
xchg
inc
out
sbb
jno
arpl
and
cmp
xchg
xor
xlat
cmp
ret
int
(bad)
adc
leave
in
sub
add
lock
daa
test
xor
adc
sti
xor
fnstsw
xor
sub
jl
cli
in
xchg
mov
sub
inc
xor
xlat
or
and
mov
out
inc
cmps
rcr
hlt
pop
dec
pop
les
or
in
nop
mov
addr16
mov
dec
adc
sar
fisub
xchg
test
enter
int3
stc
lea
imul
sar
aas
xchg
cmp
xor
push
call
push
mov
fsubr
jbe
sti
mov
or
clc
test
(bad)
xchg
ins
(bad)
outs
dec
sub
ss
stos
stc
mov
mov
mov
xchg
sbb
out
mov
std
(bad)
hlt
data16
pop
adc
ret
rol
add
and
movs
test
mov
jbe
test
cmc
mov
mov
mov
mov
loopne
ret
xor
sub
or
mov
movs
loop
push
xor
mov
xchg
pop
jecxz
and
inc
sub
cmp
leave
mov
push
sti
mov
mov
out
ins
and
and
mov
adc
call
fstp
shl
sub
pop
clc
cmc
jl
mov
pushf
scas
clc
mov
dec
mov
or
out
jns
movs
jle
pop
mov
push
(bad)
xchg
push
xor
lods
aas
push
cmp
shl
jbe
daa
cmp
add
pop
cmp
in
push
jp
adc
out
les
cmps
mov
push
pop
adc
pop
inc
movs
test
ret
sbb
stos
ret
sub
mov
and
mov
or
test
mov
push
jmp
mov
sbb
retf
cld
imul
(bad)
ss
mov
ror
dec
jecxz
push
xchg
ins
mov
pushf
sub
xlat
lock
push
pop
idiv
cmp
adc
jl
cmc
pusha
lock
jne
ss
bndldx
xor
push
rcr
not
ds
stc
mov
cmp
mov
fs
stos
adc
sar
jmp
ins
xchg
sub
mov
or
and
inc
push
fld
fucomi
fwait
lock
int3
jl
cwde
movs
daa
test
add
dec
mov
jb
dec
sar
cmp
jecxz
call
scas
iret
repz
mov
mov
xchg
or
pop
ds
or
je
push
or
push
shl
(bad)
xor
fs
jmp
(bad)
movs
call
and
sbb
sar
aad
sbb
or
xchg
cli
mov
adc
jae
(bad)
je
pop
adc
stos
mov
in
inc
add
lods
inc
addr16
mov
ins
pop
div
add
data16
jno
loopne
mov
jmp
js
pop
and
mov
lods
sbb
or
js
mul
fcmovnbe
mov
dec
sub
dec
mov
inc
loope
test
call
adc
retf
mov
inc
xchg
jg
popa
repnz
and
into
mov
sub
outs
cwde
jg
and
movs
int
cs
pop
bound
(bad)
loope
push
xor
push
out
ficom
inc
pop
inc
out
pop
ror
cdq
aas
ins
add
jge
push
loop
cmp
mov
add
(bad)
fdiv
sub
inc
and
lods
test
and
loop
push
fadd
sti
xor
sub
daa
jbe
mov
pop
and
push
jbe
pop
and
bound
sti
push
in
mov
mov
loop
hlt
push
xor
xchg
sub
aas
shr
call
push
and
lds
jae
loope
pop
sub
pushf
sub
mov
sub
scas
cmp
(bad)
mov
pop
xor
add
imul
and
leave
mov
fidiv
test
mov
test
out
out
mov
mov
test
test
sub
scas
or
push
and
cdq
mov
inc
aas
cmp
js
icebp
fsub
rcr
dec
mov
ss
lods
pop
mov
popf
ficom
adc
mov
adc
mov
push
mov
out
sbb
addr16
enter
mov
(bad)
int3
int
pshufw
test
jge
hlt
push
xchg
xchg
sbb
push
pop
xchg
mov
fidivr
fwait
xlat
hlt
cwde
xchg
test
mov
adc
imul
icebp
push
das
adc
mov
retf
mov
xchg
dec
sar
jne
mov
jl
ins
cld
dec
es
es
mov
pop
pop
(bad)
mov
movd
jae
jecxz
push
dec
mov
loopne
pop
add
push
test
stos
inc
sbb
inc
mov
ins
jns
xchg
movs
and
retf
cmps
fsubr
jmp
cdq
je
sbb
pop
popa
mov
xor
cmc
xchg
sub
mov
xchg
jl
sub
movs
mov
fimul
sub
mov
pop
dec
cmc
fs
iret
jae
sahf
scas
repnz
mov
push
xchg
movs
mov
gs
mov
scas
cmp
sbb
pop
imul
add
inc
mov
push
retf
push
xor
mov
inc
adc
and
sbb
xchg
adc
(bad)
adc
mov
mov
dec
fwait
mov
xchg
outs
icebp
test
cld
push
daa
ins
jg
mov
lods
retf
(bad)
mov
scas
shl
iret
lock
mov
test
mov
shl
sbb
aaa
cmp
retf
sbb
paddusb
jmp
shl
fisub
loop
or
hlt
mov
inc
hlt
mov
and
imul
push
xor
nop
mov
retf
jns
xchg
loopne
xchg
sub
xlat
jge
xchg
add
sar
mov
movs
call
push
js
scas
xchg
mov
outs
inc
or
cs
nop
lods
fisub
mov
mov
stc
inc
scas
movs
pop
jmp
mov
adc
jle
lds
pop
cdq
out
pop
xor
pop
icebp
xor
ja
xchg
outs
adc
xchg
sbb
sbb
movs
scas
fiadd
xchg
movs
(bad)
jnp
cmps
jne
dec
push
jecxz
out
test
loope
add
mov
imul
test
(bad)
out
fwait
movs
in
rcr
mov
push
cmp
outs
sub
sbb
(bad)
movs
push
out
inc
ds
add
scas
mov
out
lds
add
test
add
add
ret
cmp
loop
jmp
jl
push
mov
mov
rcl
dec
int3
push
inc
xchg
scas
xor
fnstsw
out
inc
pop
stos
inc
mov
jmp
xor
scas
adc
je
sbb
sub
dec
in
stos
sar
clc
(bad)
xor
cmc
lahf
div
pop
jmp
lods
test
out
xor
ds
int3
mov
cli
xchg
test
and
lds
and
inc
movs
push
(bad)
loopne
push
cmp
xchg
test
push
stos
cmp
jg
sbb
cmc
movs
into
mov
sub
inc
lock
and
mov
sub
test
in
(bad)
les
pop
cmp
dec
lods
ins
sub
pushf
rcr
pop
dec
je
jae
mov
(bad)
imul
xchg
and
dec
cmp
stc
in
adc
inc
sub
inc
hlt
ret
sub
pop
add
es
leave
add
add
in
retf
cdq
jp
dec
rol
xchg
pop
icebp
mov
mov
ficomp
cmp
std
push
fadd
mov
cwde
jno
jb
punpcklwd
aad
jae
out
scas
add
int3
sbb
lods
into
push
shl
(bad)
lock
cwde
mov
xchg
cmps
inc
and
inc
leave
mov
loop
lea
jo
rcr
ds
adc
dec
out
sbb
scas
xchg
mov
popa
movs
sub
dec
xor
div
imul
sbb
add
xchg
fstp
inc
(bad)
std
aaa
leave
leave
jp
aad
jo
enter
loopne
movs
jecxz
aaa
inc
(bad)
scas
pop
dec
jmp
mov
jno
dec
inc
cld
or
adc
dec
rol
push
dec
xchg
and
fs
sbb
iret
arpl
or
xchg
dec
xchg
dec
xchg
or
rol
xlat
into
mov
pop
xor
push
push
add
hlt
mov
ins
dec
push
(bad)
ror
sbb
lea
add
adc
into
test
mov
lahf
inc
loopne
xor
arpl
push
jl
fnstenv
push
jp
imul
les
adc
jmp
sar
js
push
outs
xor
dec
cmp
dec
mov
ja
scas
or
inc
mov
arpl
cdq
inc
test
in
push
mov
sahf
push
(bad)
pop
outs
in
cmp
push
sub
push
pop
addr16
pop
lock
dec
pop
xor
push
ret
xchg
mov
and
mov
aad
add
aas
ins
mov
gs
cld
gs
or
mov
js
sbb
mov
mov
loopne
jb
mov
mov
fs
mov
push
and
cs
jo
and
jg
xchg
mov
loope
mov
jbe
div
pop
pusha
jae
loope
hlt
push
js
aaa
xchg
add
test
or
(bad)
mov
and
pop
and
sub
ror
aam
ret
mov
stos
in
lea
mov
in
pop
aad
in
jmp
ret
and
out
mov
adc
ja
je
out
adc
or
cmp
xor
ins
jae
cmp
or
neg
ret
dec
mov
add
retf
sub
pop
mov
pop
pop
fisub
cdq
pop
sbb
lods
xor
gs
aam
jecxz
add
lahf
jl
bound
icebp
or
(bad)
fnstsw
loop
pop
inc
out
cmc
mov
sub
repnz
adc
mov
stos
sbb
mov
push
inc
inc
xchg
mov
xchg
lods
sub
push
push
out
push
shl
dec
add
mov
ds
icebp
or
retf
imul
aad
cmps
add
mov
add
push
stos
mov
fisub
pop
mov
fmul
iret
dec
fwait
fs
pop
jmp
mov
(bad)
rol
push
push
and
into
adc
cmp
retf
xor
ror
jbe
xor
test
inc
push
mov
dec
and
mov
mov
retf
xor
test
push
jmp
mov
jmp
in
(bad)
and
push
mov
stos
jmp
aam
jae
fidiv
push
jne
cmps
scas
les
(bad)
adc
mov
jmp
iret
cmp
es
int
pop
dec
retf
xor
stc
and
es
or
adc
or
add
and
(bad)
mov
xor
xchg
(bad)
mov
nop
or
mov
in
pop
pop
adc
pop
add
sbb
mov
cmp
loope
mov
stos
movs
pop
inc
mov
cmp
or
jmp
mov
frstor
scas
js
out
ret
loopne
jne
inc
inc
dec
mov
inc
loope
add
fbstp
and
lds
loop
sbb
inc
xor
xchg
sub
in
mov
cdq
jg
arpl
(bad)
imul
test
mov
xor
mov
loope
cmp
jo
push
ret
in
and
jns
(bad)
loop
jg
(bad)
cmps
loope
in
push
cmp
jnp
(bad)
scas
out
dec
cmovno
jne
(bad)
ret
dec
sti
push
xchg
xchg
mov
imul
inc
and
xor
ss
icebp
push
dec
add
pop
je
cmp
inc
(bad)
push
inc
fdivr
mov
and
out
and
dec
mov
sti
push
push
fstp
es
stc
cmp
sub
pop
scas
xchg
xor
push
ss
xchg
mov
out
xchg
jmp
scas
xor
cmp
mov
pop
jecxz
ret
dec
(bad)
lods
mov
aaa
lea
sub
es
mov
xchg
inc
sub
mov
int3
adc
popa
xor
cmps
(bad)
sub
xor
ja
push
and
lods
mov
ror
call
pop
arpl
mov
arpl
shl
leave
inc
sar
push
int3
xor
jb
inc
test
retf
mov
and
sub
into
adc
fimul
sbb
jno
out
bound
pand
in
in
(bad)
fst
mov
and
sub
(bad)
mov
lock
dec
adc
les
sub
mov
and
pop
cli
push
sbb
sub
outs
out
and
mov
xchg
pop
ja
sbb
jl
and
adc
xchg
adc
adc
daa
pop
sahf
into
cmp
fwait
or
jno
not
inc
add
movs
retf
sti
in
or
mov
inc
pop
retf
push
aam
lds
cwde
fisub
sub
dec
popf
xchg
jmp
xchg
inc
popf
sub
xor
aas
adc
(bad)
fmulp
in
gs
imul
sbb
adc
fsub
mov
inc
xor
add
sub
fisub
dec
es
ins
sub
or
add
into
imul
push
jle
repz
cmp
outs
inc
pop
mov
jbe
xchg
inc
mov
mov
push
pop
ret
sub
addr16
fs
mov
push
ret
jle
ret
outs
and
ror
ds
mov
push
lods
out
aas
add
add
fwait
sti
xchg
(bad)
mov
hlt
je
fcomi
mov
xchg
pop
adc
inc
sbb
and
stos
push
mov
adc
popf
ss
sub
mov
sbb
das
or
(bad)
mov
mov
pop
icebp
shl
int3
or
scas
xchg
fs
pop
pop
pop
cmps
shl
bound
pop
out
or
test
mov
ss
lods
push
mov
out
jmp
cwde
shl
js
repnz
dec
inc
jp
sub
movs
scas
push
and
test
adc
(bad)
dec
and
and
call
cwde
loop
and
sub
lods
cdq
fisub
pop
scas
data16
xor
cmp
sub
push
leave
sub
mov
and
aaa
shl
aaa
xchg
xchg
icebp
xor
xchg
pop
sub
xlat
es
push
scas
sub
fistp
push
sbb
push
cmp
and
(bad)
jo
movs
pop
int
pop
cld
outs
outs
and
jnp
fld
jnp
ret
call
dec
sbb
add
xchg
and
jmp
mov
imul
mov
rcr
fisubr
call
ins
imul
or
test
(bad)
mov
pop
test
jne
fisttp
adc
jne
push
jge
sub
jnp
aad
aaa
ffree
movs
call
pushf
mov
xor
pop
sbb
adc
outs
mov
ds
ins
or
sbb
mov
push
enter
dec
imul
add
mov
jmp
les
test
add
cmps
cwde
cmp
stc
push
jp
jbe
fcom
dec
xor
lock
pop
mov
jp
jae
push
(bad)
loop
mov
mov
cmp
pushf
mov
movs
inc
mov
les
les
stc
cdq
cmps
or
into
sub
xor
jo
cmps
sub
mov
push
inc
js
sti
clc
push
fild
test
jle
mov
dec
cld
mov
clc
pop
pop
xchg
arpl
jge
lods
mov
sbb
sub
cmp
enter
pushf
aas
scas
call
mov
scas
push
js
inc
out
jp
stos
leave
ins
test
fwait
adc
xlat
jnp
jae
frstor
call
(bad)
and
bound
or
mov
xlat
push
int3
repnz
test
dec
push
sbb
push
sbb
inc
aam
and
mov
xor
push
popf
pushf
cld
xchg
punpcklbw
push
popa
inc
div
call
mov
cwde
int
cmp
jecxz
mov
pop
lods
or
xchg
xor
inc
dec
fadd
adc
popf
leave
cmp
outs
push
or
(bad)
rcl
sbb
rol
aad
inc
mov
sub
sti
jne
js
scas
ret
push
mov
pop
push
scas
xor
int3
pop
test
sub
imul
and
pop
test
push
sub
fdivr
out
repnz
mov
das
cmp
sbb
mul
jmp
les
or
lock
mov
cmp
adc
fadd
fadd
and
pop
popf
test
xchg
cmp
dec
mov
fs
push
pop
cmps
test
rol
xchg
push
mov
dec
je
jnp
add
pop
call
fsub
loope
fucomip
xchg
add
dec
sbb
sub
push
scas
cmc
jecxz
cmp
dec
lea
ins
loope
je
fwait
cwde
test
cmp
arpl
cmp
jecxz
dec
(bad)
rol
mov
inc
lods
(bad)
mov
rcr
pop
outs
or
and
prefetcht2
out
mov
mov
add
in
fwait
jns
out
pop
dec
dec
mov
sbb
inc
mov
adc
sbb
add
jl
call
je
clc
fbstp
test
idiv
mov
sub
sbb
mov
xor
xchg
cmp
cmp
aaa
sbb
rol
jno
push
inc
mov
inc
mov
jle
test
sub
repnz
mov
jno
repz
jecxz
pop
ins
scas
adc
addr16
cmps
sub
mov
pop
addr16
mov
loopne
cmp
jecxz
adc
push
call
push
add
fwait
xchg
sub
popf
fwait
xchg
scas
pop
ja
xchg
daa
mov
loope
xchg
add
xchg
aad
ds
aas
stc
push
cmp
xor
mov
les
sahf
dec
sub
movs
cmp
cli
je
cmc
(bad)
xor
cmps
xchg
xchg
push
icebp
or
pop
xchg
mov
js
(bad)
ins
loop
mov
jno
test
fadd
inc
xor
adc
out
jl
stos
jl
xor
inc
(bad)
cmc
ins
ret
shr
mov
dec
mov
xor
and
dec
adc
push
inc
pushf
stos
push
cmp
cmc
ss
inc
pop
sub
aam
inc
jb
imul
and
push
(bad)
std
lahf
cli
sti
jbe
lods
scas
push
xchg
outs
inc
add
jg
xor
jno
fadd
xchg
bound
jmp
fst
push
stos
fbstp
xchg
sbb
jae
fdiv
ds
mul
dec
jae
fucomp
popa
push
fnstenv
nop
fmul
jecxz
sbb
pop
dec
jmp
cmps
xchg
fld
xchg
hlt
sub
push
or
leave
cmp
push
push
xchg
cwde
(bad)
mov
xchg
js
setno
out
sub
outs
test
sub
push
push
clc
pusha
sbb
jae
test
and
add
pop
sub
push
dec
test
fidivr
(bad)
loopne
push
sbb
gs
inc
xchg
push
push
fcmovb
mov
xor
cmp
addr16
mov
push
addr16
mov
jbe
leave
sbb
jns
dec
mov
stos
mov
add
pop
ror
stos
sbb
stos
fimul
dec
fsubr
dec
or
sbb
and
popf
sub
mov
push
pop
cmps
js
fstp
xchg
mov
mov
call
mov
mov
dec
cdq
pop
imul
pop
call
inc
jmp
push
adc
loope
jo
int
clc
jle
fidiv
sti
out
popf
xor
jo
test
jg
and
das
pop
imul
nop
inc
sub
cdq
fwait
sti
sbb
sub
das
push
test
aam
jg
(bad)
stos
or
mov
in
cmp
or
xor
xor
das
stos
aad
push
gs
cld
mov
loope
or
xor
pop
dec
gs
pop
mov
jo
inc
cmp
push
dec
xchg
jle
push
mov
inc
out
hlt
dec
push
sbb
inc
loope
xor
mov
add
jb
fcomip
std
lds
cld
mov
push
imul
into
cwde
leave
dec
dec
push
or
aas
adc
into
fmul
fs
sahf
dec
jl
add
and
and
movs
cmp
dec
mov
xchg
mov
aaa
outs
push
call
lods
sbb
jl
ins
ja
xor
mov
enter
std
mov
jmp
xor
jb
mov
or
loop
retf
and
xchg
inc
fwait
inc
rcr
add
adc
(bad)
jmp
push
outs
leave
cmp
push
push
add
adc
ja
shr
adc
dec
push
add
jbe
pop
jo
xchg
repnz
(bad)
sbb
mov
data16
xor
jo
or
inc
push
or
sbb
adc
popf
add
sub
sbb
jge
cmp
push
and
mov
out
lds
jns
les
js
and
test
outs
test
push
push
sbb
push
mov
pop
xchg
dec
mov
fisttp
sub
inc
jae
pop
add
inc
pop
or
fdivr
jg
test
push
adc
imul
ret
fist
pop
test
dec
pop
dec
mov
retf
xor
dec
stc
and
add
pop
jecxz
dec
movs
and
or
cmp
out
daa
mov
stos
xchg
sub
(bad)
sti
dec
sub
(bad)
xor
sub
push
loope
push
jmp
sbb
sbb
push
pminub
stc
shl
xor
push
ja
ins
push
push
sbb
popa
aam
add
adc
loope
ja
cmp
rcl
inc
std
into
imul
mov
iret
dec
(bad)
dec
or
jns
jae
popa
sbb
push
add
outs
pushf
jae
stc
cmp
movs
jcxz
xchg
sbb
mov
pop
ja
or
jecxz
outs
(bad)
sbb
rcl
stos
or
cmp
mov
pop
je
pop
cmp
popa
inc
and
adc
enter
outs
je
push
sub
and
cmc
lds
mov
ins
pop
xchg
add
dec
ret
mov
jne
push
mov
int3
mov
rol
(bad)
lock
jae
sbb
xor
out
test
push
pop
inc
icebp
(bad)
rcl
shl
shl
add
xlat
push
sahf
jno
inc
sbb
cmp
mov
xor
jecxz
cmp
test
out
fwait
or
mov
mov
sub
retf
mov
add
jle
pop
lahf
aam
dec
(bad)
call
fwait
dec
pop
out
jg
jg
xor
mov
js
inc
and
dec
aaa
in
sbb
jno
pop
jns
mov
mov
jnp
push
cmp
gs
cmc
rol
dec
adc
cld
and
int3
inc
push
mov
lods
aaa
in
mov
ds
je
retf
aaa
test
mov
and
pop
or
in
jnp
leave
adc
leave
push
adc
dec
sub
sub
retf
(bad)
lods
popa
xor
cmp
dec
daa
and
adc
hlt
push
ds
fcomp
xchg
ret
ds
out
sti
retf
not
outs
hlt
shl
mov
sub
out
inc
jg
bound
jno
call
adc
popa
push
stos
(bad)
adc
daa
aad
out
sbb
xchg
loopne
popa
std
fisttp
jbe
xchg
push
int3
sbb
cs
add
stc
repz
adc
inc
cs
and
fsubr
push
mov
fsub
repz
mov
and
mov
jmp
sar
pushf
test
fsub
out
mov
repnz
push
mov
xchg
cs
pop
add
ins
les
xor
jns
add
div
push
outs
out
jl
mov
xchg
xor
aad
mov
cmp
adc
mov
fild
movs
xor
sub
jne
dec
pop
inc
pop
jp
cld
push
xchg
mov
movs
xor
leave
daa
(bad)
jge
pop
inc
cld
js
push
(bad)
mov
jmp
fnstsw
retf
stos
mov
and
push
mov
pop
popa
pusha
cmp
daa
loope
out
sub
or
mov
pop
cmp
sub
lods
rcr
outs
push
mov
fsub
xchg
lahf
pop
cli
jmp
pop
pop
hlt
jg
pop
sbb
and
dec
and
mov
lock
in
inc
push
sub
inc
call
idiv
aas
push
js
or
pop
jbe
in
cmp
lds
(bad)
nop
cmp
sub
dec
int
push
cld
stc
ins
stos
dec
jp
adc
ja
dec
test
pusha
sti
pop
stc
lods
adc
mov
cmp
rcr
fst
and
push
fldenv
fstp
inc
retf
cmp
sbb
inc
sbb
fisubr
pop
xchg
in
sbb
sbb
dec
fnstsw
(bad)
pop
sar
jge
mov
or
int3
jmp
mov
xor
mov
dec
jmp
imul
xor
in
adc
fild
mov
adc
mov
call
push
dec
in
or
push
test
mov
movs
sti
cmp
shr
cwde
jne
xchg
push
ret
aaa
and
dec
aaa
xor
fidivr
pushf
fld
mov
push
movs
std
scas
sub
xchg
inc
das
stos
cmc
stc
hlt
fwait
xor
nop
gs
pop
xchg
adc
movs
adc
mov
jbe
jnp
mov
and
xor
sub
sub
(bad)
lods
mov
and
test
push
mov
les
mov
stos
xchg
lea
fadd
xchg
inc
pop
sbb
dec
cdq
out
xor
or
int
not
mov
shl
sub
scas
mov
mov
jg
jb
ins
loop
lea
push
lods
add
cmp
push
mov
sbb
inc
push
cs
in
cmp
jmp
mov
ss
repnz
xor
jmp
fidiv
rep
add
adc
out
loop
mov
iret
xor
shr
inc
out
and
leave
add
in
cmp
mov
pop
push
xor
cmc
icebp
inc
add
or
lahf
rol
pop
sub
cmps
pop
jns
test
inc
inc
out
retf
dec
mov
add
pop
lahf
stc
add
xor
dec
and
jge
into
prefetchwt1
leave
xchg
shl
or
loope
mov
ret
call
arpl
push
xchg
push
dec
push
pop
push
mov
xchg
or
mov
jl
xchg
and
cmps
test
mov
aas
xchg
xor
fwait
pop
test
repz
std
adc
daa
jns
shl
pop
mov
inc
cwde
dec
mov
mov
xchg
in
adc
cmp
and
aam
adc
mov
sbb
sub
not
push
xchg
jle
inc
jge
jmp
dec
lgs
inc
aam
(bad)
imul
mov
pop
inc
aad
lock
test
xchg
call
into
mov
xchg
pop
stos
loop
push
or
sbb
pop
sub
xlat
frndint
jo
mov
sbb
jmp
stc
xor
add
mov
push
adc
cmp
mov
xchg
(bad)
aas
inc
sub
sub
and
xor
add
push
ins
test
hlt
inc
hlt
adc
push
mul
in
rol
call
mov
loop
dec
add
or
scas
retf
ins
or
int3
mov
sbb
jmp
and
rol
fcom
test
jp
mov
into
sbb
cmp
mov
xchg
mov
dec
or
sub
xchg
pop
and
mov
dec
cmps
(bad)
jp
loope
and
pop
jp
repz
inc
add
jb
pop
leave
repz
jle
mov
push
das
outs
stos
xchg
lahf
mov
ins
aad
inc
aas
ja
jmp
aam
fs
mov
hlt
cmp
pop
mov
fnstsw
cli
inc
jmp
add
sub
and
sbb
and
push
mov
xchg
pop
jmp
ja
jl
shr
scas
cmc
inc
inc
adc
xor
xor
push
lods
out
out
in
popf
ins
or
mov
mov
pop
push
pop
and
adc
das
add
fst
add
push
push
addr16
fldenv
xchg
(bad)
cmp
int
and
das
mov
cmc
rcr
pop
mov
sub
dec
cdq
mov
ds
les
sar
(bad)
leave
cmp
hlt
icebp
shl
(bad)
mov
aam
mov
cdq
mov
xor
outs
push
cmp
out
ja
sbb
jmp
das
ins
gs
xchg
inc
xchg
pusha
and
cwde
icebp
getsec
mov
(bad)
loopne
add
xchg
dec
stos
js
and
adc
iret
das
ds
xchg
loop
rcr
dec
inc
sbb
(bad)
aam
push
mov
or
sbb
outs
add
(bad)
popf
daa
ret
inc
ss
mov
pop
jmp
pop
add
jmp
daa
pop
aad
cmp
jmp
push
enter
fyl2x
nop
aam
xchg
fs
movs
mov
(bad)
movs
xor
int
xchg
ror
inc
push
mov
jmp
ss
push
sub
adc
and
hlt
ficom
push
push
loop
xchg
popa
mov
loopne
dec
or
lea
dec
movhlps
xor
jp
call
neg
(bad)
cmps
jbe
or
cmps
in
dec
xor
mov
and
shl
iret
adc
out
xlat
std
cmp
mov
cwde
lock
dec
inc
call
mov
iret
aaa
push
cmp
xor
imul
mov
or
sub
inc
jecxz
pop
fmul
ins
outs
cmp
mov
aas
xchg
sub
push
inc
add
mov
push
(bad)
fisttp
adc
loope
push
and
mov
push
dec
xor
loop
mov
jno
mov
ds
bound
(bad)
dec
xor
and
in
push
dec
leave
in
test
jno
jmp
shr
popa
sbb
dec
inc
lods
or
sbb
ror
outs
pushf
or
or
sbb
data16
fist
jo
nop
pusha
fisubr
pop
pop
int3
jne
mov
dec
das
stos
lea
push
(bad)
fdiv
arpl
cmp
aam
push
jmp
and
mov
or
enter
gs
mov
add
inc
or
mov
mov
and
lea
adc
cmp
mov
jmp
nop
push
repz
in
test
inc
sub
shl
bound
movs
and
xor
pop
into
xor
mov
(bad)
retf
int3
fs
sub
ror
inc
jmp
add
xor
lock
imul
mov
add
retf
test
inc
shr
inc
mov
iret
inc
inc
mov
pop
(bad)
sbb
mov
inc
xor
xchg
in
sub
cmc
sub
lods
inc
inc
push
push
inc
mov
jmp
hlt
call
and
imul
jp
dec
ja
jg
adc
xor
jnp
xchg
lods
xchg
mov
out
gs
loope
out
ret
fwait
cli
and
outs
fs
inc
adc
jbe
cdq
fsubr
outs
ror
push
out
sub
scas
lea
std
cmp
cmc
out
push
lods
sbb
push
hlt
fcomi
jp
icebp
push
retf
mov
xor
add
or
popf
pop
outs
pop
adc
adc
call
fcmovu
jg
pop
and
cmp
dec
pop
xchg
jmp
cs
test
jae
rcr
mov
add
pop
push
cmovbe
ins
add
lods
dec
mov
xor
in
cmp
pop
popa
popa
fadd
sub
lock
shr
push
cwde
xor
mov
pop
jmp
mov
data16
mov
ins
aad
outs
jp
cmp
xchg
cmps
hlt
dec
sub
ja
jecxz
dec
push
mov
mov
mov
mov
or
cmp
jno
pop
sti
vmovsldup
xor
dec
adc
nop
jl
in
movs
or
push
and
pop
adc
mov
ret
lds
mov
fwait
push
mov
jge
(bad)
repnz
and
cs
nop
cmc
dec
xor
gs
pop
xchg
into
je
cwde
in
aad
mov
ret
xchg
ds
sbb
es
mov
pop
ds
imul
jg
iret
shl
fstp
repz
cmp
dec
jmp
retf
mov
push
les
mov
cli
inc
pop
lods
mov
sbb
ja
rol
jns
push
jns
fstp
xlat
ds
push
mov
pop
call
xor
mov
out
gs
xchg
push
aam
out
adc
shr
jno
mov
push
cmp
fs
xchg
inc
or
call
cmp
mov
mov
jae
je
dec
mov
inc
out
inc
xor
ins
cmc
mov
idiv
pop
inc
adc
call
shl
sub
cmp
iret
test
test
arpl
loope
mov
sub
sub
adc
and
call
jp
inc
bound
xchg
mov
push
data16
or
rcl
xor
fs
sub
mov
ja
add
cmp
(bad)
sub
lods
and
push
adc
jo
xor
dec
jg
sub
nop
daa
ret
sub
mov
fsubrp
es
inc
xchg
or
lds
push
and
and
xchg
iret
xor
xchg
and
inc
mov
mov
pop
inc
gs
push
jmp
add
or
imul
dec
and
jae
mov
pusha
stos
clc
ret
call
std
imul
lods
cmp
or
sti
xchg
push
popa
enter
inc
popf
push
aas
dec
mov
int
lock
dec
cmps
sbb
push
xchg
jecxz
jmp
in
mov
sub
(bad)
popf
repnz
sbb
fldenv
jnp
rcr
mov
pop
adc
ja
mov
mov
mov
loop
ss
push
imul
adc
movs
xchg
lods
or
sti
aas
mov
xor
cmp
mov
clc
mov
mov
pop
pop
mov
adc
sub
adc
jne
sbb
ds
fisttp
fwait
test
jp
xor
test
test
out
adc
pop
aad
sub
scas
pusha
(bad)
fild
sub
mov
mov
mov
or
dec
xor
scas
loop
icebp
sub
dec
mov
arpl
sbb
or
push
add
xlat
aas
addr16
shl
and
lods
push
arpl
xchg
inc
cmps
ret
mov
fsubp
cli
daa
pop
dec
jae
movs
rcl
or
pop
xor
stos
push
repnz
jecxz
popf
mov
mov
mov
in
push
sub
fisttp
pop
push
mov
test
or
fstp
sbb
add
out
lods
out
xchg
lock
cmp
popa
inc
fstp
pop
enter
pop
leave
loope
test
inc
or
inc
cmp
jl
pop
sbb
xchg
adc
hlt
jg
leave
push
cmc
xor
xchg
daa
stos
mov
push
test
sbb
mov
xchg
outs
sub
cs
and
scas
cmp
(bad)
or
data16
in
dec
sbb
pop
cli
stc
fisub
sub
sar
ficomp
retf
pop
sub
pop
in
hlt
jmp
inc
or
aam
in
pop
mov
imul
push
or
push
or
add
mov
sub
and
push
rcl
call
movs
mov
cmc
stos
inc
in
ins
retf
mov
inc
xchg
push
or
jne
cmp
xor
fiadd
or
popf
dec
inc
(bad)
loopne
jnp
xchg
sbb
cmp
cs
dec
test
loope
lods
fsub
pop
sti
cli
cs
movs
out
jae
daa
mov
outs
pop
cdq
jle
retf
dec
ins
push
ffree
jge
mov
fwait
push
(bad)
push
ret
stos
cli
dec
aas
xchg
mov
dec
movs
leave
(bad)
jecxz
lods
xor
cmps
adc
aaa
test
xchg
and
add
movs
fst
lods
inc
imul
ja
outs
out
inc
(bad)
dec
jnp
fs
jmp
ins
ins
aad
lods
outs
std
out
pop
xchg
cmps
cmp
rol
xchg
stc
pop
leave
xlat
loop
pop
sub
das
adc
cmp
retf
lds
call
shl
push
fninit
fnstenv
mov
xor
and
xor
paddsw
push
cmp
mov
ja
mov
clc
aam
icebp
and
aas
and
fistp
jmp
inc
outs
sbb
mov
mov
dec
leave
mov
jb
sub
and
cwde
data16
cmps
or
faddp
pop
rcr
mov
adc
aad
pop
int
pinsrw
pop
cmp
xchg
into
(bad)
fldcw
and
das
adc
pop
or
out
cmp
sbb
or
js
push
and
icebp
pushf
loope
scas
pop
mov
sbb
xor
repz
inc
xchg
inc
adc
shl
pop
popa
test
cmps
inc
out
sub
lahf
retf
inc
ret
cmp
mov
push
test
jmp
mov
fistp
fucomi
sub
rcl
sub
and
mov
pop
(bad)
std
pop
shl
ds
call
jl
xor
mov
or
sub
dec
mov
(bad)
jae
arpl
les
in
stc
daa
(bad)
cwde
mov
mov
scas
rol
jmp
cmps
(bad)
cvtps2pi
and
je
inc
ds
push
stc
dec
cmp
xor
pusha
xor
mov
mov
in
aam
jae
mov
cld
sbb
pop
xchg
test
xchg
shl
stc
pop
mov
pop
ins
in
mov
lods
mov
popf
add
aad
sbb
push
pop
ja
mov
pop
or
mov
push
pushf
not
lock
pusha
add
fwait
ins
mov
(bad)
lahf
mov
cli
mov
(bad)
inc
inc
and
aas
sbb
jb
jne
out
cld
gs
lock
and
test
dec
js
hlt
jno
or
cmp
dec
ret
mov
popf
sub
adc
(bad)
sub
outs
(bad)
push
in
retf
pop
mov
push
pop
add
lods
sub
jecxz
dec
aaa
dec
(bad)
jp
aam
hlt
inc
adc
(bad)
ret
push
movs
div
dec
ss
mov
cmps
jne
pushf
and
iret
sbb
sub
inc
mov
or
pop
repnz
pmaxub
and
ins
iret
cmp
add
adc
std
in
sbb
and
adc
fimul
sub
add
fnclex
and
in
fwait
aam
out
push
add
jle
jns
sub
inc
retf
mov
in
xchg
xor
cmc
out
bound
outs
call
imul
in
mov
sbb
jb
gs
jns
add
lahf
les
aaa
mov
je
imul
mov
test
outs
repnz
mov
mov
lods
leave
(bad)
ror
mov
push
jne
je
adc
sub
lds
aad
movs
inc
movs
stos
mov
daa
xchg
sbb
dec
sbb
sub
inc
ja
mov
js
xlat
fucomi
loop
(bad)
pop
mov
xchg
imul
cmp
test
or
xchg
jb
mov
loop
es
pop
test
rcr
push
adc
bound
mov
or
and
js
pop
sub
int3
retf
retf
test
stc
and
mov
sbb
or
lods
popf
mov
mov
pop
data16
mov
mov
aad
popa
(bad)
mov
push
pop
dec
push
scas
frstor
sub
lea
dec
fistp
in
push
jl
fcmovne
push
pop
xchg
imul
add
sub
add
and
enter
or
jno
cmp
ret
mov
mov
outs
pop
(bad)
enter
mov
imul
cdq
in
fst
pop
fsubr
(bad)
push
add
add
scas
inc
jbe
lock
jae
cmc
(bad)
fnstsw
sbb
push
sbb
sbb
mov
pop
arpl
or
push
cmp
shl
(bad)
aad
xor
add
dec
mov
jmp
xor
movs
fwait
jb
pushf
dec
dec
cmp
dec
xchg
cs
das
adc
sub
inc
sub
inc
mov
jle
or
inc
push
je
mov
lahf
test
inc
dec
jae
mov
lods
sbb
or
call
xchg
mov
test
xchg
out
jmp
outs
inc
repz
mov
dec
fild
mov
and
pop
and
in
push
sub
push
xor
mov
push
test
out
xchg
cmp
or
push
(bad)
push
dec
xor
and
fisub
neg
adc
in
dec
and
cdq
imul
into
cmp
out
inc
jbe
jmp
dec
inc
movs
mov
pop
dec
xchg
fistp
loope
loop
test
push
mov
(bad)
pop
cmps
psadbw
push
mov
sti
push
inc
iret
jp
pop
mov
hlt
push
fistp
jp
cmp
mov
jl
in
dec
(bad)
loopne
data16
sti
mov
sbb
aad
je
loop
mov
inc
push
xor
retf
cmp
sub
lea
int
fwait
xor
data16
adc
mov
fld
push
cld
xchg
push
mov
cwde
mov
in
mov
push
fcmovnbe
cmps
fild
rcl
adc
femms
ret
jle
sahf
(bad)
dec
jge
dec
xchg
jae
pop
or
xchg
mov
movs
retf
cmp
cmp
or
mov
stos
or
pop
fwait
test
fsubr
ja
retf
mov
cmps
jmp
mov
jecxz
mov
or
mov
ja
in
jne
or
(bad)
inc
iret
dec
fist
enter
aas
out
das
mov
imul
push
mov
lods
xchg
xchg
and
clc
test
cli
sbb
xor
(bad)
dec
push
cmps
mov
retf
or
cwde
test
out
shl
add
mov
pusha
out
and
sbb
cdq
pop
dec
mov
pop
fmul
clc
loop
sbb
aam
out
cmp
inc
mov
data16
daa
xchg
jne
(bad)
adc
mov
pop
jo
sub
int3
mov
xor
dec
js
inc
fwait
enter
pop
pusha
repz
inc
sub
or
jg
popa
and
cwde
clc
jno
push
retf
call
fcmovnbe
pop
inc
dec
xor
fs
fwait
push
jbe
cmp
and
pop
ror
push
xchg
jle
pop
(bad)
and
sbb
imul
ss
inc
cs
dec
(bad)
(bad)
xor
in
pop
jmp
fdiv
and
js
sub
push
sub
mov
dec
call
dec
into
ja
sub
pop
movs
push
pop
sub
jmp
jmp
(bad)
cli
inc
and
shl
inc
(bad)
push
icebp
or
into
cmp
sahf
mov
adc
inc
jmp
or
adc
lea
sbb
dec
(bad)
out
aaa
bound
je
push
ins
shl
ja
mov
lods
jge
(bad)
rol
cmps
(bad)
(bad)
mov
mov
(bad)
out
das
xchg
(bad)
push
sahf
dec
out
pop
rcr
jae
sti
mov
ret
pop
rcl
lahf
cmc
pop
jno
or
pop
movs
stos
adc
xor
xchg
pop
aaa
gs
xchg
test
popa
test
lock
or
repz
ja
mov
inc
adc
push
data16
in
inc
inc
pop
fistp
inc
jmp
jg
push
lods
push
out
push
icebp
bound
clc
pop
ins
out
sub
xor
in
cwde
cmp
cmp
and
in
cli
or
pushf
vmwrite
inc
pusha
out
rcl
fnstcw
ret
push
dec
cmp
fisttp
jns
mov
nop
icebp
add
xor
push
adc
mov
fwait
(bad)
cmp
add
movs
mov
and
push
ret
mov
sbb
int3
aam
ins
jbe
xor
xchg
daa
and
cmp
xor
and
sbb
(bad)
or
xor
push
sahf
mov
jg
xor
out
dec
push
leave
pop
test
xor
aam
jbe
js
out
add
shr
adc
mov
pop
retf
jne
ror
test
sbb
mov
push
fdivr
mov
ja
ins
test
fistp
add
xchg
in
mov
mov
movs
push
push
cli
push
dec
xchg
mov
or
lea
(bad)
cmps
repz
bound
fimul
in
adc
sbb
xchg
sbb
retf
in
xchg
xchg
fisub
jecxz
(bad)
fpatan
jl
shl
xchg
cmp
add
cmp
or
mov
loope
mov
(bad)
sti
push
mov
add
movs
sub
(bad)
adc
jbe
push
jbe
adc
retf
int3
inc
xchg
push
in
ss
fisttp
es
jecxz
mov
xchg
sbb
mov
or
mov
ret
inc
cmp
imul
xor
inc
std
pop
jecxz
jbe
outs
mov
cmps
xchg
jmp
mov
push
js
mov
inc
mov
mov
mov
cvtdq2ps
imul
cmp
add
jmp
xchg
and
shl
pop
mov
dec
dec
and
daa
lds
mov
mov
icebp
mov
dec
xor
cmps
mov
mov
lahf
xor
ret
hlt
in
lock
push
sbb
add
aaa
arpl
movs
scas
mov
mov
ins
and
pop
adc
and
into
dec
cmp
mov
cmp
mov
je
inc
mov
stos
call
fisubr
daa
ret
fwait
in
pop
rol
sbb
test
or
and
sub
lods
mov
and
push
aas
fadd
test
mov
or
mov
test
mov
dec
rol
cmps
aam
out
stc
cld
push
stos
arpl
iret
xchg
call
xchg
and
jns
sbb
fild
pop
and
shr
dec
and
inc
test
lds
ret
test
mov
stos
and
mov
jmp
cmps
in
cmc
add
jns
cmp
xchg
shr
hlt
loope
inc
shl
sub
fbld
sbb
fst
mov
stc
sbb
xor
jecxz
cmp
fs
inc
dec
and
call
test
dec
or
cmp
std
inc
fwait
push
out
inc
pop
test
lods
sbb
scas
push
mov
xor
lods
mov
pushf
xor
mov
sbb
cmps
lahf
xchg
movs
adc
jp
cmps
jo
imul
iret
fcomp
sub
pop
mov
xor
cmp
sub
adc
loopne
test
and
mov
(bad)
popf
inc
adc
inc
je
sbb
in
sbb
movs
xchg
outs
and
jbe
movs
xchg
sbb
mov
push
pop
aas
iret
nop
loopne
push
mov
push
shr
frstor
sti
pop
inc
(bad)
dec
lds
push
dec
dec
cmps
mov
iret
aam
dec
iret
lock
jb
popf
and
add
add
bound
arpl
mov
cdq
jmp
jb
call
or
adc
(bad)
cli
inc
popa
cmp
ss
int3
add
pop
sub
(bad)
movzx
fs
sub
ja
add
jb
clc
and
mov
adc
jnp
ret
jmp
cmp
loopne
in
cmp
(bad)
(bad)
inc
ror
cmp
or
retf
xchg
pop
scas
retf
lods
jge
push
fld
fldcw
cld
adc
mov
imul
and
or
sbb
std
mov
nop
dec
stos
mov
je
sub
arpl
ret
mov
inc
sub
movs
pop
cmp
lock
adc
add
xor
xchg
jmp
nop
int
mov
cmp
ds
or
lock
ds
retf
cdq
jnp
(bad)
shl
mov
(bad)
addr16
fcmovnbe
push
retf
mov
inc
hlt
cmp
fadd
pop
sbb
mov
fdivr
mov
mov
push
mov
inc
ficom
or
and
push
or
mov
mov
test
xchg
icebp
repnz
mov
repz
add
loop
ins
mov
lahf
adc
pusha
dec
xchg
add
shl
pop
pop
adc
add
iret
dec
lds
or
xor
add
sub
mov
outs
cwde
jb
cld
mov
lods
cli
aad
xchg
call
cmp
cmp
das
and
or
mov
jae
mov
sbb
stos
mov
ja
mov
mov
inc
enter
lock
inc
rcr
mov
adc
adc
sub
popf
jne
pop
add
or
mov
cs
sti
sub
add
fcom
aam
pop
sub
jno
sbb
or
lods
and
neg
pop
movs
sbb
inc
mov
dec
popf
call
or
jbe
rcr
pushf
lds
aas
sbb
fnstsw
mov
rol
es
add
inc
idiv
sub
js
inc
data16
pop
cld
(bad)
fdivr
cmp
lds
add
pusha
mov
out
rcl
inc
leave
jns
sti
or
outs
or
push
(bad)
in
fs
addr16
sbb
cdq
mov
mov
adc
cmp
(bad)
(bad)
cwde
mov
ins
and
loopne
call
pop
xchg
mov
pusha
loope
(bad)
sub
icebp
xchg
out
push
fisub
mov
lahf
sub
mov
inc
pop
dec
xlat
push
(bad)
or
mov
in
outs
daa
or
mov
das
int
sbb
arpl
jmp
jecxz
mov
ja
xchg
scas
pop
jns
mov
(bad)
leave
rol
lods
stc
adc
dec
cmp
int3
into
jne
cld
xor
outs
xor
mov
pusha
retf
push
dec
xor
mov
lds
fldcw
xchg
cld
mov
icebp
dec
sar
adc
loop
test
loope
ja
adc
mov
jecxz
sbb
inc
dec
sub
jae
imul
fwait
jnp
cmps
mov
stos
cmp
rcl
sub
jb
add
mov
mov
push
pop
fldcw
(bad)
imul
jb
cwde
cmps
nop
or
ins
mov
call
jbe
or
jnp
movs
pop
inc
cmc
cmp
xchg
mov
int3
pushf
dec
out
push
div
stos
mov
aam
retf
pop
and
mov
aam
inc
pop
call
pushf
sbb
addr16
add
pusha
repz
sbb
sub
jae
pop
xor
mov
sbb
hlt
lea
inc
and
jae
mov
push
shl
jle
mov
cdq
jb
sbb
outs
sar
leave
test
sbb
mov
mov
push
sbb
(bad)
pusha
mov
add
and
mov
sahf
jns
nop
push
dec
mov
fld
je
mov
cmp
aad
(bad)
cmps
inc
rcr
xchg
xor
fsubp
(bad)
push
in
sub
int3
jnp
addr16
test
cmps
je
outs
adc
add
or
push
stc
pop
movs
loope
aad
ret
inc
and
lea
sub
loopne
cmp
mov
jns
and
(bad)
idiv
sti
dec
push
jmp
mov
sti
fs
cmp
pop
fstp
pop
mov
xchg
push
push
dec
data16
and
les
fcmovu
pop
mov
out
xor
sahf
jmp
xchg
jmp
sti
pop
and
imul
jno
inc
aad
mov
add
dec
pop
xchg
pop
jp
mov
inc
cli
lahf
movs
xchg
and
pop
(bad)
retf
outs
fadd
pusha
add
aaa
in
sti
or
ss
jns
arpl
xor
shl
loope
jp
inc
fstp
lods
xchg
xor
jmp
dec
inc
push
or
jnp
(bad)
sub
xor
repz
stc
js
adc
mov
int3
lods
mov
sbb
push
lods
pop
pushf
test
in
hlt
scas
pop
mov
jb
int
movs
and
stos
cld
jo
(bad)
sbb
stos
pop
push
pop
mov
adc
xor
in
mov
je
adc
xchg
sbb
sbb
ror
das
pop
das
jo
add
xor
cmp
std
mov
in
jle
sbb
jb
inc
xchg
aam
cmp
push
mov
repz
add
rcr
or
leave
add
dec
jb
jge
(bad)
scas
push
xchg
fld
or
mov
xor
mov
push
stos
popf
test
loopne
das
hlt
pop
and
adc
ins
js
pushf
ins
fucomip
mov
nop
cmp
xor
cli
fidiv
jae
jne
mov
jae
aas
jae
cli
adc
shl
inc
retf
cmp
jb
idiv
popa
dec
add
dec
adc
jne
pop
mov
bnd
std
scas
add
sub
and
and
into
fnstenv
movs
sbb
in
push
fwait
les
xchg
add
mov
ds
mov
xor
sub
push
std
pop
mov
fild
stc
shr
pop
scas
mov
mov
inc
add
fisubr
inc
jb
mov
fs
jae
lock
or
push
sub
hlt
cmp
dec
mul
shl
adc
cmp
mov
push
cmp
stc
push
adc
fwait
push
sar
dec
mov
in
lahf
cmp
xor
xchg
or
mov
lock
or
(bad)
dec
stos
es
pop
cmp
stc
test
in
mov
xlat
iret
ss
enter
test
clc
jb
add
add
push
or
sub
std
mov
test
xchg
loopne
retf
jle
popa
(bad)
sbb
xchg
jle
in
dec
(bad)
popf
or
sahf
lds
dec
in
or
pop
pop
and
(bad)
(bad)
mov
out
repnz
fdiv
push
sti
arpl
jo
test
repz
imul
or
mov
popf
mov
in
aas
and
jne
add
jge
jmp
out
rol
test
mov
ss
dec
add
std
mov
and
(bad)
(bad)
adc
test
iret
into
loope
pop
sub
adc
mov
int3
cmps
rcr
or
adc
sbb
mov
test
mov
sti
sub
in
in
cmp
nop
pushf
inc
repnz
mov
(bad)
popa
sar
mov
stos
aaa
jne
add
fmulp
vrcpss
fiadd
push
mov
in
and
test
jg
ficomp
push
inc
or
test
inc
and
adc
push
push
jge
cmp
jmp
mov
vmulpd
in
sub
test
lods
loop
mov
ins
(bad)
clc
mov
jle
fidivr
pop
out
pop
jmp
es
mov
xchg
ins
mov
jbe
adc
movs
test
out
and
sti
xor
lods
jb
arpl
arpl
addr16
jmp
mov
add
rcl
icebp
cmp
cmp
dec
dec
stos
repz
and
pop
jg
inc
sbb
retf
setnp
lods
lds
out
cld
js
cmp
bound
imul
mov
not
sub
fsubr
and
arpl
xchg
sbb
push
data16
out
or
aad
sbb
or
out
das
and
cmovne
bound
rcr
and
push
femms
retf
fcomp
or
in
inc
ds
sub
mov
fst
popa
cmps
pop
shl
mov
add
cmps
adc
test
or
adc
cwde
mov
sbb
gs
jmp
adc
je
xchg
push
ins
push
(bad)
je
cli
push
cmp
(bad)
std
adc
jb
stc
adc
xor
sti
mov
cmp
mov
mov
(bad)
jb
or
adc
inc
xchg
push
lock
shl
and
mov
and
cmp
sub
retf
and
xlat
movs
sbb
pop
arpl
jbe
into
or
xor
mov
hlt
add
xchg
xor
adc
lock
test
sar
push
repz
mov
fucomip
xlat
shr
sub
mov
mov
repz
aaa
loop
xor
cmp
ss
inc
sub
mov
add
inc
push
pop
movs
mov
and
cmps
mov
and
jmp
sbb
mov
js
and
push
xor
sub
sbb
or
sub
fldenv
jmp
out
mov
dec
test
mov
adc
and
mov
mov
dec
pop
inc
in
pop
or
or
hlt
(bad)
or
sub
mov
mov
push
sub
rcr
pushf
(bad)
pusha
adc
adc
sbb
in
(bad)
sub
(bad)
xor
sub
int
dec
xchg
or
mov
cmp
call
inc
jne
cmp
add
outs
cmc
stos
sahf
repz
mov
in
in
stos
stc
or
ss
idiv
jae
jmp
xchg
fstp
fidiv
neg
xchg
scas
scas
in
into
xor
daa
daa
push
(bad)
inc
and
repnz
nop
jnp
dec
loop
scas
and
fwait
inc
and
add
ror
cdq
mov
pop
and
sahf
cmps
out
ds
sub
pop
xchg
mov
cmc
xchg
push
ret
add
shl
add
cmp
jmp
aam
nop
mov
retf
add
cmp
xor
nop
mov
jecxz
loopne
fsubr
test
xor
out
sahf
pop
cmps
jle
xchg
js
or
fcmovnb
jecxz
and
mov
or
fsub
les
jmp
(bad)
mov
stc
pop
sub
rcl
mov
jnp
mov
aam
cmp
mov
jge
ret
or
test
dec
mov
adc
add
fisttp
and
gs
nop
sbb
aas
and
nop
or
jg
xchg
cs
xor
mov
call
lods
sar
xor
loopne
dec
in
and
imul
loopne
daa
push
lods
(bad)
movs
sar
xor
mov
clc
pushf
fnstenv
jne
cs
lods
cmp
jbe
sbb
add
test
xlat
test
and
in
dec
and
pop
and
inc
or
jl
(bad)
daa
sub
aaa
movs
lock
fdivr
repnz
and
cmps
fidivr
movs
js
push
dec
xchg
(bad)
xor
xchg
xchg
lods
cdq
xchg
out
js
icebp
push
jae
or
xchg
or
jae
add
cmp
jge
jns
pop
(bad)
retf
fwait
sahf
nop
mov
or
push
add
mov
(bad)
or
pop
cmp
pushf
xor
jae
mov
and
mov
mov
jg
vpcmov
aaa
add
dec
push
xor
pop
or
in
inc
in
scas
out
xchg
push
test
lods
inc
ins
stos
das
xchg
into
xor
das
out
shr
ins
and
fidiv
test
lea
sbb
loop
xor
pop
lea
sub
dec
mov
in
jge
push
mov
shl
mov
loop
mov
(bad)
cs
(bad)
mov
mov
out
lea
pop
loop
sub
xor
or
daa
inc
ss
bound
mov
(bad)
push
xchg
loopne
jne
(bad)
in
stos
imul
pop
adc
sub
mov
cmp
test
jae
mov
addr16
cs
pop
cmp
shl
ss
aaa
inc
inc
dec
adc
pushf
jmp
imul
imul
popa
inc
ret
shl
mov
enter
cmps
pop
mov
fldl2e
es
jns
std
out
inc
pop
adc
jno
std
cmp
rcl
push
lea
dec
and
mov
stos
sub
jns
pushf
cmps
div
and
inc
pop
pop
ss
jge
jbe
dec
es
and
dec
ret
push
jnp
fwait
cld
jl
xchg
push
call
dec
loop
cs
outs
cwde
push
jb
mov
imul
popf
in
dec
cli
and
xor
lods
bound
sti
and
lock
scas
pop
push
retf
and
or
sbb
lahf
in
jbe
in
dec
repnz
pop
neg
dec
sub
jno
adc
sbb
pop
imul
stos
ret
outs
rol
jmp
loopne
fcomp
jo
sub
mov
loope
push
mov
mov
jb
lds
add
fistp
pop
sub
adc
ss
mov
and
cld
push
jle
and
or
outs
(bad)
xor
xor
dec
jne
mov
push
or
ins
stc
mov
sbb
xchg
cmc
fwait
daa
test
ret
inc
fsub
fstp
pop
lds
adc
jb
rol
imul
xor
(bad)
repnz
loope
pop
mov
js
sub
xchg
jno
lods
(bad)
cld
pop
xchg
inc
out
mov
xor
adc
dec
repnz
mov
add
add
mov
pop
enter
sbb
sbb
in
pop
movs
mov
pop
cmp
test
xchg
call
cdq
ds
jl
outs
dec
imul
pop
push
fisub
cdq
pop
cmp
neg
ja
mov
xor
xor
xlat
pop
iret
xlat
xor
dec
push
jmp
xor
fisub
iret
pop
and
shr
inc
stc
adc
xlat
mov
test
pop
test
sar
fadd
imul
adc
jmp
cmc
sub
mov
in
xor
js
and
push
in
adc
fidivr
xchg
mov
xchg
and
nop
imul
in
lods
loopne
movs
inc
sbb
push
call
lea
cli
out
test
jg
jbe
sbb
(bad)
out
fsub
(bad)
add
push
imul
xchg
mov
fistp
sbb
mov
mov
cs
dec
adc
add
mov
mov
aad
loop
add
push
add
aad
dec
les
add
inc
mov
out
test
ret
out
pop
outs
pop
addr16
fldcw
jg
test
or
mov
jno
in
(bad)
fcmovnbe
pushf
and
xor
pushf
or
inc
dec
jno
mov
lock
dec
aad
imul
push
outs
in
dec
retf
mov
in
ins
jmp
pop
cmp
les
push
iret
sbb
push
gs
cmp
pop
jns
mov
sahf
aam
xchg
rcr
inc
into
(bad)
in
inc
test
push
rcl
jne
jae
push
stos
jmp
sub
retf
cmp
mov
stc
(bad)
mov
xchg
dec
loop
sub
xchg
std
(bad)
ins
arpl
jle
cs
cmp
add
gs
psubsb
call
into
outs
mov
sub
cmps
lock
inc
arpl
xlat
in
test
aaa
retf
mov
ins
leave
and
and
nop
sbb
jecxz
push
pop
cmp
imul
and
shr
stos
add
fdiv
ins
mov
clc
mov
fcomp
sub
cmp
mov
into
out
sub
sbb
mov
mov
jmp
into
jnp
push
cmp
push
and
loopne
adc
or
mov
and
cli
mov
adc
out
ror
jge
xchg
add
mov
adc
dec
in
sbb
push
push
mov
sub
(bad)
test
push
inc
test
fsubr
movs
adc
sbb
push
sbb
sub
push
jl
jmp
ins
sub
or
cmps
fwait
imul
sbb
sar
xor
ins
hlt
cmp
in
push
push
lea
cld
imul
test
(bad)
shl
jno
xor
add
fisttp
sbb
fcmove
ficom
out
dec
and
cmp
scas
lods
rcr
push
les
cmc
adc
inc
dec
inc
pop
push
cdq
jge
push
xchg
mov
pop
adc
and
sbb
add
leave
mov
sub
aam
jle
(bad)
mov
das
or
hlt
addr16
cmps
jmp
xor
pusha
xor
pop
scas
fistp
aad
push
icebp
push
stos
add
xchg
jmp
shl
aas
inc
in
popa
jne
cmp
cmp
mov
push
mov
fwait
(bad)
pop
sbb
imul
loopne
jg
cmp
or
xlat
pop
xchg
mov
into
stos
sbb
movs
fistp
lahf
popa
jp
cwde
in
fldenv
mov
inc
test
pushf
hlt
sbb
jle
sub
mov
pop
cli
xor
mov
rol
arpl
sahf
cmps
retf
add
jg
and
movs
mov
jmp
dec
inc
popf
and
adc
popa
test
or
fnsave
lds
stc
das
je
dec
inc
xchg
jb
adc
int
ss
pusha
mov
inc
out
outs
xchg
inc
xor
enter
in
test
js
ficomp
mov
add
mov
movs
loopne
jle
jo
fisttp
or
(bad)
pop
popa
lock
mov
bound
xchg
in
inc
fwait
test
add
mov
jae
retf
fldenv
movs
je
fwait
jp
xchg
clc
lock
into
jp
or
pop
cmp
lods
xchg
push
mov
dec
int
mov
xor
mov
xchg
mov
dec
inc
mov
xor
pop
sbb
sbb
jmp
ins
push
(bad)
xor
mov
push
jle
cmp
or
nop
imul
retf
and
enter
mov
cmp
sub
push
pop
(bad)
sub
stos
push
lea
or
test
gs
jg
sbb
push
in
lods
pop
es
and
out
mulps
push
repz
aaa
mov
(bad)
mov
mov
mov
loop
push
aas
inc
cwde
cmp
aas
stos
movs
dec
ficom
and
ins
stos
test
sbb
mov
das
loop
inc
push
test
sahf
mov
mov
cld
pop
mov
cli
in
mov
or
js
mov
fldenv
div
cmp
cmp
in
je
out
fstp
in
jg
pop
jmp
dec
mov
adc
add
ret
adc
push
push
ss
lods
xlat
or
or
mov
push
arpl
mov
cmp
in
(bad)
sbb
fcomi
int3
push
dec
lods
in
fs
adc
mov
jmp
arpl
jo
pop
sahf
mov
mov
pushf
and
movs
sub
sub
popa
inc
std
push
cmp
call
xlat
xor
mov
cmps
dec
fcom
fbld
imul
cmp
dec
inc
dec
cmps
mov
cld
cmps
sar
adc
push
stos
outs
sub
xor
xor
sbb
pop
xchg
je
lods
push
xchg
xor
sar
cmp
and
pop
movs
mov
int3
inc
dec
lock
jle
dec
xchg
sub
fld
pop
iret
jle
or
mov
and
inc
(bad)
and
pop
mov
sbb
fisub
sub
scas
ja
sub
push
dec
mov
clc
push
sbb
dec
lods
xchg
jbe
scas
xchg
(bad)
mov
xchg
xor
dec
sub
outs
shr
xchg
sub
test
xor
push
pop
fisubr
sbb
xor
sub
jmp
xchg
fcom
inc
not
sbb
dec
sub
popf
inc
pop
pop
fidivr
std
or
ins
sti
mov
mov
cld
jl
outs
scas
and
test
jp
jne
popf
jbe
sbb
add
clc
push
or
call
scas
out
outs
test
or
cmps
adc
in
rol
idiv
aas
lock
movups
ja
fs
xchg
push
das
inc
lea
sbb
shr
rcl
retf
adc
add
mov
mov
ss
fistp
push
and
hlt
je
call
mov
dec
cmc
test
enter
push
fldenv
daa
fmul
test
(bad)
fistp
idiv
inc
int3
xor
jo
cmps
xchg
(bad)
clc
inc
(bad)
test
and
adc
int
cmp
neg
add
pop
sbb
push
lds
sub
mov
mov
or
ins
out
pop
pop
dec
mov
or
mov
les
rol
xchg
xchg
mov
sbb
scas
and
repnz
out
mov
ret
push
fs
lea
sbb
sbb
clc
cwde
mov
arpl
mov
ror
adc
int3
inc
pop
mov
cmp
push
outs
js
fldenv
jmp
dec
mov
sub
cmp
add
enter
xchg
jmp
pop
mov
xchg
test
jno
clc
sub
(bad)
xchg
xchg
mov
js
pop
inc
jnp
mov
loope
les
sub
ret
int
arpl
dec
iret
sub
cmp
fcomi
xor
pop
shl
add
cld
ds
mov
sbb
adc
mul
nop
jl
jb
sbb
adc
mov
pop
es
xor
cld
sbb
ror
mov
fmul
sub
mov
imul
ss
mov
jp
inc
xchg
mov
cmps
inc
test
out
ror
add
mov
pop
pop
jmp
das
jno
cmp
mov
test
mov
test
adc
test
sahf
in
jmp
adc
xchg
imul
retf
cmp
sbb
or
jno
dec
sub
jb
pop
xor
fsub
jecxz
push
inc
les
mov
inc
loopne
test
sub
cmp
xchg
lock
pop
mov
rol
and
scas
mov
inc
cld
add
scas
cs
pop
shl
dec
and
das
inc
sub
push
stos
sahf
sti
pop
cdq
cmp
push
fstp
lahf
loop
push
aam
idiv
lods
(bad)
popa
cmp
sub
sti
popa
push
arpl
ret
cwde
in
(bad)
mul
sbb
xor
sbb
cwde
mov
pushf
sub
dec
enter
jae
sbb
sbb
pop
cld
loopne
adc
mov
(bad)
xchg
mov
push
mov
daa
xchg
lods
addr16
aas
mov
mov
jne
and
jl
fld
cmp
data16
fadd
mov
xchg
shl
jnp
in
pop
xchg
push
(bad)
ror
mov
push
push
mov
popa
pop
sbb
dec
add
mov
cmp
std
sahf
enter
cmp
leave
pop
xor
ret
into
and
(bad)
arpl
inc
xchg
fs
jp
sbb
dec
pusha
fst
and
loopne
div
dec
xchg
jg
mov
(bad)
jb
sbb
movs
push
sub
adc
rcl
nop
pop
dec
into
cld
ja
inc
(bad)
scas
outs
sar
inc
mov
xchg
or
jmp
cmps
shl
push
adc
popf
push
aam
push
imul
cdq
test
sahf
mov
or
lea
mov
mov
adc
inc
inc
mov
xor
mov
ret
xchg
aam
xor
mov
sbb
cdq
pusha
call
mov
ins
pushf
movs
bound
jl
lods
push
fcomi
push
xchg
cmps
sub
out
mov
jnp
mov
pop
cmp
add
cli
mov
adc
xor
cwde
sbb
jg
xlat
sbb
loop
jns
mov
iret
ins
pop
imul
cmp
mov
cmc
lea
adc
push
pop
mov
jmp
sar
inc
movs
mov
retf
mov
sbb
mov
cmps
jg
cdq
sbb
pop
mov
addr16
add
inc
jmp
outs
fcmovnb
mov
mov
in
lock
mov
ror
push
shl
cmps
sub
stos
pop
xchg
lods
or
outs
mov
sahf
xchg
fsubr
(bad)
or
es
sbb
add
pop
push
sub
je
push
cmp
fcomp
arpl
mov
lods
xor
ret
(bad)
lahf
pop
daa
xchg
jb
ret
les
aam
mov
xlat
pop
push
sbb
and
fs
dec
push
mov
add
or
mov
dec
push
shl
xor
in
jle
sbb
lods
mov
cmp
and
div
cmc
aaa
loop
mov
iret
jmp
push
test
shl
iret
mov
in
pop
maskmovq
sub
mov
pop
mov
(bad)
jae
je
xor
sbb
lods
cmp
sub
(bad)
lods
cmp
jo
push
leave
inc
or
inc
mov
in
pop
repnz
aas
rcr
gs
int3
mov
pop
inc
sub
cmp
jnp
jae
mov
sbb
mov
jg
pop
loope
push
xchg
sti
imul
movs
mov
dec
mov
aad
(bad)
retf
inc
mov
xchg
jmp
and
push
cmp
stc
pop
cdq
inc
outs
(bad)
xor
sbb
xchg
hlt
and
outs
shl
psubsb
stc
cmp
push
into
out
js
cmp
xor
sub
out
es
cmp
jg
mov
jle
xor
es
in
add
mov
addr16
dec
jmp
push
dec
loop
in
dec
cmp
xchg
xor
add
js
mov
xchg
std
mov
cmps
ja
and
mov
(bad)
add
jg
mov
outs
into
and
and
xchg
ins
dec
add
popf
enter
ins
mov
mov
add
and
mov
push
shr
xchg
or
inc
xchg
test
pop
loop
add
rcr
jo
pop
aaa
sub
cld
gs
mov
sub
xchg
pop
pop
aaa
and
and
push
jne
cmp
sbb
xchg
popf
xchg
or
xor
mov
sbb
xor
push
(bad)
bound
cmp
fstp
pop
ds
popf
mov
pop
add
adc
fcom
push
(bad)
adc
xor
cmp
jg
pop
add
cmps
gs
outs
sbb
xchg
(bad)
ins
xchg
je
xchg
jmp
fild
push
sti
jmp
mul
mov
ret
pop
hlt
dec
test
data16
push
jno
or
mov
cmp
jo
pop
xchg
mov
pop
xchg
movs
hlt
push
add
mov
or
push
pusha
test
leave
push
ja
mov
inc
ss
mov
in
sub
mov
inc
in
out
mov
mov
mov
sub
in
test
rcl
adc
retf
(bad)
call
mov
fdivr
xchg
mov
dec
pop
mov
pop
push
call
xchg
or
jo
adc
(bad)
jge
pop
sahf
popf
push
ds
fidivr
pop
je
mov
ja
inc
leave
adc
push
jp
jge
push
and
shrd
mov
adc
adc
push
push
add
push
mov
push
retf
cmp
movs
imul
adc
movs
in
jmp
xchg
lock
mov
adc
add
out
and
jge
test
pop
mov
sub
pushf
ficom
fld
fwait
xchg
jo
adc
sbb
ret
ss
test
lea
loop
mov
outs
push
sbb
loop
retf
xor
sbb
fistp
in
xor
mov
xor
xchg
aaa
pusha
and
sbb
sub
and
pushf
stos
add
bound
dec
add
lods
stos
mov
(bad)
lds
jb
jge
add
xchg
ds
cmc
mov
mov
js
jo
inc
ss
jge
adc
pop
inc
scas
adc
mov
mov
jp
fnsave
call
pop
jne
cmc
pop
into
add
inc
fld
push
and
jnp
mov
jmp
mov
push
rcl
sbb
mov
enter
fwait
xchg
mov
inc
fdivr
lods
xor
in
lds
push
push
inc
cs
mov
inc
icebp
(bad)
fcom
mov
nop
dec
xor
inc
retf
add
out
(bad)
fs
jg
lahf
ja
fcomip
mov
stos
pusha
pusha
shl
icebp
cmp
pop
xor
loop
jp
sti
jae
jmp
jnp
repnz
les
or
sub
mov
dec
pop
retf
ins
inc
cmp
sbb
xor
push
dec
sub
lahf
pop
cmp
in
jecxz
out
xchg
(bad)
jne
repz
dec
loopne
and
call
test
push
dec
mov
push
inc
mov
scas
imul
jmp
cmp
add
call
mov
pop
mov
xlat
adc
adc
fmul
xor
lea
sahf
and
or
fs
pop
in
mov
dec
mov
cmp
into
add
iret
sbb
mov
xor
mov
xchg
mov
mov
sbb
pop
ss
or
mov
cmc
jmp
mov
jl
in
and
push
addr16
adc
aam
dec
fidiv
fdiv
addr16
(bad)
imul
xchg
cmp
lods
push
rol
add
arpl
push
aaa
pop
or
clc
loopne
iret
xor
ss
clc
shl
xchg
mov
push
or
sbb
(bad)
xchg
pop
das
(bad)
cmp
in
add
test
jb
sti
add
add
ret
inc
repnz
sbb
rcl
bound
bound
test
pop
std
bnd
in
popa
cmp
xor
add
cdq
jne
xchg
jecxz
imul
(bad)
sub
pop
gs
cmp
in
inc
(bad)
ds
fcomp
push
not
pop
lock
pop
ins
std
movs
xchg
mov
mov
add
je
push
outs
mov
cmps
sub
stc
add
in
jge
sub
retf
fnsave
es
out
jnp
lea
push
cmp
fnstsw
push
inc
dec
sbb
inc
loop
popf
int
cmps
rcl
xchg
fcomp
aad
shl
xchg
stos
les
xchg
nop
test
mov
inc
xlat
xor
jne
or
cmps
jne
test
cld
cmp
mov
into
push
mov
add
adc
into
je
xor
dec
les
iret
inc
outs
movs
lea
test
mov
clc
and
cwde
push
cmc
leave
push
je
add
fwait
lahf
sbb
loop
in
arpl
mov
mov
cmp
push
out
test
repz
xchg
and
mov
sbb
or
jp
jg
int
mov
and
and
inc
dec
push
sbb
jle
cdq
jne
aam
adc
push
sub
out
xchg
fild
sub
push
xor
pop
jmp
xchg
inc
sahf
adc
shl
add
fisttp
pop
in
and
ins
(bad)
xchg
addr16
scas
xchg
sahf
shl
mov
dec
mov
cmp
icebp
outs
pop
mov
sbb
ret
inc
ss
jno
jp
sub
jl
push
imul
add
ins
adc
mov
stc
fisubr
or
push
(bad)
retf
inc
les
dec
inc
test
jp
inc
mov
sbb
push
jecxz
jge
xchg
popf
(bad)
out
cmps
mov
mov
lea
inc
xchg
pop
xchg
dec
sar
stos
imul
jnp
out
dec
sbb
mov
call
dec
outs
jne
add
sbb
adc
mov
scas
stc
jo
repnz
add
les
pop
sub
sub
inc
mov
mov
in
pop
hlt
iret
or
and
aam
sub
pop
pop
pcmpeqw
pop
inc
not
mov
repz
lods
rcr
mov
aaa
mov
xor
int3
dec
sbb
cmps
adc
inc
jbe
shl
int
aas
ret
pop
pop
jle
jnp
shr
les
gs
call
add
adc
adc
daa
xchg
push
and
inc
(bad)
and
pop
ret
leave
das
rol
pop
outs
in
rol
scas
hlt
sar
stos
repz
iret
int3
cmp
inc
clc
add
mov
fsubrp
mov
out
mov
xchg
loop
push
retf
movs
fcmovnu
imul
imul
mov
add
pop
inc
xchg
in
icebp
sahf
and
std
and
and
out
mov
mov
or
dec
push
inc
stc
cs
pop
sbb
clc
cmps
sbb
fs
jge
add
(bad)
loope
ja
cld
xor
sbb
jb
xor
call
pop
mov
and
addr16
sub
mov
and
xchg
int3
pop
xlat
loop
hlt
pop
pop
in
mov
out
add
xchg
adc
mov
cli
mov
jno
sub
bound
pop
add
jno
sar
jb
xor
aam
cmp
das
cwde
vpsrld
sbb
mul
fistp
fld
fsub
adc
(bad)
mov
inc
push
(bad)
mov
ret
lods
mov
dec
push
fst
ins
mov
cwde
jo
mov
es
xlat
popa
pop
imul
mov
fidiv
std
sub
loopne
mov
rcr
cmp
pop
(bad)
sub
aad
xor
pop
sub
xchg
ins
cmp
inc
or
push
mov
sub
sub
fiadd
xor
(bad)
not
stos
das
ins
arpl
lods
dec
dec
cmp
jne
std
mov
adc
enter
iret
mov
push
mov
mov
inc
inc
adc
imul
push
fisttp
sub
dec
mov
daa
mov
cmps
mov
pop
ins
or
lock
les
push
fnstcw
clc
data16
jg
xor
ret
push
test
outs
push
test
imul
jno
sbb
into
mov
das
lds
adc
into
ins
not
xor
xor
mov
rcr
nop
cmps
ror
xor
cvtdq2ps
test
push
movs
les
rcr
and
xor
loope
sbb
or
sahf
push
jae
imul
ror
(bad)
js
repnz
xor
xchg
in
sub
jbe
adc
adc
mov
inc
inc
xor
popf
inc
dec
stos
jp
loope
ror
das
or
adc
xchg
inc
lea
ret
aaa
jns
cmp
mov
cld
(bad)
retf
cmp
loopne
stos
add
adc
retf
sbb
cwde
pop
mov
sub
xor
push
stos
sub
adc
xchg
lods
fwait
xchg
cdq
cmps
mov
out
push
fwait
cmp
pop
push
or
js
inc
push
fld
inc
adc
cs
je
mov
ficom
sbb
mov
dec
and
jg
xlat
(bad)
addr16
jg
fwait
repz
shld
fcomp
rcr
out
pop
das
cmc
inc
imul
inc
adc
out
stc
ss
stc
mov
shl
add
xor
mov
mov
mov
push
mov
ss
dec
or
sahf
cmp
cwde
cmps
movs
cmps
dec
imul
push
xor
pusha
push
add
test
outs
into
and
lds
stos
(bad)
mov
lods
xchg
test
ins
push
and
mov
push
mov
repz
xchg
push
cwde
bswap
mov
and
cmps
in
out
pop
mov
imul
fnsave
std
fbstp
retf
inc
xchg
ficomp
hlt
mov
jg
dec
sti
ins
icebp
setns
in
sub
ret
test
dec
add
sub
mov
inc
es
es
mov
imul
fsubr
dec
cmp
mov
lahf
or
or
pop
(bad)
fldenv
xchg
nop
loope
pusha
in
cld
cmps
cdq
shl
fisub
out
inc
add
inc
pusha
aam
clc
pop
xor
pop
mov
sbb
pushf
ds
adc
mov
cmp
aad
hlt
add
jno
pop
movs
int
retf
fcmovb
js
hlt
jl
in
arpl
aad
fbld
pusha
je
and
mov
pop
ds
pop
mov
mov
dec
and
push
and
mov
shr
xor
cwde
in
xchg
cwde
sbb
jmp
xchg
mov
inc
icebp
scas
das
ror
cs
jmp
(bad)
sti
push
stos
test
and
jae
pop
add
sar
stos
adc
call
sbb
xor
cld
test
push
mov
jmp
fwait
push
jbe
enter
dec
dec
inc
sub
mov
sti
call
movs
dec
jo
cmps
xor
mov
jnp
das
fstp
bound
jno
scas
jae
mov
mov
lods
add
aas
mov
dec
jg
les
jl
sub
shl
leave
lahf
enter
lods
xor
ins
lea
add
lock
out
test
(bad)
adc
(bad)
fimul
loopne
jl
mov
and
popa
stc
fst
rcl
and
xchg
sbb
cmp
retf
adc
dec
ins
pop
aaa
lds
and
xor
xchg
push
(bad)
mov
dec
cmps
retf
push
push
in
jp
scas
sub
out
xlat
ja
rcl
imul
push
int3
jno
pop
pushf
fwait
pop
mov
loopne
or
adc
(bad)
loope
push
sbb
sub
int3
popf
inc
xor
sub
or
pushf
jg
cmp
pop
push
and
xlat
push
daa
(bad)
mov
jecxz
xlat
cmp
jecxz
cmp
sub
(bad)
aaa
pop
jne
aaa
mov
das
dec
ficomp
adc
jecxz
outs
nop
cmps
mov
mov
fsub
cdq
aas
out
jge
cmc
xor
xchg
or
mov
cmp
jmp
jg
xor
pop
test
inc
adc
out
scas
stc
cmps
sar
push
cmp
sbb
or
dec
xor
lahf
data16
cmp
jns
mov
push
shl
scas
sub
add
addr16
inc
test
test
(bad)
jmp
push
xor
sub
push
and
inc
jnp
fnstcw
cs
jg
xchg
jmp
in
mov
in
aad
dec
xchg
sbb
mov
sub
inc
fwait
data16
push
and
xchg
retf
sti
popf
(bad)
jg
mov
jae
ret
mov
fwait
push
push
add
mov
imul
shl
mov
add
mov
pop
jecxz
push
test
loop
mov
data16
stos
jnp
jb
and
cmps
sbb
mov
int3
popa
into
in
cdq
ja
cmp
pop
xor
push
inc
push
fist
jge
jp
(bad)
or
inc
test
dec
sbb
imul
shr
push
fistp
dec
cmp
cmp
sar
scas
add
shl
je
rcr
push
adc
addr16
in
lods
mov
call
mov
repz
xchg
pop
rcr
ret
lea
ror
dec
fistp
addr16
dec
mov
rep
ds
addr16
aam
out
mov
mov
sti
in
add
stos
into
adc
and
imul
cdq
ds
pop
sub
jge
pop
mov
nop
xor
sahf
mov
mov
xchg
cmp
in
adc
ins
inc
xor
sub
lock
mov
pop
into
jns
mov
pop
jmp
push
jne
jo
sub
gs
push
movs
shl
cwde
inc
fisub
mov
out
bound
aaa
sbb
cmp
mov
xor
and
dec
int3
scas
and
sub
loope
vpaddd
mov
xchg
adc
mul
adc
js
and
test
jno
mov
out
and
inc
xor
mov
clc
rcl
fldcw
leave
dec
lods
cli
das
sub
xchg
test
cmp
or
jp
shl
push
pop
cmps
out
ficom
mov
fistp
dec
push
fsub
sbb
nop
hlt
loopne
adc
or
sub
or
and
sbb
pop
shr
or
dec
stos
jns
cmc
add
cmp
fs
je
lods
inc
cmp
mov
lods
loope
xchg
sub
sbb
lods
adc
enter
(bad)
retf
mov
sahf
repz
(bad)
outs
loope
xchg
call
and
sahf
ficom
rcl
popa
retf
in
retf
add
daa
cwde
fisubr
or
mov
lds
loopne
std
jecxz
xchg
pop
imul
adc
pushf
loopne
hlt
push
neg
cmp
jbe
iret
inc
mov
or
dec
xchg
lea
inc
add
inc
cwde
sub
add
xchg
fldcw
and
xor
or
repnz
pop
jmp
fnstenv
jmp
aaa
xor
jg
xchg
retf
call
mov
jns
sub
addr16
icebp
out
jo
cs
loop
retf
adc
stc
mov
out
sbb
push
out
mov
push
push
adc
push
movups
in
push
outs
mov
imul
or
pop
(bad)
pop
test
mov
int
sub
sub
cmp
or
dec
ins
sbb
jo
push
stos
data16
pop
iret
or
sbb
jmp
(bad)
adc
pop
push
loop
mov
call
int
sti
inc
mov
icebp
pop
mov
mov
dec
push
jbe
lock
fwait
pushf
xchg
push
pop
je
sub
push
xlat
call
shl
jg
shr
std
xchg
imul
pop
add
or
mov
push
test
mov
jg
mov
enter
and
dec
pop
sar
repz
and
adc
xor
out
inc
inc
adc
lods
and
jne
mov
mov
pop
dec
sub
and
jbe
addr16
popf
out
xor
sbb
xchg
int
ret
outs
add
lods
movs
pop
repnz
daa
cld
pop
adc
jbe
cli
mov
mov
iret
fsubr
mov
jmp
xchg
stc
icebp
mov
scas
mov
cwde
cmps
xchg
push
(bad)
push
adc
inc
popa
xlat
mov
adc
push
fsubr
xor
or
js
fnstsw
out
cmp
adc
adc
dec
fdivr
mov
mov
and
cwde
dec
xchg
fisttp
adc
ins
test
ret
fidiv
out
jo
loop
enter
xchg
shl
pop
lds
icebp
xor
inc
inc
mov
retf
fcomp
xchg
or
mov
bound
or
sub
xor
call
stos
ins
in
push
adc
loope
mov
pop
out
and
les
cs
and
add
sbb
(bad)
jnp
mov
xchg
cmp
jmp
xchg
arpl
jle
fsubr
xor
test
mov
jecxz
push
xchg
pop
fidivr
adc
and
mov
pop
mov
xchg
sahf
push
cwde
lahf
xlat
stc
sbb
add
xchg
ss
outs
lea
add
xchg
aam
and
rol
and
je
adc
arpl
test
sub
cs
outs
or
jb
inc
int3
ret
sub
(bad)
movs
ins
pop
test
daa
pop
sbb
gs
add
sub
out
xchg
cmps
or
test
das
fucomp
out
pushf
pushf
scas
(bad)
std
xchg
enter
cmp
in
cmp
dec
std
adc
fidiv
(bad)
js
paddsw
out
sahf
adc
xchg
fdivrp
or
mov
pop
in
lahf
pop
retf
rcl
add
frstor
xchg
clc
dec
clc
lock
sbb
mov
rcl
fisttp
arpl
adc
fimul
dec
iret
sbb
stc
in
ds
dec
loop
mov
add
mov
outs
(bad)
icebp
adc
push
addr16
jmp
pop
cmc
scas
movs
inc
sub
and
test
cmp
loope
call
ins
aas
or
int
xlat
test
add
(bad)
mov
add
mov
cld
jmp
cmp
sbb
xchg
(bad)
mov
mov
cmp
fnstenv
daa
add
mov
push
xor
and
inc
mov
or
mov
xor
es
mov
add
sbb
sbb
cdq
addr16
inc
add
pusha
or
add
dec
in
pop
sbb
cmps
ret
jbe
jne
inc
fadd
push
cmp
es
pop
js
call
enter
sub
push
sti
imul
pop
inc
adc
mov
pop
fcom
push
arpl
inc
sub
das
dec
inc
xor
popa
jg
loope
lods
cwde
jo
iret
mov
sbb
mov
pop
das
mov
ins
inc
mov
clc
sbb
into
and
je
aam
dec
out
push
sbb
dec
repnz
je
aad
repz
retf
fcmovnb
clc
xlat
sbb
inc
sub
test
mov
cld
cmp
inc
(bad)
sub
ja
pop
cmp
fcmovnu
pop
dec
ret
sti
mov
xor
test
xor
iret
aam
and
inc
aaa
mov
jp
xchg
(bad)
cmps
mov
xchg
ins
xchg
gs
mov
inc
into
sbb
mov
pop
je
lods
(bad)
leave
call
pop
mov
nop
loopne
bound
sub
xlat
xor
push
or
jo
sar
imul
ss
mov
jl
jge
loope
adc
and
dec
mov
adc
out
into
inc
push
mov
pop
not
cmp
scas
adc
push
mov
int3
scas
ss
and
mov
add
pop
and
scas
mov
in
or
leave
daa
std
mov
lock
pop
pop
dec
int
dec
in
cli
dec
int3
sub
and
stos
hlt
xchg
popa
ja
and
outs
hlt
fld
les
jle
sub
jecxz
js
push
adc
jg
sbb
ror
loop
push
jecxz
hlt
pop
dec
adc
iret
xor
sub
add
xchg
(bad)
(bad)
cmp
xor
sbb
lds
pop
dec
shr
and
jl
lds
sub
jl
popf
int3
aas
fst
popa
loopne
sub
fwait
xchg
push
inc
aaa
bound
(bad)
pushf
or
cmp
and
movs
mov
and
xchg
cmc
pop
aaa
pop
sbb
mov
xchg
fmul
mov
leave
std
not
addr16
dec
inc
mov
hlt
fst
nop
popf
sbb
in
in
and
imul
push
imul
leave
out
shr
jp
dec
out
bound
dec
out
loope
div
outs
adc
xor
lock
mov
mov
inc
shl
mov
mov
cmps
in
clc
out
ret
push
jecxz
inc
je
adc
xlat
sahf
out
test
push
imul
cli
dec
ror
call
loop
jp
addr16
movs
sbb
cmp
sahf
jae
add
sti
cmp
push
pop
inc
dec
add
lahf
push
cdq
xor
jb
(bad)
jmp
add
arpl
xor
(bad)
jmp
out
xchg
dec
adc
call
addr16
cmp
in
ins
jp
stc
cmp
pop
jmp
push
in
popf
pop
push
pop
pop
les
pop
push
inc
push
shl
or
add
frstor
pop
in
sub
mov
fwait
pusha
sahf
dec
fisubr
aaa
repnz
repz
int3
xor
xchg
add
xchg
loopne
jl
jmp
dec
push
mov
imul
adc
cdq
mov
aaa
shr
lds
mov
pop
mov
inc
jge
mov
and
out
movs
ins
packuswb
jl
enter
inc
mov
dec
mov
cdq
cld
pinsrw
enter
in
sti
enter
in
xor
sti
mov
sub
pop
or
pop
aad
ins
push
and
mov
mov
ds
jle
inc
or
xchg
scas
aas
daa
dec
jns
xor
int3
xchg
fdivr
add
gs
push
dec
aad
jmp
add
mov
rol
cs
push
movs
out
into
repnz
scas
add
loopne
popa
push
iret
cs
mov
cmp
ficom
xor
push
xor
scas
or
cmp
dec
add
and
mov
sub
scas
mov
das
jecxz
cmp
push
adc
aaa
push
push
gs
or
int3
call
or
int
pop
pop
xchg
bound
jmp
lock
stos
pop
xor
arpl
cmps
mov
xchg
push
in
jne
rcr
out
mov
xchg
xor
ffree
pusha
cmps
xor
rol
cmp
mov
mov
push
imul
or
rol
cmp
and
xchg
jecxz
int3
adc
test
or
cmp
mov
adc
push
loope
push
inc
arpl
sbb
pushf
pushf
mov
arpl
fwait
pop
inc
arpl
ja
and
enter
fld
repz
add
out
retf
adc
sti
xchg
jp
hlt
jg
push
(bad)
sub
sahf
dec
mov
call
dec
cmp
pusha
push
sub
adc
and
push
popf
popa
adc
cwde
(bad)
hlt
ret
js
(bad)
push
sbb
xchg
lahf
jb
mov
adc
arpl
mov
fs
loope
jg
dec
pop
xor
xor
mov
fld
and
hlt
imul
std
out
je
pop
jmp
cwde
lea
mov
movs
mov
inc
push
test
or
je
int
xor
out
sub
mov
inc
sti
and
xchg
add
push
lods
mov
or
in
push
xor
popf
ret
cmp
dec
mov
mov
dec
popf
les
pop
adc
or
sbb
pop
iret
jmp
ficom
bound
sbb
ficom
popa
ins
arpl
mov
clc
aad
xchg
ret
xor
and
mov
add
mov
dec
ret
push
cwde
inc
(bad)
sub
dec
xor
retf
mov
xchg
stc
cmp
call
mov
lods
dec
add
dec
push
push
jbe
mov
cld
ss
test
inc
pop
cdq
jbe
das
(bad)
aad
mov
add
jmp
xor
mov
inc
jae
jp
jmp
mov
and
leave
mov
or
xor
adc
push
cld
or
or
loop
jmp
arpl
mov
fst
outs
pop
sar
sub
fcmovbe
idiv
in
or
cmp
shr
mov
add
xlat
out
xor
or
cmp
inc
dec
mov
xchg
sahf
jbe
scas
xchg
jbe
call
mov
mov
dec
(bad)
cli
inc
aad
aad
ret
jmp
xchg
push
xor
pushf
popf
pop
mov
and
push
icebp
jbe
jmp
fld
sbb
sbb
cmps
out
outs
jmp
mov
enter
xor
std
jecxz
cmps
dec
inc
mov
xchg
int
jecxz
xor
and
sbb
jb
dec
movs
mov
push
loop
aas
shl
repz
sub
repnz
scas
mov
mov
test
out
xor
mov
xlat
xchg
mov
mov
add
cmp
sbb
lods
sub
sbb
jge
mov
nop
xchg
mov
pop
aaa
push
pop
jmp
pop
mov
in
xor
mov
(bad)
mov
push
pop
sbb
fbld
sub
pop
sub
sub
mov
xchg
ja
push
pop
and
dec
(bad)
rcr
cmps
push
jo
xchg
cmp
jnp
xchg
mov
cs
and
nop
das
mov
sbb
test
mov
test
add
mov
add
les
push
dec
jb
cmp
in
cmp
sub
sub
push
sub
xchg
bswap
sub
in
fild
push
add
repnz
ret
cwde
popf
jns
pop
clc
mov
inc
mov
push
pop
mov
and
rcl
movaps
std
dec
fimul
jmp
cs
jne
ja
inc
pushf
xor
in
add
add
xor
out
xor
adc
(bad)
into
mov
fnstsw
(bad)
arpl
mov
and
cmp
inc
mov
data16
adc
popf
not
sbb
popa
jno
loopne
fild
fmul
mov
inc
lock
cmps
(bad)
cli
shl
arpl
xchg
or
retf
push
inc
mov
mov
mov
mov
test
sar
bound
fimul
or
je
in
or
pop
fcom
arpl
or
add
hlt
inc
fwait
adc
pusha
inc
cmp
(bad)
fst
mov
imul
jmp
mov
mov
adc
sub
(bad)
(bad)
mov
or
and
out
in
sub
aaa
sub
push
leave
movs
fnsave
push
sub
jl
jmp
movs
cmp
xor
bound
and
mov
cmp
gs
and
cmp
or
imul
cmp
(bad)
sti
jle
pusha
dec
int
nop
push
bound
jbe
sahf
and
pop
mov
fisttp
pop
pop
ss
push
test
mov
dec
sar
ds
sbb
enter
add
scas
and
clc
std
int
mov
in
std
mov
pusha
add
loop
and
mov
mov
pop
add
adc
sbb
call
adc
sbb
fadd
add
xor
jo
adc
ja
fnstenv
adc
adc
cmps
call
cmps
add
nop
pop
sub
ror
test
outs
xor
jmp
mov
xchg
test
mov
lahf
jp
inc
and
pop
dec
lods
aad
inc
jo
xchg
push
pop
stc
aad
and
(bad)
div
xor
and
push
lods
lods
loope
call
mov
mov
dec
inc
daa
dec
stos
cli
cmc
pop
retf
clc
mov
clc
cmps
pop
sbb
jb
mov
ficom
out
inc
in
sbb
ret
stos
mov
scas
js
mov
int
sbb
addr16
out
mov
aad
fidivr
lock
and
sahf
and
push
les
cdq
in
and
mov
cli
fmul
xchg
mov
stc
ja
jecxz
dec
pop
cmp
pop
imul
inc
inc
out
jp
mov
xchg
add
cmp
fcmovne
leave
cmp
bnd
sbb
jne
loope
jo
add
add
or
sahf
lock
mov
mov
mov
inc
(bad)
xchg
cmp
and
pop
stos
inc
scas
fadd
retf
jmp
push
fldenv
cmps
test
add
xchg
or
xor
sub
mov
dec
aas
mov
gs
loopne
fsubr
shl
xchg
cs
xlat
mov
in
cmps
std
mov
and
mov
sbb
push
dec
mov
mov
xchg
add
push
sub
pop
shl
sar
push
mov
or
out
sbb
dec
dec
push
xchg
f2xm1
or
adc
test
mov
pop
in
or
in
lods
or
jb
jl
call
in
call
adc
std
inc
pop
mov
jmp
pop
adc
das
jns
sahf
ins
push
les
xchg
sbb
movs
jg
mov
sub
enter
pop
sti
add
pop
arpl
sbb
clc
push
iret
(bad)
(bad)
xor
mov
xor
dec
xor
adc
jle
jbe
jae
lds
imul
xchg
test
push
mov
sbb
repnz
xor
loop
(bad)
or
and
adc
adc
movups
push
pushf
or
jle
xor
loopne
pop
mov
retf
dec
or
add
mov
inc
ret
sahf
mov
pop
mov
nop
ret
adc
test
jb
cmp
mov
lock
fs
dec
or
push
scas
imul
pop
test
arpl
fstp
(bad)
push
and
out
or
jnp
push
sub
(bad)
mov
add
popf
es
inc
or
cmp
paddd
push
mov
(bad)
fdivp
mov
push
in
xor
scas
mov
jae
push
outs
ins
jl
mov
mov
adc
pop
push
stc
loopne
push
frstor
mov
pop
push
repz
(bad)
hlt
jb
pushf
add
stc
loopne
jle
aad
push
mov
dec
or
xchg
jns
cs
push
pop
pop
pop
jno
hlt
jmp
jmp
xchg
gs
or
sbb
pop
in
mov
mov
mov
sbb
push
outs
mov
xor
fs
add
jbe
add
iret
daa
push
and
xlat
out
xchg
fist
js
mov
in
jp
dec
push
sub
nop
sbb
outs
out
nop
xlat
loopne
pop
push
ins
stos
aaa
push
xchg
cmc
in
cmp
cmp
shl
mov
pop
loop
sbb
out
(bad)
jne
jo
pop
push
ret
cld
pop
cld
test
push
cmp
rol
scas
loop
or
jno
jg
and
sub
and
pop
sti
sar
push
adc
mov
jmp
cmp
adc
lock
push
retf
bsf
cmp
in
mov
out
in
sbb
jl
mov
jae
push
ja
rcl
xchg
inc
(bad)
outs
or
sbb
mov
pop
call
jp
cmp
ret
pop
pop
push
mov
int3
inc
and
cs
in
jno
in
ins
dec
fbstp
mov
push
pop
or
retf
cli
add
data16
(bad)
or
or
push
ins
loopne
test
xchg
mov
push
xor
adc
lahf
sub
(bad)
sub
mov
push
inc
aad
sub
or
popa
mov
jo
cld
cmc
rol
in
mul
ficomp
shr
fnstsw
shr
test
dec
test
or
fwait
mov
test
loopne
mov
pop
rcr
mov
dec
pop
nop
pop
into
fdiv
adc
dec
cmp
mov
or
cwde
dec
jnp
out
push
pop
loopne
stc
mov
push
ret
pop
push
add
jns
gs
fcomip
stos
adc
sbb
fisub
sub
mov
xchg
mov
dec
cmp
push
adc
test
and
and
cld
cmps
pop
and
ror
jmp
dec
cmp
xor
dec
enter
and
movs
cli
cmp
in
pop
xchg
in
or
pushf
pusha
pop
mov
adc
mov
xchg
mov
push
cmp
ja
sbb
lock
push
lods
push
rol
mov
outs
pop
or
out
ss
add
inc
popf
push
shl
aaa
jmp
jne
add
xchg
aaa
xor
es
and
sbb
inc
(bad)
rcl
cli
mov
sbb
jnp
sti
mov
cmc
xor
pop
mov
xchg
add
add
clc
nop
sub
popa
neg
add
loop
retf
adc
push
movs
loopne
(bad)
xlat
ins
or
push
mov
and
and
les
clc
arpl
jmp
mov
pop
inc
mov
pop
pop
push
mov
imul
inc
xchg
das
(bad)
xor
clc
jp
test
es
mov
inc
pop
fdivr
call
adc
retf
xor
push
push
push
imul
mov
jne
shr
popf
or
jg
cmp
jae
in
push
pop
in
icebp
leave
push
mov
mov
xor
xchg
rcl
ret
sbb
ret
xchg
pushf
jmp
cdq
jns
push
or
adc
bndldx
inc
in
aam
lock
add
jecxz
outs
sbb
xchg
mov
adc
(bad)
fdivr
adc
cmp
(bad)
mov
sub
sete
(bad)
retf
fs
push
mov
loopne
or
push
add
jno
dec
sub
inc
scas
jmp
fidivr
inc
pop
test
dec
sub
ret
sbb
inc
clc
daa
jno
aaa
daa
mul
adc
ds
push
xchg
ret
push
push
fcomp
push
mov
mov
jle
sbb
lea
movs
or
iret
not
cmp
or
cmp
push
dec
fmul
(bad)
push
adc
retf
push
call
xchg
sub
shl
in
mov
jne
adc
call
js
inc
jmp
mov
mov
sbb
rcr
adc
outs
aam
fcom
cmps
test
lock
mov
jae
adc
jnp
mov
cmp
aad
loop
ja
shl
mov
leave
mov
leave
stos
lods
and
mov
xchg
sub
pop
pop
mov
adc
stc
xor
popf
movs
cmp
pop
pop
jb
mov
ss
pop
and
xchg
xor
mov
jle
or
cdq
jmp
cmp
sub
out
data16
or
addr16
sub
add
push
out
shl
xchg
mov
sbb
xchg
add
(bad)
or
cmc
ret
call
lea
xchg
ret
mov
xlat
std
les
mov
adc
push
daa
xchg
push
mov
sbb
sar
jmp
loop
je
dec
sbb
push
arpl
and
mov
xchg
sbb
mov
cli
lods
not
jecxz
jmp
and
ror
and
add
aad
lods
or
add
mov
es
pop
mov
sahf
adc
nop
sti
inc
das
out
and
mov
cdq
jnp
in
icebp
out
lods
movs
dec
sbb
push
fldenv
pop
sti
jecxz
add
lahf
(bad)
stc
into
sub
xlat
xchg
push
mov
mov
pop
ja
sbb
je
add
aad
and
mov
daa
sbb
mov
test
and
aas
jo
cdq
mov
pushf
adc
mov
arpl
stc
das
enter
jle
jmp
push
cwde
adc
dec
fistp
adc
pushf
lea
test
clc
bound
cdq
or
call
push
dec
dec
add
popa
jmp
ins
retf
ja
adc
leave
jl
pop
mov
pop
push
sar
mov
(bad)
cmp
and
imul
sbb
ins
or
mul
lds
neg
and
xor
cmp
in
push
jo
mov
shr
mov
xor
dec
or
enter
pop
test
in
pop
jb
fisttp
sub
lods
ds
int3
add
icebp
xor
push
loopne
dec
cmp
mov
jo
call
xor
push
int3
into
jl
dec
mov
ss
adc
jp
push
ss
sbb
cmc
out
jp
stos
addr16
sbb
adc
xchg
call
push
arpl
pop
addr16
jo
nop
fs
add
and
aas
(bad)
fisubr
gs
and
fild
out
or
mov
push
cli
retf
pop
lock
repz
jne
aas
es
sbb
sti
and
pop
mov
jmp
push
adc
in
or
cmp
xor
pop
xchg
cmp
jmp
lods
sti
inc
stc
into
mov
ja
xor
fisttp
mov
mov
(bad)
cmp
lahf
or
mov
sbb
dec
dec
scas
push
int
inc
pop
push
push
add
cmp
or
adc
out
jo
push
adc
pop
and
test
add
scas
out
mov
add
and
test
loopne
ds
rol
cmp
mov
leave
push
and
and
push
mov
lds
test
add
mov
fdiv
jno
mov
out
push
shl
das
leave
daa
adc
or
cmp
xchg
dec
adc
and
(bad)
mov
jnp
adc
(bad)
and
mov
test
mov
xchg
mov
jp
push
rol
sbb
popa
jo
or
les
retf
cmp
add
enter
push
(bad)
mov
mov
imul
gs
test
and
jl
mov
call
ret
lods
push
or
sbb
call
rol
inc
push
hlt
fldcw
mov
ds
add
jg
dec
and
jnp
js
scas
sti
sub
mov
mov
xor
out
cmp
push
mov
(bad)
cmp
add
jbe
test
(bad)
mov
cdq
out
addr16
mov
dec
and
mov
push
push
fwait
bound
(bad)
pop
aam
pop
or
jge
and
mov
popa
outs
dec
jg
inc
ins
jnp
pop
inc
sbb
adc
fnstenv
push
ret
push
in
fisttp
sar
imul
loopne
cmp
cli
into
jecxz
js
rcr
cwde
in
mov
add
mov
inc
imul
fidiv
test
add
das
pushf
inc
mov
pop
push
std
cmp
jmp
and
psubb
iret
lods
call
and
sbb
lock
push
fist
daa
add
jle
test
retf
inc
mov
pusha
cmp
aas
push
fwait
add
(bad)
mov
lods
xor
adc
xor
adc
fnsave
adc
add
mov
mov
or
clc
iret
adc
es
mov
add
mov
dec
and
adc
mov
push
mov
lods
or
fnclex
out
movs
data16
cdq
int3
jmp
dec
bound
inc
lods
cmp
outs
int3
xchg
pop
jnp
test
fidivr
jnp
inc
jbe
push
imul
xchg
mov
rol
mov
mov
mov
sub
xchg
test
jmp
pop
add
mov
xchg
pop
sub
mov
retf
pop
das
imul
imul
fisttp
xchg
pop
dec
jns
aam
lds
(bad)
pop
mov
or
pushf
sbb
sub
pop
push
fidivr
xchg
popa
mov
mov
sbb
aam
mov
retf
push
test
stc
jo
adc
pop
outs
push
sub
jl
hlt
(bad)
jns
sub
sub
retf
xchg
cmps
sbb
rol
out
fst
jnp
scas
popa
push
pushf
xor
int
jno
inc
xchg
jp
mov
imul
in
pop
pop
ins
test
xchg
in
ret
call
mov
inc
xchg
pop
(bad)
iret
cmps
add
xchg
jmp
jne
sbb
sbb
neg
dec
mov
lahf
leave
mov
mov
pop
ds
sub
dec
aam
push
pushf
iret
aas
sti
pop
add
xchg
xchg
fmulp
push
out
aam
shr
das
sahf
push
sti
adc
mov
adc
pushf
pop
shl
jp
es
sbb
cmps
mov
adc
test
jle
or
mov
popf
add
ins
inc
rcr
and
inc
dec
inc
jo
hlt
push
outs
dec
rol
scas
dec
sub
mov
mov
shl
pop
int3
pushf
add
(bad)
ud0
jecxz
pop
or
fisttp
ret
out
pop
jb
mov
cmc
mov
push
ja
fs
imul
mov
ins
jmp
and
or
aaa
dec
gs
rcl
push
mov
aad
lds
sub
iret
out
mov
push
and
add
mov
mov
(bad)
or
mov
sbb
add
in
ds
stc
aad
sub
cld
xchg
push
sbb
pop
inc
mov
add
test
or
sbb
mov
pop
(bad)
dec
lods
and
ins
test
bnd
and
or
fcmovne
loopne
cmc
mov
fstp
jae
out
adc
js
inc
fnsave
and
push
xlat
jnp
mov
cmp
ins
dec
div
mov
rol
aad
pop
enter
leave
jne
mov
jo
out
and
ret
xor
inc
fdiv
lods
inc
adc
add
push
xchg
push
repz
jmp
ret
cld
adc
out
scas
jg
cmp
call
enter
call
scas
test
aad
ins
xor
cmp
inc
adc
stc
bnd
sub
push
mov
add
sub
js
(bad)
push
ficomp
jge
jecxz
leave
mov
shl
imul
lods
aas
pusha
retf
ja
jg
call
stos
adc
or
cmps
xor
jo
pop
add
mov
mov
les
aas
sahf
or
mov
push
and
imul
jl
pushf
mov
loope
dec
std
jne
lahf
sub
outs
(bad)
mov
sbb
(bad)
hlt
xor
adc
cmp
cdq
sbb
mov
push
xchg
mov
sbb
push
(bad)
les
test
aas
sbb
inc
vmovaps
mov
or
iret
and
sbb
out
fist
xchg
stos
fdiv
jae
shr
cli
and
pop
or
jb
rcl
loop
jnp
sbb
imul
(bad)
adc
mov
loop
sub
and
or
jg
xor
mov
and
jo
enter
fadd
call
icebp
xor
push
mov
add
sub
ins
add
mov
xchg
popf
test
scas
mov
mov
mov
cld
pop
shl
std
jb
sub
lods
cdq
dec
outs
pop
mov
mov
push
or
ins
dec
mov
push
(bad)
jle
xor
jne
inc
mov
xor
pop
lods
lea
xchg
or
pop
stc
sub
mov
lods
ds
add
sbb
loope
inc
dec
xor
xor
call
jmp
mov
pop
adc
mov
mov
mov
mov
out
mov
mov
mov
mov
mov
xlat
sub
jbe
loop
mov
fbstp
jecxz
inc
fcmovnb
jmp
cmp
in
mov
out
xor
cmp
into
mov
inc
adc
and
(bad)
scas
xor
sub
aam
pop
sub
push
ins
mov
mov
adc
test
jns
mov
dec
inc
mov
leave
adc
mov
stos
mov
or
fst
imul
pop
mov
call
js
retf
push
push
int
cmp
cmp
mov
push
cmc
stos
outs
add
mov
ja
bound
movs
cli
mov
xchg
ins
mov
movs
into
mov
ins
xlat
add
xchg
das
arpl
xor
inc
and
push
adc
jae
ins
adc
data16
mov
cmp
and
sub
cmp
jbe
xor
addr16
mov
pusha
call
outs
pushf
mov
mov
pop
in
jecxz
jl
jp
inc
loop
inc
pop
aad
(bad)
push
dec
inc
pmovmskb
push
push
add
data16
test
sbb
call
cli
test
push
add
or
mov
cli
pop
lods
ffree
push
sti
pop
push
les
dec
xor
not
ror
outs
ja
fs
push
sbb
adc
call
(bad)
mov
ds
cli
out
fdivr
inc
loope
mov
xchg
or
xchg
loopne
pop
mov
js
sbb
mov
test
sahf
shl
iret
push
sbb
jmp
pusha
jmp
movs
mov
in
icebp
jae
add
mov
inc
or
aad
repz
retf
inc
xchg
imul
add
sub
ficomp
jl
mov
sbb
mov
fild
or
jecxz
inc
sub
movs
mov
ror
dec
rcr
in
dec
jne
cmc
xor
inc
scas
pop
scas
adc
sub
xchg
hlt
sbb
lods
cmp
jb
ja
loope
dec
outs
cmp
inc
pop
dec
add
mov
xor
xor
ins
xor
(bad)
mov
jmp
cmps
or
in
adc
movs
into
or
stos
pop
bound
out
add
dec
xchg
fwait
jge
ret
xchg
nop
inc
cmp
xchg
cld
or
push
and
int3
sbb
jg
inc
out
jne
fwait
or
push
mov
sub
pop
sub
pop
xchg
mov
xor
mov
mov
adc
cld
scas
imul
ret
push
shl
or
scas
sbb
daa
cmc
jge
push
jmp
xchg
mov
mov
mov
mov
fisub
cmp
or
sbb
jno
push
les
cld
lock
dec
mov
sbb
(bad)
pop
pop
inc
xor
jb
fisttp
add
nop
cmp
cmc
retf
add
adc
push
or
cli
in
push
arpl
scas
shr
sbb
jmp
dec
adc
dec
dec
jmp
nop
dec
pushf
jae
mov
add
(bad)
xchg
enter
test
xchg
icebp
mov
adc
push
aam
aad
fldenv
inc
std
push
xor
pop
in
mov
idiv
sub
push
dec
sub
and
scas
cmps
sbb
add
mov
sub
mov
arpl
daa
mov
xor
ins
lea
(bad)
mul
mov
jno
add
xor
xchg
adc
ss
push
cmp
mov
push
cli
outs
jno
out
mov
bound
push
push
jns
xor
loopne
sub
aam
xor
mov
int3
xchg
clc
dec
xor
sbb
lahf
ret
or
ja
mov
movs
cmc
test
test
int
mov
(bad)
sbb
or
in
stos
sub
sbb
mov
mov
fidivr
int
outs
adc
push
push
inc
adc
sbb
jb
mov
or
mov
xchg
and
jae
lds
ins
ficom
push
cmps
sbb
call
dec
pop
lods
fdivr
sub
or
dec
ss
fistp
sub
sbb
in
gs
mov
(bad)
adc
inc
loope
cdq
sahf
mov
mov
shl
jmp
sub
ret
hlt
jle
mov
ret
clc
popf
in
dec
popa
cmp
fistp
int
test
cmp
out
fst
xchg
inc
dec
sub
pusha
stc
cmp
and
and
(bad)
in
mov
push
mov
push
out
int
fcmovne
add
xchg
sbb
in
and
xchg
int3
xor
shr
xchg
cmp
or
mov
sbb
xlat
fs
cmps
mov
mov
xchg
mov
push
loope
lds
push
iret
add
sub
and
inc
cs
sbb
das
mov
scas
cmp
addr16
adc
inc
jge
add
push
cs
inc
sbb
test
sbb
jbe
lock
inc
xor
outs
les
fcom
xchg
das
sub
mov
sti
cmps
jge
ds
jb
iret
jecxz
out
retf
in
mov
pop
push
movs
push
icebp
fst
inc
aam
rcl
(bad)
mov
or
sti
(bad)
cli
repz
cli
in
adc
mov
inc
pop
mov
xor
out
jbe
mov
adc
push
fwait
jl
dec
rol
sub
pop
add
mov
popa
or
cmps
jl
mov
ins
sbb
sbb
mov
repnz
mov
arpl
push
inc
gs
sbb
jp
sbb
push
bound
imul
add
rol
jmp
stos
mov
imul
fs
stc
cmps
mov
iret
cmp
pop
iret
push
dec
arpl
mov
nop
push
jb
into
xchg
jp
ror
sub
outs
and
js
int3
mov
outs
sub
popa
out
aad
and
loope
daa
jle
xor
cmp
out
iret
jae
mov
and
jl
mov
mov
add
sub
xchg
nop
ds
test
es
mov
add
cli
cmp
mov
fs
jno
pop
(bad)
(bad)
pop
push
push
pop
push
cmp
mov
pop
mov
add
push
call
cwde
inc
fdivr
jecxz
cmp
inc
cmp
nop
rol
mov
sbb
dec
mov
repnz
dec
outs
neg
and
shr
sbb
adc
push
and
mov
int
dec
stos
sbb
jae
or
lods
jne
hlt
hlt
pop
loope
je
jg
pusha
pop
int
sub
xor
pop
aam
jmp
add
jge
sahf
loopne
fs
xor
jne
movs
shl
mov
lea
imul
in
pushf
iret
into
jecxz
mov
out
inc
cmp
xchg
sbb
or
(bad)
push
adc
das
sahf
daa
push
and
ja
xchg
cdq
movs
sahf
sti
cdq
cmps
or
mov
jo
ud1
mov
push
aad
inc
sbb
or
sub
and
fstp
scas
cmc
fsubr
mov
icebp
sbb
int
outs
dec
sub
mov
stos
stc
xchg
xchg
repz
into
sti
hlt
pop
add
ds
add
out
or
outs
push
sti
mov
cwde
sub
jg
mov
mov
into
scas
sbb
mov
in
inc
or
aaa
push
sbb
nop
cmc
test
in
mov
loopne
(bad)
leave
dec
gs
es
pop
push
int3
aad
sbb
mov
iret
(bad)
fnstcw
out
jg
scas
fs
xor
cmp
lea
xchg
ins
xchg
mov
in
sub
fld
rcr
sbb
add
xchg
jl
push
icebp
mov
xchg
and
stos
adc
pop
xchg
(bad)
scas
outs
xlat
sbb
fcmovne
mov
in
and
mov
outs
in
cmp
test
or
addr16
ficom
shl
sbb
imul
cld
jo
and
sub
inc
mov
mov
aaa
mov
aaa
mov
in
pop
adc
dec
and
add
ret
and
gs
adc
in
adc
mov
into
jecxz
mov
shr
add
ins
adc
push
mov
mov
xchg
add
push
push
retf
jge
and
cmp
mov
pop
adc
mov
dec
or
sbb
jo
mov
cli
xor
imul
xor
jo
icebp
sar
call
imul
and
out
sbb
imul
outs
mov
dec
mul
(bad)
cmp
push
pop
(bad)
xlat
out
mov
mov
add
xor
mov
jge
adc
push
mul
outs
aad
into
adc
mov
push
cmps
fistp
ret
mov
sbb
test
mov
(bad)
adc
jecxz
jo
out
mov
shr
cwde
sbb
int3
(bad)
or
push
add
test
stc
dec
add
fiadd
icebp
loopne
xor
adc
push
ficomp
mov
and
mov
dec
cmp
in
or
enter
popa
sti
xor
in
(bad)
push
mov
jp
push
and
jmp
(bad)
xchg
loope
adc
int
adc
or
sub
dec
dec
sbb
push
mov
sub
shl
bound
bound
push
test
(bad)
div
ss
test
adc
or
jne
cld
mov
or
xor
jg
jbe
imul
xchg
cmc
jno
add
aad
xor
cdq
sbb
cmova
pop
rcr
jmp
xor
pop
pushf
xchg
sub
xor
pop
in
stos
fnstcw
dec
(bad)
call
(bad)
inc
or
jb
push
cmp
outs
call
fldln2
pop
adc
mov
push
cmp
and
scas
mov
dec
out
cmp
ficom
inc
and
jg
dec
outs
fs
push
adc
and
jno
cmp
and
aad
iret
mov
jmp
add
push
sbb
jmp
pushf
dec
push
xor
mov
xor
enter
and
ficomp
fadd
je
sub
fs
or
xchg
fsubr
imul
xchg
mov
dec
mov
sbb
neg
jns
add
fidivr
repz
lods
xchg
cld
shr
mov
addr16
sar
lahf
add
mov
frstorw
ror
cs
add
inc
sbb
repz
push
addr16
hlt
mov
jae
push
pop
jmp
mov
xor
xchg
sahf
push
dec
std
cmp
repnz
sahf
repnz
div
mov
shr
jmp
lds
mov
xlat
lods
lea
es
pop
dec
add
dec
adc
mov
ja
inc
pop
stc
fwait
ins
and
int
pop
sub
xor
stos
test
js
dec
xchg
xchg
fiadd
push
push
xchg
pop
add
popf
jnp
adc
add
scas
call
push
xor
shr
pop
mov
daa
pop
loope
cmp
call
es
movs
or
xchg
mov
inc
je
adc
popf
mov
test
mov
jae
(bad)
jmp
in
test
xor
xor
pusha
hlt
sbb
fcom
fdiv
imul
mov
adc
mov
fdiv
inc
xchg
pop
xchg
sbb
aaa
and
mov
ror
(bad)
repnz
mov
inc
movs
pop
inc
or
into
push
jmp
xor
test
pusha
dec
lock
jno
(bad)
push
rcr
call
int3
mov
mov
xchg
retf
into
push
jae
div
js
mov
in
and
sub
xchg
test
sar
cld
movs
cli
and
test
pmuludq
test
jge
push
sbb
jae
fadd
xor
jns
ds
sahf
inc
call
mov
mov
adc
mov
add
mov
jmp
xchg
adc
rol
push
adc
sub
cld
adc
xlat
add
bnd
lock
sahf
out
mov
xor
cmc
dec
stos
into
cmp
call
mov
sbb
in
xor
sbb
or
sti
fadd
add
sbb
mov
push
sub
cdq
in
fwait
xor
push
lds
jge
scas
cmp
int3
jge
jl
and
jns
int
inc
pop
(bad)
push
inc
enter
mov
dec
cwde
mov
test
in
stos
sbb
pop
ss
jbe
adc
ins
mov
push
jmp
retf
xchg
ins
dec
loopne
(bad)
xchg
pop
xchg
out
push
add
cmp
and
sti
mov
mov
test
test
dec
xor
dec
adc
cs
hlt
sbb
pop
dec
cld
adc
adc
or
fadd
cmp
popa
jae
ins
gs
sub
in
xchg
retf
pop
fucomp
dec
mov
ins
arpl
mov
xor
sub
lods
add
add
leave
fs
and
and
sbb
aaa
and
jecxz
add
gs
das
xor
(bad)
scas
ins
mov
pop
or
inc
add
mov
sahf
add
mov
xor
paddsb
push
and
mov
xchg
lahf
sahf
pop
scas
daa
cwde
mov
sar
sub
stos
imul
or
or
xor
sbb
into
into
imul
test
stc
lds
imul
in
(bad)
push
xor
scas
pushf
aaa
sbb
retf
fcom
mov
loope
or
dec
inc
adc
mov
call
idiv
je
js
pop
sbb
fiadd
stc
addr16
xchg
frstor
cli
and
adc
dec
and
fnstsw
inc
cmp
lods
xchg
dec
ja
mov
ret
xchg
stos
jmp
adc
fcmovb
lock
scas
or
jb
and
lds
push
cwde
ret
pop
inc
jbe
or
adc
inc
sbb
int3
cld
mov
mov
jno
mov
push
out
sbb
sub
or
jae
in
je
ss
mov
call
sub
dec
dec
mov
jne
and
jne
lock
mov
stc
loopne
in
ss
cmc
cmps
mov
mov
(bad)
(bad)
movs
movs
sbb
and
inc
cmc
je
jbe
dec
lods
mov
inc
push
jae
mov
mov
shl
fs
stos
and
out
jns
mov
mov
lds
mov
retf
jmp
addr16
mov
and
out
rcl
jecxz
add
xchg
fwait
movs
jp
lds
call
sub
aas
cwde
inc
push
pop
loop
mov
jmp
imul
stos
imul
inc
jecxz
sbb
xchg
ins
in
xchg
movs
jnp
cld
(bad)
outs
arpl
imul
dec
sbb
adc
mov
push
popa
mov
adc
stos
mov
mov
fisttp
repz
fdiv
mov
nop
mov
aas
or
sbb
mov
sbb
test
dec
pop
in
cmc
(bad)
lea
pop
std
jmp
fs
rcr
push
shr
add
not
mov
dec
pop
fucomp
cwde
lock
jmp
je
mov
aad
xor
pusha
or
sbb
mov
adc
jae
in
int3
push
or
push
jns
je
mov
push
arpl
push
sar
fsubr
mov
add
adc
dec
(bad)
mov
fist
jge
in
data16
cmps
xor
and
std
push
stos
bound
cs
je
call
mov
cmps
lea
xchg
xor
cmp
mov
mov
aas
and
out
in
cld
jp
(bad)
push
pusha
retf
lea
and
pop
jbe
fs
movs
pop
cmp
inc
fidivr
mov
es
cld
cmps
or
xor
(bad)
adc
inc
(bad)
mov
sbb
js
movs
sub
rol
push
frstor
jo
dec
mov
adc
fwait
mov
mov
inc
test
cmp
xchg
pop
addr16
mov
dec
jne
sub
into
mov
out
lods
jecxz
jo
jb
sti
push
ins
and
adc
dec
inc
or
pop
pop
sbb
(bad)
jmp
scas
test
push
push
arpl
cmp
mov
pop
mov
mov
dec
(bad)
mov
mov
mov
(bad)
push
mov
ins
(bad)
rcr
mov
xchg
fidivr
jb
and
mov
or
mov
js
cs
pop
pop
sub
mov
push
mov
mov
jo
sbb
adc
stos
jne
jo
lods
push
push
test
mov
fst
in
add
mov
push
in
js
fs
push
stc
outs
movs
shr
add
call
int3
push
and
rcr
adc
and
and
test
jno
lea
lods
mov
jae
dec
sub
outs
call
mov
and
fcmovnu
cmps
aad
xchg
repnz
call
movs
(bad)
push
pop
mov
push
cli
ins
jl
out
cld
inc
call
mov
js
test
lock
pop
lock
jg
(bad)
icebp
fsubr
add
mov
stc
into
pop
xchg
push
aaa
lds
ins
lock
fisttp
jg
push
cmp
jne
jne
std
(bad)
sbb
(bad)
jae
scas
gs
inc
lds
jns
cmp
adc
mov
sahf
je
je
shl
sub
add
pop
hlt
mov
mov
pop
mov
jle
mov
xchg
out
lahf
test
retf
adc
jle
aad
fild
mov
pop
dec
jns
movs
outs
dec
pop
inc
aad
std
(bad)
out
rcr
xchg
call
pusha
ret
or
xlat
(bad)
cli
int3
pop
pop
rcl
jp
fisttp
pop
scas
xchg
add
add
jmp
retf
dec
jp
sub
mov
repz
mov
xor
cmp
push
aas
std
jmp
stc
les
bswap
jle
shl
dec
popa
pop
push
sbb
jns
pop
push
cwde
mov
shl
(bad)
out
and
pop
mov
lods
pop
aad
test
outs
mov
add
pushf
addr16
(bad)
jne
dec
into
sub
mov
pop
push
pop
sub
ja
xchg
pop
sub
fnstcw
ins
data16
cmc
cmps
fstp
sbb
fsubrp
mov
sbb
cmp
fwait
jbe
stos
imul
aad
test
lahf
pop
and
stos
mov
add
cli
nop
mov
je
mov
or
dec
in
dec
inc
cmp
out
icebp
inc
push
fild
mov
lods
mov
dec
cwde
or
out
and
das
aas
clc
idiv
or
inc
xor
push
xor
div
fstp
push
hlt
xchg
mov
mov
cmp
js
add
jno
cmps
pop
nop
cmp
or
rcr
or
mov
into
xor
xchg
ret
pop
sahf
jns
xlat
dec
xlat
xor
cmc
xchg
jae
data16
loop
(bad)
inc
fisttp
cmps
adc
or
cld
push
adc
lock
jecxz
push
adc
lock
push
fidivr
sub
arpl
(bad)
daa
das
mov
jmp
jmp
out
xor
(bad)
ds
test
ss
push
out
ds
mov
add
dec
int3
mov
int3
je
push
popf
xchg
dec
shl
shr
dec
stos
out
loope
jmp
cdq
ins
imul
packsswb
mov
aam
sti
and
add
inc
dec
mov
adc
add
bnd
(bad)
std
cmps
jae
push
xor
sub
ds
add
fcmovu
pop
shr
mov
xor
dec
mov
test
fild
xor
lods
xor
jb
inc
das
arpl
icebp
das
pop
xor
enter
adc
mov
pop
std
scas
enter
fcomp
es
jp
fistp
jne
lods
dec
sahf
mov
lea
lahf
add
loope
pop
aam
dec
pop
dec
sar
cmps
pop
inc
jmp
outs
icebp
cwde
adc
call
push
push
dec
fist
mov
clc
data16
push
sub
jne
ins
fcmovnb
daa
jae
mov
mov
pop
pop
aaa
add
out
xchg
xor
push
mov
and
or
ins
mov
sbb
inc
repnz
mov
sti
lds
mov
mov
push
(bad)
cmp
mov
stos
push
outs
cwde
scas
retf
scas
sbb
adc
inc
fs
add
(bad)
dec
cmps
add
test
test
adc
and
bound
pushf
xchg
and
(bad)
cli
hlt
lods
xchg
jl
and
js
icebp
pop
in
fnsave
adc
xchg
(bad)
stc
loop
push
pop
jne
jmp
dec
sbb
sar
iret
scas
xor
pop
push
xor
adc
mov
or
mov
xchg
xor
ror
dec
movs
rcr
push
inc
adc
in
je
mov
rcr
push
data16
je
jne
and
sub
not
movs
dec
cmc
xchg
inc
or
mov
jp
or
mov
sub
fwait
sti
add
ss
test
jge
jmp
js
jg
stos
push
push
add
dec
or
int3
jecxz
and
das
inc
jp
in
jge
dec
or
push
inc
jns
push
loop
xor
mov
xor
xchg
fcom
add
cmp
mov
jno
lods
iret
xor
jle
xor
inc
dec
imul
mov
xchg
sub
dec
div
call
push
mov
xchg
je
je
pop
adc
or
(bad)
cli
fdivr
inc
or
gs
or
ret
or
std
out
ins
enter
cmp
sub
jg
ret
dec
cmc
ds
mov
xchg
inc
(bad)
ds
or
xchg
mov
icebp
in
inc
cmps
(bad)
cdq
adc
lods
stos
push
jne
mov
xor
ja
push
repz
das
push
fsubr
das
mov
mov
mov
in
fdiv
mov
rol
scas
rcl
frstor
push
jae
ds
jle
mov
xchg
aaa
and
clc
loop
(bad)
mov
test
push
adc
jmp
add
sbb
clc
cmc
pop
(bad)
loope
or
in
loope
std
pop
inc
test
pop
pop
push
ds
mov
leave
and
addr16
movs
mov
fst
aad
add
mov
outs
enter
clc
scas
test
ja
mov
fidivr
movs
call
cmc
jb
mul
stos
data16
add
out
scas
jno
mov
shr
and
pushf
pusha
mov
sub
test
mov
call
popf
lock
adc
jmp
std
dec
(bad)
mov
int3
daa
inc
cwde
or
fwait
call
mov
loop
and
dec
fisubr
adc
(bad)
mov
icebp
mov
inc
push
int
or
hlt
pop
ja
pop
push
jne
dec
push
fimul
and
sbb
call
xchg
pop
in
adc
push
aaa
hlt
sub
jno
aas
call
lea
inc
dec
push
std
aaa
cmp
in
fsub
adc
pop
mov
test
leave
icebp
inc
and
gs
xchg
mov
lahf
mov
push
push
push
and
mov
inc
in
cmps
xchg
push
dec
js
dec
jno
jecxz
(bad)
fimul
fwait
das
pop
retf
xor
je
mul
or
mov
jae
out
es
lahf
jmp
loop
xchg
fwait
mov
out
imul
xchg
cmp
lea
xchg
cmp
cli
nop
push
jae
(bad)
in
lods
mov
sbb
mov
lods
scas
pop
cmps
mov
xor
repnz
sub
aad
push
inc
adc
inc
out
dec
adc
mov
je
fadd
push
stos
pop
sbb
push
push
pop
xlat
retf
mov
ins
mov
stc
icebp
and
in
cmp
pop
int
add
fldenv
mov
dec
int
sbb
int
sahf
jns
(bad)
jae
and
fisttp
mov
jl
enter
fstp
stc
lods
into
push
mov
aam
mov
cmp
xchg
sbb
ins
push
ins
mov
pusha
and
ins
setl
dec
adc
movs
and
mov
mov
xor
in
mov
mov
and
jge
fmul
ret
retf
movs
mov
pop
and
not
pop
mov
jnp
xor
(bad)
cmp
sub
std
int3
mov
xchg
dec
push
ins
aam
call
xchg
pusha
(bad)
cmp
mov
lods
rcl
in
cdq
cmp
mov
(bad)
push
icebp
aad
mov
loopne
xchg
sar
or
(bad)
cmp
and
jbe
add
out
arpl
imul
loop
stos
(bad)
push
push
mov
push
das
xor
sub
or
ja
outs
shl
mov
xor
pop
jecxz
push
pop
mov
mov
push
adc
lods
ds
add
xor
xor
sbb
mov
clc
mov
fnstcw
sub
in
adc
adc
adc
(bad)
mov
fcmovne
lds
sub
adc
sub
push
and
mov
jecxz
add
mov
mov
pop
xchg
jge
xchg
mov
daa
fcomp
xchg
inc
mov
addr16
fld
sub
cmps
xor
cli
sub
test
lods
jo
jb
aad
sub
lea
stos
mov
mov
cmp
imul
pop
inc
rol
push
pop
outs
mov
sbb
rol
sub
loop
addps
dec
or
movs
jle
adc
or
or
call
xchg
arpl
lds
ret
movs
cmp
cli
stos
mov
outs
retf
data16
gs
and
adc
cmp
mov
out
scas
dec
fdivr
mov
adc
cmp
mov
adc
lds
pop
xchg
pop
scas
loop
push
cwde
(bad)
std
add
mov
sub
mov
sar
jl
push
cmp
scas
and
jnp
sbb
sbb
enter
push
fistp
jae
in
dec
out
inc
xor
push
cli
cmps
(bad)
das
mov
test
aaa
ficom
inc
scas
scas
cmp
jo
fs
call
lock
pop
or
dec
sbb
ret
movs
dec
jmp
mov
leave
cmp
xchg
fs
cmps
mov
mov
(bad)
shl
fild
pop
push
mov
add
push
mov
pop
loopne
sub
test
out
or
stc
rcr
(bad)
push
iret
movs
inc
sub
rol
push
in
sub
or
stos
jle
mov
inc
aaa
mov
jo
push
jmp
cmc
aas
data16
stos
hlt
adc
mov
hlt
jb
ficomp
loopne
pop
push
mov
xchg
fisttp
xchg
and
aaa
data16
nop
into
xor
aad
mov
inc
push
adc
sbb
outs
(bad)
loop
(bad)
ins
das
adc
and
out
(bad)
ins
in
and
jle
mov
jge
cmp
mov
shr
mov
sbb
outs
and
imul
scas
or
pusha
imul
pop
fstp
push
in
cli
sub
jl
sbb
loopne
movs
mov
hlt
mov
fwait
lods
out
(bad)
out
cmp
dec
adc
jne
aaa
scas
in
cdq
loopne
fistp
jbe
test
std
bound
inc
mov
gs
jne
xor
xchg
adc
sub
mov
mov
inc
cmps
fstp
cmp
fimul
mov
push
shl
mov
jge
xor
stos
push
mov
in
jns
xor
std
leave
sub
shr
fiadd
movs
ss
cwde
dec
(bad)
(bad)
xchg
sahf
add
mov
sub
cli
push
mov
ja
div
fistp
dec
push
inc
push
mov
add
jnp
enter
fst
cmp
pop
mov
or
jecxz
xchg
mov
iret
ret
mov
test
ja
iret
dec
or
add
pushf
movs
or
cmp
sbb
scas
inc
adc
and
shl
xchg
sbb
push
xor
pop
imul
add
add
mov
std
dec
aaa
clc
mov
nop
fs
in
(bad)
ins
pop
lds
shl
or
daa
fstp
js
push
fsub
inc
add
loope
iret
stc
in
sub
movs
stos
inc
sub
mov
lock
adc
(bad)
not
push
cmp
dec
sub
movs
shr
outs
xor
and
mov
push
(bad)
aas
sub
mov
aad
enter
test
pop
std
sub
ins
mov
or
enter
loop
add
mov
scas
cwde
js
sub
mov
xchg
fst
test
int
xchg
stc
jmp
loope
and
fs
cmp
lahf
push
es
icebp
sub
mov
inc
pop
mov
pop
pop
adc
sub
mov
cmp
push
clc
xchg
xor
push
mov
adc
sbb
xor
arpl
cmp
xchg
stc
pop
xor
out
push
sbb
mov
mov
dec
push
and
push
mov
shl
sub
push
lods
jo
adc
daa
and
or
add
xchg
(bad)
mov
pop
xchg
push
popa
iret
ret
xor
sti
xchg
int3
lods
(bad)
jg
push
and
clc
jns
dec
xchg
push
imul
add
pop
int
adc
mov
scas
cs
cmps
les
xor
jbe
ins
mov
clc
jnp
pop
push
mov
and
sbb
mov
dec
lods
adc
mov
sub
add
xchg
es
out
(bad)
clc
mov
or
mov
cmc
pop
or
xor
ficomp
shr
movs
pop
int
xchg
and
retf
inc
sub
cdq
mov
push
inc
test
test
cmp
aad
jp
adc
xchg
pop
sub
(bad)
mov
pop
and
ror
xchg
mov
dec
cwde
jb
mov
or
lock
add
jmp
push
out
pop
out
test
pop
xor
cdq
mov
cmp
inc
sbb
retf
popa
lahf
daa
xchg
inc
bound
sub
xchg
cld
not
out
inc
icebp
mov
or
and
(bad)
adc
push
sub
jne
sti
jecxz
cmps
outs
fst
add
and
lds
pop
push
push
cld
cmps
(bad)
jnp
out
out
xchg
ins
push
cmp
xchg
sbb
sub
mov
jnp
icebp
or
(bad)
int
xlat
fs
pop
cmp
push
dec
and
in
aam
loop
stos
xchg
(bad)
repnz
je
pushf
push
jl
xchg
lahf
lock
dec
push
xor
ret
pusha
pop
xchg
dec
pop
xor
push
mov
ins
cdq
es
pop
dec
or
mov
xchg
jbe
cmps
fsubr
je
fwait
loopne
xchg
outs
push
test
mov
jno
mov
test
pop
jne
(bad)
loope
adc
or
stos
inc
push
cmp
sbb
mov
push
sbb
imul
int3
jge
mov
push
dec
into
es
ja
nop
jge
sbb
or
sub
lds
adc
shl
inc
fwait
cmps
jmp
je
gs
push
repnz
lahf
call
mov
jmp
mov
repz
scas
xchg
sbb
or
inc
dec
mov
ins
xor
pop
pop
push
arpl
sub
and
or
in
cmp
mov
cmp
ret
xor
es
es
xchg
mov
outs
int
js
add
in
xchg
hlt
jge
dec
fcmovne
jge
mov
mov
xchg
in
shl
outs
sbb
in
test
xchg
mov
xor
mov
xchg
adc
mov
mov
mov
add
dec
sub
aaa
shr
sahf
sub
push
aas
add
imul
dec
arpl
cmp
lods
arpl
jg
jb
jg
push
mov
pop
mov
cli
push
jp
mov
stos
jmp
mov
or
mov
jp
and
into
sbb
inc
mov
fcomp
jbe
or
rcl
ret
sub
push
fld
xchg
dec
rol
mov
jb
inc
fisub
cmp
outs
into
jp
mov
idiv
push
lahf
jecxz
jbe
into
inc
mov
push
(bad)
adc
and
adc
out
in
inc
call
sbb
ins
lods
mov
mov
ret
sahf
and
mov
xor
stos
mov
int
icebp
std
nop
inc
aas
sub
gs
in
push
adc
fs
add
xor
or
and
mov
dec
mov
imul
imul
mov
and
out
(bad)
xchg
sbb
push
jl
jge
pop
mov
ins
xchg
aas
xor
scas
mov
nop
les
mov
xlat
rcr
inc
rcl
and
clc
daa
je
jp
movs
into
mov
mov
push
sti
inc
mov
lods
pop
imul
pop
inc
mov
pavgw
ficomp
pusha
retf
push
idiv
in
out
in
mov
sub
xchg
cmps
(bad)
scas
and
add
push
xchg
xlat
inc
imul
ins
xchg
lods
cld
push
retf
mov
pop
mov
sbb
scas
lahf
scas
shr
dec
mov
xor
aas
add
jo
test
mov
or
and
mov
mov
leave
xchg
stos
adc
stos
out
(bad)
je
loope
stos
xor
inc
scas
inc
mov
mov
sbb
pop
jmp
jno
rol
cmc
adc
fmul
sbb
int3
std
(bad)
cmp
sbb
ror
xchg
mov
pop
and
bound
ss
ret
loopne
into
aas
shl
xchg
jge
mov
cmps
aas
lock
mov
or
test
add
sahf
pop
adc
(bad)
pop
add
mov
hlt
and
add
dec
daa
repnz
mov
aad
or
fabs
out
cld
nop
sar
data16
pop
cmp
lahf
mul
xchg
dec
lock
sar
das
pop
xor
sub
test
mov
and
dec
mov
xchg
xchg
(bad)
shl
push
inc
data16
cld
dec
xchg
push
cmc
outs
jno
xchg
vcvttsd2si
popf
or
mov
xchg
retf
inc
jmp
sbb
inc
mov
jmp
ret
nop
(bad)
mov
or
mov
xor
push
movs
xchg
daa
adc
push
retf
inc
jp
aad
sub
data16
pop
inc
or
push
loope
cs
add
movs
ins
cmp
das
xor
sub
pusha
push
addr16
dec
mov
adc
add
out
jo
mov
add
and
mov
sub
dec
fs
jmp
pop
push
fdivr
inc
mov
stos
sub
test
push
imul
lods
pop
mov
cmp
sbb
and
nop
fld
std
loopne
lods
(bad)
(bad)
adc
xchg
dec
or
daa
retf
lods
sub
xchg
adc
pop
les
mov
(bad)
retf
xor
add
jbe
pop
sub
sub
or
xor
gs
push
or
jp
sar
mov
sub
out
or
dec
mov
jbe
int
sub
aaa
add
movs
frstor
test
dec
mov
push
jmp
sbb
je
stos
mov
sub
add
mov
sbb
cmp
pop
(bad)
sbb
add
int
mov
cmp
pusha
scas
ins
out
sub
inc
mov
ins
jns
mov
push
push
jno
sub
call
or
stos
icebp
add
push
cmp
add
push
push
jmp
mov
pop
mov
retf
test
das
popf
push
je
iret
sbb
inc
xchg
sbb
(bad)
xchg
xchg
xchg
xor
xor
mov
aas
sbb
xchg
mov
inc
mov
mov
mov
cwde
add
mov
jp
push
mov
sbb
out
(bad)
bound
inc
mov
cmp
adc
mov
bound
ret
and
mov
jge
movs
test
int3
dec
loop
inc
mov
test
repz
push
sub
xor
and
xchg
inc
mov
pop
out
inc
push
dec
je
or
pop
mov
mov
xor
add
push
push
mov
dec
mov
(bad)
iret
mov
pushf
sbb
hlt
or
ror
xor
ret
(bad)
jmp
ds
dec
loope
cli
or
mov
sbb
in
jg
loopne
aas
inc
scas
mov
jbe
add
hlt
adc
mov
(bad)
mov
sar
fcmove
or
shl
jmp
repnz
loopne
pop
fist
pusha
aad
add
ror
ret
call
inc
push
cmp
out
rcl
xchg
in
jno
add
pop
push
mov
fdiv
jnp
gs
xchg
push
shl
mov
fidiv
leave
push
sub
adc
mov
out
mov
sbb
xor
jae
sub
push
rcl
cmp
cmp
daa
cmp
out
ret
pusha
mov
and
pop
jmp
jl
dec
ins
fld
daa
sub
aad
xor
cmp
ror
mov
cmc
xchg
mov
dec
inc
sub
int3
push
aas
bound
leave
lods
rcr
mov
or
es
(bad)
loop
mov
xor
add
xchg
in
inc
rcl
push
jge
ror
aam
ins
imul
nop
rol
ss
mov
jnp
xor
out
lahf
dec
sbb
repz
jl
test
push
cdq
(bad)
(bad)
imul
and
lock
test
mov
add
fild
add
aas
xor
and
icebp
xchg
mov
dec
push
test
js
rol
retf
neg
mov
rcr
(bad)
cmc
stos
outs
sub
int3
test
xchg
popf
cwde
inc
push
and
jg
test
sub
adc
adc
(bad)
dec
and
(bad)
add
aad
sub
or
mov
hlt
xor
and
loope
imul
push
das
push
mov
clc
push
mov
lods
fs
push
inc
xor
loopne
fimul
pop
add
mov
pop
fxch
adc
aas
mov
push
cs
sbb
ja
or
es
aam
fsubr
add
addr16
xchg
push
data16
mov
repz
inc
pop
retf
sti
xchg
xor
and
popf
dec
int3
cdq
mov
cwde
cmp
pusha
mov
test
adc
mov
xlat
in
dec
call
fs
popf
cmps
sub
mov
ins
cmp
jl
das
and
in
cmps
leave
mov
aas
rcl
lock
daa
sti
das
inc
ins
ret
pusha
retf
repz
std
in
out
sbb
sub
push
xchg
in
lea
and
arpl
push
ret
out
pop
(bad)
xor
xor
inc
cdq
dec
fistp
fcmovbe
lds
cmp
mov
xchg
add
in
pushf
adc
aaa
cmps
jmp
pop
jnp
sbb
add
ins
ins
inc
jg
jo
inc
loop
cmp
ffree
inc
stos
jmp
test
mov
test
dec
jns
js
js
int3
lock
(bad)
aas
and
xchg
sub
dec
or
loope
sbb
push
inc
popa
call
pop
xchg
inc
sub
cmps
in
call
sub
cs
mov
mov
mov
mov
movs
sbb
cld
aaa
sahf
pop
out
or
jo
xchg
dec
aam
mov
mov
mov
push
test
sbb
mov
retf
pop
lea
push
lods
stc
mov
cdq
cmp
mov
xor
and
scas
xchg
scas
lods
pusha
stos
push
pushf
aas
or
inc
arpl
inc
les
xchg
push
gs
dec
xor
sbb
dec
and
fidivr
lea
enter
or
(bad)
mov
jmp
push
(bad)
push
clc
loopne
cmp
test
in
xchg
lds
mov
cmp
in
movs
add
xchg
mov
pop
cmp
or
inc
pop
and
ja
pop
fisttp
cmp
fld
push
inc
adc
xlat
cmp
adc
jl
retf
retf
jnp
mov
ret
mov
mov
iret
scas
mov
jmp
mov
push
xor
xor
nop
sar
stos
cli
adc
jp
adc
mov
jae
stc
push
jmp
jno
pop
xor
out
sbb
jge
ret
cwde
mov
jp
mov
xor
sbb
xor
xor
int
sub
jle
mov
push
dec
lds
cmps
adc
mov
cmps
push
adc
scas
clc
or
lods
pop
imul
std
mov
push
adc
test
mov
xlat
in
jp
inc
aaa
pop
or
movs
mov
xor
jns
test
inc
cmc
pop
call
push
mov
repnz
popa
ja
aad
aaa
mov
sub
pop
inc
in
leave
fdiv
cmp
dec
(bad)
mov
retf
xor
inc
xchg
mov
fld
add
nop
dec
test
sub
xor
mov
xchg
adc
mul
dec
fdivr
sti
pop
(bad)
lock
sbb
es
(bad)
mov
test
mov
xchg
xor
iret
mov
stc
out
test
xchg
or
or
clc
cmp
mov
out
jp
jmp
or
(bad)
jg
out
sbb
loope
push
(bad)
pop
and
mov
inc
fisub
push
xor
sbb
and
dec
mov
xchg
fbld
cmp
jmp
dec
cs
jmp
pop
fbstp
pop
iret
not
mov
jmp
mov
xchg
mov
sub
jecxz
ja
xlat
popa
(bad)
out
mov
stos
xor
cmp
lock
jnp
xchg
push
bound
add
stos
jmp
add
jae
pop
movs
cld
mov
and
push
or
push
retf
cli
and
shl
sbb
dec
fiadd
sbb
pushfw
nop
xor
pusha
mov
adc
or
sti
ja
mov
xor
jge
and
dec
fst
adc
test
stc
add
sub
les
ins
sbb
in
scas
loopne
lods
stos
test
loop
clc
arpl
inc
in
adc
pop
pop
loop
dec
adc
aad
xchg
jae
enter
sbb
fsub
adc
pop
sub
mov
in
xchg
add
mov
sub
xchg
test
adc
jne
push
div
inc
add
es
mov
xchg
and
popf
sub
pushf
sti
imul
mov
test
popf
adc
out
push
int3
pop
loop
outs
xchg
sbb
mov
sbb
paddw
adc
inc
pop
adc
int3
or
push
jbe
adc
mov
out
adc
stos
pop
sub
add
call
sub
sbb
or
mov
push
pop
ds
iret
cwde
sbb
cmp
(bad)
cdq
popf
imul
push
dec
fdivr
xor
into
shl
cmps
or
mov
inc
ins
lods
sub
mov
in
mov
adc
inc
aaa
or
push
sub
imul
test
hlt
jo
dec
adc
test
call
push
clc
cwde
in
popf
inc
mov
sbb
inc
stc
mov
push
or
rol
lock
xor
out
mov
leave
sbb
adc
jno
adc
mul
test
imul
sub
scas
out
(bad)
adc
hlt
mov
mov
mov
mov
jno
dec
mov
fsubp
push
(bad)
mov
jmp
xor
xchg
mov
neg
cmps
inc
pop
pop
pop
mov
pop
cdq
cli
mov
lods
mov
push
mov
inc
in
(bad)
cs
pop
push
mov
test
xlat
mov
jge
into
dec
sub
cs
int3
inc
jb
leave
cdq
adc
and
sbb
xor
or
push
mov
dec
cmp
sub
fbstp
popf
out
inc
xchg
pop
add
adc
pop
mov
sbb
cmps
inc
xchg
test
into
or
adc
out
ja
sbb
push
cli
pop
inc
movs
(bad)
add
pop
jecxz
adc
dec
loopne
jmp
test
mov
and
sub
test
inc
xlat
loope
fisub
popa
add
dec
fidiv
add
in
xor
(bad)
jp
test
jne
cld
gs
stos
lea
out
(bad)
int3
xor
retf
push
popa
xchg
ret
mov
test
sub
pusha
in
adc
mov
and
sbb
test
stos
jbe
das
out
sbb
jp
fwait
jp
add
shr
clc
std
bound
add
loop
xchg
mov
int
loope
fs
dec
movs
jne
lods
sub
fistp
sub
popf
fcmovb
jae
mov
rol
into
fstp
test
(bad)
loop
push
pop
out
imul
test
xchg
xor
xor
and
mov
ds
push
enter
jbe
dec
lods
jno
dec
sti
loopne
sbb
ficomp
or
jns
test
outs
cdq
sbb
dec
aad
daa
cmps
xor
inc
(bad)
(bad)
jmp
push
ficomp
imul
je
cmp
cmp
mov
mov
xor
mov
aas
ins
daa
jecxz
adc
aam
test
xor
or
(bad)
sbb
ror
addr16
aam
fimul
das
fdivr
in
icebp
jmp
ror
cmp
les
mov
push
lss
sub
inc
dec
mov
repnz
or
scas
(bad)
fisubr
inc
bound
inc
sbb
cmps
and
movs
xchg
rol
push
push
or
pop
xchg
jg
dec
daa
mov
adc
nop
nop
jno
xor
cmp
push
jo
and
ins
pushf
inc
sar
jae
gs
arpl
outs
movs
xchg
fld
hlt
cli
js
fsubr
(bad)
cmc
out
xchg
out
shl
movs
mov
mov
in
jecxz
bound
arpl
inc
jbe
or
mov
cvtdq2ps
hlt
cli
(bad)
(bad)
nop
pop
jp
mov
fs
add
dec
xchg
or
lds
adc
sbb
(bad)
add
aam
test
cmps
xchg
xor
loope
jmp
dec
push
pop
xchg
push
test
es
int
inc
loopne
adc
ficomp
stc
inc
xchg
adc
call
inc
sub
aam
and
arpl
mov
sub
sbb
xchg
jnp
mov
idiv
cmp
lds
sbb
push
mov
aaa
xchg
jmp
xchg
test
xor
pop
imul
xchg
lods
xchg
pop
pop
xlat
fbld
sbb
push
add
sub
icebp
les
or
iret
ficomp
in
mov
cmp
adc
test
mov
ret
mov
pop
or
ins
imul
xchg
sub
addr16
mov
out
cli
rcr
lahf
inc
imul
xor
or
ds
push
int
dec
test
cmp
push
add
mov
shl
movs
mov
scas
(bad)
aaa
sub
in
jnp
in
call
push
xor
push
fisubr
cwde
ret
sbb
xchg
jg
mov
or
push
retf
cdq
or
and
xor
push
adc
push
lea
loope
out
loopne
inc
test
and
adc
mov
or
push
xor
jp
cmp
sbb
mov
adc
xchg
add
jmp
mov
mov
(bad)
sub
fwait
and
push
adc
mov
add
cld
fst
paddusb
add
sub
xchg
and
popa
or
push
sub
push
iret
inc
mov
js
in
mov
les
inc
test
mov
out
imul
lock
pushf
xchg
call
in
cmp
jl
xchg
xor
sbb
xchg
jae
jg
ins
sub
rcl
fidiv
aad
nop
jge
ret
sar
sub
add
outs
jns
mov
cwde
lods
and
sub
adc
dec
or
sbb
push
test
lahf
loop
mov
jmp
ret
shr
in
cmps
sub
lds
mov
scas
cli
ret
inc
retf
adc
and
(bad)
pusha
push
mov
lods
push
aaa
enter
aad
sbb
pop
push
or
frstor
popa
pop
dec
xchg
jmp
mov
pop
mov
jl
inc
sub
imul
retf
lods
hlt
mov
push
dec
(bad)
add
and
mov
mov
movs
ja
xchg
stc
fmul
xrelease
push
pop
pop
arpl
fwait
cmp
gs
lods
push
sbb
(bad)
push
out
or
mov
pop
push
xor
add
and
sub
cld
cmp
sbb
cli
imul
cmp
push
sbb
or
add
movs
jns
pop
inc
adc
cmp
movs
add
inc
int
cdq
pop
clc
lods
jecxz
aam
mov
fbstp
nop
xchg
lahf
sbb
push
mov
xor
jae
shr
push
jg
div
cmps
add
jmp
icebp
xchg
stos
pop
rol
retf
push
(bad)
jmp
repnz
xor
pop
and
fdiv
mov
mov
mov
mov
push
cld
dec
(bad)
mov
xor
fadd
nop
cmp
inc
xor
push
jle
mov
push
pop
movs
rcl
push
mov
in
outs
push
push
test
icebp
shr
lock
mov
pop
jg
test
push
es
xchg
sub
pusha
repnz
xchg
cs
xchg
adc
xchg
mov
imul
add
shl
cdq
cmp
xchg
sub
outs
xchg
adc
call
(bad)
mov
imul
iret
cmp
pop
pop
push
mov
jecxz
ins
das
cs
push
and
in
in
imul
fsubr
(bad)
push
jno
cmp
dec
pop
jecxz
sbb
mov
xor
adc
xchg
mov
(bad)
mov
aas
pop
dec
xchg
sub
popf
sub
xor
std
pop
pop
sbb
ret
out
mov
mov
pand
dec
dec
mov
mov
mov
jg
and
xchg
xchg
fwait
jmp
push
xor
push
push
enter
and
xor
pop
inc
mov
and
jnp
stos
add
mov
cmps
cmp
or
push
pusha
xor
js
out
test
out
daa
aaa
in
sbb
shl
or
adc
pop
mov
or
or
sub
out
(bad)
or
repz
sub
cmp
lods
mov
shl
jp
pop
hlt
(bad)
int3
cmps
sub
push
mov
aas
div
xor
adc
inc
pusha
xor
jl
and
mov
js
xchg
adc
adc
shl
push
push
mov
and
mov
mov
dec
xor
rcl
fmul
mov
test
push
or
jle
pop
ret
xchg
ss
fld
xor
adc
movs
fsubrp
dec
call
mov
dec
jp
cwde
push
mov
loope
shl
or
scas
cmp
xchg
(bad)
test
das
cdq
hlt
inc
enter
into
in
jno
inc
push
into
aad
xchg
pop
xchg
dec
daa
xchg
and
adc
pop
out
adc
lods
jne
lea
xor
sub
xlat
pop
mov
push
jno
stos
push
mov
dec
test
push
xor
out
pop
sbb
sbb
outs
cmp
int
jge
out
mov
mov
dec
sbb
push
xor
jmp
adc
mov
xor
js
mov
dec
push
lock
dec
and
mov
retf
sub
inc
pop
dec
push
mov
xchg
jmp
cld
loop
mov
clc
pop
or
pop
pop
lods
cmp
xchg
mov
sub
dec
mov
lods
push
aas
(bad)
enter
or
ror
sub
and
inc
xchg
inc
gs
mov
fs
(bad)
nop
movs
outs
add
xor
lods
mov
push
mov
je
cmp
mov
in
mov
xlat
xchg
xlat
ins
and
adc
mov
sub
adc
retf
dec
sub
jb
pop
imul
data16
ret
imul
mov
cmp
fistp
inc
adc
pop
jecxz
xor
out
sahf
pop
mov
push
push
fldenv
adc
dec
retf
int
pop
inc
pop
icebp
fsubr
dec
icebp
clc
mov
dec
stc
call
lods
cmp
pop
sbb
out
fbld
xor
jae
fild
leave
add
in
ds
std
xchg
data16
pop
add
jecxz
inc
jnp
mov
mov
push
loope
jle
sar
cs
lock
icebp
push
xor
and
jno
int3
and
pop
int
xchg
cmp
lods
jns
je
mov
ja
call
and
aas
pop
pop
rcl
dec
addr16
sbb
sbb
loopne
xchg
fdivr
add
mov
popf
lods
out
dec
cmc
or
mov
and
rol
mov
pop
fild
in
repz
pusha
push
(bad)
in
mov
adc
mov
out
push
rcl
lahf
mov
mov
sar
sub
pop
stc
adc
sub
pop
ror
addr16
xor
out
sti
aas
pop
cmc
pusha
add
pop
and
dec
pop
pop
(bad)
mov
mov
push
out
test
xchg
push
sub
dec
mov
stc
fwait
mov
mov
stc
stos
(bad)
dec
push
retf
stc
ds
lds
sub
es
test
shl
cld
xor
jle
sub
mov
mov
push
lods
mov
mov
push
add
push
jmp
dec
fcomp
hlt
push
mov
xchg
outs
lea
xor
icebp
mov
das
pop
xchg
scas
inc
jmp
xlat
hlt
inc
or
(bad)
neg
jb
mov
repz
mov
mov
addr16
add
repz
and
pop
dec
clc
push
stc
mov
ret
es
into
sub
xchg
cmp
ja
rol
jae
dec
cmp
jmp
adc
test
cs
adc
xchg
inc
sub
fmul
ss
push
sbb
fdivr
cmp
cwde
mov
lock
or
popf
jge
xor
mov
jmp
mov
or
pop
mov
(bad)
lock
jle
or
mov
add
in
dec
mov
mov
sbb
inc
ret
inc
ja
mov
dec
mov
cs
sti
jb
cmps
jmp
mov
rol
jmp
pop
cs
dec
cmp
ins
xchg
loopne
and
and
imul
leave
inc
out
add
adc
cmps
mov
neg
ret
sub
mov
cmp
pop
imul
dec
mov
sub
jae
and
mov
stc
cmp
int3
cli
pop
push
or
pop
push
jl
inc
int
repz
mov
(bad)
push
mov
or
mov
ret
rol
jne
cmp
nop
dec
jmp
xor
jae
fucomp
add
lahf
xchg
xchg
and
fnstcw
push
sub
ret
xchg
fstp
push
mov
in
outs
sub
mov
retf
imul
sub
jmp
jne
out
popa
inc
cmc
cdq
fidivr
(bad)
and
imul
lahf
xchg
ins
cmp
cmp
pop
cwde
mov
popf
ret
adc
out
xor
dec
shl
inc
mov
jne
dec
xchg
cmp
lods
mov
sbb
pop
or
(bad)
push
inc
sbb
js
and
xchg
mov
inc
jnp
repnz
mov
xlat
ja
mov
fist
fld
loop
loop
pop
sar
or
mov
sub
jge
scas
test
test
mov
or
add
cmp
ja
cmp
out
out
cmp
popf
cmp
cld
xchg
test
add
and
lock
jb
out
mov
jb
ror
es
ret
loop
shr
ror
test
call
push
hlt
sar
xlat
std
movs
clc
call
sub
out
(bad)
mov
inc
adc
adc
cli
push
ret
pusha
mov
out
test
add
jge
dec
ins
dec
jle
cmp
xor
sbb
aaa
outs
lods
cmp
or
jecxz
xor
sbb
pop
fldenv
pop
movs
jbe
loope
cmps
inc
mov
ret
xchg
mov
loop
xchg
add
rol
pop
xchg
adc
int
push
adc
jmp
(bad)
(bad)
and
imul
test
jecxz
fmul
rcl
jmp
lahf
cmp
(bad)
mov
pop
jno
and
and
mov
or
pop
or
add
scas
aam
push
(bad)
xchg
cld
aaa
cmps
sahf
xor
inc
xor
repnz
fucom
inc
or
loop
or
xchg
xchg
sub
pop
cmc
sub
dec
xchg
mov
(bad)
xor
and
push
fcomp
cmps
movs
sub
hlt
pop
pusha
add
movs
pop
and
sub
sbb
mov
push
and
mov
push
call
jbe
and
jmp
or
dec
lods
into
and
stc
push
adc
loop
(bad)
adc
mov
jne
cld
test
dec
push
std
xchg
cmps
(bad)
dec
sub
cmp
xor
adc
xor
(bad)
or
retf
pushf
mov
push
jne
jle
sbb
mov
xor
movs
enter
inc
cmp
sbb
hlt
aam
add
inc
push
add
mov
aas
lock
aam
mov
jb
xchg
adc
pop
inc
inc
shl
or
fisttp
dec
arpl
sar
rol
into
or
gs
sub
movs
jno
mov
push
add
iret
or
add
(bad)
cmp
jo
xchg
shl
or
mov
lea
mov
das
cmp
inc
dec
lods
loope
mov
xor
loope
outs
popf
inc
sub
ficomp
pop
jbe
jo
into
mov
bound
loope
jbe
cmp
je
sti
jg
jl
loope
dec
mov
call
fwait
fs
call
test
pop
cmps
pop
xchg
cmp
inc
and
test
mov
push
dec
jmp
mov
pop
mov
xchg
pop
adc
mov
cli
fnstsw
inc
pop
in
mov
mov
aas
xchg
test
and
(bad)
aaa
in
scas
test
(bad)
xor
push
fisub
fwait
cdq
lds
sbb
cmp
jg
mov
xor
jns
pop
inc
scas
scas
repz
imul
adc
rcr
ss
int3
pop
cmp
rol
push
fdivr
cmps
not
push
xor
inc
xor
adc
mov
mov
adc
xchg
jno
imul
push
dec
pop
adc
shl
repnz
jnp
sbb
xchg
mov
mov
movs
nop
cmps
iret
jb
or
test
sbb
retf
mov
xor
mov
or
(bad)
dec
scas
xor
inc
mov
cld
mov
and
sub
retf
push
dec
cli
ins
sbb
mov
jp
adc
sar
test
mov
and
addr16
pushf
cdq
and
(bad)
int
push
ss
sub
fs
aas
cmc
jle
and
jmp
dec
or
clc
movs
neg
je
add
out
ret
into
mov
sub
pop
pop
pop
mov
cmp
xor
enter
cmp
xor
jb
out
les
in
fst
dec
adc
iret
adc
test
lods
mov
dec
sub
push
inc
jmp
rdtsc
dec
ds
fmul
jmp
test
bound
movs
int3
mov
pop
pusha
mov
ja
cmps
mov
retf
mov
fmul
inc
add
push
pop
stos
jmp
test
jb
xor
es
mov
out
xor
gs
push
out
out
pop
fs
lds
add
and
call
js
fs
mov
pop
jns
xor
or
xchg
push
push
mov
std
dec
fnstenv
(bad)
fld
in
inc
jp
rcl
rcr
fisttp
jae
add
imul
bnd
lods
dec
ja
xchg
or
movs
jno
sub
sub
push
rol
int
push
jmp
jns
pop
std
jecxz
fcomp
push
fistp
push
sbb
pop
jmp
pop
fisub
mov
pop
mov
pop
mov
fwait
rcr
clc
cwde
lock
mov
loope
jmp
jae
into
inc
mov
push
(bad)
jmp
pop
mov
xchg
push
jno
icebp
and
inc
pop
gs
scas
xchg
cmps
push
repz
rcl
mov
dec
push
jb
mov
cmc
jg
popa
in
pop
adc
add
and
dec
xchg
shr
nop
aaa
cmp
arpl
xor
scas
mov
jecxz
outs
movs
arpl
fistp
(bad)
xchg
(bad)
aas
imul
ror
ror
bnd
ss
repz
xor
push
ficomp
icebp
xchg
pop
call
pop
add
mov
mov
sub
jle
stos
repnz
adc
or
mov
sub
cmp
aas
sub
loop
pop
xlat
mov
jbe
out
mov
das
sub
xor
rcr
mov
xor
or
cmp
(bad)
sbb
leave
mov
jl
push
sbb
repnz
dec
or
ins
scas
stc
sub
xchg
fs
xchg
iret
mov
rcr
inc
sahf
test
sub
jne
stos
mov
outs
pop
adc
add
lea
pop
adc
ss
push
stos
jmp
push
or
xchg
not
mov
ins
in
dec
jl
idiv
data16
dec
mov
cld
cmps
sbb
and
cmps
xor
cld
pusha
push
test
daa
dec
addr16
out
rol
cmp
xor
xchg
jge
jns
iret
mov
jnp
jmp
jge
in
jl
adc
lods
stos
push
xor
inc
sub
imul
call
icebp
scas
sub
call
xor
mov
pop
retf
jne
call
retf
loopne
pop
dec
stc
cld
pop
push
push
cmps
sahf
mov
sahf
cli
mov
jmp
cs
cmp
sbb
fsubr
sbb
ins
and
xchg
stc
mov
xor
jg
and
daa
jp
call
mov
fimul
cmp
cmp
push
push
ins
fxch
icebp
jbe
mov
leave
stc
daa
jecxz
test
js
lahf
ret
(bad)
jp
in
pop
xchg
iret
xor
icebp
sub
popa
cwde
aam
iret
adc
adc
xchg
add
test
mov
sbb
xchg
ret
cs
xor
inc
xchg
jbe
push
cwde
pop
push
cmp
and
cmp
xor
cmp
mov
cwde
jnp
ins
adc
imul
jmp
std
or
push
lods
fs
and
rcl
push
aaa
mov
add
fs
jne
daa
sbb
lock
repnz
and
test
aas
nop
sbb
jp
scas
mov
add
mov
das
xor
data16
jge
enter
retf
mov
bound
dec
lea
push
fld
fist
jbe
push
cmp
push
and
hlt
push
(bad)
(bad)
cmp
(bad)
fs
dec
shr
inc
mov
neg
push
xchg
xor
popa
xor
cmc
adc
icebp
cld
pop
adc
dec
ss
stos
lea
fidivr
mov
jp
imul
out
pop
pop
add
cmp
lds
cmp
lds
cmps
repnz
jle
jg
lds
fs
sahf
jl
cmp
mov
pushf
inc
sbb
mov
fimul
mov
dec
jmp
jne
dec
mov
nop
mov
std
lea
add
nop
sbb
and
int
dec
leave
or
ss
pusha
cmps
jbe
test
jg
(bad)
xor
out
leave
pop
movs
add
xchg
xchg
push
scas
pop
pop
cld
aaa
inc
xor
xor
lods
jp
sbb
retf
xor
mov
mov
add
daa
pop
fs
jle
pushf
stos
dec
cmp
xchg
sbb
sub
fidivr
lds
xchg
or
shl
mov
in
xchg
ret
dec
enter
xchg
pop
iret
cmp
movs
leave
mov
dec
aaa
xchg
adc
out
pop
mov
adc
pop
sti
push
cdq
daa
ds
jnp
jl
cmp
mov
add
mov
test
mov
ja
lea
and
push
sub
in
inc
mov
retf
pop
jge
mov
test
loope
fstp
test
push
jae
cmp
jecxz
cmp
mov
int
cmc
lods
cwde
iret
je
stos
cmp
(bad)
mov
in
shl
retf
ss
fcmovb
mov
and
cmps
mov
sub
adc
xchg
lea
sub
retf
xor
mov
in
jb
cwde
retf
stos
aad
rcl
mov
add
add
gs
cwde
call
mov
sub
mov
push
(bad)
mov
(bad)
cmp
push
jmp
hlt
imul
cmps
sbb
ss
cmp
movs
movs
arpl
mov
mov
iret
adc
sahf
fisub
enter
xor
jo
inc
inc
retf
scas
ret
inc
retf
mov
xchg
and
mov
in
mov
xor
jne
sbb
ror
daa
and
out
cmps
lods
push
mov
and
dec
ja
mov
retf
or
dec
pop
inc
int3
cdq
add
inc
push
in
inc
cdq
call
sub
rol
xlat
test
and
into
mov
stos
ds
mov
pop
icebp
mov
call
test
sub
int
push
lods
mov
imul
mov
cmp
pusha
jle
(bad)
mov
cmp
mov
inc
mov
adc
test
and
inc
add
stos
(bad)
shl
cwde
cmps
jns
xchg
mov
or
or
loop
jb
push
inc
fcom
scas
or
mov
cli
iret
xchg
lock
jbe
xor
and
cdq
loopne
dec
mov
rol
xor
mov
bound
jb
aad
movzx
pop
shr
nop
push
sahf
sub
shr
les
add
es
jb
sahf
xor
leave
scas
dec
mov
sar
loop
inc
loop
xchg
shl
sub
jle
xor
mov
aas
add
loopne
aam
inc
xchg
mov
std
add
jnp
jl
inc
sub
jb
adc
adc
ins
xor
fwait
(bad)
cmp
inc
or
ins
sbb
neg
xor
xchg
(bad)
outs
sub
aad
cld
cmps
outs
adc
scas
data16
mov
in
in
cmps
popf
les
sbb
or
sbb
gs
mov
aad
or
leave
rol
xor
ret
in
sub
mov
test
push
test
sar
pop
sub
(bad)
jecxz
lahf
adc
neg
jmp
sti
retf
or
sub
cmp
push
retf
pop
and
arpl
imul
adc
jo
mov
sub
inc
mov
in
scas
jbe
inc
pop
stos
xor
mov
mov
cmp
fcom
mov
arpl
jl
retf
test
repnz
lea
rol
movs
mov
mov
mov
aad
pop
iret
inc
ficomp
outs
mov
push
mov
ret
dec
xor
and
lods
or
call
ds
dec
mov
dec
enter
ds
ins
pop
inc
stc
and
fucomi
xor
xchg
ret
dec
jmp
jnp
inc
xor
mov
and
je
adc
ins
jecxz
loope
mov
into
ror
outs
adc
xchg
call
ins
fs
sub
mov
sbb
and
sub
fnstsw
inc
add
sti
and
sbb
cwde
and
mov
fld
repnz
mov
push
jno
mov
jmp
mov
aad
lods
push
jb
adc
mov
test
inc
sbb
mov
dec
cs
iret
push
stos
movs
or
addps
jne
(bad)
push
loop
out
pop
stos
(bad)
xor
xor
inc
sub
mov
or
outs
cs
lea
jne
mov
mov
or
push
and
jb
adc
out
mov
jbe
xchg
call
test
xor
shl
daa
pop
xchg
mov
jge
xchg
dec
sub
les
or
scas
lods
hlt
loopne
movs
retf
cmp
fwait
mov
les
push
stos
pop
call
or
mov
stc
inc
mov
pop
mov
popa
mov
fs
or
ja
aas
sbb
leave
mov
cli
int
xor
mov
repnz
sub
loope
jg
xchg
lock
adc
cmp
(bad)
iret
sub
pop
aaa
xor
jmp
sbb
enter
popa
inc
inc
mov
in
cmp
add
sub
cld
daa
dec
cmp
ja
mov
std
sbb
imul
pmulhw
loop
outs
iret
cmp
xchg
adc
sar
inc
mov
sub
sub
loopne
ss
jne
push
pop
cmp
jle
add
pop
mov
addr16
or
pop
pop
movs
sbb
stc
loope
inc
lahf
fnstcw
mov
cmp
pop
sbb
mov
adc
out
aas
jo
rcl
add
jb
xor
sbb
mov
scas
add
mov
dec
pop
aam
or
addr16
inc
movs
inc
and
ds
(bad)
cmp
out
lahf
lods
fwait
in
out
pop
gs
ret
in
sti
push
scas
out
out
int
jge
fistp
sahf
mov
and
fsub
jne
adc
jmp
pop
jg
in
jecxz
sub
dec
jmp
xchg
sub
es
xor
and
dec
mov
stos
in
jne
outs
sbb
and
cmp
mov
retf
pop
(bad)
mov
xlat
popf
pop
add
(bad)
mov
leave
dec
xchg
mov
or
repnz
mov
in
xchg
adc
adc
push
lahf
push
imul
mov
cdq
ror
push
and
pop
push
add
mov
sbb
push
pushf
(bad)
or
inc
js
cdq
pusha
scas
pusha
shl
xor
popa
sbb
(bad)
inc
aaa
ret
scas
dec
sbb
aas
xchg
inc
xor
xchg
mov
push
jne
mov
fild
data16
std
fwait
xchg
lods
push
pop
cli
loopne
mov
add
std
fldenv
and
scas
mov
cld
pop
pusha
sub
fsub
jg
xor
mov
mov
shl
(bad)
ret
test
push
pop
inc
pop
xchg
cld
jle
and
out
jb
jbe
shl
loope
jp
add
mov
add
repnz
cli
xchg
jae
lds
scas
pop
xor
shl
icebp
cmps
sub
push
push
mov
imul
adc
cld
adc
pop
popf
dec
jno
push
lods
add
inc
xchg
ins
fs
xor
(bad)
idiv
stos
push
fimul
cmp
mov
or
xor
test
sub
xchg
dec
mov
push
xor
and
movs
cmps
cmc
jbe
push
sbb
nop
popf
jae
pop
sub
pop
out
int
sbb
jecxz
(bad)
mov
inc
ds
add
scas
in
fsubr
push
pmulhw
fs
dec
pop
mov
aaa
data16
movs
arpl
jmp
push
cmp
popa
push
movs
and
cmp
daa
mov
adc
inc
cmp
fwait
adc
xor
fst
jae
movs
in
dec
sub
ins
xor
mov
cdq
sti
retf
clc
movs
cmp
dec
or
xchg
pop
mov
and
into
and
xlat
mov
and
xchg
cmp
clc
add
adc
inc
int
sub
add
ret
pop
or
mov
test
shr
into
push
mov
mov
stc
add
mov
loop
cmp
mov
inc
jns
xchg
hlt
inc
aad
mov
xchg
jge
outs
stos
sar
add
mov
test
mov
push
cmps
(bad)
jmp
or
hlt
xor
fbld
or
or
nop
jge
pusha
in
and
push
addr16
dec
imul
retf
pop
bound
xchg
sbb
mov
xchg
fnstenv
mov
mov
std
mov
dec
sbb
push
jp
xor
rol
inc
mov
pop
fdiv
repz
add
xor
sti
xor
push
mov
mov
ins
xor
enter
leave
into
cmc
pop
movs
stos
pop
lock
out
scas
cli
cmc
nop
loopne
(bad)
out
into
jl
mov
pop
sub
xor
cmps
(bad)
ins
mov
adc
loope
jae
cmp
sbb
cmp
pop
mov
xor
rcr
inc
xor
pop
ins
sbb
xor
dec
stos
repnz
daa
mov
push
xchg
pop
movs
cmp
aas
pop
adc
(bad)
lds
and
adc
je
iret
push
and
mov
push
dec
and
pusha
dec
jnp
fst
add
sub
mov
adc
mov
mov
mov
fisubr
scas
push
stc
outs
lods
sahf
jne
mov
mov
mov
ss
int3
pop
cmp
mov
mov
pushf
out
js
cmp
iret
xchg
jo
add
push
in
popa
(bad)
cmp
ret
retf
in
mov
xchg
jae
stos
adc
stc
popa
xor
(bad)
xor
xchg
mov
dec
mov
add
retf
cmp
xchg
or
or
jne
sbb
movs
ins
gs
xchg
cmp
sti
pop
fsubp
push
lods
ror
jp
es
cld
cmp
jl
iret
in
(bad)
mov
jnp
pop
rcl
shr
jmp
and
dec
push
xchg
ror
push
mov
mov
push
sahf
dec
sub
ins
cmp
test
imul
jo
and
adc
int3
sub
push
add
cmps
jne
xor
sar
enter
cdq
(bad)
jmp
pop
mov
imul
push
aad
je
out
(bad)
xchg
mov
div
push
retf
jno
push
ja
and
jmp
push
mov
nop
dec
sub
fsub
mov
test
aas
es
cmp
pop
std
test
aas
pop
inc
lea
xchg
pop
mov
mov
xor
adc
cmps
inc
xor
ins
mov
jbe
xchg
sbb
test
xor
pushf
inc
cmp
sbb
pop
fiadd
xchg
sbb
cmp
pop
adc
jge
fwait
adc
sub
sub
mov
or
inc
fs
fwait
adc
pop
sahf
daa
call
cmc
(bad)
gs
fsubr
cmc
pushf
lods
les
and
xchg
imul
inc
sbb
sbb
cmp
xor
setae
(bad)
shl
sub
mov
ins
js
cmc
and
push
push
inc
clc
lods
das
sbb
inc
scas
jmp
push
sub
(bad)
jnp
(bad)
mov
ror
inc
mov
mov
loope
cmp
sub
cmp
fcom
lods
int3
jle
(bad)
shl
jp
ja
popa
push
in
cmp
fidiv
outs
jno
pop
xor
test
cli
into
(bad)
mov
fsub
push
jp
pop
pop
hlt
dec
ror
xchg
fild
outs
test
jp
mov
movs
outs
daa
push
aas
out
rcr
sbb
test
and
movs
pop
cmps
rcl
sub
inc
retf
(bad)
pop
xchg
mov
inc
ret
shr
xchg
movs
mov
add
xchg
pop
js
mov
les
loope
daa
sahf
or
add
mov
cmp
cmp
push
std
movs
push
jl
loop
sar
(bad)
jmp
(bad)
out
ss
add
popf
xchg
cmp
push
dec
pop
pushf
ins
mov
inc
shl
(bad)
and
or
jmp
imul
shl
xor
cwde
clc
sub
call
xor
jecxz
gs
test
dec
pop
retf
mov
inc
js
int
sub
js
call
xchg
add
in
jmp
(bad)
cmp
loopne
hlt
stos
xor
inc
retf
shl
cmp
or
sbb
mov
pop
pop
lahf
outs
cmp
repz
pop
sar
xor
call
das
fcom
mov
test
bound
inc
pop
jbe
add
mov
cli
sbb
xor
and
leave
xchg
xchg
pop
mov
loope
cmps
leave
lods
sub
jb
int
out
xchg
fisttp
inc
dec
in
test
add
push
inc
add
mov
xchg
xchg
sbb
cdq
xor
inc
cmp
and
cmp
fdivr
sbb
retf
xchg
add
retf
mov
(bad)
scas
ins
xor
mov
xor
ja
fist
and
inc
and
push
aam
scas
dec
cmp
push
xchg
aam
adc
std
std
push
push
add
in
jl
cmps
(bad)
sub
arpl
aaa
push
mov
sub
mov
pop
test
mov
icebp
sar
mov
imul
jmp
sar
outs
dec
sahf
or
mov
dec
or
imul
nop
mov
ss
xor
xor
dec
push
vandps
cmps
push
mov
cs
xchg
icebp
or
xchg
cmc
jo
sti
xchg
test
adc
adc
xlat
fucom
pop
mov
call
mov
jg
test
fidivr
mov
imul
dec
arpl
(bad)
mov
sbb
jne
(bad)
inc
xor
sub
je
xchg
xchg
sub
sub
and
out
rcr
mov
and
xchg
or
ror
(bad)
dec
jnp
inc
mov
inc
inc
sub
repz
add
push
jle
inc
cmps
pop
lds
in
adc
pop
bound
fnsave
div
inc
sti
dec
inc
ins
bound
bound
icebp
and
fs
(bad)
hlt
push
rol
xchg
ja
mov
adc
pop
jl
mov
aad
ja
in
mov
sar
div
shr
cmp
stos
ds
fisttp
es
pop
dec
add
mov
xchg
loope
xor
and
sbb
inc
push
data16
(bad)
cdq
imul
cmps
retf
mov
or
ret
cmp
rol
push
popa
rcl
addr16
push
les
pop
sbb
pop
dec
sub
pop
cmp
lahf
or
push
enter
push
push
retf
enter
sub
pop
bsr
das
dec
cmp
adc
rol
dec
xlat
enterw
leave
pop
retf
inc
lods
lods
int
test
(bad)
sbb
jecxz
repz
cmp
jg
nop
push
dec
jl
xor
xchg
(bad)
jg
call
cmp
sbb
push
nop
gs
lods
push
ja
out
sub
lds
fsub
cmc
mov
mov
ins
mov
aaa
xor
mov
pop
push
test
loope
bound
inc
sar
das
add
jae
(bad)
pop
cdq
inc
and
mov
out
in
rcl
push
jnp
cdq
sbb
and
add
sub
ins
retf
jp
fsubp
xchg
inc
fmul
mov
xchg
aam
sub
stos
mov
jg
add
outs
dec
cmp
aad
cmp
les
add
les
cdq
lods
add
test
or
popf
adc
stc
xor
sub
ins
pop
int3
jae
shl
pop
mov
mov
mov
lds
jnp
push
xor
mov
in
(bad)
iret
rol
xor
call
inc
push
das
pop
test
or
sti
lods
or
dec
leave
ss
sub
test
dec
(bad)
retf
xor
mov
mov
rcr
(bad)
inc
mov
push
xchg
stos
sahf
in
or
mov
adc
sbb
add
fs
repz
or
in
into
imul
into
jmp
mov
stos
cli
jnp
out
xor
aaa
pop
arpl
jne
cmp
jne
jecxz
popa
loope
cld
lahf
xor
xor
mov
nop
cmp
gs
sar
rcr
or
idiv
stos
cmps
xlat
sbb
mov
or
xlat
pop
pusha
jge
jmp
inc
cmp
fcomp
sub
jne
mov
push
lds
iret
xchg
pop
ror
stc
mov
jno
lods
addr16
scas
js
jb
dec
sub
cmp
sbb
dec
ins
xlat
mov
(bad)
sub
ds
jmp
pop
hlt
cmp
pop
sbb
push
dec
lock
jp
loope
ss
das
repnz
push
aas
lea
mov
test
aaa
xchg
inc
pushf
dec
stos
popa
add
xchg
repz
sub
and
xchg
(bad)
cmp
call
xchg
dec
dec
jl
inc
xor
mov
ins
mov
cs
xchg
repnz
adc
cdq
arpl
(bad)
add
push
mov
jae
jle
push
jge
leave
mov
rcr
inc
and
adc
fisubr
outs
call
sbb
lock
test
call
add
pop
cwde
ret
ds
repz
push
push
int
movs
into
dec
out
mov
mul
jmp
fwait
add
sti
ins
xor
aam
dec
push
sbb
mov
xchg
push
pop
ret
xor
lahf
imul
mov
sub
ret
push
sbb
push
mov
adc
lock
sub
mov
xor
fld
in
test
mov
pop
jmp
or
cmc
sbb
int
repnz
add
ret
in
dec
std
enter
mov
push
and
test
sub
lods
dec
mov
sub
add
xchg
call
cmp
mov
daa
scas
rcl
(bad)
inc
dec
ins
xchg
call
mov
or
lds
sbb
sub
fist
cmp
call
push
aaa
pushf
push
outs
jmp
out
lods
cld
(bad)
aas
xor
mov
xlat
or
popa
mov
fistp
aad
fcomp
push
pop
psubsb
dec
(bad)
mov
fxtract
or
dec
in
cmp
call
cmp
push
push
pop
jnp
arpl
popa
mov
lods
std
(bad)
mov
int3
loopne
(bad)
movs
retf
popa
adc
jns
cli
xor
fwait
xchg
cmp
mov
je
fwait
sahf
std
xchg
lods
dec
xor
shl
xor
cmps
and
cli
test
fld
mov
jo
inc
fsubrp
iret
ins
or
add
stos
movs
xchg
pop
sti
inc
fldenv
in
call
sbb
nop
push
neg
xchg
int
push
push
xor
popf
push
ror
repz
add
mov
dec
xor
imul
test
mov
dec
sbb
fsubr
imul
sbb
ret
repz
pop
sbb
mov
xlat
push
mov
adc
std
sub
test
int
adc
sub
std
sbb
sbb
mov
lods
mov
or
jne
mov
inc
pop
xor
retf
sub
adc
sbb
xchg
xlat
aad
cmc
jp
xor
sbb
fmul
push
mov
mov
push
fs
lea
mov
mov
out
pusha
jne
or
push
call
in
movs
out
dec
jno
inc
dec
movs
sar
repz
or
ds
test
sbb
jl
out
dec
mov
xor
test
xchg
cmp
scas
pushf
xlat
fadd
jne
jns
mov
pop
hlt
ds
or
pop
push
mov
dec
inc
cs
sbb
stos
cmps
(bad)
ret
cmp
jecxz
icebp
div
sahf
mov
sub
xchg
sub
movs
push
jp
mov
xchg
out
rcr
std
xchg
cli
jne
jp
cmps
sti
xlat
mov
pop
sbb
pusha
xor
aad
(bad)
jno
aam
retf
jmp
out
push
sti
test
cdq
xor
jbe
mov
ds
and
lds
fst
stc
cmc
cmp
mov
inc
add
daa
ficom
pop
js
push
jo
mov
xlat
mov
les
inc
data16
jns
mov
push
dec
mov
into
push
push
movs
inc
icebp
mov
fmul
fmul
xor
(bad)
in
jnp
xor
lfs
shl
ret
mov
and
jbe
pop
sar
leave
int3
cmp
xabort
dec
adc
xor
cmp
jge
push
shr
(bad)
inc
lods
sbb
mov
inc
ins
pop
add
(bad)
jle
stos
adc
in
ret
aad
sub
xor
jnp
gs
(bad)
les
in
clc
imul
mov
xlat
jl
mov
scas
xor
cmc
fsub
stos
loopne
and
retf
test
inc
xchg
ins
jnp
adc
adc
push
and
popf
(bad)
add
xchg
pop
jge
mov
push
mov
pushf
jmp
push
je
out
mov
sbb
adc
xsave
sbb
jo
in
inc
fucom
sbb
rep
cmp
lea
repz
ss
xchg
int
jmp
xor
scas
test
mov
stc
xchg
test
rol
arpl
sbb
cmps
inc
inc
ret
shr
stos
out
aad
repz
(bad)
mov
fwait
mov
jno
rcr
mov
xchg
repnz
jne
ja
iret
(bad)
std
jno
rol
xchg
mov
mov
popf
push
jge
sub
jmp
sbb
add
lods
jo
test
dec
daa
arpl
bound
sbb
sbb
xchg
int
ret
jb
jmp
add
pop
ja
movs
add
push
dec
hlt
cli
std
pop
dec
outs
ficom
in
push
sub
pop
add
pop
cdq
scas
mul
xchg
push
arpl
sahf
int3
in
xor
add
or
inc
in
pop
mov
xor
stos
ror
(bad)
jo
es
cmp
pop
mov
leave
dec
(bad)
ffree
cli
mov
push
mov
shl
add
std
xor
lds
mov
adc
pop
stos
or
add
imul
out
imul
jg
fwait
stc
movs
test
and
pop
std
jl
xor
fisttp
leave
mov
in
daa
mov
(bad)
ins
arpl
xlat
ret
dec
push
mov
in
sahf
push
mov
sbb
rcl
movs
sbb
lea
push
cld
pop
mov
sbb
push
aad
jne
daa
inc
xchg
mov
lods
ins
cmp
mov
mov
cmc
pop
or
mov
sub
(bad)
jmp
int3
int3
cld
dec
push
inc
adc
sbb
pop
pushf
dec
leave
call
pop
enter
xchg
movs
sub
cmp
cmp
fnstcw
mov
adc
mov
xchg
loopne
ret
inc
dec
dec
inc
adc
mov
out
jae
pop
xchg
shl
inc
mov
sub
jge
sub
push
inc
(bad)
ins
sti
ja
push
push
push
xor
mov
fcmovnu
xor
mov
(bad)
loop
loopne
sub
push
jg
inc
ja
outs
xchg
sbb
repnz
sub
sbb
popf
popa
pop
mov
mov
or
ret
inc
rol
dec
xor
and
shr
out
pop
cmps
ja
out
mov
(bad)
mov
jecxz
std
enter
mov
(bad)
jmp
xchg
mov
mov
push
fbstp
imul
or
xchg
pop
idiv
push
inc
mov
add
pop
inc
scas
pop
sbb
or
jge
aaa
lds
mov
mov
mov
mov
or
aaa
mov
lahf
pop
pop
cmp
pop
mov
mov
aam
push
leave
or
or
and
cli
sar
clc
retf
adc
fcomi
xor
add
cmp
popf
push
xor
mov
sbb
or
aas
mov
adc
(bad)
fiadd
mov
outs
in
imul
and
test
(bad)
xlat
dec
mov
ret
push
jecxz
mov
idiv
xor
in
and
xor
data16
mov
stos
jo
adc
ret
ins
xchg
arpl
and
repnz
imul
loopne
add
dec
pop
xchg
mov
mov
sti
xor
and
cs
and
sbb
sbb
mov
movs
call
inc
cmp
cmps
out
dec
xor
das
in
popa
das
sar
les
sbb
lods
dec
jne
adc
adc
(bad)
sub
movs
sti
out
sub
dec
mov
adc
pop
sub
arpl
cli
icebp
clc
jbe
retf
lods
cmp
call
jge
retf
xchg
hlt
xor
dec
(bad)
xchg
mov
arpl
ret
pop
sub
out
sbb
sbb
nop
or
xor
jp
leave
sbb
sub
xchg
jp
retf
xchg
mov
mov
arpl
mov
sar
mov
cwde
xchg
fidivr
movs
mov
lahf
mov
and
jl
test
adc
dec
xchg
pushf
or
lods
lock
xchg
jb
pop
rol
out
xor
add
repnz
sub
ss
xlat
std
cli
cmc
xchg
add
and
lea
(bad)
mov
scas
shr
test
push
xchg
repnz
pop
pop
lds
jb
sbb
pop
fcmovnb
test
stc
mov
stos
mov
xchg
jle
jle
jno
aad
lahf
pop
jmp
(bad)
push
push
mov
std
sub
push
xor
and
cmp
paddsw
and
(bad)
cld
inc
adc
push
int3
and
add
arpl
dec
stos
inc
(bad)
out
mov
loope
repz
push
(bad)
jmp
bound
inc
and
mov
push
ret
out
cmp
push
icebp
dec
out
add
leave
ins
test
sub
(bad)
jne
dec
or
sti
xor
and
mov
and
mov
pop
mov
push
cmp
clc
les
or
inc
lds
push
mov
jecxz
jecxz
lods
sti
push
ret
pop
push
pop
cmc
int3
xor
xchg
test
jo
lahf
mov
enter
int
out
outs
out
jo
repnz
mov
mov
outs
clc
or
xchg
push
cmps
xor
push
push
jns
push
jg
mov
out
xchg
ror
and
iret
inc
and
cmp
xlat
fistp
into
popf
cmp
ror
mov
sbb
jns
cmp
add
or
or
test
and
push
jmp
fwait
pop
mov
nop
lds
mov
cdq
imul
mov
sub
pop
sahf
and
cwde
mov
dec
or
retf
pop
pop
idiv
into
mov
ins
loop
mov
mov
inc
(bad)
adc
mov
rcr
sub
mov
jae
sbb
inc
aam
(bad)
gs
dec
dec
add
cmp
outs
neg
lock
sar
xor
jno
or
ds
adc
push
movs
mov
mov
push
jl
sbb
mov
add
lahf
push
(bad)
cld
movs
ror
movs
scas
mov
test
add
mov
fs
(bad)
scas
dec
loope
or
rcl
mov
or
jbe
xchg
mov
and
addr16
jnp
dec
mov
mov
and
(bad)
sub
aad
inc
popa
dec
sub
sar
jb
cwde
outs
(bad)
cmp
mov
aad
cmp
fldcw
add
imul
cmps
enter
(bad)
out
repz
(bad)
movs
call
adc
mov
mov
cmp
jnp
inc
test
mov
push
fsubr
mov
in
pop
pushf
loopne
int3
adc
repnz
xor
lock
dec
shl
sub
jp
mov
loop
or
xor
sub
aas
aam
das
not
pusha
int3
mov
jmp
push
frndint
mov
or
pop
or
test
jle
outs
mov
loop
cmps
cli
push
ret
mov
fisub
int
cli
sti
sbb
jl
cmp
push
jle
sbb
jp
fcmovnbe
fadd
mov
neg
jbe
xor
jge
in
or
or
sbb
xchg
mov
imul
and
dec
stc
mov
sar
aam
aas
inc
add
jns
dec
pop
mov
jg
dec
jle
lock
lods
pop
retf
sbb
outs
scas
dec
sbb
pop
mov
jnp
sbb
movs
call
test
retf
es
iret
push
hlt
sub
arpl
jb
inc
test
inc
xchg
ja
imul
sti
lds
and
mov
add
adc
cmp
sbb
push
fadd
rol
not
mov
or
or
mov
pusha
cmp
cmp
ret
cld
sbb
ins
stos
and
or
fwait
xor
xor
mov
and
sbb
xor
add
dec
pop
add
pop
xchg
(bad)
fistp
xlat
rol
lahf
addr16
lock
or
add
jl
fwait
into
inc
push
pushf
push
ret
mov
daa
into
cmps
outs
ror
push
(bad)
adc
(bad)
out
push
adc
imul
push
pushf
out
add
stc
shr
and
inc
xchg
(bad)
cli
push
mov
inc
test
adc
leave
rcl
call
cwde
and
push
add
bound
ret
jae
out
cld
inc
shl
push
jle
or
cmp
cdq
or
outs
cli
cmps
pop
cmp
movs
call
nop
mov
adc
mov
das
retf
cmp
fstp
mov
push
mov
hlt
out
ror
xchg
push
lea
xchg
sub
stos
neg
inc
mov
lods
and
or
int
cwde
jno
xor
ret
sub
into
push
ficom
fiadd
aas
lods
xchg
xchg
call
aas
ja
dec
push
call
adc
sti
inc
push
cmp
mov
sbb
ret
cmp
arpl
pop
aas
sub
loop
fcom
push
pop
jge
ror
cmp
or
xchg
jge
xchg
stc
inc
ror
call
sahf
cmps
xlat
fild
rcr
push
xor
sub
sti
loop
pop
mov
psrld
or
mov
enter
cdq
mov
das
sahf
and
pop
cmp
sub
jo
imul
test
mov
fwait
call
fwait
jle
xor
stos
into
leave
out
mov
(bad)
adc
fs
retf
out
xor
inc
shl
fld
xor
nop
sbb
imul
mov
vsqrtps
popf
hlt
or
xor
pop
adc
sub
fwait
mov
aad
pusha
xor
clc
dec
sar
les
xor
ret
dec
jg
arpl
pop
push
push
ret
dec
mov
lock
dec
or
sub
dec
(bad)
sub
jge
sub
test
ficomp
cmp
inc
in
mov
mov
(bad)
or
sahf
movs
or
mov
(bad)
jmp
mov
mov
adc
test
xchg
dec
xchg
cdq
push
mov
pop
mov
mov
jbe
std
inc
mov
aaa
ins
push
ss
inc
rol
mov
xor
lods
mov
pop
add
or
inc
popf
mov
add
sub
pop
ins
add
xor
imul
fisttp
pusha
cli
cdq
mov
sahf
cmp
mov
and
and
mov
xor
(bad)
aam
xor
icebp
lods
sbb
mov
jnp
fmul
fst
mov
push
das
scas
(bad)
dec
mov
ds
dec
mov
cmp
push
popa
cmp
inc
jnp
repnz
repz
(bad)
mov
push
retf
mov
fidivr
out
pop
pusha
aam
push
mov
xchg
out
mov
and
inc
imul
popf
push
fcom
or
fisub
(bad)
cwde
retf
add
xor
neg
push
jp
enter
mov
enter
xchg
or
fnstsw
cld
lea
pop
loop
bound
sub
push
adc
out
adc
loop
outs
movs
enter
mov
sbb
mov
sub
sahf
push
sbb
sbb
xchg
xor
mov
sbb
mov
sbb
pop
mov
jbe
loop
rcr
es
mov
repz
jns
sar
lds
popf
cdq
xchg
imul
sub
jnp
mov
in
xor
and
(bad)
loope
and
repnz
xor
pop
lock
add
popf
ss
jmp
jmp
or
icebp
ror
movs
stc
fimul
aad
mov
mov
jl
mov
ret
movs
pop
fmul
inc
ret
pop
pop
inc
fadd
or
fimul
inc
(bad)
jns
gs
ret
aam
out
push
div
pop
sbb
aas
xchg
mov
movs
cdq
int
cwde
aas
fucomi
stos
pop
xlat
push
clc
dec
xor
jo
stc
inc
pop
add
jmp
sbb
cmps
inc
imul
sti
cmp
jp
sub
sub
jle
fnstenv
adc
adc
and
popf
add
push
and
cdq
popf
mov
ins
and
sbb
mov
mov
std
inc
xchg
call
xchg
aam
sbb
jge
sbb
daa
xchg
repnz
adc
mov
adc
retf
inc
xor
jae
jle
nop
add
push
rcl
jmp
test
add
iret
jnp
jle
sbb
dec
dec
push
and
xchg
sbb
mov
inc
dec
shl
outs
adc
imul
add
scas
es
mov
adc
fstp
fistp
fisubr
into
mov
es
int3
push
rol
movs
pusha
cwde
add
lahf
mov
test
cmp
sbb
iret
or
mov
sub
gs
lahf
pop
pop
lods
inc
pusha
cmp
lea
adc
jg
pusha
add
outs
inc
add
adc
dec
imul
cmps
sti
xchg
scas
retf
dec
inc
adc
mov
or
and
jmp
xchg
ror
xchg
mov
dec
jne
sbb
mov
out
sbb
mov
cmp
jbe
out
(bad)
shl
jle
test
pusha
pop
mov
into
outs
stos
push
xor
pop
js
loop
or
push
sbb
mov
nop
sub
pop
sbb
lock
xor
sub
loope
sti
mov
inc
(bad)
data16
lods
add
mov
jno
xchg
push
(bad)
xor
xchg
test
add
xchg
fld
icebp
xor
dec
inc
dec
jnp
xor
data16
mov
in
pop
ds
movs
cmps
jne
stc
xchg
xchg
repz
or
mov
stc
loopne
sti
add
xor
retf
inc
xchg
icebp
stc
pop
add
sbb
in
mov
daa
jg
mov
mov
ins
xchg
das
imul
sbb
ins
mov
je
inc
bnd
xor
push
mov
test
ret
in
dec
push
dec
sub
adc
aaa
mov
in
ret
mov
inc
in
ror
pop
(bad)
out
movs
movs
cmp
and
push
jmp
inc
addr16
mov
push
addr16
cmp
inc
cmps
popf
sbb
outs
shr
fsubr
push
and
mov
popa
cmovns
adc
cmp
adc
or
std
mov
sub
lea
xor
repnz
jecxz
mov
repnz
cs
mov
pop
jae
lods
xor
test
pop
sti
lods
adc
cwde
jne
iret
jne
pop
les
and
lds
sbb
stos
fwait
add
and
jle
xchg
hlt
sti
icebp
mov
adc
pop
div
push
inc
dec
iret
out
(bad)
sbb
push
in
jg
sbb
fs
sar
lods
mov
cmps
jo
push
iret
jmp
lods
dec
fs
push
and
sub
mov
xchg
mov
cmp
mov
add
add
fstp
push
adc
push
inc
mov
cmps
sbb
je
fwait
xor
les
adc
cdq
repnz
bound
lods
fcmovnbe
dec
stc
fiadd
mov
scas
(bad)
repnz
mov
pushf
xchg
and
pop
mov
dec
xchg
pop
cmp
iret
mov
jb
ret
add
or
jb
fmul
and
mov
xor
icebp
xchg
in
mov
or
xchg
outs
lea
xchg
jo
(bad)
dec
push
jb
inc
int
ins
imul
jno
and
mov
jnp
jmp
addr16
fist
daa
sbb
dec
mov
lea
jge
jecxz
(bad)
loop
sbb
adc
scas
mov
outs
jmp
add
and
das
pop
adc
push
movs
add
push
inc
sti
dec
xor
not
xor
mov
sbb
mov
test
imul
xchg
xor
fldenv
retf
or
add
or
hlt
mov
mov
or
pop
xor
pop
shl
movs
xor
inc
push
call
dec
mov
push
ficomp
xor
aas
fdivr
mov
cmc
sti
imul
push
mov
push
dec
aam
push
and
jp
add
and
shl
cmp
inc
(bad)
std
nop
jmp
nop
lods
and
push
popa
adc
cmps
cmp
jnp
mov
arpl
xor
bound
or
cmp
call
outs
jnp
dec
sbb
cdq
cmps
pop
mov
(bad)
ror
sub
push
imul
retf
push
sbb
cmc
out
icebp
push
xor
mov
sar
test
pop
xchg
push
loope
push
int3
jb
mov
int3
loope
push
jnp
arpl
test
int3
jge
xor
sbb
sahf
ja
dec
iret
call
rcr
ss
dec
jbe
mov
sub
sbb
xchg
inc
jmp
or
cmp
cmp
dec
and
retf
adc
and
call
out
xchg
int
lock
out
ds
sbb
fimul
pop
stos
inc
ret
(bad)
pusha
xchg
pop
scas
sub
push
adc
add
pop
bound
lods
les
pop
sar
inc
cmps
retf
gs
call
inc
pop
mov
pop
xor
scas
in
mov
in
pop
ret
mov
sbb
icebp
(bad)
xor
sbb
or
cmp
jecxz
jmp
cmp
js
ss
and
sub
mov
sub
es
imul
inc
inc
xor
test
pop
xor
in
jno
xchg
inc
call
cwde
jg
retf
xor
mov
or
std
(bad)
and
ins
mov
scas
sar
sub
inc
movs
aaa
cli
das
xchg
push
lods
add
jp
fldenv
adc
div
jl
test
enter
ret
xor
test
adc
mov
or
sub
adc
adc
jnp
jno
dec
loope
out
adc
jne
rol
pushf
leave
pop
push
scas
retf
xchg
cmps
ficom
or
mov
retf
popa
loopne
imul
pop
push
mov
cld
sbb
inc
adc
sub
lods
mov
sub
pop
jl
fisub
xor
jle
sub
mov
aam
mov
enter
fsub
mov
jmp
mov
inc
sbb
inc
jle
mov
rol
out
mov
mov
pop
gs
xchg
xor
push
ficomp
pop
pop
cmp
call
retf
dec
ins
faddp
in
loop
mov
clc
(bad)
mul
mov
scas
pushf
shr
mov
mov
ins
mov
aad
ret
inc
adc
out
rcl
and
sbb
xchg
dec
dec
shl
outs
push
jecxz
ins
ret
dec
xor
pushf
sub
jl
mov
aam
jmp
call
loop
lea
push
in
dec
(bad)
(bad)
cmp
aad
dec
out
int3
gs
je
outs
mov
and
mov
arpl
and
(bad)
int3
nop
iret
sbb
sub
sub
pop
fild
jnp
test
cmp
adc
pop
sahf
sub
xchg
stos
jns
jb
inc
bswap
dec
mul
jmp
mov
imul
nop
sub
fwait
bound
cmp
arpl
(bad)
cmps
clc
push
(bad)
dec
xor
dec
mov
sub
adc
xor
inc
mov
cdq
mov
loop
cmp
push
(bad)
lods
xor
dec
fadd
clc
outs
xlat
jg
and
int3
jbe
(bad)
movs
jge
jno
ja
jge
retf
jns
leave
push
xchg
rol
leave
jno
xor
jl
dec
xlat
call
inc
nop
leave
loopne
ret
fcomp
inc
es
mov
les
jmp
mov
pop
int3
mov
inc
rcl
test
mov
lods
scas
mov
ds
and
sub
dec
sub
outs
pop
(bad)
or
imul
pushf
jns
pop
out
dec
jg
hlt
dec
loope
cmps
sbb
inc
inc
rcl
lahf
push
mov
aam
push
dec
sbb
adc
test
cmc
sahf
and
or
cmp
fisttp
packsswb
inc
aas
cdq
enter
xchg
(bad)
in
les
dec
fst
add
push
mov
lods
(bad)
aam
push
aad
mov
jg
repnz
test
pop
ret
sbb
neg
push
fbstp
jbe
iret
xchg
ret
lods
mov
dec
jmp
xor
pop
retf
push
push
dec
xor
out
adc
imul
mov
test
ss
fbstp
cwde
pop
pop
sub
es
lds
xchg
push
stos
ror
sub
xchg
dec
jg
lock
pop
adc
jmp
fcom
aas
test
fnstcw
iret
mov
cmp
xor
mov
mov
pop
jb
sar
gs
push
push
or
js
sahf
jae
retf
bsr
dec
retf
daa
pop
test
retf
cmps
aaa
pop
loop
mov
mov
je
xor
or
dec
mov
imul
xor
cmp
pop
imul
mov
add
pop
inc
pop
ret
pusha
push
xor
mov
ins
add
mov
or
jne
jmp
stos
aad
(bad)
push
jmp
les
cmp
test
bound
and
imul
sbb
nop
jecxz
push
push
push
dec
out
adc
scas
lock
dec
hlt
fld
push
jo
stc
pop
jl
pop
sub
adc
push
xchg
mov
rol
fwait
mov
shl
adc
mov
ficom
pop
dec
cmp
pusha
jle
out
cdq
jne
dec
push
cmp
scas
sti
xchg
mov
inc
inc
in
sub
out
(bad)
pop
mov
lea
pop
pop
push
enter
out
out
mov
push
pusha
movs
jns
nop
jae
pop
ficomp
inc
mov
adc
ficom
add
and
(bad)
push
ds
in
cmp
fisub
sbb
xchg
dec
xlat
fistp
jns
mov
or
(bad)
push
pop
shl
cdq
in
sbb
fstp
mov
inc
push
bndldx
or
ins
push
adc
ror
mov
push
jne
or
bound
hlt
pop
pop
adc
movs
int
cs
fsubr
int
test
outs
inc
mov
dec
pop
or
clc
mov
xchg
leave
push
mov
sti
xchg
jg
push
pusha
jle
(bad)
sbb
repz
addr16
sub
pop
shr
(bad)
mov
xchg
lock
push
outs
xchg
mov
mov
fucom
stos
cld
mov
aad
pop
jbe
int
push
inc
imul
pusha
fsubr
mov
add
mov
sbb
xchg
sbb
sti
dec
pop
jno
in
aaa
push
jge
adc
into
call
mov
push
xor
push
fs
add
outs
pop
iret
pop
imul
ds
jl
push
aad
push
fistp
sahf
lahf
sbb
inc
push
arpl
and
xchg
mov
(bad)
leave
mov
sti
add
ins
mov
lea
outs
sbb
sub
push
sub
adc
xor
inc
mov
js
lahf
xchg
pushf
mov
adc
movs
daa
ffree
mov
inc
or
pop
lds
xchg
daa
pop
call
(bad)
jmp
sahf
push
cmp
xchg
mov
dec
push
inc
adc
sti
sub
popf
add
push
ins
xchg
lods
jo
mov
aad
(bad)
fisub
xchg
dec
mov
and
sbb
cmp
shl
pop
inc
jb
gs
out
adc
sub
cmc
cmp
and
adc
add
jl
cmp
addr16
std
or
cmp
lock
int3
push
repz
cmc
data16
(bad)
xor
adc
or
hlt
loopne
pop
ret
xchg
fnstsw
loop
adc
inc
fs
jno
std
out
stos
mov
mov
push
mov
add
shl
test
mov
ror
sbb
jb
loope
test
adc
pusha
mov
mov
pop
and
loopne
fimul
repnz
hlt
test
push
mov
cmp
call
dec
sub
push
dec
sbb
repnz
mov
xor
dec
cdq
cmps
jl
ss
ficomp
inc
mov
mov
inc
pusha
pop
stc
jno
dec
or
rol
push
push
fist
adc
adc
fimul
test
jo
fdivr
pop
shl
fucomip
int3
stos
ss
pop
or
mov
addr16
or
mov
xor
xchg
pop
pop
popa
enter
xchg
mov
mov
inc
and
aad
inc
add
inc
(bad)
fisubr
and
jne
in
pop
call
int3
loop
or
test
mov
pop
pop
std
xchg
(bad)
popf
out
ds
jbe
pop
inc
jne
(bad)
fidiv
inc
out
mov
cs
inc
dec
mov
sub
shl
aas
push
rcr
lock
daa
pmuludq
lods
jg
mov
pusha
test
xchg
mov
mov
dec
scas
adc
pop
mov
int3
dec
inc
je
ret
addr16
mov
xor
icebp
mov
adc
mul
arpl
xor
clc
mov
fpatan
pop
stos
jmp
mov
sub
fidivr
ss
mov
mov
and
stos
xor
arpl
(bad)
bnd
fdivr
sub
std
sbb
pusha
ins
sub
jno
rcl
mov
mov
loop
xchg
mov
inc
jecxz
dec
loop
sub
rcl
xor
sbb
in
jne
adc
xchg
xor
xor
pusha
fstp
pop
xchg
cmp
xchg
cmp
imul
call
push
adc
jp
lock
mov
fsub
dec
jge
stos
fild
jmp
out
and
xor
aaa
or
push
and
mov
mov
cwde
xchg
lds
jecxz
shl
push
mov
sar
jl
sahf
ret
les
pop
pop
and
hlt
retf
fild
aaa
stos
cmp
repz
lea
(bad)
test
aaa
call
cdq
mov
sbb
adc
imul
outs
jnp
dec
test
int3
dec
dec
std
push
mov
(bad)
adc
out
sbb
cmp
adc
loopne
adc
add
enter
add
jg
xlat
and
je
or
jge
aad
rol
inc
mov
lods
fwait
cmc
ss
pop
into
fcomp
dec
xchg
xchg
dec
test
add
and
fistp
mov
jne
test
inc
push
xor
sub
jns
sbb
cmp
pop
lahf
pop
int3
lahf
aaa
das
add
xchg
scas
mov
cmp
push
aaa
adc
push
stos
shufps
test
push
iret
lock
sbb
pusha
xor
cmp
arpl
sbb
popa
add
(bad)
pop
pop
cmc
jne
pop
and
or
ins
fcom
test
pop
cmp
adc
pop
adc
gs
sahf
mov
xor
xor
jecxz
pop
mov
mov
sbb
in
mov
adc
cld
xchg
clc
outs
dec
xor
pop
imul
fisubr
daa
fld
dec
jo
test
cmp
pusha
cld
mov
xor
daa
jns
mov
push
push
jmp
sahf
jb
jo
xor
js
imul
and
ins
mov
ret
pop
xchg
bound
lods
cmp
gs
add
pop
(bad)
mov
pop
cs
movs
sbb
sub
rcr
retf
addr16
lds
dec
jge
les
mov
(bad)
shl
and
jp
repz
xchg
or
and
js
mov
(bad)
sub
popa
pop
je
ja
into
xor
xchg
add
mov
scas
mov
cli
xchg
fs
xchg
sbb
pop
push
sbb
sub
lods
idiv
call
mov
hlt
stos
sub
daa
pushf
inc
imul
int
adc
sub
pop
sahf
ret
hlt
mov
and
jp
sub
add
cmp
xchg
das
cli
sti
pop
mov
or
leave
xchg
lods
sbb
mov
adc
jg
loopne
movs
push
repnz
xchg
div
jbe
bound
mov
stc
test
xor
mov
pop
or
mov
cmp
push
jmp
call
inc
ins
mov
ss
loope
clc
(bad)
jle
clc
mov
pop
repnz
adc
addr16
retf
imul
pop
les
out
fisub
sub
sub
jb
adc
jp
out
cmps
fsub
inc
xchg
mov
mov
adc
rol
or
repnz
inc
shl
stos
test
retf
aaa
xor
rol
pop
test
lea
pop
leave
jg
and
sbb
cdq
daa
outs
cli
push
sti
mov
add
dec
or
mov
and
cmp
or
or
mov
loope
scas
dec
pusha
jb
cmp
push
hlt
imul
xchg
sub
test
push
ror
mov
mov
mov
std
xchg
stos
mov
mov
(bad)
ffree
bound
push
out
bound
or
adc
and
aaa
out
jnp
jl
jns
adc
addr16
repnz
test
imul
push
push
out
stos
cmc
imul
inc
add
es
dec
mov
sub
gs
dec
dec
xor
es
push
mov
and
xor
push
xchg
jge
pusha
push
out
addr16
int3
xlat
xchg
hlt
or
push
xchg
mov
and
rcr
dec
jae
js
out
mov
and
mov
sbb
data16
push
mov
outs
dec
xchg
fimul
ins
dec
cmp
outs
mul
mov
and
dec
ds
add
aam
cmp
jg
cwde
sub
pop
dec
inc
fidiv
mov
shl
not
(bad)
retf
fidivr
mov
lock
in
pop
mov
fisttp
xor
shr
jmp
mov
cmp
std
std
scas
nop
ss
sbb
mov
inc
or
and
xchg
push
retf
mov
pusha
mov
mov
jle
mov
sub
repnz
push
cs
js
aas
adc
imul
enter
pushf
dec
in
(bad)
iret
xchg
add
or
mov
ror
dec
mov
pop
inc
add
mov
xchg
mov
cmp
jb
push
mov
mov
ret
push
iret
retf
inc
cmp
call
std
jmp
xor
movs
nop
mov
movs
jns
mov
inc
fcmovb
(bad)
jns
mov
ss
inc
mov
xor
lods
xchg
fucomip
rcl
push
icebp
push
das
in
icebp
into
push
push
cmp
add
cdq
cmc
push
dec
push
mov
clc
mov
mov
jae
popf
cmp
rcr
ret
mov
jno
sub
stos
mul
add
retf
ds
add
cwde
xchg
ret
rol
popf
je
inc
dec
mov
(bad)
mov
fiadd
jno
inc
push
shr
rcl
push
ret
aas
add
les
cdq
int3
jg
push
sbb
and
js
mov
push
ret
inc
pop
mov
call
sahf
inc
cmc
push
adc
mov
xchg
cmp
ss
add
cmp
mov
js
pop
mov
mov
adc
add
fsubr
add
jecxz
jae
pop
out
adc
pop
in
stos
jle
loopne
ficom
and
add
sbb
gs
mov
push
shr
mov
repz
std
jg
aaa
ins
mov
movs
mov
jns
out
out
cmovo
test
push
imul
in
jns
mov
inc
xor
or
mov
mov
xchg
int3
js
inc
test
dec
movs
jne
push
xor
(bad)
sahf
mov
sub
std
mov
xchg
push
adc
stos
loope
inc
pop
xchg
dec
jno
and
mov
movs
or
push
sub
push
adc
das
push
rcr
xchg
leave
jp
je
push
mov
stos
mov
or
sbb
scas
mov
mov
daa
push
call
sbb
xor
js
mov
in
push
push
mov
loopne
js
inc
cmp
test
xor
inc
inc
ins
loopne
mov
xchg
push
(bad)
aas
or
out
sub
xchg
loop
pop
mov
inc
add
push
psubq
dec
in
mov
mov
pusha
cmp
cmp
push
sub
inc
dec
loop
enter
je
popf
pop
(bad)
jmp
mov
xchg
xor
ds
mov
add
pop
adc
rcl
ins
fcom
xchg
dec
cdq
test
(bad)
pop
or
daa
das
and
fisttp
repnz
and
ror
lahf
pop
mov
jl
addr16
sti
mov
xor
pop
ins
lds
aaa
lds
sar
sub
call
xchg
sub
push
xchg
lods
jnp
cmp
or
mov
int
sbb
es
jno
mov
jg
xchg
push
fidiv
xor
loope
movs
xchg
and
and
ins
mov
add
ror
xlat
retf
dec
fidiv
in
pop
lahf
ins
mov
push
xor
add
dec
mov
arpl
push
(bad)
arpl
dec
adc
hlt
mov
and
dec
push
push
ret
scas
popa
xchg
mov
popa
data16
mov
outs
mov
push
push
sbb
sub
shl
and
inc
jns
dec
popa
mov
mov
mov
jbe
xchg
repz
fistp
dec
dec
movs
sbb
or
or
in
retf
add
xor
jbe
cmp
stos
mov
jl
call
gs
sbb
dec
pcmpgtb
mov
add
jbe
aas
mov
inc
not
sub
in
pop
pop
mov
mov
fcmovnu
add
std
retf
pop
sti
jmp
xchg
ret
cmp
test
mov
jbe
mov
cmc
retf
pop
sahf
mov
lods
and
jbe
push
mov
sub
loopne
dec
xchg
and
fsubr
(bad)
and
push
and
pop
mov
mov
divps
sar
push
test
push
data16
add
xor
inc
in
add
mov
xchg
iret
gs
test
dec
push
(bad)
xor
retf
mov
fcmovnbe
mov
push
xor
ret
in
loope
mov
sub
div
pop
aas
cmp
rol
into
add
dec
(bad)
pop
mov
popf
stc
dec
sub
inc
inc
sbb
or
adc
inc
es
in
adc
and
mov
jns
das
cmp
aad
and
xchg
cmp
gs
adc
in
mov
dec
cld
sbb
jmp
jns
pop
hlt
shr
sbb
inc
outs
enter
pop
and
sbb
mov
dec
std
in
or
inc
and
data16
imul
push
popf
lea
in
test
mov
ja
out
mov
inc
xchg
dec
and
push
stos
jl
dec
mov
pop
daa
mov
pop
mov
jge
or
or
push
or
mov
xchg
rep
popa
aas
push
call
sbb
(bad)
es
aas
jns
test
jl
in
cwde
jge
js
push
cli
daa
enter
mov
in
inc
sbb
xchg
outs
push
mov
jae
add
mov
dec
out
sub
(bad)
aam
rcr
push
loop
enter
mov
dec
out
cld
dec
jg
mov
push
jg
xchg
pop
xor
xor
pop
fcomp
push
mov
lock
and
fs
dec
cmp
cmc
pop
and
pandn
xor
inc
and
fsub
push
jo
mov
push
xor
jne
adc
enter
shl
xor
retf
cmp
pop
test
imul
neg
repnz
cmps
and
mov
ja
pusha
inc
scas
(bad)
das
mov
push
sbb
adc
nop
sbb
inc
mov
pushf
mov
stos
aad
xor
imul
mov
ret
xchg
or
push
popf
into
push
mov
xchg
pop
mov
or
xor
dec
lea
add
fnstenv
call
xchg
or
push
inc
sbb
inc
xor
shl
iret
lahf
pusha
mov
arpl
out
cli
mov
out
mov
mov
rol
add
and
mov
sub
mov
and
mov
push
lahf
xchg
dec
mov
inc
cmp
pop
loop
pushf
jmp
xor
sar
xchg
and
xlat
bound
xchg
ja
gs
or
cmps
sbb
(bad)
jb
out
dec
test
xor
dec
pop
imul
xor
clc
dec
mov
add
icebp
(bad)
jmp
xor
icebp
sbb
sub
push
mov
psadbw
rcl
mov
cmc
mov
mov
xchg
push
mov
mov
mov
outs
mov
leave
iret
ds
sti
sahf
and
iret
and
test
(bad)
jne
cmp
fwait
test
sub
scas
xchg
sub
or
test
add
xchg
call
dec
fdivr
sti
fsub
sar
jl
dec
fsubr
mov
sbb
ins
std
cmc
and
and
pop
fcmovbe
cs
test
mov
mov
(bad)
fidivr
outs
xchg
jo
lods
inc
cmps
fmul
jno
out
jmp
imul
out
in
jl
mov
aas
iret
push
cdq
call
pusha
jno
ret
outs
xchg
inc
mov
or
sbb
fdivr
xor
push
xor
jg
mov
ins
push
aas
mov
mov
fidivr
mov
leave
nop
fadd
out
dec
and
ins
pop
stc
push
fdivr
inc
jae
push
mov
jg
adc
adc
repnz
clc
push
sahf
jo
mov
inc
add
loop
jg
jle
ret
dec
and
pop
outs
xor
lds
cmps
fld
mov
jb
aas
xlat
dec
fs
or
push
cmc
ficom
xchg
fs
mov
call
xchg
movs
push
les
cwde
sub
ficom
jne
dec
dec
jg
dec
cmp
movs
jg
cmp
scas
ins
popa
(bad)
dec
lock
mov
jno
les
in
das
or
cmps
xor
retf
dec
mov
(bad)
loop
xchg
out
sub
push
fcomp
xlat
pop
jmp
lock
fisub
xchg
inc
mov
pop
push
shl
inc
in
cmp
mov
xchg
push
int
stos
push
out
mov
in
cs
lods
mov
or
movs
in
push
xor
pusha
sar
xchg
(bad)
inc
inc
daa
xchg
fisub
sub
lahf
dec
(bad)
inc
inc
fadd
mov
je
pop
pop
pop
cmp
mov
shl
(bad)
fld
aas
loope
dec
in
xor
das
cmp
(bad)
jge
add
sbb
test
ss
xor
fs
mov
aam
(bad)
loope
shl
mov
data16
dec
lods
xor
js
cdq
mul
popf
adc
adc
sub
ficom
xchg
rcr
cmp
icebp
aad
jg
xor
ja
hlt
addr16
push
lods
mov
pop
jnp
mov
cmps
clc
shr
inc
jne
ins
pop
pop
stos
jns
pop
jb
pop
outs
inc
les
or
xchg
sbb
(bad)
xchg
adc
mov
sub
mov
adc
loopne
cmp
fild
ss
loop
mov
stc
movs
cld
add
mov
ret
mov
addr16
push
out
mov
ss
sub
mov
loopne
pop
jno
inc
cdq
adc
push
push
imul
in
mov
cmps
stc
sbb
les
scas
and
push
scas
add
ins
in
out
aam
je
stos
cmps
xchg
sub
(bad)
test
pushf
imul
movs
jbe
fwait
dec
int
xchg
pop
or
push
pusha
and
inc
(bad)
hlt
in
xchg
stos
push
in
adc
xlat
pusha
(bad)
jle
jmp
(bad)
loop
sbb
sbb
cwde
out
cmp
jmp
popa
mov
out
sahf
cwde
jo
dec
mov
mov
je
pop
aas
inc
imul
je
cli
pop
dec
mov
cld
(bad)
(bad)
ins
push
daa
add
push
lds
mov
xchg
into
or
in
xor
dec
frstor
test
jno
dec
xchg
push
dec
mov
jbe
adc
pop
push
(bad)
xor
loope
hlt
icebp
sar
imul
enter
repz
inc
or
sbb
popf
mov
test
icebp
aam
call
ins
dec
test
fucomi
(bad)
mov
stos
ficomp
and
call
add
add
adc
cmc
push
mov
(bad)
ret
outs
lea
sti
add
retf
in
inc
xchg
imul
mov
(bad)
rol
jo
popf
inc
cmp
add
test
or
pop
cmp
xor
or
sub
xchg
mov
js
xchg
imul
jo
mov
and
push
(bad)
repz
cmps
jo
inc
lock
daa
sub
cld
hlt
lock
mov
xor
mov
jp
(bad)
mov
cld
cmp
mov
pop
xor
outs
movs
pop
and
jns
xor
(bad)
xor
mov
ret
test
mov
and
loopne
jp
mov
ja
mov
dec
mov
out
(bad)
int3
pop
ret
bnd
data16
and
repz
in
mov
jl
into
adc
(bad)
xlat
add
pop
fisubr
xor
or
inc
js
sub
jmp
je
push
mov
push
popa
out
fwait
mov
fstp
xor
retf
pop
sub
cwde
shld
mov
ret
mov
mov
fwait
inc
xchg
fimul
add
inc
das
(bad)
fmul
jae
adc
mov
pop
add
(bad)
jle
test
cwde
stos
xor
clc
mov
mov
xor
sbb
ss
dec
adc
addr16
sbb
dec
pusha
loopne
mov
or
ret
xor
xor
xor
dec
jbe
in
movs
sub
mov
daa
dec
fisub
in
jge
jbe
test
pmaddwd
push
add
dec
cld
pop
outs
sub
push
jle
sbb
mov
clc
xchg
mov
retf
pop
mov
cmp
shl
xchg
xchg
pop
pop
shl
mov
and
fbstp
stc
inc
call
ret
add
xchg
and
sahf
xchg
jbe
push
fistp
fcomp
and
fistp
and
push
cmp
clc
cmp
mov
dec
(bad)
(bad)
fstp
fs
mov
and
fist
and
sahf
adc
test
test
add
call
or
sbb
sub
ret
or
sti
fisub
mov
inc
add
aad
jb
out
jo
and
pop
dec
xchg
stos
jg
out
jle
nop
retf
(bad)
xchg
aas
xlat
jg
cmps
cmps
xor
in
xor
icebp
ret
mov
ins
aad
cmp
rcr
xor
sub
xchg
cwde
cmp
loop
cli
cdq
call
sbb
xor
jno
fidivr
mov
aam
fisub
sti
pop
daa
out
jns
push
test
mov
push
stc
mov
sahf
cmp
pop
call
fld
sahf
jg
test
outs
push
bndstx
mul
mov
aaa
or
nop
fistp
dec
sub
dec
ins
cdq
mov
sub
inc
ret
inc
push
inc
push
xor
lahf
retf
mov
and
sbb
sbb
inc
movs
lock
(bad)
dec
mul
or
popa
jmp
out
pop
call
pop
add
in
mov
lds
cmp
je
in
sub
xor
in
fcmove
(bad)
icebp
jecxz
jae
test
xor
add
mov
mov
je
sub
sub
retf
or
push
sbb
push
ret
push
fsub
sub
cmps
call
ficomp
inc
ror
cmc
rcr
xchg
ret
loop
dec
jmp
scas
pop
hlt
inc
pop
scas
mov
sbb
test
sysenter
push
fst
xchg
xor
mov
xchg
inc
dec
push
hlt
je
mov
jg
sbb
sbb
shl
loopne
cmp
(bad)
and
or
arpl
enter
(bad)
and
xchg
inc
fisttp
lods
xor
daa
push
mov
pop
adc
std
mov
lods
jge
div
(bad)
dec
or
add
div
call
ror
psraw
mov
fidiv
fstp
mov
call
into
mov
sub
jg
mov
jno
and
scas
rcl
pop
bnd
mov
call
cwde
dec
or
gs
push
mov
pusha
push
gs
xchg
js
mov
nop
add
push
loop
dec
jge
inc
jecxz
test
div
hlt
xchg
outs
or
mov
cmc
sar
aam
add
inc
jmp
loopne
lea
test
push
arpl
xchg
(bad)
std
add
data16
ror
(bad)
and
shr
sub
lea
add
cs
cmp
(bad)
xchg
shl
aam
lahf
mov
jl
mov
push
xor
pop
inc
sti
gs
fisttp
jmp
leave
mov
xchg
out
mov
shl
and
mov
adc
inc
(bad)
xor
neg
cs
mov
mov
into
rcl
pop
stos
or
cmps
inc
call
xor
add
ins
mul
adc
enter
loope
into
inc
in
fdiv
mov
push
in
imul
or
jns
or
bswap
or
sub
imul
mov
pop
xlat
call
bound
repz
mov
sbb
jge
xor
pop
ds
inc
mov
pop
pushf
xchg
mov
adc
es
or
dec
cld
(bad)
loope
jns
or
data16
push
xchg
or
sbb
es
mov
stos
xchg
and
sub
mov
xor
lea
pusha
mov
rcr
imul
mov
pop
inc
inc
inc
xchg
adc
pop
mov
pop
aas
dec
inc
mov
(bad)
mov
cdq
lahf
or
mov
or
or
fbstp
stos
fwait
(bad)
xchg
mov
ret
mov
(bad)
cmp
dec
or
push
jmp
mov
jge
inc
cs
pop
ror
gs
imul
repz
dec
in
cmps
out
outs
jb
cwde
(bad)
aam
scas
push
pop
test
loop
adc
fild
jmp
out
inc
ss
arpl
test
xlat
je
mov
or
add
and
mov
ins
js
add
jge
sbb
mov
inc
hlt
cmp
fnstcw
test
add
sbb
jp
and
lods
add
inc
inc
sub
and
das
pushf
mov
leave
nop
dec
and
and
pop
rol
sub
mov
int
outs
jg
pusha
xchg
in
sub
jmp
test
mov
scas
inc
mov
das
and
int3
pop
ror
rcr
push
out
xor
fprem
push
(bad)
mov
adc
(bad)
int
add
mov
or
jo
cmp
mov
test
jge
xlat
aaa
sar
inc
mov
mov
mov
aaa
in
mov
sub
pop
push
test
(bad)
pop
shl
jb
in
inc
mov
mov
int
mov
dec
sub
cs
mov
add
add
cmp
ret
dec
cwde
jg
in
pop
pop
push
mov
cli
mov
mov
out
pushf
adc
adc
push
test
test
xor
stos
outs
mov
or
xor
mov
inc
mov
inc
or
xor
and
xchg
test
xor
add
jle
dec
ret
pop
dec
retf
adc
inc
call
xlat
or
or
sub
addr16
or
(bad)
stos
jl
cmp
inc
arpl
cmp
cdq
fadd
jo
xchg
paddsb
and
fcomp
adc
call
arpl
or
mov
push
gs
xor
movs
xlat
jb
aad
in
and
int3
into
jp
push
jg
jecxz
out
shl
lds
fwait
int3
jbe
cmps
repz
mov
add
xlat
push
cmp
push
mov
out
sbb
fnsave
adc
call
nop
dec
push
dec
dec
fwait
ret
es
inc
or
in
outs
dec
fstp
iret
sbb
adc
movs
lods
dec
imul
xchg
rcl
jb
(bad)
cwde
imul
pop
test
xor
jne
pop
add
scas
inc
outs
in
daa
mov
or
mov
lods
lods
mov
cmp
fiadd
es
xor
outs
mov
mov
sahf
(bad)
cwde
sbb
mov
xor
pop
jg
inc
shld
mov
loop
addr16
mov
jnp
xchg
call
and
add
in
stos
call
and
out
push
cmp
cmps
mov
jnp
fisttp
enter
out
in
retf
adc
xor
pop
mov
sub
cmp
xor
out
(bad)
mov
mov
jo
movs
xchg
cmp
add
cmp
mov
push
pop
mov
je
or
xchg
ret
sbb
arpl
ret
retf
add
pop
jae
pushf
loopne
daa
rcpps
ret
pop
scas
dec
cmp
fistp
out
enter
xchg
cs
fistp
es
fild
mov
dec
test
add
and
jb
test
lods
jb
ret
adc
mov
sub
and
cmc
fsubp
pop
dec
leave
aad
(bad)
jle
movs
lods
mov
jbe
sub
or
and
jmp
addr16
sar
fcomip
dec
and
daa
push
test
ins
dec
jle
das
cwde
cmp
fadd
jne
dec
stc
dec
pop
ret
jno
movs
and
push
jl
cmps
xor
jp
xor
push
inc
push
pop
mov
lods
dec
adc
scas
(bad)
xor
and
xchg
and
stos
sub
stos
add
jp
dec
paddb
push
clc
mov
xor
adc
adc
test
dec
sub
jge
push
sbb
(bad)
push
out
aaa
pop
arpl
into
and
jo
imul
pop
(bad)
cmp
pop
punpckhdq
mov
mov
pop
in
enter
imul
aaa
sahf
ror
ror
push
pushf
repnz
lods
adc
cmp
rep
xor
cdq
stos
sub
push
sub
sub
inc
pop
cmps
fnstcw
mov
loope
mov
lds
leave
test
push
sti
aas
push
fs
rcl
push
inc
xchg
shl
jbe
inc
xchg
lods
or
xor
xchg
aad
test
ins
xchg
mov
jmp
add
adc
pop
push
(bad)
cmp
sbb
push
adc
cmc
xchg
xor
out
sbb
nop
fld
cmp
sub
xor
pop
bound
mov
les
xor
mov
inc
pop
pop
ret
jmp
inc
cmp
mov
lds
enter
scas
inc
xchg
jmp
cmps
cmp
icebp
jmp
push
call
fwait
bnd
pusha
out
cld
scas
xor
dec
dec
(bad)
out
fistp
mov
sbb
push
cmc
cmp
nop
les
pop
mov
cmp
sbb
xchg
mov
mov
push
jge
or
push
in
ins
jbe
ins
jmp
je
jne
lds
(bad)
or
and
ss
cmp
jnp
pop
aam
add
ficom
xchg
push
fs
imul
push
out
(bad)
xlat
adc
sbb
retf
aad
push
(bad)
rcl
movs
ficomp
inc
loopne
sub
aaa
mov
leave
jl
mov
add
jecxz
inc
xor
or
int3
outs
push
inc
add
clc
cdq
loope
and
ficom
inc
add
xchg
dec
and
fmul
sbb
loope
loope
jmp
pop
mov
and
fwait
js
test
retf
push
retf
call
jae
movs
push
and
jo
or
aaa
scas
push
xchg
pop
push
ins
clc
call
jno
jl
leave
and
sbb
mov
sbb
sbb
sbb
or
xchg
jne
dec
adc
dec
sbb
push
xor
add
pop
sysexit
out
xor
sub
or
ins
xchg
push
fbstp
aaa
and
mov
sub
mov
fisub
fwait
(bad)
dec
jns
call
push
aas
mov
nop
data16
mov
pop
jo
sbb
loope
mov
pusha
push
cmp
test
mov
mov
push
xchg
jmp
ret
cmp
add
sbb
dec
xor
scas
loop
pusha
jns
lods
test
sbb
and
cld
sbb
retf
movs
push
in
mov
xor
mov
test
aam
dec
jmp
xchg
(bad)
add
rcr
mov
jge
sub
xchg
cmp
jns
add
(bad)
je
or
jge
std
jns
std
push
gs
outs
push
jnp
sub
sbb
mov
in
inc
add
das
je
xchg
fisub
enter
dec
sbb
cwde
xchg
pop
in
adc
lahf
sbb
xor
rcl
test
sub
or
es
xchg
fs
mov
aad
test
std
int
dec
test
push
mov
cmp
push
jl
push
inc
cmp
outs
mov
adc
mov
out
fwait
and
pop
loop
jmp
inc
jle
jae
call
dec
xlat
jae
push
jmp
cs
cmps
sub
or
mov
xor
retf
ret
mov
popf
xchg
mov
xor
test
sti
jmp
and
sbb
xchg
lods
mov
std
adc
aas
(bad)
and
dec
mov
xchg
mov
push
(bad)
pop
test
jmp
inc
lahf
pop
and
int3
aas
bound
das
adc
mov
mov
stos
lahf
xchg
fcmovne
std
test
xor
loop
push
test
cli
ret
or
dec
cmp
adc
dec
mov
and
mov
jne
mov
inc
jg
adc
push
mov
adc
or
add
neg
xchg
mov
inc
push
sub
mov
imul
pop
cmp
mov
in
pop
fist
popf
xor
cmps
or
add
sar
sbb
int
in
imul
pop
ror
int3
dec
stos
push
push
les
inc
cmp
jne
(bad)
ins
std
sub
push
sbb
push
in
dec
xchg
xchg
xchg
aam
jp
mov
sahf
push
sbb
and
out
mov
xchg
mov
stc
xlat
shr
mov
add
stc
adc
fist
mov
push
sub
fnsave
shl
dec
xchg
and
ss
mov
jge
adc
je
addr16
pushf
xchg
ins
inc
outs
push
inc
imul
mov
mov
fs
xchg
lock
pop
push
adc
(bad)
dec
add
xor
in
ror
or
add
pop
mov
hlt
sub
in
movs
mov
sub
sbb
test
test
mov
(bad)
stos
or
test
mov
jmp
lea
cmp
pop
cmps
out
add
jb
inc
sub
jmp
ret
(bad)
dec
jg
sbb
in
retf
mov
mov
mov
xor
cmps
xchg
xchg
inc
adc
fs
cmp
rcr
jne
sub
pushf
xchg
push
into
or
ret
gs
ror
xchg
cmp
adc
sub
call
xchg
inc
test
mov
je
or
lahf
xchg
and
add
in
and
pop
mov
fist
rcl
inc
mov
xor
jnp
fisttp
fcom
or
les
sar
cwde
in
aaa
inc
ret
push
leave
pop
jmp
mov
mov
sbb
cwde
sub
adc
inc
int
adc
or
test
adc
jmp
mov
or
int3
mov
es
sbb
inc
inc
push
add
mov
loop
cwde
imul
push
ins
cmp
test
dec
add
lods
aad
add
and
popa
fstp
jns
jmp
adc
add
dec
pop
adc
and
mov
add
imul
rol
aaa
mov
shr
or
pop
pop
or
cwde
out
xchg
fwait
dec
retf
and
aas
mov
aad
int3
out
scas
nop
js
mov
fsub
sar
xchg
in
fdivr
mov
ret
aad
dec
scas
sub
push
retf
jmp
mov
in
popa
mov
cmp
cmovae
and
inc
or
jp
add
fxtract
lock
clc
(bad)
mov
inc
adc
cwde
inc
push
cs
mov
dec
cmp
mov
adc
mov
mov
mov
mov
out
pusha
test
ins
jno
fistp
(bad)
jmp
outs
sub
xchg
outs
arpl
je
fcom
lahf
ins
arpl
imul
inc
test
pop
(bad)
or
rcr
sub
cmc
and
mov
xchg
sub
mov
cmp
loopne
push
stc
cmp
jo
sbb
ss
lock
(bad)
mov
xchg
mov
loopne
push
scas
add
fcomp
retf
xor
arpl
xor
sub
out
out
call
xchg
fsubr
push
mov
xchg
imul
icebp
shl
sbb
adc
jae
xor
mov
dec
inc
movs
pushf
and
pop
xor
je
ror
popa
rol
(bad)
movs
push
cmc
mov
cmp
(bad)
mov
cmp
xchg
cmps
jg
mov
mov
cwde
jmp
cwde
mov
pop
repnz
lds
rol
shr
mov
iret
lahf
pop
lahf
scas
hlt
in
adc
fiadd
mov
les
fld
sbb
jg
movs
push
pop
push
pop
push
push
int3
push
mov
add
out
fs
xor
or
loopne
leave
ret
loope
mov
lods
fisub
faddp
retf
or
scas
imul
in
test
and
jle
popa
pop
push
je
mov
mov
push
out
mov
sbb
sbb
lods
xor
cs
enter
ret
leave
retf
mov
push
outs
jle
dec
pop
push
dec
cmps
aas
sub
rcr
pop
nop
or
fistp
stc
out
maskmovq
neg
or
and
xchg
adc
cli
ss
cmp
es
dec
or
xor
imul
cmps
leave
dec
(bad)
into
aaa
ret
clc
jno
outs
xchg
pop
ins
dec
stos
jno
call
add
dec
dec
mov
mov
(bad)
mov
mov
or
fs
test
mov
and
int
sahf
sti
mov
dec
gs
jecxz
out
test
xchg
cld
mov
mov
mov
xor
mov
jne
out
jno
sbb
pushf
stc
jmp
mov
push
in
add
imul
push
sub
data16
pop
cmp
lock
test
(bad)
xchg
jmp
lahf
stos
jg
hlt
cs
push
mov
jmp
inc
leave
cmp
xor
scas
and
lds
push
lock
bound
sbb
mov
mov
scas
fild
cmp
mov
xchg
mov
(bad)
push
retf
xor
sbb
cld
mov
cmp
dec
shl
(bad)
pop
cmp
jo
lahf
add
inc
es
pushf
and
cwde
cmp
gs
fwait
xor
jae
les
and
les
orps
ds
popf
call
push
pusha
enter
iret
adc
cli
pop
pop
xchg
jle
nop
aaa
dec
xchg
mov
mov
adc
shl
call
dec
mov
add
push
call
mov
jnp
sub
dec
aad
hlt
inc
dec
pop
cmps
cmp
lods
call
add
inc
jmp
dec
test
mov
mov
dec
push
cmc
sar
jl
add
mov
popa
inc
test
mov
push
js
pop
push
jle
dec
ja
jae
leave
xor
test
cmp
fdivr
inc
xor
das
add
or
mov
mov
adc
outs
adc
and
sub
cld
sahf
and
cmps
and
not
jle
cmps
bound
ror
repz
outs
jge
rsm
pop
ret
and
inc
mov
into
mov
jb
or
imul
pop
add
push
jg
jle
lahf
push
sbb
inc
push
xchg
scas
or
and
xor
out
js
adc
loop
int3
cwde
fild
popf
nop
and
jp
sahf
pushf
loopne
daa
jmp
mov
sbb
xchg
sbb
push
pushf
neg
push
test
int
jb
out
das
arpl
mov
bound
sahf
cld
test
sahf
in
into
push
stos
mov
xchg
int
inc
js
push
jmp
mov
dec
movs
or
ret
adc
xchg
lods
retf
jmp
or
jge
sbb
mov
(bad)
pop
jo
movs
bound
fwait
mov
mov
retf
adc
add
mov
out
mov
shl
popf
les
bound
call
mov
jae
xchg
inc
repz
in
ja
pop
sbb
jo
jbe
daa
ret
or
cmp
(bad)
xlat
gs
and
mov
mov
xor
(bad)
sub
repz
movs
cdq
repz
rcr
xchg
pop
push
fst
sub
cmp
or
fcomp
in
mov
(bad)
out
xchg
in
leave
inc
or
adc
pop
sbb
xchg
repz
shl
push
xchg
xor
iret
add
sub
and
and
inc
fwait
pushf
push
pop
test
and
(bad)
jmp
rol
inc
xor
xchg
fs
in
outs
mov
push
and
or
fadd
fild
imul
daa
and
and
scas
enter
shr
and
xor
dec
mov
sub
dec
test
nop
pop
loop
adc
fidiv
fstp
add
mov
xor
rcl
std
mov
cmc
add
fmul
xor
or
push
mov
pusha
js
xchg
lock
lds
mov
sub
popa
inc
add
jp
sbb
dec
aaa
outs
fwait
inc
js
mov
jmp
dec
out
and
or
je
es
fist
push
loope
add
push
sti
retf
mov
cmp
bound
fisub
in
xor
jg
cmp
test
add
repnz
adc
js
loopne
je
lahf
cwde
gs
lods
mov
xchg
and
in
arpl
sti
or
and
dec
xchg
mov
fisub
(bad)
div
jp
xchg
and
pop
push
cmp
push
int3
test
and
out
dec
jb
and
push
add
int
inc
mov
idiv
hlt
pop
lds
test
cmp
loop
out
pop
cmp
mov
and
outs
shl
loope
(bad)
pop
pop
sahf
loopne
out
das
adc
cmc
pop
xor
les
ret
inc
mov
add
(bad)
out
jne
mov
push
fiadd
retf
jecxz
xor
shl
xchg
in
jp
adc
pop
mov
lock
gs
or
cmps
cmp
xchg
mov
and
outs
xchg
mov
aaa
je
popa
xor
shr
daa
bnd
mov
sbb
icebp
int
jmp
sbb
test
mov
sahf
adc
movs
ret
xchg
xor
pop
rcr
movs
ins
push
mov
push
bswap
sbb
cmp
fs
or
out
dec
pop
sbb
shr
sti
sub
retf
call
stos
je
popf
xchg
push
mov
xlat
inc
out
jg
cmp
xchg
dec
jo
call
xchg
scas
mov
add
scas
inc
jmp
jmp
xchg
push
jns
sbb
std
adc
xchg
jg
into
sub
pop
mov
fist
movs
out
and
push
stos
cld
push
xchg
xchg
inc
pop
mov
and
outs
test
fidivr
and
cmp
sub
pusha
sbb
aaa
inc
popa
mov
mov
xchg
repz
imul
int
imul
xor
jecxz
les
pop
hlt
or
dec
rol
add
cmp
out
(bad)
mov
dec
(bad)
stos
jo
lods
add
cli
mov
retf
retf
inc
jne
adc
in
fbstp
gs
stc
ret
lods
or
(bad)
ret
lods
clc
cmp
scas
shr
hlt
mov
cmp
fld
test
sub
dec
sub
cmp
ins
arpl
in
mov
mov
movs
jnp
jmp
scas
jb
inc
mov
push
stos
fs
cmp
xchg
sahf
shr
sbb
scas
bound
and
dec
and
add
sti
xor
and
push
mov
cmp
fstp
push
xor
pop
aas
push
fisttp
or
sub
and
xor
dec
jmp
xchg
and
mov
add
add
jp
(bad)
mov
fbstp
mov
add
test
add
fmul
mov
sbb
dec
ds
mov
push
rcl
sbb
mov
scas
jge
xchg
mov
or
repnz
dec
or
je
lahf
mov
xor
jo
mov
mov
sbb
sbb
out
xor
mov
pushf
out
jmp
and
push
inc
mov
push
(bad)
jb
int
or
fdiv
fld
lahf
mov
nop
ds
dec
fsub
sti
sbb
jecxz
data16
rcr
sub
add
iret
push
cmc
into
arpl
in
mov
pop
js
test
xor
xchg
mov
pop
fist
adc
aam
adc
xchg
mov
sti
iret
and
jns
sahf
xor
jle
jmp
xlat
movs
lods
ss
jmp
mov
inc
dec
inc
mov
cmp
jge
add
push
sbb
jno
ins
outs
pop
inc
stc
push
retf
mov
xchg
(bad)
repnz
inc
push
mov
(bad)
cmps
jno
lods
mov
jns
xchg
push
in
mov
sub
and
and
iret
in
add
daa
adc
icebp
mov
push
lahf
jmp
sbb
cmps
imul
and
in
mov
in
daa
call
push
jb
aam
cmp
jmp
push
adc
jae
dec
xor
test
and
sub
(bad)
bound
sbb
retf
or
test
jmp
or
or
inc
es
pop
inc
cld
daa
leave
ret
fdivr
cwde
jecxz
sub
scas
lock
out
shl
sub
add
push
sub
sbb
in
and
shl
iret
mov
pop
repz
in
jns
out
(bad)
xchg
inc
xchg
push
in
cmp
sbb
retf
dec
lods
cdq
retf
mov
cmps
popf
(bad)
shld
clc
fist
cdq
mov
mov
in
imul
mov
adc
mov
and
js
mov
pop
sub
jmp
inc
dec
sar
loopne
shl
push
xrelease
imul
mov
in
into
call
jbe
repz
xchg
pop
xchg
leave
daa
loop
adc
sbb
pusha
xor
out
jl
xor
dec
xchg
lea
mov
xchg
loope
addr16
mov
int
inc
inc
sub
div
jmp
mov
jno
repz
push
dec
out
sbb
movs
xor
or
sahf
retf
jl
cmp
xchg
sbb
std
jle
mov
cmp
and
mov
jbe
fsubr
(bad)
and
leave
inc
cmc
test
shr
jmp
add
std
mov
push
test
dec
mov
hlt
in
jge
xchg
mov
mov
push
pop
div
rol
or
mov
sub
test
inc
(bad)
sub
test
inc
dec
add
pop
retf
(bad)
loopne
aam
mov
add
lea
push
lea
outs
pop
movs
rcl
push
sub
xor
pushf
aad
(bad)
imul
pop
scas
pop
pop
out
setne
nop
push
dec
test
mov
fst
or
sbb
jo
iret
or
or
mov
mov
cld
sub
or
xor
shr
std
in
out
add
je
fldcw
push
mov
ret
iret
push
add
addr16
cdq
add
or
and
push
cmp
dec
push
add
cmp
retf
xchg
rep
mov
and
push
jno
jl
mov
int
adc
mov
in
jecxz
jb
rol
mov
sub
loop
outs
fwait
dec
cli
(bad)
fldenv
or
mov
xchg
cmps
xor
stos
inc
mov
lds
sti
xchg
in
jbe
jge
adc
inc
stc
mov
imul
shr
sub
int3
dec
jnp
sbb
ret
pop
mov
popf
inc
into
das
(bad)
cmp
mov
pop
push
xchg
jbe
fisub
and
mov
call
scas
mov
imul
xchg
add
int3
jle
rcl
push
push
pop
icebp
outs
push
xchg
xchg
das
popa
imul
(bad)
sar
xor
push
mov
xchg
push
loope
sbb
iret
inc
scas
and
inc
dec
lea
lea
sub
loopne
mov
xlat
add
aam
cli
sub
push
push
in
xchg
inc
sahf
push
call
xor
movs
pushf
es
fnstcw
dec
mov
and
push
test
mov
(bad)
(bad)
cmp
dec
sub
mov
pop
ja
ds
push
mov
xor
sbb
mov
adc
jle
std
xor
call
test
cmp
add
mov
mov
outs
xor
adc
pop
xchg
push
jne
test
clc
div
out
(bad)
aaa
clc
pop
sti
sahf
fcmovnb
bound
inc
(bad)
hlt
or
mov
sti
mov
icebp
shl
adc
push
dec
mov
ds
shr
mov
adc
mov
fcmovu
jl
fwait
out
mov
add
icebp
xor
mov
mov
and
push
daa
repnz
sbb
dec
xor
call
mov
in
pop
jl
push
adc
inc
cmc
in
sbb
adc
mov
jmp
mov
xor
mov
mov
repz
inc
or
adc
in
or
fisubr
iret
aas
push
repnz
pop
dec
rcl
jns
push
call
pop
or
mov
xchg
mov
loop
xor
pop
add
sbb
imul
adc
movs
les
fadd
in
fsubr
push
pop
or
push
lods
push
shr
popa
icebp
dec
or
rol
outs
popa
inc
enter
sti
fstp
lods
inc
push
and
jmp
or
repz
iret
pop
lock
outs
mov
xchg
sub
ss
mov
dec
xor
or
les
shl
ja
adc
data16
mov
pop
enter
aad
inc
call
mov
jle
iret
mov
pop
jo
stos
into
rol
and
arpl
mov
test
mov
aam
mov
jne
inc
ret
push
test
adc
ins
sub
(bad)
jae
int3
mov
loopne
sbb
xchg
xchg
xchg
pop
sub
pop
(bad)
mov
adc
(bad)
mov
fild
mov
mov
add
idiv
(bad)
in
sub
es
cmps
pop
inc
test
jl
stos
aaa
retf
or
mov
adc
pop
mov
loope
int
pushf
stos
js
add
jl
gs
jno
in
mov
jmp
push
and
imul
mov
push
jns
mov
into
ret
or
or
jmp
add
imul
pop
sub
mov
pop
and
or
leave
lods
cmp
pop
cmp
push
jnp
call
pop
inc
sbb
jb
lods
adc
jae
enter
pop
add
shl
xchg
adc
ror
jle
lahf
jmp
pop
pop
dec
sub
add
pop
je
out
and
and
addr16
ja
bound
jo
imul
adc
int3
adc
(bad)
fsubr
sbb
pop
fidivr
out
adc
hlt
call
iret
out
fmul
push
pop
push
aas
fld
leave
std
(bad)
mov
fiadd
gs
xchg
adc
jns
int3
mov
scas
into
fcom
and
push
ret
repz
inc
mov
bound
jo
std
push
push
(bad)
jge
xor
mov
push
dec
or
xchg
mov
sbb
pushf
pop
add
repz
idiv
push
mov
add
push
dec
sbb
retf
(bad)
cmp
jnp
(bad)
push
pop
and
sti
mov
inc
dec
sbb
jne
inc
jmp
sub
imul
clc
cmp
mov
xchg
push
cmp
lods
cwde
mov
pop
int
xchg
popf
adc
sbb
pop
test
loop
or
push
pop
repz
ins
mov
mul
imul
outs
cmp
add
sub
jp
(bad)
into
out
stc
fsub
jp
mov
mov
xor
out
addr16
(bad)
aas
sub
inc
mov
lods
loope
(bad)
fistp
and
adc
cs
add
out
call
sahf
ficom
cmp
dec
daa
or
xchg
or
popa
xchg
fisttp
cmps
xchg
add
cmp
lea
cmovne
add
push
cld
cmp
adc
lods
xor
pop
int3
xchg
cmp
mov
push
rol
dec
dec
icebp
jb
icebp
test
push
test
jge
add
sub
inc
mul
cmps
cmp
and
pop
pop
or
lahf
sbb
sbb
dec
jns
jmp
mov
pushf
rol
pop
mov
cdq
pop
ds
imul
popa
jp
xor
das
xor
fstsw
pop
dec
mov
push
add
jne
jg
push
mov
pop
sub
aaa
div
dec
shl
lods
inc
mov
shl
ficom
and
jnp
repnz
outs
mov
pop
int3
jno
push
push
fnstsw
cmp
mov
cmp
or
jmp
jl
fstp
xchg
arpl
push
jae
sbb
add
or
xor
cdq
js
gs
mov
cli
inc
enter
or
mov
mov
inc
or
sub
icebp
cs
lods
adc
xchg
adc
lods
add
out
pop
iret
jbe
dec
adc
mov
icebp
xchg
mov
jo
mov
out
ja
push
ret
mov
aam
and
in
ret
jle
movs
xchg
cmc
rol
cmps
test
sbb
mov
js
aam
int3
hlt
inc
mov
scas
dec
adc
nop
mov
es
dec
test
xchg
mov
popf
jno
jno
movs
push
inc
cld
cmp
outs
lahf
sbb
inc
int3
mov
jp
jo
add
aad
push
jnp
imul
adc
nop
dec
push
pcmpeqb
leave
push
xor
rcl
pop
out
cmc
and
cli
jns
lea
mov
or
and
xchg
dec
push
aad
leave
out
into
add
mov
movs
in
jle
sti
inc
sbb
adc
sahf
or
mov
in
(bad)
or
loope
mov
sub
(bad)
out
adc
cmp
fcom
scas
sub
ss
cmp
div
xor
pop
sub
xor
or
cmps
sub
popf
stc
mov
xchg
int3
xchg
or
and
or
ror
cdq
leave
rol
test
mov
aad
ret
ins
mov
mov
or
pop
int
mov
push
and
imul
pop
leave
inc
or
pop
nop
fistp
cli
test
dec
cmp
aam
xor
lods
add
mov
cmp
lds
bound
fcomp
pop
dec
(bad)
pop
cmp
es
add
adc
pop
(bad)
mov
dec
and
jne
out
sahf
push
mov
push
push
mov
sbb
sbb
mov
add
test
fdiv
test
jmp
mov
push
cwde
ret
mov
adc
cmps
int3
ret
mov
push
mov
jle
add
dec
jge
out
jae
sub
hlt
pop
(bad)
gs
leave
jae
ret
in
jnp
pop
test
call
sbb
movs
and
ret
cmp
mov
xchg
cs
mov
ds
push
adc
stc
div
mov
sub
in
cld
(bad)
ss
aad
sbb
hlt
adc
cmps
(bad)
test
rol
je
jmp
mov
je
in
out
push
xchg
pop
out
and
xchg
in
into
out
push
aas
ret
test
pusha
or
out
push
mov
mov
inc
mov
jno
out
mov
or
mov
push
pop
xor
(bad)
xor
adc
lods
adc
test
push
clc
sbb
in
mov
enter
fist
fstp
gs
test
rcl
adc
adc
fistp
dec
rcl
aaa
and
add
in
mov
in
mov
bound
in
and
aaa
daa
imul
gs
pop
mov
pop
hlt
xor
shl
add
jmp
pop
jmp
fld
pop
fst
or
pop
(bad)
push
mov
push
or
inc
adc
pop
movs
jnp
out
mov
fucom
cmp
das
imul
retf
push
push
fwait
jp
arpl
stos
mov
jne
inc
mov
xchg
inc
fldcw
dec
lods
mov
bnd
sub
ins
movs
fistp
loopne
and
inc
retf
cld
mov
scas
pushf
adc
sbb
add
inc
out
bound
imul
sub
mov
sub
mov
cmp
or
or
cmp
xchg
push
fild
scas
je
ret
je
xlat
fidiv
mov
mov
and
sub
jle
cmp
(bad)
push
mov
repnz
mov
mov
dec
xlat
rcr
aam
les
movs
mov
push
rcl
shl
mov
aam
ds
mov
jno
aam
loop
enter
add
xor
std
push
imul
or
jmp
mov
in
ins
pop
cmp
out
dec
icebp
test
push
imul
cmp
dec
inc
inc
adc
add
mov
mov
mov
adc
push
xor
dec
adc
(bad)
std
retf
shr
mov
pop
in
lea
cli
sub
sub
dec
and
pop
and
or
retf
push
mov
cmps
and
call
ins
pusha
jo
adc
sbb
aas
push
fs
lods
(bad)
mov
xchg
xor
dec
outs
ficomp
xchg
push
je
test
and
shr
xchg
das
cmps
icebp
pop
push
dec
dec
push
pop
push
inc
shl
out
or
pop
and
mov
aam
retf
push
pop
jecxz
push
xchg
enter
test
mov
sbb
clc
xor
leave
xor
fsub
jnp
xchg
sub
int3
leave
sbb
aaa
int
(bad)
mov
ret
in
push
cld
sahf
mov
clc
imul
cmp
lea
imul
xor
or
xor
add
stos
repz
adc
inc
pop
mov
pop
cmc
dec
ss
imul
cld
jbe
in
mov
or
mov
les
out
test
in
xor
outs
gs
cmp
scas
sub
fisubr
in
xchg
or
(bad)
cmp
adc
push
cmps
addr16
(bad)
xchg
or
rcr
mov
or
into
jbe
sar
aas
loopne
inc
leave
lea
les
adc
mov
(bad)
fstp
in
(bad)
in
retf
pop
and
xor
mov
pop
pop
mov
or
aas
bound
aam
mov
ja
push
(bad)
jae
not
lahf
add
fnsave
out
mov
iret
test
lods
fs
rol
mov
retf
push
lods
ret
sbb
rol
sbb
or
mov
inc
and
cli
test
sahf
pop
inc
cmp
xor
jecxz
jl
push
lock
cmp
adc
call
sub
test
jmp
jae
mov
vldmxcsr
cli
push
inc
fbstp
ins
adc
dec
and
adc
fcomp
loopne
imul
adc
ficomp
movs
and
repnz
add
fs
or
xor
std
and
push
mov
cmp
dec
shr
push
imul
aaa
xchg
xor
pshufw
shl
cmp
ja
mov
and
cmps
jns
xchg
aaa
(bad)
fistp
scas
mov
imul
add
sub
pop
jno
das
cdq
and
jb
jbe
dec
mov
pop
rol
sub
test
pop
repnz
out
scas
push
std
dec
cmps
mov
and
mov
sub
sub
xchg
sbb
mov
sahf
retf
push
mov
ds
and
cmp
xlat
shr
adc
das
inc
outs
pop
call
ds
push
jmp
pop
xchg
icebp
cli
mov
mov
les
mov
pop
dec
gs
pop
mov
cli
or
into
xchg
jno
mov
aam
sahf
cmps
mov
cmp
push
in
jno
sub
pop
cmp
out
xchg
or
cmp
inc
rol
add
mov
xor
stos
lock
jp
jb
cmp
and
(bad)
icebp
xchg
mov
cs
push
inc
dec
bound
dec
mov
mov
jl
xor
mov
(bad)
mov
mov
jmp
adc
sub
js
or
mov
and
(bad)
ins
push
sbb
dec
mov
jbe
and
cmp
or
dec
je
dec
cmps
xchg
(bad)
aam
ja
or
dec
sub
mov
pop
xchg
lods
xchg
push
mov
fdiv
ja
retf
and
mov
in
(bad)
fadd
out
(bad)
xchg
test
dec
cmps
pop
cmp
call
xchg
(bad)
adc
sbb
mov
pusha
pop
push
movs
and
mov
sub
xchg
test
stos
dec
dec
add
add
in
cmc
inc
push
or
or
ret
push
xor
push
push
leave
call
add
movs
push
sbb
out
lods
sub
sub
hlt
dec
push
(bad)
jno
push
retf
ror
fdivr
sub
mov
sbb
shld
inc
mov
gs
sbb
loop
rol
loopne
pushf
sbb
add
jecxz
mov
or
mov
mov
ret
xchg
retf
pop
ins
xchg
pop
dec
mov
and
jmp
fwait
repz
and
push
sub
jbe
adc
inc
fist
jns
xchg
in
retf
push
jno
in
es
std
sub
imul
in
cmps
jmp
in
mov
xchg
scas
cmp
lock
push
das
jae
push
jp
cli
outs
dec
xor
sbb
(bad)
jb
out
xor
and
jno
shr
(bad)
push
jne
mov
inc
mov
sub
fidiv
inc
jb
sti
jg
inc
or
sbb
push
jae
dec
in
mov
lds
(bad)
ret
fistp
iret
sbb
and
inc
and
icebp
fcom
ss
ins
ins
push
push
in
push
xchg
into
inc
daa
dec
mov
inc
test
push
loopne
es
and
fmul
fild
call
int
mov
fisub
sbb
ins
mov
sub
and
mov
sub
cmp
(bad)
cmps
xor
adc
adc
jecxz
pop
test
call
xchg
lods
scas
mov
xlat
xor
sti
mov
cmp
(bad)
sbb
stos
mov
aas
dec
je
jp
sbb
loopne
sub
mul
mov
ror
addr16
lods
cmps
jnp
(bad)
js
or
out
inc
outs
and
cmp
dec
add
mov
iret
icebp
test
mov
cmps
ret
xchg
sub
adc
adc
jp
mov
sub
ja
jecxz
pushf
sbb
cmp
cli
xchg
int
pop
mov
stos
pop
std
fcom
into
sahf
imul
mov
cmp
push
and
pop
iret
rol
jmp
nop
mov
adc
mov
outs
xor
test
pop
into
fdivp
push
cmp
rol
loop
ror
jg
push
sbb
xor
jmp
push
outs
stos
std
adc
or
dec
shr
ja
and
jns
outs
sub
aam
push
leave
sub
pop
jle
sub
push
add
movs
xchg
xor
push
xchg
mov
mov
sahf
push
mov
push
or
push
or
jne
pop
ret
mov
jp
mov
jmp
fisub
rcr
ret
mov
test
jle
popa
or
cmp
mov
jo
arpl
test
mov
sub
mov
in
jmp
sbb
sti
sub
fistp
xor
pop
mov
popa
(bad)
sub
loope
je
sub
inc
xchg
or
push
cdq
fcmovb
and
std
gs
js
jae
adc
lahf
stos
fs
shr
stc
lahf
gs
cmp
outs
mov
dec
push
inc
(bad)
retf
mov
scas
mov
jno
add
inc
xor
fwait
mov
xor
stc
cmp
int
aad
fsubr
jge
adc
mov
pop
cmp
cs
retf
xor
add
and
inc
inc
jne
jno
aam
in
inc
mov
fstp
inc
repz
not
adc
cmp
jns
add
sti
xchg
movs
inc
xchg
sbb
loope
inc
imul
cdq
sbb
movs
sub
jo
dec
pop
mov
pop
mov
jecxz
xchg
jbe
xchg
(bad)
out
in
data16
ss
fdivrp
test
sub
fs
lods
test
xor
xchg
add
popf
lea
pop
lods
push
out
mov
jle
pop
jo
cmp
clc
cmp
ror
test
aaa
fisttp
jo
in
sbb
js
pop
fmulp
jno
int3
mov
retf
das
enter
repnz
and
add
xchg
inc
shl
cmps
imul
sub
shl
sub
inc
lds
or
cwde
push
and
cs
cwde
push
jb
push
add
jle
sbb
retf
adc
test
(bad)
lds
mov
sbb
add
ret
in
lods
mov
or
sti
loope
pop
mov
repnz
outs
mov
cmp
cmp
xchg
xchg
xchg
pop
es
xchg
and
dec
int
retf
scas
aas
int
inc
shr
mov
xor
push
and
vpsrad
dec
fs
repnz
pop
imul
mov
jbe
scas
jo
inc
and
fs
inc
cld
add
sub
mov
bound
stos
xchg
cld
xchg
sbb
mov
sub
cwde
push
adc
loopne
bnd
repnz
mov
mov
jae
and
ins
push
mov
mov
out
call
cdq
and
and
mov
xor
xlat
daa
add
adc
push
lock
or
pusha
rol
or
cld
divps
push
sbb
mov
cvttps2pi
sub
fsubr
sub
stos
in
and
pop
cmp
mov
pop
inc
outs
inc
ss
aaa
sbb
mov
and
imul
or
(bad)
mov
adc
sub
std
dec
loopne
sub
jecxz
arpl
dec
out
popa
mov
sahf
pop
pshufw
je
jg
cs
loop
fld
mov
cmp
loopne
mov
movs
stos
dec
lods
push
mov
cs
jo
push
ffreep
mov
push
adc
sbb
mov
mov
(bad)
pop
jg
push
push
sub
xchg
in
ss
mov
jmp
popf
fwait
or
rcl
ds
pushf
push
popf
xchg
xchg
mov
sti
push
in
and
mov
sbb
in
mov
and
ret
fwait
sbb
in
loop
nop
xchg
cmps
xchg
lea
mov
lock
int3
mov
and
mov
leave
sbb
sbb
jp
lods
sub
mov
mov
into
xor
sub
arpl
cwde
xchg
daa
mov
add
pop
pop
mov
ret
movs
xchg
mov
ret
mov
out
mov
mov
sahf
jne
mov
mov
jge
push
(bad)
mov
scas
lds
test
in
mov
retf
ret
lds
dec
cmp
dec
push
movs
inc
jecxz
inc
(bad)
stc
xchg
cmps
aam
sbb
push
xlat
jl
push
repnz
popa
pop
xor
dec
out
loopne
xchg
out
pop
int
test
pop
stos
scas
ja
mov
mov
repz
mov
jecxz
inc
jle
in
(bad)
lods
movs
jno
mov
test
and
jns
jbe
jp
mov
push
shr
sti
rdtsc
pushw
pop
cmp
mov
inc
int3
in
dec
test
mov
jo
loopne
add
lock
fstp
dec
push
test
pop
sbb
out
shl
sub
adc
add
xchg
or
pop
pusha
out
jmp
mov
iret
into
bound
cmp
(bad)
aas
das
pop
mov
cmps
sub
sub
push
loope
icebp
outs
retf
mov
int3
data16
cdq
mov
adc
xor
lock
push
(bad)
cmp
mov
or
add
dec
dec
mov
ss
lock
xchg
shl
add
cs
call
outs
sbb
cmc
loopne
sbb
in
repz
pop
xchg
mov
jae
(bad)
jp
and
js
es
mov
ret
pop
xor
out
adc
xor
cmp
lock
inc
stos
in
push
mov
xor
mov
loopne
xor
out
sar
sahf
getsec
out
icebp
ficom
mov
ret
rcr
cmps
sti
xchg
out
cmps
mov
call
xor
scas
jecxz
cmp
push
xchg
lock
fdivr
mov
out
cmp
das
cmp
leave
js
int
cmp
xor
iret
sbb
jle
rol
xor
stc
jmp
jge
aam
in
xlat
cli
cmp
inc
mov
lahf
pushf
inc
push
cmp
cwde
mov
jecxz
hlt
jno
bnd
rol
pop
jae
lahf
iret
sub
sbb
push
loop
cmp
gs
lock
mov
push
out
jle
pop
mov
jge
loop
xor
aas
jo
scas
popa
sbb
jbe
cld
mov
inc
(bad)
fdiv
or
repnz
loope
xor
les
in
daa
xor
out
dec
in
ret
xchg
fs
outs
clc
mov
shl
adc
inc
push
xchg
fmulp
mov
sbb
push
vpcmpeqw
(bad)
(bad)
pop
add
jle
sub
xchg
dec
xchg
mov
outs
repnz
or
(bad)
fadd
fnstcw
call
mov
jnp
rcr
adc
lea
xchg
dec
mov
sar
sbb
aas
or
pusha
inc
dec
outs
dec
arpl
psraw
mov
mov
cmp
mov
retf
jns
mov
aaa
or
jle
cmp
xor
inc
movs
(bad)
mov
jnp
sub
out
xor
cmp
fucomp
xor
scas
mov
lods
inc
out
fs
cmp
lods
nop
lods
dec
push
or
retf
jle
(bad)
sbb
sub
jge
xchg
sar
ret
loopne
enter
mov
shl
int3
fs
das
test
lds
in
mov
dec
pop
jle
add
mov
add
sub
mov
pop
daa
pop
push
shl
popf
add
jp
or
scas
cmp
ins
adc
push
(bad)
movs
jo
inc
outs
fnstcw
mov
pop
pop
inc
and
push
xchg
sbb
nop
inc
push
adc
push
add
test
push
and
cs
mov
mov
push
arpl
xchg
pop
xchg
ror
lds
loope
inc
js
or
or
jmp
push
push
xor
call
lahf
push
cmp
in
ja
jne
call
jmp
je
test
int3
ffree
fucomi
imul
scas
adc
dec
pop
into
scas
mov
jmp
xor
add
std
sar
movs
outs
or
ret
sar
popf
inc
push
mov
arpl
inc
outs
mov
cmp
test
ret
sbb
mov
sbb
stos
mov
inc
clc
mov
mov
push
cmp
shl
jmp
in
popf
push
aad
dec
or
jmp
adc
bnd
out
or
mov
enter
test
ins
push
mov
cld
test
fnstcw
test
ds
adc
or
in
add
cdq
scas
addr16
sbb
xchg
mov
jb
inc
out
pop
int
mov
data16
das
or
push
(bad)
dec
push
sub
cmp
mov
dec
mov
int3
movs
icebp
add
jns
xchg
ins
loopne
mov
pop
pop
(bad)
and
into
push
pop
sub
stc
mov
xchg
jno
fs
sub
pop
sub
add
imul
xor
fcmovu
push
pop
arpl
daa
mov
mov
adc
dec
mov
cmp
inc
jmp
mov
icebp
ins
scas
xchg
jl
push
or
mov
adc
push
dec
jnp
mov
retf
pop
ret
jbe
xchg
xor
(bad)
ds
loop
add
pushf
mov
outs
fsubr
stc
les
aad
xchg
jl
pusha
dec
mov
inc
lods
sbb
pushf
cdq
fnstenv
mov
adc
jle
fnstsw
jecxz
pusha
inc
popa
dec
add
sub
cmp
fimul
inc
cmp
je
js
into
jmp
xchg
jecxz
xchg
mov
and
pop
test
stc
out
hlt
xchg
mov
dec
or
cld
neg
jno
(bad)
jnp
mov
and
mov
out
push
pushf
fs
sub
sar
shl
sti
adc
dec
mov
sti
mov
out
jnp
ss
mov
ins
repz
jb
sar
jle
mov
push
inc
or
adc
inc
call
les
(bad)
jecxz
xchg
jnp
jae
push
or
adc
mov
movs
nop
sub
xor
(bad)
pop
inc
jne
rcl
rcl
mov
pop
mov
fwait
jae
lds
les
popf
call
(bad)
push
dec
mov
xchg
jns
add
stc
mov
repz
into
cld
mov
test
(bad)
inc
out
sub
fnstcw
scas
stos
mov
lods
(bad)
scas
rol
xchg
or
inc
mov
aam
push
lea
retf
ss
cmp
dec
outs
in
xor
jno
and
cmp
popa
pusha
ins
fadd
mov
stos
mov
rcl
and
jo
mov
sbb
or
icebp
xlat
dec
xor
pop
call
sub
adc
xchg
inc
xchg
jns
mov
loop
pop
push
add
lea
gs
ror
and
clc
test
push
mov
mov
and
scas
mov
stc
xor
dec
fild
sbb
inc
pop
pop
or
in
jnp
xor
rcl
sub
pushw
xchg
xchg
(bad)
aad
aad
and
pop
icebp
jmp
test
xchg
push
jle
xchg
xor
fs
jecxz
das
out
ds
in
cdq
test
jbe
cdq
jp
test
in
xor
repnz
or
jmp
scas
shl
sub
call
inc
and
mov
ds
pop
inc
jnp
xchg
in
cmp
cmp
add
push
add
ror
and
mov
add
lds
mov
les
daa
jmp
push
ja
push
es
mov
xor
sbb
lods
ins
arpl
out
adc
adc
adc
adc
adc
add
add
fmul
jne
mov
out
in
push
adc
mov
xchg
push
xchg
sub
and
push
push
in
test
fs
pop
bnd
mov
xchg
pop
fcom
dec
icebp
cmps
mov
or
test
add
mov
ss
sbb
lock
or
jnp
pop
int
push
add
ds
jecxz
add
jg
icebp
sbb
rcl
xchg
push
xlat
dec
push
sahf
pop
lods
pop
pop
ins
(bad)
add
dec
mov
or
dec
sub
mov
test
mov
cdq
test
in
push
mov
ret
fist
cs
test
pop
jmp
push
leave
shl
pop
sti
(bad)
pop
mov
xchg
dec
inc
xchg
leave
jg
pop
and
scas
movs
daa
and
sbb
lods
jp
adc
imul
lods
in
outs
aam
cmp
push
inc
imul
stos
sti
mov
(bad)
mov
scas
cdq
push
in
imul
push
bound
cmps
mov
mov
mov
retf
or
aaa
call
push
cmps
add
lock
(bad)
push
sahf
movs
cmp
aaa
into
push
sbb
pop
repnz
retf
stos
add
push
loope
(bad)
cdq
shl
pop
shr
stos
pop
jecxz
(bad)
add
adc
inc
sti
daa
or
aam
adc
loope
movs
rcr
and
movs
hlt
xchg
dec
inc
aam
pop
cmp
lods
or
cdq
scas
inc
xor
clc
(bad)
push
mov
mov
rcl
test
out
mov
(bad)
push
mov
loop
shr
cld
(bad)
mov
xchg
dec
adc
dec
call
pushf
pop
inc
sar
jbe
jno
imul
pushf
mov
sbb
adc
jns
sbb
(bad)
mov
sbb
xchg
(bad)
icebp
lods
and
sub
jp
in
shl
push
mov
movs
cmp
mov
sbb
mov
pop
adc
stc
add
arpl
adc
aas
pop
mov
mov
and
push
mov
mov
mov
int
clc
or
xor
data16
mov
dec
add
(bad)
aad
outs
(bad)
and
mov
fldenv
pop
adc
inc
pop
std
pop
test
or
xchg
retf
and
cmovno
dec
inc
je
inc
xchg
xchg
int
cli
adc
xchg
push
or
gs
mov
inc
rcl
mov
mov
retf
push
ja
in
inc
dec
in
test
(bad)
ds
nop
mov
and
mov
pop
cmp
mov
div
lock
in
(bad)
daa
jg
sar
icebp
push
stc
mov
xor
add
add
sar
dec
push
xchg
sbb
std
jnp
fistp
dec
xchg
xor
sub
ret
cdq
js
xor
mov
pushf
out
adc
icebp
in
push
pop
push
xor
daa
pop
js
push
dec
and
sub
xchg
vunpckhps
(bad)
mov
loopne
mov
cmp
pusha
fisubr
aam
arpl
pusha
inc
adc
or
test
or
repz
dec
fmul
push
in
inc
pop
xor
lahf
cmps
sbb
fwait
pop
aas
mov
xchg
sbb
xor
mov
push
dec
adc
add
stos
xlat
pop
mov
lods
cmp
xchg
imul
xchg
pop
adc
enter
jmp
mov
call
sub
xchg
and
fisubr
push
push
pop
fcmovnu
hlt
arpl
jp
nop
pop
sub
push
mov
les
sbb
mov
dec
push
fadd
clc
cs
sahf
popa
inc
mov
mov
sti
xchg
out
and
retf
pop
push
ss
jle
jecxz
add
fnstcw
xor
pop
jge
mov
jg
iret
adc
popf
es
jmp
pop
outs
and
push
movs
mov
scas
loopne
cmps
cld
ret
pop
pushf
imul
aas
gs
jo
js
sub
xchg
js
ror
adc
std
pop
js
adc
ss
cmp
adc
inc
inc
cmp
ins
movs
mov
outs
movs
mov
into
sbb
mov
aaa
ror
lock
lds
mov
fs
pushw
dec
pushf
cdq
clc
mov
neg
stc
xlat
sbb
mov
jo
mov
(bad)
mov
fisub
jg
push
add
or
mov
cwde
es
sbb
fdiv
leave
jmp
pop
push
adc
inc
fisubr
cmp
jns
repnz
mov
adc
sbb
(bad)
mov
sahf
es
(bad)
mov
xlat
push
popa
jb
inc
gs
je
add
cwde
nop
cli
jo
add
test
mov
cmp
xor
(bad)
sub
(bad)
outs
rcr
jbe
xchg
sar
mov
(bad)
ss
sub
fstp
adc
xor
daa
xchg
call
jne
fidivr
jb
add
jmp
xor
inc
fld
mov
and
xchg
cdq
mov
and
push
test
pop
jmp
icebp
pop
fdiv
leave
mov
pushf
sbb
popa
fnsave
fcomp
jo
push
fidivr
dec
iret
pop
or
push
inc
mov
cmps
cmp
rcr
out
aaa
jg
dec
pop
(bad)
jmp
lds
add
add
rcl
or
inc
pop
adc
push
sbb
push
cmps
das
mov
stos
mov
(bad)
bound
adc
sub
mov
jnp
xchg
ja
call
fs
mov
lock
rcl
or
ja
dec
es
ds
sahf
imul
xor
jl
fsubrp
pop
jmp
dec
outs
aad
mov
mov
sub
xor
das
int3
call
push
mov
shl
push
jl
or
push
adc
sbb
neg
popf
jecxz
ss
xchg
mov
sahf
ret
ja
repz
push
dec
lahf
sbb
repz
gs
xor
jge
fcom
cmp
and
(bad)
mov
and
test
mov
scas
pop
jmp
sbb
add
mov
fwait
mov
cmp
add
ret
sbb
dec
leave
std
int3
in
shl
or
pop
aas
xchg
sub
pop
test
retf
outs
mov
push
xor
pop
cmp
in
(bad)
cmp
(bad)
push
enter
pop
into
xor
jbe
nop
outs
dec
aad
inc
ins
adc
out
xor
push
test
imul
pop
lea
sub
add
arpl
inc
mov
mov
mov
sbb
addr16
bound
icebp
adc
(bad)
stc
fucomp
dec
enter
js
mov
inc
lods
aas
in
(bad)
adc
jp
cmp
mov
pushf
push
jmp
pop
mov
bound
arpl
push
daa
sahf
les
pop
ss
jbe
arpl
sti
mov
add
sbb
mov
mov
add
fnstenv
popf
fidiv
push
mov
data16
push
repz
ins
push
in
inc
mov
mov
outs
popa
and
or
sbb
int3
sub
je
jecxz
mov
jl
lds
push
pshufw
jmp
xor
jge
repz
dec
es
inc
lock
pop
jmp
mov
gs
mov
jno
hlt
jecxz
inc
sti
pushf
add
push
inc
xchg
or
fdivr
movs
sub
sahf
mulps
jnp
sbb
test
ret
adc
jmp
call
dec
retf
into
xor
or
or
xor
addr16
and
xchg
and
sub
jae
aaa
cmp
push
out
aas
adc
push
jle
inc
jle
aaa
ins
jg
add
fmul
xchg
fisttp
xchg
hlt
jl
or
cmp
add
push
(bad)
pop
add
adc
jp
jbe
mov
lahf
das
rol
cdq
adc
lds
stos
inc
out
jbe
sbb
inc
add
fs
leave
or
sbb
paddusw
and
outs
pusha
fwait
das
sub
inc
sbb
into
inc
xchg
in
pop
sbb
outs
xchg
inc
outs
sbb
add
and
mov
inc
mov
fbld
scas
cmp
adc
push
jno
cmp
fidivr
push
xchg
scas
fimul
ss
inc
add
sbb
mul
mov
xor
nop
jge
adc
cmp
xchg
and
mov
mov
xchg
out
sahf
xchg
add
or
pusha
sbb
and
cmp
cmp
jle
xor
enter
pusha
cmc
cmp
clc
int
cmp
outs
jnp
(bad)
pop
dec
add
jnp
mov
push
adc
nop
pusha
pop
(bad)
cdq
rol
mov
push
mov
fs
pop
(bad)
aaa
call
loope
mov
and
pop
push
mov
fld
cmp
jb
mov
sti
mov
cwde
loopne
inc
clc
jecxz
sub
(bad)
ret
push
push
sub
jae
sbb
mov
jnp
std
inc
data16
in
push
inc
int
push
cs
iret
jae
or
inc
in
cmp
or
dec
sbb
mov
xchg
je
jne
cmps
adc
mov
jl
aam
sbb
out
pop
scas
xchg
cli
dec
idiv
pop
sub
test
mov
outs
inc
jmp
stc
ds
push
xchg
and
in
add
out
stos
jmp
or
xlat
cmp
sbb
inc
xchg
jle
sti
xor
inc
jl
push
outs
das
add
jne
imul
jo
or
rcl
add
es
pop
add
int
sub
test
into
add
call
sbb
in
loop
popa
pop
add
out
mov
add
cmp
call
jp
cmp
daa
mov
lds
(bad)
es
cmps
cld
leave
call
popa
push
out
and
sar
aad
xchg
fdiv
pop
and
ins
js
jne
inc
lock
or
add
inc
data16
neg
push
inc
dec
js
loop
mov
xor
das
out
shl
inc
fwait
mov
test
movs
in
sbb
(bad)
xchg
(bad)
and
jbe
dec
inc
xlat
jmp
push
push
push
pop
pop
and
mov
adc
mov
mov
xchg
cs
dec
ins
jmp
ins
push
cdq
push
mov
test
mov
loop
sahf
jbe
push
fistp
xchg
(bad)
cwde
or
nop
sbb
adc
idiv
scas
call
cdq
xlat
lds
fmul
scas
lahf
inc
xchg
jg
lds
pop
pushf
inc
mov
jne
cmp
xchg
xchg
test
ror
int3
test
mov
add
dec
inc
cs
push
rcr
les
adc
popf
clc
repz
imul
or
cmp
cmp
jmp
cmp
rol
push
test
in
cmp
xchg
and
je
bound
push
gs
pop
dec
push
or
pop
hlt
xchg
jge
pop
ror
iret
sub
cs
mov
ret
cwde
and
push
jg
push
sub
das
mov
sub
ficomp
int
mov
xlat
icebp
xlat
(bad)
retf
sbb
jmp
mov
mov
in
push
in
jmp
inc
loopne
dec
pop
sti
cmp
aad
imul
push
leavew
(bad)
cmc
cmps
inc
sar
push
ficom
push
mov
js
jle
arpl
and
jnp
adc
inc
loop
cmps
or
arpl
sub
add
push
and
or
xor
out
lds
aas
mov
int
sbb
in
and
pop
push
cmp
mov
addr16
pusha
and
push
sbb
cs
lahf
sub
es
sbb
es
ror
fistp
pop
push
xor
sub
and
test
scas
rcl
xor
xor
std
imul
push
repz
mov
xchg
mov
in
xor
rcr
ficomp
xor
push
loop
pop
mov
shl
mov
ja
ss
cwde
push
sbb
idiv
or
(bad)
clc
mov
jbe
test
int
sahf
push
and
fsub
lea
(bad)
cmps
les
in
rcl
stos
add
push
dec
clc
xchg
in
adc
xor
icebp
add
lock
xchg
jle
mov
retf
std
sub
inc
sub
fisub
test
(bad)
retf
mov
call
inc
pusha
xchg
out
cmp
pop
out
xor
or
xchg
pop
aaa
inc
jns
mov
pop
repnz
sub
aas
sbb
xchg
cmp
lods
adc
mov
or
sub
sahf
shr
mov
or
or
mov
add
and
(bad)
push
or
stos
dec
xor
bound
push
dec
mov
and
inc
add
inc
pop
leave
ret
mov
adc
jbe
repnz
test
bound
neg
cmp
cmp
je
xchg
xor
push
dec
movs
loope
jmp
pop
das
xor
cs
xchg
cmp
cmp
pop
push
mov
cmp
in
lds
xor
(bad)
adc
cmps
sahf
xlat
jnp
and
and
and
push
sbb
push
imul
sub
icebp
mov
in
movs
ret
jns
fsub
jnp
call
add
pusha
mov
arpl
dec
loop
into
(bad)
cld
xchg
add
aas
popa
adc
jle
push
fild
inc
out
rol
adc
adc
add
add
add
pop
shl
push
xchg
jmp
enter
or
dec
(bad)
lock
rol
mov
jae
xchg
pop
stos
mov
add
dec
mov
inc
les
mov
sub
das
xchg
jl
pusha
xchg
mov
add
xor
xchg
je
test
stos
or
sub
jo
xlat
fld
cmp
je
pop
jae
cmc
push
sbb
jne
xchg
repnz
rcl
pop
cmp
pop
cmps
addr16
fmulp
cmp
outs
fistp
nop
push
cmps
imul
scas
xor
xor
add
cmps
ret
movs
and
ror
loopne
js
pop
inc
popa
retf
jae
xor
or
(bad)
sbb
sub
inc
and
ja
xchg
pop
lock
mov
adc
ficom
int
push
or
sub
push
xchg
ss
sub
jbe
out
fmul
inc
or
mov
adc
push
or
test
sub
sbb
fwait
cmp
push
and
mov
xor
adc
sub
sti
clc
mov
imul
add
jne
ret
lock
xlat
in
mov
or
fwait
in
shr
enter
jne
pop
inc
add
and
fdiv
sub
lock
scas
std
sub
test
iret
ins
mov
push
fnstenv
sub
push
inc
mov
repz
or
xchg
add
mov
das
ds
mov
rcr
jmp
jg
push
sahf
out
hlt
dec
addr16
mov
repnz
ins
lea
xchg
sti
dec
sub
loopne
fst
jmp
stc
outs
cmp
(bad)
xchg
loopne
cmp
xor
cmp
int3
test
or
loopne
mov
in
xor
pop
cmps
loopne
cmp
hlt
jne
(bad)
jl
or
xor
fidiv
mov
pop
aaa
inc
mov
push
mov
sahf
or
sbb
push
sbb
mov
iret
scas
sbb
mul
cmp
mov
nop
popa
xchg
cmp
sbb
and
and
pusha
add
jnp
inc
outs
mov
push
xchg
or
sbb
push
sbb
xlat
pop
ins
xor
jb
ret
push
test
jmp
sub
(bad)
xor
inc
fwait
pusha
ror
rcl
push
stos
test
stos
cmp
or
mov
mov
or
sub
and
rcl
xchg
jmp
fldenv
jge
int
repnz
sbb
sbb
(bad)
data16
push
pop
out
and
and
lds
add
iret
ins
xchg
(bad)
push
sbb
sbb
jmp
aam
ins
push
pusha
stc
xchg
mov
cmp
mov
jnp
push
mov
cmp
(bad)
dec
sahf
adc
inc
outs
lods
and
fstp
jns
mov
(bad)
neg
pop
retf
std
adc
sbb
addr16
imul
xor
jno
fcom
add
pop
jle
xlat
movs
push
into
daa
in
ds
fs
mov
jb
les
mov
inc
pop
mov
mov
in
pusha
sub
sbb
cmps
outs
fmul
das
loopne
test
(bad)
xor
mov
aas
aad
pop
out
jbe
and
pop
mov
jecxz
pusha
out
pop
dec
sub
fist
push
or
loopne
fs
or
cdq
aam
sti
add
into
dec
fnsave
or
push
cmc
imul
push
pop
fdivr
inc
nop
xor
mov
inc
fcom
xor
push
jb
push
hlt
push
xchg
pop
je
stc
mov
jle
cs
and
push
jne
inc
cmp
sub
mov
and
xchg
(bad)
push
je
mov
jge
xchg
out
lahf
and
fwait
shr
call
pop
dec
(bad)
fadd
cmp
adc
inc
mov
inc
inc
test
sub
and
xor
ds
pop
cmps
in
test
rol
(bad)
stos
xor
vmwrite
es
out
or
pop
push
les
mov
(bad)
ror
xor
dec
ds
jb
xchg
aam
cmps
cmps
sbb
aad
sbb
test
lea
scas
dec
or
xchg
pushf
in
retf
popf
ins
test
icebp
mov
jg
lds
inc
test
cmp
pop
mov
cmps
cmp
cwde
js
in
and
pop
mov
fnstenv
sbb
xor
je
push
xchg
jmp
jnp
pop
mov
cmp
in
fsubr
or
adc
imul
ja
jp
test
inc
jecxz
ss
addr16
mov
into
pop
push
push
jbe
jmp
pop
test
rcl
push
push
adc
xchg
or
cmp
popa
sbb
repz
pop
jno
jmp
xchg
fimul
enter
xchg
cmp
cmp
bound
mul
add
out
mov
test
loope
(bad)
loope
jae
pusha
outs
mov
(bad)
not
and
lods
movs
mov
lods
(bad)
test
mov
fs
pop
repz
mov
sub
jae
icebp
and
push
jmp
adc
push
rcr
(bad)
in
sub
add
push
mov
xchg
repnz
not
push
add
adc
adc
mov
cmp
scas
ins
outs
pusha
mov
imul
(bad)
ret
pop
inc
pop
inc
or
in
aad
stos
pop
(bad)
dec
or
hlt
or
pop
into
data16
call
push
lahf
xor
out
addr16
movs
mov
xchg
jp
out
sub
inc
and
push
inc
xchg
dec
sti
or
and
nop
sub
inc
nop
add
cmp
retf
mov
sub
cmp
(bad)
jl
xchg
inc
repz
mov
adc
xchg
and
out
stos
sbb
jne
outs
push
sar
inc
inc
call
or
cmps
ds
adc
cmp
test
sbb
das
pop
add
aaa
push
(bad)
stos
popa
call
je
xor
shrd
scas
lock
clc
mov
xchg
mov
mov
jecxz
cmp
test
popa
xchg
arpl
loop
jbe
xor
push
cmps
aas
pop
in
pop
jo
sub
push
loope
pop
xchg
iret
fcmovne
(bad)
out
int
hlt
add
mov
jg
pushf
pop
cmp
ficomp
jae
into
xchg
dec
clc
jge
mov
popf
push
lea
pushf
cdq
cmp
fdivp
sbb
jns
idiv
out
push
xor
cwde
shr
pop
stos
mov
add
loope
les
cmp
mov
into
jecxz
jbe
je
add
and
xchg
sar
and
pop
mov
ds
jnp
sub
fistp
sbb
ror
or
cmp
jecxz
add
inc
sbb
retf
ret
shl
xor
jnp
aaa
push
push
inc
sub
cmp
dec
dec
pusha
dec
sub
mov
push
push
sub
out
inc
inc
jmp
mov
xchg
mov
outs
jne
cmp
mov
sbb
and
shl
xor
adc
xchg
mov
or
adc
sbb
xchg
repz
test
mov
adc
push
arpl
pop
es
(bad)
in
sti
mov
sub
aaa
ret
dec
lock
lock
adc
aas
mov
adc
mov
adc
stc
jae
push
push
cmp
and
sti
pop
(bad)
adc
jbe
push
retf
sub
push
cs
movs
jmp
stos
retf
xchg
pop
cmp
(bad)
daa
xor
sbb
mov
mov
push
sub
(bad)
iret
rcl
mov
xor
or
adc
jo
mov
ficomp
dec
pushf
lods
fdivp
pusha
fisttp
dec
fmul
or
sub
jp
mov
adc
xrelease
and
add
(bad)
shl
mov
sbb
add
sbb
adc
xor
pop
fs
pop
mov
pushf
add
mov
pop
pusha
push
out
push
dec
ror
mov
sbb
cs
and
std
pusha
jae
mov
retf
mov
push
adc
lods
dec
sbb
stc
ret
add
jmp
add
adc
call
outs
push
cmps
fs
scas
inc
inc
imul
imul
dec
pop
test
mov
sub
sub
sub
lods
shr
in
push
push
inc
add
dec
aaa
popf
mov
push
or
sti
mov
mov
sub
cmp
lods
jge
popa
jmp
xlat
mov
fcomp
push
repz
and
shl
stos
bound
add
sub
xlat
shl
repz
ret
xor
addr16
(bad)
int3
pop
jp
xchg
fwait
je
lock
push
xchg
fcmovb
push
lock
xor
test
xor
mov
mov
push
fbstp
mov
push
out
jns
jge
(bad)
shr
and
icebp
mov
xchg
mov
ins
jecxz
or
pushf
test
(bad)
adc
xchg
fwait
enter
lea
push
jnp
adc
mov
aas
(bad)
xchg
jge
repnz
cmp
push
lock
cli
stc
mov
js
cs
ja
sub
leave
or
jbe
test
inc
and
mov
xor
xor
mov
dec
fwait
cmc
hlt
inc
adc
out
rol
loop
mov
cmp
adc
push
push
movs
fnstcw
daa
cs
clc
repnz
and
cmc
in
movs
ss
(bad)
xchg
push
stos
add
dec
cs
ja
popa
inc
shr
dec
dec
inc
pop
fsubr
push
repz
jns
gs
mov
push
cmps
xor
(bad)
xchg
daa
cdq
mov
movs
outs
or
push
dec
(bad)
mov
shl
mov
mov
pushf
xchg
shl
outs
es
stos
inc
not
or
ds
sub
data16
or
pushf
in
and
stos
pop
cld
int
adc
inc
mov
jo
ins
nop
nop
stos
fsubr
pop
or
or
sub
or
rcr
std
out
inc
repz
sti
int3
cdq
sub
xchg
xchg
or
mov
inc
jno
dec
aad
retf
add
retf
les
xchg
frstor
jns
cli
fs
cmp
mov
push
xor
sahf
cmps
ja
dec
and
mov
sub
mov
clc
dec
ret
cmp
mov
mov
imul
push
aam
cmp
scas
jg
pop
cmp
add
movs
mov
lods
jp
or
inc
imul
xlat
mov
mov
lock
xlat
mov
fild
inc
out
and
shl
stos
cmps
pop
scas
mov
pop
js
push
mov
and
aam
pusha
popa
in
push
repnz
sub
push
(bad)
inc
sbb
jo
shl
xchg
mov
leave
adc
pop
das
sub
push
(bad)
jl
push
outs
xor
jb
add
dec
and
retf
pop
bound
aam
cmps
mov
aam
imul
cmp
mov
sti
in
cmp
add
(bad)
rcl
sbb
push
fsub
sbb
movs
ffree
pop
enter
movs
in
sbb
pusha
shl
fsub
aaa
fisubr
rol
mov
aam
and
call
xchg
push
inc
mov
mov
mov
push
cmps
adc
dec
jne
(bad)
(bad)
mov
std
popa
and
sub
mov
sub
data16
xor
adc
mov
pop
dec
sbb
cli
jne
mov
add
lahf
(bad)
fild
mov
and
and
adc
inc
sti
adc
out
cld
out
cli
sub
mov
leave
mov
stos
or
jo
jb
add
mov
out
retf
shr
cdq
out
bound
not
push
pushf
shr
mov
cwde
sahf
jp
lods
mov
xchg
inc
sahf
or
dec
jb
jne
sbb
jae
vpshlq
xchg
push
in
(bad)
xchg
out
xor
xchg
aas
add
ror
mov
add
test
push
xchg
or
pop
fs
jnp
leave
pop
sbb
outs
sti
icebp
push
mov
out
cli
stos
inc
cmps
sbb
ja
xor
pushf
das
pusha
mov
add
xor
ins
add
and
mov
adc
jo
loop
pop
sahf
rcr
lods
add
jns
add
jp
call
movs
es
js
iret
lahf
add
inc
imul
sbb
test
(bad)
div
jbe
adc
jl
add
mov
sbb
jle
outs
je
loopne
int3
sbb
icebp
movs
sbb
pop
jae
test
retf
jmp
cdq
cmp
sbb
sbb
inc
cmp
(bad)
jo
in
mov
mul
pushf
mov
out
test
enter
cmp
dec
inc
daa
sbb
lods
data16
push
pushf
jnp
push
and
repz
push
mov
mov
test
std
xchg
cmps
adc
and
adc
(bad)
mov
mov
push
daa
das
inc
ds
mov
jo
mov
xchg
sub
jmp
jbe
mov
test
mov
pop
dec
mov
daa
sub
in
mov
and
adc
inc
in
cmp
popa
out
inc
pop
mov
test
mov
out
fldenv
mov
push
cli
popf
sbb
inc
lds
aas
ror
pop
push
add
stos
sbb
sbb
cmc
and
cmp
das
or
inc
call
loop
aad
jp
add
mov
(bad)
jmp
jge
mov
push
movs
xor
ds
ret
(bad)
or
inc
mov
(bad)
movs
(bad)
mov
mov
jae
and
ins
adc
mov
ss
fwait
sbb
fwait
daa
pop
stos
mov
dec
cmc
cmp
mov
push
mov
aad
loop
sub
jg
(bad)
ror
aaa
scas
mov
mov
(bad)
jno
sahf
push
xchg
addr16
into
jecxz
es
aas
cmp
gs
popf
enter
repnz
xchg
xor
sbb
inc
jns
sbb
sub
jb
das
rol
nop
shl
mov
push
clc
pushf
xchg
inc
sbb
hlt
(bad)
fidivr
sub
and
and
dec
sahf
inc
add
dec
add
jo
cmp
pusha
mov
aas
(bad)
lods
fdiv
xchg
push
push
fild
popa
push
and
mov
cmp
add
and
sub
sub
outs
mov
popa
pop
push
jle
sahf
outs
fwait
and
shl
call
mov
out
mov
mov
jecxz
jge
ins
enter
cmp
xchg
pop
xchg
add
jo
xor
push
or
or
xlat
icebp
ficomp
faddp
jne
ins
cmp
rcl
inc
addr16
lds
jns
(bad)
in
lea
call
push
mov
repz
enter
js
ins
out
(bad)
or
lds
cmps
jbe
mov
add
pushf
pusha
fst
data16
dec
mov
fs
loopne
xchg
sbb
ret
in
jle
push
out
and
dec
pop
test
inc
mov
loopne
movs
adc
test
sbb
ret
int
lea
sbb
inc
lea
jl
pop
stc
adc
add
jne
dec
mov
jnp
sahf
nop
daa
jb
lahf
ror
inc
cmp
cli
fstp
xchg
jmp
jb
push
mov
jge
aas
xor
int3
mov
inc
xor
fcomp
xchg
(bad)
sti
int3
adc
jmp
xor
push
inc
prefetchwt1
or
sub
pop
add
push
mov
cmp
cmps
inc
or
cmp
pop
push
push
repnz
hlt
dec
fwait
add
jo
add
xchg
ds
test
and
aam
pop
push
xchg
mov
(bad)
jg
push
pop
aam
sbb
mov
mov
stos
and
xchg
xor
outs
aam
cmp
cmc
ins
push
repz
ja
cmp
mov
gs
mov
sub
shl
data16
cwde
pop
adc
repz
retf
dec
lds
fmul
and
shr
(bad)
xor
fidivr
leave
or
sub
pop
js
cmps
clc
sub
mov
outs
and
fdecstp
les
sbb
push
sbb
mov
stc
add
out
(bad)
jp
push
pop
in
shl
(bad)
repnz
in
push
aam
jmp
xor
lea
test
es
inc
cli
(bad)
cdq
aaa
icebp
sub
or
xor
aad
test
xor
pusha
js
pop
(bad)
out
fldenv
mov
or
rcl
(bad)
adc
or
xchg
lock
and
mov
mov
outs
mov
dec
adc
push
xchg
mov
pop
xor
test
into
mov
push
fisubr
lods
adc
lahf
enter
shl
not
or
mov
(bad)
mov
xchg
in
das
mov
sbb
outs
rcr
xlat
test
lea
retf
in
xchg
and
popf
xchg
add
lods
push
cmp
sub
in
cmp
jne
sub
mov
test
sub
inc
in
ja
in
push
rcl
push
movs
jo
xchg
xchg
retf
jmp
jae
mov
jb
(bad)
adc
sti
sub
mov
arpl
out
int3
cmp
xor
test
lods
ror
ror
push
pop
cld
mov
adc
cli
ret
(bad)
popf
adc
pop
out
mov
jb
fisubr
sbb
adc
nop
lahf
dec
sub
add
push
call
clc
js
ds
lods
sub
push
addr16
in
xchg
aam
add
bound
out
jnp
xor
aam
cwde
lods
xchg
adc
ins
mov
cmp
jg
adc
outs
clc
aaa
sub
cmp
ror
mov
nop
jle
std
xchg
(bad)
and
cmp
jmp
test
xchg
adc
xlat
(bad)
sub
and
sbb
xchg
add
int3
or
bound
dec
call
xor
xchg
leave
xchg
push
scas
xor
out
outs
loop
pop
mov
ret
and
dec
sub
repz
dec
mov
sbb
ret
push
sub
in
test
cmp
imul
ret
ja
mov
out
add
dec
mov
je
push
movs
pop
push
psrld
mov
xchg
add
(bad)
fldcw
xchg
sbb
mov
js
std
inc
or
rol
movs
add
out
dec
clc
rcr
mov
clc
push
dec
sub
aad
and
xchg
stc
mov
out
lock
imul
(bad)
mov
sub
clc
mov
jmp
clc
(bad)
fnstsw
pop
dec
add
pop
xchg
into
sub
push
add
jo
or
fisttp
cmp
cs
sbb
and
in
dec
or
adc
mov
jecxz
adc
mov
fs
jbe
inc
lea
push
inc
dec
(bad)
push
cmp
mov
or
das
imul
push
xchg
or
ret
push
rcr
dec
shl
cmp
add
xor
cmp
add
or
stc
mov
pop
rcr
rol
xor
mov
or
fist
jmp
push
add
mov
ret
stos
jmp
jnp
xor
pop
adc
and
in
ins
xor
xchg
jecxz
stos
cdq
xchg
outs
mov
mov
ss
ins
add
xor
add
dec
xor
sbb
push
jb
bnd
or
pushf
xor
cmps
sbb
adc
nop
out
cmp
dec
jo
pop
outs
int
jl
push
jmp
aam
jl
loop
jg
xlat
fcomp
sar
movs
pop
xlat
jae
daa
mov
icebp
cmc
ficomp
xor
test
jle
ds
icebp
xor
jg
or
jmp
sbb
pop
mov
jo
and
test
add
pop
out
sbb
jecxz
stc
pushf
(bad)
ins
or
pusha
push
outs
add
push
mov
shl
(bad)
fist
jecxz
dec
sbb
lods
jecxz
mov
aaa
inc
jmp
cmp
repnz
cli
and
push
test
adc
adc
cmps
loopne
out
mov
xor
pop
das
mov
lods
jbe
les
jmp
int
dec
jbe
pop
aas
sub
fwait
lea
or
cmp
int3
out
test
sub
repz
adc
in
fldcw
jmp
aas
jne
cwde
mov
mov
into
sbb
aas
pop
adc
adc
sti
enter
popa
mov
dec
or
lods
pop
cmps
ret
outs
fnstcw
xor
test
daa
xor
jbe
jl
adc
and
(bad)
movs
addr16
and
pop
cmp
retf
hlt
cmps
enter
mov
pop
sbb
xchg
sbb
jp
test
es
les
xor
jne
int
test
ror
jl
pop
or
aaa
jg
push
out
adc
fistp
sub
lahf
xlat
mov
imul
ins
push
cmp
rol
push
push
push
push
cmc
adc
aam
mov
clc
repz
jl
and
jle
enter
daa
push
fdivr
dec
packuswb
ret
fwait
inc
xor
sahf
or
lahf
adc
adc
lea
sbb
jcxz
(bad)
js
inc
clc
bound
invlpg
pop
out
outs
call
add
enter
push
adc
jno
inc
xchg
mov
lock
mov
aaa
and
dec
jmp
outs
shl
mov
xchg
repz
arpl
div
movups
jmp
pop
in
xchg
mov
test
adc
xchg
add
inc
sub
and
cmp
adc
fld
out
cmc
cmp
cmc
ret
push
out
retf
pop
out
cmp
push
mov
repz
jmp
mov
(bad)
retf
pop
in
movs
fnstcw
mov
pop
arpl
sbb
push
cmp
and
arpl
jecxz
push
mov
lods
pusha
add
adc
or
shl
adc
arpl
or
dec
in
inc
adc
xchg
inc
jecxz
ins
call
cmp
lock
mov
out
and
mov
jno
jmp
loope
jbe
xchg
jecxz
add
or
sbb
mov
inc
cli
xchg
mov
mov
mov
mov
sbb
pop
fisub
sbb
mov
iret
or
imul
ret
pop
sub
arpl
jno
xchg
leave
push
addr16
mov
(bad)
stc
into
int
mov
add
xchg
adc
push
ja
cmps
jns
rcr
dec
outs
pop
sbb
mov
js
sar
into
pop
int3
clc
aaa
dec
stc
sahf
jne
gs
cli
stos
aad
ret
dec
sub
and
out
push
sub
push
lds
push
cmc
jp
and
push
push
loope
movs
xchg
shr
dec
cmp
inc
mov
xor
push
repz
stc
daa
pop
popa
sbb
mov
lds
jl
js
adc
fiadd
aaa
int3
mov
pop
mov
jae
clc
aam
sti
cli
not
je
push
push
stc
test
fs
inc
pop
xchg
xchg
push
and
mov
aam
dec
mov
test
mov
sub
hlt
cmovl
pop
mov
xor
lods
ret
iret
fwait
mov
cld
mov
outs
aad
add
mov
sub
mov
xchg
pop
mov
mov
icebp
mov
add
adc
push
xor
xchg
movs
fsubr
push
ins
mov
xor
(bad)
xor
call
xchg
stos
cs
and
and
jb
nop
ins
mov
xlat
xchg
(bad)
sub
and
mov
xchg
mov
mov
jmp
addr16
popa
cld
js
addr16
sbb
sbb
and
cmp
stos
mov
nop
je
jno
mov
or
ja
xlat
(bad)
add
push
mov
ins
jne
inc
add
aas
adc
int3
sub
or
dec
sub
pop
out
sti
jo
push
test
add
not
scas
adc
test
das
hlt
mov
mov
adc
mov
neg
cmc
push
xlat
mov
in
mov
stos
jle
mov
dec
push
bound
fild
mov
mov
inc
cmp
enter
fidivr
dec
jb
mov
outs
inc
add
sub
or
dec
and
(bad)
cld
adc
adc
dec
jnp
dec
mov
ror
in
inc
loopne
and
mov
lahf
dec
xor
gs
jmp
into
mov
cli
mov
xchg
scas
imul
xor
movs
xor
cmc
mov
mov
mov
sbb
test
mov
in
nop
xchg
jae
dec
nop
push
js
or
mov
clc
shr
fcom
aas
xlat
cld
add
sub
jae
sbb
sub
ret
stc
lahf
xchg
ficom
or
and
stos
jb
lods
sbb
mov
sub
inc
lods
popf
int
push
test
fisttp
or
pop
jno
(bad)
inc
push
xor
fbld
ret
hlt
fdiv
mov
push
int3
jecxz
dec
movs
shr
cmp
int3
mov
jl
xor
xchg
iret
in
push
inc
adc
or
adc
add
push
mov
xchg
cmp
pop
dec
mov
push
push
dec
mov
pushf
cwde
jecxz
inc
enter
dec
(bad)
push
pop
push
mov
ins
inc
aas
cwde
xchg
pop
std
jle
aaa
sub
mov
sub
push
mov
adc
jmp
inc
ret
inc
call
mov
push
icebp
ds
neg
popf
sbb
dec
mov
repnz
push
mov
sub
ins
cs
sub
add
inc
cmp
cwde
popf
adc
and
pop
or
gs
fnstsw
daa
and
adc
jnp
test
mov
mov
pop
daa
ins
mov
mov
mov
cmps
jmp
dec
mov
xchg
mov
dec
mov
test
(bad)
into
fs
out
pop
loope
gs
(bad)
adc
stos
fmulp
call
xor
push
push
pop
mov
jmp
ds
jecxz
xchg
mov
sahf
cmc
lea
xor
rol
fcmovne
cmp
(bad)
pop
cmp
mov
out
retf
pop
push
test
cli
push
faddp
mov
pop
test
mov
repnz
inc
mov
inc
mov
ins
movs
adc
retf
loopne
jecxz
lods
inc
mov
iret
mov
mov
jnp
fstp
jp
shr
xor
push
out
mov
cwde
push
and
ficom
sbb
inc
lahf
cmp
sub
or
jecxz
sub
push
mov
sahf
add
pop
mov
pop
xor
pop
push
aam
or
sub
jecxz
pop
jno
fs
sub
pop
dec
jle
dec
jnp
cmp
and
loopne
cmp
ret
fs
std
mov
ins
jae
and
add
add
retf
pop
mov
mov
jmp
lea
iret
popf
fstp
sbb
popaw
mov
sbb
cs
out
or
es
or
mov
xor
aam
add
js
xor
sahf
test
dec
iret
jb
push
js
xchg
mov
or
jmp
pop
test
and
xor
or
or
mov
cmp
fimul
pop
pop
cmp
xchg
stos
dec
pshufw
shl
xchg
stc
inc
mov
mov
fdiv
xor
mov
and
push
shr
xchg
xlat
pop
outs
(bad)
call
inc
lds
fldcw
addr16
ror
lods
sbb
movs
in
inc
adc
jle
xor
dec
pop
jb
sub
dec
std
pop
dec
inc
sub
jg
out
(bad)
push
enter
movs
inc
call
jg
cdq
jl
inc
in
jle
pop
mov
(bad)
sbb
enter
loop
out
and
std
stc
inc
dec
mov
cs
inc
xor
outs
dec
mov
sbb
daa
jno
daa
mov
inc
jb
sbb
pop
mov
xor
leave
push
jne
jb
add
dec
sub
mov
pop
cmp
fwait
pop
and
std
aaa
ficom
pop
fdivr
push
dec
sub
dec
std
fcom
sar
mov
(bad)
lods
stos
movs
push
push
aad
icebp
stos
cmp
test
xchg
cmp
xchg
ror
adc
(bad)
and
nop
in
in
push
sbb
jmp
jle
ror
icebp
or
push
mov
lea
nop
jle
aas
push
cmp
data16
movs
out
(bad)
xor
jo
jp
sub
xchg
clc
aas
ja
icebp
jg
or
mov
adc
mov
rcl
shl
inc
xor
psubusw
sbb
jo
sub
fadd
xchg
mov
cld
adc
(bad)
fisub
and
(bad)
outs
popf
mov
fimul
cli
jmp
add
or
je
int
nop
mov
out
cmps
jmp
in
in
pop
nop
pop
mov
fsub
(bad)
popa
push
inc
mov
adc
xchg
mov
ret
leave
dec
xchg
jge
cmp
stos
inc
jg
outs
js
pop
inc
mov
shl
arpl
and
scas
or
inc
push
int
test
mov
(bad)
xchg
jb
xchg
inc
in
jno
pushf
jb
sbb
repnz
dec
jae
mov
xor
aas
cwde
mov
mov
and
aas
pop
sub
fcom
movs
push
mov
or
jae
test
push
xchg
cmp
scas
add
push
or
xchg
xor
aad
jl
sub
jno
cmc
cdq
gs
hlt
cmps
test
loop
ja
sub
jne
and
mov
lods
sbb
dec
mov
test
(bad)
cmp
mov
push
push
rol
dec
pushf
add
sub
fucomi
push
lahf
ins
test
lea
sar
push
sbb
data16
in
sub
pop
dec
sub
pop
mov
test
jp
test
ins
or
xchg
dec
mov
sbb
out
xchg
inc
and
fnsave
sub
xchg
fld
jo
pushf
fsub
test
lahf
pusha
push
mov
and
das
push
shl
xchg
(bad)
and
cmp
push
fadd
jbe
hlt
outs
jbe
mov
inc
cdq
test
xchg
or
xor
sub
push
stc
xor
call
sub
push
hlt
ds
bound
dec
xor
aam
std
js
ds
dec
jae
jle
add
pop
stos
in
or
cs
loop
inc
sbb
inc
jge
mul
push
arpl
(bad)
or
fsub
add
xchg
mov
stos
pop
and
add
xchg
or
in
add
mov
retf
or
push
jno
add
mov
pop
xor
sbb
pop
xchg
lds
imul
cmp
cli
ins
xor
push
jae
popf
nop
fwait
mov
sub
int3
outs
out
rcl
outs
push
pop
aas
aaa
int3
rcl
pop
sbb
xor
push
jle
mov
fcomp
add
jnp
(bad)
mov
pop
scas
loope
fbstp
adc
cli
inc
sub
int
movs
add
outs
fsubr
fmul
int
daa
and
fidivr
pop
adc
repnz
xchg
inc
inc
retf
fisub
add
add
daa
and
xchg
jne
jnp
movs
aam
mov
sbb
mov
(bad)
mov
mov
sbb
adc
(bad)
test
aam
mov
ins
mov
push
into
jbe
test
pop
adc
fwait
xor
jle
inc
push
not
sub
sbb
mov
shl
movs
retf
xchg
mov
sahf
lods
or
leave
dec
inc
push
inc
paddb
cmps
xor
add
lahf
cmps
add
jns
rol
mov
int3
adc
jmp
xchg
scas
jae
(bad)
int
and
mov
push
cdq
iret
in
cmp
pop
enter
sub
adc
movs
mov
dec
pcmpgtd
xchg
xchg
xchg
das
add
dec
stos
cmp
cmps
inc
rcr
jno
pop
inc
mov
sbb
aas
inc
nop
mov
pop
stos
int
aaa
jl
arpl
es
adc
iret
mov
mov
popa
test
sub
cmp
mov
jg
pop
call
pop
popf
cmps
int
cmc
retf
add
mov
cld
aaa
ja
mov
fdivr
mov
mov
or
adc
jg
mov
fs
jmp
ins
out
out
xchg
and
xchg
jb
addr16
pop
aaa
adc
add
ins
fimul
jg
ins
xor
test
push
or
cmps
inc
mov
aaa
cwde
or
pop
ret
ss
xchg
in
or
xchg
xchg
test
mov
in
ja
stc
mov
jns
sahf
mov
bound
fistp
inc
fs
inc
jae
cmp
(bad)
out
and
inc
(bad)
loopne
dec
xchg
lahf
sbb
sbb
sbb
iret
pop
in
pusha
mov
jne
test
mov
ja
mov
popf
mov
ins
sbb
xor
(bad)
rcr
pop
std
sbb
leave
inc
scas
push
xor
int3
lods
or
fwait
enter
pop
pusha
jg
mov
push
dec
sbb
mov
cmp
mov
outs
mov
jp
sbb
dec
add
or
push
sbb
push
jae
popa
or
repz
jb
push
jne
pop
lea
sub
jns
scas
fmul
mov
ret
sub
cmp
pusha
adc
test
jno
and
dec
xor
into
loop
ror
xchg
ja
add
or
dec
cmp
jecxz
adc
xor
jo
cld
sbb
and
jnp
std
stc
jns
stc
and
xor
sbb
gs
jmp
xchg
lea
xor
repnz
push
cmps
mov
cmp
dec
jp
mov
cmps
and
cld
xchg
ss
cmp
(bad)
push
jecxz
outs
push
retf
enter
cld
jg
stc
xor
ret
sub
or
xchg
out
mov
mov
in
(bad)
out
hlt
cmp
jmp
inc
nop
arpl
enter
cmp
dec
fcom
dec
add
cli
add
mov
fwait
pop
jmp
out
sub
push
push
sbb
mov
in
std
adc
cmc
ror
ret
add
push
add
and
out
std
adc
sahf
mov
hlt
mov
enter
sbb
call
lods
mov
inc
jne
dec
dec
xor
push
test
or
es
sbb
das
fst
mov
jg
adc
aas
pushf
and
pushf
popf
ss
cmp
pushf
xor
xchg
sub
push
stc
push
mov
leave
jne
and
ss
in
fnstenv
call
mov
aam
pushf
inc
call
rcr
repnz
gs
(bad)
fdiv
or
inc
cmps
mov
mov
xchg
div
pop
test
add
repz
inc
int
push
(bad)
jg
mov
ss
mov
jmp
outs
leave
mov
inc
dec
or
cmc
mov
add
cs
mov
test
pop
and
adc
cmp
jb
aam
xor
(bad)
pop
fwait
popf
adc
nop
loope
mov
pop
ret
pop
mov
scas
push
dec
in
xchg
pop
mov
ja
add
inc
gs
inc
mov
jmp
lock
inc
inc
push
fild
mov
pop
movs
lea
push
int
out
jle
bound
les
sbb
jne
in
cdq
push
inc
dec
xchg
and
(bad)
sbb
cmp
test
mov
fwait
enter
xchg
mov
loope
add
sbb
push
pushf
loope
jecxz
(bad)
cld
outs
call
jmp
add
xor
adc
push
push
cld
jge
rcl
stos
scas
cmc
add
stc
jbe
movsx
dec
ins
mov
aam
retf
cli
iret
mov
stos
push
jb
jmp
xchg
mov
jne
jo
je
mov
sysenter
test
pushf
mov
jge
and
movs
call
push
dec
and
sub
cmp
add
int3
rcl
pop
into
cmps
mov
xchg
mov
popf
push
loope
or
sub
ins
fs
aad
and
call
or
cmp
and
xchg
retfw
sbb
cli
cs
xchg
lods
cmp
dec
pop
clc
mov
xor
mov
dec
jns
loop
pop
xchg
mov
and
mov
xchg
inc
jge
mov
ds
lds
cdq
or
jns
adc
pop
retf
jmp
jae
mov
mov
inc
ja
out
dec
cwde
push
cmp
push
push
in
sar
mov
aad
daa
int3
inc
jno
mov
push
shl
and
neg
adc
fs
imul
add
int3
mov
mov
mov
stos
stos
cdq
daa
pusha
sahf
xchg
daa
test
aad
in
push
ret
or
call
jne
add
mov
shl
jns
scas
pop
outs
xchg
sbb
fnstsw
mov
adc
pushf
(bad)
fstp
loope
sub
jb
add
pop
and
inc
or
cdq
enter
mov
adc
sub
and
out
cwde
mov
pushf
ins
xchg
sysexit
jge
(bad)
dec
mov
and
mov
jmp
je
lahf
mov
pop
xor
xor
mov
jns
in
adc
dec
pop
(bad)
cmc
or
fsub
(bad)
movs
inc
cdq
rcr
lahf
jb
js
movs
ja
ror
pop
dec
jnp
push
arpl
mov
fdiv
ret
lahf
test
imul
repnz
and
ja
ins
push
add
mov
iret
in
push
adc
cli
not
pop
nop
cmp
js
out
push
xor
dec
outs
inc
jmp
in
scas
cmp
ror
call
adc
not
sahf
imul
fisttp
movs
je
mov
das
ret
cmc
cmp
adc
xchg
fiadd
sub
out
push
int3
sub
dec
jmp
imul
adc
push
adc
aas
inc
mov
push
fisub
imul
inc
add
shl
pop
cdq
imul
out
pop
xor
repnz
cmp
cmp
mov
pop
in
xchg
or
xor
cs
xchg
adc
out
repz
mov
add
repnz
sub
pop
add
sub
cmc
jnp
mov
sbb
in
xor
inc
leave
xchg
fdiv
push
and
pop
sub
retf
jecxz
ins
dec
retf
cwde
push
xchg
mov
ja
cwde
fcmovnu
pop
and
adc
out
xchg
imul
les
xchg
sar
lods
inc
add
lock
or
mov
cli
rcl
fwait
call
adc
push
adc
cmp
add
jecxz
jb
xchg
cmp
leave
loope
daa
push
daa
fist
dec
outs
add
mov
stos
inc
in
sub
pushf
or
adc
test
pop
fwait
xor
pop
cmps
dec
mov
mov
jns
sahf
or
xchg
inc
push
outs
sahf
imul
imul
jne
lahf
sub
out
outs
call
xchg
ds
and
test
jmp
rcl
and
xchg
add
dec
sub
repnz
pop
nop
xchg
mov
movs
cmc
iret
mov
cmps
mov
and
(bad)
jb
dec
dec
mov
pop
mov
cmp
pushf
std
inc
push
stc
enter
jge
add
and
pop
xor
scas
xlat
call
lock
pop
popa
pop
cmp
adc
(bad)
push
jns
out
loopne
xchg
adc
ja
aas
das
ret
test
add
sahf
imul
in
popa
mov
xor
iret
add
aaa
jge
out
add
xor
(bad)
push
int
sub
aad
cmp
arpl
aas
mov
xchg
pop
lds
out
push
or
xor
mov
push
sbb
mov
in
push
sub
pop
pop
(bad)
scas
mov
fimul
movs
push
int3
jecxz
daa
mov
movs
int3
test
cwde
add
cs
hlt
ror
ins
fidivr
cwde
ja
fldcw
aam
inc
mov
pushf
xchg
cmp
test
call
cmp
add
ret
add
adc
jno
bound
mov
jecxz
xchg
mov
inc
imul
mov
xchg
inc
add
add
jmp
aas
push
cdq
mov
fdivp
add
xchg
scas
ret
xor
add
(bad)
in
dec
and
and
xchg
repz
aam
cmp
shr
adc
jmp
mov
mov
push
lahf
or
fsubr
push
fdivr
mov
in
test
into
mov
hlt
jb
inc
ret
adc
cmp
jle
ds
cld
jmp
jb
or
push
xor
xchg
or
shr
pop
out
jo
lods
jle
jg
nop
inc
and
sub
sbb
xor
pusha
xor
xchg
sbb
pop
imul
xlat
fild
out
mov
mov
mov
jne
gs
nop
setg
jne
mov
mov
js
adc
call
cli
das
sub
cld
(bad)
in
out
movq
rcr
sbb
dec
(bad)
cmp
aad
enter
movs
lods
adc
jg
mov
stos
or
outs
or
cmps
jno
ins
ins
ret
xor
nop
push
sbb
div
daa
push
push
ins
pop
xchg
mov
sbb
test
add
push
(bad)
fdiv
sbb
retf
mov
xchg
push
scas
pop
fld
cmp
pop
imul
test
cmp
pop
fistp
outs
sbb
xchg
(bad)
jmp
jp
and
sbb
xor
jnp
cld
pusha
repz
bnd
shl
dec
mov
ja
aam
shl
add
inc
mov
sub
pop
cmps
xchg
retf
out
cmc
xchg
push
in
pop
inc
fstp
push
mov
ss
test
fmul
hlt
xor
jg
aam
shl
imul
mov
and
jmp
push
in
inc
cwde
push
sbb
cmp
(bad)
lock
jmp
fmul
in
in
mov
inc
dec
cli
xchg
xchg
movs
iret
jg
cmp
push
into
push
jecxz
shl
mov
(bad)
fdiv
fbstp
sbb
pushf
ret
adc
push
test
mov
sub
lods
cmp
sbb
iret
test
retf
xor
pop
mov
call
pop
aad
dec
mov
cmc
adc
mov
aad
mov
cli
sub
out
outs
lock
pop
retf
jge
stos
cmp
mov
push
fcomp
mov
or
hlt
(bad)
ins
jp
jge
repnz
jae
dec
hlt
or
rcr
mov
mov
mov
sbb
jle
add
push
test
fdiv
or
cwde
retf
addr16
mov
or
pop
retf
fsubr
push
(bad)
cld
lods
pop
into
jnp
mov
dec
cs
pop
mov
pusha
cmp
ds
mov
sbb
or
enter
iret
mov
sbb
adc
in
imul
add
pop
out
daa
ror
or
std
fwait
sbb
in
adc
and
ret
xor
mov
push
(bad)
mov
pop
push
jp
scas
lock
imul
test
ret
adc
mov
mov
xor
ret
hlt
aam
adc
ror
cmps
sub
pop
or
xchg
push
sbb
or
cli
dec
pop
bound
jge
pop
mov
mov
mov
test
xor
cmp
test
pop
daa
daa
mov
push
pop
clc
mov
pop
scas
mov
stos
pop
mov
ds
xor
sahf
test
cld
sbb
sahf
fmul
pop
pop
adc
pop
and
jo
ins
dec
inc
loop
xchg
xchg
jl
imul
hlt
test
out
xor
mov
leave
xchg
fstp
or
push
mov
int
and
xor
sbb
loope
out
pop
hlt
idiv
xor
aam
or
fild
movs
xchg
arpl
xor
pop
sub
mov
retf
and
repz
div
xchg
jecxz
movs
mov
cmp
mov
or
fimul
cmp
or
mov
jecxz
rcr
aas
ret
fild
cs
je
(bad)
mov
test
(bad)
fcomp
push
retf
mov
mov
enter
(bad)
bnd
std
gs
in
call
fdiv
mov
mov
mov
fld
dec
jmp
xchg
cwde
scas
inc
sbb
ret
or
call
out
xor
cmp
add
jmp
cmp
jne
mov
cdq
popf
inc
neg
xchg
int
pextrw
arpl
popf
mov
sub
and
add
iret
cmp
sub
call
mov
or
jg
mov
popf
cmps
or
adc
add
cmps
int
pop
pushf
add
out
jmp
mov
movd
sbb
ss
adc
f2xm1
pop
ret
mov
sbb
cli
sub
sub
mov
mov
xor
rol
add
add
int
nop
adc
pop
push
sahf
jns
aam
sti
cmps
inc
outs
xchg
enter
xchg
loope
pop
out
repz
movs
out
sbb
call
sbb
mov
les
(bad)
sub
outs
and
into
dec
int3
push
push
jle
jle
jbe
mov
aaa
cmp
stos
xchg
jne
sub
sub
dec
jnp
jle
fistp
(bad)
repz
xor
xor
mov
inc
sbb
add
inc
jno
mov
sub
out
(bad)
xchg
jne
add
add
xchg
or
push
pop
aas
ss
xor
stc
repz
retf
sub
jnp
cmp
and
sub
retf
(bad)
mov
test
jb
cmp
hlt
jmp
fidivr
pop
pop
cmp
fisttp
les
jg
cmp
ins
fucomp
pop
cdq
push
aam
test
xchg
rcl
lods
(bad)
out
in
xor
cmc
daa
cmp
xor
mov
cmps
hlt
inc
lock
cmp
adc
ja
and
(bad)
cmp
dec
mov
and
push
cld
fnsave
xor
(bad)
(bad)
inc
push
inc
sub
out
push
je
outs
jb
cmp
push
cdq
sbb
and
mov
jmp
outs
retf
test
ins
inc
dec
lea
and
movs
jae
imul
call
adc
push
gs
mov
call
inc
mov
adc
or
sbb
xchg
mov
lods
sub
mov
rcr
jmp
popaw
cmp
jae
rcl
ror
adc
sbb
inc
in
cmp
test
or
int3
or
push
loop
push
add
sub
cs
popa
iret
sbb
fild
push
dec
and
fxch
test
or
inc
in
xlat
mov
lahf
pop
leave
bnd
inc
enter
jnp
pop
xor
sub
sub
ss
cmp
lds
ror
jae
outs
mov
mov
movs
push
dec
xchg
aaa
in
sub
sbb
or
sbb
jo
ins
std
ja
into
and
xor
jnp
enter
outs
hlt
inc
dec
mov
and
leave
fld
(bad)
jnp
stos
loopne
mov
fbld
and
inc
xchg
(bad)
cdq
dec
sub
fisubr
lock
mov
addr16
sub
cli
jg
sahf
dec
div
retf
inc
stos
cmp
popa
pop
jmp
jl
aam
xor
inc
bound
fbstp
(bad)
cmps
sbb
(bad)
sbb
xor
pop
cmp
pop
cmc
mov
mov
nop
cdq
or
fcom
fild
adc
es
inc
or
(bad)
mov
jmp
adc
rcl
popf
xchg
adc
jmp
popa
fldcw
xor
or
jecxz
push
fadd
xchg
pop
mov
pop
hlt
xchg
fist
or
repz
aaa
das
ins
faddp
mov
push
cld
pop
inc
pop
fld
cmp
rol
fs
or
(bad)
and
shr
call
xor
mov
iret
ins
jmp
and
mov
mov
cdq
jmp
fldcw
jl
sub
pushf
out
sbb
lock
sub
mov
fldenv
call
aad
inc
mov
retf
xor
mov
mov
sbb
dec
xchg
popa
jle
retf
and
pop
sti
sub
lahf
cmp
icebp
mov
or
fs
loope
sbb
push
outs
(bad)
pop
mov
and
pusha
xchg
movs
jmp
inc
in
fimul
sub
int
push
mov
cld
lods
mov
ins
mov
sub
(bad)
iret
out
inc
jne
mov
out
das
jge
shl
fild
test
xchg
test
xchg
sub
popa
out
or
xchg
mov
mov
retf
jnp
xor
sbb
mov
in
pop
inc
fdivr
repnz
cdq
xor
sub
sbb
enter
scas
dec
mov
and
pop
pop
in
mov
shl
pop
(bad)
mov
out
pop
addr16
add
in
push
and
mov
mov
aaa
push
cmp
jno
ss
movs
mov
mov
sub
popf
add
add
cs
div
jae
jnp
sub
sbb
(bad)
loopne
pop
and
add
movs
xchg
dec
fmul
pop
aaa
dec
jmp
pop
not
push
imul
jg
ja
add
xor
or
arpl
mov
push
ins
retf
push
retf
cmp
jl
ffree
jmp
mov
adc
mov
retf
call
retf
pop
mov
std
or
les
shr
(bad)
jl
sti
pop
jmp
in
mov
sub
or
dec
jecxz
inc
sbb
into
daa
mov
mov
mov
mov
out
xchg
pop
sbb
mov
test
pop
mov
inc
sbb
test
sahf
sbb
sbb
ror
ss
mov
mov
std
fdivr
popf
ficom
xlat
(bad)
(bad)
mov
and
out
mov
imul
jae
out
test
lods
push
cmp
leave
adc
cmp
(bad)
stc
cmp
fistp
loope
int3
inc
mov
(bad)
jne
sub
xor
scas
ss
pop
test
cmc
std
mov
ret
adc
ss
jo
mov
pop
daa
popa
or
jmp
aaa
mov
hlt
cmp
retf
cli
cmps
jle
jb
adc
dec
sbb
ficomp
jecxz
(bad)
clc
ror
add
repnz
sub
(bad)
xchg
ja
mov
fcomp
jmp
push
outs
das
inc
xor
xchg
or
in
xchg
fstp
fsub
es
fwait
mov
push
shl
rcr
into
out
gs
enter
fldenv
lods
sbb
shl
dec
mov
int
or
jmp
cmp
jmp
repz
fs
mov
int
in
mov
mov
sbb
imul
fs
out
cs
push
es
pop
in
add
or
cmp
mov
popf
fidivr
xor
inc
pushf
cmp
fs
or
aaa
and
sub
sub
mov
scas
adc
push
sar
fstp
retf
(bad)
sub
inc
sub
stc
dec
fidiv
add
mov
and
(bad)
cdq
xor
inc
adc
or
ins
imul
jecxz
movs
popf
int
inc
mov
adc
pop
cmp
hlt
xchg
daa
fucomip
pop
push
dec
leave
jo
in
jb
pop
xchg
mov
sub
and
icebp
push
cmps
sahf
fcmovnb
pop
xor
jmp
pop
cmc
mov
gs
sbb
dec
out
scas
icebp
sub
aas
jo
mov
fcomp
mov
sbb
call
imul
dec
mov
lods
pop
jmp
and
cmp
(bad)
lock
push
popa
pop
cmp
pushf
inc
push
movs
push
xchg
lock
enter
dec
mov
jecxz
iret
push
adc
in
jl
cmp
push
iret
ret
dec
(bad)
xor
leave
test
pop
inc
cdq
mov
xor
push
faddp
jne
jmp
lds
mov
test
mov
fsubr
pop
jecxz
inc
xchg
ja
leave
xchg
mov
inc
xchg
cmp
das
xchg
pop
jmp
or
and
out
jmp
iret
dec
push
push
mov
sub
push
jp
pop
push
cld
out
aad
fldcw
repz
ss
mov
mov
push
jae
xor
mov
pusha
pusha
inc
js
aam
pusha
inc
push
and
dec
sti
pop
push
fdiv
sub
sbb
mov
ret
jne
icebp
out
add
pusha
xchg
xchg
xchg
minps
fwait
jle
outs
(bad)
mov
xchg
push
cmp
repnz
pop
scas
and
or
cld
push
xchg
jp
or
jp
into
adc
xchg
movs
mov
cmp
icebp
(bad)
mov
jne
sbb
cmp
(bad)
mov
lea
stc
cmc
xor
sbb
jmp
push
jle
jg
stc
iret
dec
aam
ret
(bad)
cli
mov
sub
cmp
in
pop
mov
xlat
mov
data16
xor
jl
xchg
fiadd
stos
xchg
mov
add
xor
ins
lds
push
jns
shl
jnp
push
(bad)
(bad)
cli
ja
xchg
scas
js
mov
push
fbld
jne
adc
sbb
jo
sti
xor
xchg
xchg
mov
xor
sub
lods
and
cmp
addr16
add
inc
xchg
(bad)
mov
push
jle
out
mov
stos
push
mov
jmp
(bad)
(bad)
xor
mov
inc
retf
and
scas
jae
adc
inc
jo
pop
push
pop
cmp
icebp
dec
dec
sub
pop
push
data16
cld
ja
xor
cmp
mov
nop
or
mov
and
pop
pop
in
xchg
cmps
mov
xchg
sbb
loop
mov
mov
fsubr
mov
mov
js
je
inc
in
fs
jecxz
xchg
inc
fld
sub
(bad)
mov
lahf
xchg
ja
push
stos
not
add
xor
and
enter
jne
jb
mov
fsub
mov
jnp
lods
test
adc
aad
cmps
push
or
cmp
(bad)
and
loopne
push
into
(bad)
popa
rol
push
clc
int
jle
inc
add
bnd
icebp
popf
dec
mov
in
or
int3
pushf
add
sub
jmp
pcmpeqd
jnp
xor
call
stos
inc
shl
mov
mov
jo
ins
jb
xchg
clc
int
add
mov
sub
aam
cld
pop
xlat
rol
xchg
jmp
cmps
push
aam
out
pushf
or
add
jns
out
icebp
or
add
push
rol
sub
lahf
sub
pop
(bad)
cmp
sbb
mov
scas
repz
in
(bad)
fsub
pop
mov
mov
sub
ja
ror
outs
mov
test
fstp
xor
mov
lock
mov
lock
add
and
inc
mov
mov
xchg
or
inc
add
inc
dec
rcr
or
das
mov
in
pop
fcmovnb
jge
cdq
aad
fdivr
lds
lds
cmp
psllw
and
push
out
or
ret
add
pop
xchg
out
dec
xor
adc
mov
loop
or
test
sub
ret
sbb
add
lock
popf
imul
mov
jae
outs
xchg
je
pop
test
fdiv
retf
mov
test
mov
movs
mov
pop
stos
out
je
mov
pushf
fldcw
xchg
xchg
ds
mov
cdq
or
mov
repnz
jb
repnz
or
mov
mov
fsin
add
jne
out
stos
adc
dec
test
adc
xchg
mov
addr16
dec
mov
dec
push
sbb
mov
imul
or
ja
inc
xchg
cmp
rcl
pop
and
aaa
xchg
mov
xchg
or
in
jmp
push
xor
jae
jbe
xor
(bad)
cmps
pop
jb
std
lea
(bad)
sti
fld
outs
ret
test
mov
ror
pop
repz
(bad)
mov
xchg
popa
inc
fsubp
push
and
lock
inc
popf
(bad)
jmp
xchg
fisttp
mov
add
add
fistp
dec
mov
retf
jns
adc
cwde
inc
sub
add
dec
mov
and
je
mov
das
jmp
push
ins
js
pop
dec
mov
leave
dec
dec
movs
std
jnp
movs
rol
popa
ret
pop
int3
loope
dec
sti
inc
repnz
cmp
ins
adc
or
cmp
mov
mov
mov
div
push
icebp
aas
imul
dec
sti
mov
movs
xor
movs
lods
test
sbb
xchg
sti
stos
(bad)
xchg
jp
sbb
push
imul
add
mov
xchg
pop
nop
push
sbb
xchg
push
repz
imul
popf
arpl
jecxz
pop
xor
test
push
loope
cmp
nop
mov
das
push
dec
add
mov
fnstcw
xlat
add
xchg
movs
jmp
mov
cld
cmp
shl
ins
mov
lss
test
test
inc
cld
pop
and
adc
stc
nop
mov
int3
inc
hlt
mov
cmp
cli
jle
push
int3
pushf
push
pop
and
xchg
addr16
cmp
fstp
inc
or
mov
dec
scas
adc
mov
xchg
push
pop
adc
test
leave
mov
dec
lahf
fisub
add
test
fwait
outs
mov
add
(bad)
cmp
push
int3
ja
cmp
jg
cmp
ins
mov
and
adc
mov
mov
mov
(bad)
aad
and
sub
jmp
push
jl
xchg
adc
adc
(bad)
jns
cmp
addr16
ret
jp
sar
add
aaa
mov
jne
mov
and
xchg
out
cmps
adc
iret
mov
and
inc
jae
ins
imul
out
jmp
aam
clc
and
mov
mov
sub
es
adc
and
lods
inc
das
mov
or
shr
(bad)
movs
pop
jge
sub
add
mov
jo
adc
mov
sbb
outs
dec
xlat
sub
hlt
out
dec
adc
sub
test
(bad)
rcl
data16
push
mov
mov
dec
gs
mov
pushf
sub
pop
and
lds
cmc
mov
sbb
jno
mov
mov
out
jmp
push
mov
xchg
out
lea
clc
dec
xor
xor
and
call
bound
icebp
sar
or
mov
shl
or
repz
sub
retf
sub
xor
out
int3
loop
adc
rcr
call
pop
mov
retf
rcr
push
test
cmp
lods
test
dec
retf
es
mov
pop
mov
push
imul
sub
dec
scas
loop
xchg
call
adc
imul
jl
jae
xchg
cmp
frstor
pop
mov
pop
int3
cs
adc
sub
xchg
cmp
sub
ja
iret
and
mov
test
and
jb
xchg
pop
add
leave
data16
push
test
into
xchg
sbb
mov
sub
call
push
push
mov
pop
test
vmwrite
loopne
xchg
dec
call
retf
std
pop
test
push
pusha
mov
das
int
lea
sub
pushf
pushf
test
jnp
repnz
jne
mov
cmp
sub
cmp
fcmovnbe
sbb
cmp
push
or
cdq
cmp
cdq
pop
push
or
add
gs
pcmpeqb
lods
dec
enter
pop
mov
push
push
mov
dec
xchg
push
add
ret
leave
out
imul
pop
call
jmp
dec
mov
inc
fimul
push
fadd
mov
sub
jle
nop
mov
mov
ja
pop
jg
enter
leave
lock
jmp
cmps
leave
loop
jg
repz
arpl
dec
jge
or
pop
and
mov
xor
outs
jl
lahf
dec
add
jbe
adc
sbb
adc
push
cdq
mov
fwait
mov
retf
sub
inc
je
loopne
push
cmps
in
sbb
lods
popa
lods
in
xor
cmp
mov
xchg
movs
retf
jmp
jge
fistp
jno
fsub
inc
sti
and
cmps
and
sub
ret
std
dec
pop
or
mov
pop
lahf
pop
push
xchg
fucom
and
rcr
cdq
jmp
sbb
or
cwde
outs
and
test
mov
mov
std
mov
daa
std
pop
nop
loop
xor
into
sahf
jl
jmp
adc
push
aaa
aas
shr
lods
cdq
sub
hlt
cmp
and
mov
test
sub
pop
adc
arpl
push
test
out
push
out
nop
in
or
inc
sub
sbb
popf
icebp
mov
jp
call
mov
stos
dec
ins
jne
movs
cmp
add
imul
fcmovb
loope
pop
inc
pushf
pop
(bad)
lds
test
cmc
stos
pop
retf
xlat
dec
inc
xor
lods
pop
test
jne
fst
test
xchg
out
ds
mov
cmp
cmps
fucom
or
mov
xlat
popf
inc
mov
sub
inc
pop
push
jmp
add
or
test
inc
outs
jae
adc
repnz
adc
adc
loop
mov
clc
lods
mov
pop
xchg
cli
stos
mov
sub
arpl
mov
xchg
push
mov
inc
inc
pop
cmps
test
sbb
in
test
retf
pop
mov
mov
mov
out
pop
cwde
int
mov
enter
mov
test
mov
mov
mov
push
outs
cld
adc
fadd
gs
fcmovnu
push
arpl
pop
mov
ss
lods
and
int3
sub
adc
popf
les
jns
jle
fsub
mov
or
out
jae
movs
pop
stos
fisubr
sahf
mov
inc
ror
int
loopne
loope
cs
add
lods
fadd
jbe
ret
cmps
nop
popa
xor
out
fisub
inc
sub
xor
sbb
cmc
pop
fnstcw
fsubp
jp
add
clc
test
add
loop
faddp
mov
pop
mov
(bad)
out
je
test
retf
stos
and
test
and
inc
sbb
icebp
movs
std
mov
or
popf
inc
mov
add
adc
in
inc
pop
xchg
mov
scas
repz
push
mov
mov
push
int
jge
cmp
daa
stos
movs
cdq
lds
xor
jbe
mov
push
lock
mov
dec
inc
inc
mov
sub
mov
retf
mov
mov
cmp
jno
std
sub
imul
mov
add
outs
shl
sub
jbe
add
cmc
dec
lods
rcr
cmp
aam
jecxz
movs
call
jae
ss
dec
movs
ror
out
xchg
or
out
mov
cwde
jl
mov
push
pop
and
xor
iret
sub
call
dec
movs
add
in
leave
mov
out
xor
ins
lahf
pop
rcr
bound
fimul
add
cli
int3
out
pop
aam
add
mov
mov
dec
imul
xchg
out
idiv
mov
imul
dec
nop
ss
data16
(bad)
sbb
xor
mov
inc
add
repz
js
jecxz
dec
pop
xor
dec
lods
scas
cmp
clc
lock
imul
hlt
out
mov
and
call
stos
mov
ret
aad
adc
mov
cdq
loop
sahf
sub
sahf
xor
in
data16
jbe
mov
pop
rcl
(bad)
mov
push
pop
adc
lea
cs
push
mov
(bad)
out
fcom
out
les
shr
mov
sub
or
cmp
cmp
and
das
lock
add
test
or
out
xor
lods
xchg
aam
lahf
jmp
es
test
adc
imul
inc
fwait
and
cmps
add
icebp
mov
test
sub
mov
push
mul
retf
je
dec
sti
ins
adc
in
mov
movs
je
mov
dec
lea
(bad)
mov
(bad)
push
add
retf
(bad)
xor
xchg
fst
fcomp
loopne
mov
push
out
retf
xchg
push
lahf
sbb
rol
jb
xchg
mov
add
nop
or
jl
loop
sar
sar
mov
sub
jo
imul
cdq
mov
or
sub
sub
dec
movs
pop
mov
repnz
jo
mov
stos
xchg
lock
popf
(bad)
loope
sti
and
jnp
fcmovne
ins
push
cmp
mov
out
in
mov
add
mov
retf
xor
retf
aam
mov
cmc
adc
push
dec
in
(bad)
fdivr
aam
sub
lock
mov
fdiv
lahf
pop
leave
xor
inc
and
push
int
loop
pusha
and
ret
or
addr16
jo
lea
xchg
in
jmp
dec
lods
sbb
and
inc
sbb
mov
and
enter
mov
cmp
std
imul
in
inc
test
jmp
inc
pop
(bad)
pop
add
fild
pop
cmp
cmc
in
xlat
loope
hlt
xchg
lock
dec
add
int3
std
sahf
xchg
sbb
retf
xchg
sbb
pop
jecxz
dec
cmps
pop
jg
dec
add
inc
out
icebp
adc
stos
push
je
fidiv
pop
cmp
inc
ja
pop
aas
dec
outs
push
inc
out
out
push
mov
xchg
daa
aas
into
adc
lock
dec
(bad)
mov
(bad)
jno
inc
int3
xchg
scas
sub
pop
xchg
lock
into
inc
or
xor
inc
adc
fiadd
cmps
int
push
push
in
xor
add
push
inc
mov
and
std
bound
shl
mov
out
push
lahf
sahf
jle
mov
repnz
cmp
es
lahf
and
(bad)
jns
adc
mov
icebp
jl
jno
mov
push
sbb
ja
pop
sub
cmp
(bad)
cmc
jbe
sub
lock
mov
retf
mov
and
loop
add
rol
dec
ja
or
fsubr
(bad)
cmp
inc
push
sbb
or
enter
data16
aas
retf
mov
sbb
popa
fwait
call
inc
xor
push
adc
pushf
xor
scas
shl
sub
cwde
fmul
loopne
arpl
push
add
add
mov
jl
dec
push
pop
cmps
sub
iret
xchg
sbb
push
mov
mov
add
daa
std
ja
mov
into
ret
pop
mov
cmp
mov
and
retf
mov
adc
mov
sbb
fnsave
fimul
mov
jnp
popa
nop
retf
mov
cmp
jmp
mov
into
lahf
mov
jmp
xor
sbb
and
jbe
jge
imul
test
cli
push
ror
adc
mov
aas
imul
shl
sub
ror
int
lea
push
movs
fxch
xor
inc
cli
mov
pushf
jno
aam
imul
sbb
add
stos
pcmpeqd
cmp
retf
pop
xchg
push
lahf
call
cmc
popa
xchg
inc
mov
je
fs
hlt
mov
cs
xchg
inc
shr
mov
ja
mov
hlt
mov
dec
xchg
popa
int3
out
clc
dec
rcl
sahf
sbb
sahf
push
call
mov
in
icebp
push
and
ins
rcr
sbb
inc
aad
rcr
call
xchg
loope
mov
and
and
aad
sbb
(bad)
pop
mov
push
loopne
imul
push
outs
fld
mov
mov
popf
in
inc
sbb
dec
loop
sysexit
fs
mov
out
add
lahf
xchg
cli
mov
adc
bound
iret
imul
lds
xchg
add
out
sti
out
sub
cmc
pop
and
je
pusha
add
xchg
adc
pop
bound
cmp
sbb
push
cmp
arpl
push
es
jp
mov
push
mov
fisubr
and
push
fdivrp
retf
scas
mov
adc
and
jecxz
pushf
mov
add
dec
call
daa
sti
mov
jmp
sub
leave
push
stos
(bad)
cmps
dec
not
or
jge
adc
cmp
lods
fist
jge
sahf
aam
(bad)
or
pusha
loope
jmp
xchg
into
(bad)
pop
xchg
movs
shl
mov
dec
icebp
mov
das
dec
xchg
imul
aad
dec
(bad)
cwde
out
sub
ja
cwde
xlat
xchg
outs
repz
sbb
xchg
std
cmps
xchg
gs
jg
je
mov
jae
sbb
lahf
jp
sub
cmps
inc
add
dec
pop
push
cwde
dec
cli
clc
pusha
neg
es
ins
cmp
and
pop
imul
cli
xchg
cmp
adc
push
adc
(bad)
adc
(bad)
retf
jecxz
out
shl
hlt
mov
inc
adc
mov
jbe
xlat
int3
mov
mov
retf
lahf
jle
inc
call
mov
pop
setle
mov
cmp
daa
inc
inc
and
and
inc
fdiv
cmp
(bad)
fisttp
dec
mov
xor
add
dec
out
cwde
rol
movs
imul
sub
push
push
cmp
dec
popf
test
xchg
push
xchg
or
inc
fwait
movs
(bad)
iret
in
mov
movs
test
adc
and
into
dec
(bad)
inc
popa
std
test
fimul
pop
or
fld
push
jg
mov
(bad)
js
jbe
test
cmc
push
js
lds
and
lock
mov
sar
sbb
jb
xchg
xchg
inc
pop
sbb
dec
and
mov
enter
jbe
jmp
in
jo
or
jecxz
sub
out
mov
rcr
nop
loopne
rol
sbb
daa
lods
mov
es
inc
mov
(bad)
adc
ret
call
push
jne
arpl
cmps
cmp
inc
ret
jnp
fsub
mov
xchg
les
test
jo
arpl
or
retf
popf
pop
enter
sbb
sar
ja
in
adc
enter
fwait
(bad)
outs
(bad)
loope
(bad)
in
inc
cli
mov
xchg
mov
push
movs
mov
out
outs
mov
call
pop
stos
push
mov
and
popa
(bad)
lds
dec
mov
fistp
jb
pop
(bad)
loopne
jo
nop
jp
mov
pop
adc
out
dec
push
out
js
push
lds
xor
das
ret
and
push
pop
jne
rcr
(bad)
sub
jp
lods
in
dec
les
out
js
pop
jae
std
inc
int3
shr
and
ja
dec
cwde
ret
or
sub
sbb
sub
aam
xchg
cwde
mov
pop
dec
xchg
(bad)
das
add
xchg
xor
inc
retf
fsub
mov
test
jmp
lea
jp
addr16
or
mov
and
stos
lea
repz
cs
adc
pop
xchg
push
inc
add
jecxz
cmp
hlt
push
shr
cli
mov
push
add
and
mov
jne
and
(bad)
mov
mov
into
or
fwait
push
repnz
retf
push
xchg
outs
adc
popf
cmps
lock
int3
mov
lea
dec
or
out
inc
sbb
adc
dec
add
mov
scas
scas
mov
push
sbb
push
ins
loope
xchg
stos
dec
leave
pop
add
add
sub
in
or
inc
mov
mov
add
push
mov
movs
sbb
test
stos
adc
xchg
pop
retf
add
test
adc
sti
pop
adc
xchg
je
or
jae
push
popf
or
push
add
cld
fidiv
lea
cmc
mov
not
mov
push
jg
inc
rcr
data16
add
add
push
mov
test
or
or
iret
jno
jmp
cmc
outs
sub
pop
or
call
and
xor
dec
loope
fstp
dec
jle
js
repnz
les
test
push
add
pop
inc
shr
fisub
push
popa
xor
push
xchg
sbb
jecxz
test
dec
movs
call
pop
mov
push
retf
sub
pushf
or
je
loopne
test
stos
xchg
jae
add
adc
xchg
mul
and
jl
inc
jecxz
cmp
sub
adc
cwde
mov
(bad)
sahf
xchg
jmp
out
loope
or
js
xor
daa
or
(bad)
cmps
neg
push
test
fs
jno
or
adc
enter
lahf
lahf
xor
ror
rcl
mov
mov
xchg
push
xor
rol
test
cmp
push
leave
imul
or
shr
sub
imul
sbb
cmp
jp
pop
aam
xchg
xchg
mov
sub
inc
sbb
in
xor
(bad)
mov
out
ins
mov
cwde
cmp
int
push
mov
xlat
pop
pop
lea
imul
push
push
pop
(bad)
and
scas
fucomi
fstp
fst
and
jb
shl
mov
das
jae
loop
mov
mov
movs
ins
pop
mov
push
cmp
mov
and
cdq
xchg
xchg
int
push
pop
and
xlat
pop
sbb
xchg
inc
inc
outs
pusha
std
aas
sahf
mov
pop
jp
mov
loop
pusha
pop
jae
mov
add
cs
mov
add
popa
dec
pop
mov
gs
adc
fild
loop
mov
push
or
lock
xchg
pop
inc
nop
aam
jmp
mov
and
int
xchg
mov
mov
movs
popa
or
pop
lds
push
pop
fs
mov
jmp
pop
pop
adc
(bad)
(bad)
xlat
outs
retf
les
mov
call
dec
out
call
add
push
fisubr
or
adc
repz
test
(bad)
mov
xchg
pusha
inc
cmp
sub
movs
gs
xor
xchg
mov
push
jmp
sbb
lods
ror
call
jle
xchg
mov
jmp
jmp
cmp
rol
dec
rcr
fsub
je
push
cmp
adc
test
mov
stos
out
lock
inc
sub
xchg
or
imul
pop
mov
hlt
out
mov
and
mov
es
mov
inc
sbb
add
sahf
ds
sub
out
test
pop
xor
xchg
loop
test
inc
push
nop
pop
test
arpl
or
repnz
outs
pop
jmp
sar
mov
or
lods
sbb
hlt
push
mov
leave
mov
sub
stos
loope
int
dec
jmp
xchg
add
imul
sbb
jmp
movs
xor
mov
repnz
and
mov
movs
and
mov
jo
ins
dec
sar
test
or
fs
(bad)
push
cmp
mov
sbb
in
xlat
jg
jp
pop
mov
mov
imul
cli
add
cmps
cmp
add
lods
mov
nop
or
loop
sub
mov
mov
dec
(bad)
and
fldcw
or
sti
clc
int
and
jg
mov
retf
pop
mov
cli
ror
and
add
ret
leave
enter
add
xchg
js
or
dec
xor
xor
pusha
outs
call
push
mov
cmc
jle
fldenv
xchg
jl
or
pop
jnp
adc
dec
sbb
inc
mov
cmps
cmc
dec
mov
jmp
das
aad
rcr
inc
enter
cmp
aaa
shr
jbe
inc
sub
stc
push
push
popa
shr
or
sbb
adc
and
pop
sbb
mov
adc
jnp
add
inc
(bad)
cmc
pop
add
js
fisub
call
sbb
xlat
mov
pop
cmps
clc
push
movs
arpl
pop
xlat
mov
call
pop
ins
or
mov
sub
lock
jae
ror
fnsave
add
ret
mov
cmp
xor
push
xchg
jae
mov
inc
sbb
jo
cmc
pop
jmp
xchg
in
sbb
enter
mov
popa
sahf
inc
fwait
xor
pop
and
sti
data16
pop
movs
push
es
retf
push
pop
loopne
ins
add
cld
push
out
adc
mov
dec
inc
clc
out
icebp
inc
imul
mov
lods
push
fcomi
out
jno
repnz
dec
mulps
add
jg
push
(bad)
jg
(bad)
ret
sbb
loop
inc
cmps
sub
cmps
adc
jecxz
pop
add
sbb
into
js
out
xchg
lods
add
idiv
jl
and
(bad)
sbb
test
or
push
adc
mov
ror
adc
xchg
inc
push
pusha
sub
cmp
neg
stc
outs
inc
jne
repnz
dec
rcr
je
add
inc
dec
jne
sub
add
fsubr
cmp
push
sbb
dec
or
jecxz
inc
pop
aas
push
inc
sti
cmp
inc
sub
idiv
rcl
mov
pop
ret
sbb
inc
rcl
inc
movs
pop
adc
aad
scas
adc
ins
sub
nop
(bad)
push
jae
call
add
or
mov
inc
sub
jge
mov
jmp
enter
xchg
pop
scas
push
pop
push
pop
shl
aam
push
dec
mov
movs
pop
out
sub
pop
mov
loop
cdq
adc
ret
sub
cwde
xlat
jmp
xchg
adc
push
xor
es
or
mov
xor
jne
loop
retf
cmps
jns
pop
je
sub
adc
adc
sub
pusha
add
pop
out
stos
and
pop
dec
cmp
daa
pusha
xchg
add
adc
inc
mov
imul
lea
fadd
cld
dec
inc
sub
cmp
push
fstp
(bad)
jns
jne
or
jno
adc
inc
outs
rol
(bad)
and
pop
in
cmp
mov
add
inc
xor
add
mov
fstp
sbb
in
adc
xor
cs
out
popf
(bad)
lds
(bad)
mov
adc
pop
pop
add
cmp
push
cmc
dec
jmp
ret
lods
add
ja
or
pushf
mov
mov
dec
mov
pushf
std
xor
pop
les
sub
loopne
sub
xchg
call
inc
mov
inc
cdq
jne
pushf
mov
mov
adc
and
fld
mov
pusha
jnp
outs
lods
popa
aaa
or
dec
adc
ds
cs
mov
dec
and
lock
in
and
test
fwait
jae
jmp
xchg
int3
(bad)
test
add
or
scas
movs
aaa
jp
rcr
or
xchg
xchg
popf
les
mov
and
xchg
popa
aad
rcr
xchg
ret
adc
pop
dec
and
bound
sbb
and
sbb
ins
xlat
test
jp
popa
int3
into
ins
inc
sub
fstp
ins
push
jae
add
test
sbb
xlat
movs
lock
jno
and
je
aad
or
pop
js
cmps
shl
cli
push
adc
jnp
inc
imul
(bad)
jle
loope
fbld
add
inc
fs
(bad)
jecxz
(bad)
xlat
push
scas
push
adc
dec
push
mul
sahf
sbb
sti
xchg
xchg
ror
fsub
and
sub
icebp
lahf
jne
mov
jno
xor
xchg
inc
bsf
mov
aad
adc
xchg
nop
jecxz
ror
pop
xchg
(bad)
jno
in
icebp
aas
sbb
dec
fdiv
rcl
stc
imul
fadd
sub
sub
mov
jno
push
fisttp
(bad)
retf
jg
jns
gs
dec
sub
cmp
mov
jle
test
int
fmul
imul
cmps
out
dec
mov
das
in
(bad)
adc
gs
fs
mov
sbb
push
fcomp
fnstcw
stos
mov
adc
(bad)
mov
add
(bad)
jle
pop
add
adc
cwde
mov
ss
pop
shl
add
jmp
push
adc
aaa
xor
inc
push
push
js
arpl
mov
shr
push
sahf
adc
call
js
ret
push
add
add
jo
mov
push
(bad)
push
mov
inc
dec
jbe
cld
in
mov
jl
nop
push
rol
inc
mov
adc
sbb
nop
xor
ret
and
aad
or
(bad)
sub
push
lods
repz
cli
cwde
dec
shl
xchg
mov
sbb
clc
clc
pop
xchg
(bad)
or
jmp
mov
push
cmp
adc
mov
inc
cdq
les
bound
lods
xchg
push
clc
retf
cli
cmp
(bad)
fwait
jo
iret
ss
mov
push
int3
or
sub
and
sub
daa
je
xchg
adc
(bad)
ins
jg
iretw
fstp
sbb
jo
ins
outs
or
(bad)
jne
and
push
push
out
cmps
push
push
mov
jno
jbe
sub
jo
cli
les
popf
(bad)
xchg
mov
out
jmp
gs
fs
mov
bound
sti
loop
ins
mov
dec
jmp
jns
dec
add
fwait
test
inc
or
mov
and
jle
imul
aad
jmp
imul
loopne
retf
xchg
jle
sbb
jge
test
sub
(bad)
scas
cli
out
xor
stos
lds
ret
mov
shr
sub
ficomp
cmps
call
push
jno
loopne
nop
push
jmp
sub
mov
mov
rcr
arpl
push
mov
mov
mov
xor
xchg
je
mov
jne
cs
pop
or
inc
das
fxch
mov
out
ror
cld
aad
xchg
push
dec
fmul
pop
add
cmp
sub
cmc
add
leave
ret
xor
aaa
and
adc
push
repz
xchg
push
sub
dec
outs
mov
pop
mov
jl
inc
inc
out
and
mov
movs
adc
and
or
cmc
(bad)
sub
in
cmp
movs
sar
push
shl
sbb
xor
mov
in
xor
mov
inc
sbb
imul
push
jne
xor
call
sbb
sbb
and
push
mov
movs
pop
clc
ficomp
sahf
ret
rcl
mov
xor
out
xchg
and
push
and
daa
ja
aaa
ss
loop
jg
mov
(bad)
dec
xchg
ror
pop
lea
(bad)
xor
or
inc
and
jnp
(bad)
test
xchg
loope
and
xchg
jne
add
hlt
mov
loopne
mov
or
pop
sbb
adc
adc
add
push
cmp
add
ds
inc
push
movs
mov
fwait
adc
(bad)
dec
push
mov
jmp
loope
cmp
(bad)
xchg
cmp
sti
leave
cmp
add
lods
(bad)
push
dec
jne
inc
iret
xchg
sbb
jge
adc
dec
mov
imul
scas
loopne
push
pop
mov
inc
sar
js
je
push
shr
push
lods
ret
repz
pusha
test
cs
lahf
push
ins
xchg
(bad)
mov
cmp
inc
push
hlt
adc
xor
loopne
sub
call
add
sub
enter
mov
std
pop
movs
jmp
or
mov
icebp
xchg
sbb
fisttp
and
mov
out
adc
ror
out
sub
fnsave
aas
imul
mov
in
mov
and
scas
lock
pop
xlat
add
mov
inc
push
shr
stos
adc
mov
push
in
or
rol
and
mov
mov
mov
adc
aas
mov
mov
popa
fst
retf
retf
test
movs
jnp
adc
xchg
shl
int
push
in
xchg
jb
xor
mov
ret
imul
sub
nop
lahf
cs
into
fsub
inc
stc
retf
xchg
mov
mov
mov
adc
test
inc
ds
mul
ja
jbe
iret
add
jmp
loope
adc
add
(bad)
icebp
mov
int3
jno
imul
in
dec
call
idiv
popa
cmp
mov
leave
pminsw
mov
push
or
add
sub
popf
cwde
mov
xchg
jb
pop
retf
nop
inc
int
cmc
shl
(bad)
push
inc
jbe
adc
push
cmps
inc
jecxz
in
in
mov
mov
gs
mov
movs
xor
clc
xor
movs
mov
pxor
mov
loope
mov
mov
out
cmp
lea
xchg
push
inc
mov
push
cld
mov
xchg
(bad)
in
mov
mov
pop
fwait
loope
xor
fstp
mov
inc
xchg
mov
out
inc
leave
jg
cdq
cmps
and
test
sub
pop
mov
push
adc
repnz
sub
lea
mov
pop
repz
in
addr16
pop
xor
shl
ror
cli
(bad)
jbe
add
movs
mov
mov
inc
ror
shr
dec
repz
neg
xchg
fiadd
fwait
arpl
popf
ins
push
cwde
push
lods
or
es
push
fcmove
sub
in
popa
sub
xchg
xor
sub
dec
xchg
and
fstp
stos
inc
xchg
ret
repz
cmc
and
and
inc
mov
push
(bad)
and
dec
xor
je
cdq
inc
jbe
adc
xchg
pop
test
or
mov
or
in
xor
outs
and
cmps
iret
inc
cmps
pop
jb
ins
add
push
xchg
xlat
popa
adc
fcomp
int
dec
inc
pop
jp
add
adc
lahf
inc
(bad)
imul
lock
xchg
ror
cs
sbb
sbb
iret
add
push
out
push
jmp
xchg
cmp
dec
sbb
sub
mov
push
sti
mov
data16
ins
shl
pop
fld
adc
fst
addr16
std
mov
aaa
bound
stos
les
retf
mov
ss
dec
shr
ins
lods
inc
int
mov
mov
popf
push
rcl
nop
cmp
(bad)
dec
pop
adc
scas
adc
and
xchg
imul
retf
jg
lds
scas
inc
je
push
and
xor
scas
jo
push
cmc
pop
stos
(bad)
or
(bad)
dec
add
pop
(bad)
cmps
loopne
jmp
test
ds
data16
out
add
dec
ins
fbstp
adc
xchg
mov
(bad)
jmp
arpl
sub
sbb
xchg
cld
stos
mov
jnp
push
ret
xor
arpl
sbb
cmp
out
pop
je
fld
or
test
jbe
and
data16
push
ins
aad
(bad)
jbe
fmul
mov
mov
lock
sbb
push
fld
jnp
jmp
fs
sar
adc
sub
inc
cmp
cdq
dec
movs
ss
frstor
sbb
out
or
ficom
icebp
mov
jl
mov
loopne
dec
repz
push
xchg
in
leave
mov
stc
pop
test
add
add
stos
and
jb
out
adc
clc
retf
sub
scas
popa
or
ja
add
sub
lea
mov
dec
sahf
mov
lock
call
lods
jno
jne
sbb
sbb
call
xor
ss
push
cmp
dec
daa
in
xor
into
call
data16
jge
inc
jg
mov
int3
cmp
popf
je
test
xchg
lods
test
and
scas
pop
sahf
mov
jo
ins
ss
cmps
jmp
xchg
mov
sbb
out
lds
pop
fwait
mov
popa
(bad)
pop
adc
call
test
ret
(bad)
and
mov
or
rol
mov
shl
pop
lds
adc
cmp
mov
push
shl
mov
scas
sbb
jmp
sbb
xchg
mov
test
jle
xor
rcr
ds
addr16
lds
mov
not
xor
push
stos
xlat
or
aam
xor
and
push
cmp
mov
pop
pop
(bad)
jbe
push
mov
add
adc
add
or
mov
test
mov
xchg
xor
xor
lock
or
push
adc
mov
out
out
nop
push
cwde
add
std
jmp
fld
aad
jnp
inc
or
call
pop
or
div
or
out
retf
loopne
push
mov
add
data16
retf
pop
fdiv
jmp
sbb
adc
mov
jo
shl
pop
adc
and
popa
sub
aaa
fisttp
aas
jle
(bad)
mov
sti
ror
sahf
cmp
push
jle
pusha
mov
pop
rcr
fmul
cmc
jo
jnp
sbb
jmp
out
fidivr
psubd
dec
pop
xchg
out
nop
aaa
out
inc
sub
popf
xchg
mov
adc
pop
(bad)
sti
test
dec
or
cmp
pop
les
out
push
mov
mov
int3
cdq
test
adc
push
jbe
arpl
ja
mov
(bad)
lods
out
(bad)
iret
mov
lods
(bad)
fcmovbe
adc
daa
in
movs
xor
test
jns
in
sbb
mov
sub
dec
sbb
push
movs
mov
add
pop
pop
int3
test
push
lock
dec
mov
jle
xchg
mov
push
mov
ret
push
das
adc
in
sbb
outs
rcr
cli
into
xchg
jecxz
and
in
je
fwait
xchg
cmp
mov
adc
sub
dec
les
and
xchg
inc
adc
sub
mov
cmps
mov
js
xor
loop
test
dec
and
inc
mov
inc
adc
je
fdivr
sbb
xchg
cmps
push
sbb
sub
mov
mov
and
frstor
adc
loope
lds
push
sahf
cmps
repnz
and
aad
xor
fidiv
mov
in
inc
or
push
ins
fcomp
push
leave
loope
xchg
mov
and
in
mov
sub
lea
mov
nop
popa
mov
push
(bad)
(bad)
adc
daa
xor
pop
outs
push
(bad)
pop
das
sbb
cmp
imul
mov
pop
push
jg
jmp
iret
in
inc
fdivr
repz
mov
fcomp
xchg
jne
fisttp
adc
pop
cmps
jl
cmp
nop
cdq
out
mov
or
mov
sbb
std
repz
shl
je
dec
stos
or
lods
mov
popf
pop
mov
out
mov
mov
test
fistp
clc
pusha
jne
enter
mov
(bad)
loope
dec
jnp
sbb
jnp
jmp
jae
push
sar
aas
mov
adc
dec
sub
ret
mov
repz
ins
sbb
stos
inc
rcl
sub
clc
xor
je
addr16
add
jno
push
mov
cmp
popa
adc
in
mov
inc
mov
mov
inc
inc
call
call
mov
sub
lock
cmps
addr16
cli
sbb
pop
lahf
pop
into
gs
popa
cmps
ret
movs
xchg
arpl
xor
in
aad
ret
sub
xchg
push
or
(bad)
rcl
or
movs
sbb
iret
sahf
or
loope
leave
fcmovnu
sti
inc
aad
punpckldq
jle
mov
jg
mov
out
pop
dec
mov
iret
clc
fs
jno
imul
cmps
jmp
repnz
mov
popf
rcl
cli
imul
shl
sahf
fld
mov
rcr
mov
or
lahf
dec
inc
lea
adc
cli
rcl
jns
jnp
ss
mov
aaa
mov
out
pop
scas
imul
fistp
push
hlt
add
imul
mov
xor
(bad)
xchg
inc
or
or
jp
fs
cmp
cwde
add
daa
imul
sbb
ins
outs
fisttp
movaps
lds
lahf
fidivr
inc
xchg
(bad)
in
cwde
mov
movd
aad
ins
movs
dec
xchg
in
das
push
mov
idiv
aas
xchg
push
or
lea
mov
add
pop
and
push
pop
mov
aaa
mov
imul
dec
popf
or
or
in
gs
in
cmp
daa
ins
cs
(bad)
push
lock
sub
test
mov
inc
sahf
xchg
into
loop
sbb
pusha
dec
int
xchg
add
pop
add
in
comiss
sbb
xchg
jb
imul
mov
enter
int3
cmp
dec
mov
neg
or
sbb
xor
sbb
pop
ds
add
pop
jbe
xor
push
out
mov
fldenv
nop
xchg
lahf
sbb
fbstp
mov
mov
sbb
fwait
push
mul
fcmovnb
hlt
loopne
out
sub
cmps
arpl
cmp
mov
loop
lods
xchg
dec
xchg
add
iret
xchg
pusha
aad
pop
aad
(bad)
ins
push
push
xchg
mov
int3
int3
popf
jo
call
and
push
jle
mov
xlat
or
mov
dec
xchg
in
adc
or
test
or
inc
les
mov
call
inc
(bad)
fld1
outs
gs
sbb
retf
lods
mov
ds
push
sbb
mov
mov
pop
nop
vmwrite
fmul
xchg
aam
psubb
pop
pop
movs
cmc
test
fisubr
sahf
or
adc
clc
pop
test
or
arpl
outs
cmp
clc
push
adc
mov
not
jno
or
popa
data16
dec
push
adc
call
pop
push
add
es
ins
push
mov
adc
jno
add
pop
outs
cmp
retf
xor
inc
push
daa
xlat
xchg
mov
sub
xchg
xlat
and
aad
daa
xchg
mov
dec
test
sub
sbb
ret
cmp
add
pop
retf
int
ror
mov
cmp
or
cdq
mov
sbb
popf
addr16
xchg
bound
aas
pop
dec
outs
movs
push
fbld
sbb
sbb
sbb
into
mov
out
mov
into
ins
in
inc
daa
cdq
scas
fwait
and
mov
sub
fxch
jecxz
ret
push
out
push
hlt
dec
(bad)
mov
in
xchg
add
es
xor
jp
sub
push
imul
mov
add
mov
data16
jo
push
mov
jne
xlat
fadd
leave
lock
fwait
mov
cmps
test
adc
call
(bad)
xor
dec
and
iret
retf
xchg
imul
shl
add
lods
xor
popf
mov
mov
push
pusha
call
(bad)
js
xor
iret
outs
mov
mov
test
fstp
imul
pusha
imul
xor
nop
lods
xor
call
mov
sbb
mov
push
and
adc
data16
cmp
shr
loopne
xchg
push
inc
movs
loopne
add
loop
test
add
rol
cmps
jl
dec
mov
push
out
test
enter
sbb
sub
inc
sub
test
outs
ja
mov
rcl
in
addr16
jbe
jmp
cmp
imul
scas
dec
pop
je
imul
or
cmps
call
in
jno
loopne
mov
jae
xlat
out
and
mov
mov
lods
sub
push
movs
push
push
lods
outs
mov
add
test
mov
or
push
sbb
pop
xchg
stos
daa
je
iret
xor
xchg
jg
adc
dec
xor
adc
out
repz
jb
movs
leave
jle
jge
mov
aad
fucom
sub
pop
cmp
test
inc
(bad)
dec
jmp
in
fadd
repnz
in
dec
add
inc
xor
or
sar
cmps
xchg
cmp
xchg
pop
xor
and
jmp
inc
lock
pop
sahf
test
adc
and
sbb
stos
inc
inc
out
adc
loop
hlt
(bad)
jge
xchg
cmp
call
mov
mov
dec
repz
out
cmps
mov
lods
iret
add
push
add
push
ins
scas
inc
daa
push
test
push
inc
jno
jbe
iret
pop
add
imul
push
dec
repnz
mov
mov
adc
rol
or
shr
cmp
add
pop
dec
jl
xor
jnp
jmp
xor
add
xchg
int3
leave
jae
xchg
xchg
(bad)
push
or
int
dec
les
ror
xor
sub
or
xor
movs
jmp
or
dec
fdiv
adc
or
mov
sub
xchg
sbb
adc
xchg
pop
cmc
push
pop
add
pop
ret
sbb
dec
mov
dec
jae
into
sub
xor
je
js
mov
into
mov
xchg
cmp
jae
xchg
mov
mov
push
ja
loopne
sbb
xchg
les
fisubr
cmps
pop
dec
cmps
adc
xchg
cmps
jnp
sub
mov
and
pop
or
ror
cwde
lds
(bad)
(bad)
adc
(bad)
fnstsw
mov
push
cmp
xchg
iret
jns
xchg
es
add
jb
mov
iret
pop
jle
mov
cli
sar
movs
imul
vmread
jbe
cmps
push
out
leave
or
aaa
test
mov
xchg
sub
out
add
mul
cmps
mov
sbb
(bad)
sbb
sbb
xchg
add
test
je
test
add
fdiv
jbe
sub
push
les
lods
sbb
arpl
mov
sar
loope
or
cmp
xor
das
mov
pusha
xchg
mov
adc
lock
dec
or
xchg
xchg
xlat
imul
mov
(bad)
iret
pop
(bad)
add
sub
pop
inc
adc
out
dec
in
inc
pop
jp
dec
add
(bad)
cld
sbb
xlat
and
icebp
fisubr
sbb
mov
pop
pop
lea
xchg
mov
int3
sbb
sub
xor
mov
inc
or
into
fwait
repz
or
iret
retf
je
icebp
adc
lea
or
push
int3
stos
sbb
sub
sti
inc
cli
iret
icebp
movs
adc
out
(bad)
leave
pop
push
dec
dec
jno
xchg
jg
cmp
mov
das
ds
(bad)
ds
or
iret
ret
gs
add
mov
dec
cmp
loope
and
ja
mov
rcr
lea
mov
sbb
or
nop
hlt
jg
in
adc
xchg
ins
mov
cmp
add
into
(bad)
repnz
dec
test
ins
xlat
dec
jmp
pop
pusha
sub
jl
pop
inc
and
in
mov
jbe
sbb
outs
cmp
pusha
jl
sbb
imul
inc
sub
fndisi(8087
(bad)
repnz
(bad)
in
jp
fmul
push
jne
ret
push
jns
jmp
jle
sub
sub
inc
cmp
(bad)
cdq
sub
clc
pop
daa
or
dec
loope
jmp
int
cwde
rep
loopne
(bad)
(bad)
mov
retf
jg
shl
push
mov
fld
not
mov
aas
mov
bound
repnz
jmp
jl
iret
pop
jl
or
retf
pop
std
sahf
xchg
push
mov
(bad)
sbb
inc
xchg
and
ds
nop
dec
les
pop
pop
aaa
mov
mov
aaa
sbb
lods
sbb
in
in
(bad)
jne
xchg
clc
test
std
mov
xchg
inc
xor
aam
retf
mov
loop
aad
(bad)
in
cs
loopne
mov
(bad)
test
call
pusha
jno
stos
stos
sub
(bad)
fadd
inc
(bad)
add
jmp
mov
pop
imul
push
add
jp
rcl
jg
adc
cmp
xor
sbb
sbb
push
imul
and
movs
(bad)
aam
loop
cmp
in
les
push
or
(bad)
imul
jmp
cmp
mov
in
fwait
jne
mov
pusha
pop
cmp
stc
and
stos
fwait
pop
mov
in
fild
sbb
xchg
dec
add
push
repnz
sbb
cmps
in
aaa
sbb
cmc
sub
xchg
shr
push
pop
dec
dec
adc
xchg
pusha
test
(bad)
jecxz
push
lahf
and
xchg
adc
lds
add
xor
lods
mov
movs
jmp
push
mov
jmp
neg
xor
outs
in
jbe
xchg
sbb
scas
loop
aaa
mov
into
and
push
iret
mov
xor
aaa
xor
mov
push
fadd
cwde
jmp
or
call
dec
cli
outs
mov
out
ret
loopne
mov
call
aad
icebp
pusha
or
jae
mov
jge
and
rcr
cs
sbb
mov
and
jbe
xor
pop
jns
and
mov
fnsave
sbb
test
mov
or
sbb
add
adc
sahf
xchg
sub
push
(bad)
clc
push
call
ja
mov
mov
push
and
fwait
adc
sti
cmp
inc
sub
sub
inc
adc
push
ficom
nop
sar
mov
fisubr
adc
or
dec
and
retf
cmp
mov
inc
into
stos
jns
js
jmp
or
dec
shr
dec
and
or
xor
jecxz
mov
bound
cmp
les
pop
push
in
es
popf
mov
cmp
retf
mov
pop
xlat
mov
mov
sbb
xchg
pop
dec
clc
lahf
mov
sub
mov
adc
mov
sub
stos
sub
imul
hlt
cmp
fs
add
pop
push
je
outs
aam
jmp
test
add
add
xchg
cld
dec
or
ins
dec
iret
inc
inc
pop
cwde
in
mov
inc
jecxz
cmc
and
(bad)
adc
addr16
mov
sbb
ret
faddp
pop
fldenv
push
sub
jmp
mov
gs
mov
into
adc
sti
bound
sub
cmps
pop
inc
sub
sbb
cwde
dec
sbb
mov
int
and
pop
fcmovnu
dec
(bad)
int3
inc
aam
xchg
loope
and
jns
stos
xchg
jnp
ss
fcom
xchg
fwait
ror
imul
jnp
push
mov
clc
sub
push
popf
call
popa
jmp
xchg
nop
inc
fstp
nop
pusha
retf
lods
mov
inc
push
clc
popa
call
xor
je
mov
push
xchg
mov
sbb
cli
in
std
mov
xchg
adc
sbb
adc
aas
int
lds
pop
adc
out
popa
jg
ret
stos
ret
bound
fild
stos
sar
adc
leave
cdq
lahf
jle
xchg
stos
popa
(bad)
(bad)
lahf
test
adc
pop
std
pop
test
cmps
jp
dec
sbb
pop
xor
push
jmp
mov
push
sub
or
add
or
inc
jno
push
xchg
adc
ss
leave
push
hlt
ret
mov
add
shl
add
into
out
cmc
(bad)
pusha
daa
push
loope
sub
push
ins
repnz
sub
loope
int3
aam
jae
mov
inc
cmp
ss
push
std
loop
xlat
movs
add
loope
cmps
ss
xchg
xchg
dec
mov
pop
cld
and
and
scas
in
xchg
in
in
(bad)
retf
push
mov
and
in
jns
popf
(bad)
cli
call
repz
sbb
and
in
adc
add
in
or
pop
or
movs
cmps
out
movs
fwait
inc
test
xchg
mov
shl
fs
xchg
int
cmp
out
xor
ds
and
xor
ds
popf
test
and
push
cmps
repz
ds
shl
mov
mov
mov
or
xor
(bad)
into
loopne
push
mov
jmp
iret
push
int
repz
shl
imul
mov
push
and
inc
ins
test
mov
push
dec
ficomp
push
adc
fcom
ret
loope
push
int
popa
rol
lds
inc
retf
add
data16
cmp
xchg
inc
mov
xchg
xchg
pop
iret
pop
dec
cs
daa
mov
or
rcl
sti
test
out
jecxz
or
inc
mov
xlat
out
push
shl
mov
mov
add
cmp
mov
xchg
jbe
jle
hlt
mov
push
mov
fbld
int3
push
xor
and
ror
pop
(bad)
mov
xlat
xlat
stos
jmp
xchg
jns
stos
sub
mov
pop
std
scas
and
push
inc
mov
js
repnz
jecxz
xchg
and
adc
xor
mov
iret
iret
pop
pop
xor
ja
sbb
mov
or
cmc
jb
data16
ds
adc
shl
pop
ins
cmp
adc
push
enter
push
xchg
sti
fldcw
loope
lock
cmps
je
xchg
xchg
mov
shl
sti
or
retf
sub
push
dec
in
push
xchg
lock
mov
(bad)
dec
push
lods
icebp
pop
ja
dec
dec
retf
or
mov
adc
popf
les
xor
enter
xchg
cmps
mov
sub
mov
jmp
test
xor
es
adc
aaa
jmp
popa
inc
pop
jns
sbb
xlat
sub
pop
mov
movs
pop
or
dec
pop
jl
jecxz
push
rcr
lods
(bad)
mov
mov
pop
rol
xor
mov
and
int
sbb
push
(bad)
or
sbb
jp
test
mov
xchg
sti
inc
ss
cmp
cmp
ds
ins
dec
scas
imul
pop
and
mov
xchg
pop
scas
push
mov
enter
lods
popa
mov
jmp
mov
idiv
(bad)
lea
xchg
mov
xchg
leave
cmps
shl
mov
loop
sbb
retf
cwde
nop
retf
ja
cwde
dec
sub
push
add
icebp
repnz
sbb
cs
xor
ins
fisttp
mov
pop
pop
fsubr
(bad)
and
aaa
sar
pop
jp
or
rol
js
jmp
ins
int
mov
lock
xlat
test
out
(bad)
mov
jmp
mul
(bad)
cmp
(bad)
jae
aaa
lods
enter
daa
sti
xchg
push
or
dec
dec
imul
adc
pushf
adc
sbb
or
add
inc
or
shl
mov
jp
jns
in
add
or
popa
mov
cdq
pop
jmp
fld
icebp
fs
stos
ret
xor
fs
(bad)
clc
adc
adc
popf
mov
sar
xchg
arpl
lea
jo
fwait
xor
cmps
mov
pop
or
pop
pop
call
out
(bad)
jmp
cmp
add
mov
out
dec
xor
jno
add
loop
pop
dec
jmp
mov
and
(bad)
pop
pop
inc
pop
add
sti
push
pushf
loopne
outs
jge
mov
dec
push
out
(bad)
add
pop
xchg
xor
lods
loope
mov
fs
push
in
fist
(bad)
xchg
mov
jbe
add
aaa
xor
out
ror
icebp
jp
jnp
sub
lea
push
sbb
xor
adc
cli
or
adc
push
add
fcom
mov
adc
(bad)
iret
cmc
xchg
jbe
stc
test
cmps
fld
test
pop
in
inc
jmp
je
and
stos
fidivr
mov
in
xchg
and
push
int3
shr
add
leave
pop
xchg
mov
or
pop
stos
push
xor
inc
mov
fwait
leave
jae
mov
xor
into
jns
jl
xor
push
xchg
pop
and
imul
mov
xor
test
ins
int3
int3
imul
aas
(bad)
hlt
pushf
cld
push
not
stos
mov
ds
out
movs
(bad)
sub
cmp
mov
loope
jbe
sub
push
xor
mov
rcr
aad
stos
jbe
inc
xchg
lods
outs
(bad)
fs
dec
neg
xor
mov
adc
jae
hlt
shl
fsubrp
jnp
sti
test
and
xor
sti
sub
das
mov
pop
jo
mov
xor
gs
push
je
and
lahf
and
je
and
jg
jns
lds
sbb
scas
fidiv
sar
out
outs
or
(bad)
das
mov
pop
add
sahf
push
jo
cmp
sahf
movs
xor
mov
adc
fcomp
cmp
int
nop
cmp
and
inc
push
add
xor
cmp
mov
pop
dec
push
dec
xchg
mov
test
mov
adc
es
into
sub
lock
adc
push
(bad)
mov
sbb
inc
ret
test
mov
mov
sub
mov
pop
ds
test
xchg
mov
nop
stos
movs
movs
pop
push
xchg
pop
inc
ss
movs
int
(bad)
stc
out
lea
push
or
sub
sub
mov
inc
stc
repz
cmp
fistp
mov
jg
push
fs
cmp
dec
lds
out
movs
mov
das
adc
dec
pop
and
push
inc
out
call
xlat
mov
outs
jmp
mov
sub
mov
pop
outs
xchg
shr
sti
pop
or
repnz
data16
mov
xchg
mov
(bad)
xchg
(bad)
sub
fisubr
jno
(bad)
ror
out
ret
out
out
xor
and
in
hlt
or
mov
unpckhps
cmps
jnp
xchg
push
push
std
cmp
and
daa
arpl
je
jl
(bad)
cwde
outs
xchg
mov
scas
mov
sbb
enter
or
repz
shl
mov
jge
ja
dec
adc
fsub
imul
jle
imul
sbb
or
sub
in
lods
imul
ficom
ss
std
and
dec
mov
mov
repz
push
jne
dec
mov
rcr
mov
push
mov
or
icebp
push
fwait
xor
mov
xor
mov
lods
loop
scas
nop
repnz
pop
or
shl
iret
test
out
dec
cmp
and
lahf
es
cmp
js
jecxz
out
std
pusha
das
jecxz
cmps
add
(bad)
out
std
in
lds
fmulp
sub
mov
movs
or
push
add
mov
cld
xor
push
adc
lods
cmp
mov
call
add
add
push
call
lods
pop
cmp
push
fild
push
sub
call
dec
add
add
test
xor
out
xchg
imul
outs
mov
push
mov
jg
dec
stc
cmp
mov
retf
imul
xchg
ror
add
fcomp
movs
add
pop
in
pop
lds
pop
outs
or
mov
adc
(bad)
into
jbe
mov
pop
mov
xor
dec
or
pop
mov
xchg
in
cmp
mov
pop
in
arpl
out
mov
inc
or
inc
and
cs
loope
jb
test
mov
add
shl
mul
scas
stc
rcr
(bad)
cmps
jne
test
add
fmul
pop
lods
adc
inc
std
sbb
lahf
xor
jp
and
cmc
retf
push
data16
std
adc
les
or
mov
lea
popa
jmp
loop
mov
cmp
or
add
mov
cdq
mov
daa
and
div
xchg
adc
clc
pop
repnz
xor
inc
inc
and
(bad)
xchg
mov
push
lods
out
fs
lea
stc
jg
sbb
mov
dec
cmps
aad
or
or
(bad)
xor
push
pop
and
jge
outs
int
sub
test
pop
(bad)
retf
popf
lods
jb
adc
(bad)
pop
dec
test
push
sub
cmp
imul
clc
pop
sub
lds
ins
fist
(bad)
push
xchg
adc
push
add
data16
push
(bad)
dec
ins
iret
mul
push
add
or
mov
sub
mov
enter
sub
fistp
cwde
pop
scas
ror
int3
stos
cmp
stos
jmp
or
jecxz
lods
pop
out
push
xchg
loopne
pop
shl
pop
test
xchg
mov
stc
imul
cmp
jmp
retf
pop
out
scas
pop
pop
out
fld1
pop
ins
xlat
hlt
adc
daa
sbb
mov
sbb
xor
out
mov
imul
loop
sub
mov
inc
add
pop
das
sub
sti
add
dec
mov
adc
(bad)
sub
in
(bad)
sbb
jns
mov
test
or
xor
movs
sub
mov
cs
or
push
push
out
out
addr16
push
push
push
xor
adc
pop
cdq
imul
and
push
and
fadd
hlt
shl
fisubr
arpl
push
lds
mov
cmp
(bad)
push
(bad)
fwait
or
xchg
pop
push
xchg
cmp
xchg
pop
add
add
rcl
add
adc
mov
ret
nop
rol
iret
ret
addr16
xchg
(bad)
sar
test
test
adc
dec
rol
add
add
mov
mov
push
mov
fldcw
mov
cmp
ror
fcom
pop
jne
xchg
pusha
fisub
mov
fisttp
mov
aam
adc
in
lock
shl
pop
rcr
jb
xor
inc
test
push
mov
mov
mov
pop
xchg
xor
mov
mov
jns
jmp
pop
loope
sar
out
sti
sbb
movs
sub
sbb
in
pop
adc
cli
jb
sub
ret
push
and
retf
lahf
stc
pop
jp
lahf
call
scas
into
out
or
xor
mov
adc
add
jns
fsubr
push
sbb
jl
fild
hlt
mov
adc
mov
int3
xor
xchg
nop
cwde
stos
xchg
or
jae
inc
(bad)
xor
and
push
ins
cli
push
pop
pop
out
inc
mov
test
popf
cmp
stc
into
movs
push
sbb
or
xchg
add
repz
xor
mov
pushf
xchg
ins
fwait
xchg
(bad)
nop
test
pop
stos
movs
pushf
and
jne
jge
out
ss
adc
cmps
jbe
scas
mov
bound
stc
repz
lock
adc
push
push
fistp
sub
push
mov
(bad)
fadd
pushf
cmp
sbb
movs
cs
cdq
xor
fld
icebp
adc
test
mov
inc
push
stos
(bad)
in
lock
xchg
mov
mov
loop
(bad)
xor
cdq
push
cwde
push
hlt
sub
pop
inc
inc
pop
rol
lock
push
pushf
adc
jns
test
cs
les
cmp
mov
sub
adc
cmp
xor
fisubr
es
jge
push
pop
(bad)
scas
xor
xchg
imul
mov
iret
inc
pop
xlat
lea
(bad)
fadd
test
lods
and
int
mov
cmp
sbb
pop
fs
jmp
ins
mov
aas
jmp
ret
in
stos
frstor
stc
std
or
cmp
xchg
and
or
mov
mov
pop
hlt
icebp
retf
ret
dec
mov
jmp
jmp
js
fisttp
int3
dec
or
pop
jbe
mov
xlat
push
shl
inc
(bad)
lahf
fidivr
or
jmp
mov
ja
inc
scas
lahf
(bad)
cmps
dec
and
add
pop
jge
mov
push
mov
iret
not
pop
push
inc
jns
mov
pop
mov
cs
out
cmp
sbb
fwait
movs
inc
mov
(bad)
in
(bad)
or
lea
mov
jecxz
adc
(bad)
je
das
add
xor
loop
pop
(bad)
loop
sbb
lock
xchg
call
in
out
inc
loop
and
sbb
jne
dec
mov
mov
jns
loop
add
sar
mov
adc
ins
call
sub
jo
add
dec
adc
sub
jmp
test
mov
cli
aad
sbb
sub
xchg
sub
das
test
cmp
and
push
aad
and
jp
stos
idiv
shl
stos
mov
xchg
out
dec
pop
push
mov
outs
add
fwait
mov
jo
jg
je
not
bound
inc
mov
mov
sbb
xor
dec
(bad)
das
into
cld
pop
ret
inc
movs
mov
mov
not
icebp
pop
mov
cld
sub
imul
test
dec
and
mov
jno
lock
lock
cdq
in
dec
mov
aad
jb
xchg
sub
dec
rcr
inc
pop
fild
push
inc
and
leave
shl
dec
mov
lea
ss
jmp
lock
xchg
inc
xlat
add
imul
iret
jg
jns
sar
push
xchg
mov
mov
mov
cmps
outs
xchg
xchg
leave
outs
aas
mov
shr
mov
fild
(bad)
bound
cmp
sub
test
repnz
dec
cmp
xchg
xor
and
retf
and
xchg
faddp
sub
push
sub
mov
imul
(bad)
(bad)
and
add
call
loop
cs
pop
scas
daa
push
in
icebp
cs
xor
and
pop
push
scas
jmp
call
push
aam
mov
lock
repnz
jbe
cld
out
push
ins
popf
pusha
xlat
push
rol
inc
cs
sub
popf
shl
jmp
mov
jno
push
mov
sti
jmp
jp
js
iret
fisttp
sub
aas
popa
iret
rcl
mov
sub
and
ins
inc
ret
mov
or
mov
aas
cmp
or
and
inc
sub
clc
xlat
idiv
imul
cmps
cli
fcmove
scas
rol
sbb
xchg
inc
adc
retf
dec
mov
not
mov
mov
ds
sahf
sub
push
xlat
call
cs
jmp
outs
sar
mov
out
std
clc
cmp
inc
addr16
sbb
add
sbb
mov
push
cmps
iret
scas
inc
sbb
push
(bad)
ror
repz
adc
cmps
sub
enter
mov
movs
sub
das
xchg
push
cmps
leave
in
xor
(bad)
jl
sub
jge
call
or
mov
push
je
sti
out
rol
pop
mov
mov
or
test
jno
fdiv
jno
loop
push
pop
test
sub
mov
into
retf
pusha
scas
jmp
icebp
xchg
popa
pop
or
iret
pop
imul
stos
mov
push
xchg
and
lods
and
jnp
sub
xchg
dec
cmp
pop
jmp
xor
fmul
jle
mov
int3
push
out
(bad)
hlt
movs
(bad)
xchg
lods
(bad)
dec
ins
sbb
add
int
push
popf
xchg
dec
mov
sbb
int3
xchg
imul
jne
icebp
sahf
jne
test
mov
cmp
add
(bad)
ret
(bad)
int3
cmc
push
mov
neg
in
cmp
les
push
pop
clc
inc
add
hlt
mov
adc
retf
retf
loop
in
sub
ds
(bad)
cmp
sar
mov
ins
sub
mov
inc
dec
out
fwait
add
inc
cmp
add
std
mov
dec
cmps
out
cwde
fst
jmp
sub
iret
sbb
xor
fxch
xor
sub
(bad)
in
jbe
ficom
mov
jmp
ret
call
fwait
cdq
pcmpgtb
test
mov
jmp
push
fdiv
add
popf
(bad)
aad
je
jno
dec
pop
mov
jl
and
mov
add
mov
ficomp
cmp
jl
and
sub
mov
or
add
in
add
lods
call
mov
and
cli
mov
push
scas
jecxz
adc
std
aam
mov
into
scas
mov
test
pop
aas
in
lahf
aas
mov
mov
pop
sbb
jmp
xchg
repz
or
das
outs
push
fcom
add
push
les
icebp
jle
rol
ror
cld
jo
sub
and
pop
cwde
pop
mov
sbb
(bad)
ja
push
das
(bad)
sub
mov
cmps
fidiv
into
(bad)
movs
mov
pop
fst
add
addr16
sub
cmc
test
adc
test
and
xchg
mov
push
stc
popf
and
sbb
cmp
daa
sub
ret
adc
mov
xchg
dec
sub
mov
dec
sub
xchg
mov
cs
cmp
sahf
lods
pop
jb
test
add
pop
jb
out
or
pop
dec
mov
sub
movs
jle
mov
adc
mov
dec
jg
dec
xchg
xor
mov
sub
int3
inc
pop
jge
out
js
cmps
xor
push
lods
jl
daa
inc
mov
or
xor
aam
loopne
add
ins
mov
or
call
rcl
ficom
xchg
fwait
push
xchg
test
adc
push
xchg
and
fisub
out
ret
aas
jmp
int3
pop
adc
jae
or
xchg
jno
mov
sbb
dec
xlat
imul
adc
mov
and
jle
push
(bad)
(bad)
leave
(bad)
mov
js
push
mov
fmul
outs
xchg
mov
jecxz
js
out
(bad)
aas
clc
xchg
push
(bad)
jle
pop
push
ret
inc
(bad)
jge
sbb
jmp
xor
rcl
xchg
cwde
idiv
push
retf
and
aas
js
aaa
mov
sub
psubusb
adc
movs
dec
mov
imul
pusha
inc
or
(bad)
sub
adc
xor
aad
lods
jns
sbb
mul
mov
inc
in
jo
push
fidivr
mov
mov
add
iret
or
(bad)
sub
jge
ins
mov
mov
popw
es
xchg
nop
cmp
pop
cmp
jns
mov
pop
mov
rcr
jno
shr
sbb
imul
popa
imul
lds
jmp
xchg
mov
loop
sbb
loope
sub
and
test
xchg
jecxz
push
sbb
cmp
mov
sbb
retf
mov
cld
(bad)
jno
sar
std
movs
repnz
push
mov
jmp
test
fcmovnb
adc
shl
or
push
adc
in
aaa
ins
scas
arpl
xchg
xchg
int3
push
je
sbb
sub
jp
inc
dec
popa
cmc
das
push
push
lds
add
call
pushf
xor
test
test
inc
rcr
xchg
in
mov
add
scas
into
dec
loope
cmp
fdiv
or
xchg
inc
xor
and
cmp
cli
and
pop
inc
rcr
mov
shl
or
loopne
push
mov
dec
sti
xchg
aad
add
push
xor
clc
out
or
inc
mov
inc
pop
cmp
fld
sub
adc
push
into
ret
retf
adc
loop
aas
mov
adc
push
sar
sti
sub
pop
jge
ins
sub
mov
and
sti
inc
dec
cld
dec
es
or
(bad)
int3
ret
popa
cmp
sbb
sub
dec
outs
aas
adc
out
lahf
shl
(bad)
xor
xor
add
hlt
paddb
adc
daa
cmp
je
xor
push
mov
repz
out
jno
mov
sub
or
add
adc
push
add
inc
xrelease
pop
(bad)
jno
xchg
xor
push
call
jns
xchg
pminsw
push
in
dec
dec
mov
scas
xor
aas
mov
mov
jp
lahf
scas
and
cmps
cmp
pop
ins
leave
int
mov
mov
fwait
popf
rcl
inc
add
or
jg
out
inc
mov
sti
shr
clc
shl
repz
popf
mov
or
test
data16
add
aad
mov
movlps
repnz
push
repz
rol
adc
xor
aam
mov
mov
jb
ins
xchg
paddsb
xchg
adc
addr16
push
push
data16
ins
ja
mov
movs
push
push
xor
push
cmps
js
repnz
mov
jns
arpl
and
repnz
ins
mov
fld
outs
pop
jnp
popf
jae
adc
ret
and
xlat
and
in
inc
test
or
mov
(bad)
loopne
test
pop
aad
(bad)
ins
mov
and
pop
or
sub
mov
inc
in
lods
jno
inc
cld
jnp
push
cli
retf
(bad)
push
pusha
cmc
xor
inc
loopne
repnz
stos
arpl
mov
and
inc
sub
fild
pusha
cmp
fsubrp
jmp
xor
test
mov
mov
fbstp
mov
mov
add
ret
push
mov
call
mov
icebp
cmp
jle
sub
iret
loop
and
and
sahf
das
inc
mov
xchg
and
je
or
fnstcw
stc
cli
sbb
jg
retf
jns
or
adc
mov
cmp
ins
retf
rol
outs
jmp
adc
into
inc
clc
add
lock
loope
dec
outs
retf
fwait
mov
jnp
retf
xlat
movs
cmp
int3
hlt
nop
adc
cld
mov
pop
loope
lock
(bad)
test
or
and
push
jne
xchg
sbb
cs
or
jb
jnp
push
hlt
enter
jecxz
cwde
jo
loop
push
push
inc
mov
xor
sar
mov
inc
adc
push
loope
pop
inc
add
cwde
rcl
lods
lahf
mov
daa
jo
in
push
sub
sar
aad
adc
ds
cwde
jge
jl
enter
add
sub
xchg
cmp
gs
sub
es
mov
call
dec
lahf
adc
(bad)
mov
and
mov
lods
push
lock
mov
xchg
xor
pop
adc
cmp
dec
fwait
mov
jmp
fs
or
inc
adc
xchg
fist
fstp
or
mov
jecxz
cmp
mov
mov
outs
xchg
shl
mov
and
and
sub
cmp
ins
add
pop
ja
arpl
xchg
jo
les
or
sub
dec
push
mov
mov
push
sub
and
(bad)
jbe
mov
jmp
sub
sbb
clc
fdiv
mov
cmp
xchg
add
add
fwait
addr16
enter
icebp
shr
mov
adc
mov
fsubr
cwde
inc
jbe
lahf
jo
std
sub
dec
push
mov
mov
mov
ficomp
ins
xchg
inc
mov
retf
jo
cmps
pop
or
ds
pop
aaa
shl
jg
pop
jns
or
sbb
int3
mov
popa
fmul
jl
inc
fidiv
or
add
dec
pop
aaa
rcl
xchg
mov
js
fst
mov
js
and
dec
sbb
dec
cld
idiv
and
xchg
repz
rol
xchg
sbb
mov
stos
pop
mov
aas
lods
and
push
mov
fisttp
iret
jb
dec
pushf
enter
xchg
cli
ror
lock
ret
imul
mov
push
movs
xchg
jae
pop
push
das
stos
outs
xor
popa
or
cmc
jns
or
sti
ror
pusha
cdq
in
mul
dec
adc
imul
jbe
lods
ja
js
sub
icebp
sbb
pop
repnz
and
adc
mov
test
in
push
int
jle
les
fbld
inc
sbb
inc
adc
(bad)
mov
pop
outs
xchg
pop
mov
sbb
out
clc
and
mov
mov
inc
shr
cs
add
in
mov
imul
inc
loope
mov
fldcw
es
pop
in
je
pop
ret
sub
cdq
adc
scas
stos
cmc
jge
out
cli
mov
or
add
cs
enter
xor
fwait
in
es
leave
pusha
lahf
jp
adc
push
std
imul
pop
push
push
int3
outs
lea
or
mov
pop
call
cdq
pop
mov
sbb
pop
stc
(bad)
cwde
fcos
mov
cwde
mov
pushf
jp
idiv
lock
imul
lods
inc
mov
(bad)
call
pop
cmp
jmp
jle
xchg
loopne
or
stos
xchg
and
(bad)
dec
mov
push
vunpcklps
or
jecxz
arpl
or
jns
add
jmp
js
out
push
jmp
retf
(bad)
scas
pop
ret
push
outs
fcomp
cs
test
int3
and
mov
cmp
add
shl
or
jle
mov
imul
js
(bad)
lods
test
aaa
int3
or
sbb
fsub
push
popf
inc
mov
and
pop
addr16
fidiv
repz
data16
and
lods
loop
mov
loope
mov
std
xor
mov
jmp
xchg
dec
cmps
push
cdq
jns
xor
ins
jno
and
or
push
lods
xchg
adc
lds
pop
mov
push
out
pop
xchg
(bad)
mov
sub
xor
cwde
adc
shl
fstp
pop
sar
lods
ud2
cdq
imul
mov
addr16
jge
call
jbe
add
sub
ins
add
jnp
cmc
lods
pop
xchg
ss
test
sub
push
nop
push
int3
(bad)
js
call
adc
pop
into
int
ins
dec
mov
lea
xchg
mov
mov
jbe
sbb
js
fsubr
sub
jge
pop
stc
out
sbb
jmp
hlt
cmp
sub
cmps
test
sbb
cs
neg
inc
leave
xor
inc
mov
cmp
cmc
dec
test
push
fistp
push
mov
ror
mov
int
cmp
out
shl
mov
mov
fdivrp
in
inc
sub
sar
fnsave
xchg
bound
iret
xchg
cmc
dec
ins
stos
xchg
push
jnp
mov
mov
pop
lock
das
ret
ins
rol
push
add
mov
mov
repnz
pop
xlat
dec
mov
int3
xor
(bad)
mov
xchg
jle
out
sub
mov
repnz
mov
addr16
rol
cmp
ins
imul
or
jnp
loope
fist
ror
ins
mov
fwait
xor
imul
sub
loopne
ins
enter
call
sbb
adc
arpl
ret
mov
xchg
mov
rcr
inc
(bad)
int
add
mov
retf
lahf
outs
ror
mov
mov
div
dec
inc
movs
jbe
fcom
and
icebp
mov
inc
cmps
enter
ss
cmp
xchg
pop
sub
pusha
in
das
dec
mov
pop
(bad)
(bad)
repz
xlat
jno
stc
lock
(bad)
mov
mov
push
or
xchg
xor
and
mov
les
call
mov
loopne
test
cdq
addr16
(bad)
enter
sub
mov
stos
push
add
xor
outs
cs
jl
sub
jg
loop
and
mov
pop
aad
sbb
pop
mov
cwde
mov
ret
ja
sub
push
call
outs
jecxz
sar
fldcw
int
pop
call
push
in
sub
aaa
hlt
fwait
shl
cmp
fwait
mov
pop
pop
jae
popa
ja
push
or
mov
movs
jnp
dec
aaa
retf
stc
xor
cmp
out
in
dec
cmps
cmps
and
jno
and
or
rol
aam
retf
mov
push
aas
in
sub
cdq
jmp
cmp
(bad)
stc
dec
hlt
movs
ds
push
sub
fs
or
mov
inc
(bad)
pusha
mov
push
jnp
fwait
imul
jg
rol
cmp
jg
mov
xchg
cmps
loop
xchg
fwait
inc
cmp
push
xor
popa
sbb
aaa
cmps
hlt
dec
shl
push
shl
sbb
loope
fisubr
repnz
jle
ficom
push
outs
leave
and
cmp
ds
push
pop
adc
int3
(bad)
pop
cmc
cld
out
cld
push
iret
mov
test
and
fs
xchg
dec
jb
cld
sub
pop
mov
cmp
jp
mov
jg
popf
xor
(bad)
add
pop
mov
dec
ins
aam
nop
cmp
push
cmp
popa
jbe
daa
gs
inc
ja
aam
in
in
shl
ja
sar
mov
fs
inc
mov
add
sub
mov
mov
mov
dec
mov
hlt
xchg
mov
mov
lds
fdivr
jno
sbb
fnstenv
mov
iret
cli
add
ins
data16
adc
adc
mov
pop
ret
xchg
pop
inc
clc
push
mov
mov
push
mov
cs
mov
mov
mov
aad
outs
(bad)
out
jmp
push
jp
cwde
add
and
out
mov
repnz
mov
inc
out
in
imul
ins
aas
fcmovbe
popf
not
ficom
jno
xor
xor
stc
(bad)
arpl
inc
gs
mov
sub
pop
xchg
sub
mov
dec
adc
sub
xchg
daa
push
sbb
inc
ror
and
xchg
inc
jo
pusha
inc
mov
mov
push
repnz
fmul
inc
add
push
add
mov
iret
and
test
fwait
mov
fcomp
pop
push
gs
popa
dec
adc
mov
sar
add
add
cwde
inc
cmps
jns
sub
dec
cdq
dec
int
xor
mov
lods
sbb
xor
xchg
mov
sub
xchg
bnd
jecxz
stc
xor
xchg
adc
pusha
and
lods
ret
pop
push
push
sbb
mov
(bad)
mov
mov
fmul
xor
cdq
neg
popf
sahf
sbb
adc
jae
cld
jl
out
pop
loopne
cmc
and
mov
mov
pop
lods
push
jnp
cmp
jne
neg
test
sbb
inc
sub
mov
sub
mov
pop
movs
dec
mov
scas
push
pop
(bad)
xor
fiadd
mov
add
push
mov
sub
dec
stos
mov
dec
push
push
jae
(bad)
sti
push
and
fstp
pop
or
cld
inc
xchg
or
lds
sbb
imul
mov
lahf
pop
inc
in
das
sub
add
jg
in
add
xchg
push
mov
test
rol
or
mov
sub
movs
xchg
push
imul
test
push
clc
lds
pop
inc
adc
mov
mov
cld
stos
inc
sbb
inc
push
cmp
ds
aas
lods
mov
jmp
fst
and
ret
mov
fstp
inc
xchg
outs
pop
clc
cli
aam
ret
mov
xchg
inc
and
cmp
add
test
ds
pop
shl
xchg
mov
mov
daa
push
outs
shr
add
pop
out
test
adc
cli
stos
push
daa
sub
cmp
sbb
daa
and
add
stc
add
push
push
mov
add
mov
into
scas
dec
cs
test
push
test
sbb
dec
push
and
iret
add
push
js
fwait
and
stos
push
ret
(bad)
loop
pusha
iret
dec
pop
dec
pop
jmp
push
dec
pop
pop
jp
je
jne
(bad)
dec
pop
mov
mov
or
loope
sti
pop
test
and
inc
inc
and
ja
mov
mov
(bad)
cmp
imul
xchg
std
(bad)
mov
push
jecxz
ret
jbe
inc
mov
popa
shl
pop
mov
aad
or
fild
div
rcr
adc
mov
sbb
adc
inc
inc
(bad)
and
leave
sub
outs
push
sbb
test
in
pop
push
push
aaa
(bad)
popf
xchg
pop
add
ja
loopne
pop
inc
and
push
fld
(bad)
je
dec
jbe
js
cs
ins
jns
mov
sub
scas
or
loope
out
mov
in
push
es
pop
or
or
in
add
add
add
fs
cmp
pop
sbb
packssdw
adc
out
adc
xor
outs
dec
pop
lods
sub
ret
mov
mov
pop
ins
cmp
test
mov
cld
xor
sar
mov
push
cmp
inc
fwait
and
repz
loop
mov
loopne
das
or
out
scas
jl
mov
inc
or
aaa
jmp
mov
jne
nop
mov
sbb
push
lods
fld
inc
xchg
div
mov
loope
(bad)
xor
jno
and
(bad)
leave
xchg
add
rcl
adc
cmp
mov
cmp
xchg
test
mov
push
cmp
push
mov
add
adc
test
scas
loop
cmc
adc
ins
mov
jcxz
mov
xchg
push
sahf
inc
js
jmp
mov
jecxz
jnp
mov
dec
sub
inc
sbb
test
outs
add
stos
dec
(bad)
cmp
shr
or
mov
(bad)
loopne
sub
sbb
and
pop
in
xor
movs
add
data16
sbb
pop
fs
and
out
stos
sbb
popf
add
ss
test
inc
and
loopne
fs
loopne
fs
adc
gs
popa
inc
sbb
xchg
inc
movs
icebp
sbb
lock
jp
clc
add
rcl
cmc
push
sahf
aam
push
(bad)
xchg
add
popf
lods
js
xchg
xlat
ins
retf
pusha
scas
movs
sbb
mov
sbb
(bad)
cmp
inc
ins
jg
sub
pop
adc
jb
movs
adc
or
jmp
not
xchg
cmp
fidivr
pmulhw
pop
in
adc
test
dec
xchg
inc
pop
add
out
pusha
(bad)
das
add
inc
xor
adc
(bad)
mov
addr16
retf
mov
push
pop
jmp
mov
sub
or
push
adc
jo
mov
loop
push
int3
or
int3
je
and
adc
fdivr
mov
ins
movs
fistp
push
and
dec
cmp
mov
adc
lock
pop
push
(bad)
neg
jle
push
sbb
or
(bad)
cmp
xchg
mov
std
cmp
cmc
cmp
and
jp
xor
lods
jmp
dec
sbb
jb
or
add
mov
mov
and
mov
scas
popa
retf
lea
nop
icebp
ret
cmp
sub
ins
(bad)
cld
jo
adc
outs
and
(bad)
xor
arpl
or
jp
push
sbb
test
or
and
bound
mov
test
jnp
pop
add
mov
(bad)
mov
(bad)
cmp
fidiv
push
hlt
cli
inc
xchg
cmps
mov
rol
inc
fist
outs
jne
div
sbb
mov
push
out
or
add
std
add
sbb
push
fiadd
or
pushf
cmp
pusha
inc
iret
push
xchg
daa
sub
xchg
jl
dec
and
push
ja
dec
xor
mov
add
mov
xor
ror
pop
mov
(bad)
std
xchg
lods
shl
sub
push
sub
jmp
sahf
fadd
xchg
mul
jle
data16
or
dec
xor
mov
cmp
outs
xor
xchg
rol
mov
pop
cs
mov
mov
dec
daa
fcmovnu
and
mov
sbb
data16
xor
in
mov
ja
and
(bad)
mov
pusha
mov
stos
ja
and
mov
out
jmp
sar
sbb
or
xlat
dec
pop
dec
and
mov
cld
jg
pushf
sub
jmp
sar
dec
popf
mov
or
pop
inc
sbb
xchg
repz
ffreep
out
(bad)
out
pop
dec
sub
das
enter
sub
test
mov
fdiv
pop
mov
push
mov
imul
cmp
mov
sub
je
iret
shl
jecxz
dec
repnz
adc
mov
(bad)
(bad)
test
mov
xchg
inc
cmps
call
fs
(bad)
adc
js
push
add
ret
stos
ror
jp
cmp
fmul
je
movs
aas
stos
ret
fcomp
add
xchg
mov
(bad)
mov
out
pop
cwde
pop
call
dec
mov
lock
mov
imul
cli
sbb
movs
and
mov
adc
fcmovnb
jl
out
cmp
jp
in
shr
mov
adc
call
adc
xor
mov
jmp
pushf
(bad)
mov
fdiv
or
in
or
xlat
(bad)
cwde
and
xor
mov
lods
neg
or
aas
stos
pop
xor
xor
jmp
popa
and
in
scas
ins
shl
dec
into
sbb
cld
jmp
push
out
inc
jnp
and
cwde
or
mov
mov
adc
xlat
(bad)
in
mov
xor
dec
sub
(bad)
stc
inc
push
popa
cs
mov
mov
call
pop
shl
xor
movs
jb
xchg
in
or
and
inc
lea
dec
push
(bad)
ror
add
popf
fdivr
jb
push
jmp
ins
dec
mov
idiv
pop
bound
in
jecxz
sbb
inc
psubusb
and
lods
cwde
pop
inc
pop
outs
popf
pop
(bad)
shl
xchg
cmp
mov
lods
imul
sbb
mov
sub
sub
(bad)
fadd
ret
xlat
mov
cmp
fwait
dec
push
mov
pop
sub
ret
cmps
xchg
iret
push
xchg
in
and
imul
fsub
mov
rcr
jmp
push
out
test
aad
jne
xor
lahf
jb
test
push
push
test
mov
in
ret
cdq
retf
std
xlat
inc
retf
sub
pop
sub
xchg
pop
bnd
daa
pushf
imul
jmp
div
jecxz
or
iret
in
out
adc
and
neg
fiadd
in
xor
adc
or
ret
xor
push
call
pop
mov
mov
mov
les
mov
icebp
dec
pop
into
push
fisubr
inc
and
push
sar
dec
(bad)
xchg
retf
mov
dec
in
xchg
fstp
xchg
fs
add
xchg
dec
gs
sar
push
and
dec
pop
fbld
enter
adc
cwde
cld
ds
cmc
loope
xchg
(bad)
mov
inc
sbb
fmul
les
pop
and
adc
(bad)
loope
fadd
nop
cmp
cdq
ins
jae
xlat
aam
(bad)
jmp
cli
ret
out
dec
adc
movs
inc
and
lahf
add
mov
push
jae
push
cmp
adc
into
mov
xor
sbb
in
and
test
not
xor
or
xor
or
cld
ret
fistp
add
add
imul
xchg
out
xchg
add
sub
popf
fild
repnz
loope
repz
mov
fimul
or
(bad)
int
adc
in
(bad)
iret
outs
cs
xchg
mov
fidivr
xchg
xchg
js
dec
into
sbb
and
jb
daa
arpl
out
add
std
jb
fdivr
push
in
xlat
add
pop
sub
mov
hlt
outs
push
add
mov
add
push
push
push
fptan
add
ret
das
xor
mov
push
and
fimul
pop
cmp
std
jl
out
fisttp
cmp
daa
lods
aam
add
inc
inc
ficom
push
data16
mov
and
sbb
inc
and
es
mov
das
idiv
jl
into
jns
mov
js
mov
lods
imul
jmp
ss
in
popa
xchg
and
inc
test
lods
repz
aam
or
repz
sbb
(bad)
fisttp
inc
push
pop
mov
add
mov
test
stc
shl
in
jecxz
xchg
jns
mov
stos
xlat
pop
cmps
loop
pop
stc
test
pop
pop
pop
and
or
bnd
test
fisttp
inc
and
jae
repnz
retf
popa
(bad)
lock
pop
xor
pop
fsub
add
adc
and
xor
aas
aad
test
add
sbb
stos
xor
(bad)
cmp
retf
daa
out
jecxz
mov
in
stos
jmp
shr
mov
out
push
inc
mov
mov
add
add
movs
movs
fs
pop
push
sub
and
push
popf
jg
bnd
or
movs
ja
pop
sub
retf
adc
ds
xor
push
fs
push
push
xchg
mov
fwait
test
push
fsubp
or
add
cli
cli
bound
scas
mov
push
xchg
lods
mov
and
mov
sub
adc
pop
in
test
repz
enter
xor
jns
xor
push
cs
mov
lock
fwait
int
cwde
jle
dec
ror
mov
fs
inc
xchg
sub
data16
cmp
mov
pop
mov
xor
pop
mov
mov
xchg
popa
adc
add
mov
test
test
add
movs
or
aam
sub
ret
aas
fstp
(bad)
sahf
daa
rcl
loopne
out
fidivr
fs
loope
sti
mov
fnstenv
lods
out
ds
jecxz
sub
jp
aad
push
in
sti
adc
(bad)
cmc
and
into
cmp
icebp
xor
int
outs
jb
xor
sbb
dec
add
inc
pop
mov
pandn
dec
adc
sub
sar
push
xchg
jge
lock
daa
dec
pushf
push
loope
or
shl
mov
cmp
aas
lea
sbb
test
pop
xchg
call
jnp
push
ret
rol
scas
mov
loop
mov
inc
sbb
and
and
or
sbb
loop
cmc
enter
gs
dec
ja
pop
imul
cmps
addr16
jecxz
or
mov
ja
mov
xchg
jbe
dec
or
pop
sub
icebp
inc
pop
xor
in
push
pop
inc
rol
mov
fcmovne
inc
lock
and
inc
outs
mov
cmps
jb
pop
lea
jmp
gs
clc
xchg
add
mov
aaa
dec
pop
xor
pusha
sbb
sub
(bad)
call
rcr
ins
int
sahf
xor
mov
inc
mov
ds
ror
clc
outs
ins
pop
add
jg
bnd
cmps
daa
test
sbb
xor
mov
movs
in
int
(bad)
fidivr
cmc
movs
popa
in
pop
neg
mov
and
out
jmp
and
popa
jb
(bad)
mov
sub
fimul
retf
xchg
xor
lods
cli
mov
sub
pop
icebp
test
popw
popa
xchg
push
pop
sbb
imul
or
add
lea
rcr
pop
xchg
or
int
fimul
sbb
pop
or
dec
sbb
jle
movs
push
or
sub
mov
add
add
bound
and
xchg
mov
inc
pop
sbb
ins
popf
dec
pop
cld
jb
jmp
inc
mov
jg
mov
sub
adc
lods
pop
xor
xchg
ficomp
hlt
ins
pushf
out
(bad)
call
jnp
test
(bad)
(bad)
jne
clc
loopne
push
test
cmp
adc
lods
je
cwde
les
push
icebp
push
push
ds
inc
fadd
inc
cmp
pop
je
mov
mov
sub
scas
ins
lds
dec
pop
xor
movs
jl
pop
mov
or
jmp
inc
bound
(bad)
sub
xor
cli
out
mov
dec
into
sub
movs
imul
les
pusha
fidiv
mov
sub
sbb
rcl
adc
in
adc
sub
lods
lods
pop
repz
scas
add
pushf
cs
ins
ds
imul
cmp
rcl
sahf
mov
jg
or
mov
shr
sbb
sub
int
ror
dec
aas
lods
ss
mov
cli
aaa
shl
rol
es
test
repnz
jnp
cmc
xor
cmp
inc
sbb
scas
nop
jmp
inc
dec
xchg
xlat
sub
scas
sar
mov
jns
mov
push
or
jle
xchg
sbb
dec
stc
lea
cld
adc
mov
not
(bad)
push
ja
xor
mov
loop
jb
fnstsw
pop
inc
xchg
dec
out
lods
mov
push
dec
lahf
mov
xchg
into
xor
retf
pushf
shl
jbe
out
dec
add
inc
mov
rcl
sub
xor
int3
add
sbb
jl
out
and
sbb
fsubr
adc
sbb
lahf
mov
push
mov
sbb
(bad)
int
mov
loop
push
loope
jno
jb
cmp
das
cdq
popa
push
or
into
nop
aaa
push
jle
(bad)
retf
adc
jle
mov
push
sub
mov
add
lahf
sti
scas
in
xchg
inc
jmp
ins
aam
popf
xlat
sbb
out
pmaddwd
inc
xchg
xor
xor
hlt
mov
inc
retf
mov
aad
add
retf
jg
mov
inc
jns
imul
mov
cmp
mov
sbb
mov
retf
pop
push
hlt
inc
mov
fidivr
lods
sub
mov
lods
mov
push
cmp
iret
out
into
in
retf
les
mov
push
call
add
xchg
pusha
inc
cmp
cdq
jecxz
stc
pushf
popa
les
and
jno
inc
daa
xor
retf
gs
in
lahf
adc
xchg
inc
adc
and
cmps
pop
popa
fidiv
mov
cmp
aad
lods
cli
push
sti
or
mov
pop
and
xlat
jbe
ins
pusha
dec
jns
sbb
inc
scas
loopne
or
and
sahf
adc
stos
cmp
pop
and
out
(bad)
mov
xchg
push
push
sub
cmp
push
sub
push
iret
or
ja
in
ja
xor
sub
call
retf
hlt
pushf
into
idiv
arpl
aaa
rcl
enter
xchg
sbb
sbb
add
and
call
mov
sbb
jne
ins
xor
add
and
sti
jecxz
inc
andps
lss
xchg
fld
call
or
cmp
hlt
inc
pop
pusha
cdq
(bad)
cwde
inc
cli
pop
adc
pushf
dec
jge
in
or
test
and
arpl
sbb
sti
xchg
cmp
retf
test
int
dec
inc
xchg
adc
stos
dec
jb
pop
sub
push
(bad)
mov
push
jge
or
imul
loopne
xchg
add
mov
lods
mov
jp
xchg
sbb
jl
adc
mov
inc
mov
out
jbe
scas
popf
in
add
dec
push
std
cmp
sub
mov
mov
cs
push
pause
in
sbb
mov
mov
data16
inc
mov
das
mov
mov
jle
cmp
retf
test
push
fadd
outs
dec
push
jmp
mov
in
cmp
repz
hlt
mov
mov
mov
adc
push
(bad)
mov
aad
push
clc
mov
loop
xchg
movs
shl
retf
mov
scas
sti
sub
cmp
das
pop
pcmpgtd
test
mov
fst
out
sbb
xchg
or
or
sbb
shl
adc
or
into
inc
repnz
fstp
in
(bad)
aas
test
xchg
loop
bound
mov
xlat
xor
scas
retf
xlat
add
(bad)
sbb
scas
push
mov
in
stos
arpl
sub
rcr
mov
or
push
xchg
(bad)
xchg
outs
add
jno
adc
inc
sti
bound
pop
shl
mov
test
loop
and
and
(bad)
and
add
xchg
rol
arpl
repz
xor
outs
add
(bad)
stc
rcr
add
adc
xor
add
mov
rcr
dec
xor
xor
mov
or
dec
lods
inc
adc
jp
sub
jl
ret
retf
dec
mov
add
div
ror
into
shl
mov
adc
ret
mov
mov
cwde
xchg
in
mov
cmps
dec
test
sbb
jbe
xor
mov
fnstcw
stos
push
pushf
ja
push
xor
pop
(bad)
call
dec
stos
fst
or
stos
push
enter
xor
xor
mov
cmp
jb
mov
(bad)
cmp
outs
lahf
sub
mov
jge
idiv
adc
lds
add
ret
mov
ja
stos
cmp
jns
mov
push
pop
xchg
sub
and
and
mov
inc
mov
out
add
mov
adc
and
xchg
xchg
stos
jecxz
dec
mov
cld
pop
xor
jbe
pop
in
sti
les
ficom
sub
cmp
sti
clc
retf
push
cmps
jle
pop
jp
sub
pop
mov
dec
pop
(bad)
std
xor
test
sbb
push
test
cmp
jne
test
shl
or
unpcklps
sbb
adc
cmp
fst
lods
std
xor
mov
push
and
cmp
cmp
ret
clc
test
pop
xlat
fwait
sub
push
mov
inc
mov
mov
cmp
mov
jne
cmp
es
mov
je
fmul
push
mov
adc
mul
int3
mov
xor
fsub
int3
or
cmps
sbb
or
retf
js
pop
mov
mov
adc
and
pop
in
in
jg
push
cmps
hlt
in
mov
jle
sub
adc
fisub
adc
dec
outs
fs
mov
lock
clc
sub
dec
push
or
push
and
retf
clc
push
test
and
xor
xor
(bad)
adc
dec
aam
xor
and
inc
push
out
sbb
cmp
pop
popa
mov
(bad)
sub
push
sbb
fnstcw
inc
repz
repnz
cmps
or
and
jecxz
mov
fst
(bad)
out
sbb
popf
enter
lahf
iret
outs
cmp
les
sbb
jbe
mov
push
xchg
aam
push
push
mov
push
jbe
mov
mov
hlt
fcmovu
je
or
jnp
inc
enter
add
movs
(bad)
stos
add
stos
arpl
sub
stc
lods
mov
ja
loope
daa
bound
stos
leave
ror
pop
aaa
in
(bad)
js
mov
iret
push
sbb
in
dec
mov
jo
pop
std
and
fcomp
sub
mov
mov
retf
(bad)
vmread
bswap
(bad)
mov
stos
pop
jp
adc
das
cwde
je
lea
int
je
stos
test
mov
rcl
ficom
in
add
mov
loopne
jnp
retf
bound
aad
retf
push
inc
push
dec
sar
fidiv
clc
movs
cmp
mov
pushf
fadd
add
retf
out
fcom
bound
xchg
mov
(bad)
xlat
adc
idiv
scas
stc
and
pusha
lahf
xadd
mov
mov
ds
jl
lock
jmp
pushf
cmp
jbe
pop
call
and
pushf
int
mov
jae
popa
imul
jno
gs
inc
adc
dec
lea
cmp
aad
sub
fsubr
out
rcr
pop
outs
inc
push
dec
fwait
dec
xchg
mov
in
ret
add
sub
fidivr
push
add
mov
jp
out
es
icebp
call
sbb
mov
sbb
fdivp
pop
xchg
test
gs
inc
out
aam
pop
pushf
xchg
popf
inc
push
out
xchg
neg
mov
hlt
stc
(bad)
mov
fistp
cdq
fidiv
jecxz
add
ds
pop
jo
add
movs
xor
enter
dec
test
arpl
in
test
jbe
out
mov
je
aad
fcom
cmp
dec
inc
fimul
mov
mov
pop
adc
clc
lock
jge
mov
outs
pop
jle
cmc
leave
and
ds
(bad)
dec
repz
lock
lods
mov
(bad)
mov
mov
xor
movs
adc
fwait
xchg
mov
push
(bad)
cmp
and
addr16
mov
fldenv
fs
mov
xchg
xor
push
(bad)
pop
or
lds
push
sub
rcl
mov
push
ret
movs
jno
xchg
loopne
add
imul
xchg
sub
push
jl
das
ja
push
dec
xchg
mov
loop
clc
jmp
cmp
shl
inc
fsubr
adc
mov
ss
dec
cli
dec
int
pushf
lods
push
or
push
jmp
xor
adc
es
xchg
mov
mov
stc
pop
push
inc
stos
sbb
int
pushf
dec
xchg
imul
cmp
int3
vpmuludq
movs
and
jae
dec
daa
cmps
inc
jmp
cmp
fld
or
push
das
fidivr
push
cmp
jbe
or
int
lods
rol
jle
xchg
repz
fidiv
retf
dec
jne
cdq
and
je
hlt
adc
int
dec
push
mov
or
jnp
inc
and
jo
ins
xchg
mov
test
xchg
loopne
fsubr
test
push
(bad)
clc
cs
das
mov
retf
retf
jle
push
jg
pop
jne
sahf
(bad)
jno
out
(bad)
lock
pop
mov
pop
jo
mov
cmp
dec
xlat
outs
(bad)
jb
pop
ss
(bad)
jle
pop
out
icebp
(bad)
xchg
or
ins
div
neg
nop
aad
pop
mov
clc
pushf
and
fwait
inc
shl
js
pop
icebp
cmp
push
lea
cmp
or
and
jmp
(bad)
and
rol
ficom
pop
pop
loop
stos
daa
and
cmp
je
pusha
xchg
push
sbb
sbb
cli
fiadd
push
dec
popa
cmp
bound
(bad)
stos
call
inc
jbe
and
cdq
inc
popa
cdq
cmp
sub
sbb
jg
dec
cmc
psraw
sub
sub
or
(bad)
fild
int
fld
mov
(bad)
out
cdq
idiv
xchg
test
popf
lahf
test
mov
idiv
pop
shl
and
xchg
jns
cmps
lock
inc
or
mov
or
fmul
sub
fwait
adc
jne
hlt
mov
adc
aas
and
pop
cmc
sahf
push
fsub
mov
xchg
xchg
icebp
sub
sub
jb
test
stos
loop
sbb
rcl
sbb
(bad)
push
inc
(bad)
rcl
dec
pop
mov
out
stc
lahf
add
adc
loopne
xchg
neg
push
add
xor
leave
test
cmp
or
push
fxch
test
adc
loop
jae
ret
pop
addr16
aaa
stos
push
daa
xor
xchg
iret
or
push
ja
pop
cld
cmp
and
int
retf
leave
inc
and
add
push
fs
(bad)
sbb
push
lahf
inc
idiv
shl
pop
movs
xor
ret
mov
lods
xchg
mov
mov
cmp
(bad)
or
call
fisubr
mov
mov
mov
adc
aaa
in
mov
sti
jmp
sub
enter
iret
inc
push
mov
iret
lods
xchg
mov
push
xchg
stc
xlat
das
and
jp
jne
lods
call
(bad)
sbb
mov
fnstenv
jo
lods
and
inc
inc
push
push
mov
cmc
mov
xor
cmps
test
cmp
popa
pushf
xchg
sbb
ret
fdiv
jge
and
aad
ja
bound
(bad)
(bad)
in
not
dec
loop
test
xchg
xchg
pop
ret
push
scas
pushf
imul
xchg
mov
xchg
xchg
push
lods
aas
fnstsw
adc
aas
inc
dec
mov
in
rcr
lods
xor
movs
les
sar
mov
fistp
cmc
inc
pop
cmps
popa
mov
imul
pop
stc
xchg
mov
cmp
je
mov
mov
(bad)
shl
and
inc
in
mov
dec
shl
call
dec
imul
jmp
loopne
inc
mov
ds
jno
xchg
jp
mov
inc
and
cmp
push
mov
fimul
(bad)
adc
mov
bound
ud2
adc
or
jns
add
(bad)
add
pop
mov
out
jo
test
xchg
loopne
push
aad
mov
xchg
arpl
or
ss
(bad)
cli
pushf
sti
and
pop
jp
mov
js
dec
sub
call
lea
in
cmp
lods
xchg
dec
fs
les
cmps
out
retf
mov
clc
dec
enter
mov
jmp
cmp
mov
in
rcr
add
call
inc
jecxz
mov
and
shl
(bad)
and
stos
xor
frstor
inc
jne
inc
jp
fwait
in
popf
shl
rol
jmp
cdq
mov
lds
cs
clc
inc
adc
js
sar
cmp
fs
and
fisubr
aad
es
fisubr
aad
mov
jae
fcomp
jmp
retf
and
jb
jne
mov
ret
mov
xor
sbb
jmp
adc
bound
leave
aam
inc
adc
dec
pop
dec
sub
popa
jo
mov
cmp
pop
pop
popa
pop
sub
cmp
push
loopne
mov
mov
xor
mov
dec
and
pop
stos
inc
imul
adc
mov
mov
out
sbb
mov
in
loop
add
mov
jp
mov
fidiv
imul
xor
in
not
add
fidivr
sbb
xchg
sub
stos
loope
rol
cmps
cmp
outs
pop
lea
lea
sub
add
push
addr16
ins
in
inc
and
shr
push
jns
in
push
popa
push
je
call
mov
push
push
movs
int
push
xchg
add
ins
fmul
push
aad
xor
daa
mov
cmp
mov
mov
mov
fldenv
repz
xor
stos
mov
aad
and
iret
mov
xchg
push
sbb
inc
aam
cmp
and
shl
ret
jl
xchg
and
test
add
xchg
arpl
bound
in
sbb
inc
and
adc
mov
xor
movs
fs
das
pop
sbb
and
adc
shr
mov
push
stos
pop
stos
and
xor
mov
popf
or
fdivr
ror
mov
xlat
push
xchg
pop
ror
jb
aaa
xor
bound
repz
sub
mov
ds
add
mov
movs
test
movs
cmps
fisubr
test
sub
cmp
sbb
push
shr
jnp
mov
mov
cmp
mov
add
sbb
add
mov
jno
jbe
adc
mov
push
shl
mov
std
rol
xlat
sbb
in
sbb
retf
jp
mov
fisttp
pop
xchg
jle
mov
sahf
dec
xor
outs
ror
jmp
adc
mov
inc
daa
sbb
cs
cs
push
inc
or
cmp
dec
enter
push
adc
rcr
xor
lods
or
push
fcom
add
loop
xchg
or
cld
pop
jnp
ds
mov
mov
pop
pop
imul
das
scas
inc
(bad)
add
xchg
sub
jp
fadd
adc
mov
mov
pop
cli
dec
add
stc
mul
into
xchg
cld
sub
rol
cmc
mov
pop
jl
and
or
in
leave
sti
repz
or
and
call
jne
and
sti
xchg
dec
pop
pop
push
push
mov
sbb
jmp
dec
mov
cmp
icebp
xchg
(bad)
xor
pop
retf
and
dec
out
ss
ss
cmp
cwde
jnp
or
loop
mov
out
ret
sbb
push
(bad)
das
lahf
mov
mov
nop
and
outs
dec
lahf
ins
cdq
bound
or
stos
xchg
repnz
fcomp
jg
and
rcl
push
cmps
pusha
es
loopne
ins
inc
out
repz
aas
push
jno
fwait
ss
xchg
test
stos
arpl
cmp
test
imul
adc
add
xor
stc
mov
fist
out
imul
dec
or
inc
jge
dec
ror
into
or
pop
mov
in
mov
mov
inc
push
mov
ficom
pop
(bad)
xchg
xchg
(bad)
jmp
jg
xor
add
dec
retf
and
adc
xchg
ins
ficomp
xchg
(bad)
fdiv
ins
add
and
mov
sar
cmp
daa
inc
sbb
shr
mov
loop
mov
xchg
cmp
cmp
cmc
pop
pusha
ret
je
mov
xor
cmp
imul
test
scas
push
xor
fstp
push
mov
and
hlt
fst
xchg
push
push
push
pop
pop
jbe
shr
jg
ffree
nop
and
mov
popa
lea
iret
mov
mov
inc
add
xor
jmp
daa
dec
aad
rep
sub
sar
mov
loopne
push
add
xor
push
imul
jnp
push
aam
lock
out
pop
es
addr16
inc
push
iret
push
(bad)
ja
fadd
or
push
mov
cld
jns
mov
hlt
loopne
lea
pop
popf
cld
sbb
lds
sbb
xchg
dec
pop
call
pop
lea
mov
dec
xchg
xor
mov
jl
jge
xor
mov
pop
mov
dec
into
leave
arpl
add
in
xor
fisttp
mov
fild
aaa
nop
xchg
xor
pop
cdq
(bad)
aam
movs
ins
dec
sub
addr16
and
iret
pop
add
inc
jl
xor
movs
fnstcw
jnp
mov
(bad)
xor
popf
cmp
movs
jmp
and
test
ja
out
mov
xor
lods
pop
test
push
xchg
mov
mov
xchg
ja
and
inc
jb
jg
sbb
call
mov
int3
mov
push
hlt
xchg
int3
jle
les
test
add
outs
xchg
jno
fwait
out
cs
adc
push
idiv
outs
xor
push
pandn
fldenv
rcl
nop
jge
and
enter
int3
fcmovu
ins
cli
xor
test
xchg
(bad)
xchg
int3
mov
xor
jge
mov
scas
pop
sbb
xchg
movs
ret
mov
lods
xlat
(bad)
or
jle
rol
inc
add
cmps
(bad)
xchg
jbe
mov
or
push
rcr
xchg
mov
jg
xor
popw
push
ss
adc
add
add
mov
xor
sub
mov
or
ror
mov
mov
sub
cmc
or
cvtdq2ps
data16
mov
pop
jns
xchg
sbb
loop
ins
add
mov
add
or
xchg
or
add
(bad)
movs
mov
pusha
dec
cmp
mov
xchg
cmp
jecxz
inc
xor
int3
mov
push
fcmovnb
cmps
jle
ds
xor
in
xchg
mov
(bad)
div
jmp
mov
(bad)
cli
ins
in
(bad)
cmp
jecxz
jmp
and
jmp
sub
pushf
add
not
mov
call
popf
adc
fcomp
fs
iret
xchg
inc
test
in
test
cmps
push
inc
dec
xchg
dec
dec
dec
sub
call
pop
pop
leave
(bad)
cdq
test
icebp
aad
aas
dec
cwde
loopne
cli
sar
in
stos
sbb
mov
adc
push
mov
sbb
sbb
push
xchg
sbb
pop
rcr
iret
inc
and
enter
push
leave
sub
push
(bad)
aam
cld
scas
mov
or
lds
in
es
or
lahf
pop
xchg
cmp
mov
pop
mov
jp
call
je
retf
xchg
cld
dec
nop
and
xlat
mov
xor
mov
pop
shr
mov
mov
sbb
sub
and
es
aam
test
ret
test
in
(bad)
mov
xchg
mov
cmps
push
jne
imul
cmp
mov
pop
das
rcr
mov
dec
cmc
(bad)
jno
adc
mov
int
push
xor
dec
xor
leave
push
jg
pop
inc
add
add
cli
sbb
cld
scas
iret
jnp
into
pop
fisttp
mov
xlat
imul
xchg
xor
or
pop
cdq
jb
dec
repnz
mov
in
sub
test
fadd
dec
mov
lds
push
xor
repz
pop
dec
sbb
mov
and
ds
(bad)
aas
sub
dec
or
aas
sbb
test
mov
fist
(bad)
(bad)
das
inc
fcmovnu
and
(bad)
in
dec
cs
les
pop
or
sbb
shl
pop
data16
fst
xchg
pop
dec
and
icebp
adc
jge
outs
aam
imul
repz
sub
test
push
cmp
xlat
add
cmp
push
aas
clc
mov
clc
mov
sbb
dec
mov
movs
test
loop
js
adc
inc
xchg
add
es
ror
push
dec
clc
pop
xchg
ja
test
jecxz
mov
imul
pop
arpl
and
mov
xchg
test
inc
scas
mov
mov
jle
sub
pop
jne
repnz
mov
stc
inc
mov
sti
xor
adc
jmp
dec
push
mov
hlt
xlat
jns
out
lahf
pop
xchg
dec
sub
or
mov
data16
mov
pop
xchg
in
icebp
stos
jg
xor
jg
jae
jnp
test
xchg
js
fmul
stc
jnp
popa
lods
jbe
inc
sub
pop
in
push
shl
xchg
adc
xor
outs
mov
cwde
call
adc
xchg
pop
neg
out
pop
(bad)
jecxz
dec
aam
and
outs
in
fdiv
jae
dec
sbb
adc
mov
aam
mov
lea
jecxz
stos
push
pop
jle
dec
rol
push
cmps
xlat
call
and
fisubr
inc
jbe
pop
les
mov
inc
int
dec
popa
dec
cmp
inc
mov
mov
call
sbb
xor
in
inc
stc
xor
xor
mov
int
pop
arpl
cmp
push
jge
scas
cmp
xlat
ins
aaa
cmp
push
sbb
sahf
push
xchg
sahf
dec
pop
jns
mov
mov
int3
sbb
fmulp
ffree
xchg
sbb
jmp
lea
idiv
jmp
mov
retf
imul
leave
cld
pushf
sub
cli
sbb
nop
inc
sub
lods
pop
inc
sub
pop
xchg
out
pop
sbb
ror
es
pop
mov
or
test
jp
sub
loopne
xor
loop
rcr
mov
shl
push
cmp
popf
repz
dec
jae
fs
push
sbb
sbb
or
adc
jecxz
stc
dec
xor
lods
sbb
aad
mov
add
sti
shl
and
sub
xchg
scas
xor
sub
mov
loope
jge
mov
cmp
imul
enter
push
push
and
popa
pop
dec
imul
mov
les
or
js
sbb
mov
stos
cmp
mov
imul
in
cld
stos
jge
out
iret
and
test
cmp
fdivr
inc
sub
ret
hlt
cli
pop
add
jae
ja
mov
xor
fimul
dec
fimul
jp
loopne
out
dec
jmp
popa
pop
xchg
rol
dec
mov
loopne
lahf
jno
outs
sti
jae
inc
out
lods
popf
retf
out
inc
cmp
iret
mov
sar
aas
test
arpl
shl
popa
aas
and
add
cmp
in
jmp
or
cmp
push
xchg
xchg
data16
adc
or
int
xchg
push
sahf
jge
jne
and
xor
int3
test
ret
leave
adc
mov
xlat
cmp
ret
push
push
cmps
fucomip
add
scas
ins
mov
cmp
ud0
add
push
xchg
movs
jne
push
cmp
cmp
xor
dec
(bad)
cdq
push
push
(bad)
enter
sub
lods
lods
(bad)
(bad)
cmp
mov
stos
adc
(bad)
hlt
jge
pop
in
push
xchg
adc
mov
xchg
dec
mov
sub
mov
sub
sub
fwait
mov
popf
jnp
sub
imul
shr
cmp
dec
or
cmp
movs
nop
or
or
aam
pop
retf
inc
cmps
fs
movs
out
sbb
loope
push
popa
(bad)
ins
inc
push
xor
and
jae
mov
das
jle
hlt
jnp
mov
pop
into
push
ja
inc
rol
(bad)
and
push
std
(bad)
mov
xchg
scas
(bad)
jmp
or
mov
add
jns
mov
pop
dec
test
xor
div
pop
cmp
and
adc
push
pop
push
dec
cmp
mov
push
sbb
das
cmp
jl
test
movs
inc
movs
les
ficomp
aam
mov
sub
icebp
cmc
inc
and
das
fidivr
call
xor
outs
xchg
js
pop
and
sub
mov
pop
jae
in
sar
mov
xchg
aas
mov
sbb
mov
aam
ret
iret
dec
movs
push
cmp
cli
sub
dec
and
mov
int
jae
mov
xor
rcl
out
mov
clc
jmp
push
pop
ins
(bad)
outs
and
jnp
xlat
addr16
out
jg
movs
ret
mov
sti
push
lock
loope
cmps
clc
adc
rcr
loope
and
jnp
out
jb
xchg
inc
ins
imul
sub
adc
shl
sbb
mov
cli
push
mov
pushf
dec
hlt
loopne
xchg
sbb
aaa
jbe
test
ret
in
push
mov
hlt
iret
and
call
pop
xor
sub
aaa
pop
sahf
fbstp
jae
cmp
call
sub
mov
scas
cmp
push
mov
(bad)
test
fistp
aam
mov
test
or
sbb
in
pop
xor
mov
out
cmp
or
int
push
sub
mov
mov
push
in
cmp
cmp
sti
mov
out
test
fcmovnbe
pop
in
(bad)
mov
xchg
pop
stc
test
xchg
out
jl
pop
aas
push
(bad)
lods
xchg
mov
push
rcr
rcl
pop
adc
push
call
and
adc
lea
pop
dec
div
xchg
sbb
hlt
cmp
push
dec
test
inc
cmp
mov
ds
xor
(bad)
jmp
adc
mov
lea
or
loop
cmp
je
mov
retf
cmp
and
cli
dec
punpcklbw
jge
and
inc
add
rcr
movs
lea
dec
jp
jp
int3
into
js
(bad)
(bad)
or
dec
pop
pop
jo
pushf
and
and
and
mov
push
pop
cmp
cmps
aaa
test
cmp
dec
sub
xchg
lods
jle
lods
push
(bad)
les
push
pop
pop
sbb
inc
push
ficom
lahf
out
loopne
push
xchg
inc
rcr
jg
bound
loop
or
test
ds
rcl
xor
addr16
out
jno
push
add
push
xchg
test
das
adc
jno
sub
pop
icebp
dec
jbe
xchg
cmps
push
jnp
push
(bad)
fcomip
sub
xrstor
ror
add
popf
test
shrd
stos
imul
jno
mov
and
adc
push
xchg
aad
outs
pop
ret
inc
aad
add
stc
inc
xchg
cwde
fldcw
inc
and
or
loop
jmp
(bad)
das
daa
add
jo
aaa
xor
fucom
fmulp
pushf
mov
in
in
std
dec
fisttp
add
repnz
cmc
fstp
mov
jle
jnp
clc
les
iret
outs
lds
xchg
mov
aaa
xchg
push
sbb
stc
cmp
shr
or
ror
data16
repnz
mov
sub
data16
aas
cdq
lds
div
lahf
fcmove
imul
pop
sub
add
rcr
fwait
xchg
and
in
push
xchg
scas
lods
push
pop
gs
fild
rol
pop
inc
inc
add
mov
or
(bad)
cmp
shl
mov
fisubr
sbb
std
mov
xchg
call
inc
pop
mov
call
retf
mov
ss
test
cwde
in
and
push
mov
mov
pop
retf
adc
fld
push
cmp
imul
mov
repnz
mov
cmp
cmps
jmp
mov
jb
pop
jne
push
adc
lods
push
jp
(bad)
xchg
sub
push
stos
mov
in
and
mov
cs
rol
xor
jo
enter
(bad)
push
cmp
pop
xchg
fwait
std
push
popf
pop
in
cdq
lods
push
xchg
neg
pop
mov
add
out
xor
iret
jbe
jae
dec
popf
xchg
fist
mov
sti
(bad)
les
mov
loop
lea
stos
popf
in
cmp
imul
xchg
pop
add
cmp
sbb
das
test
in
mov
or
xor
retf
mov
icebp
sub
push
xchg
dec
sbb
stos
jg
xchg
cwde
out
jmp
jb
pop
(bad)
sbb
mov
movs
iret
or
in
cmp
inc
pop
ds
and
daa
inc
mov
jns
mov
xchg
mov
cli
xor
push
jbe
and
jnp
pop
pop
ins
ja
fdivr
xor
les
sub
lods
dec
adc
mov
loopne
mov
mov
pop
pop
push
fcomip
ret
dec
jmp
ins
call
into
icebp
(bad)
xchg
xchg
xor
enter
sub
mov
pop
loop
ret
inc
stos
call
sub
je
jnp
pop
add
jae
mov
out
or
jmp
mov
jge
inc
and
aam
sub
mov
stc
xchg
cdq
outs
fcmovbe
jns
div
fldcw
mov
mov
pop
adc
int3
inc
sub
push
mov
push
mov
add
fidiv
data16
fs
mov
or
xchg
movs
push
xlat
xor
jge
mov
mov
gs
xchg
adc
movs
inc
out
addr16
cld
out
jnp
cmp
inc
cmp
jmp
sbb
mov
lods
xor
dec
and
xor
xor
and
push
dec
je
jmp
ds
dec
inc
sub
mov
sbb
jb
push
dec
popf
call
rcr
sbb
cmp
cmp
inc
mov
or
out
(bad)
push
jb
aas
cmp
jg
les
add
sub
pop
pop
push
(bad)
fnstenv
cmc
jg
or
pavgb
sub
pop
xlat
retf
jae
sar
fsubr
mov
mov
add
push
loope
stos
lock
(bad)
push
jmp
xchg
inc
cmc
mov
imul
aam
sbb
(bad)
or
mov
mov
je
jbe
aam
push
jae
or
pop
pop
and
xor
or
shl
scas
es
dec
aas
xor
mov
arpl
sub
neg
into
xor
jae
mov
adc
and
fucomip
cmp
mov
mov
adc
mov
mov
fnstcw
push
mov
pop
mul
fwait
adc
popf
jne
aas
scas
xor
aad
xor
iret
inc
xor
push
stc
mov
addr16
push
push
mov
aas
(bad)
xchg
retf
jmp
sbb
ret
ftst
inc
lock
pop
clc
jae
inc
shl
pushf
stc
xchg
push
test
mov
push
dec
pop
cmp
jmp
mov
outs
xor
or
add
wbinvd
add
fldenv
push
xor
xchg
cmp
push
stc
test
je
cmc
mov
sar
fild
add
(bad)
push
mov
fisttp
xor
aas
xchg
jl
(bad)
mov
dec
xchg
call
adc
sub
adc
icebp
xchg
xor
ins
mov
dec
(bad)
aad
adc
xchg
aaa
push
repnz
xchg
cmps
fstp
jmp
inc
push
mov
data16
pop
adc
cdq
cmc
pop
imul
adc
in
xchg
fisub
inc
dec
xchg
push
xor
out
xchg
pop
lods
ret
fbstp
mov
stos
xchg
leave
mov
adc
mov
rol
iret
(bad)
adc
jnp
bnd
jg
xor
adc
add
push
and
cli
(bad)
jbe
mov
jp
iret
sub
mov
rol
add
lods
shr
ds
shl
or
fisttp
mov
aas
in
arpl
push
loopne
sub
or
icebp
repz
shl
xchg
data16
(bad)
jecxz
aad
ficomp
in
add
push
stos
or
cdq
jmp
mov
mov
sbb
pop
js
call
xchg
xor
retf
mov
push
pop
dec
pop
sub
mov
sbb
push
pop
lods
jmp
scas
mov
pop
outs
test
ins
ds
int
sbb
out
mov
add
and
leave
imul
mov
dec
jmp
or
hlt
mov
xor
xchg
xchg
cmp
mov
xor
cmps
daa
mov
mov
xchg
add
arpl
and
clc
pop
int3
(bad)
sub
out
int
imul
adc
xchg
(bad)
sahf
cmp
adc
cs
pop
push
push
push
pop
test
jle
loopne
test
mov
push
(bad)
sti
cld
and
fisttp
jo
(bad)
je
lea
push
rcl
gs
xchg
and
and
push
bound
clc
cdq
neg
or
mov
jl
sti
dec
mov
mov
xchg
sbb
jp
fbld
adc
(bad)
xchg
xchg
add
jne
or
adc
sub
sar
jl
leave
in
idiv
(bad)
push
aad
(bad)
pop
xor
push
pusha
sti
jne
cmp
ret
sub
mov
push
xor
mov
or
cmps
mov
dec
lock
sbb
mov
fs
pop
or
ftst
dec
sub
xor
dec
cmp
aaa
jnp
xchg
cmp
std
inc
sbb
ja
dec
fdiv
(bad)
mov
add
xchg
mov
iret
into
lea
les
mov
sbb
cmp
or
test
rcl
retf
cmp
test
dec
and
mov
sub
and
mov
rcr
cs
out
mov
gs
scas
aaa
out
xchg
test
jg
loopne
sub
cli
jg
addr16
jmp
pop
pop
pop
jl
xor
popf
(bad)
in
mov
(bad)
jmp
fucom
mov
sub
xor
sub
jp
mov
loop
jae
and
jge
dec
inc
jae
bound
pusha
fcom
stc
sub
sbb
(bad)
aad
les
ss
and
nop
ror
mov
(bad)
or
popf
inc
nop
xor
xor
and
pop
(bad)
xor
sbb
in
pop
shr
sbb
and
or
adc
(bad)
cli
push
inc
xchg
dec
mov
xor
je
jge
movs
sub
rcl
inc
mov
and
call
xor
add
aad
loopne
ins
jecxz
cmp
inc
retf
jno
shl
sub
jae
cld
les
mov
les
fstp
popf
sti
mov
hlt
outs
lahf
pop
push
cmps
mov
out
jb
das
das
adc
mov
cmp
sbb
movs
out
iret
xor
movs
dec
mov
enter
inc
stc
rol
mov
xchg
cs
pop
enter
jns
cmps
mov
ja
pop
iret
sub
(bad)
sub
jl
xor
shr
into
mov
arpl
jmp
or
ins
jbe
push
call
(bad)
fs
jnp
js
jb
push
add
lahf
nop
mov
repz
or
mov
cli
xor
inc
arpl
xlat
movs
xchg
fisttp
call
jmp
mov
xchg
test
or
pop
mov
mov
addr16
xchg
mov
dec
cmp
mov
or
sti
and
cmp
mov
js
push
pop
inc
mov
test
xchg
mov
icebp
(bad)
mov
in
out
imul
or
jle
lods
cmp
fwait
das
push
fisub
push
ror
jle
add
sub
and
inc
test
in
mov
fwait
push
inc
leave
mov
push
pop
pushf
loope
mov
pop
jecxz
jl
fwait
lea
movs
pop
lahf
jns
add
xlat
sub
jns
jns
jns
push
cli
push
pop
xchg
adc
mov
jl
xchg
push
std
jmp
fcmovnu
jl
and
xchg
add
jecxz
jb
cmp
pop
mov
js
dec
inc
jo
cwde
adc
mov
sub
pop
out
fstp
dec
mov
aad
pop
mov
cmp
lods
pop
dec
ss
ja
adc
ins
test
fs
sub
enter
(bad)
fistp
xchg
jbe
lock
or
add
or
into
push
inc
dec
inc
jmp
sbb
lds
lock
movs
jne
sbb
int
sbb
enter
or
mov
mov
in
pop
repnz
mov
cmp
imul
adc
push
data16
xor
and
jae
add
adc
les
pop
pop
cmp
jnp
and
ja
lea
mov
jns
sahf
or
sub
mov
inc
mov
pop
nop
adc
loope
xchg
pop
fimul
jnp
jmp
movs
push
xor
xor
or
mov
xchg
and
leave
xchg
jns
retf
xor
fmul
daa
push
jmp
scas
mov
lods
sbb
clc
push
aaa
dec
cs
xchg
fidiv
mov
cmp
add
xchg
push
adc
adc
clc
mov
scas
mov
leave
inc
sbb
outs
(bad)
mov
fldenv
idiv
mov
push
jb
and
and
xlat
in
sub
leave
sti
cmp
push
push
sub
push
cld
repz
mov
xlat
pop
mov
pop
shr
sbb
js
leave
inc
cmp
scas
retf
ret
inc
in
out
stos
push
dec
mov
push
mov
out
mov
pop
stos
outs
scas
inc
add
mov
movs
dec
push
jne
leave
push
lock
sbb
and
jmp
mov
lds
mov
and
sub
mov
sub
aad
dec
and
ins
pusha
or
lahf
cmc
jl
mov
(bad)
repz
xchg
(bad)
call
dec
push
std
inc
mov
stos
push
inc
enter
or
pop
push
into
fstp
pop
(bad)
fbstp
mov
cmp
push
in
popa
adc
jnp
and
stos
fwait
xor
mov
loope
popf
and
push
pop
jp
fistp
mov
xor
out
pusha
iret
xchg
shl
in
or
cmp
sbb
adc
mov
js
out
add
imul
adc
jge
ror
xchg
loopne
adc
scas
retf
sbb
and
mov
fidiv
test
inc
mov
sub
in
lods
push
scas
push
xchg
ins
push
rcl
cmc
inc
dec
ins
dec
outs
push
add
imul
or
push
jns
repz
enter
cmps
xchg
arpl
mov
idiv
loope
or
jl
lea
lods
sub
jbe
mov
test
and
jnp
stos
mov
sbb
fnstsw
imul
stos
dec
push
push
loope
push
mov
in
or
xor
call
mov
les
in
inc
dec
and
mov
mov
(bad)
dec
mov
xchg
push
ret
aaa
push
jne
stos
popa
push
cmps
and
ror
jmp
sub
sti
mov
mov
cmp
pop
jge
retf
or
rcr
push
dec
pop
xchg
imul
imul
dec
mov
pop
sbb
push
mov
sbb
(bad)
mov
and
mul
repnz
cmc
cld
adc
fsubr
loope
retf
pushf
push
inc
mov
mov
xor
push
jmp
ds
inc
mov
jnp
adc
mov
cs
cdq
lea
inc
daa
aaa
sub
test
sbb
mov
fisttp
xchg
push
(bad)
shl
mov
fstp
cmc
das
push
mov
cmps
xor
xchg
pop
inc
and
rcl
adc
xor
ds
jb
lds
into
and
inc
cdq
push
dec
enter
gs
xchg
out
xchg
das
push
dec
xor
jecxz
stos
lock
popa
pop
sub
jo
retf
icebp
movs
adc
push
lahf
mov
test
xor
or
jmp
dec
sub
in
or
add
movs
add
mov
jecxz
push
mov
adc
mov
in
mov
inc
xchg
mov
push
inc
call
outs
add
sbb
inc
add
popf
xchg
loope
mov
in
icebp
cmp
mov
inc
inc
rol
lock
mul
std
test
cmc
push
mov
repz
cmps
or
cmp
add
jmp
lds
ins
call
(bad)
lock
ret
dec
push
mov
and
nop
sub
dec
dec
jns
inc
in
retf
or
xchg
inc
sar
sub
call
aas
push
add
(bad)
mul
out
xchg
cdq
add
(bad)
mov
(bad)
idiv
dec
cmc
sbb
or
xchg
mov
xchg
pop
mov
inc
xor
fild
add
or
repz
cmp
add
or
test
ficom
test
adc
ret
or
mov
xlat
pop
sbb
cli
dec
jle
shl
repz
jl
or
lods
inc
sbb
and
(bad)
js
push
stos
dec
jo
dec
(bad)
aad
pop
mov
arpl
push
ret
cmp
dec
fnsave
popa
add
push
fldcw
sub
xor
pop
dec
dec
jbe
movs
popa
test
cmp
mov
jae
test
or
ficomp
imul
cld
xchg
mov
xor
push
xor
mov
mov
rcr
ret
call
inc
dec
retf
jg
int3
or
ss
cmp
enter
lock
cmps
mov
push
pop
and
pop
neg
shr
shl
jno
jo
xor
lods
mov
mov
mov
pop
out
popf
push
popa
xor
jl
push
aad
(bad)
mov
leave
cmps
jmp
aam
add
iret
sub
loope
ins
out
inc
lahf
and
es
dec
dec
inc
pop
add
xor
shl
ja
mov
mov
icebp
jns
dec
es
or
inc
sbb
push
mov
and
sub
stos
mov
jmp
push
in
push
dec
retf
and
test
xchg
or
add
cmps
mov
rcl
or
jg
mov
into
aam
jmp
pop
xchg
shl
je
cmp
or
ins
sbb
cmp
dec
mov
or
xchg
jb
daa
mov
jp
test
jmp
mov
mov
outs
mov
sub
push
aas
dec
(bad)
lods
cmp
mov
xchg
jb
or
dec
das
mov
outs
xchg
jae
pop
add
push
leave
into
xchg
inc
dec
mov
mov
cmp
add
sti
mov
or
pop
ins
test
dec
in
and
mov
add
sbb
mov
mov
jmp
push
lods
mov
(bad)
xor
push
test
adc
cmp
std
fcomip
shl
hlt
or
cli
aad
cli
mov
jae
fdivr
or
retf
dec
mov
loopne
xchg
mov
push
jno
pop
clc
mov
jbe
cmp
aam
aaa
jg
mov
or
scas
jge
xchg
fldenv
xor
jae
fdivr
arpl
sub
stc
add
call
jae
(bad)
mov
scas
dec
pop
xchg
ja
out
popf
clc
(bad)
pop
inc
shl
dec
or
or
scas
out
dec
jmp
dec
inc
xor
jmp
mov
lea
(bad)
cmpps
or
pusha
xchg
add
xchg
push
jp
in
jmp
inc
cmc
sar
or
jae
loope
mov
dec
bound
ret
and
sbb
rol
jo
jmp
icebp
mov
xor
push
or
pop
sub
sub
mov
into
frstor
sub
test
cmps
add
iret
sbb
dec
xlat
and
mul
jbe
mov
pop
jge
sub
fucomp
test
dec
xor
jecxz
mov
enter
pop
inc
ins
pop
cmp
jp
xchg
xchg
xor
pop
mov
lea
jo
daa
(bad)
jp
jl
lea
imul
pusha
ins
idiv
pop
call
pop
int3
cmc
inc
ja
je
sbb
xor
or
cmp
loop
(bad)
imul
das
das
aaa
pop
lea
(bad)
ja
pop
out
and
add
test
and
ret
jmp
xor
test
cmps
dec
cmp
xlat
imul
leave
jg
mov
fidivr
mov
sbb
mov
arpl
jge
cwde
test
inc
retf
adc
cdq
mov
xchg
adc
rcl
out
in
(bad)
or
pushf
or
fcomi
xor
pop
inc
mov
xor
aaa
out
sar
mov
rcl
dec
inc
rol
jmp
data16
mul
scas
dec
mov
cmp
mov
xor
mov
xor
dec
jo
test
sahf
in
data16
idiv
mov
iret
test
cmp
sub
test
xchg
xor
adc
test
jmp
sub
(bad)
mov
jno
fdivp
arpl
inc
dec
call
xchg
adc
daa
push
push
ret
mov
mov
lock
movs
push
mov
rol
xor
repz
mov
xor
or
mov
push
pop
pusha
icebp
dec
push
call
mov
and
movs
dec
retf
stc
mov
cmp
sub
xor
dec
add
addr16
dec
nop
daa
sbb
push
ja
jne
push
mov
sbb
in
scas
push
sub
shl
call
pop
jl
popa
(bad)
xchg
push
jecxz
pop
into
pop
xchg
leave
push
retf
pop
imul
dec
lods
xor
or
or
inc
fsubr
cmp
cs
push
or
cmovae
ficom
mov
xor
mov
add
cmps
mov
call
cmp
mov
mov
jecxz
sbb
aaa
mov
out
xor
pop
scas
mov
inc
int3
call
mov
xchg
mov
das
push
cwde
pop
xor
or
cmc
add
out
test
dec
mov
enter
lock
push
mov
pop
(bad)
imul
cld
call
push
neg
aaa
mov
pop
pop
test
push
outs
pop
add
daa
pop
inc
push
sti
jecxz
test
loop
pop
mov
inc
stos
xchg
and
lods
xor
fcomi
add
inc
mov
dec
aad
stos
and
dec
jmp
lahf
into
lds
rcl
adc
hlt
(bad)
mov
dec
push
push
bound
jp
fiadd
(bad)
outs
aad
adc
xchg
cs
test
(bad)
clc
dec
push
(bad)
aad
mov
mov
test
pop
addr16
and
mov
push
sbb
bound
push
inc
mov
pop
ja
pushf
sti
(bad)
(bad)
inc
stos
xor
cmps
rcr
dec
iret
mov
mov
aas
(bad)
aas
xchg
bound
in
mov
sub
imul
fadd
lock
fs
sti
and
xchg
shr
loope
movs
mov
cmp
dec
jecxz
sub
push
les
mov
int
jmp
xor
xchg
xchg
or
inc
clc
or
rcl
hlt
rcl
es
adc
int
inc
cmps
out
imul
cmp
scas
or
loop
dec
movs
(bad)
xchg
push
push
add
pop
lds
inc
sub
(bad)
cmps
and
mov
inc
retf
push
pop
out
outs
mov
sbb
(bad)
push
in
xor
pop
xchg
pop
jno
push
sbb
mov
dec
sub
mov
cdq
rcr
and
std
push
inc
int
jne
pop
leave
add
xor
jge
nop
add
stc
dec
and
pop
xchg
add
dec
(bad)
adc
add
in
pop
(bad)
xor
adc
fwait
or
test
cmp
xor
xchg
dec
stos
jb
cmp
or
and
popf
in
pusha
in
aas
pop
adc
jp
fimul
jnp
loope
cwde
mov
or
je
and
xchg
loop
in
fs
dec
or
adc
(bad)
sahf
inc
push
mov
scas
cmp
int3
out
jb
(bad)
push
push
clc
jg
push
pop
mov
rol
add
xor
sub
pop
nop
(bad)
and
mov
pop
jb
mov
les
leave
mov
aaa
fist
dec
ret
xlat
es
jnp
fwait
pop
sar
aad
adc
xchg
pop
add
dec
add
cs
xlat
pop
jl
test
call
in
xor
repz
mov
aaa
test
sti
mov
cmps
cli
pushf
add
fwait
or
cmps
int3
data16
sahf
jg
xchg
jnp
jmp
ret
mov
aam
inc
fimul
adc
dec
sbb
mov
or
stos
outs
jbe
xchg
imul
lds
mov
inc
jle
and
movs
cli
in
clc
adc
pop
clc
mov
or
mov
inc
inc
repz
fsqrt
and
dec
or
das
jbe
pusha
mov
call
jmp
cmps
push
xchg
inc
hlt
jl
and
pop
ins
test
jge
imul
stos
(bad)
push
sub
outs
jmp
and
sahf
inc
lock
aad
pop
xchg
jae
xchg
xchg
ret
pop
or
cmp
cs
sbb
and
lahf
or
out
icebp
push
fld
ds
fwait
push
pop
icebp
aaa
mov
das
xor
xor
jns
mov
xchg
cmc
mov
mov
sub
int
push
outs
and
imul
sbb
jmp
bound
ds
sub
adc
xchg
sbb
sub
mov
mov
xor
pushf
push
in
sbb
inc
call
shr
xchg
cmp
inc
pop
es
(bad)
leave
jmp
or
cmp
(bad)
(bad)
popf
mov
inc
jle
or
push
stos
stc
pop
arpl
pop
add
inc
call
setnp
mov
cmp
sbb
inc
sbb
mov
ret
out
enter
ins
movs
jbe
rol
and
ss
divps
and
sub
xor
movs
in
call
outs
clc
(bad)
fcomp
jne
loopne
cdq
jle
pop
fcomp
imul
add
dec
mov
jne
push
inc
pop
fidivr
jmp
in
arpl
pop
jmp
outs
sub
in
shl
add
add
stc
retf
dec
cmps
sbb
test
ds
scas
addr16
ficom
adc
inc
mov
jb
outs
lock
mov
popa
fsubr
mov
loopne
ficomp
out
int3
cmp
adc
loop
ds
xchg
dec
stos
mov
push
push
ds
pop
(bad)
in
jbe
movs
scas
(bad)
ds
mov
xor
pop
not
push
mov
sar
das
or
cmp
shl
xchg
xlat
in
adc
sbb
mov
xchg
and
(bad)
ror
sub
xchg
mov
xor
and
and
mov
fild
hlt
in
leave
int3
inc
inc
gs
sti
ss
lock
(bad)
sbb
push
stos
push
movs
cmp
cmp
jnp
icebp
push
mov
push
inc
cmp
outs
push
push
mov
cmp
lds
ins
imul
outs
pop
rcl
scas
jl
sub
xchg
mov
bound
mov
push
and
stc
aam
lods
or
and
cmp
(bad)
(bad)
mov
lods
(bad)
xor
adc
je
pop
and
ror
inc
mov
rol
aaa
pop
or
cmp
push
inc
(bad)
jge
test
outs
fistp
rcl
dec
mov
outs
call
arpl
and
add
not
sub
cmp
out
push
int3
jmp
push
jg
cwde
mul
mov
ds
loopne
mov
xlat
(bad)
dec
inc
nop
and
push
ins
adc
jge
movs
xor
inc
inc
adc
sub
and
sbb
adc
cli
sbb
ret
fld
cmp
inc
shl
pop
sub
clc
dec
addr16
dec
fwait
mov
rep
sub
lods
xor
lahf
mov
push
hlt
(bad)
xchg
mov
push
cs
mov
int
jl
dec
pop
cmps
mov
ds
mov
aas
adc
outs
fisttp
sar
push
add
loop
cmp
mov
xchg
mov
or
inc
ins
rcl
adc
jbe
add
cdq
xchg
ss
mov
in
jno
(bad)
cwde
aas
sbb
adc
repz
in
xchg
cmp
lea
cdq
mov
mov
xchg
adc
ja
cmp
cwde
xor
fiadd
xchg
movs
inc
aas
loop
mov
sub
rcr
adc
loopne
jne
inc
imul
shl
push
push
cwde
sbb
xchg
and
mov
cmp
mov
fcmovu
je
imul
frstor
fidivr
in
push
cdq
sbb
(bad)
pop
ss
inc
mov
push
add
pushf
sbb
push
sahf
or
fs
lods
cmc
lea
pop
mov
retf
sub
push
and
cmp
mov
fdiv
jle
sbb
xor
or
xchg
dec
xchg
(bad)
lods
fild
ret
fisub
fdivr
cmp
pop
adc
dec
pop
push
sbb
add
sbb
inc
push
cld
pop
imul
xchg
mov
xor
sbb
out
push
out
call
jns
jle
(bad)
sbb
bound
cmp
test
popf
mov
call
push
cmp
pop
sub
add
in
repz
push
test
ins
sbb
movs
lea
jmp
dec
sbb
xchg
push
out
out
or
repnz
jp
inc
and
jae
imul
jno
cmp
(bad)
pop
add
sbb
shl
mov
rcr
retf
in
mov
and
sbb
sti
jge
jae
push
icebp
adc
push
loop
out
ins
push
sahf
je
sbb
xchg
xchg
ins
inc
sbb
fldcw
fs
xchg
lahf
in
fld
push
gs
jl
inc
xchg
scas
hlt
cmp
push
repz
adc
push
test
imul
test
inc
mov
xor
push
dec
test
jnp
fmul
pop
bt
sub
dec
scas
out
pop
adc
dec
and
sti
adc
aad
nop
mov
jns
outs
bound
add
mov
mov
jle
shr
dec
pop
popa
push
push
(bad)
fisub
dec
popa
xchg
gs
sar
jbe
mov
push
adc
jl
cmp
in
xor
xchg
hlt
adc
ins
cmp
inc
push
jp
mov
fnsave
ins
xlat
pop
add
jns
cmp
push
(bad)
(bad)
inc
movnti
or
inc
dec
pop
sub
jne
jg
mov
stos
pop
sbb
leave
popf
push
mov
daa
das
or
and
and
ins
cwde
out
jae
icebp
cmps
push
sbb
xchg
aaa
or
jae
push
pop
icebp
dec
or
jno
das
jmp
add
sub
inc
imul
xlat
(bad)
shr
push
sub
xchg
test
add
jae
adc
(bad)
pop
mov
inc
jge
jnp
sub
cmp
mov
ret
imul
mul
ds
push
in
mov
dec
push
jp
mov
mov
mov
add
(bad)
shr
cmp
add
hlt
scas
arpl
imul
add
dec
mov
ja
inc
pop
retf
lea
inc
int
mov
push
push
add
and
cmps
push
jecxz
mov
mov
neg
mov
test
jmp
loopne
and
les
aam
jmp
jno
out
lea
push
sbb
xor
cli
or
sbb
add
pop
shl
xlat
outs
adc
inc
(bad)
imul
imul
mov
push
mov
lahf
fidiv
pop
cmc
inc
mov
mov
lods
pusha
mov
mov
mov
xor
repz
xor
push
mov
ins
dec
bound
fcomp
jae
mov
xchg
into
sbb
scas
out
mov
test
and
mov
stc
xor
xor
push
jbe
inc
and
in
mov
iret
pop
mov
cmp
adc
push
(bad)
jecxz
mov
iret
pusha
dec
pusha
ret
push
ins
imul
or
sti
mov
sahf
mov
ss
xchg
xchg
fisttp
inc
sub
sbb
xchg
jmp
inc
adc
xor
inc
inc
lahf
dec
dec
cmp
push
outs
pop
sbb
cmp
cmp
mov
xchg
jno
add
add
adc
or
xor
and
xchg
movs
sub
mov
sub
fstp
repz
ss
jne
sub
sub
mov
jae
cmp
and
in
push
ss
pop
mov
push
sub
lock
in
adc
imul
(bad)
(bad)
nop
js
xchg
jge
adc
inc
shl
and
pop
cmp
sub
lds
pop
add
mov
jp
push
sub
outs
imul
js
mov
outs
adc
repz
mov
xor
xchg
push
cmp
mov
jo
mov
xchg
jecxz
nop
inc
jmp
fs
inc
mov
pusha
sub
push
call
and
xchg
fisubr
pop
lods
add
shr
sahf
cmp
je
push
push
lods
mov
jnp
push
push
push
push
loope
xor
js
xor
adc
int
pop
mov
jmp
adc
pop
(bad)
call
lock
jge
cdq
xchg
mov
push
mov
loope
xor
js
pop
inc
sub
test
mov
enter
push
pop
or
stos
icebp
lea
nop
inc
mov
cli
xor
fimul
fst
mov
push
jge
and
jmp
xor
movs
mov
and
ficomp
jnp
mov
cmc
repz
xchg
ror
adc
fsubr
mov
and
cmp
add
sub
inc
lock
out
ins
inc
cmp
inc
jmp
cmp
xor
jle
add
mov
pop
test
sti
or
stos
or
jmp
and
dec
out
test
int3
jmp
add
in
xor
ss
loope
xchg
call
sbb
xor
iret
inc
scas
movs
pop
or
mov
mov
shl
push
cdq
add
out
out
adc
sub
xchg
retf
ret
out
or
data16
mov
adc
aam
push
sub
neg
xchg
rol
dec
fistp
dec
int
dec
xchg
jb
cmps
int3
aas
fmul
shl
xchg
mov
stos
dec
out
dec
stos
mov
push
popf
push
stos
push
mov
test
iret
pop
adc
and
xlat
int3
stos
cmps
aaa
xchg
mov
sbb
rcl
cmp
jnp
out
fs
cmp
mov
mov
test
pop
inc
call
and
inc
fcom
loope
lea
ret
clc
mov
loopne
inc
adc
lods
lahf
fdivr
mov
mov
loop
sbb
enter
mov
int
in
pop
call
or
sahf
and
pop
pop
call
mov
jg
inc
jns
out
pop
in
inc
movs
mov
popa
mov
and
cs
mov
jmp
(bad)
mov
mov
push
out
loop
jp
je
jae
jecxz
mov
out
leave
aaa
aad
mov
sbb
ss
jp
cmp
loopne
test
push
pop
sub
rcr
into
(bad)
push
mov
mov
add
loopne
sub
add
pusha
mov
add
sub
fcomp
adc
in
pop
push
push
inc
push
in
out
or
retf
add
test
arpl
sub
retf
fs
dec
jmp
mov
(bad)
out
lods
fcomi
and
rol
mov
in
sub
or
pop
push
adc
mov
out
xor
mov
mov
in
shr
lods
xor
sti
mov
push
mov
pop
push
add
xchg
jne
jmp
cdq
je
cmp
fs
bound
mov
xchg
mov
jp
and
dec
lods
ss
and
sub
xchg
ss
mov
inc
jmp
dec
inc
dec
jl
jo
xchg
pop
sub
xchg
arpl
sub
jg
int3
inc
inc
sub
repz
icebp
out
lock
leave
push
inc
xor
enter
xchg
cld
pop
xchg
add
movs
sbb
ficomp
mov
stc
test
addr16
push
xor
mov
mov
data16
pop
or
sbb
icebp
mov
pop
icebp
push
test
adc
cld
push
xor
inc
add
dec
push
repnz
push
bound
aaa
ror
sbb
adc
sahf
stc
sbb
sbb
pop
and
inc
cld
test
(bad)
das
and
dec
pushf
retf
or
add
ret
cmps
cmp
js
movs
sub
int
ror
add
test
je
lods
mov
ror
imul
or
xor
or
mov
out
or
int
add
mov
adc
push
fiadd
pop
inc
(bad)
mov
int
sub
mov
or
aam
bound
cdq
cwde
repz
sbb
not
push
jle
xchg
jo
mov
cmps
aam
add
scas
leave
adc
adc
mov
and
dec
aam
cmp
add
push
mov
adc
pop
xchg
push
pop
add
icebp
mov
stc
data16
lods
pop
out
dec
pop
add
sbb
push
xor
stc
jae
nop
lock
mov
mov
or
sar
push
adc
lock
mov
adc
je
mov
dec
enter
ja
and
loop
test
popa
arpl
aaa
js
jge
lahf
jle
jge
xchg
mov
rcr
jnp
ins
mov
jge
hlt
sbb
mul
pushf
sub
cmp
cmp
daa
scas
xor
dec
fwait
aaa
lock
cli
into
sub
scas
sbb
adc
arpl
sub
in
or
sbb
and
imul
xchg
xor
loope
sbb
daa
(bad)
in
in
mov
stos
cmps
mov
loop
fisubr
cmp
and
icebp
jp
or
cdq
test
fisttp
mov
not
movs
mov
int
fisttp
and
jb
das
pop
adc
lea
stos
cmp
pop
push
xor
jns
xor
movs
jmp
and
bound
pusha
repnz
fadd
jp
rcr
and
bound
in
test
scas
lods
fistp
and
data16
lds
xlat
push
cmp
pop
out
aaa
push
mov
or
xchg
jecxz
xchg
mov
cdq
sub
jl
jne
push
xchg
jecxz
sti
mov
adc
shl
aam
(bad)
repz
fcomp
push
pop
sbb
cmp
xor
cmp
sub
popf
loopne
jmp
push
shl
xchg
mov
adc
dec
xchg
pop
sub
dec
add
call
add
push
mov
or
fisub
xor
dec
jae
pcmpeqb
outs
outs
xchg
ficom
push
out
mov
imul
mov
pop
or
xchg
stos
cmp
push
cli
push
mov
pop
jo
out
mov
or
shr
cmc
cmpxchg
adc
xor
rcr
cmp
cmc
xchg
aaa
test
mov
clc
and
stos
push
mov
sub
je
dec
cmp
xor
lahf
mov
dec
lods
cmps
dec
outs
sbb
(bad)
out
adc
lahf
nop
dec
ins
xor
mov
jmp
jmp
jns
add
rcl
push
push
into
xor
jne
outs
or
out
fisub
cmp
cmp
movq
rcl
add
mov
mov
rcr
mov
mov
mov
je
scas
mov
aas
aam
cmp
popa
push
and
cmp
pop
mov
pop
pop
pop
jmp
imul
push
sbb
fmul
inc
or
push
call
aaa
jmp
mov
out
mov
pop
lds
xor
imul
mov
(bad)
clc
dec
aam
mov
or
sbb
(bad)
cmc
add
adc
les
call
int3
cmp
sbb
xchg
and
sub
pop
loop
pop
cmp
push
sar
rcr
cmps
in
ret
lahf
aas
mov
add
push
sti
sbb
sbb
jg
jb
(bad)
arpl
aam
pop
jmp
mov
push
fld
rcl
pushf
mov
cmps
enter
xchg
and
sahf
data16
xlat
adc
ret
out
dec
scas
adc
call
push
inc
xchg
push
lods
push
fadd
stos
xchg
pop
pop
pop
lahf
les
iret
pop
or
and
mov
jp
xchg
std
xchg
mov
int3
test
shl
cmp
rol
fcomp
cdq
xor
sbb
dec
lahf
sub
and
lods
inc
addr16
cmp
jae
inc
lahf
xchg
mov
cmp
ins
inc
jmp
call
mov
dec
add
jle
aam
(bad)
sub
shl
xor
aaa
dec
sar
or
outs
inc
pop
and
add
sub
cdq
mov
retf
std
(bad)
mov
aas
retf
push
mov
mov
push
mov
mov
inc
xchg
and
pop
mov
jb
inc
les
and
dec
cli
scas
test
fcomip
mov
icebp
add
aaa
sub
std
popf
mov
sbb
jle
push
xchg
test
fimul
(bad)
lahf
in
pushf
jne
jle
outs
aas
aas
mov
jg
mov
cmp
fisub
xor
jp
mov
inc
cmp
mov
or
xchg
rol
and
dec
ss
mov
xchg
stos
popa
das
inc
xchg
or
loopne
in
push
sub
jp
out
js
clc
jns
enter
iret
test
dec
fisub
and
sub
(bad)
mov
daa
call
lods
or
pushf
adc
aaa
cs
inc
pusha
icebp
arpl
mov
cmps
lods
pop
fucom
jo
mov
imul
or
fst
retf
call
ja
ss
inc
sbb
sar
cmp
test
es
push
adc
xchg
mov
call
xor
mov
inc
scas
scas
movs
enter
cmp
rdtsc
aad
mov
add
push
pusha
fnstcw
fwait
or
movs
add
xor
xor
sbb
add
sbb
int3
test
push
cmp
push
cmps
fst
bound
ins
inc
int3
push
mov
inc
popa
dec
fild
inc
sub
bound
sub
shr
pop
jnp
sbb
ficomp
cmp
dec
cmps
es
dec
jo
push
jge
push
syscall
mov
cmps
pop
enter
and
daa
shr
aad
adc
jno
in
jb
and
sub
xchg
addr16
jg
fstp
ret
pop
es
jg
sub
inc
int
inc
mov
xor
pop
int3
test
in
aad
mov
inc
mov
jnp
jmp
sahf
xor
jb
jg
(bad)
popf
inc
mov
mov
cmp
shl
adc
cmp
jae
dec
loope
outs
out
cmps
jbe
loopne
loop
movs
adc
cli
mov
fidivr
jbe
xchg
ret
xor
mov
and
into
push
mov
loopne
adc
sahf
ja
adc
fistp
mov
cmps
lahf
adc
pop
call
and
inc
lods
mov
das
les
sbb
imul
xor
leave
test
or
push
test
(bad)
in
xchg
addr16
mov
xchg
add
outs
ja
std
ret
dec
popf
jmp
push
daa
imul
jo
pop
push
mov
leave
fistp
(bad)
int3
inc
inc
cmps
iret
or
dec
push
lods
int
fsub
mov
mov
or
rol
or
dec
inc
cmc
mov
jns
in
jns
dec
repnz
jge
cmps
xor
cli
shl
ror
ds
test
test
cmps
stos
mov
jae
fnstsw
push
repnz
rcl
mov
and
cmp
ret
jl
sbb
cmp
or
ret
mov
lds
xchg
stc
or
imul
aam
ret
xchg
add
or
dec
and
jle
mov
dec
hlt
test
jp
jnp
cmp
mov
dec
call
shl
inc
mul
test
mov
adc
and
cmp
jl
push
pop
outs
push
add
pop
jmp
js
xlat
fst
scas
aam
adc
adc
fs
lods
neg
xor
mov
scas
push
in
(bad)
sbb
jb
and
and
adc
out
rcr
and
jne
mov
sub
mov
sahf
jge
shl
mov
push
xor
daa
repnz
mov
cmp
pop
push
or
sub
clc
mov
fld
(bad)
stc
jecxz
push
adc
data16
nop
cmp
jmp
sahf
ror
adc
movs
cmc
lods
dec
adc
stos
pop
or
ss
dec
es
inc
stos
(bad)
jo
dec
int
dec
xor
ret
mov
fwait
call
xor
and
jle
sbb
mov
add
mov
popf
scas
sub
sar
adc
pop
jo
mov
jmp
rol
fs
and
mov
adc
test
test
mov
stc
mov
scas
xor
mov
into
adc
mov
xchg
in
push
outs
test
sub
pop
(bad)
sbb
or
cs
adc
hlt
shl
sbb
stos
mov
ins
inc
and
inc
pop
sub
or
pop
(bad)
cli
cmp
lods
mov
imul
cmps
push
(bad)
retf
or
jb
popa
es
in
dec
jge
sub
mov
and
dec
and
pushf
mov
pop
ret
scas
call
fisttp
outs
test
push
sbb
mov
aaa
mov
or
pop
test
stos
xlat
out
pop
sub
sbb
pop
test
(bad)
mov
push
push
test
sti
or
mov
movs
retf
pop
shl
push
ficom
scas
jmp
xchg
imul
or
addr16
ds
push
push
pop
cdq
cmps
sti
pop
movs
pop
icebp
fdivr
dec
fcmovne
sbb
xor
jmp
(bad)
cli
or
inc
add
movs
push
in
aad
popa
(bad)
pop
sub
test
(bad)
aam
pop
sub
sbb
xor
retf
ja
xlat
outs
test
xor
jmp
cmp
out
retf
je
xchg
mov
push
loop
scas
inc
mov
jle
or
and
fistp
fdivp
or
xchg
sub
or
arpl
dec
idiv
adc
cmp
mov
push
test
call
push
test
or
out
xor
cmp
add
cmp
scas
mov
mov
sub
test
xchg
dec
scas
nop
(bad)
pop
lods
adc
je
sub
add
jmp
push
add
jo
xor
adc
sub
jae
loope
je
repz
mov
sbb
outs
add
inc
sbb
data16
jmp
add
into
push
shl
jl
jg
push
daa
js
adc
mov
sub
lods
stc
mov
xchg
add
adc
repz
mov
out
jnp
pop
scas
add
dec
cdq
pop
push
ret
mov
push
jmp
pop
psubsb
dec
ds
gs
fs
pop
mov
adc
jne
popf
movs
and
sub
lahf
push
push
stos
jne
(bad)
jmp
cmp
xlat
in
jecxz
repnz
push
jns
sub
mov
adc
scas
mov
aas
rcr
dec
enter
sbb
inc
outs
ror
adc
ret
mov
push
sbb
sbb
test
cmp
addr16
call
fimul
stos
shr
mov
sbb
mov
sbb
(bad)
lods
imul
mov
ins
adc
aaa
scas
pop
aas
push
cmp
adc
sar
(bad)
hlt
in
addr16
test
call
xchg
shr
add
mov
dec
xchg
(bad)
pop
jl
jnp
sti
loopne
and
inc
rol
dec
pusha
rcl
mov
packssdw
aad
xor
adc
out
pop
push
leave
or
cmp
in
repz
(bad)
cmp
jecxz
cld
test
jp
fbld
xchg
mov
or
mov
ror
js
sti
jne
cdq
add
inc
gs
xor
into
cld
ror
clc
jb
pop
push
mov
fwait
or
xor
mov
sbb
jg
adc
pop
fwait
popa
pop
dec
sbb
gs
ret
es
mov
pushf
xchg
in
jmp
(bad)
fmulp
cmp
cmp
dec
or
hlt
and
inc
adc
repz
adc
add
pop
fidivr
sbb
add
push
mov
stos
pushf
inc
mov
or
movs
or
cmps
xor
cs
pop
push
stos
jno
mov
aad
test
mov
push
in
movs
sub
fst
ja
inc
(bad)
jg
jb
adc
loope
pop
sbb
retf
ret
cs
leave
(bad)
je
cmp
js
dec
cmp
dec
ja
shl
mov
mov
mov
in
mov
pusha
stos
pushf
outs
dec
add
pop
popf
or
scas
mov
push
ret
push
repnz
dec
retf
adc
ficomp
xlat
push
mov
cmc
sbb
mov
into
rcr
mov
pop
mov
sbb
(bad)
dec
lea
xchg
iret
sub
adc
jg
xchg
sub
add
ja
sub
add
inc
test
popa
int
xchg
mov
push
daa
cmps
fsubr
fcmovb
jae
push
inc
jge
test
or
mov
and
push
pushf
enter
cli
outs
mov
jg
push
popf
mov
cwde
retf
xor
mov
outs
fisttp
fimul
lea
jmp
pop
jnp
mov
xchg
dec
dec
(bad)
sahf
jo
xlat
shr
out
cmp
mov
xchg
pop
mov
cmps
daa
xor
add
push
cmp
mov
out
adc
retf
pop
mov
jg
arpl
cwde
movs
inc
std
mov
leave
cmp
repnz
push
data16
jbe
xor
imul
ret
in
sti
rol
jecxz
cmp
push
ja
push
std
cmp
in
js
cmp
mov
ficom
sahf
inc
or
pop
mov
pop
mov
sub
add
fdiv
test
imul
lods
sub
xchg
and
mov
jmp
pop
mov
rcr
inc
inc
repz
ins
ja
(bad)
popf
push
data16
jp
mov
(bad)
xchg
(bad)
mov
fisttp
push
mov
ja
loope
rol
int3
scas
sbb
(bad)
and
fisub
pop
mov
jns
cmps
xor
pop
mov
into
popf
jmp
cmp
fnstcw
xchg
movs
pop
mov
fistp
daa
push
inc
ror
test
imul
push
sbb
in
inc
xor
mov
call
or
ror
lahf
mov
mov
sbb
xchg
or
popa
fadd
test
div
push
and
cmp
mov
pushf
call
(bad)
add
jno
sub
push
xor
cdq
xchg
pop
add
in
inc
aad
test
xor
lods
adc
inc
ins
popa
scas
jecxz
cli
inc
mov
lahf
and
sub
pop
jecxz
mov
loop
aaa
(bad)
call
imul
pop
mov
iret
repz
cmp
pusha
and
jmp
call
jb
int
mov
cmp
push
sub
cli
sahf
dec
scas
dec
mov
out
ss
in
sub
push
mov
imul
ret
loopne
mov
sub
mov
pop
mov
(bad)
mov
adc
xlat
adc
mov
xchg
or
mov
pop
fiadd
adc
ins
sub
ret
adc
or
jo
push
dec
jae
es
ins
loopne
ror
xor
fdivr
test
pop
inc
sbb
pop
test
cmp
out
call
mul
ja
(bad)
out
rol
mov
jg
(bad)
inc
fidivr
add
retf
jb
stos
arpl
shl
outs
xor
cmp
lods
imul
adc
cmps
dec
ja
sbb
pop
mov
push
mov
and
sub
test
mov
push
into
pop
es
dec
hlt
gs
jp
xchg
xchg
fs
dec
mov
je
add
fisubr
scas
hlt
adc
push
xor
inc
xchg
fs
xlat
push
inc
push
pop
or
jmp
and
jns
and
es
(bad)
or
stos
mov
push
imul
popf
shl
mov
std
lds
sbb
jl
nop
pop
mov
inc
push
or
mov
cmp
xlat
out
(bad)
pusha
ret
sahf
lea
sti
mov
ds
in
ficom
hlt
dec
mov
fnstenv
enter
sbb
sub
and
mov
cmp
sbb
repz
es
sbb
lock
jmp
cmp
and
xor
xor
inc
xor
mov
mov
jle
repz
repnz
stc
fisub
inc
(bad)
xor
dec
adc
mov
push
add
cmc
out
xor
test
push
sbb
push
dec
jns
arpl
jbe
xor
ss
retf
das
cmps
out
dec
push
ret
sub
xor
cmps
xor
push
sar
(bad)
std
fist
in
xchg
adc
pop
and
dec
xchg
and
cmps
sbb
ror
push
add
pop
sub
adc
pushf
cmps
sbb
sub
jmp
stos
in
cmps
dec
outs
(bad)
pop
out
shl
mov
dec
and
call
jecxz
jmp
lds
mov
lods
scas
adc
iret
pusha
mov
popf
fs
sub
pop
out
repz
pop
aaa
cmps
fsub
shl
call
icebp
sub
mov
(bad)
jl
dec
ins
iret
add
inc
sub
loopne
inc
aaa
pop
jp
push
xchg
and
sbb
repnz
popf
sbb
icebp
adc
jmp
hlt
repnz
sub
jo
sub
sbb
scas
push
scas
jae
jbe
loope
das
lock
popf
popf
inc
xchg
adc
loope
in
bound
iret
icebp
test
mov
sub
add
adc
std
cmp
pop
inc
rcr
and
adc
xor
xchg
xor
das
mov
mov
adc
loope
in
fadd
dec
push
mov
inc
fild
hlt
mov
inc
push
jbe
test
mov
lods
xchg
adc
cmp
dec
mov
sti
out
pop
lods
(bad)
call
sar
mov
pop
jmp
mov
ins
mov
cmp
pushf
lock
xchg
xor
movs
pop
sub
sbb
and
lea
(bad)
mov
mov
mov
xor
jmp
cmp
ss
bound
sub
and
popf
or
sub
and
inc
nop
dec
dec
pop
ss
xchg
dec
xchg
or
lahf
adc
cwde
cmps
loopne
xchg
jo
mov
adc
jae
imul
inc
cmp
out
xchg
daa
punpcklwd
add
ins
xchg
dec
xor
std
int
cmp
mov
push
hlt
leave
pusha
push
xchg
pop
sbb
dec
ja
dec
cli
loope
out
pop
or
out
ins
jo
fld
adc
dec
sub
repnz
mov
inc
jmp
inc
pop
fwait
repz
and
cld
mov
push
(bad)
jl
and
(bad)
loop
or
mov
stc
(bad)
fs
mov
aas
out
arpl
cmp
in
(bad)
fbld
(bad)
jecxz
popa
sbb
inc
cs
ret
adc
sbb
leave
arpl
sub
loopne
jne
adc
icebp
sbb
add
pop
je
fld
cmps
push
mov
cmp
stos
rol
sbb
out
je
xchg
jne
mov
lods
les
sub
(bad)
(bad)
fucomp
imul
int3
mov
bound
xchg
push
or
data16
add
ss
mov
adc
push
(bad)
aas
outs
lods
cmps
dec
and
movs
fidiv
loopne
sub
movs
cmp
fsubr
add
cli
mov
cmp
test
adc
into
sbb
jmp
sub
sbb
mov
sbb
cwde
neg
sbb
cmps
xor
pop
cdq
mov
sbb
push
inc
and
adc
push
fild
(bad)
jnp
mov
xchg
xchg
sbb
push
call
data16
mov
pusha
inc
and
jbe
inc
cmp
test
adc
add
adc
xchg
pop
pop
test
push
dec
out
imul
fs
pop
lods
fnstenv
inc
lods
xchg
or
mov
inc
mov
cld
enter
sub
enter
pop
aas
test
arpl
xor
out
or
das
add
and
mov
push
cmp
clc
add
out
ret
test
mov
sub
mov
in
cmp
mov
add
clc
ja
xlat
add
sbb
ins
sbb
iret
mov
jns
pop
dec
pop
retf
fwait
scas
add
sbb
mov
mov
lea
mov
not
in
fld
sahf
cs
out
mov
std
lea
retf
jecxz
jle
pushf
(bad)
lods
shr
daa
lods
push
stos
cli
mov
add
les
mov
sahf
and
movs
hlt
pop
inc
and
push
sbb
cld
mov
mov
pusha
out
lea
push
push
and
add
aas
cwde
sbb
mov
das
out
jne
inc
bound
sub
sbb
push
and
xor
xor
data16
ret
popa
pop
pop
mov
or
int
dec
mov
dec
adc
push
stos
jg
ret
hlt
outs
push
(bad)
in
aaa
mov
test
adc
dec
clc
(bad)
out
stc
jne
jmp
adc
stc
jge
es
mov
sti
arpl
popa
pop
in
out
and
mov
movs
mov
push
(bad)
xlat
stos
cmp
dec
ins
jmp
and
rcl
jle
ds
xchg
retf
jmp
jne
jae
jl
ret
inc
mov
and
mov
mov
dec
pop
xchg
data16
scas
dec
mov
adc
and
pop
pop
jl
imul
inc
inc
pop
loopne
(bad)
cmps
mov
mov
pushf
push
mov
mov
imul
push
mov
cmps
mov
push
shl
and
mov
icebp
inc
cld
push
dec
or
and
into
sti
es
shr
outs
jnp
dec
movs
inc
loop
adc
std
push
imul
in
push
(bad)
pop
or
fsubr
xchg
adc
jne
outs
outs
xor
ret
inc
mov
cmp
mov
inc
and
jl
mov
iret
data16
pop
pop
fbld
sar
and
ss
cmp
cmp
mov
popa
add
cmp
push
mov
inc
pop
cmps
cmp
das
jmp
(bad)
arpl
pop
aas
pop
mov
jmp
pop
jns
out
ror
(bad)
mov
xor
push
push
hlt
sub
cwde
das
hlt
loopne
xchg
cli
mov
stos
jge
lds
push
shr
mov
aam
jbe
add
mov
jnp
push
and
add
lods
fld
repnz
jnp
call
inc
and
pop
shl
cmp
outs
push
jbe
or
imul
mov
sub
lds
repnz
outs
fisttp
out
xor
pushf
and
jmp
fdivr
mov
dec
dec
add
mov
adc
in
pop
scas
mov
inc
push
dec
push
mov
scas
sub
mov
rol
dec
inc
xchg
fnstcw
int
cmp
leave
outs
mov
and
ror
mov
inc
add
das
retf
outs
mov
xor
add
mov
in
imul
and
call
in
call
xor
adc
(bad)
cwde
and
sub
mov
push
jp
inc
pusha
call
sub
sub
and
adc
(bad)
add
in
out
sub
scas
xchg
fnstenv
hlt
stc
sti
mov
cmps
mov
aaa
stos
sub
sar
mov
fsub
jne
retf
adc
cmp
(bad)
mov
or
clc
or
or
loopne
das
cmp
mov
sub
sub
dec
xor
les
jbe
inc
idiv
(bad)
cdq
push
fwait
cmp
lods
mov
inc
cmp
mov
or
rol
xlat
sbb
mov
inc
mov
sbb
mov
nop
sbb
pop
cmp
mov
mov
dec
aas
add
inc
jle
imul
adc
cmp
cmp
xor
ins
std
jbe
mov
shl
jle
adc
fs
mov
shr
in
adc
xlat
imul
(bad)
jbe
dec
ficom
cmp
add
mov
xor
cwde
(bad)
jnp
std
fs
jl
in
push
daa
ins
mov
hlt
mov
or
jnp
sub
aaa
data16
mov
cmp
data16
dec
rol
adc
imul
pop
outs
call
retf
jle
sbb
and
scas
push
daa
retw
jb
cmp
daa
xor
inc
xlat
in
mov
sbb
imul
(bad)
pushf
dec
mov
and
punpckldq
call
aaa
adc
sub
outs
push
pop
or
in
cmps
lock
or
(bad)
or
pushf
(bad)
in
rol
xchg
xchg
ror
movs
push
adc
pop
xor
pusha
fnstsw
cld
adc
dec
out
test
xchg
pushf
mov
xor
hlt
out
pop
fidivr
hlt
xchg
jmp
lods
ret
jecxz
adc
aad
xchg
std
mov
mov
ror
pop
sbb
shl
mov
enter
lds
jmp
inc
sbb
xor
xchg
jae
cmp
(bad)
xor
lahf
sar
or
dec
cs
sahf
mov
cmp
cmp
and
ins
push
adc
popa
(bad)
pop
ret
into
fisubr
int3
sbb
xchg
push
dec
or
sub
(bad)
jmp
cdq
pop
neg
adc
loopne
push
mov
enter
mov
add
and
xor
dec
(bad)
fdiv
jecxz
sbb
mov
sub
push
and
mov
sub
xor
mov
rdpmc
retf
xchg
push
mov
je
int3
dec
push
das
and
adc
add
repnz
aam
mov
sub
sti
sbb
arpl
es
sbb
mov
clc
in
in
sub
stc
(bad)
into
or
popa
aam
sub
leave
push
mov
xchg
xchg
push
sbb
stc
mov
mov
out
dec
out
push
(bad)
iret
jnp
(bad)
xchg
mov
adc
adc
loop
xor
mov
fcomp
xchg
and
push
or
pop
sbb
out
ror
xchg
das
gs
je
sbb
(bad)
mov
ins
mov
jecxz
ficomp
lods
inc
outs
xor
out
out
mov
jmp
sbb
pop
add
stos
cdq
outs
mov
stos
xchg
ja
xor
sub
scas
push
in
retf
cmp
fnstenv
in
add
xchg
sahf
mov
mov
test
test
rcr
xor
dec
lods
cmp
or
sbb
call
(bad)
fxch
jne
not
xor
aad
inc
sbb
dec
fsub
mov
mov
arpl
jg
cmp
leave
inc
imul
xchg
fs
rol
mov
mov
addr16
js
(bad)
or
inc
jecxz
fst
or
and
test
dec
inc
or
pop
mov
popa
adc
dec
mov
aaa
or
mov
bound
dec
inc
leave
and
ret
mov
inc
in
inc
adc
adc
jns
push
ret
aaa
sub
sti
clc
inc
cmp
inc
and
leave
sahf
sub
mov
add
repz
rcl
sub
or
ror
sub
int3
mov
jne
test
nop
dec
sbb
jne
mov
ins
mov
cwde
(bad)
pop
hlt
ins
sbb
fild
test
call
pop
adc
cwde
jecxz
(bad)
mov
cmp
jmp
jae
dec
movs
(bad)
xor
mov
out
int
inc
push
jo
addr16
push
cmps
sbb
fisub
cld
test
ins
imul
test
rcl
rol
ins
rol
cmps
inc
dec
outs
or
adc
rol
xor
es
jle
shl
inc
push
sbb
in
xor
adc
or
ja
inc
mov
neg
add
xchg
push
mov
and
mov
push
sbb
xchg
jmp
cli
mov
std
leave
pop
jmp
sbb
sub
sub
stos
lea
ss
test
mov
aas
mov
jg
rcl
daa
mov
dec
inc
mov
out
dec
repnz
call
mov
test
push
mov
mov
(bad)
arpl
jp
jmp
rcl
mov
les
call
or
stc
mov
enter
hlt
mov
int
mov
(bad)
jbe
push
jg
scas
lock
mov
mov
rol
cmps
lock
dec
push
pop
sahf
shl
fidivr
lods
and
dec
test
sbb
sahf
push
mov
pop
mov
inc
loopne
test
pop
mov
cmc
pop
xchg
das
push
mov
aaa
mov
adc
ror
and
retf
jp
arpl
mov
fcmovnu
cmp
jno
in
adc
xchg
dec
mov
fist
xchg
push
mov
jmp
les
std
out
mov
ss
pop
out
cmp
inc
cmp
xor
adc
or
push
or
mov
neg
jns
das
push
out
fisubr
(bad)
mov
pop
jo
lahf
loopne
int3
int
dec
fld
fdivr
les
xor
jg
cmp
fcomp
in
out
cmps
mov
jl
ret
cmps
sbb
dec
ret
fwait
push
or
or
hlt
xor
ret
stos
aam
sub
aad
and
loope
jge
fldenv
lods
add
jl
aam
ror
and
jmp
rcl
ja
mov
dec
jmp
leave
lea
xchg
imul
mov
dec
popf
mov
adc
or
outs
cmps
aam
rcl
push
add
mov
sub
sar
retf
xlat
xchg
xor
push
dec
jno
jbe
in
mov
daa
sbb
inc
jns
daa
and
lea
sbb
repnz
fiadd
add
pop
sub
push
pusha
aas
test
jg
sahf
out
pop
mov
inc
lea
mov
sub
pop
inc
cmc
jle
xchg
jmp
test
mov
xor
std
arpl
adc
mov
or
popa
or
sub
jns
mov
mov
idiv
loop
jbe
fldenv
pop
js
mov
dec
jno
xchg
in
mov
movs
xor
mov
sub
sti
or
ins
adc
mov
jmp
adc
mov
cwde
lods
fwait
loopne
ss
cmp
fwait
sahf
mov
icebp
add
inc
mov
mov
inc
pop
mov
inc
stc
cmps
repz
je
mov
mov
shl
xor
loop
leave
xlat
loop
(bad)
outs
xchg
jmp
dec
(bad)
or
or
(bad)
fcmovu
xor
push
sbb
addr16
leave
fidivr
lods
int3
xchg
sbb
dec
stos
sahf
push
aaa
xor
adc
fst
fmul
test
hlt
or
xchg
fistp
push
mov
cmp
sbb
dec
sahf
xchg
push
mov
and
imul
mov
int3
sbb
jmp
imul
mov
xor
dec
mov
ret
addr16
xchg
inc
push
sbb
mov
sub
ss
or
cmc
sbb
xchg
xchg
add
test
mov
ficom
mov
push
or
xchg
not
xchg
inc
push
test
in
dec
xchg
jns
ins
xchg
push
pop
fisubr
xchg
and
retf
jnp
inc
test
(bad)
xchg
sub
cmps
pop
es
into
and
xchg
xor
sub
sbb
aad
cmps
mov
fs
xchg
push
jmp
xchg
and
stos
call
lds
scas
addr16
ins
shl
movlps
or
dec
test
pop
ret
cmp
ins
sub
data16
jle
adc
popa
ins
push
sub
mov
xchg
scas
or
mov
retf
inc
pop
jmp
into
imul
js
mov
cdq
mov
movs
nop
mov
adc
dec
into
jl
adc
hlt
loop
cmp
test
push
outs
and
sbb
bound
pop
call
mov
imul
sub
dec
xchg
jmp
and
push
popf
pop
test
push
in
jle
repnz
addr16
imul
push
cmp
mov
xor
xlat
xchg
pop
retf
jmp
pop
cmp
(bad)
mov
shr
cmp
imul
xchg
cdq
daa
movs
js
inc
sub
pop
mov
add
fnstsw
mov
fidiv
jg
clc
not
(bad)
fmul
shl
xor
xchg
or
xor
leave
out
fs
shr
sbb
add
mov
and
sti
inc
and
test
or
outs
sbb
ins
pop
jg
(bad)
cmp
enter
sbb
cmc
nop
in
out
or
push
int
ja
add
enter
xor
sbb
mov
icebp
(bad)
push
movs
int
in
cmp
pop
cmp
out
mov
test
call
sti
mov
imul
loop
pusha
mov
imul
sbb
rol
fstp
es
push
dec
jns
movs
scas
cmps
(bad)
neg
into
mov
clc
and
mov
fistp
(bad)
daa
icebp
mov
cwde
mov
repnz
fild
adc
sbb
inc
xlat
lea
jmp
push
xchg
nop
pop
mov
sbb
jnp
inc
enter
daa
inc
sbb
sub
or
or
je
dec
mov
ret
or
test
push
and
push
arpl
shl
inc
xor
(bad)
jmp
hlt
push
hlt
inc
test
ss
scas
add
daa
mov
jmp
out
mov
ss
sbb
mov
nop
jb
popa
pop
xor
add
push
bound
mov
mov
in
push
scas
sub
mov
pop
xor
in
sbb
mov
mov
jb
lods
and
or
fcmove
addr16
test
cmp
jno
sbb
ror
cmp
call
inc
push
nop
loopne
sti
jno
leave
ss
add
sbb
mov
fldcw
push
inc
push
mov
adc
scas
test
inc
cdq
fstp
(bad)
aad
sbb
jo
icebp
imul
ja
xchg
test
lds
push
ret
inc
jne
stos
in
into
dec
push
pusha
neg
jae
leave
jne
fistp
mov
push
and
push
leave
js
pop
shl
mov
lds
mov
jno
movs
hlt
mov
daa
test
sbb
ret
icebp
jae
je
arpl
stos
rcr
leave
mul
and
mov
ja
bound
jno
inc
add
(bad)
ja
(bad)
mov
mov
sub
aam
gs
mov
inc
pop
mov
jl
and
pop
dec
inc
test
push
mov
popa
cmp
inc
movs
into
jae
loope
out
js
xchg
in
inc
jmp
pop
sbb
scas
mov
pop
pop
loope
out
dec
push
rep
push
or
cmp
or
and
add
arpl
lds
or
mov
daa
inc
push
test
in
repnz
mov
mov
imul
dec
stos
or
mul
push
int
lods
push
mov
test
call
lahf
fiadd
(bad)
int
xor
test
xchg
iret
gs
ror
movs
sar
sahf
js
cmp
(bad)
pop
add
test
ret
mov
sbb
retf
imul
repnz
jb
fdivr
arpl
mov
sahf
lock
jp
js
jge
aas
fdivr
xor
sti
push
xor
mov
lock
jecxz
dec
jbe
test
popf
mov
xor
pop
jle
test
sbb
mov
fcomp
or
inc
ins
xchg
aad
int
sub
test
repz
pop
(bad)
mov
das
or
pop
dec
mov
sbb
shr
into
adc
popf
movs
mov
pop
push
ja
jl
xchg
movs
jecxz
out
jecxz
dec
mov
inc
gs
sbb
inc
or
retf
mov
mov
fwait
fwait
sbb
add
dec
(bad)
push
sub
xor
add
test
mov
imul
push
lods
fadd
aad
inc
push
addr16
mov
daa
das
xchg
lods
(bad)
fst
popa
xchg
xchg
pop
mov
mov
jge
das
and
scas
out
mov
mov
jnp
xchg
int3
xchg
jae
fwait
stos
iret
mov
(bad)
jmp
pop
xchg
adc
cmp
dec
pop
mov
cmp
out
in
pop
dec
scas
push
jae
add
scas
test
repz
jne
icebp
js
inc
or
in
inc
cmp
(bad)
xor
iret
jg
scas
pop
mov
mov
add
jo
xchg
jge
push
mov
mov
(bad)
push
xchg
pushf
dec
scas
in
dec
inc
aam
ss
cs
cmp
mov
test
sbb
mov
dec
in
or
aam
scas
outs
mov
push
iret
(bad)
fucomi
xchg
out
aas
stos
mov
xor
ss
and
stc
mov
or
shl
popa
jae
mov
xor
jl
adc
push
xor
sub
inc
dec
js
pop
repz
hlt
xor
add
ins
addr16
mov
ds
loope
lods
dec
xchg
xlat
sub
mov
pop
jnp
test
popf
ins
cmps
mov
xchg
add
lods
cmp
fnstenv
arpl
not
stos
pop
mov
out
mov
lea
pop
adc
div
ja
fimul
cmp
jg
jp
push
push
inc
loop
movs
in
xor
test
cmc
pop
ret
jecxz
xchg
ret
push
mov
sbb
movs
into
dec
sub
std
shr
nop
dec
sub
retf
pushf
pop
imul
lea
(bad)
(bad)
gs
in
je
mov
or
mov
data16
mov
cvtdq2ps
dec
mov
jo
xchg
inc
fs
in
popa
cs
inc
add
mov
mov
clc
(bad)
das
retf
rcr
in
hlt
(bad)
xor
mov
imul
movs
jbe
fistp
sub
retf
sub
mov
dec
into
or
xchg
inc
(bad)
cdq
loop
push
ss
movs
clc
inc
dec
mov
mov
repnz
je
adc
fcom
call
aaa
cdq
daa
dec
scas
lock
fmulp
nop
mov
xor
or
outs
mov
jne
push
in
add
cdq
lea
mov
jmp
sbb
xor
jmp
out
add
daa
xor
lea
loope
movs
stc
pushf
jne
mov
and
sbb
retf
mov
push
arpl
push
adc
adc
xchg
fdivr
rep
je
xchg
pop
pop
add
or
inc
test
das
dec
add
loopne
fidivr
rcr
mov
and
lods
xor
add
ins
lods
mov
push
call
cld
push
repnz
test
or
loope
sbb
and
sahf
call
fild
into
rcl
or
aad
inc
pop
jge
ret
not
test
adc
pushf
add
push
loope
(bad)
jecxz
jno
xor
outs
leave
fdivr
and
sbb
sahf
arpl
cmp
jne
scas
inc
stos
fwait
add
gs
aas
cld
jne
test
xchg
push
jmp
jl
mov
push
ja
jmp
mov
mov
jp
pop
ins
push
dec
inc
dec
call
push
(bad)
mov
iret
xor
xor
test
jnp
and
cmp
popf
mov
stos
cld
inc
(bad)
or
dec
and
jae
cmps
push
mov
std
add
js
inc
xchg
stc
mov
fsub
inc
std
push
les
inc
int3
xchg
sub
loope
sbb
lods
movs
mov
dec
pop
sub
ret
jnp
fst
ins
sub
xrelease
sti
inc
pushf
aad
inc
pushf
sbb
out
mov
jmp
pusha
sub
dec
mov
mov
fadd
pop
jno
mov
movs
ins
in
dec
mov
pop
js
pop
sub
and
fdivp
cmp
mov
clc
test
adc
in
nop
push
or
sahf
ret
or
mov
mov
xchg
push
inc
mov
out
sar
pushf
sub
or
test
out
push
inc
in
and
les
sub
mov
(bad)
std
dec
push
pop
jnp
push
movs
jbe
inc
push
cmp
mov
mov
(bad)
pop
or
in
loopne
jecxz
out
pop
outs
lods
cmp
xchg
(bad)
push
jae
cmp
bswap
xchg
imul
loop
xlat
int3
push
sub
mov
cld
inc
cmp
and
out
stos
mov
fwait
test
idiv
rcl
icebp
dec
cmp
pusha
test
dec
push
retf
adc
add
jg
and
or
jge
stos
bound
aaa
inc
iret
cmp
stc
pop
lds
fisttp
in
rcr
ror
retw
inc
xchg
sub
sub
mov
loop
movs
rol
outs
pop
inc
(bad)
xchg
gs
jno
mov
out
dec
pop
stc
sbb
popa
test
jbe
adc
nop
cmp
imul
fistp
jmp
mov
(bad)
hlt
lea
inc
or
test
icebp
movs
in
or
in
cmp
inc
addr16
push
addr16
retf
xchg
popf
jae
add
mov
cmp
lds
das
outs
ins
sbb
(bad)
push
rcl
shr
imul
and
or
sub
test
push
and
retf
aaa
jb
jmp
jbe
or
test
pop
data16
retf
out
in
jbe
sti
add
pop
xchg
and
xchg
jbe
arpl
fdivr
or
ror
(bad)
sar
jmp
adc
adc
lods
xor
pop
dec
sbb
add
push
loope
mov
xchg
popf
sbb
push
mov
enter
fist
stc
mov
mov
inc
gs
inc
stc
mov
ret
push
and
push
jle
xchg
or
sub
and
bsr
pop
add
cmp
(bad)
call
push
mov
leave
mov
aam
inc
inc
mov
scas
hlt
push
xlat
fild
or
movs
cmc
aam
xchg
inc
adc
xor
pushaw
lds
mov
call
cmc
shl
sti
sub
inc
imul
inc
sbb
mov
cdq
rcr
aad
mov
fwait
sbb
addr16
mov
sbb
stos
sbb
stc
xchg
sbb
sub
(bad)
aad
dec
or
jg
fstp
inc
xchg
ror
jo
jl
xor
adc
xor
stos
pop
mov
inc
ret
lods
sar
dec
mov
out
cmps
fcomip
mov
push
push
adc
jae
jg
repz
pop
ja
push
mov
(bad)
cld
shl
bound
pop
scas
add
inc
sar
ret
ds
mov
sar
lock
lock
push
jge
jne
test
fisubr
push
mov
mov
lock
pop
(bad)
call
fwait
pusha
stos
or
in
iret
add
xchg
fidivr
rol
push
inc
ins
cmp
or
jge
pushf
pushf
imul
int3
dec
call
jo
and
mov
enter
call
and
push
xor
(bad)
ins
les
in
popf
test
imul
mov
sbb
loopne
mov
inc
xor
mov
pop
aas
bound
xchg
inc
and
imul
push
sub
fst
cmp
sbb
jnp
lods
sub
cmp
pop
push
out
pop
stc
mov
jmp
into
dec
jle
and
rcr
cmp
(bad)
fdiv
cmps
dec
xchg
popf
push
(bad)
sub
into
popa
jp
cld
mov
hlt
rcr
inc
add
and
adc
or
aam
lock
movs
or
rcl
push
sti
pop
or
out
mov
cmp
aam
popf
and
mov
fidiv
push
popa
or
add
and
fiadd
mov
add
or
stc
sahf
and
out
(bad)
xchg
dec
(bad)
mov
inc
test
lea
dec
sti
int3
es
jns
outs
add
pop
mov
pushf
aas
cmp
cli
lahf
fcompp
xchg
mov
cs
stos
pop
cmps
mov
in
adc
add
pop
into
mov
dec
mov
sbb
pop
sar
sub
adc
scas
jg
imul
vhaddpd
adc
and
jno
xor
ds
hlt
adc
cli
hlt
cwde
test
mov
mov
mov
loopne
mov
repz
shr
fistp
mov
push
mov
outs
int
ror
cld
push
pushf
dec
js
cld
lahf
inc
mov
imul
pop
xor
addps
adc
jg
rcr
mov
mov
sub
mov
cli
test
clc
or
xchg
xchg
cmc
loopne
and
or
cmp
xchg
addr16
pusha
pushf
test
mov
pop
mov
fldln2
mov
and
pop
xchg
xorps
add
nop
inc
sub
in
mov
dec
sbb
sub
push
data16
les
or
xchg
int3
inc
icebp
mov
stc
jns
xor
std
and
xlat
cmp
jb
xor
cmp
mov
iret
lea
mov
out
inc
ret
xor
mov
dec
out
xor
jae
shr
add
test
sbb
aad
jo
xchg
daa
pop
out
dec
sbb
mov
sbb
repz
aaa
movs
or
arpl
test
loope
push
rcr
sbb
push
cmp
js
mov
sbb
dec
outs
add
gs
pushf
mov
mov
jmp
or
mov
push
jle
or
in
sub
mov
stc
inc
in
inc
stos
dec
fdiv
sub
ss
xchg
mov
push
outs
jne
xor
rcr
jp
lahf
jge
push
data16
fstp
ins
popa
mov
add
or
lock
dec
lods
int3
lds
jmp
loopne
mov
icebp
xchg
sti
lods
stos
mov
popf
sub
inc
mov
inc
mov
mov
cmp
sub
aam
mov
jmp
leave
mov
pop
mov
fcom
mov
aam
jp
cld
pop
push
mov
dec
and
lahf
add
dec
std
lds
lds
mov
push
push
idiv
rcr
inc
repz
mov
and
retf
jl
stc
add
sbb
push
test
into
add
and
cmps
inc
push
sub
and
icebp
std
sub
(bad)
cmps
test
sub
sbb
rcr
push
sbb
mov
xchg
and
sub
stos
mov
jmp
mov
in
data16
cdq
rcl
push
test
or
jmp
fnstsw
jno
nop
adc
add
cmp
push
push
or
inc
ss
mov
adc
pushf
pop
movs
xchg
and
xchg
cld
in
jb
push
ret
(bad)
sbb
add
xor
dec
mov
daa
jno
mov
(bad)
mov
mov
mov
xchg
jp
jno
pusha
jbe
xor
mov
sbb
jmp
xchg
xor
and
sub
adc
cmp
je
mov
mov
and
adc
jg
ds
jge
adc
mov
cmp
div
movs
popa
dec
jae
and
cmp
outs
inc
in
add
inc
cld
call
cmp
or
ins
sub
call
out
(bad)
sbb
inc
sbb
add
mov
adc
xchg
loopne
leave
data16
cwde
sub
and
sbb
hlt
pop
idiv
in
dec
mov
fmul
aas
and
dec
mov
rol
jns
lds
test
sar
call
ret
retf
cmps
push
(bad)
in
mov
int3
into
xor
pop
mov
fld
jne
fstp
jae
push
aaa
imul
pop
leave
and
sub
scas
mov
push
in
jmp
xor
jecxz
(bad)
bound
mov
lods
sub
dec
rcr
push
adc
push
or
push
and
fdivp
popa
sub
retf
pusha
push
fsubr
push
loop
mov
adc
push
xchg
syscall
cmc
imul
adc
mov
arpl
jns
fwait
jmp
jbe
adc
mov
or
cvttps2pi
pop
inc
out
scas
out
add
inc
pop
aam
dec
xor
or
sbb
xor
sub
jle
in
mov
ins
cmc
out
scas
mov
das
pop
or
mov
xor
mov
jecxz
xor
mov
pop
in
gs
pop
pop
enter
cld
push
jle
push
mov
xor
test
push
mov
xor
jmp
jge
shl
daa
dec
xchg
push
sbb
add
fstp
cmp
ret
iret
jmp
push
xchg
mov
pop
dec
loop
xor
movs
dec
dec
test
mov
push
cmps
outs
jecxz
adc
sti
cmps
dec
mov
xchg
shl
push
and
iret
inc
sub
imul
rol
sti
popa
cmp
inc
lock
ret
push
test
mov
les
jbe
movs
sbb
enter
lds
cld
ja
sbb
jns
(bad)
cmp
call
sbb
pop
pop
repnz
push
dec
pop
xor
fiadd
sbb
cmp
fstp
push
mov
cmp
sbb
jnp
jo
mov
cwde
outs
pusha
inc
sbb
xchg
cmps
hlt
les
xor
aam
je
les
cmp
mov
out
pop
(bad)
cld
xchg
loop
xchg
pushf
scas
or
push
fwait
push
outs
mov
and
es
mov
pop
stos
push
xor
mov
add
stos
out
jne
out
xor
aad
sbb
jmp
clc
mov
xchg
push
test
jmp
int
push
mov
xor
pop
inc
pop
stc
mul
dec
loopne
das
enter
xor
mov
dec
inc
push
adc
shl
mov
pop
neg
mov
mov
outs
cmp
scas
mov
pusha
test
pop
mov
imul
frstor
pop
push
aaa
or
push
xor
xchg
or
movs
jmp
pop
xchg
enter
fsubr
test
lock
add
mov
(bad)
ror
mov
xchg
add
add
fimul
mov
and
imul
push
aam
push
push
les
fcom
shl
clc
and
ret
dec
(bad)
ins
outs
push
es
add
push
push
jge
addr16
stos
xchg
mov
xor
mov
test
or
push
arpl
cwde
sbb
(bad)
and
ficom
dec
(bad)
sbb
cmps
mov
jb
mov
pushf
sahf
mov
add
arpl
aaa
and
xchg
les
or
and
in
popf
or
rcl
push
push
in
arpl
popf
pop
add
fcomp
push
iret
xchg
sbb
mov
fistp
xchg
(bad)
and
popf
mov
aad
xchg
int
cmp
lods
push
dec
xchg
mov
cwde
(bad)
movs
aaa
push
leave
mov
clc
sub
sbb
add
sbb
jae
inc
hlt
mov
push
push
ret
pop
inc
xor
push
cld
and
sbb
lods
int3
push
sbb
cmp
cmp
jl
xchg
mov
arpl
sub
cs
sub
pop
or
inc
retfw
mov
into
mov
xchg
cmp
stos
push
or
in
add
mov
push
adc
push
mov
retf
mov
mov
inc
movs
cmp
xchg
cmp
sub
or
shl
(bad)
into
adc
fs
aaa
sbb
out
aad
jno
mov
mov
adc
ins
mov
jne
or
or
addr16
test
pop
push
push
int3
jp
xchg
jmp
xchg
adc
ror
xor
adc
xchg
rcl
sub
push
cld
mov
neg
lea
pop
cmps
(bad)
in
mov
frstpm(287
in
lock
loope
inc
cwde
sub
mov
xchg
or
cmc
xchg
sbb
std
(bad)
in
add
add
mov
cli
xor
jge
stos
fmul
in
push
and
int3
js
inc
jnp
scas
mov
dec
sti
gs
jge
push
retf
call
mov
mov
jle
idiv
xchg
xor
test
sbb
arpl
call
inc
sbb
cmc
arpl
dec
jmp
lea
jecxz
adc
add
pop
sbb
xchg
sbb
(bad)
pop
dec
mov
rcr
repnz
push
ins
xchg
adc
or
xchg
add
xchg
and
repz
mov
xlat
stos
jnp
movs
(bad)
push
test
push
mov
adc
fisttp
ret
call
call
mov
sub
add
jp
in
lds
mov
addr16
shr
dec
iret
out
fild
in
call
mov
leave
mov
sub
sti
xchg
addr16
pop
push
sahf
test
rcl
sub
shr
push
movs
mov
xchg
call
cmc
scas
jp
or
or
or
dec
add
pushf
in
inc
jmp
ret
adc
adc
out
inc
dec
shl
mov
outs
xchg
xchg
cli
adc
push
(bad)
adc
(bad)
jmp
lods
sub
mov
and
inc
iret
inc
shl
jmp
and
in
pop
push
pop
mov
push
jns
cmc
leave
add
cmps
lea
loop
mov
push
call
sbb
ins
xchg
call
sti
shl
out
and
loopne
cmp
loop
xor
or
dec
pop
lock
lds
mul
aas
mov
call
xchg
jbe
push
cmp
push
xor
int
lds
aaa
pop
push
daa
fdivr
pop
dec
xor
sbb
and
mov
movlps
xor
ss
in
jb
sub
stos
mov
push
push
sub
mov
dec
jno
rcl
sar
loopne
dec
(bad)
push
test
cmp
jmp
cli
xchg
rol
xor
sub
nop
movs
cmps
inc
add
imul
cmc
mov
push
jp
push
adc
scas
mov
pop
pop
mov
pop
push
add
or
div
adc
cwde
inc
out
shl
lahf
retf
aas
leave
push
sub
jecxz
cmp
aam
dec
and
lods
(bad)
mov
xchg
int
xchg
test
mov
sti
out
scas
mov
lock
pushf
inc
sbb
cwde
push
loope
dec
fadd
mov
and
cmps
push
and
cmc
xchg
call
inc
jns
add
(bad)
mov
cwde
lea
fwait
bnd
in
adc
clc
call
cs
pushf
inc
adc
aas
jbe
imul
shl
outs
into
push
in
sub
inc
dec
lods
sbb
push
xor
sar
fdivr
inc
inc
fcmove
xor
jg
ret
icebp
outs
ficomp
pop
mov
or
fld
ja
cmc
int
inc
test
sar
push
aad
push
pop
mov
test
jl
shl
push
icebp
bswap
ret
mov
sub
sub
sbb
imul
xchg
aas
fsub
xchg
xor
or
mov
gs
pop
pop
dec
or
fpatan
cmp
dec
sar
scas
mov
adc
mov
cli
lahf
pop
pusha
inc
inc
inc
mov
mov
adc
mov
pushf
dec
movs
retf
pusha
(bad)
cmp
jnp
mov
mov
and
add
in
cmp
sar
adc
mov
(bad)
fnstcw
loopne
mov
pop
je
jbe
sub
mov
cld
xor
cmp
ja
test
(bad)
into
add
and
xchg
jnp
jae
pop
sbb
rcr
cdq
(bad)
ins
mov
cmp
stc
ins
stc
pop
jne
jmp
inc
(bad)
mov
pop
cmp
shr
push
ss
ret
and
sti
sar
pop
adc
test
inc
push
jae
fsubr
push
or
or
and
vfnmadd213ps
ror
sbb
push
adc
test
and
(bad)
pop
ror
fistp
dec
out
add
or
pop
mov
test
outs
add
sub
xlat
ror
dec
mov
mov
out
data16
(bad)
pushf
retf
cmp
mov
push
push
call
mov
jmp
jno
(bad)
xchg
sbb
lds
mov
repnz
into
out
inc
stos
mov
push
sbb
outs
mov
mov
retf
ss
xchg
jne
mov
test
sahf
outs
nop
mov
add
(bad)
ds
fisttp
cmp
add
stc
jns
cmp
in
fistp
(bad)
cld
movs
das
cwde
or
(bad)
sub
stos
lea
or
xchg
icebp
ss
mov
inc
jg
sbb
mov
(bad)
mov
jnp
sub
cdq
xchg
dec
cs
out
dec
lods
outs
lods
outs
pop
xchg
aas
inc
pop
popf
jg
cmp
push
clc
mov
and
add
leave
mov
leave
jmp
adc
out
jno
sti
add
fldcw
outs
pop
sub
iret
cmc
push
aaa
(bad)
test
mov
push
int
out
adc
mov
(bad)
dec
es
fbld
push
fs
mov
les
ins
nop
or
mov
sub
or
pop
dec
iret
pop
test
hlt
cmps
ins
aam
mov
mov
mov
(bad)
pop
or
dec
lods
int
popf
neg
cwde
aaa
mov
dec
in
scas
imul
and
movs
into
repnz
pop
dec
fcom
rcl
mov
inc
rol
xchg
dec
stc
mov
xchg
dec
jp
adc
dec
je
enter
dec
fisub
mov
aad
xor
push
shl
fsub
jne
push
aam
cmp
cmps
pusha
fistp
add
clc
mov
jge
ins
or
add
mov
add
and
or
arpl
mov
jno
daa
shl
and
ret
pop
xchg
ret
cmc
mov
mov
scas
loopne
sti
icebp
cmp
popf
lods
je
push
stos
adc
jle
out
retf
xor
dec
or
arpl
loopne
leave
(bad)
cmp
test
lock
mov
outs
push
pop
pop
(bad)
mov
cmp
pop
loop
jecxz
xor
shl
pop
cli
aad
nop
or
xor
pop
cmc
fwait
push
pusha
es
pop
xchg
pop
mov
in
mov
push
mov
inc
adc
shl
div
outs
je
shl
inc
sbb
mov
dec
pop
sbb
sti
mov
xchg
clc
movs
call
in
rol
dec
movs
(bad)
and
inc
jmp
mov
push
xchg
push
orps
out
fst
stos
(bad)
and
arpl
xlat
inc
not
mov
xchg
movs
sub
sahf
mov
enter
jne
push
cli
jp
mov
pushf
imul
mov
movs
xchg
mov
xchg
push
inc
mov
imul
inc
pop
cli
and
jne
jb
or
(bad)
outs
inc
adc
sub
inc
adc
shl
in
call
mov
enter
sub
stos
or
cmp
jg
mov
pop
pop
into
mov
pop
hlt
sub
lods
push
cli
or
push
jmp
scas
data16
inc
mov
scas
pop
dec
jl
xchg
dec
inc
fwait
cmps
jl
jl
xchg
aas
into
imul
test
add
xchg
inc
sbb
add
push
sub
popf
dec
xor
into
push
mov
pop
xchg
stc
pop
call
jle
inc
cmp
mov
jg
or
(bad)
lds
fstp
push
neg
jnp
or
hlt
dec
xchg
mov
inc
mov
xor
pop
mov
cwde
and
push
add
push
fiadd
test
stc
inc
xchg
pop
adc
mov
daa
or
(bad)
cmp
int
imul
shl
iret
(bad)
xor
add
jbe
pop
repz
cld
cmp
stos
mov
jno
stos
push
(bad)
push
ret
repz
daa
(bad)
js
hlt
jbe
sub
bound
or
push
mov
aad
and
cmp
adc
cmp
test
cmp
repz
daa
scas
push
lock
cld
test
xor
cmp
sub
add
xlat
pop
and
pop
sbb
jo
pop
(bad)
mov
(bad)
fs
mov
call
add
cs
sbb
xchg
aad
out
add
pop
add
push
pop
stc
inc
add
pusha
jecxz
loope
adc
sbb
fs
ds
adc
enter
and
adc
sbb
push
pushf
dec
adc
into
(bad)
dec
xchg
jl
bound
jb
mov
(bad)
cmps
cmc
call
push
sub
jge
pop
lods
sub
outs
xchg
in
in
mov
fld
mov
fwait
cmpxchg
jb
(bad)
pop
stc
push
xor
cs
add
aas
sub
xchg
arpl
sahf
fwait
or
mov
fmul
daa
popa
addr16
jmp
jne
aas
movs
xor
push
rol
in
xor
pop
sub
mov
mov
sub
xor
mov
xchg
pop
inc
div
in
bound
or
mov
push
data16
fistp
ret
lds
shl
sbb
or
or
mul
repz
mov
inc
pop
popa
add
add
ss
sbb
imul
push
and
ss
(bad)
jmp
fdiv
sub
mov
ret
mov
adc
ja
fisttp
outs
sub
jg
sub
mov
jbe
fs
mov
loop
jno
sar
retf
out
(bad)
sbb
pop
mov
add
dec
enter
ficom
rcr
and
dec
jae
xchg
out
jp
and
sahf
jle
sbb
mov
nop
add
in
dec
loope
jne
movs
jno
and
cli
cmp
lock
xor
mov
push
stos
push
ins
adc
popa
xchg
mov
sub
and
sahf
jne
in
enter
mov
sar
cdq
inc
addr16
cmp
mov
mov
test
mov
fsub
pop
xchg
or
ficom
cmp
jbe
pop
or
pop
mov
pop
jbe
push
jle
lods
sahf
cmp
js
fs
mov
sbb
mov
sbb
inc
pop
mov
es
dec
cmp
sbb
(bad)
(bad)
dec
mov
sbb
nop
inc
push
mov
and
mov
shl
fprem
cmp
test
rol
mov
aam
mov
ins
in
test
lods
gs
mov
sub
stos
imul
loope
jbe
sub
gs
mov
nop
sbb
and
mov
sbb
jnp
and
stos
lods
xchg
in
lock
rol
inc
cmp
sar
std
cmp
dec
sbb
fbld
cmp
push
adc
arpl
mov
push
popa
mov
mov
inc
fld
leave
enter
or
stos
(bad)
mov
adc
clc
dec
jl
pop
mov
xchg
jnp
push
ret
jle
mov
xchg
jp
aam
sbb
js
xor
pop
lea
mov
out
jecxz
push
call
push
sub
lahf
int3
mov
(bad)
push
daa
xchg
(bad)
hlt
(bad)
lahf
jnp
mov
sub
inc
pop
call
add
imul
ins
in
fdivr
fs
pop
adc
push
xchg
sbb
mov
mov
adc
sub
dec
jg
mov
test
in
push
mov
sub
imul
sub
dec
loope
or
bnd
pop
mov
lahf
out
ss
loope
test
(bad)
(bad)
ins
push
ins
and
inc
mov
sub
nop
push
lds
repz
loop
(bad)
sbb
adc
cli
jb
test
jb
retf
(bad)
fld
test
sar
sbb
addr16
repnz
arpl
add
push
sub
sbb
aam
sbb
cmp
mov
mov
daa
sbb
push
dec
cdq
and
or
das
dec
out
fadd
push
daa
jp
movs
mov
ja
jb
mov
out
ret
lahf
sbb
jp
mov
push
repz
inc
mov
fst
arpl
push
inc
outs
movs
add
and
gs
cmps
add
fist
adc
xlat
das
push
jmp
fwait
mul
jbe
shr
xchg
adc
iret
xor
in
sbb
(bad)
aas
inc
lods
pop
jo
pop
mov
jmp
mov
repz
mov
retf
push
dec
sbb
lahf
or
inc
mov
add
or
(bad)
xlat
adc
sahf
mov
lods
ins
scas
fcmovb
mov
inc
neg
pop
(bad)
push
xor
adc
(bad)
pop
in
aad
int3
fwait
mov
jmp
stos
pushf
jge
dec
(bad)
aaa
jnp
fistp
push
ins
aad
mov
out
inc
adc
popf
pop
xchg
int
dec
and
cmp
ret
movs
test
jne
sbb
inc
jb
push
(bad)
push
out
xchg
ins
sbb
cs
jecxz
stos
pop
fsub
movs
push
add
sub
loope
cmps
xor
and
aad
pop
add
dec
push
ret
or
inc
push
es
fs
jb
cmp
aam
jmp
in
cdq
sti
test
sub
fsubr
dec
mov
popf
retf
ins
adc
inc
repnz
pop
add
pop
sbb
and
into
fs
loop
(bad)
and
jae
std
xlat
ret
sar
push
fnstenv
mov
rcr
fld
mov
sub
mov
imul
in
sbb
test
retf
sbb
xchg
lods
ins
cmp
push
add
push
mov
retf
(bad)
jnp
es
aam
pusha
or
mov
cmp
jg
push
in
shl
and
sub
outs
data16
mov
inc
sbb
stos
fxam
sahf
xchg
pop
or
mov
paddsw
add
dec
scas
dec
cld
cmps
jecxz
cmps
jecxz
stc
adc
dec
bnd
jae
adc
call
in
pop
adc
(bad)
not
sbb
push
mov
push
mov
call
push
push
push
cmp
lock
retf
sbb
shl
push
xor
bound
xchg
retf
test
ror
iret
sbb
inc
mov
retf
mov
jnp
dec
popw
jp
inc
or
cmps
push
sar
fwait
jo
test
scas
and
push
push
std
in
mov
mov
mov
into
in
mov
imul
add
nop
aaa
mov
loope
(bad)
call
or
cmp
cmp
pop
sub
mov
dec
push
dec
cld
sbb
arpl
push
or
imul
movs
push
cmp
outs
mov
cmp
xchg
out
add
cmp
mov
and
push
cmp
push
pop
pushf
jecxz
add
loopne
frstor
push
(bad)
popf
mov
inc
xchg
popf
mov
mov
in
adc
push
imul
sub
pop
xchg
bound
push
xchg
fwait
pop
or
xor
jge
push
out
loop
pushf
mov
pushf
lods
xchg
push
fcmovnb
jns
stos
xchg
fidivr
inc
aad
lods
mov
cwde
outs
call
sahf
mov
pop
pop
xor
sbb
jo
pusha
cmps
in
iret
dec
adc
mov
(bad)
out
mul
xor
adc
or
or
fist
push
jb
pop
and
adc
push
lods
mov
sbb
xchg
sbb
(bad)
mov
out
popf
cmp
mov
jecxz
(bad)
sbb
xchg
outs
ret
cmp
mov
(bad)
ss
sti
leave
cmp
pop
mov
inc
icebp
(bad)
into
xor
scas
pop
stos
sbb
imul
icebp
cmc
sbb
and
stos
iret
xchg
sub
cli
jne
xchg
sbb
sbb
xor
jecxz
sbb
dec
pop
loopne
stos
jg
ret
inc
mov
jmp
pop
test
mov
(bad)
jns
or
imul
and
jae
in
pop
or
add
xor
xchg
stc
lock
jns
(bad)
rcr
pushf
xchg
in
nop
lods
mov
mov
sbb
in
mov
cmp
fidivr
dec
xchg
jnp
in
fidivr
sbb
popa
fs
cmp
lods
(bad)
fucom
push
jg
hlt
call
(bad)
mov
popa
jle
dec
mov
mov
inc
mov
mul
jle
adc
scas
xor
xor
rcl
pop
popa
into
lds
adc
jno
push
and
inc
and
ror
out
call
sub
lock
mov
fistp
pop
cmp
adc
mov
mov
mov
loop
ins
mov
xor
and
retf
ins
lods
ss
push
cdq
xchg
dec
jge
cmp
in
f2xm1
adc
not
push
mov
pop
xchg
cdq
sahf
outs
js
pop
inc
movs
push
and
retf
mov
mov
test
shr
cwde
xchg
leave
and
scas
cmp
ret
jae
retf
add
sbb
aaa
cdq
dec
fadd
mov
pusha
jmp
cld
jmp
jp
fcomp
or
xchg
dec
mov
(bad)
(bad)
dec
shl
adc
add
test
pusha
cmp
popa
lock
mov
dec
mov
jne
push
jp
jb
mov
daa
sub
adc
mov
pop
rol
dec
lahf
mov
mov
cs
pop
pusha
xor
mov
push
jbe
push
or
xor
inc
pop
ins
pop
and
ds
imul
pop
sbb
sahf
push
xor
mov
daa
or
jbe
ds
cmp
sub
fild
outs
mov
xchg
leave
loopne
iret
mov
mov
pop
adc
push
retf
xchg
adc
jp
and
fs
mov
cwde
ss
sbb
and
xor
xor
push
pop
das
lods
xchg
cmp
mov
add
xchg
sub
and
jae
mov
jmp
je
mov
sub
nop
or
(bad)
icebp
cld
inc
in
sub
mov
fisubr
xchg
jge
shrd
xor
in
inc
(bad)
lds
rcl
inc
aaa
bound
mov
or
xchg
sti
addr16
push
std
ins
ins
hlt
pusha
imul
std
popf
fdivr
hlt
pushf
in
out
adc
adc
cmp
shr
pop
or
mov
fcmovne
mov
fcmovnbe
ret
in
int
cmps
cmp
popa
adc
adc
stos
sub
mov
xchg
cdq
inc
mov
or
ret
xchg
jae
test
or
pop
stos
test
(bad)
pop
jno
and
sub
cld
aam
test
push
es
push
and
fld
stos
aad
xchg
aaa
jne
mov
test
add
out
imul
fmul
test
inc
pop
push
fwait
push
repnz
mov
sbb
xor
cmps
cli
enter
pop
push
sub
xchg
sbb
inc
stos
inc
push
les
daa
jl
iret
jmp
mov
inc
mov
jbe
or
pushf
add
xor
cs
pop
jno
cmc
enter
int
xchg
adc
enter
iret
imul
leave
add
stos
mov
add
sub
repz
dec
or
mov
(bad)
pop
xor
stos
aad
xchg
movs
cmp
add
mov
pop
lea
pop
dec
clc
push
popa
pop
pop
mov
iret
mov
stos
data16
adc
das
aas
imul
in
xchg
aas
aam
add
iret
out
dec
sbb
sub
sub
mov
js
or
adc
add
test
xor
mov
xor
iret
(bad)
data16
fsubr
(bad)
(bad)
in
shr
cmp
sub
repz
mov
xor
xchg
les
ja
push
stos
aaa
les
add
and
pusha
imul
(bad)
(bad)
(bad)
arpl
xchg
out
add
js
mov
mov
mov
add
xchg
xchg
movs
xlat
inc
cwde
idiv
fsubp
call
pusha
jb
add
push
lods
dec
mov
les
cmp
sub
(bad)
mov
mov
(bad)
in
lock
and
and
stos
jo
neg
mov
imul
js
cmp
mov
xor
jnp
int
pop
mov
stos
and
outs
out
add
movs
rcl
(bad)
aaa
mov
or
mov
and
pop
xchg
pop
mov
cdq
repnz
push
dec
bnd
mov
dec
add
fisttp
pop
mov
leave
es
and
and
xchg
pop
inc
fsubr
bound
xor
ja
adc
xchg
push
mov
xchg
pusha
in
or
push
sahf
cwde
out
dec
data16
es
pop
bound
sbb
jg
inc
dec
sub
dec
pop
(bad)
xor
sub
js
xchg
dec
shl
inc
sti
xchg
outs
push
loope
push
loope
jge
stc
mov
call
iret
js
sbb
clc
jmp
movs
push
mov
xor
xlat
pavgb
es
call
jmp
add
repz
adc
add
and
inc
sbb
xchg
push
(bad)
cmp
sti
sub
push
or
out
fistp
mov
in
bound
push
or
fdivr
add
xor
push
lods
jle
div
mov
repz
mov
pop
push
cmp
xor
data16
outs
pop
nop
cmp
sub
mov
sub
inc
mov
mov
stos
es
xor
xlat
repz
jmp
sar
jp
cmp
dec
test
aaa
test
mov
div
addr16
pushf
loopne
mov
loop
add
dec
mov
inc
movs
add
pop
mov
mov
add
sub
add
fst
ins
aaa
push
jg
fsub
dec
push
fucomp
push
inc
aas
mov
stos
cld
popf
add
xchg
xchg
xchg
cmp
push
call
outs
pop
inc
in
cmps
xlat
mov
test
pop
sbb
jnp
in
pop
loope
retf
mov
inc
out
mov
jo
pmuludq
mov
call
pusha
enter
mov
out
xor
dec
test
int
mov
es
fisttp
jns
ds
dec
mov
cmp
push
or
jp
jp
inc
add
repz
leave
rcr
dec
adc
(bad)
fild
lods
pop
mov
test
or
fidiv
pushf
push
retf
cmp
xchg
mov
adc
push
hlt
and
sbb
cli
inc
dec
clc
scas
cmp
(bad)
rol
jbe
sbb
cmps
dec
jae
mov
and
ror
add
nop
adc
pop
xchg
mov
inc
ficom
sub
add
stos
mov
mov
(bad)
dec
jmp
cmp
cld
sub
movs
mov
xchg
popf
jp
sbb
jns
inc
adc
push
push
jmp
push
call
fild
cmp
inc
mov
inc
outs
and
sar
(bad)
repnz
cmp
jl
pop
int3
sub
mov
cli
pop
adc
push
jl
(bad)
xchg
fmul
out
bound
cmp
pop
jg
fs
mov
jb
fstp
mov
outs
aaa
mov
xchg
(bad)
repz
push
sbb
cmp
lock
lahf
mov
dec
fdiv
sub
arpl
pusha
pop
in
mov
mov
add
cli
into
sub
(bad)
mov
xchg
mov
sub
in
pop
sub
fdiv
mov
retf
xchg
fs
bound
stos
xchg
xor
daa
bound
mov
add
xor
daa
popa
and
retf
sub
sti
pop
mov
(bad)
stos
sti
sub
inc
fstp
dec
xchg
inc
adc
lods
jmp
mov
inc
mov
mov
pop
nop
sar
push
mov
pop
mov
cmc
ja
mov
imul
ret
fsub
and
push
sbb
fldenv
repz
inc
mov
call
jg
add
jg
call
xchg
mov
out
retf
(bad)
xchg
sub
dec
or
mov
fdivr
xor
push
dec
mov
sub
cmp
push
adc
js
mov
or
lahf
(bad)
out
shl
hlt
xchg
xlat
icebp
aad
and
out
inc
pop
pusha
dec
inc
enter
int
cmp
mov
or
lea
pusha
stos
xchg
fiadd
ja
sub
jg
dec
fwait
push
pop
or
xchg
call
inc
and
pusha
push
and
or
in
cmp
ret
push
out
repz
xchg
fdivr
xchg
dec
mov
int3
adc
fisttp
jecxz
push
pop
sar
and
aas
sub
or
and
xor
mov
inc
shl
stc
dec
js
hlt
fwait
mov
jl
sub
rcl
pusha
shl
inc
inc
xchg
loop
(bad)
neg
jecxz
jmp
gs
xchg
mov
imul
or
jp
inc
fs
mov
pop
clc
sti
pop
mov
arpl
jno
xor
or
ds
mov
es
cs
pop
xchg
sar
inc
pop
loop
jbe
jle
inc
adc
imul
into
(bad)
sub
xchg
popf
jmp
xchg
lods
aad
mov
mov
or
mov
int3
call
and
mov
jp
sahf
xlat
stos
add
out
pop
sub
imul
mov
add
or
pop
xor
shl
aam
jo
imul
mov
push
lds
mov
lea
sbb
je
cmps
jl
ja
xchg
inc
pop
adc
mov
dec
cmp
mov
pop
or
test
cs
mov
das
cmc
mov
push
mov
xchg
sub
mov
or
out
jge
cmps
ds
loopne
fist
jmp
and
jl
add
xchg
test
xchg
movzx
push
sub
mov
sti
outs
shl
neg
(bad)
jge
mov
pop
into
xchg
add
mov
lock
xchg
cmp
sti
sub
pop
loope
xchg
pop
jmp
clc
popa
inc
out
sub
xlat
cmp
lds
mov
add
pop
in
cmps
arpl
daa
icebp
loop
cmps
mov
xchg
hlt
dec
or
fnstenv
(bad)
in
mov
(bad)
out
jge
and
mov
or
ja
xchg
sbb
dec
push
and
xchg
es
loop
pop
or
neg
pop
and
shl
sub
inc
js
xor
inc
(bad)
mov
and
mov
loopne
push
add
scas
xor
sbb
push
push
dec
in
fadd
cmp
jbe
(bad)
aad
inc
lds
push
daa
clc
jmp
xor
les
cwde
jmp
mov
test
imul
out
jle
cwde
pushf
fisub
fimul
data16
fild
dec
fild
jne
jle
fdiv
cmc
repz
lahf
or
in
outs
dec
mov
in
sbb
ss
mov
daa
mov
sub
ins
cmp
nop
dec
jne
and
adc
dec
add
lahf
ffree
sub
inc
inc
aas
stos
mov
inc
das
fistp
add
jp
jecxz
xlat
jb
or
add
xchg
and
stos
push
mov
sub
popa
fcomp
jae
or
in
jno
dec
mov
dec
xchg
stc
iret
ret
lods
xor
cdq
in
jne
out
cmp
int3
mov
mov
xor
mov
arpl
mov
pop
nop
movs
inc
leave
fwait
movs
sub
jae
cwde
cwde
(bad)
(bad)
pop
push
pop
aad
daa
(bad)
push
mov
ud2
jns
inc
movs
shl
cli
xchg
aas
into
add
jbe
mov
into
dec
aam
dec
and
scas
std
ins
and
jmp
sub
pop
pop
addr16
mov
xor
xlat
rcr
(bad)
adc
(bad)
push
mov
out
push
xchg
sbb
std
popa
cdq
nop
lods
(bad)
xchg
pushw
mov
mov
out
jnp
stos
scas
fstp
retf
outs
or
push
jbe
aad
mov
sub
in
shr
pop
mov
cmps
and
in
and
xchg
cmps
test
cmp
push
fnstenv
xor
dec
cmp
or
jmp
inc
or
jmp
out
add
push
rol
aam
outs
dec
rcl
mov
ss
xor
cwde
mov
loope
dec
mov
ins
mov
push
mov
and
inc
mov
stos
or
inc
into
std
and
adc
xchg
cmps
repnz
mov
cwde
xchg
cs
(bad)
test
sub
fst
leave
inc
popa
sbb
rol
jg
and
cmp
dec
and
cmp
ret
mov
adc
push
ror
push
inc
fidivr
and
mov
(bad)
fdiv
mov
addr16
retf
ret
jne
push
xor
int
push
ins
popa
mov
lds
addr16
pop
jmp
inc
push
lds
cmc
out
pop
mov
fst
jp
ret
scas
xchg
push
mov
mov
lahf
xchg
xor
and
push
test
and
push
cmp
mov
pop
(bad)
xor
test
jmp
sub
jecxz
inc
push
push
mov
mov
adc
cmp
ja
pop
movs
xor
jg
out
mov
daa
sbb
jg
jp
in
mov
mov
dec
in
jp
push
mov
pop
pop
pop
lock
or
xchg
aam
out
fdivp
inc
cmps
in
ja
push
mov
mov
or
add
(bad)
pop
mov
jge
sbb
cmp
mov
retf
sahf
mov
push
call
mov
mov
cmc
retf
enter
xor
mov
movs
aaa
fnstenv
inc
pusha
out
test
out
xor
repz
push
and
dec
repz
sbb
cli
add
nop
inc
(bad)
push
fdivr
mov
adc
xchg
in
gs
(bad)
pop
lods
icebp
test
mov
mov
jne
jmp
add
sbb
cmps
ds
loop
or
pop
adc
out
call
stos
jge
mov
mov
popa
in
fdiv
aas
push
xchg
mov
movs
test
sahf
and
xor
int
cmp
cwde
xor
adc
xchg
aam
xchg
les
and
imul
cwde
jns
adc
mov
dec
push
stos
popf
push
pop
bound
pop
aaa
jle
sbb
inc
adc
test
enter
scas
or
or
stc
cld
std
leave
daa
mov
push
lea
stos
push
shl
addr16
jns
and
jae
mov
pop
jmp
sub
out
jns
imul
aam
xchg
imul
aam
sub
pop
push
pop
mov
je
mov
push
lds
mov
std
fidiv
inc
out
ret
repnz
cmp
mov
popf
loope
add
push
dec
mov
icebp
add
inc
stos
loope
fs
sub
aam
or
mov
jmp
popa
add
nop
rol
aaa
mov
sahf
jno
push
sbb
test
xor
fisub
jo
cs
cmp
adc
fsub
mov
cmp
push
jns
sbb
fmul
mov
retf
xchg
jg
(bad)
loopne
mov
push
in
push
mov
test
mov
mov
int
jecxz
cwde
rcl
xor
sub
adc
aaa
push
xor
cdq
lock
je
push
call
mov
xchg
push
rol
or
and
mov
inc
in
mov
cs
repnz
out
in
adc
lahf
adc
jp
xor
adc
int
stc
movs
sbb
test
jecxz
sahf
sbb
mov
and
sar
ins
jne
cmps
jo
aas
data16
sub
sahf
fisubr
mov
add
and
cmp
jae
cmps
sub
(bad)
es
jns
sbb
xor
mov
adc
enter
xchg
int
scas
adc
adc
jg
xchg
not
jge
(bad)
leave
imul
push
or
retf
fidiv
jmp
mov
xchg
popa
add
jns
loopne
stos
loopne
xor
push
mov
mov
enter
mov
(bad)
in
cwde
hlt
aaa
fwait
mov
xchg
xor
clc
push
fwait
dec
mov
pop
push
push
int3
and
pop
mov
das
das
retf
lods
cdq
mov
nop
pcmpeqd
xchg
fstp
and
mov
sbb
fsubr
mov
or
(bad)
or
dec
inc
mov
je
movs
or
push
fcomp
data16
fsubr
(bad)
jns
xchg
dec
fistp
loop
adc
inc
adc
push
fnsave
adc
fcmovbe
pop
pop
jns
mov
nop
mov
aaa
(bad)
ds
dec
std
adc
test
dec
add
dec
loope
outs
movs
sub
and
sub
jno
shl
(bad)
ror
mov
fistp
sub
sub
mov
aad
fnstcw
hlt
imul
xchg
mov
lods
das
fadd
or
pusha
dec
push
mov
push
add
cmc
movs
mov
retf
or
dec
ins
jb
imul
and
cmp
jmp
jg
cmp
and
mov
and
push
cmp
push
and
std
arpl
out
push
shl
jp
call
outs
xchg
mov
mov
add
mov
sbb
or
jns
jne
push
(bad)
fiadd
sbb
inc
sub
and
test
sahf
sub
mov
call
jb
mov
xor
push
inc
mov
pop
xchg
mov
neg
and
pusha
and
loop
loope
fs
push
mov
repnz
pop
in
adc
loopne
mov
loope
inc
mov
stos
imul
lods
ins
push
push
in
push
push
int
sbb
cmp
inc
scas
in
rcr
push
ins
cwde
mov
sub
dec
jg
or
clc
in
sbb
mov
inc
inc
outs
leave
sahf
sbb
mov
mov
scas
push
into
lock
mov
icebp
xor
inc
xchg
xchg
or
xchg
mov
dec
fadd
ret
gs
lods
sbb
pop
sar
into
add
mov
addr16
inc
ret
fist
mov
cmp
inc
mov
popf
aad
cmp
enter
fiadd
push
jmp
jo
outs
aaa
int
call
aad
cmc
mov
pop
and
jge
add
aad
sti
stc
test
pop
sub
int
sub
out
sbb
popf
cmp
retf
or
fild
test
xor
call
mov
pop
add
mov
fldcw
icebp
je
das
cmps
lahf
push
pop
mov
xchg
mov
jmp
push
xor
lahf
fmul
lea
test
or
loopne
jb
das
sbb
popf
stos
mov
mov
sbb
je
ror
adc
mov
pop
outs
cmps
pop
(bad)
(bad)
rcl
xchg
frstor
popf
leave
out
out
mov
mov
mov
cld
jl
popf
addr16
setl
scas
dec
cmc
dec
fsubr
cmp
xchg
fcomp
and
add
add
jb
sub
push
xchg
gs
ja
xor
int3
mul
loopne
mov
fistp
js
xchg
adc
(bad)
(bad)
push
dec
shr
add
jl
inc
fst
push
sbb
popa
scas
js
mov
add
jno
pop
dec
cli
cmps
mov
clc
jecxz
and
hlt
mov
test
pop
and
retf
(bad)
repnz
mov
mov
and
dec
test
out
jmp
lea
stc
push
inc
rcr
hlt
sub
(bad)
mov
push
jge
std
pushf
mov
mov
int3
sbb
mov
fs
pushf
or
gs
xchg
and
mov
mov
repnz
adc
mov
mov
add
out
out
fwait
pop
pop
and
jo
test
mov
enter
push
sub
pop
js
mov
xor
das
dec
addr16
and
pop
add
inc
mov
aam
cmp
xor
push
das
test
jmp
stc
cmp
mov
lds
pop
ja
push
push
stos
mov
push
(bad)
jmp
mov
imul
and
scas
(bad)
fwait
das
into
inc
fninit
inc
stos
int3
push
stc
mov
sbb
pop
sub
aad
xlat
fwait
push
(bad)
cmp
fadd
in
inc
in
or
fldcw
and
ret
stos
and
mov
lods
mov
cdq
or
mov
xchg
adc
push
popa
stos
inc
and
push
mov
and
sbb
cmp
int3
fdiv
pop
push
loopne
push
push
push
xchg
arpl
jmp
fidiv
inc
ins
add
cmp
xchg
dec
dec
push
inc
cli
cmc
ror
mov
dec
retf
mov
scas
dec
pop
fstp
xor
and
lock
in
cmps
mov
sti
rcr
ins
xrelease
mov
jns
int
push
jmp
lahf
add
pop
adc
cmp
mov
jne
gs
je
pop
in
jl
inc
sbb
outs
das
fcom
hlt
je
aad
imul
pop
pop
ins
adc
in
ror
inc
sbb
out
repnz
mov
add
fwait
add
test
push
dec
scas
es
pop
adc
inc
push
xor
push
xchg
in
(bad)
fmul
popf
cmp
jge
jmp
movs
cmp
ret
lods
or
in
(bad)
in
pop
dec
mov
cdq
(bad)
aas
pshufw
mov
mov
mov
mov
stos
loope
add
sub
xchg
pop
cmp
jmp
fimul
jbe
test
fcompp
jp
test
das
mov
(bad)
test
daa
adc
data16
jg
sahf
test
adc
push
cwde
mov
jmp
dec
rcl
or
xchg
mov
int
sub
jmp
or
out
scas
mov
dec
xchg
(bad)
xchg
mov
cmp
inc
(bad)
push
in
bound
outs
pop
movs
dec
mov
repnz
sbb
cmp
or
sbb
xor
inc
inc
test
loopne
jae
sub
pushf
pusha
xor
pushf
push
jo
xchg
arpl
(bad)
data16
cmp
(bad)
in
pop
xor
cdq
lods
mov
or
out
cmp
repnz
jno
pop
hlt
mov
call
shr
cwde
and
cmp
lods
std
arpl
mul
outs
popf
jmp
leave
imul
in
leave
fild
xor
and
out
inc
adc
out
in
push
adc
clc
nop
dec
adc
ret
ror
mov
jo
stos
pusha
out
xchg
mov
push
js
dec
jb
pop
out
push
pcmpgtw
xor
xor
scas
daa
ds
ret
sub
jns
test
das
inc
adc
in
ja
cld
scas
jns
nop
imul
and
cmps
xor
sbb
(bad)
adc
or
(bad)
out
jbe
hlt
xchg
push
les
aad
stos
popf
(bad)
xlat
and
mov
imul
inc
pop
leave
out
sub
and
adc
mov
mov
adc
adc
mov
dec
and
xchg
xchg
lds
dec
push
mov
shl
and
popa
sbb
push
mov
leave
add
call
dec
dec
test
add
sub
mov
sub
lods
pop
dec
fstp
mov
out
add
pop
jge
mov
ins
jecxz
sub
push
sbb
in
lock
inc
jmp
mov
aas
iret
xchg
push
pop
add
push
jbe
xor
fmul
mov
cli
movs
push
push
dec
fcos
mov
retf
jno
mov
jle
mov
outs
leave
(bad)
jmp
inc
jp
movs
xchg
cmp
mov
and
lock
bnd
leave
ja
(bad)
bound
add
push
icebp
sub
das
arpl
fwait
sub
lods
sbb
jl
ror
ficom
mov
mov
dec
push
loopne
outs
mov
dec
ss
ret
(bad)
mov
enter
dec
xchg
cmc
mov
xchg
mov
or
shr
sub
leave
mov
or
aaa
es
jns
sbb
sub
inc
int
pop
xchg
sbb
cmp
or
ins
stc
pop
fadd
pop
pushf
mov
and
push
push
add
jp
push
inc
pop
mov
cmp
xchg
inc
mov
jg
leave
mov
xor
dec
sar
mov
sbb
dec
add
cmp
shl
add
jle
mov
jo
xchg
dec
mov
push
ucomiss
sar
cmp
pop
lahf
and
in
int
jne
clc
(bad)
cwde
push
addr16
or
retf
clc
sbb
inc
and
mov
int3
cwde
pop
and
and
ror
mov
mov
aaa
cmc
pop
or
retf
adc
xchg
fcmovu
or
sbb
add
inc
movs
cld
loope
mov
(bad)
sbb
mov
in
and
or
sbb
sar
cmc
enter
fisubr
cmc
ja
xor
lock
outs
mov
imul
push
shl
pop
jb
pcmpeqd
hlt
xlat
adc
pop
mov
xor
push
push
(bad)
loop
imul
idiv
fidivr
mov
sub
sub
pop
mov
jne
dec
and
mov
adc
lods
ds
xor
xlat
xor
and
and
mov
or
shl
xor
ins
ds
adc
mov
mov
adc
cmp
in
ret
mov
loope
fidivr
jmp
lock
clc
mov
jge
loop
mov
cmp
sbb
aas
imul
(bad)
scas
and
pop
adc
cmp
push
enter
push
mov
out
xchg
xor
xchg
out
test
push
adc
fsub
cmp
ftst
adc
adc
and
sahf
mov
xchg
ja
lock
or
adc
scas
push
mov
sbb
(bad)
dec
mov
cmp
(bad)
aam
pop
add
xchg
pop
adc
jne
push
push
in
std
shr
push
adc
loopne
mov
inc
mov
and
mov
inc
mov
pop
les
ret
and
int
neg
dec
in
ins
mov
lods
out
cmp
mov
ins
jns
addps
add
pop
test
jecxz
repz
(bad)
cmps
xchg
loop
xlat
lock
call
test
jle
and
dec
jno
jbe
mov
mov
leave
gs
sub
in
clc
mov
push
es
fcomp
loop
or
ret
test
ret
cmp
sbb
out
xchg
add
outs
push
add
das
call
sub
jmp
push
mov
ret
(bad)
push
out
lea
jle
sbb
in
cld
cdq
lahf
cwde
mov
shl
popf
mov
ret
jns
pop
fmul
cmp
xor
outs
fdivr
popf
cmps
(bad)
fisub
popa
xchg
lods
jl
add
mov
loope
inc
fyl2xp1
push
mov
int3
dec
daa
out
pushf
mov
into
int
inc
fnstsw
push
add
int3
cmc
(bad)
mov
cs
xchg
jnp
jmp
push
stos
daa
loop
call
es
mov
cld
jle
lods
not
push
mov
jo
cmp
popf
aad
add
fmul
dec
mov
xchg
pop
ret
bound
dec
jmp
cmp
scas
cdq
pusha
in
imul
or
or
inc
push
add
xor
out
cmp
dec
cmc
outs
or
loope
jp
shr
ja
mov
sub
mov
mov
dec
into
es
and
fsubr
xor
sti
fild
stc
outs
add
xchg
xor
push
icebp
cmps
jp
jo
sub
dec
mov
mov
repz
cmc
sar
or
push
pop
aaa
xor
xor
cmps
dec
ja
push
inc
ss
pop
aaa
sub
adc
cmp
cmp
cmc
scas
lock
into
out
cmc
iret
xchg
mov
mov
mov
or
mov
lods
in
or
mov
pop
mov
xor
mov
inc
int3
gs
cmp
(bad)
retf
xor
jecxz
mov
add
rcl
movs
ins
mov
pop
addr16
add
stc
mov
dec
xchg
mov
ror
into
pop
je
mov
cmps
lds
add
jb
push
jns
xchg
aas
call
adc
pop
cmp
call
xor
dec
cmp
cmp
adc
(bad)
cwde
xchg
in
hlt
sbb
jnp
xlat
fs
push
sub
xchg
xor
mov
test
push
stos
mov
xor
cmp
sub
je
and
daa
xchg
(bad)
mov
cmp
and
popa
adc
mov
div
push
fild
sbb
jns
stos
std
aad
adc
mov
pop
sub
and
(bad)
pop
das
xor
mov
fdiv
mov
mov
mov
fldenv
cmp
jg
(bad)
and
inc
xor
sbb
mov
hlt
movs
andps
inc
outs
in
xchg
retf
mov
lea
adc
fsubrp
inc
adc
inc
inc
sbb
addr16
inc
sbb
jb
daa
cld
repnz
push
mov
(bad)
xchg
dec
test
jmp
das
imul
cwde
js
jb
inc
inc
sbb
add
test
add
rol
je
push
add
mov
xor
xlat
dec
mov
ss
mov
cld
cld
(bad)
lock
adc
xchg
(bad)
in
jp
div
dec
stos
jbe
dec
fbld
cmp
sbb
stos
outs
mov
or
or
ss
std
test
aad
imul
test
add
mov
cmp
push
inc
mov
(bad)
push
in
lock
mov
mov
test
and
adc
xor
push
mov
cmps
into
sub
les
xchg
xchg
stos
mov
jnp
arpl
mov
mov
ds
mov
icebp
sub
(bad)
mov
ins
enter
jb
sub
adc
jne
inc
push
mov
jbe
push
dec
pop
push
jmp
or
sbb
je
sub
fs
adc
push
retf
loope
imul
dec
mov
pop
(bad)
jg
in
jmp
and
sar
jp
dec
push
pop
cmp
mov
cs
jno
or
retf
and
jg
push
mov
aad
in
xchg
aas
test
mul
sub
push
xchg
outs
and
inc
mov
sbb
in
push
in
sub
mov
push
aad
retf
and
xchg
and
inc
or
xlat
cmp
dec
call
popa
jns
pusha
mov
or
inc
iret
jp
jp
adc
les
add
mov
mov
xor
or
or
shl
adc
lods
enter
dec
mov
mov
(bad)
xlat
adc
outs
adc
push
xchg
jb
and
in
push
cmps
jo
push
mov
jg
inc
or
adc
rcl
mov
std
cmps
jecxz
call
cmp
jmp
jb
adc
cdq
jl
cmps
out
pop
sub
mov
(bad)
xor
cmp
fs
cmp
hlt
add
mov
sbb
sub
or
test
stc
rcl
pop
ins
or
mov
dec
and
out
mov
jo
fdivr
stos
ror
and
mov
jmp
adc
sbb
aas
(bad)
mov
sub
and
mov
mov
int3
add
(bad)
xchg
daa
aas
icebp
jge
je
das
pop
test
add
fild
loop
add
popf
mov
jge
sbb
fs
pop
sub
xchg
xor
cs
add
push
push
push
add
in
cmp
sub
cmps
movs
les
mov
test
out
(bad)
call
rcl
push
mov
(bad)
loop
dec
in
imul
jbe
sub
adc
mov
(bad)
pop
add
and
dec
jge
adc
(bad)
daa
scas
das
enter
sbb
mov
cli
pop
and
bound
jg
pop
leave
out
push
adc
jnp
push
ret
div
mov
mov
popf
cwde
(bad)
stc
ret
(bad)
cmp
lock
(bad)
aad
pop
adc
(bad)
push
or
scas
adc
dec
mov
xchg
rol
xor
push
not
xor
inc
xchg
fnsave
dec
in
or
repnz
(bad)
das
fs
adc
ds
xor
es
or
or
and
aam
dec
mov
ins
push
call
in
popf
int
jp
adc
mov
push
popf
xchg
fld
adc
int
cmp
jl
xchg
mov
and
out
das
dec
adc
add
sbb
jns
xlat
mov
jb
xchg
mov
inc
jg
mov
stc
jnp
in
inc
fcomp
cmps
xchg
pop
sub
cwde
bound
dec
jnp
mov
lahf
sub
out
xlat
fimul
loope
lods
jb
sub
adc
sub
xchg
pushw
rcl
jmp
cmp
lds
and
adc
xchg
inc
cdq
cmps
out
push
mov
iret
pop
lds
inc
mov
loop
pusha
mov
mov
add
mov
hlt
popa
xchg
cli
push
out
push
jecxz
rcl
loope
cmp
rcr
rcr
aas
and
ja
out
sbb
repz
dec
fst
inc
mov
scas
add
fwait
leave
pop
inc
mov
scas
into
or
dec
pop
push
or
push
xlat
cmp
loope
and
mov
icebp
aad
jmp
cmp
inc
dec
adc
jno
cmp
fwait
pushf
cmps
jno
sbb
rcl
jns
test
shl
xchg
xchg
mov
cmps
and
mov
in
push
mov
jmp
pop
call
xchg
xchg
test
push
test
mov
fidivr
(bad)
inc
mov
ror
push
scas
inc
push
cmp
lods
cmp
jmp
movs
add
stc
jmp
and
add
cmp
test
and
out
pop
pop
stos
jle
mov
jg
and
imul
dec
xchg
and
sub
pop
xchg
dec
je
iret
xor
cmp
leave
sbb
cmp
repnz
mov
xor
sbb
inc
(bad)
pop
xor
into
xor
test
cmp
or
std
sbb
cmps
loopne
xchg
jns
fsub
je
movd
scas
icebp
and
add
in
shl
outs
mov
je
xchg
(bad)
sbb
or
pop
fs
pop
add
sti
jmp
mov
push
(bad)
ret
push
inc
daa
pop
pop
fwait
push
push
rcl
inc
jno
push
mov
ja
inc
dec
hlt
jl
inc
push
retf
outs
stos
inc
test
or
xchg
mov
into
or
cwde
pop
jae
fwait
xor
ja
arpl
pop
shr
enter
sub
mov
cs
outs
pop
std
adc
xchg
adc
and
cld
mov
xor
jmp
lods
test
mov
les
push
mov
loope
fcmovnb
outs
cmc
shl
add
adc
push
cmps
dec
shr
sahf
test
repz
repnz
(bad)
ins
xor
fs
repnz
lds
in
(bad)
or
dec
xchg
add
(bad)
mov
mov
bnd
pop
mov
test
inc
sub
dec
sbb
lods
mov
(bad)
test
cmps
mov
xchg
adc
dec
and
and
je
cli
mov
jo
(bad)
jp
inc
dec
sbb
mov
ficom
out
inc
mov
add
fsubr
(bad)
scas
and
mov
popa
pop
cmp
xchg
push
sbb
test
aas
cmp
push
dec
out
aad
xchg
cs
scas
daa
cmp
sub
push
inc
addr16
jmp
cmp
ins
mov
jns
push
fst
pop
mov
bound
mov
in
lahf
retf
and
adc
mov
xor
jnp
push
ja
xor
sub
imul
mov
lea
lahf
push
(bad)
je
in
lea
mov
daa
repz
sbb
test
mov
sub
cmp
sbb
or
ret
xor
shr
sub
cmp
adc
and
rcr
ror
out
dec
scas
rol
sub
loopne
leave
addr16
sbb
pop
push
(bad)
je
cmp
leave
fistp
add
data16
sbb
inc
cld
daa
jae
bound
cmp
lahf
aas
or
jbe
test
loopne
push
inc
xor
cwde
stc
push
sar
add
inc
sub
sub
das
pop
ja
adc
sbb
out
xchg
add
cdq
fs
popa
mov
xor
sub
fwait
xchg
dec
mov
cmp
dec
mov
push
push
test
inc
and
rcr
pushf
jns
xor
push
test
push
scas
retf
scas
scas
push
mov
cmp
fcompp
dec
cmp
cdq
mov
adc
pop
ins
out
test
mov
scas
ins
mov
cs
ror
mov
xor
rcr
and
je
push
sub
sahf
inc
in
mov
mov
adc
mov
push
test
popa
push
jl
fcomp
adc
movs
sbb
mov
pop
jle
xor
out
jmp
ret
sub
sub
xlat
into
sar
neg
ret
and
cli
push
xchg
lahf
pushf
xchg
js
push
xor
jne
loope
pop
xchg
into
xor
and
dec
mov
push
int
pop
jmp
ss
mov
dec
mov
xor
dec
mov
xor
and
retf
xor
call
movs
pushf
daa
enter
jo
cdq
push
movs
hlt
sbb
(bad)
mov
and
neg
mov
shr
mov
mov
(bad)
icebp
punpcklbw
out
xchg
(bad)
arpl
push
ror
adc
js
push
pusha
inc
daa
sub
or
cmps
mov
cmp
hlt
test
scas
mov
cwde
(bad)
outs
ins
pop
jl
ret
mov
icebp
retf
std
inc
aad
fisttp
pop
ins
imul
pop
popa
and
lahf
cmp
sahf
pop
jp
mov
rol
xchg
pop
ret
enter
push
out
sbb
lods
fild
xor
scas
adc
mov
mov
jmp
mov
loope
and
shl
bound
add
hlt
enter
xchg
pop
inc
mov
stos
pushf
sbb
add
xchg
les
loopne
xor
mov
sub
dec
fisubr
cdq
cmps
inc
sar
adc
push
push
add
xlat
cmp
sbb
scas
xor
cwde
push
fsubr
add
add
ins
test
mov
dec
jnp
dec
call
pop
jg
enter
or
call
sahf
dec
rol
xchg
out
sub
mov
mov
fwait
pop
push
adc
dec
mov
and
inc
jno
cmp
mov
mov
sub
je
ins
(bad)
std
adc
xor
retf
repnz
dec
movs
fwait
sahf
daa
pop
adc
mov
xor
icebp
inc
bsf
pop
ja
jnp
popa
das
enter
xchg
pop
aaa
pop
or
cs
or
clc
pusha
imul
cmp
pop
mov
cwde
cwde
stos
jmp
mov
push
jae
out
ins
add
jge
dec
ret
jno
inc
rcl
jl
and
leave
add
je
stos
outs
hlt
and
cmc
dec
in
nop
sub
daa
push
(bad)
popa
cwde
fxch
je
(bad)
dec
push
cmp
push
psubq
xchg
cmp
leave
in
pop
pushf
enter
or
loope
and
adc
mov
pop
mov
hlt
ret
push
sub
jge
cdq
add
fscale
out
mov
mov
faddp
or
and
aam
xor
xchg
mov
xor
jl
loope
rol
push
je
je
sbb
(bad)
mov
pusha
lock
cli
int
mov
call
out
and
xchg
div
arpl
scas
ds
lea
icebp
mov
imul
popa
xor
loope
add
ins
inc
(bad)
fwait
mov
push
pop
(bad)
out
push
jle
mov
inc
or
test
icebp
int
push
nop
movs
jp
push
adc
push
or
mov
mov
rcl
repnz
add
sbb
data16
mul
in
in
dec
std
pop
cmps
jno
and
xor
or
adc
or
mov
mov
sbb
retf
aas
jecxz
sbb
dec
or
fs
js
je
dec
aas
push
ss
xlat
(bad)
cdq
push
scas
mov
sar
sub
rcr
mov
jge
pop
cmp
jo
inc
push
jne
rcl
into
sahf
pop
sub
xor
into
and
daa
call
ret
arpl
mov
and
hlt
sbb
ret
mov
cwde
shl
lods
stos
retf
adc
cwde
mov
into
sbb
mov
fistp
bound
outs
mov
cmps
lea
cs
popf
in
and
jle
mov
loopne
fmul
adc
cli
mov
jecxz
int3
dec
and
mov
mov
or
bswap
add
cmp
arpl
mov
mov
push
xlat
cmp
or
sub
dec
and
lock
loope
scas
xor
rcl
cmc
add
je
jne
pop
mov
mov
neg
cmps
sub
imul
inc
mov
aad
je
add
movs
dec
scas
xor
sub
hlt
inc
add
sbb
stos
leave
popa
jp
dec
mov
xchg
clc
call
and
(bad)
enter
xchg
mov
push
jo
jmp
mov
stc
add
mov
dec
in
mov
retf
loopne
mov
mov
cmp
in
dec
out
(bad)
stc
clc
mov
mov
push
(bad)
push
inc
mov
sar
push
mov
cmp
mov
out
jge
mov
daa
xchg
call
cmp
icebp
sbb
arpl
or
mov
jne
jmp
xchg
test
les
jo
sub
into
cs
sbb
repz
cmp
mov
sbb
jmp
lods
aaa
or
or
cmp
lods
adc
adc
loopne
in
ud2
shr
out
dec
mov
add
dec
cs
sbb
inc
stos
adc
(bad)
in
jecxz
add
xchg
in
jecxz
push
cmc
xor
cmp
aaa
dec
shr
pop
int3
lods
cmps
pop
js
leave
dec
xor
add
outs
idiv
xor
mov
cdq
lds
loope
pushf
cdq
imul
cmc
loop
sbb
call
jg
hlt
mov
ins
outs
ja
sysexit
in
pop
xor
pop
(bad)
fidiv
mov
mov
pop
adc
enter
aaa
mov
push
outs
push
and
ror
enter
(bad)
iret
push
dec
test
jp
in
push
push
inc
push
pop
pop
ds
dec
pop
add
jmp
retf
cmp
mov
rcl
movs
dec
jne
cld
mov
ss
setge
mov
aad
dec
mov
scas
mov
or
les
add
push
iret
test
mov
je
das
xchg
mov
dec
aam
add
inc
jnp
push
icebp
mov
jb
xchg
mov
mov
cmp
add
shl
stos
pop
or
sub
std
pop
ficom
retf
or
mov
ja
aas
mov
movs
xor
into
aad
mov
not
iret
lahf
lock
jnp
(bad)
(bad)
pop
idiv
retf
mul
add
daa
stos
into
add
out
loop
fdivr
ret
popf
aas
sub
out
pop
push
push
sub
call
inc
push
ror
popf
pop
cmp
scas
push
push
leave
push
retfw
inc
sar
mov
push
loopne
xchg
mov
xor
sbb
cdq
push
fsubr
iret
jp
sub
popa
or
imul
call
lds
push
pop
pop
mov
xor
leave
or
loope
pop
cmc
not
add
pushf
fnsave
add
jmp
aas
sbb
fwait
jmp
and
adc
xchg
aas
adc
adc
xchg
push
cmp
mov
int
mov
mov
bound
out
fwait
cmps
jle
adc
or
ins
call
pop
ds
cli
and
xor
retf
xchg
cmp
cmp
dec
lods
in
fwait
enter
(bad)
test
leave
test
mov
adc
cmp
ficom
or
lea
jns
lds
out
rol
stos
sub
jp
jle
mov
pop
(bad)
in
pop
mov
enter
xchg
cmp
in
scas
frstor
test
adc
dec
jecxz
sti
mov
inc
add
fwait
lods
dec
fdiv
and
shl
xor
daa
jecxz
sub
dec
shr
lods
inc
shl
xor
lods
and
sub
cmp
mov
cmps
sbb
out
xchg
dec
dec
add
shl
scas
int
sbb
and
fnstenv
push
and
adc
or
push
arpl
sbb
lods
fisttp
and
jne
mov
push
inc
jne
and
jo
pop
lods
imul
fidivr
call
mov
or
dec
xchg
mov
cmp
add
dec
inc
sub
or
and
mov
mov
mov
dec
in
fsubr
inc
movs
and
cld
loopne
inc
sub
mov
and
addr16
addr16
sbb
add
js
jbe
xchg
stos
repz
mov
cld
add
push
in
mov
xor
(bad)
fs
std
(bad)
popa
stc
sbb
mov
cmp
gs
sahf
push
ins
xor
mov
retf
mov
outs
pop
stos
ficom
add
sub
cli
push
shl
dec
cwde
cli
neg
loop
xor
sbb
shl
ins
lea
mov
inc
or
dec
cmp
pushf
xor
dec
jno
jns
dec
mov
push
retf
les
jmp
adc
lods
xor
dec
js
arpl
cli
mov
mov
xor
shl
xchg
xor
jbe
pusha
cmp
imul
fst
and
lea
popa
dec
das
mov
dec
ret
daa
xchg
sub
cmc
pop
(bad)
xchg
mov
add
mov
in
int
cli
or
jne
pop
jmp
and
in
jno
enter
addr16
js
test
cmps
pop
jae
pop
rcr
fsubr
pop
les
xchg
mov
dec
mov
scas
sub
mov
fstp
adc
les
addr16
sbb
push
test
push
popa
mov
les
and
mov
pop
inc
jl
hlt
jns
add
and
out
push
jae
push
add
std
dec
mov
push
inc
aam
xchg
clc
in
stos
push
les
pop
jmp
out
sbb
shl
outs
hlt
sbb
dec
(bad)
mov
adc
aaa
xchg
and
push
jnp
pop
mov
int
hlt
cmp
cmps
ins
call
jl
aad
(bad)
loope
dec
sbb
inc
adc
fcomp
push
loope
scas
mov
adc
sub
in
cmp
in
lgs
ins
icebp
out
test
(bad)
adc
clc
mov
imul
cmp
es
jl
mov
push
shr
jmp
rol
loopne
ins
inc
retf
dec
movs
or
ss
or
sbb
inc
in
lea
sub
je
outs
(bad)
fnstsw
out
mov
mov
mov
adc
dec
in
push
lea
inc
mov
(bad)
mov
ror
xor
cmp
popf
cmp
fnsave
lahf
xchg
inc
retf
fnsave
xor
mov
stos
xchg
sti
popa
es
cmp
pushf
mov
sbb
movs
idiv
fxam
(bad)
sbb
test
jnp
repz
inc
hlt
push
jne
ss
imul
fst
jo
out
add
pop
jnp
lea
mov
inc
retf
retf
cmp
sub
rcr
fucomip
dec
sbb
bndstx
popa
and
jecxz
cli
lods
or
push
scas
jl
lods
dec
int3
jnp
imul
xchg
arpl
xchg
jmp
lods
inc
jb
adc
test
pusha
pop
mov
cld
js
les
pop
or
sub
add
dec
lods
int
cdq
xor
loop
jle
and
xor
sbb
adc
(bad)
mov
inc
ins
mov
xchg
sahf
out
mov
sub
popa
pop
adc
add
cli
sbb
addr16
loopne
sbb
dec
popf
fcom
sbb
dec
cli
sar
or
mov
std
(bad)
fdiv
repnz
movs
push
inc
xor
rcr
xor
lea
adc
add
jecxz
jns
pop
les
add
in
jne
cdq
mov
jle
(bad)
movs
push
shl
shl
dec
pop
jecxz
ss
int
xchg
aaa
pop
mov
scas
iret
and
fisttp
sti
xor
sub
mov
sbb
add
inc
add
xchg
cli
xchg
xlat
and
mov
sti
add
ret
popf
pushf
imul
ds
imul
dec
xor
lods
(bad)
push
lock
mov
lock
loope
add
lahf
cwde
repnz
fwait
sub
cmps
addr16
retf
sub
jo
imul
cld
add
test
mov
cs
repnz
push
lea
popa
addr16
scas
inc
mov
mov
pushf
push
pop
call
and
fcom
xchg
or
std
std
dec
mov
xchg
in
sub
repnz
idiv
loop
fild
sar
cli
adc
push
pop
xor
mov
call
outs
test
out
mov
rcr
inc
or
add
sbb
adc
retf
jno
add
xor
xchg
das
add
call
clc
push
xabort
stos
jmp
sbb
ror
lea
aam
sub
sbb
ins
jmp
movs
lock
xor
mov
or
and
inc
pop
xor
fwait
cmp
icebp
mov
daa
mov
(bad)
or
push
cmp
sbb
pop
ret
popa
mov
mov
mov
sub
and
repnz
icebp
mov
scas
adc
cvtps2pi
outs
push
cmc
mov
pop
add
or
test
sbb
stos
cmp
sbb
and
add
inc
inc
in
daa
cmp
iret
fstp
pop
xchg
add
retf
test
std
pop
sub
mov
stos
call
call
aas
cmc
neg
mov
sbb
cmp
lahf
das
push
ins
dec
add
jp
jecxz
(bad)
mov
mov
cwde
stos
outs
stos
xchg
jge
inc
and
(bad)
loop
xchg
stos
pop
btc
cmps
(bad)
lods
in
jge
push
fwait
arpl
mov
xchg
xor
mov
clc
cmp
mov
mov
div
pop
sbb
movs
in
jg
mov
mov
ins
mov
mov
mov
pop
stc
xchg
loopne
in
inc
lds
push
out
loopne
lds
das
dec
cmp
mov
mov
mov
imul
cmp
pop
sbb
cwde
sbb
dec
push
cli
inc
or
inc
and
push
fwait
and
ret
jb
mov
pop
retf
add
push
mov
mov
(bad)
test
imul
arpl
sbb
push
add
cld
arpl
fs
outs
pop
popf
or
add
hlt
pushf
adc
cmp
mov
pop
ja
imul
fwait
ja
adc
xchg
xor
sbb
add
cli
and
sbb
pop
adc
movs
ret
jp
arpl
xor
push
scas
xchg
leave
push
sbb
mov
(bad)
push
add
add
push
cwde
loop
sub
mov
ret
xchg
mov
mov
mov
push
clc
stc
repnz
ins
(bad)
cld
sub
ins
pop
(bad)
cmp
jecxz
imul
imul
call
sub
jbe
mov
dec
lahf
add
sbb
cdq
sbb
cmp
mov
adc
xor
dec
xchg
jno
outs
rcr
in
cmp
adc
jg
mov
lahf
inc
adc
ins
dec
cwde
and
mov
pop
add
jmp
sub
iret
rcr
mov
hlt
addr16
cmps
mov
in
jle
cmp
pop
pop
sbb
adc
js
add
data16
inc
mov
dec
retf
jmp
jg
imul
and
and
mov
retf
push
jmp
and
or
repz
push
jnp
test
ins
retf
adc
lea
aad
and
inc
inc
push
mov
ds
push
lods
inc
sahf
fdiv
ja
mov
(bad)
xchg
inc
rcr
mov
xchg
shl
cwde
scas
jae
fwait
out
out
mov
movs
jo
aas
xor
outs
lahf
adc
push
pop
arpl
dec
test
push
mov
mov
dec
xor
add
lock
or
pop
out
test
test
jns
dec
jb
gs
mov
mov
fcomip
fcom
jnp
sbb
stos
xchg
push
lods
push
sahf
mov
xor
xchg
mov
cmp
xchg
ja
dec
sub
retf
test
pop
xlat
sub
and
aam
dec
mov
dec
inc
cs
lds
mov
out
in
stc
outs
mov
mov
xor
je
sbb
jbe
cmps
pop
fwait
stos
add
sar
test
pusha
dec
scas
mov
jg
xor
stos
mov
aad
vunpcklps
jp
dec
cmp
loop
in
repnz
mov
adc
sbb
jecxz
loopne
mov
push
xchg
lahf
push
mov
imul
mov
push
jb
jg
cmp
xchg
push
repnz
mov
movs
push
adc
inc
test
push
pop
cmps
daa
retf
add
add
mov
aad
mov
cmp
stos
add
sbb
js
cmp
ficom
loope
sti
or
cmp
push
cmp
xchg
add
test
add
and
dec
xchg
adc
ffree
or
popf
out
xor
ja
jns
add
jae
mov
push
gs
xchg
fwait
inc
mov
add
inc
or
sbb
push
sbb
daa
pop
and
std
xchg
add
sbb
addr16
stos
xchg
sahf
sub
out
(bad)
into
push
and
fcmovnbe
mov
pop
outs
jmp
bt
xchg
cmp
scas
rcr
dec
ss
das
pushf
aad
jp
rcr
sbb
scas
jecxz
pop
std
ins
or
fnstcw
jns
mov
mov
dec
jmp
sub
or
sub
int3
inc
sahf
dec
ror
dec
call
xor
pop
inc
aas
cwde
mov
shl
mov
jae
(bad)
aas
lock
or
push
cmp
mov
mov
pop
rcl
ja
jo
mov
out
js
add
ins
cmc
popa
mov
inc
mov
nop
push
sti
pop
in
or
cmp
loope
sar
repnz
xor
sar
sbb
mov
push
mov
test
ficomp
or
push
hlt
jno
leave
sbb
dec
ins
sub
in
daa
pop
mov
inc
dec
js
push
xchg
dec
push
xchg
(bad)
jnp
push
mov
scas
push
daa
xchg
mov
cmp
sbb
(bad)
and
call
jne
xchg
push
xchg
in
mov
ss
mov
das
sbb
ror
inc
hlt
jecxz
cmps
imul
outs
movs
repz
fsub
dec
xchg
push
xchg
outs
aam
movs
test
scas
and
fild
nop
xor
jp
cmp
jne
jmp
inc
and
sbb
ffreep
call
xor
push
ss
out
or
mov
out
cmp
mov
mov
(bad)
add
imul
shr
push
dec
pop
sub
cmp
mov
and
hlt
add
xlat
scas
stos
ret
call
xchg
stc
mov
jge
mov
mov
sar
fs
adc
sbb
mov
int3
xor
je
jg
add
inc
ret
mov
jl
inc
mov
fdiv
les
lods
pop
lods
sub
xchg
xchg
aas
cld
in
std
xchg
fimul
xchg
push
add
jb
pop
jle
or
outs
ficom
int3
cmp
mov
mov
inc
dec
adc
pop
(bad)
stc
jg
sbb
pop
retf
fs
div
ins
mov
sahf
xchg
mov
cmp
or
adc
ins
out
and
mov
add
xchg
aad
bound
and
lahf
inc
fs
pushf
mov
sbb
adc
(bad)
hlt
and
ret
inc
leave
cmp
jmp
mov
adc
(bad)
stc
jb
lods
or
arpl
jl
movs
add
pop
in
cmp
ror
jbe
cdq
daa
pop
cmp
lods
xor
mov
adc
and
sub
sbb
lea
clc
adc
ret
jbe
add
rol
aam
xlat
sub
dec
fs
or
not
retf
loope
pop
sub
(bad)
loopne
ds
and
cli
hlt
mov
sbb
cmp
or
mov
iret
bound
or
cmps
popf
adc
shl
fsubr
mov
mov
(bad)
out
ret
je
inc
jmp
cmp
pop
jmp
mov
cmp
cmc
gs
les
jmp
jl
scas
mov
xlat
xchg
fwait
push
test
mov
fs
mov
pop
or
and
and
jne
and
cmp
fwait
out
(bad)
aas
push
lock
lods
(bad)
sbb
push
out
jae
adc
push
sahf
fs
mov
outs
stos
and
ins
jb
dec
add
sbb
push
jp
out
punpckhbw
cmp
sti
push
test
jg
aas
rcr
jmp
sbb
(bad)
pop
hlt
in
jmp
test
imul
mov
adc
sub
in
pop
and
(bad)
test
dec
pop
and
data16
adc
rcl
popa
xchg
loopne
or
in
add
mov
aad
imul
add
shl
xchg
xchg
inc
xor
fadd
and
pusha
idiv
xchg
retf
add
push
jg
test
movs
add
and
sub
pop
pop
aam
fcomp
aad
sbb
ins
ja
fisubr
lea
dec
fisttp
aad
xchg
fs
js
scas
or
pop
push
(bad)
imul
sar
cwde
leave
scas
outs
ror
fdiv
mov
bound
sub
dec
jbe
call
push
sub
pop
das
and
pop
(bad)
pop
pop
mov
xor
inc
mov
nop
jle
lods
push
inc
cmc
ds
add
je
dec
add
out
xor
je
nop
test
add
xchg
adc
pop
sub
cmp
or
pop
mov
jecxz
xlat
push
f2xm1
sahf
lahf
xor
sub
inc
int
test
or
push
jbe
lods
pushf
scas
div
fdivr
sbb
sbb
mov
ja
shl
les
or
mov
stos
sti
push
dec
mov
clc
mov
dec
jo
inc
fs
or
add
mov
xchg
ss
daa
les
pop
movs
adc
dec
fwait
pop
cmps
or
(bad)
scas
cmc
dec
cmp
cmps
rol
test
lods
stc
jl
pop
mov
mov
mov
fs
sbb
ficomp
lock
adc
and
inc
loop
in
(bad)
inc
mov
addr16
int3
or
sbb
mov
xor
xlat
sbb
out
popf
leave
or
mov
or
icebp
clc
ss
scas
pop
leave
mov
ins
xchg
es
or
shr
xchg
aaa
sub
push
fidivr
data16
es
or
sbb
gs
push
(bad)
sbb
sar
mov
idiv
cmps
cmps
(bad)
cs
ja
jns
call
pop
loope
adc
fwait
(bad)
cmp
mov
cwde
jge
and
cmp
mov
fisttp
div
mov
retf
sub
cmp
div
xor
sbb
rcr
inc
cmc
ds
push
cmp
mov
push
(bad)
fimul
mov
push
adc
sbb
push
adc
test
or
test
adc
sbb
xchg
(bad)
sub
inc
xchg
inc
aaa
mov
loopne
cwde
jmp
pop
cmp
les
adc
push
(bad)
push
(bad)
adc
cmps
ins
(bad)
les
mov
push
(bad)
test
fnstcw
outs
repz
inc
fs
sub
xor
pop
ret
mov
lods
push
mov
aam
mov
mov
stc
std
inc
sbb
std
pop
clc
and
jl
adc
outs
pusha
in
or
inc
call
and
mov
sahf
push
mov
push
fdiv
ficom
fcmovnbe
enter
mov
pop
mov
sahf
out
add
das
mov
fcmovu
xor
stos
stos
and
xor
dec
clc
inc
lock
pop
int3
jecxz
mov
push
aad
inc
sub
mov
xchg
dec
cmps
mov
push
mov
dec
and
jno
cli
adc
int
(bad)
test
push
pop
ret
inc
xchg
cs
jmp
xlat
into
and
fcom
cld
jae
cdq
sub
jo
dec
jno
sub
mov
xor
adc
push
cmp
dec
fidiv
sbb
mov
pop
inc
mov
dec
loop
push
mov
cmp
jmp
data16
push
mov
adc
mov
inc
mov
jb
dec
das
dec
or
mov
dec
pop
scas
mov
js
push
iret
xchg
aad
or
test
dec
mov
push
js
cmps
into
push
ds
adc
adc
xor
lock
jle
sub
gs
sbb
push
aad
push
dec
loop
jo
mov
inc
jo
test
inc
jb
sbb
clc
cmp
jnp
nop
pop
outs
lock
mov
aaa
dec
mov
nop
movs
pop
sbb
adc
jnp
mov
cmp
ret
movs
mov
push
sbb
fs
scas
mov
lahf
mov
cmp
mov
cmp
cs
cmp
fisttp
cmp
fld
sbb
lock
adc
mov
add
dec
pop
jge
sub
pushf
push
retf
mov
je
ja
xchg
sbb
xchg
add
pushf
(bad)
mov
sbb
movs
push
mov
inc
enter
xchg
int3
add
fisubr
stos
cmc
dec
fwait
enter
dec
push
xor
(bad)
xor
add
mov
les
dec
mov
mov
xchg
pop
cmp
sahf
push
retf
inc
adc
out
pop
sub
test
push
push
fs
mov
xchg
fisubr
cs
repz
dec
jl
repz
fcom
lea
mov
std
push
push
stos
and
mov
xor
push
popa
add
pop
pop
sahf
repz
fmul
mov
int3
shl
mov
(bad)
outs
outs
inc
fmul
int
or
cmc
push
enter
or
fs
xor
mov
test
loop
scas
pop
pop
aas
clc
fnstenv
inc
xlat
aaa
fs
sub
scas
pop
clc
in
push
ss
sub
div
mov
dec
repnz
jle
mov
or
and
sbb
xchg
dec
jae
cmp
add
aas
ret
mov
mov
adc
xchg
call
push
mov
push
inc
add
add
push
icebp
and
xchg
cmp
inc
push
and
shl
mov
fstp
fild
mov
fcomp
je
leave
adc
(bad)
int3
hlt
or
fs
mov
cmp
popf
pop
lea
jbe
test
js
cmp
out
adc
inc
pop
pop
fmul
inc
mov
nop
les
dec
int3
mov
pop
cmp
xor
dec
sbb
mov
xlat
xchg
mov
push
cdq
aaa
into
in
xor
pop
icebp
lds
movs
cwde
imul
popa
add
das
dec
or
mov
ss
mov
mov
test
aaa
scas
sbb
lea
pop
jno
cmc
xor
out
inc
pop
sbb
xor
xchg
je
adc
std
jle
push
xchg
push
cmp
nop
xchg
popf
push
inc
adc
and
jge
mov
mov
loopne
xchg
adc
lods
dec
dec
lock
aas
and
inc
jle
(bad)
sbb
clc
jecxz
test
ins
arpl
cmp
dec
pop
loop
call
jo
jmp
add
pop
popf
pop
or
sbb
and
ss
imul
sub
inc
call
mov
fild
ins
and
in
sub
jno
dec
les
xlat
sbb
clc
jae
mov
loop
mov
sub
inc
push
pop
fnclex
mov
outs
(bad)
ja
(bad)
lea
loop
and
sti
push
mov
aas
test
out
lock
xchg
sbb
add
pop
jle
and
into
stc
loope
test
aam
mov
or
shl
in
test
pop
cwde
cmp
pop
out
iret
jp
fst
cmp
jl
add
ret
loopne
xor
xchg
mov
jl
in
loop
inc
sub
push
lea
sbb
call
rcl
add
and
(bad)
xchg
retf
lds
dec
add
cld
and
pop
adc
std
inc
cmp
rol
or
sti
mov
inc
lea
(bad)
nop
add
adc
dec
xlat
sahf
inc
push
adc
aad
arpl
add
dec
cmps
cmc
je
adc
(bad)
mov
mov
add
sub
jno
xor
pop
loopne
push
fst
jns
retf
add
repz
fst
mov
clc
inc
dec
mov
or
and
cmp
xor
jmp
ret
dec
movs
hlt
push
pop
pop
dec
cmc
shr
jne
mov
aad
cmps
movs
jne
lock
loop
std
push
xchg
or
stc
retf
ret
pop
jnp
movs
adc
cli
mov
and
sub
pop
adc
mov
in
mov
xor
test
jae
mov
jne
out
add
mov
push
xor
fstp
jbe
fsubr
inc
sar
or
xchg
out
enter
in
stc
xor
mov
int3
pop
mov
dec
sub
in
in
jnp
xchg
retf
or
jmp
or
sub
sub
icebp
push
les
mov
push
xchg
mov
pop
mov
popf
repz
inc
inc
pop
mov
call
call
icebp
inc
xor
jecxz
in
mov
(bad)
retf
imul
sar
xchg
dec
(bad)
jle
jle
bound
mov
pop
pop
xor
leave
xor
call
aas
loope
pop
jns
test
adc
sbb
or
xor
push
loope
leave
pusha
pop
sbb
call
arpl
lds
jmp
inc
sub
(bad)
cli
mov
xor
push
mov
(bad)
or
aad
sbb
movs
jmp
ds
fwait
pushf
int
fimul
or
and
mov
daa
hlt
arpl
dec
fsubr
jbe
(bad)
mov
rcl
ja
cli
mov
inc
inc
sbb
pop
sbb
ss
jmp
sbb
imul
rol
jg
jno
mov
pop
(bad)
xor
jecxz
xchg
jecxz
ret
xor
in
shr
retf
in
jecxz
push
mov
and
jg
sub
inc
inc
cmp
mov
addr16
les
mov
mov
push
test
test
xor
pop
push
cmp
fsub
in
cmps
div
xor
add
and
imul
dec
inc
mov
daa
adc
lds
enter
rcl
test
add
jl
mov
std
aaa
mov
ins
inc
or
imul
xor
fwait
inc
pusha
call
xor
mov
xchg
push
stc
adc
xor
iret
jnp
jns
dec
rcl
leave
jl
mov
mov
sahf
pusha
test
fdivr
movs
shr
xor
jge
mov
je
(bad)
hlt
movs
loope
loope
je
dec
int
ret
pop
fs
movs
push
or
lds
or
cmp
cmp
lods
popf
push
sbb
mov
inc
rol
xchg
mov
addps
mov
or
jbe
push
mov
push
dec
retf
jno
jb
or
cmps
data16
cwde
sbb
push
stos
stc
jnp
imul
aaa
hlt
adc
jmp
stc
mov
or
mov
mov
imul
repnz
fs
(bad)
(bad)
scas
xor
mov
fst
xchg
and
cwde
data16
sub
dec
jle
adc
rol
mov
test
sub
std
mov
mov
mov
outs
jmp
jle
fistp
movs
pop
shl
shl
sbb
mov
test
dec
fcom
cmp
sbb
and
mov
out
ret
out
push
jnp
xchg
sahf
mov
(bad)
xor
or
mov
xchg
mov
(bad)
and
add
sbb
jno
pop
jmp
notrack
pop
inc
(bad)
stos
dec
push
(bad)
test
aam
mov
add
sbb
jp
inc
dec
adc
clc
pop
jo
inc
and
add
call
ds
aam
ret
push
pusha
xor
sub
xchg
movs
push
imul
jae
sbb
add
push
out
jle
call
movs
mov
cmc
xor
mov
mov
xor
sbb
cmc
cmps
jge
test
fwait
or
mov
pop
mov
test
clc
jp
rol
(bad)
xor
sar
push
jp
in
(bad)
(bad)
clc
aam
int
adc
sahf
xchg
in
test
mov
clc
pop
(bad)
dec
addr16
movs
dec
loop
loop
stos
ins
mov
adc
(bad)
pushf
mov
push
scas
rol
mov
sbb
pop
gs
jns
fwait
icebp
mov
mov
jmp
jo
fistp
xchg
pushf
leave
dec
xchg
adc
xchg
sub
in
push
dec
(bad)
popa
add
xchg
ds
mov
out
xchg
and
push
shl
call
repnz
cdq
pop
mov
je
sahf
mov
lahf
cmp
push
or
xchg
add
adc
(bad)
out
jno
bound
rcl
out
jecxz
lahf
sar
cs
xor
cmp
mov
sub
jbe
add
fdivr
and
les
pop
mul
mov
int3
inc
int
sbb
jns
(bad)
call
ja
jbe
iret
(bad)
out
dec
xchg
data16
fldcw
jae
mov
adc
mov
mov
push
jae
repnz
mov
test
out
mov
mov
fadd
or
dec
aaa
inc
inc
dec
jmp
inc
mov
and
sbb
pop
inc
and
xor
add
popf
shr
hlt
inc
imul
adc
ror
mov
jbe
mov
dec
mov
add
ret
pop
pop
sub
fs
xchg
adc
mov
inc
(bad)
stc
and
xlat
pop
stc
mov
gs
(bad)
arpl
aaa
neg
and
je
and
cli
sbb
jno
jmp
and
fsubr
dec
int
or
dec
aas
mov
sub
xchg
je
out
pop
(bad)
sti
cs
add
cmp
stc
or
mov
int3
addr16
dec
aaa
test
imul
and
clc
or
inc
movs
pop
pop
in
mov
sbb
sub
shl
fistp
lods
shl
aaa
stc
push
popa
dec
lock
and
in
mov
sbb
sbb
sub
mov
adc
and
pop
sub
cli
sub
into
inc
jns
pop
ficom
icebp
bound
jb
mov
aas
jns
cdq
(bad)
loop
stc
and
(bad)
mov
cmps
mov
push
ins
scas
and
icebp
jmp
cmp
mov
inc
or
mov
daa
sbb
dec
push
stc
push
dec
mov
aaa
mov
ror
adc
jbe
adc
stc
pop
out
retf
sar
fwait
std
or
push
test
shl
push
adc
mov
popf
pop
hlt
inc
add
push
stos
sbb
ds
jnp
psraw
ins
pushf
or
out
retf
adc
cs
retf
xor
xchg
popf
lahf
mov
bound
sbb
dec
fwait
adc
(bad)
mov
imul
adc
test
or
ret
in
mov
add
dec
xchg
int3
cwde
fs
jnp
repnz
cmp
call
call
push
jmp
and
icebp
jo
mov
sbb
cld
cmps
ds
add
into
gs
leave
push
dec
jbe
movs
pop
jle
data16
inc
mov
dec
push
inc
jns
push
mov
xor
inc
xchg
sbb
mov
inc
stc
adc
xor
jo
ja
pop
jmp
ss
push
movs
(bad)
push
js
daa
std
pusha
jecxz
sbb
jae
retf
fsub
push
fst
pop
aad
cdq
jge
mov
or
sbb
in
xor
inc
mov
sbb
mov
xchg
dec
shl
xchg
shl
mov
xlat
mov
jb
dec
les
aam
push
push
ficomp
mov
inc
and
jns
dec
sub
inc
mov
cmp
test
mov
cdq
xor
push
add
sub
or
jmp
pop
jmp
dec
test
cmps
scas
mov
or
sbb
neg
mov
mov
fwait
daa
pop
push
sub
int
nop
mov
int3
pushf
inc
(bad)
fisub
in
into
cmp
jge
cdq
dec
jecxz
inc
fstp
imul
add
lds
sub
sti
xchg
sar
mov
retf
mov
in
and
lock
add
(bad)
retf
sub
dec
mov
mov
pop
pop
cwde
adc
fcomp
out
and
push
(bad)
ins
xchg
dec
fwait
xlat
(bad)
call
adc
mov
shl
pop
xor
sub
sti
mov
call
cmps
add
dec
pop
cld
and
bound
(bad)
cwde
or
(bad)
mov
loopne
dec
adc
pop
xchg
cmps
jg
xor
pop
lahf
mov
div
or
scas
into
inc
in
inc
inc
adc
xchg
nop
icebp
ss
mov
es
sbb
cld
or
(bad)
adc
cmp
mov
mov
lds
push
ret
pop
or
jnp
mov
ins
adc
or
bnd
or
dec
dec
push
pop
add
(bad)
mov
pop
int
inc
pop
jns
cs
stos
popa
and
loopne
lods
pop
jae
ffree
adc
mov
pop
cdq
and
loop
sub
sbb
xchg
mov
inc
ins
repz
xlat
mov
scas
push
(bad)
test
lds
add
test
(bad)
jae
xchg
jnp
rcl
mov
jp
cmp
xchg
pop
push
nop
in
lock
push
mov
xor
mov
cmp
and
or
pop
popf
stc
sysexit
cmp
and
loopne
outs
push
(bad)
lahf
in
movs
xlat
add
xchg
mov
pop
and
pop
push
mov
xor
(bad)
xchg
jmp
jl
jne
cmp
adc
push
xchg
mov
cmp
push
repz
call
test
adc
retf
lods
cs
push
dec
aaa
popa
mov
clc
and
xchg
or
jae
repnz
je
xor
arpl
test
retf
cwde
rcr
mov
fsub
or
xchg
retf
jg
test
scas
dec
pop
std
add
sub
push
clc
jle
aam
sub
push
mov
push
mov
and
lea
lods
xchg
add
fldcw
popf
fadd
dec
mov
js
mov
push
sbb
sbb
cmp
adc
add
int3
cmp
xchg
inc
jno
scas
cmp
xchg
jns
outs
inc
mov
das
xchg
sti
mov
inc
jno
pop
push
inc
push
es
pop
cmc
ja
or
add
dec
sub
shr
jnp
mov
xchg
test
adc
shr
xor
test
imul
ror
ffree
jne
ss
and
lahf
adc
mov
hlt
xlat
xor
stos
xchg
ja
add
retf
xor
and
pop
sbb
and
jns
pop
out
pop
stc
ins
pop
pop
xchg
or
retf
sub
ins
out
les
jmp
jecxz
adc
mov
fwait
hlt
mov
jp
retf
xchg
or
leave
scas
test
inc
ins
mov
push
mov
dec
pop
adc
fiadd
sub
mov
sbb
movs
or
fld
adc
mov
or
inc
pop
inc
jae
pop
arpl
imul
out
jo
sti
pushf
fld
push
rol
ins
out
jno
push
sbb
mov
movs
mov
fisub
sub
adc
fwait
retf
shl
sub
push
cs
cld
mov
ret
ja
sbb
pop
mov
and
cld
dec
and
jno
xchg
fisttp
inc
call
sbb
cmp
ins
jl
sbb
dec
stos
mov
or
in
and
cmp
out
mov
xor
mov
jecxz
(bad)
sbb
mov
retf
cmp
not
test
repnz
jo
popf
sbb
popa
adc
pop
nop
mov
xchg
ja
jbe
retf
mov
xchg
movs
cmp
and
mov
inc
call
xor
push
loopne
loopne
sti
inc
push
push
(bad)
xchg
(bad)
and
add
mov
adc
xor
xchg
cmp
pop
dec
daa
mov
sub
daa
ds
or
inc
out
sub
movs
pop
(bad)
rcl
inc
fdiv
add
cs
loop
int
das
not
cwde
mov
cmp
inc
and
and
cmp
pop
sar
inc
sub
pop
aas
out
(bad)
xchg
iret
(bad)
cmp
push
ret
je
mov
lahf
cmp
std
push
in
out
xor
mov
rcr
sbb
sub
mov
pop
dec
mov
xchg
mov
xchg
dec
fstp
mov
fwait
(bad)
and
adc
push
test
pop
in
sti
into
or
jns
lock
cwde
sub
jo
rcr
sub
pop
icebp
push
or
dec
xor
rol
std
cmp
add
pop
sahf
sbb
mov
pop
dec
and
xchg
lahf
mov
pop
fsub
aad
add
ja
cli
cmp
shr
mov
aad
dec
inc
(bad)
out
push
popf
idiv
stc
sub
sti
mov
ja
sub
jo
(bad)
stos
jle
pusha
sar
xlat
ins
pusha
gs
cli
ss
ret
push
inc
pop
adc
mov
sub
in
(bad)
loopne
adc
xor
dec
imul
mov
ja
ds
push
push
and
jb
loop
push
push
arpl
pop
or
dec
and
retfw
call
ss
xchg
lock
std
les
leave
ins
mov
(bad)
aam
dec
jmp
add
mov
adc
xchg
ror
xchg
xchg
or
imul
ret
es
cld
jns
adc
mov
pop
fnstsw
cmp
shl
cmc
jge
xor
pushf
cdq
sahf
xchg
popf
cmp
(bad)
hlt
pop
sub
sub
pop
test
inc
mov
test
sahf
cli
mov
imul
xchg
mov
in
shl
and
sbb
mov
mov
xor
cs
mov
fsubrp
pop
mov
mov
sub
and
mov
dec
cmp
add
out
fstp
jge
stos
loop
data16
cmp
xor
mov
or
cmp
and
outs
fwait
and
mov
or
in
js
fs
test
cs
outs
push
cmc
push
xchg
lods
leave
inc
inc
(bad)
leave
sbb
cmp
test
in
mov
jle
leave
int3
jp
xor
adc
dec
cmc
stos
mov
sbb
mov
daa
pop
movs
pusha
arpl
es
cmp
xchg
mov
icebp
ja
push
mov
call
pop
data16
dec
cmp
hlt
xchg
pusha
adc
dec
xor
imul
sub
mov
mov
in
in
xlat
ja
jae
jmp
out
jp
mov
inc
popf
mov
mov
mov
and
fstp
dec
pop
(bad)
arpl
jns
dec
fldenv
push
inc
push
into
out
add
or
adc
pop
data16
sub
sub
repz
aad
mov
data16
retf
and
sbb
push
into
push
cdq
test
rcr
push
pop
pop
lods
inc
(bad)
lea
sub
retf
inc
hlt
sub
out
fsub
dec
mov
mov
dec
xor
mov
test
mov
dec
aad
cmp
dec
add
arpl
sbb
inc
test
cld
add
mov
sbb
xchg
pop
cmp
div
cmp
out
in
cmp
push
aas
(bad)
mov
jge
nop
rep
or
or
mov
out
shl
mov
je
sub
lahf
cmps
adc
out
aas
xor
imul
daa
mov
int3
mov
xchg
ins
xor
inc
inc
stc
lock
addr16
movs
push
movs
leave
add
js
pop
cwde
mov
ins
out
mov
mov
div
jp
cli
sub
loope
fdiv
fnstcw
dec
push
pushf
and
shr
bound
jne
push
jbe
call
add
lea
cdq
test
cmps
ror
loop
cld
popa
(bad)
popf
mov
push
int
xchg
xchg
pop
and
cmc
test
(bad)
retf
xor
les
shl
mov
bound
aaa
xchg
jge
inc
or
bound
ficom
arpl
jne
out
es
or
inc
sub
lods
mov
leave
mov
fs
mov
xchg
push
imul
pop
xchg
jp
push
xchg
fpatan
fisubr
mov
add
push
cdq
aam
cmps
fisttp
in
jg
inc
dec
icebp
mov
and
add
push
lahf
jbe
xchg
mov
sub
pop
pop
loope
adc
sbb
fwait
cdq
mov
loop
fimul
ficomp
pop
sbb
retf
adc
dec
lods
popf
sbb
imul
sub
mov
jp
pop
mov
xchg
ror
cmc
sbb
arpl
cmc
fistp
add
movs
mov
icebp
jns
push
daa
sub
in
jmp
in
mov
jp
mov
mov
(bad)
sbb
movs
mov
(bad)
ret
leave
cmp
mov
mov
pop
jae
test
loopne
in
adc
push
xchg
shl
aam
inc
mov
xchg
rcr
clc
scas
mov
xchg
aas
jno
movs
loop
inc
adc
pop
mov
xor
add
(bad)
xor
push
push
sub
mov
inc
add
pop
fs
xchg
dec
dec
cmp
ins
xchg
test
inc
ja
pop
loop
std
out
in
dec
push
(bad)
pop
jecxz
xor
aam
push
lea
hlt
pop
call
das
cmp
inc
retf
ret
cmp
dec
retf
neg
jae
adc
loop
fadd
mov
adc
shl
sub
cmp
mov
sub
pop
das
nop
xchg
pop
pop
mov
sbb
fmul
repz
cmp
inc
call
jb
pop
repz
inc
or
mov
sub
mov
inc
mul
mov
adc
addr16
mov
dec
jg
mov
mov
es
jp
ss
scas
(bad)
imul
adc
lock
xchg
sbb
rol
cdq
jmp
pop
mov
sahf
push
nop
and
mov
pop
nop
sub
push
movs
cdq
add
rcl
add
push
push
dec
xchg
sub
dec
dec
jle
(bad)
jg
sbb
cmc
pop
pop
data16
jo
aas
jle
mov
sub
ins
push
mov
push
adc
(bad)
xchg
sbb
mov
pop
mov
out
add
hlt
pop
sbb
out
pop
repnz
jns
les
and
add
xchg
inc
add
and
sahf
mov
in
xchg
push
ins
add
out
movs
test
mov
ins
add
test
xor
push
or
mov
fcom
icebp
cdq
sbb
adc
jno
idiv
retf
pusha
mov
jle
xchg
mov
and
call
leave
xor
je
enter
movs
inc
enter
inc
out
xor
sbb
mov
(bad)
pop
jmp
iret
(bad)
xor
inc
ds
push
shl
fs
aam
jnp
into
sbb
jmp
or
repnz
clc
in
push
sbb
mov
jns
push
fistp
mov
jb
xchg
(bad)
fmul
jo
push
pop
sahf
fstp
cdq
cmps
stos
in
jno
rcr
dec
or
jp
push
mov
out
arpl
mov
(bad)
mov
(bad)
pop
lods
sbb
es
das
popf
mov
out
xchg
push
cmp
cld
jno
bound
(bad)
mov
push
retf
or
mov
cmp
ss
fisttp
push
std
clc
mov
retf
aaa
cmp
fnstsw
shl
aas
pop
mov
sub
popa
test
xor
inc
and
int3
adc
jnp
push
xchg
out
push
imul
pop
aas
jle
inc
mov
mov
ins
xor
inc
test
inc
jmp
cli
push
cmp
test
mov
fstp
idiv
pop
loope
pushf
mov
std
les
mov
pop
dec
xor
pop
sbb
sub
in
int3
xchg
fld
pop
rcr
mov
inc
jbe
mov
cmps
fst
sub
loop
xor
mov
push
sbb
int
es
lods
shl
cmp
xchg
pusha
pop
cmp
test
dec
xor
arpl
jge
cs
outs
clc
cmp
jo
pop
sbb
push
mov
jmp
aaa
add
cmp
add
jp
cmp
popf
inc
(bad)
cli
mov
push
arpl
stos
cld
mov
shl
(bad)
dec
arpl
pop
add
cmps
mov
push
add
je
sub
sti
mov
or
mov
inc
daa
jecxz
mov
jge
dec
mov
push
data16
and
inc
je
pop
mov
xor
test
adc
or
jo
pusha
int
mov
sbb
test
mov
stc
inc
and
jecxz
gs
loopne
mov
imul
push
loope
sub
xlat
inc
pop
aam
addr16
ins
test
stos
jmp
imul
sub
push
adc
mov
sub
call
cmp
leave
add
jg
push
repnz
xor
invd
ret
push
xchg
jg
movs
mov
aad
add
jno
test
movaps
xchg
mov
shl
imul
in
pop
fchs
es
fstp
adc
jp
mov
fwait
or
in
in
test
and
sbb
inc
adc
cmp
mov
pop
aaa
pop
cmc
fcom
lds
fadd
xor
mov
lea
jae
jno
jb
(bad)
mov
jmp
mov
xchg
jp
ins
mov
mov
movs
sub
and
push
mov
ret
push
cmp
push
add
mov
idiv
sti
and
imul
lds
push
fld
inc
mov
cmp
mov
mov
repnz
dec
mov
jp
les
xchg
jne
ins
cmp
sti
sub
add
jmp
mov
fwait
lods
xchg
pop
fld
jae
retf
loopne
out
sbb
inc
ret
jnp
xchg
jae
push
xchg
push
cmp
xchg
mov
cs
pop
xor
das
aam
clc
outs
mov
cmp
arpl
jg
and
movs
pop
in
adc
pop
mov
inc
popf
jae
cld
cmps
stos
sar
cs
daa
inc
jo
fdivrp
mov
mov
jle
or
sub
das
ficomp
in
fsubrp
ins
cli
out
jg
movs
sbb
and
xor
mov
mov
sub
out
test
test
nop
in
fiadd
pop
icebp
repnz
dec
call
cmp
dec
xor
outs
mov
cmp
push
xor
test
cmp
icebp
xchg
iret
fadd
cwde
add
les
adc
adc
femms
je
dec
and
push
jg
mov
cld
outs
and
push
lock
mov
das
lds
lods
xor
fld
push
int3
jl
push
fisttp
mov
jo
or
fs
jno
xchg
push
call
repnz
sti
sub
fbstp
pop
les
mov
mov
xor
pop
mov
xor
and
icebp
lock
ret
call
sahf
inc
pop
lahf
xchg
xchg
repz
pop
adc
cmp
pop
cs
sti
icebp
or
repz
(bad)
test
js
add
mov
aam
mov
cli
(bad)
fld
xchg
(bad)
outs
mov
inc
data16
xchg
ret
pop
sbb
lods
jecxz
jbe
ret
adc
sub
inc
dec
mov
jl
sbb
ins
xor
shl
pop
aad
add
lea
and
cmp
in
pop
mov
shr
push
push
daa
xchg
dec
dec
aaa
ins
sbb
minps
outs
mov
sbb
daa
loopne
mov
inc
cwde
xlat
ds
call
jmp
fs
imul
mov
dec
arpl
lods
adc
mov
sub
mov
xchg
pop
mov
add
ficom
das
inc
mov
mov
leave
jmp
inc
sub
lock
dec
pushf
fcomp
rep
pusha
shl
loope
inc
arpl
push
not
in
jnp
repz
repnz
enter
dec
test
xchg
clc
cmp
scas
xchg
adc
lahf
ret
sub
inc
pop
retf
test
loopne
jge
inc
mov
or
xor
mov
dec
rcl
or
test
inc
xor
or
mov
jns
mov
rol
loop
(bad)
jns
xchg
int3
mov
xor
stos
stos
push
pop
mov
outs
in
aaa
add
loop
sbb
rol
and
dec
pop
xchg
mov
xchg
sub
ins
pop
call
retf
fwait
movs
jl
push
sub
cmps
jge
and
jle
js
mov
stos
inc
mov
adc
and
daa
stc
add
shl
(bad)
jmp
mov
cmp
outs
das
cmp
iret
aad
xlat
ror
addr16
xor
pop
aaa
fdivr
fcmovnu
xchg
(bad)
pushf
or
dec
into
popa
mov
pop
pop
daa
jnp
push
push
addr16
sub
push
popa
fadd
movs
sub
inc
das
loopne
fdiv
xchg
call
pushf
jge
das
push
sbb
int3
or
popf
push
pop
aaa
fldcw
and
cs
mov
mov
and
test
xor
push
sub
mov
mov
mov
loopne
lea
cmps
mov
pop
imul
sbb
xor
out
fmul
jno
jl
popa
adc
fsub
out
pop
inc
bound
pop
cmps
xlat
mov
xchg
sub
fstp
scas
in
ror
fcomp
stos
aad
sub
mov
sbb
call
jle
and
xchg
outs
int3
pop
inc
out
add
and
mov
pop
jl
loop
jmp
mov
sbb
popa
mov
movs
loop
mov
ins
add
jg
dec
sub
into
test
add
cmp
pop
inc
loopne
or
mov
mov
xchg
call
jle
retf
cdq
push
ds
cwde
sbb
xor
ins
jg
adc
pop
push
and
push
scas
fiadd
icebp
ds
stc
jno
test
enter
xchg
inc
xor
iret
shr
test
test
data16
sar
retf
and
les
inc
aam
sub
ss
in
mov
xchg
popf
daa
jecxz
and
xor
imul
mov
or
jbe
repz
pop
mov
fld
stos
retf
(bad)
mov
retf
push
and
cld
lahf
dec
mov
rcl
in
jo
push
xchg
or
or
xor
shr
(bad)
retf
ins
daa
add
xor
jo
cmp
jns
in
pop
cmp
jne
lahf
scas
cmp
lahf
cmps
bound
mov
cmp
shl
sti
xlat
xchg
mov
jb
out
add
add
mov
dec
adc
dec
xor
mov
jg
push
cmps
stc
sub
ret
fmul
or
jmp
add
into
dec
aas
push
xor
(bad)
jb
push
cmp
sub
aaa
add
xor
mov
call
push
mov
adc
pop
mov
gs
add
pop
loope
dec
js
dec
sub
cmp
inc
lods
outs
stos
ins
cmps
js
js
sub
out
mov
mov
mov
sti
push
aas
das
pop
sti
ror
das
aad
mul
jl
rcl
pop
jp
lods
stos
std
jbe
mov
xchg
and
imul
and
sbb
enter
mov
mov
call
inc
cmp
or
cbw
(bad)
sbb
xor
fsubrp
sub
fiadd
stos
leave
popf
fcom
iret
test
adc
push
mov
arpl
cmp
push
shr
hlt
mov
push
mov
je
pop
loop
out
mov
lock
push
iret
xchg
inc
sahf
div
stos
and
arpl
(bad)
or
jge
adc
pop
mov
cwde
sbb
call
xor
jb
push
loop
ret
or
sbb
fcmove
mov
lea
test
xchg
icebp
push
xchg
xor
imul
rcr
or
push
add
aaa
daa
xlat
(bad)
(bad)
int3
in
push
jmp
in
cmp
xchg
inc
xor
sar
dec
repnz
dec
jae
scas
sti
setp
es
pushf
xor
out
rcl
ja
mov
test
mov
adc
out
lods
adc
cmp
dec
mov
mov
cmps
sub
popf
pop
and
jp
cmp
push
and
mov
and
int
cmp
xor
pop
cmp
and
dec
mov
outs
fiadd
aaa
push
mov
in
pop
mov
mov
sbb
add
pop
mov
faddp
adc
test
xchg
push
call
(bad)
loop
jl
inc
in
sbb
and
xor
jns
ss
je
and
mov
cmp
push
jb
aad
inc
nop
mov
das
pop
inc
push
mov
adc
cmp
popf
pop
fld
or
and
jmp
repnz
int
test
add
fsub
jp
in
sar
in
sbb
sub
and
add
adc
js
arpl
and
loopne
add
mov
stos
(bad)
scas
inc
add
add
ret
movs
ret
cli
std
or
rol
sub
jae
pop
inc
jge
jl
adc
mov
dec
sar
and
add
mov
in
cmp
int
mul
mov
out
test
mov
fcomp
sbb
hlt
sbb
aas
and
sbb
mov
pop
lea
push
stos
div
sbb
push
pop
retf
scas
jmp
retf
ins
xchg
(bad)
aas
adc
loopne
adc
rcr
add
xor
xchg
inc
push
loope
adc
sbb
mov
aad
sbb
mov
add
popa
and
mov
xlat
dec
mov
stc
nop
inc
mov
xchg
pcmpgtd
xor
test
ret
mov
mov
xchg
push
hlt
mov
mov
lea
mov
sub
or
pop
mov
mov
std
jo
leave
out
adc
mov
call
cld
popa
(bad)
push
lods
and
sub
ins
loop
pop
xchg
jno
fidivr
cmp
rcr
shl
add
cmp
mov
call
lea
pop
adc
adc
and
ins
mov
dec
outs
nop
sub
mov
mov
or
aam
jecxz
sbb
daa
pop
outs
add
loop
jo
aaa
lods
adc
inc
pop
mov
(bad)
jae
inc
jne
push
xchg
pop
daa
scas
jl
add
ror
mov
inc
in
in
call
cdq
cmp
stos
test
into
mov
cmp
or
jle
push
outs
cld
clc
(bad)
pop
xchg
stc
ror
push
dec
mov
nop
pop
shr
mov
pop
fwait
sbb
mov
sbb
or
push
push
aad
xor
dec
jmp
fimul
popa
out
xor
into
test
push
enter
push
mov
pop
xchg
je
sbb
nop
daa
pop
cdq
inc
sub
stos
xchg
pop
jge
ficomp
sbb
popa
adc
fdiv
xchg
mov
mov
int3
lods
adc
jne
je
lock
push
cmp
mov
xor
add
and
add
movs
add
sbb
dec
in
int3
add
loop
bound
add
push
cmc
nop
ss
dec
jg
pop
push
xchg
push
mul
retf
je
(bad)
mov
push
out
neg
shr
cs
ins
js
cmp
and
leave
cwde
adc
std
aas
dec
sbb
inc
mov
loopne
mov
xlat
inc
adc
jecxz
mov
clc
or
jmp
sbb
push
stc
sbb
(bad)
mov
push
inc
retf
xchg
adc
dec
hlt
mov
add
push
or
inc
mov
(bad)
aam
retf
cs
push
push
daa
dec
fisttp
mov
cmp
add
inc
ins
and
sub
mov
aam
pop
jl
daa
or
adc
in
(bad)
pop
out
xor
arpl
jg
or
in
lods
sar
xor
pop
xor
sahf
mov
sbb
test
retf
sar
or
jge
pop
push
fdivr
pop
iret
or
dec
(bad)
dec
adc
cli
mov
cdq
mov
push
retf
inc
inc
int
sbb
cwde
jge
(bad)
xchg
int
pop
(bad)
or
xor
cli
jmp
daa
jp
ins
inc
fiadd
or
push
inc
stos
add
cmc
pop
pop
mov
lds
int3
sub
mov
xchg
scas
xchg
push
pop
lds
out
push
dec
or
jne
or
int
mov
cld
mov
cld
xlat
dec
cld
stos
fucomip
in
test
and
fadd
sbb
fmul
pop
add
dec
mov
ds
mov
sub
lods
sbb
push
mov
inc
cmp
sub
out
mov
lahf
push
and
mov
xor
aaa
pop
cld
pop
cmps
popw
rol
sbb
cmps
sub
pop
mov
pop
test
adc
pop
and
xchg
shl
add
cmp
mov
in
mov
test
aam
dec
enter
call
lahf
adc
jo
(bad)
std
iret
cmp
(bad)
dec
test
or
jecxz
inc
popf
sub
mov
sti
ja
jo
in
mov
xchg
call
xor
sar
and
sbb
pop
cmp
dec
jmp
mov
adc
fld
int3
mov
pop
pop
or
xor
pushf
push
(bad)
jle
ret
mov
mov
add
pop
shr
adc
outs
std
or
shl
arpl
test
pop
cmp
or
pop
or
out
push
sbb
cmp
loopne
mov
sub
iret
xor
xchg
imul
fcom
xchg
mov
xor
xchg
mov
in
mov
xchg
jb
xor
add
arpl
arpl
in
mov
mov
scas
sahf
mov
inc
js
and
sub
pushf
mov
mov
sub
(bad)
icebp
jg
stc
pop
add
aad
jae
xchg
(bad)
pop
aas
fld
adc
fs
cmp
vprotd
mov
jo
adc
mov
mov
mov
and
sbb
or
push
in
popf
xchg
or
push
adc
push
adc
fs
test
movs
jl
test
mov
arpl
jle
pop
enter
jae
inc
mov
test
out
and
shl
push
mov
jg
push
jno
pop
fdiv
mov
int
arpl
(bad)
jo
ins
(bad)
cli
inc
(bad)
fwait
clc
xor
sahf
xchg
(bad)
repnz
(bad)
lea
inc
push
or
pop
xchg
jns
int
shr
adc
adc
adc
cmp
adc
mov
(bad)
outs
pop
and
cdq
and
jg
cmp
enter
stos
(bad)
stos
cdq
retf
and
sub
lods
(bad)
fisub
inc
stos
xor
inc
mov
cmp
adc
cmps
pop
cs
xchg
cmps
adc
jae
or
cmp
xchg
mov
pop
inc
(bad)
inc
outs
push
pusha
lock
push
pop
pshufw
cmp
mov
jmp
sub
rol
lea
fstp
dec
mov
cli
lea
xchg
mov
pop
mov
xchg
and
push
xor
cli
push
inc
daa
neg
shl
lods
sti
stc
jecxz
fwait
cmp
mov
cmp
retf
xor
sahf
(bad)
jae
(bad)
data16
test
inc
mov
dec
dec
loopne
pop
pop
dec
aas
add
fnstsw
popa
push
mov
sar
ror
aas
ins
mov
dec
imul
pop
jno
push
dec
pop
data16
push
xor
xor
stos
xchg
cmp
add
cmps
xchg
inc
je
inc
jge
add
jnp
jmp
rcl
xor
jle
call
or
test
adc
or
jnp
adc
adc
cdq
adc
dec
add
ret
jge
mul
cmps
mov
jo
add
cwde
push
call
mov
adc
jmp
lds
mov
inc
shl
ret
fisub
into
mov
movlps
pop
and
popa
inc
test
daa
sbb
mov
mov
lds
pop
jle
push
dec
div
pop
sub
rcr
jge
inc
pop
mov
icebp
mov
sub
hlt
jo
xor
mov
clc
test
jno
jmp
sbb
repnz
cmp
aas
adc
mov
xchg
cmc
push
pop
dec
dec
or
cwde
xchg
inc
addr16
push
sbb
popf
xchg
repz
mov
mov
xlat
movs
test
pop
dec
lea
ins
pushf
pusha
sub
subps
mov
jb
add
add
xchg
in
add
imul
push
or
jb
and
jb
nop
mov
test
test
or
or
fdiv
or
not
xchg
retf
fiadd
cmps
clc
retf
mov
call
mov
call
aad
out
jmp
mov
sub
jmp
lock
mov
mov
cmp
sbb
or
or
or
cmp
or
das
ret
jmp
loop
fwait
imul
push
cmps
(bad)
fdivr
into
cmp
fsub
mov
pop
int3
xchg
(bad)
and
clc
je
fmul
std
mov
add
gs
jp
sbb
jge
rol
sbb
mov
sub
cmps
ins
pop
popa
das
imul
pop
cmp
push
fwait
pop
xchg
add
mov
cmp
(bad)
jl
ret
fisub
jo
scas
mov
mov
jnp
popf
push
sub
aad
pop
into
mov
jmp
sbb
sbb
ja
dec
cmp
xchg
pop
add
ins
push
not
pop
lods
jne
popf
push
add
sbb
dec
add
xchg
add
or
imul
lds
push
sbb
adc
xor
neg
mov
push
arpl
outs
imul
movs
scas
push
loop
movs
xchg
or
sbb
ret
out
inc
mov
mov
mov
(bad)
cmp
adc
mov
test
loop
and
retf
xchg
sub
sub
in
fidiv
ins
push
repz
inc
test
push
dec
adc
mov
jg
xor
in
mov
int3
sbb
fstp
mov
sub
cmp
in
jns
scas
in
pop
cmp
add
mov
out
bound
cmp
(bad)
jge
rol
movs
and
xchg
jb
gs
rcl
jecxz
repnz
xchg
mov
std
mov
popa
sub
add
stc
addr16
stos
mov
sub
add
sub
nop
add
mov
stc
push
inc
cmps
stos
xor
cdq
push
shl
(bad)
fs
ret
add
out
cmc
mov
hlt
xchg
out
call
retf
stc
or
pop
loopne
enter
add
inc
in
repz
sub
(bad)
imul
cmp
push
stos
(bad)
sub
pop
xchg
(bad)
ret
xchg
loop
les
and
jb
and
xor
leave
mov
and
jns
push
add
mov
sub
mov
lahf
adc
and
outs
int3
rcl
test
xchg
rcl
xor
mov
les
test
lea
and
inc
push
cmc
std
jg
xchg
xlat
sbb
ror
xor
cmps
xchg
xchg
xor
sbb
shr
sbb
jl
ja
ss
enter
cdq
xor
repnz
adc
push
outs
fidiv
jmp
lahf
dec
fcom
push
inc
(bad)
mov
std
jmp
aaa
loopne
idiv
push
adc
push
pop
sbb
aad
jg
sbb
sub
arpl
or
pop
mov
jmp
mov
ret
cmp
push
push
sub
cmps
es
cli
stc
sbb
inc
mov
in
inc
out
cmp
les
mov
cli
mov
inc
aam
cmps
pop
xchg
pusha
movs
ret
test
push
loopne
cmp
pop
imul
mov
xchg
inc
mov
lahf
ja
mov
cmps
out
inc
jo
lock
xchg
cmp
sub
aaa
retf
loopne
shr
test
scas
lods
ss
mov
mov
and
cmp
xor
not
ret
sbb
sbb
jae
aaa
dec
fidiv
retf
rol
ds
(bad)
push
push
es
hlt
inc
or
fsub
and
and
adc
fs
dec
repnz
mov
add
out
mov
inc
dec
arpl
popf
xor
imul
loop
iret
xchg
push
cmp
jno
and
(bad)
out
mov
std
push
bound
cmpps
mov
ficomp
mov
jo
das
and
inc
mov
mov
stc
cmp
and
int3
daa
pushf
fiadd
aam
xchg
sub
sar
movs
js
jnp
out
ret
xchg
mov
sub
repz
and
daa
mov
les
xor
jae
cmc
dec
fs
xchg
addr16
inc
aas
fsubr
loop
add
sub
mov
mov
mov
jbe
int
adc
(bad)
push
pop
sub
adc
or
or
inc
mov
cmp
lea
xor
frstor
and
pushf
mov
test
pop
retf
pop
cmp
jo
fwait
pop
add
pop
jnp
add
pop
(bad)
mov
stos
jle
sub
shl
jle
sub
loopne
sbb
ret
repnz
jl
mov
mov
(bad)
xor
push
retf
inc
cmp
std
pusha
icebp
mov
fcomip
xchg
pusha
jno
mov
inc
loop
lds
inc
mov
dec
mov
adc
sbb
repnz
inc
test
int
cmps
inc
jo
fdivr
push
push
pop
out
or
dec
add
jge
jle
and
(bad)
push
aam
outs
mov
ins
xlat
hlt
xchg
outs
fld
call
fs
or
add
loope
push
push
icebp
popf
cmp
inc
sti
out
icebp
mov
dec
sub
cmc
adc
push
xor
sub
shl
test
shl
jno
push
adc
stc
pop
loope
pop
imul
cmp
rol
sub
pop
mov
and
and
test
cmp
add
imul
fld
loope
or
rcl
call
cmp
std
push
mov
rcr
(bad)
jle
xchg
lods
loope
mov
(bad)
jp
jmp
bound
add
fwait
sub
jecxz
jnp
xor
mov
aad
aas
xor
rcr
(bad)
mov
mov
in
cmps
(bad)
mov
jmp
nop
xor
and
(bad)
mov
fild
(bad)
sub
add
pop
jge
mov
aad
bound
stos
(bad)
repnz
data16
sar
jno
in
jbe
xchg
xchg
popf
add
mov
out
dec
cmp
push
xchg
jl
xchg
jnp
dec
jmp
mov
cmp
mov
imul
jo
dec
bound
daa
outs
aaa
xor
sbb
out
hlt
mov
and
jns
ret
(bad)
out
inc
jns
out
jnp
mov
stos
(bad)
mov
push
repnz
mov
mov
out
jl
popf
mov
loopne
rcr
mul
jp
bound
js
mov
test
test
xor
out
int3
jb
mov
jno
leave
pop
mov
idiv
xor
clc
test
div
push
or
jo
lock
mov
mov
imul
les
ss
scas
neg
arpl
jns
fisub
jmp
dec
add
stos
mov
fs
mov
loop
arpl
(bad)
pusha
fild
jecxz
(bad)
icebp
cmp
or
(bad)
rol
out
push
push
or
repz
push
dec
ret
sar
je
cmps
fnstsw
xchg
xor
loope
enter
hlt
inc
aam
jge
sbb
repnz
imul
not
arpl
cmp
dec
and
ret
adc
outs
dec
pop
mov
mov
xor
cwde
mov
jb
addr16
cmp
aaa
xor
push
(bad)
push
retf
ins
out
add
je
push
push
imul
daa
push
ins
or
dec
inc
lock
mov
pop
inc
lods
mov
lods
cmp
sahf
sbb
sbb
mov
in
ins
jb
or
ins
mov
daa
or
bnd
popf
push
jmp
iret
push
pop
mov
pushf
stc
cwde
push
outs
cmp
mov
int
mov
or
lds
into
mov
or
xchg
vpaddd
fadd
imul
pop
mov
ficom
cld
movs
jmp
jmp
pop
mov
int
cmp
push
int3
push
es
sbb
aam
hlt
and
jl
cmp
inc
dec
test
jg
or
xchg
adc
mov
jne
jge
mov
shr
xchg
push
fstp
cmp
and
loopne
xchg
(bad)
cs
cld
inc
out
cmp
xchg
das
cmp
call
(bad)
shr
ret
dec
div
or
adc
stos
cli
jb
xchg
mov
jp
xchg
cmp
add
xor
mov
fist
mov
or
xor
mov
(bad)
je
cmp
push
or
lea
out
repz
add
stos
sbb
dec
fnsave
fld
mov
mov
or
mov
ja
inc
xchg
dec
mov
hlt
pop
adc
(bad)
push
mov
jns
and
and
movs
jl
popa
daa
adc
add
(bad)
dec
into
into
jae
lea
cmp
sub
test
dec
sub
das
popa
mov
push
pusha
adc
push
popf
mov
scas
jnp
adc
hlt
and
xchg
mov
dec
addr16
jle
repz
cdq
fistp
arpl
and
xor
adc
retf
ins
and
sub
cwde
repz
inc
imul
pop
out
mov
rol
xchg
inc
(bad)
sub
jmp
in
es
adc
jmp
ins
std
push
(bad)
cs
mov
outs
push
adc
cld
jmp
inc
mov
shr
pop
push
add
sar
push
pop
cmps
jns
test
popa
or
idiv
retf
stos
add
iret
xchg
cdq
xchg
ret
pop
pop
fbstp
fisttp
inc
xchg
inc
fstp
push
push
lea
test
nop
jecxz
cmp
pop
cmc
lds
cwde
sbb
lods
adc
adc
mov
dec
xor
or
out
mov
mov
pop
addr16
sahf
call
in
mov
xor
or
pop
push
pop
sub
inc
push
mov
add
and
dec
test
mov
cmp
jb
dec
jne
outs
cmp
or
add
xchg
test
arpl
and
jae
iret
jne
sub
jae
imul
mov
jo
push
sbb
or
movs
loopne
aas
and
gs
test
xor
aad
and
loop
mov
lahf
cli
xchg
xchg
out
add
mov
xchg
ds
dec
inc
push
jns
xchg
repnz
jle
jg
bswap
push
or
jne
xchg
push
iret
sub
das
cmp
aas
and
mov
fisttp
add
loop
mov
cdq
retf
mov
scas
jbe
push
call
mov
xchg
sub
aam
cwde
outs
and
push
and
push
jge
mov
push
jmp
hlt
push
pop
xor
mov
popa
aas
mov
adc
cld
pop
mov
inc
jb
sub
sar
inc
xchg
jmp
out
xchg
sbb
outs
call
dec
cld
adc
loop
and
xlat
mov
repnz
push
push
mov
cmps
xchg
and
xchg
fsub
or
sbb
je
aas
jbe
mov
loope
mov
aas
(bad)
int3
pop
test
mov
lods
fwait
iret
sub
xchg
clc
int
xor
cmp
inc
mov
xlat
push
leave
xchg
scas
cmpxchg8b
(bad)
iret
fstp
and
(bad)
pop
xchg
mov
jp
jle
mov
mov
mov
cmps
inc
ficomp
ja
rol
iret
jp
add
scas
sbb
add
imul
int3
adc
scas
sar
mov
mov
fisub
xchg
shl
mov
cmps
push
dec
sub
sbb
es
aas
cmp
pushf
jge
fidiv
mov
xor
inc
mov
stos
add
outs
xor
inc
and
and
jmp
mov
xor
or
test
stc
clc
inc
fucomi
into
jmp
scas
xchg
ja
fsubrp
sbb
call
addr16
pop
pop
mov
and
jge
mov
out
push
or
popa
not
sti
xchg
sbb
add
xor
arpl
push
lea
js
call
mov
push
or
inc
call
clc
(bad)
not
sub
repz
xlat
sbb
push
jae
or
mov
sub
ins
lsl
loop
add
or
or
leave
lahf
inc
pop
adc
repnz
(bad)
loop
loope
loope
test
jnp
add
cmc
ins
pusha
cld
xor
adc
sahf
(bad)
nop
rcr
jno
(bad)
fucompp
rol
shl
push
icebp
lock
imul
mov
push
push
xor
pop
iret
cmps
jl
aas
test
xchg
adc
lods
mov
jmp
hlt
ror
add
cmp
mov
push
fwait
mov
jp
das
pop
sbb
ud1
cdq
push
cs
jmp
fcomi
popf
and
es
pop
aaa
xchg
cmc
sub
lods
add
mov
movs
adc
jmp
pop
(bad)
scas
inc
int
out
ja
pusha
fcom
(bad)
add
das
call
sbb
inc
sbb
jmp
(bad)
shl
mov
inc
mov
pop
push
jnp
out
sbb
xchg
xchg
rcr
mov
out
ficomp
retf
add
xchg
cmps
pop
lods
jns
push
xchg
inc
mov
adc
rcl
xchg
jno
xchg
fist
mov
jle
sub
inc
jmp
les
in
rol
sbb
jae
or
iret
int3
test
pusha
adc
xor
or
call
(bad)
push
and
test
or
daa
mov
jno
or
enter
xchg
int3
outs
in
cwde
test
imul
sub
fcom
pop
xor
mov
(bad)
loop
icebp
bound
cli
lods
clc
leave
lock
jg
lahf
sub
int
(bad)
jns
push
push
dec
push
cmps
mov
fcmovb
or
sub
pushf
inc
imul
jmp
ror
adc
movs
into
jecxz
pushf
jge
int3
adc
inc
cdq
jne
inc
xor
jg
push
xlat
rcr
add
(bad)
jnp
retf
in
push
outs
stc
data16
daa
hlt
jo
adc
dec
push
pushf
push
ins
dec
mov
je
stos
jbe
pop
call
retf
inc
mov
or
mov
clc
stos
js
mov
hlt
pusha
lahf
inc
cmp
or
mov
dec
push
wbinvd
mov
(bad)
adc
fcom
call
in
movs
jle
neg
sbb
in
mov
xor
cmp
repz
jns
sub
cmps
xor
cmp
jg
push
add
xlat
or
test
ret
xchg
sbb
xchg
jle
sub
or
int
xor
push
enter
(bad)
not
fcomp
pop
jb
icebp
sbb
inc
pop
push
jnp
nop
retf
rcl
out
clc
pop
shl
leave
(bad)
mov
repnz
mov
mov
stos
aas
pop
sub
pop
mov
test
sub
mov
add
movs
(bad)
in
into
aam
or
push
(bad)
cmc
xor
(bad)
pop
test
out
dec
cmc
dec
add
jle
in
cmps
dec
idiv
add
imul
push
ja
dec
(bad)
ja
xor
sbb
and
and
dec
out
scas
pusha
fist
jne
push
fcom
loop
lods
call
xchg
sub
into
shl
int
inc
lahf
add
mov
cwde
movs
int3
mov
xchg
cmp
popa
clc
fild
sub
fild
mov
outs
pop
mov
sbb
aad
xor
add
arpl
push
xchg
inc
stos
mov
mov
outs
mov
cdq
cmp
mov
xlat
sub
jmp
inc
mov
mov
mov
sti
shr
fld
pavgw
div
pop
arpl
adc
aam
mov
lds
loop
inc
mov
fld
pop
int3
and
shl
and
sbb
inc
out
mov
(bad)
clc
aad
stc
cmp
sub
add
add
or
inc
pop
add
jge
mov
add
repnz
imul
mov
(bad)
bound
lods
out
icebp
mov
inc
mov
dec
retf
add
cmp
icebp
dec
scas
cdq
imul
fdivr
cmc
cmps
mov
push
push
gs
xchg
ss
push
fdivr
loope
cs
pop
stos
cwde
movs
xor
in
xor
cmp
or
test
jbe
or
movs
mov
add
mov
add
sar
inc
(bad)
dec
adc
cmps
inc
call
xor
lods
int
and
add
xor
add
cmp
ds
push
test
(bad)
movs
adc
fucom
dec
fimul
retf
jecxz
push
xchg
ds
dec
pop
js
sub
test
mov
pop
in
add
push
in
xchg
and
dec
mov
mov
mov
fistp
xlat
pop
test
push
je
fld
xchg
in
rcl
mov
add
dec
push
push
jl
daa
lods
and
ins
dec
(bad)
xchg
xlat
jecxz
sbb
fs
icebp
mov
cmps
push
dec
mov
loop
inc
add
imul
xor
mov
and
dec
jg
adc
fsubr
js
(bad)
aam
and
call
cdq
fxch
jge
adc
ja
test
in
jp
mov
shl
out
push
add
jmp
xor
ret
mov
xor
or
leave
loop
repnz
mov
push
sar
mov
outs
xchg
cld
add
cmp
loope
or
or
jmp
add
jmp
fdiv
fwait
and
jno
and
fxch
mov
mov
das
push
sar
icebp
(bad)
mov
fdivr
hlt
xor
or
loop
add
shl
and
and
stos
or
stc
(bad)
es
cmp
and
inc
neg
mov
ins
imul
cmp
mov
cmp
in
add
idiv
call
adc
stos
dec
mov
and
arpl
push
xor
ss
adc
leave
popf
sbb
fwait
pop
adc
mov
pop
add
imul
push
and
or
push
push
dec
mov
out
repnz
jmp
add
pop
xor
imul
push
inc
sbb
cvttps2pi
mov
push
add
jne
sub
fs
je
(bad)
pop
inc
xor
test
js
adc
pop
inc
sub
cmp
mov
bound
inc
ret
test
sbb
jecxz
xchg
jb
push
(bad)
mov
cmp
cmps
into
pushf
and
in
lock
lahf
daa
inc
inc
mov
or
jno
cli
and
icebp
retf
push
jo
jnp
mov
dec
cmp
and
(bad)
jnp
addr16
clc
fimul
out
loopne
mov
lahf
mov
xchg
mov
xchg
xor
mov
scas
cli
jecxz
sbb
push
repnz
and
add
retf
movs
neg
(bad)
repz
sbb
jp
sub
outs
xchg
pop
push
bswap
movs
stc
cmc
call
adc
js
mov
outs
nop
sbb
pop
cmp
test
mov
mov
xor
pop
inc
sti
adc
sbb
sbb
test
mov
mov
imul
shl
pushf
hlt
xchg
retf
movs
inc
int3
addr16
stos
mov
sub
daa
push
lock
sub
xchg
loop
jp
mov
ins
jecxz
test
out
retf
dec
sub
hlt
mov
lds
cmp
add
call
jae
jo
les
into
pop
invd
pop
sub
sar
pop
add
(bad)
arpl
add
leave
inc
sub
sti
dec
cmps
sbb
mov
dec
push
cwde
and
jle
enter
out
js
(bad)
sahf
push
push
mov
mov
and
inc
xlat
inc
aad
xchg
rcl
jmp
dec
loopne
fist
mov
pop
(bad)
jae
test
xor
call
ins
les
out
push
push
or
test
mov
jnp
jmp
cmp
jne
enter
and
xchg
xor
js
add
cmp
jbe
lahf
cmp
mov
cmp
(bad)
test
mov
jl
ret
sub
clc
fistp
mul
add
sbb
adc
xor
xchg
xor
(bad)
mov
cmc
dec
test
das
jno
mov
pop
retf
(bad)
xlat
mov
inc
fstp
and
cdq
es
ret
movs
leave
cmps
jge
inc
xchg
and
js
shr
mov
ret
jg
cmp
sbb
mov
pop
rol
jns
dec
pop
cmp
mov
fisub
mov
call
mov
js
not
pop
or
mov
sub
shr
mov
jo
repnz
push
in
sub
mov
sahf
add
scas
ins
xchg
sbb
pusha
loop
sbb
cs
adc
shl
or
or
les
inc
sub
scas
aas
mov
mov
push
jp
jbe
aam
mov
int3
push
xchg
add
sbb
repnz
and
loopne
cli
stos
inc
cld
sbb
ss
test
mov
outs
push
dec
dec
ret
or
adc
sbb
inc
ja
scas
out
adc
(bad)
pop
pop
cdq
and
mov
les
mov
mov
daa
mov
sub
cmp
mov
and
push
push
pop
popa
sbb
pop
lods
lea
jae
add
sbb
mov
pop
(bad)
and
mov
pusha
ror
(bad)
jnp
add
mov
mov
jnp
cli
xor
dec
in
hlt
add
aas
inc
dec
cmc
ins
mov
push
repz
mov
mov
call
jg
add
rcr
lods
stos
(bad)
mov
adc
lahf
mov
push
cwde
inc
and
sub
into
stos
out
loope
fcomp
xchg
xchg
jge
repz
fimul
sub
and
and
out
int
mov
pop
push
cmp
or
test
ret
mov
mov
dec
movs
cmp
aad
sbb
cli
scas
push
pushf
mov
jecxz
outs
or
sti
enter
pop
loopne
test
js
mov
mov
pop
or
scas
jnp
pop
or
pop
xor
or
mov
sahf
std
dec
jo
ds
in
add
rcr
adc
clc
cmp
push
leave
das
mov
inc
jp
mov
xchg
mov
push
mov
add
dec
fdiv
mov
ins
inc
jbe
neg
(bad)
ror
rcr
scas
sub
(bad)
retf
out
movs
or
mov
sbb
jne
popf
test
add
dec
push
push
and
outs
cmps
pusha
sbb
mov
ret
vxorpd
cmp
push
and
ret
dec
adc
lds
or
test
cs
call
dec
cmp
xchg
je
adc
into
out
push
sbb
mov
mov
and
popa
shl
sti
add
pop
sub
scas
xchg
lock
pop
cmp
mov
lock
push
or
sub
popf
and
addr16
cmp
outs
sub
mov
fadd
sub
pushf
adc
jo
rol
jns
in
pop
ss
dec
push
pop
(bad)
std
sbb
nop
fild
imul
and
pop
fimul
in
ins
pop
push
out
int3
lahf
or
dec
push
add
sbb
in
jmp
xor
pop
bound
and
pop
cmps
movs
push
mov
lea
fimul
sbb
and
xchg
aaa
repz
pop
fisttp
dec
nop
adc
repnz
jp
pop
ror
repz
cmp
cmps
int3
push
test
sbb
or
loop
fs
aas
push
aas
pop
fbstp
sub
xor
ins
shr
inc
xor
pop
pop
fsubr
add
xlat
retf
imul
mov
push
or
popa
std
in
aam
sar
fdiv
xor
rcl
ret
cmp
in
pop
mov
sti
shl
stos
sub
loop
fisub
pop
addr16
aam
test
sbb
pusha
add
push
jne
adc
repz
jnp
pop
xchg
(bad)
sub
xchg
add
mov
xchg
add
adc
(bad)
arpl
mov
movs
call
push
(bad)
retf
jmp
push
jecxz
fnstcw
sbb
scas
xchg
and
and
jmp
push
jmp
out
mov
adc
out
jge
pop
adc
test
test
push
rcr
cs
rol
cmp
shr
ret
inc
pop
movs
ins
sbb
pop
out
mov
pop
in
adc
(bad)
adc
pop
mov
pushf
mov
ret
daa
(bad)
lahf
popa
push
dec
mov
jb
mov
cmp
jmp
push
and
jge
sub
or
xor
cmp
fnsave
ror
stos
cmp
mov
xor
xchg
xor
mov
inc
bound
cmp
adc
lods
lahf
xchg
lods
mov
cmps
sbb
add
out
pop
push
sbb
or
pop
push
lea
cmp
out
stc
mov
xchg
jmp
jmp
and
icebp
shl
cmp
cmp
cmp
jbe
and
jp
jecxz
iret
mov
mul
push
push
hlt
or
xor
mov
or
push
shl
popa
push
rcr
lahf
pop
pop
(bad)
xor
pop
cld
mov
aad
shr
iret
nop
add
aaa
stos
inc
mov
cmp
push
push
ins
cdq
mov
push
pop
fwait
pop
xchg
lods
push
pop
mov
fwait
cmp
push
add
shl
(bad)
adc
aam
mov
cmp
aas
push
pop
jb
repnz
cwde
jl
and
jbe
sbb
ret
sbb
movs
movs
push
inc
push
pop
dec
mov
xor
jno
fwait
mov
cmp
cwde
fwait
movs
sar
leave
out
adc
imul
cld
aas
push
pushf
sub
loopne
and
mov
mov
cwde
mov
fisubr
ret
lahf
lds
mov
repnz
hlt
jecxz
dec
mov
scas
imul
mov
mov
in
cmp
fcom
mov
mov
and
aam
inc
mov
mov
sar
iret
xchg
test
jle
cmp
aaa
(bad)
push
sbb
daa
retf
mov
push
pusha
fidivr
test
ret
lock
push
ror
enter
or
jnp
je
dec
cmp
test
and
loopne
leave
das
jne
arpl
jbe
push
push
mov
sub
popf
push
fwait
push
test
dec
jl
jns
xchg
sub
push
and
and
cmp
popa
mov
xor
ror
mov
push
aas
ficom
and
add
rcr
ja
cmps
xchg
push
add
jg
push
ins
adc
ret
test
aas
push
push
xor
sub
out
jmp
xchg
(bad)
cmp
arpl
add
les
dec
dec
fist
mov
cmp
add
popa
test
dec
out
daa
add
sar
jge
in
cmp
outs
test
pop
(bad)
out
(bad)
cld
enter
icebp
xchg
cs
xchg
push
scas
pop
cmp
out
and
retf
cmps
(bad)
mov
nop
pop
dec
mov
int3
inc
or
xor
lock
jmp
mov
call
push
cmps
retf
cmp
adc
xchg
push
ja
or
xchg
(bad)
adc
or
je
inc
jo
xor
aad
movs
mov
aam
test
mov
stc
xchg
std
push
hlt
rcl
jl
aaa
stos
call
shl
je
pushf
(bad)
lods
cmp
add
push
mov
mov
cmc
pop
mov
cmp
xor
jmp
rcr
cmp
hlt
jmp
mov
test
arpl
inc
sub
fild
cli
lahf
xor
sbb
mov
push
cmp
data16
mov
mov
inc
aas
pop
inc
and
adc
(bad)
cld
mov
inc
add
push
enter
push
stos
fs
lds
xchg
dec
cmc
mov
repz
icebp
xchg
sbb
xchg
repz
pop
sub
shr
jecxz
push
stos
cmovbe
mov
inc
ret
addr16
or
(bad)
repz
mov
pop
or
mov
(bad)
mov
scas
sub
retf
cmp
push
(bad)
bound
adc
ret
jge
push
xchg
rcl
cmp
and
scas
ret
je
cmps
add
sbb
out
mov
sahf
xlat
xor
inc
test
ret
jp
push
in
ror
mov
inc
mov
sub
push
xor
xchg
sbb
repz
push
pop
jne
xchg
xchg
loop
ds
outs
jne
mov
lock
aam
xchg
fidiv
loopne
lea
xchg
aas
(bad)
hlt
aaa
repnz
sbb
xchg
cmp
sbb
(bad)
popa
inc
or
cmps
or
pop
add
xchg
or
aaa
cmp
mov
lahf
jns
cmp
rcl
xlat
stos
nop
pop
fisub
(bad)
(bad)
mov
xor
ss
out
mov
arpl
mov
push
sbb
mov
clc
cmp
es
lock
pop
sbb
xchg
je
imul
mov
lods
or
lock
(bad)
mov
jp
stos
fistp
sbb
sub
pop
mov
(bad)
jmp
movs
adc
test
sbb
(bad)
addr16
sub
cld
adc
push
mov
pop
es
mov
sbb
or
xchg
ficomp
fwait
cmp
mov
jmp
scas
xchg
cmp
add
jp
aaa
sti
test
push
sub
lods
stos
cmc
adc
shr
push
sub
dec
add
ret
sub
push
inc
mov
fwait
adc
or
lahf
and
adc
mov
xor
xchg
mov
das
inc
fwait
push
data16
fsubr
jp
(bad)
(bad)
fnstsw
rol
pop
test
xor
fs
retf
push
nop
loop
push
es
or
sbb
call
sbb
mov
or
or
or
pop
sbb
in
div
repnz
cmp
xchg
in
popa
sbb
mov
pop
xchg
jo
mov
sbb
ja
adc
in
fistp
sbb
adc
nop
mov
mov
add
mov
cdq
pop
adc
sbb
or
xchg
popa
cmp
jo
mov
movs
(bad)
lods
inc
jo
lods
xor
jp
dec
mov
cmp
mov
jl
push
and
out
fsub
inc
jle
fnstsw
and
pop
mov
outs
jmp
fcom
dec
or
idiv
inc
adc
xchg
out
xor
lock
sub
not
bound
inc
stos
scas
test
or
lock
ins
jmp
lock
push
xor
mov
inc
pop
sbb
addr16
dec
push
push
sbb
cs
bound
rol
mov
pop
iret
add
shl
sbb
pop
pop
sub
pop
mov
add
pop
loopne
push
mov
(bad)
popf
(bad)
(bad)
mov
imul
popa
push
cmc
call
int3
int
lea
les
retf
cdq
popf
and
mov
sti
mov
xchg
xor
mov
fdivr
test
inc
lds
ins
fimul
aaa
push
sbb
jne
mov
sub
imul
(bad)
mov
bound
sbb
jmp
jmp
cli
rcl
push
sbb
test
adc
enter
xor
ror
lods
xor
jmp
xor
cmp
pusha
add
inc
dec
jmp
dec
push
jbe
xchg
and
mov
fsubr
out
inc
sbb
adc
mov
cmp
inc
add
sub
or
pop
js
pop
lods
test
sub
mov
icebp
ja
das
ror
mov
out
or
imul
push
repnz
test
inc
mov
aaa
imul
dec
fnstsw
pop
mov
inc
sub
inc
cwde
adc
push
out
in
sbb
mov
gs
mov
cs
(bad)
mov
push
cmps
aaa
sbb
(bad)
ror
xor
addr16
jbe
mov
rcl
movs
in
add
mov
mov
bound
inc
in
jno
cdq
push
ds
(bad)
out
push
or
or
stc
jmp
dec
pop
push
in
jecxz
dec
(bad)
fs
mov
pop
jne
xchg
retf
and
ficomp
popa
lock
aas
mov
add
loop
cmp
mov
std
fs
enter
aam
xchg
mov
ds
xchg
xchg
int
inc
inc
jmp
dec
mov
or
jbe
sbb
bound
retf
add
add
call
adc
add
pop
xor
push
inc
mov
xchg
dec
(bad)
push
into
ds
or
cmp
clc
sub
push
sbb
retf
mov
dec
aas
inc
fsubr
or
popa
add
mul
(bad)
(bad)
rcl
cmp
das
cmp
std
int3
out
cmp
pop
push
dec
push
repz
ret
dec
and
or
inc
push
cld
jmp
or
mov
jbe
xchg
movs
fs
mov
dec
pusha
xchg
call
xor
scas
ror
sbb
dec
mov
nop
data16
movs
cli
push
sbb
xlat
mov
cmp
jl
adc
sub
lods
(bad)
aaa
std
sbb
int
xor
sub
shl
sbb
adc
dec
push
out
int
sar
xor
cmp
(bad)
inc
scas
fwait
pushf
stos
and
mov
call
pop
aas
pop
mov
add
fcmovnu
lods
jecxz
push
imul
mov
mov
inc
pop
pop
xor
jl
(bad)
fs
and
xor
push
inc
adc
jbe
in
mov
aas
xor
jp
dec
pushf
shl
pop
xchg
mov
push
cmp
inc
loopne
js
push
push
popa
scas
push
lock
clc
scas
and
xchg
loopne
inc
popa
scas
sahf
icebp
push
sahf
loopne
lds
fwait
mov
push
(bad)
jbe
mov
test
xchg
in
(bad)
jecxz
inc
daa
add
xor
cmp
mov
rcl
(bad)
adc
push
outs
sbb
arpl
cld
je
repz
sbb
push
cld
ja
clc
inc
int
or
out
sbb
int
mov
cmp
in
mov
mov
or
cmp
cdq
test
sbb
xchg
shr
sbb
push
cld
sahf
pop
fmul
aas
dec
lds
(bad)
jne
dec
stos
jae
mov
cmps
cwde
pop
add
sbb
into
pop
xchg
mov
sbb
and
mov
jne
inc
not
push
dec
inc
pop
jb
(bad)
jae
dec
popa
fsubr
lahf
or
jo
jmp
inc
test
and
mov
lods
fld
or
imul
and
cmp
cmp
xor
addr16
push
movs
stos
mov
mov
test
and
pushf
test
addr16
bound
outs
imul
cmp
stc
mov
clc
sub
jae
sub
push
inc
mov
and
sub
mov
fist
fidiv
fmul
dec
mov
cwde
dec
(bad)
sub
ins
and
pop
xchg
push
test
xchg
mov
stos
retf
jnp
sub
push
popa
enter
icebp
xor
inc
aad
dec
ror
retf
jp
test
lahf
mov
xchg
mov
ss
or
mov
inc
xor
clc
push
ins
mov
mov
call
xor
mov
fwait
sub
jno
push
popf
test
lds
in
sbb
xchg
sbb
sahf
xor
mov
adc
push
push
jmp
call
xor
cwde
dec
jge
sub
clc
xor
dec
pop
inc
push
adc
jno
and
fist
addr16
enter
xchg
pop
sti
jbe
shl
mov
jp
(bad)
scas
or
cmp
dec
adc
push
fsubr
movs
(bad)
iret
(bad)
push
ins
rcpps
out
or
pop
scas
and
mov
imul
shl
jb
jns
cdq
mov
aam
outs
mov
and
imul
mov
jmp
sub
shl
aad
xchg
pop
mov
jle
popf
pop
ins
mov
test
and
outs
mov
xor
ins
stos
cmp
inc
repnz
(bad)
ss
dec
pop
jnp
test
mov
xor
cmc
into
fnstenv
add
std
cmp
sub
and
fwait
aad
xor
xchg
movs
out
ror
sbb
sub
je
jg
lea
pop
pop
push
mov
mov
inc
in
pop
movs
xchg
dec
into
xchg
(bad)
xchg
stc
xchg
in
jg
pop
pushf
add
jne
scas
adc
mov
das
sti
(bad)
les
jecxz
dec
xor
pop
retf
push
(bad)
(bad)
push
lock
ins
pop
jne
hlt
pusha
jae
sbb
ins
and
jl
push
mov
ds
fadd
test
mov
xchg
mov
jns
int
pusha
sbb
cdq
dec
(bad)
in
and
pop
cmc
fidivr
sbb
mov
daa
cmp
xchg
sbb
lahf
in
sbb
in
les
jb
dec
inc
rcr
out
icebp
mov
rol
xor
xchg
out
out
dec
mov
repnz
je
test
mov
ins
shr
inc
or
out
pop
sub
gs
xor
pop
mov
and
data16
pop
xor
jae
test
push
adc
cmp
arpl
xchg
stc
(bad)
repnz
fcom
(bad)
dec
xchg
dec
mov
inc
xchg
arpl
rcl
jno
mov
push
call
push
clc
mov
lea
xchg
sub
xchg
jecxz
je
sti
sahf
xlat
sbb
pop
pop
jle
add
mov
mov
cmp
enter
add
nop
sbb
loope
xchg
or
push
addr16
dec
loop
mov
sbb
ds
mov
stos
frstor
in
ror
sub
sar
cmp
test
push
into
popf
xchg
std
mov
pop
mov
mov
lahf
xchg
popf
mov
enter
push
out
inc
int
mov
cmp
fdiv
test
cld
movs
sub
mov
xchg
call
push
or
ret
cmp
in
push
addr16
add
mov
jmp
pop
nop
cmp
adc
xor
cmp
arpl
dec
loopne
daa
jbe
rcl
(bad)
aam
inc
out
jns
jl
or
aaa
aas
repz
mov
pop
call
pop
jg
xchg
fst
cwde
fs
mov
jbe
jne
push
mov
mov
inc
pushf
xor
add
jno
jge
cmps
adc
(bad)
jle
mov
mov
cmp
push
sub
jnp
cmp
mov
rol
jge
lahf
xlat
and
xor
cwde
and
xchg
mov
cwde
(bad)
cli
push
jg
scas
pop
xlat
xor
loopne
or
and
test
cli
push
loop
out
sub
mov
dec
dec
(bad)
adc
out
imul
adc
adc
dec
jns
repnz
jne
mov
lds
and
jae
neg
xchg
rcl
aaa
adc
cmps
adc
les
sbb
add
mov
xchg
lock
leave
out
mov
test
cwde
cwde
jno
retf
and
mov
shr
mov
add
dec
sub
sbb
ret
les
mov
mov
sti
adc
cli
addr16
ins
add
push
xor
xchg
jmp
punpckhdq
pop
add
xchg
or
lods
xor
jnp
loope
push
inc
sub
push
adc
add
push
add
jmp
pop
adc
mov
mov
shr
cmps
jo
daa
mov
retf
jg
fwait
imul
ret
pusha
jb
sub
cmp
sub
add
imul
sub
pop
cmc
mov
aaa
cmc
cmp
adc
sbb
pop
fwait
pop
inc
(bad)
test
cmp
loop
cmps
ficomp
push
mov
push
xlat
or
xor
enter
pop
adc
mov
dec
fldenv
sub
pop
xchg
mov
adc
mov
dec
sbb
sub
pop
and
and
aas
aad
and
xor
lds
lods
ds
mov
and
leave
(bad)
fdivr
dec
sub
xchg
enter
push
cmp
mov
push
cwde
bound
shr
test
sub
fistp
std
adc
xor
mov
loopne
inc
push
fsubr
loop
sub
fst
stos
mov
inc
sbb
pop
sub
add
cmps
out
push
ret
pop
add
(bad)
dec
mov
fidivr
fnsave
jg
pushf
jl
mov
and
inc
mov
jg
hlt
xor
cmc
test
fist
pusha
dec
(bad)
pusha
nop
adc
mov
jns
adc
add
arpl
adc
cli
push
repnz
sti
and
movs
and
cs
fmul
lds
not
dec
pop
sub
xlat
mov
icebp
adc
enter
ret
les
ins
stos
(bad)
mov
cmp
ss
cmp
das
inc
in
out
or
mov
cmp
push
push
cmp
movs
pop
stc
sub
jnp
mov
jne
hlt
mov
cmp
push
push
pop
je
sti
aad
inc
fstp
loop
add
out
clc
or
dec
leave
ins
mov
ftst
je
(bad)
and
xchg
jbe
test
mov
jmp
add
fcmovu
add
xor
or
dec
xchg
pusha
les
ins
stos
adc
push
inc
imul
inc
loopne
push
daa
fwait
ror
inc
mov
inc
push
sahf
jle
jnp
pusha
pusha
push
mov
mov
aad
das
sti
leave
xor
(bad)
scas
hlt
mov
mov
xchg
cmp
(bad)
ffree
xchg
pop
mov
add
mov
jbe
fidivr
xchg
popa
and
pop
xchg
repnz
(bad)
cld
jecxz
test
or
add
push
mov
push
push
or
and
cmps
mov
or
ins
jb
jb
sub
test
in
retf
dec
inc
push
add
jg
mov
or
add
inc
adc
pop
imul
cmp
jecxz
vaddps
nop
cmp
sbb
sbb
inc
scas
pop
test
mov
adc
push
outs
pusha
add
mov
arpl
inc
test
inc
mov
(bad)
lock
add
out
mov
inc
adc
or
movs
fnstenv
cld
push
add
or
mov
dec
inc
push
and
test
push
hlt
shl
push
mov
or
les
scas
dec
movs
mov
inc
xchg
inc
rcr
mov
xchg
jge
lods
sub
mov
cmc
and
data16
rol
out
and
mov
test
es
sub
cwde
pop
mov
cmp
sbb
cmp
xchg
out
loope
mov
out
mov
cmps
stos
pop
xlat
or
jge
out
mov
aam
movs
sbb
out
mov
xor
stos
adc
inc
push
(bad)
pop
add
push
push
cmp
cs
retf
push
mov
jmp
aas
imul
dec
sbb
mov
and
push
and
pop
call
jnp
push
sub
jg
xchg
mov
inc
stos
sbb
out
jae
mov
aas
jnp
cdq
(bad)
jge
pop
mov
lea
jno
dec
cmp
xchg
bound
mov
mov
dec
mov
lods
fptan
adc
inc
sub
retf
pop
pop
jmp
cmp
jne
ins
xchg
xchg
fcmove
sbb
push
lds
addr16
pop
or
cmps
aaa
push
inc
pop
mov
in
jbe
mov
(bad)
das
mov
add
or
fdiv
stc
sbb
sbb
sar
push
lds
mov
inc
push
cmp
and
pop
add
xchg
add
pop
mov
out
xchg
jge
jmp
in
aam
xor
sahf
dec
cs
sub
loopne
push
rcl
cwde
cld
daa
aaa
push
int
cdq
mov
shl
cmp
in
xchg
sar
push
sub
jmp
les
test
out
jp
mov
iret
jb
mov
stc
xchg
lock
imul
pop
adc
cmps
dec
and
push
jmp
data16
aas
xor
aam
ds
loope
bound
icebp
or
bound
fidivr
sub
jns
xor
or
fwait
gs
es
xchg
sahf
out
mov
imul
(bad)
jo
add
push
adc
or
push
xchg
icebp
scas
test
sbb
jmp
inc
or
dec
icebp
push
adc
and
fsubp
dec
lea
push
inc
es
push
std
jns
fsubr
mov
test
push
mov
popf
ins
inc
call
pop
lea
popf
add
aaa
movs
test
adc
sbb
outs
hlt
(bad)
stc
loopne
(bad)
push
jmp
in
and
or
xor
jl
scas
outs
enter
jge
jp
scas
pop
sub
fimul
mov
xchg
ret
popa
push
popa
jae
aam
adc
hlt
xor
jg
out
push
jg
push
xor
ins
xlat
mov
mov
stos
jne
(bad)
xchg
out
outs
jmp
popa
xchg
dec
pop
push
jno
dec
test
and
scas
sbb
xchg
call
mov
sub
in
data16
jecxz
dec
mov
in
xchg
jns
pop
cmp
push
nop
call
cdq
popa
dec
loopne
scas
mov
(bad)
into
retf
fidivr
cmp
jb
pushf
lods
inc
fsubp
mov
nop
cmp
popa
jmp
xor
jp
xlat
sbb
inc
or
dec
ja
inc
dec
and
popf
enter
push
in
jbe
popa
and
stos
shr
mov
rol
std
add
jecxz
fsubr
mov
(bad)
stos
or
sbb
pop
inc
push
movs
jg
fdiv
mov
rcr
(bad)
dec
lock
add
addr16
lods
mov
push
push
(bad)
loope
cmc
(bad)
jle
pop
pop
push
push
cmp
fcomp
pusha
shr
fadd
imul
inc
imul
push
imul
cmps
cmp
outs
sbb
xor
cmp
jae
aam
ins
ja
adc
inc
mov
and
jle
add
in
xor
out
data16
mov
sub
call
pop
sbb
mov
push
sbb
mov
pop
xlat
dec
dec
nop
inc
sbb
mov
rcl
jle
ret
das
iret
shr
and
dec
cmp
in
push
aaa
sahf
in
inc
test
aaa
cmp
mov
movs
fild
inc
xor
cdq
jl
xchg
inc
ins
rcl
std
cvtpi2ps
cli
mov
outs
outs
pop
fxch
aad
inc
xchg
(bad)
retf
sub
sbb
mov
das
xor
lock
into
pop
sub
out
xchg
xor
fwait
mov
cmp
call
fs
pop
std
push
or
xor
es
ror
popf
add
retf
mov
sbb
data16
loopne
mov
and
sbb
(bad)
popa
stos
sub
mov
dec
out
xlat
hlt
iret
(bad)
mov
xchg
xor
sbb
aad
jmp
retf
jmp
stos
jae
call
js
scas
ja
cmp
mov
mov
cmp
adc
gs
loope
lea
popf
add
pop
aas
pop
push
rcl
retf
das
clc
inc
int
or
pop
mov
ja
fucomip
and
xchg
ss
cmps
jb
adc
cmp
(bad)
repz
ja
into
bound
pop
mov
clc
inc
fwait
jle
fstp
test
aad
jae
fcomp
cs
add
mov
dec
xlat
rcr
jmp
mov
movs
jmp
and
xchg
into
cld
leave
outs
mov
push
sub
adc
mov
(bad)
fistp
push
movs
mov
or
pop
sbb
xor
repnz
fild
fild
mov
mov
(bad)
test
push
popf
cmp
pop
pop
stc
ins
sbb
xchg
rol
not
fs
repnz
mov
ror
jnp
mov
xor
and
fxch
inc
fisttp
dec
loope
ds
or
fwait
cmc
mov
cmp
dec
dec
int3
daa
xor
stc
ror
pushf
add
or
das
mov
dec
dec
cli
out
push
xchg
push
lods
cld
inc
adc
sbb
jno
imul
push
or
pop
stos
rol
enter
xor
and
cld
cmps
pop
es
ss
ins
daa
jae
daa
ret
jmp
test
test
test
jnp
rcr
dec
add
pop
or
outs
cmp
arpl
imul
bswap
out
inc
and
fwait
mov
mov
pop
sub
add
movs
adc
stos
sub
cmc
pop
inc
mov
and
jge
(bad)
xlat
mov
in
in
mov
in
cdq
and
loope
out
out
dec
mov
dec
(bad)
addr16
sub
cmp
xchg
pop
(bad)
arpl
scas
mov
jp
and
ins
dec
mov
pop
sbb
hlt
imul
sub
ins
fdiv
xchg
push
jns
test
push
out
pop
mov
mov
loope
or
pop
addr16
jg
pop
xor
sbb
adc
mov
mov
pop
mov
movs
sbb
jmp
pop
dec
in
pop
mov
mov
or
adc
push
xchg
shr
or
mov
push
test
jb
xchg
and
imul
jle
push
jae
push
pop
dec
scas
adc
imul
pop
mov
in
cmc
mov
adc
icebp
dec
cwde
in
fs
jnp
ror
int
adc
mov
sar
hlt
daa
punpcklbw
cmp
js
cmp
cmps
test
lock
invd
mov
push
sub
popa
dec
dec
pop
dec
push
pusha
movs
dec
push
lahf
pop
mov
push
cmc
mov
popa
dec
fcomp
dec
push
mov
add
stos
je
and
ror
inc
call
addr16
fld
jg
sub
pusha
dec
and
(bad)
mov
push
shr
jp
push
in
cmc
mov
mov
mov
mov
loopne
mov
add
test
test
movaps
push
ds
pop
je
mov
xchg
sub
and
adc
lock
nop
icebp
pushf
sub
(bad)
fwait
xor
jg
fwait
lea
test
(bad)
push
jnp
es
mov
xor
sbb
add
das
and
out
mov
push
pop
imul
push
cmp
ret
xchg
jp
inc
xor
mov
not
adc
pop
jg
int3
push
loope
fldcw
jb
mov
push
dec
pop
jnp
inc
pop
and
fwait
in
jb
mov
lahf
or
add
or
xchg
pop
mov
mov
enter
jns
ficom
leave
neg
sar
push
jno
xor
(bad)
ss
loopne
adc
sub
mov
mov
xchg
jmp
out
jmp
push
popf
mov
(bad)
pop
fmul
jecxz
popf
mov
in
xor
clc
aad
and
and
mov
ficomp
rcr
push
mov
mov
mov
ins
js
lods
aad
shr
inc
cwde
push
mov
mov
jne
cmp
in
ret
int3
and
fistp
pusha
mov
xchg
jl
pushf
mov
mov
xchg
inc
ins
imul
push
jbe
shl
es
pop
leave
fld
or
add
hlt
xor
xchg
scas
inc
out
hlt
sub
imul
dec
outs
test
push
cmp
test
loope
fwait
enter
sub
mov
loope
adc
add
outs
inc
mov
das
int3
int3
dec
and
aas
add
inc
(bad)
dec
lahf
data16
popf
mov
mov
mov
pop
call
(bad)
jge
pop
push
arpl
mov
and
sub
mov
adc
inc
mov
dec
fdivp
inc
sbb
sahf
dec
js
rcl
lods
dec
sbb
aaa
push
fimul
rcl
cmp
test
push
and
and
and
mov
lahf
cmp
dec
addr16
adc
push
cmc
jno
ja
out
and
jge
mov
(bad)
fsubrp
jmp
xchg
fs
xchg
jmp
push
mov
iret
aas
std
in
pop
mov
cmp
cmp
adc
xchg
dec
push
test
cwde
xchg
and
dec
addr16
cmc
cmps
dec
pop
inc
mov
jno
pusha
out
sbb
nop
mov
call
push
mov
cmps
mov
jp
jns
jmp
and
cmps
ja
mov
aam
mov
cmp
scas
out
push
cmps
out
movs
cmp
fwait
aaa
pop
cmp
jmp
inc
imul
sbb
aad
mov
mov
jb
ss
push
mov
push
mov
test
lock
cwde
gs
int
add
in
adc
pop
adc
adc
xor
mov
xchg
adc
lahf
push
imul
add
ds
scas
adc
daa
fs
sar
icebp
call
in
push
pop
test
out
xchg
inc
pop
push
jnp
shl
xlat
mov
(bad)
mov
aas
jae
add
xor
jo
imul
adc
mov
jbe
pop
mov
fstp
lock
gs
sbb
or
inc
dec
lock
mov
es
hlt
data16
sub
mov
icebp
int3
stos
mov
(bad)
jle
push
inc
bound
add
inc
psubw
fmul
fstp
test
cmc
cmps
add
adc
dec
and
jmp
aad
data16
and
jl
mov
movs
shl
call
jmp
jecxz
pop
ss
(bad)
test
das
push
or
and
movs
ret
int3
imul
test
or
iret
mov
push
scas
jns
loopne
popa
test
loopne
scas
mov
add
dec
retf
ins
pop
fwait
cmp
dec
dec
arpl
inc
fs
cld
into
xchg
add
pop
and
movs
xlat
push
dec
cld
xor
loop
jno
pop
and
call
mov
popa
scas
call
loop
ror
jle
mov
ins
les
push
sbb
mov
pop
retf
cmps
cmp
cmp
imul
add
daa
(bad)
pop
retf
repnz
mov
jbe
and
js
mov
test
outs
inc
(bad)
cld
cmp
test
xor
mov
ss
popa
mov
movs
mov
sbb
bound
out
xchg
mov
jg
test
(bad)
out
xor
js
cmp
ror
fistp
sbb
fidivr
aaa
sub
jle
jno
sbb
mov
mov
mov
sbb
in
pop
adc
adc
enter
movs
and
in
push
mov
jg
mov
idiv
(bad)
addr16
cwde
pop
dec
jp
stc
fdiv
loope
add
adc
aas
cdq
push
rcl
jmp
add
test
jne
test
cli
xchg
xchg
pop
movs
and
mov
pop
stc
adc
xor
aas
jno
cmc
adc
or
ins
inc
repz
jmp
ds
leave
jecxz
dec
jb
popa
mov
test
(bad)
lods
jp
ss
jmp
in
fs
out
mov
ficomp
dec
push
popa
fs
pop
pop
nop
stos
xor
mov
not
mov
jbe
xchg
in
sub
sub
sub
push
jae
data16
es
ret
mov
int
cs
rcr
jbe
sbb
sub
lods
pop
(bad)
inc
icebp
adc
inc
cwde
fidivr
data16
shr
sub
int
inc
movs
fisubr
scas
and
js
or
repz
fucomi
cmp
inc
fidiv
or
add
push
out
xchg
mov
cmp
pop
adc
jp
cmp
je
fistp
jmp
dec
psubq
xchg
xor
hlt
push
icebp
out
pop
and
sbb
popa
call
push
mov
pop
inc
icebp
(bad)
adc
nop
test
(bad)
in
not
sub
mov
xchg
fild
fild
or
mov
pop
lea
ss
sti
fst
cmp
or
div
adc
xchg
rcr
mov
add
or
mov
shl
stos
popa
je
ret
xor
push
xchg
mov
outs
repnz
sti
add
cmp
mov
test
loop
adc
repnz
sbb
mov
add
mov
int
and
mov
repz
cwde
(bad)
cmp
cmp
dec
jmp
pop
in
retf
test
mov
imul
add
fsub
cmp
cmp
inc
and
les
inc
xlat
push
pop
sbb
jecxz
cmps
cmp
test
add
sub
xchg
popa
inc
shr
ds
push
push
mov
sub
aaa
push
push
ins
dec
outs
xchg
jecxz
in
lea
ds
sbb
and
(bad)
cmp
mov
in
lock
stos
sbb
add
stos
inc
pop
mov
mov
xchg
retf
mov
adc
xchg
add
call
xchg
clc
(bad)
imul
push
sti
in
sub
mov
call
sub
sbb
and
mov
aam
xor
mov
jo
push
rcl
fsubr
adc
mov
call
pushf
dec
pop
ins
in
movs
pop
cdq
popa
cli
dec
pop
mov
fiadd
mov
pop
push
dec
fstp
inc
push
cmp
jae
rcl
(bad)
int3
lock
mov
or
mov
or
ror
sbb
lods
mov
sbb
push
lock
sub
popf
mov
nop
test
fst
fisubr
in
push
rcl
dec
sar
adc
jmp
mov
xor
and
push
inc
or
pop
and
mov
add
lea
or
and
adc
retf
scas
push
jnp
adc
push
movs
pop
pop
fldcw
jge
outs
cmp
xchg
xrelease
(bad)
pop
pop
shl
cmp
(bad)
mov
mov
out
mov
xor
mov
fwait
int
pop
or
jne
ret
mov
div
gs
mov
adc
push
push
lds
scas
dec
(bad)
dec
cmp
mov
(bad)
fldenv
js
push
xchg
pop
xor
nop
cmp
cld
loop
pusha
dec
sbb
(bad)
ret
mov
push
mov
adc
xor
bnd
mov
mov
sbb
sbb
std
jl
test
mov
adc
push
xchg
es
or
add
movhps
pop
mov
gs
mov
ror
xchg
adc
fild
cmp
rol
push
in
ss
sti
stos
jmp
ss
jo
jbe
mov
cmps
ins
mov
out
add
sbb
out
jb
jle
loope
jns
jecxz
arpl
ror
popa
nop
loope
lahf
push
(bad)
scas
inc
test
sahf
in
jb
scas
pop
ins
and
jo
test
add
mov
inc
mov
in
xchg
ret
cmp
das
mov
loopne
pop
aad
sub
push
cld
cmps
mov
push
mov
dec
xchg
and
stos
(bad)
xor
stc
jge
enter
dec
ret
ins
cmp
xchg
mov
xor
mov
sbb
lods
pop
bound
mov
je
pop
movs
fidivr
ja
adc
jp
dec
sbb
ins
inc
clc
imul
or
(bad)
jmp
sar
ss
movs
pop
mov
dec
aam
dec
gs
push
push
lea
push
and
jae
ror
fldcw
mov
(bad)
lea
imul
test
mov
aam
xchg
std
mov
out
sbb
outs
xchg
sahf
test
cmp
or
data16
loope
cld
pop
cdq
add
jl
fbstp
bnd
out
(bad)
push
pop
xchg
cmp
mov
fdivp
sti
mov
shl
push
lds
cmp
scas
retf
mov
and
push
ins
mov
repnz
aam
add
mov
jecxz
sti
sub
mov
cmp
lods
sbb
outs
or
mov
mov
inc
mov
inc
cmp
mov
lock
dec
in
hlt
jmp
aam
pop
sbb
push
pop
aas
lea
jno
xchg
(bad)
(bad)
push
push
fdiv
or
push
js
dec
adc
lods
xor
sbb
and
fisttp
stos
jnp
shr
mov
test
iret
int3
jo
cs
stos
xchg
jns
mov
popf
out
mov
in
adc
cmp
ret
(bad)
push
mov
sub
imul
stos
mov
js
cs
add
pop
hlt
xchg
repz
mov
cli
xchg
mov
and
cmp
cmps
and
push
rcl
push
lods
retf
xchg
push
add
cmps
gs
clc
dec
sbb
push
js
sub
adc
or
ds
ins
mov
dec
fs
and
out
mov
pop
fisttp
dec
sbb
dec
fadd
xchg
mov
call
jne
cs
sub
stos
repz
jge
andnps
test
loopne
test
dec
jg
pushf
sbb
lock
dec
call
aad
test
ins
rcl
xor
push
scas
xor
mov
push
nop
out
ins
sub
(bad)
outs
repz
push
mov
jo
fsub
ds
out
mov
jge
mov
call
cmp
sar
bound
xor
out
pop
sbb
js
gs
inc
fdiv
out
rcl
loopne
push
or
push
dec
call
gs
jecxz
xchg
(bad)
xlat
aas
es
sbb
clc
in
jnp
rol
mov
dec
cmc
mov
mov
inc
inc
out
mov
adc
cmp
adc
test
push
xchg
into
xor
push
mov
ins
jbe
xchg
loope
loop
outs
jg
mov
dec
call
jecxz
bound
add
in
and
and
inc
popf
inc
mov
dec
jae
mov
xor
cwde
push
xbegin
rcl
aad
inc
cmps
cwde
lock
xor
add
fcom
mov
fidivr
dec
retf
std
and
mov
pop
in
test
mov
pop
aam
je
ret
inc
cmp
sti
mov
(bad)
add
or
dec
int3
xchg
jge
lea
sbb
dec
pop
stos
pop
mov
xor
cmp
ja
pop
les
cs
mov
mov
mov
hlt
nop
push
xor
mov
adc
jge
ins
push
cwde
aam
cmp
into
mov
push
push
push
dec
mov
mov
pop
push
adc
loope
sub
(bad)
jg
xor
test
movs
inc
cmc
popa
jo
je
pop
add
push
or
cmp
jp
out
test
fwait
scas
dec
adc
mov
mov
mov
sub
cmp
jp
rol
sub
repz
pop
mul
ja
jnp
cmc
xchg
loopne
add
inc
or
retf
clc
popa
pushf
cwde
sahf
ss
xchg
ret
fdivr
gs
inc
sub
out
daa
mov
(bad)
out
arpl
sub
inc
jno
cmc
shl
xchg
stos
sbb
push
inc
pop
sbb
dec
(bad)
pop
dec
mov
les
(bad)
push
inc
xlat
dec
sub
(bad)
out
pop
sar
out
or
xor
or
jbe
ss
and
cmp
loope
lods
bound
cmc
lea
test
or
push
jmp
es
jns
call
lock
jp
loopne
and
pop
add
sub
mov
pushf
fisubr
jecxz
outs
jecxz
aam
inc
addr16
sahf
mov
mov
ret
mov
add
mov
inc
mov
daa
push
cmps
xchg
dec
cld
pop
cmp
es
inc
lea
push
jno
jb
sub
js
mov
mov
enter
xor
mov
jns
cmps
call
jp
push
cmc
pop
pop
mov
outs
xchg
call
nop
and
inc
mov
xchg
nop
push
fiadd
bound
and
xor
inc
lods
pusha
sbb
push
neg
lahf
(bad)
in
dec
jge
mov
and
xchg
pusha
and
call
dec
dec
(bad)
into
scas
xchg
jno
jns
jle
add
xor
or
mov
and
jnp
fneni(8087
push
sub
inc
xor
gs
int3
pop
sti
sub
int
lods
test
test
sti
rol
daa
or
and
popa
repz
xlat
test
gs
xor
cmp
popf
test
cmp
jnp
mov
push
xchg
add
idiv
jne
mov
fstp
pop
or
je
dec
dec
jge
push
(bad)
(bad)
xor
mov
call
mov
mov
or
add
gs
popf
xchg
sbb
mov
push
sub
or
cmp
xlat
xchg
(bad)
out
call
popf
clc
repz
mov
mov
pop
ds
mov
push
mov
push
test
mov
pusha
inc
test
cli
clc
loopne
call
or
xlat
retf
neg
or
or
cdq
jg
mov
clc
add
push
fisub
and
repz
add
sbb
sub
aas
outs
test
or
adc
mov
popf
test
mov
and
jbe
loope
xor
loopne
in
inc
lds
push
out
repz
pop
loop
and
adc
test
and
mov
dec
mov
pushf
and
push
xchg
sbb
ins
push
push
and
leave
ret
xchg
mov
inc
test
mov
or
out
cld
pop
ret
fisubr
adc
pop
mov
mov
sub
xchg
out
or
rcl
xor
sti
fld
pop
fdiv
xor
cld
adc
aas
lods
mov
pextrw
call
loope
dec
jbe
mov
mov
xchg
mov
pop
(bad)
sub
push
mov
out
dec
pop
cld
std
cmp
push
mov
dec
inc
cwde
jmp
ja
mov
call
rol
mov
cs
jmp
arpl
pop
and
add
push
adc
adc
xlat
hlt
loope
sbb
jno
mov
push
iretw
push
cdq
daa
dec
inc
mov
aam
push
ss
aam
push
cdq
adc
push
aad
test
xchg
add
mov
imul
sbb
out
or
(bad)
dec
imul
mov
fist
scas
xchg
std
in
push
(bad)
cwde
pop
sbb
jns
mov
out
mov
inc
jg
xlat
jo
mov
mov
mov
pop
xor
cmps
es
push
adc
pop
dec
out
inc
(bad)
repnz
pop
cli
iret
mov
ret
sbb
xor
mov
pop
dec
(bad)
dec
mov
aam
jle
jbe
xchg
cmp
add
jmp
lahf
xchg
cmp
pushf
int
aam
push
mov
(bad)
out
or
dec
xchg
mov
bound
leave
push
jae
imul
ja
nop
mov
xchg
sub
jae
push
pop
mov
push
xor
iret
mov
leave
scas
les
fcomip
xchg
lahf
inc
cdq
mov
dec
jbe
lahf
pop
sbb
popa
push
adc
mov
repnz
shrd
lds
and
fistp
(bad)
push
lock
std
xor
jo
std
leave
and
sub
push
push
lds
xchg
mov
sar
leave
outs
push
push
jge
pop
out
jns
scas
and
pop
mov
push
mov
xor
lods
dec
pushf
data16
push
aam
in
fldenv
push
xor
imul
inc
stos
cmc
into
pusha
mov
test
pop
outs
or
fisttp
inc
sub
shr
dec
mov
mov
in
sbb
dec
xor
mov
and
out
loop
arpl
mov
ss
push
add
mov
les
sbb
ror
sahf
and
mov
jno
or
bound
cmp
xchg
mov
xchg
fs
fidiv
jge
jg
test
outs
aas
xchg
enter
outs
ja
cmc
imul
ficomp
(bad)
mov
out
scas
fnstenv
aas
xor
inc
dec
sbb
push
popf
dec
(bad)
cmp
adc
ja
repz
jb
cmp
mov
(bad)
mov
fmul
mov
cmc
jge
push
xor
xchg
push
add
imul
add
xor
cs
rol
pop
dec
dec
shr
dec
in
gs
dec
in
or
daa
pusha
retf
out
mov
int3
cmp
or
fwait
lds
add
mov
cs
fs
sahf
cs
int3
pop
sbb
sub
scas
and
pop
popf
inc
jns
push
test
mov
shr
mov
cli
push
out
inc
aad
sub
cmps
adc
into
repnz
push
mov
iret
adc
fdivr
push
add
stos
sbb
ret
pop
xchg
pop
add
jae
inc
shl
adc
inc
dec
mov
movs
call
adc
or
pop
sub
js
call
cmp
mov
out
shl
aam
xor
xchg
push
sbb
adc
inc
out
mov
pop
mov
push
in
inc
dec
jno
jbe
aam
add
into
pop
sbb
cmps
jg
cmp
test
movs
cdq
mov
and
xor
push
push
xlat
add
push
xchg
imul
or
jg
ss
fbstp
mov
or
loope
adc
mov
inc
pop
xchg
push
xchg
mov
or
pop
xchg
xor
movs
hlt
xor
cs
sbb
sbb
test
sbb
add
xchg
mov
mov
arpl
mov
or
mov
sti
mov
in
and
xor
cmp
cwde
adc
stos
mov
push
jns
fcomi
popf
cmps
cs
jmp
outs
rcr
daa
xchg
jae
cmc
mov
inc
mov
das
out
call
stos
push
jge
inc
bound
mov
aaa
fstp
adc
cmp
mov
pop
inc
xchg
mov
sub
sub
cs
out
rol
cmp
clc
fist
mov
mov
int3
sbb
shl
dec
pop
stos
add
mov
cli
outs
xchg
in
movs
loopne
sbb
xor
cmps
sub
fs
test
pusha
mov
add
ret
ins
push
cmp
scas
loope
cmp
push
mov
xchg
cmp
lods
mov
mov
fld
rol
sub
call
hlt
mov
xchg
es
xchg
mov
or
(bad)
fst
dec
sbb
outs
ins
jne
scas
test
movs
jmp
shl
gs
sbb
mov
loope
push
(bad)
repnz
mov
cmc
je
sub
fsqrt
jo
sbb
fiadd
aam
std
inc
test
dec
pop
jl
sub
aaa
dec
scas
jne
or
jb
sub
pushf
cmps
or
jo
add
(bad)
int3
sub
cmp
daa
jmp
out
dec
test
add
ret
lea
xor
test
jg
pusha
out
cmp
or
inc
outs
dec
push
sub
sbb
add
(bad)
ja
mov
xor
add
(bad)
dec
test
std
iret
push
repz
je
mov
fdiv
jno
mov
sub
inc
mov
jmp
aaa
leave
push
cmps
jne
ret
mov
aam
cmp
sbb
mov
les
out
and
out
cmps
add
sbb
jne
mov
lahf
inc
push
push
adc
jge
jb
clc
mov
call
sbb
into
push
jmp
cmp
rcr
jle
add
hlt
push
xchg
cli
inc
pushf
mov
mov
push
fdivr
jo
cmps
xor
adc
inc
neg
pop
push
sbb
or
movs
sbb
sar
xor
jo
rcl
and
and
mov
in
(bad)
js
mov
loope
mov
and
mov
lods
adc
or
pop
les
sbb
and
inc
fidiv
int3
sbb
add
mov
add
mov
mov
sbb
or
sub
out
xor
sahf
push
pop
cmp
jecxz
in
mov
idiv
xor
inc
cdq
push
outs
xor
mov
(bad)
sti
js
mov
in
js
mov
push
int3
add
mov
(bad)
fiadd
inc
dec
enter
xchg
shl
xor
jbe
call
lea
cli
mov
shl
sub
mov
add
push
(bad)
iret
int
out
out
jp
pop
dec
mov
xchg
sbb
lock
movs
sub
test
lock
pop
xchg
push
mov
mov
pop
stos
fs
mov
jne
fwait
or
repz
xchg
jg
scas
jle
and
sbb
in
stc
ins
mov
adc
ins
pop
xor
(bad)
push
bnd
fisubr
in
pusha
aas
retf
jbe
add
sub
inc
sbb
(bad)
cli
inc
mov
into
jp
dec
das
(bad)
scas
cmp
sub
dec
lds
movs
addr16
push
xor
sbb
xor
out
mov
dec
pop
jae
fimul
out
cmp
fistp
arpl
push
mov
jecxz
data16
(bad)
aam
mov
rol
sbb
push
shl
cs
movs
(bad)
or
aas
add
les
test
lock
or
sbb
inc
add
xchg
jl
inc
ins
adc
pop
mov
(bad)
sbb
sbb
stos
icebp
(bad)
mov
ins
stos
mov
push
test
loopne
pop
jne
std
sbb
mov
call
push
adc
xor
or
sbb
fwait
jle
jge
jno
les
ins
mov
retf
cmps
sti
push
fisub
nop
(bad)
mov
sbb
inc
add
daa
dec
repz
dec
movs
inc
cwde
mov
fcmovnbe
jle
sahf
lods
xor
dec
pop
scas
and
adc
or
xlat
dec
clc
mov
cmp
(bad)
bound
add
or
mov
sbb
ret
sti
aaa
ret
mov
xchg
in
nop
mov
shl
fldcw
mov
mov
retf
(bad)
dec
mov
(bad)
ja
in
js
lods
enter
push
push
cdq
test
aaa
bound
mov
jge
ficom
sbb
fdiv
jl
pop
hlt
dec
and
or
je
adc
inc
push
jmp
jbe
cmp
imul
std
or
outs
jnp
stc
movs
push
or
mov
in
test
sbb
sub
cmc
ror
outs
es
inc
lods
out
ret
nop
add
pop
cmp
adc
xor
icebp
jo
fnstcw
dec
adc
adc
ror
stc
jl
loopne
and
jns
out
adc
imul
rcr
xchg
cmp
ror
pop
and
movs
dec
ror
jnp
mov
sub
imul
or
cmps
mov
fnstsw
jg
into
loop
add
stc
mov
push
jecxz
retf
fadd
test
daa
ret
sub
iret
mov
adc
lods
sub
pop
fdivrp
mov
dec
sub
mov
pop
or
lea
not
dec
push
outs
(bad)
lods
pop
inc
leave
sub
mov
lea
shl
and
es
pop
jno
enter
and
retf
mov
and
mov
mov
ret
inc
fwait
fwait
inc
popf
and
sbb
mov
inc
adc
pop
ins
jbe
in
dec
out
jb
lea
inc
sub
scas
xor
movs
sbb
mov
jmp
adc
adc
shr
or
jo
add
and
outs
mov
retf
adc
inc
cld
cs
cli
arpl
js
(bad)
push
std
jbe
pop
adc
dec
lock
aaa
dec
push
cmps
mov
int
add
or
mov
lods
inc
inc
movs
sbb
mov
sti
stos
or
aaa
xchg
inc
popa
aad
and
xchg
and
mov
cs
int
(bad)
jmp
jb
fdiv
pop
xchg
sub
adc
loope
std
pop
lahf
pop
xor
inc
mov
stc
cs
or
or
into
add
push
or
sahf
sub
mov
inc
outs
jne
xor
sub
jl
xor
inc
push
ret
repz
bound
cmp
fsubr
mov
mov
jp
nop
fiadd
cs
pop
stos
mov
mov
out
push
and
shl
mov
fisttp
icebp
stos
fcomi
fwait
retf
pop
stos
sub
adc
loopne
jo
(bad)
cmp
push
push
add
addr16
mov
sub
push
ins
(bad)
rcr
fistp
jmp
shr
pop
and
lods
pop
mov
loopne
addr16
pop
mov
mov
adc
dec
outs
xchg
add
cmc
mov
enter
add
jne
push
rol
stos
scas
daa
inc
ret
or
mov
xchg
jo
enter
retf
sub
inc
sbb
nop
inc
mov
sbb
push
mov
(bad)
aad
ret
mov
imul
mov
xchg
test
fs
pop
or
inc
pop
fist
push
push
sbb
pop
or
inc
mov
mov
loop
push
adc
scas
out
movs
aad
push
fild
fwait
jae
mov
mov
or
adc
xor
xchg
jmp
sahf
inc
sbb
cmp
ror
jno
movs
mov
scas
cdq
sub
mov
mov
jmp
xchg
xchg
mov
cmp
(bad)
sub
jp
mov
mov
push
rep
or
(bad)
pop
sbb
dec
ins
hlt
pop
shl
add
add
mov
fist
cli
mov
mov
call
xor
fsubr
xchg
data16
mov
mov
popa
stc
sbb
mov
jbe
sub
test
mov
adc
mov
or
fadd
sbb
and
scas
pop
pop
or
out
jae
inc
and
and
lahf
or
or
fdivrp
sbb
inc
cld
out
jge
add
fstp
mov
sbb
es
push
dec
adc
fs
es
fs
push
jnp
adc
retf
jbe
sbb
cdq
pop
pop
enter
mov
jnp
lods
in
(bad)
out
inc
ret
cmc
jmp
mov
inc
jecxz
(bad)
jb
and
loopne
and
push
cmp
sahf
mov
sub
(bad)
dec
repz
mov
push
add
retf
add
les
jo
loope
iret
mov
test
sti
push
sbb
repz
jmp
cld
xor
pusha
int
leave
sahf
out
(bad)
aad
es
mov
jge
inc
mov
dec
inc
mov
in
(bad)
sbb
inc
mov
call
mov
mov
stos
ret
pop
mov
hlt
call
add
retf
outs
iret
fild
sub
retf
xchg
repz
aad
aas
outs
and
movs
jmp
shl
xor
sub
mov
pop
scas
mov
in
addr16
ins
mul
lods
sbb
mov
fsubr
loop
mov
xor
push
cmp
or
xor
mov
jecxz
xchg
enter
iret
inc
add
lahf
int3
xor
jns
xchg
push
cld
push
(bad)
sar
mov
sub
pop
or
icebp
comiss
jo
sbb
adc
das
xchg
nop
push
xlat
pop
int
add
xchg
out
dec
retf
cmc
ja
ss
jno
push
dec
std
dec
dec
dec
mov
mov
imul
std
ja
pop
es
inc
repnz
xchg
dec
loope
xlat
push
sti
mov
and
dec
push
jnp
sub
xlat
js
mov
sub
pmulhw
mov
mov
aad
loope
mov
clc
pop
mov
or
mov
or
paddusw
dec
fs
push
aas
or
or
je
cmp
or
out
lock
jne
fisubr
fiadd
xlat
test
in
pop
sahf
das
dec
popf
out
in
test
mov
cmc
aad
js
retf
mov
inc
loopne
add
mov
jmp
mov
inc
call
pop
sbb
fs
mov
fisttp
fdivr
ss
fmul
out
out
inc
rcr
sbb
or
arpl
inc
fcom
xchg
xor
not
in
in
inc
ficomp
cmp
xchg
bound
idiv
or
jge
jl
mov
test
stos
je
aaa
pminsw
addr16
je
jge
mov
ds
or
and
dec
iret
sbb
lock
imul
out
into
pop
sbb
xchg
sbb
xchg
inc
or
lock
jo
stc
push
pop
cdq
pop
fucomip
mov
pop
push
pop
cs
xchg
mov
test
pop
pusha
mov
icebp
add
xchg
jno
jbe
(bad)
add
fadd
cli
jmp
adc
xchg
jmp
dec
stc
stc
faddp
adc
shl
pop
and
cdq
movs
in
shr
sub
jge
(bad)
(bad)
loope
es
js
and
mov
cmp
pusha
jmp
ficom
outs
push
(bad)
fld
retf
adc
fiadd
xor
mov
dec
lock
mov
(bad)
imul
outs
loopne
jno
xchg
push
dec
add
or
scas
imul
pop
inc
pop
or
test
outs
mov
leave
push
or
xchg
(bad)
nop
lahf
pop
push
lods
sbb
ins
sub
stc
in
hlt
mov
ret
adc
push
leave
ins
aaa
adc
xor
mov
repnz
sar
outs
cld
sbb
push
sub
jnp
fst
jecxz
in
test
inc
daa
fdivr
sbb
jl
test
cmc
cmp
xor
push
stos
das
(bad)
lahf
in
aaa
xchg
pop
sbb
or
push
push
cld
xchg
in
movs
jns
mov
aad
inc
test
call
loop
retf
pop
stos
mov
jae
mov
jmp
aas
imul
add
jns
sar
pusha
jbe
cmp
jge
movs
das
inc
jbe
(bad)
mov
cmps
sbb
inc
arpl
or
(bad)
mov
movs
in
and
popf
mov
push
icebp
(bad)
stc
mov
adc
cmp
daa
call
jp
mov
ja
inc
(bad)
sub
pop
mov
pop
nop
fimul
dec
test
jo
lahf
sbb
mov
xor
jno
(bad)
pusha
jecxz
ret
cmp
mov
sub
inc
mov
inc
in
sbb
(bad)
push
add
xchg
(bad)
pushf
cwde
or
cmp
lods
sbb
xor
loop
repz
jbe
inc
and
mov
xchg
arpl
popf
repz
popa
lahf
stos
retf
dec
xchg
ds
or
mov
jae
outs
aad
jge
cs
mov
sbb
cmp
out
retf
jp
and
fidiv
fs
fidivr
fisubr
inc
pop
(bad)
aad
popa
push
shr
adc
adc
retf
mov
push
jle
call
(bad)
sti
lds
fsub
jg
inc
sub
jns
test
cmp
adc
sub
lods
nop
and
iret
xor
jbe
mov
retf
inc
imul
push
hlt
mov
xchg
sub
in
cmp
ins
dec
setnp
iret
mov
cmp
xchg
pop
sbb
icebp
sbb
pop
jne
jae
in
inc
jne
les
push
(bad)
repnz
xor
sub
in
jg
rcl
sub
popa
add
push
repz
mov
pop
addr16
mov
add
js
push
add
test
fs
or
mov
jno
outs
and
sbb
lock
inc
or
pop
and
sahf
retf
hlt
jmp
add
jbe
fisubr
add
sbb
or
imul
adc
push
ds
aas
fwait
call
jno
cmp
loope
push
test
and
inc
inc
dec
fistp
lahf
test
pop
cmp
mov
aam
xlat
sub
jle
mov
jmp
pushf
mov
inc
out
fs
enter
push
jg
sti
mov
cmp
sar
ss
retf
movs
mov
cmp
pop
(bad)
pop
xchg
or
scas
sbb
test
mov
cmc
pushf
sub
adc
push
mov
push
jo
lods
repnz
xchg
jmp
mov
ffreep
cmp
add
sub
int
pop
mov
ins
cmp
stos
addr16
mov
ret
lock
rcl
fadd
jne
and
xor
mov
retf
adc
push
das
xchg
test
imul
aam
push
(bad)
jb
xchg
adc
mov
and
test
dec
movs
lds
bound
inc
push
leave
xchg
mov
push
pop
jp
retf
sar
push
fisub
fdiv
mov
pop
aaa
aas
add
adc
pop
jae
(bad)
loopne
fld
xchg
addr16
xor
sub
into
inc
sti
jg
jmp
retf
outs
lahf
sub
cmp
cmp
dec
movs
mov
rol
xor
mov
sub
inc
popf
jmp
mov
enter
(bad)
jmp
retf
inc
vaddsubps
xchg
xor
nop
jae
pop
cmp
cli
aas
scas
push
fiadd
daa
or
popa
daa
cli
or
mov
push
xchg
xor
mov
pusha
add
mov
int3
mov
push
ret
sti
xlat
aaa
xchg
or
sbb
push
cmp
mov
call
jge
xchg
xchg
lock
inc
push
aam
into
std
xor
sub
mov
mov
pop
mov
push
xchg
mov
adc
pop
std
call
or
and
cmp
and
(bad)
add
inc
enter
fwait
xchg
pop
pop
fistp
fisubr
sbb
xchg
push
out
mov
leave
mov
push
add
mov
or
push
push
mov
ds
pusha
pop
dec
(bad)
pop
retf
cmp
fdivrp
pop
inc
scas
xchg
or
push
int3
sbb
and
int
(bad)
fstp
in
xchg
xchg
out
lahf
jae
scas
push
push
pop
push
cmp
xor
cld
cmps
sub
loopne
inc
shl
shl
sub
jmp
push
aad
xchg
push
add
xchg
in
inc
ds
add
push
in
jnp
scas
clc
clc
pushf
fisttp
mov
in
cli
sub
adc
hlt
shl
mov
fs
das
inc
sbb
imul
xchg
rcl
jo
xchg
pop
mov
outs
or
out
es
sahf
(bad)
fild
aad
pop
mov
lods
jmp
das
shl
jecxz
xchg
ins
push
xor
or
hlt
mov
dec
push
gs
cmp
mov
stos
sbb
test
mov
(bad)
jmp
cmp
int3
push
scas
sub
mov
mov
dec
repz
aam
dec
jno
(bad)
int
in
test
jae
arpl
frstor
icebp
arpl
jp
sbb
or
fwait
test
rol
call
(bad)
sbb
push
into
stos
sub
test
test
stc
add
push
shl
enter
ret
fld
adc
add
retf
ss
dec
push
xor
mov
add
loope
dec
inc
cmp
or
push
fdivr
aaa
jmp
out
jb
dec
ret
jge
ror
push
mov
adc
movs
ss
loop
loope
icebp
lods
inc
aas
ret
add
mov
adc
and
aaa
xor
sbb
test
or
arpl
and
jl
out
out
jp
xchg
retf
mov
adc
int3
in
inc
mov
xor
inc
pop
lods
push
jbe
pop
mov
mov
mov
hlt
xchg
ror
jno
xor
push
lods
jp
sub
sub
call
push
xchg
fadd
into
imul
cmc
push
xchg
dec
xchg
(bad)
repnz
in
mov
jge
int3
and
dec
inc
mov
fisub
loope
push
inc
jp
sub
mov
outs
enter
scas
je
jmp
pusha
mov
xor
xchg
push
xchg
call
in
xor
stc
loope
in
in
jns
mov
inc
ret
sbb
jo
pusha
repz
jecxz
or
sahf
es
xchg
clc
jns
sbb
lock
mov
fsubp
scas
loope
and
nop
test
int3
and
xlat
mov
into
push
das
and
inc
shr
jmp
mov
out
pop
in
mov
mov
jnp
mov
jno
add
pop
dec
add
cs
mov
jo
cmp
mov
jbe
pop
or
push
ja
fnsave
mov
add
adc
rcr
cmps
and
mov
dec
ret
adc
and
cmc
into
jle
sbb
xchg
cwde
rcl
loopne
pop
dec
stos
repz
fcmovbe
pop
daa
(bad)
mov
shl
fnstsw
lds
push
(bad)
addr16
aas
js
test
sub
scas
sub
inc
pop
pop
sbb
shl
add
in
js
shr
cmp
push
sahf
jg
(bad)
mov
outs
pop
ja
and
repz
(bad)
cld
rcl
mov
push
call
push
add
mov
xchg
inc
xor
cmc
ret
outs
fsub
mov
loopne
add
jecxz
mov
not
xchg
inc
jae
jb
retf
lea
repz
repnz
call
cmp
retf
adc
arpl
(bad)
sbb
push
fnstsw
adc
mov
inc
pop
lahf
pop
shl
adc
ror
mov
mov
cmp
fmul
hlt
jbe
ficomp
mov
mov
dec
cdq
cmp
sbb
cmp
and
adc
xchg
mov
xchg
add
push
std
icebp
cmp
mov
pop
or
sbb
sbb
adc
cli
and
clc
mov
mov
mov
or
pop
bound
aas
fst
push
mov
aaa
push
sub
adc
mov
mov
into
nop
lahf
or
popa
push
cs
daa
adc
fisttp
fisub
jecxz
lds
jb
jg
adc
push
lods
gs
mov
dec
mov
mov
xchg
addr16
mov
cmp
test
jo
cwde
jnp
cmp
shr
push
scas
fld
mov
mov
push
out
scas
and
adc
and
test
aaa
cmp
pop
lea
(bad)
and
xchg
xchg
add
call
int
push
xor
push
cmp
or
mov
arpl
retf
jne
fsub
mov
gs
dec
inc
dec
test
or
add
pusha
xchg
mov
xchg
out
aam
inc
popa
retf
mov
sbb
aam
icebp
mov
lods
aam
int3
cmp
call
xor
inc
sub
lods
ret
and
aam
std
jb
not
xchg
pop
cs
add
adc
out
lock
rcr
push
jge
and
(bad)
stos
or
jo
std
dec
xor
ret
es
(bad)
jecxz
or
stc
cmp
jno
pushf
dec
adc
cmp
or
addr16
xchg
dec
jg
retf
and
add
cs
pop
jne
or
ror
mov
push
sbb
aaa
dec
outs
fisubr
popf
xor
jge
pop
push
pop
jo
int3
daa
jl
aaa
or
xlat
bound
cs
or
and
rcl
adc
mov
retf
or
stos
sbb
or
test
jbe
sbb
jge
aam
(bad)
test
es
rol
lods
add
ins
pop
nop
pop
mov
cs
sub
outs
fiadd
sbb
das
adc
sub
or
mov
movs
loopne
xchg
int3
out
aad
jo
jg
dec
pop
(bad)
cld
dec
leave
fcmovbe
mov
mov
adc
add
popa
rol
mov
std
out
je
leave
lods
inc
or
pop
cmp
pop
xchg
sbb
cmp
mov
nop
xchg
icebp
jmp
xor
fidivr
mov
in
into
and
sbb
cmps
into
rol
mov
mov
out
add
dec
dec
test
add
fistp
bound
jg
pop
ffreep
rcl
push
pop
or
or
or
fld
add
das
dec
ins
jne
addr16
add
push
xor
div
and
xchg
xchg
aad
or
inc
push
or
(bad)
jge
and
pop
sti
cmc
gs
popf
mov
pop
xor
in
mov
jno
test
push
imul
pop
xor
and
gs
(bad)
mov
and
stos
lds
or
push
retf
xchg
push
mov
jge
ret
cwde
cmp
dec
ja
inc
jnp
xor
xlat
out
mov
and
xor
jns
jnp
(bad)
retf
mov
lods
in
cmps
xchg
jo
xor
add
jle
cwde
push
(bad)
ror
inc
jmp
push
mul
ja
push
adc
sbb
stos
aas
daa
(bad)
sub
daa
mov
sub
rcl
aam
inc
shl
xchg
gs
idiv
fwait
aas
sub
enter
sbb
fs
mov
int3
and
inc
popf
pusha
outs
outs
lds
dec
jno
into
fcom
outs
jmp
xchg
jg
ins
aaa
adc
xor
rcl
push
aas
and
xor
stc
jl
jg
sti
adc
jl
mov
cmp
xor
xor
cwde
xchg
add
in
adc
push
pop
cs
push
or
add
pop
inc
test
xchg
cmp
pop
in
nop
xchg
xor
cmp
loope
dec
je
out
jmp
rol
es
lods
test
in
test
and
mov
jae
jno
push
or
addr16
nop
(bad)
sbb
retf
pop
jno
mov
pop
rcl
idiv
lahf
mov
jns
dec
jae
arpl
sub
dec
pop
stc
out
mov
stos
test
push
cmps
data16
push
fs
push
das
mov
popf
xchg
push
loopne
leave
icebp
test
popa
mov
xor
das
loop
arpl
mov
fnstenv
xchg
sub
inc
scas
scas
stos
mov
(bad)
ds
jo
jle
sar
xor
stc
(bad)
pop
inc
mov
jmp
(bad)
adc
fwait
and
mov
ret
sbb
mov
jbe
push
mov
call
retfw
xchg
inc
xor
stc
inc
test
jne
xchg
fadd
fs
mov
cwde
or
jp
jne
call
adc
outs
push
stos
push
sub
mov
lahf
xor
push
push
cs
mov
xor
inc
(bad)
clc
cdq
add
out
mov
pop
mov
enter
cmp
jp
cdq
push
xor
jno
imul
mov
imul
mov
xchg
pop
(bad)
and
sub
popa
and
rcl
ja
jle
mov
xor
jmp
jne
add
push
fs
adc
lods
nop
pop
dec
jno
dec
sub
and
xor
push
clc
cmps
jle
pop
mov
test
popf
(bad)
movs
scas
cmps
cmps
lea
inc
mov
sub
gs
ss
in
inc
adc
cmps
or
sub
sbb
xchg
ret
movs
(bad)
lock
and
mov
fdiv
(bad)
pop
inc
fbstp
popa
lahf
jnp
xchg
les
inc
adc
cs
dec
cmp
rcr
in
test
outs
inc
dec
inc
ja
xor
pop
push
nop
jae
adc
int
or
mov
ins
popf
ret
(bad)
adc
xor
dec
sub
lds
cmp
or
stos
fldcw
inc
fidiv
mov
maskmovq
div
fiadd
ret
sub
bound
rcr
xchg
nop
iret
jmp
inc
sub
inc
mul
ins
jle
pop
add
mov
add
popa
xchg
repnz
sti
stc
inc
cwde
cli
jae
sti
pop
pop
push
mov
and
repnz
fisubr
call
sets
adc
stc
dec
jns
mov
push
cmp
gs
pop
jae
in
jns
ins
dec
inc
adc
dec
stc
jmp
pop
data16
dec
sub
out
cmps
push
xchg
sub
lahf
outs
faddp
(bad)
shr
mov
loopne
mov
pushf
data16
pop
ja
dec
out
adc
jae
mov
xor
adc
fisubr
push
pushf
test
dec
pop
int3
arpl
icebp
pop
(bad)
sbb
sti
add
jbe
dec
dec
push
(bad)
iret
lock
shl
pusha
jnp
retf
ret
pop
pushf
mov
rol
inc
aas
lods
xor
nop
push
xlat
arpl
push
mov
nop
jno
cmc
inc
or
xchg
ja
fldcw
inc
mov
popa
and
push
push
pop
neg
les
fisub
xchg
imul
cmp
aam
or
aad
adc
inc
push
xchg
int
cdq
adc
cwde
mov
push
pop
int3
mov
sub
pop
jnp
mov
mov
addr16
sbb
outs
push
xor
push
enter
mov
mov
scas
xchg
iret
rcl
fcmovbe
push
push
jbe
das
mov
es
and
sbb
scas
xchg
bound
and
add
xchg
pusha
or
mul
and
sbb
ds
add
mov
nop
(bad)
gs
mov
out
jle
jecxz
xchg
cdq
repnz
enter
jb
mov
pop
out
loopne
push
mov
fistp
retf
add
pop
jmp
arpl
jne
cmp
mov
lods
jmp
enter
movs
jo
push
pop
loopne
stos
inc
cmps
inc
or
pushf
in
mov
mov
push
add
repz
inc
pop
push
dec
hlt
jmp
stos
aas
test
fnstcw
xchg
cmp
in
dec
jg
mov
or
jmp
jbe
mov
test
scas
xchg
lds
jno
mov
cmps
loopne
pop
sbb
outs
cmp
jmp
outs
add
mov
sbb
mov
js
movs
xchg
mov
mov
mov
sub
scas
test
adc
dec
into
fistp
adc
or
test
jg
mov
in
dec
test
pop
inc
and
dec
inc
in
test
xor
outs
and
test
clc
(bad)
mov
push
mov
jnp
out
in
pop
icebp
add
xchg
pop
mov
mov
das
push
dec
cli
mov
movs
sbb
xor
dec
sub
jnp
mov
sti
movs
stos
and
nop
push
add
mov
and
inc
push
xor
test
or
adc
scas
fimul
adc
xchg
dec
mov
fwait
push
leave
inc
(bad)
xchg
pop
fwait
or
sar
test
xchg
mov
out
ins
aam
or
push
test
cmp
or
mov
add
enter
pop
jge
repnz
cmp
lds
cmps
imul
rol
xchg
jns
aad
push
in
sbb
into
test
xor
sub
add
and
dec
fnsave
fadd
sti
push
xchg
int3
sbb
cmps
scas
mov
mov
sbb
cmp
imul
jmp
arpl
sub
scas
mov
add
out
xlat
outs
mov
xchg
inc
or
sub
test
cmps
adc
popa
sahf
lods
jmp
stos
ds
lds
inc
and
ret
jne
jecxz
mov
test
add
pushf
into
mov
or
aas
push
fwait
xchg
jno
mov
pop
xlat
call
(bad)
dec
push
pop
mov
adc
mov
pop
and
in
xlat
lahf
mov
shl
into
clc
ins
lods
mov
inc
stos
adc
sub
xor
into
pop
lods
ror
jnp
out
jmp
xchg
mov
mov
mov
sti
adc
out
inc
xchg
cs
xchg
xor
(bad)
lods
xor
adc
cwde
std
rol
out
jge
add
cmp
addr16
rol
test
daa
repz
mov
jmp
mov
(bad)
hlt
sub
adc
add
out
dec
fcomp
test
daa
sti
mov
lahf
imul
ins
imul
sahf
dec
shr
dec
mov
mov
push
icebp
inc
test
dec
jmp
sub
cwde
and
pop
ja
int
rcl
ret
or
and
and
and
aad
add
loope
rcr
aam
add
mov
mov
inc
loope
mov
xchg
sub
out
cs
fnstenv
lahf
xchg
mov
sub
mov
shl
mov
xor
div
mov
jp
mov
ins
fsub
jbe
mov
dec
adc
(bad)
lds
test
cmp
mov
fwait
(bad)
mov
out
outs
lods
and
jne
cmp
lahf
fdivr
adc
ret
and
xor
fmulp
adc
or
sbb
pushf
mov
in
cwde
loopne
add
test
cmp
pushf
xor
outs
rol
sar
dec
cmp
add
xor
(bad)
pop
aas
inc
jle
push
aam
jno
jp
dec
retf
xchg
mov
sub
(bad)
enter
es
cmp
lock
pop
jns
stos
or
call
inc
jmp
jne
pop
mov
(bad)
pop
add
rol
jp
cdq
sub
(bad)
mov
out
xor
in
icebp
add
sahf
add
jg
xchg
sbb
arpl
sbb
mov
or
mov
test
cmp
adc
sub
sub
dec
cwde
das
stos
ds
ret
mov
dec
aas
xor
sahf
inc
(bad)
add
cmp
push
cmps
mov
inc
cmp
ss
lds
pop
je
in
pop
loope
and
je
xor
mov
es
or
retf
push
dec
jecxz
leave
fmul
ffreep
fwait
arpl
xchg
push
mov
popa
mov
cmp
inc
fwait
ins
add
dec
sub
cmps
push
aam
popf
lock
in
daa
add
cmp
jbe
lods
scas
addr16
add
pop
sbb
push
pop
les
mov
push
das
push
push
inc
cmp
add
in
add
into
ret
or
and
sub
ret
fistp
mov
cwde
push
ret
add
fucom
out
add
aam
pop
in
daa
cmp
mov
in
mov
aas
inc
cmp
mov
cmc
(bad)
fxtract
xchg
push
pop
shl
std
lods
jae
pop
mov
adc
bound
in
pop
bound
imul
xlat
push
mov
jnp
aam
in
sti
push
jno
mov
sub
lods
jmp
cmp
lahf
scas
cmp
inc
jl
cmp
mov
test
fiadd
jecxz
push
(bad)
xchg
loope
xchg
sub
dec
mov
leave
push
adc
aaa
ds
cmp
das
(bad)
xchg
in
inc
mov
cwde
sbb
mov
repnz
push
mov
mov
mov
inc
jecxz
stc
ret
cli
loopne
inc
mov
or
pusha
(bad)
ret
sub
ficom
ficom
nop
or
pushf
je
mov
popf
fs
adc
mov
jecxz
nop
ds
add
sbb
mov
xlat
mov
adc
cmc
jb
cmp
aad
push
push
leave
lods
xchg
out
loop
fdiv
xchg
popf
pop
inc
mov
loopne
in
aaa
cld
lock
mov
mov
pop
and
addr16
(bad)
jge
das
xchg
fwait
or
push
jbe
mov
mov
rcl
pop
inc
(bad)
mov
out
sub
loope
cld
sub
fcomp
jmp
and
mov
stc
xchg
push
jbe
cmc
and
mov
popa
sub
clc
test
in
aad
(bad)
cmp
out
add
jmp
xor
mov
sub
sub
lea
loop
aas
stos
shl
retf
int3
and
add
sub
sbb
ror
and
cmp
daa
pushf
mov
mov
mov
sti
and
repnz
push
out
mov
jl
nop
ret
dec
lahf
idiv
push
jl
xchg
ja
cli
shl
cwde
pop
addr16
inc
jl
push
movs
loopne
dec
daa
fiadd
into
and
push
out
xchg
aam
pop
xchg
in
stos
push
inc
sub
out
int3
(bad)
mov
jns
jle
ficomp
push
dec
jmp
jle
mov
sti
jb
ret
xchg
data16
mov
inc
fistp
enter
fdivr
dec
jmp
(bad)
lock
push
add
inc
mov
mov
out
xor
inc
in
push
mov
fidiv
adc
jae
jmp
(bad)
std
popa
cwde
xchg
(bad)
out
mov
push
or
ins
mov
inc
pop
lods
push
or
pop
xchg
retf
mov
jp
adc
cmp
cmps
inc
inc
(bad)
push
adc
adc
sub
(bad)
aas
gs
inc
xchg
sub
pusha
adc
(bad)
cmp
xor
xchg
ret
jo
cld
iret
mov
mov
loopne
pop
call
dec
cmp
dec
mov
fstp
out
add
add
out
push
mov
and
adc
pop
into
cmp
push
shl
int
lods
rcl
sar
push
mov
inc
jae
push
cdq
in
push
cmp
sub
or
xchg
in
std
adc
out
mov
stos
js
icebp
mov
mov
jmp
scas
or
add
push
jmp
add
sub
mov
mov
into
add
add
call
push
(bad)
std
neg
jp
push
je
test
and
das
movs
mov
cmp
repnz
sbb
add
pop
adc
fld
mov
bound
imul
pop
stos
cdq
adc
rcr
mov
ins
jnp
inc
dec
dec
adc
jmp
loopne
mov
mov
inc
mov
int
imul
sbb
test
outs
sub
and
pop
cmp
xlat
and
pop
mov
adc
pop
or
add
xor
inc
shl
inc
ret
mov
cli
inc
mov
test
inc
mov
mov
sbb
rcr
iret
leave
mov
push
repz
adc
into
add
and
test
pop
mov
xchg
jnp
in
bound
frstor
je
lods
cwde
sbb
and
(bad)
xchg
in
push
cmp
or
xchg
sub
adc
add
mov
out
mov
pop
dec
dec
in
pop
mov
in
push
pop
add
(bad)
ja
std
add
xor
pop
dec
std
sbb
pop
aad
inc
retf
cdq
hlt
lea
sar
pop
mov
and
add
test
test
mov
jnp
or
pop
sub
dec
in
or
jae
imul
mov
sub
push
stos
fnstsw
iret
jno
xor
fstp
mov
push
cmps
or
into
pop
cmps
ja
push
or
mov
imul
jmp
or
jle
pop
push
push
xchg
mov
push
pop
pusha
or
xlat
push
and
and
xchg
cmp
(bad)
mov
fnstcw
icebp
in
loope
fmul
cmp
push
mov
imul
mov
pop
not
es
sub
add
retf
mov
adc
xchg
mov
xor
pop
cli
fsubr
rcr
xchg
and
or
in
xor
pop
ss
pop
ins
inc
push
fisttp
mov
mov
jle
push
dec
pop
cmp
aaa
mov
rol
xchg
aad
mov
pop
xor
nop
call
cs
arpl
int3
movs
push
cmp
adc
mov
and
cmp
cmp
retf
xchg
aaa
mov
add
mov
cmp
push
add
movs
or
cmps
or
mov
add
mov
sar
sbb
push
icebp
xor
xchg
ror
ss
(bad)
ins
mov
ds
std
retf
sub
nop
jge
and
aad
mov
cmps
inc
pop
in
dec
(bad)
call
stc
aam
add
sub
pop
adc
and
xchg
cld
loope
jo
ins
xchg
(bad)
je
cmove
xchg
sub
(bad)
(bad)
call
xor
rol
imul
sti
or
xchg
mov
repz
inc
mov
rcl
pop
cmp
loop
icebp
or
hlt
icebp
inc
or
mov
stos
bswap
mov
add
mov
cld
inc
xor
mov
jne
push
and
mov
lds
jne
stos
pop
sub
xchg
or
inc
rcr
mov
call
repz
shl
mov
pop
cdq
pop
call
adc
(bad)
fist
xor
fcmovne
push
or
dec
pop
aaa
pop
sub
(bad)
xchg
mov
jno
out
ja
mov
dec
das
dec
retf
add
mov
adc
ret
xor
jle
ins
mov
mov
or
pop
(bad)
inc
xor
jb
xchg
mov
std
popf
xor
lds
into
mov
xlat
sbb
xchg
xchg
sti
xchg
pop
ficom
xchg
es
push
movs
dec
mov
xlat
repnz
mov
mov
mov
ret
pushf
mov
jnp
or
mov
add
push
cmp
mov
dec
xchg
mov
add
test
cmp
nop
out
mov
ja
jno
nop
repz
pop
push
je
ret
xor
mov
inc
nop
xchg
mov
mov
mov
lahf
ja
jno
cld
inc
in
and
ret
movs
out
nop
lock
push
sti
jne
(bad)
jecxz
dec
mov
movs
jp
cmps
nop
jl
push
sar
outs
in
(bad)
fsubr
jle
mov
(bad)
ds
pop
xchg
aas
jo
dec
pushf
cmp
adc
daa
call
jmp
xchg
push
xchg
and
stos
cmps
test
or
adc
pop
jb
add
inc
push
mov
xchg
cs
loope
rol
outs
stos
out
push
fimul
out
add
add
gs
or
jmp
inc
arpl
mov
rcr
in
add
in
cwde
popf
push
xchg
xor
stc
cmps
call
mov
dec
and
in
(bad)
or
push
cdq
dec
cwde
fwait
mov
xlat
(bad)
xlat
and
cmp
fnsetpm(287
push
and
fucomp
mov
(bad)
test
sub
jge
jl
mov
xor
xchg
fsub
retf
mov
cmp
arpl
and
jno
in
out
push
mov
or
mov
popa
or
data16
dec
pop
sbb
inc
scas
inc
inc
ret
movs
push
jg
icebp
or
xor
arpl
inc
adc
xor
lods
mov
bound
test
add
xchg
push
stc
mov
out
enter
mov
jmp
in
call
rcl
hlt
jmp
out
sar
add
dec
daa
cmps
icebp
add
xchg
fnstcw
xor
cld
and
inc
sub
iret
add
pop
push
fdivrp
outs
sub
cmp
out
cdq
jbe
mov
jecxz
jmp
mov
cdq
aad
ss
lods
fcomp
pop
in
movs
out
push
fcomi
adc
mov
repnz
cmp
mov
and
push
movs
and
sub
lods
int
enter
arpl
int
in
je
cmps
retf
cmp
inc
retf
xor
leave
retf
mul
push
icebp
cmc
mov
sub
gs
ja
inc
cmp
and
es
repz
xchg
mov
xchg
inc
sub
or
mov
movs
xchg
imul
inc
call
and
aad
(bad)
sbb
add
stos
icebp
out
aam
dec
sub
and
bswap
push
shl
add
sti
sub
pop
mov
rol
xor
dec
daa
inc
(bad)
fiadd
pusha
in
mov
lahf
fdivr
sbb
mov
(bad)
int
in
popf
jnp
xchg
sub
push
and
mov
ret
jne
fadd
jne
mov
xchg
dec
in
test
jle
or
pop
mov
push
fnsave
push
and
push
sub
sbb
ss
int3
push
cli
lock
xor
dec
dec
pop
add
jne
add
in
ficom
jae
sbb
xchg
cmp
fcmovnbe
xor
sub
(bad)
(bad)
fsub
xchg
retf
(bad)
cmp
cwde
nop
adc
add
pop
ret
sbb
jg
inc
or
cmp
xor
mov
arpl
add
pop
popf
fwait
lods
ins
pop
dec
or
xor
add
mov
push
clc
adc
and
fisttp
ins
pusha
jl
arpl
pop
int
xor
adc
add
fst
cmp
mov
cmps
add
test
mov
cli
sahf
std
cmc
jae
ins
xchg
mov
aad
int3
dec
sahf
mov
sbb
nop
mov
mov
in
or
push
lds
imul
repz
mov
xor
shr
sub
imul
(bad)
sub
cmp
jp
mov
add
cmp
lods
ins
pop
add
adc
cmps
std
pop
lahf
sbb
test
movs
fistp
(bad)
and
mov
xor
loope
cmp
fxch
inc
pop
shl
jg
sub
xchg
push
popf
or
cdq
cmc
xlat
pusha
push
pushf
mov
test
inc
imul
add
loope
fld
int3
lods
jg
outs
(bad)
push
xchg
and
repnz
das
ss
dec
inc
fmul
enter
dec
fwait
int3
cmp
dec
test
mov
loopne
xor
push
fdivp
xchg
scas
mov
loopne
inc
nop
jnp
out
push
pop
sbb
push
and
cdq
(bad)
sub
int
fstp
(bad)
fnstenv
sub
inc
clc
cli
aas
xchg
pop
jg
pop
xchg
int3
je
cdq
and
or
inc
lahf
mov
jbe
(bad)
shl
xchg
pushf
scas
std
rcl
mov
in
outs
jle
mov
push
std
aaa
neg
jbe
sub
jo
jecxz
ins
sahf
jg
push
lods
jb
jp
mov
or
stos
loope
mov
sub
adc
test
or
push
adc
xchg
xor
push
jo
mov
pop
mov
sub
les
adc
and
ss
cmps
inc
test
mov
inc
outs
fcom
jmp
call
sub
xor
cmp
xor
xlat
test
cmps
aam
inc
test
test
and
sti
cdq
mov
cmp
push
stos
push
in
cmps
cmps
cmps
mov
mov
cdq
daa
jmp
or
dec
sub
pushf
lods
out
xchg
fsubr
xor
loop
call
cmp
mov
jmp
enter
push
xor
cmps
xor
and
push
popf
cmp
cmp
mov
push
xor
and
pop
inc
repnz
and
into
jo
lahf
stos
inc
inc
fld
dec
neg
fsubp
pop
mov
or
jne
jb
ins
push
scas
dec
(bad)
pop
push
add
test
movs
mov
jb
test
popa
or
cmp
ret
mov
ins
dec
dec
or
das
jl
movs
xchg
leave
pop
call
mov
movs
adc
sti
mov
or
call
mov
add
popf
pop
inc
cmpps
sub
ja
and
hlt
dec
sbb
aas
lock
pop
ss
rcr
dec
dec
xchg
or
dec
dec
cli
(bad)
mov
and
jnp
jecxz
pop
(bad)
out
sub
(bad)
inc
push
cli
mov
cmp
in
mov
or
xor
bound
mov
test
sub
and
test
adc
pop
sub
sar
or
sub
jecxz
fmul
jmp
cmp
in
iret
fcmove
cmps
xchg
pop
sbb
dec
pusha
out
sbb
or
(bad)
in
add
cmp
(bad)
pop
lods
inc
shl
dec
adc
loopne
cmp
fidivr
fwait
xor
and
mov
or
(bad)
in
cli
mov
pop
inc
in
push
ret
xchg
xor
add
sbb
(bad)
pushf
pop
or
iret
mov
loop
data16
sbb
add
jg
jmp
lea
push
cli
loopne
test
call
ss
cdq
xor
lods
retf
sub
into
scas
dec
push
xchg
cmp
aaa
xor
mov
dec
cmp
retf
enter
xchg
mov
xor
fwait
jp
scas
(bad)
pop
mov
ins
dec
adc
es
lods
jnp
mov
jmp
pop
(bad)
clc
(bad)
call
ins
xor
dec
jno
int
cmc
push
enter
test
jno
jge
sbb
adc
jle
(bad)
mov
or
sbb
(bad)
daa
loop
int3
emms
call
mov
imul
sub
iret
sbb
sbb
push
ins
mov
and
shl
xchg
xchg
scas
cmc
add
loop
fld
mov
sub
pop
and
inc
fnstenv
clc
cmps
dec
mov
(bad)
in
and
imul
fs
enter
xchg
inc
mov
mov
mov
pop
sbb
adc
lahf
adc
out
(bad)
enter
and
jns
adc
int
ins
push
sbb
sbb
sub
inc
pop
xchg
mov
call
pushf
adc
dec
mov
lods
sbb
or
add
adc
pusha
mov
(bad)
pop
sub
fsub
jo
push
lock
fisttp
sbb
push
cmc
mov
and
iret
neg
inc
popf
mov
pop
lds
dec
mov
cld
(bad)
fiadd
retf
ret
jl
mov
into
les
push
mov
adc
fisubr
leave
adc
aam
jge
fucomp
mov
popf
scas
xchg
call
cwde
lds
mov
cdq
jne
or
and
mov
add
cli
loop
loope
cmp
mov
fiadd
lods
pop
adc
dec
push
popf
mov
mov
push
jmp
inc
push
test
pop
fs
mov
and
stc
pop
push
add
int3
ret
jmp
pop
std
popa
fmul
shr
lods
ins
call
xchg
mov
inc
mov
mov
push
pcmpgtw
fs
daa
dec
dec
sub
shl
gs
fiadd
add
repz
jg
das
inc
xchg
mov
sub
mov
sti
or
jecxz
retf
dec
hlt
fcom
lea
repnz
outs
adc
or
inc
mov
aaa
sar
jnp
mov
add
fsub
std
rol
mov
push
fwait
aam
adc
cwde
pop
jmp
cmp
in
xchg
pop
(bad)
(bad)
xchg
aaa
pop
add
enter
xlat
test
or
retf
(bad)
js
jb
lds
fld
dec
inc
push
jecxz
lock
mov
mov
mov
mov
push
or
sbb
and
mov
add
(bad)
push
out
mov
mov
pop
add
test
or
jns
(bad)
jnp
lahf
movs
(bad)
in
(bad)
jnp
dec
loopne
sub
sub
les
xchg
dec
mov
ins
retf
test
ffreep
mov
cwde
and
aad
cmps
mov
pop
pop
add
inc
lea
mov
stos
push
add
mov
push
cwde
xchg
hlt
mov
push
mov
out
out
hlt
pop
ins
retf
int3
(bad)
adc
enter
pop
push
int
sbb
jle
mov
jno
scas
pop
dec
fadd
pop
push
cwde
in
hlt
inc
inc
xor
xor
stc
out
sub
in
pop
pop
imul
mov
cmp
jg
(bad)
pusha
jns
and
push
cmp
shl
mov
mov
xor
mov
sub
pop
js
jle
jbe
and
call
jmp
sub
rcr
sti
jge
pop
fistp
and
push
push
int
sbb
(bad)
jle
jg
daa
xor
jbe
push
punpcklbw
mov
daa
test
ret
mov
imul
ds
(bad)
add
pop
sti
jmp
fild
inc
xchg
int
ds
xor
mov
pop
push
fldcw
(bad)
ja
iret
repz
and
dec
shr
call
mov
pop
cmps
sbb
or
adc
mov
sub
inc
pop
cdq
sub
or
inc
imul
aad
ror
sar
push
test
jmp
daa
push
push
sub
mov
jnp
mov
sahf
dec
xchg
or
imul
or
fld
inc
adc
jno
out
mov
cmc
cmps
xchg
xchg
bound
xchg
push
lea
push
mov
aam
(bad)
pop
imul
imul
xchg
pop
adc
leave
xchg
cli
sbb
pop
dec
cmp
mov
jb
mov
repnz
test
test
sar
xchg
test
jo
leave
dec
adc
mov
repnz
stos
pop
test
neg
dec
dec
pop
dec
repnz
repnz
pop
jg
cmp
popf
sub
pusha
pop
adc
or
(bad)
out
mov
stos
inc
cdq
adc
inc
mov
push
push
jp
xor
and
daa
sbb
sub
sub
sbb
xchg
xchg
cmp
ja
xchg
jno
rol
pop
cmps
xrelease
dec
mov
ins
sub
dec
imul
pop
inc
xlat
(bad)
aas
hlt
adc
ret
ret
mov
sub
adc
out
and
pop
and
push
add
xchg
jge
or
mov
adc
xchg
push
and
jmp
xchg
in
xchg
push
or
fadd
fdivr
fcmovb
sbb
mov
adc
ds
sub
cli
rol
lahf
(bad)
jg
add
ret
adc
inc
std
add
cmp
loop
std
out
cdq
sbb
mov
xor
inc
cld
(bad)
call
shr
push
js
ror
xor
das
and
xchg
mov
out
ds
dec
jecxz
loope
push
xchg
js
push
add
add
jo
jae
std
inc
enter
cld
mov
aam
inc
icebp
jae
mov
test
cmp
int3
scas
sbb
movs
dec
shr
shl
sub
xlat
push
(bad)
test
adc
lods
rcr
push
mov
xor
dec
retf
jmp
repz
retf
adc
xchg
loope
rcr
and
xchg
sbb
call
(bad)
sar
std
in
push
leave
fstp
or
lds
imul
enter
std
fimul
enter
dec
retf
add
cdq
ror
and
test
ins
loopne
sub
sbb
mul
stc
retf
fld
cs
int3
mov
sbb
adc
pop
les
sbb
fsubrp
mov
pop
jge
outs
and
add
(bad)
call
dec
(bad)
(bad)
fild
rol
int
or
jo
call
jp
neg
scas
mov
jo
cs
(bad)
mov
sub
dec
int3
jmp
xchg
shl
out
push
int3
inc
adc
adc
cmps
sbb
add
test
out
mov
fucomip
ins
lea
ret
pop
loop
(bad)
sub
pushf
mov
push
(bad)
mov
mov
and
xchg
sar
out
add
loope
sub
ret
pop
jle
fistp
mov
popf
shr
xor
xchg
sub
scas
xchg
adc
rcl
jge
jmp
test
xchg
jo
jg
sbb
mov
jp
mov
push
in
push
(bad)
in
sub
fidiv
mov
sahf
popa
sbb
mov
pop
xor
(bad)
and
jl
sbb
ds
(bad)
not
out
pop
out
movs
das
loope
add
cld
das
pop
adc
out
push
xchg
mov
dec
push
pop
(bad)
and
ret
fadd
adc
gs
imul
gs
shl
jmp
(bad)
jo
in
stos
and
jns
xor
pop
mov
mov
jg
jg
aad
(bad)
stos
arpl
inc
xchg
cwde
setae
sub
int3
jno
adc
sahf
int
loopne
inc
mov
sbb
cmp
cli
or
inc
retf
xor
add
arpl
lock
repnz
and
xchg
xchg
data16
xor
jg
cmps
addr16
mov
push
sub
imul
add
ja
push
xor
sti
ins
cli
in
adc
inc
hlt
out
or
mov
and
or
out
pop
mov
pop
xchg
leave
pop
sbb
mov
js
push
movs
sahf
aad
shr
xor
fistp
cmp
mov
lea
int
push
jo
iret
mov
fldcw
jno
fdiv
pop
ret
and
loopne
movs
xor
push
mov
xor
pop
fidiv
mov
ret
add
iret
mov
mov
jb
or
inc
dec
push
scas
xchg
mov
mul
sbb
jae
mov
sbb
leave
hlt
(bad)
pop
xor
dec
and
cdq
or
movs
sar
add
aas
lods
mov
loop
add
rol
iret
mov
and
add
jecxz
xor
sub
sub
vminss
sar
ret
das
sub
cmp
bnd
pop
pushf
pop
repnz
pop
ins
cmps
pop
and
cmps
mov
push
fimul
mov
repz
inc
(bad)
jo
adc
mov
test
cmp
mov
fld
push
xchg
in
or
loope
rcr
sti
jnp
pop
or
shl
xchg
outs
ins
jne
jb
cli
int
fisttp
retf
jno
add
add
lds
mov
mov
in
push
and
push
push
sub
sahf
jmp
cld
cmp
out
pop
push
jl
mov
xor
dec
sahf
mov
mov
test
bound
sti
inc
xchg
add
pop
repz
cwde
fistp
popa
addr16
imul
outs
pushf
jno
movs
(bad)
pop
dec
jl
dec
ins
js
pushf
xchg
int
jne
mov
push
stc
mov
es
scas
out
and
ins
mov
js
(bad)
mov
or
(bad)
mov
sbb
cmp
int
adc
xchg
mov
ins
leave
std
add
sbb
gs
popa
or
lods
cmp
call
lahf
movs
ds
mov
dec
inc
dec
jl
pop
pop
sbb
sbb
daa
xchg
popa
cwde
push
jae
pushf
movs
jbe
add
sub
dec
aaa
(bad)
div
xor
mov
(bad)
call
aas
cli
xor
je
leave
xor
xchg
out
test
xchg
sbb
lods
push
mov
int
push
jnp
pop
nop
push
aas
push
data16
pop
mov
stc
sbb
shl
adc
loope
gs
dec
std
cmp
adc
rol
daa
inc
sub
pop
xor
int3
cld
mov
rcr
bsf
mov
std
aad
push
xchg
mul
xor
sub
cmp
rcl
jns
jbe
jns
mov
dec
hlt
mov
out
loope
cmps
xchg
idiv
rcr
rcr
shl
sbb
jl
jg
ror
jns
cmp
mov
imul
test
push
mov
ins
sar
and
fwait
repz
shld
mov
or
data16
popa
pop
lods
mov
mov
add
es
jno
adc
imul
jmp
and
cmp
jno
mov
dec
mov
ds
mov
aad
pop
push
push
daa
ror
bound
(bad)
jae
imul
cdq
loopne
mov
sub
xor
(bad)
xor
or
(bad)
dec
das
outs
jns
(bad)
xor
cld
pop
or
aad
test
pop
ret
xor
dec
xor
dec
or
or
adc
lahf
dec
je
call
imul
cmp
retf
sub
xchg
ins
stc
sbb
mov
lea
and
nop
push
mov
mov
scas
push
retf
xor
loopne
jnp
or
cmc
out
aam
mov
scas
ja
pop
add
dec
out
or
xor
mov
adc
std
loopne
adc
add
add
inc
pop
xchg
ss
mov
inc
sub
sbb
add
vunpckhps
rcr
jle
dec
loop
sub
call
inc
xchg
(bad)
icebp
nop
mov
mov
ins
loopne
or
or
cli
dec
xor
adc
add
mov
retf
test
shl
pusha
daa
dec
(bad)
cmp
cmps
jp
or
mov
sub
sub
fstp
enter
daa
dec
pop
mov
cmp
inc
cmc
mov
cmp
mov
jb
xor
adc
inc
je
add
loope
int3
fcomi
or
fadd
popf
fstp
adc
mov
outs
inc
pop
cli
xchg
dec
ret
sar
or
dec
dec
outs
jmp
jmp
rol
imul
add
push
scas
add
repz
mov
rep
test
sbb
and
and
ret
(bad)
pop
sub
stc
add
push
push
push
mov
psraw
jmp
sub
test
push
(bad)
cwde
aam
(bad)
rcr
or
mov
scas
jle
inc
les
js
arpl
jl
xchg
xchg
clc
sub
adc
and
scas
sbb
stc
cs
dec
mov
sub
push
pop
retf
rcr
fbld
mov
fbstp
out
sbb
gs
cmp
mov
(bad)
mov
mov
aas
xor
xor
cmps
mov
scas
adc
pop
and
dec
ss
frstor
cmps
dec
pop
xor
and
cli
xlat
sbb
mov
lds
sub
lock
xor
mov
xchg
mov
not
dec
pushf
fld
and
xcrypt-ctr
cmps
pop
lahf
popa
mov
pop
jo
movs
pop
bound
jns
(bad)
retf
repz
lock
dec
jmp
pop
cmp
ja
jmp
lock
cdq
or
sbb
mov
cmp
jno
push
add
adc
(bad)
lock
jmp
out
mov
imul
and
popf
adc
jne
push
mov
mov
lea
jae
fisubr
bound
dec
mov
cmps
(bad)
xor
or
aaa
sbb
mov
cli
nop
jl
dec
cmp
jne
pop
aam
sahf
push
bound
scas
pop
dec
xchg
push
jne
icebp
int3
lods
outs
ja
aaa
(bad)
or
mov
add
sub
mov
scas
sbb
inc
add
pop
sub
dec
mov
test
(bad)
xlat
icebp
(bad)
and
xchg
mov
out
sub
jmp
xchg
imul
lahf
fst
inc
std
sar
pop
dec
lods
mov
mov
pop
pop
aad
push
push
jg
inc
cs
push
retf
cmp
ja
inc
rcl
idiv
aas
xchg
arpl
(bad)
mov
pop
dec
repnz
test
jge
sub
cmp
sbb
pushf
shl
push
or
or
pop
mov
jb
shr
mov
loop
add
js
retf
push
stos
jg
sbb
ficomp
mov
loop
cld
sar
pop
cmp
cmp
in
and
add
mov
iret
mov
lahf
loope
mov
(bad)
jmp
in
mov
xchg
gs
sbb
daa
leave
pop
sub
lods
inc
adc
out
inc
lds
mov
cmp
adc
inc
jbe
push
lds
dec
call
test
cli
jmp
(bad)
(bad)
mov
js
daa
sbb
std
(bad)
and
mov
in
jb
push
inc
out
xor
xchg
xlat
adc
lahf
mov
in
mov
sar
mov
cli
loopne
dec
mov
stos
xor
jp
shl
mov
push
jne
daa
(bad)
and
jo
test
mov
or
(bad)
test
out
or
xchg
sbb
xchg
pushf
dec
add
jecxz
inc
rcl
dec
call
dec
jge
test
sahf
inc
cli
cmp
cmps
fwait
aaa
(bad)
cmc
pop
jg
les
fstp
and
ss
and
movs
sbb
mov
jbe
into
xor
retf
(bad)
stc
leave
fwait
and
test
cmps
stos
jae
sub
jnp
dec
out
iret
add
cli
test
shl
fdivr
cmp
add
push
inc
jne
pop
aas
sti
cmp
outs
dec
cmps
(bad)
pop
(bad)
(bad)
cmps
call
or
scas
pop
adc
aad
inc
sbb
fisubr
mov
jecxz
mov
sar
adc
or
leave
mul
aam
dec
add
es
lods
int
push
or
outs
movs
xchg
call
loope
mov
lahf
adc
cmp
in
sbb
aam
je
scas
add
sahf
cld
jbe
xchg
cli
mov
imul
xor
mov
jecxz
ret
sbb
xchg
(bad)
xor
dec
into
xchg
iret
loop
pop
jmp
out
sbb
nop
xchg
jno
ds
test
and
shl
push
cmp
inc
dec
fmul
mov
popf
imul
in
bound
dec
push
mov
lahf
pop
xor
sbb
sub
js
pop
aad
xchg
jo
push
or
mov
fsub
and
fist
push
jmp
xchg
push
loop
(bad)
xor
xchg
stos
sbb
das
pop
iret
jbe
daa
sti
push
cmp
sbb
repz
inc
mov
mov
repz
int3
mov
(bad)
push
shl
pop
retf
pop
sub
and
pushf
cld
aam
fimul
mov
aam
stos
mov
sub
imul
jnp
mov
mov
aam
nop
mov
mov
sbb
cmp
or
in
mov
test
inc
clc
mov
popf
and
(bad)
or
mov
mov
arpl
jecxz
inc
rol
fisub
dec
dec
mov
aas
retf
jnp
mov
ss
inc
aam
inc
dec
mov
mov
xor
cli
lds
and
xchg
repnz
xchg
addr16
jns
xchg
fdivr
mov
push
sub
adc
xlat
jge
int3
fwait
jle
push
in
xchg
sbb
cmp
dec
out
adc
mov
stos
push
mov
gs
sub
push
mov
push
vmwrite
fild
js
xor
enter
sti
movs
outs
mov
stc
mov
daa
adc
fcmovne
push
pop
adc
push
add
je
xchg
cmp
sahf
sahf
scas
daa
fild
sbb
popf
hlt
add
push
jle
pop
lea
xor
cmp
mov
cmps
call
test
push
jge
retf
fcmove
loop
icebp
jp
sbb
pushf
xchg
(bad)
xor
test
sub
rcl
pop
add
cmp
xchg
mov
lahf
jbe
pop
pop
and
push
xchg
stc
in
int3
out
xchg
test
aam
test
in
int
xchg
iret
popf
sub
in
neg
pop
lea
sub
sbb
test
jo
int3
mov
cmps
daa
scas
in
mov
cli
fdivr
and
int3
nop
inc
jb
scas
pop
shr
sub
and
jne
(bad)
sbb
xchg
pop
cmp
or
popa
stos
test
fmul
out
cli
call
lods
test
scas
cmc
mov
daa
mov
ror
(bad)
out
jns
popa
push
sti
mov
xchg
add
and
push
bnd
and
jp
pusha
adc
repz
adc
push
ja
mov
mov
mov
mov
dec
cwde
cwde
cwde
xchg
int3
dec
(bad)
(bad)
mov
sub
scas
(bad)
cmp
(bad)
adc
xor
jmp
sbb
push
add
jl
xor
and
int
sub
sub
pop
push
xchg
sbb
mov
mov
cwde
and
xchg
rcl
add
mov
mov
mov
or
arpl
in
mov
add
xchg
adc
add
outs
dec
sqrtps
call
std
lahf
mov
mov
mov
mov
xchg
out
in
ss
fnclex
fistp
test
and
inc
mov
mov
pop
call
push
loop
(bad)
jmp
jle
into
mov
mov
popa
es
clc
mov
out
jmp
adc
sbb
pop
jo
ins
sbb
hlt
pushf
inc
retf
ret
(bad)
dec
push
jno
or
adc
mov
push
sub
cmps
retf
(bad)
cmp
gs
pop
mov
jbe
stos
std
or
pushf
xchg
das
frstor
and
mov
mov
js
je
sub
inc
or
pop
jmp
out
adc
test
pop
shl
inc
mov
and
push
mov
dec
xlat
xchg
mov
imul
dec
dec
shl
pop
mov
push
scas
inc
or
pop
sti
inc
pop
repz
or
push
sbb
jno
adc
sahf
xchg
mov
inc
movs
push
stc
or
xor
mul
xchg
(bad)
scas
cmc
shr
(bad)
adc
pusha
out
stos
test
push
cmp
jl
in
inc
aam
fild
cmp
mov
imul
mov
lahf
mov
pop
jne
iret
test
mov
cs
popa
mov
es
leave
xchg
fwait
mov
lea
enter
enter
jmp
in
fstp
test
std
push
(bad)
push
std
mov
in
dec
sub
jbe
lahf
xchg
cmp
jnp
mov
aas
adc
push
cmp
(bad)
jae
mov
loopne
cmp
gs
arpl
mov
popa
or
adc
cmps
jp
retf
and
mov
cdq
mov
test
mov
or
add
lds
pushf
xor
push
or
jmp
out
out
(bad)
inc
test
outs
pop
repz
lds
sbb
push
or
pushf
pop
push
mov
cwde
les
test
mov
fmul
jb
push
fs
lods
mov
rol
jg
(bad)
push
in
data16
mov
xchg
jnp
dec
aaa
shr
sahf
lock
int3
mov
hlt
jbe
scas
push
push
iret
jmp
or
add
retf
test
or
int3
inc
push
jo
xor
fdivp
inc
imul
dec
sar
dec
fnstsw
je
jmp
add
adc
out
(bad)
xstore-rng
cmps
ret
cmps
xlat
push
inc
or
jl
sbb
and
ja
xchg
pop
jg
int
shl
dec
cmps
mov
xor
mov
add
and
xchg
jae
lods
stos
mov
arpl
inc
pop
mov
sti
adc
sbb
sti
outs
(bad)
push
push
dec
aaa
aad
xlat
scas
ror
(bad)
sar
adc
pop
aad
sbb
(bad)
in
inc
retf
cmp
rcl
fimul
sbb
jb
jno
pop
test
push
xchg
scas
iret
pop
inc
mov
mov
dec
sbb
enter
xchg
jae
and
in
or
nop
rcl
ds
jl
sub
pop
add
xchg
icebp
gs
xor
pop
in
out
ficom
(bad)
imul
enter
clc
in
in
cld
mov
inc
scas
sahf
cwde
jmp
shl
jne
mov
test
dec
cmp
mov
inc
icebp
dec
lods
test
outs
dec
pusha
xchg
lea
jae
ja
add
jb
dec
addr16
lods
jp
cmp
aam
sbb
sbb
stc
sub
push
xchg
aaa
dec
pop
pushf
and
rcl
shl
xchg
mov
shl
mov
or
mov
push
imul
jnp
imul
adc
(bad)
movs
aad
push
pop
dec
mov
mov
xchg
jg
pop
xchg
mov
mov
sub
jo
loop
fisubr
in
loopne
xor
add
cld
pop
add
adc
inc
dec
(bad)
(bad)
int
(bad)
(bad)
fisttp
adc
ins
cld
fist
loop
ss
add
adc
inc
and
mov
pop
sbb
ja
xor
mov
fld
pushf
push
lods
add
jne
data16
jae
dec
jg
sbb
movs
xor
inc
mov
pop
xor
and
popf
mov
aam
push
call
sbb
cli
push
adc
jbe
inc
or
icebp
test
dec
sbb
cmp
shr
pop
add
dec
add
mov
sbb
addr16
mov
cli
aaa
inc
icebp
mov
loop
js
arpl
sar
scas
jb
jno
lds
das
push
sbb
pop
aam
mov
popf
dec
clc
cmp
sti
sub
adc
sub
dec
inc
add
adc
nop
int
jmp
mov
gs
retf
pusha
add
jmp
fs
mov
ins
lds
xchg
idiv
jmp
mov
jne
inc
fwait
xchg
jns
xor
sbb
test
outs
imul
js
aaa
scas
sbb
push
nop
dec
push
push
mov
jle
jns
cmp
gs
stos
sbb
lock
adc
xchg
js
lock
push
dec
inc
xchg
ja
(bad)
call
sbb
aaa
repnz
push
mov
mov
das
retf
mov
cmp
pop
sar
jmp
cmp
mov
dec
jmp
sub
jmp
dec
outs
icebp
mov
shl
mov
cmps
cmp
aam
xor
dec
jle
dec
repz
inc
fdivr
and
(bad)
fist
push
cmp
aad
pop
sbb
cmp
xor
push
mov
lahf
ficomp
daa
adc
and
sbb
fimul
stos
lods
ret
sbb
sbb
pop
inc
loop
ror
outs
enter
jl
adc
lock
cmc
fsubr
ja
jg
loop
xchg
inc
or
ret
or
clc
test
pop
shl
mov
sub
or
or
mov
daa
popf
test
xchg
push
out
mov
add
fsub
adc
push
ret
fcomp
int3
aad
and
push
push
add
cmc
cmp
shl
sbb
gs
xlat
cwde
sbb
adc
pop
sub
mov
dec
hlt
lock
mov
sub
push
pop
inc
ret
in
ins
mov
(bad)
dec
ja
xchg
inc
in
enter
aam
(bad)
in
mov
pop
dec
pop
xchg
or
fisttp
loopne
out
xchg
imul
int3
jae
mov
cmp
and
loope
adc
pop
pop
out
sbb
cmps
das
mov
fstp
inc
and
sbb
push
or
popf
rcr
pop
out
sbb
mov
cmps
repz
pop
ret
push
xchg
pop
sub
mov
(bad)
push
sbb
test
cmps
sub
add
loopne
adc
xor
cdq
call
rcr
(bad)
out
sbb
push
sbb
mov
sar
hlt
dec
mov
cmp
test
xor
adc
and
and
movs
(bad)
fwait
mov
adc
xchg
mov
sbb
es
cmps
(bad)
popa
leave
aam
inc
ficom
je
cli
cmp
ins
into
mov
mov
sub
dec
xchg
(bad)
pop
dec
clc
(bad)
aaa
enter
adc
jp
inc
repz
push
int
sbb
push
dec
rcl
pop
mov
inc
push
dec
ficom
pop
ret
or
cmp
xor
dec
in
popa
es
mov
das
or
lods
inc
nop
or
clc
(bad)
retf
les
dec
jnp
or
test
cmp
cmpps
fstp
movs
scas
add
sbb
xor
cdq
push
fsubr
mov
out
push
mov
or
sbb
add
fwait
push
and
ffreep
cmc
push
pusha
dec
add
cmps
loope
xor
inc
push
pushf
test
xchg
imul
in
push
not
push
imul
shl
inc
(bad)
and
movs
push
mov
mov
cli
gs
sar
push
cdq
push
repz
(bad)
cld
call
addr16
cmps
and
xchg
dec
xor
inc
imul
inc
sahf
mov
bound
jge
sub
(bad)
pop
or
dec
mov
mov
jl
cmps
mov
hlt
in
in
jmp
fidiv
in
xor
call
(bad)
nop
jg
pxor
sub
jns
adc
add
cmp
jg
test
sub
ficom
or
outs
iret
(bad)
or
sbb
sti
scas
sub
(bad)
adc
pusha
lds
cmp
xchg
inc
movs
sub
retf
int
ret
fistp
das
and
dec
mov
push
add
stos
mov
lods
pop
push
adc
(bad)
sub
push
xchg
hlt
icebp
outs
pusha
les
mov
lahf
mov
in
dec
push
mov
(bad)
loope
icebp
fild
add
inc
addr16
ds
jae
fst
int
mov
mov
movs
or
push
mov
jno
sub
lods
inc
dec
movs
push
jle
adc
add
sbb
fiadd
mov
mov
fnstenv
(bad)
mov
xor
inc
stos
mov
dec
pop
sub
int
mov
cld
mov
xor
out
mov
movs
lock
pop
fs
inc
out
pusha
mov
mov
and
xchg
test
div
leave
fs
mov
and
ror
and
jmp
fmul
cmp
movs
jne
sti
not
loop
ins
cmp
inc
or
mov
inc
ret
movs
out
leave
sti
and
push
imul
vmread
cwde
sub
inc
pop
dec
or
popa
das
cmp
ss
mov
popa
call
cmp
mov
retf
sbb
inc
or
dec
pop
xor
cld
jle
mov
push
imul
dec
mov
or
mov
stos
mov
lea
mov
test
retf
leave
mov
xchg
(bad)
push
adc
pop
mov
or
aad
mov
shl
dec
lds
fwait
adc
jge
call
mov
dec
xchg
fisubr
jb
ja
in
add
pop
test
cli
mov
ret
repnz
mov
xchg
or
shr
add
sbb
jae
not
call
or
ss
lock
add
out
mov
fiadd
je
mov
out
mov
mov
movs
aas
xor
cli
cmp
mov
dec
xor
fidivr
call
mov
pop
jmp
xchg
call
mov
sbb
xor
pop
bound
and
cmp
mov
outs
sub
fist
jg
mov
jo
nop
bound
xchg
jge
int3
repnz
out
adc
dec
adc
les
jmp
mov
pop
lock
pop
ins
gs
push
dec
movs
xor
pop
imul
sti
mov
or
add
rcl
pop
xchg
xor
ret
test
dec
repz
pop
push
mov
adc
ret
cs
retf
cmp
sbb
mov
fbstp
repnz
mov
aaa
aam
sar
dec
sbb
push
jo
xor
das
loop
sub
jo
aam
div
in
sbb
call
shl
adc
jle
loope
mov
inc
dec
adc
sub
inc
data16
nop
pop
jp
cmc
cmp
ds
and
xor
pop
repnz
aaa
mov
sub
fsubr
(bad)
or
jnp
sahf
(bad)
out
pusha
fistp
or
aad
jp
std
sbb
cmovge
ins
cmp
inc
icebp
lahf
push
sbb
push
fistp
movs
out
aad
mov
repz
and
dec
adc
mov
fstp
xlat
xor
sti
jns
pop
aaa
sahf
adc
jns
mov
fidiv
pop
cmp
mov
push
inc
mov
push
and
sti
das
int3
add
mov
push
jae
out
iret
js
sbb
push
retf
cmp
leave
mov
bound
test
sub
pop
(bad)
sub
mov
call
sub
sbb
jne
loope
xchg
aad
test
jle
ss
sub
nop
ins
fistp
mov
add
mov
leave
repnz
add
jg
aad
sbb
sti
xor
dec
mov
bound
leave
xchg
rol
dec
aad
mov
mov
ja
mov
aad
dec
push
(bad)
jb
outs
enter
dec
es
movs
push
in
in
xchg
pop
push
das
push
xor
sahf
jle
icebp
pop
ins
inc
retf
push
fwait
cmp
pop
out
outs
out
sbb
ja
xchg
xor
jne
sbb
dec
movs
or
cdq
mov
push
xchg
aaa
hlt
mov
movs
sahf
xchg
leave
cwde
pop
gs
adc
pop
(bad)
dec
jecxz
ins
cmc
scas
xchg
push
mov
push
nop
cmps
jg
inc
xchg
outs
dec
icebp
lods
dec
bound
lods
pop
cmp
dec
mov
sbb
bound
fcomip
push
and
mov
push
jae
enter
int
mov
in
push
out
sub
js
dec
(bad)
hlt
jne
aaa
jecxz
lods
ja
in
xor
pop
xor
out
jae
jg
sti
fs
add
cmovae
adc
adc
rcl
dec
jbe
cdq
dec
mov
add
into
out
mov
les
and
inc
mov
sbb
dec
daa
stos
das
movs
or
mov
popa
jl
push
push
(bad)
hlt
xor
in
jae
xor
and
repnz
fisub
mov
xor
and
mov
out
adc
fnstcw
and
sub
add
stos
jp
addr16
or
outs
outs
mov
int3
or
xchg
jmp
mov
push
pop
dec
into
mul
mov
test
hlt
sbb
ret
cmc
nop
imul
mov
lock
and
mov
xchg
sub
add
bound
jmp
sbb
sub
into
rcr
popf
add
and
stc
adc
inc
dec
xchg
clc
cld
mov
add
mov
jnp
int
in
imul
imul
and
xchg
lea
je
mov
and
jne
dec
mov
sbb
in
pxor
imul
inc
div
xchg
xor
mov
push
(bad)
shl
adc
xchg
fst
push
push
jnp
stos
adc
jnp
jl
xor
push
std
cmp
inc
mov
test
mov
dec
outs
test
stos
xchg
sub
add
adc
test
clc
add
(bad)
in
jmp
push
popa
aas
xor
sbb
or
pop
lods
cmps
mov
mov
mov
mov
popa
inc
and
mov
nop
out
add
pop
mov
xor
jle
(bad)
adc
mov
mov
cwde
scas
js
jge
fidivr
imul
push
addr16
daa
mov
jmp
sbb
fisttp
aam
addr16
inc
inc
iret
and
push
push
fcom
inc
dec
mov
cmp
mov
adc
xchg
pop
inc
in
out
lods
fcom
push
mov
or
cmp
leave
shl
push
sbb
loopne
xor
pop
adc
adc
jmp
cld
ds
aad
dec
pop
mov
idiv
icebp
aas
add
jnp
out
mov
mov
in
div
mov
xor
fwait
jmp
push
inc
(bad)
sub
data16
xchg
div
lahf
jne
cli
aaa
adc
inc
shr
cmp
push
inc
adc
std
and
js
scas
mov
mov
mov
mul
int
cmps
xchg
cmp
call
rcl
add
sub
retf
mov
std
add
sbb
fst
add
imul
pop
mov
jne
adc
jecxz
arpl
mov
jmp
imul
jecxz
sub
push
sbb
xor
jbe
or
sbb
call
sbb
cld
pop
in
jle
mov
aaa
lahf
addr16
out
or
xor
xchg
xchg
test
mov
inc
shl
clc
jle
adc
cmp
jp
or
test
mov
dec
cmp
dec
movs
cmp
(bad)
mov
clc
dec
test
mov
mov
test
or
in
add
adc
xor
inc
mov
jnp
das
repz
cld
test
sti
inc
enter
test
mov
(bad)
loopne
xchg
xor
je
sub
mov
aas
(bad)
call
mov
daa
push
jle
sbb
push
dec
xchg
data16
pop
scas
in
fild
mov
lods
jg
sub
push
int
(bad)
popf
add
es
gs
out
ds
mov
ficom
loop
jmp
push
pushf
sub
outs
pop
gs
xor
dec
mov
inc
add
mov
ins
jge
jle
stc
jns
pop
iret
cmp
mov
aam
pop
lea
mov
dec
add
xchg
call
leave
sahf
(bad)
gs
cmp
push
mov
out
loop
inc
jecxz
inc
dec
out
pop
jae
lea
mov
shl
std
cmps
push
rol
cmp
loop
mov
scas
movs
test
mov
add
push
aam
out
and
mov
pop
mov
mov
hlt
jecxz
imul
into
mov
dec
and
xlat
add
pop
pop
and
add
sbb
loope
aas
movs
lods
mov
dec
sbb
xchg
xor
imul
ss
movups
inc
ror
mov
mov
mov
push
pop
dec
pop
jo
cmp
mov
scas
xchg
pop
pop
pop
inc
in
(bad)
ficom
mov
(bad)
sbb
jne
push
pop
mov
popf
or
call
xlat
fcmovne
outs
pop
add
push
test
pop
ret
cmp
out
mov
and
mov
(bad)
cmp
mov
cmps
aam
sbb
(bad)
sahf
push
xchg
ss
jbe
push
xchg
(bad)
ds
mov
aad
sub
xchg
push
repnz
hlt
pop
fwait
mov
in
das
inc
jnp
into
jo
mov
xchg
fcmovu
xchg
imul
jecxz
(bad)
jmp
(bad)
jnp
outs
nop
in
scas
inc
pop
out
stos
out
inc
cld
scas
mul
fcomp
pop
cmp
lods
push
sub
scas
xchg
mov
iret
dec
and
xchg
jns
dec
xor
xor
xchg
sub
push
mov
sahf
xchg
xor
push
add
push
mov
xor
imul
mov
jns
test
mov
adc
lods
cmp
cmp
xchg
iret
adc
iret
je
mov
cmp
je
sub
mov
std
jmp
call
(bad)
sbb
imul
or
ficomp
xchg
repz
scas
dec
leave
loop
mov
adc
stos
adc
les
retf
idiv
lock
pop
ror
dec
pop
push
pop
jne
ret
jecxz
mov
into
adc
pop
sub
repnz
dec
cld
push
mov
cdq
cmp
and
or
pop
stos
push
push
call
xchg
jl
(bad)
cmps
inc
repnz
shr
in
dec
int
jmp
sub
loop
pop
movs
push
cli
push
mov
in
fisubr
enter
push
xchg
add
pop
pop
fild
mov
out
add
daa
fnstcw
aas
ss
push
aam
inc
xlat
aam
nop
gs
jns
aam
sbb
in
retf
dec
aam
xchg
ja
and
dec
or
mov
stos
xor
ret
pop
je
and
lods
(bad)
pop
stos
pusha
xchg
jns
rol
fcom
jle
cld
gs
fs
daa
(bad)
popf
shr
jmp
mov
inc
call
loopne
ins
hlt
aad
cmp
sub
and
out
xor
je
into
sbb
scas
xchg
scas
adc
call
jmp
fwait
cmp
rcr
dec
add
test
fisttp
push
test
pop
ja
sar
jnp
stos
repnz
test
movs
aad
pop
and
jnp
fs
cmp
cmp
aam
rcr
inc
(bad)
cmp
(bad)
in
or
in
dec
(bad)
sub
in
push
dec
xchg
inc
out
mov
adc
cwde
or
punpckhbw
adc
pop
and
sbb
pop
jb
bound
test
pop
shr
arpl
shr
push
mov
jg
call
loop
or
imul
mov
push
add
outs
mov
adc
stos
fst
jecxz
dec
xchg
arpl
push
aam
or
cmp
fisub
stos
dec
push
imul
xchg
popf
jnp
push
dec
xchg
xchg
xchg
adc
mov
sahf
pop
jmp
stos
pusha
in
jl
xchg
add
xchg
sar
jnp
and
dec
ins
add
and
adc
stc
lock
jne
arpl
cmps
sub
arpl
icebp
stc
je
cmp
jge
arpl
cmc
mov
sti
cmp
rcl
or
dec
mov
lock
inc
sbb
adc
mov
pop
pop
mov
dec
cmp
mov
pusha
mov
imul
outs
gs
or
jecxz
cmp
(bad)
or
jnp
jnp
xchg
jb
scas
add
fs
cwde
or
shr
out
es
or
iret
imul
xor
sbb
push
aad
ret
sbb
mov
sub
js
call
sub
push
les
inc
dec
jge
jge
inc
jo
cwde
(bad)
jb
int3
int3
jecxz
inc
or
dec
aam
lahf
lods
test
mov
(bad)
scas
pop
and
test
les
test
or
sub
sub
xlat
rcr
inc
call
daa
mov
fwait
imul
cmps
iret
add
mov
jmp
int3
pop
mov
rep
arpl
repnz
or
pop
sub
pop
mov
xor
xchg
test
ja
dec
das
jb
popa
pop
and
lods
loopne
cmp
div
dec
sbb
rcl
sahf
inc
push
jae
xchg
(bad)
xchg
fs
fcom
jno
ror
pop
push
add
mov
pop
sbb
aas
popa
inc
pushf
clc
push
pop
call
in
js
dec
sub
js
jg
mov
test
cmp
mov
add
out
scas
rcr
ficomp
sbb
mov
cmps
(bad)
daa
dec
jle
leave
sar
call
add
inc
xchg
daa
jne
fs
cmp
push
repnz
inc
cwde
push
mov
mov
and
inc
xor
xchg
inc
push
pusha
popf
xor
inc
mov
bound
sub
push
fs
sbb
xchg
(bad)
out
int
mov
pop
cs
cld
sub
push
push
lea
scas
sbb
das
mov
push
ficomp
adc
shl
loope
ds
dec
pop
push
cmp
pop
in
pop
mov
cmp
fldz
sub
ss
and
and
cmp
or
mov
jl
or
imul
scas
mov
push
lock
loop
jg
stc
scas
mov
sub
fmul
adc
xchg
dec
push
dec
xchg
(bad)
push
pop
data16
test
fs
je
cli
pop
jbe
dec
popa
cmps
push
adc
add
xchg
inc
int3
add
out
adc
or
jp
add
daa
test
fild
dec
lods
push
ret
cmp
cmps
pop
or
popa
stc
je
jo
pop
bound
dec
pop
xor
cmp
in
clc
loop
cs
jnp
push
mov
push
icebp
mov
lds
fwait
jnp
cmp
repz
hlt
(bad)
sbb
out
push
and
inc
clc
popa
packuswb
xor
jno
retf
leave
enter
xchg
je
out
dec
mov
popa
jecxz
retf
lock
mov
push
mov
imul
ret
mov
mov
adc
mov
cmp
or
iret
aam
fdiv
and
fstp
mov
mov
scas
or
inc
pop
test
mov
cmp
adc
cpuid
stc
add
mov
cmp
arpl
inc
jno
shl
dec
and
outs
pusha
retf
retf
sar
je
fdiv
mov
ja
adc
pop
retf
icebp
scas
jl
cld
mov
(bad)
ds
call
aam
ds
mov
repz
inc
iret
jmp
or
xlat
sub
aad
mov
cmp
std
test
in
fwait
out
pop
sbb
jl
mov
stc
mov
out
out
scas
adc
ins
fbld
enter
cld
or
cmp
sub
sbb
rol
cmp
sti
aas
xor
in
mov
push
out
cli
jmp
ja
inc
dec
pop
stc
jo
shl
hlt
add
mov
pop
loopne
dec
cmp
xor
sbb
inc
push
(bad)
gs
popf
hlt
aad
popf
pop
fld
add
push
adc
inc
aad
in
mov
rcr
movs
daa
fs
out
sub
in
std
in
(bad)
fisub
xchg
daa
cmc
pop
and
cs
mov
es
add
sahf
and
test
xor
jmp
adc
xchg
pop
add
push
mov
ja
es
(bad)
jno
xchg
inc
pop
pop
push
call
out
xlat
pusha
ja
adc
mov
jge
loopne
xchg
not
mov
js
jbe
mov
sti
jecxz
adc
scas
xchg
lock
in
xor
mov
jnp
in
mov
push
fs
les
in
xchg
rcr
cmp
rcr
cs
leave
int3
std
cmp
pop
add
dec
mov
or
loopne
fwait
pop
jb
fwait
mov
jmp
dec
bnd
and
mov
inc
cmp
movs
mov
inc
and
jno
fimul
shl
jmp
adc
inc
push
push
mov
or
push
xchg
(bad)
(bad)
into
cdq
jo
xor
mov
ror
jno
mov
ss
popf
xchg
dec
fs
fistp
xchg
sbb
arpl
pop
iret
xchg
fimul
push
dec
mov
mov
icebp
mov
cmp
in
mov
push
push
imul
int3
retf
mov
pop
sbb
xor
stos
fist
in
fld
add
jae
sub
(bad)
push
icebp
mov
inc
shr
inc
lods
jno
fimul
mov
shl
mov
mov
call
mov
pop
or
push
sub
xchg
popa
dec
mov
ins
add
sub
arpl
cdq
inc
cmp
dec
push
shl
mov
pop
rcr
sub
xor
dec
pop
inc
cmp
(bad)
pop
mul
mov
ret
stos
inc
add
pop
shl
push
inc
dec
pusha
ja
pop
xor
add
push
xor
jecxz
xchg
stos
or
loopne
aas
cmc
das
xchg
scas
push
add
push
lock
icebp
sub
xchg
or
and
shl
xor
retf
xchg
jmp
(bad)
mov
jecxz
call
jmp
cmp
mov
add
mov
das
popf
mov
int
xchg
xor
rol
push
fisttp
mov
movs
scas
pushf
repnz
xlat
xchg
cwde
fcomip
je
xor
(bad)
mov
push
and
add
push
lods
scas
mov
sbb
not
nop
inc
inc
cdq
fs
xor
dec
cmc
jb
cmp
mov
jp
adc
dec
and
int
(bad)
jmp
movs
imul
adc
xchg
and
push
xor
inc
fadd
ror
pop
cmps
pop
pop
sub
les
mov
aas
xchg
cmps
xchg
sub
pop
xchg
test
add
sar
retf
les
dec
push
sub
int3
in
add
jp
inc
and
xchg
jge
dec
addr16
pop
dec
cdq
inc
hlt
xlat
ja
int3
stos
mov
ins
mov
shl
arpl
cmp
leave
mov
movs
out
aas
sub
(bad)
fisttp
mov
test
cdq
ret
push
lahf
pop
xchg
pop
sub
ss
stos
mov
cli
xchg
cwde
sub
or
jbe
xor
lock
daa
sbb
jmp
push
sub
jbe
aas
jl
hlt
mov
lods
pop
gs
and
out
dec
adc
mov
jno
push
or
dec
mov
fwait
lods
movs
das
pop
push
cmp
jo
jge
fisttp
popf
cmp
and
mov
dec
je
in
mov
sbb
inc
jnp
mov
ret
sub
mov
xchg
pop
inc
sub
fwait
jmp
mov
out
arpl
out
xor
popa
jns
xchg
mov
scas
das
sbb
in
and
test
mov
repz
out
loope
jo
out
cld
outs
fisubr
push
jmp
adc
mov
pop
retf
sub
xchg
aas
pop
add
out
lds
ds
sbb
xchg
aam
jno
cmp
test
call
inc
lods
xor
in
test
enter
dec
(bad)
into
stc
inc
inc
lea
ret
mov
push
or
stc
je
popa
jge
or
in
inc
out
sub
sahf
lahf
call
icebp
das
pop
pop
mov
jbe
pop
jge
(bad)
xor
push
pop
jl
mov
add
ret
pop
jno
lds
jb
mov
sbb
shl
aaa
mov
imul
std
pop
or
fwait
and
unpcklps
arpl
(bad)
ds
dec
xchg
ret
pop
mov
retf
cmp
and
mov
int3
inc
jne
adc
mov
pop
ffreep
pop
rol
test
and
jmp
daa
stos
mov
sti
mov
cdq
jmp
repz
inc
outs
jp
out
mov
test
pop
or
outs
imul
out
push
push
daa
in
jp
cmp
loopne
mov
or
sbb
mov
popa
imul
mov
push
adc
in
xchg
mov
pop
or
push
dec
ins
ja
fist
cwde
pusha
popf
outs
test
pop
xchg
mov
les
jle
and
cwde
repnz
shl
(bad)
xchg
and
mov
adc
mov
dec
repz
sar
push
add
test
scas
sbb
dec
mov
jbe
inc
(bad)
mov
jns
and
int
xor
sbb
(bad)
in
add
imul
repnz
pop
jne
iret
cmp
(bad)
mov
imul
xchg
shr
nop
or
adc
or
nop
xlat
jb
outs
pop
xchg
ins
sub
imul
and
add
cmc
xor
in
and
mov
pop
fdivr
inc
(bad)
adc
xor
ja
cmps
imul
cmp
imul
mov
mov
std
and
es
mov
loope
call
paddw
loop
das
test
and
in
adc
push
mov
cmp
rcr
or
xor
add
rcr
cmp
arpl
les
pop
fbstp
popf
jmp
test
jl
inc
sub
mov
cmc
ret
scas
leave
cmp
scas
push
retf
adc
dec
jmp
ja
call
and
push
and
out
nop
mov
jle
cwde
cmp
mov
jl
aas
retf
ret
clc
sub
jl
int3
in
xor
inc
fisub
enter
or
and
push
mov
in
lds
nop
add
adc
fistp
fistp
dec
fild
jae
sbb
imul
ss
mov
push
repnz
cmp
inc
cld
or
jecxz
add
mov
fxch
inc
fcomp
scas
mov
not
mov
xor
int
and
add
es
es
pop
xchg
shl
xchg
cmp
jne
sbb
push
fld
lahf
hlt
les
xor
fwait
push
adc
imul
sub
push
xor
dec
das
out
je
dec
outs
inc
es
xchg
fstp
mov
mov
mov
ret
imul
test
pop
pop
add
enter
add
add
adc
rcl
jno
jo
arpl
outs
stos
and
das
adc
mov
(bad)
mov
adc
sub
cmps
out
aam
out
out
not
push
jb
sar
bound
add
xchg
lock
enter
ret
icebp
push
lahf
xchg
ss
lds
mov
fs
je
or
inc
out
(bad)
inc
imul
xchg
stos
call
push
and
inc
cmp
or
inc
push
push
aas
cmp
es
shr
cmp
cmp
ror
pop
push
js
icebp
sbb
and
sub
sub
retf
pop
js
sar
xor
mov
jg
stc
mov
lds
add
jle
call
ins
inc
adc
push
sub
lea
cs
lods
xlat
inc
mov
pusha
nop
pop
jmp
repnz
dec
or
inc
xchg
mov
sar
lahf
call
fwait
xor
enter
ins
shl
push
jle
mov
mov
sbb
pop
or
xlat
sub
jle
js
es
loopne
push
hlt
and
test
add
jo
or
daa
push
mov
ror
adc
out
repnz
cmc
out
cli
div
mov
xchg
xor
xor
cld
cmc
aam
adc
test
mov
inc
repnz
lock
dec
dec
ja
pop
mov
pusha
add
cld
xchg
mov
das
and
add
push
and
js
cmp
imul
cmp
push
nop
ficom
xor
loope
push
xchg
das
ret
(bad)
mov
sub
jno
push
xchg
aaa
mov
pop
cli
cmps
movs
aaa
fisttp
iret
push
add
pop
cmp
jcxz
cmp
test
jl
daa
lock
lea
push
xor
(bad)
jnp
pop
movs
ins
ret
add
push
push
shr
cmp
jecxz
sub
(bad)
mov
push
push
xchg
mov
dec
js
jns
cld
std
pop
dec
or
fs
cmp
test
repnz
inc
repz
pop
outs
mov
cmps
mov
add
dec
push
cli
into
sbb
sbb
(bad)
jno
xchg
pop
jle
jmp
pop
outs
icebp
(bad)
loope
daa
and
movs
js
push
nop
fsub
shr
adc
pop
pop
lods
fisttp
iret
xchg
inc
xchg
adc
(bad)
nop
push
daa
sub
xor
mov
xor
add
pop
sub
mov
sub
icebp
stos
push
cmp
adc
add
popa
mov
mov
and
mov
pop
neg
sbb
jge
cmp
jno
mov
enter
add
stos
sub
mov
push
inc
adc
fist
xor
and
pop
mov
sub
mov
dec
inc
jp
cwde
pop
pusha
nop
sti
or
add
repz
inc
arpl
pop
(bad)
lahf
sub
ins
adc
cmp
enter
in
test
sbb
mov
xchg
aas
push
mov
lds
cmc
call
test
scas
mov
push
fnstsw
mov
cmp
mov
xor
add
mov
adc
pop
aad
pop
jl
hlt
ins
(bad)
repz
add
aam
lods
into
mov
jmp
mov
add
or
pushf
sti
in
gs
das
ror
mov
(bad)
cmps
mov
ds
rcl
sub
imul
sar
mov
mov
in
inc
sub
stos
pop
jmp
hlt
loop
xor
xchg
shl
idiv
test
sar
(bad)
or
xor
sub
ins
jns
out
js
sub
sar
adc
mov
stos
les
shl
out
xchg
outs
pop
(bad)
jge
hlt
sar
in
retf
push
lea
jg
mov
xor
and
hlt
call
inc
xchg
gs
in
ds
aas
mov
mov
icebp
fldln2
mov
sub
neg
stc
inc
cmp
stos
les
push
jp
test
cmp
test
in
test
and
test
pop
nop
jmp
pop
or
sub
fsub
aaa
dec
aad
mov
loop
add
xor
rcl
js
(bad)
and
sar
scas
aas
call
xchg
pop
mov
add
lock
sahf
les
push
dec
mov
adc
lahf
xor
scas
clc
out
push
push
dec
dec
push
iret
mov
fldln2
xchg
cmp
stos
or
gs
cmps
jp
add
fwait
ret
sub
pop
imul
sub
push
int
loope
lods
and
movs
das
pop
xchg
pop
xchg
test
imul
inc
(bad)
dec
(bad)
mov
fwait
(bad)
xor
lods
sbb
repnz
mov
fcom
sub
das
pop
mov
sbb
cli
test
jp
dec
xchg
movs
loope
inc
stc
sub
jno
js
pop
push
cmp
(bad)
stc
repnz
sub
xchg
pop
cmp
or
(bad)
ror
ret
pusha
mov
mov
push
jmp
ja
retf
add
data16
aaa
mov
das
imul
pusha
iret
xchg
sbb
hlt
cmps
jle
add
sub
fcom
sbb
stos
xchg
outs
sbb
sbb
cmp
mov
xor
(bad)
and
and
xor
out
pop
and
mov
mov
test
mov
push
cmps
jmp
ins
jge
ins
jmp
loopne
les
scas
xor
push
imul
das
loopne
sbb
jne
xchg
xor
push
inc
repnz
jb
int3
call
sbb
jle
out
out
push
shl
sbb
and
adc
xor
loop
xlat
push
fwait
jg
inc
shl
dec
pop
dec
dec
inc
and
cld
fstp
and
mov
ja
and
enter
sahf
stos
push
arpl
(bad)
cli
add
or
ret
fisub
inc
mov
push
and
out
dec
shl
inc
movs
shl
lahf
int3
xchg
xchg
dec
call
shl
cmp
xor
retf
and
mov
mov
cmp
sbb
push
jp
add
pop
pop
cmp
arpl
lea
scas
shl
scas
xor
neg
inc
and
dec
pop
fnstsw
(bad)
(bad)
aas
pop
enter
mov
ja
mov
(bad)
stos
fwait
icebp
mov
in
out
mov
push
pop
push
cmp
fld
inc
adc
jo
mov
xchg
gs
ins
sub
xchg
(bad)
cmp
mov
sbb
out
sub
ins
les
imul
adc
call
les
xchg
das
or
add
ins
retf
push
xor
(bad)
ss
pusha
stos
test
pop
test
push
lods
mov
cld
jecxz
into
and
sub
add
mov
test
mov
mov
push
cmc
jae
add
push
shl
cwde
ret
je
mov
std
shl
shl
adc
out
ds
(bad)
loope
shl
jg
jbe
add
ret
mov
mov
and
sub
jnp
sub
fistp
rol
sub
cmps
add
push
dec
ret
pop
sbb
adc
imul
or
mov
shl
outs
cmp
cmp
cmps
lea
inc
je
sub
pop
sub
shr
sbb
add
push
cmp
sub
icebp
mov
xchg
std
mov
dec
std
ins
xor
sbb
mov
and
sbb
or
cmp
movs
mov
xlat
push
int
pop
cmp
leave
fisttp
movs
movs
loopne
(bad)
out
in
movs
mov
cwde
jle
inc
push
je
mov
cwde
daa
mov
hlt
xchg
mov
cmp
cmp
sub
sbb
jb
shl
pop
adc
mov
push
std
mov
mov
mov
add
call
addr16
cmp
retf
ror
mov
aas
xchg
and
daa
pop
(bad)
dec
bound
mov
adc
jne
mov
(bad)
loope
aam
xor
mov
pusha
iret
into
add
test
jno
imul
fwait
outs
adc
and
jae
sbb
aaa
stc
mov
ins
sbb
clc
add
int
mov
push
cmp
fs
std
pop
push
aaa
int
scas
imul
or
push
xor
add
inc
sub
dec
sbb
call
loope
mov
pop
dec
dec
jno
xor
mov
test
cwde
js
cmp
cmp
push
fild
shl
dec
(bad)
paddd
add
cmp
scas
add
jbe
addr16
jmp
sub
inc
loopne
aas
ins
jle
jno
jl
(bad)
fsubp
movhps
outs
das
xor
fsub
mov
pop
adc
add
jno
in
ficom
aad
not
ret
pop
pop
leave
or
push
mov
cdq
xchg
fsub
ds
loope
es
xchg
mov
movs
int3
in
cmp
xchg
fbld
into
or
sbb
imul
in
or
or
js
sahf
retf
test
xor
add
mov
ds
int
mov
fstp
ret
push
addr16
mov
and
push
out
pop
test
mov
cmp
cmc
inc
or
dec
call
add
xchg
ins
pop
mov
repz
(bad)
stos
xchg
mov
in
mov
mov
pop
cs
mov
adc
je
scas
push
mov
repz
push
(bad)
cmps
or
add
dec
stos
pop
test
stos
adc
test
sbb
clc
data16
cmp
jmp
dec
addr16
repnz
mov
sahf
pop
int
push
pushf
(bad)
or
shr
inc
jmp
retf
or
add
rcr
sahf
cld
mov
mov
jnp
fdiv
and
mov
xlat
test
mov
and
xor
sbb
jg
pushf
loopne
loop
mov
mov
sub
pop
stos
sbb
idiv
xor
pop
jns
sbb
xor
enter
pop
or
jbe
sbb
popa
pop
in
pop
cwde
hlt
movs
jecxz
and
out
mov
mov
mov
retf
or
fistp
dec
ds
ret
enter
imul
pop
xchg
(bad)
out
cli
or
pop
push
popf
in
cmps
pop
sub
aaa
adc
inc
repz
out
jecxz
xchg
push
ficomp
cmps
mov
jl
imul
mov
int
in
add
hlt
inc
sti
inc
cmps
not
rol
lahf
retf
sub
pop
mov
adc
out
sub
call
in
aam
xor
xor
adc
xor
jo
sti
pop
jne
or
lock
(bad)
jns
clc
setg
or
push
or
rcr
shl
(bad)
pop
imul
mov
ins
and
sub
push
aas
aam
shl
cld
add
sbb
fwait
jne
fdiv
adc
jle
cli
imul
cwde
or
pop
dec
imul
js
push
pushf
inc
mov
or
pop
int
ja
movs
std
or
ret
popa
div
ret
mov
imul
sbb
pop
adc
pop
(bad)
out
fstp
push
loopne
push
pop
cmp
dec
sbb
cmp
scas
imul
jp
jecxz
fst
mov
mov
stc
xor
rol
lahf
sbb
out
fiadd
cmp
loop
clc
and
imul
push
aad
jae
and
add
fld
adc
loope
push
xchg
and
xchg
enter
mov
addr16
(bad)
fcmove
add
mov
std
arpl
mov
lds
call
loop
int3
mov
mov
sub
idiv
lea
shr
dec
gs
aaa
retf
dec
xchg
mov
shl
arpl
(bad)
xor
xrelease
sti
push
cli
outs
ja
lock
and
stos
xchg
xchg
dec
adc
adc
add
add
in
mov
xchg
in
cli
pop
and
xchg
cwde
adc
push
xor
push
sbb
lea
and
dec
aaa
jle
dec
or
add
ret
jecxz
add
sub
dec
leave
ret
mov
loope
(bad)
pop
ins
jae
dec
ds
mov
or
cmps
lock
test
dec
(bad)
mov
fmul
adc
xor
xor
ret
das
and
inc
sar
(bad)
addr16
inc
(bad)
(bad)
popf
jno
sub
pop
xor
mov
xor
cmp
cmp
lock
jge
dec
retf
and
in
xlat
imul
cld
fdivr
(bad)
sar
std
mov
push
les
mov
repz
pop
cmp
or
adc
aad
xchg
xchg
loop
lock
ja
dec
push
or
jne
ins
jle
or
jl
cmp
shld
out
movs
imul
push
enter
or
(bad)
out
push
cmp
cld
xchg
jne
xchg
(bad)
clc
add
push
adc
jb
rol
cli
shl
sbb
fyl2x
xor
push
or
data16
xor
push
jl
mov
hlt
jb
push
add
movs
lock
mov
mov
dec
int3
repnz
mov
into
bswap
pop
mov
or
call
mov
dec
out
mov
mov
push
mov
inc
dec
rol
ret
or
pop
int3
lock
sti
mov
or
xchg
ror
imul
movs
add
sbb
and
and
xor
jb
mov
loope
call
sahf
xchg
fwait
add
cli
out
jg
pop
mov
imul
lea
ins
out
mov
mov
xchg
xchg
ds
inc
jmp
cdq
push
cmps
inc
xor
test
imul
pop
xlat
adc
into
cld
out
sub
cmp
sbb
adc
cmp
adc
adc
pusha
sub
push
jne
xchg
adc
xor
mov
xchg
xor
hlt
call
cmps
push
or
imul
dec
fsubp
jecxz
mov
mov
mov
sub
ins
add
jmp
jmp
lods
push
lods
mov
iret
aam
or
sti
js
(bad)
sbb
shr
add
inc
jbe
or
inc
push
rcr
pop
mov
out
xchg
popa
push
lods
movs
and
mov
fcomp
outs
push
imul
aas
inc
dec
xchg
adc
in
jbe
pop
dec
ret
fadd
inc
dec
out
mov
xchg
sub
xchg
in
mov
test
mov
adc
dec
ficomp
xchg
aad
cld
or
nop
mov
mov
pushf
lahf
xor
iret
lods
jmp
xor
mov
ds
outs
sti
and
out
outs
imul
test
xor
cmp
cwde
jmp
mov
cmps
inc
arpl
jmp
aas
(bad)
out
lea
and
nop
push
loop
loope
pop
xchg
jecxz
mov
fidiv
loope
push
adc
xchg
dec
mov
jl
mov
or
es
call
mov
mov
arpl
je
aaa
mov
inc
mov
cmps
jne
adc
(bad)
movs
jl
jp
jmp
mov
js
daa
sahf
or
data16
push
fnstenv
lods
mov
fisub
and
xchg
xchg
or
shl
adc
or
lods
movs
or
into
add
movs
sbb
jmp
ds
movs
inc
loopne
mov
push
pop
dec
dec
mov
popa
cmp
dec
and
add
push
lahf
shl
push
or
lock
xor
mov
and
call
push
mov
mov
mov
pop
sub
fild
and
xchg
add
mov
inc
call
stc
dec
xchg
mov
sar
retf
cmps
hlt
xor
dec
pop
sub
rcr
mov
and
(bad)
fbld
add
jo
leave
adc
mov
ret
repz
mov
call
xor
das
aas
stos
cdq
inc
std
mov
and
mov
push
test
mov
ins
xchg
mov
or
xchg
repnz
mov
scas
pusha
push
and
les
or
xchg
ins
sbb
sbb
pop
add
dec
xchg
xchg
movs
fsub
inc
xor
pop
movs
aam
data16
pop
out
popa
movs
pop
sahf
jl
call
jl
cmp
add
mov
mov
enter
cmp
int
mov
sub
ret
push
inc
fisubr
nop
adc
rcr
jmp
xor
out
xor
push
jae
cmp
fistp
mov
and
jbe
call
mov
clc
shl
adc
fdivr
xchg
scas
inc
cs
mov
fsub
or
cdq
leave
(bad)
mov
dec
xchg
aad
sahf
dec
in
imul
mov
cmp
jns
enter
stc
cwde
or
mov
dec
pop
popa
inc
jnp
stos
sub
inc
call
mov
xchg
shr
or
push
mov
ds
pop
mov
inc
jns
xchg
add
adc
adc
in
push
cmp
dec
sub
dec
sub
fild
inc
pop
adc
mov
jp
test
retf
retf
enter
ja
push
pushf
mov
mov
dec
mov
xor
shr
xlat
push
jae
dec
ja
cmps
mov
and
jae
(bad)
cld
jmp
iret
ins
adc
cld
sub
sub
mov
test
into
cmp
push
push
mov
out
jg
out
enter
daa
dec
mov
add
xchg
adc
sbb
in
mov
xchg
xor
inc
mov
adc
push
in
mov
mov
aam
retf
jo
jmp
and
pop
popf
jbe
mov
cmp
movs
ja
jbe
pop
or
out
jge
stos
mul
cmp
iret
ret
inc
enter
xchg
push
inc
push
rol
sub
sti
xchg
jge
enter
stc
xor
scas
dec
cdq
jp
pop
pop
sbb
sub
(bad)
out
jmp
imul
mov
inc
in
test
push
ins
xor
add
inc
loop
mov
iret
pusha
cwde
xlat
add
scas
out
inc
mov
loope
ja
cmp
pusha
sub
imul
adc
arpl
push
push
jbe
pop
(bad)
fdiv
jo
inc
adc
(bad)
mov
inc
push
imul
scas
mov
push
or
fcom
jb
fcom
(bad)
std
pop
mov
inc
xor
movs
sub
and
iret
mov
shl
neg
or
retf
ret
mov
retf
jle
pop
mov
cld
cli
push
out
sbb
mul
xor
pop
rcr
imul
pop
push
pop
xchg
out
test
and
pusha
push
clc
cmps
jecxz
ins
ret
mov
cmp
rcr
test
(bad)
mov
xor
gs
lods
pop
(bad)
jmp
mov
xor
scas
mov
loope
addr16
fisub
jb
enter
dec
in
adc
mov
adc
jb
sub
ja
pop
xlat
mov
fs
(bad)
pop
jb
pusha
les
pop
mov
pop
out
(bad)
fild
and
jg
enter
pop
cmps
adc
mov
cdq
xchg
jo
pusha
mov
pop
or
sti
mov
pop
pop
push
rcpps
lahf
adc
test
push
or
xchg
mov
pop
cld
cli
mov
add
sub
inc
add
mov
adc
mov
cmp
pop
xchg
xor
stos
movs
cld
shl
mov
int3
nop
jge
mov
sub
mov
jge
cmp
push
test
mov
or
jmp
std
pop
cmp
call
mov
jno
sub
jge
adc
add
jno
lock
repz
add
sbb
sbb
aad
aas
inc
inc
inc
or
and
nop
cmc
int
xor
sub
jecxz
es
lods
aad
jo
in
bound
sub
cli
es
mov
(bad)
or
movs
test
add
cmp
sbb
mov
fstp
cmc
pop
cld
into
add
iret
xchg
cmp
ins
arpl
cmps
push
das
push
je
xchg
inc
mov
inc
mov
dec
popf
pop
push
pop
test
adc
push
gs
push
daa
add
push
jp
and
push
test
fld
rol
lods
mov
sub
js
xchg
mov
jecxz
or
mov
or
ins
imul
jbe
sbb
xor
mov
jmp
hlt
dec
fs
into
fucom
ret
outs
cmp
movhps
mov
add
xchg
push
sbb
repz
cmp
jl
loop
jg
scas
cmp
rol
adc
adc
leave
xchg
or
mov
inc
xor
jno
bound
push
lock
in
adc
out
loopne
inc
mov
sbb
clc
test
jo
jg
ins
push
fbld
mov
dec
test
jg
mov
add
outs
cmp
jge
icebp
xor
loope
(bad)
loop
sbb
xchg
sub
loopne
xor
jg
daa
cmp
in
push
xchg
xchg
into
or
iret
mov
sub
jle
inc
retf
jle
retf
jecxz
test
and
stc
push
sub
dec
mov
xchg
cmp
and
xchg
xchg
jmp
(bad)
pop
cmp
xor
inc
push
inc
test
fistp
cmp
retf
ins
lods
lahf
jo
pushf
fisub
repz
out
ss
mov
jb
mov
add
mov
pop
inc
pushf
(bad)
jmp
push
daa
adc
jae
(bad)
loope
in
stos
mov
xor
pop
xor
nop
rol
movs
rcr
xor
aad
jb
adc
xchg
call
mov
mov
imul
out
ss
jecxz
clc
xchg
mov
(bad)
fnsave
movs
lea
xchg
mov
sub
push
pusha
mov
push
out
xor
dec
scas
push
and
cs
nop
sub
push
out
pop
lock
mov
cs
gs
pop
inc
jg
outs
cmp
ror
sub
(bad)
mov
fsubr
test
mov
lods
sbb
bound
inc
xor
(bad)
fiadd
pop
jne
and
adc
pop
es
mov
cmp
xor
fsubr
movs
fdivr
addr16
fisubr
inc
mov
test
mov
sbb
fist
pop
leave
lods
jle
int3
mov
pop
sub
loope
es
dec
icebp
dec
ds
and
test
stc
arpl
inc
and
mov
jmp
shl
xor
sub
call
inc
inc
and
lds
inc
mov
(bad)
adc
pop
jbe
sub
neg
add
jns
scas
into
test
test
bound
mov
and
jmp
adc
dec
cwde
inc
mov
jl
cli
push
jo
dec
call
lahf
xor
pushf
ja
daa
int
mov
mov
or
xchg
inc
add
mov
mov
push
leave
sub
cmp
push
xchg
push
ins
pop
mov
daa
jno
inc
dec
adc
jg
jns
mov
ror
sbb
xor
mov
call
cwde
inc
into
jge
xor
adc
rol
jns
xchg
dec
hlt
loop
rol
cmp
dec
or
(bad)
mov
aad
add
sbb
mov
js
and
outs
outs
or
test
mov
cmc
cwde
adc
test
sbb
pop
iret
xchg
fsubr
sub
mov
adc
pop
jne
leave
popw
or
xchg
and
jb
(bad)
pop
mov
and
retf
ja
fmul
inc
jle
sbb
jo
arpl
cmp
cmps
out
xchg
test
aaa
xor
xor
add
sahf
cmp
fcmovne
xchg
stos
dec
outs
add
(bad)
or
cmc
sub
xchg
test
mov
test
aad
mov
jnp
popf
and
mov
and
xchg
cli
not
es
retf
adc
mov
in
mov
push
cdq
pop
push
xor
fs
jle
xlat
test
aaa
ins
mov
inc
(bad)
aaa
mov
adc
sbb
add
push
jbe
daa
dec
dec
ja
cmp
mov
mov
or
pop
mov
bound
lahf
pop
jmp
test
sub
cmps
add
pop
mov
xor
enter
cs
or
dec
xor
cmps
adc
into
je
rcl
push
(bad)
int3
mov
and
or
pop
jb
outs
lea
stos
call
cmps
(bad)
arpl
(bad)
or
in
fcom
or
push
stos
mov
rcl
mov
inc
xor
add
mov
xor
adc
call
push
retf
fldenv
jo
sti
std
cdq
cmp
mov
mov
inc
fisubr
mov
cmp
stos
xchg
nop
sub
ret
stc
scas
aam
dec
ja
daa
push
ss
(bad)
mov
cmp
sbb
push
inc
jb
rcl
adc
pushf
int
fwait
mov
jle
jbe
push
sub
and
dec
shl
ins
(bad)
mov
test
sar
sahf
sbb
rcr
jbe
cdq
push
(bad)
test
jne
mov
(bad)
xor
jbe
rol
adc
push
inc
jno
ins
nop
and
or
push
push
dec
fidiv
push
mov
xchg
hlt
xchg
jle
sbb
adc
and
or
out
loop
or
ins
leave
sbb
cmp
xchg
shr
sbb
adc
push
push
gs
test
xor
lahf
mov
shl
scas
nop
sbb
(bad)
sbb
cmp
lea
int
(bad)
xchg
lods
(bad)
loopne
or
and
iret
hlt
xor
adc
loopne
push
pop
aas
dec
inc
jno
lahf
int
add
jne
push
icebp
sub
shl
ret
sub
in
stos
mov
mov
mov
mov
imul
fsub
cdq
adc
sar
daa
mov
std
in
lods
cmp
mov
sbb
xchg
sti
mov
jecxz
cmp
rol
dec
xchg
adc
jb
jl
push
fidiv
out
xor
add
nop
mov
mov
cs
loop
jle
sub
dec
out
bnd
fs
jg
cmp
out
pop
fwait
add
leave
adc
pop
repnz
add
fisub
mov
and
call
cmp
inc
and
in
inc
loopne
jo
bound
ror
(bad)
sti
bound
mov
imul
jecxz
out
mov
aaa
mov
pop
scas
popf
jp
test
push
iret
int3
ja
mov
fiadd
jg
inc
xchg
mov
pop
xor
and
dec
mov
cs
inc
pop
mov
sub
je
xchg
fdivr
(bad)
stc
push
data16
call
sbb
or
dec
pop
or
mov
mov
mov
jae
lods
mov
out
add
ret
mov
pop
cmp
push
cs
shl
pop
addr16
push
movs
mov
mov
mov
sub
mov
push
gs
push
loopne
fdivr
rcr
imul
rcr
ret
sub
sti
icebp
lock
and
repz
sbb
je
(bad)
xor
(bad)
ja
or
sbb
mov
pusha
test
pop
adc
(bad)
fisttp
fucomi
cmc
add
sub
xchg
out
lahf
jae
mov
outs
pop
data16
cmp
and
jg
test
xlat
dec
outs
push
push
daa
pop
jmp
inc
or
out
imul
fwait
pop
mov
jno
or
push
rol
and
xchg
or
je
xor
fsubrp
sbb
mov
jne
add
ror
dec
and
cmps
rcl
test
in
inc
push
mov
fild
and
ja
arpl
adc
jns
push
jl
inc
sbb
and
and
jmp
shr
sub
xchg
ins
lods
mov
test
mov
dec
xchg
popa
mov
sahf
pop
jg
imul
fiadd
mov
je
fcmovu
push
imul
aas
sbb
lahf
dec
loop
mov
jmp
jae
cld
adc
dec
inc
cmp
dec
push
lods
and
xor
out
mov
movs
xor
cmp
jno
movs
xor
mov
in
adc
jns
xor
push
add
fsubr
test
push
adc
shr
add
in
retf
inc
icebp
out
sti
pop
xchg
sbb
cmc
or
enter
pop
int
jno
je
xchg
cmp
push
jo
inc
jnp
and
inc
jns
pop
sbb
cmp
aam
retf
jae
xchg
or
sub
lahf
xchg
scas
xor
xor
out
xchg
xchg
mov
outs
sub
sub
cwde
inc
push
sti
mov
and
push
push
jp
js
test
pop
or
inc
ss
movs
adc
repnz
xchg
adc
mov
mov
xchg
cli
fidivr
xchg
push
call
mov
mov
add
cld
mov
xchg
cld
add
loop
in
aam
iret
xor
imul
clc
inc
aas
dec
xlat
lods
add
mov
mov
mov
in
ds
ja
inc
mov
mov
push
xchg
inc
ror
popf
mov
jns
nop
lods
xchg
aas
pop
lahf
xor
pop
and
jns
xchg
add
aad
ret
mov
cmp
das
retf
sub
data16
repz
ins
lods
inc
xchg
push
jno
call
inc
xchg
sub
clc
mov
cdq
or
mov
sub
or
mov
shl
rol
pop
xchg
mov
push
sbb
push
pop
shufps
inc
push
mov
inc
add
lea
inc
leave
bswap
cdq
or
into
std
adc
lds
cs
int
adc
push
cmp
jnp
jge
or
ror
test
add
sti
xor
ja
dec
or
inc
sub
test
mov
ds
xlat
cmp
xchg
pop
int
adc
mov
mov
cmp
(bad)
and
cmp
mov
loope
mov
pop
xchg
daa
arpl
xlat
jmp
daa
dec
push
int
push
scas
inc
icebp
(bad)
ror
pop
xchg
sub
ds
aam
mov
push
in
outs
cmp
inc
ins
mov
test
inc
dec
cwde
cli
xchg
dec
dec
push
jns
cmps
cmp
push
xchg
add
mov
loope
mov
mov
iret
mov
pop
stc
leave
jb
push
call
outs
nop
lds
mov
mov
dec
jns
mov
dec
cmp
adc
and
test
aaa
aaa
push
leave
pop
fcomp
inc
fisttp
daa
xor
stos
call
retf
or
addr16
jmp
sub
sbb
repz
inc
pop
in
enter
pop
pop
je
jns
inc
out
push
in
xor
sar
es
out
je
clc
jge
jmp
shr
mov
jmp
sbb
sbb
popf
or
int
retf
das
inc
sub
popf
fild
and
push
mov
push
js
or
xor
pop
(bad)
in
in
mov
into
stos
pop
in
(bad)
mov
in
xor
jmp
lahf
mov
cmps
jmp
jmp
xchg
xchg
dec
jae
out
mov
dec
sub
jne
jns
add
mov
push
sbb
xor
fs
mov
sbb
mov
dec
lods
int
push
ds
xor
inc
mov
adc
imul
mov
sahf
add
jns
imul
jge
cld
mov
jno
sub
outs
scas
fdivrp
jnp
jmp
sar
aad
pop
aad
jmp
loopne
(bad)
fsub
xchg
inc
xchg
test
push
push
jno
mov
mov
dec
test
mov
out
test
outs
jp
dec
cmp
popa
mov
scas
jecxz
ins
and
pop
jns
and
push
pop
mov
leave
inc
inc
cmp
mov
aaa
out
es
popa
push
mov
pop
fsub
add
rcr
mov
pop
or
dec
cmp
or
rcl
icebp
mov
jmp
xor
icebp
cmps
mov
pop
retf
pop
mov
mov
sbb
movs
mov
add
or
cli
mov
cmp
jmp
adc
mul
neg
add
fcom
rcr
or
adc
aad
dec
sar
loope
retf
icebp
cli
cdq
mov
lock
cmp
enter
jg
sti
jno
call
adc
loop
leave
sbb
in
popa
ins
movs
push
mov
sbb
pop
sbb
mov
dec
aam
fcomp
xchg
xchg
(bad)
daa
adc
sub
loope
dec
scas
adc
ds
pop
dec
call
add
pusha
iret
xor
mov
(bad)
xor
jb
call
and
gs
loop
in
ds
leave
dec
xchg
or
jmp
sti
add
push
push
(bad)
jp
popf
mov
inc
or
fs
and
iret
int
call
cmp
lahf
mov
push
hlt
adc
adc
cmp
adc
push
and
outs
jge
mov
fld
loop
shl
loope
adc
icebp
jb
dec
jno
in
dec
int
push
pop
or
enter
enter
cmps
bswap
adc
sbb
test
sbb
and
mov
xchg
fldenv
enter
fwait
cdq
cmp
aad
mov
cld
into
sar
sbb
jmp
aad
cwde
cmp
inc
int
inc
xchg
das
scas
ds
stos
out
mov
sbb
rcl
lahf
sub
(bad)
sbb
test
(bad)
cmovge
pop
out
jge
mov
add
es
fnstcw
out
xchg
adc
jle
cli
into
sub
stos
pushf
mov
rcl
(bad)
fadd
pop
mov
mov
out
pop
aad
adc
pop
ret
sti
push
outs
mov
and
xor
iret
dec
sub
data16
lds
(bad)
(bad)
les
out
sub
xchg
test
mov
lock
pop
push
pop
cmp
jl
rcl
loop
or
push
fs
push
int3
ret
loop
jnp
lock
out
push
cmp
shl
mov
movs
pop
mov
(bad)
push
pop
mov
ja
js
mov
pop
stc
mov
imul
cli
pop
mov
lea
push
mov
sub
pop
in
dec
pop
mov
dec
scas
test
sbb
xchg
sar
and
mov
stos
in
push
push
inc
fidivr
mov
in
sub
fcompp
adc
adc
jb
neg
aaa
js
test
adc
push
cmp
clc
push
add
pop
js
sahf
cmc
repz
mov
and
(bad)
mov
dec
xchg
xlat
pop
cmp
push
inc
or
enter
iret
sbb
rol
sbb
jb
jge
dec
add
xor
sub
push
inc
popa
add
lock
dec
mov
ror
jmp
push
inc
outs
and
(bad)
imul
inc
(bad)
fxch
lock
repz
ffreep
movs
idiv
inc
fst
mov
inc
and
loop
mov
push
add
jp
and
cmp
(bad)
xchg
ja
das
ror
mov
test
loop
jge
movs
fwait
addr16
mov
stc
push
shr
dec
repnz
jno
sti
cld
mov
and
xchg
fild
(bad)
hlt
jmp
iret
in
into
pop
xor
adc
rcr
xchg
sub
xor
inc
ins
jo
fdiv
mov
ins
or
jle
sti
sub
inc
mov
jne
inc
push
out
jl
sahf
add
movs
call
pop
inc
adc
test
sbb
(bad)
mov
cmp
mov
mov
mov
jecxz
lods
push
mov
push
ds
sbb
ins
(bad)
xchg
loope
scas
push
fsubr
shl
out
dec
inc
fisttp
or
cmp
mov
aam
enter
jmp
sar
jl
pop
(bad)
(bad)
adc
nop
sbb
sahf
jge
mov
xchg
jge
gs
out
inc
call
pop
or
lds
sbb
pop
dec
in
add
retf
mov
pushf
mov
mov
int
imul
mov
sbb
pop
xchg
out
push
in
imul
aaa
and
mov
jns
(bad)
int
imul
outs
enter
dec
imul
out
repnz
inc
mov
dec
sub
rcr
loope
(bad)
retf
fstp
stos
dec
lahf
call
stc
sub
cmc
fist
pop
ror
add
retf
scas
dec
jmp
push
movs
popa
mov
icebp
cs
js
and
add
xchg
(bad)
push
adc
out
jle
(bad)
push
daa
ins
int3
pop
sbb
xor
xchg
clc
test
xor
mov
and
retf
std
in
cdq
jne
xor
mov
(bad)
inc
pop
(bad)
jno
imul
pop
xchg
outs
test
stc
mov
mov
cmps
add
ds
int3
dec
push
loop
sti
push
stos
retf
or
jo
pop
inc
div
mov
xor
scas
cmp
not
xor
fst
push
jae
call
cmc
cli
cmp
or
sub
out
imul
cmps
sbb
or
ret
dec
(bad)
and
pop
xchg
mov
mov
mov
push
mov
cdq
xchg
jp
jg
cmp
inc
or
push
lds
dec
iret
sbb
xchg
popf
or
xchg
rcr
dec
dec
outs
les
and
(bad)
stos
or
jge
leave
sbb
push
pop
lea
dec
add
inc
cmp
cs
mov
adc
hlt
out
cmovs
add
test
lods
fist
mov
(bad)
pop
mov
sub
xor
std
mov
test
sub
popf
xchg
or
int3
mov
dec
imul
js
adc
xchg
ret
jmp
pop
push
inc
sub
imul
repz
imul
nop
addr16
cwde
popa
xchg
les
mov
inc
inc
in
push
or
mov
js
cmp
xchg
mov
bound
inc
fldcw
out
test
rcl
sbb
outs
xchg
jnp
repnz
daa
fld
dec
xlat
jne
cmp
shr
(bad)
lods
add
mov
push
cmp
test
mov
and
sub
jmp
sub
(bad)
out
jns
cmp
push
or
mov
mov
dec
push
push
leave
or
out
nop
leave
test
sbb
mov
and
xchg
(bad)
dec
in
cdq
pop
call
cmp
jle
fdivp
and
int3
inc
test
test
ret
mov
sti
cmp
fstp
aam
fcomp
cmps
scas
in
and
lock
sub
sar
dec
retf
sub
mov
or
leave
jmp
pusha
mov
enter
popa
es
int3
clc
mov
(bad)
repnz
lea
ins
fld
(bad)
retf
adc
sub
cmps
cmps
pop
ins
sbb
icebp
cmp
int
pop
fwait
push
add
outs
jbe
xor
xchg
fdiv
sbb
div
add
outs
xchg
jns
push
cmp
std
or
sbb
pop
dec
jecxz
ror
repz
sbb
pusha
dec
movs
fldenv
mov
ret
push
mov
fsubr
inc
lea
pop
add
pop
outs
push
or
call
xor
fisttp
dec
call
ins
jnp
in
xor
jl
adc
inc
jmp
addr16
adc
push
push
vmovdqu
jne
mov
xchg
(bad)
mov
in
in
pop
fs
push
lahf
ret
cdq
push
ins
jle
xor
pop
icebp
nop
nop
in
add
test
lock
mov
in
imul
addr16
ds
jns
jmp
and
mov
mov
clc
dec
cmc
xchg
(bad)
xchg
fisttp
pop
sub
cli
jmp
data16
aaa
xchg
xor
sti
ins
ss
and
jbe
hlt
jge
sar
lds
xor
aad
mov
jp
dec
xchg
int
or
mov
jmp
pop
sub
leave
mov
in
js
cmps
lahf
add
cmps
cmp
pop
int3
adc
adc
lds
in
sahf
mov
jmp
and
call
sub
pop
adc
xchg
popf
lock
outs
gs
lds
shl
das
xor
add
std
sahf
pop
ret
retf
aas
imul
pusha
add
outs
jp
xchg
and
push
cwde
xchg
mov
das
sahf
cmp
jnp
mov
cmp
push
jge
inc
push
scas
loope
mov
push
fs
test
sub
mov
mov
cld
loope
mov
dec
(bad)
call
mov
xor
test
leave
sub
arpl
cli
add
test
int3
pop
fmul
sub
and
cmp
fcomip
add
clc
(bad)
adc
fucom
lahf
sbb
dec
sbb
sbb
xchg
cmp
stc
add
sar
adc
fisubr
mov
movs
sub
fwait
cwde
std
xchg
aad
sbb
pop
arpl
gs
cmp
jecxz
pop
rcr
sbb
mov
bound
ret
or
call
push
iret
cmp
mov
out
and
jl
scas
xor
in
pop
int3
mov
fisubr
xchg
ins
ins
or
(bad)
dec
lods
mov
(bad)
les
dec
mov
jecxz
stos
data16
cmp
movs
inc
inc
pop
cdq
les
sbb
push
icebp
cmps
mov
push
mov
push
or
ja
push
ins
adc
fisttp
into
push
repnz
xchg
repz
or
imul
xor
popf
xor
mov
sbb
mov
xchg
jmp
in
push
and
xor
sbb
or
retf
pop
nop
or
dec
pop
xchg
xchg
mov
add
xor
test
test
idiv
jb
lahf
push
hlt
sbb
jne
out
jo
cmp
(bad)
mov
fcom
jge
jns
mov
mov
mov
rol
pop
das
into
pop
mov
mov
jbe
(bad)
pop
out
loope
dec
mov
lods
jno
add
xor
add
movs
sti
dec
sbb
inc
test
call
retf
into
je
adc
fiadd
xchg
retf
inc
out
push
lds
repnz
cmps
std
dec
jo
adc
mov
sub
out
ins
pop
jp
popf
adc
jb
jno
aas
mov
push
lea
xchg
popa
outs
idiv
das
mov
mov
or
into
jns
add
jge
in
mov
test
outs
jmp
imul
stos
ss
aas
out
dec
or
sbb
cmp
pop
lea
call
movs
in
xor
movs
or
test
push
std
scas
cmp
sub
xchg
pop
pop
retf
aad
div
inc
test
leave
cmp
iret
scas
pop
push
scas
stos
inc
xor
ds
dec
push
sar
xor
pop
in
aad
xchg
xchg
mov
das
sub
sub
test
enter
cli
cmps
and
push
pop
daa
cwde
cmc
sbb
ds
or
jp
fild
cwde
int
(bad)
and
ret
gs
lods
inc
dec
and
add
xor
cwde
retf
and
dec
xor
int
fldenv
aam
mov
outs
and
sub
pop
es
shl
stc
mov
cmps
mov
xchg
std
in
inc
mov
fiadd
jne
jl
cmp
push
outs
add
aam
call
xchg
movs
addr16
jl
arpl
ins
add
jnp
adc
lods
dec
inc
loope
shr
(bad)
out
push
sub
cmp
add
cmp
int3
inc
xor
out
call
(bad)
mov
stos
xchg
inc
pop
xchg
or
inc
cmp
push
mov
stc
pop
sbb
jp
dec
jle
add
add
cmc
xlat
adc
ss
ret
out
pop
xor
pop
mov
sbb
ret
mov
or
push
ins
dec
mov
push
mov
jne
and
addr16
fstp
sub
repz
ins
jl
retw
dec
jle
push
mov
pushf
(bad)
out
jb
repz
fld
sub
sub
mov
or
cmps
mov
dec
mov
pop
xchg
out
(bad)
mov
cmp
je
push
and
cmp
inc
sub
int
scas
pop
or
iret
xor
ss
pop
jns
stos
loope
and
xchg
inc
adc
xchg
stc
mov
add
out
pop
aam
je
call
push
nop
outs
mov
xchg
lds
inc
and
lods
stos
cmp
adc
xchg
mov
test
fdivr
jl
mov
xor
inc
sub
fnsave
pop
sbb
test
arpl
pop
push
retf
retf
or
aas
sub
xor
mov
push
inc
sub
iret
shr
fsub
push
jne
jo
jmp
xor
cld
or
js
jle
mov
jbe
and
push
test
jecxz
maskmovq
ins
pop
aad
mov
xchg
adc
and
ret
mov
sub
mov
dec
mov
and
fisub
sub
stos
rcr
mov
fdivr
and
(bad)
test
data16
jae
daa
jmp
inc
xor
cdq
outs
neg
cmp
mov
cmps
scas
push
cmps
push
and
imul
mov
(bad)
jae
sbb
adc
jecxz
fwait
fwait
xlat
sahf
adc
add
and
push
xor
mov
in
dec
jmp
adc
clc
push
push
pop
pop
rol
frstor
jge
inc
lods
adc
sbb
sahf
mov
sbb
cli
cs
ror
mov
(bad)
mul
dec
add
bound
push
push
bound
xchg
scas
ss
mov
sbb
rol
cmp
xor
cmp
ja
push
loop
fbld
les
call
aam
mov
cmp
into
inc
(bad)
fistp
cmp
xchg
scas
or
ins
rep
push
je
inc
xor
jns
sub
mov
mov
int
(bad)
(bad)
daa
push
sub
lods
xchg
loop
test
cwde
push
cmp
dec
xor
jb
inc
shl
mov
(bad)
lock
cmp
fstp
test
je
jno
(bad)
pop
fcomip
mov
hlt
xor
mov
jmp
cdq
xor
push
sar
rol
jecxz
fld
clc
movs
cmps
jbe
iret
mov
imul
push
mov
adc
repnz
jae
sbb
(bad)
cmp
scas
fsub
adc
inc
push
and
loopne
pop
out
sbb
xor
cmp
and
mov
movs
xchg
adc
cmp
jno
dec
test
sub
push
icebp
into
movs
cmps
jmp
cmp
sub
inc
jnp
xchg
sub
jae
sar
test
call
sub
in
push
cdq
cmps
mov
movs
mov
aam
dec
inc
pop
jno
iret
xor
dec
jno
(bad)
in
add
pop
fmul
mov
cmp
mov
adc
gs
xlat
call
push
loope
sti
and
push
lock
push
mov
data16
xor
xchg
scas
scas
add
sbb
rcr
inc
add
fild
imul
cmc
mov
inc
scas
sbb
pop
in
test
inc
dec
clc
push
xor
mov
add
test
jnp
and
cmp
cmp
aaa
mov
fcom
test
add
sbb
lock
push
into
cli
mov
inc
cmps
dec
adc
and
or
dec
das
cmps
xchg
out
daa
push
fmul
push
call
inc
push
shr
push
jo
push
mov
add
shl
or
cs
jno
(bad)
mov
dec
fldcw
sub
lock
and
int3
adc
stc
pop
ds
stos
dec
ja
sti
jg
out
daa
ins
adc
jno
pusha
retf
out
stos
xchg
fild
dec
cmp
popf
fcmove
push
inc
retf
jp
pop
inc
or
rol
or
cmp
jo
add
inc
jb
ds
int3
dec
sbb
mov
sub
add
cmc
push
push
in
mov
call
push
daa
sub
mov
adc
iret
arpl
retf
pop
cmp
xchg
add
shl
sub
jno
inc
xor
jg
push
mov
fwait
sub
dec
jo
(bad)
xor
and
mov
fxch
or
sahf
(bad)
xor
mov
sub
mov
pop
lock
push
mov
xchg
jnp
inc
push
test
sbb
call
jne
cmps
pop
cdq
push
jge
stos
add
sub
pop
bound
sub
xchg
cmps
sbb
out
sahf
pusha
push
call
loope
or
mov
shl
jo
outs
add
sbb
mov
lods
mov
ret
pop
(bad)
imul
sbb
xchg
dec
int3
enter
das
mov
push
adc
loopne
jo
sub
leave
dec
xor
cmp
jp
(bad)
ret
inc
test
xor
ds
xor
jno
into
sub
xchg
movs
je
cli
aam
arpl
cmp
ret
jg
jnp
pushf
xlat
sub
repz
add
mov
js
fld
cdq
out
sub
ret
rol
dec
jmp
mov
stos
add
scas
aam
fucomp
test
lahf
int
ds
xchg
pop
jae
jp
pusha
push
pop
outs
fistp
lods
clc
sbb
push
push
adc
ds
dec
jmp
cmp
mov
fs
stos
ret
fdivr
pop
fst
jle
aas
aaa
fistp
sub
adc
test
dec
mul
mov
div
int3
mov
mov
push
test
push
jno
push
(bad)
shr
fisubr
add
loop
leave
nop
jne
push
icebp
cs
dec
jmp
push
mov
cld
pop
cmp
data16
cmp
inc
cmp
jl
cmp
imul
ins
loop
pop
inc
add
ror
popf
pop
(bad)
xchg
sbb
pop
xlat
cmp
call
cmp
repnz
pop
mov
pushf
sub
mov
call
pop
leave
cdq
(bad)
ror
test
fistp
es
sar
mov
inc
pop
or
adc
xor
add
mov
adc
bound
cld
xchg
dec
sbb
rcl
test
pop
pop
ficom
jp
imul
test
jl
cmp
dec
mov
fs
pop
xchg
or
inc
push
aaa
dec
les
or
stos
gs
test
test
push
ins
push
bound
jge
in
loope
mov
or
(bad)
hlt
les
mov
dec
popa
div
cmps
popa
mov
push
mov
dec
pop
or
jmp
dec
pcmpeqd
ins
add
adc
pop
mov
and
in
outs
xchg
push
push
mov
retf
push
mov
mov
xor
hlt
pop
mov
test
jg
ret
inc
sahf
mov
fist
xchg
(bad)
fisttp
repz
sbb
fld
jmp
add
mov
xchg
cli
dec
and
mov
ret
push
sbb
popf
sbb
in
hlt
push
aad
lahf
xchg
mov
xchg
retf
lea
mov
mov
out
sti
aad
stos
int
fldcw
cmp
jno
pop
scas
xchg
jbe
sub
and
or
jle
repz
cmp
nop
jo
pop
sbb
int
test
inc
add
sub
fdiv
sar
or
xchg
adc
mov
aas
aas
in
fdivr
mov
in
lods
enter
mov
adc
xchg
das
cmp
ret
aam
addr16
push
outs
adc
or
(bad)
shl
leave
jno
pop
jmp
ja
xchg
push
xor
adc
pop
jbe
add
std
mov
loopne
mov
add
adc
xchg
scas
jge
sbb
dec
sar
lods
mov
cmp
retf
in
repz
mov
inc
arpl
movs
dec
cmc
dec
mov
bnd
sbb
or
jns
mov
xchg
aas
push
out
mov
xor
and
sbb
fs
or
ds
cmp
jnp
sbb
sbb
or
sti
lahf
mov
cmp
mov
add
push
rcr
mov
jnp
cmp
imul
cmp
dec
add
mov
popf
test
test
mov
cmp
sub
ret
fidiv
xor
xrelease
in
add
sub
in
mov
xchg
cmp
xchg
sub
xlat
out
dec
jecxz
in
cs
mov
add
cmp
or
or
or
mov
mov
cs
xchg
xchg
mov
mov
sub
mov
jbe
cdq
daa
cmp
btr
adc
(bad)
rcr
xor
nop
aas
dec
test
into
imul
fs
stos
sbb
outs
imul
and
movs
in
push
xchg
inc
shl
and
jge
int
lods
pusha
inc
enter
xor
and
inc
dec
fldenv
adc
lods
test
fistp
in
cmps
aas
jno
daa
push
ret
lock
mov
mov
pop
pusha
push
mov
pop
xor
pop
push
mov
repnz
shl
fild
mov
icebp
mov
retf
mov
fisubr
jg
and
sub
pop
inc
fdiv
and
push
aas
xchg
push
jne
shl
pushf
mov
shr
or
ja
push
jmp
mov
test
push
sub
mov
test
adc
sbb
scas
inc
mov
sub
dec
outs
sti
call
dec
cmps
out
inc
jmp
cmc
fcomp
mov
enter
mov
das
push
ds
outs
bound
fdivrp
pushf
dec
mov
xor
pop
cmp
dec
call
fs
out
mov
into
jle
inc
pop
or
popa
lock
mov
or
pop
xor
sub
mov
in
leave
mov
call
fsubr
lahf
push
lahf
jmp
jl
repz
xor
cmc
xor
dec
bound
xchg
mov
icebp
test
inc
xchg
hlt
in
mov
stos
ins
or
pop
push
add
arpl
call
fld
in
ss
iret
fisubr
mov
pop
sub
sbb
lea
push
fsub
shl
xchg
jge
add
ret
mov
rcr
adc
mov
retf
inc
outs
mov
cmp
imul
xchg
fidivr
loop
cmp
gs
gs
mov
xchg
push
xchg
fdiv
jge
ror
mov
push
and
xchg
lea
inc
(bad)
(bad)
mov
xchg
(bad)
cli
les
push
or
inc
add
adc
in
sbb
push
rcl
mov
(bad)
call
dec
push
xchg
jno
push
ret
dec
into
adc
adc
xchg
(bad)
add
push
dec
push
mov
(bad)
xchg
adc
std
add
adc
lahf
into
mov
mov
jp
jno
inc
mov
outs
mov
cmp
sar
test
ret
cdq
aaa
ss
mov
or
xlat
inc
fcom
sub
push
pop
sahf
lock
pop
shr
mov
test
jb
mov
mov
dec
repz
aam
scas
mov
dec
hlt
je
push
fldlg2
adc
xlat
fmul
and
das
dec
retf
push
mov
pop
fst
mov
xor
fidivr
loope
aam
jns
fcom
sbb
push
mov
jno
adc
jb
push
test
std
fcomp
test
cli
inc
(bad)
out
jl
add
cmp
xchg
daa
jl
add
xor
enter
or
cdq
pop
clc
ins
mov
(bad)
sbb
and
cmp
xlat
lea
pop
lahf
sub
out
das
daa
movs
das
pop
sub
outs
(bad)
movs
mov
sub
mov
xor
inc
inc
lds
inc
mov
lea
inc
pop
outs
dec
idiv
hlt
aaa
pushf
mov
and
xor
jmp
jge
je
cmps
add
not
mov
popf
je
sub
fwait
nop
pop
push
adc
pop
and
mov
mov
in
or
add
inc
cmp
fwait
xchg
jnp
push
jg
loop
into
lods
lods
sbb
icebp
push
inc
or
ins
add
arpl
sti
popa
adc
(bad)
enter
in
in
adc
shl
jo
jns
mov
xchg
aad
or
cmc
jno
popf
cmp
xor
cmp
loop
jae
mov
pop
fwait
test
arpl
not
push
hlt
xchg
int
cmp
dec
jno
inc
gs
jmp
jl
inc
mov
xchg
mov
sbb
xchg
rcr
sub
sbb
and
xchg
cmp
push
cmp
jb
xchg
dec
js
dec
outs
jp
cmp
or
push
les
pushf
outs
jmp
data16
clc
(bad)
dec
movs
or
shr
pop
out
leave
ds
mov
popa
mov
jp
pop
shl
jae
jl
push
imul
cmp
push
sbb
imul
(bad)
aam
or
dec
rcr
sub
das
in
mov
push
and
jnp
repz
pushf
inc
jle
lea
jge
sbb
jg
push
sbb
add
(bad)
test
add
mov
(bad)
movs
es
and
outs
adc
movs
call
out
outs
lds
dec
xchg
(bad)
cmp
shl
mov
(bad)
popf
or
aam
xor
sub
gs
pop
mov
fs
and
and
mov
out
mov
xchg
das
scas
ffree
jecxz
and
cmps
lock
shl
mov
sbb
xor
mov
pusha
call
mov
xor
adc
setge
imul
jno
sub
and
adc
dec
cwde
loope
mov
(bad)
int
mov
(bad)
mov
sub
fs
or
mov
movs
and
lods
mov
add
ret
dec
outs
in
rcl
dec
adc
mov
jle
test
out
(bad)
(bad)
jnp
and
mov
mov
lds
jl
push
dec
or
jmp
and
mov
xor
movs
jmp
add
pop
add
inc
arpl
jg
clc
mov
and
shl
pop
inc
ficomp
sub
and
sbb
or
mul
pop
xchg
push
(bad)
in
jmp
mov
xchg
sub
mov
lahf
inc
pop
mov
sahf
pop
xor
cmp
cmps
xchg
jae
xchg
or
scas
inc
pop
sbb
(bad)
in
sti
fbstp
xor
fcomi
rol
jo
add
call
pop
aad
das
and
adc
mov
daa
mov
add
je
or
repnz
(bad)
adc
push
sbb
ja
mov
cmp
fisubr
out
mov
call
add
jae
imul
mov
jge
add
xlat
cld
sub
sbb
push
lods
mov
and
jo
data16
enter
fucomi
mov
mov
js
cmp
sbb
rcl
cmp
mov
and
ror
scas
sahf
shl
dec
cmp
inc
shl
shl
mov
push
mov
popa
ss
mov
and
xchg
mov
outs
add
es
pop
aas
aaa
or
sub
adc
adc
push
mov
ds
mov
pop
inc
lods
cwde
pop
mov
sti
dec
test
add
xchg
rcl
inc
test
repz
arpl
imul
and
push
jbe
aad
jmp
leave
adc
loop
push
jg
jecxz
adc
adc
xor
inc
iret
dec
push
mov
pop
cmp
pop
movs
jge
outs
xchg
nop
push
xchg
dec
loopne
xor
sar
shl
repz
add
in
not
arpl
or
add
or
clc
int3
jle
jmp
aas
pop
push
or
stos
dec
fcmovb
sub
in
jmp
pop
push
mov
(bad)
adc
stos
imul
jns
pop
in
mov
movs
and
cmc
push
xor
ins
enter
add
mov
pop
add
push
pop
mov
and
ret
mov
jne
xchg
xchg
pop
push
cdq
mov
cmp
mov
mov
add
dec
dec
leave
lahf
shl
cmp
data16
div
in
pop
test
dec
inc
sbb
cmp
imul
fidiv
test
mov
sub
xor
xchg
in
xlat
or
js
ins
adc
and
xchg
frstpm(287
xchg
cmp
adc
repz
out
add
pop
test
mov
shl
dec
jmp
sub
inc
mov
inc
fs
adc
in
lock
and
xchg
xor
cmp
mov
iret
inc
cmp
cmp
data16
call
or
in
sub
and
out
pop
pop
adc
fs
outs
int3
addr16
fisttp
cli
cmp
push
(bad)
jmp
pop
xchg
sub
adc
xchg
mov
int3
jne
mov
cmps
adc
repz
xor
(bad)
cdq
lahf
xor
aam
xchg
jmp
xor
sbb
xchg
(bad)
inc
cmp
stos
xor
xlat
ret
arpl
es
inc
jg
or
xor
repnz
(bad)
(bad)
xor
cmps
cmp
shl
test
rol
loop
push
inc
stos
mov
sub
push
imul
or
lea
xchg
xor
scas
cwde
add
xor
mov
dec
sub
fwait
aam
inc
mov
jmp
ficom
add
in
gs
cmp
jecxz
fnstsw
fisttp
cwde
(bad)
(bad)
gs
fild
cmp
leave
pop
loope
inc
les
dec
cli
ficom
dec
lock
add
mov
retf
mov
xchg
imul
xor
dec
aam
outs
jmp
mov
jmp
jmp
xor
call
loope
lds
dec
mov
outs
mov
mov
fsub
aas
outs
pop
test
retf
inc
lock
out
xor
data16
adc
ret
dec
test
cmp
mov
cmp
cmps
xchg
lds
test
bound
scas
aad
outs
mov
pop
js
pushf
or
and
ror
jb
enter
push
jns
push
sti
js
retf
adc
addr16
and
in
pop
ja
mov
cdq
xor
stc
dec
push
push
inc
jle
popa
ja
loope
mov
cmp
popf
sub
inc
jmp
icebp
push
or
cmp
mov
in
dec
lds
fldenv
sub
add
test
outs
test
ja
ins
dec
jae
xchg
in
mov
imul
adc
aam
out
push
inc
jbe
jl
xor
lods
mov
push
gs
leave
dec
addr16
xor
pop
mov
xchg
in
stos
or
jo
test
mov
sahf
and
xchg
daa
pop
mov
adc
add
and
and
xlat
or
in
iret
cwde
sub
jbe
dec
int
and
movs
jp
nop
sbb
push
or
pop
jge
das
xchg
xchg
mov
call
retf
loopne
mov
shl
jb
mov
push
movs
add
scas
jl
cs
ror
xchg
mov
cld
gs
lahf
not
inc
pop
add
fnstcw
ss
cmp
jnp
mov
ret
repz
rcl
cli
cmp
push
mov
imul
aam
fcomp
pop
retf
jae
mov
cdq
jno
cwde
ss
stos
jne
mul
test
mov
and
add
dec
lods
test
out
shr
pop
or
sbb
push
sub
cdq
int3
push
lods
jo
inc
mov
and
iret
repnz
xor
rcl
xor
xchg
push
xchg
dec
dec
sbb
loopne
ror
xchg
sub
adc
test
jg
push
pop
xchg
je
inc
sub
out
hlt
and
fwait
adc
leave
mov
jl
fdivr
and
cmp
js
fs
cdq
shr
(bad)
pop
nop
push
test
jnp
data16
push
sub
jmp
jl
(bad)
icebp
imul
adc
and
xchg
mov
xor
das
and
nop
or
pop
and
repz
cvtps2pi
mov
inc
jns
in
dec
cmp
and
xor
jnp
sahf
pop
mov
shr
push
out
fcomi
ret
sub
aam
retf
pop
xor
mov
mov
(bad)
mov
setns
mov
out
jecxz
dec
push
dec
cmp
daa
dec
push
ja
or
lods
push
fld
adc
mov
les
neg
shl
mov
and
fdiv
xchg
leave
jo
pop
cmp
fidiv
adc
pop
setae
fsubr
pop
pusha
xor
xchg
mov
or
mov
sahf
pop
sbb
dec
dec
adc
or
and
dec
lahf
nop
dec
movs
adc
mov
mov
ret
mov
jl
xchg
sub
push
sub
or
es
(bad)
lock
stos
cmps
or
into
adc
dec
movs
movs
jo
mov
add
mov
call
pop
jno
and
retf
test
rol
int
or
aam
jge
xchg
es
hlt
xchg
jno
repz
dec
add
adc
mov
ret
jp
xchg
jmp
ds
mov
mov
cdq
fbld
cdq
js
imul
inc
or
and
in
pop
xor
mov
imul
xchg
out
sahf
lea
mov
jmp
jp
sbb
into
mul
aad
cli
mov
loope
into
fdiv
shl
inc
add
fisubr
movs
mov
and
dec
cld
sub
hlt
xor
sub
fsubr
mov
push
inc
push
aas
pop
stos
pop
pop
add
fimul
pop
or
stos
mov
jge
(bad)
repz
sahf
retf
ins
and
and
jae
movs
sub
bnd
lea
adc
or
(bad)
cmp
sbb
dec
dec
jl
sbb
jecxz
xor
push
cdq
or
out
mov
cmps
lods
movs
test
leave
stos
mov
sbb
push
dec
or
sbb
xor
xchg
xchg
cmps
mov
jmp
loopne
gs
mov
pop
sbb
rcr
xchg
inc
xor
jge
and
lea
adc
ins
outs
jae
hlt
push
repz
inc
iret
test
hlt
pop
pushf
ret
bndstx
xor
movs
pop
jl
ret
loope
popf
dec
cmp
add
push
ins
dec
ret
xor
pcmpgtd
cli
push
outs
mul
les
mov
hlt
out
push
and
jb
fidiv
bound
jnp
sbb
aam
adc
cwde
mov
call
add
sbb
push
sbb
xor
inc
xlat
into
pushf
cmp
mov
call
cmps
(bad)
xor
pop
mov
mov
(bad)
xchg
fmul
dec
out
es
or
sbb
push
addr16
mov
cs
iret
sbb
mov
test
leave
movs
inc
adc
jne
adc
sub
cwde
out
or
ret
xor
pusha
jne
movs
je
scas
cs
mov
push
out
repnz
ins
ins
mov
sbb
dec
sbb
(bad)
repnz
je
xlat
push
mov
mov
xor
aas
xor
ds
and
fimul
jmp
call
sub
test
adc
std
mov
mov
pop
cmp
call
(bad)
adc
jb
aaa
inc
daa
mov
dec
(bad)
bound
or
jnp
pop
dec
cmp
mov
les
pop
sbb
mov
bound
jp
repnz
and
jecxz
int
mov
dec
rol
jg
(bad)
and
dec
cmps
push
jmp
(bad)
jl
pushf
shl
mov
mov
xchg
(bad)
call
aas
sar
lods
mov
inc
sub
mov
mov
jo
add
xor
pop
xor
iret
outs
cmp
lods
push
or
ret
test
cli
pop
outs
push
(bad)
jns
pusha
push
sahf
fld
xchg
mov
push
cdq
inc
mov
imul
stos
les
xor
cdq
scas
xor
test
xor
xchg
adc
ds
nop
or
mov
push
loopne
adc
add
rol
ror
loope
scas
push
and
cdq
dec
cmp
mov
call
mov
cld
mov
inc
mov
aam
das
int
out
iret
aaa
push
dec
loop
vpmacswd
mov
mov
loope
jo
inc
es
sbb
and
add
fld
mov
dec
fs
pop
movntq
mov
add
or
iret
push
xor
fisubr
mov
leave
xor
scas
sbb
dec
jg
movs
mov
(bad)
in
hlt
or
shufps
cmc
add
xchg
ror
cdq
pop
stos
pop
retf
push
ss
pop
sub
mov
stos
adc
sbb
push
imul
cwde
retf
xchg
mov
xor
mov
into
push
jmp
push
lds
cld
dec
daa
adc
jg
mov
push
es
xchg
xchg
mov
imul
test
and
mov
out
inc
in
inc
das
xlat
(bad)
mov
dec
fild
js
repnz
adc
pop
mov
int
loope
cmp
(bad)
sub
fadd
mov
mov
xchg
xchg
enter
lds
(bad)
push
mov
jbe
jbe
mov
cmp
aas
stos
mov
rol
lea
push
inc
adc
pop
pusha
rcl
and
jle
call
fwait
and
mov
mov
nop
xchg
enter
mov
mov
(bad)
sbb
mov
mov
jle
xor
sub
data16
int
push
outs
nop
clc
mov
add
jmp
gs
dec
pop
mov
dec
daa
(bad)
push
and
mov
add
or
out
mov
jne
cmps
clc
pop
js
jno
adc
and
jg
clc
or
xor
clc
mov
pop
jmp
mov
or
out
enter
pop
in
mov
leave
jg
in
fs
xor
mov
or
mov
aam
jl
loope
iret
adc
xchg
pop
mov
push
mov
icebp
sub
pop
dec
fistp
sub
rol
rcr
push
fsub
jo
test
mov
leave
mov
repz
fmul
in
jbe
pushf
dec
jmp
fs
push
pop
cdq
fldenv
retf
xor
add
inc
xchg
ins
dec
jmp
or
fucomi
xor
enter
pushf
nop
jl
lahf
popa
and
popa
push
cmp
retf
test
lea
dec
or
js
daa
add
ins
rol
clc
pop
push
in
enter
adc
retf
(bad)
clc
push
pop
push
and
jl
sbb
jle
cmc
jne
sub
or
and
pop
push
or
xchg
into
push
adc
sahf
sahf
inc
push
push
push
push
das
dec
or
imul
jge
ja
out
fs
lods
cmp
jge
enter
mov
mov
pop
and
leave
jl
call
inc
popf
shr
mov
test
adc
and
xlat
cdq
in
fwait
sub
xchg
jae
scas
sar
das
ins
pop
pop
outs
adc
inc
cmp
mov
inc
movs
hlt
mov
inc
cmps
cli
inc
(bad)
adc
dec
sar
xchg
adc
or
das
(bad)
sbb
push
into
scas
cs
in
test
xor
inc
imul
out
lock
aad
adc
ds
nop
cmp
cmp
ror
outs
iret
jb
mov
adc
call
xchg
cmps
xor
or
fwait
ds
leave
push
jecxz
adc
pop
cmps
aam
addr16
es
pop
xchg
xchg
pop
lock
sbb
and
mov
pop
cmp
test
bound
lock
mov
stos
cli
push
ins
pop
sub
loope
dec
add
mov
mov
xor
sbb
xor
adc
inc
fimul
inc
sbb
mov
imul
repnz
jg
mov
and
enter
xchg
mov
sbb
mov
dec
adc
jmp
shr
retf
fidiv
jo
add
jg
div
mov
daa
mov
inc
sub
dec
cmp
div
mov
jb
cbw
mov
shr
sti
mov
out
fild
neg
into
test
jge
(bad)
int
dec
mov
sub
jnp
jle
pop
pusha
imul
aas
ret
push
add
cmp
fst
jmp
inc
mov
or
push
les
adc
jne
dec
mov
loopne
ret
sbb
popf
scas
sub
xchg
arpl
mov
xchg
mov
lock
dec
stos
dec
popf
mov
xchg
out
sub
scas
test
shr
loope
sbb
das
(bad)
cld
out
mov
jl
or
into
or
pop
or
xchg
dec
push
inc
retf
add
ret
loop
adc
js
xlat
sbb
shl
xchg
lods
and
push
mov
ror
hlt
stc
xchg
xlat
in
into
push
xor
mov
mov
or
dec
mov
les
pop
sub
inc
das
adc
lea
std
pop
js
lods
je
sub
shl
(bad)
iret
jle
jbe
xchg
call
pop
jbe
imul
(bad)
sbb
in
cli
das
aam
lods
inc
dec
rcr
adc
jnp
(bad)
(bad)
mov
into
jne
dec
jecxz
es
inc
js
cmp
outs
mov
push
enter
cmp
add
daa
shr
mov
(bad)
push
xchg
cmc
pop
adc
or
mov
sub
mov
retf
dec
xchg
fimul
jmp
cmc
stos
daa
jg
xchg
push
xchg
ret
je
rcl
mov
or
stos
dec
mov
inc
jmp
mov
dec
cmps
test
stc
in
xchg
into
aam
jmp
pusha
push
mov
outs
pop
xchg
pop
jge
inc
cmp
stc
xchg
push
(bad)
out
sub
pushf
mov
or
inc
addr16
(bad)
lock
pop
fldenv
lahf
mov
fcmovu
cmp
xlat
xchg
gs
das
adc
das
xchg
and
loopne
fs
rcr
cmc
out
push
push
in
loope
mov
jmp
jg
ins
stc
push
pop
jmp
dec
ror
aaa
jns
lock
dec
cwde
mov
ror
pop
adc
mov
sub
jmp
int3
xchg
mov
int
sub
sub
mov
inc
cli
fimul
frndint
cmp
adc
xchg
pop
std
sbb
jp
jbe
push
mov
xor
mov
movs
push
jb
cmps
mov
cmp
ret
inc
push
sti
stos
mov
xor
push
or
jnp
icebp
test
and
ror
cwde
dec
add
ds
movs
dec
aam
adc
int
in
addr16
aad
dec
xchg
imul
fs
cdq
stc
lock
mov
call
cmps
jp
daa
repnz
test
mov
mov
pop
jmp
jmp
sbb
sar
or
inc
hlt
pop
icebp
fimul
cmp
push
scas
xchg
sub
scas
aaa
dec
sbb
cmp
sub
psubusw
inc
out
neg
stc
lahf
jmp
and
fist
nop
xor
rol
push
shr
xchg
ficomp
not
xchg
push
into
out
xchg
addr16
dec
add
pop
jbe
scas
push
inc
out
jb
push
cmp
adc
(bad)
adc
xor
ret
or
xor
or
sahf
or
lds
mov
cdq
in
int
inc
add
scas
dec
ja
fisttp
mov
xor
retf
cs
je
mov
xchg
push
xor
in
xchg
aas
jbe
shr
sub
or
xchg
js
xchg
lods
mov
jmp
es
sbb
imul
push
jg
mov
xchg
outs
in
sbb
xor
ror
xchg
pop
test
add
(bad)
fs
sbb
or
hlt
push
loopne
cmps
fisttp
(bad)
pop
int
cs
cs
mov
pop
enter
or
dec
rcr
fldenv
sub
out
and
push
ins
sbb
cmp
vpcmpgtb
mov
test
test
scas
adc
pop
vcvtsd2ss
sbb
sub
push
rol
and
mov
mov
cmps
out
(bad)
jns
jecxz
mov
dec
or
test
or
lock
ret
lock
mov
inc
or
or
jnp
popa
sbb
neg
and
push
xchg
dec
xchg
(bad)
repz
and
mov
ret
sbb
test
inc
out
sub
fisubr
sub
rcl
call
cmc
push
rcr
cmps
(bad)
dec
jae
xchg
jmp
or
xor
mov
add
fidiv
or
movs
xlat
fbstp
cmps
xchg
retf
fwait
jle
mov
imul
xchg
cld
push
movs
in
sbb
push
ins
push
sub
mov
mov
dec
lahf
sub
div
mov
(bad)
(bad)
add
bound
sahf
and
xor
pushf
sub
popf
dec
dec
fdiv
xlat
add
xor
xchg
gs
loope
in
sar
dec
cli
adc
add
fnstenv
cld
inc
test
lock
(bad)
cli
sbb
jns
test
xlat
loope
scas
int3
mov
test
korw
mov
adc
xlat
aas
leave
adc
arpl
in
mov
les
sub
pusha
jp
repnz
imul
jo
jg
ret
lods
inc
or
aas
pop
pop
mov
hlt
shr
mov
sbb
jnp
cwde
aaa
adc
push
xor
or
arpl
lea
or
(bad)
or
es
adc
mov
sbb
loopne
in
rol
sub
inc
into
bound
loope
mov
jecxz
or
loope
xor
shr
pop
sbb
cli
cmps
adc
sub
mov
leave
mov
sti
mov
adc
daa
(bad)
lahf
adc
daa
hlt
cmps
repnz
jae
arpl
repnz
sbb
fwait
jg
lahf
lods
jl
mov
inc
mov
dec
mov
adc
aad
imul
push
jmp
leave
xchg
lods
repz
pop
mov
imul
ja
repz
xchg
gs
jbe
jnp
xlat
mov
or
out
pop
dec
push
cwde
outs
std
inc
jmp
cmp
add
retf
mov
mul
lock
outs
cmp
jmp
mov
adc
pop
cmp
div
push
dec
cli
stos
dec
inc
or
jmp
sub
cmc
push
and
(bad)
dec
ucomiss
adc
je
dec
in
push
dec
stc
jbe
out
daa
dec
jle
xchg
in
lods
leave
fwait
push
(bad)
jns
jae
mov
jnp
inc
add
inc
cmps
loopne
and
adc
xchg
cmp
xchg
dec
frstor
or
jp
cmp
adc
mov
or
es
loop
scas
jns
sti
gs
imul
(bad)
push
addr16
fsubr
cmps
out
push
repnz
popf
xor
sbb
jmp
jnp
dec
mov
add
cmp
pushf
iret
shl
mov
push
mov
bound
and
jno
lahf
mov
test
fcmovnu
push
stc
and
mov
jecxz
std
je
adc
aas
pop
pushf
pop
and
(bad)
jb
jbe
stos
jne
retf
and
(bad)
pop
outs
cld
mov
cmp
push
and
sub
or
xor
and
cld
stos
ins
mov
jp
cmps
xchg
push
daa
xor
ficom
ret
ins
popa
jg
pop
mov
dec
stc
cmp
mov
mov
(bad)
cli
movs
in
jbe
das
mov
adc
(bad)
int
stc
mov
imul
ins
mov
stc
ins
ss
scas
jle
or
aas
(bad)
pop
mov
mov
call
add
jge
lds
test
fnsave
dec
pushf
pop
xchg
or
xlat
pop
call
les
and
mov
xchg
or
and
ds
icebp
mov
mov
jmp
dec
mov
popf
retf
jge
(bad)
fist
ret
ret
push
inc
outs
mov
dec
ret
ds
mov
shl
mov
jno
add
cmp
push
dec
add
xchg
sub
mov
das
mov
sub
sbb
mov
addr16
in
jne
xchg
xchg
mov
(bad)
adc
xchg
stos
xchg
stc
push
stc
outs
mov
adc
sbb
stc
jbe
jp
addr16
sub
push
lds
clc
into
pushf
movs
ins
int3
icebp
repnz
mov
cli
mov
push
dec
stos
push
jp
dec
test
repz
adc
mov
mov
imul
dec
dec
shl
mov
xchg
dec
fst
add
jecxz
push
cld
dec
mov
xor
jnp
movs
xor
dec
or
rcl
out
xchg
jmp
in
inc
(bad)
jecxz
cmps
adc
xchg
fdiv
sbb
mov
sbb
jp
out
pop
mov
sbb
movs
sub
out
add
dec
call
(bad)
pop
in
dec
xchg
xchg
sbb
add
sub
xchg
test
fisttp
pusha
lods
and
retf
les
ror
sub
cmp
sub
and
jmp
cmp
hlt
jne
mov
out
or
sub
repnz
popa
aas
mov
or
cmp
or
clc
call
cld
mov
add
mov
jmp
test
add
not
xchg
outs
ja
add
add
cdq
dec
sub
popw
test
retf
jl
mov
mov
in
ret
cmps
jbe
xchg
fbld
icebp
dec
das
cmp
stos
xchg
sub
dec
mov
into
cmp
xchg
clc
inc
daa
pop
mov
or
mov
jne
bound
xchg
shl
es
xchg
and
test
xchg
add
adc
mov
lds
mov
ss
pop
jno
enter
fsub
inc
call
and
mov
jp
cmp
jecxz
arpl
imul
cmp
sbb
and
test
loop
inc
lods
push
push
sti
in
adc
(bad)
mov
add
repz
push
mov
test
cmps
sbb
xlat
fistp
pushf
bound
pusha
test
sub
mov
mov
sbb
xor
ins
je
in
(bad)
loop
jle
fwait
dec
sahf
ja
jmp
icebp
in
(bad)
jae
pop
xchg
push
jecxz
push
int3
nop
sbb
pop
arpl
popa
add
(bad)
or
cmps
enter
jp
inc
imul
repnz
cmp
pop
cdq
(bad)
in
js
maskmovq
div
ret
adc
pusha
(bad)
stc
sub
fdivr
dec
fs
push
mov
fs
push
rcr
push
lods
sbb
dec
xor
mov
sbb
lea
jbe
neg
pop
mov
test
movs
jmp
inc
xor
cmp
repz
in
mov
cs
inc
call
jg
mov
and
mov
scas
push
ja
cmps
test
sbb
push
inc
jno
ret
cmps
scas
jo
test
retf
pushf
icebp
jl
xlat
out
lahf
leave
arpl
sub
push
ret
fs
push
aad
adc
xchg
pop
jl
xchg
sub
imul
push
mov
xor
les
mov
clc
sbb
js
mov
int
ret
jbe
pop
popa
jmp
fld
or
pop
dec
je
ret
sti
cli
push
cmp
not
ins
in
mov
(bad)
popa
(bad)
(bad)
jb
shl
ds
in
lea
js
sub
nop
fwait
dec
xor
into
int3
xchg
cmp
outs
mov
mov
scas
xchg
xchg
aad
and
les
xor
or
imul
out
bnd
mov
cdq
jnp
dec
jb
loop
into
cmps
ret
jmp
pushf
clc
(bad)
sbb
pop
fiadd
lods
jns
lds
fistp
sbb
sbb
(bad)
leave
mov
jbe
jmp
mov
rol
aad
cdq
push
into
dec
sub
mov
cmp
xchg
daa
sbb
retf
(bad)
jg
and
or
mov
mov
mov
xchg
push
inc
xlat
jge
dec
ret
jmp
ret
pop
fs
mov
xor
fcmovu
add
scas
rcr
jne
adc
or
dec
push
out
or
mov
mov
push
and
dec
push
push
push
scas
call
loope
inc
not
ja
pop
adc
mov
push
lock
jo
fiadd
mov
xchg
adc
pusha
cmp
in
pop
xchg
or
js
push
and
jle
clc
shr
lods
popf
dec
jo
popa
dec
out
pop
or
cmp
lods
outs
cmps
clc
and
adc
cmp
mov
xchg
(bad)
(bad)
repz
retf
int3
icebp
mov
xor
xor
and
enter
lea
fdivrp
add
pop
(bad)
and
icebp
mov
popa
cwde
xchg
ss
mov
(bad)
imul
jb
xchg
stos
mov
adc
xor
pop
mov
cmp
rcr
lods
lods
adc
les
in
jns
mov
sar
mov
dec
ss
stc
jge
ror
push
sub
dec
dec
sti
ins
mov
(bad)
jl
gs
shl
inc
jae
or
loop
sbb
mov
popf
ds
xor
fistp
jmp
sbb
popa
mov
inc
mov
jbe
adc
jl
js
pop
xchg
std
mov
pop
mov
mov
xchg
mov
test
sub
pop
inc
cmp
mov
mov
call
retf
icebp
shl
enter
je
sub
xlat
push
dec
push
mov
mov
rcr
ss
mov
jecxz
retf
xor
jo
enter
lahf
add
lods
adc
push
lods
addr16
cmp
cmps
pop
xchg
movs
pushw
push
cmp
and
inc
xchg
sub
rol
pushf
and
pop
pop
push
ror
les
xor
fwait
mov
cwde
and
jmp
in
(bad)
jg
stos
lods
rcr
sub
jmp
push
aam
dec
and
add
bound
sub
daa
mov
jne
jnp
fisttp
call
sbb
aaa
xor
add
adc
(bad)
adc
jo
out
test
and
icebp
add
into
adc
pop
and
push
cmps
outs
sub
xchg
mov
stos
jae
retf
cdq
bound
dec
sub
repz
adc
cmp
aaa
xchg
sub
sub
test
cmp
xor
les
xor
cld
adc
dec
xchg
adc
or
or
xor
add
jae
add
add
cdq
cmp
jne
shl
(bad)
icebp
xor
xchg
loope
icebp
push
fcomip
sub
inc
repz
and
ss
lods
mov
cmp
unpcklps
fld
ins
adc
xchg
cmp
and
(bad)
into
call
sbb
jno
sar
test
xor
inc
aas
(bad)
stos
call
and
push
adc
mov
sub
lods
adc
sbb
aad
xorps
aad
test
pushf
xchg
sbb
push
in
push
mov
in
repz
pop
xlat
leave
pusha
pop
jmp
js
icebp
hlt
(bad)
or
out
cmp
push
jbe
jb
int
in
pop
(bad)
jmp
cmc
mov
dec
jge
loop
shr
and
mov
sbb
sahf
push
inc
add
sbb
repz
xchg
mov
mov
and
cld
mov
leave
loope
cmps
jmp
cdq
jle
lea
icebp
mov
in
mov
mov
aaa
es
push
ins
les
repnz
es
outs
push
cdq
fstp
rol
test
jns
fsubr
jle
(bad)
pop
and
pop
jg
and
test
jp
in
push
repz
push
inc
xchg
jle
out
pushf
popa
ret
dec
(bad)
hlt
dec
in
retf
(bad)
xchg
cld
sub
or
add
stos
mov
add
cmp
mov
dec
add
push
cmp
cli
mov
rol
imul
ret
dec
or
mov
inc
dec
add
mov
kxorb
retf
cmp
dec
cmps
push
mov
or
jg
xor
pop
add
fild
mov
push
jmp
push
out
es
aaa
lods
mov
pop
loope
pop
data16
out
out
fs
mov
into
mov
cli
push
(bad)
or
xchg
mov
cs
call
out
into
pop
xchg
lahf
xor
and
jnp
test
retf
pop
out
mov
xchg
xchg
sbb
mov
push
jnp
push
xor
or
cld
addr16
mov
adc
inc
push
sbb
aaa
pop
add
dec
and
unpcklps
or
je
mov
idiv
xchg
ret
mov
dec
mov
leave
inc
pshufw
es
out
push
call
aad
dec
pop
cld
xor
cmp
ins
inc
mov
cmp
test
xchg
sub
sub
aaa
jne
loopne
(bad)
mov
int3
cld
inc
les
and
inc
dec
jo
or
aaa
push
jmp
fdivr
push
call
clc
mov
loop
mov
nop
mov
repz
mov
cmc
mov
ror
jne
pop
sub
add
retf
lods
mov
xchg
call
(bad)
fimul
fdivr
popa
dec
call
leave
int3
sub
pop
xlat
xchg
sub
jmp
movs
add
mov
cmp
movs
mov
cmp
pop
aad
mov
sub
or
rol
add
dec
add
jno
jnp
aaa
mov
pop
test
pop
xor
std
cs
jns
add
shl
js
pop
pop
js
inc
push
cli
test
mov
(bad)
shl
xchg
and
jb
mov
inc
outs
loop
inc
mov
mov
jl
mov
scas
mov
call
(bad)
xchg
sub
inc
fmul
repnz
mov
or
and
sbb
xchg
sbb
jmp
mov
pop
loop
movs
push
scas
imul
mov
push
jl
and
sti
mov
popf
test
xchg
in
loopne
mov
enter
ret
test
or
add
sbb
dec
lds
cld
cdq
sbb
dec
arpl
sbb
pop
scas
popa
sti
and
push
fstp
scas
jmp
mov
(bad)
ds
sti
icebp
mov
pop
add
(bad)
out
call
cmp
(bad)
push
test
xor
and
(bad)
jmp
das
cmp
sar
out
jbe
imul
xor
and
or
mov
dec
not
mov
jae
lods
adc
lods
nop
add
cmp
add
push
inc
jle
fidiv
mov
fxtract
in
jecxz
xchg
mov
dec
sbb
adc
sub
loopne
inc
dec
xor
or
(bad)
idiv
inc
in
addr16
sbb
jl
retf
fldenv
imul
movs
sub
mov
ret
mov
dec
(bad)
jl
pop
xor
and
mov
test
je
fcom
xchg
mov
and
pop
dec
sbb
fnsave
xchg
sbb
(bad)
stc
out
in
scas
mov
ret
outs
push
xor
adc
cmp
(bad)
pusha
(bad)
in
dec
es
adc
shl
push
dec
adc
es
mov
adc
xchg
push
cld
mov
nop
int3
mov
push
(bad)
stc
div
jp
xor
sbb
icebp
test
fild
stc
sub
mov
inc
sub
(bad)
push
in
pop
add
fild
cmp
ds
gs
test
arpl
adc
scas
ror
ins
in
sbb
out
fcomp
arpl
adc
test
inc
push
push
pusha
sbb
jne
dec
sub
movs
fcmovne
or
mov
enter
or
xchg
push
dec
std
xchg
test
jle
xor
aad
cmp
add
jo
nop
lea
out
or
xchg
mov
rcr
jo
iret
shl
push
pop
mov
push
jb
or
je
or
inc
and
push
imul
or
fwait
xchg
enter
dec
sti
imul
(bad)
shl
arpl
push
mov
xchg
xor
imul
xlat
test
test
push
push
test
pop
sub
pushf
push
xchg
leave
fcomp
movs
stos
and
push
call
leave
mov
je
fsub
xchg
jns
test
hlt
push
sar
xchg
aam
lds
add
clc
std
outs
int
push
add
push
(bad)
fimul
ss
psraw
mov
xchg
or
imul
ret
xlat
mov
push
pop
retf
push
mov
fistp
clc
fmulp
dec
and
sbb
xchg
lds
adc
xor
jno
mov
ins
add
scas
(bad)
in
push
pop
adc
jle
mov
ret
and
pop
popa
dec
scas
inc
sub
sar
ins
sbb
jnp
and
cdq
jno
(bad)
sub
jle
movs
fdivr
arpl
mov
jb
daa
lea
push
mov
fistp
out
sbb
mov
push
xor
xchg
div
daa
and
(bad)
add
sti
push
fisttp
mov
sar
mov
xchg
repnz
sub
(bad)
or
mul
fwait
sbb
js
rcr
push
in
scas
lahf
jne
sbb
(bad)
dec
icebp
push
das
in
sub
pop
rcl
in
xlat
push
adc
ror
inc
popf
in
and
mov
cmp
xor
pop
mov
movs
aaa
imul
fwait
sub
xchg
push
mov
in
dec
sbb
push
sub
and
add
movs
loop
dec
gs
dec
mov
outs
cmp
scas
gs
in
jp
retf
ret
push
ficomp
out
mov
call
mov
retf
push
(bad)
inc
sub
push
push
mov
pop
adc
mov
add
and
xchg
jp
call
push
call
ins
aam
push
repz
cdq
add
jnp
sbb
or
mov
inc
cmp
push
shl
test
mul
loope
xor
aaa
inc
inc
lods
xor
mov
sub
mov
jnp
rol
inc
sbb
mov
aas
xchg
loopne
imul
ror
xor
jge
pop
mov
adc
sub
push
loop
xlat
test
push
mov
fwait
push
cmp
ret
jnp
(bad)
int3
or
ficomp
mov
mov
adc
out
stos
mov
iret
movs
les
sub
and
addr16
neg
lahf
pusha
ja
sbb
int
xor
sub
xor
dec
cmp
dec
je
adc
push
popf
fidivr
mov
neg
xchg
and
es
jmp
xor
cld
xchg
and
sbb
cdq
push
and
inc
pop
pushf
mov
(bad)
mov
sub
mov
cs
sbb
icebp
push
push
and
das
repz
je
or
lods
cmc
nop
cmc
sar
add
scas
mov
mov
test
fiadd
and
xchg
mov
movs
cli
out
ins
xchg
dec
xchg
scas
mov
dec
inc
sbb
mov
imul
mov
sbb
dec
movs
inc
int
mov
cwde
fcomp
das
jnp
dec
loope
xor
push
jecxz
arpl
enter
in
and
add
data16
xchg
call
and
les
test
mov
mov
ficomp
je
lea
cmps
xor
mov
cmp
sahf
jno
jge
cmp
retf
jmp
int
ss
js
mov
mov
scas
cmp
add
sub
mov
and
push
push
jmp
cvtps2pd
shr
pop
xlat
jle
sbb
push
std
mov
and
or
sub
pop
jl
das
sub
rcl
sbb
sahf
lods
pushf
loopne
or
test
sbb
addr16
mov
add
nop
jge
mov
push
idiv
(bad)
loope
adc
xchg
adc
cmps
shl
(bad)
fwait
imul
cmp
adc
sbb
(bad)
mov
push
push
les
pop
in
sub
xchg
dec
sbb
pop
out
and
lods
push
add
push
mov
loope
pop
mov
mov
sub
inc
lea
pop
ja
jecxz
mov
lods
sub
sbb
ret
ds
mov
cmps
pop
jge
push
aam
mov
jnp
mov
les
ret
call
mov
movs
sar
sbb
in
in
cwde
(bad)
cmc
stos
xor
call
mov
out
lods
mov
pop
sub
icebp
addr16
mov
in
fistp
mov
inc
push
in
aas
cwde
mov
and
xchg
arpl
cmp
int3
mov
addr16
push
cli
leave
je
jle
xor
pop
inc
jmp
imul
mov
clc
sbb
and
pop
pop
push
stc
jbe
lea
mov
add
lea
pusha
push
push
arpl
jle
push
call
mov
rcr
repz
inc
cs
sbb
je
(bad)
mov
or
sub
xchg
test
sbb
cmps
adc
sbb
jo
and
inc
adc
cs
ret
stos
mov
aas
inc
mov
in
cli
pop
imul
shr
outs
shr
push
ret
fwait
test
sbb
add
lock
push
mov
dec
hlt
pop
push
cmp
inc
mov
out
imul
(bad)
dec
fwait
stos
xlat
enter
fidiv
inc
xor
icebp
ss
xor
and
aam
push
test
inc
test
stos
icebp
sbb
stc
pusha
xchg
dec
or
mov
pop
pop
pop
daa
bound
push
repz
loop
addr16
repz
ret
lahf
mov
imul
adc
retf
mov
xchg
dec
push
scas
aaa
add
ds
je
fwait
xchg
mov
cli
sar
mov
xor
xor
jecxz
stc
sub
sub
adc
cmp
mov
push
sti
lea
test
cwde
xor
cmp
mov
mov
fstp
pop
jne
ss
popf
push
out
rcl
cli
inc
cwde
imul
in
nop
iret
pusha
out
cmps
push
les
loopne
data16
dec
pop
imul
mov
jmp
outs
out
aad
or
sar
out
pop
out
jle
in
jmp
retf
outs
leave
mov
mov
test
push
call
inc
sbb
mov
frstor
jg
add
pushf
jp
imul
jbe
std
pop
test
ja
pop
push
or
sar
xchg
sbb
adc
shl
int3
inc
mov
mov
cmp
or
jbe
fst
jle
in
jne
std
ins
sar
adc
pop
add
push
sbb
lods
pop
hlt
mov
xchg
dec
or
int3
and
nop
xchg
sbb
data16
mov
dec
out
repnz
leave
pop
or
push
in
mov
call
xchg
ret
pop
dec
(bad)
push
add
adc
loopne
in
xchg
aas
inc
iret
xor
std
imul
das
cmp
pusha
sahf
inc
retf
repnz
jo
jmp
pushf
outs
dec
pusha
push
test
sub
xchg
mov
xchg
or
pusha
jmp
xchg
nop
mov
cmps
out
fcomp
mov
pushf
loopne
inc
bound
movs
scas
shl
jl
cmc
add
pusha
clc
ja
sub
sbb
xchg
jl
ret
gs
jecxz
mov
icebp
call
popf
sub
add
pop
imul
add
shr
sbb
mov
push
aam
adc
test
adc
inc
(bad)
jns
mov
sub
daa
and
loopne
sub
dec
data16
sub
pop
cmc
ror
sbb
push
push
mov
mov
pop
sahf
push
push
bound
xchg
mov
jl
xchg
mov
stos
in
or
fdivr
mov
pop
test
bound
push
fld
xchg
pusha
(bad)
push
mov
test
push
rol
scas
sub
mov
mov
retf
xchg
push
jge
add
pusha
push
sahf
fstp
dec
ror
fisttp
push
xor
pop
call
xlat
adc
sub
mov
dec
stc
or
shl
add
xchg
mov
int3
scas
aad
xchg
sti
push
mov
cmp
add
loopne
jg
adc
cmp
cmp
xchg
push
sbb
ins
sub
les
xchg
dec
pop
daa
sbb
shl
jmp
test
sbb
add
mov
or
or
xor
push
add
fidivr
lods
pop
or
cmc
jge
dec
nop
cmp
add
push
outs
add
(bad)
iret
xor
nop
(bad)
xchg
pop
movs
imul
retf
je
cmp
addr16
shl
cwde
add
blsfill
cld
xchg
repz
aam
fld
jge
aad
repnz
dec
jg
and
cmp
cmp
lea
jmp
pop
mov
mov
xchg
push
push
pop
gs
pusha
mov
cmp
cmp
stos
int3
inc
lods
jp
mov
popa
enter
js
cmp
push
ret
test
std
adc
scas
xor
xchg
mov
push
mov
jae
sbb
lds
cmp
enter
mov
in
jmp
(bad)
aaa
xchg
pop
ja
xor
cmovge
mov
aaa
jmp
pushf
in
cmp
pushf
add
adc
or
and
mov
dec
popa
pop
fnstenv
test
clc
sahf
retf
xchg
or
mov
outs
pop
push
icebp
fidivr
popa
mov
xchg
neg
sub
stos
fistp
add
push
out
ins
ret
lock
cmp
mov
and
arpl
sbb
mov
sahf
imul
mov
mov
mov
mov
sar
mov
into
ds
push
push
cmp
adc
or
jle
push
push
in
xor
repnz
fsubr
leave
leave
and
and
push
mov
es
into
inc
sti
xor
or
push
and
push
mov
jge
adc
arpl
cmps
inc
pusha
mul
(bad)
test
ror
pop
pop
sbb
mov
lahf
iret
mov
jno
fmul
fwait
movs
jle
push
mov
nop
out
mov
or
pop
dec
and
test
mov
in
cmp
sbb
mov
out
inc
and
out
ror
retf
ret
mov
add
ins
(bad)
fs
out
cmp
jnp
jecxz
add
jns
adc
in
cmp
dec
push
push
add
ins
mov
mov
add
mov
xchg
out
xor
sahf
pop
into
dec
dec
in
mov
outs
dec
mov
sahf
cmps
fsubp
fadd
into
mov
bound
mov
bound
stos
out
mov
(bad)
pop
adc
mov
inc
vorps
ds
jmp
imul
xor
jge
fidiv
mov
mov
inc
push
inc
mov
jo
push
aam
hlt
mov
mov
fdivr
pop
inc
loopne
(bad)
sahf
xor
loop
mov
or
inc
and
ins
das
mov
push
add
jecxz
add
(bad)
jp
nop
daa
sbb
cwde
sub
div
nop
mov
or
jg
cmp
xor
inc
inc
hlt
aam
xor
mov
jl
sbb
pop
add
into
mov
push
mov
int3
xlat
xchg
sbb
test
lds
es
pop
call
adc
and
ja
pushf
retf
dec
pop
pop
lahf
push
mov
and
aad
ror
cmp
mov
hlt
outs
retf
ret
sub
pop
pushf
sub
aas
jb
jmp
xlat
std
rol
cwde
test
mov
cmp
and
add
psubq
mov
add
and
or
mov
xchg
shl
inc
inc
push
dec
dec
mov
or
sbb
xor
ins
dec
pop
cmp
rcl
adc
jl
xchg
frstor
inc
(bad)
out
add
push
jne
ins
mov
dec
imul
xchg
mov
push
adc
scas
or
mov
jno
xchg
inc
hlt
add
sub
mov
sbb
call
pushf
xchg
enter
outs
jo
or
mov
sub
jecxz
test
call
dec
lods
pop
imul
mov
inc
stos
or
inc
mov
repz
push
rcr
fs
addr16
adc
test
dec
inc
jbe
mov
xchg
sti
dec
aam
pop
(bad)
sub
lods
(bad)
dec
(bad)
neg
push
inc
mov
dec
fst
clc
mov
mov
push
in
dec
cli
rcr
addr16
push
(bad)
repz
dec
lea
xchg
arpl
and
push
jnp
xchg
mov
fadd
jo
jecxz
adc
push
(bad)
sbb
jbe
pop
jns
sbb
or
xor
xchg
or
inc
stos
xchg
pop
cmps
adc
mov
inc
or
xchg
dec
dec
cmp
xchg
mov
or
aad
leave
cmp
mov
xor
adc
and
mov
xchg
stc
test
push
jo
iret
das
add
sub
and
or
fwait
push
xor
mov
mov
pop
and
or
and
retf
out
mov
rol
mov
push
in
aas
add
xchg
add
mov
retf
enter
and
imul
pop
ss
(bad)
cld
ds
mov
jp
retf
in
aas
(bad)
out
adc
je
add
fstp
jg
sti
fcomp
loopne
add
or
stos
jmp
cmp
pop
mov
int3
test
movs
fadd
out
adc
jl
mov
icebp
(bad)
loopne
daa
and
aad
dec
or
pop
cli
ror
sbb
cmps
xchg
push
js
mov
int
popa
xchg
repnz
pushf
push
pop
mov
mov
nop
inc
hlt
pop
xchg
cdq
xchg
or
push
addr16
or
mov
adc
pop
inc
jmp
neg
pop
ret
push
outs
(bad)
mov
les
push
jae
cmp
pop
gs
cmc
(bad)
push
add
adc
xchg
xor
mov
cmp
adc
(bad)
stc
je
aam
sbb
fcom
jmp
pop
icebp
pop
inc
rol
out
jne
xor
cmps
cmp
fucomp
in
in
xsha1
cli
jle
rcr
push
fwait
add
neg
(bad)
loop
push
iret
pop
mov
mov
out
imul
adc
in
cmp
and
loop
ja
and
add
cmc
or
sbb
div
add
dec
inc
pusha
jae
push
lahf
xchg
das
popf
mov
(bad)
outs
jmp
jb
fidivr
test
(bad)
dec
and
mov
mov
add
stos
push
shl
jbe
aas
dec
nop
dec
inc
cmps
sar
ins
test
pop
ins
ja
xlat
out
xor
push
xchg
add
mov
and
xor
out
clc
cmc
cmp
xchg
or
aam
test
fcom
cmp
(bad)
iret
add
xchg
(bad)
stos
fist
jl
adc
out
and
pop
outs
test
and
rol
cwde
lock
test
and
sbb
outs
mov
shl
cmp
or
add
fadd
fadd
popf
add
xchg
xchg
in
adc
xor
and
push
sub
lea
pop
out
std
fdivr
xchg
retf
mov
mov
mov
push
std
and
dec
clc
nop
sbb
cli
xchg
or
imul
cwde
push
or
cmp
test
es
gs
or
cmp
daa
pop
out
cdq
sbb
cmp
or
xlat
rcr
cmp
(bad)
mov
daa
inc
loope
in
sar
mov
bound
aas
popa
inc
xor
push
sub
and
dec
push
mov
sbb
sahf
cmc
dec
repnz
mov
mov
(bad)
pop
sbb
lock
jnp
xor
ja
push
iret
clc
stos
int3
mov
retf
add
cwde
dec
stc
sbb
or
push
test
fst
in
lea
sahf
test
push
mov
es
ss
mov
cmps
in
arpl
aad
loop
(bad)
push
jns
lock
or
pop
xor
retf
out
push
aaa
dec
mov
scas
fdivr
mov
sub
cmp
je
xor
push
push
jl
or
std
adc
xchg
int
jecxz
inc
mov
dec
mov
jmp
loope
fldenv
ret
addr16
pop
cmp
xchg
sub
les
or
arpl
cmps
outs
lea
inc
dec
cmp
js
xchg
stos
add
or
lea
jbe
outs
lea
cld
mov
scas
cmp
pop
and
cdq
mov
leave
rcl
jmp
test
outs
push
mov
test
mov
push
(bad)
mov
stos
inc
(bad)
aad
aaa
mov
sub
fist
(bad)
pop
xor
xor
les
mov
sbb
lock
lea
mov
cmc
xchg
mov
adc
ins
add
lock
mov
arpl
mov
xchg
data16
sbb
dec
push
arpl
cmps
push
rcl
das
jmp
push
add
sti
sbb
add
xor
cld
fs
fwait
inc
call
fisttp
out
loop
pop
mov
push
pop
jp
inc
mov
dec
adc
bound
mov
mov
sub
xor
mov
movs
sub
outs
in
dec
xchg
ret
dec
sub
sbb
test
push
lods
dec
enter
mov
nop
icebp
icebp
repz
leave
pop
out
test
add
lods
inc
cld
or
ins
push
xor
jl
adc
cld
and
dec
sbb
xor
popf
das
scas
arpl
in
xchg
(bad)
retf
sahf
les
stc
sbb
lahf
inc
mov
mov
mov
fnstsw
ret
xlat
or
xor
or
xor
mov
cmp
iret
or
es
inc
push
and
cs
ret
out
xor
in
and
movs
cs
adc
jp
mov
imul
lods
adc
fimul
ds
adc
bound
test
mov
add
shr
gs
mov
nop
shl
jmp
mov
aas
sbb
dec
fcmovne
mov
clc
test
icebp
out
cs
sti
mov
fdiv
mov
and
jg
jecxz
ins
out
xchg
idiv
lock
jmp
push
adc
vpunpckldq
mov
call
inc
(bad)
dec
fimul
pop
jg
(bad)
aad
push
adc
repnz
movs
sbb
repz
cmps
cmp
xchg
xchg
gs
push
rcr
dec
sub
movs
sub
adc
jae
mov
out
pop
int3
aas
xchg
jecxz
call
int3
push
arpl
ret
inc
js
pop
aaa
in
jno
dec
jbe
cmp
jg
and
mov
and
or
inc
frstor
cmp
and
rcr
fsubr
in
jns
into
xor
mov
push
pop
sbb
jnp
push
fidivr
mov
rol
jl
xor
sbb
inc
adc
push
mov
rol
or
mov
stos
lods
cwde
sub
sti
jne
push
mov
sub
and
lods
and
mov
pop
pop
bound
jmp
cwde
sbb
jle
cmc
(bad)
ss
data16
mov
int
and
lods
xor
jmp
dec
repnz
arpl
xchg
pop
xchg
push
jne
and
inc
not
and
ficomp
lea
lods
inc
retf
sti
mov
xchg
dec
ds
mov
sub
sbb
or
mov
sbb
int
push
sub
xchg
and
fldenv
scas
cwde
jne
mov
jne
icebp
adc
sahf
cmp
sbb
fst
push
xchg
ja
test
iret
add
jbe
les
pop
in
hlt
lock
add
xchg
inc
fs
sbb
mov
popa
sbb
lock
sahf
int
dec
mov
in
mov
pop
adc
icebp
dec
cli
mov
add
xor
call
mov
add
add
push
pop
in
xor
push
int3
jl
in
in
das
sbb
sub
outs
repz
ds
xchg
ins
lods
xchg
mov
jb
and
in
add
inc
in
arpl
and
push
mov
loope
dec
test
dec
les
xrelease
sahf
fsubr
psrld
test
push
pusha
scas
xchg
in
in
imul
add
push
jp
sub
aam
cmp
cmps
pop
in
stos
sub
jge
cmp
mov
mov
pushf
cmps
mov
ins
add
mov
jne
xchg
pop
stc
(bad)
or
ret
jle
out
cmp
xchg
or
ins
adc
mov
ret
mov
out
sbb
cmc
mov
lods
test
fstp
pusha
dec
jp
inc
xor
jbe
(bad)
or
add
mov
(bad)
ja
data16
lock
and
sar
pop
jecxz
cmp
inc
xchg
movs
pusha
push
sub
loopne
imul
sahf
jns
and
pop
adc
or
cdq
dec
add
cmp
popa
pusha
or
jle
into
adc
and
lea
ret
mov
aaa
or
js
rcl
shl
pop
mov
pop
sbb
fidiv
sub
stos
sub
sti
and
sub
dec
add
int
sbb
out
popf
mov
nop
xlat
mov
in
icebp
push
xor
mov
and
or
not
(bad)
shl
loopne
bound
mov
les
xor
fst
sbb
inc
push
(bad)
imul
retf
and
fdivr
cmp
fisttp
rcl
ret
cs
jl
push
cmc
mov
neg
add
bound
sbb
dec
int3
retf
jecxz
cmps
or
pop
inc
adc
xchg
sub
pop
ret
mov
pop
cmp
xchg
jmp
xchg
xchg
push
popf
inc
idiv
mov
fistp
ja
dec
or
rol
cmp
or
(bad)
js
add
jno
(bad)
xchg
(bad)
pop
sbb
(bad)
retf
jnp
jo
(bad)
sbb
or
mov
sub
xchg
scas
push
stos
and
adc
pop
repz
inc
xor
add
xchg
mov
or
xchg
(bad)
mov
arpl
add
movs
cmp
jno
inc
(bad)
mov
jo
pop
sbb
add
jmp
icebp
sbb
or
dec
dec
fisttp
xchg
fidiv
inc
ins
dec
dec
ins
pop
jo
cmc
jne
imul
out
iret
(bad)
push
leave
mov
lock
jg
iret
jmp
sub
or
and
xchg
movs
(bad)
push
or
mov
retf
jle
xor
xor
mov
(bad)
fistp
sub
pop
or
jmp
push
add
pop
fisubr
sahf
sub
fistp
(bad)
jmp
es
mov
iret
outs
sti
icebp
(bad)
imul
sub
mov
and
and
mov
pop
outs
push
inc
dec
xchg
test
mov
pop
mov
out
cmps
stc
(bad)
pop
adc
test
mov
call
pop
bound
and
lock
fmul
jmp
cmp
out
lods
in
cmp
inc
xor
clc
jne
fwait
mov
leave
mov
pop
retf
adc
scas
test
mov
ret
shl
retf
stos
int3
repnz
add
xchg
push
cwde
ja
xchg
(bad)
jmp
mov
push
jecxz
pop
push
xor
xchg
imul
and
(bad)
add
lds
rol
push
xor
stos
mov
xor
add
cmp
push
add
call
mov
or
mov
sub
out
inc
test
mov
jmp
mov
fnsave
shl
cmp
mov
xchg
rcl
inc
data16
push
xchg
mov
cmp
xor
and
mov
cwde
xchg
dec
rcl
(bad)
inc
aas
inc
das
mov
dec
mov
mov
pop
jmp
push
out
dec
sbb
cs
enter
cmp
dec
ud0
out
cmp
sbb
sbb
pop
sub
xor
pop
xchg
sbb
inc
outs
in
mov
loopne
add
loopne
sar
push
call
repnz
sub
mov
mov
inc
popa
cmp
add
sbb
fstp
fisttp
fwait
cmp
jle
xchg
gs
fwait
bound
pop
push
pop
je
push
dec
jl
xchg
cmp
push
sbb
mov
mov
fadd
cwde
jmp
(bad)
aas
out
adc
sub
mov
adc
adc
adc
sbb
pusha
adc
xor
out
movs
sbb
lods
rcr
lods
add
aam
sti
lds
popf
inc
cmp
pop
push
push
and
imul
(bad)
jae
test
shr
adc
sbb
sub
xor
adc
out
or
adc
lahf
fs
xchg
call
add
jge
dec
(bad)
jp
sub
retf
mov
ds
pop
sbb
stos
clc
jae
xchg
scas
paddsb
inc
push
in
repz
das
es
mov
outs
cld
and
(bad)
aaa
mov
sub
mov
sub
adc
cld
push
mov
shr
xchg
sbb
ss
scas
inc
cmp
outs
add
add
jmp
xor
daa
xchg
jecxz
mov
adc
mov
cld
scas
es
out
mov
fucomip
and
lock
xchg
sub
or
pop
and
pop
not
lahf
aad
pushf
xchg
or
enter
outs
fs
cmp
and
cmps
leave
pop
shr
xchg
add
pop
and
add
cmp
dec
(bad)
mov
fst
je
cdq
mov
shr
xor
jl
iret
test
outs
lea
pop
mov
enter
jmp
(bad)
call
hlt
popf
mov
mov
push
out
ja
push
test
cmc
push
cmp
sbb
aaa
add
mov
mov
sub
pop
inc
cwde
xchg
inc
neg
sbb
div
fs
push
mov
add
neg
cmp
pop
test
in
mov
sbb
mov
call
cmps
ror
or
mov
ret
mul
shr
jns
(bad)
jo
sti
scas
push
lods
sub
inc
or
mov
push
jl
jno
adc
mov
lods
inc
and
dec
and
dec
sar
addr16
jle
dec
fld
call
je
sub
mov
jae
cmps
mov
daa
pop
in
add
sbb
jb
dec
jge
push
xchg
mov
sub
ss
in
div
nop
cmp
popf
push
fadd
test
sub
xor
sti
xadd
clc
adc
dec
pop
sbb
xchg
dec
mov
lock
dec
cld
xor
out
cmp
inc
cmps
ins
and
sbb
sbb
fdiv
add
or
fmul
mul
or
int
in
add
xchg
xchg
adc
test
add
xchg
movs
inc
gs
jbe
lds
jno
xor
repnz
dec
mov
(bad)
pop
movs
shr
cmp
pop
dec
xchg
jmp
test
jmp
mov
clc
jmp
inc
add
jnp
movs
adc
sbb
adc
fsubrp
iret
je
popf
(bad)
ja
sbb
in
mov
jae
into
xor
cmp
in
imul
mov
lea
fild
nop
sub
cs
adc
aam
repnz
(bad)
fidiv
pop
pop
sub
ins
pop
les
ins
xchg
dec
clc
pop
lock
call
push
cwde
pop
div
into
daa
jo
out
mov
movs
xchg
sub
iret
movs
test
xchg
ss
xchg
nop
jae
dec
sub
(bad)
jecxz
in
mov
adc
das
mov
mov
and
in
dec
shl
inc
(bad)
(bad)
out
xor
push
jle
inc
jp
xchg
rol
jg
sub
sbb
mov
icebp
(bad)
cmps
icebp
mov
cmp
gs
lock
xchg
ins
rcr
movs
cmp
pop
mov
cmc
sbb
(bad)
ror
fnstcw
jg
inc
adc
inc
or
je
or
shr
jmp
ror
js
(bad)
retf
mov
bound
fldenv
outs
cmp
ret
jb
pop
xchg
lahf
adc
inc
jne
nop
jb
fstp
xor
movs
cmc
sbb
mov
into
xor
cmps
popa
das
test
ret
cmp
cmps
cli
and
in
mov
xchg
call
cli
sti
inc
mov
out
lahf
xor
mov
inc
(bad)
mov
(bad)
push
cmps
jle
and
mov
push
jnp
pushf
adc
rcr
dec
in
inc
and
inc
push
fmul
(bad)
jmp
popf
imul
cmp
inc
ja
int3
mov
and
mov
dec
(bad)
enter
adc
fimul
mov
add
ficom
mov
les
outs
pop
dec
ins
dec
or
jo
xchg
lock
inc
push
cmp
jbe
mov
push
test
scas
mov
mov
test
jmp
call
call
icebp
lods
pushf
jp
stos
xchg
jno
ss
add
jp
and
mov
jmp
mov
cli
pop
xor
adc
inc
sbb
xor
pushf
xchg
out
(bad)
lds
or
or
push
aad
add
and
push
and
rcl
test
mov
div
xchg
jge
mov
clc
mov
jbe
cmps
pop
jns
mov
mov
inc
lods
inc
in
pop
jmp
inc
sti
dec
jnp
(bad)
sub
fistp
in
jmp
sbb
jns
(bad)
and
cli
mov
and
cmps
shl
cwde
sbb
or
dec
add
mov
xor
xchg
out
push
xlat
call
das
mov
cmps
dec
pop
sbb
and
inc
jbe
mov
pushf
or
scas
mov
jno
mov
iret
test
pop
enter
cmps
aaa
and
mov
in
imul
das
sbb
add
test
loop
rcr
dec
leave
mov
fsub
xchg
xchg
jmp
or
loopne
rcr
call
repz
(bad)
ins
out
call
push
fstsw
ins
mov
inc
popf
retf
mov
mov
outs
aad
aam
int
pop
imul
ret
mov
push
xor
cmps
sbb
daa
mov
inc
and
mov
aas
nop
or
pop
cmp
push
loopne
and
lods
inc
fld
lea
lods
mov
iret
sbb
sub
neg
xor
dec
pushf
pop
popa
mov
das
pop
or
and
sbb
in
jmp
ror
mov
jmp
cmp
dec
dec
cmp
mov
rcl
stos
gs
mov
not
sbb
cdq
fcom
dec
ret
and
clc
or
outs
inc
pop
jmp
test
pop
movs
push
xchg
das
lock
sbb
ds
out
pop
add
add
cmps
(bad)
jle
scas
lods
mov
mov
ins
and
ja
xchg
(bad)
jecxz
retf
in
or
cdq
add
jnp
inc
xchg
mov
push
push
mov
mov
in
out
adc
or
loopne
stos
sbb
add
ins
es
add
mov
data16
xchg
fwait
jnp
cmp
xor
movs
and
cmp
jecxz
in
xlat
xchg
mov
cs
inc
retf
std
inc
jns
push
cmp
or
lea
int
mov
mov
sbb
loopne
push
dec
push
adc
sub
mov
sbb
stos
pop
loopne
xchg
ret
jmp
pop
and
lds
push
cdq
xchg
xchg
dec
pop
stos
add
popa
div
add
or
adc
fldenv
sub
rol
outs
ret
scas
and
pop
fcom
xchg
dec
inc
sub
sbb
push
mov
cmp
inc
mov
movs
cmp
pop
mov
jb
mov
adc
dec
sbb
(bad)
cld
stos
outs
and
xor
dec
dec
or
adc
outs
jle
sub
pop
or
mov
xchg
sbb
pop
sti
xor
test
inc
add
inc
fiadd
stos
adc
sbb
popf
shl
popa
adc
push
pavgb
sbb
pop
aas
adc
add
in
mov
das
loop
mov
mov
test
sub
out
pop
(bad)
shr
movs
ret
call
mov
dec
sbb
mov
inc
xchg
adc
repz
push
xor
add
mov
into
inc
loop
adc
call
jns
add
bound
adc
stos
sbb
imul
iret
fcom
inc
call
into
mov
pop
stc
aam
inc
sahf
paddsw
mov
push
mov
and
mov
loope
sahf
in
cmc
and
and
jns
push
mov
xchg
push
mov
stos
in
rcl
adc
pop
push
jo
stos
(bad)
pushf
cmp
outs
push
and
(bad)
hlt
xchg
arpl
sbb
jbe
mov
add
out
stos
inc
push
shr
jnp
fist
aad
xchg
pop
or
sbb
mov
pop
push
js
hlt
jmp
dec
loope
and
into
fistp
xchg
punpckldq
jb
scas
mov
jo
nop
adc
arpl
mov
jp
ret
daa
push
lods
push
mov
inc
sti
nop
fmul
sbb
popa
mov
jp
jmp
sti
jp
cmp
sbb
mov
(bad)
retf
aad
retf
inc
jae
pop
jecxz
add
add
xor
push
ret
dec
jp
jle
popf
add
test
nop
sahf
or
cmp
jno
dec
dec
(bad)
jae
ds
jmp
or
inc
(bad)
push
in
cld
outs
aam
ret
fnstenv
mov
pop
push
push
mov
jo
adc
xchg
xor
test
adc
cmp
call
pop
push
xchg
push
push
push
mov
mov
out
je
sbb
cmp
push
xor
fild
add
loop
je
stos
push
fist
push
cmp
cmps
int
call
push
sti
bound
ins
mov
in
inc
xchg
sbb
push
dec
lahf
pop
mov
bound
pop
sub
aas
fsubr
xchg
cli
out
outs
push
lahf
into
sbb
(bad)
in
adc
xlat
cli
mov
imul
pop
dec
pop
jle
sahf
mov
pop
aam
fwait
pop
rcl
in
test
jge
xor
clc
jle
imul
fcomp
jns
fwait
mov
and
movs
fs
or
adc
pop
cmps
cmp
cmc
jmp
in
inc
jmp
sti
pop
sbb
jno
mov
pop
fs
ss
mov
jle
cmp
mov
sub
in
jnp
cmp
movs
shl
rcl
mov
call
mov
jb
ret
pushf
jmp
ffree
push
cmp
xchg
shl
and
fistp
pop
outs
int3
jo
rcl
dec
(bad)
jle
movs
inc
mov
retf
mov
in
mov
mov
xchg
movlps
push
daa
pop
dec
cmp
push
paddusw
retf
stc
in
imul
or
push
aas
jp
addr16
jo
sti
add
push
imul
sub
inc
out
sbb
sbb
inc
wrmsr
ret
pushf
fbstp
or
sub
fucom
adc
mov
ror
xchg
xchg
xchg
push
outs
mov
jne
xchg
outs
(bad)
mov
inc
(bad)
fisub
pop
outs
jns
sahf
stos
jg
sbb
loope
fld
dec
es
scas
sbb
iret
lods
(bad)
jnp
cld
push
cmc
or
push
loop
out
mov
add
mov
mov
jb
mov
retf
pop
xchg
mov
ret
cmp
push
imul
jl
outs
addr16
fnstcw
or
push
aas
add
js
adc
sahf
ror
xchg
xchg
mov
aad
int
cmp
push
sbb
mov
xor
mov
movs
xor
pop
and
clc
arpl
cdq
dec
dec
es
(bad)
adc
test
and
jl
pcmpeqb
dec
pop
(bad)
rcl
xchg
fdiv
xchg
sar
icebp
jmp
bndldx
retf
cmp
nop
fisub
call
mov
jge
mov
adc
jecxz
sub
lds
mov
cmp
ss
invd
adc
inc
cmps
js
in
push
sub
adc
aam
mov
iret
iret
mov
or
xchg
add
popa
mov
pop
push
aaa
add
pop
xor
inc
loop
les
dec
call
cdq
daa
adc
push
scas
or
add
or
mov
ins
pop
cmps
(bad)
out
pop
inc
jmp
push
xchg
xchg
loop
(bad)
adc
sub
mov
adc
lock
cs
fisttp
rcl
das
mov
icebp
mov
test
and
mov
mov
scas
jb
add
sub
sti
popf
dec
jmp
in
aaa
cmp
inc
mov
mov
ror
sbb
lahf
or
sub
scas
das
pop
jge
mov
mov
jmp
xchg
stos
ins
ret
add
cmc
jge
mov
mov
neg
(bad)
cmp
sbb
mov
xchg
pop
pop
xor
mov
cmc
and
xchg
or
jno
mov
call
or
neg
mov
leave
mov
pusha
nop
jmp
(bad)
adc
ret
xor
push
xchg
mov
adc
mov
sbb
test
fidivr
aaa
mov
addr16
lods
push
mov
or
dec
es
mov
int
push
mov
fbstp
imul
out
push
stos
jge
mov
jae
in
add
leave
adc
xchg
jle
lock
stos
sub
xlat
mov
adc
inc
mov
xchg
cld
cli
push
or
out
sbb
bound
in
not
xor
in
(bad)
loope
and
dec
lods
cwde
fs
fisubr
mov
nop
sti
loopne
mov
cdq
push
lahf
sub
push
movs
adc
pusha
add
inc
cmp
pop
aas
push
out
ins
ds
pop
ins
popf
dec
outs
iret
int3
mov
movs
sub
push
xchg
in
pop
sar
mov
and
dec
fs
or
test
neg
lea
and
or
bt
lods
stc
cmps
daa
and
jp
mov
not
push
xor
push
data16
xor
mov
add
xor
jecxz
jp
dec
lods
leave
mov
dec
adc
xlat
hlt
sbb
int3
fimul
stos
in
sub
dec
stos
jge
loop
stos
or
enter
and
fimul
jnp
sub
push
add
mov
mov
pop
add
xchg
xor
ror
or
shl
xchg
ret
cmc
js
sub
leave
movs
pop
lds
push
daa
ret
mov
rcl
dec
push
in
fild
cmp
push
js
sbb
call
sbb
not
imul
adc
daa
enter
sub
rcl
xlat
push
mov
inc
jo
fisub
xchg
jmp
sahf
(bad)
imul
jnp
mov
mov
and
ds
call
xlat
ret
out
clc
inc
out
dec
aam
ret
push
pop
fldcw
in
cdq
xor
ins
pop
in
aas
mov
xlat
(bad)
shr
lahf
xor
mov
pause
ret
sub
sub
fs
cld
inc
stos
pop
add
push
gs
cmp
ins
test
sub
mov
add
adc
push
mov
movs
int3
fnstsw
ins
mov
jl
aam
and
cmp
fs
ror
lahf
sub
daa
loope
push
ror
jmp
mov
call
mov
inc
in
cmps
jge
call
push
add
xor
inc
aaa
push
ja
inc
jmp
add
lahf
xchg
in
add
add
mov
js
gs
scas
add
mov
stos
push
(bad)
aad
(bad)
loopne
int3
xchg
scas
test
fwait
in
inc
idiv
sbb
jnp
(bad)
test
xor
stos
sub
mov
push
jnp
test
fist
mov
inc
add
mov
ds
int
inc
mov
gs
sub
sbb
aam
cmps
jle
movs
push
or
xchg
hlt
mov
rep
xor
xchg
jno
mov
stc
push
xchg
xchg
add
push
scas
adc
jns
lods
sbb
xchg
jb
jmp
cmc
push
mov
push
pusha
mov
push
xor
mov
mov
xchg
(bad)
movs
dec
xchg
sar
mov
outs
mov
mov
cmpxchg
mov
test
cwde
cmovs
stos
push
push
push
cld
dec
xor
int3
add
add
jbe
data16
dec
xor
jmp
enter
or
mov
les
xchg
pop
aas
cmp
ret
sub
cld
mov
dec
push
fst
sti
rol
inc
ret
cld
fidivr
mov
adc
and
mov
xchg
lods
mov
push
cmp
add
push
ror
mov
adc
push
fimul
add
pop
je
ret
mov
inc
push
fsubr
xor
pop
add
mov
lea
movs
push
adc
pushf
out
push
jge
xor
(bad)
fisttp
add
xchg
sub
ficom
(bad)
sbb
jae
add
or
stos
sar
mov
dec
pop
pop
enter
pop
scas
ret
rol
aad
mov
ja
push
mov
sub
stos
mov
lock
and
mov
mov
int
push
sbb
ss
aam
fsub
push
cld
popf
push
inc
sbb
(bad)
sub
or
dec
mov
ins
mov
mov
pop
lahf
jo
add
enter
cld
jbe
out
sbb
jg
xlat
jmp
in
jle
out
sub
sub
nop
jns
mov
fwait
jle
mov
jp
test
mov
dec
leave
add
inc
mov
nop
(bad)
test
scas
cmp
sbb
inc
jnp
mov
jae
fidivr
les
push
xchg
data16
popf
xor
gs
iret
bnd
cli
ja
xchg
xchg
aaa
xor
out
push
cmc
enter
in
ret
inc
push
mov
jp
cmp
jmp
inc
call
pop
loop
mov
int
rol
inc
mov
mov
loope
lahf
or
mov
dec
xchg
adc
cmp
les
add
mov
xor
jae
mov
ja
dec
cld
push
das
and
in
push
int
mov
cwde
and
inc
push
mov
loopne
aaa
aad
out
pop
add
add
and
aam
sbb
in
popa
shl
dec
cli
mov
in
or
cwde
rcl
stos
daa
dec
or
dec
dec
(bad)
fs
mov
push
rol
data16
push
call
jge
dec
xor
mov
rol
or
dec
cmp
pop
dec
xlat
sub
and
mov
dec
pop
push
sbb
mov
jb
mov
dec
scas
out
das
sbb
pop
fsubr
daa
xchg
rcl
fstp
sub
lahf
mov
icebp
sahf
pop
in
add
ja
out
fnstsw
cmp
inc
test
dec
iret
dec
fcomi
rcr
jb
add
sbb
jl
stos
bound
iret
dec
mov
adc
mov
or
jle
and
mov
mov
jp
mov
inc
sbb
cwde
cmp
(bad)
and
fistp
mov
(bad)
and
clc
hlt
ss
stos
push
sahf
or
adc
out
mov
leave
ret
cmp
add
sbb
or
xor
stos
data16
inc
or
gs
loopne
inc
je
cwde
test
mov
data16
and
pusha
(bad)
fist
or
in
xor
aad
sub
pop
sub
inc
jmp
mov
loopne
daa
pop
fbstp
(bad)
mov
in
mov
xchg
jno
lods
lea
or
bnd
mov
inc
popf
fs
cmp
jbe
mov
push
(bad)
xchg
push
clc
and
data16
pop
das
cmc
push
jne
xor
pop
cdq
and
push
shl
ret
addr16
xor
popf
aam
jnp
(bad)
clc
imul
or
stos
xor
std
jp
hlt
retf
popf
fs
xor
xchg
lea
popa
push
imul
test
not
loopne
xor
out
ins
lea
sub
fcmovnbe
xchg
data16
xchg
shl
hlt
movs
mov
jecxz
inc
pop
or
xchg
xchg
setno
push
loopne
jno
pop
or
ja
xchg
shr
jbe
shr
sub
sti
pop
retf
or
pop
pop
ret
(bad)
fstp
aaa
xor
fld
clc
jle
or
mov
and
inc
xchg
sub
and
in
sahf
fwait
loope
cmp
and
mov
aaa
sbb
lock
mov
loope
ins
jnp
dec
cmc
jle
dec
ficom
lods
repnz
jmp
retf
sbb
in
sti
sub
cli
(bad)
cld
mov
loopne
popf
and
cli
leave
stc
test
das
jge
repz
(bad)
xchg
sti
js
imul
test
imul
adc
push
cmp
or
or
mov
xchg
cmp
inc
xor
sbb
mov
sbb
pop
xchg
xchg
inc
pushf
loopne
ret
loop
dec
js
jb
sub
in
bound
and
loopne
scas
clc
clc
mov
das
mov
std
mov
std
push
idiv
(bad)
(bad)
mov
inc
(bad)
jne
sub
and
mov
pop
mov
or
push
cmps
or
addr16
push
mov
mov
jmp
lea
rcr
repnz
and
cdq
nop
outs
jg
or
call
push
push
jno
push
popa
pop
push
push
cmp
arpl
cwde
jo
enter
imul
push
scas
sub
add
adc
data16
test
sub
mov
idiv
and
push
stc
stos
mov
cmp
jbe
outs
(bad)
imul
scas
pop
push
retf
pop
or
iret
push
test
scas
lock
repnz
int
dec
sbb
in
cmps
iret
inc
cmp
push
xlat
cmp
cmp
jecxz
and
or
jp
dec
mov
inc
shr
int3
loop
cdq
cvtpi2ps
mov
ins
and
ret
mov
movs
push
outs
inc
stc
jp
aas
xchg
cmp
rol
aaa
mov
stc
or
lods
mov
cdq
cli
int
inc
stos
jge
in
pop
adc
xor
es
jns
stc
popa
lods
(bad)
mov
jb
popa
inc
xchg
and
fsub
stos
sti
add
popa
push
add
je
(bad)
cli
sub
rol
test
loope
mov
xchg
out
pusha
sbb
cmc
jmp
add
inc
fisubr
es
pop
lods
sub
mov
jns
fucom
(bad)
(bad)
inc
xchg
xchg
aad
add
rcl
sub
fwait
sti
scas
or
or
nop
cmp
cmp
jae
and
sub
pushf
or
in
femms
fimul
jmp
test
adc
clc
cdq
mov
pop
(bad)
out
in
jnp
jl
dec
push
lahf
fild
cmp
or
cwde
call
jns
fwait
stos
cmc
test
pop
adc
xchg
es
jge
js
push
jno
cmp
ja
stos
lea
jmp
push
cmp
cmp
or
sbb
lahf
xchg
dec
jecxz
and
push
jp
mov
stc
aas
mov
(bad)
mov
jne
jl
cmp
dec
test
mov
movs
sbb
jge
inc
jecxz
cli
leave
imul
mov
femms
imul
mov
xchg
aad
pop
(bad)
outs
mov
inc
arpl
call
jl
sbb
inc
stos
mov
xchg
(bad)
jecxz
push
loop
xchg
jmp
sub
(bad)
in
icebp
push
nop
test
movs
pop
ret
jmp
jno
mov
dec
add
ret
or
mov
push
imul
jmp
retf
cmp
xchg
popf
push
test
push
jg
cmp
stos
cmc
gs
addr16
cld
out
cmp
ins
jge
jmp
jno
push
xchg
imul
ss
or
push
sti
dec
aad
les
pop
pop
ja
les
ins
mov
arpl
xchg
inc
push
ret
sub
cmc
dec
dec
mov
add
mov
out
je
add
retf
clc
dec
mov
mov
sub
hlt
or
jbe
or
dec
repz
lahf
(bad)
in
mov
jmp
or
mov
retf
ds
mov
add
repnz
xchg
cmps
lea
iret
movs
mov
mov
pusha
mov
fnstcw
mov
xor
xchg
mov
dec
adc
(bad)
sub
and
popa
xchg
cmps
xchg
ds
(bad)
push
adc
je
sub
fisttp
(bad)
inc
push
xchg
lock
sub
mov
jbe
cld
ss
sub
daa
bound
pop
daa
pop
fist
jg
mov
or
in
xor
mov
xchg
scas
outs
bound
fidiv
pop
push
gs
cs
cwde
lea
stos
push
inc
mov
fisubr
cmp
out
pop
aad
aam
clc
add
call
popa
dec
push
add
outs
icebp
jl
rol
scas
fisub
mov
out
xlat
mov
mov
sbb
mov
repz
jg
xor
popa
(bad)
mov
sub
sbb
aaa
out
xchg
fild
or
sub
dec
gs
sbb
adc
pop
lahf
mov
sub
jmp
mov
and
sub
jne
mov
(bad)
jl
dec
sub
imul
(bad)
cmp
dec
jmp
mov
rol
sbb
sti
pop
(bad)
cld
out
xchg
cmp
jno
pop
pop
iret
xchg
cmp
stos
mov
fld
scas
jg
xor
test
jns
stos
xchg
and
daa
mov
std
mov
xchg
inc
aaa
jmp
push
es
pop
push
call
pop
neg
xlat
adc
int3
imul
out
inc
push
call
sbb
push
dec
fmul
mov
cmps
fnstsw
test
int3
sub
pop
jb
adc
mov
shl
sub
icebp
mov
dec
dec
pop
fcom
xor
dec
inc
(bad)
dec
pop
fstp
pop
mov
or
add
sbb
es
or
adc
xchg
int3
add
pop
xchg
sbb
icebp
in
mov
outs
test
fwait
(bad)
push
add
pushf
mov
call
out
fsub
in
mov
jmp
pop
daa
aam
jo
mov
rol
push
in
pop
jle
add
ret
or
rcr
mov
je
clc
dec
sub
aaa
or
push
push
dec
jl
nop
mov
retf
jnp
cmp
sbb
jecxz
add
jecxz
gs
add
scas
inc
xchg
iret
scas
int3
movs
aas
lds
xchg
sti
or
mov
dec
addr16
adc
popf
inc
imul
icebp
jecxz
iret
fld
stos
repnz
sub
push
(bad)
rol
loopne
xchg
jbe
(bad)
aam
xchg
nop
jbe
mov
cmc
and
mov
cs
daa
jmp
jle
pop
outs
sub
fcom
out
(bad)
lds
in
outs
add
popf
push
lea
pop
sbb
adc
frstor
sub
stos
xchg
and
lahf
pop
pop
call
pop
cmp
inc
pop
or
inc
pop
pop
dec
push
vaddsubps
fstp
sti
std
mov
fidiv
movs
sub
loop
neg
loope
mov
mov
fimul
ja
push
lods
pop
add
mov
add
ret
inc
out
and
push
push
call
pop
add
mov
dec
sub
adc
sub
test
jg
scas
push
fsubr
ins
ficomp
call
sbb
ins
adc
sbb
fs
dec
mov
jle
cdq
das
(bad)
mov
lahf
adc
out
popa
outs
addr16
vpmovm2b
push
aam
popf
es
jb
or
push
cmp
fldln2
callw
mov
adc
int
lahf
stc
pop
je
call
popa
(bad)
aad
mov
out
or
pushf
lahf
inc
daa
inc
push
cld
div
or
push
mov
adc
adc
dec
lds
mov
dec
fistp
or
cmps
icebp
aaa
xchg
js
push
test
je
addr16
mov
test
push
js
jmp
loop
fnstenv
imul
iret
inc
ja
addr16
pop
nop
mov
jo
push
aam
sub
popf
sub
imul
stos
xchg
pop
xor
aam
stc
add
jne
ss
pop
(bad)
nop
cdq
mov
cmp
out
ss
jp
jecxz
or
xor
aam
cmps
out
and
pop
mul
mov
shl
push
cmps
data16
hlt
push
pop
scas
push
(bad)
jmp
mov
cmps
add
retf
rcl
adc
mov
pusha
lods
in
jp
xchg
pop
movs
sahf
push
xchg
ja
sbb
add
les
adc
push
lea
dec
(bad)
sahf
out
shr
into
mov
sub
jnp
mov
mov
popa
lea
fs
fmul
in
dec
pop
hlt
int3
fadd
push
xchg
adc
mov
push
popa
ret
push
sbb
aas
ss
inc
mov
cdq
lods
sbb
adc
mov
jno
cld
js
xchg
mov
mov
lahf
test
sub
mov
xchg
stc
loope
sub
dec
fcmovbe
out
inc
movs
rcr
jae
mov
pop
mov
sar
jb
cmc
inc
scas
in
movs
jmp
pop
cld
sbb
js
in
shl
fisttp
data16
dec
pop
pop
push
outs
pop
dec
jmp
xchg
das
sbb
in
mov
sub
push
pop
pop
out
loop
leave
stos
mov
xor
adc
add
icebp
jl
(bad)
jmp
pop
jae
(bad)
mov
daa
lea
xchg
lds
push
push
cmp
aas
sbb
sub
sub
xchg
in
sub
dec
popf
cmp
mul
aam
ds
mov
push
adc
push
enter
dec
cdq
and
jecxz
jne
cdq
and
rcl
mov
call
icebp
push
out
xchg
cmps
xlat
cmp
and
mov
(bad)
movs
xor
in
cmps
jp
or
and
pusha
cmps
adc
iret
rcr
mov
add
cmp
aas
test
mov
hlt
or
mov
mov
add
mov
rcl
and
or
mov
lods
xchg
popa
jp
repnz
mov
jp
into
and
mov
test
cmp
stos
bound
adc
mov
out
pop
ffree
imul
dec
cmc
cmp
scas
fist
pop
das
add
pop
xlat
push
iret
dec
or
xchg
retf
inc
(bad)
mov
jns
adc
jecxz
xchg
rol
inc
mov
pusha
push
gs
out
inc
fst
lods
jmp
es
add
mov
(bad)
pop
sbb
hlt
jns
pop
adc
mov
imul
xor
scas
mov
adc
(bad)
and
mov
mov
pushf
dec
repnz
leave
add
xchg
pop
sbb
mov
mov
test
test
mov
pop
sbb
jp
ds
mov
dec
mov
icebp
retf
cmp
jecxz
inc
and
jbe
test
mov
out
pop
and
adc
test
ss
repz
rcr
retf
enter
dec
int3
leave
dec
pusha
movs
and
aad
push
xor
sti
ror
cmp
outs
call
mov
out
cmc
imul
ficomp
lahf
jl
test
retf
sbb
ins
pop
mov
mov
stc
sti
repz
xlat
or
test
inc
movs
mov
sbb
xor
loop
and
pop
sbb
add
dec
ret
jecxz
aas
leave
bswap
ins
mov
out
push
stc
xchg
push
sbb
aaa
cmps
xor
adc
fadd
cmp
adc
jnp
(bad)
push
das
out
cdq
mov
(bad)
int3
fs
xor
push
daa
ret
bnd
retf
xor
(bad)
xlat
ror
es
mov
lahf
jl
or
movs
ja
inc
and
cmps
(bad)
addr16
dec
push
mov
dec
cdq
add
xchg
xor
jns
stc
orps
jmp
fld
jmp
xlat
icebp
in
push
ja
ins
inc
imul
loope
clc
test
outs
mov
push
or
jg
jmp
sub
fwait
xchg
mov
cmp
fcmove
mov
call
into
or
push
cli
sub
ja
jl
add
push
dec
mov
jb
icebp
mov
dec
xchg
jecxz
inc
cmps
add
gs
xchg
ror
push
mov
push
rcr
push
jae
push
xchg
pop
ror
or
xchg
mov
mov
test
out
(bad)
idiv
cmp
enter
jbe
ds
popa
(bad)
call
icebp
inc
into
ins
push
outs
xchg
mov
(bad)
retf
ret
xchg
leave
mov
inc
inc
add
mov
add
inc
push
into
out
cmps
push
div
xlat
cmp
jb
imul
mov
mov
out
push
call
mov
in
mov
xchg
outs
inc
or
jae
call
mov
dec
cmps
sbb
cmps
cld
lea
jg
nop
jo
mov
dec
cmc
bnd
lahf
cmc
addr16
mov
dec
rep
and
cs
and
mov
loopne
or
das
jb
int
enter
push
push
(bad)
(bad)
push
or
icebp
sub
imul
fwait
js
imul
cld
mov
retf
jo
jns
daa
dec
mov
bswap
xchg
ret
arpl
xchg
mov
fcomp
daa
xchg
cmp
cmovo
sbb
cmps
pop
pop
cmp
in
dec
xlat
mov
and
sub
stos
add
ret
or
enter
and
out
imul
sti
push
repz
test
jmp
sub
inc
gs
or
daa
loope
push
mov
daa
or
out
xchg
out
cmp
push
add
jmp
mov
dec
push
test
cmp
addr16
jge
push
add
cld
lahf
jne
sbb
pop
shl
fwait
xor
xor
mov
mov
dec
sahf
arpl
in
mov
mov
push
je
push
ja
outs
sbb
aaa
dec
(bad)
popa
push
pop
push
iret
je
aam
dec
and
xchg
ss
xchg
das
outs
sub
call
or
movs
adc
or
and
xchg
inc
mov
retf
adc
mov
cli
jmp
jb
rcl
fild
jnp
imul
dec
test
imul
stos
or
cmc
in
scas
add
push
pop
mov
(bad)
pusha
or
addr16
addr16
jbe
jo
retf
cli
(bad)
rcl
call
les
inc
jecxz
imul
sbb
xchg
adc
in
push
cdq
inc
or
pop
lea
push
lock
stos
in
test
and
leave
add
push
add
mov
ftst
adc
jns
addr16
push
jbe
cmp
cmc
xor
in
and
nop
ror
outs
mov
mov
aaa
or
inc
mov
mov
xchg
adc
add
movs
ja
repnz
call
js
mov
mov
mov
sbb
jmp
shl
ds
and
hlt
(bad)
je
cli
out
push
xor
jl
das
adc
fldcw
movs
pop
int
mov
sbb
mov
mov
jmp
(bad)
lods
xchg
mov
pop
push
and
sub
add
ins
adc
hlt
sti
(bad)
in
paddb
ja
and
call
mov
hlt
push
mov
mov
addr16
adc
adc
fild
gs
mov
pop
cli
shl
dec
cmps
jo
dec
ss
mov
mov
sahf
jmp
xchg
ret
dec
cmp
addr16
js
or
imul
jbe
inc
add
cmc
int3
ficom
and
movs
lea
jp
mov
fistp
adc
and
or
repz
fiadd
or
sbb
xor
fs
xchg
adc
test
fdiv
or
das
and
fadd
(bad)
mov
(bad)
and
xchg
fdivr
sti
in
mov
stos
sar
inc
clc
pop
and
loope
adc
ficom
repnz
fndisi(8087
arpl
mov
pop
pop
xchg
jmp
jl
pop
dec
sbb
adc
jo
add
sbb
movs
retf
daa
push
stos
stos
dec
mov
in
in
into
retf
fdiv
(bad)
jmp
(bad)
mov
or
dec
jne
dec
scas
dec
stc
push
pop
mov
imul
rcr
dec
into
scas
mov
pop
out
sub
xchg
jle
xlat
push
add
mov
loopne
add
cmps
sbb
pop
push
dec
addr16
mov
dec
imul
outs
mov
sbb
jl
sub
fadd
imul
sbb
scas
add
xchg
mov
cs
lods
outs
adc
mov
fisub
scas
pop
nop
pop
popa
das
jge
dec
neg
mov
push
mov
ins
adc
or
xchg
push
dec
xor
pusha
push
add
add
sar
mov
fidiv
mov
fmul
mov
sub
out
(bad)
or
xchg
call
dec
jl
sub
out
add
or
and
dec
loop
shr
rcl
cmps
xchg
call
mov
ss
sub
cmp
repnz
push
lods
pop
js
push
jmp
mov
icebp
or
rcr
adc
adc
jle
repnz
push
push
push
out
pop
(bad)
jo
lods
pop
add
dec
pop
inc
xor
lods
and
and
aas
dec
ret
stc
arpl
std
adc
xchg
(bad)
adc
cmp
scas
arpl
arpl
int
loop
dec
pop
sub
imul
lea
inc
and
or
jns
(bad)
aam
cmps
movs
in
inc
movs
daa
mov
cmps
jae
and
adc
popa
push
test
jmp
sbb
call
cmps
or
and
retf
add
inc
fsub
ins
mov
push
xor
cwde
inc
xchg
imul
(bad)
dec
int3
js
inc
jnp
lds
xchg
add
xor
sub
pop
fmul
cmc
adc
bound
not
inc
or
or
enter
xor
rol
mov
ffree
stos
cdq
cmp
and
mov
cmp
dec
and
mov
cmp
aaa
test
dec
(bad)
and
retf
out
mov
jmp
stos
sbb
loopne
xchg
push
gs
inc
test
(bad)
xor
rcl
cwde
stos
movs
and
ficom
adc
das
mov
fsubp
inc
out
inc
xlat
dec
inc
add
(bad)
push
je
sub
(bad)
xlat
push
xchg
inc
mov
(bad)
jmp
or
push
call
repnz
fld
fwait
mov
mov
mov
jbe
cdq
pop
add
inc
(bad)
jecxz
pop
popf
movs
sbb
push
test
add
ret
mov
jle
jne
mov
lahf
jno
fmul
mov
and
xchg
xchg
shl
inc
fimul
xor
xchg
jge
mov
push
adc
lea
adc
cmps
cwde
(bad)
popf
jmp
sar
into
lock
pop
stc
push
push
aaa
cmp
sub
push
add
iret
jns
cmps
adc
fnstcw
or
lahf
mov
adc
mov
xlat
sbb
push
(bad)
cld
pop
inc
push
fs
or
jo
lods
call
cmp
pop
data16
sbb
jmp
mov
in
test
sbb
mov
cmps
out
jmp
push
rol
and
sub
je
dec
das
dec
xchg
inc
fmulp
cmps
iret
mov
push
retf
xor
xchg
mov
push
sbb
mov
fs
mov
or
jb
mov
mov
xor
xor
jnp
jl
movs
out
es
nop
ja
js
add
adc
push
mov
pop
js
iret
jl
pusha
retf
add
push
sbb
idiv
cli
lea
dec
push
and
jle
mov
sti
mov
pop
and
cs
bound
int3
ja
or
push
adc
xor
xchg
and
(bad)
xchg
mov
jo
jmp
jmp
xor
sbb
aaa
pop
ins
cmps
aaa
add
xchg
jno
lea
push
(bad)
bound
or
movs
cmp
das
fs
add
push
cli
push
in
adc
push
imul
mov
scas
imul
into
pop
add
call
das
cmp
adc
adc
(bad)
test
jge
sub
lock
imul
sbb
mov
nop
xchg
adc
mov
repz
add
loopne
aad
scas
mov
dec
arpl
jmp
or
retf
adc
or
adc
cmps
fidivr
mov
jle
jmp
cmp
mov
jge
idiv
dec
jp
add
push
xchg
movs
ja
repz
sbb
test
sbb
dec
cmps
gs
mov
fstp
arpl
mov
mov
call
mov
inc
(bad)
and
in
sar
dec
xor
or
and
bound
in
lock
dec
movs
jmp
ss
fidivr
out
xchg
(bad)
cmp
pop
dec
xor
cli
jno
sub
ins
xor
retf
pop
inc
mov
mov
adc
mov
adc
les
rcl
or
cmp
ret
dec
int3
xchg
dec
dec
(bad)
adc
outs
cli
ror
call
sub
mov
mov
xchg
push
xor
cdq
das
(bad)
loopne
stos
jnp
stos
data16
rcr
rcl
xor
sub
or
push
jmp
popf
je
outs
ins
and
xlat
xlat
jne
inc
retf
stos
add
(bad)
ds
out
xchg
es
cmp
in
shl
je
mov
cld
dec
not
mov
js
(bad)
(bad)
ins
test
and
rcr
rcr
push
or
mov
dec
mov
ins
int
cwde
loopne
mov
stc
mov
add
push
vandpd
dec
jle
jae
in
stos
mov
mov
lods
rep
jne
sbb
xchg
es
jl
inc
loop
xor
lods
dec
or
test
in
not
push
dec
lahf
adc
aas
rol
arpl
jnp
push
or
xor
xchg
mov
jmp
mov
cbw
xor
push
not
lea
les
jmp
xor
je
mov
cmp
cs
(bad)
adc
scas
hlt
cwde
into
inc
ret
cmp
jl
inc
push
mov
mov
inc
mov
int3
xchg
xlat
shl
mov
cmps
lods
or
arpl
inc
sbb
cmps
sbb
or
bound
arpl
cmp
xor
in
in
xor
xchg
loopne
ins
fdivr
or
imul
mov
mov
bound
or
or
mov
test
ret
sbb
hlt
ss
adc
fcom
scas
pop
dec
fistp
jmp
pop
sbb
rcl
mov
sar
ins
jl
dec
idiv
fwait
push
or
int3
jl
push
shl
mov
inc
xor
and
and
shl
rcr
push
fwait
adc
sbb
and
add
(bad)
nop
sub
adc
mov
adc
stos
and
movs
jle
es
jmp
aad
outs
mov
add
ss
add
cs
add
enter
test
jno
movs
outs
pop
cli
aad
and
xor
sub
in
retf
test
xor
ss
jae
lods
gs
mov
rcl
add
pop
cmp
in
dec
test
fst
mov
cmp
test
cmp
pop
std
cmps
jns
xchg
inc
out
test
mov
xchg
in
ret
inc
or
cmp
xor
xchg
leave
cmp
out
or
and
fdivr
mov
xor
icebp
or
cmp
dec
pop
cwde
mov
(bad)
test
ret
push
dec
sub
jmp
xchg
loopne
es
mov
or
into
push
mov
pop
pop
ins
mov
ins
jle
cwde
adc
mov
xchg
lods
gs
fidivr
add
add
cmps
pop
push
es
and
repz
das
pop
inc
std
(bad)
mov
lods
sti
mov
push
mov
sub
sub
(bad)
lahf
jbe
jno
push
stos
xor
push
jne
dec
adc
rcr
mov
aam
mov
adc
fisttp
aaa
sbb
iret
push
mov
fwait
rcr
sbb
xchg
push
pushf
(bad)
mov
ret
lock
inc
call
xchg
jb
mov
imul
into
mov
fwait
inc
push
in
ja
fld
jnp
fcomp
mov
and
add
cmps
inc
sub
fs
cs
jg
dec
mov
icebp
mov
fstp
loop
aam
xor
sbb
icebp
fidiv
jmp
add
cmp
data16
push
pop
ror
outs
pop
iret
jmp
xchg
push
out
aaa
cmps
sbb
(bad)
lock
out
push
jo
sub
repnz
or
sub
iret
cmp
movs
mov
sub
movs
lahf
data16
retf
adc
push
push
sahf
call
fsub
add
mov
jecxz
xchg
fnstsw
inc
stos
ins
fimul
lods
dec
mov
dec
out
dec
jmp
std
mov
out
push
xchg
xor
enter
pop
aad
bound
(bad)
stc
or
push
mov
and
iret
mov
dec
or
scas
(bad)
sub
pop
add
push
arpl
clc
xor
mov
sbb
pop
push
push
push
data16
or
sahf
add
je
cmp
enter
sbb
sar
cmp
call
pop
rol
sub
xor
ds
call
jmp
push
daa
loop
mov
cmp
lahf
mov
jmp
ds
out
sbb
jmp
mov
pop
or
setbe
push
retf
inc
imul
adc
mov
cs
mov
int3
jbe
aaa
das
xor
movs
mov
out
sub
loop
(bad)
int3
adc
pop
ds
not
jp
lods
nop
stc
fs
mov
lds
std
sub
out
mov
dec
call
int
and
cli
shr
scas
pop
push
(bad)
cmp
not
iret
mov
enter
fs
ficomp
inc
(bad)
and
xchg
add
mov
fistp
test
das
ss
out
ins
pop
pop
sar
stos
jo
test
mov
ficomp
outs
cmp
or
loopne
cmp
pop
shl
aam
daa
aas
in
call
rcr
das
cdq
in
out
lods
dec
jne
mov
xor
lds
cmp
sbb
cmp
mov
pop
pop
push
neg
and
jmp
push
pop
inc
cmps
push
adc
cmp
pop
clc
mov
jl
add
scas
std
mov
imul
and
movs
aam
imul
inc
sub
out
and
rol
xchg
mov
or
push
sbb
pop
push
ss
(bad)
push
rol
fstp
out
cmp
in
aaa
shr
inc
fmul
lods
cmp
dec
aaa
popa
(bad)
jnp
mov
ds
cmp
(bad)
lock
dec
push
dec
shr
je
mov
dec
push
mov
sub
(bad)
div
jmp
fst
stos
jge
mov
add
xor
ins
jge
lea
lds
add
xchg
lea
adc
fidiv
inc
call
jp
lea
loop
das
xchg
xlat
mov
or
ins
and
fld1
sbb
and
push
retf
mov
dec
mov
inc
retf
xchg
add
ins
lock
pop
adc
mov
mov
xor
push
adc
outs
cmp
scas
fsubr
pop
movs
fcom
jno
mov
xchg
jg
push
ja
lock
dec
cmc
push
int
out
aam
dec
and
xchg
mov
pushf
out
jbe
movs
xchg
pop
test
mov
test
xchg
ins
mov
mov
and
push
xlat
outs
adc
stos
jle
gs
pop
xchg
jns
ins
shl
imul
jle
data16
push
xchg
push
sub
inc
mov
jge
mov
(bad)
xchg
jno
rol
pop
hlt
mov
test
mov
push
je
xchg
xor
inc
pushf
pop
(bad)
xchg
cli
imul
push
in
pop
fst
xor
cmp
xchg
test
nop
(bad)
mov
(bad)
jmp
int3
inc
in
dec
test
fstp
xchg
lock
es
popf
sub
repz
mov
or
clc
popa
jle
scas
and
inc
xchg
adc
dec
in
js
pop
mov
aam
mov
out
fist
jno
mov
cld
mov
mov
outs
aam
cwde
xor
cmp
je
cld
xchg
bnd
clc
dec
push
out
push
jmp
aam
inc
xor
dec
pusha
or
cli
(bad)
idiv
inc
ins
jae
es
inc
xchg
lock
cwde
vandps
gs
out
sar
jnp
pop
(bad)
cdq
outs
jo
ins
pop
or
int
cmp
adc
inc
or
scas
inc
daa
ins
jae
fsubr
enter
jno
lods
les
sub
fdivr
in
or
lods
mov
adc
dec
outs
imul
mov
scas
sub
popf
out
dec
repz
addr16
jle
mov
inc
push
retf
mov
or
pop
inc
mov
pop
fistp
dec
dec
fnsave
jg
or
scas
jge
popa
adc
scas
mov
mov
inc
or
lea
and
adc
xlat
cmp
retf
add
mov
fisttp
arpl
push
xor
adc
pop
and
xchg
mov
dec
jae
push
mov
pop
in
enter
mov
cmp
xlat
arpl
leave
je
adc
adc
inc
dec
push
dec
mov
ror
ret
xor
and
ror
je
dec
sub
sahf
sar
jae
out
ret
(bad)
sub
xor
(bad)
push
out
xchg
fild
call
in
ficom
jecxz
sub
mov
mov
ins
jle
jg
dec
in
in
and
aaa
push
cld
mov
jge
les
and
and
xchg
jmp
push
scas
jle
popf
mov
xor
je
xlat
cli
xor
fwait
movs
pop
dec
jmp
xor
das
dec
mov
dec
sub
mov
fwait
shl
mov
inc
and
mov
retf
fs
mov
mov
out
pop
sti
cmps
call
mov
adc
adc
test
retf
push
inc
ins
add
dec
jge
mov
jb
shl
jno
outs
mov
out
ret
retf
sbb
and
add
jne
mov
jmp
lock
xchg
jo
in
or
or
inc
(bad)
imul
cdq
out
cs
loop
out
mov
adc
add
xor
adc
xor
hlt
jo
outs
cmp
adc
pop
inc
adc
arpl
cmp
inc
push
xor
mov
and
fs
ret
push
test
ret
or
icebp
loop
shr
push
outs
shr
and
push
call
push
jae
adc
and
ds
in
mov
stc
xor
sbb
pop
inc
pop
xchg
sar
adc
add
xor
sbb
or
stos
pop
(bad)
clc
and
scas
retf
je
test
lock
inc
fucomp
push
in
pushf
and
mov
(bad)
fisttp
xchg
jmp
xchg
inc
pop
mov
xor
dec
lock
xchg
scas
sbb
push
mov
(bad)
in
stos
shl
mov
push
or
idiv
adc
loopne
loope
adc
scas
rcr
adc
jo
jle
mov
dec
imul
cdq
sbb
sbb
popf
(bad)
in
jbe
aas
push
dec
add
or
mov
and
stc
sub
pop
sbb
xor
xchg
push
jg
xor
mov
imul
mov
jge
cmp
push
mov
(bad)
cld
mov
dec
sub
and
ret
mov
ss
fyl2x
lds
push
stos
fs
imul
or
lahf
out
mov
or
repz
stos
lds
jbe
in
frstor
mov
jns
sbb
popf
and
call
lock
repnz
mov
pop
mov
dec
push
(bad)
sub
(bad)
ss
fld
lahf
scas
push
not
fs
jae
xor
jns
or
test
daa
scas
sub
xor
sub
mov
les
addr16
xchg
popa
sbb
fmul
(bad)
mov
out
xor
hlt
xchg
fld
inc
lods
and
and
cmp
cs
pop
adc
mov
fs
xor
push
sbb
aaa
ror
ror
push
jmp
or
shr
cld
outs
add
dec
push
sbb
sub
sub
and
dec
aaa
xchg
mov
cmps
jne
cld
and
xchg
or
inc
out
pop
clc
sub
xchg
repnz
ret
sub
adc
cmp
jmp
movs
mov
mov
xor
pop
mov
mov
arpl
cmp
add
inc
mov
jmp
inc
lods
xchg
push
clc
sahf
inc
inc
call
mov
push
daa
mov
aad
into
pop
out
in
jecxz
outs
sub
sahf
sti
movs
pop
sti
xor
sbb
mov
dec
or
adc
cld
cmp
stos
push
or
sub
xor
ds
out
sub
stc
out
in
dec
cmp
jg
inc
test
fwait
xchg
jb
push
fmul
sti
sahf
jo
cmp
cld
xlat
add
imul
jge
fs
imul
and
rcr
add
test
ficom
mov
sar
pop
fisubr
cli
pop
jno
nop
in
dec
jb
cmp
and
(bad)
add
rcl
jne
data16
das
and
pop
imul
pop
enter
mov
inc
mov
and
cdq
push
and
cwde
std
cmps
imul
mov
inc
sbb
std
pusha
cmp
dec
dec
rol
dec
push
je
jns
pop
push
and
int
lods
add
jl
fst
xchg
xchg
mov
into
daa
mov
lods
add
sub
cdq
fild
aad
mov
lea
sub
xor
jb
jns
int
stos
and
mov
loop
sub
cmps
in
inc
call
push
(bad)
sbb
fisubr
dec
xor
pop
out
jo
jmp
inc
pop
xor
aam
leave
mov
cs
cmp
or
inc
adc
les
adc
stos
enter
sahf
(bad)
sbb
dec
pop
push
adc
sub
je
bound
jmp
(bad)
cdq
sub
fmul
aas
rcl
call
jne
xchg
mov
je
adc
jl
sbb
mov
fs
sbb
push
mov
movs
cmp
arpl
cmp
bound
inc
in
xchg
mov
test
inc
adc
jns
scas
jnp
adc
xchg
add
sahf
push
lock
jge
mov
cli
mov
xchg
clc
mov
inc
or
add
movs
cmp
mov
aad
xchg
sub
jecxz
push
sub
dec
cli
jmp
xchg
scas
jnp
xor
sahf
jecxz
push
sub
dec
mov
jmp
inc
mov
mov
mov
fdiv
mov
es
add
jmp
jecxz
dec
ret
inc
mov
jmp
jae
jnp
xchg
jno
enter
sbb
ret
stc
pop
mov
xchg
cmp
mov
adc
jmp
int3
fwait
dec
and
xchg
repnz
or
dec
data16
aam
test
cmps
cmps
in
dec
fist
xchg
inc
xor
lock
inc
dec
jmp
es
shl
ret
int
popf
xor
bound
mov
ret
imul
loope
xchg
fcomp
jns
stos
pop
mov
push
call
ror
xchg
xchg
cmp
test
mov
leave
mov
or
cmc
imul
pusha
jne
push
adc
push
push
sahf
mov
mov
in
add
mov
dec
jg
les
push
xor
test
pop
jl
aaa
cmp
call
stos
and
push
cli
mov
push
out
dec
fs
xchg
out
aaa
xchg
fdivp
sub
je
jns
clc
fcomp
mov
add
fistp
xchg
or
sbb
xor
enter
test
xor
dec
sahf
stos
lods
cmovge
mov
stc
mul
popa
mov
loop
icebp
enter
imul
retf
jmp
lahf
fsub
loop
dec
lods
outs
mov
js
xchg
sub
pop
dec
pop
stc
shl
ss
or
lahf
cwde
pop
cld
call
add
popa
jecxz
shr
daa
sbb
enter
mov
mov
lea
cmp
jne
scas
push
mov
jne
mov
add
sar
jg
mov
es
add
rcl
ja
xchg
cmp
loopne
mov
cmp
sub
call
cs
rcl
ins
js
aaa
jns
test
sbb
cmp
xchg
dec
pop
js
scas
ins
xor
and
dec
imul
stos
imul
movs
lahf
std
inc
xor
cmps
popf
cmp
test
retf
rcr
add
xchg
aad
jmp
mov
sub
adc
(bad)
ror
dec
pop
cmp
inc
add
not
jmp
sbb
ss
rcl
push
fidivr
pop
inc
lods
aaa
jnp
arpl
test
jecxz
jmp
inc
pop
std
pushf
mov
xor
adc
mov
mov
and
icebp
or
cmp
cmp
mov
sbb
jle
mov
jge
fwait
mov
je
movs
gs
lock
mov
push
jo
(bad)
dec
stos
retf
cld
fs
shl
mul
and
xor
and
add
mov
fwait
leave
lock
push
idiv
loope
mov
and
jg
ins
in
sahf
rcr
pop
cmp
or
in
movs
mov
jbe
jae
cli
sti
pop
cld
call
inc
adc
add
das
push
xchg
mov
test
jle
add
dec
test
mov
cdq
int
and
mov
mov
es
or
push
popf
and
cmp
sbb
imul
jmp
dec
sub
repnz
jl
stc
mov
lods
test
imul
mov
fwait
jecxz
mov
pop
xor
xchg
(bad)
in
xchg
stc
fcomp
retf
outs
loopne
and
pop
jmp
sbb
leave
add
pop
in
adc
dec
ins
sub
fbstp
cmp
in
xchg
xor
ja
and
xchg
xor
pop
sti
inc
lds
inc
shl
ds
mul
int
shl
xor
not
adc
into
std
jae
jp
lods
aaa
loopne
pop
ficomp
dec
adc
pop
jg
pop
mov
aas
xchg
(bad)
fsubr
mov
xor
aam
pop
inc
mov
add
fild
or
push
mov
mov
xor
daa
(bad)
jl
shr
pop
mov
push
test
mov
ret
mov
out
fdivr
iret
fdivr
or
cmp
scas
mov
pop
ins
int3
mov
ins
adc
ds
mov
mov
rol
scas
repz
mov
mov
xchg
(bad)
call
test
xor
or
and
push
and
int
mov
arpl
pop
xlat
add
(bad)
xor
mov
sbb
imul
aad
pop
add
or
sbb
jp
adc
pop
int
in
pop
jb
scas
aaa
pop
cmp
pushf
mov
nop
(bad)
clc
push
jmp
js
aaa
sub
or
add
add
sub
mov
ror
rol
jg
cmps
xchg
neg
inc
js
movs
int
addr16
inc
ja
mov
sub
push
and
xor
ret
mov
pop
(bad)
fs
dec
adc
enter
test
cmp
xchg
fisttp
cmp
pusha
sahf
jp
fdivr
shr
loope
mov
lods
push
ja
sbb
xor
push
call
push
hlt
fucom
jp
iret
mov
cmps
test
popa
pushf
inc
in
adc
xchg
push
out
inc
push
add
mov
scas
xor
and
pop
push
rol
call
sbb
dec
dec
sub
scas
repz
mov
push
xchg
pop
shl
sbb
push
xchg
mov
dec
leave
lock
push
mov
mov
test
gs
mov
sbb
cmp
sbb
adc
inc
test
stos
loope
imul
push
out
xor
push
mov
sub
hlt
fcom
leave
lods
push
stos
fimul
test
ins
int3
lahf
(bad)
(bad)
or
mov
and
in
xchg
ret
pop
in
mov
mov
pop
inc
dec
nop
push
cmp
mov
xchg
repz
and
mov
mov
aas
adc
jg
push
adc
in
aam
outs
inc
jecxz
mov
mov
push
(bad)
lds
push
cdq
cwde
hlt
push
adc
sbb
hlt
and
test
inc
enter
pop
xchg
or
mov
inc
xchg
and
test
shl
into
fs
out
sbb
xchg
arpl
test
sub
mov
mov
lods
jmp
push
dec
and
adc
add
fcomp
mov
in
outs
out
lahf
or
inc
(bad)
arpl
xor
fcmovnbe
clc
div
inc
push
cmc
and
jle
mov
jp
dec
into
cmp
(bad)
mov
or
xchg
sub
test
and
mov
fsincos
jbe
push
push
and
and
jnp
pop
push
out
les
sub
ds
and
mov
mov
(bad)
xor
mov
pop
(bad)
repz
sub
nop
loop
js
mov
dec
pushf
inc
add
in
sbb
cmp
pop
sbb
push
push
fwait
mov
dec
xor
ss
xchg
(bad)
(bad)
(bad)
fmul
push
addr16
cmp
mov
mov
push
out
div
test
popa
push
(bad)
arpl
leave
xor
fwait
and
sub
cld
jb
mov
jp
mov
stc
ret
mov
push
shl
ins
fdivr
mov
out
mov
pushf
push
and
mov
sub
pop
xchg
xor
jno
mov
jnp
mov
jmp
into
mov
mov
or
xchg
jo
ss
pop
popf
dec
pop
aam
push
loopne
mov
add
pop
mov
jns
jnp
or
dec
mov
pop
cli
fbld
mov
adc
out
pop
jmp
movs
fadd
pop
test
dec
daa
inc
jmp
sbb
jns
sbb
clc
mov
das
xchg
sbb
cmp
push
int3
sbb
and
jb
mov
xchg
out
enter
pop
or
xor
and
scas
shl
cmp
sub
xchg
push
aas
cmp
shl
dec
mov
sub
jle
pop
fld
sbb
mov
int3
pop
loop
xchg
je
mov
popa
jge
out
or
mov
outs
imul
aas
and
mov
push
ins
pop
int3
cmc
push
inc
cmp
xchg
out
dec
int3
test
or
ins
test
fisttp
xchg
retf
adc
cmp
fist
cmps
dec
icebp
xchg
xlat
stos
push
out
jnp
jnp
inc
cli
movs
fs
leave
cmp
jbe
aaa
adc
pop
xchg
aaa
pop
cmp
ins
dec
pop
ja
adc
rcr
xchg
lods
jnp
call
mov
out
int
dec
adc
outs
push
or
mov
ja
fwait
scas
jmp
inc
retf
sbb
cmp
lods
push
out
popa
mov
outs
hlt
jecxz
stos
shr
scas
add
push
mov
add
sub
sbb
ja
pop
outs
push
fs
mov
(bad)
retf
repnz
jno
pusha
lea
mov
and
arpl
sbb
test
jmp
iret
adc
or
(bad)
sahf
call
es
cld
sub
out
sahf
add
dec
dec
movs
shl
mov
adc
dec
in
daa
jnp
sbb
enter
test
movs
jecxz
mov
or
aaa
mov
aas
imul
outs
jg
ins
inc
adc
cs
aaa
sub
std
(bad)
sbb
sbb
repz
shl
sub
dec
test
dec
in
add
outs
push
jg
mov
js
jb
repnz
pushf
inc
test
stos
(bad)
pop
push
sbb
inc
leave
data16
pushf
dec
dec
sbb
jecxz
iret
(bad)
sub
inc
add
jle
add
cli
or
sahf
jbe
outs
jns
mov
and
imul
xor
mov
retf
dec
mov
xlat
push
ja
fld
std
stc
repnz
ret
adc
scas
pop
cmc
enter
xlat
push
int3
fcomip
mov
imul
dec
sbb
sbb
push
loopne
ror
fidivr
call
mov
sar
jecxz
movs
in
(bad)
sub
mov
mov
ror
mov
xchg
ffree
popa
and
scas
dec
rcl
imul
or
cmp
fstp
gs
jns
cmc
inc
and
xchg
fmul
lock
xor
ins
inc
sub
mov
into
lock
js
push
imul
dec
gs
push
xor
dec
ins
mov
jmp
xor
jg
or
pop
xlat
push
pop
sbb
icebp
add
pusha
mov
pusha
mov
das
inc
inc
xchg
test
into
xor
jle
pushf
fidivr
xlat
repz
test
fistp
fwait
or
cmp
jbe
sbb
scas
push
inc
mov
pop
xchg
ins
out
xor
pop
in
adc
arpl
xchg
sub
add
test
adc
xchg
mov
imul
ret
rcl
sbb
movs
aaa
mov
shl
ins
stc
not
cmp
adc
movs
or
add
pop
mov
imul
call
cmp
dec
sub
sub
and
les
ret
xor
out
in
mov
adc
aad
js
push
sar
adc
or
fist
push
pop
cdq
jecxz
mov
add
ret
jl
xchg
sbb
loopne
xchg
dec
fnstenv
xchg
dec
imul
ss
data16
addr16
int3
inc
fwait
push
pop
aad
sbb
fbstp
jle
loop
xor
or
in
imul
pushf
iret
cmc
dec
sbb
sbb
aas
jle
fistp
pop
icebp
int3
pop
xor
cmp
pop
and
fs
xchg
sub
push
ins
mov
loopne
jns
pop
jnp
fmulp
fidiv
push
inc
pop
iret
ret
cmp
stc
inc
jmp
and
bound
and
dec
nop
pop
bound
or
sub
(bad)
in
sbb
pop
arpl
mov
push
test
rcr
mov
cmp
lods
sub
add
les
in
cld
push
loope
adc
and
sti
rcl
sub
adc
cs
push
pop
xchg
mul
shl
mul
stc
and
fimul
add
jnp
mov
gs
pop
jge
mov
int3
and
push
mov
ins
pop
adc
mov
sti
and
add
mov
je
lock
sbb
mov
imul
pushf
fs
es
mov
lds
inc
sbb
(bad)
xlat
test
pop
mov
clc
fst
inc
xchg
test
stos
cmp
fst
mov
fwait
retf
jge
pop
sbb
lods
icebp
call
mov
cmc
xor
or
cli
xchg
cmps
sbb
out
sbb
loopne
loopne
xchg
outs
inc
jns
dec
xor
mov
leave
aas
gs
popf
in
retf
test
enter
popf
jne
ret
xchg
(bad)
lea
std
sub
adc
mov
and
xchg
dec
test
adc
jne
cmp
out
outs
push
mov
loopne
jmp
out
adc
sub
push
sub
fadd
repnz
add
lock
or
adc
mov
push
ror
ret
mov
pushf
in
movs
pusha
jno
and
mov
dec
shl
xchg
or
movs
adc
cli
mov
outs
adc
scas
jb
scas
add
lock
les
dec
adc
(bad)
cmp
loop
push
adc
cld
sbb
lds
and
jb
inc
rol
cmp
int
xchg
cmp
cmps
push
adc
cmp
cmp
sbb
dec
arpl
mov
lods
mov
movs
aad
mov
xor
push
ins
popf
inc
dec
rol
mov
popf
mov
into
pop
std
cwde
lods
in
fld
push
test
xor
gs
fisub
add
cli
popf
stos
jo
int
stos
scas
jge
and
mov
xchg
and
sub
jmp
xchg
xchg
or
shr
sbb
xchg
test
in
add
add
mul
pop
xchg
xchg
ins
cmps
cmp
dec
(bad)
jmp
mov
stc
aas
loopne
out
pop
movs
sub
sbb
faddp
jmp
ret
(bad)
leave
mov
or
mov
jmp
cmp
ret
mov
adc
sub
pop
adc
mov
cmps
sti
das
sbb
push
mov
fsub
push
push
int
sahf
lds
lahf
xchg
lds
cmc
test
stos
jge
ins
addr16
dec
mov
in
jmp
(bad)
outs
test
or
jb
xchg
arpl
push
lods
sti
and
std
xchg
push
frstor
xor
loopne
push
sub
in
jbe
dec
xchg
mov
jl
fstp
adc
push
outs
ss
dec
or
xchg
fidiv
rcl
popf
lods
rol
jge
pop
lea
cmp
scas
into
repnz
dec
push
sub
push
jno
ret
cmc
sub
arpl
push
add
inc
jecxz
xchg
jno
dec
push
xor
xchg
test
mov
cwde
mov
popa
mov
adc
inc
xchg
ret
inc
iret
lock
in
and
add
sti
push
stos
popf
push
push
push
imul
pop
mov
pop
popa
mov
cwde
out
push
(bad)
mov
mov
(bad)
lock
arpl
dec
call
(bad)
jne
rol
test
ror
test
bswap
xchg
call
adc
mov
inc
imul
and
int
inc
imul
test
add
or
aaa
mov
cmp
cmp
dec
dec
ret
or
stos
add
adc
clc
or
dec
cmp
adc
movs
stos
cmc
adc
dec
xor
int
test
outs
and
cmps
add
add
mov
xchg
push
adc
enter
pop
push
push
fs
or
mov
stos
ror
pop
mov
cmp
and
imul
rol
stos
cmp
ins
fstp
sub
popf
push
jle
mov
push
inc
cmp
xchg
rol
inc
in
cmp
mov
push
test
xchg
cs
int
imul
xor
int3
mov
mov
cmps
les
iret
pop
cmp
ja
mov
mov
sbb
inc
test
arpl
add
inc
and
sbb
adc
loope
outs
push
xor
imul
sti
jecxz
aad
imul
sbb
cmp
add
push
popf
add
xchg
out
sub
mov
adc
mov
pop
sti
loop
(bad)
icebp
ins
mov
jne
fcom
lea
cmp
xchg
aam
jle
add
test
test
int
imul
mov
push
and
fdiv
sti
hlt
xor
xchg
sbb
(bad)
out
mov
push
aad
mov
scas
mov
mov
add
xlat
leave
cmp
fisubr
jmp
shl
mov
pop
mov
inc
cmp
push
mov
sbb
jge
xchg
sub
test
shl
push
or
jae
div
leave
inc
lds
rcr
iret
cmps
fucomip
(bad)
or
sbb
int
(bad)
mov
sbb
dec
rol
fwait
push
adc
(bad)
mov
ficom
test
add
pop
and
loopne
dec
test
mov
xor
add
js
iret
push
clc
nop
push
rcr
pop
push
les
xlat
xchg
mov
lahf
call
cli
push
xor
pop
fidivr
enter
xchg
xchg
imul
mov
cmp
push
pop
rcr
imul
jecxz
cwde
(bad)
(bad)
inc
pop
daa
pop
leave
ins
jle
imul
push
ffree
cmp
add
xchg
mov
xchg
dec
add
shl
ja
movs
bound
inc
dec
iret
sbb
sub
mov
mov
sbb
pushf
psadbw
ins
outs
nop
mov
jo
mov
jmp
push
shl
ins
push
iret
jg
jo
cmps
mov
nop
pop
jne
outs
fistp
dec
mov
stc
jmp
xchg
pop
retf
jge
and
jb
imul
scas
push
stos
repnz
and
imul
into
ins
ins
mov
mov
dec
fiadd
pop
pop
push
sbb
int
push
pop
or
jo
in
loope
xor
in
pop
mov
adc
fisub
xchg
pushf
popa
and
scas
jns
mov
scas
xchg
jne
or
les
xchg
hlt
outs
shr
movs
sub
pop
movs
in
push
add
popf
je
iret
push
popa
mov
dec
push
jecxz
loop
xor
out
mov
dec
and
scas
mov
inc
adc
add
test
pop
jmp
cld
rcr
in
add
(bad)
(bad)
adc
arpl
pushf
aas
pop
in
jbe
mov
adc
sub
mov
cmp
mov
ins
stc
xor
rol
(bad)
(bad)
or
mov
lahf
addr16
gs
jo
mov
js
adc
and
jmp
mov
fdiv
clc
(bad)
mov
push
sub
ss
pop
sbb
aas
pop
into
aam
mov
and
iret
pop
iret
outs
sbb
push
pop
jle
or
and
std
add
or
lds
loop
in
pop
xlat
popf
shl
adc
lahf
shl
int3
cmps
retf
(bad)
icebp
push
mov
cwde
loop
add
adc
mov
in
mov
enter
cld
pop
je
ror
cmp
mov
sub
bound
test
inc
mov
push
push
jmp
sbb
lahf
mov
add
inc
sti
xchg
adc
add
(bad)
and
imul
(bad)
rol
in
jmp
icebp
outs
div
out
fisubr
test
call
push
dec
hlt
popf
out
or
lods
iret
aaa
repz
leave
jno
dec
ret
inc
and
mov
cdq
dec
mov
frstor
test
cmc
push
sar
or
sbb
into
stos
je
in
call
aas
jecxz
push
cdq
inc
imul
imul
push
add
xchg
repnz
jo
cmc
lock
scas
movs
scas
jns
sbb
(bad)
add
imul
pop
gs
pop
ficom
repz
daa
das
inc
mov
sbb
jbe
not
add
pop
je
push
pop
mov
lods
movs
cs
mov
sbb
mov
or
dec
imul
packsswb
sti
cmps
mov
retf
icebp
jmp
xchg
or
lods
sub
xchg
cdq
outs
enter
push
mov
das
or
dec
iret
sub
or
sub
xlat
push
imul
mov
popf
retf
push
adc
or
and
mov
lds
pop
dec
fcomip
pop
out
push
sbb
int
sbb
and
xchg
push
pop
jmp
cmp
loop
mov
sub
js
cmps
(bad)
inc
jge
fldcw
xchg
iret
aam
sub
jno
xchg
aad
add
mov
jb
inc
scas
cmc
cld
stc
(bad)
mov
div
inc
outs
out
add
xor
es
lods
cmps
in
outs
mov
add
push
cli
cmps
das
out
mov
push
ret
xor
pop
pop
sbb
sbb
push
jge
cmp
jb
leave
or
cld
adc
pop
addr16
cli
xor
lods
add
out
jle
push
les
(bad)
xchg
int
or
sahf
out
sbb
retf
and
cmpxchg
and
in
sbb
ds
ror
test
xor
lock
dec
mov
std
jmp
scas
ins
enter
ss
jno
xor
pop
outs
lods
adc
inc
push
adc
loop
dec
mov
adc
dec
jbe
in
sub
sub
push
ds
test
push
lahf
inc
dec
dec
mov
xchg
sbb
xchg
push
sub
inc
or
cmp
push
xor
add
fbstp
push
outs
popf
sti
cld
retf
xchg
jle
dec
push
outs
out
fwait
and
push
cmc
cmp
push
xor
pop
ins
jbe
popa
mov
xor
push
push
cli
aam
movs
push
xchg
mov
add
push
test
loope
stos
mov
mov
inc
loop
fild
mov
sub
nop
into
in
pop
mov
iret
dec
mov
lds
pop
push
adc
cmps
and
push
push
mov
scas
cmc
ins
(bad)
nop
sbb
pop
xchg
push
call
or
ins
mov
xchg
js
std
add
dec
pop
mov
iret
mov
cmps
jne
(bad)
repz
mov
stos
mov
xchg
mov
cwde
scas
xchg
inc
scas
cmps
loope
mov
movs
mov
jmp
jg
jns
enter
mov
lea
sar
fmul
sbb
inc
bound
cmps
or
push
clc
adc
jle
and
and
rcr
jb
jp
cs
pop
sti
xor
rol
les
and
ins
and
mov
fdiv
leave
jb
pop
mov
in
push
std
and
jmp
and
cmp
je
adc
scas
adc
and
pop
in
retf
pushf
sub
das
aad
es
sub
mov
subps
xchg
inc
dec
mov
sbb
sub
xlat
pushf
push
inc
inc
cli
sub
add
jno
rcr
cmp
and
test
and
jp
jb
fisttp
or
scas
sub
sbb
nop
retf
push
sbb
cmp
xchg
aas
and
pop
add
(bad)
and
push
jns
daa
cmc
ins
cmps
sahf
dec
mov
sub
jmp
adc
and
sbb
pusha
das
adc
addr16
mov
jecxz
mov
inc
sbb
inc
hlt
std
push
push
push
fidivr
iret
push
dec
pop
rcr
add
dec
out
pusha
lock
nop
cmp
adc
rol
cmps
mov
adc
cmp
int3
scas
mov
ins
sti
xchg
aaa
cdq
int
sub
into
(bad)
adc
jl
push
ins
adc
shl
dec
fdivp
mov
cmc
leave
mov
dec
lock
xchg
pop
pop
in
cmp
pop
imul
pop
mov
nop
push
inc
outs
aas
ret
push
adc
and
mov
xor
jae
add
aam
cmc
cmps
fs
(bad)
xchg
pop
push
shl
or
xor
xor
mov
fcmovb
fcom
mov
aaa
dec
ins
mov
ja
or
add
cmps
add
xchg
pusha
test
jo
mov
xchg
pop
(bad)
and
xchg
in
mov
jne
lahf
ds
or
jbe
dec
les
mov
sar
push
jnp
in
std
retf
pop
cmps
test
cmp
in
sbb
out
imul
retf
add
or
xor
es
mov
mov
ret
jmp
sub
inc
lock
out
call
sbb
xor
cmp
sahf
arpl
inc
shl
aam
out
ror
cmp
and
adc
xor
aad
inc
lea
aam
push
jmp
jmp
movs
jbe
mov
stos
ins
push
dec
jo
cmp
(bad)
dec
adc
mov
retf
xor
mov
adc
in
pop
pop
and
mov
mov
es
mov
gs
cmp
cmp
xchg
push
jo
iret
pop
dec
xchg
inc
stos
jne
pop
rcr
cmp
xchg
dec
pop
nop
mov
inc
daa
inc
mov
mov
push
scas
sub
imul
int3
xor
in
inc
pop
mov
mov
rol
and
mov
mov
dec
or
(bad)
(bad)
rol
adc
mov
gs
loope
adc
xor
pop
aaa
daa
pop
lds
imul
add
pop
fnstenv
pop
push
add
and
push
(bad)
aaa
jmp
jbe
jmp
(bad)
(bad)
hlt
mov
cmp
inc
dec
cld
(bad)
pop
add
mov
mov
test
pop
xchg
repnz
and
adc
and
adc
ja
dec
xchg
push
fldenv
retf
cmp
inc
jns
fcomp
loope
clc
push
shr
pop
xor
dec
push
push
push
ins
jmp
push
pop
or
inc
(bad)
es
adc
pop
add
gs
mov
mov
ds
cmp
call
retf
adc
das
adc
mov
or
imul
push
enter
int
sub
mov
idiv
cs
push
mul
fsub
sub
mov
div
fild
pop
adc
push
cmp
inc
push
in
into
add
adc
retf
sbb
stos
cmp
test
xchg
adc
jbe
popa
ret
push
popa
es
loopne
out
(bad)
movs
je
cmps
rcr
xchg
test
sbb
add
or
jb
or
or
(bad)
jmp
outs
fst
and
jmp
aas
in
jge
push
mov
jge
cs
and
fnstsw
or
mov
jge
test
test
test
fwait
mov
mov
fsub
jo
shr
lods
je
add
(bad)
fisub
frstor
jne
je
xchg
adc
xor
push
gs
pop
xor
cmp
neg
iret
push
movs
repz
add
icebp
mov
in
fwait
add
inc
push
sbb
sbb
(bad)
pop
outs
pushf
pop
fisttp
dec
js
and
xor
cmc
cmc
jl
nop
out
push
imul
pop
xor
cmp
jo
aaa
and
ja
movs
sbb
nop
into
dec
mov
movs
ins
adc
aas
cld
shl
sub
adc
pop
or
(bad)
jp
add
cmps
jecxz
retf
cmp
add
data16
scas
jmp
les
push
mov
sub
out
(bad)
adc
mov
jmp
(bad)
hlt
sub
pusha
pop
daa
fs
ror
dec
mov
inc
adc
mov
stos
call
ret
ds
in
(bad)
push
xchg
mov
leave
inc
cmp
pop
dec
cmps
clc
cmps
mov
push
push
ins
loop
ffree
push
out
nop
cli
ss
adc
dec
jne
pop
sahf
and
int
aad
xchg
xor
xchg
or
jle
lock
cli
xor
xchg
xor
in
dec
xor
bound
stc
add
mov
jg
mov
popa
popa
(bad)
cdq
(bad)
ja
and
mov
dec
mov
push
retf
rol
ins
dec
int
mov
sub
js
xor
cmp
shr
cmp
sbb
out
push
js
sub
jle
mov
in
fcmovbe
push
repnz
loopne
push
xor
mov
sahf
cmps
movs
pushw
or
xchg
or
ret
mov
cmc
scas
(bad)
fidivr
pop
push
adc
in
and
adc
mov
jno
xchg
push
out
jnp
cmc
mov
mov
xchg
in
cmp
in
push
cmp
sti
jbe
icebp
stc
sbb
out
clc
retf
push
mov
dec
fcmovnu
jge
into
(bad)
mov
ins
rcl
and
cld
cmp
int
jp
in
out
mov
stc
mul
or
call
mov
popf
cmp
shl
inc
inc
sti
add
ja
stc
inc
les
jge
int
cmc
xchg
mov
push
out
xchg
stos
xor
dec
ins
inc
cs
xlat
push
xor
daa
lahf
es
xor
shr
dec
inc
dec
mov
fdivr
add
ss
lahf
push
mov
mov
retf
sbb
fs
fisub
jb
jle
add
(bad)
xor
js
xlat
jmp
mov
daa
cld
push
push
imul
loop
ror
pop
mov
jns
adc
dec
iret
push
loop
and
pop
bound
stos
nop
fisub
adc
push
scas
ins
gs
cmps
test
lds
fild
push
jp
ror
pushf
test
scas
in
and
or
enter
shl
mov
nop
or
retf
pop
shr
pushf
jge
inc
pop
xlat
pop
mov
inc
adc
mov
pushf
stos
inc
add
je
into
mov
scas
int3
mov
(bad)
inc
pusha
cld
in
(bad)
push
adc
fcom
pop
pop
cmp
mov
loopne
imul
inc
aam
and
jle
cs
xor
out
daa
or
into
sbb
leave
mov
inc
aas
dec
mov
sbb
cmp
cs
dec
fnstenv
in
retf
pop
pop
or
sbb
shl
or
adc
push
and
ds
arpl
or
cmp
mov
xchg
mov
bound
push
mov
cmps
push
(bad)
neg
stc
jns
sti
dec
out
push
dec
inc
pop
dec
xchg
cmc
(bad)
xchg
mov
int3
inc
pop
ds
and
loop
mov
nop
das
add
jge
push
fstp
stos
outs
fdiv
mov
push
stos
(bad)
rol
enter
adc
call
(bad)
shl
adc
mov
mov
daa
sbb
xor
inc
and
adc
pop
cwde
mov
xchg
data16
mov
pop
mov
movs
mov
mov
cmp
mov
stos
sbb
ins
mov
stos
and
loope
inc
push
retf
xchg
ja
mov
cdq
dec
lea
push
sub
jge
fwait
cli
or
int3
repnz
scas
inc
sar
and
adc
aad
mov
pop
sti
sahf
std
sub
dec
xor
lds
test
cmp
inc
push
mov
dec
fs
push
jle
movs
(bad)
fstp
pop
test
aas
push
mov
mov
sahf
je
cwde
add
xor
loopne
sub
push
sahf
xor
scas
adc
dec
pop
je
adc
cdq
and
mov
shl
adc
and
and
mov
outs
push
jbe
cmp
sbb
and
(bad)
mov
in
mov
push
fidivr
movsx
mov
ss
xchg
jne
mov
test
jecxz
scas
mov
icebp
mov
adc
aam
ds
retf
inc
pop
test
add
jl
out
or
test
fbld
fbld
lock
fsubr
push
cmps
mov
xchg
fiadd
xor
(bad)
mov
shr
inc
out
fiadd
sub
in
adc
rol
pop
jg
mov
jb
mov
cld
test
adc
call
fwait
jecxz
jns
cmp
or
mov
fdivr
into
fs
dec
repz
lods
and
enter
xrstors
shr
dec
aad
lock
or
mov
mov
cmp
cld
mov
xchg
and
lods
pop
cmps
xchg
adc
iret
dec
cwde
(bad)
hlt
jnp
test
sti
mov
aas
mov
retf
pop
iret
mov
adc
pop
push
sbb
pop
out
dec
mov
inc
scas
hlt
icebp
push
aaa
pop
cmps
mov
mov
sub
push
or
and
cmp
mov
arpl
cmp
or
mov
add
xlat
movs
dec
mov
or
fwait
pop
pop
sub
dec
sbb
sub
jbe
ins
lds
mov
and
scas
lock
lock
push
jnp
pop
inc
mov
cmp
and
cdq
xor
fistp
movs
cmp
inc
push
or
movs
mov
in
adc
jecxz
dec
sub
retf
sar
inc
movs
adc
inc
pop
mov
xor
or
lea
sar
push
mov
and
mov
and
xor
shl
clc
inc
cdq
pop
and
ss
mov
das
rcl
test
in
push
ret
inc
call
nop
in
sub
jl
cli
or
rcr
lahf
adc
jmp
cli
inc
outs
out
xchg
adc
fsub
cmp
aam
fidiv
inc
sbb
mov
xchg
push
scas
call
or
cld
or
lds
rep
ja
sbb
fwait
movs
scas
inc
call
or
xor
or
jne
mov
cmc
lea
clc
mov
and
mov
inc
dec
dec
inc
push
sar
call
push
inc
push
ss
pop
dec
icebp
sub
sbb
das
add
or
or
data16
xor
ret
fisub
mov
adc
add
add
xchg
ins
xlat
pop
retf
addr16
and
retf
xor
jbe
dec
mov
in
jne
pop
mov
and
and
cmp
jae
popa
xor
pop
lea
and
shl
cmps
and
xchg
sbb
cwde
push
loope
addr16
jbe
jecxz
sbb
cmps
or
jmp
cs
inc
retf
push
(bad)
test
into
test
mov
and
int3
mov
pop
(bad)
je
inc
stos
jmp
and
daa
mov
mul
cmp
jge
push
mov
imul
xchg
jmp
sbb
test
push
scas
scas
push
sbb
shl
retf
aaa
cwde
imul
test
cmp
push
xchg
pop
mov
jne
ins
aaa
(bad)
enter
mov
jb
adc
and
mov
sbb
shl
popf
push
stos
xchg
xor
fdivr
push
xor
mov
mov
jne
mov
fadd
mov
pop
retf
push
or
sub
pop
rcl
add
push
sub
add
lea
dec
add
xlat
xor
cmps
aam
addr16
push
lock
lea
retf
dec
jnp
xor
popa
sar
imul
jne
add
and
jge
jae
data16
in
leave
in
push
std
inc
or
imul
inc
lea
or
jnp
jo
in
cld
(bad)
add
pushf
test
movs
int
push
cmps
int3
sub
dec
(bad)
repnz
jge
adc
pop
arpl
in
xor
xorps
ror
pop
or
or
cmp
sub
xor
dec
cmps
mov
scas
sbb
mov
out
stos
mov
inc
mov
pop
push
push
push
lock
jns
mov
jmp
inc
adc
sub
jbe
mov
test
mov
sbb
enter
inc
mov
cmp
and
rcr
pop
jno
aaa
push
test
gs
pop
out
ds
ins
aad
lds
outs
push
push
std
and
fsin
enter
adc
mov
mov
out
stos
(bad)
jl
int
(bad)
repz
mov
push
fidiv
loopne
scas
pop
sbb
fbstp
inc
pushf
mov
out
ret
sbb
enter
in
sbb
xor
pushf
aam
or
pop
push
pop
(bad)
cli
pushf
fstp
(bad)
xlat
es
cmp
mov
adc
ja
cmp
jne
jno
or
cmp
stos
cmp
mov
movs
(bad)
dec
sar
xor
outs
call
arpl
lods
cmp
push
repz
out
push
lds
popf
mov
dec
cmp
out
pusha
jnp
stos
xor
pop
adc
pop
retf
in
dec
mov
test
jl
push
jle
push
sbb
sar
dec
ja
xchg
(bad)
stc
shr
in
mov
sub
shl
lock
movs
inc
shl
xchg
ficom
or
loop
mov
sbb
lahf
jo
cmp
xor
mov
dec
push
fdiv
xor
ja
and
jg
sbb
xchg
jo
mov
imul
imul
sub
arpl
movs
jmp
clc
nop
xchg
stos
enter
leave
in
mov
sbb
mov
scas
or
jne
or
jo
std
push
lods
jmp
mov
jg
test
jnp
fwait
xchg
in
pop
packuswb
add
dec
push
(bad)
mov
cmp
call
sbb
stc
mov
popa
enter
int
cmp
push
test
loop
or
in
or
mov
xor
push
dec
mov
pop
in
pop
mov
pop
ins
jmp
pop
mov
cld
(bad)
out
scas
mov
cs
mov
add
jle
add
pop
jecxz
dec
and
ins
div
inc
cmp
mov
push
pop
in
mul
outs
cwde
ja
mov
or
and
loope
and
jno
push
mov
cmps
jae
fs
add
pop
cmp
pop
loop
bswap
frstor
jbe
in
enter
outs
fcmovnbe
hlt
mov
enter
and
imul
dec
fimul
xchg
push
std
mov
jmp
mov
jg
xor
shr
xor
push
loope
mov
and
sar
mov
shl
and
adc
aaa
sbb
sub
je
popa
cdq
ds
mov
(bad)
and
inc
push
fild
hlt
sbb
mov
or
std
jp
aam
dec
inc
mov
(bad)
lahf
and
pushf
adc
test
arpl
push
bound
int3
clc
sbb
xor
fistp
xchg
rol
mov
cmps
pop
cmps
xchg
xchg
stos
outs
in
push
in
lods
(bad)
arpl
addr16
pushf
fisttp
in
nop
icebp
in
(bad)
mov
adc
lds
cmp
in
or
mov
adc
ud2
xchg
add
int
fimul
std
and
pmaxsw
lahf
dec
ins
cmp
or
mov
call
outs
pop
movaps
pop
cli
in
mov
ror
pop
adc
mov
sub
fcmovu
jae
lods
add
push
nop
mov
push
sahf
cmp
sub
icebp
pop
jl
mov
mov
push
cdq
shr
sub
fcom
push
mov
test
add
sbb
cmps
pop
loope
pop
mov
inc
js
imul
xchg
popa
mov
movs
inc
add
push
push
scas
pop
popf
pop
fs
cmps
jae
add
sti
xor
mov
lods
gs
arpl
into
fadd
or
adc
sub
dec
jecxz
jae
mov
or
leave
xchg
fs
jo
or
push
fwait
ss
cli
cmps
mov
xchg
or
repnz
dec
dec
inc
fld
je
sahf
fsub
pop
in
adc
dec
repz
mov
xchg
dec
js
outs
sub
sub
sar
cmp
mov
xchg
xor
sahf
or
clc
stc
xchg
pop
sbb
stos
pop
hlt
(bad)
dec
dec
test
rcr
jo
xchg
pusha
(bad)
movs
inc
cwde
fs
inc
inc
jbe
fisubr
mov
add
bound
dec
dec
(bad)
and
(bad)
ficom
cld
(bad)
(bad)
sub
fist
inc
mov
fcom
push
test
sbb
inc
jns
mov
and
sbb
hlt
add
inc
js
adc
or
ss
pop
stos
or
xchg
and
cmp
rol
rcl
(bad)
fisubr
or
enter
inc
inc
adc
or
pop
xor
adc
ror
fist
imul
dec
mov
add
xchg
in
ins
retf
loopne
in
xchg
push
test
push
scas
pusha
out
mov
push
or
jne
xchg
cmps
gs
(bad)
in
jg
cmp
pusha
fcmovnu
lahf
retf
ins
jbe
ja
mov
push
clc
sub
(bad)
mov
repnz
xlat
adc
pop
lahf
ins
nop
bound
inc
stc
xchg
out
inc
shl
mov
icebp
test
retf
out
mov
movs
or
push
sub
cli
dec
sub
fdivr
hlt
mov
sar
fucom
mov
clc
xchg
xor
lods
aaa
adc
jmp
xor
pop
or
push
push
push
call
das
(bad)
cmc
sub
stc
test
imul
jbe
cmp
add
mov
mov
(bad)
outs
lods
idiv
cmps
push
push
js
dec
mov
rol
or
(bad)
xor
into
sbb
adc
or
into
lods
dec
cmp
out
push
push
add
xchg
shl
push
repz
jmp
mov
cmp
inc
aaa
mov
out
xor
adc
test
mov
mov
pusha
sub
test
mul
aaa
cdq
sar
clc
nop
(bad)
scas
stc
mov
adc
rol
push
cwde
(bad)
dec
(bad)
jecxz
out
test
xchg
repnz
pop
xchg
mov
cmp
jmp
and
cmp
cdq
add
fild
js
fstp
xchg
or
xor
inc
in
movs
xchg
push
dec
jmp
fs
call
shl
stos
int
scas
push
xor
scas
dec
cdq
outs
xor
mov
jae
ds
add
jmp
xchg
cwde
pop
pop
retf
mov
sbb
pushf
cmp
or
es
add
or
jno
cwde
mov
push
out
shl
or
jnp
in
das
xor
popa
stc
aam
xchg
rcl
cmp
mov
lds
(bad)
ror
lods
(bad)
xchg
loopne
jbe
out
jge
test
call
imul
mov
cmp
in
sub
test
movzx
mov
ss
in
lds
lahf
mov
pop
mov
dec
mov
lods
outs
cs
pop
scas
jno
push
xlat
push
push
dec
xor
cmp
fist
or
sub
lahf
adc
push
fld
mov
dec
loope
ret
sub
push
shl
xor
sub
push
xchg
lock
mov
mov
xor
jecxz
loope
outs
pop
push
out
stos
imul
pop
out
in
adc
imul
movs
ror
and
ja
sbb
inc
push
jb
aam
jmp
(bad)
or
inc
js
aad
sbb
xchg
push
and
inc
(bad)
sahf
sti
push
shl
jns
dec
cmps
je
mov
or
inc
dec
xor
and
les
vunpckhps
imul
sbb
push
lds
test
mov
inc
add
mov
stos
sbb
loopne
push
out
jbe
sti
pop
imul
push
mov
outs
and
jge
adc
mov
in
adc
add
and
std
fld
(bad)
loop
idiv
cli
test
mov
(bad)
mov
outs
pushf
call
adc
jge
imul
jne
xor
lahf
mov
mov
and
push
mov
cmp
inc
push
jg
in
or
add
movs
in
mov
push
repnz
lahf
fiadd
jp
ret
loope
lahf
xchg
jne
pop
adc
xor
mov
fisub
push
sub
pop
fmul
jne
xchg
or
js
and
nop
sbb
jno
ins
xchg
ss
sbb
fidivr
pop
or
stc
fnstsw
cmp
add
gs
stos
ret
push
fdiv
jo
mov
cmp
jne
ins
push
mov
mov
sbb
out
mov
test
pop
aad
lea
adc
xor
ss
retf
lods
test
mov
sub
push
in
aas
add
iret
aas
cwde
mov
push
mov
fmul
sbb
xchg
mov
push
fcmovb
inc
xchg
out
xor
xor
sbb
sub
int
inc
xchg
lahf
mov
push
push
ficom
jb
cli
or
cmp
test
imul
fild
sub
imul
ret
clc
sti
sbb
adc
jg
mov
iret
fcmovnbe
js
pop
bound
in
xor
lock
popa
repnz
outs
jae
lahf
sbb
mov
mov
mov
mov
xchg
pop
xchg
xchg
mov
popa
push
pop
jp
cmp
mov
loopne
cmps
add
push
test
cmp
mov
adc
fmul
adc
test
aam
push
cmp
rep
es
inc
pusha
out
jmp
and
(bad)
into
shr
push
stos
inc
push
inc
sbb
push
js
jno
mov
cmp
daa
xlat
ds
fiadd
lahf
sub
and
jb
push
jl
sbb
adc
cmps
jg
xchg
adc
push
sbb
fldcw
mov
arpl
into
sbb
mov
jmp
ss
retf
pusha
push
sub
sbb
push
movs
mov
ret
aas
fdiv
sar
imul
test
inc
jnp
pop
adc
in
xor
adc
xor
ins
test
push
push
mov
js
scas
pop
(bad)
pop
(bad)
out
inc
in
(bad)
ja
pcmpgtb
push
out
movs
stc
into
fmulp
xor
sub
cmp
in
inc
inc
addr16
arpl
lds
dec
outs
xor
mov
add
nop
shl
fs
int
push
data16
jg
pop
cmp
in
in
jns
pop
stos
add
sbb
popa
pop
add
daa
pop
xchg
cmp
dec
sbb
add
fild
movs
push
sbb
(bad)
dec
cmp
push
inc
xor
sub
sub
imul
call
inc
pop
push
jmp
jecxz
xchg
movs
dec
leave
(bad)
jl
popf
add
sub
jae
dec
sbb
mov
and
imul
pop
or
add
xchg
sub
sub
lods
mov
test
push
loope
mov
ret
adc
sbb
fwait
add
xchg
movs
int3
fild
and
push
shl
lahf
lds
idiv
jne
push
sbb
and
cmps
xchg
jp
das
inc
xor
add
jge
scas
retf
mov
test
dec
cmp
in
push
sbb
das
and
jmp
aad
daa
mov
sbb
mov
push
mov
mov
sbb
fdiv
cmp
jl
ror
out
addr16
mov
(bad)
(bad)
cmp
test
xchg
clc
and
jle
push
pop
inc
lods
fwait
and
jecxz
mov
arpl
repz
lods
call
fst
xlat
aaa
out
cmps
jmp
rol
loopne
fcom
repz
jns
add
int3
mov
fsubr
out
jl
imul
sar
xlat
scas
mov
pop
or
int3
cmp
sub
xor
mov
pop
pop
repz
loopne
and
stos
test
mov
jo
shl
lods
leave
in
iret
aaa
ret
dec
(bad)
test
call
in
lock
ror
or
ficom
retf
stc
loopne
xchg
push
sbb
les
cmc
mov
rcr
addr16
mov
add
std
xchg
mov
jge
div
(bad)
or
pop
arpl
mov
xchg
adc
pop
stos
lods
jp
outs
jnp
xchg
scas
adc
enter
inc
pop
dec
out
pop
push
xchg
test
ret
and
sbb
mov
cmp
cmp
dec
xor
stos
pop
pop
jns
jnp
in
mov
inc
fiadd
fimul
sbb
pusha
out
loopne
(bad)
rcl
shl
xchg
jg
pop
adc
ds
dec
mov
pop
dec
sbb
jne
xor
stos
sub
inc
das
adc
setl
cmp
enter
bnd
mov
push
fmulp
fdivrp
mov
imul
lahf
mov
ins
frstor
test
sbb
mov
add
out
sbb
pop
fs
mov
jnp
(bad)
in
stos
les
add
inc
mov
mov
jmp
retf
push
cdq
aaa
fstp
inc
in
aaa
and
popaw
jnp
sub
rcl
add
push
shl
adc
sub
mov
fcmovnbe
ret
xchg
cs
inc
das
inc
mov
mov
jbe
xor
ja
das
mov
dec
out
cmc
imul
and
cmp
in
cmp
push
mov
loop
jno
push
not
mov
or
daa
or
mov
(bad)
sbb
mov
xchg
popa
mov
inc
xchg
cmp
movs
pop
xor
push
(bad)
outs
lods
inc
movs
push
cld
xchg
not
aam
cli
stc
(bad)
push
jns
scas
jno
sub
jns
fsub
sbb
inc
je
xor
sbb
(bad)
shl
xor
mov
mov
lahf
sub
xor
mov
sbb
mov
inc
jl
imul
ret
sub
in
push
mov
jge
(bad)
repz
aam
scas
sub
dec
pop
sbb
pop
nop
push
mov
mov
xor
jne
es
cmp
test
inc
leave
inc
sbb
cmps
mov
shl
sbb
xor
mov
popa
inc
add
sub
les
ins
popf
lods
mov
and
sub
pusha
xchg
xchg
imul
push
inc
es
test
jbe
repz
push
dec
jno
and
fdiv
add
mov
adc
xchg
xlat
xor
adc
dec
loop
rcl
iret
adc
fistp
push
fdiv
cmp
sbb
int3
and
mov
inc
mov
into
in
call
sbb
pop
mov
popa
push
sbb
add
pop
mov
adc
cmp
(bad)
ins
loope
jb
addr16
test
mov
pop
xchg
ds
mov
inc
scas
out
mov
jb
cmp
pop
int
(bad)
adc
mov
mov
gs
mov
fidiv
or
inc
jecxz
movs
push
movs
(bad)
sbb
xor
dec
mov
mov
pop
add
mov
jmp
dec
sbb
ret
adc
inc
xor
inc
xchg
push
sbb
mov
dec
in
fucomp
push
es
dec
in
mov
sub
(bad)
in
mov
xchg
ss
and
xchg
leave
ins
movs
jmp
out
jle
xchg
aam
loopne
mov
jnp
ret
mov
mov
jmp
mov
iret
into
aad
pop
das
out
(bad)
aam
sub
sbb
mov
jno
int
cwde
sub
imul
mov
cmps
xchg
inc
movs
xor
and
adc
push
in
imul
ins
in
xchg
push
jp
mov
push
out
in
inc
mov
cld
hlt
jb
dec
jb
sub
(bad)
push
mov
imul
jbe
imul
es
cli
dec
push
loopne
and
inc
out
(bad)
xchg
ja
cwde
cwde
inc
jnp
push
xor
pop
std
jae
fsubr
mov
fwait
dec
mov
or
and
and
repnz
inc
lea
mov
jl
std
xchg
xor
push
dec
mov
mov
or
shl
inc
and
push
push
cmp
pop
mov
pop
inc
bound
mov
ds
jmp
xchg
fs
add
jmp
mov
and
nop
and
or
scas
call
and
mov
loopne
jp
(bad)
daa
sbb
int3
jnp
mov
loope
xchg
pop
mov
push
adc
movs
mov
bound
ja
or
in
mov
xchg
pusha
cmp
pop
cmc
pop
mov
mov
push
mov
mov
xor
fldenv
xchg
imul
jno
pop
nop
dec
test
and
cs
and
mov
xchg
js
mov
or
pop
aas
lea
pop
dec
out
in
(bad)
jg
add
xchg
fisttp
sub
ins
in
pusha
imul
lock
out
push
dec
lahf
cmp
jns
cmp
mov
loope
scas
inc
in
xchg
xchg
jmp
inc
xor
mov
(bad)
addr16
lods
cmp
mov
sub
loop
(bad)
ror
loopne
and
or
out
fwait
mov
push
addr16
jmp
sar
movnti
in
and
xchg
outs
adc
inc
fsubr
inc
sahf
retf
mov
push
xchg
(bad)
lods
push
jg
in
dec
lahf
lock
in
pop
pushf
sahf
mov
or
je
loopne
jmp
retf
and
dec
cmovs
xchg
test
loopne
into
sbb
jmp
repnz
pop
gs
or
out
stos
(bad)
add
pop
pop
and
pop
ja
pshufw
jbe
mov
sti
fild
inc
push
ret
dec
into
icebp
movs
popa
mov
push
cmps
pop
xchg
ss
aaa
enter
stos
and
jmp
mov
pop
fdiv
adc
shr
enter
mov
jno
fist
dec
xchg
fimul
cmp
and
add
fisubr
xchg
adc
sbb
sbb
xchg
in
clc
sub
data16
imul
cdq
aad
movs
sub
or
adc
pop
mov
push
hlt
jg
mov
sub
adc
popf
in
es
mov
jl
adc
lahf
xchg
mov
jo
pop
les
loope
xchg
pop
ins
xor
dec
fcom
and
sub
add
out
div
loop
adc
xchg
xchg
adc
popf
stos
cwde
sbb
sahf
addr16
push
add
cld
push
retf
mov
pop
dec
in
mov
ja
sub
imul
cmp
cmp
xchg
and
lods
jmp
xor
or
xchg
jns
xchg
lods
xor
frstor
mov
cmp
jne
xor
stc
or
popf
ffree
jne
mov
mov
mov
xchg
xor
stos
and
inc
aaa
pop
into
push
ins
mov
xchg
out
pop
mov
xor
ror
bound
sub
xor
xor
popf
xchg
pop
cmc
movs
sub
dec
(bad)
jmp
mov
adc
fs
cmps
xchg
iret
cdq
dec
pop
retf
sub
push
adc
jne
in
popf
xchg
sub
pop
mov
lds
test
dec
ss
mov
retf
adc
aas
pusha
repz
push
sbb
cli
jg
push
daa
jle
add
movs
add
adc
imul
pop
mov
test
iret
fwait
lods
xchg
jmp
or
hlt
inc
jecxz
aas
in
icebp
es
dec
leave
sub
jmp
xor
test
loope
sahf
iret
adc
std
xor
repz
sbb
aam
jl
jne
fxch
lods
std
int
sar
dec
fucomi
je
clc
jle
movs
pop
push
aam
lahf
jmp
jb
leave
xor
sub
xchg
mov
sub
imul
in
arpl
sub
mov
lahf
xor
and
pop
in
stos
inc
sti
mov
jle
mov
cmp
mov
jno
shl
jmp
stc
push
fld
inc
jne
(bad)
sub
dec
in
or
das
(bad)
jg
mov
repz
lods
mov
fld
ins
cld
sub
in
sar
push
xlat
cwde
and
int3
outs
mov
aaa
or
pop
add
cmp
dec
adc
mov
data16
xchg
mov
popa
xchg
push
xchg
lds
inc
mov
push
imul
push
mov
loope
ror
push
fldcw
dec
(bad)
push
xchg
adc
mov
jne
ins
jg
sub
pop
js
and
jmp
jg
fucom
inc
mov
sub
push
mov
jmp
xchg
outs
ret
xor
jle
ss
sahf
or
dec
cmp
push
add
arpl
es
adc
clc
sti
jbe
xchg
pop
out
mov
xchg
or
retf
imul
pop
jnp
adc
sub
fcomi
sub
jno
mov
popa
loope
shr
fs
inc
inc
mov
nop
cs
mov
mov
push
inc
jno
(bad)
push
rcr
xor
test
aam
xchg
mov
cwde
or
cdq
mov
xchg
ret
sub
rcl
pop
dec
sub
outs
enter
xchg
ret
cmc
inc
or
sbb
and
xor
sbb
xor
dec
mov
mov
imul
mov
fisub
(bad)
jl
mov
dec
(bad)
out
test
loop
cdq
hlt
jo
(bad)
fs
iret
xor
outs
inc
sbb
jo
xchg
adc
mov
leave
mov
pop
or
hlt
inc
mov
sahf
pusha
pop
push
dec
pop
cmp
hlt
or
adc
pushf
adc
jbe
push
add
pushf
(bad)
icebp
pop
mov
cmps
test
xchg
push
xlat
mov
loopne
mov
stos
and
popf
aad
pop
sbb
xor
lds
cmp
sub
pop
stc
pop
pusha
div
xor
xor
cmp
aaa
addr16
fcomp
xchg
xor
mov
push
mov
and
iret
mov
or
mov
int
xor
push
fidiv
ja
cmp
jne
push
leave
data16
mov
and
scas
inc
sub
jno
sbb
dec
mov
(bad)
cmp
jnp
mov
xchg
ja
push
pop
fnsave
sub
pop
or
and
pop
jb
(bad)
cmp
or
pop
inc
in
inc
loopne
inc
push
cmps
sbb
xor
rcr
es
jo
add
scas
mov
dec
arpl
inc
jmp
aad
mov
jns
aas
fst
ss
pop
sub
add
dec
pop
in
jp
retf
adc
shl
sub
fs
and
push
push
jbe
push
xchg
mov
pop
mov
cmps
pop
out
push
lods
lock
popa
scas
in
push
fs
(bad)
cld
nop
data16
ins
out
inc
stos
or
out
retf
sub
jge
je
cmps
popf
pop
dec
pushf
(bad)
jmp
pop
mov
xor
or
add
sub
ds
add
pop
cmp
movs
mov
and
mov
(bad)
inc
push
sbb
rcr
xor
mov
clc
push
dec
ror
lds
sub
push
inc
xor
sub
ins
icebp
cmp
(bad)
mov
movs
leave
adc
push
pop
push
xchg
call
pop
popa
ret
push
add
rcl
fld
push
inc
cmp
(bad)
or
inc
test
loop
call
jg
stc
cld
pop
arpl
aad
dec
mov
and
js
mov
ins
aad
pop
ins
sbb
aad
fs
outs
std
jl
xchg
adc
push
je
push
xlat
sbb
lods
and
mov
xchg
cmps
cmp
ret
jns
pop
push
mov
push
test
cmc
out
fdiv
mov
lds
ret
call
mov
mov
rcr
jb
in
cmp
jl
repnz
outs
mov
cmp
clc
jp
mov
cmp
rcl
cmp
stc
xlat
xor
and
mov
dec
lds
push
cmc
xchg
inc
inc
or
in
retf
outs
mov
inc
ror
cli
push
pop
movs
mov
pop
fwait
ins
sbb
add
(bad)
imul
lea
ins
retf
xor
hlt
add
test
xor
add
dec
mov
adc
xor
out
rol
hlt
jno
fist
pop
dec
shr
cmp
or
jge
daa
push
or
cmp
shr
push
sbb
outs
push
jns
call
inc
fild
call
jmp
cdq
sub
jns
adc
vpsrld
ins
(bad)
ja
dec
aaa
enter
dec
(bad)
cmp
jbe
mov
mov
test
dec
movs
aas
cmp
fs
cmp
mov
sbb
sbb
push
add
mov
ins
daa
xchg
mov
into
push
div
mov
xor
(bad)
int
mov
rcl
imul
repz
push
aas
fiadd
push
cdq
imul
jbe
jmp
sbb
dec
stos
sub
pop
sub
push
test
pop
xchg
sub
xor
mov
test
and
sbb
pushf
mov
sti
popf
in
test
out
mov
les
or
shr
push
inc
call
dec
mov
cmps
or
add
pop
gs
or
sbb
and
div
mov
sub
fwait
mov
push
adc
lds
test
lods
call
test
int3
push
daa
fild
into
out
and
jl
sbb
int3
or
cmp
(bad)
inc
shr
mul
inc
or
mov
mov
jg
jmp
in
scas
mov
(bad)
leave
jmp
(bad)
mov
jle
xor
clc
aaa
add
adc
or
dec
and
cmp
pop
les
sub
(bad)
and
mov
mov
sahf
xor
and
jl
retf
stos
es
dec
fdiv
or
cmp
lds
out
ins
imul
sub
out
sbb
loopne
stos
mov
mov
rcr
dec
push
stos
cs
cmp
jmp
adc
imul
jl
pop
push
or
out
stos
mov
fsubr
shl
xor
std
lods
lods
into
xor
pushf
add
jle
lods
aad
ds
or
mov
cmp
sbb
mov
and
xchg
data16
outs
xlat
lods
cmp
jg
inc
xor
mov
add
cmp
cmp
push
adc
pop
sbb
loope
dec
sub
les
movs
mov
sub
clc
outs
jmp
mov
pop
jg
aaa
shl
data16
cli
enter
mov
mov
addr16
cmp
fiadd
push
sbb
bound
retf
mov
imul
sbb
arpl
mov
and
jb
add
jg
cli
je
pop
jg
add
jge
or
adc
push
push
movs
pusha
add
cs
sub
adc
push
sub
mov
sahf
sbb
and
mov
imul
cmove
add
add
fstp
push
(bad)
call
(bad)
out
jnp
rcr
fst
xchg
mov
jp
jecxz
movs
pop
(bad)
sbb
imul
mov
jg
jle
dec
dec
xchg
jbe
imul
popf
repnz
add
in
hlt
adc
mov
mul
sbb
cmps
mov
ds
dec
addr16
das
lds
pop
mov
lahf
push
fst
xchg
dec
fucom
or
add
movs
add
movs
mov
stos
(bad)
dec
shl
xor
loop
xor
or
push
rcl
mov
iret
mov
push
popf
int
add
sub
ja
mul
data16
pop
ret
cld
mov
lahf
pop
and
xor
enter
cwde
test
sub
pop
sbb
lahf
dec
inc
std
jl
pop
or
mov
enter
lds
ds
mov
shl
dec
stc
push
and
cwde
jecxz
jnp
cmps
cwde
xor
(bad)
xor
fld
ja
pushf
push
add
jns
fs
cld
push
out
addr16
popa
add
shl
out
fwait
mov
sub
push
or
shl
inc
push
call
adc
xchg
wrmsr
cdq
mov
sub
sar
rcr
mov
push
push
lods
mov
pusha
in
push
mov
rcr
adc
jb
mov
adc
rcl
pushf
and
push
jle
push
cmp
cdq
(bad)
xchg
mov
shl
(bad)
js
dec
in
into
adc
mov
inc
cmp
out
pop
xchg
pushf
(bad)
sar
inc
lods
mov
daa
mov
(bad)
xor
cdq
les
fadd
push
xchg
or
or
and
jmp
(bad)
das
or
dec
cwde
in
mov
mov
push
mov
sub
sti
mov
mov
sbb
je
jge
lods
inc
int
(bad)
dec
enter
sbb
or
stos
adc
pushf
iret
xchg
test
pop
scas
xor
jae
jmp
xor
scas
push
cmp
movs
out
or
clc
push
pop
push
add
add
sbb
clc
cdq
(bad)
sub
daa
or
les
aaa
mov
jle
pop
mov
retf
mov
mov
loopne
cdq
scas
push
ins
push
lods
and
adc
cmc
out
and
fisttp
test
and
jo
adc
pushf
xor
push
aam
sbb
add
rcr
outs
xchg
aas
pop
xor
jne
mov
jg
xchg
cmp
daa
(bad)
stc
mov
sbb
pop
jne
push
mov
adc
movs
adc
inc
rcr
inc
push
lods
(bad)
sti
push
push
cmp
clc
ficomp
test
xchg
jg
add
dec
mov
and
or
jns
sbb
push
iret
bound
das
sub
outs
mov
pop
test
pop
mov
inc
dec
jg
ret
cmc
loope
xor
jae
sub
(bad)
pusha
shr
ss
ja
xchg
outs
sub
scas
jge
dec
call
xchg
lods
sbb
lods
into
out
lods
rcr
dec
jo
and
out
movs
sbb
retf
mov
sti
xchg
cmps
sub
mov
test
mov
or
push
stc
imul
cs
inc
jae
ja
cmp
pop
or
aam
clc
cmp
sub
lods
addr16
push
lock
mov
xchg
mov
inc
fild
cmp
test
xor
cmps
lahf
sbb
xor
push
pop
scas
and
jnp
or
je
ss
pop
in
ror
retf
jns
in
repnz
into
(bad)
and
and
sub
out
stos
or
inc
dec
inc
clc
cmp
in
jle
fcmovb
stos
mov
test
das
dec
ror
fadd
xor
xor
mov
inc
sahf
sub
les
cmp
pop
cmc
jg
push
cmp
adc
repnz
adc
stc
sbb
inc
push
push
jnp
adc
pop
adc
and
(bad)
(bad)
cld
or
in
in
call
dec
xor
xchg
loop
repz
loope
sbb
call
dec
stos
jnp
cdq
aad
(bad)
xchg
sbb
and
and
mov
enter
cmp
stc
adc
and
lods
and
call
(bad)
dec
loop
cmp
mov
or
fs
mov
scas
push
pop
cmc
popf
mov
aad
add
fwait
push
test
xchg
sti
outs
xor
(bad)
iret
pop
or
aam
inc
push
clc
add
and
movs
in
movs
fs
jmp
sbb
enter
jb
sahf
or
mov
push
gs
lea
call
sbb
mov
fbstp
repnz
(bad)
sbb
(bad)
rol
(bad)
cmp
pop
sahf
adc
arpl
popa
xchg
shl
lahf
mov
shl
xor
xchg
pop
dec
lds
xchg
stc
xor
leave
xchg
inc
mov
push
dec
ret
jb
mov
(bad)
ss
inc
int
push
int3
dec
sub
stos
jecxz
rcr
and
inc
in
sbb
je
icebp
out
mov
xchg
or
cld
or
(bad)
sbb
mov
repz
loop
mov
cs
or
(bad)
push
ret
movs
pop
pop
idiv
sub
xchg
mov
fidiv
jbe
inc
mov
jmp
sub
dec
fidiv
sbb
mov
jae
dec
fst
js
leave
sti
and
jmp
lods
and
jnp
pop
fdivr
jmp
mov
ret
or
jo
xchg
jp
ins
jmp
pusha
dec
jg
fwait
jns
nop
je
repnz
sub
xor
test
and
nop
or
jns
push
mov
and
pop
jge
in
mov
jmp
out
cmp
mov
jmp
ins
xchg
add
repnz
inc
jae
daa
dec
xchg
out
scas
leave
pop
pop
int
mov
arpl
imul
mov
xor
pop
and
and
mov
scas
dec
call
rol
inc
inc
enter
jmp
xchg
dec
and
mov
aam
mov
(bad)
mov
push
add
jp
and
arpl
sbb
jns
dec
cli
ffree
aad
inc
add
sub
stos
aam
daa
shl
dec
dec
mov
test
pop
mov
xor
cdq
or
popf
out
cli
jo
call
cmp
mov
inc
push
imul
(bad)
ret
int
jp
loopne
sar
fsubr
jbe
retf
call
pop
enter
sbb
ficom
ds
xchg
js
hlt
(bad)
pop
xchg
stos
pand
leave
sbb
imul
adc
addr16
arpl
xchg
loop
xchg
dec
and
iret
adc
add
add
jnp
call
loop
out
and
or
sbb
sbb
inc
pusha
out
push
imul
adc
dec
call
mov
pop
nop
int
mov
jns
popa
inc
xor
std
jno
repnz
mov
push
adc
gs
loopne
push
mov
push
add
sbb
inc
push
pop
xor
inc
or
je
xor
(bad)
out
cs
push
ja
loopne
inc
adc
mov
or
data16
iret
fisub
push
adc
adc
xor
clc
dec
in
popa
jg
pop
(bad)
or
hlt
leave
loope
pushf
sbb
jle
dec
fcomp
mov
mov
cs
nop
rcr
sub
icebp
enter
push
inc
or
mov
lds
daa
stos
add
cmc
mov
aas
fcmovu
push
ret
in
pop
dec
xchg
or
cmp
lahf
fnsetpm(287
pop
scas
adc
sub
fimul
or
iret
cmps
pop
dec
mov
js
jg
imul
(bad)
pop
inc
mov
mov
mov
add
pop
inc
(bad)
mov
fs
or
pop
pop
sti
popa
das
xchg
or
add
je
mov
in
pop
repz
jne
daa
outs
push
mov
cmc
dec
mov
scas
popf
clc
push
add
jne
xchg
add
and
push
call
js
addr16
xchg
stos
mov
lea
cwde
xlat
test
pop
cmp
in
mov
mov
xchg
mov
hlt
pop
ds
dec
xor
dec
les
movs
mov
movs
test
stos
aad
outs
inc
mov
ins
scas
adc
ins
and
xor
dec
fiadd
mov
cmp
xchg
jnp
ds
push
in
pusha
dec
(bad)
pop
dec
or
push
inc
(bad)
mov
jge
adc
add
test
push
or
stos
ins
pop
leave
mov
jnp
mov
icebp
ret
and
and
out
lods
scas
cdq
mov
adc
jne
cwde
movs
push
sub
int
in
mov
pop
iret
movs
mov
aam
(bad)
into
add
cld
lods
stos
test
stos
or
cmps
xor
add
test
iret
test
fimul
movs
add
cmp
cmc
sti
nop
pop
fcomp
push
push
xlat
jnp
mov
test
repz
and
scas
cmp
xchg
cmp
xor
in
inc
inc
and
xchg
mov
aam
xchg
(bad)
pop
pop
adc
iret
jge
cmps
xor
dec
fisubr
dec
addr16
shl
mov
daa
mov
lahf
leave
(bad)
lods
jo
stc
scas
push
mov
cli
dec
push
(bad)
std
cld
push
icebp
sbb
cmp
or
xchg
test
sahf
mov
sub
jmp
outs
jo
outs
adc
sub
(bad)
dec
minps
sub
iret
mov
cmp
dec
pop
dec
add
fmulp
test
xchg
push
lods
sub
imul
mov
ins
(bad)
ins
adc
cmp
mov
out
push
push
pop
push
stos
xchg
cmp
in
inc
pop
(bad)
in
mov
mov
xchg
pmaddwd
jmp
jp
sub
cmp
in
iret
fstp
lea
ss
popa
call
cmp
or
shl
jg
mov
repnz
push
mov
push
jne
xchg
ret
inc
pusha
loop
fnstenv
lea
or
ins
fwait
xor
cli
pop
mov
fsubr
adc
push
cmp
into
pop
xchg
cmps
mov
push
movs
addr16
lods
sub
cs
mov
fcmovne
pusha
into
mov
ror
mov
xor
in
popf
movaps
loope
jnp
sbb
and
sub
(bad)
mov
scas
jecxz
enter
adc
add
and
cwde
les
(bad)
repnz
stos
rcl
std
aaa
movs
or
je
sub
cmc
fbstp
fdivr
ret
jbe
or
mov
sbb
mov
int3
adc
cmp
ins
xchg
lahf
and
cdq
mov
and
daa
and
outs
ds
mov
nop
mov
mov
add
mov
fisubr
mov
jae
mov
ss
retf
and
aaa
shl
mov
or
pop
sub
cld
mov
xor
cmp
jle
clc
les
dec
jp
sub
sbb
sahf
mov
push
jp
cmp
push
ret
movmskps
mov
in
sbb
bound
add
fwait
mov
xchg
test
jnp
loopne
mov
retf
mov
pop
in
jg
adc
xchg
test
pusha
ds
jp
dec
inc
push
mov
sti
mov
hlt
js
xor
aad
mov
sbb
loope
ror
inc
addr16
scas
fcmovne
movs
pcmpgtb
jmp
(bad)
repz
cdq
dec
stos
sbb
cmps
add
outs
and
fs
(bad)
xor
lahf
sbb
outs
mov
arpl
(bad)
mov
sub
xchg
ins
adc
mov
lea
mov
lods
in
push
or
fcmovb
jb
and
inc
or
outs
loopne
loop
fldenv
(bad)
aaa
adc
push
movs
push
loope
dec
mov
sahf
push
loope
mov
hlt
sbb
test
dec
xchg
fnstcw
sub
imul
imul
push
jmp
mov
retf
inc
sub
outs
mov
jno
lods
sbb
aas
xchg
mov
aas
jle
in
test
cwde
jnp
cmp
pop
mov
outs
xorps
or
rol
adc
inc
adc
jb
pop
mov
xchg
jle
call
pop
in
push
int3
jmp
test
inc
(bad)
imul
popf
out
pop
loop
xor
jne
imul
ins
cld
out
sbb
sar
push
les
iret
stc
out
js
jo
pop
jge
cmp
aaa
push
out
push
in
xchg
js
inc
sbb
adc
jg
jmp
push
sub
pop
test
call
inc
rcl
inc
cmp
pop
add
xchg
jmp
add
data16
xor
(bad)
int3
retf
sbb
mul
mov
loope
movs
xchg
mov
jmp
hlt
fs
int
cdq
push
mul
mov
mov
icebp
or
ins
ins
pusha
in
icebp
mov
xchg
das
out
cmp
into
inc
icebp
je
movs
mov
mov
push
lods
push
ins
pushf
rcr
mov
jbe
cmp
xor
cmp
retf
lea
jecxz
(bad)
xchg
push
cwde
inc
js
aad
jns
dec
outs
pop
and
daa
mov
cli
in
cdq
dec
sar
jecxz
fs
ror
leave
push
scas
push
sub
rol
fld
imul
dec
sbb
pop
fisub
add
inc
ins
or
movs
cmp
jecxz
arpl
inc
icebp
mov
repnz
int3
dec
mov
cmp
and
xchg
fisubr
retf
cs
push
lds
cmp
mov
cmp
popa
mov
rcr
dec
pop
shr
data16
mov
test
clc
mul
cmp
inc
or
push
addr16
or
inc
ins
les
xchg
cmp
jmp
mov
inc
mov
jbe
jo
pop
(bad)
ins
lods
in
fimul
repz
cdq
sti
scas
jb
iret
sbb
sbb
pop
ret
in
mov
dec
ret
ret
fwait
xchg
mov
mov
or
jmp
cmp
push
test
arpl
mov
xchg
xor
mov
adc
ja
cmp
sbb
out
scas
adc
xor
arpl
xchg
sbb
jmp
mov
scas
add
sub
push
gs
pop
ficomp
cmp
std
push
ja
jmp
cmp
and
pop
push
(bad)
das
aad
mov
loop
out
sub
push
jmp
adc
push
inc
pop
jecxz
sahf
shl
xor
nop
repz
xchg
pusha
test
cwde
xchg
lds
ss
dec
xor
retf
push
rol
pusha
add
icebp
mov
es
inc
jl
ins
dec
std
or
cmp
(bad)
dec
shl
pop
dec
or
ins
inc
out
push
cli
pop
loop
(bad)
and
cmp
pop
cs
dec
mov
stc
mov
or
push
enter
dec
push
cmp
sub
fcomp
sbb
jns
test
mov
or
cmp
pop
out
jns
adc
sahf
jl
xchg
test
inc
push
xor
xchg
cdq
sub
mov
adc
add
into
add
push
enter
mov
scas
imul
jmp
dec
cmps
dec
jae
pop
cwde
cmp
aas
and
hlt
inc
ret
mov
test
mov
xor
dec
xlat
adc
or
jne
ss
pop
and
aas
mov
jecxz
add
call
xor
lea
lock
loop
pop
xor
xchg
mov
sbb
psllw
push
pop
sbb
cmc
into
stos
xor
addr16
cmps
iret
pop
hlt
xor
xchg
or
fimul
inc
stc
cdq
jmp
jle
xchg
icebp
ja
pop
mov
loopne
imul
leave
sub
nop
xchg
dec
sbb
jmp
push
cmp
ret
ret
mov
stos
fstp
xor
fwait
jne
cmp
sbb
js
lods
hlt
sbb
outs
jg
or
dec
sub
repnz
hlt
jle
loope
sbb
inc
sub
aas
cdq
retf
push
shr
pop
mov
adc
fisttp
je
retf
fidivr
xor
mov
(bad)
mov
cmp
jb
ret
jmp
test
inc
xchg
push
iret
data16
or
fldenv
or
jl
pop
inc
sub
push
lock
cdq
adc
push
mov
inc
cmc
mov
data16
or
test
ret
adc
fcmovnb
(bad)
(bad)
jg
bound
test
push
inc
xlat
dec
xchg
shr
lock
push
loope
fst
cmp
aaa
imul
jl
mov
div
out
xor
xchg
sub
cmp
mov
mov
loope
mov
aaa
xor
repnz
ss
jnp
sub
rcl
cdq
cmp
xchg
push
mov
sbb
lds
jae
int3
push
jae
and
cmps
mov
popa
sub
int
xchg
shl
fstp
bound
sbb
mov
push
push
jnp
sti
dec
push
pushf
xchg
outs
mov
add
dec
and
lds
jecxz
jmp
sub
xchg
and
dec
or
adc
pop
add
lods
sbb
mov
or
out
je
sbb
adc
mov
mov
pushf
sti
pushf
push
cmp
fcmovnu
inc
dec
dec
mov
jp
cmp
push
push
cld
dec
pusha
jno
scas
push
arpl
test
pop
scas
cmps
sti
or
nop
mov
xchg
daa
test
mov
add
ror
sbb
pop
jno
rol
mov
mov
sbb
or
push
call
rcl
outs
adc
mov
mov
pop
xor
mov
lock
fbld
cmps
cmp
push
call
jecxz
retf
xchg
retf
push
mov
inc
sbb
(bad)
lea
les
and
test
dec
pop
or
inc
jmp
jb
aad
push
sub
jp
mov
stos
or
mov
push
ins
mov
pop
mov
cmp
dec
xchg
jg
jecxz
cmps
mov
je
sbb
inc
inc
push
xor
mov
inc
rol
mov
(bad)
mov
cmps
int3
mov
ss
jmp
ret
pop
(bad)
aam
jnp
or
retf
jbe
mov
jbe
outs
jge
or
adc
and
dec
fs
enter
mov
adc
icebp
mov
iret
mov
imul
fld
cmp
add
les
xchg
in
and
icebp
mov
cld
sub
pop
jecxz
movs
mov
or
mov
push
mov
mov
mov
retf
mov
test
hlt
add
sbb
stos
(bad)
mov
(bad)
or
leave
inc
sub
aaa
jg
out
mov
jge
xchg
lock
mov
movs
mov
mov
stos
mov
fst
pop
daa
(bad)
mov
test
repz
ins
jmp
inc
xchg
jp
cwde
loope
dec
dec
data16
adc
cli
dec
jmp
iret
sub
lea
sub
fisub
iret
inc
and
es
arpl
scas
test
ret
mov
and
cli
test
mov
push
mov
outs
ja
in
outs
cmp
fwait
pop
in
or
mov
xor
xchg
arpl
imul
in
iret
imul
dec
movs
jge
xor
or
out
int3
mov
repnz
hlt
xchg
push
shl
cli
ins
loop
and
jl
sub
scas
fisubr
fld
pop
cmp
and
pop
outs
xchg
ficomp
pop
xor
ds
cmp
mov
sub
loop
mov
lods
adc
mov
mov
fwait
repz
lods
xchg
or
rcr
pextrw
push
(bad)
pop
loope
out
mov
jg
jmp
mov
push
loop
pop
sahf
jmp
sub
(bad)
arpl
xchg
dec
outs
cmp
or
retf
mov
lahf
cmp
ret
cmp
jp
dec
ficomp
fwait
dec
outs
add
xchg
push
out
(bad)
movs
inc
jge
push
fistp
xchg
(bad)
pop
add
es
in
mov
and
enter
jb
ss
popf
mov
add
ins
dec
push
(bad)
(bad)
in
and
add
int
out
call
add
pop
icebp
rcl
hlt
mov
xchg
xchg
jge
popf
push
rcl
cmps
data16
mov
xchg
xor
(bad)
adc
sbb
(bad)
jecxz
aaa
popa
jb
cmp
dec
mov
test
mov
xchg
into
lods
(bad)
cmp
jmp
pcmpeqb
push
inc
pop
ds
cli
xor
or
sbb
int
lahf
cdq
outs
cmp
stc
stc
or
sub
lods
call
loope
pop
xchg
sub
xchg
jbe
jmp
fwait
repz
repz
loop
sbb
test
ret
mov
sbb
push
enter
dec
adc
pop
dec
push
inc
adc
std
je
nop
dec
mov
and
dec
mov
daa
inc
cwde
fucomi
test
and
ins
mov
cdq
fld
adc
stc
ficomp
aas
in
lods
test
mov
fisttp
pshufw
(bad)
call
fld
daa
ins
and
dec
pop
or
ror
mov
movs
retf
(bad)
repnz
dec
fwait
sar
fmul
aas
cmc
or
repnz
add
mov
push
and
stos
(bad)
pop
pop
cmps
mov
sbb
mov
or
ss
cs
cld
lock
cmps
popa
(bad)
mov
je
mov
ror
in
and
xor
mov
xor
xchg
inc
ret
call
sahf
test
pop
bound
jmp
sbb
or
dec
call
fs
std
retf
(bad)
aaa
popf
ret
sub
or
pop
js
and
inc
adc
and
outs
loopne
mov
fadd
jmp
add
and
xchg
(bad)
int3
dec
fwait
or
mov
mov
pusha
or
mov
sbb
inc
adc
(bad)
or
and
xor
imul
xchg
mov
add
outs
jmp
mov
aas
inc
cwde
popf
jb
jmp
pop
mov
xchg
pop
mov
nop
cwde
mov
fcom
retf
int
or
mov
fld
inc
test
cmp
jmp
js
dec
outs
mov
fiadd
inc
adc
mov
rcl
out
out
das
push
jns
add
outs
pop
addr16
fstp
xor
and
mov
xchg
cdq
push
add
and
test
sub
and
or
mov
mov
cmps
push
push
inc
pop
and
or
ja
jmp
jne
adc
les
inc
outs
scas
dec
or
cs
out
cmp
out
stos
inc
push
jmp
sbb
dec
jno
ror
out
bound
mov
rcl
mov
mov
add
arpl
cmp
push
xchg
jle
inc
cmps
push
mov
ret
ds
cmc
jmp
mov
or
mov
mov
sahf
mov
(bad)
dec
aam
clc
ds
mov
scas
lea
add
xor
push
ror
sbb
inc
imul
push
xchg
repz
pop
std
push
mov
pop
sub
sbb
and
aam
mov
test
pushf
movs
fsubr
aaa
mov
lea
jnp
(bad)
mov
out
ins
xlat
add
adc
loope
clc
dec
ja
cld
add
out
stc
cmp
inc
ins
pop
sbb
call
xchg
inc
pop
clc
xchg
lahf
mov
fistp
std
cmp
mov
mov
shl
leave
fs
push
adc
sbb
inc
movs
retf
pop
gs
shl
add
mov
jne
dec
cmps
adc
mov
inc
cmp
adc
push
cwde
fistp
push
jmp
mov
fcomp
pop
inc
pop
shl
cli
add
pop
jae
lahf
(bad)
cmp
push
popa
test
jno
cmps
scas
inc
hlt
mov
scas
xor
dec
push
je
cld
mov
jo
scas
sub
push
lods
loope
pop
mov
jmp
retw
push
jp
xchg
xchg
and
jge
push
xchg
sbb
(bad)
sub
push
or
fdiv
xor
ja
inc
sub
xchg
inc
mov
icebp
enter
jbe
data16
mov
pusha
mov
out
xlat
dec
mov
cli
out
or
xor
mov
jg
cmps
ficomp
add
xchg
and
aaa
ret
test
cwde
mov
and
rcl
jmp
mov
jb
retf
mov
add
push
dec
sub
xchg
cmp
test
call
pusha
imul
jmp
test
xor
xchg
icebp
mov
sbb
stos
test
xor
ficomp
push
inc
lahf
test
aaa
cli
icebp
inc
push
mov
loope
or
repz
xor
pop
jp
out
lods
rcr
outs
into
xor
or
mov
test
add
in
mov
test
adc
and
js
sbb
dec
test
pop
int3
sub
mov
add
fnsave
dec
cmc
add
pushf
fs
add
mov
idiv
adc
cdq
mov
sahf
add
ds
mov
lds
mov
imul
in
and
imul
nop
inc
jbe
jg
dec
xchg
pop
xchg
ficomp
mov
loope
push
sbb
mov
dec
fsub
fld
push
sub
stc
int
mov
ret
and
xlat
and
pop
push
arpl
push
add
or
inc
cli
mov
icebp
lds
ins
inc
outs
or
pop
pusha
mov
imul
mov
test
inc
cli
cmp
mov
dec
mov
ins
outs
dec
dec
test
or
outs
dec
push
in
lods
xor
aam
dec
test
es
(bad)
je
in
xchg
pop
jo
jne
jle
push
and
xchg
jne
add
or
jecxz
mov
push
xchg
sbb
sub
pop
cmp
jmp
leave
out
aad
fsubr
arpl
add
add
pop
pushf
push
jp
push
retf
dec
jnp
lods
jbe
add
jno
adc
sbb
jmp
mov
stc
jg
loope
add
lahf
hlt
test
dec
pop
mov
sbb
mov
(bad)
bound
ficomp
div
adc
fs
add
cmp
adc
(bad)
push
(bad)
aad
jg
add
stos
retf
push
movs
sti
mov
in
sub
in
div
js
repz
sub
daa
cmp
jge
int3
stc
leave
stc
jg
icebp
dec
je
xchg
ror
int3
sub
es
fwait
dec
fdivr
cmp
or
or
xchg
cmp
inc
out
cmp
lea
fsubr
mov
mov
adc
jle
call
rcl
fcom
pop
xchg
xchg
mov
inc
dec
es
push
dec
outs
fwait
call
add
xor
test
inc
scas
mov
add
cmps
cmps
xchg
mov
nop
sbb
jnp
mov
fcom
push
pusha
dec
(bad)
sub
sbb
sbb
pushf
imul
cmp
iret
ins
popf
mov
jle
push
xor
xchg
into
cmps
scas
sbb
xchg
push
push
jnp
stc
ins
mov
xchg
add
out
xchg
clc
test
mov
popf
and
and
ss
sbb
test
(bad)
mov
mov
inc
ret
jno
fcomp
and
pop
or
(bad)
outs
add
stos
lds
mov
xchg
xchg
shl
dec
push
rcl
and
add
jo
mov
xchg
sbb
pop
mov
cmps
cmp
aad
add
and
add
xor
cmp
sbb
add
push
outs
push
mov
ret
fist
jns
inc
out
push
push
fidivr
addr16
and
add
shl
jo
std
inc
jne
mov
dec
cmp
pop
push
je
xchg
into
cmp
mov
adc
jl
inc
outs
and
ja
cli
call
lds
leave
inc
mov
sbb
in
test
ja
nop
sbb
movs
mov
jg
or
paddw
pop
xor
jo
lock
push
pusha
fst
icebp
jle
or
test
or
sub
daa
jecxz
pop
sub
and
mov
push
fidivr
and
loope
sub
inc
mov
call
pcmpgtw
cmps
je
popa
imul
sti
aaa
mov
mov
push
shl
jg
dec
mov
xchg
ins
jo
loope
dec
cmps
loope
loope
sbb
jg
xchg
adc
in
dec
aad
jmp
jne
dec
xor
stos
add
adc
das
outs
push
and
jae
xchg
jns
dec
sub
push
shr
pop
mov
cld
pop
xor
test
adc
in
ret
test
xor
pushf
cmps
push
test
pop
xlat
ror
mov
stc
xchg
and
sbb
sahf
inc
adc
clc
inc
or
mov
push
(bad)
fwait
mov
ficom
mov
aam
jb
out
shl
out
scas
popa
xchg
push
jmp
outs
mov
pop
or
enter
dec
in
sbb
cld
mov
push
gs
loope
cmp
cwde
cmp
dec
shr
call
adc
ror
push
jno
sub
cmp
inc
ins
pop
mov
inc
(bad)
rdmsr
sub
adc
push
xchg
jnp
xchg
pop
ins
mov
lock
pop
idiv
leave
jp
pmaxsw
pop
and
xchg
out
dec
jae
jmp
fsub
xor
ror
adc
adc
loope
xchg
sbb
ins
jmp
aas
lock
jecxz
push
cmp
clc
inc
test
into
sti
ret
and
cmp
aaa
add
or
lea
std
jb
(bad)
jb
mov
xchg
(bad)
fld
pop
pop
sbb
or
xor
outs
sahf
jmp
test
inc
std
mov
xor
aas
mov
adc
xchg
inc
stos
test
out
or
cmp
ja
sbb
out
xchg
aad
stos
int3
nop
and
data16
fcmovu
into
rol
sub
int3
pop
ins
rcr
and
cs
pop
inc
push
xchg
ins
or
inc
psrlw
stos
mov
adc
call
and
aam
ret
fdivr
sbb
loopne
sub
xchg
and
loope
mov
dec
test
addr16
je
sub
adc
test
inc
arpl
inc
(bad)
shld
mov
ret
ins
test
fist
fwait
(bad)
int
mov
aad
xlat
mov
mov
dec
ficom
scas
cmc
xchg
mov
enter
sub
jecxz
mov
xor
adc
pop
aas
into
repz
jnp
loope
dec
ret
(bad)
cmp
inc
jmp
iret
cs
dec
imul
loop
leave
lods
into
adc
cmps
cmp
das
mov
pusha
mov
fwait
outs
xchg
call
push
and
shl
inc
mov
pusha
retf
out
aas
mov
div
ret
pop
jnp
mov
les
in
add
pop
nop
das
shr
pop
jb
sub
das
adc
or
dec
gs
imul
dec
fs
add
cmps
call
icebp
test
xor
mov
inc
call
out
jl
push
push
mov
fs
adc
pop
cmc
sti
mov
pop
push
in
dec
jno
aaa
pop
pop
jmp
pop
lods
dec
inc
dec
sbb
fsub
sbb
xor
or
mov
mov
mov
push
cmp
jne
out
mov
aad
lahf
fidivr
je
push
pop
push
xor
iret
dec
cmp
(bad)
sub
add
scas
shl
enter
sbb
jo
push
pop
fiadd
out
jge
jg
inc
adc
addr16
cmp
cmps
test
out
popa
jmp
pop
out
sub
and
out
lods
and
popf
(bad)
call
cmp
cmp
hlt
test
test
sub
js
dec
out
fisubr
dec
test
imul
xchg
and
and
jbe
rep
mov
mov
or
paddsb
cmp
inc
rep
inc
jl
imul
(bad)
sub
call
and
xor
sbb
(bad)
mov
loop
xchg
add
lea
push
gs
pushf
cmp
mov
and
dec
ds
lds
(bad)
dec
shl
ds
movs
inc
xor
add
pop
stc
mov
or
mov
mov
mov
(bad)
jecxz
jg
outs
jbe
pop
movaps
dec
cmps
gs
sub
add
sti
push
mov
xor
adc
stc
mov
lds
mov
mov
sub
xlat
sub
ins
mov
push
lock
xor
in
hlt
jae
iret
shl
pushf
xchg
sahf
imul
cmp
repz
dec
fst
push
cmps
mov
ds
jge
sbb
stos
div
sub
(bad)
inc
aaa
mov
inc
cli
fnstsw
or
sbb
mov
jne
not
pusha
inc
xor
in
das
push
jmp
push
ins
ret
out
loope
inc
jecxz
ins
inc
add
mov
cmp
fistp
add
fcomp
outs
(bad)
arpl
cwde
setns
push
arpl
inc
call
loope
bound
cdq
or
xor
jb
in
jg
cdq
daa
sahf
add
outs
jns
inc
jo
mov
mov
inc
ja
ins
imul
pop
push
jp
sti
repnz
push
stc
(bad)
dec
shl
jmp
mov
pop
arpl
or
cmps
addr16
xchg
sbb
idiv
sar
xor
dec
fs
sbb
push
cmps
loope
dec
(bad)
mov
mov
(bad)
sbb
inc
push
or
dec
mov
lahf
fild
or
inc
sbb
push
mov
or
cdq
loopne
jg
xchg
sub
aad
add
pop
and
xor
pop
sbb
lods
mov
xchg
out
jp
mov
fsubr
or
mov
cmc
mov
jg
cmp
mov
test
inc
rcl
cmps
dec
and
fist
mov
push
mov
out
sub
js
imul
jns
dec
push
mov
imul
jmp
ss
dec
jae
lods
add
lock
pusha
ins
cmp
jne
imul
pop
pushf
in
ret
dec
or
sahf
push
and
aam
mov
pop
je
ret
ret
jge
xor
ret
cmp
in
(bad)
adc
xchg
scas
fst
inc
ret
dec
pusha
in
scas
and
in
jne
ret
sub
jg
(bad)
mov
jl
sbb
imul
or
jl
imul
loope
loope
jmp
or
jge
mov
clc
push
aam
arpl
and
mov
cli
ds
mov
cli
sub
les
aam
mov
mov
jmp
leave
mov
or
mov
addr16
mov
bound
dec
in
mov
das
inc
jl
clc
test
hlt
ds
lods
inc
js
jb
xchg
jg
test
mov
adc
add
mov
rol
out
push
or
call
and
loope
inc
imul
stos
je
mov
rcr
adc
in
push
leave
sbb
jno
adc
mov
adc
stos
xchg
dec
sti
scas
sbb
mov
sar
and
(bad)
jnp
and
inc
xchg
repz
shl
add
es
mov
stc
stc
repnz
inc
xchg
lods
or
jle
mov
fmulp
ins
push
or
sbb
out
movs
push
or
loope
shl
dec
sbb
fstp
mov
into
repnz
jae
pop
test
in
mov
push
and
outs
sub
cmps
add
shr
mov
mov
add
mov
push
sbb
pushf
(bad)
fst
mov
sar
rcl
stos
adc
adc
push
out
jle
idiv
push
lds
sbb
popf
jmp
and
cmp
dec
rcr
inc
jne
cmp
jno
movs
adc
jmp
(bad)
fwait
xor
bound
cmc
sbb
(bad)
add
cwde
jl
in
xor
sub
outs
dec
inc
or
xor
ins
cmps
fnstcw
xor
aas
mov
push
in
iret
rol
sub
fsubp
mov
dec
mov
cmovp
mov
ret
mov
pop
mov
xchg
xor
movs
shr
and
fwait
xor
fnstenv
pop
(bad)
dec
test
mov
cli
adc
jecxz
dec
sbb
loop
leave
popa
cwde
pop
push
xor
adc
(bad)
mov
sar
jge
daa
mov
ss
sbb
dec
push
popf
add
daa
fadd
std
(bad)
fld
inc
pop
jbe
mov
cwde
pop
xlat
popf
add
(bad)
cwde
inc
inc
jo
ja
es
pop
int3
push
jle
or
fld
jne
movs
das
fld
fldl2t
pop
mov
mov
call
xchg
(bad)
loop
(bad)
je
leave
xor
lea
fstp
lahf
cmp
pop
sbb
and
inc
xchg
je
ins
lahf
xor
bound
or
mov
and
inc
pushf
add
js
stos
add
and
sub
adc
aas
sti
aam
inc
ret
inc
scas
ds
imul
sub
ret
retf
pushf
ret
addps
adc
shl
dec
push
jb
loop
or
sub
push
retf
scas
sbb
cdq
jg
jmp
inc
sub
retf
pop
hlt
or
xchg
pusha
test
inc
in
daa
cmc
jmp
push
xchg
or
mov
pop
adc
inc
sub
and
loope
outs
fwait
imul
mov
mov
out
sub
adc
lahf
in
stc
ja
ror
cmps
pop
(bad)
in
push
mov
inc
or
dec
adc
cwde
and
enter
imul
push
repnz
dec
dec
das
int3
call
sbb
adc
lahf
ficomp
das
and
mov
mov
mov
and
mov
mov
test
xchg
jnp
iret
push
out
in
mov
jmp
imul
mov
pop
shl
push
pop
and
mov
enter
cdq
pop
nop
cmp
sub
rol
push
cs
movs
enter
and
inc
pop
jb
gs
mov
and
es
add
push
js
shl
ins
pusha
jp
sbb
movs
or
and
stc
fsubr
movs
cmp
adc
xlat
push
push
mov
xlat
or
adc
dec
ret
jo
push
in
or
lock
dec
(bad)
mov
dec
scas
test
(bad)
in
fidiv
inc
inc
pusha
into
cld
ficomp
xor
inc
das
aaa
push
pop
aam
ja
movs
lds
push
cmps
xor
sbb
adc
retf
lea
sbb
pop
repz
in
inc
arpl
mov
cli
ret
test
mov
scas
pusha
jmp
into
rcl
setp
and
(bad)
mov
mov
jbe
pop
sbb
push
adc
call
add
mov
adc
pop
out
stc
mov
sub
sbb
dec
sub
or
loop
mov
stos
sub
dec
adc
pushf
imul
inc
push
outs
inc
fmul
nop
(bad)
mov
sub
ja
xchg
sbb
mov
push
and
rcr
add
and
dec
adc
push
fidivr
jmp
pusha
cmovae
mov
dec
jo
mov
pushf
mov
sahf
daa
cs
daa
dec
fwait
add
icebp
lock
dec
inc
enter
fnstsw
mov
mov
dec
aas
mov
ret
test
mov
leave
ret
dec
xchg
cmp
jecxz
mov
jmp
mov
in
sti
xchg
sbb
mov
cmp
cmps
xor
paddsw
mov
push
sbb
or
std
add
(bad)
mov
repz
(bad)
scas
inc
push
pop
jge
mov
into
(bad)
cmp
jecxz
outs
cld
lods
mov
dec
mov
sub
add
pop
(bad)
call
adc
and
pop
sub
(bad)
sbb
and
sar
stos
push
(bad)
shl
and
and
sahf
xor
mov
xchg
repnz
ss
mov
arpl
mov
cdq
inc
xor
lds
cmps
(bad)
xchg
cmp
retf
loop
outs
mov
sahf
stos
pop
rcr
xor
jb
mov
lea
xchg
sub
call
or
jb
jmp
test
(bad)
mov
imul
pop
ret
push
inc
and
sbb
jns
or
sub
mov
mov
sub
sub
in
inc
cmp
test
mov
gs
movs
mov
scas
loope
dec
adc
adc
frstor
(bad)
std
lods
dec
sbb
movs
adc
jl
and
jmp
sbb
sub
sbb
les
pop
ds
and
aaa
repz
push
mov
adc
ret
and
cmp
pop
test
pusha
gs
imul
nop
lea
ror
push
inc
sahf
mov
jg
xor
shl
xchg
xchg
jo
lds
pushf
cmp
dec
sar
mov
and
(bad)
jae
xor
push
jmp
push
adc
out
mov
bound
ins
xor
mov
aad
shr
lds
call
push
pop
push
push
and
fimul
sti
int
jp
sub
cs
shr
in
mov
or
inc
mov
mov
movs
pop
in
fisub
shr
pop
or
call
out
(bad)
fwait
shr
dec
push
scas
pop
rol
pop
mov
inc
pushf
xchg
in
or
icebp
scas
adc
and
fld
mov
lods
popa
push
in
js
gs
into
cmps
pop
pusha
inc
xor
ret
fild
dec
in
mov
retf
in
nop
xor
test
dec
pop
cmps
pop
dec
adc
inc
cmovne
mov
test
xchg
jae
mov
pop
cli
xor
and
xchg
shr
inc
mov
int
cli
scas
or
(bad)
(bad)
mov
in
mov
mov
mov
retf
(bad)
fs
fisttp
and
push
push
retf
mul
gs
mov
mov
cmp
xor
pop
jmp
push
dec
repz
push
call
dec
mul
jp
push
cmp
mov
(bad)
in
cmc
adc
fwait
out
inc
sub
xchg
hlt
scas
lock
adc
push
loop
icebp
cmp
mov
clc
enter
std
or
retf
jne
push
ret
daa
inc
and
aam
push
pop
imul
ins
pop
mov
push
bound
sub
jg
push
adc
(bad)
enter
adc
outs
ret
inc
repnz
(bad)
inc
jns
dec
loopne
mov
ror
mov
mov
xor
cwde
sbb
rcr
pop
xchg
out
jbe
fwait
out
sbb
jge
push
mov
pushf
imul
or
inc
cmps
dec
cwde
mov
movs
push
xor
dec
ret
int
ss
mov
out
sbb
adc
out
mov
fs
inc
lock
mov
fcmovne
inc
shl
mov
add
inc
and
adc
cld
jmp
xchg
hlt
loopne
sti
mov
in
ret
inc
cld
sub
push
frstor
outs
dec
pop
repz
pop
mov
dec
and
push
ret
test
js
into
iret
fs
cmp
mov
scas
add
sbb
not
arpl
out
lds
mov
dec
int
mov
mov
loope
xchg
mov
mov
lods
popf
pop
pop
fist
adc
dec
aaa
shr
(bad)
push
cmps
out
dec
jmp
add
sub
or
sub
cmp
or
psubw
mov
shl
or
pop
(bad)
call
pop
aas
out
pop
inc
pusha
stos
cmp
xchg
(bad)
std
mov
aaa
call
inc
enter
(bad)
neg
mov
or
xor
cmps
xchg
pop
inc
pop
mov
cli
mov
ror
scas
mov
push
mov
mov
shr
jne
test
loop
shr
popa
xchg
mov
gs
movs
vpandn
aaa
push
adc
adc
pop
out
jnp
dec
dec
aad
xchg
xchg
aas
mov
xor
jg
je
jbe
les
jno
sbb
jb
fwait
stos
pop
xor
push
push
fcmovb
jo
inc
mov
xor
pop
outs
enter
jl
jno
push
pushf
inc
std
ja
dec
jge
es
push
xchg
dec
mov
pusha
test
ret
scas
or
(bad)
xchg
dec
js
test
aam
pop
lods
adc
sub
sbb
inc
inc
jmp
or
shl
ss
dec
inc
inc
clc
cdq
cmp
test
pushf
adc
int
jl
test
les
repnz
pop
js
adc
mov
sub
jne
jnp
sbb
mov
addr16
xlat
push
jg
xor
cmp
into
gs
fdivr
push
dec
xor
inc
je
xor
in
das
and
jge
js
popf
retf
push
add
lock
inc
or
pop
shl
add
inc
xchg
jbe
test
(bad)
icebp
and
dec
xchg
leave
add
fnstsw
and
dec
test
mov
inc
push
xchg
ja
jae
mov
mov
les
bound
shr
add
push
xchg
ins
pop
popa
or
iret
fwait
ins
cmps
aas
in
nop
xchg
(bad)
cwde
xchg
mov
leave
inc
xor
das
fwait
inc
inc
push
cmp
jno
cmp
mov
ja
bound
lds
cli
(bad)
mov
jne
adc
shl
(bad)
sbb
sub
inc
pop
mov
xlat
icebp
sub
mov
test
ins
(bad)
pop
xchg
(bad)
xlat
in
cmp
inc
das
fistp
mov
hlt
shl
sbb
lahf
mov
into
xchg
mov
push
cmp
xchg
shl
push
jp
xchg
frstor
xchg
addr16
outs
mov
add
sub
popa
mov
or
push
fs
pop
in
mov
xchg
add
cmp
xor
repz
aad
and
xor
jne
shl
adc
(bad)
push
mov
jnp
jae
cmp
inc
sub
fcom
or
mov
push
cmp
xor
cs
fmul
jne
pop
fmul
sbb
push
loope
lods
out
(bad)
mov
jae
jl
imul
xchg
jns
xor
mov
(bad)
test
shl
popf
imul
aad
scas
mov
inc
cdq
mov
mov
jecxz
fidivr
adc
sahf
iret
in
ds
iret
(bad)
pop
fs
pop
scas
or
jl
shl
cmps
mov
outs
movs
mov
movs
ret
or
mov
jae
mov
sbb
dec
mov
mov
test
rol
hlt
push
mov
(bad)
stc
jg
push
jmp
cld
stos
xchg
dec
jp
xor
cmp
fst
dec
es
sbb
sub
stc
jnp
add
icebp
jmp
jmp
mov
pushf
hlt
cmp
or
push
shl
jb
popa
jo
and
sub
dec
jmp
outs
ss
(bad)
fist
je
fld
sbb
rcr
mov
test
ficom
xchg
js
aas
sbb
jbe
stos
mov
je
adc
jns
dec
push
cs
and
push
cmp
mov
mov
popa
mov
jge
adc
out
pop
ror
(bad)
adc
sub
sti
mov
pop
dec
xchg
mov
jmp
lock
rol
xchg
out
sub
mov
inc
sar
jno
add
cmps
aas
sbb
scas
xchg
and
mov
and
mov
inc
and
popf
or
inc
call
add
mov
aam
sbb
sbb
xchg
fistp
pop
sbb
or
inc
fnsave
sar
leave
cli
mov
sbb
mov
inc
sbb
lods
pop
shr
pop
xor
loop
xchg
push
iret
or
call
es
cmps
test
aam
outs
div
mov
or
adc
mov
or
mov
dec
ins
jo
aas
mov
pop
xchg
out
push
mov
xchg
cmps
gs
cmc
or
or
and
fmul
sbb
and
jmp
adc
aaa
into
js
ret
cmp
mov
pop
fwait
in
or
shl
out
fisub
retf
xor
sahf
sbb
push
xchg
mov
sub
pop
pop
call
stos
clc
call
dec
in
dec
and
stos
aas
(bad)
sub
mov
mov
inc
cmp
add
arpl
arpl
lds
xchg
lods
shl
fdiv
cmc
and
test
xlat
inc
xor
sub
xchg
cs
sbb
inc
cmc
fsubr
mov
clc
fdivr
inc
inc
hlt
pop
ja
stos
cmp
push
and
add
neg
jecxz
push
loopne
or
inc
test
sub
xor
pop
push
mov
ds
adc
cmc
sbb
cmps
xor
ret
not
out
xor
or
lock
pop
out
pop
jg
or
mov
js
cld
xor
inc
hlt
mov
icebp
shr
push
aam
push
mov
push
inc
fwait
cmp
movs
(bad)
cmc
push
add
in
mov
push
xor
inc
jae
mov
cmps
cld
(bad)
jge
repnz
cwde
test
and
inc
dec
fnstsw
icebp
mov
into
pop
dec
add
les
sub
or
sub
xor
cs
mov
push
cmp
mov
in
xchg
in
scas
mov
dec
cli
sbb
idiv
cmp
sbb
or
pop
daa
or
sbb
out
movs
shl
test
xor
xor
out
js
cdq
icebp
dec
loop
sbb
xchg
xor
mov
sbb
bound
push
jg
sub
arpl
loope
ja
inc
ins
inc
sub
add
leave
test
dec
mov
in
out
cs
sbb
jae
or
mov
inc
xchg
jo
adc
add
xor
dec
aam
fidiv
call
sub
sub
dec
mov
leave
sti
sub
in
imul
loope
ret
fldenv
xchg
out
sub
xchg
(bad)
jo
or
aam
ds
or
xor
leave
int
add
ins
retf
imul
imul
jecxz
pop
cld
nop
pop
inc
pop
xor
div
out
pop
pop
and
mov
ret
inc
jne
les
stc
daa
jnp
aam
pop
adc
and
jns
movs
test
ins
test
push
lahf
mov
retf
je
mov
fdiv
mov
cmp
(bad)
or
test
out
stos
out
sbb
or
mov
sub
clc
pop
daa
or
lods
xchg
or
and
cs
out
into
xor
rol
cld
fs
push
and
movs
xlat
into
fld
ror
aam
add
mov
cmps
repz
xor
in
push
mov
fnstenv
adc
ds
or
mov
retf
jmp
cmp
outs
inc
int
ins
push
stos
stos
fwait
in
push
sbb
sub
push
jmp
clc
hlt
aaa
popf
cli
push
cmp
enter
adc
push
pop
adc
mov
sbb
fcmovu
or
jl
arpl
or
and
(bad)
cmp
push
sub
pop
test
mov
fs
lea
frndint
cmps
addr16
hlt
imul
sbb
push
nop
push
mov
outs
icebp
ja
jmp
push
movs
pop
push
sub
int3
add
int3
popa
fwait
inc
push
jb
sbb
sbb
pop
adc
(bad)
or
lds
pushf
push
call
mov
mov
adc
cmps
inc
jg
popa
mov
jp
cli
cmps
jmp
mov
ret
in
iret
sub
sbb
xor
cmp
push
movs
inc
shl
jno
cmps
fsub
cmp
les
xchg
movs
adc
mov
push
inc
in
xlat
pop
xor
jb
stc
pushf
push
jmp
sbb
bound
push
dec
dec
out
pop
int3
pusha
mov
lahf
cld
cmps
pop
push
out
aad
add
clc
leave
aam
ins
pop
or
je
and
mov
out
mov
sti
ins
and
or
test
push
pop
dec
ins
add
xchg
sub
icebp
mov
fchs
mov
inc
jmp
sub
mov
daa
jb
xor
pop
test
shl
xor
js
mov
mov
push
int
imul
sbb
push
stos
mov
movlps
out
add
add
add
scas
pop
sub
je
jb
rol
xor
push
shl
ret
xor
add
leave
inc
call
adc
ror
mov
and
mov
push
adc
add
mov
call
sub
int3
repz
cdq
xor
jno
mov
and
cmp
jp
sub
and
loop
mov
mov
xchg
and
xchg
stc
add
fstp
pop
ds
inc
mov
mov
adc
lea
xchg
xor
cld
jg
mov
lods
hlt
inc
push
add
xor
add
cmp
push
sub
fiadd
fisubr
fwait
and
nop
add
cmps
sbb
ret
test
jle
or
pop
inc
fsub
fidivr
lock
inc
fwait
jp
or
leave
lds
push
daa
xor
sbb
mov
adc
xchg
stc
fsubp
idiv
xchg
in
outs
fcomp
jnp
jle
cmp
(bad)
pushf
ss
hlt
int3
and
mov
fisttp
test
mov
and
aaa
scas
fcom
dec
pop
pop
sub
push
sbb
bound
adc
sbb
je
push
imul
jb
mov
cli
sbb
pop
popa
or
and
jbe
cmp
test
mov
push
cmp
stc
xor
gs
sbb
mov
sahf
outs
add
mov
aam
inc
fist
mov
fdivr
test
popa
push
cmps
scas
add
stos
stc
int3
cmps
cld
les
fst
dec
push
(bad)
fimul
aam
outs
inc
aaa
jecxz
jmp
lods
dec
cdq
cmp
sub
int3
jl
cmp
push
into
je
mov
aaa
or
jecxz
pop
cmp
les
test
ja
xchg
pop
popf
pavgb
lahf
outs
inc
ins
shl
push
cld
xor
push
ficom
dec
adc
mov
and
or
push
mov
mov
loop
shl
mov
icebp
push
xchg
and
lahf
loop
in
xchg
xchg
aad
repnz
mov
popf
movs
into
cmp
cmp
add
and
rol
daa
pop
jnp
stos
cmp
add
inc
int
jmp
xchg
popa
ror
mov
or
inc
dec
cmps
jbe
push
int3
icebp
aas
clc
adc
int3
inc
xor
out
es
mov
mov
inc
(bad)
int3
and
mov
pop
scas
push
test
or
inc
ret
(bad)
in
xor
lahf
cmc
out
sub
aad
sub
scas
pop
mov
mov
shl
fcomp
jne
in
lock
fsubr
add
leave
or
in
dec
pushf
fbstp
sbb
lock
dec
sub
cs
or
or
dec
pop
jle
or
jle
mov
lods
add
sub
mov
dec
fiadd
mov
pcmpeqw
cmp
jecxz
retf
movs
fwait
repz
das
cmp
stos
out
mul
xlat
jne
xor
pop
mov
or
or
inc
push
xchg
lahf
sahf
aad
add
repnz
mov
mov
jmp
push
cmp
add
pop
push
pop
inc
sbb
cwde
cs
jmp
sahf
fistp
pop
fs
push
out
pop
outs
xchg
out
pop
cld
test
cmp
sub
or
dec
jg
xlat
xchg
push
mov
aaa
int3
and
pop
scas
in
jbe
out
(bad)
jmp
push
and
mov
out
aas
xchg
push
inc
cmp
cmp
aaa
ja
mov
aad
mov
adc
fwait
xchg
mov
pushf
cmp
je
(bad)
addr16
retfw
arpl
stos
jp
inc
je
call
dec
mov
lea
mov
dec
add
sub
mov
popa
xchg
fcmovnb
mov
jnp
push
and
cld
(bad)
sbb
mov
add
ret
add
jns
add
cwde
dec
retf
aad
mov
(bad)
cdq
dec
lahf
clc
jl
cwde
inc
push
(bad)
ins
test
test
clc
pop
rcl
add
fldcw
mov
out
into
ins
or
loope
xlat
add
pop
std
xchg
int
sbb
mov
pop
lea
in
js
out
in
push
mov
push
mov
(bad)
ins
pop
sar
jns
xchg
das
xor
int
push
sbb
retf
pop
adc
push
mov
sub
inc
popf
inc
mov
aaa
dec
dec
cwde
imul
or
push
ud2
ins
jmp
jecxz
shl
das
cwde
jle
(bad)
jle
outs
mov
pop
in
fcmovnb
imul
ror
mov
pop
mov
test
fidivr
ins
cmp
push
aam
repnz
pop
pop
fs
mov
fstp
imul
sub
sbb
call
and
mov
jecxz
pop
push
jle
in
add
adc
fcomp
push
stos
jmp
loopne
xchg
loope
pop
pop
call
enter
das
xchg
adc
cmp
test
imul
push
repz
movs
pop
fld
and
ret
pusha
sbb
inc
or
inc
cli
in
fisub
dec
rcl
fild
mov
dec
shl
sub
scas
stos
fdiv
inc
xlat
xchg
retf
repz
mov
es
daa
test
js
mov
mov
dec
dec
shr
sbb
and
or
iret
pop
scas
aad
mov
mov
add
cdq
push
frstor
xor
pop
iret
push
cld
ins
hlt
push
pop
dec
popf
(bad)
lock
add
shl
adc
ss
xor
out
cmp
pop
mov
sbb
pop
jno
loopne
aam
out
jge
sbb
sti
test
ds
mov
and
(bad)
xchg
mov
fadd
or
push
or
(bad)
push
adc
and
in
xor
rcl
jle
cmps
sbb
sbb
popf
inc
mov
adc
mov
in
pop
rcr
or
mov
adc
sbb
call
fcomp
(bad)
shl
mov
popa
aad
dec
adc
fwait
xor
pushf
shl
ins
cmp
lods
fimul
or
out
push
not
and
aam
jns
movs
addr16
jae
xor
sub
mov
imul
dec
ins
scas
ror
stos
dec
jp
mov
and
aad
out
std
cmps
dec
cmp
movs
std
cdq
(bad)
int3
adc
das
gs
dec
jae
mov
inc
fidivr
xor
sar
jns
fdivr
movzx
call
mov
pushf
dec
hlt
jp
aad
mul
and
push
out
lahf
xchg
fcom
adc
out
cmp
(bad)
xor
fldcw
jns
xor
stos
ror
mov
pop
(bad)
addr16
fiadd
cmp
ror
add
leave
jp
cld
aam
outs
sub
sub
cmp
inc
dec
jbe
mov
icebp
pop
push
pop
gs
cmp
(bad)
(bad)
bswap
fcmove
xor
(bad)
push
fst
cmp
cli
daa
movs
jp
movs
adc
nop
addr16
mul
xchg
(bad)
dec
mov
shr
xchg
inc
and
das
push
imul
dec
pop
cwde
jl
mov
pop
mov
xchg
add
es
or
mov
ds
cmc
stc
pop
and
gs
adc
data16
push
sub
pop
cmp
xlat
inc
ret
outs
push
xor
(bad)
loopne
not
rol
inc
outs
test
outs
loop
jne
sub
xchg
ss
inc
imul
lods
movs
push
inc
mov
fimul
mov
ins
test
enter
push
cmp
xchg
add
enter
mov
pop
push
ds
pop
mov
dec
pusha
jg
or
push
pushf
cmp
xlat
mov
addr16
popf
shl
mov
inc
ins
mov
loopne
jns
fsub
pop
push
cmps
and
mov
add
and
inc
mov
jne
loope
jae
retf
adc
rol
(bad)
jmp
dec
out
or
repnz
inc
or
add
mul
inc
jb
sub
mov
pop
scas
and
sbb
in
or
jmp
xor
es
pop
repnz
ret
dec
aad
jbe
mov
(bad)
jmp
pop
dec
dec
or
sub
xchg
mov
push
shr
adc
mov
jmp
jo
jbe
or
mov
(bad)
popa
jle
mov
out
sahf
or
jge
lods
xor
pop
int3
call
xor
and
xchg
nop
lahf
clc
adc
es
dec
sub
push
enter
sub
cwde
enter
lds
xchg
mov
xor
pusha
mov
repz
xchg
out
sbb
test
nop
lock
sbb
push
xchg
ja
push
in
retf
mov
dec
arpl
out
cli
mov
mov
add
push
sub
cmps
js
adc
cs
add
repz
and
push
jge
jecxz
inc
sub
(bad)
mov
mov
sbb
adc
call
test
jecxz
hlt
xor
pushf
iret
xor
cmps
mov
sbb
es
jae
push
pop
jae
or
and
icebp
iret
inc
scas
gs
inc
push
les
pop
in
iret
xchg
stos
js
mov
rcr
mov
fst
fcomp
fwait
ja
pushf
ja
xchg
repz
(bad)
fcomp
jae
repz
or
jne
sbb
xchg
aad
mov
push
cmp
leave
cs
jb
cmp
jae
sbb
dec
dec
add
push
push
jno
pop
jb
cmp
out
xlat
pop
pop
lahf
mov
sub
dec
sbb
cld
jns
sbb
stos
out
popa
jmp
lds
cld
mov
(bad)
add
mov
and
mov
cmp
mov
push
mov
ret
iret
inc
mov
in
or
pop
into
xchg
jbe
cmp
scas
out
jge
outs
ret
dec
lock
jle
in
xchg
xchg
mov
js
pop
and
data16
retf
fs
lock
and
ret
and
jb
xchg
leave
cmp
jmp
sbb
data16
inc
add
movs
scas
hlt
inc
mov
in
pop
stos
or
fidivr
int3
retf
mov
xchg
inc
push
int
cwde
dec
xchg
popf
add
push
test
jp
mov
xor
adc
cmp
or
into
popa
cmp
push
gs
mov
mov
jbe
adc
mov
push
mov
or
mov
mov
sbb
xchg
jnp
arpl
sar
retf
or
scas
xchg
mov
cmc
dec
mov
or
mov
adc
lock
mov
test
xor
test
sbb
pop
push
push
push
sti
dec
sub
sub
adc
ror
pop
mov
mov
or
jp
pop
add
pushf
cmp
arpl
xchg
sbb
cmc
or
mov
mov
arpl
repnz
out
jnp
or
pop
dec
out
jo
lock
ins
fiadd
cdq
ja
mov
loopne
loope
movs
dec
test
outs
outs
xor
or
push
neg
jmp
das
(bad)
adc
fnsave
pop
or
leave
sti
dec
inc
ret
mov
pop
rol
xchg
adc
mov
push
add
mov
pop
sbb
dec
lods
imul
ret
nop
pop
push
mov
fbstp
adc
(bad)
dec
mov
or
pop
dec
cld
aas
retf
fs
jge
mov
mov
daa
(bad)
movs
imul
xchg
fs
sbb
mov
xor
mov
jb
jecxz
push
das
repnz
pop
xchg
sar
popf
or
sub
call
and
mov
in
lods
outs
inc
pusha
inc
fldcw
dec
inc
and
repnz
or
les
sub
test
push
dec
ret
not
mov
fs
dec
arpl
pcmpeqw
and
fucomip
xchg
mov
mov
adc
jnp
and
ja
(bad)
popa
daa
ficom
es
movs
fwait
jg
mov
inc
fdiv
xor
sbb
jae
xchg
add
xor
fstp
sub
dec
mov
sbb
in
imul
add
mov
jge
dec
pop
ins
xlat
dec
jmp
fmulp
mov
xlat
mov
in
adc
pop
ds
loopne
sub
mov
cdq
and
sbb
call
fsub
movs
adc
movs
jmp
sbb
add
dec
pop
ja
mov
pop
sbb
inc
mov
jge
jp
mov
xchg
xor
inc
and
inc
xchg
stos
or
fnstcw
cli
out
int3
sahf
xchg
ja
cmp
sbb
mov
mov
test
push
gs
iret
int
dec
out
push
cs
ins
sbb
cwde
inc
inc
(bad)
cs
sub
je
mov
mov
(bad)
sti
sbb
adc
dec
int3
nop
mov
push
je
push
addr16
test
or
js
mov
imul
(bad)
fisub
xchg
stos
jbe
mov
rol
int
add
mov
mov
cli
(bad)
repz
mov
outs
sub
(bad)
add
cmp
je
call
div
xchg
xchg
lahf
lods
and
jmp
cmps
push
ja
arpl
lods
dec
inc
hlt
shl
xchg
popa
out
or
push
cwde
lds
pop
mov
dec
test
add
inc
inc
stc
(bad)
mov
add
cmps
xchg
icebp
sbb
push
mov
inc
or
mov
cwde
cmp
cmp
jmp
movs
xchg
or
sbb
repz
and
jmp
std
adc
int3
ficom
loopne
push
retf
out
call
cdq
mov
pop
dec
xor
mov
sub
or
mov
xchg
adc
sbb
and
jo
js
mov
dec
enter
xor
loopne
cmps
stos
dec
pop
push
jle
fst
shr
dec
cdq
dec
ss
xlat
push
xor
js
stos
sbb
or
js
dec
and
mov
jmp
lods
sahf
mov
push
bound
test
adc
fidiv
stos
in
pop
dec
mov
fiadd
ins
cld
into
ds
sub
scas
cld
addr16
cmps
(bad)
mov
push
cmp
or
pop
sar
mov
ret
repz
cld
imul
dec
gs
mov
push
inc
fcomp
(bad)
and
xor
sub
fcom
shl
pop
sbb
jle
mov
pop
xchg
outs
push
scas
sbb
fcmove
out
mov
cdq
lahf
push
jns
lds
mov
mov
scas
xchg
or
push
pop
mov
adc
xchg
jmp
add
test
jae
in
out
inc
adc
or
sub
fwait
dec
dec
xchg
sub
add
lods
cmp
retf
push
sub
sub
jle
jnp
push
cmp
jnp
adc
fsubr
(bad)
imul
icebp
fwait
mov
pop
jmp
mov
inc
pcmpgtw
mov
jno
(bad)
jmp
enter
mov
add
xor
adc
(bad)
pop
aad
(bad)
inc
scas
sub
fwait
adc
fiadd
cdq
fst
cdq
imul
pop
leave
mov
push
pop
pop
stos
xor
pop
mov
push
jb
retf
xchg
out
ds
adc
(bad)
xchg
sbb
xor
cmps
adc
and
lock
pop
out
xchg
add
fbld
in
sub
cmp
xchg
sbb
test
fwait
push
retf
fwait
inc
xchg
std
add
add
jecxz
loopne
pop
lods
into
and
shl
xchg
loope
xor
pop
stos
xchg
into
jae
scas
cmc
push
pop
sub
out
push
out
mov
cmp
push
add
jb
movs
stc
mov
and
xor
xchg
xchg
pop
ficom
xchg
inc
or
xchg
cmp
aaa
push
dec
adc
mov
mov
cwde
inc
pop
into
and
add
cs
in
outs
jnp
and
mov
mov
mov
popa
sbb
sub
imul
mov
mov
xchg
loope
lods
ins
add
or
pop
and
xor
stos
retf
push
add
scas
loop
mov
test
lahf
lods
(bad)
int3
xchg
mov
(bad)
out
fadd
sub
test
jecxz
ds
push
mov
dec
push
adc
inc
cld
inc
push
cmps
xor
mov
mov
mov
pushf
in
ret
cmp
leave
in
daa
xor
call
enter
repz
mov
fst
test
les
out
pop
xchg
xchg
xchg
(bad)
jle
into
inc
repz
lds
fimul
mov
js
imul
mov
arpl
rol
mov
aaa
jbe
mov
xchg
fidiv
fbstp
jbe
xor
daa
loop
mov
call
inc
push
or
enter
fwait
push
or
adc
adc
sbb
push
xchg
adc
loope
movs
cwde
pop
inc
inc
je
mov
int3
sti
(bad)
fs
mov
add
imul
out
popa
push
loope
jmp
mov
jg
stc
push
aad
icebp
sbb
cld
jle
dec
cwde
ret
lock
cmp
rol
fst
test
inc
gs
into
or
push
cmp
out
gs
ins
push
jle
int
xchg
jnp
mov
inc
xlat
ror
lea
add
imul
inc
stos
pop
fadd
or
fs
push
mov
jmp
mov
(bad)
cmp
mov
shr
imul
loope
not
out
cmp
sub
(bad)
into
xchg
cmp
xor
enter
imul
sub
cmp
out
sub
loope
popf
mov
dec
bound
sub
out
push
jmp
lahf
cmp
push
adc
cdq
add
ror
mov
out
cmp
fs
dec
mov
outs
xor
shl
arpl
sub
fwait
push
test
je
pop
push
movs
pop
jb
retf
data16
cwde
ret
xchg
cmp
out
mov
or
loopne
sbb
lods
jnp
inc
push
jle
inc
mov
ror
loopne
push
ja
imul
add
dec
adc
(bad)
repz
fdiv
cdq
push
pop
popa
dec
ja
in
pushf
mov
hlt
sub
int
aas
mov
fld
cmp
ficom
lock
jo
out
ret
push
jp
ss
aad
lea
mov
push
jecxz
pop
retf
das
pop
loop
mov
popf
mov
xchg
call
xchg
aaa
fisttp
dec
cmp
add
dec
sbb
cmp
mov
inc
or
shl
cld
cmp
push
mov
add
adc
int3
leave
test
(bad)
in
rol
fwait
lock
mov
jge
movs
jne
shr
pop
pop
jecxz
out
int3
loopne
lods
inc
scas
movs
dec
xlat
shl
or
cmp
cmp
adc
lock
sti
stc
rol
jle
fdivr
(bad)
es
test
ins
mov
ffreep
stos
jnp
dec
xchg
cmp
mov
jp
add
div
adc
fild
mov
movs
or
mov
push
frstor
jg
jecxz
cmp
repnz
lea
adc
div
and
sbb
data16
sub
pop
xchg
and
call
cmp
jno
push
jno
lahf
mov
mov
push
mov
jmp
sub
shl
xor
(bad)
test
inc
imul
pusha
and
inc
(bad)
mov
or
jmp
or
enter
jb
mov
ja
dec
mov
and
cli
jae
test
xor
dec
xchg
aaa
adc
fnsave
loopne
call
je
std
fs
jp
aam
add
mov
loop
add
(bad)
nop
std
sbb
and
sbb
pop
xchg
mov
inc
scas
daa
xor
mov
test
je
inc
ret
call
cmps
and
retf
repz
pop
fisub
adc
les
or
mov
loop
add
mov
jge
nop
hlt
les
jne
icebp
syscall
push
out
mov
and
cmp
nop
push
push
sahf
scas
(bad)
les
adc
xchg
cmp
retf
mov
ins
nop
sub
leave
xchg
push
xchg
adc
cmp
or
or
fbld
pop
mov
mov
test
ret
inc
mov
xchg
(bad)
jnp
cld
mov
and
pop
and
inc
add
int
jno
xchg
pop
shl
(bad)
push
int
ss
int3
dec
mov
iret
int
cmp
xor
cdq
add
mov
sbb
sti
mov
xchg
jmp
test
push
fnstsw
add
and
test
loope
ins
pushf
jg
lahf
pop
sbb
ins
push
add
inc
mov
(bad)
cmps
dec
push
loop
iret
mov
jp
imul
or
adc
repz
xlat
adc
sahf
xor
mov
cld
pop
clc
pop
adc
nop
ret
mov
(bad)
std
sub
inc
loope
sbb
jmp
mov
retf
adc
xchg
or
pop
mov
mov
xchg
imul
cld
jecxz
mov
sbb
jb
xor
xchg
pop
por
fisttp
sbb
mov
ret
sti
mov
aam
inc
fcomp
repz
jbe
push
dec
sar
adc
push
mov
adc
or
lock
xor
das
or
mov
mov
fiadd
cmp
je
retf
lea
aas
xor
mov
push
(bad)
mov
jo
int
add
mov
xor
sbb
xchg
rcl
inc
daa
xchg
repnz
jle
cli
xchg
hlt
test
mov
sub
movs
add
stos
jmp
call
jmp
add
in
enter
and
shr
pop
gs
sbb
clc
add
test
test
fwait
push
mov
or
iret
mov
(bad)
int3
fmul
push
dec
sahf
push
mov
(bad)
mov
jo
(bad)
out
stos
sbb
clc
adc
mov
mov
in
sub
mov
and
jmp
dec
in
rcr
cs
push
xlat
jecxz
inc
cwde
add
jp
push
or
push
ds
mov
loope
and
das
sub
clc
dec
mov
mov
cmp
dec
into
ret
and
jns
adc
add
ins
push
ror
(bad)
loope
rol
pop
out
fiadd
or
leave
xor
cdq
ror
aad
iret
pop
ins
xchg
pop
fdivr
neg
fdivr
mov
je
push
adc
leave
jle
scas
mov
aam
sbb
xor
lea
and
loop
jae
jmp
(bad)
mov
test
sub
sub
adc
out
pop
out
dec
in
and
sti
cld
adc
mov
push
sub
cmp
jb
pusha
arpl
cmp
jno
sbb
jmp
test
and
addr16
add
into
sahf
cld
mov
jmp
pop
clc
cli
xchg
cmp
pop
inc
jns
jmp
and
pusha
and
dec
clc
lods
ds
adc
inc
jo
xchg
fild
jae
xor
fild
jae
sbb
sbb
xchg
jb
mov
popf
popa
adc
repnz
push
cmp
cmp
and
sbb
jmp
cli
xor
or
aad
je
loope
(bad)
into
les
das
jnp
and
jp
dec
adc
shld
mov
nop
js
ficomp
ss
add
test
or
aaa
jl
cs
cmc
cmp
cmc
retf
and
add
(bad)
add
pop
ror
pop
and
repnz
or
inc
jbe
mov
repz
xlat
stc
push
loop
xor
xchg
stos
cmp
daa
mov
fs
jecxz
mov
or
sti
aam
sar
(bad)
mov
xchg
out
or
in
mov
test
inc
mov
jno
push
pop
add
dec
scas
adc
and
inc
xchg
jecxz
ds
push
cmps
jne
jns
pop
pop
scas
stc
mov
jp
add
and
xlat
ja
pop
mov
repnz
mul
mov
rcl
or
out
cwde
pop
cmp
sahf
pop
call
push
xor
lea
and
in
out
adc
js
xchg
jl
jmp
mov
mov
or
mov
arpl
xchg
mov
test
cmps
dec
test
pop
jmp
fcom
shl
sub
inc
mov
repz
pop
xor
add
xor
inc
and
lock
xchg
scas
push
sar
add
push
icebp
dec
loopne
push
adc
jecxz
test
es
sbb
popf
je
fiadd
xor
xchg
push
scas
into
jnp
xchg
xchg
in
loope
lahf
xor
jmp
ins
pusha
mov
mul
mov
fwait
fs
mov
lods
and
mov
sub
mov
imul
dec
or
dec
sbb
xor
adc
in
pushf
movs
fimul
push
add
cmp
pop
adc
pop
mov
inc
mov
sar
iret
xchg
je
and
adc
mov
pop
and
je
pop
loope
lock
arpl
or
mov
jg
mov
icebp
clc
sbb
in
mov
lods
jb
adc
add
or
jl
repnz
hlt
push
dec
popa
add
mov
enter
sub
or
inc
sbb
jne
adc
pop
fist
or
test
movs
xchg
push
and
jl
push
out
mov
test
pusha
pusha
push
out
popa
ins
mov
imul
adc
aad
pusha
adc
or
add
sbb
dec
dec
xchg
stc
add
movs
jo
jbe
jbe
fisttp
aad
adc
cmc
xchg
pusha
xchg
and
add
jmp
mov
xchg
sbb
dec
mov
nop
inc
adc
popf
ret
fisub
and
test
adc
mov
sub
jge
out
xchg
inc
mov
add
add
inc
setns
outs
xchg
ins
imul
dec
mov
dec
out
jle
add
sub
add
ret
(bad)
imul
adc
inc
test
jmp
in
in
adc
mov
mov
add
xchg
je
push
fadd
adc
rcr
cmp
xchg
dec
enter
repnz
sar
adc
pop
cwde
test
lock
repz
ds
pusha
dec
push
push
mov
or
push
mov
aad
rcl
mov
mov
inc
jne
or
cwde
or
(bad)
in
mov
loop
jno
dec
or
jmp
mov
not
cmp
add
fmul
add
inc
inc
pop
sbb
sbb
add
loop
and
daa
cmps
add
sub
jmp
shl
ja
into
pop
daa
lods
stos
mov
cwde
mov
fs
mov
retf
loop
xchg
(bad)
jb
mov
adc
ja
xor
(bad)
outs
ror
or
and
xchg
xchg
test
cwde
sub
fnop
sbb
mov
add
xchg
pop
(bad)
fcomp
push
das
pop
push
jno
pop
daa
lods
xchg
popa
dec
movs
cmp
(bad)
in
and
xlat
mov
mov
jp
sbb
xor
outs
jns
cmps
js
jp
aad
mov
sbb
das
adc
jle
loopne
push
mov
not
(bad)
aaa
inc
cmp
cli
xchg
scas
lds
lahf
jmp
pop
sub
inc
cs
ins
scas
push
and
lods
into
pop
or
inc
push
(bad)
jmp
pop
sub
sub
fldcw
push
ds
bound
dec
mov
lea
rol
pop
xchg
mov
dec
mov
fwait
push
jp
ret
jo
loope
jmp
(bad)
loopne
js
adc
in
push
fcom
outs
xor
jae
jle
int3
dec
daa
call
popf
shr
repnz
mov
add
scas
push
jmp
jp
pop
add
or
in
mov
mov
pop
sbb
shr
mov
and
push
(bad)
jmp
arpl
shr
mov
movs
into
fcomp
repz
and
mov
out
xor
push
or
daa
xchg
and
out
(bad)
jnp
and
mov
push
fsubr
lods
pop
push
enter
inc
test
or
leave
mov
inc
jno
adc
mov
push
sbb
mov
fwait
or
jecxz
push
sbb
fidivr
leave
pop
xchg
sub
and
loope
fwait
dec
jmp
(bad)
(bad)
push
xor
inc
(bad)
push
and
daa
lahf
in
and
push
xchg
add
cmp
imul
sbb
and
in
and
adc
gs
sub
sbb
jg
sub
in
lahf
inc
sub
(bad)
pop
mov
gs
mov
lds
dec
pop
pop
and
shr
jbe
pop
xchg
cmp
lods
add
lods
leave
mul
mov
arpl
rcr
mov
leave
je
or
push
call
jae
cwde
test
popa
adc
sub
inc
jns
aam
mov
adc
mov
retf
nop
dec
xor
inc
dec
clc
mov
in
fiadd
jnp
mov
mov
stc
jbe
out
imul
cmp
retf
push
int
shl
push
mov
aam
ins
cmp
aas
sub
pusha
dec
test
or
sbb
lods
mov
mov
xor
mov
icebp
fadd
dec
add
je
xor
sub
xchg
push
mov
inc
jecxz
ret
mov
mov
mov
xchg
sub
adc
sar
sar
sar
push
xor
ins
(bad)
(bad)
and
jb
xchg
cmp
inc
mov
add
inc
dec
mov
pop
repnz
inc
das
inc
mov
cmps
mov
adc
push
cmp
sub
cmp
arpl
in
nop
mov
or
test
xchg
ds
sbb
cs
repz
mov
mul
adc
loop
add
xchg
je
pop
(bad)
jl
inc
push
xlat
push
jge
test
ja
mov
xchg
adc
inc
sub
xor
or
ins
pop
call
push
fistp
push
push
cmc
icebp
cmp
cmc
jp
pop
rol
xor
push
aas
daa
or
pop
outs
add
test
push
retf
add
pop
(bad)
inc
and
(bad)
test
dec
outs
push
lods
lock
jo
(bad)
cmc
jns
and
xlat
push
inc
mov
push
shl
xchg
dec
sub
das
aas
xchg
std
dec
jae
daa
sub
pop
outs
pop
retf
dec
lahf
rcl
pushf
cdq
int3
push
push
rol
repnz
(bad)
cmc
fsub
in
outs
aam
movs
pop
rcl
loop
xor
lods
int
pushf
or
jmp
hlt
icebp
adc
cmps
fsubr
xor
outs
cwde
inc
push
push
mov
stc
push
clc
sub
jmp
or
mov
adc
leave
xchg
xor
inc
jb
add
jg
push
dec
into
sub
dec
push
mov
mov
loope
push
sub
pusha
ficom
in
(bad)
lds
rol
or
leave
rcr
out
inc
adc
fild
mov
cmp
fs
fstp
mov
xchg
lea
in
sbb
jae
imul
outs
cli
movs
pop
or
xchg
mov
push
mov
fstp
idiv
mov
push
and
cmc
and
enter
loop
stos
and
pop
xor
(bad)
jle
cmp
cmps
addr16
out
or
sub
jns
cwde
neg
push
adc
call
push
and
mov
cli
pop
lds
fst
add
add
pop
ds
mov
mov
push
int3
push
fdivr
jo
(bad)
lahf
ja
mov
mov
(bad)
mov
ret
mov
mov
adc
shr
sub
jle
daa
(bad)
sti
cmp
cmp
dec
in
dec
cmps
aas
fldcw
or
icebp
rcl
mov
mov
sbb
mov
aaa
call
jb
out
mov
add
gs
sbb
mov
xor
push
pop
enter
pop
(bad)
je
adc
or
mov
pop
sub
mov
ficom
xchg
and
jecxz
daa
cmps
ja
push
stc
jmp
pop
js
cmps
lock
mov
mov
dec
pop
push
inc
mov
nop
out
data16
jno
cmc
xor
add
out
and
sbb
or
add
arpl
xchg
sbb
sbb
out
xchg
cmp
and
xchg
std
arpl
mov
ror
les
cmc
test
cmp
in
fs
je
test
imul
xor
jnp
and
ins
cld
sub
cmps
in
sub
xchg
das
ss
mov
sti
in
sti
cdq
int3
dec
push
(bad)
std
mov
cdq
cwde
aad
repz
imul
dec
inc
mov
enter
pop
out
jmp
jmp
leave
or
and
and
fisub
push
repz
jecxz
repz
push
pop
jo
imul
(bad)
and
push
sbb
cmps
and
icebp
enter
scas
add
xlat
enter
xor
dec
cli
loope
sbb
sti
jge
mov
jno
dec
pushf
push
into
aam
sub
jle
ds
fidiv
cmc
test
sbb
cmp
mov
jecxz
bound
popa
push
mov
cmp
cmp
push
push
mov
into
scas
xchg
mov
cmp
loopne
mov
loope
out
jne
sub
loop
dec
or
mov
ja
pop
push
les
push
stos
hlt
pop
jno
imul
les
dec
jno
popf
(bad)
cmp
mov
iret
scas
xor
into
push
xor
mov
cmp
nop
pop
call
sub
or
pop
xlat
stc
mov
shl
stc
push
in
pop
mov
(bad)
push
in
mov
mov
neg
rcr
sub
add
xchg
and
rol
dec
push
fdivr
(bad)
arpl
cmp
into
js
jle
cmp
cmp
fisub
xchg
and
nop
adc
mov
jns
addps
push
retf
mov
loope
fsub
sar
imul
aaa
mov
popa
lea
inc
enter
push
rol
movs
les
in
ret
mov
call
test
loope
push
mov
ds
das
mov
mov
push
mov
in
jg
dec
sbb
in
and
xchg
xchg
sahf
jmp
gs
mov
xchg
shl
idiv
cmp
test
retf
push
call
scas
imul
dec
aaa
cdq
dec
inc
xor
xchg
jmp
or
xchg
outs
dec
mov
or
int
les
mov
mov
sahf
mov
push
iret
icebp
pop
and
add
div
js
in
adc
repz
add
cdq
rcr
dec
xlat
or
mov
mov
mov
jmp
stos
cwde
xchg
(bad)
fild
test
mov
cmp
mov
rep
xchg
mov
inc
mov
jns
jecxz
adc
stos
ss
inc
push
imul
cmps
inc
push
sbb
mov
outs
sub
and
mov
xchg
lods
nop
sbb
jnp
mov
cmp
xlat
dec
or
mov
adc
push
mov
(bad)
fisttp
ret
cmps
outs
into
pop
jecxz
rol
loop
inc
jp
(bad)
cmp
sub
outs
xchg
mov
mov
fstp
bnd
push
inc
inc
lock
inc
(bad)
mov
cmc
and
pop
xchg
mov
adc
xchg
hlt
xchg
(bad)
daa
test
mov
stc
sub
sbb
sbb
outs
loop
js
dec
icebp
shl
imul
sbb
xchg
push
push
cld
push
lea
retf
cmc
or
out
fmul
mov
daa
xchg
and
das
inc
in
cld
inc
test
test
ins
add
and
and
aam
popa
rcl
bound
mov
push
and
jg
ficomp
retf
push
dec
xor
out
sahf
call
push
enter
fs
out
sub
(bad)
rol
int3
mov
aas
or
rcr
xor
std
cdq
jae
push
push
push
rol
mov
ss
inc
(bad)
push
xchg
in
fimul
add
mov
add
pop
test
cmp
test
jb
int
or
dec
popa
dec
adc
pop
mov
jle
aam
sar
outs
and
jno
adc
add
(bad)
test
inc
adc
add
pop
(bad)
daa
loopne
sbb
inc
popf
add
not
sub
inc
out
and
daa
sub
(bad)
ins
cmp
xchg
adc
into
jl
arpl
or
out
iret
(bad)
out
dec
xlat
pop
pop
xor
mov
adc
add
cdq
pop
shl
dec
mov
mov
jmp
or
adc
cmp
scas
aam
xor
stos
leave
cmp
inc
xor
adc
xchg
and
shr
inc
ins
push
jl
hlt
std
sbb
aad
pop
mov
lods
imul
mov
push
or
loope
cli
pushf
call
xor
sub
outs
stos
mov
inc
arpl
div
adc
enter
mov
iret
imul
test
xor
xor
or
or
mov
and
ret
mov
jmp
int
and
push
mov
push
jmp
aas
adc
bnd
push
test
cdq
in
mov
ret
lea
inc
xchg
out
repz
xchg
ror
sbb
push
addr16
jmp
loopne
ret
jmp
enter
push
(bad)
dec
stos
jo
push
ins
call
in
jp
ret
or
xor
test
retf
retf
pop
sbb
(bad)
dec
jle
xchg
xlat
lock
or
and
(bad)
aad
adc
cmps
pusha
cli
data16
cmps
and
out
push
add
in
sbb
sbb
(bad)
loop
or
inc
pusha
push
call
call
push
fnstcw
mov
ret
enter
addr16
and
lds
jle
or
mov
push
xor
retf
inc
mov
iret
out
dec
(bad)
pop
pushf
fldenv
xchg
xchg
std
sub
or
hlt
lahf
mov
lods
mov
out
push
mov
mov
xlat
(bad)
movaps
mov
and
add
jnp
mov
dec
fldenv
cmp
(bad)
test
adc
or
popf
push
fimul
sub
or
mov
mov
fnstsw
scas
dec
pop
mov
cmp
and
jecxz
cmp
adc
cwde
imul
xor
rol
adc
jg
pop
fdiv
adc
jo
inc
jle
repz
stos
sub
ss
sbb
rol
out
jp
mov
adc
out
call
call
adc
pop
aas
(bad)
cmp
mov
adc
xchg
add
popa
mov
bound
dec
cld
jl
ins
mov
jg
add
push
ds
sti
imul
sub
int3
fdivrp
pop
jne
inc
jmp
imul
nop
cmps
jmp
or
jecxz
jb
(bad)
rcr
mov
or
ret
and
loopne
retf
jle
movs
aas
sbb
iret
add
adc
push
push
ins
push
mov
mov
xchg
mov
gs
sub
mov
aas
sbb
sbb
movs
cmp
daa
hlt
repz
push
dec
xchg
cmp
push
idiv
xchg
and
pop
jp
inc
adc
je
add
imul
outs
das
arpl
pop
or
dec
mov
pop
bound
imul
push
sbb
lahf
mov
push
dec
pop
pusha
add
ja
(bad)
sbb
dec
(bad)
int
aaa
and
jp
inc
fidiv
repnz
jge
(bad)
jo
movs
sti
xchg
pandn
imul
mov
pop
sub
sub
cdq
xlat
adc
mov
repz
jno
mov
sbb
push
xor
aad
fmul
push
sbb
cmp
sbb
xor
or
ror
xchg
dec
jmp
cmps
fwait
loop
pop
in
retf
mov
push
ja
retf
xor
or
stc
lock
movs
xor
addr16
push
das
fistp
mov
or
ds
cdq
mov
popf
adc
mov
mov
out
mov
cmp
js
enter
call
movs
out
pop
lock
retf
jns
and
fwait
stc
mov
retf
(bad)
jp
mov
inc
xchg
lds
gs
jno
pushf
popf
and
add
cmc
fist
mov
jecxz
pop
cwde
jg
inc
arpl
fisttp
scas
icebp
lods
xchg
adc
mov
dec
jl
jb
or
mov
push
sub
or
and
add
pop
xchg
inc
sub
xor
push
ds
sahf
dec
push
jnp
loopne
pop
push
xor
and
sbb
imul
out
push
retf
mov
cmc
nop
test
not
sti
mov
loopne
dec
mov
mov
repnz
cmp
je
ror
loopne
clc
mov
sub
cmp
test
ds
adc
clc
sbb
shl
lods
mov
add
aam
xchg
and
pop
iret
pusha
or
shl
pushf
pusha
pop
sub
(bad)
fnstsw
rcl
shl
mov
adc
test
jne
lods
pop
mov
in
pop
push
ret
fstp
aaa
mov
mov
int
mov
out
mov
pushf
mov
lods
imul
ret
lods
in
popf
or
nop
pop
jl
pop
loope
movs
rol
fwait
jo
rcr
sbb
(bad)
not
outs
inc
mov
sub
sbb
or
mov
jnp
sti
sub
mov
cdq
cmps
or
mov
pusha
sar
fimul
jbe
in
shl
or
stos
shl
loop
ja
icebp
sub
cs
les
or
sahf
stc
mov
lods
push
push
rcr
jbe
pushf
leave
sbb
pushf
test
outs
inc
pop
mov
idiv
mov
inc
and
lods
pusha
push
loopne
shl
hlt
dec
jae
sbb
scas
cmp
mov
(bad)
mov
sbb
sbb
aas
scas
push
pop
and
dec
test
aad
or
in
mov
pop
call
daa
sub
add
icebp
fs
jmp
sub
leave
aam
add
cs
cwde
mov
mov
lock
add
jb
jmp
mov
or
adc
inc
cld
cmp
in
inc
xchg
inc
jne
xchg
lahf
add
push
retf
test
xchg
add
xor
xor
das
mov
sub
xchg
les
rol
sbb
mov
cmps
std
aaa
stc
jmp
pop
(bad)
pop
cs
pop
dec
stos
xchg
mov
cmp
int3
xchg
adc
sgdtd
or
fld
inc
xchg
push
popa
and
fwait
sub
gs
mov
pop
(bad)
(bad)
inc
enter
retf
adc
cmps
mov
sub
lock
add
mov
scas
sbb
aaa
sbb
jno
jnp
jbe
xchg
push
dec
lods
jle
idiv
cmp
adc
les
imul
add
mov
inc
call
call
cmp
add
fsub
and
mov
mov
adc
retw
push
adc
adc
xlat
(bad)
int3
test
lock
rcr
mov
add
aas
push
mov
mov
pop
or
mov
pop
and
sub
adc
add
push
ja
dec
fild
jle
pusha
adc
out
push
add
ret
sub
test
pop
hlt
mov
aas
and
mov
cmp
jnp
xor
sub
dec
and
push
mov
pop
sub
mov
jge
push
inc
xlat
sbb
(bad)
out
jo
dec
call
pop
imul
lods
fdiv
icebp
jbe
inc
(bad)
mov
popf
xlat
mov
dec
(bad)
sti
gs
es
adc
cs
aas
or
lods
shr
cmp
inc
xor
sub
jmp
cmc
hlt
mov
mov
pop
mov
sbb
xchg
cmc
or
(bad)
addr16
push
or
cmp
fidiv
dec
movs
cmp
gs
mov
dec
retf
cmp
push
sub
inc
test
jl
mov
add
lahf
(bad)
push
mov
adc
sub
mov
data16
sbb
pop
sub
outs
cmp
call
mov
inc
and
frndint
sbb
(bad)
sub
or
sbb
inc
mov
mov
jmpw
cmp
dec
sbb
and
fimul
in
cwde
inc
or
jno
push
and
add
cmp
mov
call
pop
rcl
fnstcw
add
jno
mov
sbb
xor
and
cmps
cli
mov
jmp
or
loopne
add
push
cmp
movs
mov
sub
adc
in
adc
mov
fcomp
imul
sub
cmps
add
and
ds
sahf
xlat
rcr
jmp
mov
inc
mov
or
ret
shr
fcmovnb
sbb
cmp
xchg
retf
in
ror
movs
jecxz
or
pop
pop
sbb
mov
ret
cdq
je
repnz
cmp
loopne
mov
test
xchg
test
push
add
dec
out
fs
in
js
test
stos
and
jl
cs
mov
inc
mov
lahf
xchg
loope
jmp
test
sbb
bnd
in
push
inc
scas
retf
mov
(bad)
xor
stc
mov
mov
rol
fbld
jmp
ja
pusha
jb
mov
xlat
xor
add
dec
sub
push
lahf
(bad)
sub
(bad)
test
mov
cmc
imul
aam
jmp
or
imul
stos
stc
jge
bound
add
dec
and
(bad)
aam
cmp
ins
jl
mov
mov
jb
rcl
jl
dec
sub
jle
dec
dec
add
(bad)
inc
jne
movs
out
xchg
xor
lods
push
pushf
inc
xor
push
rcl
mov
repnz
out
mov
sbb
dec
dec
loope
fidivr
jmp
outs
adc
xchg
sahf
sbb
imul
(bad)
stos
cmps
or
cmp
push
xor
push
js
mov
add
(bad)
pmuludq
ret
jmp
pop
aaa
cmp
jne
mov
mov
push
in
aaa
jg
add
sti
cmp
and
xchg
jno
and
mov
in
push
aam
int
and
inc
mov
fwait
or
sbb
inc
or
mov
mov
jge
bound
stc
xchg
dec
xor
sub
hlt
push
cmp
loope
(bad)
xchg
cld
pop
hlt
sbb
cs
leave
cmp
push
sti
std
(bad)
loopne
call
fild
std
adc
xor
std
xchg
xchg
ins
sub
cmps
mov
sub
pop
and
xor
sub
sbb
scas
jp
test
shl
jge
int
retf
call
(bad)
inc
retf
inc
gs
mov
imul
pop
pop
jns
ficom
stos
jmp
inc
add
addr16
sub
scas
lods
sub
push
sbb
xchg
rcl
mov
mov
scas
jb
sbb
and
mov
les
mov
and
cmp
push
and
repz
sti
in
arpl
add
repz
fld
iret
jp
push
push
jbe
jmp
outs
xchg
pop
and
sahf
jo
sbb
std
rol
ds
test
iret
and
cmp
outs
xchg
lods
sti
pop
scas
and
cmp
push
mov
xchg
cmps
hlt
inc
imul
ss
sub
cld
mov
ja
nop
mov
pop
dec
dec
dec
fwait
repz
cmps
or
es
(bad)
sbb
pushf
dec
imul
push
das
in
inc
add
xadd
test
xchg
rcl
push
pusha
or
out
aas
fiadd
adc
stos
mov
push
dec
xor
(bad)
(bad)
sub
pushf
pop
ret
push
jne
test
sub
rcr
popa
push
lock
mov
aam
pop
push
and
pushf
push
pop
test
mov
jl
xchg
mov
es
mov
shr
loope
icebp
jp
jae
adc
inc
into
and
push
jmp
xlat
cmps
mov
jb
mov
data16
shl
loopne
push
adc
dec
das
xor
(bad)
(bad)
push
fimul
mov
loop
add
or
sub
(bad)
ja
xchg
xlat
jne
neg
aas
xlat
push
xchg
mov
add
ins
mov
ss
mov
pop
ficomp
jg
jl
adc
popa
sbb
xchg
mov
jns
mov
sbb
test
movs
pop
and
cwde
sti
retf
ss
stc
mov
frstor
out
std
pop
psubsb
sub
out
mov
rcr
lods
inc
mov
pop
push
lds
jb
ins
pop
xchg
pop
push
scas
jecxz
xchg
or
jns
int
repz
push
and
push
in
shl
mov
stos
ds
cld
xchg
pop
(bad)
out
data16
pop
cmc
mov
mov
and
(bad)
(bad)
(bad)
ficomp
outs
push
mov
bound
sbb
mov
bound
call
ror
test
in
inc
mov
cmps
mov
arpl
push
cmp
inc
ret
jns
mov
push
and
aas
stos
in
or
loopne
ds
xchg
inc
mov
push
push
adc
cmp
sar
std
xor
jl
popf
mov
cmp
es
test
jno
shl
xchg
imul
out
pop
sbb
scas
pop
scas
pop
push
(bad)
adc
(bad)
adc
and
xor
(bad)
jnp
jle
sub
sar
pop
pop
adc
daa
outs
rol
dec
sub
mov
mov
xor
xchg
sbb
pop
pop
test
dec
pop
sbb
and
out
xchg
jp
in
into
push
retf
(bad)
pop
(bad)
movs
mov
aam
adc
sbb
dec
std
mov
jmp
clc
ss
add
aaa
cmp
xchg
cmp
xchg
or
mov
imul
xchg
or
and
or
mov
bound
std
mov
loope
push
pop
inc
inc
(bad)
sahf
imul
pop
push
leave
mov
mov
mov
cmp
popa
adc
fs
mov
cmp
nop
jg
int3
lods
sub
adc
xchg
jl
fstp
ret
sub
pop
fbstp
fist
mov
js
test
es
jmp
ds
mov
scas
xor
les
(bad)
and
fidivr
mov
loope
imul
cmps
(bad)
ficom
out
aad
and
jno
int
pop
cs
dec
xchg
test
mov
sbb
in
addr16
push
(bad)
cmp
out
ret
icebp
outs
ins
push
mov
add
pushf
ins
pop
xor
call
lahf
xor
in
mov
(bad)
sub
push
cmp
inc
leave
(bad)
dec
mov
int3
icebp
mov
mov
mov
retf
mov
add
ficomp
shl
dec
call
imul
les
mov
mov
pop
mov
add
jge
push
arpl
sahf
mov
xor
jbe
xlat
adc
loop
bound
mov
sub
add
xor
int
loope
xchg
cmps
lock
mov
sbb
or
mov
dec
jecxz
add
jg
aas
jbe
inc
cmps
xor
icebp
mov
sub
ins
sub
pop
sbb
mov
cli
xor
cdq
ins
mov
shl
mov
jmp
test
inc
ins
arpl
std
xchg
ds
jp
jmp
gs
pop
imul
call
das
ret
call
push
pusha
cld
in
push
jnp
out
jbe
and
fild
xor
and
cld
add
sbb
cmp
sbb
dec
pop
mov
lds
or
cmp
jmp
mov
loop
xchg
shl
lods
retf
lahf
(bad)
mul
pop
inc
shr
xchg
adc
and
mov
pop
out
jae
psubusw
mov
retf
call
out
jae
sub
int
fistp
in
inc
ds
xor
addr16
mov
jecxz
cmp
icebp
xchg
idiv
jno
repnz
sub
jo
mov
aaa
aas
mov
rcr
pop
mov
push
add
aad
cmc
add
stc
dec
ret
mov
cmps
pusha
test
aaa
cmps
mov
dec
call
clc
int
in
test
(bad)
out
inc
mov
xor
adc
bound
mov
or
lahf
mov
out
sub
dec
xor
cmp
mov
je
mov
pop
sub
or
lods
and
xchg
aaa
sbb
add
dec
fild
adc
mov
mov
adc
dec
mov
scas
stc
dec
inc
or
in
pop
lds
adc
mov
and
mov
sub
shr
frstor
dec
jge
xchg
add
sbb
test
sub
push
fistp
adc
sahf
dec
inc
jae
cmp
js
xor
pushf
xor
shl
lods
mov
cli
mov
(bad)
cmp
rcl
dec
outs
dec
jbe
(bad)
ss
jl
call
and
fucomp
xchg
mov
xchg
sbb
adc
dec
xchg
fs
dec
mov
rcr
sub
xchg
push
xchg
out
sub
fs
clc
dec
xor
test
push
nop
mov
adc
sub
jmp
cmp
push
stos
dec
scas
jae
mov
inc
addr16
inc
xor
mov
mov
ror
test
cmp
repz
arpl
movs
jle
neg
lods
rcr
popf
leave
aaa
inc
mov
cmp
das
mov
ret
aaa
inc
movs
add
jno
jbe
mov
and
out
adc
inc
sar
add
dec
inc
sub
push
sti
mov
es
jmp
or
(bad)
(bad)
xor
and
jae
inc
sub
popf
pop
(bad)
jb
call
mov
nop
adc
xlat
xchg
popf
(bad)
cmps
int
mov
lock
pop
jae
fwait
cmp
mov
pop
jecxz
add
iret
loop
lds
adc
repnz
push
jno
inc
fdiv
push
jle
sbb
out
leave
cmp
sar
aaa
pop
test
pop
jb
icebp
lods
lods
xchg
sbb
xchg
xor
xor
cmp
jns
dec
xor
test
cmp
shl
cdq
pop
or
mov
or
popf
adc
scas
push
cmp
mul
shl
(bad)
sti
cmc
inc
call
stc
pop
jl
sub
and
jns
xor
sub
loope
cmp
pop
gs
loope
sub
(bad)
xchg
pop
cmp
dec
pop
push
test
push
or
aam
into
les
pop
push
jno
sub
fld
popf
icebp
call
jle
mov
popa
cmp
sbb
mov
or
jecxz
and
cmp
cmps
sbb
jmp
sub
mov
div
add
xchg
mov
fldcw
ins
pop
jbe
jecxz
dec
(bad)
arpl
pop
mov
movaps
jl
ret
shl
(bad)
jb
ins
into
cmp
lahf
mov
sub
mov
jnp
mov
loopne
leave
sti
cmp
inc
add
xor
pop
push
cld
push
mov
int
cmp
jbe
test
dec
(bad)
xchg
arpl
inc
jp
push
(bad)
pop
cli
in
out
ficomp
inc
pop
cmp
cmps
das
scas
stos
test
int
mov
inc
mov
jb
xchg
jge
xor
sbb
aas
bound
fistp
les
mov
(bad)
lahf
xlat
cmp
push
dec
dec
xchg
sbb
or
sar
scas
lods
inc
shl
shl
xor
inc
jp
pop
or
dec
js
jno
jmp
out
test
cmp
repz
mov
sbb
jecxz
mov
and
ret
stos
ret
mov
add
sub
test
jge
push
push
xor
ret
lods
outs
pop
ins
and
popf
cmp
int
pop
pop
cmp
inc
repnz
dec
pop
scas
data16
mov
jb
sbb
ins
cmps
in
push
sbb
cmps
mov
jecxz
mov
(bad)
repz
xlat
loop
int3
ret
jmp
mov
fcom
sbb
push
and
sub
rcr
pop
adc
cdq
pop
loop
push
daa
xchg
cld
sub
push
xchg
xor
adc
mov
sub
inc
loope
add
mov
mov
sahf
in
outs
call
(bad)
sbb
push
sub
test
call
add
lods
or
adc
lods
test
mov
jmp
leave
mov
movs
jnp
inc
fs
rcl
adc
movs
popa
sbb
push
jg
pop
rol
(bad)
(bad)
int
cdq
lods
mov
pop
jge
xchg
sub
dec
fisubr
jmp
pop
xchg
mov
aam
aas
movs
pop
fwait
cmp
(bad)
enter
movs
push
sbb
cmp
push
in
rcl
test
cmp
push
sub
cmp
inc
push
pop
mov
repnz
stos
or
pop
test
hlt
les
ficom
sub
ins
mov
inc
iret
retf
in
stc
dec
and
repnz
stos
js
cwde
mov
or
adc
cmp
(bad)
rcl
dec
dec
cwde
cdq
ret
mov
repnz
and
mov
or
daa
pop
dec
pop
scas
js
xor
push
enter
mov
xchg
cmp
daa
shl
shl
mul
xlat
xor
adc
sbb
pop
cmps
pop
or
push
in
shr
jmp
into
xchg
movs
das
pop
int
ret
outs
imul
inc
xchg
sub
enter
pop
test
jmp
loope
in
dec
div
pop
stc
or
xchg
sub
push
ins
retf
sbb
jp
fmulp
gs
ror
sbb
jp
push
sub
pushf
or
frstor
(bad)
das
rcl
adc
fild
push
in
xor
sub
mov
add
xchg
(bad)
scas
scas
jp
pop
int3
jae
push
icebp
in
push
mov
jo
(bad)
sub
mov
test
ret
into
in
push
add
jno
push
mov
mov
fst
xlat
out
push
sub
aam
or
add
in
std
cmp
add
add
mov
adc
out
and
inc
mov
pop
sub
jb
(bad)
aam
dec
retf
fnstcw
sbb
push
stos
mov
outs
sub
sahf
xchg
test
push
mov
mov
mov
hlt
xchg
pusha
push
adc
mov
sahf
popf
shr
leave
or
add
push
and
out
test
sti
jmp
jle
leave
ret
fisttp
leave
imul
xchg
imul
dec
jmp
jl
cdq
aaa
aas
clc
mov
xchg
pop
mov
dec
xchg
dec
push
in
ror
sub
dec
sbb
mov
mov
dec
cmps
in
jp
cwde
sub
mov
xchg
mov
xor
vhsubps
sbb
cmc
stos
(bad)
bound
repnz
cmp
push
jp
add
or
mov
imul
call
mov
out
adc
jne
mov
mul
pop
mov
dec
push
test
sub
sbb
xchg
dec
xchg
xlat
mov
dec
je
sub
sbb
das
sub
cli
aam
les
xor
popa
lea
or
js
inc
push
popa
inc
cld
daa
inc
imul
mov
shl
or
shl
(bad)
jno
scas
jecxz
push
test
inc
(bad)
sub
scas
xchg
bound
outs
in
dec
sbb
dec
or
add
adc
and
sub
adc
out
mov
push
cmp
data16
sub
in
pop
jecxz
push
std
scas
push
xchg
cmp
ja
push
enter
xchg
(bad)
add
int
stos
mov
mov
adc
xlat
test
mov
jl
inc
out
popa
das
mov
xor
div
call
adc
add
pop
sbb
cmp
sub
cmps
dec
and
cmp
aam
jp
jg
sub
xor
call
mov
push
jo
sbb
and
stos
push
xchg
sub
popa
test
mov
jo
add
movs
xor
mov
sub
mov
popa
pusha
cli
mov
sub
push
push
lahf
lods
std
cmp
jns
jns
push
adc
pop
rcl
push
hlt
sbb
das
lock
inc
xor
cs
loop
(bad)
sbb
test
mov
mov
and
sub
push
adc
jle
push
adc
adc
adc
(bad)
jmp
cmp
jecxz
jp
jmp
add
xlat
(bad)
sti
out
(bad)
out
add
stos
in
jle
stos
fdivrp
cld
and
jmp
and
call
retf
xchg
pop
int
in
dec
dec
cmp
push
mov
loope
loope
xor
mov
jne
mov
nop
add
in
push
outs
pop
add
std
cli
and
dec
out
test
cmps
scas
sbb
push
je
jb
into
scas
mov
jmp
xchg
ds
test
out
sbb
cmps
mov
xchg
jge
loop
das
jg
push
push
add
cmp
bound
jle
gs
dec
bound
xor
jbe
add
push
lds
jl
fxch
pop
adc
inc
in
and
shr
dec
call
ins
push
inc
inc
imul
adc
push
adc
xor
jmp
sub
mov
fdivr
(bad)
icebp
dec
sbb
jl
cmp
int
cli
mov
adc
or
sub
mov
xchg
mov
xor
jg
xchg
cld
push
mov
loop
push
(bad)
push
cmps
cmps
sti
add
mov
xchg
aaa
ret
mov
or
imul
sub
mov
rol
sub
mov
mov
dec
add
inc
sbb
std
mov
ret
stos
adc
(bad)
xor
cmp
and
pop
aam
pushf
xor
and
or
mov
add
and
imul
cmp
scas
repnz
xchg
mov
loopne
cmp
sub
jg
mov
fcomp
test
std
pop
out
mov
js
cmp
adc
sub
out
mov
pop
xchg
jle
jns
sub
iret
sub
(bad)
in
or
scas
add
ds
mov
inc
outs
jmp
push
je
add
fsubp
push
movs
call
xor
jmp
xchg
imul
jmp
in
cdq
retf
ret
cli
pop
(bad)
ja
lds
(bad)
jl
dec
out
(bad)
cmp
sahf
fsubr
sbb
mov
adc
sub
scas
mov
and
mov
push
pop
xor
cmp
adc
test
xor
sbb
fwait
lods
xchg
xor
lods
mov
jmp
adc
cli
(bad)
popf
sbb
aaa
pop
mov
or
(bad)
fwait
sbb
int
pop
jo
jne
(bad)
in
daa
rcr
loopne
pop
push
leave
dec
or
fiadd
test
(bad)
and
repz
aam
xchg
adc
shl
ins
mov
inc
cld
daa
and
pop
outs
fs
(bad)
shl
xchg
push
aam
ja
call
ror
and
cmp
ror
jmp
xor
cmps
pushf
jnp
ficomp
in
pop
(bad)
sar
(bad)
xchg
sub
pop
dec
xor
mov
and
call
cdq
inc
and
mov
ret
adc
jge
push
lds
cmc
mov
sbb
repnz
dec
jge
inc
mov
retf
jmp
lock
pushf
push
cmc
bswap
xlat
popf
jne
(bad)
xchg
sar
xlat
call
mov
mov
retf
mov
ret
jb
add
jl
sbb
cmp
sub
push
mov
jmp
mov
cld
movs
fsub
arpl
int3
fst
cwde
enter
inc
mov
sahf
ret
add
mov
sub
sub
xchg
ins
sbb
mov
push
adc
pop
and
(bad)
add
aad
pop
mov
rol
fst
sar
sbb
xchg
into
sahf
mov
and
cmp
and
push
add
cdq
inc
das
inc
jno
in
idiv
push
(bad)
cmp
(bad)
mov
jo
ins
adc
push
rep
fsubr
(bad)
push
retf
shl
cdq
mov
add
mov
inc
mov
cmp
or
xchg
add
pop
mov
rcr
mov
cmp
or
outs
pop
mov
mov
add
add
stos
xchg
je
or
inc
xchg
ins
xchg
sub
ss
das
outs
sub
mov
aad
and
cs
(bad)
or
pop
repnz
mov
aas
ret
jbe
jno
dec
shr
xchg
cmc
lods
sti
jmp
push
hlt
mov
xchg
and
and
(bad)
hlt
das
cwde
and
dec
pushf
shl
cmc
retf
fst
mov
dec
sti
mov
xchg
jle
int3
add
xor
and
shl
xor
pop
xor
in
aas
xchg
sub
into
pop
sub
mov
loop
xchg
cmp
idiv
mov
(bad)
sahf
mov
pop
mov
pop
scas
xchg
pushf
mov
xlat
xor
mov
rol
mov
movs
xchg
xor
arpl
mov
mov
mov
mov
sbb
sbb
dec
adc
mov
add
sbb
fdivr
mov
ficomp
aad
mov
adc
out
cmc
test
dec
in
or
in
jge
jp
or
ins
xchg
xchg
lods
xor
inc
push
and
jae
leave
push
push
push
mov
xor
pop
pop
mov
rcl
retf
rol
xor
(bad)
popf
std
xor
ins
loopne
ret
and
in
movs
pop
int3
pop
repz
pop
shl
pop
xchg
int
mov
js
retf
add
ud2
xchg
inc
scas
xor
and
add
adc
stc
fdiv
icebp
aam
sar
sti
sub
push
jo
push
push
inc
inc
push
pop
adc
gs
dec
das
add
push
int
out
pop
std
mov
ins
jmp
pusha
inc
xor
lock
xor
das
mov
nop
scas
js
bswap
daa
adc
addr16
push
push
pop
(bad)
and
fsubrp
inc
lock
loopne
aad
mov
imul
xor
nop
fwait
sub
push
jmp
mov
shl
jb
mov
xor
out
retf
mov
dec
jecxz
aas
xor
or
mov
xor
icebp
sahf
mov
mov
push
push
sub
retf
add
call
jecxz
cmc
sti
(bad)
int3
nop
movs
in
xchg
out
data16
jle
xchg
mov
mov
xchg
mov
push
jne
dec
rol
bound
cdq
pop
js
test
mov
add
mov
vmread
jb
adc
adc
push
neg
and
std
outs
mov
adc
jmp
cmp
adc
dec
xchg
mov
jecxz
pushf
les
(bad)
push
mov
mov
jno
jb
and
xlat
(bad)
scas
mov
call
scas
bound
mov
cwde
pop
xor
pop
jae
push
mov
pop
mov
add
call
mov
adc
bound
add
stc
in
dec
dec
jle
ss
sbb
and
imul
data16
jecxz
and
cmp
test
inc
pushf
xchg
adc
mov
xchg
pop
inc
xor
mov
daa
inc
lds
in
add
adc
lahf
imul
mov
stc
sbb
(bad)
jbe
mov
mov
jl
sbb
cmp
imul
repz
jmp
inc
dec
add
adc
mov
xchg
jmp
or
call
adc
or
pop
xchg
mov
push
movs
es
or
shl
or
pop
test
(bad)
pop
pop
mov
rcr
mov
shl
cwde
adc
int3
imul
lea
mov
mov
in
and
daa
sbb
pop
fild
inc
(bad)
xor
mov
mov
xchg
stc
xchg
retf
push
loope
repz
sbb
fistp
lahf
out
lods
pop
jb
ficomp
aas
pop
add
jle
push
popa
push
mov
or
or
mov
not
sub
mov
pop
dec
ja
sub
pushf
sub
popa
cmps
jmp
inc
sbb
shl
pop
inc
fld
add
pop
arpl
push
imul
in
cmp
pushf
jmp
jno
mov
movs
out
outs
xchg
mov
ret
push
ins
xchg
cld
test
jo
and
cli
fist
(bad)
sti
inc
sbb
popf
jl
jo
push
xchg
or
std
inc
xor
inc
mov
and
sub
stos
dec
cmp
push
(bad)
data16
nop
sbb
lods
mov
das
fbstp
je
dec
add
mov
add
loop
xlat
jg
xchg
xchg
pop
inc
xchg
in
nop
in
call
cwde
lods
idiv
and
fs
loop
sbb
push
ror
inc
dec
adc
sahf
out
dec
push
repnz
cli
mov
lock
push
mov
loope
ror
jp
add
jmp
mov
sar
dec
pop
out
int
pop
(bad)
push
mov
fwait
retf
mov
and
lock
scas
sar
lea
add
pushf
in
jecxz
mov
stos
jecxz
mov
sub
iret
rol
dec
sahf
test
jo
retf
stos
call
fisub
out
cld
mov
cs
mov
repnz
push
add
ins
mov
xor
scas
in
out
fcmove
push
lds
xor
cmp
sub
(bad)
jmp
add
mov
call
lods
push
mov
mov
jmp
jg
sbb
mov
inc
cs
fwait
mov
sub
pop
push
nop
hlt
xor
pop
jle
mov
daa
cmps
push
inc
push
cmp
sbb
cmp
js
outs
pop
or
mov
mov
adc
retf
jne
lahf
cmp
inc
outs
mov
mov
scas
aad
add
xor
pop
cwde
or
ins
std
test
retf
retf
xchg
mov
dec
push
movs
rol
mov
rol
add
mov
and
mov
mov
rol
nop
mov
cmp
add
push
xchg
jae
fdivr
jnp
iret
addr16
ret
bound
mov
imul
or
sub
sbb
sar
stc
cld
loope
sub
lea
adc
in
dec
sbb
out
mov
push
scas
dec
inc
dec
mov
sub
cld
fnstsw
scas
test
or
mov
push
shl
loope
movs
jle
cmp
pop
mov
xor
push
inc
jmp
push
mov
mov
mov
rcr
adc
xchg
(bad)
scas
cld
cld
jnp
lahf
cmp
ins
adc
push
xor
inc
and
aaa
cs
sub
loop
mov
je
sbb
div
lods
mov
loope
out
sub
iret
div
mov
and
inc
xchg
(bad)
dec
cmp
xor
sub
push
mov
xor
fwait
push
pushf
lods
push
(bad)
mov
add
mov
sti
xchg
jno
cmps
add
ret
fs
std
inc
mov
test
call
fmul
aaa
retf
adc
shr
add
mov
int3
mov
fmul
cs
ins
adc
push
push
or
bnd
test
mov
aam
nop
nop
call
(bad)
out
shr
pusha
data16
push
jmp
push
sub
stc
enter
inc
lahf
inc
iret
dec
xchg
ss
xchg
push
cmp
pop
jne
test
mov
dec
and
daa
mov
ins
mov
pop
in
inc
push
dec
jl
call
sbb
jae
dec
int
icebp
out
cmp
push
into
cli
jbe
cmp
movs
mov
das
sub
ud1
ja
and
sar
ds
fstp
or
cmp
cmp
mov
shr
in
mov
jmp
jge
sahf
push
cmc
sub
popa
add
scas
xlat
xor
and
(bad)
in
push
in
jmp
and
mov
add
sub
fistp
out
adc
bound
das
push
sub
enter
pop
sub
inc
test
push
jp
lahf
pop
arpl
and
xlat
adc
pop
push
push
ins
fs
jne
push
inc
inc
cmc
jmp
mov
sbb
dec
mov
popf
into
add
popa
mov
lods
(bad)
jno
je
inc
xchg
fimul
arpl
fwait
and
stos
dec
adc
int
pusha
push
not
inc
shl
not
retf
xor
xor
and
mov
and
cmp
push
mov
addr16
add
add
push
mov
out
pop
push
loop
in
pop
pop
mov
cmps
popf
lock
adc
mov
jmp
cdq
dec
pushf
mov
or
sbb
add
lods
xor
loop
sub
retf
ds
sub
mov
cmc
test
aad
push
pop
retf
mov
fyl2x
sub
addr16
adc
mov
sbb
or
shl
ret
test
xlat
ins
jg
mov
jge
outs
ds
imul
jbe
inc
mov
outs
sub
add
aad
pop
int3
(bad)
mov
pushf
imul
sub
cmp
in
sbb
push
es
adc
mov
cmp
jbe
out
(bad)
mov
jb
dec
sub
cmp
sbb
(bad)
ja
adc
cmp
out
adc
push
dec
adc
(bad)
jmp
test
push
aas
push
adc
pusha
pop
int3
shl
pop
fwait
lods
test
jecxz
inc
inc
or
push
adc
scas
inc
sbb
lock
mov
out
(bad)
in
and
pop
int
and
pop
or
jno
repz
adc
stos
in
mov
cli
push
pop
das
mov
ja
add
xchg
enter
push
shl
push
shl
lock
push
push
repz
jo
sahf
aaa
xor
lods
mov
jmp
int3
jmp
adc
addr16
outs
push
mov
out
push
call
pop
xchg
jmp
mov
mov
in
cmc
gs
shr
jle
mov
add
adc
and
scas
arpl
(bad)
test
cmc
or
fdiv
mov
pop
in
or
mov
movs
xor
xchg
rcl
adc
mov
sub
mov
push
inc
xor
xor
mov
(bad)
jno
adc
(bad)
enter
sar
sub
jae
xor
outs
je
xlat
int3
sbb
std
js
push
adc
push
movs
adc
cli
loope
dec
inc
pushf
sahf
ds
out
mov
cmps
mov
sub
dec
xor
loope
inc
push
imul
fdiv
ficomp
or
inc
lods
cld
loope
mov
mov
ja
nop
mov
jmp
cmp
fcmovbe
repz
mov
xor
stos
jno
xchg
test
xor
enter
xor
cmp
jg
sub
rcr
adc
sbb
in
xchg
mov
xor
mov
pop
jge
fdiv
inc
sbb
jne
cmc
mul
add
or
dec
dec
outs
sbb
outs
adc
push
cmp
movs
ror
rcl
test
ds
repnz
fcmovnb
(bad)
std
xchg
xchg
and
retf
cmp
(bad)
(bad)
lahf
movs
jl
xlat
sub
sti
push
adc
(bad)
sbb
lahf
cs
into
pop
sbb
mov
pcmpeqd
push
push
cmc
es
pop
fwait
aad
in
dec
in
mov
dec
inc
push
(bad)
mov
das
push
push
xchg
loopne
or
into
push
and
or
test
jle
pop
ret
inc
cdq
popa
or
pop
addr16
mov
cmps
cmp
in
mov
sbb
add
repz
mov
lea
jns
sub
sti
pushf
ficomp
test
sti
es
popf
xchg
gs
dec
jno
int
and
push
jecxz
jg
fisttp
push
pusha
mov
xchg
in
add
or
into
or
adc
or
int
repz
test
dec
pushf
xor
es
retf
in
ins
neg
sbb
mov
xor
jo
xor
inc
xchg
retf
in
sbb
lods
mov
inc
repnz
stos
jb
xchg
push
arpl
and
xchg
hlt
test
ss
addr16
add
addr16
retf
jmp
jg
pushf
or
aam
popf
rcl
(bad)
in
fdivr
mov
xchg
out
and
mov
and
(bad)
xlat
fwait
cmp
leave
vphadduwd
and
pop
mov
retf
movs
cmp
cmps
test
(bad)
stos
sar
dec
push
xor
aam
pusha
fst
(bad)
fsub
pop
mov
push
mov
mov
xchg
das
aam
push
jbe
in
scas
xlat
fidiv
inc
fs
and
jp
leave
jb
mov
iret
inc
int3
in
push
or
addr16
pushf
push
mov
sbb
add
xor
push
ins
ins
rcl
out
dec
pop
out
or
(bad)
enter
aad
les
sbb
sbb
ret
mov
fld
fs
xor
mov
xchg
shr
and
loopne
push
lds
out
add
mov
adc
xor
adc
mov
out
aad
jmp
sub
arpl
mov
pop
sbb
and
lock
cdq
std
inc
scas
aam
ret
bound
mov
(bad)
jge
cmp
loopne
cdq
add
mov
outs
and
xor
rcl
push
(bad)
mov
inc
cli
xor
push
mov
lahf
jno
jnp
or
das
pop
mov
and
cmp
pop
xor
mov
cmp
mov
mov
add
mov
pop
ins
imul
jmp
ficom
mov
(bad)
scas
xor
stos
xchg
aam
mul
xor
mov
mov
(bad)
dec
icebp
in
jle
mov
test
push
push
push
adc
or
pushf
cmp
mov
push
sub
cli
mov
fdiv
aam
or
aas
stos
fsub
mov
push
push
add
dec
iret
mov
xchg
add
cld
out
nop
mov
(bad)
xchg
pop
(bad)
lods
sub
mul
jo
inc
sub
mov
and
out
xchg
(bad)
scas
and
arpl
jnp
push
inc
(bad)
dec
adc
movs
retf
jbe
cmp
sub
ret
xchg
dec
jecxz
add
sub
or
into
xchg
dec
sub
outs
jne
dec
push
dec
daa
mov
jmp
xchg
add
test
inc
push
xlat
xor
mov
nop
add
and
mov
mov
and
pop
mov
stos
xchg
ins
cmps
pop
out
push
sbb
and
push
test
mov
mov
push
mov
sbb
mov
lahf
push
mov
scas
les
pop
(bad)
clc
in
push
ss
lods
aam
mov
dec
dec
sbb
or
sbb
pop
pop
in
inc
shr
shl
mov
mov
sahf
cmp
jge
ret
inc
sete
adc
int3
sbb
jae
inc
sahf
or
mov
sbb
aas
push
icebp
cmp
inc
push
mov
pop
lods
xchg
sub
jno
xchg
pop
mov
xchg
mov
fadd
pusha
ins
icebp
and
pop
leave
or
leave
add
mov
and
xchg
pop
pop
aas
mov
loopne
(bad)
(bad)
jb
mov
call
repz
clc
adc
jg
inc
cwde
fcomp
push
adc
or
lahf
rcl
aas
adc
movs
xor
(bad)
ss
dec
mov
scas
xchg
inc
call
ja
dec
sbb
adc
sbb
adc
ficom
dec
aam
addr16
outs
pusha
mov
jo
jmp
pop
fidiv
imul
inc
ficom
push
les
outs
imul
xchg
jb
dec
sub
add
in
sbb
mov
iret
and
mov
push
daa
sub
call
add
cmp
punpcklbw
enter
add
mov
sahf
lahf
fild
sar
ja
mov
inc
cmp
in
add
inc
sahf
pop
daa
fbstp
bound
mov
stos
jl
push
pop
mov
cmp
jge
shr
(bad)
push
and
call
push
jp
mov
mov
gs
stos
cmps
imul
cwd
nop
push
sti
data16
jmp
bound
retf
or
scas
lahf
add
pop
pop
pop
and
ds
mov
stos
(bad)
movs
jmp
and
pop
mov
pop
mov
mov
popf
add
iret
sub
cmp
ror
xor
sahf
and
ins
pop
pop
mov
ds
mov
outs
scas
pop
inc
jmp
push
aam
or
leave
xor
and
fwait
push
shl
popa
ror
shl
out
push
enter
or
mov
jb
sahf
or
inc
adc
fisttp
je
adc
out
iret
mov
mov
xlat
cmp
inc
jno
cmp
shl
jmp
jp
sbb
fs
test
div
sbb
mov
repz
das
mov
add
std
fimul
in
dec
sti
add
inc
or
jg
out
call
mov
push
(bad)
out
xchg
mov
push
test
jne
sub
jbe
popf
xchg
jno
je
pop
sbb
pop
cmc
jg
jb
ficomp
pop
fild
xor
push
or
inc
fldcw
jns
ds
daa
sbb
sbb
test
lds
rol
mov
aaa
adc
out
lock
shr
xor
or
push
(bad)
mov
mov
imul
aam
xor
(bad)
out
add
fild
jo
sbb
cli
sbb
es
jp
ror
or
push
xchg
aam
inc
pop
repnz
loop
adc
imul
nop
adc
jmp
inc
scas
jmp
lds
outs
push
xchg
pushf
xchg
js
xchg
dec
fcom
xchg
push
push
jbe
call
inc
inc
int3
out
aad
lock
add
scas
inc
xor
cli
mov
sub
retf
cmc
push
ficom
mov
or
out
mov
xor
and
jecxz
pop
cdq
(bad)
hlt
mov
out
sti
mov
ficom
inc
cmc
cdq
stos
xchg
test
xor
jne
inc
adc
nop
and
cmp
inc
mov
clc
pop
dec
cmp
cmp
arpl
cli
fwait
or
pop
jl
stos
push
js
inc
mov
js
push
xchg
xchg
mov
cmp
inc
pop
stos
adc
js
sbb
add
lods
sar
pusha
push
rcr
xchg
out
faddp
xor
jmp
inc
push
xor
aaa
and
dec
add
test
mov
test
adc
jbe
scas
test
mov
mov
sbb
push
mov
xchg
ja
call
mov
mov
std
pop
enter
dec
int3
jmp
add
add
jmp
and
adc
call
ja
dec
cmps
pop
lock
push
xchg
inc
lahf
lods
retf
aam
or
and
xchg
adc
out
xor
mov
lock
sub
xchg
daa
jbe
and
add
lahf
lock
out
ins
inc
add
pop
cmps
in
test
aaa
sti
or
dec
jmp
mov
mov
jp
adc
inc
push
(bad)
outs
lahf
and
adc
test
out
pusha
(bad)
mov
push
add
scas
pop
iret
push
jno
inc
or
inc
pop
pop
mov
out
loopne
enter
fisttp
and
xchg
jge
sub
popf
rcl
jo
ror
les
sub
out
(bad)
aam
dec
popa
xchg
mov
push
jmp
xor
mov
ss
xchg
(bad)
in
cs
sbb
adc
(bad)
out
sub
xor
cmps
mov
hlt
sbb
pop
out
adc
dec
push
dec
lods
push
cmps
cmp
sti
xor
fadd
test
inc
adc
xor
xchg
repz
shr
xchg
dec
jno
jo
mov
fcomip
or
rol
dec
pop
cmp
jp
mov
xchg
test
pop
xor
repz
jae
or
cli
test
fsub
shl
or
mov
mov
xchg
mov
pop
pop
push
cli
jmp
sbb
loope
ins
call
mov
pop
push
clc
retf
shl
test
cld
xor
mov
repz
fsubr
mov
leave
push
pop
mov
push
enter
inc
adc
xchg
mov
pop
sub
add
popa
dec
xlat
mov
inc
mov
cs
loopne
add
loope
sbb
call
xor
lea
sub
dec
cmp
pop
add
xchg
inc
adc
jp
pushf
stos
sbb
in
into
cwde
jne
xchg
sbb
jnp
xchg
rol
jne
pop
cmp
cmp
xchg
lods
sbb
inc
cs
mov
ds
or
xlat
sub
sub
mov
mov
pusha
js
iret
push
push
cmps
loope
add
push
cmp
mov
enter
pusha
inc
mov
mov
lea
dec
cmps
xchg
cwde
and
cwde
aas
cmp
aas
mov
dec
lods
adc
into
aaa
pop
dec
xor
push
icebp
sbb
and
cmps
push
push
xchg
and
fstp
mov
xchg
sbb
cmps
sub
outs
test
mov
cmps
pop
xchg
or
push
imul
jg
in
mov
les
stos
and
stos
adc
(bad)
mov
jb
push
ss
test
aas
pop
sub
mov
mov
ins
rol
adc
xchg
sub
int3
cmps
jmp
out
cmp
scas
cmps
mov
paddb
push
fld
adc
dec
sbb
aas
lods
add
dec
inc
bnd
add
int3
mov
out
mov
imul
iret
aam
loop
fcomp
inc
adc
sbb
push
add
sti
movs
int
cmc
xor
adc
push
xchg
shl
out
cmp
ins
adc
ins
and
cmc
cmp
(bad)
mov
cmp
jno
das
inc
cwde
cmp
fldenv
jae
pusha
outs
mov
mov
sbb
jnp
aaa
jo
retf
mov
pop
mov
mov
pushf
dec
sti
jl
push
add
xor
and
pop
arpl
xchg
cmp
pop
add
ret
mov
sub
mov
das
imul
or
push
add
adc
jp
push
xor
xchg
shl
sti
mov
inc
xor
cmp
fld
data16
hlt
or
popa
mov
sahf
cmc
sub
xor
into
add
xor
sub
cmp
nop
inc
push
mov
dec
or
and
movs
push
add
jp
or
shl
hlt
xchg
push
outs
dec
mov
fdiv
cmc
push
jns
popa
(bad)
(bad)
jecxz
dec
mov
out
xor
adc
lea
xchg
cmp
gs
imul
into
cmp
inc
pop
mov
dec
xor
retf
je
ins
mov
adc
test
adc
adc
push
shr
mov
mov
mov
xchg
push
cs
ror
lahf
jmp
jl
shr
in
mov
cmp
cmp
out
hlt
retf
clc
sbb
and
adc
inc
(bad)
repnz
shr
es
mov
add
mov
test
jmp
or
aad
ret
bound
out
js
jnp
lock
inc
popf
dec
cmp
sub
aam
out
dec
movs
and
sub
and
pop
push
lock
sub
leave
(bad)
mov
ret
mov
sbb
arpl
imul
outs
add
adc
(bad)
mov
adc
and
sbb
(bad)
jmp
xor
jno
cmps
pop
and
sub
mov
pop
or
push
lds
xchg
fdivr
and
popf
ins
into
sar
mov
shr
sbb
jnp
repnz
push
jp
sbb
aas
ror
pop
adc
cld
rcl
into
and
cmps
jns
pop
jg
mov
or
lods
sahf
xchg
test
je
daa
mov
mov
clc
aas
enter
(bad)
ja
rcl
jns
adc
mov
pop
psraw
neg
sbb
xchg
int
ss
jno
into
pop
in
test
mov
inc
sti
adc
inc
stos
dec
test
movs
ret
das
jg
fs
sahf
lds
sbb
push
les
adc
lods
cdq
popa
(bad)
jne
adc
scas
ror
pop
test
pushf
jbe
in
inc
mov
ss
mov
push
pusha
adc
or
(bad)
dec
ss
stos
sbb
mov
push
pusha
in
stc
jns
dec
int3
cwde
dec
sub
bound
(bad)
cmp
les
lods
(bad)
iret
inc
jae
fcmovnu
sbb
sub
hlt
out
ss
xchg
xor
inc
cmp
stos
les
adc
rcr
es
cmps
sbb
aad
cmc
aam
or
jbe
pop
push
inc
repnz
movs
movs
fbstp
mov
or
shl
inc
dec
dec
jp
pop
cdq
mov
fsub
jp
push
out
ror
int
les
xchg
jmp
nop
rol
sbb
pop
inc
stos
mov
pop
push
iret
or
lock
inc
xchg
mov
jp
call
movs
xor
js
push
imul
dec
inc
js
xor
sub
and
ja
dec
mov
sbb
lods
aad
cld
mov
cdq
loope
fcmovbe
cmps
mov
or
mov
cmp
sbb
jnp
fs
cld
scas
mov
xchg
jmp
repnz
sbb
inc
add
or
mov
std
lea
mov
cmc
enter
add
(bad)
mov
push
jmp
jle
sub
sahf
cwde
add
cmp
mov
sbb
mov
add
dec
stos
aam
and
inc
jne
imul
push
imul
out
sbb
add
sub
fdivr
popa
pop
xlat
test
addr16
xchg
push
dec
cmp
(bad)
jl
stos
mov
test
call
xchg
jecxz
push
out
xor
out
mov
dec
in
mov
test
popf
dec
scas
fwait
aad
les
mov
cmps
sbb
xlat
pop
jg
jge
les
or
xor
pushf
sub
retf
and
jl
inc
in
push
dec
lods
inc
adc
and
pop
add
mov
and
sbb
push
syscall
cdq
les
jns
pop
out
idiv
mov
push
or
cmps
retf
daa
jp
jbe
cmp
adc
cdq
dec
dec
xchg
mov
lods
arpl
mov
(bad)
test
imul
retf
pushf
ss
cld
push
pop
mov
fisttp
xchg
icebp
shl
dec
out
inc
push
mov
rcl
mov
sar
pop
(bad)
mov
jge
out
sub
in
cmp
(bad)
loopne
add
inc
xchg
or
arpl
int
cmp
in
adc
adc
dec
and
clc
scas
push
xor
and
mov
scas
jns
xor
push
jmp
inc
add
xchg
add
xor
stos
or
adc
or
mov
mov
cmp
sahf
adc
xchg
mov
ins
mov
jl
lds
xlat
sbb
and
ror
sub
xchg
xchg
inc
stc
les
xchg
mov
mov
pop
mov
mov
ja
pushf
jmp
in
lea
js
add
or
cmps
lods
int3
es
jg
outs
mov
xor
hlt
jmp
aaa
sub
xor
inc
jb
mov
push
icebp
cmc
pop
shl
adc
jne
mov
mov
push
(bad)
xchg
ds
lea
push
shl
retf
xchg
xchg
jae
xor
rcr
cdq
sub
jno
retf
dec
pop
dec
cwde
jnp
fnstcw
inc
ins
sbb
pushf
inc
out
dec
hlt
cwde
out
sbb
clc
or
jbe
int3
iret
cmc
add
pop
sub
movs
mov
sub
aaa
xor
shr
ret
sub
jno
aam
popf
pop
sub
xor
in
rol
out
mov
push
loope
mov
or
or
xchg
fs
leave
ins
aad
mov
mov
push
jne
pop
and
fwait
mov
xor
xor
dec
cli
pop
aaa
in
ret
lods
out
jne
aaa
daa
jg
(bad)
js
lods
dec
mov
cld
adc
ficomp
jmp
es
dec
mov
push
sub
pop
dec
lahf
xchg
ja
mov
(bad)
loop
and
cmps
mov
xor
mov
test
popa
aam
mov
jmp
fs
cmp
pop
add
ja
sub
dec
gs
outs
jl
fucomi
lock
xchg
ss
sub
div
fnop
ja
fwait
es
sub
in
sti
mov
les
out
(bad)
push
aad
pop
mov
pop
in
dec
inc
cwde
add
xlat
add
sub
and
mov
popf
aam
fsubr
or
frndint
sub
push
push
add
retf
popa
jne
mov
mov
in
jae
dec
imul
lods
add
mov
stos
loop
popa
push
mov
pop
loope
repnz
push
sub
mov
out
enter
mov
shl
inc
fsubp
cmp
call
js
cs
dec
(bad)
jo
scas
or
mov
scas
or
into
cmp
sti
and
jmp
int3
fild
cmps
and
cmp
inc
pusha
adc
inc
or
cmp
push
retf
and
outs
adc
jl
push
and
cmps
pop
pop
fsub
lds
fcom
jp
mov
cdq
dec
lock
inc
sub
cmp
pop
cmp
push
mov
ret
or
(bad)
icebp
adc
push
push
cwde
inc
jg
dec
lds
in
mov
mov
iret
cmps
arpl
sbb
or
jg
in
sub
inc
ins
mov
sub
cmps
jmp
stos
pop
es
xchg
out
sub
ins
jg
jns
push
mov
outs
sub
cmp
mov
icebp
ss
xor
jle
jl
dec
cmp
in
sbb
aaa
repz
icebp
xchg
push
sub
jbe
mov
sbb
push
and
in
sub
push
xchg
mov
cmp
das
mov
cmp
fstp
hlt
xchg
push
jno
add
test
or
pop
add
cli
nop
mov
aad
mov
movs
push
jg
(bad)
js
mov
cmp
mov
stc
clc
jns
jmp
and
cmps
push
xchg
ffree
dec
cld
in
push
clc
in
add
xchg
pushf
out
sub
in
push
push
inc
(bad)
test
xchg
pop
and
fisttp
pop
lods
jge
jmp
movs
ja
test
add
stos
movs
push
movs
sbb
sahf
(bad)
icebp
lahf
shrd
gs
sub
pop
dec
sub
or
add
(bad)
or
dec
adc
jbe
arpl
jmp
test
jne
and
jge
test
out
inc
mov
jnp
add
out
pop
dec
int
xor
(bad)
enter
popa
pop
or
sbb
inc
lea
cwde
int3
or
dec
leave
dec
push
and
or
stos
stos
jnp
xor
inc
push
repnz
dec
dec
sahf
jmp
sbb
dec
mov
and
pushf
jno
add
imul
xor
cmp
sbb
xchg
stos
bound
loopne
dec
not
lock
inc
leave
dec
stc
sbb
loope
mov
sbb
arpl
mov
xchg
(bad)
sbb
(bad)
pop
sahf
cmps
in
test
fisub
jno
test
mov
jge
out
lds
dec
ins
nop
mov
add
xchg
fidiv
xor
xor
xor
(bad)
adc
aaa
mov
inc
xchg
pop
inc
jne
jmp
or
cmp
popa
ficomp
leave
adc
push
hlt
mov
inc
jge
cmp
push
outs
ins
adc
mov
test
out
scas
addr16
add
out
add
cmp
jmp
in
ret
push
gs
(bad)
mov
push
stos
ds
pop
push
test
add
jmp
xor
pusha
pop
jp
or
xor
adc
jns
mov
sti
jg
sub
cmp
cld
mov
(bad)
shl
imul
inc
push
jmp
jge
ja
jl
dec
add
aam
out
cs
jge
push
pop
dec
pop
cmp
and
movs
xchg
xor
mov
cli
lods
iret
mov
cmps
mov
shl
jmp
inc
inc
movs
jmp
pop
cmp
pushf
cmp
shr
outs
stos
xchg
into
pop
pop
shl
pop
scas
ins
cmp
or
test
scas
shl
popa
adc
jb
xchg
popf
pop
push
lods
dec
int3
sbb
mov
imul
push
in
aas
mov
jmp
mov
mov
shl
call
push
xor
test
rcl
sbb
mov
idiv
cmp
jno
jl
int3
(bad)
mov
sbb
add
sti
mov
cwde
dec
popf
pop
jmp
add
pop
int
daa
jns
xchg
repnz
cmc
not
mov
bound
mov
sub
or
and
faddp
inc
add
ds
and
mov
je
cmps
fs
xchg
mov
sub
aas
into
test
sub
jno
mov
mov
sub
lock
(bad)
fwait
or
pop
out
(bad)
loope
xchg
je
push
dec
sahf
mov
sub
sti
xchg
adc
sub
aad
int
(bad)
push
sti
hlt
fst
or
out
dec
popf
je
xchg
sub
mov
jp
xchg
add
push
push
xchg
nop
dec
jne
mov
jmp
mov
or
mov
pop
xor
test
les
jnp
in
jl
adc
pop
sub
test
ror
jl
fdivrp
dec
aam
jb
test
push
fisttp
add
xor
lock
cmp
dec
add
or
xor
dec
dec
add
sti
inc
adc
cwde
cli
cli
mov
adc
mov
icebp
pop
mov
das
xchg
and
xor
xor
inc
test
stc
test
dec
mov
(bad)
sahf
xor
add
mov
lods
or
push
mov
(bad)
fstcw
jne
jae
cmps
fsincos
cwde
imul
ins
out
loope
sbb
es
dec
mov
mov
and
inc
cmp
das
iret
push
jno
mov
xchg
enter
cwde
xor
lods
rol
bswap
xchg
mov
xor
hlt
xchg
pop
mov
sahf
push
dec
add
das
rol
cmp
aas
xor
add
aad
arpl
dec
mov
dec
jg
cmc
xor
nop
mov
mov
add
movs
inc
std
pop
jge
pop
frstor
adc
add
cs
and
fild
aam
and
cs
xchg
movs
push
lods
mov
sbb
loop
xchg
cmp
(bad)
jmp
call
pop
mov
ror
mov
sahf
jbe
nop
lahf
rcr
aad
xchg
sub
enter
jae
cli
sub
stos
xor
push
pop
gs
ds
and
push
mov
loop
out
sbb
push
ja
ja
(bad)
dec
popf
aas
push
push
int3
arpl
ret
sbb
cdq
in
aad
mov
mov
cmp
lahf
icebp
out
cwde
cmp
(bad)
and
stc
sub
sub
out
fs
add
push
cmp
iret
fisub
fnsave
and
mov
js
icebp
fisttp
dec
das
dec
scas
sbb
jl
mov
jmp
mov
and
(bad)
fadd
jne
sub
dec
pop
jecxz
scas
dec
sbb
add
push
fsubr
ja
xchg
add
xchg
xchg
push
dec
and
out
in
call
jo
jns
push
or
push
cmps
xchg
adc
in
shld
sbb
or
or
xchg
jo
add
push
jp
cmps
add
jl
in
lock
enter
ja
je
mov
lds
mov
stos
xor
sbb
imul
in
(bad)
(bad)
adc
into
mov
cmp
mov
lahf
stos
jns
adc
es
dec
or
inc
arpl
xor
js
jns
adc
xchg
stos
loop
add
xor
dec
xlat
mov
aam
push
scas
ja
jb
pop
ins
add
jge
xor
outs
xchg
ins
dec
enter
mov
dec
lods
jge
test
or
jae
hlt
or
push
and
jge
mov
mov
iret
pop
adc
lods
add
out
call
pushf
ja
xor
mov
mov
xchg
cmp
fwait
jge
out
jbe
mov
not
xor
mov
sub
jb
or
icebp
adc
test
xchg
pop
mov
jl
fbstp
dec
jecxz
aas
div
mov
retf
in
ins
mov
shl
fmul
icebp
push
sbb
test
pop
gs
lock
pop
xchg
rol
mov
fmul
fs
in
jge
adc
(bad)
dec
stos
mov
pop
sub
sbb
in
cli
mov
cmc
repnz
mov
mov
pushf
mov
jno
jb
pop
jb
aam
pop
add
dec
mov
sbb
mov
and
into
in
sub
or
mov
ins
mov
cli
call
aam
stos
push
or
mov
pusha
out
jns
adc
cmc
daa
mov
call
repnz
test
adc
add
mov
int3
inc
cmp
cld
in
mov
xor
fs
pop
lahf
call
adc
sti
iret
test
push
lahf
ja
cmc
test
push
and
xor
test
or
int
sti
out
fiadd
inc
inc
fsubp
jmp
repnz
jbe
rcl
jle
mov
scas
cdq
add
xor
js
into
dec
movs
or
jne
leave
inc
frstor
retf
xor
lahf
fisub
cli
or
xlat
sub
stc
mov
call
fmul
sar
sahf
fnstcw
adc
mov
outs
jne
jo
push
adc
pop
test
fsubr
mov
out
lods
fisttp
imul
pop
dec
jle
xchg
ret
jnp
scas
dec
div
jb
(bad)
mov
ds
adc
mov
dec
mov
clc
ror
add
outs
xchg
xchg
jp
scas
test
aam
inc
sub
inc
dec
xchg
inc
leave
lods
push
clc
inc
mov
mov
jp
push
ins
xchg
mov
jge
clc
jmp
mov
in
mov
inc
dec
mov
sub
ds
cmp
inc
mov
retf
and
xor
cmp
rcl
iret
imul
push
out
mov
leave
sub
int3
sub
jp
out
shr
dec
leave
movs
imul
xchg
mov
push
mov
movzx
jg
sbb
das
and
sbb
inc
add
add
mov
dec
lods
jns
push
mov
and
rcr
mov
dec
icebp
scas
jmp
ss
xchg
scas
pop
scas
and
mov
jbe
sub
or
add
and
and
mov
xor
xchg
mov
jnp
or
movs
test
popf
outs
or
xchg
push
sbb
push
(bad)
repnz
mov
push
mov
ficomp
(bad)
(bad)
and
push
cmp
ror
push
scas
call
pushf
loop
cmp
fisub
pusha
mov
aad
inc
ficomp
scas
stos
pusha
xchg
sbb
mov
scas
(bad)
in
shl
xlat
ret
js
std
and
xor
mov
into
mov
push
mov
sbb
mov
cmp
lods
and
in
add
and
sbb
jge
push
jle
scas
clc
add
test
das
adc
fistp
ret
mov
out
inc
xchg
fidivr
sub
enter
test
icebp
sub
iret
and
sar
adc
mov
xchg
fimul
or
push
add
out
sbb
and
(bad)
(bad)
movs
jecxz
lock
sar
mov
es
pop
mov
mov
repnz
fld
not
ds
mov
sub
jno
gs
bound
pushf
jne
and
adc
pop
and
and
je
push
out
mov
cmps
mov
(bad)
in
ja
jmp
lock
fistp
inc
test
out
cmp
jns
push
jg
stos
jns
inc
clc
pop
pop
(bad)
js
(bad)
jnp
inc
cwde
pop
rcr
xor
retf
mov
lods
mov
in
xor
out
sub
fidiv
adc
inc
rol
in
pop
sbb
lea
add
adc
int
add
loopne
test
test
pop
daa
inc
sbb
jb
imul
enter
out
mov
pop
fiadd
cmp
xchg
loop
or
sbb
pop
push
sahf
push
sbb
add
mov
mov
mov
or
sbb
push
jg
stos
push
push
xor
jb
nop
mov
outs
cmps
sub
dec
cdq
inc
xchg
mov
into
xchg
arpl
int
xchg
rol
xchg
jp
xchg
sbb
and
mov
(bad)
repnz
xor
adc
movs
mov
movs
add
rcr
cmp
outs
repnz
xchg
loop
test
xchg
aad
or
jb
data16
pushf
or
inc
push
mov
ds
push
adc
ins
movhps
mov
addr16
outs
or
dec
or
xor
xchg
lahf
push
pop
xchg
out
cld
fnsave
aas
js
sub
ja
(bad)
cmp
ret
les
jno
dec
dec
dec
dec
shl
(bad)
repz
jecxz
cmp
cmp
mov
pop
cdq
(bad)
(bad)
mov
add
icebp
fnsave
dec
sub
clc
ret
pop
in
mov
cmp
in
ins
pop
jmp
inc
dec
inc
call
data16
fnstsw
cmp
sub
mov
xor
xor
sub
xor
movs
pop
mov
and
jo
jp
cli
cmp
fisub
push
push
ja
pop
dec
push
sbb
and
pop
inc
mov
mov
bound
cmps
xlat
outs
lock
xor
rol
jl
je
jl
jecxz
into
xor
push
push
call
pop
out
jl
sbb
add
sub
dec
push
sbb
dec
jecxz
add
imul
adc
xor
in
or
jmp
adc
pop
or
clc
sbb
inc
mov
enter
and
xor
mov
fistp
(bad)
xchg
call
ss
outs
je
xor
test
repnz
and
arpl
xlat
and
xchg
cmp
outs
aam
jmp
mov
and
addr16
inc
or
push
iret
out
mov
dec
adc
imul
aam
mov
dec
mov
add
xchg
xlat
xor
jns
rcl
scas
push
dec
sahf
mov
inc
xor
cmp
js
adc
hlt
or
out
sahf
int3
cld
jno
xchg
adc
je
mov
out
and
ja
push
and
aad
cmc
jl
pushf
shl
add
into
mov
push
push
repnz
sbb
pop
or
xchg
stos
inc
cmp
pop
into
retf
push
sub
inc
cmp
fwait
dec
movs
push
dec
sub
mov
inc
adc
loope
or
ins
retf
xchg
shr
stos
fstp
dec
or
aaa
mov
rcr
push
add
das
jl
(bad)
shr
cmp
fcmovnu
mov
mov
mov
in
ss
imul
xor
in
cmps
adc
and
hlt
in
es
jge
in
mov
scas
rol
jbe
push
mov
push
repnz
cld
jg
mov
pop
xchg
lea
cmp
push
adc
xor
mov
out
and
add
pop
rcl
pop
lods
enter
sub
jp
ficomp
mov
cld
adc
cmps
scas
add
mov
cld
aad
sub
jle
mov
(bad)
or
adc
mov
cmp
and
adc
pop
retf
xor
repnz
mov
mov
jle
sub
movs
xchg
cdq
xchg
call
pop
push
ret
xor
pop
pop
and
stos
push
(bad)
adc
loop
mov
(bad)
pop
ss
shl
xchg
std
cwde
std
sbb
push
rcr
out
jae
call
mov
jae
push
loopne
fild
aad
int
inc
push
xchg
push
push
inc
xor
in
fmulp
sbb
cdq
cs
into
pop
jg
ins
adc
daa
in
xchg
nop
daa
popa
rcr
ins
inc
mov
mov
mov
pop
xlat
movs
push
xchg
scas
push
(bad)
icebp
jmp
push
sbb
cmps
in
xchg
inc
test
es
mov
cmp
scas
fst
mov
mov
mov
dec
inc
inc
enter
xchg
sbb
xchg
iret
inc
xor
test
and
add
dec
(bad)
mov
dec
daa
je
pop
or
dec
clc
iret
sbb
dec
cmp
loopne
jns
adc
test
(bad)
rol
xrelease
pushf
and
outs
outs
push
cmp
jne
push
mov
adc
std
and
aaa
push
mov
add
push
pop
arpl
jmp
xchg
pop
add
pop
sar
in
push
jl
sub
adc
add
jp
pushf
mov
call
jl
jge
std
scas
and
dec
xchg
mov
sub
popa
nop
and
dec
xchg
scas
sahf
inc
push
mov
fwait
pop
std
and
mov
std
jmp
xlat
jle
andps
cdq
(bad)
dec
loope
outs
jno
fdivr
pop
pop
pop
aas
cmps
shl
retf
popa
cmp
push
push
retf
sar
test
call
out
movs
push
out
(bad)
retf
add
ins
(bad)
in
push
adc
ret
shr
(bad)
nop
clc
and
and
mov
jne
imul
and
fimul
push
test
bound
imul
pop
aad
rol
cmp
leave
or
inc
add
popf
mov
sub
jge
inc
jns
jo
lock
loopne
iret
xchg
(bad)
cmp
xor
lock
jge
ret
(bad)
add
mov
mov
out
and
in
or
push
data16
mov
retf
dec
or
mov
test
xchg
and
or
and
jmp
mov
jb
lea
test
inc
jle
add
push
xchg
push
adc
xchg
jb
and
dec
scas
mov
iret
scas
(bad)
xor
mov
or
mov
mov
add
add
cmp
outs
jno
push
cmp
push
call
jle
cmp
js
or
(bad)
scas
loope
pop
xor
adc
mov
jmp
xchg
or
sub
pop
mov
xchg
cmp
dec
pop
sub
push
shr
retf
mov
push
shl
ss
mov
add
cmp
out
repz
fwait
or
mov
icebp
mov
cmp
ja
xlat
adc
add
mov
out
rol
shl
pop
push
adc
cmp
mov
into
movs
rol
stos
movs
inc
nop
(bad)
jl
retf
stos
push
shl
push
fcomp
sub
call
in
loopne
dec
jbe
xchg
retf
dec
mov
pop
fnstenv
sub
js
(bad)
fstp
add
mov
jb
ins
(bad)
shl
in
xchg
mov
shr
push
pop
cmp
dec
mov
ret
or
inc
daa
je
bound
or
push
jns
xor
fiadd
and
(bad)
iret
imul
fidiv
mov
stc
iret
or
into
fcmovnu
ror
ins
rcr
jbe
call
lock
cs
daa
xchg
pusha
aam
mov
pop
shr
cld
mov
cmp
push
bnd
pop
stos
es
add
mov
clc
inc
idiv
das
test
enter
sbb
inc
push
push
jg
lods
scas
leave
mov
xchg
cmps
call
sbb
shr
in
stos
dec
shl
dec
retf
das
xchg
ret
mov
sbb
xor
iret
fbstp
sub
out
aam
jle
es
cmps
enter
pop
popf
lahf
fstp
dec
xlat
push
fcom
or
cdq
std
(bad)
jle
jg
push
push
icebp
cmps
inc
jl
inc
imul
jo
add
cmp
fcom
jle
jle
loop
pop
add
js
mov
in
mov
leave
arpl
fidivr
sub
pop
aad
mov
pop
nop
cwde
dec
iret
push
mov
and
syscall
jmp
shl
mov
(bad)
icebp
out
jmp
jl
cmp
adc
loopne
and
push
xor
movs
cmp
pop
lahf
fcmovb
mov
sub
add
jle
loope
xor
addr16
xchg
addr16
push
push
adc
cmp
xchg
leave
dec
pop
adc
push
enter
cmp
adc
stos
(bad)
mov
cs
paddsw
and
fbld
xchg
jmp
xchg
cli
stc
sub
repnz
lods
pop
sbb
loope
push
ins
imul
push
nop
in
xchg
out
xor
into
imul
cmps
les
or
pop
aaa
rol
add
pushf
movs
mov
cs
and
movs
aad
xor
sub
mov
std
loope
push
dec
push
jno
sub
rcl
sub
xlat
retf
adc
cmp
xchg
sbb
mov
dec
dec
(bad)
xor
sbb
imul
neg
cmps
and
mov
mov
add
aam
add
clc
add
scas
add
ja
pop
inc
arpl
cmp
stos
clc
nop
and
mov
lock
mov
dec
dec
inc
jb
fldenv
out
and
or
icebp
add
sbb
imul
aad
je
add
jg
jno
ds
les
sahf
push
mov
sub
out
push
mov
je
adc
(bad)
rcl
popa
cmp
fld
in
out
dec
push
sar
fidivr
jne
lods
mov
xchg
outs
inc
movs
(bad)
js
xor
ror
inc
fisubr
cmps
xchg
arpl
stos
int3
dec
jg
mov
jo
pusha
out
jns
jecxz
sub
dec
mov
cdq
imul
je
mov
mov
test
sub
pop
cmps
iret
and
shr
push
mov
test
pop
in
or
push
test
sbb
xchg
vunpckhps
jp
mov
cld
div
fiadd
imul
repnz
adc
jmp
mov
inc
xchg
push
sti
pop
mov
sbb
das
ffree
mov
sbb
dec
in
aad
inc
sub
cmp
pop
dec
ror
mov
jl
retf
jb
movs
xchg
dec
fnstcw
jo
call
inc
mov
dec
out
push
(bad)
ud0
vaddpd
outs
xchg
js
mov
pop
mov
addr16
jmp
and
pop
add
xor
sbb
sub
sbb
sub
dec
mov
lods
cmp
clc
cli
clc
lahf
in
add
(bad)
sbb
int3
int3
arpl
daa
push
cs
scas
jg
adc
fiadd
push
jmp
adc
and
xchg
mov
xchg
sbb
iret
or
xchg
mov
ret
leave
push
test
ror
lods
adc
popf
xor
push
pop
lods
xchg
aas
ja
xlat
(bad)
rol
into
les
or
add
jbe
jmp
jne
repz
gs
inc
jbe
repnz
stos
mov
fwait
dec
retf
stc
fcmovb
repz
cmp
pop
cli
mov
dec
sbb
pop
cmps
lods
mov
sbb
sbb
test
movs
sbb
inc
leave
mov
jnp
lods
test
clc
test
add
jo
add
or
lahf
push
fistp
dec
stos
imul
push
mov
repz
adc
add
adc
(bad)
mov
adc
sti
jae
loope
repnz
xchg
mov
sbb
mov
push
jge
pop
popa
xchg
test
(bad)
shl
xchg
mov
cmp
daa
daa
sub
inc
dec
mov
jg
cmp
cmp
cmp
xchg
mov
jp
in
outs
push
adc
inc
mov
gs
aad
inc
div
bswap
or
aam
cmps
fld
das
or
sbb
fwait
ret
std
xchg
popa
les
fsubr
xchg
sbb
into
rcl
sahf
jecxz
dec
cmp
mov
into
sub
jecxz
mov
mov
mov
or
cmp
push
xor
stos
pop
mov
pop
push
push
inc
sbb
loope
jns
cmps
loop
je
out
adc
and
sahf
das
mov
mov
adc
xchg
add
dec
lods
sti
in
aas
ror
cmp
push
js
sbb
retf
ficomp
xor
mov
aad
push
pop
xor
push
pop
(bad)
mov
(bad)
lods
xor
mov
inc
scas
gs
pop
cwde
push
mov
outs
ror
jbe
and
mov
xchg
out
mov
daa
les
xchg
adc
mov
call
xor
mov
clc
inc
mov
stos
push
fwait
sbb
xor
retf
(bad)
mov
js
pop
jecxz
in
or
mov
rcr
cmp
(bad)
mov
inc
ds
test
outs
mov
ror
sbb
push
push
dec
cmp
xchg
jmp
or
mov
sub
mov
xlat
mul
mov
lods
cmp
and
xchg
mov
bound
inc
push
div
dec
cmp
mov
sbb
(bad)
sbb
call
jl
repz
mov
cs
pop
and
retf
and
fs
sub
daa
sti
outs
pop
arpl
test
xor
add
and
dec
jmp
mov
mov
cmp
add
out
hlt
cmp
in
cmp
stos
(bad)
xchg
sub
xor
call
in
push
inc
mov
imul
mov
movs
ds
pop
cli
or
xchg
loope
inc
in
rcl
in
push
push
mov
jb
mov
rol
and
cmp
aam
arpl
stos
ret
or
int
xchg
mov
les
jb
out
xchg
inc
cmp
jmp
cwde
mov
xor
cmp
dec
gs
ds
sbb
adc
jg
dec
mov
mov
imul
jl
and
loopne
add
inc
cld
add
pop
mov
call
pop
sbb
out
scas
push
sbb
imul
cmp
cmps
fcom
retf
jg
mov
aaa
or
popa
data16
fidiv
hlt
loopne
dec
add
pop
mov
and
push
das
ins
aas
mov
lods
mov
jle
jae
add
into
daa
js
ss
pop
adc
ret
push
jnp
rcl
in
or
aaa
and
xchg
add
mov
mov
ins
xchg
xor
xchg
mov
fs
js
fdiv
ja
mov
push
mov
push
iret
jmp
jecxz
mov
push
and
lahf
fimul
xchg
xchg
enter
cmp
je
clc
fstp
jbe
mov
xor
cmp
mov
jmp
xchg
xor
(bad)
out
jl
das
sbb
sahf
pop
inc
popf
leave
add
int3
pop
jle
mov
push
mov
xlat
(bad)
out
sbb
pop
out
add
or
jle
mov
sar
(bad)
jae
xchg
mov
imul
popa
mov
scas
inc
repnz
imul
mov
scas
pop
cmp
xchg
sbb
popf
mov
and
ja
in
fs
adc
inc
sbb
call
xchg
or
std
loopne
arpl
push
fwait
(bad)
lods
ficomp
xchg
mov
xchg
int
outs
loop
sub
push
loope
push
pop
add
mov
ja
rcr
jge
pushf
out
in
xor
push
cmp
mov
dec
sbb
les
xlat
aam
jnp
in
inc
jae
push
stc
hlt
cmps
pop
js
loopne
sbb
inc
daa
cmps
or
adc
inc
fwait
bound
mov
mov
mov
sub
lea
inc
stos
and
and
fs
test
mov
mov
or
std
arpl
mov
ins
fdivr
cs
mov
(bad)
loope
mov
ins
mov
jns
stc
pop
mov
mov
(bad)
es
dec
(bad)
mov
in
call
xor
fcomp
stc
push
sti
jbe
mov
mov
pop
xchg
dec
jecxz
mov
push
mov
shr
sbb
sti
or
mov
popf
push
sbb
and
outs
out
fs
cli
mov
mov
cdq
mov
ins
jnp
sti
scas
popa
cmp
cmc
push
movs
out
xchg
sar
cmps
test
or
jne
sub
jbe
mov
jnp
jecxz
daa
xchg
inc
and
xor
imul
arpl
iret
or
xlat
dec
or
in
ja
icebp
xor
ins
sbb
mov
sbb
retf
mov
mov
mov
clc
(bad)
out
sub
scas
or
push
data16
mov
push
xchg
inc
inc
and
fcomp
pop
loopne
sub
and
mov
sub
jecxz
pop
in
mov
out
inc
push
(bad)
sbb
or
cmp
cmp
leave
shr
jmp
mov
inc
ret
push
in
daa
(bad)
push
add
push
cmp
in
popf
jns
mov
pop
push
sub
sahf
adc
push
jg
leave
cmc
inc
lods
in
into
mov
dec
mov
bound
cmp
arpl
fwait
imul
inc
in
mov
dec
jge
jle
push
out
push
sub
mov
fnsave
jb
jp
mov
mov
mov
and
inc
pop
inc
ret
fst
scas
ret
mov
cmc
sahf
in
inc
loope
test
shr
xor
xor
sub
dec
int
or
add
movs
mov
cmps
mov
(bad)
dec
sbb
add
test
sub
mov
adc
sbb
mov
cs
arpl
sar
ficom
pop
mov
fnstsw
div
(bad)
jns
adc
push
dec
push
lds
dec
js
movs
pop
cmp
push
mov
fcom
cmp
inc
mov
mov
mov
sbb
push
cdq
mov
pop
lds
cwde
xor
rcr
mov
dec
cwde
js
aad
add
out
cld
push
dec
dec
cli
les
sar
rcr
sub
inc
retf
sbb
mov
pop
ja
dec
mov
ss
cmp
cmp
dec
aaa
lea
pop
sub
jmp
jp
jno
or
inc
out
test
jge
add
mov
mov
rcl
sub
push
fchs
(bad)
sub
movs
add
lods
fcom
pop
aas
jp
jp
add
pusha
xor
(bad)
shl
sbb
inc
mov
xchg
out
or
ror
xchg
push
dec
shl
jl
sbb
outs
sub
call
outs
ins
int3
retf
pushf
dec
mov
popf
and
sbb
mov
fadd
jmp
mov
sub
xchg
enter
(bad)
jne
addr16
jle
jecxz
leavew
call
mov
ja
ja
call
pop
xlat
gs
bnd
jbe
push
std
sub
mov
and
lods
fistp
and
xchg
pop
cdq
arpl
and
sub
adc
cwde
jne
mov
imul
cmp
mov
ss
nop
hlt
lahf
jl
fwait
loope
and
ds
adc
mov
loop
aas
addr16
cmp
sbb
sub
inc
js
adc
movs
adc
push
mov
ret
mov
rol
jg
cmps
out
jae
test
push
mov
mov
push
iret
push
fcomp
repz
add
jmp
fldenv
dec
push
mov
sbb
lds
dec
xchg
sbb
or
and
jl
mov
pop
or
popf
cmc
or
(bad)
lock
ins
ins
jmp
in
mov
mov
cmp
or
adc
jnp
and
fild
movs
in
sub
sub
lods
call
clc
fsub
test
call
xor
arpl
stos
sub
loop
icebp
gs
(bad)
(bad)
ret
ficom
and
mul
cli
or
jbe
arpl
xchg
inc
xchg
push
or
add
dec
fwait
out
lock
mov
jno
out
imul
aas
vmovshdup
jp
aam
cmp
pusha
inc
lea
cwde
push
(bad)
stc
mov
out
add
test
pop
test
bound
mov
xor
lahf
jno
in
sbb
inc
fsub
push
xchg
push
scas
and
dec
(bad)
lods
int3
hlt
push
loop
repnz
stc
cmp
std
daa
shr
mov
sub
outs
jge
dec
int
jo
pop
out
jl
jp
jnp
xor
imul
or
in
out
leave
add
repz
jb
jns
pushf
jl
and
ja
in
xor
adc
dec
mov
push
fdiv
pop
mov
jne
(bad)
adc
mov
cld
sbb
push
je
stc
dec
sbb
lods
popf
addr16
ror
add
or
or
ins
ins
fadd
and
call
jle
aaa
add
xor
imul
push
mov
mov
fs
push
inc
and
fcom
test
jge
or
mov
pop
sbb
mov
jg
pop
or
push
push
clc
adc
or
xchg
jbe
jmp
adc
inc
pushf
test
out
ins
mov
sbb
aas
xchg
loopne
mov
popf
xchg
and
pushf
mov
pop
pop
push
jge
dec
cld
jmp
mov
or
xchg
sub
iret
xchg
sub
icebp
inc
fs
loopne
retf
jnp
adc
stc
ja
adc
dec
or
mov
fcom
or
imul
and
outs
call
cli
xor
addr16
add
lahf
cmp
sbb
scas
mov
ins
jmp
in
iret
lods
out
scas
cwde
mov
outs
repz
stos
mov
aas
arpl
(bad)
adc
sbb
sub
dec
xchg
mov
retf
sbb
test
jge
ror
pop
fs
fld
jb
cs
jo
jg
push
sub
or
pop
push
xchg
inc
sahf
dec
sbb
and
mov
shr
xor
int
fisttp
jl
enter
dec
inc
cs
sub
(bad)
xor
push
mov
scas
and
xchg
outs
ret
sub
mov
int
mov
or
or
aad
push
add
sbb
and
mov
stos
xor
add
lock
inc
jg
loopne
nop
mov
push
pop
imul
and
out
jmp
cmps
imul
sbb
or
add
gs
(bad)
xor
movs
mov
(bad)
js
bound
mov
xor
ret
in
jno
icebp
sub
bound
and
mov
mov
add
sbb
sbb
sbb
dec
cli
sub
es
ss
add
inc
or
jp
js
add
dec
dec
cmps
sub
or
lds
lods
jae
movs
jno
aad
shr
sub
test
push
push
push
fs
in
inc
or
call
mov
jecxz
stos
fadd
addr16
fsubp
mov
jne
fidiv
fstp
fist
jl
mov
je
retf
xor
je
ds
scas
push
pop
xor
call
jae
jbe
daa
adc
inc
repz
cmp
sub
fwait
mov
fs
jmp
add
pop
es
stos
mov
mov
pop
test
xchg
inc
xor
adc
icebp
mov
lea
mov
xchg
shl
sub
scas
iret
mov
xchg
stc
mov
jno
cmp
ds
inc
push
rol
(bad)
mov
ffreep
bound
sub
adc
mov
(bad)
test
inc
ins
or
ins
and
sbb
dec
sar
adc
sbb
(bad)
xchg
test
sbb
mov
(bad)
or
rcl
cmp
leave
jnp
in
fdiv
lea
sub
xor
popf
imul
fprem
mov
cmc
test
xchg
mov
xor
xchg
cld
call
xchg
jae
outs
test
sbb
adc
imul
dec
xor
enter
gs
aad
jno
mov
and
add
dec
shl
fst
fisub
mov
iret
cs
cmc
jle
test
repnz
daa
hlt
into
push
mov
addr16
pusha
xchg
test
xlat
inc
and
mov
ror
lds
or
pop
movs
xchg
xchg
arpl
pop
inc
xchg
mov
xor
mov
sahf
loopne
retf
sbb
inc
nop
cmp
aam
mov
mov
add
jle
fdivr
(bad)
fiadd
inc
lahf
repnz
adc
xor
xor
dec
xlat
lods
pop
dec
ror
test
inc
in
push
adc
stos
cs
lahf
cmps
push
ins
daa
ret
(bad)
mov
lock
loopne
lods
in
in
sbb
out
fs
inc
inc
(bad)
aad
(bad)
jne
repnz
das
mov
lahf
cwde
bound
es
dec
scas
mov
mov
and
(bad)
adc
add
add
clc
ins
mov
dec
clc
xor
mov
retf
int3
test
mov
mov
pop
nop
mov
mov
sahf
mov
sub
or
mov
test
es
imul
cmps
add
adc
cmps
adc
and
xor
outs
inc
mov
jnp
or
xchg
(bad)
lock
jb
int
jmp
imul
out
jp
into
shl
cmps
adc
jne
pop
mov
xchg
dec
jno
outs
mov
sbb
cld
jno
lea
cmc
cwde
jb
adc
and
js
repz
and
mov
nop
sbb
push
and
pop
push
pop
sub
sbb
jl
out
or
lods
mov
scas
pop
mov
xchg
xor
in
mov
mov
fstp
mov
aam
cli
outs
fst
push
lea
add
(bad)
mov
inc
mov
fiadd
xchg
jge
push
dec
xor
ficom
jge
push
ja
add
cmps
ins
mov
nop
fadd
xchg
push
test
add
aam
test
mov
mov
xor
inc
inc
test
xor
cmp
mov
repnz
call
lahf
outs
xchg
fs
in
inc
and
adc
push
leave
pop
pop
shl
pop
xchg
nop
repz
and
clc
pop
out
pop
cmps
leave
dec
test
mov
add
push
mov
adc
scas
cwde
outs
loopne
and
sahf
popa
stos
in
adc
fstp
pop
or
frstor
clc
out
pusha
not
adc
sahf
outs
mov
arpl
add
inc
sub
inc
sti
fiadd
pop
cmp
hlt
cmp
lods
inc
mov
fdiv
jne
mov
xor
add
(bad)
clc
ins
outs
repz
mov
mov
mov
aas
sbb
lock
jle
mov
dec
push
jl
ret
mov
lods
pop
add
out
pop
loope
sub
mov
add
pop
(bad)
in
ror
xchg
xor
jmp
sbb
ds
loope
stc
xor
mov
stos
mov
jle
ins
xor
loop
into
retf
jge
mov
jno
jle
sub
cmp
and
mov
enter
add
or
add
sar
add
cmp
(bad)
rol
fadd
adc
mov
and
cmps
sub
xchg
mov
xor
fisttp
xor
pushf
mov
xor
mov
inc
das
fimul
mov
and
jbe
ss
xchg
(bad)
inc
pop
mov
cdq
xchg
xchg
(bad)
jns
sub
stc
pop
push
outs
adc
stc
nop
nop
cmp
jmp
jne
nop
call
pop
jecxz
or
jno
and
repnz
jmp
mov
(bad)
or
(bad)
mov
retf
or
out
or
stos
arpl
dec
dec
cli
mov
dec
cmp
out
mov
sub
nop
adc
dec
sub
cwde
dec
int3
rol
pop
call
mov
push
mov
fwait
or
dec
mov
jmp
inc
das
xlat
mov
cmps
in
dec
cs
fsubr
out
aas
shl
cmp
pop
sub
dec
fucomp
dec
jae
sahf
xor
fisub
imul
repnz
xor
fidiv
pop
sbb
mov
cmps
adc
daa
mov
aaa
sub
nop
aad
and
jg
mov
push
adc
pop
sahf
stc
xlat
mov
jo
lods
pop
add
push
mov
jp
fsub
mov
in
jns
leave
inc
cmp
pop
mov
ja
mov
cmps
jae
cmps
or
or
lods
adc
inc
inc
pop
pop
loopne
push
pop
(bad)
xor
sbb
push
sbb
xchg
ret
inc
pop
push
je
or
test
pop
adc
cmp
out
leave
push
push
fsub
xor
and
and
out
sub
fwait
enter
pop
dec
sbb
ror
mov
inc
stos
xor
movs
pop
je
cmp
pop
lds
mov
add
mov
mov
sahf
(bad)
jecxz
xchg
adc
push
ja
sub
add
inc
outs
xor
mov
shl
xchg
lods
add
popf
movs
mov
push
retf
sub
(bad)
(bad)
clc
popa
inc
lea
int
enter
or
mov
(bad)
ins
jnp
pop
pop
adc
test
sub
mov
rcr
sahf
cmps
push
dec
mov
sub
jmp
fisttp
sbb
xchg
add
bound
retf
clc
xor
sti
fwait
sbb
les
js
xchg
and
mov
cmps
aaa
dec
pop
popa
inc
inc
push
sbb
push
popa
push
rol
pop
push
nop
xor
mov
iret
sub
add
cmps
pop
pop
ins
fsubr
fistp
mul
test
(bad)
out
adc
sbb
jne
repz
sbb
adc
jae
adc
inc
mov
jg
ins
add
xchg
push
jg
enter
(bad)
out
xchg
jl
cmp
pop
data16
addr16
jmp
pushf
shl
call
fincstp
cmps
ins
push
fptan
pop
jmp
jmp
or
pop
mov
xchg
jg
test
repnz
sub
cmp
ins
in
fcomp
ret
mov
adc
lahf
cmp
aaa
pop
add
xchg
in
dec
(bad)
pop
xor
scas
pop
mov
lods
fst
and
dec
ins
dec
pop
(bad)
std
add
cdq
dec
adc
xchg
or
fsub
inc
xor
jecxz
jb
mov
adc
sub
mov
and
test
stc
mov
daa
hlt
cld
not
mov
add
lods
pusha
lods
jecxz
xchg
mov
test
sbb
shl
mov
push
adc
and
jecxz
xchg
fwait
add
dec
out
push
cmp
aam
mov
xchg
in
xor
mov
mov
jmp
repnz
cmp
sub
jmp
cmp
mov
xchg
sbb
fst
outs
mov
lds
inc
mov
or
jb
outs
stos
dec
adc
lea
inc
sar
jns
es
mov
mov
pop
sbb
mov
xchg
fisub
(bad)
daa
sub
je
cmp
outs
pop
out
in
cmp
lods
jns
pusha
(bad)
movs
mov
jl
mov
mov
mov
setge
loope
stos
cmc
mov
push
add
and
mov
aaa
lods
add
scas
jae
mov
out
push
(bad)
xchg
dec
jnp
fwait
in
sbb
fimul
icebp
lea
jge
retf
mov
add
add
call
retf
outs
add
xor
fimul
sub
adc
xor
or
ins
sbb
and
(bad)
and
push
nop
dec
loopne
mov
gs
out
rol
cwde
ins
adc
iret
mov
adc
push
lods
popf
daa
fnstsw
repnz
sub
pop
fcmovnb
(bad)
rcpps
mov
mov
adc
push
stc
test
sub
ret
or
or
jmp
out
fwait
pop
or
inc
aam
pushf
addr16
ret
sbb
xor
(bad)
test
push
movs
add
or
loop
or
aam
add
out
inc
dec
push
data16
xchg
jne
sub
dec
call
ret
jns
ror
clc
ins
or
mov
fisttp
into
or
xchg
cmp
movs
ss
call
xor
jg
pop
retf
loope
retf
imul
call
jns
or
idiv
in
add
lock
cmp
iret
sbb
xor
dec
retf
and
mov
repnz
xchg
sahf
shl
jl
pop
add
repz
jne
and
push
bound
adc
fimul
pop
sbb
cs
mov
or
js
ror
cs
ds
push
stos
dec
outs
jle
push
adc
std
pop
data16
aaa
ss
(bad)
aad
in
test
jbe
inc
jae
lahf
xchg
test
outs
mov
sti
add
add
mov
enter
(bad)
push
je
jb
arpl
dec
popa
movs
add
(bad)
fdivr
sub
or
shl
sub
xor
xor
push
xlat
lds
(bad)
mov
pusha
mov
sbb
xlat
cdq
cwde
cmp
or
add
adc
sub
push
(bad)
and
jmp
fisttp
rol
mov
cld
pop
push
test
push
loop
jns
cld
push
aam
or
mov
sbb
add
fs
jb
push
cli
(bad)
adc
clc
loope
mov
mov
cmp
mov
retf
mov
retf
fnsave
inc
cmp
adc
(bad)
fcom
rol
and
(bad)
jmp
neg
arpl
push
test
mov
xor
mov
push
push
cmp
cmp
xchg
icebp
fisubr
xchg
push
pop
shr
or
mov
fisub
push
scas
(bad)
xor
dec
lahf
fldenv
pusha
call
push
das
scas
cdq
xor
stos
mov
rcr
mov
cmp
mov
dec
int3
mul
push
ret
pop
sub
popf
test
(bad)
ja
mov
scas
mov
mov
in
xchg
cmp
mov
mov
jmp
mov
dec
sbb
xchg
xchg
daa
dec
mov
adc
xchg
jge
mov
sub
sbb
jle
jl
jecxz
int3
mov
and
dec
ret
fisttp
mov
cmp
imul
mov
cmp
inc
movs
adc
cmp
xlat
out
pop
add
push
dec
mov
movs
cmp
xchg
inc
sbb
xchg
dec
mov
in
dec
cmps
pop
jnp
ds
lods
hlt
in
sub
sbb
fstp
adc
jnp
cli
xor
and
jp
icebp
icebp
cmp
jle
mov
jge
push
stos
sub
push
(bad)
ret
imul
adc
xchg
scas
push
cld
and
or
xchg
shl
adc
mov
mov
movs
(bad)
iret
test
inc
aas
scas
popf
pusha
stc
or
(bad)
adc
mov
adc
out
hlt
(bad)
cmp
adc
sub
xchg
mov
gs
mov
jg
and
fld
sub
jg
sub
sbb
cli
push
sahf
fcomp
sub
shr
dec
ds
and
dec
movs
mov
add
fst
fiadd
pop
imul
cdq
push
lock
adc
ds
push
mov
inc
sbb
dec
add
mov
push
and
std
push
jmp
xchg
pop
imul
cmp
push
rcr
fbstp
test
imul
(bad)
adc
sub
enter
ins
rcr
cmps
es
pop
aas
mov
adc
cmp
jnp
dec
jb
fdiv
push
xor
xor
shufps
jmp
adc
jnp
sub
adc
cmp
push
pop
sub
push
push
stos
scas
das
jne
(bad)
push
addr16
adc
dec
sbb
jmp
adc
push
je
jp
and
and
pop
sub
adc
jnp
xor
adc
jns
cmp
jp
int3
push
(bad)
pop
and
xor
int3
adc
fmulp
sbb
mov
cli
push
adc
out
mov
pop
pop
in
sbb
dec
cs
paddq
jne
or
les
outs
sbb
hlt
mov
xor
sbb
ins
cld
mov
ja
ins
jnp
pop
push
jmp
mov
cmp
out
lods
pop
ss
iret
xchg
stos
xor
lods
sbb
or
cs
dec
fmul
jns
sub
adc
ret
rcl
ror
mov
push
stos
push
push
pop
inc
mov
inc
pop
mov
mov
jbe
icebp
mov
adc
adc
adc
daa
nop
lds
shr
fwait
aaa
aad
pop
push
fnsave
and
sub
or
mov
inc
adc
movs
out
scas
pop
sar
lods
sub
mov
cmp
inc
shr
mov
dec
fisub
or
add
jecxz
inc
push
jmp
jmp
inc
hlt
or
aam
addr16
jmp
push
xor
adc
xlat
fwait
pop
(bad)
rol
xchg
add
clc
mov
aam
mov
jne
jno
in
sub
jmp
out
pusha
(bad)
cmp
and
ja
mov
stos
call
xlat
push
mov
or
into
rcl
mov
das
mov
jg
mov
inc
sbb
xchg
jmp
push
pop
(bad)
cmp
mov
test
mov
in
jp
fimul
add
pusha
sbb
ret
sbb
jmp
loope
mov
cdq
dec
rol
pop
into
jmp
out
aad
push
pusha
push
fimul
xchg
mov
sbb
xor
mov
jae
sbb
test
mov
mov
(bad)
cwde
out
ss
push
adc
fldln2
mov
retf
sub
push
in
or
mov
cdq
and
and
xchg
test
jbe
jo
ins
test
das
sbb
xchg
mov
push
mov
retf
(bad)
mov
lods
pop
and
mov
sub
mov
cmps
pusha
call
ss
cmp
inc
xor
xchg
int
movs
arpl
movs
pop
js
pop
mov
jge
cld
add
int
adc
pop
xchg
ret
repz
out
and
add
loop
test
fbstp
dec
mov
mov
push
out
or
repnz
hlt
mov
sub
xor
ret
push
pop
jp
out
jmp
adc
pop
(bad)
jle
popa
and
psllq
mov
rcr
mov
mov
loopne
xchg
or
jnp
cmps
adc
retf
fst
les
mov
jmp
xchg
jbe
daa
pop
pop
arpl
dec
mov
add
(bad)
dec
adc
leave
dec
add
pop
dec
mov
popa
mov
(bad)
(bad)
clc
(bad)
cld
fstp
gs
test
adc
add
mov
jp
mov
xlat
xor
push
cli
cld
push
pop
push
dec
hlt
call
push
data16
movs
inc
lahf
(bad)
sub
daa
aaa
xchg
lds
dec
adc
loope
in
in
cs
int3
cmp
jge
and
xor
dec
or
xchg
mov
jg
test
shl
ret
mov
loopne
sbb
push
rol
push
xchg
sbb
push
adc
outs
mov
dec
cmp
pop
lock
lea
jbe
mov
in
out
(bad)
xor
sbb
(bad)
movs
hlt
out
aaa
dec
push
fsubr
ja
fwait
icebp
pop
push
add
mov
adc
(bad)
(bad)
std
fild
int
es
jbe
nop
adc
cmp
and
fs
mov
and
mov
call
or
xor
imul
sahf
fst
cmp
cli
xor
in
sub
inc
stc
jo
retf
push
jl
cmp
xchg
stc
xchg
push
push
stc
pop
jmp
je
div
pop
mov
inc
mov
test
dec
inc
push
jge
add
push
push
inc
iret
sub
pop
adc
bound
movs
test
ret
dec
stos
idiv
inc
lods
jnp
scas
retf
inc
arpl
and
xor
out
mov
dec
push
(bad)
imul
or
mov
hlt
stos
out
out
mov
and
hlt
pusha
xchg
jno
imul
clc
arpl
into
stos
and
lea
je
fs
adc
inc
mov
jnp
test
lahf
push
das
sbb
pushf
lds
xchg
fst
test
xchg
or
cmp
(bad)
pop
mov
mov
mov
xor
shl
push
jno
pop
lahf
pushf
(bad)
jmp
add
imul
mov
dec
ret
push
pop
test
adc
loopne
sub
mov
jnp
jbe
outs
es
push
push
gs
test
in
fldenv
ins
or
add
sar
sbb
imul
push
inc
mov
inc
pop
fcom
pop
mov
imul
aam
fisttp
mov
sub
sub
es
pop
js
ja
jge
sbb
or
int3
push
sub
test
xor
nop
jg
mov
cmps
ret
ins
cmc
or
dec
cmp
pop
mov
pushf
mov
xor
in
movs
les
push
(bad)
xor
jbe
rol
cmps
shl
shr
push
pop
sar
xor
dec
mov
ins
je
dec
out
inc
jg
mov
jno
movs
mov
shr
push
adc
sub
mov
std
fs
and
inc
jl
pop
repnz
push
ss
or
in
and
xchg
out
ss
loope
mov
sub
popa
retf
jae
xchg
xchg
dec
dec
lock
out
in
mov
push
dec
cmc
xor
xor
frstor
fxch
in
or
jb
inc
fs
fidivr
imul
xchg
pop
inc
mov
outs
dec
jno
shr
test
je
jecxz
repnz
jb
and
les
ret
sbb
aam
std
aad
inc
xor
scas
mov
cmp
or
test
loop
jge
inc
inc
mov
push
jns
cli
sbb
cmps
inc
jmp
fwait
jmp
int3
cwde
and
mov
aad
js
push
sbb
xchg
sbb
dec
pop
repnz
push
jno
pop
dec
jne
push
sbb
jecxz
dec
cmc
or
jne
push
mov
movs
sbb
sti
stos
repnz
cld
mov
cmp
iret
(bad)
neg
inc
mov
in
jl
cdq
add
loope
test
movs
adc
out
push
dec
sbb
sub
or
adc
mov
pop
mov
add
(bad)
dec
pop
jg
dec
scas
jmp
ins
sbb
xchg
nop
call
call
jle
pop
push
cld
int
jg
test
pushf
push
inc
test
out
loope
push
stos
inc
pop
sub
test
mov
sbb
jae
mov
sbb
fist
je
mov
test
mov
sbb
fst
movs
fmul
ins
xor
adc
mov
push
jo
xor
rcr
push
lahf
enter
sbb
xor
(bad)
fdivr
(bad)
jl
in
stos
or
mov
jge
and
jb
aaa
pop
xor
ins
test
push
xchg
jmp
push
std
pusha
jne
test
pusha
pop
adc
movs
aaa
cs
jne
test
inc
mov
jl
sar
or
push
out
or
(bad)
fsub
dec
add
fmul
scas
and
imul
xor
inc
nop
sub
stos
les
nop
mov
and
mov
push
mov
seta
div
repnz
pop
xor
mov
mov
clc
xor
push
into
sbb
mov
pop
xchg
mov
add
jle
retf
push
stc
fistp
fnstsw
xchg
xor
jmp
sbb
mov
imul
cdq
dec
mov
and
mov
not
ins
pop
ret
pusha
push
xchg
pop
dec
outs
mov
(bad)
adc
inc
in
inc
aaa
retf
jns
sbb
fistp
inc
ret
cmp
popa
in
popf
data16
out
movs
mov
pop
stc
cmp
rcpps
jae
cmp
data16
int
and
aad
data16
mov
jbe
pushf
lods
dec
fisubr
adc
mov
adc
sub
scas
pop
clc
sbb
in
push
mov
leave
cwde
inc
sub
jge
lds
add
xchg
push
pop
inc
fcmovb
mov
icebp
inc
mov
mov
mov
(bad)
pop
sbb
in
mov
sbb
mov
cmps
(bad)
addr16
push
and
mov
out
jnp
sub
stos
jnp
push
cmp
push
out
xchg
sbb
xchg
dec
pop
js
fldcw
ror
sbb
or
mov
retf
xchg
and
jne
sahf
mov
add
test
ja
pop
cmp
rcl
clc
push
or
je
lahf
push
repnz
(bad)
fadd
jno
aam
int
mov
rcr
and
push
pushf
cwde
adc
aas
leave
xor
js
je
pop
mov
xchg
sbb
sbb
rcl
pop
sahf
sub
cmps
and
cmp
sbb
xchg
mov
mov
push
popa
adc
push
adc
ss
neg
shl
jp
lods
les
neg
in
cmp
or
mov
sbb
mov
adc
iret
jmp
cmps
adc
inc
rcr
push
fiadd
mov
pop
test
pop
stos
ins
xchg
add
jno
pop
js
and
adc
leave
and
push
dec
arpl
jmp
mov
xchg
inc
push
sbb
mov
test
dec
ret
stos
xchg
xchg
mov
repz
xor
mov
cmp
sub
push
cs
push
push
in
std
arpl
jo
pop
dec
adc
sub
dec
or
shr
jl
outs
test
cmp
adc
int3
mov
xchg
jns
in
xor
stos
loop
adc
mov
daa
push
cdq
adc
call
cmc
int3
call
icebp
mov
add
push
push
aaa
iret
(bad)
int
std
mov
lods
xchg
sub
mov
ret
out
add
sbb
mov
push
jmp
xchg
sub
push
ficomp
sbb
mov
jecxz
repnz
out
neg
mov
mov
not
cmp
add
arpl
lahf
out
sbb
shl
cmp
jmp
or
pop
xchg
icebp
rcl
sbb
sti
mov
out
xchg
cld
jns
ficom
in
add
lods
push
jecxz
or
push
pop
test
iret
outs
xor
(bad)
or
xchg
xchg
xchg
inc
bound
(bad)
dec
jae
(bad)
gs
das
sub
pop
mov
gs
leave
bound
sub
loope
aam
add
into
and
pop
aad
xchg
lea
scas
pop
pop
ret
imul
mov
mov
adc
mov
dec
into
cmc
mov
push
outs
fidivr
pop
push
repnz
and
mov
or
mov
ret
hlt
sbb
mov
scas
sub
inc
(bad)
and
or
jl
lea
xchg
sbb
cmp
gs
xor
test
jnp
ror
lahf
shl
add
inc
jge
push
xchg
or
mov
and
ins
in
in
fst
repnz
fadd
in
sub
mov
pop
(bad)
fisub
xchg
out
cs
jbe
cmp
xchg
das
mov
adc
pop
sub
out
sbb
mov
outs
sahf
pop
aad
call
inc
add
ret
adc
ficomp
and
and
lds
jmp
xor
js
pop
sub
mov
(bad)
mov
or
jecxz
scas
pop
fisttp
aad
mov
std
or
xchg
adc
pop
mov
mov
es
mov
push
fcomp
sbb
xchg
(bad)
aad
adc
xchg
fwait
addr16
pop
mov
pusha
in
xchg
ret
mov
cmp
dec
mov
loopne
test
fcomp
cwde
scas
xchg
clc
pop
or
repz
cmp
xchg
int3
cmc
xchg
xlat
and
jb
inc
push
imul
sti
fisttp
fcomp
inc
popf
sbb
add
lds
(bad)
(bad)
mov
fdivr
std
push
dec
cld
dec
pusha
int
mov
popa
push
push
das
ja
enter
push
jmp
xchg
adc
out
jne
push
mov
test
sub
sub
sub
mov
icebp
ds
fst
jmp
pop
pushf
pop
push
push
(bad)
repnz
pop
sbb
xlat
sbb
mov
pusha
xchg
cdq
retf
rcr
xchg
mov
pop
inc
dec
dec
mov
mov
cld
mov
and
dec
mov
aaa
sti
aam
mov
inc
test
pop
lods
rcl
adc
mov
js
std
or
pop
cwde
push
adc
jmp
adc
cwde
cmc
sub
xchg
std
sbb
in
aam
dec
mov
fld
movs
dec
fs
lea
in
sbb
mov
inc
xor
mov
dec
(bad)
mov
jb
imul
jmp
scas
pop
pop
mov
rol
xchg
mov
stc
loop
xor
cmp
lea
push
add
mov
(bad)
rcl
daa
lahf
xor
jg
es
call
call
pop
dec
sub
jbe
into
push
mov
ja
imul
inc
ins
cmp
dec
jl
lock
mov
mov
push
dec
xor
lods
je
cwde
and
jne
sahf
test
stos
fs
pop
adc
mov
xchg
add
cmp
add
mov
movs
push
jbe
outs
mov
stos
iret
cli
fcmovnb
mul
or
jns
cmp
lds
leave
popf
jno
mov
jbe
les
pop
fst
push
fidiv
icebp
call
xor
sbb
enter
test
loop
fild
(bad)
shl
test
add
adc
daa
push
gs
movs
and
(bad)
sbb
cmp
cmp
in
push
js
xchg
icebp
test
dec
test
mov
dec
sbb
or
jecxz
lea
mov
into
push
aam
std
es
inc
in
jno
cmc
hlt
cmc
into
inc
mov
movs
repz
mov
sub
cmp
push
shr
mov
mov
jmp
cmps
pop
pushf
lds
sub
sbb
jnp
imul
movs
je
mov
lods
ja
sbb
sub
jne
sub
mov
shr
stos
or
stc
sahf
lds
scas
mov
pop
push
loop
add
mov
inc
mov
cmp
(bad)
jle
fisub
mov
fldcw
(bad)
enter
mov
xchg
mov
jp
inc
cmp
lea
or
push
push
loopne
test
add
mov
or
push
push
pop
inc
out
mov
dec
jae
mov
aam
subps
retf
inc
dec
xchg
cdq
in
lods
clc
mov
mov
mov
and
inc
stos
sbb
jno
jne
add
mov
mov
add
por
shr
mov
loopne
inc
pop
(bad)
push
repz
das
fistp
jg
call
ss
or
cmps
mov
in
cmp
lods
xchg
jp
pop
stc
fs
cs
mov
jp
pop
shr
jae
dec
adc
jmp
sbb
or
movs
movs
std
cli
out
cmp
sar
cmp
rol
push
cld
push
pushf
mov
outs
push
xchg
mov
and
adc
jg
iret
mov
jle
out
mov
dec
mov
(bad)
mov
stc
push
adc
lea
push
data16
and
pop
stos
leave
sbb
jo
cmps
add
ror
stos
pop
pushf
jbe
jo
retf
xchg
push
sbb
xor
je
jg
out
adc
xor
out
push
inc
mov
and
(bad)
mov
jp
nop
sbb
push
and
mov
xchg
adc
test
daa
jecxz
dec
inc
xor
xchg
es
adc
xchg
cdq
idiv
out
loope
(bad)
popf
cmp
sbb
mov
retf
adc
into
cmp
jo
movs
shr
dec
xor
sub
xchg
imul
rcl
sub
jmp
jo
dec
xor
cmps
add
mov
test
or
lods
or
pop
and
lds
sub
repnz
pop
ja
push
mov
mov
inc
mov
or
fsubr
int
mov
jg
ds
mov
test
ds
test
retf
push
push
loope
fisubr
xor
popa
push
jmp
in
mov
imul
cmps
adc
sub
mov
sub
cwde
dec
popf
nop
imul
jmp
or
neg
shr
ja
pop
ja
(bad)
mov
sbb
sbb
in
and
xchg
sub
sbb
shl
bound
add
pusha
iret
xor
iret
adc
int
sahf
shr
fild
clc
out
test
pop
mov
mov
popf
(bad)
jmp
jae
inc
iret
push
dec
lods
adc
imul
dec
jne
stos
mov
out
ja
pop
sub
mov
cli
xor
jecxz
data16
and
inc
cmps
or
push
mov
inc
enter
xchg
je
mov
pop
push
cmp
repz
outs
push
lds
xchg
sar
inc
cdq
push
mov
test
push
dec
mov
sub
sbb
aas
and
in
(bad)
div
and
lock
cmp
mov
push
bound
loope
lock
call
in
fimul
fistp
in
mov
xor
out
(bad)
fptan
cs
repnz
mov
dec
sbb
xchg
pop
cli
aad
or
je
popa
movs
(bad)
sub
sti
add
xor
shl
jmp
push
mov
jl
loop
mov
sbb
je
mov
or
xor
sub
cld
dec
xchg
and
cmc
clc
shl
call
jp
ds
and
mov
mov
adc
add
in
into
(bad)
(bad)
(bad)
das
fistp
mov
fistp
int
cmc
sti
sbb
inc
(bad)
jp
fisttp
xchg
add
jne
mov
push
jecxz
je
lock
sahf
test
adc
push
xor
mov
and
addr16
cmp
adc
pop
cli
pusha
xor
add
fcomp
push
cwde
mov
cwde
movs
xchg
popf
pop
pop
dec
inc
push
rcl
dec
push
or
dec
in
stos
pop
test
cmps
rcr
inc
jmp
fcomp
xchg
shl
test
dec
mov
and
and
fcom
inc
outs
stc
ja
xchg
test
xchg
sub
mov
inc
gs
jmp
xor
ss
or
adc
push
or
xor
shl
mov
pop
pop
ret
adc
jns
fnstcw
aad
test
out
adc
mov
cmp
jecxz
fadd
in
in
mov
mov
cmp
cmps
sahf
mov
push
popa
adc
add
daa
sbb
call
scas
xchg
inc
cmp
xchg
rep
jne
pusha
sbb
inc
(bad)
sub
std
fcomip
mov
xchg
retf
or
jno
in
fwait
(bad)
adc
jg
jmp
mov
loop
cmc
dec
shl
xchg
dec
jl
xchg
push
cmc
js
test
out
les
movs
mov
in
mov
repnz
pop
mov
mov
pop
sub
das
aaa
idiv
loop
jmp
mov
add
into
xchg
shr
in
sahf
popa
test
mov
xchg
ja
dec
jae
pop
add
inc
pop
and
xor
jbe
mov
mul
fwait
xor
jae
jmp
es
cmp
dec
in
sbb
mov
dec
ja
inc
add
add
or
xchg
bound
pop
out
jno
leave
mov
xor
mov
jmp
xor
xchg
test
addr16
cmp
xchg
xchg
(bad)
in
or
nop
test
fst
call
xor
(bad)
pushf
stc
ins
mov
(bad)
pop
retf
imul
cs
out
inc
cli
dec
cld
cmps
es
out
sub
movs
add
xchg
lahf
jmp
pushf
xchg
and
loopne
leave
cmp
in
lock
pop
mov
test
pop
inc
frstor
mov
mov
mov
dec
repz
dec
scas
je
stc
push
add
pop
xor
cli
adc
xlat
and
jne
in
test
outs
fucomip
cmp
and
xchg
sahf
jmp
inc
hlt
jmp
mov
cwde
adc
jae
xchg
outs
and
push
es
call
loop
jbe
sub
pop
ret
lods
add
cmp
imul
sbb
inc
enter
scas
out
pop
push
leave
adc
mov
sbb
popa
arpl
xor
jecxz
push
mov
test
into
xchg
mov
sbb
cdq
sahf
pop
push
retf
pop
jmp
(bad)
push
jle
ret
add
fild
jmp
stos
adc
xor
dec
test
xor
sub
adc
repz
enter
in
inc
and
lods
and
mov
cmc
sar
cmp
xlat
imul
jmp
fwait
xchg
inc
dec
inc
mov
cmp
pop
ja
pop
(bad)
xchg
add
lds
les
std
fdiv
mov
push
mov
call
pusha
(bad)
xchg
xlat
std
pop
(bad)
les
int
je
ins
shr
inc
ret
mov
inc
ret
push
mov
xchg
xor
fcomi
add
cmp
push
inc
push
retf
movs
cmp
adc
fnsave
mov
pop
xor
jns
adc
or
test
pop
xchg
jbe
inc
jp
adc
cli
(bad)
lods
jmp
adc
enter
or
cld
(bad)
mov
imul
pop
je
and
mov
lds
inc
add
mov
outs
jmp
fs
iret
sti
push
jp
imul
das
lea
pusha
addr16
pop
out
fs
pop
xor
pusha
inc
cld
stc
fucomip
mov
dec
sbb
dec
and
add
(bad)
or
enter
jle
lahf
stos
outs
aas
sbb
ins
sbb
outs
call
je
jl
xor
inc
repnz
mov
ins
mov
xlat
add
push
jp
pop
retf
add
pushf
jae
mov
movs
jg
cvtpi2ps
push
mov
push
mov
imul
popf
fisttp
cmp
mov
push
lods
xor
push
sub
stos
shl
or
pop
aam
add
mov
mov
stc
rcr
mov
cwde
call
call
push
xor
sbb
pop
test
clc
mov
leave
iret
in
fild
int
lahf
or
sahf
xchg
xor
cwde
jns
jnp
(bad)
in
test
push
dec
clc
call
stos
push
xchg
dec
rcr
mov
aam
lods
arpl
mov
ss
in
add
or
sub
arpl
int3
sub
fnsave
retf
sub
loop
int3
sub
sbb
outs
std
cmp
cs
mov
add
pusha
xor
fisubr
aad
pop
js
pushf
dec
inc
mov
xor
iret
adc
lea
mov
ins
pushf
out
mov
mov
iret
or
mov
xchg
jmp
jnp
push
in
outs
lea
cli
mov
dec
jmp
in
xor
or
inc
or
ins
loop
in
pop
xchg
je
jecxz
ds
dec
inc
xor
iret
xor
pop
add
loopne
imul
push
test
rcl
ins
add
or
adc
sub
jno
jl
mov
scas
imul
cmp
std
dec
fstp
adc
or
adc
xchg
cld
add
(bad)
mov
in
cmp
inc
fwait
leave
pmaddwd
push
ja
dec
out
ret
push
or
nop
cmp
mov
cmc
cwde
ficom
add
add
popf
cli
xor
mov
push
mov
cmp
enter
lods
or
test
out
cmp
xor
jb
cs
repnz
and
xchg
fisubr
pop
bound
sbb
push
sbb
bound
fadd
or
pushf
dec
retf
dec
into
and
jmp
jmp
retf
fwait
(bad)
mov
pop
fild
mov
adc
aaa
and
scas
push
or
push
sbb
inc
sbb
add
inc
push
imul
adc
xor
pop
pushf
(bad)
mov
aaa
push
not
stc
xchg
lods
scas
retf
add
and
imul
sub
mov
mov
pushf
mov
sub
inc
cli
mov
iret
test
imul
inc
rcr
retf
retf
outs
outs
mov
cmp
(bad)
mov
jne
enter
loope
xchg
(bad)
adc
sub
les
jp
mov
loopne
dec
mov
jnp
dec
mov
lock
jnp
scas
inc
ins
push
movs
mov
cmps
dec
ret
repnz
mov
pop
imul
xchg
sbb
icebp
and
les
mov
outs
pop
adc
test
dec
outs
inc
ffreep
in
loope
dec
xlat
inc
sbb
and
dec
ja
add
jge
int
fldcw
mov
jns
int3
mov
daa
push
push
adc
sub
cmp
iret
push
dec
lods
jnp
and
adc
lahf
shl
loop
imul
add
adc
push
dec
pusha
push
int3
push
pop
(bad)
std
cmp
shl
dec
pop
repz
and
enter
leave
cld
xchg
pop
cmp
jmp
push
in
jns
mov
lds
sbb
xor
add
jmp
cdq
mov
jle
shl
mov
lods
int3
jb
cmp
out
sahf
adc
cmp
js
or
je
test
sbb
fiadd
jg
ins
sbb
ret
and
push
or
pop
jns
and
neg
adc
out
das
cld
gs
aad
cmp
mov
sub
sbb
loop
xchg
mov
inc
in
fstp
fbstp
fmul
in
xor
cmps
dec
jae
fwait
pop
loop
xor
outs
je
mov
cmp
outs
scas
call
push
mov
push
lds
add
push
lods
dec
fcmovnb
xchg
pop
dec
push
or
jo
retf
xchg
mov
and
jbe
sub
mov
mov
pop
aas
out
sbb
inc
lods
arpl
sbb
or
(bad)
ins
push
cmp
xchg
jne
jmp
push
shl
aas
movs
pushf
popf
jmp
mov
lock
mov
in
in
jmp
dec
outs
jmp
bound
cmovp
hlt
pop
and
ja
inc
dec
sub
pop
add
stc
xor
sub
lea
dec
mov
mov
push
push
iret
cmc
mov
jmp
ins
cmps
push
push
pop
mov
jb
jge
mov
cwde
data16
test
call
sbb
(bad)
aas
xchg
mov
shl
in
jns
mov
fisttp
push
sub
push
xor
push
mov
sub
test
daa
lea
nop
scas
call
push
jbe
pop
push
xchg
cli
sub
jl
pop
data16
sub
call
push
mov
add
or
adc
in
lods
fimul
sub
mov
xchg
outs
jno
mov
ss
sbb
jnp
repz
lahf
push
pop
push
sbb
lahf
xchg
adc
les
inc
xchg
pop
jb
and
cmps
nop
stc
cmp
xchg
pop
sbb
dec
in
pop
mov
scas
arpl
std
ret
xor
mov
jge
xchg
sbb
mov
out
xchg
loope
cld
fiadd
push
loop
xor
test
int3
out
std
enter
pop
lock
fadd
cld
sub
cs
aaa
xor
ret
das
pop
inc
clc
inc
xor
repz
inc
push
mov
pop
xor
in
jnp
test
mov
pop
sbb
xor
fsubr
push
hlt
push
hlt
pop
mov
jmp
ja
or
xchg
push
jecxz
lds
pusha
mov
inc
test
cwde
sub
mov
and
and
gs
arpl
ss
cmc
mov
inc
stos
ins
(bad)
sti
mov
cmp
stos
dec
mov
or
sbb
in
loope
int3
adc
popa
xchg
sub
mov
enter
int
dec
dec
arpl
jae
aam
sbb
pop
(bad)
ret
rcl
pop
fldenv
or
xor
jne
xor
(bad)
mov
call
cmps
push
mov
out
push
pop
outs
out
xor
call
jb
dec
je
(bad)
stos
mov
sub
es
xchg
or
out
js
push
dec
pop
scas
adc
cmp
adc
test
sbb
pop
jmp
jl
loope
push
js
ss
pop
mov
aam
cmp
es
lahf
dec
stos
push
push
xchg
push
mov
xchg
push
pop
js
inc
imul
test
les
inc
imul
sbb
mov
repz
xchg
mov
push
in
pop
aad
dec
jae
xor
out
clc
retf
retf
daa
out
mov
nop
retf
mov
mov
mov
aas
inc
ret
les
or
push
pop
or
sub
call
cmp
or
int3
inc
pop
rcl
cmp
pop
pop
xor
or
and
scas
or
cmp
and
rcr
dec
xchg
inc
enter
adc
call
sub
fs
jo
and
int
(bad)
sbb
cs
add
sbb
xchg
inc
(bad)
iret
xor
test
mov
mov
aaa
pop
adc
cli
cld
test
mov
call
hlt
cmp
and
jg
lock
push
stos
aad
add
and
jne
xchg
out
(bad)
shl
bound
jbe
xor
cmp
jl
out
bound
call
lds
ins
cli
push
adc
xor
mov
ja
dec
sub
ins
push
retfw
paddw
push
push
test
xchg
imul
pop
inc
(bad)
sub
(bad)
mov
fbld
dec
and
frstor
xchg
xchg
or
xchg
sub
enter
inc
in
adc
aaa
sbb
or
test
adc
movs
and
xor
int3
int
ins
and
jne
rol
ds
jae
stos
(bad)
sub
jnp
or
cmp
dec
xchg
dec
jecxz
popf
call
push
fild
clc
push
cmp
sbb
daa
push
ss
fnstcw
pop
inc
popf
mov
sbb
icebp
dec
fyl2x
arpl
or
sub
mov
xor
push
and
pop
add
fimul
dec
cmp
jbe
out
xlat
pushf
xchg
sbb
sbb
and
jo
mov
dec
jno
popa
call
movs
cmp
fidivr
mov
(bad)
mov
mov
retf
or
rcr
sar
mov
rol
adc
sub
enter
xlat
repz
fsubr
mov
sub
dec
sbb
stos
cdq
pop
test
out
subps
jb
add
push
adc
jge
lods
ins
fisubr
outs
or
loop
mov
sbb
sahf
dec
jecxz
(bad)
cmps
adc
loop
call
inc
sub
cld
(bad)
xor
fadd
mov
and
call
jno
jno
jno
std
mov
outs
sub
mov
or
scas
dec
add
or
pop
mov
sbb
cmp
mov
leave
cld
jecxz
or
in
call
rcr
inc
repz
push
in
pop
and
jge
call
push
fst
push
jmp
int3
retf
gs
mov
movs
and
add
ss
mov
fwait
jnp
or
stc
fsubr
sub
in
pop
stc
pop
add
jb
inc
mov
enter
dec
add
in
pop
cld
cmp
sar
or
fld
lock
mov
mov
mov
pop
push
push
mov
fs
xor
mov
es
ficomp
sbb
inc
out
or
and
xchg
cmp
jle
scas
in
jno
mov
push
mov
cli
sub
mov
enter
pop
push
mov
xchg
push
adc
ror
dec
adc
scas
sbb
lahf
(bad)
add
mov
jo
fwait
jo
jnp
dec
add
fnstcw
or
hlt
in
dec
test
cmove
test
clc
outs
inc
jmp
add
jne
xor
cmc
mov
std
mov
imul
ins
in
ss
repnz
jns
es
xor
clc
mov
bound
mov
ror
loope
out
mov
jo
nop
inc
cs
inc
fadd
addr16
dec
jnp
clc
cmps
cld
nop
lea
stos
cmp
or
clc
xchg
mov
jecxz
sbb
movs
cmc
mov
mov
push
cmp
(bad)
jg
in
sub
(bad)
fimul
or
adc
clc
nop
or
cmp
cmps
or
and
dec
xor
imul
sub
jns
push
or
mov
cdq
jp
sti
fcomp
cmp
scas
mov
fdiv
jl
inc
retf
in
mov
push
mov
(bad)
rol
ss
outs
jge
sub
les
arpl
mov
call
lods
pop
rcl
aaa
mov
adc
repnz
xchg
pop
mov
pop
imul
aaa
(bad)
fmul
daa
dec
or
cmp
jge
cld
jge
sub
mov
jbe
pop
iret
je
jecxz
xor
movs
icebp
jmp
dec
popf
adc
xchg
pop
movs
jge
add
pushf
mov
gs
iret
fbstp
push
xor
pop
adc
das
ret
loop
push
add
sbb
mov
stc
cli
mov
iret
push
out
ja
mov
gs
xchg
xchg
lahf
bound
push
jecxz
add
jge
cmps
xchg
xor
cmp
stos
push
pop
mov
(bad)
sub
scas
(bad)
in
cmp
mov
mov
cmp
out
xchg
lods
mov
or
or
xchg
ds
dec
mov
sbb
hlt
mov
les
sbb
out
pop
fs
cmc
mov
push
test
loope
test
repnz
xchg
push
dec
dec
fimul
sbb
mov
stc
jle
pop
adc
je
test
icebp
mov
add
hlt
test
mov
scas
add
stos
dec
xchg
push
jae
jmp
cwde
xor
mov
sub
inc
push
inc
test
imul
idiv
add
inc
sub
retf
out
or
push
jle
ror
sbb
cmps
sti
daa
mov
movs
(bad)
lods
repz
sub
cmp
repnz
xchg
sub
dec
dec
inc
mov
(bad)
jmp
jmp
daa
mov
jmp
cmp
cmps
ret
es
dec
push
aad
xchg
addr16
jmp
cmp
sub
test
mov
shr
lods
repnz
inc
in
push
and
inc
mov
or
in
mov
(bad)
scas
mov
fisub
fwait
jne
popa
jl
mov
popa
shl
into
pop
xor
rol
xchg
(bad)
jae
cwde
ss
imul
arpl
xor
xchg
mov
repnz
aam
xor
cmovl
sahf
mov
jge
icebp
sbb
mov
(bad)
bound
pushf
mov
test
xchg
pusha
mov
mov
sahf
push
adc
dec
das
stos
jecxz
push
sbb
push
(bad)
jmp
mov
outs
(bad)
and
lods
dec
jbe
movs
mov
aam
mov
mov
jns
lahf
inc
dec
sub
dec
push
pop
stos
and
push
jge
daa
inc
retf
fisttp
jmp
es
push
dec
pusha
or
adc
or
sbb
es
cmps
push
pop
int
sahf
dec
cwde
pop
sbb
sbb
xor
in
sbb
mov
adc
(bad)
aaa
push
bound
adc
inc
cmp
mov
and
rcr
bound
jbe
cmp
(bad)
ja
jecxz
xchg
push
les
retf
add
aam
sub
hlt
jmp
gs
and
sub
mov
jmp
xchg
loop
mov
fcomi
cmp
xor
dec
and
cmps
adc
ins
cmp
mul
mov
rcl
xor
pop
sar
mov
adc
jmp
pop
xchg
add
out
pop
int
mov
rcl
dec
fcom
and
(bad)
jns
(bad)
cmp
push
and
jmp
add
or
test
add
fbld
mov
xchg
ins
jecxz
push
imul
cmp
and
inc
mov
ja
sar
retf
or
ja
aam
stc
mov
out
pop
sti
movs
inc
ja
cmp
bound
scas
data16
out
in
mov
hlt
shl
sbb
iret
mov
mov
rcr
ja
int
xor
and
int
adc
(bad)
fsubrp
add
jg
call
out
mov
clc
pop
push
stos
add
sahf
mov
xchg
enter
js
sbb
bound
arpl
xchg
ret
add
mov
not
mov
pop
jp
push
or
xchg
aaa
pop
mov
sbb
test
lods
sbb
outs
cwde
push
push
push
push
pop
imul
mov
dec
dec
pop
adc
dec
xor
and
jo
rol
aam
ins
xchg
mov
es
fwait
(bad)
fnstsw
xor
sahf
fwait
mov
sub
pop
inc
pop
mov
je
iret
or
jg
addr16
push
inc
push
inc
call
or
mul
sbb
dec
shr
pop
mov
cmp
retfw
push
(bad)
sub
push
icebp
retf
mov
fisttp
data16
out
or
xchg
xor
mov
in
clc
in
test
pop
add
dec
jg
xor
clc
sbb
addr16
dec
in
ret
out
cmps
test
aaa
out
jecxz
test
mov
add
or
fld
inc
or
repnz
(bad)
jmp
stc
pop
jge
out
in
xchg
and
and
mov
popfw
rcr
fwait
sti
push
pop
mov
push
and
(bad)
shl
cli
lock
(bad)
inc
int
add
test
fnstcw
enter
jbe
and
pop
mov
test
adc
sub
adc
pop
mov
jns
sbb
movs
addr16
ss
mov
lahf
pop
pop
add
or
cdq
inc
sbb
xchg
push
shr
and
fistp
(bad)
cmp
jmp
pop
jne
push
add
aas
xchg
xor
dec
scas
sbb
fldl2e
or
es
push
sti
adc
gs
enter
ret
dec
sbb
and
mov
rol
add
inc
sbb
retf
and
mov
(bad)
mov
cmp
fnstenv
push
mov
jno
cmp
mov
sbb
cmps
or
stos
aas
inc
mov
pop
adc
pop
ror
imul
mov
cwde
je
ja
mov
sbb
dec
aam
add
jmp
imul
cdq
or
sbb
stos
push
sbb
pop
mov
cmp
loopne
xor
adc
shr
or
and
int3
in
and
loop
ja
add
jno
mov
aas
aas
loopne
sub
adc
cdq
sbb
mov
loopne
into
imul
inc
or
inc
push
sbb
jg
cld
jecxz
sti
and
dec
lea
dec
call
ds
test
hlt
jl
fwait
mov
sub
in
test
cmc
or
inc
loope
sbb
inc
aaa
into
xchg
shl
jle
fs
inc
xchg
push
fidiv
jbe
jmp
into
dec
cdq
add
ja
(bad)
je
(bad)
movs
(bad)
jnp
pop
adc
je
xchg
stc
sub
jnp
inc
js
push
popa
mov
mov
gs
sbb
mov
call
mov
jmp
mov
dec
call
sbb
sbb
or
push
sti
mov
and
icebp
mov
dec
pop
and
or
mov
mov
xchg
push
sbb
or
pop
and
mov
nop
test
out
pop
cs
push
popa
adc
mov
inc
movs
pop
fild
lock
jno
inc
pop
movs
cmp
scas
add
cmps
ds
fsubr
xor
sbb
mov
fimul
popa
mov
dec
out
xchg
repz
js
or
lock
into
test
pusha
in
mov
and
xchg
ja
nop
push
not
pop
jle
add
std
mov
in
loope
xchg
lds
ins
pop
test
add
pop
pusha
or
xchg
or
or
inc
or
jp
mov
jae
jp
xchg
inc
int
push
test
xor
lea
sti
leave
inc
fiadd
add
and
test
xor
(bad)
mov
or
(bad)
sbb
jle
stc
jne
fisttp
sub
sub
in
mov
scas
jns
retf
sub
mov
fsub
xor
dec
ins
arpl
pusha
out
pop
push
mov
xor
inc
add
and
mov
push
into
fidivr
jno
mov
cmp
repz
inc
adc
pop
loopne
and
int
or
popf
ins
movs
cmps
mov
scas
inc
inc
int
add
imul
sub
hlt
int
pop
retf
test
sbb
lahf
xchg
jnp
pushf
outs
sbb
in
jns
push
mov
cmp
lea
mov
jecxz
push
jmp
mov
call
leave
push
sbb
stc
mov
daa
dec
(bad)
push
inc
movs
sbb
enter
jae
or
dec
cld
fmul
mov
ret
outs
out
out
in
cmps
cmps
retf
lods
mov
and
push
inc
ret
or
loopne
mov
fimul
push
dec
jg
cmp
out
mov
mov
sar
inc
aam
push
lahf
mov
or
pop
out
mov
push
push
xor
sbb
call
add
xor
fdiv
xor
fwait
jno
jo
fwait
mov
popf
dec
xchg
cmp
sbb
mov
jge
cmp
add
dec
scas
pop
sub
fimul
xchg
inc
in
jl
xor
push
sbb
mov
mov
pop
mov
add
test
movs
pop
repz
pop
cs
stc
adc
rol
mov
lea
in
xor
pushf
mov
out
jmp
pop
push
ins
lea
stc
xor
or
imul
sub
jmp
xchg
and
stc
(bad)
sub
push
sub
jno
mov
repnz
test
add
data16
and
fiadd
mov
dec
ss
ins
xchg
mov
int3
xchg
cmp
jg
out
pop
mov
gs
addr16
nop
mov
cmp
mov
jae
inc
leave
sbb
gs
nop
xchg
fstp
mov
inc
(bad)
sahf
(bad)
sbb
out
test
aaa
mov
dec
xchg
dec
cwde
jmp
aad
loopne
adc
dec
rcl
push
repz
mov
adc
mov
jb
or
sti
mov
or
sub
add
pop
icebp
push
add
out
shl
test
push
xchg
fisub
sub
sub
retf
(bad)
mov
cmps
imul
mov
cdq
mov
add
pop
imul
imul
sbb
and
cmp
data16
js
cmp
retf
jne
call
push
(bad)
dec
or
hlt
cmc
fmul
mov
dec
es
or
(bad)
shr
fsubr
js
shr
ret
popfw
fsubr
push
push
not
lds
and
dec
mov
(bad)
retf
add
mov
retf
adc
lds
mov
test
push
dec
or
popa
xchg
or
pusha
push
jo
and
(bad)
jns
xor
xchg
stc
out
mov
loopne
mov
in
mov
cmp
addr16
pop
imul
movs
dec
imul
mov
push
push
ss
jnp
mov
mov
add
enter
(bad)
aas
jae
or
in
inc
push
push
add
adc
cwde
mov
mov
pushf
pusha
scas
sbb
mov
jo
inc
dec
ret
loopne
mov
sbb
mov
push
pop
jp
dec
das
pusha
add
pop
push
arpl
cmp
test
adc
xor
pop
shl
dec
out
adc
out
cmc
dec
imul
jno
adc
push
lahf
push
(bad)
ss
mov
xor
xor
jnp
loope
movs
div
xchg
mov
sbb
sbb
dec
mov
inc
je
adc
mov
pop
pop
add
(bad)
push
sbb
xchg
out
xor
dec
jmp
jb
jg
mov
push
das
out
mov
lods
repz
pusha
test
mov
dec
scas
push
enter
add
mov
add
xchg
les
movs
mov
cmp
clc
jle
pop
xchg
adc
lea
(bad)
mov
or
inc
aad
pop
lods
sub
call
enter
inc
xor
push
cdq
adc
lock
aam
dec
sbb
or
xlat
mov
fdiv
(bad)
sbb
call
adc
sti
in
cmp
or
dec
mov
enter
mov
out
mov
xor
(bad)
xor
push
jg
dec
sub
(bad)
cli
in
mov
adc
(bad)
pop
les
aas
shr
rsm
inc
and
mov
push
dec
adc
jmp
jns
mov
mov
inc
mov
mov
inc
add
xor
pop
je
pop
and
jmp
cmp
or
mov
mov
lods
(bad)
mov
ja
mov
aam
movs
popa
mov
inc
nop
push
mov
mov
or
xor
mov
push
or
test
dec
xchg
jno
add
cwde
jno
loopne
add
pop
aaa
mov
sbb
mov
stos
mov
lods
sbb
push
lods
inc
mov
xor
and
lods
cmp
fcompp
push
mov
xor
imul
inc
sub
mov
jmp
ja
lods
ins
sbb
xor
dec
mov
lock
in
xor
into
cmp
mov
fsubp
inc
mov
or
xor
(bad)
cdq
mov
cmp
cdq
mov
mov
fwait
lds
push
inc
sub
adc
xchg
fidiv
cmps
pop
jne
adc
cmp
call
mov
pop
push
out
das
int
inc
ss
inc
ds
xchg
and
aas
jo
jmp
xlat
addr16
test
leave
mov
inc
push
xchg
jbe
stos
and
xchg
mov
out
sbb
jno
in
scas
or
jecxz
out
push
je
dec
adc
xchg
pop
data16
mov
icebp
mov
cmp
mov
pop
cdq
fwait
arpl
shl
pop
in
push
mov
not
clc
nop
xor
mov
(bad)
mov
movs
xchg
xchg
test
(bad)
loopne
pop
jnp
mov
xor
pop
pop
add
push
dec
outs
popa
xchg
fldenv
cmp
or
push
lds
lea
or
jno
xlat
ja
jmp
xchg
lds
lds
ret
arpl
push
jbe
mov
daa
or
sbb
push
shr
loop
into
add
mov
jo
cld
push
jb
cmc
jp
rcl
add
(bad)
clc
xor
push
sti
js
aam
mov
imul
out
out
xor
dec
pushf
test
hlt
stos
dec
les
call
fldcw
lea
push
mov
cmps
mov
mov
or
pop
aad
loop
loope
add
arpl
pop
jle
ror
mov
sub
pop
push
das
mov
mov
aam
push
test
adc
fisubr
or
xchg
aam
lahf
ds
mov
ficomp
pop
call
jmp
lahf
jge
mov
cmps
scas
xor
push
pop
mov
movs
add
aad
rcr
and
push
rcr
mov
ins
test
mov
loope
mov
lods
pop
movs
pushf
xchg
add
repnz
fimul
xchg
pop
xchg
xchg
jnp
inc
(bad)
int3
outs
sub
int
stos
dec
test
add
or
mov
and
test
pop
in
repz
cdq
xor
(bad)
jmp
mov
mov
popf
sbb
xchg
adc
pop
cmp
mov
jg
adc
mov
inc
imul
push
ss
sub
mov
out
sub
loop
push
push
jecxz
jo
mov
leave
xchg
lds
xor
stos
ss
xor
popa
or
out
pop
pop
dec
leave
add
push
mov
xor
add
add
sbb
inc
pop
sbb
sahf
fcomp
mov
cld
repnz
xor
out
test
sub
xor
fcmovne
loopne
movs
shr
pushf
mov
adc
dec
mov
les
scas
cmp
mov
gs
lods
xchg
into
fcmovne
pop
aas
adc
fmul
adc
test
sub
fistp
xor
mov
mov
mov
repz
cmps
inc
sahf
push
push
push
mov
xchg
or
inc
(bad)
cdq
mov
in
jae
mov
pop
sbb
and
scas
(bad)
scas
sahf
mov
pop
es
ins
js
pusha
sub
mov
push
cmp
stos
data16
les
mov
mov
shr
pop
ins
adc
fidivr
test
push
cmp
or
mov
(bad)
arpl
loopne
popa
push
sbb
adc
js
xchg
dec
es
prefetch
cmp
sbb
mov
pop
mov
jle
cmp
and
enter
add
ror
mov
retf
pop
mov
jle
leave
adc
shl
aad
call
dec
jle
pop
and
bound
jns
sbb
mul
dec
sbb
dec
pop
add
jae
call
jmp
cwde
adc
ins
mov
cmc
pop
test
cmp
dec
imul
das
dec
rcl
push
test
sbb
mov
cmc
push
add
or
mov
sub
sbb
arpl
mov
adc
pop
dec
movs
xchg
xchg
jmp
xor
rol
rcl
cmp
mov
xchg
sub
jl
adc
into
sbb
retf
jmp
out
sub
cmc
jmp
xchg
cmp
mov
xchg
in
pushf
xor
adc
fisub
inc
or
mov
pop
cli
dec
(bad)
(bad)
mov
jae
xor
add
adc
xor
jmp
mov
shl
adc
sub
enter
dec
xlat
fadd
sbb
jbe
and
adc
sub
fld
add
jp
shr
mov
pop
cmp
or
dec
lahf
lods
xor
shr
pop
fnstenv
popa
sti
arpl
mov
sub
test
or
outs
jns
push
stc
fucomp
cmp
xchg
shl
fisubr
jbe
cmp
mov
scas
mov
(bad)
sbb
adc
mov
jb
fsubrp
inc
(bad)
and
retf
loopne
sbb
scas
sbb
(bad)
mov
dec
and
dec
xchg
xchg
push
fcomp
ret
pop
mov
or
mov
cmc
jp
xchg
mov
cld
jl
mov
shr
adc
inc
movs
push
ins
int3
pop
(bad)
xchg
or
xchg
repnz
std
dec
test
neg
pop
push
xor
inc
imul
lea
mov
mov
sbb
adc
xor
ss
(bad)
cs
retf
adc
lock
or
or
inc
popf
sbb
fcompp
leave
sub
jecxz
(bad)
(bad)
jmp
mov
pop
mov
inc
inc
out
fs
les
ins
sbb
mov
jne
fwait
cmp
movs
mov
mov
mov
jmp
popf
xchg
mov
mov
push
pop
cmp
inc
jmp
mov
hlt
jmp
aas
jmp
or
std
xchg
lahf
aaa
sbb
or
in
mov
push
sub
(bad)
mov
in
push
pop
push
and
mov
add
test
call
loopne
dec
into
adc
mov
popa
stos
and
mov
and
mul
xchg
push
xor
popf
and
sub
adc
cmp
mov
cmps
inc
cmps
or
jle
test
or
pop
mov
sti
ret
mov
retf
add
das
das
push
lock
fld
adc
shl
xchg
cdq
cmp
popa
push
fisttp
hlt
xchg
push
add
aas
and
pop
cmp
jae
xlat
xchg
cmp
loopne
(bad)
pop
add
call
push
jns
das
add
mov
fsubr
sbb
push
in
jle
pushf
iret
mov
jns
shr
xor
and
sbb
and
addr16
mov
fwait
xchg
or
push
int
loop
das
pop
outs
push
clc
pop
leave
in
lds
jae
add
movs
sbb
(bad)
fdivr
(bad)
(bad)
outs
pop
stos
call
sbb
stos
pop
push
in
sti
cwde
push
push
into
std
das
(bad)
(bad)
and
ins
mov
mov
or
into
scas
fst
dec
movs
mov
addr16
mov
int
das
cmp
in
pop
sahf
jle
arpl
lea
mov
sub
test
sub
push
popa
out
pop
mov
(bad)
mov
aad
repz
call
pop
mov
inc
lahf
and
adc
mov
mov
ins
test
mov
cmc
push
or
sub
xchg
mov
stos
adc
mov
sub
pop
jg
sbb
xor
pop
add
mov
jo
mov
mov
ror
fistp
xor
iret
jne
loopne
movs
ja
add
stos
mov
fadd
stos
out
mov
add
out
ja
in
int3
cld
cmc
pop
pop
cmp
es
stos
bound
xchg
add
xor
inc
(bad)
sbb
sub
xor
(bad)
sar
pop
pop
call
fwait
ror
and
movs
pop
or
inc
ror
fnstsw
fidivr
mov
lock
hlt
clc
xchg
nop
pop
ret
inc
jo
dec
push
shl
sbb
push
aad
fidivr
sbb
popf
add
out
and
mov
mov
(bad)
jmp
cmp
clc
dec
dec
into
fld
mov
mov
mov
xor
dec
je
inc
or
jle
xchg
into
jmp
inc
xchg
cdq
(bad)
push
jp
aad
imul
test
inc
inc
jmp
pop
mov
ja
inc
inc
push
xchg
aam
loope
lahf
cmp
sub
jg
ins
stos
cld
ret
fist
ret
(bad)
mov
mov
(bad)
xlat
push
rol
add
add
inc
in
and
inc
cs
outs
inc
mov
icebp
je
xchg
sub
into
imul
or
or
(bad)
outs
or
adc
(bad)
pop
mov
push
xor
xchg
pop
es
mov
das
and
outs
mov
lock
ret
cmps
sti
int3
xor
std
loopne
inc
movs
popf
jno
(bad)
adc
repnz
pusha
inc
pop
pop
sar
or
mov
jg
scas
cmps
dec
aaa
addr16
(bad)
aas
inc
dec
adc
retf
scas
jo
sub
test
lods
inc
cmps
sahf
scas
adc
(bad)
cmp
adc
cdq
pop
xchg
jbe
sbb
js
xchg
sti
outs
popf
adc
(bad)
sbb
and
dec
loop
cmps
xor
sub
mov
call
or
dec
std
pop
cmps
scas
bound
xor
cmps
shr
lahf
push
pop
outs
mov
xchg
aas
push
sti
nop
add
lahf
mov
cmp
mov
adc
dec
push
mov
jp
add
sbb
dec
sahf
fisttp
rcl
sub
xchg
bound
sbb
pop
ins
mov
pop
cmp
jle
sbb
sbb
pushf
xor
enter
sub
(bad)
in
adc
xchg
aaa
adc
call
movs
adc
pop
out
mov
and
dec
dec
xor
sub
data16
jge
pop
push
jns
sub
mov
(bad)
addr16
jb
or
scas
inc
rol
jo
test
movs
and
shr
ja
mov
out
mov
sahf
xor
pop
popa
adc
sbb
nop
icebp
pop
sahf
cs
es
fwait
sbb
push
mov
imul
push
aas
outs
mov
pop
xchg
or
mov
adc
xchg
in
in
mov
cs
pop
ror
in
pop
xchg
jmp
mov
jns
mov
in
test
cmp
pushf
adc
xor
push
test
pop
call
adc
inc
mov
sbb
lea
mov
and
(bad)
leave
aam
push
aam
ror
imul
mov
call
bswap
std
fcomp
push
push
jb
lods
sbb
jp
mov
imul
sbb
cmps
nop
(bad)
jne
cmp
test
mov
cmps
sbb
cmp
in
cmp
mov
pop
(bad)
loope
mov
mov
in
lods
test
dec
shl
ja
xchg
sub
aas
mov
cli
pop
pop
xor
cmps
stos
adc
xchg
addr16
pop
mov
sbb
repz
sbb
xchg
cs
data16
fsub
dec
cmp
mov
sub
pop
and
aaa
jns
push
jb
in
push
(bad)
adc
sahf
mov
adc
push
retf
xchg
nop
sub
pusha
add
xor
xchg
inc
fcmovbe
call
scas
cmp
ins
pop
(bad)
dec
jmp
push
in
inc
sbb
sub
lds
repz
mov
int
rol
or
test
call
jge
ror
push
push
mov
xchg
xchg
sub
ins
ja
outs
shr
adc
not
push
or
cmp
aas
inc
mov
sub
pop
inc
mov
add
xchg
loop
mov
inc
out
mov
jo
push
arpl
out
adc
dec
xchg
mov
xor
sbb
push
in
shl
or
pop
fldcw
jle
mov
jecxz
cmp
sbb
test
and
add
or
mov
test
push
adc
ret
cmc
and
inc
retf
dec
xor
xlat
int3
adc
cmps
xor
outs
call
push
adc
gs
xor
jl
popf
out
xchg
imul
clc
jge
xchg
bound
mov
push
ins
xchg
retf
xchg
add
mov
sahf
lods
mov
push
mov
loope
pop
mul
fidiv
mov
or
int
dec
mov
shl
loop
jo
add
mov
push
jl
sbb
push
xor
xchg
outs
hlt
ss
inc
iret
jecxz
sub
ss
push
in
xchg
mov
ret
xchg
jo
shl
mov
es
in
cmp
xchg
xchg
jl
in
mov
add
in
lea
jae
fmul
loop
and
retf
ret
mov
mov
jne
cwde
pop
pop
mov
xchg
sub
in
adc
cmp
inc
push
adc
mov
mov
inc
sbb
mov
cmc
loopne
push
inc
cmp
or
rol
pop
xor
dec
cmp
dec
mov
jno
sub
ret
mov
clts
sub
pusha
xor
fadd
rcl
cmp
(bad)
iret
mov
fldenv
dec
xchg
sub
or
xor
mov
daa
xlat
push
int
pop
(bad)
jno
(bad)
mov
mov
retf
mov
add
push
outs
xchg
jae
inc
cmp
cmps
adc
dec
jle
cli
push
out
das
loopne
addr16
jle
aas
imul
add
test
fnstcw
not
lea
inc
dec
ffree
ret
xor
mov
xor
jno
cmp
popa
movs
pop
inc
dec
add
xchg
je
jnp
jg
jmp
daa
dec
mov
mov
mov
push
fnstcw
mov
dec
into
jae
and
add
ret
adc
ret
stc
mov
lock
ret
inc
fisubr
into
fsub
xor
in
and
cmp
stos
retf
sbb
mov
cld
shr
test
add
aaa
xchg
fs
adc
stos
dec
add
xchg
pop
fsub
sbb
les
dec
aad
cmp
fimul
mov
push
mov
push
dec
fsubr
sbb
test
sub
std
xchg
sti
and
jno
mov
add
jmp
repnz
es
and
xchg
sbb
inc
xchg
rcl
ror
ret
sub
out
mov
xchg
dec
mov
aas
repnz
rcr
cmps
mov
je
cmp
or
cmp
pop
int3
jg
cs
paddsb
out
jle
sub
add
inc
ret
scas
cld
mov
pop
ja
mov
es
cwde
stc
and
xchg
retf
xchg
cmp
cmps
add
mov
dec
jnp
pop
jmp
fsub
mov
das
jmpw
xor
sti
jnp
and
cwd
add
mov
ficomp
popa
stos
and
js
out
sub
adc
mov
sbb
and
inc
xchg
and
xchg
pop
push
test
ins
pop
mov
xchg
and
lods
push
xchg
jno
sbb
dec
mov
sbb
mov
les
retf
xor
arpl
add
movs
popa
shr
shl
sbb
(bad)
sbb
cld
mov
call
dec
jge
inc
mov
inc
and
mov
repz
sbb
sbb
stos
cmps
or
in
movs
cmp
inc
cmp
in
xchg
scas
popf
lods
dec
mov
jge
cmp
test
lods
stos
lods
into
in
call
mov
mov
aas
sar
jae
xor
lock
mov
jns
push
pop
daa
dec
inc
cli
mov
inc
leave
mov
pop
pushf
mov
ss
mov
xchg
movs
repnz
(bad)
mov
or
mov
pop
pop
mov
call
nop
add
push
jb
rcr
jns
scas
pop
cmp
push
loope
fcmovb
sahf
pop
jns
outs
inc
push
lods
xchg
outs
pop
int
mov
dec
add
(bad)
pop
fmul
push
cli
dec
ret
push
pop
sbb
xchg
(bad)
gs
xor
jbe
imul
arpl
cli
jns
push
mov
in
mov
mov
mov
jg
sbb
xor
mov
or
cmp
or
lds
mov
dec
jg
aam
icebp
jbe
push
cmp
pushf
cmp
inc
gs
(bad)
daa
ror
pop
xor
add
das
aas
mov
mov
add
mov
leave
test
mov
mov
test
cmp
dec
rcl
cs
dec
or
movs
or
ja
cmp
jb
inc
lock
int3
clc
stc
mov
sub
repz
add
adc
jo
pop
stc
add
outs
add
pop
jmp
xchg
mov
jb
add
cmp
xor
fdivr
fmulp
jbe
xchg
into
xchg
retf
mov
movs
cdq
pop
aaa
daa
pop
mov
mov
mov
fild
jnp
ror
inc
mov
(bad)
loop
ficom
and
in
mulps
inc
mul
adc
mov
dec
push
daa
imul
push
ss
lods
or
pop
cwde
test
fstp
mov
mov
pop
pcmpgtw
add
out
nop
(bad)
std
pop
imul
inc
fs
movs
(bad)
and
aas
sub
add
aam
pushf
or
add
mov
repnz
dec
imul
jmp
xchg
push
hlt
push
pop
push
out
ret
shl
push
loop
pop
adc
cmp
add
add
cmp
scas
icebp
pop
(bad)
xchg
and
adc
fsubrp
push
repnz
rol
scas
mov
push
js
sub
inc
sub
mov
fwait
imul
mov
rol
(bad)
mov
sub
faddp
mov
cdq
pop
cmp
(bad)
mov
add
jmp
or
ins
mov
jo
test
popf
clc
out
and
push
adc
lods
ins
add
xor
mov
xchg
nop
push
push
xchg
mov
adc
sub
fld
mov
mov
fucom
adc
ins
add
repz
push
mov
movs
bound
pop
neg
in
jg
mov
dec
in
pop
jge
repnz
and
stos
std
popa
adc
lds
ret
cmc
add
aaa
and
pop
cmp
out
or
mov
sti
out
push
inc
or
cmp
mov
in
stc
add
lods
and
jns
and
fistp
lahf
fistp
and
js
jmp
cmp
je
out
jno
dec
test
sbb
xor
push
outs
or
inc
clc
cli
fldenv
test
call
jg
and
retf
mov
das
mov
jmp
and
adc
sar
dec
cld
add
pop
lods
pop
sbb
out
or
mov
jno
jne
xor
vmovq
xchg
sbb
pop
aaa
stc
test
push
or
or
fild
dec
xchg
and
lods
xor
lahf
loopne
mov
sub
popa
test
int
gs
mov
push
adc
dec
out
and
jns
sbb
jns
xor
jb
ins
jbe
and
inc
xor
mov
dec
xor
mov
xor
push
pop
push
int3
mov
clc
xor
mov
mov
mov
rcl
push
dec
dec
adc
jmp
cmps
cmp
loopne
sbb
mov
pop
sub
ret
push
jle
xchg
fmul
aam
add
sub
pop
mov
pop
jbe
jb
neg
push
rol
in
jnp
sti
test
repnz
jnp
sar
sti
xor
shr
mov
out
add
test
movs
movs
mov
adc
sbb
inc
je
clc
xor
push
jmp
mov
dec
fisubr
test
inc
movs
and
pop
and
xchg
or
ja
cs
xchg
bound
push
lahf
cmp
out
(bad)
jmp
pop
out
dec
js
dec
into
rcr
mov
add
cs
adc
sub
fdivrp
inc
retf
xchg
push
sub
sub
dec
cmp
pop
dec
pop
movs
xor
fs
int3
push
imul
sbb
fistp
hlt
call
adc
inc
aad
idiv
pop
inc
jmp
sti
mov
ds
mov
into
jmp
xchg
push
dec
and
lods
mov
std
call
add
push
xor
xor
pop
in
(bad)
das
and
sub
jno
(bad)
cmp
(bad)
cmp
mov
aad
pop
adc
dec
lds
pop
jmp
sbb
(bad)
pop
enter
xor
jg
xor
cs
add
dec
popf
gs
xchg
push
xchg
or
cs
(bad)
in
mov
call
inc
or
dec
and
das
js
and
xchg
mov
jmp
stos
xchg
mov
data16
mov
pxor
and
adc
fld
movs
dec
cmc
xor
ror
xor
lods
mov
jbe
mov
push
jg
xchg
repnz
pop
inc
mov
js
push
push
pop
lea
jb
in
sub
or
cli
xchg
lods
jecxz
mov
cmp
push
pop
sub
jle
xchg
sbb
mov
loopne
cmp
xchg
pop
or
retf
jle
ret
aas
mov
outs
mov
jb
(bad)
retf
xor
xor
or
lea
or
in
aam
repz
in
mov
push
sahf
bnd
jne
stos
imul
cmp
in
and
jg
dec
pop
pop
push
inc
popa
movs
push
inc
aam
xlat
xlat
retf
iret
jge
popa
sbb
pop
inc
cs
stos
push
lock
popa
xchg
mov
jnp
or
or
and
inc
mov
push
ficom
ret
jne
xor
sbb
mov
fimul
xchg
push
sub
ror
jae
inc
jmp
push
call
xchg
jmp
xor
iret
dec
sahf
jb
in
outs
clc
mov
and
fisttp
pop
push
add
mov
pop
scas
or
add
xor
ds
sub
clc
das
fwait
scas
fmul
fcom
jp
lock
nop
xlat
push
add
mov
imul
(bad)
dec
(bad)
fnsave
push
fcom
movs
add
sbb
les
in
jmp
add
loopne
fcom
fwait
lea
xchg
mov
icebp
(bad)
repz
cmp
or
and
and
nop
enter
in
or
popa
pop
ins
repnz
mov
add
xchg
push
push
push
adc
mov
dec
and
pop
mov
push
stos
pop
xor
call
fs
xchg
ins
das
sub
popf
nop
mov
mov
nop
xor
lods
mov
clc
xor
dec
xchg
hlt
mov
sub
enter
cmp
ss
cld
outs
call
shr
shr
stc
mov
cmp
aad
cmp
mov
sahf
vandnps
pop
jns
scas
(bad)
repz
xchg
sub
or
push
popa
push
mov
mov
inc
mov
mov
or
retf
add
loop
retf
adc
push
lods
repnz
inc
imul
repnz
pusha
push
hlt
cwde
adc
das
lahf
std
pop
ins
jmp
adc
jbe
gs
js
adc
(bad)
out
bound
cmp
xor
dec
mov
cs
sbb
es
rol
arpl
adc
push
pop
retf
int
sub
or
and
int3
inc
aaa
sub
xchg
imul
push
out
mov
movs
test
mov
(bad)
icebp
outs
push
(bad)
rcr
cli
mov
mov
call
pusha
cwde
int
cwde
ja
ret
pop
(bad)
pop
mov
sub
push
rep
ret
mov
sbb
test
sbb
(bad)
int3
out
sti
add
int3
jg
imul
retf
mov
jbe
outs
push
sub
xchg
xor
scas
pop
xchg
or
fs
data16
adc
test
xchg
je
ja
(bad)
pmulhuw
xor
shl
(bad)
push
inc
mov
push
jp
idiv
loopne
sub
cmp
or
pop
push
sbb
sub
mov
aas
xchg
out
xchg
fnstcw
shl
out
dec
or
jns
test
mov
es
jb
mov
call
push
xor
sbb
or
imul
cmps
mov
std
mov
aaa
jno
fisubr
fdivr
xchg
retf
dec
sti
push
ins
jb
std
popf
retf
cmc
or
push
mov
sahf
mov
movs
jnp
push
push
adc
dec
aad
jns
mov
mov
mov
jmp
in
fs
mov
xor
jno
inc
stos
rol
jge
repnz
cdq
jl
paddw
inc
out
gs
popa
shl
inc
adc
and
gs
out
imul
(bad)
iret
imul
into
and
pop
dec
mov
lahf
loopne
add
cli
mov
pushf
jb
mov
xor
add
push
mov
sub
or
cwde
add
shl
or
jno
dec
rcl
adc
sar
mov
sub
out
call
push
push
inc
in
mov
mov
sar
out
xchg
push
icebp
shl
js
in
push
scas
inc
call
push
fcmovnbe
xchg
mov
jmp
test
or
loope
xlat
sbb
jne
stc
jp
add
push
mov
jmp
or
add
sar
jmp
das
test
cmp
(bad)
or
jg
retf
xchg
fstp
ins
inc
xchg
(bad)
ja
hlt
inc
push
xor
push
fild
add
std
push
dec
sub
add
mov
mov
(bad)
ja
out
adc
mov
ins
sbb
push
daa
lods
mov
or
idiv
push
jge
mov
jp
div
cs
dec
test
mov
push
not
ret
test
cmp
lock
shr
shl
pusha
(bad)
sbb
out
lock
or
xor
sti
daa
add
jne
cmp
movs
push
int
or
mov
jmp
pop
movs
test
and
mov
xchg
xchg
cdq
mov
(bad)
cmp
inc
iret
es
or
cmps
xlat
mov
and
mov
or
stos
cwde
scas
push
int3
in
xchg
xor
sbb
fldcw
arpl
scas
dec
fadd
movs
sub
cmp
int3
idiv
daa
cli
pop
push
cs
enter
mov
and
ss
xchg
xchg
stc
(bad)
mov
pushf
cmp
and
js
push
push
fistp
fistp
mov
fild
enter
jbe
push
in
mov
clc
lds
pop
xor
cdq
sbb
xchg
add
int3
mov
fwait
sbb
test
dec
fcom
int
retf
and
jo
loopne
imul
mov
(bad)
dec
or
and
mov
push
push
add
xlat
hlt
sbb
push
mov
sti
and
xor
lods
push
and
sub
pop
sub
out
(bad)
jno
out
jo
popf
outs
test
sbb
jmp
inc
xchg
imul
jno
or
mov
mov
daa
xchg
mov
add
add
mov
les
jl
push
mov
les
hlt
aad
pop
pushf
rcr
fwait
adc
push
push
mov
xlat
push
mov
imul
or
(bad)
loopne
daa
sub
hlt
(bad)
push
loopne
fwait
adc
scas
push
or
xor
mov
je
cmp
xor
lods
inc
mov
(bad)
test
in
not
sub
gs
jmp
add
in
jne
sbb
fld
aaa
sysenter
ds
rcr
push
jg
cmp
ja
adc
push
xor
and
pop
ret
ja
(bad)
mov
bound
mov
or
add
stos
adc
cmps
jns
inc
cmp
cmp
inc
ins
and
int
mov
jge
je
dec
pop
sub
cmps
jae
cli
mov
std
cdq
sbb
aam
xlat
cwde
jns
and
popa
into
sub
or
add
popa
out
clc
adc
xchg
cmp
mov
lods
sub
push
pop
std
in
dec
xchg
adc
retf
data16
mov
sub
xor
loope
add
mov
jae
mov
aam
push
add
xor
stc
mov
shl
(bad)
and
push
aas
(bad)
clc
sbb
xor
loope
popf
cmp
int3
scas
test
je
sbb
dec
jb
jl
jnp
xchg
adc
hlt
xor
loopne
loopne
or
loopne
lods
xor
loope
or
jecxz
cmp
push
nop
xchg
outs
dec
cwde
pop
sub
push
cmp
mov
add
aaa
mov
call
or
rcr
imul
addr16
jmp
jmp
test
mov
xor
outs
retf
pop
cs
call
ds
sahf
ret
xchg
scas
movs
push
bound
xchg
push
sbb
lods
sub
fisttp
in
sbb
xchg
cmps
(bad)
in
std
cmp
scas
dec
repnz
std
pop
jecxz
bound
fidivr
cld
fcmovnb
pop
mov
rcr
inc
xchg
push
dec
fsubrp
push
mov
test
jle
pop
pop
cld
movs
ds
sti
jmp
repnz
add
iret
push
xlat
and
cmp
imul
pop
in
cmps
push
pusha
jmp
inc
and
push
les
scas
inc
or
movs
shr
test
dec
ror
push
ret
in
mov
xlat
sti
xchg
pop
xor
adc
hlt
push
push
out
xchg
cmp
push
xchg
push
outs
push
aam
xchg
int
inc
out
pop
pop
fs
out
in
mov
retf
push
fdivr
(bad)
xchg
and
iret
sbb
outs
int
dec
out
xor
lds
push
pusha
pop
jp
push
ret
test
test
add
mov
mov
cli
fld
sub
add
in
pop
add
les
pop
(bad)
cli
xchg
sti
push
jge
mov
scas
loop
add
(bad)
adc
jle
xchg
idiv
xor
stos
in
les
out
dec
xchg
cwde
xchg
xchg
mov
aam
sbb
mov
aam
jg
dec
adc
jbe
in
push
pop
(bad)
sbb
jns
xchg
or
inc
mov
inc
push
cmps
mov
mov
bswap
int3
stos
mov
shl
call
push
addr16
push
dec
cmps
push
sub
scas
lea
sbb
mov
inc
mov
scas
mov
pop
pop
push
dec
push
cld
iret
cmc
cld
mov
mov
and
dec
and
cmp
cmc
mov
pop
ins
(bad)
dec
mov
mov
jge
fld
push
ss
mov
fnstcw
lods
or
aaa
cmc
jo
mov
push
sbb
ror
into
sub
das
enter
push
xor
add
pop
ss
aaa
and
cmp
dec
inc
fwait
js
mov
sbb
xchg
popf
dec
mov
jns
std
or
sbb
push
fild
mov
ret
enter
xor
xchg
daa
sbb
xor
mov
or
in
xor
xor
mul
stos
mov
xchg
push
(bad)
cmp
cmps
jb
xor
movs
ds
sbb
in
push
push
push
xchg
push
call
ins
mov
pushf
and
mov
test
inc
or
nop
inc
pop
mov
adc
rcr
jecxz
shl
mov
lahf
ficom
adc
int3
in
shr
push
add
fs
stos
pop
les
dec
inc
pop
dec
aas
pop
ss
jo
movs
xchg
mov
cmp
repz
retf
dec
es
cmc
inc
scas
sub
pop
fbstp
inc
ja
pushf
aam
and
xchg
cmp
inc
push
lods
jge
cld
enter
iret
ret
movs
pop
mov
jp
fcom
xor
sub
xchg
(bad)
ror
inc
push
div
arpl
ins
imul
stc
xchg
lds
ins
mov
cmp
inc
test
mov
in
outs
out
mov
mov
sub
ret
xchg
scas
icebp
in
dec
(bad)
and
mov
pop
das
xchg
cmp
mov
ret
and
mov
sbb
add
(bad)
sti
aaa
pop
pop
pop
sbb
pop
jo
pop
std
call
inc
mov
push
pop
adc
push
in
jmp
call
sbb
out
popa
push
fist
mov
add
or
sti
xchg
addr16
out
pop
mov
bound
mov
repnz
mov
test
leave
lods
ins
ins
pop
mov
movs
ins
push
in
push
push
and
jbe
addr16
or
push
mov
sub
inc
addr16
mov
js
sbb
outs
adc
repz
bound
or
cwde
adc
shr
cld
mov
loopne
cmp
loop
mov
aas
xchg
jb
aaa
mov
jb
stc
enter
movs
arpl
inc
inc
(bad)
jle
jns
movs
jno
cdq
jnp
jecxz
mov
test
xchg
out
daa
scas
push
cwde
sbb
rcl
dec
lods
mov
(bad)
jl
in
faddp
mov
and
and
cdq
inc
xchg
imul
aaa
out
fnstcw
xchg
and
(bad)
push
hlt
int
xchg
rcr
jmp
iret
push
sub
loope
ins
scas
bswap
xchg
push
jbe
imul
aas
repz
cs
repz
dec
jae
push
jge
(bad)
js
sub
xchg
lods
cli
rcr
aaa
mov
cmp
(bad)
popa
mov
aaa
xor
xchg
in
push
mov
mov
sub
mov
jae
push
jb
stos
add
aaa
xchg
sub
dec
pushf
cld
mov
out
fsubr
les
sahf
test
xchg
sub
out
out
in
arpl
xor
imul
shl
nop
loop
movs
sub
(bad)
inc
ficomp
or
dec
fidivr
scas
adc
mov
jbe
js
or
outs
out
cdq
push
lds
popa
outs
or
fxam
adc
mov
stos
fidivr
fnstsw
mov
out
sbb
sbb
lahf
and
push
push
pop
cmovl
push
je
cmp
adc
lds
or
mov
add
daa
movs
ins
sahf
add
inc
cmps
frstor
data16
outs
scas
stc
xchg
pusha
or
add
nop
mov
leave
and
pop
cli
xchg
(bad)
in
dec
dec
jo
ins
inc
dec
mov
adc
jmp
or
loop
xor
data16
(bad)
leave
pop
imul
or
xlat
rcl
icebp
in
mov
aas
sbb
mov
push
gs
outs
adc
mov
(bad)
xor
nop
movs
mov
out
mov
cdq
test
iret
mov
push
sbb
add
fwait
(bad)
lock
cwde
cmp
cmc
data16
sbb
push
fwait
cdq
push
adc
div
or
rcl
(bad)
sub
fimul
popf
push
cmp
fst
outs
mov
ror
stc
repnz
jmp
xchg
nop
scas
int
jmp
or
in
lahf
cdq
push
aaa
pushf
cmp
cmp
(bad)
scas
fmul
dec
aas
pmulhw
mov
cmp
push
sub
shl
dec
mov
xchg
cdq
xchg
test
add
and
retf
or
push
fmulp
test
pop
jmp
push
xchg
cli
xor
daa
pop
push
in
movs
faddp
mov
sbb
dec
add
int
add
fcom
adc
pop
pop
sbb
pushf
inc
adc
adc
neg
xchg
dec
dec
ret
sbb
pusha
push
mov
nop
shl
lahf
out
jmp
sbb
bound
rep
std
xlat
je
jge
mov
mov
mov
push
enter
or
fwait
adc
jbe
xchg
and
setl
inc
adc
mov
fwait
cmp
and
(bad)
movs
outs
pop
jg
loope
iret
jo
mov
cmps
je
retf
cmps
mul
push
scas
fwait
push
sbb
xor
mov
mov
xchg
mov
popa
ret
push
and
int
outs
mov
mov
adc
or
fisttp
mov
xor
xchg
xor
jae
das
sbb
and
cmp
xchg
mov
bound
xchg
add
sbb
push
ins
sar
retf
ret
jecxz
jae
scas
lock
cmp
xor
fdivr
jmp
movs
shl
stc
out
mov
push
cmp
aam
je
mov
xor
jmp
jo
imul
pushf
lods
jmp
cmp
inc
scas
mov
inc
ja
push
scas
sbb
sbb
jecxz
(bad)
test
sub
rcl
mov
pop
dec
loope
retf
movs
add
xchg
leave
lahf
and
fwait
dec
dec
pop
dec
sbb
jo
test
mov
hlt
mov
inc
mov
cmp
jle
and
jns
fstp
in
int
shrd
cdq
jmp
xor
ins
outs
inc
cmp
nop
addr16
mov
popa
jmp
(bad)
add
repz
imul
cdq
mov
fidivr
fbld
push
inc
xor
dec
fisttp
iret
out
fwait
cmp
cmps
inc
xchg
pop
push
je
cs
nop
jge
and
mov
es
jns
fdivr
(bad)
movs
push
sub
or
adc
xchg
xchg
out
hlt
fsubr
inc
(bad)
call
mov
mov
int
or
mov
aas
cs
add
cld
fwait
sar
xor
push
and
rcl
ds
add
jmp
in
pop
mov
or
xchg
fild
pop
movs
or
cmp
add
mov
pop
dec
leave
push
out
push
out
xor
test
push
mov
out
in
sbb
jl
xor
(bad)
aaa
test
ja
and
mov
and
pop
add
(bad)
and
mov
mov
ins
jb
dec
xchg
jp
imul
pusha
pushf
loope
jae
mov
jno
jmp
push
push
push
or
dec
add
push
xchg
repz
inc
pop
mov
adc
mov
mov
dec
stos
ficom
sbb
ror
arpl
and
mov
(bad)
jb
mov
cmp
fwait
push
mov
arpl
movs
lods
cdq
lods
in
or
dec
lds
add
xchg
jle
daa
fstp
sub
add
gs
fisttp
js
or
sahf
add
xchg
enter
push
mov
loope
mov
dec
in
inc
mov
shr
xor
movs
mov
pop
mov
in
or
cmp
adc
xor
jo
mov
ins
mov
aam
icebp
call
popf
(bad)
popa
push
jmp
dec
sub
test
xchg
fisubr
aas
imul
icebp
mov
cmps
sub
fcmovu
dec
fisub
push
in
sub
(bad)
pushf
xchg
es
jmp
mov
sar
or
mov
rcr
fwait
dec
jle
imul
cmp
mov
xchg
pop
unpckhps
or
xor
loope
(bad)
outs
aaa
or
cs
dec
in
fidiv
mov
xchg
mov
push
pop
cmp
push
pop
ret
cmp
sub
pop
ss
mov
inc
ss
mov
xchg
jl
mov
mov
and
hlt
cmp
fadd
cli
and
shr
dec
jmp
xchg
xchg
push
adc
xchg
xor
cmp
call
shr
and
ds
mov
and
inc
les
aad
mov
jo
pop
jmp
ss
out
loope
mov
test
in
pop
mov
and
push
ins
dec
cmp
aaa
shl
push
push
cmc
mov
out
out
push
dec
sub
stos
ins
and
push
xchg
je
dec
cli
out
iret
cmp
inc
add
ss
push
mov
pop
push
sbb
std
add
popa
sahf
adc
ja
inc
test
xor
in
test
bound
mov
dec
cmp
stc
cmps
outs
les
add
cli
dec
adc
cmp
cmc
into
inc
std
and
bnd
lds
xor
pop
cwde
dec
xchg
jge
sbb
das
inc
jbe
enter
das
cmps
xchg
dec
(bad)
xor
inc
jge
push
pushf
idiv
std
aas
and
daa
das
arpl
in
xchg
pushf
add
loop
(bad)
scas
jno
and
fsubr
jmp
jmp
mov
test
cld
mov
xchg
enter
(bad)
and
jg
mov
out
scas
stos
push
adc
mov
jmp
dec
test
inc
in
inc
outs
jbe
arpl
xlat
out
push
mov
dec
int
mov
add
add
add
add
in
fist
jne
test
fdivr
pop
pop
out
cmps
daa
mov
or
pop
jg
xlat
dec
or
xchg
sbb
sub
or
push
out
lods
sub
and
in
mov
adc
cmps
add
pop
and
cs
addr16
sbb
jle
jmp
call
mov
pop
mov
push
std
mov
dec
rcl
or
xor
dec
mov
loop
pusha
int
sti
(bad)
pop
hlt
cmp
jmp
adc
in
into
ins
push
dec
sahf
push
repz
cmp
in
out
scas
fisttp
pop
(bad)
out
icebp
rol
push
(bad)
ror
std
or
xchg
pop
mov
aas
leave
call
sub
sti
push
(bad)
sbb
and
icebp
mov
add
mov
rol
fwait
neg
outs
out
push
jno
xor
shr
shr
push
and
ror
shr
mov
or
or
(bad)
mov
jmp
xchg
movs
in
pop
push
mov
pop
xor
inc
mov
cdq
mov
and
pop
mov
(bad)
xor
mov
enter
sub
sbb
int
(bad)
repz
mov
ds
enter
outs
sbb
ret
lock
inc
add
mov
sub
ins
mov
push
or
xchg
xlat
dec
inc
clc
xor
stc
loope
sahf
or
push
in
arpl
sub
adc
(bad)
mov
sbb
call
sar
fst
les
push
mov
jno
cmp
cmps
int3
lds
cmp
cdq
xor
pop
sbb
cmp
int3
pop
mov
xchg
xor
push
and
shl
xchg
ror
out
in
outs
ror
mov
jmp
mov
mov
shl
rcl
pop
retf
aas
fwait
aas
add
out
jno
or
or
iret
shl
(bad)
sbb
nop
jo
sub
push
add
jbe
idiv
test
aam
(bad)
mov
lea
rcl
push
sbb
(bad)
dec
call
sbb
add
pop
sbb
jp
ins
and
lods
pop
xor
push
add
xchg
or
and
or
mov
add
pop
add
jo
dec
sub
ret
lock
(bad)
popa
jb
or
pushf
test
sbb
add
dec
pop
mov
les
cdq
add
icebp
jne
gs
mov
push
xchg
pop
fmul
and
in
ds
adc
stc
popf
and
pop
in
fistp
mov
adc
fidiv
jle
mov
jbe
mov
mov
lods
fisubr
cld
or
bound
cmps
sbb
pop
dec
jbe
inc
mov
mov
iret
mov
mov
and
loop
adc
xchg
call
jnp
adc
mov
(bad)
in
mov
sub
fisttp
sbb
xchg
jne
add
(bad)
mov
jae
fsub
fisttp
cs
jae
scas
cwde
popf
popa
aas
sti
cmps
and
hlt
ds
sbb
sub
ficomp
xchg
std
(bad)
jmp
fcom
loope
jmp
inc
pop
stos
jb
jg
test
fdivr
or
sbb
fabs
xlat
jmp
jl
sti
daa
cmp
aaa
pop
inc
(bad)
jp
mov
sbb
mov
mov
idiv
xor
mov
sub
pop
inc
jbe
pop
add
mov
or
jecxz
jge
jmp
xchg
iret
outs
cld
adc
push
push
mov
movs
sti
pop
xor
cmps
mov
mov
xor
in
dec
std
jno
dec
jb
mov
lods
sar
sub
shr
and
enter
dec
sub
lahf
push
aaa
push
jg
shl
jp
add
fnstsw
mov
mov
out
daa
xor
mov
jecxz
stos
stos
xchg
xchg
loop
(bad)
je
sub
mov
pop
fisttp
daa
retf
pop
xlat
scas
movs
cli
or
movs
mov
xlat
push
in
stc
sub
inc
in
sbb
jle
mov
outs
(bad)
jbe
mov
mov
add
adc
dec
mov
or
into
stos
add
sub
jle
aad
pop
xchg
and
out
aad
jo
sub
stos
test
pop
jnp
shl
xchg
daa
xchg
mov
ret
xchg
dec
call
add
icebp
aam
shl
cdq
mov
xchg
sbb
sbb
lea
ss
xchg
loop
or
or
xchg
dec
data16
xchg
or
pop
sub
mov
inc
push
test
mov
sub
adc
aas
outs
xchg
mov
add
or
pusha
ret
cmp
(bad)
and
cdq
sub
or
out
add
div
(bad)
mov
or
dec
aad
mov
sar
mov
adc
aaa
into
mov
dec
dec
jbe
and
xor
les
mov
pop
sub
data16
into
mov
inc
adc
adc
pop
dec
leave
and
cld
pop
mov
in
les
repnz
inc
sbb
ficomp
jge
sahf
cmps
mov
mov
into
lods
call
aas
sub
mov
lock
inc
jo
lahf
xor
and
and
mov
js
xchg
jmp
fstp
jns
mov
xchg
sub
aam
pop
cmc
pop
push
xchg
shl
add
call
cmps
fwait
push
sub
out
pop
mov
sub
sbb
aam
(bad)
sti
scas
xor
or
jmp
mov
push
sti
or
mov
adc
cwde
and
shl
popf
leave
xor
fsub
ror
push
mov
ins
adc
pop
int3
inc
add
or
mov
sbb
cmc
in
aam
pop
mov
outs
out
std
xchg
movs
or
outs
popf
jne
add
sbb
jmp
sub
mov
lods
mov
out
xchg
ret
lods
jle
mov
icebp
mov
sti
xor
ss
mov
fldcw
loop
iret
cs
mov
inc
ror
and
add
push
xchg
(bad)
jecxz
inc
mov
test
paddq
mov
mov
dec
jl
js
xor
or
fidivr
repz
cmp
jecxz
imul
jmp
test
dec
in
(bad)
ins
sub
inc
mov
or
push
(bad)
popf
jno
lahf
jge
add
mov
jb
cmp
out
(bad)
imul
mov
lods
push
or
mov
add
sub
call
mov
sub
mov
cmp
gs
pusha
call
push
lods
and
cwde
or
xchg
aad
xchg
jl
jnp
sub
fsub
sbb
sbb
dec
inc
dec
test
mov
push
or
scas
dec
ja
xchg
or
cmp
cmp
loope
lods
(bad)
sub
dec
lods
xor
dec
dec
and
cmc
inc
add
xchg
sub
outs
pusha
mov
lods
fsubr
xchg
adc
adc
xchg
inc
or
mov
cmp
mov
mov
adc
or
jmp
push
cmps
sbb
pop
out
xchg
mov
mov
xchg
ret
shl
retf
add
ja
std
sbb
adc
call
or
sub
popa
adc
in
ins
movs
and
mov
jge
sub
popf
mov
lods
hlt
call
mov
(bad)
and
pusha
mov
or
out
rol
mov
and
jmp
ja
test
lock
addr16
scas
fild
data16
dec
rcr
cwde
xchg
xchg
imul
test
cmps
aaa
loopne
movs
sar
cmp
inc
std
repz
jmp
out
int3
jb
jo
(bad)
std
mov
shl
add
jle
sbb
in
push
mov
fadd
in
cmps
test
or
push
sub
or
push
jb
pop
dec
xor
jmp
idiv
pop
js
ficomp
cs
in
dec
cmp
add
push
sub
or
xchg
jo
push
imul
aaa
lods
push
pop
inc
retf
leave
addr16
push
fist
mov
dec
and
ja
xor
add
lahf
(bad)
les
jne
cmp
sub
es
imul
inc
sahf
dec
mov
das
mov
imul
icebp
xor
pushf
and
pushf
xchg
cmc
jb
mov
mov
mov
test
imul
dec
test
pop
push
mov
in
mov
ret
int
mov
lods
jge
add
xchg
cdq
ja
test
ja
test
xchg
sub
mov
cmps
xor
or
je
or
mov
data16
adc
fiadd
ss
rcl
push
pop
data16
(bad)
lea
mov
ret
xor
push
icebp
add
xchg
cmc
sbb
mov
mov
ja
sbb
inc
cmp
and
fcomp
push
lods
sbb
dec
xchg
jg
push
ins
fisub
test
xor
xchg
sti
inc
ror
xchg
ror
jecxz
and
lods
test
pushf
fadd
aas
mov
pop
mov
mov
add
cmp
sbb
cs
clc
stc
and
xor
mov
cmp
gs
pop
push
std
add
(bad)
stc
ror
xor
pop
movs
cmp
sbb
scas
dec
mov
fmul
shl
div
adc
pushf
adc
data16
mov
(bad)
fs
push
or
cmps
mov
fdivr
fiadd
les
dec
adc
in
push
mov
out
jle
push
ret
mov
jno
jno
shl
aad
ins
add
adc
jbe
je
mov
ret
jno
xor
(bad)
dec
mov
fsub
xrelease
cld
stos
xchg
mov
inc
xchg
addr16
jnp
aam
push
idiv
das
sub
and
adc
gs
dec
mov
mov
call
or
sbb
fdivr
jp
gs
imul
cwde
mov
adc
jg
icebp
nop
lods
aam
jl
cmp
les
adc
mov
inc
mov
mov
push
xor
out
cmc
inc
mov
pop
adc
inc
adc
int3
jmp
or
outs
xchg
or
test
and
dec
addr16
jb
push
fcom
or
pop
push
gs
xchg
add
push
push
retf
fadd
pop
sub
ja
test
pop
aam
pop
test
cld
mov
inc
(bad)
das
bound
retf
daa
mov
test
data16
mov
push
rcl
and
stc
call
jno
icebp
mov
ret
inc
cmp
jns
test
sbb
inc
cwde
gs
mov
jno
movs
lock
jmp
xor
push
gs
ja
and
aam
retf
int3
inc
(bad)
into
xchg
sub
enter
(bad)
or
arpl
cwde
xor
mov
daa
sbb
fadd
addr16
fdivr
(bad)
and
addr16
add
int3
xor
and
and
lock
mov
pop
pop
add
jl
push
fadd
in
es
test
jl
dec
xchg
arpl
pop
jb
scas
xor
fwait
xor
mov
mov
xchg
test
push
loop
xor
jl
xlat
mov
rcr
stos
jp
cli
cdq
jg
stos
pop
xor
movs
js
add
mov
jmp
mov
xchg
aam
jmp
loopne
repnz
je
and
nop
sub
aam
test
imul
push
mov
int
or
cmps
bound
icebp
cmp
(bad)
outs
movs
pop
pop
pop
fisttp
in
jl
mov
iret
jb
test
sub
daa
sbb
test
scas
cmp
push
mov
sbb
mov
rcl
daa
lds
mov
loop
int
mov
nop
(bad)
add
cwde
mov
cwde
add
add
pop
mov
icebp
xor
push
packssdw
jnp
jbe
push
mov
sti
iret
div
std
pop
mov
sub
es
fcomp
mov
jp
fimul
ret
int3
lock
xor
cmp
cmp
or
shl
out
pop
jl
ins
jb
push
outs
jmp
ret
and
mov
in
iret
inc
enter
not
mov
in
inc
sar
jmp
add
sub
and
fdiv
sub
and
stc
inc
pusha
jle
xchg
adc
push
out
push
pop
xchg
lock
aas
cmps
or
and
jp
das
movs
mov
adc
add
in
loope
mov
adc
imul
ins
std
push
or
pushf
mov
xchg
add
mov
cmp
add
mov
mov
inc
mov
adc
imul
xor
pop
add
and
ror
pop
mov
pop
adc
imul
ret
cmp
jno
push
and
fsubr
mov
in
mov
mov
cwde
repz
adc
or
and
(bad)
pop
lods
push
and
sbb
jno
shl
add
js
or
ficomp
aad
(bad)
(bad)
xchg
push
or
adc
shl
mov
xchg
ror
adc
lods
ret
pop
sbb
xor
xor
jmp
outs
push
and
retf
inc
(bad)
icebp
ret
movs
shl
fist
sub
xor
xchg
ror
sbb
sub
fs
inc
arpl
stos
les
(bad)
cmp
mov
gs
xor
dec
addr16
push
xor
in
push
out
outs
js
xchg
sahf
and
xor
or
adc
adc
xchg
imul
sub
rcl
sub
mov
jg
cmp
rcr
fbstp
test
sub
ret
aaa
fisttp
mov
mov
jmp
adc
pop
or
jl
mov
fcmovnbe
push
dec
adc
mov
or
add
daa
jp
or
xlat
test
cmp
cmp
pop
cmp
xchg
lds
push
jmp
je
jb
div
scas
movs
gs
cmp
mov
jp
sbb
pop
popa
push
loop
mov
or
sub
in
aas
mov
xchg
mov
xchg
cmp
mov
test
xchg
out
inc
and
mov
inc
aad
mov
and
sti
outs
jns
xchg
xor
outs
xor
add
mov
iret
cmps
loope
out
inc
cmc
mov
mov
xchg
cmp
or
dec
mov
mov
jbe
lock
mov
adc
adc
(bad)
mov
aad
in
jbe
cmps
xchg
movs
xor
test
ret
mul
jnp
sbb
aad
pop
(bad)
mov
imul
xchg
jne
ins
punpckhwd
call
cmps
enter
test
mov
stos
mov
ror
aas
cs
mov
or
mov
mov
inc
(bad)
or
pop
bound
mov
inc
mov
and
stos
rcl
(bad)
(bad)
cli
adc
fild
cwde
inc
ficom
mov
sbb
ret
xor
xor
sar
cdq
mov
mov
mov
addps
movs
out
rcl
mov
cld
sbb
bound
jge
call
stc
or
scas
rcr
pop
cs
(bad)
sar
jmp
xchg
xchg
ins
push
push
mov
or
stc
pusha
(bad)
mov
leave
in
aam
jae
(bad)
or
mul
or
ffree
into
pop
loopne
scas
scas
clc
das
push
add
(bad)
je
adc
mov
sbb
std
out
data16
mov
pop
cdq
popa
out
into
lods
ds
jo
ffreep
bound
and
or
arpl
out
add
sub
imul
pop
int
pushf
pop
sbb
sub
xchg
mov
test
jle
fist
fadd
test
adc
sub
jnp
(bad)
adc
mov
xlat
sahf
pop
pop
(bad)
cmp
mov
stos
das
sar
or
jmp
mov
push
outs
ret
sbb
or
ds
icebp
mov
mov
dec
mov
push
adc
stc
cmp
repz
mov
and
jmp
jnp
and
dec
pop
mov
lods
imul
movs
loope
push
iret
xchg
ret
or
pop
push
sub
(bad)
dec
cmps
scas
pop
cld
jo
dec
in
loopne
jb
test
mov
dec
out
mov
je
or
add
movs
jecxz
jns
jmp
(bad)
test
fs
sbb
retf
cs
mov
dec
pop
ins
fwait
adc
fisub
fstp
add
mov
adc
jnp
xchg
xlat
pop
lods
mov
imul
add
rol
adc
mov
stos
(bad)
and
sbb
sbb
xchg
push
scas
dec
mov
imul
iret
pop
cwde
out
inc
popf
ret
xchg
jo
fldenv
mov
mov
cmp
or
in
ins
push
pop
mov
fwait
pop
and
pop
mov
dec
and
ja
xor
pop
arpl
adc
adc
xor
xchg
test
aaa
cmp
jmp
push
inc
sub
mov
dec
add
in
int
nop
mov
push
std
add
add
add
cmp
int3
jb
fidivr
les
cmp
cmp
(bad)
pop
cmps
rcr
sub
movs
sub
in
vextractps
xchg
aas
pop
ins
push
push
jp
lods
addr16
mov
jno
fcmovnb
push
ficom
add
std
xchg
pushf
sbb
fisubr
repz
cmp
cmp
adc
mov
shr
outs
ins
cmp
pop
aad
mov
fwait
mov
pushf
test
sub
outs
sahf
mov
xor
fidivr
leave
lock
cmp
push
repnz
sub
cwde
mov
(bad)
out
mov
mov
push
js
ja
mul
xor
fmul
inc
inc
out
push
enter
push
push
and
sbb
stos
pop
daa
test
mov
test
loopne
sbb
stos
pop
pop
jecxz
movs
push
call
pop
lods
data16
mov
cmp
sbb
jbe
scas
repz
das
mov
daa
and
cld
ins
xor
xchg
imul
push
mov
add
or
adc
mov
push
jle
enter
sub
xchg
push
cwde
add
movs
gs
cmp
and
popf
mov
pop
int3
sar
xchg
pop
out
push
and
daa
pushf
dec
dec
and
js
sbb
mov
pusha
sbb
daa
sub
xor
pop
xor
std
sub
cdq
jo
retf
lahf
ret
xor
ret
sar
ret
jmp
clts
push
cmps
push
je
jae
mov
imul
xor
pop
sbb
jmp
or
aad
xchg
cld
test
jmp
xchg
push
ins
mov
ret
ins
cmp
in
(bad)
aam
loop
mov
pop
xchg
test
add
hlt
xchg
inc
mov
jnp
cmp
mov
inc
push
push
mov
cmp
rol
xor
(bad)
xchg
repnz
lods
sbb
add
sbb
movs
scas
int
cmp
and
enter
jmp
push
(bad)
push
pop
sahf
loop
fadd
stc
popa
mov
pop
aam
into
sub
and
xchg
int3
aaa
jle
add
fist
stc
push
mov
mov
push
outs
push
add
push
hlt
iret
sbb
xor
out
jnp
mov
jbe
dec
(bad)
scas
mov
mov
enter
fs
imul
ins
mov
dec
sbb
sbb
cmp
bound
or
mov
inc
jo
inc
aaa
xchg
jnp
pop
enter
imul
leave
pop
mov
inc
fsub
test
scas
ror
adc
test
cmps
stos
cmp
cmc
and
scas
xchg
sub
into
scas
inc
lock
or
repz
fist
push
shl
sub
add
test
shl
xchg
add
xor
ins
dec
ja
sub
add
jns
or
repnz
jmp
cmp
fidiv
push
mov
xor
ss
stc
jb
mov
imul
adc
push
push
push
cs
xchg
nop
lods
aaa
push
pop
sar
dec
mov
xchg
push
sbb
into
or
(bad)
cli
sti
fcom
sar
mov
jno
add
rcl
ins
sahf
fwait
outs
(bad)
clc
xchg
cmp
dec
jmp
adc
ret
jmp
xchg
bound
sar
cmp
dec
dec
xor
sbb
int
into
sti
push
(bad)
cld
and
leave
lods
call
pushf
adc
xchg
dec
aaa
mov
sub
sti
dec
stc
xor
nop
add
pop
jp
pop
(bad)
inc
in
jbe
call
dec
fsub
rol
push
cmc
lods
dec
cmc
fidivr
adc
movs
mov
dec
lods
(bad)
icebp
dec
sbb
push
mov
jmp
adc
xchg
ins
mov
mov
inc
sub
in
cmp
jno
retf
cmp
fisttp
pop
dec
adc
lods
mov
lods
sti
mov
push
cld
or
add
xchg
push
xlat
arpl
popa
or
mov
jg
jmp
push
jbe
clc
cmp
dec
mov
xchg
mov
jb
xlat
daa
dec
cwde
jle
outs
das
dec
fcmovnu
neg
movlps
mov
inc
xor
les
xchg
xor
adc
test
cmps
xor
shl
or
xor
ret
jbe
(bad)
lods
xor
add
xchg
pop
or
sbb
daa
xor
aam
cmps
mov
cli
push
fisub
add
loope
arpl
mov
dec
mov
imul
les
stc
sbb
jnp
pop
inc
push
cmp
lock
add
inc
inc
add
movs
mov
loop
push
and
aas
sti
sub
mov
mov
lods
jmp
mov
scas
push
bound
xchg
ja
mov
rcl
and
int3
mov
ret
mov
jo
xlat
fnstenv
js
cmp
les
cld
xchg
cli
mov
pop
int3
fdivr
sub
hlt
ret
mov
sbb
iret
and
popf
imul
inc
mov
lahf
ja
aas
(bad)
(bad)
std
push
inc
pop
mov
and
inc
add
stos
sub
inc
adc
cmc
imul
bound
lock
xchg
repz
pop
push
inc
mov
sub
ret
sbb
and
call
ret
enter
inc
xor
jae
mov
lods
cmp
add
or
jo
repnz
aad
fwait
mov
add
inc
test
inc
adc
ja
lods
mov
jmp
adc
adc
mov
sbb
mov
pusha
or
jno
mov
jl
in
es
fsub
daa
push
and
inc
sbb
js
jmp
lea
add
sub
adc
call
(bad)
cmc
fadd
dec
imul
std
(bad)
mov
dec
pop
sub
lods
lock
xor
mov
jno
test
jb
add
and
arpl
cmps
test
test
mov
pushf
mov
dec
mov
push
mov
jns
dec
enter
adc
xlat
(bad)
lods
pop
test
cmp
shl
jecxz
and
fcom
out
aam
dec
sahf
std
movs
pusha
fdivr
mov
push
inc
in
mov
pop
retf
and
retf
dec
pop
or
ret
xor
mov
add
inc
mov
stos
sbb
aam
repnz
dec
mov
or
clc
sahf
add
scas
enter
sar
enter
push
push
xchg
mov
bt
push
mov
adc
add
lock
add
pusha
pop
retf
retf
push
jmp
jae
push
pop
fdiv
or
ins
ret
jecxz
push
mov
sub
shl
jg
movs
xchg
test
jns
pop
in
sbb
test
and
std
mov
push
cmp
(bad)
pop
mov
dec
int
sub
rcl
repz
mov
shl
into
mov
mov
jg
(bad)
icebp
dec
aam
fild
and
adc
call
(bad)
and
repz
jecxz
jmp
aam
mov
cli
mov
mov
lock
gs
mov
push
je
out
mov
clc
sub
movs
test
or
dec
cld
push
cmps
iret
repz
in
mov
xor
in
jns
push
fwait
jbe
mov
cli
(bad)
js
aad
dec
push
mov
mov
pusha
int3
inc
jne
pop
cmps
loop
cmps
outs
jmp
ror
les
inc
pop
mov
cmp
sar
sub
cmp
xor
dec
js
inc
aaa
adc
mov
push
cmp
retf
pop
mov
(bad)
popf
inc
lock
adc
ins
sbb
xor
jo
jmp
in
push
(bad)
xchg
adc
nop
mov
pop
mov
stc
nop
sub
xchg
js
mov
fsub
add
mov
inc
aaa
out
test
jmp
call
sar
in
fstp
cwde
add
movs
pop
test
int3
icebp
jg
clc
xchg
xchg
test
lods
xor
popf
ja
mov
aaa
hlt
pushf
jp
adc
inc
popf
mov
mov
movs
in
mov
push
outs
cmp
sbb
fiadd
pop
jecxz
inc
lds
outs
das
mov
aad
and
sub
xchg
or
cmp
or
jecxz
mov
loopne
push
je
ss
mov
mov
jp
popa
enter
xor
pop
jle
jnp
mov
cmp
es
jle
leave
jmp
pop
and
inc
sbb
(bad)
xor
mov
(bad)
aam
mov
jb
jno
push
sub
jae
xlat
mov
and
call
repz
mov
dec
xor
dec
int3
sahf
dec
out
mov
shl
mov
push
jge
mul
sbb
push
jecxz
or
adc
nop
aad
test
popf
push
movs
mov
push
aam
inc
push
inc
popf
mov
das
gs
dec
call
adc
stc
and
imul
imul
mov
sub
mov
pop
aas
push
add
xchg
test
push
pop
(bad)
xlat
repnz
inc
inc
cli
and
mov
mov
dec
and
pop
and
mov
mov
int3
sbb
stos
xchg
push
sub
lahf
aam
add
scas
inc
cdq
add
and
fiadd
ss
sbb
pop
cmp
sbb
or
aas
sahf
lea
push
mov
(bad)
enter
sub
pop
xchg
mov
sti
pop
add
push
dec
cmp
push
aas
(bad)
bound
push
stos
enter
push
xor
sti
cmc
(bad)
stc
in
push
lahf
add
dec
sbb
pop
retf
test
xchg
out
rcl
or
add
or
imul
cmps
cmp
sub
dec
jecxz
jne
sub
jp
add
leave
or
in
aad
sbb
addr16
pop
fbld
lea
mov
mov
jp
addr16
ficom
aam
rol
or
jns
xchg
add
xlat
sub
mov
in
cmps
jns
lock
inc
ins
pop
cmp
sub
dec
loope
xor
mov
jns
loop
ror
pop
(bad)
pusha
js
cmp
ins
add
adc
nop
pop
mov
inc
dec
jbe
lods
outs
inc
fs
pop
dec
jmp
or
and
xchg
dec
mov
je
cmp
jl
(bad)
mov
and
xchg
mov
mov
mov
sahf
adc
ds
rcr
cs
nop
or
out
adc
xchg
out
pop
push
add
sub
(bad)
mov
cmp
mul
imul
call
push
mov
adc
mov
call
jbe
fbld
daa
fyl2xp1
xchg
inc
jecxz
sbb
pop
or
or
addr16
dec
pusha
in
in
leave
xor
mov
int
xor
push
sbb
jb
out
rol
pop
in
sub
add
xchg
nop
dec
jp
xor
inc
(bad)
enter
fs
leave
outs
jl
jmp
cmp
jg
mov
or
xchg
xchg
addr16
and
ja
daa
inc
adc
cwde
mov
xor
push
lfs
xlat
add
imul
rol
mov
je
sbb
xor
js
mov
mov
cmp
test
cmp
xor
loop
loope
mov
and
in
test
or
and
jno
pop
(bad)
push
cmp
and
out
ficomp
leave
movs
retf
es
mov
shr
adc
push
and
sub
mov
pop
and
test
cmp
or
inc
sbb
pop
cdq
nop
jg
retf
shr
jnp
inc
in
add
cmps
push
dec
lea
jge
add
cmp
not
jno
je
daa
inc
mov
xor
adc
adc
jmp
stos
ret
add
(bad)
cld
ss
inc
cmp
movs
inc
(bad)
or
(bad)
(bad)
imul
test
cld
push
das
jns
xchg
adc
sub
imul
scas
aas
mov
mov
mov
jnp
mov
jb
adc
retf
loop
push
mov
aam
movs
mov
fcmovb
mov
out
pushf
test
jne
lods
xchg
and
mov
repz
aaa
push
test
test
cmp
cmps
test
pop
sti
jbe
or
nop
or
sbb
add
mov
(bad)
adc
cld
sbb
fstp
cmp
iret
fld
es
call
aam
mov
stos
sbb
pop
jnp
pop
xor
mov
imul
js
jbe
imul
sub
or
std
mov
push
fcmovb
lods
sti
lds
jb
push
imul
mov
xchg
mov
daa
mov
push
and
push
aam
div
repz
or
push
(bad)
loope
ins
cmp
jbe
not
cmp
xlat
mov
cmc
xchg
inc
leave
adc
mov
movs
inc
pop
push
hlt
stos
outs
das
test
js
sbb
mov
sub
(bad)
mov
pop
mov
jne
dec
cmp
ret
inc
inc
mov
mov
mov
mov
inc
xlat
push
pop
mov
add
pop
jmp
or
xchg
mov
mov
xchg
iret
and
int
mov
pop
pandn
in
cmp
pop
and
xchg
add
ja
mov
jl
inc
outs
out
dec
call
adc
mov
push
pop
push
shl
add
retf
daa
in
ds
popa
out
xor
mov
ror
push
ret
daa
out
sbb
pushf
test
jg
xor
fdiv
dec
mov
mov
das
cmp
stos
mov
das
and
test
fwait
or
pop
xchg
jb
and
jne
loop
cmp
clc
cmp
ret
iret
xchg
in
fucomi
inc
mov
inc
cli
mov
es
inc
pop
scas
es
loope
adc
push
(bad)
pop
mov
loopne
sub
bound
stos
or
xor
aam
push
les
jae
sbb
mov
cmp
sbb
cs
pusha
test
cmc
mov
outs
clc
or
sub
xchg
popw
xchg
fisubr
int
push
adc
push
push
rcr
(bad)
es
out
sub
add
(bad)
pop
add
mov
fst
pushf
out
(bad)
xchg
mov
sub
call
xchg
add
and
dec
nop
add
mov
in
nop
cmp
mov
pop
pop
cmp
ds
and
xlat
out
in
fs
outs
(bad)
mov
sub
fimul
shl
pop
mov
and
jno
retf
or
push
aam
imul
ret
in
cmp
xchg
movs
mov
out
repz
sbb
in
mov
adc
jnp
cmp
jmp
sub
cmps
ss
xchg
mov
aas
pusha
push
loop
(bad)
outs
add
sub
pop
rcr
sub
ja
mov
mov
loopne
dec
movs
or
enter
movs
push
mov
fs
dec
popf
jo
sahf
pop
cs
pop
in
sbb
push
xchg
push
xchg
xchg
mov
sbb
and
rcr
jno
xchg
test
xlat
push
xchg
ficomp
jns
lock
shr
mov
mov
sub
xor
dec
jno
cmp
sti
in
lock
gs
neg
mov
call
adc
jmp
sbb
out
cmp
xchg
jbe
adc
outs
scas
push
ret
aas
test
sub
iret
retf
mov
or
dec
cld
lods
push
(bad)
loopne
xchg
push
jno
xor
cmp
lea
inc
(bad)
jp
test
out
mov
mov
adc
(bad)
(bad)
dec
fwait
push
xchg
jbe
icebp
mov
adc
loope
sbb
mov
mov
mov
int
lds
mov
aaa
jo
fld
dec
inc
mov
leave
repnz
mov
inc
iret
(bad)
mov
mov
add
loope
and
lds
adc
add
fild
fsubr
push
ins
enter
pop
add
inc
imul
pusha
sub
cmp
frstor
scas
inc
ins
mov
mov
cmp
aad
movs
lods
or
and
sbb
je
retf
stc
ins
push
cli
enter
sbb
inc
stc
ja
xor
pusha
fsub
in
mov
test
inc
jle
cmps
js
call
pop
mov
inc
jmp
or
fcomp
outs
xlat
fdiv
ss
popa
in
xchg
outs
dec
jne
std
push
ins
stos
retf
mov
addr16
in
call
lods
(bad)
stos
jmp
test
fcmovnb
dec
aas
jb
jno
ds
inc
stos
rcr
sbb
out
push
rcl
inc
mov
out
push
cld
sub
mov
xor
call
add
nop
jge
test
adc
cdq
jae
aam
mov
rol
clc
pop
in
ror
or
fiadd
pop
xor
xchg
mov
ret
mov
std
ja
rol
in
pusha
hlt
sbb
or
pop
(bad)
sub
repnz
xlat
adc
jecxz
cli
div
cdq
push
mov
cmp
xor
mov
rcl
push
(bad)
xchg
movs
push
push
add
cwde
movs
ror
stos
xlat
daa
out
mov
sbb
inc
adc
mov
and
sahf
gs
cli
push
xchg
mov
and
mov
mov
inc
outs
fdivr
sahf
arpl
mov
aam
cdq
add
and
cmp
data16
mov
scas
jge
mov
xchg
stos
push
(bad)
cli
pop
and
sub
cmp
imul
aam
push
mov
popa
lods
out
clc
popa
fcom
mov
or
fwait
aad
(bad)
or
stos
adc
jmp
cwde
sub
cs
sti
sub
and
icebp
sbb
stc
mov
jmp
repz
call
int
mov
imul
sub
ror
sbb
adc
call
inc
fstp
push
xlat
imul
movs
js
das
push
movs
inc
add
cmp
cmc
mov
add
or
mov
xchg
inc
jmp
mov
mov
or
pop
adc
cmp
push
xor
push
mov
fcomp
hlt
fwait
inc
call
sub
sbb
or
pop
jecxz
cwde
and
mov
inc
sahf
stos
mov
mov
lea
jge
in
fidiv
(bad)
call
pop
jg
push
ja
in
inc
push
sti
jmp
mov
push
and
fimul
jp
bound
int3
movs
push
lds
push
cmp
ds
mov
mov
cdq
and
in
pop
sti
int3
or
push
pop
retf
xchg
lods
stc
mov
cmp
mov
push
pop
jg
jge
push
pop
or
pop
sti
xchg
pop
das
dec
xor
jnp
jl
mov
sub
jp
mov
sbb
loop
fwait
ror
rcl
daa
cdq
and
fld
xor
(bad)
or
mov
add
mov
js
xor
adc
imul
cmp
int
push
in
cdq
dec
push
dec
xor
inc
es
dec
sub
and
cmp
stos
or
enter
rcl
mov
push
addr16
je
ror
xchg
icebp
xor
idiv
call
mov
js
inc
push
push
add
into
add
sar
shl
add
jmp
pop
fisttp
cmp
adc
lea
push
xor
inc
jmp
loopne
cwde
retf
sub
ins
aaa
gs
ret
xchg
cwde
jmp
lods
imul
mov
arpl
add
ins
enter
mov
sub
adc
cmp
outs
mov
pop
nop
inc
into
inc
loopne
mov
or
leave
ror
mov
ja
scas
(bad)
pop
ret
xchg
xor
lahf
(bad)
dec
or
push
aam
repz
mov
mov
lods
nop
lea
cs
or
scas
leave
movs
fisttp
push
push
inc
jmp
outs
jb
arpl
test
pop
int3
mov
jle
aaa
add
or
push
bound
ja
fdivr
cmp
out
pop
(bad)
or
test
add
sbb
shl
adc
mov
jp
push
ret
gs
imul
pop
in
sub
cld
(bad)
mov
inc
inc
cld
xor
adc
mov
ror
dec
mov
pop
mov
cwde
sbb
pusha
aad
pop
in
push
in
sbb
jns
cmc
mov
nop
sub
pop
sbb
into
xchg
retf
hlt
push
or
mov
lods
pop
push
or
out
mov
shl
es
and
mov
xlat
adc
mov
jmp
repz
inc
sbb
or
push
outs
pop
test
xchg
dec
pop
ret
inc
adc
repz
cli
mov
loope
lods
mov
fnstsw
popf
js
mov
add
jg
jb
dec
jl
aam
(bad)
pop
push
xor
xor
outs
adc
into
(bad)
mov
jne
xchg
imul
adc
xchg
mov
pop
sub
out
lea
daa
call
cmp
dec
sbb
cmp
stc
mov
or
xchg
loop
jecxz
std
fwait
mov
pop
push
pop
add
xchg
(bad)
retf
mov
ja
fisub
xor
adc
sub
aas
ret
scas
pop
add
mov
mul
cs
shr
int3
mov
mov
mov
dec
or
mov
ret
add
pop
addr16
and
ds
mov
push
mov
xor
sub
popa
dec
or
or
xchg
arpl
sbb
jge
bound
cwde
(bad)
in
mov
sbb
push
outs
lea
les
push
aas
aam
mov
cmp
jg
movs
sar
jge
lock
jmp
mov
push
jmp
mov
adc
sub
es
out
stc
push
mov
add
mov
xlat
push
jp
jmp
mov
sub
adc
lahf
int
adc
lods
inc
jge
pop
sbb
cmp
push
adc
(bad)
dec
mov
or
fnstsw
(bad)
stos
add
test
movs
es
out
fcmovu
fcmovnbe
pop
sub
add
fldcw
or
jl
stos
inc
retf
test
dec
aas
sbb
sbb
mov
and
xchg
leave
xchg
scas
push
push
test
mov
inc
dec
mov
je
sbb
dec
lsl
fidivr
call
mov
test
inc
es
ror
int3
test
ret
mov
stc
movs
(bad)
push
pop
push
mov
xlat
sbb
js
icebp
push
inc
out
sbb
lock
(bad)
sbb
out
pushf
jo
jnp
mov
sub
scas
mov
mov
jne
aad
pop
inc
or
jnp
addr16
or
or
cld
push
dec
push
in
xchg
pop
lods
or
(bad)
dec
or
xor
mov
je
es
xor
call
mov
ret
loop
les
fwait
xchg
jge
pxor
add
cmp
(bad)
cdq
popa
and
shr
das
sbb
pop
add
cdq
push
cs
cwde
lods
enter
pop
pop
mov
add
adc
push
arpl
and
test
push
mov
addr16
(bad)
and
lods
inc
xchg
in
push
fsubr
ins
push
repnz
shr
add
leave
lds
xchg
xor
xchg
and
add
(bad)
cli
fs
push
or
and
loope
jne
inc
push
(bad)
jge
inc
adc
les
ror
sbb
repz
cmp
xor
add
lds
inc
mov
add
mov
movs
jno
pop
inc
pop
es
cld
add
mov
stos
arpl
adc
stos
push
mov
adc
aam
add
mov
rcl
adc
push
loopne
dec
jl
nop
fisttp
int3
jg
cmps
cmp
sub
sar
shl
mov
sbb
outs
scas
jle
push
inc
stc
jo
in
mov
inc
pop
daa
jbe
or
gs
dec
and
cmps
(bad)
(bad)
lahf
hlt
jge
jmp
jmp
fidiv
add
push
loop
push
add
retf
fldcw
fwait
inc
stos
dec
jl
mov
mov
aam
aas
jae
pop
and
mov
inc
inc
cmp
sti
ja
rcr
add
inc
dec
shl
ds
mov
pop
pusha
jno
into
sub
(bad)
jge
mov
cdq
adc
pop
push
sbb
out
pop
jge
pop
jns
repz
mov
push
cwde
clc
jb
xor
es
or
xor
mov
sar
mov
ficomp
les
arpl
outs
aam
add
adc
inc
pop
ror
pusha
dec
int3
aam
inc
sub
xlat
sub
fwait
outs
shl
pop
sbb
icebp
retf
aad
jmp
lahf
xchg
gs
pushf
aad
and
or
mov
and
lock
mov
jmp
out
or
dec
mov
retf
sub
lods
cmp
jno
adc
lods
and
mov
int3
sub
(bad)
adc
xchg
scas
sub
icebp
pop
(bad)
idiv
leave
pop
mov
add
mov
addr16
ins
stos
(bad)
jns
retf
jbe
mov
(bad)
rol
repnz
mov
stos
cmp
test
call
or
iret
mov
sub
mov
and
jl
xlat
inc
push
repz
scas
sbb
sub
jmp
dec
(bad)
jge
dec
jle
test
mov
or
adc
inc
push
push
and
push
jg
jl
jl
push
pop
mov
int
stos
mov
nop
sbb
add
xchg
mov
add
cmp
mov
outs
(bad)
jecxz
dec
cmp
mov
mov
dec
xor
cmp
retf
or
lahf
fadd
out
js
pusha
rol
cli
push
jmp
mov
jl
jl
dec
rol
sbb
mov
jbe
pushf
shl
add
ret
jne
mov
mov
inc
mov
ror
mov
popf
push
jno
out
mov
or
jecxz
jmp
jle
out
int3
push
bound
mov
aas
push
mov
cmc
jmp
add
mov
fdivp
lahf
dec
(bad)
push
pop
out
and
adc
hlt
xor
mov
push
jnp
lds
add
fist
arpl
arpl
jmp
adc
sub
dec
ret
mov
add
inc
out
cmovae
or
push
mov
movs
lds
stos
mov
mov
mov
fiadd
(bad)
cli
xor
popf
les
inc
cmp
mov
jbe
jge
sbb
xor
out
push
mov
mov
pop
pop
dec
bswap
sub
loopne
cmp
adc
out
mov
push
cmp
sti
pusha
inc
sub
add
(bad)
xchg
call
xchg
mov
xchg
out
out
pop
in
sub
stos
add
sbb
sbb
mov
jb
cmp
aaa
aas
adc
movs
adc
rcl
adc
inc
call
pop
add
(bad)
xlat
sub
mov
adc
adc
(bad)
dec
adc
add
fidivr
loopne
enter
mov
loopne
retf
push
sbb
mov
pop
xchg
sbb
mov
jo
jno
stc
push
std
push
cmps
iretw
dec
enter
sub
das
iret
hlt
cmp
xlat
mov
inc
cmps
add
hlt
retf
sub
add
sbb
mov
xor
fimul
jp
out
jecxz
pop
fidiv
fwait
inc
pusha
fs
mov
out
pop
and
nop
jle
cwde
sub
int3
cmp
dec
mov
jp
mov
jnp
sar
aad
adc
iret
mov
arpl
jg
retf
adc
int
rcr
mov
push
or
add
sub
leave
cdq
xchg
outs
jne
in
out
das
xchg
mov
adc
sbb
mov
xchg
fdivr
cs
cli
sahf
mov
(bad)
and
mov
scas
mov
sbb
xor
dec
rcl
dec
je
mov
or
shl
clc
add
ret
xchg
and
xor
inc
push
sub
int3
popf
aaa
mov
dec
aas
ficom
add
fldcw
out
mov
loop
and
sub
mov
sbb
add
mov
cmp
sahf
retf
in
cmp
mov
jecxz
dec
lds
outs
cwde
mov
cwde
adc
fisttp
(bad)
mov
fcmovbe
out
loopne
sbb
(bad)
out
jb
sbb
sub
outs
mov
jmp
adc
xor
sub
push
mov
dec
mov
push
iret
jae
lods
idiv
cdq
pop
inc
cli
fwait
cmp
into
jmp
or
aas
adc
inc
fimul
pop
cmp
pop
outs
or
fwait
clc
xchg
shl
adc
xor
sbb
outs
add
test
jae
aaa
lea
and
cmp
and
cmp
into
mov
pop
xor
stos
pop
(bad)
fstp
dec
cmp
or
rcl
jnp
test
fnstenv
stc
push
push
add
adc
(bad)
cmp
xchg
inc
push
xchg
mov
leave
outs
je
mov
and
push
inc
ja
pop
and
inc
mov
pop
movs
movs
sar
push
push
adc
xor
pop
mov
call
imul
xchg
sub
shl
or
inc
add
jno
jl
(bad)
pop
push
push
mov
dec
mov
lock
aad
es
mov
inc
in
clc
ss
pop
scas
xor
fsubr
jle
mov
not
mov
xchg
pop
push
dec
into
add
push
adc
iret
adc
pop
or
sub
add
cdq
aad
pop
(bad)
cmp
xor
mov
imul
jno
daa
dec
pop
sar
pushf
and
(bad)
out
jle
and
mov
fadd
(bad)
nop
and
test
movs
or
in
fucom
repnz
pop
mov
xor
cmp
mov
mov
popa
pop
loop
push
cmp
outs
out
add
das
adc
xor
push
repnz
mov
or
mov
pop
data16
and
fstp
inc
adc
stc
jge
inc
xchg
dec
sub
imul
fisttp
jp
loopne
in
imul
enter
fsubrp
mov
dec
cmp
retf
movs
loopne
cmp
xchg
or
or
(bad)
pop
fimul
aam
sub
jmp
scas
sub
scas
(bad)
mov
mov
pop
jmp
inc
shl
add
dec
jns
je
pop
cmp
pop
scas
mov
ins
test
cld
push
jae
cli
jp
adc
call
pop
movs
out
jo
cmp
add
jmp
push
jbe
and
or
dec
sbb
movs
sub
jo
dec
fs
shl
inc
mov
or
cmp
(bad)
push
and
push
movs
stc
imul
xchg
stc
rcl
pushf
jo
jns
(bad)
shr
lea
xor
mov
in
add
cmp
repnz
push
inc
sysenter
retf
pop
mov
popa
in
mov
movs
clc
fs
xchg
call
sub
pop
mov
xchg
inc
adc
inc
fdivr
adc
jae
jo
sbb
pop
pop
adc
adc
push
fwait
dec
push
jp
into
ret
loop
ret
sub
out
push
push
fnstcw
or
jnp
or
icebp
jmp
mov
enter
cld
ins
jmp
adc
fst
gs
outs
ins
test
add
iret
bound
lods
jno
dec
loope
jno
push
popa
sub
test
daa
pop
daa
cmp
cmps
and
xor
sub
mov
lds
iret
les
cwde
std
or
imul
das
adc
push
test
mov
clc
mov
pop
out
sbb
dec
jecxz
push
pusha
fisttp
les
ds
cmp
ins
xchg
gs
and
sbb
sti
push
jle
cdq
rcr
dec
push
or
test
rcr
cmp
stos
ffreep
imul
push
imul
jne
pop
mov
cmp
xor
out
add
inc
jno
movs
bound
xchg
and
(bad)
paddw
enter
sub
push
into
adc
push
sbb
loopne
je
icebp
sub
test
or
pop
jo
cmc
jae
ins
(bad)
mov
add
mov
jecxz
rcl
call
xchg
out
sbb
not
sbb
push
push
push
test
js
add
mov
add
hlt
mov
or
push
inc
pop
xchg
push
sahf
adc
mov
jmp
and
cmp
mov
add
push
clc
stc
mov
jae
jae
push
(bad)
push
ja
jecxz
test
fmul
loopne
push
mov
test
dec
in
mov
sub
out
es
sbb
out
leave
cmps
call
pop
shr
les
cdq
out
or
stos
cmp
imul
fisttp
fimul
cmps
and
xchg
xchg
test
add
mov
xor
jmp
ja
out
jmp
pop
les
add
in
(bad)
xchg
inc
je
fnsave
fmul
xchg
xchg
jmp
jg
scas
push
iret
xchg
jae
test
vmovdqa
sar
inc
mov
ins
mov
popa
mul
adc
retf
je
sub
pusha
mov
inc
js
in
test
jmp
mov
stos
arpl
jmp
or
inc
add
jno
xchg
enter
fidivr
repz
clc
mov
test
push
and
ret
inc
cwde
pop
loop
ss
push
sub
bswap
mov
loopne
loop
sbb
aaa
mov
xchg
outs
mov
add
mov
bound
nop
daa
pop
out
inc
inc
cld
pop
xchg
lea
dec
or
push
pop
cld
ja
or
iret
les
add
arpl
mov
mov
xchg
cmps
ds
mov
icebp
adc
inc
push
jb
mov
imul
aas
and
int
out
pop
push
std
sbb
adc
push
jbe
into
inc
push
jno
adc
mov
mov
stos
mov
std
push
dec
or
mov
pop
adc
mov
add
imul
cmp
mov
pusha
mov
and
and
scas
stos
imul
lock
inc
addr16
or
xchg
lea
sti
cwde
adc
mov
call
cld
test
imul
mov
or
xchg
outs
dec
int3
aad
fwait
mov
ror
mov
pop
mov
xlat
xor
dec
cmp
cmp
mov
outs
shl
inc
ror
add
lahf
dec
fldcw
or
jmp
pop
pusha
fidivr
gs
les
stos
ja
mov
in
lods
repnz
xchg
cmp
xor
sahf
xchg
fisubr
sbb
jne
cmp
xchg
and
test
or
jp
or
sub
arpl
sub
ret
pop
dec
jae
repnz
in
mov
mov
and
jecxz
sbb
xchg
push
inc
cmp
(bad)
int3
ja
stc
stos
les
ror
rcr
(bad)
push
xor
neg
mov
in
call
in
and
out
cs
pop
(bad)
jg
fstp
inc
(bad)
xor
add
aad
fnstenv
xchg
scas
in
ss
out
or
mov
or
cmp
jno
mov
fidiv
fs
test
jle
std
shl
iret
retf
push
cmp
push
shr
out
es
cmp
outs
dec
(bad)
add
cmp
jmp
outs
in
mov
rcl
sbb
adc
icebp
and
xchg
loopne
idiv
sbb
pop
mov
mov
jb
jns
je
leave
pop
shr
call
xlat
out
(bad)
shl
and
mov
xor
ud1
mov
mov
mov
clc
clc
mov
xor
dec
daa
push
sub
inc
nop
enter
sbb
inc
repnz
jae
cld
jne
std
int
cmps
out
push
xlat
inc
lods
push
pusha
mov
ret
push
rcl
mov
push
add
ins
ja
lds
repz
in
sbb
pop
xor
sbb
in
inc
imul
mov
dec
inc
jo
cli
shl
ins
test
and
jns
std
sbb
push
lea
adc
out
outs
jbe
rcl
pusha
cmp
and
repz
cmps
ins
rcl
cdq
mov
adc
mov
repnz
fdiv
pop
std
clc
neg
adc
push
xor
mov
dec
sti
movs
jne
addr16
outs
call
push
scas
loopne
(bad)
das
sbb
int3
dec
test
xchg
mov
pushf
push
fiadd
adc
lods
inc
or
cli
pop
cmps
sar
xor
push
mov
loope
ret
sbb
and
push
imul
and
xor
(bad)
push
dec
out
or
push
(bad)
xor
xor
(bad)
popa
pop
mov
pop
retf
or
fldcw
into
xchg
push
cmps
out
push
mov
and
lock
or
or
or
js
jl
lods
pop
mov
push
cmp
xchg
addr16
(bad)
adc
mov
mov
shl
sub
lea
dec
fsubr
cmps
pop
pusha
push
ins
neg
xor
(bad)
push
adc
pop
sbb
cmp
mov
sub
xor
vmovhps
mov
gs
movs
popf
xchg
push
arpl
mov
jmp
fimul
(bad)
and
out
adc
inc
sub
int
movs
dec
inc
mov
jp
mov
iret
xlat
shr
cli
scas
sar
add
(bad)
rcl
jge
int
jmp
mov
xchg
sub
push
adc
pop
pop
in
data16
cld
xchg
sub
(bad)
in
mov
loopne
imul
int3
add
inc
push
jecxz
imul
ret
cli
lods
nop
(bad)
repz
add
jne
out
retf
mov
ss
sub
push
ja
stos
jle
mul
push
stc
sahf
ins
(bad)
jecxz
in
out
stos
fwait
scas
cmps
sbb
ds
pop
xor
mov
fistp
pop
inc
rcl
movs
cmp
xchg
mov
repnz
dec
arpl
sub
mov
and
mov
jge
mov
cdq
sub
stos
outs
or
adc
mov
into
xchg
leave
sub
and
rcr
retf
cmps
or
inc
loope
push
stos
adc
cmp
mov
xchg
and
mov
clc
lds
jmp
mov
push
adc
mov
mov
push
(bad)
mov
enter
adc
outs
jae
dec
dec
ret
jne
fwait
pop
imul
cdq
pop
(bad)
les
(bad)
inc
xchg
inc
loope
dec
call
imul
out
pop
sub
push
arpl
sbb
or
int3
inc
stos
inc
cmc
mov
add
lods
sbb
push
test
and
aaa
jl
cld
xchg
cld
(bad)
hlt
mov
mov
push
(bad)
popa
jb
(bad)
pop
retf
mov
ret
and
call
mov
xor
jns
out
movs
or
stos
shl
(bad)
out
push
(bad)
push
repnz
aam
sub
test
xor
out
mov
jns
arpl
add
(bad)
xchg
neg
mov
pusha
mov
sahf
or
cmps
jbe
jmp
inc
pop
adc
fisttp
ficomp
es
adc
out
in
into
mov
mov
push
outs
inc
push
loopne
dec
repnz
ins
xchg
cmps
enter
addr16
shl
sbb
jns
xor
mov
psraw
pop
shl
int
(bad)
and
push
push
push
jecxz
xchg
and
aas
leave
or
xchg
push
mov
or
and
mov
xor
adc
xchg
(bad)
ja
pop
mov
inc
push
xchg
aam
jge
lods
xchg
imul
ror
test
lea
fstp
pushf
inc
out
ret
(bad)
jne
fwait
adc
fmul
dec
xor
jle
adc
adc
sbb
jecxz
mov
add
pop
mov
popf
jo
mov
outs
jo
stos
push
mov
and
and
lock
jl
daa
cmp
inc
rcr
push
test
xor
inc
das
pop
sub
aam
into
sbb
loopne
mov
test
fbld
jns
shl
iret
jmp
push
mov
inc
xor
or
int3
and
push
in
xor
sub
lahf
outs
sbb
pop
fbld
ins
fld
scas
mul
addr16
inc
sub
stos
xor
adc
dec
push
push
les
push
daa
nop
or
mov
aam
jle
icebp
sar
ss
imul
xchg
mov
jnp
das
xchg
pop
(bad)
mov
inc
ret
rcr
in
push
and
ret
lock
cmp
(bad)
int3
jmp
leave
test
inc
call
ror
pop
lock
mov
push
lea
repz
sub
inc
popa
call
push
sub
cmps
and
jge
inc
adc
jae
inc
aam
pop
ins
cmp
enter
in
clc
jns
sub
jge
mov
inc
mov
xor
xchg
ret
push
mov
fwait
xchg
mov
cmps
fsub
icebp
add
pop
arpl
(bad)
xchg
sub
jmp
jo
scas
adc
imul
shr
icebp
sahf
push
inc
push
jp
mov
clc
jb
mov
test
push
jmp
outs
leave
lock
dec
jmp
clc
cld
jg
mov
add
xchg
xor
ins
lods
movs
jmp
test
pop
jge
outs
fs
dec
sbb
not
stos
aas
mov
mov
pop
jno
mov
test
inc
cmp
xchg
xchg
push
imul
jg
daa
lahf
xor
lds
inc
xor
stos
push
xchg
imul
cmp
sahf
bound
sbb
outs
lea
es
mov
fmul
inc
out
aad
arpl
inc
jecxz
arpl
mov
dec
pusha
popa
aas
sbb
data16
(bad)
in
movs
ficomp
popa
std
sub
cs
sub
push
scas
sub
sub
sub
mov
mov
or
cdq
movaps
mov
pop
sti
jmp
push
jecxz
sbb
das
rcl
cmp
jecxz
xchg
and
stos
mov
retf
in
(bad)
cmp
mov
sbb
std
scas
ja
fisttp
jle
retf
jmp
outs
dec
data16
sub
xchg
es
cmp
aas
mov
retf
retf
jbe
test
(bad)
push
and
cdq
repz
inc
xchg
mov
(bad)
xor
and
xlat
inc
iret
dec
inc
out
cmp
pop
(bad)
push
push
or
xchg
cwde
mov
lahf
jnp
daa
cmp
sti
enter
ret
leave
mov
cs
das
xor
add
nop
cmps
scas
cld
(bad)
(bad)
jge
(bad)
nop
pusha
inc
pop
mov
stos
mov
pop
dec
test
sub
outs
mov
(bad)
fdivr
inc
test
xchg
ret
std
jmp
pop
xchg
cmp
repnz
mov
push
mov
push
xor
nop
pop
fild
or
(bad)
pop
jg
int
imul
stc
cld
outs
mov
sar
push
call
lds
repnz
push
mov
cs
mov
mov
mov
pop
loope
out
xor
test
mov
mov
popa
dec
pop
pop
imul
add
fistp
mov
ins
(bad)
jmp
outs
lods
xlat
std
push
cmps
ret
aaa
loope
pushf
and
jl
sub
add
ficomp
aas
adc
dec
push
inc
imul
pop
(bad)
cmovnp
mov
adc
ss
sar
retf
repnz
in
jecxz
cmp
xor
push
add
outs
sbb
or
mov
fnstsw
mov
loopne
sbb
stos
cmps
or
lea
dec
data16
mov
xor
lods
jmp
vpsubusw
bound
inc
mov
and
icebp
hlt
mov
mov
mov
lods
jne
cmps
pop
bnd
or
aad
mov
mov
sub
mov
pop
dec
lods
mov
or
(bad)
jl
cmp
lods
fcomp
pop
imul
loop
adc
cmp
pop
push
push
cmp
or
icebp
scas
jmp
xor
and
cmp
xchg
ror
imul
pop
jmp
out
inc
fsub
mov
and
jle
pushf
loope
pusha
in
rcl
inc
cld
ror
dec
jmp
sbb
adc
mov
sti
push
xrelease
pop
movs
and
or
sub
fwait
mov
stos
jmp
xor
bound
outs
cmps
fwait
mov
addr16
inc
push
xchg
xchg
test
pop
and
imul
fist
aas
lock
sbb
rep
gs
cli
lahf
and
cmp
(bad)
(bad)
popa
repnz
pop
test
std
inc
and
xchg
cmc
cmp
inc
jns
aam
ja
xchg
dec
xchg
loopne
cmp
pop
pop
and
(bad)
(bad)
data16
sti
cmp
inc
scas
mov
ret
jle
inc
mov
cmp
jne
cmps
nop
push
mov
scas
adc
popa
jns
jae
je
js
and
inc
pop
and
movs
jnp
inc
cmp
mov
sbb
cwde
fsubr
xchg
jl
ret
jb
lds
cwde
push
stos
xor
or
test
fidivr
test
sahf
xor
idiv
sbb
mov
fisttp
add
sbb
sbb
cmp
mov
stos
sub
out
xor
or
cmp
rcl
mov
sbb
dec
mov
and
loope
scas
in
inc
and
or
dec
push
and
out
outs
dec
imul
fnsave
cmp
jae
jle
movs
hlt
pop
pop
dec
xor
sbb
mov
dec
lock
dec
out
repz
mov
or
loop
mov
adc
pusha
jmp
in
dec
sbb
data16
add
ss
or
xchg
sbb
xor
lea
mov
js
pop
or
inc
bound
shl
cwde
mov
scas
mov
mov
fcomp
pop
lahf
ins
clc
stos
fnsave
mov
rcl
(bad)
in
enter
test
pop
outs
add
dec
lahf
jno
push
xor
sub
mov
mov
gs
pop
pop
xor
movs
daa
lea
adc
aaa
push
push
std
mov
fs
inc
jmp
in
add
xchg
mov
inc
pop
push
dec
test
sub
sbb
neg
(bad)
xlat
mov
push
adc
ret
(bad)
xchg
test
push
mov
ret
xchg
sub
sbb
xor
xchg
jne
enter
ds
sub
xor
inc
fstp
xchg
mov
int3
ins
push
loope
push
aam
inc
(bad)
xchg
aam
retf
mov
pushf
mov
xor
cmc
fs
add
add
cmp
gs
push
ins
push
std
out
jmp
dec
dec
pop
test
loope
aad
xlat
jecxz
mov
aas
and
pop
int3
mov
scas
pusha
xchg
jle
pop
cmp
mov
mov
pop
push
mov
mov
inc
cmps
or
mov
xlat
push
cmp
test
add
fs
push
hlt
cmc
in
psllq
xlat
lea
lods
idiv
fistp
(bad)
cli
fisub
movs
gs
sub
pop
fild
ds
(bad)
arpl
lods
retf
mov
push
cli
pop
sub
out
inc
aad
adc
(bad)
retf
call
cmps
popf
cmc
mov
push
xor
ret
shr
gs
adc
jle
frstor
jae
movs
mov
jbe
sbb
dec
and
mov
add
dec
xchg
dec
(bad)
leave
loop
xor
jecxz
(bad)
sub
test
xor
loop
lods
xchg
imul
jae
stc
std
daa
dec
sti
sahf
outs
xchg
test
inc
inc
xor
sbb
(bad)
mov
lds
jae
outs
lds
inc
(bad)
push
test
inc
in
ret
push
inc
std
sbb
pop
sub
or
and
mov
cmp
inc
sahf
inc
mov
std
dec
mov
stos
xor
pop
dec
pop
fmul
mov
lahf
and
mov
lods
mov
ins
jecxz
xor
mov
stos
arpl
int3
cs
test
add
sub
call
mov
xchg
adc
(bad)
add
xchg
push
jne
pop
test
hlt
cmp
pushf
shr
es
dec
fwait
or
ss
retf
popf
push
and
in
cs
lods
or
lods
add
pop
push
mov
fs
mov
push
scas
ror
(bad)
jb
xchg
je
pop
mov
iret
ret
cmp
pop
push
stos
xchg
mov
lds
jno
mov
jnp
sub
and
mov
sti
pop
stos
jns
les
and
xchg
aam
dec
jmp
fdiv
xor
call
es
sub
sbb
mov
lods
mov
ret
popf
mov
scas
nop
inc
stc
(bad)
dec
xchg
adc
sbb
jbe
test
iret
mov
jmp
xor
and
clc
ins
sbb
lock
mov
fmul
mov
pop
adc
pop
mov
lahf
in
daa
das
add
in
aam
sub
fistp
mov
sub
and
and
fmul
sbb
push
ficom
mov
sbb
xchg
fnsave
fcomp
addr16
das
int3
sti
movs
stc
rcr
dec
sbb
(bad)
ret
push
retf
cmp
sub
xchg
and
loopne
sbb
inc
ins
mov
nop
nop
jae
scas
popf
rcl
mov
jno
xchg
xor
call
xor
push
out
cmps
dec
push
lock
sub
scas
and
or
xor
push
idiv
rcr
sub
sti
xor
mov
mov
add
mul
jbe
dec
cmp
ret
jge
sub
mov
into
sbb
mov
jo
pop
push
sti
bound
pop
mov
dec
pop
aaa
xor
inc
cmps
aad
xor
push
or
adc
sbb
(bad)
ins
push
lock
call
test
shl
imul
lea
(bad)
rcr
adc
jb
neg
sbb
add
in
aaa
xchg
out
sar
je
push
ins
inc
mov
shl
add
mov
aas
xchg
into
adc
imul
mov
jo
or
pop
cmp
out
mov
dec
(bad)
push
into
add
jecxz
bound
stc
adc
and
gs
aam
cdq
loopne
bound
mov
fcmove
xchg
aas
or
std
mov
sub
ins
pop
lahf
mov
xor
stc
or
mov
outs
or
dec
xchg
icebp
mov
mov
pop
push
xchg
(bad)
jae
pusha
daa
imul
dec
push
cmp
cmp
mov
test
inc
mov
shl
and
and
ins
push
mov
call
popf
adc
je
dec
xchg
push
and
loop
pop
xchg
and
inc
fcmove
das
or
test
inc
dec
cmp
ins
mov
pop
hlt
cmc
or
sbb
mov
inc
or
push
fs
cli
sahf
mov
adc
mov
xchg
pop
jmp
jecxz
jb
inc
push
fisttp
cmps
or
push
les
clc
cmp
xchg
sub
stc
scas
ficom
dec
mov
jge
jns
jns
rcl
sti
outs
xlat
mov
pop
fnsave
or
das
ins
into
xor
movs
inc
icebp
adc
ins
inc
jnp
dec
(bad)
pusha
pop
cmp
pop
push
(bad)
jmp
(bad)
sahf
mov
ret
outs
push
add
stos
cmp
lahf
mov
mov
dec
call
(bad)
sbb
inc
sbb
jge
(bad)
test
f2xm1
or
or
loopne
sbb
pop
jmp
xchg
pop
xor
cwde
or
aas
ret
pop
jnp
out
push
fnstenv
sub
xchg
mov
lock
ficomp
adc
cmp
pop
mov
ret
cmps
out
xlat
mov
dec
or
xchg
mov
repz
les
cmp
inc
cmp
(bad)
inc
xchg
ficom
xor
je
icebp
mov
pop
aad
fsubr
pop
(bad)
int
push
pop
and
shl
jnp
xor
adc
cmps
scas
cmps
xchg
jg
jg
wbinvd
dec
xor
sbb
stos
mov
jg
ret
dec
popf
stc
fld
icebp
or
(bad)
cmp
mov
xchg
xchg
jp
xor
xchg
pop
mov
(bad)
icebp
das
inc
and
fst
fst
in
scas
sub
in
push
imul
sti
mov
jg
jne
int3
pop
xor
xor
cs
xchg
cmp
sbb
push
jge
xchg
lea
(bad)
mov
popa
or
cmc
adc
mov
cmps
or
clc
push
jns
fcmovbe
sbb
lock
stos
inc
sar
mov
push
push
ror
leave
scas
sbb
dec
aas
jg
push
es
icebp
ins
adc
push
movs
xor
dec
jmp
xchg
out
shl
mov
xchg
aam
aaa
dec
push
ss
daa
xchg
(bad)
mov
push
and
addr16
mov
(bad)
mul
arpl
cmp
add
sbb
and
fistp
jmp
call
ss
jnp
jmp
scas
out
or
sub
adc
pop
jnp
in
mov
loopne
or
aaa
jbe
aam
mov
loope
jnp
ins
or
ror
mov
pushf
push
fs
push
or
outs
fimul
les
xor
push
(bad)
adc
xor
pop
addr16
xor
popa
mov
test
jle
psraw
loopne
into
out
out
stc
fisttp
ds
call
or
mov
pusha
adc
dec
enter
daa
push
xor
in
hlt
sbb
jecxz
push
xchg
pop
dec
clc
out
sbb
dec
in
cmp
adc
std
jmp
push
out
xlat
int3
arpl
pop
aam
inc
sti
jg
xor
fs
fidivr
pushf
push
sub
popf
xor
dec
(bad)
xor
iret
daa
arpl
sub
jecxz
or
cmp
push
xlat
jb
xchg
ret
ins
outs
(bad)
outs
push
inc
mov
cmp
das
push
push
dec
fwait
mov
or
ror
jecxz
pop
push
ja
rol
sbb
xor
cmp
les
add
adc
xor
mov
dec
jmp
lea
stos
xor
lods
adc
and
xor
xor
or
imul
cmps
sub
pop
cmp
and
xor
scas
or
xor
mov
scas
shl
mov
xchg
push
fist
jae
mov
mov
add
push
or
stos
and
rol
in
and
fwait
sbb
xor
mov
leave
pusha
cdq
fwait
or
dec
shl
repnz
jecxz
jmp
jo
dec
sbb
(bad)
hlt
mov
inc
rcl
add
adc
repz
lds
stc
mov
ret
xlat
mov
dec
mov
in
aad
cdq
dec
lods
sub
xacquire
and
inc
std
mov
nop
lods
mov
xor
fnstsw
das
cmp
(bad)
push
lea
iret
cld
add
sar
cmp
jle
sbb
mov
(bad)
jecxz
xor
mov
icebp
jno
push
adc
js
sbb
or
popf
scas
aam
xor
push
hlt
mov
(bad)
pop
loopne
inc
mov
push
dec
or
mov
mov
inc
dec
jnp
or
push
test
std
and
data16
ja
cmps
sahf
mov
inc
jmp
fiadd
add
and
jp
fcom
retf
and
retf
jp
(bad)
mov
add
(bad)
leave
std
jmp
or
pop
call
adc
add
xchg
or
xchg
push
into
adc
out
sub
fdiv
xor
out
dec
jmp
and
aad
retf
mov
mov
mov
push
jo
lahf
pushf
xchg
push
or
int3
and
out
leave
xchg
pop
push
enter
push
rol
pop
or
dec
xchg
cli
adc
cmp
aad
int3
pop
mov
add
data16
adc
mov
cs
pop
and
arpl
push
icebp
test
add
into
lods
iret
and
loopne
imul
adc
mov
arpl
jp
inc
xor
xor
and
mov
adc
push
dec
xor
ins
mov
pop
into
test
cmps
dec
mul
nop
mov
xor
inc
pop
mov
ror
adc
into
mov
aam
sahf
or
shl
jl
bound
fcom
jb
clc
mov
push
je
sub
jg
in
and
pop
ja
jmp
xchg
imul
lods
pop
vmovdqu
lods
pop
mov
inc
stc
push
mov
pop
fs
sub
into
ja
dec
or
sbb
xor
movs
shl
scas
and
push
push
aas
mov
push
out
es
lods
js
(bad)
inc
mov
pop
leave
movs
add
or
cmp
inc
jge
push
in
mov
push
jns
xchg
xor
and
inc
jecxz
cmps
xchg
mov
adc
add
pop
sub
ficom
into
jae
jl
cmp
sub
test
gs
stos
and
ins
fnsave
mov
push
pusha
inc
je
fld
in
shl
icebp
ins
je
pop
cmp
add
or
sub
mov
sub
aaa
add
xchg
daa
sbb
test
add
in
jmp
xchg
sub
dec
add
adc
mov
mov
cmp
xor
ds
inc
inc
add
dec
jle
jmp
(bad)
push
and
(bad)
loop
ret
repz
shl
das
sar
mov
retf
jne
fdivr
lods
jmp
pushf
pop
jbe
cdq
or
mov
lods
not
cmps
das
popa
adc
xor
xchg
xchg
xor
or
scas
ss
xor
xchg
sahf
rcl
enter
jnp
enter
inc
inc
mov
mov
stos
mov
xor
xchg
inc
scas
lock
scas
inc
retf
sti
xchg
push
and
cmp
add
add
jmp
nop
leave
movs
jb
mov
sbb
repnz
movs
xor
jmp
adc
adc
add
mov
outs
iret
inc
adc
mov
pop
lods
jge
outs
and
lahf
sbb
adc
loopne
out
xor
ret
sar
fst
inc
xor
inc
adc
sti
lods
inc
and
aam
ror
in
mov
movs
dec
fisub
out
cwde
push
adc
xchg
mov
xchg
out
pop
dec
les
bound
ret
and
call
add
test
and
jle
sbb
dec
fs
in
jb
and
dec
inc
pop
clc
mov
jae
dec
sub
dec
fisttp
add
add
jmp
aaa
cdq
call
sahf
imul
sub
mov
jmp
test
xchg
mov
cmps
dec
aad
or
sub
daa
add
dec
loop
ins
dec
jbe
outs
dec
pop
movs
or
leave
xor
les
es
sar
lea
or
jbe
test
sub
pop
mov
adc
jns
xor
outs
mov
dec
jb
push
add
mov
stos
(bad)
mov
mov
dec
jge
dec
sub
mov
push
iret
mov
mov
and
or
mov
das
or
cmp
scas
sbb
fidivr
into
dec
jg
jl
xchg
xor
mov
cdq
mov
xor
xor
xchg
cmp
iret
loopne
sub
inc
scas
retf
pop
mov
xlat
mov
shr
test
loop
add
xlat
sar
test
pop
clc
jb
cmp
xor
fs
push
inc
sbb
or
mov
add
mov
pop
aas
mov
xchg
call
cmp
push
stos
push
in
sub
arpl
call
lods
popf
or
mov
mov
sbb
pop
hlt
sub
fbld
cmp
cmp
sahf
mov
neg
jmp
movs
lods
loop
mov
(bad)
sbb
int3
xchg
xchg
dec
jno
pop
jns
pop
or
cli
pop
or
mov
fstp
hlt
dec
inc
dec
dec
mov
cli
lds
mov
pop
(bad)
mov
icebp
sub
movs
pop
pop
call
mov
or
jmp
or
push
scas
or
add
jmp
and
in
add
out
fisttp
retf
shr
sub
adc
sub
fcomp
add
sub
cmp
scas
cld
xor
in
jecxz
jnp
ret
loop
mov
mov
(bad)
pusha
inc
push
imul
xchg
dec
aaa
xor
fld
pop
mov
sbb
pop
push
pop
cmp
add
shl
in
loope
inc
sbb
or
pop
dec
arpl
xchg
mov
(bad)
fist
xlat
sub
enter
jl
(bad)
outs
clc
xchg
add
mov
xchg
sbb
test
push
xor
addr16
or
data16
add
push
lods
movs
xor
mov
add
es
out
sbb
sbb
inc
or
cmp
cli
call
pop
in
pusha
jae
add
jne
xchg
imul
sbb
mov
repnz
cs
push
sbb
mov
pop
mov
out
mov
adc
sub
inc
ficom
mov
call
sbb
mov
pop
push
sbb
adc
or
mov
popf
pop
je
shr
test
sbb
arpl
retf
sbb
aam
sbb
pop
(bad)
cmp
out
inc
cmps
dec
int3
out
or
cmps
push
or
jg
mov
inc
add
aam
or
sbb
ja
pop
mov
mov
xchg
push
loop
cs
aam
fs
sahf
call
jmp
ins
jge
mov
cmps
outs
adc
mov
lock
or
ror
mov
outs
cld
mov
fnop
or
call
sbb
mov
ins
in
in
in
hlt
sar
mov
mov
pusha
push
add
pop
add
pop
out
jp
movs
int3
shl
or
movs
retf
cmps
dec
adc
dec
pop
push
adc
mov
stos
push
adc
mov
jecxz
adc
push
icebp
pop
aad
and
shl
call
xor
enter
mov
jmp
test
cld
sbb
cs
leave
jl
dec
dec
cmp
sbb
mov
cmp
stc
ja
(bad)
in
inc
fs
jmp
or
pop
ja
in
xlat
pop
xor
sti
sahf
xchg
or
push
test
fadd
enter
and
loope
lods
xchg
popf
aad
dec
pop
push
pop
push
cwde
(bad)
pop
jb
hlt
lods
jle
mov
and
cmp
mov
cld
mov
mov
fistp
fwait
cdq
mov
cmp
push
int
iret
or
das
arpl
mov
dec
lds
add
aas
call
aam
(bad)
mov
repnz
(bad)
push
and
xchg
adc
lock
movs
in
sbb
adc
out
or
or
mov
sub
loop
test
retf
mov
sbb
or
mov
cmp
ins
or
fcomp
mov
mov
add
cmps
(bad)
sbb
xchg
sbb
push
pop
xor
ret
loope
gs
rcr
adc
pusha
jmp
pop
push
jo
test
push
sbb
ss
jl
ret
pop
fist
cmp
stos
sub
div
cld
fbld
xor
add
(bad)
fadd
inc
out
mov
pop
adc
or
out
dec
push
sbb
test
push
sub
out
movs
ins
(bad)
mov
or
outs
fnop
call
lods
mov
(bad)
jp
and
or
(bad)
mov
frstor
rcl
cmps
out
adc
daa
shl
pushf
inc
int
xlat
dec
jns
(bad)
fwait
cmp
loope
pop
icebp
dec
xor
push
movs
ds
je
(bad)
jne
pop
adc
inc
shl
fist
jnp
ja
xor
ins
dec
dec
cmc
faddp
lds
mov
(bad)
jecxz
sub
xor
ss
lahf
sti
and
jns
aas
jns
pop
stos
movs
call
cs
mov
gs
fdivr
mov
aaa
push
fsubr
lods
cmp
xchg
pop
ja
jns
and
xchg
push
popf
sbb
(bad)
xor
push
(bad)
arpl
test
push
jge
or
pushf
mov
inc
mov
arpl
test
cld
popf
cmp
pop
bound
enter
cmp
pop
inc
pop
sbb
stos
rcr
cmp
cmc
xchg
push
cdq
dec
dec
push
pop
push
xor
xlat
or
cmc
xor
jmp
jns
icebp
mov
xchg
into
daa
stos
add
push
popa
jle
fsub
pop
ins
bound
dec
mov
jge
(bad)
loope
adc
sub
rcl
add
lods
jae
hlt
loop
ret
push
xchg
jle
and
outs
in
mov
push
add
or
sub
out
stc
es
leave
rol
adc
add
or
sub
cmp
in
test
test
ins
(bad)
jp
arpl
(bad)
jbe
cli
shr
push
jmp
xchg
lahf
xlat
pop
stos
sub
add
data16
dec
jae
cmp
dec
stc
gs
scas
(bad)
mov
dec
dec
xor
sub
inc
int3
test
mov
les
cdq
pop
cmps
cmc
mov
(bad)
ja
add
je
mov
mov
loop
mov
(bad)
cli
mov
or
adc
(bad)
fsubr
sub
loopne
cwde
push
jmp
add
les
adc
or
sub
dec
sub
or
cmp
add
push
mov
imul
(bad)
ret
aam
mov
int3
stos
jae
ja
cdq
inc
into
daa
mov
(bad)
scas
cmp
mov
aad
mov
jmp
xor
das
fcmovb
aad
fidiv
cmp
xchg
sahf
rcr
inc
cmc
xor
dec
sbb
pop
fdivrp
in
das
pop
test
mov
fldenv
mov
test
jno
sbb
push
sub
test
cmps
test
stc
movs
push
sbb
in
mov
or
and
adc
pop
fnstcw
(bad)
and
sar
es
mov
pop
(bad)
pop
push
cmps
dec
loope
ja
mov
ror
mov
push
xchg
fnstsw
sbb
mov
std
imul
xlat
dec
jne
xor
push
pop
imul
mov
xchg
mov
test
mov
inc
sub
in
xor
ror
imul
inc
lods
gs
pop
jo
fistp
jo
push
jmp
nop
(bad)
popa
mov
outs
fs
pop
ret
fiadd
js
add
cmps
add
into
(bad)
mov
mov
push
xchg
mov
shr
test
pop
push
xor
sbb
lds
pop
jo
or
jp
cwde
loop
mov
(bad)
out
sub
movs
(bad)
pop
and
jns
int
mov
or
bound
pop
mov
mov
lds
xor
push
pop
adc
dec
shr
jge
xor
mov
in
test
add
bt
add
jbe
loop
mov
jecxz
mov
dec
les
adc
mov
add
dec
mov
inc
stc
mov
jo
fld
cs
fmul
adc
fwait
stos
sub
loopne
or
pop
(bad)
mov
mov
scas
and
clc
mov
add
jmp
leave
push
int3
pop
sub
mov
in
test
out
cmp
nop
rcr
ds
je
dec
xor
cmps
add
out
adc
add
xchg
add
mov
icebp
dec
sar
iret
pop
push
dec
in
icebp
adc
shr
(bad)
mov
xchg
shr
xor
popf
mov
or
(bad)
nop
stc
int3
ror
data16
and
mov
cmc
mov
stc
and
jo
xor
bound
out
in
inc
jnp
sub
jl
aas
or
xchg
fnstsw
and
fwait
adc
mov
adc
or
leave
dec
gs
cmp
or
add
push
add
inc
shr
cmps
mov
jns
xchg
mov
mov
xchg
inc
mov
pop
adc
enter
adc
test
out
vhsubps
(bad)
push
loope
jecxz
mov
cmp
aad
fisttp
dec
xchg
lock
out
mov
xlat
jmp
enter
fwait
(bad)
(bad)
mov
jns
mov
sub
xchg
mov
jo
(bad)
loop
and
pop
add
shl
pushf
push
add
imul
sbb
outs
or
fistp
aas
dec
scas
or
or
pop
mov
int3
add
inc
xor
inc
sub
push
sbb
outs
sub
jbe
pop
cs
fidiv
lahf
and
add
jo
and
xchg
adc
das
stos
jno
(bad)
sbb
mov
xchg
mov
shl
sub
enter
push
out
mov
retf
fsub
popa
cmps
rcr
bound
stc
lahf
data16
aaa
ja
mov
sahf
je
xor
or
or
hlt
imul
inc
aad
mov
stc
xor
sub
out
or
add
js
adc
sbb
inc
scas
pop
sbb
daa
fwait
and
jp
ret
xor
ret
or
push
jmp
stc
cdq
xchg
or
dec
and
das
jb
lea
or
jmp
dec
call
and
cmp
(bad)
mov
out
cli
sahf
int
mov
lock
xor
fs
rcl
test
xor
mov
cwde
daa
imul
imul
(bad)
(bad)
or
shl
jg
mov
xor
add
lea
mov
sti
jnp
jbe
stos
xor
xor
push
push
xchg
inc
lods
pop
cmp
cmp
cmps
push
jb
cmp
xchg
sub
daa
fsub
(bad)
mov
or
lds
cmp
mov
test
jno
imul
xchg
xchg
out
add
sub
iret
and
outs
sub
push
mul
fisubr
pusha
shr
sahf
movs
dec
ret
aam
outs
std
dec
jno
and
fnstsw
cmc
mov
or
lods
xchg
in
into
in
xor
dec
popf
loopne
mov
mov
(bad)
retf
scas
scas
out
in
pusha
pop
enter
inc
pusha
mov
out
add
dec
dec
sar
fimul
mov
mov
loope
push
mov
sbb
dec
jg
mov
loope
inc
inc
fild
(bad)
pop
into
sub
and
cmp
rol
sbb
cld
push
add
pop
sar
fwait
pushf
out
cmp
dec
shl
int
pusha
cmps
sar
push
aaa
sti
jg
or
ret
test
imul
add
or
adc
stc
fistp
inc
cld
xor
std
ins
shl
mov
test
mov
movs
nop
dec
or
add
shl
push
push
or
sbb
pop
xor
rol
sti
cmp
movs
sub
xchg
jle
retf
pop
shl
aad
fisub
pusha
pushf
ins
leave
pop
icebp
and
movs
push
fdivr
xor
push
xor
shl
push
cmc
mov
mov
jae
jp
mov
stc
sbb
add
repz
xor
mov
call
fadd
lds
xchg
int
xor
(bad)
mov
sbb
in
pop
mov
loopne
sti
add
push
dec
lock
dec
mov
cmp
mov
ror
lds
test
or
xchg
and
daa
push
loope
les
stc
arpl
cmp
xor
std
(bad)
sub
les
add
pop
rol
stos
loop
jb
push
out
fcmovb
push
div
mov
call
rcl
push
xor
cmc
pop
mov
leave
popa
mov
mov
fbld
mov
test
repnz
xor
gs
or
fimul
pop
sub
mov
popf
data16
and
shr
pop
cmp
push
clc
lods
or
enter
lock
std
sbb
in
mov
jae
fs
jno
push
push
ror
(bad)
sar
repz
in
dec
movs
push
jno
repnz
push
idiv
iret
movs
dec
bound
xchg
xor
mov
aad
cmps
ret
daa
sbb
dec
icebp
hlt
mov
imul
test
inc
fcom
ret
sbb
jle
lods
inc
push
test
imul
mov
inc
adc
add
mov
(bad)
fdivr
loop
shl
mov
fadd
sbb
sti
sbb
dec
call
(bad)
test
stos
xchg
data16
mov
sbb
stos
popf
jp
dec
out
in
shr
psadbw
lods
or
or
mov
cwde
fild
push
fcom
or
or
mov
or
in
retf
(bad)
cmp
jl
imul
sbb
mov
and
cmp
aas
mov
cs
sbb
lds
repz
mov
mov
aaa
arpl
inc
or
sbb
adc
pop
loop
aad
dec
mov
aam
add
call
mov
pusha
lds
(bad)
mov
(bad)
push
movs
sbb
mov
(bad)
fnsave
push
in
mov
cmp
fs
loopne
out
cmp
test
pop
jno
cmc
or
push
cmp
fbld
push
scas
add
inc
out
pusha
(bad)
mov
xor
popf
inc
mov
in
fs
jb
dec
(bad)
lods
and
(bad)
ja
ret
cmp
inc
clc
outs
scas
stos
xchg
or
(bad)
idiv
dec
shr
unpcklps
push
es
add
test
or
out
pop
push
scas
pop
sbb
add
sub
cmps
loop
and
dec
add
push
pop
scas
dec
(bad)
fcomp
data16
inc
aas
je
jge
jmp
pop
cli
push
lods
cmp
jae
sub
or
int
and
js
repz
ds
or
leave
cmp
popa
mov
movs
repnz
ins
mov
sahf
sub
js
mov
dec
popaw
lea
jg
fs
mov
pop
mov
push
sbb
imul
push
xchg
inc
mov
dec
ins
push
in
sub
xchg
into
repnz
mov
sub
cmc
into
xchg
lock
add
out
test
dec
daa
out
fs
mov
mov
push
jne
movs
fisttp
ins
pop
es
jbe
repnz
aam
stos
in
xor
rol
in
scas
adc
rol
mov
stos
or
mov
js
loopne
imul
add
or
(bad)
sti
out
(bad)
sbb
mov
in
sub
clc
les
pop
cmc
lods
(bad)
cmps
mov
sbb
loop
arpl
stos
sub
mov
push
push
dec
imul
leave
or
pop
ja
pop
adc
rcl
ret
mov
mov
mov
loop
call
mov
ret
ret
retf
scas
jno
mov
sub
and
data16
cli
push
(bad)
fiadd
(bad)
cmp
dec
inc
lds
and
push
ins
mov
loopne
and
fdiv
adc
ins
retf
and
outs
das
in
loopne
les
dec
push
jmp
mov
mov
in
ins
inc
mov
fs
jne
cli
(bad)
mov
ins
imul
mov
out
daa
cli
jnp
out
jbe
into
sbb
mov
stc
ret
test
sub
push
ficom
adc
jmp
retf
nop
shl
outs
fbstp
and
scas
jmp
(bad)
jl
or
(bad)
mov
data16
push
mov
adc
repz
pop
jne
cmp
and
and
adc
cdq
fldenv
ins
fcmove
pop
ins
xchg
jne
pop
inc
stos
xor
enter
cmp
xor
popa
mov
shr
push
call
out
cmp
push
or
sar
(bad)
fcom
int
gs
call
add
stos
popa
sbb
mov
and
cmp
push
leave
and
popf
cmp
pushf
shr
aaa
in
fisub
lods
iret
add
stos
jne
aaa
lahf
pop
add
jb
shl
cmc
mov
jg
mov
cwde
xchg
xor
fdiv
dec
inc
cdq
ins
out
pop
dec
xchg
adc
or
and
test
mov
sti
push
adc
pushw
jnp
repz
ret
and
in
test
jecxz
cmps
dec
pusha
ss
push
pop
stos
xchg
(bad)
dec
adc
dec
xchg
xor
inc
mov
ja
test
cmp
jle
add
out
cmp
shl
pop
xor
cdq
dec
cld
imul
mov
mov
or
jno
adc
xchg
xor
in
jno
sbb
rol
out
or
arpl
push
in
sar
and
cld
dec
sub
ret
pusha
addr16
arpl
dec
cmp
add
stos
adc
imul
gs
call
retf
(bad)
pop
sbb
test
stos
and
and
cmp
in
push
sub
or
repnz
fsub
repnz
mov
in
mov
fstp
fs
inc
pop
jbe
cmps
add
sti
mov
mov
cmps
xchg
das
jg
mov
xor
repz
cmp
push
test
adc
jo
les
dec
pop
test
das
mov
sbb
imul
pop
inc
repnz
scas
inc
adc
mov
mov
or
popf
jmp
mov
pop
add
dec
sub
sbb
mov
retf
cld
call
push
mov
inc
push
xor
test
scas
pop
xor
xchg
sbb
xchg
stos
add
push
fistp
cwde
shl
pop
cmp
(bad)
lock
leave
or
ret
and
mov
sub
xlat
sbb
dec
mov
mov
mov
dec
out
stos
and
xor
mov
adc
sbb
imul
inc
std
inc
mov
int
popa
fisubr
inc
sbb
dec
(bad)
inc
jle
sbb
mov
ret
stos
add
xchg
outs
push
sub
sub
xor
ret
adc
fwait
les
push
push
ins
cwde
pushf
adc
jns
daa
xor
mov
cmps
leave
inc
jle
fst
movs
and
xlat
pop
dec
leave
popf
adc
lahf
std
jb
lds
and
jno
mov
fstp
jg
stos
push
pop
in
loopne
or
jae
jmp
cwde
cdq
sbb
punpckhwd
retfw
pop
ss
outs
cs
add
lods
sar
cwde
adc
test
mov
daa
mov
mov
ins
mov
push
out
scas
and
or
rcr
and
inc
sar
mov
in
sbb
loope
xchg
sbb
sbb
ror
fdivr
and
pop
dec
scas
push
imul
inc
mov
int
retf
mov
inc
mov
dec
out
mov
and
sbb
jmp
dec
mov
ror
popa
xchg
push
icebp
mov
daa
out
inc
mov
cmp
scas
js
add
xchg
movs
inc
fistp
ret
lds
repnz
clc
mov
sub
ja
sbb
and
jno
sbb
mov
or
in
les
int3
rcl
rcr
shl
mov
xchg
setno
fs
or
mov
jecxz
leave
xor
push
(bad)
adc
push
xor
pop
test
mov
and
test
push
cs
lods
and
sub
add
jae
xchg
jl
stos
lahf
call
mov
or
inc
sbb
retf
and
xor
and
and
movs
or
jge
or
inc
cmp
rol
inc
mov
jmp
dec
jp
ja
nop
mov
pushf
lods
jns
xchg
pop
xchg
add
mov
das
adc
mov
xchg
cs
and
sbb
scas
jb
fisttp
push
ja
pop
repnz
test
mov
jne
pop
sub
jle
in
or
push
xlat
xor
xor
adc
mov
jge
inc
or
mov
outs
jmp
cs
test
xor
fmul
rcl
xchg
std
sahf
mov
shr
(bad)
jae
inc
or
add
into
nop
jl
push
hlt
jl
jno
push
das
imul
xchg
jl
adc
sub
shl
cmp
or
div
sub
cli
mov
sbb
leave
sub
mov
mov
cmovo
dec
jmp
push
mov
jmp
dec
inc
in
and
aad
xchg
sbb
and
mov
or
ins
pop
mov
fsub
in
pop
cmc
sbb
aad
out
hlt
loop
sub
stos
enter
aas
shr
adc
cmp
jae
pop
les
mov
ja
repz
sbb
dec
mov
arpl
popf
int3
sub
lea
mov
ret
push
aas
push
js
repnz
ds
mov
adc
cwde
sbb
in
sub
xor
ds
in
(bad)
jmp
nop
test
icebp
adc
popf
ja
int
pop
repz
lahf
xchg
or
int
stc
test
xor
push
adc
in
lahf
dec
dec
and
sbb
dec
pop
les
xchg
mov
mov
mov
inc
test
cld
(bad)
call
mov
int3
femms
fsub
mov
ret
push
push
cmp
(bad)
out
sahf
lods
inc
movs
out
add
or
popa
pop
imul
shl
loope
gs
fimul
(bad)
pusha
fistp
(bad)
aas
inc
xchg
cmp
add
enter
std
or
(bad)
(bad)
pushf
lahf
push
push
jne
sbb
jns
mov
les
fsub
lock
mov
jecxz
push
pop
push
retf
cwde
stos
aad
pop
and
enter
push
stos
and
fdivr
sub
mov
push
jmp
jno
sub
imul
dec
jne
sub
mov
cmps
jae
(bad)
(bad)
(bad)
out
pop
pop
adc
popa
mov
inc
in
sub
push
ror
jp
or
fwait
sbb
lahf
test
cmp
out
mov
psrld
mov
push
mul
fwait
xor
(bad)
(bad)
push
mov
add
std
imul
or
mov
push
jo
dec
push
xchg
rcl
pop
fst
shl
jns
push
(bad)
cmps
mov
jg
xor
pop
or
dec
repnz
inc
push
sub
in
add
sbb
jg
das
(bad)
(bad)
fidiv
and
arpl
scas
xchg
and
xor
(bad)
ins
and
adc
aas
jo
dec
pop
stc
mov
fist
cmp
cli
mov
jmp
push
dec
aam
push
lods
jno
lock
es
push
repnz
stos
adc
lods
ins
inc
push
sar
idiv
cmp
push
or
out
xchg
jp
(bad)
call
ins
and
push
push
xor
xchg
lods
jg
fmul
sbb
mov
into
sub
and
ror
pusha
pop
hlt
hlt
pop
sar
xchg
gs
sbb
pop
adc
int3
ja
lods
inc
fisubr
pushf
mov
test
mov
xchg
in
push
fnstcw
outs
jmp
ret
test
call
pop
(bad)
int
add
call
inc
les
fild
add
sbb
pop
imul
sbb
cmp
sub
push
es
cmps
push
xchg
inc
shl
push
in
in
fmul
jno
adc
dec
push
jb
xor
loopne
cmp
std
ret
scas
cmp
test
jb
add
jmp
pop
sbb
lds
sbb
mov
int
das
jmp
jmp
aad
pop
adc
fiadd
mov
dec
cmc
stc
cmp
popa
cmp
cmp
pop
cmps
lahf
push
(bad)
mul
cmp
or
inc
mov
aam
inc
and
inc
mov
xchg
push
xchg
or
loope
jns
jle
fmul
or
jae
add
out
outs
fnstsw
inc
xchg
scas
fst
into
adc
sub
js
inc
mov
lods
enter
mov
xchg
mov
xlat
xor
test
mov
stos
int
cmp
jmp
xchg
jge
out
pop
mov
and
stos
jge
sbb
ss
adc
imul
jne
push
cmc
pop
das
fnstenv
in
ds
int
mov
adc
push
jbe
cmp
cdq
xor
(bad)
cmp
scas
push
sbb
sub
xchg
aaa
mov
xchg
loopne
fcmovnb
mov
das
pusha
lods
aam
mov
jne
scas
inc
mov
mov
out
mov
mov
int3
adc
(bad)
fnstcw
push
adc
loope
inc
cmps
mov
mov
jge
rcr
sub
std
shl
(bad)
cmps
push
jmp
jmp
mov
cmp
xor
outs
ja
imul
inc
ds
and
bound
cmp
pop
mov
ss
or
add
cdq
xchg
and
xchg
inc
in
sbb
push
push
out
push
scas
popa
stc
(bad)
jae
push
int3
aaa
jge
push
push
aaa
xlat
repnz
movs
add
or
pop
inc
inc
out
in
xchg
sbb
dec
test
mov
push
xchg
out
xor
mov
inc
je
(bad)
repz
stos
fs
popf
sbb
and
stc
inc
dec
pop
and
fnsave
cli
stc
add
in
sti
fmul
mov
add
push
inc
lods
sub
iret
outs
test
xchg
inc
push
add
loopne
inc
lock
cmc
inc
or
mov
mov
sbb
sbb
xor
or
jo
mov
push
data16
out
mov
ds
vxorpd
mov
fsub
jg
jb
jo
je
mov
push
ins
dec
sbb
pop
(bad)
test
int3
push
jne
mov
xlat
push
mov
cmp
push
jmp
add
and
std
and
xor
cdq
mov
xchg
pusha
ret
mov
adc
add
xor
jle
in
xor
sbb
gs
jae
mov
jle
std
sbb
push
sbb
(bad)
adc
(bad)
loope
dec
stc
sub
mov
mov
sbb
push
push
fs
ins
xchg
ror
sbb
jle
aam
rcr
in
push
gs
and
sub
jmp
cld
stos
sub
stos
mov
xchg
jp
pop
leave
push
mov
sbb
jb
cmp
fld
imul
stos
xchg
int3
imul
loope
add
in
jl
loopne
rol
gs
stc
lea
mov
fist
adc
ins
(bad)
dec
into
jp
leave
mov
inc
cmp
(bad)
in
mov
xchg
sbb
and
cld
jmp
add
xor
(bad)
(bad)
stc
mov
cmps
sub
or
shr
jno
sbb
loopne
lds
inc
cmp
or
mov
sub
inc
sub
mov
or
dec
and
lods
sbb
ret
ins
aad
fst
arpl
loopne
enter
xor
cmps
fdiv
xchg
inc
loope
mov
fild
daa
jae
and
mov
mov
(bad)
jg
dec
cmp
retf
pop
lea
jmp
adc
mov
stos
mov
add
push
xor
pusha
out
cmp
cmp
sahf
jg
mov
add
stos
push
aad
ffreep
rcl
rcr
jns
adc
les
cmp
mov
or
icebp
mov
xchg
or
xchg
mov
test
sbb
pop
aad
enter
sub
mov
jns
xchg
test
not
cmp
out
mov
xor
sahf
fdivp
imul
retf
test
cmp
pop
jl
mov
pushf
nop
mov
and
mov
pop
lods
test
hlt
in
loop
fsubr
inc
repz
in
mov
int3
jnp
mov
popa
je
shl
mov
sub
cmp
movs
clc
rol
enter
mov
push
jns
test
or
ds
xchg
fwait
imul
cmps
lods
xchg
xor
or
or
mov
sub
aam
sbb
adc
jl
inc
fistp
movs
adc
add
add
sti
pushf
and
hlt
loope
jbe
std
stos
mov
fdiv
dec
(bad)
(bad)
cmp
int
dec
sti
and
fisubr
push
gs
mov
inc
pop
xchg
jl
xchg
test
push
xchg
and
and
(bad)
cmps
ficom
mov
adc
out
mov
sbb
sbb
mov
mov
cld
sti
repnz
push
mov
push
mov
jl
dec
fs
int3
push
dec
xor
pavgb
je
sti
cdq
jg
ja
jecxz
xlat
(bad)
outs
dec
mov
test
sub
inc
push
adc
pop
mov
sub
jmp
xchg
rol
mov
cmp
outs
mov
je
inc
pusha
xchg
out
dec
cmps
lock
or
push
mov
ja
out
addr16
mov
adc
shl
inc
iret
cmp
jo
fs
ins
pop
pop
xor
ss
jnp
test
adc
pop
mov
retf
ins
pop
cmp
cmps
call
call
mov
inc
inc
cmp
fisttp
and
xor
push
xchg
pusha
aam
call
mov
dec
fdiv
mov
and
fld
ret
mov
(bad)
sub
xchg
ror
or
sub
xor
push
mov
sub
lds
dec
dec
imul
xor
and
call
adc
not
jno
add
mov
push
add
jno
inc
fcmovbe
iret
mov
in
mov
cdq
popf
push
mov
fdivr
call
imul
cld
push
push
call
xor
call
and
jge
cs
cmps
or
retf
xlat
add
push
push
xchg
mov
and
shr
jne
pop
mov
push
cmp
push
xchg
push
ret
or
fisttp
xchg
mov
jmp
add
add
mov
push
test
pop
jp
hlt
pop
push
dec
cmp
shl
cwde
pop
sbb
outs
in
pop
xchg
xor
scas
pushf
mov
add
dec
int
bound
lds
push
cdq
mov
ss
jnp
pop
mov
inc
dec
movs
cdq
and
rcl
add
ficom
sub
mov
sub
push
mov
mov
mov
adc
sbb
sbb
mov
arpl
sbb
push
idiv
sbb
std
sti
fbstp
mov
push
jmp
dec
and
loope
pop
pop
rcr
retf
push
imul
mov
xchg
stc
retf
bound
cmp
loope
ret
xchg
jle
push
xlat
sub
inc
imul
inc
push
push
mov
psubd
or
push
adc
add
push
sub
call
out
lds
or
push
retf
adc
adc
aam
sub
pop
xchg
loopne
push
(bad)
mov
ins
pop
(bad)
or
cmp
jmp
xchg
adc
(bad)
clc
sub
lahf
addr16
and
and
test
aaa
fldl2e
pop
cli
scas
test
xor
push
call
xchg
and
pop
jo
jbe
imul
pop
pusha
jbe
shr
fsubr
mov
push
xchg
adc
add
cmp
adc
ja
mov
in
shrd
cmps
mov
test
xor
les
(bad)
enter
jg
sub
xor
cmp
sbb
dec
cli
pop
mov
(bad)
inc
and
daa
push
push
cmp
xor
push
jno
jmp
rol
std
sti
mov
mov
push
mov
out
pop
add
xor
hlt
dec
fwait
lods
gs
shl
push
xchg
xor
and
sbb
andnps
jbe
sub
mov
or
jle
or
add
xchg
mov
mov
and
pop
pushf
enter
inc
js
fdiv
loop
sbb
cmc
jbe
jbe
fdiv
jnp
add
inc
scas
shl
or
or
outs
into
xchg
popf
add
outs
inc
stos
dec
inc
in
dec
in
cmp
adc
mov
arpl
push
ins
(bad)
sbb
(bad)
mul
jb
int3
mov
inc
or
stos
outs
mov
cmps
lods
sub
dec
push
cmc
icebp
imul
sub
add
dec
mov
push
inc
jmp
dec
xchg
sub
dec
mov
push
ja
loopne
pop
fs
xchg
mov
in
and
xchg
add
mov
cmps
(bad)
pop
sub
movs
sbb
adc
in
rol
nop
leave
addr16
cmp
(bad)
scas
out
cmp
xor
test
fsubr
bound
mov
fnstcw
(bad)
leave
mov
ds
pop
(bad)
xor
movs
fisubr
in
test
loope
cmp
cwde
jo
js
icebp
pop
sub
push
mov
jp
lds
xchg
ins
jb
arpl
rcr
gs
in
mov
int
cmp
mov
mov
inc
enter
xor
lea
das
mov
xchg
xor
xor
adc
mov
shl
scas
ins
adc
(bad)
mov
jl
add
push
xchg
aas
mov
inc
adc
mov
push
hlt
in
inc
dec
ins
jecxz
push
mov
dec
loop
rol
adc
sub
test
fucomip
mov
push
push
mov
inc
cmp
cwde
not
mov
sbb
and
fidiv
mov
mov
loop
data16
pusha
inc
mov
sbb
scas
fstp
fimul
adc
pop
inc
cmp
(bad)
xor
xor
imul
cmp
out
jge
leave
jl
xchg
or
pop
hlt
pop
xlat
jbe
push
xor
fsin
pop
cwde
ja
push
or
xor
push
arpl
xor
fsubr
mov
add
sub
call
xchg
hlt
rcl
add
adc
scas
adc
mov
leave
jge
clc
sti
dec
mov
icebp
mov
test
jo
sbb
or
mov
mov
and
call
arpl
xchg
adc
aas
pop
mov
dec
pop
mov
dec
(bad)
fbld
mov
sbb
add
dec
xchg
sbb
xchg
sub
mov
sub
xor
popf
cmp
imul
and
rol
cmp
stos
fst
mov
sbb
movs
repz
sub
jae
jecxz
xlat
inc
cmp
pop
jecxz
call
sbb
xchg
jmp
jns
add
test
jecxz
xchg
out
mov
lock
jne
adc
les
and
mov
jnp
or
daa
adc
mov
sti
rcl
and
icebp
xchg
xchg
lock
nop
xchg
pop
mov
jnp
or
(bad)
enter
inc
lock
scas
and
dec
je
jb
sbb
in
ret
stos
and
test
and
out
rol
mov
add
pop
iret
dec
scas
(bad)
into
stc
xor
inc
je
pop
call
inc
dec
xor
mov
xchg
std
addr16
jo
and
aad
lds
lods
cdq
imul
cmps
add
xchg
test
addr16
cwde
ds
and
pop
movs
push
inc
ret
pop
shl
or
add
sub
xor
xchg
adc
add
pop
(bad)
into
jp
inc
ja
fcomp
fisub
icebp
jmp
ins
imul
xchg
add
test
lds
pop
xchg
adc
add
shr
rol
sub
(bad)
mov
cdq
aas
inc
and
or
popa
pop
jnp
xor
dec
lods
sub
mov
pop
sbb
adc
stos
cli
shl
bound
jno
mov
sbb
pop
add
jb
popf
mov
mov
inc
fs
and
dec
or
adc
xchg
and
sbb
cs
movs
mov
pop
add
and
mov
add
fild
push
inc
push
shr
inc
cmp
cdq
inc
enter
jno
jb
es
pusha
inc
sbb
sub
dec
pop
cmp
and
sbb
mov
xchg
fsubr
inc
mul
cmp
push
scas
xor
dec
jg
(bad)
sbb
loope
mov
clc
jmp
xor
jmp
into
outs
cmps
or
rol
not
sub
test
clc
and
push
adc
pop
xlat
mov
fwait
neg
fsub
enter
push
adc
mov
addr16
lock
xor
(bad)
jle
in
mov
cmp
test
cmc
push
sbb
imul
or
pop
ror
add
add
cmps
sbb
sbb
test
mov
dec
mov
jns
mov
jge
xchg
ret
jg
sub
or
dec
cmc
ins
or
in
fwait
inc
jl
or
popa
fcom
data16
daa
(bad)
sub
into
sbb
push
imul
(bad)
jae
rol
fs
shl
int3
int3
lods
outs
adc
lods
sbb
and
je
cmp
adc
test
mov
outs
mov
jns
dec
in
rcl
adc
pop
sbb
mov
test
mov
in
push
cmp
and
out
mov
xchg
adc
pop
frstor
out
jle
lods
cld
xchg
adc
(bad)
arpl
pop
mov
xchg
pop
ret
aam
sub
mov
push
dec
pop
xchg
inc
pop
arpl
(bad)
push
out
mov
pushf
fidivr
pop
inc
sub
sbb
or
mov
loope
push
int3
pop
int3
pop
pusha
xor
pop
xor
jnp
pop
lock
es
mov
lods
dec
in
(bad)
jg
int
jb
xor
or
push
loope
aam
or
add
or
push
cmp
inc
inc
dec
mov
nop
aad
sar
nop
mov
mov
cmc
scas
jl
push
fisub
adc
push
mov
clc
mov
div
pop
test
xchg
out
push
das
cmp
mov
jne
xor
sbb
xor
xor
mov
xchg
cli
jbe
arpl
test
xchg
jmp
sub
jnp
mov
cmp
arpl
push
repnz
push
jnp
push
mov
call
rcl
mov
fstp
mov
xchg
or
(bad)
pop
in
test
int3
enter
mov
push
mov
mov
fwait
fs
test
(bad)
jle
cmp
sbb
jl
and
mov
mov
test
(bad)
loop
(bad)
mov
inc
arpl
std
dec
call
aam
pop
daa
popf
mov
and
in
and
xor
push
xor
push
(bad)
js
jne
test
rol
push
add
sbb
loop
adc
cmp
mov
and
call
dec
add
pop
pop
or
mov
or
jae
dec
(bad)
out
sub
enter
mov
mov
ret
icebp
adc
push
mov
jmp
push
inc
pop
xchg
jmp
push
and
iret
sub
cld
dec
pop
out
data16
dec
xor
jne
xor
clc
fwait
ds
xor
adc
dec
fist
mov
and
pop
mov
jae
js
stos
xchg
inc
rsm
jae
lock
cmp
jge
dec
js
gs
and
and
ds
test
repnz
mov
push
mov
xor
mov
sti
xor
es
or
cmp
sub
jle
jge
adc
jne
mov
inc
test
push
pop
jnp
aas
sahf
inc
cmc
out
sar
sti
retf
jle
sub
dec
xchg
or
gs
call
xchg
leave
xchg
mov
push
mov
stos
mov
push
nop
xchg
js
adc
adc
movs
fadd
pushf
je
adc
neg
inc
jbe
stos
pop
mov
aaa
push
add
fwait
test
mov
inc
stos
ins
fdivr
add
sbb
cwde
lahf
jmp
mov
mov
xchg
(bad)
cmc
add
mov
fwait
add
mov
jmp
mov
std
jnp
(bad)
pop
fisub
mov
adc
inc
inc
dec
jl
sub
jl
sbb
lock
ds
lods
gs
sub
mov
inc
(bad)
mov
in
adc
cmp
push
(bad)
gs
int
in
add
(bad)
int3
mov
mov
out
pop
pop
(bad)
ja
lods
dec
les
inc
xchg
inc
add
inc
push
jns
aad
cmps
pop
cmc
cmc
jb
aas
pusha
cmps
aad
add
sub
push
sbb
out
pop
mov
in
cmp
jnp
lods
jnp
push
out
push
jle
icebp
mov
bound
std
sub
dec
adc
(bad)
cmps
(bad)
iret
or
cmp
pop
mov
xchg
pop
and
add
inc
call
push
adc
jns
mov
ror
fwait
mov
jmp
movs
jmp
xchg
into
xchg
adc
xor
sbb
inc
jg
enter
mov
adc
inc
dec
(bad)
adc
fadd
mov
(bad)
mov
es
call
jmp
out
fist
hlt
int3
xor
adc
push
sub
shr
mov
stos
aad
in
inc
sbb
push
push
jmp
push
push
loop
xor
add
out
ds
out
ins
jle
cmc
nop
(bad)
fisttp
jno
retf
inc
sbb
aam
das
adc
out
loop
mul
(bad)
out
dec
fbld
ins
inc
mov
movs
icebp
mov
inc
and
push
pop
(bad)
mov
add
and
and
xor
stc
std
push
jno
and
pushf
jmp
sub
push
pop
aas
in
gs
inc
scas
pop
jnp
(bad)
adc
jle
xor
imul
adc
xchg
retf
mov
imul
pop
aaa
inc
aas
test
daa
sbb
adc
jnp
sbb
imul
mov
xchg
mul
mov
or
cdq
mov
add
lds
stc
(bad)
push
jl
movs
push
pop
pop
and
mov
dec
sub
cmp
call
jmp
adc
scas
cwde
test
mov
sbb
(bad)
sub
into
mul
jecxz
call
ficom
xchg
(bad)
mov
call
push
push
ret
cwde
mov
arpl
mov
rol
mov
jbe
mov
xchg
in
adc
loopne
mov
lea
das
test
mov
inc
and
ret
(bad)
out
jo
or
cmp
fwait
mov
sbb
sbb
test
mov
out
sbb
mov
scas
inc
(bad)
aaa
imul
sub
cld
add
inc
mov
cmp
rol
daa
jns
jo
add
fidivr
sbb
adc
(bad)
cmp
sbb
push
xor
jo
in
loopne
jmp
and
mov
outs
cmp
dec
mov
(bad)
movs
sbb
inc
cld
dec
in
loopne
movs
push
mov
xchg
repnz
mov
movs
mov
cld
mov
pop
ins
popa
cmp
test
xor
adc
(bad)
rcl
jmp
inc
pusha
add
mov
cwde
bswap
test
xor
push
and
imul
jns
repz
cmc
jbe
ins
(bad)
jbe
nop
add
mov
add
cmp
mov
and
(bad)
retf
or
push
mov
ins
or
repz
cmp
mov
leave
sbb
arpl
sbb
in
jb
sbb
jo
adc
int3
stc
mov
adc
retf
std
push
popa
inc
pop
jmp
push
pop
or
cmp
jmp
fidiv
mov
sub
mov
scas
or
shl
pop
stc
and
fisubr
add
ror
retf
pcmpeqw
into
stos
mov
xor
and
fwait
dec
outs
loope
les
sub
test
sub
inc
mov
clc
mov
(bad)
sub
cli
jo
push
or
das
(bad)
sti
or
pop
jnp
in
adc
ficomp
cdq
sahf
push
pop
pop
retf
push
icebp
dec
sub
sub
xchg
mov
jp
mov
mov
(bad)
sahf
bound
xchg
and
mov
lock
pop
or
jmp
push
mov
mov
jmp
adc
cli
sbb
(bad)
imul
(bad)
adc
(bad)
jns
dec
inc
jne
mov
ror
mov
(bad)
fcom
mov
jmp
rcl
inc
jne
mov
fs
mov
jbe
in
sub
icebp
push
sub
repnz
js
iret
mov
cmp
mov
out
add
les
aad
inc
xchg
adc
daa
push
bound
or
leave
(bad)
push
stos
push
sbb
pop
gs
cs
xor
stc
cs
sbb
inc
inc
mov
fldcw
pop
jecxz
enter
sub
jnp
js
dec
add
adc
daa
test
jns
out
xor
mov
(bad)
test
or
push
dec
jbe
pop
push
push
bound
jecxz
pop
je
jb
add
jo
clc
mov
jmp
aam
ror
data16
retf
fld
xchg
push
adc
and
pop
std
mov
fcmovnbe
ja
stc
dec
and
push
jecxz
or
jne
addr16
int
add
aad
mov
call
lods
push
and
xchg
cli
int
add
inc
sbb
stos
gs
lea
lods
push
addr16
pop
mov
fst
mov
add
sbb
inc
jmp
xor
mul
or
retf
dec
inc
cli
push
repnz
inc
nop
(bad)
cwde
in
jnp
pop
mov
lea
shl
mov
inc
or
or
lods
retf
xchg
cmp
(bad)
push
add
jp
jne
dec
movs
pop
(bad)
pop
les
call
or
lock
cmps
in
jmp
jo
xchg
sbb
int3
sbb
mov
cwde
adc
sti
jle
pop
push
inc
mov
loopne
xchg
and
jns
add
xor
xchg
fadd
pop
ins
aaa
in
dec
push
in
mov
ror
xchg
adc
pop
push
fcomip
daa
fs
bnd
(bad)
fistp
lods
bound
cmp
fstp
mov
sbb
in
xor
ins
mov
cmp
pop
mov
ret
jg
xor
std
not
clc
add
fs
int
inc
xchg
sahf
ror
jb
jnp
fnstenv
loope
sub
in
mov
in
into
fs
push
ret
push
gs
mov
and
sti
aad
cdq
mov
adc
inc
adc
(bad)
mov
or
mov
pushf
jae
movs
loopne
cwde
pop
adc
dec
add
xor
imul
push
push
mov
or
dec
in
xchg
xchg
cli
dec
pop
fistp
cmp
mov
or
pop
rol
mov
sar
mov
ror
stc
aas
xor
daa
adc
daa
pop
mov
inc
aam
pop
push
out
popa
dec
sub
cmc
inc
xchg
(bad)
mov
pusha
add
cmc
test
push
and
das
in
jno
sub
scas
or
inc
test
std
pop
int3
test
stos
sbb
cmp
(bad)
in
dec
mov
addr16
(bad)
cwde
jb
mov
movs
mov
mov
fistp
fdiv
add
jge
mov
fistp
xor
dec
ins
(bad)
hlt
push
adc
push
or
xlat
out
cli
daa
inc
loope
jae
mov
je
test
fadd
cli
shl
test
jle
and
dec
jge
mov
cmp
sahf
scas
rcl
xchg
push
pop
fnstsw
and
cmp
push
xchg
sti
idiv
outs
(bad)
(bad)
push
js
push
xchg
push
mov
les
pop
pop
(bad)
sub
cmp
and
popa
xchg
xor
hlt
pop
test
(bad)
mov
test
or
ret
sbb
sub
pop
addr16
stc
repnz
pop
pmullw
stos
xchg
aam
jmp
retf
ins
or
and
jbe
cmps
retf
dec
loope
sub
call
xor
inc
dec
cmp
mov
jnp
pop
or
xor
pop
push
call
and
mov
xchg
inc
stos
lahf
pop
int3
ficom
mov
sub
mov
(bad)
mov
movs
dec
push
iret
mov
push
push
sbb
ss
mov
ds
(bad)
test
push
jno
or
iret
shl
dec
scas
and
fs
cmp
pop
adc
inc
pop
loopne
mov
gs
pop
mov
out
cwde
je
aas
push
cld
cld
enter
xor
add
(bad)
mov
(bad)
add
xchg
pop
nop
inc
push
into
enter
sti
(bad)
pop
jge
in
push
cmp
fwait
push
xor
and
cs
leave
pop
mov
scas
vpsrad
jecxz
call
je
cld
mov
add
(bad)
mov
jmp
pop
lea
out
call
xchg
cmp
ret
fist
adc
mov
in
mov
pop
jmp
dec
scas
ja
mov
rcr
outs
mov
ins
pusha
inc
ds
mov
dec
rcr
and
sub
jns
adc
and
std
mov
jns
sub
jp
test
gs
ds
cmps
inc
add
gs
(bad)
sbb
rcl
xlat
jmp
rcl
pop
fdiv
sbb
inc
dec
mov
bound
rcl
es
daa
push
std
sbb
inc
or
mov
jg
push
sar
jns
sub
in
ja
mov
retf
push
jbe
mov
sbb
outs
push
pop
retf
call
jl
mov
push
xchg
push
and
push
sar
or
loope
jo
mov
mov
ss
adc
out
mov
outs
iret
sar
frstpm(287
mov
movs
push
add
repnz
pop
xor
je
ret
in
ds
sti
je
mov
jne
fsub
or
enter
sub
pop
xor
adc
mov
dec
and
jle
je
or
(bad)
loopne
jno
xchg
mov
add
cdq
mov
pop
gs
loopne
dec
sub
adc
ss
imul
xchg
mov
add
loope
dec
idiv
jbe
shl
xchg
adc
mov
dec
fcomp
dec
mov
jnp
sar
dec
jge
es
push
popa
push
std
pop
pusha
xor
(bad)
aaa
mov
les
retf
sti
dec
mov
xchg
dec
pop
mov
retf
fidiv
hlt
jno
push
or
mov
imul
mul
inc
xor
shl
jp
std
inc
(bad)
(bad)
arpl
js
fldcw
inc
outs
aad
imul
out
stos
sub
cmp
das
and
retf
mov
mov
add
loop
in
out
xchg
ss
cmps
mov
test
das
pop
aas
push
or
jne
mov
stc
ror
jecxz
xor
dec
cmps
cmp
nop
lock
mov
xchg
imul
test
pop
adc
sub
inc
jmp
imul
mov
mov
adc
sub
jmp
or
inc
cmp
jns
or
in
and
pop
and
and
cli
add
repnz
adc
pop
jmp
sub
and
retf
test
push
cmp
mov
test
ins
fidiv
sub
xor
cmp
outs
inc
mov
mov
fst
int
xor
(bad)
mov
call
jg
pushf
mov
inc
adc
pop
out
sub
jmp
and
sub
xor
fdivr
sbb
jo
push
or
xchg
aas
push
mov
push
leave
outs
movs
movs
mov
int
mov
dec
std
je
retf
push
imul
mov
push
call
jmp
arpl
stos
int3
lds
movs
xchg
dec
aaa
xchg
jg
cwde
cwde
add
pop
out
xchg
jne
jmp
cmp
add
mov
add
lea
pop
hlt
xor
adc
mov
neg
mov
xchg
fld
mov
jae
cld
fnsave
add
and
clc
dec
dec
cmp
stos
pop
mov
mov
xor
dec
outs
outs
sbb
xor
(bad)
push
and
or
jno
inc
int3
add
jmp
fmul
push
push
fs
xchg
icebp
add
adc
pop
frstor
push
inc
jnp
outs
call
arpl
dec
bound
clc
data16
or
std
out
jae
jnp
std
push
sub
push
and
mov
push
jnp
test
pop
je
lods
jp
repz
int3
inc
int3
ret
adc
out
shl
pslld
or
int3
mov
pop
stos
repnz
or
xlat
mov
idiv
call
inc
test
mov
jecxz
xchg
mov
fidiv
retf
pop
dec
test
lea
fbld
and
gs
sahf
hlt
aaa
xor
hlt
xor
js
fist
int
aas
adc
push
or
repz
retf
ins
ficomp
mov
shr
xor
sub
stos
lea
rcr
repz
fisubr
or
jmp
call
test
fucomp
xlat
cmps
sub
push
nop
and
sbb
jns
jmp
es
inc
retf
xchg
(bad)
mov
ds
int
sub
call
test
sub
out
aad
jmp
repz
imul
push
test
and
and
cmps
emms
imul
scas
push
in
sbb
dec
mov
jo
pop
lahf
int3
pop
dec
inc
aas
int
imul
mov
fcmovbe
push
repz
add
xchg
adc
adc
cdq
cmps
mov
addr16
addr16
jle
test
or
cvtdq2ps
into
jo
push
das
inc
push
mov
aam
fwait
es
sbb
into
mov
mov
psraw
imul
in
dec
shr
test
sbb
stos
daa
cmps
rol
mov
data16
cdq
adc
ins
dec
jne
aam
inc
retf
retf
mov
jae
mov
jns
cwde
mov
mov
jge
hlt
ret
mov
into
outs
cmps
cmp
mov
loope
sbb
mov
push
dec
test
push
or
(bad)
loopne
pop
sbb
stos
pop
das
adc
xchg
jns
mov
xchg
adc
adc
mov
xchg
loopne
sub
repz
fs
adc
and
sub
js
or
mov
jmp
dec
sbb
adc
cmps
and
ja
sbb
cmp
mov
iret
dec
stos
sbb
sbb
(bad)
fstp
inc
pusha
push
or
dec
dec
(bad)
mov
jmp
icebp
pslld
fdiv
cld
mov
mov
out
pop
or
mov
xor
dec
mov
gs
inc
aam
jecxz
pop
adc
mov
lods
retf
stc
cmps
shld
xor
jnp
bound
mov
cli
pop
add
pop
mov
retf
leave
add
in
sbb
mov
lds
dec
xor
push
loope
je
lock
add
(bad)
call
popf
stos
inc
(bad)
mov
jmp
popf
sub
add
xor
mov
ret
iret
arpl
cmps
push
adc
(bad)
out
test
dec
jmp
js
mov
mov
aaa
inc
jae
fidivr
cmp
fs
push
(bad)
scas
push
daa
iret
mov
ficom
shr
or
movs
xlat
pusha
cmps
push
xor
jmp
xchg
(bad)
jne
sbb
(bad)
gs
test
imul
pop
nop
js
scas
cs
movs
ins
div
sbb
lds
fidivr
outs
sub
das
mov
pop
outs
iret
sbb
cmp
jl
pop
xchg
(bad)
ficomp
leave
mov
mov
in
inc
push
popf
(bad)
sub
sub
inc
cdq
jno
push
sub
loope
arpl
(bad)
cli
cwde
pop
cmp
mov
mov
shl
je
mov
fisttp
fst
adc
pop
sbb
jns
add
pop
xchg
das
jecxz
cmp
sub
test
js
lahf
pop
xchg
fiadd
dec
in
add
mov
call
and
add
push
or
stc
pop
pop
and
test
rcr
jo
ret
aad
jo
push
clc
fimul
cmp
clc
xchg
pop
inc
xchg
and
jmp
xlat
fwait
repnz
(bad)
push
jge
movs
inc
push
cmp
mov
mov
call
call
cmps
(bad)
lea
push
out
mov
into
mov
push
ds
retf
dec
jne
mov
add
and
div
fwait
lock
jg
jl
inc
mov
xchg
aam
mov
in
call
addr16
mov
data16
xchg
(bad)
fs
or
xchg
sti
movs
cmp
cdq
jle
mov
push
push
out
sbb
inc
icebp
add
add
cwde
cmp
xchg
arpl
mov
ss
mov
adc
push
dec
fsubr
add
add
cmp
jns
inc
fdiv
in
jbe
xchg
sti
adc
xchg
pop
leave
jne
outs
ins
xchg
and
scas
xchg
stc
mov
rol
dec
pop
sbb
sbb
mov
cmp
outs
rcl
ret
inc
ins
ficomp
dec
jmp
fucom
repnz
nop
push
(bad)
in
(bad)
push
sbb
imul
aaa
lods
sbb
enter
mov
fisttp
retf
aad
mov
inc
call
dec
and
xor
push
inc
loop
jmp
jmp
(bad)
std
ficomp
arpl
jge
leave
out
xchg
arpl
pop
inc
mov
mov
lock
cmp
push
jmp
jb
mov
jb
hlt
or
mov
test
out
mov
mov
mov
lahf
mov
mov
jle
sub
outs
repnz
aas
xor
push
add
mov
nop
iret
scas
out
daa
out
jge
jbe
xor
sub
outs
lock
(bad)
xor
cs
daa
push
jno
pop
mov
rcr
sub
mov
scas
sub
lods
add
pop
xor
fs
xor
retf
hlt
mov
das
xchg
xchg
sahf
and
push
std
fsub
mov
popa
aas
mov
in
cmp
and
cmp
mov
mov
rol
dec
adc
pop
or
mov
add
pop
push
test
mov
or
mov
mov
pop
push
sahf
dec
fwait
mov
add
sbb
daa
mov
addr16
xchg
sub
inc
add
mov
dec
add
jg
dec
iret
popf
rcl
jp
cmp
inc
adc
push
sub
adc
push
jl
push
fadd
(bad)
imul
(bad)
(bad)
xchg
push
std
add
pop
mov
mov
loopne
xor
push
cs
xchg
fs
mov
cmps
pop
popf
std
ja
test
cmp
rol
xor
dec
xor
neg
mov
sti
add
sub
xchg
in
ds
shl
in
test
dec
iret
pop
xor
pop
movs
xchg
popf
xor
call
cli
xor
lea
push
std
adc
pop
sbb
imul
sub
sub
add
adc
pusha
or
xlat
(bad)
jecxz
shr
pop
hlt
in
fcomp
fisttp
mov
outs
mov
shr
dec
imul
and
jbe
test
push
movs
mov
and
outs
push
add
xor
lahf
imul
(bad)
xchg
or
or
aas
push
iret
sbb
xchg
sub
add
pusha
add
sbb
js
xor
push
push
shl
fsubr
daa
sub
and
fs
imul
mov
xor
inc
movs
dec
sub
inc
test
fwait
out
or
cmp
sbb
and
pop
clc
push
arpl
pop
cmp
leave
adc
jb
pop
pop
jle
push
mov
add
pop
xchg
push
setg
cmp
(bad)
mov
enter
in
mov
fiadd
lock
and
pop
xchg
push
into
adc
das
mov
or
cmp
inc
xor
mov
test
out
dec
cmps
xor
jl
mov
pop
ret
jbe
cwde
adc
mov
sub
stos
sub
adc
add
jmp
call
loopne
mov
or
std
xchg
cld
(bad)
xchg
in
(bad)
inc
stos
scas
test
outs
mov
and
mov
cmp
adc
mov
mov
lahf
ins
cmp
xchg
pusha
shr
mov
pop
mov
push
lds
sbb
test
inc
mov
fsub
jns
outs
and
icebp
mov
fsubr
scas
test
inc
mov
adc
or
inc
or
jle
int3
ja
dec
jnp
mov
sbb
ins
test
dec
xor
stc
xchg
mov
outs
sti
arpl
inc
cmp
mov
jae
adc
scas
cs
out
jns
popf
js
pop
fstp
ins
fstp
mov
ret
fsubr
adc
scas
loopne
into
call
mov
icebp
jnp
push
test
push
or
std
in
mov
rcl
ss
xor
addr16
stos
sub
adc
fdivrp
lds
push
xor
test
dec
or
sub
mov
pop
fidivr
jecxz
mov
cwde
inc
ror
mov
pop
loop
(bad)
(bad)
xchg
jge
push
daa
lods
push
inc
jl
fild
test
(bad)
shl
xlat
jb
xlat
es
call
hlt
pop
fmul
pop
(bad)
mov
pop
scas
jne
mov
xchg
enter
mov
retf
xchg
fldcw
fisttp
sub
xor
mov
and
hlt
cmps
loop
xchg
adc
pop
je
and
mov
popf
sbb
push
addr16
mov
fsub
clc
adc
jo
scas
jp
shl
sbb
imul
mov
call
mov
mov
and
fucom
mov
loop
mov
std
adc
sbb
ja
xor
jle
mov
xor
xor
mov
adc
outs
mov
les
imul
mov
cmp
test
sahf
test
pop
xchg
mov
cmp
scas
inc
inc
jo
mov
jge
dec
xchg
out
mov
jle
rcr
stos
jns
std
lods
ds
mov
loop
pop
fs
adc
ins
adc
adc
(bad)
push
adc
jmp
and
pop
loope
ins
mov
cmps
outs
aad
test
data16
sub
out
dec
test
stos
sub
sub
cmp
adc
fwait
dec
dec
cdq
sbb
cmp
pop
cmps
inc
mov
add
jecxz
jecxz
rol
mov
mov
in
in
mov
mov
pushf
imul
stos
xchg
in
aas
in
mov
jmp
repnz
fnstsw
pop
inc
rol
mov
jae
mov
je
dec
inc
dec
rcl
pop
sti
xchg
add
loop
and
dec
popf
ror
pop
xor
push
fcomp
sti
xor
popf
inc
in
pop
or
and
xchg
popa
call
out
cmp
popf
lds
fwait
cmp
dec
scas
and
pop
or
scas
ds
loope
dec
mov
ret
stos
jno
outs
pusha
pop
jle
pop
ins
xchg
adc
cld
push
xor
pop
cmp
push
mov
cmps
pop
movs
and
test
pop
fbld
jmp
aaa
mov
aad
push
push
xor
aam
inc
xor
and
fwait
and
sub
(bad)
pop
arpl
push
call
bound
or
jmp
imul
clc
xchg
xchg
rcl
add
shl
(bad)
in
add
cmp
push
ins
pop
int
mov
cmp
mov
xchg
scas
mov
mov
fs
jl
mov
cmp
xchg
dec
sti
jecxz
or
ret
lock
sar
and
rcr
bnd
xchg
vmulsd
sub
out
(bad)
bound
ret
sub
stos
push
xchg
cmp
mov
clc
mov
mov
vmread
stos
adc
movs
adc
dec
or
inc
add
cmp
mov
xchg
mov
ins
fmul
stc
xchg
ins
test
imul
repnz
inc
mov
xor
std
mov
clc
cs
mov
jae
sahf
jl
dec
scas
mov
adc
mov
pop
push
test
dec
scas
repz
inc
add
loop
data16
mov
jl
movs
jg
jbe
jnp
push
inc
pop
sbb
movs
ja
js
gs
sbb
inc
jb
lea
loop
or
push
dec
out
push
mov
jge
call
fild
out
aaa
and
xchg
mov
cmp
jmp
lods
clc
(bad)
push
sar
cmp
dec
dec
or
jne
adc
lea
xchg
mov
inc
outs
(bad)
loop
scas
xchg
cdq
push
fisub
cli
sub
push
push
and
stos
jbe
ror
mov
jg
mov
jo
daa
adc
xor
jmp
test
adc
mov
jmp
imul
rol
and
push
sub
xchg
xor
ins
or
cmp
shl
mov
adc
jns
es
fstp
enter
or
(bad)
mov
sahf
sar
les
scas
xor
cmp
jno
jecxz
movs
cld
lods
icebp
inc
mov
adc
ds
dec
lock
rcl
jle
repnz
xchg
shl
mov
mov
ds
(bad)
lock
pop
lock
mov
push
push
inc
and
or
gs
push
cmp
ins
test
pop
hlt
imul
fimul
jp
into
dec
aaa
mov
or
lahf
call
inc
dec
ss
dec
es
cmp
xlat
push
push
popa
dec
inc
pop
mov
pop
mov
(bad)
push
and
and
xlat
pop
jmp
ds
fnstenv
or
mov
sub
or
jmp
mov
daa
addr16
movs
mov
call
pop
and
mov
ins
js
(bad)
cmp
mov
bound
xchg
std
ret
neg
pop
dec
(bad)
loope
scas
das
sbb
inc
sbb
adc
call
(bad)
or
or
cmp
scas
not
jecxz
fsub
movs
jnp
mov
or
mov
iret
std
mov
jle
and
pop
stc
push
pop
stos
jg
sub
stc
adc
dec
add
xor
data16
fs
or
scas
push
ss
mov
dec
jo
pop
push
and
mov
in
(bad)
retf
test
push
jl
sub
ret
dec
push
ins
cli
rcr
in
mov
cmp
push
sbb
mov
or
xchg
sub
(bad)
or
(bad)
cmp
add
or
fcomp
aas
adc
add
sub
leave
rcr
cmps
add
daa
xchg
mov
sahf
imul
jg
aaa
inc
inc
cs
ja
mov
aas
xchg
scas
fdivp
aad
dec
les
rcr
pop
push
fdivr
iret
sbb
les
adc
pop
popa
sahf
imul
push
ret
adc
adc
xchg
addr16
in
adc
xchg
std
mov
jge
fistp
mov
push
iret
imul
sub
cmp
sti
or
adc
xchg
inc
inc
ret
or
xor
cmp
out
adc
push
dec
imul
jno
sbb
pop
add
test
mov
and
fist
mov
push
fstp
or
je
jnp
and
sbb
adc
pop
mov
pop
stos
and
or
fld
mov
jmp
xlat
rcr
dec
lea
inc
xchg
push
and
lods
add
xchg
ficom
daa
adc
inc
hlt
call
sub
test
call
xlat
dec
jb
sub
sub
pop
push
xor
inc
in
pop
jl
pop
(bad)
stc
pop
fnstcw
jl
sbb
push
sub
mov
mov
add
mov
dec
xlat
out
adc
(bad)
and
jbe
cmps
js
(bad)
xchg
xlat
inc
push
test
adc
pop
sbb
sub
repz
outs
jno
cmp
jmp
xor
mov
jmp
cmp
jmp
pop
cmp
cmp
add
imul
rcl
stos
dec
cwde
bound
xchg
js
pop
add
dec
(bad)
scas
pop
jp
shl
sar
test
mov
push
fild
sbb
sbb
cs
mov
imul
xor
pop
sbb
loopne
mov
sub
lods
sti
sti
mov
mov
and
inc
push
(bad)
mov
xor
aam
out
or
icebp
lds
in
cmp
cmp
sbb
xchg
adc
push
call
push
push
jecxz
pop
(bad)
es
inc
sbb
xchg
adc
rcr
push
sbb
xor
imul
adc
push
pop
jo
xchg
ror
enter
aaa
cmp
mov
lods
es
xor
jne
xor
and
test
out
pop
rcl
jae
rcl
data16
and
lods
sub
xchg
arpl
int3
xor
pushf
movs
dec
repnz
adc
mov
inc
sub
cli
nop
lds
inc
sbb
adc
js
mov
cmps
scas
mov
push
dec
jo
aaa
hlt
cdq
retf
je
sub
imul
loopne
rol
mov
enter
or
test
aad
dec
mov
int
dec
call
inc
fisub
shr
pop
(bad)
and
and
rol
and
call
lods
mov
fcomp
push
and
in
dec
int
sbb
mov
mov
mov
xor
das
jge
cmp
movs
cmp
mov
and
add
(bad)
dec
ja
or
ret
pop
lods
cmc
int
add
nop
jecxz
jno
pop
rcl
cwde
clc
dec
mov
fxam
xor
adc
out
in
jo
daa
xor
jmp
ret
sar
idiv
test
dec
and
cdq
xchg
(bad)
movs
add
push
sub
xor
pop
and
sub
mov
xchg
out
test
pop
mov
jl
aas
mov
xlat
or
inc
cmps
ins
xchg
or
pushf
repnz
daa
mov
cmps
mov
mov
fld
or
add
movs
pusha
loop
scas
sbb
or
jne
jg
cmp
xor
xchg
xor
fstp
dec
(bad)
hlt
dec
cmc
jge
push
jno
pop
mov
sub
jle
sbb
dec
pop
push
movs
jmp
test
in
pop
adc
xor
sbb
sbb
test
inc
mov
je
shr
mov
test
push
xchg
daa
out
(bad)
push
sar
mov
bound
push
push
nop
mov
out
cwde
call
into
add
pop
fild
cli
xlat
or
xor
or
push
lahf
daa
jp
pushf
loop
cmps
mov
cmp
pop
sub
fwait
and
jb
xor
xor
(bad)
push
inc
rcr
lahf
jle
or
cmp
sub
xchg
cs
pop
jnp
in
sar
mov
add
popa
lods
test
push
cwde
sbb
cmps
rcl
pop
out
jnp
xchg
nop
dec
push
push
mov
ficomp
mov
inc
mov
jo
pop
add
pusha
movs
push
fwait
aam
sbb
cs
cwde
fldcw
mov
mov
mov
cs
movs
adc
popf
xchg
jae
loopne
retf
sub
pusha
mov
(bad)
jge
fist
dec
adc
pop
cwde
xor
pop
mov
push
and
les
jae
cmp
pusha
cli
add
lods
movs
das
mov
repz
aaa
icebp
adc
movs
cmps
sub
cmp
push
out
imul
outs
adc
cwde
add
lock
mov
shl
push
jbe
fwait
jg
stos
ins
dec
or
mov
pop
xor
jns
xor
dec
mov
int3
sti
push
retf
fmul
xchg
(bad)
movs
inc
(bad)
leave
mov
stos
jg
fs
push
cmps
in
inc
mov
xchg
loopne
inc
scas
in
sbb
and
xor
fstp
sbb
xchg
aad
xor
out
test
lods
xchg
pop
(bad)
or
dec
hlt
cmp
(bad)
mov
add
inc
push
xor
call
fisttp
pop
mov
ja
leave
sbb
dec
div
inc
out
sub
mov
loope
pop
xchg
push
sbb
mov
stc
xor
stc
pop
jno
enter
sub
jg
cmp
cld
jl
sub
xchg
inc
in
and
dec
dec
push
add
cmps
pushf
rcr
aad
adc
js
fcom
and
lods
out
retf
addr16
out
lock
ror
pop
jp
fwait
cmps
dec
inc
push
push
mov
rcl
ret
inc
sar
arpl
and
pop
std
hlt
xchg
mov
push
pop
sar
test
and
sbb
jl
(bad)
iret
cld
into
out
jno
aaa
pop
sbb
ins
int
leave
and
inc
jmp
shl
je
movs
adc
cmp
stos
jmp
mov
call
je
jmp
lock
xor
mov
aad
ja
add
pop
adc
out
dec
sar
add
sahf
mov
ja
dec
fldcw
pop
pop
jne
push
jecxz
cmp
ins
cld
adc
iret
xchg
pop
or
movs
push
mov
lds
xchg
ret
mov
pop
fisttp
or
adc
loope
push
mov
outs
inc
adc
mov
lds
dec
scas
popa
mov
xchg
sub
dec
push
les
int3
pop
xchg
cmps
pop
xchg
fst
mov
push
das
daa
das
inc
cmc
xor
add
mov
scas
inc
popf
fst
cdq
aad
loope
stos
lock
leave
call
int3
push
aas
cli
jmp
inc
(bad)
(bad)
cmps
jmp
aad
add
push
adc
cld
hlt
sub
addr16
and
bnd
mov
outs
(bad)
jmp
test
xor
into
scas
gs
into
call
ror
cmc
lods
jns
mov
cmp
repz
lea
aam
push
sub
push
data16
out
mov
jp
data16
fcom
jae
mov
xchg
int
mov
shr
mov
and
push
arpl
add
dec
cmps
fdivr
and
mov
jnp
std
jecxz
add
dec
push
mov
ror
sub
retf
jge
dec
std
repz
movs
loope
and
xchg
cmp
cmp
(bad)
addr16
push
repnz
mov
and
(bad)
mov
nop
add
popa
jecxz
std
pop
jg
mov
mov
fwait
lods
sbb
xchg
fcom
cs
shr
loopne
(bad)
stc
ds
cld
mov
or
fs
sub
xor
cmp
push
ins
pop
push
adc
int
ins
cmps
cmps
js
push
push
std
(bad)
mov
mov
fcmovb
rcr
xchg
mov
xor
ins
fldcw
dec
test
sub
and
pop
idiv
or
jbe
or
imul
jl
inc
push
pop
cs
sbb
inc
retf
cmp
jmp
es
add
aam
sub
adc
pop
sub
dec
shr
dec
sbb
jb
cmps
push
aaa
test
shl
cmp
sbb
(bad)
add
mov
push
daa
inc
sub
fistp
cs
aad
push
stc
and
movs
ds
(bad)
imul
jne
in
lods
gs
and
in
jge
daa
aad
pop
xor
or
xchg
retf
cdq
xor
push
mov
fistp
dec
out
sbb
cld
add
cmp
outs
pop
cdq
push
aas
add
jns
sahf
or
dec
cmps
fsub
inc
push
mov
stc
fadd
xchg
(bad)
mov
ja
inc
xchg
imul
lahf
fisttp
cs
and
cmps
jmp
sti
push
jmp
ror
push
leave
shl
(bad)
cmp
xor
fyl2x
mov
pop
cmp
call
mov
inc
mov
fucompp
or
scas
sub
jne
stc
movs
(bad)
mov
push
sub
inc
fistp
in
mov
cmp
xchg
cld
push
fistp
bound
cld
push
sbb
mov
mov
adc
or
leave
xor
or
icebp
sbb
(bad)
adc
retf
test
imul
and
sub
xlat
sub
mov
sbb
mov
pop
inc
punpckhbw
push
(bad)
es
xchg
mov
xlat
retf
imul
mov
je
(bad)
retf
sahf
nop
fldcw
push
mov
cmp
shl
xor
mov
int
shl
xor
mov
into
rol
repz
fnstcw
(bad)
cmp
xchg
lods
fs
inc
adc
sub
or
mov
jns
sub
cmp
outs
jle
or
add
xor
xchg
cdq
mov
mov
(bad)
cmp
js
out
and
cmps
js
push
(bad)
ret
ja
or
jp
test
in
test
and
jmp
mov
pop
xor
and
fstp
sbb
(bad)
jecxz
js
leave
fs
pop
pop
jmp
test
lods
add
popf
das
and
cmp
adc
sub
cmp
xchg
mov
outs
jmp
lock
push
cmp
jp
stos
or
or
mov
scas
push
ss
pop
out
inc
ficom
xchg
loopne
push
mov
adc
mov
push
adc
call
cs
mov
loop
fs
and
jo
aas
inc
inc
sbb
cld
(bad)
push
add
push
jp
sub
xchg
mov
push
into
push
in
add
retf
push
mov
stc
loopne
into
ret
or
mov
sbb
and
push
xchg
add
adc
pop
mov
call
mov
dec
jg
inc
(bad)
xor
push
test
xchg
aaa
adc
cmp
and
stos
das
mov
and
call
xor
xchg
(bad)
mov
shr
jo
enter
and
lods
and
sub
div
loopne
pusha
or
rol
push
movs
stos
or
fwait
push
scas
cwde
and
je
sar
stos
jno
mov
(bad)
loope
mov
out
fsubp
popf
mov
outs
inc
mov
mov
add
xchg
movs
(bad)
sbb
and
movs
adc
mov
xchg
(bad)
addr16
jmp
test
inc
mov
rcl
lahf
mov
adc
cmp
ds
pop
dec
cmp
push
add
mov
xor
loopne
std
mov
call
xlat
or
pxor
repz
sub
xchg
mov
push
je
fiadd
mov
aaa
push
pop
fist
jbe
sub
popa
dec
inc
mov
cs
mov
and
mov
mov
repz
add
in
lock
fidivr
dec
rol
hlt
or
pusha
fdiv
mov
ss
push
sub
xor
cmp
dec
push
and
retf
aad
inc
inc
repz
or
or
ret
movs
jbe
pop
aas
inc
pop
shl
scas
int
inc
add
xor
pusha
add
pop
movs
mov
pop
mov
rcl
push
push
int
mov
sub
data16
fidivr
mov
lods
ror
sti
pop
rol
(bad)
int
ret
cmp
fcomip
les
es
mov
das
xchg
mov
sbb
shl
mov
mov
inc
pop
xlat
jne
aad
or
loopne
fcomp
xor
adc
push
mov
les
mov
sub
xchg
sub
test
(bad)
mov
and
cmp
pop
gs
jl
jp
mov
or
sbb
adc
in
jmp
mov
mov
cli
push
xor
jo
push
jo
xor
(bad)
adc
inc
adc
movs
jecxz
pop
cmp
add
jg
ins
mov
dec
dec
dec
sbb
push
mov
jbe
arpl
adc
movs
mov
push
inc
jnp
rcr
jge
xchg
aad
popa
adc
lods
jge
and
sbb
add
jmp
sub
xor
lahf
pop
add
add
add
test
sub
jmp
aaa
cmp
repnz
lds
ret
and
pushf
ret
add
sbb
add
push
sti
in
loop
jg
imul
ins
in
sub
cwde
push
pop
iret
fs
imul
out
mov
sbb
add
sub
outs
shl
sub
in
xor
fidivr
js
mov
outs
in
inc
fisttp
lahf
lock
imul
(bad)
(bad)
jno
push
sti
mov
enter
paddw
push
leave
mov
mov
xlat
mov
pop
lock
les
jo
aas
or
test
leave
data16
cmp
sub
mov
loop
mov
lods
mov
or
cli
(bad)
add
mov
pop
mov
aas
cwde
loop
push
cdq
mov
add
cmc
cmp
mov
mov
mov
jecxz
push
sub
sub
xor
(bad)
jno
pop
ja
mov
xor
sbb
mov
xlat
arpl
mov
xchg
xchg
and
dec
cmp
sbb
sbb
xor
jb
sub
repnz
xlat
test
mov
xchg
sbb
not
(bad)
es
mov
mov
push
lods
pop
or
ret
pop
imul
pop
xor
xchg
xchg
cli
adc
or
or
pop
mov
push
das
mov
push
push
test
std
mov
add
sub
mov
cdq
adc
int3
dec
clc
xor
jno
adc
mov
push
or
push
cmp
mov
into
sti
sub
and
les
mov
mov
pop
das
fisub
xor
jg
xchg
mov
sti
dec
add
mov
mov
sub
je
clc
setle
and
xor
dec
pushf
pop
neg
xchg
or
xor
je
lods
adc
mov
frstor
xchg
fstp
jo
sbb
popa
aam
aam
cmp
mov
and
mov
and
or
sbb
push
xor
inc
lods
arpl
mov
push
jmp
jnp
je
cmp
gs
pop
jl
and
das
repz
jmp
xchg
loopne
in
jg
cmp
out
xchg
add
jg
jne
lahf
imul
test
out
push
repnz
shl
jne
pop
or
pop
stos
outs
cmps
lods
mov
fidivr
test
pop
sub
mov
mov
cli
push
ficom
mov
jnp
mov
gs
push
(bad)
scas
std
add
add
mov
(bad)
and
clc
in
sub
add
mov
or
jmp
out
pop
inc
inc
shl
push
pop
or
add
inc
jle
cmp
jmp
sbb
cmps
ret
mov
and
sbb
(bad)
sbb
stos
sbb
inc
inc
mov
dec
out
cdq
imul
inc
mov
stc
jns
pop
or
mov
jmp
imul
push
js
addr16
mov
aam
(bad)
jmp
jmp
call
(bad)
xchg
fdivp
sbb
ins
js
(bad)
dec
cmp
(bad)
push
out
ds
call
fdivr
stc
sbb
iret
sub
arpl
dec
lahf
adc
adc
les
mov
stos
dec
daa
test
ins
out
pop
xchg
jae
nop
mov
mov
mov
out
dec
jo
jne
out
jbe
push
pop
arpl
jmp
jl
fcomp
pusha
push
aaa
mov
inc
aaa
pop
ins
jmp
dec
lods
ror
cmc
xor
daa
cmp
cmps
xor
cwde
adc
test
mov
outs
sbb
enter
or
(bad)
out
sbb
std
mov
xor
cmp
xchg
(bad)
lods
sub
ret
hlt
push
push
fstp
inc
fs
mov
sub
js
xchg
leave
pop
jnp
(bad)
adc
aas
inc
xchg
or
cmp
mov
mov
icebp
jne
inc
push
mov
lods
hlt
xchg
stos
adc
shl
and
push
mov
inc
out
push
int
hlt
ins
clc
jns
pushf
push
pusha
add
adc
fadd
mov
lock
scas
into
ret
retf
adc
leave
fiadd
test
mov
add
adc
cli
in
add
jle
jnp
jg
cli
ss
or
jle
pop
test
int
mov
push
hlt
jb
push
ror
ror
pop
sub
fnsave
dec
cmc
(bad)
jnp
aam
pop
xchg
push
pop
xchg
inc
aas
and
jns
jmp
ret
pop
aas
lock
cld
xchg
test
mov
out
xchg
popa
xor
popf
jo
add
rcr
mov
ret
sar
call
inc
and
jge
dec
mov
shl
dec
xchg
addr16
(bad)
retf
sbb
arpl
fisttp
pop
add
jle
pushf
daa
test
fst
mov
xor
and
xor
adc
in
fdivr
in
pop
adc
in
dec
jg
jp
adc
fstp
jne
push
sub
cmp
pushf
jne
push
dec
cmp
dec
xchg
or
fild
sbb
and
and
jl
push
out
xchg
inc
inc
in
xchg
in
iret
test
test
popf
sub
es
dec
xor
push
mov
sbb
sbb
scas
ja
lds
cs
lahf
and
call
sub
cmp
inc
dec
scas
shr
mov
ja
cmps
cmp
icebp
mov
out
fcom
sbb
mov
repnz
mov
xchg
adc
retf
push
je
pop
xchg
adc
mov
sahf
pop
mov
idiv
pop
ins
jnp
pusha
mov
pop
cmp
adc
(bad)
out
cmp
jns
mov
push
iret
inc
pop
ds
idiv
push
scas
dec
mov
test
sub
xacquire
jp
push
inc
mov
cmps
or
sub
push
(bad)
std
into
xrelease
jnp
aam
int3
jp
inc
mov
cmp
repz
popf
inc
cmp
pop
inc
scas
rol
mov
rcl
shrd
jp
jle
int
dec
dec
xor
loope
or
pop
(bad)
mov
aas
ret
ret
pusha
out
sbb
push
pop
scas
aam
dec
dec
pop
ins
push
adc
cmp
push
es
push
cli
or
mov
cmp
push
ret
xor
mov
jns
cmc
inc
rcr
pusha
inc
cmp
fadd
test
add
sbb
fwait
cwde
scas
inc
push
lahf
and
int
push
leave
add
cdq
add
leave
loope
mov
sti
bound
popa
test
adc
ret
sbb
cli
es
adc
xor
les
int
fwait
and
pop
dec
dec
popa
jge
and
fcomp
in
outs
test
es
push
mov
outs
jge
ins
sub
test
inc
test
pop
gs
and
mov
data16
(bad)
cmps
int3
jbe
and
adc
fwait
dec
scas
jg
fnsave
sub
cld
cld
push
sbb
jo
fnsave
fucomip
dec
gs
hlt
mov
inc
call
cmp
dec
test
adc
push
movs
xor
lds
adc
rcl
push
aam
mov
pop
inc
scas
fdivr
jns
inc
repnz
std
or
ins
push
fistp
dec
mov
cld
sub
cmp
xor
iret
xor
or
scas
fldcw
retf
push
jb
mov
sahf
ret
cli
mov
or
in
out
jae
push
pop
mov
push
enter
dec
sub
mov
jne
into
xchg
xchg
int
call
scas
imul
mov
dec
mov
in
cmps
test
xor
inc
xor
loop
mov
in
loopne
jb
ss
dec
mov
dec
cmc
mov
jl
out
push
loop
nop
cld
xchg
jae
mov
inc
outs
cmp
les
mov
dec
pop
pusha
cmp
xchg
popf
adc
inc
ficom
neg
rcr
cmp
fistp
int
popf
cmp
stc
push
cmp
iret
lods
clc
cs
pop
dec
jge
adc
ins
jp
jbe
pop
sub
rcr
test
pop
in
daa
inc
js
test
fiadd
retf
rcr
vpaddsb
xrelease
fwait
and
mov
aaa
hlt
mov
xchg
inc
sub
jecxz
fstp
xchg
dec
xor
cwde
jmp
sbb
or
add
aad
pop
nop
jmp
test
cmp
push
and
ins
mov
jnp
out
jns
stos
xor
xchg
sub
mov
pop
mov
jle
arpl
cmp
aas
jb
mov
jecxz
out
jae
stos
lock
mov
out
not
movs
in
mov
adc
inc
cmc
fld
out
ins
jb
sub
daa
mov
jno
adc
sti
and
iret
repnz
xchg
xchg
mov
pushf
cmps
sub
retf
adc
jbe
jnp
lods
stc
icebp
dec
pop
inc
sub
fstp
fnstcw
jno
jge
xor
cli
jnp
cs
movs
out
jp
in
lahf
and
dec
push
out
fidiv
lahf
jb
(bad)
stc
mov
push
jbe
scas
or
ret
cmp
lds
jle
sbb
xor
sbb
std
out
mov
sbb
jmp
in
push
mov
add
daa
(bad)
jmp
push
scas
dec
dec
adc
xchg
fadd
dec
xchg
push
mov
mov
inc
xor
call
bound
sti
loop
daa
clc
adc
push
nop
in
mov
(bad)
shr
jns
push
stos
dec
stos
test
add
jl
pop
cmp
jo
outs
push
clc
jbe
inc
pop
xchg
mov
cmp
mov
scas
adc
inc
sub
cmps
sbb
outs
mov
arpl
inc
push
sub
lea
jae
hlt
div
ins
nop
inc
fimul
jge
xchg
nop
adc
push
sbb
add
and
mov
dec
xor
inc
mov
xchg
adc
aaa
mov
icebp
ss
stos
add
in
hlt
push
and
dec
movs
dec
jae
rol
(bad)
inc
inc
ds
mov
sub
and
aaa
inc
ror
pop
pop
inc
xor
test
mov
sbb
mov
jecxz
test
int
add
inc
sub
enter
jne
dec
xlat
in
pop
(bad)
sbb
sub
pop
or
mov
rcr
iret
cwde
lea
adc
xchg
mov
ja
inc
push
repnz
scas
mov
into
xchg
xor
lahf
je
js
(bad)
jno
xor
les
call
and
cmp
dec
and
(bad)
movs
push
fnstsw
pop
sub
adc
xor
aaa
dec
add
call
xlat
test
mov
retf
push
pushf
pop
sub
clc
cli
xchg
(bad)
repz
lahf
call
pop
mov
cld
fiadd
mov
adc
lds
pusha
xor
(bad)
scas
pop
fs
daa
cmp
and
iret
sub
mov
repz
lock
sahf
and
and
add
adc
leave
test
pop
je
xchg
je
pop
test
jmp
sbb
xor
stc
iret
popf
mov
add
fidivr
jp
fwait
xchg
xchg
(bad)
loopne
cli
enter
scas
add
sar
out
jbe
fwait
mov
ror
cmp
add
loope
leave
add
into
or
xchg
es
test
movs
mov
popa
jno
jmp
call
fcmovu
retf
and
xlat
mov
push
not
pop
push
sar
sbb
mov
cld
xchg
test
mov
repnz
nop
nop
enter
jns
cmp
and
sbb
adc
push
inc
push
jmp
sbb
cmp
pushf
mov
pop
imul
adc
(bad)
pop
repnz
jae
dec
stos
dec
xor
mov
pop
lock
push
(bad)
or
jle
mov
(bad)
out
imul
push
stos
add
jmp
xor
xchg
lods
pmaxub
ins
xchg
jp
cmp
or
push
aas
imul
sub
or
push
sbb
dec
imul
sbb
lahf
mov
cdq
or
(bad)
xchg
or
and
mov
(bad)
enter
in
mov
nop
shl
add
push
mov
push
scas
shl
push
or
pop
mov
pop
push
fidivr
js
inc
in
outs
mov
out
hlt
popa
mov
imul
or
xchg
cli
add
pop
xchg
mov
cmp
and
loopne
mov
sub
pop
or
add
cmp
xchg
adc
inc
pushf
lea
xchg
dec
jnp
or
push
(bad)
mov
pushf
ror
fadd
jg
mov
or
lods
retf
jo
jmp
arpl
sbb
add
pop
pushf
xchg
test
scas
stc
xor
adc
fidivr
mov
sbb
xchg
fs
xor
add
les
fidivr
sub
inc
xlat
or
enter
stos
add
test
or
xchg
int
xor
jae
jne
ror
enter
and
fld
je
mov
imul
sbb
repnz
bound
or
or
cmp
test
nop
not
je
inc
add
pop
lock
(bad)
in
ret
ret
jno
mov
dec
cmps
push
imul
(bad)
out
sbb
ror
xchg
test
pop
mov
arpl
xchg
leave
(bad)
retf
cmp
fcomp
xchg
fs
bound
jnp
repz
popf
xchg
movs
repnz
or
add
mov
mov
sub
mov
es
(bad)
xchg
shl
sbb
imul
retf
mov
sbb
dec
and
mov
leave
jmp
push
inc
adc
mov
movs
adc
push
pop
popa
pop
dec
sar
repz
shl
cmps
mov
retf
lahf
sub
xchg
jb
xor
pop
xor
loop
jnp
(bad)
fwait
push
(bad)
mov
(bad)
and
add
pusha
imul
adc
stos
loop
and
rcr
mov
sub
mov
mov
mov
push
in
mov
out
retf
xchg
sar
js
inc
sub
mov
adc
inc
ja
sbb
pop
fld
inc
or
push
and
stc
into
cmps
test
imul
push
psadbw
repz
in
push
adc
inc
cmp
fwait
xchg
sbb
or
adc
cmps
jae
jns
les
jge
in
test
stc
sahf
es
mov
adc
sbb
iret
(bad)
jp
or
pop
lods
aaa
jbe
mov
fsubr
dec
mov
cmp
jo
ja
jae
jg
pop
add
mov
add
adc
cmp
cmp
pop
in
ins
and
xchg
loope
aaa
mov
pop
test
out
in
jmp
pop
sub
movs
inc
or
neg
loope
in
(bad)
lods
int3
jbe
call
cs
(bad)
(bad)
mov
stos
stos
ds
xchg
push
push
aad
cmp
into
ret
sbb
fiadd
dec
imul
leave
clc
movs
retf
pop
push
push
mov
xchg
ret
xchg
ret
leave
out
ror
cli
dec
xlat
mov
jg
sub
cmps
xchg
in
ret
nop
cmp
sub
xor
ret
or
cs
inc
push
fisttp
sbb
xchg
push
cli
xchg
mov
mov
fcomp
sbb
daa
enter
in
sbb
add
push
sbb
clc
mov
jmp
cmp
sub
movs
adc
dec
ss
adc
or
inc
cmp
mov
shl
xor
xchg
inc
call
popf
(bad)
add
pandn
shl
pop
ror
fild
stos
mov
(bad)
sbb
push
xchg
int
stos
les
xchg
mov
push
sbb
mov
popa
fs
xchg
adc
push
push
loop
cli
cmp
hlt
jb
call
in
iret
adc
les
mov
pop
mov
or
inc
into
cwde
and
and
inc
mov
push
loope
adc
bound
add
stc
mov
enter
sahf
ins
xor
dec
arpl
add
mov
(bad)
jl
push
cmps
push
mov
xlat
sar
xchg
pushf
shr
sub
mov
sbb
push
jno
aad
fwait
adc
ret
jmp
je
imul
inc
hlt
xor
mul
fs
push
dec
pop
ds
icebp
scas
jp
or
pop
arpl
sbb
cli
cmc
movs
cmps
jbe
mov
xor
adc
cmp
pushf
nop
out
aas
xor
adc
xchg
sbb
fld
pushf
mov
cmc
jl
mov
and
enter
sbb
div
sar
xor
push
(bad)
xchg
xor
xchg
mov
fisttp
fistp
in
enter
cmp
and
jae
push
jnp
xchg
shl
cdq
nop
rcr
inc
inc
movs
pushf
mov
in
inc
js
gs
dec
and
jno
out
sbb
fnstcw
pmulhw
cdq
xor
call
jno
sub
ret
mov
jbe
pop
xor
out
mov
cwde
xor
jb
stos
inc
mov
xchg
pop
and
fmul
xor
pop
cmp
push
push
cmp
loopne
or
pop
retf
adc
adc
mov
lock
mov
inc
adc
aad
repnz
cmp
and
xor
enter
int3
jno
and
xor
cdq
mov
fsubr
fsub
and
and
nop
repz
call
loopne
pop
lods
pop
jo
das
or
dec
push
std
(bad)
pusha
mov
xchg
in
sbb
int
lea
outs
call
jle
xchg
popa
loop
pop
clc
loop
test
inc
fstp
mov
cli
and
push
dec
les
pushf
int
retf
lahf
pushf
inc
adc
jl
leave
mov
and
xchg
shl
jmp
xchg
iret
mov
fistp
pop
mov
mov
and
cld
sbb
sub
xor
addr16
cmp
fisttp
adc
in
sbb
adc
lea
call
cmovge
das
ret
je
mov
mov
movs
jl
adc
sub
out
movs
(bad)
movs
jmp
cmp
cld
ds
lods
mov
sbb
push
mov
mov
loopne
out
das
mov
in
daa
sbb
mov
aad
popf
hlt
repnz
sub
push
daa
lods
mov
mov
cmp
xlat
mov
in
int3
cwde
push
pop
sub
pop
loop
into
rol
pop
inc
ins
cmp
pop
ds
(bad)
push
inc
pop
mov
inc
popa
mov
dec
jne
cmp
add
mov
add
repz
mov
push
jnp
div
mov
dec
adc
and
or
pusha
pushf
cmp
inc
inc
in
push
mov
pop
shr
aam
xchg
mov
add
fdivr
loope
int
sub
pop
mov
pop
mov
inc
mov
fldenv
cld
push
sar
aas
xor
popa
pop
in
cmps
adc
leave
adc
cmp
or
pushf
repz
jle
scas
dec
adc
fcom
paddd
xchg
inc
into
mov
enter
and
pop
out
pop
or
test
fwait
mov
or
mov
cmp
mov
pop
mov
cmps
mov
dec
das
int
test
mov
js
or
imul
in
dec
push
cwde
sbb
pushf
ins
mov
aas
frstor
fisubr
fdivr
cli
fld
cdq
adc
test
in
adc
pusha
fld
mov
jns
fs
mov
fnsave
pop
inc
mov
fdiv
cmp
stos
add
mov
ja
adc
popf
sbb
cli
and
(bad)
inc
sbb
mov
int3
fstp
mov
sbb
ret
out
in
aaa
mov
ins
xchg
mov
bound
and
inc
fild
test
mov
fld
lods
cs
jnp
xchg
dec
call
movs
loop
cs
shl
in
inc
sar
and
lea
int
sbb
jle
repz
ins
mov
retf
mov
and
dec
pop
sbb
lea
das
mov
xchg
sub
cmp
mov
xchg
push
(bad)
add
mov
xchg
jo
xor
or
jg
and
movs
jmp
test
je
push
in
test
rcl
(bad)
xchg
retf
jmp
or
int3
movs
stos
pop
neg
fidiv
mov
scas
rcr
shl
out
sar
xchg
ss
add
xor
inc
dec
(bad)
ja
adc
xlat
test
mov
je
mov
dec
lods
add
mov
sub
inc
or
jle
std
jae
call
(bad)
jl
xchg
dec
jne
jmp
cmp
jmp
frstor
fcomp
jns
push
cmp
pop
pusha
dec
push
adc
clc
adc
pop
popf
adc
cmp
pop
loope
mov
fcmovnbe
sbb
dec
sbb
repnz
cs
dec
push
cmc
call
loopne
adc
ja
sub
rol
and
(bad)
in
add
in
cs
test
retf
imul
mov
and
in
add
js
enter
fiadd
sbb
mov
mov
idiv
int
or
cmps
imul
cld
cmp
mov
iret
or
mov
sbb
loopne
dec
out
fnsave
ror
xchg
jle
xchg
loop
call
outs
lock
jmp
mov
aaa
mov
push
rcl
pop
iret
cwde
adc
repnz
stos
cmc
inc
icebp
sub
pop
lds
les
enter
aam
xlat
pop
add
adc
out
mov
icebp
mov
cmp
movs
cmp
mov
mov
popf
es
sahf
mov
les
mov
pop
mov
or
mov
mov
aas
mov
out
pop
mov
pusha
pop
lods
iret
mov
xor
shl
fnsave
xchg
xchg
jg
sub
add
fadd
xor
cs
xchg
idiv
movs
xchg
jno
imul
(bad)
jb
sub
fucomp
or
pusha
jno
add
les
addr16
mov
stc
xchg
cli
xchg
and
cmovge
mov
das
rcl
ins
cmc
pop
imul
call
push
xor
and
into
(bad)
jge
outs
out
push
nop
xor
dec
fwait
or
and
or
outs
add
xchg
aas
test
mov
pop
and
mov
push
mov
add
sbb
pop
aas
mov
adc
ss
cld
sahf
mov
pop
jmp
not
rcl
mov
shr
arpl
push
xchg
pop
mov
icebp
and
fdiv
das
pop
gs
mov
scas
and
cmp
(bad)
and
dec
cmps
or
dec
jecxz
mov
push
mov
xor
xchg
adc
and
cmps
xor
sahf
faddp
mov
(bad)
outs
in
jecxz
sbb
xor
popa
dec
out
fidivr
push
dec
sahf
mov
ins
add
and
fild
leave
dec
loop
lods
xchg
push
xlat
adc
cwde
pop
inc
out
ss
push
cmovge
xor
call
outs
outs
cs
movs
(bad)
ss
fist
push
xchg
nop
es
mov
arpl
loope
iret
xchg
mov
ins
sbb
xchg
fadd
movs
xor
push
out
and
movs
inc
lods
add
sbb
(bad)
sub
push
jno
sub
dec
pop
or
xor
sbb
mov
out
shl
cmp
push
jae
outs
pusha
loope
sub
pop
cwde
dec
scas
shl
add
ins
ret
inc
jno
pop
sub
lahf
jg
(bad)
inc
cmp
push
adc
dec
stos
imul
mov
add
jno
adc
(bad)
repz
xor
cmp
ret
jecxz
sar
sub
popa
add
add
movhps
jnp
cmp
shl
ret
pop
test
mov
jno
mov
cmc
cmp
push
xchg
fdivr
and
or
mov
dec
pop
int3
jmp
enter
mov
pop
sub
add
cli
fs
int3
mov
mov
and
ret
jbe
and
jmp
adc
call
mov
in
add
stc
repnz
jg
aaa
pop
les
in
push
mov
iret
mov
retf
jns
cmps
leave
ret
mov
test
ins
js
jae
dec
outs
popa
inc
mov
shl
push
leave
cmp
mov
cwde
lea
test
fwait
movs
cs
xchg
call
mov
mov
cmp
add
cdq
xor
jmp
mov
test
dec
(bad)
xor
(bad)
addr16
aaa
jae
and
xchg
xchg
mov
rcr
cmp
mov
fbld
push
in
adc
mov
cmp
pop
ret
outs
sub
retf
mov
cdq
arpl
and
mul
or
in
out
cs
es
and
push
adc
pop
mov
or
sbb
mov
inc
inc
push
std
pop
in
cmp
adc
xchg
push
and
mov
mov
arpl
sub
sbb
xchg
mov
repz
cmp
inc
inc
pop
xchg
jmp
stos
push
sahf
jb
xor
jmp
pop
sub
xchg
sti
out
in
fidiv
neg
fadd
arpl
inc
mov
ds
mov
xchg
std
inc
out
(bad)
lahf
sub
js
ins
movs
and
enter
aas
sub
or
sbb
push
inc
jmp
add
jb
adc
sub
xchg
imul
inc
adc
scas
outs
popf
fld
jl
cmp
push
push
aas
jg
(bad)
aad
push
fnstenv
push
sbb
icebp
cmps
mov
div
pop
fistp
call
inc
pop
pusha
outs
xchg
outs
popa
mov
pop
push
or
lods
push
shr
loopne
mov
pop
aaa
mov
mov
ss
add
outs
jle
cmc
mov
inc
movups
cmp
dec
sub
adc
sbb
or
in
cmp
test
push
mov
mov
fcmovnbe
leave
xchg
xor
jo
inc
adc
cmp
mov
and
cmp
dec
aad
pop
stos
shl
cmc
cli
lahf
bound
push
cmps
cmp
jge
mov
push
add
aaa
mov
repz
add
movs
jmp
mov
js
div
stc
pop
div
dec
mov
repnz
mov
mov
sbb
or
xlat
(bad)
bound
push
mov
adc
and
and
ret
test
dec
repz
mov
ss
aam
fdivr
pop
in
mov
add
rcr
mov
jae
movs
mov
mov
popa
push
add
push
retf
jp
jbe
adc
xchg
pushf
js
loope
ins
and
jae
sbb
aad
or
loop
(bad)
mov
fs
and
cmp
xchg
and
and
lods
in
sahf
loope
int
popf
mov
test
mov
mov
pop
mov
push
je
inc
add
jge
cmp
stc
sbb
aaa
icebp
aaa
(bad)
sti
mov
dec
mov
push
pop
hlt
add
popf
mov
jb
mov
(bad)
test
push
xchg
push
adc
hlt
bound
mov
mov
jmp
push
push
xlat
lds
js
test
xchg
pop
in
mov
add
outs
jge
sbb
mov
dec
jecxz
mov
push
and
xchg
arpl
ret
and
add
lds
shl
cmp
mov
jg
es
mov
aam
shl
repz
or
push
gs
shr
(bad)
repnz
(bad)
xlat
push
sub
hlt
jns
inc
test
scas
jmp
popf
lods
(bad)
rcl
mov
inc
inc
clc
xchg
push
(bad)
out
xchg
cdq
int3
in
and
aas
cmp
jecxz
sub
rol
lods
in
pop
int3
jbe
and
sahf
mov
pop
nop
repz
inc
and
dec
adc
adc
(bad)
nop
cmp
xchg
sbb
adc
imul
mov
pusha
inc
or
cmp
push
stc
(bad)
repz
and
jmp
push
cld
inc
or
clc
in
mov
adc
js
jo
cmps
ret
call
push
mov
jo
popa
repz
mov
push
jle
xor
pop
pop
sub
inc
hlt
ds
fsubr
shl
mov
call
mov
push
dec
ss
(bad)
inc
fwait
int
push
ins
add
pop
xor
iret
adc
pop
test
cwde
sar
add
cmp
jl
mov
clc
popa
pop
inc
dec
or
das
and
aam
outs
jmp
xchg
lods
mov
test
mov
mov
adc
jle
es
enter
out
mov
jmp
mov
cmp
data16
push
dec
(bad)
and
xlat
sub
ds
jg
cmp
mov
icebp
pop
pop
out
pop
ret
adc
pop
mov
push
test
hlt
push
push
and
mov
popa
jns
cmp
xchg
addr16
aas
mov
call
fist
push
mov
xlat
mov
lahf
out
call
add
pop
sbb
aas
ins
(bad)
subps
test
stos
call
lods
stc
mov
out
aam
jb
pop
stc
lods
sub
mov
push
std
dec
popa
outs
(bad)
nop
movs
arpl
(bad)
dec
pop
push
xchg
int
(bad)
dec
cwde
or
mov
lock
xor
or
lds
push
cmp
nop
add
repz
iret
dec
cmps
lock
mov
mov
not
xor
jge
pop
and
imul
fsub
add
adc
add
(bad)
dec
lods
xchg
fs
sbb
mov
lock
pusha
mul
pop
and
and
adc
int
push
inc
pop
or
pop
mov
ror
scas
push
add
cmp
dec
push
aam
jmp
jge
add
add
xor
xchg
pop
into
punpcklwd
or
mov
imul
cmp
pop
sub
jo
shr
cmc
fbstp
inc
arpl
dec
push
ins
sbb
(bad)
repz
daa
outs
cld
std
iret
or
cld
mov
cmps
jmp
in
or
dec
jmp
ret
inc
mov
dec
push
popf
mov
add
retf
sbb
es
retf
mov
ja
dec
sahf
mov
jmp
rol
inc
sub
stos
int
cmp
cdq
jno
jns
mov
sahf
aad
hlt
and
fadd
mov
and
repnz
and
fidivr
or
daa
fld
mov
or
(bad)
adc
jae
cmp
xchg
jo
xchg
mov
idiv
addr16
repz
xor
jl
mov
dec
mov
and
mov
retf
inc
nop
sar
or
sahf
add
shl
and
repnz
cmp
ret
xchg
gs
arpl
add
and
lods
lock
inc
ja
test
dec
push
adc
in
sbb
ja
dec
shl
sbb
cmp
mov
xor
push
push
or
or
rcl
mov
nop
test
stc
inc
xchg
cwde
mov
xchg
sub
add
out
add
push
mov
and
inc
lea
enter
frstor
sbb
and
xchg
das
and
pop
adc
adc
sbb
(bad)
sbb
sbb
push
or
pop
aas
xchg
sbb
sub
jb
xchg
sub
aas
xchg
fld
popf
cmp
add
cmps
in
out
mov
cmp
pop
sbb
mov
pop
js
cmp
aad
mov
into
aaa
lock
imul
les
mov
aad
test
add
mov
test
repnz
inc
cmp
push
pop
jle
repnz
out
stos
cwde
push
add
in
push
xchg
inc
sub
push
cmp
ds
call
cli
out
movs
xchg
sbb
inc
adc
jp
fisttp
out
push
mul
outs
popa
and
fs
aam
retf
or
cmp
jp
rcl
push
jg
fs
(bad)
aas
dec
stos
shr
retf
jge
push
add
dec
mov
jmp
mov
sti
(bad)
sbb
pop
xor
(bad)
cmc
sub
outs
dec
cmp
dec
lods
push
(bad)
pop
cmp
push
arpl
add
pop
lahf
jae
sbb
xor
jg
lods
out
add
ret
cli
int3
pop
push
mov
call
or
dec
jp
jne
pop
or
ja
mov
hlt
dec
movs
leave
loope
cmp
ins
sti
mov
shl
pop
aas
inc
sub
and
cmp
dec
mov
arpl
cmp
xchg
inc
lea
ror
fmul
(bad)
mov
push
rcr
xor
lods
mov
cmp
in
push
je
dec
xchg
lods
dec
mov
fild
rcl
adc
loop
or
shl
push
lock
sahf
les
sub
pop
rol
stc
dec
xchg
pop
imul
cmp
mov
ja
loope
sub
jns
dec
out
movs
mov
adc
or
dec
jecxz
cmps
call
dec
xchg
cmp
stos
mov
stos
daa
sbb
mov
call
cld
(bad)
pop
jo
test
popf
repnz
nop
test
pop
xor
(bad)
and
push
xchg
popf
sti
mov
cli
jge
xor
ds
cld
cmp
inc
imul
cmp
cmc
shr
jmp
sbb
sub
ss
xchg
mov
rcl
mov
dec
xchg
mov
mov
pop
add
(bad)
nop
xor
jne
pushf
cwde
stos
cmp
jo
fcom
inc
data16
pop
retf
scas
xor
add
jo
(bad)
call
xor
adc
ss
xor
movs
popf
popa
aaa
jl
xchg
outs
stc
data16
add
push
test
outs
repnz
mov
pop
mov
push
(bad)
sbb
sbb
sub
ins
neg
sub
sub
(bad)
or
mov
mov
pop
imul
in
cli
pop
out
xor
adc
(bad)
hlt
dec
mov
mov
jmp
pop
jmp
jae
iret
hlt
adc
xchg
mov
sub
xor
cmp
fisttp
xor
xchg
int
push
jmp
mov
rcl
cmp
paddw
push
lods
bound
test
xchg
enter
push
mov
lods
jnp
imul
jb
pop
pushf
jo
xchg
push
add
pushf
sbb
adc
xchg
sti
in
mov
cmc
data16
xor
dec
(bad)
scas
xor
mov
out
sub
daa
push
aas
mov
aam
ror
retfw
popf
mov
add
push
movs
in
mov
jae
pop
and
jnp
shl
pop
loop
add
lds
lds
es
fsub
inc
inc
xor
cmp
loop
mov
js
daa
add
lds
or
jmp
jmp
and
pop
xchg
adc
sub
or
xor
in
and
mov
in
jo
(bad)
fild
dec
mov
jne
mov
add
mov
push
inc
fs
mov
call
test
fnsave
inc
push
test
scas
mov
add
dec
sub
repnz
rcr
mov
jo
scas
pop
call
push
dec
cmp
and
(bad)
push
push
xor
jno
mov
adc
fisub
pop
aas
mov
pop
push
xor
fdivr
outs
jl
rcl
cmps
bound
fidiv
add
push
xchg
dec
outs
mov
ja
fsub
fs
xor
sti
xor
retf
repnz
sbb
in
mov
cmps
cmp
aaa
dec
bound
cld
push
jge
push
inc
sub
jno
jno
and
mov
inc
(bad)
imul
add
pop
jae
fistp
int
clc
sti
repnz
lahf
(bad)
fsub
inc
xchg
ror
push
jmp
xlat
cmp
lds
sub
sar
xor
loop
mul
adc
pop
nop
mov
xor
push
lock
fmul
pop
gs
int
in
mov
cwde
pop
jo
add
dec
mov
sub
test
sbb
mov
movs
and
cmc
xchg
mov
sbb
in
xlat
dec
movs
push
jno
dec
aam
mov
repz
rep
jmp
hlt
cs
imul
rol
jmp
and
pop
push
push
mov
mov
lds
(bad)
out
(bad)
xchg
mov
stos
in
scas
lock
inc
mov
or
(bad)
es
lds
in
dec
jge
pop
das
sub
sbb
gs
sbb
xor
in
sbb
in
jb
ss
sub
push
pop
imul
sti
das
popf
and
ja
xor
pusha
add
aas
mov
pop
movs
push
dec
sub
sub
in
pusha
cwde
mov
test
dec
inc
mov
add
xchg
ret
xor
add
add
loopne
aad
aad
and
rcl
ja
sbb
mov
dec
scas
test
test
and
pop
mov
shl
mov
into
stos
test
rcl
aam
pop
push
dec
add
ror
dec
mov
ret
mov
pop
jg
nop
jne
fcom
mov
add
add
movs
or
mov
pusha
jge
xchg
in
inc
scas
and
mov
ss
push
(bad)
out
into
out
push
add
mov
xchg
xchg
aaa
jmp
or
xchg
stos
sar
fs
dec
ret
inc
jp
test
push
adc
fdiv
xor
mov
les
gs
sub
rcr
xchg
aad
fmul
mov
sbb
jne
repnz
(bad)
xchg
inc
mov
jae
sbb
mov
(bad)
(bad)
jno
dec
mov
add
sbb
sti
and
sub
or
in
outs
(bad)
jo
and
mov
cmp
(bad)
movs
(bad)
std
cmc
adc
cmps
in
add
test
popa
neg
es
(bad)
sbb
aam
hlt
sbb
cmp
out
jnp
lahf
pop
or
sbb
push
xchg
jb
outs
fild
fbld
or
lds
ret
adc
add
xchg
pop
jle
and
test
push
sar
cmps
jmp
mov
cmps
mov
or
vmovd
push
aaa
lds
mov
sbb
dec
push
mov
sbb
or
mov
lahf
js
mov
aaa
dec
es
nop
daa
gs
call
ret
jb
daa
mov
dec
nop
mov
cmp
das
test
les
iret
das
adc
test
ret
push
stc
sti
mov
xlat
scas
test
jmp
sbb
out
imul
imul
and
popa
ss
pop
dec
push
fxtract
shl
sahf
mov
pop
sub
mov
fiadd
popf
(bad)
or
ret
retf
in
pop
xchg
xchg
popa
repnz
adc
pusha
aad
jbe
arpl
pop
js
dec
dec
inc
or
(bad)
icebp
fistp
add
shl
cld
das
cmp
jp
loop
adc
cdq
in
in
sahf
pop
mov
les
push
add
inc
cmp
or
mov
mov
sub
sub
dec
xchg
add
adc
push
test
inc
das
jo
pusha
fwait
(bad)
push
or
aaa
call
(bad)
in
or
mov
mov
mov
lea
xchg
inc
push
sti
or
dec
aad
pop
imul
fldcw
outs
in
cmp
jb
repnz
ret
popa
in
jmp
sub
jo
je
stc
jnp
out
ss
push
add
pusha
(bad)
sub
gs
sti
inc
into
mov
mov
sub
dec
and
mov
fistp
sar
fiadd
jge
aam
bound
imul
mov
and
test
inc
fdivr
out
ret
xchg
int3
ror
repz
mov
hlt
add
add
or
test
inc
adc
or
jle
ds
mov
jb
adc
cs
int
push
adc
inc
aaa
mov
push
pop
mov
test
imul
jmp
xchg
aad
dec
pop
mov
xchg
xor
fild
pop
sahf
cmp
loopne
jmp
cmp
adc
daa
aad
call
push
iret
mov
inc
cmp
mov
xchg
and
sar
mov
jge
dec
mov
shl
xor
jmp
sti
jl
mul
call
das
fsub
push
or
or
mov
sub
imul
jle
pop
shl
mov
retf
fimul
dec
xchg
mov
mov
jo
aad
out
data16
das
scas
stos
jmp
mov
and
and
and
in
shl
dec
fstp
mov
(bad)
es
fild
or
jecxz
pop
mov
mov
out
and
pop
daa
ficomp
push
adc
push
es
sub
cwde
shl
ficomp
fld
jnp
push
cmp
cld
shl
adc
sub
cli
jmp
call
sub
xor
lahf
jecxz
retf
or
push
xchg
jle
lea
mov
dec
loope
rol
or
test
pushf
cmp
sub
cmp
cmp
pop
or
(bad)
dec
imul
add
dec
jb
pop
scas
jg
inc
inc
sti
cmp
xor
xchg
mov
mov
push
test
adc
inc
or
test
pop
jns
cmp
(bad)
es
mov
sbb
or
pop
aas
add
mov
fxch
cmp
add
inc
fsubrp
imul
call
sbb
pop
fdiv
sti
in
push
ror
dec
sbb
(bad)
jne
cli
int3
jmp
nop
dec
push
and
popf
sub
cmp
jle
adc
retf
push
push
jns
arpl
xchg
repnz
push
nop
retf
mov
(bad)
test
loop
iret
add
(bad)
sbb
fnclex
pop
fadd
retf
mov
pop
mov
dec
std
adc
mov
neg
cmp
sub
push
test
adc
jmp
ds
test
mov
cmp
cwde
lods
sub
fnstcw
inc
cmp
popf
std
out
mul
jg
idiv
mov
sub
lock
and
cs
sahf
ret
mov
clc
and
xor
loope
pop
mov
mov
jae
push
sbb
retfw
or
pop
xor
xchg
dec
fdivr
xchg
jbe
call
in
into
leave
loopne
inc
inc
xor
mov
inc
(bad)
cmc
sbb
nop
sbb
mov
sub
xchg
xchg
add
fmul
lea
pop
xchg
aad
mov
inc
imul
ss
stos
jle
mov
cwde
xchg
bound
lock
ds
pop
iret
jl
fsubr
out
mov
xchg
jns
push
ins
loopne
repz
les
lea
jmp
pop
push
xchg
add
stos
in
(bad)
fbstp
push
and
jecxz
hlt
mov
stos
sbb
dec
mov
adc
popf
pusha
sbb
into
popa
adc
jmp
xor
(bad)
fistp
lods
sbb
movs
call
ss
add
mov
sub
jp
sub
(bad)
aad
out
imul
jg
dec
jmp
stc
xchg
pop
icebp
cmp
sub
add
adc
shr
inc
and
in
gs
add
mov
inc
rcr
out
je
clc
mov
pop
imul
pop
inc
jecxz
xchg
aam
mov
into
in
fsubr
daa
es
sbb
scas
inc
cmps
repnz
fsubr
call
pop
push
data16
jbe
(bad)
retf
pop
jae
and
ins
lods
inc
cmps
cmps
mov
scas
mov
hlt
adc
lods
enter
jb
jbe
repnz
cmp
jle
cmps
mov
dec
mov
xlat
ret
push
push
repnz
dec
mul
sub
or
add
(bad)
cmp
fld
pop
jmp
out
adc
and
pop
sub
xor
or
(bad)
dec
add
iret
test
call
add
push
jo
mov
out
cmp
and
mov
pop
and
sub
sub
pop
sub
sub
loop
nop
push
push
shr
fnsave
scas
inc
(bad)
sar
rol
or
mov
xchg
and
outs
jb
mov
jle
sahf
ins
ins
or
and
sahf
inc
mov
adc
scas
adc
aas
je
vpsubb
inc
sub
aam
repz
or
jne
jg
in
cmp
gs
mov
enterw
or
movs
not
dec
jo
imul
xchg
mov
or
rol
(bad)
sti
mov
cmp
shl
js
adc
mov
sbb
iret
movs
push
sti
lahf
stc
leave
jg
push
scas
adc
loope
push
fisub
test
adc
les
jecxz
scas
mov
add
xchg
mov
pop
jbe
cwde
adc
inc
sub
cmps
add
fstp
mov
out
xchg
(bad)
stc
xchg
inc
in
adc
cmp
jmp
ficomp
call
scas
add
and
xchg
ja
fstp
dec
and
add
xchg
out
pop
in
jg
mov
sbb
(bad)
fdiv
bound
lea
les
fsubp
mov
inc
inc
neg
retf
pop
add
enter
add
js
mov
fwait
pushf
stc
mov
daa
repnz
adc
cdq
mov
add
ret
call
and
xchg
jg
add
outs
repz
jo
ficomp
mov
or
inc
stos
aam
popf
inc
arpl
loop
sbb
add
inc
mov
lods
and
icebp
push
nop
fsubr
sub
movs
scas
fbstp
xchg
xchg
xor
jno
jmp
ins
movs
push
fist
xchg
hlt
adc
adc
das
add
aad
sbb
xlat
dec
es
hlt
(bad)
imul
pop
lock
and
call
test
or
fnstsw
aaa
cmp
cmp
xor
and
or
xchg
aad
cmp
add
jo
pushf
cmps
push
xlat
jnp
cmp
dec
bound
jnp
jmp
stos
iret
jno
int3
mov
(bad)
xor
sti
icebp
xor
dec
inc
retf
push
les
xchg
add
mov
std
dec
wbinvd
xchg
jl
mov
in
mov
jb
rcr
cmp
xlat
das
cmp
in
cld
add
sbb
fisubr
arpl
mov
pushf
cmp
jns
cmc
sub
adc
sbb
cwde
or
inc
mov
fisubr
les
jmp
bound
mov
mov
inc
stos
push
pop
add
cmp
sub
hlt
mov
cmp
imul
out
bound
mov
das
mov
fcom
push
pushf
loopne
jge
loope
sbb
mov
and
inc
xchg
and
pop
jecxz
lahf
or
cmp
jg
pop
fistp
jp
pushf
clc
call
stc
sub
and
mov
pop
imul
sub
iret
cmc
adc
dec
es
in
cwde
mov
mov
xchg
xlat
inc
iret
push
push
in
push
in
lock
loope
dec
ins
mov
das
mov
jb
into
mov
push
jl
xor
daa
int3
add
pop
inc
mov
int
mov
je
mov
cmps
xor
movs
test
cmp
jge
out
sbb
fild
inc
je
sar
mov
xlat
ins
cmp
retf
xor
jecxz
mov
rcr
outs
lea
scas
cmps
enter
sbb
push
mov
hlt
out
loope
xor
mov
sahf
movs
add
push
(bad)
lods
nop
add
mov
or
mov
clc
fs
xchg
mov
bound
inc
dec
xor
test
mov
sti
cmp
xchg
add
fs
cmc
mov
mov
adc
shr
mov
mov
mov
or
(bad)
pop
test
cmp
mov
jb
pop
cmp
push
pop
iret
inc
and
dec
scas
sub
imul
dec
stos
push
push
pop
out
jne
repz
in
cli
loop
(bad)
rol
lock
cmps
pushf
dec
pop
mov
dec
jl
les
add
xchg
mov
pop
sub
frstor
jne
push
mov
cld
jb
call
(bad)
lods
call
and
adc
sub
ss
cwde
out
ret
arpl
int3
jp
loope
retf
daa
mov
outs
jb
lock
mov
sbb
into
retf
call
push
imul
sub
fnstsw
mov
pop
cmc
or
add
add
push
sbb
test
movs
into
mov
sub
lock
jl
dec
mov
pop
test
cmp
and
loopne
jnp
je
and
xchg
cmp
lock
push
pop
mov
inc
ret
add
sbb
test
ret
(bad)
call
aad
dec
pop
lock
inc
jnp
xor
mov
mov
sbb
cmp
icebp
sub
push
sub
mov
stc
(bad)
dec
or
mov
icebp
push
push
cmp
scas
jae
mov
call
dec
outs
push
adc
xor
add
push
nop
gs
jnp
aas
and
lods
cmps
dec
(bad)
rol
lock
mov
mov
imul
aad
jne
jge
jmp
xor
mov
ja
mov
pop
mov
push
sbb
mov
mov
xlat
sub
mov
add
or
jbe
cmp
cli
or
jmp
loope
push
pop
cmp
inc
(bad)
test
xor
test
test
lock
jge
ds
push
jnp
push
fwait
outs
mov
das
hlt
or
mov
mov
sbb
xchg
and
stos
sub
mov
pop
scas
mov
in
xchg
test
jnp
xchg
das
aam
adc
sbb
adc
mov
scas
(bad)
jnp
arpl
push
fdivr
dec
cmp
pop
or
gs
scas
je
mov
push
mov
aad
and
in
(bad)
call
ret
retf
dec
imul
retf
add
push
sti
mov
xchg
sub
jbe
add
push
jo
or
js
xchg
mov
xchg
pop
shl
mov
movs
loop
aam
push
push
fsub
mov
addr16
pop
inc
mov
sbb
scas
je
ss
mov
gs
lahf
mov
jecxz
push
mov
lea
mov
push
shl
mov
mov
mov
aaa
mov
or
rol
je
les
pop
mov
dec
jb
pusha
les
xchg
cli
push
retf
cmp
ss
pop
dec
sahf
xor
mov
lahf
out
mov
xchg
dec
adc
dec
xor
mov
lds
pop
xchg
out
push
ja
(bad)
xchg
xchg
pop
and
cmp
stc
adc
sbb
mov
and
aad
xor
push
into
xchg
test
fwait
jnp
outs
fistp
pop
fidiv
shr
mov
outs
or
mov
inc
outs
sub
test
retf
mov
cmp
sub
sub
stos
pop
sbb
pop
ss
xor
push
cmps
sti
ins
pop
jle
cmps
mov
xor
stos
inc
mov
aaa
inc
cmp
fild
pop
(bad)
fadd
sub
out
shr
(bad)
push
or
and
or
mov
in
pop
sbb
mov
push
and
clc
mov
mov
jns
inc
mov
xchg
sahf
push
loop
retf
cli
and
std
icebp
pop
repz
mov
xor
into
xchg
dec
rol
clc
sub
test
movs
stos
iret
mov
push
loope
jb
xor
pop
sbb
cmp
mov
sbb
clc
retf
ins
mov
push
add
sti
(bad)
pop
shl
push
dec
push
fidivr
add
(bad)
daa
lds
js
lahf
mov
iret
or
pop
es
pop
sub
and
jge
test
or
scas
popf
js
in
adc
inc
jg
repz
xor
pop
ss
xchg
jo
mov
arpl
mov
xchg
ret
sub
lods
lock
adc
jecxz
sbb
xchg
in
xor
xchg
je
int3
movs
sub
cmp
xor
xchg
inc
ins
loopne
mov
jmp
or
jl
pushf
pop
xlat
pop
mov
stos
sti
fcom
into
or
xor
movs
call
and
fcom
data16
out
leave
movs
ja
mov
pop
out
pop
mov
push
adc
outs
(bad)
sbb
mov
mov
mov
pop
movs
test
mov
or
loope
jb
mov
or
dec
jmp
dec
push
pop
nop
(bad)
out
in
jmp
in
adc
(bad)
shl
inc
fnstcw
int
(bad)
and
pushf
ja
and
loop
jnp
out
pop
dec
jne
ror
and
les
fcom
mov
mov
jmp
ret
and
xor
movs
call
jbe
daa
sbb
cld
aas
mov
dec
ret
adc
cmp
ds
mov
in
lock
mov
or
inc
dec
mov
sub
shl
movs
imul
mov
cmps
adc
ret
sub
xchg
aam
cmp
(bad)
mov
rol
xchg
daa
cli
outs
into
sbb
push
cld
jo
rol
mov
adc
push
mov
mov
cmp
or
ss
sbb
shl
jb
mov
lea
pop
shr
mov
xor
mul
std
stos
xor
repz
dec
pop
sub
push
and
jle
inc
fdivr
push
and
lods
add
sti
sub
mov
sub
movs
adc
movs
(bad)
daa
jbe
push
fbstp
inc
add
mov
push
(bad)
retf
outs
rcl
repnz
push
pop
push
dec
gs
ret
jle
jb
ret
mov
cmp
cmp
or
fwait
movs
cmp
les
adc
push
and
(bad)
stos
or
lods
sti
dec
clc
jp
mov
and
jmp
sahf
inc
inc
rcr
dec
in
sbb
test
test
test
push
jns
iret
add
xchg
push
das
push
out
sbb
pop
loope
dec
jns
es
jl
pop
test
cmps
push
push
test
pop
mov
in
fild
pop
and
jge
pop
sbb
pop
pop
xor
popf
xchg
movs
sub
mov
aad
jmp
add
pusha
outs
fdiv
xlat
jnp
call
dec
aad
xchg
repz
or
xchg
xlat
push
pusha
cs
out
stc
pop
sbb
mov
push
fnstenv
mov
jo
pusha
inc
mov
mov
or
cs
into
sub
inc
mov
aas
inc
or
adc
dec
cmp
dec
(bad)
sar
hlt
xor
dec
fst
lea
xor
mov
out
adc
arpl
test
mov
pop
repz
sbb
pop
xchg
jg
mov
into
and
xchg
daa
inc
jbe
mov
pop
dec
mov
aad
int
mov
test
cmp
jmp
test
sahf
push
ret
push
lods
pop
rcl
hlt
xchg
jnp
push
adc
ja
inc
push
scas
push
std
cmp
jo
add
cmps
ficomp
push
mov
jae
mov
test
push
scas
jg
ret
aam
mov
fnstcw
outs
dec
sub
jbe
cld
inc
lahf
mov
dec
(bad)
add
scas
clc
sti
xchg
cmp
push
ins
sbb
jmp
jae
mov
adc
mov
fstp
xchg
test
mov
xor
jle
pop
adc
repnz
stos
hlt
and
in
xor
fist
lods
and
pop
call
xor
cmp
pextrw
xchg
sti
sahf
inc
(bad)
mov
inc
mov
inc
mov
cmp
into
mov
jmp
and
mov
xchg
jmp
pop
rcl
in
rcl
ret
lock
jg
ins
nop
test
xchg
mov
(bad)
in
pop
sub
add
cmp
xchg
fidiv
lock
and
inc
mov
loope
in
jg
mov
adc
jecxz
add
es
mov
push
mov
cmp
cdq
test
inc
addr16
inc
sbb
mov
je
jg
xor
pop
inc
pushf
cdq
nop
(bad)
pushf
xlat
repnz
fwait
dec
stos
inc
xor
mov
cld
lock
and
jbe
inc
cmps
adc
arpl
in
cli
movs
lods
mov
xor
es
sbb
cmp
push
cmp
mov
shl
cld
repnz
repnz
sbb
(bad)
xor
jp
lahf
(bad)
std
mov
sub
xchg
popa
and
and
dec
ss
out
pop
dec
sahf
sub
repnz
ss
pop
mov
(bad)
gs
mov
pop
call
adc
stos
xor
leave
retf
pop
shr
jle
js
mov
lods
mov
jge
sti
mov
jne
jne
clc
jp
mov
pop
sub
call
pop
test
jno
cmps
sbb
bnd
movs
outs
pop
mov
(bad)
lods
push
xor
stos
cmp
add
pop
mov
(bad)
fwait
in
mov
sbb
push
ret
push
add
push
pop
mov
mov
xchg
xor
mov
cmp
shr
xor
test
xchg
sar
ins
rcl
(bad)
es
mov
or
cmc
dec
int
adc
sbb
sbb
and
rol
aaa
xchg
in
cld
movs
retf
inc
retf
or
xchg
outs
pop
push
stos
mov
or
iret
ja
push
cmp
daa
test
push
cli
mov
mov
out
popa
jo
xchg
adc
and
mov
push
and
mov
daa
sbb
bswap
test
fsubr
in
fmul
xchg
push
outs
mul
ss
mov
adc
mov
push
jmp
gs
add
lea
inc
stos
mov
ret
fsub
mov
cmp
mov
jl
xchg
push
sbb
xchg
rol
cmp
mov
dec
pop
sbb
jae
adc
pop
in
mov
lods
loope
sub
push
dec
ds
dec
and
pop
mov
les
inc
push
sub
popa
push
test
cli
inc
imul
mov
or
push
rcr
push
xor
push
xchg
xchg
mov
lahf
and
pop
sub
fcomp
mov
mov
xor
mov
test
xor
cli
in
cdq
jmp
add
dec
xor
pop
ffreep
cli
xchg
hlt
aad
mov
mov
scas
mov
xchg
fild
push
inc
arpl
aaa
test
cmp
cli
les
cmps
gs
rol
jle
xor
jb
movs
adc
inc
jl
adc
xchg
imul
stos
in
inc
out
loope
imul
aas
and
and
pop
(bad)
jae
and
imul
ret
jno
retf
aad
out
mov
(bad)
jge
and
(bad)
xchg
sbb
adc
dec
shl
jecxz
sbb
ret
jnp
(bad)
sbb
pop
cmp
mov
add
adc
and
mov
lock
inc
nop
dec
mov
and
sbb
mov
shr
inc
jae
addr16
lods
or
mov
retf
dec
xor
xchg
jnp
leave
ret
data16
xor
add
inc
xchg
clc
cmp
dec
or
mov
cmc
mov
jle
pop
cwde
(bad)
aaa
jmp
das
and
or
dec
fld
push
xchg
adc
inc
adc
pop
in
and
push
in
pop
mov
imul
lds
mov
push
sbb
pop
xchg
fdivr
add
dec
ficomp
call
add
out
sub
mov
mov
xchg
or
aaa
or
xor
add
xor
mov
repnz
nop/reserved
aas
rcr
int3
(bad)
mov
movs
cmp
pushf
pop
and
push
xchg
mov
cmp
push
jle
sbb
test
cmp
jns
(bad)
or
cmps
(bad)
pop
out
add
mov
nop
inc
and
push
int
sbb
arpl
push
retf
nop
aaa
lds
adc
outs
inc
retf
pop
stos
pop
(bad)
mov
cmp
ins
repz
dec
movs
cli
(bad)
sbb
in
push
push
mov
shl
stos
pop
sub
push
cmp
fsubr
sbb
int3
sbb
inc
pop
sbb
sahf
mov
push
xchg
push
mov
icebp
sub
xor
or
loopne
fwait
jo
sbb
test
popf
sbb
sub
lods
mov
jbe
or
(bad)
fmul
add
mov
retf
in
sub
jmp
retf
test
ficomp
je
cmp
xor
inc
and
jno
jb
call
lds
jb
inc
inc
push
retf
call
xchg
mov
loopne
loope
loope
push
pop
mov
add
xchg
dec
rol
mov
call
mov
call
fnsave
jns
shl
arpl
call
lds
cmp
sub
sar
in
js
bound
jae
mov
jne
jno
sbb
lds
xchg
cmc
push
cmps
mov
mov
mov
push
jns
cdq
xor
pop
pop
and
add
pop
test
adc
jbe
xchg
scas
mov
mov
mov
in
add
cld
cld
aam
or
pop
loopne
xchg
fwait
cli
enter
cmp
bt
adc
jg
ret
cs
xchg
dec
jmp
cmc
addr16
out
adc
push
jg
test
rcr
and
ds
mov
dec
rol
ins
ja
sbb
inc
(bad)
sub
mov
push
shl
js
add
and
add
ds
xchg
adc
in
std
lods
push
out
or
gs
nop
es
pop
mov
mov
lock
and
and
fsubr
pusha
lock
inc
cmp
aam
stc
pusha
sub
inc
dec
movs
push
cmp
adc
mov
adc
in
xor
mov
fisttp
dec
test
lahf
push
loopne
mov
add
call
mov
(bad)
push
and
lods
sahf
dec
mov
jb
out
dec
test
aam
cli
sub
lahf
movs
push
ds
scas
sub
or
retf
fisub
(bad)
jmp
jecxz
pushf
stos
pusha
sbb
dec
adc
and
mov
xchg
jae
mov
pop
into
and
in
mov
add
inc
call
aaa
nop
and
xchg
popf
stos
popa
add
add
mov
inc
lock
or
and
jne
mov
mov
xor
test
ret
mov
int
mov
adc
fimul
data16
leave
jecxz
dec
ss
mov
pop
cs
jne
jg
movs
fistp
out
fs
sbb
cmp
mov
push
es
inc
je
pushf
sbb
pop
lds
or
mov
out
inc
jb
retf
vpaddsw
mov
sbb
je
sub
aam
mov
sub
test
fwait
or
push
mov
fist
add
cmp
mov
or
xchg
ins
jo
mov
mov
aaa
jbe
jle
loop
pop
es
ss
add
or
sub
mov
or
pusha
xchg
dec
push
sar
dec
sti
addr16
test
iret
sub
aad
test
test
cmp
add
stos
push
xchg
pop
jne
(bad)
inc
xchg
jmp
dec
call
je
aaa
ins
lds
dec
adc
inc
fdiv
pop
xor
in
lods
lahf
adc
fsubr
scas
pusha
ja
das
outs
ins
adc
cmp
inc
inc
inc
adc
mov
nop
in
mov
test
jg
mov
loopne
mov
cwde
retf
and
xor
mov
sbb
jmp
cmps
xor
nop
enter
jge
cld
js
xchg
jbe
xchg
lds
add
div
dec
and
sub
push
in
inc
mov
dec
push
sub
mov
les
out
cdq
mov
stos
cwde
nop
xchg
mov
jnp
add
jmp
sub
es
jne
out
add
fisttp
dec
pcmpeqd
mov
adc
xchg
call
movs
ds
sbb
inc
adc
fnstsw
retf
out
loope
js
cmp
jmp
jns
xor
cdq
test
popa
cdq
mov
mov
not
call
xchg
ins
pop
stos
fisubr
xor
outs
sti
jb
call
lds
rcl
mov
nop
(bad)
mov
or
ins
xor
inc
pop
jmp
daa
push
hlt
aad
in
xor
ins
sub
es
(bad)
mov
jmp
pop
and
cmp
push
xor
xor
pop
add
(bad)
stc
inc
outs
inc
inc
in
fld
test
xor
cmp
fisttp
xchg
adc
test
and
es
pop
push
stos
out
push
mov
fwait
into
jmp
jmp
push
and
test
loopne
xchg
out
push
xor
repnz
pop
xor
pop
ds
jae
hlt
clc
mov
pop
push
mov
repnz
mov
es
pop
xlat
retf
psubq
outs
je
mov
push
shr
movs
sub
fcmovu
das
ror
dec
nop
js
mov
imul
jp
pushf
jnp
in
push
mov
xchg
das
shr
mov
mov
sbb
inc
hlt
mov
jmp
aaa
push
jecxz
jp
in
mov
and
add
rol
cwde
mov
nop
ins
or
movs
adc
mov
sub
xchg
sbb
pop
jae
loop
ja
push
mov
in
int
in
inc
jne
test
or
or
xor
push
cld
lods
jbe
ja
mov
ins
jge
adc
xchg
adc
rcr
cmp
data16
cld
add
xchg
out
pop
js
sbb
ds
mov
xchg
xchg
ds
xor
shl
mov
dec
out
xor
xchg
stos
fild
jae
adc
and
fnstenv
ins
cmp
sub
mov
mov
or
adc
loopne
push
lods
mov
push
sub
dec
dec
sub
cmp
and
ins
xlat
fst
pop
xor
jg
mov
inc
inc
jae
push
add
pusha
sti
push
outs
push
std
pop
call
in
mov
mov
add
fs
dec
in
icebp
fcomp
mov
add
int
xchg
push
cmp
xchg
fiadd
jo
(bad)
(bad)
dec
adc
outs
and
xchg
inc
mov
pop
(bad)
fst
(bad)
sbb
mov
sub
pcmpeqd
inc
and
xchg
sbb
dec
aam
mov
test
popa
mov
cdq
call
xchg
pop
pop
pushf
popa
enter
in
lods
enter
mov
fs
outs
out
arpl
sub
ja
std
test
lahf
or
mov
dec
or
bound
push
call
inc
rcl
xlat
mov
mov
mov
test
bswap
imul
xchg
xlat
pop
ss
cmp
data16
inc
sub
call
sbb
shl
loope
sub
outs
dec
jo
jb
aam
mov
mov
fbstp
outs
pop
xor
jbe
mov
inc
sbb
jl
jae
mov
lods
sbb
cmps
retf
jp
and
mov
(bad)
int
repnz
outs
add
mov
pop
adc
sub
mov
dec
or
adc
in
or
push
fwait
pop
int
rcl
dec
jmp
in
jns
pop
cmp
cmps
or
mov
popa
aad
mov
inc
adc
push
mov
shr
cmp
out
xor
lds
in
aaa
mov
inc
rcr
movs
pop
jmp
xchg
jmp
data16
and
xchg
adc
and
scas
jg
shr
mov
fs
inc
into
in
sub
fisttp
push
fist
pop
setb
mov
mov
cmp
ret
jecxz
movs
fimul
sbb
xor
cmp
(bad)
call
jno
xor
inc
pop
xchg
cdq
jle
retf
pop
rcl
adc
out
jle
fidiv
or
nop
pop
dec
lods
pop
lahf
neg
retf
mov
loope
pop
retf
mov
push
inc
xor
or
ja
fidivr
dec
adc
dec
inc
cmps
push
or
dec
mov
jge
aaa
inc
mov
(bad)
push
fldenv
sub
fwait
outs
sub
push
cmp
arpl
retf
push
fisubr
add
cld
dec
adc
lods
and
(bad)
iret
push
call
popf
push
inc
fwait
push
scas
or
mov
or
call
inc
enter
lea
(bad)
pusha
addr16
lods
jno
jmp
(bad)
adc
push
aas
test
jae
or
or
inc
or
pop
mov
popf
or
sub
es
call
or
or
cmc
arpl
test
out
inc
push
rol
data16
pop
mov
mov
mov
push
inc
push
fild
popf
es
xor
cmp
jecxz
xchg
sub
test
and
ret
sbb
out
stos
mov
stos
and
dec
pop
cmps
sahf
push
fwait
push
in
in
inc
test
(bad)
xor
push
mov
mov
test
inc
jne
push
arpl
mov
dec
sti
fs
cmps
fcom
cmp
sbb
sub
cmp
add
push
into
mov
movs
xor
mov
push
popa
arpl
stc
jecxz
inc
and
sbb
(bad)
jle
shl
movs
jns
cmc
mov
mov
adc
sbb
nop
mov
out
(bad)
dec
out
int
repnz
ds
cmp
mov
les
mov
cli
sti
call
inc
and
inc
lahf
add
inc
jae
pushf
xlat
sub
pushf
out
shl
sub
aas
push
(bad)
mov
stc
push
push
cmp
mov
dec
dec
dec
sub
push
fwait
cmp
(bad)
call
xchg
in
fst
sub
iret
cdq
cmp
outs
cwde
stc
sbb
enter
hlt
pop
inc
mov
pmuludq
outs
lock
rdtsc
pop
test
mov
pop
push
and
jne
mov
sbb
jp
pop
loope
xchg
lahf
pop
in
jecxz
jns
sub
push
adc
cs
inc
lds
and
lock
in
dec
xchg
jno
fistp
dec
add
jns
stos
cli
pop
mov
jne
add
or
or
mov
mov
add
test
adc
inc
fimul
fisubr
inc
mov
pop
stos
jecxz
push
pop
loopne
mov
stos
or
dec
mov
cmp
sub
dec
push
xchg
pop
sub
jnp
pop
jbe
fdivr
jbe
xor
sti
dec
jp
hlt
and
cmp
cs
sahf
pop
ss
dec
and
push
xchg
(bad)
mov
sub
or
es
sahf
nop
jp
out
cmp
fdivr
cmovs
ja
sub
dec
inc
std
jge
fwait
and
jge
cmp
(bad)
push
pop
mov
or
jge
push
push
mov
dec
retf
add
xor
cmp
rcr
scas
dec
pop
xor
xor
and
jg
das
add
sbb
int3
or
aaa
adc
mov
imul
nop
mov
std
push
push
sbb
int3
ficom
jp
push
ja
out
jbe
mov
stos
cmps
push
jmp
jne
loope
cmp
xlat
sub
fcom
in
inc
clc
push
mov
pop
mov
push
jb
adc
push
and
ror
stos
fisubr
ds
sbb
mov
or
std
popa
leave
movs
imul
lods
inc
xor
leave
imul
imul
mov
xor
in
mov
pop
hlt
add
pop
pop
adc
aad
fisub
pop
xchg
das
scas
aas
dec
mov
ss
jbe
clc
nop
outs
fwait
ror
sti
(bad)
in
inc
sub
add
add
inc
or
mov
sbb
stos
jmp
out
sub
ins
pop
mov
mov
std
in
in
test
sbb
mov
scas
dec
jbe
jbe
jmp
jmp
repz
gs
inc
fdivr
lods
mov
mov
lds
movups
fild
repz
and
jmp
pop
mov
dec
mov
ins
adc
jge
test
les
clc
jmp
fsubp
js
std
mov
dec
je
xchg
aaa
sbb
test
mov
xlat
or
mov
cmp
xor
cmp
(bad)
daa
mov
call
and
fs
jp
and
or
(bad)
mov
xor
mov
xor
pop
and
mov
mov
add
into
xor
fs
or
cmp
sub
inc
(bad)
scas
xchg
pop
adc
enter
xchg
add
in
inc
sbb
mov
ja
outs
xor
test
stos
movs
jp
cli
adc
mul
mov
ins
xor
add
mov
mov
or
sti
aad
mov
xchg
test
into
inc
sbb
xchg
shl
and
into
add
in
adc
dec
(bad)
int
das
sbb
int3
inc
arpl
jnp
int
test
div
and
icebp
call
jl
cmps
fwait
sub
pop
aas
idiv
jg
and
jmp
mov
push
dec
rcr
add
outs
scas
popa
xchg
shl
cwd
dec
cmc
push
in
inc
push
cdq
bound
xor
aad
adc
test
sub
int3
stc
mov
ins
jle
mov
sub
jae
xchg
cmp
outs
repz
mov
xor
int
out
dec
mov
fisubr
cmp
sbb
and
scas
inc
xor
push
sbb
push
sub
fist
and
daa
fadd
jmp
mov
adc
adc
mov
adc
lds
xor
inc
pop
xor
pop
mov
mov
rol
pop
jns
fld
(bad)
adc
pop
mov
in
repz
sahf
mov
aam
fsub
pop
jge
xchg
push
push
mov
ins
test
sar
aas
dec
push
out
mov
xchg
lods
mov
call
xchg
xchg
sbb
mov
and
fdivr
sub
iret
add
sbb
rcr
outs
(bad)
leave
jmp
lock
retf
jecxz
pop
ins
push
fmul
pop
imul
std
jle
scas
out
ror
xchg
push
inc
out
ret
pop
add
adc
push
pop
loopne
xchg
stos
xor
and
pop
push
js
or
mov
cmp
loopne
loopne
stos
push
lods
dec
mov
popf
cmp
mov
aas
(bad)
idiv
addr16
shr
inc
adc
cwde
jo
outs
mov
ins
mov
inc
dec
xor
jecxz
and
add
test
mov
mov
(bad)
in
push
mov
ins
aaa
push
lahf
cwde
add
in
cmp
ins
xor
inc
xor
cs
loop
or
xor
xor
add
or
dec
inc
jno
jmp
test
or
cdq
cs
xor
aad
imul
xchg
inc
sar
mov
aaa
sub
fidivr
into
pop
shl
je
nop
cmps
fnstenv
cmps
or
jg
cld
push
mov
inc
pop
pop
push
fld
cdq
xchg
ins
mov
les
xchg
mov
xchg
adc
sbb
and
push
lds
(bad)
retf
ret
cdq
mov
mov
outs
nop
mov
aaa
sub
push
ret
and
push
mov
cdq
es
jmp
and
stos
jl
jno
jno
(bad)
jg
pop
inc
or
(bad)
mov
push
add
(bad)
int
jp
in
je
cmps
or
lods
xor
xchg
lods
pop
bound
movs
stos
pop
and
and
inc
add
inc
arpl
sub
enter
idiv
xor
scas
push
add
sbb
and
push
inc
and
pop
mov
or
mov
clc
(bad)
sub
push
mov
xchg
sti
mov
jg
arpl
(bad)
mov
(bad)
and
es
into
pop
ss
js
inc
and
dec
fst
sbb
ficomp
cmps
mov
imul
xor
inc
arpl
in
jmp
sbb
call
cmp
and
es
inc
xor
shl
xchg
aad
shl
jl
sahf
inc
lods
xor
jmp
jnp
cli
sub
mov
jmp
mov
jno
sub
jl
fnstenv
push
(bad)
daa
iret
add
sbb
popf
pop
pop
ins
inc
sub
in
jnp
rcr
stc
out
cld
push
test
push
and
(bad)
cmp
push
js
mov
mov
jl
mov
xchg
std
jmp
(bad)
lods
mov
clc
fs
mov
inc
ins
xlat
pop
push
dec
dec
repz
add
leave
test
out
add
sub
xchg
inc
adc
pop
mov
sub
in
inc
or
test
xor
mov
pushf
or
lds
sub
stos
(bad)
loopne
popf
imul
mov
sub
mov
sub
xchg
or
xor
or
outs
or
dec
mov
or
xchg
push
aas
mov
aaa
adc
ss
mov
retf
add
outs
les
loopne
out
imul
ss
pusha
xlat
das
and
(bad)
movs
mov
fdiv
push
pop
sbb
jge
loope
pop
mov
add
arpl
stos
dec
mov
mov
cmp
xchg
dec
cmp
push
sbb
fwait
inc
xchg
data16
cmp
adc
push
cs
movs
cmp
ss
sbb
scas
(bad)
fdiv
mov
cmp
rol
mov
in
xchg
dec
test
shr
push
not
mov
fmul
mov
leave
test
mov
push
cmp
adc
push
lods
lds
sbb
push
mov
sti
enter
cmp
cmp
cmp
mov
jae
loope
jge
jge
mov
add
es
sbb
ins
xchg
mov
add
inc
jmp
pop
push
mov
mov
movs
js
shl
in
shr
(bad)
adc
cmc
inc
icebp
jmp
aaa
push
mov
push
ficom
mov
mov
sti
push
imul
jne
jp
inc
lods
adc
cmp
(bad)
sahf
ret
push
leave
rcl
sub
mov
icebp
repz
and
inc
sbb
mul
hlt
fsub
xor
or
push
loop
stos
call
xchg
pop
jg
retf
imul
sub
(bad)
in
test
mov
loopne
jecxz
gs
sub
retf
sub
push
dec
mov
jnp
out
mov
fs
test
cmp
comiss
xchg
shl
add
test
repnz
sbb
jmp
jb
xchg
jecxz
xor
cmc
inc
sub
int
push
sbb
mov
push
iret
sar
pop
out
mov
xor
add
sub
neg
jecxz
syscall
(bad)
jmp
cwde
data16
(bad)
fst
ja
cmp
fimul
call
cmp
xlat
push
inc
ds
or
ss
retf
iret
test
jge
inc
and
jg
pop
xchg
jmp
jne
jge
fdivr
add
fs
push
jo
retf
test
inc
mov
outs
ja
int3
rcl
dec
bound
aaa
aad
xchg
or
mov
inc
movs
loop
(bad)
cmp
cs
clc
fisub
or
mov
dec
jno
sbb
push
arpl
ds
xchg
in
add
add
inc
stos
leave
arpl
mov
fs
int
js
fnstcw
es
xor
adc
aaa
scas
or
dec
stos
dec
or
lock
mov
pop
mov
jge
stos
dec
xchg
mov
outs
mov
mov
jnp
fldcw
and
pushf
jmp
dec
aaa
lods
scas
inc
retf
fisttp
mov
push
jb
sbb
mov
xor
xchg
mov
push
pushf
and
inc
and
push
pop
sub
add
mov
push
mov
call
add
push
sbb
xchg
sub
std
inc
add
pop
jle
(bad)
mov
pop
jae
aaa
aas
cmp
scas
pop
mul
movs
or
add
stc
add
pop
hlt
dec
mov
in
mov
cld
pop
mul
or
inc
push
pop
sub
push
inc
sbb
ins
push
inc
mov
cmps
ds
sbb
push
sti
test
xchg
idiv
fcomp
(bad)
sti
fisub
or
sbb
and
inc
push
out
pop
inc
mov
xlat
popf
adc
test
(bad)
loop
int
imul
xchg
in
mov
dec
fstp
inc
aaa
xor
sahf
or
mov
jle
fist
adc
popf
aad
dec
xchg
push
iret
add
sub
inc
push
sbb
and
scas
pushf
imul
fdivr
dec
mov
leave
jp
adc
adc
jg
scas
lea
retf
xchg
pop
pop
inc
dec
pop
fistp
shl
fcmovnu
int3
or
scas
add
push
sahf
lea
ret
push
pushf
cdq
adc
add
fsubr
mov
lahf
push
mov
adc
pop
pop
stos
mov
xchg
or
fwait
lods
push
sub
out
and
out
nop
pop
jbe
les
dec
cmc
xchg
gs
aad
jns
pop
sub
call
sar
xlat
jge
add
xor
and
ds
retf
or
inc
int
cwde
loope
cmp
or
and
pop
xchg
push
jmp
repz
mov
sbb
sub
in
fs
je
sar
push
mov
lahf
jbe
or
sar
dec
mov
(bad)
adc
das
xor
ds
mov
fisub
cmp
cmp
push
dec
shl
lock
inc
ins
ja
xor
or
push
mov
adc
int3
adc
fs
loope
dec
or
or
stos
pop
or
xor
xor
pushf
push
scas
lahf
shl
int
dec
jno
push
cli
xchg
out
add
or
push
jp
imul
movs
xchg
fstp
push
pop
dec
xchg
adc
cmps
push
pop
jp
outs
cmps
leave
xor
and
push
push
out
test
ror
dec
inc
mov
cmovge
xor
mov
mov
push
jg
xor
dec
or
repnz
adc
popa
fst
fistp
scas
fistp
outs
adc
add
dec
test
(bad)
jne
jl
scas
adc
rcl
adc
pop
xlat
xchg
jl
aaa
push
test
test
dec
bound
ds
xor
stc
pop
or
scas
out
hlt
addr16
mov
and
xchg
ret
dec
push
push
imul
jnp
dec
out
mov
loope
pushf
cmp
ins
aam
jge
xor
fisubr
outs
mov
xor
inc
shr
icebp
add
aaa
mov
dec
mov
push
sub
adc
fcmovbe
jne
bound
sub
pop
push
pop
cmps
and
mov
sbb
test
sar
jno
jp
cmps
popa
cmc
sbb
sbb
ret
cld
in
inc
inc
sub
nop
cmp
jne
sbb
inc
jecxz
pushf
clc
pop
xor
jno
(bad)
push
add
mov
nop
mov
pop
clc
pop
ins
cli
shl
ss
fild
das
cmc
pop
mov
stc
in
cmc
or
(bad)
mov
xchg
inc
mov
imul
and
scas
outs
lds
xchg
sub
and
sbb
pop
or
shl
xlat
and
cmps
sub
dec
push
test
imul
adc
mov
mov
stc
sar
ret
jns
inc
inc
fmul
xor
sbb
dec
or
dec
cmp
into
cld
xchg
push
jmp
add
pop
(bad)
fild
and
dec
inc
mov
jns
jmp
outs
call
mov
out
inc
imul
mov
es
call
or
mov
or
push
stos
retf
or
mov
outs
(bad)
out
xchg
in
jl
lea
cmp
pop
push
cmp
clc
mov
dec
in
mov
push
jo
sub
mov
mov
jle
jbe
adc
rol
stos
push
ficomp
(bad)
add
ret
shl
imul
xchg
dec
mov
mov
and
mov
movs
test
sub
pop
sub
jmp
mov
jl
cmp
ret
or
dec
ja
or
push
mov
nop
stc
pop
pop
pop
aaa
jmp
int3
pop
xor
call
cmp
mov
ret
dec
mov
(bad)
fwait
sub
push
and
cli
cwde
pusha
fwait
xor
imul
xchg
frstor
ja
and
mov
xor
mov
cmp
mov
xlat
in
pop
mov
aas
cmp
scas
mov
in
xchg
movs
inc
sub
imul
pop
int3
aad
xor
sar
ja
inc
(bad)
xlat
inc
je
je
xchg
jmp
sbb
test
cmps
sti
dec
fs
push
shr
arpl
jnp
pop
pop
xchg
inc
(bad)
sub
mov
pop
jp
pop
jmp
xor
push
cli
pop
add
xchg
jne
sub
mov
cdq
ss
add
jb
or
mov
xchg
pop
sub
imul
or
sbb
test
std
ror
jge
or
sub
inc
fmul
dec
sub
cmps
es
nop
push
ins
lahf
cld
mov
inc
push
push
pop
cli
jbe
aam
pop
push
loopne
pop
push
mov
test
cmps
cs
test
ds
inc
aas
loopne
inc
inc
jl
adc
mov
xor
lea
in
mov
cmp
dec
test
xchg
sar
lahf
sbb
cmps
nop
inc
mov
inc
fcmovnb
loop
sahf
mov
or
jne
xchg
std
jecxz
mul
shr
jno
fs
mov
ja
imul
pop
pop
mov
call
cmp
test
out
stc
xchg
pop
out
pop
mov
repnz
sar
leave
call
shr
adc
xchg
inc
pop
mov
sub
add
(bad)
out
mov
dec
cmps
jmp
cwde
aam
pusha
sub
mov
sti
cmps
inc
test
cmp
inc
addr16
mov
sbb
dec
add
push
sub
test
cmp
and
cs
arpl
inc
ror
test
int3
jmp
cmp
xor
sub
shr
lock
inc
shl
mov
(bad)
das
mov
in
ret
leave
retf
xchg
rol
pop
retf
loope
sub
mov
mov
(bad)
xchg
dec
popf
xchg
push
xchg
sbb
cmps
xor
push
inc
adc
int
push
out
push
adc
xor
comiss
xchg
jae
mov
adc
xor
clc
dec
inc
adc
and
push
xchg
movs
arpl
xchg
dec
dec
pop
sub
jge
cli
sub
mov
or
add
dec
popa
mov
into
aas
jns
sub
je
and
fisub
jno
push
mov
sbb
jne
dec
jo
rcr
add
dec
pusha
rcr
mov
cdq
fadd
jg
push
push
sbb
or
mov
add
pop
sub
jl
aaa
push
or
cld
icebp
test
and
push
dec
mov
mov
push
out
les
push
jmp
test
and
mov
cdq
pushf
rcl
cmps
stos
sub
jmp
fist
fild
xor
stc
pushf
mov
retf
add
push
and
bound
ja
pop
xchg
test
mov
sub
(bad)
xor
or
pop
dec
cmp
add
mov
pop
leave
cli
jnp
repnz
push
mov
imul
dec
mov
(bad)
and
cmp
cmp
in
jnp
sub
out
outs
lods
jl
or
call
add
jmp
push
inc
mov
imul
jle
mov
imul
mov
into
nop
arpl
(bad)
push
sar
and
cs
jmp
ins
cmp
rcr
enter
mov
ja
push
xchg
inc
adc
cmps
outs
jae
xor
adc
ret
sub
add
in
pushf
or
dec
inc
scas
adc
ins
pop
adc
dec
pop
or
xor
or
loop
repz
out
mov
or
jg
dec
sbb
enter
ret
in
dec
sbb
xor
mov
pop
mov
adc
dec
loop
popa
pop
call
daa
sbb
dec
pop
push
popa
add
add
xchg
push
dec
leave
out
mov
and
int
sti
ins
aaa
mov
jp
mov
fwait
jne
cdq
ret
outs
std
mov
dec
ffreep
int
fldenv
xchg
out
cmp
fs
sti
dec
sub
adc
lods
inc
add
mov
enter
cwde
dec
fist
ret
aam
pusha
cmps
int3
sbb
cmp
lea
leave
ins
mov
cmp
xchg
popa
ds
sub
scas
repz
dec
mov
and
shr
das
xchg
je
pop
addr16
inc
pop
fucom
cs
sub
jne
xor
sub
pop
sbb
jno
add
(bad)
jns
cmp
mov
pop
outs
aas
pop
mov
mov
out
mov
lahf
add
shl
pop
jle
lea
(bad)
xor
xor
push
mov
cld
cmp
icebp
sbb
inc
cmp
in
(bad)
aam
leave
sbb
and
lock
adc
mov
or
(bad)
sub
xor
mov
aad
test
mov
xor
mov
pop
sbb
inc
repnz
pop
in
and
adc
jl
mov
nop
push
pop
pop
add
fsub
(bad)
and
in
mov
xor
aaa
add
clc
jecxz
xchg
dec
(bad)
inc
push
sub
cmp
mov
test
add
lea
xor
call
adc
and
retf
add
sbb
push
inc
cmp
xlat
inc
push
(bad)
cli
sbb
xlat
ret
pop
movs
push
inc
or
sahf
popa
jge
fwait
lea
push
not
add
test
out
clc
stos
movs
mov
push
push
(bad)
jbe
mov
xchg
xchg
xchg
mov
or
inc
dec
pop
imul
retf
xchg
aam
aad
cmp
inc
fmul
nop
mov
popa
stc
fdiv
call
aam
aad
sbb
mov
repz
outs
call
shl
inc
into
or
retf
xchg
pop
pop
jecxz
lea
fidiv
and
jmp
dec
out
and
std
push
rcl
xor
push
imul
dec
icebp
jmp
mov
sbb
adc
mov
xchg
shl
adc
push
cmps
iret
jne
push
push
pop
mov
das
fwait
sub
xor
inc
cmp
adc
movs
stos
ret
dec
gs
mov
stos
sub
or
arpl
push
push
call
sub
ja
sbb
xor
ret
sbb
sbb
scas
inc
jno
fadd
ja
retf
out
dec
and
sbb
mov
pop
fst
mov
xchg
inc
push
mov
fdiv
and
sub
adc
(bad)
pushf
push
es
dec
cmp
cmc
gs
inc
fsubr
push
cmp
ja
jae
mov
int
push
xchg
and
adc
mov
xor
xor
fsub
cli
ins
ret
jns
xor
jb
aas
into
out
push
and
adc
jle
sbb
fdivr
sub
pop
jmp
push
aas
(bad)
and
int
imul
icebp
jb
inc
inc
movs
fild
stc
retf
mov
ss
lds
jb
aam
jmp
or
test
and
xlat
rcl
int
mov
push
in
das
enter
es
pop
mov
sbb
mov
loop
pop
pop
(bad)
lock
jne
stos
jb
adc
xchg
sub
fstp
ins
shr
xor
lea
fcmovbe
push
jns
xor
fwait
sub
cmp
call
pop
and
xchg
mov
mov
lods
loopne
or
jb
jnp
jp
push
inc
jg
xor
mov
dec
mov
shl
adc
sbb
and
mov
rcl
ins
nop
dec
mov
jb
mov
xor
jmp
ret
ins
cli
fwait
les
mov
sbb
mov
pop
push
ds
adc
fucom
push
xchg
test
rcr
mov
rcl
jmp
hlt
jnp
or
push
cmp
jp
test
(bad)
sub
xchg
std
div
pop
xchg
sub
pop
cmc
hlt
nop
cmp
adc
lahf
lds
jle
jg
lds
add
cmps
pop
idiv
inc
and
les
icebp
or
jb
push
cmps
xchg
lock
mov
xchg
jmp
inc
out
hlt
shr
pop
fwait
int
sbb
fild
nop
xor
fwait
or
add
add
js
adc
push
leave
mov
into
sbb
ds
pop
pop
add
dec
adc
cdq
imul
inc
inc
lds
add
aad
and
pop
mov
xchg
(bad)
and
int3
fwait
mov
mov
xchg
pop
into
sbb
mov
xor
inc
cmp
aas
lahf
aad
pop
xchg
push
add
popf
sahf
push
mov
pop
int
call
lods
sub
and
into
pop
jg
outs
jp
test
push
sub
pop
jb
mov
adc
adc
or
inc
retf
push
dec
ror
xchg
jecxz
push
xor
mov
les
pushf
out
add
mov
xor
mov
mov
sbb
or
xchg
mov
ds
int3
mov
mov
sahf
dec
out
adc
xor
mov
xchg
bound
and
inc
rcr
pop
xor
ret
cwde
cli
inc
test
jp
in
out
mov
jmp
cmp
imul
es
pop
mul
sbb
es
fwait
xor
leave
bound
in
cmp
and
into
adc
add
(bad)
xlat
cdq
pop
and
stc
retf
mov
or
mov
push
dec
enter
sub
xor
(bad)
pop
ins
cmps
nop
pusha
sub
cmp
outs
pop
jmp
ss
or
shl
scas
adc
in
sar
iret
retf
je
outs
sub
test
scas
(bad)
outs
cld
imul
add
add
aam
rcr
push
push
pop
adc
stos
cdq
push
fcom
leave
mov
sbb
mov
mov
jbe
sar
stos
push
ret
test
inc
mov
call
dec
pop
sub
in
lods
popw
shr
push
jb
inc
out
xlat
dec
leave
adc
xor
dec
xor
pop
sysenter
add
cld
les
xchg
xchg
jnp
(bad)
popf
mov
out
or
(bad)
sub
mov
dec
cmps
pusha
(bad)
push
inc
lds
jmp
outs
dec
pop
data16
and
retf
repz
adc
pop
shrd
test
lahf
xor
mov
mov
dec
loope
neg
lea
or
dec
xchg
pop
adc
lahf
mov
push
les
xor
mov
pop
adc
jno
mov
pop
aad
pop
or
inc
push
bound
call
mov
sahf
out
mov
push
(bad)
cmp
inc
repnz
and
icebp
dec
add
and
or
mov
push
mov
push
sbb
(bad)
dec
dec
sub
loop
jno
test
or
and
shl
out
jp
sti
dec
(bad)
ja
adc
sar
in
sbb
rol
aad
aas
cmps
or
int
repz
aad
std
out
call
mov
shl
scas
dec
lea
push
xor
lahf
mov
imul
loopne
aas
xor
cmovs
or
shl
jge
pop
lods
scas
mov
std
cmp
std
sbb
in
stos
jge
lock
addr16
add
push
movs
sub
or
hlt
adc
pop
jb
ja
xchg
in
jle
aaa
xchg
ja
cs
mov
lods
shr
daa
lock
sbb
cld
cmp
pop
pop
pop
inc
mov
sbb
jns
pushf
retf
dec
jbe
push
jo
popf
sbb
out
jne
outs
retf
loop
cmps
movs
js
dec
dec
stos
lock
mul
mov
loope
js
outs
mov
cmp
outs
stos
mov
mov
iret
sbb
fmul
fmul
mov
(bad)
sti
int
or
sub
pop
(bad)
shl
ja
loop
ror
scas
lods
pop
adc
or
cmps
dec
push
xchg
mov
mov
mov
xor
clc
jge
sbb
(bad)
rol
ins
ins
sub
pop
xchg
push
in
arpl
addr16
dec
pop
sar
cmp
xor
out
outs
ins
push
push
sub
push
jmp
xchg
gs
test
js
mov
push
jp
cmps
call
aad
mov
fist
mov
cmps
fld
repnz
push
test
out
rcl
xor
int3
lods
imul
xchg
in
jbe
(bad)
aaa
loope
shl
mov
nop
add
mov
shl
jmp
shr
out
jae
test
xor
mov
cmp
cmp
loop
jae
and
dec
push
out
mov
mov
jmp
and
or
ins
inc
xchg
lods
jge
clc
xchg
lods
jg
mov
push
(bad)
repz
mov
xor
loope
out
(bad)
cmps
int
enter
lock
call
les
les
fwait
push
push
mov
adc
scas
mov
stc
lods
jge
int3
aas
xor
pop
mov
jno
or
push
gs
lods
nop
xchg
pop
xchg
je
adc
inc
loope
push
dec
push
dec
jmp
cmp
push
pop
mov
cdq
repnz
dec
out
jno
data16
cmps
test
gs
neg
das
ds
mov
xlat
js
out
test
(bad)
jne
push
cmp
mov
aam
pop
(bad)
cmps
jl
mov
xor
out
shl
scas
and
ins
js
pusha
rcr
xchg
cmp
pop
leave
ins
push
(bad)
mov
pop
imul
sahf
sbb
sbb
xor
in
jbe
add
fcom
push
cmp
sub
cmp
cmc
fidiv
int3
mov
lahf
push
mov
inc
inc
jno
xor
or
inc
inc
jae
clc
inc
xchg
mov
ds
das
pop
mov
dec
test
pop
cs
jbe
mov
cmps
lea
cli
inc
sbb
gs
or
in
enter
sbb
dec
xchg
sub
and
push
push
ins
xor
stos
mov
mov
aas
call
xor
das
mov
sti
and
push
push
nop
jecxz
adc
in
lock
push
jnp
aam
in
jbe
xchg
popa
(bad)
jmp
jno
add
pop
push
gs
stc
sahf
xor
(bad)
call
jbe
push
add
mov
das
or
addr16
jge
xchg
(bad)
push
jge
mov
pop
mov
fnstsw
dec
jno
sbb
or
lock
arpl
push
mov
xor
pop
dec
jmp
sbb
jnp
jae
push
xchg
mov
(bad)
fs
jo
cwde
rcl
jmp
dec
sbb
add
add
stc
hlt
xor
sbb
ins
mov
push
dec
pop
sti
jno
xchg
mov
or
dec
(bad)
sub
shl
pop
out
aaa
xchg
adc
inc
mov
push
scas
xchg
xor
pop
xchg
aas
mov
int3
pusha
cmp
cli
dec
cmp
pop
(bad)
shl
lahf
loop
nop
in
mov
popa
add
adc
jne
push
ins
ror
adc
and
imul
(bad)
jb
mov
test
sbb
out
xor
cwde
pop
lahf
aaa
inc
test
add
pop
mov
mov
inc
xlat
inc
pop
jge
mov
xchg
js
loopne
push
popf
lods
test
into
stos
mov
inc
xor
test
sbb
(bad)
jl
int3
cld
outs
mov
daa
add
jns
inc
push
fs
lods
mov
jo
inc
fnstsw
inc
sub
(bad)
fidiv
fldenv
call
test
hlt
inc
gs
mov
sub
sar
push
cmp
ins
mov
cld
and
icebp
cmp
pusha
dec
aad
add
push
cwde
sub
sub
cmp
call
adc
jge
mov
xchg
sub
out
(bad)
jmp
inc
adc
dec
mov
jl
xor
and
pop
dec
mov
stos
cmp
adc
xchg
push
repnz
sbb
scas
(bad)
stc
jb
and
pushf
fnstsw
ror
jae
retf
bound
pop
dec
inc
push
imul
and
lahf
jge
sbb
or
dec
out
cmps
sar
cmps
xor
loopne
ds
cs
fdiv
lods
jns
pop
sub
mov
or
shl
into
out
test
add
pop
mov
rcr
call
xchg
jp
cmp
lahf
mov
adc
mov
add
scas
mov
jb
mov
xchg
mov
mov
nop
xchg
xchg
(bad)
fidivr
scas
push
in
les
and
dec
icebp
hlt
adc
or
inc
push
mov
jb
mov
xchg
call
aas
dec
inc
dec
push
lea
inc
popf
add
ret
cmp
dec
fcmovnb
inc
hlt
xchg
loope
and
pop
pop
push
lods
adc
or
cmp
int
lahf
jns
xchg
mov
mov
mov
shr
xchg
gs
mov
add
cmp
pop
xchg
ret
or
add
adc
(bad)
mov
fs
lods
not
cmc
movs
inc
dec
mov
js
push
cwde
xchg
jo
out
mov
or
add
hlt
mov
mov
ja
es
fadd
cmps
(bad)
repnz
mov
xor
jae
not
jecxz
or
adc
(bad)
lods
loopne
stos
fwait
stos
sbb
loope
dec
sub
inc
(bad)
cmp
clc
dec
adc
fcomp
nop
mov
pop
call
popf
add
enter
jge
sbb
fst
push
mov
lea
div
cmps
icebp
mov
pusha
(bad)
shl
retf
mov
xchg
mov
test
push
adc
mov
mov
mov
mov
inc
push
dec
mov
or
in
sub
xor
xchg
push
push
push
dec
test
test
pop
jmp
inc
sbb
dec
bound
and
xchg
ins
arpl
mov
cmp
xor
imul
xor
mov
test
cmp
movs
pop
pop
pop
mov
mov
shr
xchg
xchg
stc
repnz
pop
(bad)
(bad)
add
int
jb
(bad)
fcomp
fs
adc
xchg
mov
xchg
lods
movs
mov
fcomp
scas
ret
cmc
mov
sbb
nop
mov
xchg
aad
repz
pushf
cdq
jecxz
fld
push
sahf
cmps
xor
call
out
jno
jnp
mov
test
sub
inc
dec
jno
lock
lods
(bad)
mov
sbb
add
xchg
push
add
or
pop
ret
jne
lahf
dec
pushf
mov
xchg
stos
fs
call
push
aad
stc
jo
aad
shl
in
lea
outs
sti
sti
pop
int3
mov
stos
sbb
fild
out
jnp
popf
(bad)
int3
pop
push
icebp
inc
add
pop
mov
and
or
and
mov
jmp
push
pop
and
out
adc
loopne
aam
in
inc
push
inc
lock
adc
mov
sahf
and
test
pop
cli
xchg
nop
xor
mov
adc
mov
mov
adc
fild
adc
movs
in
sbb
fs
add
shr
inc
in
imul
cmp
popf
jp
sub
(bad)
xor
ja
xor
xor
jnp
or
cmps
xchg
imul
scas
or
mov
not
repz
outs
cli
nop
jne
out
mov
imul
cmps
(bad)
mov
js
cmp
lods
(bad)
das
fsub
mov
sar
lahf
lock
add
mov
aad
sbb
dec
stc
je
lock
repnz
mov
ror
jnp
(bad)
push
cmp
push
(bad)
jmp
stos
add
cdq
jge
mov
in
sub
loop
(bad)
int
scas
pop
push
dec
xor
push
mov
ja
dec
pop
retf
push
in
test
pop
pushf
add
xchg
(bad)
nop
es
mov
jmp
pop
fistp
adc
jae
dec
xor
jmp
mov
out
pop
mov
pop
xor
data16
cmp
ror
aaa
or
and
mov
out
xor
pop
(bad)
mov
pusha
clc
add
cmp
(bad)
mov
xchg
sbb
jmp
movs
dec
xor
sbb
dec
or
movs
ds
adc
cmp
push
out
add
in
sbb
lea
jmp
dec
fiadd
inc
xlat
fwait
ds
pushf
xchg
ins
shr
adc
sbb
sbb
adc
out
mov
aaa
(bad)
xor
scas
and
dec
pop
aad
pop
in
lods
adc
ins
inc
pop
inc
sbb
js
clc
enter
sti
fs
xchg
xor
sub
mov
cmp
dec
or
sbb
mov
mov
int
add
and
popf
rcl
jne
adc
inc
xchg
dec
jecxz
sahf
call
rcl
pop
jns
xchg
xchg
cld
xchg
xor
jbe
dec
jl
or
jle
pop
outs
leave
pop
adc
je
jmp
jnp
xor
push
dec
mov
xor
xor
push
inc
mov
stos
arpl
pop
aam
mov
jno
call
pushf
jnp
into
call
cmp
sbb
in
cdq
(bad)
push
xchg
cmp
inc
and
call
cmp
aas
dec
arpl
aad
sub
pop
loopne
ror
jbe
test
jnp
jmp
sbb
mov
fcmovne
mov
pop
inc
clc
cmp
xchg
int
push
sub
fsubrp
pushf
cmp
push
scas
adc
jae
inc
scas
out
mov
pushf
jmp
(bad)
sub
loope
out
sbb
add
sub
repnz
cmp
inc
cmc
pop
dec
mov
or
xor
enter
inc
popa
sub
and
test
mov
dec
es
call
fcomp
or
imul
mov
popa
cs
xchg
icebp
lds
mov
mov
push
loopne
in
cmps
out
cli
jmp
stos
and
cs
ins
out
pop
xor
shl
add
ror
push
sahf
or
and
or
push
repz
shr
(bad)
add
xor
cmc
test
mov
add
shl
cmp
mov
sbb
dec
mov
shl
das
ss
mov
mov
mov
or
pop
fs
inc
imul
add
xor
add
sub
retf
std
sbb
mov
dec
xor
pop
into
mov
mov
mov
pop
test
jnp
loope
or
push
hlt
lahf
popf
or
movs
aas
das
imul
loopne
popf
repz
cmovnp
xlat
xor
mov
rep
pop
add
sbb
cld
in
push
cmp
mov
stos
(bad)
push
xchg
aas
in
push
push
mov
mov
mov
stc
mov
sbb
loopne
pop
call
int
mov
mov
enter
mov
adc
dec
shl
jno
xchg
ret
inc
pop
mov
lds
dec
lea
rcr
jo
test
lds
ins
sub
vpackusdw
lods
sahf
bnd
lods
mov
add
jae
cmp
ret
ror
out
mov
pop
inc
inc
sbb
xchg
jno
inc
jmp
fcmove
dec
mov
bnd
inc
inc
cmp
and
push
mov
in
popa
in
clc
mov
jmp
mov
cmp
ror
(bad)
inc
movs
pop
mov
(bad)
es
or
das
paddb
or
ficom
jne
pop
pop
(bad)
or
int3
lock
mov
fwait
mov
sahf
and
shl
fwait
adc
lock
loopne
dec
mov
jne
mov
ret
popa
test
xor
add
adc
jb
xor
push
jmp
ins
shl
loopne
retf
hlt
fdiv
jmp
sub
adc
repnz
xor
cmc
cmc
xchg
int
and
push
add
fistp
out
lea
mov
lods
ror
inc
add
mov
pop
lods
psubsw
xchg
add
ret
jecxz
mov
ja
popf
test
out
scas
mov
arpl
xchg
sahf
test
mov
std
push
push
jbe
adc
aaa
pop
sub
pop
jg
pop
xor
bound
in
mov
test
jecxz
add
shl
mov
push
ficom
mov
push
in
or
add
mov
call
xor
ret
leave
xchg
cmp
repz
cwde
push
js
sub
jne
mov
popf
leave
stos
xchg
pop
xchg
retf
(bad)
dec
dec
inc
aaa
in
push
in
and
jp
xor
std
inc
rcl
hlt
pop
popf
fiadd
pop
xlat
inc
xchg
je
cmp
mov
repnz
cmp
pop
push
add
stc
xchg
inc
cmp
or
inc
cmp
les
lock
hlt
or
dec
xor
inc
sbb
loop
mov
or
pushf
enter
in
nop
lock
push
lock
xor
iret
jbe
loope
push
pop
add
dec
repz
dec
adc
mov
mov
in
leave
sahf
jle
cmp
retf
repnz
push
xchg
add
inc
loopne
nop
(bad)
movs
sti
cli
fimul
push
add
pop
or
mov
(bad)
loope
push
repz
xor
mov
push
mov
mov
fist
jo
ret
mov
mov
or
pushf
out
pop
push
ret
xlat
les
or
ret
inc
mov
jmp
pop
xor
xor
mov
cmc
xlat
dec
lock
ror
retf
retf
(bad)
nop
jmp
push
xchg
je
std
mov
outs
cmps
dec
fdiv
fdecstp
in
push
leave
push
mov
popa
adc
or
fsubr
in
mov
repnz
call
push
dec
lahf
mov
daa
jno
popf
and
aam
mov
mov
xchg
sub
mov
fdivr
test
mov
and
inc
pushf
sub
scas
cwde
sbb
js
ret
rol
rcr
imul
or
jo
adc
jg
mov
push
and
(bad)
cmp
add
pop
sbb
jbe
jae
in
rcl
rcr
movs
dec
adc
and
add
cmp
mul
jb
pop
mov
(bad)
jge
jle
cmps
out
aas
jb
mov
push
sti
adc
loope
mov
push
dec
jns
or
retf
into
adc
stos
cmp
dec
inc
stc
sbb
shl
jne
shl
call
sub
inc
lods
outs
stos
cli
adc
in
int3
push
cmp
aas
sub
outs
add
or
jo
sbb
repz
cdq
loopne
repnz
sar
jmp
sti
mov
sti
push
daa
std
out
ficom
fild
lea
out
or
ds
repnz
pop
popf
test
sbb
sub
ret
mov
xor
push
fist
ja
test
loop
jo
jnp
out
test
and
push
inc
aad
int3
ret
xor
fadd
mov
pop
jmp
inc
xchg
jnp
shl
jle
cmp
mov
jecxz
adc
shl
cmp
sbb
jg
pmaddwd
push
sbb
cmp
cmp
inc
add
cmp
pop
stos
mov
cmp
enter
ret
inc
ret
call
retf
(bad)
jge
imul
xchg
or
inc
jbe
dec
push
cli
and
test
es
mov
inc
dec
repz
jne
rcl
mov
int3
mov
mov
dec
mov
mov
dec
imul
pop
bound
jmp
push
mov
ret
pop
iret
cmpxchg
test
icebp
scas
xor
in
fistp
jb
out
cmp
add
jmp
jnp
xchg
push
mov
or
cmp
and
fistp
dec
xor
add
fdivr
inc
cmc
enter
retf
arpl
push
repnz
lds
inc
inc
add
jo
test
pusha
retf
sbb
das
retf
mov
add
inc
adc
in
pop
cmp
aas
ffreep
int
mov
xor
int
cmps
aad
pop
iret
psraw
outs
mov
int3
jnp
cmp
xchg
or
popa
or
lahf
inc
dec
fnsave
repnz
leave
mov
lods
xlat
add
mov
mov
xchg
cmp
dec
pop
add
or
inc
pushf
dec
add
aad
fsubr
frstpm(287
mov
ja
es
jmp
mov
and
in
sar
push
jo
out
aam
imul
loop
push
jg
xlat
std
push
push
mov
data16
mov
inc
or
imul
mov
bound
stc
xchg
sar
int
mov
data16
ins
clc
stos
(bad)
or
xor
cmp
leave
cmp
mov
jbe
sbb
jmp
into
sbb
call
cmp
push
pop
add
daa
icebp
lods
movs
jns
add
dec
fwait
rcl
pop
(bad)
push
fcomi
mov
fist
and
jg
les
out
inc
call
pop
aas
mov
fcomp
push
(bad)
movs
packsswb
es
sub
ja
or
scas
(bad)
es
xor
or
jecxz
mov
outs
xlat
dec
xchg
xor
sti
(bad)
fiadd
sbb
nop
jmp
push
ins
lods
xchg
retf
call
fucom
add
mov
sub
rol
out
out
out
mov
xchg
mov
test
pop
inc
call
mov
lds
fucom
sahf
stc
ins
jp
cmps
sub
repz
sub
sahf
out
push
fwait
jbe
adc
les
pop
jno
das
cwde
inc
ror
mov
out
and
sbb
or
sbb
inc
push
and
pop
sub
(bad)
sub
pop
xchg
loope
jp
dec
lahf
sti
jae
retf
push
popa
ja
add
fs
js
aaa
dec
es
or
and
xor
push
adc
push
sub
fxch
mov
dec
xor
push
int
js
cmc
push
aam
inc
test
cmps
cld
and
icebp
pusha
mov
pop
xor
pop
jo
pop
ds
in
pushf
sbb
mov
(bad)
adc
(bad)
fcom
ret
fld
cmc
add
add
mov
and
dec
add
push
test
(bad)
stos
js
xchg
jle
data16
push
std
jae
call
retf
sub
add
je
add
cmp
add
sbb
sbb
movs
push
(bad)
sub
adc
bound
out
aad
cmp
cmp
data16
ret
lock
mov
frstor
xchg
mov
mov
mov
ins
cmp
and
jecxz
daa
inc
icebp
arpl
jae
sbb
jg
dec
jge
lds
add
fmul
sbb
iret
mov
pop
sbb
xchg
clc
sub
xor
sar
adc
lds
xor
shl
inc
xchg
jb
int
pop
arpl
fbstp
mov
lods
test
pop
sub
mov
push
push
mov
fcom
cmps
into
call
pop
inc
lock
cmc
or
sub
data16
iret
push
lock
pop
xor
(bad)
add
dec
int3
cmp
pop
mov
(bad)
adc
add
(bad)
inc
lea
pop
inc
cmp
xor
jmp
xchg
stos
mov
imul
xchg
js
sub
clc
(bad)
je
dec
mov
pop
das
push
xchg
jmp
out
pop
cmps
mov
pop
(bad)
in
or
jb
or
sub
retf
jl
stos
dec
cmovp
cmp
mov
in
xchg
xchg
sub
in
gs
out
and
das
jne
xor
cli
mov
mov
sub
cmp
mov
and
ds
cld
cmps
mov
push
ret
jg
inc
jmp
pushf
(bad)
jns
mov
aas
pop
push
or
or
add
mov
sbb
inc
into
jne
lods
add
jbe
lahf
movs
mov
sahf
xor
add
loop
jae
call
leave
stos
std
in
mov
jmp
mov
cmp
stc
xor
shl
cmp
les
add
dec
mov
and
mov
cmc
retf
jg
fcmovnbe
adc
xlat
clc
movs
or
adc
movs
sub
mov
sbb
adc
cmp
rcr
push
fist
or
scas
add
sbb
ret
jmp
cmp
inc
imul
mov
xchg
cdq
retf
int3
or
fidivr
pop
aas
sbb
test
dec
jmp
call
gs
ss
dec
inc
jmp
jmp
adc
cmp
retf
call
add
xchg
jb
cwde
xchg
repnz
sub
imul
add
rol
push
lea
ja
jmp
fcom
test
loope
mov
fwait
add
and
jbe
push
mov
jecxz
mov
cmp
xlat
shl
int
outs
jle
gs
in
dec
sub
cmps
test
cmc
dec
loope
std
fnstenv
or
(bad)
mov
mov
xor
push
inc
push
cwde
cmps
dec
inc
bound
daa
push
mov
outs
adc
jmp
jmp
dec
bnd
mov
test
nop
aas
adc
rcl
add
jge
mov
sbb
int
scas
ins
push
in
add
sbb
push
xchg
sar
adc
jp
mov
in
or
sbb
mov
jecxz
cld
cmp
stc
bound
jle
pop
scas
fsubr
mov
sahf
and
pop
outs
cmp
data16
mov
jo
test
xor
test
adc
repz
popa
cmp
out
sbb
jecxz
jno
imul
cmp
mov
sbb
(bad)
repnz
mov
xchg
(bad)
xchg
bound
retf
in
lock
fild
ss
jb
ss
and
jle
adc
sub
jo
sub
dec
pop
movs
xchg
mov
cli
jo
sub
xchg
sbb
inc
popf
cmp
push
cmp
in
enter
lods
pusha
add
je
mov
inc
nop
mov
addr16
xor
sbb
mov
sub
cld
jno
repz
das
lods
sbb
and
mov
shr
lock
mov
outs
and
sub
adc
int
mov
xchg
into
mov
mov
enter
retf
inc
xchg
scas
push
mov
push
test
xchg
adc
pusha
enter
push
(bad)
pop
push
sbb
xor
push
mov
shr
dec
data16
lods
xchg
cmc
push
(bad)
sub
call
call
fidiv
jmp
pop
data16
das
xlat
sub
popa
mov
into
icebp
inc
mov
dec
lods
mov
daa
ja
dec
lods
xor
mov
mov
sub
bound
pop
pop
call
in
pushf
lods
nop
pop
add
xor
retf
gs
bound
xchg
mov
jb
pop
push
aam
test
dec
and
sbb
cmps
jmp
xor
fwait
inc
inc
mov
cmc
jmp
imul
inc
pop
sub
fild
xchg
dec
push
das
add
inc
dec
cmps
scas
mov
pushf
sbb
(bad)
sub
jmp
lds
push
push
fimul
jo
repz
movs
aas
xor
mov
xchg
jnp
inc
sbb
dec
push
push
in
fsub
push
sbb
push
mov
pop
(bad)
mov
repz
xor
or
js
mov
dec
fdiv
sbb
clc
push
arpl
retf
mov
dec
rcl
fucomp
mov
inc
es
xor
adc
and
jle
adc
pop
jg
xchg
cwde
xlat
xor
cmp
xchg
dec
ss
inc
add
outs
iret
les
shr
xchg
test
mov
fild
mov
shr
sbb
or
es
sbb
push
lds
inc
or
addr16
jne
ret
push
sbb
sahf
sub
mov
fwait
fs
mov
ins
loop
jmp
cmp
ret
xchg
movs
xchg
mov
cmps
cwde
ror
push
jb
das
jnp
retf
(bad)
in
retf
mov
xchg
xor
sub
leave
rcr
cmp
jl
dec
inc
int
mov
repnz
jmp
pop
mov
mov
push
push
xor
in
jge
and
aam
ja
test
stc
inc
xor
pop
lods
xor
push
out
fadd
push
scas
mov
mov
aaa
mov
mov
sbb
xor
mov
(bad)
js
dec
push
push
fist
js
in
int
je
push
js
pop
xor
les
sub
repz
xchg
jbe
jno
push
aam
push
jle
jmp
mov
mov
xchg
jle
mov
jnp
pop
faddp
mov
int
ds
pop
jle
or
and
aam
loopne
sbb
cmp
shr
retf
test
push
add
jbe
jmp
into
outs
jne
cdq
cmp
and
jmp
retf
movsx
dec
jo
mov
movs
nop
(bad)
push
ret
sub
xchg
and
call
push
mov
push
xchg
push
jb
fcomp
in
pushf
test
adc
ins
inc
and
xchg
or
(bad)
out
pop
dec
jmp
enter
mov
pop
cmp
mov
or
rcl
les
and
jae
mov
fbld
aaa
xor
out
call
sahf
iret
pop
fmul
loopne
fcmovnb
inc
pop
data16
cmps
mov
aaa
lea
inc
or
ror
imul
(bad)
push
sbb
nop
mov
mov
pop
mov
jg
call
adc
aas
outs
rcl
add
mov
jmp
leave
push
fadd
jg
pop
daa
mov
adc
ret
or
int
sbb
cmps
xchg
mov
xchg
push
adc
popa
or
fnstsw
xor
sub
cmp
jo
xchg
push
inc
fldenv
cs
push
shl
jge
fwait
adc
push
ins
or
arpl
ret
mov
pop
xor
xor
pop
sub
push
jne
xor
cmps
push
push
add
cwde
imul
fwait
add
aas
outs
movs
and
daa
xor
or
xchg
ret
ins
sbb
sub
dec
mov
(bad)
mov
pop
xchg
xchg
les
push
mov
add
je
add
pop
push
xlat
test
dec
fidivr
xlat
push
movs
aas
dec
push
pop
xor
shr
out
xchg
int
out
fld
sub
jp
inc
cmp
jg
adc
movs
add
out
js
stos
daa
push
pop
movs
inc
rcr
sbb
fst
cmps
into
xlat
adc
sar
out
enter
stc
jle
mov
popf
inc
je
xor
pusha
dec
lods
jo
fidiv
mov
outs
out
je
mov
not
pop
push
push
arpl
or
mov
cmp
cmp
pop
sub
xor
aas
stc
and
cmp
mov
ret
dec
mov
mov
sub
(bad)
outs
enter
sbb
mov
in
repz
add
or
movs
mov
retf
cmc
dec
push
loop
mov
out
xchg
mov
mov
cmp
sahf
xchg
nop
movs
mov
push
dec
adc
add
sahf
js
stos
scas
cmp
loopne
inc
push
push
iret
sbb
sub
sti
je
cmps
mov
repz
int
jbe
jecxz
sub
inc
mov
dec
dec
and
push
popa
or
ret
pop
and
sub
mov
adc
mov
sbb
pop
daa
xchg
ror
(bad)
pushf
jl
into
push
jne
pop
jge
cli
lock
or
push
fs
sub
jbe
and
sub
repnz
pop
pop
daa
imul
rcr
add
hlt
inc
pop
mov
push
cmp
sbb
call
(bad)
pop
sub
sti
mov
out
or
popf
aad
jmp
test
mov
sub
fisub
cmps
jmp
call
and
out
cmp
mov
pop
mov
clc
inc
movs
push
ret
arpl
add
adc
and
scas
iret
xlat
sbb
and
ins
das
cmp
inc
aad
aaa
push
sbb
in
in
or
dec
fstp
sub
cmp
ror
inc
mov
(bad)
into
mov
les
jmp
cmp
(bad)
cdq
test
and
jae
pop
cmc
add
fs
push
or
mov
lahf
fmul
dec
mov
sbb
in
xchg
jno
clc
inc
xchg
pop
mov
xlat
sub
in
je
sbb
sti
pop
add
adc
jge
mov
push
mov
movs
jmp
es
cmp
push
out
add
leavew
fisub
popf
mov
and
call
ds
inc
(bad)
call
das
out
outs
xor
mov
test
imul
jbe
sti
(bad)
imul
sbb
out
fnsave
rol
fldcw
nop
or
sub
ja
cli
add
dec
pop
les
add
push
jmp
jno
in
retf
and
sub
adc
ret
stc
scas
dec
sub
pusha
mov
ja
mov
pop
pusha
xchg
push
pop
aad
imul
outs
(bad)
add
xchg
jle
stc
scas
daa
imul
xchg
ins
arpl
inc
add
mov
rcl
int
xor
mov
out
loope
sbb
pop
bound
xor
test
push
sub
fcom
adc
pop
imul
inc
int
ins
ins
mov
call
ins
or
shr
sub
ret
xchg
or
xor
(bad)
and
dec
pop
out
sub
pop
xor
ret
cmp
fld
push
out
cmp
jbe
push
outs
cmp
jecxz
stos
je
icebp
mov
shl
mov
mov
sub
xchg
or
xchg
dec
shl
or
xchg
add
jmp
aad
jnp
ds
mov
jle
push
cmp
call
gs
aaa
mov
mov
dec
sub
adc
fldcw
sti
mov
call
adc
jns
mov
fdivr
or
jecxz
and
inc
and
add
inc
xchg
jecxz
loop
fisubr
cmps
mov
rol
push
jmp
cwde
aas
add
iret
in
sbb
popa
mov
mov
(bad)
jl
mov
daa
sbb
sub
dec
mov
cwde
or
(bad)
es
aad
retf
push
cli
fimul
test
xor
outs
div
xor
cs
popa
push
stc
inc
and
repz
cmp
cmp
mov
sbb
test
repz
add
sub
pop
cmps
push
clc
jne
mov
sbb
(bad)
addr16
into
jp
je
in
jnp
movs
daa
pop
pop
nop
add
out
push
sbb
retf
arpl
push
adc
xchg
cmps
pop
adc
fwait
xchg
jns
retf
push
sahf
inc
daa
and
sub
shr
addr16
bound
movs
push
sbb
pop
sbb
and
rol
push
jmp
lods
cmp
cmp
pop
cmp
pusha
jne
test
jno
pop
xor
xor
dec
push
pusha
loop
ret
inc
mov
fist
fsub
xlat
cmps
scas
stos
test
mov
jle
les
in
loop
(bad)
ficomp
je
clc
enter
dec
fst
inc
stos
ret
xor
jb
jmp
aam
jnp
push
adc
sub
xor
int3
ret
loopne
in
(bad)
xor
mov
rol
mov
cmp
push
mov
jbe
lahf
jg
outs
fs
adc
pop
test
dec
cmc
pushf
mov
adc
mov
mov
cmps
sahf
imul
fsubr
loop
mov
push
xor
shl
je
icebp
rcl
or
test
jne
fist
inc
adc
aam
push
ss
(bad)
std
push
fisubr
ret
push
pop
ficomp
enter
adc
push
lahf
sar
aaa
push
js
arpl
daa
nop
inc
out
sub
stos
or
pop
xor
repz
retf
xchg
outs
outs
neg
push
call
ja
fisttp
addr16
mov
xchg
scas
push
or
mov
nop
gs
sub
icebp
clc
ror
inc
icebp
call
cwde
add
jmp
cmc
adc
(bad)
jmp
lds
mov
pop
(bad)
mov
push
ret
ror
push
pushf
mov
rcl
rol
shr
inc
mov
fbstp
and
push
fldenv
fidivr
test
inc
(bad)
jmp
outs
dec
fnstcw
imul
and
fisubr
frstor
xchg
imul
jmp
cmp
fmulp
scas
and
icebp
imul
mov
js
in
cdq
call
xchg
sbb
imul
int3
jl
add
cmp
pushf
cdq
pop
dec
mul
push
sar
imul
(bad)
pop
sub
sub
adc
enter
iret
mov
or
pop
dec
cmp
cwde
arpl
jae
cdq
push
cmp
inc
jle
mov
inc
std
mov
dec
test
jo
das
fsub
(bad)
cmc
mov
jnp
dec
pop
jmp
loopne
out
or
inc
add
jl
enter
pushf
mov
push
sbb
and
lea
sbb
inc
imul
adc
sar
repz
inc
fs
inc
(bad)
mov
pop
mov
push
lds
and
cmps
pop
aad
mov
iret
xchg
test
ins
ret
push
push
ins
sub
(bad)
loopne
push
loop
test
inc
fld
xchg
mov
call
arpl
lods
aam
outs
xor
inc
add
add
sbb
cmp
scas
adc
add
pushf
lea
push
jl
in
popa
and
mov
xchg
mov
call
xchg
iret
popf
xor
jb
lea
movd
xor
mov
add
test
dec
or
stos
or
push
xchg
test
cmps
sbb
cmp
data16
shl
cmp
jae
shl
mov
mov
jne
push
icebp
push
adc
test
iret
push
call
pop
pop
stos
cmp
fild
inc
fcomp
sar
rol
(bad)
int3
dec
mov
das
sar
mov
les
bound
mov
rcr
jle
push
jno
adc
je
cs
fimul
sub
jae
dec
mov
lods
shl
stc
xchg
bound
xchg
xor
imul
and
sub
add
or
jmp
pushf
push
sbb
sub
pusha
jge
inc
jnp
ret
jb
stos
mov
sbb
in
xchg
mov
adc
mov
(bad)
repnz
and
lea
ds
xchg
xlat
aam
loopne
add
and
xor
push
hlt
out
and
popf
mov
ror
sub
js
sub
pusha
xchg
repz
std
push
cs
jne
(bad)
cmps
(bad)
aas
mov
mov
mov
mov
int3
call
popf
sub
sbb
mov
add
aad
call
sub
addr16
jge
pop
inc
pop
push
out
out
pop
enter
mov
mov
fcmovne
xchg
dec
mov
inc
inc
sub
push
sub
stc
rol
leave
push
jo
pop
jns
jnp
and
push
adc
mov
mov
adc
push
push
xor
lods
adc
repnz
xchg
push
retf
(bad)
pop
pop
aaa
dec
and
call
int3
add
ins
pop
addr16
fist
repz
mov
sub
mov
sbb
retf
mov
xchg
sti
ror
mov
shl
lods
pop
mov
jno
shr
out
sub
mov
ror
icebp
xchg
int3
adc
mov
movs
and
sub
imul
xor
adc
dec
dec
out
mov
test
ins
imul
jno
jns
mul
outs
pop
shl
cmp
call
xor
popf
inc
retf
daa
jno
hlt
retf
inc
out
test
pushw
test
xlat
enter
jle
sahf
jg
cmp
sub
pusha
scas
sbb
mov
gs
pop
imul
pop
and
adc
xor
lock
jnp
aas
xchg
sbb
out
push
jl
or
xor
mov
jle
(bad)
and
mov
add
movs
ins
lds
stos
and
mov
popa
mov
sub
cmp
cmp
(bad)
leave
adc
pop
xor
mov
ror
or
and
in
imul
call
mov
les
or
call
jp
fcmovnu
inc
xchg
lahf
mov
sbb
fbld
xor
mov
and
xchg
cmp
mov
adc
arpl
xchg
jmp
fidiv
js
push
pop
and
div
mov
aas
cmp
jae
mov
icebp
aaa
sti
inc
rol
xchg
aas
or
adc
mov
jg
sub
sti
xchg
jns
sbb
(bad)
sub
pop
pop
nop
stos
push
mov
add
hlt
sub
ins
das
xchg
and
dec
add
pop
aaa
in
imul
mov
std
add
jne
cmps
mov
inc
xor
push
pop
pop
out
ret
and
pop
cmp
or
pop
int
outs
fadd
mov
mov
test
shl
shl
add
addr16
cld
xchg
jge
jnp
scas
mov
mov
jo
add
(bad)
cld
and
adc
sbb
mov
into
idiv
sub
stos
sar
in
div
mov
inc
cmp
jnp
stc
cs
popa
mov
fucomi
les
das
adc
push
js
jg
jns
mov
add
rcl
jmp
jmp
mov
cld
popa
pop
add
and
sub
sbb
in
imul
dec
lds
test
scas
rcr
or
sbb
ss
popf
dec
jmp
(bad)
imul
xchg
shl
adc
test
mov
aad
sar
js
sar
dec
aas
sbb
daa
or
outs
cmp
push
mov
loop
xlat
and
shr
mov
sbb
loope
rcr
push
gs
adc
cmp
add
test
push
xchg
cmps
shr
(bad)
sbb
data16
into
xor
lock
adc
add
mov
or
adc
inc
mov
xor
test
retf
outs
xor
fisub
pushf
adc
je
retf
loope
mov
jb
inc
add
je
inc
enter
sbb
mov
mov
call
dec
loopne
add
mov
jle
fsubr
sub
and
pusha
loop
or
cmp
mov
stos
mov
ret
and
mov
push
ja
in
scas
jne
sub
mov
adc
sbb
in
gs
loopne
cmp
fmul
out
sahf
in
pop
retf
pminsw
push
loopne
sti
call
push
pop
jmp
(bad)
mov
sbb
sub
push
(bad)
pop
jge
and
add
cmc
push
dec
jne
pop
ret
pop
stos
cld
jle
xchg
sbb
mov
mov
jo
mov
aaa
cmp
xchg
sbb
cdq
outs
(bad)
outs
fst
jmp
or
jmp
dec
sbb
in
enter
loope
dec
mov
push
loop
lahf
loope
sahf
loopne
popf
pop
ja
mov
test
ret
les
gs
aas
dec
xor
xchg
xor
xchg
movs
mov
stos
hlt
mov
movs
or
iret
call
inc
iret
xor
sbb
lods
hlt
call
and
push
xchg
call
gs
scas
adc
iret
mov
pop
mov
addr16
out
sar
ins
pop
dec
in
out
jb
adc
sub
call
dec
je
dec
push
sub
rol
loopne
aas
xor
repz
movs
aam
into
inc
imul
ret
dec
das
lds
xor
out
add
loopne
adc
ficom
nop
jo
push
mov
data16
out
adc
and
aad
sti
lods
(bad)
aad
jecxz
xor
test
ins
call
push
add
outs
pop
xor
mov
mov
add
rcl
call
push
(bad)
iret
adc
sbb
les
mov
sti
pcmpgtw
pop
jns
xor
xchg
or
add
dec
cmp
je
scas
std
imul
loop
mov
sahf
call
cmp
in
mov
loop
and
mov
push
inc
dec
cmp
dec
loope
xchg
mov
dec
adc
jl
xchg
mov
dec
adc
inc
aad
arpl
jb
fmul
repnz
cmp
enter
inc
pushf
call
repnz
cmc
pop
pushf
push
in
mov
sbb
stos
retf
pop
push
mov
xchg
daa
push
cmp
dec
and
and
push
push
bound
cwde
adc
test
pop
stos
mov
mov
frstor
push
retf
in
cmp
pop
fsub
pop
test
xchg
jb
xchg
loop
test
push
call
or
and
clc
or
push
mov
adc
mov
push
pop
fsubr
xor
sub
mov
aam
in
arpl
lods
(bad)
in
(bad)
out
push
sub
cmp
sbb
sbb
pop
fdivr
push
dec
jb
push
cmps
gs
scas
and
lods
fs
mov
js
lods
jle
(bad)
iret
mov
jae
(bad)
sub
cmc
fwait
sbb
inc
inc
dec
mov
cld
sbb
outs
imul
ds
adc
mov
xchg
leave
imul
loopne
push
ficomp
sti
pop
lds
sub
mov
(bad)
mov
leave
stc
mov
leave
push
push
inc
pop
xor
xchg
and
stos
cmps
(bad)
sub
xor
dec
gs
add
shl
dec
sub
push
mov
push
test
movs
ret
cmp
xor
push
mov
jbe
dec
jmp
mov
cmps
leave
push
push
and
rcr
ret
inc
xchg
add
pop
out
and
sahf
lods
scas
in
inc
test
or
mov
push
inc
lods
in
push
push
stos
jo
sahf
fdiv
int
dec
test
pop
xchg
dec
int3
pop
mov
daa
xor
aad
test
cwde
jnp
jae
push
xchg
mov
jae
test
stc
mov
cmps
or
and
push
jp
adc
pop
dec
add
not
mov
fistp
jb
jno
push
jnp
call
aaa
and
xor
lods
xlat
and
jle
push
jge
ja
and
fs
jno
aaa
ins
bound
mov
pop
cmp
fs
call
sbb
sub
and
pusha
shl
aas
dec
adc
xor
bound
das
xor
push
cmc
jb
in
mov
(bad)
fld
stc
and
int3
fdivr
ins
mov
dec
mov
pop
mov
sbb
sub
test
arpl
cmc
or
pop
repnz
jbe
scas
retf
aam
mov
aaa
ret
or
arpl
or
fldcw
fisub
fdivr
mov
leave
imul
jne
jae
dec
cli
ror
fdiv
sbb
xor
cwde
sahf
mov
sar
inc
mov
std
clc
ja
rcl
pop
mov
jp
in
pop
jmp
iret
cmp
mov
pop
imul
jmp
cdq
inc
add
mov
mov
mov
mov
das
sub
cdq
mov
aaa
mov
lds
into
retf
mov
sti
push
and
pop
push
mov
fisttp
sbb
sbb
inc
dec
cwde
loopne
jle
hlt
pusha
stc
sar
mov
cmp
lahf
pop
outs
cmp
fadd
shr
xor
inc
jecxz
call
into
inc
enter
mov
popf
dec
daa
mov
sar
cmp
jo
jecxz
inc
cmp
loopne
mov
retf
sbb
xlat
push
setne
sbb
push
sub
cmp
(bad)
xchg
ins
and
sub
imul
mov
cmp
cmp
(bad)
int
scas
fucomp
cmp
out
lods
repnz
push
std
mov
mov
daa
jno
push
popa
xor
dec
in
adc
and
xor
sar
adc
mov
add
clc
xor
push
and
push
(bad)
jnp
sbb
mov
popf
jecxz
ss
dec
cli
icebp
in
(bad)
cmp
push
mov
push
push
push
mov
aad
push
rcr
mov
jmp
leave
xor
cmps
xchg
cwde
xchg
dec
retf
loope
dec
sbb
sub
imul
xchg
mov
lds
(bad)
fld
xchg
retf
push
or
jmp
mov
inc
mov
(bad)
stc
or
leave
sub
inc
repz
cmp
scas
pop
push
xchg
and
inc
sub
jl
jno
in
pop
loope
adc
sub
sub
mov
movs
add
fwait
in
loopne
movs
fdivr
xchg
sti
xchg
shl
adc
fcmovbe
cmps
mov
dec
mov
cs
scas
jecxz
mov
bswap
jmp
addr16
hlt
imul
outs
lahf
xchg
fs
js
pop
(bad)
pop
icebp
jae
pop
pcmpeqb
jne
das
dec
test
mov
push
add
add
shl
mov
inc
adc
jo
in
es
les
sti
jbe
mov
sbb
pushf
push
loop
cmp
and
retf
retf
fsub
lahf
mov
pop
pop
or
sbb
out
idiv
or
xchg
mov
adc
pop
mov
jg
stos
lods
fcomip
in
div
cwde
or
les
mov
push
shr
pop
mov
sbb
xchg
push
fdiv
iret
and
dec
fucomi
mov
(bad)
scas
movs
xchg
fs
fisubr
ror
sbb
jns
dec
inc
arpl
sbb
hlt
inc
mov
mov
(bad)
test
cdq
mov
push
sub
test
data16
stc
repz
mov
retf
getsec
ret
mov
sub
pop
mov
add
in
je
fild
in
cmp
push
dec
call
push
test
ds
icebp
(bad)
pop
es
dec
mov
inc
sub
dec
iret
or
jmp
(bad)
pushf
dec
add
in
out
std
xchg
in
xchg
push
push
xchg
(bad)
(bad)
dec
js
int
add
lods
clc
repnz
dec
pextrw
and
mov
fld
(bad)
pop
fldl2t
ins
test
nop
and
je
in
mov
add
push
popa
push
es
sub
inc
shr
stc
mov
lahf
rcl
icebp
test
das
adc
push
cmc
repnz
repz
add
sub
or
cli
xchg
shr
test
push
int3
(bad)
jmp
add
nop
push
jno
mov
outs
jne
sub
outs
(bad)
cmp
dec
mov
xor
imul
arpl
std
in
(bad)
ins
imul
jle
inc
xchg
aas
ja
dec
ins
xor
sub
inc
or
fnstenv
je
dec
and
dec
xor
in
mov
(bad)
daa
pusha
jmp
stos
or
scas
inc
xor
adc
inc
jecxz
mov
xchg
mov
mov
and
add
pop
shl
xrelease
adc
pop
mov
push
movs
scas
jg
movs
jns
(bad)
ss
jae
xor
xchg
mov
and
or
push
or
inc
(bad)
sbb
inc
and
mov
aad
shl
dec
add
inc
cmp
inc
push
inc
or
mov
add
outs
jbe
sub
mov
test
mov
cdq
in
adc
push
les
aaa
or
(bad)
jge
cmp
or
into
push
push
lock
pusha
aaa
inc
outs
mov
(bad)
and
repz
push
fldcw
idiv
fiadd
gs
inc
shl
loop
dec
or
stos
cmps
mov
mov
in
pop
dec
data16
sub
sbb
mov
xchg
ret
ror
cdq
push
aaa
loope
ret
sbb
pop
mov
pop
xor
cmps
inc
idiv
in
in
add
shl
sahf
(bad)
and
(bad)
and
jno
loope
lods
cli
mov
mov
lods
cmps
not
pop
pop
cmc
into
ja
jp
fwait
lea
movs
pop
pop
ja
int
cdq
fwait
pop
clc
fadd
(bad)
cli
repz
lock
pusha
rol
addr16
and
(bad)
push
jns
push
fcomp
inc
call
dec
add
mov
fisub
mov
aam
pop
fcmovnb
neg
out
scas
daa
or
mov
aaa
mov
or
push
test
jbe
xchg
retf
jp
int
cmps
fnstcw
addr16
pop
jmp
pop
push
fstp
dec
not
mov
fs
(bad)
cwde
test
int
data16
rol
pushf
mov
xor
fisttp
outs
cwde
rcr
cmps
xchg
retf
je
xor
inc
(bad)
fwait
dec
and
and
cmps
daa
clc
xor
jge
push
pushf
lahf
xor
scas
inc
jmp
ret
and
adc
mov
out
mov
dec
mov
sub
lods
dec
jmp
jle
fcmovbe
test
dec
cmp
mov
dec
mov
rcr
in
leave
test
mov
repnz
jl
mov
popf
gs
stc
jnp
jo
in
js
in
lods
cdq
fwait
cwde
xchg
scas
aad
sbb
dec
jmp
(bad)
ret
cmp
xlat
jne
xchg
and
sub
dec
push
xchg
out
cmp
inc
pminub
int3
jge
test
adc
xor
jnp
push
inc
test
dec
je
push
mov
jmp
xchg
push
ins
pop
inc
int
mov
or
sbb
clc
stos
leave
(bad)
dec
cli
aas
mov
inc
shl
(bad)
jecxz
mov
mov
in
jo
retf
bound
lods
aaa
mov
sub
mov
dec
jnp
stos
adc
aam
mov
mov
adc
mov
ret
xor
loop
dec
pop
pushf
ja
mov
jb
cmps
ins
(bad)
xchg
cmps
icebp
or
das
sub
sbb
jb
sub
pop
dec
push
jg
jmp
lahf
adc
sbb
retf
jp
js
lds
out
inc
jmp
push
lods
hlt
loopne
fsubr
sub
cmp
loop
pop
in
jp
xchg
(bad)
aam
mov
jo
setp
(bad)
shr
jmp
adc
dec
mov
mov
sbb
jne
xor
inc
cmp
jbe
nop
xchg
and
dec
jg
push
xor
mov
daa
(bad)
movs
adc
fcos
mov
cmp
hlt
ja
fs
adc
dec
into
cmp
and
imul
pop
cmp
mov
adc
ja
inc
lods
jmp
movs
(bad)
mov
xor
iret
fnstenv
inc
int3
rcl
lds
dec
jb
movs
in
pushf
test
or
inc
inc
into
adc
jge
add
dec
sub
das
mov
js
mov
and
sti
das
lock
jmp
sbb
mov
pop
das
jo
and
inc
jmp
test
push
leave
outs
pop
std
mov
mov
add
call
leave
mov
icebp
push
xor
fisubr
scas
xchg
cld
mov
nop
iret
xor
loope
lahf
pop
scas
fwait
mov
addr16
xor
scas
psrlw
mov
jae
mov
cmc
sub
pop
in
cmp
pop
sbb
outs
(bad)
gs
mov
mov
cmps
jo
jle
cmps
adc
neg
or
push
push
ds
retf
sub
cdq
div
dec
add
cmp
xchg
lds
jno
jge
out
rcr
mov
or
imul
adc
imul
repnz
xor
int3
les
dec
inc
dec
lods
inc
loope
repz
dec
sub
outs
retf
fld
sbb
ins
mov
rol
scas
push
ins
sahf
push
xchg
add
lods
cmps
loopne
dec
in
mov
xchg
arpl
aad
and
push
add
out
push
dec
jg
mov
lods
jae
sub
movs
movs
xchg
loopne
(bad)
and
in
ja
test
add
addr16
inc
stos
dec
ds
das
(bad)
cmp
arpl
or
add
xchg
std
test
cwde
movs
rol
les
adc
out
cmc
inc
pop
cs
fcomp
into
popf
push
fisttp
cdq
ss
xor
pop
push
cli
mov
mov
clc
ds
cmp
xor
lea
xchg
test
retf
scas
aam
stos
fld
lods
adc
fst
test
in
mov
fs
cld
out
leave
mov
aad
sub
lock
xchg
push
inc
cmp
lds
push
fldcw
imul
sub
cmps
jmp
call
mov
inc
bound
fsub
inc
int
movs
je
imul
sub
stc
add
inc
test
cdq
jo
outs
in
(bad)
sbb
int
cmp
and
adc
jmp
lods
cmp
sbb
ins
inc
mov
imul
mov
xor
push
out
add
or
inc
add
mov
in
lea
jecxz
test
out
ss
jl
pop
pop
repz
adc
push
sub
sbb
cli
loop
cmp
push
mov
xchg
jl
mov
mov
pop
inc
jno
push
fbstp
cmps
hlt
xchg
mul
mov
lds
aad
test
into
xchg
xor
enter
pop
mov
and
push
fcom
scas
clc
mov
(bad)
fsubr
sbb
mov
loopne
rcr
mov
cmp
mov
add
mov
sbb
xchg
cmp
into
cmc
leave
rcl
mov
neg
push
js
mov
mov
push
cmps
xor
neg
ss
jae
pop
and
push
mov
push
jmp
stos
call
(bad)
cs
adc
xlat
and
mov
outs
in
(bad)
out
sbb
rol
inc
or
outs
fld
and
pop
xlat
(bad)
out
or
retf
cmp
enter
adc
dec
mov
cmp
sbb
pop
loope
shl
movs
xor
popa
xchg
out
push
in
push
lds
leave
lahf
scas
daa
pusha
xchg
idiv
mov
pop
ficom
xchg
dec
lea
nop
or
pop
sti
leave
popf
(bad)
call
xor
fistp
(bad)
cmp
jp
xchg
lock
mov
adc
jnp
lock
lods
(bad)
add
add
and
jnp
xchg
cld
cld
stos
aad
rcr
gs
addr16
dec
mov
mov
arpl
out
stos
jg
fwait
mov
push
xchg
cli
add
xchg
inc
mov
dec
mov
mov
(bad)
push
adc
movs
mov
or
or
pop
xor
dec
ins
push
xchg
(bad)
mov
add
mov
xor
cwde
add
sbb
jp
pop
sbb
and
daa
mov
xchg
pop
ss
std
mov
xor
mov
mov
sar
int
jo
enter
pop
shl
cmc
sahf
and
and
sub
icebp
popa
lock
push
jne
(bad)
call
xor
cmp
call
stos
sub
jmp
or
lods
or
(bad)
icebp
jb
movs
pop
aad
mov
sub
xlat
push
mov
les
and
inc
test
in
fstp
dec
push
retf
aad
leave
add
out
retf
jl
sahf
fsubr
xor
push
sahf
mov
xor
cli
les
outs
out
fadd
pop
sbb
mov
(bad)
inc
and
ja
(bad)
xor
es
scas
pop
or
add
mov
inc
sahf
stc
or
into
rcl
pop
push
imul
fstp
sbb
inc
adc
and
mov
test
aas
rcl
(bad)
inc
movs
and
adc
add
(bad)
repz
jae
imul
retf
stos
jl
and
add
mov
dec
stc
jp
mov
jbe
jmp
push
sbb
add
xchg
sti
fiadd
xlat
push
inc
loope
repz
cmp
popf
cmps
cmp
mov
mov
adc
fmul
daa
jnp
cmps
xchg
jmp
add
in
or
mov
(bad)
aad
push
push
jnp
xchg
retf
int3
data16
rcl
mov
loope
mov
test
jmp
inc
stos
lahf
sbb
outs
daa
fisubr
adc
or
cld
mov
repnz
adc
or
or
sub
mov
mov
cdq
xchg
cmp
inc
ins
ret
xchg
jo
scas
jp
sti
stos
sti
or
aad
nop
adc
leave
adc
jae
mov
clc
retf
push
xor
test
push
mov
pop
jne
cli
mov
cmc
addr16
je
inc
jle
dec
ror
xchg
push
or
adc
push
add
retf
(bad)
mov
add
cmc
push
adc
icebp
jl
or
les
ins
mov
add
enter
pop
arpl
(bad)
xchg
adc
and
std
popf
(bad)
jle
xlat
rcr
or
push
pop
dec
stos
movs
mov
fadd
jmp
loopne
clc
sub
and
jp
sbb
scas
mov
jg
jl
repnz
(bad)
xor
xchg
jmp
icebp
in
or
push
xchg
arpl
call
sub
and
xor
or
sar
mov
and
jge
dec
pop
mov
push
xchg
xlat
adc
shl
daa
mov
sub
dec
or
add
mov
push
jmp
cmc
test
mov
push
dec
stc
and
in
rol
jns
movs
pop
cmps
mov
cmp
adc
xchg
jb
cmp
add
mov
adc
dec
jae
push
cmc
mov
aaa
mov
mov
out
adc
push
jno
sbb
stos
mov
mov
sub
mov
push
repz
in
cmps
js
lods
daa
mov
and
and
jo
icebp
jnp
sub
and
push
push
data16
stos
cmp
inc
sbb
sub
push
outs
in
xor
repnz
sub
inc
fdiv
cmp
mov
mov
push
mov
mov
add
psllw
mov
fs
pop
or
adc
cmp
enter
(bad)
aaa
xchg
mov
xor
jne
stos
pop
inc
add
jae
xor
in
cmp
sbb
xor
inc
les
pop
scas
adc
sub
mov
add
aad
inc
sub
cmp
cmp
out
and
std
mov
cmp
in
push
pop
inc
div
xor
sbb
outs
push
std
dec
mov
sub
mov
cmp
and
dec
cwde
aaa
adc
in
sbb
sub
xchg
ficomp
push
xchg
push
jno
or
cli
pop
fcomp
pop
out
sub
sti
cmc
rcl
jecxz
imul
sub
dec
jno
sub
cmps
sbb
cmc
sub
xchg
and
sidtd
mov
out
lock
in
push
ret
fcomp
mov
fimul
out
and
jbe
rol
int3
cmps
jmp
into
out
pop
popf
push
lods
mov
std
dec
fnsave
or
ror
jns
stos
mov
or
inc
test
imul
push
aam
xchg
fbld
aaa
clc
ins
cld
xor
cmps
adc
pop
pop
mov
rol
mov
das
push
popa
jnp
ins
in
je
data16
repnz
fbstp
jnp
scas
dec
push
sub
call
sbb
dec
ins
and
test
mov
mov
sub
push
imul
cmp
mov
sbb
aas
dec
xor
dec
jbe
out
dec
mov
xor
cmps
mov
retf
cmc
fldcw
out
add
inc
aas
imul
ja
mov
mov
xchg
mov
mov
xor
adc
into
sub
leave
xchg
mov
in
dec
xchg
rcr
cmp
rcr
push
movs
fisub
ror
cmc
or
lods
inc
sub
out
mov
pop
mov
pop
fisub
cwde
imul
cmc
clc
adc
movs
loopne
sub
cmp
jae
mov
leave
aam
aaa
mov
push
ret
mov
sbb
pop
call
movs
mov
or
or
stc
mov
sub
inc
ins
sub
call
or
test
inc
cmp
mov
mov
xor
mov
pop
xor
jle
inc
jbe
adc
ficomp
movs
sbb
mov
in
add
bound
inc
xchg
mov
sbb
sbb
xor
repnz
pop
jns
cwde
adc
or
repz
adc
xchg
cs
sbb
ja
xchg
dec
jnp
or
sub
inc
xor
ror
cmp
fidiv
adc
jbe
rol
jbe
das
mov
sbb
inc
mov
xor
adc
mov
rcl
dec
mov
dec
stc
add
aaa
push
mov
cmc
push
aaa
and
test
mov
les
cli
and
or
jmp
ins
cld
mov
arpl
ins
inc
and
xchg
or
loop
rcr
rcr
push
sbb
test
lds
mov
ins
jmp
mov
and
push
cmp
fadd
dec
in
push
lods
mov
mov
pop
xor
pop
xchg
shl
cmp
push
mov
call
cdq
sbb
fs
mov
and
(bad)
iret
adc
cli
jns
fucom
sbb
xor
shl
mov
shl
ds
pop
push
or
adc
cmp
daa
jae
inc
push
sbb
push
jl
sbb
add
or
xchg
push
in
leave
jecxz
cdq
pop
mov
std
cmp
movs
(bad)
les
ja
stc
ins
lahf
mov
(bad)
out
mov
(bad)
or
add
jno
aas
sbb
pop
loop
cmc
out
mov
pushf
jbe
mov
ins
leave
jp
es
xlat
imul
dec
pop
scas
add
adc
push
out
lods
rol
jbe
push
loope
push
mov
dec
and
and
dec
xlat
mov
sbb
pushf
inc
sub
dec
mov
into
stos
jae
xchg
ins
sub
in
and
int
mov
fstp
test
in
xchg
test
xchg
xlat
cmp
inc
shl
aaa
dec
lods
sub
retf
(bad)
fidivr
mov
pop
jnp
or
pop
add
arpl
cdq
test
mov
repnz
scas
xchg
xchg
pop
mov
hlt
aas
adc
sbb
test
hlt
retf
cmp
xchg
sahf
fiadd
fwait
add
mov
dec
xor
add
xchg
test
stos
mov
aas
xor
or
add
mov
shl
add
xchg
push
cmp
push
repz
out
and
jmp
cmp
leave
bound
inc
sbb
cmps
jl
xchg
sbb
jno
addr16
xchg
xchg
fwait
lahf
ret
arpl
inc
xlat
fisttp
push
inc
ror
imul
sub
mov
in
movs
shr
(bad)
loopne
or
les
je
pop
push
or
pop
mov
cmp
retf
adc
sbb
push
lea
stc
loope
stos
ins
scas
mov
ins
in
scas
push
push
jp
mov
jb
mov
call
clc
sbb
leave
int3
xchg
loope
xchg
int
dec
ds
outs
xchg
aad
div
mov
pcmpeqb
ror
add
and
inc
adc
jmp
fbld
int
inc
movs
(bad)
sub
mov
cmp
rcl
(bad)
cmp
dec
lods
jne
cmp
gs
cld
lods
sar
sbb
sbb
arpl
fidiv
mov
inc
mov
dec
std
out
mov
jge
inc
push
fld
out
movs
sbb
aas
xor
push
or
jne
sbb
and
mov
inc
test
pushf
mov
inc
xchg
xchg
clc
(bad)
out
xlat
(bad)
cmp
(bad)
push
loop
xchg
mov
fwait
and
sbb
(bad)
out
cmp
jne
xor
pusha
scas
sub
push
cmp
push
dec
fiadd
dec
(bad)
pop
add
je
pop
ds
mov
xchg
fwait
jp
scas
jmp
inc
cmc
div
dec
cmc
lock
cli
pop
xchg
cld
push
mov
int
or
loope
sbb
lock
adc
std
sbb
dec
jl
outs
push
cld
mov
mov
sahf
out
call
sti
and
push
and
pop
and
or
(bad)
gs
cmp
into
mov
imul
(bad)
push
sbb
arpl
dec
les
xchg
popa
test
out
ret
int
fstp
adc
mov
addr16
out
loop
(bad)
xchg
sub
mov
fwait
push
pop
sahf
push
fst
sbb
out
(bad)
iret
push
stos
push
xchg
mov
mov
jno
imul
mov
loope
mov
popf
mov
xchg
retf
call
mov
mov
aad
or
mov
xor
hlt
call
in
mov
test
xchg
pop
hlt
sub
adc
cmp
mov
push
retf
push
sti
ret
test
jb
mov
mov
test
test
cwde
sub
mov
jle
push
cmc
loop
dec
sub
popf
sub
idiv
into
in
or
push
xlat
ss
and
xchg
sahf
xchg
mov
mov
dec
lock
push
cmp
cwde
sbb
inc
dec
adc
jl
loope
push
adc
or
add
fidiv
ss
and
aas
or
xor
stos
fdivr
outs
cmps
push
and
scas
push
leave
and
mov
and
inc
jmp
fwait
dec
cwde
ins
mov
sbb
into
add
fs
push
add
ins
and
cmp
mov
cli
jmp
and
jge
dec
push
pop
cwde
inc
jp
mov
jbe
add
pushf
xlat
fist
sti
dec
add
stc
xchg
test
sub
lods
push
mov
(bad)
lods
cwde
and
adc
mov
inc
pop
ins
mov
jge
scas
cmc
pop
not
enter
jbe
imul
push
add
mov
or
test
mov
mov
xchg
pop
aad
pop
fwait
into
adc
aas
mov
fwait
call
scas
adc
in
fsub
bound
sbb
inc
jo
lock
push
(bad)
inc
xchg
pop
push
sbb
or
inc
jmp
out
and
xchg
xchg
(bad)
dec
mov
and
or
pop
dec
call
add
ret
sbb
pop
or
push
ret
ss
xor
inc
test
in
out
adc
fisttp
lea
xchg
sbb
fdivr
mov
ja
mov
out
mov
pop
je
or
pop
in
jo
aam
int3
call
out
out
sbb
inc
or
xchg
inc
mov
mov
mov
adc
rcr
into
mov
adc
sub
into
mov
sub
or
(bad)
(bad)
dec
test
mov
push
sub
arpl
repnz
clc
stos
dec
dec
(bad)
sbb
js
inc
pop
sbb
fisub
test
leave
or
retf
adc
inc
loopne
test
sar
xchg
jle
add
push
xchg
jmp
hlt
ins
(bad)
xchg
aas
lea
xchg
pop
arpl
add
shl
ret
iret
stc
sub
push
and
out
imul
sbb
dec
stos
cmps
or
js
cmp
loop
into
xchg
push
add
and
clc
adc
cli
push
aam
xchg
cmp
arpl
bnd
xchg
mov
dec
test
mov
mul
or
xchg
adc
or
ret
repz
inc
jle
or
dec
jnp
bound
jp
xchg
sbb
jns
cwde
loopne
cmc
int3
fild
cld
mov
xchg
xchg
jp
xor
pop
rol
imul
pop
mov
sbb
pushf
test
loop
sub
sub
mov
xchg
sbb
and
push
bound
or
ret
bound
mov
into
outs
push
xor
(bad)
loopne
and
adc
jg
jae
mov
push
inc
pushf
lock
jge
mul
dec
fisttp
xchg
adc
jae
mov
rcr
imul
push
fsub
and
ja
rcr
xchg
movs
push
sub
jne
cmp
jo
mov
bound
adc
jp
push
jl
add
sub
push
jo
int
bound
dec
sbb
cmp
inc
sahf
fisttp
jns
div
iret
xor
push
test
call
out
xchg
ja
push
inc
push
int
in
int
sbb
leave
mov
push
push
clc
pop
ret
pop
add
mov
xchg
jno
dec
mov
mov
test
std
in
lock
sub
mov
mov
in
cmp
loope
adc
sti
pop
sbb
xchg
pop
pop
aad
or
cs
(bad)
out
and
mov
fcomp
icebp
icebp
sbb
cmp
jecxz
dec
mov
jnp
scas
xchg
rcr
ror
xchg
movs
ds
xlat
mov
ret
inc
test
fucomip
sbb
xor
cmp
mov
sbb
pop
pop
iret
cs
and
aam
adc
mov
mov
pop
dec
add
mov
popf
mov
mov
mov
mov
(bad)
sub
sahf
std
xchg
mov
(bad)
(bad)
jnp
xor
rcl
enter
retf
and
jmp
push
stc
lods
sti
popf
movs
push
outs
movs
in
call
pop
enter
aaa
sub
rol
retf
pop
jge
fs
sub
and
lods
fist
sti
imul
sbb
(bad)
out
stos
mov
leave
mov
inc
sbb
add
sub
out
xchg
stos
je
fnstenv
idiv
push
addr16
jmp
mov
jo
inc
fimul
jbe
or
ret
and
ins
cmps
test
jle
outs
hlt
push
or
and
(bad)
fld
ds
bound
ins
ins
outs
jecxz
adc
mov
in
inc
mov
pusha
popa
ficomp
add
sbb
(bad)
stos
test
inc
inc
and
sbb
or
mov
pop
pop
inc
(bad)
inc
fsubp
movs
push
out
in
retf
test
mov
pop
loop
push
std
mov
ret
dec
cmps
mov
sub
daa
cmps
fwait
push
lock
jge
mov
lock
mov
call
and
ins
xlat
mov
popa
std
or
mov
mov
cs
add
xchg
int3
jo
pop
mov
je
scas
retf
inc
movs
cmp
loope
jp
push
ror
cs
jmp
cmp
sub
stc
dec
out
sub
mov
call
inc
jmp
scas
lahf
adc
mov
jle
not
lea
inc
sbb
push
mov
cmc
jne
ror
stos
jo
or
pop
push
daa
fisttp
xor
push
jno
push
sbb
rcl
nop
or
cmp
aas
jae
cld
ret
cs
rcl
pop
mov
popa
sbb
mov
(bad)
rol
and
xchg
push
pushf
push
pop
pop
push
jb
mov
repnz
iret
and
retf
rcr
lds
or
pop
stos
xchg
rcl
lods
ds
adc
jmp
add
sbb
sub
cld
sti
daa
and
xchg
repz
pusha
mov
stc
shl
cmp
sub
loop
lods
inc
ret
ror
stc
sti
mov
ficom
push
test
out
mov
pop
mov
fld
jne
cmp
jnp
add
jle
push
or
mov
pop
jecxz
nop
sub
xchg
xor
dec
dec
mov
fwait
push
jns
jne
add
xchg
and
or
mov
adc
les
cmps
mov
popa
sbb
test
jge
xor
dec
adc
icebp
or
xor
inc
hlt
call
dec
adc
push
scas
and
xchg
mov
xchg
cmps
jl
aaa
sub
jbe
add
xchg
sti
add
and
or
fsubr
call
stc
mov
pop
fisttp
in
mov
inc
sbb
ror
jmp
sbb
pop
cld
dec
inc
(bad)
jns
xchg
lea
jno
dec
cmps
jno
sbb
cmp
or
enter
or
push
fsub
rcr
ret
adc
ja
pop
pop
enter
sub
push
or
movs
push
nop
scas
test
stos
adc
out
sub
xor
xchg
out
or
(bad)
(bad)
push
js
ret
dec
jg
les
xchg
aad
jae
out
dec
cli
sbb
out
lea
enter
in
lock
jae
ror
popf
jmp
std
push
cmps
(bad)
xchg
std
ds
scas
xchg
mul
xlat
lock
sbb
and
pushf
jge
mov
xchg
cmp
(bad)
out
push
or
mov
and
aaa
imul
ss
cmp
aaa
push
mov
jecxz
or
sbb
xchg
dec
fcom
push
clc
cmp
pop
inc
imul
repnz
jmp
shl
mov
iret
lods
mov
dec
fiadd
fisttp
lock
popa
and
push
pop
mov
imul
fwait
xchg
jmp
(bad)
mov
lahf
adc
jge
addr16
inc
addr16
jmp
lds
aas
ror
xchg
and
popf
push
repnz
jmp
(bad)
adc
inc
call
mov
sub
mov
push
adc
daa
jle
adc
dec
cmps
hlt
out
aam
xlat
cmp
movs
mov
push
cwde
loop
pushf
push
mov
mov
rcl
in
xchg
or
pushf
jbe
xchg
in
xchg
fsub
inc
pop
mov
xlat
dec
ret
mov
movs
push
xor
popa
jp
loopne
cmps
jae
bound
(bad)
(bad)
hlt
cwde
pop
test
mov
int3
loopne
loope
in
jge
ss
test
ds
push
sbb
adc
xchg
(bad)
cli
fiadd
in
jmp
loop
test
xchg
aam
dec
jno
fnstenv
shl
mov
outs
int3
aad
jmp
jb
dec
add
jmp
(bad)
call
pop
mov
or
xchg
inc
adc
iret
pop
shl
inc
and
ret
push
test
mov
push
(bad)
pop
jge
ds
add
ins
cmp
dec
mov
out
sub
jg
inc
pop
cs
imul
popa
sti
aas
xchg
addr16
sub
iret
scas
es
fadd
dec
jmp
jo
not
cmps
pop
or
loope
ficom
cmp
aas
push
push
ss
je
xchg
xchg
(bad)
cmc
xchg
loope
mov
jle
into
enter
and
mov
mov
mov
cmp
push
idiv
jne
cli
push
int
jle
inc
sub
jge
mov
and
sub
hlt
jmp
sbb
mov
push
or
add
adc
test
cdq
dec
lock
dec
add
hlt
ja
add
push
out
adc
or
lahf
xor
mov
call
mov
(bad)
shl
xor
mov
shl
(bad)
xchg
dec
fwait
out
pop
push
cmp
mov
je
or
mov
mov
xor
imul
mov
fisubr
out
loop
add
fisttp
sbb
push
loop
in
push
retf
ret
fwait
les
test
cmp
hlt
mov
scas
das
mov
js
jmp
lock
in
call
cmps
cli
jg
xchg
pop
mov
test
imul
sbb
and
pushf
or
cmp
jg
lock
sbb
test
and
movs
addr16
rcr
mov
xor
push
xor
or
outs
ins
movs
jno
call
ins
daa
hlt
mov
sub
cmp
pushf
jne
xor
adc
loope
xchg
pusha
push
pop
and
push
gs
mov
xchg
add
push
and
out
pop
pop
jmp
pop
xchg
inc
xor
pop
sub
inc
repnz
cmp
mov
test
pop
mov
lds
ror
push
jg
mov
sahf
dec
std
jns
and
inc
push
scas
int
mov
and
repz
ret
mov
adc
inc
sbb
mov
xchg
fimul
mov
in
pop
pop
cmps
inc
addr16
push
xchg
lods
mov
rcl
inc
mov
cs
and
xor
mov
lahf
sub
jno
xor
fs
movs
enter
je
ficom
je
sbb
cmps
cwde
fld
sbb
xor
push
mov
inc
popa
fisttp
mov
push
cmps
loope
pop
add
inc
(bad)
pop
jecxz
sub
test
out
popa
sti
inc
jns
inc
shl
neg
mov
bound
out
imul
aam
push
xchg
scas
cmp
repz
dec
xor
mov
sbb
je
call
pop
les
fld
scas
aaa
aaa
sub
cwde
sub
call
nop
inc
fisubr
(bad)
setp
test
add
fsub
(bad)
mov
nop
out
xor
and
xor
push
int3
aam
mov
push
cmp
mov
loope
fldcw
std
scas
jo
cmps
mov
loop
das
(bad)
mov
jns
movs
inc
lock
aam
stc
cs
and
dec
lds
jo
dec
mov
jne
pushf
mov
stc
sub
retf
mov
loopne
(bad)
jne
std
mov
lea
test
loopne
outs
neg
outs
mov
neg
mov
mov
sbb
cli
add
mov
pop
ror
hlt
pop
adc
jmp
sbb
cmovne
stc
inc
sbb
pop
push
cmp
cmp
sbb
add
bound
sbb
add
sbb
jge
test
das
inc
push
imul
iret
inc
aaa
mov
push
into
sbb
sub
rol
xor
adc
mov
imul
pop
and
jmp
push
ins
(bad)
mov
mov
mov
loopne
mov
dec
hlt
mov
ins
mov
shr
xor
xchg
jno
inc
ficomp
test
lea
xor
in
push
es
cli
int3
mov
push
pop
ja
mov
sbb
and
sbb
inc
leave
or
jecxz
jo
push
jmp
jp
int3
ror
fidiv
cmp
inc
xchg
xchg
add
sbb
lahf
repnz
push
adc
ds
inc
iret
das
pusha
inc
repz
popa
push
jae
scas
pop
add
imul
and
lock
cmp
fnstcw
rcr
ret
mov
movs
inc
(bad)
adc
sbb
sub
jns
push
xchg
test
mov
retf
mov
adc
mov
fsubp
mov
jae
mov
in
lock
(bad)
aad
cmp
cmps
scas
xchg
imul
mov
cmp
push
xlat
rcl
shl
lahf
and
ror
js
mov
mov
js
adc
push
sbb
leave
mov
or
xor
repz
add
add
dec
in
sub
push
inc
stos
jecxz
push
pop
and
es
mov
scas
inc
mov
push
and
pushf
mov
sub
cli
push
nop
jp
ins
xchg
xchg
mov
inc
adc
cld
(bad)
mov
inc
out
push
in
inc
dec
dec
daa
inc
retf
bound
aas
xchg
pavgw
sbb
hlt
or
xchg
mov
xlat
mov
jmp
les
pop
int3
scas
fmul
adc
lods
inc
cmp
clc
push
outs
or
stos
out
xchg
pushf
in
ss
mov
mov
sbb
jae
and
sub
jno
das
outs
iret
sti
jo
pop
sbb
aaa
(bad)
adc
sti
stos
push
adc
neg
push
movs
scas
sub
movs
mov
pop
(bad)
sbb
xor
gs
je
xor
xor
and
jns
(bad)
adc
pop
xchg
push
mov
sbb
retw
pusha
mov
jmp
mov
jmp
add
ret
test
mov
dec
shr
or
inc
pusha
sbb
sbb
xchg
repz
mov
arpl
push
jb
xchg
xor
leave
sub
sbb
lods
dec
jge
repnz
rcl
cmp
push
and
adc
pop
or
xchg
mov
rol
lock
cmp
jns
pushf
outs
test
jmp
add
rcr
xor
mov
jmp
jecxz
scas
or
mov
int3
cmp
mov
hlt
pop
jle
aas
add
int
pop
call
icebp
cwde
push
iret
and
jle
push
icebp
out
je
mov
inc
push
test
bswap
out
mov
xor
ds
cmc
jg
xchg
mov
call
cmp
retf
push
mov
and
mov
mov
js
nop
ss
loop
mov
sub
mov
and
jmp
bnd
pop
xor
and
test
add
rcl
cdq
xchg
ss
out
jmp
ins
sub
sahf
push
sub
hlt
enter
mov
cmps
jb
aas
and
pusha
push
aad
scas
xor
sub
stos
xor
xchg
popf
push
mov
ja
test
sbb
jnp
xchg
(bad)
iret
daa
out
add
ja
imul
sbb
nop
ror
jae
out
dec
pop
js
jns
push
shl
ret
fucomip
dec
mov
mov
ret
add
cmp
pop
add
xchg
xchg
cld
in
adc
mov
push
fmul
pushf
sub
nop
loope
mov
inc
(bad)
std
ins
xchg
mov
jns
cwde
aas
cmp
cmp
jmp
mov
mov
push
xchg
cmps
fucomi
mov
pop
adc
imul
pusha
xchg
(bad)
jmp
fnstenv
int3
loop
cmc
sbb
push
and
push
sub
push
or
xor
pop
dec
imul
fiadd
jge
adc
in
or
mov
or
fdiv
push
pop
rcl
sahf
mov
arpl
xchg
rcr
xlat
push
int
shr
pop
mov
mov
sbb
shr
xchg
sub
fsubp
xchg
stos
retf
bound
int
push
rcr
pop
or
jp
inc
add
and
and
mov
sbb
je
je
das
mov
in
jo
(bad)
das
loop
push
inc
mov
cmp
sub
or
imul
outs
inc
mov
mov
mov
pop
or
xor
adc
pop
(bad)
cmc
inc
fisubr
int3
shl
or
pop
fmul
mov
jbe
sar
jne
add
test
or
cmovbe
and
mov
mov
ret
pop
xor
pop
lods
outs
add
popf
daa
push
dec
and
sti
dec
data16
inc
sar
xor
daa
pop
pusha
mov
stos
lds
push
(bad)
cmc
push
jae
adc
retf
je
movs
jmp
jle
jb
cmp
in
pop
cmps
pop
and
dec
ja
add
bound
xlat
inc
dec
push
cmp
fs
vandpd
mov
(bad)
lods
stos
add
sbb
xchg
mov
push
ss
(bad)
and
jecxz
fistp
icebp
xchg
imul
pushf
push
or
or
sub
not
cmp
retf
stos
(bad)
mov
sbb
and
cdq
add
xchg
add
aam
cmp
push
pop
ds
inc
adc
pop
jno
adc
retf
and
in
pop
cmp
push
repnz
xchg
mov
imul
mov
xor
(bad)
gs
sbb
sub
push
adc
mov
mov
mov
ret
and
xor
call
lods
jae
aas
out
retf
aam
les
(bad)
jmp
cmps
sahf
not
pop
sar
shl
(bad)
or
loopne
jne
sub
xchg
sub
xor
hlt
adc
aaa
inc
gs
and
push
or
or
dec
mov
or
and
jecxz
add
test
mov
sub
mov
adc
adc
lock
push
and
xchg
daa
mov
mov
retf
jg
(bad)
mov
xor
sub
mov
data16
push
xchg
jmp
xchg
xchg
call
loope
(bad)
pushf
mov
in
jae
ror
gs
ss
pop
movs
jecxz
lods
inc
mov
xchg
adc
sub
add
jecxz
push
adc
imul
mov
and
or
mov
or
fiadd
mov
add
test
clc
std
mov
aas
into
jmp
ja
push
hlt
clc
int3
mov
les
xor
inc
push
stc
call
mov
in
aaa
sbb
fsub
sub
pop
ret
fsubr
add
mov
aam
test
inc
mov
sub
adc
repz
dec
and
scas
cs
cmps
mov
push
mov
cmp
sbb
lock
ins
or
sbb
(bad)
(bad)
adc
and
sbb
arpl
out
repnz
test
and
add
dec
mul
clc
xchg
stos
pop
add
dec
int
or
fs
(bad)
cs
outs
int3
cs
pop
and
sbb
arpl
daa
movs
imul
or
dec
and
or
xor
mov
push
(bad)
lods
sti
mov
es
and
leave
vaddsubpd
cmc
xchg
xlat
sub
pop
ror
xchg
test
cld
shl
or
aas
jnp
lock
push
ror
test
nop
in
push
daa
mov
jle
stc
sbb
add
(bad)
mov
cld
xchg
cld
not
out
cmps
ds
mov
jno
xor
add
and
lahf
jno
mov
popa
sar
shl
xor
mov
mov
xor
out
call
mov
ficom
in
shl
jp
sbb
mov
aaa
imul
xchg
or
(bad)
pushf
into
nop
dec
pop
cmp
fwait
sub
movs
mov
push
clc
pop
adc
or
cmp
mov
call
sbb
es
aas
jae
aas
int
loope
out
icebp
xchg
lea
imul
cmp
mov
sbb
push
xchg
add
outs
jae
push
loop
mov
call
sub
out
out
mov
fwait
imul
and
mov
shl
cmp
(bad)
mov
lahf
jle
adc
and
add
shr
mov
pop
add
and
xor
gs
sub
sub
ins
xchg
and
xchg
push
call
push
xor
add
cdq
mov
push
outs
jae
inc
jb
test
cmps
sub
aaa
(bad)
or
xor
pop
cmp
sahf
fsub
cmp
out
pop
ss
imul
and
push
cld
out
fimul
mov
xor
into
fsubr
lock
add
or
push
cmp
adc
or
cmp
mov
xchg
(bad)
and
cmp
xchg
mov
sbb
mov
sbb
sbb
or
add
aam
pop
loopne
loop
cmp
pop
pop
or
mov
movups
jns
mov
icebp
dec
(bad)
call
pop
cmp
iret
sbb
mov
(bad)
fidivr
cmp
in
sahf
jg
pop
dec
hlt
add
ins
mov
mov
retf
fidivr
out
push
push
mov
fs
mov
cmp
aam
adc
dec
inc
mov
pop
inc
inc
mov
pop
sar
xor
dec
pop
dec
xchg
test
out
sbb
mov
xlat
pop
pop
pop
pop
stos
(bad)
push
cmps
sti
adc
imul
xchg
ds
and
push
les
push
movs
xor
lods
(bad)
push
ins
in
mov
sbb
mov
dec
mov
mov
aam
add
adc
je
and
xor
leave
adc
jns
in
mov
or
int
loop
mov
adc
mov
jle
xchg
lahf
data16
mov
int
adc
aas
scas
out
fsub
mov
mov
pop
cmp
pop
leave
or
iret
imul
dec
inc
mov
pop
pop
retf
adc
mov
fcom
dec
std
sub
cmp
js
(bad)
test
fsubr
shr
lds
div
dec
arpl
inc
sar
cwde
and
sti
fiadd
pop
popa
add
ds
mov
rol
jecxz
jg
sbb
outs
mov
loopne
repnz
mov
add
add
ficomp
pop
and
push
(bad)
jno
into
jae
dec
xchg
inc
fidivr
imul
sub
repz
mov
(bad)
mov
sub
fcmovbe
arpl
pop
call
dec
(bad)
jne
mov
cmp
pop
jno
int
in
int
fimul
cmp
and
stc
dec
clc
cmps
adc
arpl
or
sbb
mov
cmp
dec
retf
add
push
je
int3
xor
mov
jae
mov
mov
inc
lahf
test
aas
push
push
xchg
aas
jle
fsubr
pop
cdq
pop
das
(bad)
dec
nop
pusha
jns
imul
jmp
sbb
jbe
push
xchg
add
retf
add
pop
and
hlt
ins
or
and
dec
xchg
and
add
hlt
xor
popa
or
movs
repnz
and
and
imul
cmp
inc
cwde
int3
pop
dec
pop
pusha
test
xor
xor
sbb
fdivr
pop
imul
out
sbb
xchg
ins
ins
pop
cmps
mov
xchg
pop
or
sub
mov
mov
inc
cmp
fwait
mov
xor
cmp
in
imul
ficomp
mov
mov
mov
neg
lahf
pop
jb
mov
mov
pop
push
cmp
(bad)
cmp
pop
lahf
sahf
out
ret
ins
sti
jo
das
std
jb
jp
cmc
jae
mov
retf
cmp
xchg
mov
jecxz
mov
lods
sub
scas
sub
sar
mov
clc
mov
(bad)
clc
dec
push
mov
jg
mov
scas
dec
mov
add
or
sbb
dec
mov
into
push
imul
mov
aad
push
sbb
fcomp
sti
or
mov
and
dec
pop
sub
retf
dec
loop
ror
leave
shl
cmp
push
adc
jle
jle
cmp
popf
dec
bound
arpl
mov
sbb
xchg
add
movs
jae
jge
retf
jmp
dec
pop
addr16
mov
shr
enter
js
push
pop
jmp
mov
repz
pop
imul
add
fwait
pop
int3
xchg
mov
repz
mov
inc
ins
xor
jp
shr
inc
ins
rcr
sbb
sub
jmp
ins
aad
jp
dec
fisttp
mov
int
cmp
mov
sbb
inc
ret
into
xchg
outs
mov
xchg
hlt
rcr
mov
shl
in
pop
cmp
or
adc
dec
cld
ds
push
ret
iret
(bad)
jmp
(bad)
dec
pop
stos
aad
cmps
pop
cs
pushf
add
icebp
pusha
inc
or
test
loop
jecxz
jnp
shl
inc
pop
imul
ja
fldcw
xchg
std
xchg
ja
dec
jle
les
pop
pop
ss
cmp
gs
push
sub
lods
pop
in
push
mul
gs
mov
test
jp
in
cmp
(bad)
pushf
jo
pop
cmp
jns
aas
pop
xor
mov
pop
xchg
pop
aas
push
xchg
jne
jb
mov
add
xor
loopne
arpl
sbb
enter
xor
test
jbe
mov
ret
sbb
dec
add
pushf
mov
movs
mov
mov
(bad)
jecxz
jne
and
push
test
sub
int
push
loope
mov
mov
jge
pop
fnstcw
cmp
xor
fcmovu
sar
repnz
imul
int
out
in
clc
loope
mov
ret
scas
and
hlt
mov
cmp
jns
mov
fwait
(bad)
scas
or
lea
mov
cli
lods
cs
in
sbb
nop
pop
aaa
mov
(bad)
inc
dec
xchg
jnp
dec
aad
adc
mov
mov
out
pushf
outs
in
and
sub
js
mov
test
out
in
mov
cmp
repnz
jge
xor
popa
adc
(bad)
int3
icebp
mov
fwait
mov
aad
mov
cmp
cmp
aad
mov
jle
dec
jne
dec
data16
je
ret
adc
adc
stc
(bad)
jp
xchg
mov
cmps
out
jl
adc
push
fwait
and
inc
jnp
aaa
movs
pop
leave
inc
lds
and
cmc
cli
fldl2t
mov
mov
adc
ss
scas
and
lea
push
int
leave
hlt
fcmovnbe
cmp
pop
out
fild
ins
iret
mov
adc
push
ins
out
or
xchg
ds
leave
outs
shr
leave
ja
sbb
push
push
shl
pop
xchg
rol
dec
push
shr
pop
xor
mov
shr
pop
or
in
push
pop
mov
cmp
cmp
inc
mov
adc
sub
inc
or
call
mov
neg
dec
mov
xor
popa
jae
adc
out
ins
pop
pop
movs
add
mov
mov
or
and
pop
ret
ss
das
int
push
mov
jb
ins
nop
cmps
adc
leave
add
xor
sbb
loopne
push
jno
inc
add
sbb
xor
pop
rcr
std
int
jge
ins
mov
aam
loope
ins
or
cwde
leave
ins
les
cmp
xchg
sar
cmc
cmp
adc
mov
push
call
pop
out
mov
jns
call
test
shl
fnstcw
ret
push
clc
test
mov
jle
inc
dec
ss
pop
cli
js
popf
js
dec
rol
outs
xor
jno
bound
xchg
pop
mov
push
out
fdivr
push
cmc
mov
dec
pop
cmp
inc
adc
ret
adc
imul
jp
imul
cmp
ror
jbe
mov
fistp
push
xchg
mov
ds
pop
and
stc
repz
jg
mov
sub
outs
out
mov
adc
ins
or
fcomp
push
dec
leave
or
sub
aaa
(bad)
mov
mov
test
jmp
shl
(bad)
dec
jo
pop
loop
adc
mov
das
mov
lods
fwait
inc
xchg
sbb
hlt
push
rcr
ror
aas
int
(bad)
xor
mov
sub
mov
lahf
cmps
cmp
aaa
xlat
or
stc
adc
sbb
cdq
rol
xchg
scas
pop
jnp
mov
inc
out
cld
data16
fcmovnu
cmp
mov
loope
pop
and
mov
sub
outs
sub
nop
jmp
test
mov
sub
pushf
clc
fstp
sbb
ins
push
pusha
cmps
jmp
xchg
outs
add
cmc
push
sub
shr
sbb
sbb
cmp
sbb
push
(bad)
call
adc
into
sub
push
aad
lock
out
or
sub
fldcw
sbb
jb
fistp
xchg
mov
in
cli
push
mov
mov
push
fdivr
aaa
mov
cwde
push
das
push
mov
out
dec
mov
add
(bad)
adc
sub
mov
ficom
xor
adc
pop
dec
add
sbb
retf
xor
out
inc
xlat
mov
mov
cmp
mov
icebp
inc
adc
adc
mov
pop
pop
push
mov
adc
jp
(bad)
cli
dec
xor
cwde
shr
imul
push
outs
repz
aad
sub
add
in
adc
lods
mov
rol
(bad)
(bad)
clc
adc
bnd
or
arpl
xchg
int3
cmp
pusha
fist
inc
add
cwde
sahf
jge
lock
pop
pop
push
pop
out
and
lods
or
(bad)
bound
or
dec
xor
lds
push
ds
cmp
jne
not
mov
jge
into
adc
loope
xor
mov
mov
xchg
ss
push
xchg
inc
in
inc
stos
add
daa
adc
mov
shr
mov
dec
fild
push
cmp
sub
sub
dec
movs
mov
adc
push
mov
cwde
cmp
mov
sti
cdq
std
idiv
inc
and
add
or
xchg
xor
test
or
jg
in
lods
bound
adc
repnz
mov
imul
adc
push
mov
into
popf
or
jecxz
int
pusha
scas
sbb
dec
jne
ror
int
stos
sti
cli
arpl
xchg
mov
mov
fidiv
cmp
add
cs
out
outs
mov
out
mov
pop
xor
enter
mov
cdq
fnstsw
push
add
jecxz
jp
mov
aam
call
and
addr16
mov
out
outs
mov
pop
mov
mov
pusha
pop
sbb
repnz
ins
das
call
hlt
cmps
lods
shl
leave
ret
lods
(bad)
jbe
inc
out
sar
adc
and
pop
or
cmp
push
mov
outs
xchg
imul
retf
cs
aas
add
sti
inc
mov
pusha
mov
dec
repnz
retf
(bad)
push
push
ret
dec
add
aad
imul
xor
call
jne
cmp
pop
mov
data16
adc
fwait
xor
hlt
sahf
cmp
adc
das
call
push
add
inc
lods
leave
pop
fwait
cld
sahf
or
or
iret
inc
pop
cdq
or
mov
adc
mov
sbb
hlt
mul
movs
inc
pop
stc
jne
repnz
xchg
test
or
(bad)
jmp
or
sti
sahf
retf
jge
stos
cmps
imul
or
loopne
mov
add
mul
or
adc
sbb
push
enter
mov
mov
shr
cmc
and
sti
jo
adc
mov
scas
inc
adc
cs
push
push
xor
and
sbb
inc
adc
jmp
leave
mov
and
sub
pop
cmp
(bad)
outs
inc
jge
leave
mov
fs
mov
pop
pop
mov
lods
push
daa
(bad)
sahf
mov
idiv
cmp
xchg
fiadd
mov
add
mov
out
cmc
sar
mov
push
adc
shr
popf
cmc
mov
imul
push
cs
sbb
xchg
sbb
test
fneni(8087
hlt
int
add
sub
lahf
enter
xor
shl
es
add
sbb
push
call
pop
mov
sar
mov
dec
xchg
mov
aaa
call
push
inc
imul
xchg
xchg
sub
loopne
stos
xor
int
xor
bound
dec
jae
jp
jae
pop
dec
retf
je
or
dec
xor
pop
les
imul
ins
cmps
fdivr
ins
inc
push
aaa
fyl2xp1
sub
lods
mov
jo
repnz
jno
and
mov
rcr
ror
stos
or
ror
daa
jg
dec
fsub
outs
fnstcw
pop
rol
cmp
retf
push
pop
lea
bound
mov
inc
fstp
sub
add
inc
or
lock
imul
cs
add
push
sub
and
mov
daa
into
sub
inc
xchg
call
daa
(bad)
aas
fcomi
push
pop
dec
mov
push
push
call
inc
es
jns
mov
jmp
jnp
xchg
add
push
push
in
push
cld
xchg
add
fwait
test
jne
mov
mov
aas
lss
pop
xor
mov
mov
jge
xor
mov
mov
cli
xlat
cmp
pop
dec
gs
mov
fsub
mov
push
ret
dec
xor
xor
dec
adc
cld
jo
je
and
or
push
jmp
inc
mov
mov
mov
adc
movs
push
sub
stos
int
popf
daa
movs
stc
loop
jb
add
ins
add
mov
pop
cmps
mov
or
push
fisttp
into
jmp
adc
addr16
push
neg
mov
mov
rcl
in
cld
mov
push
sub
scas
scas
sbb
sub
movs
mov
xor
out
daa
ja
xchg
mov
cmp
adc
mov
mov
out
in
dec
ror
loope
rcr
and
ret
cmp
sbb
jl
cmp
and
leavew
xchg
inc
neg
popf
movs
les
sbb
cmp
jnp
sbb
dec
and
jmp
jae
les
test
shl
leave
dec
push
addr16
or
or
xor
push
call
outs
lea
sbb
add
xchg
xchg
pop
mov
mov
sahf
loopne
pop
loope
adc
pop
sbb
mov
cmp
(bad)
in
push
mov
fisub
adc
or
jbe
add
push
movs
add
aad
inc
jnp
add
mov
sbb
iret
mov
mov
ret
or
or
xchg
push
adc
xchg
xchg
xchg
adc
pop
add
cld
push
movs
or
in
(bad)
jmp
mov
mov
or
out
lds
adc
xchg
jmp
mov
into
sti
fcom
fbstp
addr16
in
adc
adc
add
mov
out
lea
shr
out
loopne
mov
aam
sub
and
dec
sbb
and
shl
cmp
inc
ja
cs
lds
loop
ins
dec
cmp
xor
adc
rcr
arpl
push
gs
cmps
xchg
mov
(bad)
mov
pop
outs
fnstenv
inc
stos
test
pop
mov
rol
push
repnz
out
sahf
jnp
pusha
sub
xchg
push
push
stc
jmp
pop
lea
jl
pop
imul
pop
adc
xchg
out
(bad)
repz
sbb
mov
xchg
je
iret
xchg
ss
stc
jp
jnp
jae
fs
jle
sbb
(bad)
leave
sbb
cmps
push
ds
adc
cmp
es
aad
scas
mov
in
add
scas
xlat
pop
add
push
xchg
sti
xor
or
test
push
and
(bad)
ficomp
and
aaa
dec
dec
push
pop
call
xor
test
imul
arpl
lds
jno
ror
fwait
mov
inc
frstpm(287
or
popf
call
repnz
add
int
adc
leave
inc
fisubr
js
xchg
fmul
shl
jp
lods
mov
xlat
push
pop
arpl
mov
ss
sbb
xchg
xchg
mov
inc
or
pop
push
mov
in
popf
adc
in
movs
push
adc
dec
xchg
mov
in
jmp
cmps
and
(bad)
out
mov
fsubr
popa
mov
mov
and
retf
scas
fstp
cmp
cld
jno
ins
dec
cmp
cmp
mov
xor
lods
or
repnz
das
mov
cmc
inc
sub
mov
pop
dec
js
inc
out
jae
movs
pop
and
push
mov
retf
imul
mov
cmp
movs
ins
push
mov
dec
jne
test
mov
add
pop
and
fistp
out
or
cmps
xchg
push
xchg
inc
and
lods
aas
cmp
repz
lods
add
and
div
mov
fwait
js
push
shl
mov
push
mov
mov
add
retf
fstp
or
sbb
jb
sar
(bad)
vmwrite
jp
mov
adc
inc
std
lods
rcl
and
sub
cmps
push
mov
stos
mov
or
addr16
cld
xlat
frstor
mov
cld
gs
lods
test
into
ins
or
call
leave
xor
jmp
fidiv
sub
fmul
ficomp
movs
pop
sub
dec
rol
adc
mov
pop
adc
(bad)
adc
pushf
mov
loopne
inc
mov
retf
and
xchg
outs
stc
cmp
rcl
or
dec
ins
and
xchg
jmp
lea
xlat
js
push
daa
mov
jo
jmp
or
stos
and
jl
sbb
add
pop
cwde
cmp
cmps
mov
ret
ret
add
mov
push
jmp
push
jmp
mul
dec
movs
mov
lods
xlat
add
dec
mov
out
push
out
xchg
mov
pop
jo
cld
loop
out
js
inc
xchg
push
lahf
xchg
add
xlat
push
call
mov
mov
pop
xchg
imul
mov
xchg
adc
add
mov
(bad)
push
push
mov
repz
call
repz
mov
xchg
jae
retf
imul
retf
jbe
cmps
popa
adc
out
sub
mov
cwde
ja
pop
cmp
and
dec
jg
sbb
inc
imul
dec
xchg
mov
jecxz
push
xchg
add
or
(bad)
aas
add
(bad)
cmp
fild
bound
mov
(bad)
pop
mov
push
scas
pop
(bad)
mov
lods
lods
jg
enter
fxch
sbb
cmp
cs
add
mov
jp
sahf
or
cdq
dec
out
push
fnstenv
inc
xor
stc
aam
jle
enter
retf
fwait
sub
fs
pop
popa
add
fnsave
jmp
ins
loope
pop
sub
push
std
lods
ins
jp
cdq
push
mov
hlt
jo
sbb
xchg
xlat
or
xchg
out
mov
mov
aam
adc
inc
shl
xor
inc
jg
adc
scas
int3
daa
imul
fs
rcr
xchg
mov
(bad)
out
jle
pop
and
xchg
push
into
daa
mov
ja
arpl
push
aam
mov
addr16
and
stc
sbb
sar
inc
addr16
out
(bad)
jl
divps
repnz
push
call
pop
xchg
outs
bound
mov
rol
ss
xchg
jo
hlt
out
mov
mov
push
sub
std
mov
movs
jecxz
in
xchg
mov
mov
std
pushf
and
or
mov
jae
jl
mov
dec
outs
adc
mov
ret
cmps
jno
std
test
sbb
cmps
push
add
jns
or
in
jmp
adc
adc
(bad)
shr
sub
push
frstor
add
in
jbe
sub
and
pushf
clc
repz
jnp
scas
shl
cdq
xor
pop
xor
mov
jg
sbb
pushf
rcr
or
inc
sbb
xlat
jmp
pop
adc
inc
cmps
push
scas
adc
out
xchg
push
adc
mov
xchg
cmp
popa
loopne
lods
scas
mov
into
xor
out
xchg
js
cld
push
stos
test
fcomip
lds
shl
xchg
retf
add
lods
pop
ja
out
repz
dec
push
mov
xchg
repnz
inc
fwait
cbw
pcmpgtd
inc
faddp
mov
lods
call
stos
add
hlt
fidivr
mov
cdq
pop
aas
aaa
out
popf
pop
ret
js
jmp
fisubr
push
mov
cli
test
out
adc
cmp
or
or
sbb
add
or
xchg
xchg
neg
jmp
and
ds
add
mov
push
mov
mov
ja
xor
loopne
mov
gs
vmwrite
adc
cmp
je
xor
mov
shr
stos
pop
inc
push
cmp
mov
jo
fbld
or
jno
add
(bad)
xor
sub
jnp
sbb
fxtract
dec
cmp
xor
ret
fnstenv
test
test
aas
jg
bound
rcl
loopne
bound
push
jae
scas
add
add
jne
mov
cmp
pop
ins
sar
fld
(bad)
sbb
dec
mov
pop
(bad)
jae
push
mov
cmp
mul
(bad)
int
mov
outs
jle
stc
int
(bad)
and
fld
repnz
dec
push
mov
pop
cs
and
push
jns
lock
pop
xchg
clc
aaa
cdq
dec
les
cmp
mov
push
imul
lea
mov
xor
push
mov
inc
fsub
ss
mov
jnp
mov
cld
call
adc
inc
(bad)
arpl
mul
dec
test
xchg
sub
dec
cld
adc
mov
into
xchg
mov
shr
cdq
sahf
daa
inc
in
das
int
mov
xchg
test
mov
aad
cmp
jecxz
or
mov
data16
aad
cmp
cmp
mov
popa
pop
or
(bad)
mov
adc
ss
pop
adc
mov
ds
mov
dec
movs
or
add
push
cmps
or
mov
pop
xchg
vphadduwd
push
in
cmc
les
mov
mov
mov
adc
push
xchg
mov
xchg
lods
(bad)
stos
iret
inc
push
int
not
jb
dec
shr
dec
adc
movs
mov
mov
jo
mov
dec
imul
ficomp
and
fs
cmp
test
xchg
mov
xchg
loope
daa
jne
bound
inc
adc
aad
(bad)
out
jecxz
jo
push
cmp
adc
jne
push
add
push
sub
xor
shl
xor
fidiv
and
aad
mov
sub
leave
pusha
and
and
mov
(bad)
loope
and
inc
sbb
and
mov
int
push
and
outs
hlt
jno
callw
int
sbb
outs
push
adc
cmp
cld
mov
adc
faddp
push
inc
mov
inc
pop
fst
ins
xchg
out
in
stos
mov
sbb
(bad)
stc
sbb
in
pop
jne
fild
and
add
imul
popf
mov
stos
push
mov
and
inc
dec
shr
and
std
sbb
add
push
mov
js
fst
xchg
mov
mul
push
mov
add
imul
push
sub
and
cmp
out
shl
enter
stos
sub
or
push
mov
int3
pop
jnp
sbb
adc
out
sub
inc
xor
pop
imul
cmp
addr16
xchg
mov
shl
aam
shl
xor
mov
adc
adc
push
loopne
cli
and
ret
pop
mov
jo
sub
cmp
mov
jp
test
mov
cmp
in
mov
mov
gs
cmp
bound
mov
scas
mov
outs
or
fcmovnu
sbb
xchg
mov
stc
dec
xlat
(bad)
sbb
fidivr
sub
cld
imul
adc
mov
sar
in
sbb
dec
and
mov
loope
add
fwait
push
inc
popf
xor
scas
mov
xor
cwde
mov
mov
mov
leave
ss
add
sahf
mov
mov
or
sbb
cmps
mov
rcr
sbb
out
cmps
mov
dec
call
shr
rcl
dec
mov
ret
pop
das
jae
pop
aad
mov
jne
push
cmps
jmp
ja
jl
xchg
dec
jge
dec
repz
push
(bad)
pop
xor
and
xchg
out
inc
arpl
add
mov
push
hlt
push
sar
push
lock
int
das
xor
popa
push
cwde
adc
icebp
nop
dec
movups
test
in
jge
push
add
sti
test
jmp
jo
add
(bad)
fisub
cs
xor
in
popf
sbb
sub
stos
cmp
enter
pop
pop
test
shl
jmp
lock
xor
loope
js
pushf
jae
scas
fmul
test
xor
xchg
pop
ret
sbb
dec
ins
pop
jb
cmp
jmp
mov
mov
mov
int3
jae
lea
cmp
adc
xchg
adc
add
fdiv
out
fld
sbb
aas
je
xor
(bad)
cmps
dec
imul
hlt
jne
(bad)
dec
pop
int3
push
fild
daa
dec
rcr
ins
leave
lock
shl
and
repnz
ss
(bad)
sbb
sub
xchg
fmul
dec
pop
mov
mov
jbe
ja
in
dec
ins
push
cmp
lea
mov
jns
pop
aas
cmp
scas
in
inc
ret
clc
push
aam
sahf
add
sub
push
fnstsw
rol
addr16
adc
ret
sub
push
xor
add
jg
push
jnp
dec
jl
in
or
and
push
xor
(bad)
sub
jmp
pushf
mov
cmp
cs
mov
jp
push
fwait
pop
xchg
dec
lods
dec
sub
out
inc
(bad)
mov
leave
verw
repnz
lsl
gs
aaa
push
cld
popa
jmp
jecxz
xor
repz
cmp
jnp
sub
popa
and
fmul
pop
(bad)
mov
cmp
adc
jne
xchg
ficom
(bad)
(bad)
push
ds
sahf
mov
dec
sub
mov
ds
add
and
push
jmp
cmp
xchg
pop
mov
mov
push
shl
mov
in
arpl
(bad)
push
sbb
dec
sahf
and
dec
lods
pop
dec
sub
aaa
dec
ficomp
mov
sar
je
mov
cmp
pop
iret
push
pop
and
rcr
adc
repnz
je
cs
test
data16
sub
and
push
fstp
jbe
sbb
xchg
bound
or
mov
test
xchg
pop
push
aaa
jo
aas
fnstsw
xor
pop
imul
out
mov
movs
in
jbe
jp
cmps
ins
cli
or
add
pop
sar
adc
or
sbb
les
stos
in
push
adc
cdq
xor
add
sbb
out
cmp
jns
cmp
ret
lds
out
ins
pop
or
mov
xor
mov
dec
fucomi
fwait
stos
lds
ret
adc
jge
mov
push
mov
in
jbe
jle
dec
and
(bad)
jp
ins
push
jl
xchg
call
push
neg
mov
mov
cmp
add
or
cwde
outs
xor
add
adc
jge
aas
out
xchg
mov
cwde
sub
ret
or
mov
inc
mov
in
fwait
push
push
fdiv
out
dec
ror
retf
aam
fld
je
inc
mov
sub
cld
out
movs
xor
mov
js
fst
mov
aad
pushf
mov
push
or
daa
mov
loop
test
pusha
sbb
and
mov
and
push
nop
nop
inc
jp
push
aam
iret
movs
(bad)
or
aas
lods
sub
or
(bad)
pusha
int
inc
inc
mov
outs
mov
push
inc
jmp
and
or
sbb
dec
push
(bad)
lea
sub
push
ss
and
mov
xor
xchg
sbb
into
int
inc
push
scas
mov
mov
push
sub
repz
inc
les
or
add
je
mov
out
jb
jae
xchg
out
js
mov
xlat
imul
dec
sbb
es
idiv
mov
or
pop
imul
push
outs
movs
pop
xchg
xor
mov
adc
adc
sbb
push
push
fild
adc
stc
lahf
xchg
mov
leave
push
xchg
std
clc
(bad)
scas
pop
repnz
inc
out
adc
mov
cdq
in
xchg
fst
pop
cs
cmp
test
leave
xor
dec
in
inc
mov
fcom
jo
jmp
xlat
loop
mov
push
mov
or
out
add
dec
fsubr
not
xor
jbe
fs
sbb
jp
(bad)
cmp
lods
repz
mov
inc
fisttp
adc
ja
out
mov
aam
sub
mov
(bad)
leave
mov
push
jmp
icebp
ret
outs
fld
shl
(bad)
in
mov
mov
xchg
sbb
fisubr
xchg
mov
js
xor
retf
mov
fs
xor
push
add
push
xor
pop
and
adc
and
xor
xor
mov
xchg
pushf
mov
ds
inc
pop
mov
and
loope
adc
mov
dec
into
int
xor
inc
(bad)
aaa
cwde
psubb
adc
dec
and
adc
loope
call
pop
adc
les
fild
mov
or
dec
inc
sub
ss
call
cmp
pushf
mov
popa
cli
adc
lods
clc
movs
out
adc
imul
std
stc
data16
fsubrp
pop
fisubr
popa
xchg
sub
shl
lods
into
pushf
jmp
(bad)
push
and
sti
(bad)
clc
fstp
sti
or
nop
push
sub
inc
ret
jbe
dec
and
ret
cwde
popf
fwait
test
dec
lods
adc
cmp
inc
nop
add
jle
and
sbb
adc
jne
neg
mov
imul
mov
pop
xor
cmp
cmp
xchg
or
es
loope
adc
push
xchg
jmp
ins
push
das
test
mov
push
imul
jecxz
cli
scas
movs
repz
je
add
fsub
or
shr
in
cmp
xchg
imul
add
adc
shl
out
ret
adc
test
in
sub
inc
nop
fiadd
and
test
repz
pop
fwait
aaa
ficomp
jl
mov
sahf
das
mov
mov
shl
clc
out
mov
pop
xchg
push
sbb
xlat
ret
into
add
jecxz
sub
aam
add
pop
and
sar
dec
inc
(bad)
mov
dec
ror
and
or
pop
sbb
cmp
jbe
in
leave
mov
addr16
sbb
push
(bad)
mov
jo
or
sbb
dec
xor
sub
aad
mov
cmc
imul
retf
shl
stc
sub
pop
mov
jnp
mov
sub
daa
sub
cmp
mov
enter
dec
push
sub
fs
cld
xchg
push
rcr
push
push
cmp
inc
dec
test
popf
fist
xchg
clc
jnp
sbb
popf
jbe
cmp
mov
cwde
bound
bound
mov
cmc
sahf
(bad)
mov
mov
push
xchg
loop
xor
int3
je
out
inc
and
iret
retf
in
std
mov
jle
cmp
cmc
icebp
ss
addr16
stos
xchg
icebp
mov
xchg
add
call
mov
mov
xchg
rcr
or
xlat
mov
mov
enter
or
je
repnz
(bad)
mov
cld
(bad)
cmp
push
out
adc
push
xchg
cdq
jno
add
dec
outs
sub
das
push
dec
mov
cmp
xchg
stos
cmp
cs
icebp
(bad)
push
out
and
sbb
dec
adc
mov
int
xor
and
inc
xchg
sub
mov
sub
pop
addr16
push
add
jge
scas
pusha
sahf
pop
in
aas
mov
xchg
mov
es
gs
cmp
pop
sub
bound
mov
test
sbb
cdq
xor
fidivr
mov
cmp
cmp
sub
into
mov
leave
sbb
mov
cmps
push
loop
push
add
sti
mov
pusha
ror
mov
fdiv
push
ret
lds
inc
push
mov
adc
sahf
cmp
sbb
lods
aaa
dec
cmp
into
not
call
rcr
cmp
fmul
adc
mov
mov
mov
movs
and
out
lods
xchg
lea
imul
stos
jge
ret
mov
pop
dec
imul
adc
pop
push
fs
xchg
jns
inc
stos
or
ins
mov
cmp
movs
xor
pop
fist
(bad)
adc
xchg
cmp
sub
nop
outs
clc
fmul
adc
imul
mov
or
lds
mov
imul
and
xchg
pop
(bad)
int3
movs
mov
pusha
pop
jmp
cmp
or
aaa
daa
cmp
pop
xchg
and
xchg
lds
dec
pop
push
pop
call
bound
mov
sahf
cmps
mov
inc
dec
inc
imul
adc
inc
jl
mov
mov
fsubrp
inc
repz
lock
(bad)
mov
cs
xchg
dec
push
pop
sub
sub
jle
xchg
(bad)
add
in
xchg
xlat
adc
sbb
fwait
je
mov
inc
mov
jle
icebp
jg
test
sbb
xchg
ror
addr16
and
push
inc
leave
neg
outs
ss
jl
arpl
add
mov
mov
scas
loopne
adc
push
fisub
and
xlat
adc
push
dec
push
std
stos
imul
xor
cmps
mov
fisubr
lods
stos
movs
sar
rcr
xchg
inc
fcomp
mov
mov
add
and
shl
out
sbb
pop
in
fild
inc
fwait
mov
fld
xor
nop
sub
jmp
push
push
or
mov
mov
inc
(bad)
dec
out
ins
stos
and
call
cmps
(bad)
call
std
ds
dec
xchg
stos
cmp
call
aam
ds
or
and
or
fcom
stos
imul
call
int
sub
aam
sbb
outs
aam
fst
test
inc
ror
mov
sub
sti
xchg
out
repz
mov
fstp
or
cwde
xor
dec
mov
inc
adc
push
mov
dec
lods
jl
out
dec
gs
jmp
sub
das
xchg
jg
xor
fxch
fstp
and
mov
div
pop
aad
clc
sahf
sbb
lahf
mov
xor
pushf
aas
dec
add
xlat
push
jmp
mov
popf
int
fisub
rol
push
inc
inc
mov
push
or
hlt
adc
push
mov
xor
jno
add
(bad)
mov
loopne
or
int
sub
xchg
inc
push
imul
(bad)
in
add
xchg
pop
addr16
fnstsw
mov
ins
jle
or
in
mov
retf
lahf
add
nop
daa
iret
ret
cmc
or
or
adc
add
fimul
jmp
sbb
push
outs
jnp
inc
popa
enter
stos
sbb
cmp
xchg
inc
and
repz
push
push
scas
lahf
sbb
dec
dec
jmp
sub
jg
xor
in
jmp
mov
inc
popf
adc
ds
imul
cs
push
ins
(bad)
das
push
mov
fdivrp
(bad)
push
mov
add
les
mov
push
in
daa
add
xor
fld
and
enter
test
mov
icebp
mov
mov
push
dec
sub
aaa
jl
or
cdq
inc
sbb
fs
xor
stos
adc
inc
out
inc
cli
inc
push
add
mov
inc
xor
lds
cmp
call
jmp
xor
dec
mov
icebp
or
adc
not
dec
pusha
js
jmp
jb
mov
inc
jne
jo
pop
mov
es
imul
jle
cmp
push
adc
jmp
ins
xor
sbb
pop
dec
imul
dec
gs
sbb
mov
js
cwde
out
jg
sub
shr
pop
data16
dec
pop
gs
dec
push
pop
mov
push
rcr
sub
add
ins
popf
fist
repz
rcr
dec
aam
shr
inc
xchg
or
xor
push
sbb
xchg
cmps
aaa
mov
add
fidiv
cmp
pusha
lock
in
scas
sbb
cmp
cmp
shl
(bad)
je
jne
outs
push
xor
adc
xchg
mov
mov
pop
push
dec
in
jl
repz
loop
jecxz
cmp
lods
dec
int
mov
mov
mov
(bad)
enter
dec
cld
mov
das
mov
fs
jbe
fild
mov
push
ss
addr16
pop
(bad)
push
jbe
push
mov
and
cmp
adc
add
aas
mov
mov
nop
dec
lods
fcmovnb
or
jb
or
dec
inc
push
mov
shl
(bad)
imul
popf
movs
push
sti
nop
xlat
inc
(bad)
in
das
outs
scas
fild
push
sbb
pop
cmp
xor
inc
out
retf
sub
mov
pop
push
dec
ror
pusha
in
jne
sbb
rcr
sub
xlat
jg
cli
stos
pop
retf
lock
mov
ins
xor
inc
cmps
add
pop
dec
neg
movs
pop
dec
pop
test
test
retf
stos
inc
or
repz
sbb
les
dec
(bad)
dec
sbb
jl
(bad)
fimul
push
fs
fisubr
xchg
mov
xor
fidivr
aaa
cli
xchg
adc
dec
and
pushf
ss
xchg
stos
shl
aad
test
add
sub
sar
adc
test
sub
outs
add
es
mov
aaa
inc
mov
mov
sbb
div
xor
cs
jmp
and
fwait
scas
cmp
(bad)
jecxz
mov
jg
dec
(bad)
ret
mov
pop
ret
add
mov
mov
or
mov
xor
jbe
or
inc
and
or
jbe
mov
or
ja
add
hlt
jecxz
jp
enter
rol
sub
shr
adc
mov
adc
sbb
int
outs
push
xor
enter
aad
daa
xlat
(bad)
and
mov
jne
cmp
push
in
cmp
add
pop
jle
(bad)
lods
dec
xor
push
lock
inc
jbe
lods
push
in
inc
xchg
inc
inc
imul
in
cmp
test
xchg
push
xchg
aaa
(bad)
mov
jmp
pop
and
icebp
outs
cdq
ins
push
ins
cwde
int3
shl
xchg
cmp
out
daa
jns
enter
ja
adc
mov
out
sahf
adc
jne
adc
adc
xchg
div
dec
rol
mov
jnp
jo
xchg
icebp
fisub
mov
pop
push
(bad)
movs
call
cmp
jne
pop
adc
sub
push
push
mov
pop
ficom
jge
data16
fdiv
test
mov
mov
(bad)
lea
mov
ret
push
push
in
outs
iret
push
xor
dec
push
xchg
lds
xor
movs
xchg
push
(bad)
adc
sbb
test
call
ja
add
stos
pop
shr
rcl
addr16
jecxz
cmp
xchg
cwde
and
and
mov
xor
inc
in
mov
and
push
cmp
sbb
xor
aad
push
adc
daa
and
vpslld
mov
xor
stos
rcl
inc
gs
push
mov
cdq
fwait
push
pusha
ror
out
(bad)
adc
push
and
fist
add
inc
icebp
cmp
aam
inc
xchg
mov
(bad)
into
popf
in
xor
add
jno
add
sbb
add
xchg
out
iret
mov
push
leave
and
and
xchg
mov
retf
std
nop
out
push
hlt
out
add
ins
cmp
jae
js
push
idiv
mov
jge
jne
sub
movs
icebp
xlat
xor
xor
rol
aas
push
(bad)
jmp
js
xor
add
push
mov
dec
xchg
sbb
dec
hlt
ja
sub
pop
test
xchg
inc
jno
out
in
push
mov
jge
xchg
mov
pop
test
setnp
div
sub
es
cs
repnz
cmp
inc
stos
in
cwde
scas
dec
mov
push
(bad)
jmp
fwait
int
stos
(bad)
retf
and
inc
in
jbe
mov
cmp
adc
mov
iret
xchg
push
gs
aas
imul
add
ins
sub
mov
retf
xchg
xor
mov
cld
xor
movs
int3
push
mov
dec
mov
ja
sbb
add
sbb
call
shl
push
sbb
mov
ret
and
mov
pop
dec
adc
mov
stos
jle
push
sub
not
fsubr
cdq
xlat
inc
adc
or
mov
xchg
in
adc
jle
daa
mov
push
cmp
mov
popa
inc
fcom
cmp
sbb
lock
loopne
cmp
pop
jmp
pop
adc
push
mov
enter
mul
push
imul
out
jl
repz
rcl
pop
cs
shl
jmp
fidivr
clc
aad
xchg
mov
adc
inc
out
gs
mov
arpl
fisttp
js
jl
dec
or
fcmovb
lods
nop
retf
mov
add
push
inc
call
js
fisttp
lods
mov
sbb
mov
push
enter
lds
mov
fninit
or
(bad)
mov
fwait
pop
rcl
pusha
inc
sub
push
cmp
pop
push
adc
movs
cmp
(bad)
ffreep
mov
jp
mov
cs
sahf
jge
sub
add
in
adc
or
cmp
jb
inc
or
sbb
add
mov
ds
jge
mov
and
jg
inc
or
jmp
push
pop
mov
in
pop
cli
mov
xor
cmp
popf
idiv
lods
mov
mov
(bad)
pop
jl
add
jge
lea
xor
add
pop
aaa
aad
mov
inc
jno
cmp
rcl
fiadd
mov
lock
aas
xor
(bad)
mov
cmp
xchg
jb
inc
sbb
add
mov
jl
mov
dec
cmp
sub
mov
mov
stos
cmps
xchg
jnp
fninit
push
mov
sbb
out
lods
popf
xchg
in
pop
rcr
frstor
cmp
sti
mov
mov
xor
xchg
cli
sub
push
ret
jecxz
mov
int3
js
xchg
stos
(bad)
push
adc
sti
mov
sbb
ins
mov
mov
pop
mov
in
jne
sub
pop
pop
sub
dec
mov
cld
cli
inc
fcomp
add
xchg
pop
rcl
test
clc
and
cs
test
pusha
leave
inc
scas
dec
jbe
cdq
cld
call
mov
das
xchg
jno
push
xchg
push
in
sub
and
loope
cmp
loope
xor
push
loopne
mov
cmp
test
scas
aas
icebp
mov
ins
sub
push
aam
cdq
vmovdqa
cs
mov
in
or
jge
pop
pop
cli
mov
cmps
loope
xchg
pusha
in
retf
shr
pop
cmp
jmp
jne
dec
call
ja
pop
pop
popa
dec
fwait
mov
jg
cld
xchg
sbb
sbb
adc
ins
dec
pop
sub
add
and
inc
and
push
jl
jmp
add
cmps
mov
imul
inc
icebp
inc
lods
test
mov
je
push
aas
cmp
fdivr
mov
test
es
inc
in
jne
adc
rol
jns
jmp
out
dec
jmp
mov
dec
pop
jae
enter
fcmove
popf
mov
fisttp
mov
pop
shl
fadd
jge
ror
adc
(bad)
mov
ins
inc
and
pop
mov
sti
jmp
cmc
dec
push
sbb
aad
dec
js
lods
sbb
sbb
sbb
xlat
jne
xchg
ss
add
sub
mov
xlat
cmp
and
aam
dec
ss
data16
push
pop
out
daa
mov
jp
ins
cli
or
daa
jns
push
test
and
sub
mov
inc
mov
push
sub
mov
jle
inc
ins
out
cld
inc
arpl
xchg
sbb
jmp
adc
cmps
and
into
pop
dec
popf
adc
loope
sti
daa
clc
gs
repnz
imul
mov
mov
call
mov
retf
push
imul
mov
or
fucom
and
daa
cmp
lds
xor
arpl
aaa
dec
repnz
iret
mov
pop
inc
div
jmp
ins
cmc
lds
xchg
faddp
pop
cwde
pop
or
xor
push
cs
adc
sbb
dec
ret
and
sbb
lds
inc
out
pop
lea
or
sub
or
sbb
and
into
into
(bad)
mov
mov
cli
js
pop
push
or
pop
jae
out
aaa
outs
je
jle
mov
and
xor
adc
shl
xor
sub
xor
dec
dec
cmps
leave
pop
ss
sbb
movs
sub
dec
cmp
ss
xchg
pop
or
cmc
pop
arpl
mov
xor
or
jae
dec
in
xchg
add
loop
sbb
(bad)
mov
mov
fwait
sub
jg
mov
call
enter
out
xchg
adc
fsub
and
sbb
dec
fidiv
push
inc
xchg
ret
in
out
and
in
cld
xchg
fsub
pusha
repz
hlt
loopne
pop
sub
dec
stos
(bad)
sbb
adc
das
sbb
arpl
clc
in
push
inc
xchg
mov
fisttp
aad
add
inc
in
pop
test
inc
into
xchg
sub
mov
xchg
fs
test
stos
mov
fld1
aas
jnp
mov
sbb
sub
and
aam
aaa
jb
es
cld
test
add
push
cmp
mul
push
mov
xchg
in
mov
ds
cwde
lock
xchg
clc
lods
in
test
push
ins
sbb
cld
hlt
mov
out
dec
in
mov
push
xor
and
shl
inc
add
mov
mov
jg
inc
or
hlt
leave
jle
add
xor
or
or
or
adc
mov
sbb
adc
mov
jbe
mov
pop
mov
ret
sar
out
jno
in
or
mov
ja
fdiv
loope
mov
sbb
mov
xor
or
not
push
jmp
popa
aad
leave
int3
cmp
loop
xor
inc
sbb
outs
mov
mov
push
ja
mov
into
cld
or
sub
push
in
cmps
fistp
mov
pop
xchg
cmp
dec
sub
jl
cmp
es
pop
shl
sub
or
jmp
(bad)
cdq
mov
test
xchg
leave
pop
loop
mul
pop
jne
cmp
pop
mov
jle
mov
in
xor
jg
dec
inc
and
movs
dec
inc
or
into
cmps
jns
in
nop
lahf
mov
jo
js
pop
adc
and
sbb
jns
or
fwait
call
js
pop
push
(bad)
loop
repnz
dec
sbb
inc
mov
cmp
dec
mov
xchg
jecxz
mov
fild
jne
es
jge
test
pusha
cmp
adc
cmp
pop
mov
scas
movs
loopne
jnp
push
ror
push
pop
mov
int
pop
enter
jne
inc
les
dec
dec
adc
(bad)
xor
out
and
fbstp
ja
vpminsw
out
inc
popa
or
push
outs
cwde
mov
pop
push
and
inc
int3
mov
cli
call
popa
inc
pop
cmp
shr
rcr
mov
xor
xor
movs
out
jo
xor
imul
lods
mov
test
cs
sub
xchg
(bad)
scas
stos
lea
push
in
xchg
push
daa
(bad)
pop
and
ficom
and
xor
fwait
pop
and
movs
mov
jmp
mov
push
ja
pop
or
pusha
in
or
sbb
xor
pop
mov
xor
ret
inc
cmp
jle
cs
pop
aad
push
aas
retf
xchg
inc
test
mov
mov
mov
mov
sub
pushf
iret
dec
rcr
leave
pop
loopne
mov
inc
dec
inc
test
inc
inc
dec
mov
push
jno
sub
mov
fdivr
dec
pop
(bad)
or
and
mov
jnp
in
mov
sub
cmp
dec
xor
adc
mov
call
popf
add
test
repnz
test
outs
xchg
movs
icebp
dec
in
leave
mov
repz
inc
xchg
pop
in
mov
ss
imul
adc
xchg
mov
aas
pop
retf
cld
std
jmp
sub
(bad)
cmp
mov
test
mov
cmp
out
ret
loop
jo
pusha
sub
loop
fsubr
dec
rcr
test
or
int3
test
fs
call
adc
in
loopne
stos
das
add
outs
or
cs
xchg
mov
push
sub
aas
iret
test
xchg
inc
retf
sbb
push
mov
pop
(bad)
fnstsw
cmps
in
test
dec
inc
or
pusha
inc
jno
pushf
(bad)
cmc
add
sbb
in
scas
mov
inc
cmp
xchg
leave
cmps
jbe
scas
mov
sbb
jns
jb
repz
mov
gs
les
and
inc
aad
push
or
mov
or
sti
push
inc
jl
pop
sbb
mov
push
out
aas
adc
aas
and
and
popa
in
or
push
cmp
out
and
sub
mov
pop
xor
mov
movs
rcr
lods
cmps
rol
add
popf
jge
mov
or
mov
rcr
push
xchg
xchg
lods
lea
xchg
out
out
mov
cli
ins
sbb
jecxz
jmp
fiadd
stos
loop
por
lods
iret
mov
test
mov
aam
adc
adc
cmp
neg
shr
mov
and
out
add
leave
enter
popf
popa
adc
sub
pusha
mov
sub
xor
adc
jmp
push
mov
pop
loopne
jle
(bad)
push
dec
int3
mov
mov
popa
xchg
adc
and
jge
fbld
mov
pop
sahf
call
sub
mov
icebp
sbb
outs
aaa
or
sbb
call
prefetch
aad
ins
xor
scas
retf
or
mov
xchg
xchg
std
ins
cmp
ficom
pop
outs
ins
cld
loope
sub
xchg
and
in
cmp
int3
pushf
cdq
add
sub
pusha
inc
lea
mov
mov
mov
inc
sbb
adc
adc
in
sar
xlat
(bad)
out
fmulp
dec
pushf
ficom
outs
push
xchg
in
(bad)
mov
xchg
hlt
imul
daa
lds
sbb
or
mov
jge
popf
mov
rcr
out
mov
cld
sub
cmp
mov
loopne
xchg
(bad)
ss
test
test
in
cs
gs
mov
lahf
xchg
test
data16
ja
sbb
xor
sbb
mov
dec
arpl
fcmovnbe
dec
lahf
clc
mov
mov
pop
fiadd
cmp
pop
xchg
xchg
mov
call
(bad)
fbstp
push
dec
pop
sbb
inc
cmp
pop
ins
jmp
(bad)
xchg
repz
and
hlt
repz
push
and
xor
fistp
push
(bad)
mov
push
nop
mov
xor
add
ins
aaa
jp
out
sub
mov
test
cwde
ja
rcr
sub
(bad)
xor
outs
mov
push
cmp
cli
cmp
push
leave
rcl
and
mov
das
fs
inc
ficom
bound
ret
out
jo
sbb
inc
push
dec
pop
and
clc
sbb
dec
fisubr
mov
push
imul
jnp
adc
mov
fidivr
xor
mov
int
call
jp
jnp
fld
loopne
dec
fsub
and
lds
and
ret
mov
mov
xchg
cld
aam
dec
in
jmp
dec
pop
mov
cdq
pushf
stos
xor
int
fist
bound
pop
inc
inc
lods
cmp
jns
fist
test
in
(bad)
sub
icebp
sbb
jl
sub
(bad)
jp
or
dec
adc
addr16
mov
push
cld
fsubr
scas
mov
inc
cwde
mov
jne
push
dec
shr
add
ret
popa
pop
pop
xlat
fild
cwde
movs
push
sbb
leave
lea
adc
aaa
inc
sbb
in
test
jno
cmp
jp
clc
ret
ror
test
or
dec
lods
ins
and
iret
enter
pop
sub
(bad)
iret
push
div
loopne
dec
shl
or
aad
popf
inc
icebp
call
mov
jb
scas
into
fbld
aaa
les
mov
repnz
movs
sub
sbb
adc
jnp
cwde
inc
cli
add
adc
add
popf
aad
cwde
jno
push
push
lods
pop
nop
cmps
jmp
js
je
cmc
push
icebp
add
sbb
mov
test
sub
jnp
or
hlt
pushf
shl
inc
sbb
xchg
or
dec
repz
bound
sub
pusha
js
xor
dec
push
sub
rol
mov
dec
cmp
mov
pop
in
call
lods
aas
xor
sbb
das
dec
push
add
aaa
jl
scas
std
in
cmp
sub
push
pop
dec
lds
outs
aad
or
aad
lock
outs
xchg
push
clc
adc
or
std
loopne
jge
in
push
outs
push
xchg
jg
(bad)
mov
cmp
inc
popf
ret
pop
(bad)
ins
lods
repz
xor
fwait
test
adc
(bad)
shl
and
add
cmp
vpsrlw
pop
mov
jmp
pop
mov
cmc
shl
push
js
push
ds
enter
rcr
lds
dec
xchg
xchg
jge
fmul
cdq
(bad)
movs
dec
pop
mov
call
or
cs
jne
inc
bound
lods
push
mov
leave
ins
fld
mov
bound
outs
cs
shl
movs
call
cwde
loopne
test
das
lds
fdivr
pop
pop
icebp
pop
bound
xor
push
es
pop
shl
mov
lahf
cmp
jle
xchg
dec
(bad)
cwde
test
jmp
pop
mov
retf
fnstcw
icebp
popf
jmp
cli
aad
dec
inc
xchg
mov
gs
xor
add
jbe
ins
xchg
pop
mov
jno
std
lock
fsubr
retf
xchg
jmp
int3
inc
(bad)
ds
cdq
mov
bound
outs
push
cmp
out
xchg
sbb
or
sbb
mov
push
push
xchg
in
sti
jnp
xor
cmps
ins
fcomp
push
push
je
rcr
cmovae
outs
stos
ror
std
lahf
mov
ja
mov
inc
das
inc
cmps
adc
xor
mov
fwait
mov
inc
xor
js
fisttp
mov
enter
test
sar
ficom
add
mov
adc
pop
rcr
cmp
mov
sbb
xrelease
in
jl
sbb
stc
repnz
test
test
sub
out
mov
xchg
push
mov
jo
bound
(bad)
jno
mov
push
jmp
or
int
inc
mov
repnz
mov
push
or
inc
mov
ret
in
cwde
inc
adc
adc
adc
push
add
movs
adc
je
jp
push
cmp
inc
outs
ja
mov
call
jecxz
pop
dec
sbb
cmp
(bad)
pop
dec
addr16
pushf
jg
push
cmp
clc
iret
pop
xchg
clc
in
xchg
jbe
xchg
mov
out
into
add
loopne
jns
lds
leave
pop
inc
popf
pop
dec
and
inc
retf
fld
cmp
cmps
jg
or
sub
jmp
sbb
loope
sti
ja
mov
sbb
mov
cmc
arpl
jmp
out
aad
das
pop
sbb
test
inc
pop
xor
mov
cmp
xchg
cld
adc
loope
adc
adc
int3
sahf
jno
repnz
aad
imul
cmp
leave
cmp
adc
sub
inc
xor
adc
dec
inc
ins
ficomp
stos
push
ja
mov
xor
aad
call
cmp
inc
je
sbb
mov
add
(bad)
div
stos
or
scas
dec
ds
(bad)
aas
xor
push
loope
pop
mov
add
imul
in
out
jge
aam
stos
fldenv
mov
jo
fcomip
mov
repnz
xchg
xlat
adc
and
cmp
loop
dec
inc
lds
mov
imul
adc
lods
or
cmps
in
push
ror
out
lods
or
and
sub
(bad)
mov
aas
adc
hlt
in
pop
xor
and
inc
retf
sub
dec
leave
inc
inc
sbb
mov
sbb
test
leave
sbb
nop
cmc
xor
push
cmps
mov
pushf
enter
int
sub
xor
sbb
dec
ins
das
pop
test
cmp
lods
cmp
lea
or
jmp
and
in
mov
mov
sub
lds
add
addr16
add
jmp
into
pop
into
aad
mov
or
adc
mov
test
cmp
popa
aad
es
scas
adc
sbb
and
push
xchg
das
cmc
mov
pop
lds
les
imul
lds
jns
adc
and
jbe
out
ror
mov
jmp
shl
adc
clc
adc
push
inc
ror
cs
mov
adc
mov
test
stc
adc
add
jae
xor
add
cmps
jo
test
ja
and
pop
dec
jge
stos
dec
or
adc
sbb
dec
mov
jge
mov
sbb
retf
loop
and
push
(bad)
test
mov
xchg
cmp
jge
scas
lods
lods
dec
(bad)
rol
adc
sub
enter
js
fbld
call
stos
mov
push
jbe
sub
inc
or
(bad)
mov
ret
(bad)
push
(bad)
push
cmps
pop
adc
into
in
jo
(bad)
xor
scas
xor
test
xor
scas
jnp
jnp
push
and
mov
sbb
loopne
mov
adc
adc
add
cs
hlt
inc
clc
push
fstp
and
sbb
push
mov
xchg
jo
ds
mov
mov
mov
loop
jl
arpl
sub
(bad)
xor
mov
(bad)
clc
inc
fnstsw
push
pop
xor
rol
cmc
jge
add
out
sbb
adc
call
sub
pusha
repz
or
pop
mov
repnz
fld
cmp
mov
push
dec
rcl
add
jo
ja
mov
les
pop
test
push
dec
push
mov
daa
iret
(bad)
jecxz
outs
addr16
adc
dec
mov
and
cmps
inc
cmp
ret
xchg
jne
xor
int3
fimul
aam
cld
pop
pop
pushf
arpl
pop
call
jl
pop
add
xor
mov
pop
outs
dec
das
je
and
adc
loopne
jl
call
in
fidiv
add
daa
xchg
mov
nop
xchg
(bad)
js
movs
aaa
hlt
mov
sbb
ret
cmp
adc
or
inc
adc
adc
in
adc
(bad)
xor
cdq
pop
imul
add
(bad)
ficomp
fiadd
xchg
sub
ss
and
inc
ss
sbb
movs
xchg
pop
test
fistp
jno
push
aaa
adc
mov
xlat
mov
sub
loope
dec
cmp
xor
dec
inc
in
xchg
jo
mov
mov
lods
adc
push
and
outs
daa
sub
stos
(bad)
in
mov
lds
inc
pop
cmp
(bad)
stc
jmp
add
mov
jecxz
out
inc
jne
and
es
pop
jl
sub
mov
push
js
and
sbb
cs
cmps
out
cmp
and
stc
out
push
jo
call
pop
clc
clc
or
sbb
dec
jecxz
clc
lods
ror
xchg
es
ins
fst
xlat
js
jl
xchg
cmps
stos
mov
shl
int3
arpl
add
shl
inc
ror
cmp
je
mov
das
mov
repnz
mov
mov
mov
outs
stos
or
cmp
pop
mov
adc
add
clc
xchg
ret
xchg
icebp
push
aas
pop
jno
mov
jo
xor
jge
sahf
addr16
sub
mov
and
add
inc
shr
pop
mov
pop
pop
dec
inc
sub
ss
inc
mov
in
loope
fcom
adc
jno
xor
sub
mov
or
ficomp
mov
add
nop
lods
adc
sbb
add
es
xor
pop
jae
std
call
push
xchg
xlat
int3
jp
xchg
sub
lahf
dec
or
sti
je
push
ret
sub
jnp
add
jge
sub
dec
scas
(bad)
out
push
cwde
daa
jmp
in
jmp
jle
repnz
fisttp
mov
inc
out
cld
sub
stc
repnz
cdq
xchg
mul
ins
inc
sub
jg
mov
sbb
xor
sub
mov
or
mov
pop
xchg
cmc
or
mov
cmc
dec
sub
scas
fbstp
dec
std
cmp
aam
sub
mov
sahf
mov
inc
jo
dec
jmp
mov
lahf
repz
pop
cmovns
cmp
and
idiv
(bad)
mov
ja
sahf
imul
jp
mov
pop
in
mov
and
pushf
repz
jo
ins
cld
shl
mov
xchg
pop
stos
mov
mov
xor
xor
out
sahf
neg
arpl
lock
sti
popf
arpl
nop
mov
call
cmp
mov
mov
enter
push
push
xchg
adc
mov
in
gs
push
addr16
mov
pop
jp
dec
aam
vpaddb
ret
xchg
mov
push
fcom
or
sbb
push
sub
pop
jmp
inc
imul
jne
or
inc
das
fdivrp
inc
sbb
xchg
not
js
dec
cmp
in
cmp
mov
(bad)
pop
fidiv
dec
dec
retf
mov
fwait
xchg
mov
loopne
jo
ins
into
nop
js
xor
sbb
push
shl
and
or
cmp
pop
inc
icebp
mov
movs
in
add
add
add
int3
or
sti
mov
sub
dec
inc
outs
rcr
cmp
aaa
xlat
out
mov
jnp
cwde
lahf
xchg
into
jmp
mov
add
cmc
jl
or
cwde
pop
mov
add
xchg
in
fimul
mov
xor
mov
fadd
(bad)
rcr
loop
pop
mov
and
add
mov
xchg
aaa
pop
add
in
jecxz
cld
push
ins
xchg
ss
mov
push
psubd
mov
mov
popa
sbb
xor
out
mov
cmc
dec
(bad)
sbb
cmp
fcomp
jmp
ss
ror
stos
add
jmp
aas
(bad)
sti
hlt
jb
dec
add
fwait
(bad)
call
or
xor
lods
sbb
sub
aas
push
xchg
xor
mov
daa
xchg
mov
das
inc
retf
imul
ja
mov
jmp
mov
dec
adc
xor
sbb
lds
push
test
add
dec
sar
fwait
movntps
xchg
pop
sub
pop
rol
call
fist
retf
inc
dec
fstp
retf
cwde
ror
jmp
sub
cmc
lods
sbb
xor
fnstcw
addr16
mov
push
cs
jo
xchg
into
mov
mov
jg
push
jmp
test
out
idiv
cmp
ror
adc
ja
mov
ja
xchg
mov
test
jno
pop
inc
into
ret
pop
sar
mov
push
imul
and
pop
nop
shl
push
jmp
loope
(bad)
sub
jl
cs
ficomp
loopne
xchg
sbb
in
pop
dec
cwde
xlat
fmul
ja
sub
call
ins
js
inc
sub
xor
add
and
mov
clc
jns
xor
mov
xlat
sbb
jp
lahf
sbb
jnp
xchg
sub
out
push
sbb
in
nop
retf
aad
push
and
sub
test
push
add
mov
inc
dec
mov
and
jnp
(bad)
mov
(bad)
sbb
jne
ror
clc
dec
sbb
and
leave
adc
add
out
lock
cwde
sub
sahf
xchg
push
call
cmps
loop
xor
lock
call
mov
mov
in
sub
dec
je
xlat
sub
xchg
lods
xchg
jne
cld
pusha
mov
sahf
xor
sbb
imul
ss
mov
je
add
cmp
call
bnd
inc
movs
xchg
add
shl
push
xor
and
ror
repz
adc
mov
mov
aas
in
or
mov
fnsave
mov
adc
sbb
jo
adc
push
inc
pusha
sbb
cld
div
test
xchg
push
(bad)
cmps
sbb
cmps
sti
xchg
inc
out
sar
test
push
mov
jns
ret
pop
in
in
ffreep
inc
push
push
aaa
scas
stc
jg
inc
jge
dec
xor
out
sbb
in
std
lahf
or
pop
xchg
pop
pop
js
daa
aad
or
lahf
into
mov
imul
pop
inc
mov
enter
pop
mov
mov
mov
xor
ror
pop
in
dec
jne
out
or
(bad)
fcomi
inc
mov
out
pushf
sbb
cwde
sbb
cld
popa
lock
clc
out
test
pop
gs
movs
ds
dec
scas
div
add
cmps
nop
jmp
bound
mov
imul
cwde
cwde
cmp
mov
push
jg
sbb
gs
or
mov
mov
push
sbb
mov
test
cmp
xchg
repz
mov
scas
xchg
es
outs
sbb
mov
not
jbe
push
xor
int
sbb
and
aad
add
call
adc
call
and
and
rcr
mov
pop
movs
popf
mov
aad
orps
mov
mov
mov
(bad)
pop
add
out
push
and
iret
outs
addr16
les
xchg
lds
out
(bad)
xor
inc
dec
jp
pop
or
cmp
in
push
xchg
scas
out
adc
add
leave
cmp
mov
cmp
pop
(bad)
pop
clc
cmp
inc
outs
loop
pop
jge
fwait
arpl
pop
jnp
enter
xcrypt-ofb
cmps
test
cs
xchg
(bad)
retf
add
jmp
in
mov
imul
cmp
ds
jmp
ss
xor
sub
inc
gs
arpl
mov
and
jg
out
rcl
pop
pop
mov
or
push
movd
pushw
sub
adc
sub
ja
jbe
pop
dec
ficomp
cmp
repnz
nop
inc
or
sub
mov
push
xchg
dec
sub
jo
fwait
daa
loopne
mov
(bad)
std
call
sub
icebp
or
stc
aaa
mov
xor
sbb
xor
arpl
inc
dec
or
fdivrp
sbb
jbe
xlat
iret
xchg
call
inc
adc
rcr
xchg
fnsave
repnz
dec
jp
pushf
push
pop
inc
or
add
std
and
ds
push
fimul
outs
sub
mov
mov
sub
fcom
sub
(bad)
add
inc
xchg
shl
loopne
imul
call
dec
push
cmp
(bad)
push
push
mov
mov
jns
add
xor
sub
int3
(bad)
sub
mov
xchg
popa
push
inc
sub
push
mov
mov
jo
xchg
clc
pop
inc
mov
inc
les
inc
loopne
mov
cmps
mov
lahf
and
sub
ror
lods
repnz
and
mov
or
outs
add
mov
test
scas
dec
xchg
ret
mov
sbb
jae
mov
jmp
jge
add
cwde
mov
and
test
mov
jns
ss
retf
addr16
rcl
inc
ficom
call
call
dec
sub
pop
lea
fisubr
sub
aaa
test
hlt
xchg
outs
icebp
sub
xor
(bad)
mov
fisubr
loop
(bad)
and
sub
mov
(bad)
mov
mul
pop
(bad)
or
pop
jle
push
xchg
add
lods
pop
out
stc
scas
sub
or
xlat
addr16
mov
push
xor
outs
int3
add
fdiv
mov
and
in
jmp
mov
cmps
jmp
pop
cmps
sar
pop
idiv
xor
mov
push
pop
inc
cmp
xlat
mov
push
add
mov
adc
xchg
es
lock
sahf
xor
mov
(bad)
das
push
xor
cmp
call
fdivr
xlat
or
jmp
mov
add
ds
jo
sub
call
and
mov
retf
loope
push
and
sbb
mov
dec
xor
sub
and
sbb
cmp
sub
pop
xor
push
dec
dec
call
mov
push
das
scas
xchg
inc
push
dec
(bad)
xchg
das
clc
push
in
repz
rcl
xlat
bound
sub
repnz
xchg
cwde
sbb
sub
mov
xchg
scas
(bad)
in
push
addr16
sbb
push
cs
xor
inc
stos
mov
dec
pop
xor
mul
cdq
inc
ficomp
imul
daa
inc
jp
call
repnz
sbb
mov
lds
mov
mov
xchg
fistp
push
push
int
cmp
push
je
adc
lahf
push
xor
add
and
test
jo
pop
shl
dec
inc
cs
fcomp
sbb
sub
mov
mul
fiadd
add
inc
call
repz
pop
aas
mov
inc
adc
pushf
sti
or
or
loope
lahf
mov
pop
cmps
adc
data16
ins
xor
in
xor
jmp
cmp
mov
xchg
dec
mov
jb
xchg
adc
scas
fcomp
or
fsub
movs
je
int3
popf
test
xchg
sar
xchg
jl
fild
pop
sbb
jbe
or
shl
xor
jno
das
push
in
pop
add
mov
sub
(bad)
loope
shr
int
sub
pop
xor
into
out
outs
sbb
sti
out
jo
xchg
inc
xchg
dec
lea
xchg
xchg
or
ficomp
add
outs
scas
cmp
imul
add
lea
mov
dec
jle
repnz
call
imul
arpl
retf
test
lock
push
sti
(bad)
mov
nop
pop
lea
cs
push
fistp
loope
sar
ins
or
jb
retf
and
ret
lock
or
retf
xor
or
dec
cld
out
and
jnp
sub
es
pop
or
into
or
aaa
fisttp
inc
out
push
(bad)
jo
or
push
scas
jecxz
int
sbb
mov
pop
loop
mov
xchg
xor
setae
cmp
jmp
out
push
jg
lea
cmp
jns
int3
cs
mov
cmps
je
xchg
out
test
mov
cld
xchg
mov
shl
push
int
in
pop
mov
setg
and
sub
call
in
stos
fwait
push
cmps
push
ret
sub
nop
je
int
dec
jmp
movaps
outs
stos
nop
mov
ror
shr
not
mov
(bad)
in
cdq
mov
add
inc
and
mov
sub
(bad)
push
in
pop
xor
ja
inc
mov
int3
jbe
xchg
xchg
outs
push
adc
xchg
xchg
mov
mov
push
js
pop
call
mov
push
xchg
fcom
scas
xchg
sub
imul
fild
movs
aaa
push
jno
and
mov
xor
cwde
pop
out
cld
mov
test
xlat
fild
or
jb
ret
fsqrt
movs
pusha
jge
sbb
sbb
mov
adc
imul
xchg
add
pop
sti
sub
dec
or
into
inc
shl
or
jne
and
jmp
loope
leave
dec
adc
mov
in
xor
ret
cli
out
cmp
(bad)
sub
mov
sub
xor
ret
lock
mov
inc
adc
ret
(bad)
mov
sar
scas
scas
push
dec
jmp
in
inc
rcl
imul
xor
aam
popw
xchg
in
popa
or
inc
sub
push
xlat
pop
xor
push
js
dec
sub
aaa
xchg
test
push
jge
int3
xlat
dec
jecxz
and
cmp
sbb
adc
adc
push
aas
push
add
lahf
imul
and
adc
push
sbb
imul
shr
inc
add
push
xchg
dec
ins
mov
lock
mov
push
mov
sti
add
mov
xor
pop
xor
out
jl
xchg
cmp
cli
xchg
fnsave
cs
cli
pop
push
ins
scas
lods
xchg
sbb
sub
mov
mov
add
mov
xchg
add
mov
scas
push
cmp
and
push
xor
and
pop
inc
pop
cmp
nop
push
js
push
out
movs
jg
jnp
cwde
jecxz
xchg
movaps
js
je
call
push
mov
les
int3
cmp
mov
dec
popf
push
out
or
out
xor
mov
aad
mov
pop
fmul
cmp
xchg
xchg
dec
dec
mov
stc
fist
push
dec
test
stc
cmp
dec
push
jno
fidiv
es
int3
jno
movs
cmp
cld
gs
je
xchg
test
nop
xchg
cmps
mov
and
jecxz
inc
retf
pop
and
inc
dec
mov
mov
pushf
ins
cld
or
out
mov
rol
mov
sbb
or
inc
aas
xor
les
xor
sub
and
jp
ror
xor
dec
sbb
leave
lahf
mov
daa
jnp
inc
or
loop
mov
xchg
popf
pop
fs
jae
mov
int3
movs
xor
mov
mov
cmp
mov
xlat
sti
sbb
jl
inc
xchg
cdq
dec
push
(bad)
xchg
lds
ja
pop
inc
in
lods
add
call
ficomp
not
cmp
in
je
icebp
sub
movs
adc
sub
leave
test
out
iret
outs
or
inc
pop
cmp
inc
push
es
inc
jge
xor
inc
popa
ja
ss
inc
clc
sbb
fsubr
sbb
pop
jno
dec
sbb
fisub
sub
icebp
js
icebp
jl
push
dec
out
inc
or
iret
or
or
data16
sahf
movs
in
fist
addr16
xchg
cmp
lods
mov
sub
inc
pop
or
jmp
xchg
sub
mov
(bad)
mov
addr16
mov
xchg
outs
(bad)
int
jbe
in
ds
enter
push
mov
jae
dec
sub
inc
xor
jecxz
push
pop
pop
mov
inc
jp
dec
aam
aad
fadd
xor
push
pop
add
test
or
mov
test
std
push
mov
test
gs
cmp
icebp
pop
xchg
in
aam
ror
xor
gs
xor
cs
mov
sub
out
cld
out
lods
or
psubsb
mov
fsubp
sub
inc
or
jle
les
push
mov
dec
(bad)
sbb
pop
hlt
mov
mov
popa
pop
mov
adc
inc
dec
les
and
int3
push
popa
cs
pop
inc
sbb
leave
arpl
inc
les
(bad)
sub
mov
sbb
fild
(bad)
scas
add
sub
fst
into
sahf
push
fidivr
fidiv
jno
jle
xchg
es
into
es
mov
adc
imul
add
leave
jge
dec
dec
sahf
add
in
cmps
push
inc
fmul
arpl
xor
mov
fidivr
and
add
sub
pop
icebp
(bad)
push
jno
sub
jmp
test
mov
enter
cwde
cmp
loope
xor
and
ins
shl
mov
sub
pop
or
sbb
mov
xchg
push
lods
cmps
ins
mov
adc
mov
sub
mov
pop
lahf
mov
adc
or
stos
adc
sti
adc
dec
adc
cmp
aas
push
and
test
mov
das
ret
push
mov
xchg
cmp
stc
mov
repnz
fstp
mov
fdivr
sbb
inc
popf
enter
call
jg
push
or
pop
test
cmp
(bad)
push
sub
in
es
push
xor
shl
push
inc
out
mov
fwait
cmp
movs
mov
add
sub
and
dec
or
cmp
in
cmp
dec
je
add
xadd
jnp
stos
(bad)
mov
cmps
add
and
sbb
push
jmp
(bad)
push
mov
sub
jle
cmps
jbe
pop
shr
idiv
movs
aaa
inc
sub
in
mov
or
out
fcmovne
adc
sub
aaa
cld
xchg
dec
add
or
mov
fs
sbb
loope
xor
sbb
(bad)
shl
loope
ss
outs
adc
add
(bad)
outs
push
bound
xchg
mov
jb
push
call
dec
or
sahf
sub
lock
fisttp
push
xchg
out
and
and
jp
out
jo
mov
call
das
jbe
xor
leave
xor
and
aam
xor
cmp
lahf
sar
iret
dec
cmp
jmp
les
and
push
enter
pop
mov
push
push
cmp
pop
inc
push
dec
lea
cs
cmp
out
div
gs
ds
mov
out
push
cmp
adc
fld
push
lds
lock
push
or
fwait
add
test
out
nop
dec
mov
xor
cwde
jns
jmp
inc
aad
bound
xrelease
ret
js
xor
data16
fwait
movs
repz
popf
push
cmc
(bad)
pop
xchg
jne
push
aad
int3
add
mov
mov
push
rol
cmp
popf
jge
xor
in
add
hlt
jns
jmp
jne
jge
imul
pop
in
mov
jae
and
stos
pop
inc
scas
daa
ins
jo
std
sub
fst
mov
and
push
mov
jg
es
or
faddp
out
xchg
mov
jecxz
jns
and
jmp
popf
or
cmp
sub
call
mov
ret
add
add
rcr
push
push
(bad)
cld
mov
pusha
std
and
sub
call
call
sbb
cmp
retf
int3
das
xor
push
shr
add
xor
aas
dec
adc
in
cld
ins
(bad)
fnstcw
mov
mov
inc
jo
xor
aad
fs
dec
xchg
dec
sti
fdivr
cmp
push
and
aas
scas
dec
je
loopne
xchg
into
mov
jb
add
popa
jns
jne
cs
mov
mov
xlat
daa
js
test
mov
inc
test
addr16
push
sbb
aas
fldenv
retf
and
in
or
in
ror
and
and
sahf
sti
stos
fcom
mov
out
mov
fs
mulps
mov
and
sbb
les
xor
pop
sbb
dec
sbb
xor
shl
add
shr
push
aad
and
or
pop
mov
xlat
ret
pop
xchg
dec
mov
push
pop
gs
lods
mov
vprotd
call
sbb
je
mov
mov
clc
sub
fistp
arpl
and
fwait
dec
mov
mov
mov
sub
nop
out
inc
pusha
sub
cmp
dec
cld
mov
daa
inc
lds
or
das
arpl
adc
mov
cmp
in
or
inc
jle
and
inc
pop
stos
adc
mov
sub
scas
in
mov
mov
iret
add
inc
sbb
mov
sub
(bad)
aad
sar
(bad)
ins
stos
imul
ss
fwait
jnp
jb
and
cdq
outs
fsubr
mov
out
out
and
adc
ret
push
stos
cmp
dec
(bad)
in
sbb
cmc
or
sub
test
out
test
shl
fcom
in
cmp
add
in
lahf
xchg
xor
sbb
loope
icebp
aad
add
push
xchg
icebp
add
adc
data16
and
add
dec
test
jo
sti
sbb
repz
(bad)
mov
add
jge
gs
bswap
mov
retf
mov
icebp
ror
xchg
jo
adc
jns
xor
ja
mov
and
out
sbb
into
push
xlat
or
mov
pop
xchg
sbb
mov
mov
ss
out
retf
add
aas
shr
leave
cdq
pop
push
sbb
aad
cdq
sbb
pop
nop
rcl
fiadd
stos
enter
shl
sbb
repz
test
iret
addr16
and
cmp
sbb
ficom
outs
cmps
ret
test
adc
loopne
scas
sub
and
aaa
shl
pop
sub
push
stc
mov
cmp
sub
pop
in
xchg
retf
push
cmp
(bad)
jno
xchg
push
aaa
and
push
jp
xchg
sub
jb
xchg
loop
stc
mov
repz
les
mov
fidivr
dec
fisub
or
icebp
adc
imul
ins
dec
jle
sbb
add
fs
sbb
sub
test
mov
mov
mov
inc
in
cli
push
cmp
adc
dec
loopne
mov
jne
(bad)
(bad)
bound
jae
pushf
mov
aam
mov
into
sbb
das
push
and
jl
popa
cmp
pop
(bad)
jb
daa
jcxz
inc
xor
jmp
cmp
dec
sbb
mov
cwde
sub
rcr
push
xor
in
push
mov
jnp
pusha
fnsave
ds
sbb
scas
popa
mov
jge
cmp
mov
out
sub
or
or
sub
adc
movs
sahf
push
adc
mov
cld
repnz
cmps
pop
jns
(bad)
add
movs
retf
pop
loopne
enter
mov
lods
or
and
stos
jne
mov
dec
and
rcr
movs
outs
mov
and
fwait
mov
out
mov
sahf
icebp
shr
jp
mov
inc
sti
xchg
jp
cmp
mov
mov
inc
push
loope
pop
mov
cmc
mov
dec
dec
inc
add
xor
lods
in
add
mov
add
or
pop
imul
scas
inc
popa
dec
cdq
inc
out
mov
loop
inc
jne
mov
add
ins
rcr
xor
and
fist
sub
adc
mov
test
jbe
and
aam
xchg
or
ficom
ds
pop
icebp
mov
dec
pop
(bad)
retf
pop
stc
stc
cwde
adc
icebp
inc
sbb
add
pop
lea
mov
(bad)
mov
jmp
movs
adc
inc
jne
loopne
rcl
(bad)
call
sub
pop
mov
sub
mov
pop
push
into
inc
jmp
cld
add
xchg
ret
sar
fwait
xchg
mov
ror
mov
add
rcl
(bad)
cmp
dec
xor
jle
xchg
fild
xor
popf
aad
mov
outs
dec
popa
pop
xchg
and
sub
aas
add
mov
adc
ja
mov
test
mov
mov
mov
fcmovnbe
ss
xchg
sar
sbb
push
mov
in
es
mov
rcr
jmp
cmps
mov
mov
add
pushf
fwait
sbb
adc
ror
loope
fisub
mov
xor
inc
stos
push
inc
jge
xchg
ins
stc
fld
call
dec
int3
ds
loopne
push
lods
and
movs
ret
push
or
(bad)
retf
shl
retf
adc
(bad)
out
shl
sbb
mov
iret
mov
(bad)
es
movs
repnz
dec
aad
xlat
lods
mov
clc
dec
sub
push
push
pop
jge
inc
pop
ss
or
sub
push
popf
sbb
mov
test
dec
rol
cmp
shl
sub
test
push
inc
loope
xor
jmp
xchg
jae
xlat
xchg
inc
xor
js
sub
sbb
mov
add
add
(bad)
sbb
pop
xchg
aad
clc
test
aaa
jb
jo
(bad)
mov
jle
sbb
ret
hlt
sbb
ror
lock
pop
ja
iret
loope
in
(bad)
push
push
cmp
pop
pop
adc
push
inc
inc
fsub
cmp
or
add
inc
mov
pusha
xchg
fdiv
gs
jmp
call
sub
and
jne
jecxz
add
pmaxsw
and
popa
cmp
cmp
out
pop
sub
daa
dec
push
cli
xchg
cwde
sbb
xor
inc
(bad)
outs
into
ret
pop
mov
pop
fidivr
or
mov
out
int3
pop
mov
sub
mov
cmp
jmp
retf
sbb
gs
and
jmp
(bad)
outs
pop
movs
or
rep
mov
mov
or
cmp
out
xor
xchg
jecxz
xchg
repnz
(bad)
es
(bad)
ret
push
cmps
out
push
jg
adc
pop
dec
sbb
adc
dec
loop
aas
addr16
sub
into
pop
das
ret
inc
in
(bad)
shl
mov
mov
cwde
cmp
popa
aaa
xor
cmp
rcr
push
and
clc
loop
push
xor
das
out
push
jg
rcr
mov
push
call
mov
sbb
xlat
cmp
mov
jmp
cld
out
sar
icebp
ret
jb
push
icebp
ret
js
bound
xor
adc
push
int
popf
jmp
enter
or
jmp
fcom
es
aad
cmp
dec
loop
inc
push
push
mov
repz
sbb
mov
push
sbb
bound
push
test
mov
loop
inc
pop
out
es
and
mov
or
push
es
movs
pop
cmp
pop
add
mov
ja
test
push
test
or
push
mov
jns
or
and
sub
push
int3
fimul
dec
or
popa
push
inc
ret
js
pop
jecxz
pop
out
into
das
mov
cwde
jo
add
add
add
jge
xor
mov
out
inc
psllq
jg
or
js
mov
dec
stc
or
rcl
call
mov
cmps
mov
xor
mov
leave
ds
cmps
xor
pop
out
pusha
push
inc
fld
inc
or
jecxz
xchg
dec
dec
mov
int3
loope
mov
xor
dec
pop
mov
outs
cmp
pop
pop
rcl
mov
pop
xlat
mov
imul
test
fcomp
push
outs
movs
or
sbb
fadd
push
pop
clc
mov
ja
fsubr
mov
or
mov
jmp
das
int
adc
dec
(bad)
cmp
out
in
or
cmp
sbb
jb
add
packuswb
dec
add
add
popf
ror
int
mov
mov
shl
(bad)
(bad)
jg
dec
mov
bound
push
push
cmp
cmp
in
fwait
loope
jmp
cmp
mov
int
ret
inc
inc
ret
dec
inc
inc
std
mov
or
pop
xor
dec
add
cmp
sbb
sub
cs
in
push
dec
add
add
xlat
mov
jbe
dec
push
adc
imul
(bad)
fsub
out
fstp
rcr
pop
test
dec
mov
jne
lahf
push
fistp
jecxz
pop
enter
mov
(bad)
popa
daa
cld
mov
out
pop
mov
push
sbb
stos
outs
int3
dec
push
pop
mov
push
pop
and
xor
jo
inc
fs
and
jbe
push
sbb
jmp
fwait
sbb
jl
fnstenv
test
lea
int
cmp
out
push
mov
pop
adc
sbb
jl
jae
adc
mov
jecxz
inc
(bad)
popf
popf
ret
outs
out
jnp
(bad)
iret
sbb
call
pop
jg
sbb
adc
dec
mov
in
popf
add
mov
mov
sar
dec
sub
inc
out
and
fwait
dec
and
dec
and
loop
test
dec
loope
sub
dec
call
test
out
lds
call
das
pop
push
ficom
dec
mov
mov
mov
mov
and
jle
std
mov
cdq
aas
xchg
bound
int
cmp
pop
outs
imul
sbb
gs
sub
pop
inc
fstp
cli
mov
popa
inc
imul
push
std
ins
lods
(bad)
mov
fmul
aas
adc
sub
lahf
adc
div
push
dec
add
sbb
ins
xchg
outs
push
popa
mov
xchg
mov
fisttp
or
push
sar
fdivrp
and
std
push
mov
inc
lods
push
mov
stos
lahf
loopne
clc
cmp
sbb
pop
leave
inc
cmps
mov
pop
cmp
sbb
or
ret
cmp
mov
push
mov
cmc
fsub
je
stc
push
inc
inc
loope
test
pop
sar
push
mov
retf
mov
jb
ret
aam
dec
jp
jne
xor
jl
jge
pop
push
and
(bad)
in
in
xchg
imul
lock
adc
jle
mov
push
les
cdq
or
cmp
fmul
push
ja
or
add
test
sar
aaa
es
call
push
pop
mov
jge
stc
mov
adc
sub
xchg
ror
(bad)
xchg
aas
push
pop
sahf
mov
aam
mov
sub
cmp
inc
xchg
cmp
mov
mov
cmp
inc
int3
in
imul
or
or
fnstsw
dec
outs
jg
mov
test
or
mov
sub
xlat
std
dec
jno
xlat
aad
aaa
dec
or
mov
(bad)
pusha
addr16
rcr
mov
inc
pop
jecxz
adc
out
cmp
pushf
in
das
icebp
jp
and
popf
pop
mov
lahf
cdq
std
mov
mov
jle
sbb
ins
leave
mov
mov
adc
cmp
xchg
mov
sub
addr16
jge
adc
loope
or
stos
addr16
or
sub
xchg
lods
inc
push
and
cmp
cmps
or
add
jg
test
addr16
(bad)
cmp
jmp
(bad)
inc
scas
adc
ret
mov
(bad)
int
ds
pusha
cmps
adc
add
jmp
mov
mov
enter
pop
dec
pop
push
scas
mov
sub
mov
lock
sar
jbe
in
movs
cmp
sti
sbb
(bad)
xor
cmp
jmp
pop
push
or
or
cmp
xchg
test
mov
sbb
lds
ror
lods
and
js
ret
and
ins
cmps
jl
pushf
lods
and
inc
or
dec
mov
ror
fucomp
add
out
inc
pop
cmp
inc
nop
pop
mov
jecxz
sbb
sti
cmp
imul
aad
lods
fldenv
pop
and
xchg
mov
xor
sbb
pusha
mov
or
test
inc
xor
inc
or
jae
pop
(bad)
push
lods
(bad)
popa
pop
test
sbb
scas
sub
cwde
loopne
int3
rcl
and
int
sub
aad
pop
inc
mov
cmp
repnz
pop
ret
inc
stc
mov
adc
cmp
mov
pop
cmp
xor
fbstp
adc
inc
popf
xchg
lds
mov
in
and
arpl
mov
xor
push
mov
lock
xchg
ins
std
inc
push
or
fst
pop
add
test
lds
jg
sbb
(bad)
lock
mov
bnd
xchg
cmp
jecxz
cmps
inc
mov
sub
mov
push
or
lahf
mov
aam
in
mov
sbb
mov
ror
xchg
int3
pop
or
mov
adc
inc
jne
dec
push
dec
mul
and
cld
xchg
cli
stc
je
out
jns
loop
or
push
sub
in
data16
cdq
jbe
inc
loop
push
add
sbb
test
pop
inc
push
push
jecxz
in
sub
sbb
test
push
and
popa
popa
xchg
and
push
sahf
jl
push
push
mov
add
fld
mov
hlt
or
dec
retf
dec
lds
adc
sti
and
push
adc
jecxz
push
sub
sub
test
rol
mov
fsubr
pop
loope
dec
test
fistp
loope
xor
stos
iret
lds
fmul
sbb
(bad)
pop
out
cwde
xor
cdq
enter
xor
push
push
jne
and
daa
push
test
xlat
pop
mov
mov
icebp
pop
scas
int
and
jno
xlat
sub
pop
pop
add
mov
test
mov
cmps
mov
bound
je
outs
ror
pop
pusha
mov
ins
jl
je
and
ja
fadd
cvtpi2ps
loop
sbb
popf
fild
(bad)
movs
and
pusha
lods
xchg
and
mov
cli
cld
add
or
mov
pop
sub
cmp
les
jno
scas
in
mov
and
and
sar
ins
dec
pushf
int
pop
jmp
test
push
sbb
movs
jb
outs
imul
lods
adc
(bad)
icebp
add
push
inc
(bad)
movs
std
mov
(bad)
in
inc
push
pop
mov
push
mov
sbb
sub
fwait
addr16
mov
jge
ja
jl
or
dec
xor
sub
int
dec
add
or
neg
xor
xchg
mov
ret
xor
loop
jne
push
or
pop
rol
jge
pop
add
mov
push
jl
add
cli
(bad)
or
xor
int
inc
test
pop
cli
and
pusha
pop
(bad)
into
arpl
ins
icebp
xor
pop
mov
gs
sti
mov
rol
pop
mov
push
loope
cmp
repnz
and
xchg
or
or
fld
movs
clc
test
jae
(bad)
xchg
neg
lahf
aad
xchg
mov
aam
mov
pop
sub
pop
fcmovnb
(bad)
jb
out
or
xchg
dec
or
std
lock
push
mov
es
aam
ins
dec
pushf
xor
cmp
jge
loop
cmp
imul
add
or
pop
cs
ret
adc
push
fidiv
cs
push
jle
mov
dec
scas
outs
mov
xor
mov
pop
fwait
into
jle
sar
scas
inc
cmp
fistp
mov
in
arpl
sbb
ja
(bad)
pop
add
dec
shl
mov
ins
stos
rcr
imul
push
ins
inc
jae
sub
mov
ror
jge
idiv
nop
or
(bad)
push
jno
inc
add
aam
(bad)
mov
cmps
cli
adc
push
or
cli
lahf
jns
mov
movs
xor
xchg
mov
out
sar
inc
and
sub
lods
mov
mov
iret
push
repz
mov
dec
adc
lods
pop
arpl
cmp
iret
loope
jmp
retf
cmp
retf
js
sub
push
add
ret
inc
lahf
sbb
retf
mov
repnz
imul
pop
imul
lds
mov
sub
je
mov
or
cmp
pop
mov
or
icebp
idiv
and
daa
xor
aam
inc
popa
mov
mov
shl
mov
sar
mov
jne
cmc
(bad)
sbb
pop
fs
pop
mov
dec
mov
jmp
cs
jp
sub
pop
adc
pop
fimul
push
cmc
fwait
mov
into
jmp
dec
(bad)
hlt
sbb
in
nop
repnz
jno
jle
retf
xor
popw
sbb
ins
and
jg
add
cmps
daa
add
bound
in
lds
pushf
and
pop
pusha
add
mov
jnp
add
aaa
gs
mov
adc
cs
ins
xor
xor
pop
mov
repnz
xchg
jb
and
push
scas
mov
add
outs
js
jp
fwait
add
aam
xor
adc
fisttp
jl
imul
jecxz
mov
mov
jmp
popf
cmp
add
dec
sub
ds
icebp
dec
mov
inc
ins
movs
popa
(bad)
cmp
lock
push
xchg
jmp
test
data16
arpl
inc
add
add
mov
mov
or
mov
mov
mov
and
sti
jmp
xor
leave
(bad)
cmp
in
inc
out
jnp
pop
inc
sub
jae
ins
jmp
lea
cmp
jmp
fwait
mov
adc
pop
(bad)
(bad)
and
not
test
add
rcr
jmp
pop
sbb
dec
pop
idiv
xchg
and
ss
test
adc
out
fld
sub
ja
jp
sbb
ja
inc
imul
jge
add
loope
out
mov
retf
mov
data16
xor
sbb
in
sbb
or
mov
bound
faddp
aaa
cmp
imul
mov
test
imul
das
icebp
xchg
dec
mov
cmp
mov
pop
and
xchg
jmp
push
dec
pop
retf
mov
pop
cli
dec
loop
xchg
jmp
sbb
mov
jne
cld
add
mov
xchg
sub
test
movs
test
iret
xchg
mov
fistp
push
stc
test
ret
inc
pop
fucom
out
push
jl
inc
retf
mov
outs
leave
aam
mov
and
pop
jmp
jo
mov
ret
xor
adc
call
dec
imul
mov
add
xor
imul
jecxz
jb
jo
mov
cs
cmps
arpl
cmp
in
aaa
repnz
mov
loopne
cs
hlt
cmp
push
cmp
mov
fisttp
add
mov
jle
or
movs
and
lods
cmc
test
fisubr
leave
test
retf
fprem
sar
pop
ret
cmp
mov
int3
jle
dec
sub
test
mov
mov
mov
xchg
cmp
in
jne
push
and
cmp
sub
mov
pop
stos
jae
imul
mov
inc
in
imul
retf
loope
lahf
loope
fsub
pop
mov
push
(bad)
jmp
into
jae
jnp
sub
dec
adc
fsubp
jns
jo
loopne
rol
dec
ret
stos
mov
and
xchg
add
push
std
repnz
mov
test
test
jns
je
stos
call
shl
nop
shl
mov
cmp
loopne
imul
out
sub
push
pop
adc
dec
jo
push
lahf
add
xchg
and
or
jge
inc
cli
jo
enter
ret
ss
pop
loop
xor
jp
ror
add
repz
ja
or
or
add
sti
jb
inc
push
xor
cmp
adc
cmp
xchg
mov
scas
test
mov
dec
jecxz
inc
int
or
cmp
sub
dec
cmp
(bad)
dec
adc
cmp
test
ds
dec
cmc
cmp
gs
push
nop
scas
fnsave
aam
fstp
stos
retf
(bad)
rcr
(bad)
mov
mov
hlt
in
xchg
push
jg
ins
add
sub
fs
xor
pop
pop
and
call
pop
fisubr
hlt
fiadd
repnz
mov
mov
add
mov
sbb
repz
test
cmp
mov
sbb
pop
cmps
out
jbe
inc
or
outs
sub
mov
xor
nop
aas
fcmovb
dec
sbb
xor
cmp
pop
sahf
sbb
push
(bad)
pop
mov
mov
or
ja
sar
and
adc
dec
int
arpl
int
or
cmp
mov
sbb
push
push
xchg
inc
adc
repz
das
movs
inc
inc
add
push
sub
in
and
js
movs
dec
and
xlat
inc
data16
push
es
mov
and
ret
jle
imul
ja
stos
out
cwde
xor
shr
mov
fbstp
call
jge
jbe
jne
aas
movs
sbb
dec
cmp
in
pusha
loop
push
mov
dec
jmp
dec
fistp
mov
mov
(bad)
je
addr16
stc
in
std
push
cmc
push
in
push
mov
push
lea
fidivr
sbb
popf
not
stos
pusha
int3
cmps
jno
xchg
pushf
cmp
fisttp
and
fistp
bnd
(bad)
jp
mov
jb
mov
cmp
or
out
sbb
dec
stos
cmp
and
loope
imul
adc
ins
ins
mov
mov
jno
add
adc
pushf
fadd
movs
and
jge
mov
imul
and
xor
xor
(bad)
call
cli
adc
xchg
pop
mov
dec
mov
(bad)
movs
inc
pop
push
(bad)
retf
cmp
(bad)
mov
dec
jnp
mov
loope
fisubr
pushf
add
inc
mov
lds
(bad)
(bad)
xor
rcl
movs
fnstsw
xchg
adc
les
xchg
xor
and
inc
in
cmp
xor
pop
jmp
popf
lods
(bad)
ror
cld
lock
sbb
adc
inc
add
mov
dec
cmp
jge
(bad)
stc
mov
cmp
dec
imul
sbb
dec
xchg
dec
ret
mov
sbb
xchg
mov
xlat
mov
retf
mov
shr
out
mov
aam
in
shl
push
sub
push
pop
in
lods
(bad)
aam
jg
pop
imul
dec
xor
adc
push
(bad)
dec
adc
sbb
mov
mul
push
jle
inc
push
call
jge
xor
repnz
adc
mov
rcr
or
je
call
mov
jbe
sar
inc
out
mov
xchg
in
cmps
cdq
push
sub
retf
loope
pusha
mov
xchg
add
je
leave
mov
imul
jmp
ja
(bad)
rol
mov
(bad)
out
inc
jo
cmc
in
xchg
rcr
add
ret
aam
icebp
fimul
test
mov
into
loopne
stc
scas
test
fwait
ins
sar
std
mov
ins
cmp
add
aas
in
jae
scas
xchg
mov
add
and
xor
clc
cmp
mov
jne
outs
sbb
imul
sbb
out
fadd
push
(bad)
stos
pop
loope
ds
jge
dec
enter
icebp
ja
int
(bad)
call
mov
ror
mov
test
shr
mov
imul
xor
mov
mov
inc
popf
jns
pop
sbb
fs
cli
cld
scas
sub
fcmove
mov
aas
pop
pushf
dec
pop
mov
and
cmp
cmps
and
(bad)
(bad)
jnp
sbb
popa
cs
fnstenv
movs
sub
dec
pop
cmp
imul
sbb
dec
add
cmp
mov
lahf
into
data16
ins
push
lock
jne
and
mov
and
xchg
mov
xor
mov
(bad)
xlat
sti
mov
pop
xlat
movs
dec
movntq
mov
mov
sti
mov
mov
mov
outs
outs
sbb
lahf
shl
inc
add
(bad)
fcmovnbe
inc
leave
hlt
xlat
sbb
sub
mov
adc
test
xor
push
xchg
cmp
ja
(bad)
pop
jno
addr16
shl
mov
jmp
xlat
and
pop
mov
test
sbb
dec
jecxz
mov
jne
cmp
cmp
cmps
je
(bad)
cmp
jo
jb
fisub
fnsave
adc
scas
test
mov
clc
cmps
aad
(bad)
jmp
arpl
pop
xchg
stos
and
retf
pop
inc
xor
push
mov
push
cmp
shl
jmp
mov
aam
lods
xor
adc
hlt
mov
mov
cmp
stos
hlt
(bad)
lods
out
pop
and
vandps
mov
dec
push
or
sub
lahf
dec
pop
aam
(bad)
or
push
inc
push
and
in
aaa
popf
xchg
ror
mov
and
mov
les
cmp
mov
test
hlt
mov
test
icebp
ins
fsub
jle
dec
dec
adc
(bad)
das
xchg
int3
push
lahf
pop
lods
xchg
push
mov
inc
fist
imul
lods
inc
loop
adc
fisttp
xchg
scas
mov
mov
jge
adc
mov
pusha
ror
int
adc
mov
xchg
in
int3
push
cs
inc
icebp
pop
mov
mov
dec
cmps
xchg
inc
cmp
add
sub
xor
rol
mov
push
cli
push
fdiv
push
bound
or
hlt
popf
push
mov
in
in
in
adc
les
inc
mov
mov
xchg
pop
out
push
cmps
pop
cli
stc
cmp
aam
push
xchg
jge
jge
clc
mov
jno
cmp
add
pop
repz
shl
popa
sub
push
push
xchg
mov
repz
adc
lods
push
sub
not
add
dec
xor
out
inc
inc
scas
test
jmp
fs
push
mov
jp
and
pop
cmp
dec
push
push
xchg
xchg
push
xlat
mul
sub
out
sbb
popf
loop
lea
cwde
mov
hlt
fild
gs
xlat
add
adc
sahf
dec
cmc
cwde
stc
or
mov
xor
enter
iret
fwait
mov
mov
out
mov
jmp
(bad)
push
push
(bad)
sub
or
pop
into
es
lds
cmp
sbb
ins
test
jp
scas
into
jle
adc
loop
inc
in
xchg
push
clc
(bad)
mov
in
loopne
xor
test
cmp
popf
(bad)
push
adc
push
add
pusha
pop
mov
mov
cmp
arpl
dec
(bad)
sbb
mov
xchg
pop
xlat
dec
mov
outs
mov
dec
cmp
mov
vpcmpgtb
sub
repnz
add
hlt
mov
out
push
pop
(bad)
gs
popf
mov
push
sub
jne
loopne
outs
pop
int
data16
retf
shl
fild
mov
into
cmps
sbb
call
scas
rcl
sub
pop
mov
sar
dec
iret
xchg
movs
xchg
sbb
dec
mov
rol
(bad)
cld
mov
adc
mov
jno
hlt
(bad)
jecxz
sbb
(bad)
hlt
test
call
pop
cs
pop
in
dec
pop
(bad)
das
sbb
cmp
in
sbb
xlat
push
movs
in
xchg
scas
ins
mov
ror
movs
jbe
(bad)
das
outs
push
pop
iret
push
add
(bad)
or
mov
fwait
jo
data16
sub
xchg
ss
je
in
arpl
dec
mov
jp
pop
out
cwde
dec
test
mov
add
(bad)
ss
cmp
hlt
and
sub
and
cdq
xor
cmp
in
pop
inc
aas
dec
mov
jae
jmp
jno
jp
addr16
test
in
stos
push
dec
mov
lahf
leave
sub
dec
and
inc
mov
rol
std
retf
test
inc
popf
and
push
loop
add
and
cdq
call
fisubr
cmp
fidiv
jecxz
xor
adc
lock
jmp
jbe
xchg
mov
mov
repnz
jl
lods
pop
jnp
pop
adc
std
push
mov
popf
pushf
push
push
or
rol
inc
fst
(bad)
ins
or
cmc
pusha
enter
es
push
les
or
pop
push
lods
sbb
xchg
mov
push
shr
jnp
bnd
xchg
jne
daa
xchg
(bad)
loop
jb
jns
adc
and
cmc
xchg
int3
clc
add
add
(bad)
rol
mov
scas
das
adc
mov
mov
jp
hlt
mov
cmp
(bad)
mov
call
xor
mov
dec
dec
mov
jge
fwait
scas
imul
and
push
mov
mov
ins
test
and
cmp
push
test
shl
aad
dec
sbb
pop
pop
push
xchg
jmp
daa
cs
das
jb
jecxz
outs
(bad)
pop
call
xchg
push
daa
in
add
ret
push
add
sbb
cmp
or
out
retf
mov
fisub
jo
in
cs
aaa
or
fld
jb
shufps
aam
sbb
jbe
push
aas
loopne
xor
aam
mov
into
retf
scas
or
jp
cli
test
stos
sub
xor
mov
pop
inc
retf
mov
dec
(bad)
jns
push
or
loopne
sub
lock
dec
xor
pop
mov
stos
or
cli
test
cmovbe
xor
test
ret
(bad)
out
into
mov
nop
add
into
mov
cdq
mov
xor
sub
fild
jb
fs
mov
mov
sub
xor
add
in
popa
mov
fisubr
push
or
fld
adc
sub
jle
dec
cmp
test
pushw
nop
pushf
add
xchg
sub
call
cwde
xchg
mov
push
mov
mov
js
int
inc
push
cmp
mov
aad
out
and
aad
push
test
or
sbb
mov
mov
out
(bad)
adc
scas
adc
mov
add
sbb
js
int
aas
scas
cld
idiv
push
call
popa
rcl
lds
fldenv
retf
pop
and
inc
push
mov
rol
push
xchg
xchg
icebp
fnsave
ret
rcl
adc
and
xchg
sub
test
ins
scas
popf
dec
add
ss
movs
lods
(bad)
aad
xor
xchg
fdivr
cmps
fidivr
cmp
mov
repz
mov
sbb
inc
outs
dec
fisub
sbb
push
adc
(bad)
mov
ret
in
retf
fwait
imul
ins
inc
xchg
cmc
rol
push
cmp
adc
or
scas
loopne
clc
ins
or
hlt
xchg
outs
das
out
enter
test
push
xor
into
mov
call
or
enter
ss
mov
stos
cmp
add
jg
loopne
in
jg
clc
or
cmps
daa
and
push
mov
test
fdiv
loope
sbb
pop
repz
nop
jmp
mov
add
adc
sbb
shr
dec
add
pop
aam
jb
mov
scas
out
rcr
sub
pop
push
mov
xchg
cli
inc
aas
nop
or
mov
bnd
(bad)
ds
(bad)
cmp
pop
inc
push
aaa
adc
(bad)
(bad)
fld
add
fld
or
mov
sbb
ins
mov
fnsave
dec
rcl
add
pop
out
xchg
xchg
das
mov
into
into
ret
pop
mov
xchg
es
and
rol
bnd
inc
jns
adc
dec
adc
clc
stc
cld
ja
jmp
adc
outs
ins
push
leave
cld
fs
mov
xchg
(bad)
pop
xchg
push
pusha
fimul
mov
adc
retf
retf
scas
iret
jle
aaa
add
jmp
ins
int
pop
aaa
nop
call
pop
fidiv
jae
gs
in
inc
xchg
lds
jecxz
retf
hlt
outs
ja
inc
xor
add
push
ds
or
jnp
jmp
js
pop
scas
or
out
xor
mov
(bad)
jbe
out
add
repz
pop
xor
ss
xchg
push
(bad)
jg
xchg
adc
out
mov
idiv
mov
fiadd
imul
or
aad
jb
lods
xlat
jp
xor
(bad)
add
push
mov
mov
rcr
jmpw
adc
push
int
push
dec
or
cli
xchg
or
out
ja
(bad)
arpl
je
jg
sar
cs
cwde
loopne
js
inc
mov
dec
inc
imul
mov
push
lahf
lea
jae
or
dec
loope
and
pop
mov
jl
cmp
push
in
pop
stos
jmp
adc
adc
push
jne
loopne
mov
retf
inc
popf
cmp
dec
sub
inc
into
ret
lock
ins
adc
push
iret
cmp
scas
jmp
outs
add
ret
arpl
mov
jl
nop
cli
sbb
adc
cmp
or
jbe
mov
xlat
jb
push
retf
and
popf
add
mov
sbb
adc
jo
adc
out
aaa
fnstcw
(bad)
push
shl
popf
popf
jno
dec
push
mov
mov
aas
scas
pop
shr
clc
jnp
sbb
mov
fsub
mov
or
(bad)
ins
fcom
sahf
addr16
pop
mov
(bad)
movs
ja
sahf
stc
stc
cmps
loopne
mov
inc
js
retf
jp
adc
and
and
rcl
ins
and
pusha
sar
fisttp
push
hlt
(bad)
(bad)
sahf
nop
in
sub
stos
and
in
pop
mov
and
iret
sbb
(bad)
pop
sbb
xchg
inc
mov
cmp
nop
popf
pop
imul
bound
sar
jle
push
fild
sar
aam
es
sbb
mov
jbe
movs
push
pop
pop
mov
(bad)
cmp
js
xor
mov
fstp
mov
inc
xlat
xor
repz
fs
out
xor
inc
mov
js
test
inc
pop
add
push
pusha
int
in
aam
sub
loopne
mov
inc
mov
in
push
pop
inc
jp
jmp
test
pop
mov
scas
adc
fwait
aaa
hlt
jb
in
bound
stc
dec
push
test
call
xchg
xchg
in
jge
jbe
les
call
mov
and
repz
std
cli
loope
fsubr
repz
xchg
push
dec
ins
movs
jle
imul
cs
cwde
ss
push
and
push
mov
test
adc
ss
xor
cdq
xor
sbb
mov
cmp
popf
shr
out
daa
fwait
call
xchg
data16
(bad)
mov
jnp
jae
sub
or
and
jnp
jne
pusha
jbe
dec
dec
(bad)
stc
mov
lods
pop
fdivr
mov
sub
cmp
mov
ja
pushf
mov
(bad)
xor
jmp
jns
sub
cmp
push
push
jle
add
and
xchg
push
loop
jp
and
or
and
mov
cdq
inc
sub
mov
sub
adc
je
xlat
mov
inc
xchg
inc
or
sub
daa
addr16
adc
fcom
mov
(bad)
or
stos
xchg
lahf
inc
retf
inc
lods
mov
add
mov
es
lods
iret
xor
jo
pop
jg
and
or
jp
test
fnsave
test
and
sbb
hlt
mov
fs
rcl
out
jbe
dec
loopne
cli
repz
and
inc
and
pop
adc
add
leave
dec
je
fcmovbe
shl
pop
adc
dec
push
aas
adc
xchg
inc
mov
ftst
jne
cmp
inc
push
mov
loopne
dec
test
sub
adc
jmp
popa
sbb
push
dec
clc
cmp
fs
out
scas
and
lock
xlat
push
mov
sahf
or
inc
loopne
mov
jmp
jno
and
pop
lea
int3
jne
inc
stos
inc
pushf
aas
inc
imul
add
in
dec
cmp
in
shl
adc
aam
in
outs
loopne
inc
mov
test
outs
and
aad
shr
pop
fnstcw
xor
mov
rcr
dec
xor
addr16
cmp
fcomi
fwait
mov
retf
jecxz
in
mov
or
ss
mul
scas
test
ins
jl
imul
in
xor
jecxz
dec
das
mov
popf
mov
pop
sub
inc
mov
mov
mov
cmps
neg
mov
inc
add
out
dec
div
(bad)
mov
xchg
rcr
jecxz
pop
mov
dec
pusha
mov
sbb
jg
cmp
mov
mov
jne
lods
pop
xor
mov
xor
sbb
lods
cdq
sbb
lahf
mov
fcmovnbe
mov
in
sar
add
dec
mov
daa
in
iret
jnp
ja
mov
(bad)
adc
pop
xor
lods
ret
mov
fs
sub
mov
xor
(bad)
int
adc
mov
repz
sub
(bad)
dec
add
adc
push
or
loope
sbb
loop
or
dec
aaa
sub
imul
inc
dec
cmp
or
rcr
xor
jg
retf
iret
out
add
jae
cmps
cdq
fwait
(bad)
pop
sub
cbw
dec
ret
xchg
(bad)
dec
outs
gs
push
inc
inc
sahf
mov
clc
dec
and
sub
mov
adc
push
stos
sub
movs
retf
push
xor
movs
daa
xor
setg
fbld
dec
(bad)
and
or
aam
mov
mov
pop
cmp
repz
je
sub
fimul
or
pop
jle
pop
or
jae
enter
jnp
xor
adc
aaa
dec
je
or
sub
aam
jne
repz
pop
mov
shl
ja
or
cmps
mov
or
xchg
pop
mov
movd
or
and
loope
je
or
push
in
retf
sbb
mov
imul
push
or
adc
cmps
adc
lock
mov
pushf
adc
mov
dec
sub
pop
sub
dec
mov
test
jmp
pop
fwait
outs
xor
cmps
mov
mov
repnz
cwde
fnstcw
jnp
pop
pop
xor
aam
adc
(bad)
jo
pop
push
fist
inc
sub
pop
iret
out
cmp
neg
arpl
mov
jecxz
aam
and
ret
enter
scas
add
mov
push
leave
retf
or
dec
pop
xor
adc
movs
je
ret
test
xchg
cmp
ret
sar
stos
mov
fs
xor
sbb
cmc
out
sub
fbld
call
lods
popa
jno
pop
mov
loop
xchg
popf
pop
fwait
iret
cmp
add
ins
pop
iret
xchg
shl
ins
shl
mov
or
cmp
pushf
cmp
sbb
les
xlat
fwait
adc
cmc
dec
jno
in
pop
cmp
mov
fld
movs
jge
jb
mov
xchg
push
aas
xor
sub
push
fdivr
stc
xor
ret
(bad)
xor
xchg
(bad)
mov
adc
mov
rcr
dec
mov
gs
(bad)
aas
add
ret
inc
call
mov
inc
mov
mov
int
fcomp
stos
out
aaa
cli
pop
pushf
adc
inc
mov
out
cmp
not
adc
or
push
and
sbb
jp
jno
out
mov
test
outs
dec
sub
daa
or
adc
stc
jle
sti
fild
xchg
jbe
inc
push
xchg
out
sbb
xchg
enter
dec
call
or
push
xor
ja
sub
push
xchg
mov
(bad)
push
fcomp
pop
repnz
mov
in
test
cmp
mov
push
pop
arpl
jecxz
scas
sbb
sbb
rcr
mov
ja
adc
int3
fmulp
jb
push
sti
cmp
dec
scas
aam
ret
inc
movs
cmp
shl
leave
out
cld
push
outs
mov
(bad)
inc
mov
imul
mov
in
sub
xor
pop
xor
mov
push
push
push
xchg
loop
and
fs
ret
xor
inc
test
inc
pop
inc
mov
push
sbb
push
xchg
pfmax
add
ror
stc
adc
das
movs
pushf
jns
xchg
fnstenv
inc
adc
add
mov
push
fs
push
jnp
stos
dec
add
jecxz
mov
jg
test
mov
(bad)
fild
or
(bad)
std
sbb
aas
or
xor
out
in
loopne
jecxz
or
push
xor
xor
or
(bad)
gs
mov
call
dec
sub
stc
or
inc
cmp
pop
pop
inc
mov
imul
cmp
neg
jl
push
dec
fstp
xor
pop
loop
push
xchg
ja
xor
movs
xor
fxch
fstp
loop
jae
mov
sbb
in
pop
cs
data16
push
mov
sbb
and
sub
call
fmul
fild
push
xor
xor
adc
mov
into
retf
out
mov
sub
stc
and
aaa
int3
mov
pop
or
jl
addr16
mov
xchg
mov
inc
sbb
mov
xor
popa
xchg
jb
jae
stc
das
les
lods
jb
imul
mov
pop
jb
xchg
mov
ret
mov
xchg
ret
aam
push
ret
mov
xor
mov
mov
or
rol
rcl
ficomp
inc
stc
loop
mov
sub
push
daa
idiv
cmp
jge
mov
adc
pop
movs
clc
dec
movs
mov
sar
inc
mov
jno
jmp
push
and
aad
sub
(bad)
jl
and
out
push
sub
ins
or
push
in
jnp
ret
inc
adc
pop
sub
add
stos
or
lock
outs
cwde
jl
pop
or
sbb
dec
xor
add
outs
f2xm1
inc
inc
mov
in
test
sub
lods
sbb
aas
popf
ss
mov
cmp
mov
int3
xor
pop
in
aam
daa
repz
jmp
out
mov
test
add
pop
iret
add
xor
punpckhbw
or
sub
popa
or
nop
(bad)
sar
(bad)
int
iret
mov
cmp
add
lods
dec
retf
call
and
lods
test
rcr
stc
add
in
inc
adc
mov
test
xchg
es
and
pop
jmp
int
mov
xor
in
jge
cmp
pop
pop
test
cwde
xor
sbb
(bad)
push
add
inc
shl
call
cs
icebp
out
jp
cdq
push
and
push
jl
xor
pusha
test
jae
(bad)
pop
pop
sbb
sub
int3
or
or
xor
imul
cmp
ins
inc
pop
loope
push
loop
pop
sub
jnp
scas
push
pushf
inc
into
adc
dec
lock
mov
mov
xchg
dec
in
loopne
push
or
pop
ds
rcl
imul
cmp
ret
aad
adc
pop
jmp
movs
inc
icebp
(bad)
jp
jl
jge
call
sti
in
mov
cs
sbb
cmps
jg
sbb
push
or
out
enter
mov
dec
pop
daa
pop
call
pop
add
or
fistp
test
pop
inc
test
outs
xlat
and
(bad)
cdq
sahf
rcl
inc
push
call
es
lods
in
mov
pop
inc
ret
mov
dec
mov
or
xor
iret
push
inc
mov
sahf
push
mov
adc
xor
or
sub
retf
mov
mov
js
out
push
aas
sub
call
loop
arpl
mov
jmp
jbe
and
in
aad
add
aas
dec
sub
daa
int
fdiv
xchg
jmp
add
movs
xchg
jo
jne
lock
inc
in
fist
stos
shl
outs
jae
mov
dec
aad
ror
outs
js
jo
test
test
jg
mov
out
push
pop
xchg
xchg
dec
sub
lock
scas
mov
ret
fs
or
inc
cmc
inc
js
or
sub
cmps
imul
frstor
movs
inc
icebp
jmp
mov
xchg
ret
xchg
movs
and
clc
jmp
cmps
mov
leave
(bad)
xor
adc
jno
test
jno
(bad)
and
jmp
stos
pop
xchg
test
add
add
cmp
pop
ret
jb
push
jb
data16
retf
sbb
sbb
sbb
mov
sbb
fcomi
scas
dec
stc
lods
mov
xchg
xchg
or
jp
dec
push
clc
in
fist
lods
test
popf
xchg
sti
sahf
add
daa
mov
cmp
repnz
jle
add
mov
mov
sbb
mov
push
movs
fnstcw
push
inc
es
pop
int3
xor
pushf
fs
xor
xchg
ja
pop
sub
sub
data16
xor
xchg
loopne
fst
in
int
pushf
sub
mov
lds
retf
xchg
cmp
les
rcr
pushf
ret
repnz
adc
push
or
mov
fwait
in
inc
mov
push
fisttp
mov
sub
dec
daa
(bad)
sti
retf
pop
dec
adc
ret
jecxz
mov
pushf
out
mov
in
mov
mov
mov
mov
rol
jae
mov
dec
dec
xchg
mov
xchg
js
push
xor
sbb
add
adc
loope
sar
stos
jno
sbb
pop
add
pop
pop
fild
cmp
adc
test
(bad)
mov
out
adc
cmc
cmp
outs
adc
call
iret
push
and
pushf
pop
mov
stos
push
sar
pop
xchg
and
fidiv
xor
pop
icebp
es
mov
pusha
pop
loop
loop
push
xchg
sti
popf
pushf
jne
mov
dec
dec
lahf
sbb
pusha
mov
test
mov
frstor
pop
int3
xchg
and
retf
mov
shl
jg
xor
pop
aas
mov
jge
imul
mov
sbb
push
(bad)
shl
inc
add
pop
mov
inc
inc
(bad)
icebp
dec
xlat
xchg
(bad)
cs
mov
sbb
fs
data16
(bad)
lock
mov
add
jbe
mov
jl
pop
les
scas
jne
aas
jo
push
das
adc
mov
bound
jl
or
sub
push
dec
jnp
xchg
mov
in
cmps
xlat
imul
mov
lods
adc
lods
add
push
mov
inc
popf
xor
inc
scas
iret
clc
in
ss
and
retf
pop
pop
mov
mov
cmp
xchg
xor
mov
imul
mov
gs
cmc
pop
(bad)
push
push
js
popa
int
push
inc
test
jb
call
mov
mov
fisttp
fisub
fmul
mov
xor
pop
and
push
mov
cmp
loop
sub
je
xchg
jno
test
mov
mov
dec
pop
shl
jno
add
or
cmp
adc
jo
or
inc
ja
adc
jo
int3
(bad)
mov
xchg
cmps
or
lods
xchg
mov
push
imul
add
inc
mov
das
daa
pusha
jne
dec
mov
fincstp
(bad)
fist
out
into
arpl
mov
mov
sub
fisttp
or
sub
ret
or
(bad)
pop
pushf
push
das
nop
jne
adc
xchg
xchg
sbb
(bad)
les
loop
enter
outs
xor
adc
push
icebp
jge
popf
les
sub
test
test
mov
mov
retf
and
pop
push
push
pop
imul
inc
div
add
setge
(bad)
or
fcomip
imul
cmps
or
xor
repz
ins
call
movs
sbb
lahf
jg
je
pop
mov
fistp
pusha
and
adc
cmp
cmp
mov
push
dec
cmp
mov
cld
inc
pop
add
loopne
cwde
mov
test
adc
jmp
int
pop
popa
je
xor
push
cdq
xchg
cdq
test
xor
rcr
adc
out
imul
fnstsw
pop
mov
movs
retf
dec
xor
stos
cmp
and
lods
js
adc
fiadd
hlt
sbb
inc
cmps
jecxz
cmp
lahf
inc
push
sbb
outs
mov
push
sub
mov
push
rol
adc
icebp
shr
(bad)
inc
popa
loopne
rcl
jbe
ds
xor
push
jnp
shr
and
xchg
inc
pop
ret
mov
adc
and
inc
sbb
sbb
push
push
jmp
jae
loop
push
mov
int3
(bad)
pushf
scas
xlat
mov
mov
cmps
sub
xchg
ror
pop
add
lods
int
sbb
ret
push
pushf
and
cmp
jp
push
out
sub
push
xchg
cmovbe
bound
fimul
mov
and
movs
add
fidiv
push
or
mov
jmp
cmp
push
push
sbb
inc
call
lea
movs
pushf
adc
add
adc
sub
push
lds
adc
iret
int
fwait
and
(bad)
sbb
addr16
mov
sub
push
mov
sub
mov
(bad)
and
into
imul
jmp
ret
mov
or
sahf
jns
mov
fst
cmp
pop
and
cmps
jle
adc
xor
jne
mov
nop
rol
clc
mov
cwde
jnp
push
adc
nop
push
lahf
pop
cs
pop
wrmsr
pop
and
repz
jne
cld
mov
shl
xor
lods
mov
addr16
jmp
mov
div
or
and
enter
pusha
popf
mov
xchg
or
sub
or
cwde
imul
fbld
ja
test
pop
mov
and
jp
loopne
xor
fisttp
ret
mov
sub
xor
mov
test
pop
in
lds
imul
mov
in
ds
add
fistp
xor
push
and
push
inc
fist
mov
add
sub
(bad)
sbb
mov
dec
mov
sti
call
fadd
fadd
xchg
call
mov
jno
stos
add
push
xchg
daa
pop
mov
dec
mov
and
or
mov
mov
xchg
push
imul
jle
loopne
in
xor
mov
int
aas
jnp
jle
dec
xchg
mov
daa
mov
out
dec
adc
or
xchg
out
ja
fwait
jne
stc
retf
xor
jge
push
mov
out
cmp
pop
cdq
sbb
mov
fst
mov
test
xchg
js
jae
rcl
cli
ret
inc
test
scas
dec
mov
pop
retf
jo
cmp
mov
sar
mov
hlt
and
ins
jp
ret
jbe
sub
push
cld
jne
fidivr
sbb
fcomp
or
or
and
popf
pop
push
xlat
mov
fwait
adc
sub
sbb
jl
xchg
fs
imul
mov
ret
ins
bound
mov
je
rcl
lahf
mov
xchg
loop
jns
scas
call
fdiv
add
imul
push
fidiv
adc
ja
stc
xor
stc
ficom
xchg
mov
xlat
or
aas
sbb
dec
in
mov
inc
adc
and
mov
push
cmp
dec
lahf
out
pop
or
jmp
pushf
mov
les
sub
jp
mov
push
or
push
imul
shl
das
fidiv
xor
add
inc
popa
dec
test
jecxz
fild
mov
into
outs
push
or
jno
sbb
sbb
push
add
push
jo
rol
out
push
inc
and
jmp
stos
jmp
out
cmps
iret
cmps
das
mov
addr16
mov
adc
out
jge
mov
pop
inc
daa
cwde
out
adc
cmp
dec
arpl
std
cs
cli
dec
jg
pop
mov
icebp
or
stos
or
xchg
sub
std
mov
or
pop
test
cmp
dec
push
add
fcmove
daa
test
mov
out
adc
cmps
cmp
ins
mov
mov
imul
enter
pushf
aad
ds
ds
push
or
inc
repnz
dec
pop
js
iret
mov
ss
dec
out
xlat
loopne
fidiv
push
rcr
and
stos
jle
mov
scas
jns
outs
in
lods
mov
movs
push
adc
pusha
cmp
stos
dec
call
pop
adc
fbstp
cdq
push
inc
popf
jmp
fst
inc
sub
adc
push
mov
ds
sub
add
lods
dec
lods
cld
jmp
loop
shl
xchg
inc
imul
dec
inc
ins
pop
imul
outs
scas
ins
test
div
pop
cld
mov
dec
fdiv
sub
lods
mov
cmp
ds
mov
stos
xchg
div
push
mul
or
push
jp
lock
cmovns
jle
push
into
ret
add
ds
int
xor
lock
jl
movs
ss
or
(bad)
jb
retf
setb
or
pmaxsw
sbb
dec
ficom
push
and
adc
ror
mov
lock
test
lds
jl
sub
cld
add
or
add
out
in
xor
movs
sub
cmp
xchg
dec
push
inc
dec
shl
stc
fistp
adc
test
adc
adc
fs
sub
push
enter
out
xchg
mov
xlat
inc
(bad)
or
xchg
movs
ret
adc
or
pushf
mov
mov
leave
mov
pop
imul
std
dec
adc
ins
test
pop
pop
add
push
mov
jg
mov
push
sbb
mov
mov
inc
fmul
and
sbb
jne
sub
cmps
jno
mov
mov
add
mov
adc
pop
stos
lods
cdq
fcomp
test
popa
inc
sub
shl
pop
outs
or
(bad)
mov
hlt
jl
jb
and
xor
cmp
mov
scas
and
mov
mov
sbb
mov
push
mov
das
jl
sub
sbb
add
adc
sar
icebp
and
cmp
call
cwde
sbb
push
and
push
jl
stos
jae
sar
or
adc
mov
dec
call
(bad)
dec
(bad)
push
lock
mov
mov
in
cmps
mov
and
aas
or
xor
xchg
icebp
sub
adc
fimul
clc
jge
movs
pusha
out
pusha
jb
cmp
push
sbb
popf
add
repnz
xchg
jnp
sub
xchg
jne
mov
jle
inc
out
cwde
mov
mov
or
shr
xor
xchg
pop
rcr
dec
jmp
int3
bound
in
dec
add
sti
mov
loopne
dec
mov
lods
ror
adc
xor
jmp
or
in
add
or
mov
mul
mov
xchg
dec
or
mov
mov
mov
fdivr
add
sti
outs
inc
scas
and
inc
(bad)
inc
fnstsw
cs
cmp
fsubr
inc
push
and
xor
add
loop
pusha
adc
jmp
nop
aas
pop
fsubr
js
dec
add
hlt
sbb
sbb
push
add
fnsave
push
add
hlt
rcr
je
imul
stc
dec
push
mov
sub
jno
add
xchg
adc
(bad)
test
es
into
icebp
shl
mov
lock
aad
stc
dec
or
inc
sub
xor
cmp
push
mov
test
cdq
icebp
sbb
(bad)
jo
cmps
jae
mov
dec
leave
pop
mov
or
add
mov
pushf
and
add
movs
stos
jmp
(bad)
shl
cdq
mov
mov
add
fldenv
and
imul
aad
movs
mov
aad
(bad)
sub
test
sub
and
lods
adc
xor
ja
or
adc
(bad)
dec
test
call
mov
xor
add
test
pop
movs
lock
das
add
inc
sbb
pop
sbb
leave
fwait
add
jmp
xchg
xor
jle
xchg
xor
hlt
xor
lahf
cld
mov
mov
xor
and
lods
cmp
ins
and
sub
leave
in
xor
jmp
adc
xor
add
and
lods
jl
xchg
shl
daa
fimul
dec
cmp
dec
xor
popa
add
mov
test
ins
or
dec
ins
jbe
cmps
lea
push
push
imul
and
dec
popa
mov
push
pop
into
loop
data16
ret
cmp
push
movs
xor
jmp
push
fnstenv
sahf
out
lods
es
(bad)
jmp
pop
pop
sti
ss
bnd
ss
push
shr
xchg
mov
movs
out
dec
lds
mov
inc
int
daa
in
mov
leave
mov
ins
outs
addr16
pop
test
mov
jb
ins
dec
cmp
aad
iret
out
xchg
bnd
push
push
cmp
pop
pushf
aad
mov
xchg
leave
stos
xchg
and
out
dec
lock
rol
xor
cmps
sahf
jp
lods
shl
mov
iret
inc
xchg
fwait
jne
cwde
fsub
pop
mov
jmp
push
dec
jle
pop
and
lods
inc
jo
lods
inc
in
dec
ins
loope
xchg
mul
ficom
ss
cdq
xchg
stos
lahf
pop
ja
out
xchg
inc
std
mov
inc
pusha
push
imul
and
shl
pusha
out
bound
jmp
xor
(bad)
cmp
adc
inc
jb
cmp
dec
cli
cmp
jmp
dec
test
mov
int
sar
nop
icebp
pop
inc
or
xchg
(bad)
add
iret
mov
pushf
pop
dec
je
inc
ficomp
push
sbb
pop
test
ins
daa
lock
les
sbb
xlat
lods
mov
fwait
xor
add
push
(bad)
aas
fwait
loopne
jo
fcmovu
push
imul
xchg
push
loope
frstor
mov
xchg
pop
pop
ds
call
in
push
dec
xchg
xchg
sbb
pusha
das
test
popf
or
jle
daa
dec
cmp
leave
pop
mov
inc
xchg
dec
retf
outs
lods
and
xchg
(bad)
movs
jmp
std
or
dec
fnsave
push
stos
inc
icebp
shl
out
or
ja
mov
cmp
shl
mov
in
popf
stos
fdiv
fwait
bswap
dec
and
push
adc
lds
call
dec
adc
aam
or
push
out
or
jge
xor
mov
add
dec
es
es
enter
in
cli
fisttp
or
cld
movs
push
clc
aam
aaa
jg
lahf
add
mov
and
xor
lds
imul
add
and
cmp
adc
sbb
dec
out
dec
add
cmp
pop
add
(bad)
cmp
sbb
xor
cvtdq2ps
mov
adc
jno
sbb
push
into
and
sub
adc
cmp
out
jmp
(bad)
pop
outs
lock
mov
fincstp
dec
add
mov
(bad)
dec
mov
sub
xchg
mov
mov
stc
add
jl
dec
xchg
mov
cli
aaa
and
adc
mov
xlat
add
mov
xlat
(bad)
dec
pop
xor
lods
push
mov
sti
ja
add
sbb
shl
xor
vorpd
imul
int3
out
inc
push
pop
test
or
ret
mov
cwde
pop
lods
sbb
or
cmps
dec
inc
add
pop
pop
dec
call
shr
or
in
retf
fs
add
or
lock
addr16
push
dec
cdq
repnz
or
cs
shr
adc
pop
and
sub
xchg
mov
out
icebp
(bad)
pop
push
outs
jg
(bad)
fnstenv
mov
dec
sub
mov
and
loop
sub
out
push
outs
xchg
icebp
sahf
ja
mov
(bad)
push
jns
sub
leave
cmp
fld
jge
xor
inc
push
mov
xchg
xchg
cmp
jl
enter
stos
fs
xor
mov
(bad)
add
xchg
and
in
mov
out
hlt
xor
js
cmp
adc
retf
mul
stos
and
test
pusha
(bad)
ins
nop
stos
cmps
sub
dec
clc
das
icebp
retf
repnz
pop
xor
fwait
push
or
adc
int3
mov
jge
leave
stc
xor
sahf
mov
xor
(bad)
mov
scas
push
fisubr
mov
xor
jmp
aaa
pop
bound
out
mov
pop
ret
aas
cmp
mov
xlat
xor
fiadd
mov
das
mov
pop
loope
jg
xor
inc
out
fdiv
jne
cmp
cmp
lods
lea
fwait
mov
adc
sbb
dec
dec
out
and
mov
add
out
cmps
dec
push
and
cmp
or
push
bound
(bad)
adc
outs
xor
sbb
push
gs
jg
(bad)
lods
push
pushf
(bad)
pop
not
xor
loopne
cli
imul
mov
add
xchg
(bad)
push
fwait
pop
cmps
jmp
sbb
adc
loop
(bad)
(bad)
ss
cdq
push
mov
inc
sbb
jg
jne
lock
stos
jecxz
repnz
frstpm(287
jno
inc
mov
fdivr
cld
sti
imul
mov
(bad)
add
push
push
fs
mov
and
or
dec
scas
imul
mov
ret
mov
outs
xor
hlt
pop
cmp
pop
clc
jecxz
fld
aam
push
cmp
adc
mov
(bad)
jg
repnz
in
cs
cmp
(bad)
scas
xor
mov
add
xor
push
add
inc
and
pushf
std
ret
lods
nop
(bad)
push
xchg
mov
adc
cmps
pop
or
fcomp
aas
jg
sbb
push
pop
inc
xor
into
leave
or
cmp
jbe
jbe
jne
retf
int
jno
mov
jo
lds
(bad)
or
mov
cld
cli
inc
dec
and
int3
repnz
pop
rcl
cmp
or
inc
mov
jae
data16
sub
cmp
and
aam
ja
sbb
es
cmp
mov
fcompp
in
popa
mov
sbb
and
dec
(bad)
xor
push
pop
aas
enter
adc
sbb
sub
push
adc
std
loop
lods
stos
shl
jge
or
push
jne
je
inc
push
fwait
add
ja
test
movs
cmps
movs
and
dec
sbb
ret
mov
les
and
cmp
mov
mov
jno
push
push
frstor
in
repnz
leave
xor
mov
mov
xchg
(bad)
in
fisttp
movs
neg
push
xor
push
(bad)
cmc
data16
stos
adc
in
xor
dec
dec
jge
xor
pop
jecxz
push
xor
call
mov
movs
xchg
call
push
movs
dec
fstp
cmp
cmp
mov
scas
dec
cdq
push
sbb
inc
dec
nop
arpl
push
sahf
xchg
out
pop
jb
adc
push
cmp
pop
jbe
fcomp
mov
mov
inc
pop
jl
xor
aad
int
cmovae
pop
xor
loope
pop
stc
xor
ja
(bad)
cmp
fstp
fsub
movs
dec
xchg
ss
mov
sub
mov
out
in
es
xchg
dec
into
nop
movs
fisubr
adc
nop
and
mov
pop
int
fstp
ja
push
mov
dec
fbld
(bad)
jb
mov
jg
sub
inc
push
jae
mov
ret
pop
out
fucomp
sub
cmps
push
jle
pop
or
push
dec
gs
icebp
mov
dec
popf
ret
xor
and
out
imul
push
inc
fisttp
popf
aaa
cdq
adc
xchg
aam
adc
aam
mov
test
mov
push
in
stos
xchg
popa
push
sar
pop
out
clc
xchg
cmp
inc
fcmovne
das
movs
ret
mov
adc
jmp
stc
pop
xchg
inc
sub
adc
pop
outs
push
mov
mov
hlt
push
fmulp
adc
add
xchg
scas
xor
mov
mov
stos
ja
dec
and
inc
dec
ror
push
ret
adc
fld
mov
lock
xor
sti
xchg
pop
mov
lahf
lahf
pop
std
cdq
pop
out
test
mov
or
fld
cs
xchg
jmp
xor
xchg
and
or
fisubr
cwde
pop
fcom
shr
xchg
ins
add
stos
inc
call
emms
xchg
scas
mov
dec
into
mov
mov
enter
pop
dec
mov
retf
mov
xor
shr
jmp
pop
(bad)
aad
fwait
jmp
fstp
aad
or
and
test
inc
xchg
fs
jecxz
fsub
(bad)
xor
sbb
pop
push
mov
popf
dec
shr
add
or
push
(bad)
sub
cld
adc
ret
adc
xchg
xchg
mov
pop
xor
test
sahf
or
pop
sbb
or
stos
test
bound
and
inc
popa
test
mov
adc
repnz
xchg
push
mov
hlt
aaa
in
adc
mov
scas
mov
sbb
test
in
popf
ins
fdiv
push
daa
js
sub
and
fldcw
add
cmp
add
dec
fcomp
dec
dec
mov
dec
sahf
add
xor
mov
mov
sti
pop
je
call
pop
icebp
adc
cmp
xchg
sbb
(bad)
std
jg
mov
jbe
lahf
or
sbb
pop
add
test
rcl
and
data16
sub
loop
sub
and
ss
inc
movs
cwde
nop
mov
(bad)
push
jbe
ja
cmp
mov
sbb
push
mov
pop
popa
sar
jmp
aam
jmp
(bad)
sub
stos
inc
(bad)
cmps
(bad)
jmp
out
xchg
cmp
repnz
adc
ja
mov
leave
fld
dec
lds
mov
enter
popf
or
loop
cmps
cmc
mov
rol
rcl
js
call
cmp
fsubr
mov
in
inc
inc
cmc
lahf
add
dec
repnz
mov
xor
xor
mov
dec
cmps
daa
fstp
sti
movs
mov
out
test
loope
sub
jns
jne
mov
(bad)
out
adc
jmp
shl
loope
or
movs
adc
retf
outs
mov
test
and
scas
aam
push
xchg
inc
or
push
shr
push
push
int
rcl
pop
pop
iret
ret
pusha
push
mov
adc
adc
(bad)
ins
jg
ret
arpl
mov
push
(bad)
dec
or
aaa
clc
inc
sar
cld
xchg
test
(bad)
jmp
ja
push
inc
(bad)
aad
rcl
dec
pop
out
xchg
imul
mov
and
and
cmps
(bad)
(bad)
xchg
pop
hlt
ins
arpl
ret
cmp
(bad)
fwait
push
jbe
imul
xor
cmps
push
xor
xchg
ins
mov
jmp
inc
jno
scas
aas
push
xchg
mov
mov
push
jns
dec
mov
xchg
cmp
pop
sub
jbe
adc
dec
mov
push
js
int3
(bad)
repz
pop
mov
or
sbb
sar
in
or
addr16
mov
mov
lods
xlat
or
ret
xor
jle
xor
rcr
or
pop
sbb
lahf
fstp
push
(bad)
mov
jmp
adc
xor
xor
jne
dec
jle
mov
mov
std
cmc
fisub
imul
leave
inc
cmp
xchg
pop
enter
stos
jno
jno
aam
int3
ret
mov
mov
pushf
aas
cmps
xchg
xor
ins
gs
mov
jmp
cmp
test
lods
jbe
sbb
fdivr
mov
or
xor
ja
dec
loope
leave
in
mov
mov
add
mul
jmp
test
mov
int3
push
not
js
scas
mov
lods
jp
inc
mov
mov
int
jle
sbb
mov
cmp
jle
jb
fwait
int3
inc
jbe
mov
push
js
cld
and
cmp
stos
adc
xor
add
xchg
xor
push
das
dec
push
mov
cmp
push
in
dec
pop
sahf
dec
div
dec
inc
add
xor
xchg
mov
push
mov
repnz
jle
cld
or
jl
sub
push
std
(bad)
and
das
add
jp
mov
int3
(bad)
jle
add
xchg
mov
sar
adc
dec
cmp
jle
dec
or
jnp
rol
shl
mov
scas
mov
mov
cld
push
xor
jmp
dec
mov
inc
out
mov
mov
jecxz
jecxz
test
int
jb
nop
jmp
xor
xor
adc
test
or
lea
add
push
dec
pushf
pop
out
sar
es
pop
mov
cmp
xchg
adc
mov
adc
xchg
jmp
inc
pop
jne
call
or
pushf
(bad)
fnstenv
shr
push
sbb
aas
jmp
adc
movs
iret
sub
dec
xchg
fidiv
lods
inc
jnp
aad
adc
lds
mov
mov
lahf
ja
jge
sbb
dec
loop
pop
pop
mov
jnp
lock
cmp
cmp
mov
dec
mov
ds
add
les
xor
dec
and
or
jb
cmp
(bad)
loop
adc
and
stos
retf
cdq
clc
(bad)
mov
call
rcl
(bad)
adc
daa
sbb
jmp
(bad)
in
xchg
or
sti
cmps
icebp
mov
xor
pop
xlat
mov
mov
imul
fcomi
cdq
xchg
bnd
imul
aad
lahf
jnp
jecxz
cmp
jg
jl
sub
sbb
pop
jmp
sub
loopne
dec
cmp
jnp
jl
add
mov
pop
out
mov
aam
or
pop
push
inc
jo
out
js
lds
jmp
outs
jbe
xchg
cmps
mov
sub
data16
sbb
dec
mov
(bad)
mov
add
movs
xor
(bad)
pop
push
pop
pop
xor
(bad)
push
dec
ss
into
jns
or
pusha
pop
out
test
add
add
xchg
mov
das
mov
cli
inc
cwde
mov
jb
popf
adc
fsub
cdq
xchg
push
jb
jecxz
inc
ins
pop
pop
inc
cmps
xor
add
sub
and
jno
push
xor
fwait
test
test
ins
je
iret
adc
cmp
pusha
icebp
fsub
add
mov
sbb
mov
shl
pop
push
fstp
outs
aad
sub
int
xor
sub
or
inc
jns
jmp
mov
pop
rcr
inc
ins
push
jle
sbb
stos
mov
mov
xchg
mov
ds
sub
sbb
mov
test
sbb
jb
lahf
jg
rcr
mov
add
dec
sub
movs
in
xor
xor
sahf
jmp
dec
bound
aas
sub
ror
adc
(bad)
cmp
xor
cmp
call
stc
mov
js
arpl
jmp
fld
cli
retf
jge
outs
dec
ret
jg
mov
pop
(bad)
arpl
cmc
dec
shl
lods
and
inc
xchg
mov
sub
movs
jae
fimul
ficomp
loopne
xchg
ins
sbb
enter
or
test
out
fnclex
ds
ins
jle
jl
xlat
sbb
mov
cmp
push
(bad)
and
nop
adc
pop
pop
rcr
sub
shl
lahf
mov
or
adc
into
jle
out
call
pusha
pop
ins
lods
iret
test
imul
add
or
pop
out
and
addr16
fisttp
inc
push
and
ds
in
ins
jge
movs
sbb
push
out
sbb
pop
(bad)
scas
push
fistp
jecxz
cmp
pop
or
mov
popf
xchg
outs
(bad)
icebp
mov
xor
pushf
call
dec
inc
test
arpl
or
es
or
rcl
stc
daa
push
ret
stos
mov
(bad)
pop
in
sbb
push
ins
fiadd
cmp
test
rcl
repz
(bad)
les
ins
bound
dec
lods
cmp
push
jno
xor
mov
push
dec
out
xchg
into
rcl
fstp
scas
jmp
push
movs
pop
mov
mov
dec
scas
int3
dec
mov
or
loopne
int3
cmps
dec
pop
bound
aam
sti
lahf
retf
dec
ficom
nop
xor
outs
scas
push
mov
movs
pop
in
mov
push
cmp
cwde
inc
mov
out
scas
(bad)
pop
jmp
dec
sub
(bad)
pop
popa
sub
push
into
(bad)
jno
retf
mov
ins
dec
leave
jae
xor
(bad)
neg
ds
add
and
adc
mov
dec
sub
imul
hlt
mov
dec
add
clc
mov
pop
rcr
cmp
inc
fdivr
lock
movs
js
and
jo
fist
rcr
in
popa
mov
pop
push
lahf
daa
jbe
in
sub
push
adc
add
fst
pushf
jp
data16
pop
das
dec
xlat
mov
and
inc
pop
call
xchg
ret
adc
lahf
mov
adc
adc
mov
xlat
mul
dec
push
mov
mov
fwait
rol
inc
jb
and
sbb
mov
cmp
adc
in
jmp
mov
scas
int3
cmp
fisttp
cmp
mov
sti
adc
sub
jecxz
mov
push
inc
mov
out
mov
or
jae
rcr
xor
lahf
cmp
les
data16
jo
xchg
js
nop
not
out
adc
not
xlat
pusha
das
popf
ret
dec
lock
xlat
mov
inc
push
fwait
sbb
cdq
rcl
stos
(bad)
cmp
aas
jl
dec
push
dec
jg
push
int
outs
cmps
shr
and
pop
call
mov
xor
fnstsw
nop
xchg
sbb
outs
leave
ja
ins
lahf
cmp
pop
sti
xor
and
pop
push
ret
push
xchg
jno
gs
pop
loopne
jmp
jbe
jo
fs
repnz
in
cs
add
mov
inc
or
jo
pop
out
xor
mov
pop
icebp
pop
sar
popa
lahf
push
pop
movs
xchg
retf
or
repnz
adc
addr16
dec
cmps
fs
jno
adc
repz
mov
mov
xlat
rcr
dec
test
icebp
fxam
cs
jae
mov
dec
mov
stos
dec
jecxz
and
add
adc
std
fwait
xlat
popf
sbb
pop
loopne
mov
lods
cld
test
xchg
mov
xor
test
test
sbb
mov
cmp
or
sbb
inc
fsubr
jg
or
movs
add
pop
data16
adc
scas
hlt
add
lds
jno
leave
sub
sbb
pop
outs
ins
in
call
outs
ficomp
pop
fisub
int3
mov
mov
sbb
ds
mov
xor
xchg
jo
ss
sub
mov
daa
add
mov
loopne
leave
push
pop
jp
push
(bad)
fxch
adc
stos
retf
mov
aas
popa
jne
mov
pop
push
push
daa
iret
push
std
or
sbb
xor
sub
fisttp
rcl
in
xor
movs
add
or
call
cmps
mov
xchg
cs
pusha
mov
push
or
retf
pop
push
dec
stos
mov
lea
sbb
dec
popa
mov
int
cmp
dec
mov
fs
pop
(bad)
and
cmp
pop
jbe
fisubr
sbb
push
push
inc
inc
push
xchg
cs
popf
or
das
stos
mov
add
rcl
popf
push
mov
call
push
mov
mov
movs
sbb
in
into
daa
sbb
push
add
aad
int
pop
xchg
mov
call
stos
mov
out
adc
pop
inc
push
mov
fist
fstp
pop
shr
xchg
pop
jmp
fistp
fldcw
cmp
aaa
ret
jp
xchg
and
les
mov
dec
push
cmp
fs
hlt
or
cmc
sbb
ds
mov
shl
ins
addr16
mov
ror
jl
bound
sbb
pop
sahf
bound
jmp
pushf
jno
or
cmp
pop
push
dec
add
pop
stos
je
or
sub
(bad)
pop
into
jp
xchg
retf
retf
scas
dec
mov
mov
lods
and
jno
xchg
push
push
inc
fmulp
jo
ja
mov
out
pop
bound
push
out
inc
push
xor
mov
sub
out
shl
das
sub
push
test
pop
movs
adc
jbe
pushf
dec
add
inc
xchg
retf
and
test
xchg
pop
mov
loopne
bound
dec
aad
mov
je
mov
lahf
stos
mov
ret
jg
mov
sti
pop
dec
hlt
popa
push
mov
push
add
xchg
push
mov
mov
mov
dec
lods
xor
das
or
retf
cmps
call
loope
mov
nop
loopne
ds
stos
mov
fs
lods
mov
jo
cld
push
pop
cdq
push
dec
ret
cs
mov
cmp
jmp
mov
sbb
mov
daa
inc
dec
imul
jle
lock
xor
js
add
(bad)
and
dec
cdq
add
xchg
mov
dec
test
jnp
outs
and
mov
cli
ja
sub
imul
jl
pop
mov
jo
out
shr
mov
or
ins
add
add
lea
and
ins
out
dec
sub
push
(bad)
inc
scas
xor
mov
mov
fiadd
mov
mul
imul
repz
cld
lods
sbb
sbb
pop
aad
repz
outs
jae
adc
pop
pop
scas
or
pop
sub
mov
cmp
hlt
ret
cmps
xor
mov
popf
push
pop
push
push
imul
sub
inc
cld
mov
scas
stos
ins
and
dec
jg
mov
rcl
push
mov
push
pop
imul
je
ss
cdq
sbb
lods
inc
cmp
push
and
xchg
adc
shl
mov
dec
nop
fistp
rcl
gs
cmp
hlt
aas
stc
jecxz
test
pop
aaa
inc
retf
call
fwait
jmp
mov
mov
and
daa
and
push
cli
pop
rcl
inc
push
sub
add
std
in
xchg
cli
push
dec
addr16
pop
sahf
leave
test
aaa
lahf
mul
or
dec
loopne
nop
mov
fbstp
mov
xor
xchg
imul
call
shl
mov
mov
in
sub
jp
fist
mov
iret
xchg
mov
push
xor
cld
pop
shl
sub
lods
or
frstor
daa
add
sbb
lods
movs
(bad)
push
pop
lock
addr16
sbb
cdq
enter
xchg
stos
mov
sbb
fnstenv
pop
shl
popa
sbb
pop
imul
popa
cmp
cmp
(bad)
jno
aas
fst
ja
lahf
mov
in
jge
sbb
xchg
leave
scas
mov
add
sbb
outs
cmc
(bad)
xchg
mov
xor
sti
test
push
stc
inc
pop
push
ret
mov
mov
rcr
and
inc
pop
call
dec
test
and
cmp
and
test
fsubp
pop
inc
sub
push
sbb
lock
call
xchg
cmps
mov
fs
shld
sub
jb
fsubp
xor
mov
and
scas
or
mov
inc
and
fstp
aam
inc
pop
xchg
push
push
xchg
sbb
sbb
adc
sahf
es
(bad)
lock
cmp
retf
das
adc
pop
scas
mov
pop
fidivr
xor
call
jo
sub
jno
jle
daa
gs
xor
dec
shl
int
mov
stc
jmp
push
arpl
(bad)
ss
fstp
xchg
and
stos
mov
clc
adc
adc
aaa
push
jmp
xor
xchg
loope
jmp
fwait
dec
mov
retf
xor
xchg
dec
daa
inc
out
xor
add
add
mov
dec
pusha
sub
sar
add
pop
push
test
stc
inc
sbb
fist
clc
stos
dec
add
inc
in
xchg
cmc
push
aad
inc
into
popa
inc
mov
ss
jecxz
dec
lds
pop
sbb
xchg
jmp
cmp
sbb
pop
fsub
vcvtsi2ss
fist
cmp
ins
int3
aad
popa
mov
mov
jle
outs
and
aam
mov
imul
lock
xor
xor
push
jmp
mov
xor
push
lods
push
pop
ss
push
ja
shr
cwde
sub
inc
out
lock
and
pop
shl
mov
pop
add
inc
mov
iret
cmp
pusha
aas
mov
sub
rcr
(bad)
loop
imul
cmp
mov
lea
push
xlat
js
in
pop
ret
sub
cmp
clc
mov
test
pusha
out
sbb
mov
push
dec
mov
mov
pop
mov
dec
clc
enter
ja
test
xor
mov
adc
(bad)
adc
adc
pcmpeqw
test
out
adc
pop
add
call
push
mov
cmp
and
sbb
test
aam
pop
adc
je
ds
push
lea
ret
pop
mov
mov
bound
mov
test
pop
scas
push
push
shl
mov
ins
xchg
or
imul
mov
fst
pop
adc
sti
push
and
popa
xchg
inc
xlat
sbb
mov
shl
jp
and
inc
lods
mov
xor
mov
cld
cdq
inc
nop
sbb
jmp
lahf
mov
mov
sahf
adc
ret
mov
movs
pop
std
jecxz
rcl
in
popa
inc
xor
mov
jg
(bad)
cdq
jmp
pop
rcl
mov
fidiv
mov
mov
pop
in
out
or
stos
cdq
loop
ror
dec
jno
popa
pop
(bad)
leave
jo
in
cli
jne
add
lds
iret
call
adc
(bad)
fnstsw
adc
inc
adc
or
sub
dec
lds
jbe
and
xchg
mov
and
int
or
lahf
jbe
sub
adc
pushf
cmp
ror
jecxz
rol
stos
dec
nop
movs
fwait
test
adc
xchg
repz
(bad)
sub
inc
stos
inc
jle
mov
(bad)
xchg
iret
retf
adc
ret
push
gs
test
jmp
ss
dec
jle
xor
inc
pop
xchg
xor
sub
mov
cdq
int3
aaa
push
scas
push
lock
xchg
sub
push
xchg
das
fucomi
lar
push
mov
retf
hlt
fwait
cmp
rol
pop
test
pop
scas
fbld
mov
inc
push
ds
xchg
mov
pusha
inc
inc
sar
stos
ror
push
push
ins
ds
ins
les
push
hlt
fdivr
shr
or
and
outs
xor
(bad)
sbb
push
or
cmc
push
test
inc
je
jmp
dec
sub
rol
sbb
push
and
vpmullw
cmp
adc
mov
loope
pop
lods
push
iret
mov
setp
jecxz
mov
movs
mov
xchg
mov
add
add
cwde
pop
xchg
mov
cwde
inc
fadd
xor
inc
xchg
cmp
es
mov
das
lahf
push
mov
cmp
jge
sbb
je
cdq
popf
mov
mov
dec
dec
sub
bound
or
lods
mov
inc
aad
mov
inc
outs
sbb
or
fucomi
and
xchg
adc
mov
sbb
pop
mov
cdq
ds
cmp
ins
int
adc
mov
jbe
jno
ror
cdq
ins
mov
(bad)
xlat
xor
jnp
pop
js
jmp
mov
pusha
and
pop
inc
test
stos
sbb
jno
(bad)
dec
pusha
fcom
(bad)
lds
xchg
icebp
adc
mov
sub
pop
cli
or
mov
fldenv
or
enter
push
out
jo
gs
cmp
xor
popa
push
pop
xchg
cmc
rol
in
adc
mov
and
cwde
xlat
pop
aad
hlt
lock
fisttp
jno
mov
retf
je
mov
popf
mov
dec
mov
mov
out
int3
(bad)
imul
push
shr
pusha
adc
add
jg
ret
stos
add
xchg
test
jmp
mov
je
sbb
jmp
xor
cmp
mov
retf
mov
retf
adc
cmc
clc
jbe
rcr
cli
sub
fistp
mul
lock
xor
shl
add
lock
movs
ret
mov
call
movs
fbld
xchg
lods
sub
pop
push
pop
jl
fbld
sbb
add
xchg
push
adc
pop
cmc
push
and
jb
or
mov
push
daa
sbb
sahf
sub
rcl
loopne
mul
(bad)
in
adc
arpl
imul
pop
push
aaa
jge
nop
sub
lea
enter
out
adc
xchg
fistp
xor
out
jb
in
ins
cmps
movs
out
and
fs
mul
imul
mov
pushf
or
cmp
add
int
and
add
js
adc
jo
inc
pop
adc
pop
push
jne
inc
sbb
aas
mov
cmc
ds
xlat
mov
test
cmc
cwde
pushf
rcr
add
xchg
dec
lock
daa
add
sub
mov
aad
jge
or
je
add
iret
jbe
rol
ds
and
xor
outs
mov
push
cmp
loope
retf
sub
pop
pop
jnp
add
jmp
loop
mov
mov
fs
push
ins
lea
stc
ja
jmp
xchg
sbb
outs
mov
test
fwait
ds
mov
jg
es
mov
aam
lods
xor
scas
sar
cwde
repz
arpl
and
js
loope
pop
inc
inc
out
dec
dec
sti
mov
pop
fisttp
sub
or
les
jg
test
fisttp
out
or
mov
es
jmp
pushf
mov
lods
dec
sar
fadd
gs
xor
pop
and
inc
push
aam
dec
cli
and
ss
loope
jg
nop
and
sbb
fwait
cmp
inc
jl
cs
xor
sub
sti
sub
mov
bound
cmp
pop
xor
aas
jle
call
push
adc
mov
loop
push
mov
mov
dec
in
sbb
popf
jb
enter
push
jg
jo
or
mov
pop
or
out
pop
xchg
cmps
test
pop
cdq
pop
in
lods
out
cli
xor
jae
cdq
sbb
cmp
xchg
push
jns
aam
hlt
popf
push
and
out
es
xchg
mov
sbb
retf
addr16
inc
mov
fdiv
push
jmp
sbb
fcmovnu
mov
sub
or
dec
sbb
dec
movs
fsubp
fsubr
call
(bad)
ins
in
(bad)
repnz
fidiv
mov
stos
xor
push
mov
cwde
cmc
fsub
loopne
gs
rcr
sub
pop
jbe
adc
loopne
jb
sub
sub
jge
dec
fst
or
leave
into
aas
xchg
dec
in
dec
mov
ins
dec
xchg
and
adc
imul
mov
jnp
fst
in
and
imul
ins
dec
(bad)
jae
cs
pusha
mov
outs
jmp
add
loopne
retf
cmp
rcr
jl
lds
mov
xchg
scas
lods
popa
movs
pop
iret
mov
inc
iret
das
jg
dec
(bad)
xchg
frstor
mov
outs
push
inc
pop
mov
inc
xor
lods
xchg
mov
jp
test
stos
aam
dec
push
in
ss
test
inc
push
xor
call
in
repz
xor
cwde
ds
mov
in
and
(bad)
xor
dec
fsubr
test
out
call
adc
ret
or
or
jge
or
icebp
in
mov
mov
dec
fstp
mov
(bad)
or
add
adc
fst
aas
sbb
mov
jg
out
cmp
inc
sub
fcmovb
scas
adc
neg
or
lahf
push
pop
int
xlat
sbb
dec
sahf
jg
repnz
and
sub
lods
rol
xchg
xor
inc
enter
push
pop
out
mov
cmp
std
std
cmp
test
hlt
add
adc
inc
push
js
cmp
pop
(bad)
div
dec
jbe
mov
fld
ja
ror
pop
push
pop
mov
ss
fistp
cmc
out
mov
out
fistp
sahf
mov
shl
mov
hlt
lds
xor
ss
adc
xor
shl
scas
iret
pop
mov
lds
shl
out
dec
xor
js
addr16
and
test
mov
sub
sbb
pop
loope
push
js
jo
cli
pop
adc
out
je
addr16
fidivr
or
mov
and
sahf
std
daa
sub
rcr
push
or
sbb
shr
add
adc
aam
adc
cli
push
or
pop
cmp
pop
push
es
stos
adc
call
and
inc
mov
jp
call
int3
lods
adc
out
and
jbe
add
sub
mov
int
rcr
sub
sahf
movs
and
pop
stos
sbb
rol
addr16
leave
mov
jb
rcr
xor
jg
cs
push
ficomp
in
mov
jae
dec
lds
push
pop
ret
shl
cmp
sbb
test
leave
test
or
cmps
mov
fcom
add
mov
imul
mov
fcomi
push
mov
pop
fist
fld
adc
lea
and
xor
mov
pop
pushf
gs
and
mov
dec
cdq
mov
in
pusha
ins
adc
xor
sbb
jbe
imul
stc
ret
mov
adc
fs
rcr
xchg
pushf
ins
shl
xor
mov
sbb
dec
shrd
pop
sbb
icebp
ja
(bad)
pop
cmp
(bad)
js
fistp
adc
lods
ret
fisttp
pop
or
fcmovnb
jne
cmp
shr
pop
push
sub
sahf
cli
adc
std
add
test
aam
dec
adc
(bad)
loopne
xchg
mov
mov
popf
inc
or
sub
push
arpl
push
pop
pop
push
int3
jae
lods
mov
adc
jno
ds
out
or
and
out
cmp
cmp
inc
pop
push
push
adc
sub
ret
test
cmp
sub
add
mov
adc
adc
dec
shl
cmp
movs
test
(bad)
jnp
jbe
imul
xor
rol
mov
js
push
loopne
or
fadd
pop
push
sub
push
movs
inc
pop
xchg
int
mov
rcr
fidiv
cmc
loopne
das
pop
mov
sbb
mov
cmp
addr16
jp
jns
shl
add
jge
and
in
jo
add
xor
adc
popa
inc
or
call
ins
jnp
or
inc
out
mov
out
ja
leave
sub
add
lds
xchg
add
fbld
ja
call
repz
mov
pop
je
mov
and
stos
jecxz
jl
popa
mov
mov
stc
mov
pop
fld
fs
jbe
mov
or
stos
mov
jmp
adc
imul
pop
jecxz
addr16
dec
stos
outs
cmp
leave
scas
rcl
retf
cmps
fs
cdq
adc
pop
lahf
sbb
idiv
xchg
cdq
jnp
ret
xchg
jne
imul
test
rol
cwde
frstpm(287
fnsave
ins
push
fcmovnb
pop
fdivr
sub
xor
inc
push
mov
mov
je
stc
mov
or
data16
(bad)
and
arpl
in
xchg
fst
(bad)
jae
arpl
cmp
fiadd
add
add
movs
out
fisubr
mov
ja
repz
mov
(bad)
lds
div
jmp
adc
push
test
mov
rcl
xlat
scas
jmp
test
(bad)
cwde
daa
jp
cwde
mov
neg
rol
movs
push
frstor
xor
cmp
or
rcr
bound
push
pop
adc
cmp
push
js
xor
test
jo
xchg
jg
sub
popa
pop
mov
icebp
mov
leave
cli
jb
loopne
or
add
jne
sub
dec
push
dec
cmps
fsub
lods
and
mov
mov
xor
call
inc
mov
jno
sub
sub
sti
adc
pop
out
mov
fwait
pop
mov
mov
cmp
pop
out
jne
lahf
test
push
cli
mov
scas
test
ja
test
(bad)
sub
xor
shl
(bad)
retf
lahf
adc
out
or
hlt
and
out
add
out
mov
fidivr
add
cli
mov
dec
rcl
dec
gs
push
outs
ss
adc
add
cmps
test
jl
retf
xchg
das
fnstcw
sbb
lods
cld
mov
les
movs
sbb
xlat
popa
cld
dec
push
hlt
fcomp
mov
push
push
dec
das
pop
or
movs
cmc
pop
(bad)
xchg
xchg
pop
out
inc
cwde
inc
inc
sti
push
and
inc
stos
gs
or
mov
push
mov
leave
or
das
xchg
outs
push
in
add
mov
jmp
test
scas
fadd
sbb
aad
cmp
aad
mov
mov
dec
push
xor
cs
xchg
add
lds
sar
and
inc
cmc
add
dec
jne
or
jmp
mov
dec
cwde
cmp
mov
xor
add
repnz
xchg
int
neg
or
dec
mov
fiadd
movs
out
mov
mov
cmp
jecxz
icebp
cmp
mov
stos
mov
inc
ficomp
add
fidivr
add
fadd
or
ja
add
scas
stc
(bad)
lds
adc
sub
mov
lock
mov
xchg
mov
repnz
fwait
clc
adc
jp
aaa
inc
rep
daa
repnz
inc
ds
inc
cwde
mov
int3
sbb
pop
or
leave
and
pop
out
pop
inc
pop
cmp
call
push
adc
push
pop
(bad)
pop
repnz
fs
aam
cmp
sbb
dec
dec
adc
xchg
mov
inc
stos
(bad)
cs
push
inc
push
xor
(bad)
fstp
lahf
push
adc
push
outs
lods
dec
mov
(bad)
frstor
jp
sub
loop
in
xor
sub
inc
sub
jbe
nop
lods
fbstp
and
push
fdiv
inc
ffree
rcl
dec
inc
outs
(bad)
(bad)
ret
xor
mov
stc
ret
inc
popf
mov
mov
mov
cmps
(bad)
aad
jb
add
enter
jle
jae
jno
int
fcom
and
in
mov
shl
ds
or
loope
nop
loope
sbb
sahf
(bad)
xlat
sub
and
ja
mov
or
sub
test
cmp
jmp
jns
test
out
leave
stos
pop
sti
push
ja
push
in
dec
movs
cdq
ret
xchg
jnp
loop
push
sbb
lds
inc
clc
shl
ficom
mov
test
add
in
mov
jmp
mov
gs
lds
out
cld
xor
ds
(bad)
cmp
jecxz
(bad)
fcomp
test
in
pusha
ja
mov
mov
or
mov
inc
mov
int3
xchg
jecxz
inc
xchg
xchg
int3
jo
es
sbb
sar
cmc
xchg
daa
push
scas
addr16
test
inc
mov
shl
cmp
or
xchg
xor
(bad)
js
mov
add
bound
pop
adc
lods
pop
loope
pop
adc
(bad)
cmp
outs
inc
aaa
or
add
outs
mov
int
adc
(bad)
jno
jl
pop
imul
mov
call
jle
add
stc
gs
pop
(bad)
pusha
adc
dec
xchg
pushf
add
imul
xchg
pop
scas
mov
xor
popf
das
dec
scas
xlat
inc
push
cmp
in
(bad)
repnz
cwde
(bad)
mov
mov
not
xor
inc
fcomp
clc
popf
jecxz
lock
xchg
or
hlt
ret
test
mov
es
(bad)
out
jae
lods
call
dec
pop
aas
in
test
mov
imul
xchg
test
push
mov
scas
aaa
push
sub
ins
retf
add
jmp
fdiv
dec
xchg
lock
in
push
xchg
in
ins
mov
jge
xor
cmps
icebp
xor
test
jno
mov
sbb
push
(bad)
(bad)
imul
cmps
sub
icebp
lock
addr16
jmp
mov
in
leave
jae
adc
push
adc
fs
mov
push
sbb
retf
xchg
(bad)
daa
mov
pop
sbb
sub
sbb
popa
scas
lock
push
dec
xchg
leave
aaa
push
(bad)
xor
add
sbb
movs
push
call
adc
mov
cmps
mov
xchg
sbb
arpl
or
es
scas
call
adc
pop
push
or
mov
or
cmp
sahf
jbe
fistp
adc
call
dec
arpl
aam
sbb
pop
cli
mov
sub
pop
pop
jle
xchg
nop
enter
xchg
iret
jo
or
icebp
xor
retf
int
xor
sar
cdq
retf
outs
fwait
rol
bound
ss
fdivr
sub
dec
push
jmp
xchg
stos
dec
or
push
pusha
adc
dec
jno
sub
push
add
adc
mov
mov
int3
adc
mov
xor
jle
mov
iret
imul
in
arpl
pcmpeqw
push
mov
loope
pop
pusha
pop
daa
cmp
xchg
jge
in
imul
xchg
cmp
pop
frstor
push
ret
xchg
push
mov
ds
ins
cmp
xchg
aaa
jg
or
out
push
aad
pop
xor
fnstenv
or
shl
outs
cmp
push
or
xchg
xchg
mov
jmp
cwde
jno
push
push
inc
iret
jl
mov
sar
popa
adc
int
stos
js
adc
or
sub
in
(bad)
cli
sub
lea
aad
stc
das
add
stos
(bad)
cmp
sbb
dec
cmc
xchg
iret
jnp
push
mov
add
imul
fsub
mov
dec
test
mov
sbb
test
inc
dec
adc
rol
loop
ficomp
test
and
pop
inc
jbe
adc
fmul
fmul
(bad)
mov
icebp
arpl
adc
shl
inc
js
adc
hlt
jle
sti
enter
jle
int3
push
sub
ret
lahf
imul
jge
mov
push
mov
xor
mov
pop
lods
or
pusha
in
add
ss
xor
lea
xchg
dec
shl
dec
mov
jo
sub
repnz
push
dec
lods
add
ss
addr16
stc
inc
dec
cdq
adc
pop
retf
pop
dec
jl
inc
inc
cli
dec
pop
push
push
in
xchg
pop
push
fwait
mov
sbb
fidiv
daa
movs
sub
test
sub
mov
mov
inc
mov
mov
mov
push
xchg
dec
xchg
movs
jg
loope
ret
lahf
jmp
dec
fiadd
mov
ret
sub
js
jnp
inc
retf
sbb
or
mov
dec
cmps
inc
mov
mov
imul
and
pop
aad
and
sub
inc
pop
xor
cli
lea
fnstcw
(bad)
pop
lods
stos
add
cli
xlat
stc
xchg
(bad)
ror
add
jne
sar
sbb
cmc
int3
outs
out
push
lds
xor
mov
in
fbld
mov
retf
xor
(bad)
shl
gs
xchg
push
push
and
out
cmps
push
xor
shr
push
push
push
jg
shl
popa
call
mov
mov
inc
mov
repnz
mov
out
clc
ja
xchg
push
xchg
cli
jmp
in
popf
inc
out
iret
fstp
xchg
ficom
fnstsw
dec
outs
ss
mov
lds
or
or
xor
jecxz
pop
pop
jnp
mov
rcl
jl
sub
sub
sub
mov
or
jg
sbb
cmps
popf
push
sub
daa
movs
or
test
cmp
icebp
mov
(bad)
mov
mov
inc
fidivr
push
or
push
mov
or
popa
addr16
(bad)
fist
imul
and
les
jl
dec
aaa
or
ret
popf
lea
mov
or
xchg
je
cwde
push
pop
sbb
stos
dec
mov
pop
xchg
stc
data16
aam
push
fiadd
mov
call
(bad)
in
ds
mov
cmp
push
lods
nop
jecxz
ss
mov
fnstenv
xchg
pop
inc
jb
sar
loope
nop
in
mov
repz
and
fld
pop
daa
movs
js
in
jne
movs
dec
ins
mov
fstp
sub
bound
push
push
sar
fmul
cwde
repz
imul
out
push
rcl
div
mov
push
and
out
mov
loop
mov
or
xor
or
std
sar
push
sti
std
jmp
mov
pop
push
push
sti
nop
call
fucomip
mov
push
ja
js
cmp
cmp
add
push
int3
outs
add
mov
xchg
mov
hlt
jg
in
mov
xchg
or
into
mov
and
lea
jge
or
pop
dec
popf
int
std
xor
or
jns
jne
stos
adc
das
pushf
inc
inc
mov
aas
jo
mov
(bad)
fstp
nop
push
jle
loope
sub
push
ins
mov
sub
cmp
movs
iret
add
and
jecxz
add
push
lods
fbstp
dec
push
mov
mov
std
xchg
jae
rol
dec
dec
mov
lea
test
inc
dec
jg
jne
mov
mov
inc
ss
arpl
out
ins
pop
push
ins
and
cmp
or
(bad)
xor
dec
loop
in
sub
mov
adc
scas
fmul
test
sub
jnp
bsr
fwait
clc
push
fcmovnb
mov
dec
pop
popa
jb
jb
inc
mov
adc
call
adc
int3
enter
sbb
adc
push
int
lock
movd
mov
mov
push
adc
loop
add
neg
hlt
cmc
rcl
inc
cwde
push
out
push
inc
or
sub
in
stos
mov
lahf
push
sar
lahf
js
aam
pop
(bad)
scas
dec
or
xchg
stos
jne
scas
and
xchg
stos
icebp
cmc
daa
mov
add
ins
pop
lods
jo
aas
adc
punpcklbw
sar
fwait
test
mov
mov
ror
fmul
sub
xchg
sbb
cmp
jle
fbld
div
xchg
ftst
jnp
and
add
or
icebp
movs
scas
adc
mov
pop
sbb
lods
movs
pop
and
or
xchg
fimul
arpl
in
add
ficomp
add
push
push
icebp
movs
pop
mov
pop
enter
retf
jmp
sub
cmp
test
xor
hlt
dec
shl
add
jns
and
sbb
outs
int3
sar
add
shr
lds
scas
jne
ss
outs
scas
adc
pop
pop
jno
shr
mov
je
cld
jbe
daa
(bad)
push
int3
cmp
test
mov
(bad)
js
ss
cmp
mov
dec
popa
out
nop
push
fadd
jmp
mov
and
push
and
adc
mov
and
dec
sbb
cmp
aam
idiv
xchg
test
sar
int3
bnd
into
jl
popa
sub
mov
push
push
lods
ins
cmp
pop
sbb
cbw
inc
das
xor
popa
add
add
test
(bad)
and
cmp
out
aas
pop
shl
push
sar
dec
lock
cmp
dec
dec
dec
jb
rcl
push
lock
mulps
mov
rcr
xor
pop
sub
retf
push
(bad)
fcomip
xor
mov
test
loope
jl
xchg
push
scas
xor
xor
ret
dec
jge
or
pop
es
jo
imul
cdq
inc
sahf
jg
bound
in
int
fcmovbe
mov
xor
test
test
adc
(bad)
ja
loope
arpl
dec
popa
dec
push
add
xlat
add
test
dec
lahf
aam
test
pusha
call
add
idiv
loop
push
and
fcmovb
cld
add
ins
xchg
adc
jnp
mov
stos
not
loopne
jnp
mov
pop
(bad)
xlat
xchg
sbb
mov
cmp
bound
popf
lahf
cmp
push
push
leave
sbb
sub
fdiv
aaa
xchg
jbe
fs
(bad)
fprem1
mov
dec
push
xor
dec
push
fild
enter
xchg
cwde
cli
ret
dec
test
mov
sbb
test
jmp
sbb
sbb
cld
das
mov
outs
adc
mov
jl
mov
stos
pop
mov
int3
add
xlat
xor
(bad)
bnd
add
addr16
bnd
add
mov
cmp
cld
ins
push
ins
sub
jl
adc
in
sbb
stos
mov
jl
ret
fild
and
xor
sub
stc
add
dec
xor
add
dec
jns
ins
(bad)
in
mov
mov
push
imul
pop
es
test
cld
bound
bound
pop
shr
and
bound
addr16
mov
fnstenv
(bad)
mov
jecxz
cmp
adc
imul
test
inc
adc
push
bound
test
or
(bad)
jo
lahf
movs
(bad)
(bad)
mov
cmps
adc
(bad)
in
adc
pop
(bad)
add
test
xchg
lahf
out
cmp
and
out
pop
mov
sbb
pop
int
pop
fiadd
sar
cld
int3
adc
push
fninit
sub
push
lods
jnp
ins
mov
jecxz
add
add
lock
bound
adc
lahf
das
mov
mov
outs
and
or
jae
mov
and
sbb
jno
xchg
fwait
pop
jmp
rcr
shr
and
repz
and
sub
mov
inc
das
paddb
(bad)
pop
cld
icebp
je
cmp
cmp
jnp
into
mov
xor
bound
jp
sub
xchg
push
shr
pop
das
mov
xor
sar
(bad)
push
call
xor
stc
dec
into
fnsave
cmps
xchg
pop
ret
push
ss
mov
push
xchg
arpl
loopne
aaa
into
add
mov
(bad)
pop
ins
(bad)
jecxz
out
in
inc
adc
repz
shr
mov
cwde
xor
cs
mov
jmp
mov
out
sbb
(bad)
xor
loop
and
xchg
and
pop
inc
push
in
enter
mov
dec
jmp
outs
sar
gs
call
outs
ins
cmp
rcr
les
dec
cdq
cmp
inc
pop
inc
xlat
or
jnp
popf
jne
cmps
mov
push
xor
cmps
dec
dec
pop
adc
xor
rol
js
call
jle
cmc
call
nop
jmp
imul
repz
pop
stos
sbb
leave
out
mov
push
mov
loope
mov
or
xchg
jbe
lahf
mov
and
outs
xchg
cli
mov
aad
mov
xchg
ins
ds
lahf
and
pop
dec
outs
fs
or
mov
jb
fimul
add
mov
mov
pop
cli
out
enter
sbb
shr
or
mov
cli
rol
jl
mov
(bad)
xor
popf
mov
mov
add
jnp
fstp
pop
dec
movs
sar
mov
pop
cmp
cld
leave
test
popf
ror
stc
push
xor
(bad)
pop
call
pop
and
pop
pop
in
in
popf
fisubr
jmp
jne
lahf
les
mov
push
push
add
mov
fldcw
jge
bound
dec
mov
push
cmp
push
into
jne
mov
mov
rol
xchg
stc
cmp
dec
and
jne
add
sbb
test
daa
ja
mov
sbb
inc
loopne
jne
cmc
test
add
xor
out
lock
(bad)
sbb
xor
mov
loop
jb
mov
popf
fcomp
pop
outs
cmps
rol
xchg
mov
inc
fstp
popa
push
rol
push
jnp
dec
(bad)
dec
neg
push
mov
push
aad
push
call
repnz
imul
stc
mov
aas
mov
ds
in
lods
push
rcr
xor
popa
int3
xlat
add
loop
push
cmps
ds
mov
sub
out
add
cmps
push
push
jnp
sub
jp
adc
mov
fimul
mov
in
or
iret
into
imul
dec
mov
cmp
in
or
fist
shr
mov
dec
jecxz
ffree
mov
pop
inc
jb
ret
ret
push
xchg
fist
shr
xor
xlat
jecxz
les
mov
add
stc
gs
xor
adc
shl
sub
push
test
xchg
das
xchg
adc
fwait
or
xchg
or
out
lods
or
js
cdq
mov
push
inc
adc
add
add
das
loop
mov
ret
push
cli
jo
mov
stc
clc
sub
or
in
and
xchg
dec
inc
aam
sbb
xor
loop
aaa
jmp
jge
xlat
xor
mov
cmc
lods
cmp
fmul
enter
or
pop
mov
sub
mov
fistp
(bad)
das
mov
gs
jmp
outs
aam
jmp
sub
mov
xchg
aaa
xor
cmp
jge
cld
xor
cmc
mov
xchg
fnstenv
aad
jbe
pop
shl
or
xchg
mov
enter
inc
xor
cmp
dec
xchg
mov
js
xchg
loope
std
xchg
push
mov
sub
or
lds
add
jne
mov
inc
xchg
test
cmp
div
cwde
lods
pop
add
pop
call
xchg
mov
jl
or
pushf
xlat
les
loope
jo
fst
cmc
pushf
sti
mov
pop
sbb
push
xchg
add
mov
imul
sub
push
icebp
jns
jp
pop
mov
cli
std
inc
sub
das
inc
scas
sar
(bad)
ret
jo
pop
aad
scas
pop
mov
je
lea
dec
and
xor
cmp
cmp
mov
sahf
stc
cmp
sbb
adc
jg
cdq
popa
ss
xchg
mov
(bad)
mov
mov
mov
mov
fwait
cmp
cli
shl
(bad)
cmc
loop
lea
pop
stos
xor
out
jo
shl
jns
or
dec
fsubr
mov
daa
add
sub
loopne
mov
mov
loopne
popa
push
rcpps
mov
adc
out
jns
jmp
pushf
fwait
pop
mov
fwait
cmp
pop
xor
push
movs
add
mov
sbb
pop
inc
mov
pop
(bad)
pop
ins
stos
sahf
loope
sbb
mov
or
xchg
cmp
in
lock
xor
push
neg
jg
and
(bad)
cmps
fwait
mov
adc
push
ins
adc
fistp
push
lods
mov
retf
imul
sub
fadd
dec
dec
pop
mov
push
movs
inc
(bad)
cld
or
(bad)
aad
mov
jg
or
inc
fs
pop
imul
sbb
dec
jp
pop
mov
dec
pop
fwait
sbb
xor
xor
sub
loope
mov
mov
maskmovq
idiv
outs
sbb
xor
dec
pushf
sbb
mov
inc
mov
je
outs
into
scas
scas
xchg
outs
std
out
cld
dec
loope
ret
das
test
and
scas
popf
jmp
mov
(bad)
not
pop
cmp
mov
nop
das
inc
add
adc
add
mov
push
push
inc
imul
fld
fucomip
dec
fisttp
pop
xchg
sbb
xchg
dec
cmp
int
push
xchg
ss
les
mov
(bad)
lock
jns
popf
gs
adc
call
loope
inc
xchg
mov
clc
and
mov
xchg
scas
cli
pushf
mov
call
sub
shl
lea
in
aad
loopne
xor
jo
xor
inc
(bad)
dec
mov
sub
and
xor
sbb
lea
lds
inc
jle
mov
aaa
jle
dec
inc
mov
imul
add
mov
jle
int3
fwait
sbb
cmp
inc
mov
pop
jo
lods
bound
outs
mov
add
aad
push
clc
xlat
sbb
cs
test
dec
xchg
push
cli
xchg
sahf
mov
dec
cld
cmp
xchg
add
pushf
xor
add
outs
and
jmp
mov
push
(bad)
jmp
ror
(bad)
ret
mov
pusha
ja
inc
xchg
es
rol
ins
fdiv
test
ret
adc
outs
inc
mov
sub
pop
repz
mov
clc
stc
jmp
adc
or
aam
add
add
in
push
inc
jp
inc
and
mov
push
out
add
sbb
jb
ds
push
lea
scas
xor
test
push
arpl
adc
jbe
shl
cdq
pop
pop
push
pop
jmp
sub
mov
sbb
dec
fdivp
jae
mov
push
mov
jmp
outs
inc
push
fld
movs
sbb
fmul
sbb
lock
jecxz
adc
mov
sti
(bad)
jnp
cwde
pop
mov
outs
sbb
add
fstp
push
mov
xchg
(bad)
pop
cmp
mov
mov
pop
mov
jno
adc
scas
jae
and
inc
add
sbb
sub
test
or
push
out
pop
fnstenv
sbb
outs
xor
fiadd
daa
cli
pop
fcmovu
cmp
aas
push
sahf
scas
mov
addr16
or
shl
pop
iret
int3
pop
add
mov
mov
xor
leave
addr16
aaa
test
cmp
jmp
ins
(bad)
test
popa
icebp
fimul
and
push
stos
inc
scas
test
and
sbb
fldcw
sahf
add
cmp
lods
push
mov
fdiv
les
mov
cmp
push
das
xor
fst
test
adc
dec
lods
cli
dec
and
imul
sbb
and
mov
jecxz
icebp
sbb
xchg
(bad)
pop
sub
sub
inc
out
retf
dec
js
mov
stos
or
scas
push
jns
mov
imul
in
lahf
pop
mov
sub
xor
icebp
or
cmp
pop
js
mov
jle
xchg
add
mov
lods
out
fs
in
retf
pop
pop
inc
dec
cmp
xchg
mov
jmp
loopne
inc
cmp
leave
lock
out
arpl
sbb
inc
adc
or
js
jae
das
xchg
sahf
cwde
sbb
cs
ja
add
jp
and
test
mov
loope
(bad)
inc
inc
jne
inc
rcr
mov
pop
or
add
push
js
mov
sub
add
fldz
out
imul
imul
lds
rol
mov
les
shr
inc
fldenv
fnsave
sbb
mov
and
je
sub
inc
fiadd
daa
inc
jae
xchg
xchg
push
jne
add
cmps
mov
and
push
movs
jp
mov
pop
and
pop
std
ins
fwait
mov
inc
sbb
cmp
xchg
cmps
or
movs
pop
add
cdq
rol
xor
in
int3
add
mov
aam
call
sbb
pop
imul
pop
scas
repz
(bad)
outs
xchg
in
cmp
pop
mov
sub
mov
xchg
adc
inc
fldenv
out
add
fdiv
mov
fnstcw
repnz
mov
sbb
and
jae
xor
stos
sub
in
push
push
sbb
cld
stos
and
enter
cmp
pop
pop
jle
pushf
add
stos
clc
(bad)
cmp
sti
mov
or
in
adc
mov
lods
pop
sti
or
push
xor
nop
push
pop
(bad)
rep
adc
movs
out
addr16
sbb
mov
push
add
mov
cdq
(bad)
(bad)
ins
fcomi
fcmove
or
push
rcl
lds
mov
sbb
in
cwde
in
call
call
rcr
adc
dec
pop
fbld
pop
aam
dec
in
arpl
xor
in
jmp
movs
icebp
pop
xchg
mov
mov
jb
or
push
jg
(bad)
or
mov
and
xor
aas
mov
lea
fbstp
outs
into
push
cmp
mov
mov
mov
jne
fcomi
sub
lea
(bad)
mov
dec
mov
xchg
fst
pop
retf
push
xchg
pop
push
jl
adc
call
daa
inc
mov
in
inc
pop
or
imul
fld
mov
push
das
pop
rcl
push
pop
cmps
jb
shr
pop
ror
or
mov
jle
jmp
jle
sub
leave
sbb
in
ja
mov
cmp
(bad)
fyl2x
sub
pmulhw
data16
movs
xor
sub
cmp
or
and
fsubr
sbb
imul
push
adc
inc
mov
es
jge
bound
jmp
pop
out
dec
pop
iret
dec
sti
xor
mov
mov
push
xor
sbb
push
jl
mov
add
jecxz
jbe
pop
mov
jmp
xchg
imul
fisttp
pop
jl
ja
sub
sub
mov
inc
dec
add
js
mov
xchg
add
or
jmp
cdq
mov
and
or
xor
adc
call
int
xor
into
mov
xor
jmp
int3
sbb
pop
sar
lea
inc
dec
call
push
shr
cdq
or
popa
dec
xchg
sbb
cwde
stc
push
jnp
ds
es
xchg
aaa
test
xchg
imul
cmp
out
inc
popf
inc
xor
add
xlat
aas
push
adc
mov
(bad)
fisttp
adc
and
in
dec
mov
sub
xchg
(bad)
dec
mov
pop
cmp
xchg
ins
(bad)
(bad)
add
mov
or
adc
cwde
mov
xchg
(bad)
in
not
sbb
(bad)
call
movs
jg
not
cmps
repnz
imul
xchg
dec
add
sbb
fisttp
jl
push
mov
ds
inc
xor
jb
sub
adc
xchg
lea
jmp
and
mov
push
scas
cdq
fcmovnb
int3
in
shr
xchg
push
std
jno
ret
xchg
push
pop
hlt
lock
pop
xchg
imul
mov
outs
pop
jl
xor
mov
sbb
dec
jmp
and
xchg
loope
xchg
addr16
mov
(bad)
das
and
gs
fs
out
cmp
fwait
leave
pop
fimul
mov
sub
mov
test
rcr
jl
daa
test
adc
or
jno
mov
or
adc
cmps
cli
push
adc
inc
test
mov
dec
and
push
dec
add
pusha
push
cmps
das
fs
ret
inc
sub
cmp
pop
sahf
mov
fisub
stos
mov
aad
addr16
rcr
gs
rol
test
outs
xchg
aaa
(bad)
and
dec
xor
mov
retf
lahf
xchg
mov
inc
xor
inc
pop
mov
out
dec
inc
(bad)
cmps
add
aaa
rol
rcr
imul
cmp
test
pop
cmp
sub
xor
stos
inc
xor
cmc
fs
mov
and
(bad)
jg
mov
jp
push
or
mov
mov
inc
mov
neg
mov
mov
jae
fistp
leave
jns
lds
(bad)
sub
ret
mov
jns
ja
(bad)
mov
jno
in
ja
repz
stc
fisub
sahf
sub
std
ss
mov
xor
mov
adc
out
das
gs
les
sbb
out
cs
jo
outs
cdq
cmp
dec
adc
pop
(bad)
sar
mov
inc
and
je
push
xchg
mov
popa
or
sbb
pop
fcmovb
test
pop
sub
fst
xchg
add
lea
fsubr
(bad)
outs
in
adc
out
fisub
xchg
into
fwait
(bad)
sbb
rcl
outs
and
mov
mov
fldenv
scas
mov
call
mov
mov
push
mov
inc
iret
je
imul
pop
mov
xor
shr
pop
out
mov
sbb
fild
xchg
lds
adc
add
cmp
adc
xchg
sub
mov
cmc
pop
fidiv
aas
add
daa
push
add
test
out
cs
in
dec
test
lock
xor
fcmovu
sub
in
das
jb
dec
pop
mov
mov
mov
sbb
rol
lods
ret
add
dec
mov
push
mov
fistp
inc
in
push
mov
jecxz
mov
call
scas
dec
jecxz
imul
cmp
enter
fsubr
jp
inc
repnz
ins
xor
imul
mov
pushf
cmp
adc
rcl
lods
stos
push
xchg
pop
jge
jne
das
ret
xchg
dec
mov
or
addr16
pushf
sbb
call
mov
mov
inc
fwait
sahf
xchg
out
cli
mov
sub
(bad)
enter
test
ins
adc
cmc
nop
jmp
mov
fdivr
and
iret
push
leave
pop
das
xor
and
lds
mov
or
cmps
nop
cmc
into
pop
mov
jno
fldenv
fs
outs
mov
(bad)
(bad)
(bad)
push
inc
sub
call
sbb
mov
icebp
cld
push
mov
ror
movs
(bad)
not
push
les
aaa
iret
stos
leave
xchg
out
stc
aaa
mov
jmp
fwait
dec
in
in
sub
mov
sub
and
mov
in
scas
mov
cli
cli
cmp
pop
arpl
jmp
sub
mov
xchg
inc
shl
add
lods
push
rcl
and
or
cdq
pop
(bad)
mov
lods
sar
std
out
push
xor
mov
and
(bad)
mov
adc
mov
add
push
lock
(bad)
jecxz
test
popf
scas
mov
jmp
pop
dec
test
add
add
(bad)
fisub
jle
xchg
cmc
js
cld
inc
dec
ins
leave
inc
popf
jb
or
pop
cmp
stc
lds
mov
icebp
in
lahf
pop
jp
sub
div
std
and
sub
fxch
inc
outs
mov
test
jmp
xchg
imul
mov
sbb
xor
add
sti
loop
xchg
bound
fst
push
lsl
(bad)
and
test
sub
xor
test
movs
jae
mov
xor
dec
push
mov
cmp
les
dec
pop
push
bnd
jp
imul
test
dec
adc
outs
pop
sub
retf
aaa
xor
fmul
sbb
or
xchg
adc
sub
bound
push
inc
jns
fwait
xchg
add
inc
adc
ins
in
jae
mov
outs
jg
out
jp
mov
xchg
mov
cmc
jg
sbb
ins
mov
push
retf
rol
imul
mov
sbb
stos
jecxz
or
jns
adc
mov
jmp
add
pop
or
fs
(bad)
bound
std
int3
pop
xor
jno
cmps
(bad)
imul
leave
leave
mov
sahf
sahf
add
rol
pusha
repz
mov
test
adc
add
outs
ret
sub
aaa
(bad)
test
lods
movs
out
cli
add
lods
in
sbb
lahf
fist
enter
imul
fild
pop
push
mov
mov
imul
or
push
in
in
xchg
sbb
mov
inc
dec
repnz
in
(bad)
ins
and
add
les
inc
in
adc
pop
in
jge
sbb
int3
nop
aaa
adc
cmp
mov
push
mov
mov
(bad)
inc
test
xor
test
mov
sub
jmp
xor
sbb
jb
pop
stc
pop
mov
out
inc
imul
xchg
loopne
push
add
repnz
es
pop
aad
call
mov
test
clc
push
adc
in
add
pop
pop
pop
jnp
jae
mov
push
shr
leave
adc
jmp
stos
xchg
(bad)
pop
sbb
xchg
xor
xor
fmul
xchg
jmp
fst
dec
jne
sub
push
in
lahf
sahf
fild
push
fnstenv
inc
aam
adc
ret
adc
mov
mov
sub
jb
je
rcl
mov
imul
int
and
jno
sbb
xchg
cli
aam
cli
out
cmp
leave
outs
pop
pusha
cmp
int3
out
imul
add
pop
sub
xchg
imul
push
xchg
xor
aam
call
pop
lock
and
mov
inc
leave
dec
cmp
les
xor
idiv
inc
rcr
jmp
rcl
inc
pop
jg
mov
pop
mov
xchg
dec
add
inc
ins
aad
mov
popa
in
jmp
push
adc
shl
mov
jne
scas
and
pop
or
sbb
stos
mov
jp
jb
mov
(bad)
prefetcht2
out
in
sub
cwde
pop
push
js
aas
jne
ins
jmp
jg
dec
ffreep
or
xor
jmp
jmp
loopne
ds
xlat
cli
xchg
test
xor
lock
inc
sbb
cmps
xchg
sahf
pusha
stos
loop
enter
dec
cmp
dec
xor
add
jle
in
add
shr
dec
inc
xchg
mov
aad
or
add
jecxz
jecxz
pop
data16
xchg
sub
sub
stc
mov
out
cmp
push
push
movs
dec
inc
jmp
in
fs
aas
data16
push
mov
aam
jnp
jl
xor
or
fwait
ss
adc
stos
and
lods
loopne
xor
xor
lods
retf
pop
imul
ja
jl
iret
push
add
movs
sub
dec
jae
inc
push
sbb
and
cdq
dec
leave
or
pop
jmp
repz
je
idiv
jnp
mov
dec
adc
and
in
lds
fmul
test
out
jge
jge
adc
out
xchg
or
retf
lock
mov
call
xor
pop
inc
mov
in
dec
and
fld
mov
das
sbb
pop
mov
cmp
or
mov
jae
mov
sub
jmp
aas
nop
daa
fild
pop
cmp
mov
outs
cli
call
bound
out
adc
dec
pusha
pusha
cmp
inc
es
int3
lds
lods
(bad)
ficomp
leave
lock
popf
imul
inc
mov
je
xor
mov
mov
jmp
sbb
mov
or
jne
shl
pop
jnp
mov
pop
inc
ins
adc
sub
aaa
or
jecxz
stos
(bad)
in
jno
movs
lods
(bad)
data16
shl
sub
adc
sahf
stos
add
mov
pop
or
rcr
lods
(bad)
ja
in
fst
inc
sbb
lods
mov
idiv
test
(bad)
aas
inc
fcom
xchg
cmp
fistp
add
div
fiadd
pop
ins
jg
jmp
fcom
dec
sub
push
outs
mov
sbb
test
mov
mov
adc
outs
cmp
inc
jns
jbe
xor
mov
loop
push
mov
cmp
mov
push
test
mov
js
dec
loop
xchg
dec
adc
imul
aas
and
lods
into
mov
xchg
cmps
xlat
sub
mov
popf
jae
mov
(bad)
mov
test
or
inc
jmp
pop
sub
and
push
fild
pushf
out
rcl
in
pop
and
add
iret
shr
sbb
push
cmp
cwde
js
call
aas
xor
or
mov
xchg
add
or
(bad)
push
mov
add
sub
in
arpl
int3
fiadd
iret
dec
pop
jmp
sti
ss
repnz
int
and
xchg
fwait
jne
pop
and
mov
imul
jns
fist
jl
sub
shl
mov
jo
sub
scas
pop
sub
test
jecxz
pop
xchg
sub
mov
add
lods
fisubr
add
jl
stos
(bad)
and
push
or
mov
ja
das
inc
js
xor
cld
mov
imul
shl
xchg
pop
ficom
sub
pop
or
pop
or
cmp
xor
mov
and
and
xchg
cmp
popa
jo
fmul
cmc
inc
or
(bad)
out
push
sub
mov
popaw
jmp
sub
in
xchg
fs
and
test
mov
sub
add
(bad)
clc
add
(bad)
sbb
cdq
pop
out
test
cmp
retf
inc
lea
xchg
pop
mov
gs
arpl
push
cmp
jecxz
loope
sub
and
lds
jg
xchg
ja
pop
repnz
xchg
cld
dec
pop
mov
and
mov
das
mov
xchg
mov
rcl
movs
mov
pop
sbb
or
dec
fnstenv
dec
jo
(bad)
jecxz
(bad)
es
scas
aam
pop
loopne
popf
jle
cmp
push
out
pop
in
call
add
jmp
std
inc
call
cdq
(bad)
lods
mov
push
inc
aas
add
add
xchg
in
lods
(bad)
in
repnz
ins
mov
test
(bad)
test
fsubr
es
outs
cmps
(bad)
rcr
jmp
inc
sti
mov
lock
jno
repz
out
mov
call
push
fnstsw
mov
jnp
call
in
jp
xor
or
pop
jns
and
lds
mov
(bad)
imul
and
xor
mov
loope
jle
aam
repnz
pusha
movs
push
out
adc
and
xchg
xor
dec
shl
into
popa
mov
stos
(bad)
pop
adc
dec
es
fwait
mov
les
or
cmp
aad
push
inc
cdq
scas
fst
mov
lahf
pop
cmc
cmp
ficom
fisttp
xor
test
sub
dec
mov
push
pop
jns
not
neg
or
xor
jo
call
inc
imul
xor
cs
cmps
cli
xor
je
aad
aas
test
or
outs
neg
dec
pushf
mov
push
(bad)
mov
and
je
xchg
dec
jle
sbb
es
sub
and
push
mov
clc
scas
inc
aam
jns
push
dec
adc
cmp
loope
push
or
test
sbb
imul
mov
push
popf
pusha
xor
mov
inc
and
jb
and
mov
mov
ret
xlat
add
jnp
lock
lahf
cld
pop
sub
xor
iret
icebp
stc
push
and
mov
adc
fimul
jno
(bad)
aad
call
rcl
jmp
add
pmulhw
or
lods
sti
daa
mov
scas
popf
out
pop
test
push
jo
cmc
inc
shr
pop
and
outs
add
ds
xchg
ret
cmps
mov
inc
stc
(bad)
iret
sbb
ror
sar
inc
(bad)
je
and
mov
pop
movs
sbb
cmp
fxam
in
sar
bswap
jb
imul
xchg
push
test
icebp
call
pop
scas
cdq
jnp
call
inc
bound
(bad)
rol
or
mov
or
dec
out
mov
ret
cmps
add
push
pop
dec
hlt
jg
sbb
pop
adc
je
dec
push
jl
inc
lahf
cmc
mov
sbb
enter
call
pop
(bad)
mov
popa
jno
and
and
fcmovnbe
xlat
dec
sar
xchg
xor
jno
mov
push
(bad)
clc
adc
pop
das
ja
mov
repz
xchg
jp
mov
jmp
and
int
sbb
xchg
sub
je
clc
inc
arpl
pusha
popf
cmp
jge
inc
mov
dec
xchg
xchg
fstp
sub
sub
or
pushf
pop
cmps
sub
cmps
cmp
int
std
push
mov
pop
test
sbb
mov
test
fidiv
cld
ror
test
adc
or
loope
ret
cmp
push
das
je
nop
out
mov
and
rcr
jle
cmp
adc
fimul
cmp
es
test
aad
stos
stc
sbb
adc
inc
jne
fcmove
sar
cmp
fidivr
retf
stos
popa
arpl
ins
xor
cmps
pop
xchg
jp
jnp
push
or
fnstenv
aas
fcomi
shr
clc
and
mov
jbe
dec
imul
pop
add
jb
push
mov
xlat
imul
shr
cmp
mov
rol
pop
aaa
ins
pop
inc
mov
cmp
addr16
dec
or
dec
xchg
fbstp
sbb
dec
fcomp
popf
inc
or
fnstenv
popf
scas
jecxz
ins
sub
xor
and
cmc
xchg
push
rcr
daa
add
xchg
call
stc
(bad)
es
xchg
xor
mov
data16
xor
ds
mov
mov
stc
movs
push
dec
lahf
imul
rcl
outs
mov
add
ret
or
cmps
loop
mov
mov
and
jle
mul
xchg
cmp
pop
dec
cmp
repz
(bad)
jne
stos
xor
test
lahf
out
mov
test
(bad)
add
or
neg
jb
ins
shl
push
retf
test
mov
leave
push
call
inc
mov
sub
sub
pop
jo
aam
into
enter
mov
dec
cdq
loope
jle
mov
bnd
inc
je
mov
clc
fistp
ffreep
xor
les
cwde
mov
mul
fs
and
jne
mov
mov
sar
jbe
pusha
movs
ret
retf
fs
push
jle
add
ja
in
dec
cmps
mov
leave
cmps
dec
sbb
push
push
or
mov
xor
jno
cwde
add
imul
out
or
mov
push
or
cmp
in
xchg
cdq
aam
stos
dec
cmc
pop
mov
jbe
pushf
inc
and
adc
aam
lods
mov
lock
(bad)
xchg
inc
lods
or
mov
mov
mov
clc
sbb
scas
vmwrite
pop
jmp
dec
xchg
shl
pop
pop
push
test
or
mov
out
loop
(bad)
fldenv
shl
sbb
les
mov
test
psubw
dec
sahf
stos
ins
stos
dec
clc
ins
mov
in
dec
inc
or
sahf
in
mov
popa
xchg
fwait
mov
push
xchg
cmp
and
cmp
das
test
jno
push
xor
lds
cmps
cli
mov
pop
adc
jmp
hlt
movs
dec
and
arpl
push
out
dec
jbe
cmp
and
cmp
and
nop
dec
(bad)
push
arpl
inc
imul
fdivrp
pop
iret
xchg
add
stos
jmp
push
inc
retf
cmp
pop
stos
fs
and
rol
jle
out
cmp
outs
push
daa
outs
into
add
inc
ins
cmp
pop
mov
and
(bad)
and
add
in
mov
push
xor
pushf
int3
mov
and
pop
fcom
mov
push
bound
push
jno
jmp
cmps
aas
jecxz
push
inc
leave
repz
mov
push
adc
scas
pop
les
cmp
sub
(bad)
(bad)
rep
cmp
in
sub
or
int3
out
cmp
sbb
loop
cmp
pop
pop
mov
(bad)
scas
repz
jnp
inc
pop
shld
adc
jmp
xlat
aam
ins
adc
in
icebp
push
fwait
cmps
inc
push
rol
sub
push
xor
sbb
mov
leave
add
test
mov
mov
sbb
or
or
mov
and
repnz
cmc
mov
mov
cmc
cmp
fwait
mov
ins
cld
into
fs
fisttp
mov
sub
scas
and
cmp
xchg
or
popa
lods
jp
pop
adc
push
jne
mov
mov
pop
xor
retf
retf
jmp
mov
mov
and
lods
pop
adc
dec
mov
imul
mov
xor
outs
enter
cmovns
mov
aam
pop
lods
scas
jae
shr
mov
or
cmp
dec
addr16
add
mov
xor
mov
mov
mov
pusha
scas
cmp
(bad)
xchg
dec
fnsave
cmp
gs
scas
jb
js
pop
mov
add
cmp
bound
sub
addr16
mov
mov
push
gs
sbb
pop
outs
cdq
sbb
outs
jmp
test
out
aam
in
pop
out
clc
push
push
mov
data16
loop
jg
movs
nop
cmp
in
retf
inc
and
xor
(bad)
test
jmp
pop
and
ss
mov
call
or
jg
retf
and
ficomp
loope
ja
jmp
mov
stos
push
ficomp
or
cmp
xor
mov
dec
pop
iret
call
iret
imul
dec
call
and
into
add
sub
stos
sub
repnz
sub
js
pop
cdq
je
cs
repz
xchg
cdq
ss
call
lods
int3
jno
xchg
xlat
xchg
adc
xchg
push
push
xor
xlat
sar
xor
mov
mov
das
repnz
outs
push
pop
(bad)
in
xor
mov
lahf
add
ret
and
aam
sti
jmp
adc
xchg
scas
imul
push
push
inc
push
mov
cmp
pop
out
popf
xor
call
add
jp
inc
out
sbb
loope
mov
sub
jnp
sahf
fiadd
shl
pop
xor
popa
data16
xor
dec
pop
(bad)
xor
add
addr16
repz
mov
push
jae
xor
repz
es
shl
rol
add
into
test
fnstsw
in
pusha
aaa
cdq
lahf
xchg
and
icebp
sub
aas
mov
retf
lea
in
add
es
cmp
mov
or
mov
dec
or
mov
push
sbb
dec
call
cs
pop
xor
add
aad
dec
scas
mov
(bad)
shl
cwde
scas
add
xor
repz
sub
addr16
sar
fdiv
inc
fcomip
(bad)
ds
cmp
popf
cld
stos
push
add
(bad)
mov
call
mov
mov
in
lods
cmp
(bad)
mov
jl
es
popf
mov
ror
std
jge
outs
retf
inc
popa
sbb
mov
add
xchg
pslld
push
jle
pop
fwait
xor
cmp
int3
in
movs
add
sbb
ss
inc
ret
push
les
or
clc
xchg
aad
arpl
sar
cmps
xchg
xchg
push
cmps
xlat
retf
xchg
and
rcr
pop
hlt
neg
lods
jno
stos
cmp
jnp
mov
retf
into
inc
mov
bound
and
cpuid
popa
loop
ds
sar
into
and
dec
das
push
mov
jns
outs
dec
test
and
jne
dec
imul
cmp
dec
bound
adc
inc
mov
imul
add
pop
sub
fs
fiadd
test
dec
mov
imul
scas
fldcw
loopne
rcr
cmp
jbe
rol
sbb
cdq
sbb
mov
sub
and
leave
fndisi(8087
ja
mov
adc
hlt
dec
mov
scas
in
arpl
mov
sub
ja
mov
add
add
shr
movs
mov
mov
out
xchg
mov
(bad)
leave
mov
pop
cmps
inc
stos
addr16
jo
mov
add
ins
cs
ins
sbb
xor
dec
pop
cmps
xor
jb
jp
stos
push
(bad)
mov
push
xchg
mov
mov
add
jnp
stos
jmp
pop
inc
fdiv
mov
aad
and
in
mov
cmp
fst
pop
lods
jl
push
(bad)
clc
jmp
add
stc
sar
add
sub
cmp
mov
pop
push
adc
cmc
mov
ret
adc
outs
sbb
mov
shl
inc
cmp
test
dec
mov
out
jbe
add
aas
repz
or
sar
out
dec
jno
cmp
leave
mov
ja
cmp
mov
shl
ins
lea
add
int
ins
shl
imul
daa
sub
fdiv
mov
xchg
xchg
(bad)
cld
int3
scas
enter
mov
stc
xor
jp
nop
je
outs
mov
jmp
dec
data16
daa
jg
rcl
jbe
push
outs
pop
shl
cmc
pop
call
mov
cs
pop
and
dec
jp
pushf
movs
push
xchg
call
lock
ja
test
mov
ret
cwde
rcl
sub
movs
add
in
xchg
pop
enter
adc
shl
jae
mov
ss
or
pop
cmp
jne
loope
sub
mov
mov
jae
lock
mov
xchg
test
push
in
push
and
mov
sti
jmp
sub
retf
popa
js
mov
pusha
inc
push
jmp
mov
pop
or
call
dec
sbb
adc
or
and
cmp
aaa
imul
sbb
sti
(bad)
(bad)
loope
xchg
jne
pop
enter
push
out
push
push
push
push
sbb
pop
jp
pop
ss
lahf
inc
call
mov
or
push
ins
push
(bad)
sbb
loope
sbb
sti
jl
xor
ins
xchg
push
dec
adc
adc
lods
adc
jns
in
loop
xchg
hlt
inc
adc
fcmovb
jns
adc
add
or
or
push
and
out
push
scas
push
outs
movs
jecxz
and
fcomp
(bad)
in
(bad)
leave
sbb
pop
pop
or
inc
cs
or
adc
adc
icebp
movq
xchg
cmp
std
rcr
(bad)
jge
(bad)
adc
mov
xchg
test
aas
(bad)
cmp
aad
mov
imul
jge
movs
popa
push
fdivp
inc
cmp
mov
mov
outs
clc
cmc
sti
movs
scas
dec
out
test
push
mov
lods
fs
pop
add
mov
mov
out
in
(bad)
ja
in
push
lds
es
cld
and
lock
js
fst
lds
mov
or
stc
ffree
dec
xchg
js
dec
lea
inc
cmp
push
cmp
(bad)
mov
and
cs
lock
push
push
(bad)
cmp
shl
dec
ror
dec
rcl
pop
repnz
jns
or
sub
aaa
mov
add
(bad)
mov
out
fnsave
inc
and
ins
pop
ds
call
aad
jb
daa
in
dec
in
adc
inc
pop
sar
and
stc
and
ret
shl
mov
sbb
pusha
or
in
call
jne
mov
adc
cmp
call
shr
pop
fisubr
or
je
jne
ja
xchg
mov
mov
movs
jp
or
aas
scas
lods
das
mov
movs
sbb
inc
or
adc
cmp
xchg
pop
fidiv
scas
or
sti
dec
adc
push
push
addr16
imul
outs
push
or
dec
(bad)
out
gs
mov
push
int3
mov
pop
ja
pushf
mov
add
adc
sbb
mov
jns
sbb
sbb
pcmpgtb
enter
xchg
inc
inc
push
dec
rcl
jo
or
fist
fcom
mov
leave
lahf
pop
mov
sbb
cmps
aas
mov
imul
and
xchg
inc
out
dec
inc
sbb
mov
bound
icebp
inc
mov
test
call
mov
popf
ja
or
aam
js
cmp
pop
jb
mov
push
movs
out
mov
mov
setae
imul
dec
adc
sti
mov
dec
in
fidivr
fcmovnbe
arpl
push
adc
cmp
pop
out
push
or
cmps
jne
pusha
stc
test
push
mov
loop
dec
jl
and
ds
adc
imul
xchg
xor
iret
mov
mov
or
nop
jae
push
sbb
nop
les
cs
xchg
jnp
iret
jmp
xor
mov
movs
adc
pop
sbb
lahf
pop
pop
aaa
pop
add
in
fldenv
mov
scas
dec
pusha
lds
mov
inc
mov
pop
xchg
les
add
add
xor
xchg
retf
dec
scas
add
mov
clc
dec
jae
sbb
mov
xor
cmp
(bad)
icebp
push
sub
push
push
cmp
cmp
add
jnp
shr
dec
xchg
cmp
xor
mov
ds
or
inc
push
lds
jae
pop
dec
les
jb
dec
repz
jle
stc
dec
mov
(bad)
pop
in
cmc
jne
sub
jmp
xor
and
cmps
bnd
test
fild
int
or
ret
je
jecxz
ret
sub
stos
ficomp
(bad)
outs
cs
js
dec
stc
adc
test
leave
dec
add
icebp
ficomp
adc
fldenv
xchg
(bad)
sub
xor
aad
retf
inc
in
addr16
add
bound
mov
imul
or
out
out
addr16
movs
mov
xor
add
pushf
rol
mov
mov
dec
inc
fldcw
call
cmp
jecxz
inc
and
imul
js
and
pop
mov
in
test
push
arpl
mov
xchg
pop
inc
or
cmps
dec
push
rcl
mov
imul
or
mov
std
lds
cdq
pop
and
adc
or
daa
adc
mov
jmp
dec
aam
sbb
adc
cmps
(bad)
leave
lds
in
xchg
sar
out
sahf
lds
pop
inc
in
int3
add
xchg
mov
in
cdq
inc
out
pop
jp
call
or
je
add
sub
push
inc
jbe
jmp
mov
dec
dec
call
jmp
movs
repnz
inc
inc
out
push
outs
and
mov
call
loopne
push
dec
adc
jae
cmc
enter
bound
xor
outs
xchg
scas
cmp
jecxz
xchg
push
jmp
jg
sbb
dec
mov
jmp
jmp
loopne
lahf
pop
sahf
mov
aas
test
cli
mov
xchg
out
pushf
mov
nop
sbb
add
push
xchg
sub
mov
ja
push
lahf
mov
loope
std
xor
and
js
mov
out
push
push
push
and
int
ret
cs
sahf
pop
mov
push
cmp
not
cmp
loope
mov
(bad)
cmp
adc
add
push
pop
stc
loop
and
or
adc
xor
push
(bad)
jb
xchg
sbb
nop
mov
jmp
pop
add
and
pop
loop
cdq
(bad)
addr16
push
(bad)
push
sub
jns
pop
ds
or
popa
mov
imul
inc
test
je
jb
push
(bad)
(bad)
sbb
mov
fsub
sub
push
mov
(bad)
and
sbb
xor
inc
jp
pop
and
hlt
in
pop
(bad)
dec
(bad)
loopne
loop
or
outs
fnstsw
jmp
out
mov
mov
jno
jbe
pop
fisttp
test
mov
cmp
loop
add
dec
cli
sar
loope
aas
xor
ins
pop
leave
jb
ins
dec
sbb
sub
cmp
and
dec
int3
sbb
das
fcom
adc
(bad)
fdivr
jnp
dec
rcr
dec
mov
clc
mov
call
fiadd
ds
adc
pop
pop
xchg
lods
adc
and
mov
push
jo
dec
rcr
fnstcw
std
and
scas
loopne
popa
icebp
sbb
(bad)
pop
fcomp
(bad)
lods
jns
pop
sbb
pushf
ins
mov
sbb
or
scas
pop
pop
xor
push
cld
retf
in
xchg
repz
es
pop
or
or
mov
xchg
jo
popf
mov
call
jmp
sbb
push
repnz
push
mov
cmp
or
mov
hlt
mov
xor
outs
push
push
imul
mov
ret
push
rol
sub
les
hlt
cwde
mov
cmp
mov
out
inc
fidiv
jb
xor
adc
out
cmp
xchg
shl
push
add
mov
fwait
add
pop
mov
adc
movs
test
push
push
push
push
mov
nop
push
fld
repnz
in
iret
popf
xchg
repnz
cli
sti
cmp
adc
sbb
and
dec
adc
jmp
das
add
pop
retf
jo
vmread
mov
jbe
loope
mov
pop
pop
call
test
sub
lahf
bound
test
lods
test
scas
pop
(bad)
scas
sub
loop
sub
or
sbb
cwde
lahf
dec
mov
jnp
sub
sbb
push
pushf
push
jge
test
xor
ins
dec
sub
ins
mov
adc
mov
outs
inc
adc
xchg
movs
je
popf
lahf
push
jg
pop
call
jae
lahf
push
(bad)
lods
pop
xchg
push
in
inc
pop
cs
add
je
mov
xchg
pushf
inc
imul
mov
and
retf
lahf
adc
xchg
mov
imul
addr16
adc
in
mov
out
cmc
push
pop
mov
pop
lock
inc
imul
ins
jb
xchg
cmp
or
add
push
lahf
inc
ins
retf
push
and
inc
cdq
cli
(bad)
sub
cmp
mov
in
pop
jl
cdq
mov
xchg
or
fwait
bound
sbb
push
xchg
pop
jb
mov
xor
test
adc
cmp
xor
mov
arpl
repnz
fmul
push
pop
add
xlat
aas
xor
sub
sub
pop
lods
fdivr
fld
inc
icebp
mov
repnz
add
bound
jecxz
push
outs
xor
cli
dec
stc
rcl
and
or
int3
or
pop
push
test
xor
enter
lds
pop
or
inc
xchg
mov
inc
call
xchg
push
arpl
xchg
sahf
xchg
xchg
into
out
mov
out
lock
adc
mov
mov
push
pop
fdivr
call
or
xor
xchg
cmovb
pop
ja
cmps
push
fs
pop
into
aad
push
cdq
in
or
or
mov
push
(bad)
dec
jmp
cmp
stc
xchg
imul
cmp
mov
ficomp
fbld
aam
adc
test
cli
aaa
xor
or
aam
pusha
(bad)
and
cmp
mov
int3
ins
dec
mov
outs
add
jp
xchg
mov
mov
mov
leave
push
movs
and
mov
lods
dec
shl
loope
mov
pusha
iret
cdq
leave
mov
loop
mov
sar
loopne
pusha
mov
fsubr
jmp
int
test
cmp
push
jg
ss
xor
xor
inc
in
mov
cmp
cmp
cmps
daa
add
xor
push
inc
inc
mov
jp
adc
(bad)
arpl
mov
inc
(bad)
mov
clc
mov
das
jbe
or
movs
or
es
retf
cwde
pusha
xchg
mov
push
sahf
jno
aas
jo
add
and
outs
cwde
or
xor
cmp
les
std
or
dec
mul
test
cwde
mov
cmp
sbb
inc
xchg
icebp
je
sub
call
cwde
sbb
xor
stc
call
pop
jge
in
in
push
cmp
adc
or
iret
loopne
repnz
dec
jle
sahf
adc
ss
pop
cmps
sub
cli
inc
icebp
cmp
out
mov
repz
mov
mov
outs
test
ss
into
sub
and
jmp
repz
xchg
ret
icebp
xor
or
push
add
repz
jb
ins
movs
and
lock
in
jns
pop
out
inc
cli
inc
cwde
push
sbb
sub
sbb
xor
pop
inc
or
jge
mov
inc
aad
cli
push
mov
sti
inc
mov
ror
mov
mov
jbe
pusha
adc
retf
mov
nop
xchg
add
cs
jnp
dec
imul
jns
fist
push
fsub
jns
call
retf
jl
and
push
das
aad
(bad)
and
and
or
sbb
mov
mov
xor
inc
xchg
int3
push
(bad)
pop
jmp
xchg
xor
pop
mov
push
frstor
and
mov
pop
aaa
es
mov
sbb
push
in
pop
sbb
mov
(bad)
push
mov
xlat
fnsave
sahf
xchg
pop
and
shl
loopne
aad
mov
xor
jno
push
ror
je
mov
call
xchg
das
clc
(bad)
aad
and
(bad)
rcr
mov
popf
aas
pop
jmp
das
arpl
push
js
jl
leave
cdq
adc
(bad)
add
test
mov
fiadd
cmp
sub
ret
retf
pop
or
mov
xor
xor
rcl
xchg
jns
mov
out
sbb
(bad)
test
ja
hlt
dec
lds
lea
xchg
jecxz
rcr
add
and
push
xor
sti
inc
test
inc
mov
test
cmps
cdq
mov
es
push
scas
sub
or
mov
or
add
das
movs
iret
push
xchg
retf
xor
iret
xchg
jl
leave
pushf
les
lods
push
xchg
sub
sub
mov
and
xor
jmp
stc
into
xor
pop
push
cmp
push
gs
xchg
jo
mov
push
addr16
push
in
sbb
push
loop
pushf
add
push
(bad)
mov
xor
mov
or
scas
sub
dec
push
mov
jnp
push
jne
lea
or
mov
add
addr16
pop
xchg
mov
push
add
mov
mov
iret
pushf
scas
mov
push
xor
inc
mov
aas
push
xor
inc
sbb
cmp
and
and
mov
sar
lods
push
ds
outs
mov
dec
mov
sub
fstp
jnp
cwde
lds
inc
(bad)
js
aaa
pop
and
int
call
gs
sar
aad
imul
iret
jb
cmp
mov
scas
jmp
push
retf
mov
mov
lahf
test
ret
jge
ret
bnd
ja
inc
dec
fnsave
gs
bound
je
scas
cmp
adc
fadd
popf
mov
pop
pop
dec
dec
adc
fwait
cmp
arpl
iret
dec
push
adc
scas
rol
inc
inc
push
cmps
adc
fidivr
hlt
test
fmul
das
fstp
cmp
rcl
inc
dec
mov
ja
adc
stc
mov
xchg
push
div
pop
cmp
call
shl
and
repnz
mov
imul
pop
leave
push
mov
jbe
adc
inc
mov
pop
sar
jmp
(bad)
ins
stos
mov
das
movs
movs
sub
mov
adc
adc
mov
int3
and
loopne
test
icebp
mov
mov
or
inc
push
jb
ja
aad
sub
daa
cmp
fs
in
adc
ja
or
clc
cli
ret
sub
jo
(bad)
jns
in
jle
and
fnstcw
jecxz
push
pop
mov
pop
inc
pop
jl
out
popf
xchg
push
test
sub
popa
jb
popf
int3
movs
adc
adc
aad
sqrtps
fcmovnu
mov
mov
nop
sbb
cmp
loop
pusha
in
sahf
sar
jmp
test
pop
ins
add
and
(bad)
sub
xchg
mov
test
push
bound
pxor
(bad)
mov
sub
sbb
xchg
sub
xor
mov
jmp
mov
daa
aas
das
lods
push
mov
fsin
outs
mov
lods
mov
mov
in
imul
sahf
adc
dec
jb
jmp
and
jl
sbb
(bad)
cmp
aam
jp
mov
cld
pop
ror
mov
dec
xchg
sbb
call
push
inc
dec
mov
out
fld
leave
imul
mov
cld
cld
mov
les
xor
stos
sbb
push
cmps
fiadd
(bad)
shr
mov
push
mov
xor
lods
dec
jne
hlt
popa
aas
push
add
cmp
pop
rol
xchg
stos
xlat
fcomp
sbb
sar
retf
mov
shl
sar
dec
push
repz
lock
mov
push
int3
sbb
ret
add
das
mov
es
push
or
call
pop
je
cmps
push
mov
pop
xor
jg
gs
(bad)
push
lds
call
mov
cmp
(bad)
sbb
fs
push
sub
xchg
sbb
jno
xor
mov
cli
jg
sahf
into
mov
dec
(bad)
aam
xchg
fs
dec
mov
dec
cli
jecxz
dec
mov
or
stc
or
push
fprem
sub
je
(bad)
lea
(bad)
daa
mov
lock
xchg
mov
mov
nop
mov
mov
je
inc
aaa
jl
shr
mov
mov
sbb
ins
dec
ror
xchg
pop
xchg
je
jmp
stos
push
ds
sbb
pop
xor
cli
pop
or
inc
inc
loopne
lea
fisub
adc
pop
or
int
jnp
sub
test
lahf
adc
bound
lock
and
(bad)
pusha
dec
dec
sub
(bad)
jnp
or
leave
rol
push
push
into
mov
push
jno
fst
ret
and
cmp
retf
adc
pop
xlat
sub
pop
sub
mov
jl
imul
jb
loopne
pop
xlat
daa
cs
cmp
int3
and
sar
imul
mov
stos
mov
lods
and
fidivr
jg
sar
pop
inc
jnp
push
xchg
inc
ds
xchg
fndisi(8087
daa
pop
lea
cmp
movs
sbb
jae
imul
and
or
mov
push
fnsave
xchg
les
je
push
test
sti
adc
add
scas
mov
dec
dec
jl
sbb
fsubr
push
jns
inc
xor
cdq
inc
and
mov
xchg
icebp
jp
or
das
aad
out
or
fdiv
pushf
stos
cwde
and
xchg
cs
das
cmp
and
xchg
test
xchg
mov
fcmove
(bad)
jge
mov
ins
stc
in
xor
sub
pushf
js
fisub
lods
mov
in
stos
inc
cmp
mov
test
pop
inc
(bad)
sbb
test
xor
push
inc
pop
arpl
cmp
lahf
hlt
inc
xor
add
outs
dec
push
icebp
inc
xlat
int3
pop
dec
dec
pop
xor
repnz
mov
mov
xchg
xchg
jmp
dec
mov
mov
sahf
idiv
ja
mov
xor
sbb
fcomp
dec
repz
das
repnz
test
lock
or
and
add
test
in
push
fild
xor
push
sahf
aaa
mov
es
stos
sbb
loop
adc
push
dec
into
fsub
jecxz
xchg
js
rcl
adc
pop
xchg
xchg
clc
xchg
in
sbb
mov
or
xchg
or
cmp
pop
sub
push
xchg
mov
js
adc
pop
lods
test
in
outs
je
(bad)
add
cmps
cmp
sbb
int3
or
adc
sbb
mov
push
adc
xchg
fbld
mov
add
fnstsw
xor
mov
inc
add
ror
push
inc
and
mov
sbb
mov
and
pop
lods
jecxz
arpl
repnz
out
mov
xlat
sbb
jge
rcl
cmp
ret
sti
sub
sbb
inc
jno
popf
enter
fwait
cmp
fsubr
int3
xchg
pop
in
inc
jbe
lods
fsub
xchg
mov
sub
cwde
push
cmp
(bad)
mov
dec
xchg
ror
jp
daa
cmp
sub
xchg
sub
push
push
sbb
sbb
loope
add
xor
adc
movs
aam
push
imul
lahf
jmp
sahf
adc
adc
hlt
sbb
inc
rol
cs
dec
push
ret
(bad)
xchg
dec
mov
nop
call
jg
inc
dec
lock
pushf
add
mov
ret
cmps
fdivr
loopne
cmc
add
scas
xchg
ins
cwde
dec
and
inc
fs
outs
jno
pusha
add
and
mov
cdq
fidiv
ds
cmp
(bad)
iret
mov
xor
cmp
outs
pusha
mov
and
outs
xor
pop
int3
mov
pop
mov
push
(bad)
mov
call
xchg
pop
icebp
jne
xor
icebp
imul
lods
pusha
xlat
cdq
jns
add
in
mov
jge
or
jnp
xor
sbb
mov
cmps
pop
ds
pushf
mov
push
in
popa
xor
cmp
and
jae
lea
jbe
sahf
repz
jge
sub
push
cmp
pop
and
(bad)
nop
cli
int3
stos
lea
out
or
inc
nop
xor
xchg
xchg
popa
pop
loopne
xor
cmps
and
rol
add
add
mov
push
arpl
loope
push
jb
movs
sub
sbb
cmps
scas
mov
int
int
out
inc
xchg
push
cld
lock
or
repnz
jle
mov
mov
fcmovnu
(bad)
repnz
cmp
dec
movs
cdq
ror
loop
stc
sahf
dec
jbe
imul
pop
lahf
mov
imul
call
pop
sub
and
(bad)
in
repz
ja
lock
push
retf
fldenv
mov
mov
jb
push
fdiv
sbb
shr
sub
ret
mov
adc
xchg
dec
cmp
(bad)
jmp
mov
pop
jno
(bad)
es
pop
jp
adc
add
into
sbb
call
push
repz
mov
jmp
pop
sub
int3
aam
jno
stos
xchg
jg
loope
(bad)
clc
push
push
adc
dec
les
popf
jecxz
cld
cmp
mov
sub
movs
xchg
dec
sub
fldcw
xor
ss
xor
xchg
repz
loopne
push
jl
mov
adc
bound
dec
dec
pop
fcom
mov
(bad)
dec
sti
mov
inc
aam
lods
std
int3
adc
xchg
movs
push
inc
mov
pop
scas
mov
sub
aam
loope
sbb
xchg
sub
inc
xchg
gs
cmp
nop
psubusw
sbb
mov
cmc
add
in
sti
aam
pushf
mov
leave
adc
sbb
int
daa
cmp
int3
inc
dec
fwait
lock
xor
mov
jecxz
xor
stos
retf
loope
je
push
cmps
sbb
push
mov
cmp
mov
(bad)
std
fidivr
jg
xchg
lods
out
cmc
or
pop
(bad)
push
dec
dec
aam
loop
or
hlt
mov
jg
data16
push
not
fisttp
sar
cmps
(bad)
das
cdq
daa
aas
jb
xlat
pop
imul
dec
dec
lock
retf
lods
xor
and
ror
jecxz
jg
jecxz
mov
push
ins
stos
add
inc
or
in
aas
and
dec
lea
xor
(bad)
aas
dec
fst
cmp
or
inc
jae
(bad)
add
jge
mov
sahf
(bad)
dec
sti
pop
xchg
cmps
and
stos
add
icebp
daa
or
xor
mov
mov
or
call
fiadd
pop
mov
mov
push
sub
shl
jle
mov
(bad)
mov
mov
lods
fldl2t
test
sti
test
or
inc
ret
cmp
popf
mov
ins
out
leave
popa
xchg
jp
ss
mov
xor
aas
sti
lahf
pop
pop
pushf
and
add
push
cld
out
fwait
push
das
or
xor
xor
inc
xor
jge
cmp
je
fist
out
mov
(bad)
or
popa
daa
mov
xor
pop
pop
push
fmul
repz
mov
repnz
xchg
pop
shl
test
cli
inc
shl
sti
mov
leave
mov
int3
mov
ins
mov
sbb
in
xor
or
movs
call
jp
fimul
xor
lock
fwait
call
std
dec
shl
push
or
pop
lds
inc
ja
inc
gs
popa
and
mov
iret
add
inc
call
mov
mov
repnz
add
push
in
rcr
dec
inc
repz
iret
mov
outs
jae
xlat
cs
jbe
call
iret
push
cmp
es
inc
fidivr
xchg
mov
in
mov
(bad)
xchg
mov
sbb
jge
push
sbb
push
popa
pop
outs
ja
call
imul
and
or
sbb
hlt
xor
mov
or
cmp
cmp
pop
push
clc
jno
pop
sbb
mov
fild
pushf
mov
add
push
lods
mov
arpl
adc
mov
mov
(bad)
pop
std
clc
pop
aam
ja
mov
iret
in
cmp
add
inc
(bad)
xchg
cmps
pop
jecxz
imul
jbe
adc
out
add
in
rol
std
mov
push
int
xor
inc
pop
and
fs
dec
jne
sub
stos
sub
imul
pusha
sbb
sub
fist
mov
retf
pusha
fstp
add
pop
pop
ret
cmp
mov
and
ins
pop
aas
mov
or
xor
mov
xchg
loopne
imul
daa
or
jp
sbb
js
mov
out
mov
or
mov
(bad)
xchg
mov
inc
fdivr
inc
das
inc
out
jbe
mov
in
jp
mul
jge
xchg
inc
in
dec
pop
sub
mov
call
xchg
push
mov
or
jp
hlt
stc
add
in
icebp
fcomp
xor
jmp
repz
or
dec
mov
fstp
adc
pop
mov
sbb
data16
test
cs
dec
fistp
int3
dec
and
sub
sbb
lahf
xchg
bound
dec
adc
mov
rol
sti
loope
fdiv
mov
xchg
adc
adc
mov
movs
gs
mov
outs
add
cmp
fwait
sub
adc
push
mov
jne
imul
ss
inc
iret
inc
pop
sub
inc
pop
sbb
mov
mov
test
jno
pop
scas
xor
mov
and
mov
sar
xor
sub
mov
popa
inc
mov
les
mov
adc
jmp
inc
mov
cmps
add
mov
(bad)
and
cmp
repnz
out
test
xor
retf
inc
imul
dec
pop
aas
outs
push
dec
cmp
pop
mov
call
int3
or
pop
push
aad
iret
sbb
mov
jl
lods
imul
mov
adc
mov
push
iret
fld
push
jl
cmc
sbb
ja
pop
pop
push
repnz
xor
jp
pusha
inc
xlat
int3
(bad)
ins
jge
mov
sti
pop
sub
mov
retf
pop
mov
and
iret
pop
movs
push
or
enter
mov
fldcw
aam
mov
mov
das
xor
push
and
add
jo
int3
mov
stos
enter
test
aad
pop
lods
mov
mov
enter
leave
sbb
stos
add
add
jns
mov
mov
add
sub
(bad)
mov
int3
punpckhdq
movs
out
sti
fdivr
std
fdiv
popf
lock
int
in
ret
fstp
add
es
cmp
cmp
xchg
out
cwde
adc
fnstcw
mov
out
int3
mov
inc
sbb
mov
sub
retf
aas
push
loop
(bad)
std
jge
mov
cmps
or
enter
or
fsub
cmps
loope
dec
scas
mov
std
les
add
inc
mov
sbb
pop
jp
rcl
inc
pop
outs
xchg
repnz
xchg
pop
jae
fild
xchg
retf
mov
ror
jne
sbb
loopne
sbb
push
pushf
mov
dec
mov
jb
xlat
add
movs
sbb
cli
aad
fadd
stc
cmp
les
and
push
fbld
xchg
and
sub
popf
cli
inc
jmp
jmp
adc
mov
nop
in
add
jo
dec
jge
jno
dec
sub
inc
mov
xchg
cmc
cmp
in
inc
adc
xor
int3
sbb
sbb
ins
mov
imul
xchg
mov
xchg
jb
imul
and
sub
and
stos
mov
lds
and
xor
xchg
cs
push
cli
mov
cdq
loope
mov
jbe
sbb
(bad)
test
add
and
push
retf
sub
ss
inc
jae
das
mov
inc
addr16
ins
xlat
sub
pop
lods
sub
cmp
(bad)
(bad)
mov
jl
enter
stc
push
aas
pop
test
icebp
inc
pop
dec
test
add
pop
je
aaa
sbb
int
aaa
pop
pop
loope
jb
pop
(bad)
pop
lds
push
dec
sub
cmp
cmp
inc
neg
mov
sub
cwde
int3
cmp
inc
clc
inc
cmp
cmp
aas
sbb
fnstenv
ja
jbe
lahf
iret
stos
mov
ins
stos
clc
shr
mov
mov
add
shl
mov
push
mov
fs
das
xor
jmp
inc
sbb
test
dec
dec
bound
rol
sbb
std
call
adc
jnp
ficom
xor
test
out
mov
xchg
or
shl
cli
in
stc
int3
pop
and
mov
jmp
lock
ins
gs
xchg
movs
test
dec
adc
push
xor
sbb
or
bound
movs
jo
call
inc
mov
dec
jp
mov
inc
(bad)
mov
dec
lods
aad
jbe
and
aad
or
fisub
out
dec
pop
and
shrd
(bad)
fstp
or
jbe
mov
inc
xor
sub
stos
out
mov
adc
xor
call
and
inc
xor
je
add
xchg
ds
push
fnstcw
or
jnp
jb
int
into
test
pusha
pop
cli
rol
mov
loop
gs
sbb
inc
movs
xor
dec
pop
push
pop
sbb
add
cmc
pop
sub
dec
inc
out
xor
mov
or
pushf
jge
xchg
jge
shl
inc
popf
sbb
push
mov
sahf
ficom
(bad)
or
iret
sar
out
sbb
inc
jmp
add
add
inc
sub
mov
inc
cmp
ror
cli
sahf
inc
cmp
add
pop
cmp
xor
push
inc
push
jne
sbb
fst
mov
adc
cmp
iret
lea
jge
or
push
cmc
rcl
ds
sub
aas
in
jmp
(bad)
fldcw
dec
cmp
inc
call
(bad)
nop
imul
push
pusha
inc
rcr
and
cmp
jle
sbb
or
xchg
hlt
cmps
cmp
xchg
aaa
ja
pop
add
lds
xor
shl
cmp
mov
dec
cli
test
pop
adc
test
inc
popa
sub
xor
cmp
mov
xor
(bad)
ret
mov
popa
retf
mov
push
clc
test
mov
push
mov
pop
push
mov
stos
sbb
sub
pop
xchg
push
scas
movs
cld
inc
in
cdq
mov
mov
dec
jae
loop
mov
mov
cli
fcmovne
xor
mov
icebp
dec
pop
and
rcl
mov
jmp
adc
hlt
pop
shl
add
cmps
loop
adc
ins
or
mov
jg
pop
add
and
dec
addr16
add
adc
add
mov
pop
popf
cmps
sti
cmps
sbb
mov
push
cwde
mov
in
and
icebp
fst
jg
js
cld
arpl
inc
call
xor
ret
or
xor
pusha
cmps
jge
and
and
jo
inc
pop
add
mov
dec
sti
mov
test
retf
popa
imul
dec
jle
pop
push
rol
mov
loop
es
push
nop
adc
inc
(bad)
xlat
call
leave
clc
cdq
pop
mov
mov
dec
cmp
push
js
adc
mov
(bad)
pop
jmp
rol
jl
in
test
push
sub
sbb
test
stos
mov
sbb
fmul
pop
mov
jne
cmp
sub
stc
rcl
pop
xchg
dec
movs
add
data16
jge
repz
daa
clc
repnz
lock
aad
jnp
xchg
je
mov
inc
xor
sbb
lds
lods
push
pop
dec
sti
mov
sub
push
xchg
mov
xchg
repnz
cmp
data16
clc
jl
xor
cmp
adc
stos
xor
and
pop
(bad)
and
cmps
lods
popf
or
jb
inc
cmp
in
iret
push
daa
and
cmp
loop
jl
shl
in
mov
inc
ja
lahf
shr
sub
fcmove
fimul
pusha
rcr
stos
mov
icebp
int3
popa
cld
pop
movs
aad
mov
cmps
fbld
(bad)
ret
and
rcl
rcr
adc
clc
mov
jbe
sbb
popf
and
test
in
push
outs
dec
sbb
fwait
and
leave
push
test
jo
ins
into
adc
rcl
ja
aas
mov
les
retf
cld
std
and
push
jmp
(bad)
push
sub
pop
cmc
pop
inc
aaa
cdq
fld
sbb
cmc
movs
aas
and
fild
jp
adc
push
cmps
and
inc
jbe
push
pusha
dec
and
inc
in
inc
cmp
mov
cmp
xor
(bad)
arpl
test
cwde
mov
call
iret
cwde
fld
loope
rol
outs
dec
out
stos
cs
movs
push
retf
cli
dec
aaa
mov
mov
(bad)
and
dec
lahf
jg
and
dec
add
test
jp
ss
fcomp
push
cli
push
xchg
mov
arpl
jg
sub
mov
push
jb
es
push
pop
jecxz
xor
std
dec
adc
movs
test
xor
lods
cmc
jae
push
and
rcr
mov
js
sti
xchg
cmps
mov
jnp
pcmpeqw
call
iret
mov
in
enter
jno
bound
jg
and
add
pop
shl
cmp
shl
movs
mov
(bad)
cmps
push
inc
lea
and
xor
xlat
sub
out
ss
jecxz
fisub
fs
lods
repz
xchg
jg
cmp
jae
aad
adc
cld
mov
or
push
out
int
add
mov
inc
repz
fnsave
daa
jne
pop
icebp
push
test
dec
cmovle
cwde
(bad)
aas
stos
pusha
popa
mov
or
xlat
pop
or
add
cmp
das
sub
hlt
or
jae
jbe
fadd
sub
mov
test
jnp
in
mov
sti
jle
imul
cmp
nop
mov
sub
leave
xor
inc
lds
in
or
das
clc
hlt
xchg
cwde
(bad)
cmp
fmul
icebp
jge
push
push
mov
jp
xor
or
imul
test
das
pop
and
addr16
ins
mov
js
lods
repz
gs
cs
xchg
pop
mov
sbb
push
sbb
xor
push
popf
adc
(bad)
jns
jo
and
or
fsincos
sbb
popf
int
les
pop
jnp
adc
cmps
lea
xor
lods
or
sbb
int
pop
sbb
fwait
cli
mov
sub
push
mov
imul
inc
lods
sahf
(bad)
movs
jbe
inc
mov
or
mov
adc
pop
push
adc
push
mov
xchg
add
fidivr
ror
hlt
sbb
mov
mov
out
out
hlt
adc
jno
sahf
arpl
xor
add
add
ins
push
inc
out
ss
xchg
adc
inc
test
xchg
shl
jb
jle
retf
(bad)
fisttp
add
call
dec
into
movs
sub
fldcw
out
add
cmp
inc
add
cmp
cmp
adc
add
ja
adc
dec
mov
pop
aaa
xchg
fdiv
mov
imul
pushf
adc
sbb
pop
scas
dec
int
cmp
cmc
je
je
fcomp
mul
rdtsc
pop
stos
ds
jle
mov
out
pop
idiv
push
sbb
jmp
add
ins
add
int
out
scas
fcomp
pop
xchg
fistp
out
inc
shl
push
in
fsub
pushf
push
adc
inc
pop
in
ror
xor
adc
push
out
arpl
cmp
mov
add
iret
imul
adc
fadd
add
pop
push
adc
(bad)
push
in
imul
jne
push
fwait
add
js
repz
mov
gs
test
aas
loope
push
outs
cmp
dec
mov
in
xchg
add
ds
out
push
cmp
mov
inc
adc
push
retf
cs
xchg
mov
pushf
(bad)
dec
mov
les
pop
call
xor
std
mov
pusha
xchg
add
and
jmp
jns
pop
(bad)
shl
or
icebp
loope
pop
shl
mov
jmp
gs
adc
cmc
jmp
movs
imul
out
jne
or
cmp
adc
enter
clc
add
pusha
les
mov
js
pop
cwde
dec
test
fadd
push
arpl
adc
mov
pop
push
inc
cmps
mov
jo
je
cmp
inc
xchg
cdq
or
cmp
mov
sahf
shr
ret
cmp
inc
clc
push
xor
sub
ins
pop
retf
loopne
or
repz
or
pop
stos
pop
adc
mov
inc
mov
repz
push
inc
jae
push
jmp
out
pop
push
add
cmp
cmp
out
int
sbb
xor
into
xor
inc
xchg
jnp
icebp
push
push
push
push
push
push
out
aas
xlat
scas
in
inc
xchg
xchg
test
fstp
cli
dec
inc
and
cmp
xchg
popf
or
mov
lahf
sar
retf
or
lods
aas
pcmpeqw
int
sub
cmps
jno
call
mov
(bad)
rcl
push
mov
and
adc
into
repnz
xchg
enter
cwde
int3
nop
mov
aad
push
addr16
cmc
cs
fst
mov
stos
fwait
sbb
push
xor
pop
inc
in
add
repnz
in
inc
jg
inc
rcl
mov
adc
gs
pop
ret
sti
sub
je
and
xchg
js
les
cwde
dec
push
mov
mov
jmp
cmp
cmp
scas
add
mov
scas
fs
rcr
or
cdq
iret
in
aas
inc
ficomp
cs
mov
inc
dec
and
test
push
daa
add
pop
(bad)
in
mov
stos
in
mov
ficomp
int
shr
sbb
ss
push
pop
imul
cdq
mov
lock
(bad)
jecxz
ds
adc
sbb
mov
ret
das
xchg
mov
cld
retf
retf
and
ret
(bad)
out
jnp
inc
(bad)
cmp
xor
call
shl
or
mov
push
popa
mov
and
(bad)
xlat
out
mov
xchg
(bad)
or
sbb
pusha
sbb
sub
mov
out
pop
das
jg
loope
cli
add
push
js
and
call
int3
inc
nop
std
mov
jne
mov
mov
fild
stos
mov
scas
fild
dec
push
xchg
cmp
sbb
jae
retf
dec
xor
inc
ffree
sbb
cmp
pmulhw
mov
cmp
xchg
mov
in
adc
xor
sbb
inc
cmp
clc
gs
imul
lds
std
inc
inc
add
mov
or
test
jae
mov
enter
push
sbb
hlt
cdq
mov
add
aaa
stos
dec
jmp
adc
lds
cmps
sbb
ret
mov
das
and
sbb
aaa
sbb
or
imul
lock
dec
add
xor
nop
xor
sahf
jb
push
dec
xchg
dec
repnz
xchg
or
dec
push
loope
inc
and
test
jp
loopne
scas
lods
pop
or
mov
mov
adc
leave
xor
sub
or
or
cmp
retf
clc
retf
data16
xchg
in
add
stos
xor
and
and
mov
jnp
adc
mov
xchg
or
mov
or
in
push
test
jae
loope
in
les
mov
adc
adc
sbb
inc
dec
call
aam
(bad)
ja
mov
es
sub
lock
push
aas
int
gs
and
and
enter
mov
mov
sub
dec
test
inc
adc
adc
add
and
pop
cmps
or
clc
and
adc
fidivr
ss
retf
jne
pop
push
out
jnp
xlat
jmp
daa
add
cmps
ins
sub
in
test
inc
pop
retf
ins
pop
fwait
add
fwait
pop
pusha
pop
sub
aam
out
dec
ss
mov
data16
mov
iret
popa
(bad)
cld
mov
add
retf
inc
xchg
fidivr
data16
(bad)
into
xchg
jns
clc
outs
xor
mov
inc
add
cmps
add
adc
call
and
or
jb
mov
add
popa
jl
adc
aam
mov
push
dec
and
ret
ret
shr
pop
into
and
sti
sub
imul
or
mov
div
mov
and
in
rcr
sbb
sub
push
je
sti
test
imul
jb
stos
stos
push
and
inc
test
mov
ror
jbe
in
mov
pop
inc
fs
loope
jb
in
mov
push
nop
mov
pop
jno
(bad)
cmp
out
cmp
and
lock
mov
mov
pop
mov
sub
jbe
pop
gs
cmp
movs
mov
adc
sub
xchg
and
mov
mov
out
leave
cmc
sbb
sub
movs
mov
pop
mov
inc
xor
and
prefetch
shr
pop
push
cmp
hlt
imul
adc
mov
jecxz
in
cld
lea
cdq
xchg
mov
push
aad
sar
push
in
out
in
pop
pop
inc
add
cs
xchg
push
scas
ds
les
imul
movs
and
add
cs
(bad)
div
dec
push
daa
inc
add
jbe
cmp
mov
sbb
pop
push
or
jns
out
xchg
mov
test
push
lods
push
fld
mov
or
push
adc
test
mov
mov
pop
dec
or
(bad)
aas
push
ja
ins
mov
pop
mov
sbb
push
push
fidiv
rcl
cs
xlat
mov
rcr
les
xor
pop
cmp
ss
lea
xor
xchg
pop
ss
xchg
mov
inc
pop
scas
icebp
push
ja
dec
es
div
outs
dec
mov
cmp
nop
cmp
fdiv
clc
loopne
jb
jge
adc
int
(bad)
mov
mov
adc
dec
lods
test
adc
adc
mov
or
fistp
out
arpl
sar
(bad)
xor
xor
out
sti
jg
sub
fnstcw
aad
add
or
and
pop
push
in
adc
mov
dec
bound
test
xor
mov
mov
xor
add
ficom
lods
neg
stc
pop
jge
mov
jbe
xor
pop
lea
icebp
fild
inc
jno
jge
popf
adc
out
push
sar
dec
mov
pop
and
or
sbb
jns
gs
adc
and
or
pop
retf
out
mov
jp
sahf
repz
or
neg
sub
(bad)
push
(bad)
int3
call
out
fisub
inc
xlat
cmp
push
xlat
(bad)
fnsave
popf
test
out
gs
mul
in
movs
sbb
or
or
mov
inc
inc
sbb
rcl
inc
iret
lea
mov
jne
inc
cmp
adc
popf
int
mov
outs
inc
not
pop
cmc
icebp
and
push
aaa
jns
xchg
add
aas
add
add
mov
sub
stc
inc
std
sti
clc
mov
xlat
mov
mov
iret
int
or
xor
lahf
pop
es
jne
imul
sbb
adc
mov
inc
movs
adc
imul
call
push
push
in
test
cmp
fsubr
mov
cld
inc
xor
mov
scas
add
jo
push
test
loop
pop
cmp
jmp
push
pop
push
dec
pop
push
in
aas
mov
fiadd
(bad)
pop
je
nop
cmp
pop
dec
jle
inc
stos
pop
nop
imul
mov
pop
sar
pop
cmp
adc
xor
adc
call
push
dec
ficomp
or
inc
loope
stc
cli
int3
push
mov
push
std
shl
mov
test
xchg
xchg
jp
adc
pop
rcr
mov
pop
cmps
jmp
push
push
lods
push
pop
pop
leave
cli
xchg
sahf
dec
lods
and
pop
test
mov
dec
push
retf
nop
imul
sub
lods
push
leave
pop
dec
dec
out
loope
aaa
out
lods
add
leave
je
push
xor
in
push
adc
stos
(bad)
rol
sbb
es
xchg
pop
sbb
pop
rcl
mov
inc
pavgw
rcr
movs
pop
lock
pop
test
les
mov
fisttp
mov
inc
xor
cmps
mov
mov
(bad)
xchg
cld
shl
cwde
sahf
sbb
and
xchg
shr
scas
xchg
dec
xchg
dec
cmps
adc
pop
or
push
mov
popaw
scas
dec
adc
sahf
sub
inc
mov
shl
push
push
loope
adc
ds
add
loop
mov
aaa
pop
dec
jns
test
out
mov
lea
inc
mov
scas
dec
mov
jl
fcomp
jbe
enter
jle
fwait
jmp
call
sub
xchg
add
sbb
aaa
dec
and
(bad)
leave
out
fwait
xchg
mov
inc
cld
mov
jmp
hlt
and
int3
push
int
inc
mov
ret
das
stc
out
mov
jle
dec
push
movs
mov
xor
xchg
jno
fwait
repz
imul
in
iret
shl
inc
push
ror
xchg
cmp
call
scas
push
jg
push
outs
jae
(bad)
retf
mov
repz
fsub
inc
fisub
push
mov
pop
lock
loope
mov
xchg
inc
retf
mov
popa
nop
pusha
jnp
push
jbe
outs
lods
xchg
mov
mov
or
mov
mov
jo
jne
fsubrp
cmc
dec
xor
shr
mov
(bad)
std
jnp
aad
gs
pop
push
stos
push
mov
lock
stos
dec
popa
fs
cli
xor
sbb
push
(bad)
adc
ss
mov
push
and
sbb
(bad)
cmps
push
nop
adc
loop
arpl
pusha
mov
das
cmp
pop
repnz
dec
sbb
cld
mov
jb
jmp
test
jle
addr16
xchg
loopne
ja
(bad)
pop
ret
cmps
enter
cmp
arpl
ins
call
dec
jo
(bad)
(bad)
scas
inc
dec
jp
push
push
push
repnz
add
jmp
add
hlt
leave
sti
sti
addr16
push
iret
leave
mov
inc
fmul
repz
(bad)
mov
jle
push
lahf
fld
jecxz
out
leave
add
push
hlt
push
mov
mov
cs
xchg
popf
pop
rcr
inc
ror
xchg
ret
dec
sahf
mov
pop
cld
out
xchg
pop
not
mov
dec
jl
push
pop
retf
popf
inc
test
sbb
xchg
lahf
es
movs
jecxz
inc
ret
jns
scas
push
or
sbb
ffree
pop
push
ins
dec
movs
mov
xchg
out
sub
dec
and
mov
and
retf
gs
cmps
aas
fs
into
mov
push
daa
add
hlt
repnz
test
imul
call
adc
aaa
enter
aas
xchg
inc
addr16
cdq
add
pop
xchg
mov
dec
jb
add
lahf
mov
and
out
inc
(bad)
jecxz
in
add
movs
(bad)
fcos
pop
sbb
add
std
addr16
cmp
dec
pop
cmp
div
addr16
loop
cmc
lods
push
aaa
ds
sahf
dec
addr16
dec
mov
(bad)
xor
mov
cmp
mov
xlat
inc
call
lea
pop
pop
or
sub
(bad)
push
outs
pusha
fld
xchg
fnsave
and
xor
adc
call
mov
mov
inc
arpl
ins
jb
in
dec
adc
fwait
(bad)
shr
xor
add
mov
sbb
std
leave
adc
mov
rcl
sahf
xor
les
popa
or
mov
scas
popa
and
mov
lea
jge
pop
inc
inc
nop
push
out
fcom
sub
stc
inc
adc
sbb
xor
mov
fwait
test
(bad)
call
xchg
imul
adc
ins
repz
add
cmp
mov
jecxz
outs
lahf
mov
bound
loope
aaa
inc
stos
jmp
cmps
das
pop
mov
adc
xchg
inc
scas
mov
call
sar
fld
(bad)
fisubr
ss
out
test
pop
outs
dec
or
inc
dec
dec
into
adc
or
sbb
mov
inc
push
dec
inc
sub
iret
in
(bad)
std
dec
push
repnz
or
call
mov
ret
mov
add
or
out
dec
out
out
int3
sahf
sti
push
push
in
stc
push
je
cwde
adc
adc
xchg
mov
pop
cmp
push
jnp
xlat
out
xchg
pop
mov
call
mov
sti
or
dec
shl
xchg
sub
xchg
xor
hlt
jae
loopne
mov
imul
lahf
sbb
push
stos
push
pop
vcmpss
(bad)
dec
dec
pop
sbb
mov
test
sub
(bad)
in
jle
cmp
gs
nop
or
jmp
fld
scas
xchg
cdq
xor
outs
out
jp
retf
sbb
xchg
inc
les
inc
hlt
popf
(bad)
sbb
sbb
mov
dec
pop
cmp
jge
test
jecxz
xchg
sub
imul
or
push
xor
add
add
jl
inc
mov
bound
imul
out
mov
das
or
push
push
popf
pop
mov
stos
sub
jmp
pop
or
ffree
or
daa
xor
push
scas
mov
or
inc
ret
xchg
mov
inc
push
mov
gs
fcmovnb
outs
ret
add
pop
xor
not
outs
dec
les
mov
in
adc
xor
mov
push
push
inc
adc
add
je
push
add
push
sub
cdq
adc
pop
inc
into
sbb
mov
leave
leave
dec
loope
adc
or
rcr
push
adc
jbe
mov
xlat
enter
cmp
cmp
(bad)
repnz
cmps
pop
loopne
push
bound
inc
inc
add
adc
mov
sbb
call
cmps
and
(bad)
xlat
xchg
jmp
push
pop
js
dec
cmc
popa
mov
mul
pop
fdivr
int
mov
dec
(bad)
jge
or
lahf
dec
popf
aas
pop
jbe
repnz
push
dec
gs
enter
ss
pop
stos
pop
adc
sbb
int
pop
shr
mov
or
mov
lods
jge
adc
dec
stos
jg
enter
adc
pop
sub
ss
inc
rcr
mov
dec
fdiv
push
push
outs
sub
or
arpl
inc
fldenv
cmps
and
jae
loop
cmps
(bad)
fs
jb
add
pop
jo
loope
out
cmp
inc
loope
bound
lds
or
scas
pop
lahf
mov
push
pop
add
or
push
pop
xchg
xchg
movs
or
fidivr
fmul
and
sub
movs
jno
add
outs
pop
or
out
mov
fst
int
movs
jl
mov
and
outs
rol
call
fbld
ror
jb
add
out
push
sub
inc
xchg
add
jnp
into
iret
(bad)
or
adc
(bad)
xchg
movs
adc
xor
ins
and
inc
sbb
jmp
or
retf
cmp
test
adc
(bad)
and
out
pop
in
pop
push
adc
(bad)
sub
idiv
int3
jge
mov
sti
sub
sub
fild
ret
xor
and
inc
cmps
imul
jle
mov
add
inc
arpl
push
or
push
cld
retf
arpl
dec
nop
adc
shr
fwait
dec
pop
jns
aam
dec
sbb
fisttp
loop
sbb
push
inc
mov
adc
js
add
mov
or
jno
daa
sbb
jle
add
mov
loop
bound
not
sbb
lods
push
fsub
(bad)
pop
fcom
fild
cmps
sub
jb
arpl
loop
and
enter
fwait
arpl
das
retf
push
pop
mov
sbb
shr
imul
xlat
shr
cmps
cwde
xor
push
and
xchg
and
sbb
pop
lock
sub
cmp
push
enter
jmp
sub
dec
je
into
xor
out
fwait
imul
fisttp
loope
mov
mov
push
cmp
sub
fsubr
add
mov
jne
jge
push
or
leave
inc
fdiv
sar
(bad)
out
mov
sbb
out
inc
push
data16
rcl
or
addr16
pop
xlat
(bad)
mov
fild
adc
mov
lods
sbb
cli
std
mov
mov
cmp
or
loope
mov
mov
xor
shl
jp
mov
cmp
xchg
mov
ret
jmp
div
sbb
out
inc
lods
add
(bad)
xor
or
pusha
xchg
cdq
sahf
sbb
sub
fcmovu
nop
lahf
inc
or
jg
push
sbb
xchg
fwait
xchg
rol
stos
fld
jns
stos
add
xchg
out
shl
rol
ret
je
adc
cmp
push
push
push
push
jge
jne
or
fs
adc
lods
(bad)
xchg
jg
mov
test
jbe
out
dec
out
mov
sub
adc
inc
dec
dec
(bad)
or
or
clc
out
ret
and
pop
add
inc
jl
(bad)
jmp
ins
jg
add
push
je
div
pop
out
out
shl
test
xor
fidivr
cwde
fwait
push
sti
nop
leave
jns
aam
push
dec
ins
stos
imul
cwde
loop
(bad)
js
test
sbb
xchg
mov
inc
lods
pop
cdq
gs
movs
lods
xchg
test
and
and
mov
push
push
sub
inc
xchg
cmp
mov
(bad)
data16
out
or
mov
xor
aas
sbb
xor
(bad)
mov
das
arpl
lock
enter
enter
js
aaa
push
xlat
adc
rol
jne
fdiv
sbb
movs
ret
inc
sbb
sbb
add
lods
arpl
(bad)
pop
fst
mov
mov
jg
enter
shl
retf
leave
stc
cs
mov
push
test
cmp
(bad)
push
mov
ins
push
iret
out
xor
sbb
mov
xor
dec
ins
cmp
les
ss
mov
(bad)
xchg
adc
inc
or
sahf
push
dec
sub
(bad)
mov
pop
cs
retf
inc
inc
scas
out
movs
adc
xchg
mov
mov
sbb
int
arpl
sbb
mov
mov
xor
sub
sahf
das
test
dec
jp
jecxz
js
add
lock
jmp
mov
xchg
cmp
xor
test
out
(bad)
rol
sub
mov
cmp
dec
push
mov
mov
in
sbb
jge
pop
sbb
push
leave
push
addr16
jo
shl
clc
sbb
jnp
cmp
test
ror
push
push
sbb
mov
stc
bound
pop
popf
aam
mov
pop
xchg
jbe
and
sub
jmp
cmps
mov
out
and
iret
movs
js
dec
imul
inc
pop
cmp
lahf
js
dec
popf
out
or
and
xor
inc
outs
pop
out
push
arpl
mov
jmp
mov
and
imul
stc
or
daa
pop
mov
addr16
xchg
cmp
lock
ret
mov
inc
cmp
out
popf
adc
mov
call
ror
mov
jp
fdiv
std
stc
jmp
sahf
mov
rol
adc
cmp
mov
repz
or
adc
adc
xor
cmc
scas
cmps
or
push
call
and
bound
dec
jg
adc
(bad)
(bad)
jp
mov
call
cmc
pop
loop
fidivr
mov
sahf
loopne
push
or
into
js
fiadd
dec
and
mov
and
icebp
cmp
or
in
cmps
lock
push
mov
mov
retf
xchg
xchg
adc
mov
inc
dec
stos
sti
(bad)
xor
dec
inc
repz
stc
jmp
xchg
rcr
mov
test
mov
je
adc
repz
sub
leave
test
lock
xor
fstp
mov
lea
popa
cmp
and
push
mov
push
(bad)
sbb
stc
push
imul
in
or
call
cwde
nop
call
cmc
lock
mov
fs
adc
push
push
f2xm1
adc
jge
out
(bad)
cmp
shl
dec
cmp
add
jne
jnp
lods
rcr
mov
xchg
loope
loop
jge
jno
mov
fstp
pop
fwait
(bad)
cmps
cwde
ja
or
addr16
es
mov
cmp
in
push
xchg
into
sbb
pop
sti
cmp
add
xchg
cmps
fs
and
add
movs
jae
push
push
call
inc
call
inc
call
push
add
adc
sub
iret
inc
inc
rep
fsubr
out
jl
and
dec
sahf
jo
sahf
jmp
(bad)
mov
sti
iret
adc
test
aad
loop
or
jmp
ss
ficom
push
adc
jmp
mov
dec
pushf
cmp
stos
jns
jbe
(bad)
iret
out
outs
(bad)
out
and
mov
cmp
pusha
sub
das
xchg
sti
mov
fisttp
and
xchg
mov
cmp
lea
sub
arpl
je
cmp
cmp
call
jle
mov
mov
pop
xor
cmp
add
and
dec
aad
xchg
xchg
push
dec
shl
jnp
adc
aad
shl
sbb
(bad)
adc
cs
fild
mov
jns
es
fiadd
jg
rol
sub
popf
inc
lahf
cmp
daa
adc
mov
cwde
mov
outs
xchg
dec
pop
jp
outs
outs
jle
call
ret
and
lahf
test
jle
push
nop
sbb
mov
mov
push
cmp
add
mov
jb
pop
jae
sbb
out
fld
out
mov
sbb
(bad)
out
ret
inc
out
fst
and
leave
in
push
ins
stos
stos
push
nop
mov
push
sbb
lds
outs
in
sub
cmps
add
imul
(bad)
cli
movs
jb
fdiv
js
xchg
popf
and
pop
mov
ds
in
inc
arpl
aas
fiadd
adc
popf
inc
adc
das
cmp
sbb
repz
sub
cdq
test
leave
pop
(bad)
cli
lds
mov
add
or
inc
dec
sub
xor
neg
sbb
sbb
add
mov
jbe
and
sbb
jmp
sub
out
call
imul
cmp
mov
aad
mov
or
inc
pop
push
and
pusha
sbb
nop
cmp
jge
icebp
aam
adc
call
das
repnz
add
sbb
ja
ret
pop
mov
xor
and
(bad)
mov
sub
xchg
fst
(bad)
and
sbb
ret
mov
jae
pop
push
jmp
sub
cmps
ja
imul
shl
pop
out
into
xchg
and
mov
out
and
imul
xchg
movs
ds
es
ja
push
movs
scas
into
or
into
adc
inc
popf
jmp
cmps
addr16
fisttp
(bad)
gs
mov
sub
sub
xchg
mov
fdivp
loop
ret
(bad)
scas
pop
adc
mov
lock
add
xchg
jmp
jge
pop
(bad)
sub
cmp
mov
xchg
mov
mov
xchg
mov
xchg
out
ficom
pop
cmp
pop
out
jno
xchg
mov
shl
sar
push
sub
lods
push
loopne
pop
inc
inc
pop
fmul
pop
adc
adc
cmp
loopne
test
rcl
push
adc
xor
(bad)
movs
push
mov
add
mov
adc
and
mov
(bad)
push
cld
dec
stos
gs
data16
jne
aad
mov
pop
loopne
pusha
fist
pop
add
rol
xchg
lock
cli
ss
popa
mov
sbb
push
mov
add
and
xchg
mov
dec
lock
out
push
push
jmp
jp
push
test
fidivr
mov
daa
pop
mov
out
icebp
(bad)
outs
out
xlat
shl
or
cmp
jb
aam
call
dec
cmps
out
pop
loope
adc
fstp
js
xchg
sbb
icebp
ins
sub
fwait
adc
in
jge
clc
push
je
es
add
add
vpsllw
retf
fadd
push
mov
xor
mov
fisub
jno
sbb
jne
xchg
cmp
xchg
dec
pop
cld
push
(bad)
aad
and
std
lods
xchg
int
cmp
and
mov
and
lea
icebp
shl
imul
adc
sti
jo
ret
test
retf
mov
dec
sbb
pop
fisttp
test
fmulp
mov
add
push
gs
leave
mov
call
xor
in
jnp
mov
scas
add
jns
ffreep
cdq
int
mov
adc
xor
fs
loope
repnz
jno
inc
stos
pop
mul
imul
jns
gs
outs
lea
adc
outs
test
cdq
(bad)
push
mov
mov
cmp
xor
xchg
jp
mov
sbb
dec
(bad)
xchg
and
adc
lds
das
test
sbb
push
push
inc
mov
cmp
inc
xor
stos
aaa
nop
pop
push
pop
arpl
adc
repz
in
fs
ret
push
arpl
enter
aas
inc
jmp
loopne
mov
les
out
mov
mov
aaa
fwait
mov
shr
cmp
jmp
ds
push
cmp
mov
pop
dec
mov
xchg
mov
sti
loopne
inc
sbb
and
hlt
(bad)
sbb
inc
fmul
cld
sti
mov
sub
jae
fdiv
lock
and
cmp
push
sub
push
sub
fsubr
cmps
outs
pop
pop
addr16
jae
pushf
mov
or
xor
lods
xor
in
pop
or
and
ret
sub
push
fistp
or
in
stos
sahf
js
out
ret
dec
aam
cs
xchg
loop
icebp
scas
iret
ret
(bad)
jmp
sbb
push
stos
cmps
cmp
sub
jne
pop
adc
mov
xor
popa
push
js
xor
cmp
or
push
in
xchg
cmps
dec
inc
sub
jbe
(bad)
cld
test
mov
push
mov
push
sar
pop
xchg
out
cmp
dec
sub
test
cmps
xor
stos
aad
loopne
(bad)
je
adc
movs
add
dec
pop
mov
add
sub
loope
or
mov
int3
pusha
ds
jp
(bad)
sub
pop
cmp
push
mov
iret
test
ror
jmp
mov
ins
ficom
(bad)
outs
or
mov
iret
pop
fbstp
xor
add
fwait
iret
mov
xchg
rcl
add
pop
ret
stc
mov
imul
inc
push
add
mov
jnp
retf
ins
popf
cli
(bad)
clc
add
cmp
and
xchg
test
rcl
daa
dec
jle
stc
sub
adc
jnp
push
xor
les
jbe
mov
hlt
pop
cmp
fcom
test
hlt
cwde
pushf
mov
loop
(bad)
clc
inc
and
jbe
(bad)
xchg
popa
pop
nop
sahf
or
call
mov
cmps
mov
push
inc
jne
pop
adc
rcr
add
pushf
adc
retf
cmp
xchg
jno
cli
popa
jecxz
fwait
adc
push
std
sbb
and
and
xchg
mov
or
les
xor
js
loope
retf
sub
sub
jl
int3
out
sbb
mov
popa
inc
mov
daa
shl
movs
cld
int3
nop
imul
clc
call
bound
leave
xchg
mov
test
and
shr
xchg
bound
repnz
sbb
(bad)
xchg
test
es
dec
jle
mov
bound
mov
cli
pop
pop
mov
cmps
pop
(bad)
adc
repz
pop
push
add
jns
mov
jb
mov
mov
xchg
enter
fdiv
sbb
mov
jmp
mov
lods
pop
sub
(bad)
in
push
mov
loopne
push
cmp
rol
call
jmp
xchg
mov
push
add
add
es
lock
jbe
std
call
fcomi
push
ret
ja
cmp
in
mov
xor
xchg
mov
daa
adc
js
sub
sbb
mov
(bad)
or
fistp
aad
xchg
mov
dec
adc
in
mov
movs
sub
adc
sbb
push
push
retf
mov
shr
cmp
push
fstp
or
pop
outs
jne
int
test
jns
push
dec
cmc
ss
loope
mov
cmp
sub
cmp
outs
fcos
pop
dec
mov
aad
les
in
xor
adc
icebp
push
dec
add
inc
sbb
push
adc
inc
mov
cmovb
xchg
mov
repz
cmp
mov
test
js
push
fstp
out
sub
shl
xchg
pop
idiv
push
inc
test
stc
(bad)
fist
jnp
push
stos
add
or
call
pop
jo
scas
fdiv
or
sar
xchg
out
mov
sbb
or
adc
xchg
adc
sti
push
sbb
cmp
pop
mov
xchg
or
lahf
mov
test
inc
sub
cmps
ror
into
cmc
dec
jl
jne
rcl
and
fldcw
cdq
pop
movs
mov
in
cmp
aas
inc
mov
push
test
xlat
xlat
push
outs
sbb
inc
ret
icebp
rcr
addr16
lods
push
jl
mov
bound
mov
sbb
ror
jle
sub
pop
and
leave
das
rol
pop
or
iret
in
mov
sbb
sbb
retf
xchg
or
adc
dec
adc
movs
mov
in
movs
(bad)
arpl
or
icebp
cmp
ficomp
sbb
push
jb
into
adc
js
test
pop
call
test
rcl
dec
pop
sbb
mov
inc
cs
add
sub
sbb
es
or
cmp
add
cmp
mov
push
adc
sti
jns
xor
dec
call
add
iret
cmp
push
sub
in
lds
dec
sub
in
jae
fnstenv
ins
test
and
(bad)
pushw
movs
jo
mov
mov
repz
xchg
cli
pop
hlt
in
sub
loopne
dec
mov
mov
shl
cdq
leave
jle
xor
test
mov
jne
cmp
jmp
pop
fld
sub
les
pop
or
je
(bad)
std
fwait
xchg
sti
adc
pusha
outs
pop
sub
mov
dec
es
pop
lahf
inc
mov
outs
mov
inc
and
iret
dec
pop
popa
or
mov
rcl
xchg
sub
ss
es
shl
mov
add
out
fcomip
dec
ror
dec
bound
in
push
mov
or
cmps
cmp
xor
into
arpl
push
pop
and
inc
stc
or
cmp
pop
inc
test
dec
and
xlat
jmp
cmp
das
sbb
jae
jge
fwait
sub
inc
fadd
xor
mov
mov
inc
dec
sub
call
mov
xchg
(bad)
test
neg
pop
dec
xchg
dec
xchg
ss
cmp
cmp
iret
hlt
xor
pop
call
xor
ins
xchg
sub
mov
mov
adc
cwde
inc
jae
jmp
aam
mov
adc
nop
leave
rol
imul
aad
pop
lods
sub
jle
ins
in
inc
scas
dec
add
imul
stc
(bad)
dec
movs
loop
xlat
push
out
ins
cs
mov
retf
dec
daa
pop
(bad)
rol
fwait
es
call
pop
ret
mov
xchg
pop
sbb
sub
(bad)
mov
je
pop
xchg
neg
sbb
rcr
clc
push
into
stc
sbb
xchg
scas
cmp
jmp
push
mov
jl
test
mov
test
add
sub
aaa
mov
retf
adc
(bad)
jmp
ror
mov
lods
(bad)
jo
jecxz
jb
sub
icebp
mov
test
dec
and
movs
lods
fstp
push
dec
cmp
ds
outs
in
add
pop
movs
pushw
sub
lods
int3
out
or
inc
cli
jle
inc
mov
outs
gs
sbb
in
scas
sub
xchg
push
test
movs
xchg
sbb
push
punpcklbw
xor
fbstp
daa
shl
jno
out
rcr
xchg
shr
pop
cmp
pusha
sbb
push
jmp
(bad)
push
icebp
and
or
adc
jmp
jno
imul
enter
stc
sbb
bswap
icebp
cmp
mov
cmps
jns
adc
inc
js
mov
xchg
sbb
cmp
pop
sbb
dec
jp
mov
iret
add
and
int3
dec
xor
push
sub
fisubr
cmps
(bad)
jle
sbb
push
xchg
ror
push
std
jmp
call
pop
push
(bad)
sub
retf
sub
sahf
outs
sti
in
lahf
retf
dec
sbb
ss
out
push
test
fnstsw
sar
xchg
dec
cmp
xor
scas
add
ins
cmp
inc
fnstsw
xor
adc
loopne
lea
push
test
dec
imul
das
ficomp
pop
mov
iret
add
dec
mov
icebp
out
sbb
stos
fisttp
inc
daa
dec
je
push
dec
jecxz
push
cwde
rcl
sub
dec
out
test
fstp
sbb
and
das
inc
sar
sbb
fbstp
test
inc
jnp
(bad)
mov
xchg
fcom
xor
test
jmp
push
inc
inc
aad
pop
dec
and
js
out
popa
mov
cmps
call
fist
pop
dec
arpl
or
lods
dec
add
or
stos
lods
jmp
js
mov
ret
push
movs
(bad)
and
cmp
jmp
jmp
pop
scas
and
fimul
ins
inc
int3
lock
fsub
std
rcr
xor
push
add
(bad)
xchg
adc
pushf
frstor
and
in
push
mov
data16
(bad)
sbb
imul
or
pop
enter
shl
into
mov
push
push
jnp
add
bound
dec
es
ds
loopne
add
mov
pop
call
jg
(bad)
addr16
mov
daa
retf
fcomp
cmp
movntq
dec
sub
ffree
jo
sub
out
mov
dec
jg
add
inc
push
mov
pusha
rcl
xchg
fisubr
aam
inc
jae
sbb
in
xchg
or
call
inc
ds
jge
jmp
test
(bad)
push
stos
test
xchg
shl
movs
mov
mov
cmp
and
int
or
sahf
sub
jp
rcl
out
inc
fadd
jnp
mov
pop
pushf
xor
mov
scas
mov
xchg
push
call
cwde
data16
sub
dec
jecxz
ds
and
call
fadd
mov
sti
imul
std
ss
xchg
clc
mov
clc
shr
icebp
xchg
mov
mov
retf
pop
out
int
ret
das
mov
js
mov
dec
nop
add
enter
jmp
int3
outs
cmc
jns
aad
(bad)
adc
test
mov
sub
outs
lea
inc
mov
xchg
xchg
pop
add
in
test
fs
mov
cmp
add
and
repnz
dec
xor
lods
inc
sub
xor
sub
cmps
cmp
(bad)
addr16
inc
push
repnz
or
or
add
sub
inc
stos
cmp
jno
ds
movs
loopne
loop
into
pop
retf
adc
cmp
sub
sub
and
push
(bad)
xchg
and
jns
jl
push
mov
adc
dec
lock
fmul
lods
lods
sub
(bad)
dec
cmp
imul
pop
mov
cli
out
pop
int3
pop
aam
cdq
pushw
push
pop
retf
inc
cmp
cmps
les
cmp
in
inc
jnp
and
fist
outs
xchg
xor
sar
inc
jg
jmp
lods
adc
ja
pop
xchg
jae
xor
mov
xor
jp
in
rcr
dec
mov
and
jmp
add
and
sbb
ds
jle
daa
ficom
fwait
scas
pusha
(bad)
jno
pop
inc
imul
in
movs
jecxz
movs
xor
nop
(bad)
lahf
xchg
xor
inc
adc
push
push
sbb
xor
mov
push
pop
pop
jmp
loopne
xchg
out
cmps
xor
mov
test
repnz
sub
pop
fs
fdivr
je
icebp
jae
push
or
adc
aas
sar
adc
jp
sbb
xchg
xor
leave
in
and
mov
lock
jp
pop
dec
lea
out
xchg
sub
jae
mov
int3
mov
(bad)
ja
xor
sar
pop
clc
mov
cli
pusha
fs
mov
call
push
jmp
cmp
or
aaa
sub
clc
add
cmp
mov
ficom
(bad)
pop
in
int3
sub
(bad)
adc
xor
stos
(bad)
xor
lods
inc
out
jb
aas
mov
pushf
jecxz
mov
cmc
add
sbb
in
pop
lfs
fiadd
in
pop
or
cmp
jo
sub
cli
das
xchg
clc
mov
jae
push
(bad)
adc
imul
mov
cmp
fisttp
dec
mov
jb
add
xor
rcl
adc
movs
cwde
adc
lods
popa
test
mov
cmp
cmp
retf
call
das
sbb
jo
mov
(bad)
dec
cli
mov
cmp
inc
xor
rcr
sub
adc
push
call
jb
(bad)
in
cmp
dec
test
loopne
dec
add
inc
pop
mov
or
in
push
xor
sbb
xchg
(bad)
lock
jmp
shl
stos
sbb
fild
mov
sar
pop
leave
je
(bad)
dec
(bad)
(bad)
mov
xchg
jle
je
dec
sbb
mov
inc
mov
(bad)
jnp
in
hlt
mul
xchg
xlat
mov
pop
mov
jb
(bad)
xchg
cld
cmps
mov
pusha
mov
fst
mov
jne
jp
adc
jnp
mov
gs
mov
ds
push
in
cs
jmp
adc
dec
pop
mov
out
call
iret
test
into
adc
arpl
jae
mov
retf
mov
xchg
(bad)
es
(bad)
xchg
pop
jns
sub
(bad)
pop
fidivr
pop
test
cld
mov
push
sahf
or
call
jmp
test
xor
repz
mov
xchg
mov
xor
sti
pop
pop
or
bound
inc
cli
mov
arpl
inc
dec
xchg
pop
aam
cmps
or
out
cmp
push
adc
fdiv
(bad)
pop
call
mov
mov
mov
fidivr
repnz
jnp
xchg
jecxz
loope
cmp
addr16
push
les
fstp
cs
(bad)
and
dec
in
xor
dec
push
sbb
out
dec
xchg
push
cmc
ja
xor
dec
ret
mov
jae
sbb
mov
pop
jns
inc
dec
mov
push
(bad)
into
int3
and
dec
and
scas
inc
mov
loope
mov
add
jno
sbb
(bad)
adc
mov
nop
rcl
mov
add
push
sbb
or
dec
add
in
mov
sub
pop
popa
popa
sub
lea
shl
jb
outs
adc
inc
sbb
sbb
hlt
out
shl
mov
cmp
adc
daa
movd
jle
cmp
inc
jmp
push
pop
cmp
jne
xchg
xor
(bad)
jb
fstp
fwait
(bad)
dec
aaa
arpl
leave
pop
cmp
fcomp
aam
aad
in
aam
inc
(bad)
xchg
mov
jmp
dec
inc
and
lahf
cld
scas
add
pusha
or
cwde
mov
(bad)
cmps
cmp
aaa
mov
push
jge
sbb
out
clc
stc
dec
xchg
sub
out
sub
les
add
loop
daa
in
push
(bad)
mov
cli
data16
pushf
mov
add
xchg
loopne
mov
bound
(bad)
fisttp
movs
jb
cs
xchg
(bad)
fist
js
xor
adc
lahf
inc
jnp
xor
fsub
push
arpl
push
cdq
cs
mov
in
and
lods
xlat
push
jecxz
sub
mov
fisttp
bound
sbb
int3
xor
test
sub
arpl
push
neg
data16
xchg
ja
cwde
xchg
add
dec
ins
or
push
mov
(bad)
(bad)
jns
mov
push
daa
ficom
rcr
ficom
adc
popf
je
movs
jae
in
mov
inc
and
bound
push
icebp
lock
cmp
pop
shl
lock
pop
push
mov
clc
and
loop
(bad)
jge
nop
or
cmp
dec
std
out
sbb
mov
or
rol
or
(bad)
mov
fstp
push
sub
jmp
lods
xchg
jge
movs
cmp
and
leave
add
pop
jg
jecxz
gs
cmps
(bad)
clc
jecxz
jg
dec
adc
movhps
xchg
cdq
inc
push
cmp
mov
sub
loop
dec
mov
jne
ficom
or
repnz
movs
out
cwde
jnp
xor
dec
adc
add
jle
stos
mov
cmp
mov
xchg
clts
mov
sti
pop
scas
retf
les
mov
mov
sbb
nop
inc
xchg
add
xchg
cs
push
ret
rol
mov
(bad)
call
add
jns
lods
jmp
sub
add
push
jge
out
sahf
jnp
out
loopne
adc
enter
das
xchg
jmp
in
fsubr
call
out
sbb
cmp
fs
xor
mov
fstp
ins
mov
xchg
adc
xchg
mov
outs
adc
jns
and
mov
(bad)
jmp
push
js
adc
xchg
sub
ja
mov
sub
clc
xchg
je
xchg
ss
mov
jbe
mov
xchg
jmp
icebp
cs
jbe
(bad)
movs
jecxz
inc
mov
pop
pop
sbb
fs
clc
mov
sbb
mov
ins
adc
mov
popf
pop
sub
mov
mov
sbb
in
pop
mov
lahf
add
mov
or
push
sbb
sbb
lock
test
ror
mov
xchg
shl
or
xor
jg
cli
xlat
pop
push
dec
and
fild
xor
inc
cwde
movs
mov
adc
xchg
mov
test
fwait
push
push
jbe
add
fistp
loopne
dec
hlt
mov
ret
jne
test
and
or
fcom
hlt
jmp
inc
push
xor
clc
sbb
push
pop
ja
mov
cld
sbb
cmp
add
or
dec
call
sbb
push
clc
cli
sar
imul
jns
(bad)
jo
mov
ds
dec
mov
add
or
pop
stos
xchg
ins
jecxz
or
ror
cmp
test
cmp
fcompp
pushf
push
pop
mov
adc
test
mov
mov
dec
push
xlat
mov
or
cmp
xchg
(bad)
mov
int
loopne
pop
(bad)
aam
cmp
retf
or
ins
cmps
jbe
pop
push
inc
ins
inc
inc
adc
xor
and
dec
add
jg
clc
stc
adc
pop
js
sahf
(bad)
bnd
jns
push
shl
ss
pop
sbb
adc
push
loop
mov
pop
stos
rcl
popf
push
imul
scas
add
pop
and
push
test
cmp
scas
cdq
xor
fs
loope
imul
arpl
xchg
das
pop
dec
cmps
sub
sub
in
jnp
out
in
mov
adc
add
adc
pop
cmp
scas
push
movs
jno
mov
mov
hlt
mov
dec
jmp
out
aaa
mov
loop
lahf
mov
mov
std
mov
xor
add
dec
or
mov
or
push
or
aam
jo
xor
push
xor
dec
add
adc
push
popf
push
sbb
mov
push
adc
jb
dec
push
xor
mov
mov
fmul
adc
inc
cmp
xor
jbe
mov
mov
fsubr
adc
sbb
add
mov
lock
inc
mov
mov
mov
mul
test
repz
ror
movs
sbb
ret
mov
jp
push
in
mov
or
loope
pop
rol
hlt
cmp
push
xor
cmp
cdq
add
cmc
or
cmc
mov
xor
or
outs
(bad)
enter
xor
pop
es
int
jne
js
dec
xlat
les
jbe
test
pop
imul
xlat
pushf
dec
xchg
test
sub
mov
fsubr
adc
gs
push
gs
fist
adc
(bad)
shl
rcr
push
push
pop
movs
test
jmp
fcmovnbe
mov
push
and
pushf
dec
cmps
std
mov
repz
jecxz
pop
popa
push
pop
icebp
push
retf
push
mov
scas
xchg
cmp
loope
mov
mov
lods
icebp
int3
push
pop
add
add
jae
pop
push
repz
mov
ins
pusha
inc
push
out
or
test
cmp
and
cmp
repz
dec
imul
pop
ret
je
sbb
adc
stos
js
and
pushf
push
dec
in
push
ja
and
cmp
in
dec
sub
data16
pop
out
mov
jmp
aas
stc
pop
jecxz
cmc
xchg
inc
xlat
pop
dec
test
inc
xchg
(bad)
cwde
sub
jns
in
loopne
icebp
inc
mov
popa
mov
jns
dec
push
cmp
pop
xlat
mov
mov
add
xchg
in
(bad)
pop
pusha
sbb
push
cmps
sub
icebp
(bad)
pop
or
xor
push
ds
ins
je
sbb
jp
cmp
ins
in
sahf
arpl
dec
xchg
(bad)
xchg
addr16
add
das
popf
in
jno
push
ss
adc
imul
sub
add
fnstenv
imul
scas
mov
add
inc
dec
adc
mov
push
cwde
ins
dec
xor
mov
test
sahf
jecxz
and
(bad)
pushf
xor
daa
add
ret
loopne
retf
push
xchg
ret
cmp
dec
leave
dec
nop
sub
and
popa
iret
jo
in
cmp
imul
(bad)
mul
inc
xor
addr16
aas
ror
into
or
jbe
jo
add
fs
in
popa
jno
fst
xor
cmp
xor
(bad)
ret
mov
xor
and
call
cld
inc
stc
fcomp
popf
enter
pop
retf
sbb
cwde
add
dec
addr16
xchg
mov
sub
adc
pop
icebp
xchg
movs
pop
push
sbb
test
fs
jle
jns
push
scas
stos
cmp
add
jmp
jb
cmps
mov
inc
stos
mov
sar
nop
xor
mov
push
pop
gs
or
retf
add
arpl
or
jb
imul
dec
test
loope
popa
xchg
sbb
push
pop
mov
out
cmp
icebp
jg
pop
xor
push
sub
adc
push
cmp
inc
cmp
gs
cld
mov
and
mov
mov
pop
sub
addr16
cmp
and
clc
test
ror
sub
push
scas
push
cmp
shr
hlt
xchg
xchg
sub
mov
shl
or
lock
xlat
xor
out
mov
inc
cli
pop
not
into
sub
xlat
pop
push
dec
mov
loope
cmps
inc
adc
xchg
xchg
xor
dec
movs
(bad)
adc
ret
(bad)
push
scas
iret
sub
scas
ja
cmp
dec
or
fild
frstor
inc
mov
repz
test
loop
lods
js
dec
sbb
sub
loopne
bound
aaa
xor
xor
jo
shl
and
outs
mov
jnp
dec
inc
dec
dec
test
mov
addr16
call
xchg
and
test
sub
mov
inc
jb
in
inc
inc
jae
cdq
scas
cli
fdiv
test
ins
xchg
xor
mov
mov
call
and
push
sbb
(bad)
inc
leave
loopne
enter
jbe
mov
dec
mov
(bad)
iret
and
xchg
outs
mov
xchg
sub
xchg
inc
push
add
inc
mov
sbb
(bad)
clc
inc
jge
fist
pause
dec
jo
arpl
xchg
lods
ret
movs
test
mov
cmp
fdiv
xchg
inc
and
sti
outs
jae
cmp
sbb
push
ret
call
adc
test
push
test
retf
ss
test
push
aas
dec
out
mov
inc
inc
imul
inc
or
addr16
jge
fmul
retf
nop
sbb
sbb
inc
test
push
inc
fistp
imul
sub
cs
xlat
jae
(bad)
fs
push
fidiv
out
xchg
pop
jle
jmp
ret
aaa
ja
cmp
jne
sbb
sbb
ins
pop
cmp
sbb
jl
mov
dec
call
stos
mov
sub
jbe
fs
inc
shl
sub
dec
iret
push
mov
or
das
sbb
std
out
inc
loop
(bad)
mov
xor
inc
and
ins
lods
push
adc
add
mov
stos
dec
jp
loopne
movs
jb
add
loopne
or
cmp
ds
inc
sti
jae
ds
dec
dec
retf
dec
sub
ret
bound
rol
iret
mov
xchg
xchg
mov
adc
sub
dec
lods
inc
aaa
mov
loopne
cwde
add
lea
loop
pand
sbb
xlat
pop
push
fmul
rcr
inc
mov
fist
push
cmc
xor
jle
pop
ret
pop
inc
push
stos
loopne
pop
xor
sub
jbe
add
jns
and
jo
gs
cmp
push
push
scas
shl
cmp
push
daa
stc
mov
jne
out
stos
call
mov
retf
xchg
call
out
rol
xchg
mov
stc
adc
add
imul
imul
push
inc
cmps
(bad)
je
dec
sbb
and
cwde
xor
sbb
jmp
shl
cmp
cmp
es
pop
or
leave
push
cmp
add
sbb
jb
sbb
test
add
jnp
pop
inc
lds
das
aas
inc
cmp
and
sbb
stos
adc
rcr
xchg
fimul
and
xor
add
push
push
sub
or
dec
ja
sti
jmp
dec
into
clc
mov
pushf
mov
push
(bad)
xchg
fimul
dec
fimul
ins
shl
jb
sub
add
or
jl
aad
cmps
aaa
daa
cmp
ja
lahf
sbb
push
retf
pop
push
ret
push
jmp
adc
sti
xchg
push
(bad)
outs
xor
bound
mov
push
dec
dec
or
out
call
enter
mov
retf
adc
inc
inc
test
cld
inc
adc
sahf
inc
dec
in
pusha
push
outs
inc
out
repnz
push
in
movs
mov
jo
pop
sti
pop
xchg
rcl
je
retf
nop
xchg
outs
jl
mov
mov
jmp
ss
sar
stos
push
push
sub
jecxz
fsub
add
cmps
inc
loop
add
pushf
test
jbe
mov
or
ficom
sub
cdq
loopne
inc
cmp
add
sti
mov
push
inc
movs
adc
aam
push
out
mov
xor
xor
dec
jl
dec
mov
jbe
xchg
xchg
dec
sbb
and
or
(bad)
shl
xchg
call
jo
aad
mov
dec
mov
ds
hlt
cld
jae
jo
push
xchg
ins
repz
out
out
shr
jo
mov
mov
sbb
lahf
lahf
cs
ror
mov
jle
mov
cvttps2pi
push
xchg
fs
jmp
mov
push
inc
lds
or
in
data16
cwde
xor
jns
mov
lahf
push
add
int3
add
pop
xlat
xchg
cmps
inc
psrlq
mov
js
sbb
daa
jecxz
dec
mov
push
sub
pop
leave
into
and
push
test
push
mov
mov
sti
enter
jno
dec
icebp
iret
push
out
int
sub
cmc
cmps
lds
psadbw
dec
mov
movs
inc
xor
sbb
test
dec
cld
pop
out
ja
aaa
mov
sahf
push
adc
test
push
jmp
lea
add
mov
jae
xchg
inc
adc
ss
dec
mov
(bad)
lods
mov
jle
adc
sbb
pop
add
inc
mov
cdq
fcomp
sahf
pop
pop
cmp
dec
jecxz
lds
inc
cmp
sar
mov
fdivr
mov
in
inc
jge
aaa
jne
xchg
cmps
mov
js
inc
jg
push
cld
fistp
cwde
bound
xchg
cmps
ret
(bad)
sub
mov
mov
test
xlat
cmp
push
add
ret
popf
loopne
mov
pop
xor
push
ret
or
fwait
jne
or
popf
int
retf
inc
inc
push
aaa
fs
cli
xchg
jne
jne
test
daa
xor
retf
retf
loop
iret
add
fst
scas
push
cmp
xor
xchg
idiv
rol
not
pop
inc
loope
sub
sub
dec
leave
inc
push
mov
retf
bound
xor
mov
mov
jnp
jmp
or
and
dec
mov
test
(bad)
jns
mov
(bad)
data16
sti
call
and
mov
cmp
or
pop
outs
push
shl
daa
adc
xor
mov
fnstsw
mov
mov
mov
dec
out
sub
sbb
lods
outs
bnd
sar
jo
call
ss
mov
cmps
or
sbb
xlat
mov
stos
xchg
xor
xor
cli
and
(bad)
out
test
lea
push
add
mov
imul
sbb
sbb
push
jmp
inc
add
ins
cmps
gs
dec
cmp
push
inc
sti
lea
rcr
and
push
mov
mov
xor
rcr
fisub
test
inc
das
aad
and
or
push
mov
rol
stc
xlat
scas
aam
loop
cmp
mov
inc
clc
jle
mov
sbb
add
push
loop
xchg
sub
dec
cmc
xor
push
dec
jmp
cmovp
lods
cmp
repnz
dec
adc
out
xor
sbb
pop
mov
sub
popa
ficom
push
mov
iret
pop
popa
inc
push
out
shl
inc
jg
pop
mov
cdq
data16
mov
daa
inc
xlat
jne
mov
push
loopne
test
cdq
pusha
fsubr
lods
or
out
xchg
(bad)
jne
enter
push
cmp
fcomp
std
or
inc
pushf
popa
sub
xchg
cld
(bad)
push
hlt
fdivr
sbb
icebp
inc
rcl
rcl
ins
inc
cdq
pop
or
in
and
mov
aam
jo
out
imul
out
test
(bad)
rcl
stos
mov
lds
and
(bad)
fs
or
push
or
outs
or
fild
jmp
cdq
xor
das
mov
call
xchg
cmps
xor
inc
movs
pop
mov
test
out
repz
push
stos
cmp
inc
xchg
int
mov
jp
xor
ins
popf
cwde
ret
sbb
outs
ds
pop
imul
mul
mov
dec
scas
xor
ja
add
push
jno
xchg
stos
pushf
call
sub
jecxz
pop
ins
out
dec
popf
sahf
cmp
pop
push
xlat
rcr
in
push
push
dec
pop
in
mov
test
mov
sbb
push
mov
pop
scas
jbe
push
and
mov
mov
xlat
in
inc
mov
pusha
sub
jp
mov
rol
pop
fst
loope
pop
fdivr
pushf
mov
mov
add
and
loope
ror
retf
in
and
inc
sbb
imul
mov
push
bnd
push
xor
xchg
cmp
std
mov
outs
mov
xor
xchg
pusha
stc
cld
jp
sub
adc
inc
pop
xchg
cmp
cmp
pop
nop
loop
stc
mov
sbb
push
dec
mov
or
das
scas
jle
aas
fdiv
or
cmp
aaa
add
adc
inc
sub
je
xor
mov
lods
xchg
ret
inc
scas
lods
sbb
iret
popa
sbb
push
and
movs
addr16
inc
ins
fld
add
in
sar
or
add
pusha
div
push
inc
jmp
cmps
hlt
dec
adc
dec
(bad)
out
data16
add
mov
and
arpl
arpl
mov
cmps
movs
scas
jae
cmp
cmp
mov
xchg
sub
lea
cmp
sub
cmc
ins
or
mov
ror
cmp
addr16
cld
sbb
hlt
jecxz
push
cmc
mov
sub
push
(bad)
cdq
jnp
xlat
dec
sub
xchg
cmps
in
xchg
data16
lea
adc
xor
test
sbb
xchg
movs
jl
(bad)
xlat
les
shl
sub
in
push
dec
sbb
or
call
sub
sbb
inc
hlt
lock
mov
cmp
jle
sub
aas
jp
fldenv
cdq
or
daa
cmp
into
jp
or
mov
ss
outs
add
cmps
inc
xchg
add
xor
or
lea
cwde
or
mov
js
sbb
stos
data16
push
jb
cli
sahf
jmp
stos
fs
test
mov
scas
sub
adc
repz
jl
js
adc
add
in
pop
cmp
push
adc
out
leave
sar
int3
mov
mov
ja
fldcw
or
mov
(bad)
pop
(bad)
pop
sbb
in
pushf
add
xchg
cdq
je
addr16
ss
mov
mov
aaa
cmp
aad
xchg
pop
int3
and
popf
aas
mov
stos
repnz
add
leave
int3
std
enter
movs
or
pusha
cmp
enter
push
mov
xor
neg
mov
sbb
cli
mov
mov
xor
add
test
mov
sahf
je
or
mov
lds
das
lock
aam
sub
in
xchg
rcl
add
push
ds
stc
mov
or
fadd
mov
or
int
movs
sbb
push
lea
mov
(bad)
test
jnp
test
sbb
leave
sbb
(bad)
(bad)
ja
repz
sbb
fmul
xlat
imul
mov
mov
ret
pop
pop
xor
inc
pushf
sbb
sahf
jne
jp
dec
and
pop
cwde
shl
inc
push
jns
les
add
sub
rcl
mov
push
or
cmp
add
cvtps2pd
and
push
mov
jae
imul
fcomp
and
push
into
gs
int
and
xor
adc
mov
dec
adc
cmp
mov
mov
jmp
nop
pop
push
jecxz
add
test
popf
into
cmc
adc
sar
aas
enter
mov
test
cmp
cdq
ret
aaa
cmp
in
popa
push
adc
add
imul
mov
mov
mov
or
rol
push
inc
mov
mov
sti
fadd
xor
sbb
cdq
test
cld
cmp
outs
scas
imul
fnstcw
jmp
pop
callw
ror
fs
mov
sbb
in
adc
jb
or
or
xchg
adc
adc
aad
mov
in
or
out
out
xor
mov
(bad)
jp
(bad)
sbb
jns
cmp
inc
pop
loopne
dec
mov
pop
sar
xor
popa
int3
push
pop
add
cdq
aad
out
fwait
(bad)
out
cwde
cwde
ins
nop
loopne
pop
jo
push
xchg
xchg
rol
adc
fistp
dec
int
pop
mov
pop
ja
add
push
enter
add
fcmovu
xchg
into
scas
loop
push
inc
stos
das
ds
fdiv
stc
addr16
leave
mov
mov
loope
lods
loope
inc
push
xchg
ds
out
popf
mov
sbb
(bad)
imul
cmp
and
mov
outs
or
jns
mov
ins
std
mov
xchg
imul
and
jns
ins
xlat
sbb
in
aam
jmp
jge
mov
call
inc
push
retf
sub
xchg
test
stos
xchg
mov
fcmovb
sar
mov
and
pop
scas
addr16
scas
pop
call
mov
das
hlt
clc
(bad)
call
retf
(bad)
jmp
stos
add
pop
mov
test
sub
cmp
fadd
scas
stos
xor
stos
or
enter
(bad)
ja
in
fwait
pusha
mov
das
sbb
and
sub
push
inc
push
stc
nop
mov
shl
mov
sti
pop
sbb
adc
jnp
mov
fisttp
inc
xchg
adc
cli
or
mov
push
sub
mov
mov
xchg
repnz
leave
test
inc
lds
aad
jg
fsubr
fild
call
pop
sar
icebp
mov
xchg
sub
les
and
add
add
out
cmp
ja
ja
test
pop
xchg
repnz
ss
sar
out
or
aad
out
xlat
jmp
sub
xchg
gs
outs
mov
inc
addr16
push
or
xchg
data16
push
and
add
ds
push
ja
retf
pop
xchg
mov
ins
jge
adc
aam
sahf
push
jl
mov
daa
cli
pop
push
push
test
mov
or
js
cmp
mov
movs
cmc
mov
pop
test
add
inc
retf
ret
cs
std
mov
push
mov
inc
mov
fldcw
xchg
add
cmps
scas
sbb
inc
push
dec
or
ret
adc
imul
jb
pop
xor
jl
cmp
ds
js
ds
push
jae
es
push
and
cmp
push
in
xchg
push
pushf
cmp
cld
xor
test
and
hlt
fs
sbb
xchg
add
push
mov
or
leave
popf
leave
mov
punpckhwd
cdq
and
scas
mov
mov
fs
mov
data16
js
(bad)
sbb
xor
xchg
cmps
xchg
shl
test
arpl
jns
retf
ret
mov
lods
not
push
jle
test
jnp
mov
xor
or
push
aad
lea
hlt
cmps
inc
sub
stos
pop
dec
into
fs
pop
push
push
mov
or
pop
out
push
mov
gs
cmp
mov
inc
icebp
sub
ficomp
sar
fadd
xor
not
inc
inc
adc
dec
and
mov
data16
adc
ficomp
push
std
out
fadd
mov
xchg
int
sbb
and
fidiv
xchg
add
jmp
dec
daa
mov
test
retf
ss
addr16
enter
popa
in
push
cmp
jmp
sbb
popa
pop
aad
pop
test
dec
cld
scas
push
cmc
mov
cwde
aam
shl
pushf
adc
jnp
add
mov
into
pop
sbb
scas
pop
(bad)
cmp
push
cmp
imul
add
jae
fdivr
add
dec
and
in
push
jne
or
jp
out
sub
hlt
cmc
ins
cmp
mov
jbe
inc
pop
mov
sbb
adc
ret
push
aaa
(bad)
ja
add
push
popa
or
push
mov
bound
add
xor
mov
stos
mov
xchg
lea
loope
repnz
fsubr
mov
xor
mov
jbe
fstp
je
shr
dec
call
(bad)
cdq
xlat
sbb
rcl
adc
push
inc
sbb
jno
mov
ret
mov
(bad)
dec
xchg
(bad)
adc
inc
ss
call
jmp
jo
push
mov
int3
add
adc
pop
scas
add
popa
retf
ds
dec
stos
ins
fisttp
jbe
retf
or
movs
push
xor
mov
mov
cmp
outs
mov
push
mov
add
xchg
daa
mov
jmp
test
fiadd
mul
aas
or
dec
and
push
retf
adc
dec
jns
xchg
loope
lods
mov
and
out
and
ja
xor
jmp
sub
loopne
jmp
cli
cmp
into
nop
adc
sub
retf
xor
lods
dec
leave
cmp
inc
jg
inc
xor
cmp
mov
les
lds
mov
jl
fist
sbb
jmp
into
push
stos
into
arpl
pushf
or
rcl
ret
jne
out
xchg
scas
add
push
aad
rol
retf
(bad)
call
outs
iret
push
test
pop
daa
add
add
or
xor
std
adc
lods
sub
(bad)
out
out
lock
shl
xor
cmps
cmp
dec
or
cmc
mov
mov
jp
and
add
mov
mov
fst
daa
bound
cmp
pop
dec
in
sbb
clc
ret
or
add
mov
test
cwde
hlt
jnp
jae
int3
loope
sub
pop
loope
push
(bad)
cmp
adc
cmps
xor
(bad)
in
push
cdq
jl
outs
dec
jne
push
into
xchg
xor
call
and
jmp
stos
adc
mov
fimul
push
and
add
shr
mov
xchg
add
dec
jp
mov
adc
fdivr
iret
popf
sub
in
xor
or
clc
popa
hlt
jno
adc
call
inc
mov
ret
and
into
mov
(bad)
mov
es
ror
sbb
mov
lds
(bad)
ret
add
sar
pop
inc
shl
es
xchg
jl
adc
add
add
inc
cmp
test
das
aad
fwait
rcr
mov
jo
jne
push
jp
mov
outs
cmc
push
imul
ret
enter
(bad)
shl
jno
xor
jg
in
jp
xchg
fidivr
scas
sub
or
push
fisubr
bound
sub
fwait
in
jns
cmps
mov
clc
push
les
pop
mov
(bad)
retf
shl
xor
sbb
push
sub
popa
in
lods
or
ret
xlat
popf
rol
dec
ja
pop
inc
adc
mov
mov
adc
(bad)
jmp
fidivr
inc
push
mov
(bad)
jno
mov
les
and
outs
sahf
mov
sub
sahf
push
aaa
adc
mov
ins
ror
or
lea
and
icebp
adc
and
mov
jns
repnz
or
sub
ret
jge
arpl
sub
push
pop
stos
dec
rcl
aas
and
ror
ret
push
test
inc
dec
mov
stos
pusha
icebp
sub
fiadd
int3
mov
mov
outs
mov
addr16
(bad)
mov
mov
repz
rcl
into
xor
repz
mov
cmp
jbe
ins
mov
xchg
and
add
call
pop
push
push
test
(bad)
(bad)
outs
mov
mov
test
inc
test
dec
lods
pop
fcmovnb
outs
mov
jo
lock
sub
jnp
call
in
sub
sub
xchg
mov
jl
push
mov
xor
add
or
and
jns
call
sar
xor
test
les
mov
jns
pop
(bad)
aaa
add
mov
xor
mov
xchg
das
pop
test
ret
gs
pop
inc
add
adc
pop
mov
out
mov
gs
push
adc
in
sbb
loop
sbb
xor
outs
loope
(bad)
jp
cwde
pop
pop
fucom
mov
gs
into
sbb
dec
ins
pop
stos
pop
mov
push
push
and
call
sub
sub
jo
std
movs
(bad)
retf
sub
pop
jp
pop
cmps
in
rol
mov
pop
out
hlt
xor
call
repz
std
cmp
ffree
xchg
xor
jp
inc
mov
movs
jmp
test
adc
icebp
repz
mov
cwde
sub
repz
adc
cwde
cmp
fld
sub
std
(bad)
in
adc
loope
dec
mov
or
dec
rcr
push
or
into
(bad)
int3
pushf
adc
mov
in
jne
int
add
(bad)
and
or
or
pop
jge
dec
adc
dec
retf
or
push
dec
lods
mov
sub
or
inc
pop
pop
test
(bad)
lods
ins
mov
fs
xchg
out
jae
inc
pop
in
stc
fisub
clc
jnp
mov
dec
xlat
aaa
fs
and
xlat
and
add
adc
jmp
scas
or
jge
sbb
arpl
push
add
stos
mov
jecxz
adc
sbb
fmul
ja
scas
mov
repnz
ret
cmps
mov
arpl
ins
cmps
xchg
adc
push
dec
retf
and
inc
mov
pusha
fsubr
cli
and
(bad)
lock
les
jb
std
jmp
xor
push
jno
ins
in
xchg
mov
or
or
inc
cmc
sbb
fcmovnu
addr16
(bad)
jp
mov
sub
cmp
sub
ja
cmp
outs
fdivr
sbb
jl
or
in
div
popf
cld
inc
loop
mov
add
ins
sbb
and
jmp
enter
imul
mov
push
pop
sbb
in
push
shr
das
outs
and
cmp
jno
push
test
and
inc
mov
pushf
mov
push
cmps
jp
sbb
aad
sbb
icebp
scas
stos
sbb
pop
add
aas
test
inc
mov
lahf
call
add
cmp
punpcklwd
inc
pushf
repz
repz
mov
dec
xchg
clc
pop
sub
or
pop
pushf
pop
adc
cmc
int3
push
inc
(bad)
adc
call
push
push
lahf
(bad)
pop
xor
mov
push
mov
cmp
mov
fcmovnbe
push
sub
arpl
aad
lea
fist
sub
sbb
cmp
xchg
xchg
jno
into
sub
(bad)
enter
xor
cmp
(bad)
ss
arpl
ja
stos
jne
add
sub
sbb
int3
lds
lods
sub
in
jmp
xor
and
inc
jmp
(bad)
cmp
sbb
push
pop
ror
adc
fild
int
push
ss
fistp
lods
fwait
pusha
add
inc
das
or
xchg
imul
out
cmp
jge
cmc
int3
sub
repz
movs
xor
mov
lock
mov
jle
adc
(bad)
addr16
jp
add
adc
(bad)
loop
das
push
dec
mov
jmp
add
jne
or
loopne
pop
inc
(bad)
cmp
out
scas
xchg
xchg
cmp
xor
and
sbb
fld
pop
outs
or
push
sub
cmp
mul
retf
jp
mov
scas
cli
stos
cmps
outs
shr
xlat
fisubr
sbb
pop
inc
adc
xchg
pop
mov
fadd
pushf
sub
int3
pop
jae
into
or
cmp
xchg
push
dec
cmp
cmps
push
cld
sub
sbb
lods
mov
jo
cmp
mov
sahf
xbegin
mov
or
jmp
(bad)
enter
dec
enter
loopne
shr
xor
outs
push
sub
push
jg
cmp
push
aam
std
push
xlat
(bad)
retf
push
fst
pop
aas
inc
ret
popf
dec
inc
xor
stc
and
xor
ss
in
mov
sub
inc
mov
popa
test
aas
cwde
and
pop
fwait
add
sbb
push
(bad)
out
cli
jl
int
dec
inc
pusha
pop
(bad)
xchg
pop
ins
data16
int3
(bad)
aam
retf
xchg
sbb
cmp
xor
(bad)
or
pop
xchg
loop
push
das
push
mov
ins
xor
and
mov
dec
push
xchg
lods
stos
mov
cdq
or
push
(bad)
sbb
cmp
jmp
fdivrp
sti
dec
push
shr
adc
(bad)
inc
pop
icebp
in
push
sbb
xchg
stc
sbb
dec
mov
vpavgb
add
cdq
jl
outs
push
int
in
fbld
mov
jo
sbb
add
mov
jle
xor
mov
jmp
push
xchg
ins
(bad)
mov
jnp
jb
stc
stos
cli
(bad)
sbb
xor
rcr
das
leave
dec
mov
jnp
mov
add
xchg
pop
push
add
je
xchg
adc
xor
pop
clc
mov
jp
and
mov
dec
mov
repnz
cmp
ud2
mul
push
mov
lock
mov
jmp
add
mov
push
jmp
test
dec
test
pusha
(bad)
clc
rol
jo
fstp
add
inc
data16
or
push
mov
mov
push
(bad)
cmp
pop
mov
mov
mov
gs
inc
cdq
or
test
aad
pop
stos
pop
and
aad
jno
rcl
inc
ins
and
shl
adc
lea
dec
icebp
loop
pusha
and
repnz
sbb
mov
arpl
and
inc
(bad)
in
sar
stos
mov
mov
and
pop
cs
inc
iret
push
inc
lds
jmp
js
lahf
repnz
leave
daa
aaa
mov
lea
inc
jo
xor
mov
sbb
push
and
cmp
mov
jg
fisub
outs
fisttp
sub
xor
sub
push
pop
or
cli
jl
movs
adc
mov
int3
test
mov
mov
ds
test
jmp
jae
cmps
pop
arpl
mov
inc
push
mov
push
fimul
sub
(bad)
mov
push
dec
ficomp
movs
into
or
adc
leave
jp
sbb
jecxz
pop
mov
xor
stos
jp
call
aam
xchg
jg
fild
sub
sti
mov
cdq
add
rcr
enter
xchg
es
int
dec
cld
aam
cdq
push
add
or
(bad)
iret
and
or
aas
mov
xchg
mov
stc
push
les
bound
cmp
mov
jg
jle
dec
cli
dec
and
adc
jl
mov
dec
dec
retf
imul
repz
jmp
popa
out
pop
movs
(bad)
mov
dec
push
push
mov
leave
xor
mov
mov
ret
data16
xchg
push
loopne
scas
push
shr
daa
push
shr
pop
dec
pop
rol
jmp
mov
inc
sub
jmp
mov
push
in
clc
xlat
mov
add
pop
dec
jge
retf
mov
not
xchg
in
push
push
lods
or
sub
inc
push
cmp
push
lods
push
push
in
dec
cmp
and
out
pop
out
dec
xor
test
fdivr
sbb
cmc
fsubr
loopne
retf
jmp
xor
lods
xchg
cmps
and
aam
mov
sbb
leave
push
xor
call
sbb
mov
lock
clc
movs
mov
jmp
fs
cmp
sub
shl
xor
pop
dec
inc
push
in
xor
add
sub
retf
std
out
sub
mov
mov
inc
jne
xor
and
jno
mov
mov
xor
stos
fdiv
xor
les
hlt
xor
fidiv
icebp
data16
inc
clc
pop
neg
cmps
or
dec
scas
ret
cmc
repz
jp
test
add
repz
int
icebp
xchg
mov
xchg
jg
popf
cmp
xchg
jo
sar
js
jl
fcmovnu
imul
lock
pop
dec
and
and
out
leave
adc
rcl
pop
pushf
and
jge
pop
(bad)
mov
test
xor
test
cmp
popa
fcom
fs
mov
ficomp
lea
rol
dec
nop
fdivr
rcl
sub
hlt
ja
sub
push
sbb
jbe
in
in
daa
pusha
inc
mov
cdq
xor
retf
ss
leave
repz
xchg
xchg
dec
add
jnp
push
inc
cmp
loop
xchg
(bad)
fmul
or
push
push
add
test
mov
nop
pop
push
mov
mov
fst
dec
mov
adc
test
and
push
mov
xchg
popf
fstp
sbb
xchg
(bad)
lods
movs
jae
call
and
inc
js
popf
into
es
xchg
enter
or
fmul
aas
int
sbb
cdq
stos
test
cmps
daa
gs
ret
mov
pop
fstp
jnp
pop
push
cmc
jl
or
jns
movs
ins
push
fs
add
pop
mov
sub
mov
jmp
ds
rcl
sub
sub
dec
dec
dec
push
out
add
lock
mov
fs
fld
mov
addr16
test
add
inc
mov
inc
jle
into
pop
arpl
add
mov
out
adc
popa
data16
or
std
nop
aad
sub
inc
shl
add
mov
es
cdq
ss
add
(bad)
rol
pop
stos
adc
aaa
mov
mov
jmp
push
cmps
mov
add
jne
es
push
pop
jbe
or
mov
jns
outs
bnd
pop
xor
sbb
test
int
push
sub
clc
xor
sbb
or
mov
sbb
lods
outs
pop
cmp
jo
pop
dec
mov
retf
or
jnp
shl
jle
inc
(bad)
push
or
xor
out
sbb
add
xor
shl
mov
int
lea
cdq
mov
xor
ja
mov
sahf
dec
icebp
xor
adc
ret
sub
in
movs
ss
or
xor
and
fiadd
dec
sbb
call
mov
fsubrp
mov
fst
out
popf
mov
pop
ins
iret
mov
imul
clc
fstp
test
neg
arpl
scas
jmp
push
xlat
fistp
push
inc
lahf
sub
(bad)
frstor
inc
push
push
scas
mov
and
je
push
jb
aam
and
lahf
hlt
cmps
dec
sub
or
fadd
cmps
pop
ds
xchg
add
les
xor
in
jne
push
mov
or
add
mov
lds
inc
add
adc
or
dec
popf
or
mov
xchg
leave
hlt
(bad)
mov
(bad)
cmp
inc
sbb
fcom
xchg
jge
movs
sti
fisttp
data16
fsub
ins
scas
add
sub
fs
dec
push
lods
movs
aas
mov
and
xchg
mov
xor
mov
jmp
out
inc
leave
shl
and
in
aad
adc
adc
mov
push
jbe
js
push
jmp
lods
push
mov
cld
sbb
lock
push
xor
je
test
push
hlt
sbb
mov
(bad)
clc
inc
(bad)
js
pop
pop
in
xchg
sahf
stc
outs
adc
leave
xchg
and
xor
(bad)
cli
lahf
push
popa
fisttp
xchg
dec
test
icebp
mov
push
xchg
nop
hlt
xchg
fadd
fidiv
xor
inc
idiv
stc
cmp
mov
cli
je
test
sbb
cmps
and
cmps
pop
push
xchg
push
mov
mov
push
ds
das
sub
(bad)
dec
mov
dec
push
xchg
imul
or
js
or
mov
ja
iret
mov
push
cld
and
fwait
hlt
cmp
push
cmps
aaa
shl
mov
xor
xor
xor
test
lahf
or
jg
out
dec
push
(bad)
movs
pop
retf
adc
xor
mov
call
(bad)
sbb
cmps
add
shl
(bad)
rol
pop
(bad)
arpl
cmp
sti
fisub
inc
loope
push
mov
int3
cmp
adc
push
jp
pop
inc
lods
sbb
sbb
push
mov
sbb
out
leave
call
shr
mov
(bad)
fld1
cli
or
dec
mov
sar
inc
xchg
or
mov
jnp
mov
cmps
es
ja
mov
sbb
jnp
jbe
lahf
test
push
cdq
mov
mul
mov
mov
in
adc
and
cmps
xchg
jmp
sahf
loop
hlt
in
outs
in
push
mov
mov
cmps
adc
add
sub
test
sbb
pushf
ds
xor
or
add
rcl
mov
rcl
je
mov
in
inc
clc
test
lods
fdivr
xchg
mov
pop
mov
cmp
and
sbb
popa
push
pushf
push
pop
mov
repnz
xor
fiadd
ret
shl
pusha
jae
jno
sbb
nop
sti
lea
fs
gs
mov
sub
xor
addr16
pop
into
xchg
sub
mov
cmp
dec
repz
and
push
add
jg
bound
sbb
pop
movs
clc
push
or
ins
out
xor
cwde
mov
cdq
and
adc
jmp
or
je
nop
xchg
push
(bad)
popa
ss
mov
pop
sub
movs
fadd
ss
fcomp
xor
and
cld
mov
clc
cld
add
imul
sub
mov
fcmovb
add
add
dec
dec
aaa
sar
bound
fiadd
inc
adc
xor
retf
jmp
mov
add
jp
ins
xchg
shl
pop
aam
stc
push
pop
ret
push
daa
jmp
xchg
nop
fnstsw
add
sbb
jb
ror
push
add
imul
in
clc
shr
inc
cmp
add
and
dec
lahf
out
dec
ret
xor
jb
movs
pop
daa
ja
jae
inc
xchg
shr
pop
pusha
fsub
push
jbe
mov
xchg
cmp
jne
call
cs
movs
dec
imul
fcomp
inc
retf
inc
xor
shr
rcl
inc
push
or
pop
loope
inc
dec
sub
jns
sub
dec
cld
or
mov
nop
in
xor
push
pop
mov
or
mov
cs
outs
(bad)
scas
mov
ds
cmp
cdq
jp
adc
fidiv
xchg
cmp
cdq
jmp
add
inc
sbb
adc
(bad)
jmp
sahf
mov
inc
icebp
icebp
push
jmp
mov
dec
cmps
call
stos
stc
cmp
or
push
sub
push
sti
test
dec
call
and
idiv
addr16
ja
mov
lds
or
sub
fidiv
and
mov
fidivr
and
xlat
jne
movs
fs
cld
cld
and
stc
test
pop
(bad)
scas
arpl
mov
in
hlt
sbb
mov
jbe
hlt
aad
test
push
and
push
test
mov
mov
push
cmp
adc
dec
repnz
cmps
xor
push
and
pop
and
gs
cmc
ss
rcl
push
rcr
mov
inc
cmc
xchg
jp
xchg
cld
dec
movs
mov
fisubr
cmc
jno
ror
cmp
cmp
out
lods
mov
mov
sbb
cld
add
cwde
mov
dec
jb
xchg
push
sti
jns
cmp
(bad)
(bad)
in
shl
or
hlt
lds
fisttp
sahf
xchg
push
cld
and
mov
ret
mov
fidivr
loop
repz
cs
mov
cmp
test
(bad)
retf
inc
cmp
mov
mov
cmp
jl
and
data16
sub
or
test
pop
mov
adc
mov
or
push
retf
mov
les
addr16
movs
shl
push
add
push
pop
and
and
jl
hlt
xor
out
dec
inc
or
jns
jmp
mov
pop
(bad)
mov
addr16
aaa
js
jmp
jne
jbe
les
je
cmp
and
jmp
push
mov
loopne
pusha
and
xchg
lahf
fistp
adc
in
xchg
jns
fcomp
push
pop
je
out
test
mov
cs
popa
jb
in
loopne
jecxz
push
js
rcl
stos
inc
cmp
repnz
jp
stc
mov
rol
ds
test
pop
popa
clc
mov
fs
push
nop
push
arpl
pop
push
inc
xchg
mov
push
jecxz
mov
jecxz
mov
mov
sub
xchg
sbb
test
jbe
js
mov
push
hlt
fs
stos
mov
iret
fistp
popa
inc
jecxz
sub
cmp
dec
je
cdq
ins
mov
pop
retf
sbb
(bad)
pop
xor
fsubr
jecxz
adc
push
pusha
(bad)
mov
gs
or
mov
xchg
push
xchg
out
repnz
jl
inc
mov
cmova
sbb
xchg
xchg
sbb
je
daa
add
adc
mov
sbb
sbb
jmp
arpl
mov
leave
and
iret
lods
inc
mov
sbb
xchg
push
and
cmp
(bad)
add
cmp
mov
(bad)
es
lods
lods
push
addr16
in
movaps
mov
std
xchg
add
mov
sbb
sbb
jb
and
fs
mov
sub
loope
add
lods
add
cmp
xchg
xchg
jmp
xor
sbb
xchg
push
cwde
into
mov
sbb
fld
jge
inc
aam
call
loopne
pop
mov
(bad)
int
stos
adc
dec
daa
xor
xlat
inc
or
loope
xor
pop
xchg
stos
cld
pushf
inc
or
sbb
sti
inc
in
xchg
mov
add
jne
mov
inc
pop
dec
cli
xchg
fimul
mov
stos
icebp
mov
daa
xchg
jae
dec
cmp
jo
(bad)
xlat
std
pop
dec
std
cmc
xor
cmp
cli
push
mov
add
cmps
mov
jnp
jle
ins
inc
sbb
fiadd
push
mov
inc
or
addr16
mov
cs
retf
sub
pop
retf
lods
outs
std
cmp
cli
pop
push
push
lea
cmp
pop
inc
and
aad
push
inc
pop
add
xor
pushf
pop
retf
adc
xchg
pop
sahf
bound
add
cli
lds
in
jl
xor
sbb
mov
xchg
xor
rol
icebp
pop
pop
xor
rol
lods
or
jmp
cmp
add
xor
es
add
arpl
xor
mov
aam
cmp
xor
push
push
dec
ss
cmp
test
clc
jge
shr
mov
nop
or
stos
xchg
dec
ret
pushf
aad
es
adc
cmps
in
(bad)
dec
in
push
jg
fnstcw
enter
cmp
push
idiv
mov
inc
out
push
adc
and
outs
sub
dec
test
push
mov
nop
sbb
(bad)
(bad)
pop
pop
cmp
dec
jbe
push
or
cmovge
or
jo
mov
int
jns
out
pop
add
lds
fucomi
xchg
mov
es
or
out
imul
jno
xchg
call
(bad)
std
add
mov
mov
out
fs
fsub
push
aaa
inc
adc
adc
push
jno
shl
movs
xchg
add
push
pop
adc
shl
mov
std
pop
sub
or
movs
js
jge
adc
pushf
pop
mov
ja
leave
sbb
mul
pop
lea
and
in
ret
xlat
iret
fsub
xchg
mov
adc
bound
jmp
mov
jle
cmp
ins
jo
pop
popf
and
xchg
scas
dec
push
and
(bad)
std
sbb
pop
mov
xchg
sbb
jmp
repnz
add
sbb
icebp
jae
pushf
fsub
das
sbb
cwde
xlat
or
clc
mov
mov
popf
scas
jle
dec
in
push
je
cmp
pop
div
lea
adc
xchg
cs
inc
ret
xor
inc
and
push
(bad)
ins
xor
cdq
retf
inc
(bad)
push
add
fist
ret
sub
or
mov
lock
pop
dec
(bad)
in
inc
sub
and
(bad)
cdq
idiv
inc
fimul
addr16
and
adc
aas
xor
or
push
inc
fwait
in
fmul
push
push
pushf
adc
jmp
mov
mov
outs
les
gs
sbb
daa
push
lahf
mov
dec
inc
xchg
xor
inc
mov
les
movs
fdiv
mov
scas
add
cmp
movs
(bad)
or
jbe
and
mov
fwait
xor
stos
xor
xchg
mov
(bad)
jnp
push
xchg
jmp
cmps
ror
adc
test
stc
out
pop
mov
clc
xor
idiv
and
or
adc
mov
mov
lea
mov
inc
xchg
shl
lea
hlt
fisttp
(bad)
mov
movs
out
mov
rcr
or
push
cmps
jno
pop
cmp
push
shl
cmp
dec
ret
ja
imul
imul
cdq
jno
xchg
dec
jae
call
pop
add
test
or
js
jbe
je
test
inc
ret
inc
dec
adc
test
addr16
out
mov
sar
movs
ds
mov
daa
outs
mov
mov
inc
mov
mov
ret
adc
int
fsubr
neg
or
pusha
inc
gs
cmp
adc
add
jmp
add
lods
mov
push
jbe
push
daa
clc
inc
hlt
xchg
loopne
scas
dec
cmp
mov
out
jb
inc
push
stos
and
dec
pop
dec
cld
cmp
pop
jg
mov
xlat
jne
add
leave
dec
mov
xchg
and
ret
sub
mov
adc
or
gs
or
mov
dec
cmp
push
jecxz
cmp
xlat
mov
xor
jae
mov
jno
or
mov
mov
pop
xchg
jle
dec
repz
arpl
xor
add
push
jne
in
cs
mov
pop
mov
imul
mov
(bad)
or
ficom
ss
push
add
not
lods
fs
mov
jbe
push
cwde
fild
dec
lea
leave
xchg
sbb
imul
push
sbb
push
retf
out
and
add
mov
loope
ror
jns
inc
iret
popa
xor
ror
lock
add
inc
rol
push
sub
add
inc
pop
sub
sub
popf
fistp
sbb
cmc
add
jl
leave
mov
jae
push
push
pushf
lods
test
adc
outs
pop
cs
pop
sahf
dec
loope
jo
or
xchg
in
dec
mov
enter
je
dec
sbb
lods
out
call
imul
mov
ins
and
or
sti
lds
jno
out
sub
xor
leave
xchg
fstp
fsub
jnp
push
push
pop
mov
adc
aam
add
addr16
iret
loop
out
xchg
ret
sub
cmp
int3
xlat
ins
scas
fmul
(bad)
xchg
arpl
adc
pop
add
out
or
dec
or
mov
add
mov
jno
cmps
inc
nop
data16
aaa
sub
mov
adc
std
add
sub
add
push
and
inc
push
cmp
pop
ins
sub
fidiv
ret
or
cmp
ins
imul
shl
jmp
mov
clc
jns
sbb
jmp
out
iret
outs
stc
cmp
mov
jne
arpl
xlat
sar
pop
cmps
xor
and
adc
push
loop
inc
mov
push
xchg
or
(bad)
out
int3
push
jecxz
test
lods
or
jge
inc
push
ja
outs
mov
cmp
dec
push
inc
jmp
mov
xchg
cs
dec
dec
frstor
test
fimul
xchg
int
sub
pusha
xor
or
movs
movs
xchg
not
test
into
and
shr
repnz
leave
mov
mov
sub
(bad)
je
sahf
xor
jnp
out
mov
adc
pusha
neg
imul
add
cmp
mov
cmp
mov
inc
push
in
leave
jge
jnp
cmp
cwde
xchg
push
sbb
(bad)
xor
inc
jae
pop
imul
stc
lds
leave
xor
jo
inc
bound
mov
imul
pop
rol
mov
es
(bad)
movs
xor
in
mov
cmps
sahf
pop
popa
arpl
pop
pop
adc
repnz
pop
jle
push
and
mov
sub
and
loope
pop
pushf
jno
adc
std
enter
jae
call
enter
imul
outs
sub
out
inc
or
xlat
and
inc
lods
dec
ins
sbb
js
jno
mov
or
mov
inc
sbb
push
push
adc
iret
inc
inc
js
repz
mov
rcr
test
stos
sub
(bad)
ss
pop
add
push
mov
jle
scas
mov
scas
scas
lock
lods
sub
ss
pop
add
repnz
shl
es
rcr
rol
fcmovbe
mov
mov
cdq
inc
cld
sub
clc
jno
mov
enter
repnz
ret
xchg
pop
ins
mov
data16
xchg
inc
int3
inc
mov
sub
aam
in
push
std
mul
div
inc
xchg
leave
dec
push
not
das
test
add
xor
dec
inc
cmp
fsubr
adc
jp
(bad)
and
mov
out
sub
repz
sbb
fs
jle
or
(bad)
and
xchg
mov
mov
mov
out
or
mov
(bad)
dec
and
repz
clc
xchg
pop
repnz
hlt
add
add
movs
sub
lea
jae
popf
push
std
xor
bound
adc
xchg
out
retf
aas
dec
sbb
push
and
sbb
jne
mov
shl
pop
xchg
push
and
ret
call
sub
fs
push
std
sub
(bad)
mov
lea
neg
xchg
pop
scas
(bad)
scas
fstp
inc
aaa
int3
fldpi
cld
jle
test
xor
jl
jb
xchg
inc
jecxz
movs
and
push
mov
aas
sub
dec
mov
ffree
dec
call
lods
push
cmp
and
iret
pop
int
add
sub
mov
ret
mov
mov
stc
pusha
or
sub
mov
pop
test
bnd
aam
test
out
push
ja
cmp
cmp
mov
inc
outs
sbb
xchg
js
sbb
mov
loop
lods
xor
dec
jae
pop
push
or
xor
jbe
(bad)
sub
iret
jmp
les
inc
add
fldcw
jae
dec
sbb
fistp
push
pop
movs
lods
cwde
push
mov
daa
ds
(bad)
pop
cmps
shl
adc
js
lock
xchg
test
ja
mov
fldcw
fdivr
jp
fdivr
daa
nop
pushf
call
inc
push
sti
mov
int3
push
dec
sub
mov
and
xor
dec
lock
dec
(bad)
dec
mul
sub
mov
test
ror
xchg
ins
rol
or
cwde
xlat
movs
pop
adc
mov
ja
test
xor
inc
push
loopne
out
jl
cmp
ds
mov
adc
outs
xor
addr16
adc
jmp
imul
xor
test
mov
mov
cmps
and
mov
sbb
call
dec
jmp
sub
es
retf
jle
(bad)
jge
movs
jmp
aas
fucomip
mov
sbb
sub
ret
push
dec
push
mov
leave
lods
mov
inc
mov
jns
icebp
jge
cmp
gs
div
mov
cmps
adc
xor
dec
fwait
xchg
push
fidiv
popf
pusha
mov
fwait
inc
add
mov
sbb
dec
sub
jge
add
dec
test
es
mov
push
ins
add
out
aas
leave
sub
inc
stos
sub
xor
pop
adc
inc
sbb
jae
in
test
test
fistp
(bad)
out
dec
out
outs
fimul
cmc
and
scas
cmp
pop
cmp
or
pusha
push
adc
jbe
out
stos
sbb
ror
inc
jbe
sub
(bad)
dec
pushf
call
js
inc
mov
daa
int3
les
jp
aaa
push
or
or
mov
jg
sti
xchg
pop
aad
adc
or
ja
push
push
out
push
xchg
mov
test
pop
loopne
lods
xchg
inc
dec
iret
bnd
sub
add
pop
pop
cdq
sub
dec
pop
pusha
cmp
jecxz
in
push
cmc
jnp
xor
dec
mov
or
fsub
movs
rcl
jge
jp
jno
retf
dec
fimul
retf
fistp
mov
push
ret
repnz
mov
(bad)
cmps
mov
push
movlps
mov
fsubr
imul
dec
push
lahf
das
mov
push
xor
adc
mov
pop
test
nop
fwait
xchg
icebp
pop
mov
pop
xchg
mov
push
pop
or
fdivr
mov
push
lea
jae
stos
push
push
and
sar
sbb
dec
xchg
shr
or
popf
fcomp
adc
dec
push
push
pusha
dec
mov
std
pop
dec
add
mov
pop
push
test
inc
aas
cmp
test
inc
fndisi(8087
outs
rcr
xor
cdq
shl
fistp
jmp
imul
inc
mov
ret
jmp
pusha
loop
adc
jmp
outs
daa
enter
repnz
out
in
ins
mov
xor
jle
dec
cmps
retf
and
imul
jmp
aas
push
and
into
dec
pop
inc
or
pop
cmp
and
add
sbb
push
cmp
loope
push
into
sbb
fdivr
add
rol
ficomp
hlt
retf
popf
sub
push
mov
xor
mov
mov
arpl
ret
mov
call
into
mov
or
aad
mov
lahf
out
add
sub
sbb
sub
or
and
retf
xchg
rcr
call
addr16
mov
adc
nop
xor
iret
or
mov
loopne
stos
iret
lock
push
shl
pop
stos
cmp
jno
(bad)
(bad)
pop
push
xchg
icebp
jl
push
pop
out
adc
aad
sbb
das
jae
out
xor
mov
imul
rcr
sti
leave
mov
int3
sbb
mov
cmc
bsf
mov
sbb
jge
(bad)
fnstenv
xchg
jg
mov
and
add
pop
jge
in
mov
rcr
inc
jno
cmp
cld
add
mov
addr16
mov
add
adc
inc
xor
dec
push
mov
xchg
pop
lods
mov
adc
mov
ja
jbe
jp
or
push
fadd
mov
rcr
cmp
cmp
add
or
sub
or
jmp
jbe
bound
lods
xchg
adc
lods
add
das
cwde
bound
(bad)
push
sub
arpl
sub
jecxz
pushf
cmps
jmp
or
cmp
das
mov
add
ret
sub
cld
sub
icebp
mov
pop
dec
or
iret
mov
xchg
mov
test
and
mov
push
(bad)
adc
jne
cmp
fiadd
add
pop
xchg
mov
push
or
push
dec
cmp
push
push
jmp
xor
jp
leave
or
hlt
adc
fidivr
(bad)
pushf
mov
and
or
inc
adc
fst
int3
xor
jmp
mov
outs
pop
popf
fdivr
add
nop
mov
pop
sub
movs
adc
push
mov
xchg
pop
mov
imul
sbb
push
inc
outs
push
push
dec
outs
(bad)
pop
cwde
pushf
int
aad
lea
movs
ins
push
xchg
add
mov
pop
iret
push
iret
ret
call
(bad)
mov
cld
lock
jo
stos
stos
dec
imul
inc
and
ficom
mov
ror
call
pop
mov
(bad)
idiv
push
popf
xor
scas
cmp
stos
sti
xchg
ins
(bad)
xor
test
retf
in
mov
mov
ins
out
mov
pop
(bad)
mov
dec
push
jno
cmp
pop
(bad)
push
cmp
cwde
(bad)
jne
popa
pop
pop
mov
mov
jbe
test
sub
loopne
xchg
add
xor
pushf
xor
cmp
push
lock
inc
jle
cmc
inc
repnz
inc
jae
xor
popa
xchg
inc
cmp
xchg
jo
add
ret
xor
push
lea
out
outs
stc
push
cmp
(bad)
adc
mov
stos
pop
dec
mov
cmp
pop
popf
hlt
pop
test
dec
sub
das
fsubr
push
in
xor
lock
stc
std
mov
push
outs
and
ds
stos
push
or
xor
dec
(bad)
and
ja
ins
cmp
je
inc
adc
add
xor
(bad)
cmp
test
and
xor
jbe
mov
xor
inc
cmps
pop
mov
std
shl
enter
shl
push
lods
loop
icebp
inc
mov
or
mov
stc
sbb
cmp
inc
out
adc
or
sub
push
push
retf
jnp
leave
xor
jl
xchg
mov
retf
cmp
cmps
out
push
add
sub
div
jg
jns
push
xchg
call
mov
add
lods
ret
(bad)
and
xchg
jae
scas
pop
call
push
cmc
je
(bad)
popf
popf
cmp
mov
mov
or
push
sub
push
push
ins
(bad)
cmc
loope
(bad)
xchg
outs
mov
cmp
xchg
dec
push
(bad)
mov
cmp
xchg
cld
jge
jbe
sbb
ret
cwde
pop
fsubr
xchg
push
jge
sbb
out
inc
pushf
stc
pop
shr
mov
adc
(bad)
call
pop
adc
ss
add
adc
(bad)
into
and
daa
mov
push
popa
push
cs
and
xchg
xlat
xor
mov
sti
jmp
adc
adc
add
sahf
loopne
sbb
(bad)
aad
or
jno
retf
aam
adc
add
mov
out
jg
mov
inc
stos
jo
mov
sbb
test
cmp
fwait
dec
sbb
lods
popf
pushf
movs
(bad)
scas
icebp
dec
mov
jne
inc
pop
fcmovb
aam
xchg
push
sub
(bad)
sahf
mov
cs
out
xchg
aam
and
bound
stos
outs
ret
dec
cld
jne
jne
test
sub
rol
inc
mov
ins
cmc
pop
sbb
push
movs
neg
xor
test
jg
mov
cdq
dec
int
in
movs
xor
fimul
mov
inc
add
fbld
mov
add
jne
xchg
sar
jle
mov
cmp
lods
or
mov
push
inc
mov
cld
arpl
mov
dec
adc
(bad)
pop
stc
or
pop
inc
test
outs
jge
enter
inc
xchg
cmp
ror
fmul
push
shl
faddp
xchg
addr16
pop
imul
cmps
jo
cdq
sbb
mov
xchg
or
push
mov
jmp
mov
add
mov
ret
nop
xchg
fisttp
cmp
jg
icebp
scas
cmp
repnz
mov
sti
icebp
push
cmps
in
ret
ror
and
sbb
jb
xchg
xor
in
mov
enter
mov
xchg
ss
mov
cmp
inc
(bad)
push
clc
mov
inc
(bad)
outs
mov
jae
mov
add
into
mov
mov
iret
neg
pop
xchg
(bad)
adc
push
adc
ret
pop
outs
sub
inc
jmp
jecxz
dec
movs
push
adc
add
cmp
cli
(bad)
dec
jmp
mov
hlt
jmp
inc
enter
js
adc
sahf
and
push
mov
or
cmp
and
jecxz
xor
std
sub
inc
scas
pop
pop
or
dec
and
push
xchg
(bad)
or
call
movs
mov
stos
add
int
xor
xchg
xchg
mov
adc
mov
mov
je
mov
jge
mov
sbb
mov
fstp
icebp
and
mov
dec
out
add
addr16
in
cld
mov
fld
add
xor
mov
sub
dec
movs
(bad)
mov
fldcw
in
pop
inc
inc
imul
pop
repz
loopne
in
mov
inc
in
cmp
fdiv
and
call
test
bound
xchg
test
hlt
ret
or
gs
in
rol
aad
sbb
mov
push
or
imul
push
in
push
pop
cld
clc
cli
jecxz
xchg
xchg
stos
sbb
jp
shl
int
cmp
add
push
mov
shl
add
(bad)
and
aas
jnp
clc
and
cmp
fdiv
and
nop
push
dec
aas
xor
cmp
(bad)
(bad)
fsubr
xor
jl
cmc
fbstp
into
sbb
out
retf
les
int3
cwde
cmps
bound
popf
fs
push
cs
add
or
out
sbb
add
rcr
gs
inc
push
imul
ror
dec
repnz
mov
rol
jmp
pop
add
jl
(bad)
retf
fstp
and
test
inc
sbb
pop
push
sub
push
pushf
cmp
lods
add
adc
cmps
dec
out
inc
mov
pop
outs
and
sbb
ins
into
jmp
in
and
sbb
xlat
inc
icebp
add
push
loop
push
inc
ret
neg
sbb
pop
sub
pop
add
push
and
mov
pop
mov
mov
dec
stos
adc
imul
fcomi
and
scas
cmp
push
(bad)
pushf
in
mov
inc
pop
dec
std
nop
or
xor
icebp
push
and
retf
popa
aad
pop
push
out
test
cs
xor
cmp
cmp
and
mov
dec
adc
adc
and
(bad)
(bad)
hlt
fnsave
sbb
push
out
jmp
and
cmp
stos
pop
sbb
cmps
adc
scas
mov
xor
(bad)
jmp
sub
push
(bad)
(bad)
mov
jmp
add
lods
push
or
int3
out
out
popf
inc
push
fistp
sub
into
mov
mov
xchg
cmp
inc
sub
adc
sub
loopne
fst
and
cmp
clc
mov
sub
cmp
enter
cmc
lea
sbb
sub
dec
cmps
pop
mov
add
lock
(bad)
popa
into
jb
imul
jecxz
adc
pop
inc
cmp
rcr
sbb
lods
mov
jbe
jp
outs
sahf
dec
push
and
jns
xchg
sbb
repz
call
mov
jmp
(bad)
loope
mov
adc
inc
lea
cmp
push
jne
(bad)
out
inc
adc
jne
push
mov
aam
movs
scas
imul
jmp
xor
movs
xchg
dec
mov
in
(bad)
xor
or
mov
xor
popa
jo
mov
push
pop
movs
enter
enter
loopne
lahf
cmp
iret
(bad)
cwde
cmp
outs
xchg
mov
(bad)
loop
imul
arpl
pop
inc
ss
fcom
rol
push
pop
mov
scas
cmp
jmp
pminub
push
jp
int3
mov
pop
pop
dec
cwde
xchg
mov
and
xchg
jecxz
jns
cmp
sub
mov
stos
cld
bound
mov
xchg
dec
add
retf
stos
fcomp
test
sbb
pop
mov
mov
hlt
icebp
stos
js
sub
cmp
mov
sub
(bad)
push
aas
fist
sbb
mov
rcr
mov
xchg
cmps
div
shl
int
xor
jge
clc
xlat
shl
nop
pop
mov
sbb
sbb
lahf
jmp
jmp
pop
loope
mov
xchg
ja
push
in
mov
and
fistp
add
dec
cmps
daa
pop
sbb
mov
adc
or
pop
jl
clc
adc
icebp
push
and
pushf
sub
push
imul
mov
(bad)
xor
push
out
sub
retf
cwde
xor
pusha
mov
(bad)
movs
nop
pop
movs
pop
xchg
push
cmc
sub
call
daa
inc
cmps
mov
mov
sub
sub
jns
pop
sub
mov
add
shr
dec
xor
and
ins
gs
and
xchg
lahf
and
fldenv
xchg
lds
push
retf
pop
into
sar
or
ds
loop
pop
repz
out
retf
addr16
fcomp
xchg
pop
sub
nop
in
push
out
or
popa
sbb
movs
adc
aad
cmp
pop
adc
add
inc
ja
xchg
xlat
pop
rol
fadd
pop
push
sbb
adc
in
ret
cmp
jns
jmp
cmp
inc
aaa
jle
push
(bad)
and
outs
(bad)
and
xor
and
pushf
sti
xchg
push
mov
xchg
xor
fwait
pushf
sub
pop
push
idiv
jmp
or
lds
fsub
sbb
and
test
push
les
call
add
or
or
pop
pop
jne
inc
push
scas
scas
and
sar
add
pop
out
mov
or
inc
dec
(bad)
ins
mov
stc
inc
ds
mov
add
rcr
jne
inc
mov
repnz
clc
jle
rcl
fs
gs
(bad)
iret
cs
das
inc
icebp
jno
cwde
test
add
cmp
scas
(bad)
ja
adc
cmp
jbe
mov
sbb
xlat
push
into
cmp
clc
xor
jno
or
les
pushf
dec
cmp
pop
cmp
scas
repz
xchg
cdq
div
inc
popa
mov
and
call
loop
or
out
pop
rcl
loop
arpl
inc
repz
dec
aad
ins
popa
popa
data16
inc
fnsave
push
adc
inc
jle
je
mov
pop
cmp
xor
shl
add
ds
xchg
xlat
inc
mov
out
pop
jns
jp
pushf
aaa
fistp
rcl
cld
gs
xchg
mov
xor
sar
fidivr
inc
in
cmp
mov
adc
xchg
xor
pop
adc
nop
cdq
repz
xchg
sbb
xchg
pop
add
ins
into
jle
and
in
pop
call
xchg
jne
or
sbb
xchg
jp
mov
jp
in
push
inc
inc
or
cmc
rol
jo
mov
shl
ret
das
mov
fisub
pop
dec
xor
inc
push
jne
adc
iret
outs
sbb
aam
push
adc
fist
cmc
sbb
in
cmp
or
jge
add
mov
jo
ret
adc
mov
jl
int
(bad)
adc
mov
pop
fidivr
and
cmp
push
stos
lods
xor
aad
test
aad
jl
cmp
push
inc
push
sbb
sub
inc
loopne
lods
sbb
dec
(bad)
jl
outs
cmp
or
xchg
add
and
daa
data16
cmp
pop
add
(bad)
lods
imul
cmp
aam
xor
mov
out
in
jge
retf
cmp
ret
mov
mov
pop
test
inc
hlt
add
adc
cmp
mov
jl
jb
lea
ds
clc
in
adc
mov
mov
(bad)
pop
call
popf
xchg
fidiv
and
aaa
push
scas
pop
pop
lds
ss
xlat
mov
and
mov
test
pop
adc
outs
add
push
mov
xor
xchg
and
and
das
leave
fdivrp
push
pop
xchg
rcr
push
pop
and
xor
mov
cmp
lahf
test
mov
cli
inc
dec
cli
sbb
(bad)
jb
test
xor
je
movs
cdq
jle
mov
push
scas
dec
clc
stos
test
lods
pusha
fidivr
pop
mov
mov
jb
jmp
fisub
sub
daa
pushf
stos
jle
sbb
retf
mov
pop
jg
bound
mov
xchg
pop
inc
mov
adc
ret
push
fdivr
es
imul
imul
inc
dec
test
xlat
repnz
pusha
lock
mov
push
ins
movs
jg
clc
repz
test
sbb
push
xor
out
outs
repz
out
or
ficom
ins
mov
mov
clc
pop
into
jle
mov
push
cmp
or
push
inc
pop
ficomp
aad
jb
outs
adc
adc
mov
mov
fdiv
jp
inc
jecxz
(bad)
enter
lock
not
jne
sbb
ret
jl
enter
test
dec
outs
rcl
push
pusha
lods
gs
or
imul
inc
push
or
push
test
mov
cmp
pop
dec
fistp
js
mov
sbb
mov
fwait
lds
sub
adc
fst
adc
or
sbb
xchg
mov
mov
sub
xchg
jo
sub
cwde
hlt
out
mov
sub
fnstcw
daa
push
scas
xchg
out
out
pop
dec
xchg
sbb
movs
(bad)
pop
sti
mov
sar
clc
out
or
xor
movs
cs
out
lods
dec
inc
(bad)
cmp
jle
add
jge
movs
mov
jmp
mov
jl
sub
retf
xrelease
adc
ffree
fwait
xchg
pop
and
stc
cmp
pop
sbb
or
scas
sbb
xchg
mov
out
dec
jno
cli
jno
jecxz
inc
cmp
int
cmp
pop
fstp
adc
and
sar
cli
scas
sbb
xor
(bad)
mov
dec
fwait
out
dec
sub
out
icebp
add
stos
aas
inc
mov
pop
xchg
xor
xor
imul
xchg
dec
in
repnz
mov
mov
fdivr
and
sub
imul
sbb
hlt
fistp
cmp
cmc
inc
push
and
icebp
repz
xor
fadd
out
test
es
std
and
push
mov
ret
adc
outs
sub
lahf
in
mov
inc
push
rcl
pop
retf
scas
jb
sub
repz
xchg
fbstp
sbb
fwait
sbb
test
adc
jg
xchg
icebp
inc
nop
or
scas
test
and
test
inc
pop
sahf
and
add
jbe
sbb
je
jb
push
dec
cmps
imul
jae
inc
and
sub
mov
sub
push
cmp
mov
hlt
icebp
cli
pop
pop
test
dec
lds
pop
or
sub
sub
xchg
lahf
sub
push
lea
jnp
jl
stos
nop
push
dec
push
push
jle
arpl
int3
sub
xchg
xor
pop
das
xor
dec
cdq
mov
ins
add
aad
mov
(bad)
sti
(bad)
scas
lahf
xor
ret
and
mov
aad
inc
xlat
sbb
shr
cmp
popaw
call
call
sub
inc
jp
icebp
push
or
ficom
ss
ja
inc
mov
push
mov
mov
add
and
jo
dec
fwait
out
xchg
stos
mov
loope
nop
test
sbb
inc
cmp
les
ret
pop
mov
sbb
mov
sbb
lahf
add
xchg
and
xor
jle
jbe
sub
pop
jmp
dec
fiadd
sub
dec
ret
shl
pop
mov
or
(bad)
lock
scas
scas
popf
jne
add
out
sbb
sbb
in
scas
fdivr
and
lea
jmp
cld
mov
or
add
test
mov
nop
pop
cmps
std
mov
mov
mov
gs
mov
xchg
mov
outs
pop
ret
loop
inc
mov
ror
mov
jecxz
lods
add
dec
je
pop
lods
xchg
fidivr
in
add
mov
icebp
adc
jecxz
sub
xchg
addr16
imul
jnp
rcr
sub
jns
xchg
les
std
in
imul
and
jmp
mov
fdivrp
aam
fcom
test
dec
cli
mov
pusha
lea
mov
aas
adc
mov
fdiv
scas
fcomp
ret
jp
mov
mov
es
mov
shufps
or
cli
xchg
test
repz
mov
sub
out
sub
mov
std
cmp
inc
repnz
sub
sub
std
dec
(bad)
or
fincstp
inc
and
inc
jnp
retf
mov
inc
sub
ret
sbb
and
stos
fnstcw
or
jmp
add
mov
mov
scas
cld
fstp
adc
cs
ss
or
cli
lahf
dec
stos
daa
jae
jecxz
daa
push
out
pop
pop
inc
pop
lods
iret
dec
je
in
dec
(bad)
fld
(bad)
cwde
ds
jmp
je
(bad)
sub
data16
mov
fst
leave
inc
cmp
aad
push
xchg
pop
scas
mov
scas
js
ret
and
dec
std
inc
or
movs
mov
test
xor
mov
mov
test
push
and
fwait
push
lds
pop
(bad)
cmp
pop
jmp
ins
(bad)
inc
adc
xchg
cmp
dec
test
inc
xor
std
repz
repz
jmp
nop
pop
nop
stc
rol
test
mov
push
mov
fst
dec
pop
in
movs
mov
xor
pop
jnp
dec
fist
add
call
push
sahf
jnp
retf
lahf
mov
pop
ins
shr
adc
pop
add
loope
mov
(bad)
icebp
lds
sahf
pop
push
je
mov
sbb
pop
push
fs
icebp
push
lds
push
pushf
lds
outs
jmp
mov
fmul
iret
sub
jnp
dec
mov
dec
sub
outs
sar
pop
inc
xchg
rcr
lahf
pushf
aad
xlat
loop
aaa
xchg
pop
cmp
or
cli
lahf
mov
mov
cs
aas
jne
inc
push
inc
fadd
xchg
scas
inc
(bad)
stos
mov
inc
in
push
pop
popa
jo
das
cmp
dec
les
scas
adc
fsub
jo
mov
addr16
outs
xor
(bad)
push
mov
xchg
mov
(bad)
push
fsub
ins
stos
lods
stc
fldcw
popa
sub
sahf
mov
xor
inc
inc
in
fiadd
jge
scas
jecxz
jmp
inc
push
push
pop
call
mov
push
sbb
ins
imul
jno
mov
ja
loopne
jae
ss
idiv
test
mov
dec
or
jnp
inc
repnz
scas
push
xchg
or
cld
adc
outs
rcr
jne
add
mov
lahf
movs
mov
mov
pop
sbb
sub
mov
repz
xchg
adc
jnp
out
mov
inc
mov
dec
xor
daa
mov
imul
cmps
adc
xlat
xchg
cmp
div
add
push
addr16
mov
push
call
sub
push
xchg
push
cmp
and
dec
adc
(bad)
out
mov
js
sub
dec
add
movs
test
lods
out
push
push
aaa
pop
addr16
lds
dec
dec
mov
stos
ret
or
pop
pop
or
shl
add
(bad)
ins
loop
push
jae
push
fldcw
adc
les
loop
sub
jmp
mov
ret
mov
inc
dec
push
xchg
sub
cmp
push
xor
leave
or
test
xchg
push
imul
repz
pop
sti
sar
mov
cmps
(bad)
retf
test
das
dec
adc
mov
sbb
bound
cwde
add
enter
or
popa
hlt
dec
hlt
jnp
cmp
or
inc
push
mov
xchg
sub
push
cmp
add
push
mov
push
fnsave
fisub
sahf
lahf
push
stos
aaa
xchg
(bad)
stc
fdivp
push
adc
jns
xchg
xor
cmc
aaa
scas
sbb
jmp
div
dec
adc
inc
arpl
retf
and
repz
jb
retf
out
mov
das
sub
sub
jb
or
cdq
jmp
add
add
call
jp
push
push
adc
nop
mov
(bad)
mov
add
jmp
cmp
test
xchg
je
pop
icebp
adc
dec
aam
mov
cmp
cdq
mov
xchg
loope
(bad)
xlat
push
hlt
pop
scas
inc
dec
mov
icebp
push
ins
jns
mov
push
inc
mov
icebp
pop
mov
mov
stos
pop
sub
das
or
ins
mov
mov
pushf
je
add
sbb
adc
pop
cmps
mov
sub
sub
push
out
dec
lea
xor
in
popf
pop
sbb
imul
push
mov
push
mov
(bad)
retf
ret
push
xor
dec
and
cdq
push
lahf
clc
ds
(bad)
push
popf
inc
cmp
les
inc
dec
push
push
and
imul
lods
inc
mov
push
xchg
xor
adc
lock
leave
sub
imul
fcom
adc
sub
add
aaa
repnz
jne
popa
mov
fsub
clc
adc
dec
cmp
outs
mov
jge
repnz
(bad)
pop
mov
jg
rcl
je
loopne
jb
mov
stc
mov
add
or
aad
xchg
bound
mov
push
stos
jno
out
pop
and
iret
push
dec
mov
movs
and
inc
cmp
dec
sbb
retf
cmc
cs
(bad)
iret
mov
test
mov
imul
imul
aam
push
mov
mov
pop
psrld
data16
aam
mov
fmul
jae
mov
sub
ins
adc
rol
ja
xchg
push
shl
mov
adc
imul
sub
lock
dec
(bad)
cli
xor
je
pop
mov
rcl
xor
pop
xchg
mov
jns
hlt
push
movs
imul
sbb
mov
pusha
int3
rol
mov
js
js
fsub
cs
xor
pop
jl
lds
jnp
cli
daa
div
test
test
cmp
push
push
lods
cmp
jno
repnz
ins
outs
test
cdq
(bad)
out
imul
or
pop
cdq
or
add
(bad)
xchg
push
cld
loopne
and
fsub
shl
cmp
aas
jmp
xchg
or
in
ret
arpl
cmps
repnz
scas
ret
rcr
lahf
stc
imul
adc
push
mov
fldcw
inc
rcl
sar
jns
fs
xor
call
fwait
dec
dec
out
pop
mov
cmp
mov
inc
push
mov
xor
leave
js
pop
repnz
pop
cdq
outs
popa
daa
fwait
mov
loope
mov
sbb
retf
xor
das
fisubr
call
jge
and
xchg
out
sub
push
mov
add
adc
das
xchg
loope
cwde
dec
int
push
test
enter
sub
push
pop
add
pusha
jne
jo
imul
sub
jmp
dec
fild
repnz
xor
ret
xlat
inc
loopne
dec
or
inc
je
jg
mov
lods
frstorw
add
aas
inc
arpl
mov
dec
add
pusha
movs
jmp
mov
and
cmps
aas
test
add
pop
xchg
sub
fst
xor
inc
pxor
ucomiss
and
pop
mov
ja
push
adc
mov
outs
sub
fistp
movs
ja
mov
jo
sbb
leave
jae
inc
addr16
test
jecxz
xchg
int3
daa
sub
pop
xor
cmp
mov
jo
imul
pop
out
dec
add
sbb
fs
scas
sub
in
jle
jp
pop
push
cdq
push
retf
cmp
scas
out
jnp
mov
je
popa
shr
push
scas
xor
repnz
mov
adc
mov
sub
imul
fcmovnbe
push
dec
aad
mov
add
adc
sahf
inc
nop
pop
mov
sahf
out
push
addr16
sti
or
sbb
jecxz
jge
cmc
push
scas
cmp
(bad)
mov
fnsave
mov
sbb
xchg
lds
xchg
ins
jle
xlat
push
shl
jmp
or
loopne
xchg
adc
mov
stc
or
add
jecxz
neg
mov
pop
mov
mov
mov
enter
mov
mov
xlat
sub
jp
cmp
mov
and
call
loop
mov
adc
add
aas
fldcw
sbb
sbb
mov
cmp
jns
mov
add
adc
(bad)
lods
xor
mov
adc
xchg
fldenv
sub
xor
repz
sbb
add
xchg
repz
sub
sbb
xchg
push
jmp
mov
mov
push
outs
sub
test
test
adc
sub
jp
rcr
cmps
push
imul
out
jo
ss
jo
dec
xor
add
and
inc
pop
(bad)
mov
sub
and
xor
stc
mov
ins
enter
stc
jle
jnp
out
push
jns
sub
out
pop
mov
fs
and
ja
push
push
dec
aad
hlt
push
xchg
add
mov
pop
dec
ins
dec
(bad)
xchg
mov
pop
leave
mov
or
loopne
into
pop
push
test
mov
stc
adc
out
cmovs
and
xor
lds
sub
movs
das
cmc
xor
cld
ja
or
ret
out
add
icebp
add
in
frstor
cmps
mov
mov
sbb
mov
outs
mov
lds
fwait
push
sub
sbb
add
inc
mov
test
fld
cmp
mov
push
and
push
sub
jo
sub
push
aad
daa
mov
inc
and
xlat
les
pusha
shl
jne
cmc
adc
xchg
cdq
cmps
clc
xchg
inc
xor
cld
test
(bad)
hlt
ror
mov
dec
pusha
retf
shl
call
inc
leave
mov
stc
aam
pop
movs
pop
aas
pop
sub
push
out
fidiv
mov
mov
inc
stc
fwait
pop
les
xor
movs
push
cmp
cmp
in
pop
pushf
dec
cmp
test
int
shr
sahf
sub
lahf
push
adc
iret
mov
in
test
sub
cli
bound
pop
push
ins
and
or
ins
xchg
push
pushf
int3
adc
push
push
call
sub
cmp
push
sub
mov
cmp
fisttp
xchg
adc
call
popf
adc
mov
push
jg
dec
aaa
mov
lods
adc
xchg
xchg
jmp
cdq
test
push
push
xchg
mov
mov
adc
mov
hlt
sub
les
sub
mov
mov
cwde
inc
jmp
jns
mov
cmp
wbinvd
daa
mov
mov
cmp
cmp
rcl
outs
dec
jmp
pop
mov
arpl
push
in
xchg
icebp
mov
nop
movs
or
(bad)
or
lock
adc
pushf
das
bound
or
nop
dec
mov
adc
jmp
cmp
pop
cmp
in
mov
cli
aad
lahf
cs
jnp
out
mov
je
xlat
ret
rsm
icebp
test
stos
shl
push
or
or
mov
ss
iret
mov
pop
fst
add
add
repz
pop
jnp
fisttp
mov
jmp
add
and
xchg
ja
mov
mov
ret
dec
frstor
stos
or
inc
fidiv
mov
pop
pop
and
jne
adc
adc
dec
mov
xor
xlat
fstp
sub
icebp
push
jbe
movs
(bad)
mov
jge
jnp
fnstsw
sbb
in
mov
mov
push
jl
aad
mov
imul
pusha
sar
outs
push
pop
xchg
sub
imul
and
cmps
shl
in
ins
jae
pop
imul
icebp
or
lock
add
jnp
popf
mov
add
ins
push
xor
jne
imul
push
(bad)
out
push
iret
adc
pop
and
mov
fist
push
fst
mov
icebp
xchg
ds
popf
stos
xor
iret
pop
retf
adc
or
adc
mov
arpl
test
xor
mov
dec
xchg
mov
adc
and
pop
sbb
push
movs
retf
ja
aaa
ror
xchg
add
add
jo
loop
pop
ret
mov
xlat
fistp
cli
adc
push
cdq
sbb
pusha
ss
rol
push
sub
sub
scas
jmp
jge
add
neg
ror
(bad)
fwait
and
mov
mov
les
mov
and
sti
and
loopne
(bad)
push
aad
pusha
and
movs
mov
xchg
mov
and
jmp
(bad)
jle
bound
dec
mov
mov
fild
pop
cwde
jno
jle
mov
xor
xchg
movs
(bad)
in
iret
test
and
mov
xlat
push
ja
xchg
lea
xor
cmp
sub
(bad)
icebp
(bad)
leave
mov
call
inc
xchg
lods
xor
leave
mov
pop
mov
sub
lods
add
mov
jb
sbb
js
test
in
mov
int3
mov
les
jb
cmp
or
mov
jb
cmp
fst
loop
mov
aaa
fsub
das
sub
xchg
adc
or
dec
push
adc
jmp
int3
mov
and
jge
out
add
inc
jle
inc
int
jns
cld
cld
popa
int
fcomp
pushf
(bad)
xchg
push
popf
dec
fstp
(bad)
imul
jecxz
mov
ja
iret
fsub
mov
cmps
adc
stos
fld
mov
xchg
xor
(bad)
jno
dec
add
pop
imul
jp
icebp
iret
xor
sub
mov
push
mov
xchg
imul
mov
addr16
pusha
test
ins
cdq
sub
and
or
fs
and
push
(bad)
out
adc
outs
xchg
aaa
and
jbe
jg
aad
adc
out
pop
sbb
movs
push
add
sub
aaa
pop
aaa
adc
xchg
int
loope
inc
adc
mov
xchg
outs
cmps
or
push
(bad)
jmp
or
inc
daa
pop
std
lds
outs
jno
mov
jle
pushf
push
xchg
ret
pop
cmp
sub
retf
loop
inc
jnp
icebp
xor
je
aaa
push
mov
jns
push
push
mov
pop
xor
pushf
cmp
mov
jnp
dec
push
retf
xchg
sub
sar
cmp
ds
cmp
xor
aad
clc
sar
cmp
mov
stos
xor
mov
sbb
dec
das
dec
int
loope
pop
push
sub
sar
pop
and
cmp
sub
lahf
jge
and
cmp
fcmovne
data16
pop
das
test
mov
(bad)
mov
bound
mov
xchg
add
out
movs
jne
leave
(bad)
mov
xor
push
fild
and
xchg
mov
mov
stc
inc
jb
xlat
test
(bad)
xchg
cmps
dec
int
in
int
(bad)
and
adc
mov
lahf
in
repz
jmp
je
push
dec
jae
shl
loopne
popf
sbb
mov
xlat
adc
popa
xchg
rol
cmp
test
inc
xor
cwde
cmc
sbb
push
ror
pop
int3
jmp
(bad)
shr
push
(bad)
jmp
lea
cmp
mov
icebp
test
mov
test
test
add
nop
push
call
mov
mov
cmp
mov
mov
out
mov
mov
sbb
mov
aas
cpuid
mov
outs
fist
popa
dec
pop
stc
cmp
jb
test
and
xchg
mov
add
xchg
mov
sbb
loopne
pusha
or
neg
push
addr16
xor
(bad)
dec
jecxz
adc
xchg
jns
and
outs
idiv
retf
stc
xchg
sub
fwait
xchg
add
sbb
cdq
jmp
repnz
lds
sub
push
fidiv
and
pop
out
mov
(bad)
jbe
loopne
fs
or
retf
push
pop
cmps
dec
add
mov
inc
dec
jb
push
les
js
fsub
xor
adc
jmp
or
outs
mov
and
ja
lods
xlat
and
xchg
popa
and
mov
mov
sbb
in
imul
test
jl
jge
push
into
push
out
ss
aaa
xor
sbb
adc
add
push
call
inc
lahf
aas
(bad)
pop
push
imul
sub
xor
add
repnz
add
in
mov
into
xchg
mov
and
nop
jge
mov
xchg
xor
push
sub
and
jecxz
int3
xchg
cmp
jp
test
and
imul
div
mov
pop
mov
mov
imul
push
fisttp
mov
sbb
loope
jbe
out
add
cmp
and
mov
add
movs
adc
ret
fadd
jmp
cmp
test
(bad)
xor
pop
and
not
mov
imul
in
cmp
das
jne
jmp
push
mov
outs
int
inc
cmp
cmps
inc
add
(bad)
les
repz
mov
cmp
enter
jae
or
pop
or
(bad)
xchg
stc
mov
lahf
dec
or
jb
xchg
xor
aas
add
xchg
xor
shr
lods
inc
xchg
scas
ins
xchg
(bad)
and
adc
sbb
pop
imul
rcl
jne
jmp
or
jmp
jne
mov
jge
jb
es
dec
jg
test
das
pop
hlt
movs
fs
popa
je
and
or
stos
in
adc
mov
sub
aam
push
cwde
sahf
imul
jp
dec
or
inc
scas
xchg
mov
inc
inc
jmp
mov
pslld
and
inc
cmp
push
jp
js
dec
popa
inc
sbb
pop
add
(bad)
xlat
ds
or
sbb
aas
aas
sbb
push
call
push
ss
scas
repz
shl
push
adc
or
adc
xchg
xchg
and
popa
les
or
cmps
les
xor
iret
push
push
fwait
imul
mov
repz
into
mov
cmp
sbb
mov
inc
pop
cmp
aad
lock
sub
cs
sbb
sbb
or
dec
mov
lock
fxch
push
inc
dec
out
fwait
xchg
outs
mov
push
add
cmp
nop
jg
repnz
ret
jp
mov
xchg
hlt
mov
jo
sub
mov
add
fadd
in
jg
inc
sbb
pop
outs
cmc
jno
sbb
inc
movs
push
push
jnp
in
push
mov
scas
fist
push
nop
add
movs
mov
sbb
fbstp
in
js
inc
fxch
cmp
int
je
sahf
cmp
mov
pop
sbb
out
jmp
mov
cld
cmp
or
jnp
aas
(bad)
jg
retf
popf
fistp
inc
(bad)
cdq
jo
movaps
add
or
fild
adc
xor
dec
(bad)
xor
push
fs
or
push
outs
int3
icebp
push
out
int3
push
hlt
cdq
push
add
pop
nop
mov
xchg
fsubr
xchg
inc
mov
pop
jle
jnp
mov
ds
sub
add
aaa
mov
pop
mov
imul
mov
mov
out
cmp
xor
addr16
test
iret
lods
loop
arpl
sbb
jp
mov
(bad)
xchg
pop
push
push
dec
nop
mul
fmul
outs
test
aas
mov
dec
mov
xchg
(bad)
aas
scas
je
sbb
rcl
pop
jge
push
imul
cmps
cmp
sub
push
ret
fdiv
cmp
sbb
inc
out
cmp
xchg
mov
ins
jb
movs
stc
dec
retf
ja
xchg
cmp
push
(bad)
test
add
test
std
dec
cmp
jb
sub
cld
pop
sar
cmpps
imul
ss
pop
das
(bad)
ds
add
cld
jmp
test
in
mov
stos
xor
scas
mov
jle
dec
jmp
add
loopne
or
sub
mov
mov
inc
lods
mov
jmp
je
mov
inc
aam
pop
mov
in
push
xor
cmps
ins
and
mov
mov
imul
jo
ins
std
int3
push
mov
xchg
adc
cmc
pop
test
std
adc
outs
sub
and
pop
cli
dec
pop
int
pop
pop
or
cmps
xchg
pushf
retf
pop
sub
jmp
fld
in
mov
cmp
aas
fist
dec
sbb
arpl
xchg
mul
test
push
fwait
inc
mov
enter
cs
mov
add
out
push
pshufw
mov
push
adc
xchg
jae
aam
xor
in
enter
sub
dec
scas
outs
and
mov
imul
dec
sahf
jne
jmp
or
mov
in
sahf
lea
dec
out
lock
sbb
loopne
dec
pop
ror
xor
and
mov
or
mov
out
xchg
bound
mov
adc
dec
or
push
fstp
out
jnp
sub
(bad)
repz
cmp
sti
cmps
sti
fs
pop
sub
adc
bound
mov
call
add
sbb
cdq
test
xchg
inc
std
mov
sub
push
push
hlt
xor
jmp
dec
stc
nop
out
mov
and
addr16
ret
(bad)
stc
jno
pop
inc
pop
mov
or
loope
and
js
jecxz
fsub
cmps
in
push
stos
fucomi
pop
call
jne
pop
fcomp
ret
push
add
fimul
adc
repz
das
or
adc
sbb
loop
dec
rcl
sbb
mov
sahf
and
push
xchg
or
pusha
mov
scas
adc
repz
xchg
daa
push
aad
mov
iret
and
(bad)
ss
cmp
sub
clc
cmp
sub
and
pop
ficomp
ds
retf
scas
pushf
aaa
sbb
clc
repnz
jmp
mov
xor
pop
shl
scas
ins
fdiv
mov
mov
cwde
jne
test
arpl
mov
inc
fnstenv
lods
(bad)
push
(bad)
inc
lahf
cmc
push
(bad)
das
lea
imul
adc
fsub
push
inc
push
daa
cmp
cmp
adc
pop
jnp
inc
pop
sbb
test
inc
loopne
or
int
fld
push
mov
data16
ins
fwait
cs
mov
scas
rcl
lds
adc
cmc
inc
and
mov
mov
test
inc
scas
dec
jno
test
xlat
(bad)
jnp
rcl
mov
enter
pop
and
(bad)
sbb
mov
arpl
fidiv
(bad)
in
dec
(bad)
rcr
fild
aaa
add
cmp
out
inc
add
pusha
inc
clc
xchg
cs
xchg
xor
inc
sbb
jns
jp
adc
jo
xchg
arpl
sub
stos
dec
cmp
xor
cmp
add
arpl
push
xchg
scas
nop
stos
cs
jno
jbe
inc
sub
popa
gs
fnstcw
adc
push
icebp
sahf
xchg
pop
and
lods
cwde
xor
fidiv
inc
push
or
mov
xor
add
mov
sbb
add
sub
ss
fist
jnp
hlt
inc
jnp
push
or
jne
fild
mov
add
mov
xor
xlat
mov
push
jb
pop
mov
gs
fmul
lds
dec
or
mov
push
sub
xchg
jbe
sti
fild
in
rcr
xchg
jne
adc
sbb
push
retf
push
and
and
call
pop
fdiv
ss
xor
mov
imul
stos
push
mov
shr
add
add
sbb
arpl
pop
push
enter
(bad)
jg
xchg
mov
es
push
sbb
dec
xchg
es
in
out
xchg
movs
cwde
adc
sbb
mov
sbb
pop
fist
addr16
mov
dec
sub
mov
jnp
add
fs
xor
cmc
jge
or
sti
jnp
out
push
cld
fimul
repnz
sub
das
pop
pusha
mov
out
xchg
int
sahf
hlt
cmp
loopne
call
lods
jne
fsub
sbb
fld
push
xchg
pop
inc
out
ss
jge
cmp
jne
in
sti
xchg
lock
idiv
xchg
xor
cwde
loope
fisub
jmp
sbb
add
mov
jb
(bad)
ret
cmps
mov
xchg
sbb
pop
frstor
inc
fs
test
cmp
fiadd
test
mul
fldcw
std
scas
jno
mov
xchg
pop
out
data16
outs
aam
push
jno
sub
adc
sahf
add
sti
gs
xchg
inc
adc
dec
mov
add
inc
iret
out
loopne
stc
pop
fdivrp
nop
pop
in
pop
push
adc
scas
or
aaa
clc
ror
shr
std
sbb
dec
(bad)
repnz
pusha
test
mov
adc
xor
sub
js
arpl
ret
lahf
mov
mov
and
and
mov
gs
enter
test
leave
in
fmul
xchg
ds
or
lods
xor
pop
inc
scas
sbb
pop
jmp
repz
ss
pusha
aaa
cmp
jp
shl
into
fldenv
femms
push
push
outs
adc
sub
sbb
adc
jnp
dec
xor
dec
aam
xor
and
cwde
jp
xor
xchg
add
outs
add
xor
repnz
stos
pop
mov
add
mov
mov
imul
int
pop
pop
or
mov
pop
pusha
push
push
in
mov
in
inc
test
mov
popa
mov
pop
ret
pop
aas
enter
and
sbb
pusha
lods
push
jp
mov
xor
cdq
xchg
jle
cli
cli
mov
mov
sbb
js
int
(bad)
in
mov
jecxz
and
std
aas
shl
push
push
sbb
mov
mov
popa
test
cmp
push
push
aam
shl
rol
push
repz
in
push
adc
mov
dec
div
pop
pop
and
pop
mov
add
movs
push
cdq
xchg
push
sar
sbb
inc
fwait
inc
adc
and
fld
dec
fcom
jl
cmp
fs
push
out
jns
mov
or
push
mov
addr16
test
lods
pop
scas
sbb
xchg
cmp
adc
and
bound
adc
hlt
fucomi
sbb
clc
cmp
popa
xor
jmp
push
push
loop
or
scas
pusha
leave
(bad)
(bad)
and
mov
shl
in
in
xor
rol
xchg
(bad)
outs
and
repnz
ins
ret
lods
gs
sbb
dec
mov
or
(bad)
test
jmp
dec
jo
mov
imul
outs
leave
adc
sbb
call
xor
je
pop
mov
not
ja
add
lods
xor
inc
int3
int
adc
(bad)
(bad)
div
jbe
inc
scas
dec
and
add
or
push
and
push
sub
lahf
mov
and
mov
test
iret
sub
ds
lahf
in
push
xchg
fdecstp
xor
aam
jle
call
push
scas
cmp
and
dec
inc
jg
aam
adc
cmp
(bad)
push
nop
adc
pusha
xor
inc
push
mov
dec
movs
pop
push
jg
xor
inc
or
ins
xchg
ret
jmp
xor
mov
test
adc
in
adc
pusha
mov
inc
push
mov
xchg
mov
dec
push
cld
sub
dec
adc
xchg
push
mov
(bad)
out
rol
sbb
push
pop
call
lods
xor
clc
and
stos
xchg
cmc
xchg
imul
inc
add
or
or
adc
in
test
(bad)
aaa
cmp
hlt
aam
xchg
daa
and
dec
push
in
data16
and
ds
in
fimul
xor
mov
push
sbb
mov
bound
dec
sbb
sbb
test
xor
movs
adc
jmp
mov
ret
pop
xor
push
or
mov
and
fcmovu
pop
enter
and
add
push
sahf
rcr
shl
jg
pusha
jns
bound
les
aas
mov
bnd
push
pop
push
stos
push
pop
xor
sub
sub
test
jl
out
icebp
jmp
pop
in
sti
pop
iret
or
push
test
sub
fs
dec
xchg
and
test
jnp
add
ss
enter
push
sahf
sahf
pusha
jmp
cmp
mov
movs
ins
or
es
(bad)
xlat
ja
inc
push
aam
jb
inc
mov
cmp
and
push
js
lahf
cmp
mov
xchg
inc
pushf
cli
mov
ficomp
pop
jne
mov
sbb
mov
imul
xchg
(bad)
out
xchg
lock
or
xchg
xor
pop
and
inc
cmp
or
test
mov
cmp
cmps
mov
fsubr
inc
and
inc
add
dec
enter
add
jge
jo
mov
cli
and
shl
daa
ss
(bad)
xchg
or
mov
outs
std
out
hlt
jmp
xchg
xchg
call
cmova
or
fisttp
aad
xor
and
outs
sub
push
std
mov
in
jle
mov
lds
cmp
bound
mov
lock
in
adc
arpl
pop
scas
mov
pop
sbb
test
xchg
xchg
dec
in
fidiv
lods
xor
cmc
mov
dec
jle
xor
lods
dec
inc
xchg
(bad)
jmp
jmp
outs
or
sbb
sub
push
jmp
stos
(bad)
jmp
std
lds
mov
inc
out
popa
movs
push
push
push
repnz
imul
fmul
push
jno
dec
dec
in
pop
and
sbb
jne
or
sbb
ins
daa
push
mov
xor
mov
jmp
sub
xor
sub
adc
mov
push
test
imul
mov
inc
sub
cs
fwait
xor
sahf
aaa
mov
jmp
mov
movs
or
gs
iret
loopne
popf
jno
sub
test
sbb
inc
popf
div
xchg
retf
fisubr
dec
xchg
jbe
push
fs
sub
cmp
cwde
xchg
nop
std
and
hlt
loop
cmp
mov
bound
mov
pusha
inc
dec
ret
scas
adc
pop
(bad)
(bad)
fstp
or
std
dec
mov
sbb
leave
repnz
pop
fwait
rol
cmc
in
pop
mov
nop
push
pop
mov
rcr
jmp
jp
cmp
xchg
jbe
sbb
call
repnz
or
bswap
sbb
addr16
sbb
cmps
add
je
jns
mov
pop
push
fwait
cwde
dec
test
push
pushf
dec
and
xchg
ja
jl
inc
jmp
cmp
inc
into
dec
fidivr
mov
lods
mov
pushf
int3
int3
les
mov
inc
inc
push
mov
push
idiv
cmps
int
test
bound
in
outs
adc
or
retf
test
cs
int3
jno
dec
test
imul
xor
fsubrp
jb
aas
sub
add
mov
inc
inc
jns
pop
mov
into
mov
xor
add
mov
adc
mov
sahf
inc
rcl
scas
icebp
std
sar
sub
aam
pop
fmulp
cdq
pop
mov
(bad)
cdq
mov
fdivr
dec
pop
pop
inc
aaa
out
add
fisttp
fidivr
cmp
loop
add
leave
std
mov
adc
jbe
out
mov
push
or
lods
ret
jno
jg
xchg
mov
outs
jb
dec
jmp
and
pop
std
call
retf
aam
es
fcomp
xor
xchg
movs
inc
cdq
fnstcw
pop
fs
clc
cwde
xor
mov
mov
enter
int3
push
push
inc
mov
fnsave
and
mov
and
mov
mov
outs
push
mov
aam
jecxz
inc
or
jno
pop
outs
add
or
pop
cdq
push
adc
test
ret
jb
jb
push
xor
jbe
xor
outs
call
xor
cmp
mov
push
jb
jmp
push
pushf
push
sub
cdq
lods
rcr
cmp
push
add
push
push
and
jecxz
push
into
jmp
inc
mov
ins
dec
rcr
jns
add
push
dec
imul
jo
adc
push
aam
xchg
jg
(bad)
ss
and
dec
loope
addr16
pop
jg
fwait
mov
clc
cmps
call
fucomp
fsub
stos
jl
fwait
int3
loop
daa
mov
dec
sbb
cld
xchg
pop
ins
or
pop
bound
mov
jbe
push
scas
mov
ret
mov
call
pop
std
ja
push
idiv
push
pushf
stos
inc
mov
cdq
adc
sub
out
clc
mov
mov
addr16
fcomp
or
popf
mov
xchg
mul
scas
into
jmp
fnsetpm(287
imul
xor
mov
outs
jne
inc
inc
cmp
adc
aad
leave
stc
pop
pop
xlat
test
sub
jb
in
outs
fwait
jmp
rcl
and
push
xchg
rcl
fnstsw
scas
add
pop
mov
jno
jmp
push
ror
push
mov
pop
xor
inc
outs
or
in
ret
outs
clc
iret
fs
nop
push
movs
jae
pop
into
shl
jae
mov
jmp
cli
mov
sub
lea
xlat
(bad)
loopne
sub
pop
dec
cmp
in
jns
pop
test
enter
inc
dec
mov
jecxz
das
pop
or
out
or
(bad)
fcom
in
inc
inc
jge
add
or
dec
lahf
ja
fcmovnu
stos
stos
push
mov
jmp
repz
ret
xchg
loop
aaa
sub
jmp
out
dec
in
push
xchg
jae
jo
cmp
push
mov
inc
dec
mov
pop
adc
or
aam
in
or
je
daa
xor
call
out
je
add
arpl
outs
lods
out
sbb
adc
or
mov
out
xor
not
add
cmps
iret
fadd
int3
jg
test
xchg
sub
sub
cmp
cmp
sub
jmp
ja
in
sub
fwait
cli
cmc
sbb
jae
(bad)
dec
dec
push
fs
repz
mov
mov
lds
test
push
dec
cmp
popa
add
mov
test
aas
ret
leave
addr16
bound
mov
inc
sub
push
mov
inc
fwait
mov
sahf
imul
inc
mov
dec
jno
sbb
and
xchg
ja
or
cmp
cmp
fsubr
out
push
push
ss
xor
inc
inc
pop
push
jmp
icebp
iret
mov
in
repz
jbe
cmp
inc
jb
or
push
clc
mov
push
pop
adc
xchg
fcmovu
movs
ins
imul
mov
rcl
retf
adc
pop
retf
dec
mov
jo
scas
xchg
ret
sbb
cvtps2pd
and
pop
pushf
jno
repz
cmps
mov
clc
ror
xchg
cdq
hlt
test
dec
inc
mov
push
ja
scas
xchg
sub
test
push
push
dec
or
daa
push
ja
add
and
cmps
test
sub
add
addr16
mov
xlat
mov
outs
and
scas
push
das
loope
aad
cmp
xchg
push
adc
lock
mov
mov
sub
loope
mov
pop
aad
jmp
fwait
loopne
fs
xchg
fwait
mov
xor
adc
into
mov
inc
test
sbb
jo
push
fwait
lods
mov
js
call
bound
(bad)
loop
pop
pop
jne
enter
sub
sar
inc
or
push
iret
lods
inc
xor
sub
inc
(bad)
mov
pop
popa
xor
aas
test
cs
das
or
inc
mov
jo
in
add
sub
cmp
add
mov
icebp
jp
or
add
mov
lea
bound
shl
or
mov
sbb
mov
loop
retf
mov
push
or
mov
outs
and
shl
mov
lds
mov
mov
dec
mov
call
mov
mov
sbb
mov
and
mov
mov
mov
add
sub
retf
sbb
or
or
mov
mov
mov
inc
sbb
pop
mov
sub
and
fs
push
popf
popa
pop
dec
and
pop
pop
xor
push
(bad)
pop
lods
(bad)
sti
xlat
xchg
aad
ins
dec
mov
(bad)
pushf
ja
mov
jns
mov
(bad)
fwait
xchg
inc
xchg
add
xchg
add
rol
ss
jmp
jne
out
in
mov
xor
in
mov
sti
inc
push
in
mov
xor
out
popf
dec
call
loopne
xor
(bad)
pop
jp
jmp
mov
sub
and
fidiv
jmp
das
mov
mov
cmp
push
ficomp
dec
dec
(bad)
or
cwde
or
mov
jl
and
cmp
popf
jno
inc
retf
shl
push
test
cmp
sub
fwait
aad
mov
sbb
sbb
jge
xchg
scas
out
das
inc
jno
out
jle
leave
mov
cwde
adc
fistp
jns
mov
rcr
xor
mov
xchg
cwde
lock
ret
sti
or
fcomp
nop
sbb
dec
call
loopne
xchg
icebp
push
xchg
ds
jmp
jecxz
adc
ret
cld
mov
push
mov
lods
push
ret
xor
call
movs
inc
push
call
popa
dec
dec
popf
mov
test
sub
into
mov
cld
or
sub
rcr
out
cwde
jl
add
xchg
mov
lea
loop
fdiv
adc
ret
enter
movs
jmp
shl
or
pop
rcl
fs
retf
or
fcmovbe
add
inc
cmp
arpl
mov
jns
dec
xchg
mov
shl
pop
push
pop
sub
mov
aaa
das
cmc
cmp
mov
xchg
mov
pop
jmp
mov
or
std
pop
mul
push
ss
mov
or
pop
sbb
fsub
or
mov
sub
mov
or
in
mov
jge
jmp
cmp
push
ror
push
imul
adc
test
pop
repz
outs
fld
add
and
mov
xchg
xchg
inc
pop
cld
pusha
xlat
(bad)
or
jb
jne
mov
fisub
add
ror
xor
fadd
xor
sbb
pop
dec
sbb
in
cmps
scas
inc
xchg
xchg
mov
sub
movs
xor
add
xchg
pop
pop
or
lea
in
fisubr
movs
mov
mov
fistp
fsubr
jb
or
xor
test
or
ins
add
sar
movs
mov
arpl
cmp
ins
aas
movs
gs
and
rol
or
or
fistp
inc
stos
inc
sbb
popa
das
in
(bad)
mov
cmp
std
pop
sbb
in
jp
iret
int3
mov
jb
iret
addr16
sti
js
leave
call
xchg
lds
jmp
lods
push
pop
push
and
ds
inc
inc
add
push
adc
add
lea
repnz
(bad)
ror
sbb
xor
call
stc
test
fwait
ins
(bad)
mov
xchg
sahf
pop
mov
jle
or
add
adc
call
jp
(bad)
in
xchg
add
jb
add
leave
xchg
and
icebp
add
enter
retf
push
push
jmp
jg
xchg
xor
hlt
push
popa
mov
lods
test
jp
or
adc
jae
int3
cmc
(bad)
inc
outs
push
adc
sub
addr16
or
in
xchg
ins
repnz
in
sbb
outs
int
ret
and
test
sbb
cmp
aaa
sahf
pop
cli
shr
push
sub
or
fwait
bound
cmps
leave
loope
(bad)
cld
aam
xchg
pushf
xor
xchg
imul
in
push
arpl
sti
xor
or
bound
or
cli
xor
shr
arpl
adc
adc
das
sbb
aam
xor
adc
mov
lds
and
je
lods
cmp
xor
adc
sbb
aam
push
test
clc
iret
ins
inc
int
fdivr
adc
xchg
xchg
dec
aam
ins
mov
push
not
add
sahf
fs
jle
adc
cmp
cwde
mov
mov
push
arpl
(bad)
nop
hlt
pop
std
xchg
in
xchg
and
in
jb
push
push
push
les
push
rcl
push
inc
cmc
inc
jno
out
scas
(bad)
jecxz
(bad)
jmp
(bad)
jmp
sbb
mov
push
pop
into
out
enter
loop
cmps
add
inc
xchg
(bad)
(bad)
stos
mov
jne
adc
push
call
imul
jge
jp
popf
loopne
xchg
movs
hlt
push
cmp
ds
sub
inc
lods
(bad)
pop
mov
xor
push
sbb
pop
clc
test
cwde
aam
lds
mov
inc
out
movs
scas
or
imul
mov
pop
or
fisttp
rcl
(bad)
call
mov
out
out
xor
jp
mov
or
mov
stc
fs
(bad)
bound
test
and
repz
xor
pop
(bad)
pop
cmps
cwde
jo
dec
loope
or
cs
aad
stos
fsub
mov
in
dec
test
add
ret
add
jmp
sub
hlt
xlat
mov
cld
mov
(bad)
imul
std
dec
jae
mov
mov
xchg
daa
mov
mov
add
test
jnp
xor
push
popa
mov
pop
xor
pop
adc
pop
shl
js
movs
adc
inc
hlt
dec
pop
inc
mov
pop
imul
clc
scas
stos
(bad)
stc
push
push
add
idiv
lods
jne
not
add
xor
cmp
adc
dec
daa
leave
mov
es
rcl
gs
dec
mov
(bad)
ficomp
adc
xchg
dec
xchg
jbe
sar
adc
mov
sbb
cdq
cwde
or
sti
fcomp
mov
xchg
popf
mov
inc
adc
pop
popa
dec
sahf
and
mov
pop
or
fidiv
cmp
mov
pop
mov
mov
js
ret
dec
sbb
imul
pop
(bad)
pushf
cmps
scas
cmp
fmulp
sti
add
ja
mov
test
dec
jbe
dec
cmp
dec
adc
sbb
xchg
and
aam
mov
inc
cmp
push
in
pop
push
adc
cdq
dec
(bad)
mov
into
mov
pusha
sahf
fisttp
jbe
ret
jb
fs
mov
push
into
xchg
adc
std
and
lahf
xchg
inc
popa
xor
inc
jns
clc
(bad)
push
lock
ds
mov
test
in
cmc
out
pop
leave
cli
xlat
addr16
adc
xor
repz
int3
inc
sbb
pop
push
and
jo
imul
rdtsc
in
add
out
jmp
jecxz
xor
dec
jno
sbb
xor
sub
jb
mov
add
dec
mov
cli
je
mov
add
pop
mov
push
jae
or
add
out
cmove
cwde
sbb
rcr
jmp
leave
inc
int
xchg
or
mov
push
adc
dec
cwde
mov
int
bnd
je
cwde
and
(bad)
fistp
sbb
push
out
loope
imul
arpl
sahf
inc
idiv
cmps
add
jb
ret
jns
fmul
and
inc
stos
push
mov
imul
icebp
hlt
lods
xor
mov
mov
jecxz
rcr
cmp
retf
imul
mov
or
mov
sbb
idiv
mov
das
push
jo
dec
or
in
cmc
adc
pop
dec
jae
test
and
jo
nop
jmp
add
or
lds
lea
add
(bad)
movs
cli
or
dec
fist
pop
lods
dec
imul
dec
inc
jbe
sbb
loope
rcr
scas
cmp
arpl
jae
mov
mov
adc
inc
mov
clc
gs
xor
(bad)
add
push
int3
push
fmul
adc
call
loopne
xchg
out
int3
sub
mov
xchg
fs
inc
(bad)
jae
(bad)
xchg
js
sar
sbb
into
push
mov
dec
dec
sbb
jno
cdq
pop
in
push
adc
mov
dec
sar
bound
pop
mov
mov
dec
rcr
loope
in
out
dec
and
sbb
cmp
and
push
jnp
add
sub
gs
rol
sti
iret
dec
imul
dec
imul
das
pop
mov
loope
paddusw
aaa
jmp
xor
or
cdq
or
push
(bad)
jecxz
call
inc
add
aaa
and
fimul
jo
or
jge
fld
mov
shr
loope
aas
nop
sbb
mov
cwde
out
and
cmp
adc
dec
ins
scas
cdq
dec
(bad)
xchg
push
push
jno
repnz
push
js
lds
jb
pop
xchg
test
movs
cmps
imul
out
idiv
aad
sub
data16
outs
scas
mov
lods
push
dec
stos
(bad)
pop
clc
add
xchg
xchg
jns
clc
adc
dec
cmps
outs
mov
stos
pop
mov
lds
xor
stos
dec
jg
or
lods
or
int
mov
adc
retf
ret
(bad)
fisttp
push
movs
pop
jle
les
imul
inc
retf
pop
retf
jl
enter
or
outs
xchg
and
pop
xor
pop
popa
rcr
cmp
jl
xor
mov
cmp
or
enter
les
cmp
adc
push
repnz
inc
pop
out
lea
iret
std
fs
sbb
sub
fcomp
cdq
ret
pop
mov
jnp
xor
es
jmp
pop
pop
jge
cs
push
sbb
cmp
es
xchg
or
mov
and
in
test
sub
int3
mov
fdiv
sbb
push
sbb
lock
call
pop
sub
inc
push
add
cmp
call
test
es
mov
dec
jmp
js
mov
imul
dec
push
stos
mov
pop
inc
add
leave
xor
movs
cmp
dec
cli
jnp
mov
fcom
sbb
in
movs
ins
jl
ret
dec
pop
(bad)
cmp
pusha
and
js
in
ss
in
push
xor
push
iret
aas
xor
mov
not
loop
pop
shl
and
aad
xchg
pop
loop
sbb
adc
out
imul
mov
(bad)
jmp
cmp
retf
jecxz
mov
add
jae
(bad)
lea
xor
sar
js
stc
xchg
fisttp
pop
in
popa
ret
pop
les
popf
pop
(bad)
fisub
lahf
cld
shr
dec
stos
neg
xchg
add
mov
mov
daa
or
leave
jnp
and
sahf
leave
les
xchg
inc
push
mov
add
lods
mov
popf
fld
or
xor
xor
ret
ror
or
mov
fwait
(bad)
test
dec
jns
adc
and
xchg
dec
test
sbb
ret
jns
sub
cli
xchg
inc
fwait
repnz
test
lock
ret
mov
sbb
fnstsw
xchg
fwait
mov
lea
sbb
sbb
hlt
mov
push
arpl
aas
jno
lahf
arpl
jecxz
ret
and
mul
pushf
jo
and
popf
pop
mov
mov
(bad)
mov
sub
add
xchg
dec
test
xlat
push
dec
das
neg
call
pop
xchg
jmp
adc
loop
mov
pushf
(bad)
lea
xor
jmp
retf
sar
xchg
push
in
sbb
pushf
mov
mov
gs
(bad)
adc
adc
mov
mov
sub
lods
cmp
cld
push
fcom
stos
aaa
sbb
mov
fild
sbb
inc
xchg
xchg
imul
sbb
std
jp
jo
enter
and
loop
cwde
sbb
and
enter
cmps
sub
ins
aaa
mov
imul
and
or
xadd
sub
pusha
and
aad
push
into
fstp
mov
fist
sub
pop
into
xlat
inc
les
or
test
xor
bound
loopne
cdq
xchg
sbb
fiadd
lock
jecxz
or
es
enter
mov
mov
dec
sub
jg
test
loop
dec
or
mov
movs
pop
mov
test
mov
mov
ja
jo
dec
nop
rcr
mov
out
out
repz
jle
or
mov
mov
inc
mov
push
retf
sbb
pushf
mov
(bad)
or
push
fsub
cmp
xor
das
xor
out
xor
les
cmc
jbe
cdq
fisttp
in
pop
in
xchg
aaa
(bad)
cli
xor
fstp
pop
fmulp
(bad)
push
fiadd
aas
pop
hlt
shl
in
aas
push
push
and
jmp
bound
mov
mov
ja
ds
jae
push
add
loopne
cdq
arpl
test
aaa
scas
scas
push
xchg
inc
lods
std
mov
gs
stc
fsubr
sub
adc
dec
ins
pusha
and
not
mov
adc
inc
push
xchg
jb
iret
xchg
pop
retf
sbb
mov
daa
cmp
fldcw
arpl
xchg
pop
mov
sti
bound
adc
(bad)
cmc
lock
jbe
enter
loope
nop
dec
fldenv
inc
cmc
cmp
mov
mov
mov
call
(bad)
mov
into
(bad)
rcl
mov
enter
inc
popf
mov
sub
pop
or
call
or
push
and
sub
pusha
iret
jb
push
pop
sub
fisubr
jge
out
psubq
in
mov
les
dec
fsub
add
sbb
icebp
lods
sbb
fistp
shr
and
pop
(bad)
jmp
(bad)
push
jmp
clc
sbb
push
jge
frstor
sub
xor
mov
pop
retf
(bad)
push
jbe
cmp
pop
mov
in
mov
in
loop
(bad)
xor
ss
imul
inc
mov
std
inc
push
mov
xor
xchg
imul
nop
push
mov
cmp
mov
xor
xchg
int
iret
shr
push
ret
mov
in
add
push
cli
mov
jmp
cdq
outs
and
sub
jge
add
push
sub
xor
nop
and
xor
mov
xchg
sub
inc
push
mov
mov
(bad)
xchg
push
xorps
mov
out
push
jg
shr
sub
test
scas
jmp
xchg
stc
les
ja
xchg
push
div
jno
stos
xchg
dec
jno
sbb
jle
or
add
xchg
js
add
jae
and
pop
repz
je
inc
loope
sar
inc
sub
push
out
adc
xchg
pop
out
push
and
inc
pop
retf
dec
cmc
loop
cmp
xchg
mov
jge
(bad)
js
jne
mov
xchg
xchg
rcl
mov
aad
sub
push
xor
mov
mov
imul
jns
test
mov
in
lods
jp
xor
dec
cmp
inc
movs
cmp
cmc
pop
jmp
mov
add
(bad)
cmc
test
in
scas
and
xlat
dec
jne
(bad)
mov
push
xlat
leave
out
sti
cmp
xchg
push
mov
stc
push
sbb
mov
add
dec
xchg
pop
cmps
jle
mov
js
stos
dec
ds
jne
stc
or
mov
sbb
addr16
push
jb
shl
in
mov
outs
jmp
shl
repnz
fadd
pusha
ins
sub
popa
add
jmp
in
lock
popa
sub
jp
xor
mov
and
fsubr
xchg
sub
and
mov
mov
mov
mov
push
nop
push
sbb
in
inc
push
out
fwait
push
adc
repz
dec
add
inc
pop
adc
int3
sar
mov
sub
out
mov
aam
adc
inc
int
ret
repz
iret
inc
fisttp
in
jmp
lahf
dec
rcl
push
jo
xchg
repnz
push
and
fwait
sub
jl
scas
in
je
in
pop
jae
inc
fcom
xchg
int3
xlat
adc
mov
jp
into
outs
jb
(bad)
pop
xlat
ja
mov
in
adc
mov
jmp
push
shr
jns
shl
dec
jg
mov
dec
out
idiv
mov
loopne
and
movs
mov
cs
sti
add
and
push
adc
sub
mov
adc
add
dec
mov
nop
push
pop
mov
cmp
jmp
aad
add
push
fstp
dec
std
es
popa
inc
dec
retf
jnp
sub
pop
sar
xchg
xor
shl
pushf
dec
xchg
push
fsub
xchg
add
fstp
and
cwde
ins
(bad)
ins
pop
ret
int
jmp
mov
dec
lds
add
in
mov
inc
mov
add
push
mov
push
sbb
jae
test
jmp
mov
shr
push
lea
shl
cmp
sbb
and
sahf
mov
pushw
mov
mov
add
mov
push
jae
fucomp
dec
aad
xor
jle
cmps
outs
mov
test
movs
mov
out
imul
add
lea
mov
jns
pop
push
data16
pop
fisttp
pop
shl
out
pop
test
xchg
jmp
pop
mov
out
lea
imul
or
mov
shr
outs
mov
rcl
cmp
fdivr
cmps
nop
lods
jmp
das
clc
mov
fwait
sbb
xchg
jl
test
sar
lods
xchg
cs
mov
loope
mov
dec
enter
jbe
jmp
lock
movs
cmps
into
mov
inc
sub
popa
fcomp
loope
test
dec
dec
jp
addr16
xlat
enter
inc
pop
mov
(bad)
pop
jmp
aas
imul
(bad)
jp
add
inc
fnstsw
aaa
pop
or
cmp
cmc
shl
lods
std
(bad)
push
sbb
lods
pop
aas
pop
jo
pop
shl
dec
sbb
aad
cmp
in
mov
sahf
cmp
stos
xchg
(bad)
xchg
test
es
ja
data16
cmps
inc
push
mov
jecxz
in
fldcw
sbb
retf
jge
rcl
mov
mov
stos
mov
movs
lock
in
add
push
push
cmp
xchg
pop
mov
adc
daa
arpl
or
sub
test
jl
fstp
fcomip
push
loope
rol
dec
sar
or
mov
aaa
mov
mov
bound
jns
cmp
cmp
mov
mov
sub
pop
fs
dec
sbb
jge
ret
sbb
push
add
xchg
and
in
ins
jge
repz
push
fs
push
inc
mov
ja
pushf
sahf
add
jp
xchg
cli
mov
push
mov
int3
mov
mov
out
gs
into
jo
in
imul
jl
push
or
sbb
pop
jae
scas
mov
sub
jne
nop
dec
pusha
(bad)
fwait
div
clc
push
fiadd
jns
es
in
rcl
inc
inc
push
movs
popa
push
in
push
fist
push
add
std
add
or
and
sahf
jbe
push
fsubr
adc
imul
jb
movs
sbb
xchg
xchg
aas
cmp
sub
push
test
and
sub
daa
push
and
les
adc
scas
jne
test
adc
retf
inc
aas
gs
ror
pop
mov
sbb
mov
adc
mov
test
push
bound
nop
(bad)
jb
das
xrelease
(bad)
out
pop
pop
cmps
xchg
idiv
repnz
adc
retf
call
addr16
mov
cmp
pop
outs
cwde
xchg
xchg
mov
int3
cdq
loope
aaa
adc
cmp
inc
sub
xor
jb
icebp
and
mov
push
pop
xor
push
mul
enter
adc
adc
push
mov
push
adc
ss
jl
pop
in
push
or
out
rcl
and
xor
aad
std
push
dec
and
jbe
inc
sub
cld
adc
jnp
push
ins
mov
ja
mov
mov
loope
scas
in
sbb
add
cli
and
leave
sub
sub
inc
sahf
ret
or
fdiv
in
jno
shl
sub
pop
test
popa
ja
add
lds
inc
jbe
dec
pop
adc
push
imul
out
jmp
mov
xchg
aad
(bad)
call
jno
sub
shr
(bad)
jge
push
loopne
loope
adc
call
add
dec
test
adc
lds
mov
leave
bound
imul
ja
sbb
dec
ret
push
ss
(bad)
std
adc
(bad)
stos
sub
call
imul
mov
out
dec
mov
aaa
xlat
(bad)
mov
hlt
pop
jb
into
and
imul
lahf
sbb
sbb
sbb
and
and
enter
fldenv
(bad)
dec
cmps
sbb
cmp
inc
inc
nop
mov
add
cmc
xor
lock
mov
sbb
and
xor
popf
mov
shr
sbb
arpl
push
sbb
jle
pop
inc
test
mov
jmp
test
sub
or
out
pop
mov
inc
je
and
sub
data16
push
(bad)
icebp
push
jo
mov
push
mov
xlat
dec
in
push
clc
ficomp
pop
test
add
std
pushf
or
push
div
call
les
stc
mov
push
mov
sbb
pop
das
xor
leave
fist
test
xchg
adc
sub
hlt
iret
push
lahf
lods
ss
(bad)
xchg
fidivr
daa
sub
jg
mov
mov
int
pop
outs
mov
push
and
int3
sub
scas
cmps
xchg
test
pop
xor
push
sar
or
ins
aas
call
adc
outs
inc
sub
repz
ja
int3
or
addr16
iret
pop
mov
in
cwde
cmp
movs
loopne
pushf
std
arpl
addr16
mov
and
mov
(bad)
in
cmp
push
popf
cs
mov
repz
xor
clc
pop
imul
cs
xor
xchg
mov
(bad)
mov
mov
pop
ror
pop
push
popa
jne
add
lods
in
xchg
frstor
test
mov
xchg
test
jge
inc
jge
test
movs
cmps
hlt
loop
dec
dec
stc
repnz
fldenv
push
pop
mov
xchg
loopne
pop
cmps
jno
and
xchg
lds
es
je
mov
sbb
out
mov
in
xor
movd
arpl
pop
mov
retf
inc
and
push
lods
cld
pop
(bad)
fld
add
aaa
cmp
mov
xchg
mov
fs
cli
sub
dec
loopne
fisub
mov
(bad)
dec
sub
idiv
in
cmp
xor
fimul
out
adc
cmp
push
outs
or
xchg
daa
inc
cmp
add
xor
fld
(bad)
in
repz
mov
cwde
or
aaa
jns
adc
lahf
movs
jno
mov
pop
out
xlat
ror
dec
push
(bad)
adc
push
push
scas
or
std
repz
mov
jo
add
mov
mov
dec
retf
and
push
cmp
xchg
in
mov
jb
out
and
xchg
lods
dec
push
in
cmp
adc
jae
pop
das
repz
ret
stc
mov
mov
and
mov
scas
jb
std
data16
xor
inc
pop
das
xchg
ds
es
fwait
dec
xchg
lahf
out
test
popa
pop
test
jl
bndstx
add
push
jno
xchg
in
out
mov
pushf
test
mov
mov
ds
jbe
xchg
sahf
out
adc
aam
loop
loope
addr16
fidiv
pop
xor
xor
mov
stos
or
ins
ror
jns
inc
ja
mov
and
jae
fsubp
sub
jecxz
das
adc
and
jo
adc
mov
dec
and
dec
scas
fistp
outs
and
add
and
dec
std
mov
cli
jl
sbb
mov
imul
mov
push
add
mov
lock
aad
dec
and
sahf
movs
xlat
cmp
stos
call
sbb
dec
jmp
push
dec
push
add
mov
push
ficomp
nop
inc
cmp
xchg
std
dec
pop
push
(bad)
and
xchg
not
adc
xchg
mov
test
xor
out
shl
mov
inc
cmps
mov
fcomp
call
xchg
(bad)
and
ja
jbe
sbb
pop
ja
pop
xor
and
xor
mov
xchg
xchg
and
xchg
jnp
adc
fdivr
adc
mov
xlat
add
les
mov
inc
pop
outs
mov
popa
lods
mov
hlt
cld
(bad)
lds
or
test
icebp
aam
dec
test
pop
sbb
out
mov
or
repz
inc
xchg
add
push
add
add
push
pusha
mov
jns
aad
xor
or
imul
cmps
mov
aas
cmc
push
cdq
pop
pop
mov
add
sub
xchg
je
xor
movs
aam
and
mov
sub
test
sahf
fs
jecxz
(bad)
lea
push
pop
aas
call
scas
(bad)
push
repnz
aaa
inc
dec
fld
inc
add
mov
sub
test
sub
or
pop
repnz
mov
adc
inc
and
outs
enter
inc
arpl
loope
push
loope
xchg
fsubr
mov
mov
retf
mov
jp
xlat
(bad)
sub
inc
aam
dec
mov
push
dec
bound
jns
out
sbb
shl
mov
ins
jne
mov
ins
ins
test
lock
mov
and
inc
mov
pop
dec
shl
xchg
jl
or
mov
push
aam
std
stos
test
cmp
stc
repz
retf
outs
lds
loope
out
icebp
outs
rol
cmovnp
cmp
fs
xchg
and
jp
push
aad
shr
or
push
pop
adc
mov
pop
sub
fild
retf
xlat
sub
cmp
dec
mov
sbb
push
xchg
mov
xacquire
pushf
add
pop
call
stos
scas
mov
cmp
mov
not
mov
retf
jg
add
repz
outs
out
mov
xchg
lahf
jns
mov
push
cs
xchg
leave
mov
xchg
retf
sub
push
test
mov
hlt
ins
(bad)
mov
jp
add
and
aaa
mov
xor
inc
cmp
(bad)
xor
fst
mov
or
in
mov
mov
and
imul
pusha
inc
xor
pop
dec
pop
test
jmp
pop
xchg
and
loop
lahf
mov
add
ror
repnz
ja
jecxz
ret
jmp
retf
mov
add
dec
mov
out
push
xchg
rol
jl
jmp
mov
inc
cmp
mov
movs
xor
cmp
mov
js
out
movs
inc
push
sbb
imul
cmc
scas
loope
push
jo
dec
adc
or
sbb
fwait
std
es
bound
xchg
sbb
imul
pop
pop
pop
xchg
lock
stos
in
mov
jo
add
icebp
mov
jne
inc
std
push
stos
aas
dec
xchg
into
movs
loope
jp
mov
push
push
lds
mov
mov
loope
movs
stos
pop
jb
jl
pop
test
push
stc
sub
xor
cli
mov
fisubr
in
cmp
dec
and
gs
ret
in
inc
xchg
or
push
jmp
jg
mov
jmp
rol
inc
cmc
cmp
or
test
cmc
jp
outs
daa
pop
xchg
hlt
gs
jmp
fist
bnd
cmps
sbb
inc
stos
aas
mov
mov
mov
and
xor
iret
jecxz
jg
push
jp
(bad)
ror
addr16
adc
cli
pop
dec
jbe
jg
and
or
mov
cmps
or
xor
push
add
push
inc
outs
pop
mov
xlat
xchg
xor
data16
add
cmp
push
pop
sbb
and
call
push
cmps
cdq
stc
stc
inc
fidivr
xchg
lea
cs
nop
dec
loop
sbb
call
add
int3
dec
mov
jo
push
(bad)
sub
shl
jnp
cmp
xchg
stc
dec
jmp
and
(bad)
std
xchg
push
adc
test
fisttp
push
mov
imul
cmp
push
jge
int3
lods
in
addr16
push
mov
jns
enter
sti
mov
shl
fs
inc
(bad)
sbb
retf
pop
mov
and
cld
sbb
les
hlt
jecxz
out
retf
fild
lds
pop
inc
pop
fadd
adc
mov
iret
pop
inc
and
loop
jg
test
test
xor
mov
cmp
repnz
mov
cmp
or
and
or
ss
leave
loopne
mov
dec
mov
iret
xchg
add
and
mov
stc
popf
out
test
adc
mov
std
pop
mov
adc
push
int
int3
popf
outs
(bad)
jecxz
push
adc
mov
inc
mul
pop
rcl
add
pop
pushf
mov
out
dec
jne
dec
int
iret
icebp
inc
xor
or
and
pop
leave
pop
mov
push
mov
or
fadd
(bad)
cli
loop
fnstenv
and
imul
arpl
stos
fst
ja
mov
repz
cmp
js
pop
mov
pushf
mov
jmp
cmp
push
test
mov
pop
ins
fdivr
pop
mov
sbb
inc
(bad)
loope
imul
inc
pop
int
xchg
es
add
(bad)
cmp
inc
sti
js
sub
adc
in
(bad)
adc
out
and
push
mov
out
fsubr
push
push
adc
mov
call
or
mov
mov
and
jecxz
fcmove
adc
mov
cmps
cwde
xchg
mov
sahf
inc
test
loopne
test
retf
mov
adc
jb
sbb
scas
pop
cmp
cmp
pop
mov
cmp
ins
imul
mov
mov
add
push
cmp
sub
mov
mov
jo
mov
pop
push
mov
cld
shr
retf
inc
test
cmc
popa
test
jge
cdq
xor
jle
into
jp
mov
xchg
ror
cmp
jne
nop
push
pop
int3
in
stos
sbb
sahf
bswap
push
xor
add
outs
add
fldcw
xchg
add
fsub
stc
add
popa
call
mov
loope
mov
cli
xor
call
push
es
mov
(bad)
jae
test
scas
sub
push
arpl
out
push
clc
xchg
push
pop
in
clc
shl
ret
jl
sub
out
inc
sub
inc
iret
and
pop
fistp
sub
out
not
pop
mov
xor
mov
mov
or
inc
push
int3
mov
shr
xchg
test
ds
push
pop
mov
pop
cmps
fisubr
fisttp
mov
xor
retf
frstor
cmp
sbb
jmp
dec
call
adc
inc
lods
daa
sub
push
mov
idiv
mov
dec
test
xor
mov
mov
iret
movs
int
adc
cmc
xchg
push
movs
pop
adc
sub
cmp
dec
jns
fisttp
mov
std
lods
in
pop
mov
rcr
(bad)
push
jb
jno
call
clc
jae
dec
xor
push
mov
sub
sbb
mov
mov
arpl
sti
mov
dec
add
mov
(bad)
push
xor
pop
out
ss
dec
xchg
jmp
mov
sub
pop
pop
cmp
sub
stos
rol
push
and
mov
jns
cmp
and
xchg
sub
sbb
neg
mov
xchg
jne
mov
ins
xor
sbb
xchg
(bad)
cmp
inc
mov
pop
shl
aad
mov
pop
movs
in
arpl
adc
mov
jge
lds
call
xor
jb
jle
test
ds
cmp
inc
sub
adc
sub
cmp
mov
xchg
movs
xor
fist
inc
jge
jle
int
adc
xor
cmc
iret
cs
sub
int
in
or
and
gs
fimul
das
jno
pop
add
jge
std
mov
stos
leave
mov
mov
loopne
aad
mov
cmp
xlat
xlat
pop
aaa
sbb
pop
lock
cmp
jb
stos
adc
sbb
xor
(bad)
cdq
mov
jne
xchg
adc
xchg
add
pop
jo
div
dec
gs
pop
imul
nop
repnz
adc
pusha
ret
fbstp
cmps
(bad)
push
xchg
inc
lods
xor
cmp
sub
test
mov
cmp
dec
mov
dec
lea
into
(bad)
scas
cs
push
mov
xor
adc
push
hlt
call
xor
bound
leave
inc
dec
(bad)
(bad)
xchg
xor
jge
stos
jae
or
mov
xchg
sbb
ret
mov
inc
mov
sbb
cmp
jecxz
(bad)
movs
test
inc
sar
mov
and
in
and
adc
loope
mov
mov
xor
cdq
shl
arpl
in
cmp
sar
xor
sti
mov
push
das
and
in
clc
xchg
and
out
jne
popa
jno
or
pop
add
stos
jno
sub
fidivr
sub
sub
mov
jno
push
into
pop
test
ins
fstp
imul
out
mov
ds
jnp
jmp
in
aad
pop
mov
and
xchg
xor
mov
test
cmp
mov
pop
neg
cmp
mov
dec
cmp
pop
xchg
xchg
int3
pop
pop
(bad)
pop
push
jbe
sbb
les
inc
xor
test
adc
mov
pop
sbb
call
dec
rcl
es
jo
mov
push
cdq
ss
cmp
add
js
pushf
jo
mov
xchg
jbe
bound
mov
xor
(bad)
jae
sbb
inc
jp
mov
xor
mov
or
mov
cs
mov
test
add
jae
cmp
int3
in
jecxz
pop
(bad)
popa
daa
ins
sub
test
lds
jns
les
movs
gs
mov
shl
inc
add
ret
mov
inc
dec
mov
add
adc
test
mov
(bad)
jecxz
ror
(bad)
mov
retf
jecxz
sbb
push
ds
mov
dec
sahf
lea
inc
mov
cmp
out
mov
test
ror
fwait
arpl
jmp
xor
mov
push
pushf
out
mov
call
pop
fcom
int
lods
sbb
sahf
popf
jp
xchg
stos
aas
or
jo
das
inc
mov
sub
(bad)
hlt
pop
jnp
enter
jno
push
mov
and
add
sbb
xchg
daa
std
xchg
inc
or
xor
and
popf
xchg
aad
stos
sbb
inc
icebp
xchg
loop
pop
adc
out
lock
or
xchg
mov
jge
pop
mov
outs
leave
xchg
scas
sti
add
clc
or
loop
mov
scas
mov
push
mov
dec
stos
repz
inc
shl
mov
sbb
sahf
pop
test
inc
ins
imul
rcl
loope
mov
jbe
xchg
lock
call
fs
daa
loopne
(bad)
lods
mov
push
push
pushf
pop
daa
enter
outs
push
dec
ja
popf
mov
ins
ss
cmp
test
sub
pushf
mov
lods
stos
inc
pop
shl
push
addr16
scas
push
xor
xor
dec
pop
or
xor
imul
sub
nop
and
mov
xchg
jecxz
rcr
hlt
sbb
mov
xor
enterw
pusha
mov
pop
inc
and
or
ja
xchg
rcr
inc
int3
mov
js
cwde
fild
fidiv
cmc
push
push
jecxz
les
adc
mov
push
mov
pop
jno
ret
jg
mov
rol
mov
hlt
inc
push
loop
repz
sahf
cmps
pusha
pop
mov
imul
fst
pop
clc
jmp
adc
mov
cmp
sahf
mov
in
push
(bad)
in
pop
dec
cmps
mov
mov
xchg
cmps
adc
or
pop
jp
loope
jmp
adc
lods
clc
sub
ins
stos
imul
mov
mov
daa
mov
fiadd
or
mov
mov
cld
xchg
(bad)
mov
xchg
or
mov
mov
and
jp
popa
mov
xchg
xor
pop
and
xchg
or
call
mov
inc
xchg
lods
retf
sahf
enter
or
cmp
loop
and
daa
inc
sub
in
pop
adc
xlat
adc
retf
jg
pop
sahf
adc
(bad)
movs
inc
dec
arpl
jns
adc
jg
outs
xchg
sub
test
imul
addr16
test
xor
cmp
push
test
push
test
or
jmp
sbb
scas
lds
es
mov
dec
pop
mov
hlt
or
xor
(bad)
je
scas
int
rcl
sub
iret
adc
and
mov
xchg
je
dec
cs
jg
push
sub
xchg
inc
xchg
xor
call
or
or
cli
dec
inc
pop
adc
ins
jae
inc
mov
mov
mov
cmp
adc
in
int3
fimul
adc
xchg
sbb
dec
div
cmp
pop
inc
jmp
mov
dec
push
mov
stos
dec
inc
into
cmp
sbb
mov
pusha
add
lods
jns
jmp
ins
scas
sbb
mov
dec
inc
sub
mov
stos
(bad)
fdiv
xor
or
fadd
xchg
xor
in
sub
inc
pop
jle
ret
lock
mul
call
xchg
add
inc
leave
ins
sar
jl
xlat
adc
les
lock
pop
stos
add
jle
adc
in
arpl
fistp
je
(bad)
jae
mov
dec
cdq
cmp
stos
mov
push
daa
lock
jbe
call
cmp
arpl
fnsave
cdq
(bad)
adc
add
push
pop
mov
adc
shr
push
pop
cdq
int3
test
call
in
mov
arpl
dec
adc
mov
loopne
sub
dec
cmps
jmp
or
scas
adc
cld
xor
ret
cmp
fld
ret
jle
mov
cmps
fsin
mov
push
xchg
pop
pop
mov
ret
test
add
fwait
mov
xchg
jmp
mov
inc
out
in
cmp
jg
imul
xlat
popf
dec
test
fucomip
xor
jl
sbb
xchg
add
loopne
scas
repz
push
lock
sub
pop
sbb
rcr
cdq
stos
repz
es
mov
and
jne
mov
pop
cmps
push
out
and
and
retf
cs
not
stos
pop
mov
pop
push
jp
or
jle
xor
inc
pop
jo
jo
adc
ror
lods
xor
fld
(bad)
dec
push
daa
(bad)
outs
pop
push
jp
pop
fiadd
mov
test
das
in
push
sbb
retf
dec
icebp
repz
js
addr16
jb
push
psubsb
cmp
mov
sahf
stc
sahf
xor
mov
into
(bad)
outs
loopne
pop
cdq
lods
mov
push
lea
pop
pop
mov
(bad)
movs
retf
jle
movs
mov
cdq
sbb
call
push
loope
shl
and
(bad)
scas
sub
lods
sub
pop
movs
xchg
push
test
test
hlt
push
outs
(bad)
sbb
mov
mov
lods
mov
mov
ds
adc
mov
dec
(bad)
ffreep
rcl
xor
ins
leave
movs
mov
scas
lock
mov
fs
stc
add
sti
fdivr
cmps
or
sub
cli
xchg
ds
fnstcw
mov
jno
cmc
daa
ss
and
push
sbb
lds
mov
push
lods
sbb
dec
pusha
test
xchg
into
and
adc
out
sbb
sub
sub
cs
pop
scas
aam
push
xchg
dec
rcr
in
shl
mov
icebp
xchg
jae
(bad)
ja
mov
xchg
push
push
addr16
rcr
cmp
jbe
or
and
aas
out
gs
inc
push
push
cmps
nop
cmp
xchg
pusha
inc
xchg
xor
lods
mov
cmps
lock
out
mov
xchg
shr
or
adc
fiadd
outs
out
sbb
xor
and
fdiv
iret
mov
xchg
ss
xchg
ins
ror
sub
test
ja
push
jbe
(bad)
aas
imul
mov
jmp
(bad)
mov
sub
bound
ss
push
add
jae
mov
cmc
add
pop
mov
std
adc
data16
sbb
mov
pop
jecxz
xchg
or
mov
adc
in
hlt
push
inc
imul
cmps
lods
in
sbb
jmp
test
(bad)
aad
cmp
cld
icebp
retf
cmp
xor
inc
mov
sbb
cli
movs
push
xchg
(bad)
hlt
and
and
mov
repz
xchg
or
jb
loope
cs
sub
(bad)
cmp
icebp
call
aam
mov
mov
shl
loop
imul
adc
mov
jg
repnz
dec
fdiv
shl
stos
call
pop
stos
jp
fld
pop
lods
bound
cwde
mov
or
lds
mov
xor
and
cmp
psubusw
jno
lea
mov
adc
pop
cwde
test
mov
icebp
or
imul
std
jae
push
or
and
adc
jp
cmp
(bad)
fsubp
pop
jnp
fcmovu
mov
movs
lods
sub
(bad)
fwait
ss
mov
std
ret
(bad)
mov
je
cli
clc
or
dec
out
in
ins
or
idiv
adc
adc
enter
ds
lods
mov
jecxz
and
cmps
cmps
pop
inc
dec
fstp
jl
ja
ret
mov
in
sub
xchg
adc
mov
retf
jnp
mov
xor
xlat
mov
jo
imul
ds
fs
(bad)
xchg
ja
cmps
mov
pop
xchg
xlat
outs
imul
addr16
(bad)
add
dec
cmp
mov
dec
scas
mov
or
shr
cmc
lea
xor
cdq
imul
or
ret
add
(bad)
out
test
xlat
pop
or
jne
or
lea
mov
lea
outs
hlt
mov
push
and
shl
push
lea
or
mov
(bad)
pushf
cmp
push
pop
std
dec
jmp
jmp
js
stc
mov
jge
fmul
push
pop
push
aaa
jmp
mov
jmp
push
mov
xor
mov
jno
pop
aad
lock
sbb
xchg
adc
sbb
dec
jle
inc
dec
add
sahf
(bad)
mov
pushf
inc
push
loop
sbb
ins
xlat
in
(bad)
(bad)
cwde
jnp
sub
fwait
xor
outs
push
bound
mov
add
push
imul
enter
je
xor
leave
adc
mov
retf
bound
add
mov
pop
hlt
mov
mov
xor
sub
mov
sub
jo
icebp
pop
test
ins
pop
sar
je
(bad)
dec
xor
call
jmp
inc
push
or
pop
(bad)
leave
lods
das
(bad)
(bad)
xlat
test
add
or
lea
pop
jo
push
and
or
imul
je
and
ja
pushf
imul
in
and
sbb
lock
inc
push
xor
xchg
mov
jle
sub
add
pop
cld
je
jecxz
jmp
not
xlat
int
prefetch
pop
adc
(bad)
es
and
jae
popa
jnp
(bad)
mov
mov
(bad)
push
dec
inc
push
cmp
fs
fiadd
mov
aas
dec
cmp
pusha
daa
xor
(bad)
cmp
aam
sub
test
stos
ds
fstp
nop
pop
add
imul
mov
add
shr
mov
imul
call
leave
repnz
call
add
lods
adc
adc
fstp
pop
sbb
inc
push
push
idiv
hlt
jge
mov
retf
jb
lock
push
(bad)
lahf
mov
sti
fcmovnb
ss
pusha
cmp
fisub
in
adc
test
cmp
jl
retf
nop
test
add
mov
es
mov
not
std
push
jae
pop
sbb
mov
in
pop
inc
jbe
jl
enter
jge
cs
dec
jne
es
sub
sub
lds
and
push
xchg
sub
adc
call
call
int3
ja
test
sub
mov
dec
rol
pushf
and
fsub
sbb
test
mov
test
jno
div
out
cmp
and
lods
pop
mov
mov
xor
xor
push
dec
fwait
pop
mov
inc
and
rcl
dec
pop
xchg
sahf
loop
push
ja
test
(bad)
and
aaa
mov
mov
pop
aas
add
jge
shl
enter
ins
jb
cmc
hlt
retf
daa
adc
xlat
and
dec
xlat
or
mov
adc
cmps
push
dec
push
push
leave
jmp
dec
add
mov
add
and
xchg
ins
in
xchg
xchg
icebp
dec
push
adc
xor
mov
jg
xchg
sbb
sub
sub
rcl
movs
add
pop
shr
mov
retf
or
daa
shl
les
sahf
inc
push
and
mov
inc
jl
xor
and
mov
lods
cmp
es
ins
mov
scas
aam
dec
movs
and
arpl
ins
jp
mov
stos
inc
inc
stc
jbe
xor
jnp
cmc
xchg
dec
inc
into
dec
adc
pushw
mov
jge
inc
or
out
shl
mov
scas
push
mov
ret
ret
addr16
mov
mov
sti
pop
dec
cmp
retf
mov
fidiv
cli
jae
loopne
add
push
xchg
mov
jnp
sub
fild
out
and
xchg
ret
pop
je
in
or
mov
mov
add
jb
xchg
gs
fwait
jl
mov
pop
sar
sbb
mov
(bad)
mov
movs
sub
fisubr
push
inc
mov
xchg
xor
dec
movs
xchg
jne
rol
mov
mov
mov
cli
inc
out
nop
xlat
or
add
mov
lods
(bad)
mov
add
jge
fdiv
and
bound
jns
xlat
xchg
push
cmp
outs
jge
movs
jbe
jbe
(bad)
cdq
(bad)
data16
(bad)
test
xlat
mov
sbb
push
jmp
mov
mov
out
or
xchg
jb
stc
mov
xchg
arpl
iret
pop
mov
sbb
xchg
xchg
dec
ds
shl
vpunpcklbw
cmp
fcom
arpl
jmp
into
fs
sbb
ins
cmps
dec
pusha
xchg
mov
sub
es
sub
xor
ss
xor
fs
daa
push
inc
lods
sbb
jmp
jb
rcr
inc
mul
mov
(bad)
scas
sub
outs
sub
cmc
fcomi
cdq
mov
sbb
ins
mov
fwait
mov
pop
mov
nop
xadd
mov
lahf
xchg
scas
js
lods
xor
jnp
mov
fbstp
(bad)
push
cmp
in
(bad)
fmulp
loopne
and
ins
jmp
pop
cmp
push
cmps
dec
mov
xchg
fild
dec
mov
cs
in
sub
mov
sbb
das
(bad)
leave
mov
lahf
mov
je
retf
xor
jg
jmp
push
fld
cmp
jo
stos
sbb
mov
cwde
pop
icebp
adc
repnz
lds
or
div
sbb
ins
icebp
sub
js
adc
mov
mov
rcr
xchg
jg
fdivr
test
in
cmp
dec
push
push
adc
shl
sub
or
cmp
and
and
inc
inc
xor
and
in
data16
popa
in
jle
movs
cdq
sbb
pop
push
in
(bad)
lock
mov
pop
pop
ins
daa
jns
mov
mov
sub
jns
je
fs
fucomi
mov
jmp
lock
movs
pop
sahf
bound
inc
cmp
jmp
sahf
add
outs
xchg
xlat
cmp
xor
jno
out
fst
test
scas
out
(bad)
cmp
out
repz
sti
clc
or
fistp
clc
xchg
sub
inc
mov
test
cld
push
out
pop
mov
popa
xor
call
aam
cld
bound
mov
xchg
aad
mov
push
mov
pop
daa
inc
cmp
push
inc
dec
mov
or
outs
dec
push
imul
ins
dec
aad
int3
shl
cli
enter
adc
mov
push
jae
shl
fimul
sbb
leave
pushf
mov
nop
add
xor
mov
leave
mov
jns
mov
retf
mov
inc
mov
rol
(bad)
jl
cmp
mov
scas
hlt
inc
xchg
add
(bad)
fwait
nop
mov
sub
cs
push
xor
or
lods
adc
cs
jl
in
mov
push
add
call
mov
mov
stos
inc
sbb
xor
sub
jg
(bad)
hlt
outs
fabs
pusha
cmp
fmul
addr16
sbb
and
add
dec
jmp
call
sar
lock
adc
mov
fadd
cmp
in
jg
imul
shl
adc
fstp
retf
in
mov
leave
sti
pusha
jo
out
push
adc
and
cmp
lahf
dec
adc
les
cmc
fs
(bad)
out
mov
(bad)
cmp
add
out
pop
inc
jbe
std
xlat
pop
popa
scas
outs
mov
add
stc
and
ret
sub
into
je
and
es
push
add
shl
dec
or
int
inc
dec
inc
dec
jg
les
mov
inc
add
xchg
xchg
shr
mov
xchg
call
xor
arpl
jns
mov
test
shl
fcom
pop
xchg
pop
pop
push
gs
xchg
fnstsw
in
mov
ret
mov
fdivr
jg
fs
push
pop
in
xchg
pop
sbb
cmp
inc
retf
xor
inc
or
fst
jnp
sbb
stc
xchg
out
test
(bad)
jl
js
xor
lds
or
adc
jecxz
mov
ds
inc
push
call
add
test
cmp
es
sti
jle
jle
loope
(bad)
pop
rcr
push
xor
mov
scas
jb
xchg
ja
ins
jno
jle
push
fs
push
adc
push
rcr
pop
sub
mov
jle
sbb
vpcomud
fcomp
sub
cwde
pusha
adc
pop
sub
inc
adc
pop
out
lock
push
pop
jnp
push
mov
pop
pop
sub
es
xchg
mov
add
dec
stc
pop
int3
nop
mov
ins
cs
pop
(bad)
mov
jae
pusha
gs
mov
ss
pop
in
popf
mov
jae
sbb
xlat
gs
in
ror
sub
aam
imul
bound
or
inc
xchg
inc
push
dec
add
push
inc
les
inc
add
lea
xor
pop
hlt
inc
(bad)
xor
pop
push
loopne
sbb
scas
fucom
push
call
punpckhdq
push
jnp
arpl
aaa
jo
and
rol
jmp
or
iret
neg
stos
je
mov
and
xor
arpl
jmp
jmp
(bad)
jge
cwde
cmp
stos
sbb
xchg
cld
retf
inc
iret
mov
mov
sub
test
push
bound
lods
mov
or
mov
ins
rol
int
mov
std
adc
icebp
(bad)
fmul
pop
mov
xchg
push
imul
xchg
or
imul
adc
loop
add
xchg
mov
rol
add
dec
mov
sub
mov
mov
pusha
loopne
pop
adc
lea
stc
mov
movs
stos
ss
adc
(bad)
or
mov
stc
(bad)
or
es
push
push
inc
pop
sti
mov
or
xchg
(bad)
pop
inc
push
cwde
jno
js
out
inc
sbb
pop
(bad)
pop
outs
imul
(bad)
mov
out
ss
adc
les
sbb
shl
mov
and
imul
js
pusha
ja
nop
or
inc
inc
imul
jno
jo
ret
stos
mov
(bad)
scas
icebp
les
add
aas
(bad)
xor
adc
aaa
jb
out
push
pop
enter
movs
mov
icebp
into
clc
dec
int3
cmps
les
test
mov
or
and
xor
imul
leave
jb
xchg
jb
pushf
and
xor
leave
loop
scas
mov
out
mov
cmps
out
test
jae
bound
mov
lods
jecxz
movs
pop
stos
xchg
push
loopne
jmp
clc
xchg
into
cli
ret
aaa
in
mov
ror
xor
repz
scas
addr16
retf
jb
push
mov
lods
and
xchg
aam
mov
push
shr
and
xchg
or
test
xor
fdiv
mov
jnp
mov
dec
adc
xor
popf
mov
dec
sahf
rcr
ds
push
mul
sub
dec
ret
adc
ds
test
jg
gs
sub
dec
pop
pop
test
nop
xchg
hlt
mov
enter
or
test
test
clc
cmps
in
mov
sti
jle
test
jle
pusha
nop
jle
lds
repz
jmp
das
enter
inc
xor
imul
add
cmc
ins
jmp
retf
fdivr
adc
icebp
pop
jmp
cmp
(bad)
rol
lock
mov
out
nop
fistp
inc
xchg
lds
mov
lods
add
out
in
mov
sub
int
mov
cmp
sti
fisub
inc
xor
push
inc
jb
push
nop
fs
ins
sub
fwait
test
or
add
retf
add
dec
mov
xchg
pop
push
in
in
(bad)
dec
sub
adc
mov
pop
push
leave
(bad)
rcr
xor
(bad)
sti
arpl
leave
imul
mov
(bad)
jmp
inc
ds
mov
stos
push
pop
xchg
fwait
sbb
add
data16
or
adc
test
and
popa
dec
pop
xchg
sub
aaa
jmp
dec
test
test
xchg
add
inc
inc
ins
pop
aas
push
rcr
mov
repz
gs
cmp
pop
pop
ss
inc
mov
mov
cmp
repz
loop
ss
or
ficomp
add
jge
test
or
js
leave
pop
cmps
test
mov
and
dec
aam
add
test
ret
cdq
fild
mov
xchg
push
sub
pop
mov
pop
sub
stos
lods
pop
aaa
repnz
out
push
inc
fsubr
mov
and
push
pop
adc
stc
mov
add
daa
pop
rcl
aaa
xor
retf
popa
aas
pop
movs
aas
out
jb
and
fadd
test
push
aad
jb
push
ficom
lahf
jmp
(bad)
xor
imul
jl
dec
sbb
pop
pop
outs
mov
push
pop
mov
mov
adc
push
lods
test
push
dec
stos
cld
aaa
jmp
mov
lods
sbb
or
int
fs
ins
jmp
xor
inc
mov
jnp
outs
ficom
repnz
xchg
mov
fisub
out
das
jnp
repz
jg
or
ss
out
icebp
pop
jb
pop
dec
mov
jmp
int3
scas
mov
je
adc
sbb
in
je
lock
pusha
inc
daa
movs
mov
ss
cmps
add
fist
loope
sub
pop
test
dec
das
ret
sbb
out
and
xchg
dec
out
scas
shr
xlat
mov
sbb
popa
(bad)
dec
mov
xor
hlt
xchg
shl
add
out
xchg
jne
xlat
cmp
inc
(bad)
nop
jmp
cmp
dec
mov
lds
fwait
repz
push
dec
je
imul
enter
and
jno
rol
outs
adc
idiv
and
repnz
and
sbb
ss
xor
push
ror
imul
ds
les
loope
mov
arpl
push
fucomip
rcr
xchg
and
and
jnp
pushf
mov
lods
das
std
add
lds
push
(bad)
cmp
(bad)
addr16
mov
sub
jno
xor
mov
das
sbb
or
xor
push
dec
xlat
mov
mov
dec
ss
pop
sar
mov
pushf
jmp
mov
rol
push
sub
inc
adc
imul
inc
xor
out
mov
lea
jmp
fdivr
push
pop
ret
sbb
xor
call
inc
xchg
addr16
xchg
cmp
sbb
mov
xlat
adc
sbb
adc
dec
xlat
lds
aaa
sti
cmp
jmp
pushf
pop
xchg
test
movsx
xor
ja
dec
(bad)
imul
stc
adc
or
ins
mov
jg
jl
mov
pushf
lds
cmp
clc
sub
adc
test
mov
mov
pop
pop
outs
fs
fild
sbb
jecxz
xlat
mov
out
sahf
loop
(bad)
scas
stos
dec
and
xor
lods
fneni(8087
(bad)
dec
call
aas
jp
sub
push
sbb
push
pop
xchg
in
mov
mov
imul
dec
jmp
aas
retf
jns
jmp
pop
push
jp
xchg
fs
pop
add
xchg
sub
shl
cmps
xchg
out
add
xor
and
pop
jg
xor
sahf
fiadd
jne
shl
pop
test
or
add
mov
and
out
lods
or
sbb
cwde
dec
mov
aaa
dec
push
in
push
retf
adc
mov
movs
ror
cwde
push
test
push
(bad)
fnstenv
ins
push
rcl
lods
pushf
mov
pop
call
movs
sahf
pusha
lock
pop
enter
dec
sub
mov
mov
or
sub
fwait
push
and
mov
cmp
addr16
ss
add
fnsave
xor
mov
retf
loopne
inc
cmc
movs
and
mov
dec
test
std
mov
mov
xor
xor
div
lahf
shl
cmc
pop
mov
sub
ret
or
ins
pop
out
out
or
into
lods
test
retf
push
sti
xchg
and
mov
jmp
mov
out
jl
pop
dec
rcr
dec
fild
adc
push
mov
fcom
test
in
pop
inc
(bad)
fucomip
inc
movs
mov
mov
xchg
int
stos
or
and
jno
cdq
dec
xor
lea
mov
in
jb
mov
out
stos
push
sti
stos
fabs
(bad)
mov
xor
lods
(bad)
in
pop
not
sbb
ds
out
xchg
ffreep
das
(bad)
ds
sbb
mov
movs
add
jmp
add
sbb
push
sbb
cmp
std
call
dec
fldenv
(bad)
cmp
and
jle
ss
push
ss
xchg
push
cld
lea
(bad)
adc
or
inc
pop
and
outs
ins
enter
push
loope
push
ja
js
mov
mov
xor
icebp
mov
adc
sub
dec
(bad)
aas
out
xchg
les
inc
dec
cmp
pop
xchg
mov
shl
pop
jnp
and
mov
push
adc
jp
ins
popa
loopne
outs
fidiv
out
add
mov
mov
out
movs
ror
push
mov
jle
xchg
sbb
inc
leave
sub
pop
push
push
mov
out
mov
icebp
mov
cmc
addr16
cwde
cmps
dec
pop
add
cwde
pop
cmp
daa
je
mov
xor
add
in
cs
mov
push
dec
sbb
out
test
sbb
into
and
cs
pop
jmp
dec
mov
xchg
psllq
push
pop
ret
mov
repnz
push
inc
pop
dec
xor
or
lea
sbb
cld
rol
mov
and
aad
data16
pop
adc
aaa
xor
xor
push
or
inc
cld
jmp
inc
and
pop
cli
push
push
or
and
int3
sub
out
ja
in
mov
jae
push
test
xor
dec
ins
out
sbb
adc
je
cmps
arpl
and
(bad)
aas
xchg
repnz
imul
mov
push
cmps
pusha
or
and
dec
in
test
(bad)
cmc
test
scas
gs
aas
jmp
sbb
xchg
inc
pop
pop
push
(bad)
ds
pop
(bad)
pop
and
stc
cs
lds
shr
jmp
jo
hlt
push
leave
imul
xchg
and
xor
mov
mov
leave
and
dec
mov
js
inc
lods
into
retf
hlt
cmovle
jmp
sub
jp
iret
push
cmp
add
or
stos
cmps
mov
ss
aad
add
mov
inc
shl
mov
cmp
cmp
aad
rcr
(bad)
fwait
lods
push
dec
lods
mov
daa
dec
nop
mov
dec
jne
fsubp
pop
add
pushf
out
or
xchg
push
xchg
xchg
in
sbb
push
nop
shr
mov
push
xor
inc
repz
lock
xchg
pop
xor
movs
les
lods
ja
cld
xor
xchg
push
int
xchg
add
in
push
aaa
and
stos
add
xor
sbb
arpl
mov
lods
push
repz
and
and
arpl
push
xchg
retf
icebp
(bad)
out
mov
in
adc
lods
stc
mov
pushf
sahf
es
sbb
add
xchg
mov
pop
cs
xor
and
pop
xor
push
stc
rcr
iret
stos
addr16
outs
popf
cmps
jle
rcr
in
xor
and
cmp
test
scas
sub
sbb
push
addr16
int3
sbb
jne
sub
xor
and
(bad)
outs
je
retf
loop
cli
sub
ror
pop
lea
or
sub
dec
cli
cli
adc
ja
inc
sti
mov
jmp
and
test
mov
sub
nop
pop
and
scas
sbb
lds
jo
add
icebp
add
jmp
push
cld
add
in
repnz
outs
mov
or
(bad)
or
lds
scas
push
pop
repnz
ss
sub
add
fwait
rcr
iret
test
rol
pop
(bad)
rol
push
repz
dec
mov
shl
jb
fstp
mov
jmp
adc
clc
pop
mov
call
and
xchg
dec
fild
popa
nop
sub
lods
push
repz
inc
sbb
mov
mov
add
inc
jb
and
repnz
jmp
xchg
cmp
ds
data16
pop
stc
fld
retf
sbb
push
(bad)
cmp
mov
mov
mov
xchg
es
cdq
pop
add
test
not
push
test
aas
cmp
ds
mov
in
ins
aam
enter
adc
pop
dec
jl
outs
mov
mov
cld
aaa
xor
iret
push
push
inc
out
pop
outs
mov
xchg
jmp
push
push
dec
std
xor
mov
pop
jl
gs
gs
pop
in
aas
xor
pop
cmp
fstp
pop
hlt
retf
test
fsubrp
xchg
push
cmp
xor
pop
xchg
xor
cdq
mov
(bad)
sub
xor
data16
fidiv
dec
dec
mov
out
lods
jo
inc
xor
xchg
stc
shr
push
mov
shl
cmp
in
sub
lea
lock
ss
lahf
pusha
mov
cmp
dec
out
ror
xchg
and
je
dec
push
xchg
test
cs
popa
jle
jo
rcl
jne
cmps
mov
push
pushf
push
int3
test
adc
jge
popf
mov
movs
jge
mov
or
fsub
stos
xor
sbb
cld
mov
jecxz
cdq
nop
shl
xchg
cdq
out
stos
repnz
loop
xor
aam
pop
dec
rol
add
(bad)
pushf
nop
inc
ss
or
loopne
mov
jmp
cmps
cmp
push
ja
mov
repnz
fimul
adc
in
movs
fsub
cs
add
push
daa
retf
aaa
jae
add
retf
ret
add
mov
shr
xchg
int3
in
cmp
into
mov
mov
lock
(bad)
sar
cld
mov
sahf
sbb
push
test
lods
outs
mov
xchg
pop
jbe
mov
jg
bound
pop
xor
jge
xlat
sti
mov
loope
add
(bad)
add
jg
pushf
inc
xor
push
fistp
cdq
xor
repnz
mov
inc
sub
dec
pop
(bad)
int
int3
pop
inc
jb
lahf
jmp
sbb
cmps
dec
mov
jnp
push
in
mov
in
enter
and
push
jns
in
add
rcr
rol
inc
(bad)
ficomp
fidivr
jg
outs
mov
pop
ins
jae
add
cmps
test
out
cmp
hlt
adc
push
dec
mov
jmp
inc
mov
pop
ret
icebp
jnp
add
cdq
adc
dec
fiadd
push
pop
xchg
jmp
pop
out
inc
adc
test
popf
add
mov
lods
mov
cmp
xchg
stos
call
and
enter
shrd
in
mov
out
imul
xchg
test
loop
pop
push
cmps
ins
mov
mov
push
dec
leave
xor
loop
dec
hlt
adc
mov
inc
or
jle
sahf
fiadd
sbb
in
inc
aas
data16
or
sbb
shl
idiv
(bad)
push
xor
sbb
push
loopne
mov
or
xor
pop
xchg
pop
iret
int
push
paddb
ds
rol
gs
push
sti
sti
push
xchg
mov
out
sub
mov
shl
push
xchg
cs
or
mov
imul
xlat
outs
xchg
xchg
xor
and
out
mov
imul
sbb
fdivr
fnstcw
push
sub
or
iret
ja
pop
or
and
ficom
pop
push
or
mov
and
inc
lea
ss
and
mov
sbb
dec
cmc
retf
jl
sub
jle
jecxz
mov
pushf
or
mov
inc
ror
add
iret
daa
mov
scas
popf
in
repz
fidivr
out
xor
mov
xchg
ficomp
retf
add
pop
movs
fdiv
ja
adc
lods
clc
loopne
dec
and
adc
mov
stos
retf
adc
xchg
and
scas
std
xchg
mov
in
xchg
xor
jmp
jo
ret
retf
rol
scas
pop
addr16
xor
jecxz
mov
call
lahf
cwde
add
and
adc
or
cmp
popa
mov
xor
gs
jae
mov
pop
imul
cli
jbe
in
sbb
inc
cmp
stos
xor
outs
fs
fcom
cmp
jae
mov
cld
adc
adc
cli
loopne
push
test
es
mov
shl
cmps
imul
clc
and
cmp
out
loope
mov
out
jae
cmps
mov
std
das
add
pop
ficomp
test
xlat
mov
or
pop
popf
inc
test
mov
dec
and
inc
mov
call
or
adc
stc
(bad)
stc
movaps
sub
xchg
jle
jb
adc
mov
fcomp
mov
(bad)
in
jne
test
into
jno
xor
inc
jne
pop
xchg
mov
cmp
jb
sbb
cmp
adc
and
out
cwde
pop
push
fs
fsub
push
dec
xchg
push
cmps
inc
dec
sbb
and
jbe
(bad)
fxch
ficom
xor
movs
sbb
repnz
push
sub
jns
mov
data16
sbb
scas
movs
lea
jmp
mov
outs
sub
into
sub
outs
test
or
and
cdq
xor
ins
xor
lahf
neg
loopne
frndint
and
leave
jbe
nop
push
sub
adc
push
int3
(bad)
mov
xchg
cwde
jb
inc
ins
(bad)
sar
into
shl
fisubr
sub
call
ja
mov
sbb
in
int3
or
shl
jmp
pop
mov
cmp
dec
add
lods
rcl
lahf
push
es
mov
inc
jbe
repz
call
mov
jno
and
mov
sub
or
cli
cmc
(bad)
lock
and
in
addr16
aas
sbb
stos
mov
lock
fist
adc
rcr
pushf
push
pop
dec
out
test
das
pushf
or
jmp
adc
sub
pop
(bad)
pop
call
lahf
pusha
mov
loop
jmp
imul
js
fst
mov
ins
mov
add
ins
inc
ins
test
pop
es
ret
adc
arpl
sub
jno
ja
in
push
jmp
jg
test
mov
inc
lods
push
push
jbe
pop
(bad)
and
aaa
rcl
fmul
push
lea
pusha
popa
mov
sbb
ins
iret
xchg
jecxz
mov
cs
pop
jg
ss
into
scas
mov
cmc
arpl
int3
push
imul
add
nop
mov
int
pop
repz
out
out
sbb
lds
in
mov
pop
popa
dec
add
in
mov
add
es
mov
std
ss
inc
or
and
pop
(bad)
and
xor
xchg
inc
stos
repnz
and
and
xor
push
int
in
popf
mov
mov
mov
inc
imul
(bad)
fisttp
xor
cmp
cmp
xchg
and
mov
mov
lods
xchg
leave
mov
mov
call
pop
push
call
or
paddusb
xor
in
cld
dec
leave
dec
jg
iret
(bad)
iret
(bad)
loop
sub
jmp
add
xor
dec
loopne
out
cli
jbe
(bad)
callw
sbb
dec
js
push
jecxz
or
and
into
adc
or
and
stos
je
test
mov
movs
xchg
mov
pop
stos
adc
pop
mov
scas
out
mov
dec
dec
adc
lea
rol
push
shl
dec
xor
mov
pop
push
and
cmp
jne
dec
(bad)
xor
test
sbb
or
cmps
mov
inc
ret
mov
lods
pop
fidivr
add
shl
jb
fwait
or
adc
fstp
cmp
jns
out
cdq
addr16
mov
out
pop
xchg
sub
mov
outs
mov
fdivr
repz
adc
push
fnsave
test
or
and
xchg
cmp
retf
xchg
push
jae
loop
xchg
in
data16
push
xchg
icebp
cwde
xor
aad
popf
sbb
sub
pop
scas
add
or
neg
mov
cdq
push
cmc
xor
push
mov
scas
arpl
hlt
pop
mov
inc
test
fdiv
test
add
jbe
call
jno
ins
sub
das
jecxz
jge
dec
inc
mov
retf
pop
mov
jo
das
aaa
popf
lea
push
stos
call
scas
lods
stc
ja
inc
out
ins
mov
sub
adc
push
shl
adc
scas
xchg
cmp
inc
sbb
add
data16
aaa
push
xchg
fidiv
je
loopne
retf
sbb
call
fld
add
addr16
adc
pause
mov
push
xor
inc
(bad)
dec
mov
jo
in
xor
ins
mul
push
jne
and
fwait
scas
retf
jecxz
xchg
xchg
test
sar
xchg
int3
aad
addr16
pop
loopne
cmp
popf
sub
int
js
or
lea
jmp
cmps
xor
adc
push
shl
xchg
jg
adc
mov
(bad)
xlat
and
repz
rcr
adc
lods
inc
jle
rcr
inc
pushf
aad
shl
mov
jl
cmp
ret
lahf
dec
xor
lahf
out
cmps
in
mov
jbe
fdivr
inc
jne
pop
sub
fs
pop
cmps
xchg
je
jnp
jmp
mov
mov
pop
movs
jp
cmp
fidivr
mov
call
out
rcr
pop
sub
pop
fcomip
push
(bad)
mov
sub
shl
jle
and
(bad)
inc
pop
sub
bound
in
xchg
mov
push
jno
push
mov
push
sub
jns
lods
xor
mov
es
push
imul
inc
(bad)
out
in
jnp
and
ins
rcl
mov
pop
outs
mov
lods
(bad)
ffreep
adc
jmp
enter
inc
inc
arpl
sub
gs
clc
icebp
mov
add
dec
(bad)
mov
outs
sbb
cmp
cmp
push
mov
lock
mov
xchg
hlt
outs
and
(bad)
movs
sahf
(bad)
dec
or
dec
fld
movs
sahf
fst
adc
sahf
sub
ds
xor
sbb
jle
sub
repnz
dec
dec
adc
bound
pop
rcl
sbb
sub
and
xchg
outs
hlt
call
pop
popa
sub
pushf
inc
sub
in
lods
jns
push
push
(bad)
out
stos
out
inc
sub
sbb
stos
dec
dec
jo
xor
scas
mov
jbe
xlat
mov
retf
stc
pop
jle
inc
ins
mov
sub
push
jno
sahf
out
and
dec
(bad)
push
xchg
scas
mov
pusha
ret
arpl
iret
sti
out
or
mov
ret
inc
mov
daa
jns
(bad)
lock
xchg
jecxz
mov
jle
sub
push
jae
jno
stc
push
hlt
cwde
jno
cdq
sub
adc
push
ins
pop
imul
adc
xor
mov
sub
iret
dec
lods
retf
int3
pop
out
push
push
addr16
push
xchg
lods
xor
std
ret
fidivr
xor
mov
jno
dec
dec
and
inc
jae
dec
icebp
lea
or
div
mov
(bad)
neg
pop
ret
xor
jge
xchg
push
ror
(bad)
and
xor
jns
mov
or
sar
(bad)
mov
or
ror
outs
fldenv
and
adc
sub
jle
jb
icebp
mov
leave
sub
(bad)
(bad)
mov
pop
fisttp
push
(bad)
mov
pop
jg
icebp
mov
in
mov
ret
adc
lods
pop
(bad)
pusha
xchg
push
fld
out
fbld
int
jmp
adc
sub
test
inc
ja
inc
imul
sub
sub
push
jmp
add
daa
std
in
dec
xlat
adc
xchg
sbb
jge
popa
sbb
dec
mov
mov
pop
mov
dec
outs
in
ins
ret
pop
xchg
int3
pop
ins
mov
pop
in
or
sbb
pop
loopne
ror
inc
jp
adc
movs
cmp
mov
xor
adc
and
(bad)
mov
pop
bound
jne
cmovo
ins
inc
aaa
pop
inc
pop
xchg
sbb
ror
stos
test
xor
cli
jne
inc
data16
aas
inc
scas
retf
or
and
cdq
cmp
retf
not
cmp
adc
jo
xor
fist
pop
js
repz
scas
out
shl
or
push
(bad)
mov
mov
sub
rep
rol
xor
and
cdq
cmps
loope
fild
ficom
adc
rol
mov
popa
stos
test
push
push
lods
inc
fwait
stc
mov
push
cmp
xlat
jl
aaa
inc
int
sar
sar
sar
not
call
cmp
push
dec
ret
mov
je
aam
sar
scas
popf
hlt
test
pop
xchg
xchg
jl
and
in
pop
dec
scas
pop
mov
cmc
das
fisubr
aad
mov
pop
jmp
data16
jmp
mov
sbb
mov
mov
sbb
add
in
mov
adc
xchg
movs
jmp
fiadd
mov
sbb
inc
sbb
pop
sub
test
xor
mov
aaa
aas
cli
sub
fistp
and
cmp
sbb
cwde
pop
or
sbb
(bad)
retf
aam
lahf
add
lock
mov
out
sub
add
scas
icebp
xor
inc
or
cmps
imul
mov
pop
lods
mov
sub
fcmovnu
xchg
sbb
push
int3
inc
push
jne
stos
pushf
js
ins
mov
jb
movs
mov
pop
jbe
test
cs
sahf
push
int
stos
xchg
inc
(bad)
dec
jmp
sub
jo
fiadd
fisttp
or
push
test
cmps
or
or
out
jl
cmp
push
add
sbb
in
fstp
int3
ror
push
pop
leave
ins
rcr
pushf
popa
adc
repnz
(bad)
(bad)
nop
mov
fisubr
(bad)
ror
jns
sahf
sbb
inc
test
(bad)
mov
push
inc
mov
dec
call
dec
mov
inc
cdq
push
pop
xor
out
cdq
adc
cwde
fnstcw
sti
in
fstp
mov
pop
mov
fcmovnu
in
ins
jp
mov
int
arpl
mov
mov
and
adc
inc
jbe
outs
call
loope
inc
push
or
int3
xor
adc
or
inc
mov
mov
mov
dec
inc
loopne
fwait
dec
adc
jne
xchg
imul
mov
pushf
js
ins
xchg
dec
add
bound
cmp
xchg
sub
loope
mov
ds
sub
mov
xor
fidivr
retf
dec
pop
mov
scas
mov
xchg
jmp
jmp
add
xchg
(bad)
mov
arpl
ret
xchg
(bad)
pop
repz
cmps
xor
rcr
or
mov
mov
fcomip
mov
sti
cld
enter
lods
push
add
(bad)
push
jo
xchg
add
cmp
rcr
lahf
xchg
sub
std
(bad)
jmp
xchg
xor
add
jge
and
inc
data16
dec
mov
shr
test
fst
test
sbb
xor
ins
sbb
xchg
data16
mov
mov
cdq
push
out
pusha
int
iret
cmc
div
add
xor
cwde
(bad)
loopne
sbb
inc
push
lea
iret
pop
sbb
out
mov
aam
fisttp
add
(bad)
mov
into
xchg
push
cmc
or
xchg
jne
lea
jl
mov
mov
xchg
test
stos
jp
je
dec
xchg
sbb
mov
and
add
dec
or
push
mov
xor
ss
jge
cdq
fisubr
data16
lods
in
push
mul
mov
push
mov
sub
xchg
pusha
push
rcl
pop
pop
dec
addr16
add
(bad)
mov
cmp
jl
mov
cmc
daa
dec
lds
int
push
add
aaa
lods
add
in
out
inc
and
push
outs
sar
dec
mov
or
adc
imul
mov
leave
and
sub
fs
mov
pop
sbb
mov
or
repnz
adc
add
xchg
cwde
(bad)
cmc
gs
ja
les
stos
cmps
and
(bad)
ds
repnz
push
dec
jl
jnp
std
pusha
push
ds
adc
or
cwde
xlat
cld
sbb
ret
cmps
mov
push
mov
push
cmps
int
or
jns
retf
cwde
shl
push
jne
je
add
push
test
(bad)
sar
in
fs
jne
and
mov
pop
push
dec
ss
add
fadd
gs
inc
cwde
jae
inc
mov
cmp
je
aaa
in
cmps
xchg
fbld
(bad)
(bad)
fucomi
lahf
rcr
(bad)
adc
fstp
add
sub
jmp
add
int3
pop
(bad)
jg
nop
mov
jp
hlt
xor
mov
int
call
dec
pop
in
pop
push
ins
and
inc
cmp
test
mov
jmp
cs
call
push
aaa
or
xor
adc
or
fs
call
div
cld
stc
fld
xchg
int
pop
push
outs
mov
int
les
fdiv
rcl
mov
push
add
sbb
hlt
cmc
test
dec
inc
xchg
dec
int3
or
push
pop
data16
mov
test
or
fist
push
mov
adc
xchg
sub
adc
mov
out
adc
(bad)
push
ja
mov
adc
mov
into
mov
sbb
mov
adc
xor
sbb
mov
(bad)
aam
fsub
(bad)
lock
and
(bad)
aam
mov
mov
ret
jge
dec
(bad)
aad
in
jmp
test
sbb
sub
lods
inc
or
cmp
xchg
pop
inc
push
in
test
xor
inc
idiv
into
xchg
sub
or
lods
aad
cmp
jae
adc
mov
test
cld
test
aad
inc
or
(bad)
sub
movs
out
cmp
into
mov
push
push
sbb
clc
mov
fild
cmp
jbe
jo
js
cmps
shr
jns
cwde
mov
mov
fcom
mov
jno
xchg
leave
cwde
push
cmp
or
ror
xor
or
in
lock
fnstenv
or
jbe
sub
and
adc
push
mov
xchg
enter
out
ss
sbb
add
dec
push
xor
mov
fmul
xchg
inc
outs
inc
in
test
lods
call
mov
retf
pusha
bound
movs
loope
inc
sahf
jb
pop
mov
mov
loopne
jecxz
push
repz
nop
pop
out
or
pop
adc
cmp
test
mov
bound
push
pop
outs
pop
popa
inc
(bad)
into
outs
pop
ss
cmp
in
mov
sub
cmp
fild
pop
int3
test
mov
dec
je
dec
mov
push
xchg
pop
sbb
dec
fld
ret
int3
cli
add
and
and
bound
push
push
push
xor
lods
sub
cmp
mov
cmp
add
div
mov
lahf
dec
sub
aad
and
pop
adc
pop
inc
popf
test
sahf
cwde
outs
out
push
jmp
enter
add
lahf
jp
cmp
cwde
stos
fwait
push
xchg
and
clc
pop
out
test
cmp
ins
jno
cmp
sahf
(bad)
mul
popf
aad
jecxz
cmps
adc
cdq
xor
jb
pop
sub
xor
and
xor
sub
cmp
pop
pop
lds
mov
dec
xchg
ja
mov
(bad)
fstp
xchg
movs
pop
mov
rol
pop
mov
pop
adc
sbb
mov
addr16
xor
aam
(bad)
push
(bad)
pushf
sub
jmp
es
sbb
test
adc
xchg
cmc
sbb
mov
push
and
xor
scas
xchg
jmp
aam
pop
in
shr
js
cmp
mov
scas
call
ds
sub
push
sbb
xor
xor
test
push
mov
cmp
pop
fucomip
stos
mov
and
mov
xchg
out
cmp
pop
and
sub
and
dec
push
pushw
inc
pop
xor
jbe
out
xchg
jl
je
or
xor
fcmovnbe
inc
dec
stc
jae
ror
rcr
push
inc
repnz
dec
cmc
push
cmc
rcl
sbb
not
mov
dec
or
in
xor
adc
jb
adc
in
mov
loope
cmp
sbb
xchg
pusha
mov
fxch
jne
jg
push
out
mov
sub
iret
call
ret
push
pop
mov
mov
retf
fnsave
fstp
repz
cmp
inc
pop
push
movs
out
and
xchg
out
repz
cmp
rol
bound
out
rcr
or
test
inc
ss
js
retf
pop
cmp
test
jo
hlt
cmp
js
pushf
mov
adc
lahf
xor
std
pusha
mov
sbb
xchg
loopne
mov
jnp
sbb
push
pop
daa
sbb
aam
inc
mov
dec
push
daa
inc
addr16
dec
sar
push
jecxz
mov
retf
arpl
sbb
sub
enter
mov
pop
cmp
stos
pop
mov
add
aad
test
cmps
fstp
es
push
lahf
daa
fs
pop
imul
sub
xor
inc
xor
push
jmp
sub
test
enter
popa
(bad)
xor
cs
push
ret
push
aad
popa
xor
enter
lock
and
xchg
jb
inc
or
or
sysexit
mov
pop
dec
inc
xor
ja
xlat
add
(bad)
loope
mov
scas
and
aam
lds
pushf
jne
inc
out
inc
jo
popa
(bad)
movs
push
add
mov
mov
mov
xlat
pushf
out
dec
popf
ins
adc
daa
inc
jmp
outs
test
sti
or
pop
push
xchg
dec
push
repz
inc
stos
mov
fs
sbb
and
(bad)
loop
out
loop
or
ror
je
and
mov
retf
xor
dec
hlt
call
imul
inc
mov
test
(bad)
fdivr
jnp
fdivrp
xchg
and
dec
pop
jmp
push
jnp
or
(bad)
mov
inc
arpl
adc
sbb
cmp
and
in
cmp
mul
sar
sbb
xor
out
shl
fdivr
mov
push
out
(bad)
out
mov
sbb
adc
in
arpl
retf
mov
xchg
sbb
lea
xchg
sub
iret
mov
ins
cmp
int3
or
test
mov
push
or
push
repnz
lods
inc
jbe
mov
dec
jo
jg
cmp
pop
push
mov
adc
mov
jns
gs
daa
push
jnp
in
ret
or
in
sbb
jns
dec
rcl
inc
or
cmp
iret
test
mov
jae
aaa
mov
stc
outs
(bad)
stc
sbb
xchg
fld
ror
aaa
xchg
mov
add
outs
movs
loop
iret
bound
sbb
pop
inc
and
movs
add
xchg
aam
clc
and
adc
mov
and
push
and
enter
sbb
loop
inc
sbb
push
jno
lods
dec
mov
inc
arpl
dec
outs
jns
jle
iret
push
adc
cmp
nop
ror
mov
sub
mov
inc
push
mov
adc
bound
push
cwde
cmp
mov
stos
add
(bad)
out
int
sub
(bad)
xchg
ret
jp
sbb
imul
mov
movs
mov
sub
sbb
outs
fbstp
jnp
cs
scas
js
mov
sub
mov
sbb
rcr
cli
arpl
cld
sbb
push
bound
pop
adc
daa
sbb
jp
ret
push
add
push
arpl
movs
jo
xchg
mov
pop
adc
dec
jp
add
popf
cmps
repnz
cmps
ret
cmp
sbb
nop
cmp
jne
adc
mov
xchg
pop
idiv
(bad)
shl
mov
neg
test
dec
in
loopne
les
adc
jle
nop
cmp
xchg
rol
out
mov
ret
push
mov
mov
imul
xlat
mov
nop
mov
pop
dec
pop
adc
popa
jmp
js
adc
inc
xchg
xor
scas
bnd
jle
retf
xchg
jbe
pop
and
cmp
adc
inc
imul
mov
ins
inc
and
xchg
iret
data16
icebp
push
xchg
pop
and
ret
ins
and
push
jns
dec
jl
adc
xor
(bad)
push
leave
(bad)
and
pop
ret
aam
add
ss
inc
lahf
mov
and
(bad)
cmc
leave
and
loop
hlt
test
xor
ja
sub
pop
jmp
xchg
push
sbb
(bad)
jge
push
cmps
movs
ret
inc
xor
mov
pusha
loopne
adc
(bad)
movs
ret
imul
jbe
(bad)
pop
lods
(bad)
inc
xlat
inc
iret
int3
not
(bad)
push
cmp
leave
xlat
and
add
test
push
mov
or
jp
in
xchg
push
(bad)
int3
push
arpl
dec
ins
xor
jb
push
(bad)
xchg
js
mov
arpl
call
cmp
clc
in
push
mov
imul
hlt
es
or
(bad)
rcl
xor
js
dec
test
vmwrite
mul
pusha
jae
shl
push
push
clc
push
jno
fidivr
dec
test
mov
push
mov
cdq
push
lock
arpl
push
sub
aam
repz
sub
and
enter
inc
cmp
stos
xor
das
arpl
inc
add
add
mov
jnp
mov
push
jge
mov
adc
pop
pusha
jg
xchg
das
mov
fld
popa
imul
rcl
mov
rcl
dec
push
mov
ja
cmp
dec
outs
test
jl
sbb
es
inc
xchg
sub
sub
repz
repnz
aaa
xchg
xchg
adc
jmp
in
sbb
cmp
sbb
jmp
out
fisub
test
mov
cmp
retf
lds
mov
and
inc
mov
pop
retf
ss
call
mov
xchg
imul
sbb
xchg
(bad)
(bad)
mov
sub
sbb
mov
xchg
and
or
jnp
adc
pop
ins
push
add
sub
pushf
mov
push
inc
cmps
ds
adc
lods
scas
or
adc
aam
into
or
mov
cvttps2pi
and
add
jmp
jmp
pop
mov
pop
mov
stos
lock
push
sbb
lock
mov
in
sub
inc
xchg
jecxz
test
neg
sub
inc
test
dec
jbe
lea
jae
pushf
mov
sbb
jecxz
jp
sbb
xchg
ja
fdivr
sbb
jno
inc
cwde
mov
cmp
iret
ja
cdq
mov
sbb
and
pushf
cmp
lods
daa
aaa
sub
and
pop
cmp
cdq
pop
or
pop
jle
and
inc
inc
sahf
mov
mov
fcmovnb
pop
pop
and
and
lahf
fmul
aad
shr
rcl
mov
es
lds
nop
lds
ret
cmp
scas
and
movs
add
in
pop
jmp
loopne
fadd
out
popa
adc
data16
aad
rcl
inc
adc
jb
icebp
fadd
leave
fsub
and
cli
dec
dec
pop
pop
adc
cmp
pop
sub
or
fld
fimul
and
inc
jg
mov
ds
pusha
and
ins
or
outs
mov
scas
adc
dec
icebp
lock
(bad)
jmp
add
mov
clc
inc
mov
ja
(bad)
ss
mov
mov
lock
je
mov
add
sub
jp
adc
dec
fidivr
mov
cld
push
fisub
jl
test
push
nop
pop
push
inc
inc
and
in
jge
mov
fwait
loopne
imul
rcl
inc
clc
ja
inc
or
test
in
es
call
push
cmps
add
push
xor
sub
xchg
dec
daa
test
cmc
mov
mov
jo
and
xor
ret
lock
xor
es
xor
fisubr
ja
xchg
int
movs
je
std
add
or
push
jae
scas
jmp
sti
add
aas
xor
mov
(bad)
hlt
rcr
push
sbb
loop
pusha
in
push
(bad)
(bad)
jns
fistp
outs
add
add
mov
jo
mov
dec
jae
imul
cmp
cdq
lods
imul
out
nop
push
lahf
addr16
push
ja
xor
xor
lods
or
stos
adc
add
mov
mov
add
or
out
adc
xchg
mov
mov
dec
xor
test
sti
mov
lods
push
jo
sub
inc
ins
cdq
dec
xlat
dec
ins
add
pop
fcomp
push
fcomp
xchg
push
sbb
(bad)
aas
fwait
sti
cmp
add
push
sub
retf
push
xor
aam
shl
xor
push
dec
jmp
ins
adc
nop
cmc
icebp
call
cmp
and
add
lds
mov
mov
xchg
dec
aad
neg
pop
push
scas
and
mov
pop
loop
outs
jbe
test
sub
add
repnz
adc
ret
popa
xor
xchg
pusha
jmp
sbb
and
add
mov
test
mov
scas
jnp
add
mov
not
das
fbstp
(bad)
std
mov
inc
push
jo
and
gs
sub
push
lock
cwde
in
or
pop
out
sahf
movs
inc
inc
pop
xchg
das
arpl
cli
inc
int
sub
jne
ins
dec
int
cdq
jmp
sub
iret
fild
test
(bad)
loopne
rcr
lahf
mov
mov
pop
and
mov
scas
mov
ret
lea
add
in
mov
repnz
sub
pop
add
push
pop
fnsave
outs
call
inc
mov
rcl
out
add
push
mov
xor
inc
jnp
call
int3
sub
out
scas
xchg
push
or
ja
mov
cmp
jnp
and
add
cli
fcmovnbe
xor
mov
rcl
jno
repz
jne
movs
daa
(bad)
out
xchg
xor
inc
cmps
adc
nop
jmp
cmps
icebp
jecxz
cmp
mov
(bad)
imul
mov
cmps
in
mov
mov
lods
dec
jp
pop
aad
jns
pushf
cmp
inc
popf
(bad)
dec
or
lock
movs
movs
xor
jo
xlat
loop
popa
xchg
popa
mov
and
ja
movs
mov
fild
cmps
sbb
push
sub
mov
and
cmp
aaa
lahf
pop
(bad)
retf
jle
cmp
mov
imul
mov
(bad)
arpl
jecxz
xor
mov
int
es
push
add
dec
mov
mov
fdivrp
adc
jp
popf
movs
inc
(bad)
or
inc
aad
ja
mov
inc
popf
sti
mov
and
xor
fstp
jnp
shl
sbb
mov
aam
sub
pop
push
add
pop
paddd
add
addr16
push
sub
std
in
ret
aam
add
push
fwait
mov
sar
(bad)
push
and
dec
loop
in
pop
in
aas
jns
inc
pop
ins
push
xor
push
call
sbb
mov
mov
sar
or
add
pop
xor
pop
pop
adc
add
add
jne
cdq
sar
jne
call
and
xchg
push
mov
sbb
push
pop
mov
jb
test
icebp
sbb
adc
cmp
cdq
xchg
jmp
fisttp
pop
mov
xchg
add
ins
mov
push
jmp
xchg
test
cmp
inc
mov
push
inc
or
push
inc
cs
and
jl
sub
sbb
fwait
add
cmp
mov
(bad)
cmc
cdq
pop
fcmovb
dec
fdivr
shl
addr16
enter
or
aaa
repnz
pop
fst
scas
fwait
in
jmp
push
mov
je
mov
push
rcl
aam
sub
clc
inc
repz
retf
sbb
sbb
repnz
out
divps
xor
call
stos
into
xchg
sbb
sub
mov
mov
out
test
enter
or
cmp
cmp
js
inc
jmp
mov
mov
pop
cmp
mov
add
mov
sub
inc
scas
jmp
jne
mov
or
push
(bad)
push
mov
pop
clc
les
sub
(bad)
or
push
and
sub
stos
(bad)
jnp
in
push
jge
xchg
fldcw
cdq
sbb
call
and
sbb
stos
fcom
xchg
push
push
jecxz
call
mov
or
xor
mov
aam
pop
mov
fdivr
cmp
mov
sub
in
out
and
fdiv
sub
dec
mov
in
in
into
dec
sub
fdivr
pop
int
retf
adc
xchg
mov
add
fs
sbb
les
cmp
lods
aas
ret
rol
fild
sub
(bad)
jnp
push
push
jae
popa
aad
jg
ss
aaa
in
mov
mov
inc
push
icebp
mov
test
sbb
ins
es
nop
or
ins
popa
pushf
call
add
jmp
into
(bad)
xchg
jmp
iret
fild
push
mov
or
dec
jmp
cs
in
lods
jmp
jne
or
lock
sub
popf
mov
test
cmp
data16
int
mov
pop
lahf
pop
shl
mov
int3
movs
jno
sbb
ror
xchg
push
(bad)
cmp
jl
aas
loop
pop
int3
fld
push
mov
jle
fs
ret
je
dec
fisttp
lea
xchg
push
outs
add
sbb
rcl
push
xchg
rcr
lahf
idiv
das
mov
popf
and
jmp
inc
cmp
sbb
dec
(bad)
mov
arpl
push
dec
out
(bad)
push
loop
add
or
mov
mov
data16
pop
add
cmp
test
xchg
jmp
out
push
jno
call
add
mov
outs
inc
sub
and
push
loop
pusha
rcl
pop
leave
enter
jl
add
cmp
cdq
mov
push
pop
cmp
fld
jl
lea
into
cmp
cdq
lock
std
sub
dec
or
gs
mov
inc
push
add
popa
add
cld
fistp
cdq
cmp
sti
push
stc
jmp
outs
pop
mov
dec
dec
and
sbb
mov
push
push
xor
pop
int
jge
sti
fnstsw
jp
mov
cwde
and
daa
or
(bad)
sbb
adc
out
add
data16
dec
and
ins
add
sub
pop
mov
mov
sub
cmp
and
adc
cmp
lds
lea
aas
pop
aad
push
fstp
push
adc
out
iret
daa
push
out
enter
mov
sub
pusha
xchg
cmp
mov
inc
jecxz
lahf
jae
jmp
les
rcr
out
mov
sbb
xor
cmps
or
and
sub
cmp
(bad)
jle
cmp
out
add
push
shl
jle
jne
inc
ss
mov
test
mov
dec
push
adc
pop
add
test
xlat
push
sub
das
jno
add
xchg
bound
pop
(bad)
and
pop
xchg
or
test
mov
push
jmp
call
jg
or
push
call
out
xchg
ret
pop
lds
out
add
pop
in
push
iret
xor
pop
loopne
(bad)
jns
add
and
jle
test
ja
push
(bad)
shl
push
sbb
jmp
dec
mov
xchg
out
and
jmp
addr16
xlat
addr16
jno
mov
fdivr
cmps
imul
outs
pusha
adc
jne
xor
add
imul
test
and
fstp
sub
shr
xchg
jmp
jne
cmp
inc
(bad)
outs
cdq
aaa
or
xor
(bad)
fwait
iret
mov
lock
mov
jge
jmp
fimul
push
popa
mov
nop
loopne
add
std
cdq
inc
retf
sub
sar
stos
sar
cmp
out
popf
dec
cmp
popf
or
ja
push
das
or
cmps
inc
mov
pop
inc
(bad)
sub
push
push
in
push
dec
push
cmp
data16
dec
sahf
ds
xor
mov
out
retf
retf
daa
push
and
sbb
jnp
test
dec
inc
(bad)
pusha
mov
out
push
pop
pop
pop
ds
add
cmp
inc
or
rcr
outs
cli
mov
add
movs
and
add
mov
push
fcomp
pop
test
mov
mov
dec
popf
retf
or
mov
sti
gs
mov
mov
pop
pop
data16
cmc
lods
push
add
adc
loop
fild
jg
sub
cmps
mov
sub
xor
sub
dec
cmp
dec
inc
movs
cmp
xchg
ds
imul
mov
sbb
cmps
repnz
es
jl
ins
add
pop
xlat
push
cld
dec
xchg
dec
test
nop
xchg
movs
test
mov
xchg
dec
ror
fstp
add
pusha
call
push
or
sub
xor
mov
enter
push
and
pop
pop
cmp
xlat
or
mov
jle
test
in
mov
sub
mov
mov
mov
jge
dec
inc
adc
mov
adc
(bad)
cmp
jmp
call
sub
mov
add
in
jg
popa
in
inc
call
int
neg
xor
iret
mov
retf
or
pop
outs
sbb
cmp
inc
jnp
mov
add
and
shl
xchg
inc
(bad)
jnp
fld
push
inc
jns
out
aaa
ins
fld
push
add
inc
gs
push
retf
popa
fstp
cmp
loopne
jmp
(bad)
mov
push
nop
das
pop
and
mov
inc
adc
fdivp
out
xor
inc
retf
inc
fist
gs
pop
bound
rol
push
lahf
jno
int
mov
pop
retf
repnz
sub
out
movs
sar
dec
mov
aad
loop
std
ins
scas
mov
sbb
and
cmp
push
pushf
or
fldcw
or
loope
add
mov
mov
scas
les
cmp
pop
sti
arpl
ret
xchg
adc
xor
jb
lods
outs
ds
jl
lahf
sub
sbb
pop
cmp
pop
sbb
add
fcomp
inc
cmp
sub
aas
jl
sbb
xor
mov
mov
loop
test
dec
mov
imul
out
sub
xlat
fwait
add
or
mov
pop
jnp
and
mov
dec
jmp
stc
test
(bad)
lea
test
je
or
xchg
and
nop
(bad)
iret
popa
mov
xor
pop
xchg
inc
add
xchg
mov
jmp
daa
or
and
dec
mov
jl
inc
ins
imul
mov
adc
jle
arpl
mov
icebp
sbb
inc
adc
jmp
xchg
ret
add
pop
jmp
imul
and
jmp
stos
pop
loop
shl
scas
in
addr16
or
inc
outs
push
and
imul
add
bound
rcr
popf
in
xor
fadd
(bad)
dec
addr16
jbe
push
mov
or
fisub
cli
sbb
retf
cs
rcl
nop
jmp
sub
sub
push
pop
inc
rcr
mov
jmp
dec
repz
pop
inc
movs
cmp
iret
sub
or
fmul
add
out
je
cli
mov
sub
jp
or
push
fimul
and
push
fld
lds
loope
cmp
mov
enter
ins
mov
jmp
fcom
(bad)
sti
xor
and
cmp
jno
pushf
(bad)
movs
add
sti
push
in
xchg
mov
mov
jl
in
ror
pop
out
test
mov
adc
movs
pop
sub
jl
in
dec
sub
xchg
ss
sbb
mov
push
movs
push
std
in
daa
mul
jg
scas
outs
mov
call
and
retf
ret
and
(bad)
jae
mov
ins
cmp
add
xor
inc
and
retf
jae
repz
push
mov
lahf
mov
jge
rcl
cwde
and
cmps
mov
loop
cmp
bound
or
inc
pusha
div
pop
out
sub
cwde
cmp
scas
ds
inc
inc
push
fmul
frstor
and
(bad)
mov
pop
jl
mov
and
loop
pop
pushf
jb
mov
outs
aas
push
lahf
and
in
push
mov
inc
stc
jp
lea
addr16
push
xchg
shl
inc
inc
adc
add
jo
xchg
push
sub
jge
clc
dec
pop
jbe
mov
iret
enter
je
mov
rcr
cmc
inc
repnz
jle
leave
je
sub
or
call
pop
dec
push
fadd
loope
xor
dec
rep
mov
adc
push
jae
jno
or
or
push
das
mov
int
mov
xchg
out
aad
cdq
or
leave
mov
or
cmp
sbb
push
in
nop
inc
pop
sbb
movs
or
mov
arpl
stos
cmp
nop
sub
jae
addr16
test
imul
sbb
sbb
outs
jge
mov
je
cs
shr
lea
out
scas
sub
pop
aad
scas
lahf
jmp
push
dec
dec
cmps
mov
and
pop
adc
call
shr
mov
cld
test
dec
sbb
dec
in
cmp
push
sbb
mov
ins
out
rcl
imul
call
fcmovne
jecxz
pop
sbb
arpl
mov
test
idiv
push
cmc
fmul
int3
ss
sub
ins
jl
cmp
add
in
pop
or
inc
push
mov
mov
inc
ins
aaa
inc
sbb
pop
cmp
push
fcom
push
ret
cmp
data16
jecxz
cmp
mul
enter
loopne
arpl
addr16
fldcw
(bad)
push
jae
add
mov
and
popf
nop
movs
in
push
inc
out
xlat
mov
enter
ret
xchg
dec
mov
mov
(bad)
dec
and
ror
and
and
or
and
push
sub
mov
pop
dec
stc
imul
out
mov
lods
aaa
xor
xchg
arpl
sbb
xchg
dec
pusha
inc
js
out
sahf
mov
shr
push
les
imul
add
inc
cmp
in
push
sub
jmp
js
add
(bad)
mov
adc
repz
fstp
pusha
dec
push
rcl
call
arpl
adc
es
adc
mov
dec
push
fs
lock
call
(bad)
and
movs
cmp
xrelease
dec
cmp
jge
xchg
xchg
sub
lods
xlat
ret
mov
fs
push
xor
test
addr16
push
jp
push
xor
in
jbe
xlat
sub
mov
pop
mov
xchg
sbb
sub
mov
ret
push
in
add
sbb
and
mov
loopne
mov
pop
lock
xor
test
cs
mov
xchg
ss
sbb
jp
xor
push
push
mov
add
push
push
stos
or
pushf
dec
pop
add
sub
stc
or
mov
in
mov
clc
or
lahf
retf
out
pop
fcomp
inc
and
pop
adc
cdq
xor
fcomp
pop
cmc
sub
cmp
pop
xor
adc
push
mov
dec
repnz
fist
or
div
push
cli
mov
lods
xor
mov
pop
jno
(bad)
aad
cli
sub
scas
ins
push
mov
dec
adc
or
int
mov
mov
push
xor
pop
dec
add
call
inc
mov
movs
outs
inc
mov
bound
push
aaa
movs
and
shl
xor
adc
in
xchg
fstp
mov
jbe
repnz
inc
or
and
ins
fcomp
and
pop
call
fidiv
ret
sub
fdivr
mov
adc
nop
sbb
add
lods
xchg
xchg
daa
ja
fs
les
arpl
xchg
xchg
dec
add
cdq
pop
ins
sub
add
data16
and
je
mov
clc
xchg
fs
add
out
test
jno
mov
data16
das
xor
int3
mov
sbb
push
and
mov
aaa
cmp
cmp
ins
dec
neg
ins
xor
push
mov
shr
jno
loop
or
out
sbb
sub
int3
lods
fisubr
mov
adc
(bad)
jnp
hlt
add
jno
push
aam
mov
ror
fwait
pop
xor
rcl
sti
pop
jg
dec
clc
ret
movs
xchg
or
(bad)
pop
ss
mov
std
lds
and
inc
stos
(bad)
jecxz
adc
jb
xchg
out
(bad)
fbld
into
jecxz
and
cdq
call
sbb
dec
jnp
sub
loop
movs
dec
shr
add
call
ja
sbb
xlat
mov
or
psubq
out
shl
adc
mov
mov
push
jbe
mov
imul
(bad)
das
mov
cld
xchg
jmp
out
or
or
(bad)
sbb
into
lds
adc
jl
sbb
jne
pop
je
adc
iret
dec
add
pop
call
fisub
dec
jae
aam
neg
and
repnz
lock
jmp
pop
mov
adc
xchg
push
sbb
xor
xchg
sbb
out
push
popa
pop
in
mov
in
add
sbb
push
jmp
pusha
inc
cmps
push
or
ja
jmp
dec
pop
xor
ds
push
sahf
or
add
pop
ins
mov
sub
cmp
lock
repz
popa
adc
cmps
xchg
xchg
jge
aad
xchg
xor
lahf
sahf
scas
push
inc
into
in
loope
(bad)
call
aaa
pop
imul
push
xchg
imul
and
out
fistp
rcr
popf
mov
inc
mov
aas
pop
push
fs
push
adc
push
sbb
inc
lods
sar
shl
mov
xlat
sbb
mov
data16
push
push
dec
and
jbe
scas
clc
cmp
mov
fs
xor
pop
or
loop
inc
cmps
cmc
shr
mov
jle
outs
imul
xor
outs
cmp
test
and
imul
adc
lods
pop
arpl
lods
out
jnp
xchg
mov
(bad)
pop
in
jg
pop
xor
outs
pop
mov
cmps
or
cmp
mov
sbb
arpl
inc
adc
xchg
xorps
ror
dec
jl
jge
retf
mov
xor
icebp
fnsetpm(287
add
sub
das
outs
mov
sahf
add
inc
mov
(bad)
cmp
push
test
adc
or
enter
ret
mov
and
mov
or
sar
adc
mov
enter
xchg
jbe
aas
pop
retf
or
sub
push
sbb
loope
cmc
ficomp
mov
push
sbb
sub
(bad)
fs
and
lock
mov
repz
cmp
jecxz
ret
jbe
mov
xchg
sbb
movs
rcl
or
lea
scas
test
pop
shl
jge
daa
mov
sub
xchg
neg
adc
jle
loope
inc
nop
(bad)
jg
repz
enter
jbe
in
ins
xchg
mov
dec
jbe
jmp
xor
shl
jno
inc
not
mov
not
add
icebp
iret
mov
jnp
dec
(bad)
push
out
out
or
push
inc
out
fldcw
scas
jp
into
xchg
lods
pop
addr16
cmp
mov
in
jmp
cmp
lock
jae
clc
scas
mov
pop
leave
loope
nop
mov
cmp
xor
push
jg
aas
lock
jp
or
cmp
call
out
iret
mov
test
xchg
mov
inc
ficomp
push
xor
dec
jo
std
push
loopne
sub
cld
xchg
add
clc
popf
or
add
push
movs
add
rol
mov
sbb
jecxz
pop
jg
test
fistp
adc
mov
pop
div
jns
xchg
cmps
mov
ret
rcl
xchg
pop
in
loope
mov
rcr
addr16
ja
inc
popa
in
scas
jbe
loop
outs
inc
pop
lock
icebp
add
cwde
retf
xor
aaa
mul
and
cwde
and
fnstenv
test
mov
addr16
or
push
jl
mov
fld
push
mov
scas
or
sbb
mov
mov
sbb
(bad)
jmp
inc
test
xchg
(bad)
movs
jno
push
push
or
dec
push
(bad)
and
xor
loopne
sar
inc
mov
ds
cwde
jmp
in
pusha
pushf
mov
sar
xchg
push
repz
add
mov
dec
mov
gs
out
pop
dec
sub
or
or
gs
arpl
lods
fiadd
jns
mov
dec
xchg
jg
dec
adc
sub
inc
and
mov
fucomp
and
js
add
mov
mov
add
jl
cmp
xchg
mov
or
dec
ins
out
jp
sahf
mov
fwait
cmps
push
mov
adc
clc
stos
sbb
gs
xchg
and
shl
xchg
mov
jecxz
xor
push
ss
jb
mov
jg
xor
adc
push
imul
or
xor
xchg
cmp
rcl
adc
div
leave
in
fs
cmc
(bad)
(bad)
loope
out
je
sbb
ins
pop
aas
retf
and
stc
pushf
push
cli
and
aad
cmp
adc
es
fwait
clc
dec
mov
inc
ja
push
mov
jne
ret
mov
clc
sbb
and
lahf
dec
or
cmp
and
add
add
stos
mov
or
dec
jmp
xchg
leave
fsub
mov
xor
pop
aas
shl
ja
int3
pop
call
inc
pop
stc
jo
xor
fist
mov
add
or
lea
jg
xchg
ins
aas
push
ficomp
test
loop
sbb
or
sbb
stc
sbb
dec
inc
dec
xchg
jmp
lahf
pusha
push
loope
mov
movs
test
pop
rcl
pop
adc
mov
ds
(bad)
pop
ja
xor
mov
sub
rol
xor
jl
lock
xacquire
mov
not
pop
pop
push
dec
jle
sbb
adc
xchg
dec
ror
push
xor
adc
mov
add
inc
pushf
adc
ds
xchg
sub
ins
xchg
aad
and
push
movs
fidivr
rol
lahf
fwait
bound
cmc
mov
sti
into
mov
add
push
call
dec
xor
or
fiadd
aad
clc
popf
(bad)
bound
(bad)
test
push
mov
pop
imul
pop
test
sbb
push
push
push
add
lods
mov
stc
cwde
(bad)
fwait
adc
sbb
mov
push
ds
outs
ret
mov
repz
dec
pop
add
dec
fmul
adc
int
and
test
jo
enter
or
sub
jae
sub
push
jg
mov
xchg
push
in
shr
xchg
mov
add
xchg
mov
stos
ucomiss
mov
in
movs
call
or
adc
inc
cmp
aaa
sub
push
out
gs
hlt
xor
jne
inc
cmp
push
aaa
xor
add
pusha
lds
mov
mov
push
or
out
out
rep
mov
xor
jmp
add
sub
adc
jge
pusha
mov
xchg
add
sub
popa
pop
and
sti
loopne
and
stos
repnz
dec
test
pop
adc
add
jmp
adc
dec
cli
cmp
jmp
add
or
push
xchg
push
mov
aad
sub
mov
ins
push
mov
es
push
jmp
inc
cmps
dec
iret
adc
call
jg
inc
push
fild
add
cmp
scas
push
aad
retf
pop
mul
stos
cli
in
lahf
add
mov
adc
fwait
dec
sbb
leave
jne
or
ficom
ret
fisub
out
mov
popf
invd
mov
outs
cdq
mov
mov
adc
push
pusha
(bad)
cwde
addr16
mov
push
add
or
push
sbb
jnp
or
pushf
xor
daa
stos
movs
sub
gs
rol
scas
iret
and
push
mov
pusha
xor
jecxz
imul
lods
jbe
sbb
pop
aaa
mov
cmp
jl
test
add
xchg
add
cli
cmps
pop
jnp
dec
in
call
jg
sub
or
mov
inc
ins
jo
(bad)
out
lock
push
movs
int
aas
add
mov
mov
imul
add
int3
fstp
(bad)
ins
xchg
push
fld
clc
iret
mov
push
dec
mov
rcr
inc
mul
test
pop
xor
mov
jmp
movs
xor
xchg
rol
sbb
arpl
enter
xchg
mov
add
inc
xor
dec
mov
int3
add
mov
scas
pop
mov
ficom
fsub
sbb
loop
in
iret
xchg
daa
mov
daa
clc
add
adc
add
test
(bad)
dec
cmps
mov
mov
sbb
xchg
lahf
pop
mov
stos
mov
sub
mov
hlt
popf
and
hlt
(bad)
repz
jbe
pop
add
pop
adc
xor
loopne
fdiv
pusha
aad
pop
jo
sbb
jns
aaa
pushf
int
pop
push
cmps
jecxz
in
not
and
add
shl
sbb
jbe
sub
inc
ret
je
fisttp
sbb
pop
ret
mov
xchg
mov
xor
jns
nop
sub
or
call
data16
jno
je
mov
ret
jbe
fisubr
jo
inc
add
mov
pop
div
rcl
call
fisttp
daa
retf
push
ja
lods
mov
pop
adc
mov
sub
or
pop
cwde
push
pushf
add
xchg
in
cmp
retf
retf
imul
jne
add
int
iret
stc
add
mov
ret
arpl
inc
lods
or
mov
daa
adc
jno
mov
cwde
mov
test
mov
jb
jnp
add
push
xor
or
mov
(bad)
out
in
fdivr
dec
mov
lods
std
(bad)
cmc
test
jmp
test
add
jae
xor
ret
in
sbb
loop
pop
lods
jmp
cmps
rcl
cmp
sbb
sub
jae
sbb
pushf
pop
lds
mov
cmp
or
lock
pop
and
adc
push
cmp
ret
mov
addr16
push
sub
iret
aam
cmps
shr
jae
ss
cmp
int
not
popa
lahf
(bad)
mov
lods
je
mov
shl
push
fdivrp
cmp
push
xchg
mov
test
add
xchg
iret
and
dec
mul
xchg
mov
or
pop
outs
pop
push
int
stos
cmp
fist
movs
mov
xchg
xchg
imul
sub
inc
cmp
jno
idiv
shl
xor
shl
rcr
test
addr16
scas
or
callw
nop
push
fidivr
xchg
(bad)
pop
push
sub
add
popf
push
ficomp
test
out
(bad)
and
fwait
xchg
mov
gs
add
dec
cs
sub
cs
mov
lds
push
cmp
xor
push
fcomp
gs
outs
mov
pop
pop
sbb
loop
or
iret
inc
(bad)
pop
popf
mov
dec
push
mov
cmps
adc
mov
pusha
push
stc
(bad)
fstp
dec
push
dec
fstp
mov
lahf
or
and
mov
imul
cmps
int3
call
or
punpcklbw
in
sub
and
pop
lea
inc
neg
jp
sub
mov
icebp
sub
jnp
dec
fidivr
lds
mov
daa
fstp
adc
f2xm1
lods
push
test
data16
fstp
ret
push
adc
enter
mov
xor
jl
(bad)
dec
mov
fisttp
popf
sbb
mov
out
mov
les
xor
sub
mov
mov
fwait
inc
and
mov
cmc
push
pop
bound
js
xchg
pop
pop
sub
add
inc
ret
test
jp
sub
pop
cli
mov
test
xor
enter
inc
and
mov
jno
shr
ret
jp
and
pop
xor
push
pushf
sbb
out
rol
or
enter
mov
mov
inc
dec
loop
cmps
loope
imul
sbb
or
sub
adc
add
lods
cmps
adc
out
add
xchg
sbb
out
loopne
sub
sbb
icebp
into
ins
xchg
xchg
and
gs
jl
lds
push
fwait
mov
(bad)
mov
jecxz
scas
sub
out
push
or
cmc
imul
jmp
pop
loopne
repnz
mov
add
add
push
popa
adc
mov
cmp
dec
cmp
mov
mov
ja
xor
dec
xchg
cwde
dec
inc
ret
add
popa
jg
pop
and
mov
div
xchg
ret
or
clc
cs
mov
popf
pop
popa
xchg
jl
mov
mov
fnstenv
div
repnz
dec
shl
mov
into
mov
call
dec
xchg
aad
lods
ficom
sub
fdiv
outs
pop
stos
or
mov
jno
push
test
dec
push
popf
mov
stos
aam
inc
dec
out
and
pop
clc
push
jg
xor
xor
xchg
ja
pusha
(bad)
dec
lock
addr16
xor
repz
or
push
dec
pop
inc
test
xchg
ror
pop
(bad)
ds
fmul
dec
pop
push
aaa
js
enter
in
or
int
mov
rol
hlt
add
mov
ja
out
sti
mov
pushf
or
mov
mov
jne
xchg
clc
mov
mov
repnz
inc
mov
jo
sub
(bad)
push
(bad)
rep
jo
push
and
mov
std
adc
mov
loopne
jmp
shl
inc
sbb
sti
ret
jge
lods
retf
or
ficom
pop
xchg
mov
add
pop
mov
xor
(bad)
sub
push
pop
xchg
dec
pop
and
in
shl
js
pop
addr16
ds
mov
push
fist
cmp
cmp
push
xor
in
push
in
or
and
push
je
jg
xchg
inc
inc
and
sbb
ins
inc
cli
in
loopne
add
xor
ins
aam
push
inc
mov
add
mov
dec
push
loop
and
popf
(bad)
xlat
mov
jge
popa
add
inc
sahf
adc
mov
or
daa
mov
enter
sar
icebp
xor
mov
aad
inc
ss
out
dec
loope
xchg
sbb
mov
inc
mov
loop
icebp
xlat
dec
sahf
loop
cwde
mov
rol
test
sbb
cdq
cmps
pop
lods
nop
inc
jnp
ret
inc
mov
(bad)
adc
movs
or
pop
shl
cmp
adc
or
xchg
ffree
add
xchg
mov
mov
adc
dec
sbb
sub
lds
outs
mov
or
(bad)
ret
(bad)
adc
sar
cdq
in
mov
jae
jmp
aad
cmp
xor
jns
pop
jg
or
push
std
mov
cmp
(bad)
cmps
cmp
inc
jg
sbb
xchg
xlat
pop
push
xchg
mov
out
add
aad
inc
sbb
outs
je
(bad)
jmp
adc
pop
pop
dec
aad
dec
shl
data16
jmp
xor
and
adc
jle
fbstp
cmp
mov
inc
(bad)
jl
lea
adc
jbe
test
lahf
neg
push
cld
int
cmp
cmp
inc
push
or
outs
imul
je
push
in
mov
in
cld
add
ja
sbb
scas
fcmovne
enter
pop
rcr
dec
retf
scas
lds
sar
mov
imul
cmp
movs
add
sub
ins
cmp
xchg
lea
rcr
in
and
jns
xor
mov
imul
shl
imul
or
and
jle
sbb
cmps
shl
xor
mov
add
gs
lods
sbb
jge
in
sbb
nop
sub
and
or
mov
inc
mov
inc
cmp
cwde
es
std
mov
inc
in
loope
sbb
int3
or
and
sbb
inc
sbb
stos
cmp
imul
sbb
fdivp
scas
pop
push
dec
xchg
pop
(bad)
(bad)
(bad)
cmp
pop
retf
loope
cwde
cs
out
cmp
inc
pusha
sbb
cdq
cmp
sbb
rcl
test
inc
and
mov
xchg
mov
xchg
call
cmp
cmc
push
inc
xchg
sbb
cmp
jmp
out
daa
mov
adc
mov
int3
add
pushf
sbb
mov
fmul
pshufw
lock
ds
(bad)
and
aaa
enter
sar
pop
mov
add
pop
mov
in
leave
jmp
adc
std
adc
push
cmc
cli
movs
cmp
cmp
cmp
(bad)
retf
cld
mov
(bad)
js
xchg
cmc
xor
movs
scas
sbb
mov
es
cmp
adc
mov
cs
ins
call
push
xor
stc
adc
shl
jmp
mov
sub
and
aaa
push
in
sub
jmp
test
icebp
stos
sbb
pop
in
cdq
hlt
jns
call
stos
ins
adc
mov
jbe
xor
out
jmp
fcom
fnsave
ins
fs
and
sbb
pop
scas
adc
in
sar
out
cmp
test
lods
ss
or
push
test
mov
adc
adc
and
sub
(bad)
mov
mov
scas
cmp
add
shl
jmp
cmp
push
push
inc
mov
dec
sub
jno
js
aam
cdq
push
shr
fidiv
retf
rol
xchg
xchg
xchg
mov
fwait
mov
xor
mov
xchg
in
inc
xor
pushf
scas
rcl
repz
pop
test
push
sbb
mov
mov
sahf
mov
imul
int
shr
daa
jmp
outs
sahf
jae
xchg
xchg
repz
pop
fwait
nop
pop
mov
int
pop
sti
sbb
jns
xchg
mov
or
es
xchg
xchg
int
pop
mov
(bad)
pop
and
lods
sbb
xlat
jle
jle
into
mov
inc
sbb
imul
cmc
push
call
push
mov
mov
ins
(bad)
loopne
inc
push
pusha
cmp
mov
jl
push
test
out
lea
pop
push
jg
(bad)
inc
sub
inc
inc
pop
sbb
and
xor
test
dec
xor
or
adc
enter
pop
out
cmp
jo
lea
(bad)
outs
sbb
sub
adc
test
test
mov
jle
mov
in
adc
in
popa
mov
cmp
push
(bad)
fidiv
das
int
fmul
mov
mov
addr16
(bad)
jge
jg
in
repz
push
jle
mov
jge
xlat
in
ins
adc
fsub
add
repnz
mov
cdq
enter
lock
jmp
stos
cmp
xor
mov
pushf
hlt
pop
retf
xchg
sbb
out
add
push
jbe
aam
jle
pop
or
icebp
mov
in
mov
dec
push
es
sbb
popf
fimul
mov
(bad)
push
adc
leave
inc
mov
or
into
ret
lods
loope
ja
jle
repnz
scas
mov
mov
mov
sub
mov
cmp
or
mov
outs
stos
push
enter
test
fisub
leave
fcomp
hlt
lods
nop
jge
jb
and
mov
push
mov
std
inc
jp
ins
mov
jl
(bad)
add
lock
loopne
pop
aam
popf
jns
out
push
out
sbb
mov
adc
ins
fcom
cmp
leave
xchg
dec
xor
psubusb
xchg
adc
fimul
pop
(bad)
mov
adc
push
jno
clc
aas
xchg
(bad)
inc
lds
xchg
enter
add
(bad)
lds
stos
ret
xchg
xor
mov
fadd
inc
pushf
dec
nop
and
out
xchg
pop
sub
ins
mov
retf
dec
sbb
out
dec
dec
in
sahf
mov
lea
push
or
dec
sub
adc
iret
inc
pop
push
cmc
nop
jb
push
push
xor
in
nop
xchg
mov
sbb
inc
xchg
test
movs
adc
leave
ret
push
scas
or
fs
jl
xor
push
xor
sub
cmp
getsec
ret
lea
mov
mov
test
inc
movs
jbe
push
cwde
jns
xchg
neg
cdq
cmp
iret
iret
ss
(bad)
iret
pop
popa
push
into
add
shl
mov
ins
shl
push
inc
adc
xchg
ds
bound
cdq
repz
push
cmp
mov
fs
inc
xor
loope
test
in
add
mov
dec
sub
inc
dec
jle
cwde
xchg
into
scas
mov
out
pop
add
scas
dec
addr16
call
inc
cdq
sbb
xchg
cmp
mov
and
(bad)
rcl
pop
nop
int3
lock
(bad)
in
test
inc
xchg
push
cld
lods
mov
xlat
pop
jge
inc
mov
fiadd
retf
jb
push
mov
inc
std
(bad)
jmp
mov
sahf
cmps
dec
push
test
xchg
mov
adc
mov
popa
sbb
cs
jl
icebp
arpl
fadd
xor
cs
inc
jp
ret
mov
xor
cmp
add
psubw
add
add
aas
mov
lds
xor
std
or
in
sbb
mov
shr
mov
shl
mov
data16
fs
ret
mov
mov
rcl
push
sub
aam
repnz
je
lock
cdq
mov
and
shr
jp
(bad)
push
jecxz
push
cdq
out
lock
jmp
or
inc
ins
sub
(bad)
push
or
adc
push
sar
and
push
cs
push
fst
aas
jb
mov
pushf
popa
jl
xchg
xchg
xchg
loop
push
retf
sbb
dec
jno
push
enter
sub
mov
cs
xchg
xor
(bad)
xor
inc
ja
lock
push
push
or
xchg
repnz
xchg
cmp
inc
cmp
mov
(bad)
call
mov
mov
xor
inc
jmp
rcr
push
xchg
div
cmps
test
dec
and
shl
test
in
dec
or
or
inc
xchg
dec
jae
and
add
xchg
dec
(bad)
pop
pop
xor
cmp
arpl
adc
repz
mov
mov
scas
mov
aad
and
xchg
mov
and
cld
int
add
icebp
int
lahf
pop
es
fucomp
mov
imul
fs
push
iret
repnz
fmul
jns
pop
and
push
lahf
pusha
pushf
sub
pop
mov
xchg
in
dec
dec
xchg
jmp
outs
(bad)
dec
out
jmp
cli
mov
xlat
into
retf
nop
imul
idiv
xlat
push
mov
sbb
xchg
rcr
imul
shl
or
es
out
jno
add
or
inc
(bad)
loope
jmp
popa
cmp
mov
sbb
cmp
dec
daa
cmc
mov
xchg
push
loope
in
xchg
inc
(bad)
adc
cli
imul
stos
loope
dec
stos
bound
push
adc
ss
jmp
xor
xchg
adc
mov
enter
(bad)
xchg
sbb
mov
aad
xchg
sbb
pop
es
jle
inc
aas
loop
fcmove
cld
js
les
push
es
mov
mov
jne
inc
jns
shl
push
xor
fs
cmp
xchg
mov
int3
inc
xchg
push
mov
mov
xchg
pusha
test
imul
jmp
jg
adc
xchg
pop
sub
cmps
imul
mov
lock
cdq
call
xchg
ja
push
sbb
mov
mov
xchg
shl
push
jg
mov
dec
popa
fdiv
int3
dec
rcl
inc
call
adc
sbb
sbb
adc
xchg
cwde
mov
mov
das
lahf
bound
not
ds
ret
mov
cwde
and
jge
in
xchg
pop
mov
push
cmc
push
inc
or
mov
enter
cmp
shl
xchg
pop
leave
sbb
shl
inc
ss
sub
mov
bound
and
cmps
test
inc
fistp
xor
xchg
outs
xchg
and
call
sbb
popa
dec
jno
movs
or
mov
dec
sbb
add
push
mov
lock
test
stos
loop
mov
(bad)
cmc
js
sti
xor
xor
push
mov
adc
out
(bad)
ds
stc
stos
(bad)
(bad)
movs
adc
mov
and
fild
ins
xor
inc
cmp
pop
jl
push
scas
sbb
rol
sar
cli
out
mov
push
mov
fist
(bad)
in
stc
shl
push
ds
or
and
sti
test
shl
inc
ds
jo
shl
mov
shl
pop
push
xor
aaa
jl
lods
xlat
cmp
sub
jp
inc
mov
scas
cmp
pop
jns
in
jp
xchg
add
das
fwait
mov
mov
sub
shl
mov
and
loopne
mov
add
adc
dec
add
xor
retf
test
and
sbb
mov
push
je
dec
(bad)
shl
adc
dec
sub
push
hlt
imul
pop
inc
icebp
cld
in
psrlw
or
push
addr16
hlt
jne
adc
inc
pop
xor
fisttp
xor
dec
fwait
inc
retf
jmp
jno
mov
enter
dec
scas
ds
icebp
les
lea
data16
sti
and
aad
ficom
jae
mov
inc
mov
iret
xchg
pop
jp
mov
xor
mov
and
cmp
call
xor
out
push
jo
push
bound
cmp
movs
adc
push
lds
inc
popf
sub
push
test
cmp
mov
rcl
mov
mov
dec
pop
das
cli
movs
push
xor
push
cmps
mov
cli
xor
enter
test
sub
dec
mov
rcr
int3
xchg
std
dec
pushf
ja
retf
cmps
and
sbb
sbb
leave
mul
outs
pop
addr16
das
add
mov
push
(bad)
mov
jmp
test
xor
mov
call
std
mov
or
or
les
sub
inc
sub
imul
shl
push
inc
push
cmp
sub
lahf
mov
inc
mov
es
cmp
jmp
push
mov
dec
push
push
jbe
je
data16
cdq
add
jge
sbb
dec
cmps
xor
aad
sbb
sbb
xchg
pop
sar
cwde
mov
out
or
inc
mov
or
sub
ror
outs
call
rcl
or
fcomi
pop
inc
aaa
jns
ins
pop
xor
xchg
cmp
mov
pop
shl
sub
push
sub
test
cmp
jl
in
leavew
mov
ror
push
dec
pop
aaa
nop
test
add
jb
scas
jb
clc
sahf
addr16
cmp
retf
pop
push
ja
jae
push
outs
xchg
retf
retf
mov
xor
cmp
sbb
cmp
aam
pop
adc
popf
lds
jecxz
call
inc
aaa
cmp
dec
mov
mov
xor
stc
pop
repz
adc
mov
mov
mov
cmp
or
pop
shr
jne
pop
fs
es
ret
fild
xchg
inc
and
cvttps2pi
retf
cmps
sbb
pushf
jnp
sub
out
and
rol
leave
xchg
fistp
test
cmp
xchg
sbb
stos
in
adc
jge
adc
cli
test
je
cdq
sar
cli
add
scas
lahf
mov
dec
sbb
pop
push
sti
cmps
lahf
inc
adc
cmps
and
jle
jl
enter
inc
aad
in
xlat
sub
sub
mov
cmp
repnz
pause
xchg
retf
jge
push
ror
and
into
mov
pop
mov
in
imul
add
or
pop
pusha
pusha
or
push
or
lock
ja
and
push
(bad)
push
fistp
repz
lods
retf
imul
clc
nop
push
fcomp
push
nop
and
js
cmps
dec
push
mov
imul
mov
xchg
loopne
dec
ds
ins
pavgw
and
sbb
and
push
pop
call
in
mov
jg
cmp
mov
push
inc
loop
into
adc
xor
adc
xchg
int3
out
pop
leave
mov
loop
test
movs
jo
stos
mov
inc
xor
(bad)
pop
out
gs
(bad)
rcl
jmp
or
and
lahf
bound
movs
es
mov
jbe
sbb
adc
out
dec
int
rcr
push
jbe
pop
rol
mov
retf
fs
(bad)
mov
sub
ds
jae
push
out
jmp
adc
lods
mov
pop
jo
cmc
addr16
xchg
je
pop
pop
xchg
push
(bad)
int3
into
and
nop
lds
and
mov
lea
sahf
inc
xor
sbb
mov
mov
loop
inc
pop
jns
jae
inc
in
xor
push
jecxz
push
popf
dec
xor
mov
add
sbb
xor
aam
fsubr
les
and
mov
dec
mov
xor
mov
push
xchg
pushf
dec
rol
lahf
pop
and
test
inc
int
pop
retf
mov
jnp
(bad)
xor
cmc
jae
cwde
push
xor
clc
ss
add
pushf
les
test
(bad)
dec
add
hlt
or
outs
push
retf
push
(bad)
jbe
and
mov
or
outs
rcl
(bad)
sti
mov
dec
inc
adc
cwde
inc
iret
push
push
pop
stc
and
pop
pop
js
xchg
lds
enter
cmps
lods
xchg
jmp
out
icebp
or
cld
ss
out
imul
sahf
pop
stos
pop
shr
push
ret
mov
or
xlat
jl
mov
out
dec
pop
pop
cmps
adc
or
imul
shl
int3
and
and
fsubr
cmp
sbb
lahf
mov
pop
push
xor
cli
push
mov
repz
in
jbe
xor
mov
dec
pop
mov
xor
push
outs
mov
sbb
(bad)
jb
repz
sti
xchg
movs
repnz
adc
cs
push
sub
jmp
adc
xchg
cmp
xchg
fs
pop
rcr
push
les
cmp
sub
cmps
int
cmp
imul
call
add
rol
mov
inc
xor
cmp
add
and
cmp
jmp
repnz
loop
mov
pop
test
mov
inc
and
je
push
jnp
loopne
push
adc
data16
pop
ins
mov
or
mov
xor
mov
push
mov
gs
inc
ret
or
nop
cwde
xchg
xor
jecxz
pop
imul
dec
rcl
pop
popf
xchg
fsub
jle
cmp
imul
int3
and
inc
adc
xchg
test
add
(bad)
lea
js
dec
fisub
scas
xor
outs
or
leave
gs
sti
jg
sub
test
inc
inc
jmp
mov
ss
push
xlat
sub
and
sub
push
cdq
add
xchg
fadd
popa
and
fsubr
call
push
cwde
add
or
cmps
cmp
in
(bad)
out
out
dec
add
scas
xor
fld
xchg
xchg
repnz
rol
(bad)
ror
adc
leave
dec
sbb
jno
in
or
push
idiv
pop
inc
jbe
sub
cs
and
shl
cdq
inc
leave
call
and
movs
jp
pusha
jl
inc
push
ja
mov
(bad)
cld
or
and
stc
xchg
hlt
add
das
jbe
pop
sbb
gs
mov
push
stos
test
jp
cmp
imul
and
test
(bad)
mov
daa
les
sbb
pop
mov
mov
jl
mov
dec
(bad)
leave
adc
js
call
or
jae
cmp
pop
jmp
popa
jge
xchg
xor
or
cmp
pop
or
jl
in
xor
sahf
and
bound
aad
cdq
hlt
xor
sub
xor
dec
lea
pop
jnp
and
sub
sbb
lea
jl
sbb
outs
dec
xor
in
ret
xor
loopne
push
cld
jb
int
pushf
dec
mov
push
and
popa
xor
jl
outs
out
xor
js
(bad)
popf
call
outs
shr
loop
xchg
xor
je
cdq
cmp
adc
cmp
jge
jmp
movs
adc
mov
dec
jmp
fisub
sar
pop
loop
call
push
mov
mov
adc
jp
cdq
aaa
mov
aas
test
aam
sahf
jne
xchg
ret
lahf
or
cmps
push
jg
inc
call
scas
push
sbb
call
dec
fidiv
in
pusha
push
dec
es
mov
sub
pusha
push
mov
and
lea
lahf
xchg
mov
mov
jge
pop
or
or
push
mov
(bad)
call
jge
or
cld
pop
inc
sbb
test
add
xchg
sahf
adc
cmp
dec
add
jb
mov
mov
fwait
imul
cmc
ficomp
pop
lods
mov
sti
add
rcl
test
mov
dec
cdq
out
test
sbb
push
sbb
mov
sahf
xlat
adc
push
add
pop
test
or
nop
xchg
call
dec
mov
sbb
sbb
jbe
jp
pop
and
daa
outs
xchg
push
mov
js
fadd
mov
sbb
xlat
shl
push
mov
pushf
or
cmp
mov
pop
sub
mov
add
jmp
dec
jecxz
dec
ds
jl
cli
out
int
dec
add
cmp
clc
pop
int3
add
sbb
je
xchg
inc
je
inc
pop
ret
dec
sbb
fdiv
xor
inc
mov
jg
inc
jmp
adc
or
xor
gs
retf
or
mov
pop
into
or
and
dec
inc
xchg
les
cmp
popa
movs
push
cmp
pop
int3
fldenv
dec
mov
mov
mov
int3
dec
or
add
inc
mov
dec
into
sbb
dec
cld
mov
(bad)
call
mov
shl
and
test
cmp
mov
pusha
inc
hlt
inc
dec
jmp
cmp
shl
cmp
je
push
lods
and
(bad)
xor
cmps
mov
inc
xchg
mov
pop
jg
push
jne
add
add
add
jle
outs
jmp
in
loop
inc
in
aad
sbb
mov
sbb
aaa
pop
and
aas
pop
pop
cli
jnp
inc
cmp
int
push
sub
mov
sbb
cs
push
jge
clc
inc
xchg
sub
clc
mov
out
dec
(bad)
imul
xor
adc
loope
or
or
test
push
add
inc
jnp
popa
sbb
jecxz
fbstp
mov
repnz
sbb
cwde
std
adc
test
jns
cld
or
sbb
out
scas
inc
inc
or
out
mov
dec
ret
jne
push
dec
cli
add
adc
aaa
jp
mov
arpl
scas
jmp
call
sahf
push
cld
fwait
out
mov
shl
nop
fadd
test
push
aad
sub
(bad)
in
or
int
ret
fs
xor
or
or
setle
popa
xchg
jmp
sbb
add
test
call
fcomp
out
sti
mov
icebp
(bad)
gs
loopne
dec
jmp
call
push
cmp
pop
cmp
ror
mov
mov
inc
add
mov
jg
dec
dec
hlt
push
imul
mov
test
out
push
int
pop
cmp
test
mov
sbb
data16
cmp
mov
or
jp
add
mov
push
mov
outs
out
mov
aas
push
push
mov
outs
fsubp
jmp
mov
push
bound
inc
mov
movs
in
xchg
and
xor
js
sub
sbb
mov
jo
adc
dec
je
push
push
pop
pop
out
cwde
push
sbb
pop
pop
test
mov
cmp
or
call
mov
ret
shr
sub
call
xor
adc
ror
add
xor
pop
mov
add
pusha
(bad)
sub
dec
xchg
ins
(bad)
cmp
shl
iret
xchg
sbb
adc
or
test
xchg
or
adc
mov
jae
xchg
pop
jg
pop
xor
sbb
add
or
xchg
push
jge
jecxz
push
gs
sub
add
push
lahf
xchg
push
adc
(bad)
fdiv
mov
mov
xchg
arpl
bound
dec
push
test
out
mov
hlt
into
mov
mov
sub
in
hlt
push
cmp
pop
cmps
jne
or
sbb
cmp
push
adc
dec
fdivr
jecxz
cli
jl
mov
(bad)
lods
sahf
ret
addr16
aas
inc
fadd
dec
outs
imul
popf
mov
movs
and
add
dec
jecxz
fisub
fcomp
aad
outs
in
dec
scas
dec
in
sbb
aas
adc
cmp
les
das
xchg
es
mov
adc
(bad)
retf
jne
hlt
sbb
pusha
pop
xchg
shl
not
pop
push
push
or
cmp
fs
xor
leave
cmp
sbb
dec
or
popf
daa
xor
mov
xchg
add
aaa
cmp
or
jne
inc
fimul
std
loop
leave
ror
in
adc
mov
mov
jb
mov
call
ss
bound
xor
xchg
aaa
add
fmul
pop
fistp
fs
adc
arpl
js
pusha
popa
and
or
mov
cmp
out
adc
add
sub
mov
test
mov
cmp
push
jbe
and
inc
or
addr16
gs
ss
mov
jl
test
sub
mul
retf
fstp
int
mov
sar
mov
xlat
sbb
call
or
aad
out
lods
sbb
repnz
pop
push
add
mov
push
jmp
adc
lahf
cmps
test
or
lods
cli
popf
push
xchg
push
inc
mov
bound
(bad)
fisubr
adc
movs
cdq
test
shr
ret
mov
mov
or
add
push
jne
dec
xchg
stos
sub
sbb
pop
dec
adc
sti
test
stos
sti
xor
dec
cmp
mov
mov
popa
inc
fwait
pop
pusha
inc
retf
fmul
sub
add
push
push
adc
shl
mov
(bad)
fcmovnu
push
xchg
je
push
xor
std
sar
sub
rcl
pop
jge
pop
sub
dec
dec
mov
movs
adc
dec
(bad)
jecxz
lea
(bad)
nop
inc
test
xchg
loop
aad
adc
data16
nop
sbb
mov
mov
pop
loop
sub
mov
mov
(bad)
sub
fwait
mov
outs
sub
std
loopne
sbb
std
or
jno
xchg
jle
stc
xchg
cmp
xchg
fld
xlat
into
push
jg
sub
out
push
jne
xchg
push
retf
mov
push
popa
out
mov
fist
add
mov
mov
neg
das
call
aad
out
ficomp
jmp
fcmove
xor
(bad)
mov
xor
add
pop
xor
mov
dec
xlat
ds
int
mov
cmc
xor
nop
mov
fmul
lds
stos
repnz
xlat
inc
js
mov
stos
jo
arpl
pop
cmp
xor
mov
cmp
xor
xchg
mov
test
stos
ins
adc
cmps
aad
xlat
(bad)
xchg
inc
mov
(bad)
push
xor
push
xchg
test
inc
inc
pop
push
mov
xor
cmp
mov
ror
and
mov
sub
inc
aaa
cli
mov
sub
(bad)
fistp
sub
int3
sbb
mov
xor
pop
pop
ficom
inc
hlt
mov
in
call
sbb
and
cld
das
hlt
stos
push
mov
(bad)
cld
movs
pop
fistp
mov
test
add
imul
jmp
xor
push
cmp
lahf
mov
add
mov
out
inc
cmp
gs
out
xchg
and
test
and
ins
push
into
xchg
dec
out
rol
fsubr
xchg
cmc
int3
fwait
sbb
hlt
scas
adc
fucomip
jno
cmps
(bad)
push
jmp
and
mov
jno
movs
adc
mov
inc
xor
sti
leave
in
hlt
bound
mov
out
xor
jle
jle
pop
push
clc
fwait
rol
bound
(bad)
cld
xchg
cld
imul
xchg
sahf
dec
push
xor
ins
scas
loop
ds
adc
sub
into
call
(bad)
dec
push
je
pop
inc
repnz
push
jo
xlat
jns
jnp
mov
xor
jno
adc
shl
in
bound
data16
pop
or
cmp
ffree
gs
sti
pusha
sbb
into
mov
mov
dec
div
and
cmp
pusha
mov
in
cmp
push
lock
addr16
rcl
push
out
(bad)
shl
xchg
cmps
mov
push
out
not
push
jmp
call
cmps
fnstenv
popf
and
inc
sub
xchg
mov
and
mov
cmps
jg
or
adc
lds
inc
adc
push
test
adc
mov
leave
pop
cvtps2pd
fwait
inc
movs
and
aas
add
cmp
inc
jns
xchg
stos
sar
xor
jmp
mov
in
cli
cdq
sbb
sub
popf
int
push
fild
rol
cmps
push
clc
or
pop
and
loopne
sbb
idiv
test
retf
pop
mov
jmp
mov
xor
cmp
dec
lds
out
xchg
je
cmp
imul
jnp
mov
sbb
sub
push
inc
xlat
adc
jp
test
inc
and
mov
nop
add
cwde
imul
push
retf
bnd
xchg
call
test
push
mov
jo
pop
inc
add
add
(bad)
test
add
dec
xor
or
adc
mov
dec
test
inc
xor
jmp
rcr
mov
sbb
push
(bad)
daa
xchg
retf
lods
push
test
jecxz
fsubr
xlat
add
adc
leave
mov
lds
mov
std
push
(bad)
ins
test
push
xchg
scas
int3
and
inc
add
repz
stos
sahf
icebp
mov
xchg
fld
push
xchg
out
pop
fist
and
xor
push
aam
mov
adc
sub
xlat
and
or
mov
lahf
rol
clc
mov
je
ins
cwde
adc
cdq
scas
add
lods
push
mov
pop
arpl
out
pop
adc
push
mov
xchg
(bad)
retf
repz
inc
push
xor
cwde
mov
xchg
pop
mov
push
cmp
pop
fcomp
jno
pop
call
mov
adc
ja
cmp
repz
pop
inc
jg
outs
pop
cmc
lods
sbb
sub
or
mov
mov
(bad)
cli
dec
add
in
in
cmps
add
xor
mov
adc
outs
push
ja
stos
or
add
dec
push
scas
cmp
outs
pop
mov
ins
push
cmps
or
(bad)
inc
(bad)
cld
les
enter
cmp
jns
push
enter
xor
add
inc
jno
int3
cli
mov
stos
fst
icebp
bound
cld
push
lahf
fimul
mov
mov
shl
out
mov
call
in
pop
jmp
cdq
rol
fdiv
rcr
fsubr
sbb
sbb
sub
cmp
retf
sbb
dec
clc
int3
mov
pop
and
in
sub
jo
pop
les
sbb
push
xor
je
jmp
aad
push
sub
inc
sub
cmp
icebp
or
inc
or
mov
(bad)
out
mov
and
fld
pusha
in
out
in
cmc
in
dec
lea
add
jge
inc
outs
call
fst
int
stos
in
jle
cmp
jbe
sahf
or
leave
imul
cli
sbb
mov
ret
mov
fsub
dec
je
lods
sbb
and
aad
pop
and
cmp
push
push
jnp
cli
nop
mov
inc
aad
add
xor
stos
mov
stos
inc
pushf
jecxz
retf
inc
xchg
mov
push
scas
xlat
adc
mov
daa
ss
xchg
mov
or
fild
jecxz
adc
add
jno
pop
dec
adc
fst
mov
pop
inc
or
sbb
mov
xchg
mov
jne
popf
outs
ret
add
add
lock
dec
cli
adc
xor
xchg
add
jbe
mov
fmul
ret
push
adc
or
inc
pop
and
push
mov
sub
mov
or
mov
jo
fwait
pop
dec
sti
xchg
xlat
out
jmp
cs
je
aas
mov
ins
outs
mov
ins
or
pop
jnp
pusha
jo
fnstcw
fisubr
mov
push
inc
mov
dec
loop
sbb
(bad)
mov
loop
cmp
inc
int
inc
xor
movs
lahf
rcr
jo
dec
xchg
cmp
inc
push
fs
test
mov
push
mov
mov
loopne
leave
add
push
xchg
sub
sub
sub
mov
gs
int
inc
loop
inc
sbb
imul
outs
ss
jecxz
add
(bad)
push
ins
stos
daa
and
mov
cmp
hlt
sub
lock
pop
cmp
and
test
repz
in
mov
pop
jbe
(bad)
xor
cli
repz
mov
out
pop
std
inc
mov
dec
mov
ins
add
lds
mov
sub
sbb
cli
dec
repz
mov
cmp
mov
xchg
sti
and
outs
stc
(bad)
cmp
fidivr
mov
sbb
and
out
adc
mov
sub
cmc
mul
fidiv
ins
mov
jle
sub
cld
push
mov
cmps
dec
mov
cmp
and
sahf
ret
mov
neg
adc
jnp
jge
xor
imul
test
pushf
and
adc
pop
or
(bad)
and
stos
sub
loop
(bad)
rcr
push
jle
jno
enter
cdq
cwde
int
push
imul
pop
clc
les
rol
stos
push
shr
scas
and
xor
pop
xchg
push
(bad)
mov
ret
test
ret
xor
repz
aas
popa
mov
sbb
xchg
idiv
cmps
sub
xchg
movs
mov
cs
mov
in
bound
push
add
clc
daa
adc
push
push
aaa
fs
cmps
fsub
xor
and
jp
cwde
test
mov
scas
cwde
dec
inc
xchg
lahf
lea
push
ins
xor
daa
add
pop
xchg
sub
inc
test
(bad)
and
fdiv
out
ret
dec
popf
inc
fmul
dec
sbb
add
jle
mov
iret
loope
leave
sub
sti
cld
push
pop
and
cmc
lods
pop
out
ret
dec
push
lahf
data16
inc
xor
jmp
inc
jo
in
mov
retf
add
fist
(bad)
adc
out
test
jb
ret
push
and
fs
imul
inc
mov
clc
lods
xor
push
mov
cld
(bad)
mov
cld
scas
adc
shr
loopne
xor
aas
outs
push
aam
jg
xchg
jns
cli
and
inc
cdq
mov
and
leave
dec
xchg
and
pop
mov
xchg
mov
mov
inc
cwde
push
mov
pusha
daa
icebp
xchg
call
aaa
mov
cmp
jae
add
es
adc
ror
clc
or
data16
jle
xor
lea
sahf
fidiv
cmp
sbb
cwde
jae
retf
loope
enter
(bad)
mov
out
pushf
daa
mov
ret
shr
shl
push
iret
movs
std
je
dec
sub
pop
retf
sub
push
outs
cdq
dec
test
mov
inc
add
mov
lea
adc
cmp
pop
adc
sub
lods
in
xor
mov
(bad)
cmc
std
sub
and
mov
jmp
mov
sub
js
in
aaa
lock
or
outs
sbb
lods
jo
test
jl
inc
fisttp
leave
xor
in
loope
sbb
jmp
retf
popf
std
or
dec
lea
push
ins
push
js
mov
mov
in
inc
sub
sub
call
mov
div
mov
push
inc
ins
loopne
call
sbb
sub
and
mov
(bad)
mov
icebp
xchg
lods
sub
pop
hlt
xor
jmp
out
sbb
mov
sbb
fcom
sbb
fisttp
(bad)
jb
pop
or
aam
leave
and
dec
cmps
sbb
cdq
or
bound
add
cmp
xchg
mov
pop
dec
test
loope
adc
jno
dec
add
rcr
jmp
lahf
xchg
std
ret
mov
aad
pop
sbb
cmp
adc
mov
adc
stc
mov
out
(bad)
scas
xchg
mov
push
xor
xchg
mov
ror
add
jp
out
push
jecxz
shl
shl
loope
jle
sub
mov
pop
xchg
mov
loope
jecxz
test
std
in
movs
sbb
jne
inc
outs
loop
jns
popa
dec
pop
xchg
outs
jno
mov
shl
adc
fcmovnu
pop
jp
mov
int3
and
and
sahf
jge
in
push
or
arpl
mov
dec
lds
add
dec
lds
fwait
push
adc
pushf
sub
and
pop
fstp
xor
push
cld
and
xor
les
mov
js
imul
fld
test
sub
(bad)
adc
xchg
add
pop
jb
out
clc
scas
pop
jo
out
pop
dec
inc
popa
out
sbb
inc
add
pop
sbb
and
sub
push
sub
xchg
jbe
and
stos
(bad)
push
(bad)
(bad)
scas
or
push
jge
int3
dec
and
je
bound
and
clc
or
mov
aam
mov
(bad)
jbe
xor
cmps
xchg
lahf
adc
cmp
dec
push
fs
mov
sahf
ja
cmp
(bad)
in
jnp
loopne
or
test
rol
jo
dec
pop
jmp
adc
call
mov
inc
data16
inc
aad
sahf
inc
repnz
sub
outs
jge
inc
dec
cmp
xlat
mov
hlt
push
xchg
call
ds
add
mov
dec
fild
mov
fadd
sbb
retf
sub
pop
fsub
inc
adc
dec
and
xor
mov
add
retf
push
(bad)
add
test
sbb
xor
or
dec
movs
mov
xchg
icebp
(bad)
sbb
xor
pop
jmp
jle
mov
lods
pop
(bad)
and
sub
in
imul
cmp
xor
mov
dec
sub
lds
in
lods
fidivr
pop
pop
loop
mov
jae
xlat
jbe
dec
jb
or
in
daa
cmp
sbb
sbb
push
cmp
adc
xchg
cmp
fwait
lods
xor
scas
cmp
in
or
mov
retf
cs
dec
rcl
icebp
mov
jmp
sti
dec
cmc
fbld
jg
repz
dec
retf
repz
dec
pop
js
jmp
adc
loopne
imul
dec
sub
jnp
sub
adc
in
jle
pop
inc
js
fcomp
fwait
jl
jp
popa
inc
icebp
mov
retf
sti
push
jns
ins
rcr
fistp
test
jp
xchg
adc
or
fiadd
sbb
cdq
add
ja
sbb
inc
aas
hlt
neg
stos
aam
and
imul
push
scas
xchg
pusha
bound
sub
mov
test
and
push
out
(bad)
jmp
mov
or
lea
test
cli
ja
adc
adc
cmp
jge
cmc
adc
xchg
imul
(bad)
jmp
and
xor
test
out
imul
call
stos
inc
(bad)
and
inc
xchg
or
cwde
adc
mov
outs
stc
subps
mov
xor
inc
and
add
lea
xchg
dec
fadd
jl
jns
mov
jne
push
mov
jae
or
(bad)
lds
or
ins
mov
fxch
push
fisubr
cmps
xchg
dec
push
jg
jp
adc
jbe
mov
call
cmp
ret
(bad)
cmp
dec
test
xlat
js
mov
and
sbb
sahf
outs
scas
or
pushf
sbb
sbb
test
pop
sbb
jmp
sbb
pop
mov
xchg
sar
(bad)
fist
mov
data16
sbb
mov
jnp
mov
repnz
jo
pop
out
xor
dec
rcr
xor
ins
out
xor
jmp
mov
fld
cs
push
sbb
dec
rcr
in
mov
inc
xor
jle
pushf
imul
sub
popa
jb
fidivr
sub
xchg
sub
dec
push
xchg
neg
in
inc
ror
inc
and
std
push
dec
add
(bad)
dec
pop
or
ds
sbb
cmps
jne
es
cmps
dec
xchg
xchg
dec
dec
pop
outs
adc
mov
mov
mov
cmp
(bad)
out
call
shr
lfs
mov
mov
iret
xchg
sbb
mov
repz
pusha
das
pop
pop
dec
ss
sub
ss
out
into
in
mov
push
int3
pop
fstp
not
pop
dec
test
dec
ss
retf
jp
pop
call
(bad)
out
add
dec
inc
pop
dec
xchg
out
pop
or
push
(bad)
icebp
mov
and
mov
xchg
and
sub
jg
sub
aad
adc
dec
jge
or
mov
and
in
loop
ret
gs
leave
(bad)
fmul
into
in
popf
and
sar
sbb
and
es
(bad)
push
into
cmps
aaa
popf
push
pushf
arpl
dec
and
jg
or
stc
or
inc
lock
nop
pop
(bad)
cwde
fisubr
inc
aad
cld
jge
loope
ins
stc
cld
mov
push
repz
push
cld
dec
push
fidivr
lods
(bad)
and
fisttp
pop
test
jle
xor
rep
out
xchg
inc
jnp
sub
scas
aam
mov
mov
jmp
and
jne
and
ja
mov
sbb
jg
jnp
push
stc
cmp
(bad)
mov
pop
pop
jg
mov
add
mov
sub
sbb
pop
adc
and
ficom
fcom
cmp
xchg
lds
outs
cmp
(bad)
mov
retf
out
jecxz
pop
jne
jecxz
pop
aam
aaa
pop
call
mov
mov
call
xchg
(bad)
pop
xor
inc
sub
sub
cmp
xchg
(bad)
nop
xchg
ins
or
cld
push
mov
ins
mov
std
sub
mov
dec
(bad)
push
xor
adc
aam
sbb
mov
push
lods
pop
or
ins
imul
mov
scas
jp
pop
out
xor
mov
add
push
fld1
inc
shl
sbb
jp
jbe
inc
ins
jmp
xchg
jo
sub
pop
sti
shl
cmp
(bad)
jp
jl
test
stos
ins
jo
push
mov
pusha
lahf
in
mov
mov
outs
movs
inc
paddw
call
push
pop
or
outs
icebp
adc
mov
popf
imul
sbb
stc
fsubr
inc
scas
retf
sub
fwait
stos
jle
(bad)
imul
(bad)
push
xchg
fcomp
iret
scas
movs
mov
pop
popf
in
jp
mov
cld
xor
jo
lock
repnz
pop
scas
cvtps2pi
(bad)
outs
ret
repz
push
scas
mov
jb
push
ret
js
xchg
or
xor
repnz
dec
pop
and
cli
mov
div
and
loope
ins
mov
stos
mov
aad
imul
xchg
inc
sbb
xor
pop
hlt
adc
(bad)
jmp
fld
cmp
jmp
sbb
(bad)
ficomp
inc
mov
xchg
fsub
push
loop
adc
nop
out
xlat
in
lds
(bad)
cmps
int3
mov
jg
ret
and
jne
cmps
ds
fcomp
mov
popa
lock
jecxz
and
in
shr
and
pop
aam
xlat
push
int3
mov
or
fwait
dec
stos
popa
push
test
dec
lahf
test
dec
lods
jne
or
jmp
mov
or
inc
into
xor
or
ins
loope
dec
popf
or
retf
or
jge
mov
es
out
fstp
aam
setge
add
and
jne
sub
dec
mov
mov
mov
in
ss
push
push
jae
mov
xchg
pop
and
xchg
mov
or
and
sub
pop
arpl
fidiv
fcomp
push
loope
es
sbb
or
push
push
xchg
rcr
fcmovb
xchg
in
or
hlt
pop
in
hlt
bswap
mov
call
mov
mov
or
repz
cld
add
adc
out
xor
jo
rcr
dec
scas
dec
jge
xchg
sar
mov
sub
push
jge
cmp
outs
cmp
xchg
cdq
lods
nop
adc
sbb
retf
and
adc
mov
movs
cwde
test
into
outs
ror
cmp
leave
leave
lds
xor
bound
add
cmp
push
and
ret
or
add
cmps
adc
ret
(bad)
mov
push
sub
or
dec
mov
mov
ins
repz
push
xor
push
add
out
mov
sub
mov
lea
cmp
and
and
or
xchg
dec
rcl
popa
fnstcw
cmp
or
jle
test
(bad)
pushf
inc
cmp
out
and
adc
cmp
cmps
xor
xor
xor
and
int3
icebp
sub
mov
ficomp
(bad)
icebp
arpl
dec
jae
pop
icebp
xchg
cmp
push
sbb
sbb
fnstsw
test
mov
sbb
ins
and
xchg
pop
or
cmp
sub
(bad)
pop
mov
movs
cmp
sub
push
fiadd
mov
xchg
ret
loop
sti
fdivr
call
cdq
sbb
ss
in
sahf
pop
xchg
ffree
imul
int3
imul
pop
pop
pop
xchg
sub
fmul
dec
mov
mov
sbb
jb
sbb
inc
imul
fstp
push
mov
xchg
cmps
cmp
jecxz
neg
in
fmul
jae
fs
mov
aas
adc
bound
xchg
adc
enter
addr16
popa
loope
out
sbb
adc
xlat
repnz
adc
ds
sbb
retf
push
loopne
gs
rcr
ins
sbb
pop
mov
cli
fisub
sub
inc
ret
imul
or
retf
mov
in
stos
push
xchg
jg
test
add
imul
leave
mov
fdivr
adc
test
xchg
lds
aad
or
or
add
mov
test
pop
mov
push
mov
push
xchg
mov
mov
cmp
repz
test
inc
lods
mov
jbe
cmp
pop
fcom
out
xchg
imul
inc
or
push
scas
cli
adc
popf
cdq
data16
mov
jp
mov
out
sti
inc
js
push
or
repz
int
mov
push
dec
xor
jno
(bad)
fimul
inc
sbb
(bad)
mov
pop
sbb
push
pop
repnz
repz
dec
add
shr
sub
sbb
sbb
aam
cmp
xchg
jecxz
call
nop
in
mov
int
sbb
sub
mov
cwde
icebp
sub
xlat
outs
adc
lods
push
jnp
or
sbb
sub
xchg
aas
addr16
and
pop
repz
in
sub
mov
sub
sti
sahf
test
retf
fstp
mov
cmc
push
loopne
sbb
shl
gs
aaa
jg
dec
and
push
xor
stos
mov
cmps
xlat
mov
or
mov
inc
scas
jmp
movs
jbe
ds
inc
push
xor
inc
ret
movs
imul
and
dec
push
aad
(bad)
idiv
lock
push
xor
fnstenv
inc
xor
int
xor
or
mov
adc
fmulp
and
aad
and
and
add
fadd
xchg
cdq
into
imul
push
shl
in
sub
cmp
js
std
bound
push
lahf
xor
and
movs
sahf
xchg
mov
push
in
nop
push
cmp
jp
xchg
(bad)
std
fcmove
mov
dec
ficomp
ret
pop
sbb
shl
aad
pop
sub
mov
or
test
shl
or
xor
fnsave
xchg
or
sahf
push
fcomp
push
jae
rcl
das
jp
add
xor
and
push
jecxz
mov
pop
jae
add
scas
push
call
ficom
inc
mov
(bad)
push
popa
sub
scas
outs
or
sbb
outs
pop
adc
aaa
iret
or
mov
xchg
iret
xor
(bad)
fs
sub
cld
xchg
pop
push
jns
mov
mov
jmp
std
push
ficomp
mov
xor
fild
xor
sbb
(bad)
je
mov
dec
dec
sahf
mov
cli
hlt
aas
es
mov
push
sbb
scas
icebp
in
and
iret
mov
xchg
lods
xor
popa
lahf
fist
jns
sbb
cmps
(bad)
retf
mov
mov
push
add
xchg
sbb
and
xchg
out
push
adc
ja
bound
dec
imul
jbe
lahf
pop
mov
sbb
mov
mov
icebp
fldcw
loope
fisttp
inc
pop
aam
mov
jg
jecxz
mov
pop
loop
jmp
adc
cmp
pop
dec
dec
and
pop
push
test
stos
pop
lds
lods
cmovl
add
bound
dec
bswap
mul
sub
pop
mov
mov
inc
rcl
adc
idiv
sbb
jmp
and
xor
sub
or
dec
retf
sti
inc
enter
clc
cmps
aad
leave
(bad)
mov
push
sbb
adc
ss
xchg
scas
mov
mov
mov
mov
arpl
mov
add
xchg
lods
xchg
retf
out
stc
repnz
cmc
mov
mov
mov
dec
in
jmp
idiv
or
add
pop
and
jmp
sbb
and
shl
aam
loopne
and
test
imul
jle
sbb
and
aas
sbb
lds
popa
repnz
cmp
mov
in
inc
icebp
mov
je
adc
push
jg
(bad)
push
ret
fisub
sbb
add
xchg
add
and
or
sbb
pop
movs
inc
fiadd
or
pop
push
adc
xor
jno
add
mov
fs
add
and
jno
int
sti
push
xchg
das
fwait
(bad)
dec
pop
mov
out
jo
jmp
pop
mov
mov
cmp
movs
fisub
xchg
sub
test
ja
fwait
int3
sub
jl
in
pop
mov
inc
push
or
pop
xor
cmp
cmp
(bad)
dec
jmp
and
hlt
shr
inc
loopne
push
fidiv
and
sub
mov
sbb
mov
rsqrtps
ins
mov
and
jle
dec
retf
(bad)
shr
repz
or
jne
les
fcmove
scas
pushf
ret
pop
pop
or
dec
std
lods
dec
test
xchg
mov
lods
fist
movs
fxch
enter
(bad)
inc
sbb
out
cmp
pop
xor
jp
mov
(bad)
xchg
jbe
add
mov
arpl
(bad)
std
in
and
mov
cmps
(bad)
dec
xchg
add
push
fstp
nop
cmp
or
sbb
jae
neg
mov
lds
sbb
cmp
fidivr
arpl
push
inc
hlt
lds
addr16
leave
scas
cmps
hlt
ret
jg
cmps
movs
popa
test
sub
sahf
popf
inc
int
jno
inc
or
xchg
sub
mov
movs
xchg
cwde
cmc
sbb
fist
popa
rcl
and
push
push
jmp
and
sub
(bad)
iret
xor
out
jb
or
call
ins
lods
maxps
(bad)
ds
xchg
mov
iret
fcmovu
sub
retf
sahf
loopne
fcom
ja
push
jbe
add
in
inc
test
inc
push
in
loopne
xchg
repz
jb
pop
data16
pop
dec
int
jg
and
call
sub
cs
(bad)
pop
cmp
nop
ficom
pop
and
popa
mov
mov
outs
cmps
cmp
inc
out
or
test
cwde
xchg
(bad)
lock
mov
cli
cwde
mov
adc
push
xchg
jg
adc
in
add
fiadd
cmovno
dec
outs
jnp
ds
stc
dec
not
cmps
sbb
aas
jmp
hlt
jle
ins
or
jle
dec
call
out
mov
fsubr
ins
or
sbb
adc
mov
cmps
xchg
mov
int
xor
pop
test
(bad)
iret
lock
mov
xchg
mov
ja
dec
sub
retf
ins
or
pop
rcl
mov
loop
mov
lock
lahf
xchg
mov
stos
push
jmp
xchg
loopne
sar
popf
jge
loopne
sub
ja
test
loopne
push
cwde
in
mov
push
fdivr
fld
test
aaa
pushf
fst
cmp
popa
out
neg
into
dec
or
mov
(bad)
out
mov
rcl
aas
and
xor
mov
sbb
inc
jl
cld
aas
mov
inc
pop
pusha
out
leave
stc
sar
lods
movs
test
mov
xor
push
xchg
mov
add
and
mov
pop
popf
int
int3
mov
jecxz
fldcw
loopne
or
dec
fcmovne
jmp
outs
dec
call
pop
and
jae
sub
shr
mov
loop
push
and
jle
sbb
adc
mov
mov
or
xor
pop
adc
pop
stos
mov
iret
addr16
gs
scas
inc
mov
cld
sub
mov
fdiv
in
and
xor
jae
pop
sub
or
fs
xchg
and
pop
add
mov
jge
add
sub
lods
push
dec
jo
pop
xchg
pushf
arpl
mov
xor
cmp
jle
dec
or
mov
imul
add
or
adc
adc
shl
(bad)
fild
jmp
jl
sub
call
daa
ficom
jb
dec
movs
push
stos
jmp
dec
dec
pop
inc
xchg
shl
inc
push
xchg
(bad)
push
data16
xor
mov
iret
mov
or
fisubr
cli
clc
lahf
stos
movs
xchg
outs
push
retf
cld
popa
pop
sbb
mov
mov
dec
into
movs
adc
enter
(bad)
dec
mov
and
add
add
inc
push
ins
and
xchg
je
fwait
repnz
pop
jmp
jnp
cmps
dec
push
mov
push
pop
cmp
push
cmp
push
cwde
in
ds
pop
jle
adc
pop
fldenv
add
pop
xchg
add
mov
mov
push
int3
sbb
es
mov
sbb
and
jns
(bad)
mov
out
lahf
xchg
pop
mov
sbb
pop
mov
xchg
push
xlat
pop
mov
mov
xlat
mov
pop
iret
inc
(bad)
imul
xchg
sub
movs
jmp
jmp
xor
jmp
imul
scas
xchg
cld
mov
dec
mov
mov
and
inc
adc
femms
dec
test
ds
or
mov
cmp
add
bound
ffreep
call
ins
test
xlat
xchg
mov
xchg
dec
ins
das
pop
cmp
out
fnstenv
sti
mov
(bad)
scas
sub
shl
frstor
(bad)
es
jge
jo
pop
or
mul
fdiv
and
cmp
leave
retf
push
cmp
adc
sub
and
(bad)
pop
ss
jnp
lods
ret
xor
sbb
das
loop
inc
shl
mov
sub
aad
pushf
sbb
and
enter
dec
fsub
not
cwde
add
xchg
cdq
ss
loope
(bad)
enter
loope
test
dec
stos
out
mov
adc
loopne
push
pop
lds
sar
mov
loopne
dec
mov
mov
push
jno
jno
(bad)
imul
push
or
add
cmpxchg
pop
icebp
cmp
pop
push
lods
cmp
add
out
mov
or
mov
addr16
repnz
in
adc
inc
out
mov
fdiv
cs
dec
rcr
dec
and
sub
xchg
inc
and
jg
add
mov
cmp
mov
aad
outs
stc
adc
sub
dec
ret
cmps
xchg
shr
inc
sub
loopne
sub
push
jo
fidivr
fimul
popf
sbb
sub
in
push
loopne
je
sar
push
xchg
xor
call
ret
cmp
adc
and
les
inc
push
fwait
outs
inc
shl
mov
and
test
pusha
mov
inc
cmp
mov
shl
cmps
push
sbb
stos
jmp
mov
xchg
imul
pop
mov
repnz
ror
div
in
stc
aas
movs
popa
pop
ins
pop
jge
xchg
test
xchg
fwait
cmp
idiv
xchg
inc
in
push
shl
lock
jmp
(bad)
enter
mov
adc
jg
xor
test
lds
adc
jg
or
xor
test
stc
xchg
pushf
mov
pop
call
ja
jecxz
stos
test
repnz
ins
lahf
pop
add
add
scas
or
lds
dec
stc
inc
test
pop
aas
xlat
xchg
cmp
adc
lods
pop
mov
enter
out
(bad)
addr16
pop
sti
imul
push
add
pop
fwait
jmp
cli
and
mov
rol
sti
mov
std
xor
dec
mov
and
mov
mov
inc
jmp
inc
pop
jne
jg
movs
xor
retf
sbb
pushf
fiadd
cmp
paddsb
sub
iret
and
pop
push
fsubp
in
inc
loope
add
adc
shl
inc
cmc
and
push
inc
js
sbb
ins
pop
stc
pop
xlat
int3
mov
lahf
div
add
mov
ins
add
dec
cmp
jne
push
hlt
inc
fld
mov
dec
dec
ret
stos
push
lock
mov
xor
sub
popa
adc
fcmovb
cwde
iret
loopne
movs
dec
mov
jns
cmp
xchg
jmp
add
cmp
jmp
fucom
pushf
or
xchg
int3
pop
pop
in
sbb
and
gs
inc
mov
add
push
sub
ret
cmp
inc
mov
push
adc
xlat
repz
sahf
mov
push
xchg
add
test
fidiv
sbb
jg
push
add
pop
pop
sar
fstp
jmp
mov
dec
inc
js
sub
dec
test
int
pop
lock
adc
in
loop
jl
xlat
daa
pop
nop
ret
jae
cld
pop
(bad)
or
rol
sub
leave
fsubr
or
stos
inc
fld
or
ds
mov
ss
fwait
in
test
jp
mov
iret
daa
mov
mov
xor
imul
lods
in
lock
mov
adc
push
xchg
lahf
sbb
mov
mov
inc
inc
adc
mov
adc
lods
sub
xchg
js
push
mov
or
icebp
mov
ss
mov
mov
nop
dec
mov
scas
adc
adc
push
mov
in
(bad)
mov
xchg
mov
push
xchg
mov
mov
mov
pop
sti
adc
not
mov
inc
push
push
cs
xor
sub
dec
cmps
(bad)
enter
rcr
dec
and
mov
fdivr
xlat
(bad)
push
xchg
pushf
adc
inc
jmp
jns
repnz
mov
lock
inc
les
sbb
jne
sbb
sbb
loope
int3
jno
xchg
(bad)
pop
test
mov
scas
mov
aad
lahf
and
stc
sahf
leave
arpl
call
mov
out
push
sbb
mov
jge
mov
or
repz
popa
cmp
pop
imul
add
cdq
sti
inc
dec
loop
push
cmp
add
sub
pop
test
mov
mov
cmp
loop
retf
shl
jmp
jl
test
rep
and
jp
pushf
pop
fcomp
pop
push
jo
retf
mov
pop
jp
cli
pop
mov
not
sbb
mov
dec
or
aad
jle
test
push
lock
shl
ds
mov
mov
loop
(bad)
rol
rcr
out
sub
mov
dec
cld
lock
scas
pop
loope
pop
xor
(bad)
push
bound
imul
mov
sub
jne
sti
ret
imul
mov
and
lods
xchg
xchg
mov
mov
jne
int
mov
retf
mov
sub
inc
adc
out
inc
pop
pop
jecxz
dec
and
xor
loop
in
jle
ror
jns
(bad)
rol
push
mov
aad
sbb
xchg
enter
out
mov
arpl
std
adc
out
imul
xchg
mov
dec
scas
jne
xchg
scas
clc
sbb
pusha
rcl
iret
adc
les
(bad)
fbld
mov
jmp
adc
push
std
call
mov
mov
test
jbe
cld
add
jae
(bad)
fstp
mov
out
mov
call
jo
mov
and
and
popf
jns
jge
push
or
inc
or
(bad)
in
mul
pop
ror
jl
cli
aam
jmp
lea
sti
scas
xor
retf
and
adc
cli
xor
imul
stos
aas
dec
data16
xor
dec
jg
xor
dec
mov
cmc
hlt
dec
or
add
mov
jne
ret
js
lahf
data16
(bad)
stc
or
xchg
push
daa
outs
jp
mov
inc
jae
sub
call
and
(bad)
in
(bad)
mov
popf
shl
mov
pop
add
data16
jecxz
mov
sub
es
cmp
add
cmp
dec
pop
xor
mov
cmp
and
jns
mov
ja
mov
fnstsw
push
sbb
sti
lods
push
mov
sub
pushf
pop
jno
mov
and
mov
cmp
push
aas
lods
mov
repnz
test
fsub
mov
bound
mov
fist
push
sub
dec
lds
xchg
fsub
neg
push
loopne
jae
pop
fcomp
mov
cmc
add
fcom
outs
sbb
sbb
out
mov
out
pop
imul
cwde
mov
push
cmp
(bad)
into
sbb
push
mov
arpl
or
outs
movs
retf
loop
lea
xor
cwde
or
mov
jne
call
jge
clc
icebp
pop
cli
out
jnp
and
imul
(bad)
out
xlat
repnz
shl
mov
dec
sub
push
ja
imul
jge
addr16
fbld
fistp
ss
(bad)
pusha
or
adc
movs
sub
test
sub
lock
popa
jne
lea
cli
sub
inc
pop
std
mov
repnz
scas
mov
sbb
hlt
(bad)
rcl
rcl
retf
out
jl
mov
mov
adc
mov
push
mov
call
mov
icebp
lea
dec
cmp
aad
ss
leave
or
and
ficom
xchg
mov
outs
arpl
or
sar
lea
aam
xchg
or
pop
sbb
movs
sub
sbb
and
and
lods
sahf
arpl
call
sbb
jnp
pop
mov
cwde
hlt
pop
gs
(bad)
xor
xor
xor
inc
enter
ins
dec
sahf
fistp
dec
jmp
jp
adc
call
jecxz
pop
cmps
xchg
inc
adc
mov
sub
add
je
and
not
mov
retf
xchg
inc
jmp
dec
adc
test
clc
and
mov
cwde
ret
int
and
push
leave
inc
mov
cmp
mov
jge
aaa
push
mov
jnp
addr16
sar
ins
pop
fadd
push
add
jle
cmps
imul
fs
xor
nop
xchg
jae
repz
in
cmp
dec
cmps
sbb
ins
stos
pushf
call
cmps
rol
cmc
in
and
hlt
adc
or
mov
pop
ja
sub
repz
dec
push
or
repnz
adc
shl
ret
fsub
addr16
push
sahf
mov
xchg
sub
pop
mov
div
xlat
out
push
mov
jae
dec
inc
je
cmp
cmp
imul
push
fld
jae
adc
push
lods
xchg
add
outs
ds
mov
out
or
mov
enter
daa
in
adc
loopne
push
inc
xor
jmp
stos
in
bnd
mov
fcom
mov
movs
xchg
inc
movs
rol
sub
imul
iret
scas
cmp
mov
jmp
cmp
mov
xor
out
mov
lods
dec
xor
jbe
retf
mov
jg
and
popa
(bad)
sbb
add
lea
adc
cdq
shl
btr
cmp
and
idiv
pop
pop
shl
(bad)
mov
lea
push
shl
imul
inc
adc
inc
ja
mov
retf
aaa
gs
test
movs
outs
psubd
pop
rcr
inc
clc
ja
stos
icebp
in
cmc
mov
xchg
mov
stos
scas
mov
push
bound
mov
fild
test
or
mov
ror
or
(bad)
sbb
adc
and
std
xchg
daa
lock
push
mov
pmaxsw
fild
mov
fisttp
shl
xor
dec
mov
jno
popa
sbb
mov
jbe
mov
mov
dec
push
es
movs
jp
xlat
in
dec
loop
cdq
adc
ror
lahf
leave
pop
sahf
test
cmp
dec
aad
add
and
ss
jp
push
retf
aam
in
lock
icebp
xor
jecxz
mov
in
pop
test
out
and
cli
mov
pop
loopne
out
and
jle
and
mov
mov
mov
(bad)
xlat
fist
pushf
sub
lahf
xor
adc
fidiv
pop
inc
(bad)
jmp
add
(bad)
sbb
gs
jl
push
stos
mov
imul
fwait
push
vpsrad
ret
mov
and
gs
and
jp
inc
loopne
inc
(bad)
cmps
mul
adc
jle
xchg
sar
jbe
pop
adc
mov
jno
sahf
sbb
jae
add
sbb
push
sub
repz
icebp
and
stc
adc
jb
mov
xor
xor
ins
or
ins
push
(bad)
cmp
add
sub
outs
repnz
xlat
enter
adc
mov
pop
mov
xor
sub
test
jmp
xchg
cmp
mov
sub
in
in
cmps
dec
icebp
pmaddwd
push
mov
push
jg
mov
mov
cdq
mov
mov
pop
pop
cwde
or
movs
pop
rol
sub
enter
call
ret
outs
das
call
dec
aas
mov
test
or
ror
jo
mov
in
pop
xlat
mov
movs
inc
pop
rol
sub
cmc
sub
jmp
mov
ret
popf
mov
mov
lahf
fwait
in
xchg
cmp
je
push
mov
jp
sub
pop
in
mov
cmp
xor
and
fst
sbb
loopne
sar
fs
icebp
and
push
lods
adc
xor
mov
or
and
rol
sub
sbb
jecxz
and
daa
rcr
fld
push
sbb
es
or
dec
cli
push
or
adc
mov
mov
xchg
pop
in
inc
lahf
in
sbb
and
imul
push
shr
fcmovne
fs
in
dec
std
jo
mov
mov
mov
cmps
les
mov
jmp
movs
mov
cmps
xchg
mov
jnp
out
xlat
stos
sti
into
icebp
dec
inc
mov
retf
nop
or
jno
push
mov
sbb
push
push
xchg
mov
mov
aas
test
sti
add
mov
stos
cmc
adc
add
sub
lsl
push
(bad)
mov
repz
sbb
fisub
dec
add
fwait
lock
adc
mov
mov
inc
int3
cmp
ds
sub
jae
sbb
pop
cmp
mov
icebp
mov
das
loop
into
retf
ins
cld
xchg
push
shl
je
xor
or
sbb
iret
xor
in
enter
(bad)
inc
xor
das
xor
cmps
ins
or
sbb
lock
test
aas
pop
daa
jmp
cmp
pop
cmps
lock
add
or
jg
ins
sub
(bad)
jb
loopne
test
int
movs
or
xor
sbb
or
in
mov
jp
cmp
xchg
loope
pop
fcmovnbe
jg
mov
popf
mov
data16
push
inc
test
inc
(bad)
cmp
aaa
loopne
cmp
(bad)
outs
mov
imul
retf
mov
mov
out
lea
ror
inc
popa
mov
gs
repz
je
add
sub
bound
cmp
fsubr
push
jns
sbb
add
sub
mov
adc
repnz
ja
cs
cwde
xchg
xor
adc
mov
fadd
movs
dec
arpl
jns
loopne
ins
fistp
jbe
sub
adc
ss
test
shl
add
mov
add
aad
cmp
outs
shr
push
xor
add
xor
pop
fs
nop
xchg
pop
pop
push
or
rcl
push
inc
sub
frstor
mov
in
shl
es
add
push
pop
shl
std
jbe
mov
inc
neg
xchg
mov
push
stos
adc
push
ins
jnp
bound
(bad)
int
cmp
mov
int
xor
mov
jmp
ret
push
and
cmp
mov
push
popf
push
pushf
xchg
mov
rcr
mov
dec
push
(bad)
sub
pop
fdivr
js
pop
clc
dec
xor
(bad)
mov
sbb
push
sbb
mov
adc
sar
xor
mov
pushf
out
je
es
popf
jle
cmp
push
adc
cmp
in
cmps
outs
push
shl
ins
xchg
mov
push
test
xchg
or
sbb
nop
(bad)
jmp
jecxz
lock
outs
inc
es
lock
cld
retf
inc
fnstsw
loopne
dec
fdiv
dec
adc
ins
imul
in
sub
cmp
sub
inc
sbb
add
popf
into
add
repz
xchg
div
in
clc
in
scas
and
push
outs
push
js
stc
or
popf
repz
pop
ss
or
cld
inc
loop
lods
out
movs
mov
jge
test
push
lods
dec
sti
pop
(bad)
jae
arpl
in
push
lods
in
out
cld
push
pop
lds
lds
dec
dec
dec
movs
push
outs
add
push
dec
int3
jmp
xchg
sub
daa
xchg
pop
sub
call
push
jecxz
and
mov
pop
xchg
cmp
(bad)
repnz
ds
pop
std
push
(bad)
jle
pop
scas
iret
sub
or
push
retf
pop
and
nop
pop
in
mov
mov
add
adc
jmp
data16
imul
jge
mov
data16
dec
or
push
pop
dec
pop
aad
imul
rol
adc
pop
pop
or
adc
cmps
inc
xchg
clc
dec
jp
xchg
inc
scas
xor
mov
adc
addr16
pop
stc
cli
nop
inc
xchg
cmp
pop
xor
sbb
pop
cdq
shl
or
mov
retf
jbe
cmp
jmp
xchg
or
pusha
retf
scas
or
push
xchg
fadd
xchg
les
dec
adc
cwde
retf
dec
xchg
mov
js
inc
iret
out
lock
rol
or
and
push
and
inc
or
pop
das
stc
sub
test
jb
out
sbb
cs
pop
xor
cmps
pop
jge
inc
lods
inc
in
or
xor
std
(bad)
daa
imul
sbb
enter
js
xchg
shl
mov
mov
mov
dec
aam
xchg
adc
cmp
mov
lods
mov
inc
inc
cdq
aam
mov
dec
call
pop
and
ror
retf
push
int3
rep
cmp
inc
cli
out
aad
sbb
ins
ins
mov
xchg
mov
enter
pop
jo
lock
push
pop
fisubr
jb
jmp
iret
jmp
adc
mov
and
je
les
mov
cwde
test
mov
jnp
imul
ss
jmp
sbb
or
imul
jge
ror
push
les
push
shl
mov
push
in
mov
and
sbb
sbb
pop
push
leave
das
add
js
sub
mov
mov
mov
inc
cmp
xchg
cld
stos
inc
stc
mov
lock
cmc
push
pop
cld
push
jno
fdiv
ficomp
mov
xchg
mov
or
loop
iret
addr16
mov
stos
or
cld
cmp
int
inc
or
push
pop
mov
cmps
rcl
jg
call
test
sbb
mov
push
stc
in
cmp
cld
dec
cmp
popa
sub
out
jmp
jo
xchg
in
adc
pushf
push
cmp
adc
mov
cs
hlt
xchg
push
add
push
sahf
or
push
ss
out
stos
ret
mov
ja
inc
xlat
(bad)
pop
mov
cmp
pop
lahf
mov
into
jnp
rcl
enter
sahf
mov
retf
mov
inc
sbb
push
or
or
lods
pop
mov
pop
push
stc
shl
dec
push
test
mov
push
fwait
cmp
(bad)
jp
test
pop
shl
stos
or
xor
test
mov
inc
or
ss
ret
inc
mov
mov
pop
or
mov
out
cmp
outs
xor
retf
add
scas
sbb
mov
ja
inc
jb
mov
scas
jecxz
out
mov
jo
sub
les
or
mov
push
xchg
dec
daa
sub
icebp
mov
mov
pop
(bad)
sbb
mov
xchg
jae
or
mov
in
push
mov
shr
scas
lahf
out
push
repz
dec
sahf
jl
pop
sbb
xor
or
push
lds
rol
xchg
mov
repnz
stc
add
xlat
repnz
jl
in
fs
nop
xchg
mov
push
int
mov
les
jle
push
repz
sbb
xrelease
loopne
dec
push
and
xor
fild
push
or
xchg
je
or
jmp
gs
sub
hlt
sub
dec
movnti
xor
jge
popa
jbe
dec
dec
add
in
(bad)
(bad)
nop
(bad)
out
sbb
push
pusha
mov
(bad)
or
(bad)
sbb
dec
adc
xchg
sbb
out
cli
dec
adc
sub
fdivr
push
push
out
fs
std
cmps
dec
retf
mov
retf
inc
(bad)
cld
iret
into
dec
outs
out
imul
or
xchg
imul
leave
jno
sub
dec
or
add
test
pop
inc
mov
(bad)
loopne
imul
xor
ins
lahf
cmp
iret
pushf
jge
xchg
xor
or
imul
cmp
dec
and
aam
and
mov
jb
cmps
aaa
jb
in
ja
stc
pop
mov
sbb
pop
ins
out
and
jecxz
aad
sub
in
mov
dec
cmc
fiadd
sub
cwde
sub
ins
pop
mov
pusha
push
inc
xlat
dec
and
xor
cli
mov
fsubr
lods
mov
rol
add
in
out
ins
add
scas
mov
out
fild
push
scas
cmc
std
dec
push
hlt
lods
jl
out
jb
lods
sub
dec
ror
or
movs
inc
sub
xchg
jno
dec
fild
add
lods
and
dec
cs
cmps
jns
(bad)
sbb
mov
ret
test
test
xlat
adc
cmp
jns
jmp
int3
sbb
push
pop
test
lds
mov
or
shl
adc
cmp
scas
(bad)
mov
inc
adc
dec
push
sbb
(bad)
sub
call
pop
retf
fisubr
jp
mov
cmps
aam
inc
jno
xor
push
push
jb
or
pop
xor
inc
pop
xchg
bound
xchg
popf
shl
aas
stos
pop
jmp
pop
and
inc
mov
sub
mov
in
dec
push
shl
shr
out
mov
fiadd
daa
daa
js
xor
sbb
dec
fdiv
inc
fmul
pop
fcomp
xchg
ins
push
fadd
sub
out
or
push
out
pop
sub
lock
rcl
fcmovb
or
jo
test
sahf
pop
push
(bad)
iret
jg
mov
pop
bound
inc
add
nop
xchg
pushf
pop
jmp
ins
fs
in
aas
adc
jecxz
xor
es
lods
loop
jmp
fstp
jb
dec
jge
inc
(bad)
(bad)
jae
push
mov
out
xchg
clc
inc
sbb
xchg
lahf
adc
pop
fwait
jle
(bad)
mov
rcr
out
inc
(bad)
lods
sti
mov
sbb
shl
jo
pop
sahf
inc
test
int3
popf
leave
lahf
add
in
mov
sbb
inc
xchg
ror
xchg
cdq
sbb
pop
or
push
gs
jnp
push
mul
push
add
out
test
jb
imul
dec
scas
das
mov
aad
push
cmp
sbb
or
jno
pop
inc
movs
and
push
or
push
xor
dec
inc
retf
xchg
icebp
cli
and
mov
not
jb
je
(bad)
xor
cld
daa
pop
pop
ret
stos
ss
mov
cmp
dec
xchg
stos
shl
daa
adc
dec
xchg
xchg
(bad)
aas
jmp
mov
push
pop
mov
pop
jo
mov
inc
cs
hlt
addr16
adc
nop
(bad)
dec
outs
cmc
pop
jmp
(bad)
adc
inc
or
repz
in
fsubp
inc
xor
out
sbb
mov
(bad)
mov
retf
sub
xchg
mov
rcl
test
mov
mov
fwait
add
(bad)
jnp
mov
pop
dec
dec
cdq
and
or
test
mov
stos
xchg
add
add
sbb
xor
mov
cmp
pop
jl
lahf
mov
cmp
mov
leave
clc
ret
out
sbb
movs
rol
test
fild
sbb
sti
jmp
icebp
jge
cmp
movups
retf
outs
xchg
loope
jmp
cmps
sbb
stos
aas
mov
adc
rcl
inc
int
movs
mov
xor
jge
fstp
loopne
pop
lds
icebp
sar
mov
pop
push
scas
cmc
cwde
pushf
or
in
sub
xor
sub
dec
xor
xchg
pusha
outs
pop
xor
and
add
ret
clc
push
push
pop
mov
into
cdq
dec
sbb
lds
add
push
xchg
add
ss
ror
aas
xchg
pop
ins
sbb
dec
mov
mov
call
stos
out
add
xchg
outs
(bad)
mov
xor
jmp
push
sub
das
and
out
pushf
pop
imul
je
rcr
inc
mov
int3
inc
cs
sbb
popf
mov
adc
xchg
shr
mov
aas
push
ret
in
rcr
push
or
mov
fcomp
lods
add
jne
in
popa
or
mov
push
jp
or
inc
mov
(bad)
xchg
xor
mov
stos
jae
shl
dec
push
sbb
jl
imul
mov
inc
addr16
or
(bad)
and
mov
or
mov
fadd
sbb
or
int
(bad)
xor
rcr
jp
repnz
jae
dec
adc
das
popf
es
into
mov
es
lea
sbb
movs
sbb
fimul
mov
repz
push
sub
sbb
mov
call
pop
rcr
test
or
cmc
cmp
xchg
mov
fisttp
test
mov
cs
or
mov
js
fwait
int3
clc
mov
inc
mov
xchg
sub
jnp
nop
sbb
lds
pushf
pop
test
cmc
dec
jns
pop
inc
iret
lods
xor
pop
enter
push
test
or
out
push
xor
jmp
cmp
imul
lahf
jb
das
scas
out
jmp
push
lods
iret
pop
cmps
mov
aas
repnz
or
cli
loope
dec
push
dec
hlt
lock
inc
sbb
cmp
xchg
ret
addr16
aaa
call
mov
mov
sub
movs
mov
cmps
sub
lods
mov
and
mov
add
ret
push
cmc
ss
lock
outs
jne
mov
mov
cdq
mov
sbb
jmp
jb
sub
aas
imul
pusha
pop
sar
xchg
sbb
rcl
loop
pop
adc
sbb
sbb
mov
pop
movs
in
das
dec
push
or
jp
or
mov
in
les
nop
or
or
lds
adc
mov
mov
fwait
es
aad
in
cmp
out
mov
movs
fld
xor
jo
ret
xor
xor
adc
loop
aad
adc
mov
sbb
in
fstp
mov
imul
data16
loope
and
jmp
clc
mov
sub
xchg
sbb
mov
or
push
jb
xchg
sbb
pop
xchg
leave
sahf
fild
push
mov
mov
fild
sbb
and
mov
ror
loope
and
sub
ins
(bad)
dec
xor
push
je
sbb
sbb
scas
pop
popa
xchg
inc
sbb
cmp
or
pop
shr
mov
jecxz
fwait
mov
sbb
pusha
sub
mov
in
pop
pop
sahf
cmp
add
out
mov
push
in
add
movs
clc
imul
push
xor
(bad)
push
es
aaa
scas
call
or
add
adc
sub
mov
mov
jmp
pop
(bad)
cmp
hlt
jg
add
xchg
xchg
push
adc
mov
inc
dec
scas
sub
sub
movs
add
jmp
lahf
cmp
js
into
or
cmp
mov
adc
add
fldenv
cmp
shl
mul
push
cmp
jge
aam
dec
stos
mov
es
sbb
jns
loope
xor
sbb
sti
xchg
cmp
add
in
adc
mov
mov
mov
loopne
out
xor
inc
iret
jbe
inc
push
sti
sub
pop
js
or
test
popa
stc
(bad)
dec
adc
neg
mov
jbe
loopne
xor
jb
jmp
dec
mov
es
adc
jae
stos
add
aam
arpl
cmc
outs
xor
mov
imul
and
test
loop
cdq
nop
dec
dec
and
call
dec
ja
in
stos
cmp
cwde
sbb
fdivr
scas
pop
dec
xchg
(bad)
mov
retf
add
xchg
mov
inc
shl
cmp
pop
jno
stos
jmp
mov
add
add
xor
into
in
repz
jmp
mov
xchg
mov
sbb
mov
out
xor
cmps
imul
fdiv
ret
hlt
sbb
xchg
mov
data16
retf
out
cmc
adc
mov
loop
or
cmp
or
add
pop
sub
add
(bad)
lods
jo
push
leave
mov
cs
les
inc
(bad)
aam
and
ret
lea
(bad)
shr
fsubrp
lds
je
cmp
scas
cli
cmc
hlt
push
xchg
dec
in
push
adc
and
pusha
and
not
cmp
jp
fwait
adc
jae
mov
mov
int3
mov
dec
dec
pop
push
fiadd
das
jnp
push
daa
mov
outs
pop
out
in
or
cmp
mov
cmp
je
push
cmps
inc
dec
add
call
jnp
cld
shl
aad
data16
mov
arpl
jmp
mov
enter
xchg
xchg
out
sbb
das
sub
or
scas
mov
jno
and
movs
or
leave
add
xchg
jge
shr
lahf
clc
lods
aad
add
adc
nop
add
enter
and
loope
stos
stc
jg
or
mov
loopne
ja
test
rol
xor
std
adc
loop
fwait
cmps
jo
inc
push
or
lods
out
mov
les
push
in
iret
jbe
add
(bad)
or
setl
or
repz
iret
lds
xchg
std
xchg
or
inc
add
jnp
ret
repnz
xchg
add
mov
push
pop
xchg
pop
aaa
jae
sub
push
jmp
pop
sti
pop
push
cld
mov
lods
sub
in
hlt
pop
stos
sti
mov
inc
lock
sub
mov
fadd
rol
fld
mov
sub
jns
lahf
lahf
dec
mov
sub
jae
sar
ficom
pop
cli
in
jbe
sahf
or
push
cmp
pop
fidiv
jmp
xor
xchg
fsub
mul
push
test
dec
ss
pop
xchg
xor
mov
xlat
mov
mov
fcomp
jle
loopne
add
push
cmp
add
cli
pop
mov
xor
retf
shl
enter
out
imul
sub
pop
add
sbb
jbe
push
dec
mov
cmc
push
push
add
push
aaa
les
in
(bad)
in
push
es
pushf
add
pop
fwait
dec
rol
shl
inc
cmp
popa
test
pop
lods
fild
sar
movs
mov
fild
dec
aas
fstp
mov
push
(bad)
imul
(bad)
and
outs
sahf
jmp
mov
cs
idiv
and
mov
(bad)
ret
push
iret
leave
test
adc
add
jo
ret
mov
es
dec
adc
in
mov
outs
pop
sub
xchg
cvttps2pi
xchg
dec
pop
out
in
ret
aam
xchg
sub
xchg
jmp
pop
push
cmp
out
fist
xor
jb
loopne
jmp
sub
add
adc
cdq
sbb
inc
inc
loope
and
inc
xchg
ins
push
loopne
stos
jmp
outs
sub
loope
std
jb
sub
sbb
mov
inc
imul
sub
xchg
test
push
out
mov
adc
or
les
lods
sbb
mov
push
sar
adc
les
pop
adc
popf
dec
aas
addr16
loop
cmc
gs
(bad)
xchg
cmp
mov
repnz
mov
call
cdq
icebp
aam
out
daa
scas
add
mov
jl
ss
test
mov
enter
xor
jbe
bound
cdq
mov
and
add
add
xchg
cmp
push
adc
hlt
add
loop
pop
fsub
push
xor
out
lock
cmps
xchg
imul
mov
in
xor
xor
adc
pop
dec
scas
clc
xor
mov
neg
pop
push
cli
arpl
ins
out
dec
xchg
pop
shl
stos
into
popa
xchg
rol
inc
mov
fwait
out
fstp
in
lds
iret
mov
iret
jge
pop
or
push
mov
retf
sub
jl
and
add
out
xor
aas
ret
es
stos
xor
jns
mov
(bad)
add
cli
sbb
lea
jae
inc
push
and
imul
adc
pusha
popf
test
mov
jb
out
(bad)
das
sbb
push
retf
setle
fidiv
sbb
sub
cli
jmp
(bad)
add
outs
nop
dec
not
jle
dec
das
aam
pop
(bad)
jmp
add
(bad)
daa
inc
push
jmp
sbb
scas
sbb
sbb
outs
dec
pop
or
test
adc
jo
push
pop
cmp
and
(bad)
les
inc
xor
(bad)
ins
bound
push
je
xchg
iret
int3
xor
xchg
sar
mov
mov
call
or
or
inc
jno
lods
and
mov
jno
jmp
sub
pop
clc
cmps
mov
rol
es
stos
ret
jmp
dec
push
mov
pop
mov
clc
int3
mov
pop
out
adc
jg
jb
loop
test
fwait
cmp
sub
(bad)
dec
sbb
(bad)
inc
(bad)
into
xor
or
jge
dec
and
lods
js
fist
cs
mov
jmp
ds
inc
ja
lahf
sbb
stos
shr
push
mov
adc
pop
and
nop
mov
mov
push
test
sub
retf
sub
or
pusha
push
test
mov
pop
pop
inc
(bad)
clc
js
in
es
xchg
ficomp
adc
fsubr
pushf
xor
sub
(bad)
lds
fsubp
push
push
sbb
cld
mov
addr16
lods
sub
jmp
adc
inc
sub
fsubr
pop
lds
inc
mov
sub
adc
fist
ds
mov
and
fsubp
mov
std
pop
pop
dec
(bad)
pop
cmc
(bad)
out
xchg
xor
sbb
in
add
fstp
fidivr
fidiv
cmc
sbb
xchg
fwait
inc
loop
push
pop
repnz
inc
dec
aad
push
iret
test
jo
sbb
xor
test
jbe
lock
lods
ins
sub
sbb
arpl
fst
mov
add
fisubr
int3
mov
mov
rcl
fwait
push
mov
push
xor
jb
xor
pop
mov
arpl
cld
xchg
mov
pushf
lods
mov
divps
push
cmps
mov
rcl
sbb
dec
adc
test
movs
xor
jg
aaa
xor
lods
int
or
jge
mov
cmp
adc
push
arpl
lods
out
pop
mov
out
inc
pop
cmp
ret
mov
sub
fwait
lods
std
mov
push
stos
mov
retf
pushf
loope
cmp
stc
fidivr
out
dec
mov
out
lahf
adc
frstor
fsubr
jmp
dec
call
in
mov
jnp
fild
mov
push
shl
pop
daa
in
push
xchg
or
mov
mov
cwde
and
in
mov
rcl
mov
sahf
push
movs
aas
cmp
imul
push
ins
sar
xchg
je
(bad)
sbb
mov
sub
pop
adc
loope
(bad)
addr16
retf
dec
xchg
repnz
jo
push
dec
stos
test
mov
mov
test
and
adc
and
repz
mov
and
(bad)
fdiv
mov
jne
movs
mov
cmc
sbb
jb
sub
jo
fist
adc
jmp
and
ins
cmp
popf
retf
add
mov
frstor
cwde
inc
ret
add
jo
test
mov
lock
test
fdivr
mov
xor
push
retf
rcl
call
dec
pop
push
aam
hlt
adc
cli
ins
and
xor
aas
loopne
shl
stos
sbb
cwde
test
mov
aaa
test
adc
ins
out
ss
mov
or
jle
jmp
cmc
in
and
xchg
fst
xchg
das
mov
jbe
ja
fisubr
xchg
mov
je
dec
xor
fwait
jns
je
or
adc
adc
jno
ret
and
lahf
push
adc
ja
popf
iret
and
add
loopne
fisubr
shl
jl
dec
outs
inc
sti
movs
push
jmp
arpl
(bad)
pop
jbe
xchg
xchg
aam
push
mov
mov
cmps
or
stos
xor
(bad)
das
jne
mov
jp
repnz
xchg
jecxz
lock
mov
(bad)
cmp
mov
int
aaa
adc
fwait
in
xor
in
and
mov
cld
dec
mov
ins
inc
dec
aas
clc
adc
xchg
mov
xchg
fidiv
enter
jb
out
jbe
ficomp
movs
leave
pop
enter
or
dec
cmp
or
int
sub
xor
fcom
mov
pop
scas
dec
test
pop
lds
clc
sbb
movs
out
cmovs
jl
xchg
lods
out
mov
les
sbb
add
aad
test
dec
cmp
jmp
inc
out
arpl
sub
stc
aad
add
dec
clc
inc
imul
mov
gs
add
jle
test
dec
sbb
jp
mov
inc
(bad)
xor
xor
dec
cld
test
push
je
xchg
les
movs
xor
pop
adc
jg
scas
dec
and
cmc
xchg
pop
mov
fld
xchg
dec
ret
adc
int3
fucomp
fs
xchg
mov
and
mov
mov
fimul
mov
int
dec
sub
sub
mov
dec
retf
or
fild
cwde
mov
idiv
pop
ds
mov
fidiv
xor
loopne
jb
or
xor
cwde
push
pop
fdiv
mov
test
push
lock
ins
cmp
std
ss
push
mov
push
rol
aad
setbe
ins
adc
popf
adc
test
bound
pop
ret
daa
pop
and
and
jns
out
sar
and
jns
xor
lods
push
popa
xor
cs
adc
inc
xor
loopne
nop
sar
dec
sbb
pushf
xchg
mov
sub
cld
push
cdq
rcl
push
in
jnp
dec
fcom
data16
sub
fcom
out
adc
cdq
sbb
fldenv
sets
cwde
imul
xor
push
add
cmp
mov
mov
and
into
and
adc
dec
sub
out
call
retf
xchg
or
sub
push
imul
xor
into
mov
lea
sbb
xor
loopne
sbb
cli
push
jl
into
mov
das
xlat
lods
das
sub
pushf
lahf
fwait
leave
mov
mov
cmp
add
inc
jno
jmp
int3
std
aad
stos
xchg
sbb
sbb
out
lahf
mov
xchg
mov
cmps
pushf
cwde
bound
shl
mov
in
iret
lds
in
mov
enter
imul
add
gs
adc
sbb
sahf
fwait
les
call
push
xor
mov
add
inc
adc
add
retf
or
cmp
xchg
leave
aas
jo
inc
mov
es
push
aaa
sub
push
xor
and
(bad)
out
push
mov
and
repz
push
or
loopne
arpl
das
repnz
test
mov
clc
inc
mov
scas
sub
lds
sub
outs
test
or
loopne
ins
mov
mov
jb
call
mov
pusha
ss
inc
stos
xchg
mov
jmp
jle
inc
sub
adc
lahf
mov
test
(bad)
loope
dec
(bad)
(bad)
push
xchg
dec
sbb
cdq
cmc
gs
jne
enter
ficom
push
pop
mov
fidivr
iret
lock
or
mov
std
pop
and
imul
push
add
fprem1
push
mov
push
lods
call
mov
lea
es
(bad)
rcl
mov
jp
sbb
and
mov
cmp
pop
lods
jo
test
xchg
fwait
sti
enter
dec
test
xchg
ins
test
je
or
or
mov
paddw
int
cmp
outs
data16
fiadd
push
mov
fdiv
iret
movs
es
jno
sub
idiv
jmp
out
and
dec
inc
add
pop
aas
jl
pop
and
jbe
into
sbb
xchg
fdecstp
mov
jmp
(bad)
jle
data16
in
xchg
scas
sub
dec
jmp
xchg
jg
aad
add
dec
pushf
add
inc
int3
in
popa
enter
cdq
or
xchg
sub
popa
sub
outs
mov
inc
jecxz
jl
sub
mov
push
cmc
js
call
das
add
push
(bad)
lds
adc
cmp
add
paddusw
and
bound
test
lock
gs
std
mov
in
inc
mov
jmp
pop
jge
adc
movs
xchg
xor
push
lods
xchg
mov
adc
out
or
push
fnstsw
sub
mov
mov
xor
out
mov
into
ret
or
ins
call
mov
push
add
dec
mov
dec
ss
ss
cmp
cdq
(bad)
sbb
cdq
sbb
adc
test
clc
shr
sbb
inc
jno
dec
mov
sub
repz
adc
add
sbb
mov
mov
data16
test
push
xor
hlt
pushf
pop
push
scas
fadd
cmps
(bad)
fidivr
dec
sbb
les
jmp
inc
pop
mov
mov
mov
pop
ror
jno
enter
not
pop
inc
and
(bad)
or
and
sub
int3
cld
loope
enter
mov
and
mov
imul
addr16
out
ficomp
stos
dec
push
xchg
les
test
jp
mov
jae
fs
or
push
or
sbb
int
or
pop
mov
into
xchg
inc
mov
pop
mov
mov
shl
pusha
sbb
test
mov
and
jg
jns
out
push
jecxz
dec
leave
or
xchg
xchg
adc
stc
cmp
neg
test
or
xchg
push
retf
ret
fldcw
pop
(bad)
lock
mov
ficom
test
sub
xchg
mov
stos
cli
adc
cmps
mov
pop
js
inc
push
xchg
rcr
adc
sar
xchg
mov
xchg
movzx
popaw
outs
shl
add
or
ja
add
dec
inc
sbb
enter
inc
in
pop
and
add
ficomp
jo
lods
lahf
sbb
fwait
sub
pushf
cwde
test
repnz
sar
sbb
mov
push
scas
icebp
mov
push
int3
(bad)
nop
retf
js
jnp
(bad)
dec
add
les
inc
jne
sub
and
hlt
aas
push
std
rcr
ins
xchg
mov
or
cmp
push
out
adc
cmp
inc
sbb
mov
in
aaa
mov
sub
inc
mov
mov
sbb
sbb
loope
(bad)
dec
sbb
loop
inc
loopne
fs
das
out
(bad)
push
sub
(bad)
pop
cmp
inc
xor
lods
popa
lds
dec
and
out
mov
sub
mov
jo
jmp
int
es
pop
enter
jnp
call
iret
mov
xlat
inc
lea
daa
shr
fdivr
sbb
addr16
sbb
test
je
sbb
sbb
add
mov
cli
test
dec
add
dec
pop
popa
movs
and
mov
in
adc
stos
mov
scas
jle
xor
(bad)
out
or
in
add
outs
xchg
shl
sbb
sbb
inc
ficom
movs
(bad)
sahf
cmp
or
mov
popf
push
(bad)
lds
ret
xor
fbstp
sub
xor
inc
fst
adc
mov
mov
sbb
push
int3
mov
sbb
sbb
mov
cdq
pop
ret
lea
fiadd
inc
ins
or
xchg
ja
mov
dec
loop
push
inc
mov
vmovntps
sahf
ds
ja
cmps
das
int
scas
jo
sbb
call
mov
pop
cmp
or
cmp
xchg
stos
mov
aas
sub
jns
call
movs
jo
in
test
push
xchg
fstp
cmp
or
jb
sti
aaa
adc
jge
inc
outs
mov
popf
mov
add
cli
cwde
aad
mov
outs
add
sub
sbb
cwde
bound
pop
inc
cmp
rcpps
xor
in
xlat
lock
and
movs
add
addr16
loope
push
rcl
aad
icebp
sbb
test
jp
imul
xchg
mov
loopne
xlat
in
push
in
test
int
jmp
jge
push
jge
ret
push
rcr
ror
pushf
jmp
mov
sub
(bad)
aaa
hlt
cmp
mov
mov
push
cmovo
fld
push
movs
or
mov
int3
fxch
cmc
xor
sti
mov
jmp
mov
cmp
adc
enter
mov
pusha
xor
scas
pop
mov
sahf
adc
sub
aaa
mov
add
push
sar
pop
push
xor
(bad)
pusha
dec
in
jae
or
ret
scas
mov
cmp
xchg
inc
in
mov
mov
fs
xor
push
jmp
fcom
mov
xor
in
dec
cmovp
push
or
test
mov
xor
js
dec
outs
mov
mov
mov
inc
cmp
pop
push
retf
xchg
mov
fcomp
pop
push
and
fld
(bad)
add
lods
and
add
lods
sub
jl
mov
xchg
shl
popf
rcr
mov
xor
cwde
pop
fwait
adc
jp
fstp
xor
cmps
inc
inc
cmc
dec
mov
xchg
and
call
les
aaa
xor
cli
js
lods
mov
mov
dec
jecxz
sti
push
add
adc
pop
xchg
aaa
sbb
dec
cmp
mov
xor
mov
inc
and
xchg
mov
sbb
cmp
test
lds
(bad)
pop
les
sub
fcomp
loopne
dec
or
(bad)
stos
xchg
leave
and
or
jns
cdq
add
sub
into
cli
jae
add
imul
push
movs
cmp
or
ins
lods
mov
shr
jbe
adc
rcl
jle
enter
mov
adc
xor
mov
push
pop
xchg
pop
adc
stos
jae
jnp
mov
fdiv
dec
jno
test
test
call
es
pop
inc
jne
out
or
mov
lahf
inc
sbb
lea
inc
adc
movs
mov
and
outs
pop
out
js
out
nop
sti
pop
adc
neg
fldenv
test
fidiv
bound
cmp
fmul
mov
mov
xchg
nop
std
mov
rcl
pop
mov
cmp
xchg
enter
fistp
xchg
gs
mov
mov
jo
cmp
pop
je
mov
ds
nop
inc
pusha
mov
imul
in
loopne
call
pop
(bad)
loop
and
int3
push
gs
push
test
xlat
addr16
in
scas
in
test
pop
inc
test
mov
lods
arpl
fcomp
popa
es
aam
call
inc
js
aam
js
loopne
out
sbb
in
cli
xchg
mov
movs
lds
and
mov
add
cwde
cmp
mov
jbe
push
loope
mov
dec
xchg
xor
scas
cmp
aad
pop
sub
aad
sti
ret
mov
inc
cs
mov
xlat
fisub
ja
shr
hlt
ss
and
or
into
ja
les
pusha
dec
cmp
fild
sbb
jge
add
push
pop
mov
add
inc
inc
lea
add
test
adc
sub
cmp
in
test
call
xor
aad
adc
test
inc
rcl
ret
adc
inc
jmp
cmps
popa
pop
pop
retf
les
xchg
hlt
mov
fisttp
loopne
repz
push
or
xchg
das
push
and
mov
loopne
out
cmc
fadd
sbb
push
xchg
jmp
or
js
adc
rcr
xchg
mov
inc
sar
dec
mov
mov
outs
mov
stc
fucomi
or
jmp
inc
lea
jl
adc
inc
mov
jle
cdq
mov
out
or
in
sahf
lods
add
int3
fbstp
shl
mov
mov
xchg
push
aad
push
jl
sbb
mov
cmps
inc
adc
arpl
sbb
cmp
leave
pop
fstp
ret
add
int3
dec
fnsave
jnp
js
loopne
lods
out
adc
xchg
cld
add
in
iret
movs
and
sbb
scas
jg
sbb
inc
mov
in
pop
mov
sbb
mov
jo
call
xor
or
fcmove
fs
cli
jae
aad
xor
mov
pop
xchg
jno
call
inc
jp
dec
xor
popf
mov
adc
push
mov
movs
lahf
adc
add
mov
out
rcl
pushf
jmp
(bad)
xor
xchg
sete
xor
ret
popf
pusha
in
jmp
loopne
pop
into
adc
out
stos
xchg
mov
icebp
retf
mov
cs
mov
out
add
adc
add
arpl
mov
or
inc
dec
dec
lahf
and
mov
dec
repnz
(bad)
cs
in
push
sub
push
mov
arpl
inc
test
out
and
dec
xchg
push
leave
xor
out
mov
cmps
mov
jle
shl
stos
imul
into
dec
sbb
int
addr16
xchg
xchg
jl
jp
rcr
jp
mov
sub
cmp
imul
ror
cwde
les
shl
and
cwde
mov
aad
js
leave
adc
adc
or
sahf
shr
div
retf
shl
sbb
mov
popa
mov
lock
inc
cs
fiadd
int
repz
mov
stos
lods
jb
mov
dec
jmp
or
shl
jg
fdiv
(bad)
xor
in
dec
push
mov
cmps
gs
add
jne
pop
xor
xchg
cmps
imul
(bad)
xor
arpl
jb
sbb
cmps
push
xchg
mov
dec
loop
popa
xchg
into
adc
mov
test
retf
ds
cmp
inc
add
ret
in
sub
fild
lods
nop
lds
les
rol
mov
sbb
cmp
and
dec
cld
or
xchg
fwait
aas
push
adc
jae
pop
inc
daa
retf
inc
xor
push
repz
dec
outs
jae
mov
and
pusha
mov
sub
cmps
ret
cmp
mov
pop
pop
cmp
popf
mov
in
pop
(bad)
xchg
jge
inc
and
mov
push
mov
jnp
push
(bad)
fmul
sar
mov
fwait
adc
daa
cmp
mov
fcomp
int3
mov
or
push
dec
pop
inc
div
push
xchg
inc
aad
inc
pop
cmc
adc
ss
sub
scas
xor
mov
cmp
jge
(bad)
call
iret
mov
lea
pushf
pop
call
mov
shl
jmp
push
js
movs
fidiv
xchg
push
mov
adc
and
ret
sti
sbb
jb
cmps
bnd
xlat
in
test
inc
cs
jp
repz
in
imul
or
(bad)
and
lea
add
rcr
jp
dec
push
jno
ja
xchg
loope
adc
xchg
sti
xchg
(bad)
mov
inc
jmp
mov
dec
pushf
pop
push
and
inc
or
xor
ins
inc
push
sub
(bad)
adc
sub
mov
out
pop
adc
mov
(bad)
imul
mov
ror
loop
retf
aam
ins
mov
jecxz
bnd
sti
sub
sub
aam
mov
push
cmps
neg
add
dec
imul
jg
mov
bound
call
mov
jmp
inc
repnz
stos
lods
je
lds
xor
das
loop
push
shl
in
xor
adc
push
fwait
mov
mov
ins
retf
dec
cmp
jne
fldcw
call
shr
pop
cmps
fldenv
cmp
mov
fstp
mov
push
sub
stos
sub
mov
sub
mov
stos
fdiv
push
mov
or
and
ins
jbe
jmp
xlat
cli
add
pop
mov
lock
jg
mov
icebp
push
fistp
or
or
icebp
mov
push
cli
or
jecxz
xchg
mov
scas
sub
pushf
rcr
(bad)
cmp
test
inc
pop
jae
pusha
and
lds
sbb
add
adc
cmp
rol
and
pop
mov
inc
icebp
aad
or
repnz
mov
mov
fxch
loopne
push
and
aam
mov
sbb
mov
hlt
es
dec
sub
mov
adc
retf
scas
cmps
dec
sti
test
shr
xor
cld
(bad)
scas
mov
ss
bound
or
in
push
and
fld
and
dec
lods
fst
call
mov
jne
adc
mov
pushf
out
call
movs
pop
mov
retf
in
pusha
iret
fnstcw
cmp
xor
mov
js
lock
or
pop
cmp
cdq
jp
in
or
or
adc
scas
stos
leave
mov
lea
push
addr16
jo
lea
int
push
and
push
mov
adc
sahf
pop
jge
dec
jle
ins
setle
xor
push
call
aaa
mov
ss
mov
xor
cdq
jmp
or
cdq
dec
imul
jno
pop
cmp
gs
push
imul
in
inc
movs
mov
mov
test
rcr
ror
mov
mov
sub
pop
or
lahf
mov
mov
pop
mov
xchg
push
mov
sbb
and
xchg
pop
cmp
mov
xor
cmp
inc
fst
ret
arpl
jl
ret
mov
xchg
pop
sbb
xlat
repz
or
push
jg
es
sbb
sar
inc
lods
xchg
loope
jno
add
inc
(bad)
push
push
ss
dec
call
cmp
jmp
dec
hlt
sub
sbb
lds
dec
adc
popf
cmp
pushf
int3
pop
(bad)
add
push
add
xor
add
xchg
add
inc
xchg
mov
pop
dec
xor
jge
aaa
mov
push
mov
push
dec
mov
sbb
inc
push
aaa
inc
push
mov
pop
dec
xor
push
pop
xchg
int3
lahf
sbb
push
jmp
push
push
ficom
retf
loope
pop
pop
mov
adc
sub
popa
push
mov
je
aam
or
icebp
or
dec
out
movs
push
lods
cld
fucomp
dec
pop
xchg
push
mul
lds
sbb
adc
dec
mul
mov
xchg
mov
data16
cmps
mov
sbb
popf
mov
jecxz
in
(bad)
das
cmp
push
movs
cmp
xchg
pop
sahf
outs
out
movs
jecxz
jne
mov
je
push
pop
outs
dec
movs
mov
bound
xor
int3
sbb
xchg
xchg
adc
sub
dec
(bad)
inc
inc
jno
(bad)
addr16
or
test
cmp
mov
xchg
push
ins
mov
aad
cmp
add
mov
sub
js
or
bound
iret
xchg
mov
mov
in
cmc
push
cli
lock
xchg
aad
mov
popa
ins
xlat
retf
mov
dec
xchg
and
mov
cmps
aad
sbb
sbb
pop
mov
sub
jle
adc
call
les
dec
test
fisttp
jne
dec
and
lahf
pop
add
in
cs
fild
push
mov
pusha
pop
sbb
jge
and
add
stos
cmp
fsubr
cdq
xchg
mov
xlat
shl
sbb
pop
mov
or
mov
mov
les
(bad)
or
add
enter
sub
sbb
xor
loopne
dec
aad
xor
add
outs
mov
sub
xchg
xor
aas
sti
mov
fs
in
pop
cmps
sbb
jno
pop
cmp
or
rcl
push
sub
call
imul
fld
loope
hlt
adc
jo
test
mov
sti
rcl
pushf
adc
cs
sahf
ficom
(bad)
jmp
or
lea
xchg
popf
jle
pop
fistp
das
enter
test
rcl
mov
add
out
or
hlt
or
hlt
sti
(bad)
jge
pop
cmp
mov
xchg
ds
mov
scas
test
mov
pop
mov
retf
jnp
pop
in
lahf
loopne
(bad)
cmps
ret
adc
or
movs
sbb
aad
inc
ja
or
mov
inc
mov
mov
div
xchg
or
les
sahf
dec
repnz
xor
(bad)
in
inc
adc
jle
bnd
iret
mov
push
in
pusha
int3
(bad)
add
ret
and
test
and
sub
xchg
and
inc
nop
xchg
cmp
push
inc
xor
pop
mov
cmps
push
mov
jmp
push
mov
jns
lds
pushf
push
cmp
jns
pop
cmps
cmps
imul
fld
xor
cmps
out
idiv
test
mov
push
or
mov
(bad)
mov
adc
fwait
add
outs
xchg
sahf
push
nop
push
cs
inc
gs
int3
or
in
inc
in
cmp
dec
push
fidivr
push
xchg
xor
(bad)
mov
xchg
dec
hlt
(bad)
js
adc
scas
pop
sbb
cmp
pop
out
xchg
lods
jo
push
ins
jno
(bad)
xchg
(bad)
and
aas
out
xor
rol
cld
aaa
xor
cmp
push
add
nop
push
enter
xchg
push
daa
push
clc
inc
out
mov
cmp
sub
xor
shl
movs
pop
sub
xor
push
mov
add
adc
xor
arpl
fidivr
sub
ins
scas
cmp
jp
int
push
push
rcr
xor
cmps
cs
in
cmp
push
fiadd
jne
(bad)
add
sbb
pop
fistp
inc
and
pop
sbb
in
or
dec
sub
mov
push
(bad)
ds
outs
xor
js
stos
in
fnsave
mov
stos
dec
test
mov
aaa
add
jl
movs
fadd
imul
test
inc
ret
cmp
data16
scas
je
push
or
pop
popa
(bad)
fist
aad
out
call
push
pop
sbb
add
es
sub
mov
inc
sub
push
out
xor
imul
mov
push
jp
mov
inc
pop
js
sub
and
and
lods
add
cmp
push
popf
inc
jmp
cmp
sti
mov
add
mov
jns
fcomp
jecxz
dec
or
push
cli
das
adc
and
push
or
xchg
push
sub
xchg
call
sub
sub
xor
push
xchg
cmp
push
mov
mov
out
shr
sar
jae
add
das
mov
movs
ja
xchg
jns
stos
dec
add
lods
dec
outs
out
loop
and
xor
and
iret
mov
das
scas
mov
sar
jnp
shr
sbb
or
mov
loopne
mov
xchg
(bad)
ret
adc
ds
xchg
cmps
jbe
adc
outs
loop
push
sub
jae
repz
push
sbb
and
push
lock
ja
retf
xor
push
pop
cmp
aam
enter
popf
inc
stos
aad
sbb
ds
and
jecxz
inc
cli
jbe
bound
test
stos
jb
(bad)
fsubp
jns
retf
mov
cdq
fdiv
es
(bad)
pop
sbb
cmp
dec
inc
mov
mov
(bad)
aam
jl
popw
dec
xor
in
adc
sub
pmullw
(bad)
ja
adc
inc
pop
sbb
(bad)
popf
mov
inc
sbb
in
bound
mov
imul
out
mov
cmp
adc
lock
add
jp
mov
pusha
xchg
mov
daa
cmp
and
pop
clc
popa
test
xor
sub
adc
cmp
outs
(bad)
mov
test
bound
daa
mov
dec
out
jbe
sbb
push
mov
pop
in
mov
pop
call
mov
je
inc
fdiv
mov
push
sbb
idiv
mov
xchg
in
mov
adc
js
add
mov
push
push
fs
aas
jl
loop
mov
std
mov
push
repnz
int
ja
out
cmp
mov
cli
xchg
ror
push
data16
xor
jo
int3
xor
in
sub
ficomp
lds
in
jp
jl
and
pop
xor
loop
mov
add
fs
retf
sub
mov
sahf
icebp
outs
mov
pop
rcr
jno
jae
push
shl
stos
dec
mov
ins
ins
mov
bound
fcom
inc
and
cmp
pop
pop
ror
cmc
bound
mov
dec
(bad)
cmc
int3
mov
and
loope
dec
ret
inc
lds
aas
aad
adc
mov
or
cwde
rcl
cmps
mov
adc
cmps
rol
loop
sub
and
sti
jp
jmp
call
retf
or
cmp
shl
cmp
leave
(bad)
ins
push
loope
lds
ins
mov
adc
mov
pop
arpl
xor
sbb
sahf
jmp
pop
rol
and
mov
fsub
arpl
sti
push
ret
pop
jb
aaa
adc
jne
sub
push
mov
or
push
outs
mov
and
lds
jne
imul
cmp
cwde
(bad)
pushf
xchg
jecxz
jb
xchg
ins
lock
mov
push
xor
ret
mov
aam
sub
or
mov
inc
and
fld
in
cmp
mov
retf
(bad)
pusha
vmaxss
xchg
xchg
mov
pop
lock
xor
retf
aam
cmp
stos
inc
pop
nop
lods
scas
push
les
int3
jg
ss
sub
enter
push
iret
or
lods
jmp
sahf
and
outs
add
push
mov
ficomp
movs
push
int
stos
ins
pop
add
mov
ret
cwde
rcl
in
adc
xchg
sahf
push
(bad)
cld
push
add
xchg
bound
mov
xchg
movs
jecxz
adc
int
and
call
inc
push
fstp
pop
sub
push
addr16
adc
mov
adc
mov
gs
xchg
lods
xchg
shr
mov
and
rcr
or
jns
and
sbb
pushf
pop
push
and
push
ret
mov
in
jmp
push
sub
loopne
add
cmp
mov
mov
add
or
fnstenv
lods
ins
cld
mov
fld
xchg
pop
stos
and
(bad)
cmps
or
repz
mov
fninit
int3
sbb
test
and
sbb
dec
ret
push
sbb
les
mov
iret
(bad)
imul
jmp
test
in
mov
fidivr
jb
fwait
mov
dec
push
mov
bound
xor
xchg
xor
cmps
sub
cmp
jle
push
pop
mov
sub
movs
das
mov
ja
lods
neg
mov
mov
repz
jmp
or
and
dec
enter
mov
and
xor
mov
leave
xchg
popf
mov
addr16
mov
into
nop
cmp
add
iret
sbb
jge
jmp
and
in
(bad)
je
mov
jmp
fidiv
xchg
xor
or
add
jae
rcr
add
nop
loope
jmp
movntq
push
cli
(bad)
xchg
loopne
imul
mov
jbe
pusha
aad
mov
cmps
iret
adc
sub
es
and
push
loope
and
mov
(bad)
scas
(bad)
mov
add
iret
fwait
push
(bad)
sub
add
or
lock
xchg
dec
jmp
push
pop
sbb
xor
adc
cmps
push
dec
xor
xchg
mov
dec
(bad)
jb
pop
sbb
sbb
lds
popf
lds
adc
sbb
enter
sbb
mov
je
sub
mov
and
dec
call
xor
inc
pop
push
outs
mov
jl
jle
pop
xor
ja
in
jp
pop
fadd
mov
mov
jmp
cwde
jne
sbb
enter
call
ins
mov
repnz
push
inc
mov
aam
lea
dec
ja
mov
inc
pop
ja
les
hlt
inc
pusha
xchg
push
jb
inc
lods
push
inc
cmp
bound
aaa
shl
sti
mov
push
iret
mov
popa
or
jp
scas
mov
cmp
or
out
jno
(bad)
xor
addr16
dec
mov
clc
dec
mov
jae
ja
mov
test
addr16
xchg
stos
iret
repnz
sub
(bad)
xor
push
push
push
adc
movs
fcom
add
lock
pop
cmp
mov
(bad)
cmps
sbb
aad
sbb
xchg
add
icebp
stos
movs
fs
nop
mov
sbb
call
sahf
push
(bad)
xchg
jb
xor
or
jnp
fwait
(bad)
pop
pop
movs
shr
adc
cmp
push
dec
es
out
das
sahf
fcomp
and
dec
fisttp
ret
xor
cmp
adc
or
jo
or
dec
repnz
dec
ffree
push
pop
mov
xchg
jg
pop
in
fsubr
lock
into
(bad)
outs
ja
dec
pusha
xchg
push
sbb
xor
mov
inc
mov
push
or
xchg
shl
ret
mov
stos
aam
xchg
js
repz
mov
outs
jno
and
je
stc
xlat
and
call
mov
enter
mov
or
cli
cmps
cmp
jne
stc
fbstp
cmp
mov
adc
jecxz
sbb
xchg
call
mov
in
or
sbb
jge
pop
add
js
outs
inc
sbb
stos
sbb
ins
push
sbb
cmp
lahf
jnp
aad
lahf
aad
fstp
sub
sbb
jne
aaa
js
jl
and
js
retf
popa
retf
push
adc
pop
mov
inc
imul
popf
dec
and
jae
inc
loop
jo
repnz
and
and
repnz
sbb
xor
lock
xchg
movs
xlat
call
push
push
retf
fst
pop
xchg
xlat
mov
xchg
(bad)
cdq
ds
sbb
and
mov
mov
imul
imul
mov
dec
jno
das
inc
outs
xor
out
stc
add
fcmovnbe
dec
add
jnp
xchg
test
mov
or
fisubr
mov
dec
fist
dec
cdq
mov
ret
sbb
sbb
xchg
xchg
push
xor
pop
call
mov
cmp
mov
dec
add
xchg
jbe
push
sub
mov
xor
or
adc
scas
test
hlt
sub
and
int3
jge
aas
sbb
cmp
js
adc
repz
and
cmps
aad
hlt
sub
cmps
xchg
push
and
push
jb
sbb
add
js
sbb
xor
xor
pop
or
(bad)
jle
cmp
push
adc
xchg
test
loopne
lea
push
int3
repz
pcmpgtb
sbb
sub
hlt
gs
jp
push
xchg
out
cwde
repz
push
or
jmp
stos
ins
jo
in
hlt
xor
leave
push
push
or
dec
pop
mov
push
mov
mov
cld
push
inc
cmps
dec
loopne
fwait
jae
sub
pop
xrelease
(bad)
jne
mov
inc
popa
sbb
dec
xchg
xor
dec
loope
cld
jno
jmp
add
bound
push
adc
cwde
std
int
or
xor
mov
inc
push
es
out
in
shl
add
lahf
pop
mov
das
fxch
pop
dec
dec
and
fwait
idiv
aam
jo
imul
hlt
mov
inc
sbb
dec
(bad)
test
out
call
adc
add
mov
sahf
lea
fwait
nop
loop
cmc
cli
jg
pop
dec
or
inc
add
cmps
inc
adc
ret
cld
pop
jno
pop
rcr
pop
mov
sti
arpl
jnp
movs
mov
add
mov
mov
and
loope
scas
int3
add
xchg
xor
add
outs
fsubr
fild
outs
add
je
movs
dec
cmps
xchg
jne
dec
cmp
or
hlt
dec
and
lds
shl
shl
mov
cs
adc
add
jb
cmps
jl
cwde
nop
sahf
test
xor
int3
adc
test
shr
addr16
and
rol
mov
mov
stc
sahf
jno
sbb
inc
or
and
mov
adc
out
fmulp
mov
pop
lods
pop
call
mov
dec
cdq
in
jbe
sbb
inc
mov
push
pop
fild
jecxz
cs
mov
adc
add
mov
mov
sub
retf
rcr
and
xchg
(bad)
xlat
pop
sub
fild
cmp
je
es
push
(bad)
adc
cmp
scas
sar
xor
jp
outs
pop
mov
mov
call
and
add
jp
add
pop
adc
(bad)
mov
retf
mov
dec
cmps
pop
mov
mov
cmp
or
sub
into
ror
das
ins
cmp
dec
ss
mov
push
dec
and
pop
dec
inc
jmp
push
push
movs
data16
inc
das
aaa
clc
xor
mov
jge
inc
ret
adc
sbb
sub
das
js
jmp
sbb
ficom
cmp
mov
(bad)
out
test
and
jne
in
push
shl
adc
pop
jg
pop
fmul
mov
ror
std
mov
jmp
push
sub
fsubp
pop
loope
not
adc
mul
push
retf
mov
sbb
shl
pushf
cmp
mov
in
in
daa
jg
xchg
xchg
sbb
xor
mov
test
xor
xor
test
cmp
xor
cs
in
and
or
clc
(bad)
cmp
and
xor
stc
das
gs
(bad)
lock
adc
pop
js
xchg
and
cmp
fisubr
and
cld
call
adc
test
daa
(bad)
dec
in
xchg
mov
outs
adc
adc
mov
jmp
test
xchg
pop
pop
jl
mov
xchg
mov
lods
jecxz
shl
call
sub
sahf
inc
aaa
call
jae
or
data16
in
ret
mov
in
je
je
inc
or
lods
aad
iret
mov
jo
nop
icebp
push
add
fmul
nop
pop
push
lods
push
sub
mov
push
cmp
add
mov
mov
popa
gs
pop
dec
xlat
mov
aad
fadd
push
add
cmp
fisttp
popf
pop
pop
add
mov
pop
fnstcw
ret
sub
retf
fcom
sbb
lods
dec
ds
inc
inc
and
mov
xchg
mov
xor
xchg
mov
or
sbb
stos
call
jge
dec
sub
inc
mov
inc
retf
ret
cmps
mov
sahf
adc
sbb
test
mov
xchg
mov
adc
xor
sub
ins
sbb
or
jmp
or
adc
fadd
push
push
icebp
dec
pop
call
jo
or
stos
fucomip
fst
mov
xor
jge
call
scas
cmp
jmp
push
fnstenv
hlt
adc
xchg
or
lods
in
mov
jb
ret
jae
cmp
shl
and
sub
ins
nop
shl
or
(bad)
mov
sbb
and
pop
inc
retf
lods
jmp
cli
and
cmp
cmc
add
pusha
mov
and
out
sbb
rcl
cmps
inc
(bad)
cmp
pop
add
pop
movs
jae
test
add
(bad)
mov
out
fldenv
nop
jb
jle
js
dec
popf
test
push
sbb
push
mov
jmp
loop
dec
or
cwde
jno
repnz
xchg
leave
lock
movs
repnz
nop
fst
int
fistp
adc
mov
sub
(bad)
adc
iret
out
mov
push
repz
jbe
sub
and
ss
jbe
dec
enter
pop
mov
call
push
mov
sub
test
pop
jae
push
jb
xchg
xchg
mov
jl
or
cmps
sti
push
sti
out
int3
ss
out
cmp
mov
xor
sub
icebp
call
fsub
addr16
push
jmp
jne
cmp
and
sbb
sbb
xchg
mov
in
cmp
cwde
clc
pushf
inc
enter
cmp
jl
test
inc
inc
inc
dec
inc
ds
pop
xchg
inc
push
nop
iret
icebp
fnsave
and
loop
jbe
aam
cmp
mov
in
jns
stos
jae
shl
sub
out
push
stos
cdq
sti
call
adc
jmp
aam
stc
ret
xchg
inc
or
jbe
and
push
repz
popa
data16
std
cmps
push
add
out
bound
nop
xchg
test
mov
xor
add
add
aaa
xlat
xor
scas
pop
pop
call
gs
lods
call
pop
pop
xchg
and
cmps
xor
or
in
pop
les
dec
push
movntss
test
call
mov
cmp
rcr
iret
jb
mov
popa
ins
xor
out
(bad)
test
data16
sbb
sbb
lods
jecxz
pushf
das
xchg
or
(bad)
pop
fbstp
xchg
nop
pop
sub
idiv
xchg
sub
jecxz
or
inc
sbb
jge
mov
movs
add
ds
mov
pop
(bad)
dec
leave
enter
stc
(bad)
repnz
xchg
lock
jecxz
aam
dec
mov
pusha
mov
test
mov
lea
dec
mov
daa
loopne
dec
fwait
movs
dec
pop
hlt
inc
dec
mov
icebp
fcmovnb
(bad)
inc
cmp
mov
xchg
jns
shl
call
mov
fistp
sbb
xor
dec
adc
loopne
push
adc
iret
pop
jb
mov
cmp
popf
gs
mov
cmp
xchg
mov
sbb
cmp
push
fild
adc
ins
popf
(bad)
sbb
xchg
xchg
xchg
dec
addr16
(bad)
out
lock
or
mov
in
push
sbb
gs
sar
sbb
(bad)
stc
ins
inc
test
mov
xor
pop
dec
or
add
arpl
sub
add
sub
sbb
rcl
xchg
sbb
das
and
dec
cli
mov
pop
movs
addr16
push
cmp
(bad)
sub
lods
jle
lahf
xchg
cmps
mov
mov
or
(bad)
xchg
or
push
sub
push
cli
cmps
inc
push
sbb
fisubr
xchg
sbb
and
call
(bad)
xor
test
mov
shr
mov
xchg
cmp
mov
or
addr16
mov
cwde
jns
clc
push
pusha
jl
fild
push
outs
jl
dec
and
add
adc
jp
push
xchg
pop
jle
vmovdqa
mov
mov
inc
mov
fwait
jb
pop
dec
sub
jae
sbb
enter
add
ret
jge
push
lds
jnp
dec
xchg
jl
dec
xor
scas
or
xlat
push
push
loopne
lods
aas
push
adc
in
pop
aad
(bad)
jle
and
cmps
jne
addr16
fist
ret
push
retf
or
inc
outs
in
(bad)
dec
pop
push
test
and
inc
or
cwde
add
imul
sbb
bnd
mul
mov
loopne
xchg
adc
dec
loop
cs
inc
add
add
mov
dec
mov
les
test
cld
inc
nop
sub
shl
push
aaa
sbb
or
push
or
rol
xchg
daa
rol
pop
repz
out
xchg
push
pop
adc
mov
adc
out
retf
xchg
xor
jle
(bad)
cmp
xchg
sti
movs
dec
sbb
push
adc
iret
inc
rcr
lahf
jbe
jecxz
pusha
xor
(bad)
adc
inc
push
ja
pop
jnp
adc
xor
xor
and
test
jae
inc
sbb
fnsave
movs
pop
mov
dec
js
mov
mov
sub
out
sub
daa
test
lahf
out
xlat
stos
lods
mov
mov
cs
repz
inc
into
call
data16
inc
jecxz
fcmovb
or
les
(bad)
dec
shl
hlt
lods
gs
pushf
jecxz
sbb
dec
(bad)
jecxz
and
fcomp
and
dec
ret
xchg
xor
push
sub
push
shl
add
addr16
push
mov
pop
dec
jbe
int3
mov
adc
dec
mov
ret
sub
outs
mov
cmp
push
xchg
fcomp
pop
fwait
shl
add
psubd
xlat
xchg
push
call
sub
sti
cmp
dec
jp
sub
call
push
add
xchg
inc
ja
pop
push
push
mov
push
stos
(bad)
sahf
mov
or
pop
in
(bad)
lea
nop
jb
and
xchg
xstore-rng
cmps
lds
jb
sbb
mov
push
xor
les
xor
iret
xchg
and
or
jmp
dec
jmp
aaa
mov
push
push
inc
dec
adc
mov
jg
movs
pop
lods
lea
inc
mov
jp
mov
push
fs
leave
dec
fdivr
fbld
xchg
sub
mov
stos
or
inc
push
test
pop
daa
in
in
lods
enter
adc
cmp
mov
lea
dec
popa
ins
push
cwde
push
dec
mov
(bad)
pop
mov
and
je
push
adc
inc
imul
scas
xchg
iret
push
test
cmps
les
out
inc
aam
test
jbe
xchg
jae
mov
lahf
cmp
pop
in
mov
shl
inc
pop
enter
push
lods
sar
push
mov
nop
pop
xchg
xor
sub
push
fwait
pop
push
stos
jbe
mov
and
stc
mov
or
ja
fdivr
in
call
pop
fistp
jbe
pop
test
xchg
rol
xchg
xchg
jle
faddp
pop
cmp
mov
pop
pop
jp
inc
mov
div
fadd
add
pop
cmc
arpl
mov
jl
dec
add
inc
and
dec
jne
pop
mov
in
jae
xchg
xor
mov
pushf
sbb
pop
ss
mov
xchg
fmul
sar
movs
jg
mov
or
inc
dec
mov
mov
cs
mov
loopne
ins
or
sub
outs
leave
das
outs
shl
cmps
fimul
fs
nop
retf
adc
ins
cmps
mov
mov
jno
jg
cs
pop
call
(bad)
sbb
or
mov
sbb
dec
call
sub
mov
je
mov
cmc
pop
sbb
xchg
fisub
cmp
pop
inc
sbb
sub
out
mov
fild
fcmovnu
(bad)
stc
jo
xlat
sub
mov
jae
sti
or
test
test
scas
ret
push
sub
repz
or
into
pop
jae
retf
aaa
sub
pop
lds
mov
(bad)
sar
mov
cwde
in
add
dec
not
lea
inc
in
jecxz
pop
imul
shl
sbb
or
ins
ds
pop
cli
dec
out
mov
fsub
sub
sbb
pop
loopne
stos
ret
sbb
pop
loopne
mov
movs
inc
ret
push
adc
div
and
or
add
inc
rcr
adc
scas
mov
xor
sbb
cld
pop
(bad)
push
ror
imul
and
test
or
movs
addr16
(bad)
cmps
imul
movs
fcom
into
jle
fwait
xor
add
xor
repz
xor
and
inc
outs
sbb
sbb
dec
mov
loope
fwait
sbb
xchg
cmc
clc
mov
daa
nop
rcl
aaa
and
mov
mov
sti
push
fistp
and
mov
movs
and
ins
push
sbb
les
(bad)
mov
out
ins
dec
push
jg
jae
aaa
(bad)
jecxz
jle
pop
add
ins
stos
mov
xchg
or
fs
or
cmps
scas
jnp
xchg
cmps
adc
mov
pop
retf
fwait
enter
jno
(bad)
cmps
jge
retf
into
scas
fstp
(bad)
fdivr
dec
lahf
ret
push
out
pop
ret
aam
sbb
ret
sbb
mov
(bad)
into
jno
shr
and
outs
mov
mov
loopne
xchg
pop
inc
stos
pop
lahf
pop
add
les
mov
aas
jbe
add
fsubr
retf
into
scas
js
rcl
push
pushf
retf
call
jnp
frstor
int3
push
ds
arpl
data16
stc
cmp
mov
ret
std
inc
and
mov
xchg
add
enter
loope
outs
mov
fst
dec
or
repz
xchg
mov
out
inc
loope
mov
and
shr
in
lds
xor
sub
jmp
test
xchg
push
js
pop
rcl
sti
scas
and
xchg
mov
call
cmp
cs
cmp
ret
xor
jle
call
je
dec
cmp
push
stos
daa
cmps
pop
cmp
cmc
mov
cmp
jae
mov
pop
call
ret
(bad)
daa
mov
cmp
bound
xor
fs
sbb
dec
repnz
sahf
jp
outs
repnz
imul
mov
push
movq
fidiv
add
mov
push
rol
lea
das
or
jle
push
(bad)
xor
icebp
test
pop
out
dec
shl
mov
xor
xor
scas
std
ficomp
dec
mov
cmc
repnz
into
lods
mov
mov
dec
dec
and
fcmove
out
cmp
and
(bad)
adc
mov
adc
fild
pop
push
daa
fmul
pop
sub
movlps
call
mov
xor
ja
dec
aaa
mov
sbb
cmp
pop
sub
lods
enter
clc
sti
adc
fadd
in
pop
sbb
aaa
push
fdivr
fld
imul
inc
cmp
add
movs
mov
xchg
movs
sbb
pop
stc
(bad)
mov
adc
inc
inc
mov
cmp
push
aad
add
bound
scas
ret
jne
add
xchg
pop
ins
aas
les
mov
dec
pop
fdiv
xchg
(bad)
js
je
or
push
inc
dec
mov
jmp
push
into
push
fcom
mov
rep
jnp
mov
mov
les
xor
in
xchg
or
je
xchg
mov
cmp
shr
sbb
inc
pop
in
or
inc
mov
enter
ror
mov
jns
jl
fstp
or
rol
cmc
pop
and
call
shl
inc
pop
xor
mov
push
test
cwde
push
and
(bad)
cdq
bound
cmp
cdq
out
ret
stos
or
outs
cmp
cmp
test
sbb
mov
mov
punpckldq
add
lds
sahf
sbb
mov
xchg
rcr
jmp
sub
mov
push
mov
adc
mov
push
out
inc
xchg
sbb
pop
sub
pop
pop
aas
ror
mov
push
mov
sub
aas
enter
je
mov
xchg
mov
mov
mov
shl
mov
loop
and
imul
jmp
fs
sbb
xchg
and
pusha
int3
repnz
aas
(bad)
xor
jg
mov
jecxz
or
sub
shl
lock
fsub
mov
mov
bound
(bad)
dec
bound
int3
fidivr
fwait
test
shl
pushf
sub
sbb
and
mov
xor
mov
jmp
inc
imul
dec
cmovnp
jno
pop
icebp
push
adc
push
test
xchg
sahf
test
cmp
shr
dec
fist
jl
xor
jnp
or
push
mov
sbb
fwait
mov
enter
cs
out
adc
push
imul
inc
add
shl
cmp
sub
cmp
jne
retf
retf
repnz
or
rol
fstp
in
retf
xor
sub
or
and
mov
adc
mov
pop
xor
inc
cs
stos
mov
hlt
xchg
xchg
jb
out
loope
push
clc
leave
dec
cdq
add
imul
es
dec
push
mov
cmps
js
dec
jb
jmp
call
into
or
aad
jl
rcr
movs
cmp
out
mov
enter
sub
mov
mov
push
xor
pop
dec
arpl
dec
fcmovu
into
mov
adc
and
lahf
sbb
add
ret
mov
or
shr
js
stos
aas
ret
dec
jp
nop
xlat
pop
(bad)
cwde
add
popf
div
stc
fcomp
mov
out
sub
rcl
jl
ss
icebp
mov
push
test
shl
mov
mov
ins
mov
sahf
and
cli
jnp
sbb
push
jne
xor
sar
test
lock
push
ret
cld
retf
cmc
leave
loopne
ret
jo
push
or
and
cld
cdq
rol
fisub
xchg
push
inc
sbb
in
push
push
in
add
add
cmp
pop
aam
cmp
repz
cmp
sbb
push
das
clc
and
xchg
mov
xchg
and
push
adc
adc
and
(bad)
adc
adc
pop
dec
fidivr
bound
hlt
fistp
in
cmp
repz
sub
add
in
test
inc
cmp
dec
(bad)
adc
inc
scas
call
xchg
sar
pop
xchg
push
dec
dec
arpl
xchg
inc
ss
xchg
test
les
xchg
jbe
dec
adc
jge
aas
in
pop
xchg
mov
gs
push
cmp
js
(bad)
in
loop
ja
mov
popa
jmp
jne
test
adc
repz
lea
ret
xor
pop
ins
sub
mov
xor
mov
mov
or
mov
sub
xor
dec
outs
pop
mov
xchg
outs
ins
mov
mov
mov
out
mov
xchg
shl
xlat
ret
retf
adc
lds
fxam
pusha
fist
push
sub
inc
xchg
mov
jo
sub
imul
mov
ja
mov
adc
adc
fsubr
not
add
xchg
je
xchg
xor
push
push
fmul
pop
cdq
xlat
out
aaa
dec
and
mov
sub
fwait
ins
retf
mov
fs
cmps
mov
jmp
pop
and
fwait
out
test
je
pop
cmovl
std
xor
mov
lods
jo
and
xor
outs
repz
call
aas
call
push
cmps
xchg
push
sub
sub
sub
out
bound
pop
adc
movs
int3
inc
xchg
mov
sbb
and
add
push
xor
lahf
and
ins
xor
and
add
cmp
std
rcr
ja
jnp
cmp
ins
cmc
cmp
out
test
enter
inc
outs
mov
pop
lds
pop
stos
loopne
or
lahf
jecxz
arpl
or
xor
adc
push
js
cmp
pop
mov
adc
push
std
pop
pop
call
loopne
dec
rcr
mov
loope
and
sbb
mov
jecxz
repz
or
ficomp
sub
and
ss
xchg
in
jg
pop
mov
push
push
bnd
loope
jo
xchg
sub
fdivr
inc
pop
inc
mov
mov
xchg
xchg
ror
cli
fisubr
lahf
add
aam
cmp
div
psrad
daa
leave
mov
rcl
lods
mov
aam
aam
mov
dec
in
lods
fsub
push
fcomp
pushf
dec
inc
or
sbb
mov
lods
outs
push
ins
jns
loop
bound
fs
dec
adc
cmp
adc
lods
inc
mov
cmp
cs
retf
xchg
mov
dec
aas
jmp
sbb
scas
jne
sbb
adc
jmp
jmp
in
mov
ins
dec
jmp
inc
ja
pop
push
cmp
lea
sub
pop
jge
adc
add
enter
ds
dec
pop
jne
or
and
out
mov
mov
or
je
cld
push
imul
pop
call
loopne
sbb
fucom
out
lods
xor
pushf
inc
jle
cmp
inc
mov
sbb
sbb
int
loope
mov
push
pop
dec
ss
in
xchg
jae
sahf
xchg
movs
sahf
in
sbb
push
xor
mov
mov
cmp
aad
neg
mov
daa
call
add
sti
mov
inc
and
pop
test
sub
xor
scas
sub
cmc
aam
(bad)
cmp
pop
mov
shr
loopne
stc
scas
out
xchg
add
pop
cmp
loopne
out
retf
sub
in
out
push
sub
in
lahf
loopne
mov
nop
jo
mov
iret
push
dec
mov
imul
pusha
test
xchg
ja
sbb
dec
pop
out
jbe
xlat
aas
mov
cs
pcmpgtd
and
ds
test
or
loopne
push
cmp
(bad)
jmp
mov
call
push
cmps
jl
mov
int
cdq
int
mov
adc
xor
rcl
mov
add
lds
inc
aas
les
sub
adc
push
push
mov
fnop
fst
add
dec
dec
sahf
je
test
xchg
mov
ins
fiadd
xchg
dec
inc
(bad)
jge
push
aam
gs
sbb
out
call
push
retf
sti
cmp
(bad)
daa
loop
stos
mov
loopne
jb
cmps
dec
out
inc
gs
(bad)
ja
jge
mov
daa
call
cdq
mov
xchg
hlt
stc
jge
fcmovbe
sub
and
jp
jbe
or
fstp
test
mov
aas
pop
fistp
scas
call
jle
or
sub
mov
jle
jl
das
jns
es
int
fnstsw
push
adc
adc
push
sbb
bound
fmul
xlat
ror
std
shr
rep
mov
dec
xchg
sbb
scas
shl
sbb
jl
and
stos
sbb
fstp
pop
xchg
push
fistp
adc
push
(bad)
imul
pop
(bad)
je
pop
aaa
xchg
adc
scas
cmc
fisub
shl
pop
fwait
mov
(bad)
jg
push
sahf
popa
add
sub
cmps
xchg
pusha
sbb
fs
fldl2e
bound
xor
ja
cmp
shl
pop
mov
pop
xchg
shl
dec
lds
aad
push
test
push
xor
pop
mov
push
or
dec
imul
jne
cmps
pusha
fbstp
jg
sti
in
jo
xchg
pushf
shl
inc
mov
lahf
aaa
sub
cmp
sub
cmc
fdivr
pop
out
fisttp
int
lock
cmp
xlat
mov
dec
cwde
stos
jns
or
inc
dec
pop
xchg
sti
pop
lock
data16
dec
push
jb
xchg
retf
jns
mov
push
adc
cdq
cs
dec
lahf
add
and
cmp
callw
(bad)
mov
or
in
mul
xlat
sbb
repz
std
mov
das
aaa
mov
jmp
lahf
jg
sub
adc
mov
mov
call
(bad)
in
xor
jmp
dec
cmps
or
dec
and
movs
xchg
(bad)
or
dec
mov
sbb
inc
out
sti
jmp
out
and
jb
adc
fcomp
cs
xor
sub
mov
cmp
cmp
out
cmps
xchg
jecxz
mov
xor
jmp
adc
sahf
dec
cli
inc
adc
(bad)
dec
loop
scas
xor
push
retf
jbe
mov
mov
pop
hlt
and
mov
push
outs
xchg
jbe
fsubr
ret
rol
cld
lea
dec
adc
lahf
mov
xor
sbb
xchg
call
dec
inc
popf
clc
leave
push
or
sar
imul
mov
fsub
push
push
ror
popa
adc
xlat
stos
jecxz
pop
cdq
inc
push
mov
cs
xchg
pop
mov
test
or
push
test
enter
test
out
dec
not
packsswb
jne
rcl
pop
mov
xor
std
lahf
clc
inc
dec
gs
inc
pop
iret
js
cwde
imul
dec
outs
cld
jno
pop
sbb
in
sub
pop
sub
push
test
add
mov
mov
call
pop
sbb
fild
fisub
mov
mov
fwait
jle
xchg
mov
mov
pop
cmps
mov
int3
mov
out
clc
(bad)
lock
sub
mov
jns
jnp
and
jne
add
adc
or
cmp
ror
ja
sbb
add
std
das
pop
mov
mov
mov
imul
shr
je
imul
cli
cs
add
pushf
fist
jmp
adc
nop
imul
or
das
or
cmp
add
out
add
(bad)
jnp
arpl
xchg
jnp
bound
sbb
fld
mov
inc
call
sbb
int3
mov
or
mov
lahf
dec
adc
mov
add
loopne
dec
jl
cmp
xor
outs
popf
mov
rol
xor
hlt
adc
popf
ror
hlt
sbb
icebp
xchg
imul
out
fisubr
stos
inc
lods
pop
xor
sbb
inc
jb
sbb
int
out
adc
stc
ins
ja
jmp
ins
sti
mov
test
aam
mov
dec
scas
sbb
pop
mov
adc
lock
or
mov
xor
shr
push
mov
push
mov
dec
lahf
ja
mov
cmp
add
das
xor
hlt
mov
nop
jl
dec
stos
or
hlt
jns
lds
(bad)
addr16
sbb
mov
jb
mov
push
icebp
or
adc
cmp
adc
test
scas
pop
(bad)
mov
enter
pop
pop
jo
and
jl
test
cmp
(bad)
push
or
mov
push
pusha
push
daa
movs
test
xchg
jno
push
sub
fadd
adc
xor
pop
sbb
adc
or
cwde
pop
mov
movs
stc
aaa
xor
(bad)
pusha
ficomp
pop
add
cmc
push
pop
(bad)
pop
dec
cmp
pop
xlat
push
pop
push
mov
dec
and
das
loop
cmp
dec
cld
inc
sti
xchg
(bad)
jae
out
pop
ret
les
mov
add
out
xlat
call
or
mov
lds
and
sbb
cmp
and
mov
stc
mov
or
dec
iret
add
pushf
xchg
or
push
stos
icebp
mov
inc
push
jmp
and
pop
cmp
bound
dec
cmp
adc
leave
imul
sar
ins
sub
jecxz
clc
inc
ins
outs
cmp
adc
rcl
es
push
or
dec
(bad)
mov
inc
scas
stos
inc
mov
inc
inc
fistp
test
and
pop
fdiv
mov
fild
mov
mov
jns
sbb
push
pop
icebp
cwde
ins
imul
rcr
push
pop
cmps
rol
or
stc
(bad)
dec
pop
(bad)
fsub
adc
stc
rol
mov
mov
(bad)
xchg
mov
pop
in
jno
dec
push
hlt
in
mov
push
pusha
or
ret
mov
cmp
ficom
dec
and
shl
adc
pop
ds
dec
or
stc
fldcw
mov
std
mov
cmp
jae
push
pop
adc
mov
out
add
(bad)
mov
dec
popf
add
and
rol
gs
pop
sbb
dec
les
and
dec
push
ins
or
sbb
out
fs
sti
sbb
nop
pop
leave
mov
mov
xchg
and
or
inc
adc
pop
or
icebp
fs
or
mov
test
sbb
xor
lahf
call
inc
pushf
test
xor
sbb
sbb
ins
mov
jmp
push
bound
outs
mov
jle
or
adc
gs
dec
or
adc
mov
scas
les
movs
fcmovnb
mov
xchg
mov
xchg
jg
or
sub
inc
inc
pop
mov
mov
into
das
pusha
(bad)
fwait
or
jl
std
mov
ins
cmc
ins
add
mov
pop
mov
add
adc
mov
shl
aaa
cmp
inc
fstp
xor
cmp
fwait
jbe
pop
push
in
iret
sub
dec
pop
pusha
jmp
leave
sbb
push
sbb
push
mov
in
add
push
mov
fcomp
call
push
adc
cmps
dec
ror
(bad)
pushf
je
xchg
fwait
sbb
adc
div
cld
dec
inc
mov
adc
push
mov
call
popf
aad
adc
sub
sub
sub
cmp
mov
rcl
ret
stc
arpl
inc
rol
dec
and
dec
mov
stos
push
cmp
xor
dec
test
clc
push
in
fwait
dec
ins
cmp
call
cld
ret
mov
or
ds
loop
add
inc
inc
icebp
push
lods
push
or
fist
popf
int3
and
idiv
mov
jne
xor
add
push
aam
add
mov
loopne
out
in
imul
push
in
push
test
xchg
push
dec
push
pop
(bad)
loopne
loope
mov
xchg
jno
cmps
lods
sahf
jnp
fimul
out
cld
mov
adc
fwait
sbb
jb
icebp
add
push
imul
ins
push
jo
int
in
pop
push
cmps
pop
mov
test
jl
cmp
jmp
pop
mov
cs
mov
cmp
out
(bad)
movs
and
xor
jne
shr
popa
adc
cmp
shr
out
(bad)
std
mov
retf
fcom
dec
inc
push
jge
mov
call
push
outs
adc
hlt
mov
loopne
sbb
call
cmp
fbstp
xchg
cmps
inc
icebp
pop
std
clc
gs
push
push
jl
xor
sbb
les
test
sbb
push
xchg
scas
mov
imul
cmp
mov
and
mov
add
pop
mov
jg
add
test
stos
ret
test
jno
ins
adc
stos
jg
fwait
jmp
jno
inc
xchg
vmwrite
and
sub
sbb
out
scas
xor
push
ins
mov
(bad)
or
in
push
mov
pop
scas
pop
mov
push
lods
cmp
mov
sub
jo
xchg
test
rcr
jge
push
rcl
push
retf
xchg
rol
push
cmc
sbb
cmps
mov
(bad)
lods
jns
lods
or
add
push
cmp
cmp
ins
jb
inc
aam
or
clc
pop
addr16
(bad)
cmc
inc
scas
sub
pop
in
int
sub
lods
push
xlat
mov
imul
fidivr
sub
lahf
or
mov
cli
push
retf
mov
jmp
xchg
mov
in
(bad)
cmp
add
mov
adc
call
mov
mov
mov
mov
mov
jle
jo
and
mov
mov
gs
push
shl
scas
retf
inc
mov
scas
push
fild
sub
cwde
rol
jns
mov
mov
je
fwait
inc
push
rcl
pushf
iret
daa
repnz
cs
gs
fld
into
cmp
cmps
sub
xchg
push
lods
push
cmp
inc
or
ficomp
pusha
mov
lds
mov
sbb
mov
xlat
pop
add
sbb
push
jnp
cmp
fistp
scas
push
mov
scas
adc
stc
and
stos
push
inc
and
fisttp
sbb
xchg
mov
pop
sub
cld
(bad)
test
or
dec
dec
mov
imul
push
enter
pop
or
ins
pop
xchg
pop
ja
sub
sahf
ss
sbb
pop
test
imul
or
cmp
out
adc
shl
scas
repnz
jecxz
xchg
enter
out
jle
repnz
loope
sbb
aaa
sub
fs
cmp
add
push
out
mov
add
pop
ins
iret
mov
mov
loope
mov
popf
mov
inc
ss
ins
mov
rcl
in
arpl
xor
mov
mov
jbe
clc
ins
sbb
xlat
cld
push
(bad)
in
xchg
scas
mov
jg
push
(bad)
xchg
cmp
xor
mov
fmul
hlt
push
and
(bad)
test
dec
jge
xor
mov
jo
in
and
shl
retf
mov
out
dec
adc
mov
lahf
pop
dec
pusha
arpl
pop
xchg
repz
pop
cdq
mov
je
jle
sbb
fcmovne
and
cmovp
mov
mov
push
sbb
dec
ins
xor
jecxz
xlat
adc
inc
sahf
add
sub
std
pop
fdiv
sub
add
jnp
cs
dec
in
bound
popf
xchg
pop
dec
or
jae
mov
daa
mov
add
nop
inc
xor
mov
arpl
and
movs
cmp
mov
push
fs
or
aad
idiv
fs
ds
push
push
dec
frstor
fisubr
arpl
xchg
xchg
loopne
in
movs
add
cmp
loop
out
jg
test
aas
lahf
jmp
lods
push
push
shl
jecxz
scas
xor
lods
loop
inc
dec
add
xor
mul
cmps
aam
(bad)
es
adc
mov
push
dec
ret
adc
int
rol
retf
pop
rol
mov
mov
adc
inc
loope
cmp
ins
sub
cld
mov
mov
les
and
lea
sbb
xchg
sub
mov
jecxz
push
cmp
nop
jl
nop
dec
inc
inc
gs
test
xor
fsubr
sbb
adc
adc
cli
(bad)
mov
dec
fwait
inc
test
arpl
pminsw
adc
mov
imul
cld
cli
leave
mov
in
mov
jo
sub
xchg
or
movlps
lea
xor
or
out
mov
fiadd
add
mov
pop
pushf
adc
pop
and
sbb
jns
push
adc
mov
inc
fisttp
mov
xchg
and
stos
add
jle
and
adc
mov
mov
lahf
jnp
jb
xchg
dec
jbe
dec
outs
and
adc
sub
jge
aas
pop
daa
rol
xor
push
arpl
xchg
dec
in
or
sahf
inc
repz
fnstenv
pushf
pop
xchg
push
push
add
scas
pop
mov
mov
adc
and
mov
cdq
inc
push
mov
or
scas
xchg
and
mov
lods
ins
push
mov
xchg
pop
aad
jl
int3
dec
aad
or
jge
dec
or
adc
aas
jbe
cmp
dec
mov
jge
in
xchg
mov
test
jl
sub
pop
aas
enter
jl
pop
mov
mov
cmps
shr
sub
call
and
sahf
out
loope
int3
out
adc
dec
movs
imul
mov
mov
and
pop
adc
inc
(bad)
cmp
pop
cmp
inc
dec
inc
sub
xor
sahf
mov
xor
js
lahf
jne
pop
repz
iret
xlat
out
xchg
xchg
xlat
mov
mov
jle
jbe
pop
fdivr
arpl
xchg
dec
xchg
sub
pop
loop
xor
pop
int3
gs
imul
in
lods
xor
xor
mov
fdivrp
sar
hlt
enter
and
mov
pop
mov
inc
packuswb
setb
aas
jle
rcr
mov
inc
pop
sub
cld
lock
rol
mov
inc
les
(bad)
shl
jno
retf
push
stos
repz
dec
or
aam
xchg
shl
inc
mov
cmps
jnp
std
cld
pop
imul
iret
mov
ja
xor
adc
imul
es
shl
mov
push
ds
(bad)
sub
push
jbe
dec
dec
jne
ins
pop
cld
repz
jg
cmp
in
addr16
scas
push
mov
push
lahf
jge
jbe
xchg
fnstenv
jmp
ffreep
mov
daa
and
retf
shl
neg
stc
dec
fs
sbb
outs
iret
rcl
pop
je
mov
jae
inc
mov
pop
and
jp
call
repz
jp
push
fmul
mul
mov
and
push
sbb
adc
cmps
mov
pop
mov
mov
cmp
scas
fnstenv
mov
(bad)
out
mov
inc
push
mov
test
sub
and
arpl
push
popf
cmp
rol
pop
(bad)
repz
sub
call
add
and
dec
or
mov
ja
sti
jl
add
shr
mov
mov
test
call
repz
pop
or
retf
test
fmul
mov
xor
imul
xor
mov
call
cmps
(bad)
js
mov
nop
xchg
addr16
pop
inc
xchg
push
(bad)
adc
add
movs
ins
sbb
gs
and
cld
mov
loopne
rcl
xchg
aad
mov
inc
clc
dec
sub
pop
sub
sar
mov
xor
and
dec
jg
loope
test
lods
xchg
pop
inc
push
pop
scas
or
das
push
add
xor
sub
mov
pop
jp
mov
ret
stos
fisttp
xchg
retf
lds
jg
addr16
and
xor
xchg
scas
std
push
in
outs
icebp
das
mov
pop
and
xchg
retf
xor
pop
cmp
imul
in
retf
pop
pop
mov
stos
mov
jno
push
pop
jae
sbb
dec
loopne
imul
sub
out
sbb
dec
dec
fnstsw
stos
fdiv
stc
mov
test
stos
fwait
jae
mov
in
mov
loop
stos
cmp
push
pop
mov
sbb
xor
sbb
fld
jmp
pop
mov
test
jecxz
out
sub
call
push
push
ins
jo
pop
jo
mov
leave
and
popf
arpl
call
in
and
test
mov
push
xor
test
cmp
pop
xchg
xor
imul
bound
test
imul
pop
call
sub
neg
and
push
jmp
imul
or
cwde
and
enter
lea
sbb
xchg
mov
mov
mov
inc
or
(bad)
cmps
inc
mov
and
push
movs
dec
mov
aaa
pop
mov
pop
movs
test
add
lods
sbb
stos
sti
xchg
mov
fwait
dec
fnsave
shl
lahf
test
fwait
test
jne
lock
lods
dec
dec
lods
xchg
out
add
xchg
mov
pop
(bad)
mov
mov
and
inc
ds
test
lods
sub
and
int3
bound
mov
xor
and
mov
loopne
outs
jge
xlat
jbe
test
cmp
pop
sub
jg
test
xchg
cmp
cmp
sub
sbb
add
inc
cmc
call
retf
repz
test
stc
shl
outs
jmp
sbb
aad
ja
adc
jecxz
shl
pop
cld
push
int3
cmps
fild
pop
std
inc
or
or
mov
inc
push
fstp
popf
adc
icebp
gs
popa
fisub
lods
mov
cmp
pop
dec
in
xchg
dec
xchg
cmp
(bad)
aam
dec
dec
jbe
xor
pop
or
xor
iret
rcl
shr
mov
push
xor
add
push
xchg
pop
inc
lds
das
div
test
out
int3
rcl
lods
call
adc
and
xchg
cdq
jno
ins
add
push
dec
pushf
mov
cmp
sbb
push
mov
jg
cmp
out
sub
pop
js
jge
repnz
jns
mov
aam
jecxz
(bad)
(bad)
xchg
fs
sbb
dec
cmp
dec
cmps
add
jecxz
cmp
mov
fld
aaa
(bad)
mov
dec
sti
or
mov
inc
xchg
xor
test
cdq
sbb
mov
push
fsubp
push
outs
in
mov
pop
fld
call
gs
mov
inc
mov
inc
pusha
mov
jp
sbb
pusha
out
loope
fwait
ret
and
rsm
add
sbb
adc
dec
lahf
pop
jae
popa
adc
test
loopne
ins
dec
cmp
push
jmp
cdq
or
pop
out
jo
sbb
retf
cmp
fnstcw
lds
jmp
jge
or
imul
mov
inc
xchg
xchg
clc
jno
cmps
imul
in
add
xor
mov
push
retf
daa
and
(bad)
aas
mov
test
fld
cld
mov
push
retf
aas
or
in
bound
jae
mov
movs
sbb
xchg
(bad)
or
out
mov
jnp
(bad)
test
xor
push
sub
in
jbe
sub
rcr
std
push
mov
sahf
push
stc
inc
add
pop
int3
add
jne
psubw
fisttp
and
retf
outs
je
cmp
jg
fstp
mov
lea
shr
push
arpl
outs
cmp
imul
sbb
mov
mov
sub
cmp
mov
pop
adc
dec
xchg
in
test
daa
sbb
ja
push
dec
jge
sub
jmp
lahf
mov
mov
clc
adc
daa
cmps
inc
and
or
fs
ss
and
mov
mov
stc
fisttp
push
pusha
jg
aad
mov
lahf
push
push
and
data16
adc
push
xor
pop
repnz
xor
cmp
add
pop
adc
cs
fdiv
pop
pop
jp
retf
and
je
mov
iret
in
adc
sar
outs
sbb
sub
mov
shl
push
int
test
xor
ret
jmp
ss
int3
push
int
mov
scas
ret
call
repz
and
jbe
cmps
mov
add
mov
lds
in
not
mov
push
mov
push
push
leave
dec
dec
sub
push
dec
inc
sti
ret
pushf
loopne
mov
aas
mov
out
or
jl
pop
rcr
and
imul
sahf
rcl
vfnmadd231ps
mov
pusha
fdivrp
xchg
inc
sub
mov
int
je
scas
and
popa
(bad)
leave
inc
lods
mov
cwde
(bad)
mov
repnz
ins
ret
stos
retf
retf
xchg
mov
lock
or
or
mov
gs
repnz
(bad)
pop
dec
lock
test
inc
addr16
(bad)
lods
shr
inc
xor
sbb
sub
fwait
mov
inc
jo
mov
lods
mov
(bad)
pop
mov
pop
xchg
stc
jmp
push
mov
jl
mov
or
or
lds
add
or
loopne
and
mov
sub
fcom
add
cwde
dec
call
sub
dec
iret
sar
fs
in
imul
adc
jmp
(bad)
out
add
fwait
push
cmp
mov
repnz
mov
ins
jne
popa
jmp
and
scas
fsub
add
xor
je
imul
aas
inc
je
add
call
ja
mov
push
adc
mov
cmp
test
loopne
push
fwait
out
bound
jbe
jmp
mov
pop
rcr
mov
jmp
mov
loopne
adc
(bad)
fldl2t
out
and
cmp
mov
mov
fimul
dec
mov
fild
int
int
lea
icebp
call
aad
push
pop
jbe
cli
sbb
push
push
ss
xchg
push
mov
sub
or
cdq
loop
push
sub
pop
xor
pop
add
xchg
aaa
cmp
aaa
aaa
jg
mov
scas
add
out
outs
mov
int
dec
jae
push
mov
push
(bad)
aad
mov
add
aas
adc
xor
mov
pusha
in
aad
arpl
iret
out
enter
movs
pushf
inc
and
add
cmp
(bad)
aam
jo
enter
dec
and
outs
mov
les
jnp
lahf
ins
fimul
inc
cmps
dec
test
cwde
xchg
mov
gs
mov
in
inc
sub
loope
mov
mov
mov
xor
jnp
dec
loope
push
sbb
pop
push
sub
mov
lock
mov
jmp
fidiv
xchg
int
sbb
or
push
ret
es
(bad)
pop
es
movs
ror
fbld
cwde
and
mov
test
out
xchg
sbb
lods
ins
in
and
xor
xchg
dec
sahf
mov
arpl
(bad)
jmp
xor
enter
mov
in
lods
gs
pop
arpl
rcl
(bad)
into
in
add
xchg
sub
(bad)
inc
pusha
fdiv
stc
fist
(bad)
lods
sbb
dec
mov
dec
lods
mov
in
push
pusha
cdq
(bad)
sbb
ficomp
or
inc
test
and
repnz
(bad)
daa
pop
outs
push
loope
sar
xchg
nop
adc
rcr
pop
pop
das
test
std
smsw
adc
inc
pop
dec
mov
or
dec
xor
mov
cwde
jne
sbb
jne
cmps
fdivp
pop
xchg
shl
icebp
xor
daa
inc
(bad)
rcr
mov
sar
movs
lds
ror
popf
sub
inc
call
inc
ficom
cmp
dec
sbb
ds
xchg
(bad)
cmp
add
pop
popa
jns
xor
mov
lahf
call
cmp
stc
mov
pop
fisubr
les
ret
out
jo
sbb
dec
int3
adc
mov
test
fdiv
pop
jo
int
inc
out
lods
jbe
sub
das
mov
pop
vunpckhps
popf
outs
mov
call
fild
sar
adc
and
dec
xor
hlt
or
lock
inc
cmp
test
outs
ds
push
shl
jg
jge
mov
adc
push
lahf
pop
aaa
xor
jmp
cld
ror
push
jmp
aaa
cmc
mov
or
ror
mov
sysenter
xchg
sub
ret
pop
sti
pop
cmp
and
inc
nop
cmc
dec
scas
and
retf
frstor
cmp
outs
inc
sub
xchg
dec
and
cmp
pushf
dec
(bad)
jg
push
leave
or
not
gs
ss
jbe
scas
jg
aaa
jecxz
iret
or
data16
in
(bad)
jae
out
and
pop
sbb
jle
mov
xchg
sbb
mov
jo
inc
fs
pop
es
ror
jns
aas
sub
mov
cmp
fwait
pop
pop
sti
aaa
push
adc
stos
imul
repz
iret
outs
js
push
repnz
inc
cmp
and
ror
sti
sbb
nop
and
mov
adc
and
loop
mov
rol
inc
bound
sahf
pop
mov
push
aad
add
xchg
inc
sbb
pop
scas
xlat
jnp
mov
inc
dec
xchg
outs
jb
pop
out
aaa
push
pop
mov
jle
or
push
mov
mov
cdq
neg
mov
add
(bad)
mov
fcom
cld
pop
jg
fst
mov
imul
fistp
dec
scas
add
or
stos
test
rcl
icebp
or
lods
ret
scas
mov
xchg
xchg
or
mov
and
pop
sub
adc
cli
sti
test
or
push
mov
push
aad
adc
or
stos
push
scas
ss
movs
xor
and
mov
mov
cld
add
enter
ror
xchg
push
leave
retf
scas
and
iret
jmp
cs
ja
mov
sbb
lea
jle
rol
movs
enter
lods
cmp
xor
push
std
call
adc
pop
addr16
stos
sbb
xchg
cwde
jnp
push
in
and
mov
cmp
icebp
dec
pushf
(bad)
push
vxorps
sbb
ret
push
iret
out
(bad)
shl
stos
ss
subps
xor
cmp
icebp
fwait
sub
lahf
and
jne
nop
push
pop
mov
jl
add
cmp
leave
repnz
ins
xor
mov
xor
gs
and
pop
mov
sbb
sbb
js
aad
xor
pushf
cmps
fist
idiv
mov
push
stos
lfs
push
xchg
mov
jbe
not
mov
sbb
xchg
scas
dec
out
xchg
jbe
jmp
xchg
(bad)
jns
push
bound
ret
jl
fld
mov
sar
mov
fcmove
cmps
adc
out
add
cmp
shl
adc
dec
mov
or
push
test
add
add
into
inc
mov
jbe
cmp
(bad)
ret
ror
icebp
and
cmps
push
add
mov
je
pop
clc
ret
push
add
mov
dec
loop
fisub
sbb
dec
xor
mov
jmp
bound
shl
ins
in
push
dec
xchg
dec
dec
mov
jbe
shl
rcl
ret
test
out
ja
ret
(bad)
fndisi(8087
arpl
mov
out
mov
push
xor
shl
loope
sub
sub
repnz
mov
jmp
cmp
dec
xchg
sub
mov
aas
movs
ret
cmc
pushf
pop
xchg
push
mov
pop
inc
mov
add
mov
cmps
mov
or
shl
adc
int
xchg
push
jae
xchg
mov
mov
jnp
mov
mov
addr16
les
cmp
iret
outs
je
xor
loopne
dec
mov
addr16
and
cli
mov
push
push
inc
arpl
xchg
es
sti
imul
shl
outs
mov
mov
out
cli
adc
xchg
xor
int3
scas
arpl
xor
imul
mov
and
or
mov
push
enter
add
test
popf
es
cmps
and
jb
scas
ret
nop
ins
ret
mov
push
mov
aaa
out
inc
sbb
jg
pop
frndint
call
sub
aas
push
out
ja
jnp
fst
or
jle
sbb
mov
dec
or
pop
call
es
imul
inc
jl
xchg
outs
cli
repnz
sub
cld
out
jae
jecxz
dec
retf
(bad)
inc
xchg
mov
and
popa
sbb
sbb
mov
add
cdq
cmps
test
leave
cmp
jo
aaa
push
push
cmps
push
movs
xor
mov
dec
mov
sub
pop
push
fbld
jecxz
(bad)
aaa
repnz
jg
psrad
test
ins
or
mov
and
cmp
mov
out
mov
repnz
push
xchg
mov
sbb
pop
xor
mov
mov
pop
inc
lock
movs
mov
aam
dec
rcl
mov
push
cli
scas
mov
pop
rcr
sar
adc
xchg
dec
or
retf
xchg
adc
stos
ret
xchg
adc
mov
jb
(bad)
cmp
fwait
shld
xchg
cmc
outs
xchg
cmp
sub
les
fs
int3
nop
mov
pop
leave
ins
sbb
pop
pop
and
pop
mov
imul
loop
inc
jmp
lahf
jnp
or
inc
jl
or
add
jb
inc
jb
jno
xchg
jg
shl
pusha
inc
pop
nop
pop
jle
popf
mov
cmc
add
sbb
mov
pop
fld
dec
push
xchg
lock
and
or
in
inc
adc
arpl
ja
mov
fcom
std
cmp
neg
or
mov
and
das
mov
push
test
cdq
inc
cdq
loop
jnp
inc
out
shl
int3
push
and
add
stos
call
loop
mov
xchg
rcr
or
mov
lods
pop
nop
mov
xor
es
push
das
in
sub
icebp
xor
or
sbb
xlat
ins
adc
jns
cmp
or
sub
xchg
add
push
or
mov
xchg
sbb
pusha
pusha
jecxz
adc
out
xchg
or
add
retf
div
inc
push
mov
pop
pop
sar
stc
out
pop
ja
lock
fadd
xor
(bad)
pop
xchg
inc
sub
scas
mov
mov
xchg
push
(bad)
iret
and
xchg
cmps
pop
push
lds
shl
add
cmp
mov
rcr
scas
mov
ins
in
je
and
xchg
sti
pop
pusha
das
push
jae
or
rcl
add
sub
jnp
push
xor
mov
nop
mov
shl
dec
xor
fidiv
mov
ret
stos
xchg
popa
sub
pop
addr16
xchg
sub
jmp
push
inc
pop
mov
or
mov
xlat
mov
jmp
fmulp
arpl
fild
add
or
cmp
movs
stc
sub
out
adc
das
jno
iret
sar
jmp
fs
xchg
pop
fnstcw
je
sbb
in
xchg
mov
cwde
call
mov
xor
lods
(bad)
fsubp
fistp
fs
stos
mov
adc
pop
fs
sub
xchg
add
jl
int
push
shr
and
xlat
mov
call
xchg
in
pusha
aaa
leave
xlat
cmp
push
sub
mov
mov
adc
push
and
xor
push
fidiv
fcmove
or
in
cmp
enter
sbb
xchg
push
imul
fnstcw
or
sub
mov
cdq
push
ret
stos
mov
es
scas
and
rcl
fadd
les
ret
sub
mov
mov
(bad)
out
sbb
ja
dec
stos
pop
(bad)
fstp
sbb
xchg
hlt
mov
push
jl
mov
test
push
pop
or
lods
and
mov
and
mov
movs
mov
push
dec
dec
pop
mov
dec
leave
xchg
mov
push
out
xor
lds
icebp
sbb
ss
push
fucom
cmps
mov
adc
outs
pop
dec
test
mov
in
in
lods
div
mul
adc
int
cmps
push
not
pop
mov
push
mov
stc
out
mov
and
push
rol
iret
jb
sub
int3
aaa
xor
in
adc
mov
mov
addr16
(bad)
add
push
jnp
int3
int3
and
dec
ins
std
ficom
loop
faddp
pushf
aaa
repnz
imul
push
leave
ds
test
stos
xchg
or
imul
sbb
inc
jmp
mov
xlat
cmp
cmps
mov
fidiv
shr
mov
sub
aad
out
pop
push
inc
push
mov
inc
mov
sub
shl
jmp
idiv
inc
sub
mov
retf
cmp
jl
leave
pop
sbb
rol
rol
jge
imul
fiadd
lods
adc
mov
ret
int
nop
int3
mov
jbe
cs
outs
sbb
es
test
push
xor
mov
in
in
xor
je
mov
dec
sbb
cli
bound
mov
sti
jecxz
int
dec
js
fs
cmp
jb
and
push
mov
hlt
bound
sub
daa
call
xchg
add
cmc
mov
outs
shl
sar
xor
in
xchg
test
mov
les
(bad)
aam
mov
push
sbb
ins
xor
ror
sbb
lock
inc
and
dec
mov
idiv
das
mov
fmul
ja
aad
adc
cmp
mov
push
pop
mov
xchg
mov
fwait
sub
retf
pushf
cmp
mov
inc
pop
or
lods
adc
(bad)
scas
dec
add
push
mov
in
cmp
addr16
lock
sub
inc
or
xchg
popf
ss
mov
mov
test
(bad)
pop
daa
cli
jmp
fs
ror
aas
dec
out
xchg
xlat
js
add
inc
cmp
sbb
push
add
push
in
bound
daa
daa
sub
into
cmp
pop
imul
outs
retf
(bad)
xchg
push
or
das
sahf
xor
adc
jge
pop
inc
or
push
xlat
data16
add
mov
jle
push
push
aaa
arpl
ss
and
push
mov
ins
xchg
test
mov
and
dec
pop
(bad)
out
popf
je
jbe
sti
cdq
mov
and
add
test
inc
jae
cdq
jg
add
js
test
std
adc
xchg
shl
(bad)
or
(bad)
mov
int
fild
popf
loopne
sub
pop
adc
jmp
or
mov
mov
repnz
(bad)
jnp
in
pop
or
xchg
jo
mov
add
mov
fcomp
(bad)
mov
sub
sub
pusha
inc
inc
add
cmp
(bad)
pop
and
icebp
push
out
imul
push
sti
add
and
mov
aam
out
xor
mov
not
xchg
aaa
xchg
jno
mov
pop
shl
sub
adc
adc
xor
cmps
icebp
ins
test
fdiv
test
push
or
xchg
enter
jl
mov
sub
call
mov
test
in
or
mov
(bad)
jmp
sahf
dec
add
mov
jns
push
sbb
adc
xlat
mov
retf
stos
pop
stos
dec
push
out
mov
mov
pop
in
pop
or
call
aam
mov
adc
mov
das
jge
jg
out
dec
inc
xchg
adc
stos
xchg
push
and
bnd
aaa
push
push
add
aas
sahf
icebp
inc
xchg
dec
add
fsubr
sub
jae
cwde
mov
rcr
pusha
add
push
inc
add
lods
push
movs
pop
in
(bad)
icebp
mov
adc
inc
arpl
xchg
jp
into
ins
sub
repz
sbb
rep
dec
loopne
sub
cmp
cmc
mov
mov
lock
or
imul
mov
pusha
sub
pop
jg
inc
pop
mov
pop
dec
mov
sar
sbb
mov
nop
mov
mov
mov
cmps
cmps
or
je
dec
stc
das
add
jl
rcr
cmp
push
mov
mov
mov
jg
test
push
(bad)
mov
sbb
jnp
mov
clc
mov
imul
call
aaa
scas
add
mov
popa
add
arpl
push
(bad)
mov
xor
ret
add
jbe
adc
data16
pop
les
(bad)
dec
jno
jno
(bad)
sahf
not
test
mov
arpl
movs
adc
lock
push
push
(bad)
fmul
or
sbb
enter
dec
jo
jp
das
inc
ret
fwait
sbb
inc
sub
fwait
sub
pop
fldcw
jg
cmps
test
sub
jae
sub
sti
(bad)
addr16
je
je
sub
(bad)
rcl
ins
sbb
mov
dec
es
pop
dec
dec
jg
pop
mov
push
outs
gs
cmp
pop
adc
std
iret
jo
push
call
popf
cwde
or
or
xor
dec
sti
sbb
nop
pop
or
push
xor
xor
cwde
scas
inc
pop
mov
fisubr
add
les
xchg
ins
sbb
or
xlat
(bad)
data16
clc
data16
jno
ret
push
mov
lea
scas
adc
int
jne
popf
jmp
shl
inc
gs
ficom
xor
repz
pop
mov
mov
test
mov
dec
jge
mul
cmp
mov
cs
clc
jl
popa
sbb
js
test
shr
or
sub
mov
fwait
inc
mov
cmp
popf
mov
xchg
mov
sbb
jae
sub
ins
xchg
(bad)
jmp
ds
movs
bound
adc
lock
xor
aas
leave
es
std
adc
std
pop
dec
dec
or
bound
outs
movs
push
sti
clc
jno
cmp
cli
xchg
sbb
dec
mov
xor
or
retf
inc
test
imul
jmp
out
sub
in
sbb
ror
jno
xor
pushf
retf
sbb
sti
cs
test
jmp
scas
cmp
movs
test
sbb
mov
mov
fwait
sbb
push
shr
push
dec
sub
std
mov
xchg
loope
call
add
and
pop
sbb
enter
jmp
dec
xchg
add
out
ret
push
pop
daa
repnz
jle
sbb
fimul
adc
lods
jne
out
sbb
ins
not
push
jmp
mov
push
sub
add
int
cld
scas
add
inc
test
xchg
popa
xor
jno
pop
popa
and
in
aam
xchg
mov
pop
mov
cdq
push
test
push
shl
push
jnp
scas
jno
push
xchg
sbb
mov
(bad)
sub
add
sti
mov
add
inc
cmps
xchg
stc
lea
fisub
scas
in
dec
dec
xchg
jno
push
add
jne
test
mov
cmps
aaa
jle
jae
rcl
jp
shr
adc
div
cmp
sbb
mov
and
mov
dec
mov
mov
jg
data16
iret
xchg
lock
out
jb
jne
inc
mov
movs
or
xchg
inc
mov
push
shl
add
jne
pop
cdq
fwait
lods
and
or
aaa
lods
lods
and
push
inc
jg
(bad)
push
sbb
cmp
cmp
xor
and
adc
popa
bound
xor
pop
out
aad
dec
pusha
in
jle
ja
(bad)
in
ins
adc
xchg
das
les
retf
js
add
pop
jp
adc
add
(bad)
sub
mov
sbb
fsubr
or
xchg
and
xor
mov
(bad)
in
jge
adc
sbb
out
aam
imul
jmp
scas
fs
fmul
lods
bound
cmp
xor
mov
push
retf
sub
dec
jne
aam
fstp
jns
pop
dec
cmp
jbe
mov
ins
and
and
fidivr
and
call
fisttp
sbb
fwait
jbe
jg
cmps
add
sub
mov
mov
fdiv
rol
ins
push
and
mov
fcomp
ss
test
(bad)
pop
scas
fisub
cmps
sbb
push
sub
imul
das
push
inc
xchg
xchg
mov
add
sub
fld
or
imul
lock
fidiv
int
xlat
or
loopne
retf
inc
xor
cs
xor
sub
or
into
in
lsl
ret
sti
and
fwait
xchg
mov
inc
adc
scas
and
in
mov
stos
cmp
shr
ins
cmps
xchg
and
in
push
xchg
fdivp
loop
cmp
and
xchg
xor
and
aaa
mov
retf
sbb
dec
out
test
pop
dec
pop
mov
test
in
mov
xor
cmp
pop
test
and
in
or
inc
xor
addr16
shl
pop
arpl
cmc
fsub
retf
xchg
sbb
scas
sbb
pop
and
cs
push
lods
(bad)
out
aaa
sbb
mov
imul
dec
push
repnz
xor
sbb
ja
dec
sub
cmps
pop
(bad)
push
and
pop
pop
mov
or
(bad)
jp
mov
out
jg
mov
or
xchg
or
fcomp
pushf
sub
fwait
sbb
adc
pop
mov
in
and
jnp
dec
inc
xchg
outs
pop
rcl
test
mov
enter
and
dec
jbe
imul
ss
int
jmp
pop
fst
mov
xor
out
aas
mov
sub
mov
pop
aas
xlat
push
inc
cli
cmp
(bad)
mov
jp
jmp
imul
mov
pushf
cmp
fld
sahf
push
xchg
arpl
fwait
pop
dec
pop
xor
test
ror
xchg
mov
das
nop
jmp
ret
sub
xor
ret
cmp
lods
jae
push
push
xchg
out
(bad)
push
push
inc
sub
mov
and
retf
stc
mov
mov
xchg
add
movs
repz
int3
xor
pop
fcmovbe
aam
jbe
ins
fld
mov
fst
push
xor
push
into
fistp
cmp
gs
gs
cmc
jb
or
hlt
in
adc
jae
cs
add
dec
dec
cmp
rol
js
push
ss
addr16
ins
cdq
cmp
xchg
in
sbb
mov
shl
leave
xchg
out
and
std
loopne
jge
aam
mov
jp
test
push
icebp
ja
or
test
mov
xchg
xchg
shl
sbb
and
mov
cs
cdq
cmp
cmp
in
in
or
mov
shl
mov
ins
sbb
addr16
mov
xor
xor
aas
jl
push
pop
dec
mov
push
sub
mov
hlt
add
mov
mov
mov
cmp
push
test
iret
jns
inc
popf
es
loop
mov
stos
jmp
pusha
ret
shr
adc
adc
jge
into
lods
xor
in
jmp
cs
and
aam
(bad)
mov
dec
sbb
dec
popf
(bad)
gs
fsubr
ins
icebp
xchg
pusha
mov
mov
imul
daa
je
bound
adc
cld
inc
inc
int
mov
mov
lahf
test
mov
add
push
pop
push
sub
inc
xor
push
push
push
iret
adc
aas
les
mov
push
(bad)
js
out
and
lods
sti
push
sub
add
xor
pop
and
cmp
cmp
sbb
iret
hlt
mov
sub
and
gs
aaa
std
dec
popf
push
pop
popa
and
out
fldenv
mov
add
dec
(bad)
(bad)
(bad)
fadd
xor
cmp
push
and
mov
popa
xchg
dec
rcr
retf
ja
pop
cmps
call
dec
mov
(bad)
xchg
cmp
cmp
xchg
js
cld
popf
(bad)
push
cli
or
shr
test
pop
mov
pop
repz
leave
outs
aas
sbb
imul
push
or
outs
inc
push
movs
cmp
out
iret
pusha
out
cmp
mov
lock
xor
push
ins
cmp
lds
sub
mov
popa
fild
push
pop
ja
sar
sbb
add
push
gs
repz
pop
mov
xor
pop
pop
inc
adc
adc
out
es
in
and
int
mov
or
pop
cli
out
fadd
xchg
xchg
dec
out
inc
dec
adc
retf
dec
mov
dec
ds
pop
jae
les
inc
jnp
shl
shl
xchg
mov
ret
jp
test
dec
lds
ret
(bad)
push
cmp
or
popf
imul
iret
les
es
int3
getsec
fpatan
div
mov
fcmovnb
jl
sub
mov
leave
stc
add
jnp
sbb
lea
inc
mov
scas
dec
and
call
or
add
outs
out
or
es
popa
fucomp
adc
mov
pop
js
out
xchg
cmovbe
es
xor
mov
rcl
sbb
mov
sub
push
cld
aad
jo
out
retf
or
movs
jle
clc
mov
sub
inc
mov
sbb
ret
popa
and
sub
ret
(bad)
stos
int
pop
inc
mov
cs
dec
push
cld
ins
(bad)
mov
jbe
inc
dec
int3
fmul
(bad)
arpl
in
xlat
pop
je
adc
mov
out
in
pop
adc
jae
sbb
(bad)
out
std
scas
xchg
bound
data16
cmp
cmps
cmp
scas
ins
cmc
adc
dec
jb
sbb
mov
fisub
sub
gs
lock
loope
push
push
pop
jp
pop
pop
jo
cld
sbb
jno
xchg
or
cld
dec
adc
sar
ja
pop
scas
push
mov
fwait
in
xor
and
(bad)
cmp
pushf
ins
(bad)
mov
stos
cs
pop
sub
dec
pop
xor
ja
inc
xor
mul
push
mov
jns
int3
xchg
je
push
cli
push
jne
out
pushf
(bad)
aad
es
mov
not
in
jmp
or
mov
out
xor
data16
cli
adc
mov
and
mov
test
dec
sub
jno
pop
push
mov
cmp
pusha
scas
fimul
push
push
xor
mov
in
mov
add
test
test
sbb
pop
test
cmp
push
movs
dec
xchg
cmps
or
test
add
les
push
mov
and
push
and
in
(bad)
std
dec
mov
add
push
mov
mov
scas
jl
push
(bad)
int3
ins
sar
cmp
enter
push
or
data16
test
or
mov
and
add
(bad)
mov
sahf
jmp
dec
xchg
mov
test
je
(bad)
xor
xchg
mov
(bad)
std
adc
jbe
push
loopne
jb
stos
pop
mov
pop
es
ins
stos
dec
pop
mov
add
ficomp
add
movs
iret
fild
out
mov
pop
js
xchg
int3
aaa
in
push
and
push
int
scas
jo
les
adc
ja
adc
push
daa
sbb
leave
lods
arpl
pop
adc
sar
into
shr
pop
jb
push
retf
leave
mov
daa
iret
loopne
mov
mov
sub
and
(bad)
push
psubd
pop
leave
pop
rol
inc
mov
shl
dec
push
xor
and
xchg
test
inc
pushf
dec
push
data16
jne
jmp
adc
or
cmp
add
mov
adc
test
int
setge
iret
stc
cld
add
push
push
mov
nop
jecxz
cmp
push
or
test
inc
ins
shr
add
ja
pop
adc
mov
adc
fcmove
arpl
std
push
add
sar
(bad)
icebp
jle
cmp
sub
adc
test
test
loopne
fdiv
cmp
sub
lds
xchg
xor
dec
cmp
fld
xchg
push
hlt
mov
push
jb
lods
outs
pminub
cmp
inc
xchg
or
push
test
loopne
lock
and
push
(bad)
scas
dec
xchg
push
ins
cmp
or
idiv
fwait
and
pop
shr
cmp
aaa
or
lock
mov
lds
outs
add
mov
push
push
int3
out
rcr
ficom
cwde
mov
add
out
scas
retf
pop
pushf
jg
arpl
mov
daa
push
and
xlat
call
popf
imul
inc
jmp
xor
hlt
pop
dec
fst
cdq
cwde
or
pop
cdq
test
or
and
dec
lahf
scas
push
or
pop
test
mov
or
adc
mov
scas
xor
cmp
inc
in
sub
aas
aaa
scas
(bad)
push
adc
test
mov
sub
add
push
jo
xlat
dec
jbe
jb
call
dec
into
and
xchg
icebp
aaa
cmps
sahf
int3
cmp
out
mov
add
push
lods
scas
iret
ret
mov
pop
imul
push
pop
xchg
cld
out
aad
addr16
push
les
add
cmp
adc
mov
sti
icebp
sub
cmp
jg
retf
gs
push
jg
popa
ins
inc
push
outs
loop
ror
ins
sub
xor
icebp
(bad)
std
xor
mov
adc
cwde
add
test
pop
mov
rcr
cdq
cmp
dec
sbb
mov
or
and
js
mov
scas
pop
cli
and
ficom
sbb
fs
sbb
scas
adc
xchg
add
mov
push
js
mov
test
hlt
cmp
pop
jb
or
leave
jmp
push
jle
cmp
mov
mov
iret
enter
sbb
shr
lds
mov
cmp
dec
dec
es
mov
iret
sahf
jge
fdivr
test
lock
dec
mov
test
push
out
imul
or
rol
xchg
lea
(bad)
dec
retf
sub
xchg
or
jmp
adc
xor
dec
imul
outs
int3
movs
and
test
test
xor
ds
xchg
jbe
hlt
pop
clc
mov
and
xchg
fdiv
cbw
jle
mov
inc
pop
pop
push
or
mov
mov
loop
add
jno
cmp
fild
mov
sbb
es
push
scas
dec
rol
cmp
stos
sub
lds
jmp
adc
sbb
jb
movs
add
mov
xor
or
mov
mov
adc
(bad)
aas
lock
mov
mov
mov
ss
fiadd
pop
mov
jge
sbb
rcl
int3
ss
(bad)
mov
fsubr
xor
test
gs
ins
mov
push
outs
aam
or
and
lods
and
ss
movs
adc
fidiv
imul
jne
xor
aad
iret
imul
rol
dec
lock
adc
pop
add
(bad)
bnd
push
mov
bound
jmp
pop
mov
mov
dec
test
or
into
jns
lahf
bound
icebp
dec
and
ins
xor
push
in
movs
push
(bad)
je
fistp
pop
dec
bound
(bad)
sbb
mov
test
inc
push
in
retf
add
shl
xchg
es
pop
adc
or
loope
dec
aad
pop
mov
mov
xchg
call
mov
repz
dec
push
sbb
leave
cmp
and
mov
mov
jae
mov
mov
out
test
jl
movs
fimul
push
adc
(bad)
pop
das
mov
xrelease
cmp
adc
outs
pushf
ds
lock
jb
icebp
fdivr
mov
sbb
es
or
pop
(bad)
test
mov
iret
gs
add
mov
mov
(bad)
sub
les
(bad)
cmps
xchg
call
pop
idiv
xlat
xlat
mov
cmp
xchg
aad
rcr
ret
xor
inc
xchg
scas
loop
sub
add
xchg
add
pop
mov
shl
add
in
inc
dec
xor
retf
push
jmp
dec
mov
js
sub
jle
cmp
cmps
or
lahf
lahf
mov
mov
sub
rcr
adc
inc
and
pop
loop
imul
sbb
imul
pop
in
bt
cmp
out
nop
test
pop
jb
ins
dec
in
or
test
jle
add
and
jp
retf
pop
fmul
mov
xor
pop
sub
jae
add
adc
jae
repnz
mov
fxch
jnp
adc
pushf
scas
jnp
mov
call
mov
mov
mov
fisubr
iret
xor
adc
adc
into
cmc
ins
iret
cmp
push
xchg
xor
lock
nop
jmp
ror
fcomip
in
lds
add
enter
es
push
cmp
je
mov
mov
mov
stos
stos
movs
mov
inc
push
and
(bad)
mov
push
and
sbb
fdiv
jmp
xor
push
std
(bad)
dec
and
movs
jno
in
xor
aaa
outs
dec
pop
or
adc
push
mov
add
push
push
mov
sbb
scas
rcl
add
mov
addr16
push
add
push
sbb
(bad)
dec
inc
call
mov
inc
in
mov
pushf
add
cmc
mov
inc
mov
cmps
imul
pop
sbb
xchg
out
add
movs
nop
adc
das
sar
gs
mov
call
cwde
scas
cmp
aaa
stos
jecxz
in
rcr
loop
mov
adc
ret
push
and
jno
pop
xchg
ret
ins
push
outs
or
sub
lock
mov
(bad)
mov
xchg
loope
pop
jns
adc
(bad)
popa
test
adc
leave
and
inc
mov
test
stos
mov
or
fst
pop
fadd
cmps
adc
dec
inc
bound
mov
adc
daa
daa
(bad)
fisubr
icebp
imul
inc
xchg
or
outs
test
push
inc
inc
jle
imul
outs
pop
xor
imul
mov
out
or
and
inc
jb
push
loop
pop
xchg
lahf
xchg
mov
repnz
aas
out
jge
test
stc
inc
sub
pop
add
mov
shr
fisubr
imul
out
out
xchg
xchg
mov
adc
mov
or
lea
mov
loop
fwait
stos
das
ja
xor
out
das
xor
into
jo
mov
inc
es
call
aas
stos
and
sub
scas
fld
fld
mov
leave
shl
call
add
mov
nop
and
xor
fcom
sti
aam
mov
mov
daa
push
int
add
(bad)
(bad)
clc
xchg
xchg
imul
cwde
movs
pushf
shl
or
sbb
and
mov
inc
fcmovne
adc
mov
xchg
xor
push
adc
dec
iret
mov
scas
ins
mov
pusha
xchg
push
jb
pop
leave
call
add
mov
add
and
popf
mov
(bad)
sub
jo
sbb
and
adc
mov
loope
jno
mov
int
jg
mov
adc
jecxz
jl
dec
ficomp
sar
push
add
in
shl
cmp
ret
(bad)
(bad)
jmp
pop
add
popf
jne
jle
jno
fdivr
and
push
dec
test
(bad)
out
pop
fisttp
ret
sub
xor
pop
mov
push
push
dec
movs
add
(bad)
xlat
sub
not
add
dec
push
sar
mov
ins
hlt
push
adc
sub
scas
fdivr
mov
mov
xor
call
push
mov
daa
xlat
sti
jae
loop
jae
mov
xchg
sub
cmp
sub
test
mov
ret
leave
mov
push
mov
leave
mov
or
xor
(bad)
shl
mov
sbb
clc
and
sahf
pop
int
push
sbb
xchg
call
sbb
push
xor
das
mov
jne
jne
fimul
sbb
mov
mov
push
ds
mov
out
mov
pop
les
outs
or
jae
mov
mov
dec
cld
pop
int
nop
jmp
mov
cmp
mov
pop
(bad)
sbb
jo
daa
mov
(bad)
repnz
scas
repz
lods
mov
adc
inc
or
cmp
inc
jo
mov
fiadd
push
div
cmp
mov
push
xor
xchg
add
inc
add
xchg
xchg
stos
mov
push
sub
outs
jo
push
sbb
push
ja
div
mov
shr
adc
dec
stc
jp
aaa
inc
xor
push
int
mov
mov
mov
push
inc
rcl
nop
adc
call
jp
lods
lods
and
test
mov
xor
push
mov
js
xlat
mov
and
ja
mov
gs
aaa
dec
(bad)
loop
shr
mov
inc
ins
loopne
push
xchg
jb
ret
adc
or
fs
outs
outs
pop
retf
enter
out
dec
xchg
enter
retf
clc
jo
aad
push
mov
jmp
mov
call
and
out
mov
push
adc
xor
cmps
pop
inc
inc
push
mov
xchg
jge
lea
mov
mov
aad
jnp
xchg
arpl
fwait
pop
xchg
test
outs
bound
mov
fidivr
rcl
or
arpl
jne
sbb
sub
and
jo
iret
sbb
cwde
push
ins
inc
daa
push
cmp
adc
mov
mov
das
add
pop
rol
nop
push
sub
dec
xchg
outs
lahf
jae
lods
inc
xchg
cmp
(bad)
pop
cmc
int
adc
push
retf
pop
rol
push
movs
xchg
popf
xor
lods
scas
lds
cdq
or
mov
sbb
mov
dec
xor
fild
call
sub
jne
or
icebp
xor
pusha
mov
gs
stos
pop
sbb
fldcw
popf
mov
inc
dec
fcomp
fist
jge
add
push
cmps
pop
in
pop
inc
mov
pop
shl
addr16
and
jp
outs
push
jecxz
jmp
fistp
retf
mov
mov
addr16
rcl
lods
iret
cmps
xor
or
rcr
ror
std
and
ins
jle
pop
jge
mov
jg
or
xchg
sbb
or
mov
and
sbb
kmovb
(bad)
idiv
xchg
xor
pop
mov
js
mov
mov
iret
jo
sub
aas
stos
xchg
cdq
(bad)
mov
in
sbb
cmps
add
pop
imul
and
xor
data16
jnp
fisttp
jmp
cmp
mov
jg
std
rcr
push
cmp
je
movs
jae
push
pop
fmul
wrmsr
into
or
or
(bad)
lods
xor
xor
lods
rcr
adc
fsub
sub
lahf
pop
and
nop
mov
js
sbb
sbb
and
xor
and
cmp
sar
pop
hlt
fistp
icebp
call
sub
shl
pop
cwde
jnp
cmove
loop
push
retf
inc
push
fidivr
les
mul
xchg
push
pusha
sub
scas
fiadd
loope
inc
adc
(bad)
test
fidivr
dec
add
inc
mov
popa
shr
dec
inc
jmp
jg
mov
out
push
push
mov
(bad)
(bad)
adc
sar
fcom
pop
hlt
adc
daa
cmp
adc
sar
call
ror
add
mov
cmc
push
xchg
inc
adc
cmp
(bad)
fistp
mov
cmp
xchg
in
outs
jmp
pop
in
dec
enter
loopne
ret
pop
test
xchg
inc
push
xor
push
jmp
inc
comiss
or
jno
xor
sub
xor
pop
movs
xchg
cmp
cmp
pop
outs
push
mov
cmc
out
jne
cmps
jg
cmp
ror
dec
or
mov
(bad)
pop
fdivp
cmps
adc
mov
add
in
js
into
inc
adc
gs
aaa
inc
std
sbb
xor
xchg
add
mov
arpl
or
fist
mov
add
retf
js
leave
and
in
dec
pop
mov
pop
sbb
call
bound
lods
jmp
or
lock
push
sub
xor
leave
xor
jmp
and
cwde
push
pop
ins
jle
ss
add
jmp
scas
jmp
push
pop
sub
adc
std
shl
cmc
xchg
into
test
out
aaa
xor
lea
enter
dec
mov
fs
lahf
aaa
dec
or
mov
jp
xchg
fld
cmps
sahf
out
mov
int3
xlat
mov
mov
adc
and
test
vmovaps
imul
pop
das
jbe
and
(bad)
outs
jno
cwde
inc
pop
fwait
scas
add
repz
repnz
push
rcr
add
mov
add
cmp
nop
dec
pop
add
add
lock
jg
fistp
adc
div
sbb
ins
loop
enter
lods
add
push
inc
jle
sub
stos
mov
or
cmp
xor
mov
jmp
mov
inc
out
js
lds
sub
mov
ins
fisttp
jns
jne
inc
fisttp
fidiv
push
call
enter
and
loopne
in
mov
fcom
and
and
mov
repnz
xchg
xchg
frstor
movs
inc
and
cmps
adc
jmp
jno
pop
pop
jmp
mov
out
loopne
xlat
(bad)
add
cld
xor
add
jo
cli
out
jg
sbb
xor
add
sbb
inc
aad
pop
(bad)
pusha
(bad)
inc
mov
inc
adc
ja
pop
sahf
pop
fsub
popf
push
push
or
pop
xor
sbb
push
aas
mov
inc
sub
fmulp
das
imul
addr16
xor
or
inc
jno
cs
(bad)
int3
mov
inc
pop
in
in
ins
test
ret
mov
popa
mul
push
cwde
bswap
cs
adc
ds
es
cmp
pop
lock
lea
or
ja
ficom
push
int
inc
or
cmps
xchg
mov
cmp
(bad)
stos
pop
and
(bad)
or
lods
scas
addr16
std
je
push
int3
inc
xchg
pop
push
xchg
loope
xor
neg
bound
sub
popf
frstor
push
and
ja
(bad)
test
xor
mov
and
jmp
xlat
mov
(bad)
aad
cmp
sub
shl
jns
cmc
popf
idiv
mov
xchg
cmps
mov
add
push
or
sub
jmp
stos
mov
movs
ins
cmp
retf
sub
pop
mov
ror
sub
jg
lods
sub
popf
mov
loopne
(bad)
das
mov
cmp
les
out
push
je
(bad)
mov
or
sar
dec
mov
cmp
cmc
adc
rcr
xor
sar
mov
mov
lahf
push
shl
sbb
stc
xchg
test
jl
jmp
sub
pop
pop
lahf
jno
in
retf
jnp
or
sti
or
xchg
cmc
cmp
push
arpl
in
mov
push
pop
mov
add
mov
popa
push
inc
sbb
cmp
popa
leave
dec
aam
in
mov
outs
adc
enter
fwait
and
ds
cmps
in
sbb
fistp
imul
data16
repnz
dec
mov
ja
mov
retf
shl
lahf
add
add
mov
cmp
repz
jmp
ss
scas
adc
xor
jne
pop
fst
mov
mov
add
push
mov
jns
mov
and
sbb
fwait
sub
stos
in
dec
cmps
into
xor
lock
sahf
inc
icebp
in
xor
jne
aam
scas
jecxz
add
(bad)
pop
test
mov
jns
add
cmovb
fisubr
jl
jmp
repnz
pop
movs
mov
add
call
adc
movs
sub
in
jnp
jp
fcomp
cmp
push
mov
in
push
cmps
popf
movs
shr
ins
out
int
lea
push
push
repz
jmp
sub
adc
add
pop
(bad)
lods
jno
mov
lods
imul
mov
sub
sti
(bad)
jp
movs
pop
aaa
int3
jmp
lea
jns
or
call
inc
test
mov
cmp
sub
es
dec
adc
cwde
push
cmp
loop
mov
inc
pop
push
mov
into
xchg
hlt
movs
xor
das
lds
adc
ss
pushf
cmp
ror
push
adc
gs
and
cmp
push
in
out
loope
out
(bad)
out
ficom
jae
dec
xchg
hlt
imul
xor
xor
xchg
fidiv
out
jo
dec
adc
sub
jnp
outs
lods
adc
push
fnsave
das
push
add
dec
jne
xchg
xchg
cmps
mov
push
push
jle
test
les
jmp
div
call
adc
jb
adc
or
cmp
add
in
sub
xchg
adc
adc
call
and
cdq
imul
and
jns
pop
push
cmps
jg
sub
fs
dec
pop
out
(bad)
or
stos
shl
jmp
test
movs
jecxz
sub
jo
dec
sub
pop
enter
and
xor
pop
xor
out
xor
inc
loope
add
pop
xchg
mov
mov
sbb
pop
out
inc
aas
dec
mov
jge
or
sbb
cmp
(bad)
pop
push
outs
call
mov
loopne
sub
cmp
mov
shl
aas
ret
cmp
rol
add
movs
cmp
test
cmp
xchg
jo
mov
adc
es
xor
jae
leave
or
cmp
or
and
mov
sahf
and
fisttp
ja
jnp
aam
std
repnz
sub
inc
dec
sbb
(bad)
jae
dec
js
std
les
xchg
mov
inc
(bad)
sbb
mov
pushf
add
cmp
inc
in
fxch
xchg
mov
jnp
aam
inc
inc
fbld
stc
into
(bad)
mov
mov
out
aad
mov
mov
popf
out
sti
adc
mov
inc
out
ss
enter
scas
imul
mov
out
dec
xchg
xchg
nop
jl
cmp
pop
repnz
(bad)
ror
stos
mov
adc
xor
jae
jl
(bad)
push
xlat
inc
mov
dec
stos
inc
rcr
test
cmp
out
ins
(bad)
push
call
and
xchg
jnp
pop
sti
fwait
(bad)
out
dec
mov
and
push
jg
dec
cs
pop
jnp
rcl
rcl
popf
in
aas
push
and
and
jne
sub
mov
and
fidiv
loop
xchg
sub
in
outs
pop
push
adc
mov
ss
adc
repnz
or
pushf
sbb
in
mov
popa
cwde
(bad)
mov
mov
jae
push
fwait
std
outs
cmc
ret
aam
inc
adc
fimul
mov
hlt
cmp
shl
add
xor
stc
aad
add
in
fmul
push
push
inc
js
pop
fdivp
out
lds
cwde
and
pop
xchg
push
dec
fstp
pop
push
sar
inc
xor
mov
fld
clc
mov
pop
test
jnp
push
jae
jle
adc
inc
cli
adc
cmp
mov
bound
jmp
dec
es
movs
mov
(bad)
and
xchg
in
and
jecxz
dec
aas
pop
repz
ja
jge
test
mov
popa
jbe
pop
in
inc
add
sub
sub
mov
push
push
mov
ins
mov
scas
iret
mul
sub
cld
cmp
inc
ret
xchg
push
repz
bound
inc
repnz
arpl
push
ror
shr
jg
call
arpl
pop
out
jb
pop
mov
mov
push
push
and
fwait
nop
bound
jge
pop
lds
cmp
scas
repnz
fcmovnbe
add
imul
ret
add
rcl
pop
sbb
cdq
scas
fs
push
dec
inc
fisub
retf
rcr
jae
jae
cmps
pop
add
lods
pop
pop
inc
inc
jmp
enter
lock
xor
add
push
push
jmp
cmp
xchg
out
inc
fcmovne
clc
lods
(bad)
and
outs
pop
sub
(bad)
ss
fs
push
repz
pop
inc
adc
stos
dec
hlt
mov
sbb
push
mov
adc
mov
add
cmp
fwait
in
sbb
jp
jg
bound
jl
mov
sbb
jg
adc
jmp
sub
push
xor
sbb
out
sub
inc
mov
xchg
sbb
rcr
sbb
mov
and
ret
xor
shl
mov
les
mov
xchg
mov
int
mov
neg
add
shr
lock
mov
mov
cmp
mov
(bad)
je
fcmovnbe
push
pop
aam
enter
adc
ret
mov
xor
imul
and
scas
rcr
movs
jecxz
outs
dec
sub
int
jp
mov
pop
in
push
fidivr
pusha
rol
out
cmc
bound
pop
inc
jnp
cld
jmp
shl
jmp
aas
(bad)
push
rcr
loop
adc
or
pop
ret
cmp
and
push
outs
inc
or
cmp
sub
push
cmp
mov
adc
fisub
out
cdq
dec
sahf
sub
jnp
mov
xchg
cdq
jmp
call
adc
dec
pop
out
dec
pushf
jns
jns
sbb
inc
call
pop
cs
std
call
(bad)
cmp
(bad)
mov
mov
ins
mov
jecxz
mov
cli
(bad)
popa
imul
nop
jbe
pop
gs
jge
mov
cs
sar
arpl
inc
call
call
daa
fdiv
loopne
movs
mov
and
sub
mov
jle
sbb
pop
jo
xchg
pop
inc
xchg
out
out
repz
out
xchg
xor
data16
cli
das
inc
pop
ins
add
cmc
aam
stos
mov
dec
popa
icebp
std
inc
je
imul
cmps
jns
enter
cmc
repnz
jo
sbb
push
(bad)
mov
fiadd
push
sbb
xor
sub
test
imul
mov
int3
dec
push
retf
push
cmp
sub
imul
jbe
pop
clc
jge
ror
jecxz
in
or
push
lock
mov
rol
ret
xchg
mov
cwde
aam
repz
arpl
addr16
aad
jg
in
call
xor
sbb
cmc
neg
push
out
test
scas
jge
les
xchg
inc
dec
ror
dec
ss
ret
mov
sbb
add
out
fs
arpl
sar
jg
ins
jo
into
xchg
shl
mov
std
sbb
xchg
(bad)
shl
fadd
outs
jp
mov
(bad)
sub
xor
scas
jmp
(bad)
imul
inc
mov
xchg
(bad)
cs
pop
or
jae
outs
fs
fadd
xchg
pop
(bad)
jmp
popa
lock
mov
cmps
or
sbb
and
adc
adc
(bad)
xchg
ss
pop
and
inc
push
test
fild
sub
push
xor
and
xor
inc
mov
mov
popa
pop
repz
xchg
ins
jb
pop
inc
sub
mov
sub
(bad)
or
mov
js
stos
and
add
das
mov
mov
test
and
sbb
push
mov
ficom
imul
inc
xor
jmp
in
rcr
xor
xor
inc
(bad)
mov
and
sub
(bad)
repnz
cdq
and
nop
pusha
mov
cmp
loop
adc
pop
or
clc
dec
pop
cmp
jg
jge
lock
mov
pushf
lea
mov
pop
js
shl
push
ds
adc
cdq
cwde
mov
jns
fs
sbb
ret
add
nop
daa
cmp
dec
(bad)
cli
call
sub
and
push
mov
xor
inc
mov
ret
ins
movs
ror
sahf
arpl
int
lods
mov
mov
mov
loopne
push
push
jecxz
fistp
inc
lea
or
shl
and
frstor
mov
adc
and
mov
in
jmp
(bad)
iret
call
jmp
push
cmp
scas
push
push
mov
jnp
jmp
bound
ja
retf
pop
xchg
mov
into
push
stos
push
repz
mov
leave
cld
fnstcw
jmp
push
sub
rcl
mov
repz
and
pop
(bad)
cmc
dec
aas
mov
ja
jp
jl
cmp
sub
push
dec
sbb
mov
mov
xchg
mov
fadd
retf
(bad)
cmp
cmp
pop
cmp
ss
mov
and
jp
xlat
adc
pop
ds
mov
sub
outs
jo
clc
aas
int
inc
mov
(bad)
mov
into
jne
sub
cmc
imul
or
fldcw
xchg
cmc
out
push
pushf
add
popf
(bad)
sbb
sbb
ins
out
push
jle
imul
std
add
xor
lds
pop
call
stc
nop
or
ds
repz
cli
fidiv
shl
je
cli
xor
ret
stc
xchg
sbb
(bad)
mov
mov
xchg
mov
pop
inc
xor
jmp
jb
add
xor
pop
in
cmps
inc
loop
pop
mov
mov
jle
mov
jmp
inc
jns
int
iret
mov
mov
pop
mov
loop
cmps
cmps
loop
enter
and
arpl
mov
inc
add
cmp
mov
inc
jle
jle
jecxz
pushf
jp
dec
icebp
int
fsubr
jge
inc
adc
rcr
mov
test
add
je
mov
or
pop
jecxz
pop
les
pop
outs
or
cwde
cdq
je
std
push
add
call
fbstp
fwait
xor
icebp
and
pop
(bad)
xchg
stos
pop
loop
xchg
rcr
(bad)
mov
mov
loop
leave
jmp
outs
xchg
xor
loop
js
fdivr
hlt
push
push
adc
bound
cwde
xor
mov
adc
in
stos
lahf
cmps
push
sbb
stc
push
sub
mov
loopne
jecxz
fwait
xor
mov
jp
sbb
imul
adc
mov
cmp
cs
cmc
fsub
outs
adc
addr16
mov
pusha
mov
xchg
loopne
push
adc
mov
test
repz
mov
test
adc
mov
aad
pop
les
xor
pop
pusha
push
mov
mov
fwait
out
and
push
dec
dec
push
dec
mov
mov
push
and
scas
pop
sub
xor
fwait
dec
mov
add
or
pop
shr
or
repnz
adc
sti
mov
ja
cli
sub
lock
xor
and
push
out
lods
rol
into
sbb
imul
adc
lods
fisub
scas
loop
test
xor
clc
leave
sub
sbb
cmp
outs
xchg
xor
nop
pop
out
xchg
aas
clc
mov
xchg
dec
les
movs
aam
test
cmps
ss
std
loop
shl
int3
cld
leave
lods
jbe
stc
cmc
sbb
sub
stos
(bad)
outs
ret
push
ins
xor
rcr
sbb
jge
add
fwait
push
test
sbb
fnstsw
xchg
pop
std
div
or
icebp
imul
addr16
and
daa
xor
inc
jbe
inc
(bad)
enter
or
and
add
adc
adc
pop
and
js
dec
xchg
xor
add
mov
mov
popf
mov
lock
hlt
sti
cmp
jae
push
inc
and
retf
push
mov
push
(bad)
rcr
mov
in
pop
hlt
popf
fidiv
jne
call
jg
mov
fiadd
cli
lahf
aas
mov
stos
mov
xchg
pusha
test
mov
add
or
mov
cmp
or
int
popa
xlat
and
cmp
or
sti
dec
add
pushf
dec
xor
jb
or
sub
fwait
dec
pop
dec
out
xchg
stos
sub
xchg
neg
data16
mov
aas
push
mov
fsub
dec
cmps
shl
dec
std
pop
dec
fldcw
iret
jb
xchg
ins
fnstsw
or
and
mov
adc
dec
xor
aad
pop
call
jnp
imul
mov
iret
dec
xchg
lods
sbb
scas
in
adc
sub
cmp
aas
js
out
adc
pop
jae
cs
jnp
loopne
fucomip
xchg
in
ins
cs
xor
test
xor
push
leave
test
outs
mov
fs
and
jo
and
ret
sbb
scas
add
ja
jmp
jae
sub
mov
sbb
(bad)
jmp
add
(bad)
rol
jae
xor
push
add
aas
add
mov
fnstenv
icebp
or
popa
in
lods
mov
movs
test
lds
cmp
or
daa
pushf
data16
xor
ror
sub
cmp
xchg
inc
call
clc
sbb
mov
std
push
pop
adc
cli
jp
stos
or
enter
mov
lock
call
jo
jmp
enter
and
add
repnz
dec
xchg
clc
sub
gs
sbb
mov
jb
adc
push
mov
outs
aaa
push
retf
jae
xor
scas
iret
add
inc
mov
inc
and
adc
mov
dec
or
dec
mov
inc
or
push
loope
xchg
mov
icebp
retf
out
mov
cmps
call
cmp
pop
inc
dec
xchg
cmp
loope
push
sbb
retf
sti
inc
mov
push
jbe
mov
imul
repnz
loop
aas
mov
mov
xchg
gs
lahf
mov
sti
mov
repz
lods
push
fdiv
mov
jl
add
pusha
dec
movs
stos
cld
mov
lods
dec
arpl
imul
stc
push
aaa
add
xor
es
jo
in
loopne
mov
push
inc
std
push
(bad)
inc
xor
cmp
sbb
mov
cli
loop
ret
push
movs
xchg
sub
dec
mov
mov
ss
fidivr
pusha
sub
xor
cld
dec
pop
int3
xchg
out
(bad)
mov
cmp
push
mov
mov
mov
pop
mov
dec
test
fstp
enter
lds
fdecstp
out
loopne
dec
lods
movs
inc
mov
xor
ss
pop
in
pop
dec
xchg
jbe
adc
add
cmp
jecxz
push
and
outs
sti
jae
in
and
popf
add
cmp
jmp
test
inc
enter
movs
nop
movs
fabs
ins
lock
clc
ins
jno
aad
loop
(bad)
(bad)
pop
(bad)
jb
pop
xchg
ficomp
sub
push
and
(bad)
xchg
sahf
sbb
pop
es
mov
aaa
stos
cli
cmps
aam
pusha
push
jp
add
adc
ror
addr16
mov
sbb
mov
ds
retf
and
push
repnz
jbe
sub
cli
clc
inc
and
push
out
cs
mov
mov
inc
leave
sahf
push
gs
ins
mov
call
mov
jns
lods
jo
sbb
adc
shr
gs
aad
mov
add
test
jne
or
xor
pop
inc
inc
mov
call
(bad)
xchg
lods
mov
xchg
out
inc
push
mov
dec
lock
adc
les
sub
sub
mov
repz
sbb
pop
add
xor
inc
jle
cmps
inc
sbb
pop
fisttp
sub
cmp
cmps
gs
jb
test
retf
je
sbb
(bad)
js
call
mov
fisub
mov
sbb
add
enter
(bad)
aam
jmp
retf
dec
fistp
sti
sahf
cs
icebp
es
dec
sbb
add
cmp
pop
mov
pop
fisubr
imul
bnd
adc
mov
cs
fcomip
or
(bad)
xchg
lea
adc
mov
mov
aas
and
rol
test
cmp
ins
and
ins
xchg
jmp
add
call
popa
test
push
out
call
pop
nop
in
into
mov
fild
pop
icebp
(bad)
sti
add
and
aas
das
cs
xchg
clc
test
ror
daa
cli
jns
arpl
pushf
shr
aas
stc
enter
in
push
dec
int3
test
jo
call
shl
push
inc
add
dec
xor
dec
mov
int
in
lahf
leave
lods
fwait
jl
fwait
jae
sbb
jge
es
or
sbb
cmp
test
dec
and
repz
pop
stos
jmp
pop
and
shl
retf
repz
xor
pop
inc
leave
sbb
or
sub
inc
test
mov
inc
in
imul
pop
loop
cmp
or
or
mov
repz
lahf
outs
adc
fidiv
adc
cld
pop
mov
cwde
js
js
sub
jnp
mul
and
push
push
mov
jmp
cmps
mov
shl
sub
push
dec
mov
ins
call
push
push
xor
push
sbb
xor
fwait
icebp
popf
cld
in
in
mov
xchg
cmp
or
jge
dec
add
outs
xchg
vucomisd
mov
(bad)
fstp
imul
cs
lds
sar
mov
aad
add
retf
add
pop
xor
mov
mov
sub
add
das
inc
and
cdq
push
mov
xor
pop
outs
mov
sti
inc
out
pop
pushf
fld
mov
mov
dec
cmp
fist
loop
mov
xlat
sub
mov
jb
xchg
addr16
iret
ret
lods
pop
adc
mov
and
jl
mov
popf
pop
jnp
dec
pop
sub
push
dec
cld
test
dec
stos
and
xor
arpl
dec
cmps
mov
sti
and
adc
les
xchg
ret
jp
xchg
xchg
and
lods
aad
pop
mov
mov
inc
mov
or
xchg
inc
es
inc
cmp
cdq
iret
push
(bad)
in
dec
ins
add
lea
pop
cs
push
cs
pop
or
rcl
sub
(bad)
xchg
inc
push
pop
sub
int
lock
rol
mov
gs
mov
shr
call
out
or
out
enter
xchg
cmp
arpl
sti
pop
sbb
xchg
stc
aaa
jnp
fadd
sbb
sub
jno
mov
cmps
inc
sub
push
js
inc
push
int3
sbb
repnz
aaa
xchg
and
bound
ret
movs
or
icebp
leave
test
cwde
xchg
call
sti
and
repnz
fcomp
sub
add
push
mov
loopne
xor
pushf
leave
push
in
outs
pop
fstp
cmp
push
mov
sbb
jmp
dec
icebp
scas
jne
xor
std
pop
mov
arpl
iret
adc
jno
call
jge
cli
lods
xor
and
stos
in
xor
sub
or
repnz
inc
dec
xchg
add
jg
sub
test
sbb
cmp
fs
sub
inc
push
int3
xchg
add
mov
imul
icebp
enter
inc
mov
jno
nop
adc
cmps
stos
adc
mov
sbb
xchg
push
cmp
jb
scas
mov
mov
stc
rol
xchg
add
out
int
or
icebp
inc
inc
movs
or
dec
xchg
ficom
xor
std
cmp
sub
ja
mov
lea
les
(bad)
movs
ret
sub
adc
loope
ret
jae
imul
call
ins
fs
inc
retf
rcr
mov
aam
test
in
xchg
pop
repz
push
lahf
sub
lods
xor
mov
xchg
fwait
mov
repz
(bad)
ins
mov
cmp
enter
jge
mov
outs
inc
xlat
and
shr
and
imul
adc
aaa
hlt
or
xchg
dec
add
inc
inc
callw
leave
add
or
inc
scas
adc
pop
in
retf
jmp
and
js
fstp
in
hlt
rcr
xchg
push
das
add
push
iret
pop
shl
jmp
ins
and
inc
sbb
dec
arpl
clc
mov
dec
mov
or
mov
es
rcr
mov
ins
pop
sbb
scas
stc
jle
jmp
daa
push
out
dec
cld
sub
sbb
cs
mov
add
inc
stos
jecxz
in
lock
sbb
ret
pop
and
cmp
cmps
cld
pushf
cmp
das
xchg
mov
inc
inc
mov
int3
cs
js
adc
jecxz
jle
movs
mov
scas
jmp
out
mov
sbb
mov
push
adc
push
add
or
sub
icebp
in
sub
xchg
push
cmps
(bad)
push
sub
aad
fcmovb
xor
mov
out
mov
cdq
pushf
ja
push
into
mov
dec
mov
add
bound
test
popf
ins
ret
or
add
retf
inc
(bad)
fimul
mov
bound
xor
aad
inc
cmp
sti
jbe
ss
in
sub
ret
or
fmulp
pop
mov
mov
sub
cli
outs
idiv
test
and
repnz
or
push
movs
push
fidivr
sub
test
and
inc
aad
pop
fbld
popa
or
nop
pop
pop
or
sti
arpl
mov
mov
fs
pop
cdq
cmp
pop
sub
ins
sub
and
loope
sbb
cmp
sbb
sub
xor
mov
rol
ret
les
mov
push
and
sahf
addr16
aam
outs
mov
push
push
dec
mov
rol
sbb
call
into
add
xlat
jbe
adc
int
sbb
push
push
or
repnz
push
int3
aas
out
mov
loopne
xor
cmp
pop
imul
inc
(bad)
sub
mov
jbe
popa
pop
retf
push
je
lock
mov
mov
sub
jae
cmp
outs
adc
sbb
aam
mov
jnp
and
xor
dec
ja
js
push
stc
(bad)
cmp
xchg
repz
(bad)
jmp
sub
mov
jp
mov
js
test
arpl
mov
mov
das
lock
mov
jbe
mov
or
pop
ret
rcl
jge
pop
inc
or
aam
ja
ins
xchg
shr
push
cmp
xchg
mov
add
leave
sub
lahf
jb
mov
shl
sub
cdq
icebp
adc
or
stos
push
(bad)
xchg
xor
xchg
lds
shl
aas
repz
adc
inc
fstp
xor
sahf
out
sub
mov
jmp
jle
dec
pop
and
repz
or
out
test
es
scas
sbb
hlt
addr16
jb
shl
rol
(bad)
and
ficom
aad
in
inc
repz
gs
jge
push
imul
mov
mov
fild
sbb
push
sbb
je
pop
inc
push
mov
cmp
xor
inc
stc
lods
sbb
popf
into
adc
pop
call
outs
pop
cs
add
xlat
add
jns
scas
dec
mov
adc
push
fwait
es
xchg
and
sub
out
dec
ins
sub
dec
cmp
in
fst
cmc
jle
cdq
(bad)
out
cmp
cwde
and
lods
xchg
ret
xchg
xor
jo
out
pusha
cmp
xor
jl
mov
hlt
inc
push
outs
aas
fdivr
out
mov
ror
int3
adc
aas
in
xchg
cmps
mov
dec
popf
addr16
cdq
std
out
sbb
retf
xchg
or
ror
aas
in
inc
rol
mov
jmp
add
cli
lock
mov
pop
mov
shr
leave
xchg
mov
mov
sub
stc
mov
mov
ins
sbb
in
jns
into
int3
push
mov
fcomp
pop
cmp
cdq
mov
cwde
(bad)
lea
pop
mov
sub
push
fst
mov
or
inc
je
jno
add
add
mov
jmp
push
xor
mov
dec
pusha
and
stos
add
dec
fdivp
imul
cwde
sub
stc
xchg
addr16
xchg
outs
jg
push
scas
mov
mov
inc
out
jae
fmul
(bad)
mov
shr
and
js
dec
xchg
and
(bad)
cmp
scas
mov
push
sahf
retf
pop
jp
xchg
xchg
mov
xlat
nop
jl
ror
jg
and
repnz
jge
and
mov
adc
adc
inc
dec
xlat
fild
or
ret
or
fs
jne
cmp
pop
hlt
stos
fcmovbe
shl
sbb
or
mov
mov
stos
sbb
inc
push
lods
in
clc
dec
loopne
outs
inc
adc
jne
xor
int
lods
jle
aas
pop
cmp
push
into
mov
in
pop
cmp
ds
repnz
nop
sub
jmp
sahf
xchg
(bad)
fwait
icebp
imul
or
mov
out
out
dec
call
pop
test
leave
imul
sbb
sbb
dec
test
inc
cmp
add
sub
sub
add
push
cmps
fs
xor
cdq
cmps
xor
mov
sub
jle
out
or
test
das
cs
jmp
inc
pop
out
inc
and
push
inc
arpl
aaa
inc
(bad)
nop
sbb
aaa
fst
mov
mov
pop
arpl
fcomip
jecxz
push
mov
add
lea
sti
int
stos
fsub
std
iret
imul
jo
cs
pop
push
leave
test
mov
sbb
adc
jns
mov
jne
mov
sbb
in
hlt
lods
mov
push
nop
xor
dec
inc
xlat
mov
addr16
pop
cld
aaa
retf
hlt
scas
adc
mov
mov
push
and
icebp
retf
sub
inc
and
ins
popf
rcl
cmp
adc
(bad)
loop
cmps
or
sbb
add
sub
or
adc
rcl
and
inc
or
or
retf
jp
adc
xchg
sbb
fdiv
xlat
dec
in
push
or
pop
or
or
js
xor
lea
cmp
retf
fisubr
pop
push
dec
cmp
mov
push
jns
and
shl
adc
call
cwde
dec
and
stc
test
add
add
add
ins
leave
and
push
aaa
(bad)
sar
cdq
cli
iret
push
sahf
pop
lods
dec
fnstenv
mov
add
ds
sbb
mov
lds
jb
cmc
mov
jnp
les
inc
sub
jmp
and
xor
dec
dec
lods
xor
sahf
lock
stos
repz
lock
call
jne
add
lds
cmp
mov
js
or
xchg
icebp
cs
xor
fst
mov
sub
inc
jb
jbe
rcl
call
fld
inc
cwde
mov
xchg
pop
popa
jp
std
gs
nop
in
push
sub
pusha
mov
sbb
fst
aad
push
mov
adc
or
cld
jne
daa
pop
or
in
mov
jge
leave
and
ja
std
aad
sti
data16
int
or
clc
push
rcr
jecxz
imul
nop
mov
adc
daa
xchg
and
lds
cwde
xchg
pop
lea
pop
or
dec
imul
aaa
les
pop
xchg
int3
xchg
in
sbb
mov
push
mov
inc
popa
out
jle
in
daa
xchg
mov
popa
jne
leave
inc
and
nop
sub
in
idiv
gs
and
out
dec
sub
aaa
(bad)
int3
data16
mov
push
movs
push
movs
xor
repz
int
sbb
lods
call
adc
pop
add
xor
pop
push
outs
mov
(bad)
mov
lea
xchg
jb
js
sub
aas
add
adc
dec
push
jno
scas
loopne
jb
sbb
pop
sbb
loope
jns
pop
inc
xor
aaa
push
test
inc
das
gs
mov
ins
(bad)
mov
mov
inc
out
(bad)
pop
sub
pop
dec
out
and
jbe
cld
(bad)
adc
cmps
add
push
jo
jmp
ret
scas
pop
je
mov
add
mov
stos
ficomp
ja
mov
mov
test
sub
mov
xchg
loop
into
stc
leave
scas
ins
jmp
jge
lahf
mov
or
jne
push
and
ins
xchg
or
pop
xchg
jmp
mov
je
int3
pop
and
fbstp
dec
sub
arpl
push
gs
inc
cmps
cmps
nop
xchg
loop
xor
sbb
inc
(bad)
in
pop
or
loope
mov
sub
jae
ja
cmp
pop
rol
fidivr
sub
int3
cdq
ja
inc
addr16
sbb
clc
popf
adc
mov
mov
cmp
dec
sub
mov
dec
mov
movs
mov
xor
aam
push
shl
sub
cmps
adc
mov
mov
xor
popa
and
cld
xor
push
sub
cmp
(bad)
and
xor
cmp
lahf
pop
sbb
dec
jae
(bad)
out
pop
xchg
jne
jne
and
push
loope
std
mov
enter
dec
jmp
(bad)
xlat
dec
adc
jecxz
repz
(bad)
push
popf
mul
test
outs
cld
out
test
sar
arpl
rcr
mov
in
sub
add
shl
lds
mov
out
push
aas
add
xor
push
mov
loope
jns
xchg
fisubr
xor
dec
cmp
outs
cdq
dec
pop
or
cmps
xor
inc
jnp
test
or
fsub
cmp
daa
xchg
retf
sahf
shl
or
in
iret
call
je
sub
ss
xchg
into
cmp
loope
mov
mov
aaa
sti
ret
lock
cmp
sub
inc
cli
icebp
lea
mov
xor
or
es
mov
add
rol
xor
mov
mov
and
call
jnp
push
sbb
out
jns
or
mov
mov
out
sbb
add
mov
lock
inc
out
inc
xchg
xchg
mov
jmp
mov
aam
out
mov
mov
mul
mov
adc
lock
repnz
add
mov
shl
shl
add
sub
test
cs
mov
push
push
loop
xor
jge
push
inc
jae
call
jmp
xor
mov
(bad)
loop
sub
popa
pop
mov
xchg
lock
dec
leave
adc
in
es
test
xchg
imul
daa
mov
adc
int
daa
mov
loope
push
leave
xchg
push
mov
mov
push
sub
movs
mov
test
inc
jge
sahf
fstp
sbb
add
push
xor
xchg
and
jbe
loop
dec
ret
cmp
iret
clts
xchg
les
retf
out
int3
push
push
lds
pop
sahf
and
xchg
call
popf
ror
fldcw
out
clc
xchg
imul
mov
cmp
sub
loope
mov
xor
push
es
in
sbb
test
gs
add
(bad)
push
ud2
add
test
ret
je
inc
jno
rcr
mov
push
add
cmps
shr
and
jl
ins
and
in
push
mov
popa
mov
jbe
mul
mov
(bad)
(bad)
(bad)
adc
popf
jmp
ficomp
and
pop
stos
stos
add
jnp
pop
xchg
ins
inc
inc
pop
or
(bad)
adc
adc
and
retf
fwait
cmp
sub
mov
sahf
in
cwde
ins
ja
ret
add
lahf
gs
inc
aad
xchg
test
cs
retf
push
sbb
loop
mov
xchg
add
sub
aam
xchg
loop
pop
adc
retf
jl
jo
rol
jmp
mov
pop
add
int
ins
dec
sub
ss
movs
and
cdq
inc
mov
or
retf
test
mov
cmp
and
push
pusha
(bad)
cli
stc
xor
push
sti
cmp
adc
addr16
test
jno
mov
mov
bound
movs
push
adc
inc
dec
xor
add
jl
fnstcw
(bad)
xlat
pop
push
adc
pop
fbstp
mov
call
dec
and
shl
(bad)
inc
sub
cmp
jne
mov
push
jmp
scas
xor
fadd
je
cmp
(bad)
and
ins
dec
fwait
movs
sbb
mov
loope
fwait
lea
sbb
mov
cdq
jmp
fs
ret
das
mov
stos
pop
(bad)
dec
jmp
pusha
into
(bad)
cmps
ffree
inc
repz
lahf
into
xchg
loopne
dec
mov
jp
jnp
xor
rcr
push
popa
enter
pop
cdq
imul
js
lods
xchg
push
aaa
push
sub
and
adc
addr16
jp
test
dec
dec
xor
fiadd
in
sahf
dec
cmc
cmc
push
xor
leave
sub
ficomp
pop
add
dec
test
ss
stc
add
popf
sbb
test
ss
mov
pop
out
data16
dec
jne
popa
ja
mov
scas
push
add
cwde
push
cs
(bad)
popa
fild
repz
repz
push
xchg
and
push
or
test
pusha
xor
sbb
mov
sbb
push
inc
pop
jbe
push
xchg
mov
loope
xor
nop
loop
mov
outs
bound
inc
(bad)
push
sbb
test
shl
or
add
add
call
lock
ret
dec
cmp
dec
repnz
push
pop
mov
mov
repnz
push
mov
hlt
jnp
pop
mov
xor
pop
push
or
loopne
or
jnp
and
mov
mov
mov
inc
pusha
(bad)
stc
stos
mov
retf
aad
and
mov
inc
(bad)
movs
and
sbb
mov
cmc
jmp
scas
push
sbb
mov
lahf
iret
sub
add
mov
stos
imul
ffreep
inc
adc
rcr
dec
sub
(bad)
daa
xor
inc
sbb
bound
or
rol
popa
jg
xchg
bound
xor
in
pop
test
xor
call
mov
mov
popf
rcl
and
ins
std
jns
mov
aaa
pop
mov
rcr
xor
fdivr
inc
push
mov
push
mov
(bad)
rol
dec
out
ins
add
bound
adc
fcmovb
adc
mov
xchg
scas
les
out
and
pop
xchg
(bad)
mov
je
cli
jge
stos
data16
(bad)
shl
(bad)
ins
push
rol
loope
xor
scas
dec
jmp
lahf
mov
jge
push
mov
xchg
and
cli
mov
fstp
stc
int
push
in
mov
mov
popf
or
adc
loope
jp
adc
cmp
lds
add
out
test
test
inc
and
push
push
adc
inc
int
(bad)
pop
(bad)
dec
xchg
mov
(bad)
and
daa
pushf
cmp
inc
rcr
call
mov
out
shl
jge
pop
jno
cdq
movs
lods
jmp
push
mov
xor
cmc
call
sbb
xor
nop
test
mov
add
ret
imul
and
lds
xor
stos
jg
mov
pop
pop
and
push
pop
sbb
fnstenv
jge
imul
or
push
mov
in
mov
in
xor
outs
cwde
imul
test
shl
daa
xor
mov
sbb
sub
ret
mov
ss
in
push
cli
inc
data16
cmp
mov
pop
iret
mov
(bad)
in
sahf
retf
xchg
pop
call
jmp
mov
inc
pop
xchg
ds
sbb
cmps
cmp
dec
arpl
push
leave
pop
sbb
call
hlt
sbb
mov
pushf
mov
mov
das
sbb
adc
inc
(bad)
mov
pop
inc
das
shl
mov
mov
cmc
dec
stos
mov
xchg
mov
dec
sub
imul
popa
mov
out
into
xchg
out
xor
sbb
push
jno
popf
icebp
dec
add
sahf
ret
mov
push
sti
jmp
enter
sbb
pop
call
rol
pop
scas
or
in
in
cwde
(bad)
test
imul
and
and
push
xor
xor
cmps
xchg
retf
mov
out
add
pop
and
xor
jne
mov
adc
fld
pop
pop
lahf
scas
xchg
cld
fst
dec
fcmovne
dec
or
repz
mov
das
mov
icebp
inc
adc
mov
nop
test
ins
or
or
jp
jmp
mov
cmovs
lods
inc
xchg
jbe
mov
das
xchg
in
push
daa
cmps
add
pop
mov
shl
sub
pop
or
psubsb
imul
repz
mov
xchg
mov
aad
cmps
iret
push
or
dec
mov
mov
ins
repz
dec
ror
into
test
in
push
and
(bad)
cmp
xchg
ds
daa
dec
sti
aam
ins
mov
addr16
fs
mov
sbb
or
fdivr
and
add
and
fdivrp
scas
movs
adc
sub
stc
pop
out
popa
mov
lods
lds
fs
ss
movs
xor
xor
inc
or
cli
rcl
adc
mov
repz
add
mov
xor
inc
jl
jb
jg
push
stos
sbb
and
xchg
scas
add
stc
mov
sbb
and
add
or
mov
imul
or
xchg
inc
cwde
in
std
ja
gs
ret
stc
int
pop
dec
int3
adc
jno
push
fucom
pop
fist
fcomp
xor
movs
mov
add
loop
test
inc
mov
out
out
cdq
mov
aad
adc
jo
hlt
retf
iret
inc
mov
fs
dec
adc
loopne
test
fsub
mul
popa
mov
lahf
add
lods
xor
js
js
jge
out
mov
sub
sub
xor
mov
push
mov
sti
xlat
scas
jbe
pop
aaa
xor
in
fdivr
icebp
int3
stos
pop
push
cmps
xchg
loope
cmp
cmps
sbb
xor
inc
mov
sub
jmp
add
sbb
sbb
(bad)
(bad)
arpl
mov
(bad)
scas
push
inc
mov
or
jmp
enter
arpl
dec
xor
outs
adc
imul
repz
xor
popa
push
and
es
cmp
lods
inc
in
cmp
ins
jmp
adc
xchg
or
jmp
and
add
loop
pop
test
shr
je
or
xchg
in
aas
popf
mov
(bad)
(bad)
and
imul
xor
inc
loope
dec
sub
pop
outs
(bad)
stos
jbe
xor
xchg
add
cmps
sbb
loopne
pop
dec
loopne
sbb
sub
retf
inc
adc
mov
pop
fcomp
and
nop
retf
aas
imul
into
out
imul
lahf
jge
mov
sub
ja
icebp
or
mov
mov
das
inc
loop
scas
jg
jg
aam
iret
shl
ss
pop
mov
data16
shr
fnsave
push
aad
xlat
fsubr
sub
add
pop
sbb
test
hlt
mov
xlat
sub
fst
dec
cmp
mov
xchg
mov
push
push
and
xor
std
int
inc
imul
inc
pop
push
mov
or
mov
stos
xor
cmp
in
jo
mov
(bad)
add
sbb
mov
dec
jae
push
xchg
icebp
retf
dec
das
cld
(bad)
call
push
ds
mov
push
sbb
cwde
ins
pop
cmps
mov
add
clc
mov
test
sbb
pop
mov
and
fistp
mov
mov
bound
jmp
in
hlt
jle
sbb
or
mov
mov
mov
(bad)
je
mov
inc
xor
add
add
int
cmp
lods
movs
lods
xor
adc
ret
add
mov
into
leave
push
and
push
cmc
rol
pop
idiv
or
pop
jb
dec
sub
push
inc
jno
inc
jbe
neg
xor
ds
jo
call
div
ret
jbe
gs
mov
xor
aad
push
dec
movs
adc
pop
scas
adc
into
nop
outs
push
ret
or
dec
test
sbb
mov
out
and
mov
xor
retf
gs
add
test
outs
mov
dec
jo
das
sbb
jle
jge
sar
adc
or
mov
sub
shl
mov
mov
or
add
adc
jnp
out
lea
ss
dec
loopne
in
mov
mov
jns
cld
inc
pop
push
dec
std
clc
mov
jbe
adc
adc
sahf
test
lods
retf
jbe
(bad)
clc
mov
jecxz
jle
mov
push
cwde
data16
movs
push
add
stos
xchg
mov
retf
adc
loop
sub
jbe
dec
call
mov
add
fidivr
leave
repnz
sub
fxtract
or
test
sbb
xchg
xor
shr
cmp
xchg
xor
(bad)
int3
or
or
push
xchg
scas
ds
mov
mov
cmp
sahf
mov
icebp
fs
(bad)
dec
inc
dec
ja
pop
and
sbb
das
in
scas
push
outs
push
std
xchg
pop
jge
pop
cli
adc
mov
in
push
dec
pop
pusha
jmp
mov
out
ds
jbe
hlt
fadd
adc
(bad)
mov
sar
xor
xor
mov
ret
and
hlt
add
shr
jge
and
mov
mov
fstp
pop
xor
es
adc
(bad)
push
push
mov
xor
pop
or
repz
xchg
pop
outs
dec
and
jne
sti
pop
out
dec
out
xchg
and
ds
aaa
cs
(bad)
jmp
xor
pop
(bad)
outs
pop
iret
loop
add
xor
mov
mov
ficomp
jb
inc
ror
or
add
ret
(bad)
mov
inc
aas
push
call
adc
pop
jmp
call
and
fadd
imul
cwde
jp
mov
into
inc
enter
and
xchg
adc
inc
int
xor
or
xlat
push
inc
or
adc
mov
pop
ret
sbb
and
out
xchg
retf
aad
(bad)
dec
and
cmp
pop
cmp
cmp
in
jne
outs
mov
sub
mov
pop
push
aas
add
sbb
sub
ins
loope
and
imul
fist
pop
jg
cmp
fldenv
pop
mov
stos
mov
clc
sbb
ss
test
mov
xchg
repz
mov
jmp
jns
xor
sahf
push
pop
sbb
clc
(bad)
movs
adc
or
and
adc
in
sbb
jns
nop
cmps
pop
sub
jae
cmp
mov
fild
xor
prefetcht0
push
or
add
sub
mov
test
push
std
or
rcr
call
adc
push
loop
outs
dec
mov
and
pop
xor
into
(bad)
dec
les
xchg
fwait
inc
in
into
pop
shl
stc
lods
scas
adc
push
fs
dec
(bad)
lods
sbb
fisttp
outs
sbb
out
iret
mov
mul
sahf
das
jb
add
dec
pop
nop
loop
repz
das
movs
or
adc
outs
stc
out
pop
adc
out
push
popa
shl
loop
rol
cmps
icebp
rcl
add
shl
push
push
hlt
fistp
mov
xchg
sbb
scas
xchg
gs
out
lods
inc
xchg
mov
pusha
sbb
lsl
(bad)
stos
hlt
ins
jmp
(bad)
rol
imul
add
mov
pop
mov
(bad)
sbb
push
aas
mov
jle
call
rcl
(bad)
jbe
retf
test
and
xchg
call
jp
mov
xchg
add
mov
jg
mov
jmp
lock
adc
push
push
pop
ret
add
pop
jl
(bad)
push
sbb
std
pop
pop
test
aas
mov
sub
inc
rol
aaa
in
push
cwde
adc
das
pop
xor
mov
push
mov
adc
jmp
fnstsw
stos
cmps
push
call
adc
mov
iret
aam
xchg
adc
mov
loop
(bad)
mov
adc
inc
add
clc
adc
out
sub
sbb
data16
sbb
push
movs
nop
adc
cld
mov
and
nop
xchg
imul
adc
cmp
add
shl
fmul
sbb
jo
or
dec
xor
call
or
(bad)
mov
pushf
mov
shl
cmc
pop
xor
hlt
pop
xchg
(bad)
xor
mov
cmp
jae
mov
jbe
mov
call
outs
(bad)
push
inc
jns
mov
push
loope
mov
inc
pop
mov
mov
test
xor
popa
out
mov
inc
and
movs
jmp
mov
(bad)
pushfw
ins
sub
or
icebp
out
pop
mov
(bad)
cmp
mov
sar
pop
lahf
push
out
and
sub
fiadd
imul
xchg
push
xchg
xor
inc
std
dec
pop
sar
daa
iret
xchg
enter
pop
add
jmp
mov
repnz
pop
loope
jbe
mov
aam
push
ja
test
pop
jno
sbb
mov
push
sbb
or
inc
fist
inc
arpl
mov
stos
in
jns
adc
(bad)
jmp
aas
scas
jmp
outs
sti
mov
sub
in
mov
fs
cdq
fdiv
mov
sub
pop
and
cdq
stc
pop
sub
xor
ins
cmps
jg
psubb
jnp
push
out
pop
add
cmc
ins
call
aas
arpl
inc
mov
clc
pshufw
mov
mov
mov
movs
push
hlt
xchg
xor
test
or
nop
pop
test
push
mov
por
jl
mov
pop
push
mov
aad
pusha
out
add
dec
xor
inc
cdq
mov
ds
mov
test
ret
mov
jo
test
pop
push
mov
retf
fwait
test
sub
sar
cmp
fdiv
pop
or
sub
push
pop
and
cmp
(bad)
pop
mov
adc
mov
fdiv
mov
cmp
ror
xor
stos
popfw
sbb
jae
cvttps2pi
jle
cmp
(bad)
adc
retf
inc
pop
jno
inc
inc
jns
inc
jle
jbe
sbb
cmp
mov
push
jecxz
xor
sbb
jno
mov
sbb
or
ja
cdq
leave
mov
xchg
cs
cmc
into
and
(bad)
cs
inc
push
enter
in
mov
int
or
mov
inc
enter
mov
sbb
inc
or
addr16
push
into
sub
cmp
clc
jg
(bad)
lock
inc
push
repz
xchg
push
jmp
sbb
(bad)
popf
in
mov
sbb
test
xchg
in
push
jnp
push
stos
dec
mov
daa
repnz
retf
cmp
pop
test
imul
js
adc
(bad)
jmp
test
ss
in
adc
in
lods
hlt
xchg
ja
lock
sub
push
and
repz
sbb
xor
popf
mov
jp
popa
pop
dec
lds
int3
push
ret
xchg
ins
clc
fld
data16
jnp
and
cmp
js
fidivr
ins
loopne
aam
xchg
or
int3
mov
adc
cmc
fld
(bad)
jo
inc
inc
test
mov
mov
xor
push
retf
test
call
loopne
movs
lods
imul
in
jo
pop
(bad)
adc
jp
mov
xchg
lea
movs
pop
sti
jmp
adc
or
mov
mov
xchg
leave
gs
add
sbb
shl
sbb
out
xchg
mov
clc
xor
stos
push
int3
ret
loop
xchg
fisttp
(bad)
cmc
inc
shl
retf
ss
sti
pop
pop
sub
jno
sbb
arpl
mov
repnz
and
pop
mov
fs
sbb
cmps
mov
dec
or
imul
sub
push
jmp
jno
pop
loopne
retf
jb
adc
pushf
(bad)
jmp
lock
icebp
retf
imul
call
out
retf
mov
pop
aas
push
hlt
cmp
and
into
xchg
stc
or
ds
mov
jmp
inc
or
lods
test
aad
dec
loop
dec
adc
jl
test
xchg
enter
or
push
ds
in
data16
push
sbb
xor
or
mov
xor
int
dec
fimul
jmp
adc
add
pushf
add
add
ins
stos
not
or
mov
ins
jae
sar
mov
xchg
outs
pop
dec
dec
seto
jno
push
inc
js
pop
idiv
aam
xchg
dec
push
sbb
push
dec
cwde
sbb
rol
pushf
push
dec
ins
mov
int3
aam
cmc
test
test
clc
pop
ficomp
ins
jp
xor
pop
hlt
jnp
mov
stos
xor
xlat
daa
(bad)
sti
jl
ds
loope
ds
cmp
adc
mov
push
(bad)
sbb
cmp
dec
adc
dec
xchg
xor
push
jbe
in
scas
xchg
fsub
outs
arpl
mov
dec
sub
mov
or
and
ret
inc
ins
fisttp
pop
mov
fimul
fmulp
pop
imul
xchg
add
cli
out
es
push
mov
shr
jle
pop
mov
in
add
into
cmp
and
movs
cwde
xchg
mov
add
jecxz
inc
mov
adc
js
jle
sahf
pop
inc
nop
ss
jnp
or
fnstsw
jns
fs
sbb
xor
jl
dec
dec
or
(bad)
jg
dec
ds
dec
xchg
jae
ins
inc
movs
push
pop
ret
dec
mov
dec
xchg
mov
mov
adc
adc
out
mov
or
test
mov
or
shl
leave
jbe
rol
sti
aaa
jmp
push
lds
sahf
and
dec
mov
mov
push
scas
ins
mov
lea
jp
(bad)
jne
push
(bad)
stos
inc
xor
nop
test
cli
dec
jns
jle
jp
pusha
or
inc
push
les
call
ins
pusha
pop
js
out
lock
mov
dec
mov
and
addr16
arpl
jle
icebp
push
int
dec
in
mov
ror
inc
inc
pop
sbb
(bad)
into
mov
dec
mov
sbb
ficom
mov
sbb
loopne
adc
enter
not
jno
push
test
bound
mov
pop
rcr
loop
sub
cmc
loope
inc
nop
xchg
in
sbb
xchg
out
or
pop
inc
addr16
sbb
mov
dec
xchg
dec
inc
xor
mov
es
xor
xor
sbb
ret
popf
sbb
in
dec
sahf
sbb
in
cmp
pop
test
es
or
mov
aas
xchg
adc
daa
pop
sub
mov
inc
jo
lods
cdq
cmp
cmps
pop
leave
xchg
jg
aaa
scas
dec
test
jl
jae
arpl
push
push
xor
jb
clc
fnstenv
das
mov
cmps
(bad)
xchg
cli
je
movs
or
jae
outs
jp
in
fild
xlat
push
sub
and
xchg
std
es
mov
imul
nop
test
xor
fbld
lahf
inc
(bad)
sub
inc
retf
jmp
xchg
scas
cmp
loopne
and
out
jns
fcmove
cmp
jno
js
fstp
fsubr
or
lahf
pop
add
pop
je
out
sahf
iret
hlt
gs
and
mov
or
xor
pop
pop
cmp
sub
scas
mov
sub
outs
inc
out
cmp
fadd
push
inc
cmps
stos
fsubr
sub
retf
xchg
cmp
push
dec
rcr
mov
mov
mov
and
mov
iret
retf
pop
xor
pushf
jecxz
dec
mov
xor
dec
dec
ficomp
push
in
out
mov
mov
mov
into
and
aas
cmp
std
call
jo
mov
imul
(bad)
retf
loop
add
inc
cmp
dec
xor
outs
lods
std
stc
aaa
pushf
imul
pop
add
sbb
out
adc
or
mov
jno
mov
sti
hlt
pop
or
stos
out
leave
(bad)
mov
nop
xor
into
xchg
xor
ret
xchg
cdq
dec
mov
jbe
sbb
sub
dec
xor
(bad)
pop
and
clc
inc
int
push
mov
test
mov
dec
cli
push
cmp
jbe
(bad)
fld
test
dec
movs
imul
jge
ror
mov
ja
fadd
jnp
cmps
jae
sub
les
sub
xchg
call
inc
cmp
daa
fst
test
push
jne
cmc
sub
in
sbb
xchg
enter
or
pop
cmc
inc
mov
in
retf
mov
dec
adc
fimul
cmp
inc
jl
imul
lods
adc
xchg
jb
pop
loopne
dec
int
gs
outs
(bad)
leave
mov
mov
sti
mov
sbb
gs
lahf
stos
cs
and
sbb
int3
pop
dec
mul
adc
lea
adc
mov
icebp
bound
and
neg
imul
not
test
jbe
and
mov
mov
cmp
(bad)
or
mov
repz
retf
mov
ret
out
bound
sahf
movs
xchg
cld
adc
(bad)
cli
hlt
fistp
into
mov
stos
mov
int
dec
retf
inc
int3
sub
push
mov
mov
int3
jmp
cwde
jo
mov
lahf
fstp
push
jge
adc
dec
fstp
les
ror
(bad)
aam
mov
fidivr
xchg
adc
fdivr
inc
jmp
cli
(bad)
ins
mov
into
inc
test
ret
dec
stos
xchg
pushf
mov
lock
sub
movs
xchg
sti
mov
inc
jbe
ret
lock
sbb
sbb
ja
or
or
lods
jg
enter
or
js
repz
inc
mov
jb
or
(bad)
fimul
jo
gs
xchg
mov
lock
ins
sbb
ret
dec
mov
fsub
shl
mov
imul
mov
jge
int3
or
adc
movs
sub
gs
(bad)
(bad)
sub
inc
mov
fistp
pushf
outs
out
xchg
push
mov
push
sbb
pop
sub
bnd
dec
xchg
cs
jmp
push
sub
pop
sbb
ss
cmp
push
sub
jl
lds
pxor
jae
adc
xchg
mov
cmp
sbb
pop
bnd
jp
and
ret
xor
sub
push
jb
aam
inc
fcomp
push
cmp
xchg
cwde
lods
arpl
jbe
cmp
and
pop
(bad)
push
pop
pop
pop
xchg
push
dec
scas
je
jns
jb
fcmovnb
cli
leave
loopne
mov
pop
ins
adc
pop
call
inc
jp
std
and
test
and
fidiv
xor
add
add
les
sahf
jl
sub
lahf
dec
pop
or
test
mov
dec
movs
fwait
pop
pop
jne
ins
mov
add
push
pop
movs
jle
inc
xchg
dec
scas
mov
jbe
and
sub
cmp
or
popf
sbb
adc
cmp
xor
push
inc
fs
adc
jmp
sar
push
adc
jo
mov
mov
cwde
add
loop
es
sub
mov
jne
cld
mov
jnp
mov
adc
shr
jno
push
cmp
stos
inc
test
iret
mov
icebp
xchg
out
loop
gs
lock
jp
ror
xlat
push
leave
pushf
add
lock
push
les
push
in
adc
sub
mov
mov
std
xlat
adc
and
(bad)
jnp
xchg
push
movs
pop
push
fild
dec
outs
cs
clc
imul
(bad)
hlt
sub
(bad)
test
cmc
shr
rcl
out
push
push
movzx
(bad)
adc
test
jg
das
and
jns
movs
fild
and
sub
pop
bound
sti
out
ja
out
retf
pop
mov
pop
es
nop
out
adc
cmc
pop
and
sub
retf
lock
jmp
sar
mov
push
idiv
movs
mov
fwait
dec
inc
out
sbb
aaa
wrmsr
stc
(bad)
lock
outs
sbb
lahf
out
xchg
imul
push
mov
(bad)
cmps
mov
adc
loope
loopne
ds
push
in
jecxz
std
and
and
mov
call
jl
mov
xlat
and
or
cmp
jmp
jnp
sbb
mov
ins
mov
popa
jnp
mov
shl
push
iret
sbb
sbb
sahf
pop
or
inc
ja
fiadd
out
mov
popf
and
push
xor
mov
ud2
imul
cmp
inc
pop
pop
jge
(bad)
repnz
(bad)
popa
repnz
mov
sbb
sbb
add
aad
or
sbb
mov
in
inc
pop
scas
or
repnz
pop
popf
call
inc
mov
popa
mov
cmc
push
xor
add
jle
fisubr
xor
call
pop
and
icebp
pop
ja
sar
xchg
les
scas
jle
cdq
jne
repz
aam
paddusw
nop
mov
mov
xor
repz
test
mov
and
cmp
cli
xor
pusha
jne
in
arpl
ss
dec
cmps
push
push
pop
xchg
gs
mov
and
loopne
leave
mov
sbb
or
fmul
scas
inc
fst
or
mov
mov
dec
hlt
mov
xor
cdq
xor
jp
xlat
shr
or
cmc
inc
mov
shl
test
retf
dec
cmp
adc
mov
mov
dec
pop
ss
fld
mov
ss
adc
sahf
icebp
loope
add
ret
popa
mov
in
xor
cdq
imul
jmp
sub
lea
jg
mov
xchg
retf
mov
pop
fwait
and
fcmove
scas
aam
mov
sar
jno
scas
lahf
cmp
aas
jp
adc
ficomp
inc
jle
push
adc
pop
xchg
mov
test
pop
in
push
jl
test
xor
inc
or
fild
push
xchg
dec
mov
outs
fld
call
jmp
stos
cmps
pop
ins
shl
iretw
bound
mov
fisubr
adc
fwait
xlat
out
xchg
cmp
jns
mov
and
iret
cld
or
sbb
push
cwde
jno
push
das
dec
out
adc
add
pop
fs
int
mov
or
aam
mov
ins
xlat
daa
cmp
dec
xor
ja
inc
cmps
dec
ins
pusha
pusha
(bad)
push
arpl
push
movs
scas
aaa
(bad)
stc
shr
sbb
mov
xchg
mov
movs
push
jo
mov
adc
jmp
push
inc
xlat
mov
lea
test
imul
(bad)
xchg
fcom
cmp
push
sbb
mov
sub
cmp
pop
xchg
(bad)
push
test
jb
inc
sahf
dec
or
mov
inc
or
push
mov
mov
stos
mov
es
cld
enter
sbb
shr
add
pop
pop
in
mov
test
data16
pop
lock
jb
mov
xchg
popa
(bad)
stos
inc
xchg
int3
xor
(bad)
jb
pop
test
sbb
sub
movs
movs
movs
cmp
clc
(bad)
dec
jp
cmp
push
cmc
dec
lds
pop
sub
lds
in
or
cmc
xor
dec
shl
dec
xor
adc
loop
lods
add
cmp
sub
scas
addr16
jne
outs
popf
int
pop
loop
push
push
mov
int
(bad)
mov
xor
lods
ss
adc
dec
mov
ficomp
or
mov
ror
int
push
(bad)
movs
pop
ret
dec
pop
in
sub
pop
jns
fsub
ror
cmc
cmp
sub
xor
jmp
xchg
dec
rep
jg
sbb
cli
out
fimul
push
pop
xchg
push
add
mov
cmovnp
inc
mov
jmp
mov
push
cmc
gs
repz
iret
mov
xor
push
jo
xor
mov
stos
pusha
inc
(bad)
rcr
sbb
out
pop
xor
jmp
popa
into
xchg
int3
js
jmp
cmc
imul
fs
sbb
mov
out
call
lea
jns
mov
xlat
push
xor
mov
jnp
js
test
imul
xchg
pop
inc
das
clc
cmc
xor
loop
out
pop
pop
les
lds
mov
jae
pop
push
xchg
and
adc
test
fld
pop
push
mov
xor
sbb
jno
mov
inc
adc
mov
xor
out
movs
inc
add
jmp
jle
inc
xchg
(bad)
jle
(bad)
cmp
xor
push
mov
sbb
mov
dec
push
jmp
push
push
inc
bound
add
xor
cmp
dec
sbb
jb
fist
call
adc
and
test
clc
push
test
test
imul
push
adc
cmp
cmp
lock
dec
out
jbe
mov
sbb
mov
pop
add
jmp
adc
and
repz
out
pop
leave
push
add
jp
xchg
mov
out
loope
adc
jns
jns
inc
lea
daa
or
pop
sahf
std
add
sbb
jmp
popa
mov
cmp
movs
call
push
int
sbb
mov
test
sar
cs
cli
and
cmp
xor
lahf
jns
mov
push
mov
pop
mov
pop
sbb
inc
jbe
and
ins
or
arpl
nop
lds
es
test
nop
loop
dec
push
enter
shl
cmp
sub
push
add
xor
jno
scas
mov
adc
sbb
cdq
pop
sub
sub
repnz
repnz
pop
nop
fistp
inc
or
leave
lods
and
aaa
mov
rol
cmp
int3
inc
inc
inc
popa
sbb
lahf
xlat
lahf
cs
or
cmc
mov
jb
jl
js
test
mov
sbb
in
stos
inc
dec
loop
and
(bad)
icebp
ins
and
xlat
retf
cmp
pop
call
cs
xor
sti
jo
popa
xor
ficomp
mov
xchg
adc
xor
loop
cmp
jb
jnp
outs
repz
aam
ret
retf
les
addr16
movs
xchg
(bad)
mov
mov
inc
call
cmp
or
pop
mov
and
sub
xchg
test
fidivr
ins
and
mov
shl
(bad)
push
ret
jae
jmp
pop
mov
sub
or
add
and
movs
mov
int
mov
sbb
push
or
cmp
sbb
loop
cmps
out
add
mov
jle
jb
sbb
jb
mov
adc
adc
pop
popf
sbb
dec
and
sub
sub
xchg
arpl
fs
cld
jmp
inc
addr16
cld
add
loop
sub
xor
stos
and
add
dec
fdiv
cmp
jne
ins
cmp
push
pop
xchg
aas
cmp
out
outs
or
nop
call
loopne
mov
shr
setno
push
and
dec
ret
mov
mov
into
ss
jp
pop
pop
inc
hlt
mov
pop
mov
retf
add
xor
das
cmps
jmp
pushf
ror
leave
sub
jbe
ins
jp
mov
mov
iret
jnp
inc
mov
xchg
push
and
test
jg
mov
mov
es
lea
imul
test
xor
cmp
fsub
jp
and
pop
ss
(bad)
xor
xchg
ss
jbe
fstp
pop
in
jo
fwait
es
shr
sub
fisttp
pop
mov
pushf
mov
adc
push
aad
scas
stos
inc
mov
fisubr
shr
xchg
pop
(bad)
jae
pinsrw
neg
(bad)
jmp
pop
inc
push
xor
es
inc
aad
or
hlt
retf
push
(bad)
repz
sbb
sub
and
cmp
dec
mov
xchg
adc
in
fstp
retf
(bad)
pusha
mov
je
mov
fistp
stos
scas
mov
ror
cmps
ret
xor
test
test
arpl
or
pop
pop
mov
sbb
or
sub
in
sbb
(bad)
push
in
push
int3
push
cdq
xor
sbb
mov
imul
pop
jmp
ins
data16
jmp
jno
xchg
push
xchg
xchg
xor
div
sbb
pusha
enter
(bad)
loope
xor
push
xchg
inc
mov
mov
jo
xchg
adc
gs
sub
xchg
ss
fs
sbb
pop
in
mov
(bad)
loopne
sbb
clc
xchg
add
mov
add
rcl
fisttp
inc
jno
fisubr
fsubr
unpckhps
jns
jmp
sub
xchg
add
or
pop
mov
or
mov
lock
xchg
aam
sar
std
mul
sub
inc
xchg
push
mov
loop
inc
mov
fmul
fild
dec
fldcw
or
mov
fstp
xchg
pop
add
and
push
cmp
inc
imul
add
jne
mov
or
(bad)
and
inc
dec
nop
pop
add
add
mov
pop
js
sahf
jl
sub
cli
leave
(bad)
dec
push
and
pop
mov
int
sub
loope
push
add
adc
jl
cmp
loop
sub
jecxz
in
sbb
test
sub
repnz
test
test
jecxz
pop
sbb
mov
loope
mov
rcl
rcr
push
shl
sti
cmp
mov
xor
add
fimul
cmp
movs
cwde
popa
vpgatherqq
push
or
ss
jnp
inc
scas
pop
outs
xchg
test
fmul
pop
xchg
xor
pop
repnz
ficom
jg
jmp
push
test
aam
ret
xchg
fmul
or
mov
and
test
xchg
xchg
lods
dec
mov
mov
and
mov
jg
stc
adc
(bad)
popf
in
pop
lahf
mov
mov
arpl
inc
iret
mov
mov
add
test
cmp
imul
xor
mov
push
sbb
into
fucomip
fnstenv
loop
es
xor
pop
ret
mov
cmp
ret
jp
inc
loope
div
clc
push
push
fwait
sbb
shr
and
ret
pop
add
cli
cwde
pop
mov
int
jmp
sar
add
xchg
enter
push
shl
sbb
les
lods
xlat
pop
jne
dec
inc
sbb
es
jle
mov
sub
mov
out
fstp
(bad)
std
xor
jp
dec
sbb
cli
inc
push
fwait
xor
aas
xchg
xchg
in
push
ins
jecxz
in
cdq
loope
cs
mov
push
dec
rcr
mov
fmul
bound
iret
mov
add
dec
or
ret
shr
fs
pop
xor
mov
fld
jge
in
push
jmp
sub
dec
cmps
and
fisttp
jno
(bad)
mov
arpl
pop
cld
inc
in
jb
(bad)
push
sbb
data16
pusha
mov
out
popf
dec
push
push
jl
movs
fsubp
jg
lahf
xor
push
pop
mov
cmp
push
add
sub
dec
jmp
lahf
mov
or
hlt
loopne
push
ja
(bad)
loope
xchg
xor
pop
imul
pop
jb
mov
pop
fld
es
out
xor
cwde
adc
xchg
adc
add
or
in
dec
push
ins
call
lds
mov
push
test
aaa
test
pop
add
mov
cli
or
xchg
add
sbb
icebp
ds
adc
add
ret
mov
or
add
mov
addr16
sbb
xchg
loopne
ror
sub
inc
push
std
pop
pop
jns
xor
mov
cwde
jbe
mov
test
lea
arpl
imul
cwde
and
or
mov
jo
fcmovu
and
frstor
cmps
jmp
leave
out
mov
loope
push
sbb
jne
cmc
fsubrp
cs
loope
cmp
lods
sub
sub
push
push
addr16
adc
in
push
inc
out
into
rcl
(bad)
fdiv
dec
sbb
in
jmp
xchg
sub
xlat
mov
xchg
outs
std
ja
adc
sbb
xchg
out
sti
popf
sub
jmp
je
cwde
out
xbegin
in
(bad)
xor
lahf
std
pusha
bound
lods
sub
popf
pop
pop
jge
push
add
cmp
and
bound
js
sbb
loopne
cmovg
les
cmp
xor
out
in
dec
aam
xchg
(bad)
in
xchg
jg
mov
popa
test
add
test
mov
aam
fisubr
push
iret
xchg
mov
stos
dec
cli
xor
psllq
push
mov
add
mov
jl
pop
retf
movs
inc
xor
lds
arpl
and
out
xor
addr16
out
xchg
fld
sbb
mov
mov
in
jp
hlt
fwait
mov
ret
push
mov
mov
lods
test
mov
xchg
add
cwde
mov
sbb
mov
sub
test
pusha
pop
into
xlat
jns
clc
aas
add
sbb
bound
inc
or
iret
cmps
sbb
retf
pop
mov
mov
mov
je
cmps
adc
in
mov
sbb
shl
and
sub
cmp
pop
jmp
je
xor
(bad)
hlt
dec
mov
dec
mov
sbb
add
sbb
mov
fwait
in
cmc
fsubr
mov
jecxz
dec
fadd
out
dec
inc
push
sti
xchg
fisttp
sub
loope
xchg
cmps
jecxz
mov
arpl
mov
pop
pusha
es
test
xor
xor
jbe
xor
outs
bound
adc
fild
out
mov
add
retf
add
mov
shl
jmp
or
inc
sub
lods
push
xlat
ret
mov
inc
push
xor
sub
stc
stc
addr16
mov
dec
ss
arpl
sbb
pop
int3
into
cmp
outs
ins
adc
sub
ret
movs
test
push
and
test
das
mov
cld
add
xchg
and
xor
test
push
adc
cwde
sub
aas
xchg
aas
jp
sub
xchg
(bad)
push
(bad)
icebp
in
inc
and
and
mov
add
jg
xchg
pop
push
mov
out
out
pop
lock
jnp
mov
dec
(bad)
call
adc
add
call
repnz
mov
in
lods
pop
jae
sub
out
scas
std
retf
pop
push
mov
psraw
and
pop
or
sbb
cli
(bad)
cmc
xchg
inc
mov
cmp
cmp
ja
scas
xchg
xchg
dec
mov
out
and
and
pop
xchg
jb
adc
pop
into
dec
and
int
adc
out
xchg
pop
out
cmp
xor
xchg
div
add
adc
inc
pop
mov
and
sub
pop
je
movs
nop
and
cs
loop
ret
sub
cmp
mov
cwde
xchg
cmps
shl
push
bound
dec
fwait
dec
call
jae
cmp
mov
sub
mov
cwde
loopne
scas
call
mov
(bad)
(bad)
sti
test
iret
jmp
pop
cli
popa
aad
push
cld
dec
mov
cmc
cmp
loope
dec
add
push
cmps
je
xor
push
xor
fnstsw
pop
fcom
or
jecxz
jmp
inc
pop
jmp
loop
or
mov
pop
mov
push
lods
pop
add
pushf
mov
inc
mov
fistp
outs
mov
iret
gs
not
test
fnstenv
aas
add
sub
enter
sub
ficom
adc
or
mov
imul
cmp
xor
repnz
sub
stc
push
iret
xchg
mov
mov
push
mov
fwait
or
xlat
jae
popa
int3
jmp
pop
(bad)
cmp
and
repz
aaa
loopne
movs
fmulp
mov
imul
call
movs
mov
loop
popf
(bad)
subps
fnstsw
xor
in
and
mov
bound
fldcw
and
xchg
addr16
fcmovnu
das
inc
jo
xchg
xor
add
jnp
stc
ds
mov
clc
stc
loope
mov
fstp
mov
inc
imul
pop
nop
mov
add
dec
mov
push
imul
je
inc
mov
push
sub
adc
call
(bad)
mov
xor
rol
pop
cmps
fwait
fwait
clc
pop
lahf
dec
sbb
mov
cmp
mov
sbb
ins
lods
push
dec
sbb
mov
(bad)
call
mov
push
sub
hlt
pop
(bad)
cmps
stc
lock
mov
jae
sub
outs
mov
add
int
mov
jge
fist
shl
mov
shl
sub
rcl
pop
mov
into
xor
mov
idiv
xchg
sbb
ret
mov
jp
scas
and
pusha
mov
pop
inc
mov
mov
(bad)
cdq
(bad)
pop
push
out
test
xlat
into
mov
add
movs
xchg
dec
(bad)
call
xor
fnsave
into
movs
and
imul
out
dec
popa
das
outs
ins
lds
xchg
sub
push
ror
inc
mov
cmp
xchg
imul
scas
pop
mov
outs
cmps
aam
pop
dec
or
lods
out
mov
jge
cld
test
push
test
sub
bound
push
sbb
sub
dec
push
fiadd
lock
iret
sub
(bad)
mov
fwait
mov
pop
out
(bad)
shl
mov
rcr
mov
or
inc
sub
pushf
into
sub
xchg
inc
int
mov
sub
mov
iret
mov
cmps
push
sub
jg
xor
hlt
cmps
push
mov
mov
dec
pop
dec
stc
add
cmp
xor
dec
push
dec
jmp
cmps
xchg
pop
push
cwde
dec
in
cli
les
rol
loop
adc
aad
xchg
fld
cs
and
adc
mov
push
pop
xchg
(bad)
in
and
mov
sbb
repz
mov
cmp
pop
int
shl
jmp
mov
sub
pop
movs
xchg
sbb
hlt
cli
vmovd
adc
pop
imul
out
mov
push
call
mov
xor
sbb
repz
jo
jl
sub
movs
cli
mov
sbb
adc
inc
jecxz
adc
ficom
test
cmp
inc
mov
stc
dec
arpl
cmps
pop
(bad)
imul
pop
adc
push
das
pop
jo
mov
xchg
pusha
into
scas
addr16
push
and
ret
rol
outs
out
adc
(bad)
dec
dec
pop
inc
lds
scas
adc
push
int
scas
push
dec
scas
jno
pushf
test
rcr
inc
je
mov
mov
or
call
mov
inc
mov
movs
imul
test
(bad)
xchg
xor
cmp
(bad)
lock
sub
jmp
in
rcr
outs
lds
cmp
add
in
sbb
mov
xor
jnp
dec
daa
sub
ins
push
pop
rcr
push
lea
repnz
retf
fbld
adc
add
jns
cmp
jb
mov
stos
call
out
lea
xchg
repnz
pop
mov
push
das
xchg
(bad)
pop
sub
sub
(bad)
jne
dec
and
loop
or
or
mov
test
mov
mov
xchg
lea
(bad)
mov
cmp
and
daa
scas
xchg
cmp
mov
icebp
sti
(bad)
mov
pop
pop
dec
je
stos
test
enter
xchg
xchg
aad
mov
idiv
hlt
mov
sbb
nop
inc
ins
xchg
sti
sahf
dec
stc
xlat
dec
aaa
and
(bad)
jl
inc
xor
bnd
jl
xchg
adc
ds
iret
hlt
enter
jmp
(bad)
cmp
and
in
clc
int
lea
dec
mov
inc
mov
pop
mov
mov
xor
mov
js
data16
push
jo
outs
call
dec
movs
popf
xor
cmp
pop
xor
jge
dec
test
add
and
jnp
xchg
inc
sti
dec
lahf
cvtpi2ps
cmp
cmp
push
inc
and
jo
pop
idiv
sti
adc
mov
jbe
in
and
xchg
(bad)
sub
cmc
cdq
bound
stos
mov
xor
add
movs
jbe
mov
jle
push
out
mov
inc
js
push
cmp
dec
repnz
xchg
xchg
shr
jmp
push
xor
(bad)
fwait
cmc
pop
popa
sub
pop
xor
sub
shl
in
mov
les
ins
jb
cmp
(bad)
out
imul
cmp
add
inc
cmp
jnp
push
lea
push
mov
push
fs
lahf
imul
dec
int3
or
mov
sbb
es
and
sub
cmps
mov
pop
stos
pop
in
lods
sub
mov
push
imul
pop
add
ins
pusha
or
in
pop
imul
mov
aad
jnp
stos
hlt
mov
pop
movs
or
popa
dec
and
sbb
cdq
mov
fsubp
and
popf
mov
data16
push
cmp
cwde
cwde
adc
popa
pop
xchg
dec
push
loope
sbb
nop
int3
or
retf
pop
xlat
std
sbb
leave
jmp
fmul
push
lods
in
and
adc
pop
sub
ss
retf
xchg
and
add
or
or
arpl
js
dec
mov
dec
sub
(bad)
lock
enter
and
into
rcr
retf
sti
ret
or
aas
push
scas
repnz
(bad)
jmp
sbb
fistp
stc
pop
push
int
jb
fisttp
xchg
loop
adc
xor
scas
and
inc
and
push
scas
repz
adc
lods
jmp
bound
mov
xor
mov
bound
dec
dec
lock
mov
sti
mov
jae
retf
jbe
xlat
mov
pop
add
ins
arpl
cmps
add
sar
xor
data16
ror
adc
ret
xchg
push
jecxz
inc
call
ficom
in
sbb
rcr
push
mov
inc
cmp
sub
ja
icebp
and
push
jbe
mov
push
inc
shl
jmp
leave
add
adc
push
mov
cmc
(bad)
fcomp
or
jmp
push
out
in
je
aaa
ror
xlat
mov
push
jg
push
addr16
or
mov
jle
imul
sbb
test
jmp
mov
add
vpor
pop
jecxz
pop
and
mov
enter
scas
sar
and
sti
jg
xchg
dec
adc
pop
scas
leave
ins
enter
xchg
xor
ins
ficomp
dec
rcr
hlt
repnz
push
std
cs
sbb
ret
sub
inc
gs
sbb
not
shl
dec
test
add
mov
pop
jno
cmp
push
icebp
xchg
(bad)
inc
jl
cwde
mov
add
stos
jb
(bad)
and
pop
push
xchg
std
adc
sbb
pop
and
in
call
add
mov
outs
popf
aad
call
mov
mov
xchg
retf
movs
sti
into
sbb
pop
pusha
mov
mov
sub
out
or
or
push
cmp
retf
or
and
in
add
out
call
mov
xchg
pop
pop
shr
or
pop
loope
push
ds
int
test
add
mov
stos
mov
add
pop
aam
icebp
adc
adc
jmp
retf
push
cmc
mov
lods
sbb
pushf
cmp
push
(bad)
nop
movs
pop
nop
icebp
mov
adc
sub
or
push
mov
inc
cmp
jo
jl
leave
cmp
dec
leave
cmp
dec
cmp
iret
rcr
add
xor
movs
mov
xor
mov
xor
add
inc
adc
xlat
mov
inc
retf
dec
loopne
pusha
scas
nop
fidiv
dec
mov
pop
and
xchg
xchg
xchg
cmp
xor
mov
sti
add
outs
cmp
(bad)
cmp
sahf
xchg
push
add
int
fidivr
xor
js
test
pop
push
dec
mov
add
or
int
cld
fistp
pop
fisttp
icebp
push
push
mov
shl
mov
fist
out
sub
sbb
jnp
cmps
pop
mov
pop
xchg
sub
aas
mov
xchg
sbb
call
cmp
mov
pop
sub
sub
sub
std
inc
cmps
sbb
xchg
in
cmps
or
xchg
mov
pop
das
mov
xor
dec
les
mov
and
popf
jbe
inc
std
pop
mov
push
xchg
jp
sub
jno
retf
dec
push
sub
je
rcr
xor
jns
cmp
add
pop
cmp
xchg
pop
fwait
mov
movs
add
(bad)
sbb
push
push
mov
xchg
mov
dec
fidiv
fistp
cmps
lods
clc
ss
js
cmps
std
push
jmp
xchg
or
imul
push
int
std
sar
mov
sbb
mov
fisubr
mov
mov
(bad)
fiadd
out
pop
pop
pusha
xchg
(bad)
loop
jle
xor
sbb
popa
iret
fwait
lds
enter
retf
xchg
pop
idiv
pop
mov
out
pusha
or
movs
xor
mov
dec
adc
jmp
mov
mov
cmps
out
inc
mov
push
aam
je
pop
inc
xchg
ficom
dec
jbe
in
loop
int3
cld
popf
jno
aad
(bad)
mov
gs
loopne
add
cmps
cmp
scas
mov
imul
mov
push
and
adc
pop
aas
mov
and
sbb
lods
jo
sbb
add
in
inc
add
mov
jne
push
adc
cmp
retf
mov
inc
imul
(bad)
xchg
sti
cmp
push
xchg
(bad)
cld
clc
xor
dec
js
inc
hlt
cmp
or
pop
sub
sbb
sbb
frstor
mov
sahf
in
mov
aaa
lock
in
add
stc
lock
pop
mov
sbb
xor
jo
sbb
rol
into
add
mov
(bad)
imul
and
xchg
dec
mov
sbb
sbb
add
jg
retf
lods
inc
sar
or
dec
xor
sti
mov
jl
outs
jbe
call
lea
scas
and
pop
outs
das
jae
and
enter
test
push
jmp
mov
jl
jno
sbb
dec
iret
in
mov
mov
(bad)
nop
in
sbb
(bad)
popa
xlat
or
mov
xchg
add
sti
xchg
xor
dec
sbb
(bad)
out
arpl
cmp
inc
js
adc
and
xchg
clc
les
and
in
xchg
fistp
addr16
xchg
sti
xor
dec
mov
mov
imul
pop
xchg
adc
xchg
add
dec
inc
les
adc
adc
push
push
xchg
push
mov
xchg
imul
xor
mov
bound
repz
stos
xchg
sti
push
jge
push
retf
dec
and
cmps
(bad)
in
cmp
xchg
in
ds
stos
add
ret
(bad)
mov
jg
push
addr16
dec
cmps
fwait
push
add
fstp
lea
mov
push
jno
cmp
sub
mov
inc
(bad)
fwait
mov
inc
es
dec
pop
das
fisttp
sub
idiv
jg
dec
xchg
outs
push
mov
or
cmps
imul
in
pop
mov
cmp
aad
jb
fmul
pop
dec
les
ficomp
out
jge
push
or
and
inc
add
jl
stos
jnp
xchg
hlt
rcr
movs
jo
ficom
push
or
xchg
cld
xchg
sub
lods
jp
mov
add
pusha
dec
jnp
jo
push
std
in
or
fidivr
punpckhbw
jecxz
mov
lods
pusha
test
mov
sar
dec
inc
push
pop
pop
test
or
inc
rcl
rcr
mov
xlat
js
mov
add
test
pop
in
adc
mov
(bad)
xor
arpl
adc
sbb
pop
enter
test
dec
movs
ret
rcr
jmp
pushf
jo
test
mov
push
inc
or
mov
and
retf
sbb
dec
push
and
ds
adc
retf
jns
jmp
out
pop
mov
push
pop
(bad)
mov
jl
es
or
push
cmps
sub
adc
fwait
adc
sysenter
hlt
test
imul
fnstcw
jb
mov
mov
imul
stos
out
mov
mov
xor
in
sar
movs
ret
repnz
inc
xchg
dec
cdq
jp
leave
xor
pop
or
push
sbb
jg
cli
aad
sbb
xchg
stos
dec
jg
stos
mov
push
or
shr
push
aaa
pop
aas
ret
lods
jns
mov
mov
jg
mov
pop
sub
inc
loop
call
lahf
fs
jecxz
jg
mov
inc
test
cmp
mov
mov
or
mov
out
stc
loop
mov
mov
mov
add
pop
fidivr
mov
jmp
out
ins
jl
add
cmp
and
fstp
inc
dec
xor
sub
sub
aam
xor
sub
mov
jl
imul
xchg
dec
xchg
hlt
mov
in
push
mov
leave
xchg
cmp
mov
inc
hlt
mov
xchg
cwde
pusha
dec
xchg
xchg
jle
xchg
mov
xlat
dec
jmp
jae
pop
mov
sbb
int
jnp
int3
mov
test
dec
xor
hlt
jns
movs
sbb
xchg
xchg
sahf
push
xor
loopne
imul
pop
xor
push
dec
lods
mov
or
out
or
pop
les
(bad)
iret
cmp
sbb
scas
ins
imul
add
and
mov
fwait
xchg
xor
jmp
cdq
and
jb
icebp
mov
adc
arpl
jns
adc
out
inc
add
push
pop
mov
les
fcmovbe
fidivr
fisttp
add
mov
std
aam
call
in
jp
daa
movs
fwait
retf
dec
call
add
cmps
mov
xor
stos
(bad)
jno
ds
ja
test
leave
xchg
jb
xchg
mov
cli
imul
xchg
xchg
popa
xchg
lods
jbe
(bad)
fwait
inc
cmp
fdiv
repnz
and
fisttp
pop
fld
scas
jnp
(bad)
push
fst
(bad)
ficom
ja
sbb
pop
sub
mov
or
sub
shl
cmp
ret
retf
jmp
xchg
out
pop
idiv
or
test
rol
cmps
adc
push
mov
cdq
in
sub
fstp
mov
push
call
xchg
rcr
jo
ret
jge
std
add
test
push
enter
fs
push
xlat
fdiv
sbb
loopne
lods
push
and
dec
test
lds
in
xor
push
xchg
arpl
mov
ret
das
inc
xlat
xor
jg
cli
jecxz
ins
pushf
push
scas
fistp
xor
xor
jns
lds
arpl
cwde
inc
gs
jmp
addr16
xor
mov
loopne
jno
pop
mov
test
xor
cli
ja
outs
cmps
pop
movs
sub
lods
pushf
sbb
outs
push
xchg
pushf
pop
pop
adc
pop
scas
adc
test
push
fdiv
sbb
jl
popf
out
adc
mov
aaa
mov
pop
sti
and
std
lea
cdq
cld
ins
lock
loope
popf
jno
loop
lock
adc
addr16
addr16
loopne
fs
mov
mov
jl
lods
inc
mov
sub
cs
popa
iret
add
jg
or
ss
mov
and
and
jnp
sbb
push
test
sbb
inc
div
adc
jge
into
lahf
push
push
in
pop
add
jmpw
loopne
outs
pop
or
mov
loop
sbb
aam
test
mov
icebp
mov
les
or
add
mov
push
lahf
fistp
sub
mov
mov
(bad)
dec
out
lock
mov
pop
or
fwait
sub
add
sub
(bad)
lds
jne
popf
lods
movs
out
inc
mov
jnp
adc
sbb
jl
cwde
mov
mov
push
outs
sub
xchg
ins
icebp
mov
jge
clc
jl
frstor
in
push
dec
inc
(bad)
div
rcl
inc
xchg
push
xor
mov
pop
mov
push
mov
mov
daa
outs
pop
fdiv
shl
lods
pop
dec
call
add
inc
loope
inc
mov
fld
es
lods
add
lahf
rcr
jl
ret
mov
sub
cmps
scas
movaps
push
mov
jmp
push
sbb
xchg
mov
int
iret
dec
call
sub
add
mov
xor
enter
xchg
push
cs
mov
jmp
pop
mov
adc
aam
ror
mov
xchg
push
pop
imul
mov
(bad)
out
adc
js
das
add
imul
push
js
mov
jns
cmp
in
stos
into
jns
adc
movs
out
mov
sub
mov
push
cmp
test
hlt
jo
cmp
cli
(bad)
push
push
or
lods
xchg
je
inc
ss
test
ds
leave
cmps
fisttp
enter
in
push
push
out
push
das
push
lock
add
dec
ret
clc
in
inc
stos
or
fstp
lods
pop
mov
loopne
cmove
sbb
adc
jl
shl
add
cmp
and
jb
add
or
mov
mov
(bad)
fstp
int
jg
(bad)
mov
(bad)
jmp
push
sub
mov
arpl
mov
out
je
cld
imul
es
pop
rol
xor
repz
in
xchg
adc
jmp
stos
sbb
sbb
pop
or
xor
fdivr
mov
scas
and
inc
cmp
in
pop
(bad)
dec
(bad)
scas
mov
and
and
test
mov
fwait
mov
inc
jp
or
scas
or
sti
or
mov
mov
cdq
adc
inc
loope
fs
sub
cmc
jge
mov
jecxz
gs
push
std
dec
xchg
into
push
mov
xlat
inc
movd
lods
mov
sbb
lds
repnz
sbb
js
sub
(bad)
jmp
push
inc
xchg
cld
mov
adc
add
jnp
mov
test
test
jp
in
cld
lods
mov
add
rcl
fcmovbe
ins
dec
pop
loope
adc
xchg
and
repz
add
and
xchg
sbb
jp
fsubr
pop
rol
xor
repz
repnz
inc
cmp
out
imul
sub
mov
and
sub
sbb
cs
ins
or
mov
lahf
pop
aam
in
shl
inc
in
cmps
ss
or
jl
fwait
push
mov
jb
and
mov
icebp
fs
cmps
cdq
jmp
jns
push
adc
sti
xchg
sub
imul
(bad)
mov
ror
or
sahf
pop
dec
xchg
shr
cs
int3
jle
push
dec
sub
mov
sbb
xchg
js
mov
sbb
or
(bad)
call
cmp
cmp
sbb
xchg
xchg
popf
adc
sbb
cmp
loope
push
jl
fwait
sbb
rcr
or
cmc
mov
and
daa
cmp
inc
add
je
jne
in
push
call
sub
mov
xor
jl
push
lock
inc
cwde
or
xlat
or
ja
repz
addr16
js
cmp
enter
aaa
sub
(bad)
pop
aam
int3
mov
lahf
pop
cmp
dec
call
pop
pop
push
or
out
xchg
shl
mov
pop
mov
cmp
add
lahf
jp
test
cmps
jge
imul
add
loop
inc
xor
inc
popa
shl
leave
ja
addr16
sbb
adc
sahf
mov
sti
(bad)
inc
push
xor
xchg
fiadd
jl
in
jl
pop
xchg
sub
xor
sbb
add
sub
pop
inc
aas
sbb
sbb
push
xchg
rcr
xchg
sti
xor
retf
dec
data16
sbb
dec
fstp
inc
cwde
stos
jno
imul
xchg
sub
pop
add
add
jl
inc
bound
xchg
cmp
les
cmps
iret
add
repz
cmp
jae
fwait
mov
out
and
mov
pop
jl
adc
mov
add
cmp
dec
xor
and
xor
xchg
push
push
lea
mov
repnz
add
scas
movs
xchg
test
push
push
mov
mov
mov
jmp
sub
lock
pusha
jns
scas
fiadd
cmc
push
fsubr
hlt
jb
mov
pop
dec
add
xor
jns
call
retf
push
jns
or
cmp
movs
sbb
push
stos
test
nop
outs
mov
repnz
ins
pop
cmc
or
scas
scas
pop
sti
stc
mov
mov
cmp
call
aas
bound
shl
pop
ret
push
mov
sub
add
stos
ja
addr16
push
cmp
jne
enter
cmps
pop
jb
jbe
pop
sbb
scas
sub
cmc
lods
ret
pop
cli
fldcw
pop
mov
mov
mov
xor
push
cli
psubq
test
jns
pop
popf
cmp
dec
fstp
pop
aad
mov
sti
std
mov
ins
fcom
or
cmps
loop
test
ficom
inc
sbb
xor
jb
sahf
adc
xor
xor
int3
dec
outs
movs
les
mov
pop
sub
ficomp
mov
ficomp
sub
ret
mov
xchg
rcl
into
push
sahf
mov
adc
int3
dec
test
add
mov
(bad)
out
pusha
sti
popa
sub
je
loopne
cmp
mov
jl
lds
add
sub
sahf
lds
inc
inc
xchg
test
push
and
lahf
sahf
nop
(bad)
push
jo
adc
jmp
push
int
and
cmp
pop
xchg
aas
stos
shr
(bad)
xlat
xchg
mov
stc
das
adc
and
cmp
mov
push
sub
movsx
popf
int3
lahf
adc
xor
pop
bnd
add
ffreep
popa
fwait
mov
fmul
aad
pushw
lahf
mov
sti
xchg
popf
mov
mov
mov
jne
iret
dec
or
mov
xchg
pop
sub
pop
repz
mov
stos
je
jmp
xchg
dec
add
or
lds
xchg
sub
pop
sar
mov
xor
scas
jmp
jo
fidiv
dec
test
dec
pop
xor
dec
jmp
lea
pop
ins
jl
jns
(bad)
das
push
icebp
adc
mov
push
mov
push
adc
neg
push
push
clc
mov
arpl
sti
out
shl
out
lea
adc
sbb
xchg
iret
adc
push
push
xchg
jns
es
add
pop
xor
push
scas
jmp
push
jmp
sub
popa
cmp
shl
pop
and
mov
pop
jle
cdq
fs
or
mov
or
fidiv
(bad)
cwde
mov
xor
or
or
retf
mov
aas
dec
cmp
(bad)
dec
imul
dec
in
aaa
retf
ret
add
popf
inc
sub
jl
jecxz
inc
sbb
mov
or
sahf
mov
adc
mov
jp
fwait
ins
and
pop
jl
sbb
int3
jb
or
push
push
loope
mov
iret
(bad)
mov
cmc
add
mov
add
fistp
jp
push
or
fwait
aas
dec
inc
aad
and
(bad)
cmp
cmp
test
rsm
shr
or
jmp
jmp
mov
cmps
call
inc
push
movs
sub
mov
pop
mov
outs
mov
xchg
and
xchg
dec
sbb
inc
push
movntps
rcl
call
fisttp
shl
retf
(bad)
sub
pushf
addr16
popf
cdq
pop
pop
adc
into
aam
fistp
shl
fcom
sub
push
icebp
push
cmps
cmp
aad
es
adc
aad
adc
lds
pop
cmp
cmp
out
out
jbe
and
jne
jmp
sbb
add
dec
push
out
cwde
js
add
fdiv
pop
or
xlat
clc
pop
xor
ins
icebp
fs
sub
mov
mov
sub
jnp
push
aaa
xchg
sbb
xchg
xlat
int3
ins
ds
unpckhps
dec
lea
xlat
in
je
fcomp
cwde
dec
ins
iret
mov
int3
or
cld
stc
neg
pop
outs
sub
mul
jns
push
pusha
or
out
inc
repnz
cmp
mov
and
inc
pop
sahf
sbb
pop
in
fldcw
push
shl
xlat
sub
push
or
cmp
cmc
dec
repnz
push
pop
idiv
lahf
pop
sti
aam
jmp
mov
xchg
jnp
iret
data16
pop
push
xchg
fld
xor
scas
mov
not
mov
arpl
jae
dec
in
pushf
cld
inc
mov
jo
xor
sbb
add
icebp
test
push
pop
sbb
adc
dec
ins
pop
pop
popa
in
adc
push
hlt
ret
dec
outs
rcr
js
retf
mov
inc
sbb
mov
dec
or
pop
ds
mov
or
push
movs
sbb
mov
fsubr
add
and
out
xchg
daa
fdiv
lahf
jbe
or
mov
shr
retf
mov
mov
push
sti
mov
jmp
imul
mov
dec
adc
xchg
jg
push
cmpps
ins
enter
sub
test
add
sahf
xchg
jge
cmp
xor
mov
xor
repnz
adc
and
in
xchg
out
and
inc
xlat
fisttp
ds
dec
je
xchg
lea
adc
ins
inc
int3
xchg
add
test
data16
dec
cs
push
pop
mov
cmp
ds
std
inc
jecxz
xchg
pop
xchg
jnp
sar
mov
sbb
inc
je
scas
mov
das
in
pusha
lods
sbb
dec
cmp
jmp
int
add
sub
(bad)
imul
jmp
loop
jmp
(bad)
jp
dec
cld
cdq
and
add
fadd
xor
inc
aas
fwait
pop
aam
dec
test
cmp
rcl
call
xlat
cli
repz
xchg
test
push
lods
push
fwait
add
out
and
cs
push
xchg
ins
jb
mov
cwde
mov
xor
jl
inc
int
ja
lea
fsub
(bad)
cmps
add
ja
push
rcl
sub
popf
push
out
test
daa
dec
aad
add
xchg
pushf
jmp
cs
mov
sbb
inc
cmp
sbb
sub
xor
sbb
push
ins
push
mov
adc
pop
mov
push
push
div
push
mov
repz
xor
add
lea
sub
loope
retf
imul
sbb
xchg
xchg
xor
xchg
dec
pop
test
dec
xchg
loope
adc
add
lds
scas
xor
cmps
mov
xchg
in
aad
(bad)
jmp
adc
ja
push
mov
jmp
and
push
jg
pop
and
add
xchg
jnp
loope
jo
or
mov
ret
(bad)
test
jne
mov
repnz
pop
xchg
call
dec
int
add
push
pop
inc
cli
jno
imul
dec
jne
rcr
and
mov
mov
sub
inc
les
sbb
cli
call
push
outs
xchg
das
sbb
sbb
pop
jb
jne
loope
lds
xor
out
ret
or
mov
cmp
jg
jns
jp
imul
aam
cmp
jo
adc
arpl
out
jb
push
or
mov
push
and
mov
les
mov
je
xchg
adc
mov
add
pop
dec
aaa
and
test
mov
sbb
(bad)
out
stos
mov
mov
push
mov
mov
adc
mov
ret
pushf
pop
adc
call
sub
je
arpl
inc
cmps
(bad)
(bad)
mov
gs
xor
mov
cmp
cs
faddp
adc
fld
sbb
or
jbe
loop
not
ins
dec
and
out
adc
xchg
or
sbb
mov
xchg
sbb
fldenv
imul
and
sbb
add
sub
clc
cmp
mov
addr16
call
cld
push
xor
(bad)
jl
jl
mov
inc
and
mov
mov
repnz
mov
mov
xchg
sbb
inc
or
int
mov
test
dec
and
ins
push
cmp
pusha
call
rcr
pop
lods
adc
cmp
(bad)
or
in
ds
push
loope
scas
jecxz
ss
adc
fwait
and
out
sub
leave
adc
das
sub
push
aam
ins
push
pop
sbb
fwait
mov
pushf
stos
inc
sbb
jp
pop
cvttps2pi
popf
repz
es
xlat
push
cwde
(bad)
js
mov
mov
sbb
dec
imul
jecxz
mov
jmp
or
jno
rol
mov
retf
in
xlat
lea
std
cld
fwait
mov
ins
hlt
mov
sbb
inc
mov
and
cmp
mov
jl
into
in
adc
loopne
jecxz
or
cld
imul
pop
push
icebp
inc
mov
inc
xor
stos
imul
cmp
dec
jmp
pop
cmps
pusha
jmp
sbb
jbe
inc
jns
push
loope
outs
mov
std
or
xor
mov
mov
sbb
dec
add
xchg
xchg
mov
ins
pop
sahf
fwait
ja
mov
mov
retf
pop
mov
xor
fsubp
xor
lods
aad
in
in
xor
das
je
test
mov
fcomp
add
lds
mov
mov
cmp
jg
push
jnp
(bad)
xchg
les
dec
retf
clc
dec
cmp
retf
dec
jecxz
shr
cli
cmp
cmp
outs
xchg
cmps
shr
add
int3
dec
aam
xchg
cmp
and
retf
sub
sub
add
popf
test
repnz
arpl
mov
cmps
les
cmp
mov
mov
mov
add
lea
mov
dec
push
fadd
shl
es
scas
aad
mov
aam
dec
call
push
mov
xlat
inc
cdq
(bad)
xchg
xchg
adc
jecxz
push
rcl
mov
sbb
std
ds
test
pusha
dec
pop
sub
dec
fcmove
jg
jns
mov
jae
hlt
jbe
push
cmp
jmp
aad
pop
icebp
add
gs
ror
in
mov
and
pushf
inc
cwde
jl
mov
in
(bad)
sbb
das
ins
shr
lea
pop
add
mov
push
push
add
shr
cmp
jbe
cmp
jns
retf
dec
lock
in
ins
push
out
bound
jne
frstor
repz
sbb
jg
mov
movs
cld
out
popa
mov
(bad)
fsub
xchg
mov
out
inc
pop
mov
scas
adc
ins
(bad)
pop
xor
mov
in
ficom
jo
jmp
mov
and
dec
ficomp
icebp
and
cmp
out
popf
push
test
cmc
jecxz
cwde
stos
addr16
add
fsqrt
dec
jns
out
imul
add
or
push
rcl
xchg
push
inc
aad
shr
imul
in
and
mov
adc
call
add
js
or
mov
ss
icebp
out
jns
and
rol
es
xchg
xor
(bad)
int3
adc
sbb
(bad)
push
sbb
mov
daa
cmp
mov
stc
cmps
int
cdq
ins
pop
mov
pop
dec
add
mov
or
into
xchg
leave
lods
xor
push
inc
cs
jl
xchg
into
push
and
mov
mov
and
rcl
push
ja
dec
jecxz
cli
cmp
retf
add
jmp
mov
pushf
jnp
out
add
xchg
cmc
loop
jne
outs
sub
push
movs
and
mov
jg
or
xor
inc
xchg
inc
xchg
cli
sub
push
and
int3
xor
ret
push
shl
dec
adc
mov
mov
popf
cmp
pop
push
xor
dec
iret
in
inc
dec
xor
cmp
mov
popf
loopne
loop
je
jmp
addr16
std
jmp
sub
addr16
jnp
mov
dec
lods
repnz
je
je
cmp
repnz
push
ficomp
jns
aam
inc
dec
ss
jmp
and
fs
mov
and
ja
bound
into
rol
ficomp
aas
cli
test
cmp
iret
xor
push
bnd
call
jmp
repz
or
(bad)
push
push
sbb
fs
fs
call
cmp
mov
in
inc
ja
icebp
pause
mov
shr
es
aas
(bad)
push
and
ds
mov
inc
jecxz
jns
sbb
test
adc
cmps
js
out
xor
pop
jl
fiadd
push
mov
push
outs
ret
add
and
inc
scas
aas
or
mov
inc
sbb
(bad)
inc
lods
lods
jmp
mov
push
inc
inc
inc
mov
adc
cmp
rcr
or
cmps
test
or
repnz
or
loopne
dec
repz
push
fiadd
adc
push
add
and
outs
xor
cmps
out
xchg
push
ret
xor
adc
or
or
shl
call
and
imul
or
adc
mov
jmp
ins
xor
out
push
xchg
arpl
inc
fs
int
stos
out
mov
cs
popa
leave
jnp
adc
outs
out
add
inc
sub
ja
imul
jns
dec
lds
mov
jae
sahf
push
and
push
retf
sbb
pop
or
stos
iret
mov
(bad)
ins
shl
push
mov
xor
shl
sahf
mov
fwait
cmc
pusha
rcl
adc
popf
dec
dec
push
vmptrld
push
fwait
mov
in
or
and
stos
cmp
ins
inc
sti
sbb
nop
cwde
lea
stos
jle
popf
add
inc
xor
call
out
push
add
in
lahf
(bad)
pop
ds
add
mov
fadd
(bad)
repz
retf
pop
xchg
outs
xor
imul
inc
fistp
adc
fwait
and
add
xchg
pop
jne
out
push
pop
aam
or
pop
retf
mov
inc
push
(bad)
imul
js
push
inc
adc
cmp
inc
jns
in
call
in
call
mov
sub
mov
mov
jp
and
bound
or
addr16
dec
nop
jl
dec
push
mov
ins
adc
(bad)
cmp
ja
add
dec
pushf
fst
frstor
loop
repz
push
dec
out
add
xor
in
dec
jge
pop
es
mov
(bad)
jmp
or
lods
push
sub
sti
in
mov
out
pop
sub
mov
(bad)
ret
or
sahf
sbb
xor
retf
sbb
cmp
mov
xor
xchg
pop
adc
adc
push
add
call
retf
stc
setae
adc
enter
sbb
mov
aaa
pop
dec
pushf
inc
(bad)
movs
jne
dec
dec
ss
sub
sub
sub
and
(bad)
cmp
leave
and
test
xor
in
xchg
add
xchg
cmp
bound
mov
inc
cmp
repnz
int3
jge
clc
sub
leave
movs
jne
push
sbb
cwde
test
mov
jmp
les
(bad)
push
enter
outs
mov
aad
pop
mov
popf
loope
call
cs
test
mov
sub
cs
(bad)
and
fnstcw
inc
retf
cmps
jnp
cmp
sub
and
rol
dec
jmp
icebp
scas
pop
pop
mov
ds
icebp
adc
stos
inc
lds
sbb
lock
ins
cmps
ror
div
inc
inc
into
pop
test
cmps
mov
or
pop
mov
push
jge
mov
mov
cmp
(bad)
shr
sbb
xchg
call
xlat
sub
lock
mov
das
into
dec
push
mov
and
mov
adc
lds
cmc
aaa
test
pop
cmps
xchg
leave
xor
push
pop
das
jmp
xor
int
sub
(bad)
push
inc
idiv
in
lahf
xor
das
out
mov
jo
lahf
lds
push
cmp
mov
sbb
jle
cmp
pusha
addr16
je
mov
cmps
and
push
lds
fbstp
(bad)
ds
mov
jns
add
and
pop
add
shl
add
clc
add
or
jmp
out
arpl
cmp
mov
lahf
xor
pop
xor
mov
ja
shl
aam
sub
mov
push
inc
ret
pop
xchg
mov
jle
ret
loopne
(bad)
test
scas
stos
loopne
mov
xor
imul
or
bswap
and
jns
jmp
mov
mov
xor
dec
fst
mov
xor
adc
fadd
nop
pop
lock
cmps
push
popa
xchg
sub
das
or
xchg
pop
ss
movs
xchg
xchg
and
mov
enter
dec
add
rcr
dec
lock
mov
repnz
dec
adc
addr16
jb
jne
mov
pop
aam
pop
xchg
adc
out
pushf
(bad)
mov
xchg
in
ffree
pop
out
cmp
xor
and
mov
nop
in
mov
add
jl
ja
outs
mov
push
test
xor
lahf
xor
mov
scas
sbb
mov
dec
dec
dec
cmp
rcr
fcomp
xchg
fistp
shr
pushf
daa
fldenv
xchg
jo
scas
and
mov
inc
mov
pop
ret
xchg
or
push
mov
cmp
call
or
out
shl
shl
and
or
pop
pop
xor
push
inc
dec
into
mov
loope
shr
jo
pop
lea
int
movs
(bad)
pop
test
lods
mov
sbb
cmp
mov
loop
imul
and
adc
lea
xchg
sbb
pop
xchg
inc
and
sbb
or
inc
xor
push
div
cdq
rol
repnz
fdivrp
shr
stc
sub
in
pop
cld
retf
sar
outs
cmc
cmc
in
push
pop
add
mov
add
push
push
in
scas
imul
sbb
cmovp
jb
or
mov
stos
imul
xchg
inc
sbb
push
or
and
lods
rcl
adc
rcl
aaa
cld
fst
mov
(bad)
jg
addr16
mov
pushf
movs
int3
xor
ds
jecxz
xchg
cmc
xor
pop
out
call
aaa
and
add
test
pop
or
pusha
mov
mov
mov
scas
xchg
pop
sub
clc
dec
jmp
cwde
mov
shl
push
rol
call
fisttp
cmp
(bad)
cmp
cmp
or
push
xor
and
ror
inc
push
not
es
jbe
out
(bad)
call
ret
test
add
jbe
imul
sub
xor
js
cli
xchg
mov
test
xchg
xor
in
pop
jmp
pop
(bad)
mov
ror
xor
jmp
inc
lahf
push
xlat
ja
mov
cmp
sti
scas
daa
jnp
ja
retf
dec
call
pop
lods
inc
aam
mov
inc
adc
mov
xchg
dec
cmp
pop
mov
mov
push
and
dec
daa
sbb
adc
adc
scas
mov
scas
mov
xor
arpl
inc
dec
aas
pop
jp
pop
jb
cs
ret
inc
sub
dec
push
xchg
jb
mov
ja
xlat
and
jbe
inc
push
pop
ins
je
ss
mov
in
loopne
jae
jnp
push
jmp
cmp
inc
popa
add
add
aad
push
outs
xchg
ret
jl
xor
adc
pop
popa
addr16
jl
pop
shr
nop
data16
sub
xor
xchg
mov
pcmpgtb
pop
mov
jnp
fisttp
push
into
in
fst
bt
add
adc
sub
nop
in
or
and
cmp
mov
sub
push
test
fwait
shr
test
mov
xchg
stos
xchg
fistp
sub
mov
jne
push
fistp
test
adc
(bad)
(bad)
retf
adc
jns
data16
mov
mov
add
inc
scas
add
jnp
lea
xor
mov
cmp
pop
cmps
scas
and
dec
mov
mov
and
mov
sbb
or
(bad)
or
add
or
iret
xchg
les
add
sar
dec
adc
xchg
or
mov
mov
and
inc
xchg
mov
cmp
inc
int3
dec
and
adc
and
clc
and
push
jo
jnp
sbb
cmps
jp
xor
aam
add
mov
fnsave
out
test
out
add
mov
mov
push
imul
lea
mov
jb
dec
add
scas
retf
mov
addr16
daa
ja
cmps
and
adc
outs
fmulp
shr
les
jno
push
jge
mov
push
sub
ins
mul
adc
addr16
clc
cli
jmp
es
mov
jp
ins
jmp
sbb
inc
aam
loop
dec
sub
mov
or
mov
push
sub
retf
add
lods
into
scas
add
dec
sbb
adc
aam
out
sbb
jnp
sti
sti
mov
inc
lock
lock
or
push
aaa
stc
cld
or
add
loopne
pop
clc
leave
inc
cmps
movs
sub
mov
loopne
ds
or
test
jno
(bad)
xchg
xchg
cmc
fstp
mov
outs
(bad)
gs
pop
stc
sub
fsub
or
jmp
jl
lahf
fldenv
mov
inc
test
mov
jne
das
ds
sbb
pop
push
push
sti
sub
retf
jns
das
in
inc
rol
jbe
(bad)
into
mov
(bad)
or
mov
push
jp
into
push
push
(bad)
sub
mov
cmp
dec
test
test
xor
sahf
shr
dec
lods
popf
stos
test
jb
cmp
je
sub
mov
xlat
mov
fimul
mov
rol
imul
test
out
cmps
pop
dec
sub
inc
sbb
pop
aas
js
loope
inc
lds
shl
xor
xchg
hlt
and
loop
cmps
adc
std
fdiv
mov
dec
repnz
mov
ja
and
gs
jle
outs
mov
(bad)
into
jbe
jecxz
fcomp
sub
mov
xrelease
pop
cmp
aaa
push
adc
bound
dec
adc
jmp
xor
adc
clc
js
cwde
aas
loopne
xchg
push
bound
loopne
out
cmp
push
ret
xchg
sahf
imul
pop
cmp
cs
lea
or
lods
jecxz
ror
(bad)
push
fmulp
xchg
popf
inc
adc
pusha
test
je
pop
mov
dec
jae
in
mov
inc
shr
retf
cwde
add
mov
push
inc
inc
scas
sbb
imul
mov
jge
icebp
push
sbb
test
int
jnp
int3
xchg
push
mov
sub
adc
mov
rol
mov
inc
popa
inc
sbb
pop
pop
(bad)
cmp
cmp
(bad)
or
inc
aaa
cmp
sub
mov
inc
mov
xchg
jbe
loope
nop
xor
fild
ds
fdivr
jmp
sub
out
mov
mov
cmp
test
add
or
jns
pop
jae
imul
shl
xor
je
in
or
mov
repnz
and
stos
rol
dec
adc
jo
loop
sbb
inc
lds
ins
adc
scas
int
dec
inc
add
jno
imul
loopne
outs
jmp
fsubr
mov
shr
pop
mov
mov
test
pavgw
sub
adc
sti
nop
xchg
mov
arpl
inc
std
xchg
xor
xlat
inc
sub
or
dec
fisttp
jl
movs
out
scas
sbb
test
(bad)
cld
cmp
push
pop
or
xlat
movs
div
lahf
cmps
call
sub
lock
fwait
sbb
dec
cs
jmp
out
in
je
sbb
cld
sahf
(bad)
cmovg
ds
ds
rol
inc
cmp
fwait
jnp
pusha
icebp
sbb
inc
mov
mov
iret
jb
stos
loop
in
movs
outs
fwait
cld
imul
cmps
test
dec
rcr
jp
jle
cld
push
out
mov
cmps
mov
hlt
dec
out
mov
stos
jg
push
in
retf
(bad)
fild
cmp
push
loop
and
inc
xor
lahf
daa
cs
xor
ins
and
mov
out
test
retf
(bad)
pop
jp
aas
adc
xchg
mov
imul
inc
mov
pop
cmp
adc
stc
mov
mov
xchg
sub
jne
ins
xor
xor
inc
and
xchg
pop
mov
jo
call
pop
pop
xor
jl
cmps
push
(bad)
sar
int
rcr
mov
pop
xor
cmp
mov
test
in
sbb
mov
rol
stos
sub
xchg
lea
mov
push
and
ds
and
sub
and
addr16
lock
inc
pusha
mov
cmps
mov
add
fsub
dec
sbb
xor
xchg
jmp
in
pop
out
jnp
inc
cmc
adc
inc
mov
repnz
ficomp
add
(bad)
pushf
adc
lea
jne
pop
inc
nop
lea
popf
jecxz
mov
add
push
jecxz
les
add
sub
pop
mov
int
xchg
and
rcl
pop
(bad)
mov
sub
into
and
mov
inc
xchg
stos
jns
add
jp
pop
dec
push
push
sub
call
push
scas
aam
lahf
lods
jo
(bad)
push
push
les
imul
mov
jp
xor
xchg
loope
inc
inc
das
mov
xchg
jbe
data16
(bad)
rcl
pop
test
sbb
mov
mov
sti
mov
or
addr16
mov
push
mov
cmp
mov
sbb
js
retf
mov
cmc
loope
icebp
hlt
jb
pop
rcl
nop
push
scas
pop
jecxz
jmp
movs
sbb
repz
gs
retf
cvtps2pi
push
outs
nop
stc
hlt
cmp
enter
cld
ret
bound
sub
popf
sbb
jae
into
fild
jmp
int
repz
(bad)
pop
pop
sub
jnp
cmp
mov
adc
cmp
xchg
in
sub
rol
stc
jmp
pop
in
pop
(bad)
aam
cmps
pusha
xchg
or
int
retf
xchg
lds
aam
adc
sbb
cld
jl
cmp
adc
sub
imul
and
fild
das
call
shl
add
and
cdq
xchg
xor
mov
test
test
out
mov
mov
(bad)
(bad)
mov
rcr
push
(bad)
ins
cwde
movs
in
xor
sbb
sbb
imul
test
mov
fs
fiadd
hlt
pop
outs
push
test
push
cdq
jl
dec
jmp
movs
in
aas
or
xor
pop
ds
out
lock
ja
jl
add
lods
sbb
mov
push
pop
inc
inc
inc
mov
adc
imul
(bad)
mov
add
(bad)
ficomp
mov
iret
jp
mov
mov
or
dec
cmp
in
test
(bad)
cs
xor
jbe
sub
movs
xchg
ror
xchg
iret
mov
iret
pop
lods
pop
movs
mov
jl
ror
je
inc
mov
xor
nop
jmp
inc
stc
and
dec
adc
(bad)
pop
xor
shl
jae
mov
out
adc
stos
out
pop
jbe
and
into
sub
enter
cld
aad
lock
jnp
add
(bad)
cmp
sbb
test
push
outs
push
retf
push
jns
inc
push
jbe
shr
fdiv
cdq
or
xchg
pop
lahf
(bad)
sub
cs
leave
cmp
xor
xlat
(bad)
fnstsw
das
lods
cmp
(bad)
jnp
or
push
xor
cmps
and
in
repnz
and
inc
jp
lods
test
and
mov
xor
stos
xchg
in
cmp
mov
push
test
cs
lahf
pop
or
add
fsin
pop
mov
aad
xor
cs
int
ja
mov
mov
inc
dec
fstp
xchg
inc
call
test
jl
arpl
mov
mov
add
mov
sbb
adc
jg
sub
mov
leave
nop
aaa
out
test
inc
push
pop
inc
std
call
jns
jno
es
mov
or
jbe
ret
cs
addr16
dec
xchg
pop
daa
rol
scas
dec
cmp
shl
and
inc
retf
into
outs
push
add
outs
test
aaa
icebp
xchg
fimul
mov
(bad)
rcr
stos
aam
add
jae
daa
inc
jbe
and
(bad)
mov
mov
mov
xchg
or
sub
femms
cmp
das
add
mov
and
xchg
sub
jne
pop
mov
ret
xchg
push
xor
adc
clc
pop
xor
cmp
jle
xchg
pop
xor
and
mov
daa
adc
loope
shr
clc
xlat
push
xor
ins
int3
ret
cdq
shl
sub
cmp
int3
xor
int3
push
pop
mov
push
and
stos
test
ret
ror
xchg
fwait
retf
adc
push
jb
(bad)
push
mov
sub
adc
or
jb
les
jp
fbld
cmp
call
repnz
sub
aas
arpl
lock
into
lock
inc
pop
mov
sbb
(bad)
(bad)
mov
out
fdivr
push
jbe
rcl
retf
movs
sbb
bound
mov
call
jbe
inc
xchg
push
sbb
mov
mov
lock
es
das
cli
not
test
out
scas
pop
lods
sub
mov
cmps
pop
mov
fs
lods
dec
push
daa
out
sub
xor
jg
jp
in
and
adc
addr16
out
sbb
add
shl
mov
cmp
mov
lods
out
cdq
mov
mov
adc
fist
push
mov
sahf
xor
adc
mov
jo
ins
xchg
mov
xor
jbe
int
mov
push
popf
or
dec
or
mov
push
dec
enter
jae
outs
xchg
mov
loop
test
inc
retf
jmp
rol
loopne
or
fs
std
popa
jbe
mov
addr16
imul
lss
test
data16
cs
clc
adc
jmp
adc
and
jae
mov
mov
push
cmp
mov
xchg
pop
pop
mov
aaa
mov
cmps
test
sub
int3
cdq
adc
pop
adc
pop
daa
jns
in
mov
retf
inc
loope
iret
fs
jmp
shl
lea
mov
xchg
call
push
call
and
movs
adc
in
or
lods
imul
(bad)
sub
xlat
(bad)
retf
ror
sub
xchg
leave
fst
gs
inc
rcr
inc
rcl
aaa
inc
push
sub
out
in
pop
sub
lahf
or
add
mov
mov
test
cs
(bad)
sub
movs
fsub
pop
lock
mov
adc
pop
and
cmp
aaa
adc
dec
call
das
retf
xor
repz
mov
mov
or
and
jbe
shr
mov
cmp
pop
sbb
jmp
add
ins
aas
dec
mov
xchg
cmp
inc
push
icebp
push
(bad)
jmp
inc
jo
mov
fidivr
inc
jb
cli
mov
loope
cmp
cmp
pop
push
(bad)
mov
push
ud1
and
sti
xchg
xchg
lods
push
(bad)
clc
adc
jg
xlat
stos
or
dec
sub
lock
push
cmp
xchg
in
push
jmp
pop
sub
and
xchg
cmc
push
lods
ret
cmp
xchg
xor
inc
gs
xor
pop
jno
or
jo
dec
add
mov
mov
aaa
and
mov
ja
mov
pop
cmp
js
mov
jge
movs
cs
dec
sbb
popf
rcl
jnp
retf
dec
cli
pminsw
enter
push
lea
(bad)
out
popa
std
ds
or
fcomp
ja
outs
sar
inc
movs
adc
pop
pop
and
lahf
int
mov
je
(bad)
out
mov
inc
popf
adc
(bad)
shl
mov
xor
js
push
jmp
pop
push
fstp
add
add
sub
retf
cwde
test
bound
dec
(bad)
cwde
adc
pop
imul
adc
(bad)
xor
ins
mov
mov
icebp
xor
gs
add
mov
jno
in
jp
mov
mov
retf
arpl
fs
and
dec
aad
push
push
dec
imul
int3
mov
inc
add
ret
in
cmp
inc
sbb
add
repz
fsub
inc
pop
add
sub
push
out
xchg
and
mov
test
scas
xchg
cli
(bad)
cmp
ret
jle
out
add
mov
pop
add
push
dec
es
xor
add
test
xor
push
mov
cmp
lods
sbb
cmp
push
je
mov
push
jge
out
arpl
(bad)
hlt
adc
sbb
ins
call
adc
in
push
loope
jge
add
repz
loope
xchg
push
icebp
adc
aam
pop
mov
aad
cmp
push
mov
mov
jecxz
xchg
rol
outs
mov
clc
inc
cmp
sub
add
and
(bad)
sbb
outs
sub
shl
mov
jns
xchg
mov
or
sub
and
adc
loopne
and
mov
jmp
popa
sahf
xchg
stos
fild
xchg
xchg
sahf
or
push
data16
mov
and
or
mov
add
mov
enter
lea
aam
mov
je
and
jns
arpl
xchg
wbinvd
sbb
mov
inc
in
outs
ja
mov
or
in
jecxz
dec
jno
(bad)
rol
ficomp
clc
pop
cli
in
repz
dec
sub
loop
cld
nop
sub
jcxz
inc
imul
xor
fisubr
jae
cmp
add
cmp
and
push
out
inc
sub
and
cmc
pop
push
loop
ja
mul
mov
mov
push
fndisi(8087
jns
sbb
jg
lock
in
ret
adc
add
outs
cmps
js
es
xor
leave
inc
jae
jbe
cmp
sbb
pop
lahf
out
pusha
push
icebp
stos
inc
lods
xchg
repz
pop
add
je
ins
mov
js
bound
int3
xor
pop
fwait
lahf
mov
jns
add
xchg
jl
pop
mov
xor
add
dec
ror
push
jg
push
jno
mov
ss
outs
xor
data16
mov
mov
popa
xchg
cmp
cmc
call
push
sub
mov
stos
add
pop
jns
dec
inc
push
ret
pop
pop
(bad)
out
std
adc
lods
out
or
jg
dec
enter
cdq
(bad)
sbb
mov
sbb
lea
outs
mov
adc
push
mov
(bad)
in
pop
shl
pop
mov
mov
jp
adc
mov
mov
cli
test
adc
imul
sub
and
aaa
test
int
xor
mov
dec
mov
gs
mov
add
lock
fsubr
add
inc
pop
cmp
rol
mov
sti
nop
gs
cmps
jno
pusha
imul
test
jle
aas
mov
mov
aad
push
mov
jae
push
or
fdiv
pop
out
ins
or
dec
sub
and
sub
fiadd
pop
sub
retf
stos
sub
mov
jmp
loopne
shr
outs
cmp
inc
mov
pop
int
bound
repz
or
dec
hlt
mov
ret
jecxz
nop
mov
cmp
inc
adc
push
and
or
jmp
retf
lahf
or
push
dec
pop
or
mov
cmp
aam
scas
movs
adc
addr16
outs
add
xchg
dec
dec
xchg
stc
jp
pusha
adc
adc
sbb
push
leave
add
dec
fucomi
sub
icebp
js
or
imul
fnstenv
(bad)
stc
sbb
mov
out
and
push
test
push
push
xchg
pop
aad
xlat
sub
test
gs
mov
adc
rcl
adc
test
mov
xchg
in
shr
sbb
xlat
and
retf
jmp
and
jb
test
movs
mov
sti
adc
movs
frstor
dec
jecxz
out
jns
mov
and
adc
mov
mov
push
sub
in
rol
icebp
mov
jo
lea
(bad)
fsubrp
bound
ret
jae
(bad)
test
xchg
sub
out
mov
xchg
xchg
and
xchg
and
mov
sbb
mov
movs
ret
clc
and
mov
hlt
xor
push
push
mov
cdq
pusha
dec
sbb
(bad)
std
mov
sbb
mov
not
sbb
cs
mov
retf
out
dec
pushf
movs
jb
retf
enter
cmp
push
fldcw
or
add
pop
ds
imul
xor
mov
sub
push
lods
pop
jge
push
push
fisttp
push
lods
mov
inc
cmps
mov
pop
or
cwde
bound
sbb
das
inc
cld
inc
lds
jae
mov
jle
sub
shl
lds
jae
cwde
lds
test
pusha
dec
sub
and
and
cld
cmp
mov
fs
pusha
jae
pop
jbe
sbb
mov
mov
lods
lock
inc
mov
imul
ins
je
mov
add
cmp
lods
or
movs
add
cli
call
push
retf
or
push
js
fild
push
cwde
adc
scas
outs
cmps
stc
rcr
inc
jmp
jmp
daa
xchg
call
fsubr
mov
js
out
leave
or
inc
mov
xor
retf
pop
adc
mov
scas
imul
idiv
jbe
aas
dec
ss
in
mov
retf
in
cmps
sahf
mov
stos
mov
in
cmp
out
repz
test
and
test
shl
and
sub
sti
cmp
push
mov
je
pop
clts
adc
cmps
sti
lds
loopne
jbe
out
mov
stc
call
pushf
inc
adc
sub
push
movs
outs
add
ret
aad
jno
scas
inc
push
cmp
lea
jnp
test
fist
rcl
push
clc
pop
popa
add
jnp
mov
loope
(bad)
xor
retf
jnp
add
aaa
jmp
mov
int3
cli
adc
mov
xor
shl
push
daa
dec
mov
retf
jbe
dec
cwde
add
xchg
inc
shl
mov
add
hlt
cs
push
(bad)
sbb
lds
movs
sahf
out
ret
xor
into
push
stc
and
pop
lea
xchg
mov
or
dec
retf
adc
(bad)
gs
movs
test
push
pusha
cmp
dec
movs
pop
push
xor
dec
aam
cmps
das
or
inc
mov
xchg
ja
adc
jp
(bad)
mov
in
inc
jns
inc
push
test
je
ficomp
jmp
adc
retf
pusha
fsubr
push
jmp
pusha
je
push
stos
shr
in
jo
jl
push
neg
xchg
cdq
inc
dec
or
xor
mov
xchg
dec
and
cmp
cmps
repnz
xor
pop
ja
pop
push
jl
sub
not
mov
dec
add
and
ret
jg
test
pop
ins
mov
out
(bad)
push
iret
mov
addr16
loopne
xor
pop
nop
inc
shl
(bad)
aaa
mov
mov
(bad)
mov
or
push
fcomp
in
scas
sub
fcmovnb
sahf
jmp
das
pushf
xor
push
and
repnz
repz
inc
retf
or
cld
(bad)
jge
inc
xchg
fsubr
cdq
aad
xlat
enter
cmp
or
das
sar
and
imul
inc
nop
sub
stos
inc
pusha
dec
test
pop
and
out
xchg
and
rcl
dec
loopne
lods
mov
mov
je
or
sar
adc
jbe
ins
cmp
mov
sbb
imul
lods
cmp
push
sbb
mov
mov
jbe
retf
push
pushf
pop
into
push
adc
(bad)
inc
xchg
ss
adc
bound
jle
movs
stos
pop
inc
ja
dec
sbb
loop
in
rol
xor
mov
push
pusha
add
not
mov
popf
xchg
adc
pop
adc
in
cmp
push
out
js
test
mov
(bad)
call
out
and
dec
or
pop
mov
jns
mov
(bad)
in
adc
cmp
iret
rcl
(bad)
sti
ins
sbb
jns
push
push
movs
test
adc
jl
dec
enter
sub
imul
nop
lock
jp
inc
retf
les
pop
popa
test
ficom
dec
sub
fisub
push
sbb
lahf
loop
enter
outs
imul
dec
dec
out
mov
stos
retf
movs
clc
popa
jmp
out
cld
(bad)
icebp
xor
dec
sbb
iret
test
call
test
xchg
adc
out
ret
cli
sub
inc
mov
mov
dec
sbb
inc
sbb
push
mov
(bad)
int3
sbb
and
ins
cdq
pop
mov
jg
push
adc
mov
adc
popf
inc
mov
and
(bad)
mov
xor
xchg
jecxz
jb
mov
jcxz
(bad)
jo
lods
mov
inc
mov
int
xor
cmps
cmp
sub
mov
cmp
ins
ins
outs
and
pop
test
retf
and
lods
jnp
adc
call
shl
loope
cs
pop
popf
cld
mov
hlt
inc
add
sbb
ins
and
mov
sub
push
mov
jo
fimul
in
aam
popa
and
es
xchg
popf
leave
xlat
aas
mov
sbb
pop
test
mov
xor
sbb
dec
je
sub
xor
push
dec
sub
retf
cli
mov
les
cmp
out
and
ja
jecxz
jecxz
adc
cmp
lds
pop
push
jb
sub
ins
push
xchg
jmp
ret
(bad)
mov
popf
xchg
popa
ins
xchg
cmp
jp
std
mov
mov
imul
bts
fwait
je
jle
cmp
dec
push
xor
xor
sbb
jg
les
stc
cmp
pushf
idiv
imul
jmp
push
mov
lds
stos
xchg
(bad)
cmp
pop
jns
dec
imul
add
sub
mov
rcl
sub
test
call
pop
xlat
or
ins
inc
retf
mov
imul
(bad)
jmp
mov
push
cdq
js
cmp
jb
mov
and
mov
dec
sbb
jle
popa
shr
neg
xchg
adc
test
add
jae
or
fmul
ds
movs
xor
clc
xor
adc
data16
nop
dec
inc
lods
push
mov
sub
in
dec
jbe
retf
les
xchg
out
add
xchg
sub
test
mov
call
out
push
xor
dec
and
xor
xchg
icebp
into
inc
data16
shl
call
add
adc
jo
retf
dec
popa
jle
xlat
ret
div
clc
(bad)
xchg
sbb
xchg
es
in
aaa
adc
aas
cmps
mov
(bad)
fisub
test
dec
or
sbb
dec
push
push
loopne
cmp
dec
pop
fistp
out
outs
imul
std
loope
ficom
lods
pop
adc
dec
xchg
popf
fild
test
(bad)
in
test
loop
ffreep
call
xchg
mov
sahf
pop
push
cmp
icebp
or
ins
frstor
xlat
fadd
inc
pop
popf
aaa
leave
jle
dec
pop
aaa
ss
bound
inc
inc
out
mov
sbb
fwait
fs
call
les
inc
add
mov
mov
repnz
push
jmp
push
mov
fnstcw
jl
fcom
sub
pop
add
test
sub
stos
ror
fisttp
mov
dec
sbb
lds
adc
cvtpi2ps
mov
div
fimul
mov
aas
fcmovnu
xor
or
jnp
xor
div
enter
add
aam
sbb
fs
(bad)
push
inc
lahf
in
clc
adc
(bad)
push
xor
adc
test
(bad)
addr16
call
ror
add
(bad)
sar
test
pusha
es
inc
adc
mov
xchg
sub
mov
inc
jmp
bound
mov
sub
push
adc
imul
push
aaa
push
lds
arpl
dec
aam
dec
shl
(bad)
pop
add
int3
adc
lea
jb
pop
xor
bound
cld
ds
sbb
dec
lea
or
pop
pop
fstp
jae
shr
sti
pop
frstor
mov
repnz
jl
cmp
stos
adc
add
cmp
dec
sub
test
or
jne
and
add
xor
dec
dec
adc
mov
loop
into
test
cmp
ss
(bad)
xchg
rcl
push
pusha
pop
push
mov
and
loop
or
lea
test
js
movs
mulps
xlat
jge
xchg
cmp
icebp
dec
jnp
inc
jne
cmp
lock
and
or
pop
add
push
je
movs
sti
cmps
das
pushf
xchg
ret
sbb
cwde
and
pushf
dec
retf
pop
in
ss
and
cmp
sbb
in
adc
mov
push
js
jbe
sub
add
ret
mov
(bad)
retf
dec
and
(bad)
fild
(bad)
fisub
test
mov
cmp
adc
sbb
test
cli
and
sar
cmp
fstp
xor
jb
xchg
nop
mov
fs
shl
add
imul
adc
mov
lods
jl
sub
and
mov
fldlg2
jns
cmc
ror
jg
mov
jle
aas
xor
mov
sbb
or
adc
(bad)
xchg
aad
jmp
pop
adc
xlat
repnz
xor
hlt
(bad)
shl
cld
retf
test
int
cmps
scas
sbb
sub
stos
fs
mov
mov
rol
in
je
iret
loopne
mov
xchg
(bad)
stc
mov
lock
push
shl
arpl
mov
jp
scas
inc
push
imul
inc
ins
enter
ss
int3
push
lahf
jl
fistp
ror
adc
clc
push
mov
dec
out
cdq
mov
pop
ror
movs
xchg
lds
add
jp
push
loopne
addr16
shr
call
call
add
xlat
imul
add
inc
add
or
sahf
add
jmp
jmp
inc
dec
into
sub
mov
pop
cld
push
out
cmp
(bad)
or
pop
xlat
sub
cmps
inc
call
je
clc
push
mov
test
or
jmp
mov
hlt
nop
inc
inc
jmp
fisttp
mov
ss
adc
adc
stos
sub
or
cmp
imul
xor
dec
sbb
inc
ins
loope
dec
test
leave
clc
xor
lock
inc
rcr
ins
and
inc
xchg
lock
loope
es
xchg
dec
fwait
out
test
ficomp
ds
das
jb
outs
or
scas
outs
(bad)
outs
call
mov
adc
dec
rcl
rol
out
retf
push
stos
push
imul
sub
cli
jae
jmp
jb
lea
xor
and
aam
xchg
mov
aas
lods
movs
sub
aad
jle
mov
jmp
out
in
aam
loopne
imul
pusha
sub
arpl
pop
xor
test
xor
into
adc
loopne
jnp
pop
jmp
push
add
rcl
js
arpl
and
mov
and
adc
mov
adc
and
dec
in
dec
jo
sahf
jecxz
cmp
movs
mov
inc
pop
rcl
arpl
pushf
ins
jmp
or
ret
adc
test
dec
les
test
cmp
retf
enter
or
or
cmp
adc
push
out
adc
sub
sbb
lahf
ss
stos
xchg
inc
dec
std
and
dec
cmp
test
iret
aam
sub
pushf
sbb
pop
jmp
stos
lock
pop
rcr
mov
sar
fnstenv
es
stc
das
cli
sbb
mov
cmps
inc
clc
lds
xchg
adc
xchg
dec
jae
retf
sub
rcr
mov
mov
outs
test
pop
sub
and
aaa
(bad)
adc
sbb
jl
jae
clc
data16
ret
test
fadd
sub
ja
je
jmp
xor
xchg
repnz
mov
mov
mov
cmp
xchg
(bad)
rol
imul
das
aas
mov
mov
loopne
outs
in
fbstp
(bad)
das
imul
shl
xor
sub
cmp
pop
les
ret
mov
jl
add
sbb
ja
scas
push
jmp
ja
es
push
jno
in
and
or
dec
leave
into
out
movs
fdivr
pop
pop
popa
ins
push
stc
inc
ds
mov
cmc
push
aam
cmp
arpl
fadd
pusha
jbe
test
adc
retf
jbe
scas
es
inc
les
pop
sub
cmp
int3
xchg
adc
mov
loopne
mov
repnz
js
loopne
add
mov
or
jnp
loopne
movs
or
addr16
pop
arpl
or
movs
pushf
inc
mov
adc
call
cli
mov
and
cmps
repz
xchg
mov
cmp
aad
dec
add
cmp
push
jecxz
js
sbb
adc
in
jo
fsubr
or
mov
cmc
mov
daa
test
cmps
xchg
repz
cmp
and
xor
xchg
int
or
mov
jne
inc
adc
cmps
icebp
xor
mov
and
mov
mov
ins
wrmsr
mov
lods
dec
or
adc
mov
and
push
or
or
dec
jle
xchg
mov
add
je
sbb
push
daa
push
rol
or
xchg
mov
mov
js
icebp
out
(bad)
xor
xchg
mov
sub
lds
add
mov
sub
pushf
and
and
fiadd
js
aad
push
or
test
dec
ss
adc
test
pop
into
mov
xor
or
retf
loop
mov
aam
pusha
inc
(bad)
fisttp
xor
sbb
push
add
cmps
clc
aam
jno
mov
fs
(bad)
rcl
push
add
xchg
stos
out
mov
mov
test
jge
cmp
mov
mov
and
sahf
ficomp
dec
(bad)
arpl
ins
sub
rcr
xor
mov
adc
ins
pop
aas
(bad)
in
into
nop
jb
xor
arpl
dec
dec
pop
xchg
mov
mov
jmp
cdq
push
aad
fidivr
retf
pop
sub
test
adc
mov
iret
fimul
mov
and
sbb
out
or
sub
lock
repz
pop
adc
inc
out
inc
cmps
shl
(bad)
stc
xchg
xor
fldenv
dec
xchg
test
std
sub
sbb
adc
push
or
sub
pop
ror
pop
repnz
add
popf
adc
jp
or
mov
or
fistp
mov
and
sub
enter
pusha
adc
mov
mov
push
adc
pop
pop
mov
mov
dec
or
mov
mov
mov
mov
sar
cmp
test
pop
and
or
cmp
mov
xchg
fs
sub
mov
(bad)
adc
lods
mov
icebp
push
mov
xor
mov
and
outs
xchg
pop
ret
dec
mov
mov
jmp
push
jecxz
jb
mov
xlat
and
pusha
push
dec
les
cwde
cmp
mov
or
or
int3
xchg
cli
mov
loope
sbb
fs
or
jmp
shl
lods
xchg
xor
jp
pop
(bad)
push
sub
aaa
dec
pop
xchg
iret
fwait
cmps
sub
or
imul
nop
inc
cmp
dec
xor
(bad)
shr
cmp
xchg
test
jno
into
lds
push
cli
push
xchg
stos
cmp
push
add
ret
cmc
hlt
push
cwde
dec
pop
mov
adc
xor
and
int3
sub
jnp
fdiv
or
fisub
mov
shl
mov
mov
imul
or
sbb
nop
or
cmp
cli
push
push
je
call
sbb
scas
leave
inc
inc
in
dec
cmp
mov
push
cmps
popa
dec
push
jecxz
(bad)
sub
or
inc
or
sbb
cmp
or
lods
jo
je
arpl
sub
dec
div
rcr
jb
pop
xchg
mov
sbb
repnz
cmp
mov
aaa
movs
ror
arpl
xor
jmp
loope
sar
mov
imul
in
jle
cs
and
aad
aas
das
pushf
dec
dec
movs
ret
sub
lds
cld
xor
and
imul
pcmpeqw
aas
jge
daa
out
or
call
sar
or
ret
add
movs
sbb
add
or
ret
push
pop
clc
aas
dec
aam
fst
jge
inc
mov
cmps
sar
mov
push
jl
dec
sbb
pop
outs
sub
mov
rcr
jecxz
ror
cmp
lea
jmp
out
xchg
push
xor
mov
push
(bad)
pop
xor
push
imul
ins
gs
add
xchg
xor
and
ror
jbe
test
adc
ss
stc
sbb
retf
add
push
or
sub
push
fs
push
nop
pop
(bad)
push
das
loope
dec
and
(bad)
mov
gs
jmp
leave
sbb
into
sahf
adc
sar
cs
pop
push
pop
shr
sbb
ds
in
sub
jl
and
xchg
(bad)
push
push
xchg
std
out
jl
sahf
xor
or
fnstcw
pop
jbe
xchg
pop
pop
psllw
or
mov
mov
pop
push
add
lods
adc
daa
out
dec
arpl
mov
test
scas
lods
loop
adc
jge
dec
in
out
popf
test
xchg
jbe
cs
cdq
adc
push
push
mov
out
mov
cmc
mov
aam
test
jmp
test
mov
call
jns
jb
div
sbb
adc
cmp
add
movs
pushf
adc
adc
scas
sbb
pop
clc
repnz
xor
ins
sar
push
sub
repz
mov
dec
and
add
aas
sub
or
aas
retf
int
sbb
mov
dec
mov
push
leave
xchg
enter
and
call
sbb
or
clc
sbb
inc
test
(bad)
and
test
test
jnp
mov
jecxz
ror
fwait
push
push
pushf
add
pusha
inc
xchg
sahf
cmps
xor
mov
fidivr
jcxz
lods
jle
test
ins
mov
in
or
mov
push
mov
xor
xchg
loopne
aas
sbb
jge
inc
mov
lods
retf
inc
lahf
out
sub
stos
dec
dec
out
mov
out
and
xchg
movnti
(bad)
mov
lahf
out
stos
jge
leave
leave
mov
and
push
pop
mov
pop
fisubr
in
mov
mov
jbe
jp
and
jp
out
push
adc
or
or
hlt
sub
xchg
test
jge
fisubr
ds
mov
cmp
movs
add
addr16
shl
or
jl
loopne
test
mov
mov
or
call
mov
adc
jl
mov
push
iret
sub
or
cwde
fst
pusha
adc
cmp
mov
xor
pushf
cmps
rol
jmp
pop
stos
add
sahf
ins
cmp
retf
loop
fdivr
in
test
pop
cs
fwait
mov
hlt
dec
push
mov
cwde
out
mov
iret
sub
xchg
sahf
ins
test
lods
outs
daa
sbb
js
hlt
jg
rcr
into
jno
ins
mov
dec
into
stc
mov
aaa
lods
movs
add
mov
das
adc
inc
pop
sbb
(bad)
into
mov
mov
loopne
cld
push
fs
movs
stc
cmp
pop
cmc
sub
repnz
jle
outs
shr
fisub
sub
fld
mov
add
push
jmp
xor
std
out
js
daa
or
test
es
dec
call
sub
sub
sbb
(bad)
retf
push
not
xor
mov
dec
adc
dec
xchg
mov
xchg
arpl
aas
jno
adc
popf
adc
(bad)
js
and
push
push
xchg
in
repnz
daa
jbe
push
push
(bad)
hlt
fwait
sbb
mov
mov
inc
add
aas
xchg
(bad)
cmp
jno
aam
mov
jb
ins
xchg
mov
xor
std
mov
scas
xor
aaa
sbb
push
hlt
ins
movs
enter
xor
(bad)
push
push
xchg
enter
sub
push
mov
and
cmp
and
scas
stos
(bad)
pop
mov
lahf
add
retf
ret
test
adc
lahf
dec
jmp
cmp
jmp
dec
jge
inc
adc
push
les
adc
mov
cdq
ins
jmp
add
adc
cmp
push
xchg
jbe
bound
or
inc
cli
movs
out
push
inc
or
inc
lahf
imul
jl
sbb
cmp
add
add
out
dec
dec
jns
lods
in
ins
xchg
mov
inc
shl
mov
test
aam
movs
cmp
mov
jmp
push
inc
xchg
scas
pop
adc
mov
movs
jle
dec
mov
stos
popf
(bad)
je
sub
js
mov
sub
or
adc
cld
mov
and
push
adc
pop
inc
dec
cdq
mov
jae
mov
stc
jge
push
cmp
add
es
sub
data16
ficomp
xchg
inc
loope
and
mov
pop
jg
sbb
sub
gs
pop
fst
dec
xchg
test
ret
mov
(bad)
not
or
inc
stos
test
stc
mov
and
pop
add
xchg
dec
rcr
dec
in
aad
js
xchg
and
jae
pop
loopne
ficom
xchg
ins
mov
mov
hlt
jo
neg
xor
arpl
loop
jmp
adc
xchg
rcr
das
fwait
mov
test
mov
mov
adc
lods
xchg
mov
mov
fnstsw
xor
inc
jb
push
xor
dec
test
es
mov
arpl
or
js
(bad)
pop
add
sahf
sub
ins
mov
cld
or
pop
jp
icebp
sub
mov
xor
mov
mov
sahf
aam
cmp
imul
ror
outs
sub
add
jl
sbb
cwde
xor
shr
dec
(bad)
sbb
add
fld
and
cmp
int3
loope
mov
hlt
fcom
(bad)
ds
(bad)
mov
pop
add
add
retf
movs
popf
xor
(bad)
fwait
das
aam
call
lock
addr16
mov
loope
sahf
pop
push
cmp
outs
in
retf
stc
add
cmp
xchg
call
loope
mov
je
std
inc
and
inc
cwde
mov
xchg
js
jno
mov
jmp
pop
pushf
xchg
fadd
fst
add
pop
lahf
sub
lock
push
jp
mov
es
fimul
frstor
fpatan
sbb
cmp
fnsave
in
jge
mov
mov
or
arpl
pop
xor
addr16
cmp
hlt
pusha
mov
lods
loope
ds
cmp
mov
js
hlt
rcl
les
xor
test
call
cmp
fstp
mov
fnsave
jmp
ror
pusha
(bad)
mov
call
gs
les
and
fidiv
xchg
push
pop
fdivr
jb
mov
adc
repz
lods
mov
sbb
adc
jb
dec
mov
rol
in
retf
xchg
mov
xor
int3
call
jl
jns
dec
cmp
xchg
stos
(bad)
js
ss
mov
jp
js
dec
fadd
sbb
and
jmp
pop
daa
(bad)
xchg
out
add
xor
sub
jne
das
sub
or
aad
cwde
daa
push
dec
int
xlat
rcr
adc
inc
jae
out
adc
out
ss
jo
add
push
adc
(bad)
mov
push
mov
push
jg
icebp
loope
jnp
jb
shr
push
sub
int
(bad)
adc
jge
sbb
and
stos
js
adc
sub
out
mov
in
les
sti
cmp
cmp
mov
jnp
mov
mov
jo
and
jecxz
aam
mov
mov
adc
pop
sbb
jb
pop
mov
(bad)
es
stc
movs
aaa
sahf
or
jmp
pop
aaa
adc
ds
mov
adc
outs
aas
fdiv
iret
and
sahf
jnp
dec
and
or
xchg
mov
frstor
xchg
xchg
push
dec
call
jae
xchg
jge
xor
movs
jbe
(bad)
test
test
jle
mov
cmc
call
mov
mov
xor
jns
mov
(bad)
out
rcl
sub
add
mov
sub
es
mov
ror
sbb
aam
pop
dec
xor
aad
sub
and
jno
aaa
out
popa
fsub
repnz
xchg
add
push
push
nop
jecxz
or
cmp
arpl
xchg
pop
xor
ja
shr
sti
adc
pushf
push
adc
add
out
mov
cmps
jmp
push
xor
loope
cli
sbb
imul
ins
dec
mov
aaa
mov
xor
in
dec
jg
mov
push
jge
push
xor
fwait
sahf
cli
repz
(bad)
sub
lods
inc
lock
mov
pop
mov
sbb
rcl
sub
sahf
in
stc
push
xor
and
cmp
xor
jp
jb
(bad)
loopne
jg
adc
push
pop
dec
loop
mov
ret
sub
push
enter
xchg
or
sbb
aas
push
jmp
fsubr
push
push
pop
jecxz
pop
jo
fiadd
ret
repz
add
xchg
mov
int3
ror
in
fistp
xchg
mov
aad
jle
out
call
jp
xchg
int
imul
jbe
sub
adc
gs
stc
adc
push
in
or
mov
inc
mov
ins
mov
lods
fnsave
std
or
xchg
daa
add
mov
int
in
inc
out
movs
or
dec
ja
test
jae
dec
cmp
inc
in
stos
ins
push
ss
inc
mov
cmp
sub
movs
sti
or
fsub
(bad)
iret
xlat
and
rcr
jb
retf
xchg
and
leave
mov
xor
scas
xor
push
not
pop
stos
add
out
dec
cmps
in
sub
adc
imul
dec
sbb
pop
dec
and
inc
sbb
rdtsc
das
mov
scas
push
sub
inc
mov
mov
cmp
or
push
dec
push
cs
popa
adc
bound
push
adc
inc
es
and
jle
sbb
mov
dec
push
popa
jle
adc
lahf
loop
jl
in
mov
mov
inc
push
mov
add
push
pop
sbb
mov
(bad)
jmp
dec
pop
mov
jno
daa
rcl
stc
pop
gs
jmp
ins
js
std
test
add
sbb
shl
sbb
add
sub
add
std
test
mov
fstp
outs
fsubr
push
aaa
mov
mov
xchg
stos
icebp
aad
sbb
cld
cmp
data16
ins
int3
jl
cmp
push
mov
mov
jp
ins
pop
or
call
push
adc
movs
adc
mov
fld
stc
mov
daa
mov
and
push
push
fyl2x
loop
mov
or
in
fnstsw
dec
cmp
cmp
sub
mov
pop
out
jns
shl
icebp
adc
loope
std
nop
fild
sbb
test
or
pop
out
and
cmp
adc
out
and
mov
sub
mov
xchg
(bad)
aas
or
mov
cmp
iret
lods
test
pop
push
fs
ror
scas
sub
sbb
jns
out
imul
(bad)
lds
xchg
adc
out
inc
mul
dec
mov
or
lock
inc
inc
push
mov
cwde
pop
pushf
js
dec
jno
fbld
pusha
daa
cmp
not
rol
mov
mov
sbb
jmp
push
getsec
outs
(bad)
(bad)
pop
mov
dec
ja
movs
ret
xor
push
mov
push
mov
js
(bad)
jmp
adc
cmp
xchg
mov
or
clc
in
mov
and
movs
mov
jo
jge
xchg
aas
aaa
in
add
push
or
sbb
(bad)
xor
imul
mov
pop
fwait
inc
cmp
xor
and
popw
call
pop
imul
or
push
inc
push
add
fcmovne
lahf
xchg
shr
pop
push
inc
cs
mov
mov
movs
mov
inc
mov
jge
mov
dec
es
push
mov
scas
jecxz
imul
and
adc
adc
add
icebp
loop
sbb
cmp
xor
jle
cmps
call
pop
mov
sbb
add
xchg
jmp
scas
(bad)
or
mov
das
pop
and
scas
cmp
inc
popa
inc
test
bnd
test
cmp
into
jecxz
in
jmp
cmc
add
jae
mov
xchg
iret
adc
xlat
jae
or
push
sbb
(bad)
xchg
mov
or
jb
aaa
(bad)
and
popa
xchg
std
shl
outs
mov
mov
cdq
push
xor
add
sbb
fwait
xchg
fdivr
sub
out
fiadd
mov
push
jnp
sbb
pop
jns
out
pop
xchg
sti
(bad)
mov
xchg
loopne
xor
js
sbb
pop
lods
pop
movs
std
push
(bad)
sbb
test
jbe
mov
dec
call
jo
push
test
mov
xor
xor
das
mov
pop
fucomp
es
adc
jge
fwait
xchg
jnp
xor
mov
pop
ds
push
outs
push
loop
xor
sub
not
arpl
push
repz
mov
lods
cli
and
imul
lahf
lds
dec
adc
push
fisub
push
or
mov
test
push
xor
jo
lods
cmc
push
lods
mov
out
int
leave
mov
lea
fnstcw
movsx
int
mov
xchg
dec
xchg
lods
enter
sub
jmp
popa
movs
lea
ret
jns
cmp
xor
inc
push
cmp
mov
movs
adc
mov
inc
stos
aaa
aas
loop
les
jl
cmp
sub
outs
dec
sub
je
sub
pop
clc
sub
pop
dec
es
rcr
sahf
call
jb
dec
or
mov
in
and
in
retf
pushf
ds
pop
out
jae
scas
jnp
idiv
lahf
inc
sbb
out
or
mov
cmp
fisttp
xor
cmps
rol
sbb
outs
inc
mov
dec
repnz
push
movsx
nop
jle
push
test
and
fsubr
dec
xor
add
shl
or
mov
and
xchg
inc
nop
mov
mov
stos
fdivr
inc
mov
xor
aas
dec
cmps
sar
sbb
adc
sub
mov
cmc
aaa
rcr
lods
std
and
movs
or
mov
rcr
and
inc
and
pop
out
sti
mov
cdq
adc
push
jno
rcl
movs
mov
stos
(bad)
mov
call
push
sti
fst
jo
mov
mov
xor
lods
loope
cmps
jecxz
rcl
stc
dec
inc
fadd
xor
pop
(bad)
ret
int
jb
sub
add
cdq
fld
mov
int
lods
out
mov
(bad)
fdivr
and
add
movs
ins
xchg
shr
js
add
test
adc
aas
scas
out
mov
xor
mov
dec
popa
not
add
sub
aas
mov
inc
cs
shr
sbb
popa
push
jns
ret
sbb
pop
fidiv
ins
(bad)
sbb
adc
sbb
das
ins
pop
retf
arpl
shl
repz
mov
or
xchg
lods
ins
fisubr
(bad)
leave
mov
add
add
retf
cmp
sub
retf
adc
mov
call
cmp
adc
sub
pop
and
mov
outs
cli
rcl
test
push
mov
cmp
popf
cmps
pop
pushf
cwde
mov
imul
pop
push
cmps
mov
arpl
cli
push
hlt
xor
pop
inc
int3
sysexit
clc
and
js
pop
push
lock
loop
mov
xchg
gs
xchg
sub
push
and
cmc
(bad)
bound
ret
and
inc
mov
pop
sbb
scas
pop
shl
retf
and
add
jno
push
ss
cmps
ins
data16
adc
sbb
pop
out
inc
push
sub
in
push
add
xchg
cmp
mov
jae
xor
fmul
mov
cmp
jl
cmp
fcom
mov
call
leave
mov
cmc
icebp
mov
or
xor
sub
jg
scas
mov
iret
clc
out
xor
inc
pop
jmp
jecxz
js
dec
xchg
push
ret
fcmovb
mov
mov
loop
bound
cmps
ss
jno
cmp
sbb
ins
fnsave
jg
sub
jge
(bad)
call
les
mov
test
pop
stos
scas
scas
test
pop
xor
push
cmp
pop
push
loope
shr
jp
jbe
int3
xlat
add
jmp
je
fimul
sbb
mov
mov
(bad)
es
mov
fmul
nop
les
rcl
in
ja
(bad)
xor
inc
inc
or
mov
mov
cmps
addr16
nop
call
dec
xchg
out
mov
dec
mov
pop
mov
jecxz
xor
jbe
xor
icebp
xchg
stos
mov
fstp
in
(bad)
mov
sub
xchg
or
in
ins
add
cli
xchg
add
mov
call
mov
test
push
int
arpl
call
or
pop
add
les
mov
out
mov
ror
leave
sub
inc
push
jge
xchg
pop
sub
add
std
js
cli
loop
sbb
mov
pop
out
cs
fcmovu
pop
in
movs
into
inc
(bad)
jecxz
(bad)
retf
jnp
push
and
pushf
leave
push
outs
cmc
fsubr
xchg
jl
mov
push
add
dec
pop
jnp
lahf
mov
in
and
jne
loope
cmp
jge
xor
dec
into
xchg
out
mov
lahf
xor
test
mov
pop
xchg
sbb
xchg
loope
push
mov
imul
cmp
adc
push
out
jne
fild
mov
test
stos
repnz
push
sub
cmp
xor
shr
sahf
jecxz
or
mov
es
mov
jbe
sbb
pop
in
jbe
je
pop
add
xor
fwait
or
mov
push
inc
(bad)
ror
cmc
(bad)
xor
out
repz
in
inc
jnp
adc
jl
xlat
retf
dec
jg
das
rcl
out
mov
push
(bad)
xlat
pop
ss
aas
nop
xor
inc
lds
add
dec
mov
jbe
jmp
pop
push
in
lods
cmp
adc
fadd
popf
adc
push
lock
sub
xchg
(bad)
popf
vpaddd
jge
out
sahf
add
call
push
add
mov
mov
and
dec
retf
clc
clc
mov
hlt
pusha
mov
and
mov
test
adc
pop
cli
not
push
sub
push
leave
cmp
mov
add
test
mov
ret
call
adc
add
inc
clc
fwait
mov
lea
dec
popf
enter
aaa
push
ins
xchg
(bad)
jb
icebp
jns
add
mov
ret
mov
test
xchg
in
std
cmps
add
inc
fbstp
inc
cmp
fiadd
pop
out
jb
sbb
cmp
dec
cmp
adc
ss
mov
or
mov
retf
cmp
push
xchg
scas
push
out
shr
xor
enter
gs
jbe
jne
mov
call
pop
popa
js
lahf
pop
out
out
aaa
sar
in
je
sub
sbb
inc
adc
leave
jb
cmp
movs
test
pop
test
test
push
xchg
(bad)
aad
sub
inc
or
adc
push
inc
mov
gs
repnz
aaa
dec
mov
dec
ss
aaa
movs
enter
idiv
mov
push
xor
scas
dec
ficom
add
mov
call
sti
jl
mov
push
lods
mov
sti
loopne
jbe
dec
dec
retf
repz
xor
add
ins
jmp
dec
pop
(bad)
or
repz
sub
cmp
pop
jno
or
dec
lock
arpl
shl
mov
inc
pop
xor
shr
lock
je
aas
loope
gs
out
enter
push
lods
cli
jb
movs
pop
or
mov
cmc
daa
inc
xchg
jge
push
repnz
dec
pop
loope
ss
cs
imul
enter
pop
imul
imul
inc
pop
in
xlat
fsubrp
(bad)
push
mov
(bad)
int
xor
outs
sub
xor
inc
xchg
mov
(bad)
out
cmp
cmc
int
fnstenv
int3
scas
xor
xchg
leave
push
je
and
mov
jne
push
in
add
loopne
ins
fstp
jge
mov
pushf
aam
push
ins
cld
lods
pop
and
test
jmp
out
cmp
mov
adc
aam
pop
cmp
push
cmp
out
pop
ins
dec
fidivr
pop
cld
retfw
dec
sub
stc
xchg
xlat
dec
push
or
sti
test
stos
std
push
mov
fs
xchg
mov
clc
mov
push
lahf
shl
lods
sbb
test
out
ins
imul
adc
shl
add
push
cmp
dec
out
inc
int3
dec
js
(bad)
sti
or
lock
pop
fisubr
cdq
and
fld
fwait
pop
adc
push
jecxz
into
xchg
popf
in
scas
std
out
mov
cli
gs
xchg
inc
movs
movs
loope
lahf
sbb
scas
mov
cli
(bad)
in
xchg
out
test
or
vrcpps
retf
retf
inc
sbb
shr
mov
jp
fsub
fidiv
mov
add
cs
cmp
dec
addr16
dec
leave
ror
stos
cmp
addr16
fisubr
jbe
mov
pushf
add
js
ja
jl
xor
test
lods
mov
pop
loop
inc
in
mov
icebp
mov
mov
push
daa
imul
xchg
jecxz
neg
adc
jge
jmp
and
aaa
xchg
xchg
push
dec
sbb
hlt
addr16
cs
nop
xor
or
in
jb
adc
mov
push
fisub
(bad)
loopne
call
push
cmp
push
loope
fisub
ds
movd
fbld
(bad)
fdivr
and
bound
into
mov
mov
jg
jbe
in
enter
mov
mov
popa
xchg
mov
push
jns
popf
mov
retf
sti
ret
mov
push
shl
cmp
xchg
popa
enter
xchg
rol
cwde
lods
add
mov
xchg
mov
int3
jnp
pop
or
fwait
sbb
fisubr
and
cmp
xlat
pop
in
mov
mov
mov
jle
xor
cmc
jnp
mov
fstp
loopne
dec
ja
cmp
lods
int
sub
stc
jecxz
push
fdiv
or
aad
ins
inc
mov
push
sbb
fst
jns
shl
add
sub
xchg
pop
inc
and
dec
dec
or
gs
ins
add
jl
popf
xor
aad
retf
sub
dec
xlat
inc
std
or
mov
sahf
sbb
xchg
enter
sub
hlt
or
scas
pop
mov
fsub
dec
dec
stos
sbb
adc
icebp
dec
add
mov
mov
push
sub
xchg
mov
xchg
xchg
cmps
xchg
xchg
arpl
adc
lods
sub
jmp
mov
sbb
nop
push
xor
outs
cmps
xchg
jbe
cdq
retf
cli
lods
sub
xor
scas
and
in
adc
or
cwde
mov
jmp
xor
xchg
jp
pop
cmps
jbe
push
mov
and
jno
stos
jnp
(bad)
mov
sbb
dec
stc
ja
fwait
ss
cli
data16
fldenv
xlat
push
dec
sbb
enter
mov
daa
dec
outs
outs
inc
sub
shl
mov
xor
and
into
daa
pop
rcr
mov
(bad)
call
jo
dec
xchg
add
out
repz
out
jg
test
ja
out
sti
in
repnz
pop
jae
les
das
fidiv
in
test
sub
stos
push
dec
jg
pop
js
jb
nop
adc
mov
popa
adc
mov
inc
cwde
inc
inc
pushf
dec
in
sbb
sub
jl
rcr
fimul
test
arpl
pop
jne
mov
scas
popf
hlt
ja
fs
outs
pop
je
and
push
mov
(bad)
(bad)
scas
xlat
sub
inc
and
dec
mov
sbb
sbb
icebp
jb
(bad)
pop
jle
inc
pop
mov
std
ss
cli
mov
rcr
movs
shl
sub
dec
mov
mov
mov
or
jmp
xchg
dec
adc
mov
outs
xor
shl
das
fisubr
add
add
cmc
jp
and
xor
dec
dec
push
stos
aaa
fist
xchg
cs
dec
nop
sub
mov
and
daa
dec
sub
adc
xor
in
cmp
xlat
jg
add
leave
dec
pop
loop
fldenv
mov
pop
xchg
outs
pop
out
imul
ds
fist
out
dec
fs
fwait
pop
outs
push
icebp
shr
inc
or
pusha
loop
fisub
fisttp
jo
clc
xor
mov
test
dec
mov
ja
ror
xchg
call
push
mov
lahf
pushf
movs
xor
popa
jbe
pop
adc
inc
jo
mov
push
xchg
repz
das
push
sub
cmp
lahf
rol
les
ss
xor
(bad)
lods
or
call
cld
or
jo
add
inc
inc
xchg
sahf
xor
or
mov
ins
cmp
shl
xor
fimul
xor
data16
test
dec
icebp
cwde
idiv
mov
lahf
cld
iret
mov
daa
(bad)
cmp
es
je
iret
call
jmp
das
inc
bound
xor
jmp
jmp
pop
add
add
mov
cmp
jg
adc
add
push
fstp
jmp
pop
inc
(bad)
ins
adc
and
and
sbb
nop
mov
or
inc
pop
jle
(bad)
gs
in
hlt
mov
fadd
data16
mov
aam
les
sbb
xor
mov
lahf
pop
or
inc
cmps
add
and
xor
scas
sbb
inc
mov
jmp
call
enter
outs
pop
cdq
in
fdiv
mov
popa
out
into
sub
or
cli
pop
xchg
push
mov
fbstp
loop
fstp
sbb
out
adc
pop
(bad)
aad
pushf
lock
mov
cmps
cs
mov
xor
sbb
mov
jbe
dec
js
ins
push
(bad)
mov
std
push
pop
sahf
ret
jmp
leave
add
int3
push
ins
ja
mov
mov
in
mov
test
test
aas
mov
pop
mov
cmp
and
xchg
and
aaa
and
adc
cli
push
push
outs
icebp
xor
push
push
dec
jecxz
inc
pop
hlt
shl
push
push
xchg
push
lahf
div
cmp
jp
jae
or
aaa
dec
push
popf
mov
jbe
and
push
mov
adc
jl
loop
mov
or
js
aam
in
or
xor
xchg
mov
xor
call
rcl
and
cwde
dec
cld
aas
push
(bad)
sub
(bad)
loop
mov
cs
dec
or
and
xlat
dec
mov
ins
aas
mov
loop
(bad)
mov
aaa
imul
mov
pop
pop
std
and
arpl
and
mov
push
pop
jge
les
add
inc
xchg
(bad)
popa
test
jbe
xor
add
aad
jo
jl
adc
jl
loopne
xchg
test
push
scas
jl
(bad)
sbb
sbb
(bad)
dec
loope
jb
add
inc
push
push
xor
ret
mov
bound
adc
iret
sbb
pusha
jl
lock
loop
cdq
mov
xor
lea
ret
ret
fcom
xlat
inc
(bad)
jmp
mov
lahf
stos
imul
sahf
lahf
inc
add
dec
cli
xchg
hlt
push
in
rcr
mov
das
xor
bound
xor
and
pop
pop
mov
jle
dec
movs
shl
push
mov
sbb
test
cs
popf
ja
xor
sbb
cmps
outs
sub
sub
inc
jl
add
mov
inc
clc
push
ret
inc
arpl
jnp
xor
les
or
aas
dec
cwde
add
lea
inc
xchg
arpl
into
icebp
(bad)
jns
and
js
pop
call
ins
(bad)
ins
cld
jl
mov
lods
pop
arpl
cdq
and
dec
test
fcomp
ins
retf
or
adc
mov
iret
add
push
cdq
mov
ins
jp
stos
fisttp
cmp
pushf
sbb
mul
test
push
dec
std
call
push
jbe
push
stc
inc
icebp
adc
ss
push
mov
pop
(bad)
ds
mov
movs
xchg
xchg
adc
mov
outs
mov
xor
inc
xor
jmp
aam
xor
cmp
test
mov
cmp
xchg
std
imul
dec
push
jae
(bad)
das
adc
loopne
icebp
call
pop
imul
iret
gs
jns
xchg
pandn
jb
mov
sub
imul
outs
lods
mov
ror
dec
je
jecxz
adc
dec
int
push
push
int
push
add
imul
adc
mov
mov
and
add
das
out
addr16
out
data16
xor
xchg
pop
cmps
cmc
cmps
fsubr
push
or
jg
or
nop
or
pop
stos
sbb
scas
ficomp
fs
push
mov
fwait
pusha
ror
push
les
inc
(bad)
push
lea
or
sbb
nop
jns
push
popf
mov
mov
push
popa
mov
and
or
sbb
fcom
mov
jns
dec
in
cli
daa
xor
mov
xor
dec
fisubr
xlat
and
jo
mov
call
(bad)
fsub
push
and
xchg
jns
fucomi
cld
and
ins
adc
loope
sbb
icebp
fidivr
rol
aaa
ret
inc
mov
es
into
fwait
and
fcomp
jne
push
addr16
ds
jmp
iret
imul
in
lahf
mov
call
inc
movs
xchg
shr
cli
loopne
cmp
sub
and
loop
in
cmp
add
inc
push
mov
pop
out
mov
inc
fnsave
xchg
mov
es
and
ret
inc
das
imul
or
fsub
sub
jne
pop
mov
lahf
dec
push
xchg
mov
daa
cmp
mov
pop
repz
int
jle
mov
push
pop
xor
shl
mov
mov
push
xchg
sub
push
sub
icebp
xchg
inc
mov
jge
cmp
lods
ret
mov
cli
lea
leave
shl
scas
neg
sub
cmp
popa
mov
xchg
push
xchg
sti
push
imul
sbb
cs
jle
cmps
test
adc
cwde
pop
and
sub
call
test
cmp
or
(bad)
mov
mov
pop
outs
add
sub
adc
and
fnstcw
jbe
xor
outs
data16
clc
mov
sbb
push
mov
pop
and
pop
je
mov
bound
and
out
test
jae
fwait
xor
jne
test
mov
cmps
leave
mov
sub
fadd
sbb
mov
call
jp
pop
lods
fstp
cmps
add
lods
cmp
xor
pop
mov
inc
push
setb
push
xor
xor
xor
call
pop
mov
clc
mov
jg
sbb
(bad)
leave
(bad)
mov
fisub
mov
or
dec
dec
mov
push
add
sub
fmul
mov
dec
int
inc
push
and
pop
out
lds
mov
xchg
pusha
dec
rcr
adc
jne
add
stos
popa
mov
int
daa
mov
das
into
adc
inc
sbb
pop
clc
push
loope
out
out
jp
ins
clc
xchg
lahf
pop
mov
and
cmp
popf
mov
hlt
fwait
adc
pushf
outs
cli
data16
in
imul
popf
mov
imul
jb
in
inc
push
jbe
loop
jne
fcomp
xor
jo
bnd
bound
pop
mov
pop
xor
adc
sbb
or
popa
inc
or
cs
loope
scas
pop
inc
sub
in
cld
stos
push
mov
jno
cmps
retf
ins
inc
es
adc
push
out
inc
xchg
je
stc
push
jl
xor
or
into
mov
lea
rcr
push
sbb
dec
lahf
xor
or
ins
mov
stos
dec
ds
clc
jmp
imul
fcmovnbe
cmps
imul
cmc
std
test
inc
enter
cmp
scas
bound
outs
stc
cld
out
loope
cmp
outs
stos
icebp
clc
jmp
pushf
xchg
add
sar
jle
adc
mov
(bad)
sbb
sub
inc
jmp
es
arpl
push
ret
push
fsub
lock
idiv
mov
cs
fdivr
pop
add
inc
std
into
pop
push
push
or
jae
aad
stos
cmps
and
or
jge
rcl
mov
imul
call
(bad)
fmul
cli
add
mov
cld
out
adc
jmp
mov
xor
stc
jbe
sbb
inc
psraw
shl
pushf
mov
pop
adc
mov
dec
(bad)
push
inc
push
dec
arpl
scas
ds
int
call
mov
mov
fbstp
retf
aaa
ret
xchg
leave
inc
retf
mov
jns
loope
mov
adc
add
mov
or
sbb
jo
xor
test
xor
movs
adc
loop
inc
xchg
(bad)
cdq
shl
push
ins
dec
adc
scas
bound
lods
ins
mov
xor
adc
pop
test
push
sbb
dec
or
div
or
push
int
push
and
lock
popa
leave
mov
add
jno
scas
inc
xor
ja
jmp
push
mov
mov
jmp
pop
xlat
fadd
or
push
cmp
sub
dec
pusha
ret
lods
cmp
sti
sbb
cwde
mov
pop
pop
mov
lods
add
mov
out
pop
test
push
mov
inc
int3
and
pusha
imul
sub
ror
adc
dec
aas
jne
xor
mov
mov
inc
sbb
clc
push
adc
mov
in
(bad)
sbb
fldenv
int
jbe
push
xor
sub
jge
mov
jp
pop
jp
ret
pop
jge
inc
int3
loop
test
ja
and
pop
sahf
sti
cmps
arpl
arpl
sub
outs
mov
mov
mov
fsub
xlat
ins
daa
(bad)
leave
leave
cmp
jns
retf
cmc
daa
out
scas
test
stos
ins
pop
fcmovu
into
test
ficomp
cdq
push
cmps
sahf
shl
imul
inc
cmps
ins
sti
lock
rcr
mov
mov
dec
push
pop
fst
movs
mov
mov
jb
inc
and
xor
xor
inc
in
dec
(bad)
xchg
jp
add
lods
(bad)
arpl
cdq
add
mov
mov
lds
cmp
or
fnstsw
xor
adc
xlat
iret
mov
pop
inc
bound
jb
and
in
sub
pop
xchg
mov
scas
mov
stos
mov
cwde
push
retf
popf
and
push
pop
sbb
js
cmp
or
inc
lock
fwait
xchg
addr16
sub
adc
or
(bad)
ja
add
shl
cli
add
pop
div
ins
adc
iret
icebp
imul
pop
push
in
push
or
push
mov
lods
(bad)
loopne
movs
sahf
lea
(bad)
cmps
mov
pop
loopne
xchg
test
push
xor
push
inc
outs
pop
mov
push
ror
enter
mov
mov
pop
ret
aaa
cmp
data16
scas
sbb
stc
mov
lahf
addr16
sub
leave
mov
retf
mov
fadd
mov
jbe
ds
fdiv
cmc
xchg
xchg
fidiv
sub
sub
sar
nop
fst
push
push
icebp
cmc
add
shr
add
hlt
jg
pop
fwait
xchg
fstp
sbb
sbb
push
stc
popf
or
or
das
fmul
ins
mov
test
inc
je
and
xor
aaa
and
dec
pop
mov
mov
sub
gs
jo
fmul
and
push
add
sub
rcl
or
push
in
lds
mov
and
daa
fld
not
loope
addr16
dec
pop
sbb
pop
rol
scas
cmc
mov
push
dec
dec
in
jle
(bad)
fstp
mov
fwait
mov
dec
mov
test
adc
push
and
mov
les
push
stos
out
daa
pop
lods
les
inc
adc
sub
pop
test
aas
mov
or
sbb
lds
fsub
lds
jmp
cld
inc
ror
movs
in
out
(bad)
cli
test
out
popa
js
aad
fidivr
sbb
mov
das
inc
imul
mov
mov
jmp
repnz
(bad)
lea
pop
add
push
(bad)
std
add
ins
dec
sub
sub
pop
cmps
mov
lds
cmp
or
sbb
ret
mov
fcmovb
neg
test
inc
dec
mov
loop
loope
in
mov
ficomp
mov
sar
inc
or
loopne
and
jge
pop
mov
mov
xchg
ret
aam
or
sbb
(bad)
fsubr
mov
rcr
add
ret
jmp
push
leave
fs
repz
pop
out
adc
adc
pop
push
sub
(bad)
mov
xchg
repnz
add
js
mov
loopne
jns
jnp
xchg
pmaxub
or
push
movs
or
lods
ins
pop
add
push
adc
shl
mov
fist
mov
pop
and
cmc
test
aas
or
and
vpcmpgtb
clc
lds
jne
and
mov
sub
pop
mov
(bad)
scas
ss
and
xchg
pushf
cdq
sub
or
mov
pop
sbb
mov
dec
add
sar
(bad)
je
out
cs
ja
cmp
dec
adc
xor
js
or
mov
sbb
les
mov
clc
jecxz
cmp
or
push
push
push
imul
pop
sub
out
fidiv
jmp
les
fsub
sub
inc
jmp
fnstenv
mov
pop
pop
adc
sub
imul
iret
and
mov
sbb
or
cmp
adc
iret
and
adc
gs
mov
cmp
icebp
cmp
gs
push
jp
out
dec
mov
in
or
cwde
and
cmps
push
sti
popf
add
hlt
lock
imul
inc
push
push
(bad)
or
mov
sbb
test
pusha
int3
test
xor
movs
sub
lods
leave
inc
(bad)
jl
jbe
stc
adc
cmps
fisttp
dec
xor
mov
aaa
push
and
call
sbb
xchg
xor
(bad)
sbb
fcom
or
pop
enter
fdivr
loopne
call
mov
push
loop
jmp
cmp
ds
je
lea
pop
push
mov
mov
jmp
jno
stos
ins
inc
mov
jecxz
and
dec
jb
jbe
fs
(bad)
pop
imul
xlat
adc
lock
xor
mov
test
iret
mov
ret
adc
fsubr
leave
add
popa
push
push
movs
xor
fidiv
cmps
aam
mov
sub
cmp
jl
mov
dec
or
xor
pop
ror
ret
mov
mov
or
ds
int3
pop
pop
repnz
push
std
addr16
push
jg
jb
add
neg
call
retf
cmp
jecxz
pop
loop
cwde
add
or
jno
cmps
test
xchg
outs
loopne
pop
ss
jns
and
mov
xchg
pop
lds
hlt
aam
in
sub
xor
sbb
mov
sbb
dec
js
adc
push
push
(bad)
aam
aad
dec
(bad)
data16
sub
out
cmp
or
test
mov
mov
cmp
sub
das
loope
push
das
in
push
scas
call
gs
mov
sub
xchg
cmp
push
and
popf
scas
jae
push
in
mov
jno
jne
push
cmp
add
leave
pop
(bad)
(bad)
fcmovne
or
scas
adc
dec
mov
test
popf
jae
adc
pusha
jge
add
jle
adc
sbb
cmc
rep
jmp
dec
push
nop
sub
pop
adc
lahf
add
sahf
pusha
sbb
pop
xor
push
pop
or
shl
xchg
cmc
add
pop
or
mov
mov
es
call
jns
jb
push
pop
js
shr
pushf
mov
sbb
stc
mov
mov
(bad)
div
jmp
das
and
(bad)
fsub
(bad)
cli
test
fcomp
das
ja
movs
xor
fisubr
daa
jo
dec
add
xor
fistp
shr
ficomp
jmp
ds
int
cmp
add
cli
push
in
bound
xchg
jmp
and
stos
(bad)
xchg
mov
sub
sti
push
sbb
dec
out
aad
std
rol
cld
push
mov
fcomi
sbb
push
inc
test
rcl
imul
jmp
les
xlat
dec
ficom
mov
fcmovne
fmul
mov
shr
movs
int3
mul
arpl
fbld
adc
xor
xchg
and
jbe
push
cmps
mov
(bad)
out
cmc
cmp
add
retf
icebp
dec
fcomp
shr
lods
dec
push
pop
dec
fsubr
push
mov
gs
mov
mov
test
mov
inc
scas
stos
cmp
rcl
mov
adc
pop
jmp
sahf
lahf
in
das
add
pop
xchg
mov
movs
pop
mov
xor
or
aad
scas
jae
pop
push
add
mov
or
inc
scas
pop
mov
sbb
xchg
xchg
aaa
daa
pop
ds
sti
cmp
call
dec
mov
or
sbb
repnz
push
je
add
stos
mov
jmp
outs
in
fmul
ss
dec
jbe
js
data16
into
loope
mov
push
fisttp
cmp
inc
jmp
and
repz
sub
jbe
int3
les
and
jl
retf
mov
mov
or
add
sar
pop
(bad)
jmp
mov
jbe
sub
jbe
jl
adc
call
push
adc
jnp
mov
int
jecxz
pop
jge
or
and
mov
mov
push
fdivr
nop
jno
add
jl
ja
sbb
call
ins
sbb
xor
out
sahf
ins
dec
repz
imul
pop
lods
outs
mov
scas
dec
call
cli
push
(bad)
scas
(bad)
hlt
out
xor
pop
mov
sub
mov
adc
aam
push
shl
cmc
adc
or
adc
cmp
dec
pop
mov
sbb
mov
or
mov
js
and
gs
gs
xor
shl
mov
stos
ins
add
mov
sub
xchg
cmp
clc
out
xchg
inc
addr16
scas
mov
(bad)
sub
sub
cmps
adc
and
dec
mov
cmp
test
mov
or
cmp
mov
mov
pop
dec
cwde
ja
mov
adc
pusha
loopne
cmp
inc
mov
jnp
ret
pop
fist
je
enter
dec
pop
mov
push
jb
and
dec
int3
xchg
cmps
inc
fist
mov
in
jae
scas
mov
(bad)
xchg
mov
jbe
and
jo
icebp
aad
movs
dec
js
add
xchg
data16
or
jmp
scas
(bad)
ins
inc
ret
mov
cdq
(bad)
repnz
clc
shl
icebp
pop
adc
mov
push
rcr
into
dec
sar
out
sub
or
mov
addr16
cli
mov
sti
in
shr
mov
cmc
adc
mov
push
cmc
sbb
ficom
(bad)
mov
or
mov
in
fcom
rol
scas
jmp
inc
fs
movs
xchg
sahf
cmp
or
inc
mov
cmp
or
mov
sbb
jl
out
gs
xchg
outs
sub
aaa
lahf
(bad)
aad
fld
imul
stos
and
es
inc
jno
fdiv
loope
inc
mov
ficomp
jbe
or
inc
add
adc
(bad)
sub
in
and
and
adc
test
mov
daa
mov
lea
dec
sahf
cmp
fcomp
mov
push
xchg
push
les
repz
mov
cmp
jb
lods
jae
dec
into
test
ret
pop
push
mov
jb
shl
inc
bound
into
ror
cwde
mov
pop
(bad)
int3
outs
cmp
pop
mov
es
les
in
adc
pop
(bad)
fnstenv
repnz
jne
or
jbe
push
(bad)
in
sbb
int
dec
imul
jmp
cli
push
fistp
scas
dec
aaa
cdq
call
and
cmps
adc
sbb
dec
dec
test
dec
pusha
and
leave
and
jge
idiv
stos
bound
inc
jo
xor
cvtps2pi
aaa
das
dec
sar
sbb
cli
and
fbstp
sub
adc
cmp
cmp
xor
add
lods
(bad)
je
(bad)
cmp
mov
fstp
inc
push
repnz
loop
xchg
aas
pop
std
rcl
ficomp
jle
add
ret
xor
loope
call
cmps
inc
mov
js
push
shl
pusha
(bad)
mov
(bad)
push
push
mov
scas
push
ror
(bad)
repz
xchg
mov
sub
repnz
movs
dec
outs
cwde
xor
pop
shr
fild
jp
sbb
fsubr
inc
out
mov
(bad)
cwde
adc
adc
ret
mov
cmps
adc
jo
in
imul
(bad)
or
jns
jmp
mov
cdq
movs
pop
fdivr
mov
scas
das
scas
sahf
(bad)
jbe
cmp
and
mov
jl
inc
xchg
adc
lods
sbb
fnsave
enter
rep
icebp
mov
cmp
mov
stos
and
lods
ins
adc
repnz
pop
xor
or
jg
test
pop
cmp
dec
int3
inc
dec
mov
add
ss
pusha
lods
add
sbb
jmp
add
sub
push
movs
push
mov
jl
int
dec
retf
(bad)
repz
push
push
or
movs
es
lds
pusha
jecxz
mov
outs
xor
cmp
stos
leave
add
pop
sbb
xor
or
push
jge
mov
pop
into
das
jmp
rol
into
push
push
or
lock
imul
imul
popa
sub
in
icebp
mov
add
out
aas
and
dec
daa
shl
mov
xor
loope
and
cdq
mov
icebp
pop
in
add
enter
int
sub
xchg
inc
test
les
xchg
fsubr
out
xchg
inc
adc
mov
inc
cmp
fadd
and
xlat
jnp
stc
fcmovne
jbe
sub
call
push
xchg
and
mov
or
xchg
fidiv
mov
sub
outs
pushf
and
xchg
add
sbb
sub
(bad)
imul
addr16
inc
ins
ja
lock
pop
mov
repz
jno
scas
int3
or
adc
mov
sub
mov
loope
popf
inc
jmp
sahf
mov
push
(bad)
mov
test
arpl
arpl
not
movs
cmp
rol
add
push
pop
inc
sbb
iret
(bad)
mov
stos
mov
cmc
xor
ret
into
pop
push
pop
mov
or
dec
lea
pop
xlat
in
pusha
fstp
into
sar
je
pop
repnz
jmp
call
jp
seto
fist
and
and
dec
inc
in
xchg
popf
push
enter
push
je
push
mov
jno
fild
idiv
fisttp
lods
or
loop
mov
stc
and
and
add
jl
rcr
cdq
jecxz
outs
out
jp
dec
inc
push
paddusb
popf
push
aam
sbb
(bad)
stos
xchg
into
fwait
mov
pop
mov
inc
icebp
ins
in
xor
popf
test
or
mov
adc
ret
in
out
fld
mov
jae
sbb
mov
test
mov
push
mov
sub
xchg
dec
loop
outs
mov
push
div
cmp
jmp
retf
test
xor
data16
out
data16
add
mov
jmp
mov
fwait
sbb
mov
scas
aam
pop
jo
std
inc
loopne
adc
jnp
sub
lds
jecxz
pop
(bad)
or
add
push
add
imul
mov
jg
cmps
cmp
ss
sahf
gs
std
mov
(bad)
sbb
mov
repnz
rcl
mov
popf
outs
sahf
mov
xor
cmp
dec
and
sti
repz
repnz
jbe
ret
sbb
sub
jmp
test
cmps
or
scas
or
dec
or
mov
mov
mov
inc
cmc
in
cdq
push
pushf
xchg
cmp
mov
ds
dec
inc
sbb
xor
ja
das
retf
push
(bad)
stos
xchg
in
lods
ret
aad
jmp
(bad)
xchg
popa
jmp
dec
and
fsubr
jo
inc
sbb
jmp
cli
ret
fyl2xp1
leave
call
mov
cmp
ins
imul
aas
mov
add
mov
xchg
sbb
pusha
push
std
into
jl
cli
and
add
mov
and
popa
xor
pushf
popa
lods
jp
clc
icebp
loope
das
ja
ins
inc
adc
jecxz
sub
jl
pop
jg
fs
popf
icebp
daa
sbb
pushf
xchg
push
adc
mov
lds
inc
jle
jge
jmp
iret
bound
pop
jno
out
jge
je
stos
mov
jb
fucomip
xchg
aad
clc
pop
adc
mov
test
jg
lods
jmp
sub
into
data16
ret
dec
lods
or
push
push
push
mov
lods
loop
or
push
push
jle
pop
lds
xchg
mov
rcr
popa
inc
ds
dec
mov
les
inc
xchg
dec
les
imul
jge
xchg
xchg
push
fcmovnb
les
lea
add
movs
pop
mov
cmp
inc
lea
inc
cs
mov
jb
out
stos
lods
pop
cmc
push
pusha
mov
pusha
or
out
int
out
xchg
out
(bad)
jl
stos
sbb
or
jmp
push
cmp
lock
cdq
retf
mov
loopne
sub
imul
adc
daa
adc
jmp
pop
jae
and
in
push
xchg
or
(bad)
(bad)
addr16
cld
and
cmps
loop
in
mov
sbb
xchg
mov
sar
shl
aam
das
rol
push
xchg
arpl
fldenv
inc
mov
dec
mov
ret
fimul
push
push
sar
cdq
jbe
or
add
mov
or
mov
pop
push
mov
ror
sbb
xchg
loopne
hlt
xchg
outs
mov
xchg
hlt
mov
sbb
pushf
int3
pop
jae
inc
ds
cdq
xor
shl
dec
xchg
(bad)
jae
out
je
jne
sbb
aaa
popf
xchg
pop
mov
inc
xor
nop
sbb
das
sub
pop
jb
icebp
xchg
mov
pop
rcr
xchg
pushf
fnstsw
rcr
nop
adc
cmp
sub
dec
inc
or
(bad)
repnz
push
push
mov
adc
xchg
mov
sub
sub
mov
int3
scas
and
(bad)
call
rcl
jno
adc
jmp
cmp
cmp
cmp
push
bound
push
fcmovbe
mov
xchg
nop
imul
adc
push
lods
pop
test
out
and
ds
test
or
pop
js
stos
scas
add
ror
(bad)
outs
inc
shr
push
test
adc
jae
in
movs
icebp
jge
imul
outs
scas
mov
test
iret
sub
mov
push
inc
sti
xor
std
jnp
test
mov
ja
xor
mov
mov
stos
push
ror
call
out
sub
fmul
icebp
cmp
loopne
inc
dec
push
dec
(bad)
push
popf
jmp
out
movs
jne
mov
lahf
push
inc
shl
les
mov
out
mov
iret
int3
(bad)
push
mov
xor
pop
iret
mov
inc
clc
add
add
mov
mov
fstp
or
fist
adc
xor
push
(bad)
js
inc
mov
mov
xchg
fnstenv
pop
(bad)
mov
cmps
shl
adc
je
jecxz
nop
out
fst
add
fild
xlat
(bad)
push
mov
mov
out
addr16
xchg
fdivr
inc
or
jg
inc
push
int
popf
lods
mov
jge
loope
push
mov
xor
call
pop
sbb
fisubr
into
push
lds
repz
jne
jnp
dec
cmp
dec
(bad)
xor
add
in
arpl
lods
idiv
rol
jnp
popf
fisub
mov
and
or
and
(bad)
fs
cmp
pop
cmp
xor
aaa
xchg
push
dec
sub
inc
call
mov
xor
xchg
jne
sbb
out
or
lods
cmp
xor
sub
fcomp
sahf
jae
jmp
pop
jnp
mov
xchg
shr
fbstp
inc
es
inc
sub
jns
jl
loopne
xchg
xchg
mov
mov
sbb
push
pop
adc
mov
xchg
dec
imul
repz
jmp
mov
cli
sbb
and
je
xchg
mov
es
mov
mov
gs
mov
and
pop
data16
popf
pop
xchg
mov
jns
xchg
sub
add
call
outs
imul
stos
rol
lock
cmp
test
pop
outs
mov
mov
pop
mov
jge
xchg
or
clc
test
cld
jmp
bound
jb
cmp
mov
test
in
shl
adc
sub
adc
sbb
ins
mov
js
mov
call
add
and
cmp
shl
push
gs
test
int3
ret
dec
mov
sar
ins
call
and
ja
push
aas
sub
xchg
xchg
sub
call
push
sahf
push
push
xlat
nop
inc
push
adc
dec
ins
nop
aas
inc
fwait
ret
mov
int3
ins
ret
dec
inc
or
sub
sbb
pop
add
leave
lods
mov
(bad)
sub
stos
mov
cs
dec
mov
retf
cli
mov
sbb
shl
rol
mov
add
jle
dec
mov
shl
xchg
cmps
retf
mov
push
mov
lock
mov
mov
xchg
ret
gs
rcr
aaa
aad
xor
bound
or
pop
or
push
pop
cmp
test
mov
inc
pop
sub
sbb
dec
mov
cmp
pushf
inc
mov
adc
das
in
fisttp
mov
popf
iret
imul
(bad)
call
les
mov
js
mov
fs
rcr
push
mov
inc
enter
jge
mov
stos
mov
cmp
sbb
xchg
clc
add
in
fnstsw
xor
jb
in
mov
cld
setne
ret
sbb
cmps
jmp
ss
leave
add
pop
scas
inc
xchg
mov
xor
dec
pusha
and
ins
aam
jmp
push
dec
cmp
sub
(bad)
fiadd
ror
jmp
cwde
js
adc
inc
ins
lahf
daa
cdq
add
pop
(bad)
push
not
loop
imul
pop
test
mov
cwde
xchg
and
jnp
sbb
or
out
fisubr
nop
cld
cmp
xchg
(bad)
scas
push
cmp
adc
das
push
or
dec
cmc
lods
push
mov
lods
loop
es
pop
jns
repz
shl
test
aam
jbe
xchg
call
sub
ins
mov
mul
retf
inc
fucomip
enter
shr
jo
(bad)
push
dec
and
sbb
sub
push
xchg
sub
sub
cmp
pop
stc
inc
fisttp
repz
or
out
inc
mov
sbb
xor
lds
add
jae
movs
push
sar
mov
jmp
lods
xor
xchg
xor
pop
sub
ins
mov
jmp
fsub
and
repnz
push
inc
sbb
jmp
sub
dec
into
rcr
and
inc
sub
jb
fbstp
jecxz
pop
or
mov
and
mov
push
dec
add
sub
inc
int3
test
inc
aam
jmp
sub
dec
mov
jecxz
or
jle
cmp
jmp
in
repnz
jmp
sub
test
fs
pop
mov
inc
mov
shr
mov
test
cmps
test
pop
loop
movs
std
les
pop
dec
jecxz
test
ror
xor
pop
dec
sbb
mov
loop
add
pop
mov
add
loop
mov
jno
sub
test
dec
das
shl
aad
sbb
xlat
out
pushf
out
cli
fsub
mov
add
push
sbb
jl
out
mov
sbb
out
loop
xor
aas
xchg
mov
pop
or
push
(bad)
jmp
fdivr
push
(bad)
daa
pop
stc
test
ret
mov
mov
ret
jmp
adc
(bad)
shl
sbb
push
inc
js
mov
or
into
cmp
int
rol
inc
and
dec
mov
daa
outs
sahf
jne
scas
inc
fistp
test
sti
jge
lods
icebp
popa
or
xlat
int
cwde
adc
or
movs
aaa
mov
mov
iret
cmp
stos
loope
xchg
jecxz
ds
sub
in
mov
cs
mov
mov
jns
adc
inc
ss
xchg
xchg
sub
push
jmp
xor
add
jmp
jmp
idiv
xchg
cmp
ret
movs
or
into
cld
fldl2t
dec
shl
(bad)
dec
xor
push
inc
xor
outs
and
(bad)
adc
pushf
ja
ins
xchg
jge
cmps
fadd
mov
div
fistp
out
daa
pop
xchg
dec
cmp
ficom
into
xchg
ins
faddp
stos
pop
jne
xchg
ret
adc
gs
icebp
dec
and
loop
hlt
in
mov
sub
lods
push
int
fist
mov
mov
pop
add
fbstp
call
inc
xor
in
adc
xchg
push
xchg
out
fstp
mov
daa
adc
in
and
or
jl
cmp
ins
sahf
dec
add
dec
xor
test
movs
xchg
or
pop
mov
sbb
cmp
enter
clc
add
ret
sub
xchg
das
dec
leave
fiadd
in
mov
fdivp
adc
mov
std
int3
mov
cmc
or
seta
jge
fnstcw
(bad)
jns
mov
lods
and
sbb
ss
mov
or
shl
clc
add
pop
retf
adc
retf
push
les
loope
push
cs
pop
jns
mov
ss
arpl
jnp
(bad)
shr
iret
fcmovnu
mov
push
js
xor
js
in
(bad)
jecxz
out
scas
inc
ror
push
test
inc
daa
sub
inc
push
ret
shl
ja
xchg
lock
stos
xor
stos
shl
fstp
sti
in
out
cmc
or
push
mov
jns
lods
pushf
jmp
imul
adc
rol
cmp
jecxz
sbb
jg
mov
outs
xchg
push
xchg
ja
dec
int
outs
out
xchg
aaa
repnz
or
mov
daa
push
add
mov
mov
and
fnstenv
mov
cwde
jmp
sbb
jb
cmc
lds
mov
dec
adc
test
or
lea
ret
push
call
popf
jnp
mov
push
dec
inc
(bad)
sbb
test
test
test
mov
push
sub
jae
mov
xor
mov
ins
dec
lahf
lods
mov
mov
sub
iret
lock
push
xor
rcl
jge
jmp
mov
call
dec
push
xor
test
jno
add
dec
pushf
xchg
mov
test
ins
movs
sti
adc
mov
nop
dec
mov
std
movs
daa
pop
retf
sub
sbb
or
push
and
sti
adc
fcmovnbe
fisttp
ss
daa
push
jl
cs
in
lods
push
outs
mov
jno
pushf
(bad)
hlt
fiadd
(bad)
test
mov
sbb
lea
(bad)
dec
push
add
sub
into
cs
mov
and
adc
lods
cmp
xor
sbb
pop
dec
and
sbb
data16
mov
loopne
xor
out
mov
sub
test
lahf
call
push
xchg
push
or
ror
or
lahf
ret
leave
mov
pop
push
icebp
mov
inc
push
ror
jl
ins
(bad)
push
mov
jl
fucomi
iret
adc
fmul
mov
out
inc
ror
jnp
dec
pushf
fisubr
pop
and
test
ds
xchg
or
stc
mov
jle
(bad)
cmp
aad
and
pop
push
jl
jbe
jbe
jl
mov
in
int
ror
dec
das
imul
(bad)
leave
xchg
lock
pop
pop
sbb
mov
jle
mov
sub
xchg
loop
and
mov
sub
cmp
mov
inc
mov
jo
ins
cli
idiv
pmullw
xchg
adc
cld
xor
out
inc
xchg
lahf
sar
dec
add
ret
je
out
xor
je
push
cmps
sbb
out
pop
xor
fidiv
mov
mov
addr16
xchg
mov
mov
xchg
mov
fidivr
in
jno
dec
inc
rcl
or
adc
ins
mov
lods
push
mov
int
and
xlat
xchg
lea
mov
mov
push
jmp
pop
mov
or
mov
(bad)
imul
push
mov
inc
call
lds
xchg
repz
xchg
jno
lahf
pushf
pop
push
nop
imul
cmps
pop
in
std
push
mov
aas
xchg
xchg
lock
popa
adc
dec
dec
in
or
mov
mov
aas
call
repnz
outs
sbb
mov
stos
push
add
or
fadd
pop
mov
cmp
mov
les
cmp
daa
nop
mov
pusha
(bad)
or
pop
pop
xor
and
cmp
cmc
xor
and
scas
jne
add
push
fmul
mov
mov
lods
mov
pop
out
fbstp
lea
test
das
dec
mov
sti
das
outs
test
test
adc
dec
ret
mov
jb
data16
mov
push
scas
scas
add
sti
ror
jno
sahf
inc
mov
loope
adc
dec
pop
xlat
retf
pusha
ins
and
jmp
imul
mov
mov
arpl
dec
popa
sti
push
ficomp
das
cmp
and
add
fucomip
or
push
mov
daa
je
and
jge
dec
div
add
out
ja
pop
(bad)
mov
ins
xchg
out
xor
(bad)
cmp
stc
and
mov
xchg
fs
movd
add
pop
dec
mov
leave
iret
stos
shl
int3
lods
push
sar
push
shl
xchg
adc
jmp
imul
fwait
pop
inc
les
pop
test
in
rcl
sub
xor
cmps
cwde
inc
dec
sbb
xchg
xor
sbb
sbb
lods
dec
push
outs
sahf
dec
dec
je
popa
dec
mov
and
inc
ins
pop
ret
pop
or
and
jp
aas
out
out
loop
inc
call
int3
mov
stos
cmc
stc
out
js
sbb
xchg
sub
xchg
pop
out
jecxz
neg
dec
and
sub
xor
cmp
sbb
mov
or
call
push
push
inc
sbb
(bad)
aad
shr
test
out
mov
xor
xchg
mov
mov
mov
loop
in
sbb
fwait
jge
mov
mov
test
ins
ret
mov
loop
or
cmp
xlat
imul
scas
push
retf
rcl
push
lds
cs
cwde
scas
jnp
and
pop
adc
mov
neg
mov
and
je
push
mov
sbb
(bad)
mov
repz
(bad)
stos
cmps
movs
imul
clc
fwait
sub
in
or
dec
and
test
jge
jle
rol
ror
nop
adc
adc
xlat
inc
jae
(bad)
jno
and
bound
inc
cli
fistp
push
(bad)
ja
call
adc
popf
int3
retf
loope
cli
mov
shl
cmp
les
or
sbb
xor
jbe
cmp
mov
mov
cmp
mov
mov
fnstsw
sar
int
movs
pop
adc
adc
xchg
jae
mov
jae
inc
iret
int3
into
sub
(bad)
pop
inc
xchg
or
ins
cmp
lds
jmp
push
fnstsw
(bad)
scas
pop
jns
jmp
xor
xor
sub
xor
sbb
inc
pusha
jg
in
clc
mov
loopne
(bad)
call
stos
hlt
icebp
mov
sbb
lahf
xchg
cli
aam
hlt
test
mov
jp
and
repnz
out
jecxz
bound
adc
js
icebp
adc
sti
mov
inc
(bad)
es
sub
sub
mov
inc
pop
mov
dec
pop
outs
xor
xor
retf
pop
test
sub
cmp
push
ss
inc
adc
loop
mov
or
retf
repz
dec
iret
enter
mov
jge
pop
lods
push
popa
dec
sub
jmp
mov
jge
scas
push
je
dec
retf
call
mov
ret
lea
cs
sbb
sub
mov
mov
and
iret
push
and
fisub
push
shr
mov
cmp
test
clc
lods
mov
mov
stos
clc
das
int3
jbe
movs
mov
cmc
aam
call
and
arpl
xchg
lods
test
jecxz
sub
js
in
or
and
test
push
cmp
push
dec
daa
lahf
test
sbb
inc
push
mov
in
push
movs
or
jge
pusha
cmp
ds
outs
mov
aas
pop
iret
retf
je
repnz
push
jle
repz
mov
sub
push
stos
gs
dec
in
aam
pop
xchg
pop
xchg
les
(bad)
fwait
cs
stos
cdq
xchg
and
(bad)
cdq
dec
call
or
stos
(bad)
aaa
sub
imul
imul
arpl
inc
loope
inc
sub
addr16
ror
xchg
scas
or
test
std
mov
jb
push
mov
mov
clc
adc
ss
sub
inc
xchg
loop
push
in
dec
push
hlt
imul
xchg
fsubr
outs
retf
and
xor
adc
sub
stos
inc
mov
xor
cmp
mov
jne
inc
aam
sub
xor
pop
fild
push
jp
add
out
add
jecxz
enter
rcr
jmp
lds
sbb
std
push
repnz
out
shl
pop
js
push
sti
adc
dec
sti
dec
sub
neg
std
and
call
mov
cli
scas
mov
mov
pandn
aas
and
outs
or
popa
int
sahf
iret
mov
(bad)
xor
(bad)
in
stos
mov
mov
ficomp
jp
mov
xlat
mov
add
test
add
mov
cwde
pop
addr16
cmp
jl
out
arpl
sbb
cmp
jae
mul
xor
imul
int3
loopne
idiv
into
dec
xchg
mov
adc
sub
pop
adc
cmp
mov
mov
out
std
not
enter
inc
xor
pushf
and
inc
and
mov
xlat
cmp
mov
jnp
outs
adc
and
jns
pop
or
inc
rcl
pop
jb
cld
mov
fdivr
int3
push
sub
repz
iret
stos
cmp
mov
dec
inc
imul
psubusw
push
fld
fldz
seta
in
mov
dec
jb
loope
mov
cmp
in
jo
or
mov
js
inc
add
add
cdq
ret
mov
ret
jmp
sar
jmp
pop
xchg
sbb
xlat
(bad)
aam
(bad)
call
out
aad
mov
mov
xchg
stos
jnp
dec
mov
retf
push
mov
imul
cmps
(bad)
(bad)
push
adc
bndstx
mov
mov
cmp
gs
jbe
sub
(bad)
shl
xor
(bad)
fild
adc
lds
jb
jp
aas
mov
bound
inc
pop
inc
in
(bad)
jmp
loop
jmp
imul
retf
fadd
mov
pop
pop
aas
inc
adc
push
dec
xchg
add
pop
sbb
push
aas
loope
test
clc
aam
push
ret
neg
xor
dec
lods
and
sub
inc
pop
cdq
or
sub
xor
es
push
out
cmp
div
push
not
or
add
shr
frstor
test
add
mov
pop
mov
repz
loop
fsub
out
test
sbb
(bad)
ins
pop
xor
(bad)
aad
sub
inc
out
pop
(bad)
stc
les
sbb
inc
call
(bad)
add
dec
inc
jns
mov
mov
mov
int
xchg
(bad)
push
sbb
test
sub
lock
push
in
inc
mov
lahf
ss
retf
dec
movs
loope
dec
mov
cmp
in
pop
add
jno
add
dec
or
jle
neg
or
sbb
ds
es
cmc
push
stos
xor
add
jmp
or
xor
icebp
push
sub
movs
push
xchg
push
addr16
and
(bad)
ins
ror
adc
test
es
push
daa
push
pop
cmp
mov
jmp
fstp
jp
out
das
push
xchg
cmp
es
add
push
mov
xchg
push
jmp
out
xor
das
and
mov
inc
mov
cmps
std
pusha
or
mov
(bad)
outs
sbb
pop
(bad)
mov
test
cmp
cmp
in
push
mov
scas
sub
repnz
add
das
dec
js
pop
dec
dec
pusha
inc
sub
lahf
and
mov
mov
jo
aaa
cmps
cmp
dec
or
xor
adc
xchg
pop
out
add
xor
addr16
xor
xchg
jge
lock
pop
clc
not
ret
test
mov
mov
fwait
out
stos
lea
inc
leave
(bad)
jmp
push
leavew
inc
lods
fsub
jne
rol
mov
sub
data16
sub
je
ins
in
daa
jno
lds
jle
enter
(bad)
cli
imul
sub
and
(bad)
mov
sbb
and
dec
cmps
or
sar
shr
popf
jge
daa
add
js
pop
and
sub
and
ins
loopne
test
and
dec
ja
push
mov
push
sbb
daa
es
jge
(bad)
xchg
push
cmps
push
cli
fwait
call
out
inc
mov
jge
cmps
stc
fsub
jne
in
nop
mov
std
jecxz
test
cs
or
push
fdivr
jmp
arpl
movs
jns
sub
sbb
add
dec
loopne
shl
bound
jnp
mov
xor
mov
leave
int
lea
lahf
fdiv
mov
adc
or
(bad)
repz
xchg
popa
add
mov
and
scas
retf
cmp
int
sbb
scas
xlat
scas
sub
movs
mov
pushf
dec
adc
fs
popa
popf
xchg
sbb
bound
leave
bound
leave
push
lgs
sbb
mov
(bad)
sti
mov
push
sbb
ffree
call
sbb
ja
into
sbb
inc
cmp
loop
cmps
in
mov
mov
push
or
push
hlt
mov
jg
mov
ds
push
mov
xchg
pop
shld
push
add
inc
in
test
lods
ret
and
mov
push
pop
out
pusha
jge
std
sbb
cmp
xor
(bad)
push
or
dec
xchg
push
daa
sub
mov
rcl
cmp
ins
cmp
and
xchg
stos
or
or
sar
jmp
jg
push
popf
outs
inc
aad
fsubr
int
sub
sub
(bad)
out
xor
jbe
and
(bad)
lock
out
sti
loop
mov
jno
(bad)
in
test
or
out
push
xchg
jae
add
mov
pop
mov
push
imul
leave
jmp
std
push
mul
movs
(bad)
pop
inc
imul
or
jno
fidiv
or
int
xor
push
mul
pop
fiadd
xchg
loope
imul
add
cmps
arpl
test
sbb
push
je
je
sbb
frstor
jge
idiv
mov
adc
pop
jne
adc
inc
mov
mov
jnp
pushf
xor
stc
mov
mov
enter
outs
ins
daa
jl
inc
mul
mov
xchg
push
mov
loop
mov
std
dec
push
xor
jns
popf
loopne
xchg
mov
push
xchg
movs
stc
add
ins
push
or
add
sbb
mov
jne
sbb
jmp
movs
imul
mov
adc
aaa
clc
sahf
push
shl
stos
aaa
movs
xchg
bound
pop
mov
pusha
add
adc
fcomp
jl
dec
push
xchg
jbe
addr16
add
out
jo
sub
fistp
pop
into
inc
add
add
fsubr
frstor
and
inc
bound
sub
test
jns
mov
and
rcl
jb
sahf
push
repnz
daa
xchg
out
mov
mov
mov
inc
and
mov
es
adc
les
arpl
out
loope
retf
leave
into
cmp
std
xchg
dec
rcl
mov
push
stc
idiv
pop
push
cmps
dec
movs
arpl
xlat
in
jp
pop
pop
jmp
fs
inc
mov
push
das
lods
add
call
jne
sti
call
add
jge
lods
pop
jmp
push
cli
sbb
push
mov
xor
popa
jg
jb
xlat
shl
jae
test
pop
pop
fldenv
shl
fcom
pop
clc
sub
or
ja
adc
add
bound
mov
cld
cld
or
call
hlt
or
jl
iret
les
sbb
xor
cmp
loope
xlat
dec
xchg
mov
repnz
arpl
jmp
sbb
bnd
sbb
sbb
jp
(bad)
xchg
add
js
mov
bound
mov
sub
hlt
xor
push
jno
gs
leave
out
das
and
jns
ja
cli
sbb
dec
jno
inc
dec
pop
xchg
test
or
movs
mov
add
(bad)
push
add
sbb
addr16
out
xor
std
and
add
dec
loope
dec
out
sub
cmp
push
jecxz
jnp
dec
mov
push
call
nop
(bad)
popf
aas
std
jne
fild
test
mov
jb
pop
adc
mov
rol
pop
mov
adc
(bad)
jmp
ret
lds
xchg
adc
js
movs
and
bound
hlt
outs
cdq
mov
jno
ret
fadd
pop
mov
lea
outs
or
inc
cwde
adc
mov
mov
jno
dec
push
ss
data16
ret
pop
push
(bad)
lods
scas
jl
pop
movs
dec
arpl
ffree
pop
inc
stos
imul
xchg
jb
add
hlt
cdq
xchg
push
gs
push
jbe
pop
popa
adc
imul
inc
in
lods
mov
mov
stos
(bad)
fild
add
sti
out
shl
mov
or
push
jno
inc
leave
xor
lods
jbe
cwde
dec
adc
pop
fdiv
in
fadd
leave
mov
stos
add
sub
mov
dec
sahf
xchg
outs
xchg
cmp
call
shr
arpl
aas
mov
retf
lock
int3
into
addr16
add
sahf
imul
repz
or
lods
fcomp
clc
sub
call
cdq
call
imul
mov
sbb
push
mov
sub
je
cdq
sub
hlt
sbb
and
cs
sbb
data16
js
pop
mov
loopne
iret
outs
push
and
stos
sbb
mov
cld
test
fistp
dec
xchg
ret
fcom
test
retf
fbstp
ins
pop
jp
xchg
aam
jns
sbb
test
fsub
jae
and
ins
pusha
es
jno
ja
cmps
dec
sbb
adc
xor
imul
movs
retf
and
pop
out
outs
adc
xchg
pushf
cmp
cmp
push
sub
mov
xchg
mov
mov
cmp
push
cmp
rcl
sub
jne
xor
rcr
pop
test
mov
or
mov
jb
int3
cmp
scas
ins
add
les
imul
pop
and
sbb
or
imul
add
xchg
fcmove
xor
ss
jmp
and
sub
imul
jns
mov
push
and
sbb
dec
jg
mov
jno
cmp
icebp
mov
cmp
jmp
imul
test
je
add
mov
and
fs
jae
aad
sub
aad
mov
dec
test
add
outs
ret
dec
(bad)
popa
icebp
adc
(bad)
mov
cdq
xchg
idiv
jns
inc
mov
jmp
inc
inc
movs
pushf
pop
pop
ficomp
outs
or
inc
jp
mov
(bad)
pop
enter
sbb
mov
mov
push
ror
pushf
rcl
outs
sbb
scas
lods
jmp
xlat
sti
sub
inc
mov
mov
fild
or
cs
int3
shl
out
jg
or
adc
scas
mov
push
ret
pop
or
mov
lahf
and
add
das
loopne
mov
mov
iret
aas
mov
repz
aad
pop
sub
xchg
push
gs
and
int3
push
gs
cmp
out
inc
gs
repz
mov
push
sub
mov
out
inc
rcr
les
jnp
in
sub
add
pop
pop
sbb
(bad)
fadd
mov
lock
cmps
pop
xor
fwait
in
fwait
mov
fistp
push
fdiv
jb
pop
mov
jmp
xlat
out
int3
xchg
mov
push
repz
fidivr
dec
mul
test
xchg
mov
js
imul
jecxz
icebp
adc
leave
ror
xchg
jno
xor
ja
adc
mov
emms
rcl
or
mov
mov
loopne
push
mov
rol
cmps
int
(bad)
xchg
aam
mov
(bad)
and
movaps
sahf
dec
mov
sbb
sti
ret
jmp
sbb
repnz
nop
dec
gs
xchg
int3
mov
or
or
mov
data16
or
dec
shr
and
or
mov
jbe
mov
in
int3
repnz
push
retf
add
or
test
xor
jbe
xor
push
mov
jno
aad
xchg
adc
inc
and
vpunpcklqdq
sti
jmp
shl
das
xor
scas
movs
jmp
pop
aas
repz
push
(bad)
out
cmp
and
xor
dec
add
data16
add
sbb
and
push
cli
stos
push
iret
test
pop
mov
rcl
in
jp
jp
cwde
(bad)
js
sub
aas
pop
arpl
ret
repz
ins
pop
mov
add
jb
ja
(bad)
cmp
sbb
rol
cmp
popf
dec
push
cld
cmps
addr16
push
cmp
pop
xchg
shr
aad
sub
add
leave
(bad)
ret
xchg
cmp
mov
dec
adc
pop
cwde
cmp
xor
and
stc
cmp
cmp
dec
add
test
add
nop
int
ficomp
and
lods
cmc
xor
jbe
sti
fidiv
push
mov
leave
sbb
pop
and
outs
and
xor
add
sub
imul
mov
pop
push
or
and
push
sbb
xor
lds
stc
mov
and
aaa
call
mov
adc
jge
in
push
fimul
jle
stos
inc
mov
sti
call
or
push
or
mov
cli
mov
xchg
push
mov
cmp
jnp
stc
sbb
enter
push
into
jae
pop
dec
and
popf
in
lods
mov
sub
jb
cld
std
jmp
retf
mov
dec
lods
push
(bad)
push
in
mov
jbe
and
aam
ss
loopne
mov
cmp
ins
test
dec
sbb
jecxz
int
shl
sub
pop
call
fcomp
xchg
dec
pusha
mov
jb
push
ret
jbe
arpl
div
mov
and
lds
lock
push
outs
add
mov
mov
nop
pushf
sar
pop
bound
lahf
popa
jmp
pop
mov
std
add
in
or
dec
and
leave
popa
repnz
jp
xchg
(bad)
out
mov
leave
fisubr
xor
mov
jnp
add
xor
xor
pop
call
test
add
add
pop
movs
fs
sbb
cdq
cmp
scas
sub
cmc
cmp
mov
imul
adc
dec
rol
enter
fsub
mov
mov
add
dec
ret
cwde
(bad)
call
loope
test
adc
test
sbb
xchg
or
cld
mov
pop
mov
or
jle
fwait
pop
lock
sar
jecxz
mov
lock
mov
push
arpl
inc
popa
loop
fwait
pop
xor
sub
pop
aad
sbb
mov
jbe
push
or
jae
adc
int3
ja
and
repz
cmp
and
xor
add
scas
js
(bad)
movs
push
pop
or
cmps
test
repz
and
or
jb
add
out
jge
mov
pop
aad
mov
loop
sbb
or
add
scas
xchg
sub
sbb
lea
jp
loope
lea
pop
es
leave
js
xor
in
cmps
or
outs
cmps
adc
in
xchg
mov
push
loop
pop
ret
mov
inc
das
stc
addr16
fucomp
mov
cmps
aaa
adc
mov
mov
out
jb
mov
sub
icebp
aam
jge
and
xor
xchg
aad
pushf
js
sbb
xlat
das
adc
loop
scas
loopne
rcl
inc
cwde
stos
sbb
repnz
les
adc
pop
jmp
cwde
cmp
outs
(bad)
xor
call
cmp
dec
sahf
test
pop
jae
inc
aad
jmp
or
adc
movs
fdivr
xor
push
pop
xchg
rcl
cmp
inc
mov
daa
mov
test
jae
stos
pop
sahf
adc
push
push
out
push
imul
jns
add
cmps
stos
sub
gs
and
add
mov
mov
adc
ins
in
dec
mul
xchg
mov
in
hlt
(bad)
call
sbb
rol
cmp
cmps
repz
mov
add
ss
cwde
and
jmp
sub
xchg
or
fs
adc
arpl
mov
repnz
test
retf
popa
inc
xor
test
int3
cli
cld
sbb
and
jno
retf
popa
(bad)
(bad)
jle
ffree
xchg
iret
out
jle
sar
pop
mov
fld
or
out
mov
mov
pusha
push
xor
jl
stc
xor
push
xchg
out
call
mov
jmp
cmp
push
repz
sahf
sub
fxch
outs
mov
push
test
(bad)
je
fwait
or
push
sub
xchg
cmps
mov
inc
dec
lds
mov
add
cmp
mov
mov
loopne
ret
aaa
clc
movs
xor
(bad)
sbb
pop
mov
xor
or
fsubr
mov
and
mov
add
sub
push
fwait
test
lock
adc
(bad)
mov
stos
mov
(bad)
xor
push
scas
push
fsubrp
fisubr
inc
push
fs
fsub
mov
mov
pushf
out
or
out
cmp
(bad)
(bad)
dec
dec
out
adc
sub
add
dec
std
(bad)
fdiv
mov
fild
cdq
inc
leave
adc
mov
cmc
clc
daa
je
mov
dec
pusha
pop
ins
movs
sti
outs
ret
xchg
ror
ds
ffree
dec
daa
not
xor
lods
pushf
std
or
or
jno
int
add
jne
sub
mov
add
add
aas
les
out
(bad)
mov
pandn
iret
sbb
or
cmps
jbe
mov
in
and
xchg
inc
inc
test
cli
ins
in
sub
inc
xor
and
lahf
inc
jecxz
push
sbb
js
push
push
mov
push
imul
cmp
dec
jns
iret
bound
ret
mov
xchg
sub
xchg
lods
mov
mov
and
pop
(bad)
jmp
mov
daa
mov
xchg
scas
stc
cdq
dec
inc
jp
aas
push
shl
fistp
fisttp
xor
push
outs
cmp
jg
(bad)
mov
sub
push
pusha
sub
dec
xlat
cs
or
int3
lock
mov
push
xchg
add
mov
enter
jmp
in
jb
je
shl
(bad)
jl
sahf
out
pop
nop
adc
push
lock
nop
es
movs
and
push
and
push
push
cld
pop
and
push
dec
jno
push
dec
ss
sti
push
xor
push
dec
enter
dec
loop
mov
pop
out
push
mov
adc
mov
xor
inc
push
lods
sub
sub
mov
inc
outs
cs
push
out
sbb
adc
xchg
xor
and
loope
iret
leave
not
div
inc
mov
mov
aad
cmp
mov
add
dec
mov
cmp
shr
add
push
inc
push
mov
add
and
sbb
out
xchg
and
jge
cmps
xor
stos
out
xor
pop
icebp
xchg
ins
fst
(bad)
loope
mov
movs
xor
cmps
mov
jmp
mov
leave
xchg
jg
mov
and
retf
jae
adc
scas
jns
sub
arpl
dec
cmc
loope
loopne
mov
test
jp
data16
iret
xor
sbb
mov
popa
xor
out
es
movs
mov
iret
pop
cmc
cld
rcl
mov
call
add
mov
add
sub
adc
push
xor
and
iret
pop
out
ror
ret
int3
xor
sub
nop
sbb
jmp
inc
xor
adc
ins
jbe
mov
or
(bad)
pop
shr
pop
test
stc
inc
aam
ret
ret
in
adc
dec
jne
fwait
jmp
sahf
out
sar
cmp
les
mov
int
jle
nop
cmp
add
push
mov
and
imul
push
xchg
nop
jge
js
cs
pop
clc
(bad)
mov
int3
jle
push
out
rcr
stos
pop
xor
imul
(bad)
les
hlt
mov
mov
stos
push
jge
and
jb
add
jmp
imul
xchg
and
mov
mov
pop
dec
jp
sub
test
pop
jno
hlt
stos
(bad)
test
sbb
lahf
pop
dec
movs
mov
mov
push
pop
mov
inc
not
adc
loope
and
(bad)
call
inc
movs
arpl
ret
cwde
out
pop
aad
push
cwde
mov
mov
xchg
or
jmp
xor
dec
xchg
and
xchg
push
sbb
bound
sub
outs
pop
popf
pop
gs
aam
mov
je
test
ffree
test
adc
and
jns
sub
pop
out
pop
add
cmp
(bad)
stos
add
cmc
mov
stos
or
call
repz
mov
arpl
movs
repz
mov
or
out
inc
sub
add
movs
mov
add
mov
jmp
cmp
das
bound
and
movs
mov
or
popa
enter
lahf
mov
and
dec
pop
ins
stc
inc
call
fcom
lea
lock
push
inc
or
jae
cli
clc
imul
pop
mov
push
bound
out
sahf
ret
xchg
jmp
(bad)
mov
push
fucomi
test
loopne
mov
cs
lods
pop
ins
movs
scas
xchg
ss
pop
dec
js
dec
not
jnp
cld
iret
rol
ins
fidiv
inc
out
gs
cwde
ss
repnz
daa
test
mov
retf
punpckhwd
xchg
out
push
xor
aaa
mov
inc
xor
pop
inc
mov
out
push
add
(bad)
mov
hlt
xchg
mov
cdq
mov
xchg
jnp
pop
jp
imul
movs
dec
jmp
int
clc
cs
mov
dec
sub
xchg
pop
mov
cmp
popf
retf
movs
imul
das
out
mov
or
pop
aas
in
mov
leave
pop
cmps
cmp
into
pop
fs
pop
pop
and
jnp
cwde
test
inc
fadd
jbe
repz
pop
fdivr
cwde
xchg
pop
dec
cmp
test
dec
ds
test
mov
push
ret
fild
mov
push
xchg
or
fsub
out
adc
enter
not
and
fdivr
in
xchg
gs
dec
jnp
shr
(bad)
je
cld
mov
shr
mov
pop
add
sbb
ja
jl
sbb
adc
imul
retf
hlt
and
jmp
std
mov
stos
loope
or
test
jns
rcr
xor
and
jg
dec
pop
and
das
repnz
mov
push
sub
push
out
ds
mov
add
jl
or
sbb
or
mov
pop
and
scas
dec
mov
aad
mov
or
or
in
in
mov
add
in
fmul
sbb
mov
stc
iret
(bad)
ror
jb
xor
pop
sbb
dec
add
stos
pop
inc
xor
outs
adc
fild
mov
scas
(bad)
inc
fs
sub
adc
cld
in
mov
inc
adc
sbb
sub
fmul
call
stos
xchg
mov
out
push
clc
cmps
gs
xchg
or
pop
(bad)
jle
jecxz
add
popf
in
mov
test
rcl
daa
jno
cld
aam
fadd
xchg
pop
push
sub
pop
inc
mov
repz
ret
add
xchg
mov
ja
js
jb
or
(bad)
xor
inc
ds
push
adc
int3
push
cmovbe
rcl
shr
pop
pop
jle
sub
arpl
push
cmp
push
arpl
ja
(bad)
ret
fcom
mov
inc
inc
inc
sub
adc
test
sbb
inc
jne
sbb
call
pop
push
popf
inc
sub
cld
cmps
popa
inc
call
bound
push
fdiv
or
inc
inc
lds
sub
cmc
mov
das
pop
sbb
cmps
inc
xchg
dec
repnz
test
in
outs
popf
push
inc
mov
enter
loope
dec
shr
pop
inc
cmp
fld
scas
add
fmul
mov
pop
jmp
cmp
sbb
fdivr
cld
inc
sahf
lea
xchg
jmp
or
imul
cwde
sub
ret
xchg
dec
movs
sar
xchg
pop
cld
popa
loope
xchg
add
pop
retf
and
lea
xchg
mov
ds
aas
out
ja
add
test
pop
or
int
or
push
stos
fbld
cmp
mov
mov
cmp
repnz
push
iret
push
jecxz
ins
lock
and
inc
mov
outs
in
rol
mov
bound
bound
addr16
push
lahf
and
into
imul
loope
xchg
cli
push
dec
push
dec
or
and
js
xchg
cli
mov
jmp
push
pusha
retf
sahf
adc
int
mov
addr16
in
in
and
movs
jo
mov
js
test
or
jl
jl
leave
inc
pop
cli
cdq
cmp
es
fst
and
mov
jne
mov
call
xchg
xor
(bad)
fdiv
inc
pushf
mov
push
push
push
xchg
or
fld
aaa
adc
push
pop
sub
inc
dec
dec
mov
add
mov
push
xor
outs
daa
aaa
retf
dec
int3
dec
push
xlat
mov
popa
gs
mov
or
push
pushf
cmp
ja
icebp
stc
add
dec
jnp
and
cmp
call
leave
cld
mov
ja
xchg
pop
cmp
cmp
les
in
pushf
push
ja
mov
inc
fidivr
int
sub
imul
movs
ins
repz
sub
or
in
jmp
lock
xchg
jg
and
lods
ficom
jmp
add
lea
mov
fstp
add
and
add
loope
(bad)
mov
cmp
and
cdq
fwait
aad
push
call
adc
add
mov
sub
neg
mov
addr16
mov
jp
jp
and
jmp
or
outs
xchg
and
in
jae
xchg
xchg
bound
inc
popa
rcr
push
(bad)
les
cmps
cmp
push
pop
std
xor
stc
xchg
and
std
int
xlat
add
fs
lds
pop
or
dec
ror
movs
sub
pop
jg
adc
add
jmp
add
arpl
in
inc
jne
sub
outs
sub
outs
push
(bad)
xor
loope
jb
add
gs
dec
jl
es
call
or
and
jge
pop
idiv
dec
add
(bad)
push
add
ror
loop
dec
cmp
ins
mov
sub
and
jp
push
and
(bad)
movs
add
dec
xor
lea
in
std
xlat
retf
push
pop
and
xor
aas
int3
mov
ins
into
add
fucom
cmp
rcl
or
add
inc
and
aam
mov
loopne
jge
ficomp
jecxz
fidiv
mov
push
movs
and
sbb
push
nop
cmc
push
push
gs
clc
stc
sbb
pop
cs
aaa
push
jg
ja
(bad)
gs
mov
dec
les
pop
(bad)
inc
pop
and
jp
sbb
and
ins
(bad)
shl
lods
xor
mov
test
inc
mov
iret
jp
rcr
jnp
fiadd
xor
cmp
cmp
mov
dec
pop
sub
mov
test
jg
mov
lahf
and
pop
call
ficom
mov
push
(bad)
dec
and
inc
nop
and
xchg
sub
jmp
inc
repnz
sbb
cwde
out
pushf
add
jmp
jbe
mov
mov
in
and
bound
mov
dec
mov
test
ret
mov
mov
loope
(bad)
xlat
test
xor
push
out
cmp
ror
lahf
imul
neg
ds
jbe
out
das
and
test
pop
sar
clc
mov
icebp
aas
(bad)
adc
mov
stc
out
cmp
xlat
mov
ret
mov
scas
imul
mov
and
in
add
aam
xchg
mov
pop
arpl
movs
stos
jecxz
mov
(bad)
xor
pop
test
lods
movs
jl
pop
test
clc
xchg
sub
popa
ss
int
cmp
hlt
add
and
repnz
arpl
add
adc
shr
cmp
(bad)
mov
test
dec
stos
mov
stos
or
dec
mov
std
(bad)
movs
xchg
and
pop
(bad)
and
pop
je
push
cwde
dec
xchg
mov
xor
push
inc
jnp
jb
bnd
or
jle
jo
inc
adc
inc
loop
jmp
lahf
aas
xchg
sub
cwde
fwait
sbb
outs
and
sti
rol
jns
imul
mov
push
add
dec
(bad)
(bad)
stc
ja
mov
push
lahf
sub
xor
dec
cwde
add
jne
push
mov
push
cmp
pop
cld
into
or
inc
(bad)
mov
push
jmp
pop
inc
add
mov
adc
pop
dec
lds
mov
aaa
jne
sub
retf
mov
fnstcw
dec
inc
xacquire
jge
push
cmp
mov
sub
fld
sbb
push
movs
ret
outs
add
pop
inc
cmp
xlat
pop
pop
push
in
stos
hlt
sub
arpl
mov
jmp
data16
mov
xor
or
or
or
and
push
cmp
lods
ins
popf
(bad)
sbb
sub
mov
(bad)
stos
push
(bad)
iret
mov
imul
add
xchg
add
icebp
leave
sbb
sbb
pop
push
pop
and
adc
mov
aam
test
cmp
(bad)
xor
inc
idiv
bound
lods
mov
cmp
cmp
inc
iret
mov
shr
mov
sbb
jmp
jl
stos
idiv
int3
sbb
sub
jb
sub
loop
arpl
shl
lahf
sub
fxch
push
in
in
clc
pusha
sub
sub
xchg
adc
push
xchg
mov
mov
pop
aas
lock
or
das
mov
cdq
push
test
retf
fistp
and
jmp
inc
jle
cwde
imul
pop
mov
sbb
daa
sbb
outs
add
push
adc
dec
mov
popa
stos
arpl
mov
xchg
cdq
pop
in
jne
leave
retf
push
call
pand
stos
sbb
loopne
cmp
and
cmp
jno
xchg
icebp
pop
stos
repnz
cmps
retf
repz
mov
add
jne
dec
push
sbb
xchg
sub
cmp
mov
clc
mov
sbb
in
nop
sub
aad
gs
fisttp
jle
push
pop
push
cmps
cmp
test
push
arpl
stc
sbb
inc
mov
in
or
int3
jnp
aaa
ins
arpl
cmp
cld
mov
jmp
jl
inc
pop
rcl
mov
ins
cld
pusha
inc
add
jnp
mov
addr16
add
ret
daa
cmp
aaa
xor
and
inc
mov
sub
cmp
gs
sahf
sahf
out
sub
pop
mov
pop
push
out
push
stos
xlat
xor
in
push
into
xchg
outs
cli
mov
fucom
imul
test
rcr
pop
mov
test
shr
ror
add
xchg
dec
add
jmp
inc
jecxz
and
out
dec
imul
push
in
jmp
mov
sti
hlt
nop
(bad)
leave
inc
lock
jns
mov
jns
in
rcr
aam
hlt
fdecstp
jb
std
and
sbb
cmp
data16
dec
cmps
int
push
sub
xchg
cmp
movs
jge
jmp
in
fisub
rcl
sub
adc
add
lds
adc
xor
mov
xchg
mov
cmp
das
jns
lock
pop
xor
adc
jns
(bad)
sti
jge
in
mov
ins
(bad)
inc
mov
std
mov
sbb
add
adc
mov
ds
mov
add
or
outs
jns
fidiv
sbb
jno
in
xor
jg
push
push
(bad)
into
jne
push
icebp
scas
and
cdq
aaa
movs
stc
and
xchg
mov
cdq
sub
mov
sbb
mov
cdq
std
shr
dec
fldcw
add
inc
not
push
pushf
or
test
nop
popf
inc
out
inc
jnp
xchg
jl
jmp
out
push
mov
push
sbb
bound
inc
scas
inc
mov
sbb
push
test
pop
lods
sahf
push
add
jnp
cmp
dec
shl
cdq
jbe
mov
mov
hlt
push
push
jecxz
and
and
adc
(bad)
cmp
sub
xchg
sub
cwde
pop
stc
add
xor
popa
inc
sub
adc
add
gs
(bad)
and
jne
fsub
dec
mov
jl
pusha
mov
mov
je
test
call
or
shl
je
pop
fcmovbe
jmp
or
mov
adc
mov
jbe
les
jg
dec
jnp
xchg
loopne
xor
pop
mov
inc
jle
inc
mov
test
(bad)
test
(bad)
ss
lds
xchg
xor
jnp
cmps
nop
add
jbe
dec
es
cs
sti
ffree
and
push
sbb
mov
int3
push
sbb
mov
(bad)
and
jne
sbb
and
mov
xchg
(bad)
jmp
jo
shl
adc
and
ret
div
retf
cld
xor
int3
ja
shr
(bad)
jl
cdq
call
(bad)
iret
jp
jg
ficom
mov
mov
inc
shr
das
mov
mov
adc
ins
push
adc
iret
add
out
xchg
lea
mov
fwait
lahf
pop
xor
cwde
mov
sub
scas
shr
stos
sahf
cdq
leave
sti
fsubp
sahf
(bad)
jbe
(bad)
std
pushf
call
fucom
xchg
push
push
pop
repnz
scas
sti
ins
xchg
dec
pop
ss
mov
repnz
retf
inc
jg
daa
lods
pusha
adc
outs
fst
std
sbb
popf
aad
mov
retf
jp
mov
(bad)
pop
jnp
outs
xchg
push
mov
cmc
add
iret
sub
rcr
ret
shr
pop
add
fdiv
cmp
pop
dec
jge
fadd
lahf
(bad)
sbb
sbb
mov
stc
xchg
sbb
pop
imul
ret
jp
pop
pop
fs
push
push
sub
and
ja
fnstsw
stos
(bad)
outs
mov
out
test
test
shl
inc
jl
test
cmp
adc
adc
jmp
je
ror
les
ror
int3
xchg
sqrtps
or
sub
and
fidiv
and
xchg
jne
cmp
rcl
enter
sub
mov
(bad)
ds
and
js
iret
dec
idiv
jg
dec
jae
or
add
dec
ins
and
add
aas
pop
lods
lods
outs
xchg
not
retf
popf
mov
mov
dec
mov
sub
imul
cmp
fwait
pxor
mov
mov
pop
retf
and
repnz
dec
xor
jo
lds
aad
clc
movs
mov
xor
lock
mov
push
js
gs
daa
inc
scas
cmps
aas
fdivr
cmp
or
bndldx
test
ror
hlt
add
push
adc
in
dec
push
scas
in
ficomp
clc
out
popf
aad
push
sbb
sub
jae
or
pop
retf
icebp
push
add
and
cmp
push
inc
push
adc
and
lahf
shl
dec
mov
sub
inc
adc
mov
add
cmp
rol
jbe
push
fdiv
cwde
xchg
aam
popf
inc
daa
dec
jo
ins
es
fnsave
xchg
cmc
or
jp
dec
xchg
jecxz
pop
sti
inc
in
add
ror
xchg
dec
leave
cli
lock
retf
mov
imul
repz
cmps
or
mov
pusha
add
icebp
xor
adc
mov
ins
int
in
in
push
in
pop
push
ror
xor
int3
xlat
jne
or
call
cmps
adc
cmps
or
and
mov
push
pop
dec
rol
push
inc
jno
in
sub
movs
add
sbb
pop
pop
iret
idiv
popaw
popf
fisttp
and
mov
sbb
jecxz
js
cmp
stc
inc
jecxz
fwait
cmp
sub
rcr
jb
sbb
jae
aad
adc
dec
inc
out
inc
push
cmp
js
pop
ss
dec
fdiv
mov
or
mov
pop
lods
inc
es
sahf
(bad)
popf
ja
pop
shl
and
iret
mov
call
jge
push
pop
punpckhbw
xchg
js
ret
(bad)
xchg
lods
add
adc
pop
loop
pop
add
adc
xchg
sub
mov
cmp
lods
test
cmp
mov
pusha
sub
imul
cmp
ret
push
push
fnstsw
cs
jmp
scas
cmp
push
add
(bad)
in
(bad)
push
fistp
lods
iret
add
enter
sbb
pop
xor
bound
cmc
pop
sbb
xchg
loope
sbb
cmp
retf
jp
movs
sub
sbb
mov
sub
xchg
ret
pop
xchg
and
js
std
cdq
mov
jle
jle
jecxz
xor
mov
push
inc
mov
sbb
int
adc
jmp
pop
xchg
xchg
pop
sub
jg
fwait
int3
retf
data16
fdivr
cmp
xor
dec
jb
enter
sahf
jb
sahf
repnz
push
push
(bad)
jns
adc
adc
test
cwde
addr16
inc
clc
xchg
call
aas
loop
(bad)
mov
inc
adc
dec
dec
cmp
cmp
push
pop
jne
inc
or
arpl
xrelease
push
inc
hlt
add
sub
sti
xchg
dec
mov
xor
bound
jecxz
mov
jo
pop
push
jmp
xchg
les
and
ins
call
ret
repz
sbb
cld
retf
push
test
cmc
inc
mov
in
mov
aas
mov
cmps
hlt
and
ficomp
xchg
dec
mov
stos
pop
fild
add
stos
xchg
rcr
cmp
push
es
xchg
sub
lock
and
xor
pop
pop
leave
inc
int3
aas
sbb
pop
test
jecxz
mov
mov
fcmovu
jmp
out
dec
mov
(bad)
ficomp
mov
adc
mov
es
sbb
push
das
xchg
lock
push
shr
mov
jmp
(bad)
test
or
mov
pop
aas
xchg
sub
and
mov
stc
fsubrp
jle
add
inc
push
fstp
pop
std
movs
into
scas
and
test
and
stc
stos
shl
pop
and
nop
add
dec
pop
repnz
call
call
movs
sub
add
jmp
fisub
loope
imul
xor
mov
rcr
(bad)
(bad)
push
retf
bound
mov
nop
xor
scas
jp
push
mov
popf
mul
push
add
(bad)
dec
cwde
or
js
loop
xlat
jne
xchg
test
test
jmp
call
xor
nop
jnp
adc
dec
mov
shl
cmps
push
and
add
fs
loop
in
xor
sbb
push
icebp
fmul
mov
call
jecxz
dec
mov
enter
sub
sar
and
in
inc
fistp
ds
push
cwde
std
sub
outs
inc
jmp
loopne
xchg
and
imul
and
ret
sub
pop
xchg
(bad)
sbb
xchg
mov
pushf
add
jle
jl
shr
shl
lods
test
ret
test
fldenv
and
shl
in
adc
sbb
inc
mov
cmps
test
in
ret
retf
jmp
mov
fwait
add
ins
adc
adc
push
out
pop
and
xchg
clc
sub
rol
ds
(bad)
jg
mov
jge
cmps
dec
xor
popf
imul
iret
je
movs
adc
dec
jmp
aam
cmp
push
cmps
pusha
fwait
sbb
jmp
(bad)
jle
xchg
and
data16
jmp
sti
(bad)
mov
cmps
xchg
stos
push
mul
mov
jae
jb
add
test
xchg
pushf
dec
out
dec
fidivr
pop
icebp
add
add
mov
bound
lds
sub
sahf
mov
push
jg
add
adc
mov
or
sbb
cmp
sub
xor
out
xchg
mov
bound
mov
es
bnd
push
add
clc
jmp
vpmaxub
mov
xor
add
stc
test
push
adc
popf
sti
jp
hlt
pop
cs
cwde
rol
push
loopne
test
movs
into
(bad)
xor
jno
sub
ins
xchg
bound
stos
dec
xor
push
std
cmps
push
clc
pop
sbb
repnz
push
xchg
mov
je
aas
mov
sbb
lahf
push
fstp
ficomp
sbb
stos
fld
mov
nop
cmc
or
aam
ret
scas
pop
lahf
mov
in
call
scas
and
cmp
aam
mov
xchg
adc
aas
movs
gs
cdq
sbb
outs
sub
stos
sar
cmp
mov
fld
cmc
mov
(bad)
es
(bad)
sub
mov
cld
sub
je
movs
fsubr
jnp
cmp
jge
push
sub
inc
sbb
and
xor
sbb
mov
xchg
push
sbb
dec
xlat
dec
mov
sub
cmp
daa
cmp
fs
jne
sbb
inc
pop
daa
cs
cdq
mov
sbb
test
cmp
pop
inc
mov
mov
mov
enter
add
jno
int
and
mov
add
(bad)
or
popa
outs
push
jmp
jecxz
sti
outs
in
outs
push
pop
aaa
cmp
loop
scas
mov
leave
iret
mov
cdq
and
sub
sub
icebp
mov
add
sbb
and
pop
mov
inc
rcr
adc
inc
mov
pusha
add
mov
add
dec
cdq
pusha
aas
pop
sbb
inc
test
jmp
push
push
nop
int
push
xchg
es
mov
leave
bound
pop
cld
pusha
test
push
out
jle
aad
aad
add
pusha
lods
lahf
rcl
adc
mov
and
add
sub
(bad)
cli
iret
call
xor
fs
pop
shl
adc
cmps
jnp
movs
inc
fidivr
push
cmp
sub
and
int3
or
mov
jno
stos
cmp
sub
lahf
inc
sahf
fdivr
fstp
mov
sub
sbb
mov
xor
push
cmps
(bad)
mov
mov
not
mov
jns
and
mov
mov
push
pop
test
cmps
clc
fdivr
retf
ficomp
retf
push
add
sahf
jmp
fidivr
inc
push
jge
es
nop
xor
or
dec
pop
xchg
push
ds
and
std
test
rol
sbb
dec
and
jbe
scas
retf
test
jmp
adc
cwde
mov
mov
push
xchg
mov
add
bound
stos
mov
retf
stos
inc
fdivr
xchg
or
jle
push
xchg
(bad)
and
(bad)
jbe
xor
inc
div
xchg
and
cmp
retf
mov
aaa
add
ss
lds
mov
fiadd
xchg
inc
out
mov
mov
or
or
push
lods
loop
and
push
ins
adc
adc
das
xchg
movs
and
push
out
pusha
and
out
fild
std
jne
adc
jecxz
xor
or
mov
xor
loope
test
jl
sub
sub
std
jnp
xor
pop
mov
lock
stos
rol
or
out
push
push
nop
out
xor
push
fcmovbe
out
dec
push
xchg
pop
mov
pop
mov
sbb
cli
jne
and
and
xchg
fcomp
shr
pop
or
xchg
ja
xor
mov
mov
add
stos
ins
call
movs
outs
mov
sbb
das
push
enter
mov
popf
ror
add
setno
out
xchg
gs
ins
cld
cmp
push
cli
add
add
ret
not
int
das
xchg
imul
inc
fidiv
test
sub
adc
mov
mov
push
scas
pop
test
je
out
test
add
mov
ss
fidiv
push
dec
or
pop
cdq
mov
iret
add
sub
sbb
jbe
pop
loopne
mov
jbe
clc
push
adc
adc
push
jno
jmp
mov
je
xor
jo
test
bound
pop
pusha
not
test
scas
and
adc
fsub
inc
jge
mov
sbb
dec
dec
mov
je
movs
lea
jecxz
leave
dec
or
dec
sbb
mov
cmp
inc
add
cmp
scas
sbb
out
mov
and
mov
push
rcr
call
loop
inc
clc
mov
aam
icebp
es
call
mov
cmp
add
jmp
lock
sub
jge
sar
movs
leave
jge
push
into
frstor
xor
out
xchg
ins
pop
add
call
adc
inc
mov
inc
loope
xchg
mov
push
sbb
adc
rcl
repnz
out
sub
dec
clc
xor
nop
push
rol
push
xchg
retf
cmps
rol
les
mov
imul
cmps
pop
or
jae
mov
inc
and
adc
out
icebp
rcr
push
nop
(bad)
into
add
imul
inc
cdq
pop
lea
std
push
lock
xchg
add
fcomp
loope
push
stos
cdq
and
fimul
mov
sahf
xor
mov
or
sub
push
enter
jbe
cmp
push
pusha
(bad)
xchg
cmps
pop
inc
mov
mov
mov
mov
add
fcomi
iret
or
dec
push
sbb
adc
jmp
into
fisttp
dec
out
int
(bad)
int3
loope
mov
sbb
cs
mov
mov
test
cmp
adc
stos
sub
jb
mov
(bad)
pop
and
pop
aas
arpl
scas
jno
mov
mov
daa
sbb
clc
arpl
cmp
mov
sbb
sbb
xor
inc
stos
(bad)
jmp
mov
test
out
and
inc
or
ffreep
out
pop
xchg
stos
clc
adc
loopne
sbb
sti
jne
pop
and
neg
(bad)
shr
mul
imul
stc
rcl
dec
dec
ret
loopne
fwait
xchg
into
popf
scas
push
out
dec
popa
add
in
fisub
jp
inc
xor
inc
mov
(bad)
outs
movs
fwait
push
cmp
dec
inc
ret
inc
xor
std
jge
push
cmp
sahf
sbb
dec
ins
or
xchg
dec
cli
inc
jl
icebp
sbb
mov
ja
add
dec
rcr
or
mov
jmp
hlt
inc
xchg
and
jg
test
pop
push
or
movs
cmps
jecxz
aam
sub
mov
mov
rol
dec
xchg
jge
lahf
mov
fist
dec
dec
and
mov
lock
(bad)
pusha
call
test
cmp
aas
adc
xchg
in
enter
ins
daa
movs
inc
sahf
mov
mov
and
or
push
lods
in
jmp
sbb
sbb
mov
pop
sbb
std
lds
cdq
adc
mov
push
out
jb
sub
popf
sbb
mov
xchg
push
cld
dec
add
movs
xchg
ret
ret
mov
adc
stos
jne
rcl
fist
in
lods
bound
sub
cmps
(bad)
push
mov
mov
pop
lock
jecxz
aaa
sahf
in
and
sbb
adc
dec
jmp
(bad)
sub
leave
mov
sti
xchg
ins
jmp
pop
mov
sbb
iret
jmp
lods
test
jmp
or
mov
inc
mov
push
and
inc
aas
(bad)
icebp
pop
xor
adc
pop
add
les
or
aas
lods
jg
add
pop
xor
jbe
jmp
ret
mov
dec
test
fild
aaa
mov
repnz
cdq
sbb
aad
nop
or
xchg
stc
in
jns
jge
push
push
outs
push
xor
sbb
jecxz
pop
ret
inc
mov
inc
sahf
inc
test
nop
leave
push
inc
xchg
gs
cdq
shl
rcl
xchg
xchg
jbe
cmp
xor
xor
jnp
nop
cmp
in
sbb
rcl
mov
and
add
jmp
and
imul
push
sbb
mov
push
mov
mov
call
mov
add
mov
or
mov
pusha
sub
push
into
data16
add
pushf
dec
stc
push
adc
test
add
jnp
add
stos
(bad)
frstor
inc
mov
fwait
dec
das
std
in
jmp
xchg
test
pop
int3
xor
int3
sub
outs
test
push
fprem
ror
jb
leave
adc
adc
test
lods
xor
outs
inc
xor
loope
icebp
in
xchg
mov
shl
lds
jae
lahf
cmps
addr16
add
je
stos
cwde
push
lods
stc
enter
hlt
add
mov
sbb
aam
dec
jne
or
cmp
cmp
inc
sbb
data16
ins
or
adc
add
icebp
mov
pop
mov
push
je
add
push
lods
mov
and
jle
pop
retf
sar
inc
les
dec
inc
test
push
leave
cdq
sub
int3
js
sahf
mov
ret
(bad)
hlt
add
test
dec
ret
ret
dec
jbe
(bad)
xor
add
mov
dec
xchg
cmps
mov
lds
dec
std
nop
sub
and
adc
push
test
loopne
imul
(bad)
ins
loop
dec
dec
mov
pushf
fsub
imul
movs
pop
or
lock
adc
and
dec
jecxz
sti
pop
mov
jae
push
hlt
sub
sub
clc
fldenv
dec
mov
cld
mov
ret
pop
(bad)
cmps
mov
xor
jo
hlt
outs
inc
popf
sar
mov
ja
pop
mov
mov
bound
push
add
push
pushf
dec
test
das
jge
aas
into
ficomp
dec
inc
sub
pop
(bad)
adc
pop
pop
mov
cli
push
pop
sbb
outs
mov
mov
outs
test
push
jbe
push
call
in
sub
or
sbb
jo
and
xchg
jae
cwde
fcom
outs
js
inc
inc
ficomp
and
jb
xchg
fdiv
mov
js
xor
or
mov
fldenv
cmps
mov
add
arpl
xor
lock
mov
or
das
test
call
jno
int3
rcr
jle
add
sti
sbb
ds
icebp
mov
pushf
xchg
dec
mov
movs
push
cmp
cs
imul
shl
ror
pop
push
mov
sub
fisttp
pusha
mov
cmc
sar
add
sbb
aam
aam
cmp
and
sub
ror
push
enter
sti
jno
jle
lea
rcl
push
push
sbb
scas
test
mov
jl
stos
rcr
stos
jge
inc
push
inc
enter
mov
pop
rcl
inc
xor
(bad)
pop
and
jg
inc
retf
adc
movs
fstp
pop
add
movs
movs
ins
mov
retf
mov
fnsave
scas
mov
imul
out
inc
retf
mov
add
push
cmps
push
test
rcl
lds
loopne
sti
dec
sbb
test
(bad)
je
hlt
sbb
pop
mov
rcl
cdq
sbb
mov
dec
and
jns
cmp
scas
fstp
daa
test
push
adc
dec
jg
dec
adc
inc
daa
in
in
ins
iret
scas
add
into
(bad)
push
pushf
out
in
push
mov
pop
xor
shr
xor
jns
push
ja
sti
adc
xchg
fnstcw
inc
imul
in
add
arpl
sub
in
repnz
inc
cld
scas
das
repnz
call
into
aam
inc
xchg
data16
repz
das
aaa
push
sbb
push
lods
dec
xor
pop
add
pop
sbb
rcl
ffreep
jbe
aas
out
xchg
out
in
push
pushf
lods
enter
fsub
sub
sbb
aas
xor
fs
imul
sbb
jl
inc
sub
and
loop
pop
popf
xchg
in
push
fild
cmp
inc
repnz
scas
pusha
cmps
mov
ret
and
or
jno
lods
inc
test
popf
add
add
jmp
push
and
imul
imul
fadd
retf
in
mov
xchg
dec
add
push
inc
pushf
lods
jnp
add
in
and
jmp
pop
in
mov
inc
push
jns
mov
rcl
es
pop
inc
pop
loop
cmp
and
std
and
or
push
pop
stc
(bad)
pop
js
and
movs
mov
or
and
pop
or
fs
xchg
mov
inc
test
sub
dec
js
into
pop
push
sub
rcl
inc
clc
inc
cmp
mov
pop
and
ret
test
movs
sbb
ins
jl
pop
xor
adc
inc
shl
jge
mov
sub
aam
push
lock
mov
lea
adc
punpckhdq
repz
neg
fidiv
mov
fild
addr16
sub
test
ja
(bad)
adc
adc
and
lock
movs
xchg
pop
ins
mov
ja
pop
push
cli
loop
mov
pop
sub
stos
loope
addr16
clc
cwde
ficom
mov
arpl
cmc
call
add
ins
std
cmp
jns
sub
bound
inc
jle
add
lahf
jne
cld
outs
dec
fs
lods
add
cmps
jg
cmp
sar
inc
hlt
ins
pop
xor
xchg
rol
xor
push
dec
sbb
imul
fsub
test
xlat
jp
sub
sub
out
xchg
cmps
cmp
int
mov
jmp
enter
mov
mov
scas
(bad)
push
jl
inc
shr
aad
mov
mov
add
mov
jecxz
jae
jp
in
stc
stos
popf
hlt
fidivr
mov
xchg
or
cmp
push
or
push
sbb
push
dec
inc
fwait
jnp
aam
outs
rol
cwde
dec
and
das
fwait
xchg
test
push
iret
jbe
pop
and
push
jmp
cwde
cmp
push
push
movs
xchg
jae
sahf
fcmovbe
test
jmp
pop
jmp
lock
pmulhw
ss
inc
pop
sahf
mov
xor
lock
(bad)
cmp
mov
stc
lods
sub
jp
cmp
inc
push
xor
jb
add
sub
rol
mov
inc
push
pushaw
cdq
sub
lea
test
cmps
ins
xchg
call
retf
cmp
aas
mov
call
mov
xor
(bad)
(bad)
out
dec
jno
imul
loope
mov
inc
or
jle
inc
in
inc
aad
addr16
out
pop
push
push
(bad)
lahf
push
xchg
jecxz
adc
xor
cld
mov
inc
jecxz
push
fisub
pop
mov
inc
pop
dec
call
in
lahf
xchg
outs
sti
push
lock
jg
loope
das
ret
movs
cwde
sbb
inc
mov
push
int
mov
ins
cld
shrd
add
jbe
push
imul
stc
mov
mov
cmp
ins
icebp
retf
out
mov
stos
dec
jnp
xchg
pop
das
mov
push
cmp
push
sub
in
test
ret
imul
jb
jle
repnz
aam
jecxz
test
cmp
push
(bad)
lods
inc
sbb
idiv
and
scas
push
mov
mov
fwait
push
xchg
jo
aam
sbb
mov
test
pop
rol
cdq
xchg
daa
aaa
fwait
adc
mov
daa
call
lock
cwde
jbe
loop
sub
cmp
icebp
adc
inc
xsha256
cmps
adc
or
scas
out
push
push
mov
in
or
sbb
adc
test
mov
mov
mov
not
leave
(bad)
call
xlat
or
movs
jl
sahf
mov
ins
aad
jno
dec
popf
sar
ret
pop
mov
shr
cmp
pop
mov
jb
mov
(bad)
sahf
push
ret
mov
cmp
test
push
(bad)
movs
(bad)
dec
mov
mov
hlt
jnp
inc
ja
leave
and
push
xor
inc
repz
mov
ds
nop
dec
ins
fdivr
std
jno
in
addr16
ss
(bad)
mov
sar
adc
cmp
pop
gs
out
aas
mov
sbb
add
aam
cmp
fwait
out
scas
mov
rol
outs
arpl
repz
fistp
dec
enter
icebp
inc
fcmove
mov
pop
xchg
jo
cld
add
push
jge
fs
retf
inc
stos
fiadd
sub
mov
aas
pushf
push
cmps
rcl
fcmovnu
jbe
(bad)
lahf
ret
adc
sahf
sar
mov
outs
xchg
in
sti
mov
addr16
or
add
lea
lock
retf
cmp
mov
adc
clc
cs
pop
pop
pushf
popf
icebp
hlt
pusha
mov
inc
ins
sub
or
(bad)
es
scas
adc
lods
xchg
into
inc
fild
fcomip
(bad)
fnop
adc
sbb
icebp
xor
sahf
jne
pop
adc
cli
adc
dec
(bad)
sbb
jmp
push
pop
jmp
(bad)
data16
mov
in
fbld
call
or
(bad)
inc
cmp
jns
mov
or
ror
mov
bound
jb
jecxz
imul
test
xchg
lods
fstp
or
or
xchg
jmp
pushf
shl
xchg
mov
mov
pop
std
sbb
or
shl
jp
repz
xor
push
in
jp
push
lds
xchg
pop
rol
xor
and
sbb
imul
adc
(bad)
dec
ins
test
popf
jne
adc
dec
sub
cmps
push
(bad)
jno
and
push
mov
dec
daa
and
dec
imul
adc
sub
and
dec
aaa
stos
mov
mov
(bad)
out
ret
dec
dec
cmp
jp
mov
call
retf
fsubr
out
sub
add
jne
loope
mov
scas
mov
ja
push
mov
enter
inc
mov
leave
jge
(bad)
add
hlt
xor
cwde
mov
mov
pop
stos
xor
mov
lea
pop
xchg
pusha
fwait
cdq
push
cmp
ins
stc
test
push
int3
inc
mov
ds
sbb
dec
pop
lock
(bad)
mov
jne
mov
call
mov
in
data16
cmp
sbb
lds
lahf
push
div
inc
pop
xchg
mov
cwde
adc
out
jg
mov
imul
xchg
and
mov
movs
test
test
cmp
es
or
mov
sub
dec
ret
lock
int
stc
mov
dec
mov
scas
pop
mov
add
ret
sub
dec
push
not
retf
loopne
mov
cmp
sbb
in
sar
xchg
mov
sub
cmp
and
in
fadd
(bad)
jge
xchg
aam
pop
out
(bad)
push
movs
in
and
test
push
cmp
cmp
xchg
movs
mov
movs
jecxz
xor
or
ins
shl
fs
adc
test
sbb
addr16
data16
fstp
sub
popf
scas
fadd
mov
jge
ss
aad
jbe
pop
push
in
mov
push
mov
sub
test
jl
ret
jnp
xchg
gs
call
add
jb
sub
out
jecxz
stc
adc
(bad)
push
fild
push
aam
push
cmp
add
mov
cdq
imul
(bad)
mov
jmp
push
sbb
mov
jns
mov
adc
xchg
inc
int3
dec
rcl
fidivr
xchg
jl
cmp
mov
jns
jmp
adc
push
imul
cmp
out
mov
neg
bswap
dec
push
fstp
add
in
cmp
dec
adc
mov
imul
aas
pop
shr
(bad)
(bad)
stos
and
imul
push
pop
add
test
mov
movs
xchg
inc
popf
data16
test
or
pop
jmp
aas
jb
arpl
push
ret
cmp
movs
lds
mov
(bad)
aam
add
bound
cmp
outs
dec
push
iret
dec
hlt
or
mov
adc
(bad)
adc
cdq
call
lods
mov
enter
adc
leave
enter
push
pop
fld
jl
sub
fld
dec
inc
sbb
inc
jno
mov
call
pusha
cmp
mov
dec
mov
jb
cmp
push
das
or
test
pop
push
ja
dec
movsx
dec
stos
cs
jle
sbb
or
inc
(bad)
adc
mov
rcr
loopne
loop
cmps
stc
or
das
add
jle
pop
and
mov
leave
ret
push
fcmovbe
push
rol
jb
sbb
in
daa
icebp
leave
or
mov
shl
(bad)
and
pop
inc
jmp
out
lea
lods
xchg
jp
cdq
jmp
into
nop
jo
push
adc
(bad)
cmp
xchg
jp
mov
popf
jb
popa
cwde
jge
push
xchg
jne
or
fcmovu
arpl
es
jbe
xchg
adc
daa
mov
stc
repz
(bad)
jbe
xor
xor
aaa
mov
push
movs
fistp
add
leave
in
mov
mov
test
mov
pop
and
and
adc
xchg
ja
or
call
jbe
jl
xor
xchg
or
mov
adc
ds
iret
je
mov
sub
mov
sbb
xchg
mov
pop
sbb
push
add
jp
mov
imul
out
(bad)
push
mov
ret
cmp
add
adc
pop
xchg
and
xchg
add
fild
xor
lods
cmp
jecxz
adc
test
mov
sbb
enter
or
(bad)
fimul
cmc
test
mov
and
js
xor
imul
lock
add
dec
mov
adc
lds
es
inc
or
ret
ret
test
cmp
out
addr16
in
es
sbb
pop
mov
cmps
pop
(bad)
fmul
outs
jns
xor
retf
pop
out
popf
fcmovnb
ins
loopne
loopne
cmp
test
sar
xchg
add
fdiv
fwait
cmps
mov
mov
js
push
push
pop
pop
test
xchg
bt
movs
push
sub
ds
sub
std
xor
into
jg
(bad)
mov
jg
sub
in
inc
fbld
push
int
cmp
int
xchg
test
mov
ss
xlat
retf
pop
mov
or
cmps
jle
jae
enter
mov
sbb
mov
ret
sbb
cmp
inc
inc
and
xchg
stos
or
pop
stos
mov
fs
and
add
lahf
rcl
dec
dec
int3
cmp
mov
pop
repnz
sbb
aaa
shl
adc
mov
das
dec
out
sub
mov
lods
pop
(bad)
shl
in
cmps
lods
out
xor
clc
adc
pop
aaa
(bad)
xlat
fisub
addr16
fnsave
and
cld
jne
add
pop
mov
push
inc
and
inc
mov
inc
mov
mov
enter
adc
mov
arpl
and
sbb
pusha
imul
leave
jae
jmp
push
sar
jne
cwde
inc
xchg
mov
or
(bad)
idiv
aaa
bswap
imul
clc
fadd
xchg
push
adc
es
push
ss
xor
xchg
iret
stc
icebp
mov
jg
xor
test
mov
push
lock
icebp
retf
xor
fmul
pop
popf
cmp
xchg
mov
loopne
in
pop
ja
cdq
aam
or
xchg
lea
mov
icebp
push
jbe
cmps
repnz
std
ret
or
mov
fs
sti
(bad)
dec
mov
push
adc
jg
std
sub
outs
pop
sti
xchg
aaa
sbb
xchg
mov
int
in
popa
or
xchg
adc
inc
dec
int
add
test
add
jb
xchg
int
in
dec
mov
adc
mov
gs
sub
jbe
adc
arpl
cwde
out
jmp
lods
loopne
sbb
inc
cld
adc
aad
adc
outs
fisttp
add
(bad)
fst
cld
dec
push
call
mov
inc
dec
call
inc
sub
ja
cwde
jmp
loop
inc
int
stc
jb
dec
push
(bad)
and
jae
jbe
out
dec
xchg
clc
ror
pop
int
test
and
mov
mov
pushf
sbb
adc
push
mov
and
js
cmps
adc
scas
retf
ret
iret
lahf
mov
jne
jo
test
mov
xchg
xchg
outs
jmp
imul
mov
arpl
in
repz
loopne
cli
dec
repz
mov
xchg
out
push
push
int
jecxz
or
mov
or
dec
jmp
push
mov
jae
lds
push
dec
mov
sub
cmp
scas
loopne
icebp
and
ins
retf
daa
inc
mov
sub
lock
icebp
je
fisubr
int3
mov
jmp
ja
inc
std
aas
mov
adc
in
push
iret
imul
add
and
out
mov
scas
std
xor
push
ja
lahf
cmp
das
xchg
mov
jge
into
jl
mov
mov
xor
pop
sub
es
cmp
hlt
xor
push
add
pop
xchg
cld
pushf
or
imul
scas
xchg
mov
mov
out
cld
push
lock
inc
outs
jmp
into
fcomp
ss
add
cmp
in
mov
sub
int3
or
(bad)
mov
adc
pusha
jns
fwait
cwde
and
adc
jle
xor
xor
bound
or
into
shl
mov
mov
mov
pop
adc
mov
int
pop
mov
sub
mov
xlat
in
sub
test
loopne
mov
pop
das
push
sbb
jg
lea
push
xchg
mov
(bad)
xchg
xor
cwde
adc
mov
jbe
add
ins
jnp
adc
jo
dec
pop
dec
out
scas
std
xor
add
adc
loopne
jne
sbb
frstor
add
push
push
push
out
loop
les
jmp
stos
icebp
clc
jne
fild
jge
fist
cmp
mov
gs
push
inc
adc
xchg
fdiv
mov
fisubr
mov
in
fcmovnbe
mov
inc
lahf
hlt
pop
dec
jno
push
jae
ror
popa
(bad)
pusha
in
mov
push
or
shl
pop
stos
xor
sub
ffree
outs
xchg
inc
(bad)
xchg
and
fwait
and
inc
in
(bad)
in
cmp
or
pop
sbb
stos
cdq
pushf
outs
sbb
push
or
fild
sahf
sub
mov
xchg
mov
sub
sti
or
sub
xchg
loope
repz
push
ja
add
jae
sti
stos
and
adc
sub
rol
sbb
ret
inc
call
and
xchg
adc
cld
jle
cmp
sti
outs
fwait
(bad)
fcom
(bad)
pushf
out
inc
mov
xchg
push
push
(bad)
call
ret
or
mov
pop
inc
push
mov
jmp
outs
push
push
cmp
sbb
test
xor
fidivr
data16
ins
pop
sti
xchg
repnz
daa
icebp
push
xchg
dec
fiadd
adc
xchg
jp
adc
idiv
cmp
hlt
xchg
test
adc
cmps
mov
aam
enter
pop
adc
cmp
push
pusha
or
pop
sub
imul
xchg
mov
or
popa
xor
jae
fldpi
xor
inc
jmp
ret
call
dec
lods
inc
pop
push
xor
popa
or
mov
aaa
gs
mov
in
and
xor
iret
retf
or
push
rcl
out
je
and
pop
and
cmp
ja
aad
out
fwait
int3
adc
or
aaa
cmp
movs
aaa
push
(bad)
pop
pop
jo
mov
push
(bad)
dec
ins
adc
test
cld
ret
lods
jno
scas
cdq
sbb
lods
push
es
cs
pop
clc
repz
les
stc
and
or
mov
fistp
ret
leave
movs
jae
sti
lods
jecxz
stc
test
sub
cmp
je
shl
repz
sbb
sub
cmps
inc
mov
stos
jge
call
mov
and
fld1
xor
das
pop
sub
push
imul
inc
pusha
test
neg
mov
repz
shr
mov
div
add
sahf
scas
xor
outs
shr
pop
aam
mov
add
xor
aaa
fsub
inc
imul
add
push
repnz
lods
mov
cld
popa
aas
mov
popf
mov
mov
cmp
xor
test
hlt
fnsave
or
jle
mov
retf
leave
std
cmp
mov
clc
and
sub
jmp
cdq
adc
cld
fadd
jmp
rol
xor
adc
int
lahf
mov
jg
adc
in
les
(bad)
mov
retf
addr16
aad
xchg
pop
mov
xlat
gs
jg
dec
rol
fisub
imul
pop
sub
cmps
inc
and
lea
stc
adc
xchg
or
cmp
push
inc
inc
lahf
or
mov
daa
jp
sub
adc
pop
js
mov
jnp
in
and
imul
inc
sub
out
jecxz
cs
cmp
stos
xor
fist
dec
jne
dec
test
fld
mov
movs
int3
shl
pop
mov
jns
out
das
(bad)
cli
add
stos
pop
mov
call
and
or
outs
leave
jecxz
fwait
(bad)
(bad)
lods
or
or
cmp
inc
mov
inc
retf
and
repz
xchg
test
pop
fild
rol
xchg
push
imul
add
aas
push
push
push
mov
and
cmps
jbe
mov
movs
sahf
jecxz
pop
scas
movlps
pop
and
js
lods
ins
iret
sub
outs
scas
out
scas
jmp
imul
jb
ins
imul
pushf
xor
mov
mov
out
mov
inc
xor
add
clc
cmp
or
leave
jne
in
push
or
xor
(bad)
div
int3
data16
loopne
inc
out
retf
sbb
mov
popf
sub
ja
shl
inc
cmps
add
push
and
push
(bad)
in
cmps
cmp
xor
cmps
test
xchg
cld
fcom
jne
pop
pop
nop
sub
mov
xor
pop
repnz
test
xchg
cmp
in
nop
(bad)
in
mov
(bad)
in
pusha
xchg
(bad)
xchg
and
fisttp
sbb
cdq
push
inc
test
mov
cs
add
add
xchg
fbstp
adc
mov
sub
lods
push
mov
mov
ins
lea
shl
adc
ret
call
repnz
ret
shr
push
sub
ret
repnz
push
aam
mov
adc
mov
xchg
frstpm(287
add
jb
xchg
out
or
retf
mov
mov
mov
orps
or
cli
pop
jbe
jle
leave
xor
mov
daa
std
das
push
lock
jg
(bad)
sti
xchg
(bad)
fst
push
pop
xor
mov
jbe
xchg
and
shl
arpl
mov
imul
jb
gs
clc
and
inc
call
fisub
cdq
imul
loop
jno
cdq
retf
xor
pop
mov
in
mov
inc
(bad)
cmc
dec
inc
jne
mov
xchg
add
mov
jae
test
scas
add
inc
hlt
push
out
xchg
(bad)
push
push
jecxz
test
int3
mov
aam
jne
xchg
repz
mov
and
mov
push
and
in
mov
test
fnsave
scas
out
rcr
mov
fsub
mov
call
pop
mov
sub
std
adc
sar
stos
and
call
cld
jae
sub
xchg
std
daa
sbb
call
(bad)
jb
pop
inc
(bad)
sbb
out
rcl
mov
in
js
adc
mov
jns
lahf
leave
add
dec
xlat
ja
sbb
dec
jl
mov
enter
fsubr
push
cwde
inc
push
xor
scas
pop
retf
adc
mov
ret
pop
pop
cmp
adc
sub
cmps
and
mov
test
xor
cwde
daa
mov
xor
jp
push
pop
jnp
fiadd
mov
repz
fcomi
into
mov
call
pop
and
xchg
ins
out
sti
es
inc
xor
cwde
sub
test
enter
dec
mov
daa
push
xchg
fs
add
repz
mov
push
inc
or
mov
cmc
inc
mov
mov
cdq
mov
and
inc
inc
not
or
(bad)
pusha
cwde
or
pop
cli
nop
mov
sbb
dec
stos
fcomp
add
mov
rcr
test
xchg
out
xchg
inc
adc
dec
and
mov
or
jle
arpl
sbb
adc
pop
cmp
mov
ret
add
mov
jbe
or
jmp
or
pop
int
push
mov
cmps
jns
in
dec
retf
test
sbb
push
cmps
test
js
add
and
cld
outs
std
div
cmp
loopne
outs
pop
fs
in
mov
ror
xor
sub
push
xlat
push
hlt
or
sbb
sbb
xor
and
rcr
(bad)
(bad)
fcom
fistp
jo
jmp
xor
mov
das
sub
push
in
sahf
in
lahf
jno
mov
or
nop
inc
mov
sub
mov
clc
call
xor
mov
mov
jne
imul
ss
xor
fwait
lock
jnp
push
xchg
fnstenv
cmp
out
dec
cmps
xchg
xchg
xchg
dec
xchg
mov
iret
cmp
adc
mov
inc
pusha
add
aad
leave
cmc
xchg
mov
push
mov
jmp
fwait
out
pop
repnz
sti
push
loope
and
dec
enter
add
adc
add
test
sbb
bound
dec
dec
pop
xor
mov
or
pop
loop
out
mov
jle
pusha
pop
aas
(bad)
stos
adc
push
push
jmp
xlat
or
out
sub
ror
push
stc
sub
lock
or
xchg
adc
push
dec
aas
sbb
loopne
mov
in
(bad)
aam
cwde
int3
jecxz
ficomp
lods
add
pop
std
pusha
ins
push
inc
and
int3
sub
pop
popf
add
mov
xlat
or
repz
dec
push
sbb
std
jo
jb
add
sub
fincstp
push
adc
cmp
loop
repz
(bad)
jbe
aad
je
fisubr
sar
mov
stos
shl
aas
sub
sub
enter
aam
icebp
xor
sbb
fimul
in
aas
adc
mov
jge
push
xchg
jmp
lahf
fwait
add
repnz
div
jb
shr
adc
(bad)
or
push
pop
xlat
(bad)
neg
pop
push
dec
jle
stos
pop
ins
(bad)
loop
lods
das
loope
sub
xor
aas
jp
mov
cmp
das
push
in
or
mov
xchg
sbb
push
or
jae
shr
mov
leave
xor
aad
pop
mov
pop
(bad)
mov
or
mov
mov
push
out
enter
adc
adc
stc
rol
pop
test
push
repnz
rcr
add
lds
or
(bad)
mov
sbb
stos
(bad)
loopne
fstp
not
cmps
xchg
xor
call
sbb
dec
out
rcr
xor
sahf
call
stos
mov
cmp
ins
adc
scas
jp
push
mov
movs
push
dec
fisttp
lods
(bad)
pop
in
aam
inc
retf
sbb
stos
sbb
pop
scas
sub
push
(bad)
das
mov
inc
mov
mov
movs
stos
jge
pop
cmp
cmp
call
(bad)
lods
loope
fild
mov
popf
test
lea
mov
or
fadd
dec
scas
xor
push
jmp
js
mov
arpl
fst
or
imul
out
repnz
lods
fnstsw
push
out
sahf
pop
push
mov
int3
ror
(bad)
int3
daa
dec
push
fcom
(bad)
or
inc
test
pop
dec
iret
and
test
(bad)
loopne
lock
jge
hlt
inc
pop
sbb
dec
and
push
out
mov
popa
jns
mov
out
adc
mov
cmp
outs
sub
xor
mov
leave
inc
dec
dec
sti
pushf
or
ror
fisttp
dec
inc
addr16
repnz
sub
xor
pop
mov
jp
and
push
neg
and
cmp
add
sbb
push
das
jno
shl
lahf
cwde
pop
adc
rcl
iret
pop
test
xchg
fsincos
(bad)
out
adc
add
fdivp
xchg
xor
lahf
push
(bad)
(bad)
sbb
cmc
xor
xchg
movs
data16
aaa
mov
ror
leave
add
sbb
rcr
mov
test
add
movs
pop
int
xchg
aam
movs
mov
inc
leave
es
dec
ret
jl
sub
sub
retf
jnp
mov
or
jp
inc
pop
jns
jne
lahf
push
js
push
stos
ins
iret
push
cwde
jle
mov
pop
mov
aaa
out
mov
sub
adc
rcr
rcl
add
jge
retf
xchg
into
scas
mov
xor
pop
icebp
mov
pushf
je
push
xchg
cmp
jmp
out
lahf
inc
sub
sbb
in
test
pop
aaa
ins
mov
mov
hlt
iret
push
(bad)
mov
ins
int
and
lods
sbb
gs
mov
sti
adc
aam
shl
icebp
psllw
(bad)
test
or
fistp
call
pop
jnp
sbb
fidivr
movs
jns
xchg
or
shl
fidiv
daa
shl
dec
cmovbe
clc
aaa
push
adc
mov
loopne
scas
mov
push
fs
adc
in
bound
imul
mov
jmp
mov
pop
je
sub
(bad)
push
fwait
inc
push
cs
idiv
addr16
mov
dec
sub
imul
mov
mov
mov
dec
xor
iret
leave
mov
sbb
not
out
lahf
add
fs
mov
inc
sar
adc
dec
jae
xor
int3
call
test
mov
in
rcl
lods
dec
sbb
xor
js
dec
inc
or
icebp
push
fiadd
add
cmp
pop
shl
jae
mov
(bad)
and
push
daa
mov
pusha
int
mov
(bad)
mov
call
or
xor
xor
dec
cmp
nop
popa
call
jbe
mov
fsub
repz
dec
lods
jb
mov
addr16
in
pop
popa
or
test
ret
ficomp
dec
popa
mov
push
mov
xchg
nop
pop
cmc
xlat
pop
gs
add
dec
(bad)
test
lock
out
test
fcomi
xchg
push
mov
(bad)
aad
push
pop
mov
mov
push
hlt
push
jmp
jnp
call
adc
inc
ins
js
std
in
out
pop
mov
and
dec
call
ror
jg
imul
add
sub
shl
in
fmul
popa
sub
adc
fimul
pop
sar
pop
aas
lds
test
leave
scas
mov
gs
pop
scas
add
lock
cmp
xlat
mov
inc
fdiv
xor
cdq
cmp
data16
(bad)
or
mov
ret
cwde
cli
daa
adc
mov
and
mov
add
ficomp
aaa
mov
adc
or
sub
sbb
test
push
push
lahf
test
or
inc
mov
ret
cmp
pop
add
cmps
jns
fnstcw
xlat
sbb
cld
neg
xor
xchg
mov
dec
jae
jns
mov
retf
jecxz
cmp
test
cld
mov
adc
or
(bad)
call
mov
adc
and
adc
icebp
push
test
ins
and
add
cmp
mov
adc
inc
adc
int3
fld
jne
fistp
or
sub
mov
mov
es
xchg
movs
outs
fwait
cwde
and
scas
scas
sbb
xor
mov
inc
jg
dec
les
aam
or
mul
es
(bad)
sahf
fsubr
sbb
in
push
out
cmp
imul
jo
aad
mov
clc
mov
aam
lods
call
or
dec
test
mov
jnp
inc
mov
cs
fst
inc
or
(bad)
hlt
pop
xchg
movhps
jns
and
jmp
gs
and
push
cmp
or
test
jmp
push
mov
pusha
or
adc
sub
push
call
and
sti
ja
leave
jnp
mov
inc
lahf
and
(bad)
xchg
sbb
xor
ja
add
and
cmc
out
push
dec
dec
xor
push
and
cmp
and
(bad)
enter
jg
inc
inc
fxch
jecxz
sbb
dec
movs
inc
jmp
das
and
mov
repnz
sbb
mov
pop
add
dec
test
ror
and
sti
mov
lds
movs
popf
cli
sbb
adc
mov
pop
retf
test
sbb
daa
and
cld
jle
idiv
sub
jle
inc
data16
outs
add
add
out
sbb
loopne
lds
push
jp
cmp
push
xchg
mov
lahf
jecxz
or
pusha
adc
inc
pop
imul
xchg
mov
mov
repnz
jb
outs
loopne
imul
and
in
outs
sbb
loope
dec
push
test
push
ins
adc
not
in
mov
sbb
or
pop
mov
movs
add
pop
mov
gs
cwde
mov
neg
es
dec
cdq
lea
in
outs
fs
mov
rol
fs
rcl
mov
inc
out
mov
add
int
pop
sub
ficomp
jmp
dec
inc
cmp
jb
mov
lods
out
ss
fisttp
pop
adc
fwait
sti
movs
dec
rcr
outs
les
std
popa
xchg
sub
xlat
sbb
nop
js
test
in
sub
repnz
icebp
xchg
shl
and
jno
(bad)
iret
arpl
rol
dec
call
cmp
inc
xlat
call
loopne
add
es
pop
adc
jns
jae
ror
push
push
jns
push
pop
xchg
or
ins
pop
lock
jns
inc
fadd
bound
xor
sub
xchg
push
dec
mov
out
sub
in
push
retf
sti
inc
idiv
cmps
mov
aad
movs
div
sub
div
(bad)
jne
mov
adc
push
add
dec
and
adc
pop
aam
icebp
sbb
add
jbe
stos
into
or
pop
mov
cmp
loopne
push
repnz
and
sub
add
mov
clc
xor
adc
jo
xchg
out
fild
push
int3
sub
std
call
(bad)
adc
imul
push
inc
mov
icebp
jmp
or
sub
mov
mov
call
push
mov
mov
inc
pop
mov
sbb
or
lods
cmc
rcl
lea
cmc
dec
jne
adc
mov
fiadd
lea
push
(bad)
test
xor
mov
xchg
mov
or
mov
lea
pop
sbb
push
out
sbb
or
dec
in
imul
xchg
jl
(bad)
sti
je
out
icebp
loope
pop
cdq
fidiv
bound
adc
test
sub
(bad)
sti
jnp
fdiv
loopne
inc
mov
mov
xchg
add
or
cmp
aas
and
sub
ins
out
(bad)
jns
xchg
cmp
and
mov
fnstsw
mov
call
out
ret
ret
ret
js
rcr
mov
jg
jge
mov
cmp
add
ins
xchg
or
xor
cld
mov
xlat
(bad)
scas
pop
mov
cmp
loope
inc
pop
push
movs
fisttp
dec
data16
(bad)
paddb
sub
mov
sbb
push
out
(bad)
xchg
jmp
cli
jae
mov
mov
mov
push
mov
dec
dec
lods
or
inc
test
mov
test
mov
stc
out
sbb
lea
adc
pop
lods
das
imul
add
pop
or
xor
pusha
or
imul
les
inc
cmps
inc
inc
stc
sbb
and
cmp
mov
rcr
and
or
adc
dec
sar
mov
sub
jl
inc
push
push
sub
js
aas
sub
pop
stos
(bad)
jnp
mov
inc
sub
mov
push
mov
imul
mov
inc
or
xlat
add
inc
cmp
data16
fld
mov
les
shl
sbb
jnp
jns
jns
call
call
leave
(bad)
jne
jbe
mov
popa
lea
ds
outs
or
add
dec
rep
sbb
mov
mov
daa
cli
into
add
adc
stc
imul
sub
sub
shl
xor
fwait
cmc
cmp
pop
adc
inc
mov
dec
inc
add
push
movs
or
push
sub
not
xor
or
es
leave
inc
cmp
icebp
call
dec
or
pushf
add
sti
xchg
fisttp
outs
cmps
mov
push
add
dec
or
cs
add
cmp
stos
cmp
mov
mov
inc
push
scas
xor
movs
daa
pop
pop
repnz
in
shl
out
(bad)
popf
in
jmp
aam
in
pop
push
emms
out
inc
push
sub
into
lds
in
or
jae
rcl
call
mov
mov
inc
xchg
jle
mov
mov
add
and
adc
or
test
test
adc
ds
add
bound
fcmovne
fwait
mov
loop
idiv
and
sub
add
sub
inc
push
push
in
and
js
xchg
fs
loopne
cmp
and
adc
cwde
enter
ins
in
cdq
add
pop
nop
pop
fld
sub
and
push
or
xlat
call
cli
lock
cmc
inc
or
addr16
test
ret
stos
fdivr
out
(bad)
sar
out
dec
jns
pop
das
and
retf
aaa
mov
(bad)
mov
jno
mov
xchg
into
retf
test
push
mov
inc
xchg
add
xchg
push
imul
sti
xchg
lea
fisubr
pop
out
movs
dec
xchg
lahf
xchg
cmps
shl
ins
xchg
clc
dec
outs
cmps
or
jmp
pop
push
es
sbb
fcmovnb
add
das
xor
js
rcl
mov
pop
out
adc
test
aaa
cmp
jns
outs
scas
(bad)
dec
cmp
es
cmps
pop
outs
(bad)
jle
cmp
dec
jmp
mov
xor
dec
repnz
movs
mov
clc
and
pop
push
add
aam
sbb
test
mov
add
jp
cs
test
mov
jbe
jg
xor
(bad)
(bad)
ds
mov
add
or
jne
sbb
loope
shr
jne
dec
jecxz
pop
pop
iret
dec
movd
xor
add
aaa
jnp
aam
mov
fs
lock
inc
test
mov
mov
sub
ins
xor
inc
dec
in
dec
ds
daa
aas
in
es
xchg
fiadd
mov
mov
and
jg
push
int
inc
out
push
(bad)
loopne
xor
movs
add
cld
and
sahf
mov
mov
and
not
dec
dec
imul
pop
gs
movs
push
fld
lea
pop
jecxz
push
push
cmc
xchg
imul
fstp
and
iret
push
not
sub
pop
(bad)
loop
sbb
ret
test
push
scas
pushf
pop
cmps
dec
and
cdq
iret
sar
(bad)
fs
xchg
sbb
pop
add
retf
mov
stos
test
xor
sub
test
nop
push
jmp
in
test
and
push
sti
cmp
data16
into
loop
cmp
push
nop
cmp
lea
lods
ret
pop
mov
jp
jne
stc
mov
out
call
mov
pop
cli
mov
ret
das
xor
mov
cwde
jae
sbb
pop
inc
jmp
loopne
out
into
lock
inc
jmp
cmp
outs
jnp
sub
popf
imul
mov
movs
mov
call
adc
sbb
jns
inc
(bad)
cmp
imul
or
outs
add
mov
push
push
pop
aas
mov
pop
xchg
add
sbb
xor
cwde
xchg
repnz
push
xor
jmp
adc
cmp
aad
ss
leave
loopne
or
lods
mov
mov
adc
rcr
jle
rcl
pop
cld
stos
js
out
call
inc
mov
out
xchg
aam
lods
inc
lods
adc
imul
cld
sub
test
aaa
jmp
ss
adc
xor
mov
cmps
adc
adc
(bad)
daa
(bad)
loop
mov
mov
ja
jo
lahf
xor
sub
and
loope
fmul
mov
jne
mov
add
hlt
xchg
push
and
jne
or
jmp
xor
shl
pop
int
cmp
push
add
fdivrp
lea
jl
cwde
or
cmps
das
push
add
scas
push
repnz
sbb
pop
dec
gs
mov
jb
xor
in
mov
fistp
dec
push
leave
add
add
xchg
dec
std
test
or
ja
mov
push
aaa
mov
cmp
or
add
(bad)
(bad)
fdivr
xchg
and
leave
jo
mov
mov
fs
popa
lods
pop
sub
mov
xlat
retf
inc
mov
adc
stos
inc
cwde
pop
inc
out
shr
cmp
(bad)
in
or
jno
mov
ja
std
andnps
and
ss
xchg
pop
aad
cmp
stos
dec
jmp
push
mov
daa
pop
mov
add
fs
cli
adc
out
xchg
or
addr16
add
lods
hlt
sub
jmp
rcl
movntq
mov
mov
mov
cmps
mov
mov
xlat
mov
cmp
mov
mov
lds
inc
sub
in
adc
fcmovnu
sbb
retf
ss
cdq
ror
pop
jne
pop
out
pop
loope
xchg
das
xor
(bad)
fsub
inc
mov
mov
iret
mov
scas
in
mov
mov
cwde
lahf
test
sbb
dec
ret
jbe
pop
jle
fimul
cmps
(bad)
in
inc
add
dec
mov
rol
mov
aam
mov
(bad)
fucomip
mov
mov
xchg
or
stos
pusha
mov
jnp
xor
(bad)
xlat
sub
sar
lds
mov
pop
jns
adc
aas
xor
push
movs
adc
inc
push
push
cmp
pop
add
or
cmp
jnp
xchg
js
mov
movs
je
fldenv
xchg
jo
inc
push
dec
les
mov
adc
adc
int
cs
mov
mov
int
shl
mov
jnp
imul
adc
dec
dec
jae
(bad)
aaa
inc
dec
xchg
je
jp
(bad)
aad
in
xchg
(bad)
out
dec
push
xor
mov
shr
cmp
inc
data16
xchg
sub
sti
sbb
mov
and
jnp
in
lahf
mov
dec
mov
add
sub
or
sbb
loop
clc
mov
push
fild
movs
out
fadd
push
inc
dec
ins
push
jp
sbb
jl
ja
stc
jp
in
xchg
ret
icebp
jae
rcr
mov
mov
leave
(bad)
in
mov
int3
stos
jo
loop
rcl
outs
pop
xor
(bad)
push
nop
imul
inc
gs
cmp
or
pop
es
data16
loop
xchg
pushf
jecxz
jl
cmps
ror
aam
cdq
lock
test
lea
adc
movs
adc
pop
xor
(bad)
stos
sbb
cmp
jp
fidivr
dec
repz
inc
icebp
push
out
dec
fst
into
mov
pop
das
jmp
loope
imul
inc
cs
sbb
jbe
stos
lds
inc
ret
loop
(bad)
mov
dec
adc
sbb
les
add
repz
mov
inc
into
sub
cli
aaa
cmp
test
or
jmp
ds
mov
sub
scas
call
and
mov
and
addr16
jle
jmp
mov
dec
std
and
push
iret
mov
add
sbb
call
adc
cwde
ror
sub
adc
popa
fimul
xchg
les
data16
sbb
xchg
push
int3
adc
fstp
xor
adc
xchg
push
add
hlt
lock
rcl
pushf
xor
(bad)
add
xor
pop
pop
pop
pop
and
xor
(bad)
push
cdq
or
leave
inc
sti
push
adc
into
repnz
xor
push
bound
xchg
cmp
mov
push
dec
fsubr
test
push
mov
mov
xor
fwait
ss
shl
mov
dec
mov
repnz
bound
scas
in
pop
sahf
xchg
loop
and
shr
cld
pop
or
pop
call
cdq
(bad)
adc
(bad)
xor
adc
mov
in
sahf
sbb
adc
clc
push
(bad)
cmps
jae
int
pop
fimul
jne
adc
shr
dec
fbstp
add
and
and
sbb
xchg
mov
dec
mov
aas
dec
das
jo
aaa
test
aad
ds
jle
loopne
cmp
add
lods
cdq
lock
cmp
aad
popa
adc
xlat
loop
mov
cld
push
pop
out
xchg
mov
inc
cmp
lds
or
popf
stc
inc
aas
or
sbb
and
or
pop
push
movs
pop
mov
repnz
cs
push
ret
loop
xchg
outs
pop
inc
js
fidivr
mov
push
fidivr
stos
les
jmp
pushf
xchg
into
clc
pop
fs
imul
int
mov
pop
gs
rol
arpl
mov
ins
mov
ret
or
jmp
mov
pop
fidiv
and
pop
ss
lea
sub
jp
pop
cmps
imul
and
cmovb
jecxz
dec
mov
or
xor
sub
adc
test
imul
rcl
adc
and
mov
mov
adc
ds
retf
jnp
jae
sbb
mov
js
(bad)
jg
inc
mov
jae
pushf
jae
lods
test
inc
pop
or
test
fs
mov
cmp
add
inc
jmp
aam
jno
mov
out
lahf
pusha
push
jae
jbe
das
lahf
dec
pop
popa
rol
cmp
jle
push
in
mov
mov
adc
repnz
add
das
adc
xor
lahf
adc
dec
fst
icebp
jecxz
or
xchg
clc
scas
aad
inc
push
and
mov
push
and
jo
dec
jmp
rcr
add
jnp
xlat
mov
or
or
das
add
pop
pop
outs
sub
xchg
(bad)
sub
in
jge
inc
add
add
ins
jmp
retf
cmp
jmp
lahf
mov
test
rol
enter
stos
push
jmp
or
mov
in
pushw
xor
loope
ror
adc
cli
mov
sahf
cs
icebp
mov
adc
lea
jnp
int3
xor
add
mov
aas
fist
mov
jge
fmul
test
xor
mov
or
shr
out
dec
mov
movs
xchg
lea
or
add
out
pusha
cmp
sub
loop
sub
pop
loopne
inc
lds
xlat
(bad)
dec
fwait
push
add
fiadd
sub
(bad)
out
xor
and
pushf
xlat
cmp
mov
cmc
pop
stos
adc
das
call
jle
mov
ds
pop
jbe
into
ret
sub
adc
nop
popf
mov
fdivr
mov
xor
add
push
mov
push
dec
mov
push
ins
daa
es
cmps
dec
jb
dec
inc
pusha
jg
shl
retf
add
add
xlat
sub
mov
loopne
sub
std
retf
jg
pushf
push
cwde
jge
pop
cs
inc
cld
ins
movs
(bad)
xor
sbb
out
mov
repnz
dec
mov
retf
mov
sbb
xchg
fwait
pop
jecxz
mov
ins
(bad)
loop
cdq
rol
mov
repnz
sbb
loop
into
mov
push
jb
or
iret
push
sti
dec
adc
scas
inc
or
cld
mov
in
pop
outs
inc
shr
sbb
out
xchg
push
and
push
and
shl
fimul
pop
outs
cmp
call
dec
add
movs
and
inc
mov
nop
sub
(bad)
cmp
std
scas
inc
dec
jbe
dec
sub
sub
es
mov
inc
jnp
jne
push
jae
mov
pop
pop
mov
push
cmp
les
sbb
mov
ret
aam
fdivr
sbb
nop
mov
and
std
dec
xchg
popf
mov
xor
mov
xchg
stc
push
rcr
mov
inc
mov
call
pusha
dec
enter
xchg
movs
sub
ret
mov
lock
xchg
sub
les
mov
add
jg
movs
test
pop
cmp
jp
sti
add
fbstp
bound
mov
xor
test
jbe
mov
rol
ror
inc
sar
add
scas
mov
cmp
sbb
es
jne
ret
dec
frstor
shr
je
xor
cs
(bad)
jmp
jmp
jle
fmul
nop
shl
les
imul
or
jae
aad
(bad)
stos
jns
sbb
out
inc
rcl
lods
(bad)
aam
cmp
jecxz
stos
and
inc
int
dec
pop
mov
test
rcr
xchg
pop
xchg
jae
jbe
adc
mov
clc
out
inc
adc
shr
shl
rol
mov
arpl
cmp
inc
jge
std
mov
stos
(bad)
fsub
in
hlt
push
sub
cmc
ret
cmp
stc
shr
jg
scas
xchg
push
test
addr16
xlat
push
and
ds
adc
and
push
stc
ret
rcl
or
(bad)
fiadd
fbld
mov
outs
out
push
test
jle
jp
sbb
cdq
test
xchg
or
aad
xchg
or
push
mov
in
inc
pop
ins
jecxz
sahf
sub
mov
add
shl
sub
xchg
mov
daa
mov
add
rol
data16
xchg
or
and
lods
mov
xchg
or
cdq
rcr
vfmsub213pd
int3
jmp
repz
cmp
push
das
sub
in
mov
mov
pop
mov
fyl2xp1
or
mov
(bad)
fwait
test
jl
adc
add
and
inc
jge
or
in
cmp
outs
pop
retf
out
mov
xor
cmps
daa
pop
dec
pop
(bad)
push
icebp
mov
(bad)
jp
pop
dec
lods
inc
loopne
cmp
and
xlat
fwait
outs
ficom
ins
rcl
fcmovb
jns
sub
fs
push
outs
sub
stc
cmp
aad
idiv
push
push
int
fs
dec
mov
dec
call
jnp
es
imul
mov
out
fs
pushf
es
pop
pop
call
jae
popf
push
pop
push
dec
xchg
ficom
stos
enter
cdq
cmps
lods
movs
push
jbe
or
jns
rcl
clc
xchg
int
out
push
int3
(bad)
mov
cmp
inc
call
leave
inc
sbb
and
in
dec
jbe
cdq
sbb
pop
jnp
sub
or
in
cdq
and
rol
push
(bad)
and
fild
xor
int
adc
jecxz
xor
es
in
sbb
mov
mov
sub
lahf
cwde
sub
loope
(bad)
jmp
movs
and
adc
or
adc
mov
call
inc
imul
out
icebp
ss
cmps
pusha
add
popa
jb
xchg
adc
loop
mov
shr
fimul
mov
lahf
cdq
push
and
fist
xor
xor
mov
sbb
xchg
mov
loop
push
vcvtss2sd
and
dec
fld
pop
sub
push
cli
stos
xlat
push
retf
aad
(bad)
mov
clc
dec
cld
shl
mov
enter
mov
jecxz
adc
in
gs
mov
ins
jmp
fsub
mov
jmp
imul
inc
lds
ja
shl
adc
faddp
ret
(bad)
mov
or
pop
mov
mul
cmp
xor
cwde
mov
fistp
cmp
sbb
fidiv
dec
jne
mov
add
inc
std
and
cli
(bad)
(bad)
in
sbb
jmp
mov
retf
les
cmp
jmp
mov
cmps
das
int3
sub
gs
fld
test
hlt
jecxz
icebp
mov
aam
push
mov
sub
jne
jmp
test
mov
cmc
repnz
fsub
xchg
out
jbe
(bad)
add
ja
dec
xor
inc
leave
push
out
xchg
sub
jb
mov
ror
xor
mov
pop
test
pop
mov
rol
sub
cmps
ret
mov
or
inc
rcr
iret
shr
sti
in
and
sbb
push
add
div
int3
push
ror
xchg
fist
cmp
cmp
or
sub
or
fdivr
ror
loop
hlt
and
ds
cmp
leave
add
push
pop
jge
xchg
mov
mov
arpl
movs
popf
jno
sbb
and
dec
mov
pop
add
icebp
rol
inc
out
pop
xchg
inc
sahf
mov
sub
jns
popf
mov
mov
cmp
hlt
dec
push
aaa
and
vhsubpd
cli
in
dec
dec
pop
mov
mov
sub
push
adc
clc
adc
dec
lods
jl
loope
xor
mov
or
jb
daa
mov
xor
repz
sar
jp
pop
outs
inc
jmp
pop
out
mov
in
cmc
stos
jae
scas
shl
mov
test
mov
movs
ror
lahf
dec
sbb
sub
and
push
xchg
hlt
ins
sar
imul
repz
out
add
movs
bound
aam
jg
xchg
inc
adc
mov
daa
loope
clc
push
jmp
push
(bad)
hlt
or
lea
ins
leave
push
js
ins
inc
cmp
mov
test
dec
sbb
out
lods
sbb
mov
sub
jmp
out
ins
cs
xor
leave
ins
mov
inc
out
lahf
xchg
xchg
rcl
add
popa
jle
repz
inc
aam
jmp
imul
sub
mov
aam
pop
stos
aad
jo
lods
out
dec
or
lea
sub
(bad)
xchg
pop
sub
mov
pop
adc
or
jns
mov
pop
sbb
xchg
sbb
(bad)
cdq
(bad)
ficom
(bad)
mov
loopne
inc
loop
push
cwde
pusha
fadd
out
inc
loope
cmps
rcl
mov
push
pop
xor
fsub
xchg
(bad)
mov
aaa
and
das
jno
xchg
and
or
popf
push
clc
cmp
pop
jecxz
jge
pushf
imul
mov
dec
retf
shl
test
xchg
mov
clc
xor
and
jbe
mov
xchg
(bad)
shl
cmp
movs
jmp
lods
mov
dec
cmp
mov
in
mov
mov
push
pop
push
test
ret
jno
fdiv
adc
xor
lods
xchg
fldcw
popf
enter
retf
fucom
lods
inc
xor
ja
int
(bad)
ds
pop
mov
movs
xchg
cmp
shl
push
xor
cs
std
jae
push
pop
jecxz
movs
int3
out
ret
push
stos
xchg
(bad)
arpl
adc
or
pop
retf
xchg
pusha
fwait
bound
in
lods
rep
mov
xchg
nop
outs
lock
rcl
sub
clc
int3
and
(bad)
pop
push
icebp
pop
push
or
xchg
hlt
out
pop
pusha
cmp
fiadd
cmp
mov
mov
xchg
and
mov
stos
jp
dec
mov
jge
mov
fsubr
pop
dec
popw
lds
repz
pop
iret
loope
sar
sbb
mov
mov
fld
dec
stos
div
mov
dec
xor
sahf
nop
and
adc
scas
shl
add
xchg
cdq
jp
inc
pop
jmp
clc
mov
and
popf
jl
fs
xor
mov
push
fdivr
xchg
es
adc
imul
xor
xchg
mov
push
test
popa
iret
shr
inc
cli
popa
enter
push
jmp
xchg
popa
loopne
mul
or
mov
pusha
into
and
inc
cmp
iret
ja
mov
mov
xchg
mov
push
push
pop
jmp
mov
xchg
xor
cmp
mov
iret
pop
pop
in
jmp
fldenv
and
sub
hlt
icebp
cs
inc
jge
in
push
ror
lods
mov
aas
or
or
push
loope
push
scas
mov
(bad)
and
sbb
repnz
clc
xor
cwde
jp
test
std
loopne
adc
add
lea
mov
dec
outs
in
mov
fidivr
mov
mov
mov
jo
mov
(bad)
cmc
dec
es
push
sub
xchg
sbb
fbld
adc
adc
retf
je
dec
mov
outs
retf
in
cld
and
dec
(bad)
push
scas
add
mov
lods
clc
pop
je
cmp
(bad)
pop
mov
mov
mov
rcr
test
jmp
loop
inc
xchg
mov
ja
ret
mov
in
sar
jne
mov
(bad)
pop
ret
test
pop
out
out
into
inc
mov
xchg
test
cld
dec
and
fs
daa
add
mov
sbb
in
stc
popf
sub
stos
xor
and
sub
test
ins
arpl
repz
neg
aad
lods
les
xchg
mov
(bad)
mov
aad
leave
jmp
dec
xor
sub
nop
jno
loop
jmp
mov
add
jbe
jbe
mov
jp
jp
fstp
push
imul
aam
xchg
loope
out
lds
dec
jg
cmp
dec
stc
bound
ins
dec
add
inc
(bad)
push
je
imul
lock
stos
mov
sbb
dec
sub
je
mov
mov
lds
mov
xlat
mov
das
aaa
sbb
mov
retf
sub
mov
test
cld
jnp
inc
scas
loope
push
test
adc
and
jle
dec
cli
mov
pop
mov
test
movs
(bad)
pop
sub
pop
sub
pop
movups
inc
int
jmp
pop
jo
jmp
imul
mov
mov
mov
pop
outs
mov
pop
adc
sub
cwde
inc
mov
bound
xlat
push
adc
fwait
out
movs
and
test
lods
dec
dec
and
mov
imul
cs
cmc
ja
fidiv
mov
sbb
xchg
mov
fld
repz
jle
clc
ins
ins
adc
(bad)
ret
push
mov
sbb
jbe
mov
enter
addr16
add
sub
sbb
mov
sbb
addr16
pop
jo
adc
jg
fild
jl
jle
ret
jno
adc
outs
push
je
dec
pop
or
cdq
into
xchg
test
fistp
pop
(bad)
xor
pop
rcl
int3
mov
icebp
or
cli
sub
push
rcl
xor
out
mov
sbb
iret
gs
bound
fidivr
call
xchg
push
sti
fdiv
daa
retf
add
mov
lock
mov
clc
paddsw
loop
add
pop
scas
pusha
jns
dec
jbe
nop
movs
int3
cmc
pop
mov
mov
cs
mov
out
add
cmps
cmc
xor
inc
out
cmps
in
in
rcl
neg
sub
mov
cmps
adc
fstp
push
add
add
jecxz
push
sub
xchg
jne
gs
out
dec
push
add
(bad)
add
mov
cmp
push
lahf
jmp
popf
pop
loop
test
sbb
inc
add
lea
pop
xchg
test
add
push
test
es
mov
dec
xchg
and
dec
mov
jns
cmp
mov
inc
fistp
aaa
push
or
jge
in
popf
in
scas
lods
movs
sbb
gs
jle
cmp
cmp
neg
mov
mov
mov
dec
ret
pop
xlat
add
add
into
fidiv
out
fs
fbstp
or
dec
adc
pop
adc
and
fwait
push
dec
push
ret
xchg
sbb
call
les
rol
lock
sti
rcl
or
xor
push
int3
std
ins
das
bound
jmp
jmp
sti
xchg
sti
adc
mov
fiadd
pop
dec
shl
cli
sbb
rcr
mov
(bad)
loop
xchg
lds
sbb
lahf
or
or
call
jns
pavgb
out
imul
add
and
dec
aas
aaa
retf
dec
jb
movs
scas
mov
popa
jns
cmp
out
retf
cmp
mov
sub
(bad)
mov
loopne
gs
sahf
js
lahf
fdiv
mov
loope
cmp
ror
jle
pop
out
sub
pop
cmp
fbstp
fist
add
dec
jb
fld
xchg
daa
cs
sub
in
xchg
(bad)
xchg
test
push
cmp
push
sub
mov
inc
dec
mov
push
push
div
jecxz
js
pop
jnp
jg
ror
lahf
or
ins
xchg
fldcw
mov
pop
adc
sub
jg
sbb
dec
sbb
enter
mov
sub
sar
(bad)
add
xor
add
mov
or
mov
clc
mov
add
out
mov
ds
or
and
push
jg
push
sub
or
dec
(bad)
jge
outs
or
xchg
mov
adc
scas
or
pop
(bad)
mov
mov
leave
fadd
pop
add
pop
adc
cmc
pop
add
push
into
sub
jae
mov
xor
sub
sub
add
mov
sbb
jle
call
aad
mov
jmp
sub
ficom
cmp
(bad)
shl
dec
mov
add
cmps
bound
mov
inc
fisttp
leave
out
pop
xchg
aaa
jmp
or
xor
or
cmps
inc
(bad)
and
iret
sub
jl
xchg
test
xchg
add
mov
xchg
scas
(bad)
outs
retf
add
pusha
mov
stc
add
sbb
retf
int
inc
mov
das
das
add
mov
xchg
out
mov
(bad)
in
scas
sbb
mov
push
xor
and
jae
sar
lock
xchg
cmp
cmp
ja
retf
(bad)
call
jnp
lods
jecxz
mov
sub
push
imul
adc
fldenv
daa
dec
and
pop
and
in
shr
jge
jo
xlat
mov
push
jo
leave
pushf
xchg
xlat
into
sahf
(bad)
(bad)
mul
aaa
sbb
inc
mov
repnz
mov
mov
sub
pop
mov
retf
add
xor
leave
dec
enter
lea
sbb
sbb
daa
or
hlt
jae
mov
mov
nop
fisttp
pop
loopne
pop
push
cmc
loopne
mov
cmp
icebp
push
or
popa
push
and
dec
sub
cmc
repz
in
popa
loopne
cdq
mov
je
and
popf
mov
jmp
pop
and
int3
xchg
mov
lea
mov
hlt
stc
ret
pop
arpl
(bad)
jp
imul
ins
xchg
and
xchg
out
fdiv
or
xor
mov
es
not
pop
test
xchg
xor
leave
ss
dec
inc
and
pop
and
sar
pop
mov
in
xchg
idiv
mov
lods
xor
cs
lods
cmps
repnz
sbb
loope
inc
sub
adc
xor
mov
push
and
or
cmp
ret
jecxz
jecxz
sbb
ja
paddd
mov
sti
xor
jnp
test
and
and
mov
mov
imul
pop
adc
mov
cmp
add
or
out
ins
ret
sar
ja
rcr
mov
mov
sbb
imul
shr
out
(bad)
jle
out
cmp
and
jle
pop
std
jmp
jle
inc
(bad)
pop
rcr
(bad)
enter
and
shl
push
inc
rcl
sbb
in
sbb
mov
jb
sub
sub
adc
add
mov
or
(bad)
cmp
fcomp
add
add
jne
pop
add
into
dec
gs
outs
icebp
sbb
mov
in
cmp
sub
jg
int
adc
daa
ror
or
sub
movs
sbb
sbb
(bad)
jnp
mov
push
mov
push
mov
mov
jl
les
pop
imul
xor
lock
(bad)
mov
pop
jp
aaa
inc
jno
xor
pop
(bad)
add
sub
pop
jno
pop
jno
xchg
push
mov
adc
push
cmp
bound
mov
cwde
or
div
mov
dec
pop
mov
js
mov
call
mov
mov
sbb
pop
add
nop
dec
inc
pop
xchg
add
xor
outs
dec
call
mov
mov
push
cmp
xor
sub
test
fld
call
enter
ret
push
das
test
cmp
cmp
repnz
adc
mov
cmp
scas
ja
fadd
imul
pusha
sub
mov
ret
fwait
imul
or
(bad)
sbb
pop
cmps
jp
mov
mov
sub
mov
xchg
push
sbb
cmc
fs
jns
ss
daa
repnz
push
movs
fadd
lahf
loop
xchg
mov
mov
icebp
mov
hlt
adc
(bad)
data16
mov
xchg
mov
push
jnp
inc
adc
stos
rol
mov
int
sub
ss
je
sub
sbb
repnz
dec
lock
mov
pop
popa
ins
pop
add
outs
xchg
push
inc
mov
inc
push
nop
push
mov
add
or
es
cdq
pusha
test
fadd
sti
xor
(bad)
jmp
mov
pop
aad
imul
imul
add
fcomp
inc
xchg
scas
loopne
shl
dec
mov
sti
scas
inc
cdq
mov
jmp
mov
push
sbb
shr
dec
push
mov
pop
add
and
ret
mov
fmul
jae
std
aas
jae
sub
lods
inc
or
cmc
test
mov
or
sti
cld
test
cmp
std
loopne
lock
mov
sbb
mov
fbstp
ror
cmp
pop
and
movs
shl
fs
mov
(bad)
mov
push
cli
cmp
add
mov
mov
aad
in
ret
retf
mov
jo
retf
mov
xlat
add
cmp
xchg
mov
loopne
cli
adc
mov
mov
mov
jg
add
or
mov
jo
push
outs
mov
push
inc
sub
push
bound
pop
xchg
dec
sub
inc
xchg
xor
das
bound
out
xor
adc
mov
js
inc
mov
std
loop
stc
mov
sub
aas
inc
(bad)
jbe
push
daa
pop
push
xchg
fiadd
out
mov
push
pop
and
mov
ret
push
test
jo
aam
lea
sub
jge
idiv
mov
inc
cwde
mov
sbb
into
lahf
call
in
cmp
dec
mov
ins
sbb
test
pop
shl
pop
adc
mov
mov
push
dec
fild
test
mov
rcr
lds
mov
sar
push
adc
int
sbb
dec
shl
mov
adc
adc
xchg
add
mov
sbb
xor
or
pop
cli
clc
inc
cwde
adc
sub
bound
leave
popf
push
xlat
push
or
dec
cdq
fsubr
imul
jmp
and
sub
pop
pop
arpl
aaa
mov
repz
inc
sbb
xchg
xchg
dec
cs
dec
and
loop
jp
mov
imul
jnp
add
or
xlat
mov
outs
mov
jo
cmp
adc
sbb
mov
std
(bad)
push
jno
jle
push
fwait
ss
pop
cdq
add
pop
lahf
xor
aam
mov
add
ja
pop
and
sbb
fnstcw
push
cmovl
aam
je
call
mov
dec
add
push
stos
lock
cmp
xchg
repnz
shl
cmps
xchg
xchg
cdq
mov
jge
dec
ds
xor
mov
adc
in
cmp
and
mov
fs
pusha
jmp
ins
mov
push
out
adc
stos
idiv
leave
dec
push
out
adc
jg
rol
or
add
scas
mov
cmc
pop
cmp
and
mov
mov
or
cmp
stc
sbb
sbb
mov
push
cli
add
mov
mov
lea
lods
call
or
xor
jge
stc
in
ja
out
test
call
ret
or
out
jecxz
jg
xor
dec
sub
imul
pusha
dec
cli
jmp
sub
pop
loop
mov
push
push
aaa
jnp
stos
and
popf
and
imul
loopne
cwde
mov
stos
cmps
call
and
mov
dec
iret
mov
mov
arpl
cmp
fnstsw
jmp
dec
je
fwait
cmp
cli
mov
jne
or
sbb
in
jle
jae
out
adc
lods
dec
xchg
(bad)
jmp
jmp
adc
pusha
xor
out
leave
js
pop
and
cwde
mov
hlt
cmp
in
adc
repnz
lock
and
rcl
sub
sbb
scas
popf
call
xchg
add
ds
pop
sbb
cmp
adc
jl
cmc
sub
xchg
add
ret
adc
jmp
clc
stos
or
aad
cmps
xchg
in
dec
adc
push
cli
sbb
lea
inc
pop
outs
(bad)
imul
jns
or
retf
clc
mov
mov
sahf
aas
xchg
rcr
push
jo
mov
pop
cmp
adc
mov
stos
sub
iret
mov
iret
dec
ja
lods
push
out
cmp
xchg
xchg
sbb
call
push
mov
icebp
jae
dec
push
cmps
das
pop
inc
add
pop
cmp
sbb
popa
xchg
xchg
cli
movs
(bad)
jmp
sbb
push
nop
sbb
and
ds
jecxz
ret
lea
xchg
stos
inc
adc
ror
jb
push
xchg
jae
adc
inc
pop
pop
or
mov
mov
loope
pushf
popa
fild
iret
test
test
sbb
shl
push
sub
xchg
push
lea
arpl
sar
adc
stos
mov
in
loop
mov
sub
mov
lea
xchg
shr
jmp
(bad)
cli
rcl
mov
iret
arpl
push
fwait
retf
jmp
pop
xor
icebp
sahf
inc
dec
(bad)
cmc
loope
ss
push
(bad)
lods
cdq
pusha
ret
(bad)
mov
out
inc
mov
in
dec
jle
add
aaa
loopne
iret
adc
pop
mov
adc
xor
retf
outs
out
cmps
std
inc
xchg
jno
inc
rcr
fsubr
xor
jp
xchg
aas
test
inc
sbb
xor
sub
mov
sbb
shl
mov
pusha
mov
or
jp
popa
and
inc
stos
sti
scas
mov
dec
cmp
jge
cmp
pop
test
jne
jl
pop
loop
aaa
pop
retf
aaa
fisub
xor
xchg
shl
mov
cmp
dec
(bad)
dec
adc
outs
cwde
push
inc
in
pop
or
retf
imul
test
cmps
test
inc
popa
das
es
sbb
jmp
or
jecxz
push
ds
cmp
pop
in
jo
jnp
inc
ss
pop
sub
pop
lea
mov
pop
or
rol
mov
sub
sub
xor
enter
(bad)
pop
cmc
xchg
call
adc
xlat
hlt
in
dec
or
(bad)
rcl
or
adc
sub
std
sub
inc
or
adc
stos
or
dec
shr
nop
dec
jle
rol
rcl
xor
adc
dec
pop
rcl
adc
idiv
fnstenv
pop
sahf
in
push
iret
cmp
xor
inc
loope
jns
push
stc
popf
imul
retf
jge
inc
or
retf
or
jno
jmp
test
xlat
sti
or
mov
out
ss
jbe
sar
adc
jle
loop
inc
fistp
test
inc
or
mov
xchg
ficom
ret
in
dec
imul
mov
cwde
pop
jo
daa
and
cmp
mov
cmps
dec
dec
xlat
inc
dec
inc
jb
in
sbb
imul
not
je
out
and
mov
inc
shr
aam
xlat
pop
je
ffree
out
imul
popf
int3
test
lock
mov
adc
inc
mov
(bad)
pop
in
inc
push
pop
adc
je
inc
dec
mov
or
adc
jle
push
(bad)
mov
out
inc
inc
adc
add
imul
pop
jge
sahf
sbb
add
lahf
int
xchg
lahf
mov
or
ret
dec
outs
jbe
sub
sub
jecxz
shl
xchg
cs
cmp
sbb
and
xchg
stc
stos
pop
out
xchg
stos
xchg
or
mov
xchg
loope
pop
push
inc
pop
jge
or
aaa
xor
stos
pop
dec
sbb
xor
push
jns
js
sbb
xor
mov
xchg
sti
pop
stc
cmp
adc
movs
sbb
jns
jmp
enter
sub
add
jp
add
sub
cmp
xor
test
push
bound
int3
cmps
ins
push
pop
fwait
jge
inc
test
and
mov
mov
clc
lods
fs
cli
sar
ins
addr16
pop
mov
xor
jge
loope
iret
dec
xchg
xor
sbb
iret
(bad)
jae
cwde
out
aam
jmp
mov
ds
nop
aaa
adc
mul
cli
adc
repz
xchg
aam
movs
xchg
mov
mov
aas
xchg
mov
pop
loop
sbb
(bad)
icebp
dec
add
sbb
mov
xchg
ret
iret
push
jne
or
sbb
mov
sar
sub
clc
push
mov
pop
push
enter
jns
mov
dec
call
jg
ret
or
jmp
jmp
(bad)
cs
jns
(bad)
aad
jmp
or
in
dec
test
aam
dec
call
pop
mov
imul
push
pushf
loope
jae
pop
add
fstp
pop
mov
iret
sub
data16
adc
out
cmc
scas
dec
popf
add
mov
shl
(bad)
xchg
inc
std
inc
bound
push
gs
inc
cmp
mov
call
out
add
pop
cmp
pushf
cs
mov
mov
cmp
inc
dec
xchg
mov
or
jmp
bound
call
push
out
xchg
mov
mov
xchg
xchg
mov
stos
fistp
outs
xor
(bad)
aaa
stos
or
add
jecxz
ret
mov
ror
ins
loop
pop
fs
neg
cmp
cdq
popa
mov
jl
fwait
stc
retf
push
jno
adc
mov
cmp
not
mov
test
push
xchg
pop
mov
in
iret
jbe
sbb
cmp
and
loop
call
fdiv
and
fnstenv
adc
mov
pop
jns
repz
jb
lds
jle
jle
ror
push
sub
mov
xor
mov
cmp
into
pop
bound
out
stos
sub
not
shl
out
retf
push
pop
nop
(bad)
pop
mov
shl
pop
cdq
push
mov
(bad)
ficom
mov
scas
int3
cmp
xchg
mov
loop
dec
retf
ins
sbb
test
fist
iret
xlat
jae
and
push
and
lods
push
out
das
or
bound
pusha
mov
pop
(bad)
pop
lods
add
jmp
scas
jp
push
jae
cmps
sub
push
xor
out
push
addr16
mov
sub
sbb
mov
retf
(bad)
sub
pop
in
jg
mov
jns
mov
or
ror
mov
retf
je
push
shrd
mov
xchg
jmp
dec
out
sbb
fs
push
ficomp
push
jge
jp
lahf
and
jl
(bad)
enter
pop
cmp
shl
sub
and
gs
(bad)
(bad)
cld
fst
cmp
and
cmc
rcr
hlt
ror
add
retf
sub
dec
sar
js
dec
add
pop
cmc
add
lds
cli
out
cmp
adc
repz
jp
inc
lds
ss
clc
push
call
test
dec
aad
cmp
or
dec
test
popa
sahf
push
data16
stos
aam
jnp
fisttp
leave
add
mov
mov
add
xchg
mov
mov
stos
movs
jl
sbb
stos
jbe
mov
leave
(bad)
fild
iret
inc
xlat
inc
add
lods
pushf
jmp
daa
outs
ret
ins
test
in
fld
dec
or
sub
rol
pushf
dec
mov
mov
jno
inc
fiadd
sub
loope
mov
imul
jb
sub
jmp
cwde
fwait
mov
pusha
cld
fisub
loop
pusha
fs
mov
jne
ins
(bad)
repnz
imul
jmp
repnz
push
fcom
sahf
add
xchg
stos
mov
lods
scas
aad
sbb
xor
push
xor
ficomp
and
cmp
data16
adc
push
inc
and
ds
in
pusha
mov
pop
mov
mov
retf
in
mov
dec
pushf
(bad)
jo
pop
mov
push
shr
sbb
imul
dec
xor
pop
adc
int
inc
adc
and
dec
aam
int3
out
inc
mov
inc
dec
jge
das
test
mov
and
xor
ret
loope
push
add
add
mov
fnstsw
nop
mov
fwait
mov
aas
jmp
dec
repnz
mov
pop
mov
cmp
je
out
dec
jmp
loopne
enter
pop
jbe
test
rcr
(bad)
push
pusha
inc
repnz
mov
sbb
into
fist
(bad)
jmp
stos
and
fstp
jo
adc
jne
ins
fidiv
lods
cmp
jle
and
(bad)
in
inc
and
hlt
inc
adc
xchg
add
test
cmp
dec
mov
jo
push
and
jo
cwde
bound
stc
ja
(bad)
push
retf
pop
dec
outs
xor
shl
and
or
imul
mov
mov
fisub
inc
jno
hlt
inc
ret
mov
arpl
jle
adc
clc
push
ret
inc
mov
jp
and
mov
leave
pop
int
push
push
jg
dec
fcmovnb
inc
cmp
pop
pop
mov
fwait
or
add
outs
jno
loope
adc
scas
mov
test
xlat
dec
sti
cld
imul
int3
and
into
(bad)
and
jne
cmp
std
and
imul
ins
out
mov
in
sub
xchg
fcomp
mov
test
sti
mov
sbb
cmps
inc
sar
inc
leave
stos
and
aam
stos
test
div
jmp
sbb
fs
mov
dec
push
jns
popa
je
dec
cmp
adc
add
xlat
mov
sti
or
mov
add
les
xor
cli
and
xchg
ss
xor
or
stos
(bad)
xchg
xor
mov
mov
inc
xchg
inc
cmp
push
jb
cdq
enter
xlat
mov
sti
jle
ret
adc
loop
and
ret
push
idiv
sub
inc
add
jno
mov
push
push
cmps
xchg
repz
pop
call
ds
mov
jcxz
mov
jno
cmp
leave
add
push
adc
xor
pop
movs
dec
sbb
add
xchg
shl
jnp
pop
sbb
pusha
repz
imul
sub
mov
dec
test
(bad)
mov
mov
shr
dec
jne
cld
shl
xor
xor
lods
jb
dec
into
push
call
inc
mov
fisttp
xor
(bad)
sub
xor
stos
imul
test
scas
push
push
jmp
mov
sub
mov
outs
pop
add
ret
jle
adc
cmps
xchg
icebp
or
xchg
or
repz
sub
ret
movsx
dec
add
mov
xor
std
js
std
jecxz
inc
xchg
ds
mov
gs
je
out
push
add
into
fst
dec
push
add
jno
xor
neg
das
mov
fsub
dec
aam
mov
mov
xor
lahf
imul
xchg
mov
xor
xchg
push
push
lods
jnp
cmc
xor
imul
mov
adc
sti
xchg
dec
test
sbb
enter
aad
icebp
xor
adc
push
sbb
mov
mov
jle
enter
push
retf
mov
fisub
jmp
out
js
mov
ret
push
mov
jg
test
clc
xchg
nop
fs
psubq
inc
scas
and
xchg
inc
loop
pushf
and
lods
mov
sub
sbb
sbb
push
cs
pusha
sub
into
sbb
fs
lods
ret
mov
push
das
cs
retf
rcl
mov
jge
dec
jl
retf
sub
fnstenv
dec
call
sub
fimul
or
bound
sub
sub
addr16
dec
sbb
ret
pop
mov
aam
inc
sub
mov
psllw
xor
cmp
je
iret
or
pop
popf
lock
shl
cmp
fsub
or
pushf
lods
loope
lods
rcr
sbb
dec
adc
inc
push
mov
inc
leave
imul
push
rcl
into
jecxz
mov
mov
dec
add
cmp
xchg
xchg
lds
xor
leave
jmp
movs
or
and
add
sti
call
dec
dec
sub
test
jmp
add
and
jmp
daa
dec
fcomp
neg
enter
movs
jmp
jl
icebp
push
mov
push
pcmpeqb
or
add
in
sub
enter
adc
mov
inc
movs
lods
out
lods
and
inc
mov
cmps
push
xchg
mov
retf
retf
cdq
xor
mov
cdq
fsubr
in
inc
sub
jmp
das
inc
lods
lahf
push
xor
dec
jno
xor
xor
adc
push
repnz
adc
add
das
xchg
scas
cli
dec
out
sub
add
dec
in
mov
and
das
rcl
ficomp
cwde
add
data16
call
pop
jg
imul
add
sbb
add
add
cld
pop
fwait
mov
addr16
jo
adc
push
movs
(bad)
cli
cdq
adc
fadd
jmp
inc
jecxz
clc
jae
push
fs
jecxz
loop
and
jecxz
retf
in
lods
pop
in
out
dec
movs
inc
data16
nop
sub
fist
push
and
shl
xor
jl
xchg
pop
movs
out
push
push
rcr
and
jns
sbb
xor
inc
into
and
adc
fiadd
jg
jbe
or
ins
cmc
into
movs
lods
addr16
or
ins
jg
add
mov
jmp
inc
inc
sti
xor
imul
and
and
cmp
repz
loopne
int
push
inc
pop
(bad)
mov
lds
push
(bad)
mov
arpl
ds
jb
xor
dec
jecxz
mov
test
and
mov
cs
pop
xchg
repnz
into
pop
das
call
lea
stc
add
adc
adc
nop
mul
jo
cs
inc
jbe
das
mov
xor
sub
cmp
fisub
stc
ins
stos
ins
sbb
adc
daa
adc
hlt
fwait
add
add
mov
add
bound
fisub
cdq
cmp
out
sub
push
xor
(bad)
xchg
test
pop
pop
aam
std
inc
mov
xor
mov
lahf
sbb
inc
inc
mov
lods
cmp
xchg
push
arpl
cdq
mov
retf
mov
pushf
(bad)
pop
xor
dec
fmul
addr16
and
push
daa
mov
arpl
cmp
or
or
xchg
pop
cmc
pusha
ficomp
xor
pop
fdivr
push
dec
out
adc
out
test
pop
xchg
in
add
loopne
xadd
mov
cmp
xchg
pop
call
sub
cmps
loopne
ret
dec
push
xchg
push
cli
movs
add
addr16
push
loopne
pusha
mov
repz
mov
add
inc
inc
jmp
jmp
and
inc
sar
dec
sub
repz
test
xor
sahf
ins
stos
lea
sub
aad
lods
repnz
push
xchg
and
out
or
ror
mov
daa
imul
xchg
mov
pop
dec
add
movs
adc
pusha
sti
mov
dec
test
jp
jle
ins
out
sub
shr
jbe
cli
pusha
iret
push
cmps
sbb
fsubr
aam
cmc
ficom
dec
xchg
sub
sbb
adc
neg
sub
aam
adc
cmps
ds
call
fld
xchg
cmps
call
dec
mov
push
fsubr
(bad)
into
mov
shl
sub
pop
or
stos
js
dec
adc
sbb
mov
mov
pop
fcomp
sub
mov
aas
push
adc
add
loop
push
(bad)
xchg
mov
push
push
leave
dec
push
adc
test
sub
pop
or
push
or
cdq
push
movs
cmp
dec
pop
add
ja
mov
(bad)
aaa
js
scas
or
test
inc
daa
arpl
jae
pop
push
les
dec
cli
inc
pop
push
and
jp
stos
(bad)
jg
or
and
and
fwait
xchg
or
lds
(bad)
cmp
out
dec
rcr
fidiv
arpl
nop
mov
mov
pop
stos
mov
cmp
xchg
dec
push
(bad)
cmp
ret
mov
test
sub
adc
jne
ins
jmp
xchg
enter
push
call
jbe
ret
or
shl
shl
jns
inc
rcr
(bad)
or
mov
out
adc
jne
cmps
sub
jae
rol
mov
scas
rcr
in
and
dec
lods
sbb
(bad)
mov
call
mov
inc
inc
push
stos
int
inc
fsub
and
call
mov
ret
test
scas
mov
out
mov
sbb
in
dec
pop
push
sub
nop
cmps
and
mov
mov
loopne
mov
jmp
xor
test
pop
inc
mov
adc
xchg
push
or
movs
jg
pop
xchg
ret
(bad)
xlat
push
inc
inc
mov
mov
sub
imul
xchg
xchg
in
int3
add
out
push
adc
leave
add
sub
mov
xchg
cmp
mov
sub
pop
pop
add
jmp
inc
sbb
jmp
iret
shl
inc
sub
in
lods
jnp
lds
hlt
ins
pop
lods
inc
inc
xor
xchg
shl
adc
retf
mov
jmp
cs
jnp
adc
sbb
push
cmp
bound
rcr
and
retf
add
inc
cmps
outs
push
push
xor
ins
mov
dec
std
movs
inc
test
push
fsubr
cmc
mov
mov
and
mov
add
jbe
and
sbb
ds
enter
pop
jb
push
outs
call
out
pop
mov
jne
shl
dec
fcmovnb
pop
clc
add
adc
repnz
add
mov
aam
fstp
xor
jge
xor
add
pop
mov
and
pop
mov
ret
outs
adc
rcr
shr
ret
arpl
iret
cli
test
je
repnz
stos
mov
mov
add
test
shl
into
inc
mov
cwde
push
std
add
fisttp
(bad)
ins
mov
add
int3
push
lods
push
data16
and
adc
cld
lods
sub
and
add
pop
mov
inc
push
cmps
retf
and
shl
ret
push
xchg
sub
sub
fcom
hlt
jae
mov
sbb
pop
sub
sub
mov
js
pop
add
mov
jl
repz
mov
repz
mov
inc
ins
inc
cdq
test
adc
test
cmp
xchg
cmp
jns
outs
dec
loope
or
in
cmps
pop
test
ins
dec
div
inc
(bad)
xor
push
jne
xor
push
outs
test
sti
mov
test
std
xchg
fwait
popf
nop
pop
les
mov
mov
or
out
push
push
and
jecxz
les
sbb
xlat
int
adc
sti
pop
pop
push
push
jge
inc
rcr
(bad)
mov
mov
mov
push
fisubr
inc
fisubr
in
popa
sub
shl
push
sar
dec
push
add
mov
retf
mov
repz
xchg
into
cmp
retf
cmp
push
iret
or
gs
cmps
sbb
data16
jae
push
pop
mov
push
mov
push
mov
add
ins
xchg
call
mov
adc
xor
jmp
call
test
rcr
cmp
sub
jnp
mov
mov
jnp
aaa
inc
xchg
(bad)
pop
jne
sbb
pop
xchg
daa
ds
test
push
pop
mov
(bad)
xor
ds
and
in
sub
push
fwait
push
jmp
xchg
inc
stos
mov
sub
cmp
popf
mov
mov
or
add
call
pop
ja
shl
adc
fisub
jo
shr
or
xlat
data16
xchg
movs
imul
inc
in
mov
sub
push
out
retf
nop
inc
cmp
loopne
mov
jl
cmp
xchg
fs
retf
out
imul
and
pop
sub
jo
adc
repz
test
lods
int
popf
ins
xor
jmp
mov
dec
in
cmp
neg
mov
xchg
loop
aad
adc
stc
xchg
xchg
jp
test
std
repz
sub
jecxz
push
sub
jl
dec
(bad)
imul
pusha
pop
mov
xor
adc
pusha
iret
pop
cli
mov
mov
pop
dec
adc
loopne
lods
cmp
js
enter
inc
repz
fdivr
jnp
cmps
(bad)
push
and
sti
outs
icebp
sbb
sbb
cmp
and
cld
ja
xchg
pop
les
clc
sbb
jns
(bad)
mov
ret
movs
out
and
inc
sbb
adc
xor
or
(bad)
lods
jb
inc
add
xor
xor
(bad)
icebp
mov
inc
lods
fs
ret
xchg
iret
push
movs
dec
push
in
fadd
cmps
xor
inc
clc
(bad)
mov
push
sti
mov
jae
mov
cmp
and
and
dec
jno
pop
inc
mov
les
mov
aas
and
mov
fwait
outs
sar
mov
adc
inc
hlt
ins
mov
imul
cmp
sub
inc
add
mov
call
ja
addr16
cmps
cmps
mov
jecxz
sub
(bad)
fldcw
jns
or
call
mov
sub
mov
pop
pop
stos
inc
inc
das
gs
scas
mov
or
sti
imul
into
(bad)
cmp
cmp
jg
mov
lahf
push
xor
xor
mov
popa
in
ss
sbb
and
lds
jo
mov
ficom
in
xchg
ja
(bad)
xchg
mov
cld
mov
lds
movs
sub
xchg
test
xchg
mov
jecxz
mov
mov
push
inc
lds
rol
mov
je
ror
test
inc
sbb
sbb
and
push
xchg
es
fnstenv
dec
clc
scas
pop
jno
adc
pop
sub
add
imul
jg
push
xchg
mov
call
and
dec
or
mov
sbb
das
fdivr
dec
mov
add
pop
in
out
cmp
jmp
lea
push
aaa
jmp
cmp
ficom
jb
sub
and
in
cmp
xchg
dec
jge
mov
movs
test
inc
jns
fst
pop
gs
pop
cmp
ret
and
xor
mov
adc
mov
adc
aaa
ret
clc
addr16
jnp
retf
mov
fiadd
cmps
in
pop
cmp
add
fwait
xchg
adc
imul
push
xchg
ret
out
cdq
mov
pusha
dec
add
push
divps
rcl
gs
adc
pushf
add
mov
(bad)
aam
mov
push
sub
xor
push
xor
and
rcr
push
out
lea
inc
gs
aas
mov
or
jg
inc
sub
cli
push
pushf
fistp
(bad)
and
out
lods
loope
sbb
sub
mov
je
loopne
dec
ror
outs
adc
mov
pop
call
movs
leave
leave
and
and
cmp
fcomp
jb
ins
dec
push
or
sub
dec
push
fistp
and
pop
sbb
cmc
pop
loope
push
inc
cmps
sbb
out
mov
inc
je
fldenv
mov
jb
pop
pop
or
xor
mov
rol
push
jno
daa
mov
sub
ins
loopne
mov
aas
cmc
adc
out
xchg
adc
and
into
outs
xchg
jp
xchg
pop
xchg
add
dec
inc
adc
adc
je
push
cvtdq2ps
mov
xchg
jbe
es
add
add
call
jg
adc
mov
cmp
sub
adc
and
icebp
push
push
dec
sti
jecxz
mov
outs
mov
or
xor
pop
fldenv
pop
addr16
fwait
or
push
inc
(bad)
popa
sub
scas
and
outs
sar
into
ins
ins
push
shl
add
adc
mov
xchg
add
mov
mov
stos
sub
or
add
mov
push
cmc
add
mov
xchg
adc
jb
cmp
mov
(bad)
(bad)
dec
mov
jae
mov
dec
je
push
fucomip
(bad)
lea
js
jnp
jle
jmp
adc
inc
inc
test
(bad)
(bad)
(bad)
out
ins
ret
icebp
shl
cli
xchg
in
mov
dec
dec
loop
aad
cmp
jnp
into
leave
(bad)
call
xchg
inc
inc
mov
and
sub
ret
cld
cli
dec
rcr
push
or
inc
lock
inc
jb
mov
cdq
mov
and
inc
ret
cmps
out
enter
sub
jl
mov
jmp
mov
in
clc
and
icebp
sub
push
stos
dec
mov
fidiv
jne
inc
mov
inc
ja
inc
fbstp
out
ins
pop
jne
fbld
sahf
pop
aaa
mov
fisttp
jb
test
arpl
adc
aas
fnsave
call
(bad)
mov
in
fnstcw
push
mov
mov
mov
adc
cmp
inc
cmp
mov
into
push
sbb
fdiv
xchg
jne
xor
std
mov
mov
iret
push
lock
sub
add
lahf
xchg
loope
xor
bound
fwait
mov
test
scas
xor
shr
fwait
push
jo
je
lods
cmp
mov
push
add
xlat
stos
cmp
cmp
and
push
xchg
xor
stos
cmps
lods
push
adc
add
pop
and
adc
icebp
dec
dec
movs
dec
call
(bad)
mov
inc
pop
adc
out
icebp
mov
pushf
jne
xor
cli
jb
inc
loopne
jge
or
cmp
sahf
inc
(bad)
inc
inc
mov
and
mov
lahf
cli
fsubr
xor
dec
aad
out
cld
cmp
xchg
ins
rcl
(bad)
xor
fld
push
outs
aas
and
jl
popa
clc
xchg
hlt
inc
scas
mov
and
aaa
xor
xchg
pop
imul
xchg
cs
xor
pop
adc
div
adc
shr
outs
gs
fwait
loopne
jmp
imul
fucomp
sti
and
outs
cmp
adc
xor
pusha
aas
outs
mov
fs
shl
sbb
call
fisttp
mov
hlt
xchg
leave
loop
inc
push
movs
les
mov
out
stc
mov
add
push
add
loop
hlt
data16
jge
inc
inc
add
es
sub
and
call
push
pop
in
adc
dec
xchg
xor
pop
idiv
add
adc
in
fwait
ja
cmp
pop
or
lea
inc
dec
xchg
mov
(bad)
mov
mov
push
dec
or
add
pop
cwde
aam
mov
out
xchg
ss
lds
and
push
jg
das
int3
and
or
sbb
and
xchg
stc
jle
jne
icebp
pop
mov
and
outs
or
into
(bad)
scas
fwait
movs
dec
into
mul
add
lahf
inc
cmps
jno
add
push
sub
fidivr
add
dec
sub
stos
addr16
mov
cmp
adc
and
loope
cmps
xchg
mov
test
loope
add
cmp
sub
fbstp
cmps
sar
and
shr
popa
xchg
js
mov
sbb
iret
mov
xchg
fsub
ja
(bad)
cmp
shl
jmp
popf
xchg
push
mov
dec
inc
int3
or
mov
lahf
dec
fistp
fst
fadd
cdq
fsubr
std
ins
fsubrp
jp
xchg
lds
mov
push
push
dec
pop
mov
gs
imul
mov
fisttp
lds
outs
inc
call
outs
mov
and
nop
push
test
jae
in
push
jmp
push
sub
inc
push
data16
(bad)
arpl
movs
nop
push
jge
out
mov
pusha
dec
or
or
adc
loopne
in
popf
sbb
mov
stc
(bad)
lods
cmp
outs
sub
xchg
mov
dec
call
cmc
nop
cmp
lea
into
sub
jbe
sub
or
cmc
push
call
dec
repz
push
fld
jb
bnd
cmp
inc
jae
sub
mov
aad
mov
fnclex
in
data16
push
cmps
xchg
xchg
push
imul
clc
mov
stos
test
test
imul
das
mov
outs
jnp
stos
retf
lods
movs
fcomp
adc
ret
aaa
push
mov
inc
cmps
or
inc
(bad)
call
pop
mov
ins
jmp
dec
test
inc
sbb
lea
imul
add
inc
das
(bad)
mov
mov
mov
cmps
xchg
push
adc
(bad)
jle
ret
sbb
inc
dec
jmp
or
cmps
xor
push
stos
js
in
int3
fs
bound
repz
int
mov
in
pop
lahf
push
daa
mov
mov
mov
mov
add
scas
mov
fdivr
inc
call
pop
and
jg
jae
fimul
into
xchg
mov
out
mov
arpl
div
ret
lods
in
inc
ins
ret
mov
mov
mov
push
jl
in
jmp
or
out
aas
cwde
inc
adc
into
cmc
scas
fcomp
hlt
hlt
arpl
cmp
test
adc
pushf
mov
adc
lea
xchg
jne
xchg
sbb
pop
inc
enter
mov
(bad)
mov
int
mov
in
xor
adc
loope
test
adc
xor
imul
aas
repnz
jl
push
cmc
or
mov
pop
cmp
in
mov
in
ins
cdq
shl
call
ins
jo
inc
popa
int3
dec
rcr
fcom
outs
ds
dec
retf
mov
mov
(bad)
sbb
pop
cmps
cmps
jecxz
pop
dec
pop
js
sub
leave
push
sbb
sbb
xchg
push
test
adc
cmp
in
and
int
scas
ret
add
imul
aaa
(bad)
es
sbb
push
inc
sti
mov
push
pop
aam
cmp
out
(bad)
jp
adc
fisub
out
mov
jnp
jmp
nop
call
repz
shl
xor
mov
inc
mov
test
mov
fcmovb
out
pop
xor
jae
xor
jns
add
call
test
stc
daa
mov
xchg
sbb
sbb
jecxz
cmp
js
or
add
sti
out
pusha
ja
add
cmps
jns
lea
sub
loop
js
in
ins
push
pushf
call
outs
loop
inc
sbb
lods
(bad)
(bad)
ds
push
sub
retf
and
lahf
jl
test
daa
jbe
bnd
jmp
inc
test
retf
jge
sbb
repz
pop
xchg
mov
cld
fidivr
and
dec
sub
pop
cdq
jb
or
or
sbb
loop
(bad)
xchg
scas
xor
jnp
jg
jle
pushf
das
outs
or
movlps
sti
pop
inc
sbb
imul
mov
push
xor
inc
movs
test
and
sub
imul
test
push
adc
fnsave
jno
xchg
loop
cmps
push
(bad)
sub
hlt
xor
ret
ret
in
stos
or
pop
fnstenv
inc
(bad)
xchg
adc
aam
icebp
sbb
int
inc
sub
dec
dec
mov
aam
loope
sti
mov
(bad)
stos
jl
sbb
loopne
mov
je
(bad)
adc
pop
adc
jo
out
sbb
sub
dec
jp
arpl
mov
inc
leave
jae
or
mov
mov
enter
sbb
jmp
mov
add
dec
dec
cmc
inc
out
popf
mov
imul
cmp
int3
xor
into
pop
jle
mov
or
jb
jmp
push
push
mov
lock
mov
or
ins
inc
ins
lods
stos
sar
test
jp
mov
dec
scas
(bad)
repnz
fdivr
je
cli
loopne
sbb
sub
sahf
push
mov
sbb
hlt
fwait
pop
add
mov
pop
xchg
inc
mov
sub
(bad)
jg
or
fdivr
and
sub
xchg
jl
cmps
fisttp
fld
stos
adc
lahf
sub
and
sbb
ror
inc
popf
xchg
dec
cdq
lods
aad
cmp
dec
xchg
mov
add
fild
mov
mov
mov
hlt
xor
retf
jl
sbb
or
jnp
aam
cdq
bound
or
adc
rcr
loop
les
call
ret
xchg
xchg
sar
push
jecxz
mov
repz
addr16
nop
mov
addr16
add
into
mov
clc
rcl
mov
leave
test
mul
lea
jno
shl
mov
leave
inc
test
add
aam
das
and
enter
lahf
enter
ret
xchg
out
jae
sti
mov
movs
or
lahf
hlt
dec
dec
bswap
les
mov
test
scas
repnz
mov
push
call
pop
jns
shl
bound
mov
jmp
xor
(bad)
outs
xor
fimul
or
dec
popf
popa
arpl
add
push
cmp
fdiv
call
and
inc
jge
xchg
lods
or
fild
int3
xor
into
call
jmp
outs
mov
jge
adc
pop
inc
js
fsub
lock
ins
mov
iret
sub
xchg
jmp
inc
rcl
gs
adc
pop
mov
inc
idiv
retf
call
and
lods
cmp
add
cmp
dec
and
popa
inc
jno
repz
mov
iret
xchg
out
sbb
push
mov
jnp
or
inc
sar
sti
adc
test
call
add
dec
xor
sub
sub
adc
push
into
push
push
pop
sbb
cmp
mov
push
cld
xor
ins
fwait
test
arpl
push
mov
retf
je
pusha
pop
mov
xlat
movs
test
gs
jns
mov
jnp
push
xchg
cmp
inc
sti
in
cwde
mov
inc
push
inc
faddp
cmps
xor
jb
and
push
adc
int
out
xor
and
pusha
push
jecxz
inc
int3
jle
bound
jl
pop
ja
jne
unpckhps
call
xor
sti
xchg
popa
out
repz
pop
js
cwde
das
in
sahf
sbb
and
nop
xchg
mov
mov
cld
inc
mov
inc
ret
stos
push
push
bound
jne
inc
outs
jnp
cmp
(bad)
shr
imul
or
xchg
ret
xor
dec
popf
or
or
xor
cli
jecxz
dec
jne
inc
inc
mov
ror
and
fnsave
xchg
jmp
xchg
and
jp
fsubr
mov
pop
jnp
sub
fild
ficom
(bad)
adc
xchg
jmp
rcr
mov
cmp
outs
cmp
xor
je
or
lea
loopne
mov
cmp
loopne
sub
cmps
and
xlat
cmp
shld
std
test
cmp
imul
adc
lock
jns
inc
jno
add
retf
call
imul
push
xor
add
pop
add
clc
jg
dec
fucomi
push
fist
add
data16
xor
popf
dec
push
shr
call
sbb
pop
mov
das
sbb
adc
inc
scas
jno
movs
or
loop
in
ins
ds
pcmpgtb
add
xlat
or
pusha
jae
es
mov
and
data16
xor
stos
jnp
jecxz
test
enter
pop
adc
pushf
repnz
dec
pop
fist
adc
rol
cmps
push
pop
scas
movs
jmp
mov
xchg
push
aam
xchg
push
movs
movs
aas
mov
xlat
sub
das
dec
daa
inc
push
jl
push
popf
cmp
add
or
or
scas
fs
add
adc
adc
cs
pop
in
inc
mov
into
stc
mov
and
mov
lock
pusha
shl
popa
sbb
push
leave
mov
data16
pop
test
push
cli
add
adc
xor
(bad)
cmp
mov
sub
push
mov
xchg
movs
pop
or
mov
mov
adc
sub
scas
pushf
int3
inc
(bad)
mov
or
inc
mov
mov
popa
cmp
add
jb
jmp
and
mov
add
xchg
xor
cmp
scas
xor
inc
sqrtps
and
mov
mov
dec
add
test
imul
fist
inc
cmp
pop
into
jno
sbb
pop
cmc
and
sub
loopne
enter
inc
sub
mov
ret
mov
push
and
outs
mov
leave
je
ja
cmp
cwde
push
mov
cmp
cmp
adc
aaa
sbb
inc
cdq
pop
adc
cs
dec
dec
pusha
jecxz
pop
aaa
gs
out
fistp
call
fdivr
sbb
daa
mov
out
popa
fwait
loopne
sbb
test
add
pop
fadd
cld
fcomp
xchg
lods
sbb
inc
push
loop
mov
xchg
sbb
test
pop
push
xchg
jnp
pop
test
shr
push
cmp
inc
test
or
call
je
aaa
cmps
retf
push
sub
and
scas
xchg
mov
fist
cmps
loop
fcomp
xor
lahf
jl
test
pop
mov
add
fld
call
iret
mov
jge
adc
push
hlt
sub
xchg
rol
mov
sub
out
inc
mov
inc
iret
adc
adc
mov
leave
outs
inc
xor
dec
mov
fs
retf
out
(bad)
sti
cmp
daa
adc
inc
es
lods
mov
dec
(bad)
fsubr
xlat
mov
xchg
xchg
mov
mov
inc
mov
cld
dec
lahf
call
push
xchg
push
ror
inc
psubw
xchg
int3
xchg
icebp
sub
enter
retf
out
(bad)
xor
or
adc
inc
push
in
(bad)
mov
int
retf
sub
cmc
push
xor
mov
dec
fs
xor
mov
cli
sbb
enter
out
lods
mov
daa
sbb
out
fwait
stc
mov
add
sahf
inc
aaa
jne
fdiv
clc
(bad)
loopne
mov
adc
and
sub
cmp
(bad)
or
pusha
add
mov
jl
and
add
push
fisub
dec
mov
lds
cmp
cmp
xchg
or
inc
cwde
xor
mov
addr16
cmc
loop
shl
push
test
ss
aas
aaa
sub
mov
push
adc
pushf
push
mov
retf
call
iret
xchg
xor
dec
adc
pop
je
fadd
ficom
stc
lods
out
pop
jmp
sbb
adc
nop
fst
cwde
pop
in
xchg
inc
mov
xchg
sub
mov
popf
imul
cmp
or
sbb
movs
sbb
and
mov
vpmacsww
(bad)
xor
cmp
mov
shl
add
stos
in
cmp
pop
inc
gs
inc
sbb
push
out
jae
cmps
ins
and
and
rol
clc
and
out
fmul
int
and
frndint
dec
div
fistp
add
js
pop
outs
and
sub
and
adc
stc
call
call
aad
jns
cmp
imul
das
xor
ror
xor
fsub
sbb
inc
pushf
sti
test
jl
stc
xchg
mov
data16
sub
imul
push
add
pop
sub
xchg
inc
sub
jecxz
push
or
push
fwait
jecxz
out
dec
(bad)
addr16
aad
stos
sbb
push
imul
loope
jle
sub
call
fcom
out
enter
dec
or
push
sahf
fcmovnb
jne
(bad)
adc
rol
mov
aad
cmovp
aas
xchg
aam
inc
lea
hlt
sbb
popf
or
out
test
mov
out
add
aaa
xchg
and
mov
jmp
xchg
clc
add
arpl
(bad)
not
inc
cld
out
jne
xchg
push
fdivrp
cmp
das
stos
imul
xchg
pop
mov
call
js
ror
aaa
mov
or
daa
xchg
into
or
cmp
adc
addr16
gs
daa
inc
jle
scas
int3
movs
hlt
push
(bad)
and
mov
test
aad
fidiv
nop
call
or
cmp
jno
ss
mov
fld
xor
fnsave
(bad)
jno
gs
or
jae
out
cwde
xchg
lods
and
inc
loopne
sub
mov
mov
leave
imul
push
fcomi
clc
cmp
mov
inc
mov
fiadd
xor
inc
sar
push
ds
add
cmp
call
sub
xor
arpl
shr
xor
sub
leave
ds
es
icebp
cmc
fiadd
xchg
in
pushf
cwde
in
pushf
dec
(bad)
ss
or
or
fwait
das
loopne
(bad)
in
int
xchg
lods
dec
int
pop
dec
push
mov
repz
sub
daa
mov
into
scas
mov
mov
shl
pop
movs
pop
sbb
scas
jl
ins
mov
sbb
imul
jno
mov
lods
retf
jne
rcr
pop
ficom
fdiv
jecxz
jp
je
imul
iret
(bad)
jbe
dec
add
dec
inc
in
add
dec
mov
xor
xchg
push
rep
sub
jnp
pop
imul
in
stc
dec
xor
fistp
test
test
ror
jg
jp
sbb
cmps
jns
adc
mov
cmp
mov
inc
dec
xchg
push
in
sbb
mul
and
iret
xchg
push
push
or
xor
jmp
mov
(bad)
xchg
in
lahf
fcmove
popf
shl
dec
(bad)
pusha
add
dec
out
cld
or
xchg
dec
add
jle
dec
mov
jnp
dec
push
and
mov
mov
fstp
xchg
inc
shl
xchg
in
and
stos
mov
cld
out
shl
push
mov
adc
cmp
test
sub
cdq
cli
jecxz
sub
jmp
mov
pop
mov
idiv
retf
mov
xchg
mov
fnstcw
mov
lods
aad
leave
sbb
(bad)
cdq
idiv
fisub
imul
cmp
xchg
ins
fbld
xor
into
jo
xor
out
outs
xchg
(bad)
adc
dec
sbb
mov
ficom
(bad)
fidivr
push
clc
mov
(bad)
shl
rol
test
call
and
cmp
(bad)
xchg
push
pop
mov
and
adc
inc
loopne
sbb
and
sti
ror
stc
adc
lods
mov
xor
push
lods
loopne
mov
(bad)
rcl
retf
dec
push
aam
sbb
int
test
mov
mov
cmp
mov
aad
pop
jne
jb
imul
add
out
iret
retf
ret
push
add
sub
aad
or
sub
push
(bad)
xchg
(bad)
xchg
rcl
jp
sbb
fxch
dec
aad
mov
push
repz
int
jecxz
aam
arpl
repnz
fistp
jbe
xchg
pop
pop
add
mov
pop
inc
in
cdq
xchg
loop
xchg
sbb
movs
mov
out
cmp
not
sub
pop
cmp
leave
push
add
lds
dec
jecxz
outs
jmp
add
test
jl
mov
adc
mov
(bad)
pop
xor
pop
loop
rcl
outs
fs
fisttp
inc
pop
or
(bad)
iret
push
js
xchg
and
aad
xchg
xchg
fadd
(bad)
popf
mov
jb
lea
adc
retf
pop
int
iret
or
fdivr
dec
add
push
cmp
iret
xor
(bad)
push
mov
je
lea
out
shl
je
cmp
ret
leave
ins
mov
fs
loop
lods
not
das
in
cmp
pop
push
(bad)
mov
loop
mov
stos
ret
pushf
daa
cmps
pusha
jns
shl
mov
and
jmp
repnz
adc
scas
ins
loop
push
and
sbb
in
xchg
or
sbb
and
pop
and
or
scas
jg
jae
inc
stos
xchg
(bad)
dec
(bad)
cli
add
shl
aam
sahf
inc
pop
mov
add
div
cmps
(bad)
movs
outs
cmp
xor
test
sub
ins
daa
mov
fist
test
(bad)
jmp
push
lea
inc
mul
or
sub
inc
pop
jno
mov
lds
inc
mov
lods
dec
mov
add
dec
cmp
push
and
shr
in
mov
dec
test
cmp
cwde
fnstenv
mov
(bad)
fstp
jo
jo
outs
in
xlat
pop
nop
and
or
nop
ret
cwde
mov
cmp
orps
paddusb
repnz
out
inc
pop
(bad)
push
popa
mov
mov
fidivr
in
mov
and
test
inc
movs
sar
aam
inc
push
xor
cmp
xchg
stos
out
fwait
xchg
sbb
shr
in
jecxz
push
sub
pushf
ret
xchg
or
dec
fs
xchg
sbb
stos
xlat
push
mov
adc
mov
sbb
adc
jge
idiv
icebp
cmp
dec
cs
in
lods
clc
inc
mov
int
loop
sahf
mov
rcl
stos
mov
scas
out
movs
fidiv
sub
addr16
or
ja
jne
push
mov
sub
mov
push
sahf
sub
cs
ins
leave
or
sbb
pop
pop
sbb
leave
jbe
jmp
add
mov
test
xchg
push
adc
lock
(bad)
mov
jo
fisttp
pop
in
jno
push
jno
jmp
aaa
sub
push
inc
shr
out
mov
pushf
jb
in
jno
xor
or
aas
or
or
in
dec
(bad)
cli
enter
outs
adc
inc
ffreep
add
ror
popa
mov
or
rol
push
mov
ins
mov
jns
push
jmp
test
shl
jae
movs
and
outs
in
mov
pop
mov
or
aam
xor
mov
sbb
mov
fisub
or
xchg
jge
jmp
cmp
in
fneni(8087
(bad)
push
pusha
outs
sahf
je
and
adc
dec
jb
jb
sti
jg
add
push
xchg
mov
sbb
cmp
and
jno
movs
add
lock
fdivr
ret
test
je
cmp
or
test
jns
cmp
retf
push
shl
(bad)
in
scas
hlt
test
mov
xor
xor
stos
gs
jl
pusha
lods
pop
test
mov
idiv
pushf
xchg
ret
aaa
cmp
add
xchg
mov
pop
rcr
loop
add
(bad)
(bad)
and
loopne
pusha
or
or
lahf
mov
adc
inc
jnp
jg
movs
jo
rcr
and
fs
out
cmp
and
(bad)
test
cmp
(bad)
test
mov
xor
nop
sbb
in
mov
mov
stos
add
xor
outs
push
fcom
mov
add
or
or
icebp
push
dec
int
in
cld
xchg
retf
mov
adc
in
sbb
fcomp
push
retf
test
out
add
mov
(bad)
rol
les
fcom
push
aaa
mov
mov
mov
cmp
test
sahf
test
add
enter
inc
test
mov
pop
xchg
loope
pop
adc
push
jge
and
bound
push
xor
(bad)
popf
enter
or
cmp
(bad)
iret
mov
xlat
stc
add
and
daa
xor
retf
inc
sub
loope
jmp
mov
out
push
mov
push
adc
aaa
dec
fwait
push
push
inc
dec
sub
lock
xchg
test
popa
stos
lods
in
push
pop
sbb
sbb
std
mov
fild
les
jle
in
movs
mov
aas
pop
(bad)
dec
icebp
jg
shr
in
adc
(bad)
in
xchg
lods
addr16
cmps
inc
push
push
and
loope
mov
cmp
mov
jns
jmp
mov
dec
sti
ds
push
outs
ins
jbe
sbb
mov
mov
xlat
dec
or
adc
rol
jg
mov
sub
(bad)
fadd
movs
ss
pop
or
mov
stos
push
rcl
aam
aaa
push
test
out
mov
push
jmp
push
scas
das
ins
or
and
inc
inc
inc
cmp
dec
xchg
sbb
sbb
(bad)
scas
xor
leave
add
push
jne
loop
ss
pop
push
loope
lods
es
add
pop
mov
dec
je
push
movs
mov
push
lods
inc
inc
lods
retf
add
pop
dec
pop
aaa
data16
lea
fpatan
std
pop
loop
ret
cmc
add
xor
outs
jmp
dec
into
out
mov
mov
dec
loop
sti
das
mov
dec
push
into
add
add
sub
hlt
retf
xchg
sub
inc
push
xor
sub
xchg
cmp
or
pop
rol
xchg
or
aad
mov
mov
xor
ja
test
xlat
out
adc
xchg
inc
mov
sub
dec
mov
repnz
jmp
inc
icebp
js
jmp
or
fxch
jmp
jns
es
add
sahf
push
adc
xlat
out
sub
mov
repnz
dec
dec
cdq
mov
(bad)
aam
je
push
mov
cdq
pop
mov
sub
loop
(bad)
daa
push
out
mov
mov
retf
ret
pop
mov
mov
icebp
mov
push
xchg
test
movs
sahf
jnp
mov
popf
or
adc
ret
cmp
jle
jne
jmp
pop
and
xchg
xchg
adc
jmp
fucomp
dec
adc
sti
cmc
and
mov
jns
mov
rdpmc
daa
mov
cld
sbb
cs
push
scas
dec
or
push
out
repz
icebp
shl
pop
out
test
mov
outs
imul
(bad)
jg
adc
pop
adc
inc
popa
imul
mov
cmp
pop
inc
jbe
cmp
adc
gs
sub
pushf
hlt
sbb
push
mov
ret
ds
push
rol
fistp
icebp
push
cmp
retf
jb
and
mov
xor
dec
inc
(bad)
test
pop
and
stos
icebp
or
cmp
sbb
adc
xchg
call
inc
cs
sub
sub
ins
or
lods
pusha
sub
dec
fmul
lock
out
add
push
sahf
jnp
and
push
addr16
enter
iret
add
(bad)
imul
xor
fwait
in
xchg
add
sbb
add
jae
xor
mov
movs
dec
sar
imul
in
cmps
arpl
clc
(bad)
dec
out
lahf
(bad)
lock
fbld
or
retf
call
jo
js
ret
enter
mov
cdq
jge
xchg
mov
push
mov
xlat
(bad)
aas
inc
(bad)
int
mov
pop
inc
push
or
fild
into
mov
and
test
inc
fdivr
xchg
movs
js
nop
xor
mov
lock
out
mov
loop
mov
cmps
call
and
xchg
add
inc
lock
ret
fild
ja
cmp
sbb
jnp
fidiv
out
movs
stc
nop
ins
jp
repnz
stos
ror
rol
pop
pop
dec
adc
push
icebp
or
inc
fdiv
mov
mov
xchg
(bad)
jge
adc
sbb
jmp
aad
pop
dec
adc
(bad)
repnz
out
jnp
mov
cmp
fs
or
popa
cmps
jl
sbb
pusha
jle
(bad)
leave
add
inc
mov
int
push
mov
repz
repnz
cmp
push
loop
cmp
mov
adc
jns
popa
xor
mov
xchg
mov
and
xchg
neg
dec
adc
adc
stos
mov
add
mov
mov
scas
nop
inc
xor
jl
cmc
sbb
push
sub
jmp
lods
aaa
sub
stos
rol
bound
into
cmps
mov
dec
(bad)
imul
jl
mov
adc
jg
fcomp
xchg
mov
inc
mov
stos
or
fxam
cmp
xor
mov
es
xchg
inc
fild
(bad)
bound
add
mov
xchg
adc
shr
dec
jmp
test
cmp
repz
ss
sbb
push
lods
movs
jo
push
sahf
dec
or
push
jbe
jg
jg
sbb
es
inc
pusha
or
and
dec
mov
frstor
sahf
mov
cmc
xchg
and
pop
mov
(bad)
std
and
adc
sbb
fld
arpl
mov
adc
sub
and
cmp
shr
mov
sub
mov
stos
lods
push
dec
arpl
mov
cmps
mov
dec
outs
sahf
xchg
mov
clc
sar
add
div
add
adc
adc
pop
sbb
test
(bad)
fwait
retf
cmp
add
sar
call
mov
dec
mov
iret
out
lods
sahf
loopne
iret
test
ret
pop
rcl
add
stos
jge
cmps
repz
pop
enter
jl
or
(bad)
dec
jmp
in
push
mov
in
jno
icebp
xor
push
in
(bad)
sub
inc
or
jno
das
imul
inc
add
das
mov
fdivr
retf
and
sub
jmp
jmp
xor
dec
lahf
dec
mov
loopne
inc
sbb
mov
or
cmp
cmp
adc
in
pop
adc
pop
sbb
fucomp
aaa
test
out
mov
xchg
xchg
add
or
xlat
imul
sbb
push
jl
jne
inc
sub
mov
cmp
xlat
pop
cmp
push
loop
mov
shl
sbb
cmp
sar
and
or
cmps
mov
mov
aam
push
mov
int3
push
test
aad
cmps
xor
push
mov
sub
leave
push
ds
push
lea
dec
test
ja
and
mov
enter
int
mov
jns
les
or
mov
les
cmc
mov
xor
cmc
fcmove
outs
or
sub
xor
std
jno
in
sar
sub
into
sbb
sti
mov
xor
add
das
mov
in
cmp
mov
sbb
push
pop
nop
fadd
gs
mov
mov
add
imul
cmp
in
push
call
mov
sub
pop
fild
push
inc
fisubr
mov
out
out
out
xor
sbb
rcr
(bad)
lods
test
xlat
stos
sbb
aas
lahf
jno
hlt
jmp
js
or
push
xchg
mov
mov
add
(bad)
or
pop
push
ror
adc
sbb
and
mov
sbb
push
jmp
ds
fcmovu
call
cmc
loopne
inc
shl
cmp
retf
ins
xchg
adc
imul
sbb
inc
data16
fs
jge
add
call
outs
js
loope
call
and
jne
ret
nop
gs
arpl
push
shl
pop
or
out
cdq
test
mov
xor
cld
mov
jmp
arpl
push
push
loope
retf
pop
dec
jle
frstor
shr
int3
inc
nop
loop
rol
jecxz
adc
loopne
jl
jbe
test
sub
pop
ds
in
shr
call
jle
pop
pop
aaa
xchg
mov
stos
fild
in
inc
enter
(bad)
ss
adc
push
jge
add
mov
shl
mov
xchg
stos
mov
ins
push
inc
clc
cmps
stos
neg
push
cs
or
xor
xchg
ds
pop
jne
jge
lds
cmp
hlt
dec
inc
movs
shl
sbb
aas
pop
cmc
mov
sbb
dec
call
cmps
inc
outs
lea
add
in
add
inc
scas
cmps
sub
jae
jp
popf
mov
mov
push
push
fnstenv
pop
sbb
xor
retf
out
pop
nop
pop
adc
fnstsw
test
int3
repz
inc
mov
scas
fdiv
mov
sbb
sbb
js
movs
in
sbb
sub
(bad)
inc
bound
push
(bad)
cmc
test
(bad)
in
xor
cwde
(bad)
(bad)
dec
enter
int
push
push
xlat
into
mov
pop
push
sbb
(bad)
jmp
push
ret
mov
clc
popa
bound
sub
xor
jbe
repnz
xor
push
or
pop
add
aam
or
ja
cs
pop
push
repz
lock
and
xor
mov
cmp
int
or
add
inc
add
stc
fcom
cmp
push
call
cmp
jecxz
call
hlt
imul
mov
adc
xchg
shl
pushf
ret
popf
bound
js
shl
(bad)
into
mov
pushf
in
xlat
xchg
mov
pop
jmp
cwde
in
pop
mov
add
(bad)
clc
and
xchg
(bad)
mov
xchg
mov
adc
jbe
test
dec
add
stos
sbb
jnp
jno
sub
xor
cs
sub
pusha
inc
mov
push
adc
cmp
dec
retf
inc
popa
sbb
push
ds
movs
retf
jge
or
pusha
mov
dec
dec
push
loopne
sti
int3
mov
cmp
fbstp
movs
pushf
aas
sbb
sbb
fs
(bad)
out
and
mov
mov
arpl
or
in
out
scas
std
adc
pop
inc
jnp
push
pop
bound
mov
inc
xor
in
sar
loopne
xor
mov
pop
inc
(bad)
xor
mov
dec
cmp
pop
mov
add
dec
adc
cmps
adc
inc
sahf
and
push
jbe
sub
int
add
das
ret
int
jmp
outs
cmp
fdiv
add
jg
sub
push
test
jmp
add
enter
icebp
fmul
push
mov
and
loope
(bad)
mov
cmp
nop
cmp
test
std
sbb
inc
scas
loope
sub
cmc
es
aam
ss
mov
push
pushf
sbb
cmps
xor
cmp
jnp
mov
out
xor
stos
jmp
retf
mov
cmp
stos
shl
aas
pop
out
xchg
cmp
mov
scas
loopne
call
xchg
cld
or
(bad)
cwde
push
mov
cmp
loopne
xchg
aaa
push
fisub
popa
or
jl
jecxz
sbb
cmps
mov
pop
pop
fdiv
or
jp
pop
pop
sbb
test
jp
ret
inc
cld
loop
push
dec
sti
test
jo
jmp
popa
clc
push
jnp
loopne
fucomi
xchg
jmp
ds
popf
push
dec
adc
lahf
inc
fmulp
lods
pusha
adc
mov
jl
jmp
clc
ins
or
mov
daa
adc
and
xchg
mov
sub
mov
mov
into
in
dec
iret
rcr
inc
je
mov
das
pushf
jl
fidivr
cmp
stos
inc
push
ja
addr16
scas
mov
test
(bad)
push
add
out
iret
loopne
inc
mov
push
mov
mov
aaa
iret
sub
or
retf
push
out
cmp
loop
cdq
imul
cmc
sbb
mov
ins
sbb
pop
cmp
cmc
dec
and
mov
adc
not
loop
popa
add
fstp
mov
adc
cld
sub
push
retf
jge
xor
mov
sbb
scas
movs
inc
movs
std
stos
das
int3
mov
inc
hlt
fidiv
pop
js
pop
dec
imul
pop
cmp
push
cmp
repz
in
inc
cli
scas
data16
sbb
jnp
jno
scas
xchg
repnz
sbb
(bad)
sub
pop
xchg
xchg
add
fwait
loope
inc
inc
aam
or
xor
test
dec
mov
pop
add
ror
sti
or
retf
sub
ret
mov
movs
out
add
adc
jbe
repz
cdq
xor
adc
push
push
loope
jg
sub
loopne
mov
dec
dec
scas
retf
les
outs
jb
in
xchg
mov
lock
pop
inc
mov
push
sbb
inc
test
xchg
inc
fbld
xchg
jle
dec
mov
cmp
lods
dec
and
push
xchg
mov
cwde
push
sbb
dec
popf
jmp
ins
test
mov
std
neg
lahf
mov
bound
push
inc
or
imul
push
jne
fwait
js
or
push
xchg
adc
lods
sub
loop
inc
imul
push
mov
out
leave
fbld
cs
nop
call
fist
dec
outs
xor
frstor
test
loop
outs
cmp
sbb
dec
jb
dec
mov
jg
push
push
sbb
cwde
test
imul
hlt
jne
or
(bad)
int3
in
ret
jno
adc
les
or
sbb
push
jmp
push
xor
cmps
fdivr
dec
sub
mov
(bad)
and
ss
xchg
pop
or
retf
push
sbb
hlt
xor
in
pop
sub
das
daa
(bad)
(bad)
jmp
enter
xchg
push
xor
fisub
aaa
lea
nop
mov
inc
xchg
dec
xor
and
bound
jg
mov
push
cdq
xor
jne
lock
xchg
adc
fisttp
(bad)
pop
xor
(bad)
sbb
lahf
imul
sar
fsin
adc
mov
clc
and
jmp
cmp
or
mov
in
and
lods
arpl
add
in
jns
push
mov
out
cdq
dec
xor
mov
fucom
jmp
in
pop
bound
lahf
inc
call
jle
jge
out
(bad)
int3
push
scas
les
lods
mov
mov
pop
es
cmp
dec
(bad)
gs
inc
test
neg
and
jmp
clc
push
xchg
in
or
retf
leave
fist
mov
sub
lds
idiv
fs
push
pop
dec
xlat
dec
pop
mov
movs
push
push
daa
retf
sbb
xor
or
clc
xor
lds
add
fwait
mov
cmps
(bad)
test
jmp
iret
inc
pop
mov
arpl
int
fld
sti
dec
cmps
push
fwait
dec
or
mov
pushf
pop
adc
inc
xchg
lock
sbb
shl
ret
xor
dec
daa
xchg
dec
jle
test
int
ss
ins
mov
outs
std
mov
jnp
movs
mov
sbb
push
scas
lock
stos
xor
mov
or
fiadd
in
lahf
sbb
mov
icebp
retf
mov
mov
nop
xchg
stos
adc
xchg
in
daa
hlt
stos
fisub
or
push
(bad)
adc
inc
push
dec
dec
jae
ss
imul
add
scas
aad
jns
add
jle
and
push
pop
pop
and
push
or
cmp
pop
aam
repz
scas
pop
(bad)
int3
pushf
jmp
cwde
jb
fisttp
cmp
int
repnz
test
iret
pop
sub
cmp
jge
fisttp
xor
mov
lods
adc
xor
ds
add
mov
pop
mov
pusha
mov
neg
pusha
pop
add
add
pushf
vunpckhps
xchg
mov
into
add
cmc
hlt
mov
push
call
or
jbe
mov
repnz
sbb
inc
sbb
aas
and
push
fdiv
movs
jae
mov
test
mov
push
les
jmp
inc
sub
or
and
push
fst
cmps
ja
mov
pmullw
dec
fimul
mov
jmp
in
pop
pop
pop
out
add
test
pusha
jno
sar
je
and
fidivr
mov
mov
jae
sub
stos
lds
jmp
pop
xor
and
xchg
sub
jge
mov
pop
shr
adc
add
fadd
fild
ds
enter
aad
in
xor
call
fstp
jmp
add
dec
fwait
scas
stos
add
and
mov
jno
lock
imul
rcl
jbe
sbb
add
ret
pop
pop
jne
lock
xor
mov
inc
nop
clc
fild
mov
mov
cmp
fisubr
test
pop
or
sub
push
mov
fst
stos
pop
test
in
bound
fsin
pop
adc
jl
dec
xchg
pop
jp
aaa
cmps
leave
lock
dec
cmp
inc
mov
sar
(bad)
out
jb
xor
add
jo
or
daa
in
jne
aad
cli
cmc
adc
push
dec
jae
ret
(bad)
sbb
fbstp
sbb
sbb
aam
cmp
and
into
shl
mov
es
mov
add
fsubr
jno
fdiv
lea
mov
lods
inc
pop
sar
xchg
adc
push
loop
adc
and
inc
rol
gs
xchg
dec
jb
jg
das
adc
shl
pop
(bad)
ins
pop
pop
inc
cli
push
ja
inc
out
and
xchg
add
jg
clc
ss
cmc
gs
iret
or
adc
pop
push
jo
cwde
mov
push
stos
imul
ror
loope
fucomp
push
dec
in
jb
(bad)
sbb
push
fbld
inc
stos
and
add
or
jl
clc
(bad)
repz
inc
mov
jae
dec
jmp
pop
xchg
cld
call
sub
fwait
mov
mov
je
test
aas
jno
pusha
jae
(bad)
aaa
pop
std
rcl
mov
fidiv
pop
or
out
outs
mov
mov
fst
mov
sbb
dec
ss
fcomp
push
arpl
scas
imul
je
ss
sub
add
and
push
mov
aad
aam
cmpxchg
in
setb
lods
test
in
inc
mov
cmc
sub
imul
fstp
jmp
dec
or
sub
add
and
cld
ja
test
jp
sti
dec
dec
inc
in
repz
jle
loopne
jb
out
sub
mov
mov
retf
ror
(bad)
mov
mov
ror
cmp
or
mov
rol
fs
xor
inc
fiadd
xor
push
xchg
das
or
mov
(bad)
cmp
pop
sbb
mov
jae
lock
inc
arpl
cmps
jnp
fld
enter
xchg
jbe
call
sti
imul
inc
call
xchg
aaa
icebp
fbld
mov
pop
mov
js
hlt
or
mov
mov
sbb
and
dec
mov
mov
jg
movs
fisttp
dec
pop
xchg
retf
mov
into
jo
or
hlt
(bad)
dec
pop
std
pop
mov
fistp
je
cmps
call
mov
sub
fimul
lea
mov
inc
mov
add
xchg
(bad)
pop
or
fisubr
sub
int
scas
jno
shl
outs
mov
enter
dec
mov
lahf
rcr
sti
add
ja
xor
mov
leave
pop
inc
(bad)
retf
xor
ret
push
(bad)
jae
outs
std
pop
inc
xor
and
ins
xor
pop
adc
adc
and
xchg
xchg
sub
daa
cmp
loope
push
test
sahf
dec
inc
pop
adc
js
shr
push
inc
xlat
pop
inc
mov
movs
sbb
fisub
int3
add
loop
repnz
xor
mov
xchg
mov
test
in
mov
call
lea
movs
adc
jge
adc
lods
cmps
add
ss
retf
in
cli
cmp
push
nop
ror
call
(bad)
pop
les
xchg
xchg
movs
dec
push
imul
mov
sti
mov
and
xchg
lods
xchg
icebp
jb
push
test
fst
push
mov
stos
daa
dec
out
cdq
sbb
mov
fistp
mov
stos
mov
pop
ror
ret
jmp
add
lea
jge
mov
push
cs
das
xor
or
sbb
jae
data16
jl
fistp
jmp
xor
mov
jge
add
kmovb
imul
mov
pop
ret
xchg
(bad)
mov
stos
repz
daa
inc
and
ins
or
addr16
adc
mov
dec
jae
sbb
shl
or
adc
and
fs
sar
addr16
js
mov
cli
popa
push
fwait
push
push
cmp
fs
pop
inc
jb
fldenv
addr16
adc
test
xchg
add
aam
sub
dec
mov
pop
sahf
push
out
push
inc
ret
jmp
fnsave
(bad)
pop
push
(bad)
cmps
fidivr
fldl2t
jge
retf
sub
ja
fnstsw
add
mov
inc
or
sub
xor
inc
push
in
mov
xchg
fs
mov
out
data16
pop
mov
and
jb
popa
sub
data16
cmc
lahf
push
pop
xor
push
daa
outs
into
inc
into
ror
or
jns
sbb
mov
pop
jl
or
and
mov
pop
xor
sbb
loop
call
push
and
mov
push
add
mov
push
sbb
sub
movs
jnp
mov
push
push
adc
xor
sub
mov
out
or
xor
add
pop
xor
mov
mov
xor
fdiv
icebp
fbld
fs
or
test
add
add
adc
aad
call
lock
xchg
and
dec
pop
sub
xchg
sbb
clc
pop
cmp
inc
dec
pop
ror
push
cmp
push
(bad)
dec
sub
cld
mov
in
data16
arpl
(bad)
mov
arpl
loop
jns
scas
repnz
and
and
fs
mov
mov
cmp
mov
call
cld
or
mov
mov
jg
push
mov
mov
cmp
ret
aas
and
xchg
in
cmc
dec
mov
rcl
test
pop
push
movs
jg
fisubr
in
gs
jle
shl
mov
lods
jmp
fstp
mov
out
nop
(bad)
mov
scas
adc
shl
je
sbb
xor
mov
sahf
cmc
and
jge
movs
jg
jb
sbb
inc
push
sub
cmp
jae
(bad)
out
(bad)
xchg
cli
cmc
in
xor
mov
call
mov
stos
dec
fld
jl
jo
jmp
fs
outs
sti
mov
push
les
iret
out
or
pop
sub
test
push
inc
xchg
fnstenv
mov
pop
xor
sub
das
and
xchg
jmp
xchg
push
inc
mov
scas
call
je
int3
movs
not
or
jp
cmp
out
lahf
push
sbb
popf
mov
repnz
add
cmp
shl
mov
int3
stos
mov
(bad)
jp
or
xchg
push
push
mov
dec
imul
or
stos
cwde
xchg
mov
xor
popa
cmp
aas
mov
pop
mov
(bad)
jb
pusha
inc
xchg
adc
and
push
push
xchg
and
adc
les
push
mov
cdq
dec
scas
mov
cmp
dec
aad
xor
cmps
sub
pop
out
mov
pop
retf
inc
scas
xor
xor
in
push
sub
rcl
jmp
pop
mov
std
(bad)
push
jmp
xchg
ss
lds
clc
out
mov
cmp
out
js
outs
mov
(bad)
ficom
or
jg
or
jns
pop
pop
sti
out
push
scas
nop
inc
dec
imul
jne
mov
scas
mov
mov
test
and
mov
jo
pop
test
mov
aad
xchg
push
jbe
pop
add
imul
xor
mov
mov
in
mov
adc
stos
cmp
aam
nop
push
into
inc
sbb
jg
(bad)
ja
jg
imul
xchg
jecxz
in
dec
jns
es
mov
jmp
lea
mov
sub
loope
ror
in
push
lahf
fs
jno
adc
jno
shl
pop
dec
and
sub
push
pusha
mov
mov
adc
lods
cdq
xchg
out
add
dec
or
adc
xor
mov
or
or
enter
shl
xchg
cs
mov
jmp
mov
push
push
movs
mov
pop
in
retf
push
and
dec
fs
inc
sub
int3
pextrw
push
stos
repnz
push
fld
test
daa
mov
or
add
test
sub
and
lock
sub
ins
adc
pop
je
pop
(bad)
push
inc
adc
sbb
(bad)
jmp
cdq
jp
ds
pop
xchg
mov
push
aad
adc
mov
dec
mov
sub
aam
push
sbb
repz
outs
lea
cmp
sbb
dec
shl
mov
xor
aam
mov
fisttp
test
push
ins
jbe
pop
imul
push
pop
call
fbstp
cmp
fcmovne
or
xor
sub
sar
repz
jo
pushf
js
xchg
cwde
frstor
mov
pop
or
sub
or
pushf
xchg
es
push
dec
stos
into
inc
lods
jns
cwde
push
jle
daa
int3
paddusb
push
bound
sub
in
(bad)
out
dec
jbe
mov
xchg
iret
mov
push
xlat
popa
inc
ins
add
ret
inc
and
inc
dec
pop
out
jnp
xchg
xchg
jecxz
(bad)
push
jecxz
in
jg
fs
xchg
xchg
shr
jnp
fdivr
mov
fadd
out
mov
call
popf
std
mov
dec
mov
xchg
mov
out
pop
add
sbb
ins
inc
movs
ins
push
add
xchg
lods
call
xchg
sbb
ret
test
push
or
iret
jnp
mov
jl
mov
pop
mov
mov
sub
retf
test
jl
cmp
test
and
aam
add
mov
sbb
sub
or
mov
jle
shr
push
push
adc
mov
cmp
sbb
mov
push
sbb
fisttp
inc
adc
inc
fmul
dec
xchg
and
test
in
jmp
cli
in
repz
xor
xchg
mov
mov
jns
dec
xor
or
(bad)
jb
xchg
inc
dec
fwait
sbb
inc
adc
inc
sub
int3
shl
sbb
in
inc
je
test
sub
inc
(bad)
jbe
inc
add
into
or
push
mov
shl
sahf
stc
pushf
or
or
idiv
nop
add
sub
ror
rcl
dec
(bad)
je
and
lods
ja
sbb
mov
inc
cmc
mov
xor
cmps
and
cmps
(bad)
fstp
push
out
pop
mov
or
repnz
mov
or
fucomi
out
in
ja
outs
pop
in
sub
adc
pop
mov
iret
or
sub
jle
pop
std
add
test
add
cmp
add
xchg
lea
cmp
test
mov
cmp
pushf
retf
add
pop
outs
ds
jmp
jno
xchg
into
adc
fwait
jmp
ret
or
(bad)
fwait
mov
add
cmp
repz
cli
inc
xor
test
mov
mov
stc
out
fwait
mov
mov
test
ins
cld
outs
mov
sbb
cmp
mov
call
les
(bad)
jns
retf
popf
pusha
(bad)
es
das
repnz
fsubr
gs
out
mov
(bad)
adc
push
inc
fist
ret
aad
pop
test
push
sub
cs
cmps
pop
rol
jb
in
(bad)
data16
push
repnz
xchg
push
jl
mov
or
mov
sub
test
cmps
push
dec
or
adc
push
out
xchg
test
loope
pop
(bad)
cld
xor
dec
sbb
jo
mov
add
retf
jbe
les
or
inc
stos
dec
retf
mov
push
sti
imul
pop
fistp
mov
in
les
in
mov
mov
out
sbb
push
loop
pop
xchg
(bad)
sbb
pop
retf
jmp
fmul
fs
mov
imul
not
ds
xchg
popf
jnp
cs
je
sbb
(bad)
sti
fidiv
ja
push
shr
dec
mov
jge
loope
in
ins
stos
popa
push
mov
(bad)
pusha
retf
test
mov
fcmovnu
loop
pop
or
repz
fucomip
scas
stos
jp
add
std
int3
xchg
rol
movs
jno
ja
xchg
test
fsub
std
add
hlt
inc
dec
fbstp
iret
ins
sub
or
bound
(bad)
push
and
or
inc
call
test
fcmovnb
push
clc
sbb
push
jmp
out
out
idiv
add
add
sub
cld
adc
mov
call
popa
ja
push
fst
xchg
xor
out
jne
test
ret
jmp
and
pop
sub
mov
jl
jns
mov
cdq
pusha
out
xchg
cmps
lods
jo
popf
ins
xchg
jmp
jo
movs
xor
add
dec
lods
cs
sbb
daa
jae
stos
sbb
and
clc
call
jo
or
sahf
hlt
hlt
dec
fld
(bad)
cmp
pusha
imul
and
imul
les
add
das
mov
ficom
cmp
ins
mov
imul
in
push
xor
and
add
retf
or
retf
dec
js
jne
pop
arpl
adc
push
push
pop
or
sbb
sub
push
cmps
jmp
fild
or
or
sbb
jmp
fwait
ds
adc
sti
cmps
lods
jmp
mov
cmp
xchg
sub
pop
jns
aas
nop
ja
mov
mov
pop
into
sti
ret
gs
and
fs
sahf
xor
ror
ror
lock
sbb
mov
movs
mov
test
jp
dec
test
mov
sar
arpl
int3
repz
sar
mov
and
mov
and
push
add
mov
loopne
push
sub
pop
sbb
mov
xor
data16
rol
sub
loop
not
ins
xchg
ret
pusha
call
dec
jae
push
xchg
xor
mov
repnz
sbb
mov
mov
outs
ficom
clc
sub
cmps
pop
mov
(bad)
stmxcsr
adc
fnsave
and
stc
sub
cli
and
xor
add
in
xchg
pop
mov
mov
dec
test
adc
test
cmp
add
add
jae
sub
dec
test
push
retf
cld
outs
aas
or
stos
mov
loope
fwait
dec
jmp
neg
add
scas
dec
repnz
pop
pop
(bad)
dec
xor
push
push
push
mov
xor
sbb
xchg
fdiv
adc
xor
fstp
or
aam
retf
sbb
test
fwait
adc
jmp
das
addr16
pushf
cdq
stos
cmp
(bad)
cs
xchg
je
dec
cmps
pop
movs
sub
dec
popf
push
test
mov
jmp
mov
or
rol
mov
or
sbb
ret
add
mov
cmp
in
push
mov
rcr
repnz
stos
cli
(bad)
pop
jbe
movq
push
in
iret
mov
sbb
mov
cmc
outs
xchg
jmp
xor
out
inc
mov
rcr
js
push
pushf
shr
repz
ins
fabs
push
mov
loope
adc
icebp
mov
or
aaa
repnz
inc
sahf
xor
call
xchg
xchg
loope
xor
and
pop
test
inc
clc
mov
push
or
sub
pushf
clc
lds
repz
xchg
in
repnz
dec
cmps
(bad)
adc
stc
pop
xchg
or
sub
mov
sahf
(bad)
jl
sbb
das
jle
sbb
and
lds
mov
imul
push
cmps
pop
jb
jnp
bound
ror
xchg
repnz
shr
add
sub
(bad)
retf
pop
and
cmp
cmp
push
mov
sub
sub
shl
out
fcomip
addr16
fcmovu
xor
rcl
xchg
push
mov
pop
pop
movnti
push
in
cmc
add
fiadd
dec
test
xchg
mov
(bad)
cmp
outs
push
inc
add
retf
call
add
sub
stc
mov
sub
and
(bad)
loopne
mov
jge
repnz
mov
call
dec
xor
(bad)
adc
(bad)
shl
call
jns
push
rcr
lods
fs
or
mov
dec
xchg
(bad)
gs
ins
in
jmp
inc
jo
and
jb
pop
pusha
or
fstp
pop
xor
out
rcl
pushf
sub
mov
mov
mov
scas
xchg
mov
neg
lahf
ins
popf
shl
sbb
test
push
lahf
mov
mov
and
aam
mov
arpl
call
daa
iret
pop
in
jns
add
repnz
mov
popa
and
in
sub
(bad)
jne
scas
jl
xchg
movs
sub
daa
js
and
cld
call
push
clc
loopne
outs
retf
bnd
loope
cli
xor
aam
daa
sbb
imul
stos
sti
mov
cmps
fisub
jnp
xchg
call
mov
or
dec
out
sub
pop
lea
in
cmp
scas
or
xchg
les
in
out
and
xor
mov
mov
mov
xchg
xor
inc
xchg
or
inc
scas
jmp
push
sbb
frstor
jle
loop
or
dec
lods
fldenv
inc
mov
lds
jecxz
retf
movs
int
lock
movs
xor
repnz
adc
jo
fiadd
stos
or
(bad)
div
rcr
mov
sub
cmp
mov
push
cmc
xor
mov
adc
inc
and
ja
call
add
add
pop
jg
fwait
mov
mov
dec
fist
add
arpl
mov
push
cld
scas
xor
pop
xor
inc
xor
cmp
das
retf
pop
loop
add
jnp
xchg
xlat
std
mov
imul
fwait
push
add
int
cmps
int
inc
repnz
cs
int3
push
cs
push
mov
cs
dec
fild
jge
xchg
lea
sbb
shr
inc
add
inc
icebp
mov
jo
psubusb
adc
adc
sub
mov
mov
call
cs
test
mov
or
xor
push
and
cmp
jg
arpl
mov
in
cmc
add
xor
mul
mov
inc
std
mov
cli
add
adc
xor
sbb
cmp
in
stos
aam
add
retf
and
shl
fistp
and
sub
push
or
jmp
inc
inc
in
fisubr
(bad)
jbe
mov
cmp
sbb
and
or
xor
in
mov
out
inc
lock
or
push
and
inc
jle
cmp
popa
pop
in
dec
stos
adc
cmps
jo
jge
adc
les
adc
mov
outs
lods
out
mov
outs
cmp
fdiv
fs
data16
ficomp
sub
out
call
sbb
sar
out
js
test
mov
pop
pop
pusha
pop
das
sub
sub
jcxz
adc
les
xor
cmp
lahf
push
loop
test
fdiv
cmp
retf
test
cdq
jle
aas
mov
sar
push
iret
mov
dec
jmp
jb
dec
sbb
add
in
push
(bad)
and
(bad)
jmp
enter
fdiv
jl
push
out
add
mov
movs
cmp
jno
retf
std
test
inc
nop
push
ret
push
push
(bad)
jecxz
dec
(bad)
push
into
pop
rcl
xchg
jmp
fistp
mov
jno
sbb
xchg
pop
xchg
add
mov
xor
movs
ds
and
sbb
sub
sar
inc
sbb
jp
and
mov
(bad)
dec
adc
inc
outs
inc
outs
jle
adc
push
pop
out
jge
pop
sub
xchg
cli
push
pop
mov
mov
cld
pop
les
jae
jge
test
push
stos
js
and
jl
push
popa
jmp
pop
jae
data16
popf
inc
dec
sub
dec
mov
jne
mov
inc
xchg
fcomp
aas
mov
inc
(bad)
jae
ret
inc
shr
(bad)
inc
cli
mov
xchg
add
dec
xchg
add
ins
jmp
lea
adc
in
lds
nop
bound
sub
cld
cld
xchg
in
imul
jbe
(bad)
push
xor
xchg
mov
jle
fsub
in
imul
inc
or
jb
stos
lahf
sbb
daa
push
pop
and
xchg
xchg
pop
cmp
jmp
ja
les
(bad)
mov
out
(bad)
in
test
add
dec
movs
mov
mov
or
xchg
outs
push
pop
mov
int
dec
and
mov
rcr
xor
icebp
inc
mov
enter
repz
in
pushf
stos
pop
or
xor
inc
push
xchg
fwait
jl
out
std
adc
stc
jne
dec
inc
adc
mov
cmp
js
ret
dec
int3
dec
add
inc
mov
fnstenv
push
ret
or
inc
pop
in
mov
jne
iret
or
mov
cwde
sub
jo
adc
std
aaa
out
int
inc
adc
cmp
aad
imul
es
nop
pop
in
adc
stc
cdq
movs
mov
push
mov
(bad)
les
stos
jbe
xchg
test
scas
add
int
aam
sbb
mov
xor
ret
jmp
mov
imul
inc
jmp
nop
leave
test
push
sub
add
mov
dec
xchg
and
fldcw
pop
dec
(bad)
int
dec
mov
repnz
retf
jge
test
xchg
movs
or
pop
adc
sbb
cli
sbb
retf
sub
mov
call
push
adc
dec
out
sbb
icebp
xchg
fnsave
sub
js
xor
in
or
dec
or
mov
in
fcmovne
fcom
inc
shr
repnz
adc
rcr
pop
ds
sahf
fst
pop
call
and
mov
jle
stc
popa
jno
pop
jnp
cld
jo
mov
inc
test
fnstenv
mov
jecxz
push
mov
fidiv
rol
ins
out
and
push
sbb
sti
cmp
sub
jge
test
xor
mov
call
(bad)
test
in
(bad)
cli
and
aam
inc
mov
push
dec
(bad)
inc
jns
mov
leave
and
repz
test
jmp
adc
pop
xchg
loope
mov
cwde
pusha
jne
inc
xor
mov
out
(bad)
ins
fisub
dec
cmp
sbb
jae
rol
loop
call
or
adc
fwait
pop
pop
mov
sbb
aad
nop
cwde
loop
adc
xchg
fnsave
or
dec
popf
test
lods
stos
sti
mov
jg
sub
dec
pop
jmp
cmp
cwde
sbb
jns
adc
inc
mov
sahf
push
pop
cli
or
pusha
or
push
inc
sti
cs
movs
push
outs
mov
mov
sub
xchg
sbb
icebp
cld
jne
mov
and
and
in
mov
add
inc
fdivr
es
popf
das
sub
cli
jecxz
ins
jp
adc
int3
pop
frstor
arpl
mov
inc
pop
hlt
call
jmp
lock
popa
jl
(bad)
mov
cmp
xor
dec
push
fcmovb
loope
inc
jmp
sub
jle
cwde
mov
shr
fdivr
adc
push
push
popf
pop
and
loopne
scas
aas
xchg
fdivr
mov
add
mov
cmp
cli
or
xchg
inc
ret
repnz
pusha
jg
push
mov
sub
adc
mov
mov
in
adc
inc
and
or
xor
test
movs
das
add
hlt
loop
xchg
push
test
pop
mov
out
and
jle
xor
adc
test
loopne
lock
dec
stc
push
pop
cli
jmp
repz
leave
sbb
or
jge
aaa
shl
cwde
(bad)
push
sar
stos
jbe
mov
cmp
cmp
or
mov
adc
and
cmp
(bad)
inc
pop
mov
cwde
add
sar
jmp
rcr
neg
mov
dec
outs
stc
nop
xchg
jbe
xchg
mov
inc
pop
aaa
shl
ror
pusha
cmp
pusha
xchg
retf
mov
cld
dec
loope
mov
mov
and
jnp
adc
bound
inc
rol
xchg
add
daa
aaa
cwde
jmp
cmc
stos
jns
mov
push
fsubr
sub
inc
mov
rcl
int3
(bad)
jmp
mov
sub
outs
fnstenv
lahf
addr16
and
arpl
je
clc
adc
int3
outs
js
xor
mov
inc
mov
pop
push
sbb
xchg
jo
cld
(bad)
lock
dec
cli
push
mov
(bad)
fadd
mov
sub
pop
pop
or
and
pop
jno
fld
cmp
sbb
(bad)
scas
sbb
cmp
out
sbb
cmp
loop
movs
xchg
dec
(bad)
retf
jmp
jecxz
push
cmp
sbb
arpl
nop
je
xchg
pop
inc
in
push
fdivr
mov
pop
mov
outs
inc
mov
bound
mov
adc
push
imul
stos
ret
xor
dec
out
(bad)
aad
xchg
das
lods
fadd
fs
add
out
mov
shl
xor
ret
in
popf
scas
(bad)
inc
pushf
push
sbb
cmc
jnp
in
xchg
adc
push
call
pusha
add
outs
or
or
dec
imul
sahf
xchg
or
std
pop
(bad)
jmp
enter
imul
fs
and
cli
cmp
scas
cmp
mov
and
in
fidiv
out
test
inc
das
dec
adc
mov
xchg
nop
in
push
pusha
and
shl
adc
xor
or
mov
or
jp
jmp
outs
out
(bad)
mul
jp
enter
push
jmp
dec
mov
(bad)
fwait
xor
inc
push
int
cwde
(bad)
popa
aad
(bad)
mov
and
xor
mov
or
cmp
(bad)
xchg
rcr
push
clc
je
mov
(bad)
mov
pop
xor
add
fld
xor
mov
mov
mov
mov
adc
push
scas
mov
popa
arpl
lahf
mov
call
or
(bad)
sub
mov
jb
arpl
push
aas
add
ins
dec
xchg
shl
inc
pop
test
cmp
jne
jl
jnp
lods
into
push
pop
movs
rcl
push
sbb
mov
inc
data16
fldcw
call
rcr
mov
jnp
jl
cmc
dec
sub
in
rcl
inc
cmps
pusha
cli
fucomi
sub
adc
or
cmp
jge
pop
cmp
dec
cwde
sub
imul
mov
inc
add
imul
lock
nop
out
outs
ret
out
sbb
cmp
jnp
jbe
inc
lods
fs
jno
(bad)
xor
and
imul
sahf
push
icebp
sub
jo
jne
xchg
in
sbb
movs
mov
movs
arpl
jmp
xchg
mov
or
mov
(bad)
push
sbb
(bad)
xchg
sbb
into
rcr
or
popa
push
test
pushf
push
gs
sbb
fcomp
jle
cmc
cmps
jp
cmp
mov
dec
les
and
or
setp
shr
mov
mov
and
lds
enter
lds
push
push
dec
enter
sbb
cmps
dec
xchg
push
or
adc
fwait
fs
xor
sub
stos
push
cli
and
add
dec
lods
dec
push
fnstenv
aad
mov
retf
loopne
mul
mov
ret
sub
sti
dec
imul
(bad)
popa
mov
mov
xchg
pop
push
jp
pop
out
push
mov
adc
cli
sbb
adc
push
hlt
call
cdq
int
xor
push
cs
xor
enter
inc
mov
mov
fwait
add
pop
push
cld
or
stos
xchg
push
in
pusha
aad
cs
pop
push
mov
mov
pop
es
or
out
sub
inc
mov
add
das
jge
xabort
aad
cmp
mov
push
dec
inc
pop
loope
cld
sub
mov
aaa
repz
dec
popa
ret
sahf
mov
xor
dec
mov
xchg
icebp
mov
xchg
loopne
sar
fild
cld
mov
retf
loopne
xchg
mov
xchg
sbb
cs
push
adc
(bad)
movs
arpl
mov
or
shl
dec
inc
lahf
jns
gs
dec
rcl
add
inc
fs
xor
shr
das
push
cs
sbb
adc
mov
or
cdq
and
and
repz
(bad)
xor
retf
pop
nop
inc
aaa
mov
scas
imul
icebp
mov
xchg
pop
sahf
imul
cmps
mov
(bad)
mov
ins
jge
xor
xchg
fstp
stos
movs
jbe
jg
fcom
popf
xchg
mov
enter
add
mov
and
xor
lea
jle
pop
jp
sub
inc
mov
and
mov
std
popa
jg
sub
pop
or
(bad)
push
mov
mov
das
dec
xchg
stos
leave
and
stos
inc
shl
out
add
into
enter
cwde
fbld
jge
test
retf
push
mov
mov
xchg
mov
lock
fwait
repnz
loop
fcomp
pop
add
outs
or
jae
or
xchg
test
push
and
div
jp
aas
ja
rcl
mov
jmp
inc
mov
cmps
retf
adc
and
sub
sub
adc
sbb
mov
imul
repz
ret
hlt
(bad)
loopne
int
jae
jg
adc
jp
push
fistp
jo
xor
or
movs
mov
and
fmul
repz
call
jnp
into
jl
xor
hlt
out
or
fiadd
dec
in
int3
dec
test
test
xor
jmp
xchg
data16
and
lea
out
xor
dec
(bad)
push
inc
in
xchg
pmuludq
pop
cmps
mov
pop
jne
mov
mov
hlt
(bad)
pop
aas
mov
and
aam
outs
cmp
cmp
jae
(bad)
mov
int
aas
mov
aad
retf
inc
sahf
xchg
int3
fimul
sub
xchg
mov
sbb
out
std
sbb
push
push
stos
add
add
dec
or
sbb
shr
pushf
push
push
jl
arpl
xchg
mov
mov
daa
nop
jecxz
loope
push
pop
mov
inc
dec
test
add
add
int3
ss
pop
xor
scas
push
lods
mov
push
out
test
shl
sbb
mov
jb
das
iret
adc
data16
call
push
cmp
jns
mov
add
iret
(bad)
gs
sub
shl
out
jecxz
xor
mov
xor
mov
aad
ss
push
(bad)
jle
mov
or
fistp
xor
jmp
icebp
lds
sbb
mov
movq
cs
int3
popa
mov
xlat
aad
mov
dec
mov
mov
(bad)
lods
xor
cdq
hlt
ret
hlt
int3
xlat
in
aam
and
mov
mov
shl
into
(bad)
clc
mov
push
cld
mov
and
test
jns
mov
pop
aaa
mov
inc
scas
stos
scas
movs
aad
pop
dec
loop
dec
(bad)
cmp
sub
mov
sahf
arpl
inc
es
mov
mov
aad
xchg
mov
sar
mov
out
int
call
push
ja
hlt
sbb
vmovhps
fcomp
popf
imul
stos
dec
and
das
cmc
pop
into
aad
shr
adc
cmp
jmp
cmp
rol
lods
imul
gs
inc
add
out
mov
das
dec
mov
ins
loop
lock
jl
inc
scas
inc
mov
pop
cmp
(bad)
aam
add
cld
dec
push
jp
mov
jnp
loop
ret
lds
mov
push
or
fldenv
(bad)
dec
lea
xor
jbe
or
add
dec
cmp
and
mov
jns
loop
dec
test
or
sbb
sbb
pop
dec
addr16
jmp
jb
adc
sbb
lea
sub
mov
(bad)
adc
out
hlt
pop
test
pusha
add
(bad)
cs
cld
leave
cmp
cmps
jo
shl
in
(bad)
xor
test
dec
adc
sar
outs
cmp
jle
repz
sbb
out
push
xor
pushf
into
loopne
pop
popa
xchg
mov
outs
pushf
mov
sub
sbb
out
pushf
cmp
mov
int3
xor
cmc
fdivr
push
sbb
leave
int3
sub
adc
int3
test
mov
jle
cs
jl
cmp
mov
rcl
inc
mov
cmp
jmp
loope
movs
or
sbb
loope
push
shl
mov
outs
dec
les
pop
loopne
(bad)
repz
cwde
mov
(bad)
test
(bad)
jo
shl
stos
and
repz
mov
in
in
sahf
int3
add
inc
mov
mov
add
sbb
in
mov
loopne
adc
fs
push
adc
fidiv
xchg
movs
xor
sub
and
cmp
dec
ss
xor
jle
cmp
cmp
dec
push
push
sbb
outs
int
es
ins
cmp
xlat
ss
test
dec
fdiv
ficom
lods
inc
ins
inc
out
call
jmp
imul
lea
test
mov
loope
in
ins
mov
xchg
fsubr
stc
fistp
adc
xchg
test
sbb
mov
jne
(bad)
jg
popa
mov
and
loopne
lods
xchg
scas
xor
inc
push
cmp
call
xor
xor
sub
lock
imul
pop
pop
test
gs
pop
fwait
ja
shr
xor
xchg
lods
ficomp
(bad)
xor
xchg
add
sbb
pop
push
pop
inc
mov
shl
leave
mov
shr
mov
stos
test
or
stc
fcomp
mov
(bad)
enter
ins
daa
dec
lods
mov
dec
fmul
int
ret
and
pop
push
iret
adc
lahf
aaa
popa
sub
add
(bad)
icebp
rcl
sbb
jmp
dec
jmp
xchg
jl
in
lock
fdivp
pusha
(bad)
stc
fs
add
iret
les
jne
push
bound
xor
test
and
inc
jge
das
outs
adc
bound
mov
jbe
jecxz
mov
xchg
jno
inc
ret
mov
das
test
xor
xchg
aad
clc
imul
(bad)
test
je
imul
push
cmps
inc
inc
mov
push
test
in
stc
hlt
or
pop
and
pop
or
repnz
xor
div
gs
sti
sar
ins
jecxz
adc
sbb
lock
push
push
xor
popf
dec
shl
lahf
int3
jnp
and
push
in
push
cmp
enter
test
call
or
das
adc
push
shl
add
cmps
pop
mov
sahf
mov
daa
ja
add
pop
outs
mov
js
pop
sbb
jno
test
fld
les
pop
popf
out
xor
add
(bad)
loop
pushf
fadd
imul
mov
loop
int3
mov
cs
jmp
mov
pop
outs
xor
add
fisttp
test
jecxz
pop
pop
dec
pop
or
stc
jge
ss
jae
cmp
push
pusha
arpl
es
jns
xor
mov
shl
repnz
lods
mov
test
dec
adc
add
out
test
icebp
add
ins
push
retf
add
jl
xchg
into
push
push
retf
cld
push
jmp
ror
imul
ja
sub
cmp
add
fs
and
jmp
mov
and
jo
stos
push
push
cmp
aad
adc
add
xchg
and
sbb
xchg
adc
sbb
pop
icebp
pop
addr16
push
fwait
je
mov
xchg
jae
lods
repz
push
jle
adc
sahf
mov
sahf
std
pop
repnz
ret
sbb
jp
cli
imul
sete
movs
xor
mov
leave
add
mov
shl
and
jbe
pop
push
out
lods
jge
arpl
and
xor
pushf
test
and
daa
aam
or
ficomp
cmps
or
mov
cdq
xchg
xor
jbe
ja
inc
fcomp
popf
inc
retf
loop
xchg
scas
movs
sbb
arpl
push
stc
push
fstp
xlat
xchg
mov
or
mov
es
mov
enter
xor
test
xchg
jle
gs
aam
arpl
cmc
dec
inc
repnz
mov
aad
stc
shr
fadd
imul
fsub
cmp
push
mov
jnp
inc
bound
and
jnp
sbb
repz
jle
outs
leave
pop
mov
mov
xor
ins
dec
outs
daa
inc
xchg
pusha
xor
mov
ja
ror
sub
sub
sub
cwde
int
mov
cmp
jmp
jl
das
(bad)
daa
adc
out
add
sub
cmc
pop
mov
stos
ret
ficomp
popf
(bad)
stc
jmp
jle
xchg
bnd
mov
cmps
sub
dec
dec
stos
data16
mov
cmp
cmp
bound
or
mov
push
pop
rcl
add
retf
mov
mov
shr
imul
mov
push
sti
pop
push
(bad)
cli
(bad)
ja
mov
mov
(bad)
hlt
add
je
movs
and
jle
add
push
sbb
ret
jo
icebp
push
mov
xor
(bad)
imul
xor
mov
pushf
cmps
sub
sti
rep
fld
xlat
xchg
cmps
popf
retf
lods
mov
jl
pop
stos
test
arpl
test
lahf
jne
mov
and
jns
ins
cli
push
ret
dec
jne
jne
sar
pop
outs
call
movs
std
and
jno
neg
in
or
dec
sbb
adc
aas
fld
push
aas
jg
call
aas
nop
push
jle
sub
outs
adc
sti
stos
xlat
mov
pop
dec
push
and
add
inc
fs
shr
xchg
stc
sbb
ins
fsub
popa
mov
push
mov
call
scas
pop
xchg
inc
retf
mov
mov
mov
dec
nop
sbb
loope
jecxz
mov
outs
xlat
jp
jb
pusha
(bad)
in
sub
dec
xchg
dec
jns
retf
cmc
shl
pop
pop
or
retf
pop
jmp
(bad)
iret
push
sub
jbe
and
jne
pop
or
(bad)
std
xchg
sbb
icebp
pushf
add
inc
lods
sbb
es
and
inc
scas
(bad)
jmp
xor
pop
dec
push
call
jp
push
out
or
jl
inc
and
gs
sahf
and
int3
jmp
cmps
mov
outs
vpunpckhwd
call
xor
push
xor
pop
loop
pop
xor
mov
sub
mov
inc
cli
scas
jne
ja
add
into
pop
push
adc
adc
pop
aam
sub
aad
cwde
cmp
jp
push
xor
pop
pop
call
mov
mov
sbb
mov
into
dec
add
popa
call
scas
(bad)
test
aas
and
and
ret
cmp
clc
dec
push
pop
enter
call
fistp
lock
cli
(bad)
or
in
and
shl
xor
pop
div
dec
aas
jecxz
out
mov
mov
jmp
aam
sbb
mov
not
add
inc
icebp
bound
or
push
mov
mov
mov
arpl
std
sub
jae
pop
add
mov
jle
mov
(bad)
jle
stos
jmp
mov
popf
xor
retf
scas
(bad)
retf
enter
in
sub
sub
xor
and
repnz
pop
es
xchg
push
push
movs
scas
xor
bound
push
ja
fnstcw
adc
jmp
pop
je
into
mov
xchg
jle
in
sbb
fs
jmp
sub
fnsave
push
scas
mov
lods
cmp
mov
add
aad
shl
and
mov
fnstcw
or
frstor
clc
out
test
dec
jmp
jb
or
(bad)
imul
adc
rcl
inc
leave
sbb
xor
aad
stos
mul
xchg
inc
hlt
xor
es
rol
in
aas
outs
or
inc
xlat
jb
cdq
push
repnz
loope
xchg
adc
stc
ror
push
mov
sahf
pusha
inc
cwde
jbe
push
lock
stos
add
lods
cmp
daa
adc
pop
enter
cli
xchg
xchg
sti
div
cmc
scas
or
pop
pushf
test
enter
fiadd
out
adc
add
mov
or
add
out
icebp
outs
and
mov
test
xchg
mov
xor
jb
imul
lods
std
ss
sub
fisttp
xchg
rol
in
inc
mov
push
cwde
sub
aad
pop
mov
in
mov
scas
out
and
or
cmp
mov
jae
out
jnp
imul
out
enter
xchg
mov
jmp
add
mov
fild
js
sub
push
test
add
mov
mov
fidiv
or
pushf
sbb
bound
repz
mov
add
adc
int
(bad)
sbb
stos
pop
(bad)
lock
sbb
ins
test
mov
inc
and
lods
mov
test
gs
pop
add
push
inc
scas
push
or
retf
jmp
bound
imul
(bad)
sub
(bad)
fs
cmps
inc
or
mov
cmp
shr
push
xor
sub
shl
mov
push
mov
xchg
sub
into
push
cdq
dec
inc
ret
push
(bad)
xchg
ret
add
jle
sub
imul
add
loope
mov
call
call
call
push
fwait
inc
add
xchg
add
loop
xchg
leave
out
sar
adc
xchg
push
sub
sub
mov
call
mov
fnstsw
add
xchg
movs
das
cmp
ret
dec
inc
in
repz
(bad)
movs
enter
jg
adc
pop
pop
cmps
jbe
mov
inc
dec
inc
jg
sbb
push
inc
push
test
xchg
sub
inc
mov
mov
pop
xor
out
sbb
ss
mov
pop
cmp
fwait
mov
pop
xor
and
ror
lock
cwde
xchg
and
and
adc
adc
sbb
xchg
mov
add
mov
xor
mov
(bad)
cwde
call
pop
stc
lods
leave
inc
cwde
mov
sbb
pop
mov
movs
push
push
jo
data16
(bad)
sbb
cmp
jmp
xchg
push
enter
dec
mov
ds
in
add
xchg
mov
out
xchg
and
mov
mov
sub
adc
aam
cmc
or
out
push
mov
shl
iret
in
sahf
and
mov
loop
and
push
rol
mov
test
out
test
clc
in
xchg
add
add
fstp
stos
xor
imul
leave
dec
shl
addr16
mov
movs
out
push
push
cmps
dec
cmp
or
sbb
jns
sub
and
movs
pop
mov
out
sub
scas
xchg
jns
data16
arpl
push
mov
push
ins
inc
dec
adc
stos
(bad)
(bad)
xor
fst
ffree
adc
push
int3
mov
loop
pop
cmp
dec
mov
push
xchg
hlt
xchg
sbb
push
fwait
xchg
sbb
xlat
add
adc
adc
mov
pushf
aam
or
ss
and
inc
call
pop
outs
adc
push
aaa
mov
xchg
bound
xor
push
xor
add
push
push
push
jbe
inc
mov
push
pop
cmp
mov
fisub
mov
movs
mov
cs
sbb
scas
cli
ror
comiss
mov
pop
shl
jg
aaa
push
cmp
jae
repnz
add
jae
retf
imul
fwait
paddusw
pop
pop
xchg
mov
or
add
add
popf
push
lods
les
pop
fisub
inc
mov
jbe
out
popa
repnz
sub
adc
cmps
jno
mov
dec
in
call
scas
pop
add
adc
xchg
mov
xchg
in
leave
dec
cmp
int
pop
push
fistp
xchg
push
mov
in
dec
xor
repz
mov
dec
mov
sbb
inc
ror
xchg
sub
scas
(bad)
fld
sbb
sub
cmps
and
imul
xlat
popa
jb
xchg
mov
les
mov
add
push
jnp
cmp
push
jo
xor
stos
and
imul
cmp
sub
int3
cmp
xchg
out
data16
mov
stos
mov
fucomp
in
aas
xor
cdq
sar
mov
iret
adc
adc
inc
clc
add
push
cmc
rcl
arpl
add
scas
fbld
fwait
mov
fstp
iret
and
(bad)
fs
stc
rcr
lds
jne
mov
sbb
sub
sbb
xor
loop
mov
cli
and
pop
push
stos
and
(bad)
cmp
xlat
ret
pushf
out
sbb
adc
mul
cmp
inc
jno
test
iret
cmp
jp
loope
jl
xchg
pushf
aam
es
in
imul
sbb
dec
aam
pusha
ss
xchg
adc
div
iret
dec
xchg
(bad)
mov
pop
fmul
retf
daa
jbe
scas
xchg
leave
lods
in
jmp
fisubr
inc
add
mov
xor
jmp
lds
int3
rep
stos
ins
mov
sbb
out
or
call
test
mov
xor
xor
leave
stos
xchg
xchg
jg
cwde
lea
and
(bad)
daa
or
pop
leave
xor
push
xor
inc
mov
fsubr
in
in
jp
arpl
jecxz
xchg
enter
enter
call
jecxz
lock
jns
sub
dec
ret
mov
mov
xchg
push
div
pop
xchg
js
pop
jbe
xchg
push
push
and
mov
out
dec
or
xchg
add
push
push
or
das
push
jmp
fcom
inc
adc
ins
mov
dec
cmps
daa
jg
pop
rcr
add
and
xor
pop
mov
cwde
sahf
push
jne
ins
fmulp
data16
sti
and
xor
push
hlt
outs
outs
sbb
inc
out
ror
aaa
daa
call
sub
cdq
in
dec
xchg
ja
lahf
cmp
mov
fild
xlat
out
push
mov
lods
repnz
jmp
mov
mov
mov
sti
inc
test
iret
pushf
pusha
into
iret
dec
ret
or
scas
push
sar
cmp
in
movs
daa
xchg
add
int
sbb
data16
push
mov
or
fs
xchg
ja
jmp
fs
push
cmp
mov
sub
cmp
in
sbb
mov
adc
fisub
mov
out
fiadd
cmp
dec
push
adc
cmovs
add
scas
or
(bad)
xor
out
xlat
aaa
dec
lock
pop
call
(bad)
in
jno
push
data16
sar
or
and
aam
xchg
sub
push
and
or
aad
test
jnp
pop
fwait
mov
loope
push
cmp
sar
jno
sub
jge
pop
cmp
pop
mov
mov
dec
pop
push
rol
div
mov
cld
fisttp
scas
mov
fwait
nop
test
xchg
inc
fist
xor
mov
es
and
jp
mov
sbb
sbb
iret
mov
addr16
pop
fidivr
js
loopne
inc
js
pop
xchg
cmp
xchg
in
jns
int
add
mov
push
dec
lods
mov
mov
cmp
ret
mov
xchg
lods
jnp
mov
mov
daa
xchg
pusha
(bad)
or
mov
push
jne
pop
out
mov
add
call
dec
jp
pop
mov
call
add
test
xor
frstor
(bad)
pop
sbb
imul
adc
clc
jns
loope
in
mov
or
mov
aaa
dec
sahf
mov
push
sbb
and
not
xchg
in
pop
data16
adc
pop
repz
hlt
xor
inc
dec
retf
mov
mov
mov
xstore-rng
cmps
(bad)
cwde
scas
xchg
mov
mov
pushf
xchg
fld
fld
shl
test
jne
or
rcl
out
adc
pop
sub
ss
pop
out
inc
inc
inc
data16
and
xchg
adc
xor
lock
outs
(bad)
mov
ffreep
sub
push
xchg
js
lock
dec
push
xchg
push
inc
adc
xor
fcomp
inc
xchg
shr
call
icebp
inc
ffree
push
dec
pop
lods
jle
call
scas
push
scas
xchg
push
ret
outs
cmps
jp
int
sbb
mov
inc
aad
call
pop
jp
retf
jo
ins
push
pop
dec
add
in
arpl
pop
imul
add
je
mov
push
inc
(bad)
push
in
outs
jp
mov
lods
xchg
or
and
sub
mov
sbb
adc
ret
fwait
push
lods
mov
data16
mov
(bad)
cmc
shl
gs
sbb
or
fst
jnp
adc
pop
das
xor
repnz
inc
adc
bound
jp
into
rol
paddw
and
repz
sbb
and
pusha
nop
shl
dec
add
mov
rcl
push
push
jp
adc
rcr
jge
jns
sti
push
cmps
ret
aaa
je
dec
and
mov
sbb
or
cmp
test
das
mov
sub
adc
out
in
push
pop
in
ins
sub
xchg
fcom
inc
addr16
pop
mov
hlt
test
jbe
push
mov
movs
mov
dec
push
xchg
add
cld
leave
inc
(bad)
jmp
mov
in
adc
inc
repnz
mov
loop
sub
jp
xchg
cmc
jbe
cld
out
stos
mov
retf
inc
xchg
xchg
outs
xchg
ret
repz
jo
fdiv
faddp
js
movs
xor
cmp
fistp
retf
jge
push
and
xchg
dec
sub
mov
inc
ins
mov
xchg
xlat
in
mov
push
fcom
popf
sbb
mov
mov
mov
xchg
mov
mov
add
cmps
repnz
mov
pop
in
pop
mov
shr
add
xchg
ret
retf
cmp
xchg
sub
push
push
jmp
call
(bad)
lds
jmp
mov
dec
cmp
and
dec
dec
sar
mov
cmps
loope
gs
(bad)
jp
shl
push
mov
leave
sub
ss
jp
jle
aaa
gs
aas
(bad)
enter
adc
scas
sub
pop
dec
and
add
icebp
outs
cwde
jmp
push
add
loop
jmp
mov
outs
ficomp
mov
mov
in
movs
cli
sub
mov
mov
jo
outs
cdq
pop
xor
push
clc
retf
xor
sub
push
push
aas
in
pop
imul
outs
cmp
add
(bad)
aad
mov
das
scas
cmps
sti
lods
sub
push
jae
adc
call
xchg
mov
aaa
mov
call
dec
mov
movs
loope
add
pop
stos
ja
sub
fs
pusha
dec
je
cli
jb
and
ret
pop
pusha
icebp
xchg
lea
sub
adc
mov
and
frstor
jge
ja
sbb
inc
nop
cwde
dec
adc
jbe
push
push
jbe
stc
scas
mov
test
retf
out
lods
adc
xchg
push
test
sub
add
clc
mov
scas
pushf
push
sub
test
jae
imul
jg
(bad)
out
call
fidiv
int3
adc
test
jno
lods
rcr
adc
mov
adc
lahf
sub
adc
adc
pop
mov
sbb
xor
xchg
dec
mov
sub
repz
out
jno
fs
inc
cmp
leave
les
ss
xor
outs
xor
sub
ret
retf
xchg
inc
outs
fcmovb
cdq
(bad)
and
add
stos
enter
push
and
ret
dec
add
dec
dec
leave
imul
push
and
add
xor
or
or
adc
stc
mov
xchg
xor
popa
mov
add
cmp
inc
ret
cmp
push
mov
mov
setle
sub
dec
(bad)
pop
mov
mov
cmp
scas
xchg
adc
and
gs
lahf
(bad)
out
sub
mov
or
jbe
dec
cdq
outs
lahf
push
xlat
cwde
jno
xchg
(bad)
adc
sbb
mov
mov
fsubr
sbb
movs
sti
cs
cmp
cs
(bad)
or
pushf
es
push
jmp
cld
cld
mov
cmps
sub
fbstp
or
jl
in
xchg
iret
addr16
xlat
xchg
cmp
cli
fst
inc
mov
and
xchg
imul
pushf
mov
dec
(bad)
inc
cmp
lea
imul
sub
xor
adc
dec
inc
pop
jmp
getsec
add
jge
or
and
lods
(bad)
lds
inc
and
push
sbb
and
adc
cmc
or
inc
std
fild
adc
sub
shl
dec
test
jl
cmp
fdivr
inc
xchg
pop
and
es
pop
mov
jae
mov
(bad)
mov
cmp
mov
sub
and
pop
fs
lds
xor
or
sbb
ins
push
xor
aaa
jge
sub
inc
shl
cld
xor
lods
mov
add
cwde
outs
sbb
fnsave
jmp
lods
push
or
cs
das
mov
dec
jge
fmul
pop
xor
aad
aam
bound
push
push
adc
stos
jmp
(bad)
cdq
aad
mov
and
mov
int
mov
int
jl
xchg
xor
and
popf
or
dec
jl
jnp
xlat
(bad)
(bad)
mov
adc
adc
in
push
sub
xchg
clc
xchg
xchg
sub
ss
lds
and
fs
dec
ins
jmp
test
aas
xchg
scas
push
jno
scas
adc
loop
cli
add
mov
or
sbb
clc
(bad)
jnp
mov
enter
adc
leave
xor
add
xchg
lds
and
mov
js
sub
sti
sub
unpcklps
(bad)
mov
inc
mov
and
add
hlt
retf
test
xlat
ins
push
repnz
lahf
push
data16
inc
test
cli
orps
or
imul
mov
jl
mov
and
test
sbb
imul
mov
hlt
inc
xor
pop
inc
das
mov
push
js
icebp
les
loop
arpl
xchg
dec
push
cmc
xor
xchg
iret
mov
lock
or
xchg
push
fs
imul
inc
pop
stos
xchg
or
jl
imul
cld
out
pop
adc
ss
mov
or
pop
je
fdiv
adc
fld
adc
mov
ss
movs
jmp
popa
repnz
pop
stos
leave
jmp
cli
inc
or
fild
dec
cmp
out
sub
imul
ins
pop
inc
xchg
cmps
jl
hlt
stos
adc
imul
mov
xchg
push
xchg
dec
out
add
(bad)
call
mov
jnp
xchg
bound
inc
out
mov
test
or
arpl
fiadd
adc
dec
mov
push
mov
xchg
das
ins
popa
dec
ins
mov
mov
push
je
or
dec
test
iret
stos
fistp
cmps
repnz
and
cwde
adc
ficom
out
inc
rcl
mov
sub
rcl
push
addr16
out
jecxz
dec
int3
pop
popf
sub
add
or
sbb
jns
xor
sbb
lock
stos
jnp
sbb
lock
cld
add
lea
fimul
repnz
rcr
pop
pop
mov
mov
push
sub
mov
stos
mov
shl
mov
jp
js
movs
sub
pop
mov
inc
mov
addr16
cmp
add
push
jmp
jae
inc
or
in
movs
xchg
cmc
popa
imul
pop
sub
mov
sbb
jl
mov
dec
adc
aad
sub
shl
adc
pop
jne
cmp
pop
mov
out
pop
mov
push
or
popa
and
mov
aam
mov
push
movs
mov
pop
sar
sbb
cmc
push
bound
adc
popa
add
ficom
sub
inc
aaa
ret
repz
sub
clc
and
cwde
frstor
imul
loope
call
ret
cld
lock
xor
sbb
sbb
push
dec
jae
inc
out
bound
int
mov
ins
shr
mov
xchg
in
ds
jmp
or
lods
call
mov
adc
xchg
and
or
pop
xor
jne
les
imul
aam
sbb
sti
std
mov
pop
xchg
test
(bad)
into
sbb
mov
push
mov
out
fwait
xchg
dec
or
push
and
and
mov
rcr
inc
cld
call
sti
or
mov
dec
or
dec
retf
adc
rcr
push
mov
cs
xor
cdq
adc
aas
sub
xor
pop
rcl
xchg
or
or
mov
ja
jge
(bad)
jns
shl
rol
fimul
into
int3
push
push
outs
and
jne
xchg
ds
(bad)
outs
inc
pop
jbe
lea
mov
inc
push
adc
xchg
loope
ins
leave
pop
cwde
imul
imul
cmp
ins
shl
pop
jge
mov
call
adc
pop
or
inc
push
cs
mov
lods
scas
sbb
mov
fsubr
inc
inc
fwait
xor
sbb
add
out
popf
fs
jg
cmp
retf
sub
jg
movs
xor
(bad)
fld1
sbb
sbb
cs
mov
mov
pop
inc
jmp
ja
rep
jbe
jb
hlt
xor
sbb
gs
jae
pop
daa
aad
or
shl
or
ret
inc
xchg
imul
and
jb
lds
sub
jb
cmp
cs
(bad)
movs
repnz
fcmovnb
mov
mov
sub
mov
pop
xchg
movq
ror
sub
xor
sub
push
hlt
imul
sar
rcl
and
mov
adc
push
out
add
adc
jl
popa
xor
dec
push
jo
inc
rol
xor
dec
add
jge
mov
push
adc
out
or
mov
sub
dec
add
mov
aaa
mov
pop
test
out
shr
fcom
xor
xchg
ss
jae
outs
out
fistp
cld
jmp
push
jge
pop
xchg
imul
mov
add
xchg
pop
imul
jle
outs
push
lds
inc
mov
gs
and
inc
mov
add
jmp
dec
xchg
mov
int3
pop
cmc
cmps
fcomp
inc
ret
in
inc
stos
fs
and
mov
ja
pusha
pop
(bad)
aad
fs
mov
jbe
jne
adc
xchg
cmp
xor
(bad)
mov
fwait
iret
in
adc
retf
arpl
imul
jmp
setns
loopne
xlat
push
imul
clc
ret
mov
les
std
sar
push
and
imul
ror
sbb
and
add
(bad)
dec
add
add
inc
pusha
xchg
cli
ds
push
nop
loop
dec
xchg
sti
mov
enter
in
mov
adc
and
mov
loope
push
pop
mov
mov
sub
push
jnp
and
inc
cmps
sbb
jle
lods
fucomp
cld
jne
push
fst
cmps
in
mov
outs
imul
cmp
push
jmp
bound
shr
cmp
or
jo
cmps
stos
movs
xchg
add
loopne
test
rcr
test
and
adc
(bad)
fxtract
mov
cmp
jno
push
in
jb
sub
xchg
adc
or
add
and
dec
cmp
in
or
in
sub
sahf
sbb
stos
add
xor
(bad)
jg
es
jne
stos
(bad)
and
xor
pop
mov
icebp
stc
les
push
shr
pop
push
xchg
add
vpcmpeqb
cmp
loop
outs
rol
loop
xchg
imul
xchg
mov
inc
mov
clc
sub
stc
adc
adc
xchg
sub
shr
cmp
sar
jns
rcr
outs
out
jbe
icebp
fcomp
pop
mov
movs
and
jmp
xor
mov
mov
add
sub
mov
(bad)
in
inc
mov
mov
jle
bound
imul
lock
push
cli
addr16
jb
(bad)
fbld
mov
test
shl
add
out
inc
nop
iret
(bad)
in
inc
pusha
ror
test
mov
pop
sti
femms
int
jecxz
sub
(bad)
shl
(bad)
das
add
mov
outs
mov
mov
mov
test
cdq
xor
leave
add
xchg
jmp
cmp
cmp
add
adc
lds
jae
cmp
adc
mov
int
(bad)
pop
mov
mov
jg
cmp
push
pop
popf
jge
mov
mov
cmps
and
adc
adc
sbb
cld
pop
pop
lods
lods
mov
add
mov
ret
clc
fisub
fild
addr16
pop
call
aas
add
sub
jmp
inc
inc
loope
jns
push
and
xchg
xchg
das
dec
jmp
cmps
emms
(bad)
mov
push
xor
jae
les
dec
std
fcmovnu
test
push
push
or
rcr
dec
and
leave
in
gs
pop
clc
imul
nop
rol
sar
mov
pusha
mov
jg
fsub
out
sub
mov
add
(bad)
jae
test
xchg
mov
and
sub
sti
xor
mov
ss
jae
jg
push
aaa
fdiv
fsubr
mov
cld
jo
sar
loope
xchg
sub
jg
xchg
jle
or
imul
cmp
repnz
adc
sbb
dec
loope
(bad)
adc
sub
xchg
fldcw
mov
arpl
mov
aad
fdiv
mov
das
mov
and
or
push
pop
mov
add
not
push
jl
test
stc
es
jmp
sub
retf
icebp
pop
xchg
inc
pop
jmp
pusha
rol
mov
(bad)
clc
pop
cld
inc
les
(bad)
cmp
(bad)
pop
add
scas
into
and
and
sbb
mov
jmp
int
push
dec
pop
adc
jmp
das
jmp
sub
pop
xchg
and
in
mov
hlt
cs
xchg
into
mov
adc
sub
push
pop
mov
adc
sbb
jle
dec
js
repz
sub
mov
(bad)
fnstsw
adc
cli
mov
dec
mov
jns
inc
xor
jle
sbb
jne
xchg
out
movs
jbe
pop
mov
pop
mov
int3
mov
cmp
sahf
icebp
lods
ret
dec
cmp
in
sub
cmp
push
jmp
ret
xor
push
jecxz
cmp
loopne
test
pop
es
add
dec
jnp
push
aaa
mov
stos
inc
push
pushf
movs
jbe
stc
xor
cmps
aam
jge
xchg
scas
jbe
lods
inc
xor
mov
mov
jg
jns
dec
add
movs
mov
mov
cmp
retf
cs
aaa
aad
loopne
(bad)
add
arpl
ds
push
inc
cdq
fstp
mov
xchg
mov
shr
fldcw
xchg
mov
cmps
add
xchg
push
xor
add
daa
sub
ins
rcl
jns
fdiv
mov
dec
mov
icebp
shl
and
xor
xlat
pushf
fs
inc
or
mov
fisttp
out
sbb
and
in
(bad)
in
or
in
pusha
cld
add
xchg
(bad)
bound
pusha
jb
xchg
pop
lahf
mov
ss
popa
xchg
pop
inc
add
adc
cmp
cmp
xor
pslld
adc
and
outs
xor
in
add
repz
dec
arpl
fistp
cmc
fidivr
sub
mov
push
aam
lahf
add
in
mov
js
push
sbb
repz
sti
out
xor
cmp
jns
jno
int
inc
pop
outs
sti
adc
(bad)
mov
aam
outs
sub
pop
mov
repnz
fdivr
mov
cdq
ins
fs
inc
sub
mov
inc
add
jmp
push
sbb
sub
pop
xchg
xor
stos
sbb
js
push
pusha
ret
je
arpl
dec
xchg
test
rol
rcr
pusha
scas
pop
pop
push
xor
adc
sbb
or
adc
sbb
in
sbb
js
movs
pushw
push
xor
ret
ret
add
mov
cmc
xor
sbb
in
es
inc
cmp
pop
pop
xor
retf
sub
sub
cmps
das
jmp
popa
fwait
inc
and
jns
sbb
sub
mov
jb
sbb
(bad)
xchg
jmp
ret
(bad)
mov
sub
jmp
pusha
lock
mov
out
ret
push
add
leave
adc
dec
jb
inc
inc
mov
jg
fdivr
lahf
div
(bad)
cmp
push
xor
sti
add
push
mov
ins
mov
movs
stos
out
adc
das
jnp
sbb
fsub
fwait
retf
xchg
jns
inc
test
or
or
adc
test
sbb
mov
test
add
mov
mov
jle
retf
mov
jle
mov
and
inc
int
test
aaa
je
unpckhps
jne
dec
mov
outs
call
lock
pushf
ins
sahf
pop
sbb
ins
(bad)
fnsave
iret
jbe
aad
adc
xor
pop
jo
xor
jge
inc
mov
cld
fistp
sbb
or
loop
(bad)
in
and
ins
cmp
stc
jns
jmp
and
pusha
cmc
cmp
mov
nop
sti
movs
clc
sbb
int3
outs
mov
cmp
pop
ficomp
js
scas
movs
sub
iret
les
jo
xor
pop
fistp
push
dec
push
rol
push
xchg
adc
sub
hlt
ins
out
int3
jb
js
cmps
cmp
popa
pop
fs
xlat
stos
jl
push
dec
(bad)
xlat
(bad)
in
ins
imul
call
xor
mov
aaa
xchg
rcl
cmp
clc
scas
into
jge
xlat
push
ins
loope
pop
mov
sub
test
adc
ficomp
jecxz
repnz
cmps
out
fidiv
retf
xchg
sbb
movs
(bad)
pushf
(bad)
js
fsubr
xor
pop
sub
cmp
test
imul
mov
outs
push
test
adc
repz
inc
cmp
loope
bound
inc
lock
lahf
cmovbe
pusha
mov
xor
pusha
mov
out
sub
and
cmp
sti
(bad)
and
stos
pop
js
xchg
vmovaps
jg
mov
movs
sub
add
sub
inc
cmps
js
cmp
outs
std
test
add
addr16
or
bound
sbb
cmp
cmp
push
sti
or
push
adc
jmp
jbe
push
cmc
and
std
mov
cmp
sub
sbb
ja
inc
sub
add
add
scas
mov
jo
xchg
stos
xor
xlat
in
jns
imul
inc
jbe
out
shl
(bad)
or
out
int
cmc
mov
pushf
in
pop
jg
jmp
scas
movs
outs
jmp
add
cli
xor
aam
test
in
sti
inc
popa
add
jnp
inc
add
into
bound
jb
stc
cmps
sbb
fsubr
dec
inc
jmp
mov
sub
inc
push
or
dec
and
adc
xchg
jb
sbb
pop
cmc
ja
xor
mov
xor
std
cmp
hlt
outs
adc
out
lock
fbstp
stc
push
xor
out
aaa
sub
call
adc
fwait
js
add
rcr
sbb
dec
fs
icebp
push
cli
mov
ror
in
dec
lods
int3
dec
stos
imul
mov
inc
mov
pop
inc
sub
or
mov
out
adc
cli
xchg
out
or
adc
mov
push
lods
xchg
adc
and
pop
mov
xor
sbb
mov
hlt
or
sub
fimul
mov
cmps
mov
fmul
jnp
jge
int3
in
js
call
shr
mov
dec
sub
scas
inc
sbb
push
mov
out
push
daa
dec
outs
push
push
mov
push
jmp
and
adc
sub
repnz
cld
test
dec
imul
lds
cld
mov
cmp
cmp
pop
push
(bad)
jbe
data16
or
and
sub
pusha
lods
fmul
sbb
(bad)
add
inc
mov
mov
inc
mov
stos
ficomp
pusha
or
mov
xchg
icebp
dec
cwde
das
mov
repnz
add
fs
cli
pop
push
pop
pusha
das
jge
adc
aam
inc
shr
jmp
sub
shl
pop
cld
imul
dec
in
out
div
(bad)
in
dec
mov
sub
add
ds
mov
test
shl
dec
ror
outs
mov
inc
daa
push
das
outs
xor
inc
fld
in
and
xor
xlat
mov
pop
test
cs
fs
shl
dec
(bad)
cmp
inc
push
add
adc
fstp
in
adc
pop
mov
inc
or
jl
in
push
pop
dec
adc
or
inc
(bad)
adc
and
scas
or
inc
sar
push
or
add
(bad)
into
sbb
dec
mov
add
or
or
sub
imul
cmc
scas
inc
je
mov
mov
or
std
(bad)
rcr
sti
rcl
push
add
(bad)
and
pop
or
jns
sar
cmps
retf
cdq
sbb
xchg
std
push
add
pop
mov
cdq
xchg
mov
cmp
out
call
jmp
lods
shr
into
inc
ds
cmps
ret
gs
jae
into
pextrw
cwde
lock
fcomip
pop
cmp
in
xchg
push
mov
in
(bad)
and
push
push
js
inc
mov
int
xor
pop
repnz
pusha
movs
fisttp
retf
jbe
stc
mov
sbb
out
fcmovb
gs
dec
sub
jl
xchg
mov
call
dec
dec
neg
movs
add
popf
inc
test
call
dec
out
push
pusha
cmp
je
icebp
jbe
cs
scas
fld
cwde
imul
test
ret
xor
jle
test
pop
cmp
inc
mov
daa
fisub
shr
and
push
jne
stos
xchg
fwait
call
and
sub
test
nop
adc
popa
stos
xor
(bad)
or
push
add
mov
ret
xchg
xlat
mov
cmp
imul
outs
push
adc
mov
xor
adc
(bad)
pop
icebp
dec
test
int
or
mov
dec
iret
push
ret
cwde
test
in
sbb
cli
mov
push
je
out
lods
or
mov
xchg
xor
pop
add
scas
sbb
sbb
fimul
push
add
fs
fisubr
mov
fdivr
mov
call
mov
shr
sbb
je
test
out
inc
cdq
push
cmp
cmp
sub
jge
mov
adc
fisttp
xchg
inc
mov
out
fdiv
icebp
(bad)
push
fimul
idiv
mov
int3
mov
gs
sub
sbb
out
pop
or
pop
js
inc
sti
lods
test
jo
mov
scas
sub
push
mov
pop
jp
push
shr
test
or
push
repnz
xchg
pop
(bad)
mov
enter
mov
mov
inc
push
aaa
dec
or
cmovae
lods
rcl
and
or
out
push
pop
call
sbb
mov
out
popf
fneni(8087
syscall
rcr
adc
jb
popf
arpl
in
xchg
fs
icebp
sub
cld
retf
sar
dec
jp
cmp
fcmovnbe
add
xchg
stc
or
mov
popa
xchg
clc
test
in
int
jbe
sbb
pop
(bad)
adc
xchg
jno
dec
scas
mov
inc
sahf
cli
(bad)
jne
pop
sub
gs
mov
push
add
out
(bad)
shr
jo
cmc
inc
add
inc
(bad)
lea
and
mov
add
fist
ins
cdq
sub
and
xor
fwait
mov
mov
call
add
adc
lods
and
gs
fnsave
xchg
(bad)
shr
sbb
es
push
or
sbb
sub
rcr
mov
nop
mov
mov
jnp
aas
mov
mov
and
or
and
inc
fstp
popf
scas
jp
out
add
cld
rcl
cwde
nop
jo
iret
mov
mov
xor
push
ds
or
enter
repz
test
sbb
jl
xchg
jp
dec
pop
hlt
cmp
lds
jnp
ins
adc
out
sbb
jne
sub
stos
cmp
cmp
xor
mov
(bad)
lock
lods
mov
jns
jno
fsub
icebp
lods
fs
stos
data16
mov
mov
nop
push
mov
sbb
loop
cli
fstp
jo
dec
(bad)
in
popa
or
test
mov
les
rcl
ss
jnp
sbb
dec
cmps
inc
pcmpgtb
push
out
ins
jmp
push
test
sub
mov
cmps
jnp
push
or
ret
aad
out
div
ins
sub
(bad)
les
fnsave
sub
popf
xchg
dec
mov
aad
inc
rcl
int
ja
dec
int
sub
mov
pop
mov
das
scas
push
sbb
retf
or
rcr
mov
int
(bad)
jmp
stos
icebp
mov
mov
ja
das
mov
fsubp
push
xlat
aas
(bad)
push
push
jle
jmp
pop
das
cmp
sub
retf
pop
sub
fdivp
dec
ss
lea
push
arpl
mov
test
rol
push
hlt
rol
sbb
dec
jb
retf
pop
mov
mov
dec
cs
jecxz
into
xor
xor
outs
jno
bound
push
jp
sti
cld
sbb
inc
xor
sbb
sbb
shl
dec
dec
leave
jae
add
push
inc
retf
ffreep
mov
cmp
daa
sbb
sub
push
jecxz
loopne
les
pop
sbb
sbb
sar
stos
mov
test
mov
fdivr
jp
dec
and
leavew
(bad)
xlat
mul
test
es
adc
add
lds
push
push
push
xor
mov
outs
adc
sahf
pusha
cmps
in
or
xor
imul
out
(bad)
test
clc
mov
jg
cmps
jbe
mov
call
jle
aas
or
jecxz
lods
ficom
inc
xor
or
fadd
lods
add
xor
je
adc
jecxz
fisub
std
mov
push
je
sub
inc
pop
pop
in
cmp
cmp
pop
aad
leave
mov
jbe
mov
ja
cmp
mov
popa
jo
pop
inc
data16
call
mov
inc
movs
mov
popf
repnz
mov
adc
stos
sub
call
inc
dec
clc
or
loopne
or
sub
in
mov
lahf
sbb
stos
test
sub
mov
jnp
ins
jge
cld
jnp
inc
xchg
imul
test
dec
out
ret
and
(bad)
fcmovne
jno
ror
(bad)
inc
sub
sub
lds
lods
lods
call
sbb
cmp
int
sbb
cs
in
(bad)
pop
fisttp
sar
cmps
dec
jns
inc
out
ja
jmp
cwde
jno
xchg
imul
shl
cmp
bound
pop
cdq
call
shr
mov
and
shl
das
ss
jg
cdq
stc
cmp
aaa
mov
repnz
fwait
int
xor
push
int
xchg
movs
loope
pop
mov
int
pop
ss
xchg
daa
mov
test
loopne
fcom
jecxz
push
dec
fcomp
je
jmp
or
fsub
jmp
retf
inc
adc
jbe
aam
jl
jmp
dec
cmp
vmptrst
mov
div
or
push
repnz
cmps
and
mov
dec
ins
outs
cmps
popf
jmp
loopne
(bad)
ret
dec
mov
pusha
lahf
mov
fidiv
xlat
push
test
popa
xchg
test
mov
(bad)
sub
jp
mov
jno
scas
xchg
add
mov
xchg
cmp
cmp
icebp
inc
loopne
push
dec
push
int
(bad)
jmp
ret
fs
cmp
add
(bad)
adc
lock
nop
out
lock
jns
mov
inc
add
mov
jecxz
adc
mov
pop
idiv
stc
jno
popa
adc
add
ja
aam
mov
add
lods
pop
push
out
jmp
mov
add
adc
pop
xor
movs
imul
or
fcom
mov
(bad)
sbb
push
retf
ins
es
xor
pusha
out
cld
pop
inc
lods
nop
sti
mov
mov
cmp
repz
mov
push
ror
mov
imul
test
cld
repnz
dec
jl
pop
ja
adc
sbb
sbb
push
test
pop
add
addr16
jbe
aaa
ds
cmp
scas
jae
mov
lds
out
hlt
sahf
mov
(bad)
lods
cmps
lock
movs
daa
cmps
adc
xchg
sub
add
(bad)
mov
mov
jp
imul
fst
std
or
adc
sub
sub
inc
dec
arpl
xor
jb
fst
pop
hlt
ss
(bad)
adc
push
add
je
adc
or
fistp
mov
and
sbb
mov
mov
xor
addr16
mov
aas
stc
in
aad
cmp
lods
aam
inc
aas
push
retf
xor
aam
fnstenv
or
shl
pop
or
mov
add
adc
or
sub
ds
cmps
sbb
(bad)
push
aad
cmp
enter
cmp
inc
xor
or
inc
jnp
add
outs
mov
pusha
push
cmp
adc
pop
mov
jg
jp
cld
stc
mov
adc
pop
cmp
(bad)
addr16
out
push
inc
out
(bad)
jp
aam
cmp
mov
xchg
out
ret
jmp
enter
jecxz
rol
push
inc
outs
fwait
fwait
inc
jnp
add
rcr
jmp
mov
and
push
push
jg
pop
pusha
mov
jle
(bad)
xchg
xor
ja
inc
mov
stos
fnstsw
das
out
call
jecxz
(bad)
pop
adc
pop
adc
stos
gs
dec
mov
xlat
xor
jp
push
cmp
(bad)
push
call
enter
test
mov
and
mov
sti
pop
pop
mov
jg
int
adc
push
imul
out
fild
mov
cmps
or
enter
hlt
inc
aad
jg
loope
mov
cmc
inc
pop
and
mov
add
ss
push
mov
add
dec
leave
jmp
retf
fucom
adc
out
xchg
out
pusha
popa
(bad)
mov
mov
pop
sbb
fwait
push
js
mov
lock
mov
add
push
fwait
mov
inc
sbb
sti
stc
mov
pop
mov
js
mov
push
jns
movs
ins
mov
daa
sub
outs
mov
les
dec
xchg
cmp
bound
xor
cmp
inc
adc
sbb
jp
test
jecxz
in
push
mov
push
icebp
in
mov
mov
lds
in
mov
shl
arpl
dec
sbb
and
pop
jne
jnp
shl
nop
xor
mov
das
repz
mov
sbb
mov
out
pop
dec
dec
in
and
cmp
and
addr16
cmps
fwait
sub
stos
xlat
sbb
bound
stos
push
arpl
popf
out
cmc
xchg
push
xlat
arpl
arpl
jae
mov
fwait
sub
call
and
stc
cmc
lods
xchg
repz
xchg
mov
push
or
cli
outs
mov
add
lock
jno
dec
or
pop
fst
loopne
into
jno
push
mov
aas
adc
xchg
imul
mov
mov
loopne
jae
sub
arpl
ffreep
cld
jnp
loopne
retf
hlt
test
std
ss
das
pop
adc
stc
push
stos
out
inc
nop
mov
enter
push
adc
outs
mov
push
aaa
ficom
xchg
dec
mov
ss
push
in
jmp
inc
jge
add
mov
rcl
popa
dec
jg
xchg
rcl
(bad)
(bad)
fistp
cmps
cmp
cmp
sub
mov
shl
daa
or
push
dec
cmps
push
fidiv
xchg
call
and
push
das
gs
(bad)
ds
in
ds
pop
cmp
jmp
and
xchg
push
pop
fidivr
jbe
or
cmp
sbb
add
xchg
or
test
dec
mov
bound
xchg
add
mov
cmps
sub
in
mov
push
mov
mov
inc
dec
jb
push
dec
iret
pop
(bad)
fld
retf
cmp
and
inc
rol
cwde
dec
jnp
inc
scas
int3
in
xor
jb
outs
mov
xor
imul
stos
repz
sbb
fist
in
(bad)
push
mov
in
mov
fsubr
ss
jae
sbb
imul
cdq
pop
hlt
add
gs
fisub
(bad)
sub
out
addr16
sar
mov
push
mov
sub
or
fnstenv
cld
push
dec
xchg
lods
addr16
aad
test
iret
jne
je
fimul
mov
mov
into
stos
loopne
mov
jnp
sbb
setge
mov
jb
adc
mov
retf
jge
cwde
jno
mov
inc
(bad)
shl
sbb
or
test
pop
adc
(bad)
xchg
inc
ret
mov
stc
jp
mov
pop
dec
sub
and
xor
add
je
addr16
in
fwait
adc
aad
pop
clc
cmps
fld
dec
inc
int3
inc
and
sti
out
mov
sbb
aad
xor
imul
cld
call
dec
mov
lods
aad
ror
sahf
push
xor
test
xchg
mov
out
pushf
inc
jle
cmp
push
mov
movs
push
retf
ins
mov
add
mov
iret
fist
test
sub
xchg
inc
stos
sti
pusha
sub
xor
js
inc
fidivr
call
pop
rol
ins
pop
inc
neg
enter
aad
jmp
add
hlt
inc
pop
xor
jle
lods
cld
push
lock
inc
pop
sbb
pop
lds
and
fwait
jo
mov
out
mov
inc
pop
fwait
push
aaa
ja
call
pop
or
in
jle
xor
jp
add
sbb
jp
add
loope
sbb
fcomi
out
inc
sub
lds
sub
leave
cli
mov
pop
and
and
jecxz
imul
and
retf
push
ret
xlat
out
loopne
ds
shr
inc
leave
fs
or
nop
sbb
ret
ins
data16
(bad)
push
or
dec
daa
mov
mov
lock
sbb
sub
sbb
or
imul
mov
ds
scas
out
jns
loope
stos
fdiv
push
aas
xchg
pop
cbw
(bad)
movs
sub
mov
pop
pop
jl
xor
cmps
cmps
xor
push
push
mov
ret
inc
push
fwait
push
cwde
fnsave
neg
add
ins
jge
enter
pop
and
push
and
mov
cmp
mov
mov
push
in
jns
test
inc
xchg
hlt
jae
xor
shl
jle
ds
aad
adc
xor
adc
ins
dec
inc
or
inc
retf
mov
xchg
mov
or
jbe
fsubr
sahf
mov
sti
jmp
jae
add
xchg
cmps
ror
cli
and
lahf
mov
outs
and
jns
mov
mov
push
inc
add
cmp
mov
(bad)
sub
dec
cs
xlat
mov
adc
and
sar
arpl
xor
adc
aad
cmp
into
adc
imul
hlt
stos
nop
lods
cmp
cs
repnz
jb
movs
icebp
mov
mov
sub
adc
pushf
mov
mov
mov
xchg
push
xchg
ins
fidivr
pop
jno
movs
mov
or
push
lock
retf
or
fcomp
neg
adc
test
push
adc
mov
hlt
or
add
inc
xchg
dec
xchg
fstp
mov
sub
cmps
stc
cmc
iret
imul
dec
ret
inc
in
repz
cdq
inc
(bad)
ror
leave
mov
and
and
leave
sbb
out
movs
retf
dec
or
stos
int
sahf
jno
jmp
sti
mov
push
cmp
loop
fiadd
sub
imul
leave
sub
xchg
dec
scas
mov
xor
xchg
out
(bad)
mov
repz
xor
aas
and
mov
adc
popf
scas
pop
inc
push
xchg
xchg
jns
jmp
outs
shl
sub
iret
retf
pop
bound
std
enter
or
imul
xor
xor
enter
add
into
std
movs
jmp
push
dec
push
jbe
jbe
inc
and
popf
sub
fisub
and
out
add
inc
gs
xchg
or
mov
adc
or
cli
dec
push
xor
rol
ror
pusha
push
cs
out
dec
xchg
addr16
and
imul
push
or
cs
test
jns
int3
popa
jae
inc
jg
shl
pop
sub
jecxz
(bad)
std
dec
inc
mov
xchg
pop
outs
(bad)
mov
push
dec
cwde
jb
mov
retf
push
cmp
jnp
xor
mov
ret
xor
dec
xor
pop
outs
adc
mov
(bad)
call
pop
aam
add
or
mov
out
jp
add
mov
adc
cs
mov
adc
add
ror
aad
lock
movs
jnp
xchg
data16
ins
ret
add
xchg
aaa
sub
sub
jg
mov
push
cmp
nop
lods
push
mov
add
mov
xor
mov
gs
fistp
call
add
ja
add
cmp
xchg
stc
fidiv
xor
push
test
cmp
cmc
popf
fldcw
in
out
test
loopne
inc
cmp
daa
cld
sub
movs
daa
mov
(bad)
lahf
xor
pop
lds
push
iret
adc
out
fs
mov
movs
mov
xor
jo
es
push
mov
fcomp
sahf
fwait
(bad)
mov
mov
js
je
scas
hlt
mov
pop
pop
arpl
inc
cmp
aas
pop
pop
add
add
imul
sahf
push
jg
cmp
pusha
sub
mov
jnp
addr16
ror
jmp
ror
popf
fadd
imul
jge
cmp
sbb
inc
retf
jns
xor
test
arpl
mov
sbb
mov
or
mov
fstp
in
dec
dec
fucomip
mov
adc
mov
xlat
cmp
ja
adc
pop
dec
es
cwde
jle
sub
pop
mov
cmp
pushf
shl
je
arpl
outs
mov
hlt
and
adc
jo
mov
mov
mov
mov
jns
xor
sub
mov
sub
xchg
loopne
inc
hlt
pop
adc
push
sti
xchg
(bad)
mul
ret
ins
jmp
add
mov
ins
repnz
mov
jae
stc
pop
xor
fistp
mov
cmps
addr16
mov
test
loopne
retf
mov
sub
in
loopne
repnz
pop
sbb
cli
inc
hlt
ret
inc
jno
jecxz
outs
xor
xchg
fucomp
arpl
jmp
cmp
dec
(bad)
frstor
int
pusha
jo
pop
addr16
test
retf
lods
jno
mov
outs
mov
leave
fdiv
adc
pop
pop
cmp
mov
sub
(bad)
sbb
addr16
jecxz
pop
cli
(bad)
jg
dec
in
out
push
cmc
add
(bad)
int
dec
xchg
push
lahf
sbb
outs
icebp
and
pop
jp
mov
or
in
fisttp
mov
jg
xor
inc
mov
lock
stc
sub
fs
inc
dec
loop
retf
stos
ja
(bad)
cmps
inc
cmps
mov
xchg
push
shr
mov
popa
inc
les
add
pushf
xchg
and
dec
ror
daa
fld
pop
in
xor
cli
jle
clc
aad
rcr
sub
and
sbb
pop
pop
ret
test
mov
pop
jmp
rcr
lahf
mov
sub
xchg
stos
in
fs
and
jne
enter
mov
movs
mov
xor
(bad)
cld
mov
pop
dec
push
aad
(bad)
cld
mov
pop
shr
outs
add
push
in
movs
and
pop
sbb
ja
jns
adc
inc
fld
pop
lds
inc
mov
dec
out
dec
ret
mov
inc
jmp
sub
push
enter
push
and
xor
jns
popa
pop
pop
sbb
call
je
pop
or
inc
retf
out
test
dec
js
add
jno
push
push
clc
xor
cmp
sbb
push
or
les
scas
cmp
cmc
pop
into
daa
mov
push
in
push
pop
pop
retf
push
mov
call
hlt
imul
mov
out
adc
pop
movnti
fnstsw
in
sahf
pop
retf
call
adc
outs
jbe
xchg
in
popa
cmp
cwde
xchg
mov
arpl
out
imul
jmp
arpl
add
push
pop
setp
mov
pop
adc
stos
pop
lock
push
stos
shl
cmp
int3
sub
pop
mov
(bad)
jge
dec
rep
adc
mov
out
xor
jle
sahf
scas
dec
push
ds
fstp
cli
pop
pop
lods
xchg
dec
add
jbe
out
(bad)
rcr
push
popa
lea
xor
or
je
jp
test
out
xchg
dec
loopne
je
mov
or
xchg
rol
or
sub
mov
lock
rep
cmp
sub
mov
cld
and
addr16
retf
and
hlt
add
sbb
addr16
loop
nop
jno
cwde
mov
xor
ror
and
lea
cld
adc
xchg
sub
or
jle
in
cmp
fmul
add
sbb
mov
lock
fisubr
sub
xor
jle
leave
jb
retf
jmp
push
std
push
xlat
pop
inc
daa
gs
imul
sub
dec
cmp
in
in
fist
loop
pushf
inc
mov
sbb
mov
inc
mov
scas
fwait
mov
dec
jmp
mov
test
jecxz
ins
or
cmps
fwait
mov
xor
hlt
mov
add
sub
inc
dec
inc
dec
sub
inc
pop
fist
pop
xor
(bad)
stos
mov
xor
call
fs
mov
push
adc
or
dec
loop
mov
ins
mov
lea
cmp
jno
test
pop
fistp
pop
movs
es
pop
inc
jmp
sbb
and
lock
in
gs
addr16
xor
(bad)
data16
sub
xchg
mov
daa
cmp
jmp
outs
jae
inc
adc
(bad)
or
sbb
mov
mov
jmp
xchg
in
fs
adc
jno
lds
dec
xor
ss
push
fisttp
cmp
scas
jp
jb
dec
mov
jmp
cmp
jmp
mov
into
xlat
into
aas
adc
jns
xor
pop
scas
dec
popa
dec
jno
in
leave
out
xor
loopne
jl
add
je
mov
popa
push
pop
les
jb
jl
pop
rep
and
leave
cld
mov
dec
mov
std
and
jmp
daa
movs
ror
adc
sub
and
in
pop
cs
sbb
and
arpl
test
cwde
mov
ret
sub
xor
sbb
sbb
xor
push
test
xchg
sbb
push
lds
loop
aaa
push
daa
adc
ret
scas
sub
add
add
inc
scas
jne
pop
add
mov
loop
adc
into
loopne
loope
push
xor
sbb
xor
mov
dec
movs
xchg
jmp
std
adc
cmp
test
clc
sbb
sub
int3
into
mov
jno
lahf
xchg
in
xchg
js
mov
adc
icebp
in
dec
fnstsw
and
(bad)
retf
call
adc
lds
rcr
jo
jns
movs
push
data16
lahf
nop
outs
ror
dec
ss
test
mov
int3
in
mov
sbb
das
xchg
push
or
xor
mov
lods
xchg
and
lods
mov
lds
sahf
mov
mov
jecxz
in
xor
hlt
lahf
mov
std
ror
push
fucomp
push
ret
cld
out
pop
retf
daa
fs
sti
je
push
adc
fdivr
mov
gs
sub
cld
mov
in
fadd
lods
mov
inc
mov
fidiv
loopne
repnz
je
adc
dec
adc
clc
inc
jnp
mov
xchg
das
cdq
stc
call
icebp
jl
jo
out
adc
shl
lahf
arpl
jo
xchg
les
mov
pop
push
mov
xchg
pop
(bad)
rcl
mov
mov
mov
cmp
jle
add
jns
(bad)
xchg
test
std
pop
pop
jbe
fist
out
jbe
sbb
mov
or
imul
jle
loope
add
cld
sbb
xor
das
jb
icebp
push
cld
pushf
call
adc
sar
daa
cmp
outs
push
mov
rcl
jle
sub
ds
pop
loopne
aad
mov
je
adc
or
push
xlat
or
in
les
pusha
mov
mov
shr
inc
cmp
out
frstor
lea
push
jge
imul
outs
xchg
dec
push
bound
push
mov
jae
stc
add
test
dec
pushf
hlt
jp
in
movs
cmp
jmp
retf
dec
sbb
loope
pop
cmps
jo
nop
or
sub
or
lods
sub
ret
nop
(bad)
sub
imul
xor
xor
fist
fistp
ins
adc
fwait
inc
mov
aam
inc
inc
repz
lods
test
cmp
mov
imul
push
sub
xchg
lock
mov
cmp
in
out
out
icebp
mov
adc
ins
adc
sub
rcl
mov
push
ret
in
gs
xchg
xchg
xor
pop
das
cmp
mov
cdq
push
enter
push
jmp
cmp
out
pop
ret
call
or
gs
dec
int3
ds
or
int3
fs
lods
dec
(bad)
pop
add
dec
shl
fs
sub
pop
out
mov
test
cmp
loope
or
mov
sbb
and
mov
push
push
test
and
idiv
jl
stos
dec
and
(bad)
cmp
sbb
std
add
fldpi
pushf
cmp
xor
jecxz
iret
ficomp
(bad)
xlat
sub
ja
jge
jbe
push
not
or
outs
jae
adc
inc
cdq
mov
or
adc
mov
dec
cmp
adc
outs
mov
cmp
mov
(bad)
ror
ss
inc
push
fadd
inc
ds
sub
test
and
(bad)
xchg
pop
inc
jmp
cmp
repnz
rol
fsubr
in
mov
mov
ret
push
daa
push
add
mov
gs
sar
sbb
adc
mov
loope
loop
call
mov
retf
sahf
sub
gs
bound
push
push
jbe
inc
data16
lock
pusha
pop
or
sub
mov
popa
jo
cmp
cmp
mov
add
les
pop
inc
ret
out
fucomip
fdivr
sub
push
loop
push
mov
adc
sub
pop
inc
adc
int3
add
and
or
mov
pop
xchg
jecxz
movs
adc
mov
mov
imul
or
fbld
xor
adc
js
jl
push
(bad)
sbb
dec
inc
sub
mov
mov
leave
push
push
pop
mov
sbb
and
fist
ror
jb
xchg
fcomp
je
adc
xchg
ds
scas
shl
add
mov
sbb
or
addr16
push
push
sahf
rcl
mov
and
or
je
adc
inc
sar
daa
in
push
mov
xor
in
enter
adc
int3
pop
lock
test
jmp
and
loop
adc
pop
popa
pushf
call
lock
jnp
outs
xchg
js
push
jbe
xchg
cmp
ins
cmps
mov
jno
and
stc
imul
cmp
test
pop
je
in
or
and
dec
mov
jecxz
rcl
add
jne
mov
inc
pop
pop
jmp
test
scas
ja
mov
mov
test
(bad)
test
xchg
mov
jmp
sahf
sbb
nop
sub
dec
mov
out
dec
dec
xchg
fwait
add
push
push
repnz
pop
mov
aas
mov
out
xor
sbb
sbb
loopne
ins
cmp
jno
push
push
pop
fist
xor
popa
mov
add
mov
inc
sub
adc
shl
cld
jle
lahf
dec
push
cdq
add
loopne
xor
rep
imul
dec
lahf
push
sub
push
xchg
mov
(bad)
shld
icebp
icebp
mov
into
adc
cmp
popa
jb
mov
daa
cmp
test
jbe
push
shl
dec
popf
or
push
jmp
jae
fild
outs
cmp
sub
test
push
xchg
mov
jge
push
push
lds
mov
cmps
imul
stos
into
sbb
mov
cmp
call
push
stos
mov
push
cli
jo
rcr
mov
mov
and
repz
fcom
pop
rcl
popf
scas
dec
add
and
fsub
sub
jl
mov
pop
movs
popa
add
fistp
or
dec
inc
dec
loope
enter
fcomip
retf
std
pop
mov
inc
xor
mov
sti
sub
sahf
clc
fisubr
xor
repnz
stos
les
movq
jb
pop
inc
frstor
pop
lods
mov
adc
xor
mov
(bad)
xchg
or
sbb
push
fwait
sub
sbb
push
mov
inc
js
fs
imul
adc
movs
push
leave
repnz
inc
add
int3
push
fistp
sbb
push
and
push
jecxz
push
fnstsw
(bad)
cmp
add
mov
sbb
ja
neg
dec
adc
inc
sub
pop
push
dec
bound
adc
movs
mov
fadd
ds
and
sar
fs
xchg
aad
adc
test
add
xchg
(bad)
adc
popf
neg
scas
cmp
(bad)
daa
adc
jo
in
loop
or
jae
jbe
adc
call
jge
rcl
loopne
mov
add
repnz
inc
leave
jo
cwde
mov
cmp
push
shl
sub
fwait
aas
retf
leave
push
call
and
inc
push
mov
sbb
loopne
js
mov
es
retf
je
mov
jg
inc
dec
pop
jne
xor
fidiv
retf
or
lods
mov
cmp
movs
sti
cmp
mov
mov
(bad)
ffreep
into
mov
mov
dec
cs
(bad)
(bad)
fucomi
outs
ins
movs
inc
pop
mov
in
in
push
mov
or
imul
lds
xchg
mov
repnz
jno
icebp
jmp
mov
pop
xor
enter
adc
into
sub
push
bound
jmp
ficomp
rol
ss
mov
add
scas
(bad)
scas
pop
les
(bad)
aad
mov
lahf
mov
je
jle
push
push
adc
add
cmp
or
cmp
and
icebp
jg
dec
es
imul
jbe
aam
lods
inc
(bad)
adc
or
loopne
test
js
ss
push
cwde
imul
lahf
push
push
mov
dec
sbb
outs
cli
mov
and
or
xor
xchg
(bad)
jae
movs
mov
push
mov
xchg
iret
sahf
and
fld
sahf
sbb
add
xchg
lods
mov
imul
cld
call
pop
xchg
and
out
jmp
in
mov
mov
mov
in
pop
pop
ret
popf
lods
mov
mov
xchg
xor
xor
xchg
jno
pushf
jbe
pushf
test
cmp
push
leave
bound
stos
lds
xchg
out
or
ret
dec
je
sahf
pop
ins
add
dec
and
or
sbb
(bad)
and
cmp
inc
jp
fbstp
cmp
loope
ins
jns
dec
js
mov
xor
repz
dec
out
icebp
sbb
and
inc
mov
xlat
mov
mov
mov
push
dec
pop
movs
lods
iret
mov
pop
adc
mov
mov
pop
dec
cmp
mov
mov
adc
sbb
push
mov
outs
loop
ror
rol
imul
(bad)
cs
pop
sub
loopne
or
lods
in
sub
mov
mov
hlt
adc
xor
jmp
cbw
push
adc
adc
fidiv
mov
or
dec
bound
loopne
neg
ins
cwde
scas
icebp
bound
or
lods
mov
sub
sbb
out
adc
push
push
pop
fisub
in
xchg
add
mov
add
ds
mov
mov
fwait
cmp
push
dec
or
mov
jl
sub
pop
mov
mov
int3
inc
cld
test
scas
xchg
es
(bad)
mov
push
jb
in
test
retf
lock
je
inc
sbb
dec
scas
push
nop
movs
or
fistp
scas
(bad)
jnp
push
fadd
sub
cmc
mov
xchg
lock
and
mov
sahf
cmp
fisub
rol
retf
mov
push
loopne
pop
mov
or
daa
rcr
mov
and
sti
fs
push
fs
and
retf
jne
test
or
aam
dec
dec
or
popf
sub
out
sub
dec
aas
xlat
sub
sbb
inc
addr16
sbb
sub
jns
and
jb
cmp
lods
and
clc
jns
jg
fsubr
int3
out
gs
pop
xor
dec
push
mov
ret
cld
(bad)
call
mov
dec
inc
push
xchg
popa
xchg
inc
mov
cmp
gs
or
sub
and
pushf
dec
jae
xlat
xchg
cmps
repnz
loope
mov
std
jle
idiv
push
xor
xor
test
pop
mov
scas
xlat
push
arpl
loop
ret
add
js
add
loope
or
lods
mov
xlat
mov
call
dec
inc
aam
cmc
imul
je
sar
inc
jmp
imul
dec
cmps
imul
loopne
dec
mov
adc
or
xchg
in
xor
lea
nop
out
mov
pop
aad
add
mov
sub
push
adc
rcl
cmp
mov
sbb
mov
fstp
or
lahf
pop
adc
xchg
pop
cwde
into
dec
mov
retf
ret
fistp
xor
or
into
scas
xor
mov
adc
mov
dec
xchg
sbb
add
lods
pop
xchg
xor
mov
rcr
popf
sahf
cmp
call
or
push
fst
pop
mov
xchg
jmp
sar
adc
push
es
jl
mov
cmc
in
cld
repnz
pop
pop
ss
aad
dec
add
int3
sub
jne
cdq
add
xor
lods
sbb
mov
outs
and
retf
push
sub
sub
pop
sub
inc
daa
inc
stc
mov
rol
es
mov
jl
lods
xchg
dec
cmp
dec
cmc
enter
sbb
arpl
movs
xchg
cmp
aam
aaa
jno
pop
jno
das
fnstcw
aas
enter
hlt
cli
adc
sahf
adc
fs
sub
aad
loopne
sbb
sbb
dec
mov
rcl
mov
sbb
sub
push
imul
or
ja
cmp
fisttp
dec
adc
fisttp
jnp
ja
lods
mov
jge
jb
cmp
push
inc
sub
pop
cmp
movs
pop
pushf
push
cmps
xchg
fcom
mov
and
sbb
lods
pop
icebp
out
xor
cmp
adc
jnp
fwait
or
lods
xor
arpl
push
cmc
stc
inc
jae
xchg
(bad)
ja
icebp
iret
or
dec
out
cmp
dec
loop
mov
jg
pushf
ror
mov
in
nop
mov
cmps
xchg
outs
je
xchg
adc
lock
aad
out
mov
xchg
add
(bad)
shr
fwait
sbb
fidiv
mov
call
popf
mov
push
enter
out
or
int3
fisttp
jb
fimul
fcom
jnp
add
lods
cmp
and
ins
int
cmp
sub
cli
ds
add
push
ins
inc
dec
pop
movs
jg
fiadd
mov
push
int
mov
ins
test
sbb
test
mov
dec
int
pop
call
cld
mov
gs
dec
push
xor
test
mov
sub
lea
jecxz
sub
jnp
cmp
mov
(bad)
std
xor
ret
popa
pop
inc
and
xchg
dec
ret
push
xor
jno
jl
fdiv
inc
ins
sub
mov
inc
cwde
lea
imul
aas
icebp
sbb
loopne
repz
cmp
in
mov
sbb
test
iret
call
jb
outs
pushf
test
shr
sbb
jp
imul
jge
cmc
in
and
scas
test
dec
(bad)
aam
scas
(bad)
push
nop
mov
ret
inc
fs
add
pusha
inc
sub
inc
cmps
inc
pushf
pop
or
aam
pop
xchg
leave
jnp
fsub
inc
movs
adc
fs
sbb
cli
and
xchg
popf
or
lahf
test
stos
sub
in
mov
fnstcw
cmp
shl
sbb
out
add
mov
retf
push
or
pop
outs
jmp
inc
test
cmp
and
xor
outs
sub
outs
in
std
mov
scas
cmp
adc
stos
ja
add
repnz
stos
push
inc
inc
ret
and
jb
into
fdiv
es
gs
out
bound
pop
sub
adc
ror
ins
loope
pusha
mov
fild
mov
std
nop
jmp
sbb
movs
fild
jge
repz
push
test
dec
xchg
push
aaa
dec
in
(bad)
scas
ds
stos
push
lea
mov
lahf
pushf
xor
jne
(bad)
cld
cmp
fild
jae
test
cs
xor
adc
hlt
lods
and
dec
fsubr
dec
call
es
push
jle
jge
dec
iret
jns
(bad)
in
or
dec
arpl
mov
push
loopne
xor
mov
push
pop
out
in
out
inc
rcl
and
jae
imul
add
mov
mov
nop
adc
push
ja
pop
sub
shl
pusha
data16
add
push
daa
popa
xchg
cmp
leave
les
hlt
mov
retf
sub
ja
jo
inc
add
push
ins
out
add
repnz
sub
add
outs
sbb
mov
stos
add
and
pop
imul
mov
fiadd
imul
(bad)
xlat
inc
shl
mov
pop
sar
lea
retf
add
ins
sbb
adc
or
lahf
addr16
(bad)
cmc
cmp
xor
sbb
push
inc
add
aad
leave
stos
mov
adc
pop
cdq
jg
push
push
xor
pusha
sahf
cld
mov
xor
repz
call
xchg
jno
sbb
dec
(bad)
mov
cwde
cmp
arpl
sub
lock
inc
sub
aas
dec
dec
adc
sbb
mov
jns
cli
jg
jbe
push
add
push
mov
leave
cli
sbb
dec
cmp
data16
loopne
test
cs
fiadd
jmp
xchg
imul
stos
cmp
add
jae
pop
jnp
push
pop
push
int
repnz
aas
push
cld
pusha
inc
(bad)
rol
push
loope
cdq
jae
jecxz
lods
jae
stos
int
mov
xchg
push
lods
call
icebp
das
aas
ret
scas
retf
or
or
into
push
xchg
or
in
bound
pushf
dec
pushf
xor
neg
clc
push
cmps
fdiv
leave
enter
mov
xchg
sti
jmp
in
dec
ins
ret
loopne
xlat
cmp
mov
xor
dec
cmp
xor
pop
push
sbb
pop
inc
xchg
nop
bnd
cli
icebp
(bad)
sbb
push
mov
popf
push
sbb
inc
stc
in
inc
adc
outs
mov
in
dec
lock
popf
pop
test
xor
retf
xor
scas
aam
gs
(bad)
sbb
fist
fstp
xchg
mov
(bad)
adc
in
pop
pop
pop
jbe
inc
inc
(bad)
sbb
add
mov
mov
aad
jmp
mov
popa
inc
(bad)
and
mov
shl
adc
mov
push
movs
pop
leave
xor
arpl
dec
js
pop
cmps
retf
cmp
mov
es
inc
scas
retf
loopne
mov
cmp
lahf
push
int
pop
push
dec
mul
scas
ds
xlat
ja
jge
pusha
add
xor
pop
popa
jp
pop
fild
mov
xchg
sub
sub
aas
cmp
sbb
mov
mov
sbb
clc
mov
dec
xor
or
jl
ins
xacquire
aas
fmul
adc
popf
icebp
add
addr16
hlt
pop
ins
sbb
push
lods
imul
mov
mov
adc
sbb
pop
hlt
dec
(bad)
rcl
cld
pop
rcl
mov
(bad)
arpl
push
inc
push
mov
add
sub
clc
cld
out
(bad)
sub
xchg
add
adc
js
iret
mov
cmps
sub
cld
jb
fidivr
retf
jg
or
add
cdq
aam
daa
lods
jno
xchg
aam
int3
imul
dec
xchg
stos
xor
imul
dec
in
cmc
lods
out
xlat
dec
mov
lock
xor
adc
xlat
sbb
sbb
dec
jns
jnp
mov
push
jecxz
add
dec
and
call
cmps
fs
fimul
mov
out
into
(bad)
test
loopne
(bad)
dec
ror
pop
or
sub
test
clc
sti
cmp
or
jmp
frstpm(287
mov
retf
pushf
test
mov
clc
sbb
xor
and
lods
cmp
or
inc
push
cwde
or
xchg
xor
leave
xor
retf
ins
(bad)
or
cwde
push
test
daa
pop
add
in
push
stc
and
mov
fld
jo
jb
arpl
jl
or
jmp
in
js
fcmove
outs
sbb
aam
cmps
adc
push
or
fimul
std
pop
add
packsswb
xchg
out
aaa
cmps
das
push
lds
xchg
in
repnz
adc
cmp
dec
jmp
scas
cmp
out
rcl
xchg
sub
pop
retf
std
repnz
pop
retf
push
aaa
or
dec
and
in
lea
dec
nop
cmps
pusha
fmul
mov
or
je
and
pop
mov
sbb
fcomp
fmul
mov
inc
js
shl
aaa
unpckhps
cmp
jp
inc
or
shr
rcr
aad
jo
retf
test
call
mov
ss
je
adc
into
cmps
ins
inc
xchg
(bad)
jnp
out
loopne
add
push
ret
pop
xor
jl
pop
inc
sub
bound
push
push
ins
jnp
adc
xor
retf
in
imul
jecxz
push
movs
lods
jl
xor
stos
shr
sub
cmps
pop
pop
add
aas
rcr
sbb
xor
arpl
popa
cmps
mov
daa
loopne
mov
mov
in
js
stc
cmps
test
rol
push
sbb
rcr
sub
pop
int
mov
mov
or
nop
fisubr
(bad)
sbb
adc
and
sub
mov
mov
(bad)
pop
xchg
(bad)
in
repz
pop
cmp
mov
lahf
cmp
xchg
add
pusha
sub
inc
retf
nop
fwait
out
cmp
dec
or
push
popa
pop
ins
xor
lods
sub
ins
dec
out
out
and
or
lahf
imul
push
add
nop
std
int
cmps
into
jle
cmp
xchg
loop
cmc
cli
push
sbb
es
popf
add
scas
aaa
ds
ins
cmp
fdivr
dec
sbb
cmps
push
leave
cmp
or
inc
(bad)
mov
pop
jge
loopne
xor
fwait
cmp
outs
mov
pop
seta
in
jnp
fcom
shr
shl
loop
xacquire
pop
out
jmp
rcl
popa
js
mov
and
xchg
clc
ret
inc
push
js
fdivr
div
stos
or
xor
adc
xchg
mov
call
add
mov
test
lods
adc
cmp
scas
dec
scas
in
pusha
cmp
(bad)
les
xchg
icebp
repz
lods
xchg
ret
xlat
cmps
ror
ret
aam
jbe
mov
and
or
mov
inc
adc
dec
popf
lock
push
pop
stc
inc
mov
sahf
xchg
mov
cmp
xchg
lahf
(bad)
mov
pop
xchg
mov
dec
je
ret
jmp
lock
aad
mov
push
outs
les
xchg
sub
pop
sbb
jle
add
xchg
or
fimul
xor
lods
lods
or
es
out
jmp
push
push
mov
mov
mov
in
pop
iret
pop
mov
fcom
pop
push
add
mov
js
int3
(bad)
mov
or
pop
movs
and
push
mov
lods
xchg
outs
sbb
mov
jmp
cld
out
int
sbb
ret
bound
aad
dec
xor
inc
sub
ins
fs
test
mov
mov
push
jecxz
es
push
sbb
sub
add
cmp
jbe
cmp
push
iret
imul
ss
mov
mov
adc
pop
and
enter
mov
and
shl
in
xlat
(bad)
push
shr
(bad)
lahf
pop
adc
test
mov
fcomp
inc
fisubr
loopne
xor
test
call
xor
push
repnz
sbb
pusha
inc
jp
xor
into
jbe
inc
jle
xor
leave
imul
xor
outs
fs
dec
or
ret
pop
lods
inc
lds
dec
cmp
mov
imul
xor
sub
push
inc
loop
outs
and
pop
cli
xchg
mov
bnd
arpl
cmps
pop
into
je
mov
out
clc
hlt
(bad)
inc
adc
and
in
sub
popf
lock
clc
retf
dec
ret
lock
mov
inc
mov
repz
lods
jecxz
ffree
mov
xor
push
pushf
push
lods
push
and
das
mov
or
push
cmps
repz
pop
inc
popf
std
xor
scas
adc
stc
test
push
in
call
and
in
jb
arpl
adc
mov
cmp
rol
dec
xchg
cwde
imul
fdiv
mov
pop
xchg
cmc
ins
mov
lock
stos
test
std
(bad)
cmp
mov
cmc
lahf
daa
cld
adc
out
add
out
pop
sbb
xchg
mov
loop
cmp
retf
ds
mov
inc
mov
push
fwait
ror
or
mov
pusha
add
push
mov
loop
jl
int
dec
dec
mov
aam
test
mov
xchg
out
in
mov
jge
ret
ror
sub
cmp
arpl
daa
stos
stos
ret
pop
pop
sub
cdq
stos
je
mov
xor
div
pusha
cmp
jne
and
inc
fnstenv
adc
adc
repnz
pushf
fsubr
inc
es
jmp
jg
outs
in
jo
jns
sub
ins
push
dec
pop
retf
push
jnp
int
add
inc
cmps
adc
dec
hlt
popf
retf
int
int3
mov
push
stc
adc
push
push
inc
mov
pop
add
lock
push
cli
inc
push
xor
fbld
dec
movs
ffreep
mov
jae
push
retf
jp
lods
std
adc
pop
lahf
std
xlat
jb
pop
inc
lds
fs
sub
in
mov
sub
lods
sar
push
mov
std
(bad)
ds
clc
inc
fucomip
test
jmp
or
adc
push
test
sbb
mov
test
jmp
adc
sbb
mov
cmova
inc
pop
xchg
and
shl
and
stos
cdq
fist
and
adc
or
test
jg
xchg
pop
test
cmp
mov
imul
xchg
and
cld
jp
or
push
call
pop
push
pop
test
sahf
gs
addr16
sbb
ret
outs
test
jge
or
mov
cwde
ret
sbb
pop
arpl
push
addr16
pop
mov
mov
pusha
js
lock
adc
fisttp
jno
int
and
xchg
and
or
out
lea
and
retf
adc
test
push
push
ds
push
mov
xlat
cmps
and
cs
shr
dec
je
imul
or
xor
mov
cdq
adc
clc
sub
repz
pop
pop
outs
sahf
cld
imul
and
pop
dec
call
add
out
out
push
stc
cdq
dec
add
in
leave
jmp
(bad)
int
cmps
xchg
cld
popf
rol
xchg
bound
ins
sbb
pusha
mov
pop
int3
pop
add
inc
imul
test
jmp
aad
mov
sub
pop
(bad)
dec
xor
sbb
pop
push
jnp
dec
cmp
dec
aas
inc
enter
cli
sbb
jns
mul
xchg
xor
cmp
mov
cmps
mov
cdq
shl
inc
retf
fstp
scas
sti
pop
retf
dec
icebp
dec
aas
retf
repz
adc
popa
jle
movs
imul
test
mov
ret
jb
and
pop
xchg
xor
stc
jnp
push
or
aas
stos
inc
pop
lods
cwde
aad
or
out
leave
xor
test
cmps
jecxz
sbb
mov
pop
mov
(bad)
ficomp
repnz
sub
retf
fs
outs
mov
loopne
mov
jmp
ins
mov
jmp
mov
dec
cmp
call
hlt
sbb
stos
or
adc
mov
cmp
out
mov
push
adc
mov
ret
clc
sbb
retf
mov
mov
bound
inc
out
dec
out
inc
add
jnp
add
arpl
jb
fld
push
test
add
fcom
and
add
iret
shr
outs
pop
jle
popa
das
ror
mov
sahf
imul
jecxz
inc
dec
xor
call
(bad)
sar
lods
cmps
pop
fcomp
outs
or
fimul
mov
dec
jge
stc
jo
daa
rcl
movs
cmp
dec
les
jle
push
or
mov
pop
pop
xor
and
(bad)
ficom
push
jge
mov
and
outs
movs
or
push
aad
(bad)
mov
cld
and
mov
fstp
jl
lock
std
mov
fnstenv
xchg
jb
push
shl
add
or
out
push
cmc
xchg
fdivr
sti
mov
retf
xor
mov
jnp
push
fisub
push
int
(bad)
ins
ds
inc
jmp
mov
fnstcw
fs
mov
ins
aad
mov
mov
daa
sub
cld
xor
stos
repnz
pop
or
pop
popa
ds
(bad)
sub
and
pop
fwait
inc
and
mov
dec
stc
xor
xlat
sub
add
cmp
mov
xchg
cmp
push
mov
adc
push
in
movs
int3
stos
sbb
(bad)
cmp
pop
es
imul
mov
or
or
adc
int
test
iret
(bad)
mov
push
jno
sar
or
ds
bound
nop
mov
(bad)
push
lds
xchg
ror
sbb
shl
enter
or
fisubr
adc
cmp
rcl
pop
sbb
pushf
out
xor
popf
jne
dec
fiadd
test
cdq
mov
pop
mov
stc
or
(bad)
pop
jp
mov
das
and
adc
dec
and
(bad)
and
pop
leave
xchg
out
(bad)
jle
mov
pop
aaa
(bad)
aad
pusha
into
jnp
add
js
pop
mov
jbe
dec
add
and
fld
stos
add
fnsave
pop
mov
jge
int
in
lahf
add
dec
mov
add
movs
in
sub
(bad)
sbb
pop
shr
(bad)
clc
xchg
fcmovb
and
add
popf
ins
inc
neg
out
retf
out
outs
push
xor
jne
dec
test
fs
push
enter
push
scas
mov
popa
inc
mov
push
aad
sub
and
imul
lods
outs
inc
std
pop
sbb
xchg
xchg
jmp
add
lods
adc
cmp
push
pop
or
int
cmc
jmp
push
hlt
push
aam
mov
sub
push
or
push
vpsllw
in
pop
pop
mov
dec
ret
ins
dec
cwde
stos
pop
inc
shr
data16
int
in
mov
xchg
or
lods
frstor
mov
cmp
mov
stos
inc
pop
xchg
out
push
fabs
sbb
push
sar
xchg
in
inc
jmp
push
hlt
enter
mov
ins
lea
call
and
in
push
mov
jg
sar
jo
in
in
inc
lods
xor
mov
and
push
mov
sbb
fst
jmp
sbb
scas
test
leave
add
mov
mov
push
push
jbe
jns
push
dec
push
repnz
and
xchg
(bad)
loopne
dec
mov
loopne
ins
fstp
jmp
xchg
rol
xor
dec
into
or
jmp
arpl
jmp
loopne
mov
mov
(bad)
push
xchg
add
retf
sub
pop
xchg
push
sbb
or
xor
daa
cwde
push
repnz
in
push
inc
mov
cmps
jle
jl
test
inc
add
mov
mov
call
or
scas
mul
xchg
je
mov
loopne
ins
adc
mov
shl
cmps
and
push
inc
stc
and
lahf
outs
loopne
out
mov
push
jg
xchg
pushf
xchg
fst
push
pop
inc
iret
lds
cli
cmp
mov
dec
sub
aad
iret
mov
imul
mov
test
add
and
jmp
mov
push
push
lods
sbb
adc
out
addr16
sub
sbb
leave
in
dec
cld
(bad)
and
xor
cmp
adc
and
pop
popa
mov
out
imul
xchg
sbb
push
(bad)
icebp
sbb
aad
mov
adc
or
in
imul
popa
pop
leave
mov
icebp
arpl
or
xchg
js
popf
add
cmp
push
push
ret
iret
cmp
mov
in
sti
adc
je
(bad)
js
and
mov
fwait
push
push
pusha
scas
std
lahf
push
not
out
jbe
in
jle
mov
stos
push
push
out
call
cvtps2pi
fs
xchg
push
(bad)
jae
les
or
mov
pop
add
ins
xor
sbb
in
sub
adc
sbb
sbb
push
mov
imul
arpl
fld
push
ja
inc
lods
jbe
mov
stos
push
xor
push
retf
jae
push
test
frstor
jmp
inc
cmps
leave
loopne
test
mov
ss
or
shl
cld
and
mov
xchg
mov
and
jmp
outs
movs
loop
add
inc
enter
mov
retf
(bad)
dec
jmp
iret
stos
jecxz
inc
xchg
or
sbb
aam
cmp
je
lahf
or
out
jle
and
sbb
cli
or
pop
inc
inc
add
mov
add
push
mov
(bad)
ss
sub
lods
ret
pop
jg
sub
in
repz
push
adc
and
mov
inc
push
retf
popa
test
rep
add
cld
imul
mov
test
stc
lahf
rcr
out
or
sti
pop
jge
inc
loope
mov
inc
xlat
mov
mov
lods
mov
mov
sahf
jmp
and
xor
sar
loope
push
in
es
inc
pushf
pusha
or
aaa
dec
xlat
xchg
pop
popa
in
dec
aad
adc
mov
and
addr16
jp
push
jp
inc
int3
push
repnz
push
fst
jmp
or
pop
fst
add
mov
mov
sub
inc
mov
xchg
mov
das
xchg
out
aaa
aaa
lods
cmps
imul
mov
jo
sbb
xchg
sbb
mov
add
bound
push
xor
scas
fwait
jmp
mov
mov
stc
cdq
jns
dec
push
into
rol
(bad)
xchg
outs
xor
pop
sub
fnstenv
adc
test
adc
cwde
and
mov
nop
popf
mov
dec
mov
mov
mov
and
jecxz
mov
pop
pop
cld
out
or
lods
stos
mov
inc
aam
fbstp
mov
dec
xchg
ret
jae
and
cli
ins
sub
xor
rol
dec
lods
push
push
xor
sbb
xchg
out
sbb
rcr
sti
sub
pop
mov
jae
loopne
popf
push
mov
push
xchg
neg
imul
or
mov
adc
std
push
sbb
or
mov
out
xlat
mov
push
sub
push
mov
and
or
pop
mov
jmp
rol
pop
cmc
retf
xor
(bad)
mov
or
add
mov
ja
(bad)
sti
movs
mov
push
outs
mov
mov
xor
(bad)
loope
xor
mov
daa
adc
sub
arpl
bnd
jmp
jl
add
push
jno
jo
sbb
lock
loop
out
addr16
sahf
arpl
dec
test
xchg
cmps
dec
mov
ins
sahf
xchg
stc
daa
fninit
lds
ja
bound
mov
xlat
mov
pop
cmp
movs
mov
or
lahf
test
addr16
mov
pop
push
pop
dec
xchg
(bad)
test
jmp
loope
mov
cmp
cmp
clc
retf
ins
fistp
outs
mov
jmp
call
test
cli
aas
cmc
into
shr
movs
ins
jg
adc
(bad)
movs
fmulp
js
sbb
stos
retf
scas
pop
call
stc
push
adc
pop
pop
into
xchg
adc
sub
sbb
mov
inc
loop
lds
jmp
mov
out
jae
inc
mov
xchg
adc
rcl
add
xchg
inc
lahf
adc
jnp
jns
sub
movs
jg
sbb
pop
inc
mov
addr16
push
mov
add
mov
or
ds
(bad)
in
cli
xor
sub
test
cmc
xchg
sbb
add
fiadd
mov
pushf
push
cmp
dec
pop
cmp
dec
adc
mov
sbb
lds
lods
adc
ret
into
rcl
lods
int3
add
in
jmp
xor
sbb
cwde
jmp
pop
mov
rcr
int
sbb
rol
mov
scas
outs
out
fld
in
pop
push
xor
jb
test
push
test
pop
(bad)
mov
xor
sbb
(bad)
mov
or
mov
daa
es
popa
retf
outs
daa
push
sub
or
(bad)
sbb
jne
jb
mov
test
inc
setl
mov
repz
ds
mov
push
or
jb
xor
cld
or
or
push
or
scas
pop
mov
js
scas
stos
out
iret
and
push
iret
rcr
repz
enter
jae
xlat
mov
stos
inc
in
xor
stos
into
movs
add
sub
into
jmp
hlt
mov
adc
loopne
outs
xchg
push
dec
(bad)
pop
cdq
xchg
jns
xchg
or
test
sub
inc
ds
ret
push
mov
and
int3
or
sbb
stc
lods
lea
add
jg
arpl
shl
inc
mov
lods
cwde
mov
inc
call
sub
ror
(bad)
(bad)
call
xchg
jl
fldcw
cwde
cmp
clc
jnp
cmp
out
test
popf
push
cli
dec
std
adc
cld
inc
jne
test
mov
mov
fnstsw
inc
fcom
sub
iret
dec
lods
sbb
scas
aam
and
cmc
push
and
push
mov
outs
mov
lods
push
test
dec
(bad)
lock
sbb
stos
(bad)
call
mov
leave
inc
ror
or
dec
enter
cmp
sub
mov
(bad)
pusha
mov
add
aaa
fimul
cmp
jecxz
adc
xor
or
repnz
pop
dec
mov
adc
push
call
xor
xor
lds
jle
jl
(bad)
fistp
xrelease
xor
jb
out
xor
dec
cmp
push
test
(bad)
fisttp
ror
mov
mov
adc
lods
jg
inc
inc
push
call
je
cld
lock
addr16
mov
in
jge
jp
cmps
mov
popf
mov
bound
neg
sbb
xor
jecxz
psubsb
jmp
shr
xor
add
pushf
out
mov
out
jge
jle
mov
js
pop
xchg
jo
loopne
fidiv
div
lahf
pop
or
or
(bad)
inc
popf
cmp
mov
not
and
cdq
mov
dec
sub
dec
xlat
xor
sbb
imul
mov
mov
or
test
addr16
push
mov
int3
cmp
test
scas
loop
sub
add
inc
add
inc
add
cs
jb
cmp
mov
dec
fidivr
stos
and
add
add
ja
sbb
sub
sti
into
pop
call
mov
add
add
pop
jns
jp
adc
jo
scas
inc
mov
inc
fist
dec
sti
stos
aaa
or
lahf
add
or
ss
sar
and
leave
xlat
idiv
push
mov
clc
xchg
cs
movs
xor
push
mov
std
sbb
jae
js
push
les
lods
aam
inc
fidivr
inc
or
idiv
xor
cdq
adc
sbb
jne
jle
ret
cmp
pushf
mov
call
push
lods
cli
pop
clc
daa
xor
stc
push
jbe
das
cmp
sub
or
popf
cmp
aaa
test
mov
and
xor
out
sahf
xchg
mov
inc
push
fisub
jbe
jae
dec
add
pop
dec
dec
stos
mov
inc
sbb
movs
hlt
add
aam
sub
inc
adc
rcr
xor
push
stc
sub
push
mov
(bad)
xchg
mov
cmps
jb
sbb
xchg
ror
and
dec
enter
sub
test
cmp
cmc
fmul
adc
mov
dec
inc
ret
out
icebp
imul
sbb
adc
push
leave
pop
es
sbb
jno
mov
mov
mov
int3
int
icebp
outs
fsub
push
pop
mov
fdivr
icebp
aad
jbe
repnz
ins
and
nop
fstp
pop
pop
test
aam
fst
nop
gs
and
stc
dec
fsincos
(bad)
cmp
in
sbb
or
arpl
sbb
stos
or
js
sahf
sub
imul
popa
push
ret
std
mov
ins
adc
cld
cmp
add
into
mov
lock
lods
cmp
sub
mov
cmp
inc
nop
cmps
inc
push
out
nop
jbe
(bad)
cmps
xor
inc
popf
fs
fist
xor
mov
jmp
bound
sar
aam
in
jp
cmp
repz
into
mov
dec
dec
gs
sbb
adc
mov
mov
sti
int
jl
adc
push
xchg
adc
psubw
in
jmp
imul
cmp
in
cmp
add
xchg
jno
adc
and
je
sub
mov
cmp
xor
repz
movs
mov
ret
jl
mov
daa
jnp
jmp
out
movs
mov
cmps
les
(bad)
pop
jle
dec
and
jle
sub
stos
xchg
push
mov
fucomp
and
sub
aaa
cmps
mov
dec
shr
inc
xor
fwait
mov
mov
int
daa
mov
mov
popf
lds
inc
sbb
movs
dec
hlt
bound
jne
fadd
iret
out
adc
cwde
fnstsw
or
xchg
(bad)
and
fucom
mov
ror
lods
inc
(bad)
fld
movs
imul
mov
push
xchg
seta
mov
sbb
jne
cmp
pop
pop
in
repnz
test
inc
ins
xor
sahf
inc
xor
cmp
ins
aad
cld
adc
inc
dec
pop
sub
ret
sub
fcom
je
push
jnp
sub
mov
shr
in
pushf
pop
jg
fnstsw
rcl
imul
push
adc
dec
std
cmp
enter
lea
add
inc
push
mov
ss
inc
sbb
dec
or
xchg
not
int3
xchg
dec
imul
jle
in
pop
adc
dec
out
shl
int3
mov
movs
ds
xor
das
lods
int3
pop
sub
dec
das
adc
fwait
aaa
xchg
adc
xor
xor
add
mov
sbb
nop
pop
cmp
or
into
in
ror
mov
clc
mov
or
jg
add
inc
mov
fld
rol
fst
dec
push
(bad)
sub
jne
cvtps2pd
scas
cwde
pop
lahf
cmp
bts
movs
add
ss
ja
sub
xor
adc
mov
jmp
dec
(bad)
scas
add
pop
mov
in
fmul
mov
add
or
pushf
movs
xlat
xor
mov
cs
sbb
cmp
mov
xchg
ds
stos
cmp
cmp
movs
add
mov
pop
or
inc
adc
ds
in
retf
(bad)
mov
and
sahf
rol
mov
add
adc
dec
pop
retf
push
cs
(bad)
mov
adc
and
bound
push
out
maskmovq
test
jae
inc
and
(bad)
std
cmp
mov
addr16
out
jp
cdq
xchg
adc
aaa
or
and
aaa
or
dec
sar
xchg
xor
cmp
pop
cmps
sbb
inc
jl
and
outs
xchg
nop
mov
jb
push
mov
and
cld
fwait
jge
inc
fld
mov
mov
adc
push
sti
or
mov
aad
mov
out
sar
sbb
ret
fisttp
cmp
retf
pushf
enter
stos
mov
inc
ror
mov
in
cmc
mov
jae
pushf
add
bound
add
dec
out
mov
rol
xor
and
xor
mov
pop
dec
xor
les
adc
xchg
fnstenv
or
mov
aam
fld
sub
in
jnp
pop
jae
cmp
sbb
dec
xchg
in
stos
imul
rcl
lock
push
cmp
out
or
call
push
ja
fsubr
mov
sti
sar
mov
and
mov
or
mov
push
jge
call
(bad)
sub
hlt
jne
mov
nop
call
mov
sbb
mov
dec
adc
cmp
in
fs
inc
not
pop
pop
adc
mov
lods
jno
ret
ins
cmp
sub
leave
adc
out
sahf
push
into
(bad)
and
push
jb
shr
or
popf
xchg
adc
adc
lock
jmp
pusha
pop
dec
mov
iret
mov
popf
lahf
ins
inc
pushf
mov
sub
scas
pop
clc
xor
cmc
(bad)
mov
test
mov
pop
movs
call
aad
jo
pslld
sbb
jle
ins
inc
push
fidiv
sbb
xchg
loopne
adc
sub
add
add
dec
and
cmps
or
lea
fcmovnu
pop
xor
sbb
jmp
idiv
imul
sub
(bad)
cmp
(bad)
fisttp
sub
stos
or
dec
(bad)
aaa
into
call
cld
jge
iret
imul
jns
pop
in
lea
jp
imul
xlat
cmps
or
jno
mov
mov
bndldx
ss
in
xor
(bad)
push
jbe
xor
sub
push
xor
xor
outs
leave
adc
xchg
fidivr
iret
retf
sub
pushf
out
and
mov
xchg
mov
lock
jg
jo
sbb
xor
imul
adc
cs
scas
fdivr
(bad)
adc
pop
inc
mov
je
sbb
or
imul
mul
add
popa
mov
jle
jns
push
sti
sub
and
out
mov
add
es
mov
test
mov
dec
lods
mov
movs
daa
ret
mov
ja
(bad)
pop
mov
sub
ja
pop
icebp
jb
jmp
or
cmp
dec
iret
pop
(bad)
xchg
xchg
push
pop
adc
pop
push
adc
xor
xor
pop
pop
mov
cdq
or
and
xchg
test
jmp
test
ss
in
and
adc
inc
arpl
mov
cmp
xor
nop
call
lea
stos
inc
push
mov
add
push
clc
ins
retf
dec
xor
add
std
ja
mov
rcl
inc
cmp
or
jmp
fmul
push
xchg
aam
jbe
addr16
xchg
inc
sbb
jne
imul
dec
dec
sub
dec
mov
inc
in
dec
add
jecxz
fdiv
adc
cs
cmp
push
fist
(bad)
jp
inc
jle
push
cld
jmp
push
iret
pop
and
pop
imul
aas
lock
ret
call
lods
jl
cmp
xor
xchg
xlat
or
sbb
cmp
or
sub
outs
mov
and
in
ror
xor
dec
mul
leave
call
mov
mov
and
icebp
dec
fwait
xchg
push
test
jbe
push
nop
sti
mov
pop
les
add
mov
lods
cmp
in
sahf
fwait
pop
push
nop
out
call
mov
ss
sbb
fimul
jmp
aam
adc
pop
retf
(bad)
mov
add
cmp
add
enter
and
push
pushf
test
movs
cld
push
dec
add
jge
adc
jl
xchg
fcom
jge
lods
pop
jecxz
jg
test
xor
test
retf
mov
sti
(bad)
push
pop
subps
xor
mov
push
mov
ins
add
xor
sub
loop
shl
cmc
or
into
das
jmp
xor
cmp
push
xor
mov
cld
test
(bad)
mov
sbb
inc
xchg
iret
mov
lock
xor
(bad)
jb
or
cld
outs
pop
outs
test
fdivr
pop
xor
shl
xor
xchg
xor
dec
mov
xchg
push
rcr
xchg
stos
cmps
movs
adc
(bad)
cmc
ins
js
cmps
dec
sbb
pushf
addr16
pop
mov
mov
fidiv
xchg
or
es
or
add
cmc
pop
pushf
jo
mov
pop
adc
jg
iret
jp
or
lea
push
sub
inc
sub
fmul
mov
stos
or
mov
mov
mov
mov
rol
loope
jbe
jecxz
scas
jmp
cmovle
pop
mov
sub
xor
pop
inc
aad
xor
or
pop
ficomp
bound
pop
clc
out
outs
xor
pop
les
ins
mov
fstp
sub
mov
cmp
xchg
test
jb
sbb
xlat
(bad)
mov
popa
imul
imul
scas
std
inc
xchg
gs
jge
out
inc
mov
sbb
test
pop
adc
aas
mov
pop
dec
xchg
push
push
add
(bad)
jmp
or
int
(bad)
(bad)
xor
mov
jmp
mov
les
sbb
xchg
mov
fldenv
inc
enter
inc
(bad)
(bad)
ss
lods
mov
jbe
or
(bad)
push
ret
and
int
pop
les
mov
out
test
rcl
shr
cld
and
scas
(bad)
jae
mov
cwde
mov
inc
cmp
cdq
adc
inc
in
add
jb
cmps
fidiv
cmps
ficomp
shl
adc
cmps
push
or
repnz
jmp
jge
cs
sub
mov
push
jecxz
jp
add
adc
jmp
(bad)
jns
(bad)
inc
imul
mov
jae
ss
adc
push
mov
mov
xchg
les
es
clc
inc
xchg
jmp
cmp
aaa
pop
inc
push
jae
(bad)
dec
mov
out
and
push
call
dec
add
into
adc
or
push
loope
xor
push
neg
push
mov
jl
movs
adc
fnsave
call
(bad)
sbb
in
ror
cmp
outs
inc
cmc
arpl
adc
sub
scas
call
mov
jmp
fwait
jno
pop
and
fcmovb
mov
fmul
mov
dec
fisubr
sar
sbb
add
xor
aas
xchg
leave
push
add
ficomp
fcmovu
lods
fdiv
push
and
xor
rcl
lds
add
jmp
adc
cmp
(bad)
bnd
dec
call
pop
lods
test
dec
imul
adc
in
push
xor
cmp
dec
xlat
mov
cmc
in
icebp
cmp
cld
in
and
data16
dec
arpl
inc
mov
mov
popa
(bad)
mov
jnp
push
pop
ins
mov
jg
leave
pop
sub
adc
call
jnp
fmul
clc
pop
cmp
movs
sti
loope
inc
jo
test
(bad)
pushf
clc
shr
sbb
jb
rol
movs
xchg
(bad)
das
fiadd
and
add
dec
pop
not
xor
(bad)
push
daa
pop
jg
xlat
and
cmps
cdq
dec
and
and
push
into
test
jo
arpl
mov
mov
rol
xor
arpl
xchg
cdq
lods
arpl
jle
lahf
adc
pop
out
add
(bad)
test
rcl
arpl
(bad)
sbb
ror
jno
sub
mov
imul
jmp
jns
mov
in
pop
icebp
movs
out
repz
sub
into
mov
out
inc
lods
adc
dec
jge
ds
fcom
push
add
(bad)
cdq
sub
ins
lods
loop
stos
lods
test
mov
hlt
xor
test
nop
mov
pop
or
test
in
xlat
jno
add
retf
add
addr16
js
inc
mul
gs
inc
aad
popa
mov
(bad)
jl
adc
cmps
add
adc
add
shr
int
lds
ret
imul
mov
mov
jb
div
cmps
cmps
lds
ret
call
xchg
jmp
inc
ins
ds
ins
rcl
imul
mov
xchg
push
mov
imul
int3
test
push
push
adc
std
jl
(bad)
jmp
mov
or
mov
ja
(bad)
cmp
pushf
and
adc
xchg
mov
xor
jge
sub
retf
cmp
aaa
xor
push
aad
and
or
cmp
scas
add
test
lea
(bad)
mov
xchg
into
and
pop
fdivr
and
pop
or
sub
inc
pop
bound
and
(bad)
inc
mov
add
xchg
cld
lods
stc
or
arpl
mov
sub
mov
xor
sti
out
inc
outs
xchg
and
sbb
sbb
adc
ret
xchg
adc
out
add
jg
push
add
pop
mov
mov
ficom
adc
xor
push
jmp
popf
das
pop
mov
cmps
mov
test
adc
cli
fsubr
mov
dec
call
adc
(bad)
xchg
(bad)
js
jl
test
stc
in
xor
mov
sub
jp
and
mov
clc
adc
hlt
das
xchg
push
add
icebp
call
xchg
dec
call
call
jg
pop
aaa
jl
mov
loope
test
add
xor
repz
add
ds
jbe
cdq
dec
mov
jo
pop
jecxz
jae
icebp
or
dec
and
push
movs
test
push
loopne
push
pop
and
xor
lods
push
sar
xchg
mov
addr16
xor
or
push
inc
(bad)
lock
lea
imul
ret
cmp
mov
imul
bound
cmp
adc
idiv
xor
pop
push
arpl
rcl
mov
mov
je
inc
inc
mov
sahf
test
push
xchg
fwait
lods
and
retf
inc
js
movs
pop
lahf
cld
mov
pushf
in
pop
xor
shl
data16
and
cmps
call
cmp
lahf
xor
in
and
ret
mov
cmp
fisttp
jecxz
cmp
dec
cdq
or
mov
shl
cli
pop
fs
cmp
ficom
and
jb
ret
int3
cmps
pop
mov
lods
xor
pop
jg
sbb
push
jmp
mov
mov
sub
(bad)
imul
fsub
fisubr
jmp
sahf
adc
push
inc
pop
pop
add
(bad)
iret
shl
xor
das
cmps
ja
cld
mov
pop
test
popf
xchg
push
push
inc
mov
dec
mov
inc
je
fldcw
xor
inc
inc
cld
(bad)
jmp
iret
jbe
pop
call
call
stos
inc
jno
inc
inc
dec
enter
sti
shl
loope
or
add
and
sahf
dec
xchg
out
(bad)
lahf
cwde
sbb
loopne
and
in
movs
push
pop
dec
adc
add
mov
stos
xlat
adc
jl
enter
sti
and
call
inc
inc
les
fist
rol
jns
shl
add
stc
xor
ret
in
cmp
push
pushf
or
inc
sub
(bad)
inc
push
iret
cmp
in
cmp
movups
mov
mov
mov
jne
sbb
loop
bound
adc
inc
ss
cwde
fild
leave
pop
std
fisttp
lahf
js
jmp
pushf
pop
or
jno
(bad)
cmp
push
jnp
leave
rcl
fidivr
add
aaa
xchg
jl
push
fdiv
aaa
jl
pop
sbb
and
stos
xor
push
dec
sub
jecxz
sub
push
cwde
aas
pop
inc
ja
sbb
dec
add
xchg
fdivrp
ds
in
shr
(bad)
ds
mov
fnstsw
mov
pop
cli
ror
(bad)
mov
mov
ja
stos
push
mov
sub
sub
stos
mov
in
mov
mov
int3
cmp
das
dec
mov
outs
in
inc
push
push
pop
fst
loope
push
out
scas
or
or
mov
fmul
rcr
iret
xor
push
ins
sahf
mov
push
fld
imul
adc
faddp
mov
jmp
cs
pop
mov
adc
dec
push
xor
cmps
push
mov
push
sub
jmp
loop
fcom
in
arpl
and
push
add
push
jae
movs
in
movs
call
sahf
sub
cmp
stos
arpl
xchg
stos
adc
sar
adc
lea
xchg
repz
xchg
pop
das
pop
cmp
adc
mov
dec
mov
jmp
in
and
ret
popf
call
scas
das
fstp
test
gs
pop
inc
fcmovu
nop
lods
push
in
xchg
push
xlat
sbb
movs
cmp
adc
stos
fbld
and
mov
adc
xchg
rcr
add
mov
xlat
scas
scas
outs
les
mov
mov
pop
and
(bad)
scas
mov
xor
cwde
and
jbe
cwde
mov
data16
dec
xchg
cmp
fwait
shl
(bad)
sub
mov
add
xor
enter
push
std
sub
inc
add
push
push
sbb
inc
sbb
outs
or
imul
stc
xchg
enter
neg
das
in
ror
stos
and
xchg
repz
hlt
sbb
adc
es
sub
sub
jmp
cdq
aaa
pusha
dec
pop
mov
and
(bad)
retf
loopne
int
mov
push
int
pusha
loopne
mov
xchg
ins
pop
mov
jp
mov
cdq
test
jmp
fucom
ret
and
inc
ret
mov
mov
lock
ins
inc
imul
jp
push
cdq
pushf
imul
ror
xlat
adc
stos
add
shr
push
mov
out
sqrtps
in
imul
push
adc
pop
leave
loop
and
cs
pop
or
push
(bad)
cdq
jo
xchg
or
fadd
mov
nop
nop
inc
xabort
outs
push
xchg
ins
add
adc
fwait
in
repnz
push
or
push
inc
rcr
cmp
enter
icebp
add
mov
repz
xchg
adc
add
dec
mov
(bad)
sar
loopne
test
mov
jne
ds
ins
loope
int
in
mov
pop
xor
inc
pop
xor
mov
mov
out
pop
aaa
xchg
push
je
outs
shl
pop
fld
je
sub
sub
jae
es
test
sbb
mov
rcl
dec
pusha
daa
pop
imul
sbb
dec
mov
stc
pushf
pop
shl
add
mov
jge
jmp
dec
pushf
jno
mov
sub
dec
stos
fwait
sahf
push
fdiv
jl
(bad)
xlat
inc
loope
lods
fucom
(bad)
sbb
xor
dec
sahf
add
inc
or
dec
lahf
pop
fnstcw
aaa
add
adc
retf
dec
add
mov
test
es
clc
sbb
(bad)
jae
mov
out
mov
mov
(bad)
scas
xchg
rcl
mov
or
push
das
inc
mov
pop
inc
loope
call
(bad)
lea
dec
xchg
dec
push
dec
(bad)
and
and
ret
in
popa
or
(bad)
xchg
and
sbb
mov
sbb
push
test
jl
inc
jne
shl
adc
or
(bad)
(bad)
and
in
pop
mov
test
jmp
hlt
or
cli
mov
sahf
mov
inc
(bad)
retf
mov
and
mov
mov
(bad)
fcmove
pop
retf
les
sbb
cmc
xchg
dec
jl
xchg
mov
mov
jg
in
jae
cmp
push
sub
mov
sub
jbe
icebp
inc
gs
xlat
push
jl
push
in
bound
clc
jmp
add
pop
cmp
ja
stos
imul
pusha
xlat
sbb
mov
jg
aad
or
loopne
mov
outs
out
repz
push
aas
add
sub
or
les
(bad)
or
bound
add
xchg
call
in
inc
push
adc
test
stos
push
add
dec
pop
pusha
inc
popf
push
jno
jl
les
cld
push
fsub
in
push
ret
push
inc
push
add
sbb
cld
inc
cwde
mov
das
sub
push
fidivr
dec
sub
xor
sbb
cmp
adc
dec
es
adc
inc
(bad)
cmc
mov
test
aam
imul
ins
clc
push
into
and
les
(bad)
pop
(bad)
push
pusha
test
repz
ins
sbb
pop
(bad)
call
lds
fcomip
jae
jmp
pusha
shl
cmp
das
lds
hlt
cli
icebp
ss
inc
arpl
repz
add
data16
dec
jb
adc
mov
jle
in
das
outs
sar
jne
mov
jle
loopne
mov
cdq
mov
shr
jnp
out
ins
mov
mov
push
jle
pop
shr
out
adc
push
out
sahf
stc
jp
enter
ds
pop
test
xchg
aaa
cmp
dec
out
xor
ret
push
rol
test
ins
xchg
(bad)
hlt
rol
call
fdivr
xchg
scas
xor
repnz
cmp
pop
test
retf
lock
dec
adc
pop
jo
and
sbb
popa
fisubr
aaa
push
jg
mov
xchg
das
inc
test
and
mov
jle
nop
call
mov
dec
dec
das
jae
repnz
popa
dec
and
mov
sub
sub
and
sub
dec
push
rcr
dec
lods
inc
test
inc
shl
inc
or
jbe
mov
and
and
mov
aas
ins
ds
ins
jae
jo
push
aad
test
xchg
cwde
sti
cmp
xor
fst
(bad)
hlt
push
xchg
fprem1
mov
pop
out
cmps
lea
pop
push
dec
addr16
add
mov
loope
sbb
push
jns
in
cs
and
test
ins
fcmovbe
sbb
mov
jno
das
pusha
lds
adc
out
pop
loopne
pushf
inc
test
jnp
or
sub
adc
adc
or
add
and
test
aaa
ror
inc
mov
or
repz
neg
add
not
adc
pop
repz
shl
or
push
xchg
cmp
dec
je
aas
out
shr
adc
cmp
lahf
sahf
push
stc
gs
jge
and
iret
out
test
push
xchg
popa
mov
mov
rcl
inc
push
test
dec
jo
nop
xor
push
in
mov
clc
pop
sub
adc
cld
cs
arpl
fs
fs
retf
dec
jne
clc
mov
icebp
stos
loopne
repnz
adc
jecxz
push
cmp
push
or
in
pop
pop
mov
aas
cmps
int
(bad)
out
mov
test
jno
or
push
das
div
in
sub
adc
daa
fcom
dec
div
sbb
(bad)
lods
or
(bad)
aas
fcomp
sub
cmps
pop
and
call
shr
sbb
cld
xor
mov
or
and
in
inc
pop
(bad)
xor
dec
test
mov
outs
psrlw
dec
inc
(bad)
(bad)
pushf
mov
enter
mov
pusha
(bad)
stc
jne
dec
inc
fmul
repnz
jmp
xchg
lahf
push
cmp
rol
mov
addr16
sti
and
sub
ror
xchg
sub
clc
and
div
mov
lods
jl
pop
cli
das
lds
push
jns
scas
adc
in
pop
jne
xchg
fsin
iret
pop
cmps
outs
sbb
xlat
mov
push
mov
mov
shr
ja
rcl
cmps
jecxz
ss
cwde
shr
dec
js
xchg
popf
arpl
mov
ficomp
pop
and
dec
fisubr
jb
adc
cmps
push
or
sbb
(bad)
loope
stc
pcmpgtw
into
jge
jl
ins
pop
adc
mov
mov
hlt
jb
shr
scas
in
mov
outs
sub
rcr
aam
fmul
mov
and
jbe
dec
add
(bad)
shl
push
rcl
repnz
jae
mov
xor
not
mov
jae
mov
add
ins
fwait
xchg
dec
test
push
or
int
pop
pop
test
sbb
cmp
icebp
aad
or
adc
jle
aas
sub
xchg
sbb
sbb
push
cdq
fdivp
mov
and
pop
int
test
xlat
xor
mov
and
or
adc
pop
test
ret
push
cmp
scas
xchg
leave
sbb
pusha
sub
cmp
scas
lahf
or
pop
fwait
add
js
sub
sub
xchg
in
push
push
adc
jg
(bad)
pop
cmps
pop
fwait
dec
mov
scas
mov
enter
mov
push
ud1
stos
out
into
inc
push
fcomp
dec
jne
mov
mov
mov
not
ret
mov
ret
jmp
ficomp
push
lods
cld
iret
xchg
inc
jb
jb
int3
pop
neg
adc
inc
or
shl
lds
mov
mov
push
dec
jecxz
xor
sbb
push
jae
mov
cmp
test
mov
repz
pop
repz
test
movs
data16
adc
ficom
or
cs
out
test
xor
jmp
(bad)
cmp
out
mov
inc
stc
cs
in
pop
lock
or
ret
cli
sbb
push
sti
es
movs
xor
jbe
sub
jb
mov
jl
rol
or
int3
sti
cmps
jg
inc
ins
xor
test
ds
into
movs
adc
into
inc
hlt
in
or
xor
iret
aas
mov
pop
sub
scas
push
pop
hlt
push
cmc
movs
jg
xor
xchg
(bad)
out
pop
dec
sbb
sbb
sub
push
mov
inc
fstp
cmp
clc
or
mov
fmul
xor
jp
and
test
jns
popa
or
or
sbb
out
lods
sub
and
clc
fisttp
fstp
jo
retf
dec
outs
xchg
pop
inc
jne
loopne
xor
jne
mov
int3
add
mov
(bad)
mov
and
cli
in
fnclex
mov
mov
js
pop
mov
sub
mov
mov
pop
jmp
push
aad
aaa
(bad)
cmps
scas
out
mov
sub
test
loopne
xor
inc
sub
inc
jge
mov
popf
cwde
xchg
cmps
and
dec
inc
xor
mov
mov
outs
xchg
test
fsubr
mov
sbb
out
sub
add
and
pusha
jl
mov
test
add
mov
jb
pop
cmp
and
adc
ds
xor
push
sub
dec
dec
or
cmp
xchg
lea
jbe
jae
cwde
add
arpl
mov
add
and
push
mov
movs
scas
lahf
push
shl
sub
cs
mov
popf
mov
pop
or
cmp
mov
lock
fabs
outs
mov
aad
inc
dec
xor
out
mov
dec
(bad)
xchg
inc
push
int3
jnp
xor
in
repnz
sbb
(bad)
sbb
sub
(bad)
pop
in
popa
mov
aaa
adc
and
jb
mov
sub
dec
fwait
out
push
jne
or
cmps
movs
int3
and
dec
push
pop
mov
test
repnz
xor
jl
shl
cmps
or
mov
push
stos
pushf
cdq
jo
js
xchg
imul
adc
mov
jo
xchg
stos
sahf
imul
jmp
jns
cmp
mov
or
adc
repnz
add
add
test
daa
or
cmp
hlt
sbb
les
mov
add
cmp
pop
jnp
rcl
mov
push
je
nop
add
std
mov
dec
popaw
dec
ja
mov
xor
push
das
popa
sub
mov
pop
hlt
mov
jge
xor
call
or
mov
push
scas
sahf
and
and
lds
test
inc
movs
(bad)
sti
inc
mov
mov
(bad)
xchg
in
dec
cmp
jns
mov
lahf
scas
inc
mov
pop
sbb
jmp
les
ret
lea
hlt
inc
icebp
add
(bad)
es
ja
push
mov
xor
lahf
(bad)
enter
jl
lea
dec
inc
push
addr16
cmps
adc
(bad)
mov
sbb
(bad)
push
push
fnstenv
mov
mov
xor
hlt
mov
pop
imul
fstp
mov
rcl
pop
sar
push
clc
fld
pop
dec
cdq
push
outs
fimul
lods
and
jno
outs
stos
and
int3
lods
adc
adc
icebp
and
mov
cmps
(bad)
lods
xchg
push
icebp
cmp
mov
push
cdq
adc
imul
popa
gs
les
mov
std
in
mov
shr
(bad)
in
retf
stos
cmp
jno
into
jmp
cmps
inc
sub
mov
pop
(bad)
jg
push
xchg
mov
jo
icebp
(bad)
jl
pusha
aad
pop
or
f2xm1
repnz
add
outs
jle
xchg
cmp
fld
mov
repnz
int3
aas
jae
mov
push
jp
clc
aam
aad
jecxz
out
xchg
cdq
fs
xor
mov
dec
shl
ror
inc
jmp
mov
dec
jmp
jp
repz
mov
movs
mov
mov
cli
(bad)
mov
sub
(bad)
mov
cmps
scas
in
imul
add
sbb
cmp
fcmovb
icebp
or
xor
(bad)
shl
nop
pop
test
fsub
sbb
cmps
push
lods
fmul
ret
xchg
lods
pop
je
and
jp
cmp
jnp
inc
and
mov
repnz
inc
and
fidiv
call
cmp
adc
out
(bad)
pop
lock
lock
out
adc
xor
rol
add
pop
sub
mov
jmp
push
mov
pusha
xor
aad
pop
push
mov
mov
jnp
push
push
(bad)
mov
xor
pop
ins
ror
mov
cmp
or
mov
pop
pop
out
stos
stos
xchg
sbb
sbb
mov
xor
sbb
jnp
cmc
jbe
sub
jns
mov
dec
xor
push
inc
pop
cmp
fwait
mov
cmp
mov
and
sbb
push
dec
sbb
mov
stos
in
(bad)
mov
ret
xor
test
fucom
and
mov
jp
jg
les
test
xor
dec
add
pop
mov
inc
fisubr
and
sub
iret
push
adc
sub
inc
mov
and
ret
sub
mov
in
in
push
dec
sbb
in
sbb
cld
and
imul
lods
(bad)
(bad)
hlt
push
sbb
mov
mov
push
loope
and
jb
lea
xor
outs
xchg
aas
lods
mov
mov
adc
sti
repz
sbb
pusha
popf
out
inc
push
sar
fisubr
shl
cmp
mov
or
push
cwde
cmp
and
sbb
pop
repnz
test
dec
(bad)
aad
leave
mov
out
rcl
cld
cmps
xor
push
cmp
push
jae
daa
neg
mov
xor
cmp
repnz
dec
jmp
jl
stos
in
dec
arpl
jmp
inc
ret
cli
mov
cmp
shl
mov
test
enter
or
test
inc
push
and
(bad)
fdivr
inc
ins
fmul
jge
ja
inc
mov
mov
mov
xor
shr
mov
ror
add
cmps
jmp
cmp
test
xor
popa
jne
into
shl
pop
and
mov
xchg
retf
jge
(bad)
rcl
inc
sub
outs
and
pushf
or
pop
jbe
xlat
mov
cmp
dec
lods
xchg
test
xor
popf
arpl
jno
and
std
mov
push
leave
pushf
push
lods
lds
imul
addps
and
add
mov
sbb
icebp
scas
jo
test
arpl
in
aaa
adc
pop
dec
cmp
mov
mov
jb
fst
in
dec
mov
mov
cmp
jecxz
cli
cli
sub
jbe
add
or
iret
adc
or
test
(bad)
(bad)
hlt
popa
push
inc
es
imul
pop
mov
fldcw
jns
mov
les
pop
or
test
scas
dec
aas
mov
ja
aad
adc
lea
xor
int
data16
aam
push
pop
jb
inc
inc
rcr
adc
fwait
mov
clc
fisubr
fwait
sti
cdq
mov
sbb
gs
pushf
jno
dec
out
cld
imul
xchg
cwde
aam
sbb
bound
xchg
cmc
hlt
sub
fnstcw
pop
loope
xchg
or
and
or
xchg
test
rcl
jb
(bad)
push
jae
inc
ins
cwde
jge
pop
push
xchg
stos
rcl
outs
sbb
lods
dec
aas
lock
ins
lock
fdivp
inc
iret
retf
add
push
xchg
inc
fsubr
idiv
dec
push
in
add
push
pop
xchg
or
stc
add
daa
ss
cmp
int3
loop
mov
pop
pop
stc
int3
ror
add
mov
mov
and
sbb
call
pusha
popa
jmp
mov
or
mov
mov
in
inc
stos
jecxz
jecxz
adc
pushf
adc
push
pop
dec
dec
push
loop
in
into
push
sbb
or
push
push
mov
or
sub
icebp
push
in
leave
shl
mov
into
lods
pop
xchg
xlat
(bad)
push
out
push
mov
mov
mov
add
dec
xchg
dec
sbb
inc
xor
mov
pop
push
pop
dec
or
shl
test
out
into
lods
ja
mov
pusha
and
and
rol
jmp
push
push
mov
sti
popf
outs
sub
int
stc
dec
xchg
cmp
and
repnz
jns
repz
pop
(bad)
jmp
sbb
add
imul
or
pop
jbe
jg
jns
mov
mov
scas
push
inc
xlat
push
sahf
lock
xor
lahf
repz
add
(bad)
loop
push
cmp
push
call
inc
fs
hlt
mov
sbb
or
push
fxtract
icebp
sbb
sahf
push
popf
sub
sbb
in
loopne
data16
aaa
or
or
stos
scas
cli
cli
mov
cmp
pop
mov
mov
add
and
mov
jmp
jg
fcmove
or
and
test
sub
js
mov
int
dec
idiv
in
add
mov
nop/reserved
or
jbe
push
(bad)
fstp
sbb
cwde
retf
pop
push
push
ret
add
mov
dec
mov
imul
mov
lock
imul
add
pop
pop
btr
into
inc
sahf
or
mov
les
leave
repnz
(bad)
fcomi
ror
sar
xchg
stc
push
inc
mov
jle
push
cmp
pop
jp
nop
inc
push
add
sbb
mov
rcl
inc
pusha
(bad)
into
fwait
movs
push
ret
dec
not
dec
xchg
push
dec
scas
adc
loopne
fdivr
xchg
pop
cmp
jle
(bad)
clc
fld
sub
aad
adc
dec
mov
jl
int
xchg
sbb
push
lods
mov
sahf
pop
adc
mov
cmp
out
mov
mov
aam
add
rcl
sbb
repnz
pop
inc
xor
retf
stc
je
scas
pushf
rcl
mov
cmp
mov
push
imul
mov
sti
in
jl
push
add
inc
and
or
scas
lea
loope
je
jnp
mov
loopne
mov
and
bswap
pop
xor
cli
mov
sub
or
push
pop
imul
pop
js
ret
test
adc
cwde
xor
dec
xchg
and
fstp
jmp
mov
je
retf
xchg
aas
cmp
push
sbb
test
clc
cdq
lods
sub
aad
test
sbb
idiv
or
pop
call
and
neg
dec
call
fst
fbld
and
in
pushf
aad
sub
or
push
bound
(bad)
cld
test
in
outs
lds
jmp
lock
cmp
bound
sub
repz
push
jmp
mov
gs
xchg
aaa
push
and
mov
ret
les
push
dec
jmp
icebp
test
jne
rol
mov
es
div
hlt
dec
mov
mov
dec
inc
mov
ficom
call
(bad)
shr
mov
pop
dec
outs
inc
aam
dec
xchg
push
rcr
rol
add
mov
movs
(bad)
and
fild
(bad)
sti
test
or
and
and
sbb
mov
mov
xchg
test
maskmovq
div
xor
push
daa
stos
and
mov
mov
lods
fisttp
lahf
mov
(bad)
aam
mov
dec
xchg
test
cwde
dec
jmp
mov
scas
push
xor
lods
cmp
(bad)
xor
fcom
cli
xor
(bad)
or
sub
mov
fmul
cmp
paddq
stc
repnz
(bad)
mov
sub
adc
outs
and
iret
data16
loop
jns
add
push
adc
ins
jecxz
lods
fcos
mov
das
fsub
rcl
rcr
inc
add
popf
mov
xor
mov
sbb
inc
neg
js
inc
push
jnp
cld
cli
int3
lods
mov
shl
xchg
popf
(bad)
jo
dec
mov
pop
sub
test
test
push
cmp
stos
sbb
lea
ret
xchg
aaa
hlt
int3
jns
pusha
ja
aad
fisubr
not
jnp
gs
call
or
fs
clc
and
mov
scas
test
push
add
sub
ins
out
iret
jle
mov
pusha
xchg
inc
clc
shr
sub
push
cmp
jno
mov
aaa
shr
push
pop
and
mov
rol
movs
sbb
or
shl
dec
add
mov
addr16
mov
mov
push
mov
sub
jge
div
hlt
mov
push
mov
arpl
mov
mov
scas
(bad)
imul
dec
push
mov
mov
mov
fxch
lahf
pop
mov
xchg
cdq
xchg
inc
aam
cmp
test
push
popf
outs
pushf
jae
xor
jmp
daa
pop
lock
adc
outs
xor
mov
cli
and
mov
sbb
jecxz
and
jg
pop
sbb
xchg
mov
ret
jmp
push
add
call
mov
loopne
(bad)
fidivr
adc
add
clc
aam
push
sar
mov
mov
sbb
fs
aam
adc
pop
cmp
pop
dec
jbe
dec
icebp
aam
push
test
test
xor
dec
inc
dec
pop
ins
push
(bad)
movs
cs
cli
(bad)
int
xor
dec
mov
dec
push
mov
mov
sub
dec
pop
sahf
mov
add
jb
inc
push
jno
mov
sub
pop
aas
scas
inc
iret
fld
or
mov
lock
mov
fstp
bound
mov
out
lods
out
xlat
jns
pop
daa
mov
cwde
jl
add
dec
iret
dec
fisubr
dec
xchg
mov
inc
rcr
and
pop
call
nop
ins
dec
retf
(bad)
iret
lock
and
cwde
stos
cmp
test
adc
mov
and
adc
xchg
jg
scas
cmp
jbe
sbb
dec
fisub
mov
jns
dec
cdq
xchg
fwait
mov
push
mov
inc
sub
bound
jnp
push
fs
fild
sub
xor
(bad)
fst
xor
fcom
or
lods
fwait
xchg
mov
pop
add
jno
lds
adc
mov
jmp
ror
in
loop
out
fstp
test
push
int3
ins
cmp
in
cmp
popa
int
and
push
es
jmp
xlat
test
fidiv
aam
pop
push
sbb
les
stos
mov
adc
arpl
out
gs
gs
lahf
jbe
inc
in
mov
sar
jne
cwde
adc
call
test
xor
data16
leave
mov
stos
clc
mov
push
xchg
loopne
out
ins
inc
inc
dec
aaa
sbb
hlt
sub
(bad)
pop
dec
cmp
pop
fwait
mov
imul
push
jno
jp
int
sub
mov
lods
sbb
inc
xlat
aaa
cmp
mov
and
add
push
stos
inc
repnz
pop
loopne
jb
(bad)
xor
mov
or
out
stc
lea
jno
leave
lock
fldenv
and
jno
pusha
or
pop
cmps
xchg
ret
leave
ss
addr16
mov
cmp
or
cmp
add
outs
ss
outs
push
jmp
and
imul
outs
aam
int
ins
fistp
push
sti
inc
adc
sbb
sbb
inc
jmp
dec
nop
pop
enter
push
int
loop
ss
sub
lods
adc
(bad)
push
mov
cdq
iret
pop
(bad)
into
fsubp
fsubr
jle
cmp
push
or
push
mov
mov
mov
pop
mov
mov
dec
pop
and
fisubr
aam
loopne
cld
aaa
jp
mov
inc
pop
jmp
test
xlat
stos
cs
jle
inc
retf
cs
data16
sbb
adc
idiv
jo
ret
sub
jmp
popf
dec
scas
mov
cs
pusha
xor
add
mov
dec
iret
sub
movs
push
mov
cwde
out
shl
out
pusha
leave
xor
sar
cwde
std
stc
add
or
ror
(bad)
js
push
or
jno
pop
jmp
cdq
js
fiadd
pop
inc
(bad)
out
mov
adc
push
cmps
add
cld
mov
cmp
dec
mov
leave
test
gs
pop
inc
xchg
icebp
sbb
xchg
loopne
xor
xchg
dec
mov
adc
loope
aam
lahf
js
push
adc
sbb
mov
(bad)
dec
repnz
dec
push
ret
sbb
dec
sub
mov
xchg
mov
into
retf
xchg
push
stc
loop
pop
jecxz
jecxz
sahf
je
xor
out
popa
imul
sbb
adc
cld
shl
popf
stos
mov
xchg
mov
mov
push
or
repnz
mov
xor
(bad)
repnz
and
fwait
or
ret
mov
cmps
mov
in
bound
sbb
mov
cmc
dec
popa
mov
pop
xor
std
mov
call
imul
in
xor
ins
add
jmp
xchg
scas
loop
pop
outs
daa
fcmovnb
rcl
mov
jns
and
mov
add
mov
pushf
mov
mov
adc
cmp
or
inc
adc
(bad)
inc
inc
jbe
loope
icebp
out
inc
mov
push
lds
fdivr
call
push
iret
cmp
lahf
xor
mov
jmp
retf
repnz
push
test
lahf
mov
scas
dec
mov
not
test
imul
in
pop
ficom
outs
fimul
mov
fld
cmp
pop
dec
adc
cwde
mov
test
sbb
cld
or
add
dec
add
into
xchg
pop
adc
xchg
ret
nop
or
jp
xor
clc
imul
int
gs
mov
cmp
ss
xor
xor
adc
fs
fs
repnz
jnp
arpl
repz
stc
mov
js
mov
xchg
aaa
rcl
out
jle
pop
in
in
pusha
add
aas
add
inc
inc
adc
jnp
dec
mov
int3
mov
xchg
push
add
fwait
sbb
mov
(bad)
and
cs
sahf
adc
imul
or
outs
xlat
clc
adc
inc
inc
sbb
inc
mov
sub
(bad)
adc
(bad)
cmp
das
and
hlt
jecxz
fisubr
std
loopne
lock
xchg
shl
mov
imul
sar
mov
lods
ss
cld
outs
sub
pop
push
mov
xchg
movs
ins
cmp
das
popf
mov
cli
out
lods
push
mov
jge
ds
(bad)
rcr
push
sar
xor
mov
pop
push
or
mov
clc
enter
mov
sub
xchg
daa
cdq
push
addr16
daa
push
pop
dec
mov
jmp
sbb
in
ins
jl
test
addr16
dec
sbb
(bad)
mov
adc
sbb
test
xor
jne
es
mov
sub
push
cmp
aad
lods
in
xchg
push
addr16
add
or
jmp
lock
add
les
sbb
and
repnz
and
push
xchg
out
aas
xor
shl
jbe
mov
hlt
mov
test
sub
cdq
ins
pop
xor
sets
pop
inc
dec
test
xchg
add
sbb
mov
push
inc
inc
les
shl
lock
(bad)
inc
hlt
mov
sbb
mov
mov
imul
add
jo
imul
mov
and
and
(bad)
xor
je
test
inc
popa
test
imul
xchg
mov
sbb
arpl
jl
jmp
daa
ins
jb
sbb
adc
pusha
div
push
xor
scas
or
mov
cmps
jnp
mov
wrmsr
lods
pop
scas
fstp
sub
movs
cmp
loope
out
sbb
jl
mov
fdivr
mov
enter
inc
dec
stos
aaa
mov
cmp
es
push
jns
(bad)
adc
lods
and
repz
mov
jmp
mov
mov
sub
cmp
jmp
mov
adc
gs
xchg
xlat
mov
or
out
and
jb
mov
test
mov
xor
xor
js
sahf
(bad)
push
inc
addr16
stos
jge
loopne
adc
xor
cmc
add
pop
addr16
xchg
and
ret
shl
add
or
push
hlt
adc
gs
xor
rcr
mov
pop
test
and
push
dec
out
cmps
cli
mov
dec
xchg
jge
retf
push
jns
sub
inc
sub
jo
dec
and
cdq
imul
lods
push
dec
push
ret
sar
loopne
or
dec
and
(bad)
sbb
cmps
pop
movs
mov
fwait
xchg
out
xor
adc
xor
ins
or
call
pop
adc
push
stc
push
jns
popa
arpl
push
mov
pusha
inc
sub
xchg
nop
(bad)
mov
inc
pop
int
rol
mov
rcr
aad
lock
cmp
push
mov
movs
push
inc
cmp
pop
mov
add
jmp
push
cwde
(bad)
cmp
inc
jo
mov
into
adc
out
out
addr16
es
(bad)
jecxz
out
jns
jecxz
fucomp
xor
mov
sub
or
pop
cmp
loopne
sbb
call
sbb
xchg
add
jp
jmp
mov
jb
(bad)
or
mov
cmp
push
ja
pop
cmp
mov
cmp
xchg
inc
ret
movs
xchg
sub
js
mov
rcr
les
pop
inc
call
std
pusha
mov
retf
xchg
jle
dec
fistp
mov
dec
fs
sub
aam
jecxz
jp
adc
jnp
pop
mov
call
jbe
adc
out
xchg
sbb
cmp
mov
mov
mov
idiv
cli
into
cmp
dec
cmp
sbb
imul
stos
mov
sahf
idiv
cmps
aad
stos
in
xor
jmp
xchg
cmp
push
mov
mov
jmp
movs
cli
mov
aaa
leave
jno
lahf
jge
ds
enter
adc
push
hlt
repnz
dec
scas
outs
or
out
push
inc
adc
repz
outs
sbb
sti
in
sub
push
xor
repz
cli
(bad)
jp
retf
fild
in
push
repnz
jno
sub
xlat
leave
cdq
in
movs
mov
sbb
pop
ins
adc
std
push
pop
jecxz
scas
dec
fld
(bad)
call
dec
or
and
mov
sub
jmp
inc
xchg
mov
push
inc
daa
popf
(bad)
lds
fwait
mov
loopne
push
pop
push
mov
cmp
jb
cmc
vpsubd
mov
jg
pop
jbe
ror
mov
in
mov
sbb
push
loope
cmps
inc
xchg
stos
jle
adc
push
scas
arpl
xor
iret
in
pop
jne
jnp
and
cld
lods
push
jae
lds
loop
mov
les
mov
jb
jo
shl
sub
jae
dec
xor
lar
mov
sub
pop
ja
sar
stos
inc
scas
pop
mov
adc
cmps
and
aad
push
out
(bad)
sbb
jmp
std
push
nop
sti
aam
addr16
sub
rcr
adc
scas
cmp
das
in
mov
test
gs
xlat
(bad)
pop
push
mov
mov
mov
out
fdiv
pop
cmps
push
mov
jae
aam
stos
test
xchg
jle
jg
aas
(bad)
daa
pop
push
aaa
mov
or
test
mov
out
sub
or
aad
push
shr
add
lds
mov
and
test
and
mov
mov
mov
ins
enter
xor
mov
lods
add
dec
fdiv
fldcw
push
mov
leave
jns
adc
pop
pop
pusha
daa
ins
int
jnp
or
ins
stos
outs
dec
shl
pop
jae
pop
cmp
test
adc
repnz
push
lds
jbe
pop
cs
xor
and
xor
adc
pop
push
(bad)
push
xor
retf
dec
add
ja
push
out
dec
sub
mov
or
aad
pop
xor
add
pop
or
aaa
add
dec
out
mov
cmp
sub
xchg
sub
(bad)
cs
out
mov
repz
rcl
jbe
xor
in
cmp
out
test
mov
adc
pop
mov
or
xor
and
xchg
cmp
xor
or
cmp
mov
hlt
jle
fldcw
pop
(bad)
loope
mov
lea
pop
mov
sub
icebp
push
sub
push
loope
movs
aas
rep
(bad)
cmp
sub
pop
cs
mov
inc
mov
and
test
ds
retf
loop
nop
je
mov
cld
pop
mov
fmul
xlat
xor
shl
xor
repnz
aad
xor
sbb
push
faddp
push
mov
(bad)
enter
jno
cli
(bad)
aam
popa
push
lods
mov
push
xchg
xor
jle
iret
adc
and
dec
add
push
adc
pop
fnsave
js
jl
inc
rol
xchg
add
mov
jne
enter
fimul
jle
inc
iret
jb
push
lea
mov
ss
mov
inc
fucomp
add
outs
push
jnp
pop
and
rcl
pop
dec
dec
daa
lods
popf
(bad)
mov
add
rcl
iret
push
mov
(bad)
stos
mov
popa
push
pop
jbe
or
jg
lahf
cmps
or
mov
cmp
test
in
out
jae
inc
adc
add
out
leave
pop
xlat
push
inc
in
cmp
test
mov
call
fbld
stos
sbb
bound
dec
dec
push
cmp
or
dec
jle
int3
push
mov
mov
jecxz
movs
pushf
imul
add
sub
leave
mov
add
jb
stos
pop
sbb
pushf
shl
shr
dec
arpl
push
sbb
xchg
ffreep
and
pop
xchg
imul
cmps
push
test
nop
retf
aas
xor
inc
jmp
nop
loope
inc
add
outs
pop
or
aaa
push
test
push
out
mov
xchg
push
adc
dec
(bad)
gs
scas
test
(bad)
into
pop
dec
(bad)
fcmovnbe
ret
mov
add
imul
(bad)
out
dec
bound
sbb
clc
cmp
jp
(bad)
movs
je
dec
test
lock
jecxz
movs
stc
xchg
sub
in
sbb
pop
call
data16
int3
jbe
int3
mov
fbld
(bad)
sahf
jns
gs
dec
sbb
xor
outs
mov
push
sbb
jmp
ins
add
pop
xor
nop
push
and
mov
frstor
jl
jne
mov
mov
fsub
fbstp
xchg
jne
outs
aaa
lods
cmp
xchg
jbe
imul
mov
out
in
fucom
mov
xchg
int
aas
je
adc
popa
pushf
adc
rcl
lds
ret
sahf
jl
inc
loope
inc
jne
cmp
sub
jno
jmp
test
sub
scas
aam
xor
ins
ror
pop
je
cmp
push
mov
xlat
jne
aas
sub
scas
lea
sub
cmp
xchg
xor
gs
sahf
or
fsubrp
aaa
xor
mov
jns
movs
jge
mov
test
test
ins
popf
jb
stos
out
(bad)
mov
repnz
aam
inc
cmp
iret
push
ja
xor
adc
gs
or
push
or
xor
inc
fdivr
mov
in
add
(bad)
hlt
sar
push
scas
je
xor
mov
cmp
adc
and
(bad)
loopne
push
mov
pop
jb
xor
dec
cli
fs
gs
jge
arpl
add
sub
dec
sub
out
popa
loop
jne
mov
sub
or
jle
push
js
mov
xor
jae
dec
stc
and
movs
xor
aas
mov
push
lea
pop
je
inc
aas
pop
repz
jo
jns
jo
ds
mov
xor
lahf
in
int
ror
in
inc
xlat
test
xchg
fisub
dec
jmp
mov
aaa
xchg
add
sub
adc
mov
movs
outs
repz
daa
push
mov
cmc
inc
addr16
mov
syscall
mov
test
jmp
loope
push
xor
or
mov
pop
into
and
sub
dec
(bad)
mov
outs
movs
add
dec
mov
pusha
std
and
sbb
and
cdq
fstp
or
daa
std
movs
mov
test
call
cmp
nop
enter
add
or
adc
mov
mov
sbb
inc
and
adc
sbb
popa
jae
loopne
xchg
xor
dec
push
or
aad
jmp
stos
icebp
std
pop
inc
shl
add
fisubr
rcr
push
aam
es
cli
push
out
aad
inc
mov
add
inc
je
in
(bad)
sbb
out
cmp
daa
lods
cmovae
imul
push
inc
std
jb
pop
xchg
dec
sbb
jno
cmp
test
jnp
cmp
sbb
dec
leave
sbb
adc
fsubr
jb
out
jno
mov
pop
aad
addr16
fbstp
cmp
or
xor
lods
call
cld
xor
dec
mov
imul
mov
mov
add
xchg
sub
mov
dec
push
mov
inc
sbb
int
call
mov
mov
loop
dec
add
scas
lds
adc
cmp
in
int3
popf
cmp
ins
push
retf
ja
cmp
push
nop
imul
pop
and
mov
mov
mov
fiadd
xchg
fwait
dec
sbb
dec
and
clc
cmp
xor
and
push
jle
out
push
retf
jp
and
jae
sti
fs
mov
cwde
lea
adc
push
or
sbb
fwait
add
cmp
test
lock
inc
fldenv
gs
fst
repnz
ins
aas
stc
inc
sbb
hlt
jecxz
test
test
xchg
repnz
in
adc
and
fld
sbb
pop
icebp
mov
or
aad
push
push
test
adc
ins
(bad)
sti
inc
add
mov
scas
dec
das
pushf
cmp
jo
mov
push
and
cld
into
push
mov
cmovae
fwait
(bad)
jb
idiv
adc
mov
ja
push
lea
xor
sub
jge
data16
and
pop
cmp
lods
adc
mov
aaa
lahf
cli
jae
lock
mov
sbb
or
test
adc
(bad)
add
pop
mov
add
rcr
add
pushf
xor
cmp
loope
adc
jne
lods
or
leave
inc
and
int
sub
jb
sahf
xchg
add
and
test
scas
int
and
out
ret
cmp
and
arpl
mov
je
xchg
adc
add
mov
pop
fdivr
jne
sar
or
xchg
adc
fdiv
retf
mov
jne
xor
test
es
mov
adc
hlt
movs
test
and
pop
ss
fsub
or
mov
dec
mov
mov
(bad)
adc
mov
inc
mov
xchg
mov
int3
add
repnz
xchg
cmp
jmp
push
dec
scas
jo
icebp
xor
jmp
loope
adc
cmp
call
mov
test
xor
jmp
or
xchg
sub
retf
dec
mov
lods
mov
bound
and
imul
jb
std
sub
popf
mov
int3
loop
xchg
retf
inc
add
sub
push
jg
jg
fmulp
test
add
adc
addr16
mov
div
stos
mov
(bad)
out
jnp
pop
add
or
jle
shl
sbb
loope
mov
or
stos
stos
push
dec
cld
pop
push
lock
push
call
sub
dec
shl
inc
lds
jmp
clc
fwait
retf
sti
mov
jmp
bswap
add
and
ret
inc
dec
popf
and
es
test
daa
(bad)
sbb
push
outs
cmp
imul
rol
movs
enter
mov
in
aas
xchg
movs
mov
mov
jl
cmp
xchg
cs
retf
jge
sbb
adc
or
mov
outs
outs
add
or
cdq
mov
mov
push
scas
add
or
aam
inc
or
hlt
cli
pusha
xchg
ss
mov
mov
or
out
pushf
lock
dec
dec
adc
xor
lea
xchg
mov
stc
out
test
mov
push
aad
push
je
push
and
mov
inc
mov
sbb
jne
or
lock
jp
sahf
bound
mov
xchg
pop
iret
fcom
xchg
out
in
sub
out
pop
add
adc
imul
lods
into
test
jmp
daa
stc
jg
movs
push
mul
imul
or
test
xlat
xchg
jnp
cld
loopne
fs
js
pop
xor
loop
or
push
mov
add
sbb
inc
ds
call
jg
test
shr
jmp
fsin
cmp
rcr
(bad)
icebp
and
daa
mov
retf
arpl
inc
mov
mov
sub
and
cmp
or
ins
arpl
or
xor
adc
sub
addr16
or
inc
bsf
sbb
mov
sar
hlt
stc
mov
mov
(bad)
fbld
into
les
cmp
movs
jmp
mov
stc
mul
pop
ds
les
fwait
arpl
gs
pop
xchg
aas
pop
fild
xchg
jno
cmp
fnstcw
push
add
fiadd
outs
xor
sbb
sbb
(bad)
xchg
aam
and
lods
mov
xchg
jg
xchg
sub
xchg
dec
push
enter
xor
pop
fcom
or
mov
adc
dec
retf
jge
setns
(bad)
cmp
and
enter
in
mov
xor
jnp
popa
shl
test
or
mov
ror
and
jno
sub
adc
rcr
push
push
mov
imul
add
js
cmp
mov
adc
cmps
fsub
xchg
or
in
jl
and
xlat
cmc
retf
(bad)
push
mov
in
sar
or
xor
retf
add
jmp
retf
hlt
pop
pop
sub
xchg
fiadd
daa
pusha
aaa
sub
ins
je
mov
(bad)
inc
imul
(bad)
leave
cmc
jne
xor
call
xor
jl
inc
or
out
add
cmp
push
sahf
jle
sbb
sbb
pop
inc
dec
ficom
retf
xor
pop
ds
out
adc
cmps
retf
cmp
add
scas
pop
lahf
and
fst
add
adc
push
(bad)
mov
scas
mov
push
xchg
jmp
xchg
fsub
push
sbb
or
ret
adc
xchg
push
cmps
imul
push
test
fmul
(bad)
inc
aam
mov
dec
push
pop
mov
ss
or
sbb
jg
mov
clc
push
repz
sub
jl
mov
cmps
mov
arpl
in
and
scas
test
cmc
arpl
mov
sub
fs
cld
push
or
je
cmp
mov
pop
mov
call
dec
mov
outs
es
icebp
sbb
das
mov
cmp
js
ror
xlat
jg
scas
pop
add
shl
lea
mov
add
(bad)
sub
push
sar
arpl
push
inc
sbb
mov
xchg
cmp
out
mov
pusha
gs
push
jecxz
pushf
int
popf
adc
jae
or
or
cmp
(bad)
mov
sahf
add
(bad)
outs
adc
push
xchg
ret
jle
es
(bad)
in
sub
js
and
fmulp
push
out
push
and
hlt
fmul
enter
pop
xchg
enter
push
dec
jo
icebp
mov
xor
adc
add
neg
inc
cmp
ja
imul
dec
(bad)
jnp
repnz
or
out
jecxz
mov
dec
fst
mov
jnp
sub
cmps
fild
out
sbb
out
repz
retf
retf
xchg
mov
sub
mov
xor
adc
mov
mov
dec
sar
shl
das
and
ret
mov
aaa
or
pop
nop
pop
xchg
ret
sub
(bad)
ins
les
pop
leave
call
push
mov
lods
pop
and
in
mov
dec
pusha
push
stos
or
leave
dec
sahf
add
loop
sbb
in
pusha
cwde
ret
mov
pusha
popf
jge
getsec
sub
xor
mov
sbb
xor
addr16
jno
mov
fsubr
out
push
mov
retf
int3
ja
sub
cmps
std
mov
sbb
mov
xchg
pop
mov
cmp
stos
sub
push
in
out
cli
sub
(bad)
mov
push
imul
push
cs
push
sti
xlat
pushf
mov
mov
jnp
mov
setno
pop
adc
mov
scas
mov
lea
mov
xchg
sbb
outs
fdivr
mov
(bad)
or
lock
das
pop
cmps
hlt
ins
push
popa
ror
push
imul
das
pop
sbb
mov
inc
outs
adc
sar
in
test
sub
imul
ins
cmc
dec
test
stos
aam
outs
sbb
cmp
cmp
shl
xor
jl
jmp
or
arpl
mov
lea
or
push
je
jns
cmp
and
ja
sub
lods
test
cmps
pusha
add
jecxz
mov
loope
mov
(bad)
rcr
cmp
mov
shr
enter
and
xor
mov
and
inc
dec
leave
jge
repz
rol
outs
xchg
dec
sti
lods
cld
call
add
and
retf
xchg
pop
pop
push
loope
push
test
or
push
es
pushf
adc
in
ror
fwait
out
mov
adc
inc
jp
mov
xlat
jb
xchg
add
stos
push
ds
rol
push
push
sub
call
push
add
cmp
add
data16
loope
imul
mov
xchg
inc
adc
dec
(bad)
sahf
fistp
movs
lahf
push
add
xchg
push
pusha
test
sub
shl
jecxz
push
loopne
cdq
inc
mov
jmp
nop
inc
popa
jns
test
cmp
dec
mov
xchg
jp
popf
add
jmp
jo
in
clc
xchg
cmp
mov
fcomi
jnp
sub
fdivr
cmps
mov
sahf
push
inc
jnp
sbb
ret
adc
sub
mov
fldenv
test
(bad)
push
add
dec
inc
and
push
popf
fst
inc
inc
dec
sbb
mov
pop
xchg
gs
inc
lds
inc
jns
iret
or
xor
loope
rcl
mov
and
jp
aam
ins
sti
lods
jo
into
or
lock
iret
xor
nop
inc
push
dec
shl
outs
and
mov
add
test
sub
mov
cs
adc
inc
push
in
jnp
(bad)
int
mov
jo
outs
mov
out
popa
mov
ret
test
out
xchg
div
ror
movs
push
mov
mov
aad
sub
fwait
mov
jle
ja
or
lahf
xor
inc
ffreep
aaa
cmp
mov
mov
scas
jg
call
mov
cmp
data16
in
xchg
xchg
enter
rcr
dec
push
stc
movs
repz
movs
addr16
jecxz
inc
sub
cwde
or
push
mov
stc
cmp
in
push
push
pop
and
(bad)
sbb
int3
cmp
aas
inc
push
mov
ss
jo
aaa
mov
sub
jne
imul
inc
inc
sub
les
(bad)
adc
jnp
lods
dec
add
pop
jp
or
xor
std
bound
push
popf
jnp
pop
(bad)
int3
cli
sbb
cmp
aas
cmp
dec
cmp
mov
js
and
cmps
push
sub
movs
mov
xchg
div
fist
jo
sbb
out
jg
aam
xlat
repnz
arpl
fbstp
cmp
jb
pop
out
inc
xchg
sub
push
stos
popf
cmc
mov
pusha
repnz
jno
xchg
push
outs
push
xor
loopne
or
add
popa
aas
mov
ins
(bad)
fisttp
sbb
fstp
cmp
dec
enter
pop
mov
adc
push
push
dec
in
inc
xor
shr
sbb
arpl
inc
lds
xchg
fidiv
pop
icebp
adc
(bad)
cmp
dec
dec
into
pushf
aad
adc
push
mov
enter
hlt
sub
mov
fisubr
jnp
movs
and
outs
mov
or
hlt
out
xchg
or
shr
gs
sbb
mov
sbb
sub
fld
test
stos
mov
fsubr
aad
aam
fsubr
outs
xor
test
stos
and
test
sub
stos
push
and
push
pop
arpl
test
mov
data16
and
jge
leave
xchg
sub
add
aas
(bad)
ficom
inc
in
cli
pushf
cmps
imul
scas
lds
jle
xor
enter
and
jnp
push
mov
xchg
jge
(bad)
sbb
jl
ins
sbb
jecxz
cmp
(bad)
popa
jmp
push
scas
mov
icebp
jae
sub
xor
sti
xor
test
pop
push
rcr
imul
lods
dec
or
and
sub
mov
xchg
push
test
xchg
es
std
popf
stc
(bad)
mov
cmps
lahf
jb
mov
and
or
cmc
dec
test
mov
inc
inc
dec
adc
or
test
inc
inc
jle
aas
push
mov
mov
xor
(bad)
shr
push
jl
dec
cmp
(bad)
lods
aas
movs
xchg
mov
adc
aad
into
jecxz
adc
out
inc
push
cmp
stc
jmp
movs
cmp
push
sub
push
adc
out
dec
aad
ins
outs
xchg
dec
jmp
cmps
push
sbb
mov
jne
repnz
das
push
xlat
mov
add
iret
adc
dec
cli
cli
xchg
mov
push
cmp
mov
mov
js
add
fcmovbe
xchg
jle
dec
inc
xchg
fist
mov
in
ins
push
fld
mov
mov
fstp
cmps
(bad)
mov
mov
inc
addr16
push
(bad)
and
dec
test
sub
cmc
cwde
rcr
lea
inc
xor
push
mov
call
jno
in
push
push
or
mov
ret
mul
hlt
xor
shl
jo
mov
fistp
xchg
test
push
mov
pushf
or
lea
mov
mov
ror
leave
xchg
mov
push
cli
xor
xor
mov
out
pop
pushf
dec
mov
imul
mov
xor
sub
adc
loopne
fbstp
jae
fs
push
shr
inc
xor
sbb
aad
sub
sahf
call
ins
add
and
dec
push
pop
ds
(bad)
div
dec
and
xchg
(bad)
jnp
mov
cmps
(bad)
in
mov
mov
push
add
xlat
adc
cmp
or
(bad)
scas
sub
lea
or
cmp
xchg
out
mov
pop
shl
outs
push
sahf
xchg
stos
call
pop
cli
xor
rcr
ror
mov
loope
fdivr
dec
cdq
in
xor
push
mul
stos
sub
push
lock
test
cmps
rcl
and
movs
mov
stc
cld
inc
cmp
loop
in
stos
inc
rol
pop
rcl
and
sti
pop
enter
nop
imul
loope
lahf
scas
sahf
cs
or
lds
dec
icebp
dec
push
mov
test
dec
sub
pop
mov
dec
lods
into
lds
dec
pop
mov
inc
fs
mov
fidivr
daa
cs
repnz
jne
imul
add
pop
jae
dec
xor
in
or
pop
mov
loope
and
jb
mov
ins
push
icebp
xchg
pop
and
jecxz
xchg
std
push
sbb
inc
mov
sub
inc
or
fucomi
sub
and
sti
js
and
inc
jnp
scas
jle
pop
mov
cld
loope
stc
and
in
in
adc
outs
bound
mov
mov
stos
mov
cwde
ds
lds
daa
pop
gs
and
sub
and
fstp
mov
push
push
imul
outs
mov
repnz
xor
(bad)
lock
repnz
lahf
test
clc
fs
add
out
call
xchg
call
js
jmp
out
inc
push
pop
data16
rol
call
fcomp
into
push
(bad)
fsubr
mov
mov
jecxz
or
pop
dec
lea
inc
push
test
dec
fistp
(bad)
retf
inc
ins
sbb
mov
test
cmp
mov
cdq
push
dec
adc
fst
push
fistp
mov
je
sub
xlat
ror
cmp
mov
fistp
xchg
and
dec
cmp
hlt
push
pop
fadd
mov
push
fbld
mov
push
hlt
mov
jne
add
inc
cmc
sub
inc
push
(bad)
aam
lock
cmp
mov
aaa
push
mov
sar
xor
mov
lahf
jle
rcr
jp
out
xchg
adc
aas
rcl
jb
jmp
push
lods
and
adc
cmc
xor
adc
pop
xchg
pop
ret
test
adc
mov
call
push
dec
cmps
jecxz
out
or
int
pusha
in
in
jne
shl
xchg
mov
pop
inc
(bad)
and
stc
cld
retf
mov
shl
shl
add
jecxz
add
repnz
cdq
and
mov
or
mov
(bad)
pop
es
xor
mov
sbb
xchg
mov
cwde
mov
push
outs
sub
add
rcr
stos
mov
rol
in
xchg
xchg
adc
inc
sub
jns
movntq
out
dec
test
mov
leave
iret
cmp
(bad)
test
pop
xchg
call
mov
aas
(bad)
push
push
jne
ja
dec
ds
pusha
jns
(bad)
mov
es
adc
jl
jmp
mov
cmp
lahf
sub
pop
push
xchg
sti
adc
dec
add
fs
sti
mov
neg
jnp
dec
add
pop
jae
mov
movs
enter
push
fsubr
daa
imul
ins
and
aam
(bad)
mov
inc
jmp
inc
xchg
jb
jp
in
dec
nop
pop
and
js
int3
dec
xchg
pop
mov
lock
jne
push
jecxz
pop
sbb
sbb
mov
test
or
push
cmp
call
push
pushf
imul
push
jns
pop
scas
pop
mov
test
scas
fbstp
inc
mov
cmp
ds
mov
xchg
nop
xchg
add
lds
push
cmp
loopne
in
ins
dec
pop
scas
std
mov
mov
aas
mov
in
mov
and
jmp
outs
pop
xchg
rcl
xchg
xchg
loope
push
jae
sbb
push
pop
push
mov
not
xchg
inc
in
cmps
bound
jl
jo
sbb
xor
push
xor
inc
sub
outs
sub
xchg
adc
sbb
fisubr
fbstp
adc
xor
xchg
pop
xlat
test
pop
mov
jecxz
jnp
cmps
popa
fmul
fist
push
mov
popf
(bad)
xchg
sbb
lock
mov
out
fst
dec
retf
xchg
cwde
jae
lock
sub
push
test
xor
mov
sar
outs
mov
imul
es
clc
(bad)
adc
imul
lock
mov
adc
push
xchg
mov
pop
into
(bad)
fild
jnp
cmp
mov
dec
(bad)
fidivr
sub
dec
adc
out
jle
pop
or
enter
sbb
fisub
aas
sbb
xchg
mov
mov
pop
mov
test
std
push
jne
pop
popf
lds
pop
inc
cdq
out
(bad)
addr16
and
mov
pop
push
mov
sti
fidivr
inc
rcl
call
mov
lahf
push
test
push
pop
pop
adc
loopne
out
dec
mov
ret
mov
imul
adc
outs
jmp
xchg
mov
stos
sahf
jmp
fisttp
das
mov
js
dec
cmps
xor
xchg
je
push
sbb
jne
aam
fcom
stc
scas
sub
jo
adc
ficom
jmp
pop
das
lods
mov
xor
push
sti
jo
push
jno
mov
dec
xor
add
sub
mov
and
pop
and
movs
fsubr
xor
out
lahf
jp
dec
jae
retf
pop
sbb
mov
push
ins
push
bound
sub
loopne
stc
les
je
jl
sub
(bad)
je
mov
sbb
pop
out
mov
shl
int3
push
jne
inc
dec
adc
test
mov
and
mov
or
sbb
push
cmp
mov
(bad)
pop
loopne
xor
push
add
xchg
push
in
and
pop
das
inc
aas
aam
adc
xor
and
xlat
jno
sub
add
inc
push
bound
mov
movs
popa
or
pop
add
mov
and
mov
jmp
adc
sbb
int3
jb
in
mov
ror
dec
sub
fstp
shl
dec
adc
adc
(bad)
push
ret
shr
inc
sbb
call
push
cmp
jmp
jnp
adc
fild
jbe
mov
aam
add
pushf
scas
cs
icebp
pushf
pop
sub
inc
out
cmps
or
cmp
into
ins
jno
(bad)
push
xor
lock
mov
icebp
fisttp
sbb
cmp
add
add
adc
and
imul
sar
iret
xor
push
jb
daa
dec
ja
out
push
lock
data16
icebp
jbe
iret
jnp
mov
stos
xor
loopne
add
jo
and
push
mov
test
jg
and
jns
test
xlat
cmps
test
sbb
imul
push
fst
in
(bad)
mov
hlt
dec
sub
lods
cwde
and
xchg
add
imul
jns
jmp
retf
and
jnp
and
sbb
rcr
push
ss
mov
adc
sbb
popa
mov
pop
(bad)
jg
retf
bsr
nop
mov
es
inc
loop
test
cld
cmp
jmp
cld
pop
dec
fimul
dec
sub
mov
ret
pop
out
mov
cmp
mov
shr
pop
inc
(bad)
inc
adc
ins
lods
jnp
imul
aad
cmp
cmp
or
sbb
imul
inc
or
cmc
mov
out
xchg
shl
and
and
mov
sbb
mov
les
xchg
cs
fstp
jmp
stos
aad
cmp
nop
adc
adc
loope
(bad)
dec
cwde
mov
sub
mov
push
or
jae
jmp
sub
enter
pop
pop
test
fiadd
mov
enter
test
mov
lahf
scas
retf
loop
mov
inc
outs
sti
(bad)
add
xor
pusha
and
scas
fild
ficom
or
sbb
call
and
mov
inc
mov
fisttp
jno
pop
(bad)
in
clc
dec
bound
mov
mov
js
fmul
add
sbb
inc
into
push
stos
stc
jmp
loop
fsubr
adc
aaa
push
popf
leave
ror
popf
adc
repz
xchg
xor
out
int3
(bad)
cmps
push
pop
push
dec
and
popf
int
jmp
arpl
sub
inc
adc
ins
in
(bad)
in
jb
nop
or
fsubr
iret
cmps
push
jae
jg
ret
ins
mov
inc
adc
nop
dec
call
push
(bad)
mov
cmc
sbb
leave
mov
daa
movs
cmp
fs
push
push
push
dec
iret
mov
xchg
push
xor
imul
push
push
mov
adc
ror
push
scas
scas
xchg
dec
leave
leave
cwde
bound
lods
(bad)
mov
arpl
cmp
dec
xchg
cmps
jl
je
xchg
in
cmp
xchg
repnz
stc
dec
mov
push
xchg
mov
cs
(bad)
and
xor
or
ffreep
pop
cmp
std
sbb
daa
push
pop
ss
dec
pop
enter
idiv
pop
jb
ficom
call
push
inc
and
dec
in
push
and
inc
mov
cmp
push
mov
or
test
pop
mov
push
and
sahf
or
test
fadd
aas
sub
ins
jle
mov
cmp
in
cmc
pop
fnstsw
fs
inc
inc
jae
and
ds
sub
mov
addr16
mov
sub
je
inc
out
dec
adc
aad
in
je
sbb
sub
dec
and
sub
cmp
fcmovnu
push
test
ret
dec
je
(bad)
xchg
inc
inc
popa
or
sub
daa
adc
push
jne
mov
je
retf
test
inc
or
aas
das
mov
clc
pop
ret
mov
mov
fldpi
fwait
push
mov
cmp
pusha
in
call
xchg
or
in
sub
dec
and
das
test
int3
iret
push
add
and
and
cmp
out
leave
mov
movs
or
fdiv
les
xchg
mov
bound
mov
add
push
push
jno
fsub
repnz
mov
pop
leave
xlat
xor
cmc
push
push
ret
adc
or
cmp
or
movs
pop
ins
jecxz
std
rcl
jne
inc
xchg
icebp
rcr
mov
push
lock
fidivr
push
sbb
mov
inc
cmp
xchg
aas
mov
(bad)
fadd
scas
dec
add
pop
adc
push
cmp
and
loopne
imul
cli
add
aam
mov
push
cwde
popf
push
mov
mov
mov
icebp
mov
mov
xor
mov
jns
cmp
xor
cdq
cwde
dec
xchg
push
(bad)
test
push
xchg
and
mov
test
push
ss
call
inc
push
or
jno
mov
shl
mov
xchg
loop
out
sbb
sub
fmul
(bad)
fidivr
inc
js
jl
dec
sub
jle
xor
cmp
in
adc
mov
jmp
pop
add
jmp
test
lods
inc
fldenv
ins
clc
int
push
xor
not
or
fild
inc
sbb
in
jbe
in
mov
pop
pop
sub
popf
or
cmp
shr
mov
add
jle
push
push
inc
mov
and
ret
adc
jmp
mov
repnz
cmp
push
pop
mov
mov
int
xchg
mov
jne
ror
and
movs
in
out
push
cwde
inc
adc
or
jle
bound
bound
inc
xor
inc
out
pop
pushf
or
pop
inc
mov
in
lds
retf
mov
loop
push
mov
enter
or
bound
mov
jecxz
pop
push
xor
fdiv
cmp
jmp
(bad)
(bad)
pop
imul
sbb
loopne
mov
jle
push
adc
pop
pushf
sbb
or
push
sub
pop
movs
sbb
jns
mov
jnp
jle
popa
test
push
pop
cli
sbb
sub
push
mov
test
cli
je
cmp
(bad)
in
jo
inc
shr
or
xor
mov
cdq
or
iret
ret
xor
push
test
gs
lods
pop
shr
adc
out
bound
movs
sbb
sbb
test
xor
(bad)
mov
or
fidiv
or
sbb
popf
pop
cmc
cmc
xchg
mov
and
imul
rol
(bad)
sbb
push
inc
sub
or
xchg
retf
out
nop
push
cmp
lods
outs
into
(bad)
xchg
jns
ja
push
imul
and
inc
mov
push
stc
mov
mov
adc
repnz
sbb
sub
test
sub
sbb
sbb
cmp
(bad)
sar
pop
ds
aam
mov
sbb
mov
stos
cld
aaa
rol
loopne
inc
push
pop
dec
xchg
mov
fnstsw
js
sbb
popf
sub
std
loopne
rcr
aaa
fwait
mov
fxam
ins
fsub
push
jp
arpl
xor
lods
popf
inc
or
inc
xor
xchg
mov
xchg
sbb
mov
cmp
cmp
lock
mov
mov
arpl
mov
mov
jno
sub
and
inc
jbe
cdq
test
jle
loope
sbb
inc
(bad)
lea
adc
and
jbe
fwait
adc
call
jbe
clc
repz
int
jmp
out
bound
pop
sahf
sub
popa
aaa
nop
sbb
sub
adc
mov
lock
jmp
(bad)
into
in
sbb
mov
mov
dec
push
call
scas
outs
sbb
pop
adc
dec
push
adc
loop
pop
cmp
or
sqrtps
xchg
call
mov
or
test
push
fs
mov
clc
cmp
in
in
test
and
pop
aas
imul
or
mov
das
call
jbe
gs
jl
jmp
adc
imul
mov
mov
mov
jge
int
in
pop
mov
das
xor
and
fnstsw
mov
sbb
popa
push
xchg
dec
pushf
push
das
ins
jne
or
adc
push
mov
test
enter
adc
push
sub
inc
repz
aas
jns
inc
movs
add
push
cmp
out
dec
cwde
cmp
into
xchg
fwait
out
cmp
sub
jle
cmp
sub
pop
sbb
lods
not
rcl
xchg
(bad)
fst
mov
xor
ret
cli
pusha
xor
fwait
test
lahf
cmp
push
mov
shr
jo
cdq
xor
stc
pop
addr16
dec
adc
ins
out
cdq
mov
and
cmp
retf
mov
xchg
stc
push
cmps
xchg
mov
test
sub
or
fidivr
and
icebp
push
imul
push
arpl
outs
and
icebp
mov
mov
xchg
int3
lods
and
popf
jo
loope
xchg
stc
retf
sti
sub
imul
lahf
daa
push
jmp
stc
data16
push
call
cmp
push
ja
repz
sti
cdq
push
out
push
int3
xchg
mov
jge
data16
cmps
aaa
leave
sbb
xor
cmp
pop
enter
xchg
pop
(bad)
call
cmps
inc
cmp
dec
lock
test
cmp
mov
inc
loop
(bad)
cmp
cmp
push
bnd
push
fsub
rol
dec
xchg
xor
add
inc
cs
and
movs
pop
mov
mov
pop
mov
or
nop
xor
enter
pop
out
dec
ror
dec
in
and
hlt
adc
(bad)
add
cmp
leave
add
xor
and
and
(bad)
gs
jle
mov
mov
push
neg
stos
ins
mov
bnd
and
mov
loop
and
dec
fbld
and
popf
ret
repz
pop
cmp
push
dec
addr16
xor
test
xchg
adc
jge
jnp
inc
xchg
std
or
sub
fwait
dec
js
shr
dec
cmp
dec
jo
mov
mov
in
fist
inc
pop
test
dec
div
pop
(bad)
dec
and
pop
shr
js
mov
mov
xor
xchg
and
sub
and
and
into
adc
arpl
fwait
rcl
push
psrld
xchg
push
cmp
xchg
fadd
(bad)
mov
jmp
loopne
out
mov
sbb
or
outs
out
xchg
push
xor
shl
jae
rcr
scas
js
pop
bound
dec
arpl
cmp
scas
push
jnp
mov
dec
mov
dec
out
push
dec
xchg
and
enter
sub
xor
inc
xor
hlt
loope
int
(bad)
gs
or
mov
or
pop
sub
lahf
aas
add
inc
jp
mov
pop
or
bound
mov
xchg
fxtract
mov
mov
adc
mov
retf
scas
jmp
jle
es
test
ins
sub
dec
jbe
mov
ret
fsub
dec
sub
prefetch
sbb
add
cmp
dec
mov
inc
ins
les
(bad)
jl
inc
pop
push
and
jnp
pop
and
inc
sub
mov
loop
mov
xor
out
push
test
and
push
sbb
adc
xchg
call
jo
sub
xor
ja
cmp
fwait
mov
cmc
or
(bad)
std
loopne
leave
call
adc
dec
lahf
mov
jmp
cli
dec
inc
pop
cmp
pop
fwait
lods
bound
fst
jo
adc
rcr
sbb
aas
jns
clc
imul
sar
cmp
mov
call
dec
jle
sub
pop
inc
push
jne
retf
sbb
jnp
fidiv
inc
xchg
aaa
mov
arpl
cmc
aas
inc
shl
(bad)
hlt
jb
pop
icebp
mov
pop
and
(bad)
jmp
out
loopne
push
push
bndldx
in
add
jb
scas
in
push
daa
aam
scas
jp
mov
xchg
dec
dec
dec
dec
or
pop
cmp
pop
and
scas
dec
jecxz
rcr
loop
ret
sub
pop
xchg
out
loop
in
jl
inc
pop
arpl
int
pop
cli
pop
in
xor
and
jno
movs
jmp
jbe
popf
cli
arpl
pop
pop
das
and
inc
mov
rcl
stc
add
ror
cmp
jg
adc
jno
fmul
icebp
xchg
(bad)
cmp
adc
ret
mov
fwait
or
mov
sub
and
ror
pushf
adc
or
xchg
push
fcom
push
mov
mov
inc
dec
test
sahf
push
cmps
mov
pop
and
push
adc
inc
not
call
xor
pop
adc
cmp
jno
out
arpl
ins
mov
mov
clc
mov
lods
hlt
fcmovnb
sub
or
sub
mov
add
jecxz
test
retf
lds
cmovs
jne
jo
cdq
lods
dec
fisttp
adc
mov
outs
push
scas
xchg
dec
popf
(bad)
fdiv
inc
mov
stc
nop
pusha
imul
stc
and
fmul
repz
sub
in
rcl
(bad)
mov
aas
jno
adc
cmp
sub
pop
mov
adc
dec
ja
mov
leave
jp
push
jl
adc
out
sub
inc
jno
sub
in
push
das
sub
shr
outs
push
pop
in
cld
adc
sbb
or
jae
sub
mov
sbb
into
lods
sbb
and
pop
test
sbb
aad
addr16
mov
xor
addr16
xor
loop
aaa
mov
cli
mov
sub
mov
adc
dec
aam
mov
pop
les
and
jmp
inc
aas
rcr
inc
push
add
sub
mov
push
js
cmp
mov
fidivr
inc
xlat
into
popa
retf
jmp
call
mov
imul
fimul
or
loope
cmp
scas
lds
inc
fs
jge
and
xor
push
add
xchg
lods
xchg
stc
add
stos
xchg
call
mov
xchg
or
sti
xor
gs
dec
and
mov
arpl
into
push
and
jl
fmul
or
arpl
jl
fbld
jge
hlt
mov
cmps
loop
and
call
das
mov
shl
repz
sar
imul
jbe
inc
cwde
jl
cmps
xor
out
call
stc
xchg
dec
push
sbb
push
add
adc
lds
imul
imul
mov
fadd
xchg
dec
popf
mov
sub
xchg
push
dec
ins
push
add
inc
outs
fcom
pop
push
inc
sbb
push
(bad)
fstp
dec
pop
(bad)
sbb
xor
cmp
or
inc
cwde
xchg
xchg
cmp
imul
les
ins
mov
mov
jbe
mov
cld
or
or
bound
psrlq
or
add
push
stos
fld
lds
cmp
mov
cmp
call
and
int3
cli
out
add
add
imul
ror
inc
mov
outs
sub
retf
cli
(bad)
hlt
daa
xor
sub
jne
pop
xchg
and
cmp
in
or
fcomp
call
mov
(bad)
push
mov
pop
ss
aas
call
lods
and
jns
pop
jns
js
or
jp
and
mov
cmp
retf
push
retf
and
mov
dec
dec
(bad)
xor
cs
adc
and
xor
pop
and
dec
bound
jno
push
sub
iret
push
mov
(bad)
pop
adc
pop
mov
sahf
out
mov
movs
std
je
in
sbb
daa
and
jbe
cmp
pop
test
call
cld
cmp
sub
adc
and
les
adc
out
(bad)
icebp
js
out
mov
dec
jo
adc
cmps
shr
mov
(bad)
repz
loope
test
cdq
aad
and
in
cmc
out
sub
test
or
mov
stos
loopne
nop
dec
sbb
inc
stos
xchg
mov
pop
jmp
jmp
mov
retf
sub
sti
outs
pop
xor
nop
adc
or
xchg
imul
data16
inc
rcr
dec
push
push
sub
pop
mov
mov
push
sub
inc
sbb
ja
inc
arpl
fstp
push
jp
xchg
add
nop
test
dec
mov
fidiv
add
sub
jns
movs
stos
inc
ror
xor
mov
fistp
add
hlt
mov
lods
add
and
or
nop
cmp
mov
(bad)
dec
xlat
iret
dec
ffreep
movs
jle
cmps
addr16
jb
daa
dec
ins
sbb
jne
cwde
inc
push
ins
hlt
scas
jecxz
rol
jbe
jmp
(bad)
andps
repnz
mov
data16
sar
jb
gs
fst
or
cld
lds
cmp
jecxz
mov
nop
mov
mov
test
in
cmp
jae
(bad)
fnstcw
sbb
pop
xor
mov
xchg
mov
movs
push
mov
jne
out
mov
int3
mov
std
add
add
enter
cmp
jge
inc
pop
mov
cmp
sub
fwait
push
in
push
js
popa
jne
arpl
repnz
mov
bound
jecxz
jne
push
dec
adc
jae
mov
hlt
scas
adc
je
shr
je
test
in
ss
bound
jbe
icebp
mov
cdq
pop
mov
pop
fwait
iret
(bad)
mov
pop
push
cmp
mov
mov
mov
sbb
dec
or
es
xor
push
mov
repz
mov
sub
cli
retf
out
sub
mov
mov
jge
xchg
cmp
sub
pop
stos
xor
sub
clc
clc
sub
push
inc
mov
loope
dec
ret
sub
sub
cmp
leave
and
icebp
fbld
mov
dec
test
ins
outs
int3
adc
inc
cld
dec
cmps
gs
(bad)
stos
shl
mov
dec
mov
and
xor
das
fdiv
xchg
inc
sub
mov
retf
scas
lea
sbb
push
dec
movs
(bad)
adc
push
pop
out
inc
shr
sbb
jl
test
pop
mov
rcr
xchg
sbb
sbb
adc
in
cmp
adc
push
mov
xor
popf
add
xchg
jno
fadd
retf
in
stc
jns
js
dec
add
scas
fnstsw
das
and
stc
jns
jbe
pop
dec
adc
sbb
mov
mov
inc
adc
repz
xor
dec
shl
or
mov
sbb
ret
ins
dec
movs
push
push
mov
lahf
add
jg
scas
into
popa
or
add
add
in
outs
add
mov
xchg
push
xchg
std
movs
cmp
(bad)
mov
xor
or
sbb
into
out
and
stos
xchg
(bad)
std
in
(bad)
(bad)
movs
(bad)
pop
repz
jecxz
retf
add
pop
push
(bad)
loopne
inc
nop
loop
jo
scas
out
aam
mov
inc
fmulp
or
dec
dec
push
sahf
fist
pop
gs
call
retf
fnstcw
in
or
xlat
mov
xchg
icebp
fucomip
dec
sub
dec
jo
cmp
jb
fisubr
fisubr
mov
inc
mov
and
mov
adc
xchg
(bad)
xor
ror
popa
push
ja
bound
retf
dec
leave
inc
pop
sbb
cmp
(bad)
ffreep
mov
cli
aas
dec
adc
inc
(bad)
hlt
(bad)
push
clc
dec
jnp
sub
mov
and
aas
out
mov
bndldx
dec
retf
or
push
xor
(bad)
xor
sbb
pop
dec
xchg
retf
iret
test
and
pusha
pop
retf
pop
mov
xchg
cmp
lock
out
push
cmc
es
ins
mov
push
(bad)
xor
cld
xchg
mov
dec
add
stos
aaa
repz
and
into
mov
call
arpl
pop
ja
call
mov
retf
mov
(bad)
stos
sub
mov
cmp
js
mov
xchg
xor
retf
mov
add
scas
sub
fidivr
mov
inc
mov
loopne
push
lea
call
scas
repz
mov
sahf
imul
jp
fiadd
mov
adc
jo
dec
add
(bad)
ficomp
pop
add
cmps
hlt
mov
fild
repnz
mov
in
mov
push
inc
xor
and
lahf
pop
adc
mov
test
xchg
ror
ss
in
ins
std
lahf
pop
pop
clc
xor
dec
test
aaa
pop
(bad)
ss
jl
addr16
loopne
scas
inc
fcom
popa
xor
das
cmps
jge
ret
shl
pop
and
ins
pop
lahf
and
mov
xchg
test
inc
lods
push
pushf
scas
jnp
sbb
cwde
jmp
adc
ret
mov
arpl
xor
out
jl
mov
adc
ds
retf
xor
sbb
pop
mov
aam
sub
jle
out
inc
test
das
sub
xor
outs
sbb
add
outs
pop
into
popa
daa
mov
adc
pop
or
popf
sub
push
popa
cmp
inc
xchg
rep
xchg
push
add
lods
cmp
fmul
out
dec
mov
(bad)
(bad)
iret
popa
mov
mov
ss
jmp
push
mov
mov
cmp
xchg
cs
mov
pop
inc
adc
ret
fisttp
pop
js
xor
mov
sbb
inc
sbb
and
mov
sbb
ror
clc
ins
mov
mov
jae
lea
ins
jp
test
sub
xchg
in
sbb
mov
sub
daa
sbb
lsl
scas
jecxz
jl
fdivr
movs
mov
retf
lods
mov
fistp
arpl
and
or
jne
push
or
pop
dec
test
add
out
das
js
xchg
test
dec
loope
enter
das
xchg
hlt
sbb
fucom
pop
adc
cld
test
fmul
push
ret
xor
inc
out
cmp
mov
in
(bad)
das
pop
adc
mov
and
xor
in
push
adc
stos
scas
(bad)
leave
sar
mov
imul
sahf
lods
inc
(bad)
fild
xchg
xlat
dec
sbb
dec
jge
push
jmp
scas
add
shl
mov
add
movs
test
push
and
sub
movs
mov
stos
jmp
popf
ss
dec
or
ss
adc
stos
dec
ret
mov
add
minps
jb
bound
cmp
cs
test
push
int3
test
inc
ret
and
pop
retf
imul
(bad)
(bad)
pusha
cli
(bad)
xor
and
sti
mov
or
sbb
mov
sbb
and
cmp
repz
mov
xor
xlat
jl
mov
cdq
mov
jb
enter
xchg
les
mov
mov
dec
hlt
inc
adc
sub
push
stc
dec
call
ret
into
push
adc
pop
(bad)
mov
call
jg
out
and
mov
jae
icebp
sar
fstp
lahf
aaa
out
lea
js
pop
inc
ins
pop
mov
and
jne
(bad)
je
push
inc
call
enter
jns
(bad)
xchg
sbb
ror
repnz
fsub
push
xchg
mov
in
test
into
or
mov
inc
jo
dec
mov
js
shr
mov
dec
dec
jl
sbb
pop
lds
or
ret
and
xchg
xor
cmp
call
lds
sub
repnz
adc
cmp
out
icebp
adc
mov
in
or
scas
jle
fmul
into
in
sbb
(bad)
stos
sub
sub
lods
cli
dec
adc
push
add
cld
xor
mov
cmp
add
movs
push
push
(bad)
dec
fidivr
iret
cmp
and
dec
clc
popf
in
jecxz
xchg
mov
xchg
repnz
push
in
jne
xchg
addr16
es
jge
hlt
cmps
loope
mov
sbb
imul
dec
(bad)
cmp
xchg
addr16
pop
push
sbb
cwde
jl
dec
dec
push
js
sbb
or
sub
sub
inc
fdivr
mov
(bad)
call
hlt
outs
xchg
adc
jmp
or
ja
push
or
or
push
xor
into
inc
add
xchg
out
jmp
or
rcl
and
outs
repz
neg
out
mov
rcl
dec
or
out
outs
dec
jmp
outs
xchg
pop
mov
jge
xor
mov
lods
mov
add
lods
sar
cmp
clc
fimul
(bad)
into
push
div
fidiv
push
or
in
pop
or
adc
mov
pop
icebp
xor
adc
in
adc
adc
fwait
nop
jecxz
dec
pop
push
jge
mov
and
cmp
ret
sar
cmp
push
fisubr
fmul
sahf
cli
icebp
(bad)
outs
enter
ja
sbb
mov
jmp
jmp
aam
add
jl
push
fcomp
dec
imul
mov
pop
and
int3
jae
repnz
inc
daa
add
jg
jmp
jl
fnstenv
add
xlat
inc
push
popa
mov
clc
pop
ja
xor
(bad)
or
jno
inc
mov
mov
cmps
shl
xchg
and
push
out
pop
sub
mov
in
xchg
into
jbe
in
jbe
sub
push
push
sbb
rol
xchg
push
push
mov
(bad)
daa
adc
xor
(bad)
stc
cmc
popa
adc
stos
and
xor
push
int
inc
mov
cwde
jne
xor
xchg
adc
outs
xchg
outs
cdq
hlt
(bad)
mov
in
scas
sub
mov
push
sbb
test
(bad)
in
(bad)
push
movs
mov
test
cmp
enter
mov
dec
gs
pop
mov
repz
scas
jae
imul
add
dec
outs
lea
xor
in
std
sbb
retf
imul
push
mov
or
clc
lods
movs
and
push
nop
pop
push
ja
cmp
push
pop
loope
pop
xchg
inc
ret
push
mov
sub
out
not
push
adc
fld
xchg
(bad)
sbb
jmp
in
aad
or
xlat
or
push
push
mov
sbb
cdq
fwait
mov
sbb
dec
mov
je
mov
scas
ret
add
cmp
push
cmp
pop
jle
mov
pushf
aad
xor
ins
enter
shl
mov
jb
outs
les
(bad)
mul
outs
or
mov
adc
nop
fimul
xchg
mov
les
es
in
push
out
and
jmp
pop
lods
retf
push
stos
cmp
mov
ja
popa
mov
xlat
mov
adc
mov
(bad)
add
inc
inc
adc
mul
fistp
ja
jbe
outs
push
cmp
out
fwait
pop
mov
ror
fwait
sbb
cmp
sbb
push
int3
jo
jae
(bad)
(bad)
(bad)
fistp
stos
mov
stos
(bad)
dec
mov
mov
push
mov
lahf
xchg
cmp
jmp
add
jge
add
(bad)
adc
dec
mov
dec
aaa
add
or
push
clc
jns
les
xor
sub
dec
pop
jne
es
dec
daa
pop
dec
push
stc
call
(bad)
je
ret
test
push
push
adc
xchg
xor
jecxz
faddp
fstp
call
mov
jbe
cli
add
jecxz
dec
push
sar
lea
test
inc
dec
test
mov
(bad)
lods
push
cmps
cs
mov
pop
test
jne
mov
xor
not
and
mov
cmp
ucomiss
lahf
add
pop
or
ror
dec
mov
addr16
int
clc
xchg
sbb
imul
mov
add
sub
dec
lods
push
ror
cmp
sti
cmp
lea
icebp
dec
sbb
rcl
jnp
loopne
dec
inc
mov
div
inc
mov
popa
adc
or
(bad)
adc
push
sbb
repnz
lds
fnsave
(bad)
aam
cmp
into
inc
pop
xchg
fdivr
icebp
in
inc
mov
(bad)
neg
adc
repz
or
(bad)
mov
mov
or
cmp
lahf
ret
fld
jnp
pop
sub
adc
push
dec
pop
push
inc
std
jl
loop
test
test
add
cmp
add
cmp
inc
mov
inc
sbb
mov
xlat
(bad)
push
adc
imul
icebp
push
push
and
sahf
popa
adc
test
push
scas
in
sub
nop
jbe
mov
es
inc
test
mov
ss
sbb
xor
mov
retf
ret
fwait
or
push
push
retf
mov
or
outs
lds
jnp
call
sub
or
dec
cmp
mov
cmp
loop
iret
push
cmc
inc
mov
and
inc
scas
adc
xchg
movs
inc
out
add
mov
mov
dec
push
sbb
dec
inc
push
movs
sub
fimul
inc
in
int3
(bad)
mov
cmps
inc
push
jae
dec
pop
push
(bad)
dec
pop
jne
push
sbb
mov
mov
lds
or
adc
mov
push
ret
mov
aas
rcl
repnz
movs
mov
sti
cmps
repz
and
mov
inc
push
inc
fdivr
cli
jae
add
(bad)
nop
cs
test
outs
mov
jae
jge
aam
sbb
add
push
mov
ss
retf
dec
cmp
cdq
lahf
pop
aas
inc
push
push
sub
xchg
stc
cli
outs
(bad)
(bad)
fist
stos
into
inc
dec
aas
dec
push
or
pop
adc
mov
lahf
(bad)
je
rol
jmp
or
xchg
fisubr
adc
mov
test
(bad)
rcr
xchg
loopne
addr16
sub
xchg
std
xor
mov
aad
jecxz
movzx
mov
cmp
dec
xor
mov
xor
cwde
repnz
mov
dec
jns
and
sahf
shl
aad
xor
dec
(bad)
jb
add
jl
and
fs
xchg
stos
push
int3
cdq
movs
push
aad
test
fs
ror
fs
addr16
sti
add
in
cmp
add
mov
std
cdq
xlat
scas
dec
push
outs
repnz
pop
push
jmp
dec
mov
neg
imul
sub
imul
push
cmp
cwde
aas
add
retf
jmp
imul
sbb
or
pop
inc
fwait
and
pop
sub
jns
mov
or
sub
pop
ins
int3
jne
dec
sbb
in
stos
and
popf
(bad)
ret
into
test
fstp
sub
test
out
cmp
mov
aas
pop
inc
lahf
rcl
es
retfw
imul
rcr
mov
mov
jns
or
dec
jo
push
sbb
mov
sar
imul
jbe
push
and
std
inc
jb
dec
mov
aas
test
and
mov
or
pop
ja
and
sub
jmp
imul
retf
jp
retf
and
inc
aas
fstp
scas
in
in
mov
cwde
or
dec
scas
lock
or
and
push
jecxz
paddusb
push
push
sbb
adc
movs
xchg
add
or
fsub
xchg
mov
jae
jne
inc
or
sar
sub
xor
xchg
mov
cmp
out
fadd
mov
cmp
inc
add
cmps
fistp
sbb
(bad)
(bad)
pop
clc
hlt
mov
ins
fsub
pop
movs
ins
inc
xor
shr
mov
and
xchg
icebp
(bad)
in
leave
or
je
adc
(bad)
adc
sub
ret
aam
lock
jno
sti
sub
xor
enter
mov
xchg
out
clc
dec
into
mov
xchg
mov
push
sti
mov
out
ror
mov
adc
lods
stos
xchg
mov
leave
mov
mov
ficomp
lahf
xchg
and
mov
add
xchg
sub
lds
loopne
lock
cmp
adc
mov
movups
ror
mov
cmp
jmp
cmp
test
and
hlt
out
mov
dec
sbb
or
daa
push
sar
ret
dec
or
in
cwde
inc
jae
jl
sub
sub
in
idiv
dec
fsubr
xchg
repnz
sub
pusha
lods
sbb
sbb
pop
fistp
push
inc
inc
or
xlat
xchg
mov
shl
mov
(bad)
scas
out
xor
inc
bound
mov
and
mov
fbstp
aaa
arpl
cld
hlt
mov
cmp
adc
jb
aam
pop
ret
(bad)
mov
lock
inc
adc
mov
jbe
lock
popf
btr
jnp
js
int3
aaa
xchg
dec
or
ret
mov
push
pop
sub
dec
sar
jp
cmp
push
xchg
hlt
xor
sub
imul
data16
dec
in
mov
arpl
sbb
and
popa
sbb
xchg
rol
sahf
xchg
aas
mov
sbb
les
or
loop
xor
jbe
jge
push
mov
mov
dec
mov
jl
pop
xchg
push
cmc
cmp
mov
sub
pop
scas
ror
add
int
retf
and
jno
scas
lea
jle
outs
mov
scas
iret
ss
mov
mov
int
call
xchg
push
repz
cld
xchg
fwait
ja
(bad)
pop
dec
sbb
test
and
sub
inc
adc
sahf
mov
cmp
cmp
(bad)
or
push
sahf
xor
mov
call
xor
jp
xchg
adc
mov
push
add
rol
dec
iret
ds
inc
repz
test
cld
ins
xor
xchg
stos
or
(bad)
ret
fadd
mov
push
aaa
xchg
add
(bad)
xchg
mov
enter
lahf
repnz
inc
xor
fadd
mov
lea
mov
fcmovnbe
(bad)
cmp
cmp
add
test
cmps
faddp
shr
adc
dec
scas
ins
int3
call
jae
jle
mov
and
mov
stc
jb
retf
jbe
fbstp
test
pop
cmp
nop
jno
and
js
cmc
(bad)
loope
adc
(bad)
sub
adc
cwde
sub
adc
sub
and
in
dec
icebp
in
and
cmp
or
sbb
jnp
icebp
pop
adc
pop
leave
inc
adc
xor
std
pop
inc
jno
mov
movs
loope
sub
retf
dec
sub
cs
sub
ins
es
xor
mov
stc
mov
adc
sar
xchg
pop
cli
pop
xchg
stos
repz
inc
push
add
and
mov
nop
clc
inc
pop
inc
pop
mov
xchg
or
call
dec
ret
test
test
neg
xchg
or
cmps
cld
dec
push
ret
fst
mov
fs
dec
jb
inc
cmp
push
inc
push
or
ficom
fcomp
out
add
dec
jle
or
ror
sub
mov
xor
sahf
sub
(bad)
stc
cmp
jno
mov
stc
lock
fdivr
(bad)
xchg
ret
inc
adc
mov
push
popa
es
xchg
mov
and
out
xlat
xor
push
aas
push
sahf
push
mov
(bad)
call
in
icebp
cmp
dec
mov
inc
or
xchg
add
and
xchg
in
adc
daa
aad
xchg
mov
jo
xchg
aad
pop
dec
mov
stc
xchg
sbb
out
dec
add
and
stc
retf
(bad)
cwde
sub
push
sahf
div
add
push
sub
xchg
jle
fisubr
int3
rcl
ja
inc
pop
ins
jb
int3
xchg
(bad)
dec
rcl
ss
dec
mov
push
movs
sbb
jb
imul
mov
shl
cmp
cmp
(bad)
cwde
add
ja
xchg
xor
js
shl
adc
xchg
fsub
movs
in
dec
mov
mov
(bad)
pop
jp
leave
div
jmp
gs
jno
in
pop
pop
retf
mov
pop
jbe
mov
imul
xor
out
and
loopne
sub
dec
stos
push
les
fbld
mov
int3
mov
dec
inc
shl
int3
int3
fld
pop
jge
cmp
je
mov
lds
loope
mov
jmp
mov
add
test
pop
test
int
jp
adc
mov
push
aas
out
jb
sub
in
sbb
add
aam
or
adc
int
aaa
xor
popf
idiv
and
ds
shl
pop
push
cmp
(bad)
jecxz
xchg
fstp
jmp
xchg
into
push
mov
inc
xchg
inc
(bad)
retf
clc
sub
push
bound
jl
cwde
fdiv
add
cmps
fisubr
ss
xor
stos
jmp
sub
iret
sbb
fidivr
cmc
mov
or
enter
jmp
sub
mov
or
cmp
push
fsub
fadd
aam
dec
xor
fwait
mov
fs
test
rcl
outs
loope
adc
mov
clc
pop
add
pop
push
into
xor
add
out
sbb
xor
fstp
ficomp
repz
outs
lods
and
cmp
nop
lea
and
call
sub
xchg
ss
lds
clc
jmp
jl
and
pop
mov
loope
push
imul
and
jnp
(bad)
loopne
mov
imul
out
cmp
mov
repz
outs
scas
jb
push
and
jmp
stc
retf
xor
sahf
or
rol
sar
ret
push
push
add
mov
and
or
xor
retf
and
stc
push
xchg
jge
cmp
or
call
dec
sbb
das
cmp
in
pop
js
imul
fist
neg
pop
in
sub
retf
ret
jmp
addr16
mov
int
cwde
pop
mov
dec
jbe
mov
lods
mov
packssdw
iret
aas
adc
dec
test
in
cwde
bound
push
lock
cmp
dec
(bad)
out
adc
mov
shl
out
push
inc
aam
stos
in
mov
adc
cli
ss
xchg
adc
bound
sub
aam
(bad)
ins
scas
call
in
push
or
cli
movs
dec
nop
addr16
call
lahf
add
ss
jne
adc
inc
(bad)
xor
cmp
mov
push
adc
test
pop
mov
inc
movs
adc
ret
cmp
jo
ins
lock
xor
push
mov
fdivr
add
cmp
movs
pop
ins
sti
leave
in
fistp
mov
inc
rol
mov
jge
gs
inc
push
xor
fnsave
push
push
mov
pushf
cmp
xchg
mov
pop
pusha
aas
or
clc
xor
cli
cmps
inc
ret
inc
add
ret
or
xchg
inc
inc
and
push
ins
pop
add
cmp
dec
pop
mov
fidivr
or
mov
or
push
cmps
popf
test
and
inc
xchg
add
dec
adc
adc
aad
(bad)
ja
(bad)
mov
out
cmps
add
lods
sbb
pop
call
(bad)
xchg
jmp
cs
adc
push
adc
outs
sbb
repnz
std
iret
cmp
and
vsqrtss
neg
dec
xchg
dec
mov
rcl
mov
js
sub
fdiv
xchg
mov
jecxz
imul
jbe
repz
dec
add
xlat
xor
mov
mov
xchg
fld
pushf
in
cmc
and
sahf
and
int3
cmp
stos
xchg
inc
fwait
dec
mov
nop
and
sub
mov
xlat
imul
cmp
cmp
mov
mov
push
les
ds
push
clc
sti
div
inc
jmp
sbb
mov
sbb
cmp
mov
xchg
sbb
sbb
sbb
ins
rol
int3
dec
loope
lea
pushf
scas
rol
sbb
out
add
addr16
cwde
mov
fucomip
mov
mov
outs
int3
(bad)
aam
pop
cmps
mov
in
es
(bad)
dec
lds
and
mov
jmp
call
add
test
jl
int3
cmp
sub
pop
and
ins
call
mov
mov
xor
mov
pop
inc
sbb
not
adc
stc
xor
inc
mov
pop
jle
div
cld
into
(bad)
(bad)
xchg
loope
add
dec
rol
cmc
xor
out
mov
xor
es
(bad)
retf
and
mov
adc
(bad)
call
pop
ins
mov
mov
cmp
js
inc
pop
call
(bad)
sbb
gs
pop
mov
mov
pop
fist
aaa
inc
sub
fwait
jge
push
aad
inc
mov
sub
xchg
ret
mov
shr
push
(bad)
in
les
fdiv
in
in
push
or
push
dec
mov
sub
push
cdq
push
cld
xor
fabs
push
add
ret
push
loopne
jmp
sbb
loopne
xor
xchg
jge
jmp
cmp
int3
ret
call
test
sbb
mov
cmps
call
sub
adc
out
inc
and
mov
xor
das
xor
xchg
lods
call
sub
dec
mov
add
loopne
mov
xchg
cld
fistp
jnp
mov
mov
add
and
mov
xchg
and
mov
je
push
pushf
mov
in
(bad)
xchg
jae
scas
jbe
and
mov
(bad)
push
in
enter
xchg
addr16
in
mov
inc
icebp
data16
lock
fmul
dec
pop
(bad)
fld
neg
jnp
das
adc
push
dec
in
(bad)
mov
ds
mov
jae
(bad)
call
xor
les
adc
lock
sbb
sub
scas
xchg
into
adc
sub
jb
xchg
das
aaa
xchg
adc
in
cs
pop
movs
cmps
movs
fisub
fnsave
sub
dec
pop
mov
cmp
mov
add
inc
xor
jne
lea
in
cmp
in
cmp
fimul
xchg
idiv
jmp
aaa
mov
xlat
aad
mov
lods
rcr
jl
hlt
(bad)
enter
or
inc
push
cmp
jge
rcr
mov
nop
push
jg
popa
mov
inc
nop
inc
xchg
mov
pop
inc
aad
sbb
jecxz
out
mov
pushf
push
aaa
out
mov
dec
mov
or
cli
xchg
ds
test
push
test
mov
sar
jo
dec
sub
xchg
or
pop
cli
cmps
retf
and
dec
in
pop
pusha
adc
push
rol
push
mov
xchg
ror
dec
in
xchg
je
aad
lahf
adc
xor
dec
cmp
mov
es
enter
and
xchg
into
mulps
pop
cld
retf
in
inc
int
push
(bad)
and
daa
push
adc
dec
sub
lds
xor
mov
sub
or
imul
dec
pop
push
mov
sbb
xchg
fist
test
and
mov
outs
cld
test
inc
jbe
dec
jl
(bad)
pop
loop
mov
sub
sbb
aas
scas
or
cwde
aam
pop
sar
jae
adc
rcl
ret
mov
cmps
icebp
loope
iret
popf
pop
sub
lea
movs
nop
push
adc
lock
mov
in
mov
mov
pusha
test
icebp
aas
rcl
test
dec
mov
sti
movs
mov
cmp
add
(bad)
mov
push
and
into
sbb
dec
(bad)
lock
cwde
cmc
int
adc
adc
push
dec
pop
out
add
outs
cmc
sub
(bad)
xor
jnp
mov
jo
cmps
jge
scas
xchg
loopne
dec
in
and
xchg
mov
inc
mov
popf
jmp
outs
sub
sub
push
in
push
jne
scas
jl
(bad)
xor
dec
movs
mov
retf
cmps
sar
mov
push
dec
xor
ins
je
cmp
xchg
adc
xchg
push
xchg
jg
sub
push
lods
pop
mov
in
dec
loop
lahf
pop
fist
jmp
imul
mov
gs
ins
stos
lods
lea
std
les
xchg
jge
jo
neg
fbstp
mov
adc
repz
sub
lahf
xor
(bad)
xchg
(bad)
mov
call
sbb
xchg
jno
sub
sahf
pop
lods
mov
push
enter
scas
call
fisub
std
push
pop
ficom
dec
and
lds
inc
mov
pop
push
retf
xchg
add
call
xor
iret
out
xor
xchg
loopne
test
cs
xor
fsubr
push
mov
and
pop
arpl
fdiv
in
xchg
inc
icebp
lods
adc
dec
sbb
js
and
cmc
addr16
ds
not
call
shl
xchg
push
pop
fld
push
sub
sub
lahf
dec
addr16
xchg
hlt
stos
inc
dec
sub
out
pop
add
xchg
mov
jnp
pop
adc
mov
(bad)
ja
sub
sar
ins
jo
(bad)
retf
rcl
push
mov
push
cdq
pop
xchg
loopne
aad
arpl
in
lods
xchg
loopne
jo
push
int
ret
xchg
pop
cmps
pop
out
es
ds
inc
mov
jo
pop
call
adc
dec
sar
mov
and
in
call
sbb
ins
stc
out
mov
out
jl
adc
mov
cmp
xchg
and
shl
out
ja
ret
sub
fpatan
mov
mov
jae
or
fdiv
xchg
out
rol
or
and
inc
mov
xchg
mov
in
aas
mov
pop
cdq
jle
lods
pusha
in
inc
(bad)
xor
xor
int
retf
push
mov
(bad)
pusha
ror
mov
retf
adc
loopne
mov
jge
sub
test
dec
xchg
inc
mov
xor
jns
push
test
mov
lahf
and
imul
outs
lahf
xor
fnstenv
sbb
bound
bound
dec
add
outs
cli
push
out
lods
movs
mov
into
fsubr
fild
fistp
mov
sbb
loope
mov
add
mov
loope
mov
mov
sti
je
out
pop
sbb
leave
xchg
inc
inc
stos
lahf
shr
rol
data16
pop
adc
pop
call
neg
cdq
test
sbb
fld
mov
ja
sbb
ror
xlat
add
xor
or
push
call
jne
or
xor
cli
(bad)
(bad)
cmp
dec
jmp
adc
xor
adc
fist
xor
cmp
out
xor
cwde
iret
and
cwde
push
repnz
fucomi
in
or
std
inc
cs
inc
mov
push
ret
out
pop
dec
lock
push
ins
jmp
push
stc
call
hlt
int
outs
mov
push
ins
sbb
sti
std
dec
sbb
push
jle
jle
xchg
pop
inc
xchg
stos
or
pop
fs
stos
cmp
or
cli
xchg
aaa
add
cli
add
xchg
popf
in
dec
cmp
or
push
das
push
pusha
pop
xor
add
inc
mov
imul
cmps
pop
add
mov
scas
or
fld
jae
mov
dec
pushf
nop
and
lea
adc
scas
add
adc
xor
jmp
xchg
and
adc
gs
(bad)
mov
jmp
sbb
xor
push
xchg
sub
imul
shl
add
sbb
dec
xor
xor
ds
mov
leave
div
push
je
add
dec
jl
inc
movntq
dec
scas
dec
and
pop
xor
mov
mov
rcr
adc
xchg
pop
or
test
adc
jno
fdiv
daa
jp
jl
xchg
push
push
sti
sar
into
cdq
dec
xor
in
cmps
clc
in
rol
test
xchg
shl
loope
retf
(bad)
ja
(bad)
cmps
pop
aam
xlat
fcmovbe
adc
scas
lods
ret
paddb
and
test
adc
cs
pop
in
jo
pop
sub
adc
jle
fdiv
out
adc
pop
add
mov
push
pusha
lods
jne
repz
mov
ret
cmp
jmp
mov
push
sbb
push
dec
movs
out
loope
push
add
mov
cs
cli
inc
sbb
inc
daa
mov
mov
mov
pop
jge
adc
and
cmp
dec
add
mov
add
xor
movs
mov
out
add
shr
mov
(bad)
cmp
inc
mov
test
ds
xor
adc
mov
shr
xor
lahf
sub
xlat
mov
lea
jecxz
sbb
jns
xor
jp
dec
fldcw
retf
or
cs
ins
mov
mov
es
ss
mov
push
mov
xchg
(bad)
bound
xchg
aaa
inc
jnp
xchg
pop
cmc
mov
sbb
push
fsub
pop
into
fxch
mov
aaa
or
adc
push
pusha
jns
into
call
xchg
adc
rcr
xchg
pushf
xchg
pop
popa
hlt
movs
and
jbe
fidiv
or
adc
out
and
aas
movs
hlt
mov
xor
push
call
mov
xchg
and
rcr
sbb
retf
scas
lock
dec
scas
pop
add
push
pop
enter
stc
int
pop
(bad)
das
jg
loope
xor
add
loope
clc
pop
jmp
push
out
and
arpl
hlt
cdq
cwde
ss
std
mov
nop
mov
xor
push
mov
mov
aas
adc
call
rol
cdq
rcr
rcr
lahf
jns
add
call
imul
mov
imul
add
or
xor
sbb
dec
jg
scas
sbb
das
in
scas
add
les
in
jno
sub
je
jecxz
add
pop
mov
or
scas
jecxz
sub
call
push
cdq
dec
fcmovb
iret
sub
mov
inc
push
pop
xchg
gs
call
mov
and
pusha
sub
mov
mov
push
repz
test
push
mov
inc
jmp
lds
cmps
daa
imul
fimul
ins
sahf
call
loopne
ins
push
inc
push
mov
scas
call
ins
dec
leave
mov
aam
out
add
mov
inc
scas
cmc
int3
arpl
cmps
add
sti
aaa
aam
add
add
loop
jp
or
pop
rol
cmp
mov
jbe
into
cld
scas
xchg
hlt
sbb
packsswb
inc
jmp
loop
add
outs
inc
or
pushf
mov
mov
jmp
std
mov
repnz
jnp
push
sub
xchg
jge
adc
fdivp
movs
push
in
arpl
sub
movs
sahf
and
pushf
gs
pop
cs
je
stos
or
cmp
stos
leave
jmp
mul
lods
and
inc
bound
sysenter
lds
lods
mov
fisttp
cmp
ss
in
jnp
add
push
cdq
movs
mov
outs
cmps
popa
mov
or
movs
push
ffree
push
call
cmp
or
adc
rcl
cmp
or
push
mov
push
push
sbb
mov
push
call
aad
mov
out
hlt
xchg
xchg
outs
or
jl
adc
fisubr
and
out
movs
xchg
(bad)
mov
jl
inc
enter
cmps
imul
xor
xchg
pushf
inc
mov
nop
sub
aam
sub
cmp
sbb
loopne
mov
(bad)
mov
dec
mov
rol
icebp
(bad)
mov
pop
sbb
jecxz
outs
cli
paddb
lea
sub
pop
add
mov
fidiv
std
out
xchg
push
jns
mov
test
repz
ins
or
(bad)
xlat
cmps
imul
(bad)
pushf
and
jno
popa
mov
sbb
cmp
nop
xor
jmp
jmp
ins
sbb
xor
cmp
(bad)
icebp
sub
mov
cmps
call
movs
mov
xchg
ins
dec
jp
jmp
xor
xchg
push
les
push
cmp
xor
ds
xchg
fld
add
cmc
and
(bad)
repz
add
mov
add
(bad)
int
jmp
aas
xchg
cmp
jns
clc
mov
ins
push
fistp
pop
test
or
mov
sahf
xchg
mov
cwde
(bad)
aad
ror
cmp
and
xor
cmps
movs
lea
les
test
push
pop
mov
inc
shl
and
jb
std
pusha
or
xor
mov
xlat
dec
inc
jae
mov
std
dec
dec
push
stos
mov
(bad)
sar
sub
addr16
mov
movs
cmps
fmul
push
rcl
outs
call
dec
add
icebp
jbe
inc
dec
adc
lods
adc
out
or
hlt
cmps
xchg
call
inc
add
jmp
ffree
push
js
add
in
movs
loope
pop
xor
iret
pop
push
retf
xchg
or
mov
dec
add
test
xchg
imul
dec
fldcw
mov
rcr
inc
cmp
lock
sub
sub
stos
(bad)
cld
das
ja
das
out
and
clc
xchg
loopne
inc
or
xor
dec
mov
in
sar
add
stc
in
movs
imul
inc
test
or
sbb
stos
sbb
jbe
imul
push
(bad)
es
sbb
sahf
fcom
stos
xchg
pop
xchg
ja
clc
pushf
aas
icebp
mov
sqrtps
or
(bad)
jmp
data16
stos
inc
retf
push
pop
popf
mov
fld1
xchg
mov
stc
fild
adc
xor
enter
hlt
test
push
data16
and
push
cmc
fldcw
and
rol
push
mov
inc
scas
test
xchg
addr16
sbb
bound
mov
retf
movs
arpl
xchg
cmp
out
sahf
jb
inc
(bad)
(bad)
push
push
es
les
or
out
out
(bad)
mov
push
inc
push
adc
loop
fmul
fcmovb
cmp
mov
test
push
xor
mov
out
jbe
(bad)
hlt
pop
mov
fld
dec
in
or
into
(bad)
out
cmp
sbb
sar
int3
idiv
ds
dec
(bad)
pop
xchg
sub
cmp
inc
mov
pop
in
popa
jp
adc
outs
push
jl
cmp
aas
mov
rcl
push
jle
out
jmp
gs
int3
jnp
pop
daa
xor
inc
push
js
jne
jmp
xor
add
movs
fldlg2
xchg
mov
adc
nop
adc
fwait
lds
fidivr
jb
cmp
xor
and
scas
sbb
rcr
cmp
call
dec
xchg
add
gs
and
clc
ja
js
ret
xchg
or
jo
pop
mov
adc
mov
jge
and
add
mov
xchg
test
sub
ins
cdq
cmp
push
popf
push
test
push
call
and
jp
sub
xor
add
sub
dec
loop
pop
pop
cmp
add
xchg
loope
dec
fnstsw
xor
test
add
add
inc
(bad)
shr
int
pop
add
and
pop
mov
jbe
xchg
mov
cmc
fisttp
mov
inc
ret
jle
pop
test
cwde
(bad)
outs
ins
mov
sbb
sbb
sub
mov
add
out
std
jns
addr16
in
neg
test
cld
inc
sbb
cli
or
sbb
(bad)
out
mov
adc
scas
loop
rol
loopne
fist
(bad)
push
test
and
xor
sub
es
dec
popf
loop
mov
cld
push
rcr
inc
(bad)
lods
jae
in
icebp
dec
(bad)
push
shr
or
xchg
mov
loop
movs
in
push
les
dec
pop
add
imul
or
ds
bound
js
cmp
adc
sbb
pushf
mov
clc
pop
sub
add
mov
push
movs
mov
std
sub
enter
imul
inc
add
and
pop
scas
out
xlat
cmp
or
in
or
popa
push
push
add
add
hlt
adc
clc
add
outs
stos
leave
ja
adc
add
lock
dec
(bad)
pop
pop
gs
gs
inc
bound
call
xchg
(bad)
mov
out
push
mov
(bad)
jbe
aam
and
push
xchg
movs
jp
jge
fwait
dec
mov
fs
jge
pop
cmp
or
xor
jge
sub
mov
out
sbb
sbb
and
div
jne
add
dec
lods
cmp
(bad)
xor
xor
pop
push
shr
mov
enter
popa
je
inc
int3
mov
xchg
call
mov
inc
push
cdq
shl
aad
test
enter
xor
ja
mov
jp
mov
and
cwde
jo
in
(bad)
fld
pop
push
xchg
or
mov
inc
cdq
in
rol
out
dec
jl
aad
adc
dec
xchg
pushf
test
jb
xor
sub
push
pushf
and
pop
(bad)
fiadd
(bad)
inc
adc
fcom
xchg
lea
ret
jnp
jne
sbb
gs
add
sti
clc
dec
mov
sti
mov
cmp
les
test
ins
rcr
mov
push
bound
cwde
pop
mov
out
mov
sbb
es
xor
nop
xor
jb
sbb
push
cmp
mov
push
aas
adc
xor
pop
pop
out
dec
test
and
imul
pop
add
push
mov
xchg
cmp
sar
ror
mov
mov
test
jnp
cld
dec
pop
cdq
outs
in
aam
addr16
ja
stc
xchg
jmp
shr
cli
ja
mov
lods
addr16
jle
mov
iret
push
icebp
sub
mov
dec
shl
ins
xchg
add
adc
fs
xchg
xor
sbb
mov
not
int
cmc
movs
push
mov
fdiv
stc
aas
nop
cld
adc
adc
iret
pushf
mov
mov
mov
outs
iret
mov
and
jmp
fs
mov
lea
sub
ret
jle
(bad)
ret
(bad)
or
jne
stos
add
pop
fucomp
mov
add
mov
mov
xchg
push
(bad)
sbb
jecxz
arpl
js
mov
(bad)
(bad)
cmp
in
fnstcw
dec
repz
sub
les
out
sbb
retf
cmp
mov
xchg
adc
or
bound
mov
push
mov
mov
xor
cli
pop
and
mov
bound
aad
pop
neg
daa
(bad)
push
sbb
test
daa
push
(bad)
aaa
mov
shl
pop
dec
fiadd
stos
fs
jb
push
jbe
push
push
jne
in
push
mov
xchg
pop
in
pop
jg
(bad)
jo
push
mov
fisubr
fwait
or
iret
or
fs
fistp
mov
(bad)
addr16
jae
rcl
dec
scas
pop
fsubr
adc
cmp
dec
and
mov
adc
sub
out
lds
ret
pop
mov
mov
ror
jl
jmp
or
cs
out
cdq
stos
cmp
lods
push
xor
dec
daa
xor
cmp
int3
movs
mov
adc
into
pop
inc
fcom
dec
ss
(bad)
cmps
cmps
aad
ret
ret
xchg
mov
imul
je
mov
pop
fiadd
xlat
in
push
int3
mov
lds
xor
les
and
aam
mov
xchg
pop
arpl
push
jb
inc
enter
jmp
aad
push
rcl
adc
dec
outs
add
and
push
sbb
ins
cmp
mov
add
add
push
arpl
popa
in
inc
mov
fimul
sub
movs
mov
into
nop
inc
jmp
hlt
loope
dec
fdivr
sbb
jle
sub
add
sub
sbb
sbb
(bad)
mov
cmp
call
clc
jno
jne
mov
mov
les
xchg
jmp
xor
das
cmp
and
repnz
aaa
outs
and
in
sbb
retf
push
mov
outs
sub
pop
mov
enter
jg
push
xlat
jae
or
retf
and
retf
fldcw
dec
pop
pop
add
sti
and
push
gs
das
es
adc
xor
arpl
les
scas
aam
aas
push
nop
xchg
add
xchg
add
repnz
xor
mov
jmp
ja
fldcw
pusha
call
lock
(bad)
fs
xchg
(bad)
ins
shl
pusha
lods
aad
and
xchg
shl
sub
leave
sbb
dec
loope
sbb
data16
mov
pop
bnd
movs
and
repz
add
mov
and
int3
push
stc
xchg
stos
pop
data16
push
popf
clc
add
push
sub
cmp
int
arpl
mov
push
mov
fadd
inc
aad
mov
xor
push
add
jp
push
outs
and
popa
mov
pop
daa
dec
dec
mov
push
adc
mov
jmp
mov
ins
sbb
cmp
ret
(bad)
and
or
xor
sahf
inc
mov
adc
or
jge
mov
inc
sub
call
xchg
ja
jg
xor
push
rcl
mov
mov
popf
jmp
pop
jge
mov
iret
xor
in
mov
jle
mov
stc
xchg
xor
xchg
(bad)
push
leave
xchg
cmp
xor
jbe
jp
mov
sbb
push
jae
aad
dec
or
adc
lock
fwait
or
hlt
adc
jecxz
fstp
or
push
mov
movs
jo
call
jnp
push
fsubp
retf
pop
jne
push
in
out
in
xchg
lahf
fsubr
add
dec
int3
shr
push
dec
mov
les
movs
inc
clc
mov
sub
push
inc
and
jne
fcom
pushf
aam
pop
mov
ss
(bad)
mov
jae
sbb
imul
imul
sub
dec
arpl
inc
mov
lods
sub
add
mov
mov
mov
movs
add
jbe
popf
ja
jecxz
rcr
shl
or
ss
call
add
lods
sahf
jno
fild
jl
inc
jmp
enter
ins
leave
jmp
stos
arpl
retf
mov
outs
jnp
sub
ret
popf
das
xchg
fwait
mov
adc
sti
mov
and
ss
lahf
and
hlt
mov
or
ss
hlt
pop
clc
clc
xchg
mov
ins
xchg
ficomp
xchg
(bad)
mov
(bad)
leave
mov
xchg
cmp
daa
scas
(bad)
std
in
and
popf
pop
gs
pusha
iret
aaa
mov
inc
imul
fcmovu
sbb
xor
movs
ds
div
aam
cld
cmps
lds
mov
stc
js
sub
loope
adc
sbb
mov
sbb
mov
push
pop
fidiv
fisttp
mov
sar
repz
es
in
xor
loope
xor
pushf
movs
call
mov
jle
into
mov
xor
fidiv
nop
inc
push
or
mov
aad
enter
lock
in
js
out
cdq
aam
movs
in
push
mov
inc
xchg
cmp
inc
mov
or
or
dec
les
jecxz
cmp
pop
mov
(bad)
and
sub
jmp
enter
int3
outs
sti
movs
lahf
pop
fs
es
jle
stos
jae
cs
mov
mov
xor
sub
rcl
jno
fmul
pushf
jl
shl
outs
xor
outs
dec
out
pop
jb
pop
sbb
xchg
pop
sbb
inc
xor
test
add
loop
cmps
and
xchg
mov
iret
sar
sbb
rol
cmps
mov
sub
mov
popf
mov
leave
sbb
and
pop
lahf
push
out
cs
jb
mov
pop
enter
inc
jmp
scas
scas
scas
sub
sbb
popa
sbb
adc
sub
lds
fst
sahf
push
jns
js
es
push
push
mov
xlat
enter
push
cmp
(bad)
xor
push
xchg
mov
or
or
sub
mov
sbb
in
and
dec
mul
xchg
sbb
push
jb
mov
xchg
ins
push
push
dec
push
push
pop
(bad)
jae
popa
mov
jnp
outs
jb
stos
cwde
sub
repz
fistp
outs
loope
fsubr
dec
into
cmp
and
sbb
aas
push
not
mov
add
xchg
sub
leave
mov
pusha
cmc
and
mov
mov
not
enter
push
aaa
mov
pop
mov
sub
mov
mov
mov
add
add
pop
daa
pushf
push
lds
shl
loopne
xor
retf
jecxz
adc
adc
mov
nop
push
jmp
popa
outs
inc
push
out
xor
cwde
dec
push
aam
aas
mov
fs
into
add
sbb
pop
in
shl
sar
stc
or
enter
(bad)
jmp
fadd
sbb
push
pop
cmc
popf
scas
lahf
enter
or
aas
shl
xchg
sub
push
add
or
leave
call
mov
mov
lods
(bad)
inc
adc
pop
mov
je
push
(bad)
pop
test
or
mov
xchg
adc
sbb
aad
jne
pusha
(bad)
mov
dec
fs
stos
rol
pop
gs
lods
pop
pop
fst
retf
and
cmp
fstp
mov
cs
hlt
adc
bound
adc
call
xchg
push
fwait
ret
jbe
enter
push
hlt
cdq
call
femms
mov
adc
in
mov
leave
push
add
mov
sub
sub
xchg
outs
jo
cmp
jae
inc
xchg
(bad)
rol
clc
js
add
adc
push
leave
dec
clc
sahf
adc
clc
movs
pop
ret
cmp
adc
sar
(bad)
adc
mov
fwait
jae
lds
js
scas
mov
push
pop
enter
xchg
sti
loopne
data16
aas
mov
or
mov
fs
ins
cmp
push
or
(bad)
pop
stos
and
lea
ds
cmp
xchg
neg
(bad)
fstp
out
(bad)
ins
outs
ret
call
jbe
mov
lock
imul
into
movs
xchg
inc
mov
je
add
adc
ja
jo
data16
test
stos
daa
lea
push
mov
cmp
adc
nop
add
push
call
xchg
nop
or
pop
and
shr
lock
cld
pop
scas
scas
xor
jle
fst
adc
jp
jp
ret
cmps
jge
push
inc
pop
sub
clc
xchg
ss
inc
and
ret
push
inc
aaa
popf
lods
rol
leave
sahf
pop
push
inc
sub
fcmovnbe
jo
adc
mov
cli
push
xchg
add
arpl
cmp
mov
test
int
xor
fild
xchg
inc
adc
add
jmp
jnp
in
clc
call
dec
mov
data16
jmp
lea
int
fisttp
hlt
push
dec
cdq
and
ret
cmps
icebp
sti
pop
mov
xor
(bad)
in
daa
cdq
pop
sar
xor
mov
sub
adc
pushf
adc
inc
movs
inc
mov
push
adc
enter
retf
mov
in
outs
jae
pop
and
movs
iret
sub
(bad)
sub
jle
cwde
(bad)
setp
out
mov
mov
lods
adc
dec
adc
mov
rcr
addr16
jmp
and
std
push
retf
fsub
mov
mov
fldcw
ja
jno
daa
sub
xor
stos
pop
loopne
lods
cdq
(bad)
add
push
mov
xchg
jp
jl
or
sub
cmp
dec
push
jl
into
or
aam
mov
int
mov
pop
fstp
je
mov
out
div
inc
dec
inc
sub
xchg
or
jl
inc
adc
sub
rcr
sub
ss
add
dec
jmp
adc
(bad)
es
mov
and
scas
mov
add
inc
add
out
bound
sub
sub
rcr
sti
mov
pop
fsubr
xor
mov
enter
inc
cmp
fist
aam
daa
(bad)
sahf
jle
xchg
retf
xchg
pushf
add
add
rcr
jmp
or
cmps
cs
mov
ficom
pop
mov
imul
aam
test
hlt
gs
fistp
or
pop
(bad)
mov
jns
jmp
hlt
mov
xchg
inc
out
or
in
in
idiv
fmul
xor
and
mov
xchg
call
sub
cwde
popf
xchg
js
xchg
dec
sub
sbb
hlt
inc
mov
ins
enter
shl
ds
sub
(bad)
nop
mov
inc
lods
pushf
addr16
std
inc
push
cmps
test
jno
out
mov
jl
push
dec
call
stc
mov
cmp
sub
(bad)
mov
adc
in
cmp
pusha
xchg
ds
mov
in
dec
mov
ds
lods
retf
imul
not
js
call
xor
imul
adc
mov
(bad)
and
inc
mov
(bad)
push
mov
sbb
jno
bound
sub
and
je
add
push
stc
dec
sti
(bad)
daa
push
dec
in
or
pop
xchg
in
outs
imul
cmp
mov
and
cld
sbb
adc
and
gs
mov
and
adc
sbb
push
stc
lock
les
pop
iret
arpl
inc
in
rcr
mov
xor
mov
pop
stos
pop
(bad)
iret
inc
inc
outs
(bad)
cs
retf
loop
mov
sbb
mov
xchg
inc
es
shl
movs
xchg
(bad)
jl
xchg
jnp
pop
jmp
sbb
test
sbb
test
cmp
gs
(bad)
std
add
push
loop
into
adc
mov
dec
mov
xchg
icebp
mov
cld
dec
jmp
xchg
xchg
and
mov
addr16
adc
retf
sbb
stc
sar
and
sar
in
mov
gs
pop
leave
xlat
fcmovne
adc
or
and
add
fs
ror
dec
test
pop
pop
ret
pop
jecxz
call
jmp
pop
xlat
inc
and
retf
jns
dec
gs
mov
push
or
add
aaa
add
sbb
mov
iret
ret
cli
stos
mov
es
jno
sahf
inc
sbb
xchg
jmp
pop
pop
rol
addr16
mov
outs
(bad)
fnstsw
dec
or
pusha
sub
sbb
mov
ficomp
clc
scas
pop
mov
inc
outs
clc
dec
push
xchg
or
sti
mov
jl
mov
nop
inc
mov
lea
hlt
adc
lock
fs
arpl
jg
fild
and
aad
and
jnp
ins
sbb
movs
or
pop
into
mov
mov
cmp
add
mov
cmps
jo
sbb
mov
adc
call
jno
jle
pop
repnz
xor
vpmulhuw
in
mov
sti
out
xchg
neg
mov
scas
vpshlb
jb
push
rcl
sub
push
(bad)
sub
and
fwait
inc
mov
outs
ror
xchg
test
retf
jae
imul
inc
mov
inc
push
scas
xchg
(bad)
xchg
cmp
ja
icebp
mov
shr
mov
and
dec
es
cwde
push
arpl
nop
push
enter
test
cmc
test
imul
or
jbe
pop
ret
mov
repz
sub
sub
lods
jno
or
inc
(bad)
out
test
mov
mov
arpl
sbb
pushf
(bad)
test
aaa
cdq
lock
add
mov
int3
sbb
in
mov
int
stc
add
dec
or
fsub
jmp
aas
xchg
retf
fidiv
lahf
cmps
dec
mov
xor
clc
fsub
push
in
jmp
retf
not
xchg
out
jnp
in
test
not
add
mov
cmps
out
adc
ror
push
mov
dec
dec
push
ret
inc
mov
scas
out
mov
adc
aad
lds
movs
into
popf
mov
rcl
inc
mov
dec
shl
inc
pop
cmp
sbb
dec
push
lea
cmp
cmc
(bad)
std
inc
mov
pop
and
sub
and
ins
lock
jmp
or
test
rcr
popa
jae
test
pop
push
cmp
sahf
xchg
add
push
sbb
jl
loopne
in
jecxz
dec
mov
fdiv
shr
push
sbb
sahf
in
pushf
add
shr
stc
neg
mov
imul
test
(bad)
aam
(bad)
int
sbb
clc
out
jmp
mov
and
cld
(bad)
push
sbb
fwait
cmps
pop
(bad)
(bad)
cdq
js
int
or
inc
and
jg
pop
loope
add
int3
jmp
aas
mov
popa
xor
cmp
fprem1
loope
out
sub
fwait
mov
popa
cmp
jns
stos
js
arpl
aas
(bad)
mov
inc
je
gs
(bad)
fbld
sbb
xchg
(bad)
fidivr
rcr
out
xor
cmp
std
mov
repnz
cmc
mov
pop
sahf
adc
out
imul
mov
inc
mov
sbb
sar
lods
into
popa
adc
push
push
mov
mov
dec
mov
test
jmp
aas
jle
sar
inc
fs
xchg
xchg
aaa
std
add
push
mov
and
add
leave
mov
inc
imul
sbb
cmp
pop
jg
pop
xor
jle
xor
dec
mov
das
das
fisubr
ja
xor
js
(bad)
rcl
std
sbb
sub
neg
test
mov
sbb
aaa
push
inc
cli
cmps
gs
push
sahf
pop
jge
jbe
lds
inc
fldenv
and
inc
sbb
ficomp
imul
fcmovbe
nop
cmps
aas
jmp
sbb
and
mov
retf
mov
mov
xchg
push
push
jnp
mov
loope
sbb
(bad)
lea
mov
push
dec
mov
and
cmc
adc
movs
shl
je
lds
(bad)
stos
bound
dec
dec
xor
lods
mov
ror
in
push
aam
fwait
xchg
retf
in
stos
adc
jg
repz
pop
shl
xlat
adc
sub
aam
lds
push
stc
xchg
push
test
icebp
pop
adc
pusha
in
bound
icebp
loopne
lods
xor
test
je
push
xchg
add
in
fld
lds
mov
ror
ins
and
out
out
dec
stc
dec
or
push
inc
inc
xor
ret
mov
xchg
int
pop
sbb
pop
repnz
push
cmp
xchg
sub
imul
mov
jnp
sahf
push
mov
adc
test
cmp
fisttp
sub
sub
dec
lods
lea
scas
mov
pop
and
shl
nop
sub
or
nop
in
pop
sbb
icebp
and
mov
scas
inc
int3
jo
jb
add
test
dec
inc
fs
dec
movs
push
jle
jge
dec
(bad)
push
sub
out
inc
cmc
xchg
nop
in
inc
shl
sub
call
pop
movs
push
cmp
out
mov
or
mov
cmp
addr16
and
sub
and
(bad)
push
cmps
arpl
push
and
or
rcl
mov
cli
repnz
in
inc
in
cdq
xor
call
push
jge
outs
fnsave
push
test
repnz
imul
out
aaa
jns
scas
ficomp
stc
mov
test
stos
mov
daa
add
pop
ins
retf
in
outs
xchg
jmp
int
je
cs
xlat
push
add
add
dec
cmps
or
ins
and
in
cwde
lea
ja
push
jmp
jb
add
ret
cmps
sbb
es
retf
std
push
and
dec
jle
inc
test
rcr
out
scas
or
rcl
and
fwait
mov
jns
xor
push
push
pusha
jno
out
ja
cmps
mov
cmp
aaa
int3
add
and
push
sbb
js
mov
xor
mov
sub
and
in
int3
aas
pushf
cld
cmp
xchg
addr16
jp
mov
(bad)
fnstcw
adc
mov
and
test
jg
cmc
or
pop
pop
cwde
nop
jns
cmp
or
sbb
xchg
push
xcrypt-ofb
cmps
jmp
int3
xchg
retf
cmps
dec
rcl
call
hlt
or
push
pop
xchg
out
dec
fstp
pop
js
pop
pop
cwde
lock
lahf
and
out
pushf
cmps
pop
retf
ins
jl
push
sbb
sbb
test
in
imul
fwait
int
or
rol
retf
adc
adc
mov
mov
fsubp
mov
jmp
and
cmp
addr16
lahf
out
(bad)
je
mov
loop
sub
cmp
hlt
sbb
or
arpl
sbb
sbb
cmps
addr16
xchg
cs
dec
cmps
and
jae
in
clc
js
in
mov
mov
push
mov
icebp
add
cmps
push
xor
mov
xor
jge
cld
out
dec
in
ss
sti
push
sar
imul
pop
mov
(bad)
jl
cwde
sar
or
out
jg
mov
push
push
jno
and
dec
movs
jle
arpl
inc
adc
movs
push
(bad)
out
mov
mov
aas
pop
mov
mov
scas
mov
and
adc
outs
out
cld
test
sub
jp
mov
adc
stos
jmp
cmc
clc
jmp
repnz
rcr
sbb
jmp
imul
out
sbb
mov
lods
xchg
xchg
sub
out
mov
repz
or
jp
pop
in
jo
js
clc
mov
rcl
in
fcom
add
mov
xchg
add
fnstenv
das
test
fist
arpl
mov
icebp
loop
jae
sub
mov
or
sub
dec
xlat
pop
ja
adc
enter
shr
mov
cmp
sti
scas
dec
push
scas
jecxz
retf
fmul
add
cs
pop
cmp
shl
clc
pop
mov
nop
add
fidivr
xchg
lds
cmps
aad
sbb
adc
jo
add
mov
mov
jnp
xchg
sbb
sub
pusha
sub
adc
or
clc
test
hlt
jp
and
pop
jge
push
jge
jecxz
mov
ins
shr
faddp
inc
stos
fsubr
enter
xchg
cdq
adc
sbb
adc
sub
push
fidiv
ds
cmp
movs
mov
lahf
popa
cmp
inc
ret
lock
cmc
dec
cmp
call
scas
aad
xor
dec
mov
xchg
xchg
mov
leave
sbb
in
or
call
push
les
sbb
sbb
sub
sbb
cmps
sbb
test
jmp
inc
into
add
or
fstcw
sahf
sub
and
add
inc
aas
out
xchg
adc
pop
adc
out
xor
shr
add
mov
jae
(bad)
jge
sahf
in
and
xchg
pop
test
cmp
xchg
sti
sub
push
data16
mov
sbb
repnz
test
mov
fldenv
imul
dec
mov
pop
popa
xchg
mov
js
push
sbb
in
sbb
repz
das
test
lahf
into
fcomi
xchg
imul
mov
mov
and
cmps
std
dec
(bad)
mov
in
cmp
enter
in
cmp
aaa
or
mov
loop
jp
jle
shl
popf
fistp
jne
cmp
jae
scas
call
xchg
jbe
pop
adc
pop
(bad)
ss
dec
mov
mov
mov
out
les
test
jns
std
and
rcl
inc
adc
loop
jp
mov
and
pop
mov
in
cld
inc
jg
push
pop
jns
xor
xchg
xor
ins
imul
ret
(bad)
int
mov
cmp
int3
mov
in
push
dec
mov
nop
cmp
pop
xor
hlt
push
inc
arpl
cmp
jge
inc
inc
mov
pop
fsub
stos
cli
xchg
xlat
mov
or
mov
sub
cmp
rcr
inc
inc
adc
adc
xor
mov
xchg
sub
inc
cmp
xor
fcomp
jae
aad
sbb
ins
dec
inc
je
and
inc
ret
loope
clc
sub
inc
(bad)
xlat
cmp
jmp
adc
ja
adc
push
ja
dec
call
addr16
leave
nop
jae
mov
adc
js
ret
xchg
push
push
cmp
adc
aad
mov
jb
inc
push
dec
les
and
dec
jbe
ret
fwait
add
and
mov
scas
jns
push
lgs
cmp
(bad)
not
adc
mov
test
call
sub
jecxz
lock
pusha
inc
(bad)
xor
and
retf
sbb
sub
and
mov
pop
aad
outs
add
add
stc
jge
cmp
dec
clc
lahf
xlat
mov
sbb
lahf
cmps
test
pop
cmc
test
xchg
repz
xchg
mov
push
mov
fimul
repnz
cmp
ja
and
jmp
sbb
adc
ror
neg
jnp
jne
aaa
push
xchg
je
and
sbb
adc
push
loope
jo
inc
mov
shr
jmp
out
popa
xor
pop
cmp
or
add
mov
pop
inc
adc
add
push
xchg
push
popf
(bad)
xchg
fdivr
in
pop
int3
cmc
mov
xor
xchg
xchg
fcom
jno
jne
rcr
push
lods
mov
das
mov
aad
or
cwde
cmp
lar
test
add
aad
inc
ret
clc
mov
jnp
push
dec
adc
mov
jg
push
es
jp
fs
mov
push
jl
les
(bad)
rol
mov
sub
mov
push
adc
(bad)
fld
js
repnz
xor
shl
repnz
adc
fwait
xchg
adc
mov
dec
and
mov
fs
xchg
frstor
xlat
adc
pop
fcom
ret
xchg
and
adc
mov
lea
sbb
push
dec
push
adc
out
in
loopne
jmp
test
and
retf
inc
xor
icebp
or
pushf
jmp
inc
pop
and
push
jecxz
in
cli
dec
ficom
sbb
lahf
mov
imul
adc
(bad)
stos
movs
fld
add
mov
sbb
fist
push
cdq
push
jbe
stos
push
in
jg
and
addr16
cdq
inc
test
xlat
dec
sbb
xchg
jecxz
sbb
arpl
retf
dec
xor
fwait
sub
sub
in
div
cs
xchg
inc
test
inc
pop
add
cmps
enter
push
jge
mov
pop
fidivr
sar
xchg
push
sub
lods
pop
cmps
rcl
cmp
dec
daa
retf
hlt
pop
mov
ret
mov
or
mov
jns
mov
mov
je
jmp
xchg
pushf
mov
push
loop
std
cli
pop
xor
mov
es
pushf
out
sub
add
rcl
fbstp
les
pop
data16
jl
ficom
je
mov
mov
mov
or
and
mov
cmp
fmul
stos
in
js
pushf
fisubr
fstp
xchg
stc
pop
sbb
imul
or
or
mov
jp
fdiv
out
sbb
sbb
je
pop
in
adc
pop
xor
pushf
lds
add
std
imul
and
inc
(bad)
mov
add
leave
xlat
and
jecxz
jne
aaa
out
push
sbb
sbb
mov
push
fcomp
or
and
lds
push
pop
jle
fstp
test
aam
sub
xor
sub
es
push
std
in
pop
add
test
out
mov
mov
jmp
clc
pop
mov
cs
stc
bound
sahf
xchg
or
xor
push
xchg
fidiv
mov
in
cmc
aam
jae
mov
cmp
and
(bad)
pop
addr16
js
pop
mov
loope
outs
pop
out
sub
call
dec
sahf
add
mov
rcl
(bad)
fst
inc
xchg
mov
retf
iret
movs
fistp
test
and
jmp
push
cld
and
stc
or
imul
aaa
outs
scas
inc
iret
cli
xor
inc
and
ja
xor
test
shl
or
and
cwde
push
and
fwait
cmp
push
mov
mov
xor
ins
sub
dec
loope
sub
int
or
or
call
xchg
jge
sub
test
imul
aam
mov
xchg
(bad)
mov
inc
in
mov
outs
push
inc
ss
or
fiadd
and
xchg
data16
jne
outs
dec
sahf
(bad)
push
lods
out
cmp
sbb
stos
push
push
cdq
iret
outs
fdiv
sub
pop
xlat
std
aas
test
fld
mov
or
mov
pusha
dec
out
sar
cmp
dec
jnp
movs
pop
js
jno
and
sbb
xchg
ins
ror
dec
(bad)
pop
lods
mov
cmp
test
xlat
fs
in
dec
add
test
imul
add
lahf
xor
data16
add
add
add
jp
or
sahf
stc
aam
cld
daa
in
aad
dec
pop
test
out
loop
jb
lock
or
cmp
pop
scas
addr16
sbb
ror
cmp
(bad)
(bad)
pop
jne
fxch
sub
dec
fcom
aas
repnz
mov
ret
jae
or
cdq
int
popa
push
mov
stos
inc
sbb
cmp
xor
push
std
push
retf
push
bound
pop
mov
adc
cld
jmp
jb
push
or
add
jns
in
xchg
repnz
cmp
push
xlat
fcmovb
xor
iret
neg
mov
mov
sti
neg
dec
out
pushf
jmp
inc
xor
jge
retf
leave
cmc
pop
in
mov
sbb
mov
mov
int
mov
mov
js
xchg
jg
loope
enter
pop
scas
cmp
mov
jne
movntps
mov
addr16
ins
xchg
vshufps
out
sbb
leave
lahf
sbb
ins
jp
adc
fild
push
sar
lock
ret
pop
ja
fptan
jmp
pop
repz
dec
inc
stc
call
das
push
mov
cmps
inc
call
enter
pop
pop
jnp
cmp
mov
leave
movs
xsaves
movs
cmp
cmp
mov
mov
mov
mov
sahf
movs
stc
out
test
mov
inc
loop
stc
sahf
daa
and
loope
push
mov
nop
(bad)
push
jl
xor
rcr
mov
adc
push
jl
push
jo
inc
jg
cmps
test
or
in
out
aad
out
cmp
xchg
movs
and
(bad)
adc
arpl
call
cs
sbb
cmc
lea
shl
std
add
sbb
mov
out
fwait
mov
jmp
mov
pop
jae
in
push
xchg
iret
xchg
mov
mov
xor
imul
dec
add
jecxz
xchg
icebp
mov
xor
les
or
cmp
cdq
(bad)
push
sti
jno
xor
push
in
pop
push
cld
sub
retf
and
mov
and
xchg
adc
push
cmc
inc
push
es
cmps
add
mov
sti
out
cmp
mov
(bad)
sti
and
(bad)
(bad)
lods
(bad)
sbb
push
imul
mov
jb
jns
ret
sbb
cmp
retf
dec
in
add
loop
jnp
pop
and
xlat
cmp
inc
adc
cmps
lods
jb
pop
mov
sbb
je
cmc
fnstsw
outs
fnstenv
ret
out
xchg
inc
pop
cmps
and
int
inc
fistp
in
repz
mov
mov
cmps
jl
adc
sub
in
xor
dec
fs
dec
call
fwait
dec
pop
and
stc
ret
jb
sti
cmp
mov
or
cmc
(bad)
dec
cmp
xor
jge
jae
outs
push
jle
(bad)
dec
push
gs
jb
xor
mov
jmp
pop
mov
test
repz
inc
xlat
mov
call
std
sub
call
fdivr
addr16
or
movq
jae
pop
pop
movs
mov
out
xlat
mov
sar
pop
mov
xor
in
jns
bound
mov
or
retf
mul
xchg
idiv
push
mov
mov
retf
enter
rcl
mov
mov
mov
mov
lds
leave
std
adc
adc
cmc
iret
push
inc
bnd
mov
mov
pushf
jae
(bad)
popf
push
or
push
cmp
jg
test
(bad)
in
stc
test
and
dec
cli
(bad)
rcl
ja
ins
and
xchg
push
loope
je
and
aaa
out
jbe
jl
adc
xor
pop
xor
sub
lds
cli
inc
test
nop
jmp
or
test
dec
mov
test
into
xchg
jmp
push
jge
pop
cld
movs
jnp
or
out
and
ficomp
xor
push
mov
xor
sbb
mov
fcomi
stc
sti
push
rol
xor
jecxz
stos
mul
xor
cmc
push
mov
inc
(bad)
xchg
jge
call
(bad)
cmp
adc
jo
adc
pushf
inc
(bad)
pop
ins
in
cli
int3
pop
xchg
fdiv
js
mov
jle
outs
pop
test
push
and
fdiv
mov
into
movsx
xor
mul
dec
pop
jmp
push
jns
dec
call
ficom
pop
push
lock
push
repnz
movs
(bad)
cmp
fnstsw
shr
mov
in
scas
or
pop
cmp
xchg
les
mov
mov
xor
pop
rcr
aas
add
cmp
ret
cli
pop
js
pop
jmp
sahf
adc
out
fdivr
inc
lods
test
(bad)
push
loope
push
mov
jl
iret
call
mov
ret
stc
adc
push
push
dec
retf
adc
mov
rcr
sub
(bad)
sbb
aam
lock
pop
movs
shl
mov
or
in
addr16
xchg
lods
xchg
jle
or
cmovp
jl
add
xor
pop
rol
stc
push
or
and
sub
sub
repz
call
movs
cmp
sub
xchg
jno
cmp
xor
or
pop
fmul
imul
retf
clc
sbb
sub
aad
sbb
aas
in
mov
stos
add
xchg
gs
xchg
lahf
pop
mov
xchg
add
pop
lock
shr
mov
test
push
add
mov
out
mov
into
pop
imul
jbe
push
cmps
xor
ins
add
inc
fs
mov
mov
mov
(bad)
pop
pop
inc
ret
push
rcl
xor
sahf
rol
popa
cmps
aad
mov
mov
imul
push
add
adc
lea
sbb
adc
or
dec
mov
int
ins
add
cmc
adc
fistp
scas
aaa
out
ret
and
jbe
pop
aam
pop
cmp
in
shl
add
daa
retf
push
movs
scas
pop
mul
test
call
sbb
dec
icebp
gs
xchg
adc
jmp
in
(bad)
add
cld
adc
sbb
mov
inc
jno
call
fisttp
inc
jmp
daa
shl
scas
add
repnz
push
int
and
xchg
jno
cli
fmul
fadd
leave
in
dec
outs
jne
cli
inc
das
inc
std
(bad)
adc
sbb
add
dec
jno
dec
imul
xor
cmp
jne
mov
jo
mov
int3
mov
xchg
daa
mov
sbb
or
repnz
mulsd
stc
mov
pop
aam
cmps
cmps
jno
lods
dec
cmc
adc
xchg
cmp
push
popa
data16
scas
push
mov
popa
or
or
sub
xchg
sbb
cmc
arpl
sub
cmp
or
pop
inc
sbb
pusha
das
and
leave
jle
mov
mov
xor
in
repz
adc
sbb
jo
push
inc
or
in
es
shr
mov
push
jns
test
mul
shr
jne
mov
cmp
jae
iret
add
lds
mov
dec
lods
adc
popa
cmp
fbstp
int3
add
dec
sar
mov
add
mov
test
pop
clc
mov
cmp
add
lock
test
mov
iret
add
pop
push
xchg
fbstp
mov
dec
int3
or
xor
pop
scas
stc
data16
xor
or
lds
iret
test
mov
adc
iret
es
jmp
sti
jp
jle
mov
(bad)
retf
fwait
imul
fwait
cmp
sbb
mul
lea
dec
ds
aad
out
and
mov
jbe
jns
mov
jnp
or
out
cmps
xchg
mov
pop
loope
sti
aam
aad
mov
add
cdq
sbb
and
jge
inc
repz
mov
out
add
jno
add
cmp
or
add
ss
and
dec
(bad)
xor
adc
sub
ja
retf
sahf
jecxz
fimul
dec
cmp
sub
inc
add
ds
jnp
sti
out
retf
test
fld
xor
loopne
fistp
cmp
xchg
cmp
mov
in
aaa
jmp
aaa
hlt
mov
xor
stos
imul
(bad)
arpl
ror
adc
out
lods
inc
push
inc
push
jmp
dec
push
out
fwait
and
in
mov
rcr
and
sbb
shl
push
in
push
or
fdivr
fadd
into
fsubr
je
(bad)
bound
adc
and
jg
push
mov
add
mov
cmp
mov
loope
push
xchg
out
pop
aam
mov
int3
pop
jg
fwait
lds
jns
mov
ret
mov
out
retf
cmc
mul
adc
popf
stos
inc
fucom
movs
mov
shl
scas
mov
pop
mov
test
jo
push
mov
ror
pusha
or
jnp
xor
mov
sbb
div
mov
or
jmp
mov
mov
aaa
push
leave
xchg
jp
mov
xchg
push
aas
es
cmp
fisub
adc
nop
gs
fcmovnb
ins
call
ja
cmps
cmp
sbb
jbe
jp
mov
hlt
dec
adc
cmp
js
xchg
mov
arpl
xor
or
fldcw
(bad)
cmp
jnp
inc
fld
adc
or
push
adc
repnz
or
lods
inc
ds
sbb
ret
pop
aaa
je
and
ss
mov
add
cmp
mov
inc
lods
out
aam
xlat
add
xor
xlat
(bad)
xor
sahf
fidivr
cli
(bad)
js
cdq
mov
sbb
xor
(bad)
ins
jns
cmc
xchg
loopne
push
jecxz
sub
jb
add
push
std
in
jg
(bad)
aaa
rcl
lea
and
in
dec
repz
pop
jl
jle
pop
xchg
das
clc
std
jns
ror
test
aam
bound
jo
push
dec
or
xor
jnp
out
cmp
ret
sbb
shl
data16
jl
scas
mov
jae
shl
ins
xchg
inc
das
out
push
std
cld
and
fistp
and
ss
int3
and
and
mov
cmp
and
movs
dec
das
xchg
(bad)
in
icebp
mov
call
and
lods
repz
js
mov
push
push
in
ds
dec
mov
push
cmp
pushf
test
add
fild
mov
loop
mov
inc
jmp
fs
mov
adc
sub
cmp
(bad)
sub
push
mov
sub
add
mov
cmp
fs
nop
push
push
mov
pop
stos
jg
rol
sub
add
dec
adc
mov
sub
jmp
movs
test
jmp
mov
stos
aas
inc
mov
icebp
sbb
bound
push
jnp
dec
push
mov
movs
inc
std
pushf
cmp
xchg
mov
add
dec
outs
jge
xchg
into
pop
arpl
loopne
clc
cwde
mul
inc
mov
hlt
inc
xchg
(bad)
call
dec
mov
test
pop
cmp
cmp
xchg
icebp
sbb
gs
fimul
in
dec
jb
into
push
mov
cwde
inc
xchg
inc
cmp
dec
imul
pop
les
cwd
cwde
or
mov
in
jae
fst
out
cmc
lock
(bad)
add
mov
popa
pusha
je
mov
push
aad
cmp
push
scas
out
retf
rcr
(bad)
xor
int
push
imul
add
test
stos
sub
outs
pop
mov
sbb
pop
pop
jl
(bad)
leave
enter
loopne
xchg
out
(bad)
rcr
jmp
mov
ins
xchg
mov
cmp
xor
cli
movs
jae
mov
test
jns
lods
adc
adc
fist
popf
pop
shl
sub
hlt
cmp
push
stos
stos
repz
adc
cmp
mov
cld
imul
call
popa
jp
mov
and
xchg
push
cmc
je
adc
fdiv
cs
mov
pop
fsubr
push
mov
mov
rcl
(bad)
movs
stc
sbb
mov
rcl
retf
and
stc
enter
rol
or
movs
push
out
mov
and
inc
mov
nop
les
mov
cmps
aaa
ins
mov
push
leave
mov
scas
repz
push
add
aaa
or
pop
sub
ss
push
pop
cld
sbb
add
fmul
sbb
push
mov
iret
jl
inc
and
fisttp
mov
clc
aaa
pushf
add
push
inc
and
adc
and
cmp
retf
shl
icebp
lods
ins
icebp
lock
cs
loop
fst
push
lahf
cwde
cmp
lods
mov
and
mov
sbb
mul
mov
dec
cdq
push
repz
fwait
std
fsubp
push
jg
ja
add
(bad)
jno
or
fwait
loop
pop
sbb
mov
mov
aaa
cmp
jle
add
repz
cmp
loope
pop
div
call
cmps
fwait
fwait
jge
mov
dec
pop
jp
ret
mov
cmp
add
mov
retf
mov
(bad)
mov
xchg
mov
push
dec
test
jecxz
or
jno
ins
nop
inc
mov
bound
sbb
add
les
xchg
out
popf
jae
xor
dec
outs
push
cmp
cli
cmps
xor
shl
add
popa
popa
fisubr
stc
mov
in
or
jle
icebp
in
or
xor
jne
xchg
outs
push
sar
movs
jp
add
dec
cdq
fisub
adc
data16
stos
mov
lea
ins
jae
sahf
mov
mov
test
xlat
jbe
jge
xor
fld
inc
test
jae
jecxz
pop
std
pop
push
sti
fwait
jno
call
cdq
xor
mov
dec
hlt
xchg
mov
mov
cdq
ror
xlat
add
ss
out
sbb
mov
scas
fidivr
ja
pop
dec
push
cmp
dec
mov
or
xor
cdq
into
(bad)
cmps
call
or
jg
push
pop
jle
mov
or
lds
out
shr
sub
lahf
xor
ja
xchg
call
pop
int3
adc
adc
mov
push
fsubrp
mov
and
mov
and
push
jg
popa
repz
lea
pop
ja
addr16
pop
sar
jp
sub
push
scas
rol
add
imul
enter
cmps
xor
mov
aad
sub
sbb
push
xor
jne
cmp
and
ret
aad
pop
push
hlt
sub
pop
aaa
pop
lahf
xchg
jnp
out
cmp
test
xor
mov
xor
inc
inc
std
push
jb
rcl
jecxz
dec
or
cmp
add
test
hlt
sub
loope
(bad)
sahf
call
xchg
push
pop
push
test
popa
mov
(bad)
(bad)
pop
scas
xchg
sbb
mov
shr
mov
ins
sbb
dec
sti
xor
cmp
fdiv
jo
jmp
inc
rcr
mov
xor
mov
repnz
dec
scas
jae
int3
xchg
mov
pop
jnp
pop
jno
mov
or
push
lods
stc
fcom
fucomi
lods
mov
lea
pop
push
cmp
aas
test
dec
add
cmc
or
xchg
ins
cmp
push
(bad)
mov
call
fsub
jo
mov
mov
pop
push
(bad)
ins
movs
xchg
add
jb
data16
rcl
pop
imul
mov
mov
cmp
pop
jbe
pop
js
stc
nop
out
jnp
gs
and
dec
push
ret
jle
mov
shr
and
pop
das
or
les
fist
arpl
xchg
sbb
dec
adc
push
jno
mov
pop
push
(bad)
ror
cmp
ins
sub
or
shl
call
fs
mov
xor
das
iret
mov
ja
cmp
sub
nop
inc
add
adc
dec
clc
pop
ret
mov
scas
aad
jae
stos
jl
xchg
push
out
mov
imul
mov
jmp
out
popf
xor
out
into
out
aam
int
test
cwde
fsubr
mov
shl
dec
sahf
pop
fucomip
lds
xlat
pop
imul
daa
scas
loop
inc
push
in
xor
jp
push
aam
push
or
inc
icebp
mov
sbb
jo
shl
jg
push
cmps
push
fdivp
popa
add
xor
ins
sub
or
shl
mov
jp
fxch
push
enter
push
fstp
retf
inc
inc
push
sbb
test
jne
add
out
xor
sub
cmp
stos
add
jmp
pushf
into
in
mov
push
sbb
(bad)
mov
in
cmp
mov
push
push
inc
sti
or
in
cmp
mov
push
pop
stos
in
and
fnsave
pop
sbb
mov
jnp
ja
fwait
daa
or
aad
and
mov
xchg
inc
cmp
mov
add
sbb
outs
clc
sbb
sub
out
push
retf
outs
es
movs
push
mov
add
sbb
add
pushf
adc
and
push
loop
inc
jmp
mov
cs
jns
inc
and
fisttp
xchg
scas
leave
icebp
jmp
adc
(bad)
(bad)
cmp
pop
xor
mov
cmc
xor
mov
jo
xlat
fxch
inc
pop
sbb
fisub
dec
cmovne
jg
std
or
xor
ins
xor
(bad)
loopne
jbe
in
adc
sub
mov
inc
jbe
outs
jmp
cs
ja
jmp
call
push
cmc
cmp
and
adc
and
icebp
rol
in
xor
rcr
inc
(bad)
out
ret
sahf
mov
movs
leave
mov
jbe
pop
sbb
ja
mov
daa
jbe
repz
mov
int3
mov
inc
shr
jmp
(bad)
jb
sbb
mov
ins
jae
loop
xchg
stos
push
xchg
xor
pop
cmc
mov
mov
test
jbe
push
jecxz
xchg
cmp
push
jns
sbb
push
or
enter
cmps
mov
shl
jecxz
pushf
clc
(bad)
lods
xor
xchg
outs
fs
add
arpl
imul
jmp
loopne
dec
and
inc
(bad)
xor
cmp
adc
iret
pop
int
inc
ficomp
fdivr
or
xchg
or
(bad)
cmp
gs
add
lods
pushf
cmp
mov
dec
lds
rep
pop
lock
adc
sub
sahf
sbb
adc
push
pop
sbb
test
outs
lods
mov
in
jge
(bad)
xor
add
fst
sbb
lahf
rcl
sbb
add
and
pop
add
nop
jno
sbb
pop
sbb
rcr
pop
xor
cmp
shl
xchg
inc
push
add
(bad)
cld
jle
fidiv
pop
sbb
scas
pop
mov
shr
aaa
push
in
or
pushf
mov
cli
inc
pop
test
sub
mov
iret
adc
push
lock
inc
mov
push
xor
imul
xor
dec
pop
xor
movs
aam
xchg
push
test
je
retf
push
les
cmp
ret
aaa
pushf
push
mov
sbb
movs
out
jle
jns
les
iret
and
fwait
inc
and
pop
xchg
pop
in
push
mov
je
push
xchg
lods
xchg
loopne
shr
inc
sbb
adc
test
int3
push
mov
sub
ins
iret
retf
scas
xchg
out
adc
and
cmp
out
fwait
std
push
imul
cmp
lods
xchg
lods
mov
mov
fcmovnbe
add
fdivp
std
sbb
jmp
add
in
adc
xchg
mov
mov
je
in
sbb
shl
(bad)
sub
xchg
loopne
shl
lds
(bad)
sbb
test
add
xor
fdivr
pusha
aas
fwait
aam
ret
ss
mov
fbstp
fld
xchg
mov
ds
aad
push
out
jecxz
movs
ins
out
adc
and
cmp
aaa
sub
and
pop
adc
xchg
mov
fcomp
mov
inc
push
xchg
and
sbb
jbe
addr16
pushf
stc
push
xor
mov
shl
ja
stc
fnstsw
jb
jae
(bad)
fidiv
sbb
mov
mov
pop
movs
mov
aam
dec
inc
sbb
mov
pushf
cli
retf
jmp
es
(bad)
push
mov
push
aam
sahf
mov
sbb
mov
sub
(bad)
ret
fmul
pusha
in
xchg
xlat
lea
(bad)
arpl
cs
mov
fiadd
push
pop
push
and
push
enter
bound
outs
pop
scas
aad
scas
push
mov
lahf
ret
or
xchg
pusha
and
mov
jecxz
je
and
jne
push
popa
jmp
fwait
mov
pop
or
mov
int3
mov
cld
xchg
pop
mov
mov
scas
ret
aas
xchg
xchg
cmps
mov
inc
ficomp
mov
fsub
aas
js
or
inc
lock
repnz
mov
adc
add
daa
mov
je
stos
rcr
push
enter
dec
mov
fcmovnu
fild
xor
pop
ins
lahf
sbb
js
and
xchg
xor
mov
pop
dec
stos
in
cmp
test
fstp
out
sti
idiv
mov
retf
or
ds
jmp
mov
sar
push
xchg
inc
arpl
jecxz
mov
sbb
adc
pop
jp
mov
popf
fmul
inc
dec
pop
push
jbe
pop
(bad)
cmp
sbb
lahf
popf
movs
mov
mov
or
mov
and
mov
pop
jo
imul
mov
es
in
jge
inc
out
out
xchg
lds
sar
fdiv
pop
retf
xchg
dec
popf
ret
retf
pop
push
(bad)
fstp
mov
push
xor
push
add
jb
lds
pushf
fidiv
data16
adc
imul
pop
std
mov
lods
dec
icebp
les
mov
sbb
rep
pop
push
sub
xchg
icebp
mov
into
sti
dec
fs
or
leave
jo
enter
mov
iret
data16
dec
mov
loopne
movs
clc
push
fldenv
mov
cmp
ror
dec
rol
cli
(bad)
lock
movs
xchg
jne
sub
xor
mov
(bad)
jns
push
ror
sbb
cmp
jmp
aas
out
mov
in
inc
nop
or
in
jnp
mov
mov
inc
shr
(bad)
pop
or
jae
or
mov
jmp
cmp
iret
gs
jge
add
push
int
sbb
inc
out
iret
adc
popa
pushf
not
out
ror
xchg
dec
sbb
(bad)
mov
fstp
(bad)
loope
inc
aaa
aad
pop
outs
xchg
mov
adc
xlat
pop
lahf
stos
sar
mov
mov
iret
iret
in
shr
jae
add
outs
fstp
gs
sbb
xor
jbe
inc
popa
adc
jmp
(bad)
pop
movs
rcl
jb
popf
in
mov
xchg
xlat
push
neg
adc
dec
push
movs
add
arpl
mov
call
mov
xchg
loop
cmp
mov
fs
(bad)
jmp
cwde
lea
sub
test
lahf
enter
jbe
pop
add
or
mov
add
jno
popa
das
cmp
xchg
imul
and
mov
shl
cld
imul
stc
jae
fwait
ins
push
mov
xchg
and
adc
dec
lds
or
cmp
std
inc
call
enter
lds
and
ins
sub
and
mov
sub
fsubr
add
loopne
xlat
ins
adc
test
movs
push
fcom
adc
sahf
add
or
les
ins
in
add
iret
cmps
movs
aaa
sbb
(bad)
lods
sbb
sub
and
add
je
ffree
lds
loope
add
cmp
int3
das
daa
(bad)
or
push
adc
repnz
jle
test
in
jp
mov
es
retf
adc
dec
add
nop
fstp
jp
mov
mov
xchg
lods
cmp
jo
jae
adc
das
stos
test
ins
or
mov
out
xor
inc
imul
ja
pop
pop
adc
iret
jl
(bad)
pop
shl
or
fist
jmp
inc
fwait
mov
loopne
enter
dec
sahf
les
jo
call
test
mov
adc
data16
(bad)
cmp
je
or
inc
aas
test
daa
shr
and
mov
push
scas
leave
xor
xchg
pop
lock
sub
mov
sbb
add
push
jae
es
fnsave
mov
jg
adc
or
adc
cli
adc
push
sub
shr
fimul
mov
in
mov
out
stc
dec
and
mov
mov
or
jmp
xchg
add
mov
mov
mov
stc
xchg
test
mov
pop
pop
jl
jno
(bad)
mov
xchg
jmp
and
sub
fdiv
inc
imul
sub
in
mov
mov
jmp
push
(bad)
lock
mov
xor
repz
dec
jns
jecxz
adc
leave
std
cmc
or
jg
test
or
pop
xlat
and
dec
loopne
ins
addr16
fsubr
sbb
lds
mov
retf
xchg
ss
aad
or
adc
enter
cmps
pop
mov
push
ss
cld
push
and
jbe
ins
ror
add
dec
sbb
xor
add
dec
cmc
dec
loop
mov
adc
adc
fdivr
sbb
cwde
ss
jnp
pop
sub
and
mov
mov
shl
fs
std
and
dec
cmp
mov
or
stos
lods
xor
sub
call
out
inc
and
xor
fmulp
pop
xchg
mov
lods
daa
out
jb
inc
into
lahf
mov
pop
xchg
jno
and
mov
jp
bound
xlat
mov
fs
loope
mov
push
adc
sbb
xor
sub
scas
test
mov
adc
fstp
push
cmp
jb
cmp
lods
push
pop
jnp
sub
test
mov
in
jg
add
fsubr
push
or
addr16
fsincos
sub
push
dec
ins
fneni(8087
adc
call
mov
div
test
push
daa
(bad)
loopne
fwait
ds
dec
mov
and
inc
sub
cmp
xchg
inc
pusha
xor
and
in
sub
das
mov
retf
int
shl
aas
(bad)
mov
jmp
push
cmp
jle
mov
mov
xchg
cdq
fidivr
sar
mov
enter
jmp
cdq
rcr
push
cmps
jmp
out
lds
and
loopne
loopne
pop
shl
add
push
mov
mov
adc
xchg
pop
mov
jo
add
inc
in
dec
adc
cmp
mov
(bad)
xor
mov
jbe
cmps
repnz
mov
inc
mov
pop
xlat
inc
adc
push
adc
addr16
push
cld
push
outs
mov
rcr
pop
int3
xchg
call
mov
mov
(bad)
mov
(bad)
shr
shl
shl
popf
fld
fst
out
shl
mov
pusha
(bad)
pminsw
mov
add
test
cmp
out
dec
popa
bound
rol
enter
stc
or
push
jae
mov
imul
cli
jbe
nop
stc
cmp
adc
enter
adc
or
mov
inc
and
push
sbb
dec
push
iret
(bad)
cld
lock
adc
icebp
test
rcl
les
pusha
push
dec
fimul
ret
sub
fdivr
jle
out
xlat
mov
dec
jmp
mov
je
mov
adc
mov
jmp
push
movs
mov
addr16
ror
push
inc
cmps
or
xchg
fistp
cmps
out
pop
imul
ds
clc
mov
and
(bad)
cld
mov
xor
xor
add
mov
je
sub
cdq
pop
inc
mov
push
xor
movs
cdq
mov
(bad)
cmp
daa
and
cmp
adc
cld
dec
ss
push
pop
xchg
jle
ins
or
mov
cmp
outs
fwait
xlat
sub
cmp
push
leave
clc
or
sub
jo
mov
loope
fdivr
add
push
fwait
inc
shl
mov
push
daa
les
mov
adc
pop
loope
iret
jge
add
aam
aaa
pop
cmps
jge
retf
push
sbb
jmp
mov
dec
dec
loop
fcmovu
push
jo
dec
in
iret
rcr
adc
shl
dec
push
xchg
sahf
mov
push
jb
mov
rcr
xchg
cmps
or
mov
sti
jg
test
push
stc
fucomip
add
out
mov
push
pop
fs
sub
pop
xor
movs
add
jg
icebp
pop
cmp
stc
xchg
cmp
xor
pop
in
sub
mov
push
jge
sub
rcl
sub
ins
pop
stc
(bad)
(bad)
xchg
jne
or
(bad)
shl
dec
xchg
rcr
xchg
sbb
and
push
push
jnp
adc
test
lock
adc
mov
inc
jne
xchg
xor
push
int3
inc
push
imul
adc
mov
mov
adc
pop
push
push
lods
or
mov
jae
outs
int
pushf
pop
mov
out
pop
cmc
ja
mov
add
mov
jb
cmp
rcl
mov
retfw
outs
pop
je
sub
shl
mov
sbb
ss
aaa
push
fdiv
pop
shr
add
ret
jle
(bad)
rol
xchg
imul
inc
push
push
and
lea
push
push
(bad)
xor
imul
push
les
aad
xchg
sbb
addr16
in
jo
imul
(bad)
out
int3
imul
push
xchg
inc
and
imul
fdiv
mov
test
xor
push
movs
bnd
xor
out
pop
sbb
mov
mov
std
fs
hlt
and
ja
and
inc
test
hlt
sti
xor
mov
ja
mov
adc
inc
out
mov
je
cmp
inc
pop
inc
mov
imul
xchg
or
push
or
pop
inc
(bad)
mov
cdq
adc
push
rol
xor
add
bound
in
in
and
dec
add
out
lods
push
aas
pop
shl
xchg
fbld
jns
pop
fwait
test
inc
sub
mov
popa
out
xor
rol
(bad)
mov
push
scas
shl
xchg
pop
xchg
aam
mov
retf
call
popf
mov
sahf
stos
rol
fld
shl
das
jmp
jle
add
adc
fwait
mov
(bad)
call
out
push
mov
out
cmp
cmp
lds
dec
cld
movs
xchg
xchg
iret
cli
jg
dec
int3
fisub
mov
adc
xor
gs
ins
fsubr
inc
mov
sbb
mov
mov
cmp
outs
arpl
rcr
add
scas
mov
sbb
fdiv
cmp
jne
xchg
(bad)
inc
iret
push
push
pushf
mov
add
stc
inc
jmp
mov
sub
movs
mov
int
int
std
aaa
sbb
jmp
xchg
std
fs
int
dec
mov
xor
sub
sbb
loopne
push
aad
xor
enter
jge
out
mov
cmp
and
stos
jnp
bound
stc
and
cmp
mov
pop
jo
mov
repnz
pushfw
and
and
cli
retf
loopne
mov
dec
loop
add
jl
leave
mov
ret
sub
mov
adc
pushf
(bad)
fs
nop
adc
and
push
ins
imul
movs
mov
daa
retf
call
imul
cdq
call
pop
or
call
fst
es
sbb
inc
xor
aam
add
mov
mov
xor
mov
sbb
sti
ret
lods
popa
cmp
dec
scas
add
push
ucomiss
retf
sub
sbb
out
(bad)
fxch
cmp
or
jmp
jno
jle
mov
sub
out
dec
pop
(bad)
inc
jbe
jp
arpl
xchg
mov
adc
sahf
pop
adc
cmp
pop
ds
inc
js
mov
fs
and
sbb
xor
mov
xchg
xor
or
mov
inc
pop
push
fdivr
shr
test
pusha
xchg
dec
scas
loop
mov
fs
imul
mov
push
je
inc
adc
repz
mov
pop
mov
stos
imul
inc
pusha
dec
xor
out
pop
lods
xor
loop
aad
test
mov
popa
cld
rol
mov
pop
adc
sub
push
cdq
stc
pop
dec
dec
iret
out
cdq
sar
ror
test
cmp
jg
inc
loop
mov
(bad)
fucomp
lods
je
pop
mov
icebp
in
call
or
cld
xchg
inc
aam
sub
add
jg
cs
jo
scas
and
xor
xchg
jnp
adc
xchg
inc
jl
xchg
jmp
cmp
(bad)
clc
in
ins
lahf
sbb
loope
pop
pushf
test
(bad)
jb
scas
pop
in
(bad)
int
push
cmps
retf
(bad)
imul
and
int
push
je
pop
pushf
inc
mov
adc
jno
adc
dec
mov
(bad)
(bad)
call
xchg
jmp
cmc
mov
out
pusha
pop
addr16
add
mov
jmp
fdivr
mov
in
mov
push
sub
xchg
icebp
rcr
pop
mov
and
in
aaa
lock
mov
push
outs
add
dec
stos
or
icebp
fnstenv
repz
jle
inc
mov
lods
jns
inc
jle
pshufw
aas
ror
mov
int3
scas
cmps
fst
mov
pop
mov
or
cmp
cld
ins
aaa
cmc
add
cmp
xor
js
pop
mov
ins
imul
outs
int3
add
stos
and
mov
retf
fcom
int3
pop
sub
and
sbb
movs
pop
imul
jecxz
adc
cdq
sbb
xchg
push
sbb
in
aaa
pop
inc
pop
pop
xchg
mov
aam
ret
inc
call
fld
sub
add
jmp
dec
cmp
add
lods
ins
pop
(bad)
push
sahf
cmp
jl
loop
xor
mov
ror
and
jne
fsubr
ins
push
bound
add
xchg
cli
mov
jb
and
test
sar
or
xor
repz
sub
addr16
bound
push
and
sub
aad
add
arpl
push
xor
in
pop
rol
leave
xchg
inc
pushf
call
jle
retf
jne
push
mov
push
mov
data16
rcl
out
mov
pop
mov
cmp
sti
scas
out
xchg
test
cmp
mov
pop
mov
in
and
push
sub
inc
xor
aam
(bad)
push
lock
xchg
ins
pusha
xchg
cmp
sub
mov
mov
add
xor
mov
ja
cmp
jbe
jp
jmp
cwde
cmp
xchg
add
lahf
in
into
push
and
retf
dec
(bad)
rcl
ja
xchg
mov
call
hlt
cmps
sbb
or
dec
scas
fs
pop
in
(bad)
cmp
add
mov
rcr
int
xchg
in
push
or
add
mov
aam
cmp
inc
cmp
sbb
leave
pushf
jno
std
ror
movs
sbb
pusha
or
aas
hlt
(bad)
pop
cli
inc
adc
or
pop
popf
or
or
or
mov
mov
jns
test
inc
pop
shl
ror
mov
ficom
repnz
inc
mov
mov
or
adc
push
mul
mov
hlt
mov
cli
cmp
jmp
std
xchg
test
stos
inc
movs
int
pop
mov
add
in
pop
js
int3
mov
bound
mov
adc
xor
pop
adc
lock
or
cmp
aaa
or
nop
ror
mov
popa
mov
jecxz
ret
push
jnp
pop
mov
fisub
mov
ret
imul
mov
push
rcl
mov
sbb
mov
sbb
(bad)
std
in
add
pop
sub
fs
(bad)
push
frstor
sbb
(bad)
adc
mov
call
nop
ss
pop
jns
in
loope
rcr
retf
dec
adc
cmp
dec
das
test
cs
icebp
or
das
into
fimul
sub
dec
in
(bad)
cmc
xchg
inc
lods
and
sbb
mov
mov
inc
cmp
xor
hlt
scas
push
jmp
mov
adc
mov
js
in
repnz
xchg
sti
out
xchg
sub
call
add
fisubr
inc
inc
pop
adc
or
test
xchg
jmp
cdq
(bad)
mov
push
shl
retf
(bad)
fisttp
pop
sbb
scas
mov
mov
hlt
call
mov
sub
push
sbb
and
scas
push
mov
xchg
jae
fdivr
lahf
mov
add
aas
mov
pop
xchg
popa
mov
aas
dec
xlat
test
pop
in
sbb
jo
pop
mov
inc
ret
xchg
lea
in
xor
jmp
fdivr
fimul
(bad)
xchg
dec
and
mov
push
add
movs
xor
jne
out
jl
jmp
push
jecxz
es
dec
xchg
hlt
pusha
xchg
call
aam
xor
in
movs
jp
adc
cwde
neg
les
inc
pop
inc
mov
dec
loope
mov
pop
sbb
(bad)
sub
mov
lock
jge
add
fild
sbb
xchg
inc
mov
cmp
data16
xor
outs
push
sbb
mov
jne
push
xor
jl
pop
add
inc
push
or
add
mov
fist
mov
mov
push
sub
jmp
cs
int
jmp
mov
cwde
adc
int3
mov
les
int
adc
adc
adc
pop
mov
aaa
xchg
mov
mov
xchg
inc
mov
ret
gs
(bad)
rcl
or
push
jno
jecxz
rcr
mov
sub
test
popa
loopne
sub
fwait
(bad)
repnz
mov
icebp
fnsave
jmp
loop
imul
(bad)
leave
out
add
sbb
dec
mov
inc
mov
jl
dec
pop
and
push
call
jecxz
or
test
mov
lock
mov
gs
mov
in
jns
pop
into
lods
mov
pop
pop
mov
ja
sub
jp
push
push
dec
aaa
mov
pop
and
ins
xor
mov
adc
pusha
ins
jl
movs
ret
push
ins
mov
cmp
or
repz
(bad)
push
xchg
jbe
test
fcomp
mov
cld
xchg
dec
xor
pop
mov
movs
jl
inc
adc
adc
lea
mov
ret
stos
sbb
or
mov
pmuludq
mov
pop
call
xchg
sub
jge
add
cmp
sti
dec
out
cmp
movs
adc
or
adc
sar
add
out
dec
push
xchg
inc
cmc
sti
mov
mov
or
out
inc
and
jno
lea
bound
fimul
daa
add
cmp
in
pop
pop
pop
dec
outs
mov
ret
jmp
loopne
mov
lods
xchg
mov
mov
mov
sbb
es
sub
cli
dec
or
or
xchg
hlt
ja
sbb
pop
xor
sar
jge
js
mov
lods
add
in
cmc
and
mov
cmp
add
xor
cmp
das
out
sti
popa
adc
cmps
xor
mov
(bad)
jo
in
iret
fmul
sub
mov
and
iret
retf
lahf
sti
test
xlat
dec
xor
ins
das
add
repz
mov
adc
dec
jns
jg
and
fnsave
inc
sbb
sbb
and
iret
cmp
mov
in
mov
std
jp
jne
sti
mov
xchg
and
nop
add
outs
iret
adc
cmc
cmp
jmp
xchg
mov
inc
out
or
cmp
mov
pusha
aas
pop
adc
daa
int3
aas
push
push
mov
test
xlat
or
(bad)
jb
in
xor
(bad)
fdiv
outs
sbb
(bad)
(bad)
test
fistp
outs
and
xor
push
sti
mov
xchg
int
push
add
add
fwait
sar
idiv
xor
push
les
mov
ja
sub
cmc
xor
push
test
je
repz
cmps
pop
pop
jnp
mov
xchg
outs
clc
(bad)
iret
adc
test
xor
xchg
neg
and
outs
or
shl
sub
xor
sbb
xchg
fs
dec
fld
stos
ins
in
std
call
aam
ret
imul
sar
push
cmp
mov
ja
jl
push
or
test
mov
cld
jmp
cmp
mov
cmp
retf
(bad)
or
scas
mov
test
dec
lds
sub
sbb
(bad)
mov
mov
sub
mov
rcl
cmp
and
cli
cbw
dec
sub
mov
int3
clc
jmp
cmp
les
jns
xchg
mov
push
jb
jle
loope
dec
in
fld
leave
data16
pushf
fsub
pop
div
or
test
adc
daa
movs
add
daa
xor
fst
lea
bnd
jno
dec
nop
imul
mov
rol
fs
push
xchg
cwde
cmp
dec
cmp
(bad)
push
mov
lea
loopne
rcl
jp
mov
pop
inc
cmp
cdq
(bad)
popa
and
dec
shl
inc
iret
dec
das
xor
xor
sbb
sub
xor
and
je
int3
and
(bad)
cmc
and
mov
mov
rcl
mov
mov
and
dec
mov
pop
and
clc
jg
cdq
out
lahf
data16
sbb
xor
mov
ret
(bad)
sub
lahf
mov
sub
xchg
push
cmovbe
fadd
(bad)
jmp
cdq
fwait
xchg
pop
(bad)
lods
mov
je
xor
bound
jb
ds
repnz
mov
xor
ret
pop
sbb
fwait
jno
jl
xlat
enter
mov
mov
push
xchg
movs
mov
stos
dec
sub
pextrw
inc
fld
sub
mov
push
xchg
jge
icebp
fs
mov
jle
scas
cmp
cmp
xor
xchg
ja
push
and
adc
push
cmp
dec
lock
add
(bad)
lods
cdq
cmp
fistp
js
cmp
sahf
or
add
jns
jne
loopne
adc
cmc
sar
sti
xor
ret
inc
and
push
das
fwait
shl
sbb
cmps
dec
fiadd
div
cld
mov
leave
inc
mov
adc
and
mov
add
mov
inc
fmul
add
or
das
cmp
xor
loope
sbb
cmp
cdq
add
int3
rcpps
or
(bad)
test
pop
mov
xor
sub
ret
mov
xor
sub
mov
xlat
push
aaa
fadd
xchg
sbb
xor
nop
mov
push
hlt
fbld
lahf
out
add
push
add
stc
or
mov
loop
dec
pop
fadd
pop
xchg
mov
sahf
pop
push
jge
hlt
(bad)
addr16
sub
aas
loop
dec
mov
mov
cmps
in
mov
add
pop
dec
add
and
out
in
into
cmp
outs
in
mov
movs
cmps
push
xlat
xor
sbb
pushf
add
test
jbe
aam
adc
sbb
mov
dec
xchg
rol
shl
jns
jmp
pop
and
icebp
fs
iret
mov
dec
ins
sbb
imul
in
mov
xchg
xor
adc
push
sub
loop
fist
push
mov
mov
mov
pushf
lahf
loopne
lea
addr16
retf
inc
in
fwait
sahf
into
cli
pop
sbb
hlt
ret
sub
add
adc
mov
inc
call
clc
mov
pushf
sub
movs
into
jecxz
jb
imul
dec
neg
xchg
mov
jno
jecxz
push
aas
add
or
pop
and
dec
jmp
sub
mov
xor
push
push
ja
sub
cld
leave
pop
xchg
inc
cmp
inc
test
ret
cmp
aas
int
jmp
mov
(bad)
mov
lds
sti
call
sbb
les
stos
fadd
in
jnp
jp
into
outs
pusha
test
jecxz
mov
popa
inc
and
cmp
movs
in
cmp
cdq
mov
loope
xchg
test
mov
jg
in
clc
dec
mov
or
clc
mov
stos
shl
pop
outs
cmp
aad
std
in
bsr
mov
dec
mov
adc
adc
jno
jae
or
dec
inc
aam
cmp
out
mov
or
in
dec
gs
test
mov
xlat
pop
ret
jmp
inc
out
add
and
icebp
in
aaa
cwde
ds
xor
dec
scas
inc
jnp
lods
fs
outs
fcom
(bad)
in
cmps
es
mov
xchg
cmp
jno
les
pushf
push
xchg
in
sub
fadd
movs
pop
imul
pop
repz
jecxz
ds
retf
cdq
jge
cmc
dec
and
scas
dec
neg
adc
mov
outs
mov
jbe
mov
std
sub
mov
mov
lods
add
jo
sub
mov
jle
sub
inc
movs
pop
mov
pop
jnp
sbb
sar
or
lods
mov
cwde
bound
dec
iret
adc
clc
ss
sbb
pop
xchg
push
sub
iret
mov
xchg
enter
call
xor
retf
adc
mov
clc
stc
push
cmp
int
jae
pop
pop
sub
in
cmps
cmp
cmps
test
mov
push
(bad)
fnsave
dec
mov
pop
(bad)
aam
cmp
test
or
xor
push
push
sub
fwait
addr16
fmul
jnp
mov
(bad)
jmp
jns
xlat
std
jl
xchg
pop
or
dec
and
add
jae
mov
aad
push
jno
cmc
test
fcomp
repz
mov
pop
adc
or
je
add
arpl
pop
bound
jl
ins
sbb
add
movs
popf
(bad)
clc
mov
ja
lds
sub
aad
jno
in
movs
je
test
xchg
jnp
add
xchg
test
mov
outs
scas
rol
pop
popf
clc
fimul
iret
xchg
rcr
push
inc
neg
mov
push
mov
jmp
dec
mov
pop
loope
sub
and
dec
or
jecxz
repnz
sbb
(bad)
fidivr
scas
xchg
stc
mov
popf
scas
adc
or
jb
gs
add
(bad)
mov
ror
sub
shr
mov
mov
test
jmp
test
test
cdq
add
pusha
dec
imul
aaa
cmps
jne
adc
xor
push
add
or
pop
inc
sbb
out
cmp
imul
push
push
mov
shl
test
add
or
fs
sub
pop
xor
out
or
pop
pusha
ins
imul
cmps
in
sub
dec
push
clc
mov
call
mov
test
xchg
lahf
(bad)
jns
mov
xchg
cmp
les
popa
mov
rcl
sbb
loope
pop
and
cmc
add
gs
out
add
arpl
std
cmp
je
test
outs
test
add
add
call
gs
bound
in
or
es
in
and
lds
jne
fnop
push
xlat
sbb
div
dec
adc
sbb
inc
sahf
mov
mov
ja
les
aas
loop
add
call
fisubr
push
sub
into
push
pop
mov
ss
cmps
mov
push
mov
fmul
mov
pop
push
aaa
jp
xchg
mov
cdq
into
lods
int
adc
in
call
aaa
cmp
mov
pop
adc
ret
dec
sahf
adc
sbb
mov
fcomp
fimul
sti
jp
dec
outs
pop
test
imul
shl
(bad)
dec
push
retf
pusha
mov
xchg
cmps
lods
ss
dec
xor
repz
mov
dec
in
retf
jl
stos
add
xchg
les
sub
in
adc
lahf
bound
dec
iret
cmp
aaa
add
mov
int
dec
aam
(bad)
stc
mov
rol
sbb
test
aas
adc
repz
loopne
mov
cmp
ins
xchg
jmp
add
jmp
xor
or
xor
inc
push
and
push
aaa
out
sub
push
xchg
jmp
add
and
lds
mov
test
and
daa
mov
ins
mov
mov
mov
xchg
pop
jl
aaa
mov
sti
mov
jnp
pop
hlt
add
mov
outs
inc
cmp
pop
jg
add
fwait
sub
ficomp
or
cmps
call
jmp
out
inc
dec
mov
jp
dec
xchg
pop
stc
inc
cli
test
pop
loopne
adc
cwde
pop
xor
adc
push
in
push
(bad)
push
sub
mov
jge
and
adc
fldenv
out
daa
adc
(bad)
scas
test
or
fisttp
ss
xchg
fsubr
stos
mov
push
je
sbb
jo
sbb
jnp
xadd
sbb
nop
jge
fdivr
push
mov
sub
out
and
pop
mov
pop
sbb
sub
rol
fild
push
push
sahf
adc
scas
dec
xor
add
int3
test
dec
mov
leave
sbb
jle
mov
loopne
pop
loop
popa
jge
das
push
dec
ret
mov
jg
sbb
mov
aam
(bad)
rep
rol
loop
loope
and
mov
xchg
retf
dec
dec
jnp
leave
inc
popa
ret
sub
pusha
and
or
mov
adc
pop
xor
addr16
imul
xor
sub
pop
dec
mov
das
scas
jecxz
das
mov
dec
push
sbb
add
call
jmp
sub
ins
stc
ins
jo
add
jb
adc
(bad)
loop
xlat
int3
pop
dec
enter
or
sbb
mov
xchg
jb
inc
push
add
push
in
dec
inc
enter
sbb
inc
xchg
mov
mov
and
mov
dec
sbb
push
outs
jle
test
cdq
mov
jae
and
dec
cmps
loope
mov
jbe
retf
jmp
int
(bad)
add
dec
int
stos
lods
daa
mov
in
push
repz
sbb
mov
fadd
cmc
mov
xchg
add
cmc
sub
jnp
sbb
mov
stc
loopne
dec
lods
cmp
shr
push
ret
and
test
and
pusha
das
sti
das
test
or
bound
push
test
call
mov
dec
mov
xchg
js
iret
in
clc
cs
das
loope
stc
imul
fwait
int
adc
xlat
and
in
inc
dec
shr
lock
sahf
pop
mov
push
push
bound
adc
jge
push
addr16
push
(bad)
ss
or
jno
ss
inc
jno
sti
xor
mov
push
pushf
push
and
mov
sub
repnz
jg
sbb
fisttp
scas
clc
jmp
xchg
or
mov
mov
sahf
pop
mov
shl
fs
adc
call
lods
mov
jp
stos
retf
or
outs
sub
mov
push
pusha
mov
fdivr
mov
or
daa
aam
pop
in
and
aad
dec
div
(bad)
lods
fs
push
and
inc
cmp
or
and
(bad)
call
mov
mov
push
mov
xor
pop
cmps
out
jmp
mov
fs
push
aaa
imul
pop
add
xchg
push
aam
scas
cmps
adc
ja
lods
mov
pop
lahf
mov
mov
cmps
mov
out
mov
push
stos
fwait
outs
sub
jcxz
cmp
cmps
loopne
enter
rcl
push
stos
fldenv
cmp
xor
fcom
cld
mov
bound
and
jp
add
xchg
pop
outs
lahf
cmp
adc
mov
scas
mov
out
std
in
and
mov
gs
(bad)
adc
cwde
stos
sub
(bad)
js
adc
jmp
adc
pop
and
or
ret
push
xor
adc
jnp
xchg
stos
(bad)
daa
pop
xchg
data16
xchg
xor
call
xor
cmp
ss
xchg
push
pop
cmc
sbb
in
loopne
div
push
jle
div
icebp
icebp
cmps
scas
sub
rol
xor
les
adc
adc
dec
daa
or
push
enter
add
mov
hlt
cmp
push
loopne
ret
or
cmps
dec
enter
mov
mov
sub
sbb
add
add
mov
lods
mov
mov
xchg
sub
movs
iret
out
icebp
jg
fucomip
(bad)
mul
js
ret
bound
lds
cwde
and
xor
inc
out
mov
ja
popa
movs
add
imul
ja
stos
test
ja
push
loop
pop
mov
xchg
stos
mov
sbb
mov
cmc
clc
sub
fcompp
ja
cmps
lods
imul
rol
ret
and
push
es
inc
or
xchg
xchg
jmp
push
mov
adc
fnstsw
xor
clc
add
(bad)
jo
sbb
(bad)
mov
and
push
add
cmps
push
adc
mov
pop
out
in
sbb
shl
mov
pop
popa
pushf
fwait
pop
ins
scas
mov
mov
or
cmp
sub
test
ror
pop
nop
xor
push
xchg
aam
xor
xor
aaa
jne
lods
pop
ficom
gs
mov
pop
sbb
jns
hlt
movs
dec
mov
aam
fstp
(bad)
nop
imul
test
imul
adc
icebp
ror
add
inc
mov
adc
push
(bad)
jmp
gs
stos
inc
clc
sbb
pop
xchg
ds
mov
in
mov
das
in
stos
stos
mulps
(bad)
pop
push
adc
dec
xchg
mov
daa
add
push
xchg
push
jae
jo
lods
jmp
cmp
or
test
pop
sub
adc
retf
mov
test
imul
inc
outs
js
pop
mov
(bad)
sahf
idiv
shl
or
stos
pop
mov
xor
mov
jb
mov
(bad)
das
dec
or
sub
pop
pop
inc
sub
xor
retf
mov
fs
sbb
inc
stc
xor
call
jp
rcr
lea
stos
pusha
inc
ror
sub
and
add
jo
dec
push
sti
xor
sbb
js
dec
popa
and
clc
fcmovne
scas
clc
mov
call
ja
das
bound
call
push
das
push
mov
jg
frstor
sahf
hlt
mov
add
xchg
mov
fild
fsubp
mov
add
out
nop
pushf
jb
test
les
dec
xchg
cwde
mov
out
stc
in
fs
out
adc
push
sbb
out
or
cmps
mov
(bad)
xchg
mov
imul
jmp
jbe
inc
sahf
push
mov
xchg
mov
inc
ret
sub
mov
sub
jno
rcr
aas
loopne
cmp
idiv
mov
push
mov
lock
into
pop
mov
cmps
fsubr
sub
sub
push
cli
add
cmp
xchg
out
js
xlat
or
push
jmp
(bad)
cmp
mov
xchg
sysenter
push
sar
cmps
pop
enter
(bad)
sub
movs
jp
scas
push
pop
and
adc
mov
sbb
push
out
pop
mov
xchg
shl
mov
rcl
outs
mov
icebp
pop
call
fcmovb
std
mov
ja
(bad)
xor
das
xor
add
pop
jp
push
inc
adc
xchg
jns
fwait
inc
retf
data16
xchg
shl
mov
shl
mov
aas
or
aas
push
adc
xor
push
jnp
jns
jecxz
(bad)
jl
loop
js
push
or
push
xchg
cwde
movs
adc
in
lods
jle
(bad)
(bad)
cmp
dec
lahf
data16
mov
ds
jae
sbb
loop
cmove
mov
cmps
pusha
pushf
mov
sub
loop
in
daa
loopne
repnz
ins
syscall
sar
add
jnp
out
popf
stos
adc
retf
xchg
ja
push
mov
push
aaa
xchg
ins
in
xor
lea
icebp
inc
pop
bound
sub
aaa
push
ins
jne
or
in
fld
pop
mov
fsub
sbb
inc
stc
jl
repnz
xor
leave
add
adc
pop
std
in
aas
call
adc
aas
or
out
call
not
fld
cmps
inc
sar
loopne
mov
fstp
jb
mov
dec
or
dec
or
xor
stc
push
pop
or
mov
fadd
div
ss
in
pop
movs
cmp
mov
(bad)
icebp
push
xor
fbstp
leave
ret
dec
mov
out
mov
adc
mov
fwait
data16
cdq
dec
inc
push
jge
ret
sbb
xrelease
out
xor
movs
sub
shl
ret
xchg
mov
aam
push
jmp
mov
lea
loope
push
mov
jl
repnz
dec
xchg
sbb
sub
int3
adc
pop
leave
leave
pop
int
test
pop
mov
pop
mov
retf
call
pop
lock
mov
enter
or
call
and
(bad)
lods
cmp
add
dec
xor
mov
push
xor
adc
pop
inc
inc
inc
inc
dec
adc
hlt
jno
movs
mov
sub
push
adc
les
out
loop
scas
sbb
popf
cwde
scas
cmp
clc
add
cmp
(bad)
in
loope
(bad)
fiadd
retf
sar
mov
dec
packuswb
adc
cmps
pop
sbb
cmp
pop
fidivr
fsubr
xchg
fnsave
fild
pop
pxor
enter
pop
pop
inc
mov
scas
cmps
vunpcklps
daa
push
dec
popf
fsub
sbb
imul
inc
ins
ins
adc
std
aas
shl
out
mov
in
push
les
inc
(bad)
jg
fs
mov
add
xchg
jbe
iret
hlt
leave
cmps
in
mov
fild
cmps
jmp
cli
ins
aad
stos
imul
mov
jle
ret
xor
stos
add
mov
push
pop
lea
pop
inc
push
cmps
iret
jne
aaa
shl
dec
inc
aam
cs
je
(bad)
and
repz
icebp
ret
stos
pop
repz
outs
push
sti
xchg
ret
dec
push
fwait
and
in
jp
iret
and
sbb
aas
repnz
pop
gs
sbb
stc
pop
push
(bad)
fdiv
out
pminsw
add
sub
ret
aaa
out
cmp
hlt
mov
pop
adc
gs
sub
push
jmp
fst
mov
leave
sti
pushf
fs
ret
enter
ror
mov
mov
repz
iret
and
pop
test
pop
adc
mov
in
mov
rol
sbb
ds
mov
push
cli
cwde
and
bnd
mov
or
xchg
scas
hlt
push
and
aad
inc
pop
inc
aad
push
mov
(bad)
daa
inc
mov
dec
pop
lods
jle
in
fisubr
inc
clc
inc
push
xchg
out
cli
mov
sub
in
pop
mov
ret
adc
mov
push
mov
clc
iret
fnstenv
dec
clc
icebp
in
ins
je
dec
cmp
enter
add
or
xchg
jae
jmp
icebp
inc
inc
push
xor
mov
xor
cmp
or
outs
adc
xchg
rol
or
adc
and
jge
mov
jns
fs
cmp
push
ss
fnstcw
ins
aas
(bad)
out
test
xor
mov
add
gs
cmc
retf
icebp
or
jne
aam
daa
popa
pop
repnz
lahf
rcl
mov
sti
xor
or
js
pop
cmc
xchg
rcl
and
cli
xlat
jle
and
mov
(bad)
and
in
repnz
movs
retf
movs
jno
jnp
adc
mov
rol
add
add
jne
xor
xchg
cmp
inc
aad
sbb
js
ror
movs
mov
(bad)
jl
jne
into
std
dec
fbld
jmp
lea
mov
ja
adc
pop
out
ins
inc
mov
scas
das
sub
cmp
jle
mov
cli
repz
push
xchg
fnstenv
aam
ds
cs
inc
xchg
push
mov
data16
cmp
xor
out
mov
data16
adc
xchg
rcr
dec
or
jb
mov
ror
sbb
jmp
div
or
xor
shr
sub
add
test
pop
data16
test
mov
(bad)
(bad)
clc
repnz
fldenv
sub
mov
rcl
or
and
mov
xor
push
pop
cmp
movs
sbb
clc
pushf
push
mov
and
xchg
loopne
push
cmp
sub
aaa
lds
jle
or
jecxz
nop
push
pusha
cmp
stos
out
mov
add
or
fwait
sub
gs
ror
movs
adc
test
adc
dec
push
jmp
data16
(bad)
loopne
aaa
fstp
mov
(bad)
sbb
cmp
mov
aam
adc
push
and
push
xchg
bound
fcmovne
pop
loope
jp
(bad)
sbb
pop
push
aam
pop
jl
(bad)
shl
xor
xlat
inc
jge
and
mov
dec
arpl
pop
add
out
pushf
adc
pop
or
(bad)
icebp
or
outs
mov
scas
dec
xchg
int3
loope
push
les
or
popa
(bad)
fdivr
(bad)
push
and
ret
pop
xor
dec
mov
or
adc
mov
xor
into
lds
pop
mov
add
jle
mov
jmp
inc
cmp
mov
sbb
mov
ss
out
fild
push
push
popa
das
cmp
bound
retf
cmc
stos
xor
imul
bound
ds
call
fidivr
sbb
jp
aad
jbe
loopne
inc
rcl
mov
ds
call
lahf
or
sub
jp
lods
fdiv
pop
or
in
add
adc
jle
push
sti
inc
cld
cs
cmp
cld
lahf
pop
jmp
fld
jbe
sti
pop
aas
call
cs
sbb
scas
cdq
retf
jbe
sub
mov
cmp
sbb
push
xchg
arpl
jmp
call
and
out
jge
pop
movs
(bad)
idiv
call
pop
dec
sbb
jcxz
sbb
std
ds
mov
ror
in
cmp
leave
mov
movs
retf
xor
jle
out
test
push
loop
dec
inc
(bad)
mov
push
mov
push
popa
dec
mov
inc
jmp
scas
or
mov
inc
into
jle
inc
xchg
xor
sbb
aaa
out
clc
addr16
in
pop
loopne
ja
fist
pop
gs
neg
adc
mov
xlat
cs
popa
ja
cdq
or
mov
xchg
ds
add
pop
push
push
shl
test
dec
mov
data16
daa
adc
mov
lods
jb
push
test
cwde
xchg
(bad)
ja
adc
(bad)
cmp
fisttp
pop
and
mov
cli
sub
pop
inc
or
stos
or
xchg
push
retf
jo
stc
xchg
ja
pushf
movs
pop
push
mov
sahf
dec
or
stc
adc
ja
js
lds
clc
dec
loope
push
or
not
(bad)
adc
mov
push
sahf
in
or
ret
xor
or
ins
dec
cmp
xor
sti
int3
jg
mov
mov
push
gs
push
and
rcl
inc
add
stc
sub
cmp
ret
pop
rol
cli
pushf
ss
or
jge
imul
xchg
adc
mov
dec
call
cmp
cmp
call
or
or
push
push
mov
idiv
sbb
cmc
ffreep
lea
stos
sahf
xor
ret
sbb
pop
mov
hlt
jp
xor
cs
push
iret
sbb
pop
cmp
imul
mov
inc
mov
and
mov
bound
scas
rcl
lock
aad
mov
dec
xchg
in
call
and
inc
pop
lea
push
push
test
adc
mov
call
pop
add
jecxz
neg
sahf
xchg
inc
dec
dec
adc
repnz
mov
aas
test
call
pop
fstp
sbb
push
fucom
cmp
nop
bound
adc
mov
jle
mov
js
cmp
inc
mov
mov
in
pop
xchg
pop
mov
sbb
inc
cs
cmc
test
movs
mov
adc
jle
push
jmp
sub
ret
mov
test
movs
xor
sbb
adc
movs
jbe
xor
loope
cmp
mov
jmp
lods
stos
fst
inc
aaa
push
repz
pop
ins
fisubr
mov
cmp
loop
add
aaa
retf
sub
push
xchg
jl
out
ds
cwde
jge
ror
neg
cmp
push
sub
popa
test
xor
add
pop
mov
xchg
xchg
inc
cmp
adc
and
ins
test
xor
mov
cmp
scas
repnz
pop
jp
cmc
jecxz
mov
int3
pop
cmp
dec
push
(bad)
xchg
fmul
test
int3
dec
repnz
(bad)
adc
cmp
mov
lds
movs
int
sahf
mov
mov
cmc
ss
fild
sbb
not
inc
test
in
inc
into
and
in
shrd
or
xor
pop
mov
clc
jb
inc
mov
xchg
xor
xchg
jne
movs
pop
push
add
inc
push
and
jge
jle
dec
jne
aad
icebp
sbb
mov
mov
xchg
dec
gs
lods
test
in
push
jbe
loop
daa
mov
in
je
add
adc
xor
enter
sbb
(bad)
lock
inc
xchg
clc
imul
mov
push
push
loope
pop
in
add
(bad)
jl
xor
movs
js
adc
loop
cmp
xor
jae
mov
aaa
popa
jmp
jo
adc
mov
xor
and
sub
test
fs
lods
sub
xor
xchg
mov
cmp
sub
inc
push
push
sbb
and
fwait
mov
pop
jecxz
dec
mov
jne
xchg
mov
pop
js
mov
cmp
repnz
repnz
daa
stos
imul
in
or
dec
addr16
pushf
(bad)
sbb
test
icebp
inc
loopne
push
jmp
in
fcmovu
jp
sub
mov
dec
(bad)
std
arpl
test
pop
sahf
sbb
cmp
out
cdq
fwait
arpl
out
and
jne
xchg
xlat
sub
cmp
retf
dec
jae
cmps
stc
nop
add
aam
pop
xor
in
jg
xchg
ret
aaa
inc
int3
mov
into
imul
(bad)
rcr
push
sahf
push
sbb
fldcw
inc
mov
jbe
mov
cmp
mov
rcl
jg
push
dec
aam
test
cs
cwde
out
or
test
mov
xor
pop
dec
mov
or
inc
add
xchg
dec
not
mov
shl
pop
jne
daa
icebp
inc
and
call
xchg
cld
sub
pop
(bad)
xor
jbe
adc
mov
sbb
xchg
push
or
repnz
leave
push
xor
push
xchg
mov
je
push
dec
repz
or
repz
fsubrp
mov
pop
and
imul
or
je
mov
mov
addr16
(bad)
sub
pop
xor
xor
jl
xor
xchg
add
rcr
hlt
pop
(bad)
in
cs
xchg
or
dec
xchg
aad
fdiv
push
call
jne
jb
pop
inc
icebp
jae
in
pop
pop
arpl
sbb
outs
fsub
jnp
sbb
in
arpl
movs
sahf
neg
in
adc
cdq
xchg
jae
mov
and
jne
repnz
pop
(bad)
push
outs
sbb
stos
push
sub
jl
dec
sub
push
and
mov
cmp
js
xchg
mov
pop
dec
fst
mul
out
pushf
in
bound
pop
hlt
fcmovb
add
(bad)
dec
jge
push
test
aam
in
sub
jmp
xchg
ins
mov
pusha
test
call
push
in
loopne
sub
packsswb
mov
jo
addr16
retf
(bad)
sbb
xor
add
cmp
leave
push
jmp
icebp
jmp
sub
cwde
int
xchg
xor
xchg
stos
mov
lods
lods
cmp
ins
adc
fisubr
push
mul
and
cs
sbb
xor
push
dec
mov
mov
mov
ds
push
cld
movs
sub
xchg
ret
cmps
dec
gs
movs
enter
inc
in
sub
les
ja
or
imul
xchg
cmps
les
dec
(bad)
movs
movs
test
xor
push
dec
jnp
pop
mov
pop
int
push
scas
das
(bad)
popf
hlt
mov
mov
mov
mov
loope
pop
sub
sbb
inc
or
xor
inc
(bad)
adc
ret
lahf
aas
mov
bound
jo
mov
cmp
lds
lds
lea
iret
out
fadd
lock
(bad)
in
inc
or
pminsw
mov
outs
inc
xor
fs
add
ins
in
int
les
test
dec
ins
mov
loope
rcl
shl
nop
xchg
cmp
jle
loope
fbld
xchg
adc
je
js
lock
pop
or
or
sub
mov
les
lods
inc
jp
cmc
jmp
dec
enter
cmp
ja
add
mov
fstp
mov
adc
sbb
sahf
jle
stos
mov
jnp
inc
(bad)
(bad)
fiadd
loop
push
cmps
sbb
push
lock
inc
cmps
push
movs
mov
test
pop
sbb
stos
add
push
push
push
ret
shl
adc
push
mov
fs
inc
call
push
addr16
xchg
dec
popf
jmp
sbb
sub
dec
rcr
pop
push
(bad)
sbb
inc
dec
jns
int
stos
clc
lea
in
int3
add
addr16
nop
or
mov
into
adc
jb
imul
xlat
and
(bad)
repz
or
inc
mov
adc
inc
mov
push
ret
test
into
inc
sub
cmp
push
ins
mov
add
neg
mov
fst
frstor
xor
fst
and
dec
mov
sub
xchg
int
mov
loopne
jmp
inc
ret
dec
push
int
sub
ss
xchg
jne
das
rcl
push
mov
mov
dec
in
stos
and
sub
ss
loopne
add
shl
cmc
shl
sbb
or
xchg
adc
adc
xchg
fist
ror
mov
mov
loopne
aad
cdq
sbb
mov
enter
test
push
hlt
out
or
ss
mov
jecxz
xchg
xor
stos
fisubr
and
jl
mov
rcr
(bad)
mul
dec
push
es
ins
cmc
fild
and
xchg
mov
mov
jnp
sbb
xor
sub
add
in
mov
faddp
push
movs
mov
sub
add
sub
or
ficom
aas
inc
mov
xchg
jnp
out
add
sub
aas
aam
loop
call
mov
ss
in
xchg
pop
ss
ins
addr16
aaa
fwait
jmp
mov
xchg
sbb
call
imul
xor
das
lock
cmps
imul
stc
in
jns
cmp
fdiv
mov
xor
daa
rcr
pop
xchg
fldenv
test
imul
mov
sbb
sub
pop
push
mov
ror
sbb
clc
aam
sub
fist
arpl
aas
push
sahf
sbb
int3
rol
xor
(bad)
dec
imul
cmc
out
fbld
ret
xor
das
push
lahf
adc
cmp
cli
adc
in
outs
imul
inc
ror
imul
imul
fsubr
cmp
(bad)
jmp
adc
mov
xor
mov
push
sub
adc
scas
inc
scas
loope
inc
out
call
sbb
mov
mov
dec
jno
repnz
pop
mov
fs
repnz
pop
ins
mov
out
or
and
dec
out
mov
xor
cld
out
xchg
xor
mov
data16
jmp
or
or
cmp
pop
aad
mov
push
push
mov
ror
popa
(bad)
loop
hlt
(bad)
shl
mov
fistp
jg
push
(bad)
es
push
push
and
inc
les
outs
mov
les
loopne
shl
in
sbb
das
hlt
mov
into
mov
outs
inc
dec
adc
mov
dec
cmps
shr
jecxz
jbe
inc
fistp
xchg
call
sbb
pop
dec
fdivr
push
out
mov
(bad)
mov
jle
dec
jle
icebp
add
and
je
gs
js
gs
adc
xchg
sbb
icebp
xchg
shl
xlat
dec
add
loopne
aaa
xor
int3
jne
mov
push
adc
jl
sbb
gs
rcr
sahf
sub
mov
inc
mov
(bad)
in
popa
(bad)
mov
push
fild
in
mov
cmp
inc
stos
enter
ret
push
push
or
bound
mov
pop
outs
call
push
sbb
retf
sub
mov
xchg
es
fcomp
or
pop
dec
mov
cmp
sar
test
std
fst
or
das
ret
xor
shl
retf
lds
mov
dec
ror
cmp
(bad)
out
or
enter
add
adc
dec
and
popf
sbb
popf
popf
adc
dec
inc
jp
idiv
push
xchg
out
ss
pop
std
or
push
dec
mov
in
adc
loope
ss
adc
sub
js
push
and
jo
dec
inc
add
scas
cdq
xor
in
mov
call
mov
test
and
lods
mov
sub
xor
ja
sti
(bad)
in
(bad)
push
aad
mov
loope
popf
int3
jmp
xchg
xchg
fs
fldenv
inc
mov
push
jns
push
mov
pop
push
ins
arpl
hlt
add
jmp
mov
loope
mov
adc
sub
and
mov
rcl
repnz
sub
lods
fimul
or
dec
sbb
xor
dec
sahf
dec
or
cmp
sbb
xchg
and
pop
arpl
add
cmp
rcl
mov
icebp
sbb
adc
xchg
mov
dec
push
mov
and
cdq
idiv
adc
jmp
aad
mov
mov
dec
ror
mov
jg
out
cmp
jp
add
inc
mov
neg
push
cmc
add
mov
add
(bad)
dec
dec
or
gs
mov
in
inc
add
adc
imul
neg
ja
hlt
push
stc
test
or
jns
sti
ja
sahf
adc
retf
mov
mov
ss
push
jno
(bad)
loopne
int3
xor
and
cld
arpl
push
or
jne
dec
cmp
les
or
shl
addr16
ret
mov
dec
xchg
pop
js
adc
movs
push
ds
mov
pop
lock
(bad)
lds
or
pop
loope
cmp
mov
lea
std
inc
retf
fs
add
movs
cmp
out
call
and
xchg
cdq
jle
mov
cdq
jge
mov
xchg
xor
imul
dec
outs
cmp
cmp
sub
pusha
test
or
mov
mov
ror
cs
rol
enter
adc
aad
imul
into
cmp
fisttp
cmp
jbe
test
popf
popf
cwde
xor
sbb
jmp
push
inc
test
mov
inc
inc
jno
scas
jns
jbe
ret
push
pusha
pop
leave
enter
jp
jg
in
xor
outs
(bad)
fld
xor
cmp
mov
sahf
std
movs
mov
and
outs
push
lock
sbb
test
mov
mov
adc
arpl
cmp
adc
aaa
cmp
sbb
mov
fistp
in
mov
sub
lea
jbe
sbb
pop
stc
fwait
ja
fsubr
out
jle
outs
adc
repnz
xor
shl
aam
lods
fs
sar
stos
loopne
sbb
idiv
xor
cmp
mov
push
outs
bound
shr
mov
jo
aad
mov
dec
jmp
data16
shl
pop
pop
mov
rcr
push
test
xchg
icebp
(bad)
cmp
scas
imul
and
ss
mov
out
xor
fld
mov
mov
push
je
sbb
xor
add
jne
repz
fsub
mov
rol
loope
fdivr
ret
sub
hlt
add
inc
in
inc
push
inc
push
mov
fwait
add
add
push
ret
pop
dec
pop
mov
das
retf
pop
jg
popa
sbb
push
mov
mov
pop
or
add
mov
into
fcmovu
sbb
add
enter
cmp
push
nop
jle
iret
inc
add
je
gs
mov
test
sahf
sub
dec
sub
retf
imul
mov
out
jmp
scas
frstor
push
push
push
add
les
mov
out
(bad)
idiv
and
xchg
jno
mov
sub
mov
add
ficom
ins
mov
jecxz
adc
or
inc
dec
jmp
mov
iret
pushf
adc
(bad)
pusha
cmps
mov
std
push
sub
inc
sub
loopne
or
add
out
popa
pusha
cmp
out
loope
mov
mov
imul
and
adc
ret
push
sub
fstp
and
mov
ficomp
imul
jp
xor
loop
fistp
jl
sub
mov
or
in
jbe
repnz
mov
jl
add
xor
dec
in
xchg
leave
sbb
or
jmp
mov
mov
xor
lods
lods
(bad)
shl
push
ja
sub
sub
add
xchg
mov
aas
retf
cmp
dec
scas
xor
int
mov
mov
(bad)
sbb
rol
adc
jp
loop
ja
imul
add
add
adc
xor
mov
jb
xlat
push
mov
adc
jg
(bad)
xchg
loopne
sub
sub
jl
cmp
mov
cmps
loop
popa
out
mov
mov
mov
sbb
repz
out
loop
inc
dec
pop
stc
adc
cdq
add
sti
fiadd
push
jl
cs
mov
(bad)
mov
scas
es
pop
inc
dec
dec
mov
cmps
stos
or
xchg
mov
dec
test
lock
loop
fstp
movs
dec
mov
xchg
ins
inc
loopne
fisttp
add
pusha
iret
pop
nop
dec
inc
xor
xor
test
out
sub
call
sub
inc
dec
mov
jbe
in
imul
dec
jnp
aad
jl
pop
inc
push
jmp
add
add
cdq
push
popf
je
sbb
stc
jbe
pop
mov
fstp
cmp
pop
sbb
sub
pop
pop
pop
sbb
xor
enter
lds
outs
xor
out
or
mov
jns
sar
fiadd
adc
mov
xchg
dec
test
sub
loop
push
mov
cmps
pop
movs
mov
pop
addr16
and
(bad)
rol
mov
dec
retf
dec
mov
aad
data16
hlt
in
mov
fcmovnb
hlt
mov
adc
and
(bad)
mov
cli
(bad)
jns
cmp
mov
mov
pop
sub
shl
ins
pop
mov
pop
popa
stos
push
adc
cdq
loope
hlt
test
imul
and
inc
into
pop
dec
pop
jns
pop
sub
mov
or
and
cmp
mov
dec
jnp
mov
dec
inc
inc
repnz
sbb
gs
push
imul
lahf
cmps
pop
sbb
xchg
add
sub
cld
fld
mov
imul
jbe
mov
and
cs
cmp
cmp
and
lahf
inc
inc
out
or
int3
push
and
enter
cmp
jge
(bad)
loope
mov
jle
mov
lods
mov
fnstenv
xor
es
sahf
arpl
add
loopne
cmp
(bad)
gs
call
js
jns
faddp
rcr
fsubr
mov
xor
addr16
jnp
cmp
xor
pusha
pushf
push
cmp
xchg
retf
or
xor
aad
dec
cmp
xchg
xchg
add
and
add
sbb
mov
jno
fdiv
push
push
mov
outs
icebp
add
mov
subps
pop
cwde
mov
xor
std
cli
in
es
inc
push
add
push
dec
pop
xchg
sub
sub
push
cli
mov
inc
push
sbb
aad
retf
mov
sbb
mov
and
dec
cdq
das
cs
sub
mov
in
inc
inc
in
xor
jge
cs
mov
sub
imul
je
mov
pop
xor
mov
add
(bad)
aad
xor
das
sahf
push
pop
pop
push
pop
mov
outs
das
pop
cmp
pop
xlat
inc
(bad)
clc
sub
push
add
fcmovne
mov
jmp
inc
cwde
or
jae
xor
mov
add
cmp
call
out
movs
push
pop
shufps
push
sete
push
rcl
sbb
pop
std
sbb
movs
xchg
xchg
(bad)
sub
test
pop
push
(bad)
xor
xor
retf
or
cmps
sahf
inc
inc
mov
xchg
call
outs
push
inc
scas
movs
sub
lods
cmp
hlt
idiv
repz
push
dec
scas
pop
dec
mov
shl
lds
jge
jp
adc
sar
aad
push
xchg
outs
fld
lds
test
push
push
mov
xchg
ins
popf
pop
js
je
(bad)
cmp
xchg
iret
mov
movs
mov
repnz
loope
push
nop
or
or
enter
lahf
test
gs
dec
mov
mov
xchg
outs
xchg
lds
and
adc
mov
fwait
test
cmp
dec
ret
loopne
jne
jp
xor
mov
add
pop
mov
aad
dec
jecxz
jmp
repnz
cli
bound
xor
jae
ins
cmps
fiadd
pop
jmp
dec
add
add
in
rep
xchg
mov
and
(bad)
xor
in
mov
dec
ja
sbb
adc
cmp
adc
push
imul
and
dec
ds
pop
mov
fs
mov
aaa
jle
add
xchg
xlat
jne
xor
je
aas
repnz
enter
or
call
bound
sub
ds
xor
jbe
stos
in
jge
call
retf
mov
cmp
imul
xchg
mov
icebp
out
data16
jl
add
xchg
sub
cli
mov
aaa
add
fst
jp
jns
add
dec
pop
jle
loope
aad
je
fs
xchg
mov
pop
aam
in
xor
mov
mov
test
scas
pop
push
push
shr
push
mov
stos
mov
sbb
sahf
pop
cmps
mov
je
inc
in
cmc
popf
xlat
mov
push
(bad)
xor
mov
dec
ins
jno
scas
xor
pop
inc
cmp
sub
mul
and
ja
shl
leave
or
call
outs
imul
sub
cmp
lahf
jge
or
adc
ret
or
or
retf
or
jne
pop
outs
inc
loop
push
sub
xor
jo
sar
sub
push
pop
mov
or
mov
fs
mov
pop
scas
and
popa
rcr
jg
(bad)
imul
push
mov
outs
sub
push
mov
scas
cmp
xlat
and
jb
in
(bad)
out
fnstcw
stos
push
aaa
(bad)
imul
dec
xchg
sbb
mov
mov
mov
jb
push
cmps
fadd
repz
ffreep
cmp
(bad)
scas
or
rcl
adc
cmc
xchg
pushf
call
jl
(bad)
and
repnz
rcr
iret
pop
fnstcw
mov
shl
sahf
outs
ds
mov
push
jp
loope
and
jns
and
ror
sbb
pop
bound
fs
jns
jnp
faddp
and
xor
ficom
stc
arpl
sbb
mov
add
or
shl
in
mov
add
inc
mov
lea
hlt
xchg
(bad)
mov
loopne
cld
mov
pop
iret
push
jecxz
outs
adc
pop
fidiv
in
lods
shl
mov
jmp
push
stc
and
das
scas
cdq
or
cli
or
in
xchg
pop
mov
or
cdq
mov
rol
ins
and
and
mov
xchg
sbb
cdq
push
jmp
xchg
mov
pop
sub
mov
or
push
pop
js
js
(bad)
mov
lods
ins
les
dec
sbb
sbb
or
adc
xor
jbe
adc
push
inc
pop
mov
shl
jno
repnz
inc
fist
enter
mov
mov
in
(bad)
jb
scas
or
or
ds
sbb
out
mov
sti
jmp
cmp
inc
(bad)
lock
or
and
(bad)
push
cmp
xor
xor
fwait
cld
push
outs
and
lock
imul
jle
repnz
in
sbb
mov
push
xor
test
arpl
cmps
adc
push
mov
ss
jae
xchg
adc
and
add
fs
push
rcr
jecxz
mov
push
adc
xchg
sub
sub
cmp
cmps
popa
or
(bad)
mov
mov
lock
mov
dec
pop
cmp
or
push
mov
ret
push
jno
sahf
sub
out
jle
push
pop
dec
mov
sub
or
xchg
aad
dec
call
push
rcl
cwde
mov
cdq
inc
xchg
sar
mov
xor
jns
sub
xchg
js
cmp
out
add
stos
jl
mov
or
cmp
adc
mov
xchg
xor
mov
jne
mov
fwait
mov
imul
and
push
dec
aad
push
mov
loopne
std
mov
or
add
and
psubusw
push
out
add
xor
movs
(bad)
and
jo
cmp
xchg
xor
hlt
add
cmp
xchg
movs
jnp
in
xchg
fstp
or
mov
lock
cmps
jb
call
cmp
scas
pop
jo
dec
ror
xor
push
gs
push
sbb
push
pop
jb
lods
add
loope
rol
xor
out
(bad)
cmps
dec
xchg
or
fld
(bad)
fmul
push
arpl
mov
into
sbb
popa
pop
sbb
stc
jle
sbb
icebp
and
xchg
test
inc
xchg
cmp
and
dec
sub
push
jne
fidiv
pop
addr16
and
cld
out
aad
aam
cmp
icebp
push
icebp
xor
inc
add
adc
adc
daa
(bad)
fldcw
dec
sbb
sub
scas
rol
fld
dec
loop
js
or
fcom
adc
add
aad
add
ror
jb
js
mov
cmc
cmps
sbb
cwde
cmp
cwde
jns
lea
push
(bad)
add
xor
test
mov
dec
loopne
addr16
mov
imul
ror
imul
xchg
rol
int
xor
sti
in
pop
cmp
cmps
aaa
mov
loopne
div
mov
popa
xchg
in
popa
not
sub
xlat
and
adc
das
mov
add
add
pop
retf
fs
adc
sbb
lods
inc
xchg
cmp
sahf
out
pusha
jle
mov
push
adc
inc
cld
mov
js
icebp
pusha
sbb
test
cmps
call
lea
pop
inc
arpl
pop
bound
ins
(bad)
xchg
mov
popa
pop
sub
add
cmp
movs
cmc
dec
lahf
sbb
cmc
dec
mov
and
retf
int3
or
mov
mov
jb
cmp
xchg
push
fmul
cdq
aas
cwde
and
outs
xchg
xor
pusha
sbb
movs
mov
mov
sub
mov
jb
ret
xchg
retf
mov
repnz
mov
rcl
icebp
scas
mov
jmp
or
add
jmp
push
push
xchg
xchg
das
cmp
pop
jmp
inc
sub
push
mov
and
cli
sub
dec
lahf
loopne
mov
jns
and
xchg
dec
mov
pop
popf
cs
jmp
leave
push
es
xchg
mov
dec
gs
mov
pop
fild
jns
or
cs
mov
rcr
cli
adc
and
mov
push
dec
jmp
pop
jecxz
push
jne
mov
jl
iret
pop
or
enter
inc
cmp
jno
mov
cmps
mov
in
call
leave
pop
jns
xchg
add
sbb
leave
add
pop
jno
test
adc
inc
repz
cmp
xchg
push
pop
inc
push
and
mov
call
xchg
mov
ds
sub
mov
pop
hlt
ds
adc
add
pop
add
lea
mov
(bad)
cmp
repnz
and
mov
jp
or
loope
popf
retf
(bad)
lods
push
stos
mov
lods
repz
mov
xor
bound
(bad)
test
int
mov
mov
data16
(bad)
mov
jne
int3
pop
sbb
test
and
sub
add
call
jmp
int3
movs
ds
push
movs
stos
(bad)
mov
mov
cmp
shr
xor
lods
loop
inc
dec
sub
xchg
fistp
jg
pop
fst
iret
mov
scas
add
shl
jecxz
and
pop
sub
out
cmp
mov
or
sub
xchg
and
adc
xor
xchg
sub
pop
mov
cmp
mul
test
cmp
mov
mov
push
and
push
cld
cmps
mov
mov
aaa
fsubr
mov
cmc
jle
pop
push
mov
(bad)
adc
xor
ins
sar
sbb
mov
test
ins
int3
push
jle
xor
lods
into
adc
ja
stos
jmp
mov
cmc
dec
(bad)
outs
or
in
arpl
gs
neg
fmul
push
mov
jle
mov
sbb
cmp
ror
jne
and
mov
push
stos
jge
and
stos
sub
lods
xchg
pop
and
in
(bad)
sub
and
xor
xchg
jbe
xlat
cli
test
outs
mov
aaa
push
cmp
dec
jo
and
mov
cwde
dec
or
pop
xor
fistp
mov
push
dec
pop
aad
retf
cdq
call
mov
stos
add
iret
pop
loop
xor
push
std
test
lds
cmp
(bad)
pop
ss
add
sti
mov
les
(bad)
scas
lock
inc
aas
outs
cli
test
cmp
mov
cli
shr
cld
hlt
jns
mov
sub
(bad)
sti
or
dec
repz
call
mov
leave
(bad)
mov
mov
push
les
sahf
add
jne
push
sbb
mov
dec
push
pop
add
xchg
dec
mov
scas
add
arpl
ret
push
push
cdq
jnp
xlat
repnz
cmc
pop
pusha
fadd
mov
bound
jmp
mov
push
lods
stos
xlat
pinsrw
pop
ins
mov
pop
inc
dec
idiv
pop
mov
jb
ins
mov
and
xchg
ret
xor
hlt
pushf
mov
cwde
out
loope
mov
lahf
sbb
ins
test
rcr
test
es
or
imul
mov
cmc
xor
cmp
popf
pusha
cmp
cmp
cmp
push
int3
mov
hlt
jne
fld
test
xchg
into
or
or
fidivr
pop
or
daa
aad
cs
stos
pusha
cld
dec
repz
add
aas
sbb
jmp
in
lds
fdiv
cwde
inc
jne
jae
adc
sbb
add
das
call
pop
loope
or
cdq
sbb
popf
jg
jmp
dec
add
loopne
ja
imul
sahf
add
cmp
fld
leave
mov
mov
adc
lahf
jge
push
jae
and
xor
test
dec
and
and
cdq
gs
xchg
pop
or
inc
inc
push
rcl
mov
ror
cmp
call
shl
sub
neg
add
(bad)
push
adc
push
jg
mov
mov
loope
lahf
mov
and
sbb
outs
pop
jle
out
in
xchg
xchg
aam
(bad)
pop
sub
sbb
mov
cli
cmp
xor
cli
out
add
adc
call
cmp
and
call
xchg
(bad)
pop
push
cwde
in
test
rol
mov
punpcklwd
(bad)
jbe
xchg
mov
push
cmp
adc
jmp
pop
fisttp
pop
and
sahf
test
mov
shl
(bad)
xlat
std
adc
int
or
cdq
call
dec
loope
test
adc
popf
mov
cmp
mov
sahf
leave
clc
je
ja
outs
xor
cld
xor
popa
inc
fmul
outs
adc
sub
fist
or
xor
frstor
movs
mov
std
and
out
scas
lods
pop
mov
cmc
lock
fstp
enter
or
sbb
std
cmc
or
push
(bad)
cmp
js
int
mov
call
ins
mov
inc
mov
pop
in
jnp
mov
enter
es
rcl
mov
mov
idiv
(bad)
iret
daa
push
xchg
scas
mov
lods
sub
outs
push
and
inc
popa
addr16
jg
mov
jg
ja
mov
lods
fstp
cmps
retf
ins
outs
push
test
push
push
xor
dec
pop
out
mov
push
cli
adc
shr
or
call
lahf
cmp
aaa
mov
mov
sahf
lahf
shl
lock
jb
xlat
adc
popf
xor
dec
popf
fwait
jnp
pushf
inc
adc
ror
inc
xchg
test
fbld
cmp
addr16
iret
jbe
jns
lods
push
inc
cmp
mov
and
retf
in
clc
das
imul
mov
add
dec
mov
arpl
mov
pop
aas
push
imul
jo
daa
push
xor
test
movs
lds
(bad)
jmp
(bad)
push
mov
(bad)
push
push
hlt
adc
icebp
int
clc
and
into
xor
loope
pop
jmp
xchg
in
adc
mov
adc
ds
cmps
jg
aad
pextrw
dec
sub
mov
dec
pop
movs
ins
mov
push
adc
dec
xchg
mov
sub
aas
cli
inc
rcl
dec
mov
lods
dec
mov
aaa
and
jnp
dec
ret
stc
aaa
in
mov
mov
into
mov
sahf
movs
sar
ret
fs
fldenv
push
js
cmp
mov
or
inc
push
or
mov
xor
sub
test
cmp
loope
mov
leave
sti
push
sub
cmp
inc
dec
jmp
sub
cmp
xlat
in
push
inc
les
in
imul
xor
lods
pop
test
add
sbb
call
ins
pusha
pushf
and
sahf
lahf
rcr
lock
pop
clc
movs
aam
adc
lds
retf
scas
mov
add
nop
push
jle
test
stos
adc
sub
inc
das
rcr
sbb
fadd
mov
inc
or
push
pop
add
adc
and
daa
jb
int
cmp
or
adc
push
call
iret
jmp
aas
lahf
mov
pop
fs
jecxz
mov
(bad)
sbb
and
pop
jmp
add
mov
mov
stc
push
out
pop
aas
das
aam
add
inc
sub
pop
cld
pop
test
or
leave
test
scas
gs
sub
xor
ja
les
inc
pop
add
xchg
cmps
mov
in
bound
out
jbe
addr16
push
das
daa
addr16
pop
lea
jmp
pop
mov
xchg
mov
fisttp
inc
fisttp
pop
xchg
add
call
inc
mov
stc
sbb
mov
sbb
dec
adc
out
sub
xlat
in
fild
ss
ja
inc
or
mov
(bad)
in
push
fistp
push
repz
ds
in
push
out
cld
add
mov
movs
neg
fdecstp
adc
cdq
je
int
pusha
cmc
sub
cwde
ss
xor
or
mov
retf
push
movs
das
sbb
rcl
mov
lock
mov
mov
stc
pop
shl
push
loope
outs
test
jecxz
xlat
dec
mov
sbb
adc
cmp
test
mov
pushf
mov
or
mov
sbb
fldenv
mov
cwde
fucom
aam
xor
mov
pushf
out
xor
cmps
shl
cs
outs
test
sub
and
cmp
mov
lahf
ficomp
cmp
inc
out
(bad)
cwde
ret
test
mov
inc
mov
shr
push
add
mov
xlat
mov
jnp
xchg
dec
aas
and
push
out
in
mov
xor
out
es
in
ins
cmc
or
aaa
popf
shl
jle
adc
lea
push
push
in
shr
xor
in
adc
aaa
cmp
pop
es
and
call
ja
loope
push
aam
out
and
xor
mov
push
dec
pusha
ret
scas
push
les
daa
jno
or
mov
push
mov
je
call
xchg
pop
retf
aam
adc
std
mov
sbb
ja
and
xchg
lods
ins
and
inc
retf
xor
addr16
add
cs
(bad)
xor
(bad)
ret
loop
and
outs
adc
push
fsub
mov
scas
dec
lahf
ins
(bad)
fsubr
scas
ins
mov
int3
sbb
imul
xor
scas
out
out
cmp
rcr
pop
iret
pop
push
mov
cmp
arpl
repz
mov
call
imul
ret
ins
les
jmp
rol
push
scas
into
fsub
xchg
ret
pop
imul
mov
pop
sahf
div
int
(bad)
adc
sbb
mov
xchg
and
mov
push
(bad)
test
(bad)
int3
pop
sub
scas
sahf
mov
stc
add
and
cmc
cmp
or
pop
mov
xchg
test
push
mov
or
imul
mov
dec
push
addr16
movs
out
popa
movntps
mov
test
mov
mov
jbe
call
jecxz
push
jmp
inc
or
dec
je
jecxz
xchg
test
fsub
xor
test
xchg
pusha
mov
pop
xor
stos
aad
and
and
dec
push
inc
mov
(bad)
pop
inc
xchg
xor
mov
inc
and
movs
mov
sbb
pusha
sbb
out
jmp
push
adc
adc
data16
scas
xor
sbb
pop
sbb
clc
adc
addr16
dec
aas
out
add
into
sub
xchg
ror
(bad)
fstp
add
(bad)
sub
sbb
add
xor
popf
push
sub
sbb
aam
mov
ds
ss
outs
xchg
in
push
mov
xor
pop
mov
add
sub
test
sub
aad
or
sti
mov
cld
stos
mov
and
dec
xchg
jns
mov
mov
jmp
xor
add
xor
xchg
dec
sub
push
jmp
xchg
in
mov
xchg
data16
mov
cmps
jne
mov
mov
jmp
push
stos
pop
dec
test
in
nop
mov
and
out
push
pop
dec
jns
fisubr
xchg
pop
enter
cmp
(bad)
fild
cli
leave
mov
inc
cmp
and
(bad)
out
popf
leave
daa
or
pop
adc
and
cmps
mov
test
cmp
ja
outs
(bad)
adc
or
inc
loop
pop
push
sahf
jl
mov
jmp
xchg
pop
xor
out
xchg
mov
outs
mov
pop
es
or
add
cli
or
sbb
stos
mov
jle
mov
std
jecxz
icebp
in
repnz
jae
sahf
xor
cmp
jmp
lock
jmp
test
pop
outs
daa
stc
xchg
test
sbb
push
cld
xchg
xor
ja
cmp
sbb
pop
int
test
js
scas
add
mov
cmc
xchg
jmp
rol
push
in
sbb
loop
mov
pop
ret
les
cmps
xchg
fiadd
dec
(bad)
fstp
jbe
jmp
retf
xchg
xor
sbb
imul
int3
or
(bad)
jno
cli
push
dec
shl
jge
xlat
pop
push
out
les
inc
jecxz
fist
cwde
in
xchg
mov
pop
dec
loopne
retf
fimul
inc
(bad)
cs
push
and
pop
mov
sub
call
jnp
test
cld
mov
pushf
inc
fxch
jp
or
fdivr
xchg
mov
dec
add
mov
cmc
adc
fisttp
movs
add
mov
aas
mov
(bad)
adc
ja
add
sub
xchg
fcomp
icebp
mov
fadd
add
and
sbb
mov
mov
dec
shr
into
js
cmp
mov
dec
(bad)
test
int
sub
stc
rol
in
or
push
or
xlat
xchg
fmul
xor
nop
add
jae
xor
xor
push
movs
pcmpgtd
js
leave
cmp
in
out
ins
or
in
pop
jnp
ins
mov
test
jp
cmps
xchg
mov
xchg
jl
adc
or
movs
cmp
in
xchg
xchg
data16
clc
add
push
inc
call
fistp
mov
test
repnz
loope
xchg
cmp
jns
aas
popf
and
push
imul
in
rcr
add
sahf
cmp
inc
jo
data16
outs
pop
pop
in
jecxz
in
ins
iret
mov
das
aad
jmp
jecxz
jae
jl
mov
call
xchg
cmp
into
pusha
xlat
add
(bad)
jnp
into
xlat
or
xor
push
mov
int3
fnstsw
pop
mov
cmps
cmp
(bad)
lods
jo
fadd
push
fwait
push
xor
rol
jmp
in
js
gs
call
xchg
lahf
adc
jmp
imul
test
cmp
aas
sbb
mov
adc
ret
dec
xchg
loopne
movs
and
xor
out
fst
and
rcr
enter
icebp
repz
lods
in
jle
mov
xchg
sub
jle
jbe
mov
xchg
ret
xchg
mov
loope
cwde
mov
mov
jg
adc
lock
jp
adc
jecxz
popa
jnp
cmp
(bad)
sbb
ret
mov
dec
popf
gs
stos
inc
push
std
cs
or
mov
fs
sbb
test
push
push
daa
ret
jae
mov
sbb
loopne
dec
fistp
jle
mov
push
mov
inc
sti
movs
js
pushf
retf
add
imul
bound
lock
aas
loope
loop
push
push
pop
pop
stos
nop
neg
outs
out
enter
pop
jnp
push
push
call
add
ins
add
jmp
pop
int3
lods
repnz
out
sbb
(bad)
les
shl
mov
scas
pop
add
and
lods
jne
not
mov
cwde
push
add
xchg
adc
mov
xlat
test
xchg
push
pop
shr
bound
pop
jmp
dec
fistp
sbb
fmul
je
push
adc
int
add
shl
(bad)
xchg
mov
sbb
xchg
cmp
les
in
(bad)
stos
sub
pop
fadd
std
shl
(bad)
cmp
xchg
mov
mov
push
xor
pop
mul
sbb
xchg
jnp
jg
pcmpeqd
popa
mov
add
mov
shl
outs
inc
paddsb
leave
sahf
stc
ret
pop
or
cmp
ret
mov
jb
pop
cmp
inc
push
out
mov
pop
fild
push
mov
popa
jecxz
outs
jno
(bad)
add
retf
call
xor
test
ret
jo
jbe
mov
mov
mov
jae
pop
rol
loope
in
in
cmp
xor
mov
call
xchg
xlat
sub
dec
push
add
xchg
shrd
imul
cdq
pop
xchg
inc
xchg
out
pop
add
xchg
sar
lahf
aaa
fsubr
pushf
(bad)
dec
push
ins
jae
fs
pop
movs
cmp
jbe
mov
sub
fdivr
ins
sti
cs
in
fcomp
repz
pop
cmp
jmp
dec
xchg
pop
jmp
push
pusha
es
push
neg
(bad)
pop
sti
test
fld
hlt
add
fidiv
inc
fimul
jl
and
adc
jb
loop
xchg
or
test
cmc
scas
mov
imul
or
mov
mov
pop
sub
mov
push
es
outs
jecxz
clc
jnp
cmp
sub
xor
outs
mov
icebp
cwde
jl
ins
mov
cmp
pop
or
mov
push
fld
push
inc
dec
(bad)
shl
pop
rcl
sbb
or
clc
mov
aad
sub
pop
push
pop
jne
cmp
jnp
jmp
popf
clc
cmps
popf
fwait
push
sbb
pop
rcr
sti
jp
push
sbb
iret
mov
xchg
clc
jbe
push
into
push
inc
lds
imul
adc
jns
sahf
(bad)
stos
ret
in
arpl
cwde
push
popf
mov
cmps
xlat
xor
lock
mov
outs
xor
xor
stos
add
inc
out
jb
cmp
and
aam
mov
fadd
cmp
sbb
(bad)
leave
ins
xchg
dec
inc
fldenv
jnp
inc
repz
mov
in
cmp
mov
fs
fidivr
add
lock
and
cli
mov
sbb
or
(bad)
mov
mov
das
test
imul
mov
mov
out
mov
lods
pop
dec
out
icebp
xlat
inc
mov
sbb
adc
and
fldcw
gs
xchg
daa
pop
sbb
jmp
sub
xor
or
imul
mov
pop
jae
push
mov
push
imul
mov
pop
stc
(bad)
cmc
xor
push
inc
out
loop
push
(bad)
mov
fnstsw
cmp
mov
je
pop
dec
clc
call
in
dec
xor
cmp
icebp
mov
loopne
inc
fwait
rcr
pusha
movs
sbb
ficomp
inc
xchg
mov
mov
mov
and
sub
fild
cmc
arpl
mov
or
add
cmp
movs
test
adc
cwde
cld
mov
mov
in
adc
sti
jmp
mov
jb
mov
popf
jecxz
and
push
mov
fadd
in
xor
xchg
out
dec
retf
push
dec
add
pop
jo
cmc
push
lods
dec
leave
mov
cmp
or
jb
ffreep
push
jecxz
pop
pop
xor
test
jo
add
jmp
int
mov
test
push
outs
in
jp
xor
(bad)
xor
push
push
cdq
cmp
adc
adc
movs
mov
xchg
cmp
fcomi
ret
sub
sbb
cmp
jbe
pop
xor
xor
mov
sub
cld
outs
cmp
sbb
imul
in
push
mov
shl
inc
(bad)
ds
pusha
repnz
cld
sub
push
dec
jge
xchg
jge
sub
jmp
ins
add
pop
shl
inc
lock
out
mov
jecxz
jp
xchg
icebp
lock
or
repnz
in
(bad)
loop
cmp
pop
jle
sub
xor
call
sub
adc
shl
aam
popa
call
(bad)
adc
in
pop
push
pushf
lea
and
lods
xor
xchg
test
retf
outs
cmps
lds
cli
jno
dec
arpl
shr
out
icebp
mov
mov
jns
adc
(bad)
test
cli
jb
mov
pop
lea
ret
jne
sub
pop
push
scas
sbb
or
out
fimul
ss
mov
enter
cs
ds
fs
pushf
xchg
sti
pop
pop
inc
lea
push
xchg
into
cmps
mov
mov
test
add
xchg
in
inc
mov
xchg
jne
xor
cmp
push
mov
xlat
lods
idiv
scas
and
jne
imul
mov
lock
es
je
ins
test
std
loop
gs
cs
movs
add
aas
and
mov
lea
add
hlt
test
in
inc
aam
aam
clc
and
mov
aas
scas
out
call
mov
xchg
add
repz
sub
fnstcw
lock
idiv
clc
cld
loopne
push
inc
xchg
push
(bad)
shl
cmp
stos
sbb
mov
jns
aaa
cmp
ror
imul
mov
loope
pop
dec
mov
mov
jg
cmp
push
clc
lods
fld
inc
xor
aad
scas
mov
pop
jmp
fsubr
or
add
mov
mov
push
or
jns
sbb
in
out
(bad)
inc
push
bound
mov
push
sub
out
js
mov
mov
ret
sbb
sub
sti
xor
add
mov
adc
push
adc
pusha
fisub
jb
(bad)
mov
out
dec
aas
push
retf
xchg
cdq
imul
call
push
xchg
(bad)
jecxz
push
xlat
dec
inc
(bad)
outs
mov
sbb
dec
int
mov
scas
daa
rcr
call
adc
cmp
push
sbb
xchg
arpl
fwait
cmp
mov
jmp
faddp
push
inc
int
pop
into
xor
fwait
xchg
cmp
maskmovq
not
push
dec
and
nop
(bad)
jno
outs
xor
push
stc
mov
jmp
fwait
dec
retf
or
cmp
mov
test
sbb
leave
bnd
repz
scas
icebp
inc
clc
xchg
stc
xchg
mov
jne
mov
ins
ds
inc
xchg
data16
add
cdq
cs
shr
xchg
lods
sub
lods
add
push
int3
pusha
pop
in
scas
jae
in
and
pushf
pusha
push
cmp
clc
fsubr
cmps
pusha
xor
cmp
pop
imul
xchg
idiv
inc
pop
addr16
outs
nop
lea
lods
mov
mov
stos
std
nop
imul
lahf
dec
rol
add
sub
dec
or
ret
fwait
adc
sbb
jg
sbb
dec
rcr
pop
imul
enter
jno
imul
imul
mov
je
(bad)
cli
add
xor
dec
aas
stos
push
ret
push
pop
ret
mov
shr
sbb
xor
test
push
pushf
das
fcomp
pusha
pusha
fldcw
cmp
xchg
retf
xor
pop
add
arpl
jle
out
addr16
arpl
outs
or
(bad)
xchg
cmp
pop
mov
fcomip
adc
enter
jne
and
or
mov
mov
shl
push
imul
sub
mov
stc
pop
neg
adc
iret
cmps
pop
int
fwait
pop
pop
loope
pushw
mov
mov
pushf
mov
cli
loop
(bad)
popf
(bad)
repnz
in
xchg
cmp
dec
jne
loop
in
sar
push
inc
cs
loope
mov
stc
mov
out
sbb
iret
sbb
fwait
cmp
popa
outs
ds
jmp
sbb
cmps
stc
std
mov
pop
jae
nop
rol
mov
inc
adc
add
adc
jmp
jle
dec
cmp
outs
sub
arpl
dec
test
mov
inc
xchg
mov
in
inc
sub
cdq
inc
aaa
mov
fidiv
jno
adc
xor
icebp
les
dec
or
loopne
(bad)
jbe
lock
dec
js
mov
xor
lds
cs
repz
(bad)
xchg
cmp
jno
cmp
ins
addr16
inc
in
mov
aas
ins
aaa
cmp
pop
jge
pop
fcomp
cli
idiv
popa
call
stos
push
cmps
jmp
fs
xchg
cmp
std
sub
mov
xchg
jo
and
mov
stos
push
cdq
xchg
mov
or
and
sbb
cwde
mov
or
mov
push
dec
fdiv
sub
iret
mov
inc
sub
outs
add
dec
push
jge
xchg
and
sbb
mov
inc
adc
ins
fmul
dec
clc
test
scas
mov
or
or
dec
sub
push
loope
lds
xchg
mov
push
push
loopne
cmps
push
iret
popf
sbb
push
ss
add
in
inc
or
in
scas
sub
gs
test
pusha
add
cmp
call
ins
mov
add
ins
jp
js
mov
loope
mov
scas
ficomp
not
pop
cdq
outs
sub
aad
aad
pop
pop
ins
outs
pop
cmc
mov
fisub
loope
(bad)
inc
push
add
and
xchg
(bad)
push
popf
ficom
clc
or
in
stos
call
jns
ret
jg
sub
cdq
xor
push
or
mov
(bad)
adc
icebp
popf
retf
pop
push
(bad)
dec
loope
div
sub
push
psubsw
sahf
mov
cmp
or
mov
jmp
arpl
jecxz
fsubr
mov
push
inc
push
ins
mov
inc
jno
call
lea
sub
and
lds
out
sbb
jns
scas
pop
pusha
call
cmp
pop
mov
sbb
dec
and
mov
fild
jo
jmp
imul
inc
push
test
add
(bad)
lods
aas
out
shl
dec
cmp
push
push
mov
lods
pop
jnp
xchg
sahf
lods
push
shl
ficom
js
mov
addr16
push
mov
scas
in
popf
mov
and
mov
jl
fwait
ins
pop
sub
lahf
xor
jl
stos
jnp
ins
dec
icebp
cmp
mov
fwait
sub
loopne
push
(bad)
mov
loop
xor
jge
sub
add
test
or
jmp
cmp
dec
bound
das
adc
xor
lds
ds
push
call
daa
cmp
pop
cwde
mov
jg
lds
in
cmp
in
push
(bad)
bound
lods
cwde
add
dec
mov
int
push
and
mov
in
ret
enter
sbb
ins
sbb
jns
in
ficom
lds
nop
ret
add
adc
push
imul
in
pop
je
addr16
mov
scas
mov
dec
(bad)
(bad)
mov
loopne
or
add
xchg
sbb
rcl
mul
mov
xchg
movs
fld
jno
inc
stos
iret
adc
add
add
bound
and
push
(bad)
inc
(bad)
in
std
shl
lods
sbb
ret
mov
fs
add
xor
fisttp
cmp
or
js
adc
xchg
inc
fsub
add
jnp
xchg
hlt
shl
jp
xor
ret
in
call
push
adc
add
lock
pop
call
mov
test
jp
lea
push
stc
gs
fs
xchg
mov
jb
pop
out
mov
mov
test
ins
icebp
into
std
shl
(bad)
jns
mov
dec
push
pop
jb
jo
call
lock
lahf
dec
inc
sbb
daa
cmp
mov
jmp
push
leave
mov
aad
cmp
dec
out
inc
test
idiv
jns
cwde
xchg
test
fimul
in
mov
not
mov
cmp
iret
adc
fs
mov
pop
repnz
jecxz
shr
sub
mov
inc
cmps
idiv
adc
pop
pop
mov
in
repz
pop
call
cli
(bad)
adc
nop
enter
pop
int3
arpl
mov
or
call
jmp
and
popa
pop
pop
mov
dec
pop
aam
cmps
jmp
and
daa
pop
in
jg
pop
les
nop
sub
adc
inc
sub
and
xchg
ret
cmp
push
xor
mov
out
mov
jns
inc
mov
std
and
pushf
call
xchg
movs
jecxz
(bad)
mov
sbb
sub
sub
dec
inc
imul
(bad)
push
in
outs
in
and
sbb
out
add
sbb
sub
fild
push
adc
cmp
cmp
mov
mov
push
push
inc
js
mov
xor
xor
and
iret
inc
mov
or
push
in
mov
xchg
or
test
movs
pop
addr16
mov
lods
bound
mov
outs
push
xchg
sub
jne
loopne
sub
ficom
mov
js
pop
xor
mov
es
pop
test
mov
shr
nop
sbb
test
sub
dec
leave
inc
pop
dec
and
fild
ss
(bad)
or
test
call
(bad)
xor
pushf
cld
push
sub
fiadd
inc
push
scas
sbb
scas
mov
xchg
pusha
loop
cmc
lods
mov
retf
mov
movs
push
inc
retf
mov
in
jp
es
aaa
jp
int
out
push
cdq
(bad)
ds
lock
push
icebp
adc
fcmovnb
jno
xchg
cmp
lods
int3
jae
mov
addr16
jecxz
cs
pop
icebp
popa
(bad)
push
xchg
dec
push
jb
mov
cwde
(bad)
fmul
scas
xor
mov
je
mov
in
mov
das
fsubp
sti
add
pop
aaa
aas
add
add
push
jmp
mov
jbe
loopne
add
mov
sbb
pop
pop
test
fistp
jp
xchg
in
sti
adc
sub
pop
push
(bad)
lods
cmp
call
push
push
ins
inc
xchg
arpl
push
dec
adc
inc
adc
in
and
ret
test
jns
popa
sahf
retw
cmps
mov
xor
push
xor
inc
shr
xchg
adc
retf
cmp
in
test
push
std
leave
stc
xchg
imul
add
aaa
loopne
shr
jp
mov
dec
add
xchg
inc
repz
xor
fdivr
shr
jbe
jns
jp
inc
fdiv
inc
mov
push
(bad)
pop
xor
xor
or
xlat
retf
jo
and
je
fwait
jns
leave
push
int
push
add
repnz
dec
xor
fisttp
cld
push
lds
and
adc
fs
pop
test
mov
cmp
adc
dec
pop
push
sub
mov
arpl
call
stos
mov
imul
sbb
xchg
cli
call
call
sbb
mov
mov
ins
pop
pop
cli
pop
mov
cmp
cdq
jne
jmp
sub
push
jb
(bad)
mov
xor
jmp
xor
pop
out
aad
in
dec
add
std
sbb
xor
add
(bad)
enter
mov
ss
push
nop
pop
mov
dec
dec
mov
mov
sub
cld
lods
pop
fnsave
les
dec
and
adc
repnz
cwde
inc
sub
ins
sub
call
xchg
loopne
xchg
lds
xchg
shl
enter
dec
xchg
inc
pusha
repz
mov
inc
or
dec
(bad)
loop
cmp
in
mov
lods
mov
fs
sub
(bad)
mov
movs
sbb
mov
test
out
push
pop
je
mov
or
popf
(bad)
fimul
pop
ins
xchg
enter
cwde
jae
and
cld
test
idiv
cmp
(bad)
adc
ror
sbb
and
shl
xor
jne
cmps
sub
lods
cdq
daa
xchg
xchg
xor
mov
add
sar
pandn
mov
dec
mov
jb
mov
mov
enter
pop
and
jmp
jecxz
fisttp
mov
hlt
stc
es
jg
mov
sub
mov
cmps
xchg
mov
mov
dec
in
jbe
lea
xchg
adc
jmp
jmp
dec
data16
lea
loop
push
add
dec
es
and
(bad)
ror
cmp
rcr
adc
sbb
dec
sub
mov
mov
push
xchg
and
popf
ficom
adc
mov
in
jge
jbe
mov
cdq
mul
in
je
movs
movs
jle
das
out
loope
jno
retf
sub
xchg
mov
pop
push
ret
xor
into
sbb
push
idiv
adc
fwait
cmps
push
and
(bad)
xor
mov
data16
shl
pop
jmp
dec
jp
(bad)
(bad)
and
cmp
loope
sub
mov
sub
jne
stc
mov
or
loop
cmp
and
cs
les
push
inc
aad
xor
pushf
mov
push
repz
add
adc
jp
or
sbb
int3
mov
push
push
cli
xchg
lods
fadd
enter
movs
jmp
xchg
enter
pop
add
push
mov
xchg
adc
mov
add
mov
in
cmp
ret
cmp
pop
ja
add
pushf
xchg
ss
daa
xchg
xchg
lahf
and
sbb
frstor
or
ss
mov
std
iret
and
sahf
sbb
pop
push
(bad)
lods
movs
dec
inc
lea
fmulp
in
or
inc
sub
adc
mov
test
pop
popf
xlat
jbe
pop
cdq
mov
out
mov
retf
mov
sub
inc
add
inc
pop
enter
inc
mov
push
lods
push
sub
inc
adc
vhsubpd
push
sub
mov
sbb
in
fstp
pop
jno
mov
fbstp
jnp
push
fimul
pop
dec
or
xchg
jb
push
popf
xchg
aad
mov
mov
(bad)
int3
arpl
jge
dec
mov
cld
jecxz
ret
push
aaa
xchg
dec
jno
ja
pop
enter
and
std
jmp
es
ins
iret
outs
xchg
les
push
add
pop
add
scas
push
mov
sub
inc
push
pop
pop
inc
pusha
sbb
cli
test
mov
loop
add
movs
fadd
clc
adc
inc
or
hlt
int3
add
mov
(bad)
mov
dec
nop
outs
mov
cmp
add
popf
out
(bad)
dec
pop
ja
movs
inc
mov
in
clc
xlat
push
sahf
cdq
cmp
add
push
and
jg
pushf
cmps
mov
add
jne
aas
mov
mov
repz
mov
and
cmp
xchg
sti
sahf
fsubp
lea
xor
mov
jp
mov
loop
xor
cmove
sbb
int3
leave
mov
fnstcw
imul
sbb
in
sbb
and
sahf
pop
xchg
out
in
inc
in
xchg
adc
pop
adc
(bad)
ja
jnp
in
cmp
cmp
jl
inc
aad
xchg
(bad)
xchg
mov
and
add
ret
cmps
fadd
cmp
adc
enter
sti
retf
jnp
sub
jnp
push
es
retf
mov
push
or
aad
stos
lea
jb
adc
and
pop
popa
loopne
add
push
sub
lds
daa
xchg
inc
clc
push
inc
pop
fdivp
daa
xor
call
add
(bad)
addr16
jle
lods
add
inc
idiv
outs
lahf
cmp
push
popw
neg
push
clc
stc
add
push
pop
int3
dec
imul
adc
inc
stos
ret
add
mov
xor
add
push
mov
lods
into
shl
jp
ret
pop
ret
mov
ds
mov
add
mov
and
pushf
cmp
add
jmp
daa
adc
jle
or
mov
pop
mov
in
xchg
and
jp
cmc
lods
jle
sub
cwde
js
lds
inc
and
dec
test
adc
repnz
fcmovb
mov
sbb
add
push
scas
cmp
sahf
rcr
push
imul
push
jmp
mov
jle
(bad)
jmp
inc
jno
js
test
psubsb
cmc
je
retf
(bad)
jp
leave
xchg
jmp
dec
outs
jae
pop
or
int3
ret
fs
mov
icebp
(bad)
loope
repnz
ins
mov
not
xchg
xchg
mov
sub
xchg
mov
pop
add
cld
add
daa
out
xor
jnp
lods
and
pop
pop
dec
out
xchg
clc
cmp
mov
shr
jmp
cmp
or
psubd
int
aad
ficomp
cs
sti
cdq
jbe
adc
ins
cmps
test
fild
ds
cmps
add
push
nop
inc
iret
cmp
pop
adc
in
repz
(bad)
cmp
push
js
call
mov
(bad)
sahf
jns
fnsave
dec
addr16
inc
jmp
mov
gs
xor
jb
into
push
ss
enter
push
dec
jae
mov
pushf
or
sar
mov
daa
mov
bound
xchg
push
mov
aas
sbb
xchg
sbb
add
movs
cld
mov
call
sub
add
sahf
xor
es
cmp
push
mov
ret
nop
sti
nop
xor
outs
inc
push
pop
loop
mov
into
and
iret
nop
jge
(bad)
or
aam
adc
in
dec
dec
das
sar
mov
pop
jg
mov
rcr
and
cmc
dec
pop
std
cmp
out
xor
push
xor
js
int3
inc
aam
cmp
sti
sbb
dec
test
sbb
push
mov
call
pop
push
mul
pusha
mov
ret
ja
scas
out
psubusw
es
xor
clc
or
ret
adc
push
xor
data16
ror
push
les
loope
stos
loop
sbb
xor
push
mov
iret
push
push
sahf
inc
pop
dec
mov
mov
add
sahf
retf
mov
xor
mov
test
je
cld
pushf
push
xor
xchg
jnp
fsubrp
jg
fs
mov
and
retf
jp
(bad)
int
jnp
or
xor
aam
jl
mov
sub
add
aad
sar
retf
adc
imul
and
push
xchg
mov
cdq
mov
jno
mov
stos
nop
std
pop
arpl
pop
out
cwde
jno
les
xchg
movs
in
xor
lds
push
or
data16
cmps
imul
mov
int3
inc
mov
mov
mov
jno
mov
push
ins
jecxz
loope
ja
adc
lea
pop
mov
push
cwde
mov
or
loope
push
jle
push
rcl
sub
xor
pop
in
sbb
ret
mov
daa
jae
inc
sbb
xchg
cmp
call
cdq
jecxz
pop
adc
push
shl
mov
lock
mov
daa
ret
add
dec
add
imul
dec
ins
inc
adc
shl
push
cmp
ret
pop
or
cdq
mov
mov
inc
daa
jnp
pop
dec
aam
mov
adc
movs
xor
sbb
jmp
and
ds
ins
xlat
sub
cmps
add
in
add
lods
fisubr
jge
cmp
into
pop
jle
push
inc
(bad)
iret
outs
rol
fcmovnu
cwde
(bad)
das
mov
mov
int
pop
sbb
outs
xchg
loope
or
xchg
xchg
cdq
adc
mov
rol
xor
das
push
add
xor
popa
bound
int3
int3
jbe
call
pop
int3
pop
lds
mov
push
push
imul
in
lahf
inc
ss
ret
stos
repz
mov
hlt
sbb
call
mov
xor
cli
arpl
or
fs
cmps
add
xchg
xchg
sahf
cdq
cmc
idiv
xchg
pop
cmp
aam
push
add
pop
mov
mov
aas
mov
add
ja
sar
int
stc
or
and
frstor
lahf
mov
cli
bound
lds
hlt
jg
shr
cwde
push
test
repz
adc
gs
pushf
sbb
in
jnp
inc
bound
sahf
(bad)
cmp
jp
pop
xchg
leave
ss
or
sub
cmps
fisttp
stc
inc
mov
inc
sbb
hlt
ja
aaa
or
or
xor
popa
fsubr
push
movs
test
iret
out
push
pop
call
xor
and
or
in
outs
outs
mov
sbb
cli
sbb
shr
dec
enter
pop
outs
(bad)
cmp
jnp
cwde
or
lds
jl
outs
pusha
mov
adc
mov
jmp
jle
fidiv
stos
movs
fs
push
or
mov
dec
mov
pop
or
inc
ds
and
jnp
sbb
shl
push
fmul
sub
sbb
or
push
ins
in
outs
or
xchg
arpl
imul
adc
mov
(bad)
xor
aad
mov
push
mov
icebp
shr
popa
iret
jb
pop
jge
xchg
mov
adc
push
mov
fmul
push
fxch
inc
cmc
test
mov
aas
add
add
(bad)
in
out
mov
icebp
cmp
and
add
or
lock
int3
sub
pop
in
scas
xor
jbe
int3
mov
inc
inc
xchg
xor
sub
mov
call
fidivr
jmp
add
rcr
add
adc
js
cdq
mov
mov
add
xor
add
cwde
pusha
shl
mov
rcl
jae
mov
pop
push
pop
mov
sub
sub
sub
stc
fsubr
sub
imul
jp
mov
pop
cmp
lods
mov
xchg
outs
pushf
adc
xor
cld
mov
mov
jbe
jb
xor
arpl
lock
les
adc
inc
adc
mov
test
xlat
mov
sub
jge
fist
dec
xchg
jmp
shl
or
add
stos
and
call
pop
call
push
enter
xor
push
xchg
jmp
fst
mov
mov
push
sub
inc
inc
ins
inc
mov
jle
mul
push
jp
lods
out
cli
aad
mov
dec
adc
shl
jge
inc
jno
add
das
xchg
popf
and
ffreep
mov
mov
addr16
xchg
sahf
mov
(bad)
int
cmp
into
push
cmp
xchg
movs
mov
pop
and
scas
mov
nop
and
in
lea
jbe
push
cmp
div
cld
xor
mov
mov
aaa
lea
loopne
pop
ds
imul
dec
xor
jge
pop
cmp
mov
out
sti
dec
cmp
adc
sub
cmp
leave
mov
enter
or
push
retf
mov
popf
jg
fimul
les
loopne
pop
adc
xchg
pop
out
mov
sar
arpl
or
or
jnp
call
bound
fisttp
push
out
xor
lods
or
shl
cmc
sbb
xchg
test
sbb
xor
jmp
cmc
ja
xor
aam
sahf
sbb
adc
and
xlat
sbb
(bad)
sar
sbb
dec
shl
int3
mov
sti
aas
test
or
dec
sbb
add
jg
js
or
test
mov
lock
rol
pcmpeqb
test
dec
push
ins
inc
inc
inc
gs
fisttp
mov
jmp
xchg
aad
shl
mov
jl
inc
out
cmp
adc
mov
push
out
(bad)
mov
mov
jb
mov
aaa
fdiv
jbe
cmp
inc
xchg
shr
clc
retf
shr
inc
or
xchg
pop
addr16
xchg
movs
xchg
push
and
sbb
pop
jle
inc
pop
cmp
sbb
mov
stc
cmp
fidivr
mov
es
fld
sbb
pop
mov
sti
push
arpl
jge
in
jge
or
xor
pusha
pop
adc
pop
ja
push
add
jmp
mov
inc
mov
loope
rol
les
cmp
clc
or
jo
into
xchg
sbb
rol
mov
jecxz
dec
sbb
inc
mov
jmp
dec
jmp
mov
ds
imul
inc
add
pop
push
dec
pushf
retf
nop
repz
xor
fild
cmp
mov
and
push
hlt
(bad)
mov
movs
addr16
dec
test
out
out
add
xor
jp
push
ins
mov
xchg
and
mov
movs
sbb
push
push
mov
in
(bad)
jmp
xor
xor
sub
es
pop
sahf
or
mov
jns
adc
mov
or
cmp
adc
inc
mov
pop
mov
nop
outs
jmp
xchg
mov
mov
movs
push
out
int3
hlt
pop
dec
xchg
outs
pop
cmp
out
cmc
sub
sbb
add
push
fst
int
xor
pushf
inc
addr16
mov
jo
inc
gs
lods
adc
fldcw
cmp
add
jecxz
fisttp
lock
ss
(bad)
(bad)
mov
adc
adc
mov
test
fld
pushf
add
fs
mov
push
out
sub
xchg
aad
or
sbb
js
movs
xchg
(bad)
fisub
das
in
lock
push
xchg
inc
or
in
dec
mov
dec
loop
sbb
xor
adc
in
jecxz
mov
sbb
pop
cmp
pop
test
push
pop
mov
mov
push
je
movs
mov
neg
pop
in
lds
call
fcom
fadd
add
jge
in
jne
in
mov
ins
xlat
popf
push
inc
push
sub
xor
pop
shr
cmp
lahf
cmps
mov
rol
push
shl
sbb
in
dec
daa
(bad)
xor
push
pop
adc
test
lea
push
adc
or
ins
ins
push
sub
add
mov
ins
(bad)
mov
jecxz
loope
adc
adc
xor
outs
out
scas
into
clc
ret
hlt
in
sub
outs
mov
sub
pop
rol
xchg
and
into
inc
mov
in
xor
mov
jne
lds
sbb
sbb
das
sub
das
mov
push
ds
lock
add
cmps
cmps
sub
sbb
in
xor
pop
xchg
shr
mov
pop
sbb
outs
ret
and
ja
jp
and
push
xchg
or
loope
cmp
popf
aaa
lock
imul
jecxz
std
push
fwait
xchg
(bad)
pop
pop
mov
mov
or
push
jb
dec
test
or
enter
fcom
(bad)
daa
leave
jae
push
movs
or
retf
ficomp
xor
push
pop
out
ins
inc
or
mov
stos
sub
mov
movs
xlat
jg
fs
cld
js
in
ja
stos
test
ja
adc
and
mov
xchg
cld
in
mov
inc
(bad)
mov
(bad)
push
jmp
sub
mov
or
or
loopne
or
jnp
adc
enter
pop
xchg
or
in
xchg
cmp
cmp
stc
aad
push
xor
scas
sbb
(bad)
lea
les
cmps
adc
mov
out
adc
in
xor
mov
mov
ds
(bad)
cs
aad
mov
adc
out
lods
aas
or
div
jmp
adc
aas
inc
hlt
leave
nop
out
inc
mov
jmp
pop
fidiv
aaa
rcr
daa
sub
inc
sbb
jl
push
stos
inc
rcr
push
aas
and
sti
out
repz
add
out
sbb
pop
pusha
push
adc
sar
inc
bound
dec
fwait
mov
out
mov
int3
(bad)
leave
gs
mov
cmp
push
(bad)
test
jne
int3
imul
arpl
xor
rol
je
out
frstor
out
inc
push
add
add
sbb
icebp
fs
mov
stc
xor
(bad)
popa
push
xor
push
je
push
mov
add
mov
cmp
mov
dec
inc
outs
dec
and
xor
ret
and
jp
mov
sbb
bound
call
ins
push
repnz
jge
dec
outs
(bad)
jge
popa
and
cmps
pop
add
icebp
xor
and
(bad)
call
xchg
cmps
gs
je
pop
cmp
and
xchg
sub
xchg
call
(bad)
cmp
and
out
test
mov
and
outs
adc
sbb
frstor
stos
xchg
xchg
cmp
out
mov
push
mov
pushf
inc
or
push
jmp
and
add
adc
fiadd
dec
in
mov
add
leave
sub
or
xchg
mov
(bad)
and
ins
popa
jp
test
jl
mov
dec
mov
in
js
push
and
ins
fcmovnu
dec
enter
or
add
pop
inc
fiadd
and
and
dec
fild
daa
sub
mov
mov
fs
ins
xor
pop
inc
cmps
xor
push
sub
xchg
(bad)
repz
pop
scas
dec
in
stos
push
rcl
add
test
pop
loope
push
cmp
call
nop
dec
xchg
mov
fxch
fwait
stos
into
pop
adc
sub
movs
icebp
imul
cmp
pop
pop
push
cli
fld
test
dec
push
fs
jmp
cld
add
scas
and
scas
xchg
loope
mov
ins
jp
mov
adc
rol
shr
cld
pop
fmul
shr
push
push
or
fcom
cdq
idiv
push
aad
pushf
dec
in
ret
cld
pop
neg
xchg
int
in
xchg
ins
fst
push
into
mov
pop
and
aas
and
je
pop
xchg
stos
inc
aas
popf
push
bound
xchg
or
mov
mov
cmps
shl
rcr
ret
cmc
and
jb
stos
xlat
std
push
mov
pop
jg
ficom
or
jmp
add
xlat
mov
aaa
loope
sub
inc
mov
pop
mov
mov
aas
bound
jg
iret
sub
adc
jb
call
mov
icebp
or
dec
repnz
jp
and
or
retf
mov
out
cmp
stos
xchg
push
pop
mov
jnp
fxam
(bad)
or
pop
xlat
inc
xchg
jg
mov
cwde
imul
cmp
xchg
jno
add
cwde
mov
pop
fadd
sub
fdivr
js
call
and
jb
add
sbb
push
mov
push
(bad)
cld
push
pop
iret
loop
test
popa
ror
je
mov
mov
push
or
jb
or
dec
xor
popf
ds
dec
cmp
dec
fistp
cli
sbb
(bad)
mov
fs
sbb
push
fist
je
xchg
gs
push
and
cmp
adc
ret
xlat
retf
les
addr16
ja
lahf
inc
lds
push
inc
(bad)
outs
cli
push
push
out
(bad)
dec
and
ds
pop
pop
aas
jns
mov
pushf
xchg
sbb
push
pop
call
(bad)
fadd
dec
stos
adc
js
cmp
aaa
shl
and
mov
movs
mov
xchg
daa
pop
mov
loope
sub
pop
jns
cs
fist
adc
ins
add
adc
inc
enter
jae
and
mov
inc
push
jecxz
cmp
inc
xor
dec
mov
xchg
(bad)
dec
dec
inc
loop
xchg
jge
fbld
lods
ror
dec
jmp
add
(bad)
jbe
bswap
xchg
mov
pop
je
mov
lock
cld
pop
fmul
aas
icebp
xor
leave
gs
add
jecxz
push
imul
test
int
hlt
pop
push
jmp
call
mov
push
cmp
mov
xchg
out
jne
lds
lock
sti
iret
movs
test
jo
ret
into
loope
mov
mov
xor
call
pop
dec
push
ror
enter
retf
sub
and
shl
js
or
inc
test
sub
pop
test
movs
data16
or
dec
pop
jl
out
fwait
dec
add
imul
(bad)
data16
jb
mov
aad
jb
je
test
dec
scas
repz
fcomp
stc
rcr
repnz
add
popf
call
mov
xchg
xor
out
mov
sbb
(bad)
icebp
inc
inc
outs
inc
xchg
bound
mov
fsubrp
adc
push
in
ror
mov
jbe
scas
adc
mov
pop
popa
repnz
lock
fidiv
frstor
mov
(bad)
test
mov
arpl
rol
sub
adc
mov
stc
push
cmp
mov
xchg
inc
sub
in
mov
jl
jle
pop
pop
xchg
mov
sbb
xchg
std
xor
jl
mov
popf
pop
stc
pusha
ins
int3
jecxz
jno
fdiv
fwait
add
pusha
jae
adc
cmps
les
int3
sub
retf
ret
dec
outs
pop
add
out
pop
mov
and
jg
imul
into
fcom
mov
and
lods
es
ja
push
sbb
mov
fwait
aam
xchg
outs
inc
out
inc
push
int3
mov
push
push
add
mov
jl
add
sub
std
mov
and
adc
cmp
sbb
mov
push
pop
add
mov
xor
mov
scas
test
je
sub
repz
jl
jbe
push
or
sahf
add
cdq
dec
mov
push
xor
ret
xchg
call
jne
mov
(bad)
out
sbb
jb
ja
stc
gs
in
(bad)
out
jo
cmps
push
pop
sar
xchg
push
imul
or
popa
lahf
ret
popa
dec
bound
jo
sub
jge
ror
cmp
xchg
in
fnsetpm(287
inc
cld
in
pop
xchg
mov
sbb
xor
(bad)
(bad)
xchg
icebp
sbb
inc
and
xor
test
push
push
sub
push
mov
and
retf
pop
rep
sub
jo
or
inc
add
pusha
sbb
cmp
int3
sub
inc
fdiv
mov
fisttp
(bad)
out
rcr
pop
jecxz
adc
gs
cmp
mov
add
repnz
ds
test
mov
add
mov
or
xchg
mov
rol
stos
sub
xor
inc
mov
inc
push
mov
mov
dec
je
mov
jl
inc
adc
mov
jns
sub
retf
cmps
cmp
loope
push
iret
js
dec
adc
adc
mov
mov
push
es
inc
mov
mov
xchg
test
xchg
or
xor
movs
bound
xor
push
(bad)
mov
inc
rol
mov
adc
pusha
mov
daa
pop
dec
jne
mov
sbb
xor
cmc
inc
data16
test
lahf
ror
cli
xlat
add
cmps
scas
jl
lods
push
add
loop
pop
adc
(bad)
in
test
and
int3
int3
and
fnstenv
and
cmp
jmp
adc
and
lahf
inc
add
fwait
ss
dec
rol
pop
clc
xchg
push
daa
mov
cmc
mov
jb
test
push
or
sar
push
or
and
sbb
jge
mov
mov
jne
add
push
jo
pop
nop
out
xchg
inc
les
test
xor
inc
mov
(bad)
iret
xor
call
sbb
mov
sub
in
popa
add
cmps
inc
jge
je
push
aas
dec
lahf
inc
mov
ins
fld
jnp
adc
add
test
push
mov
ss
outs
cmp
cmp
aad
jo
scas
fwait
imul
push
dec
xor
outs
sub
push
mov
and
mov
sti
ins
ret
push
bound
into
daa
ds
popf
push
stos
pop
mov
jno
bound
pop
inc
mov
out
outs
std
leave
out
scas
add
cmp
stc
sub
outs
dec
pop
sbb
sbb
dec
push
cmp
xchg
mov
fmul
sbb
enter
cmp
mov
mov
mov
xchg
xor
sti
jbe
mov
nop
dec
mov
scas
xlat
inc
jmp
dec
push
dec
xchg
sub
fwait
aam
and
test
jno
and
in
or
stos
les
cli
cmc
shl
retf
mov
mov
mov
fisttp
add
mov
xchg
adc
push
cs
sbb
cmps
jge
mov
aad
sbb
adc
cmp
xchg
or
cmp
idiv
stos
enter
(bad)
jne
mov
rol
stc
rsqrtps
ret
inc
xchg
iret
sub
xchg
adc
lahf
inc
push
popa
ret
int3
or
and
push
jmp
cmp
adc
dec
xlat
iret
(bad)
adc
fadd
das
inc
xchg
inc
lahf
js
daa
gs
fisttp
or
or
mov
xchg
push
mov
ja
out
xchg
pop
jl
cmps
cli
mov
xor
shr
cmp
mov
icebp
fnstsw
popf
add
adc
cmp
cmp
xor
fimul
adc
repnz
pop
nop
and
lods
fcmovb
icebp
fwait
xchg
sbb
retf
push
loope
cld
in
cmp
add
mov
pusha
bound
cwde
(bad)
out
mov
in
out
xchg
jnp
jno
dec
push
jno
rol
mov
cmps
xchg
xchg
mov
dec
or
in
jmp
rcl
imul
lea
jle
rcl
int
xchg
hlt
in
mov
dec
jle
and
adc
mov
mov
iret
jmp
xor
pop
mov
adc
out
jbe
sub
fwait
add
jb
push
addr16
loope
ds
popa
jmp
cmp
ffree
repnz
adc
adc
std
jns
adc
out
xor
pop
jge
aas
fiadd
out
inc
adc
push
xchg
cwde
push
xor
xchg
imul
xchg
and
(bad)
cld
add
mov
dec
imul
mov
mov
mov
push
jmp
(bad)
ins
fisub
loope
(bad)
cmp
mov
cmp
mov
jae
dec
in
(bad)
stos
mov
add
inc
in
sbb
sahf
mov
xor
mov
mov
es
fs
sub
stc
cmps
mul
mov
push
shl
pop
int3
sub
and
ins
shl
sbb
das
pop
inc
cmp
mov
push
xadd
pop
push
retf
add
rcl
and
mov
adc
sub
into
sbb
mov
enter
test
cmc
fdiv
sbb
jmp
aaa
mov
leave
and
mov
add
pop
cmp
icebp
(bad)
ins
ds
dec
inc
add
jmp
aas
adc
dec
and
stc
fistp
imul
loope
mov
ss
mov
cs
(bad)
icebp
mov
jmp
or
jge
xlat
mov
dec
or
jp
inc
es
dec
pushf
(bad)
mov
cdq
sub
in
movs
int
inc
xchg
push
mov
jns
jle
pop
call
or
add
mov
xor
adc
mov
mov
cmp
inc
add
dec
sbb
or
cmp
pop
mov
mov
and
and
mov
xchg
mov
inc
sbb
add
pop
jecxz
mov
cmp
adc
int
scas
mov
sbb
call
and
and
xlat
outs
mov
adc
pop
mov
jecxz
push
mov
mov
popf
je
xor
enter
iret
in
loop
dec
push
hlt
repnz
out
fsub
inc
sbb
scas
mov
cmps
fist
push
pop
xchg
fsub
pop
mov
mov
cvtdq2ps
inc
popf
jmp
mov
(bad)
inc
and
xchg
cmp
dec
aad
pop
out
(bad)
sub
mov
cmp
cmps
push
mov
scas
cwde
push
xchg
ret
xor
mov
aas
add
adc
dec
mov
loope
ja
sbb
lock
xor
dec
mov
mov
fdivr
pop
add
mul
mov
cmps
dec
push
add
cdq
sub
inc
mov
stos
call
mov
cmp
jp
ret
(bad)
fisub
scas
aas
jb
add
rcl
shl
pop
jnp
fwait
rol
xor
test
popf
adc
xor
fistp
add
jae
(bad)
jmp
(bad)
jmp
scas
or
or
cmps
inc
test
rcr
jmp
dec
inc
retf
inc
pop
ss
(bad)
mov
jle
in
imul
mov
aad
bound
ret
cmp
add
int
sub
es
cmp
jecxz
jbe
in
adc
test
sti
std
hlt
inc
adc
ins
inc
add
mov
sub
mov
in
sub
pop
aas
mov
inc
fcom
mov
ds
inc
(bad)
gs
sub
xor
aaa
xor
outs
retf
sar
adc
lods
clc
inc
jg
sbb
mov
jle
nop
mov
retf
inc
jae
pop
(bad)
pop
adc
and
inc
cmp
add
xor
fidiv
stc
mov
hlt
stos
cmps
cmp
pushf
or
or
mov
cmps
outs
xor
adc
gs
jne
stos
jecxz
cmp
pop
pop
loop
daa
outs
ins
jg
or
push
dec
add
mov
xchg
sub
hlt
dec
jnp
je
cmp
out
mov
cmc
cmp
aad
pop
inc
bound
sub
fisttp
loope
jb
call
ins
outs
xchg
jle
mov
push
push
jnp
or
mov
imul
outs
inc
pusha
xchg
in
dec
xor
or
push
aaa
das
lods
loopne
fsubrp
enter
outs
jmp
push
mov
lds
sbb
jg
jg
xchg
cmc
fist
fmul
mov
jb
sbb
pop
imul
movs
in
icebp
fist
sbb
or
mul
sub
imul
xor
lahf
inc
or
dec
mov
push
xor
pop
mov
shr
loopne
mov
xchg
jne
jbe
jnp
iret
cmp
cmps
scas
lock
or
cmp
mov
xor
stos
pop
mov
xor
aas
inc
mov
cmps
sbb
or
dec
les
inc
pop
xchg
mov
sahf
add
cld
icebp
dec
movs
sub
icebp
out
mov
int3
clc
ret
(bad)
repnz
mov
jmp
xchg
jl
in
cmp
jmp
bound
mov
mov
sti
outs
test
icebp
xchg
div
or
sub
popf
retf
add
popf
arpl
pop
sbb
xchg
ss
in
mov
mov
in
mov
xlat
push
xlat
loope
jmp
xor
fwait
sub
loope
push
movs
jle
data16
cmp
pop
in
cdq
or
xchg
or
shl
jns
ins
in
addr16
arpl
cmp
sbb
repnz
test
out
inc
mov
and
mov
mov
in
sub
pop
imul
fwait
(bad)
cmp
cdq
out
add
push
or
mov
sbb
hlt
dec
mov
adc
mov
in
sbb
xlat
push
cs
sbb
cdq
lods
fpatan
or
adc
dec
or
ret
adc
out
(bad)
xchg
in
add
ins
aad
xchg
sub
movs
add
stos
inc
adc
pop
inc
dec
or
in
rcl
pop
out
mov
jg
jae
push
pop
icebp
outs
cmp
scas
addr16
mov
stc
in
and
retf
mov
dec
xchg
fmul
je
sbb
xor
inc
adc
add
sub
inc
xor
aad
jle
push
rcr
in
in
fbld
mov
adc
mov
clc
loope
and
gs
mov
stc
hlt
cmp
movs
rcr
stos
neg
mov
(bad)
sub
test
or
lods
pop
int
movs
push
xchg
mov
fld
mov
sahf
pop
cli
inc
(bad)
iret
sbb
enter
jecxz
pop
loopne
xchg
lds
or
sbb
arpl
xchg
rol
fild
mov
cs
(bad)
jmp
pop
push
jno
push
enter
dec
dec
sub
pop
bt
lods
add
or
mov
fstp
std
ss
dec
jnp
cs
(bad)
aaa
xor
inc
js
jmp
arpl
jecxz
add
fsub
mov
adc
lods
cs
or
out
sbb
pop
pop
pop
iret
jmp
mov
jl
inc
and
ja
retf
cmps
sub
dec
add
mov
not
or
(bad)
xor
inc
arpl
lea
addr16
jno
loop
sub
es
xchg
xor
mov
and
pop
xchg
inc
(bad)
cld
mov
iret
mov
push
adc
lods
push
sub
jmp
scas
stos
or
sbb
pop
inc
scas
push
pusha
mov
imul
and
pop
test
movs
inc
cmp
call
push
cmp
addr16
test
or
dec
inc
iret
cmc
popf
dec
pop
inc
test
pop
xor
ss
adc
test
inc
lock
mov
lahf
sbb
rol
jb
push
cmp
cmp
test
es
fist
loop
fist
push
ret
xor
xchg
jp
xor
aaa
xchg
dec
rol
push
arpl
cmc
jno
pop
clc
iret
jne
lods
mov
cli
jne
xchg
adc
test
add
or
pop
jnp
ja
mov
xor
test
inc
ins
div
push
fdivr
stos
(bad)
push
pop
xor
jo
pop
cmp
pop
lods
add
mov
xchg
ds
jb
retf
adc
push
xchg
xor
pop
xchg
or
ds
pop
popa
xchg
dec
es
pop
jns
xor
inc
sbb
push
pop
sub
popa
enter
pop
dec
inc
cmps
imul
cmp
mov
and
es
outs
or
pop
xor
outs
dec
and
inc
xor
xor
lea
call
loope
or
ins
mov
shl
adc
mov
cmps
stos
out
ins
push
loope
inc
sbb
sub
jno
das
add
ror
mov
out
cwde
outs
call
dec
cli
or
cwde
xor
arpl
push
sub
jnp
and
or
dec
enter
xlat
idiv
inc
sub
mov
ret
rol
outs
stos
xchg
add
(bad)
mov
fdiv
shr
and
mov
jle
push
mov
adc
repnz
add
jns
call
movntps
mov
sbb
lea
icebp
(bad)
out
in
fwait
lock
(bad)
and
fs
push
pop
fisttp
pop
inc
sbb
imul
mov
rol
pushf
inc
jnp
lds
xor
cs
add
in
mov
mov
xor
push
xchg
add
inc
cmc
and
jp
je
push
fs
jle
jge
push
push
mov
mov
ja
xchg
push
mov
cld
addr16
mov
jecxz
cmps
jecxz
jmp
es
push
(bad)
push
push
cmps
xchg
jge
jecxz
cmp
mov
mov
rol
lea
inc
int3
movs
(bad)
adc
add
inc
mov
push
dec
xchg
sbb
in
test
les
call
cmps
jnp
aaa
inc
sbb
jb
xchg
outs
inc
(bad)
pop
sub
mov
test
stos
mov
jo
dec
aam
add
add
fiadd
jb
pop
and
cli
inc
and
shl
dec
cmps
or
sub
cmp
mov
adc
add
add
mov
sti
(bad)
inc
inc
shr
cmps
hlt
cmp
arpl
push
sbb
add
sub
add
mov
fimul
pop
add
(bad)
ror
cs
pop
cs
pop
push
jbe
mov
(bad)
shr
in
dec
adc
sub
jle
cmps
in
push
and
xchg
inc
lahf
in
dec
data16
ins
mov
cdq
dec
mov
sti
dec
pop
add
jo
sbb
popa
cmps
dec
in
mov
mov
pop
sbb
rcr
dec
dec
mov
add
daa
cs
jb
pop
and
lds
add
adc
sbb
unpcklps
adc
mov
pop
mov
ins
mov
aas
mov
in
xchg
(bad)
jmp
jle
sub
push
imul
push
push
mov
lods
mov
test
sub
and
cli
rcr
ror
adc
pusha
sub
cmp
clc
stos
(bad)
ins
aaa
das
scas
sbb
sbb
jns
xchg
mov
mov
push
dec
mov
imul
inc
(bad)
xor
(bad)
enter
mov
imul
js
repz
out
jo
inc
lea
es
ss
lahf
dec
retf
dec
mov
sub
aad
sbb
xchg
push
mov
les
test
ret
xor
add
dec
sbb
es
mov
fdivr
push
fnstcw
leave
adc
ret
mov
or
sub
das
jns
or
test
or
xchg
cmps
push
and
push
aam
and
fwait
mov
retf
dec
lds
cmp
xchg
pop
sbb
adc
retf
into
rcr
push
in
xor
inc
cmp
les
jne
jecxz
cpuid
add
mov
fbld
mov
push
push
pop
xlat
loopne
add
mov
inc
xor
call
sub
mov
dec
or
test
mov
cwde
jmp
and
out
sub
das
nop
jae
popf
mov
addr16
add
xor
data16
(bad)
pop
jne
test
fld
sbb
add
sub
test
cmps
sbb
add
das
adc
cld
and
enter
hlt
stos
lahf
mov
pop
shr
int
aas
push
jns
lea
(bad)
sbb
push
jmp
mov
imul
call
cmc
mov
xor
push
mov
jmp
cmps
(bad)
aam
scas
fbld
or
call
adc
add
(bad)
imul
mov
or
adc
push
cmp
jle
es
data16
adc
arpl
inc
add
add
shr
jno
in
mov
pushf
(bad)
call
sub
call
jnp
cli
xor
inc
jno
sbb
push
cmps
jecxz
jmp
inc
and
loope
mov
sub
loope
sub
jb
scas
(bad)
cwde
mov
in
cmps
pop
pop
inc
cmps
loope
jge
pop
lds
jg
dec
add
pushf
rcl
daa
jl
or
sub
and
cmp
(bad)
mov
sbb
lods
inc
frstor
ins
stc
add
inc
das
adc
jecxz
pop
arpl
dec
call
cmc
xor
aad
pop
out
mov
adc
mov
aas
sar
gs
pop
push
mov
adc
out
test
nop
or
xchg
mov
and
scas
aaa
xor
lahf
mov
std
mov
add
sar
jle
mov
addr16
dec
mov
inc
les
shl
push
rol
jle
inc
ficomp
xor
ret
mov
cmc
jae
adc
cmp
xor
(bad)
sahf
mov
dec
push
fs
scas
mov
scas
mov
lea
mul
sub
or
xchg
cli
and
aaa
aam
or
dec
push
cmp
add
inc
xchg
add
les
adc
jno
ds
inc
jmp
call
dec
inc
loopne
xchg
ja
jecxz
les
mov
shl
popa
mov
(bad)
or
stos
fwait
rol
js
inc
xor
dec
pop
mov
les
xchg
lea
cld
jecxz
dec
jnp
xor
sbb
inc
addr16
hlt
sbb
push
in
add
mov
mov
adc
cmc
add
sbb
outs
adc
popa
push
int3
sbb
ret
mov
fs
in
cs
es
cmp
gs
or
add
dec
retf
out
sub
popa
sub
call
mov
dec
xor
sub
outs
xchg
cs
scas
push
xchg
cs
scas
jnp
xchg
test
or
add
mov
push
xchg
mov
aaa
jecxz
and
push
hlt
dec
movs
in
mov
lods
ja
cmp
scas
jmp
pop
scas
dec
sar
imul
es
inc
sbb
push
fldcw
pop
loope
shl
rcl
jg
sbb
xchg
fadd
pop
jb
fisttp
xor
stos
adc
enter
mov
xchg
daa
xor
lea
arpl
dec
push
sub
xor
and
stos
mov
push
scas
pushf
movs
cmp
xchg
test
loop
js
aaa
sbb
cmp
sbb
dec
push
ret
scas
inc
sub
ins
or
cmps
pop
in
xor
jge
cli
or
xchg
push
aam
pushf
or
repnz
test
por
dec
adc
leave
jl
xlat
adc
ret
and
inc
loope
jb
cdq
or
cwde
sbb
add
sti
outs
pop
icebp
icebp
jl
aam
sbb
pop
push
movs
sub
xor
xchg
push
data16
enter
pop
mov
inc
mov
ja
test
sbb
inc
mov
cmp
sub
repz
loop
and
jnp
test
out
dec
outs
test
cmps
push
frstor
(bad)
ror
addr16
clc
jnp
xor
popf
jmp
dec
jb
nop
aad
vucomiss
sahf
push
(bad)
dec
retf
push
jb
mov
jbe
sub
hlt
fwait
push
leave
jno
fwait
ins
ins
retf
inc
mov
dec
adc
dec
cmp
inc
into
mov
mov
push
popf
mov
(bad)
or
push
inc
xlat
shl
lods
inc
aam
mov
cmps
in
jmp
and
imul
inc
inc
nop
leave
sub
xor
xor
daa
icebp
(bad)
ror
clc
dec
mov
mov
daa
and
in
dec
xchg
adc
lock
loopne
mov
add
je
xchg
xchg
adc
xchg
addr16
inc
jle
xor
mov
dec
inc
scas
mov
mov
jp
add
mov
arpl
push
stos
inc
std
daa
(bad)
fsubp
aaa
xchg
push
push
mul
arpl
xlat
and
mov
mov
cmp
push
(bad)
es
iret
inc
mov
or
out
dec
test
xchg
fdiv
inc
scas
in
cmp
pop
push
dec
out
retf
rol
mov
loope
stc
cs
stos
mov
test
outs
mov
sbb
aad
push
pop
fsubr
xchg
dec
sahf
jecxz
shl
dec
lods
out
sbb
adc
push
push
jne
pop
imul
ss
mov
retf
fisubr
dec
out
push
cmp
pushf
or
sbb
xchg
out
cmp
dec
fmul
ss
jb
push
and
mov
sbb
fs
movs
in
sti
xchg
mov
ror
adc
push
dec
adc
sub
fld
adc
cmp
and
pop
lods
not
mov
pop
out
enter
xor
(bad)
fcom
and
and
call
sub
gs
or
and
cmp
sub
dec
inc
test
pop
repz
mov
mov
push
pop
test
pop
jl
mov
(bad)
jecxz
xchg
bound
xor
sbb
dec
in
(bad)
outs
movs
mov
sbb
dec
hlt
aaa
and
adc
sti
pop
dec
cmp
push
leave
sahf
imul
inc
loope
pushf
pop
pushf
enter
dec
mov
cmp
sar
sub
cwde
xchg
pop
(bad)
and
mov
nop
or
pop
or
xchg
not
repz
sar
add
sbb
sub
ja
and
ja
ins
out
mov
dec
gs
into
cld
fild
pusha
sub
mov
xlat
cmps
add
lds
dec
neg
dec
sub
cmps
stos
in
inc
jno
retf
sar
mov
ss
or
rol
ss
pop
xor
xor
mov
push
push
test
push
ror
push
push
mov
int3
mov
retf
xor
in
sub
and
mov
(bad)
leave
pusha
sbb
or
push
push
mov
or
cmps
pop
inc
mov
and
xchg
retf
add
push
adc
out
mov
jp
jae
enter
pusha
cld
push
imul
xor
cmp
adc
out
mov
inc
xor
stos
sub
jb
push
inc
mov
xchg
jne
pop
arpl
aad
sub
push
movs
xlat
aaa
shr
test
xor
je
xchg
aaa
pop
icebp
xor
sbb
setp
xor
aas
sbb
push
test
cmp
ins
pop
movs
(bad)
fwait
shr
push
jb
push
daa
mov
pushf
xchg
xchg
xchg
ss
js
xchg
mov
xchg
adc
jbe
jle
mov
scas
mov
add
(bad)
in
jne
mov
mov
push
imul
imul
xchg
and
test
and
inc
push
scas
push
push
fiadd
sub
sbb
jp
cs
mov
dec
cmp
push
jl
movs
pop
jmp
jmp
cmps
test
pop
mov
aaa
add
jae
mov
aas
jne
lods
push
leave
fcom
(bad)
in
out
pop
jo
mov
stos
sti
imul
or
xor
in
out
rcl
mov
sbb
into
fadd
fisttp
clc
sub
retf
jns
arpl
sub
js
in
in
stos
loope
test
daa
in
xor
add
sbb
scas
cmp
addr16
fiadd
add
sub
cdq
push
ror
cmps
xor
loope
repnz
loopne
xor
cmp
cmp
jo
loop
sar
jne
pop
cmp
pop
pop
and
inc
sbb
icebp
or
out
in
sbb
mov
ins
jmp
jge
pushf
adc
mov
pop
sbb
(bad)
movs
inc
jecxz
lods
sbb
cmp
mov
lahf
jns
or
inc
ins
pop
inc
jmp
and
xor
lods
jnp
rcr
add
sub
jmp
ss
xlat
sub
mov
mov
test
mov
mov
clc
mov
or
sub
xlat
sub
cwde
xor
shl
xor
scas
inc
(bad)
rcl
mov
mov
lods
lock
in
mov
aas
jmp
mov
mov
cwde
or
mov
sbb
pop
test
not
imul
iret
test
pop
inc
mov
int3
pop
sti
cmp
push
pop
jne
(bad)
bound
jecxz
adc
xor
(bad)
pusha
fmul
bound
inc
or
ffreep
out
rol
addr16
(bad)
mov
ins
call
add
dec
call
mov
push
movs
aam
loope
(bad)
pop
mov
mov
ins
mov
call
lock
mov
push
xchg
cli
js
mov
mov
jno
xchg
add
imul
fbld
call
(bad)
retf
or
mov
dec
mov
push
retf
mov
mov
push
sub
push
jnp
shr
loop
push
ret
outs
add
(bad)
mov
out
mov
or
sbb
mov
mov
test
push
mov
jae
jns
(bad)
jle
push
dec
pop
fimul
fcomp
pop
clc
cli
jns
lods
sti
pop
ret
dec
jmp
jne
pop
jg
adc
mov
ds
sbb
sub
dec
in
outs
in
shl
add
retf
sahf
jecxz
stc
std
inc
stc
out
das
ins
cmp
fild
mov
or
ret
lea
mov
add
jge
jnp
push
fsubr
mov
int3
xlat
or
fs
add
shr
inc
inc
sub
mov
and
test
ja
aad
jl
nop
aam
push
mov
add
pop
fsub
fld
mov
fwait
cmp
movs
into
hlt
jne
or
push
sahf
sub
sub
mov
add
mov
jb
fisub
cli
ins
ins
dec
xchg
add
mov
add
or
xchg
xchg
mov
leave
push
mov
test
shr
sbb
aad
int3
sbb
sti
adc
cld
nop
aam
test
int
sub
rcr
fwait
mov
cmps
sbb
(bad)
ret
and
out
push
pop
test
arpl
fld
xor
fisubr
call
sbb
lods
fsub
out
gs
mov
cdq
icebp
mov
jo
xchg
and
jl
iret
add
ds
mov
fist
jno
adc
mov
icebp
add
icebp
inc
hlt
sbb
lds
xlat
out
sbb
cmp
mov
push
ror
dec
in
add
cmc
push
movs
loopne
gs
fld
repz
aad
lods
fnstsw
and
jne
add
sub
jmp
sti
out
scas
(bad)
lahf
cmp
cs
popa
push
sub
in
jl
inc
sar
(bad)
mov
stc
xchg
mov
call
cmp
or
inc
mov
nop
leave
movs
cmp
xchg
gs
adc
int3
inc
ja
mov
mov
xchg
icebp
data16
pop
or
mov
(bad)
outs
xchg
dec
mov
adc
sbb
movs
mov
mov
push
jbe
dec
mov
lea
shr
mov
jae
jp
cld
cmp
frstor
jmp
inc
dec
mov
dec
loop
outs
xchg
and
xchg
retf
stc
add
je
aad
bound
push
jle
test
(bad)
jge
dec
div
sub
inc
(bad)
int3
inc
xor
(bad)
xor
or
sbb
add
mov
adc
or
sbb
or
aaa
imul
sub
inc
adc
scas
inc
mov
stos
mov
adc
sbb
jmp
adc
pop
mov
push
(bad)
(bad)
dec
adc
ja
push
scas
retf
icebp
inc
pusha
pushf
dec
ficomp
test
jp
push
sub
or
daa
out
sbb
or
jnp
out
pop
mov
inc
lea
push
inc
out
add
mov
push
xor
loopne
mov
in
pop
icebp
dec
fistp
push
sbb
sub
stc
add
aam
ja
movs
mov
unpcklps
popa
jno
sbb
sbb
(bad)
xor
push
pop
jl
cld
movs
jb
dec
int3
jg
pop
aad
push
and
jne
fisubr
aad
cwde
sbb
dec
lahf
mov
inc
sbb
movs
pushf
push
fisub
imul
retf
inc
jecxz
mov
pop
cmp
cli
bswap
cmp
mov
cdq
movs
les
sbb
imul
shl
cmp
inc
inc
cmp
inc
ins
(bad)
mov
stos
test
test
mov
stc
lock
or
add
inc
iret
stos
scas
sahf
leave
int
adc
pop
dec
cmps
(bad)
or
aad
sub
adc
popf
xor
jno
call
sbb
jae
push
addr16
or
fs
cmp
or
and
mov
jnp
mov
pop
mov
fisub
dec
sbb
fbld
(bad)
clc
popa
or
jl
popf
sbb
bound
inc
xor
jo
sahf
fs
int3
pop
fimul
push
test
sbb
xor
ins
mov
cmp
stos
push
lods
mov
mov
jae
loope
(bad)
aaa
rcl
movs
not
loop
push
out
fidiv
dec
ret
ret
pop
retf
shl
das
inc
mov
jno
and
sub
xchg
hlt
inc
out
retf
(bad)
and
test
sbb
dec
aas
add
scas
mov
mov
inc
ror
daa
mov
pop
stos
cli
cmps
retf
jl
(bad)
inc
and
inc
cmc
mov
aaa
and
inc
adc
push
rcr
cmps
add
out
and
imul
ss
int3
inc
xchg
loop
js
push
lock
rol
lods
adc
mov
mov
(bad)
shrd
das
add
xchg
sbb
dec
cmp
add
popf
inc
out
hlt
push
cld
mov
inc
inc
ins
xor
cmps
xchg
inc
ss
test
int
out
jecxz
cmovnp
sub
in
and
mov
fidiv
into
jns
mov
and
or
jno
xlat
int
rcl
(bad)
xchg
sbb
ins
pop
jo
std
ret
cmp
pop
sub
ror
in
fwait
xor
in
mov
or
subps
(bad)
fldcw
pop
fucom
adc
sahf
ins
sub
mov
(bad)
mov
fmul
gs
push
dec
sahf
cmc
bound
mov
sub
out
push
in
mov
das
adc
mov
mov
add
or
jge
frstor
dec
jle
shr
jp
jae
xor
or
xchg
bound
push
inc
in
repnz
pop
mov
scas
(bad)
leave
push
or
test
mov
mov
sub
inc
add
push
push
mov
ins
mov
cmp
mov
outs
sbb
xchg
mov
enter
xchg
and
(bad)
jmp
cmp
ss
aaa
popf
dec
sub
popf
bound
jb
jge
std
or
out
xor
aad
rcl
pop
adc
dec
in
adc
pop
shl
pop
addr16
adc
or
popa
les
aaa
cmps
inc
mov
lahf
mov
stos
dec
ja
repnz
mov
mov
mov
out
dec
fiadd
or
adc
test
adc
and
cmp
sbb
push
cmp
mov
sub
xor
int3
adc
xor
jae
or
dec
fisub
mov
cmc
loop
or
mov
mov
adc
in
stc
call
and
(bad)
cmp
push
sbb
(bad)
cmp
popf
dec
dec
sbb
mov
xchg
mov
pop
and
cli
in
inc
jmp
leave
jl
fwait
out
pop
addr16
and
mov
pop
loop
test
mov
adc
lea
xor
iret
outs
retf
push
rcr
sbb
pop
mov
in
cmp
test
loopne
mov
cmp
jg
mov
or
(bad)
pop
dec
push
shr
xor
loopne
outs
adc
jns
arpl
xor
inc
lods
push
xchg
inc
lds
xchg
pop
lods
inc
mov
shl
imul
ficom
sbb
xchg
repz
jge
jns
mov
dec
fldcw
xor
sahf
jl
ret
movs
lds
inc
inc
out
dec
fist
push
nop
in
dec
inc
shr
and
push
call
sti
nop
rcl
push
add
pop
sar
call
add
iret
push
mov
daa
cdq
cmp
xor
(bad)
dec
(bad)
fstp
fldcw
pop
imul
mov
push
inc
fs
push
repnz
arpl
mov
call
push
sbb
sar
and
xchg
loope
lods
test
fcomp
sbb
cmp
mov
leave
lods
push
adc
sar
push
adc
mov
sub
adc
lea
loope
pusha
cmp
cwde
jecxz
sbb
nop
cwde
sbb
xchg
mov
and
arpl
pop
sub
sub
xlat
cdq
stos
inc
add
xor
jnp
add
in
sahf
lods
popf
xchg
or
adc
add
xlat
push
out
xchg
ret
jns
pop
dec
or
popf
aaa
inc
jbe
aad
(bad)
jle
push
pusha
icebp
test
lahf
imul
imul
jp
cs
mov
in
adc
xadd
and
(bad)
hlt
sub
push
cmp
cdq
mul
sub
aas
pop
push
adc
movs
xor
mov
mov
out
xchg
sbb
jge
jmp
mov
cmp
daa
je
stos
jmp
mov
or
(bad)
cmps
push
jg
pop
adc
(bad)
call
(bad)
icebp
lods
aam
ret
jnp
sub
sub
pop
ins
sub
push
push
sbb
and
push
mov
mov
push
mov
push
pop
pop
stos
stos
mov
lahf
ret
jmp
clc
rol
mov
mov
jp
mov
push
and
lea
test
jae
retf
adc
daa
cld
mov
mov
xor
shl
adc
(bad)
mov
ss
lds
in
repz
mov
or
adc
sub
push
push
mov
inc
lds
cs
test
dec
in
test
adc
int
comiss
mov
bound
push
xor
adc
sub
add
test
ins
sub
hlt
out
pop
scas
mov
inc
retf
jmp
(bad)
jae
fmul
loop
aas
fs
add
adc
inc
aas
int
int
mov
adc
data16
loop
ins
fidiv
push
jge
test
jl
dec
push
mov
dec
push
dec
cmp
loop
sbb
mov
aas
fbstp
mov
(bad)
(bad)
pop
cmp
cmp
adc
into
mov
das
mov
jnp
push
mov
shl
data16
mov
fdivr
add
(bad)
fs
or
xchg
ret
pop
sbb
lahf
test
leave
or
mov
jae
or
shl
je
dec
std
std
cmp
test
sub
add
and
stos
ins
repnz
movs
in
(bad)
popf
call
push
sub
(bad)
pop
rol
and
aam
push
jle
movs
cmps
loopne
fiadd
hlt
fmul
(bad)
loopne
xlat
fimul
(bad)
neg
and
repz
or
jecxz
in
out
mov
dec
scas
es
jns
push
loop
mov
bound
pop
or
pusha
sbb
or
and
or
cmp
mov
(bad)
nop
out
das
or
pop
add
fwait
pop
mov
xchg
sub
add
retf
cld
sahf
mov
sbb
cmp
pop
sbb
pop
add
jno
push
dec
aaa
das
loopne
retf
into
movs
sti
sahf
movs
add
mov
push
or
xchg
cwde
xchg
call
les
mov
and
mov
loope
lea
stos
mov
jb
bound
int3
rcl
(bad)
sub
sub
mov
dec
inc
je
dec
jno
pop
iret
push
leave
cmps
dec
neg
movs
cwde
mov
dec
(bad)
hlt
pop
stos
xlat
repz
jle
adc
neg
ds
sti
jg
xor
sti
pop
das
test
and
out
out
mov
mov
pop
dec
ss
js
mov
fdiv
xlat
adc
cmp
xchg
cmps
add
js
jmp
stc
loope
add
js
cmp
xchg
test
aas
push
cmp
pop
cli
stc
cmps
adc
idiv
inc
popf
jmp
dec
mov
mov
mov
sbb
xchg
mov
movs
int
sbb
jl
mov
sbb
cld
icebp
pop
imul
(bad)
mov
and
in
xchg
not
ret
xchg
imul
dec
aas
dec
(bad)
jmp
lods
pop
pop
lods
movs
mov
mov
hlt
fld
xor
fistp
cmc
pop
jg
ins
xor
std
add
lahf
dec
retf
add
and
in
xchg
out
xchg
leave
mov
jae
inc
adc
stc
es
mov
in
mov
fild
and
sub
test
mov
stos
mov
jmp
inc
xchg
mul
and
cmp
mov
shl
aad
ret
or
mov
or
das
add
push
and
lods
fs
jo
inc
loop
cmp
ja
inc
mov
je
and
pop
push
dec
xor
pop
push
dec
dec
adc
dec
xor
cmp
add
(bad)
cmps
adc
ins
stc
dec
jp
jge
mov
cmps
mov
mov
clc
mov
mov
test
push
xor
aas
fbstp
push
(bad)
adc
jae
cmp
and
xchg
fiadd
sub
fdivr
scas
xchg
aas
imul
xor
test
sub
clc
sub
add
mov
mov
dec
cmp
jb
mov
nop
test
test
add
popf
aas
das
lahf
int
sub
xlat
popa
cmc
and
mov
inc
jbe
out
pop
add
mov
sbb
mov
sbb
jg
jne
xor
or
adc
call
movs
out
xchg
xor
mov
xor
xchg
xor
inc
ret
lods
rcr
ins
mov
jmp
push
test
enter
fwait
ins
or
xchg
jecxz
push
rcl
fidiv
and
data16
pusha
pop
mov
mul
(bad)
popf
es
jge
jno
adc
iret
dec
hlt
in
stos
cmc
aaa
aas
mov
or
sbb
inc
dec
pop
mov
cmps
mov
ret
popf
pop
popf
xlat
out
mov
cmp
jo
je
sbb
aas
call
test
pop
sbb
dec
bound
scas
jne
test
dec
dec
loopne
retf
lds
shl
sar
dec
shr
push
push
ss
cmp
jecxz
cmc
int3
mov
fwait
sbb
xchg
js
push
ss
and
cmp
dec
ror
xchg
pop
(bad)
cmp
retf
push
pop
clc
call
dec
mov
cmp
cmp
btr
(bad)
cli
outs
clc
mov
gs
imul
xchg
push
fistp
cmp
push
and
shl
stc
arpl
dec
and
jp
rcr
clc
je
jge
nop
jecxz
xchg
hlt
in
(bad)
jbe
sub
(bad)
sub
call
in
and
inc
sar
data16
cmp
das
popa
stc
inc
stc
fadd
(bad)
dec
not
pmuludq
aas
(bad)
sbb
pop
mov
pop
push
add
or
fnsave
sar
pop
cmp
mov
sbb
dec
cmps
sub
mov
push
dec
fldenv
xchg
int3
test
(bad)
push
jae
push
or
repnz
add
out
arpl
adc
cmp
seto
(bad)
xor
fwait
shr
inc
ins
pop
fild
imul
out
inc
dec
inc
fcomp
mov
mov
movs
sub
xchg
out
add
in
enter
(bad)
sub
fidivr
iret
xchg
jmp
fisubr
cmc
jns
and
jno
sub
je
test
xchg
enter
into
cld
ins
add
mov
aas
mov
inc
out
dec
mov
dec
or
lock
popa
vucomiss
push
shl
in
(bad)
lahf
add
xchg
test
dec
jge
push
xchg
sbb
in
mov
push
sub
rol
es
mov
test
add
push
arpl
push
imul
xchg
add
ret
push
jns
aaa
mov
les
xchg
test
outs
lea
nop
xchg
xor
jge
and
dec
int3
ins
inc
fld
mov
jb
mov
sub
sar
rcr
mov
lods
cmp
sahf
aas
dec
xor
fdivrp
cmp
cmp
push
(bad)
not
dec
not
loopne
mov
xchg
sub
add
sbb
adc
inc
adc
inc
not
mov
sbb
and
fldln2
pop
sar
dec
pop
jp
sbb
test
gs
sbb
inc
in
xchg
mov
inc
into
repnz
sub
das
jp
xor
mov
addr16
jg
js
mov
sahf
mov
mul
dec
lea
out
std
and
pop
push
into
xor
inc
call
call
pop
frstor
dec
dec
add
mov
inc
mov
rol
aaa
mov
push
mov
test
mul
or
xor
scas
call
call
xchg
ss
add
inc
mov
int
popa
or
(bad)
jmp
shr
das
lds
push
std
adc
inc
xchg
outs
push
fsubr
xor
push
dec
ficom
aad
mov
retf
fmul
mov
cli
pop
mov
push
sub
jl
leave
call
cmp
test
aaa
jg
nop
mov
xchg
push
loop
mov
ret
mov
sbb
dec
icebp
sbb
fbstp
cmc
ins
out
xor
jge
and
test
icebp
rcl
xchg
test
cs
clc
mov
cmp
data16
mov
out
jmp
dec
ficom
xchg
into
daa
xchg
sub
hlt
mov
xchg
fistp
cmps
sub
lods
aam
mov
sbb
push
jmp
movs
movs
icebp
xor
add
add
add
test
pop
sub
test
jecxz
cmp
movs
(bad)
call
xchg
cld
or
leave
sbb
jmp
jge
pop
mov
aaa
stc
adc
cmp
add
cdq
xchg
in
movs
aad
mov
test
scas
(bad)
dec
add
cmp
pop
ret
sbb
dec
push
pop
jecxz
xor
int3
popa
mov
push
fstp
ret
add
jg
stc
sbb
mov
sbb
xor
fs
add
sub
loopne
push
xor
cmp
dec
cmc
mov
jne
iret
mov
mov
iret
cmc
xlat
arpl
test
xor
aas
out
arpl
pop
fsub
inc
pop
out
xchg
or
dec
out
adc
mov
sub
int
das
sub
retf
cwde
mov
(bad)
dec
in
xor
push
jl
add
dec
mov
test
out
jmp
lds
mov
cmps
xlat
test
not
xor
fwait
jne
in
cmc
dec
retf
sbb
fdivr
fiadd
ja
fistp
xchg
shl
or
jae
jmp
rcl
int3
dec
sbb
cmp
sahf
xor
inc
inc
mov
and
jno
adc
cmp
movs
jb
or
shl
or
cmp
mov
(bad)
cmc
stos
inc
push
sub
mov
push
pop
push
cdq
div
sub
mov
ja
xchg
jmp
in
leave
les
jl
push
jb
push
fimul
mov
xor
data16
daa
js
mov
out
leave
push
ds
xlat
inc
fsubr
shl
leave
scas
xchg
inc
sub
stc
mov
div
pusha
pop
push
add
repz
mov
fidivr
jg
sub
mov
test
push
sbb
fnstsw
mov
xchg
jno
lods
in
push
popa
repnz
inc
jnp
lods
inc
out
test
sub
mov
and
cdq
inc
(bad)
xchg
in
cmp
(bad)
sub
sbb
stc
test
and
xchg
cmp
test
movs
cmps
retf
xchg
add
jle
les
ins
in
xchg
imul
test
lods
lds
dec
inc
test
jb
fst
les
mov
cmp
push
sbb
out
sbb
pop
jbe
sub
xchg
or
lods
mov
fmul
and
pop
into
jne
aas
stc
and
stos
jnp
mov
and
leave
scas
jo
pop
sub
pusha
and
cld
sub
dec
out
es
dec
mov
addr16
push
fwait
pop
in
push
push
push
pusha
sub
(bad)
jno
jl
mov
push
push
popf
leave
div
jg
cli
mov
fdivrp
jl
xchg
cmp
into
dec
cmp
clc
xor
inc
out
adc
and
xchg
jl
dec
add
and
jmp
push
inc
mov
xchg
cmps
cwde
test
xchg
inc
scas
pop
aad
stc
jle
lds
icebp
jns
jecxz
push
loope
inc
cdq
xor
stc
cmp
mov
mov
jns
xor
sbb
jle
repz
add
imul
mov
xchg
push
adc
pop
js
ret
fmul
mov
mov
repz
out
sub
in
push
outs
outs
sub
cld
call
cmp
jne
sbb
cdq
pop
sub
pop
jb
xchg
fisttp
xor
add
inc
scas
(bad)
sti
push
int
test
sbb
(bad)
dec
cmps
xlat
fidivr
push
out
mov
inc
ret
adc
push
loopne
in
movs
xlat
in
cmp
mov
sti
xlat
fwait
jge
jb
mov
inc
pop
dec
out
pop
mov
mov
sub
cmp
inc
ds
add
std
pop
or
pop
xchg
xor
stos
pop
dec
(bad)
sub
mov
loope
test
inc
popf
in
xor
mov
mov
lahf
lea
fisttp
inc
ficom
dec
pop
mov
es
pop
xchg
adc
cmp
mov
xchg
sti
mov
imul
xchg
mov
les
mov
lock
(bad)
sbb
aaa
add
mov
or
into
adc
mov
ror
scas
mov
cmp
cmps
icebp
sub
or
popa
jne
mov
nop
xchg
cs
adc
scas
jno
dec
xor
mov
xor
dec
xor
or
adc
sub
and
fcmovnbe
in
mov
sbb
inc
pop
adc
pop
mov
ss
inc
cdq
adc
fdiv
test
loopne
stos
mov
movs
mov
adc
movs
repnz
stos
(bad)
jnp
mov
inc
xor
in
int3
xchg
data16
mov
(bad)
movs
xchg
cmp
xchg
jbe
loopne
stc
sbb
leave
cmp
inc
inc
adc
popa
rol
cs
stos
bound
dec
sub
mov
dec
mov
pushf
inc
lahf
adc
and
in
imul
pop
cld
ret
mov
into
and
(bad)
or
pop
sbb
mov
xchg
fst
adc
and
push
adc
mov
cmp
push
dec
cld
jl
ror
loopne
xchg
ret
(bad)
push
adc
and
and
mov
push
mov
cmp
add
add
int3
ret
mov
icebp
retf
fwait
pop
jmp
jnp
test
mov
add
inc
ret
cmp
sub
daa
or
out
nop
int3
mov
jno
fwait
int
xchg
mov
jbe
or
cmp
sub
mov
mov
out
sbb
dec
and
mov
dec
aas
int
xchg
mov
fisubr
pop
pushf
int3
and
ins
dec
mov
fisubr
out
jae
sub
nop
stc
cld
and
sbb
and
cmp
sti
cli
sbb
das
add
fprem
popf
ja
push
jno
gs
test
push
in
sbb
adc
enter
ret
mov
shr
mov
jp
movs
adc
ja
mov
add
xor
xor
les
cmps
fs
(bad)
cmp
idiv
fidiv
push
(bad)
dec
xchg
pushf
pop
sbb
imul
adc
loopne
sbb
cmc
fst
mov
stc
inc
dec
daa
mov
dec
mov
lods
aas
push
popf
repnz
dec
and
sbb
push
in
mov
movs
adc
mov
pushf
jmp
add
repnz
xchg
sbb
aaa
leave
test
dec
sub
dec
mov
push
ror
sar
sub
adc
mov
das
(bad)
mov
jo
pop
loope
popf
pop
mov
outs
pop
loopne
(bad)
shl
pushf
mov
jg
(bad)
das
sar
aad
xor
ins
cs
adc
or
(bad)
les
and
dec
ja
sbb
ror
xchg
mov
mov
(bad)
dec
fidivr
mov
popf
shl
ja
push
jbe
je
sub
pop
push
inc
xchg
dec
xor
icebp
fild
xchg
(bad)
push
mov
ja
imul
jnp
repz
sbb
xchg
adc
test
mov
jno
bound
sbb
arpl
call
popa
adc
and
das
cmp
cmp
sbb
leave
xor
adc
pop
inc
push
mov
jns
push
inc
pop
xor
and
mov
jo
ss
retf
xlat
std
hlt
and
mov
ds
jge
mov
xchg
data16
and
lods
out
cli
inc
test
cmps
pop
loope
adc
mov
pop
hlt
rol
dec
fdivp
dec
jbe
daa
in
jns
out
or
scas
mov
addr16
or
adc
xchg
mov
or
iret
jle
arpl
dec
adc
imul
test
jns
jp
scas
cmp
cwde
xor
into
adc
fbstp
dec
sub
jecxz
je
dec
cmc
iret
add
jae
pushf
neg
aam
pusha
cmp
(bad)
dec
add
das
iret
mov
mov
std
outs
cmp
pop
or
xchg
test
stos
adc
sahf
loop
or
pusha
arpl
cli
pop
xchg
pop
aam
push
pop
mov
push
(bad)
push
xchg
or
xor
daa
dec
mov
pop
and
push
and
push
xor
loopne
adc
in
add
std
ror
js
add
xor
mov
xchg
inc
jae
pop
sbb
(bad)
fstp
xchg
dec
test
sbb
push
ror
je
lock
xchg
cmp
(bad)
int3
imul
sahf
fsub
cdq
fs
sbb
jp
mov
push
ds
mov
mov
out
jno
mov
adc
pop
push
xor
jb
push
pop
test
mov
cmp
and
sub
hlt
ror
dec
jge
jb
and
aam
es
gs
movs
push
pop
lock
das
(bad)
aas
js
mov
sub
lods
sub
fmul
add
cmp
jmp
(bad)
xor
(bad)
lods
lds
inc
lods
mov
out
arpl
push
push
shl
bound
or
int3
jle
aaa
push
loopne
ret
or
or
shl
mov
neg
mov
jmp
nop
sbb
push
sti
leave
rol
xor
inc
push
jne
inc
cmp
das
dec
and
into
fisttp
lods
jns
repz
and
mov
mov
xchg
pop
mov
ja
jb
or
push
(bad)
test
ret
sub
mov
jb
sahf
out
cmp
adc
enter
push
out
push
inc
cwde
inc
add
pop
xchg
das
iret
push
repnz
xor
femms
push
xchg
mov
cmc
and
pop
push
inc
pop
out
rcl
mov
(bad)
push
(bad)
add
adc
js
sbb
mov
int3
cs
jae
mov
sbb
popa
xchg
cmps
jb
and
and
in
mov
mov
push
das
movs
and
sahf
adc
dec
mov
add
lods
fs
imul
out
cmps
retf
fcom
ret
jmp
ficom
dec
stc
(bad)
out
repnz
add
cmps
xchg
pop
fisub
iret
(bad)
stos
jno
mov
icebp
push
lea
sub
aaa
mov
das
inc
(bad)
loopne
retf
push
push
cmp
repz
inc
add
cli
inc
je
stos
adc
out
movs
cmps
and
shl
test
inc
and
out
pop
hlt
and
ror
std
mov
jg
mov
pop
fisub
pop
fmul
fld
dec
out
(bad)
out
sbb
ret
jge
lock
sub
add
mov
xor
mov
addr16
jne
adc
sbb
pop
(bad)
das
movs
inc
aas
add
and
out
jbe
stos
aam
push
pop
aad
cmps
fs
scas
stos
inc
push
mov
jmp
sub
fdivr
and
out
jb
push
or
push
lds
cmps
pop
sub
call
popf
mov
call
push
das
stc
mov
push
push
repnz
inc
test
div
add
pop
ror
lds
stos
push
sub
xchg
mov
jp
jl
je
enter
aam
xor
or
push
dec
dec
jno
xor
loope
push
xchg
push
sub
das
push
pop
dec
mov
jmp
daa
into
lahf
test
mov
lahf
test
movs
jmp
mov
loopne
inc
fisub
lahf
adc
lods
int
push
dec
stos
clc
adc
push
mov
fiadd
retf
xor
sbb
jg
and
adc
into
js
inc
cmp
cmps
ins
push
mov
lods
out
out
es
pop
aaa
mov
loopne
or
lock
pop
ins
jle
xchg
lds
inc
icebp
jbe
out
xor
jmp
add
rcr
enter
xchg
mov
xor
xor
shl
xor
xchg
sti
cmp
ja
leave
popf
inc
pusha
(bad)
pop
push
sbb
mov
jae
fsubr
and
ds
ins
dec
jl
xor
arpl
push
xor
or
jg
mov
movs
mov
cmps
dec
mov
jnp
std
jecxz
stc
fistp
sub
test
ror
retf
rcl
pop
ud1
stos
or
sar
outs
push
mov
jne
lods
cmp
pop
repnz
and
mov
sti
in
and
sbb
sub
inc
loopne
and
push
mov
cmps
xchg
ss
push
sti
sub
dec
mov
jae
sbb
pop
call
aad
jg
xor
cwde
sbb
inc
cli
mov
dec
mov
xchg
or
dec
add
xchg
into
mov
push
and
repz
cmp
jg
imul
jno
push
xor
rol
scas
jle
push
inc
sub
cli
push
sti
jge
rcr
cli
sahf
cmps
loope
loop
mov
mov
lock
loopne
jmp
cdq
(bad)
jge
ret
mov
bound
jp
cli
sahf
movs
sbb
pusha
mov
mov
cmps
push
out
push
mov
sbb
pop
pop
xlat
movs
mov
out
fwait
cwde
push
cmps
clc
or
imul
add
imul
mov
sbb
jnp
adc
idiv
adc
(bad)
fcmovnbe
jae
and
sbb
mov
addr16
(bad)
add
ror
inc
in
fwait
mov
repz
xchg
xchg
pop
sbb
call
les
jecxz
imul
pop
xor
cld
push
popa
test
jo
or
shr
and
jbe
call
dec
ja
sbb
loope
in
lahf
pop
sahf
dec
jmp
jmp
loope
sti
push
xchg
jns
or
jnp
sub
outs
test
(bad)
sub
mov
xor
pop
xor
pop
xchg
mov
cld
leave
aad
loopne
test
jg
stos
sar
adc
jns
jg
in
mov
xor
pusha
loopne
retf
adc
in
in
or
stos
call
push
jns
lds
daa
les
test
cmc
jge
mov
inc
aad
leave
add
pop
inc
scas
jae
retf
scas
xchg
push
iret
sbb
fdiv
jb
scas
out
cli
or
mov
xchg
lahf
fistp
fmul
mov
mov
pop
cmp
sar
cmp
xchg
push
ret
aaa
lods
mov
in
fs
fcmovnu
xor
lds
sub
cdq
aam
ffree
inc
and
mov
or
nop
sbb
(bad)
fistp
loope
push
aas
push
xchg
xchg
mov
mov
mov
sbb
pop
gs
jg
clc
fld
jl
test
lods
xor
in
cmp
push
loop
jmp
fsubr
mov
sbb
pop
add
mov
jecxz
sahf
mov
enter
jl
aaa
push
loop
pop
pop
daa
mov
aaa
loope
fucom
outs
pop
repz
cmp
jmp
mov
aas
jae
ret
retf
push
mov
cmp
sbb
rcr
mov
fs
xor
mov
push
rol
lahf
mov
outs
out
push
xchg
adc
xor
xchg
gs
and
mov
and
pop
add
adc
arpl
iret
dec
jmp
mov
std
cdq
je
lahf
push
lods
mov
into
out
dec
push
cdq
imul
ja
mov
ins
mov
repnz
lea
xchg
mov
or
sub
jbe
sub
cld
jbe
test
xchg
dec
ins
iret
out
sub
mov
fwait
jbe
xchg
outs
je
xchg
jl
fwait
pop
push
nop
xor
lock
aad
dec
rcpps
cmp
leave
mov
jp
sbb
inc
adc
rol
out
cs
loope
pop
out
test
inc
std
inc
aad
mov
push
pusha
push
ficom
repnz
mov
jp
and
cmps
out
addr16
aam
shl
movs
xchg
xor
mov
jl
cmps
(bad)
sti
xchg
popf
aaa
sbb
loopne
mov
mov
test
imul
repnz
ficom
push
fiadd
fidivr
mov
shr
dec
nop
std
dec
or
mov
dec
xchg
ss
push
dec
push
sub
mov
hlt
fdivr
jge
sbb
push
pop
push
(bad)
ins
jo
cmc
out
(bad)
in
jmp
inc
mov
xor
test
mov
or
add
repnz
stos
mov
or
leave
pop
mov
and
enter
add
fidivr
add
ret
or
mov
loopne
dec
push
push
test
mov
popf
xor
aas
cmp
pop
sahf
push
rcl
in
(bad)
ror
mov
add
add
cmps
pop
and
ja
popa
lods
sub
add
repnz
test
mov
ror
mov
mov
sub
jo
lods
mov
sbb
push
xchg
mov
sbb
or
add
cmp
int3
add
fs
repnz
xor
add
mov
inc
ds
ror
or
je
inc
cmp
enter
nop
mov
jb
jae
jnp
cmps
out
shl
mov
out
mov
in
adc
mov
mov
jge
cmps
and
mov
xor
mov
adc
mov
fs
cmp
test
rcr
mov
jle
js
ss
add
inc
pop
or
loop
(bad)
aad
mov
pop
mov
test
jbe
lahf
mov
shl
or
pop
outs
aad
xchg
add
lods
adc
xchg
scas
mov
cld
jns
lea
fwait
adc
stos
or
pop
retf
test
stos
mov
mov
adc
sbb
mul
mov
(bad)
pusha
test
xor
push
add
add
sbb
scas
movs
mov
(bad)
fld
push
jmp
in
dec
push
push
jmp
mov
pop
dec
(bad)
mov
mov
scas
fs
mov
mov
ds
out
test
and
dec
push
das
mov
or
addr16
jmp
jbe
inc
lods
movs
repnz
test
fbstp
in
cmp
cmp
ja
clc
in
repz
add
jg
mov
dec
jg
nop
fcmovbe
in
pop
repz
shl
sub
jp
arpl
cmp
out
mov
imul
adc
int
or
test
scas
iret
push
stos
mov
adc
in
mov
or
(bad)
iret
in
lods
aad
in
call
aam
shl
addr16
or
aas
dec
scas
adc
icebp
sti
inc
mov
sbb
xchg
retf
dec
dec
ins
sub
add
in
out
inc
cld
push
(bad)
pop
cmovo
push
ffreep
mov
xchg
fcmovbe
repz
out
shr
test
or
pop
pop
mov
repz
jmp
dec
hlt
or
pusha
inc
push
cmp
in
loopne
xor
fs
mov
movs
push
or
stos
stos
push
in
xor
lods
and
pop
and
test
test
sub
call
(bad)
push
dec
sbb
test
adc
and
jge
inc
jecxz
jg
daa
jnp
stc
push
ret
retf
aaa
pop
sbb
sub
pop
cs
rol
pop
int
movs
out
loop
clc
rcl
jecxz
inc
mov
sub
sub
(bad)
dec
mov
je
jb
xchg
outs
xchg
jns
mov
jbe
rcl
mov
test
cli
ja
adc
xor
adc
scas
pop
outs
push
movs
or
xchg
mov
test
mov
rcl
pop
fs
jg
cmps
jbe
pop
cmp
and
mov
repnz
shl
sub
jns
bound
out
adc
sbb
icebp
jbe
fst
or
push
xchg
mov
jo
xor
lahf
inc
pop
jecxz
inc
dec
movs
cwde
mov
add
dec
data16
adc
cmc
add
fwait
pop
jne
cmps
xchg
fld
adc
lahf
push
cld
xor
and
pop
out
fdivrp
add
cmp
jo
cmps
hlt
cmp
sub
imul
lods
xchg
add
inc
lods
dec
xchg
retf
(bad)
adc
dec
push
lahf
adc
mov
and
or
sbb
cwde
cld
fs
push
inc
fcomp
and
mov
fisub
outs
sbb
jmp
xlat
jge
cs
xchg
and
mov
cli
bound
xchg
sbb
pop
mov
jo
stos
add
stc
pop
(bad)
and
add
fadd
mov
cmp
aas
inc
dec
mov
shr
mov
or
mov
mov
cmp
mov
jg
ror
jnp
in
imul
ret
push
jmp
or
lock
(bad)
div
jg
pop
mov
lods
pop
xor
jmp
mov
add
aaa
cmps
jbe
xlat
stos
sbb
inc
repnz
sub
jle
jne
fwait
jg
push
bound
mov
das
rcl
test
cs
dec
ds
div
popa
cmp
sbb
fcmove
in
push
cdq
push
cwde
push
adc
icebp
jmp
(bad)
ficomp
dec
push
adc
mov
mov
fidiv
push
add
faddp
fbstp
ret
pop
lock
mov
(bad)
dec
ds
cmps
fcom
sbb
call
add
cs
or
imul
mov
rcr
add
push
nop
clc
push
pushf
rol
sbb
inc
dec
cli
mov
or
adc
(bad)
jb
mov
inc
mov
mov
pop
in
das
dec
xchg
inc
rol
add
int3
sub
jp
sar
jmp
mov
cld
mov
xlat
call
test
push
cmp
dec
sahf
mov
retf
call
aad
aas
fiadd
push
imul
stos
or
outs
les
sub
sub
(bad)
fdiv
add
xor
mov
int3
push
retf
sub
or
adc
in
jle
punpcklwd
push
mov
mov
inc
cmp
(bad)
fs
or
xchg
xchg
sti
je
in
(bad)
jmp
(bad)
xor
out
and
xchg
cdq
sbb
imul
mov
fdiv
movs
sub
jnp
push
imul
ret
push
pop
idiv
clc
cwde
push
xor
hlt
mov
jmp
into
loop
fwait
mov
mov
and
or
call
inc
mov
inc
test
dec
lahf
jmp
or
inc
cmp
repz
(bad)
es
pop
fmul
ret
xor
push
sti
cdq
int3
loope
xchg
inc
sub
push
xlat
out
cmp
mov
retf
adc
xchg
add
imul
in
lods
test
mov
fcomp
mov
mov
inc
rcl
xchg
fcmovnu
xchg
int3
movs
data16
stos
jle
pop
jp
loop
mov
scas
add
push
jae
xchg
call
(bad)
aas
in
or
push
in
xchg
stos
inc
(bad)
fdivr
jae
out
popf
vpavgb
mov
mov
mov
sti
pop
shr
jns
add
mov
dec
adc
mov
fidivr
lods
sar
out
addr16
les
pop
fldenv
jmp
test
call
and
pop
mov
jl
mov
into
rol
or
out
(bad)
xor
mov
mov
adc
sbb
push
jp
dec
bound
pop
mov
mov
dec
mov
xor
outs
sub
xchg
inc
sub
dec
mov
add
nop
ret
nop
or
xor
jmp
stc
js
or
adc
jle
hlt
or
jmp
rol
xlat
movs
mov
cmc
ins
fidiv
repz
fdiv
arpl
cdq
pop
out
lahf
lods
sub
out
fld
js
int3
mov
mov
mov
mov
jle
xlat
les
sbb
ins
ss
mov
xchg
rcr
out
(bad)
cmp
and
test
jb
xchg
sub
xor
jae
ins
sbb
ins
sti
ror
icebp
sub
mov
cmp
push
cmps
dec
mov
enter
mov
mov
inc
lea
arpl
pop
aam
xchg
dec
dec
clc
retf
ret
jle
mov
push
jl
in
repz
inc
or
mov
pop
mov
and
inc
jo
adc
jge
pop
jo
fiadd
xchg
ins
rcl
outs
xchg
cs
rcr
jb
sub
push
mov
mov
mov
cmps
lea
pop
ds
stos
and
mov
lahf
test
cld
pop
outs
movs
pop
push
ret
sub
mov
bound
ins
jns
xor
loopne
push
dec
pop
adc
mov
push
push
xor
pop
daa
test
pop
in
jecxz
js
test
paddsb
xchg
ja
dec
sbb
outs
dec
pop
jl
xchg
pop
ss
lods
inc
pop
cmp
inc
mov
outs
(bad)
aad
or
out
push
ja
or
sar
neg
pop
mov
jnp
inc
(bad)
ficomp
(bad)
sub
push
sub
jo
call
xor
jl
stos
(bad)
(bad)
aas
cdq
not
push
sub
out
sub
push
in
sbb
dec
add
dec
addr16
punpckldq
mov
test
mov
movs
add
arpl
retf
inc
mov
sti
mov
lods
popa
mov
out
(bad)
mov
sbb
sbb
(bad)
sub
in
sub
mov
jmp
repnz
jb
push
mov
out
test
xchg
push
loop
retf
jno
out
movs
inc
ja
or
jmp
jl
xor
imul
adc
out
cld
xchg
int3
cli
or
out
adc
xchg
test
scas
pop
cld
jns
pop
inc
jle
test
mov
sub
add
mov
shr
dec
sahf
mov
cmps
dec
xor
aam
pop
xor
dec
in
les
xor
xor
es
iret
dec
call
push
in
jo
ins
inc
lock
jl
mov
push
(bad)
cmp
stos
(bad)
cli
push
test
add
mov
pusha
pop
sar
repnz
cmp
retf
call
sbb
add
dec
hlt
cmps
cmp
cmps
sbb
mov
adc
or
cli
outs
fiadd
fwait
js
test
cwde
shl
lea
adc
cmc
jmp
lods
add
inc
out
and
popa
inc
(bad)
cli
and
inc
xor
add
ficom
or
retf
xor
shl
(bad)
sbb
and
ror
mov
pop
int
dec
pop
retf
repnz
ror
popa
jns
xor
pop
sub
mov
mov
mov
or
cmps
mov
stos
xchg
test
mov
outs
std
push
jmp
pop
imul
aaa
call
cmps
ss
push
out
in
and
into
cli
lods
out
or
out
mov
sbb
pusha
sbb
ret
sub
pop
xlat
lea
repnz
pop
enter
adc
ret
xlat
(bad)
sub
dec
ror
add
stc
test
pop
daa
mov
iret
add
out
dec
add
or
adc
cmp
ror
nop
jns
dec
or
and
cmp
(bad)
push
stos
mov
into
push
rol
and
pop
mov
rep
pop
push
fincstp
sub
add
and
in
jmp
xchg
push
int3
mov
inc
js
ror
dec
js
test
and
in
mov
adc
cmc
jl
fcmove
pop
fdivr
lock
ret
cmp
mov
jecxz
sti
inc
cli
test
cli
test
(bad)
sub
in
mov
push
mov
pushf
wbinvd
pop
jmp
sub
jo
shr
inc
add
or
test
retf
xor
jne
lods
retf
cmp
xchg
or
sub
nop
daa
pop
test
and
pop
fs
and
enter
adc
mov
xlat
cld
ja
int
sub
and
das
jo
int3
xchg
add
xchg
cmp
push
std
adc
pusha
sub
(bad)
dec
out
movs
(bad)
call
repz
and
mov
sbb
jnp
lods
and
dec
lods
test
inc
aas
sbb
hlt
cld
fwait
stos
int3
mov
lock
sub
(bad)
sbb
pop
call
mov
xchg
adc
jg
dec
xor
outs
adc
int3
pop
sub
hlt
jp
aam
pop
or
imul
lock
mov
mov
aam
mov
imul
ds
out
popf
xor
add
shl
iret
xchg
(bad)
ret
and
aaa
cdq
mov
sub
mov
call
pop
call
iret
(bad)
xchg
or
loop
pusha
lahf
dec
out
add
ins
jle
loope
sbb
fmul
sbb
sahf
or
or
ja
add
jne
pop
enter
loop
imul
mov
in
stos
scas
pop
cmp
popa
jo
fbstp
adc
cmc
jo
jae
cmc
inc
enter
mov
frstor
call
inc
jae
mov
repz
push
dec
push
and
mov
xchg
pop
or
stos
add
lods
adc
dec
(bad)
loop
int3
push
rcr
cs
ret
hlt
iret
inc
mov
mov
jno
jno
sbb
jecxz
in
xchg
lods
dec
loopne
clc
xlat
xor
adc
cmp
adc
outs
mov
mov
and
sbb
hlt
sbb
mov
(bad)
pop
adc
sub
push
out
sub
icebp
mov
loopne
cmp
fnstcw
jmp
mov
clc
and
sti
add
je
pusha
repnz
add
in
sbb
movs
xchg
bndldx
sbb
mov
cmc
mov
mov
pop
iret
lock
imul
xor
xor
enter
sub
xchg
jbe
jne
jp
pop
xor
xor
cs
es
das
call
add
mov
dec
pop
mov
ins
out
or
add
add
inc
cmp
in
ret
(bad)
ins
push
mov
fdivr
adc
jnp
retf
jnp
rcr
jnp
lea
xchg
test
lods
push
leave
div
jo
call
repnz
mov
call
jg
imul
push
jns
lds
add
int3
gs
jp
call
stc
fcmovnbe
inc
inc
dec
mov
or
inc
aas
movs
cld
(bad)
out
hlt
aaa
es
sar
cmpps
adc
test
sbb
xor
outs
inc
outs
pop
iret
fist
xchg
and
push
into
push
sub
mov
(bad)
fldz
icebp
jae
adc
mov
sbb
mov
pushf
mov
frstpm(287
mov
inc
xchg
std
adc
sbb
push
mov
jmp
mov
jne
pop
push
mov
scas
add
gs
jg
rcl
and
test
fwait
adc
sbb
mov
pop
mov
fldenv
aas
or
push
jae
add
sti
cmp
ret
pop
sbb
not
shl
sahf
mov
xlat
mov
push
outs
in
and
pop
lea
in
mov
adc
(bad)
cmp
fstp
in
mov
cmp
gs
push
and
cwde
int3
mov
push
mov
aad
mov
sbb
dec
bound
push
mov
mov
push
ins
bound
mov
shr
add
int
test
fucom
and
mov
mov
mov
jg
fist
test
fisttp
xchg
add
jp
(bad)
ja
jnp
add
dec
hlt
test
cmp
gs
sbb
mov
es
arpl
inc
(bad)
mov
in
test
push
lds
jbe
mov
icebp
inc
push
int
retf
scas
or
jno
sub
mov
stos
or
and
cmp
cmp
scas
dec
icebp
imul
mov
ja
and
fcom
and
mov
pushf
cmp
or
jg
pop
ret
push
jmp
mov
(bad)
addr16
jne
pop
adc
idiv
(bad)
dec
push
mov
push
push
dec
cmp
push
adc
pop
ret
inc
or
mov
bound
(bad)
cdq
out
aas
cwde
sbb
xor
in
xor
and
inc
mov
int
push
mov
sub
or
push
fs
cmc
xchg
sti
mov
inc
jmp
inc
mov
mov
addr16
push
test
mov
call
aad
jl
sbb
xlat
neg
mov
or
add
jo
mov
cmp
js
stos
adc
mov
imul
lods
sbb
pop
adc
push
imul
repz
ficomp
mov
fadd
std
pop
sub
enter
int
cmp
add
in
imul
fnsave
pop
jo
or
mov
or
adc
mov
add
les
ds
data16
adc
mov
movs
jmp
movs
lods
scas
xchg
out
das
out
add
mov
mov
popa
ins
sbb
hlt
sbb
(bad)
aam
dec
adc
jae
sub
mov
sti
jge
mov
cmp
cdq
adc
and
jno
movs
add
jae
dec
sub
sub
test
dec
mov
push
loope
adc
xchg
sub
jb
in
push
xchg
in
inc
or
and
icebp
cmp
mov
mov
outs
in
push
test
pop
repz
push
leave
jnp
pop
mov
jno
mov
xchg
jle
sbb
rol
and
dec
nop
mov
sbb
lock
sub
and
mov
call
retf
daa
dec
mov
jae
adc
push
jmp
cli
sahf
inc
xor
scas
and
loopne
pop
mov
dec
jno
retf
sbb
mov
shr
adc
jle
js
add
inc
loop
push
movs
dec
in
clc
jmp
fadd
inc
fwait
ret
jo
sub
fiadd
push
in
pop
popf
jge
mov
cmp
addr16
and
xor
and
lds
bound
push
(bad)
mov
add
or
jg
mov
sbb
mov
dec
ja
cwde
push
(bad)
jne
push
lods
push
stos
inc
mov
jbe
loope
mov
mov
pop
pusha
data16
retf
mov
push
ja
pop
pop
mov
je
sahf
ret
mov
or
in
aas
ja
xor
xor
in
(bad)
jnp
ret
imul
sbb
mov
hlt
sub
jae
mov
in
or
test
xor
sbb
outs
popf
es
adc
xor
es
mov
mov
adc
ja
xchg
retf
mov
mov
pop
es
and
lods
xor
es
or
jmp
(bad)
cld
sbb
fst
adc
icebp
mov
mov
(bad)
aam
hlt
fisub
dec
test
jecxz
mov
(bad)
xchg
push
sti
add
fsub
(bad)
(bad)
aad
dec
mov
inc
jl
mov
mov
sbb
mov
iret
inc
(bad)
stc
ret
dec
repnz
lahf
inc
adc
xchg
les
es
imul
fwait
jle
gs
sub
cmp
in
pop
js
stc
xor
jge
cmp
cmc
pop
jle
xchg
dec
xor
inc
ret
es
stc
add
mov
ret
or
jle
outs
std
push
jbe
dec
jns
dec
pop
push
cmp
outs
hlt
pop
in
xchg
push
pop
dec
enter
xchg
pop
dec
in
in
xchg
mov
sub
jne
jmp
mov
adc
fs
fdiv
sbb
jno
fnstenv
mov
stc
sbb
imul
fst
mov
dec
stos
pop
adc
ins
dec
cmps
(bad)
lea
jge
push
mov
push
jnp
cs
repz
push
retf
rol
or
sbb
jecxz
in
lock
pop
in
loope
in
fcomp
daa
push
jae
retf
jl
out
or
dec
mov
xor
and
loop
fdiv
outs
pop
push
xchg
sbb
outs
dec
and
shr
mov
popf
cmp
in
mov
cmp
scas
push
mov
dec
mov
push
out
aad
or
adc
mov
xchg
mov
adc
inc
mov
pusha
push
dec
ds
jge
pop
(bad)
ds
adc
int
pop
pop
adc
jns
nop
dec
ucomiss
outs
sahf
xchg
jae
inc
(bad)
cmc
(bad)
mov
aad
mov
aaa
call
and
sub
sbb
hlt
in
stos
pusha
lahf
push
sbb
xor
fstp
out
lahf
dec
mov
data16
aad
sbb
jmp
jne
scas
sub
mov
pushf
fs
cmps
gs
or
jl
mov
loopne
jae
dec
mov
mov
sbb
sahf
jnp
cmp
adc
scas
rcr
pusha
(bad)
aam
fild
pop
pushf
mov
les
mov
adc
sub
adc
xchg
inc
iret
xchg
jecxz
and
fld
enter
or
jmp
mov
fistp
lods
sub
ret
test
push
sbb
dec
std
mov
inc
adc
cmc
loop
sub
call
cmp
ror
jne
(bad)
rcl
and
sub
xor
cmp
rcr
adc
cdq
xor
popa
mov
addr16
sbb
ins
adc
xchg
loopne
mov
xor
test
iret
push
pusha
jge
dec
mov
push
pop
ror
cwde
(bad)
loopne
popa
push
pop
push
int3
movs
mov
pop
sbb
fs
loope
ins
pop
cmc
ins
out
pusha
dec
sub
xchg
pcmpgtb
loopne
cdq
pop
imul
mov
add
mov
dec
enter
lods
mov
mov
mov
gs
pop
idiv
mov
push
popa
scas
jae
sbb
inc
cmp
push
nop
repnz
jg
xor
jmp
inc
lea
cmp
sbb
cmp
push
xor
(bad)
sub
jb
data16
mov
dec
repz
out
fmul
daa
lahf
out
mov
dec
mov
cmc
inc
sbb
mov
cdq
mov
lods
push
mov
loopne
fstp
mov
cmp
mov
inc
xor
or
inc
xor
(bad)
pop
stos
jnp
mov
mov
ja
idiv
sub
pop
dec
mov
push
sbb
in
xchg
xchg
or
leave
jp
imul
lods
test
(bad)
bound
stc
jecxz
mov
xchg
popa
cmp
sbb
scas
ins
push
test
sbb
out
jmp
cmc
mov
cli
inc
sbb
add
not
fsubrp
push
mov
add
cmp
shl
fiadd
loop
mov
mov
and
rcl
dec
cmps
pop
mov
ins
dec
cs
pop
xlat
mov
lods
inc
mov
fst
stos
adc
test
or
mov
fisub
cli
mov
pop
hlt
push
dec
rcr
imul
mov
dec
das
mul
mov
push
sub
icebp
mov
ror
mov
sub
sbb
ret
or
jmp
mov
xor
jg
push
cwde
imul
daa
adc
xchg
enter
mov
push
jmp
jp
retf
or
shl
and
call
pop
mov
xchg
shl
sub
(bad)
jp
pop
pop
shr
jne
xor
bound
test
inc
jno
sbb
jae
loope
jb
xchg
sar
push
je
cld
jb
out
xchg
xchg
(bad)
cld
pop
jo
mov
adc
rol
mov
movs
adc
xor
jo
(bad)
retf
cmp
scas
sahf
adc
mov
sub
mov
pop
mov
dec
call
imul
pop
int
xchg
lods
jo
jne
std
xlat
pop
jmp
xor
lods
retf
fisubr
fsub
sub
push
call
stos
mov
mov
push
pop
ins
jne
or
in
mov
cli
inc
cli
lods
leave
cld
sbb
push
sbb
push
ror
push
imul
cmp
adc
jle
in
and
adc
sti
test
(bad)
stos
jmp
sbb
inc
cwde
dec
pop
pop
test
inc
cmp
xchg
adc
jp
std
and
emms
sub
push
out
dec
(bad)
call
dec
cmps
aas
test
sar
push
xchg
cmp
dec
push
int
inc
shr
mov
test
dec
stos
jne
pop
sbb
rcl
lea
sar
add
inc
stos
add
pop
(bad)
outs
dec
outs
movs
mov
jmp
push
xchg
xchg
or
inc
push
or
and
pop
mov
(bad)
sar
adc
imul
jmp
mov
retf
stos
ja
retf
push
mov
fldpi
jae
mov
jae
mul
dec
dec
imul
cmps
fimul
xchg
xchg
mov
push
stos
sbb
cmp
dec
jmp
lahf
mov
mov
mov
and
mov
fdivp
das
clc
shl
and
mul
cmp
lea
aam
clc
sub
or
dec
jmp
mov
adc
xchg
popa
xchg
dec
sahf
xchg
pop
pop
mov
push
xchg
sti
xor
jbe
adc
jge
scas
pop
jns
clc
and
jo
and
push
cs
jns
mov
outs
add
dec
movs
ds
inc
or
pop
jp
mov
add
xlat
cmc
aas
fild
mov
in
sub
add
jae
cmc
gs
mov
lahf
jb
sbb
shl
dec
in
mov
fdivp
xchg
mov
clc
test
jnp
mov
jmp
jmp
jno
adc
pop
and
pusha
xchg
cmp
and
add
xchg
pop
aad
rol
aad
sti
and
sub
push
or
cmp
loop
ror
(bad)
shl
and
movs
in
lods
push
dec
movs
push
les
cmp
jb
leave
rcl
push
jp
or
jno
inc
pop
jo
hlt
mov
mov
add
mov
jmp
in
and
push
adc
test
pop
ins
idiv
pop
test
jb
and
rcl
xor
cmps
(bad)
dec
jno
dec
jg
mov
std
rcr
dec
test
cmp
test
and
test
inc
fist
call
push
aad
ja
sbb
in
in
ret
pop
jnp
in
adc
pop
pop
jne
adc
xchg
push
cmps
xor
ret
and
jno
aam
mov
adc
mov
int
not
fs
in
fadd
jecxz
stos
icebp
loope
xchg
movs
sahf
in
ins
jo
ret
test
jmp
cli
add
dec
dec
xor
mov
inc
pop
add
idiv
popa
add
fsubr
rol
xchg
lods
jb
push
dec
dec
mov
pop
ins
xchg
das
lea
pushf
and
in
add
mov
ds
mov
das
xor
adc
sub
xor
outs
cmps
ffree
jmp
out
movs
jno
adc
int
ins
fidivr
sub
jns
pushf
jg
mov
(bad)
mov
xlat
ret
pop
sti
sub
outs
aad
lods
adc
push
std
xchg
call
test
mov
int
loop
gs
mov
inc
inc
sub
cmps
sub
add
pusha
mov
test
into
bound
mov
push
shr
xor
daa
(bad)
fdiv
cmp
out
movs
pushf
rcr
ds
pop
loop
aas
and
test
dec
adc
inc
bound
mov
xor
fcomp
cmp
pushf
or
into
(bad)
loop
and
rcr
ins
xchg
push
outs
and
dec
jge
aam
fs
retf
xchg
dec
mov
pop
loope
pop
pop
rcr
rol
out
push
dec
retf
xor
sub
inc
pop
jp
bound
nop
cmp
mov
push
sub
icebp
mov
setae
frstor
sti
cmc
xor
and
jb
sbb
shl
cmp
int
xchg
and
cmp
cmp
pop
push
xchg
xor
(bad)
mov
or
or
dec
rcr
fdiv
outs
mov
enter
sbb
mov
cmp
jmp
adc
push
inc
jmp
addr16
add
xor
fndisi(8087
mov
and
bound
test
sbb
icebp
sub
shr
or
lea
ja
xchg
bound
mov
femms
xchg
call
or
cs
outs
jno
adc
arpl
ja
lock
cli
adc
jns
mov
out
push
mov
sbb
addr16
lods
in
push
jb
cli
inc
mov
jne
dec
jg
rcl
rcr
sub
cmp
mov
mov
mov
out
add
jmp
push
push
sub
jp
mov
ds
addr16
dec
xchg
std
sbb
iret
jl
rcl
mov
add
fwait
arpl
jp
movs
das
pop
push
sub
and
and
int3
in
lods
cli
pop
jmp
in
cld
jne
ror
sub
pusha
shr
mov
mov
add
xchg
out
aas
fbstp
sub
mov
fwait
mul
fs
push
in
cmc
mov
enter
pop
adc
jno
sub
jne
mov
fst
and
cmp
jle
cmp
pushf
shl
cmp
or
or
xchg
pop
std
repz
dec
scas
arpl
add
(bad)
jo
call
ror
mov
shr
(bad)
dec
call
or
std
pushf
pop
xor
jns
jl
ins
hlt
mov
add
mov
xchg
loope
jns
cmp
xchg
cmp
sub
pop
scas
rcl
mov
fs
mov
xor
add
or
and
jg
(bad)
xchg
mov
ins
push
pop
(bad)
xor
gs
stos
pop
adc
div
sub
rcl
sub
nop
das
and
push
add
in
pop
cmp
(bad)
sub
inc
dec
xchg
sbb
bound
sbb
and
mov
outs
cmp
ret
cdq
lea
dec
(bad)
fdiv
xor
int
sbb
pop
aaa
enter
out
jge
inc
loope
jg
pop
repz
sbb
lds
pop
cs
mov
mov
pop
mov
aas
ins
fadd
pushf
dec
pop
arpl
dec
push
scas
mov
mov
aas
mov
ret
sahf
cwde
movs
not
add
hlt
imul
stos
cli
inc
movs
popf
js
add
inc
fidiv
mov
cmp
out
(bad)
push
stos
add
sbb
fdiv
cdq
hlt
mov
je
mov
xor
fdiv
call
mov
dec
sub
push
movs
xlat
push
mov
js
xlat
out
or
iret
pusha
fst
(bad)
loope
rol
jb
clc
mov
fsub
inc
add
xchg
(bad)
push
sub
jle
por
call
jno
mov
mov
ret
rol
bound
mov
loop
retf
inc
or
lods
mov
aam
jg
dec
jg
lahf
imul
mov
gs
lock
add
aas
cmp
pusha
sti
daa
clc
(bad)
and
sbb
lds
push
ret
mov
jne
(bad)
jge
xor
ins
jo
xchg
aaa
jo
jecxz
mov
lea
int3
aas
push
cwde
fwait
push
es
ins
jnp
imul
sub
pushf
in
and
inc
sub
js
(bad)
adc
loopne
xlat
sbb
shl
cmps
dec
sub
inc
jp
fcmovu
sahf
adc
aas
pop
xor
fdiv
adc
popa
jecxz
xchg
nop
aad
aad
mov
add
fwait
dec
pop
(bad)
out
mov
cmp
aam
or
cmp
clc
popa
jbe
xor
ret
loopne
and
xchg
pop
cli
inc
fnclex
jmp
lods
cmc
xor
scas
ret
icebp
push
sub
jae
and
dec
sbb
and
dec
cmp
cmp
sub
sub
or
push
jbe
out
pop
cs
and
pop
push
out
cmp
fcmovbe
dec
mov
xor
cs
outs
adc
das
or
test
shl
shl
mov
call
lock
cmps
std
cmps
in
(bad)
mov
loope
iret
jmp
scas
cmps
pop
stos
xor
inc
xor
mov
fiadd
or
mov
dec
ss
fcomip
aaa
dec
loop
mov
sbb
movs
out
lahf
mov
pop
push
mov
jne
push
rcr
xchg
xchg
xchg
outs
jge
push
cwde
xor
enter
mov
xor
push
sub
push
mov
dec
inc
mov
and
(bad)
push
(bad)
adc
push
sbb
mov
push
imul
jg
mov
xor
into
ficomp
outs
lahf
sub
sbb
add
stc
jno
cmps
cwde
scas
sahf
sbb
cdq
fnstcw
mov
or
dec
das
shl
loop
cs
scas
(bad)
push
push
xchg
fidiv
or
mov
lods
jl
scas
out
shl
cmp
sbb
fbld
in
pop
and
and
xor
mov
in
inc
or
fsubr
aad
imul
sbb
rcl
fdiv
ja
sub
fs
push
(bad)
mov
(bad)
icebp
or
das
mov
mov
loope
outs
pop
sahf
adc
inc
movs
jp
clc
aas
adc
add
push
dec
cmc
push
stc
test
stos
sub
fild
or
mov
ror
mov
xlat
pop
cmps
fs
mov
push
scas
xchg
cs
add
mov
std
out
mov
cs
scas
add
mov
outs
imul
cmp
push
fsubr
xlat
mov
pop
ds
fisubr
push
push
dec
test
out
mov
in
adc
dec
rcl
inc
jge
es
ror
lea
(bad)
je
int3
xor
retf
adc
ror
es
ret
add
hlt
lods
repz
mov
push
aam
xchg
push
inc
mov
mov
mov
add
in
and
sub
in
cmp
in
jae
cmp
push
lock
inc
repnz
stc
sbb
dec
cwde
mov
mov
jecxz
mov
xchg
sub
pop
add
mov
outs
sbb
mov
xor
pusha
xor
jae
icebp
ficomp
fldenv
inc
loopne
sub
xchg
mov
inc
imul
inc
pop
and
cmp
test
push
add
or
fiadd
lods
mov
mov
jge
mov
pop
xor
js
das
xchg
dec
fsub
cmp
pop
add
mov
lods
xchg
jge
mov
add
cmp
addr16
into
shr
mov
shr
in
sub
jne
test
cmp
jne
neg
jno
and
adc
xchg
xchg
xor
pop
fdivr
xor
cwde
inc
cld
push
out
test
imul
fst
fstp
push
loop
xchg
push
jns
pushf
stc
cmp
adc
(bad)
test
mov
cwde
pop
lahf
xor
(bad)
cwde
sub
mov
pop
arpl
jle
out
jg
loop
xor
out
dec
sub
mov
shl
pushf
inc
lds
mov
rol
aam
dec
dec
enter
push
shl
mov
gs
lods
cli
cli
gs
jbe
or
adc
add
ret
xor
and
ret
push
pop
mov
xchg
mov
add
lods
lahf
mov
in
ror
js
adc
fnsave
mov
sbb
mov
xchg
(bad)
mov
icebp
mov
out
dec
and
mov
out
daa
mov
fsub
add
sub
cmp
cmp
mov
push
xchg
test
mov
mov
retf
mov
sbb
test
xchg
mov
ins
(bad)
out
pop
nop
lahf
ins
loope
push
mov
jl
cmp
xor
xchg
sbb
jae
int
test
repz
push
xchg
retf
and
xor
xchg
xlat
xor
jp
mov
inc
jns
in
dec
inc
jmp
stc
ins
or
fisubr
mov
xor
pop
aas
shl
add
mov
aaa
in
bound
popf
lahf
outs
xor
cmp
test
pop
icebp
(bad)
test
dec
icebp
cmp
into
dec
daa
imul
inc
popa
add
xor
call
sub
jns
sub
rcr
aaa
push
cmps
popf
loop
loope
pop
pop
cld
mov
(bad)
fnsave
mov
ins
pop
sbb
fisttp
in
or
push
repnz
jl
sar
or
cwde
dec
sbb
pop
xchg
adc
xchg
mov
mov
sbb
adc
test
sub
movs
mul
pop
out
movs
pop
shr
jne
push
push
fucomip
ss
cmp
in
out
test
sti
fcomp
sub
ret
mov
dec
mov
sar
or
or
mov
add
das
shl
adc
loopne
dec
int3
jg
push
scas
pop
fsub
adc
jo
clc
mov
push
and
mov
fwait
gs
fmul
enter
stc
dec
push
enter
jb
xor
sbb
ds
cmps
push
mov
cmp
jge
cmp
and
ror
adc
pop
aas
dec
pop
call
xor
idiv
xchg
mov
(bad)
loopne
aam
ffreep
jne
xchg
inc
xlat
sbb
ret
push
repz
movs
fild
jae
jno
adc
sbb
retf
add
xor
mov
adc
or
mov
inc
clc
mov
neg
xchg
mov
lock
aam
pop
mov
icebp
or
and
scas
dec
ret
lock
adc
sbb
and
add
test
mov
out
fldcw
mov
aas
mov
stos
inc
aad
jns
out
mov
bound
je
mov
ja
nop
xchg
cmp
fwait
or
pop
js
mov
(bad)
mov
popf
or
pop
mov
jne
pusha
lds
push
ins
mov
pop
sub
sbb
imul
sbb
mov
jb
mov
xchg
fsubr
push
and
ss
xor
pop
pusha
sbb
imul
push
sbb
mov
mov
imul
cmp
pusha
scas
cmp
mov
mov
fbstp
push
lods
pop
mov
inc
iret
fstp
xor
cmp
sub
shr
movs
mov
cld
jmp
cmp
cmp
adc
nop
mov
adc
xchg
add
mov
jne
test
jbe
clc
shl
mov
(bad)
fs
cld
mov
call
(bad)
jns
div
mov
in
mov
adc
out
xor
xchg
int3
ja
jbe
sbb
data16
sub
hlt
push
leave
hlt
ins
lahf
dec
adc
adc
jl
loop
pop
jg
out
in
test
mov
popa
sub
mov
sbb
(bad)
xor
mov
int
leave
pop
sub
jne
das
and
shl
int3
sti
mov
hlt
(bad)
mov
sub
fs
aas
repz
jae
xor
lahf
pop
out
sub
jne
and
push
xchg
mov
add
jne
jge
jo
mov
push
or
mov
jns
ins
mov
jmp
scas
or
mov
cmp
into
(bad)
fiadd
and
push
dec
ret
and
stos
lods
mov
imul
sbb
sbb
push
mov
dec
cmc
pop
das
dec
dec
bnd
icebp
shl
paddusw
inc
xor
dec
and
in
jnp
retf
mov
pusha
shl
add
call
jge
cmps
enter
adc
sti
mov
xchg
imul
(bad)
jp
pusha
cdq
popa
sub
popa
mov
cmp
or
jecxz
inc
mov
stc
fwait
pop
enter
sub
and
and
xor
outs
cld
test
mov
rol
(bad)
push
mov
and
ret
fucomip
dec
leave
jecxz
push
jmp
pushf
and
fadd
push
in
pop
cdq
push
out
push
sub
rcl
test
jecxz
or
movs
cmps
xchg
fdiv
xchg
(bad)
push
mov
dec
loopne
sbb
loopne
inc
mov
fsubr
cmp
aaa
out
cmp
sar
scas
ret
gs
jno
inc
stc
cmc
inc
mov
scas
mov
fmul
push
int3
cmp
sbb
dec
test
daa
xor
mov
iret
movs
pop
sar
(bad)
cmp
imul
pop
lahf
gs
add
rcr
xor
cmp
and
cs
push
neg
clc
int
sub
push
loope
cmp
and
inc
adc
push
inc
push
sbb
lds
jns
outs
pop
xor
jo
mov
pop
sbb
loop
jmp
cmp
div
repz
dec
fmul
lods
leave
in
pop
inc
sahf
sbb
cli
jmp
les
iret
mov
xchg
mov
loop
popa
mov
and
das
mov
std
retf
scas
inc
or
and
xlat
dec
addr16
loop
(bad)
pop
retf
nop
dec
mov
cmp
or
cmps
inc
fisubr
xor
dec
adc
int3
pusha
and
mov
jle
mov
iret
mov
push
lods
pop
retf
jbe
cmp
shl
leave
cmps
fstp
es
in
sbb
mov
adc
pop
xchg
stos
into
jecxz
fstp
(bad)
fucomi
lahf
cmovs
xchg
push
xchg
pop
sbb
cmps
cmp
push
adc
cmc
jne
enter
pop
shl
push
dec
and
cli
mov
retf
lods
xor
ss
mov
test
outs
xchg
loopne
push
nop
outs
mov
out
mov
mov
push
cmc
xor
sbb
mov
js
mov
jp
pop
out
cmps
cwde
call
add
fsub
mov
mov
push
into
loop
(bad)
adc
push
pushf
(bad)
out
sub
add
mov
sbb
loope
in
cwde
push
cmp
push
mul
sub
ret
mov
push
pushf
and
fcomp
or
popa
dec
sub
in
push
sbb
xchg
ror
aas
iret
mov
popa
pop
xor
loope
cmps
(bad)
test
push
or
pop
mov
cmp
out
scas
jp
ins
adc
in
in
add
fild
(bad)
movs
mov
or
add
sbb
mov
out
xor
(bad)
int
pop
in
js
fdiv
lock
pop
inc
inc
adc
and
popa
xchg
push
shl
xor
mov
test
ss
ja
imul
ds
mov
sub
sbb
sub
jae
js
mov
or
push
loope
js
in
in
scas
cdq
fbstp
dec
sub
or
test
and
ja
ins
sub
mov
or
xchg
lods
jmp
sbb
adc
ret
daa
push
sub
sub
lds
imul
xchg
mov
loop
or
mov
leave
dec
fnsave
and
sbb
push
imul
pusha
or
add
sub
pop
sub
pop
lods
jge
or
lods
mov
int
inc
mov
popa
xor
adc
push
push
xor
xchg
pop
xor
loope
loope
pop
cmp
sub
cli
lahf
sub
adc
jecxz
dec
inc
pop
xchg
mov
rol
aaa
lahf
jae
pop
test
(bad)
mov
inc
jge
sub
fisub
push
daa
xor
in
sub
nop
mov
sbb
mov
shr
movs
xor
or
lods
sahf
ret
movs
jmp
mov
mov
push
push
mov
push
or
dec
jle
add
mov
cmps
jmp
fild
nop
and
pop
cwde
push
jns
mov
cmps
(bad)
mov
xor
mov
mov
push
push
imul
popa
icebp
ficomp
aas
out
jmp
pop
pop
ret
inc
ja
or
neg
sub
leave
sbb
jae
das
jno
sbb
popa
dec
or
ins
mov
xlat
lea
pop
shr
add
push
mov
pop
stos
inc
bswap
mov
push
fucom
and
nop
mov
mov
sahf
fisubr
das
pop
or
jecxz
aad
push
dec
pop
cld
jg
loope
xchg
stc
push
in
test
enter
pop
into
sbb
jmp
sub
push
hlt
sbb
jmp
cmp
scas
jbe
test
xchg
mov
loopne
das
sar
jmp
adc
and
sub
bound
es
dec
out
out
ret
daa
jae
inc
(bad)
add
addr16
movs
mov
xchg
mov
fs
clc
popf
std
(bad)
out
je
sub
fadd
xlat
or
fadd
mov
mov
sbb
lds
jmp
sub
add
(bad)
loopne
or
fwait
std
mov
or
mov
addr16
cs
pop
call
cmp
fisubr
jbe
(bad)
push
pop
pop
fs
or
mov
outs
mov
xor
xor
test
pop
mov
loopne
push
outs
aad
cmp
push
adc
ins
aad
stc
outs
dec
or
fcmovne
fsubr
call
xor
sahf
mov
into
add
test
dec
icebp
xor
cmp
dec
popf
aaa
clc
leave
cmc
or
pusha
xlat
and
fadd
add
int3
shld
loope
sub
dec
xrelease
mov
xor
jl
cwde
mov
adc
fdiv
sub
movs
jge
mov
(bad)
dec
test
imul
data16
push
imul
jnp
pop
rcl
mov
jns
jp
imul
lods
add
scas
aad
xchg
add
shl
push
sub
cmp
cmps
lods
fldenv
add
or
add
ja
stc
loop
popa
jnp
dec
xchg
pop
test
pop
js
in
push
mov
jne
mov
ror
xor
fidiv
or
sub
pusha
in
bound
mov
jp
sti
(bad)
jl
bound
add
dec
pop
sti
mov
jnp
call
imul
fld
and
out
push
in
movs
push
iret
gs
jbe
pop
icebp
cmp
jae
push
jge
or
movs
jo
jno
adc
data16
iret
loopne
fidivr
test
adc
lea
out
or
adc
repnz
pop
or
fisttp
cld
fisubr
out
cmps
ror
imul
dec
sub
mov
dec
sub
add
mov
int
push
imul
push
adc
add
adc
out
(bad)
imul
mov
fs
inc
mov
pop
popa
mov
dec
push
jo
sar
adc
and
inc
(bad)
cmp
mov
xor
je
mov
lds
(bad)
jmp
xor
push
sar
rcr
mov
inc
pop
dec
mov
dec
mov
push
out
mov
(bad)
push
ins
jo
push
mov
call
dec
jno
icebp
les
sbb
outs
imul
dec
xlat
loopne
call
cmp
int
retf
xchg
int3
gs
pushf
mov
loope
pop
(bad)
loopne
push
out
dec
leave
pop
rol
test
shr
mov
retf
es
sbb
gs
es
xor
mov
mov
cmp
xchg
pop
xor
leave
cmp
add
sbb
sbb
mov
test
add
pop
jle
adc
test
repnz
inc
(bad)
jae
mov
retf
xor
push
adc
imul
hlt
cli
or
pushf
inc
cmps
jb
mov
xor
pusha
inc
imul
xor
adc
jmp
pop
in
icebp
loope
xor
popa
inc
dec
addr16
dec
add
lahf
mov
push
mov
ror
sbb
cmps
addr16
adc
pop
or
movs
into
xchg
test
xchg
and
pusha
mov
xchg
ins
fwait
test
mov
xor
shl
iret
mov
mov
pop
ss
ror
pop
lea
mov
das
ret
in
jae
(bad)
xchg
cmps
test
add
loopne
mov
repz
adc
cs
iret
pop
ds
cld
aad
sbb
neg
lods
add
xchg
(bad)
push
mov
inc
test
sub
cmp
das
pop
test
pop
gs
mov
dec
xor
das
lods
cmp
sbb
daa
sub
icebp
jg
ja
imul
pop
add
pop
pop
adc
daa
pusha
mov
jae
cdq
push
movs
or
jmp
or
sub
in
mov
or
dec
daa
jbe
adc
or
je
dec
adc
mov
pop
scas
scas
mov
xchg
ror
retf
bound
inc
call
mov
stc
mov
sbb
addr16
repnz
call
aas
dec
mov
push
mov
sbb
inc
fsubp
test
rcr
mov
pop
cdq
stos
stc
(bad)
adc
stc
out
xor
jo
mov
pop
pusha
push
xchg
sbb
sbb
jle
jns
cwde
jl
jb
sub
mov
movs
inc
pop
pop
loop
ret
mov
clc
cli
in
push
lahf
cdq
push
jle
pop
push
shr
jns
inc
in
sub
inc
push
cld
jmp
add
dec
cmp
mov
xchg
inc
xlat
fisub
xchg
or
inc
add
in
(bad)
aaa
(bad)
mov
sub
dec
jae
jno
movs
ror
mov
cmps
shl
fsubr
daa
and
jmp
cdq
aad
mov
add
sub
lds
cld
or
mov
imul
and
clc
or
jo
pop
jo
jae
dec
cwde
and
dec
xor
leave
pop
sub
scas
cld
inc
stc
sbb
dec
retf
in
mov
mov
xlat
dec
push
push
out
mov
adc
xchg
xor
dec
sub
xchg
cmp
pop
inc
xchg
rol
xor
or
adc
add
aam
fwait
js
std
sub
div
xchg
inc
inc
mov
sahf
lea
add
fiadd
shr
movs
mov
pushf
jecxz
loopne
jae
or
aaa
fsub
xor
aad
adc
mov
cli
and
adc
and
sbb
push
push
mov
push
dec
rcr
jmp
ficom
xchg
bound
or
xchg
test
jnp
imul
imul
jp
dec
xchg
mov
xchg
sub
jmp
pop
dec
push
icebp
add
(bad)
jmp
mov
arpl
sub
push
cld
jmp
ret
xchg
outs
inc
iret
nop
adc
out
and
nop
and
xchg
dec
shr
ins
mov
mov
xchg
push
push
fisubr
pop
data16
or
inc
mov
test
ret
jge
mov
mov
xchg
lahf
pop
outs
and
rcr
ficom
pop
xlat
ss
pop
pushf
or
enter
cdq
push
xchg
loop
dec
dec
and
into
inc
or
icebp
mov
jo
loope
xchg
pop
sub
leave
cld
sbb
mov
xchg
js
dec
pop
ss
into
stc
or
push
mov
sub
push
sahf
jl
outs
pop
cmp
pop
scas
adc
push
mov
and
mov
push
mov
lea
mov
scas
jo
jp
pushf
jae
mov
jno
cmps
repnz
sbb
movs
or
adc
(bad)
fadd
inc
cld
sbb
and
ror
inc
and
xor
push
adc
xor
jge
inc
ss
ror
adc
fidiv
push
loop
daa
into
inc
loop
ret
pop
outs
das
cmps
ffree
pop
sbb
xlat
fidivr
or
xchg
ins
sar
cmps
mov
jno
and
fcom
inc
push
hlt
cmps
test
das
pop
cs
inc
scas
mov
push
lods
add
add
cwde
rcr
retf
mov
cwde
pop
cmp
or
sti
(bad)
pushf
mov
mov
inc
mov
ss
aad
jnp
xchg
mov
retf
ins
ret
xor
sbb
pop
inc
enter
or
aas
in
call
xor
cli
add
in
sub
and
and
pushf
ja
dec
mov
cmp
jle
push
aam
jno
jmp
fwait
mov
iret
out
mov
push
lods
outs
sub
imul
xchg
push
and
out
xlat
mov
mov
in
aaa
xchg
and
bound
mov
jp
jbe
jno
push
mov
pop
adc
sub
in
add
xchg
xor
jmp
mov
push
sbb
mov
gs
sub
and
push
pop
out
in
into
jno
push
ficom
movs
je
pop
mov
jmp
xor
arpl
stc
add
mov
jg
inc
test
mov
jg
cmp
cld
push
loop
les
ret
push
int3
xor
movs
cmps
arpl
inc
xchg
xchg
adc
dec
mov
loope
cmp
shl
int
les
mov
dec
push
add
jecxz
push
je
sub
std
loope
or
xchg
cli
mov
daa
mov
jg
sub
pop
mov
sub
mov
dec
push
pop
aam
xor
call
lods
cmp
cs
outs
add
cs
jae
push
aam
mov
jnp
shl
inc
sub
push
ds
and
pop
jne
xor
invd
(bad)
fistp
(bad)
repz
mov
jo
xor
pop
(bad)
into
add
addr16
out
pushf
scas
(bad)
shl
push
lock
shl
or
pop
pop
jecxz
test
mov
(bad)
test
inc
fisub
sar
movs
push
popa
hlt
ss
mov
mov
sub
(bad)
aaa
cwde
(bad)
xchg
xchg
shl
dec
push
mov
inc
xor
cs
sub
pushf
cld
outs
dec
loope
loop
daa
push
cmps
xlat
out
push
neg
push
fdiv
jne
or
movs
fisttp
dec
bound
pushf
out
mov
out
sbb
xlat
and
rol
or
(bad)
mov
mov
das
push
xchg
pop
dec
add
mov
mov
sbb
sbb
mov
dec
mov
in
inc
out
in
pop
inc
mov
cdq
add
cli
fwait
xor
mov
lods
ds
imul
ins
jmp
fldenv
mov
sti
adc
mov
neg
movs
mov
xor
add
adc
or
rol
push
stos
in
xchg
jnp
push
or
in
push
ffree
in
dec
gs
cmp
xchg
mov
repnz
loop
cmp
lods
push
stos
mov
xor
mov
pop
cmp
daa
mov
(bad)
pop
hlt
pop
std
mov
in
sti
sti
icebp
das
mul
push
xchg
loope
sub
nop
sbb
sub
pop
ret
lea
mov
ficom
adc
lea
add
fisub
arpl
aaa
push
ins
scas
cmps
repnz
dec
data16
fsub
xchg
cli
sbb
aas
push
fisub
neg
or
dec
xor
push
xchg
push
fwait
(bad)
in
mov
jg
pop
cmp
imul
arpl
push
jne
fsub
mov
out
sub
xlat
lock
xchg
sub
xor
inc
std
in
test
sbb
jecxz
mov
hlt
pusha
adc
cmp
enter
dec
jp
sbb
mov
jmp
add
inc
(bad)
cmc
cmp
dec
pop
dec
push
sti
xchg
int3
cld
pop
push
xchg
cmp
call
push
mov
jo
lods
in
bswap
xor
mov
add
sub
cmp
ds
inc
jge
mov
gs
add
inc
mov
push
sti
in
mov
and
stos
int
ret
jmp
mov
cld
clc
int
call
mov
jecxz
neg
mov
scas
das
jmp
mov
jne
sub
popa
jnp
loop
xor
xchg
xor
es
pop
cdq
xchg
dec
mov
mov
iret
cmp
mov
lods
mov
xchg
pop
jg
cwde
push
lahf
stc
or
cmp
push
inc
sub
cmp
(bad)
cmp
xor
push
adc
dec
sub
daa
jle
cmp
test
sbb
add
mov
rcl
pop
sar
jle
inc
scas
loop
les
pop
xchg
imul
inc
sar
sti
ret
push
jb
or
test
ret
pushf
sbb
sbb
jge
sbb
sub
jmp
push
sub
fcmovu
dec
xchg
push
test
xor
rcr
(bad)
rol
pop
jae
lock
imul
lods
or
lahf
test
in
jne
ror
ins
mov
aad
inc
lds
mov
jno
mov
dec
mov
je
pusha
push
sbb
ja
mov
leave
jns
(bad)
or
fsubp
mov
aad
and
inc
jg
jg
sahf
pop
pop
arpl
sbb
mov
xlat
cdq
push
add
push
repnz
mov
cmp
jecxz
sbb
retf
cmp
cmc
daa
push
loop
dec
fld
loopne
or
ret
adc
cmp
mov
add
lahf
jne
fs
outs
int
add
dec
jecxz
inc
push
xor
mov
mov
sub
add
cmp
repz
out
movs
sahf
pop
and
dec
movs
int3
push
mov
adc
xchg
daa
jbe
(bad)
jnp
jnp
xor
shl
jge
and
pop
jecxz
pop
iret
arpl
xlat
sbb
push
xor
sub
add
mov
xor
aad
xchg
jae
add
pop
mov
test
fiadd
and
add
neg
jno
repnz
ja
fnstenv
or
xor
mov
xor
cwde
(bad)
icebp
pop
js
cmp
pop
inc
xchg
adc
push
outs
test
leave
cld
add
mov
mov
cmps
push
xchg
sub
dec
sahf
aaa
push
cmp
sub
(bad)
mov
push
xor
push
out
or
xchg
mov
jo
mov
mov
jnp
stc
adc
pushf
in
sub
mov
jne
repnz
cli
xchg
leave
ss
scas
enter
dec
aad
sti
lods
cmp
dec
mov
aas
xchg
fld
cwde
push
mov
stos
mov
pushf
dec
or
jnp
jbe
mov
xor
out
mov
inc
pop
jmp
imul
push
pop
jne
dec
sub
push
imul
in
das
(bad)
iret
cld
in
test
ja
sar
add
out
imul
or
icebp
scas
sti
sbb
test
add
repz
xchg
mov
lea
arpl
pop
jmp
lock
(bad)
ins
cli
ret
jne
hlt
pop
jge
idiv
mov
mov
and
shl
or
push
(bad)
mov
and
xor
std
dec
lahf
aaa
sbb
inc
scas
mov
lods
mov
cmp
inc
adc
int
and
(bad)
fst
inc
es
and
mov
add
pop
cmp
aad
imul
shl
jmp
popf
stos
stos
(bad)
call
je
cmp
imul
sub
mov
push
push
mov
pop
sbb
and
aam
jg
nop
sbb
repnz
or
rcl
adc
mov
test
xchg
mov
jecxz
add
pop
sub
sub
add
xor
nop
int
jae
inc
xchg
jo
aad
jne
ja
cmp
(bad)
cmp
adc
sti
test
call
adc
iret
(bad)
push
out
ss
outs
je
ins
and
pop
js
jae
add
dec
mov
jae
and
loopne
test
dec
pop
push
or
loop
mov
rol
push
sar
pop
add
mov
jnp
test
mov
jecxz
jecxz
addr16
or
mov
fisub
xchg
sub
jns
test
add
mov
lahf
push
push
or
cmp
dec
sbb
cmc
sbb
sbb
lds
lahf
sti
mov
add
movs
cld
aad
dec
dec
mov
mov
fucomi
mov
iret
jo
push
add
sar
out
jo
fld
pop
mov
dec
imul
or
jp
or
fwait
pop
int3
cli
push
gs
movs
push
and
jp
jnp
aas
mov
sbb
jns
push
adc
mov
pop
lods
mov
int
push
mov
cmc
jmp
jne
sub
je
daa
push
loop
(bad)
adc
pop
(bad)
pop
xlat
add
inc
xchg
sub
mov
out
push
adc
jmp
sbb
fisubr
add
adc
push
push
inc
and
nop
dec
test
mov
sub
loop
mov
mov
gs
sar
jecxz
jns
xchg
arpl
or
adc
mov
dec
mov
xchg
jne
fwait
psubq
out
adc
(bad)
xchg
fadd
sbb
lods
xchg
xor
or
push
popf
ja
(bad)
jmp
mov
pop
cmp
cwde
pop
popa
xchg
xchg
and
add
add
xchg
and
iret
int
add
shl
ret
sahf
lea
pop
dec
pop
pushf
jmp
in
outs
mov
out
inc
inc
into
cld
xchg
in
jp
retf
sub
jmp
icebp
mov
lds
(bad)
and
in
push
les
(bad)
pop
sti
jecxz
add
add
cmp
pop
in
test
retf
adc
clc
imul
jl
lds
mov
rcr
jmp
pusha
and
in
jo
inc
int
sar
stc
pop
call
clc
pop
inc
mov
test
mov
mov
jb
cli
pop
pop
stos
mov
mov
outs
cmp
fsub
gs
fwait
jbe
dec
dec
aas
loop
jo
fnstsw
iret
add
movs
cdq
jb
push
lahf
test
ja
and
lock
cld
fadd
movs
inc
jae
je
xor
ror
inc
mov
je
test
pop
ret
push
cmp
or
push
mov
jo
xchg
loopne
sbb
mov
adc
shl
adc
retf
shl
dec
fdivp
out
mov
inc
jmp
pmullw
out
out
imul
mov
or
jb
jno
adc
outs
dec
sar
nop
push
nop
adc
lds
mov
cmp
out
pop
das
adc
rcr
scas
push
jns
dec
add
cmps
repz
fdivr
jle
mov
push
daa
frstor
das
adc
push
xchg
push
jns
aam
push
or
imul
fistp
outs
push
push
imul
push
pop
xor
cmp
pop
stc
js
push
mov
xor
inc
mov
pop
pop
jmp
(bad)
stos
pusha
leave
fcmovu
lea
or
mov
ins
xchg
sbb
outs
call
ins
sbb
retf
fmul
ret
dec
jae
(bad)
ss
push
stos
sbb
and
dec
push
sub
(bad)
sub
push
add
cmovg
dec
hlt
mov
mov
fs
or
mov
pop
push
mov
add
dec
and
xor
push
cld
pop
or
sub
sub
repnz
sbb
(bad)
dec
ss
stos
cdq
(bad)
jmp
mov
dec
sbb
imul
push
lods
inc
xchg
xor
es
dec
mov
adc
in
mov
push
mov
mov
ins
into
retf
aas
pop
add
push
cmp
xchg
or
mov
jae
(bad)
xor
xchg
je
push
add
in
mov
popf
dec
popf
jne
test
jbe
push
jge
cdq
and
ret
lahf
sub
inc
test
mov
out
adc
(bad)
sub
test
or
xor
ficom
jecxz
(bad)
imul
mov
imul
mov
stos
data16
out
mov
push
jo
aas
adc
fmul
addr16
xlat
in
and
or
loop
mov
mov
adc
inc
dec
or
xchg
jae
ins
(bad)
push
pop
inc
dec
cmp
sbb
lds
cmps
lods
(bad)
jnp
loope
sbb
adc
les
mov
xchg
jo
fisttp
push
and
or
mov
dec
popa
daa
jmp
pop
add
xchg
hlt
test
inc
test
outs
das
nop
and
push
mov
ss
mul
es
xchg
ds
mov
inc
push
test
jl
outs
adc
out
cmp
pop
shl
cmp
sti
fstp
and
(bad)
or
call
je
inc
lods
mov
fst
mov
adc
adc
mov
shr
sub
enter
xor
cdq
push
test
leave
mov
rcl
popa
sbb
jnp
cmc
dec
add
mov
pusha
xchg
clc
lds
mov
lahf
jl
and
inc
add
mov
sbb
cmp
inc
cdq
aam
inc
mov
addr16
rol
cmp
sbb
cmp
xchg
xchg
pop
dec
(bad)
or
push
nop
xchg
push
ja
mov
xchg
test
test
fs
xchg
imul
js
sub
(bad)
cmps
add
jo
ror
mov
aas
jae
xchg
cmp
xlat
xchg
mov
test
jns
push
lods
jl
jl
mov
sub
pop
mov
hlt
adc
mov
xor
mov
test
stc
mov
mov
test
fisttp
in
xchg
pop
sub
repz
rol
add
xchg
ror
lods
pop
ins
or
ret
push
dec
push
push
ins
mov
cmp
stos
add
lods
sub
cs
mov
pop
outs
xor
aam
jge
push
xchg
std
sub
mov
xor
xchg
push
sbb
pop
loope
xor
mov
jl
adc
sar
inc
dec
inc
add
xchg
inc
mov
ins
lods
xchg
jnp
out
jg
cmps
push
out
ret
xchg
pop
cmps
test
test
jle
sub
sub
(bad)
sti
push
cli
add
sub
inc
jp
ss
and
jne
mov
aas
cmps
or
sar
mov
or
jle
sub
mov
cmp
cmp
xchg
mov
test
pop
cli
neg
cmps
adc
es
(bad)
aaa
mov
inc
push
bound
push
jmp
adc
jno
sbb
dec
call
mov
outs
jno
xchg
and
xchg
cld
xchg
aam
out
imul
imul
popa
push
add
inc
je
shr
hlt
ficom
shl
mov
loop
mov
and
jmp
mov
mov
mov
fisubr
movs
jno
cmp
or
and
jae
xchg
ja
imul
fidivr
cmp
loopne
xchg
(bad)
test
dec
add
push
sub
mov
mov
into
in
mov
mov
jl
push
aas
add
loope
repz
iret
sbb
bound
pop
lea
dec
cli
inc
cld
pop
cwde
cmps
mov
clc
push
(bad)
jmp
leave
call
(bad)
and
sbb
or
out
mov
jnp
cmp
repz
xchg
outs
dec
mov
jmp
inc
jg
sub
cmps
and
add
sbb
mov
aaa
fs
xor
in
fsub
dec
popf
pop
call
adc
mov
sub
fcom
sbb
pop
add
xchg
out
push
mov
add
pop
ficomp
(bad)
cmp
jmp
es
arpl
jnp
cdq
jne
add
xchg
mov
adc
pop
into
and
jg
dec
xchg
iret
inc
imul
sbb
cmps
mov
loop
(bad)
mov
sti
daa
pop
inc
rol
dec
xchg
in
adc
mov
idiv
(bad)
hlt
dec
mov
push
cmp
push
jae
lock
or
stc
ss
or
into
inc
scas
cmps
xchg
or
push
in
push
stc
sbb
aaa
pop
dec
cdq
add
dec
repz
dec
popf
stos
add
cmps
test
pop
repnz
out
(bad)
inc
and
in
cmp
and
aad
jge
adc
sub
gs
pop
mov
xchg
inc
jl
lea
aad
sbb
add
sbb
push
cmps
movs
or
int3
add
add
add
jl
xchg
add
mov
and
xchg
push
push
sub
push
pop
jns
dec
shr
repz
sbb
adc
pushf
adc
fiadd
sbb
lock
lahf
fist
adc
xchg
mov
add
xchg
leave
enter
ret
rol
jle
gs
ins
mov
dec
jmp
(bad)
xor
sub
jno
xchg
or
mov
push
lahf
loop
pop
out
jo
mov
push
pop
adc
jb
dec
xchg
jg
mov
push
jle
push
pop
jle
mov
push
jecxz
mov
mov
sub
loope
aaa
shl
push
mov
jecxz
retf
mov
mov
rol
xchg
or
mov
jo
mov
inc
cmps
jne
nop
push
aas
cld
mov
pop
inc
outs
aam
ins
lahf
fidivr
bnd
mov
push
ins
jle
sbb
test
mov
ins
add
dec
push
stos
mov
aaa
jb
stos
inc
int3
ins
fwait
popf
and
dec
adc
mov
cdq
(bad)
fwait
jnp
add
push
mov
add
sub
mov
jmp
(bad)
push
rcr
call
pop
leave
sub
push
push
adc
cmp
cdq
xor
lock
pop
and
mov
add
aam
cmc
mov
fst
xchg
mov
push
xchg
cwde
sbb
lods
les
je
in
das
xchg
ins
fcomp
sub
jl
inc
xchg
icebp
jae
mov
loop
xor
add
add
dec
retfw
retf
jne
les
mov
add
mov
or
scas
inc
jbe
out
mov
je
push
mov
add
out
fs
sub
iret
imul
jmp
and
adc
retf
push
ins
std
and
cmp
ja
xor
(bad)
xchg
ss
stos
pop
jns
mov
pushf
add
sbb
jg
fwait
shl
lods
xchg
loop
das
test
je
fcmovnu
inc
sbb
cli
xchg
in
pushf
(bad)
sar
jo
push
fistp
jmp
mov
jnp
mov
cdq
fld
xlat
inc
das
inc
sub
dec
mov
push
jno
nop
aas
push
sbb
adc
sbb
jae
mov
out
out
rcr
xchg
(bad)
in
mov
fwait
arpl
(bad)
loopne
clc
fmul
jns
out
imul
jnp
jnp
or
adc
and
sbb
mov
inc
pop
fcmovnbe
push
mov
hlt
and
int
jmp
adc
mov
mov
inc
jbe
icebp
inc
mov
call
adc
shl
cmp
ret
clc
inc
(bad)
pop
inc
pop
pop
pop
jmp
xchg
mov
and
or
gs
dec
test
mov
lods
pop
mov
or
inc
mov
mov
std
jns
or
int3
(bad)
or
mov
fwait
jne
ins
out
push
pop
pop
xchg
and
or
je
pop
mov
test
fisttp
pop
cmp
and
inc
shl
outs
mov
push
jo
ret
dec
retf
out
cmp
push
dec
mov
scas
loope
iret
add
or
jp
mov
or
xchg
fbld
lock
je
adc
and
cld
out
pop
rep
sbb
add
cmc
pop
dec
lahf
mov
cmp
add
pusha
sbb
loopne
add
and
add
jg
ret
ins
push
scas
add
cmc
mov
movs
jns
mov
sbb
stos
inc
adc
imul
aaa
xor
sbb
and
les
jnp
mov
lea
mov
int
jo
push
call
mov
das
xchg
iret
pop
inc
ins
add
pusha
push
stc
cmp
inc
fimul
sar
es
jbe
popa
movs
inc
pop
xchg
dec
ins
mov
add
loopne
push
clc
rol
(bad)
cmps
leave
addr16
clc
nop
ja
mov
rol
fucomi
int3
cmp
rcl
mov
dec
scas
xor
rcr
add
adc
aad
rcr
adc
je
scas
in
js
xor
adc
or
pop
xchg
movs
xlat
fnsave
add
mov
lock
push
sbb
push
pop
pop
fild
dec
sar
js
cs
cmps
cmc
mov
rol
xor
jbe
and
mov
enter
jle
or
mov
or
xchg
jg
mov
sub
call
or
pop
pop
xchg
xchg
test
add
mov
cmp
push
sbb
pop
pop
fsincos
or
jnp
pop
cmp
stc
cli
outs
cli
fmul
inc
shl
push
aas
cs
jp
fucomi
loop
stc
lock
fcom
int3
lahf
ficomp
jo
xchg
inc
leave
push
ja
imul
cmp
xor
shr
int3
into
sub
pusha
leave
cmp
jns
(bad)
cmp
js
fcom
retf
and
cmp
je
repz
jae
(bad)
adc
jge
sbb
inc
dec
xchg
cld
fs
lea
xchg
ret
xor
scas
not
pop
mov
xchg
jle
inc
cmp
dec
xchg
inc
lock
push
rcl
pop
daa
fwait
inc
cmp
xor
sub
loopne
xor
jmp
leave
(bad)
fcomp
mov
fs
imul
imul
aaa
pushf
cli
mov
rcl
mul
(bad)
cld
lods
push
and
popf
leave
fsubr
fcom
fisubr
mov
wbinvd
in
data16
dec
or
jmp
mov
sar
icebp
int3
xor
mov
lods
fld
or
dec
jge
clc
in
arpl
les
jmp
or
jmp
pop
or
adc
inc
xchg
cmp
js
rol
mov
arpl
dec
mov
xor
retf
dec
clc
sub
inc
std
in
inc
(bad)
xor
cmps
cmp
pusha
jns
inc
rcl
(bad)
enter
sahf
inc
xchg
cmp
or
pop
dec
sbb
dec
mov
es
das
push
inc
nop
stos
retf
jmp
cmovno
jmp
xor
movs
mov
cli
and
hlt
stos
pop
outs
sti
xchg
adc
push
mov
push
loop
fld
add
pop
enter
add
and
jge
mov
adc
pop
repz
jbe
xor
and
dec
adc
cld
sbb
enter
lods
add
(bad)
movs
jns
mov
jp
push
mov
in
push
mov
sub
sahf
sbb
in
and
jnp
mov
mov
ins
fcmove
sub
clc
mov
scas
mov
cmps
sub
aad
mov
inc
stos
fsubr
mov
push
inc
ret
pop
push
jne
mov
jb
sub
push
pop
(bad)
popa
inc
jae
movs
aas
cdq
dec
xlat
sub
call
sub
jl
in
test
add
cld
ins
popf
adc
sub
mov
popf
dec
loope
stos
xchg
inc
cli
push
loop
iret
call
inc
push
les
shl
add
sub
dec
sbb
jns
mov
bound
cmp
push
jne
push
stc
scas
out
(bad)
jle
test
push
sub
jl
cdq
cmps
and
mov
test
addr16
sub
xchg
pop
mov
jae
outs
jmp
loopne
rcl
push
add
cmp
je
add
mov
dec
mov
cmp
add
inc
(bad)
(bad)
sbb
(bad)
push
mov
rol
cmps
daa
bound
push
mov
mov
fs
fistp
mov
xchg
test
gs
test
clc
movs
mov
repnz
mov
in
mov
js
int3
and
cmp
(bad)
and
aaa
retf
mov
das
xor
mov
xchg
or
fild
cmp
mov
adc
loope
aam
nop
test
push
out
inc
add
sbb
(bad)
imul
push
inc
shl
(bad)
xchg
pop
call
mov
mov
int3
cmp
jb
mov
pop
mov
add
mov
jle
mov
mov
or
fcomp
xchg
cmp
cmp
lock
xor
cwde
push
sub
stos
adc
(bad)
sbb
shl
pop
dec
xor
add
mov
test
pusha
dec
xor
mov
jb
dec
ins
in
sbb
loop
retf
jmp
xchg
sbb
and
ret
lock
lds
sub
lahf
sbb
xchg
(bad)
imul
pop
or
fisttp
mov
stos
bound
push
sbb
std
ins
int
pop
xchg
retf
pop
ret
adc
loopne
pop
jne
xchg
loop
(bad)
ret
xchg
mov
cmps
push
jmp
idiv
pop
xchg
inc
mov
sti
add
out
scas
mov
aam
push
pop
fs
mov
dec
lock
mov
shl
inc
cmp
jle
jmp
fist
pop
aas
shr
dec
pause
xchg
sar
mov
in
mov
cdq
mov
dec
add
dec
ja
pop
movs
aad
adc
mov
cld
pop
into
lods
pop
hlt
jg
ja
jmp
and
out
fld
mov
push
add
imul
xor
scas
inc
xor
mov
adc
pusha
ficom
fiadd
xor
lock
in
je
cmp
pop
test
pop
mov
cwde
repnz
adc
rcl
jbe
es
push
movs
cmp
in
loop
das
push
rcr
call
cdq
xchg
in
mov
mov
fild
sbb
mov
cmp
test
inc
cmp
(bad)
call
and
or
shl
outs
aas
xor
in
(bad)
mov
sbb
and
lods
adc
lods
(bad)
and
dec
test
mov
pop
cmps
repnz
push
mov
shr
dec
push
mov
jge
pop
pop
add
xchg
fild
(bad)
es
cmp
or
lds
xchg
and
cmp
jne
daa
mov
fisttp
push
outs
xor
cwde
mov
add
cmc
dec
fld
les
ins
cld
adc
jae
clc
out
rcr
ins
js
int
cmp
jmp
mov
xchg
jne
lahf
loopne
pop
arpl
in
mov
test
adc
cmp
mov
cmp
lsl
push
sub
dec
test
lds
stc
mov
sbb
inc
and
fidivr
(bad)
retf
mov
arpl
pop
retf
repnz
retf
shr
sub
dec
xor
rcl
mov
cmp
test
imul
fidiv
xor
push
pushf
repz
xlat
push
dec
sub
mov
cmp
mov
(bad)
push
dec
push
xchg
loopne
fstp
mov
pop
repnz
and
push
mov
neg
xchg
retf
xchg
mov
fidivr
push
fidiv
pavgw
add
push
ins
cmps
mov
or
jo
or
test
cmp
nop
mov
adc
inc
xlat
sub
fisttp
push
and
fucomip
repnz
loope
sbb
lods
xchg
xchg
dec
into
je
addr16
push
cld
xor
aad
mov
popa
mov
pop
les
cmps
adc
in
add
loopne
js
aad
push
bound
out
dec
or
xor
push
add
jle
pop
jecxz
sbb
test
out
(bad)
call
dec
adc
idiv
retf
inc
jecxz
shl
xor
mov
mov
jmp
xchg
rcr
mov
jmp
out
adc
stos
sub
xchg
and
in
retf
es
mov
and
push
in
lahf
cmp
retf
les
ins
loope
in
xchg
jecxz
ja
aaa
xchg
xchg
aad
rcr
and
hlt
ja
mov
aad
data16
call
bound
jmp
hlt
push
(bad)
xor
pop
ja
(bad)
arpl
jne
pop
push
push
adc
adc
xchg
push
push
and
inc
out
cmc
(bad)
loope
dec
lods
pop
jb
jns
xchg
mov
arpl
in
mov
dec
inc
sar
pop
cld
pushf
xchg
sbb
int
pushf
es
xor
jmp
cld
psrad
xor
in
(bad)
repz
jbe
add
addr16
in
adc
jo
adc
mov
ret
in
ss
stc
cmp
xor
ja
pop
mov
and
push
adc
js
dec
sub
jp
push
fisttp
and
sub
push
and
cmp
jno
mov
push
mov
mov
call
fwait
mov
jl
les
add
sar
dec
test
pop
int
sub
lds
inc
jp
and
sub
aad
mov
jmp
xchg
outs
add
cmp
cdq
jbe
mov
aad
adc
sub
call
mov
cmp
pop
xor
or
xchg
dec
jmp
arpl
arpl
cmp
das
js
test
div
inc
and
add
gs
and
dec
stos
or
loope
add
test
push
adc
xor
in
push
arpl
fwait
iret
out
mov
(bad)
fucomi
xchg
fld
cmps
mov
stc
retf
push
adc
repnz
pop
and
pop
call
mov
cmp
mov
fwait
jo
mov
fcmove
jne
pop
ins
arpl
call
out
lock
sbb
int3
jo
jg
dec
jb
mov
mov
dec
js
retf
jg
cmp
mov
stos
out
test
adc
mov
(bad)
js
fwait
jns
in
pop
ret
xor
jmp
inc
mov
jmp
inc
(bad)
xchg
xchg
mov
leave
push
fs
mov
into
fidiv
add
mov
es
mov
(bad)
in
into
lock
mov
scas
add
push
lea
mov
cmps
rol
retf
pop
fdivr
mov
sub
adc
dec
pop
jbe
movs
jecxz
push
push
sub
test
dec
neg
outs
nop
dec
lds
cli
pop
cwde
hlt
mov
clc
jbe
xor
jno
fcmovu
push
fidiv
push
in
jl
ret
inc
inc
call
pushf
mov
repnz
xor
mov
sub
lea
push
jp
fstp
xchg
add
cwde
ins
jl
xor
stos
outs
mov
xlat
ret
add
test
fmul
mov
mov
aad
add
imul
aam
xor
lahf
loop
and
clc
lea
fisub
imul
sbb
scas
iret
push
sub
movs
lds
(bad)
and
jle
cmp
dec
push
fwait
sbb
pop
xor
inc
pop
xchg
dec
pushf
mov
mov
in
in
sub
inc
pushf
dec
fmul
jge
icebp
out
mov
mov
loope
xchg
cmp
test
or
iret
sbb
(bad)
in
gs
bound
enter
mov
xchg
or
jae
repnz
(bad)
cmp
sbb
mov
test
ror
nop
push
mov
test
or
mov
rol
repz
aam
dec
ds
fld
hlt
dec
inc
xor
cmp
movs
mov
popf
pushf
mov
inc
jmp
xor
movhps
mov
mov
cmps
sub
js
lods
pop
xchg
in
stos
mov
iret
or
mov
push
mov
mov
mov
sub
loope
pop
add
mov
ror
movs
jno
es
loope
jmp
xor
push
ins
push
xor
dec
push
cli
(bad)
jle
mov
mov
stc
arpl
ds
shr
ret
scas
sub
ins
in
mov
out
std
pop
and
push
mov
shl
bnd
push
test
inc
loope
mov
dec
loope
es
rcl
jne
mov
jmp
ss
push
mov
mov
xlat
std
out
sub
mov
inc
mov
mov
jg
loope
adc
sahf
fbstp
mov
(bad)
aam
xchg
push
push
out
psubusb
dec
xor
int
cdq
jmp
dec
mov
add
cmp
aas
jg
sbb
mov
add
and
pop
mov
icebp
cs
xor
inc
aaa
lods
pop
popf
mov
push
in
imul
xchg
or
lea
inc
inc
ror
ja
(bad)
repnz
in
pusha
inc
in
ss
call
in
push
not
in
into
xchg
and
stos
push
fdivr
adc
das
mov
sub
add
je
xchg
aas
pushf
mov
outs
xchg
lock
jnp
mov
adc
cdq
xor
fs
aaa
pop
ret
bound
add
and
ds
loope
xlat
ror
adc
mov
adc
ret
fild
sbb
inc
or
not
and
mov
outs
out
xchg
pop
pop
out
out
push
push
mov
xchg
(bad)
call
or
sar
lods
int3
or
fbstp
outs
xchg
(bad)
push
je
inc
int
add
das
lds
cmps
xchg
int
sbb
ror
retf
sbb
jno
sti
outs
bswap
jb
ins
cmc
pop
add
cmp
xlat
fstp
rcl
test
movsx
in
ss
inc
dec
mov
es
xor
ins
test
fisub
es
imul
ins
adc
adc
int3
cmp
dec
sbb
fldenv
lods
call
imul
mov
mov
sar
xor
in
and
sbb
push
mov
jp
cwde
mov
xor
int3
cmp
jnp
add
test
dec
mov
push
jecxz
aad
lods
push
sub
inc
jl
ins
adc
mov
into
pop
cdq
test
and
pop
pop
clc
popaw
dec
(bad)
cmp
(bad)
dec
mov
sbb
js
arpl
cwde
sbb
es
cdq
adc
or
xchg
adc
jb
repz
repz
adc
push
inc
icebp
aad
es
cmp
xchg
call
in
inc
fwait
mov
out
dec
add
adc
adc
cld
pop
aas
xchg
and
addr16
shr
cs
mov
cmp
sbb
cdq
jl
inc
xchg
enter
inc
lea
out
push
ins
inc
inc
jge
imul
dec
dec
js
fdivr
sub
push
mov
inc
jmp
xor
jbe
xlat
xor
adc
in
jl
out
icebp
inc
xor
pop
adc
mov
aas
pop
pop
mov
retf
int
iret
shl
lahf
dec
stos
sbb
pop
pop
push
mov
or
in
adc
dec
adc
(bad)
scas
in
das
clc
inc
inc
push
or
push
and
xor
ins
inc
mov
push
std
movs
mov
fdivr
jecxz
lods
cmps
cmps
inc
mov
mov
shr
mov
mov
nop
imul
sahf
cmc
shl
jne
fcomp
or
push
mov
pop
fstp
jns
push
clc
push
add
jecxz
rcr
and
mov
and
adc
into
add
push
fisttp
mov
sti
xchg
call
jl
outs
lock
das
out
stos
inc
dec
cmp
inc
shl
xchg
mov
mov
(bad)
sbb
int
push
add
sub
jl
adc
xchg
movs
mov
xor
jae
add
mov
in
call
sub
sub
and
and
mov
and
add
adc
mov
movs
jne
jae
xlat
xchg
(bad)
jmp
pop
sub
dec
test
int3
and
lods
dec
ret
(bad)
les
xchg
xor
mov
push
xchg
jne
or
je
gs
outs
adc
stos
adc
imul
mov
xchg
push
mov
xchg
ds
or
or
mov
fdiv
fwait
or
jo
ficom
out
inc
out
mov
sub
jmp
and
cmp
(bad)
jo
scas
pop
pushf
inc
dec
repnz
adc
enter
jge
cdq
xchg
pop
pop
es
sahf
push
and
pop
out
pushf
js
xchg
push
sub
sar
jbe
jmp
inc
ret
pop
adc
jg
jg
xchg
pop
cmp
shl
and
and
test
mov
sbb
pop
and
cmp
ja
out
out
ins
push
cs
sub
xchg
stc
stos
xor
xor
(bad)
jmp
sub
xor
(bad)
mov
pop
test
and
arpl
outs
mov
gs
imul
(bad)
outs
and
push
adc
or
fmul
inc
push
ins
sbb
pop
or
ins
sub
push
inc
ins
and
mov
jg
or
cmps
mov
ins
fimul
test
ret
cld
je
mov
adc
ins
ja
(bad)
mov
cmp
pop
adc
leave
mov
push
call
xor
push
pop
test
leave
cmp
pop
and
sub
or
and
movs
(bad)
retf
neg
fistp
fcomp
call
add
push
das
cwde
mov
mov
jnp
outs
cmp
cmp
das
(bad)
mov
out
nop
fistp
inc
pop
out
adc
mov
jp
test
pop
out
arpl
idiv
jae
cs
sti
or
mov
hlt
inc
leave
dec
cmps
xor
xchg
movs
cmps
inc
das
dec
mov
inc
mov
dec
xchg
xchg
scas
in
add
push
fcmovnb
mov
sub
cmc
out
and
push
sub
(bad)
jecxz
xchg
aaa
mov
mov
gs
aad
push
std
xor
mov
push
sbb
mov
adc
jbe
(bad)
adc
add
mov
es
test
cmps
(bad)
fst
into
icebp
and
add
xchg
and
test
xor
add
lods
or
aad
(bad)
stc
jmp
dec
jmp
adc
cmp
std
cmp
nop
xchg
add
cmp
imul
xchg
dec
adc
inc
push
inc
sbb
push
mov
sbb
sub
jmp
das
sub
repz
inc
fs
das
cmp
mov
add
inc
in
(bad)
sar
sbb
pop
xchg
lds
sub
inc
pop
arpl
imul
cmp
loop
adc
pusha
pop
mov
mov
fcom
stos
push
mov
scas
sbb
icebp
adc
mov
mov
adc
call
sbb
adc
add
add
cmp
into
pop
pop
imul
(bad)
push
int
dec
jl
sbb
adc
dec
sbb
jne
addr16
iret
loopne
sbb
dec
adc
enter
pop
pop
cld
xor
mov
push
jnp
xor
imul
push
test
sbb
mov
out
shr
sar
dec
or
push
xchg
push
lods
clc
pop
add
dec
push
cwde
jno
cmp
inc
pop
fcmovu
in
and
ret
test
add
xor
jne
popa
inc
and
lea
(bad)
ficomp
xchg
sub
mov
pop
inc
dec
ins
cmps
cdq
push
push
jmp
dec
pushf
jmp
fistp
sbb
push
inc
out
dec
sahf
outs
sar
xchg
inc
sub
loope
in
nop
shl
lock
int
stc
xchg
test
jno
enter
(bad)
xor
out
scas
add
clc
push
icebp
mov
mov
mov
xchg
lods
ds
mov
ds
jp
imul
sbb
js
push
pop
mov
lods
pop
dec
jo
pop
cwde
test
sti
cdq
rcr
dec
shl
push
das
lods
pop
sub
jb
call
sub
int
(bad)
retf
enter
mov
cli
push
mov
daa
int3
jmp
das
mov
(bad)
and
jo
push
les
ins
rcr
movs
mov
or
rcr
fdiv
and
(bad)
mov
jmp
mov
adc
jbe
xchg
jl
dec
jge
test
cmc
push
adc
pop
cmp
pop
das
loope
sub
test
xchg
jg
aam
lock
stc
leave
jl
push
pop
adc
ja
mov
test
inc
call
fmul
daa
pusha
jno
lock
or
lods
fimul
pop
push
add
jg
xchg
aad
mov
ins
loopne
inc
sti
nop
jle
arpl
jae
ror
test
add
pop
fsubr
adc
sar
xor
test
leave
int3
jg
ja
stc
push
pop
mov
mov
xor
xchg
xlat
(bad)
pusha
ds
push
icebp
lods
aaa
jmp
movs
sar
outs
retf
(bad)
sbb
cmp
mov
into
xchg
mov
push
cmp
repz
movs
sub
lds
xor
daa
clc
icebp
xchg
xchg
or
gs
hlt
stos
cld
mov
pop
push
xor
sbb
cmps
xchg
stos
push
je
popa
mov
cmp
jmp
test
stc
jmp
cli
mov
pop
fcomp
push
jmp
loopne
ror
mov
jecxz
(bad)
in
add
and
repz
pop
pop
jg
and
lahf
cmc
cs
mov
data16
cmp
mov
inc
pop
jg
push
outs
fst
dec
hlt
xor
xor
(bad)
leave
out
scas
into
loope
mov
or
push
(bad)
(bad)
xchg
ins
arpl
mov
push
loopne
mov
push
in
retf
push
ja
adc
out
pop
ror
or
mov
push
ret
dec
cmp
cs
sar
cli
push
or
popf
add
sti
fcmovnu
aas
dec
push
push
sbb
jecxz
inc
push
fsub
cwde
rcl
add
stc
or
push
jo
bound
push
int
dec
sar
rcr
pop
(bad)
pop
xor
pop
mov
(bad)
hlt
arpl
xchg
cmp
mov
btc
add
movs
sbb
adc
push
imul
cld
pop
or
mov
test
sub
lods
(bad)
shl
movs
push
dec
push
ss
(bad)
xor
ret
pop
cmc
movs
adc
cld
test
ret
xor
enter
sub
push
leave
aas
stos
ins
neg
movs
cmps
xchg
xchg
xlat
xchg
jmp
pop
stos
call
sub
sub
cmps
sbb
xchg
cmp
(bad)
ins
and
mov
loopne
adc
or
icebp
pop
and
sbb
cld
daa
in
or
mov
cmc
xchg
dec
and
adc
dec
adc
push
cmp
je
and
fs
jle
add
inc
loopne
out
adc
adc
xchg
pop
mov
jno
jns
adc
jbe
mov
ret
popa
into
and
nop
sbb
push
cld
sub
fdivrp
inc
out
into
in
(bad)
jnp
or
(bad)
xchg
xchg
sbb
(bad)
aam
fnstenv
jne
lods
dec
mov
cmp
cmp
push
pop
jge
inc
cmp
test
int
nop
mov
ret
aas
mov
or
out
out
mov
dec
jne
fistp
imul
jbe
inc
jecxz
test
pop
cmp
cmps
in
sbb
and
pop
outs
mov
xor
sub
cmp
pop
setbe
jo
xchg
shr
inc
xor
inc
stos
ror
std
jo
iret
jge
xor
fiadd
(bad)
push
sbb
pop
and
ss
enter
inc
jg
pop
pop
adc
das
xchg
push
sti
xor
mov
hlt
sub
mov
test
pop
dec
push
cmps
pop
int3
push
sar
fs
jmp
pop
jnp
in
mov
cmp
jg
in
adc
call
inc
call
inc
mov
jnp
jbe
dec
xchg
rol
xchg
mov
mov
push
xchg
mov
aad
clc
cmc
inc
mov
xor
sbb
cmp
(bad)
test
and
and
ja
in
push
mov
adc
or
pop
fadd
scas
les
pop
adc
inc
icebp
xchg
in
(bad)
out
jge
mov
or
cmc
in
das
pop
test
sub
retf
adc
fs
out
sbb
imul
mov
push
dec
ss
pop
fwait
repz
push
fistp
mov
push
inc
dec
jae
in
cmp
es
xchg
repz
xchg
call
mov
gs
and
mov
jns
inc
clc
popf
bound
lahf
push
adc
pop
push
dec
(bad)
ror
cmp
jg
jp
shr
lods
adc
les
stos
jmp
bound
sbb
cmps
(bad)
stos
test
out
pop
test
jle
loope
leave
ret
push
retf
(bad)
fisttp
inc
and
jno
mov
inc
(bad)
addr16
cmp
fs
hlt
mov
(bad)
xor
popa
sbb
cmps
lods
xor
adc
inc
mov
jbe
movs
loope
pop
fiadd
or
retf
xchg
add
std
adc
mov
xor
pop
mov
into
sbb
outs
xor
call
fmul
out
sqrtps
outs
jg
sub
sbb
inc
fsubr
mov
dec
mov
ror
ficom
mov
movs
(bad)
pop
lds
das
ret
jno
push
jg
cmp
lds
sub
push
hlt
ja
dec
lods
mov
mov
or
fiadd
inc
mov
push
pop
cmp
nop
movs
push
jb
sub
je
test
fdiv
scas
jb
add
push
mov
xor
js
and
outs
outs
mov
push
pop
popf
pop
cmps
sahf
and
cli
fs
mov
rdtsc
and
xchg
or
inc
xchg
fcomp
jg
mov
xchg
movs
xchg
push
fwait
add
mov
xchg
adc
int
aas
ret
retf
nop
inc
xor
xchg
xabort
push
add
ds
or
mov
inc
call
dec
jno
pop
cmp
and
jmp
(bad)
inc
mov
pop
jge
arpl
push
adc
mov
loop
mov
lods
mov
cmp
aad
or
cmc
sar
iret
addr16
mov
neg
sbb
mov
les
push
ds
jecxz
hlt
push
sub
inc
repz
cmps
movs
movs
push
push
pop
call
dec
out
pop
fidiv
cmp
lds
cmps
rcr
xchg
push
adc
or
cmp
push
sbb
or
xor
sbb
sbb
mov
dec
mov
ja
cmp
adc
movs
jl
sbb
ja
cmps
jmp
pop
ficomp
mov
mov
clc
xlat
loop
test
(bad)
mov
es
outs
cmp
mov
push
and
jmp
lods
in
cwde
pop
lods
(bad)
popf
movs
fild
push
call
lar
xor
xor
loope
cmp
out
retf
(bad)
mov
dec
pop
sbb
add
shr
(bad)
stos
sub
mov
shl
dec
cwde
out
dec
je
sub
cmps
fdivr
pop
das
ret
push
stos
stos
pop
das
or
mov
std
icebp
push
scas
arpl
sbb
jmp
jg
arpl
mov
shl
push
mov
dec
inc
pushf
movs
lock
push
rdtsc
add
adc
inc
(bad)
repz
imul
aam
xor
sub
aam
fimul
mov
and
inc
scas
jae
into
xor
sbb
jp
fwait
popf
pop
je
jae
pop
(bad)
dec
or
(bad)
push
sbb
enter
sub
jmp
ret
pop
dec
(bad)
sub
push
or
mov
and
pandn
pusha
xlat
aaa
stos
pushf
ins
shl
mov
or
cmp
sub
mov
jle
int3
xchg
inc
and
loopne
or
sar
mov
push
mov
sub
imul
lea
mov
xchg
inc
dec
loop
jns
xchg
fldcw
push
push
loopne
dec
lea
dec
pop
jp
push
lahf
push
fnsave
std
inc
add
cmp
xor
and
lods
jo
or
inc
mov
xchg
adc
mov
fld
std
stos
mov
lods
and
rcr
js
or
das
or
cmps
sbb
inc
pusha
cmp
xchg
rcr
icebp
cmp
(bad)
push
cld
out
mov
dec
outs
and
push
rcl
xchg
push
pop
xchg
and
sbb
lock
cmc
pop
or
and
pop
pop
retf
fmul
pop
push
adc
cmp
push
(bad)
scas
lock
je
hlt
inc
jo
mov
fistp
dec
cmps
sub
fs
cdq
push
add
adc
pop
inc
adc
xor
pop
mov
test
into
sub
mov
push
push
ret
jmp
xchg
arpl
jp
push
rcr
scas
ins
push
sbb
(bad)
mov
mov
inc
out
inc
test
sub
mov
push
lods
sbb
dec
fdivr
ds
mov
loopne
cmp
idiv
scas
mov
mov
dec
loopne
inc
push
xchg
test
xchg
outs
fistp
fstp
nop
mov
cwde
mov
ja
retf
cs
mov
out
cmp
neg
mov
xchg
mov
xchg
repnz
jle
repnz
ins
cmp
jecxz
test
inc
xchg
outs
add
ret
in
cld
add
pop
xchg
(bad)
push
je
(bad)
int
or
or
cmp
cmps
movs
pushf
clc
dec
ret
mov
xchg
pop
cwde
loope
jo
fist
das
mov
out
fsub
xchg
mov
pop
cld
dec
fsubr
push
out
and
hlt
loopne
cdq
sub
sbb
shl
retf
ins
pop
in
daa
fstp
sub
mov
call
adc
jmp
in
loopne
rol
div
daa
pop
(bad)
mov
ret
jbe
cmp
sbb
hlt
sahf
outs
cli
retf
cmp
pop
pop
int3
jl
fdivr
stos
jbe
mov
sbb
pop
sbb
xchg
cmovl
mov
loopne
sbb
(bad)
fisttp
ins
inc
inc
cmp
fwait
or
push
xor
rcr
inc
dec
add
pop
mov
pop
jp
into
adc
xchg
jne
pop
gs
shr
ret
push
daa
push
outs
je
sub
nop
cmps
inc
xchg
xchg
mov
cs
mov
jecxz
and
movs
dec
popf
cmps
(bad)
jmp
pop
mov
sti
mov
sbb
mov
cwde
xchg
mov
mov
push
popa
adc
imul
fisubr
dec
and
(bad)
xor
sub
sub
fldenv
push
movs
hlt
dec
lods
(bad)
mov
(bad)
call
dec
or
cmp
je
and
mov
rol
pop
leave
(bad)
xchg
xor
outs
push
outs
cs
xchg
hlt
call
sahf
jbe
outs
sbb
add
je
sbb
pop
push
inc
ss
push
sub
ins
scas
dec
inc
push
in
js
test
mov
pop
pop
repnz
sbb
xchg
xchg
mov
inc
aad
arpl
pop
mov
push
sub
mov
hlt
outs
loop
(bad)
adc
dec
mov
mov
or
stos
adc
clc
sub
in
mov
test
cmp
loopne
sbb
es
pop
imul
jne
jmp
jmp
inc
outs
xor
mov
pusha
(bad)
or
jb
js
fisubr
inc
lahf
fiadd
xlat
cmp
mov
dec
jmp
aas
push
les
add
sti
sub
loopne
(bad)
cdq
push
pop
movs
mov
dec
lods
inc
mov
xor
test
fst
jbe
cmp
adc
and
pop
add
pop
dec
xor
das
mov
jno
ficomp
dec
es
jge
mov
mov
(bad)
stc
aas
out
mov
xor
idiv
add
pop
xchg
scas
in
mov
jmp
lods
xchg
(bad)
(bad)
hlt
xor
mov
dec
jae
int3
jb
push
sahf
lea
sbb
or
cmp
adc
ins
das
pop
mov
sbb
pusha
lock
popa
test
ret
inc
push
lahf
or
sub
pusha
mov
and
jmp
jl
mov
(bad)
into
sub
mov
add
add
movs
movlps
fdivr
sub
mov
adc
xchg
minps
(bad)
jne
add
(bad)
loop
fcomp
jnp
dec
dec
mov
fucomp
xchg
xchg
mul
xchg
push
js
cmps
cld
out
adc
aaa
ror
cmps
jae
jmp
arpl
cmps
xor
aad
inc
scas
lods
shr
imul
sbb
fstp
out
push
int3
(bad)
in
mov
mov
or
mov
sbb
inc
cmps
jmp
cld
push
push
fdiv
inc
ins
xor
rcl
icebp
mov
sub
in
or
test
mov
jl
rcl
data16
out
cdq
push
jge
inc
ret
add
mov
sbb
inc
xchg
xchg
mov
pop
ficomp
adc
neg
sub
fbld
test
and
push
mov
jb
jne
jmp
out
aaa
add
test
push
add
sub
jg
pop
and
retf
push
sub
xchg
pop
(bad)
retf
outs
mov
add
adc
xchg
sahf
(bad)
mov
retf
cmp
mov
data16
jl
push
add
cmc
cmp
(bad)
leave
jb
mov
jle
pop
ins
icebp
xchg
mov
mov
mov
daa
repnz
out
and
push
dec
imul
es
and
ins
xor
mov
test
sub
mov
sbb
push
cwde
jg
and
inc
sub
movs
push
mov
push
mov
jbe
pop
inc
mov
sub
bound
inc
cmp
bnd
in
adc
out
aas
jge
xchg
jle
imul
cmps
cmc
fsub
inc
jo
(bad)
cld
ret
sbb
scas
mov
add
rcl
and
hlt
dec
mov
movs
movs
jne
dec
(bad)
ss
sbb
pop
xchg
clc
sbb
(bad)
(bad)
mov
dec
mov
neg
pop
std
jno
and
mov
mov
mov
pop
inc
push
xor
mov
ins
jmp
xchg
fdivr
out
pop
test
mov
xchg
xchg
pusha
xchg
sbb
sbb
add
idiv
mov
bound
sub
in
mov
es
ret
pop
inc
or
mov
in
cmc
inc
(bad)
shr
in
fmul
nop
bound
lods
pop
push
imul
mov
dec
or
les
xchg
shr
test
jmp
add
inc
dec
es
retf
pusha
push
xor
mul
int3
ficom
iret
pop
inc
push
test
outs
mov
cs
cli
rol
xchg
je
sti
push
or
jg
add
outs
sub
out
push
xchg
mov
retf
fisttp
es
mov
pop
cmp
in
xor
sbb
loop
inc
push
push
mov
jl
cld
je
xor
xchg
sub
(bad)
push
rcr
call
retf
retf
xchg
ror
addr16
xchg
js
add
add
mul
fidiv
mov
stos
jns
repnz
mov
inc
movs
lods
lahf
xor
cmp
sbb
leave
retf
jne
daa
clc
pop
xchg
gs
mov
mul
out
xor
or
xor
push
mov
and
mov
and
mov
xchg
pop
or
cmp
or
add
or
dec
dec
mov
test
ret
ficom
xchg
je
std
aaa
mov
inc
mov
sub
pop
pushf
cld
js
push
and
scas
mov
mov
pop
pop
and
sbb
pop
repnz
int3
out
push
push
jo
pop
xor
iret
fst
pop
ret
call
xor
push
push
or
ret
dec
xchg
stos
dec
mov
out
retf
out
xchg
add
ds
out
mov
mov
mov
jo
(bad)
arpl
outs
and
stc
out
adc
pop
and
retf
(bad)
fstp
jecxz
dec
in
test
ds
push
mov
add
push
mov
popa
cdq
inc
jecxz
sbb
push
into
jecxz
lods
neg
(bad)
fbstp
xor
retf
rcr
sahf
sbb
adc
jno
out
push
mov
test
dec
inc
mov
dec
sbb
inc
sbb
or
(bad)
cmps
sub
or
push
in
dec
push
lea
sti
xlat
bnd
cmps
push
lods
loop
and
mov
dec
jmp
push
in
icebp
add
jge
cmps
je
call
pop
mov
jnp
in
loop
mov
lods
sub
lock
into
sbb
ins
outs
clc
lock
sbb
mov
loopne
xchg
imul
into
enter
imul
inc
mov
sub
and
imul
xchg
cld
imul
jo
imul
lock
out
add
icebp
retf
data16
int3
daa
mov
retf
mov
add
mov
retf
les
adc
in
pop
xor
or
and
inc
lock
cmc
cmc
pusha
and
loope
ds
fs
aas
sbb
or
or
pop
or
xor
mov
sub
mov
mov
add
mov
movs
mov
out
pusha
add
push
movs
inc
dec
aas
mov
inc
mov
ja
push
jb
ds
jb
js
cmp
lahf
dec
jo
cmps
(bad)
mov
and
lock
mov
adc
mov
bound
add
pop
call
pushf
nop
lds
inc
mov
xchg
lods
loop
jmp
inc
(bad)
inc
aas
test
push
test
sbb
cmp
lock
ss
cmps
dec
imul
retf
jno
ficom
jg
cmc
repnz
or
enter
mov
mov
cmp
inc
test
out
data16
mov
ja
inc
(bad)
call
jmp
dec
ins
test
mov
cmp
out
inc
pop
ror
pop
cmc
test
out
sbb
(bad)
arpl
icebp
sub
sub
int3
aas
jge
push
lea
retf
ins
test
dec
popa
int3
sub
int
push
call
shl
addr16
cmp
loop
add
fwait
mov
iret
gs
and
cmps
into
lods
sub
mov
popf
pop
jno
fsub
fcomp
xor
outs
outs
dec
mov
popf
adc
shl
pop
mov
cmp
sub
out
pop
jb
mov
in
sar
xchg
(bad)
addr16
mov
pushf
rcl
iret
mov
pushf
dec
fs
sbb
push
or
cli
mov
outs
call
enter
push
inc
cdq
fisubr
and
bound
jnp
(bad)
in
jns
xor
mov
pop
cli
pop
fs
je
cli
push
pop
or
mov
popf
arpl
cmp
pusha
mov
imul
call
es
ret
jmp
shl
push
dec
stc
jnp
mov
jo
jmp
sbb
lea
mov
std
ins
retf
ds
sbb
ins
sti
jns
lods
ss
shr
pop
jo
jmp
(bad)
sub
lahf
cmp
mov
fs
push
mov
inc
sbb
xchg
mov
mov
jecxz
xor
mov
add
lods
(bad)
jl
fldenv
fcom
mov
icebp
hlt
mov
arpl
data16
scas
jo
add
xor
and
std
shl
or
int
mov
sbb
push
adc
popa
arpl
nop
addr16
cmp
lods
xor
js
cmp
and
adc
(bad)
fstp
in
in
mov
cld
call
sahf
jg
adc
cmp
mov
outs
adc
in
scas
jecxz
lock
in
rcr
arpl
addr16
and
mov
je
dec
cmc
mov
leave
dec
dec
es
or
imul
retf
es
or
pop
das
int
icebp
sub
or
not
xor
dec
jae
push
adc
inc
ins
(bad)
fidivr
jb
sub
push
adc
movd
imul
mov
lds
push
cmp
lds
in
inc
add
pop
push
inc
cmc
fstp
add
add
jne
in
fimul
fcom
jno
or
mov
je
cli
jbe
in
mov
imul
jle
jge
cmp
dec
mov
push
cmp
or
mov
inc
xchg
lods
mov
into
pop
mov
adc
(bad)
retf
mov
adc
stc
sub
or
das
lds
into
jb
mov
sub
data16
arpl
cmp
jmp
xor
sti
fwait
adc
call
and
fdivr
pop
cmps
fst
cli
xor
push
sbb
cmc
cmp
cdq
in
pop
xchg
gs
inc
scas
mov
mov
jno
ret
dec
ins
jns
sub
or
sbb
ss
jp
cmp
outs
mov
nop
or
fisubr
aas
inc
sbb
test
xchg
adc
pop
cmp
sub
stos
push
and
add
fwait
and
pop
fist
scas
or
push
adc
sub
sub
pop
xchg
imul
in
popf
ficomp
fiadd
sbb
adc
das
dec
out
push
inc
jb
mov
jmp
fcmovnb
xor
push
ret
in
bound
loopne
inc
pop
fld
out
or
in
add
nop
ret
xchg
stc
mov
dec
dec
dec
mov
xor
inc
in
mov
enter
xor
ins
or
sbb
ins
jecxz
jge
das
inc
sub
icebp
pop
dec
jp
pop
xchg
cmp
push
dec
lds
lods
(bad)
cmp
push
adc
aad
in
idiv
jecxz
ret
mov
mov
push
test
and
xor
sub
or
jb
out
cld
xchg
stos
or
xchg
daa
or
arpl
(bad)
xor
cmp
push
bound
inc
mov
mov
sub
jno
call
push
xor
jmp
loop
imul
add
mov
aam
push
bound
xchg
jbe
xchg
jno
inc
shr
mov
sub
or
cmp
rcl
ins
jecxz
sub
cmp
push
adc
dec
adc
nop
ficom
xor
and
xor
div
jmp
fs
shr
inc
jb
outs
add
pop
add
jmp
jle
sbb
sbb
adc
add
lahf
adc
and
mov
ins
pop
ficom
xor
int3
pop
in
xchg
ror
add
out
imul
repnz
mov
pop
icebp
sbb
cmp
dec
or
sahf
add
sbb
sbb
frstor
(bad)
out
lods
push
ja
popa
and
push
push
fistp
xor
ins
or
xlat
sbb
bound
mov
sahf
test
lock
sbb
ds
imul
add
push
cli
aas
dec
les
dec
pop
fcomp
sbb
out
ds
dec
push
lea
mov
jmp
and
mov
jo
stos
outs
gs
sahf
adc
jl
lods
inc
daa
les
dec
test
jno
dec
call
loop
js
iret
jno
mov
es
sbb
(bad)
dec
sbb
mov
mov
adc
adc
cmps
ret
repnz
std
imul
je
aad
mov
mov
sub
push
mul
rol
bound
ret
int3
pop
push
cld
inc
dec
jmp
dec
pop
adc
std
pusha
xor
sbb
scas
bnd
enter
sub
mov
jae
xchg
and
push
xchg
add
(bad)
dec
rol
xchg
jne
mov
sbb
or
xchg
mov
das
xor
inc
dec
sub
xchg
adc
mov
dec
clc
sbb
cli
or
adc
in
mov
sub
jle
xchg
pop
xchg
dec
sbb
mov
add
pop
outs
cmp
cmp
arpl
imul
ins
test
cmp
mov
sahf
inc
stos
xchg
push
jle
sar
or
jmp
inc
jecxz
in
or
and
inc
dec
or
lahf
imul
mov
sbb
or
mov
cmp
push
stos
push
daa
jae
(bad)
pop
shl
lods
test
mov
popf
add
sub
xchg
sub
jle
xor
dec
frstor
sbb
push
and
call
pop
je
push
inc
xor
inc
jnp
cmp
pop
ret
pop
inc
fisub
jmp
pop
outs
jl
mov
les
xor
test
stc
out
jl
and
scas
sub
jnp
xchg
ins
aaa
vmovddup
je
je
push
ficom
or
add
jg
dec
cmp
and
jecxz
xchg
ds
not
sahf
xchg
add
push
icebp
test
sti
add
sbb
fiadd
mov
and
sub
lods
mov
(bad)
xchg
aaa
jns
pushf
add
inc
push
jecxz
nop
and
cmp
hlt
sub
cmps
mov
inc
mov
jp
inc
jle
stos
aas
inc
xor
mov
adc
aaa
add
add
data16
out
fs
cmp
jmp
popa
jnp
push
test
lahf
clc
sub
clc
cs
adc
or
mov
pop
push
pop
dec
xchg
sti
clc
not
xor
loope
pop
sub
loope
sbb
cli
sbb
ins
sbb
pop
es
test
cmps
int
cmp
push
mov
dec
fild
mov
movs
mov
mov
rol
inc
cmp
sub
xlat
push
dec
stos
push
arpl
cli
mov
cmp
push
ret
mov
cmps
or
add
sub
test
jne
xchg
push
dec
jo
int
into
sub
jge
stos
stc
fsub
sbb
iret
push
call
sbb
enter
mov
fwait
outs
or
shl
in
or
adc
iret
mov
pushf
inc
std
ins
jp
or
pop
je
adc
js
ficom
neg
sbb
or
ins
(bad)
(bad)
push
nop
adc
sbb
and
jmp
ja
jp
shr
sub
and
pusha
not
pop
fcmovne
pop
mov
xlat
jmp
jle
jno
(bad)
sub
xchg
mov
sbb
mov
das
fwait
dec
hlt
imul
xor
jmp
mov
mov
sub
jnp
or
adc
scas
lock
xchg
adc
(bad)
jbe
push
sbb
push
out
sbb
jne
std
(bad)
mov
pop
aad
or
(bad)
push
push
mov
dec
dec
sub
push
dec
(bad)
xchg
add
mov
jmp
or
push
mov
ins
sbb
stos
pop
fistp
pop
sub
test
mov
pop
xor
sub
cmp
jns
fcmovnbe
adc
gs
jge
jp
mov
cmps
mov
cwde
test
in
popf
ret
mov
lahf
xor
shl
push
or
pop
mov
jle
setge
lods
push
stc
outs
adc
pop
push
push
out
data16
mov
cmp
(bad)
loop
inc
mov
cld
or
cmp
xor
add
(bad)
cmp
retf
lahf
loopne
cdq
jge
stc
mov
pop
out
sub
jmp
and
add
hlt
sub
gs
test
dec
jg
fiadd
lahf
pop
push
jl
xchg
leave
push
add
jb
dec
ret
inc
pop
cmp
fcmovnbe
js
mov
mov
inc
xor
js
inc
add
retf
cmp
test
xchg
ja
popf
cmp
jae
movs
inc
arpl
(bad)
xor
add
pop
movs
jl
scas
xor
(bad)
push
pop
xrelease
mov
js
push
ds
inc
mov
sti
out
repnz
fcom
mov
cmp
and
dec
push
mov
aaa
add
lds
add
jae
mov
js
btc
mov
fwait
or
ins
iret
xchg
jbe
mov
sub
push
js
adc
xchg
pop
nop
adc
push
mov
dec
(bad)
in
xor
and
stos
mov
mov
cmps
in
ret
add
popf
xor
or
stos
inc
add
push
or
lock
ret
jecxz
ins
leave
fld
mov
adc
cmps
inc
mov
or
pop
cmps
mov
ret
mov
mov
cmp
pop
fist
sbb
or
jle
in
sub
rcr
mov
mul
(bad)
aad
out
(bad)
iret
mov
cmps
adc
mov
aas
dec
mov
jl
jmp
iret
(bad)
cmp
inc
jg
mov
cmp
add
and
cmc
or
sbb
sahf
push
test
pop
loopne
jbe
(bad)
jbe
mov
fcomp
inc
mov
out
cmpxchg
aam
(bad)
ins
jnp
cmp
and
push
movs
cmps
in
sbb
push
mov
sub
and
xor
mov
fcmovne
sub
adc
aas
dec
fld
sbb
repz
xlat
mov
(bad)
mov
cmp
mov
push
and
outs
mov
test
into
and
std
enter
fistp
xchg
(bad)
dec
mov
imul
retf
mov
mov
call
mul
mov
(bad)
sub
sub
aas
sbb
dec
add
mov
mov
mov
addr16
push
test
fidiv
in
xchg
cli
push
sbb
sbb
cmp
dec
lods
fcomp
pop
data16
call
adc
daa
cs
mov
xchg
sar
dec
mov
mov
ins
cld
mov
jl
pushf
loope
pusha
lods
xchg
jns
daa
lea
adc
icebp
aas
hlt
ficom
int3
push
loope
mov
cmps
(bad)
cmp
xor
jbe
test
inc
xchg
xchg
sub
push
je
int
ror
or
fisubr
mov
cmp
mov
icebp
sahf
or
jnp
repz
sbb
iret
fs
xor
mov
lahf
sar
dec
and
aas
add
cmp
(bad)
mov
ins
add
or
cmp
mov
fdivr
or
jmp
add
xor
sub
jnp
xor
sbb
inc
clc
push
cmp
out
ja
xor
test
and
mov
sbb
push
sub
out
pusha
pushf
fcomp
mov
aas
jno
fsubr
mov
adc
sbb
mov
add
fist
sbb
cmp
addr16
pop
mov
mov
mov
icebp
and
jae
jg
lock
push
cmp
loopne
add
sahf
aaa
lds
pop
jnp
leave
ret
fidivr
cmps
aad
daa
or
std
pop
cmp
xchg
movs
adc
out
sub
adc
or
adc
bound
test
push
cmc
repnz
nop
mov
clc
out
pop
js
pop
add
mov
pop
mov
sbb
adc
mov
adc
pop
cmp
in
jge
daa
dec
retf
fisub
aaa
push
test
ja
out
retf
mov
mov
es
dec
inc
pop
shl
xor
call
cmp
inc
clc
adc
mov
adc
cld
sbb
push
outs
int
push
leave
mov
imul
rcr
enter
add
retf
push
das
cwde
std
sbb
ret
push
je
mov
std
add
xor
lods
outs
adc
ror
loope
pop
sbb
lds
cli
mov
jecxz
add
scas
in
fnstsw
test
mov
cmp
test
and
inc
repnz
call
and
call
xor
outs
inc
int3
and
jp
mov
add
sbb
pop
xor
inc
xor
xchg
dec
fst
aam
pusha
dec
push
sbb
aam
xlat
cmp
push
inc
les
xchg
sub
sub
fst
ret
ret
aam
aaa
xor
or
cdq
lds
into
adc
retf
jno
loope
xchg
mov
popf
push
jmp
jg
out
xchg
daa
adc
push
add
sub
push
outs
scas
pop
test
into
cmps
pop
add
cli
jbe
jbe
in
in
std
push
loopne
stc
or
sub
jo
sbb
rol
mov
mov
xchg
aaa
add
mov
sar
sub
mov
hlt
cs
xchg
jae
mov
(bad)
in
mov
in
and
sub
stc
(bad)
xor
jb
mov
sahf
sub
leave
rol
add
leave
retf
(bad)
mov
test
fdivr
rcl
aad
sub
cmp
call
xchg
fucomip
pusha
mov
or
mov
lock
ja
(bad)
mov
push
repnz
inc
gs
lock
push
add
mov
imul
pop
mov
and
lods
hlt
pop
int
pop
dec
add
mov
pushf
push
cmps
inc
cmc
mov
or
add
sahf
in
fimul
add
jecxz
and
ret
jl
pop
xchg
enter
retf
inc
repnz
jmp
xor
sub
inc
test
cmp
push
pushf
clc
daa
mov
mov
inc
sub
fcmove
dec
ja
movs
fwait
scas
mov
lea
jmp
outs
fsubp
pop
mul
ja
std
and
or
cmc
(bad)
jnp
pop
xchg
test
xchg
shr
stos
adc
es
mov
jp
cwde
push
pushf
jne
retf
mov
retf
(bad)
popf
cld
xor
push
jl
and
imul
sbb
add
popf
jl
jne
mov
out
pop
push
jns
sub
dec
xchg
inc
pop
xor
test
test
in
inc
adc
sti
lahf
jle
stos
mov
or
mov
jbe
mov
ss
outs
jmp
mov
mov
sbb
jb
cmp
mov
cli
mov
mov
in
or
sub
ins
pop
cmp
(bad)
arpl
add
push
jge
test
js
sbb
jae
sar
cmp
fbstp
shl
int3
pop
xor
call
test
popf
jb
rcr
cmps
imul
sbb
push
push
out
jecxz
loop
popa
ror
js
outs
scas
cmp
sub
dec
sti
xchg
ror
jo
cmps
repz
aad
cmp
imul
enter
cmp
pop
inc
and
pushf
int
jo
add
das
fst
mov
add
push
je
mov
mov
rol
ror
cmp
xchg
mov
rcr
pop
pop
sti
xor
fstp
push
mov
sar
mov
gs
jno
movs
or
sahf
cmp
ins
jge
leave
test
and
push
add
sbb
movs
or
cmps
sbb
jo
clc
mov
das
dec
mov
ja
lods
jge
pop
repz
ss
push
and
pop
outs
and
xor
sahf
mov
xor
int
sti
push
push
inc
into
or
jecxz
(bad)
fbstp
xor
fsubr
in
sahf
mov
aam
pop
xchg
mov
jmp
mov
mov
and
xchg
jp
ds
call
fcom
out
imul
outs
fnsave
mov
jmp
adc
and
mov
push
and
stos
and
call
mov
cli
pop
rcl
lods
pop
fdiv
pop
cmp
inc
mov
dec
cdq
lock
test
xor
mov
push
inc
pop
pop
sub
push
frstor
adc
rol
adc
ret
out
sti
bound
sahf
adc
cmp
and
sbb
leave
push
popf
(bad)
mov
mov
std
addr16
fild
xor
sub
add
jecxz
cs
addr16
int3
lock
fidivr
(bad)
in
lea
in
add
cwde
inc
(bad)
cmp
(bad)
arpl
jbe
jnp
loopne
out
mov
cmps
xlat
push
loope
and
pop
scas
arpl
(bad)
pushf
mov
sbb
mov
lahf
xor
dec
jle
addr16
leave
jo
daa
sar
into
bndstx
frstor
and
push
pop
inc
int
in
stos
xor
or
cmp
push
repz
repnz
lea
std
(bad)
shl
dec
push
nop
push
dec
mov
sub
xchg
outs
mov
jecxz
xor
test
mov
(bad)
xchg
jmp
in
ja
push
jns
sub
repnz
mov
sub
retf
(bad)
mov
out
pop
cmp
jbe
movs
clc
rep
pop
and
rcl
cld
cmp
adc
pop
imul
mov
in
aad
jne
call
mov
push
xlat
mov
push
sbb
push
mov
xchg
xchg
jl
mov
cvtpi2ps
mov
mov
fmul
sti
push
cli
dec
in
adc
call
xchg
xor
mov
lock
jns
and
pop
sbb
out
inc
cdq
test
hlt
fistp
pop
push
arpl
pop
jg
sbb
and
cdq
loope
jmp
les
es
add
mov
out
out
stos
sub
xchg
xchg
push
js
ret
shl
fwait
sbb
sub
and
pop
out
jl
inc
push
xchg
dec
in
aas
lods
mov
adc
(bad)
jno
in
mov
inc
push
movs
scas
push
jp
or
push
imul
xor
shr
sar
sbb
cmp
mov
dec
shl
dec
ret
adc
shl
push
lods
scas
xadd
inc
ret
test
inc
cmp
mov
xchg
cmp
and
dec
cmp
jb
jecxz
push
sub
cld
ret
gs
shl
mov
mov
inc
sub
out
add
push
cmp
mov
push
inc
jp
test
loopne
push
les
cli
(bad)
ja
mov
mov
jno
fs
loopne
mov
xchg
jbe
pop
movs
shr
mov
add
and
(bad)
(bad)
push
loop
sahf
adc
and
mov
call
xchg
pop
test
dec
adc
jmp
dec
(bad)
pop
cmp
aas
jne
inc
popf
push
mov
pop
lock
in
push
into
add
mov
inc
pop
push
or
outs
sub
sbb
mov
pop
inc
adc
push
hlt
dec
loopne
rol
retf
xlat
imul
pop
add
iret
sti
add
add
sbb
mov
jl
inc
loop
cmp
inc
push
jae
icebp
int3
in
xchg
call
(bad)
jmp
out
(bad)
call
out
addr16
inc
push
es
sub
push
sub
jmp
inc
or
(bad)
sub
shr
sub
dec
inc
push
cmp
mov
mov
adc
mov
mov
mov
mov
jb
xlat
lock
pop
cs
mov
xchg
jecxz
cmp
push
iret
jno
(bad)
retf
jle
not
and
shl
imul
sub
push
mov
(bad)
outs
mov
cmp
inc
mov
adc
jns
sbb
xchg
xor
fdiv
stos
lods
or
test
inc
mov
pop
xchg
movs
(bad)
sahf
sbb
xchg
fbld
dec
(bad)
int
cdq
push
add
jecxz
adc
push
das
repnz
ror
bound
jp
add
sub
or
sti
dec
popa
call
xor
jns
inc
xor
sbb
mov
jl
xchg
lahf
adc
fwait
mov
fcomp
popf
out
cli
jns
or
sbb
and
je
mov
call
sub
icebp
sti
cwde
cdq
(bad)
sbb
fst
push
aad
in
push
push
or
jg
arpl
loopne
jmp
call
in
arpl
push
into
out
mov
outs
cmps
out
mov
icebp
lock
mov
adc
cmps
shl
jne
std
xlat
mov
or
les
mov
xchg
mov
int3
retf
test
inc
sub
dec
push
xor
xor
add
pop
mov
ja
movs
pop
imul
nop
adc
xlat
fisubr
out
aas
clc
sub
aaa
cmp
es
push
jmp
ds
jecxz
mov
mov
inc
inc
ss
clc
push
fiadd
ds
jmp
adc
sub
scas
hlt
inc
jno
push
adc
adc
mov
es
mov
and
jge
enter
pop
xchg
pushf
cld
ds
mov
inc
inc
dec
nop
sbb
jnp
arpl
mov
dec
inc
test
add
dec
adc
icebp
cdq
sub
mov
pop
das
mov
add
rcl
or
mov
arpl
jge
mov
out
cmp
movs
and
cmp
imul
inc
mov
ror
mov
xchg
push
cmp
push
mov
push
call
aas
xchg
cli
mov
cmp
jmp
test
jecxz
or
mov
xor
mov
fldcw
rcl
ins
adc
jmp
sub
fiadd
xor
fwait
xchg
ds
push
jns
ins
ins
stc
xchg
icebp
mov
jg
dec
inc
clc
jbe
stos
mov
leave
add
push
cwde
pusha
loop
push
outs
and
mov
push
cdq
(bad)
call
push
adc
and
shr
sti
addr16
mov
jb
cmp
push
xor
adc
in
cmps
mov
mov
xchg
loop
fiadd
add
lock
in
test
(bad)
mov
dec
mov
or
std
js
sub
retf
sub
pop
dec
in
test
or
hlt
sbb
and
fidiv
and
pop
mov
mov
std
popf
dec
ins
gs
or
int
iret
shl
mov
js
mov
or
mov
sbb
cmp
cdq
imul
fcomp
xor
push
ds
pop
cmp
bound
pop
iret
arpl
lods
sahf
pop
inc
loop
fild
inc
mov
jo
mov
adc
fsubrp
js
mov
sar
sub
gs
push
fidiv
mov
add
pop
cmp
mov
fisubr
inc
repz
shr
(bad)
in
inc
cmps
inc
ffreep
adc
dec
mov
dec
aaa
test
clc
cmps
jae
xchg
mov
test
sub
bound
push
push
clc
adc
ds
ja
fsubr
push
mov
mov
jge
add
dec
rcl
sbb
imul
outs
rcr
stc
(bad)
int3
out
jge
or
stos
adc
pop
dec
lods
in
lds
cmp
lods
ss
clc
xchg
mov
adc
and
mov
xchg
pop
popa
jae
or
dec
sbb
and
mov
mov
stos
push
cmp
loopne
out
inc
clc
dec
mov
xor
add
shl
fnsave
mov
int
xchg
push
ss
ss
mov
aad
iret
fcom
cld
mov
cmp
(bad)
outs
out
cmp
adc
xchg
loope
add
out
imul
int3
test
rcr
sbb
call
test
dec
aam
xchg
push
in
rol
popa
ret
mov
(bad)
(bad)
jb
mov
mov
fdiv
add
rcl
pop
xchg
xor
(bad)
call
(bad)
out
adc
test
fcomp
or
xor
and
cli
and
dec
xor
adc
xor
ss
ret
or
xchg
mov
mov
sub
jns
popf
data16
les
(bad)
repnz
movs
cmps
or
dec
out
xor
jmp
dec
xlat
(bad)
(bad)
pop
xor
mov
pop
in
fist
fucomi
sti
leave
data16
outs
lock
scas
xor
(bad)
xchg
out
lods
dec
ins
daa
fcomp
cmp
(bad)
fadd
loope
add
cmp
jg
xchg
sub
mov
mov
clc
mov
scas
jmp
cdq
jecxz
add
or
hlt
push
(bad)
xor
push
add
or
mov
and
jnp
fadd
inc
mov
cmp
adc
test
scas
ins
outs
jbe
repz
lahf
int3
xchg
retf
or
sbb
(bad)
outs
cmps
sub
ins
gs
pushf
sbb
xchg
push
xchg
mov
xchg
adc
mov
xchg
or
mov
add
outs
hlt
aad
cmp
add
mov
loope
ret
ss
cwde
outs
sub
dec
mov
ja
cmps
cmp
cmp
je
add
rcr
inc
mov
ds
stos
js
sub
and
data16
outs
sub
jb
rcl
push
and
aas
fisub
pop
cwde
jge
pop
loopne
fdiv
in
imul
jg
loop
inc
dec
pop
arpl
mov
jg
scas
push
or
fwait
xchg
retf
sbb
(bad)
push
nop
fadd
mov
ss
lea
movs
add
xor
or
and
mov
add
jo
retf
(bad)
cli
(bad)
xchg
mov
push
pop
(bad)
mov
rcr
pop
fstp
fdivr
loop
mov
add
pop
adc
adc
adc
cdq
adc
and
and
xor
pop
mov
ror
stos
fidiv
lods
fiadd
mul
adc
pop
and
xchg
ins
js
inc
and
pop
(bad)
retf
push
lock
test
pop
scas
and
and
in
add
adc
lahf
jl
je
dec
cmp
fcomip
xchg
jb
es
iret
mov
mov
jge
aad
inc
mov
shr
call
in
out
xchg
into
imul
std
pop
or
sub
or
mov
xchg
push
xchg
lea
cmp
enter
pop
loop
idiv
fnstsw
call
dec
mov
(bad)
sahf
xor
iret
movs
adc
ret
mov
sar
cmp
test
jl
or
add
add
mov
popa
inc
lock
inc
rcr
hlt
cmc
cs
and
pop
or
rol
scas
pop
sub
push
xchg
jmp
push
(bad)
pop
jne
es
jbe
fs
jp
retf
xchg
dec
jl
(bad)
clc
into
xor
mov
mov
xchg
push
out
ror
int3
push
xchg
sub
into
cmp
in
je
outs
jne
hlt
test
push
jns
jmp
ins
jne
adc
mov
daa
sub
outs
mov
hlt
sbb
pop
mov
add
jp
mov
jle
mov
loopne
mov
sbb
push
xlat
and
add
int3
dec
or
loope
popf
outs
das
inc
add
arpl
bound
sub
in
xor
mov
sub
icebp
jns
repnz
pop
cmc
loopne
sti
add
retf
in
cmp
jno
icebp
and
es
xor
(bad)
stos
pop
(bad)
mov
jg
push
sbb
inc
mov
inc
cmps
jno
xor
cs
mov
adc
ds
add
and
outs
push
sub
mov
sbb
cmc
cmp
add
out
jp
xchg
push
scas
inc
or
loopne
fist
mov
icebp
dec
mov
imul
idiv
in
or
xor
ror
dec
sub
pusha
push
shl
scas
mov
jo
std
or
fst
mov
xor
jge
and
in
mov
jle
mov
add
sub
rol
out
pop
inc
std
or
mov
xor
nop
mov
xchg
and
imul
ret
cmp
xchg
inc
clc
aad
jo
adc
inc
lods
in
mov
fs
push
jae
fild
popa
lahf
push
push
xor
xchg
lahf
or
push
sbb
in
cmp
add
sbb
push
jl
lods
out
retf
xor
out
sub
stos
ret
push
mov
dec
sti
mov
sub
fistp
pop
push
add
xchg
and
(bad)
mov
ror
(bad)
cmps
inc
jo
push
(bad)
push
mov
cmp
sub
nop
dec
lods
aas
test
add
icebp
pextrw
mov
mov
fiadd
into
stos
das
jl
inc
cmp
enter
inc
jb
ret
xor
adc
mov
push
inc
int3
iret
inc
outs
sbb
sbb
adc
xchg
adc
push
sub
add
nop
pop
jno
or
sub
jnp
jmp
ds
das
push
pushf
pop
sbb
xchg
mov
sti
mov
xchg
daa
cmp
or
sbb
jg
or
pop
aas
jae
mov
mov
cs
xchg
inc
jne
mov
lock
das
out
fwait
mov
xchg
sbb
in
es
jmp
mov
inc
xchg
sar
cmps
fwait
nop
fdiv
adc
and
dec
fwait
inc
mov
ds
rcr
inc
cmps
icebp
and
or
mov
test
es
pop
scas
xor
into
mov
push
add
call
jb
fwait
xlat
pop
push
mov
inc
push
xlat
sahf
add
jae
repnz
sub
jmp
dec
sub
mov
shl
or
cmp
add
push
sahf
(bad)
aaa
or
stos
bound
fisttp
mov
cmc
stc
xchg
push
adc
mov
in
mov
rol
rcr
fsubr
fst
xor
out
out
inc
push
stc
sbb
dec
inc
add
pop
(bad)
outs
movs
xchg
pop
or
pop
cmc
and
loope
mov
dec
sub
je
movs
jecxz
pop
data16
aad
into
outs
mov
mov
mov
mov
lock
fistp
out
ins
inc
fs
cmps
sbb
mov
hlt
jge
cmps
in
mov
adc
aas
test
bound
mov
adc
xor
and
aas
je
ins
test
and
dec
aad
and
test
test
js
pushf
rcr
nop
inc
es
in
mov
inc
sti
pop
test
(bad)
int3
repz
sub
popf
imul
int3
mov
mov
arpl
push
inc
(bad)
dec
and
cmps
xchg
mov
add
cmp
cmps
clc
sub
mov
fidiv
push
aam
pop
push
or
or
sbb
xor
ins
sbb
(bad)
scas
das
pop
movs
add
ds
jecxz
jmp
cmp
cmps
push
push
retf
adc
retf
test
or
mov
jmp
xchg
ja
mov
cwde
cmps
mov
dec
jmp
xchg
sahf
jns
push
fwait
push
out
stos
jb
push
in
inc
addr16
jge
cmps
mov
popf
cmp
cmp
dec
aad
or
shr
fld
lds
aam
cs
dec
retf
test
mov
jg
mov
fisub
xor
push
ror
es
ins
sub
cmp
push
pushf
jne
adc
dec
call
sti
(bad)
lock
test
pop
retf
cmps
xchg
sbb
push
xor
pop
inc
popa
mov
scas
int
fnclex
jno
adc
jne
adc
hlt
dec
xchg
outs
retf
mov
(bad)
xor
push
ret
out
movs
int3
test
les
push
sub
mov
stos
push
cwde
push
mov
push
push
push
into
(bad)
inc
ret
push
mov
mov
aas
fdiv
adc
out
add
jb
xor
mov
and
push
xor
test
pop
pop
push
jg
popa
enter
out
lea
aam
cld
lea
xor
dec
pop
aaa
jno
aad
mov
call
(bad)
or
mov
mov
push
dec
in
mov
push
mov
push
sub
push
repnz
add
mov
jge
aad
mov
cmp
imul
inc
loopne
ficom
int3
mov
sbb
xchg
call
xchg
xchg
sbb
mov
lahf
push
dec
outs
jl
xor
adc
mov
dec
add
sub
mov
jns
outs
jbe
push
rcl
fisubr
cmc
fcomp
scas
jne
loope
nop
scas
push
pop
or
add
(bad)
dec
xchg
retf
stos
jmp
mov
pop
cmp
jns
iret
popf
jae
jne
or
sub
stos
scas
mov
sub
test
push
dec
jge
cmp
xor
or
xchg
sub
cld
add
sub
add
fist
cli
clc
xor
push
das
push
adc
xchg
pushf
scas
mov
adc
cmp
pusha
cli
mov
and
pop
dec
sub
xchg
call
sub
in
jl
daa
and
jg
hlt
in
stos
xchg
es
pop
xchg
data16
mov
inc
xchg
pop
(bad)
xchg
fdiv
mul
psubusw
pop
das
dec
push
lock
xchg
pop
or
inc
jnp
dec
fist
imul
jge
push
dec
adc
cmc
and
in
bound
mov
or
out
cli
push
push
ret
mov
out
add
xor
rcl
sub
push
or
sbb
mov
sbb
rol
jmp
arpl
mov
cld
xchg
cdq
jmp
and
push
das
mov
dec
fdiv
push
sub
popf
outs
mov
dec
cmp
jp
mov
mov
test
cmps
mov
push
xor
ins
push
sub
test
push
mov
push
sub
loopne
lds
sbb
xchg
xchg
jbe
aam
jnp
aad
shr
sbb
or
fdivr
pop
hlt
hlt
jbe
mov
popf
cmp
(bad)
fisttp
out
dec
out
mov
das
out
(bad)
push
mov
pop
mov
inc
push
add
sar
pop
lods
mov
pop
les
add
sub
jnp
ja
or
(bad)
int
adc
xchg
or
imul
cmp
lea
mov
outs
and
ds
rol
mov
push
sbb
inc
add
hlt
push
sub
dec
pushf
add
inc
ret
retf
pop
outs
in
pushf
sbb
mov
sbb
retf
aas
ss
rcl
les
jecxz
cmp
data16
mov
sbb
fnstcw
push
inc
and
call
enter
or
jecxz
xor
(bad)
sbb
lea
jmp
into
cmc
das
sahf
mov
repnz
jmp
call
aas
inc
xor
iret
push
inc
lock
mov
imul
adc
push
pop
mov
xor
add
sbb
and
jmp
test
aaa
out
movs
ret
mov
jmp
jecxz
(bad)
repnz
mov
xor
out
jmp
retf
not
adc
hlt
mov
push
int
cmp
ins
cmp
js
sub
jb
jnp
push
(bad)
sti
jmp
mov
lods
(bad)
arpl
and
call
and
and
rol
cdq
retf
xchg
push
(bad)
mov
adc
cs
mov
adc
jnp
cdq
sub
jecxz
aam
into
adc
les
xor
popa
fiadd
xlat
mov
add
cwde
jns
dec
(bad)
cmps
mov
xchg
fld
xchg
in
fisubr
out
pusha
xchg
pop
arpl
cmp
call
lods
push
out
jb
test
xor
test
push
ins
xchg
dec
jl
fdiv
cmp
and
fwait
loopne
jno
push
fld
popa
push
mov
in
ins
cmpxchg
xorps
sbb
repz
cmc
cmps
lea
mov
loopne
(bad)
nop
sti
lea
movs
aas
shl
or
lds
mov
scas
sub
xchg
mov
popa
dec
daa
cmp
push
add
imul
ror
mov
fisubr
cwde
mov
dec
(bad)
mov
fbld
int
mov
jge
js
retf
test
cmp
stos
sub
imul
push
sub
mov
out
mov
mov
ficom
xchg
mov
jne
sub
imul
fld
imul
addr16
jle
cmps
and
jmp
mov
loope
push
jp
in
not
scas
ds
jmp
cs
mov
add
call
add
or
mov
icebp
mov
jae
fdivr
cs
out
dec
ror
cmp
dec
(bad)
jge
pop
lods
lock
in
and
cmps
mov
xor
mov
jmp
and
or
outs
movs
mov
cld
into
outs
(bad)
jp
sub
xor
ins
sub
mov
push
fdiv
adc
loop
sbb
dec
enter
xchg
xchg
or
mov
cmps
mov
mov
(bad)
dec
out
lods
div
(bad)
mov
cmps
mov
imul
clc
test
cdq
inc
inc
(bad)
call
loope
or
or
loope
or
or
ds
clc
pop
mov
arpl
shr
call
or
(bad)
or
mov
cdq
pop
pop
sub
mov
cwde
fcmovbe
cmc
cmp
repnz
ss
hlt
xlat
gs
sbb
mov
lods
les
call
mov
out
inc
xor
fcmovb
inc
xor
iret
(bad)
jo
push
(bad)
fisttp
adc
imul
xor
sbb
in
jmp
lods
arpl
stos
lahf
mov
xor
sub
sahf
jnp
sahf
das
jge
adc
push
or
shr
xor
neg
lea
stos
aad
lock
aam
add
pop
cmp
in
gs
sub
dec
outs
dec
stos
shl
cwde
lds
inc
das
cmps
mov
jbe
mov
jmp
outs
imul
mov
sar
cwde
adc
push
mov
cmps
mov
sbb
and
out
lock
dec
cmp
dec
inc
retf
dec
into
aad
int
dec
ret
mov
lods
es
lods
sub
adc
inc
add
test
jne
push
leave
xlat
pop
pop
jb
adc
pop
inc
sbb
pop
hlt
cmp
inc
sub
(bad)
adc
fmul
jle
inc
jmp
jg
jge
push
lea
mov
movs
sub
sbb
add
aam
sub
sbb
and
pop
mov
add
xor
cmp
xor
aad
jecxz
mov
out
pusha
cdq
pop
cmp
jmp
pop
xchg
ss
test
adc
sbb
lods
icebp
dec
in
or
lahf
jbe
jnp
push
hlt
push
arpl
xor
sub
leave
dec
or
je
ins
or
mov
pop
popf
(bad)
pushf
and
pushf
ja
std
fmul
call
push
jle
push
xchg
sub
hlt
lods
cmps
adc
repz
xchg
sbb
dec
and
dec
loope
movs
(bad)
mov
xchg
jne
push
or
jbe
xchg
out
out
jnp
add
loop
nop
mov
pop
sar
pop
movs
pusha
ins
push
and
hlt
sub
sahf
inc
jge
adc
arpl
les
es
push
outs
xchg
addr16
inc
pop
in
mov
xor
jo
push
jecxz
add
or
fwait
sub
imul
(bad)
scas
pop
push
cmp
les
sahf
cmp
pop
mov
in
out
sbb
sbb
mov
push
jbe
(bad)
push
scas
and
mov
xor
lods
shl
mov
ds
out
outs
enter
inc
push
pop
mov
mov
mov
aas
xor
cdq
cmps
out
repz
nop
mov
cmc
sbb
(bad)
loop
mov
aad
stos
cwde
or
aam
jg
cdq
sub
stc
dec
adc
mov
sbb
fisttp
jge
cli
and
popa
sahf
aaa
div
lods
iret
rcl
ins
arpl
xchg
adc
jae
lods
mov
pop
pop
mov
dec
cmp
daa
pushf
pushf
and
popa
rol
stos
fwait
out
loop
add
mul
inc
cmp
xchg
scas
int3
scas
test
mov
inc
jl
cmp
xchg
pop
imul
lds
je
cmp
adc
sub
fsubr
cwde
test
shr
inc
adc
(bad)
cmc
jecxz
mov
inc
xchg
movs
(bad)
pop
call
(bad)
fcomp
xchg
retf
jns
ret
inc
std
and
mov
cmp
sbb
sbb
fld
js
sbb
pop
adc
aas
xchg
sub
jns
jmp
clc
sbb
lods
test
call
jb
outs
inc
dec
pop
cmps
fs
adc
jmp
not
into
push
lahf
sub
xchg
cmc
cmps
sub
fisub
std
adc
xor
adc
mov
jno
retf
mov
stos
loope
inc
or
or
and
inc
imul
popa
enter
unpckhps
lods
mov
mov
in
mov
dec
test
dec
and
cmp
mov
or
lea
shr
lods
into
test
pop
mov
leave
lahf
into
dec
hlt
jnp
fiadd
mov
loopne
or
xchg
ret
and
push
in
sbb
dec
adc
lds
pusha
cmp
xchg
cwde
mov
mov
(bad)
aaa
sub
stos
push
pop
fnstcw
jp
jmp
cdq
mov
leave
dec
scas
fcmovbe
mov
outs
(bad)
adc
pop
hlt
xchg
xchg
adc
or
cmps
repnz
cmp
cs
sar
push
lock
pop
xchg
adc
mov
loope
and
jne
lahf
xchg
mov
dec
out
push
idiv
or
sub
pop
xchg
and
sbb
pushf
cmps
xor
pop
nop
mov
mov
xor
inc
mov
xor
add
fcom
lds
clc
xor
fmul
jmp
adc
dec
lods
test
mov
inc
pop
stos
sub
(bad)
lock
icebp
jmp
mov
cmp
cmps
lods
sub
(bad)
ja
xchg
retf
pop
es
lea
mov
xchg
cmp
repz
sub
dec
stos
sbb
sub
repnz
clc
(bad)
cmp
jl
lea
(bad)
ror
mov
(bad)
repz
movs
add
mov
mov
jmp
jnp
cmp
into
pop
push
out
mov
xor
mov
mov
and
pop
ror
pusha
jl
fld
push
lods
inc
ds
movs
sub
sub
lea
inc
and
push
fisttp
push
dec
fwait
add
mov
mov
ficom
mov
jo
das
and
xor
jbe
sti
and
call
stos
push
scas
lods
arpl
jne
shr
xor
pushf
add
add
aas
jmp
xchg
or
jns
xchg
jno
cld
test
dec
ins
mov
fs
and
fsub
xchg
xor
pop
stc
pop
aam
lahf
add
and
mov
shl
pop
mul
cld
jo
xchg
xchg
inc
mov
xor
jmp
loope
sar
or
inc
xchg
adc
or
and
mov
inc
inc
mov
xchg
or
cdq
test
call
and
dec
cmp
push
ret
mov
xchg
or
mov
push
imul
push
sbb
arpl
cld
cmp
sub
ror
clc
inc
mov
call
movs
xor
add
dec
pop
xchg
loop
or
test
imul
jb
inc
dec
push
pop
xor
nop
mov
jecxz
push
push
adc
mov
imul
ins
lods
jecxz
js
adc
idiv
pop
test
inc
xchg
jnp
dec
leave
push
or
adc
ret
rcr
push
jmp
dec
lods
sub
add
out
mov
xchg
cmp
add
std
jp
mov
xchg
ins
push
hlt
das
das
pop
add
pop
mov
and
bound
pop
(bad)
jmp
dec
rcl
lods
push
push
push
mov
or
pop
and
mov
hlt
push
ins
sahf
sti
jmp
fadd
cmp
push
out
aas
dec
lahf
mov
inc
pop
xor
pop
xor
jmp
fisub
inc
test
pop
fisubr
int3
mov
(bad)
(bad)
fdiv
outs
(bad)
adc
jl
mov
push
ret
icebp
push
int3
(bad)
std
stos
lock
add
pop
bound
mov
loope
jnp
xchg
out
and
push
dec
pop
lods
push
sub
xor
rcr
(bad)
mov
pop
mov
add
inc
dec
inc
arpl
xchg
mov
add
addr16
mov
mov
dec
sub
cmp
mov
mov
adc
int3
push
clc
data16
mov
int3
js
push
mov
push
jb
(bad)
push
adc
and
movs
es
mov
add
mov
xor
stos
retf
sub
cmp
dec
mov
push
ds
dec
sub
mov
stc
test
push
add
fstp
test
popa
fild
dec
and
fsubr
into
xchg
mul
lods
sti
or
mov
call
fcomp
pop
dec
cmc
mov
adc
es
aad
mov
loope
leave
push
sub
xchg
jp
pop
sar
imul
cmp
lahf
out
add
push
push
or
pop
cmc
sub
cmps
in
xchg
xlat
hlt
cmps
clc
add
push
sbb
push
ss
loop
and
fstp
push
pop
movs
sbb
cmp
or
clc
sti
push
sti
push
pop
xor
outs
mov
sbb
push
enter
xchg
push
mov
aam
pop
imul
add
fcmovne
push
fistp
ins
test
out
dec
mov
mov
hlt
(bad)
retf
cmp
pop
mov
mov
or
jo
fidivr
or
test
inc
adc
mov
loopne
inc
dec
std
jge
test
cmp
imul
ror
mov
mov
pop
adc
(bad)
mov
int
sbb
mov
jecxz
nop
mov
mov
inc
ret
push
pop
or
jns
mov
cmp
in
dec
imul
fwait
inc
mov
ins
adc
loope
or
vcmpss
dec
call
push
in
dec
frstor
or
retf
sub
retf
ret
jmp
iret
inc
mov
ficomp
ins
(bad)
(bad)
(bad)
jmp
cdq
enter
pop
xchg
jmp
xchg
mov
jb
sub
inc
add
push
mov
mov
ret
icebp
or
sti
dec
sbb
scas
pop
ret
(bad)
jecxz
outs
lods
mov
adc
cdq
mov
pop
out
adc
mov
stc
xor
mov
ror
ins
mov
std
gs
adc
(bad)
xchg
loopne
add
outs
add
dec
in
inc
cmp
mov
push
inc
xor
inc
mov
hlt
pop
mov
cmc
or
hlt
cmp
inc
aad
fcomp
cmp
mov
cli
mov
dec
jns
or
mov
test
adc
in
jns
fcomp
xchg
xor
outs
pop
fsubr
xlat
pop
pushf
daa
mov
cmp
loope
xor
fwait
dec
xor
or
dec
jns
std
nop
cmp
inc
mov
push
xchg
leave
pop
inc
aas
or
mov
test
je
(bad)
mov
ficomp
and
sbb
out
lock
and
repnz
pop
jae
mov
ins
and
sub
(bad)
dec
repnz
sub
lds
mov
xchg
mov
retf
popf
call
rcr
nop
inc
sti
mov
out
mov
push
clc
cmps
fiadd
push
xor
addr16
lds
iret
imul
or
inc
in
mov
shr
rcl
sub
(bad)
test
jl
jl
stos
cmps
adc
dec
pushf
pusha
scas
fisubr
ret
mov
xchg
pop
leave
jmp
adc
leave
dec
data16
stos
lods
aam
sbb
loop
xchg
je
mul
xchg
push
mov
xchg
jmp
(bad)
jg
daa
jp
xor
dec
and
adc
cs
enter
jnp
(bad)
sub
int3
add
mov
mov
cs
mov
pop
int
xchg
mov
sbb
movs
cmps
retf
and
adc
jge
mov
popa
cmp
out
adc
sbb
(bad)
xlat
adc
jno
add
sbb
mov
test
das
fstp
fsubr
ja
les
push
dec
adc
lock
(bad)
fisub
xor
and
cdq
mov
je
ja
out
push
stc
es
push
push
inc
jle
dec
xor
jno
into
daa
xchg
repz
test
aaa
pop
in
push
or
shl
mov
lock
addr16
push
cmps
push
fild
xor
cmps
pop
mov
into
sbb
cmps
or
out
clc
mov
xchg
rol
add
pop
sbb
ins
test
adc
mov
mov
ins
jg
leave
ret
int3
mov
daa
xlat
nop
cdq
xor
mov
out
icebp
jle
cmp
pop
jmp
fwait
and
cmp
xchg
pop
dec
pop
(bad)
push
dec
mov
mov
loopne
jp
cmp
in
jbe
inc
jbe
jae
xchg
dec
ins
ds
xor
cld
add
pop
test
or
jno
push
lock
popf
fnstsw
je
add
and
repnz
add
lds
xlat
inc
cwde
outs
scas
xchg
popa
mov
dec
cmc
sbb
xchg
add
fst
js
mov
push
sbb
pop
jns
lds
jbe
(bad)
adc
mov
(bad)
stc
das
mov
repz
cli
sub
mov
out
fs
js
mov
inc
scas
loopne
in
fnsave
adc
sti
mov
pop
dec
ds
(bad)
fld
lods
ss
ror
pop
inc
int3
and
pop
fst
cs
icebp
or
adc
inc
std
add
pop
inc
fwait
push
lods
aas
xchg
sub
add
(bad)
mov
and
repz
adc
xor
movs
mov
mov
scas
xchg
or
adc
mov
scas
in
mov
xchg
into
push
cs
jno
jmp
and
das
mov
jns
retf
stc
in
xchg
loope
test
aaa
fsubr
xor
aam
enter
and
and
into
sbb
test
pop
fmul
xor
mov
retf
add
mov
push
push
das
push
movs
inc
push
int3
add
(bad)
into
mov
and
sbb
mov
jnp
ficomp
es
xor
dec
imul
ja
jl
ja
fstp
push
dec
stc
cmp
mov
int3
cs
in
pop
fidivr
shr
jmp
loop
pop
(bad)
js
or
push
and
jns
je
cli
lea
push
add
mov
lods
xchg
loope
in
add
fnsave
dec
dec
inc
lea
pop
xchg
loop
mov
push
xor
jae
sub
jns
imul
xor
mov
jae
(bad)
bound
arpl
push
xor
xor
mov
icebp
ins
scas
sahf
mov
cwde
sahf
daa
dec
icebp
inc
xchg
cmc
retf
daa
xchg
dec
in
pop
pop
in
sti
xchg
xchg
jb
das
(bad)
dec
push
add
jne
outs
shr
popa
jge
enter
test
shl
sub
cmp
rcl
inc
neg
add
lods
imul
jae
jle
paddusb
push
inc
or
xlat
mov
lea
and
xor
test
and
icebp
mov
inc
out
ins
sbb
test
out
adc
add
outs
cwde
mov
xor
enter
fisub
int3
and
stc
outs
sub
inc
push
sbb
lock
in
sub
cvtps2pd
sbb
cmp
(bad)
rcr
xor
repnz
pop
cmp
xchg
mov
push
push
fidivr
cmc
test
mov
lock
sti
mov
mov
fs
fwait
loope
jmp
mov
and
rcl
and
sub
dec
xchg
int3
pop
cmp
imul
cwde
mov
jne
jmp
jecxz
add
adc
or
adc
fimul
inc
push
jns
loop
or
shr
push
cli
jge
mov
clc
add
jmp
out
outs
fsubr
cmps
inc
cmp
sub
out
pop
add
push
movs
mov
scas
(bad)
bound
sahf
scas
adc
dec
rcl
dec
sub
mov
xchg
fcom
and
sbb
and
arpl
xor
std
mov
dec
fsub
xchg
push
dec
and
push
addr16
loop
xor
cmps
sub
fdecstp
pusha
jg
jno
adc
in
rep
loope
xor
inc
std
mov
push
mov
or
in
mov
inc
loop
mov
or
mov
inc
push
mov
in
adc
push
icebp
fsubr
pop
push
xchg
mov
sbb
dec
adc
ror
jne
xchg
sub
outs
into
dec
or
lods
jb
scas
jno
call
lahf
ret
cmp
inc
stos
cmp
adc
adc
leave
fist
jmp
ja
sub
stc
jne
sbb
push
push
movs
mov
sub
pop
call
loop
mov
xor
push
test
mov
(bad)
rol
pusha
loop
js
pusha
mov
inc
mov
and
sbb
pop
(bad)
mov
mov
mov
xchg
lds
mov
mov
add
in
ror
sub
mov
jne
gs
ins
mov
add
not
loop
das
mul
mov
ds
adc
icebp
pop
cs
jle
ret
into
or
mov
jle
(bad)
dec
aad
push
cmps
imul
cmp
jb
sub
lock
push
nop
(bad)
adc
mov
xor
push
cld
shl
ds
scas
cmc
jno
jns
xchg
dec
or
nop
jns
push
dec
mov
sub
push
dec
inc
fadd
mov
xchg
daa
std
fwait
xchg
int
sub
add
sbb
pop
pop
sar
int3
xor
xor
xchg
add
xchg
pop
xchg
xor
aaa
cmp
inc
lea
mov
ja
sub
add
or
je
hlt
mov
add
inc
in
movs
shr
shl
aas
mov
sub
mov
pop
shl
adc
out
cmp
ins
enter
dec
out
dec
jae
popf
cs
cmp
aaa
sub
pop
aam
rcl
mov
dec
mov
mov
pop
ret
dec
add
aad
out
mov
adc
das
mov
call
push
xchg
fst
addr16
das
adc
imul
sub
jnp
mov
or
outs
inc
sub
addr16
repnz
xlat
mov
(bad)
in
mov
jmp
and
xchg
adc
fmulp
gs
sub
imul
idiv
push
fsubr
cmp
das
mov
sub
into
push
push
mov
add
into
js
int3
mov
pop
mov
inc
cmc
lahf
xchg
or
jnp
pop
inc
int3
movs
cli
mov
and
ins
out
xor
push
sbb
or
adc
lods
pop
sub
jge
(bad)
add
jo
xchg
pop
mov
popf
popf
or
jne
fldl2e
es
popa
jg
push
es
int
popa
call
jbe
jnp
sbb
add
pop
push
imul
dec
adc
mov
dec
neg
xchg
inc
sub
ja
jp
lods
test
enter
(bad)
loope
std
and
dec
mov
(bad)
lods
xlat
lods
test
jbe
arpl
fsubr
out
sub
imul
jne
shr
icebp
inc
adc
push
les
shl
xor
lods
dec
sub
iret
cld
push
sti
sub
outs
shl
stos
lahf
shl
ds
scas
xchg
xor
sub
sar
rcr
dec
cmp
inc
mov
mov
adc
sub
gs
lods
fild
es
call
pop
jo
scas
push
in
hlt
int
push
xlat
in
sbb
inc
and
or
jmp
jo
and
xor
movs
(bad)
icebp
je
(bad)
adc
cmp
inc
nop
(bad)
ret
push
add
jne
lock
sub
jbe
and
movs
push
scas
or
scas
jbe
out
inc
push
sbb
scas
push
dec
push
add
cdq
and
push
xor
sti
mov
inc
inc
sbb
lock
mov
movs
pop
jo
dec
jae
and
(bad)
out
pusha
rcl
xchg
inc
ret
stc
mov
pop
mov
mov
jl
cmp
mov
and
mov
sahf
jp
and
pop
adc
fnstcw
hlt
mov
jecxz
push
mov
xor
jae
jecxz
push
call
xchg
dec
pop
sub
inc
dec
dec
je
fdivr
jno
and
xlat
jns
inc
sbb
data16
push
or
push
push
call
pop
dec
push
pop
pop
mov
push
xchg
les
shr
(bad)
fistp
and
cld
xor
xchg
inc
sbb
cmp
xchg
cmp
inc
xor
pop
bound
inc
pop
arpl
lods
jp
sahf
call
mov
push
mov
(bad)
fadd
lock
jle
into
inc
(bad)
sub
outs
test
pop
add
sar
cmp
adc
cmps
inc
xor
inc
xlat
mov
pusha
sub
ins
call
jae
pusha
adc
lea
xor
out
inc
cmp
add
stc
inc
inc
xlat
inc
xor
cs
pop
gs
call
add
es
clc
fimul
adc
jmp
ins
in
test
jb
jge
push
add
popf
ja
fs
jle
iret
add
and
loop
into
mov
dec
test
xor
popf
and
test
push
or
frstor
sbb
push
arpl
repnz
xlat
int3
dec
jg
fmulp
aas
popa
(bad)
fistp
test
inc
add
pop
add
addr16
xlat
and
loope
add
xchg
or
mov
push
inc
inc
pop
(bad)
cmp
fwait
and
push
loop
fchs
sahf
inc
mov
xlat
dec
sbb
mov
and
sbb
(bad)
mov
retf
xchg
outs
dec
int3
adc
dec
cmp
mov
jb
in
push
fnstcw
mov
aam
jecxz
icebp
jbe
je
cdq
scas
cmp
push
inc
mov
push
adc
or
add
ins
fdiv
imul
jns
lahf
mov
in
jmp
or
push
sub
jmp
xchg
pop
fld
mov
call
popf
xchg
or
pop
rcr
xchg
fst
lds
int3
daa
push
(bad)
jo
sub
cli
mov
or
cmp
pushf
push
outs
cwde
inc
ss
fdivrp
xchg
repz
dec
cmp
jp
nop
push
sbb
ins
scas
int3
xor
jo
ret
jo
fs
cli
pusha
sub
sbb
xor
movs
or
dec
fwait
nop
out
mov
xor
sub
or
and
call
jno
out
cmp
fadd
sub
(bad)
imul
jae
mov
mov
adc
std
xchg
sbb
mov
ds
iret
int3
add
scas
retf
or
mov
test
aaa
jmp
mov
cmp
cmps
fsubr
std
rol
push
and
mov
jp
mov
stos
mov
adc
add
shl
out
push
cmps
jo
or
(bad)
into
jg
and
outs
fistp
ss
or
adc
cmp
jne
push
neg
sub
sub
inc
clc
inc
xchg
(bad)
jl
popa
add
add
aad
push
es
jmp
mov
sbb
and
loope
pop
or
std
inc
cmp
mov
fs
adc
outs
push
and
in
mov
out
xchg
js
jmp
adc
loopne
jmp
push
jge
xor
addr16
std
(bad)
mov
in
adc
loopne
sbb
cld
daa
clc
call
pop
jl
mov
jmp
scas
adc
in
xor
mov
add
sar
adc
repz
jae
call
cmps
in
pop
ins
and
in
int3
lea
adc
hlt
dec
and
xor
outs
sbb
iret
inc
and
cmps
sub
rol
mov
fisubr
push
sub
xchg
fldcw
mov
xchg
lock
or
test
push
xchg
jne
scas
out
mov
in
xchg
mov
in
or
jno
or
repz
into
cmp
jae
in
pop
out
data16
data16
gs
aad
xchg
jmp
inc
je
(bad)
push
xlat
das
test
inc
sbb
loop
inc
outs
ins
mov
mov
adc
rcl
jecxz
add
fs
dec
jbe
dec
add
sub
pop
std
and
mov
scas
jno
mov
test
stos
cmp
push
nop
mov
xor
mov
inc
rol
mov
outs
stos
or
fwait
arpl
jne
je
leave
retf
adc
pop
xor
(bad)
out
call
push
adc
stos
int
xchg
mov
dec
cmp
daa
aad
sub
lds
xchg
std
mov
push
or
enter
icebp
mov
pop
push
inc
xor
cmp
retf
sahf
push
pop
mov
push
fiadd
push
cmp
rcl
xor
mov
cmp
ins
mov
enter
retf
fdivr
int
call
pop
outs
adc
adc
ins
pop
mov
inc
xchg
cmp
test
dec
int
in
jecxz
xor
push
or
scas
inc
movsx
lahf
arpl
in
imul
xor
inc
mov
shr
pop
popf
mov
push
cdq
jo
pop
adc
pop
xchg
mov
ret
ret
mov
and
adc
mov
push
cmp
push
or
and
shr
xchg
loop
mov
mov
test
jmp
push
jmp
lea
icebp
or
inc
shl
add
push
sub
mov
stc
icebp
sbb
(bad)
(bad)
or
ret
sbb
not
outs
jp
push
mov
popf
mov
xlat
gs
and
sbb
(bad)
cld
ror
mov
int3
add
jns
or
ja
and
xor
xor
and
adc
sbb
push
cmp
sbb
bound
(bad)
mov
lods
mov
jo
push
mov
push
bound
cmps
fst
xchg
mov
adc
ins
inc
das
outs
rol
cwde
jb
ja
movs
mov
xchg
inc
mov
push
add
dec
push
jge
adc
lea
retf
test
adc
mov
test
cs
and
(bad)
jne
stos
(bad)
mov
scas
add
outs
and
imul
jg
push
sbb
ret
mov
in
mov
cmp
(bad)
xor
mov
pop
pop
les
hlt
pop
mov
ja
out
mov
push
into
std
cmp
mov
sbb
adc
inc
mov
jbe
jle
jnp
xchg
or
mov
stos
push
or
(bad)
cld
adc
das
adc
or
in
aas
mov
sub
aaa
push
scas
retf
mov
pop
mov
je
loope
cmp
(bad)
ss
gs
mov
push
aas
adc
jmp
adc
jns
loop
popf
mov
inc
sbb
mov
pusha
bound
mov
in
test
or
daa
(bad)
aam
push
fnstcw
pushf
xchg
cwde
xchg
mov
fmulp
lds
test
xchg
icebp
retf
add
or
test
fst
mov
inc
(bad)
das
fbld
shl
movs
retf
sub
pop
xchg
fidivr
cwde
adc
lods
les
jae
push
test
mov
mov
leave
stos
push
mov
js
nop
inc
les
pusha
test
cmps
xor
add
adc
and
mov
clc
ret
push
in
pop
in
loop
mov
mov
nop
cmp
ret
les
cmp
lock
sbb
ficomp
mov
mov
fnstcw
inc
fwait
xor
hlt
push
cmp
push
jae
inc
adc
mov
mov
xchg
inc
mov
call
adc
pop
cmp
xchg
cmp
js
cs
cmp
sbb
jb
mov
orps
movs
mov
(bad)
sbb
push
sbb
icebp
cmp
push
pop
mov
inc
mov
test
fwait
int3
sub
dec
xchg
call
cmp
xor
cmps
inc
sub
aad
inc
rol
fisttp
adc
sti
clc
push
adc
addr16
or
call
push
dec
push
imul
rcr
add
pop
xchg
cwde
pushf
dec
jmp
cmc
adc
xchg
mov
mov
and
jge
call
shl
inc
mov
scas
jle
mov
cmps
addr16
xchg
mov
(bad)
hlt
js
out
stos
in
ror
mov
cs
cmp
imul
and
(bad)
jae
(bad)
cli
push
push
mov
sub
test
out
ja
sti
and
(bad)
(bad)
js
push
push
pop
mov
dec
icebp
sub
int
push
dec
test
push
out
stos
jbe
fscale
call
mov
int
das
sub
jno
jl
pop
pop
add
rcr
jae
mov
mov
ins
fnop
int
xor
pusha
mov
jl
in
pushf
ror
jae
push
adc
rcl
cdq
or
lahf
rcr
mov
jns
adc
iret
rcl
add
cdq
cmc
cmps
or
pop
xchg
xor
scas
add
dec
ret
push
scas
mov
fisub
xchg
sbb
jno
rcl
pop
shl
add
xor
vpmaxsw
(bad)
cmp
jg
daa
inc
test
cs
push
rol
jp
(bad)
out
cmps
out
mov
push
(bad)
jmp
adc
movs
xchg
lock
call
jmp
xchg
cli
in
sub
or
fst
mov
mov
pop
mov
adc
cmp
jne
repz
int3
push
call
in
scas
cmps
push
mov
retf
out
sbb
je
dec
mov
cmp
mov
rcr
pop
fstp
sbb
mov
push
into
and
jo
pushf
lods
jmp
popf
xor
xor
scas
inc
arpl
sbb
cmp
imul
fsub
in
ins
fwait
sbb
addr16
xlat
or
lahf
shr
pop
jl
icebp
ds
and
pop
xchg
mov
xchg
mov
stos
cld
jae
enter
or
cdq
into
enter
push
add
cwde
into
push
gs
clc
jmp
cli
mov
call
add
aaa
xchg
sub
or
inc
mov
mov
aad
leave
or
dec
inc
jmp
push
mov
ficom
rcl
movs
gs
xchg
pushf
push
ficom
mov
sbb
mov
sbb
mov
das
sahf
retf
mov
pop
cmp
mov
test
cli
in
adc
cmp
stc
cli
jnp
cmp
mov
pop
mov
pop
jecxz
in
mov
sbb
cmp
addr16
add
jns
adc
fdiv
fs
sbb
pop
adc
fimul
or
cmp
adc
in
inc
xchg
cwde
mov
sub
xchg
pop
cdq
jle
outs
adc
mov
pop
push
and
mov
(bad)
hlt
inc
cli
int
stos
cmp
sub
jp
addr16
jl
mov
push
add
cdq
dec
cmp
retf
lods
inc
dec
les
mov
inc
sbb
push
mov
push
adc
arpl
ret
fisttp
das
pushf
push
xchg
aas
fwait
sbb
and
pop
jge
pop
xor
out
push
pushf
ja
cwde
inc
mov
add
gs
cmp
push
and
inc
cmp
xor
mov
cmp
movs
mov
fdiv
adc
(bad)
gs
dec
push
push
cld
sti
lods
pop
and
add
imul
lods
mov
inc
imul
lea
rcl
pop
sar
out
mov
inc
loope
mov
xor
xchg
xlat
mov
mov
mov
xor
dec
xor
mov
ret
pop
aam
ror
into
popf
outs
cwde
gs
add
mov
cli
int3
out
inc
cmp
xchg
jmp
mov
pop
iret
rcl
int3
popa
mov
cmp
push
ins
rol
loopne
cmp
call
fucomi
mov
mov
cmp
push
retf
sub
add
dec
push
xlat
xor
mov
call
arpl
(bad)
nop
outs
push
xor
xor
shr
inc
jbe
sub
mov
scas
mov
imul
dec
fild
mov
lods
pop
jae
sahf
jmp
xchg
aam
in
xor
repz
cmps
fild
sbb
aam
inc
(bad)
mov
enter
mov
sub
ins
lahf
add
xchg
lods
call
xchg
adc
ret
sbb
mov
(bad)
cmps
ins
xchg
pop
jl
cld
ror
inc
icebp
or
repz
sub
push
sub
and
shl
pop
test
(bad)
fisttp
test
std
jmp
movs
pop
xchg
fdivrp
sahf
mov
sbb
sti
mov
sub
test
pusha
in
mov
loope
pop
test
sub
push
aam
xchg
pop
inc
or
shr
ret
pusha
ds
retf
xchg
mul
test
jle
test
dec
retf
jp
clc
inc
pop
(bad)
(bad)
sub
xor
js
jae
js
add
(bad)
cmp
pop
jno
aad
stos
sub
scas
fs
imul
xor
xchg
jb
adc
movs
(bad)
out
xchg
and
xchg
xor
sub
arpl
sub
test
pop
imul
pop
ds
xchg
push
adc
and
sbb
retf
leave
xchg
jno
cmp
jg
jmp
stos
int3
and
or
sub
outs
jge
(bad)
xchg
cmp
jae
loop
adc
inc
push
call
xchg
outs
les
sub
jecxz
shl
mov
les
add
mov
adc
pop
fisttp
xchg
jno
inc
retf
mov
pop
ins
xchg
out
shl
pop
movs
xor
pushf
cmps
push
or
mov
mov
push
in
(bad)
cmp
sti
and
daa
jno
dec
inc
loope
nop
call
dec
int
mov
inc
xchg
pushf
popf
(bad)
ins
retf
sub
jecxz
pop
stc
jge
(bad)
arpl
inc
push
inc
push
jecxz
ss
in
push
sbb
movs
mov
dec
push
mov
and
mov
push
pop
popa
xchg
aas
mov
hlt
mov
mov
and
shl
inc
jbe
dec
loop
sbb
(bad)
mov
in
push
fisub
mov
jnp
inc
sbb
push
ins
or
cmp
ja
xchg
sti
scas
jl
jo
rcl
mov
jne
imul
loopne
loope
imul
push
mov
out
mov
loop
jbe
push
mov
sub
pop
push
into
push
and
xor
mov
jg
mov
dec
cmp
adc
jns
sub
rol
aad
push
out
cmp
aaa
xchg
xlat
jb
bound
iret
dec
push
mov
mov
push
push
cli
sbb
cmp
cmps
sbb
enter
or
xor
dec
dec
pushf
cmp
fwait
push
fsubrp
mov
or
jnp
fwait
push
sbb
cmps
ja
lods
jmp
mov
popa
cld
pop
sub
iret
dec
add
mov
or
imul
shr
pop
aaa
out
stc
dec
mov
push
push
or
scas
push
mov
scas
dec
cli
cmc
mov
push
sbb
addr16
adc
div
push
leave
inc
sbb
outs
aam
cmc
bound
into
aad
aaa
jmp
(bad)
sub
test
jo
push
xor
popa
xor
inc
sahf
cs
gs
and
jl
dec
sub
dec
mov
pop
dec
popf
xlat
out
dec
and
ins
jne
jbe
(bad)
aas
mov
fistp
stos
inc
popf
jmp
sbb
retf
jle
in
mov
outs
(bad)
dec
call
cli
in
xchg
call
test
fwait
std
dec
add
int3
ds
aas
pusha
les
mov
push
popa
and
sti
test
inc
mov
mov
push
cs
dec
scas
sub
(bad)
mov
std
adc
stos
ret
loop
cli
and
xchg
sub
mov
pop
neg
mov
movs
inc
push
sbb
(bad)
sahf
das
into
xchg
adc
jae
xchg
push
fwait
jo
gs
in
inc
jbe
imul
jno
(bad)
add
jecxz
mov
inc
aam
xlat
sub
iret
jb
popa
jae
jmp
adc
lea
dec
adc
fild
add
jno
jle
in
pop
jo
(bad)
sahf
ror
mov
pop
js
add
ds
mov
imul
out
aam
dec
adc
in
push
push
mov
scas
pop
call
mov
js
dec
xchg
mov
std
mov
out
scas
daa
aaa
je
or
jmp
mov
sub
imul
pop
(bad)
adc
cmc
into
dec
pop
bswap
sahf
imul
cdq
dec
pop
cmps
pop
jecxz
btc
push
sbb
adc
sub
daa
popa
cdq
les
lahf
dec
jmp
aas
pop
inc
sub
lods
fwait
std
in
cmp
out
sbb
pop
ror
pop
ja
push
ret
adc
and
mov
xchg
mov
scas
mov
call
int3
aad
xor
mov
xor
loop
cmp
(bad)
lahf
pop
jp
sahf
mov
test
cdq
fidiv
xchg
mov
jbe
(bad)
imul
sahf
popf
add
sub
jmp
icebp
cmc
cmp
mov
mov
inc
and
scas
hlt
cmps
test
cwde
mov
scas
jp
scas
out
dec
cmp
repz
xchg
jbe
mov
ret
xlat
addr16
(bad)
aas
and
hlt
(bad)
adc
mov
clc
in
mov
sub
cwde
fild
push
mov
xor
fwait
mov
cmp
and
in
jb
dec
inc
adc
inc
fidiv
in
ins
in
mov
movs
mov
inc
mov
mov
gs
data16
pop
jmp
xchg
sub
mov
adc
test
out
sub
sti
jae
jl
xchg
xor
call
test
inc
sub
ret
inc
loope
mov
xchg
retf
or
retf
ins
in
push
inc
sub
loopne
addr16
leave
adc
mov
ss
lahf
sbb
sbb
out
push
pop
pop
cmps
xor
xchg
pop
inc
pop
cdq
popf
mov
dec
retf
fcomi
icebp
neg
dec
(bad)
fcom
fbstp
cmp
push
mov
or
sbb
and
mov
cmp
or
in
arpl
popf
jbe
cmp
icebp
lahf
ins
sar
cmp
sbb
xchg
or
sar
cld
sahf
push
jmp
std
push
inc
push
xchg
mov
mov
ds
sbb
and
jae
rcl
repnz
pop
shr
movs
test
dec
out
mov
out
nop
loope
xor
stc
dec
scas
test
(bad)
mov
inc
jmp
ret
or
pop
sbb
and
retf
pusha
mov
out
push
pop
pop
fnstsw
and
ds
pop
(bad)
mov
or
push
nop
into
mov
xor
test
cdq
mov
in
mov
sbb
dec
xchg
mov
add
stos
test
out
out
aam
mov
jecxz
ins
inc
cld
xchg
(bad)
ins
mov
cld
fdivp
(bad)
loopne
jo
sti
jle
push
jbe
xchg
lock
sbb
in
mov
or
jecxz
cmp
mov
das
imul
jae
push
in
pop
stc
(bad)
pop
xchg
leave
xchg
mov
out
rcl
add
stos
mov
sar
dec
pop
movs
jg
mov
popa
ins
mov
stos
fcomp
pextrw
mov
mov
mov
shl
repz
mov
push
fwait
or
jmp
in
leave
and
jecxz
adc
clc
popa
sbb
xchg
push
push
inc
jae
sub
push
mov
or
push
neg
pop
xchg
in
shl
jge
sbb
lds
sbb
test
div
cmp
sbb
sub
xor
lahf
jmp
js
sub
ins
cmc
lods
sahf
imul
rcr
jb
cwde
dec
xchg
jb
out
inc
jecxz
rol
cmp
dec
daa
xchg
and
ds
and
mov
aas
in
xchg
inc
pop
inc
and
hlt
mov
jg
loope
mov
pop
pop
jmp
enter
and
test
loope
and
faddp
sub
in
cli
jmp
ins
mov
xchg
mov
push
sbb
sub
mov
sbb
in
gs
out
(bad)
cmp
out
sub
xchg
xchg
pop
icebp
or
sbb
xor
xchg
sbb
mov
dec
and
sub
arpl
mov
jno
push
dec
sbb
sub
jne
and
out
je
xchg
sbb
and
stos
jae
adc
mov
cmps
aam
dec
dec
add
jg
scas
sbb
jg
sub
mov
shr
dec
or
jno
mov
push
inc
xchg
sahf
mov
ror
loope
xchg
cmp
test
nop
cmp
adc
dec
and
sub
fs
mov
in
push
int
stos
aas
js
das
xlat
sub
adc
sub
(bad)
fs
std
sbb
or
jmp
das
(bad)
into
or
adc
into
hlt
imul
push
mov
test
pop
outs
mov
call
scas
inc
xchg
loopne
add
or
cmps
cli
shl
in
add
test
add
cmp
fcomp
mov
mov
(bad)
aad
xor
clc
adc
xor
and
jge
xchg
xchg
add
and
rcr
in
jge
jl
mov
call
test
pop
cdq
in
add
fild
mov
sbb
adc
cs
mov
cmp
cmp
jecxz
arpl
pop
in
jmp
int3
mov
daa
xchg
dec
out
push
push
push
push
mov
pop
inc
mov
pop
inc
shl
ret
or
stc
sar
std
xor
into
rol
es
adc
push
mov
cs
in
std
sbb
ficom
ret
imul
icebp
movs
ins
hlt
enter
or
xor
out
scas
ins
or
xor
xchg
push
xor
and
lods
call
add
or
lds
popa
sub
(bad)
push
push
cdq
jmp
add
test
in
jns
repz
and
add
sbb
add
push
call
or
and
mov
sub
movs
rol
and
(bad)
aam
push
std
pop
repnz
mov
sub
push
pop
add
ds
mov
test
clc
xor
hlt
fimul
dec
out
or
jmp
mov
jmp
jmp
mov
xor
adc
and
cmp
push
out
inc
mov
and
pop
add
jbe
fstp
div
xor
push
dec
dec
aam
add
sbb
fwait
and
pop
mov
outs
xor
xchg
mov
mov
addr16
mov
inc
shl
stc
js
(bad)
enter
arpl
out
dec
out
fldenv
leave
cmps
shl
adc
jl
mov
out
lods
lds
lahf
mov
mov
pop
or
popf
jmp
push
cmps
movs
mov
and
cmp
mov
pop
fmul
lock
dec
repnz
fs
int
sub
push
aaa
ins
or
mov
adc
mov
add
push
(bad)
cmp
call
bound
scas
xor
jbe
test
or
jnp
adc
movs
cmp
out
xor
enter
(bad)
sbb
push
ja
out
cmps
fwait
xchg
mov
mov
mov
and
adc
fmul
mov
pop
enter
dec
cmp
test
or
movs
popa
pop
push
push
mov
js
push
fldcw
mul
dec
sub
mov
pop
addr16
idiv
dec
pop
js
neg
(bad)
outs
jns
and
xor
xor
sbb
lea
jg
jb
aas
lods
adc
out
outs
xor
cmp
push
out
les
mov
fnstcw
cld
in
sar
add
sub
and
jo
out
sub
pop
(bad)
int
cmp
movs
pop
pop
mov
push
je
adc
mov
lods
xchg
push
stc
ins
outs
add
out
into
mov
xchg
stos
cmp
arpl
cwde
cld
nop
mov
add
sahf
in
iret
and
push
into
out
jo
call
icebp
push
mov
add
int3
and
jge
dec
jg
jl
fisubr
sbb
push
mov
call
inc
pop
add
outs
lea
outs
jp
and
cmps
and
xchg
jae
rcr
icebp
ins
rcr
repnz
lds
xor
sbb
out
sub
or
mov
jbe
int3
push
movs
rol
jge
cmp
jle
adc
adc
mov
push
pop
ja
into
pushf
test
mov
test
rol
dec
test
or
lea
arpl
cmp
mov
pop
movzx
out
outs
xlat
in
fwait
addr16
stos
mov
dec
pop
push
(bad)
(bad)
xor
mov
les
in
imul
push
rcl
in
pop
ret
cmovs
loop
jge
dec
sti
enter
in
pop
pushf
sub
call
stos
ja
loopne
enter
daa
add
push
nop
ja
push
lds
retf
sub
dec
dec
jbe
mov
test
or
(bad)
fwait
sbb
mov
mov
ds
mov
xor
push
mov
jns
or
xchg
leave
and
repz
xchg
sub
outs
outs
xor
mov
xchg
(bad)
out
push
or
int
lods
fidiv
or
mov
call
ins
sbb
jno
ins
stos
lar
mov
fstp
test
ja
inc
xchg
xchg
inc
inc
popa
cmp
push
jbe
inc
or
test
lods
test
ret
ins
imul
nop
adc
call
and
mov
ins
push
xchg
mov
test
inc
push
fwait
dec
retf
sub
ret
jl
(bad)
jns
jns
jecxz
mov
in
retf
dec
in
push
mov
outs
imul
sub
aam
daa
lods
fsub
jmp
xchg
rol
cmc
cmp
int
popa
dec
and
jle
dec
adc
inc
shl
pop
or
mov
scas
adc
push
adc
sub
mov
cmp
mov
loop
lock
jp
int3
pop
cmp
out
dec
lea
sub
or
pusha
cmp
pop
and
mov
cli
fisub
mov
mov
pop
pop
mov
cli
shl
dec
mov
les
cmp
cwde
or
jecxz
ins
(bad)
pop
push
repz
ins
xor
adc
xlat
shr
jle
push
ret
call
clc
ss
fild
adc
jg
add
jb
test
xor
ins
jns
scas
(bad)
je
test
xchg
and
rcr
out
ins
into
cmp
fadd
push
mov
pusha
int3
mov
add
cmp
(bad)
jo
int3
sub
out
cmp
fnstenv
mov
mov
pop
jmp
pusha
push
xchg
nop
addr16
aad
sub
mov
mov
addr16
inc
ror
shl
pusha
std
cwde
mov
pop
nop
gs
lahf
jmp
in
sbb
in
mov
call
ds
push
adc
and
dec
call
daa
fimul
and
cwde
fmul
and
push
xchg
fidivr
ja
and
call
(bad)
pop
ins
or
cmp
mov
aaa
sbb
cmp
loop
mov
ins
add
push
add
xor
sti
imul
jp
shl
or
outs
adc
xor
pop
pop
push
sbb
jnp
cld
dec
jp
mov
call
fst
jb
popa
test
mov
call
adc
sub
cwde
or
add
test
fidiv
mov
idiv
push
aaa
je
clc
fwait
mov
push
adc
xor
mov
xlat
xor
and
lea
jae
dec
arpl
adc
lds
and
fwait
cmp
stos
inc
outs
pusha
fadd
ins
add
fadd
rcl
pop
mov
js
adc
sbb
imul
test
cmc
dec
out
adc
or
movs
ret
pop
popf
and
sub
rcl
ins
stc
std
xchg
leave
or
sbb
icebp
dec
pop
je
adc
mov
cmp
sub
leave
sbb
cmp
push
push
xor
retf
jns
(bad)
cmc
ret
loope
push
ds
(bad)
sub
daa
daa
jp
mov
mov
pop
sahf
mov
adc
xor
push
pop
(bad)
or
or
mov
xor
inc
mov
sub
mov
and
(bad)
adc
jmp
shl
inc
adc
sub
mov
lea
mov
push
mov
lds
aad
adc
cmc
mov
stos
xchg
push
lods
jne
adc
or
stc
inc
das
mov
int
lock
xor
push
mov
iret
mov
push
ja
add
sbb
iret
repnz
push
cmps
scas
push
xor
pop
scas
je
(bad)
inc
popf
push
fldenv
imul
gs
mov
inc
pushf
inc
inc
and
sub
or
or
adc
sub
xchg
test
test
sub
ffreep
enter
mov
pusha
add
(bad)
rol
pop
jge
dec
or
neg
mov
or
dec
repz
outs
mov
pop
shr
dec
lea
pop
hlt
scas
mov
and
aaa
cmps
nop
rol
or
mov
adc
cmp
lea
add
(bad)
xchg
push
jg
pop
push
popf
or
adc
es
dec
cmp
add
dec
aam
pushf
inc
push
popa
dec
loope
jl
pop
movs
jns
in
cli
pop
jnp
enter
outs
retf
push
cmp
xor
(bad)
in
jmp
aad
adc
mov
or
cmp
repz
fs
movs
scas
inc
loope
dec
mov
movs
and
pop
shl
lods
in
push
and
xor
lods
and
cld
dec
ficom
fbld
mov
imul
in
lahf
and
test
call
fwait
hlt
(bad)
sub
pop
(bad)
fadd
(bad)
xor
add
movs
iret
xchg
add
pop
push
ficom
cmp
mov
aad
cmc
sbb
(bad)
jb
popa
ret
or
rcl
cmps
jae
shl
mov
mov
dec
jge
and
sbb
and
adc
dec
sti
rcl
(bad)
and
adc
repnz
ffree
retfw
cmc
(bad)
dec
cmp
mov
and
xor
adc
(bad)
mul
adc
aas
hlt
xchg
mov
int3
jmp
mov
mov
clc
dec
mov
cmp
in
push
in
mov
sub
inc
popa
push
or
xchg
sub
adc
jns
jl
and
fld
ins
outs
cmp
push
ret
adc
jge
inc
push
hlt
std
sbb
cmps
and
sbb
sbb
xor
daa
les
and
sub
(bad)
add
or
das
adc
loope
mov
(bad)
or
push
jno
retf
or
sbb
xchg
pop
je
adc
add
adc
pop
setb
mov
pop
sbb
mov
xor
fiadd
inc
inc
and
into
xor
popf
mov
imul
into
icebp
dec
test
in
adc
outs
pop
lock
dec
cmp
xlat
mov
cld
adc
ins
sbb
push
cmp
cli
jp
sbb
cmp
mov
cmp
cmp
and
mov
push
push
pop
repz
jnp
lea
cwde
arpl
pop
push
or
fst
xlat
cmp
pop
cmp
push
pop
fmul
cmp
xchg
push
lea
mov
sbb
rol
popa
jle
pop
fidivr
sbb
rol
mov
mov
int3
jno
mov
pop
call
sbb
xchg
push
xchg
cli
mov
jo
fld
pop
xchg
sbb
lock
or
inc
or
into
sbb
dec
(bad)
addr16
mov
mov
int
cmp
retf
imul
mov
or
jae
lods
jmp
mov
sub
pop
mov
jle
ds
aam
pop
out
sub
fldcw
push
call
pop
dec
addr16
fmul
xchg
sbb
ss
dec
inc
popa
movs
mov
sub
push
jnp
ss
(bad)
mov
ja
mov
int
js
or
and
adc
fsubr
ss
and
xchg
dec
movs
popf
inc
and
call
adc
(bad)
aaa
mov
loope
cmps
push
sahf
push
rol
pop
or
push
(bad)
jns
xchg
add
adc
es
mov
call
pop
test
test
xchg
push
adc
fidiv
je
fs
mov
sti
int3
mov
mov
push
push
mov
test
jle
mov
cmp
xchg
pop
ss
ins
fstp
dec
sub
enter
sub
in
shl
push
pop
push
inc
mov
jo
jge
leave
icebp
jnp
ror
sub
push
fcomp
pop
ds
push
or
inc
or
cmp
ins
imul
push
add
inc
mov
ficom
sahf
xchg
pop
call
sbb
mov
sub
xor
sbb
out
or
aam
cdq
cs
(bad)
daa
and
xor
js
daa
fucomi
cmp
rcr
xchg
test
pop
in
xchg
rcl
cwde
pushw
mov
adc
loopne
cmc
jle
jb
jg
in
xchg
fild
push
sub
inc
mov
sub
dec
icebp
mov
or
fpatan
mov
mov
push
jg
icebp
cmps
sar
cmp
jge
jp
or
cmp
add
or
es
jecxz
into
lods
fld
cmp
leave
cmp
jecxz
push
arpl
pop
or
dec
mov
inc
cmc
add
and
ret
aad
aaa
dec
loopne
cmps
xchg
inc
inc
cmps
mov
xor
int3
xchg
jge
scas
sub
nop
pop
ficomp
loope
test
push
pop
sub
sbb
fldcw
les
cs
sbb
call
fstp
(bad)
retf
es
fadd
cmp
movups
jge
mov
push
add
retf
ret
movs
mov
icebp
add
add
adc
push
fisttp
inc
sbb
sbb
xchg
xchg
popa
lods
addr16
mov
inc
clc
fxch
or
movs
shl
lds
mov
cvtps2pi
add
mov
jmp
pop
imul
js
fs
fisttp
cdq
popa
shl
mov
add
or
imul
nop
jg
fldcw
pusha
inc
pop
sbb
mov
dec
in
shr
cmps
mov
dec
mov
in
add
inc
jnp
push
xchg
push
jb
adc
repnz
jp
mov
sbb
adc
mov
mov
jecxz
mov
arpl
adc
dec
pop
jg
add
or
or
aad
nop
add
cli
in
jle
outs
out
mov
fdivr
stos
repz
icebp
ficomp
xchg
add
repz
pop
lods
shl
js
ds
push
dec
dec
pop
and
ret
xor
cmps
xor
mov
mov
cmp
and
or
dec
rdpmc
ds
ret
jmp
cs
cmp
adc
aaa
test
aas
stc
xlat
xchg
cmp
cmps
pusha
cdq
mov
cmps
push
test
or
(bad)
jecxz
and
xchg
cld
pop
add
adc
and
retf
arpl
xchg
cmp
push
xlat
stos
jmp
cmp
adc
into
sar
rcl
sub
ins
xchg
enter
(bad)
shr
mov
xchg
inc
pop
les
pop
mov
sbb
or
mov
mov
test
push
xchg
shl
loope
cmp
ror
repnz
ret
mov
sar
(bad)
in
lock
pushf
cmp
pop
push
cli
push
movs
xor
add
clc
sbb
in
dec
xchg
ret
int3
sub
fsubr
mov
dec
pop
sahf
seto
fwait
cmp
add
mov
xchg
xchg
loope
xchg
or
cli
mov
xchg
test
and
call
pushf
xchg
std
stos
mov
mov
and
pop
xchg
inc
popa
push
test
add
pop
xor
(bad)
into
retf
sub
sub
pop
xor
or
mov
sub
mov
ss
and
addr16
es
retf
cmps
sahf
xchg
fbld
scas
ins
hlt
pop
mov
inc
mov
pop
repnz
lea
test
pop
cmp
mov
and
or
cmps
cld
or
or
scas
pop
mov
pop
hlt
add
and
nop
fisttp
or
test
ret
repz
xchg
cmp
shl
jmp
adc
push
ss
xor
popf
pop
cmp
jle
pop
mov
push
jle
inc
clc
push
je
xchg
push
mov
inc
mov
es
movs
cli
jp
ins
std
aas
popf
mov
adc
test
enter
ins
rcl
out
(bad)
retf
or
dec
mov
sub
and
lock
adc
ds
shl
dec
push
test
inc
pop
mov
(bad)
das
pushf
popf
dec
mov
jno
fadd
adc
rcl
cmps
inc
sub
std
out
fwait
loope
scas
or
and
les
or
cld
pop
fs
hlt
add
push
mov
fst
rcl
inc
jb
in
jnp
cmp
mov
adc
xchg
test
push
inc
pop
adc
push
std
test
loope
stos
test
fimul
sub
push
(bad)
fucom
ss
or
jne
xor
xchg
test
imul
das
(bad)
das
sbb
ins
fadd
je
adc
pop
shl
dec
xchg
rcl
cwde
icebp
jge
mov
ins
or
and
(bad)
push
clc
mov
adc
test
xor
jp
ins
pop
push
fimul
mov
ja
mov
aaa
or
(bad)
sub
cmps
(bad)
aad
arpl
popf
ins
pop
inc
cmc
hlt
icebp
xchg
dec
push
mov
fsubr
fwait
dec
test
push
xchg
mov
push
mov
dec
adc
bound
push
imul
jle
outs
pop
jmp
xchg
mov
sti
xchg
push
data16
movs
int
shl
dec
cmp
cmc
mov
jo
xchg
jle
fwait
(bad)
ds
vphaddubd
fisttp
xor
and
out
fucomip
fsubp
jnp
mov
push
pop
call
shr
cmps
push
xlat
add
mov
mov
or
fnstsw
cmp
(bad)
dec
pop
outs
add
pop
sub
popa
not
cmp
pusha
clc
(bad)
ficomp
and
jbe
or
mov
mov
pop
int3
lea
dec
xchg
mov
rcl
or
cdq
or
sbb
imul
inc
fild
cdq
cmc
adc
jg
adc
jae
mov
ret
loop
jle
xor
xchg
div
push
inc
sub
lea
popf
jg
leave
mov
(bad)
pop
xchg
push
test
sub
mov
jb
cmp
fcmovb
enter
test
dec
or
inc
pop
dec
(bad)
and
scas
shr
mov
pop
in
inc
in
xlat
repnz
cmp
ret
dec
call
mov
mov
cwde
rcl
mov
xor
sbb
ins
xchg
pop
pop
mov
push
or
popa
sub
sbb
popf
pushf
lods
rol
inc
pop
jl
test
lds
in
enter
mov
sub
sbb
jl
push
sub
cmps
imul
loop
imul
sahf
bound
push
sbb
sub
sbb
(bad)
mov
add
jb
cmp
mov
mov
sbb
fistp
inc
call
ret
fs
add
add
jbe
adc
bound
dec
adc
xchg
push
repz
xchg
jno
jbe
(bad)
jmp
frstor
xchg
cld
dec
shl
xchg
mul
xchg
mov
adc
mov
pop
sub
sub
pop
popf
in
dec
adc
js
into
rcl
popa
xor
not
mov
loopne
adc
mov
or
push
push
cmp
mov
hlt
rdpmc
or
add
mov
or
pop
lock
cmps
xor
xor
call
jae
shr
loop
dec
sbb
frstor
xor
in
mov
pop
js
mov
mov
lods
clc
xchg
jne
ds
xchg
mov
gs
inc
fadd
cmp
pop
out
dec
pop
into
int3
push
jg
ret
sahf
scas
jecxz
out
inc
ins
pop
jae
sahf
jbe
adc
xchg
pop
mov
jl
sub
add
rcl
jecxz
dec
lock
jnp
jb
fucomi
push
inc
aam
rcr
neg
(bad)
pop
or
jecxz
mov
xchg
jb
repnz
inc
enter
ja
ficom
cmp
xchg
neg
sahf
jns
sub
stos
sbb
sub
into
mov
scas
push
call
pop
in
mov
add
jb
test
lahf
mov
lods
imul
pop
and
xor
ja
sbb
pop
push
lahf
jae
cmp
xchg
es
pop
adc
popa
mov
push
ss
enter
out
movs
push
in
fwait
stos
mov
add
call
sti
(bad)
pop
jmp
adc
push
add
shr
call
jns
jl
sar
pop
iret
ffree
lea
push
jnp
mov
inc
adc
sub
push
(bad)
fld
test
and
mov
imul
xchg
adc
or
mov
jmp
clc
cmps
mov
mov
sub
gs
jecxz
add
push
nop
popf
sub
inc
sar
loope
iret
mov
rcr
jbe
jmp
mov
mov
adc
test
xchg
and
shr
push
sub
and
or
pusha
stos
shr
js
dec
repz
in
repnz
out
inc
sbb
push
icebp
jnp
pushf
pop
or
cmp
sub
aas
ins
leave
(bad)
lock
stos
fwait
fs
and
and
nop
arpl
cmps
daa
scas
mov
mov
nop
out
ins
cmp
popa
mov
xor
jge
push
movs
and
je
movs
mov
ds
dec
loop
movs
inc
dec
inc
std
xchg
add
imul
sub
bound
mov
xor
mov
arpl
pushf
ja
(bad)
or
mov
jae
loope
cmp
ror
jmp
mov
pop
and
cmp
mov
inc
xor
popa
retf
scas
arpl
stc
rcl
mov
sahf
mov
xchg
pop
ins
fidivr
and
call
cmp
jno
retf
fcmove
mov
cli
pusha
jb
or
fdivr
jmp
and
sub
rcr
stos
cmp
sub
mov
outs
repz
mov
mov
sub
add
push
(bad)
mov
arpl
add
jge
lea
test
cmps
rcl
push
xchg
cdq
add
shr
mov
stos
mov
jae
lock
test
dec
jae
inc
fstp
out
fs
pop
jae
or
sub
xor
ds
xor
mov
mov
add
mov
inc
inc
dec
mov
in
cmp
jle
cmps
sub
test
push
addr16
in
int
xchg
fisub
fst
pop
mov
mov
and
repz
arpl
mov
cmps
and
fist
(bad)
(bad)
adc
mov
fistp
push
inc
icebp
xor
dec
ror
repnz
xchg
dec
out
xchg
movs
add
mov
mov
retf
dec
ds
and
data16
mov
cmp
in
or
mov
pushf
fdiv
and
cmps
lods
js
cli
aad
arpl
and
mov
(bad)
xchg
mov
(bad)
mov
jae
mov
in
xchg
call
test
lds
push
mov
and
rep
and
sbb
pop
add
(bad)
push
push
sub
mov
xchg
fst
aad
outs
mov
sbb
or
mov
pushf
sub
push
adc
arpl
sub
leave
mov
mov
pop
pusha
add
out
adc
mov
jmp
add
cmp
test
sbb
sahf
pop
les
lods
shr
fwait
(bad)
xor
stos
or
cwde
xchg
fcmovne
sub
cmps
sbb
shl
pop
dec
aaa
sub
xor
mov
cmp
iret
mov
cmp
mov
xor
ds
mov
xchg
xor
or
jbe
aad
sbb
je
push
js
dec
adc
push
ja
(bad)
xor
pop
cmp
push
lods
jmp
sub
mov
push
test
retf
in
inc
or
pop
das
xor
(bad)
lds
add
dec
mov
test
jge
(bad)
xchg
mov
fimul
fst
mov
cwde
xor
or
push
mov
xchg
arpl
ret
mov
pop
sub
retf
lods
(bad)
xor
int3
(bad)
neg
push
addr16
and
cmp
sbb
mov
mov
inc
out
push
push
sbb
test
xchg
(bad)
mov
int3
iret
add
mov
inc
push
jl
dec
movs
hlt
add
mov
loope
loopne
mov
jae
aad
pop
cdq
pop
mov
cmp
sub
mov
es
add
test
push
add
mov
add
test
cmp
mov
dec
sar
mov
call
mov
mov
inc
mov
movs
inc
and
xor
jge
sub
jno
push
cmp
xor
nop
mov
imul
adc
leave
jno
dec
mov
jne
pop
(bad)
sub
and
push
retf
lods
push
aam
fnstenv
repz
cdq
addr16
in
mov
cmp
or
dec
xchg
popa
mov
aas
cmps
(bad)
psadbw
xor
in
addr16
jg
adc
rol
out
lahf
ins
dec
xchg
pop
es
add
test
mov
push
adc
popf
inc
cmp
arpl
jge
fadd
pop
cmps
cld
sub
test
les
inc
iret
aaa
imul
pop
imul
mov
push
(bad)
mov
and
out
mov
inc
push
gs
(bad)
dec
call
xor
xchg
pop
inc
dec
inc
stc
pop
pop
jno
mov
xor
inc
movs
and
aas
daa
sar
mov
add
push
fcom
sub
lods
mov
xor
sti
pop
mov
movs
push
push
sub
or
pop
imul
sbb
xchg
mov
daa
js
inc
arpl
cmp
inc
cmp
ds
adc
mov
push
or
and
movs
call
mov
mov
lahf
mov
cmp
dec
inc
retf
add
aad
cdq
fwait
loop
call
in
out
mov
(bad)
pop
lods
pop
cmp
outs
and
push
sbb
sub
sbb
jl
cld
adc
inc
dec
and
(bad)
push
test
retf
jo
push
inc
xor
cmp
pop
and
xchg
push
hlt
cmp
sbb
test
(bad)
adc
sub
out
pop
aas
int
lods
aas
aad
xchg
and
or
je
jae
mov
rol
xchg
iret
ret
mov
stos
in
dec
jns
mov
mov
dec
or
in
dec
out
sbb
sti
dec
jns
fwait
int
dec
mov
(bad)
sub
cmp
adc
stc
xor
adc
or
mov
mov
das
cmp
test
xor
xchg
cmp
neg
movs
sbb
jnp
mov
(bad)
fbstp
fisubr
popf
or
or
sub
aaa
fcom
and
das
rcl
das
popa
xchg
movs
mov
lock
cmc
pop
sbb
sub
lahf
adc
push
push
sti
xchg
inc
into
fisttp
dec
call
adc
cli
mov
cwde
das
(bad)
xchg
push
in
sub
mov
out
fdiv
dec
mov
push
mov
test
ja
arpl
sbb
mov
(bad)
push
ss
stos
mov
js
xchg
dec
pop
aaa
push
jmp
dec
xchg
jbe
ror
mov
xor
sub
mov
fisub
jg
(bad)
push
adc
jp
dec
mov
and
mov
sub
ja
sub
cmp
pushf
clc
sbb
sbb
cmp
jns
xor
sub
test
sbb
retf
imul
inc
les
sbb
adc
or
or
lahf
mov
push
(bad)
push
adc
(bad)
xor
ja
mov
mov
rcl
and
add
mov
inc
or
pop
mov
xchg
ds
xchg
mov
xchg
jge
fisubr
in
mov
retf
add
repz
(bad)
xor
mov
adc
clc
jb
jnp
in
xchg
adc
cs
loope
aas
inc
inc
push
xlat
add
mov
sar
dec
push
pushf
pushf
mov
mov
jecxz
mov
call
and
call
jbe
(bad)
loop
aas
push
bound
jmp
pop
cmp
outs
jnp
retf
xor
ds
call
sub
icebp
sbb
pop
cmc
cmc
jge
and
loopne
fidivr
aad
sbb
push
inc
mov
add
cmp
scas
fidivr
jmp
xchg
gs
mov
jb
pop
gs
or
inc
shl
test
fmul
jae
push
fst
call
or
jnp
iret
pop
je
sub
xor
ret
sub
in
ds
inc
addr16
sub
mov
push
pop
mov
retf
mov
or
gs
adc
lods
push
aam
or
and
xor
fdivr
out
mov
loopne
or
stos
and
cmc
sbb
call
jle
out
adc
jle
xor
inc
cwde
psrlw
dec
(bad)
pop
arpl
pusha
or
ror
xlat
or
xchg
adc
ins
in
ret
mov
fild
cmp
les
test
jb
fisttp
test
xchg
xlat
or
inc
es
ds
out
mov
ds
sar
jmp
retf
xchg
push
jmp
xchg
mov
mov
in
push
or
stc
xchg
push
lock
fs
push
push
xor
push
mov
cmp
sti
cmpps
fcmovb
push
hlt
inc
sbb
or
pop
jne
mov
jmp
jmp
jb
lods
lock
sbb
shl
cmps
cmp
inc
push
jae
ret
pop
pop
faddp
mov
add
sub
repz
mov
mov
add
dec
mov
jb
or
out
dec
add
test
(bad)
sub
js
loope
cmp
or
xor
cmp
mov
mov
lock
mov
shl
out
jecxz
mov
inc
bound
inc
retf
outs
push
mov
addr16
stc
and
jne
inc
jbe
and
ret
cmp
push
push
addr16
push
test
loopne
(bad)
retf
cmp
mov
pop
and
mov
jo
ins
pop
cwde
clc
push
push
(bad)
sub
and
sub
fs
mov
mov
jle
shr
retf
jmp
mov
inc
clc
mov
mov
lods
mov
fwait
test
cmps
adc
sar
mov
push
jae
mov
hlt
retf
sar
call
sbb
add
int
pop
mov
pop
sti
mov
sbb
pop
mov
adc
mov
push
lahf
lods
call
loope
push
scas
cmp
test
(bad)
lahf
cmps
pop
adc
rol
fdiv
mov
frstor
stos
xor
and
push
xchg
adc
mov
dec
pop
cmp
add
add
jb
mov
stos
adc
inc
sub
adc
push
cs
std
lds
cwde
xchg
pop
std
adc
cmp
push
dec
sbb
cwde
pop
mov
fistp
imul
inc
sar
test
(bad)
sahf
cmps
add
enter
leave
sbb
cdq
or
xchg
fsubr
(bad)
push
rol
jb
sbb
div
(bad)
add
ds
es
sub
je
outs
adc
xor
inc
xor
rol
xchg
(bad)
je
pop
rcl
hlt
xor
adc
das
imul
rcr
push
aaa
packsswb
jo
jle
add
dec
dec
push
fild
(bad)
mov
lahf
adc
sub
push
fst
(bad)
(bad)
jecxz
add
xor
pop
fsub
mov
aam
cmp
jne
call
or
(bad)
stc
mov
jb
jle
imul
push
cmp
aas
jne
mov
fldenv
or
mov
call
add
pusha
lods
lods
xor
mov
or
mov
(bad)
ins
cs
pop
cdq
sub
xor
test
mov
jmp
movs
das
vcmpps
hlt
mov
dec
sub
pop
mov
sar
add
xchg
jnp
jno
mov
and
push
pop
outs
add
out
jne
ja
sahf
sub
add
and
cmp
mov
inc
cmc
bound
dec
out
cmc
aad
add
jno
ret
nop
pop
repz
fbld
and
add
sbb
mov
or
sub
push
in
pop
jge
mov
dec
mov
or
dec
lea
test
pop
fsub
gs
loopne
push
jecxz
xchg
mov
cmp
data16
xor
ret
xor
jb
push
sbb
xchg
dec
jmp
mov
pop
jl
cmp
push
test
mov
jnp
fs
inc
dec
mov
mov
(bad)
mov
xor
pop
push
and
jmp
loopne
sbb
fistp
and
outs
jne
sub
push
and
scas
neg
pop
jmp
jae
push
clc
(bad)
push
jge
xchg
sub
ret
push
das
cmp
pop
xchg
pop
aam
add
pop
sub
pop
jo
inc
daa
cmc
and
(bad)
clc
inc
mov
xchg
mov
shl
retf
cwde
cmp
ss
outs
adc
push
push
test
adc
femms
sti
int
test
data16
fs
pop
jo
xor
clc
out
js
cdq
sub
mov
gs
pop
and
retf
loopne
in
call
push
pop
inc
sbb
and
std
jo
sub
popa
mov
xchg
mov
retf
xchg
retf
ret
fcomip
xchg
imul
ins
jmp
pop
jmp
repz
pop
xchg
gs
data16
mov
sbb
scas
repnz
aaa
mov
nop
fbstp
adc
xor
push
in
push
mov
inc
outs
mov
scas
aaa
xchg
adc
lahf
pop
xor
push
pop
lock
jns
imul
popa
cmp
loop
rcl
mov
push
daa
dec
out
shl
jecxz
cwde
ds
mov
repz
fiadd
mov
call
inc
into
pop
dec
sti
scas
xchg
sar
push
dec
add
pop
(bad)
inc
push
or
jp
jp
popf
or
test
mov
inc
dec
inc
mov
pushf
jp
mov
dec
xchg
pop
bndldx
int
(bad)
(bad)
fwait
adc
jnp
cld
stos
and
dec
rcr
add
cwde
cmp
int3
mov
repz
js
repz
pusha
scas
pop
mov
cmp
add
jmp
or
dec
pop
loopne
cwde
xchg
jmp
mov
xchg
jb
adc
call
pop
xchg
sti
sub
pop
sub
mov
(bad)
fcom
outs
xor
in
adc
ja
aam
call
loopne
xor
out
es
and
cmps
push
xor
mov
loop
ja
xlat
xchg
xchg
cdq
sbb
add
or
je
fdiv
inc
test
cmc
ins
aad
inc
sub
push
in
jge
push
leave
pusha
test
adc
cdq
push
xor
mov
mov
or
mov
in
sub
push
out
into
xor
fs
nop
int3
mov
inc
sub
arpl
dec
repz
or
lods
push
inc
stc
or
xor
sti
in
jo
fnstenv
loope
ret
push
inc
pop
sahf
push
dec
push
je
ss
sub
cmp
or
or
xlat
out
es
ds
xor
rol
mov
inc
xchg
xchg
cli
imul
aas
sub
sub
sub
(bad)
outs
inc
call
jecxz
shr
into
push
mov
mov
data16
inc
icebp
sub
push
retf
xlat
xor
adc
jmp
xchg
jecxz
out
adc
jnp
add
fisttp
data16
add
popa
cli
mov
xor
push
outs
jbe
sti
push
(bad)
out
jmp
pop
test
cli
nop
loope
dec
inc
and
mov
aas
mov
ins
pop
std
shl
into
rol
dec
cmc
mov
sar
cmps
pop
ffreep
inc
movs
jns
fist
inc
in
pop
or
movs
test
cmp
inc
shl
jl
jne
sub
inc
fisubr
test
les
push
jb
popa
jno
test
pop
dec
pop
dec
mov
jmp
lods
mov
popa
or
mov
mov
mov
ds
sbb
pop
leave
inc
std
in
std
retf
lock
imul
cmp
pop
pop
iret
or
and
fcmovu
pop
mov
es
inc
inc
adc
mov
cmp
jns
xchg
fwait
lahf
jo
jns
mov
xchg
int
loope
stos
mov
cmp
fcomp
pop
cwde
loope
nop
jecxz
mov
xor
out
jle
stos
fstp
cdq
or
fs
inc
jno
fisttp
xor
adc
addr16
sbb
(bad)
lods
ret
xchg
xchg
inc
mov
out
icebp
fwait
test
cld
leave
test
arpl
or
(bad)
iret
daa
test
adc
into
inc
popa
mov
push
or
push
ins
retf
lock
int
scas
adc
pop
stc
xchg
or
jae
sbb
cdq
push
cmp
push
aad
sahf
pop
stos
in
ret
push
xlat
idiv
push
int3
adc
jg
shl
add
std
enter
push
jmp
retf
je
mov
mov
lods
stos
aas
sbb
ret
dec
icebp
movs
or
test
dec
scas
cdq
mov
div
mov
xlat
push
pushf
jmp
(bad)
adc
jl
mov
pushf
xor
inc
sbb
push
add
ja
mov
in
mov
or
enter
sub
add
xor
lods
pop
nop
das
gs
pop
retf
xchg
fstp
retf
mov
add
xchg
and
js
shl
push
rcl
jle
xchg
pop
sbb
mov
mov
outs
mov
mov
pop
adc
loopne
adc
push
pop
inc
loop
sbb
jnp
add
mov
sub
add
or
pop
push
retf
nop
mov
mov
jb
jl
mov
or
mov
loopne
sub
dec
xor
(bad)
cmp
push
or
test
jbe
les
call
lea
sub
shl
xchg
mov
pop
add
shl
out
pop
add
add
std
in
push
jle
push
cmp
mov
add
and
mov
hlt
repz
mov
push
cmp
test
mov
inc
mov
add
and
jo
pop
push
xchg
xchg
movs
fist
dec
fld
xchg
or
inc
retf
enter
in
dec
fdivr
(bad)
adc
pushf
mov
push
mov
jecxz
dec
add
cmp
inc
movs
jle
ficom
push
push
std
and
lahf
mov
nop
scas
or
add
mov
les
mov
xor
jle
push
or
stos
dec
outs
xchg
sbb
daa
sub
xchg
and
adc
nop
pop
int3
popa
push
int
push
fdivr
mov
test
jmp
push
cmp
call
sub
shl
les
nop
nop
or
rcl
inc
test
ss
(bad)
mov
pop
fcom
mov
movs
inc
ret
ret
(bad)
jmp
or
leave
jne
clc
ror
cmp
xchg
pop
pop
in
add
(bad)
push
popf
or
inc
jmp
cmp
lea
repz
ins
(bad)
pop
pop
dec
mov
push
es
ror
cmps
daa
push
cs
mov
int3
xchg
xor
mov
scas
dec
fs
in
and
mov
or
jmp
movs
inc
movs
pop
imul
ds
cmps
in
cli
mov
in
test
(bad)
and
das
int3
faddp
test
(bad)
stos
(bad)
pop
scas
fistp
in
lock
shl
out
xchg
mov
pushf
mov
push
pop
mov
add
add
cmp
retf
dec
cdq
jne
lods
sti
mov
cli
call
jne
stos
jmp
mov
pop
daa
rcl
pop
push
sbb
les
push
in
dec
add
sbb
inc
ja
retf
or
xchg
das
add
pop
cmp
xchg
lock
dec
pop
jns
gs
xor
sub
loop
add
add
stc
clc
int3
mov
jno
fldenv
ret
repz
enter
jbe
sbb
push
or
arpl
mov
dec
int3
and
js
test
adc
jnp
mov
mov
xchg
je
or
push
ror
mov
xchg
test
cmps
div
jo
addr16
pop
mov
and
xchg
ins
dec
jno
mov
xchg
test
and
(bad)
imul
test
gs
xor
aas
and
mov
fcom
aaa
jmp
addr16
or
mov
dec
add
pop
fimul
adc
pop
mov
and
or
jl
fs
mov
adc
popa
pop
dec
add
push
pop
jmp
ficom
cmp
adc
sahf
cmp
jmp
bound
shl
cwde
mov
loope
xlat
es
jo
xchg
xchg
add
cmp
ror
(bad)
loopne
test
fdiv
cmp
call
pop
jecxz
add
jbe
cs
lea
sti
dec
push
popf
repnz
cmp
out
and
pop
add
mov
call
(bad)
sahf
in
std
popf
and
out
aad
loope
scas
ud1
xchg
es
clc
call
aaa
ror
dec
add
xor
rol
mov
cld
mov
cmp
push
xchg
adc
mov
(bad)
outs
clc
into
pop
cs
dec
push
sub
neg
dec
ret
mov
cmps
shl
shl
popa
sbb
fldcw
dec
cmp
mov
clc
push
in
adc
call
cld
int
cmp
bound
pop
ds
adc
mov
adc
dec
test
outs
stc
imul
xor
mov
lods
sub
pop
sahf
adc
lock
leave
loop
xchg
jg
ja
and
das
mov
push
adc
inc
sub
jnp
ffreep
mov
fsubr
push
pushf
or
retfw
or
mov
jne
pop
data16
dec
xchg
add
cmp
std
adc
mov
jecxz
icebp
data16
lock
movs
loopne
fwait
clc
repnz
rcl
xchg
sbb
dec
adc
xchg
mov
jmp
mov
mov
jle
nop
mov
loop
imul
loop
pop
out
add
add
movs
mov
dec
test
xchg
pop
or
stos
adc
pop
out
xchg
das
mov
xchg
movs
xor
and
push
rcl
adc
mov
add
dec
das
inc
je
lds
mov
push
jbe
stos
pushf
push
ret
fst
xchg
sti
shr
pop
nop
add
pop
scas
sub
shr
(bad)
mov
sub
push
addr16
enter
test
adc
mov
leave
out
in
xor
dec
fist
mov
xor
lea
jl
lea
xor
dec
dec
mov
push
add
dec
fdiv
das
xor
es
test
mov
retf
out
addr16
test
fadd
xlat
and
movs
pop
inc
aad
test
scas
(bad)
popa
(bad)
(bad)
ins
mov
out
ret
ret
pop
sahf
pop
shl
enter
inc
cmps
ja
add
push
nop
and
mov
pop
hlt
mov
lock
mov
lock
(bad)
in
mov
outs
xchg
sbb
inc
cwde
sahf
leave
out
add
mov
mov
xchg
stos
xlat
sbb
jo
js
pop
jnp
loope
les
xor
das
fsubr
cmp
lock
pop
and
sub
mov
outs
mov
or
cmps
pushf
sub
add
leave
(bad)
retf
sub
rcl
clc
push
leave
xor
pop
into
dec
xchg
lea
std
mov
dec
xchg
movs
xor
xchg
pusha
sbb
xchg
mov
cmp
pop
sbb
jae
add
adc
push
push
cmp
or
adc
(bad)
jb
call
imul
or
adc
das
imul
ret
mov
cmp
jb
dec
jmp
fidivr
jecxz
imul
mov
lea
adc
mov
sbb
(bad)
sti
mov
pop
or
(bad)
leave
(bad)
xlat
inc
popa
mov
xchg
enter
je
repz
icebp
cs
js
sub
mov
cli
xchg
leave
sub
les
fnstcw
int
push
jnp
test
clc
push
and
std
inc
mov
int
(bad)
pushf
mov
fcom
test
push
mov
and
bound
out
pop
dec
inc
pop
push
jle
mov
sbb
or
push
call
adc
retf
js
stos
sbb
stc
sub
jl
sub
fwait
adc
xchg
lahf
je
cmp
mov
xor
loopne
jge
loope
movs
outs
call
fld
push
mov
jnp
pop
mov
push
add
xchg
inc
jbe
jmp
cmps
mov
xor
lds
cdq
xor
push
push
mov
xrelease
test
not
dec
inc
pop
icebp
push
pusha
mov
lds
lods
daa
je
xor
add
xor
std
jae
sub
cmp
std
push
rcr
inc
push
and
es
push
(bad)
lods
sub
lahf
test
jle
sbb
push
jae
pop
mov
gs
loop
dec
loopne
inc
mov
mov
mov
(bad)
(bad)
std
fistp
lods
xor
push
mov
add
or
jo
dec
mov
shl
fidiv
adc
fsubr
adc
neg
sbb
js
ret
retf
dec
and
imul
cmps
dec
xchg
and
dec
clc
inc
call
lods
jb
cdq
xchg
(bad)
scas
xchg
into
clc
inc
sar
shl
jle
lods
xchg
sub
pop
mov
push
or
sbb
adc
aas
(bad)
imul
jbe
ficom
push
xor
shl
sub
in
add
imul
int3
push
push
arpl
outs
cwde
pop
cli
adc
out
sub
or
mov
not
xchg
je
js
test
test
bnd
and
sub
sub
add
sbb
(bad)
push
add
jnp
stos
stc
movs
sbb
mov
pop
mov
sbb
jne
push
ret
cmp
iret
dec
cmp
add
repz
adc
hlt
loop
cmp
and
xor
hlt
adc
push
movs
add
(bad)
xlat
div
cmps
stc
or
mov
nop
ss
inc
ja
add
cmp
dec
dec
outs
iretw
add
add
xor
or
xchg
and
pop
push
outs
adc
shr
mov
inc
dec
(bad)
inc
sub
in
movs
sahf
fstp
sub
shr
mov
ins
into
dec
push
add
mov
xor
ins
mov
sbb
fsub
(bad)
add
xchg
jae
mov
enter
dec
and
add
sbb
test
pop
inc
mov
mov
out
stos
mov
and
cmp
or
fwait
push
inc
jns
(bad)
bound
mov
inc
and
(bad)
out
mov
add
xchg
push
lods
sbb
add
(bad)
inc
addr16
pop
mov
push
div
sub
cmp
sbb
push
pop
inc
jb
pushf
inc
imul
cmovp
cmp
mov
xor
or
add
add
ins
sub
add
jae
cmp
xor
xchg
push
cmp
ins
retf
test
and
xor
mov
fs
(bad)
fs
inc
or
(bad)
call
inc
and
jb
inc
or
mov
xor
jae
xor
icebp
mov
add
arpl
sbb
pop
rol
(bad)
push
add
ins
xchg
jecxz
out
aas
iret
pop
(bad)
dec
or
mov
mov
xchg
cdq
adc
xchg
and
sub
shr
jmp
mov
jnp
adc
jne
cwde
xchg
movs
pusha
cmps
lahf
ja
and
daa
pop
daa
add
cmp
and
xor
jne
int3
fdivr
dec
shl
xor
mov
push
cs
cli
jecxz
test
jecxz
in
mov
imul
adc
dec
push
fmul
loopne
pop
cmp
mov
and
xchg
shl
sar
jno
sbb
mov
cdq
retf
into
inc
push
cmp
adc
mov
stos
loopne
dec
mov
push
jmp
mov
sub
mov
faddp
and
add
push
or
mov
arpl
outs
js
jg
ret
push
loopne
addr16
and
(bad)
std
pop
dec
add
pushf
inc
jnp
data16
call
out
sub
sub
in
pop
pop
inc
pop
loope
inc
sbb
fsubr
mov
outs
xchg
pop
push
retf
bound
gs
or
ja
ja
pop
push
into
lds
lea
xchg
mul
out
push
sar
inc
mov
mov
pop
cmp
mov
ss
add
sub
test
movs
inc
add
jne
push
mov
mov
loope
xor
pop
loope
ss
ror
push
push
enter
or
mov
push
shr
cmp
(bad)
dec
neg
fadd
sti
loopne
mov
gs
aaa
cmc
sbb
inc
fsub
vminss
les
push
jmp
(bad)
jmp
aad
dec
cmc
jle
sbb
mov
jbe
mov
popa
aaa
lods
mov
lock
sahf
push
test
cwde
ins
aad
pushf
enter
cld
pop
call
cmp
hlt
jp
xor
jno
in
mov
addr16
pushf
inc
inc
movs
mov
or
xchg
stos
mov
cmc
xchg
pop
aam
cmp
movs
lods
add
gs
xchg
inc
dec
jg
mov
add
or
loope
jbe
fs
fimul
seto
sahf
push
enter
int
cmc
int3
add
xor
jnp
test
sbb
mov
movs
jb
sub
rcl
stos
sub
adc
out
mov
xchg
adc
call
js
pop
add
lds
movs
imul
xor
jae
mov
add
mov
cmp
xor
(bad)
into
dec
fldenv
sahf
je
add
out
pop
std
or
jmp
jmp
push
lea
dec
xor
mov
ds
mov
loope
lds
sbb
push
shr
mov
dec
jmp
sbb
movs
sub
mov
loope
fsub
repz
sbb
in
dec
aas
mov
mov
push
cli
sbb
xchg
loop
xchg
add
jmp
adc
outs
sbb
or
sub
add
xchg
fsub
test
in
test
and
jb
aaa
repz
xchg
into
inc
js
and
rcl
and
push
ret
dec
jns
mov
bound
or
and
adc
inc
lods
stc
idiv
aaa
outs
icebp
push
ins
ins
test
scas
in
enter
add
movs
add
mov
stos
das
and
cmc
mov
sahf
xchg
shr
jo
fld
sbb
xchg
fwait
mov
xor
(bad)
out
call
mov
ss
call
cmps
add
test
lds
das
fdivr
imul
sub
pop
outs
ja
fild
mov
dec
sti
mov
xor
and
icebp
inc
outs
loop
pop
dec
adc
dec
mov
aad
push
popa
in
jne
(bad)
jmp
test
es
das
mov
sub
and
cmps
xor
pop
inc
sub
loop
mov
rcl
inc
push
and
push
xor
les
popa
mov
sub
imul
xor
xchg
mov
and
cwde
mov
xor
into
jne
pusha
and
ss
aaa
mov
test
aaa
push
sahf
sub
pop
mov
cs
xor
sbb
aad
out
jne
mov
mov
lock
xchg
jne
aaa
cmove
fist
mov
ret
retf
jnp
pop
pop
mov
sbb
sar
push
mov
mov
mov
add
mov
jmp
mov
scas
in
dec
add
shr
pusha
or
pushf
pop
out
jmp
mov
shr
test
sbb
scas
imul
dec
mov
jp
cmc
pop
aas
loope
pop
jmp
loop
xchg
imul
add
aad
jbe
cdq
push
sub
loopne
add
dec
jl
jg
(bad)
or
inc
pop
(bad)
jl
imul
xor
loope
ret
or
jge
sti
(bad)
in
cmp
arpl
iret
push
mov
or
or
call
sahf
jbe
mov
dec
icebp
std
mov
mov
or
xchg
sbb
fsub
lock
retf
cmp
sub
inc
add
or
or
adc
pop
sub
add
dec
mov
shr
ret
sbb
pop
aaa
mov
sub
sub
shl
out
add
call
test
mov
addr16
sbb
xchg
in
push
fsubrp
push
jno
js
cdq
(bad)
xor
into
aaa
jne
ins
test
es
pusha
aad
mov
leave
mov
jge
cmp
fs
xchg
call
outs
add
hlt
push
sbb
in
jns
fisubr
loopne
sbb
dec
adc
hlt
or
rcl
aaa
and
fs
mov
dec
xor
rol
dec
push
sub
sub
test
dec
dec
inc
push
pop
retf
cmps
push
adc
mov
(bad)
fld
in
sti
pop
add
seto
push
test
in
jns
fdiv
call
dec
push
lea
not
mov
or
repnz
cwde
inc
dec
ficom
in
test
(bad)
hlt
gs
xor
std
xor
xchg
mov
(bad)
daa
xchg
mov
mov
mov
stos
dec
lds
not
add
in
inc
push
call
bound
sub
cmp
jecxz
int
loop
add
cmp
(bad)
ret
jecxz
jle
cwde
fcmovb
stos
popf
outs
jge
jp
cmps
cmp
test
mov
dec
xchg
mov
leave
push
or
repz
scas
sahf
xchg
inc
xlat
movs
xchg
hlt
xlat
sbb
jne
pushf
jne
or
test
aam
cmps
cmp
dec
imul
out
or
fucomip
pop
xor
push
pop
and
es
push
mov
mov
push
mov
or
pushf
jge
adc
icebp
call
sub
ds
mov
addr16
push
pop
dec
ss
sub
fldcw
jmp
push
out
mov
retf
dec
push
test
mov
test
loope
sar
sar
mov
inc
xchg
fwait
(bad)
nop
mov
int
xor
adc
cwde
adc
push
sub
aas
mov
into
and
(bad)
int3
xchg
out
leave
pusha
sbb
ins
fild
add
xor
add
xor
or
and
dec
pop
fsubr
inc
ins
mov
jp
cli
loopne
cmp
das
fcmovnbe
mov
movs
in
pop
pop
xchg
adc
test
cmc
imul
cs
jo
lea
int3
xlat
mov
scas
push
imul
and
or
(bad)
jbe
xor
mov
mov
adc
(bad)
fs
mov
loopne
jb
or
pop
push
or
mov
mov
imul
xchg
or
repz
adc
pop
jbe
cmc
test
pop
jb
or
(bad)
js
or
call
inc
dec
repz
loop
or
enter
jbe
fnsave
jp
add
mov
push
jmp
xchg
mov
mov
lods
data16
mov
xchg
int
pop
mov
mov
push
jp
mov
(bad)
scas
xchg
inc
ins
inc
sbb
adc
(bad)
mov
stc
test
in
jb
push
cmp
mov
xchg
lea
mov
stos
scas
outs
cmp
lods
nop
cmovp
gs
sbb
xchg
or
shl
ror
sbb
sub
sbb
repnz
lahf
loopne
lea
test
mov
jl
out
push
adc
lods
pop
stos
in
clc
fadd
inc
cld
sbb
adc
push
push
mov
test
sbb
les
dec
test
adc
jno
push
(bad)
pop
jno
loop
mov
sub
and
(bad)
push
and
mov
sub
lods
xor
cmp
cmp
mov
into
cwde
pushf
(bad)
aaa
data16
jbe
ja
pop
or
push
sbb
sbb
inc
fadd
sahf
iret
ds
mov
and
cdq
scas
mov
adc
ret
push
movs
lea
les
inc
dec
imul
ret
jns
inc
mov
pusha
jns
cmp
push
and
push
mov
loop
in
ins
jns
adc
rcl
out
cmp
cmp
xchg
mov
iret
pop
rcl
push
xchg
sub
rcr
jns
into
or
and
jne
lods
sahf
fisubr
jge
or
inc
pop
pop
sub
(bad)
nop
xor
inc
bound
jne
and
fstp
lock
mov
sub
add
pop
cmps
jmp
cmp
add
je
into
mov
xchg
pop
mov
adc
jns
loopne
arpl
mov
nop
dec
cmc
dec
maskmovq
mul
lods
jae
retf
jae
mov
sub
mov
push
mov
(bad)
scas
ins
push
adc
into
add
mov
shr
adc
int
cmps
fild
(bad)
xor
aaa
lods
dec
cmp
scas
adc
dec
aam
inc
cld
xchg
push
cwde
mov
stos
movnti
icebp
xor
lahf
xchg
sub
xchg
mov
imul
jp
imul
std
cmps
cwde
inc
sbb
mov
mov
ins
int
push
in
gs
arpl
rcr
push
popf
fistp
sub
push
xor
les
adc
pop
out
jo
dec
scas
xchg
call
dec
ret
shr
inc
push
xchg
or
lea
ret
adc
jb
stos
mov
test
mov
mov
push
jno
push
out
daa
nop
cld
and
jns
and
out
push
stos
add
loope
fsubp
ror
outs
scas
ret
mov
jmp
xchg
retf
in
mov
or
adc
sub
sub
out
dec
sar
loopne
pop
sbb
dec
inc
pushf
xchg
ret
(bad)
pop
and
ja
inc
xlat
(bad)
inc
in
clc
std
pop
loop
cmp
xor
pop
push
adc
sub
dec
call
pop
inc
mov
pusha
or
cmp
dec
scas
pop
and
fsub
rcr
test
and
jp
mov
adc
xchg
aad
push
pop
sar
add
cmp
arpl
jecxz
adc
pop
pop
xor
popa
mov
pushf
test
jle
test
and
or
pop
enter
into
sbb
inc
pop
add
dec
push
(bad)
jge
dec
fdiv
mov
jns
fcom
shr
xor
por
adc
pop
push
mov
mov
cmp
test
add
ss
stos
jge
movs
aam
xchg
dec
clc
cdq
mov
push
bswap
push
pop
or
dec
cmp
mov
pop
ret
push
out
sbb
adc
pop
mov
(bad)
push
outs
(bad)
fdivr
mov
xchg
mov
jno
fs
mov
or
je
add
out
push
cmp
mov
div
mov
lahf
sub
cmc
cmp
movs
adc
shl
add
push
movs
sub
sbb
mov
repz
fcomp
push
addr16
dec
mov
sub
imul
and
loop
js
rcl
out
and
and
and
jmp
ins
adc
mov
scas
data16
mov
mov
lods
jle
test
xchg
mov
test
adc
dec
out
push
xchg
mov
or
mov
mov
mov
out
mov
xchg
lds
sub
adc
dec
mov
dec
and
enter
xchg
scas
stos
ret
push
lock
in
dec
jnp
xchg
jo
xor
stos
jg
xor
dec
leave
fcomp
dec
imul
les
mov
cwde
or
cmp
or
ins
jl
sti
add
stos
jb
push
xor
xor
jecxz
aad
dec
out
fisub
fld
mov
enter
jne
gs
push
(bad)
xchg
inc
into
(bad)
cmp
xor
jnp
imul
(bad)
push
leave
or
rol
sti
adc
pop
cdq
pop
dec
adc
pop
or
mov
or
xor
arpl
js
mov
int3
dec
stc
data16
cmc
arpl
ja
(bad)
retf
nop
jmp
test
scas
(bad)
gs
cld
cwde
push
pusha
dec
loopne
push
cli
in
inc
mov
cwde
adc
xor
aas
xchg
stos
retf
xchg
in
test
sahf
int3
push
fdiv
adc
arpl
(bad)
in
push
sub
in
xor
and
fnstsw
and
mov
repz
pop
jl
mov
imul
sbb
(bad)
popf
rol
ds
inc
xchg
out
clc
jo
mov
cdq
(bad)
jl
push
outs
dec
cmp
movs
sub
repnz
dec
cwde
jbe
push
je
jae
inc
or
adc
dec
rcl
mov
test
add
push
les
fucom
xor
ja
sbb
cmp
mov
mov
int
ja
and
cli
lahf
pop
inc
mov
cmp
xchg
cmps
and
pop
inc
lods
and
sub
outs
pop
push
sbb
sahf
mov
ins
js
clc
mov
sbb
cwde
(bad)
mov
push
mov
xchg
xchg
test
mov
dec
pop
call
out
and
sub
ret
jbe
mov
or
and
inc
pop
(bad)
add
ins
push
push
sub
jmp
out
xchg
pop
(bad)
pop
push
sbb
xor
ror
cmp
call
jnp
push
inc
jmp
in
cs
(bad)
and
xchg
inc
mov
mov
cmps
imul
xchg
(bad)
jns
iret
xchg
(bad)
mov
leave
jmp
inc
je
sbb
push
jmp
dec
(bad)
repz
dec
out
ins
sbb
xor
pusha
xchg
mov
jecxz
cli
jne
push
sub
and
or
inc
mov
mov
aas
or
ficom
scas
sub
jb
cmp
jae
cdq
hlt
clc
cmp
jb
xor
or
dec
mov
push
xchg
(bad)
jecxz
shl
and
into
mov
and
pushf
fmul
mul
movs
sub
or
jns
mov
(bad)
pop
rcl
or
fnstsw
aam
pop
dec
jge
stc
imul
and
xchg
jle
mov
mov
and
mov
cwde
push
out
dec
add
dec
pushf
pop
mov
dec
dec
mov
push
push
sar
jo
inc
je
mov
adc
inc
xor
adc
dec
xor
ret
jl
xchg
test
sub
mov
pusha
lods
adc
retf
cdq
enter
pop
clc
mov
call
js
je
and
push
es
jbe
jbe
xor
xor
lds
xchg
imul
fwait
jnp
cmp
push
adc
fist
pop
sub
fdiv
mov
loope
cmp
cli
nop
std
mov
dec
xor
fadd
pop
rcl
inc
rol
xor
repz
mov
sub
pop
adc
mov
retf
cmps
push
in
lds
cli
dec
dec
jo
lea
enter
inc
fcom
lahf
sahf
imul
(bad)
and
std
in
aas
jno
sub
adc
dec
inc
loopne
mov
pop
repnz
or
into
pop
inc
cmc
outs
mov
nop
push
rcl
dec
pop
out
push
mov
adc
addr16
test
(bad)
cmc
pop
ins
icebp
mov
pop
ins
arpl
inc
leave
frstor
aad
or
xor
inc
pop
add
into
test
xor
or
sbb
jne
add
jp
and
stc
jnp
hlt
iret
or
mov
mov
sbb
es
xor
fcomi
sahf
(bad)
shr
lahf
mov
shr
mov
push
jg
add
and
adc
leave
cmps
shl
pop
test
cmp
mov
leave
ficomp
inc
neg
push
call
xchg
ret
call
mov
jecxz
jmp
or
fstp
dec
mov
sub
(bad)
push
add
inc
or
jmp
mov
(bad)
xchg
int
aam
sub
add
pop
sub
repnz
xor
mov
mov
loopne
imul
sbb
stos
(bad)
retf
jmp
add
and
(bad)
cld
cmp
xor
pop
xchg
xor
out
or
pop
xor
and
sar
adc
inc
pop
iret
jnp
xchg
mov
dec
inc
xor
test
scas
in
mov
pop
aad
adc
sbb
sub
data16
cld
mov
es
pop
aam
icebp
fs
retf
mov
xor
mov
dec
and
and
lea
call
fwait
xchg
jp
adc
repnz
loop
mov
idiv
aaa
cmp
test
add
(bad)
stc
ins
xor
cld
jmp
push
repnz
fistp
test
adc
enter
mov
or
add
push
add
dec
repz
pop
xchg
enter
pop
cwde
iret
mov
mov
mov
mov
(bad)
pop
cs
call
lock
and
stos
mov
mov
sub
and
in
add
push
jb
mov
(bad)
lds
sbb
or
jle
pop
push
movs
ss
sbb
retf
inc
jno
hlt
loopne
jge
mov
in
in
or
jae
or
jb
cmps
cmp
xchg
xor
and
mov
xor
out
je
cmp
(bad)
out
and
arpl
pop
lds
cmp
sbb
imul
cdq
bound
dec
ficomp
hlt
and
das
fwait
and
jmp
mov
jmp
xor
cmp
movs
icebp
shr
xchg
mov
(bad)
xchg
xchg
jmp
mov
or
dec
inc
pop
icebp
fidivr
das
xchg
into
cmp
das
add
mov
jo
lahf
cwde
outs
test
and
in
cmp
sub
mov
jo
sub
ret
int3
fisttp
imul
jmp
push
imul
xchg
aaa
or
inc
jno
mov
arpl
jno
sbb
call
loopne
push
jmp
(bad)
dec
jo
push
sub
pop
jecxz
mov
aad
loopne
adc
cmp
xor
ja
rol
cmp
test
icebp
mov
stos
(bad)
sub
jne
dec
push
sti
jg
mov
mov
rcr
adc
retf
fwait
ins
jmp
jo
pop
and
mov
sub
aam
call
push
push
fisub
pop
out
push
and
push
cmp
dec
dec
sub
(bad)
gs
sub
mov
stos
dec
push
fimul
shr
rcr
(bad)
mov
pop
xchg
lds
inc
sub
das
cdq
jno
test
stos
ror
cld
sub
and
shl
int
cmps
adc
pop
push
sar
fs
push
jmp
dec
(bad)
popa
outs
push
jp
mov
addr16
into
test
pop
jns
mov
add
in
add
xchg
xchg
cld
shr
call
and
retf
mov
pop
lods
fist
leave
in
lea
mov
mov
fmul
push
cdq
repnz
(bad)
adc
add
loope
sub
adc
jnp
daa
adc
ud1
pusha
cmp
outs
call
(bad)
hlt
sub
out
and
rcl
gs
and
pop
mov
out
sub
in
push
xchg
lea
inc
push
aad
and
je
push
and
out
fdiv
push
xor
pop
loopne
(bad)
data16
fcmovb
imul
dec
stc
inc
add
call
les
repnz
or
sub
inc
mov
jae
jae
enter
cdq
in
lods
sub
jns
mov
xchg
lfs
or
mov
dec
xchg
xchg
mov
xor
int
and
retf
cld
dec
pusha
inc
inc
xchg
mov
push
rep
stos
xchg
xor
std
movs
imul
jecxz
(bad)
hlt
mov
or
loopne
adc
icebp
jge
ret
sub
xchg
push
jl
add
enter
(bad)
in
test
jne
imul
je
push
push
dec
cmp
retf
cdq
call
dec
fwait
in
jno
xchg
js
cdq
sbb
dec
adc
data16
dec
(bad)
or
leave
(bad)
jmp
xor
out
cmp
cmp
jno
inc
repnz
fsub
stos
add
sub
js
rol
xlat
sub
xor
out
lods
and
out
call
push
jns
push
outs
fnstsw
or
mov
(bad)
fsub
or
cmp
add
lock
arpl
mov
or
dec
leave
fisubr
pop
pop
or
les
xor
shl
mov
dec
call
sub
mov
std
sar
jo
push
fnstenv
pop
ja
push
addr16
sub
test
xor
pop
mov
jo
mov
daa
sub
cs
popa
call
popa
dec
aad
div
aaa
fnstsw
pop
in
inc
push
add
js
lock
xchg
(bad)
popa
mov
mov
sub
mov
adc
in
pushf
push
xchg
pop
test
sub
mov
or
sub
mov
out
jbe
scas
sub
outs
adc
movs
iret
mov
pop
mov
mov
ret
xchg
mov
xor
jbe
sbb
fldcw
xlat
inc
scas
jmp
push
sub
xchg
mov
into
cwde
lock
mov
xchg
jb
inc
in
mov
dec
jae
mov
pop
lods
adc
xchg
xor
xchg
cmc
add
xor
ins
xor
lods
out
and
in
mov
adc
add
or
ret
in
jl
add
sub
loop
mov
je
adc
prefetchwt1
or
cmp
adc
sbb
and
jg
add
pop
xchg
adc
sbb
loop
(bad)
cmp
sbb
pop
jne
xor
dec
cmp
mov
pop
test
push
shr
sbb
dec
dec
jnp
imul
mov
dec
cmps
js
pop
cmc
pop
mov
stos
test
fld
dec
sub
jne
rol
hlt
in
inc
push
(bad)
cmc
sbb
sub
enter
or
mov
fs
push
hlt
sbb
out
movs
push
test
test
scas
sahf
ins
cmc
mov
dec
lods
ja
cmc
in
cmp
dec
pop
les
add
mov
pop
popf
sahf
or
cmp
pop
sbb
data16
mov
mov
out
cmp
jmp
(bad)
fdivr
pop
or
push
cdq
les
into
jbe
nop
inc
mov
jnp
pop
xor
adc
jno
ret
dec
out
ds
ret
fcomp
inc
mov
sub
push
mov
stc
out
mov
lods
sbb
mov
xor
scas
sbb
sbb
je
arpl
mov
in
call
stos
jae
sub
shr
cmps
ss
in
ret
xchg
loope
test
pushf
push
sbb
push
aam
inc
xchg
movs
inc
push
push
call
xor
and
sub
cmc
cmp
retf
loop
jl
sbb
cmp
mov
leave
call
shr
movs
mov
loope
mov
and
xor
or
mov
das
push
xchg
cmp
and
fdiv
lods
and
mov
hlt
mov
jb
js
hlt
dec
retf
jns
popf
mov
aaa
mov
jp
add
xlat
(bad)
adc
popf
pop
ret
jl
jp
pop
push
imul
addr16
cmp
mov
cld
jae
push
stc
jmp
mov
jmp
repnz
leave
iret
lods
mov
aaa
sahf
cli
mov
adc
adc
xor
xor
sbb
repz
lods
stc
aad
fisub
(bad)
mov
or
mov
pop
or
out
mov
xor
imul
adc
aas
or
xor
add
xchg
or
or
in
es
cdq
sbb
stos
in
mul
push
mov
jns
stos
sbb
test
sbb
pop
lods
(bad)
jne
jge
mov
rcl
xchg
add
cli
jnp
jmp
mov
retf
pop
rol
and
daa
mov
pusha
mov
stos
sub
push
stos
xchg
pushf
xchg
movs
sub
rcl
shl
cs
jecxz
mov
stos
sub
or
fxch
pop
aas
inc
stos
call
or
cwde
inc
pushf
gs
pop
mov
ja
mov
(bad)
out
fild
push
cli
mov
or
cs
add
push
out
ror
mov
and
nop
stos
lods
inc
pop
mov
push
out
mov
lea
jae
sub
pushf
jg
dec
hlt
cli
daa
movs
xchg
cmps
inc
cmp
mov
add
ja
adc
(bad)
sub
pop
inc
add
hlt
mov
into
aas
add
add
fimul
cmp
jmp
jae
mov
(bad)
lods
xor
call
lods
push
xlat
mov
repnz
pop
outs
pop
jo
and
inc
jmp
sar
pop
sbb
mov
push
xlat
cmc
add
or
outs
xchg
mov
jno
sbb
dec
dec
call
movs
test
mov
pop
repz
stos
(bad)
jb
pop
push
jne
xor
inc
add
dec
sbb
out
fistp
sub
push
xlat
pop
mov
jl
or
sbb
adc
loopne
leave
or
jno
retf
jmp
sub
es
ret
cmp
sbb
mov
xor
retf
aad
imul
lea
mov
call
popa
mov
cmp
cdq
xor
dec
add
sbb
mov
and
out
cmc
inc
mov
and
xchg
xchg
gs
push
(bad)
push
ficomp
push
int3
push
xor
mov
pop
stos
(bad)
jecxz
fmul
(bad)
out
bt
adc
stos
pop
add
cmp
cmp
out
pop
movs
ins
div
sahf
mov
sti
das
gs
std
sub
cmc
sub
xor
push
mov
clc
outs
and
lock
pop
pop
fisubr
addr16
jmp
sbb
xor
rol
add
jl
sti
xchg
mov
xor
sub
add
sbb
or
nop
sub
nop
mov
dec
jo
test
sub
ss
add
add
mov
(bad)
es
sbb
xchg
je
out
js
aas
or
shr
push
adc
jle
test
or
mov
mov
cmp
or
mov
cmp
(bad)
lock
or
mov
fld
fild
jns
in
mul
mov
xchg
inc
lods
jne
xchg
pop
mov
mov
cld
ds
enter
or
and
mov
out
(bad)
push
or
loopne
push
pcmpgtd
fcomp
mov
mov
lahf
shl
loope
jle
cmp
stos
bound
mov
(bad)
sar
cmp
cmp
jae
(bad)
lock
in
sbb
dec
xor
loope
cmps
lods
pop
inc
outs
movs
inc
jecxz
ins
call
icebp
repnz
fs
sahf
mov
data16
and
std
out
mov
je
mov
fdiv
imul
les
jns
pop
sub
iret
data16
das
mov
lods
das
jno
add
adc
pushf
adc
jle
push
mov
mov
xor
addr16
jo
sub
sub
jmp
adc
in
cmp
dec
inc
js
mov
mov
das
loop
sbb
js
movs
push
adc
les
add
add
adc
retf
es
je
ds
je
fist
out
lods
mov
ja
ret
push
pusha
pop
sbb
mov
jmp
push
ins
loope
adc
dec
stos
outs
mov
pop
imul
pop
sub
lock
lods
push
mov
pop
mov
adc
xchg
cmps
loope
cmp
pop
mov
mov
les
sub
sbb
loopne
bnd
push
pop
sub
scas
popw
lods
aaa
les
ins
lods
jnp
jmp
add
pop
xchg
mov
jnp
xchg
aam
in
mov
cmp
cld
dec
call
gs
and
leave
push
imul
mov
mov
mov
(bad)
jl
sahf
or
or
add
xchg
(bad)
or
pop
int
sub
jo
cmc
push
cmp
pop
(bad)
sbb
mov
mov
out
rcl
pop
imul
push
lods
push
mov
repnz
inc
dec
mov
push
sub
ret
call
jl
in
dec
lods
cmp
sbb
xor
dec
mov
push
jl
(bad)
int3
retf
mov
outs
int
xor
(bad)
in
into
push
mov
add
lods
sbb
hlt
mov
not
sar
out
ss
shl
in
cmp
or
in
dec
retf
pop
stos
out
add
adc
retf
jecxz
aam
mov
jl
iret
jnp
lahf
lods
push
mov
fimul
xor
jbe
push
mov
add
push
(bad)
jl
arpl
cwde
jns
out
inc
jb
jno
push
xor
mov
inc
cmp
jmp
xor
sti
out
sub
dec
sub
inc
idiv
loopne
sar
call
das
movs
pop
cmp
test
movs
and
aad
lods
xchg
jns
sub
pop
mov
xchg
lock
pop
into
fwait
mov
aad
mov
aad
shl
mov
sub
adc
pop
loope
mov
int3
scas
push
ds
(bad)
dec
xor
std
out
fisttp
pop
imul
jp
pop
test
jmp
and
push
addr16
mov
cmp
iret
fnstenv
das
jbe
pushf
fadd
outs
(bad)
(bad)
(bad)
fld
push
mov
mov
shl
mov
pop
add
fs
jae
and
push
mov
icebp
stos
fdivr
fadd
lea
mov
frstor
and
cmp
and
fs
xchg
addr16
(bad)
outs
daa
fstp
cli
pop
add
data16
fwait
js
jl
hlt
scas
aaa
pop
mov
ret
xor
fistp
leave
(bad)
movs
jbe
xchg
popf
retf
cmp
dec
and
(bad)
movs
or
sbb
jmp
ds
sub
add
dec
aam
jno
adc
pusha
sub
or
mov
ret
ja
pop
jnp
jmp
mov
ins
loopne
push
pop
(bad)
and
retf
pop
call
mov
cmp
sti
retf
dec
mov
xchg
in
repz
adc
cli
stos
inc
jne
xchg
nop
mov
dec
cmc
mov
cs
and
push
add
push
mov
ficom
lods
xor
sbb
int3
xchg
out
retf
cs
retf
mov
cs
sub
shl
jge
(bad)
lahf
retf
mov
lahf
cs
jmp
(bad)
cs
cmp
add
push
jecxz
test
inc
lea
xchg
sub
jo
mov
dec
or
mov
inc
or
test
mov
mov
enter
inc
push
inc
add
adc
into
data16
mov
lods
dec
jbe
stos
xor
sahf
es
out
mov
add
mov
jne
sbb
repnz
mov
jno
sti
je
addr16
daa
push
sbb
dec
pop
retf
pop
inc
es
inc
mov
inc
lock
jmp
fist
pop
jl
mov
int3
ins
test
pop
mov
iret
js
xor
rcr
and
mov
stc
sbb
rcr
push
icebp
inc
sub
fisub
call
mul
fbstp
cwde
pop
mov
sub
sahf
out
cld
stos
fild
imul
(bad)
sbb
test
push
push
lods
cmp
jae
(bad)
inc
and
leave
xchg
call
mov
rcl
sub
icebp
sbb
pop
icebp
cmp
jg
dec
xchg
inc
call
mov
or
pop
xor
inc
dec
push
cmp
cmp
movs
mov
push
and
popa
out
mov
add
dec
ja
in
and
or
or
and
scas
xchg
add
adc
mov
push
cdq
arpl
mov
loopne
xchg
rol
mov
loope
jno
in
inc
add
loop
mov
xor
arpl
loop
xlat
xchg
pop
stos
mov
(bad)
mov
mov
fst
stos
pop
pushf
es
rol
sbb
sub
push
pop
ss
mov
fwait
adc
and
vmwrite
adc
outs
xchg
mul
fmul
sbb
into
jl
xor
sbb
test
xor
icebp
dec
push
add
push
pop
ret
into
lods
sbb
mov
pusha
(bad)
cmp
push
sbb
aaa
push
(bad)
pop
and
pop
and
cmp
jns
mov
jp
cmp
push
ins
xchg
pushf
(bad)
jbe
mov
aad
mov
sbb
jge
xchg
and
mov
lds
and
cvtps2pi
xor
(bad)
mov
lods
or
loopne
out
lods
test
loope
pushf
cmps
loopne
in
sbb
outs
not
cmc
inc
jbe
push
pusha
retf
loope
push
jae
xor
out
sub
dec
jle
and
xchg
jbe
ins
scas
mov
dec
mov
pop
mov
xchg
(bad)
or
scas
inc
or
mov
mov
cmp
mov
jbe
jns
push
dec
xlat
mov
mov
mov
mov
lock
jno
and
outs
inc
add
shl
shr
mov
repz
adc
lea
cmps
xchg
or
cs
cmp
and
pop
mov
sti
xchg
jno
in
inc
add
mov
aad
hlt
xor
cmps
push
pop
pop
jp
jbe
adc
mov
xchg
inc
cmp
mov
and
mov
fmulp
jae
into
xor
lods
movs
add
out
pop
cld
stc
lahf
rcl
xlat
rcr
sbb
push
stos
pusha
push
adc
mov
xchg
mul
xor
je
pop
pop
fs
out
mov
rcr
cdq
inc
daa
sbb
dec
xor
xchg
mov
in
xor
xchg
scas
mov
dec
xchg
inc
jne
fwait
icebp
lock
cmps
inc
inc
xor
xlat
push
mov
lods
pusha
cmp
xor
push
fmul
iret
mov
je
retf
mov
fbstp
xchg
fisub
xor
adc
mov
rcl
mov
sar
and
lods
icebp
in
and
lahf
mov
jmp
stc
jno
aam
scas
psraw
in
test
jg
add
mov
nop
sbb
fwait
jle
lods
xlat
sub
je
je
xchg
dec
xchg
and
mov
outs
ja
cld
sub
xor
cmp
je
gs
mov
pop
test
inc
cmps
pop
xchg
add
adc
pushf
lea
sti
sahf
xchg
sbb
test
mov
and
fsubr
(bad)
das
jmp
mov
std
push
cmp
pusha
nop
jge
adc
mov
outs
sub
jne
sub
popf
add
addr16
lods
idiv
cmp
mov
push
fcomp
rol
or
ins
inc
push
xor
xchg
mov
mov
pop
push
lahf
push
mov
or
and
pop
fwait
sub
push
sub
xchg
shl
test
repz
popf
dec
adc
xor
mov
outs
jle
fsubr
dec
sub
je
je
mov
xor
shr
sub
lods
and
jnp
mov
pop
sbb
dec
mov
or
retf
push
dec
and
lea
sub
ja
pusha
ds
aad
movs
cdq
jp
lea
sar
mov
es
sbb
jne
xchg
or
ss
xlat
cmps
outs
push
jne
mov
mov
adc
hlt
nop
aas
xchg
xor
add
cmp
stos
shl
pop
popa
jmp
aam
mov
push
mov
xor
fisttp
aas
push
stc
es
cmps
push
pop
xor
inc
and
nop
xchg
dec
cmp
mov
lahf
push
and
inc
push
lods
xchg
out
ret
outs
mov
xchg
cmps
outs
enter
test
inc
aad
retf
fadd
push
mov
dec
add
aas
or
daa
add
jmp
push
mov
rcl
call
loope
(bad)
sub
jns
mov
and
outs
adc
jbe
jmp
xchg
jl
jno
in
les
jmp
(bad)
in
inc
pop
out
xchg
mov
rcl
loopne
jae
inc
ja
adc
jl
xchg
(bad)
or
mov
jmp
imul
sbb
pop
mov
xchg
lahf
int
mov
int
and
push
cmp
or
popa
into
lods
dec
je
pop
sbb
fmul
sbb
(bad)
movs
cmps
inc
in
pop
loope
sbb
test
pop
jne
push
stc
lea
inc
test
stc
jns
xor
jns
dec
dec
out
jg
bound
dec
nop
add
packuswb
push
ds
add
and
fistp
(bad)
pop
dec
push
(bad)
out
das
iret
or
int3
push
test
ja
cwde
iret
inc
or
iret
in
mul
jb
in
clc
stc
push
xchg
movs
add
iret
xor
and
sbb
adc
dec
popf
fcomp
dec
retf
retf
cwde
(bad)
fldenv
(bad)
xlat
shl
ret
mov
lea
mov
mov
fiadd
dec
push
jle
xor
push
cmp
xchg
data16
inc
aaa
cmps
xor
inc
jo
mov
mov
neg
leave
mov
adc
fcom
test
and
xlat
sub
push
cmp
or
out
add
ret
push
add
ret
outs
(bad)
mov
mov
inc
mov
pop
xor
cmp
add
aad
xchg
push
jecxz
lods
inc
dec
xlat
dec
mov
test
arpl
cmps
fucomp
js
sbb
jl
and
or
mov
mov
jo
imul
mov
mov
call
dec
lea
not
hlt
fiadd
mov
jecxz
push
and
jnp
jle
loopne
mov
fcmovne
lds
int
in
pusha
arpl
hlt
sub
sub
xchg
or
bound
sub
mov
scas
dec
sahf
xor
fild
cmp
addr16
rcl
mov
mov
push
push
mov
in
inc
push
clc
push
popa
(bad)
ror
nop
jbe
out
enter
loop
dec
loopne
cwde
bound
or
inc
loope
pusha
fnsave
pop
ins
sbb
sub
cs
ror
out
and
xlat
pop
push
sbb
fild
nop
imul
inc
scas
add
pop
iret
test
add
lea
and
imul
imul
cld
cmps
push
push
jmp
sub
xchg
shl
lea
push
cdq
inc
call
nop
and
fwait
ror
add
adc
sub
pop
aam
stos
into
daa
add
or
jge
mov
bound
cmp
fs
xchg
cmp
rol
cmc
jb
popf
int
rcl
mov
jnp
scas
adc
(bad)
mov
sbb
(bad)
ds
ins
mov
mov
push
repz
aam
mov
mov
inc
out
mov
cmps
push
arpl
data16
fnstcw
xchg
jmp
push
jnp
mov
cli
cdq
(bad)
data16
dec
dec
outs
pop
ins
add
mov
mov
pushf
push
jmp
stos
or
add
cmp
push
push
cmc
and
or
sub
jle
mov
xchg
aas
push
mov
leave
dec
stos
mov
xor
mov
adc
inc
inc
daa
clc
not
add
mov
push
mov
(bad)
fidivr
ds
sub
mov
mov
ror
fisttp
fwait
out
and
pop
sbb
imul
sar
pop
push
into
push
adc
lea
lods
cdq
imul
mov
pop
clc
dec
xor
pop
mov
js
adc
lea
test
pop
lds
cmp
cmps
mov
and
jnp
xor
dec
inc
xchg
inc
stos
push
fidivr
lea
sbb
jb
call
cld
mov
scas
ins
inc
push
mov
lds
mov
push
push
mov
enter
push
mov
ror
in
ja
adc
lds
sub
loope
movs
jo
out
fcom
dec
mov
mov
fcomp
push
dec
dec
jl
fst
push
push
xor
dec
outs
mov
mul
or
push
(bad)
call
xchg
mov
pusha
(bad)
and
arpl
dec
fadd
rcr
adc
test
in
pop
fisub
and
pusha
lds
ficom
iret
jae
mov
or
nop
push
je
test
mov
and
cmp
sub
dec
out
add
xacquire
jle
add
adc
arpl
daa
dec
cdq
lds
mov
cli
xchg
xchg
push
mov
jp
(bad)
loope
jmp
mov
mov
fdivp
inc
arpl
enter
retf
jns
and
pop
imul
mov
mov
fisttp
cmp
int3
out
push
data16
push
lahf
arpl
push
mov
sub
mov
jo
ficom
push
mov
je
jne
inc
in
(bad)
retf
stos
in
sbb
sub
sub
or
push
cmp
int3
sbb
and
and
xlat
cmp
mov
ror
cmps
pop
outs
add
pop
arpl
lea
sub
mov
int
aad
jmp
mov
jo
push
(bad)
pop
ins
cmp
adc
push
dec
pop
pop
je
cmp
popf
sub
pop
adc
std
jns
rcl
push
jmp
fs
shl
push
inc
lock
retf
loope
jbe
movs
jle
stos
push
cli
stos
gs
out
sbb
retf
dec
jmp
ins
sti
(bad)
js
fcomip
fmul
or
dec
movs
lods
mov
inc
jne
add
sub
jmp
out
xchg
and
jo
pushf
inc
mov
cmp
rsm
outs
mov
mov
add
mov
aad
or
outs
je
gs
ds
lods
adc
pop
jbe
or
jle
shl
mov
xor
lahf
jo
cmps
push
push
cmps
mov
mov
loopne
loop
mov
cs
dec
stos
and
push
pusha
(bad)
and
repz
and
in
sub
add
pop
sbb
mov
pop
lds
les
or
les
ja
pusha
xchg
dec
mov
push
xor
fcmovne
push
ja
cmps
(bad)
mov
(bad)
mov
in
cli
(bad)
sahf
data16
push
or
mov
loop
jge
es
(bad)
xchg
cmp
pop
dec
inc
xor
ror
mov
sub
push
aas
in
call
inc
or
push
xor
cmps
jmp
das
adc
icebp
inc
outs
lds
daa
xchg
ss
rcl
mov
stos
jg
nop
jecxz
js
jo
jecxz
cmp
outs
shl
stc
(bad)
pop
out
and
clc
xchg
push
jp
cli
jecxz
pop
xchg
xchg
mov
mov
fld
shr
cmc
mov
xchg
push
cmp
and
push
pusha
xor
push
push
push
and
fdivr
loope
jecxz
arpl
iret
xchg
pop
mov
ret
loop
or
dec
lahf
adc
fadd
(bad)
jne
pop
sbb
jne
jg
retf
mov
je
mov
sub
ja
fs
dec
mov
jg
fdiv
and
scas
lods
cdq
pop
imul
mov
hlt
sbb
arpl
push
push
and
mov
xor
push
xchg
xchg
pusha
pushf
dec
std
jno
out
jl
or
sub
pop
cmp
nop
push
movs
out
nop
in
(bad)
call
out
adc
fmul
icebp
imul
ret
mov
nop
cmc
aad
adc
mov
jnp
cmp
clc
inc
dec
push
sub
cld
sbb
jno
sar
push
dec
push
pop
cmp
xor
pop
cwde
adc
jnp
jmp
jbe
(bad)
(bad)
enter
cmp
sbb
push
aaa
ss
(bad)
int
mov
and
push
mov
outs
or
sub
sub
out
fiadd
pop
sti
pop
cmp
fmul
sub
or
adc
das
xor
jecxz
pop
add
int
iret
mov
or
push
jo
adc
adc
in
cmp
pushf
inc
enter
dec
in
jo
das
push
aad
push
push
inc
jnp
push
das
in
lods
clc
ficomp
or
ret
xchg
and
mov
xchg
lods
ja
sub
enter
loopne
pop
leave
mov
fdivr
aam
push
adc
les
dec
repz
mov
out
hlt
cwde
stc
push
jno
xchg
lahf
jmp
xchg
mov
mov
inc
mov
inc
scas
js
jmp
lds
dec
bt
into
mov
cmps
sbb
aaa
mov
mov
sbb
mov
push
pop
xchg
fcom
fcmovne
mov
add
rol
sbb
out
ficom
add
jg
int3
jp
adc
jecxz
xor
mov
dec
and
ins
push
ret
adc
pop
mov
test
mov
in
inc
xlat
retf
mov
and
ja
xchg
mov
jge
inc
call
cmc
pop
xor
add
test
push
std
ins
mov
aaa
xchg
rcr
loope
adc
adc
push
xor
lock
mov
pop
lea
cmc
xor
lods
pop
icebp
clc
test
mov
repnz
adc
sub
push
pop
daa
adc
sahf
ror
jo
(bad)
and
fcomp
push
inc
xor
stc
push
std
jmp
mov
lods
fst
jle
cmc
and
aam
xchg
enter
push
sub
jecxz
mov
mov
mov
ror
ja
pop
xlat
pause
popf
cmp
jmp
jmp
mov
ins
push
ds
fstp
jle
data16
push
outs
xor
xchg
inc
pop
jl
adc
pop
sub
mov
hlt
push
adc
mov
ins
jecxz
mov
jno
ins
jmp
xor
fwait
sub
and
rol
icebp
jl
sbb
xchg
sub
inc
push
and
sbb
lahf
push
mov
popa
jnp
loopne
sbb
xlat
fs
pushf
fisubr
lods
(bad)
pop
add
into
test
ficomp
scas
inc
(bad)
fst
int3
fist
in
xchg
movs
sub
lea
jp
mov
stc
inc
push
or
nop
call
cmc
and
test
mov
mov
ds
inc
enter
imul
xchg
call
outs
cmp
mov
loop
jmp
jle
pop
add
call
or
in
push
data16
xchg
mov
mov
sub
mov
not
jmp
dec
mov
int3
cmp
cmp
in
(bad)
push
out
retf
push
jo
outs
jecxz
push
je
xchg
push
mov
lahf
push
fnstenv
es
mov
mov
(bad)
sbb
sbb
inc
inc
xchg
dec
and
pop
push
jbe
sub
enter
nop
inc
repz
dec
mov
cmp
inc
push
nop
jecxz
xor
jne
outs
sub
jb
adc
(bad)
sub
aad
int3
retf
jp
ja
shl
hlt
es
push
push
repnz
je
int
jnp
inc
(bad)
mov
(bad)
div
fwait
adc
jno
movs
jns
sub
push
or
pop
xchg
bound
(bad)
cld
arpl
or
sub
retf
pop
fisub
sub
mov
pop
push
in
rcl
jo
jmp
je
cli
bswap
xchg
jae
aad
add
lods
dec
mov
sti
aad
mov
fcom
(bad)
aad
neg
js
fldenv
xchg
mov
pop
imul
imul
arpl
pop
gs
sub
jmp
mov
xchg
xchg
cmc
jnp
idiv
push
or
cmps
add
sub
jno
jne
cmp
icebp
ret
and
xor
sbb
add
lods
pop
mov
push
fidiv
sub
jnp
arpl
ins
xchg
jb
mov
mov
int3
iret
mov
mov
fs
jns
and
pop
adc
dec
loop
repnz
int3
ficomp
pop
cmp
pop
fisub
xchg
dec
(bad)
std
(bad)
and
ss
inc
sbb
inc
lea
push
jp
add
ds
jmp
xor
jo
sub
sti
aaa
es
xchg
push
or
dec
enter
mov
inc
(bad)
lock
(bad)
cmp
add
adc
sbb
adc
add
stos
cmp
sbb
and
leave
jne
dec
mov
dec
call
out
inc
jae
jmp
and
movs
jg
stc
ffreep
jge
sahf
cmp
std
addr16
pop
mov
movzx
adc
int3
mov
arpl
mov
adc
data16
xchg
jne
push
or
add
sbb
jmp
(bad)
mov
sbb
mov
push
mov
rcl
sbb
nop
mov
mov
pop
ins
adc
arpl
pop
aaa
jge
mov
pop
push
add
xchg
pushf
out
daa
rol
leave
inc
fnstenv
cmp
sahf
add
mov
cmps
not
fdiv
mov
addr16
(bad)
xlat
jg
mov
loope
push
xchg
aad
inc
jbe
sub
test
(bad)
pop
scas
pop
aad
mov
sub
lahf
(bad)
sar
pushf
rcl
lds
mov
pop
jo
mov
xchg
xchg
mov
jbe
sub
(bad)
jg
mov
pop
jmp
mov
pop
neg
ins
aad
or
cs
adc
addps
not
rcl
call
dec
retf
push
push
xchg
or
std
xchg
dec
test
iret
mov
cmps
lods
sar
jb
aam
jle
jno
ficomp
xchg
pop
dec
jmp
cwde
adc
xchg
mov
stos
out
stos
pop
out
mov
or
adc
push
div
in
sbb
mov
fdiv
xor
(bad)
rcl
xchg
fmul
pushf
push
mov
and
cmps
xchg
jb
sbb
mov
(bad)
in
outs
push
retf
jge
test
dec
xor
jp
cmp
(bad)
inc
shl
gs
inc
int
push
and
jmp
sbb
or
loope
add
es
add
and
or
push
stos
and
ret
push
mov
mov
pop
mov
jmp
outs
div
mov
mov
leave
ret
mov
(bad)
mov
jbe
pushf
pop
stc
fsub
loope
jbe
mov
ds
daa
add
add
pop
dec
sub
xlat
mov
cmp
(bad)
pop
sub
adc
dec
push
ffreep
imul
icebp
push
mov
aam
push
ins
leave
mov
jno
push
(bad)
out
aaa
fdiv
lock
test
or
push
push
mov
push
mov
or
daa
mov
xchg
stc
and
dec
and
xor
shl
mov
inc
xchg
push
add
bound
pavgw
mov
xchg
das
ds
push
lea
rcr
mov
add
and
into
emms
repz
je
push
jg
mov
push
xor
jne
std
out
shr
push
push
mov
mov
pop
clc
icebp
mov
gs
add
retf
xlat
push
aad
loopne
ror
fsubr
int3
cmp
js
rcr
fist
jmp
test
adc
loope
mov
stos
outs
xchg
mov
or
xor
test
jl
xchg
dec
scas
mov
lods
sbb
scas
xor
fstp
sbb
xchg
imul
sub
xchg
sub
mov
(bad)
mov
push
addr16
test
imul
je
jmp
mov
adc
rcr
inc
repnz
jnp
push
outs
(bad)
rol
xchg
leave
lds
xor
jo
(bad)
outs
lock
push
jle
sub
ja
lods
push
cmps
fld
call
cmp
cmp
add
or
ret
pop
sbb
sbb
mov
xchg
mov
test
repz
call
mov
inc
repnz
or
and
rcr
mov
cmp
mov
inc
shl
mov
or
das
fcom
out
dec
stos
jecxz
pop
jnp
mov
or
clc
aas
pop
sbb
fs
inc
nop
inc
das
stc
sbb
rol
std
fnstsw
cmps
mov
inc
imul
pushf
xchg
xchg
mov
cmp
shl
push
mov
in
add
leave
aas
xchg
mov
inc
in
mov
loop
xchg
cmp
cwde
pop
js
mov
loopne
jne
inc
jge
push
pop
inc
aas
add
adc
arpl
bound
pop
mov
ficomp
push
out
call
sub
aaa
in
pop
(bad)
idiv
stc
jne
dec
outs
mov
repz
into
push
mov
dec
pop
mov
test
shl
mov
cs
or
inc
push
rol
dec
jne
push
jg
xchg
(bad)
je
mov
mov
data16
push
popa
in
inc
into
sub
jmp
mov
mov
mov
fcom
push
jb
cwde
rcl
in
or
cmp
jge
in
fcmovbe
jecxz
pop
add
pop
mov
jecxz
mov
fistp
(bad)
nop
mov
xchg
sbb
mov
cmp
jecxz
pop
ins
inc
bound
cmps
out
pop
cs
pop
mov
xchg
pop
inc
popa
shl
outs
add
lds
add
cmp
je
cli
stos
push
ficom
pop
lds
or
stos
cmp
(bad)
sbb
cs
je
mov
xor
adc
xchg
push
adc
leave
pop
sbb
dec
jae
mov
inc
ins
popa
nop
fisubr
jbe
and
sahf
cmp
loop
bound
dec
shl
dec
movs
daa
scas
inc
xchg
mov
and
add
mov
fsubr
or
dec
xor
cmp
loopne
and
mov
jmp
dec
cmp
stos
xchg
call
or
movs
jo
mov
loop
inc
or
das
mov
not
or
das
lods
or
xchg
mov
mov
jecxz
add
sbb
add
xchg
jbe
adc
cmp
call
(bad)
push
ret
rol
ds
pop
mov
xor
fild
imul
xchg
jno
neg
lahf
inc
sahf
lea
jmp
xchg
arpl
and
add
jo
jae
xchg
pop
popf
sti
jae
lds
hlt
mov
pop
int
fadd
gs
(bad)
ret
sub
out
test
push
stos
sbb
mov
vcvtsi2sd
shr
pusha
mov
int3
stos
add
sar
retf
push
mov
ret
inc
jae
popa
mov
dec
pop
das
sbb
pop
jb
mov
push
imul
mov
mov
inc
mov
mov
scas
xchg
mov
fwait
mov
rol
call
jae
pusha
addr16
ficom
xchg
and
rcr
xchg
sbb
in
cmc
push
cld
dec
and
jp
ins
jge
add
jge
mov
add
stos
shr
pop
je
rcl
dec
cwde
pop
inc
xor
push
addr16
inc
int3
mov
or
inc
xchg
inc
xor
push
inc
sbb
cmp
gs
push
fucom
cmp
sub
call
mov
cmp
dec
inc
or
xchg
mov
adc
and
ds
in
pop
bound
push
mov
popa
jno
es
inc
jno
xchg
nop
out
dec
ds
and
test
stc
lods
and
ret
and
mov
(bad)
repnz
fsubp
cmps
in
sub
jge
test
add
into
inc
je
jne
mov
pop
mov
rcr
int3
sbb
lods
adc
xchg
dec
call
mov
xchg
add
imul
push
sbb
aad
ss
loopne
mov
out
sub
cmp
mov
adc
and
jge
jns
stos
xor
cmp
xchg
in
jno
cmc
sub
(bad)
pop
mov
jecxz
mov
xor
pop
(bad)
std
imul
nop
(bad)
icebp
fdivr
hlt
lods
pop
mov
pop
jmp
jne
mul
pusha
xor
test
xor
xchg
push
or
xchg
pop
in
call
mov
sub
cmps
push
inc
fs
hlt
mov
inc
xchg
inc
pop
cdq
jge
adc
cmp
gs
les
fldcw
adc
addr16
xor
jmp
add
xor
and
xor
jae
mov
adc
mov
xor
pop
sar
and
daa
pusha
jbe
add
imul
(bad)
cmp
mov
aaa
repnz
and
add
int3
popa
dec
jnp
int
aad
push
ss
jo
xor
mov
jne
mov
sbb
fiadd
dec
fstp
fistp
and
popf
push
das
clc
call
aam
adc
data16
xchg
jbe
or
cwde
jne
aaa
sahf
or
pusha
push
dec
mov
or
mov
jge
or
xchg
jns
jecxz
inc
sbb
jnp
ror
or
jle
fmul
addr16
ss
mov
mov
cdq
mov
mov
mov
fnstenv
mov
add
sbb
push
scas
xor
fsubr
push
gs
push
(bad)
mov
add
(bad)
mov
fdivr
test
xchg
and
leave
push
pop
pop
xchg
and
icebp
dec
mov
pop
push
fsub
mov
sub
cmp
iret
push
sub
dec
pushf
push
test
pop
adc
cmps
mov
data16
loope
fcom
cmps
or
call
std
cld
outs
xor
imul
(bad)
push
rcl
xor
mov
sub
retf
ja
outs
pusha
jl
je
test
jmp
(bad)
jge
sub
ins
data16
sbb
aaa
shl
push
fiadd
(bad)
repnz
ja
inc
inc
(bad)
mov
jmp
aam
es
or
call
(bad)
sbb
scas
stos
nop
dec
xchg
xor
xchg
hlt
sub
cmp
and
cwde
pop
mov
jl
mov
add
(bad)
iret
adc
repnz
dec
jns
(bad)
mov
jg
(bad)
out
xor
adc
push
xchg
add
(bad)
cld
sbb
leave
aam
dec
rol
iret
push
ret
sbb
pop
enter
aam
out
cmps
in
sub
scas
xor
cmp
js
loop
mov
leave
outs
ins
dec
cwde
scas
out
in
stc
push
inc
(bad)
xchg
push
movs
repz
mov
(bad)
jbe
outs
outs
(bad)
clc
dec
push
ins
ret
pop
xchg
mov
xchg
inc
les
in
push
hlt
mov
hlt
mov
sub
test
cmp
push
jecxz
jb
xchg
aaa
mov
std
jae
mov
jmp
cmp
dec
lds
sbb
into
or
fdiv
and
(bad)
mov
mov
xchg
cmp
test
adc
and
sbb
imul
mov
(bad)
or
mov
or
adc
pop
clc
retf
ins
mov
cmp
cmp
cmp
ret
xchg
fsub
xor
jmp
inc
xlat
jbe
xchg
adc
(bad)
sbb
fimul
cmps
addr16
int
imul
mov
(bad)
adc
(bad)
repnz
hlt
sbb
jns
retf
aaa
aad
aaa
imul
sub
lds
cmp
push
(bad)
mov
aas
jge
std
sbb
mov
mov
jb
mov
outs
repz
or
loope
push
push
rcl
sbb
xchg
mov
mov
outs
dec
push
adc
clc
mov
sti
ret
(bad)
into
cmp
xor
and
push
jo
and
push
xor
mov
jecxz
icebp
popa
call
or
cmp
jo
(bad)
and
or
push
pop
pusha
adc
mov
push
mov
(bad)
(bad)
jns
inc
sub
jge
inc
xchg
movs
popa
mov
add
pusha
cmps
scas
or
and
add
pop
rcr
sbb
dec
pop
bound
neg
cmp
dec
mov
add
mov
add
jecxz
ficom
pusha
loopne
ins
and
(bad)
push
pop
pusha
add
fcomp
cld
mov
leave
and
enter
sub
xor
push
cld
ud1
jne
push
inc
retf
clc
out
mov
jp
clc
or
ss
xor
add
jecxz
jno
(bad)
xchg
or
pushf
inc
call
xchg
adc
mov
mov
jle
shr
and
fcomip
cmp
xor
jg
out
push
push
jmp
enter
lds
mov
mov
jecxz
cmp
jno
loopne
std
dec
cld
sub
repnz
mov
dec
adc
push
fsubr
lahf
mov
sar
shr
xchg
add
mov
cs
iret
scas
int
jge
cld
arpl
jns
loope
das
daa
pop
lods
xor
call
test
jecxz
in
pop
cmp
sub
or
dec
fnstcw
out
test
inc
in
mov
pop
fidiv
push
push
mov
xor
out
jnp
xor
xchg
dec
cmps
leave
push
pusha
repz
pop
fdivp
aas
(bad)
and
or
mov
gs
and
fdivr
push
pop
pop
xor
pop
ret
loopne
pop
call
or
and
adc
cmp
xchg
fs
outs
jne
mov
retf
cwde
movs
(bad)
scas
mov
dec
hlt
std
push
pop
clc
ss
in
js
or
fcmove
sub
ret
ffree
cld
xchg
pop
pop
jle
xor
shr
mov
in
or
jb
loop
sub
call
ss
mov
dec
sar
xchg
dec
add
mov
mov
lods
xor
jmp
mov
xchg
push
lds
in
popf
loop
mov
dec
dec
adc
sub
sub
rol
mov
inc
pop
(bad)
sbb
mov
scas
push
dec
outs
stc
jno
push
push
clc
nop
mov
cmps
stos
dec
and
dec
sbb
outs
lods
pop
sbb
fstp
movs
stos
aam
popf
mov
ins
mov
cwde
xor
pop
les
sbb
add
fcmove
cmp
aas
icebp
xchg
out
add
(bad)
mov
cmps
fadd
push
out
or
dec
add
leave
dec
pop
mov
dec
jns
outs
push
xor
mov
adc
out
add
out
jmp
mov
test
cmp
xlat
jmp
mov
stos
test
and
div
and
dec
leave
in
fcomp
les
inc
ror
aad
(bad)
int3
int3
pop
stos
clc
jo
xchg
div
cmp
(bad)
adc
dec
popf
test
cmp
mov
stos
sub
push
and
sbb
movs
outs
ret
push
aaa
outs
xor
adc
sub
cmp
jo
in
pushf
sub
or
push
xlat
xor
(bad)
pop
mov
jg
push
and
rol
popf
jo
out
xchg
adc
mov
push
cmp
out
mov
cmp
dec
mov
mov
sbb
and
sbb
push
jle
sub
cwde
xchg
xchg
add
es
ret
sbb
leave
fsubrp
mov
inc
inc
and
sbb
sub
push
loope
sbb
pop
xor
mov
or
cli
push
loope
cmp
inc
rcl
retf
inc
stos
mov
test
pop
(bad)
push
cmp
push
inc
movs
xchg
ret
stos
dec
and
mov
inc
mov
ret
xchg
jge
cmp
js
mov
dec
shl
mov
fmul
stos
or
retf
push
xchg
add
add
or
test
pop
adc
sti
(bad)
xchg
je
scas
mov
mov
call
or
push
mov
fmulp
retf
sahf
lahf
movs
mov
jle
adc
lahf
repnz
xor
les
dec
add
add
jge
push
mov
retf
mov
imul
jne
pushf
xchg
sbb
cmp
sahf
outs
mov
std
pop
push
imul
lods
mov
sbb
enter
jp
cdq
(bad)
xor
and
jg
repnz
mov
jecxz
sbb
mov
mov
scas
(bad)
jmp
add
outs
hlt
jecxz
push
daa
mov
out
or
cmp
sub
lahf
jmp
push
addr16
test
mov
cmp
jmp
test
sub
jae
xlat
or
xor
retf
adc
or
ins
xlat
mov
lods
clc
sti
push
xchg
mov
inc
jo
icebp
fs
hlt
mov
push
inc
call
sbb
ins
(bad)
mov
jnp
jbe
cmp
popf
sub
xor
mov
sbb
adc
lods
sbb
mov
and
cmp
mov
dec
mov
cmp
xor
in
sub
jno
jmp
icebp
pop
xchg
and
mov
sahf
cmp
inc
add
std
out
fadd
dec
add
lea
jle
and
jmp
mov
dec
addr16
shl
sub
rol
fstp
imul
xchg
les
(bad)
push
les
das
or
aaa
call
pop
cmp
mov
out
mov
cmp
repnz
in
xlat
cmp
out
pop
mov
movs
dec
or
jmp
aad
rol
jmp
lea
cmps
inc
mov
jae
icebp
(bad)
rol
jge
mov
aam
ficomp
jl
xlat
push
es
iret
dec
sbb
xor
pushf
retf
and
scas
std
outs
repnz
xor
xchg
xchg
adc
dec
push
jl
xchg
pop
cld
jecxz
dec
add
ret
add
xchg
in
loopne
lods
inc
pop
push
fmul
(bad)
adc
cs
pop
test
push
fisubr
imul
dec
or
rcl
test
(bad)
dec
xchg
fstp
jmp
sub
iret
pop
es
cmp
cmp
pop
cli
mov
mov
push
jmp
dec
stc
push
dec
pusha
ds
inc
push
pop
adc
pop
adc
pusha
cwde
movs
outs
sbb
aaa
inc
je
test
xor
xlat
sbb
push
jnp
or
fdivr
add
in
sbb
xchg
pop
leave
mov
cdq
xchg
enter
pushf
in
adc
shl
mov
sub
adc
inc
cmp
or
outs
xchg
data16
sti
cld
sub
sbb
mov
sub
add
mov
cmp
in
fwait
out
(bad)
sub
push
fidivr
call
jmp
cs
xor
ss
or
jmp
add
retf
in
(bad)
(bad)
jae
pop
sub
dec
sub
imul
adc
mov
aam
cli
push
jbe
cmp
push
cmc
ror
or
std
mov
cmp
mov
dec
outs
adc
fcom
add
push
pop
cdq
mov
cmp
and
bound
inc
dec
mov
rcl
sar
dec
push
inc
push
xor
imul
fwait
ins
loop
cli
(bad)
mov
fmulp
or
sub
mov
enter
retf
cmp
or
mov
sub
jge
in
pop
jns
loope
xchg
push
xchg
in
add
stos
or
sub
cmp
fld
and
stos
lds
jmp
pushf
dec
xor
mov
fmul
adc
inc
jl
call
fnsave
pushf
mov
push
test
clc
inc
cld
mov
push
mov
xchg
retf
int3
ins
xor
clc
xchg
stos
pop
sbb
push
cdq
out
clc
imul
ins
lds
loopne
test
es
push
cmp
xchg
inc
mov
inc
pusha
inc
in
adc
test
pop
jbe
jbe
push
cld
jbe
jl
icebp
dec
hlt
xor
cmp
pop
out
(bad)
pop
adc
cmp
retf
mov
dec
outs
stos
repnz
pop
call
(bad)
sub
loop
arpl
mov
xchg
sbb
mov
in
pop
push
push
cwde
mov
xor
inc
or
or
xchg
and
push
aad
push
sbb
stos
mov
into
shl
imul
inc
cmp
fnsave
call
fstp
xor
repz
std
ja
loope
and
je
nop
add
dec
stos
enter
inc
sahf
add
movs
fistp
sbb
test
push
repnz
xchg
es
retf
and
cmp
pop
cmps
js
sbb
test
ins
jge
inc
aam
mov
jle
mov
pop
sbb
mov
cdq
cli
dec
es
cld
int
dec
idiv
adc
push
es
jns
mov
jge
(bad)
or
lods
ret
adc
or
mov
out
mov
mov
aas
loope
and
xor
cmp
xchg
out
add
ja
mov
sub
clc
adc
cmp
shl
xchg
mov
in
mov
stos
add
inc
mov
xchg
xor
pop
mov
mov
xchg
sahf
or
lea
cli
pop
dec
paddsb
mov
xor
ds
aad
sar
sbb
aaa
adc
or
test
push
rcr
or
pop
int3
dec
sub
pop
fiadd
pop
xchg
cmp
scas
ret
stos
jnp
cmps
inc
pop
push
xor
sbb
adc
js
sub
mov
loopne
sub
icebp
in
jg
add
shr
loop
clc
push
(bad)
imul
(bad)
ins
sti
out
cli
pop
pop
rol
sub
es
push
scas
fld
xor
call
fucom
mov
jmp
das
push
fstp
cmp
sub
mov
imul
hlt
jbe
shl
fiadd
dec
fstp
sbb
sub
and
push
dec
xchg
cmp
or
leave
out
(bad)
add
pop
mov
sbb
sahf
(bad)
cs
jb
iret
ret
adc
push
xchg
mov
mov
sti
retf
push
add
jl
ss
popf
fidiv
movs
ja
push
and
fsub
jb
push
out
jmp
cs
inc
mov
inc
push
in
dec
inc
dec
xchg
adc
push
push
cmp
adc
sub
cwde
pop
sbb
and
call
push
mov
pop
jns
xchg
ret
lods
and
test
xor
mov
pop
repnz
shr
mov
add
iret
and
mov
push
gs
jb
jl
or
xchg
(bad)
pop
lea
mov
lahf
daa
xchg
push
shr
aad
xor
mov
xlat
aad
repnz
mov
and
fisttp
in
ffree
xor
sar
cs
add
and
rol
popa
dec
cdq
pushf
xlat
in
ja
into
pop
gs
repnz
neg
mov
mov
fimul
pop
mov
push
push
cmc
cmp
jbe
dec
outs
push
ja
rcr
mov
jmp
outs
into
pop
lock
mov
aaa
loope
pop
enter
xchg
pusha
in
addr16
ss
shl
in
fs
inc
mov
out
fwait
jl
je
dec
loope
dec
test
sbb
bound
jecxz
int3
outs
(bad)
dec
push
retf
sbb
mov
push
outs
lods
popa
int3
pop
dec
ffreep
and
mov
js
adc
test
ret
pop
mov
fidiv
and
pop
or
icebp
jns
dec
or
cmp
into
and
cmp
mov
mov
add
pop
in
mov
dec
xor
cmp
mov
xchg
ja
cmp
mov
loope
movs
add
mov
test
test
jns
push
aam
xor
fs
dec
jnp
int
test
fimul
shr
iret
mov
call
jge
xchg
fwait
sahf
test
retf
rol
and
sub
sbb
pop
mov
sub
inc
iret
imul
mov
mov
cmp
iret
adc
sti
pop
xor
shr
bound
rcl
add
xor
test
mov
dec
rcl
cmp
pusha
nop
push
or
jg
test
sbb
pop
mov
fnsave
test
jp
aad
sub
arpl
fidiv
or
(bad)
dec
push
mov
gs
cwde
mov
scas
dec
mov
lds
dec
push
retf
(bad)
imul
in
fadd
xor
hlt
test
je
dec
pop
stos
push
sub
scas
imul
daa
adc
fcom
aad
dec
(bad)
loope
xor
xlat
loope
nop
jnp
stos
or
add
shl
aam
mov
sbb
fsubrp
cld
adc
and
das
fsubp
jo
or
scas
outs
rcr
jnp
dec
cdq
xor
jmp
push
sbb
cmp
push
es
ds
out
aas
cwde
inc
repz
cmp
push
outs
test
loopne
cmp
sar
pop
mul
xchg
pop
rcl
lods
mov
loop
mov
jmp
nop
pop
jle
leave
movs
jb
js
mov
nop
mov
or
hlt
pop
stos
repnz
ins
mov
inc
jb
not
popa
dec
sbb
retf
mov
add
mov
dec
inc
mov
mov
ds
pop
loope
call
and
push
enter
pop
mov
ja
lds
jnp
rcl
pop
pop
cmp
or
inc
adc
sbb
mov
gs
pop
std
dec
(bad)
loop
cmp
call
mov
jno
mov
mov
nop
cmps
in
mov
dec
idiv
sub
call
jecxz
popa
fcmovne
jmp
popa
imul
add
mov
add
mov
call
adc
mov
into
in
mov
mov
adc
inc
xchg
mov
(bad)
(bad)
pop
xchg
test
lods
add
adc
and
test
cmps
and
pop
cmp
not
loop
push
adc
dec
mov
test
cmps
inc
cmp
inc
sti
popf
aad
ficomp
sub
lods
xor
add
sbb
mov
mov
int3
adc
aas
cmp
mov
xchg
rcr
int
cmc
(bad)
sbb
fbld
jmp
jle
jne
xchg
dec
cmp
inc
adc
pop
adc
mov
cmc
clc
stos
sub
dec
mov
fiadd
fcom
cld
xchg
inc
call
dec
(bad)
retf
mov
std
push
not
test
leave
imul
outs
fnsave
xchg
xchg
loope
mov
push
xor
pop
pop
inc
in
or
(bad)
fdivr
mov
adc
jno
pop
retf
repz
and
(bad)
add
(bad)
add
sub
fdivrp
mov
sbb
sub
call
push
shl
pop
jae
imul
loop
stos
sbb
mov
fimul
mov
inc
frstor
adc
mov
adc
adc
push
cmps
push
mov
xor
add
push
mov
and
or
cmp
xor
icebp
pop
sub
add
ret
jmp
pop
sub
jns
fist
(bad)
dec
cmp
push
cmove
sbb
inc
dec
scas
cs
and
out
or
pop
dec
enter
xchg
or
fild
arpl
in
std
mov
mov
xchg
or
sub
fld
dec
or
xor
shl
mov
mov
xchg
add
cmp
mov
lds
fwait
or
ins
lahf
jo
pop
push
push
in
scas
adc
push
mov
imul
inc
lea
mov
loope
les
sbb
xor
xor
loop
outs
push
or
int
dec
inc
test
mov
jne
add
cmc
push
pushf
cmp
sbb
xor
push
cmp
push
sub
pop
sub
pop
xchg
fisubr
bound
cmp
dec
call
js
dec
mov
rcl
not
into
mov
fcomip
mov
nop
stc
push
sbb
mov
not
cli
loope
pop
test
jns
push
popf
enter
jne
jbe
movs
lock
and
ins
pop
cmp
out
lea
sbb
test
xchg
jne
out
icebp
mov
xor
js
mov
mov
pop
or
inc
test
xchg
mov
push
imul
sbb
or
push
fadd
or
add
mov
fwait
cwde
pop
add
mov
sub
(bad)
pop
pop
clc
pop
push
popa
mov
repnz
enter
cmp
popf
add
jp
imul
cmp
xchg
push
sbb
pop
add
repz
mov
mov
inc
mov
xor
cmp
sahf
std
jne
mov
call
xor
in
adc
jecxz
paddw
dec
gs
add
ja
sub
xchg
dec
inc
fld
ret
shl
inc
stc
inc
and
push
gs
push
xchg
and
and
es
pop
in
jp
sti
lock
icebp
cmc
fsubr
xor
xchg
or
pusha
xor
bound
enter
and
inc
adc
stos
fdivr
movs
or
iret
mov
mov
mov
addr16
stos
scas
adc
std
(bad)
(bad)
xor
mov
out
fwait
hlt
dec
out
pop
xlat
lahf
stos
xor
sub
xor
push
jo
sub
inc
les
and
xor
xchg
ja
enter
int3
lahf
mov
push
sbb
pop
adc
fisub
fisubr
xor
xor
iret
aad
jno
add
jmp
add
fnsave
or
jb
xor
add
sbb
arpl
mov
in
out
rcr
sub
pop
adc
fadd
cmp
test
inc
pushf
inc
jmp
sub
add
jg
outs
mov
xchg
mov
icebp
cmp
sahf
int3
sbb
dec
inc
mov
pop
mov
lods
lahf
jnp
push
inc
push
push
cmp
or
jne
jp
lods
mov
xor
push
xchg
loope
push
dec
xor
mov
mov
jge
jno
jecxz
inc
adc
stos
(bad)
mov
or
cli
mov
jmp
fwait
sbb
jns
jmp
(bad)
out
fs
in
xchg
shl
sbb
in
add
jge
xor
xchg
jbe
adc
mov
bound
xchg
push
pop
xchg
jge
repz
pop
and
div
outs
xlat
aaa
mov
shl
adc
and
push
clc
hlt
mov
mov
add
add
fs
mov
cmc
and
sbb
icebp
dec
cmp
jl
mov
retf
loop
retf
inc
ror
inc
pushf
xchg
and
bound
icebp
cld
sub
xchg
int
pop
mov
jecxz
add
dec
push
mov
push
or
push
shl
cmp
inc
mov
and
xor
stos
cli
mov
sbb
mov
jle
and
push
mov
add
es
and
aad
jns
push
pop
ds
ret
mov
mov
cld
pop
inc
cmp
fidivr
idiv
sub
fstp
imul
(bad)
push
fwait
xchg
xor
inc
pop
xchg
mov
mov
pop
clc
je
aaa
loopne
jae
test
in
xor
mov
jo
mov
cdq
mov
or
icebp
clc
dec
inc
outs
cld
push
cmp
sbb
xor
cs
xchg
push
dec
out
dec
and
hlt
(bad)
sub
pop
cmps
js
mov
mov
fimul
xlat
pushf
push
ja
sbb
mov
imul
add
daa
xchg
into
cmps
(bad)
jge
icebp
ins
mov
fadd
sbb
loope
or
(bad)
fs
jg
xlat
gs
test
pop
test
imul
movs
cmps
add
jge
add
cmc
xchg
and
cld
sub
and
pop
dec
jle
push
sar
fld
hlt
jne
cli
pop
lahf
lds
loop
sub
out
mov
xchg
cmovae
sbb
inc
int
adc
test
dec
cmp
add
(bad)
std
push
jecxz
retf
cmp
xor
cmp
mov
push
mov
cmps
push
xor
inc
adc
imul
rcl
pop
push
mov
mov
aaa
dec
and
mov
ss
(bad)
call
mov
dec
jg
scas
xor
es
push
je
stos
jle
adc
mov
ss
jge
push
sbb
ins
es
and
pop
ja
xor
imul
mov
xlat
sti
stc
jb
out
lock
ins
pop
dec
jmp
cmp
bswap
and
mov
test
out
dec
push
movs
add
sbb
and
dec
and
add
add
rol
pop
pop
mov
xchg
inc
push
xchg
sahf
push
stc
out
xor
push
(bad)
in
pop
cdq
std
in
loop
push
inc
push
shl
xor
mov
idiv
popa
rol
pusha
sub
or
mov
dec
push
callw
icebp
inc
std
dec
or
mov
jne
test
xchg
inc
dec
ss
je
jecxz
mov
jne
pop
add
outs
pop
lea
in
out
xor
mov
sub
sub
push
in
inc
cmp
and
jmp
call
lock
add
jnp
sti
xchg
cli
mov
sub
add
cmp
shl
scas
jo
arpl
sub
enter
adc
lods
add
xor
mov
loopne
xchg
es
adc
pop
adc
pop
ret
sbb
ins
stos
out
scas
fbstp
sbb
mov
jmp
or
xchg
out
cmp
aad
loop
jno
in
(bad)
sub
jno
mov
cmp
call
cpuid
and
add
sub
mov
and
add
mov
push
sbb
push
das
mov
jl
dec
cdq
or
clc
sbb
ds
add
mov
or
fsubr
les
jle
and
push
cmp
(bad)
add
inc
push
mov
push
mov
push
adc
int
jmp
pop
das
add
and
or
push
ins
mov
jno
stos
gs
fst
fidiv
retf
ret
repz
call
cmp
mov
in
movs
add
adc
mov
pop
arpl
arpl
fnstenv
adc
mov
add
out
scas
sub
lods
pop
ret
pusha
cmc
pop
(bad)
fisubr
cmp
repnz
ins
dec
stc
jmp
inc
inc
mov
add
sbb
sub
jns
sti
adc
enter
test
adc
dec
mov
scas
push
ja
pop
scas
mov
mov
mov
push
push
sbb
pop
cli
adc
pop
inc
inc
(bad)
adc
nop
lds
cmp
fdivp
mov
shl
cmp
cmps
xchg
dec
scas
sbb
imul
mov
push
add
fcomp
xchg
outs
daa
mov
or
das
mov
jno
aam
jge
cmp
push
ror
cmp
(bad)
hlt
fisub
sub
jmp
cmps
sahf
mov
mov
movs
lods
sbb
mov
or
mov
dec
gs
dec
rcl
(bad)
sub
and
sar
xor
mov
push
fstp
outs
pop
adc
sub
xchg
mov
pop
cmp
jbe
sub
in
das
mov
fldenv
add
adc
cmp
or
add
xor
loop
pop
bound
push
sub
cmps
out
les
mov
aam
push
fbstp
dec
mov
ret
hlt
loopne
and
or
(bad)
int3
and
pop
cmc
mov
outs
adc
fsubrp
mov
test
mov
cmp
pop
mov
mov
dec
fld
and
add
cdq
pop
sub
push
mov
mov
mov
movs
pop
std
and
dec
ja
repz
xor
pushw
adc
mov
dec
sbb
sbb
xor
inc
pop
mov
dec
in
data16
mov
push
dec
repz
fadd
ins
cli
addr16
cdq
adc
cdq
movs
xor
mov
mov
jne
dec
imul
mov
xor
aaa
cmp
gs
xchg
sbb
or
cmp
xor
push
jne
loop
mov
inc
out
cs
mov
add
xchg
scas
add
dec
and
stos
xchg
int
fadd
or
sbb
push
dec
(bad)
dec
jge
pop
xchg
outs
jmp
sbb
sbb
jecxz
imul
or
into
and
cs
dec
out
pop
jmp
or
sbb
ficomp
pop
or
jb
movs
loopne
ret
xchg
shl
push
mov
and
mov
jmp
(bad)
ror
adc
retf
clc
xchg
pusha
neg
push
jl
and
call
enter
mov
mov
stc
add
clc
pop
pop
jecxz
stos
loopne
jp
repz
popf
outs
test
ret
arpl
push
xchg
sub
test
push
sub
jnp
and
and
fidiv
push
xchg
loop
aaa
outs
pop
sub
(bad)
mov
das
idiv
addr16
cmp
mov
xor
call
popf
in
mov
call
jg
fistp
inc
adc
cmp
je
xchg
daa
scas
add
mov
inc
clc
pop
xlat
add
xor
and
cmp
or
rol
and
jno
ret
dec
pop
ficom
cmp
pop
mov
mov
xor
jno
mov
and
test
mov
mov
sbb
sub
les
out
mov
fstp
mov
jmp
movs
mov
push
xor
retf
idiv
std
mov
mov
or
mov
sub
mov
outs
push
mov
push
mulps
ins
ss
push
outs
lock
sub
mov
fiadd
push
jns
in
mov
gs
rcl
xchg
pop
retf
ror
stos
out
loop
pusha
es
pop
cdq
clc
xor
mov
dec
xchg
mov
mov
or
dec
push
(bad)
pop
out
sub
xor
add
std
mov
rcl
pop
sub
(bad)
or
enter
mov
xchg
push
fsubr
dec
addr16
rol
mov
pop
retf
ja
dec
data16
mov
neg
inc
or
add
jp
and
repz
jg
outs
sti
mov
fsubp
jns
movs
xor
pop
mov
push
adc
arpl
ja
or
lahf
inc
add
jg
mov
clc
nop
add
inc
inc
cmps
or
mov
or
and
pop
retf
mov
pop
pop
mov
sub
push
or
mov
repz
and
ins
mov
out
and
je
inc
das
mov
pusha
fwait
xchg
push
xchg
stc
jae
fnstcw
fnstsw
and
lahf
lea
mov
add
nop
xor
dec
push
in
cmp
cmps
xor
cmp
dec
push
or
inc
fistp
mov
jle
xor
or
push
sub
jl
adc
cmp
call
add
ins
push
pop
sub
mov
out
stos
in
out
xor
movs
push
inc
aaa
sbb
push
fisttp
inc
pop
mov
imul
inc
sbb
ret
in
mov
popf
iret
pop
cmp
sbb
add
sub
or
nop
aas
mov
cmc
fwait
pop
and
xchg
xchg
adc
loope
ficomp
pusha
push
cmp
mov
cmp
ss
imul
or
call
repz
into
ins
and
or
mov
gs
mov
fsub
je
inc
sbb
repnz
mov
daa
hlt
pop
or
jmp
stc
add
cmc
ffreep
sti
call
imul
jo
sub
adc
add
push
outs
pushf
std
xchg
jmp
xor
xchg
out
mov
and
cmp
push
sbb
popf
mov
call
jnp
out
xchg
in
stc
sub
loop
les
ins
mov
std
xor
push
ja
shl
jmp
mov
and
xchg
pop
sahf
cmp
pop
cmc
ror
sbb
xchg
push
jne
cs
in
push
cmps
cmp
jo
sar
pop
xor
test
mov
sub
iret
sub
jecxz
stc
aas
daa
mov
imul
arpl
clc
test
stos
into
fmul
cmps
dec
xchg
pop
add
xor
mov
xor
(bad)
adc
rcl
arpl
ins
rol
push
sub
xor
imul
xchg
(bad)
pushf
fs
and
arpl
out
inc
sub
pusha
(bad)
je
scas
es
push
xchg
adc
and
shl
sbb
cmp
pop
test
push
add
add
mov
xor
stos
cmp
fst
aam
and
push
adc
loop
ss
mov
pop
jns
shl
repz
fidiv
or
das
out
or
jle
fild
imul
mov
test
(bad)
stc
mov
ret
or
stos
xchg
pop
push
fdiv
adc
retf
dec
mov
mov
aad
fsubr
adc
movs
sub
add
and
dec
int3
pop
rcl
xor
mov
sbb
gs
je
call
xchg
mov
mov
(bad)
jbe
ja
dec
ror
mov
lea
test
cmp
xchg
icebp
(bad)
call
test
jno
nop
enter
ret
call
call
cmp
jle
cs
popa
inc
ror
popa
fidiv
mov
cmp
mov
mov
(bad)
int
mov
jae
sti
sbb
and
adc
sbb
sbb
(bad)
cmp
out
xor
enter
jb
shl
mov
outs
sbb
pop
fs
outs
hlt
xor
out
xor
loopne
rcr
mov
(bad)
ret
lods
sbb
int3
repnz
jnp
fnstenv
loope
out
adc
add
jmp
add
xchg
out
(bad)
bound
cmp
test
inc
int
xchg
cmp
push
or
fdivr
adc
test
xor
das
movs
or
inc
pop
mov
cmp
push
add
mov
lock
js
add
data16
cmp
retf
bound
mov
adc
pusha
aad
clc
out
test
mov
test
cli
cmp
inc
fld
mov
cmp
cli
sub
test
mov
int
xchg
push
jecxz
sar
clc
shl
pop
xchg
ins
push
pop
ja
and
adc
cld
(bad)
bound
out
or
xor
pop
pop
xchg
(bad)
mov
stos
rol
jns
inc
add
mov
cmc
xchg
mov
pop
out
dec
aaa
mov
sub
xor
movs
stc
jl
ds
xchg
dec
movs
inc
dec
pop
cli
dec
in
test
mov
sub
push
scas
add
adc
out
loopne
hlt
lods
sub
bound
add
xchg
dec
mov
call
pop
mov
sub
mov
popa
add
and
mov
test
pop
and
daa
xor
(bad)
clc
cli
mov
(bad)
cmp
outs
movs
adc
adc
je
or
push
xchg
mov
fidivr
cmp
test
add
stos
jl
(bad)
aam
imul
xchg
dec
fild
cmc
(bad)
or
xchg
dec
imul
fsub
fimul
(bad)
fst
lods
push
pusha
rcl
test
ja
mov
sbb
ffreep
scas
mov
test
sub
mov
mov
xor
mov
mov
int3
data16
dec
xor
push
or
and
je
sar
loope
and
sub
jmp
cmps
movs
and
push
mov
js
mov
and
loop
imul
mov
fsub
sub
mov
les
das
sub
popf
popa
cmp
sti
and
fist
aam
jns
fdivr
adc
xor
add
or
nop
ret
sbb
fdiv
pop
in
out
inc
rcl
call
mov
fnstsw
xor
sti
pop
or
cmp
cld
sub
sub
js
jge
icebp
jne
xchg
or
xchg
jcxz
out
adc
cmp
sub
pop
std
mov
popf
mov
out
call
pop
ret
hlt
iret
int3
jmp
cmps
movs
add
sub
xor
and
into
ret
sub
stos
je
jp
jae
fdivr
sbb
cmp
mov
adc
jle
retf
mov
inc
retf
cmp
jmp
jae
(bad)
jno
mov
xchg
pushf
scas
mov
int
cwde
fabs
mov
cmp
sbb
fild
sub
pop
fld
pop
pop
ss
fld
sti
xor
aam
ja
cmp
mov
jne
pop
dec
(bad)
leave
and
out
stos
sar
lods
loope
cmc
add
cmc
and
sbb
add
and
push
bound
(bad)
mov
popa
xchg
ficom
sub
std
ds
push
jl
mov
fldcw
imul
mov
jbe
adc
sbb
mov
dec
(bad)
out
xchg
jg
dec
or
outs
mov
(bad)
mov
mov
push
arpl
xor
lahf
int3
sub
int3
jmp
inc
fs
rcr
ins
int3
mov
sbb
xchg
fwait
mov
sub
inc
nop
(bad)
push
emms
loopne
cmps
cmp
in
fst
cmp
repz
in
adc
in
push
add
mov
inc
sbb
and
push
bnd
fsubr
jg
dec
push
ja
imul
(bad)
or
jo
lods
mov
je
(bad)
scas
shl
or
loop
jne
inc
sbb
push
mov
aad
add
ret
fnstcw
call
loopne
mov
aas
jmp
push
clc
pop
inc
or
jmp
push
lods
xchg
sub
pop
sub
imul
cmp
or
sbb
iret
and
nop
sub
cdq
sbb
and
cld
aaa
sub
pop
out
xchg
jns
lock
hlt
into
sbb
lods
adc
retw
sub
inc
adc
je
push
sbb
mov
mov
loope
add
lods
mov
dec
div
mov
adc
outs
mov
outs
lahf
cwde
mov
lods
cmps
mul
ret
cmp
mov
imul
mov
fistp
add
mov
jmp
mov
outs
sbb
mov
ret
xchg
lea
dec
push
sub
fadd
and
daa
mov
sub
xchg
(bad)
push
pop
xchg
loopne
ror
sub
dec
in
mov
adc
lods
cwde
pop
cmps
jno
lahf
fs
push
push
dec
push
into
and
aam
inc
or
mov
pop
cmp
iret
jo
xchg
daa
cmp
popf
add
dec
popf
mov
xor
and
or
daa
lods
shl
(bad)
fistp
cs
adc
out
pop
or
mov
adc
cmp
inc
pop
sub
pusha
push
mov
test
daa
xchg
add
mov
cmps
and
ins
sub
popf
mov
bound
mov
shl
in
enter
jns
jmp
ror
or
mov
pop
mov
lea
in
jmp
push
jp
lea
addr16
aaa
push
pinsrw
jmp
(bad)
inc
xchg
cdq
fistp
lods
jno
xor
dec
cmp
addr16
test
pop
ja
pop
push
xchg
fistp
ds
mov
add
jg
(bad)
pop
mov
sbb
add
das
xchg
dec
push
test
mov
nop
sahf
aad
ins
jmp
stos
xchg
arpl
mov
mov
mov
out
retf
cmp
ins
icebp
popf
mov
xor
fnstsw
jl
xor
jmp
dec
loopne
je
jmp
pop
int
mov
bound
add
call
enter
pop
pop
call
arpl
xor
repnz
jns
mov
mov
cmp
outs
xchg
or
add
sub
scas
xchg
jecxz
inc
xchg
fimul
push
fldcw
mov
ror
add
and
push
sbb
mov
push
push
mov
and
ins
xchg
outs
push
test
(bad)
cdq
push
mov
sub
out
push
fist
mov
xchg
retf
loop
(bad)
jns
ffree
push
into
mov
jecxz
xchg
pusha
lahf
inc
sbb
aas
cs
add
shl
fld
rcr
frstor
cwde
pusha
aam
cmc
push
mov
or
xor
test
pop
push
nop
mov
mov
sub
dec
mov
or
xchg
ret
(bad)
retf
pop
and
push
fidivr
mov
les
and
adc
push
adc
pushf
fdiv
mov
(bad)
fist
mov
jmp
into
add
shl
(bad)
mov
cli
dec
in
or
jno
cmp
stc
inc
cs
jo
pop
add
repz
or
test
jno
add
mov
test
pop
pop
outs
cmp
dec
pop
mov
(bad)
fiadd
mov
and
fisubr
lock
add
movs
scas
cmp
mov
pusha
loope
dec
add
xchg
ror
arpl
dec
jmp
cmps
shl
xor
pop
inc
stos
sbb
xor
mov
(bad)
test
sbb
sbb
jbe
jecxz
adc
xor
shl
cmp
pushf
scas
psllq
cmp
and
lahf
xchg
aad
xchg
(bad)
and
push
jge
imul
popf
adc
gs
nop
dec
aaa
adc
test
push
sar
mov
ja
mov
out
mov
enter
cmps
xor
pop
xchg
movs
lahf
nop
or
xor
dec
ret
xor
fdivr
cwde
mov
cmc
ins
mov
jbe
ja
mov
cmp
or
(bad)
adc
sar
mov
std
cmp
fld
mov
cmp
std
iret
mov
rcr
mov
pop
iret
cwde
add
arpl
dec
cdq
fild
mov
push
jmp
xchg
push
aaa
mov
xchg
icebp
dec
inc
repz
and
dec
push
jae
inc
jp
lods
lea
in
imul
jge
xchg
dec
iret
sub
test
jmp
cwde
or
inc
pop
(bad)
(bad)
jbe
add
loopne
int
sbb
mov
cmp
mov
into
aaa
inc
adc
xor
pop
fiadd
popf
cmc
jb
ja
mov
clc
mov
push
stos
lock
mov
dec
pop
xchg
xor
cmp
push
jno
shr
adc
and
xchg
inc
pop
(bad)
aam
or
mov
fs
mov
jbe
cmc
mov
cmp
movs
mov
xor
xchg
adc
jg
neg
ret
retf
sub
sbb
and
and
xor
cmp
jno
inc
adc
pop
jmp
fdiv
push
fnsave
mov
retf
dec
mov
mov
loopne
xor
mov
imul
xor
add
mov
sbb
std
stos
jl
xchg
xor
loop
scas
mov
mov
jae
mov
retf
jmp
sti
pop
fidivr
sub
ss
loope
test
cld
mov
fs
dec
arpl
inc
adc
sub
xchg
adc
cmp
jge
mov
mov
inc
mov
popa
inc
retf
sub
and
sbb
mov
pop
xchg
sbb
loopne
dec
jmp
js
and
xor
ins
mov
sbb
dec
js
dec
stc
dec
jmp
xchg
(bad)
int
adc
popf
je
sbb
xchg
inc
mov
test
add
add
adc
lea
jne
fnstenv
(bad)
push
mov
jae
outs
or
xchg
mov
and
loop
clc
sbb
jne
mov
adc
sbb
or
pop
inc
sbb
idiv
jl
js
add
scas
inc
leave
push
or
mov
pop
outs
cmc
mov
cwde
or
scas
jnp
(bad)
xor
repnz
jecxz
aam
fst
and
jne
(bad)
pop
cmps
pop
add
dec
(bad)
adc
pop
in
cmp
xchg
pop
out
fcmovne
or
mov
cmps
icebp
inc
sbb
dec
jbe
sbb
jb
pop
fistp
ins
mov
adc
retf
jecxz
inc
sub
mov
lock
sub
rcl
scas
pop
gs
shl
mov
and
ss
daa
cmp
std
mov
icebp
arpl
push
jae
jbe
mov
pop
out
repnz
movs
fcom
push
mov
mov
cli
(bad)
frstor
int
adc
pop
or
push
lahf
jl
pop
mov
cwde
jno
cwde
lea
push
retf
jge
data16
sbb
jne
stc
fs
es
sbb
and
mov
and
sbb
lods
or
div
fimul
pop
arpl
jmp
jmp
and
or
sti
add
cmp
outs
push
xchg
dec
mov
ss
ds
lods
pop
addr16
push
xor
mov
jmp
sub
call
push
cmc
imul
in
sub
int3
jl
(bad)
pop
out
jmp
jns
mov
xchg
pop
dec
mov
cwde
push
retf
(bad)
adc
and
ret
aad
cwde
mov
lock
sub
jecxz
sub
push
dec
adc
aas
or
xor
mov
in
lods
cmps
mov
rcr
add
sbb
push
pushf
aas
stos
push
les
fmul
or
xchg
arpl
push
(bad)
cmc
dec
push
pop
inc
lods
xchg
or
or
stc
inc
lods
rcr
fldcw
shr
or
inc
sar
add
test
jmp
fimul
lds
inc
sub
in
jns
and
adc
popa
das
jp
cmc
sbb
cld
add
cmp
ret
pusha
sub
pop
pushf
jmp
test
add
mov
std
mov
sbb
mov
and
clc
sbb
sti
stos
std
xchg
and
xor
ins
retf
xor
xor
fs
cmps
loope
stos
or
or
xchg
dec
xor
sub
mov
adc
jmp
sub
add
push
mov
lahf
les
dec
dec
mov
movs
fdiv
pop
stc
shl
xor
ss
mov
jg
mov
cmc
sub
leave
pop
xor
cmp
jmp
mov
out
pop
pop
mov
add
fild
xchg
in
sahf
jbe
mov
sub
push
push
bound
bound
add
cmp
or
and
or
mov
and
cmps
or
aaa
fist
mov
call
or
sbb
in
sbb
xor
iret
mov
push
sub
fdivr
xchg
lock
data16
and
xchg
cli
or
out
in
push
loop
mov
jge
lea
or
add
mov
rcr
movs
int3
cmp
sbb
jae
loope
push
inc
adc
mov
(bad)
pop
outs
jns
jmp
test
sub
test
setle
mov
xchg
gs
cmps
jnp
test
and
push
popf
scas
jge
mov
mov
scas
mov
out
fwait
jns
mov
lods
aas
adc
or
and
or
add
and
pop
lea
scas
popf
ja
dec
and
lock
jl
jbe
add
push
sahf
cmp
or
dec
push
scas
mov
jae
cmp
or
js
mov
jno
loope
mov
pop
retf
(bad)
(bad)
mov
push
inc
and
pop
adc
or
xchg
pop
rcr
stos
out
sub
inc
nop
rol
mov
sub
jnp
lods
and
mov
loop
mov
xchg
dec
cmp
mov
cmp
dec
push
movs
xor
icebp
sbb
ss
pushf
les
jne
add
cmp
mov
push
pop
lods
fstp
fidivr
xor
daa
jecxz
dec
xchg
and
xchg
push
push
add
push
pop
mov
sbb
mov
dec
mov
pop
push
pop
out
addr16
div
xor
enter
mov
(bad)
jmp
push
fdivrp
jne
fcmovnu
cld
push
aad
sbb
mov
xor
dec
lods
aaa
cmp
push
or
jmp
dec
pop
retf
inc
(bad)
lock
mov
inc
jmp
bound
imul
nop
mov
sbb
ret
out
cli
adc
ja
sub
aaa
retf
xchg
loope
push
imul
push
push
jmp
mov
ja
dec
pop
mov
mov
and
dec
fwait
imul
xchg
loop
in
inc
pushf
push
jae
pop
xchg
pop
xor
and
mov
int
cdq
mov
add
aam
sar
ins
dec
dec
test
cmp
add
les
adc
mov
(bad)
(bad)
sbb
xchg
(bad)
pop
sbb
imul
pushf
and
adc
fnstenv
call
sub
cmp
xchg
mov
nop
sbb
cs
push
xlat
imul
mov
mov
sbb
pop
cmp
xchg
push
adc
adc
push
sub
push
out
je
mov
jae
pop
cmc
and
lahf
xchg
or
mov
pop
rcl
outs
dec
in
shl
rcr
add
mov
mov
xor
cmp
dec
std
pusha
and
ja
push
out
or
or
jl
das
pushf
jle
xchg
jmp
arpl
sahf
test
push
jae
pop
pop
aad
sbb
jle
jo
xor
push
out
lods
xchg
adc
ja
mov
xchg
ins
and
div
arpl
in
leave
xchg
sbb
add
mov
add
jbe
adc
int3
adc
cmc
push
sbb
into
push
mov
mov
and
or
sti
dec
cwde
(bad)
neg
ins
pop
test
lods
inc
inc
das
xchg
in
div
popa
push
in
shl
aas
push
retf
xchg
mov
add
dec
jg
dec
ret
sub
aam
inc
mul
inc
xor
mov
popa
aad
pop
cmc
shr
jae
add
adc
cs
sub
push
cmp
push
cmp
ret
mov
into
push
push
aas
and
leave
retf
fcom
fcomip
div
inc
push
bound
mov
push
jno
cmp
ds
pop
shl
jmp
inc
mov
mov
or
in
sub
pusha
fbstp
mov
retf
lods
loopne
mov
xchg
jne
fld
lea
mov
pop
gs
fstp
sub
mov
dec
pop
in
pop
and
aad
inc
cmp
cmps
pop
rep
push
pushw
jbe
mov
mov
jno
mov
adc
push
push
je
xchg
cmps
je
adc
comiss
push
inc
arpl
icebp
out
add
cmp
fsubr
add
cld
xchg
push
loope
(bad)
cld
xchg
mov
loope
outs
sub
aam
or
sbb
std
add
sbb
xchg
dec
add
(bad)
and
dec
jmp
icebp
(bad)
dec
adc
jmp
enter
movs
cmp
cmp
das
sub
mov
call
stos
cli
cs
fnstenv
push
popa
add
(bad)
jmp
fidivr
dec
jno
dec
fld
jno
and
xchg
and
scas
pop
rol
fisttp
pop
add
or
pop
pop
outs
(bad)
fld
into
jns
add
jns
cmc
lidtd
inc
mov
dec
add
nop
xchg
nop
dec
ror
xchg
xchg
in
enter
mov
dec
repnz
sub
aad
or
mov
sub
xor
xlat
jb
mov
call
jae
das
push
fisubr
mov
ins
call
dec
lods
call
(bad)
ficom
in
test
dec
psubd
adc
cmp
int3
push
push
shl
push
dec
pop
retf
mov
cmp
add
jns
cmp
test
mov
lods
or
sti
aaa
mov
in
xchg
jecxz
ja
rcr
sub
push
retf
ss
mov
sbb
les
out
leave
je
jmp
scas
push
movs
xor
push
movs
jns
mov
xor
jns
xchg
sbb
mov
iret
xchg
xor
ins
fsub
mov
repz
sti
jmp
dec
loope
mov
inc
clc
loopne
test
popf
idiv
repz
inc
push
adc
mov
push
adc
gs
dec
xchg
das
fdiv
call
sub
arpl
(bad)
jge
or
pushf
push
sbb
mov
xor
push
xor
jmp
loopne
or
movs
jnp
(bad)
cmc
push
mov
pusha
inc
adc
loope
add
mov
pop
mov
call
aas
jo
(bad)
pop
sbb
fdiv
js
enter
ja
mov
inc
repz
and
mov
xchg
xchg
popa
mov
pop
cmp
or
inc
iret
push
and
lea
jmp
out
inc
and
les
sbb
jns
ins
push
outs
popf
les
mov
adc
mov
add
add
mov
test
inc
pop
pop
int3
(bad)
lods
pop
scas
pop
aas
adc
xchg
dec
pop
mov
call
xchg
test
adc
xchg
xor
and
std
sub
rol
not
xchg
cmc
xchg
dec
add
or
fist
out
sbb
cdq
das
adc
fiadd
pusha
cmp
fild
push
xchg
cmps
sahf
lods
cmps
jnp
stc
fcomp
popf
add
xchg
add
movs
cmp
js
pop
popf
ds
mov
ret
inc
stos
inc
icebp
retf
inc
in
cs
jns
sbb
inc
dec
cmp
xchg
popa
out
les
adc
out
pop
jp
add
mov
(bad)
mov
xor
ss
movs
push
mov
fisttp
iret
imul
cmovbe
adc
cmp
nop
jl
add
pop
pop
xchg
repz
repz
pop
push
rcr
jmp
xchg
in
icebp
and
inc
push
inc
mov
add
in
cmp
icebp
xchg
movs
adc
dec
and
jne
cmp
jbe
mov
mov
sbb
out
ins
nop
lock
mov
push
inc
mov
into
daa
pop
leave
adc
sub
pop
dec
inc
js
out
adc
add
out
test
push
fisttp
dec
add
scas
cmp
mov
nop
xor
icebp
mov
mov
out
or
int3
dec
(bad)
imul
cmps
jg
adc
enter
push
mov
pop
push
and
(bad)
out
xchg
gs
(bad)
jmp
test
(bad)
sbb
or
or
nop
movs
mov
or
stc
and
cmps
inc
bswap
or
sbb
(bad)
out
push
jo
push
lods
jno
inc
mov
scas
sub
in
mov
or
mov
xor
cmp
xchg
lods
cmp
add
movs
ror
push
pop
mov
shl
add
mov
mov
push
cmp
inc
inc
ja
xchg
mov
cmp
outs
lahf
fmul
jno
cmp
imul
(bad)
dec
out
xchg
ret
stos
movs
push
scas
sub
fs
imul
mov
xchg
(bad)
pop
mov
ss
js
adc
push
sbb
lds
call
outs
sub
mov
lods
int
sbb
int3
dec
popf
sbb
inc
jmp
gs
jbe
xchg
pop
push
push
xor
xchg
pop
outs
adc
sar
and
cmp
xchg
movs
fcomp
or
push
scas
jnp
cs
ror
xchg
inc
cwde
mov
dec
push
cmc
(bad)
and
sbb
popf
or
xchg
push
mov
sbb
mov
cli
mov
aas
pop
fnstsw
jo
push
idiv
fdivrp
repnz
outs
add
jnp
scas
sahf
hlt
(bad)
pusha
sub
fcomp
xchg
push
push
inc
dec
or
sbb
xor
mov
sub
icebp
aad
mov
mov
aad
sub
mov
(bad)
pop
mov
es
lock
mov
out
mov
cwde
aad
and
in
xor
cmp
jl
inc
xchg
aaa
imul
icebp
repz
xor
or
int
fwait
popa
test
stc
imul
adc
and
dec
rcr
xchg
adc
mov
cmc
(bad)
cli
mov
jle
fcomp
xchg
mov
cmp
nop
popa
push
es
mov
les
push
sbb
fstp
jmp
mov
mov
or
add
int3
gs
lods
clc
cld
cdq
or
inc
cmp
push
retf
dec
add
mov
div
cmp
cli
les
(bad)
adc
data16
dec
xchg
sub
inc
test
cmc
pop
push
jnp
jecxz
push
mov
icebp
sbb
in
jp
sbb
cmp
in
add
push
and
mov
repz
mov
and
add
sub
or
mov
test
add
or
jecxz
std
xor
rcl
cmps
les
pop
dec
into
out
int3
sub
ja
mov
pop
mov
test
js
in
rcr
int3
(bad)
fiadd
dec
sub
mov
push
mov
(bad)
adc
out
mov
ret
xchg
pop
loope
dec
sub
scas
dec
pop
imul
or
test
call
xor
sub
xor
push
ffreep
mov
adc
sbb
jle
sub
cdq
mov
add
ins
adc
sti
inc
lock
inc
and
jne
je
jecxz
or
cmp
dec
and
adc
mov
xor
lds
fdivr
repz
sub
add
xchg
retf
and
fadd
std
rcl
or
in
rol
push
add
lods
stos
dec
xchg
mov
pop
or
(bad)
int
sbb
sub
retf
adc
pop
ror
inc
aaa
dec
sub
loop
cmp
test
mov
push
iret
outs
push
sbb
aam
frstor
dec
sub
push
addr16
or
cmp
lea
fistp
push
bound
test
dec
(bad)
bound
dec
push
out
scas
mov
sbb
sub
xchg
lods
inc
dec
es
jbe
cli
cs
fwait
jns
xchg
mov
jmp
loopne
cmp
cmc
repnz
in
jbe
cmp
dec
dec
enter
mov
(bad)
dec
xlat
js
push
stos
out
push
and
inc
lds
add
gs
lods
jo
xchg
xchg
inc
(bad)
jp
inc
mov
mov
mov
inc
test
sbb
(bad)
jg
loop
popa
push
mov
out
jo
dec
jmp
sbb
mov
ret
mov
adc
adc
adc
mov
cmovbe
mov
pop
mul
pop
dec
mov
out
jle
in
cmp
push
loope
ins
cmp
dec
pop
aad
loopne
push
push
adc
sbb
or
not
stos
push
inc
mov
mov
cmp
mov
sbb
loop
mov
fbstp
imul
inc
xchg
and
rcr
js
adc
sub
les
popf
jmp
jmp
pop
ja
cmps
addr16
rcr
leave
cld
clc
push
xchg
bound
test
adc
loop
jmp
jg
pop
ror
or
hlt
add
mov
les
xor
adc
jne
dec
sbb
sub
xchg
retf
jg
daa
mov
push
push
adc
retf
mov
les
sbb
mov
stos
fs
loopne
dec
add
jge
pop
or
sbb
add
cli
aas
lds
sub
imul
test
adc
push
retf
sbb
nop
and
pmulhw
push
pop
test
mov
cmp
inc
hlt
in
xchg
(bad)
sub
out
mov
in
rcr
jl
into
add
je
jl
xor
xchg
add
sub
ins
mov
fstp
das
dec
mov
scas
cmc
ds
fistp
push
nop
leave
cmp
(bad)
repz
out
xor
mov
sbb
rol
aaa
cdq
inc
push
pop
aam
and
(bad)
pop
arpl
add
bnd
pop
outs
mov
cmp
push
fs
push
pop
and
cmp
jb
call
push
cmp
adc
sub
mov
outs
cmp
push
xor
loop
add
sub
fimul
mov
cli
cmc
jle
repnz
sub
out
call
lods
sbb
push
xchg
push
cmp
or
dec
jge
and
xor
jo
mov
xchg
xchg
out
pop
xchg
adc
popf
xor
adc
shr
(bad)
pushf
(bad)
loop
inc
pop
adc
xor
jp
and
adc
dec
mov
ds
pop
and
push
adc
pop
dec
aas
inc
out
retf
push
jno
xor
push
push
sbb
dec
and
int3
jnp
sub
mov
(bad)
sbb
lahf
push
mov
sub
push
inc
xor
sbb
mov
test
pop
cwde
mov
dec
adc
jg
pusha
pop
dec
test
repnz
add
sbb
push
shr
iret
ret
cmp
pop
sub
mov
int3
(bad)
inc
gs
pop
in
fisubr
fwait
add
(bad)
sub
retf
repz
mov
jp
aad
mov
lea
mov
inc
(bad)
pop
mov
sub
add
aaa
cmp
mov
mov
jp
push
cmps
test
loop
retf
call
adc
bound
xchg
pop
fimul
push
push
in
pop
sub
and
mov
out
rcr
mov
(bad)
out
into
xlat
push
into
dec
sbb
iret
cmp
pop
test
dec
mov
aad
mov
and
and
ror
lods
adc
out
stos
xchg
mov
push
(bad)
(bad)
or
push
push
movs
jns
popf
add
stos
mov
stos
mov
pop
movs
xchg
sub
cs
cmps
lahf
cmp
sbb
aam
fldenv
imul
push
xor
mov
(bad)
push
jb
mov
pop
(bad)
or
in
lock
dec
or
inc
gs
mov
or
pop
daa
xchg
push
clc
xchg
(bad)
outs
mov
push
hlt
mov
mov
jae
fsub
ds
add
sahf
lods
stos
jbe
pop
je
adc
repnz
scas
inc
cmp
ins
call
(bad)
(bad)
icebp
push
inc
loopne
push
lds
sbb
sahf
xor
clc
cmp
call
outs
inc
in
dec
sbb
shr
xchg
dec
dec
fidivr
shl
jno
call
or
dec
mov
in
fstp
(bad)
adc
push
mov
xchg
js
loope
push
jmp
cmps
pop
pop
js
sub
add
adc
mov
mov
mov
jnp
call
push
rcr
sub
jbe
push
shl
mov
(bad)
jmp
fmul
cmc
push
xor
mov
or
dec
retf
fcom
mov
pop
fs
mov
jg
fst
daa
xor
mov
es
xor
mov
lods
pusha
xor
sahf
xor
dec
mov
vpmuludq
push
jns
retf
sbb
cli
jnp
mov
cdq
out
cmp
xchg
clc
push
cdq
outs
add
call
loop
cli
inc
rol
sbb
mov
mov
loopne
inc
ds
mov
lds
mov
ror
pop
dec
pop
mov
mov
movs
ret
push
das
pop
xchg
int
jb
and
adc
fild
adc
retf
jo
fimul
sbb
outs
f2xm1
les
pop
push
or
js
xchg
or
(bad)
les
or
cmp
mov
dec
add
imul
push
inc
sbb
leave
inc
sbb
push
adc
outs
xchg
cdq
int
adc
js
sti
test
sub
push
mov
cli
inc
pop
imul
dec
mov
add
stos
out
retf
stc
mov
or
fsub
mov
push
je
xor
ja
call
pop
xchg
sbb
dec
call
sub
xchg
ficom
shl
mov
and
retf
and
jp
push
repnz
pop
enter
mov
dec
enter
in
mov
sub
inc
test
les
pop
imul
jl
rcl
(bad)
cld
mov
repz
hlt
inc
loopne
in
xor
adc
sub
sbb
inc
test
sub
nop
mov
or
into
xchg
pop
stc
arpl
jl
mov
aas
pop
pop
ins
pusha
xchg
fld
aaa
gs
push
rol
fwait
dec
or
adc
pusha
mov
xchg
mov
call
shr
inc
cmc
xchg
rcr
sub
mov
test
push
das
inc
ja
sahf
or
cmps
rcr
jbe
in
cwde
pop
jmp
xchg
push
popf
xchg
sti
jnp
inc
mov
xchg
fnsave
xchg
std
cmc
pop
push
cmps
cmc
xor
mov
rcl
adc
xor
mov
inc
push
je
mov
ins
adc
xchg
ds
shr
mov
cdq
les
in
mov
jno
jne
dec
xchg
out
dec
cs
add
es
imul
push
stos
loopne
lock
sub
mov
jge
cli
xchg
outs
mov
push
mov
add
push
inc
xchg
stc
sub
data16
jmp
aad
fsub
retf
add
fwait
js
inc
adc
dec
mov
jle
xor
push
dec
cmp
pushf
cmps
mov
mov
push
lods
pusha
adc
dec
(bad)
sub
test
shl
dec
test
mov
mov
pop
(bad)
sti
enter
cli
cmp
xchg
cmps
or
xchg
and
add
in
adc
add
sub
and
aaa
sbb
lsl
mov
in
and
push
call
push
mov
sahf
cmp
xor
cs
imul
cmc
cmc
je
and
pop
or
dec
ficom
test
xchg
dec
shl
test
dec
movs
mov
jo
cmps
adc
and
xchg
xor
loopne
repnz
fnsave
lea
rol
adc
cmp
push
and
scas
std
pop
sbb
xor
pop
stc
(bad)
mov
push
adc
imul
mov
cmp
arpl
fdiv
repnz
adc
xchg
in
dec
or
dec
call
cmc
add
mov
mov
iret
sub
out
sub
or
fwait
int
or
test
stos
out
sbb
jmp
cmp
enter
enter
bound
aaa
stos
std
scas
and
adc
retf
mov
arpl
xlat
js
mov
pushf
push
sub
fmulp
jae
int
or
sub
lds
lea
xor
dec
out
fnstcw
les
scas
pushf
sub
fsubp
xchg
(bad)
pop
int
inc
cmp
and
adc
pop
mov
jl
outs
pushf
sub
jg
inc
lock
jae
sbb
or
xchg
int3
sbb
test
mov
sbb
lds
mov
movs
dec
mov
dec
inc
or
iret
into
inc
mov
clc
test
mov
pop
mov
sub
mov
xchg
(bad)
mov
lock
ror
adc
mov
xchg
movs
icebp
psubusb
pop
jb
xor
pop
xor
loop
adc
ror
sbb
movs
(bad)
stos
retf
xchg
inc
pushf
repz
push
mov
and
or
movs
push
cmps
xchg
idiv
jmp
lea
pop
xchg
cwde
cdq
mov
jmp
inc
mov
sbb
mov
lds
jne
test
shl
push
cli
mov
mov
outs
stos
push
pop
repnz
pop
mov
in
mov
adc
adc
cmp
aam
cs
mov
or
inc
cwde
or
pop
loopne
sbb
jp
sbb
dec
jge
imul
out
add
shr
inc
mov
ja
ss
adc
pushw
or
stc
bsr
or
das
pop
mov
(bad)
sbb
jecxz
daa
in
pop
push
int3
std
mov
retf
jne
inc
jle
ds
sbb
shld
es
cmp
pop
add
or
lods
jecxz
gs
dec
rcl
mov
xor
push
mov
mov
push
mov
in
stos
jl
in
push
xchg
jne
push
movnti
lods
or
ds
xor
movs
xchg
jmp
and
or
lahf
fidivr
lds
rol
xchg
into
inc
and
movs
pop
add
cmp
fild
ret
xchg
cs
rcr
in
lds
pop
adc
enter
sbb
lahf
add
push
gs
stos
and
rcl
fst
cmp
test
ja
ficom
jnp
mov
ret
mov
out
je
inc
mov
sar
xor
(bad)
rcr
stos
retf
fwait
stos
dec
(bad)
int3
cmp
test
rcr
sbb
dec
push
rol
pop
(bad)
mov
push
xlat
mov
out
push
mov
arpl
pop
daa
shl
dec
inc
scas
ins
clc
cld
imul
cmp
xchg
xlat
nop
add
pop
ds
xchg
or
pop
imul
shl
inc
lods
jb
jp
push
in
pop
mov
test
int
test
xor
call
jno
mov
dec
sub
inc
outs
lock
(bad)
mov
aad
cmp
stos
rol
shl
mov
test
mov
shr
jmp
les
jae
push
rol
(bad)
sub
jl
jns
je
adc
fist
jmp
je
inc
mov
test
aam
(bad)
fnstcw
out
(bad)
sbb
pop
sbb
mov
shr
mov
call
add
mov
mov
rol
adc
retf
imul
sbb
jmp
repz
dec
out
mov
mov
add
inc
sbb
cmp
lods
fcom
push
mov
mov
ret
outs
fisttp
je
dec
xor
mov
xor
fiadd
into
and
mov
test
mov
and
out
push
repz
or
and
imul
in
pusha
fsub
mov
and
add
dec
push
aaa
jbe
dec
xchg
in
scas
xor
mov
loope
mov
mov
das
ficomp
cmps
xchg
inc
mov
leave
sahf
push
ficomp
mov
and
stc
stos
mov
in
mov
sbb
hlt
mov
pusha
les
add
int3
ja
add
clc
pop
jne
mov
nop
lods
fld
jns
pop
xchg
(bad)
xchg
inc
add
xchg
mov
sbb
lahf
adc
movs
jg
jno
add
cs
adc
mov
sub
and
movs
cld
xchg
daa
push
xchg
cmpxchg8b
(bad)
retf
in
repnz
add
test
xor
je
test
outs
mov
shr
lahf
add
bound
lock
imul
jae
mov
xchg
xor
loopne
in
xchg
add
pop
mov
mov
push
mov
addr16
sbb
xchg
iret
jge
inc
or
es
xchg
scas
mov
std
dec
xor
clc
mov
pushf
pop
inc
fs
pop
(bad)
inc
das
cwde
jno
jle
std
jle
mov
cdq
pop
mov
leave
frstor
(bad)
adc
cmp
adc
cwde
dec
or
mov
out
inc
loopne
loopne
dec
movs
jnp
jg
int3
(bad)
and
inc
or
adc
xchg
call
jbe
jge
mov
mov
sub
mov
cld
sar
enter
ret
adc
ret
std
movs
sbb
cli
popa
jp
popf
call
outs
test
cld
xchg
push
or
sbb
in
inc
in
dec
sti
std
pushf
adc
jbe
push
fisub
rcr
or
push
cwde
fisub
test
mov
aas
or
dec
xchg
inc
cmc
sahf
xor
and
aam
loope
sub
je
(bad)
push
test
xor
aad
or
popf
mov
rcl
adc
call
mov
fstp
xchg
sub
loop
retf
aam
jae
sub
test
pusha
xlat
ja
or
rcl
adc
scas
mov
dec
sahf
adc
fnstenv
adc
mov
xchg
xor
fdiv
cmps
movs
add
cmp
push
setge
shld
mov
outs
sbb
jp
sbb
xor
arpl
sbb
outs
mov
mov
repnz
outs
sti
adc
icebp
out
in
call
sub
sahf
xlat
sub
jle
jns
rcr
or
cwde
push
jmp
lahf
push
les
push
clc
cmovns
sub
dec
and
gs
lea
call
aam
cmp
test
arpl
fs
mov
mov
jno
ror
js
inc
fbld
(bad)
mov
mov
mov
loope
sub
ret
fadd
addr16
cmps
sbb
sub
jo
repz
push
sar
sub
sbb
and
arpl
popa
push
jae
or
es
mov
or
imul
cs
fs
jae
cmp
(bad)
dec
loop
adc
mov
xor
rcr
lahf
push
movs
(bad)
hlt
jns
pusha
adc
or
xchg
cs
mov
in
pop
pop
shr
jg
xor
or
push
call
cmps
sahf
(bad)
sub
out
(bad)
push
inc
push
ror
in
vpunpckldq
adc
rcr
mov
dec
add
and
sbb
shr
mov
add
xchg
adc
popa
dec
int
enter
adc
mov
sbb
clc
add
dec
push
push
xor
jbe
in
cmp
or
mov
mov
xchg
push
xor
and
les
out
xlat
les
dec
lahf
push
test
add
cwde
cmp
fistp
js
sbb
add
mov
outs
mov
std
pop
sub
shl
aad
in
das
fcomp
add
ror
nop
ret
dec
test
data16
fcom
mov
fimul
inc
stc
mov
out
mov
arpl
adc
sbb
clc
aas
shl
adc
sub
lea
sbb
inc
lahf
sbb
sub
dec
xchg
push
add
in
ds
fcomp
mov
dec
jmp
and
push
mov
int
mov
daa
retf
xchg
add
(bad)
xchg
sbb
out
fwait
jg
adc
mov
stc
inc
lea
sub
push
cmp
stc
imul
dec
jmp
shl
xlat
int3
ret
push
call
inc
dec
bound
test
imul
add
cmp
sbb
jnp
sub
cmp
ja
jmp
jmp
mov
sti
out
xor
inc
pop
and
cld
ss
call
jnp
cmp
mov
fsub
jp
sub
jmp
neg
aam
ficom
das
push
adc
movs
mov
add
shl
pop
and
fcomi
out
nop
outs
xlat
(bad)
push
(bad)
jmp
data16
pushf
mov
or
jno
fisub
ret
push
imul
(bad)
add
and
jge
cdq
(bad)
in
sbb
inc
xchg
push
sbb
mov
pusha
(bad)
jns
jecxz
unpckhps
rcr
aaa
fistp
mov
lahf
into
pop
subps
(bad)
(bad)
out
das
or
das
das
imul
das
adc
pop
call
and
(bad)
mov
mov
ja
adc
je
add
repnz
push
sbb
push
sub
shl
mov
pop
aaa
inc
adc
popa
jle
int
sbb
inc
dec
lahf
(bad)
(bad)
adc
aad
pop
xchg
les
push
sbb
pop
daa
xchg
cs
mov
push
sub
mov
or
cmp
push
(bad)
out
stos
ror
enter
jp
xor
sub
and
jl
xchg
mov
cmp
adc
pop
loop
loope
cld
pop
jno
push
push
stos
repnz
rol
jge
xchg
fidiv
xor
mov
adc
jle
hlt
xor
mov
xchg
xor
fdivr
js
rol
pushf
mov
not
pop
scas
imul
jno
push
dec
xchg
loopne
mov
popf
inc
arpl
loop
retf
add
jmp
aas
and
fstp
jns
aaa
pushf
cmp
adc
test
pushf
push
xchg
stos
daa
mov
cmc
cli
pop
sbb
aaa
and
cs
(bad)
cs
out
dec
test
int3
mov
sub
push
ins
cld
test
not
sti
out
rcr
sahf
pop
inc
cmp
inc
ror
outs
inc
or
mov
inc
aas
cmp
imul
xchg
push
hlt
cli
add
push
retf
mov
fsubr
push
xchg
push
scas
inc
cmp
dec
mov
jle
adc
xchg
mov
shl
mov
dec
mov
xchg
cli
push
das
or
cdq
or
mov
sub
enter
ins
pop
mov
daa
xor
mov
xchg
sub
scas
jge
gs
mov
leave
add
(bad)
mov
sub
sub
xchg
push
data16
out
sub
dec
sbb
xor
mov
cmp
jb
(bad)
(bad)
mov
jno
lea
cmp
inc
cmp
sub
xchg
adc
mov
push
dec
loop
sbb
sbb
pop
aad
out
ins
inc
icebp
hlt
mov
pop
add
push
xor
pop
lds
jle
mov
push
pusha
movzx
mov
or
ret
loop
adc
int
frstor
int3
mov
outs
fisttp
mov
mov
mov
js
mov
test
outs
mov
pop
sbb
mov
shl
ret
mov
out
les
add
push
mov
inc
and
inc
rcl
sub
pop
or
fistp
adc
fld
xchg
xchg
mov
cmps
inc
inc
sahf
mov
loopne
jp
xchg
push
inc
push
mov
add
ins
or
cmps
cmc
leave
pop
into
out
add
mov
adc
push
fadd
adc
sub
scas
or
test
mov
aas
in
ret
out
jmp
xchg
push
mov
mov
pop
repnz
push
mov
push
pop
dec
cdq
mov
(bad)
push
dec
mov
mov
sbb
push
arpl
movs
mov
xchg
mov
jg
lds
mov
or
or
outs
jg
cmp
xchg
imul
xchg
in
fidiv
or
push
fisub
clc
std
outs
push
popf
ja
inc
and
mov
xchg
mov
cli
shr
push
mov
lods
dec
push
add
xor
outs
fwait
inc
in
cs
les
sar
pop
and
imul
dec
xchg
xor
(bad)
retf
int
gs
mov
clc
sub
sahf
loopne
lds
xor
sbb
out
clc
pop
jb
retf
cmp
mov
mov
pushf
add
(bad)
cmp
loop
(bad)
jbe
push
shr
dec
and
push
dec
lods
les
or
cmp
push
imul
inc
mov
lods
jb
inc
xor
popf
idiv
fsub
nop
aas
inc
cmp
cmp
mov
addr16
cmc
inc
or
add
dec
mov
push
adc
and
inc
push
jo
loopne
adc
mov
cmp
adc
call
(bad)
test
and
xchg
stos
(bad)
bound
int3
stos
and
xchg
jnp
fidivr
call
ins
inc
sbb
stos
add
xchg
ins
inc
imul
lods
hlt
or
mov
sub
push
ret
mov
sti
test
cmp
in
cmps
lock
mov
pop
daa
adc
ret
jmp
popa
add
push
fldenv
pop
aam
jnp
neg
call
cmp
rcl
jns
pop
ret
lods
pop
movs
fxch
addr16
dec
adc
adc
dec
test
mov
xchg
(bad)
sbb
(bad)
mov
mov
es
adc
dec
fist
cmp
mov
call
xor
sub
jno
push
mul
enter
fst
or
adc
mov
cs
xchg
out
push
add
xor
fs
and
adc
fimul
aas
dec
aad
sahf
cdq
mov
add
or
push
push
repnz
and
cmc
shl
add
fdivr
sbb
jae
jae
loope
lock
inc
int
lock
xchg
push
sets
retf
xor
rol
jmp
cmps
mov
hlt
test
add
stc
(bad)
pop
test
adc
cs
ins
shl
mov
dec
fnstcw
or
popf
jecxz
jmp
cwde
push
mov
and
jge
cmc
xchg
or
iret
xlat
dec
(bad)
scas
cdq
pop
and
mov
(bad)
out
daa
ret
push
fwait
xchg
hlt
jmp
outs
leave
jge
xor
xchg
mov
mov
inc
call
and
mov
sub
inc
enter
mov
ins
and
mov
cld
adc
or
lds
xor
dec
xchg
push
inc
bnd
xchg
ins
retf
jo
jp
iret
mov
jmp
pmullw
bound
mov
(bad)
mov
arpl
jecxz
pusha
jmp
js
dec
mov
dec
in
daa
dec
push
in
or
pop
cmps
or
(bad)
mov
ds
(bad)
pop
sub
cld
shl
sahf
scas
add
nop
add
les
aaa
lahf
inc
adc
inc
test
dec
jmp
data16
pop
test
push
jmp
js
test
imul
shr
mov
cdq
mov
mov
aad
mov
out
enter
icebp
xchg
jmp
adc
push
test
sub
(bad)
shr
sub
adc
xchg
movs
int
ja
lods
add
outs
mov
pop
add
pop
jns
jns
pop
mov
jmp
popf
or
sti
and
cmp
fidivr
sub
addr16
es
aas
stos
or
imul
pusha
dec
movs
sbb
xchg
lods
ins
stos
mov
lahf
pop
aaa
sahf
mov
(bad)
bnd
aad
dec
ss
inc
aam
int
sbb
or
retf
ja
out
mov
in
das
cwde
sub
das
jmp
fstp
stos
out
push
cld
jbe
(bad)
pop
mov
test
aas
or
adc
sub
clc
jp
test
out
pop
xchg
mov
cmp
or
movs
dec
cld
rcl
dec
aam
add
mov
adc
movs
sbb
mov
push
sub
imul
hlt
add
in
sub
icebp
mov
xchg
adc
sbb
cdq
lock
add
pop
rcr
and
addr16
(bad)
out
jo
jmp
xchg
cmp
fild
mov
inc
pop
jo
lods
aaa
popf
(bad)
push
mov
movs
xor
xor
repnz
sub
test
aas
adc
fsubr
or
and
jnp
and
ds
sub
shl
call
sbb
arpl
push
ret
les
daa
lods
loope
cwde
or
into
or
adc
add
enter
addr16
pop
or
fxch
sahf
imul
gs
fdivr
sub
loopne
inc
out
fadd
mov
push
pusha
push
mov
mov
clc
mov
test
enter
inc
call
arpl
(bad)
mov
and
call
jmp
dec
repnz
xor
push
lds
cli
pop
push
repnz
pop
sbb
shl
mov
arpl
mov
sahf
jge
sub
sbb
cmp
fcom
inc
pop
and
sbb
imul
cmp
pop
jb
rcl
xor
pop
ins
fdivr
dec
data16
and
push
adc
loope
sbb
sbb
mov
dec
sub
sub
inc
ins
xchg
xor
mov
sub
mov
cmp
pusha
xchg
add
adc
cld
xor
and
push
cmps
repz
xchg
xor
rcl
push
(bad)
mov
mov
push
pop
pop
add
and
clc
cli
ret
or
out
sbb
jp
dec
lea
sub
xor
aad
cmovnp
cmp
(bad)
ror
push
xor
mov
out
add
mov
jge
cmp
xchg
inc
jb
push
lea
test
lahf
push
cli
add
mov
mov
sbb
xchg
(bad)
stc
in
daa
gs
iret
mov
inc
mov
cdq
movs
inc
push
add
or
xor
shr
jp
frstor
jge
cli
imul
ret
jle
jne
mov
lds
out
xchg
in
fistp
mov
mov
mov
movs
mov
out
fist
inc
stos
xor
mov
into
(bad)
lock
jmp
out
jmp
test
and
pop
inc
stc
add
retf
pushf
movs
push
ins
dec
outs
in
hlt
cmp
bound
sbb
in
jnp
rol
push
popf
lock
or
pushf
loopne
and
add
std
enter
retf
cli
popf
xchg
xchg
jbe
push
mov
(bad)
out
popf
pop
push
mov
mov
pushf
push
shr
mov
out
ror
pop
and
lods
loopne
hlt
test
in
pushf
adc
and
out
mov
fsubrp
ins
xchg
mov
mov
and
fmul
fisttp
mov
loope
aam
dec
adc
out
ins
and
and
in
xchg
xchg
(bad)
cmp
inc
fcomp
xchg
mov
cs
fsub
lea
mov
arpl
push
xchg
or
sbb
push
jo
xchg
ret
sti
jo
push
add
in
cmps
(bad)
adc
and
cli
fsubr
movs
jmp
add
popa
fcomip
leave
(bad)
push
ficomp
xor
xchg
and
sti
cmp
pop
mov
push
lock
add
(bad)
xor
dec
rcr
mov
lea
pop
cmp
test
xchg
ds
xchg
xchg
jae
(bad)
scas
add
dec
ds
mov
push
mov
or
das
test
call
mov
mov
pop
lods
push
xchg
xchg
das
mov
(bad)
fcomp
sbb
push
add
ins
or
pop
sbb
scas
ins
(bad)
fstp
ins
ins
pop
xchg
mov
dec
sub
pop
or
ret
push
rcl
(bad)
xor
cld
sub
mov
std
ds
adc
adc
push
fs
in
(bad)
fnstcw
fnsave
gs
push
add
dec
sub
dec
add
lea
movs
ror
mov
test
test
sahf
cmps
mov
jae
retf
imul
pop
pop
ds
sub
add
sbb
mov
fsubr
jo
sub
call
sti
cmp
mov
repnz
or
mov
not
icebp
or
rol
out
xchg
dec
or
inc
dec
adc
fcmovnu
ss
sub
pop
pusha
xchg
add
pop
movs
out
stos
fistp
jmp
mov
push
push
mov
(bad)
repz
or
mov
or
stc
xor
adc
fstp
jns
push
enter
or
(bad)
cli
dec
out
ss
jle
scas
jp
movs
sbb
jecxz
mov
sti
xlat
repz
lea
adc
push
push
je
stc
iret
out
ins
and
(bad)
vpand
repz
or
mov
into
adc
pop
es
hlt
sbb
je
aaa
pop
mov
xchg
mov
xchg
stc
cld
xor
call
adc
fs
push
or
push
fstp
aad
mov
sbb
sti
(bad)
repz
xor
xchg
mov
retf
in
lods
icebp
xor
int
xchg
repz
xor
out
ret
das
cwde
mov
or
dec
in
repz
sub
cmp
add
mov
push
sbb
adc
mov
pop
mov
pop
mov
pop
adc
retf
aad
and
xor
jg
outs
sbb
sub
or
jno
movs
xor
push
cdq
push
jo
sub
sub
fimul
jae
pop
add
sbb
clc
idiv
sub
mov
cdq
sbb
out
std
push
xor
cmp
shl
dec
lock
adc
shl
popa
in
pop
or
lock
and
les
dec
push
jge
std
push
cwde
jg
mov
push
icebp
out
push
inc
dec
push
int
cwde
or
call
jne
jo
adc
and
fs
popa
shl
and
repz
or
out
push
adc
movs
jl
enter
push
mov
je
xchg
fst
pop
cmp
fldl2t
iret
stc
cmc
lds
xor
test
pop
ds
out
xchg
cdq
jg
jmp
gs
ret
fbstp
test
cwde
adc
and
push
and
inc
xchg
and
cmps
arpl
jmp
mov
push
test
jecxz
movs
cmps
inc
xor
je
pop
cld
retf
jmp
sbb
inc
mov
mov
mov
hlt
jg
je
cmps
xchg
clc
aam
mov
in
jb
fistp
lods
call
jno
jp
nop
repnz
mov
push
and
sahf
fwait
cmp
mov
xor
adc
jmp
cmc
xchg
mov
mov
jle
pop
test
inc
out
and
arpl
mul
xchg
cmps
frstor
aaa
out
push
xchg
lods
retf
aam
adc
cmps
mov
retf
and
aad
jmp
mov
or
sub
push
jb
lods
dec
or
inc
dec
in
adc
jge
sbb
mov
(bad)
fst
jno
rcr
(bad)
adc
xchg
js
xchg
xor
lods
fsubr
dec
fwait
sub
xor
call
repnz
frstor
je
dec
sbb
int
fiadd
es
and
retf
pop
push
adc
jmp
push
sbb
xor
ja
push
pop
xor
push
mov
push
das
pop
xchg
and
repz
mov
add
inc
(bad)
repnz
loope
mov
jmp
cmps
mov
and
dec
lock
inc
inc
pusha
pop
xchg
adc
(bad)
in
ins
mov
loope
stos
and
cmc
call
xor
movs
stc
stc
fwait
cmp
mov
xor
mov
loope
sbb
push
push
adc
imul
call
test
adc
cmovbe
cs
aam
ins
ins
sti
jle
(bad)
stc
mov
fistp
push
cmc
movs
push
jp
sub
(bad)
xlat
das
push
inc
mov
jecxz
sub
sbb
xchg
fild
or
fiadd
xchg
add
lahf
pop
mov
ret
lock
xchg
rol
in
mov
repz
jb
call
pop
mov
jne
jge
in
out
or
and
aad
pusha
adc
out
ins
cmps
retf
in
cmp
cs
mov
movs
sub
loope
push
outs
sbb
aad
push
sub
mov
ss
lds
fst
scas
f2xm1
and
in
add
jp
js
xchg
xchg
inc
clc
popf
or
inc
mov
repnz
ja
not
shr
xor
ror
mov
mov
dec
add
int3
xor
call
fcmovu
mov
sbb
push
jne
cmp
stos
sub
push
out
jl
test
fbstp
cmp
mov
arpl
mov
shl
pushf
data16
xchg
inc
ins
jp
mov
iret
fld
pushf
sub
mov
mov
cmp
inc
add
pop
call
idiv
mov
ror
push
retf
add
sbb
mov
add
int
cmc
jne
cmp
out
and
lods
movs
mov
cmc
cmps
mov
mov
add
sub
adc
out
jge
pop
scas
movs
xchg
fistp
enter
ret
inc
and
loope
ret
xor
shl
out
sub
out
loopne
pop
sbb
into
ins
sbb
js
cmps
gs
sbb
mov
shr
mov
fstp
inc
sbb
imul
jl
leave
push
dec
mov
repz
xor
sub
dec
and
cmp
and
inc
and
sar
xor
xor
imul
cmc
leave
aaa
sbb
jae
retf
or
pop
or
(bad)
bound
cmp
mov
outs
lahf
push
es
fstp
cmps
in
sub
jmp
(bad)
int
jl
jmp
jge
and
xchg
jg
push
stc
(bad)
test
cwde
inc
bsr
mov
push
test
sar
xchg
mov
pop
mov
push
dec
ins
dec
repnz
mov
jo
inc
jge
test
and
in
and
addr16
jmp
les
loop
(bad)
jmp
jl
clc
sub
in
test
pushf
pop
mov
lea
movs
cmp
arpl
mov
aad
or
ret
inc
nop
adc
aas
xchg
or
daa
xchg
mov
jnp
cmp
cmp
outs
mov
out
lea
je
mov
std
mov
scas
aad
add
cmc
sbb
and
jp
and
mov
xor
(bad)
adc
xor
dec
je
out
jae
aam
test
pop
jp
jne
stc
dec
sti
stc
scas
(bad)
(bad)
stos
cld
cmps
jg
test
bswap
out
int3
inc
cmp
fadd
mov
not
jnp
inc
adc
adc
(bad)
cld
sbb
test
mov
xchg
test
(bad)
iret
fcom
jo
and
mov
pusha
rol
test
sbb
pop
fdivr
cli
push
gs
in
mov
cmps
jns
(bad)
fcmovbe
cmps
imul
retf
enter
out
repnz
mov
sub
mov
stc
(bad)
outs
movs
lock
pop
and
mov
jl
ins
inc
rcr
xchg
jmp
ror
aaa
je
jo
into
daa
shl
std
sub
xchg
loopne
xchg
inc
mov
mov
daa
shl
inc
fstp
loopne
mov
pop
outs
pusha
dec
scas
mov
xchg
sub
scas
adc
les
ins
pop
cld
scas
or
pop
pushf
mov
shr
stc
sbb
mov
nop
add
iret
push
(bad)
fst
sub
mov
jne
inc
mov
int
add
push
in
imul
pop
stos
aaa
mov
outs
cmps
test
push
scas
leave
pusha
cld
jns
daa
mov
movs
int
fwait
clc
pop
mov
mov
inc
sar
scas
and
xor
dec
call
dec
sub
loope
xchg
xor
xchg
xor
in
mov
push
push
or
jg
int
add
jne
mov
cs
add
test
mov
sti
out
jle
in
int3
xlat
in
ror
jae
mov
arpl
pop
jo
sub
fwait
jno
push
cmps
pushf
add
sbb
adc
inc
mov
mov
jb
adc
mov
(bad)
popf
inc
gs
(bad)
mov
into
add
(bad)
in
pop
loop
(bad)
int3
jge
mov
jo
ss
mov
push
out
add
int
adc
mov
mov
mov
mov
xchg
fcom
pushf
lods
cmp
or
loopne
pop
cdq
icebp
jb
daa
loop
pop
fstp
(bad)
push
dec
je
daa
jns
retf
mov
dec
repnz
cmps
shl
je
pop
jns
pop
jge
mov
xchg
movs
mov
xchg
adc
add
sub
stos
repnz
popa
mov
mov
(bad)
xor
xor
ret
sahf
pusha
scas
pushf
xchg
sbb
lea
xchg
sbb
sbb
sahf
call
(bad)
ins
xor
inc
rcl
fisttp
jmp
push
pop
jp
and
mov
and
push
fwait
jge
sbb
stc
out
adc
adc
jne
imul
push
adc
mov
push
pop
aaa
or
jae
repnz
add
in
or
sub
in
bound
rcr
sbb
cmps
mov
xor
and
es
adc
lahf
push
jns
sub
push
xlat
stc
(bad)
jg
sbb
(bad)
repnz
push
xor
pop
sbb
pusha
test
jge
or
shl
(bad)
div
xor
pop
into
mov
xchg
push
inc
push
pop
push
add
inc
out
mov
fisttp
lock
cmp
mov
xor
sub
fild
pop
fsub
mov
adc
xor
adc
xchg
call
gs
and
aaa
dec
popf
add
test
rcl
mov
pop
mov
addr16
test
push
ss
sub
sbb
js
and
jne
sub
add
xchg
mov
or
and
test
inc
xchg
cmp
cld
lock
xchg
dec
pop
clc
adc
jns
adc
fidivr
scas
mov
pop
iret
sbb
stos
xchg
xor
(bad)
sub
ds
(bad)
int
icebp
hlt
or
repz
or
cmps
sub
and
out
push
cmp
xchg
push
sbb
cmp
repz
xchg
adc
out
cli
jecxz
test
mov
xor
jmp
dec
fisubr
cwde
or
push
cld
mov
bound
repnz
xor
imul
or
js
scas
mov
pop
retf
es
scas
outs
sbb
jmp
or
popa
out
jns
sbb
inc
ins
push
dec
push
in
stc
mov
and
cmps
enter
data16
into
loope
inc
jl
test
ret
xchg
out
lea
aas
lahf
imul
cmps
add
fimul
ja
mov
jne
pop
imul
iret
mov
xchg
data16
inc
mov
inc
into
mov
inc
or
and
sar
or
push
pop
int
enter
lock
test
shl
mov
sar
cmp
sti
cmp
nop
adc
cmp
xchg
mul
test
stos
out
clc
and
xor
push
dec
pop
jnp
add
cld
mov
retf
lds
and
or
mov
out
js
in
(bad)
call
sbb
jp
repnz
cmp
test
iret
lahf
pushf
add
mov
push
(bad)
sti
cdq
jno
add
fdivr
fmul
push
mov
arpl
pop
mov
cmc
mov
jb
shl
push
inc
inc
mov
bound
movs
sub
dec
dec
sbb
enter
push
in
ret
mov
sub
lds
ss
xchg
bound
inc
push
mov
mov
jg
imul
adc
jl
ret
sub
inc
xor
mov
in
add
dec
test
popa
jmp
mov
jle
jae
lea
sub
shl
cmc
pop
jge
rcr
lahf
mov
gs
cmps
fs
pop
cmp
mul
mov
xor
add
(bad)
jecxz
bound
dec
lods
ror
sbb
pop
xchg
cdq
mov
xchg
ins
sahf
lea
bound
aad
sbb
call
mov
add
cmc
push
adc
dec
int3
adc
or
push
nop
cdq
push
cdq
fild
or
pop
dec
pop
scas
dec
inc
cmp
and
sbb
scas
inc
add
loop
(bad)
jp
nop
scas
lods
push
pop
mov
fisttp
stos
push
inc
lahf
loopne
pop
inc
ror
push
imul
into
fimul
inc
cld
jecxz
pop
aam
or
pop
dec
data16
mov
repz
sbb
pop
jbe
out
outs
shl
fbstp
mov
icebp
nop
cs
mov
nop
xchg
ror
iret
call
ficomp
loop
out
(bad)
xor
fsubr
adc
fs
lods
push
pop
pop
xchg
ror
cmp
push
xchg
sti
(bad)
or
call
mov
stos
and
mov
out
sti
mov
add
dec
ret
jmp
mov
adc
je
sahf
adc
jno
sbb
sbb
fistp
leave
cmp
pop
lahf
jno
adc
loope
out
pop
mov
xor
jg
add
push
ins
loopne
nop
cld
add
aas
jg
inc
in
dec
repnz
fst
in
lods
push
push
or
sbb
cmp
sub
retf
(bad)
cli
jge
push
gs
cmp
inc
ins
sahf
push
xchg
xlat
aad
sub
ror
int
mov
sub
rcr
fdiv
sub
or
xlat
test
adc
or
dec
arpl
(bad)
(bad)
jno
sub
ins
or
cmp
je
ss
jnp
xlat
repz
lods
push
ja
cmp
pop
test
(bad)
mov
(bad)
dec
clc
mov
in
dec
push
xchg
aad
loopne
out
daa
lds
pop
pop
and
mov
cmp
jo
push
mov
dec
mov
aam
in
test
or
(bad)
aas
test
add
xchg
jmp
push
push
sub
cld
pushf
pcmpeqw
jmp
mov
or
ss
pop
or
sbb
push
imul
call
movs
retf
xor
adc
jbe
sub
push
in
dec
pop
frstor
out
jae
test
fs
out
cmp
out
xor
rcr
push
dec
jae
jle
push
retf
push
mov
stos
pushf
rcl
push
jecxz
imul
gs
repnz
aam
dec
movs
out
jno
mov
sbb
sahf
mov
mov
dec
cmp
adc
stc
add
add
outs
fld
ins
inc
mov
fwait
cmp
setnp
jle
pusha
xchg
dec
test
add
mov
mov
adc
call
add
je
mov
sar
xchg
std
in
xchg
test
enter
cmps
adc
dec
mov
inc
sub
jae
and
and
test
stos
sub
dec
das
pop
inc
ja
outs
jae
cmp
(bad)
arpl
iret
neg
sbb
lods
adc
shl
push
aaa
xchg
cmps
out
add
out
es
gs
xor
inc
into
adc
push
xor
or
pop
mov
std
mov
xchg
jp
fdivr
pop
push
pop
addr16
xchg
fwait
dec
into
pop
xor
mov
mov
xlat
pop
jp
sbb
fisubr
sbb
repz
mov
pop
cmp
gs
frstpm(287
inc
mov
mov
adc
mov
adc
icebp
(bad)
dec
pop
xor
jnp
and
std
shl
popa
imul
loope
cld
jae
call
pop
inc
test
rcl
fdiv
jmp
sbb
jmp
je
xor
addr16
xor
out
fidiv
shr
stc
cdq
cmp
cmp
arpl
call
or
bound
dec
mov
out
das
mov
jg
jae
sti
dec
hlt
jg
add
adc
sub
and
int
aam
and
pusha
iret
push
dec
fwait
xchg
adc
xor
cwde
jmp
inc
enter
sub
add
mov
add
xor
lock
or
movs
fisub
(bad)
pop
stc
sbb
cwde
jge
(bad)
ss
gs
in
jecxz
loopne
and
push
jnp
sahf
sub
adc
add
arpl
xchg
or
call
mov
je
rol
fimul
sbb
pop
shl
sbb
sar
loopne
les
mov
mov
xchg
cli
jecxz
xchg
es
or
push
push
cmp
out
(bad)
out
dec
cs
dec
jle
js
mov
jle
pop
xor
inc
or
test
call
sbb
adc
dec
or
lahf
(bad)
ror
sti
dec
dec
push
jg
and
inc
lock
or
fistp
sbb
dec
fs
sbb
bound
mov
push
mov
imul
bound
sar
push
jmp
inc
jbe
out
mov
mov
jp
xor
ficomp
pop
test
ror
pop
add
std
mov
sub
dec
enter
pushf
loopne
pop
(bad)
adc
xor
xchg
out
add
test
dec
aad
sbb
sub
xchg
into
push
in
cmp
or
pop
push
sub
mov
push
inc
sub
and
or
(bad)
lds
pop
fild
test
mov
scas
adc
dec
xor
fbld
inc
add
adc
xor
ins
(bad)
cmp
mov
aad
and
push
mov
jo
xchg
cmp
jge
inc
or
mov
add
inc
inc
xor
push
push
sbb
mov
dec
cld
jmp
sub
lods
out
and
test
movs
cmp
dec
mov
addr16
mov
je
mov
mov
cwde
pusha
sbb
rol
hlt
xor
inc
aaa
dec
sbb
stos
ret
push
cmps
pop
xchg
std
inc
jo
adc
dec
ror
nop
aas
test
cmp
(bad)
sbb
mov
push
daa
adc
push
mov
imul
xor
pop
lea
mov
push
dec
push
push
sar
inc
scas
scas
jmp
pop
mov
push
pop
loop
mov
push
xchg
sti
pop
sub
mov
arpl
adc
add
(bad)
int3
cwde
and
outs
pop
scas
jp
jp
mov
fdivr
int3
mov
push
sub
push
xchg
add
xor
hlt
xchg
lods
mov
pop
jo
jbe
lea
pop
and
dec
sbb
sub
add
leave
bound
adc
stos
test
jbe
aaa
add
mov
cwde
mov
test
aas
fwait
pop
daa
xor
xchg
cmp
int
mov
jb
xchg
into
pop
inc
mov
sub
mov
shl
pushf
inc
mov
cmc
es
lds
and
shl
ror
pop
outs
sub
outs
mov
test
xchg
test
shl
movs
push
dec
add
pop
sbb
je
xchg
sbb
or
lods
inc
fcomp
call
clc
xchg
push
mov
mov
cmp
push
mov
dec
test
ss
adc
(bad)
xor
sbb
push
aam
adc
enter
inc
or
pop
and
push
neg
jb
xor
dec
lahf
icebp
push
out
mov
ins
and
xchg
mov
arpl
popa
fmul
cmps
mov
xor
add
pop
inc
std
sar
pop
sbb
mov
xchg
sbb
inc
pop
dec
je
retf
cdq
ins
jmp
mov
inc
mov
jle
hlt
dec
cmp
jb
cwde
nop
rcr
test
dec
sbb
pop
sbb
adc
popaw
mov
xchg
jp
loop
adc
jo
push
mov
xlat
xchg
(bad)
cli
fbld
push
xchg
jecxz
dec
xchg
scas
jge
xlat
aaa
add
or
dec
lock
sub
mov
push
xchg
inc
sahf
mov
jbe
outs
(bad)
xor
(bad)
cwde
jbe
and
out
stc
xor
(bad)
pop
out
xchg
ret
xchg
test
cwde
xor
push
jno
mov
mov
pop
push
movs
jns
add
xchg
sti
arpl
out
sbb
xchg
cmps
push
mov
sub
jbe
fidivr
mov
repnz
jo
fistp
and
push
hlt
xchg
dec
popa
inc
mov
hlt
xchg
fistp
dec
leave
sar
aaa
pop
push
out
sub
cmc
inc
out
ret
addr16
stos
cld
rol
bound
(bad)
fsub
and
push
inc
bound
scas
movs
sbb
movs
call
push
add
xchg
xchg
inc
sbb
fld
pop
mov
popa
xchg
sbb
cmp
xor
cdq
out
xchg
push
fadd
add
jecxz
jge
int
lds
adc
cmp
fs
cmp
ins
and
into
call
jb
sti
mov
cmps
cmps
and
mov
xchg
(bad)
sub
sbb
push
in
xor
inc
xchg
jle
and
sbb
jbe
pop
aad
xchg
int
(bad)
xchg
dec
inc
test
aaa
mul
in
fsub
cdq
add
lods
add
sti
and
jg
dec
ins
clc
leave
loop
cdq
aam
ja
pop
inc
nop
fst
push
dec
adc
mov
xchg
lods
mov
mov
lds
pop
pushf
dec
sub
pop
push
mov
cmp
addr16
and
rol
jbe
sti
push
ins
fisub
bound
inc
out
mov
xlat
rcr
and
and
out
sub
cwde
mov
push
mov
(bad)
mov
xlat
mov
sub
rol
int
shr
loopne
mov
xchg
or
je
add
pop
jp
and
les
mov
in
xor
outs
fisttp
sbb
jmp
ret
mov
cmc
movs
dec
jbe
retf
fs
(bad)
ins
mov
jno
push
bound
adc
fwait
xchg
cmp
xor
call
movzx
stos
in
(bad)
mov
jecxz
mov
inc
adc
pop
cmp
addr16
pop
cld
(bad)
dec
pop
cmps
(bad)
jmp
xchg
or
mov
lock
fisttp
mov
das
sbb
xchg
mov
ror
mov
ins
test
mov
stc
js
pop
loopne
ret
pop
dec
clc
mov
pop
imul
call
cdq
jne
or
cmps
outs
scas
ret
stos
add
or
fist
push
hlt
shr
sbb
js
xor
xchg
mov
pushf
inc
mov
out
hlt
outs
xchg
xchg
lds
arpl
jg
dec
or
pop
xlat
dec
jmp
imul
mov
into
push
aad
jle
xchg
pop
and
sbb
and
das
nop
push
clc
pop
or
mov
mov
cmp
xchg
out
loop
mov
fisttp
scas
mov
add
pop
cmp
or
adc
popf
fisttp
outs
mov
cwde
(bad)
jnp
clc
adc
dec
mov
clc
mov
push
ja
sub
(bad)
fcomi
mov
jo
fbstp
les
pop
xor
pop
or
fcom
(bad)
cmps
jo
aaa
push
fninit
mov
mov
jmp
sub
cld
push
pop
add
push
cmp
cwde
and
sti
and
push
stos
xchg
lods
or
std
or
in
mov
rol
cs
mov
mov
add
ror
lahf
mov
pop
add
in
xchg
pop
pop
nop
and
lods
sahf
add
mov
push
mov
mov
sub
xor
lea
mov
aaa
sbb
imul
iret
sub
cmps
jbe
retf
dec
sub
inc
daa
add
repz
aad
sbb
(bad)
mov
aas
jp
cmps
ror
popw
in
xor
fdiv
mov
push
cwde
cmps
jmp
push
mov
or
into
jle
outs
mov
sbb
cmps
mov
inc
jmp
js
xchg
mov
clc
lods
sub
imul
sbb
or
add
fld
ret
jns
shl
movs
(bad)
shl
mov
loope
sahf
rcr
sar
push
xor
lock
out
je
mov
adc
dec
outs
mov
cli
mov
mov
xchg
mov
inc
sub
xor
pop
xor
mov
jge
sub
mov
jbe
xchg
jne
cdq
mov
mov
pop
sub
pusha
or
jne
adc
data16
hlt
fnstenv
test
ins
jmp
mov
xchg
ins
mov
xor
ins
jl
imul
pop
jnp
and
xchg
pop
cmp
repz
es
mov
or
inc
adc
out
sbb
mov
fstp
mov
popa
sahf
data16
sahf
(bad)
pop
jle
push
(bad)
data16
xchg
or
sbb
test
outs
push
rcr
icebp
inc
mov
std
ja
fstp
xchg
test
pushf
arpl
jp
mov
adc
sub
cmps
pop
cmp
in
ret
arpl
add
and
movs
scas
enter
sbb
mov
rcl
iret
paddusb
xor
sbb
popa
fcmovnbe
or
mov
jle
add
sar
fmul
or
pop
fwait
mov
aad
mov
pop
(bad)
jg
sub
push
jo
aam
ret
jbe
mov
(bad)
outs
sbb
jb
loope
aam
jbe
adc
sti
push
inc
xor
aaa
jae
cli
retf
jle
clc
and
sbb
mov
lock
mov
xor
sub
push
and
test
xchg
pop
and
pusha
rcl
fucomp
cmc
inc
dec
mov
mov
cmp
std
clc
push
mov
pushf
mov
mov
in
xchg
inc
push
and
mov
jb
push
ret
repnz
aaa
add
out
fs
jle
movs
stos
dec
xor
ret
lea
hlt
adc
es
mov
(bad)
and
xchg
mov
test
pop
stc
adc
bound
outs
mov
cwde
xor
in
neg
mov
xor
(bad)
pop
jnp
dec
inc
fld
xor
sti
(bad)
or
in
mov
inc
dec
mov
rcl
sbb
out
outs
outs
jl
add
jle
jbe
jo
fsub
push
lods
test
xchg
and
push
sub
aaa
pop
stos
jbe
sbb
ins
jmp
jb
(bad)
aaa
xchg
lock
loopne
enter
aad
in
pop
repnz
add
cmp
ret
dec
lds
ss
add
mov
xor
mov
les
loope
push
hlt
lahf
ret
inc
leave
push
les
xchg
nop
xor
mov
movs
xchg
leave
sub
imul
pop
xlat
int
pop
inc
lods
xor
ror
mov
and
jle
pusha
inc
loope
adc
mov
xchg
arpl
jno
mov
pop
into
sbb
xchg
jle
scas
xor
test
jae
cs
pusha
cmps
pop
sbb
movs
outs
into
and
push
rol
xchg
inc
in
fbstp
mov
push
fcomip
mov
fld
push
aas
(bad)
ins
int3
jbe
rol
cld
icebp
mov
in
pop
sbb
jbe
adc
loop
push
push
sbb
out
add
arpl
push
inc
mov
and
sub
pop
sub
fnstenv
adc
test
stos
inc
xchg
xchg
fwait
or
or
push
and
(bad)
out
lahf
and
test
mov
in
test
scas
outs
push
xchg
enter
popf
sub
outs
int3
sub
mov
push
jnp
xor
add
mov
jecxz
outs
test
or
lock
in
fs
push
outs
pop
outs
mov
fisub
repz
aas
xlat
dec
mov
pop
shl
and
ret
lock
and
mov
sbb
mov
cmp
jns
in
and
xchg
xor
adc
and
and
push
shl
rol
pop
mov
mov
xor
test
mov
push
push
fmul
inc
(bad)
xchg
imul
sub
mov
cmp
fcmove
push
cmc
or
ds
cli
push
(bad)
and
arpl
enter
cmp
pop
ror
mov
or
add
ss
aad
lds
dec
stc
iret
scas
fdiv
fld
mov
(bad)
in
push
fld
shl
jbe
loope
cli
mov
jmp
pop
rep
xor
xlat
cmps
cmp
jmp
fwait
pop
out
mov
mov
into
loop
jp
popa
ins
pop
aas
pop
loopne
push
jb
ja
addr16
inc
test
or
fs
push
xchg
jae
jmp
xchg
push
xor
cmp
xlat
addr16
sub
out
pop
sub
xor
adc
xor
or
popaw
jmp
daa
std
sar
test
jmp
cdq
adc
dec
movs
outs
ror
pop
shl
aaa
add
xchg
mov
add
ins
(bad)
sub
pop
mov
stos
mov
xchg
mov
push
(bad)
repz
or
add
xlat
movs
aad
lock
int
sbb
daa
lods
mov
sbb
leave
jmp
jae
and
and
sbb
or
xor
or
dec
aam
mov
dec
push
ret
mov
and
cmp
or
adc
pushf
jl
not
pop
dec
xchg
xchg
jle
add
retf
ret
es
jns
mov
mov
mov
xchg
mov
pop
sub
(bad)
push
sbb
add
push
iret
push
jo
mov
or
xbegin
push
dec
test
nop
pushw
(bad)
aam
jecxz
in
adc
cmc
lock
out
xchg
fs
mov
adc
(bad)
stc
int
jle
bound
mov
cmps
cmp
jo
aam
stos
xlat
xor
mov
fwait
pushf
xchg
inc
cmp
jo
ins
or
jo
cmp
movs
sbb
shl
cdq
mov
push
into
jbe
push
sar
pop
data16
stos
adc
jno
sbb
outs
ss
sub
jmp
sub
dec
test
sbb
push
or
out
push
jno
pushf
sub
and
arpl
and
gs
sub
sbb
mov
add
xor
inc
dec
test
(bad)
jo
mov
std
push
out
test
ins
dec
les
jae
mov
add
pop
and
jl
and
dec
adc
adc
test
test
fadd
lods
cmc
and
cmp
sbb
xchg
xchg
movs
mov
xchg
stos
mov
push
aaa
int
es
jecxz
ss
pushf
jno
aas
dec
dec
fs
rcl
repz
enter
xor
jno
pop
push
inc
xor
mov
inc
or
or
jp
inc
sbb
addr16
xchg
out
mov
mov
or
jle
pop
mov
pop
xor
inc
push
and
jbe
pushf
adc
ins
mov
and
mov
xor
pop
rcl
aad
cld
in
mov
xchg
ins
add
or
in
leave
cmp
mov
xchg
stos
leave
mov
ja
addr16
push
mov
and
sub
xor
shl
inc
mov
and
xchg
inc
push
mul
and
xchg
scas
mov
dec
jno
dec
in
hlt
inc
aam
movs
jle
push
(bad)
fnstcw
jle
mov
fs
fcom
pop
jmp
jne
add
stos
es
adc
push
sub
fwait
add
(bad)
stc
pop
push
adc
mov
inc
or
fwait
retf
or
inc
in
lds
and
pop
leave
cmp
hlt
retf
pop
loop
idiv
pop
and
pusha
sub
and
sti
jmp
sbb
xchg
push
jnp
pop
adc
(bad)
dec
movs
test
lods
or
mov
pushf
xchg
mov
adc
pop
test
and
loop
push
jle
pop
push
and
pop
lahf
pop
(bad)
cld
(bad)
adc
inc
lods
jbe
dec
push
dec
xchg
sar
push
ds
into
pop
or
mov
into
rol
cmc
pop
sbb
push
repz
xchg
mov
mov
jmp
movs
add
gs
cmp
xchg
in
in
dec
outs
mov
and
pop
cmps
test
mov
pop
adc
outs
jg
gs
in
push
jp
push
je
or
adc
stc
jns
daa
xchg
out
push
cwde
mov
loopne
es
and
retf
mov
inc
sbb
fstp
xchg
test
jae
pusha
pop
or
not
pop
into
or
int
mov
pop
aam
push
and
or
jmp
rcl
sbb
xor
enter
mov
push
pop
arpl
inc
or
dec
or
jmp
(bad)
add
xchg
mov
pop
jl
and
fist
mov
mov
or
fistp
mov
imul
xchg
sub
adc
or
xchg
and
inc
outs
loop
sbb
mov
cmp
sbb
jmp
adc
fwait
jbe
or
retf
jbe
mov
jg
rol
add
mov
fstp
mov
mov
lock
xor
(bad)
(bad)
sub
mov
xchg
cmp
int
fs
ret
lds
iret
retf
cmps
sbb
mov
push
cmp
cmp
movs
add
push
in
xor
sub
movs
xor
outs
lods
int3
xsha256
cmps
shl
add
data16
cli
mov
push
jg
cmp
stos
add
push
inc
ret
outs
pop
aad
mov
mov
js
xchg
add
retf
xlat
cmc
mov
inc
leave
mov
aam
fs
aad
imul
inc
fdivp
push
fsubp
xor
jmp
dec
outs
leave
loopne
mov
lahf
pop
outs
xchg
in
enter
es
push
lea
or
dec
mov
(bad)
fidivr
arpl
fdivr
ja
xor
lahf
push
repz
dec
stc
xor
fst
cmp
nop
test
std
sbb
(bad)
loop
mov
mul
pusha
xchg
xchg
push
mov
lds
jg
inc
sar
jbe
call
fwait
stc
rol
ds
test
in
push
inc
jb
mov
inc
ret
add
add
in
(bad)
int3
push
ja
loopne
dec
fs
test
dec
mov
into
(bad)
retf
iret
data16
pop
fld
dec
add
mov
mov
push
pop
dec
add
mov
pop
je
sub
pop
das
test
ins
imul
mov
push
cwde
and
mov
(bad)
cmp
dec
movs
dec
les
xchg
xor
adc
mov
aaa
adc
ja
lods
mov
cwde
dec
shl
mov
push
in
add
out
mov
aas
xor
xchg
shl
ja
out
imul
into
jl
xor
int3
cmp
and
pop
and
xor
lods
jbe
stos
adc
add
lods
(bad)
inc
ins
jp
push
push
cmp
pusha
or
or
mov
xlat
adc
shr
leave
cmp
cmp
add
xchg
push
and
push
pop
add
adc
jno
jbe
pop
test
xchg
cmp
stos
push
mov
aam
mov
mov
out
pop
fstp
mov
mov
js
(bad)
movs
mov
int
lods
js
leave
and
push
call
xor
cmp
push
(bad)
xchg
jo
sub
sbb
cmps
mov
mov
call
xor
test
jecxz
pop
xchg
test
fld
jae
call
sbb
mov
cmc
retf
cwde
retf
rol
pushf
test
pop
ins
ret
mov
xchg
call
mov
into
ja
inc
pop
int
loop
out
mov
pop
dec
or
sbb
mov
mov
dec
mov
dec
add
movs
cmp
push
and
or
inc
pop
jnp
xchg
push
ins
int3
shl
movs
ds
or
sub
das
cmc
shl
jmp
inc
scas
or
lods
jp
rol
in
pop
aas
jg
je
xchg
int3
lods
or
stos
mov
mov
fistp
pop
outs
jb
leave
in
cld
or
mov
cmp
inc
in
push
dec
scas
outs
xchg
in
jp
fcom
(bad)
jg
mov
jmp
outs
jl
xor
and
fiadd
cs
pop
dec
movs
popa
inc
leave
xchg
sbb
mov
or
jne
ds
sbb
mov
les
sub
scas
fsub
div
mul
add
ret
push
das
ret
mov
mov
in
add
jbe
lds
cmp
mov
sbb
stc
cmp
rol
gs
ror
cmps
sbb
inc
mov
mov
xor
pop
mov
imul
inc
fimul
dec
xor
xchg
aad
lds
push
add
rcr
inc
out
mov
pop
pop
push
add
sbb
jmp
imul
fdivr
call
idiv
xor
xor
je
sub
enter
bound
adc
shr
sub
xor
ficomp
sub
imul
and
xchg
into
lea
push
mov
dec
xor
ja
sub
cmp
sub
or
aad
push
jb
cmp
sub
gs
aaa
lock
cmc
test
and
sub
mov
mov
in
xchg
xchg
call
mov
push
not
ret
retf
adc
retf
and
arpl
rcl
shl
pushf
push
in
fwait
xchg
mov
pop
adc
adc
add
retf
push
jno
sub
lods
xchg
in
addr16
xchg
les
(bad)
and
dec
neg
xor
sub
adc
in
pusha
fld
mov
stos
sub
leave
and
inc
or
ds
push
retf
sbb
xchg
daa
pop
inc
sub
xchg
rcl
cdq
(bad)
mov
shl
cmps
mov
imul
retf
enter
out
jge
ror
test
cmp
or
xchg
sub
inc
dec
fdiv
adc
mov
shr
jmp
enter
rcr
sbb
jmp
loope
xor
fisubr
sub
nop
ja
jno
scas
inc
popa
jg
push
adc
mov
or
mov
lahf
push
and
call
movs
cmp
ins
clc
mov
out
data16
fsub
mov
imul
lahf
adc
icebp
aas
xor
jg
out
cld
xor
sbb
sbb
pusha
pusha
dec
daa
push
push
fadd
ins
mov
dec
out
js
icebp
ss
jae
sbb
dec
aam
in
out
test
sbb
stos
lahf
test
jge
mov
fndisi(8087
gs
xchg
push
fsubr
cmp
lds
mov
aaa
mov
fwait
call
js
or
leave
xor
push
stos
push
sbb
call
(bad)
(bad)
jle
sub
iret
and
push
ins
mov
cmp
xor
pop
pushf
adc
sbb
adc
popf
pop
jmp
pop
shl
xor
dec
loop
jl
pop
mov
cmp
mov
cmp
xchg
shl
sti
dec
das
mov
pop
pop
repz
cmps
out
stc
dec
pushf
jo
rol
inc
add
cmps
movs
lahf
pop
adc
icebp
mov
rcl
outs
push
xchg
ds
push
xor
xor
jge
push
cmp
xchg
outs
call
aad
(bad)
cmps
xlat
adc
sbb
adc
fs
mov
cmp
call
lods
iret
fs
sbb
nop
inc
xlat
fimul
xchg
xor
aaa
and
push
add
xlat
hlt
cdq
jl
and
rcr
loopne
test
int3
imul
mov
std
out
pop
sub
mov
iret
jge
inc
rcl
retf
jl
call
xchg
outs
pop
cmp
imul
mov
adc
xor
jnp
mov
xchg
inc
xor
sbb
dec
xor
pop
test
pop
outs
(bad)
mov
std
adc
test
std
pushf
cmp
int
mov
adc
test
arpl
pop
stos
adc
push
int3
sbb
xchg
out
fs
jne
adc
ins
xchg
nop
fisubr
sbb
(bad)
inc
mov
call
call
dec
push
pop
mov
and
nop
std
inc
mov
cli
les
push
lock
and
jge
icebp
mov
cld
pop
pop
and
and
icebp
sub
fsub
and
fsubr
or
(bad)
je
div
xor
scas
mov
daa
cdq
mov
push
int3
loopne
cmc
imul
inc
jmp
sub
or
xchg
xchg
fst
push
call
stos
xor
push
scas
rcl
fbstp
mov
adc
push
xchg
mov
ret
shl
je
xor
push
and
sbb
ins
ins
es
cmps
bound
clc
add
xor
cmp
mov
jg
or
out
mov
adc
add
int3
mov
inc
jl
addr16
imul
push
lods
pop
and
enter
push
push
leave
stos
or
(bad)
jmp
nop
cmc
xchg
inc
fstp
adc
stc
xlat
test
ficomp
leave
in
cld
add
add
mov
ret
pop
iret
mov
int
dec
jg
ins
sahf
mov
or
int
push
xchg
xor
push
cmp
addr16
xchg
repz
ja
ins
mov
out
mov
sub
ds
and
test
repnz
adc
int
inc
iret
(bad)
and
add
iret
je
out
out
push
int
jmp
jecxz
mov
add
shr
cmp
adc
stos
pop
stos
retf
pop
mov
fadd
ja
cli
sbb
and
iret
sbb
imul
mov
pop
out
or
mov
enter
sbb
shr
lahf
mov
outs
fbstp
int3
add
jle
std
mov
pop
les
shl
mov
arpl
in
push
mov
int
jp
mov
jne
daa
shl
cmps
mov
hlt
mov
xlat
xlat
fist
shl
dec
int3
inc
fwait
fs
into
push
inc
jmp
mov
mov
movs
adc
xchg
adc
jnp
mov
out
push
bound
mov
aas
sub
nop
div
jmp
mov
xchg
mov
sbb
adc
aas
push
cdq
out
les
mov
test
gs
mov
ror
out
inc
cmp
retf
or
or
jge
jg
dec
inc
out
adc
ins
or
in
jp
pusha
outs
movs
fldlg2
mov
push
mov
push
adc
daa
mov
or
enter
in
cmp
pusha
xor
jle
cmp
cli
jle
hlt
dec
shl
outs
push
jp
(bad)
fnstcw
int3
mov
add
pop
pop
and
out
jae
int3
push
lds
fdivr
and
imul
cmp
aad
cmp
or
mov
or
xchg
adc
and
push
sub
and
pusha
lds
sbb
cmp
popf
nop
data16
jbe
cdq
ja
adc
in
es
xlat
lods
add
ss
test
pop
adc
pop
mov
mov
scas
mov
imul
xor
ja
adc
and
pop
ins
and
pop
aas
add
adc
sbb
xor
push
in
and
jecxz
mov
je
cmp
scas
xchg
ins
fcmove
ss
or
push
mov
fst
push
idiv
sub
cmps
jnp
out
xchg
cmp
jno
jae
iret
mov
inc
jl
ins
test
mov
add
jge
stos
out
mov
int
cmp
jno
adc
rcr
xchg
xor
jp
push
(bad)
cmp
test
push
fsub
nop
jo
mov
test
jbe
das
jne
inc
std
mov
or
mov
adc
or
cmp
dec
mov
pop
sub
out
inc
push
stos
imul
jno
icebp
hlt
mov
pusha
push
shr
pop
or
xchg
cmp
scas
stos
ins
loopne
push
rcr
and
pop
xchg
inc
push
or
or
add
pop
push
daa
out
je
mov
adc
and
stos
lds
xchg
test
test
push
int
ret
cmp
add
scas
fwait
and
push
lea
lock
mov
(bad)
retf
mov
shl
inc
jo
pop
xchg
lahf
out
in
stos
cmp
neg
cdq
das
mov
jg
cmp
in
pop
push
jl
mov
imul
jge
or
mov
push
icebp
xlat
outs
out
or
loopne
clc
retf
mul
popa
dec
imul
fst
xchg
out
mov
push
push
rcr
sub
or
adc
pop
add
sub
jecxz
fstp
loopne
jmp
and
ret
out
fnstsw
movs
mov
inc
adc
ins
push
mov
xchg
adc
jmp
(bad)
mov
(bad)
jmp
mov
pusha
push
jne
cmps
xlat
jg
test
mov
inc
dec
jmp
push
and
cmp
loopne
test
dec
inc
pop
test
fstp
fidiv
ror
out
jo
arpl
push
jbe
jle
inc
xor
gs
jmp
(bad)
(bad)
call
mov
jno
fdiv
iret
push
mov
cs
sbb
sub
shr
popa
ss
loopne
cwde
inc
and
xor
push
rep
mov
fstp
ss
movs
xchg
mov
sbb
and
mov
mov
cmp
jp
xor
dec
pop
and
xor
add
dec
jmp
mov
imul
ror
loopne
out
retf
adc
sub
mov
mov
daa
(bad)
les
dec
sar
mov
(bad)
sbb
popa
and
pop
xor
push
(bad)
sub
jge
sahf
and
and
dec
pop
mov
push
fsubr
int3
inc
cli
dec
xor
add
cs
out
add
mov
in
mov
mov
std
repz
adc
rcl
mov
stos
sub
pop
mov
outs
shr
mov
stos
dec
pop
cmp
pop
aaa
fmul
push
inc
sbb
fnsave
sbb
push
inc
pushf
dec
retf
mov
mov
sub
mov
out
mov
and
add
sti
(bad)
or
or
test
aaa
lds
ss
xor
mov
sti
or
call
inc
add
jo
clc
repz
add
fisubr
push
push
xor
mov
pop
mov
adc
jae
mov
mov
(bad)
and
xchg
repz
sub
xor
adc
sbb
data16
mov
rol
enter
mov
sub
adc
pop
and
mov
mov
out
pop
ins
jmp
fdivr
push
xchg
sub
push
sbb
call
imul
lahf
and
nop
sbb
arpl
aas
jns
mov
leave
mov
and
cmc
ret
push
and
jle
xor
pop
cmp
and
loop
xchg
mov
in
add
cmps
mov
mov
pop
ins
mov
mov
fsubr
mov
stos
mov
movs
or
push
in
push
mov
fmul
das
xchg
pop
and
mov
(bad)
cld
cmp
mov
mov
scas
jmp
xchg
xchg
xlat
push
sub
in
and
mov
cmp
and
pop
mov
push
sbb
movs
call
xor
and
pop
xchg
sar
outs
inc
mov
clc
call
loop
xchg
mov
or
arpl
and
sub
call
sahf
shl
cmp
repz
jbe
mov
or
sbb
loope
cdq
mov
ror
mov
rcl
sti
mov
or
repnz
add
int
fst
and
add
dec
fst
fadd
mov
or
test
mov
push
mov
test
sbb
out
adc
(bad)
jp
scas
iret
lock
(bad)
cmps
hlt
jp
std
ret
or
mov
call
lods
mov
or
inc
sbb
stc
inc
fwait
mov
pop
loope
imul
or
aam
dec
fiadd
test
sub
fbld
mov
ss
sub
scas
shl
clc
test
inc
sbb
imul
xchg
or
jecxz
mov
cld
mov
add
jmp
stc
mov
push
sbb
pop
sbb
inc
aam
xchg
pop
(bad)
push
data16
ja
xor
gs
jp
and
and
inc
jnp
mov
jae
push
cmp
sub
xor
shl
sbb
pushf
imul
clc
jl
loop
(bad)
mov
(bad)
push
xchg
pop
cmp
imul
pop
push
ja
jns
cld
sbb
jne
dec
sahf
fild
aam
mov
ret
or
outs
mov
fild
stc
mov
ret
inc
ficom
lods
cld
imul
inc
jns
xchg
push
push
mov
in
sbb
mov
xor
out
inc
cdq
(bad)
xor
pop
sub
mov
scas
inc
push
adc
xchg
inc
clc
rcr
dec
cmc
scas
sti
cmp
mov
mov
call
cmp
lods
jmp
(bad)
fld
ret
idiv
sbb
ins
xor
push
dec
fstp
add
cmc
sbb
fidiv
add
or
rcl
and
sti
repnz
in
mov
rol
xor
xor
cmp
jge
lahf
(bad)
call
shr
sub
and
or
int
ins
add
aam
xchg
mov
cmps
dec
add
(bad)
jg
in
mov
jns
stc
sub
sub
add
inc
mov
inc
lds
dec
dec
or
pushw
leave
pop
xchg
int
movq
jmp
ss
fist
mov
or
adc
adc
das
jae
jp
fsub
repnz
mov
jp
adc
cmps
push
nop
cmps
in
mov
int3
outs
cmp
shr
pop
aas
or
mov
fwait
mov
adc
test
cli
cmps
mov
je
into
in
xlat
dec
adc
pop
sbb
test
lock
dec
pop
xor
pop
sub
jge
sbb
push
dec
dec
ror
pop
test
xchg
and
jge
cmc
inc
retf
fisttp
xchg
dec
adc
sub
mov
cmp
pop
sub
jmp
adc
sub
jmp
dec
mov
inc
sar
xchg
push
add
ja
xchg
std
ins
push
xchg
imul
movs
sbb
inc
push
popf
jo
jns
js
pop
xchg
cmps
mov
cdq
sub
fnstenv
sbb
mov
lea
adc
(bad)
or
outs
(bad)
out
xchg
dec
loopne
sub
jmp
cmp
push
into
fwait
mov
xor
aaa
int3
out
ret
push
aad
cmp
shl
gs
out
inc
inc
cli
(bad)
xchg
(bad)
jmp
sahf
mov
leave
jg
adc
or
ins
pushf
inc
popf
scas
and
neg
in
popa
or
gs
fs
push
jge
fstp
cmps
imul
cmps
jo
ret
push
adc
xor
cmp
mov
jge
inc
ret
cmps
mov
clc
ja
and
sbb
add
push
xor
jns
ficomp
cmp
mov
xchg
ffree
mov
icebp
ss
fild
les
leave
and
and
int
xor
inc
cmc
out
rcl
xlat
sub
lods
inc
or
adc
(bad)
loopne
in
cmps
push
pop
push
icebp
xchg
repnz
mov
inc
inc
dec
popa
mov
mov
call
push
in
lods
clc
dec
imul
enter
xchg
aad
outs
cdq
mov
jmp
sar
cld
pop
inc
inc
or
imul
jl
jl
and
cmc
(bad)
ds
or
jb
dec
jcxz
popa
leave
mov
cmc
(bad)
xor
add
test
sti
xlat
cmp
add
xchg
pmullw
jnp
fs
sbb
(bad)
or
mov
scas
in
mov
outs
iret
(bad)
mov
sub
into
call
jo
fdivr
mov
aaa
cs
in
or
in
lds
cmp
fld
cmp
sbb
add
jbe
movs
mov
scas
sti
sub
(bad)
dec
(bad)
dec
js
sti
xchg
or
fucom
enter
or
pop
xchg
inc
jnp
retf
pop
lock
push
pop
sub
add
sub
push
sahf
jmp
mov
jp
mov
test
repz
inc
sahf
mov
ins
cld
add
push
aas
sbb
icebp
or
xor
aas
je
mov
ss
cld
pcmpgtd
mov
fsubr
inc
scas
mov
pop
sub
xlat
les
(bad)
sbb
sar
cmc
inc
jnp
cmp
adc
inc
outs
xchg
cvtps2pd
test
sbb
add
shl
mov
xor
ins
fwait
jnp
sbb
ins
jecxz
pop
add
mov
sbb
mov
sbb
and
fs
daa
mov
mov
or
out
mov
daa
xor
or
and
sub
mov
lods
jg
cli
mov
clc
int3
xor
and
aas
add
mov
rcl
push
retf
mov
in
sbb
mov
cs
call
loopne
pop
jmp
dec
lods
sbb
shl
xchg
dec
jle
adc
add
mov
xchg
imul
push
and
push
movs
dec
push
pop
mov
jp
das
rol
mov
repz
jae
inc
mov
iret
cmp
push
mov
inc
fild
add
add
pushf
lds
outs
jnp
add
ret
out
add
lds
adc
dec
js
ja
fadd
push
mov
dec
xchg
xchg
mov
pop
xchg
movs
sub
aaa
cmc
js
pop
fs
add
call
loop
fcom
jecxz
rol
and
lods
pop
add
outs
sub
mov
int
and
add
cmp
adc
cs
fadd
and
dec
daa
cmp
cdq
pop
test
loope
mov
cmc
fcom
mov
sub
stos
retf
add
push
cmp
mov
lds
gs
push
cmp
mov
scas
jg
outs
(bad)
or
xor
xor
ds
adc
push
mov
popf
scas
mov
fldcw
popa
cmp
lock
arpl
push
mov
lock
jge
mov
mov
adc
pop
cmp
adc
popa
addr16
sub
sub
sbb
ins
retf
xor
cmp
movs
or
push
jo
xchg
addr16
je
scas
add
pop
shl
pop
fs
mov
out
scas
and
and
pusha
test
mov
cmps
pop
(bad)
or
pop
cdq
dec
stos
cli
ffreep
cmp
mov
enter
inc
or
pop
test
jecxz
aam
adc
(bad)
push
mov
or
push
add
lea
push
dec
call
jl
ds
rcr
cmc
jne
mov
psubsw
mov
jno
in
inc
lock
xchg
ficom
push
cmp
mov
cwde
xchg
xlat
mov
jae
sbb
pop
shl
add
dec
cmps
add
in
not
out
fcomp
popf
jmp
ins
imul
mov
or
inc
cdq
mov
dec
pop
mov
sub
lods
pop
push
lock
push
iret
fisub
retf
fstp
adc
xcrypt-ofb
cmps
push
jecxz
inc
pop
loope
shr
int3
mov
jne
in
inc
ror
xor
out
in
jns
in
pop
xlat
xor
add
mov
scas
imul
push
movs
and
mov
cwde
pop
stos
cmp
xchg
pop
push
pop
loop
adc
jmp
std
mov
sub
push
add
movs
xchg
out
push
xchg
add
inc
lock
rcl
(bad)
in
pop
mov
xchg
ja
out
sub
call
addr16
inc
mov
sahf
sbb
mov
mov
sahf
shl
push
ja
mov
xlat
adc
dec
imul
sahf
imul
xor
or
popa
mov
inc
inc
mov
or
xor
test
mov
clc
scas
fcom
(bad)
mov
push
pusha
ins
xchg
xchg
lea
je
adc
sti
sbb
je
push
dec
push
mov
out
xor
pop
sbb
push
jmp
(bad)
fistp
hlt
lea
cmps
pop
test
in
outs
xchg
cdq
push
jmp
jl
ss
js
in
cmp
pop
sub
(bad)
pop
mov
aad
sbb
int
xchg
dec
sbb
movs
xor
les
fimul
pop
loope
and
sbb
(bad)
in
(bad)
dec
fstp
or
mov
movs
dec
sbb
inc
xor
mov
pop
mov
sbb
and
add
adc
aas
cdq
and
cli
rcr
lods
xor
and
jecxz
call
sbb
pop
cmp
xor
xchg
xor
mov
mov
imul
push
xchg
test
ret
push
mov
add
daa
cwde
mov
add
sbb
jmp
lds
in
out
sub
mov
push
cmc
js
aam
and
jp
pop
jo
mov
pop
pop
cmps
push
adc
mov
mov
mov
mov
inc
mov
retf
lods
int
fs
pushf
xchg
in
(bad)
ds
cmp
pop
mov
jp
loope
pushf
scas
aad
add
test
fistp
sti
fnstsw
cmp
out
xor
test
arpl
lods
adc
sub
xchg
mov
xor
pop
pop
sahf
inc
mov
adc
jbe
sar
test
ret
push
outs
mov
jge
mov
lea
mov
xor
sar
add
adc
nop
(bad)
cmp
out
fwait
shr
(bad)
xor
outs
cmp
jp
and
cmp
add
in
cmp
dec
repnz
mov
pop
add
pop
jg
inc
fsubr
retf
mov
mov
pushf
inc
jge
pop
aam
cmp
in
scas
sbb
sbb
mov
dec
scas
xchg
mov
lock
iret
data16
fadd
(bad)
pop
sbb
pop
loope
add
fimul
lds
test
lods
hlt
retf
jbe
jge
sbb
jmp
rcr
dec
sti
cmp
movs
jle
xchg
jno
test
aad
aaa
hlt
cdq
pushw
push
pop
add
mov
test
adc
ins
mov
enter
pusha
jne
ss
dec
cli
ret
jg
xchg
call
test
inc
xchg
sub
rol
xchg
dec
mov
mov
in
xchg
ja
shr
call
inc
sbb
dec
into
cmp
mov
aad
jbe
sub
movs
std
loope
mov
mov
xlat
dec
mov
xor
test
dec
sbb
sub
sar
das
push
movs
add
cwde
mov
pushf
lahf
rcr
pop
mov
jno
jno
sar
jbe
push
in
test
hlt
mov
add
(bad)
inc
sub
inc
dec
jl
mov
bound
(bad)
popa
aas
add
imul
cmps
mov
pop
inc
mov
xchg
pop
mov
les
dec
nop
cdq
jo
aaa
pop
arpl
sbb
ins
repz
imul
inc
xsavec
aad
stc
mov
sbb
retf
cs
push
sub
pushf
mov
iret
les
xor
adc
inc
jle
add
arpl
mov
div
retf
ds
xchg
add
push
ror
mov
gs
xchg
push
sbb
jbe
jmp
adc
xchg
and
std
fdivr
and
jp
icebp
sbb
inc
aam
js
retf
mov
and
jns
mov
das
push
aas
adc
dec
fsub
mov
jg
cs
xchg
out
mov
sar
aas
add
test
xchg
in
jo
sub
lods
pop
pusha
pop
aaa
fucom
test
xlat
sahf
push
mov
jmp
pop
dec
jle
rcl
adc
cmps
in
jne
in
ja
adc
mov
(bad)
popf
lds
int3
cmp
je
mov
push
aam
pop
pusha
iret
scas
adc
pop
(bad)
fiadd
repnz
ins
aad
xor
retf
out
(bad)
scas
dec
jnp
ss
cli
nop
and
pusha
inc
jne
xor
mov
mov
bnd
sbb
lea
int
dec
fcomp
mov
not
dec
clc
jecxz
jp
push
pop
jmp
loopne
ss
push
xlat
adc
pop
(bad)
leave
sti
add
add
cmp
add
cmps
in
imul
jmp
shr
and
sub
jmp
in
xor
xchg
push
xchg
(bad)
int3
cs
jmp
add
daa
dec
xor
adc
sub
push
aam
push
sbb
cmp
dec
shl
aas
mov
test
adc
add
retf
mov
sbb
aas
setle
mov
das
cmp
cmp
cmp
ja
mov
cmp
or
xor
or
ins
in
mov
int
js
pop
dec
stos
mov
sub
and
pop
or
dec
cmp
push
mov
loope
loopne
xor
stc
movs
sbb
ret
cmp
cli
movs
loope
cmp
fstp
out
popf
push
xchg
inc
xlat
popa
xrelease
ins
xchg
(bad)
pop
lock
mov
push
test
and
repnz
cli
pop
mov
movs
test
das
repz
aas
mov
fbstp
cmp
mov
mov
cmp
mov
fcomp
mov
mov
xor
cmp
(bad)
ficom
xchg
cmp
mov
jecxz
cmp
scas
xor
shl
outs
jg
loopne
and
cmp
add
loopne
(bad)
in
adc
mov
das
daa
inc
(bad)
jecxz
dec
retf
cmp
xchg
repnz
and
repnz
hlt
js
in
add
push
jnp
fbstp
aas
xchg
popf
(bad)
lods
sbb
jmp
call
xor
mov
retf
cwde
(bad)
sbb
mov
inc
(bad)
mov
fbstp
inc
leave
ret
out
(bad)
mov
mov
lds
ds
xchg
ret
jbe
scas
or
mov
test
aas
inc
xor
push
int
lock
push
outs
jge
cmp
(bad)
or
enter
repnz
jecxz
lock
int3
inc
jno
mov
mov
fdivr
shl
sbb
shr
test
xlat
std
cs
or
ret
adc
adc
stc
sahf
jp
arpl
push
pop
mov
cmp
add
scas
test
push
mov
jnp
push
(bad)
xchg
retf
popa
fwait
in
(bad)
adc
xchg
lds
pop
aaa
mov
mov
addr16
out
inc
mov
lods
mul
xor
cwde
push
call
pop
icebp
aad
stc
hlt
xchg
mov
push
jle
cmp
and
shr
retf
jb
ror
add
fisttp
lods
jmp
add
shl
and
dec
loop
cmp
scas
sub
(bad)
mov
inc
xor
in
add
out
bound
ins
push
fstp
idiv
icebp
in
stos
test
movs
adc
mov
sub
jns
cmp
and
fs
ret
jmp
repnz
ror
mov
nop
pop
ret
xchg
push
sbb
jp
stos
daa
cmp
sbb
lods
xchg
out
pop
ficom
jmp
stc
mov
xchg
mov
dec
enter
sbb
jge
xchg
xor
test
(bad)
mov
add
dec
add
xchg
stos
scas
cli
mov
xor
imul
cdq
push
mov
lods
ficomp
div
sub
mov
out
sub
mov
xchg
ror
out
sbb
mov
loop
shl
xlat
dec
xchg
test
push
jns
mov
sub
(bad)
adc
xor
push
pop
fadd
mov
cmp
cmp
or
ins
xchg
dec
(bad)
pop
in
rol
xchg
cmp
retf
xchg
pop
nop
jns
leave
push
call
pop
ins
mov
sbb
rcl
sbb
push
les
sub
mov
std
cli
xor
push
mov
lea
pop
stc
dec
cmp
sbb
je
mov
(bad)
xchg
ds
inc
ror
adc
je
aas
mov
cs
fcom
pusha
ror
clc
sbb
imul
icebp
or
loope
push
or
mov
pop
out
sub
mov
lods
sar
pop
xor
(bad)
std
mov
loop
test
lahf
dec
pusha
adc
stos
jae
jecxz
repnz
inc
iret
cs
xchg
dec
sbb
fxch
jp
or
jp
lods
imul
rol
imul
jp
push
pop
loope
test
sbb
shr
pop
loop
repz
pop
pop
adc
ret
xchg
ss
inc
xchg
xor
inc
xor
push
sub
mov
fucom
sub
call
retf
xor
fdivr
cmp
inc
sub
or
test
and
std
xchg
ins
jge
and
hlt
std
mov
mov
stos
call
mov
(bad)
push
(bad)
mov
xor
pop
push
wbinvd
stos
adc
pop
push
mov
jnp
pop
cmp
movs
shl
push
jns
pop
imul
iretw
jae
pop
xchg
lods
xchg
ds
fidiv
loop
and
repnz
push
xchg
pop
sub
push
push
imul
into
push
xchg
lock
add
jg
pop
dec
pop
jmp
mov
adc
sub
jb
adc
push
push
test
stos
neg
in
int
sbb
xor
in
test
cmp
sub
leave
in
pop
hlt
jnp
push
ja
xchg
xor
sub
or
out
add
pushf
mov
icebp
push
sub
fwait
imul
dec
dec
mov
jmp
mov
repnz
adc
mov
cmps
div
jmp
and
jmp
movs
sahf
add
in
js
push
ficomp
mul
imul
ret
mov
loope
mov
jecxz
mov
sub
int
int3
mov
pop
(bad)
cmps
ins
push
cmc
je
in
loopne
iret
fs
int
push
or
push
out
out
cmp
lods
fneni(8087
push
(bad)
adc
int3
enter
fdivr
fsubr
inc
enter
pop
xchg
retf
push
daa
sub
ror
retf
outs
dec
dec
xor
enter
xchg
movs
mov
popf
scas
and
loope
mov
jl
arpl
fisubr
and
sbb
pop
lea
pop
test
add
or
popf
jns
push
aad
xchg
into
clc
lock
in
adc
xlat
retf
push
jno
andps
(bad)
and
ror
data16
xor
dec
loopne
pop
xchg
cmps
mov
sbb
test
loop
ret
lahf
jne
data16
gs
in
into
sbb
sub
mov
cmp
jns
js
test
stos
dec
aas
(bad)
das
fcom
dec
pop
pop
dec
pushf
aad
mov
mov
mov
ficom
movaps
imul
cmps
sbb
dec
xchg
add
jne
xor
cmp
push
sub
cs
jne
jmp
xchg
adc
arpl
dec
ss
push
mov
lods
fnsave
call
retf
pop
(bad)
jmp
(bad)
mov
dec
loope
rol
neg
xchg
repnz
push
inc
push
lea
sub
xor
imul
push
mov
or
mov
sar
in
lea
or
retf
sub
es
lods
xchg
inc
mov
lds
or
and
cli
es
jmp
mov
cld
sbb
mov
imul
arpl
sub
addr16
leave
dec
mov
or
xchg
dec
add
xchg
inc
fnstsw
mov
push
push
lea
cmp
pop
mov
sub
sbb
or
fld
jge
cmps
cmps
or
cmps
fistp
jge
inc
inc
jmp
sub
cmps
push
xor
xchg
ins
cwde
and
cmp
pop
int3
mov
jp
fdiv
fwait
sub
test
xor
pop
mov
stos
call
out
pop
push
xor
push
mov
cmc
stos
inc
add
test
inc
repz
rcl
and
xchg
inc
retf
frstor
push
xor
dec
pop
add
cs
mov
or
gs
scas
out
ins
sbb
aaa
std
fnsave
add
pop
jo
xor
scas
aad
adc
rol
(bad)
lahf
dec
repnz
add
cmps
lds
pop
loope
inc
xlat
call
pop
ja
std
adc
pop
pop
mov
stc
add
mov
pop
fdiv
in
int3
loop
sub
dec
fcom
ins
xchg
sbb
mov
sub
push
outs
fidiv
out
dec
mov
lsl
jne
dec
das
jmp
clc
rol
int
xchg
cmp
movs
pushf
add
cmp
xor
movs
push
pusha
(bad)
inc
sbb
sbb
cli
fs
push
mov
add
out
push
cmp
inc
sbb
sub
inc
xchg
push
mov
mov
out
jnp
inc
lahf
inc
ret
xchg
adc
cmp
and
nop
jns
outs
and
popa
popf
int3
test
lea
pop
int
add
add
ficomp
mov
in
sbb
fild
mov
in
dec
adc
loop
or
push
stos
xor
outs
scas
inc
shr
xchg
jb
mov
repnz
mov
jne
inc
dec
push
aad
loope
cs
in
shr
fstp
ins
cmps
data16
es
loopne
(bad)
cwde
xlat
adc
cs
jo
cwde
or
outs
ja
xor
mov
jp
aam
in
test
jne
aaa
inc
pop
ds
sbb
rcr
(bad)
mov
inc
inc
aaa
fs
and
mov
popf
aaa
dec
shr
xchg
loopne
add
cmp
(bad)
cld
out
inc
sbb
push
popf
repnz
inc
cmps
call
enter
dec
mov
push
add
cmp
xchg
dec
aam
test
cwde
fs
adc
pop
dec
push
aam
cmp
rcl
cdq
hlt
scas
sbb
or
shl
sbb
cmc
je
dec
adc
neg
xlat
adc
retf
cs
sub
(bad)
mov
sbb
(bad)
es
adc
xchg
out
(bad)
pop
push
or
cmp
add
out
xchg
mov
cdq
or
cmp
leave
mov
xor
test
outs
scas
je
pop
inc
add
xor
mov
sti
pusha
xchg
sub
sub
mov
outs
dec
int3
(bad)
retf
cmp
ins
and
pop
outs
shr
add
test
inc
mov
les
in
movs
(bad)
dec
adc
test
(bad)
mov
mov
test
push
loop
mov
aad
xchg
adc
(bad)
jnp
mov
lods
sbb
fisttp
faddp
(bad)
rcl
lods
repz
push
lods
mov
pop
xchg
ins
dec
or
les
lea
imul
and
stos
test
test
dec
mov
cwde
mov
(bad)
push
aad
hlt
adc
inc
fisub
(bad)
stc
jno
mov
cmp
lock
enter
sar
sub
mov
mov
jg
push
add
imul
aaa
inc
mov
adc
jns
mov
loop
nop
mov
test
jp
mov
and
adc
cmp
popa
and
push
or
aad
push
adc
lods
(bad)
xor
jae
movs
mov
lock
push
xor
xchg
fistp
lea
test
dec
adc
out
movs
push
aas
(bad)
mov
add
shr
out
jle
xlat
movs
mov
jbe
lods
or
cmps
push
jle
mov
popa
sub
repz
push
jno
mov
aad
mov
and
mov
adc
xor
stos
mov
imul
cmp
pusha
popf
jl
aam
sbb
div
clc
jae
lock
(bad)
adc
movs
dec
mov
std
or
leave
add
mov
cwde
clc
stos
push
sahf
sbb
adc
inc
mov
mov
lds
sbb
mov
pushf
(bad)
jnp
pop
dec
lahf
mov
push
shr
jnp
mov
mov
pop
in
icebp
mov
push
lea
stos
pop
cmp
mov
mov
xchg
test
jmp
inc
adc
call
stc
cld
scas
inc
cs
cli
fs
int3
bound
outs
and
in
push
cmp
sub
(bad)
je
(bad)
ffree
or
std
or
jne
dec
ins
or
nop
adc
lea
pushf
mov
aas
idiv
mov
ret
push
sbb
dec
cmc
mov
fst
aad
outs
cmp
push
dec
xchg
inc
push
retf
scas
int3
xchg
cwde
retf
cmp
int3
dec
ss
shl
sbb
add
pop
mov
ss
popa
daa
mov
or
cmp
ins
sub
call
pop
int3
push
sti
retf
lods
dec
or
fild
or
les
shr
into
xor
mov
adc
and
sbb
cli
aad
push
add
sub
repnz
jl
mov
daa
xchg
call
sar
jo
pop
stos
dec
or
add
int3
add
lods
jne
xchg
dec
adc
adc
add
test
cmp
into
xchg
sbb
jmp
mov
mov
jo
jle
jge
or
sti
inc
ds
push
xor
push
xchg
retf
cli
jo
xor
push
call
mov
iret
push
cs
sbb
(bad)
sub
mov
adc
ror
std
and
xchg
pop
pop
ror
fcomp
jno
push
lock
pand
jecxz
ret
or
cmc
gs
cmp
dec
addr16
xchg
aaa
pusha
cmps
out
inc
jecxz
jmp
adc
(bad)
adc
and
lods
and
rcr
mov
xchg
stos
and
or
and
sbb
pop
sbb
cwde
inc
fs
mov
call
jmp
dec
mov
pop
pop
mov
pop
jno
loop
mov
fcom
repnz
or
pusha
aad
adc
adc
sub
inc
sub
push
inc
pop
sti
cmp
test
arpl
ins
iret
jne
pop
jbe
leave
or
adc
arpl
es
leave
mov
cbw
push
dec
mov
(bad)
out
int3
push
fwait
dec
or
mov
lahf
jp
jno
inc
ret
fstp
mov
and
fadd
fld
jnp
cmp
daa
or
and
add
xor
jecxz
adc
xchg
std
inc
out
adc
shl
jbe
dec
je
out
stos
pusha
pusha
sar
xor
lock
dec
call
sub
and
cwde
adc
movs
imul
dec
lock
sub
and
adc
dec
test
pop
jo
cmps
retf
ins
sbb
leave
xor
mov
adc
sahf
add
push
test
(bad)
retf
xchg
inc
fistp
xchg
fcmovnu
call
add
dec
int
(bad)
cmp
div
dec
pop
shl
inc
gs
aaa
jmp
push
cmp
adc
int3
(bad)
mov
dec
adc
jo
ret
dec
push
je
jb
xchg
and
and
cld
icebp
push
push
cmp
sub
jno
or
or
push
sbb
mov
pop
out
mov
icebp
or
cmp
add
(bad)
pop
cmp
fdiv
sbb
(bad)
aam
dec
inc
call
fdivr
inc
in
xor
push
adc
(bad)
mov
std
sub
sub
and
arpl
out
adc
inc
xchg
call
fmulp
jbe
stos
dec
(bad)
cld
loopne
mov
rol
ret
pop
mov
pop
dec
pop
add
ret
jb
push
jg
push
int
pop
hlt
push
fst
push
or
es
into
jns
retf
les
mov
in
lahf
jae
clc
push
sbb
dec
xchg
mov
or
xchg
or
sub
mov
lods
jo
fadd
jge
mov
test
pusha
add
or
sbb
rol
mov
shl
xor
stos
mov
daa
mov
sbb
outs
lods
xchg
test
rcr
jmp
fild
sbb
add
into
call
pop
lahf
data16
pop
xor
jg
fwait
lods
and
xchg
int
or
scas
mov
mov
test
movs
mov
(bad)
push
sub
jecxz
dec
ins
test
or
inc
clc
adc
mov
call
aad
inc
scas
cmc
add
pop
push
lds
in
ret
cmp
fisub
sub
repnz
test
popf
jg
xor
add
pop
ret
pop
inc
test
movs
lahf
(bad)
pop
mov
inc
mov
sub
mov
sbb
xor
jmp
push
jb
icebp
lods
inc
js
retf
sub
pop
in
pop
pop
popf
out
jmp
sbb
scas
mov
xor
add
cmp
jo
or
daa
xor
jg
sub
add
gs
icebp
or
inc
aas
aad
aaa
ins
sti
mov
(bad)
retf
cmp
shl
aas
add
mov
cld
fiadd
xchg
push
adc
inc
(bad)
xor
sub
loope
test
sbb
stc
mov
jecxz
sub
dec
or
leave
sub
pop
jb
dec
xor
out
dec
or
add
cmp
inc
cs
adc
inc
adc
ins
jp
mov
dec
and
lea
xchg
pusha
je
sub
or
dec
repnz
mov
xchg
dec
add
sahf
pop
(bad)
jb
dec
and
outs
add
xchg
clc
mov
das
ds
jbe
out
je
fidivr
into
fwait
or
retf
dec
mov
pop
adc
inc
iret
cmp
xchg
xchg
ret
popa
loop
out
loop
jne
fdecstp
nop
lea
test
test
inc
jmp
push
fidiv
adc
or
shl
mov
rol
sub
cmps
push
mov
(bad)
pop
cli
repz
icebp
stos
jns
ins
(bad)
mov
and
dec
pop
jno
scas
loope
xchg
jmp
iret
int3
jecxz
push
cmp
lock
xchg
lock
sti
outs
and
sbb
adc
arpl
(bad)
mov
test
pop
inc
or
cwde
jge
xor
popa
jb
loope
sub
jmp
sbb
mov
fs
adc
inc
lods
(bad)
call
xchg
mov
inc
pop
inc
or
pop
iret
out
mov
dec
inc
ret
in
(bad)
cli
inc
shr
push
aad
aas
mov
pop
rol
cmp
mov
out
lods
std
mov
add
adc
ins
sbb
jo
popa
gs
gs
inc
imul
std
fs
push
fsubr
inc
std
ret
imul
fwait
dec
outs
add
jmp
jge
pusha
mov
call
stos
fcom
add
les
aad
jl
jmp
dec
mov
and
mov
cld
movs
push
xchg
sub
arpl
jmp
push
lahf
js
dec
inc
stc
inc
cwde
ret
into
xor
pop
(bad)
stos
icebp
xchg
adc
mov
xor
test
ret
mov
pusha
daa
rcr
in
addr16
loopne
ds
shl
mov
mov
push
add
jle
hlt
adc
ss
sub
add
mov
pop
lods
xchg
push
jae
mov
clc
gs
mov
inc
mov
dec
cld
xor
xor
sti
mov
mov
add
xor
test
mov
xchg
shr
fidiv
sbb
(bad)
sbb
dec
mov
mov
mov
dec
add
stos
push
mulps
lods
push
(bad)
xchg
mov
xchg
test
xor
test
inc
repz
push
fwait
bnd
ret
inc
fdiv
or
sub
inc
push
mov
sbb
stc
sbb
push
ret
add
punpcklbw
clc
jg
inc
fidiv
arpl
adc
into
(bad)
aas
mov
push
or
pop
adc
mov
test
pushf
cmovs
inc
mov
jl
outs
ins
push
clc
jns
loopne
mov
enter
scas
mov
scas
dec
popf
pop
push
lods
aam
outs
mov
call
xor
loopne
lea
inc
push
push
stc
mov
aad
lods
ds
test
addr16
lock
fwait
pop
(bad)
inc
jno
cdq
loopne
fabs
imul
sbb
leave
into
mov
and
retf
nop
out
lahf
dec
xor
js
cwde
cmp
test
mov
mov
fdivr
imul
or
in
ins
sbb
das
sbb
cmps
inc
xor
popa
aas
mov
in
ins
jle
out
and
pop
jge
cwde
(bad)
xor
push
push
lahf
sbb
mov
mov
ss
jge
cmps
sbb
ret
xor
inc
shl
(bad)
fcomi
push
ins
xchg
ds
jae
cdq
es
cmps
cdq
add
dec
add
and
pop
mov
sbb
mov
or
cdq
inc
push
mov
xchg
lahf
adc
pop
push
adc
fstp
fcomp
stos
and
neg
hlt
stos
fnstenv
mov
sar
scas
mov
cld
and
jns
jb
adc
or
pop
jmp
or
int3
cdq
cmps
fimul
inc
or
cs
in
and
(bad)
in
mov
mov
clc
jge
sub
mov
out
mov
movs
shr
outs
sbb
push
out
popa
test
hlt
ss
in
je
add
in
in
loopne
imul
push
dec
lahf
or
or
std
test
jae
xchg
push
movs
push
add
dec
out
shr
inc
es
rcr
jnp
inc
ret
scas
in
ja
jb
ficomp
je
repz
sub
leave
inc
rcl
loopne
lods
call
je
lahf
ret
data16
out
xor
xor
xchg
xor
cmp
dec
mov
ss
fstp
cmp
loopne
push
stos
pushf
cli
cmp
cwde
repnz
out
sub
push
push
fneni(8087
or
or
mov
sub
or
ja
sub
(bad)
call
adc
push
inc
dec
mov
inc
add
sub
shr
bnd
aaa
shl
neg
sbb
popa
ltr
mov
std
cs
ss
ja
sub
das
in
jle
stos
push
pusha
repz
and
and
sbb
and
cli
rcl
iret
mov
add
adc
mov
jo
je
and
pop
mov
test
lea
arpl
jae
std
(bad)
(bad)
push
jecxz
loopne
stc
jno
pop
xchg
lods
add
in
in
sbb
sub
jl
out
aam
in
retf
add
repnz
jb
add
leave
dec
xchg
or
jge
sti
jbe
scas
push
xlat
adc
jne
and
pop
(bad)
dec
xor
inc
into
clc
arpl
sub
pop
retf
mov
aam
and
rol
repz
ins
sbb
xchg
out
fnstenv
mov
aam
dec
pop
or
and
inc
cmp
sahf
sbb
add
or
loope
call
push
aam
repz
sbb
cmp
call
enter
dec
fistp
out
push
dec
xor
cmp
ja
addr16
ins
lahf
leave
mov
sbb
test
and
(bad)
sub
lock
stos
lods
in
or
leave
xchg
or
sub
lea
mov
call
cmp
sub
push
rol
iret
mov
add
add
cmp
lea
out
or
mov
cwde
imul
push
adc
mov
fxch
xlat
jmp
cmps
arpl
loope
mov
call
(bad)
or
cmp
data16
or
jecxz
ss
aas
inc
cmc
mov
dec
or
ror
and
pop
and
jbe
hlt
push
mov
sub
jns
clc
movs
out
call
sahf
jmp
es
je
outs
ds
xor
nop
mov
xchg
stc
sub
and
push
sbb
xor
stc
add
and
mov
adc
sub
pop
ins
jns
jns
pusha
dec
cmp
or
mov
inc
nop
adc
mov
inc
fild
xchg
pushf
ror
rcr
xlat
lea
cmp
jne
sbb
je
and
inc
pop
pop
mov
sub
inc
push
dec
adc
cli
fdivr
fwait
jne
(bad)
loope
adc
movs
movs
mov
sbb
mov
pop
mov
jo
es
lock
xchg
sub
out
mov
or
push
jne
in
fisubr
push
xchg
cdq
jae
lds
fwait
mov
xor
push
mov
pop
or
loope
sbb
(bad)
idiv
pop
or
mov
ret
sahf
int
pop
xchg
jge
dec
jae
adc
cmp
scas
add
iret
jge
rol
pop
add
mov
pusha
outs
xchg
retf
mov
pop
fcmovu
test
into
retf
fld
popa
cmc
push
cmp
pusha
shl
lds
ss
push
pop
mov
stos
push
jg
mov
dec
push
xor
call
xchg
loopne
outs
mov
mov
push
xor
test
les
cmc
es
jl
mov
loope
nop
jno
pop
or
in
mov
cdq
pop
inc
ftst
(bad)
xchg
mov
xchg
xor
stc
out
jne
stos
jmp
cs
pop
inc
(bad)
cli
int3
push
ins
cwde
or
nop
scas
xor
adc
leave
cmp
inc
xlat
lds
or
mov
js
test
outs
jne
rcr
ja
push
push
psraw
sbb
push
or
shl
sub
jecxz
mov
jne
movs
jb
div
mov
mov
cmps
xor
xchg
jb
stos
ret
sbb
cwde
mov
outs
xlat
rcr
test
mov
popf
mov
push
cli
out
and
sbb
in
lock
mov
pop
mov
rol
cmc
scas
adc
das
dec
out
retf
(bad)
fnsave
hlt
and
nop
jno
ins
push
push
lods
pop
(bad)
retf
and
lea
sub
mov
scas
sti
push
in
loop
cdq
jecxz
in
scas
pop
stos
dec
adc
add
call
dec
fiadd
pop
push
sbb
sbb
mov
mov
add
call
mov
mov
jmp
call
sbb
lahf
lods
test
(bad)
xor
sub
xchg
fs
cmp
sbb
dec
daa
inc
adc
mov
push
xor
inc
inc
rol
clc
mov
repz
pop
and
call
ja
imul
xchg
cmp
cmps
cld
lea
fbld
aaa
sub
outs
pop
arpl
lds
std
xor
test
inc
mov
adc
js
fnstcw
or
xchg
dec
mov
lods
inc
out
fadd
lock
inc
shl
inc
cs
xor
addr16
cli
jne
(bad)
xchg
and
daa
lds
imul
gs
cmp
dec
sbb
and
adc
adc
xor
mov
scas
cdq
call
sub
mov
inc
push
and
pop
sbb
xor
sti
pop
popa
mov
and
es
jmp
mov
fcmovnb
lods
arpl
xchg
inc
test
(bad)
xor
mov
sub
data16
inc
inc
cwde
sar
or
lods
jb
mov
pop
push
push
cmp
xchg
pop
dec
out
mov
js
enter
jl
ds
mov
and
push
ret
adc
push
dec
adc
call
pop
xor
jg
xchg
mov
sbb
pushf
jl
mov
je
fwait
(bad)
(bad)
xchg
xchg
dec
movs
fs
fmul
out
out
mov
mov
cmp
jp
(bad)
mov
mov
sub
pushf
and
mov
inc
xor
sahf
dec
push
xchg
cmp
clc
inc
mov
out
mov
int
mov
xchg
out
xor
movs
or
(bad)
addr16
inc
cmp
sub
mov
mov
push
dec
in
xchg
inc
dec
mov
inc
or
fwait
mov
test
sub
mov
call
xchg
nop
sbb
push
fidiv
imul
jnp
cmps
mov
lods
mov
mov
pop
dec
in
jae
mov
or
mov
imul
test
xor
add
out
and
ss
mov
in
add
test
mov
inc
xlat
scas
or
pop
call
fist
nop
inc
add
test
cwde
pop
cmc
sbb
shr
shl
pusha
(bad)
add
int3
push
and
stos
cmps
pop
dec
ja
adc
mov
pop
sbb
mov
xor
pop
ss
inc
ds
mov
(bad)
cmp
mov
and
add
enter
dec
ret
mov
add
stos
sti
gs
jl
mov
cmp
xor
repnz
fild
adc
test
and
cmp
retf
or
enter
call
fsub
mov
cmp
jmp
mov
sbb
push
cmp
jns
adc
xchg
mov
cmp
dec
jb
jno
jo
jmp
inc
int
pop
cmps
jl
mov
(bad)
pop
xor
push
sbb
les
(bad)
add
adc
xor
xchg
cmps
push
out
sub
(bad)
les
lds
fwait
(bad)
fldenv
mov
mov
loopne
mov
xchg
fdivp
jae
scas
fwait
sbb
inc
fcmovb
and
xchg
mov
loop
xor
mov
add
inc
test
inc
outs
jl
(bad)
loope
clc
aam
adc
dec
clc
hlt
xchg
mov
sti
das
ret
or
stc
xor
pushf
mov
fs
shl
pop
cdq
cmc
mov
sub
loopne
fiadd
dec
imul
mov
lds
repnz
xchg
dec
xchg
int3
in
dec
ins
push
fnsave
push
sub
lahf
aad
cld
rcr
dec
xor
jmp
xchg
movs
xchg
ja
pop
repz
add
pushf
loopne
or
lea
stc
xchg
mov
inc
adc
add
sub
fnstsw
in
adc
mov
out
jnp
cmp
adc
sahf
dec
push
push
mov
and
xor
adc
scas
outs
cmc
cmp
lock
jns
add
je
mov
inc
jmp
clc
or
aas
push
or
punpckldq
jb
mov
test
aad
mov
in
dec
jmp
cmc
cmps
dec
and
mov
cld
push
or
xor
(bad)
shr
les
imul
cmp
(bad)
and
out
dec
mov
pop
xlat
in
push
sahf
movs
test
dec
sub
rcl
movs
les
invd
jns
xor
leave
ja
mov
fisubr
inc
ja
dec
mov
fdivr
daa
adc
stos
into
sub
xchg
pop
or
in
or
or
mov
mov
les
xor
jge
xor
mov
popf
pop
mov
sbb
fimul
inc
add
int3
aas
inc
add
loope
jo
movs
add
mov
das
(bad)
jmp
loope
je
xchg
not
and
jbe
pop
sbb
pop
ret
movs
addr16
in
jne
cwde
push
lods
jecxz
mov
cmp
mov
cdq
into
call
gs
add
inc
rcr
popf
fmul
out
test
cs
int
adc
daa
xor
daa
inc
add
fisttp
mov
je
jno
(bad)
in
sbb
out
mov
cld
fdiv
dec
call
std
pusha
adc
dec
jne
outs
outs
mov
sar
jmp
arpl
sbb
jmp
pop
repnz
lahf
loopne
sub
shl
aaa
mov
js
in
inc
sub
jmp
push
jae
arpl
pop
adc
jae
loope
mov
ins
inc
or
fwait
inc
sbb
test
mov
xchg
pop
ret
ret
repnz
push
ins
in
mov
adc
mov
outs
aam
fstp
and
mov
jl
iret
ins
adc
sub
hlt
dec
mov
xchg
or
jle
setp
push
mov
jg
jae
daa
xchg
cld
sar
stos
pop
push
stc
and
cmc
mov
in
div
iret
(bad)
mov
je
dec
ret
mov
and
dec
cmp
mov
int3
or
push
dec
and
test
cmp
imul
sbb
js
cmp
test
(bad)
cmp
mov
cmps
fadd
add
dec
adc
xchg
pop
inc
ficom
sbb
jo
inc
aaa
jmp
mov
out
lods
ret
mov
test
mov
and
loop
mov
stc
loop
(bad)
inc
adc
mov
clc
movs
rol
cs
dec
sbb
pop
retf
mov
sar
jg
jle
and
mov
adc
mov
pop
fcom
adc
jmp
cdq
lock
(bad)
stos
inc
in
jmp
push
rcl
std
sbb
push
or
xchg
sbb
(bad)
jnp
push
inc
dec
inc
lods
sub
jmp
push
dec
pop
push
ficom
jge
daa
stc
cmps
jnp
daa
mov
sub
in
jle
test
inc
enter
jle
dec
lods
lods
iret
dec
enter
call
imul
cmp
jo
cmps
test
lahf
and
dec
mov
das
in
fistp
mov
in
stos
xchg
mov
call
mov
loopne
in
and
aad
push
push
lods
scas
push
int3
pop
scas
repnz
adc
iret
in
rol
push
ins
jmp
jge
jb
push
dec
cmp
mov
push
adc
or
rcl
ds
pop
pusha
lahf
or
leave
mov
scas
push
mov
aaa
jns
sbb
idiv
or
jo
leave
push
cmp
popa
mov
outs
or
mov
(bad)
adc
in
enter
stc
ror
jb
imul
fisttp
out
mov
cmp
repnz
test
cld
sti
pop
inc
sar
out
cld
xchg
movs
pop
mov
lahf
jmp
(bad)
movs
xor
scas
dec
inc
mov
cmps
ror
icebp
cmp
and
or
outs
or
js
jecxz
jnp
adc
xor
sub
jno
pop
xlat
je
xor
xchg
jae
mov
fiadd
hlt
xor
divps
(bad)
call
aas
jmp
or
and
dec
add
ja
fst
and
out
xor
aad
sahf
pushf
pop
ficom
adc
movs
in
pop
sub
test
xor
xchg
push
clc
int3
ret
cmps
mov
inc
js
out
lea
iret
xchg
or
pop
ror
mov
adc
imul
ja
jmp
jle
call
jp
cmp
or
arpl
mov
movs
iret
and
xor
push
clc
stos
inc
add
out
outs
cmp
stc
fwait
sub
cmps
popa
cli
lods
aam
outs
push
mov
fcomp
xchg
cmp
pop
and
cs
rol
cmp
xor
cdq
mov
(bad)
fdivr
sbb
jo
push
sti
mov
js
scas
pop
mov
lods
pop
push
push
ror
mov
lods
mov
(bad)
and
xchg
xchg
cwde
mov
mov
jns
jl
dec
ficomp
fdivr
sub
mov
mov
pop
nop
aaa
addr16
scas
mov
sbb
mov
push
(bad)
popf
mov
jl
dec
xchg
icebp
pop
pop
pusha
cmc
jno
(bad)
xchg
inc
out
dec
data16
stc
inc
iret
mov
mov
xchg
mov
mov
das
xchg
jno
int3
movs
mov
jg
jp
jl
mov
mov
inc
movs
pop
sub
call
enter
jb
cdq
jecxz
and
and
imul
cmp
or
or
and
cdq
fistp
mov
daa
shl
mov
outs
adc
adc
iret
leave
or
idiv
ins
push
stc
(bad)
xchg
aad
retf
inc
call
xor
sub
test
pop
jge
in
mov
jae
dec
cmp
cmp
jmp
and
mov
test
dec
(bad)
cmp
outs
bound
fdiv
lods
cmp
pop
enter
sub
xchg
out
aaa
stos
ret
jle
pop
inc
sbb
add
jg
movs
fcmovnu
or
repnz
ret
retf
test
in
mov
ret
mov
jmp
or
loopne
mov
lods
lock
push
pop
(bad)
adc
add
dec
stos
ret
repnz
or
outs
or
push
test
push
push
pop
inc
mov
bnd
out
jge
test
and
mov
pop
or
jno
int
push
loope
je
add
xchg
sbb
jbe
cmp
aad
inc
mov
push
ins
mov
xor
and
dec
pop
push
jbe
test
out
mov
outs
lods
and
lods
jne
xchg
pop
sub
in
jo
test
jb
inc
xor
push
pop
pop
nop
jae
test
or
sar
ds
lock
loope
mov
mov
stos
sub
les
push
and
push
push
or
mov
stos
mov
out
loope
scas
jg
mov
dec
pusha
mov
mov
nop
sbb
dec
inc
mov
(bad)
neg
in
xchg
in
arpl
test
ror
jne
mov
jge
and
sbb
push
pop
and
sub
xchg
push
jp
std
popa
iret
ins
(bad)
in
lock
(bad)
out
xchg
loop
rol
lods
loop
sub
cmp
mov
pop
std
sub
(bad)
mov
test
lahf
adc
mov
inc
push
jle
sar
daa
pop
neg
sbb
sub
dec
push
pop
scas
es
jbe
and
jp
push
outs
xchg
add
dec
clc
jb
push
jno
xor
xor
ret
push
mov
pop
sbb
xor
xchg
and
and
imul
pop
jo
(bad)
mov
ins
adc
repnz
bound
aaa
in
pop
fistp
adc
cmp
cs
aam
adc
jmp
jg
xchg
mov
sub
enter
loopne
cld
outs
or
add
xor
sahf
mov
jnp
jmp
cmp
jmp
es
mov
ss
xchg
aad
in
add
inc
neg
test
xchg
xor
ret
inc
ret
inc
mov
add
push
(bad)
shl
sub
xor
jbe
cmp
adc
jno
mov
mov
pop
mov
sub
xchg
outs
pushf
jbe
xchg
dec
loope
loope
and
inc
icebp
pushf
mov
cmc
(bad)
dec
pushf
cmc
jb
xchg
iret
jno
pop
enter
pushf
xor
xchg
mov
in
int
inc
jl
mov
mov
in
aas
and
mov
adc
das
clc
push
sbb
dec
push
and
jp
mov
imul
pop
cmp
aad
cmp
sbb
jmp
xchg
inc
aad
(bad)
dec
or
movs
push
nop
xchg
in
adc
pop
icebp
loope
inc
int3
rcr
mov
jp
div
retf
pop
jae
adc
lea
and
movs
mov
mov
inc
push
pop
sbb
mov
and
retf
inc
gs
je
rcr
js
dec
xor
ror
stos
jo
and
fldenv
sub
popf
dec
push
leave
pop
mov
retf
inc
pop
inc
cmp
mov
add
int
neg
inc
push
cmp
push
iret
jl
or
dec
mov
and
mov
popf
mov
xchg
xchg
scas
mov
ror
cmc
dec
fnstenv
sbb
sbb
pop
pop
test
mov
das
bound
xor
cmps
push
ror
repnz
pop
xor
jo
ja
xchg
mov
(bad)
mov
mov
push
fisub
nop
xor
aam
sahf
or
sub
or
xchg
sub
aas
ins
mov
loopne
mov
sahf
scas
sbb
clc
cmps
xchg
push
push
mov
jp
loope
mov
dec
xlat
mov
xor
ja
xchg
icebp
std
in
(bad)
push
rol
in
mov
or
xchg
and
add
cmp
neg
mul
mov
cld
adc
inc
sub
adc
dec
and
(bad)
adc
fiadd
add
jmp
test
dec
icebp
js
ds
mov
add
jnp
rol
scas
add
fsub
mov
sbb
fsubr
sbb
mov
pop
shr
mov
jp
jnp
mov
les
test
test
jno
aad
ret
daa
icebp
outs
call
in
(bad)
adc
test
or
fcom
cmps
mov
in
in
xor
and
outs
push
xor
cwde
jo
sahf
add
mov
arpl
rcr
popf
sub
rol
pop
mov
into
push
mov
mov
arpl
sbb
mov
stos
adc
ins
sub
dec
test
xchg
cmc
sbb
rcr
popa
loope
cli
or
bound
adc
call
cmp
ret
adc
pusha
push
push
int
push
(bad)
adc
dec
cwde
ficomp
test
pusha
inc
dec
sub
shl
sbb
(bad)
add
jbe
mov
aas
je
cmp
lods
loopne
inc
popa
fdivr
dec
lds
movzx
ret
sti
daa
dec
pop
repz
cmc
mov
cli
push
cli
adc
(bad)
in
(bad)
in
cmp
repz
mov
xor
inc
pop
xor
div
pop
sbb
call
jb
(bad)
stos
rcr
sbb
inc
test
mov
and
mov
loop
daa
js
sbb
ja
inc
dec
stos
aas
pop
cmp
or
sub
cmp
loope
das
cwde
mov
shl
xchg
out
nop
aad
mov
daa
(bad)
scas
xchg
jge
jns
mov
(bad)
inc
jns
mov
inc
mov
lods
fstp
cmc
fucomp
test
in
xchg
neg
cmp
repnz
add
into
sti
addr16
jmp
bnd
pop
ja
or
pop
push
nop
mov
jl
sbb
out
pop
fnstcw
adc
repnz
xchg
retf
out
arpl
jg
pop
popf
xchg
sbb
cmps
push
jg
fld
(bad)
sub
push
dec
fisttp
xchg
lods
xchg
cmc
mov
pop
fisttp
sub
push
jne
cmp
dec
xchg
adc
xor
(bad)
sub
popf
inc
add
ins
loope
add
dec
xlat
inc
inc
stc
(bad)
fidivr
mov
jae
sub
in
ins
test
dec
pop
xchg
inc
adc
inc
xchg
and
int3
mov
(bad)
jg
or
shr
mov
xchg
push
add
pop
mov
sti
cmp
and
mov
das
out
out
add
js
clc
add
mov
mov
and
(bad)
cmp
or
aas
lahf
(bad)
js
je
pop
mov
mov
ficomp
xlat
mov
xor
test
cmps
cli
and
xchg
popf
nop
fisubr
mov
mov
int
lods
int
ins
rcl
jp
(bad)
repz
mov
out
jo
adc
imul
test
stc
retf
push
lods
push
in
push
out
gs
push
cmp
dec
aad
dec
test
inc
add
jl
inc
add
xchg
add
mov
add
arpl
mov
xor
adc
xchg
scas
cmps
(bad)
in
push
push
jge
xchg
loopne
loopne
outs
push
fstp
mov
out
jl
push
or
xor
stos
or
rcl
dec
dec
jg
inc
dec
or
ret
mov
(bad)
or
pushf
push
sbb
dec
mov
nop
mov
fild
sbb
shl
xor
cli
xchg
jmp
(bad)
je
call
xchg
push
jne
dec
xchg
ret
or
call
or
imul
pop
jge
cmc
sub
push
jo
lock
cmp
inc
push
push
inc
mulps
add
cmps
call
(bad)
cmp
pop
mov
scas
inc
in
mov
in
cld
mov
xchg
lahf
cmp
jne
xchg
outs
mov
push
(bad)
inc
fmul
test
icebp
pusha
cmc
pop
cdq
clc
inc
sbb
xor
push
out
jge
popf
inc
out
pop
cmp
mov
call
mov
jb
xchg
mov
daa
inc
test
pop
mov
(bad)
xchg
inc
sbb
in
adc
rcl
inc
adc
inc
pop
push
nop
adc
sub
push
mov
popa
push
stos
repnz
and
cmc
pop
shr
(bad)
rcl
cmp
scas
dec
and
pop
imul
mov
js
sti
call
cmp
jg
cwde
daa
sub
movs
pop
out
aad
fisubr
mov
xchg
clc
fwait
aad
cs
jb
imul
(bad)
loopne
mov
dec
ret
movs
scas
mov
pop
repnz
outs
sub
aad
in
sbb
or
ja
daa
cmp
js
shl
lds
inc
inc
mov
xor
adc
cmp
adc
test
fcomp
retf
mov
(bad)
dec
lds
lea
test
inc
mov
mov
call
mov
mov
popa
idiv
pop
into
movhps
jae
pop
mov
ins
cmps
call
sti
dec
test
out
(bad)
push
leave
sbb
test
push
mov
and
mov
xchg
in
sbb
mov
(bad)
mov
sbb
loop
mov
sar
add
lahf
int3
mov
mov
pop
and
test
mov
jae
mov
cs
(bad)
retf
into
dec
jne
and
arpl
dec
jl
mov
movs
mov
fwait
pop
adc
fwait
mov
out
xchg
push
mov
fidiv
fistp
shl
pop
ror
out
cmp
ficomp
and
dec
mov
test
jmp
xor
cmp
in
and
daa
jno
dec
push
push
sub
and
pop
jl
call
mov
xchg
mov
rol
sub
cdq
jns
sub
adc
fadd
sub
xchg
mov
pop
push
in
mov
pusha
js
pop
xchg
add
push
outs
jg
sbb
hlt
ja
das
loopne
push
push
movs
aad
mov
mov
xchg
xor
bound
mov
leave
jecxz
call
xchg
popa
mov
or
push
push
ds
movs
fcomp
out
inc
call
mov
mov
lods
sub
mov
push
test
push
inc
ss
aam
mov
cmp
cmp
aad
add
inc
sub
loop
rcr
test
push
add
leave
add
sbb
inc
push
shr
push
inc
lea
mov
cld
bound
dec
lock
pop
hlt
sub
bound
or
and
pop
add
out
inc
fs
je
push
cld
mov
adc
dec
in
sub
cmp
jno
xor
jns
xchg
pushf
mov
scas
out
fbstp
fsubr
(bad)
into
mov
jae
clc
pop
push
jo
sub
imul
push
xchg
pop
and
mov
sub
add
test
sbb
ror
push
les
das
daa
ret
jle
inc
adc
push
cmp
adc
outs
mov
movs
aaa
retf
dec
mov
js
and
inc
lods
jo
jne
adc
cmp
inc
sbb
stos
ds
and
mov
out
cmp
call
adc
popf
inc
sbb
or
or
sar
mul
jp
aad
xchg
dec
test
sbb
pusha
in
rcr
gs
xor
aad
imul
or
or
cwde
rol
adc
(bad)
mov
lahf
xor
push
mov
pop
mov
arpl
push
inc
push
out
mov
ds
(bad)
jmp
dec
dec
je
shr
dec
mov
adc
push
push
jmp
popa
int
dec
mov
pop
push
ffree
(bad)
cli
adc
cwde
jecxz
pop
(bad)
sbb
cmc
mov
dec
xchg
in
aad
cmc
add
addr16
int
fs
pop
inc
cmps
mov
sti
jp
add
cli
fsubrp
shl
(bad)
(bad)
mov
pop
push
add
pusha
mov
cmp
sub
and
imul
or
adc
in
xor
ror
inc
mov
inc
jge
cs
push
test
jl
imul
fcomp
cli
in
xlat
add
pusha
sub
sbb
mov
repnz
xor
mov
pop
sub
daa
mov
mov
jle
shl
pop
pop
mov
mov
ins
movs
sbb
call
mov
int
scas
test
inc
pop
jge
and
pop
fisttp
ins
arpl
adc
int3
mov
outs
test
sbb
fwait
jmp
mov
cmp
stc
ror
idiv
cld
(bad)
stc
sub
sbb
sbb
adc
cmp
fwait
aas
mov
pop
mov
xor
xor
pop
ffreep
adc
jge
mov
adc
inc
mov
push
sbb
pop
stc
adc
jecxz
ret
and
push
jge
mov
fadd
or
in
adc
cld
loope
push
fwait
jno
int
jp
xor
adc
xchg
jb
mov
leave
adc
in
push
retf
xchg
call
repnz
or
sbb
jl
inc
inc
mov
xchg
add
mov
cdq
test
jmp
push
repz
xchg
mov
push
imul
adc
je
adc
xchg
add
mov
push
pushf
lods
loop
mov
(bad)
stc
pop
mov
and
outs
mov
or
push
aaa
push
xor
or
in
(bad)
(bad)
add
dec
push
xchg
(bad)
iret
jno
enter
call
test
in
sub
into
cmp
sbb
jne
nop
and
add
mov
fld
aam
jb
call
adc
cs
cmps
fninit
shr
push
jbe
xchg
ins
mov
mov
and
cmp
mov
fcom
jl
jle
inc
inc
jmp
mov
adc
retf
sub
(bad)
add
dec
ds
int
repz
xor
nop
cmp
(bad)
iret
and
pop
sbb
imul
shl
gs
xchg
ret
sbb
cmp
xchg
cmc
mov
pop
inc
jg
sbb
inc
sar
add
out
popf
push
push
imul
or
sti
push
jp
xchg
push
mov
shr
(bad)
outs
mov
lods
in
xchg
sub
push
aaa
cmp
fdiv
bound
dec
jbe
mov
sar
out
jne
in
lock
sub
out
adc
inc
jle
push
mov
ins
push
push
jne
mov
cmp
pop
in
sbb
pminsw
std
xor
(bad)
cmp
ins
dec
add
push
push
pop
mov
into
sbb
inc
fs
mov
inc
leave
xor
gs
pop
movs
mov
loope
ins
mov
jmp
outs
daa
test
jns
jns
or
mov
div
mov
out
rcl
mov
push
and
jp
sbb
aam
ins
jge
cli
push
jle
aas
jg
xchg
push
fist
mov
and
movs
adc
push
adc
nop
mov
outs
in
jge
in
dec
shl
sub
push
mov
push
jnp
(bad)
daa
mov
push
inc
imul
test
jno
out
cmp
(bad)
cwde
call
sub
ins
add
xchg
inc
mov
sub
mov
leave
xor
sbb
mov
adc
mov
cli
fild
test
adc
xchg
xor
scas
jae
(bad)
clc
jne
jno
pop
cmp
adc
sbb
pop
adc
jnp
and
jb
or
cmps
stc
mov
fsubr
inc
out
fisubr
retf
push
push
jne
inc
cmp
stc
or
or
add
arpl
adc
cmp
and
push
(bad)
jne
mov
hlt
(bad)
and
add
or
cmp
ret
(bad)
pop
push
in
inc
sti
clc
ins
dec
dec
xor
cmp
sbb
arpl
mov
test
add
not
dec
scas
sahf
or
ins
imul
daa
cmp
mov
mov
xlat
loope
adc
mov
mov
xlat
cdq
sti
sbb
into
adc
jnp
cmc
mov
xchg
xlat
sub
repz
xchg
jno
jecxz
ficomp
mov
je
inc
shr
mov
stc
pop
fucom
(bad)
ins
and
adc
rcr
scas
cmp
push
adc
pop
retf
pop
fnstenv
push
add
mov
dec
ins
dec
xor
mov
dec
data16
add
mov
shr
cli
out
jg
push
jg
xchg
aas
mov
data16
nop
xchg
js
in
push
lods
push
stc
repnz
inc
cmps
and
out
cmps
pop
xor
(bad)
jp
call
aam
loop
mov
mov
in
std
push
scas
int3
lds
test
mov
inc
push
inc
sbb
fcomp
out
pusha
pop
enter
pop
jne
out
or
mov
shr
mov
js
jp
inc
into
cmps
mov
(bad)
popa
imul
clc
push
fmul
jp
lds
jb
jl
leave
ds
push
push
dec
add
cdq
pop
cwde
or
(bad)
repz
int
into
jbe
adc
xlat
cdq
pushf
(bad)
jno
mov
mov
pop
ja
aam
loop
sbb
sbb
inc
cdq
neg
jnp
fistp
cmp
mov
dec
mov
xchg
(bad)
call
jge
in
xor
jae
xchg
xlat
(bad)
sbb
mov
in
sbb
fldcw
push
sbb
lods
dec
lds
cmps
pop
cmps
popf
inc
add
in
jb
clc
test
call
cmps
or
adc
jb
xchg
movs
inc
pop
retf
test
adc
dec
bound
scas
xor
mov
fdivr
xchg
dec
enter
leave
jle
cmp
je
and
sbb
mov
pop
mov
jp
je
mov
div
sbb
jge
mov
sub
retf
push
sahf
enter
add
xchg
das
push
adc
jg
and
fisub
push
lods
sbb
xchg
and
test
loope
addr16
push
stc
es
jg
xchg
jne
jmp
pop
in
dec
cmp
lea
cld
inc
std
mov
rol
retf
lds
stos
cmps
and
mov
lods
or
push
fild
push
mov
xor
sbb
inc
test
push
cmp
je
movups
xor
and
inc
mov
(bad)
pop
scas
cmp
xchg
in
ficom
into
lods
or
add
sub
inc
bound
test
in
bound
pop
xor
add
lods
scas
xchg
xor
sub
and
xchg
mov
inc
scas
shl
adc
(bad)
adc
rcr
ss
fwait
jb
adc
dec
(bad)
push
dec
dec
mov
cmp
mov
cmp
cmp
aas
int3
xlat
sbb
add
or
xor
shl
ret
iret
fisub
dec
jg
cmp
icebp
je
imul
std
sti
scas
pop
sub
sti
sbb
mov
stos
adc
jp
(bad)
add
shr
test
pop
xchg
sahf
dec
aaa
mov
add
push
call
jne
sbb
sub
sbb
inc
mov
aaa
adc
ins
mov
mov
mov
das
sub
movs
addps
loop
mov
(bad)
and
pop
push
sar
ins
push
ss
sti
inc
or
mov
js
imul
cmps
inc
iret
dec
xor
dec
add
ds
jb
xor
pop
pop
(bad)
cmc
fisub
in
cmp
fst
inc
push
inc
push
adc
mov
int
imul
inc
lea
stos
cmps
xchg
test
pop
push
pushf
cdq
stc
cmp
outs
push
lods
and
leave
shr
fild
repz
rol
dec
lahf
pusha
cmps
sub
pusha
lss
leave
xor
test
repz
pop
xchg
inc
mov
xchg
ss
pop
movs
loope
jnp
es
je
inc
and
jno
fld
stc
imul
pop
ins
sbb
fstp
push
pushf
xchg
and
repz
mov
retf
cmp
mov
xchg
fimul
sub
adc
out
pop
iret
shl
cld
out
test
out
repz
sub
(bad)
or
inc
ins
repz
fs
mov
add
sbb
test
fild
add
cld
cmp
adc
cmp
mov
scas
stos
dec
mov
sahf
push
xor
xchg
xor
sub
push
cdq
and
aaa
ret
inc
icebp
sub
push
mov
dec
inc
xchg
sub
jmp
xor
xor
arpl
mov
jl
cmp
loope
shl
shl
cmp
ds
add
leave
inc
(bad)
cli
lods
les
xchg
int
popa
xchg
mov
push
retf
jns
je
cmp
inc
jae
fistp
add
cmp
retf
clc
adc
sub
jecxz
in
mov
nop
jl
cmc
iret
dec
outs
sub
dec
jb
js
jbe
dec
dec
ret
cmp
ror
ins
mov
sub
sbb
sub
fnstcw
push
or
into
hlt
push
jo
(bad)
fmulp
adc
xchg
mov
dec
nop
std
jle
mov
(bad)
pop
sub
xchg
out
jnp
pop
add
mov
mov
arpl
and
fmul
mov
push
mov
(bad)
aaa
push
add
retf
ins
shl
xchg
fadd
test
cmp
rcr
fsub
int3
jmp
push
fucom
push
outs
fldcw
cld
cmc
ins
and
pop
or
popf
add
fbld
xor
mov
inc
xchg
fidiv
lahf
das
aas
sub
sbb
fimul
adc
mov
cmc
(bad)
jecxz
mov
or
jne
mov
sub
jmp
jbe
fwait
cmp
(bad)
(bad)
push
xchg
fwait
xor
rcl
jno
mov
clc
xor
mov
fmul
sbb
xor
scas
mov
popf
ret
movs
add
cmp
jae
or
cld
add
xchg
mov
push
push
(bad)
mov
cmc
not
mov
dec
adc
mov
xchg
pop
dec
mov
icebp
ins
fnstenv
imul
xchg
inc
ret
fxch
or
sub
iret
pop
jmp
rcr
ins
cmp
(bad)
cs
jns
xchg
cmp
xor
dec
rdmsr
and
mov
xor
mov
loope
stos
ja
jb
xor
fwait
loopne
mov
jmp
enter
mov
jae
sub
push
dec
(bad)
aaa
icebp
out
hlt
dec
xchg
sub
mov
dec
fs
movs
jg
outs
ja
in
cmp
push
pop
rcr
daa
retf
fnstcw
mov
mov
stos
shl
call
(bad)
xchg
sbb
(bad)
push
in
and
shl
(bad)
jbe
shl
cmp
mov
fdivr
pop
in
cmp
sub
out
and
cmc
dec
fmul
add
std
xor
test
cmp
aam
push
mov
xor
rcl
pop
pop
adc
sar
shl
pop
test
add
(bad)
add
or
aam
mov
mov
mov
fsubr
cld
cwde
sub
fnsave
ficomp
push
pop
pop
retf
pop
(bad)
push
fsub
ror
xchg
into
xor
out
popa
mov
daa
mov
icebp
sbb
mov
mov
cmps
xchg
jns
jno
mov
in
(bad)
test
ss
dec
pop
jns
stos
mov
cwde
sahf
in
mov
(bad)
out
mov
mov
pop
xor
push
fcomp
adc
in
or
pop
data16
or
imul
leave
sbb
ret
mov
sub
cmp
sar
loope
and
dec
(bad)
sbb
sub
popa
mov
sub
aam
jp
popf
cmp
js
loop
jae
mov
cmps
aad
stos
lods
pop
lahf
mov
(bad)
mov
sub
iret
sub
mov
jle
mov
pushf
mov
and
jae
sub
and
pop
mov
mov
sub
aam
dec
sbb
add
imul
pop
outs
add
scas
neg
mov
imul
fadd
jp
and
push
dec
inc
movs
call
jbe
jle
jae
push
call
cmp
jb
xor
shl
repz
add
repz
mov
rol
into
rol
nop
cmp
leave
sbb
xchg
in
push
in
adc
dec
and
jo
xor
xor
in
popa
xor
pop
pop
enter
and
fstp
in
xor
push
hlt
lods
fld
mov
jmp
inc
mov
mov
inc
mov
jbe
out
dec
mov
adc
add
mov
cdq
les
cli
ror
fcomp
rol
inc
ins
fstp
data16
jbe
cmp
lods
scas
call
mul
cmp
outs
add
movs
ss
mov
aas
mov
int3
stos
scas
stos
mov
push
pop
ficom
imul
cmp
call
ret
jle
sub
mov
mov
(bad)
(bad)
sbb
in
arpl
inc
outs
cmp
bound
lods
test
stos
stos
aam
mov
shr
daa
jnp
push
and
dec
jl
and
outs
je
adc
sub
dec
cmp
add
dec
mov
push
xor
cmc
sbb
stos
sar
mov
(bad)
in
lods
cld
cmps
or
add
dec
icebp
gs
pop
lds
add
fisubr
lods
mov
je
shl
fidivr
aaa
out
mov
test
ss
xor
mov
jne
jp
xchg
jp
adc
pop
mov
xchg
and
nop
test
jmp
out
data16
cmp
cmps
neg
ds
shl
aaa
adc
data16
leave
in
into
mov
mov
jmp
push
mov
or
cmp
adc
mov
or
ret
add
retf
int3
dec
push
and
mov
xchg
cmovb
in
adc
xchg
outs
mov
or
call
adc
sahf
aam
sbb
mov
dec
mov
pop
out
rol
addr16
mov
jmp
test
add
jecxz
js
das
hlt
mov
dec
rcr
(bad)
jl
adc
dec
jge
jae
sbb
fwait
ret
cmp
push
mov
or
push
imul
enter
test
lahf
and
sbb
mov
in
jg
sbb
stc
pushf
pop
aad
stos
js
xchg
mov
fs
add
fisub
loope
sti
imul
data16
je
out
mov
mov
or
jge
xchg
jmp
fisttp
dec
mov
mov
cmp
clc
and
xchg
or
inc
nop
push
pop
ficomp
out
mov
jbe
imul
es
out
cmp
(bad)
dec
inc
dec
out
cmp
pop
daa
cmp
jl
xor
out
push
jne
vmovhps
mov
jb
scas
xor
popa
stos
xchg
jl
pop
fiadd
loope
stos
xchg
enter
fsubr
adc
sar
add
repz
push
outs
sub
mov
jp
sub
ins
push
inc
out
je
pop
xchg
lods
cmc
jmp
push
iret
mov
or
xor
popa
add
fdiv
xor
adc
and
das
mov
adc
or
out
xlat
mov
movs
adc
add
aad
mov
xor
jg
and
xchg
in
daa
or
das
and
or
mov
icebp
test
cmp
mov
je
jl
inc
or
sahf
xchg
fimul
test
and
imul
int3
ss
sub
and
jmp
mov
je
adc
push
stc
out
imul
and
and
mov
outs
lahf
stos
in
out
aad
jns
pop
and
dec
(bad)
dec
jle
push
lea
xchg
ds
lds
fbld
sbb
push
inc
sbb
inc
and
ja
stc
and
rcl
cmps
mov
mov
cmp
cwde
inc
lahf
repnz
scas
mov
cmp
xor
aam
out
in
in
sbb
sbb
enter
call
rcl
lahf
inc
add
dec
inc
sub
call
pop
jge
jae
pop
ss
ja
dec
or
out
repnz
fwait
stos
test
retf
shl
jle
ret
rcr
push
mov
mov
or
out
add
jge
(bad)
pop
dec
ins
cmc
push
and
ror
cmp
jg
fild
and
(bad)
jecxz
jne
imul
jmp
pop
mov
fdiv
es
xchg
les
jmp
pop
inc
jge
je
aaa
daa
mov
rcl
dec
pop
rol
adc
out
lahf
test
stos
xlat
sbb
xor
sbb
jmp
shl
ins
ror
(bad)
mov
shl
daa
jl
mov
mov
das
das
mov
clc
sub
(bad)
xor
dec
push
cmp
iret
daa
gs
cwde
fild
aam
leave
or
ret
shr
cs
or
mov
xchg
movs
je
loope
push
mov
pusha
std
adc
popa
fist
dec
fiadd
inc
push
or
lods
xchg
sub
xchg
mov
adc
fcomp
cwde
cmp
mov
add
pop
daa
ficomp
or
mov
retf
cmp
push
dec
xor
inc
or
pushf
dec
add
inc
out
hlt
test
xchg
int3
inc
pop
pop
scas
fcmovnb
push
sub
pop
fist
aam
out
mov
push
or
mov
outs
out
not
sar
sbb
mov
call
fimul
std
rcl
cli
daa
cmps
pop
add
mov
test
push
add
cmp
jns
mov
int
sbb
push
scas
jne
mov
push
jle
push
push
lods
fxch
or
(bad)
in
les
jae
repnz
repz
adc
or
fdivr
and
loope
jmp
scas
xchg
dec
lods
mov
push
adc
test
xor
test
sbb
xchg
(bad)
js
inc
sbb
add
(bad)
mov
sub
and
dec
xor
sahf
inc
cmp
cmc
mov
sbb
cmp
mov
push
adc
inc
adc
aaa
imul
test
sbb
and
aaa
in
loope
inc
xor
loopne
call
fwait
dec
dec
and
nop
sub
jmp
push
movs
dec
and
push
mov
fcomp
sbb
(bad)
pop
out
mov
xchg
and
sbb
test
mov
dec
ins
aam
push
stc
mov
loop
lea
mov
push
push
adc
inc
lahf
(bad)
jp
add
test
repnz
std
mul
cdq
inc
cmp
lds
pop
outs
mul
sub
push
mov
(bad)
retf
lock
(bad)
pop
sub
mov
(bad)
repnz
add
xchg
adc
mov
xor
lds
cmc
pop
cli
imul
mov
push
inc
pop
nop
std
fisttp
out
sahf
pop
in
out
fwait
in
add
jns
sahf
dec
mov
out
jne
pushf
dec
fwait
mov
push
dec
sahf
leave
mov
dec
mov
je
call
jge
push
out
jo
mov
xor
sub
stc
into
mov
ss
jns
dec
fsub
leave
jne
test
(bad)
neg
test
push
imul
imul
xchg
(bad)
scas
stos
xchg
lea
ficom
outs
mov
shr
or
ds
xor
or
iret
push
xor
sbb
sbb
shl
ja
xchg
mov
loopne
pop
sahf
in
cdq
lock
idiv
ror
push
jns
dec
dec
or
pop
mov
xor
pushf
xchg
mov
jg
jns
(bad)
mov
shl
add
jb
into
and
xchg
mov
loope
daa
jmp
dec
jge
out
test
mov
lods
pop
loope
pop
sar
mov
and
dec
and
retf
aaa
push
lods
dec
(bad)
cwde
lock
xchg
imul
std
cmp
out
jmp
inc
scas
rcr
es
stos
inc
sbb
mov
ficom
cli
aas
cmps
mov
cmp
cli
dec
icebp
cmps
xlat
loope
push
lods
push
xchg
fcom
pop
cmp
cmp
sahf
or
imul
test
mov
mov
mov
or
test
adc
mov
mov
arpl
sub
rcl
out
jecxz
mov
adc
cmc
jmp
dec
jmp
mov
fmul
mov
out
aad
or
std
sti
out
std
fld
fadd
xchg
icebp
xchg
mov
mov
dec
cmp
(bad)
ret
movs
push
test
sahf
cmp
in
daa
stos
sbb
add
push
rol
in
lods
cwde
mov
out
loopne
sbb
sbb
mov
ins
pop
sub
add
and
mov
int
mov
inc
loop
mov
push
cld
adc
pop
xor
dec
test
adc
mov
mov
inc
pop
out
out
iret
repnz
cmp
pop
fsub
int
xor
sti
jl
cmp
loopne
sahf
repz
ret
(bad)
aad
jae
iret
cmp
jmp
xchg
pop
sahf
xor
aam
out
dec
push
mov
jb
add
push
into
movs
cdq
(bad)
jbe
mov
add
stc
xlat
icebp
adc
fisubr
jecxz
mov
push
test
push
push
bound
or
cmp
cmps
sub
rcl
or
jle
rol
loopne
sub
dec
pop
jmp
cmps
pop
test
sti
pop
mov
daa
int3
movs
pushf
jne
pop
xor
out
push
and
sti
les
pop
pop
fmulp
lods
inc
dec
jg
cmp
push
adc
add
or
sub
ja
lea
lea
jecxz
mov
jns
sbb
sub
jp
lea
mov
icebp
les
adc
(bad)
addr16
mov
jecxz
jb
mov
adc
leave
arpl
int
sbb
in
xor
xchg
push
dec
jo
in
pop
sbb
mov
fucomi
and
jb
fild
ds
jle
dec
mov
mov
dec
(bad)
ins
arpl
jmp
add
aam
shl
cmp
xchg
push
outs
icebp
inc
scas
mov
and
leave
cmovnp
loope
pop
je
or
jae
sti
fiadd
ins
rcr
jbe
aas
xchg
pop
scas
dec
loopne
cli
jo
jb
outs
pop
xchg
in
cwde
mov
fmul
push
aas
mov
mov
adc
(bad)
hlt
or
jnp
sub
sub
loop
test
mov
and
arpl
sub
push
pop
and
mov
push
jecxz
retf
sub
inc
and
out
sbb
pop
repnz
out
or
push
sar
adc
cli
ret
hlt
inc
aad
xor
mov
test
pop
xchg
retf
jp
imul
cmp
jbe
call
(bad)
and
pop
inc
imul
sti
jg
loop
push
repnz
dec
dec
arpl
test
pop
xor
int3
scas
xchg
adc
pop
imul
push
lahf
fld1
mov
les
(bad)
pop
pusha
rcl
jge
mov
inc
xchg
test
rcl
daa
cmp
adc
popf
pusha
xchg
aas
clc
mov
ins
mov
sbb
push
sbb
test
and
mov
call
scas
test
add
adc
test
test
jae
fwait
or
jno
or
add
es
cli
fadd
mov
pop
shr
mov
aas
out
xchg
call
movs
ja
mov
mov
les
fidiv
shl
adc
pop
shl
sub
add
cmps
xchg
mov
movs
mov
rcr
inc
sbb
fstp
sub
retf
inc
mov
ins
mov
pop
pop
adc
mov
jg
aaa
or
mov
pop
xchg
popa
fs
xor
mov
das
imul
ret
inc
lea
(bad)
sbb
outs
add
std
bnd
mov
add
or
test
aas
sub
pop
xlat
jae
adc
xor
(bad)
fild
imul
call
(bad)
ins
mov
imul
loopne
fs
inc
pop
jne
sar
into
movs
jne
shl
es
(bad)
fild
pop
inc
mov
lods
push
and
cmps
xchg
sub
mov
aam
add
mov
or
(bad)
push
nop
jmpw
adc
cs
or
inc
rcr
jge
js
mov
ins
and
and
xchg
jbe
inc
fisubr
rcr
pop
and
rol
or
push
call
or
in
mov
das
pop
xchg
arpl
sub
in
adc
mov
cmp
ins
xor
or
fwait
xor
sub
sar
fxsave
mov
xchg
xchg
cmp
dec
fst
inc
in
pop
and
stos
loopne
into
lock
out
xchg
pop
xchg
pop
cwde
push
push
(bad)
leave
dec
jl
xor
and
out
mov
aad
jb
cmp
and
ins
ins
clc
jecxz
cdq
mov
push
lods
pop
mov
xchg
jmp
mov
adc
adc
fistp
lods
in
cmps
(bad)
add
sub
retf
mov
int3
loop
fcmovu
mul
dec
jno
das
popf
sti
mov
cmp
dec
mov
push
mov
pop
sub
xchg
leave
adc
mov
jbe
push
dec
inc
fs
loop
pop
pusha
mov
sbb
cmc
sub
jmp
xchg
retf
cli
sbb
jge
fistp
fstp
ins
arpl
xchg
and
xchg
dec
retf
mov
out
mov
(bad)
movs
push
and
xchg
ss
mov
push
or
inc
xchg
and
jo
adc
sbb
or
sub
xor
ror
repnz
fcomp
fcomp
int
cmp
out
mov
sub
inc
xor
cmp
(bad)
cmp
enter
push
das
mov
cmps
pop
aad
jp
cmp
lea
pop
mov
ret
not
int3
es
mov
popa
(bad)
mov
ds
cli
inc
pop
mov
addr16
dec
pop
test
cs
jb
out
jp
jl
mov
call
sbb
inc
cmp
std
out
mov
push
xor
add
(bad)
pause
mov
add
mov
js
clc
pop
mov
xchg
dec
inc
sar
push
enter
mov
add
jns
movs
or
mov
aas
pop
push
and
in
enter
imul
fistp
out
lods
pop
push
jge
pop
xchg
(bad)
xor
or
sbb
cmc
dec
mov
dec
fcmovb
(bad)
fst
cmps
jbe
add
mov
and
xchg
fisubr
lds
sub
push
jmp
dec
dec
jns
scas
and
pop
mov
push
cwde
hlt
xchg
push
scas
aam
pop
jmp
ins
inc
xchg
in
mov
cmps
or
je
sub
push
xchg
jecxz
(bad)
fmul
cmc
and
dec
sub
loop
pop
xchg
les
pop
or
mov
pop
jle
ins
xor
jae
mov
aaa
add
pop
aas
scas
inc
pop
jno
outs
or
fldenv
push
xchg
cwde
pop
je
push
jge
(bad)
cmps
and
mov
dec
dec
and
ds
(bad)
(bad)
cmp
jno
shl
jp
jne
loop
jmp
sub
mov
jge
mov
mov
in
cli
xchg
jno
pop
jp
mov
aam
std
pusha
pop
ret
add
bound
dec
add
sub
jmp
js
and
adc
push
pop
es
mov
xor
in
mov
mov
lock
test
ret
pop
retf
inc
jno
jmp
xchg
arpl
push
mov
push
mov
push
jb
push
mov
loop
hlt
adc
pushf
xchg
test
in
jns
inc
xchg
dec
xor
rol
test
std
fisubr
pop
addr16
push
push
or
mov
cmps
stos
cmps
movs
pop
ret
jbe
data16
sti
cdq
(bad)
jecxz
xchg
imul
scas
push
xor
xor
pop
add
ja
add
jmp
dec
loope
sbb
dec
dec
xor
mov
xchg
sub
push
fist
mov
(bad)
mov
adc
sub
mov
and
sub
(bad)
lock
dec
push
dec
(bad)
push
je
mov
mov
mov
ret
adc
push
jmp
and
cwde
(bad)
sbb
jae
mov
sbb
xor
dec
rcl
mov
inc
add
loop
lods
nop
dec
or
dec
xor
(bad)
std
lods
jo
loopne
sub
dec
cmp
mov
loope
mov
dec
sti
inc
pushw
enter
push
add
mov
adc
in
xchg
ins
sbb
jmp
jnp
sbb
mov
cld
push
(bad)
jmp
mov
lds
outs
xchg
test
in
xor
std
in
lea
cmp
adc
sub
mov
inc
xor
dec
inc
arpl
lods
jmp
jg
push
xchg
push
jmp
push
outs
mov
cmp
jae
aas
sub
and
and
cmps
bnd
and
addr16
fistp
pop
stos
retf
movs
fldln2
in
les
mov
mov
js
add
and
push
daa
add
inc
aas
addr16
stos
test
mov
data16
daa
int3
cld
loop
ud0
fwait
mov
fst
adc
std
mov
call
icebp
fidiv
stc
fwait
and
mov
cmp
movs
add
jmp
pop
fimul
dec
pop
push
cmps
inc
jnp
mov
or
cmps
push
test
mov
test
ja
xchg
pop
inc
iret
jae
cmp
mov
inc
inc
mov
into
dec
sub
out
xor
jl
push
push
jg
sub
call
xlat
scas
or
mov
popa
and
aad
(bad)
sar
and
push
push
movs
push
xor
pop
ins
xor
fcom
lods
sbb
adc
push
pop
or
sbb
loope
adc
mov
dec
lds
mov
pop
sub
add
lahf
sbb
xchg
pop
cmps
gs
cmp
sub
dec
pop
(bad)
sahf
div
shr
or
push
push
fdivrp
mov
outs
arpl
adc
int
jmp
pop
inc
test
pushf
or
pop
inc
mov
mov
inc
movs
mov
clc
ins
movs
hlt
xchg
mov
pushfw
enter
push
xchg
xchg
(bad)
cmp
daa
mov
ins
call
ins
ret
popf
add
or
jnp
mov
repnz
pop
sub
sub
mov
mov
sbb
jg
leave
cmp
mov
or
add
and
dec
ja
adc
sbb
ss
fstp
and
dec
pop
stc
or
outs
mov
sub
div
sahf
dec
xor
jmp
stos
mov
repnz
ins
add
jne
in
push
pusha
ret
pop
fist
call
add
dec
cmp
scas
cmp
cmp
xchg
dec
(bad)
aam
outs
jmp
rcl
mov
pop
mov
shr
sbb
in
or
call
sbb
(bad)
xor
pop
sbb
clc
out
mov
push
ror
cmp
mov
jne
daa
ja
and
sbb
dec
cs
cmp
mov
or
ss
imul
jmp
test
aad
and
add
xchg
sbb
cmp
push
xchg
inc
and
(bad)
ins
jmp
cli
repz
inc
sub
or
push
out
mov
sbb
or
lahf
dec
push
inc
jle
(bad)
cmp
mov
fmul
pop
out
mov
push
push
sub
mov
mov
pop
in
pop
test
clc
mov
mov
test
mov
xor
push
jg
add
mov
cmp
pop
push
fidiv
rol
repnz
pshufw
dec
jge
mov
jge
mov
fiadd
in
sub
mov
clc
fucom
or
cdq
nop
mov
sbb
das
pop
and
(bad)
into
inc
xchg
and
icebp
adc
lods
and
imul
fdivrp
aam
into
and
cmp
int3
mov
adc
hlt
xor
pop
dec
outs
xchg
jecxz
imul
fs
aam
rol
fldcw
in
cmp
pop
repz
xchg
js
adc
in
mov
jne
out
std
xor
adc
mov
and
scas
push
cmp
into
(bad)
call
mov
xor
cs
lods
jne
lods
xor
and
xchg
bound
push
les
mov
or
jp
mov
pop
pop
bound
xor
mov
pop
lahf
dec
push
and
push
mov
neg
sub
aam
or
fcmovnbe
ror
or
lds
mov
mov
imul
popf
sub
and
xchg
aaa
lods
jmp
mov
xchg
pop
pop
retfw
mov
sub
xchg
aas
inc
push
add
push
ss
mov
adc
pop
mov
dec
jae
cmp
popa
or
out
movs
mov
call
fiadd
(bad)
fiadd
xor
xlat
and
and
scas
fs
mov
jb
popa
daa
pop
leave
xchg
xlat
in
push
lods
mov
data16
cmps
gs
inc
pop
inc
aam
jle
xchg
fst
pushf
jb
and
fwait
mov
in
dec
pop
or
adc
adc
inc
aaa
popf
dec
push
sbb
fcom
cs
cmp
sahf
pushf
pop
mov
les
stc
(bad)
sbb
cs
sbb
sbb
and
rdpmc
inc
(bad)
mov
mov
or
fcom
jae
neg
fadd
(bad)
fmul
mov
fsubr
mov
jmp
adc
adc
jb
iret
test
xor
pushf
xor
lods
daa
pop
xchg
sahf
mov
adc
imul
cmp
mov
jno
inc
xor
cmp
push
sti
xlat
adc
loop
dec
nop
imul
pop
test
jl
inc
inc
mov
nop
or
jbe
xor
mov
push
inc
je
out
xchg
loope
mov
dec
jo
adc
arpl
cmp
addr16
in
cmps
mov
jnp
dec
ins
mov
mov
mov
es
mov
test
push
test
dec
(bad)
push
xchg
in
pusha
xor
mov
jb
add
push
cmp
test
mov
and
or
inc
retf
(bad)
jo
inc
mov
jns
sub
cmp
ja
std
add
inc
in
push
push
lods
jnp
xchg
jg
mov
jecxz
jle
xchg
mov
sti
sahf
(bad)
adc
out
cmp
cmps
push
dec
arpl
or
cmp
mov
dec
fwait
mov
push
jmp
(bad)
das
and
idiv
pop
pop
loopne
and
out
xchg
mov
outs
arpl
sti
jns
mov
mov
sbb
add
lods
repz
mov
pop
adc
adc
push
or
cmp
sub
dec
cmp
push
sbb
rcl
(bad)
xchg
jnp
pop
dec
cli
or
fdivr
pop
sub
xchg
jmp
sub
xchg
mov
mov
out
xor
fcomp
fist
jb
inc
mov
or
sti
pop
mov
cld
mov
les
shl
adc
fxch
clc
xor
or
adc
sbb
aaa
lods
out
int3
out
iret
aam
jle
jns
daa
lahf
fcomi
lahf
mov
inc
lock
mov
inc
sub
gs
add
loopne
push
clc
xchg
rol
inc
cmp
popa
ret
out
xchg
mov
rcr
mov
ror
pop
outs
xor
sti
jb
xchg
scas
in
push
xchg
dec
popf
mov
call
dec
cmps
(bad)
push
stos
jp
xor
sar
lock
lods
lea
xchg
les
arpl
jmp
pop
enter
arpl
ins
jle
in
jo
mov
ret
sbb
icebp
pop
sub
retf
cmps
mov
push
jne
cmp
rcr
pop
cmp
ret
cli
aam
das
pop
outs
(bad)
(bad)
in
imul
xchg
aas
lock
retf
iret
cmp
jecxz
sub
push
jmp
into
hlt
add
mov
cmp
es
and
jmp
fadd
jns
pusha
mov
mov
adc
ss
loopne
shl
and
je
mov
sub
add
jle
inc
repnz
cmp
pushf
push
sbb
mov
xor
das
sar
pop
bound
movs
pop
rcr
outs
cdq
pushf
fs
outs
scas
add
in
mov
inc
or
inc
into
sub
or
inc
ja
inc
add
les
or
imul
rol
fcomp
jb
stos
mov
ins
sub
aad
sahf
lock
pop
jle
cdq
hlt
sbb
ds
outs
dec
push
jae
sub
push
neg
arpl
ret
pop
xchg
pop
mov
aas
inc
es
mov
inc
jno
cmp
jbe
push
inc
leave
les
dec
xor
ret
adc
in
mov
mov
dec
cmp
jl
shr
js
je
std
loopne
add
pop
pop
inc
mov
(bad)
shr
ins
icebp
jns
fs
xchg
sbb
dec
or
mov
(bad)
mov
nop
jmp
adc
jge
ret
out
xor
mov
iret
mov
daa
into
jle
mov
pop
adc
pop
push
pop
xor
push
sbb
xlat
inc
pop
cmp
xchg
das
outs
adc
inc
ss
call
outs
mov
jle
out
mov
or
imul
mov
ja
out
enter
leave
jmp
jle
enter
push
ficomp
push
cmp
add
aaa
scas
ins
xor
pop
stos
push
push
fwait
or
push
gs
cwde
les
cdq
mov
mov
shl
outs
mov
push
or
push
sar
imul
mov
cmp
es
std
lds
imul
in
cwde
sbb
(bad)
and
sbb
adc
adc
into
and
inc
xchg
pop
push
inc
in
mov
and
mov
add
xor
dec
dec
or
mov
sbb
or
iret
ins
in
adc
inc
(bad)
jle
jp
xchg
xor
or
stos
int
xchg
dec
into
jmp
aad
call
(bad)
icebp
mov
ret
out
mov
iret
jp
mov
stos
test
in
sbb
pop
ficom
arpl
cmps
xchg
bound
pop
push
adc
push
pop
(bad)
sbb
sbb
push
dec
sbb
xchg
js
out
push
or
cmp
leave
cmp
jbe
mov
xor
sub
(bad)
mov
pop
or
test
mov
inc
xchg
test
daa
xchg
adc
test
xchg
in
dec
pop
(bad)
sub
sbb
jnp
xor
adc
iret
jns
int3
xchg
push
mov
ins
adc
mov
jge
rcl
sub
mov
push
mov
mov
jle
mov
out
call
imul
or
xchg
cli
lods
pop
fst
cmc
pop
push
xchg
dec
repz
wrmsr
lds
cmps
mov
es
sbb
retf
fstp
pop
xchg
dec
cmp
xchg
pop
pop
cmp
dec
lea
or
ds
out
(bad)
sub
cmps
or
cwde
stos
retf
cs
sub
cdq
push
jo
cmps
add
xchg
pop
push
ins
sbb
in
jbe
push
mov
inc
adc
js
inc
jnp
mov
mov
mov
mov
shl
nop
dec
repnz
retf
xchg
inc
daa
dec
(bad)
call
sbb
sub
test
stc
and
movs
xchg
mov
sbb
push
aam
mov
inc
xlat
(bad)
sub
pushf
push
(bad)
imul
dec
mov
nop
xchg
ror
adc
addr16
xor
imul
call
ins
jnp
cmp
mov
out
enter
push
into
pop
std
xchg
fidivr
mov
add
daa
enter
fcomp
dec
and
mov
cmp
push
mov
retf
lds
pop
dec
pop
add
pop
mov
out
xor
dec
xchg
jmp
sbb
pop
test
or
cmc
jmp
ss
pop
outs
dec
mov
sbb
retf
inc
jp
shl
ja
lds
xlat
xchg
adc
sbb
stc
mov
sbb
jp
jmp
adc
sti
dec
xchg
pop
sbb
enter
scas
fld
scas
aas
sbb
sahf
(bad)
lods
scas
pop
retf
dec
jp
or
inc
inc
(bad)
pop
cmp
mov
les
out
mov
cs
mov
mul
sbb
stos
mov
adc
stos
in
mov
dec
jae
sbb
inc
sub
inc
cld
push
xor
outs
pop
cmps
loopne
push
or
sub
sbb
sub
pop
inc
(bad)
adc
ror
in
lods
repz
fsub
movs
sbb
stos
dec
or
ds
push
cmps
mov
or
sti
pop
and
dec
pop
cwde
les
sbb
add
mov
mov
je
fisubr
add
jae
cmp
push
xchg
cmp
and
test
mov
pop
xchg
or
mov
push
aad
pop
add
enter
daa
xchg
icebp
pop
aas
add
test
push
int3
cdq
adc
jmp
inc
mov
adc
and
jg
popf
inc
inc
pop
xchg
dec
leave
mov
in
loop
jnp
fdiv
lods
xchg
pop
out
jne
imul
push
dec
addr16
and
cdq
(bad)
fcmovnbe
add
test
and
ja
jns
(bad)
mov
or
jge
out
(bad)
fwait
jae
repnz
mov
aas
ficom
pop
outs
sbb
adc
fsin
into
mov
loop
std
adc
fcomp
or
mov
adc
scas
ss
sbb
adc
fimul
inc
sbb
rcr
in
adc
ins
dec
pop
and
stos
and
inc
xchg
clc
mov
je
cmp
in
inc
outs
mov
mov
mov
mov
(bad)
bound
and
mov
xchg
cmp
xchg
cmps
mov
call
xchg
sbb
mov
aaa
adc
in
xor
cmc
lock
mov
fisub
pop
call
sbb
hlt
sbb
sub
jns
scas
ficomp
inc
retf
jne
shr
inc
add
push
xor
sbb
sbb
inc
bswap
jmp
test
outs
enter
aas
frstor
ss
sub
add
jmp
call
cs
sub
adc
leave
push
mov
ror
movs
out
or
arpl
sub
pop
xor
out
cmp
cmp
sbb
inc
ins
or
sti
add
jo
sar
push
nop
aas
and
fdiv
(bad)
(bad)
adc
bnd
xlat
pop
cmp
sti
std
pop
data16
cli
sbb
dec
jmp
adc
lahf
out
and
out
and
jo
adc
test
push
jbe
shl
(bad)
adc
xchg
sar
mov
popa
xor
sbb
sub
pop
out
les
pusha
push
ds
xor
jle
or
loopne
das
and
pop
mov
push
idiv
cmp
sbb
scas
mov
sbb
mov
(bad)
mov
test
movs
sbb
xor
cmp
dec
retf
jmp
and
push
imul
push
push
and
imul
cli
pop
add
movs
xor
jg
push
push
fcomp
retf
push
xor
sub
cmp
ficomp
mov
sub
sub
jbe
sti
leave
test
lea
int
rcr
daa
xor
sub
jae
out
fist
xchg
pusha
mov
stc
das
fwait
or
clc
inc
retf
or
data16
enter
push
cmp
fimul
or
imul
mov
inc
dec
lods
push
xchg
add
hlt
movs
sub
fsubr
push
rol
mov
mov
in
mov
les
mov
ja
adc
adc
inc
test
ss
mov
mov
ja
outs
dec
add
shl
lahf
xor
sbb
xchg
dec
mov
imul
imul
scas
mov
xchg
xchg
(bad)
pushf
fistp
xchg
rcr
sbb
sbb
lea
dec
test
fistp
sbb
mov
and
cmps
add
inc
lods
loop
push
stos
pop
test
pop
mov
imul
add
dec
add
jg
add
imul
push
(bad)
shr
jge
xor
sub
call
mov
sub
xor
jmp
out
cmps
or
mov
push
mov
sub
setns
mov
fcomp
inc
mov
mov
shr
popf
scas
es
retf
mov
pop
arpl
jmp
push
pusha
sub
xchg
out
inc
popa
out
mov
add
fstp
mov
sbb
mov
jp
sbb
pushf
(bad)
loop
inc
and
(bad)
loop
adc
mov
retf
(bad)
adc
call
xor
xlat
inc
pop
pop
ret
test
xchg
pop
mov
cmp
xchg
mov
mov
or
jo
ror
scas
popa
sbb
jp
aaa
pop
sub
fmul
dec
or
test
inc
pop
cmp
jno
sub
mov
int
std
add
ds
inc
in
mov
inc
and
jle
dec
arpl
adc
sti
rcr
fistp
(bad)
cmp
cmp
in
cmp
dec
pop
jmp
imul
mov
outs
cwde
xor
addr16
pusha
mov
add
gs
cmp
push
push
jge
gs
inc
enter
push
ss
ss
test
adc
loop
mov
cld
xlat
mov
jg
mov
xchg
adc
xor
in
mov
or
or
mov
sbb
inc
push
inc
add
out
xor
js
pop
mov
sti
xor
adc
call
mov
inc
(bad)
sbb
jl
(bad)
out
jmp
cld
sub
jecxz
mov
pushf
jmp
pusha
lods
test
dec
jne
and
jle
stos
sbb
sbb
cmps
dec
popf
pop
inc
call
push
dec
shr
mov
into
jmp
jge
(bad)
outs
daa
inc
mov
mov
into
sbb
or
mov
out
jbe
jmp
xchg
cmps
xor
cmp
pop
shl
pop
sbb
cdq
cwde
xchg
push
jne
pop
cmc
ds
popf
mov
movs
cmp
popa
dec
inc
aaa
jo
and
sar
jb
repnz
adc
dec
mov
fcomp
fcomp
es
sub
ret
test
adc
xchg
or
enter
(bad)
in
mov
adc
jmp
push
jmp
or
jne
jnp
mov
xchg
dec
enter
(bad)
add
adc
ficomp
pop
mov
mul
push
ins
stc
lods
and
push
push
push
xchg
jg
shl
xor
sub
cmp
in
dec
popf
or
fstp
mov
or
subps
es
xor
loope
add
popf
push
pop
mov
inc
mov
lods
pushf
push
jecxz
xor
scas
arpl
ins
hlt
test
pop
xchg
add
sub
ins
in
or
std
adc
xchg
mov
xchg
xor
adc
rcl
stos
xor
cmp
jnp
lock
repz
into
lahf
cli
out
add
cmps
cmp
pop
sbb
ds
fcomp
mov
test
in
inc
inc
ds
fistp
popa
sti
in
adc
mov
movs
data16
add
pop
sub
ret
shr
(bad)
mov
imul
mov
mov
cmp
mov
cmps
jmp
lea
push
push
test
std
inc
adc
cmps
jae
jb
rdpmc
xor
out
mov
sbb
enter
sub
jae
push
dec
xchg
push
dec
push
xchg
arpl
loope
or
not
jl
add
mov
adc
dec
adc
sbb
jecxz
mov
stos
sub
dec
repnz
mov
pushf
xchg
(bad)
arpl
add
mov
out
or
mov
cdq
mov
ins
sti
pop
into
stos
cmps
ja
mov
test
push
or
adc
stos
push
cmp
test
dec
jmp
dec
adc
cmp
out
jnp
jecxz
xor
xchg
jl
inc
xchg
int3
jle
mov
sbb
out
in
ffree
mov
test
ss
xchg
cwde
mov
xchg
stc
or
repz
cmp
or
sbb
mov
retf
scas
dec
xor
retf
push
adc
sub
jnp
mov
pop
nop
xchg
fild
mov
movs
test
pop
push
push
movs
jmp
and
mov
push
lea
outs
cmp
pop
loopne
test
jmp
hlt
add
and
jb
inc
or
fcmovnb
dec
xchg
push
fmulp
xchg
imul
jmp
das
imul
and
push
or
fbld
xchg
and
sub
fist
popa
test
ror
out
in
rcl
hlt
call
test
mov
mov
aam
test
fdivr
inc
push
imul
cmp
out
mov
lods
dec
jmp
mov
and
movs
mov
scas
js
pop
jns
or
mov
jb
test
cmp
je
mov
test
add
sub
js
mov
inc
(bad)
pop
cmc
jnp
rcr
call
popf
xor
mov
outs
add
adc
aas
ret
push
in
adc
(bad)
loopne
(bad)
mov
pop
rol
mov
jno
dec
(bad)
cmp
in
lea
mov
in
outs
jg
ss
push
push
ret
dec
cmp
jl
cs
xchg
daa
movs
or
inc
push
cmp
fisttp
dec
repnz
sti
cld
xchg
pop
stos
inc
cld
enter
dec
mov
lea
jbe
mov
or
sti
mov
call
imul
shr
push
cmp
inc
mov
xchg
jg
mov
or
out
push
cmps
(bad)
aad
stos
pop
sbb
mov
and
dec
clc
clc
or
push
adc
movs
rol
dec
out
cmp
sub
jbe
xor
mov
pop
push
cmp
xlat
fsubr
shr
cmp
mov
int3
(bad)
dec
outs
in
loop
xor
jns
inc
scas
clc
frstor
push
jg
jno
xchg
xchg
sti
sbb
sub
push
mov
dec
dec
mov
sub
hlt
sar
jbe
(bad)
sbb
xchg
xor
jno
push
sbb
stc
outs
pop
stos
dec
mov
les
inc
dec
(bad)
fmul
dec
lar
arpl
xchg
pop
loope
mov
pop
inc
pop
adc
adc
mov
in
mov
mov
mov
push
pop
pop
aas
mov
sti
jecxz
push
mov
pop
push
dec
jnp
test
push
test
fild
fbld
mov
xor
(bad)
cmp
aas
jae
cmp
movs
(bad)
jb
add
outs
mov
cmp
into
lods
hlt
out
out
in
xlat
xchg
aad
fstp
mov
xlat
loopne
mov
cmps
xor
sbb
loop
sub
pop
in
jb
push
imul
jne
in
adc
inc
xor
arpl
cld
mov
mov
mov
mov
addr16
test
mov
inc
cmp
mov
sbb
or
inc
pop
push
jge
push
mov
sbb
es
sbb
push
xor
outs
rcl
cs
rol
jp
or
inc
loop
adc
mov
mov
out
(bad)
jne
pop
xor
jmp
dec
daa
jmp
not
mov
dec
test
xchg
mov
loopne
lods
aam
loop
std
xor
js
out
rcl
test
push
pushf
adc
fadd
sbb
or
jne
cmps
dec
mov
daa
push
les
das
les
sub
cmp
scas
ds
mov
sub
xchg
push
or
xchg
bound
test
test
push
inc
mov
lea
push
add
lods
das
mov
or
test
lea
pop
and
and
enter
xor
imul
or
stos
fnstenv
push
xchg
push
or
bound
stos
add
add
xchg
cdq
xor
inc
sbb
pusha
and
sub
xor
xor
push
jecxz
sub
mov
xchg
repnz
jmp
pop
dec
cwde
in
scas
in
bound
jmp
iret
or
sbb
push
inc
sbb
fcomi
pop
stc
add
push
dec
mov
xchg
mov
data16
cs
bound
sbb
cmp
and
mov
sub
in
add
or
jmp
and
addr16
clc
sub
rcl
mov
mov
sub
xor
fist
(bad)
push
mov
out
push
test
sub
push
out
icebp
sub
xchg
xlat
xor
retf
sti
popa
and
jecxz
mov
and
aaa
mov
inc
movs
dec
(bad)
dec
(bad)
sub
cmp
repz
movs
jmp
dec
mov
stos
cmp
or
arpl
or
push
jnp
dec
pop
jle
jmp
addr16
or
mov
lods
jb
cmp
stos
mov
or
imul
popf
ret
add
push
mov
lahf
out
dec
cmp
xchg
inc
xlat
inc
push
movs
and
jp
jns
push
je
fadd
test
in
out
mov
imul
inc
sbb
stos
das
dec
mov
jmp
imul
sub
jmp
push
imul
mov
add
cmp
xchg
cmp
mov
sbb
mov
or
xchg
dec
scas
mov
mov
jo
outs
push
jmp
cwde
call
lds
out
rcr
enter
jecxz
jb
inc
cmp
jg
push
inc
das
push
cmps
cli
mov
pop
jae
push
ret
adc
ja
outs
xchg
or
std
xchg
pusha
test
xor
push
sahf
jns
push
jmp
xor
fidivr
clc
(bad)
daa
dec
ss
dec
or
stc
mov
aam
sbb
lea
mov
mov
jmp
or
mov
sbb
jecxz
push
sub
dec
mov
loopne
sbb
clc
aaa
push
pop
or
bound
and
mov
in
test
and
stos
es
mov
inc
sub
cmp
lahf
cmp
dec
or
cwde
jns
add
jne
xor
jmp
pop
mov
mov
mov
inc
stos
movs
cli
xchg
adc
adc
shr
or
lahf
sbb
dec
imul
clc
xchg
lahf
pushf
xor
int
or
arpl
adc
shl
jne
loope
test
xor
xchg
xchg
nop
ins
fisttp
shr
fs
ins
mov
and
cli
js
sub
mov
inc
setl
push
cmp
adc
sar
xchg
addr16
jb
push
(bad)
sbb
mov
out
pop
sbb
sti
xor
dec
adc
popa
shl
and
movs
adc
js
jne
dec
movs
push
cmp
cs
jmp
icebp
push
fist
and
and
std
mov
fsubr
int3
fmul
push
das
and
sub
xchg
sub
xor
and
inc
in
cmp
data16
inc
idiv
clc
inc
je
ds
fsub
out
sub
mov
xchg
rol
loopne
inc
mov
cmps
retf
jbe
adc
mov
(bad)
out
cs
and
clc
sub
add
mov
mov
out
and
les
jmp
outs
bnd
xor
ins
stos
cmps
or
xor
retf
lea
add
jne
gs
jp
ds
mov
mov
add
jmp
scas
je
lahf
xor
xchg
xchg
ficomp
enter
hlt
je
mov
or
and
fcmovne
ret
mov
iret
jae
mov
int3
add
cmp
cmp
call
(bad)
dec
das
inc
push
dec
(bad)
inc
or
je
inc
fsubr
jno
inc
jns
adc
sbb
pop
fadd
in
jg
adc
loop
pop
jae
repnz
adc
push
cmps
je
ror
xchg
xchg
jle
stos
loop
mov
test
mov
in
mov
imul
pop
sub
std
repz
jmp
cwde
cmps
lea
mov
xchg
and
into
push
stos
lods
or
fiadd
je
sub
jo
nop
outs
fist
test
sahf
neg
add
call
rcr
popf
inc
adc
rcr
mov
jp
mov
inc
aaa
push
mov
cmp
arpl
aam
push
aam
push
mov
icebp
fidivr
neg
jmp
jg
iret
lock
push
xor
jae
in
inc
out
push
push
jg
in
sahf
(bad)
xor
xchg
jb
fdiv
enter
repz
out
addr16
mov
cli
imul
xchg
(bad)
out
retf
pusha
sub
and
mov
div
cdq
fild
jge
sahf
sti
loop
popf
scas
and
cmp
retf
mov
iret
int3
push
jecxz
ror
je
movs
add
std
push
in
inc
dec
and
pushf
cmp
mov
fist
adc
unpckhps
int3
mov
sub
mov
fstp
and
sti
jo
adc
jne
pop
jp
xchg
sub
add
adc
js
jl
test
sub
mov
das
in
fs
xor
mov
pop
jne
sbb
mov
sub
xchg
and
dec
fcomi
mov
add
adc
or
repnz
xchg
outs
mov
loopne
lods
in
je
nop
mov
xor
jne
sti
fs
add
add
sar
mov
les
mov
xchg
dec
bnd
sub
out
mov
lea
sub
outs
dec
pushf
adc
pop
xchg
jl
mov
scas
addr16
fs
lds
nop
rol
push
in
xchg
rcr
das
popf
push
inc
sub
xchg
cli
and
xchg
dec
loopne
and
pushf
nop
test
movs
adc
mov
xlat
in
aad
sub
jecxz
jg
mov
gs
lock
dec
adc
xchg
js
jmp
mov
in
mov
loopne
ret
mov
jge
pop
sbb
xor
push
push
fucomi
sbb
addr16
gs
or
ret
mov
inc
into
hlt
cmc
jno
repnz
loope
js
loope
pop
mov
(bad)
movs
adc
fcom
aam
outs
es
movs
pusha
mov
fidiv
repnz
inc
sub
in
pop
cmc
inc
jo
mov
dec
cmp
test
mov
loopne
jle
rcr
pop
xor
neg
xchg
ss
pop
mov
mov
les
sbb
jno
pop
dec
fisubr
cmps
sbb
adc
mov
mov
dec
fimul
mov
adc
stc
(bad)
(bad)
sti
cmps
movs
and
test
shr
(bad)
ins
ret
xor
sbb
out
push
push
add
jns
aaa
inc
mov
(bad)
in
popf
push
mov
retf
push
add
rol
cmps
xchg
adc
pop
ja
ds
iret
xchg
mov
pop
push
pusha
repz
push
sub
aad
test
jmp
jne
cmp
cmc
scas
fucomip
jl
pop
xchg
xor
sbb
jecxz
aaa
and
and
xchg
pop
test
(bad)
loope
pop
adc
adc
imul
mov
pop
nop
dec
fwait
ins
mov
jne
cmp
add
sbb
dec
sub
(bad)
inc
mov
mov
lds
adc
popf
mov
mov
mov
mov
pop
test
lods
or
dec
mov
icebp
adc
jmp
cmp
push
icebp
sub
or
rol
mov
out
push
xchg
in
inc
cli
pushf
jp
ds
pop
add
push
push
rcl
ds
inc
scas
daa
je
cdq
or
push
inc
cmp
mov
or
push
xchg
and
cmc
fadd
mov
popa
aaa
adc
sahf
retf
or
mov
jb
aaa
xchg
dec
rcr
adc
sar
and
mov
xchg
jnp
mov
cdq
test
jne
rol
cs
ins
outs
xchg
repnz
je
push
in
mov
fimul
in
jecxz
test
mov
fbld
inc
aaa
bound
sbb
mov
jo
mov
add
loopne
ins
ret
cs
das
call
jne
pop
lods
stos
mov
fild
icebp
jmp
pop
dec
sar
inc
test
sbb
sub
dec
jl
dec
mov
adc
xchg
(bad)
sbb
ror
and
jmp
push
aas
movs
or
add
or
inc
addr16
xchg
inc
sahf
pushf
sbb
aam
mov
and
push
or
sete
fcmove
push
sbb
xchg
and
lock
pop
or
retf
adc
rcl
xor
xor
sbb
or
movs
push
cmp
(bad)
icebp
in
push
fwait
xor
dec
lea
cld
mov
jo
fistp
repz
cmp
mov
sub
cmp
cmp
es
pop
push
xchg
dec
sar
dec
imul
add
fidiv
and
ret
std
dec
pop
ficomp
mov
mov
cli
cwde
int3
shld
movs
and
mov
sub
sbb
movs
repnz
stos
dec
add
lods
adc
push
clc
push
mov
adc
out
add
iret
addr16
into
imul
test
popf
and
stc
and
xor
xor
lahf
pop
pop
(bad)
test
leave
push
fwait
add
daa
xor
fs
xchg
push
aaa
cli
xchg
cmp
lods
adc
sub
jmp
shl
xor
loopne
gs
xor
pop
adc
jge
les
fs
push
inc
(bad)
cdq
mov
mov
inc
dec
inc
sbb
bound
adc
adc
stos
add
jmp
push
mov
mov
rcr
das
mov
jle
loope
push
movs
popa
data16
popf
xchg
push
jecxz
dec
lock
shl
mov
add
(bad)
clc
sbb
pop
dec
clc
mov
mov
mov
jmp
out
retf
cli
movs
lods
fwait
mov
adc
or
jl
adc
mov
in
lods
bound
shr
dec
retf
or
adc
in
shl
sbb
xchg
jge
inc
popf
xor
jmp
ret
loop
rol
dec
cmps
cmp
aam
xchg
sbb
pop
(bad)
adc
fadd
add
test
add
jns
dec
ins
mov
mov
sub
aaa
int
in
dec
push
imul
stos
jo
sbb
paddb
xchg
inc
loop
aas
mov
scas
test
fs
sti
inc
(bad)
add
into
pop
rol
mov
xor
inc
jnp
mov
jl
inc
xchg
inc
dec
or
icebp
mov
out
loopne
ret
adc
cmc
iret
or
shl
fild
inc
jle
arpl
mov
jns
mov
jmp
in
mov
push
mov
es
lds
xor
test
mov
xchg
setb
adc
add
out
jne
dec
push
inc
ret
inc
sti
fwait
retf
xor
fnstenv
xchg
push
adc
mov
pmaxsw
lods
outs
into
or
or
pop
(bad)
push
mov
push
fstp
fist
pop
pusha
and
jae
xor
loopne
add
lea
std
pop
inc
out
mov
sub
std
inc
das
mov
dec
les
mov
lock
inc
inc
cmp
push
fistp
xlat
xor
cmc
shl
sub
mov
ficom
dec
icebp
and
push
and
fdiv
rol
jge
mov
retf
pop
fwait
adc
dec
cwde
xchg
and
(bad)
sub
mov
fldcw
sbb
sbb
sub
ret
popf
dec
add
mov
lea
mov
je
cmp
les
lods
adc
test
fcmovu
lds
push
add
je
mov
or
adc
cmps
sub
out
scas
xlat
add
in
sub
push
xor
mov
(bad)
out
pop
xor
aam
xchg
adc
jle
movs
retf
sub
cmps
bound
mov
pop
push
mov
add
jno
out
jmp
jle
(bad)
jg
mov
push
popf
loop
mov
ds
cmc
pop
add
aas
push
ins
add
sbb
add
and
and
mov
es
mov
daa
retf
movs
stos
repnz
mov
mov
sub
call
sbb
test
iret
(bad)
fisttp
popa
aaa
xor
in
outs
mov
mov
cmps
ror
inc
into
jg
dec
sub
sbb
jecxz
jne
sar
sbb
ins
sbb
js
push
nop
mov
pusha
jg
lea
arpl
loopne
es
jae
arpl
shl
fcmovnb
dec
pop
neg
xor
dec
inc
out
cdq
clc
fs
xchg
not
mov
sub
in
lods
jge
mov
cmps
pop
int
outs
sub
push
std
and
int3
dec
push
jae
ds
std
sub
inc
(bad)
test
add
jne
lahf
mov
ss
or
fimul
jb
mov
leave
ins
xchg
call
lock
ds
sbb
mov
scas
(bad)
inc
add
inc
mov
mov
daa
adc
retf
inc
push
call
xchg
or
sahf
je
stos
(bad)
xchg
pushf
in
or
mov
push
stc
push
or
movs
fadd
js
sbb
cmp
cmp
mov
iret
out
arpl
outs
jno
enter
jae
mov
or
cmova
push
xchg
fadd
xor
mov
pop
add
push
inc
(bad)
adc
fmul
mov
aam
jecxz
stos
cld
call
xor
stos
mov
outs
stos
mov
xor
mov
cli
cs
cdq
out
ins
sub
cmp
adc
jl
or
pop
and
test
mov
dec
imul
ja
(bad)
xor
or
mov
call
lahf
lea
ss
and
(bad)
push
push
mov
jl
xor
sub
test
lahf
xchg
or
aaa
shr
call
sahf
fist
nop
push
xchg
jo
fistp
shl
and
test
mov
pop
fiadd
push
xchg
push
and
dec
cmp
xchg
cmp
jmp
int3
popf
sub
inc
loopne
mov
mov
lods
mov
lods
jmp
lfs
pop
aas
xchg
and
inc
jmp
add
mov
fwait
(bad)
cli
xor
mov
popf
xor
inc
mov
pop
cwde
ins
cmp
outs
pushf
clc
call
ror
sbb
cmp
jo
jns
push
adc
retf
in
daa
sar
dec
jns
iret
push
sub
inc
xchg
pop
mov
ficom
mov
xor
retf
adc
je
fadd
push
dec
mov
outs
or
adc
loopne
int3
in
(bad)
jecxz
js
xor
sar
std
not
aad
sbb
out
jmp
test
fisubr
lahf
repz
mov
ror
lods
push
and
cmps
adc
xchg
inc
push
xchg
push
push
push
and
cmps
cwde
jae
adc
sbb
aas
dec
push
mov
xor
jmp
xor
mov
test
adc
mov
js
bnd
or
inc
pop
push
lahf
ss
mov
mov
mov
xchg
rcr
jmp
or
sub
ret
push
mov
pcmpgtw
das
mov
(bad)
hlt
cmp
xor
xchg
out
adc
fwait
sub
mov
push
or
mov
pop
stc
bound
adc
push
data16
dec
mov
pop
lock
mov
xchg
dec
and
mov
loope
idiv
cmp
cs
es
sbb
sub
mov
pop
hlt
movs
outs
in
push
lock
push
cmp
xchg
jl
mov
int3
fwait
pop
jne
(bad)
(bad)
lea
rsqrtps
pop
xchg
add
push
ret
jb
xor
and
mov
push
lahf
test
pop
enter
js
popa
mov
push
je
sbb
fs
pop
jne
shl
ins
or
sub
add
sub
jbe
movs
mov
pop
scas
(bad)
adc
adc
imul
or
dec
jno
push
push
bound
add
push
or
ja
out
pop
ret
push
fs
cli
push
pop
add
aaa
mov
pop
push
cmc
sbb
rol
icebp
mov
or
adc
movs
shl
cs
into
test
aam
cmp
int
rcl
in
inc
out
mov
and
rol
or
iret
sbb
push
inc
ret
xor
mov
lods
add
arpl
xor
jge
retf
aam
aad
add
sub
fs
jb
and
rcl
inc
mov
arpl
out
mov
or
jo
out
adc
inc
rcl
push
jecxz
sbb
or
push
cmps
enter
ja
les
mov
and
sar
pop
in
in
out
not
dec
sbb
adc
mov
and
shl
mov
dec
cmp
cmc
cmp
push
mov
aas
test
pop
mov
cs
ds
push
jmp
mov
shl
loopne
jmp
les
adc
jne
fs
xchg
pop
pop
xchg
push
push
push
aaa
int3
test
loop
mov
repnz
div
xchg
mov
(bad)
cmp
lds
sub
or
sti
in
ss
xchg
sub
and
inc
call
popf
clc
push
scas
hlt
scas
outs
adc
sbb
cmps
and
sub
test
cmp
(bad)
loope
sti
imul
pop
mov
cmp
jne
sbb
xchg
sub
mov
inc
push
mov
jmp
aam
cmps
xor
aam
add
xchg
test
mov
mov
sub
jae
xchg
jmp
jg
ins
sbb
push
and
imul
mov
scas
dec
sub
add
data16
xor
lea
and
fwait
(bad)
sub
mov
imul
cmp
sbb
adc
pop
js
js
test
arpl
sbb
jae
imul
jnp
loop
and
lahf
sahf
mov
cmp
jle
sub
fsub
xor
push
mov
iret
or
movs
adc
mov
lea
dec
adc
pop
mov
xor
cs
gs
xchg
pop
(bad)
mov
les
pushf
pushf
lahf
aam
shr
sbb
push
std
xor
push
retf
dec
jo
das
or
lea
fadd
push
jmp
jle
fidivr
pop
xchg
cld
push
add
(bad)
out
shr
inc
mov
xor
jge
adc
vsqrtsd
(bad)
aam
mov
jne
adc
mov
and
mov
push
cmc
call
cs
mov
dec
push
add
(bad)
cmp
repz
imul
out
adc
push
cmp
call
push
jle
pop
pushf
lods
jns
xor
pushf
aas
jmp
pop
in
ds
cli
pop
inc
sbb
or
lock
xchg
mov
jnp
scas
ror
call
stos
ins
std
rcr
shl
jle
dec
dec
test
cs
ret
adc
mov
ret
(bad)
sbb
dec
jns
mov
leave
aaa
push
jmp
cs
pop
mov
pop
xchg
stos
cdq
aaa
and
push
xor
mov
push
fidivr
(bad)
push
push
or
inc
or
push
rep
movs
cmp
xchg
frstor
jae
jge
ret
mov
pop
cld
push
sbb
pushf
xchg
fnstcw
sub
(bad)
stos
push
pop
jnp
stos
cmps
xchg
retf
mov
inc
imul
sub
loopne
lea
add
jno
std
mov
sar
mov
int3
icebp
jg
push
jns
push
fidiv
mov
in
sub
iret
mov
cmp
addr16
icebp
hlt
mov
jnp
repnz
sub
jbe
fnstcw
scas
and
mov
sub
xchg
fcom
div
inc
in
dec
mov
mov
or
xor
mov
mov
loopne
xchg
outs
fistp
or
dec
mov
mov
ins
arpl
les
xchg
por
icebp
or
aad
pushf
ret
sbb
jmp
fisub
(bad)
adc
adc
mov
(bad)
xor
xchg
sub
dec
int3
or
neg
or
mov
dec
outs
inc
inc
out
adc
scas
out
and
call
sub
xor
pushf
push
jbe
cmp
inc
inc
adc
loopne
xor
cmp
push
inc
xchg
xchg
sub
das
adc
push
test
cmc
sbb
lea
cmps
push
call
mov
hlt
fistp
and
fwait
jns
mov
(bad)
or
fdiv
xchg
aas
or
mov
jmp
sub
fucomip
scas
fst
bound
add
cmc
adc
mov
pop
lds
rep
ret
nop
and
mov
daa
aam
mov
and
ror
div
push
pop
or
push
or
or
mov
cmp
add
push
cli
and
fimul
(bad)
lea
movs
aaa
mov
xlat
sti
into
dec
retf
aam
sar
pop
lock
mov
hlt
enter
or
aam
xor
push
fisub
jns
dec
push
neg
imul
push
retf
jecxz
test
push
rcl
pop
pushf
push
(bad)
gs
sub
repz
movs
mov
adc
pop
cmp
popf
push
jbe
push
ror
jle
neg
xor
sub
imul
fs
jo
mov
jge
pop
lods
xlat
and
push
fnsave
dec
bound
xchg
or
call
cdq
(bad)
adc
mov
jmp
cs
test
repz
arpl
mov
test
retf
push
test
cmc
cli
test
js
sbb
std
inc
xchg
int
daa
cmp
fsubr
or
(bad)
push
movq
nop
or
dec
movs
stos
int
xor
add
adc
fwait
and
pop
in
xor
jbe
lahf
push
sbb
je
jo
jp
mov
clc
push
push
adc
and
xchg
icebp
adc
outs
imul
imul
aas
out
xchg
xlat
int3
mov
outs
push
lea
xor
cmp
mov
test
shr
into
fnstsw
and
inc
int3
sbb
jp
and
xor
aas
mov
lods
aaa
imul
out
clc
lock
loop
cmp
and
cmp
mov
mov
mov
icebp
jo
jmp
mov
jmp
imul
inc
adc
js
jmp
ret
sbb
(bad)
or
sbb
cli
ja
jae
imul
nop
mov
test
add
scas
movs
and
fidiv
add
call
and
pop
mov
lods
test
and
pop
push
mov
mov
inc
ins
lods
shl
ret
ficom
test
dec
mov
rcl
xor
(bad)
add
sbb
push
sahf
sub
pop
adc
test
pop
test
mov
adc
xor
gs
jp
dec
dec
mov
ss
inc
xchg
leave
lock
push
out
push
sub
inc
ins
aaa
or
inc
inc
mov
pop
pusha
sub
and
loop
sahf
sub
push
in
daa
or
sbb
mov
cdq
jl
ror
sub
or
and
int3
int3
xor
push
add
outs
retf
mov
mov
pop
fwait
adc
loop
aaa
sbb
mov
int3
aam
les
dec
jecxz
rcr
inc
xchg
es
int
jecxz
xchg
push
aam
xlat
push
mov
shl
cwde
inc
out
rcl
add
jo
xor
sbb
mov
add
movs
popf
mov
arpl
in
scas
clc
out
fwait
sub
pushf
mov
test
mov
lock
push
mov
out
movs
ror
jle
jb
(bad)
pop
push
shr
lods
call
movs
or
cmp
mov
jge
jg
ret
pop
xchg
cmp
loop
sahf
jmp
inc
dec
hlt
mov
xchg
cwde
push
rcl
jle
cmp
add
cmp
movs
mov
(bad)
rcr
push
or
repz
mov
mov
add
lds
in
add
jmp
add
aad
lds
jmp
mov
xchg
lahf
jae
fidiv
js
cs
out
call
test
push
sbb
js
lds
xor
fcmovnb
add
fs
adc
sub
mov
stos
in
and
cdq
pop
lods
xchg
fwait
loop
sti
lea
je
adc
enter
popf
(bad)
and
test
leave
in
fs
mov
inc
mov
sbb
imul
inc
scas
jp
in
ror
es
cld
add
popf
mov
ins
in
pushf
and
dec
or
mov
sub
xchg
mov
lahf
popf
hlt
hlt
fs
add
inc
cwde
icebp
or
test
imul
mov
sub
cmp
and
fst
mov
loope
mov
mov
jns
call
inc
cmovae
movs
jle
repz
pop
sbb
lods
adc
div
sub
cmp
sub
pusha
mov
test
int3
cmp
xor
iret
pusha
jp
jne
or
mov
inc
cwde
ror
imul
cld
and
call
je
mov
inc
mov
mov
mov
dec
int
mov
das
xchg
ror
retf
xchg
scas
jb
repz
jbe
xchg
inc
pop
push
js
retf
ffree
into
cmp
cmp
add
xor
sahf
inc
mov
dec
pop
sahf
push
mov
push
je
std
push
sub
pusha
cmp
stos
push
(bad)
(bad)
inc
xchg
and
adc
inc
or
les
test
cmp
sbb
bound
pop
or
or
scas
cmc
dec
adc
push
imul
lahf
iret
je
cmp
lods
push
icebp
int
(bad)
loope
test
outs
dec
mov
dec
and
cmp
(bad)
mov
jmp
in
rcr
jge
cdq
jbe
dec
sub
arpl
mov
and
retf
and
pop
mov
adc
sahf
mov
and
mov
les
dec
and
jmp
adc
dec
sar
mov
xchg
push
xchg
mov
jae
shr
dec
adc
mov
or
cmp
ins
add
jle
sar
inc
je
jecxz
adc
loope
pusha
adc
(bad)
jg
xlat
xchg
mov
mov
into
mov
fsubr
ja
pop
mov
xchg
clc
jmp
mov
fstp
or
cmp
out
xchg
(bad)
pop
leave
pop
mov
aad
adc
in
add
jmp
or
inc
inc
test
ins
int3
and
fld
xor
das
xor
push
xor
(bad)
in
and
mov
add
xor
push
sbb
imul
clc
arpl
dec
fistp
adc
mov
ins
fld
daa
push
xchg
add
(bad)
fimul
mov
ret
fimul
(bad)
scas
repz
inc
dec
push
in
fist
clc
ja
rcr
push
(bad)
out
add
sub
cmps
sbb
in
and
dec
inc
lahf
ja
inc
sbb
dec
xchg
dec
sbb
aas
(bad)
pop
jne
push
imul
adc
push
xchg
mov
pop
xor
shr
cdq
jno
or
or
cdq
movs
xchg
xchg
jg
jge
sbb
hlt
lods
aad
out
test
(bad)
jb
ja
daa
add
mov
inc
cwde
xchg
test
popf
dec
pushf
or
and
push
adc
dec
inc
xchg
push
imul
out
dec
push
call
popa
mov
popf
fs
jbe
cmp
cmc
imul
fs
into
mov
jnp
pop
sahf
ret
or
test
movs
rcl
addr16
xchg
pop
sub
xchg
test
lods
adc
mov
adc
dec
pop
and
retf
and
out
sbb
sar
in
dec
xor
push
pop
pop
mov
ffreep
add
data16
lods
push
jbe
(bad)
popa
in
push
sbb
rcl
es
je
xor
and
loope
jmp
mov
pop
xchg
std
sub
xor
int
or
dec
add
das
aam
push
xor
stc
pop
mov
push
lock
mov
adc
loop
lea
adc
das
lock
inc
xchg
adc
es
xchg
jl
in
mov
adc
jge
cmps
mov
push
pop
xlat
mov
icebp
mov
adc
mov
movaps
rcr
dec
cmps
enter
shl
lahf
xchg
mov
mov
mov
clc
jecxz
inc
cmp
jp
imul
adc
inc
jg
addr16
rcl
jo
addr16
and
fisubr
std
add
mov
loopne
sar
iret
mov
(bad)
cld
pop
sub
int
pushf
aam
sub
popf
int
idiv
fwait
in
dec
dec
es
mov
scas
mov
lea
sub
mov
shl
cmc
enter
jle
retf
outs
xchg
in
mov
xchg
iret
mov
loope
dec
clc
sbb
xchg
out
fidiv
push
jae
sub
mov
or
mov
pusha
pop
xlat
sub
call
sub
mov
repz
test
cli
iret
mov
adc
nop
mov
out
adc
mov
sti
into
mov
jge
loopne
pop
imul
cmp
lods
mov
call
outs
cmps
ja
lds
fwait
jns
or
nop
out
jnp
mov
repz
aam
sbb
fmul
(bad)
mov
pop
mov
test
xchg
mov
adc
adc
inc
jne
pop
or
cmp
les
ret
or
shr
or
pushf
xchg
and
cmps
adc
retf
push
sbb
inc
mov
pop
cmp
push
inc
movs
pop
jecxz
push
mov
cdq
add
(bad)
addr16
adc
cmp
push
(bad)
xchg
xchg
(bad)
sub
inc
pop
ins
sub
repnz
neg
adc
pop
test
call
(bad)
cmp
mov
pop
ss
pop
and
ins
jge
arpl
and
pushf
adc
aad
jno
mov
icebp
fwait
cmp
dec
dec
add
test
test
mov
adc
cmp
push
div
adc
shl
(bad)
ins
in
pop
xchg
adc
cwde
hlt
into
js
xchg
jns
sub
(bad)
repnz
ficomp
std
or
std
sbb
xchg
xor
pop
ds
movs
adc
cdq
ret
pop
loop
mov
fisttp
(bad)
shl
je
mov
out
xor
jmp
loopne
adc
aad
cmps
mov
inc
dec
xor
fsub
jecxz
xchg
xchg
test
loop
je
xchg
lock
lods
jecxz
push
xchg
fld
and
push
(bad)
jno
leave
adc
hlt
test
test
nop
ret
fadd
cmovb
fist
cmp
pushf
int3
sbb
or
(bad)
retf
mov
fadd
int
fnstsw
sub
mov
xchg
scas
call
ret
ins
addr16
inc
push
pop
icebp
in
lods
cmp
mov
cmp
ds
pop
adc
jo
fisttp
sbb
or
push
mov
inc
xor
add
das
sub
mov
lods
xchg
sbb
test
retf
mov
pop
movs
pop
jecxz
mov
cli
ins
cmp
nop
mov
or
dec
in
xchg
jle
enter
das
dec
jbe
movs
inc
(bad)
fwait
xchg
(bad)
retf
mov
(bad)
and
pusha
pop
int
aaa
sbb
push
jno
scas
mov
sub
pop
push
cmp
sar
sub
(bad)
fdivr
mov
scas
loop
mov
inc
dec
loop
pop
loop
sbb
jmp
sar
(bad)
aad
es
dec
popf
xchg
out
mov
dec
jo
outs
aas
hlt
jns
(bad)
jle
sbb
inc
sbb
enter
std
push
cmc
iret
jecxz
push
leave
int3
pop
push
dec
retf
dec
jmp
or
or
and
cdq
ucomiss
sbb
jnp
jl
jo
or
and
pushf
mov
retf
mov
push
(bad)
repnz
xor
jle
inc
rcl
clc
pop
mov
mov
inc
and
inc
mov
or
jo
int3
mov
sub
adc
retf
inc
xlat
jle
mov
movs
jnp
push
aaa
sub
pop
mov
push
ficomp
xchg
jmp
jmp
cld
idiv
mov
out
mov
xlat
imul
stos
les
push
adc
out
mov
test
xchg
sbb
ret
adc
loope
push
retf
test
cmp
cmp
mov
gs
sub
jb
dec
loopne
sub
jecxz
(bad)
retf
adc
loope
sbb
pop
jno
adc
loop
xchg
push
jg
aaa
pop
ins
and
shr
in
in
test
lods
pop
arpl
jg
jmp
cmp
lods
pop
jo
loop
out
rep
in
lock
loop
sub
sahf
xchg
ins
ret
lock
jmp
push
fst
sbb
mov
cmp
cld
inc
in
pop
fadd
push
pop
and
test
mov
mov
fwait
cmp
cmp
lahf
mov
inc
lahf
ja
jnp
adc
xchg
scas
mov
sar
call
and
or
xor
push
cmps
mov
or
xor
rcr
jp
into
call
dec
aam
and
addr16
imul
mov
sub
and
mov
pop
aad
nop
sub
fdiv
lea
push
jo
into
xor
jg
add
js
cmc
hlt
mov
aas
push
ja
nop
cmp
adc
xchg
mov
mov
shl
cmps
daa
dec
gs
pop
mov
xchg
sub
outs
cmp
loope
dec
push
adc
inc
hlt
cmps
cmps
and
es
sub
push
push
into
pop
out
pop
js
hlt
fbstp
cmp
out
sub
addr16
push
rcr
sub
lea
xchg
cmc
stc
inc
int3
ins
mov
shl
into
jp
jg
mov
hlt
push
sub
fisub
dec
pop
push
jg
pop
jo
jg
or
mov
cmc
and
cmp
add
jns
popf
mov
jl
add
sub
xchg
jecxz
jns
aas
stos
je
cmps
xor
cdq
scas
movntps
inc
sahf
mov
adc
add
int
sar
jmp
add
mov
ja
sbb
call
addr16
and
sahf
(bad)
leave
jecxz
xchg
mov
loop
mov
scas
fistp
or
pop
jp
ret
sub
movs
mov
inc
mov
add
(bad)
and
jb
adc
ret
loop
inc
sub
sub
xchg
dec
jmp
cli
repz
push
or
jne
mov
mov
mov
popf
mov
and
dec
mov
mov
push
js
pop
adc
loope
pop
mov
movs
mov
push
mov
repnz
outs
in
and
mov
cld
je
push
sar
pop
fwait
pop
sub
adc
aad
mov
dec
daa
int
dec
repnz
pop
sar
inc
cs
repnz
push
sub
retf
jle
lds
xor
cmps
sub
and
(bad)
daa
repz
lods
mov
dec
sbb
xor
out
pop
or
daa
popa
push
mov
les
jp
and
rol
retf
pop
xchg
scas
or
js
in
sti
pop
pop
push
in
(bad)
jnp
mov
xchg
test
jno
xlat
mov
shrd
push
in
add
out
lods
jo
or
or
repnz
xor
pop
loopne
hlt
mov
cld
pushf
or
mov
mov
mov
xchg
stc
lahf
and
or
repz
outs
mov
pusha
or
pop
mov
xchg
mov
mov
pop
call
cdq
movs
xchg
add
in
js
leave
adc
ins
pop
inc
mov
cli
inc
push
movups
fcom
pop
fistp
adc
leave
push
jmp
cmp
ror
ins
mov
into
test
cmp
xchg
stos
popf
scas
hlt
push
int3
icebp
mov
fcmovb
inc
retf
push
and
jp
and
mov
mov
outs
out
jg
ds
pusha
jbe
and
adc
in
mov
mov
xchg
mov
inc
xchg
popa
mov
aad
pop
gs
dec
test
and
loop
test
mov
pop
xchg
iret
out
adc
sbb
sahf
in
out
std
aas
mov
or
ret
push
xor
iret
cmp
inc
call
jae
pop
mov
dec
sub
or
sub
pop
cmps
pop
cmp
psraw
and
outs
call
mov
jg
mov
push
fld
retf
mov
outs
inc
out
xor
shl
fnstenv
push
sbb
add
test
aam
push
xchg
adc
pop
movs
push
sti
mov
xor
sahf
jo
push
push
pop
pop
xor
test
adc
outs
fs
jmp
lea
mov
sub
std
and
push
jl
or
xor
xchg
aam
mov
shl
sbb
xor
fmul
js
mov
dec
jecxz
dec
and
push
push
movs
(bad)
and
mov
call
arpl
mov
and
mov
mov
fucomp
dec
xor
es
fs
push
ror
cmp
test
mov
popa
pop
fwait
xor
dec
pop
jl
sbb
sub
adc
sti
enter
cmp
lods
pusha
jns
pushf
ins
jmp
scas
jge
cmps
xor
add
aad
fwait
int3
repnz
outs
dec
cs
add
mov
ins
inc
add
mov
fild
push
mov
push
sahf
ficomp
sbb
sahf
pop
iret
or
add
inc
or
(bad)
nop
mov
mov
pop
mov
and
sub
push
push
int
scas
pop
adc
adc
mov
sbb
xchg
jmp
mov
sar
xor
and
cmp
loopne
sub
dec
jecxz
call
aaa
jno
push
xor
mov
dec
mov
jmp
leave
imul
into
cmps
jmp
je
ret
(bad)
push
pop
(bad)
mov
cmp
sti
mov
fcmovnu
adc
pop
lods
lock
sub
lds
sub
mov
ins
mov
lods
lahf
add
(bad)
mov
shl
not
mov
jmp
pop
push
repz
sbb
movs
xor
sbb
in
ss
loop
adc
xchg
or
icebp
mov
int
fimul
add
pop
rep
call
and
(bad)
jle
adc
xor
loop
inc
sbb
fs
cmps
test
inc
scas
gs
cdq
sbb
or
push
mov
mov
inc
sub
mov
inc
cli
jo
cli
xor
inc
mov
or
xor
xchg
dec
mov
xchg
jo
out
fnop
adc
imul
xchg
cmc
pop
dec
test
sbb
mov
pop
jae
pop
hlt
dec
pop
mov
xor
ins
mov
push
mov
and
pushw
inc
in
movs
mov
push
daa
mov
rol
mov
rol
jmp
mov
mov
or
or
ss
pop
out
xor
sti
add
mov
adc
(bad)
inc
loop
(bad)
mov
mov
out
push
sub
inc
cmc
push
sub
js
add
les
xchg
in
xor
and
mov
cmp
xlat
vpmuludq
mov
into
ss
js
sub
repz
lods
add
push
ja
jecxz
es
ret
retf
xchg
mov
(bad)
mov
sub
xchg
clc
daa
mov
mov
or
lahf
adc
test
push
icebp
dec
pushf
setae
jmp
movs
xchg
je
and
sub
jle
push
dec
mov
mov
pop
pop
or
dec
or
(bad)
(bad)
icebp
mov
xor
sbb
test
pusha
popa
sub
jnp
jmp
and
cmp
ret
nop
fwait
mov
dec
sub
ins
in
pop
loopne
push
jmp
add
sub
or
mov
or
mov
mov
push
push
push
push
lahf
retf
push
clc
inc
cmc
cmp
and
popf
test
fstp
push
inc
out
mov
xchg
gs
xchg
pop
ins
fnop
aam
ins
and
fcomip
push
cld
neg
outs
fiadd
or
add
jno
add
repz
sub
xchg
sbb
or
xor
mov
rcr
jmp
aaa
stos
bound
shl
daa
(bad)
lea
mov
adc
inc
xchg
jmp
rol
int3
xor
int3
imul
clc
xor
sub
call
(bad)
jge
xor
(bad)
mov
movnti
mov
call
and
popf
add
(bad)
ret
xchg
mov
sub
ffree
inc
lea
inc
lea
xchg
mov
mov
ja
dec
xchg
sub
cwde
out
shr
mov
(bad)
or
popf
jp
mov
fcom
clc
in
cmp
mov
pop
inc
movups
test
(bad)
mul
ins
aas
or
inc
push
stos
hlt
daa
pop
sti
mov
popf
test
(bad)
int3
xlat
loop
div
sbb
call
mov
push
jge
arpl
cwde
inc
scas
or
mov
hlt
dec
sbb
sti
scas
loop
push
jge
je
repz
cmp
or
push
lods
arpl
push
xlat
test
(bad)
pop
and
pop
cmc
jge
adc
test
gs
cs
outs
inc
mov
xchg
cmp
data16
iret
xchg
div
sar
pop
pop
dec
cmp
jo
mov
xor
dec
popf
rol
mov
inc
add
inc
and
neg
mov
xor
adc
jl
adc
mov
jno
sub
shr
(bad)
shl
adc
(bad)
jae
cdq
mov
ret
xor
sbb
jb
mov
or
lock
(bad)
call
lods
sar
iret
add
pop
shl
push
ds
das
adc
mov
(bad)
int3
jo
cmp
push
dec
cmp
cmp
cs
xor
(bad)
addr16
sub
jo
pop
or
dec
xchg
loopne
xor
inc
(bad)
imul
pop
jp
jmp
xor
ins
jno
xor
adc
ds
daa
jbe
cwde
inc
xor
lds
mov
inc
cmp
icebp
pop
push
lods
lods
in
fadd
mov
lds
bound
nop
cmc
add
and
in
add
push
cmp
jp
xor
xchg
and
jge
dec
dec
ficomp
xor
mov
aam
fsub
dec
mov
xlat
pop
bound
cmc
repnz
pop
add
(bad)
fdiv
or
jp
push
pop
not
pusha
(bad)
sbb
fimul
cwde
xchg
or
fisubr
and
ins
adc
out
mov
es
lds
loope
cmc
rcr
sub
mov
js
or
retf
int3
xchg
xchg
test
jns
repnz
icebp
add
test
sub
cmp
xchg
push
adc
push
sub
imul
ins
stos
sar
xor
jmp
std
cli
jl
call
ror
int
inc
inc
cmps
gs
and
jmp
push
mov
jnp
sbb
jns
repnz
jg
ins
call
test
mov
and
cdq
pop
xchg
fcmovne
sti
fst
retf
sbb
inc
test
cli
jae
outs
mov
jp
or
jb
cmps
jo
daa
and
cli
adc
push
test
jl
std
imul
or
dec
pop
cmp
shl
aas
jnp
or
lahf
dec
inc
out
in
jo
mov
std
push
fistp
cmps
popa
ins
div
sti
jne
pop
call
dec
or
mov
cmc
dec
adc
stos
xchg
mov
sub
jp
or
sbb
push
pop
cdq
mov
jp
xchg
and
or
shr
push
fdiv
stos
ret
scas
sahf
dec
jb
cmp
mov
jno
mov
popa
pop
xor
push
sub
cwde
push
mov
cld
push
psubq
(bad)
mov
cmp
jge
sahf
fsubp
cmc
push
push
inc
(bad)
out
dec
(bad)
das
inc
mov
dec
outs
cli
adc
and
mov
(bad)
sbb
jb
pop
cmp
aad
push
xor
mov
push
adc
loop
jns
add
xchg
retf
fisub
jae
and
xor
dec
out
imul
(bad)
call
hlt
and
adc
(bad)
int3
push
dec
out
dec
sbb
sbb
in
aad
std
push
push
jo
shl
sub
xlat
jno
stc
inc
jg
adc
cmc
jno
nop
(bad)
push
jne
mov
outs
and
ja
mov
nop
jnp
retf
cmps
mov
dec
xor
mov
mov
cmps
mov
scas
adc
ins
jge
je
scas
cmp
push
ret
in
aaa
xchg
aad
lods
pop
add
add
jp
pop
dec
in
sub
pop
pop
fldenv
sbb
xchg
push
jg
pop
and
repnz
ja
nop
and
pusha
push
cmp
mov
pop
int
xor
cdq
xchg
hlt
lds
sbb
jne
adc
xor
hlt
sar
xchg
dec
jle
pop
push
pop
dec
sbb
sti
sub
mov
cs
jo
cdq
add
pusha
jge
xor
xchg
and
jae
iret
jge
mov
mov
scas
mov
inc
ds
cmp
sub
imul
add
addr16
pushw
sub
ret
out
xor
sbb
and
cmp
jne
dec
xchg
xchg
mul
call
pop
rcl
movs
enter
scas
dec
adc
dec
push
jno
push
loopne
or
test
je
add
rol
aam
inc
ins
cs
leave
sbb
shl
mov
jmp
add
or
test
in
(bad)
xor
jp
mov
sub
nop
ss
jmp
scas
das
leave
sub
mov
push
jp
imul
or
mov
push
out
clc
ins
mov
push
hlt
adc
mov
call
dec
jmp
xchg
push
repz
xor
enter
jnp
push
outs
cmc
test
inc
test
clc
dec
cmps
cmc
mov
pop
ror
mov
pop
icebp
fwait
xchg
push
sbb
movs
dec
cmp
pop
aam
dec
dec
sub
cld
std
loope
sbb
ja
sbb
sub
dec
cwde
lea
jmp
mov
cdq
push
inc
xor
nop
mov
xchg
scas
icebp
aaa
jmp
sub
pop
and
lock
mov
pop
or
dec
push
xor
push
lahf
xor
pop
retf
stos
jae
les
imul
and
inc
ins
jns
dec
call
call
cmps
push
jns
loopne
xchg
sub
retf
ret
xor
pop
adc
mov
and
push
ja
xor
cmps
sbb
push
jns
sbb
ss
push
jmp
xor
cmc
test
jl
sar
fld
push
xchg
popa
cwde
and
and
and
outs
mov
or
mov
scas
and
(bad)
adc
dec
cmps
(bad)
syscall
or
adc
popa
call
(bad)
mov
in
xchg
adc
dec
pop
inc
adc
add
push
xchg
mov
jae
stc
xchg
rcl
rcr
inc
cmp
ret
jg
icebp
xor
retf
cmp
shr
xchg
pop
aam
sub
inc
pushf
call
xchg
or
std
mov
icebp
imul
add
daa
xor
inc
mov
mov
outs
xor
dec
add
push
cld
pop
fwait
push
cmp
jae
add
jmp
pop
pop
sbb
mov
inc
xor
loopne
jae
into
mov
cs
jmp
pop
mov
lea
push
sbb
push
mov
fld
loop
sahf
add
shl
imul
jmp
scas
jecxz
xchg
(bad)
adc
lea
bound
pusha
pmaddwd
ins
mov
shl
test
cmp
dec
es
adc
lds
js
leave
sub
adc
jae
sbb
ret
aaa
sbb
rcl
or
cmps
add
adc
dec
cmp
mov
mov
daa
das
in
mov
mov
cmp
push
mov
adc
cwde
lea
xchg
cmp
fild
clc
sub
call
sbb
push
pop
or
or
jno
mov
out
xchg
arpl
inc
hlt
(bad)
popf
hlt
imul
pop
shr
jae
mov
xchg
mov
popa
in
sub
(bad)
jle
cmps
ffree
jp
jg
push
inc
pop
push
dec
dec
movs
bound
sub
dec
mov
not
or
cwde
les
js
test
pop
sbb
jb
add
cli
sar
cmps
and
mov
xor
neg
fdivr
loop
mov
ja
nop
xchg
dec
or
sub
enter
shr
in
sbb
jae
add
fisttp
sub
adc
sbb
dec
sub
push
jg
iret
loop
push
in
mov
inc
fild
fimul
inc
mov
jae
test
xor
clc
movs
(bad)
mov
popf
cmp
xchg
push
mov
push
pop
and
fcom
push
fidivr
lea
adc
jne
pop
pop
mov
enter
mov
dec
stc
or
in
mov
lods
out
push
int
pop
push
mov
dec
test
out
xor
in
add
fstp
movs
out
imul
add
in
aad
jmp
inc
dec
mov
push
dec
push
sub
jae
ret
imul
loop
shl
aaa
scas
(bad)
test
cld
loope
lahf
add
(bad)
cbw
cmps
call
out
stos
push
(bad)
add
sub
lods
jb
cmps
pop
mov
mov
mov
and
inc
fadd
mov
neg
cmps
sub
iret
es
adc
lods
xchg
arpl
mov
jl
out
movs
js
push
sub
(bad)
fldcw
fdivr
jmp
xlat
mov
push
inc
js
sub
lahf
push
jge
xchg
pop
aad
pop
sbb
adc
mov
xor
fisttp
or
push
add
gs
sbb
shl
std
sbb
adc
aad
adc
dec
xor
mul
xchg
push
push
loop
in
push
data16
jno
les
iret
stos
stos
mov
pop
call
cs
sub
movs
fbstp
(bad)
mul
fcomp
lahf
test
add
sbb
xor
push
adc
nop
mov
mov
jo
or
movs
arpl
(bad)
mov
xor
xlat
jmp
push
addr16
(bad)
imul
and
pop
mov
sub
and
fistp
test
cdq
dec
push
in
cmp
mov
mov
out
mov
cmp
(bad)
rol
fimul
out
mov
push
and
or
mov
push
ja
xchg
js
mov
jge
mov
add
jmp
int
aam
iret
sbb
adc
add
ror
jmp
in
push
mov
test
xbegin
ss
stos
retf
pop
sub
and
lods
dec
addr16
jbe
(bad)
pop
test
(bad)
je
sbb
or
or
div
pop
imul
dec
xor
xor
add
test
xchg
test
adc
xor
adc
arpl
jge
add
(bad)
rcl
pop
jnp
(bad)
sti
pop
(bad)
aad
xchg
jbe
nop
xor
mov
bound
mov
dec
sti
sbb
xchg
mov
jns
or
shr
push
jne
push
mov
test
and
push
dec
sub
mov
loopne
loopne
add
call
inc
div
fsubr
mov
cwde
es
mov
mov
jbe
fcomip
jle
xchg
fwait
bound
sub
push
stos
movs
stos
pop
sahf
and
sub
idiv
adc
push
cli
fmul
inc
xor
dec
popa
jg
arpl
scas
or
out
repz
(bad)
add
popf
fmul
sub
adc
adc
sar
inc
movs
cmp
mov
fwait
and
not
je
jnp
data16
ret
repnz
lods
push
xchg
xchg
imul
loopne
addr16
jge
push
xchg
mov
and
inc
stos
rcl
and
lods
cmp
mov
not
leave
mov
dec
mov
ds
popa
pop
loopne
mov
mov
mov
hlt
mov
push
js
and
or
ja
popf
push
retf
loopne
push
int3
mov
fild
and
mov
xor
pop
xchg
cli
cmp
inc
cvtps2pi
cmp
loopne
add
pop
pop
mov
ja
mov
std
cli
fbstp
scas
xchg
jae
or
aaa
pop
movs
jbe
cmp
xchg
stos
xlat
int
push
dec
push
mov
loop
pop
add
mov
hlt
inc
and
jbe
fldenv
movs
pop
ficom
test
out
leave
jl
and
ds
popf
in
neg
mov
dec
aas
out
push
retf
sub
xchg
mov
and
push
xlat
jns
out
inc
test
sahf
or
mov
out
jbe
shl
aas
out
retf
arpl
ds
cmc
test
mov
and
jle
mov
jl
scas
aad
into
int
mov
pop
jl
rcr
push
xchg
jmp
sbb
add
(bad)
mov
inc
add
rcl
call
push
ins
bnd
pop
inc
xchg
stos
lods
mov
lods
fistp
pop
pop
cmps
mov
icebp
cmp
cli
cmp
(bad)
pop
adc
push
cs
dec
adc
mov
and
mov
sbb
in
(bad)
push
in
jle
popa
nop
jnp
les
or
pusha
dec
mov
popf
mov
mov
mov
jno
(bad)
jge
stos
loop
inc
retf
scas
es
stc
das
repz
test
xor
sbb
aad
shl
cmp
movs
xchg
div
scas
sbb
xor
sub
mov
pushf
loop
in
sar
enter
(bad)
sbb
(bad)
(bad)
xchg
repz
popf
mov
jmp
js
addr16
sbb
loop
in
cmps
(bad)
sub
dec
dec
cdq
jl
(bad)
sbb
inc
push
inc
jbe
lods
(bad)
stc
cmp
out
xchg
cli
cmp
and
xchg
dec
fbstp
icebp
mov
mov
jmp
add
les
sub
mov
sub
imul
data16
mov
add
pop
imul
sbb
movs
pop
sbb
mov
ins
mov
jle
adc
loop
or
push
(bad)
inc
xchg
retf
nop
(bad)
repz
pop
mov
rcl
loopne
ret
sbb
dec
addr16
mov
mov
gs
aad
in
(bad)
xchg
rol
cmps
rcl
test
call
cli
stc
shl
aad
retf
lea
add
int3
js
inc
push
mov
or
mov
fadd
or
xor
enter
xor
repnz
rcr
in
add
xchg
(bad)
xchg
pop
add
imul
xor
dec
aas
retf
call
je
inc
pop
dec
pop
fbld
dec
add
lea
(bad)
fidiv
out
push
mov
shr
sub
inc
inc
mov
jnp
mov
pop
es
cli
xchg
push
mov
jae
or
and
fsubr
jecxz
movs
outs
or
call
addr16
stc
hlt
sar
(bad)
jnp
outs
mov
addr16
sub
push
cmc
or
lock
push
sub
cdq
into
fsubrp
ret
iret
nop
sahf
in
shl
fisttp
lods
add
bound
fist
jle
mov
or
cmps
mov
xchg
xor
add
add
sub
add
xchg
sub
stos
mov
pop
sti
lock
inc
lahf
xor
jl
xchg
in
out
sbb
push
popa
lds
dec
xlat
sub
hlt
jo
pop
or
push
(bad)
mov
push
icebp
fsubr
popf
into
repnz
mov
(bad)
out
adc
bound
scas
shr
push
mov
hlt
mov
retf
mov
imul
jo
cmp
aaa
xor
in
in
dec
push
xor
and
adc
adc
pop
loope
mov
adc
fdivr
jbe
jl
mov
jb
lea
or
scas
mov
fistp
test
pop
pop
inc
mov
(bad)
lds
sub
imul
add
xchg
ret
std
cmp
clc
push
cmp
out
into
jnp
pop
not
xor
mov
xchg
cmps
aam
add
xchg
neg
mov
push
std
inc
into
mov
out
in
or
dec
bound
dec
or
imul
(bad)
jns
jbe
xor
hlt
cmp
mov
mov
push
cmp
cmps
popa
or
leave
lahf
dec
loope
dec
jne
mov
inc
lds
outs
dec
jns
mov
fsubr
fcom
je
mul
xor
lods
cmp
push
sub
mov
xchg
pop
xor
fdivr
adc
push
movs
xor
mov
inc
mov
mov
leave
scas
pop
and
(bad)
movs
pop
xor
xchg
push
popa
mov
xchg
out
xor
jmp
mov
test
sbb
adc
fstp
sub
mov
xor
mov
popa
aam
(bad)
push
mov
ins
fs
jns
sbb
xchg
hlt
cmps
xchg
cmps
jecxz
rol
jno
leave
jo
fdiv
mov
xor
jp
and
ud0
nop
xor
fidiv
mov
arpl
mov
mov
pop
stos
pop
mov
cmp
jle
xor
sbb
mov
fwait
push
cmc
ins
pop
mov
test
xor
data16
xchg
mov
jb
add
adc
mov
jmp
xchg
sbb
nop
dec
fimul
enter
jle
push
jp
stos
ss
pop
cld
sbb
(bad)
in
ret
enter
int3
or
hlt
add
add
mov
or
cmps
ret
pop
call
outs
xor
les
sub
mov
pop
and
shl
nop
(bad)
xchg
push
pushf
push
hlt
cmp
mov
lods
movs
inc
sbb
sbb
aam
rol
push
inc
xchg
fdiv
stos
dec
adc
scas
or
push
sub
pop
shr
mov
sbb
sub
pop
dec
call
push
xchg
mov
xor
sub
mov
ss
xchg
cs
cwde
retf
pop
push
ss
jae
pusha
ret
or
mov
jle
xchg
stc
pop
mov
inc
outs
cmp
jb
pop
into
mov
jle
div
lock
dec
repz
std
cmc
jmp
sbb
pmulhw
push
mov
dec
lods
mov
in
xchg
stos
sub
outs
mov
cmp
push
inc
inc
lods
push
mov
ins
push
test
xchg
sub
sub
stos
int3
call
sbb
push
push
pushf
(bad)
cmp
je
pcmpgtb
dec
jl
sahf
(bad)
lahf
fcmovnu
xchg
imul
fnsave
les
repz
add
cs
cmc
xchg
or
inc
xor
dec
movs
mov
inc
jb
cmp
dec
jbe
jmp
sbb
in
out
cmc
hlt
ja
icebp
or
push
movs
pop
sub
jno
push
mov
xchg
stos
out
mov
loope
push
mov
js
mov
and
ja
jle
mov
pop
pop
clc
sbb
add
xor
sbb
in
and
dec
xchg
push
lock
jb
or
or
adc
mov
movs
jno
jno
int
les
mov
scas
mov
into
jbe
jecxz
mov
pop
sub
cmp
lods
xor
movs
ror
xchg
jae
jno
dec
push
clc
xor
sbb
fwait
mov
mov
or
inc
sub
and
inc
gs
jbe
movs
aam
mov
(bad)
jae
sub
sub
in
xlat
pop
add
xor
lock
shr
clc
push
adc
retf
fimul
add
imul
or
pop
rcr
mov
push
push
rcr
cwde
ror
or
fidivr
jb
pop
cmp
test
shl
les
mov
jmp
int3
pop
xchg
test
inc
or
clc
(bad)
imul
dec
shl
mov
mov
mov
jae
xor
fistp
inc
jp
pop
add
stc
cmp
iret
call
xor
mov
cs
dec
xor
retf
(bad)
mov
fild
inc
arpl
outs
jl
cmp
movs
cmc
jns
xchg
scas
xchg
fprem1
xchg
sub
cmps
fsub
jg
mov
push
aaa
push
pop
ret
outs
or
jmp
dec
jecxz
into
pushf
jbe
les
jl
jp
jmp
stos
gs
test
push
mul
jo
arpl
rcr
xchg
mov
repz
push
push
dec
inc
(bad)
and
push
xor
or
dec
cli
inc
movs
inc
fistp
or
jmp
out
jmp
jo
push
movs
out
sti
mov
jmp
icebp
xchg
lea
call
fld
jg
and
add
in
call
sub
push
cmp
cmps
xchg
mov
ins
jbe
fild
stos
scas
push
cs
pop
ins
pop
mov
fucomi
lea
pop
mov
retf
std
sbb
sub
jne
push
mov
mov
pusha
push
push
test
(bad)
sub
sbb
mov
add
cld
cmp
gs
retf
inc
out
call
mov
pop
inc
(bad)
fild
movs
out
push
mov
pop
mov
dec
inc
dec
xor
xchg
sub
push
mov
sbb
pop
cmps
jmp
imul
sub
adc
xchg
sbb
cmp
sbb
mov
mov
(bad)
dec
sub
fimul
jg
in
pop
shl
dec
mov
or
push
inc
cli
cmp
sbb
mov
loopne
shl
push
outs
into
mov
xchg
inc
(bad)
fs
push
push
xchg
dec
sub
xchg
xor
inc
add
pop
mov
jg
int
in
pop
loope
out
fisub
adc
mov
(bad)
int
imul
(bad)
lock
lds
out
or
jbe
jg
sub
rcr
fadd
cmp
jnp
and
jb
sbb
lahf
ds
push
out
loop
push
sbb
repnz
sub
push
jmp
fist
dec
ss
sbb
cmp
add
sbb
sbb
cli
leave
push
or
jb
loopne
pop
add
mov
pop
ret
dec
pushf
jno
mov
(bad)
loope
pop
out
jb
cmp
dec
(bad)
jmp
mov
adc
fisubr
aas
scas
sub
push
sub
arpl
mov
xchg
mov
pusha
in
cmp
jo
push
aas
and
repz
cdq
inc
test
pusha
fldcw
jl
outs
adc
or
dec
test
cmp
pop
xchg
xor
jl
xchg
into
or
adc
adc
in
icebp
mov
mov
pop
xchg
or
dec
xor
mov
data16
xor
push
(bad)
pop
shl
jbe
lds
xor
(bad)
pushf
je
imul
ret
cmps
lock
ds
mov
sar
in
retf
mov
icebp
mov
xchg
icebp
push
dec
sti
add
add
out
inc
xor
or
(bad)
iret
mov
xlat
popa
dec
cmp
leave
mov
imul
clc
cmp
mov
out
mov
movs
add
or
fwait
lods
sub
jmp
jnp
mov
and
mul
xchg
icebp
call
sbb
cwde
and
jns
or
and
pop
std
cmc
lods
pushf
sar
mov
cmp
push
and
pop
push
in
sahf
xchg
mov
add
inc
movs
icebp
fst
scas
mov
adc
adc
lods
aam
pop
ins
cmp
test
cmc
mov
sub
dec
mov
push
xchg
or
(bad)
fimul
adc
in
xchg
imul
or
mov
xor
mov
or
inc
(bad)
push
xchg
jecxz
inc
mov
mov
rcl
mov
ret
sub
mov
loope
xchg
jns
push
cmps
sbb
inc
ret
or
data16
push
sub
push
or
fsubr
push
cmps
aas
arpl
mov
rcr
pop
sbb
stc
mov
or
(bad)
shl
xchg
mov
sbb
xor
test
push
jmp
cmps
xlat
xchg
mov
sub
mov
stc
lahf
jno
jecxz
xor
aaa
hlt
in
into
push
mov
mov
not
fiadd
jne
leave
push
leave
sahf
and
lds
(bad)
jmp
cli
mov
mov
cmps
dec
dec
cld
scas
ror
sbb
stos
ret
jg
sbb
inc
push
out
retf
mov
jae
cdq
xor
popf
cmp
(bad)
rol
adc
add
vpmuludq
dec
call
sahf
dec
push
stos
repz
inc
mov
jecxz
cmps
push
clc
mov
(bad)
cdq
or
push
sbb
mov
push
sbb
xchg
fbstp
aam
xor
out
inc
ret
cli
(bad)
std
scas
ss
dec
or
cmps
jecxz
in
mov
and
inc
xor
sub
out
(bad)
mov
add
aas
dec
movs
jge
ins
sti
aaa
sub
imul
in
dec
xchg
mov
xchg
pusha
push
mov
mov
xchg
xlat
and
inc
push
ds
adc
ret
push
mov
dec
xchg
xlat
loope
repz
push
mov
mov
mov
shl
out
dec
paddd
push
xor
pop
icebp
push
fs
xor
ret
adc
mov
pop
addr16
out
mov
cmp
add
(bad)
mov
push
mov
jg
jo
in
std
mov
xor
nop
mov
rol
fist
leave
cmp
xor
mov
inc
push
shl
mov
imul
pop
cld
push
adc
jecxz
cmc
pop
retf
(bad)
das
out
jg
jmp
in
mov
push
stos
xor
inc
test
sbb
mov
push
xlat
fstp
mov
loopne
jnp
movs
sub
add
cs
adc
movs
pop
dec
cmp
mov
mov
sbb
xor
mov
and
out
cmp
pop
repnz
jnp
retf
pop
jno
sub
sbb
xor
dec
xchg
movs
outs
int
(bad)
aad
inc
inc
arpl
and
and
cli
jnp
shl
je
jae
xor
cmp
jne
xchg
outs
test
jo
and
cmps
mov
adc
jo
jmp
mov
add
inc
paddq
and
adc
and
jno
rcl
dec
(bad)
pop
outs
or
dec
aam
cmp
dec
es
jge
cmp
xchg
ret
sub
lea
mov
xor
push
pusha
sbb
ds
mov
mov
mov
mov
cwde
or
jo
xchg
jecxz
(bad)
(bad)
cmps
ja
mov
inc
or
pop
adc
icebp
jmp
dec
(bad)
push
(bad)
sub
mov
mov
std
fs
pop
xchg
inc
fnstenv
data16
clc
adc
xchg
and
cmp
cmp
outs
adc
into
sub
scas
sti
ins
push
mov
sub
and
cs
xchg
or
cld
dec
gs
dec
xor
mov
sub
fwait
clc
push
imul
sub
into
fcom
adc
leave
mov
icebp
mov
dec
jmp
push
neg
dec
and
cld
cld
cmps
mov
adc
pop
les
pop
cmp
sub
xchg
mov
ficom
push
mov
cmc
cmps
pop
pop
out
xchg
and
pop
pop
fidivr
jmp
loop
push
fcom
ins
icebp
push
ja
xchg
inc
push
mov
xor
jb
and
jl
mov
aas
mov
fst
outs
push
fucomi
push
xchg
xor
cmovge
out
xor
cmps
sbb
ret
(bad)
das
jmp
add
adc
and
retf
xchg
push
cmp
xor
out
mov
push
xlat
test
cwde
fist
rol
and
cmp
xchg
mov
xchg
ja
leave
adc
dec
out
(bad)
aam
adc
dec
push
aad
stos
hlt
xor
test
loope
jnp
sbb
ins
jo
and
les
iret
int
sbb
rol
jge
mov
icebp
xor
push
mov
outs
xchg
out
push
rcr
jno
pushf
xor
sub
js
das
test
(bad)
fwait
add
and
rcl
xchg
in
shl
cld
xor
jb
adc
sub
inc
add
rol
inc
leave
xchg
(bad)
call
movs
fidivr
(bad)
dec
mov
mov
scas
jo
cmp
sub
into
ss
loopne
lea
mov
push
adc
test
mov
sub
lock
loop
mov
or
mov
mov
push
hlt
pop
in
jecxz
adc
(bad)
fucomip
dec
xchg
loopne
inc
clc
dec
and
ss
jle
jle
in
pop
mov
push
clc
push
or
mov
in
ins
jl
or
retf
loop
mov
retf
(bad)
add
dec
mov
(bad)
pop
xchg
outs
sbb
jmp
(bad)
das
into
inc
push
(bad)
jge
rcr
test
jb
(bad)
loop
mov
enter
pop
mov
stc
das
dec
daa
sbb
shl
retf
mov
fwait
inc
adc
mov
sbb
dec
icebp
xlat
(bad)
cmp
pop
xor
xchg
shl
iret
inc
dec
shr
inc
push
ins
jns
popa
and
ret
aas
push
leave
imul
jecxz
hlt
fcmovnb
stos
stos
xchg
pop
or
ins
scas
ret
and
ss
loope
jecxz
pop
popa
sub
call
mov
cmps
mov
cmp
push
fidiv
sbb
or
xchg
cmps
push
sar
adc
sbb
add
cdq
mov
mov
inc
outs
or
fimul
xchg
inc
sti
jmp
(bad)
out
xlat
cwde
sahf
(bad)
push
cdq
push
shr
aas
mov
cmp
movs
push
add
lds
adc
(bad)
cmp
push
cmp
in
lds
cmp
call
mov
or
inc
or
pop
cmp
push
inc
(bad)
(bad)
jp
mov
retf
icebp
adc
ret
test
sub
imul
mov
add
push
sar
pop
ret
fcom
push
xchg
mov
fistp
ret
push
call
push
movs
fs
leave
pop
inc
cmp
cmp
leave
or
sbb
inc
pop
dec
(bad)
cli
pop
lea
loopne
clc
pusha
movs
xchg
fs
inc
loop
xlat
or
push
pushf
dec
inc
sbb
rcr
pop
lea
add
adc
(bad)
cmp
call
(bad)
fstp
pop
mov
ja
adc
shl
adc
sub
bound
mov
push
xchg
pop
jb
fs
addr16
push
shl
xchg
add
das
push
loopne
inc
mov
call
cwde
aas
movs
and
enter
inc
xchg
out
enter
rcl
data16
xchg
mov
fld
xchg
mov
mov
cmp
mov
std
(bad)
sub
out
or
(bad)
movs
popa
or
cmp
gs
mov
cmp
sub
rcl
repnz
adc
stos
neg
cmps
jmp
mov
rcr
mov
sbb
test
cs
inc
sbb
rcr
xor
and
aad
pop
inc
out
gs
jle
ret
push
scas
popa
add
push
loop
or
mov
ss
rol
and
mov
test
mov
jns
mov
or
sub
pop
mov
push
(bad)
jno
fdiv
adc
stos
mov
adc
mov
push
(bad)
stc
mov
aad
bswap
xor
popa
inc
and
ds
into
mov
std
sub
into
add
add
mov
leave
hlt
sbb
or
les
sub
push
(bad)
ficomp
cmps
pusha
stos
mov
push
ret
xor
cmps
rcl
mov
fs
sub
or
jnp
jmp
pop
jo
ror
rcl
sahf
popf
ror
jge
(bad)
out
retf
mov
sub
pop
mov
pop
cli
mov
enter
mov
imul
stos
sbb
dec
rcl
dec
in
lahf
inc
cmps
(bad)
out
sub
hlt
and
je
stc
leave
and
push
sub
nop
popa
cmp
ja
imul
ror
clc
sahf
(bad)
jge
(bad)
scas
jg
fisttp
out
jg
fsubrp
mov
call
xor
sub
pop
out
dec
push
setae
push
cmp
ins
popa
ficom
inc
push
mov
fisttp
out
stos
xchg
mov
jg
test
scas
cmc
xor
retf
out
mov
test
movs
fcomp
test
bound
(bad)
inc
shl
retf
mov
inc
xchg
xor
xlat
cli
dec
movs
retf
xor
sbb
push
sub
dec
mov
scas
ds
or
add
xor
(bad)
clc
sub
inc
xor
add
leave
dec
mov
mov
shl
xchg
loope
imul
dec
add
inc
inc
ret
mov
dec
bound
iret
rcr
adc
mov
clc
imul
lods
int
dec
pop
pop
inc
pop
xchg
test
xchg
(bad)
test
or
mov
pop
cmc
aaa
aaa
clc
mov
jl
sar
cmps
js
xchg
adc
push
jp
sub
movsx
fdiv
dec
fadd
cli
int
ret
in
fmul
sub
xchg
jns
or
add
shl
icebp
sahf
jne
int3
xchg
lahf
xchg
test
mov
or
in
leave
inc
adc
icebp
loop
mov
shl
das
mov
jo
sub
sbb
cmp
or
shl
mov
loope
dec
loop
jmp
mov
aad
cmp
jmp
dec
mov
inc
and
nop
inc
ss
(bad)
xor
aam
arpl
stc
adc
(bad)
movs
inc
shl
jecxz
xchg
std
outs
or
push
mov
cmp
call
mov
adc
iret
popf
add
fstp
(bad)
and
sub
out
jmp
stos
pop
xor
(bad)
retf
out
scas
rcr
xor
int
mov
adc
call
cmp
jbe
shr
mov
dec
aas
mov
xchg
mov
in
mov
dec
neg
xor
mov
mov
add
pop
ret
repnz
(bad)
and
add
dec
xchg
jmp
(bad)
fwait
les
pop
sbb
jg
and
cmp
pop
pusha
dec
cmp
adc
and
push
xchg
sbb
fisubr
cmps
dec
aad
fnsave
add
jl
or
das
(bad)
lahf
mov
fcom
clc
jnp
xchg
add
ror
mov
imul
inc
adc
jl
jne
dec
pop
loope
cmp
mov
pop
jp
mov
iret
mov
adc
mov
mov
adc
cli
or
mov
enter
shl
jne
in
idiv
sbb
fyl2x
adc
shl
sbb
pusha
mov
fld
(bad)
in
mov
arpl
sub
sahf
sbb
xchg
and
cmp
pop
arpl
sub
(bad)
mov
pop
cmp
or
lods
add
jbe
or
dec
xor
shr
and
mov
icebp
mov
call
nop
leave
popf
dec
ss
fimul
dec
cmp
and
cmc
in
inc
aad
xor
jmp
xor
and
sbb
sub
mov
loop
adc
push
aad
in
mov
xchg
call
push
fwait
shr
loope
call
data16
test
or
dec
scas
xchg
xchg
pushf
ja
xor
test
jae
pop
js
shl
out
stos
push
sub
lods
push
xchg
aam
dec
push
adc
fdivr
fsubr
outs
xor
xchg
sbb
dec
jno
int
jge
sub
out
sub
dec
or
xlat
movs
outs
cmps
inc
mov
ret
jns
pop
mov
cmp
dec
jae
dec
cmp
xor
ret
mov
popf
mov
loopne
xor
stc
jbe
in
pop
das
mov
rcl
lods
cmp
out
mov
popf
cmp
loopne
call
retf
cdq
mov
ror
jg
and
dec
inc
xchg
dec
outs
cmp
sbb
fist
hlt
repnz
pop
and
pusha
sahf
sbb
das
mov
cmc
mov
adc
fstp
fldenv
mov
sub
sub
in
mov
push
(bad)
imul
push
test
fdivp
cdq
xor
cmp
aas
or
movs
pop
cmp
frstor
inc
xor
cmp
mov
mov
push
cdq
cdq
mov
sub
adc
test
not
sub
int
popa
jae
das
aaa
jo
iret
test
add
sub
js
jp
call
jns
cdq
loopne
rol
dec
add
inc
sub
mov
adc
stos
add
add
sub
sbb
xor
cmp
pop
aad
dec
inc
xor
add
xchg
cmp
and
jne
push
test
stos
jno
out
cmp
int
and
mov
lds
cmp
inc
push
or
(bad)
xchg
outs
fcomp
jno
inc
adc
cmp
or
xchg
fadd
ja
pop
sub
movs
call
jbe
mov
and
sub
cs
fild
test
add
loope
mov
mov
add
cmps
dec
jecxz
test
sbb
lock
cmc
add
aad
retf
cmps
fs
adc
cdq
in
or
jp
xor
pop
sub
clc
xchg
inc
dec
dec
inc
pop
popf
clc
jge
sub
cli
aad
iret
push
xchg
mov
mov
test
adc
push
mov
outs
in
adc
pop
cmp
ret
icebp
dec
pop
jae
pop
cmps
mov
xor
out
rol
adc
(bad)
mov
mov
popf
jns
pushf
inc
mov
mov
loopne
and
test
push
aad
scas
push
into
imul
(bad)
js
repnz
bound
out
(bad)
mov
sub
xor
je
sti
cmp
mov
ja
or
push
push
and
imul
mov
xchg
ret
lods
test
cmp
xlat
scas
pop
je
sti
push
xor
xchg
sbb
add
mov
mov
stos
mov
push
int
mov
lds
shl
out
jle
mov
push
mov
pop
xor
xchg
sahf
mov
scas
xchg
mov
mov
lods
and
clc
stos
xchg
sahf
xor
mov
jae
in
ror
lods
out
mov
jmp
and
aas
jl
sbb
jae
iret
push
in
push
xchg
fbld
stos
ja
mov
jge
loop
enter
cli
push
ror
lock
in
jae
add
fisubr
and
jg
or
sub
pushf
add
or
push
cld
lock
enter
movs
scas
mov
push
adc
adc
dec
test
gs
hlt
retf
out
xchg
das
std
xchg
xor
sahf
aam
out
mov
adc
mov
add
inc
std
sub
sub
mov
mov
mov
dec
aaa
pop
es
xchg
jl
sbb
lea
out
xchg
loop
sbb
nop
sbb
call
and
xchg
iret
pop
mov
adc
clc
(bad)
rol
mov
push
add
jle
mov
pop
jecxz
in
or
inc
or
add
mov
push
xchg
mov
jp
je
and
fld
movs
addr16
push
pusha
ja
xchg
pusha
(bad)
dec
arpl
jbe
jp
sbb
push
sbb
and
sbb
mov
push
(bad)
jbe
repnz
inc
xor
ds
aad
and
test
push
scas
sbb
ss
jae
fnstenv
les
pop
int3
mul
imul
int3
pop
das
mov
pop
imul
mov
sbb
call
clc
push
sbb
and
dec
mov
xchg
xchg
stos
push
jnp
outs
(bad)
outs
adc
jecxz
in
dec
addr16
cmp
stc
cmp
in
cmp
repnz
stos
(bad)
data16
shl
in
mov
mov
push
mov
sub
push
es
ins
mov
bound
mov
lea
dec
cdq
lods
xor
pop
xchg
ja
out
xchg
add
xchg
fs
in
rol
cmp
push
mov
pushf
jg
cwde
fwait
mov
enter
xchg
dec
sbb
lahf
inc
sbb
fnstcw
xor
push
and
mov
and
cmps
jmp
mov
xchg
adc
and
push
jno
in
in
pop
add
add
lds
push
mov
mov
aam
cmp
rcl
xchg
leave
pusha
neg
adc
addr16
mov
and
mov
dec
jmp
sbb
(bad)
cmp
inc
fadd
ins
or
fcmove
popa
jmp
pop
mov
call
dec
or
scas
rcl
call
sahf
xchg
push
retf
enter
movs
arpl
xor
inc
clc
mov
int
sub
pop
out
xor
ins
std
push
(bad)
mov
pop
and
push
push
out
sahf
enter
mov
(bad)
ffree
jnp
mov
sbb
(bad)
xchg
into
icebp
push
mov
call
push
adc
jb
pop
addr16
dec
sbb
(bad)
js
fdivrp
push
add
test
gs
aam
lods
pop
(bad)
int3
push
mov
dec
retf
dec
fwait
mov
sub
or
hlt
ja
popf
mov
mov
fst
ret
fidiv
je
xchg
xor
adc
jbe
mov
jb
fisub
jmp
shl
daa
sbb
ins
cmp
ret
(bad)
mul
xor
sub
clc
mov
adc
pushf
xor
push
sbb
add
sbb
add
sub
pop
and
iret
jbe
scas
div
push
rol
jecxz
add
shl
ins
das
sub
pop
cs
pop
mov
dec
stos
dec
jle
lods
pop
es
and
test
push
fisub
inc
sub
lods
lock
out
shl
(bad)
fisttp
xor
(bad)
mov
mov
dec
jno
mov
adc
stos
in
cwde
push
aaa
sub
mov
xchg
in
fmulp
lock
inc
jle
jmp
push
(bad)
(bad)
(bad)
js
or
push
mov
out
pop
mov
mov
cli
test
stos
cmp
jae
push
sub
clc
and
cmps
enter
inc
cdq
out
and
into
mov
shr
lahf
push
std
lods
fldcw
int3
sub
int3
pop
loopne
lock
scas
ins
xor
xchg
sti
outs
cmp
sub
sub
pop
adc
dec
ds
test
test
scas
mov
mov
xchg
test
inc
push
icebp
popf
test
fnsave
xchg
(bad)
imul
push
sti
xchg
inc
xchg
push
adc
mov
xchg
mov
mov
add
mov
xor
push
inc
ja
cmc
adc
xor
or
sub
aas
push
out
xchg
daa
sub
inc
call
mov
inc
or
sub
cmp
repnz
dec
sbb
sub
sar
mov
push
pop
ret
sub
sub
cmps
or
jp
cli
pop
xor
pop
in
jo
int
sbb
std
lock
sub
(bad)
lahf
loope
adc
addr16
fwait
pushw
jge
xor
loop
sbb
ror
and
adc
pushf
pop
nop
cmc
push
dec
push
dec
mov
adc
nop
sub
or
call
dec
(bad)
push
jg
bound
mov
sub
adc
cmps
pop
cld
repz
inc
push
sti
adc
hlt
add
sahf
xor
jp
sub
jae
loope
fldenv
loop
xchg
shl
iret
push
push
sub
movs
pop
jg
jl
pop
adc
cmp
adc
jg
push
(bad)
out
outs
sbb
push
and
(bad)
push
dec
cld
fs
(bad)
mov
xchg
es
pop
shr
ins
outs
pusha
pop
sub
jl
or
add
ins
mov
sub
mov
mov
mov
xchg
ror
cmp
xor
ins
dec
pusha
mov
pop
jbe
and
mov
sbb
xchg
or
sub
or
jecxz
jmp
cwde
rcl
and
or
lahf
ror
and
call
push
shl
mov
add
mov
iret
scas
dec
enter
inc
stc
add
add
cwde
mov
cmps
and
xchg
cmp
adc
retf
sbb
pop
into
mov
pop
adc
ins
mov
popa
call
xchg
jle
stc
retf
dec
dec
jb
pop
cmp
push
hlt
sub
push
fistp
and
into
dec
fld
mov
pop
daa
sub
cmc
int3
push
rol
mov
mov
mov
(bad)
mov
cmp
je
pop
fs
cmp
stc
mov
dec
repz
inc
cwde
pushf
mov
push
test
std
mov
aaa
loopne
lea
fidiv
add
mov
mov
mov
out
jo
mov
stos
(bad)
fiadd
fadd
fst
sahf
xchg
ds
xor
xchg
loop
pop
pop
adc
mov
pop
ret
push
mov
ja
or
lods
ror
retf
jp
cmp
xchg
pop
sbb
dec
or
out
test
push
mov
jno
sub
push
mov
cmp
jbe
ret
icebp
inc
cwde
xchg
xlat
popa
sub
jnp
and
push
mov
mov
adc
(bad)
je
pop
fsubp
enter
mov
or
ss
push
sub
fwait
pop
push
cmp
push
or
mov
loopne
std
cpuid
mov
and
inc
test
icebp
dec
sub
repz
cmc
loopne
bound
les
xchg
jnp
sub
out
in
mov
mov
sub
sbb
int3
xor
or
push
mov
mov
mov
je
ss
mov
and
inc
push
mov
lds
pop
shl
imul
fisttp
mov
adc
mov
cwde
mov
inc
in
or
outs
sbb
cmp
mov
aaa
les
mov
adc
push
dec
dec
mov
and
pop
fwait
in
dec
pop
jae
ret
ds
push
push
xor
cmp
xor
xchg
jno
rol
adc
data16
into
data16
imul
ins
sbb
ret
pop
fst
popf
and
add
js
pop
xor
pop
movs
add
cs
mov
int3
push
iret
sbb
mov
xor
jl
ins
mov
adc
or
fs
fwait
sub
push
rol
(bad)
std
dec
adc
test
push
dec
jmp
cmp
sub
enter
inc
jns
sbb
js
lods
adc
cmc
adc
sbb
mov
xchg
es
mov
xor
push
adc
ret
mov
cli
hlt
sub
and
gs
cmc
pop
stos
jmp
gs
adc
ss
cmp
imul
sub
fisub
dec
jne
neg
jle
out
icebp
stc
retf
fsubr
and
cmp
sub
mov
push
ja
rep
xor
xor
cs
cld
arpl
lods
mov
ds
mov
mov
add
sub
sbb
nop
jae
test
in
aam
jge
mov
fwait
aam
xor
pop
cmc
push
pusha
lods
mov
outs
mov
dec
arpl
cmovo
test
inc
sub
nop
bound
sub
cmp
movs
addr16
ss
out
aad
mov
(bad)
add
and
cmp
pop
lahf
fiadd
xchg
cdq
retw
pusha
(bad)
sar
push
cmp
or
mov
xor
cmc
gs
jmp
pushf
lahf
add
xchg
adc
lahf
jns
xor
jmp
or
pop
inc
push
clc
test
pop
js
add
mov
mov
mov
jbe
jmp
mov
ins
xchg
ins
push
fs
cmc
xchg
adc
rol
adc
add
stc
not
add
jecxz
cmp
push
add
mul
sub
mov
clc
lea
pop
int
fs
fsubr
dec
aam
loope
pop
ror
mov
mov
and
jmp
pop
test
test
xchg
mov
push
adc
mov
xchg
push
mov
je
inc
das
js
mov
lods
in
mov
loop
mov
push
jnp
or
push
je
mov
jnp
cmp
dec
xlat
xor
mov
nop
mov
(bad)
jg
leave
dec
cmp
mov
xchg
(bad)
lock
or
and
mov
repz
ja
rcr
cli
(bad)
scas
and
add
dec
cmps
(bad)
inc
xchg
pop
scas
lods
mov
movs
sbb
lods
or
inc
data16
ja
nop
aam
addr16
repz
mov
mov
jmp
jp
leave
pop
xchg
push
div
stos
cmp
and
or
xchg
es
inc
and
repz
aaa
sbb
in
aad
test
sbb
jmp
les
fcom
icebp
sti
sti
xchg
sub
adc
inc
les
adc
fs
(bad)
jmp
jl
cmp
push
lods
aam
cwde
push
and
out
loop
push
mov
aaa
retf
cmc
aas
or
and
int
arpl
in
cmc
outs
movs
adc
stc
arpl
add
push
addr16
inc
xchg
retf
pop
sbb
or
adc
xchg
stos
dec
das
call
and
bound
ja
jb
lea
(bad)
xchg
xchg
pop
popa
sbb
xchg
aaa
cs
xchg
hlt
cmp
test
fisub
sar
fbld
xor
ds
ins
add
pop
xor
sub
clc
neg
sub
add
retf
adc
mov
dec
add
xor
sbb
add
outs
pop
jmp
mov
lds
jno
dec
sbb
inc
push
adc
push
(bad)
icebp
xchg
sbb
sub
adc
xchg
pop
xchg
clc
jmp
js
xchg
gs
loop
stos
mov
adc
mov
mov
retf
mov
rol
sbb
pop
ins
sub
mov
sub
mov
mov
cmp
push
loopne
adc
inc
jl
push
lock
jg
mov
jl
outs
and
daa
jnp
inc
adc
out
(bad)
into
loopne
shl
stc
add
loope
cmp
add
cdq
mov
pop
inc
xor
fdivr
cmp
in
mov
mov
cmp
jge
pop
inc
loopne
mov
rol
xor
mov
stos
das
std
rcl
xor
sar
jl
scas
mov
xor
xchg
xor
call
idiv
ret
aaa
jnp
jne
into
inc
xchg
push
lahf
(bad)
jbe
inc
mov
push
mov
call
dec
inc
int3
jo
dec
pop
mov
ja
jge
movs
jle
push
cmp
jno
std
clc
push
sahf
aaa
or
bound
cmps
cdq
push
ja
adc
inc
les
pop
jmp
jmp
in
xchg
push
cmp
arpl
mov
loopne
pop
sti
shl
movs
add
inc
div
cdq
call
mov
pusha
mov
sbb
sub
in
dec
sar
jno
mov
pop
imul
push
movs
les
pop
int3
adc
or
mov
dec
xchg
iret
xor
movs
mov
sbb
sbb
adc
jne
not
sbb
cmps
outs
sbb
add
pushf
(bad)
jns
mov
jecxz
or
ins
repz
xchg
rcr
mov
daa
mov
sbb
inc
inc
mov
movs
fcom
test
cmp
in
jg
popf
pop
jge
pop
or
mov
popf
fimul
xchg
pop
jecxz
retf
xchg
jg
mov
cld
daa
inc
cmp
rcr
fimul
jge
mov
out
les
push
jg
in
rcl
inc
pop
push
les
or
test
sti
cmp
ins
les
neg
mov
sub
mov
mov
or
xor
jmp
mov
iret
cli
push
cmp
push
mov
mov
jb
dec
push
cmp
xor
std
mov
nop
pop
mov
or
mov
xchg
je
or
aad
retf
shl
or
adc
cmp
xchg
imul
mov
sub
imul
imul
add
mov
not
icebp
pop
pop
pusha
xchg
mov
ins
dec
fadd
cmps
xchg
inc
add
cmps
inc
loope
ja
xchg
ds
push
ror
pop
mov
sbb
inc
repnz
jl
icebp
and
(bad)
popa
jecxz
or
push
xor
aad
or
ja
sbb
call
jp
arpl
jg
xor
not
or
xchg
cmp
pop
retf
inc
fadd
pop
xor
cmp
dec
mov
lods
fdivr
ins
in
repnz
(bad)
pop
mov
and
pshufw
xchg
aam
push
popa
in
dec
out
cmc
enter
mov
push
or
cmps
mov
cs
imul
dec
outs
jmp
xchg
mov
dec
jmp
inc
mov
inc
iret
imul
stos
in
jmp
pop
xor
lock
mov
test
stos
xchg
xor
sbb
cli
mov
sub
mov
xchg
cwde
mov
adc
sar
push
js
inc
into
outs
ret
mov
dec
dec
mov
xor
xor
push
repnz
pop
pop
ja
jns
add
push
cmp
dec
mov
cdq
mov
shl
ja
imul
stc
mov
lds
inc
imul
mov
pop
clc
pop
fs
sahf
std
(bad)
inc
xchg
mov
and
inc
scas
xor
fwait
call
lock
stc
inc
int
adc
nop
push
daa
or
fadd
fs
(bad)
test
jns
sar
mov
cli
xchg
fcom
cmp
add
adc
adc
(bad)
add
test
jnp
xchg
dec
js
xchg
std
stos
dec
and
mov
push
out
xchg
icebp
dec
dec
pop
popf
pusha
imul
cmc
std
add
inc
inc
dec
mov
adc
fst
ss
aas
mov
or
pop
jno
cmp
inc
and
pusha
ja
cmps
ret
movsx
popfw
(bad)
icebp
push
div
sub
cld
or
adc
adc
add
xor
cmp
xor
push
in
sub
push
mov
cmp
stos
pop
mov
shr
ret
mov
sub
imul
je
jge
shr
mov
push
pop
mov
jmp
inc
sbb
shrd
mov
mov
mov
jne
mov
xchg
ss
out
cmp
js
shl
add
sub
jle
es
(bad)
outs
mov
inc
cmp
imul
lods
or
out
xchg
inc
push
lods
pusha
push
or
xor
out
cdq
pop
or
aas
ffreep
sub
adc
fdiv
xlat
daa
loopne
imul
jmp
push
mov
les
xor
outs
adc
sbb
jecxz
xor
sub
dec
mov
dec
push
into
out
sub
or
sbb
sbb
stc
popf
je
jbe
test
lds
jle
outs
push
and
and
test
jne
je
mov
icebp
pop
dec
test
add
(bad)
pop
mov
retf
fild
test
out
sub
retf
fcom
(bad)
mov
sbb
or
push
movs
pop
mov
and
clc
sar
inc
mov
mov
xor
lea
dec
hlt
fcom
jae
ins
loop
or
sbb
mov
test
cli
push
xor
add
mov
cmp
in
add
movs
and
or
mov
inc
mov
daa
jb
xchg
fiadd
(bad)
mov
out
dec
jl
and
aam
out
mov
loope
and
mov
mov
push
es
rcl
ins
bound
stc
movs
rol
loope
mov
add
sbb
xchg
ds
pop
add
dec
jns
xlat
mov
fisttp
push
xor
xor
dec
jno
popf
outs
movs
rol
cmp
mov
pop
mov
jb
push
ror
test
mov
bound
les
inc
(bad)
or
in
jae
sub
or
xor
inc
sbb
inc
pop
ret
xchg
mov
loope
push
clc
inc
inc
pop
ret
mov
out
ret
out
(bad)
(bad)
mov
scas
imul
xchg
inc
call
lea
test
leave
xor
scas
ds
push
sbb
call
sbb
dec
fnstenv
(bad)
fisub
and
push
xchg
dec
out
add
out
sub
xchg
mov
dec
mov
adc
cmp
into
into
sub
test
add
movs
fwait
add
shl
inc
shl
cmc
mov
shl
push
(bad)
rcr
xor
adc
fld
mov
test
xchg
push
jb
ja
popa
sub
fs
dec
lock
jmp
fdivr
loop
dec
jmp
jge
xchg
cmc
cmp
jl
jbe
or
adc
dec
push
pusha
cmps
out
test
movs
cs
stc
imul
xchg
loope
shl
mov
adc
push
or
sub
movs
gs
test
arpl
and
pop
mov
test
xchg
das
xor
push
call
inc
mov
or
xchg
ror
ret
test
and
ins
std
xchg
mov
loop
xchg
inc
dec
cmp
xor
movs
hlt
mov
add
adc
xchg
pop
test
out
sub
mov
out
lods
mov
jno
dec
mov
jmp
adc
sbb
clc
xchg
(bad)
adc
loope
mov
test
fs
jmp
in
leave
scas
jge
rol
addr16
ds
ret
movs
dec
ins
cwde
scas
jmp
push
add
mov
movs
pop
stc
xor
mov
stc
sub
inc
in
les
push
in
add
fdivr
inc
xor
cmps
mov
add
ss
jl
imul
inc
pop
daa
retf
mov
mov
jnp
imul
pop
movs
or
mov
cmc
sub
sub
imul
es
inc
ss
pushf
cwde
mov
mov
ficomp
lock
cwde
inc
pop
mov
mov
gs
aaa
xor
pop
inc
xchg
mov
es
movs
sbb
shr
mov
adc
jg
fldcw
add
out
mov
cmc
sub
call
mov
and
in
push
ficom
int3
xchg
nop
mov
cmp
dec
push
lods
mov
lods
and
cmp
scas
es
cs
or
jmp
jb
mov
xchg
mov
arpl
fwait
jno
and
and
or
mov
aas
add
adc
xor
bound
cwde
xchg
gs
shl
pop
das
xchg
adc
push
gs
cdq
movs
and
(bad)
(bad)
out
push
jp
test
mov
ret
jl
sub
dec
cmps
loopne
pop
jmp
xchg
sub
and
xchg
push
sub
popa
enter
and
xchg
lds
xor
mov
dec
mov
xor
mov
(bad)
shr
dec
cmp
dec
sti
cs
loop
push
lahf
mov
out
dec
pop
xchg
mov
push
shl
inc
adc
and
movs
xor
stc
adc
ror
adc
in
faddp
xchg
inc
mov
sahf
pushf
xchg
stos
in
cli
shr
cmp
mov
call
add
in
or
cmp
dec
xchg
repz
ins
push
(bad)
daa
adc
and
(bad)
iret
lea
stos
add
ins
js
test
pop
ins
rcl
cmc
sbb
pop
fs
xchg
frstor
nop
jmp
jle
jmp
push
test
dec
mov
je
cmp
rcr
pop
mov
mov
mov
push
push
and
dec
inc
retf
add
arpl
jno
and
repnz
cwde
xchg
mov
loope
mov
mov
jmp
ficom
xchg
xchg
not
imul
aam
lods
hlt
aad
xor
shl
and
add
call
lea
dec
add
(bad)
loope
sbb
es
adc
mov
fstp
fisub
cmc
fimul
or
leave
mov
sbb
sbb
pop
fdivr
push
cwde
adc
push
push
jno
add
rol
jmp
or
sbb
jecxz
(bad)
push
dec
(bad)
cdq
in
sahf
and
xor
mov
add
adc
xor
js
popa
repz
test
cdq
mov
jne
retf
mov
dec
fidiv
in
(bad)
inc
add
jmp
stos
mov
loop
loopne
xchg
xor
sub
jns
pop
add
(bad)
stos
mov
fdiv
adc
pop
pop
aad
xor
pop
mov
sbb
sbb
pop
imul
cmp
cmps
int
imul
dec
lds
imul
mov
call
mov
popa
xor
lea
loope
jo
add
inc
retf
retf
fwait
push
mov
push
push
push
cld
daa
lea
inc
test
xor
inc
push
xor
outs
xor
fidiv
or
inc
jg
sub
pop
aas
fisubr
call
mov
es
fstp
jp
mov
xor
popf
das
lahf
std
adc
sahf
jmp
call
inc
stos
inc
add
cdq
pop
fucomip
imul
xlat
cmp
dec
bound
sub
and
jno
ror
lea
lea
mov
and
push
dec
(bad)
xchg
mov
cdq
mov
jle
lds
cdq
xchg
aad
fnstcw
pop
scas
iret
inc
adc
jns
and
mov
jge
stc
cmp
add
pop
push
add
xor
mov
int3
cmp
repz
mov
or
adc
and
and
mov
adc
fbstp
loopne
rol
sbb
push
sahf
retf
sbb
sbb
inc
jecxz
push
movs
jnp
mov
add
mov
ret
aad
push
das
hlt
xchg
icebp
fstp
mov
pusha
in
scas
jo
lea
mov
test
xchg
lods
xor
gs
mov
mov
mov
and
mov
sbb
inc
inc
in
cli
cli
inc
(bad)
ja
fmulp
or
xchg
shl
out
sub
fwait
jg
push
imul
push
sub
adc
xchg
daa
push
and
pusha
push
jno
jmp
mov
push
pop
or
mov
cld
inc
dec
ret
ret
cmps
pop
retf
fwait
pop
cwde
sbb
dec
je
scas
out
jle
out
sbb
sahf
xchg
inc
xchg
mov
xor
push
out
out
jle
in
ret
or
xchg
outs
and
xchg
cmp
adc
or
mov
scas
ja
mov
rcl
ss
cld
fsubr
pop
rcr
adc
in
add
sbb
sbb
(bad)
nop
imul
data16
jae
test
push
inc
(bad)
pop
mov
jns
cmp
cmp
in
outs
nop
pop
xor
(bad)
push
dec
bnd
loopne
add
sahf
adc
int
lahf
cmc
out
sub
es
or
adc
and
fnstenv
test
sahf
xor
frstor
cmp
fisub
cld
pop
xlat
test
sub
test
leave
jne
nop
je
push
outs
dec
push
aam
xchg
jnp
pop
dec
outs
xchg
in
sbb
xor
lock
out
lock
leave
sbb
nop
adc
(bad)
test
repz
aas
jns
popa
or
xchg
mov
sbb
mov
cdq
mov
test
retf
push
or
pop
pop
mov
loop
addr16
jmp
dec
mov
shl
push
mov
xor
sbb
leave
fidiv
popf
jle
jb
or
cli
fst
add
push
jbe
fisttp
sbb
xchg
repnz
sbb
sti
jbe
mov
xor
call
cmp
loop
add
sbb
mov
xor
sbb
xchg
lock
sub
ins
mov
stc
fcmovb
cmp
and
or
xor
cs
out
push
lods
sub
pop
out
adc
jbe
sbb
mov
and
mov
jb
mov
mov
lea
mov
fmul
gs
adc
xor
dec
adc
scas
jmp
and
adc
jecxz
push
jae
mov
(bad)
dec
leave
jmp
mov
int3
retf
cdq
in
jmp
dec
jp
shr
jo
cmp
mov
xchg
cmp
int3
and
push
xlat
(bad)
sbb
xchg
mov
add
mov
lock
hlt
leave
outs
or
dec
or
jmp
push
(bad)
out
jns
sub
fldcw
xor
adc
pop
inc
ja
pop
jmp
es
pop
mov
jmp
imul
push
out
out
dec
inc
fimul
in
mov
gs
das
xchg
and
rcl
inc
mov
mov
ja
fadd
jnp
nop
xchg
inc
fbld
les
retf
or
sahf
cmp
sbb
dec
(bad)
cmps
ret
fwait
test
cmc
push
std
mov
std
out
sub
in
sbb
dec
push
fwait
inc
or
jle
mov
xchg
xor
leave
cdq
cmps
xor
dec
fsubr
xchg
enter
sti
add
sti
add
inc
loop
mov
retf
fcmove
dec
rcr
ins
imul
mov
lock
push
pop
sub
and
jnp
sahf
xchg
cwde
(bad)
jecxz
call
test
call
xor
hlt
iret
jp
inc
stc
pop
pop
mov
je
jns
test
adc
(bad)
ss
loop
pop
mov
push
lds
out
dec
push
or
adc
popf
mov
cmp
pop
call
repz
lds
iret
and
test
int
in
stos
dec
lock
jne
(bad)
dec
jecxz
inc
adc
jb
mov
lds
or
stc
inc
aas
inc
hlt
sub
dec
fs
push
jo
fwait
ret
sbb
cmc
in
imul
sbb
rcl
icebp
repnz
sub
(bad)
loopne
popf
movs
dec
xlat
ds
adc
cmps
call
cli
int
pop
std
jle
aas
pop
int3
push
outs
push
xchg
xor
cmps
call
clc
sub
icebp
pop
bound
and
icebp
paddb
mov
inc
ret
fild
(bad)
call
jmp
xchg
pop
and
pop
adc
add
hlt
cmp
xor
xchg
sbb
sbb
outs
push
mov
xor
pushf
cs
fist
data16
pop
xor
mov
add
mov
not
cdq
ret
push
push
test
push
or
rcr
call
(bad)
aas
out
sahf
jns
loop
adc
clc
sti
adc
in
stos
inc
sub
mov
add
dec
xor
into
cdq
ins
call
sub
outs
ret
aad
xchg
inc
sbb
mov
mov
mov
mov
call
icebp
sub
enter
popf
and
mov
mov
push
(bad)
in
jo
push
or
mov
in
ficom
(bad)
into
fs
dec
push
inc
lahf
repnz
mov
pop
pusha
mov
scas
mov
mov
sub
adc
mov
mov
retf
mov
jmp
test
cmp
mov
loop
test
sar
dec
ss
inc
jge
loope
ds
dec
out
jne
int
retf
xchg
cmp
push
jo
mov
xchg
cmc
mov
mov
pop
cmps
pop
cmp
mov
jbe
jmp
addr16
add
pop
loope
or
popa
dec
inc
dec
jg
das
imul
test
inc
adc
retf
mov
(bad)
and
adc
(bad)
retf
xchg
inc
xchg
aad
sbb
pop
add
pop
push
sahf
cmp
(bad)
fdivr
repz
iret
scas
aaa
fdivr
push
movs
jbe
adc
ficomp
sub
arpl
bound
inc
xchg
mov
xor
mov
mov
and
dec
into
(bad)
adc
out
pusha
pop
mov
in
pop
xchg
jne
jg
aad
lods
pushf
xchg
nop
mov
push
mov
mov
movs
in
sub
push
xlat
jecxz
add
jp
inc
mov
sbb
adc
out
or
outs
daa
dec
inc
stos
popa
fild
mov
int
sbb
mov
adc
xchg
mov
cdq
or
mov
jecxz
out
pop
mov
cld
out
pop
adc
std
pusha
push
bound
xor
dec
sub
scas
shl
push
jmp
out
test
or
mov
cmp
sbb
mov
mov
jp
inc
jge
retf
pusha
imul
lock
gs
imul
add
mov
movs
and
gs
(bad)
aad
adc
test
jle
addr16
call
xchg
inc
movs
retf
out
pop
xchg
stos
inc
cdq
push
shl
cmps
les
call
lds
loopne
fwait
jns
push
pop
lock
fsubr
push
dec
adc
xchg
test
les
int
add
mov
jg
dec
retf
mov
cmp
dec
shl
adc
mov
test
cmc
adc
mov
adc
out
das
sub
mov
cwde
pop
mov
movs
fwait
imul
mov
push
adc
scas
inc
outs
push
jns
push
les
inc
and
mov
ds
rcl
push
enter
mov
and
push
out
rcl
dec
sub
mov
cmp
arpl
xchg
cmps
out
cmps
jmp
push
(bad)
sub
movs
inc
adc
retf
ss
lahf
call
ss
iret
mov
out
imul
sub
add
mov
pop
retf
xor
dec
jecxz
push
dec
ins
xchg
sti
movs
lea
nop
cmps
inc
cmps
nop
jnp
aam
adc
or
push
mov
ret
xchg
(bad)
stc
(bad)
push
(bad)
ja
add
xor
(bad)
enter
call
jne
(bad)
movs
mov
loop
xchg
cmp
push
lods
lea
inc
jne
inc
je
mov
in
mov
inc
leave
inc
mov
pushf
sbb
(bad)
call
js
sahf
xlat
ss
shl
xor
push
in
jns
xchg
mov
fadd
movs
push
ss
scas
push
push
xor
loopne
xchg
mov
fwait
nop
pop
sti
xchg
shl
(bad)
or
aas
xor
lds
mov
loopne
push
sar
bound
xchg
ss
mov
mov
mov
mov
xlat
mov
pop
mov
adc
dec
(bad)
ins
fbld
js
pushf
fadd
int
lds
loope
xchg
pop
hlt
sahf
test
pop
aam
jb
sar
arpl
bound
inc
add
mov
and
loop
addr16
jg
jno
mov
sub
xchg
mov
or
push
and
pop
xlat
xchg
sub
jo
jecxz
push
fistp
stos
mov
xor
dec
mov
out
fdivr
mov
rcl
pop
xchg
jecxz
sahf
fst
xchg
mov
scas
fbld
nop
and
add
test
or
inc
rcl
xchg
add
idiv
jo
sub
out
push
test
sub
xor
pop
jmp
(bad)
push
sub
sbb
xor
or
cmp
mov
push
mov
pop
push
inc
repnz
es
adc
mov
fnstsw
in
inc
scas
in
aam
push
jb
sbb
daa
outs
ins
mov
push
mov
ins
sub
scas
cdq
push
js
test
xor
(bad)
sbb
mov
jo
lods
sbb
xor
inc
add
repnz
xor
push
aam
call
mov
ja
aaa
not
mov
mov
ss
clc
clc
out
enter
ret
outs
mov
ins
mov
push
or
jae
movs
fld
xchg
enter
mov
movs
icebp
iret
push
pop
dec
pop
stc
sub
(bad)
fstp
je
or
mov
push
or
and
pop
aas
stos
jne
pop
sti
cwde
pop
push
xchg
daa
mov
enter
fisttp
in
dec
cli
push
jns
call
cmp
sbb
mov
lock
std
repnz
dec
stos
bound
and
pop
inc
ja
stos
sbb
or
nop
movs
mov
add
call
mov
scas
in
sti
inc
sub
mov
xchg
out
push
fwait
mov
push
fsub
scas
inc
hlt
push
jb
daa
loope
shl
mov
add
addr16
fld
ret
xor
mov
inc
movs
push
or
mov
mov
and
(bad)
sti
xor
cmp
mov
(bad)
xchg
mov
fcom
add
test
js
push
hlt
iret
dec
enter
mov
jmp
lods
ja
push
cld
repz
pop
mov
mov
mov
mov
mov
or
(bad)
jg
retf
ret
adc
xchg
and
fs
fwait
loopne
test
push
lahf
add
ror
pop
dec
retf
push
push
(bad)
ss
push
dec
out
(bad)
mov
lahf
cmp
sar
and
fsub
dec
cmp
test
cli
out
stos
jae
add
xor
div
int3
xlat
or
scas
sbb
arpl
cli
fsub
(bad)
push
or
jmp
ret
retf
jg
popf
in
sbb
pushf
(bad)
ins
in
rcl
cmc
pop
dec
xchg
inc
(bad)
not
popa
lods
fstp
jmp
ins
jbe
jo
inc
test
out
xor
mov
dec
xor
dec
adc
aas
test
scas
inc
mov
scas
jbe
and
ret
(bad)
cli
outs
inc
fwait
cmps
pop
push
ds
pop
cmp
mov
push
jmp
arpl
dec
rep
or
outs
xor
pop
push
les
ficom
scas
inc
or
sbb
xor
add
ror
js
imul
ror
retf
inc
jg
inc
mov
dec
jo
or
push
or
add
aaa
aad
and
mov
cli
or
xlat
stos
pushf
mov
cli
xchg
push
fwait
test
add
inc
into
test
call
cmps
scas
inc
les
cmp
jmp
loope
xchg
mov
jb
jno
jle
push
rcl
push
hlt
imul
jo
cmp
inc
dec
mov
outs
arpl
mov
adc
pop
out
imul
mov
les
sbb
shl
lahf
pop
outs
add
ins
sub
repz
test
bswap
repnz
nop
ret
icebp
jmp
mov
test
mov
add
xchg
ss
rcr
pop
je
sub
pop
nop
mov
xchg
cmp
pop
dec
ins
aas
adc
mov
jo
into
std
rcr
gs
cmp
movs
push
cmc
imul
mov
repnz
es
add
pop
outs
sub
inc
lods
jbe
aaa
mov
cmp
daa
cmps
int3
jb
dec
ret
arpl
mov
cmc
add
and
cmp
pop
shl
pop
dec
dec
out
hlt
dec
pop
cmps
enter
lahf
popa
adc
sbb
mov
dec
sbb
or
push
jl
pop
mov
dec
cs
inc
inc
dec
call
dec
push
gs
loopne
add
ja
in
out
mov
jo
push
mov
cwde
xor
ja
nop
test
jmp
add
push
push
and
xchg
cmc
adc
dec
lods
and
(bad)
push
xchg
push
cmps
or
push
mov
push
mov
iret
push
or
cmp
sar
xor
dec
les
pop
mov
mov
xor
stc
push
sbb
shl
mov
pusha
add
mov
in
clc
sub
clc
arpl
stos
xchg
pop
push
je
cmp
cmp
mov
xchg
addr16
dec
(bad)
jp
fs
(bad)
sub
push
mov
es
pop
inc
das
fwait
mov
cmps
mov
sar
xchg
xchg
mov
call
call
add
pop
fsubr
repz
ror
lock
xchg
inc
xor
adc
stos
dec
dec
and
pop
pop
mov
pop
jge
and
mov
mov
cdq
jle
stos
pop
in
jno
push
sahf
xchg
xchg
cmc
dec
fistp
add
aaa
neg
(bad)
jae
lods
xor
sbb
push
fsubrp
sbb
xchg
push
mov
pop
jl
sbb
test
sub
iret
mov
and
mov
jmp
sahf
(bad)
out
push
ss
sbb
push
out
cmps
or
daa
jg
out
sub
xchg
xor
jp
lods
(bad)
or
push
pop
add
or
movs
mov
push
addr16
push
ds
push
(bad)
adc
ss
push
out
jecxz
out
stc
(bad)
push
sbb
jae
and
cmp
sub
xchg
jle
mov
mov
out
add
ret
daa
cs
cs
jp
movs
sub
fild
sub
data16
scas
jl
sbb
cwde
cmp
gs
retf
or
pop
adc
cdq
dec
and
or
stos
retf
and
sti
cs
pushf
test
xor
and
sub
mov
sub
das
jecxz
enter
pop
or
test
pop
in
pop
jae
lock
repnz
hlt
lock
xor
pop
aam
rcr
cmp
(bad)
xor
sahf
inc
ds
cmps
rcr
and
aam
fist
cmp
push
(bad)
rcl
jo
les
(bad)
(bad)
aas
sbb
or
stos
jae
clc
mov
(bad)
outs
push
je
lahf
pop
sub
push
enter
fst
clc
sar
inc
push
lods
or
arpl
sti
sbb
jo
movs
shr
aad
or
push
xchg
mov
cmp
sub
in
imul
imul
push
sbb
pop
(bad)
mov
or
and
pop
imul
mov
pusha
pop
add
mov
in
adc
xor
mov
mov
sbb
lds
je
inc
dec
mov
adc
jmp
add
mov
jbe
cdq
xor
lahf
or
in
sbb
imul
js
pop
retf
sbb
adc
and
pop
pop
pop
loopne
clc
inc
inc
ja
push
cli
sahf
outs
ss
pop
pop
pop
add
idiv
xchg
or
in
int3
aam
adc
fxch
pushf
lds
mov
inc
ins
les
popf
pop
mov
mov
mov
jns
sbb
pop
clc
outs
cmps
add
jmp
arpl
test
retf
jle
add
cld
scas
sbb
leave
sub
aas
test
das
cmp
mov
inc
lahf
ins
adc
dec
sub
sbb
pusha
mov
pop
jmp
test
fstp
cwde
push
jbe
xor
cmp
mov
movs
movs
or
xchg
cmp
dec
lds
iret
dec
test
fs
and
push
enter
out
jnp
push
test
movs
or
movs
jb
sbb
mov
stos
push
xor
inc
in
das
int3
iret
add
lahf
xor
cmp
and
out
in
jmp
dec
xchg
pop
mov
dec
loopne
jne
xor
jl
mov
in
mov
scas
jge
icebp
in
test
(bad)
inc
out
stc
mov
inc
xor
cmp
adc
mov
dec
or
cmp
pushf
pushf
xor
cmp
mov
add
retf
dec
test
scas
repnz
lea
push
int3
push
sbb
dec
adc
cmp
(bad)
add
(bad)
push
push
push
mov
add
dec
das
nop
cmp
push
push
loop
pop
jge
mov
adc
shl
mov
xchg
push
movs
xlat
rcl
push
retf
xor
lock
mov
aas
int3
fs
rcr
leave
adc
add
cmps
out
and
ins
shl
lods
mov
or
add
test
fsub
xchg
mov
shr
aad
push
sar
leave
push
cmps
pop
fadd
dec
mov
scas
sub
rol
xchg
pmullw
cdq
js
xchg
adc
jns
shl
jp
or
call
add
xchg
shl
not
call
rol
int
es
pop
(bad)
mov
sbb
mov
(bad)
sbb
arpl
mov
imul
xor
mov
arpl
movs
pop
std
add
clc
inc
xchg
mov
rcr
sub
dec
mov
and
rcl
sub
mov
in
mov
jae
jae
mov
pop
cdq
xlat
jg
mul
out
sti
add
cmp
and
add
in
cld
add
xchg
lock
mov
mov
std
jmp
int
jg
imul
into
sar
mov
pop
movs
xor
jecxz
fdivr
dec
push
sub
pop
dec
xor
inc
jmp
jmp
call
pop
je
movs
cmp
sub
and
jl
test
push
das
jo
pop
push
xchg
inc
clc
jne
scas
jno
jmp
lods
dec
retf
cdq
inc
inc
adc
aaa
jp
xlat
xchg
mov
in
in
xchg
lock
mov
cmc
or
or
and
repnz
jo
pop
adc
jne
and
push
pop
dec
pop
enter
aad
jmp
aad
push
add
ret
adc
xchg
into
inc
mov
push
test
loop
cmp
leave
stc
lds
push
mov
sub
jp
jbe
push
(bad)
add
jge
pop
mov
pop
loopne
(bad)
xor
mov
jbe
pop
sbb
into
call
sub
dec
imul
mov
sbb
mov
cmp
mov
xchg
ret
jbe
pop
or
test
ror
retf
inc
loopne
jge
lods
cli
dec
push
hlt
popf
push
xor
popf
cs
adc
inc
lahf
jecxz
(bad)
jo
pop
pushf
cmp
mov
xor
mov
sub
xor
sub
ret
dec
mov
call
(bad)
test
and
sbb
inc
mov
lods
les
or
add
cdq
push
sti
pop
imul
mov
dec
jno
je
xchg
nop
xchg
je
(bad)
mov
mov
mov
lahf
dec
and
cmp
out
mov
in
fsub
ret
cmps
sub
(bad)
iret
aaa
in
das
jle
pop
jb
sub
pop
sub
aas
or
mov
shr
lock
mov
cs
dec
jae
popa
jecxz
and
and
jbe
test
cmps
xor
stos
popf
in
inc
out
cmps
pop
sbb
pusha
or
(bad)
es
gs
xchg
mov
or
fs
into
sbb
pop
push
push
dec
xchg
mov
in
stc
rol
out
adc
nop
jmp
outs
in
sbb
mov
xor
mov
in
and
xchg
scas
paddd
inc
jb
jge
movs
(bad)
mov
adc
fisttp
(bad)
pop
(bad)
mov
idiv
ficom
cs
dec
outs
inc
mov
in
sub
in
mov
bound
push
jg
mov
and
xor
mov
add
pop
out
xchg
xor
sub
adc
pop
test
enter
leave
inc
dec
mov
mov
inc
mov
std
imul
lods
push
gs
(bad)
aad
sub
scas
xor
cmp
add
in
push
in
mov
mov
cmp
ins
mov
jecxz
in
ja
mov
popa
jg
imul
xor
hlt
lods
add
lahf
in
aas
push
adc
(bad)
push
mov
jmp
gs
vcvttps2dq
inc
cmp
in
mov
test
test
rcr
push
cmp
in
in
aas
cmp
mov
cwde
jnp
in
jmp
mov
mov
(bad)
(bad)
jns
mov
popa
retf
test
add
jbe
daa
push
mov
sbb
lds
out
arpl
ins
imul
push
mov
test
fcmovbe
or
mov
mov
je
sbb
jl
fiadd
push
mov
adc
outs
outs
mov
cwde
(bad)
fisub
adc
jb
xor
data16
or
jo
xchg
jbe
inc
mov
addr16
push
jne
ret
das
mov
rcl
jg
mov
xchg
add
xor
je
outs
(bad)
test
nop
cmps
fwait
outs
push
or
add
push
dec
ret
fdiv
pop
in
movlps
xchg
cmps
shl
pop
and
addr16
mov
fimul
fstp
or
popf
jnp
int
lahf
mov
ficom
mov
inc
loope
fnsave
sbb
xchg
adc
jle
cld
sub
dec
sub
lods
call
jno
enter
and
push
cwde
retf
push
neg
in
out
cmp
inc
xlat
fidivr
xor
sbb
ss
out
outs
ror
xor
xor
imul
cwde
(bad)
aas
int3
mov
dec
sub
and
push
popa
lea
out
jl
sahf
pop
sub
and
mov
pop
(bad)
fcom
bound
fwait
adc
jecxz
shl
adc
dec
and
fwait
leave
repz
cld
or
in
jb
jmp
inc
and
gs
pushf
cmp
mov
adc
push
adc
jne
sub
jo
movs
push
inc
inc
retf
jns
js
mov
dec
jne
neg
mov
rep
aam
lea
inc
jp
lock
ins
addr16
mov
adc
test
jecxz
cmp
out
and
cs
push
popa
scas
or
shl
xchg
xchg
cmp
xchg
popa
lods
inc
pop
xchg
push
ret
push
ds
out
dec
bound
ss
data16
sbb
jne
daa
scas
in
jno
or
popf
mov
dec
mov
movs
jmp
sub
jno
scas
stos
call
push
inc
test
lock
jo
sub
cmp
and
cmp
sub
mov
cmovbe
xor
mov
cmp
push
pop
cli
daa
mov
in
fisub
sbb
dec
cs
inc
dec
call
lss
mov
bound
into
mov
mov
xor
push
ss
sub
pop
cmp
test
inc
sbb
loopne
mov
mov
and
add
xchg
or
mov
rcl
push
push
dec
mov
repnz
xchg
sbb
mov
ds
jmp
lock
adc
pop
ret
cmovns
leave
daa
dec
add
popf
or
aaa
push
stos
push
es
dec
(bad)
jbe
ds
arpl
mov
pop
sahf
arpl
and
cli
mov
retf
popf
ins
mov
in
ins
sbb
cs
int3
loope
loopne
adc
div
sbb
jb
xchg
sub
iret
push
xor
inc
inc
push
ficomp
pop
xchg
cmovle
cld
arpl
sbb
popf
push
sbb
jge
jp
jne
pop
mov
xchg
scas
fcos
push
and
lods
icebp
cmp
mov
cmp
mov
mov
ss
mov
sub
or
mov
out
sbb
mov
cmp
in
mov
ret
neg
cs
(bad)
pop
xor
mov
fadd
add
jae
cwde
mov
and
loope
les
(bad)
cmps
(bad)
outs
xchg
outs
hlt
inc
shl
(bad)
jecxz
push
js
dec
stos
or
inc
push
test
imul
sub
sbb
test
add
(bad)
repz
pop
push
retf
fcom
xchg
xor
mov
shl
jbe
add
cmp
out
push
fs
mov
psubb
fadd
ins
loop
mov
aas
xchg
xchg
cmp
pop
popa
retf
popf
shr
sbb
das
enter
pop
sub
xor
xor
out
xlat
popf
mov
aas
ds
jae
xor
adc
mov
jbe
stos
dec
sti
sbb
movs
bswap
scas
mov
adc
fimul
or
icebp
lds
fistp
sbb
(bad)
jmp
imul
(bad)
ins
inc
(bad)
outs
add
loop
(bad)
add
pop
pop
sub
xchg
out
xor
mov
mov
retf
mov
loop
out
cld
inc
fild
imul
mov
lahf
stos
scas
mov
mov
ret
mov
hlt
fstp
ss
ror
mov
aam
mov
dec
jno
lea
pop
adc
pop
jae
ret
mov
test
ins
test
inc
push
(bad)
xor
xchg
sub
into
jle
adc
inc
cwde
lea
xchg
add
sbb
mov
int
push
sub
aam
dec
out
(bad)
jnp
ins
call
push
ds
sbb
sbb
loop
fnstenv
scas
pop
pushf
cmp
push
fwait
add
test
sub
cdq
dec
or
les
and
call
mov
mov
add
aas
jl
adc
fimul
pop
push
or
sub
cmp
out
xchg
push
xchg
pop
mov
and
mov
adc
out
or
add
or
mov
jno
loop
fwait
loope
mov
xor
repz
mov
into
jl
ins
pop
shr
test
test
fcomi
or
jne
test
repnz
sbb
movs
mov
in
es
inc
not
cmp
dec
pop
rcr
cmp
(bad)
cmp
pop
cmp
push
fwait
repz
mov
out
rcl
push
add
adc
pop
pop
mov
sti
inc
loopne
fisttp
sbb
mov
jne
leave
pusha
dec
xor
dec
scas
call
cwde
cmp
loopne
fnstcw
es
repnz
mov
shl
or
hlt
pop
dec
pop
jg
or
jecxz
retf
test
into
arpl
mov
les
in
loop
test
scas
int3
jno
sbb
retf
sbb
icebp
aas
cmp
and
fucomip
outs
mov
lods
and
mov
fist
add
jg
movs
movs
shr
icebp
call
loop
sti
ja
fwait
neg
jb
pop
sbb
retf
and
in
nop
push
dec
mov
push
scas
xlat
imul
iret
push
lods
aad
push
or
fstp
outs
or
mov
and
add
jnp
mov
pushf
std
rcl
and
repz
icebp
repnz
mul
xchg
jbe
pop
push
push
pop
mov
sub
clc
push
repnz
pop
mov
ficomp
xchg
mov
and
inc
fidivr
mov
popa
inc
mov
and
fistp
jecxz
loop
sbb
popf
adc
adc
cli
test
daa
xlat
hlt
icebp
push
mov
call
jnp
jmp
(bad)
mov
pop
sub
add
mov
fstp
mov
dec
mov
cdq
lods
mov
out
pop
mov
pop
ins
and
mov
test
outs
repnz
clc
outs
dec
cmps
adc
outs
pop
add
and
ds
(bad)
sub
ins
nop
dec
jecxz
mov
jbe
std
ret
call
shl
jno
inc
sub
xchg
stos
xor
pop
pop
xchg
xchg
mov
fstp
fdiv
repnz
fwait
sbb
sub
rcl
sbb
inc
std
mov
mov
mov
hlt
mov
push
in
xchg
pop
pop
sbb
inc
sub
daa
mov
(bad)
outs
mov
inc
shr
mov
cmp
mov
icebp
xor
int3
inc
mov
push
and
jae
shr
inc
push
mov
sub
push
push
cmp
fsub
push
and
mov
shl
or
fbstp
rcl
ins
int
out
and
rcr
mov
call
add
jge
inc
cmp
lods
mov
xor
lods
xor
mov
ficom
paddusb
imul
inc
je
sbb
pop
out
ins
rcl
sbb
jecxz
xor
xchg
adc
mov
(bad)
adc
sahf
xchg
xchg
scas
arpl
mov
mov
aad
cdq
mov
lock
cmp
jecxz
inc
pop
or
push
mov
mov
test
fwait
xor
pop
mov
int3
pop
stc
xchg
mov
scas
ret
pop
imul
mov
jg
rcl
cmp
inc
outs
mov
sbb
dec
(bad)
fldcw
cld
push
mov
cli
cwde
push
cmp
lods
das
add
popf
cmps
cld
test
jmp
jno
arpl
sahf
xlat
or
and
in
into
sub
retf
movs
gs
cmp
pop
xchg
jmp
jae
mov
dec
mov
sub
cmps
jp
sti
in
inc
push
and
lahf
xchg
retf
stos
mov
das
cmps
adc
in
(bad)
jle
or
stos
mov
dec
and
mov
arpl
or
inc
jge
jmp
or
xchg
mov
ficom
sbb
xor
call
dec
out
maxps
mov
dec
in
and
scas
hlt
movs
test
sub
and
retf
(bad)
adc
add
inc
xchg
sti
cld
test
outs
je
lods
lods
loopne
pop
pop
sbb
pop
or
test
jmp
into
or
mov
jl
lock
in
ins
in
ret
mov
fwait
mov
es
or
loop
jmp
jbe
sbb
std
mov
cmp
pop
cs
fcom
scas
test
das
ror
add
cmovl
loop
cmp
test
mov
inc
xchg
jbe
mov
jle
aaa
push
inc
ds
dec
call
inc
inc
and
nop
adc
sbb
jmp
movs
mov
loopne
ret
popf
stos
mov
das
js
cmp
xor
pandn
shr
inc
mov
pop
int
outs
shr
mov
fwait
sbb
test
popa
mov
loop
cs
pop
and
pushf
jnp
pop
(bad)
push
sbb
jns
int3
jl
cli
in
mov
ds
outs
cdq
inc
push
and
add
push
mov
arpl
jo
popf
jns
ins
mov
pop
out
inc
and
pop
test
mov
mov
nop
scas
pop
xchg
fist
adc
sub
inc
mov
gs
enter
mov
int
xor
mov
out
popf
inc
clc
cmps
xchg
mov
jbe
sub
gs
ins
xchg
add
addr16
icebp
mov
out
rol
pop
les
xchg
icebp
dec
pop
mov
mov
fst
mov
std
rcl
xchg
mov
jbe
or
pop
ret
ret
popa
mov
pop
es
push
cmp
or
pop
and
add
icebp
cmp
xchg
adc
mov
imul
fiadd
div
int3
push
mov
sub
mov
dec
scas
imul
shr
cmps
mov
add
sbb
jae
aas
out
cmp
ret
mov
xor
imul
inc
(bad)
out
(bad)
imul
add
jno
pop
lods
mov
sub
rcr
cmps
dec
jg
jle
(bad)
jmp
jg
in
jge
cmp
clc
fcomp
je
jnp
cmps
add
ret
cmp
xlat
sbb
adc
fld
pop
push
aam
inc
(bad)
pop
out
or
add
xlat
push
movs
out
pop
push
out
jne
xchg
pop
xor
mov
out
stc
mov
jmp
pop
pushf
inc
sub
push
iret
xchg
cld
push
aaa
adc
or
xchg
ds
xchg
push
into
gs
cwde
in
fsubr
or
bound
and
xchg
add
shl
daa
fneni(8087
jmp
pop
pushf
mov
je
jmp
mov
mov
fwait
lock
xchg
retf
or
fidiv
mov
mov
inc
adc
out
das
sub
xchg
pop
aaa
call
mov
sub
fidivr
fld
cli
setne
cdq
add
and
mov
mov
clc
sbb
daa
das
adc
outs
lock
push
or
dec
cmps
add
ror
sar
jbe
cwde
(bad)
ror
fld
(bad)
je
cld
(bad)
cs
iret
cmp
push
clc
retf
lods
push
inc
sbb
dec
data16
xor
xor
aaa
mov
xchg
add
aad
push
push
shr
mov
sub
shr
mov
rcl
call
sbb
cld
sub
push
(bad)
xchg
in
xor
sahf
(bad)
sub
jp
or
sbb
push
sahf
gs
mov
in
(bad)
pop
call
mov
and
sbb
in
add
mov
sbb
pop
call
in
cmp
sar
fwait
movs
jle
mov
bound
jge
and
and
adc
pop
nop
lods
test
cmp
add
jecxz
cmc
and
mov
push
jle
pop
das
pop
iret
sar
ret
jns
push
cmp
xor
pop
cmps
mov
jge
test
std
push
stos
cmp
call
mov
clc
dec
jl
vandps
cmc
repz
retf
xor
pop
ja
push
xchg
mov
stos
imul
add
mov
mov
xchg
cld
enter
arpl
adc
jge
jne
hlt
movs
or
dec
jge
aaa
pop
dec
movs
jecxz
jae
cmp
dec
test
add
in
mov
into
inc
xor
retf
jmp
xchg
mov
enter
(bad)
dec
jg
inc
retf
mov
ret
cs
and
in
adc
xchg
jmp
pop
pop
loope
fwait
outs
test
mov
stos
jp
jmp
out
sbb
arpl
sbb
fbstp
inc
mov
mov
js
sub
es
push
cdq
mov
fwait
aaa
sub
add
leave
xchg
and
xor
aaa
lods
int3
retf
inc
add
(bad)
test
adc
mov
sub
push
cs
sub
clc
ror
mov
int
leave
fdiv
dec
or
jp
xor
fwait
xchg
mov
jecxz
cmp
aas
jne
icebp
stc
pushf
sbb
pop
push
loope
jp
movs
popf
jne
pop
hlt
mov
retf
out
sub
xchg
xor
stos
ficomp
push
jmp
(bad)
mov
(bad)
dec
addr16
fcmovb
mov
adc
out
in
pop
pop
stos
pushw
iret
xor
and
pop
mov
inc
jnp
adc
std
icebp
sahf
sbb
xor
test
and
adc
or
add
push
jae
(bad)
and
data16
hlt
cli
fwait
dec
js
into
jo
jo
mov
inc
xor
lea
push
(bad)
mov
stos
xor
or
mov
retf
repz
fucom
or
mov
sbb
scas
nop
stos
test
fucomp
push
out
mov
jmp
call
push
xchg
sar
popa
out
push
loope
shl
(bad)
xor
(bad)
fnstenv
jae
cmp
repz
loop
inc
push
imul
xchg
pop
popa
mov
addr16
and
xor
jb
icebp
arpl
mov
std
cwde
inc
xor
inc
jle
dec
xlat
jne
sbb
inc
fistp
xor
add
jns
outs
aam
push
jmp
xor
ins
jnp
fdiv
stos
push
jo
push
outs
imul
in
out
inc
mov
ss
dec
adc
dec
cdq
int3
mov
dec
jns
or
xchg
retf
or
adc
push
sar
push
mov
(bad)
repnz
(bad)
pop
xor
outs
popf
popf
fnsave
out
(bad)
in
or
dec
cmp
fmul
adc
jmp
mov
das
and
leave
retf
adc
ja
sub
sbb
sbb
sub
gs
loope
sahf
ret
mov
jp
nop
or
dec
es
xchg
sti
cmc
jnp
jge
arpl
ud2
in
lock
sub
cmp
fs
xchg
adc
(bad)
mov
mov
cld
(bad)
xlat
push
int
daa
add
pop
cmps
(bad)
pop
mov
dec
and
test
lea
retf
arpl
sbb
std
or
bound
fwait
and
dec
aad
loop
jle
es
adc
mov
imul
movs
push
sub
xchg
jg
mov
int
adc
mov
mov
inc
cdq
lea
inc
add
adc
(bad)
retf
js
daa
xchg
jae
jnp
mov
cmc
retf
or
sbb
add
enter
mov
je
sahf
in
neg
jno
je
xchg
aad
jle
push
mov
das
mov
mov
xchg
hlt
idiv
div
clc
inc
cld
(bad)
mov
mov
idiv
mov
jmp
dec
(bad)
sbb
sbb
or
adc
inc
shl
aas
icebp
aam
aaa
in
mov
push
fwait
ror
out
aas
ss
sbb
fild
loop
sbb
xor
lods
jae
cs
ja
aad
sub
aad
adc
sbb
mov
clc
adc
movs
mov
add
stos
dec
xor
push
cmp
gs
mov
jl
xchg
cmps
add
xor
jmp
cmp
data16
jbe
sbb
sub
mov
jmp
mov
gs
add
mov
stos
or
inc
and
dec
jmp
lods
adc
adc
mov
ror
(bad)
mov
sub
movs
inc
mov
and
icebp
popa
xchg
(bad)
into
push
mov
popa
aam
repnz
rol
push
scas
loop
dec
arpl
les
fisttp
add
add
pop
or
add
push
retf
inc
(bad)
push
jmp
add
xlat
mov
test
shr
add
ret
add
and
sti
(bad)
mov
stos
cli
mov
std
iret
mov
push
xor
cwde
pop
mov
in
(bad)
in
jmp
push
jle
xchg
mov
jmp
sti
mov
(bad)
mov
js
fcomi
cmp
cs
mov
push
add
jne
movs
jae
sbb
popa
mov
cmp
adc
into
inc
xchg
ins
pop
mov
mov
sti
inc
push
(bad)
pop
add
imul
push
cmp
mov
push
mov
pop
pop
mov
icebp
in
adc
mov
jmp
and
xchg
push
test
and
or
adc
or
dec
daa
mov
shl
in
cmc
pop
sti
xor
adc
movs
pop
cmp
or
jno
xchg
jo
xchg
sub
fs
scas
jl
jg
ror
cmp
je
or
inc
sbb
jo
sahf
in
or
lods
inc
in
loop
dec
jg
xor
fnstcw
out
cwde
or
jne
hlt
jp
adc
pop
imul
out
ds
mov
jno
repnz
mul
sbb
(bad)
int3
jmp
movs
pop
inc
mov
jge
lock
loop
jmp
mov
in
lods
jbe
xor
push
mov
push
xchg
(bad)
hlt
dec
jge
hlt
xlat
xor
jbe
pop
xchg
ds
cld
cmp
in
jne
xor
jecxz
add
mov
push
pop
shl
in
add
cmp
outs
add
cmps
aad
out
ret
fnsave
scas
jge
mov
adc
test
popf
mov
pushf
mov
pop
lds
cmp
push
cmp
nop
dec
jle
sti
mov
xchg
xor
adc
pop
ror
imul
sub
sub
lea
sub
mov
add
mov
shr
js
aam
or
cmp
cmp
mov
movs
and
lea
pop
(bad)
stos
movs
fisttp
mov
in
mov
cmc
out
inc
inc
mov
movs
push
pusha
adc
es
out
(bad)
inc
imul
imul
xchg
je
lea
adc
or
pop
jne
mov
imul
cmp
lods
push
jne
and
xchg
push
adc
sub
lds
mov
jae
mov
mov
icebp
mov
pop
rcr
int
push
mov
out
add
call
test
dec
fwait
mov
pop
xor
movs
dec
fst
loopne
and
sub
dec
and
cmps
jg
dec
mov
(bad)
data16
sbb
add
sbb
add
inc
mov
ds
pop
cli
mov
call
adc
outs
add
add
sub
outs
jae
call
retf
push
dec
mov
cmp
das
cmp
aad
jmp
push
jns
int3
(bad)
fimul
or
sub
loop
in
sub
jns
cmps
fs
cmp
sar
clc
or
inc
push
lods
int3
jmp
leave
enter
mov
ins
xlat
ret
call
aam
fmul
mov
gs
(bad)
and
sbb
lea
jmp
push
mov
shl
lods
pop
mov
adc
adc
add
pop
jns
mov
sub
outs
aaa
dec
rcr
inc
and
fsub
sub
je
outs
daa
in
and
xchg
mov
loope
sub
(bad)
cmp
inc
sub
add
scas
jecxz
mov
rcl
add
mov
inc
scas
(bad)
xor
das
retf
sar
das
xor
inc
in
loop
outs
dec
cmp
push
mov
xor
mov
jae
movs
out
push
jmp
bound
jl
retf
pop
stos
xor
sub
lods
and
mov
jo
out
lds
jmp
sahf
mov
cmp
test
pop
gs
mov
push
adc
retf
push
pop
adc
pop
leave
mov
call
and
jnp
mov
cmps
lods
repz
mov
adc
mov
and
jo
dec
fnstcw
xor
xchg
test
repz
jg
dec
push
popa
sub
xor
jge
(bad)
out
adc
inc
pop
push
add
xchg
and
cwde
cmps
adc
pop
clc
lods
xor
shl
cmps
sbb
cwde
sbb
add
lods
add
pop
test
jp
xor
paddsb
jg
or
sub
jae
das
sub
iret
cwde
mov
nop
loope
gs
call
sub
movs
jnp
sub
jb
call
push
mov
stos
outs
jmp
mov
in
jl
mov
(bad)
(bad)
mov
sbb
test
push
cmps
mov
xor
(bad)
fild
mov
push
push
imul
push
cwde
push
cdq
inc
mov
test
mov
pop
inc
out
jl
inc
jo
jae
jns
cwde
and
and
push
push
mov
xchg
mov
gs
rcr
jns
lock
mov
ficomp
inc
cmp
(bad)
cmp
retf
sbb
pop
jmp
pop
cdq
mov
mov
mov
push
inc
rol
xor
push
mov
mov
outs
lahf
push
push
in
movs
aaa
jnp
lock
(bad)
fsub
out
mov
jl
mov
xchg
jb
cmp
pusha
nop
push
cld
lea
sbb
std
fnstsw
xchg
lods
clc
pop
and
push
push
lods
add
je
enter
lahf
(bad)
test
fadd
mov
push
push
mov
inc
outs
sbb
cmp
mov
cmps
mov
repnz
inc
call
stos
lods
push
push
dec
pop
aas
icebp
sbb
pop
sub
mov
das
cmc
ins
retf
pop
les
cmp
lods
add
or
imul
sub
fwait
xor
pop
movs
pushf
add
jns
xchg
hlt
pushf
call
fs
push
stos
inc
ffreep
lods
sahf
pop
xor
stc
outs
call
mov
cmc
rcl
or
fst
mov
pushf
jmp
mul
xchg
adc
inc
rcl
sar
xchg
pop
scas
jbe
loopne
das
sub
add
push
xchg
fiadd
ficom
cmp
mov
xor
leave
or
repnz
test
mov
xchg
test
mov
icebp
lock
(bad)
iret
or
or
mov
mov
ins
or
(bad)
shr
or
mov
(bad)
xchg
adc
xchg
daa
cmp
xchg
pusha
cmp
ret
xor
loopne
sbb
inc
sbb
mov
xchg
pop
push
shl
mov
push
aaa
pop
sbb
mov
mov
cmp
cmp
test
pop
mov
mov
leave
sbb
in
fild
imul
stos
sbb
push
test
jmp
(bad)
fnstenv
pop
cmp
push
sbb
cmp
adc
gs
sub
adc
test
add
mov
pop
dec
and
adc
sub
push
xor
lds
cmp
stos
cmc
jg
mov
dec
addr16
sub
pushf
sahf
mov
pop
adc
enter
in
dec
cdq
cmc
out
or
and
mov
push
adc
jnp
inc
add
sub
and
loope
xchg
mov
jne
pop
cmp
jmp
pop
mov
mov
cmp
rcr
out
jns
inc
retf
jge
inc
cmc
xor
repnz
inc
ss
mov
jge
add
lock
mov
pop
sbb
aaa
add
jle
pop
xor
jno
ret
lea
adc
pop
movs
shr
aam
and
test
mov
and
mov
ds
test
(bad)
fwait
xchg
xor
jb
pop
out
imul
imul
mov
(bad)
mov
mov
mov
lahf
xor
sbb
in
jle
(bad)
call
or
jae
cmps
pushf
cmc
inc
into
cmps
or
push
cmp
sub
mov
xchg
push
loope
cmp
sub
push
retf
add
cmc
cmps
and
and
fimul
mov
ficom
mov
pop
jb
call
jbe
cmp
js
retf
cmc
call
(bad)
stc
pop
ret
mov
cmps
loop
cmc
mov
jmp
cmp
repz
pop
sbb
xor
push
and
scas
nop
adc
adc
mov
pop
aaa
or
xor
fwait
outs
ja
std
outs
pop
stc
and
mov
retf
into
movs
xchg
out
jmp
outs
push
xchg
dec
call
sbb
retf
(bad)
ins
pop
adc
sbb
(bad)
std
pop
adc
div
pop
gs
outs
cld
scas
sub
push
pop
mov
mov
jmp
pop
or
pop
jno
xchg
int
out
sub
nop
imul
push
jp
in
mov
sub
addr16
or
inc
ss
fnstcw
xlat
xor
test
add
aaa
dec
dec
lods
mov
push
and
hlt
xchg
sti
fadd
mov
push
das
push
icebp
xchg
jb
mov
data16
pop
adc
xor
adc
ja
push
xor
xor
clc
std
push
adc
in
xlat
sub
jne
lea
xchg
pop
pop
mov
mov
pop
cli
fimul
fiadd
fistp
inc
inc
inc
pop
fimul
xor
out
jns
pop
mov
xchg
scas
mov
aas
inc
mov
jae
adc
jmp
push
cmps
and
push
inc
addr16
dec
and
pop
jno
adc
loopne
(bad)
sbb
out
call
shl
or
pop
xchg
js
pop
mov
inc
mov
pop
jge
adc
loopne
lods
cli
das
ins
gs
sub
sub
je
fcom
jge
pop
in
loope
(bad)
jmp
(bad)
sbb
mov
push
adc
inc
adc
das
jg
add
dec
mov
jnp
inc
xor
out
shr
cmps
push
dec
(bad)
aas
lds
imul
arpl
call
push
dec
(bad)
adc
and
movs
mov
test
sar
enter
push
adc
fcom
data16
mov
(bad)
mov
pop
pop
inc
pop
xchg
jmp
stc
dec
fld
ret
mov
push
call
shl
push
mov
fld
cmp
inc
add
cmp
stos
rol
pop
call
mov
out
add
xor
pop
or
xor
dec
cmc
repz
inc
sbb
mov
data16
outs
pop
fcom
inc
dec
test
retf
inc
enter
inc
mov
pop
sub
add
pop
mov
mov
clc
leave
or
mov
jp
fidivr
sar
dec
fidiv
mov
adc
xor
loope
nop
popa
test
xchg
cmp
sub
jo
ficom
xor
stc
jmp
or
je
jb
not
addr16
inc
or
les
out
mov
xor
inc
jo
add
popa
push
pop
and
mov
shr
mov
adc
pop
mov
movs
cmp
and
add
pop
mov
push
ins
xchg
sub
jl
ja
aas
fucomi
sbb
sbb
mov
int3
pop
stc
icebp
xchg
lods
add
jl
xor
lock
iret
cmp
pop
xor
xor
xor
mov
jmp
adc
dec
loopne
adc
cmp
pop
jne
jo
out
sbb
sti
pop
dec
jge
test
fwait
push
xlat
push
fwait
cmp
push
cwde
movs
mov
sub
sbb
test
call
loope
loop
in
pop
(bad)
push
aaa
add
push
cdq
(bad)
or
jno
ja
ds
daa
jns
movs
sbb
mov
retf
ds
xor
mov
xchg
not
jae
push
dec
cmp
(bad)
leave
fnstsw
lods
rcl
fisub
mov
out
and
out
mov
ja
sbb
ss
push
retf
(bad)
dec
imul
nop
jg
mov
push
sub
in
mov
jnp
pop
cs
mov
cwde
jo
push
mov
jns
push
loopne
cmp
repnz
psubq
or
nop
sbb
outs
inc
and
sub
adc
mov
xchg
push
fwait
dec
and
scas
das
mov
cmc
mov
stos
cmp
repnz
or
retf
inc
push
sub
cld
cmc
xchg
jmp
call
cmp
pop
add
vandnpd
adc
add
mul
mov
pop
push
lock
inc
mov
pop
and
cmp
sbb
shl
lea
adc
stos
les
ds
adc
popa
mov
icebp
dec
pusha
pop
scas
sub
mov
mov
test
pop
pop
test
mov
jb
out
jae
and
push
push
shr
and
pop
xchg
xor
inc
jecxz
mov
mov
mov
adc
add
lods
dec
mov
das
arpl
shl
out
pop
dec
pop
and
das
xchg
js
push
mov
stos
adc
xor
xchg
dec
(bad)
rol
fwait
pop
in
pop
clc
mov
(bad)
jns
push
mov
sti
push
mov
dec
sbb
pop
sbb
repz
int
add
movs
push
fidiv
inc
cmp
and
ret
sub
stos
test
push
mov
xor
retf
mov
inc
js
pop
pop
xor
lea
adc
sub
xchg
sub
fs
add
sub
(bad)
xchg
ja
rcl
or
xor
icebp
adc
push
lock
out
sbb
jge
or
sbb
or
stos
pop
aaa
fist
dec
push
xor
xlat
fcmove
mov
mov
mov
fwait
and
sar
push
movq
push
arpl
push
idiv
(bad)
xchg
or
outs
stos
outs
mov
inc
arpl
or
scas
inc
xchg
push
rcr
ja
(bad)
rol
adc
jl
mov
popa
jmp
outs
(bad)
jecxz
rol
mov
stos
dec
cmp
xor
xchg
xor
ficomp
test
fwait
pop
and
in
int3
xor
aam
xlat
xor
push
xor
xor
push
pop
ins
push
std
loopne
pop
jle
mov
dec
jno
mov
stos
mov
gs
lods
or
jmp
outs
icebp
lahf
xor
push
iret
repz
leave
mov
cwde
shl
sub
mov
(bad)
int3
pusha
dec
jmp
fwait
xor
xor
mov
cmp
cwde
pop
mov
push
jb
sub
aas
int3
add
arpl
mov
call
(bad)
neg
sub
or
(bad)
xchg
scas
inc
xchg
push
mov
cmp
and
pmaxub
dec
lds
fimul
loopne
mov
push
test
or
(bad)
pop
ins
test
sub
cdq
adc
ret
loop
test
pop
ret
mov
jnp
in
jnp
imul
(bad)
cmps
jmp
and
mov
pop
mov
fld
pushf
push
mov
scas
mov
mov
icebp
jp
sub
retf
leave
sbb
pop
xchg
jae
rol
addr16
mov
mov
mov
mov
push
lahf
test
add
cld
sub
add
and
dec
pusha
xchg
scas
add
fistp
mov
loope
dec
retf
add
(bad)
mov
cdq
xlat
cld
sub
jge
jae
push
sub
xor
ret
cmp
xchg
mov
jb
loope
dec
ret
push
adc
pop
stos
xor
inc
cmps
cmp
f2xm1
popa
sahf
adc
repnz
in
test
jge
cmps
imul
dec
icebp
mov
popf
inc
cli
retf
xor
sbb
hlt
xlat
cmc
pop
shr
pop
inc
mov
inc
pop
xchg
mov
(bad)
das
repnz
mov
jne
cmc
mov
sbb
imul
das
or
(bad)
jne
std
out
push
pop
add
and
push
fdiv
adc
fsubr
fs
leave
and
in
in
add
movs
aas
cmps
inc
push
out
mov
ror
push
dec
pop
dec
pop
daa
cld
pop
or
cwde
lock
pop
sbb
mov
push
jmp
dec
xchg
ja
mov
mov
jp
clc
imul
fwait
scas
or
imul
add
push
mov
icebp
dec
in
imul
sbb
jmp
add
test
aaa
in
jecxz
(bad)
fadd
aad
fisttp
mov
mov
mov
lock
bound
add
rcr
cmc
jne
out
mov
repz
sub
adc
mov
jge
add
(bad)
std
mov
lock
movs
int
sub
pop
jg
pusha
push
mov
movs
sbb
xor
or
aas
ja
lods
mov
leave
mov
fucomip
dec
cmp
fld
mov
scas
dec
call
ds
lds
sub
daa
(bad)
fild
xchg
bound
pushf
repnz
pmaxub
int
xchg
hlt
je
mov
push
cmp
xor
inc
(bad)
into
mov
imul
hlt
inc
fnstsw
xlat
push
mov
(bad)
xchg
inc
add
pop
or
xchg
jmp
js
pop
gs
push
sti
popf
adc
pop
je
jg
add
out
loop
push
add
repnz
mov
retf
test
pusha
push
(bad)
into
dec
je
cmps
push
xchg
out
stc
pop
cmp
ret
leave
push
jbe
push
fdivr
mov
mov
sar
add
not
gs
push
lock
cmp
cld
sbb
shl
or
and
sub
push
add
jne
inc
sbb
push
inc
jne
add
mov
dec
adc
ds
stos
or
cwde
jo
sub
jp
sbb
jb
fimul
cli
cmp
dec
les
cmp
inc
mov
mov
das
punpckldq
jno
jle
inc
and
out
mov
ja
inc
cs
call
pop
ret
jo
pop
out
shl
sar
lock
jmp
(bad)
mov
ins
jle
xchg
pop
inc
xor
popf
into
dec
imul
call
jbe
push
ret
or
inc
jecxz
inc
test
mov
fwait
mov
outs
mov
jp
and
mov
aas
dec
jl
jge
push
mov
cwde
lods
loop
inc
(bad)
jmp
sub
in
mov
fild
call
daa
jne
xchg
add
or
mov
test
xor
or
jae
jnp
in
push
xchg
sbb
lahf
cmp
pop
(bad)
aad
jb
inc
neg
xchg
imul
ret
cmp
xchg
stos
jae
cmps
cmp
mov
jne
out
mov
jns
mov
out
xlat
pop
or
xchg
jns
out
jno
cli
pop
add
pop
(bad)
jge
(bad)
test
dec
push
loop
aam
xchg
jmp
sub
sbb
fdivr
sub
inc
mov
or
fmul
sbb
or
in
xchg
xchg
jl
jecxz
mov
daa
sbb
retf
imul
xchg
dec
inc
gs
pop
and
inc
cmp
dec
mov
rcr
or
pop
adc
mov
mov
in
je
test
repz
xor
rcr
jne
retf
push
xor
inc
and
fdiv
out
adc
sub
jmp
pop
inc
in
shl
call
xchg
mov
xor
jbe
stos
sbb
inc
push
jmp
cmp
cmp
pop
adc
mov
fucomp
and
nop
retf
push
xchg
mov
mov
lahf
invlpg
add
es
and
mov
(bad)
dec
das
ret
rcr
imul
jp
shl
test
sbb
test
sbb
and
xchg
cmc
call
and
add
fstp
push
in
repz
test
fist
push
push
push
mov
or
inc
(bad)
mov
inc
push
jnp
dec
cmp
fsub
cdq
cmp
pop
mov
das
jno
xchg
pop
retf
fld
rcr
pop
add
test
xchg
fwait
cmps
inc
movs
out
push
test
or
fnstsw
pop
and
xlat
adc
sti
fucomp
out
sub
push
jae
and
fmul
jge
rol
xchg
fwait
jnp
xor
push
ret
xchg
push
or
mov
fwait
sub
sbb
sub
dec
popf
(bad)
lock
in
add
dec
cld
fmul
push
inc
jle
hlt
jge
jb
inc
retf
iret
or
mov
xchg
fdiv
sbb
cmp
xchg
or
or
or
test
add
data16
aad
call
adc
jp
imul
cs
seto
in
jg
in
cmp
cmp
jecxz
jb
aaa
ret
pusha
push
push
sub
in
enter
adc
jae
arpl
mov
add
pusha
aaa
aas
jecxz
aad
dec
pop
je
ret
jno
cdq
jne
adc
mov
mov
lahf
lea
lods
pop
sub
inc
adc
cwde
nop
ficomp
popa
mov
(bad)
mov
mov
int3
add
xor
jns
(bad)
mov
lahf
inc
push
test
cmps
mov
pop
sbb
es
scas
push
mov
mov
dec
jp
mov
lock
data16
cmp
cmp
outs
pushf
ffreep
xchg
dec
ret
pop
dec
repz
loop
mov
pop
arpl
jbe
pop
xchg
std
loop
add
stos
or
gs
adc
pop
jbe
or
pop
fs
popa
sahf
pop
and
jns
jge
shr
pop
push
jno
jle
mov
mov
pop
add
add
jne
outs
popf
hlt
xchg
sub
je
lahf
pop
fnsave
pop
add
xchg
mov
dec
inc
fwait
test
into
out
adc
imul
test
xor
jns
arpl
jl
and
leave
fmul
and
clc
fstp
jmp
mov
sbb
popf
(bad)
and
add
pusha
adc
jbe
ja
dec
jns
ror
add
dec
sub
mov
sub
mov
(bad)
loopne
ret
add
ficomp
inc
push
mov
pop
dec
in
mov
push
jns
outs
push
dec
sub
inc
cli
or
arpl
fidiv
ror
rcl
fisubr
jge
movs
cmps
jg
iret
jl
jl
les
xor
mov
test
mov
push
out
push
mov
cmps
inc
mov
pusha
mov
xchg
pop
out
mov
xchg
mov
scas
inc
out
inc
push
xchg
push
out
adc
mov
inc
pop
or
pop
push
cmp
mov
or
inc
cs
iret
fcomp
add
lea
inc
hlt
scas
imul
idiv
dec
xor
ins
fcomp
jo
retf
pop
xor
std
frstor
mov
dec
shl
lods
mov
dec
int3
mov
sub
ret
out
xor
and
in
test
dec
xchg
sbb
aaa
(bad)
pop
sbb
push
ss
fcomp
xor
sub
sub
fisttp
sub
cmp
cmps
push
xchg
push
mov
mov
jo
frstor
add
inc
dec
outs
ins
and
jle
xchg
mov
repz
loop
dec
stos
test
pop
call
mov
push
xor
bnd
fild
mov
cmp
sbb
arpl
mov
mov
dec
lea
sub
rcl
sti
and
inc
lods
push
inc
lods
sbb
inc
mov
aas
das
add
push
test
dec
mov
lea
push
hlt
jmp
mov
shl
pop
sub
test
mov
or
sti
lds
push
inc
sbb
std
pop
cmp
inc
xchg
(bad)
pushf
mov
or
mov
jle
push
cmp
adc
cmp
in
and
pop
mov
xchg
adc
jns
ins
sbb
in
in
cli
fidivr
(bad)
jmp
pushf
(bad)
(bad)
mov
xor
out
(bad)
std
mov
mov
and
stos
inc
jbe
lea
sub
icebp
dec
lds
jl
dec
mov
or
movs
aas
xchg
fdivr
test
pusha
mov
add
fdivr
pushf
mov
aam
test
inc
into
cmp
fsubr
add
xlat
leave
jb
dec
fidivr
in
loope
cwde
dec
fnsave
or
outs
sahf
mov
mov
dec
int3
or
inc
and
scas
cmp
or
xchg
pop
xchg
push
repnz
jecxz
jo
inc
mov
push
add
loop
push
paddw
mov
jns
pop
inc
in
dec
mov
stos
jge
and
mov
fidivr
call
jge
imul
popf
or
out
lods
dec
in
(bad)
in
xor
xchg
push
and
loopne
popa
sbb
or
cmp
push
fs
pop
(bad)
dec
pop
movs
das
aad
lods
shr
imul
imul
pop
sahf
adc
jno
xor
or
icebp
xchg
jecxz
loope
jae
jl
fsub
test
frstor
sti
adc
or
xchg
mov
mov
mov
dec
fist
popf
adc
rcl
mov
(bad)
xor
in
jno
das
and
mov
mov
bound
adc
xchg
stos
loopne
pop
push
inc
and
xchg
jg
dec
and
loope
in
in
xor
pop
pop
(bad)
adc
lods
(bad)
loopne
fcmovnb
push
cmc
into
fstp
div
stos
fcmovne
gs
jecxz
enter
in
nop
push
jecxz
mov
ror
push
jmp
imul
add
add
test
xchg
jnp
cmp
fisubr
push
add
or
cdq
(bad)
int3
sbb
ret
jecxz
xchg
mov
loopne
mov
mov
inc
xchg
mov
mov
mov
and
js
and
cmps
xchg
out
lods
scas
test
ficom
sbb
xchg
cmp
lock
outs
shl
cwde
mov
pop
jl
and
pop
mov
push
out
mov
push
shr
mov
add
rcl
mov
add
jle
xchg
fucomip
pop
jge
mov
adc
ds
ins
fdiv
and
rcl
in
cmc
sub
(bad)
jmp
jns
cmp
repnz
xor
enter
lahf
call
sbb
mov
mov
loope
fist
lods
push
push
add
jl
shl
jno
shl
mov
jae
ja
add
(bad)
out
ins
icebp
into
push
lods
nop
iret
mov
pop
ja
dec
fmul
pop
sub
fidivr
or
sub
ror
add
inc
mov
into
and
or
test
pop
sbb
add
mov
shl
jle
pop
fldenv
sbb
jecxz
and
mov
mov
push
je
pause
jecxz
(bad)
ret
push
ret
mov
xchg
mov
or
xchg
popf
dec
std
js
out
fucomp
imul
lea
dec
lods
and
pop
cmp
cmps
mov
mov
lods
aad
cwde
push
mov
iret
ret
inc
into
rcl
mov
sbb
enter
fnsave
push
pusha
add
mov
pop
cmp
adc
jb
cli
aad
sub
fisubr
push
dec
cmp
lods
fwait
mov
test
xor
fst
mov
xor
(bad)
bound
xchg
xchg
mov
jb
mov
pop
adc
sahf
sbb
fdivr
dec
mov
les
xchg
(bad)
lock
mov
push
fld
add
or
jb
sbb
add
push
aad
mov
leave
dec
pushf
push
loopne
fsub
js
cmc
add
mov
push
das
in
mov
mov
xor
dec
mov
xor
xor
sar
fmul
jns
jae
stos
mov
mov
aam
dec
add
bound
jbe
fcom
std
lahf
xchg
inc
push
jmp
movs
sub
cmp
addr16
jle
sub
test
and
call
sbb
lods
jle
gs
icebp
pop
cs
lock
xor
xchg
ds
test
jbe
push
add
mov
lahf
jmp
cmp
ja
pop
sub
sub
cdq
cmps
pusha
inc
(bad)
sbb
adc
mov
aam
test
inc
adc
imul
je
jb
test
mov
adc
pop
inc
pop
sub
xchg
(bad)
mov
shl
xchg
int
lods
sub
dec
cmp
imul
(bad)
and
pop
pop
or
and
push
push
retf
ss
adc
dec
ss
int
ret
(bad)
and
sar
mov
cmps
inc
cmp
dec
ins
call
repz
fcmovbe
out
push
inc
mov
or
mov
cmc
sub
lods
daa
jmp
ror
mov
(bad)
inc
in
jnp
int3
mov
mov
cli
cld
jbe
adc
xchg
enter
push
sub
add
sti
xor
push
dec
push
pop
sub
jle
retf
and
ins
scas
popa
push
xchg
in
and
call
push
ins
or
xchg
xor
sahf
mov
sbb
ret
dec
xchg
pop
dec
and
jle
pushf
repnz
fsubr
loope
push
jp
and
fldenv
xor
mov
jle
sbb
mov
jmp
xchg
inc
and
jbe
or
cmp
test
leave
mov
not
mov
std
xchg
pusha
enter
mov
jge
test
sub
popf
mov
mov
fsubrp
jo
shl
or
sub
push
fwait
pop
adc
test
or
add
out
addr16
inc
dec
sub
iret
inc
mov
xchg
(bad)
mov
add
in
jno
int3
gs
pop
inc
push
mov
xchg
sar
xor
fcmovu
and
cmp
bound
xchg
cmp
dec
push
icebp
test
push
enter
xchg
xchg
call
cmc
inc
outs
push
mov
jmp
adc
popf
sub
js
dec
cmp
inc
scas
xchg
loopne
add
sbb
out
sub
aas
bound
aas
gs
test
jbe
fcomp
add
into
fsubr
hlt
mov
or
int
outs
or
xor
clc
xlat
add
in
(bad)
jecxz
mov
mov
add
out
pop
daa
(bad)
out
mov
dec
test
data16
ret
fwait
pop
xor
adc
(bad)
cli
fmul
push
xor
mov
stos
xor
xchg
xchg
call
mov
out
jle
sub
dec
mov
push
add
mov
ja
jo
push
(bad)
jb
pop
iret
aas
jne
jne
add
xchg
pushf
mov
cmp
xchg
push
pop
sub
popf
(bad)
adc
femms
xchg
xchg
dec
add
cdq
cmp
jae
dec
stos
sbb
or
gs
lahf
mov
shl
inc
pop
outs
test
cmps
jle
or
adc
add
lods
mov
mov
jmp
inc
jns
popf
lea
outs
outs
and
add
push
fsubr
call
pop
pop
and
sub
push
adc
jnp
in
cmp
add
lods
sub
adc
out
inc
vpaddw
push
inc
jl
out
push
jbe
(bad)
pop
dec
dec
pushf
mov
push
fdivr
adc
fisttp
xchg
mov
xchg
mov
dec
mov
ins
fs
lahf
sbb
(bad)
sub
jmp
xchg
ret
gs
mov
jge
je
cmc
mov
adc
int
in
out
jae
fdiv
(bad)
mov
cmp
dec
mov
cmps
in
sub
and
in
popa
std
xchg
mov
pusha
inc
sub
gs
ss
movs
cmp
mov
in
pop
add
add
(bad)
xlat
fbld
xor
movs
mov
dec
addr16
and
icebp
daa
jb
push
call
bound
jne
shr
cmp
sub
add
ins
pop
int3
push
stc
fdivr
(bad)
cmc
jmp
pop
fild
aam
sahf
push
mov
push
jp
sbb
rol
push
sbb
arpl
dec
enter
in
fst
(bad)
and
or
cmp
popf
dec
and
dec
retf
push
mov
test
mov
or
leave
jbe
or
pop
js
out
inc
mov
inc
adc
jne
fcomp
jne
je
or
inc
xor
push
adc
arpl
jne
iret
outs
or
lea
inc
sbb
and
push
dec
icebp
mov
iret
jge
into
test
(bad)
xchg
int
test
das
inc
push
jns
test
dec
inc
(bad)
jb
mov
mov
fistp
jno
mov
(bad)
stc
clc
jae
pop
sub
mov
sti
push
test
inc
push
div
push
dec
ss
aas
mov
fwait
dec
iret
out
or
shl
sbb
push
sbb
rcl
inc
mov
cmps
cmp
out
(bad)
xchg
mul
and
dec
js
in
xor
or
enter
cmc
mov
mov
pushf
pushf
mov
push
ins
xchg
push
sub
lock
adc
ins
cmp
mov
jle
and
adc
fxam
call
scas
jecxz
int
push
xor
lock
push
bound
sub
bound
sbb
cmp
(bad)
jnp
loope
ret
dec
push
es
cdq
pop
or
adc
in
sbb
call
jl
add
aad
jbe
push
inc
scas
mov
mov
(bad)
fwait
clc
outs
popa
inc
xchg
xor
mov
call
fcom
push
push
pop
fld
in
jnp
fmulp
inc
lahf
ja
(bad)
stos
ja
ds
mov
dec
add
out
clc
push
push
xor
mov
lds
mov
jno
mov
adc
test
jge
out
push
ds
add
(bad)
mov
inc
fbld
dec
aaa
mov
or
dec
xchg
cdq
sub
jecxz
pop
inc
push
mov
lahf
mov
add
mov
mov
mov
push
push
dec
in
add
call
or
jbe
inc
rcr
adc
fwait
push
imul
lds
and
(bad)
pushf
imul
int3
stos
jg
(bad)
dec
sub
lods
inc
push
sti
sbb
stos
jbe
fwait
mov
pop
out
jns
mov
dec
jo
inc
jl
dec
mov
scas
sub
repnz
cmc
popf
pop
cld
repz
xor
ins
xor
xor
and
fcom
or
jno
stc
xor
jo
data16
pop
dec
ins
xor
jmp
(bad)
xor
mov
inc
dec
rcl
popf
aas
sahf
mov
cmc
xor
jbe
pop
mov
inc
pop
leave
aaa
loopne
inc
in
push
sbb
loopne
es
clc
mov
fiadd
retf
inc
inc
add
cs
mov
inc
cmp
jo
shr
add
mov
pop
pop
int3
pop
sub
arpl
clc
out
sbb
sbb
dec
adc
and
fild
cld
lahf
ret
fwait
cs
push
fwait
inc
out
pushf
push
pop
out
jmp
xchg
or
(bad)
test
fisttp
dec
sub
out
icebp
mov
jmp
popf
pushf
sbb
(bad)
and
jg
mov
js
movs
xchg
jg
push
test
inc
dec
mov
fwait
jbe
jg
dec
mov
out
sub
cdq
mov
test
popf
adc
in
mov
rol
sbb
sbb
in
repnz
add
push
movs
mov
fisub
data16
pusha
cmp
add
cld
mov
inc
cmc
inc
mov
push
jns
and
jecxz
mov
scas
stc
xchg
lods
sub
imul
shl
fdivr
and
inc
jge
cmp
rol
in
or
push
cmp
mov
cmc
dec
and
iret
push
(bad)
not
cld
ficomp
add
pop
daa
lds
dec
in
dec
in
rcl
not
lahf
(bad)
ja
and
loope
jne
dec
jae
call
push
sbb
iret
movs
cmp
or
xor
cmc
mov
mov
rcr
pop
cmps
adc
aad
mov
jle
pushf
or
shl
fld
sub
ss
out
xchg
pop
xor
mov
pop
enter
ss
inc
push
inc
xchg
arpl
xchg
cwde
sbb
sub
xchg
aas
push
(bad)
das
adc
std
pop
gs
sbb
or
in
dec
in
movs
test
xchg
lahf
xor
cmps
and
mov
outs
test
enter
adc
sbb
inc
ret
aaa
jmp
add
shl
jnp
iret
aad
loop
xchg
dec
retf
cwde
sbb
xchg
pop
shl
(bad)
push
hlt
test
xor
in
jmp
mov
in
pushf
pusha
add
push
pop
arpl
sbb
adc
mov
shl
retf
jmp
mov
push
mov
inc
(bad)
xchg
mov
xchg
cmp
pusha
call
adc
and
cwde
test
xor
cmps
ret
std
ss
mov
dec
push
cmc
and
stos
lods
dec
pop
inc
mov
xchg
cld
aad
jg
xchg
jne
or
sub
test
fnsave
in
mov
dec
ss
mov
xchg
and
mov
shl
aad
xchg
ja
aas
pop
dec
xchg
adc
jg
int3
cli
xchg
adc
mov
pusha
test
or
test
rcl
fisttp
sub
pop
mov
test
adc
fidiv
mov
xchg
add
mov
loop
retf
ss
ja
xor
mov
es
inc
sbb
sbb
mov
or
enter
ror
mov
mov
loope
pop
cmp
add
cld
je
call
(bad)
xor
les
or
repz
int3
adc
push
aad
in
sub
lods
push
jns
jmp
push
inc
jne
lods
mov
(bad)
(bad)
or
mov
mov
mov
lods
mov
sub
(bad)
mov
cmp
aas
lds
int
inc
and
and
mov
add
int3
adc
inc
pop
stos
in
sbb
pop
sub
jns
cmp
cmp
adc
add
mov
and
inc
mov
push
mov
xchg
(bad)
sub
xor
mov
and
add
mov
jns
std
cdq
add
clc
pop
mov
xchg
outs
ret
ins
ins
pop
stc
or
jns
aam
xor
jbe
fmul
cmp
pop
push
add
jge
ja
cdq
out
inc
(bad)
(bad)
sub
shl
xchg
lds
out
xchg
xchg
sbb
call
sub
mov
jbe
call
or
std
data16
add
xor
cli
pop
jle
inc
pop
out
ins
add
shl
scas
jge
(bad)
rcl
out
mov
call
and
out
push
mov
xchg
enter
cmp
adc
inc
idiv
cvtps2pi
add
jno
add
loopne
push
mov
imul
ja
mov
in
mov
xchg
outs
fs
xchg
push
sub
cli
das
ret
mov
sub
repnz
xchg
mov
ja
push
sub
sahf
shr
adc
mov
mov
mov
pop
loop
dec
push
pop
int3
shr
repnz
or
out
xchg
add
pop
mov
icebp
dec
adc
push
cwde
js
sub
mov
popa
add
jo
mov
pop
lds
jge
xchg
mov
gs
addr16
in
mov
das
adc
ret
ficom
jnp
out
loopne
mov
iret
aaa
(bad)
rcl
xor
das
cs
xchg
jmp
inc
mov
ret
mov
les
in
fcomp
(bad)
out
shl
and
mov
sub
pop
inc
enter
pop
arpl
jecxz
aas
push
adc
cmps
mov
adc
fcomip
fwait
cmp
dec
cwde
push
out
ret
cli
cmc
jle
inc
jbe
mov
push
sahf
lock
cld
sub
mov
cmp
inc
cmps
or
pop
cmc
mov
pop
(bad)
cmp
dec
push
and
std
mov
es
and
retf
mov
cld
mov
pop
fs
push
pop
std
jmp
mov
jecxz
js
pop
sti
in
ror
bswap
in
ror
xchg
inc
mov
rcl
jmp
xor
ins
idiv
jle
dec
arpl
nop
and
or
test
lods
ret
rcr
loop
fdivrp
or
push
add
rcl
test
rcl
push
out
and
xor
add
jecxz
or
cs
sub
retf
xor
retf
cmp
fsubr
adc
je
and
mov
mov
xchg
xchg
push
xor
je
inc
pop
mov
inc
(bad)
push
(bad)
xor
xchg
mov
pop
mov
ss
addr16
sbb
outs
mov
inc
push
xchg
sbb
and
cmps
jb
fst
mov
pop
mov
sub
data16
imul
xlat
outs
fmul
rcl
sbb
popf
mov
mov
ret
jns
push
lahf
into
leave
nop
into
fstp
cdq
pop
cwde
inc
xor
in
inc
xchg
push
inc
add
or
mov
aam
xor
add
push
jmp
je
or
fdiv
sbb
jmp
(bad)
and
cdq
mov
mov
popf
mov
jmp
sbb
sub
jmp
imul
push
movs
jmp
out
mov
pop
loopne
mov
cmc
leave
mov
pop
(bad)
mov
(bad)
sbb
sbb
cmc
sahf
leave
ss
rcl
cli
pop
mov
(bad)
jns
shl
test
fs
xchg
sub
jnp
mov
ror
cmp
movs
push
or
add
xor
stc
out
int3
fdivr
jns
cmp
ret
test
loopne
pusha
mov
lods
dec
mov
push
jge
push
add
or
mov
mov
mov
lock
(bad)
pop
ins
or
js
xchg
add
xchg
adc
out
call
int3
mov
dec
adc
sub
outs
push
gs
cmps
aaa
xchg
jp
push
mov
ror
repz
jno
fsubr
pop
icebp
sub
inc
push
jp
test
pop
mov
inc
xlat
call
jno
adc
fsubr
cld
shld
aaa
or
sub
fcomi
jbe
adc
adc
cwde
dec
bound
sub
ja
adc
cld
add
inc
add
sahf
jecxz
test
out
cmp
fs
call
jbe
xlat
or
jae
out
cmp
clc
dec
in
(bad)
(bad)
inc
jle
and
or
jmp
loopne
(bad)
add
cmp
mov
push
inc
xchg
retf
add
mov
dec
push
(bad)
push
inc
mov
push
aam
or
imul
jne
div
inc
addr16
xor
mov
mov
mov
jb
(bad)
fiadd
inc
and
pushf
xchg
inc
ins
mov
and
xor
outs
add
ss
and
cmp
jbe
mov
fild
into
cmp
cmc
xor
dec
mov
fisttp
aas
in
jmp
nop
test
sbb
daa
inc
aas
scas
dec
fidivr
jb
out
push
xor
in
arpl
sahf
(bad)
cmps
xor
push
outs
das
pop
dec
fist
sub
jg
xor
repz
mov
dec
jbe
es
aaa
or
and
cdq
push
mov
xor
adc
jecxz
jmp
jae
sub
cmp
inc
adc
cld
push
aaa
lahf
imul
pushf
rol
cmc
sub
mov
cmp
add
mov
cs
push
xchg
call
push
outs
mov
test
std
sti
xor
test
adc
inc
xchg
or
xchg
fidiv
fldenv
loop
add
daa
stc
mov
cmp
jns
fldcw
xchg
imul
cld
icebp
cmp
sbb
xlat
cs
pop
add
sbb
fadd
mov
and
loopne
jnp
pop
xor
inc
mov
shrd
movs
sub
lods
xor
mov
push
jmp
mov
movs
mov
mov
xchg
and
leave
popa
lahf
outs
jae
mov
dec
mov
jnp
fist
outs
cmp
sbb
pop
mov
pushf
pop
mov
cli
sbb
mov
(bad)
xlat
int3
xchg
ficom
sbb
stos
cmp
add
loopne
out
add
out
xchg
(bad)
cmp
mov
push
sbb
ins
imul
push
fwait
mov
adc
adc
sti
nop
in
mov
mov
add
and
lds
std
push
leave
fistp
cmps
or
popf
test
(bad)
ins
mov
inc
push
ins
inc
xchg
sbb
mov
and
dec
loop
lahf
pop
ror
or
popf
or
and
xlat
pop
iret
mov
mov
fsubr
sub
and
and
clc
cwde
pop
adc
mov
mov
add
mov
pop
mov
lods
out
inc
mov
outs
sbb
mov
mov
std
pop
iret
inc
inc
mov
push
or
pop
outs
jne
repz
push
xor
jmp
aam
sbb
movs
retw
cmovle
add
and
clc
xchg
fadd
xchg
sub
and
sub
inc
arpl
sbb
sti
fwait
retf
mov
(bad)
push
and
pop
fmul
jl
in
adc
(bad)
(bad)
pop
add
sahf
push
push
dec
inc
jbe
mov
mov
shr
aad
jbe
aad
dec
inc
ds
(bad)
or
cdq
loop
leave
js
sbb
repnz
push
jmp
jae
dec
mov
pop
cwde
and
dec
stos
inc
pop
sbb
cmp
dec
and
scas
xchg
and
push
sub
push
lods
hlt
jne
add
xchg
mov
cmp
inc
jmp
cwde
jae
add
out
pop
push
pop
add
in
and
pop
out
bound
inc
mov
rcr
add
lahf
dec
out
ss
xor
popa
test
test
sahf
lock
push
arpl
and
or
out
inc
push
inc
mov
test
out
jnp
daa
mov
test
retf
pop
imul
cdq
shl
imul
(bad)
or
xchg
fstp
pop
inc
jno
inc
adc
in
lods
icebp
ss
gs
sub
fs
or
or
pop
mov
rcr
aam
cmp
adc
int3
xchg
gs
ss
popf
push
sahf
inc
jmp
add
adc
ins
mov
sbb
fld
inc
or
ja
aad
sbb
pop
int
mov
out
push
dec
sbb
xor
xor
pushf
cld
xlat
xlat
(bad)
mov
std
and
call
xlat
(bad)
pop
mov
push
sahf
call
cld
jo
rcr
sub
sub
xor
mov
inc
adc
ret
sub
jecxz
inc
or
adc
neg
mov
in
test
call
push
xchg
and
or
jge
push
movs
inc
push
lahf
jge
dec
(bad)
fdiv
aas
call
ret
pop
and
scas
fwait
adc
mov
push
adc
jp
icebp
std
into
push
shl
xchg
jmp
aaa
ins
sbb
and
xchg
add
push
jnp
aas
es
mov
mov
and
sbb
mov
aaa
mov
popf
pop
fimul
retf
mov
mov
cwde
pop
fmul
lock
push
adc
aaa
xor
sub
ds
(bad)
mov
test
loope
add
push
mov
fs
inc
jae
and
sbb
inc
mov
fisub
pop
or
mov
loopne
push
jg
ret
imul
xor
cdq
pop
inc
adc
repnz
jle
xchg
push
aam
cmp
mov
or
(bad)
cvtps2pi
(bad)
fistp
aam
pop
dec
cmp
ret
xor
sbb
rcl
test
adc
std
xchg
out
loopne
push
xchg
mov
inc
test
pop
add
pop
inc
inc
or
int3
stos
enter
push
js
clc
sbb
xchg
in
mov
xchg
frstor
and
sbb
fdivr
jle
loope
aas
dec
jg
jmp
mov
or
inc
fwait
jno
int3
mov
mov
outs
pop
ss
mov
(bad)
js
xor
lods
sbb
fdivr
int3
xor
mov
fist
and
and
iret
hlt
stos
jle
push
jl
push
iret
aam
push
sti
outs
hlt
ficomp
scas
xchg
pusha
les
ins
mov
ja
ds
inc
fisttp
(bad)
movs
fisttp
push
fwait
mov
adc
sbb
add
mov
dec
push
movs
ret
(bad)
scas
scas
call
popa
pop
xchg
dec
mov
popa
pop
pop
mov
xor
or
mov
xchg
push
add
out
loope
inc
je
pushf
test
add
cmp
pop
imul
jns
mov
xchg
arpl
cld
lar
sub
cmps
dec
add
and
mov
retf
adc
pushf
jl
test
jle
cmc
mov
sub
imul
push
mov
cwde
adc
dec
push
pop
sub
xchg
xor
out
adc
sbb
cmp
xor
inc
push
push
pop
push
lock
ds
or
in
nop
push
fidivr
pop
xchg
push
cmp
outs
mov
repz
outs
push
movs
mov
adc
rol
(bad)
not
jnp
fistp
aas
cmp
adc
sbb
cmc
into
in
xor
or
pop
adc
out
outs
dec
xchg
lea
jne
sbb
xor
adc
fld
mov
cli
ret
jae
imul
mov
mov
cmp
aam
and
adc
mov
ss
jo
icebp
(bad)
and
cmp
xlat
stc
push
(bad)
fwait
out
call
mov
xlat
fcmovnb
push
and
cdq
cmp
jne
imul
mov
xchg
push
arpl
xchg
jmp
mov
xor
sbb
xor
test
cmp
inc
inc
xchg
aam
inc
sub
fsub
xor
in
mov
xchg
cmc
or
call
pop
jg
sbb
loopne
sub
push
jg
cdq
fsubr
mul
mul
jp
lahf
arpl
mov
pusha
adc
pop
(bad)
lea
xchg
xor
inc
pop
mov
adc
dec
jo
rcr
std
leave
ja
outs
inc
imul
div
add
sbb
sahf
cmp
(bad)
in
sub
pop
(bad)
pop
mov
cdq
mov
mov
sub
(bad)
call
xlat
imul
enter
mov
mov
sti
imul
into
lods
test
xor
xchg
dec
int
movs
mov
retf
cdq
int
sbb
mov
cmp
test
rcr
add
cmps
out
ret
dec
std
aas
outs
or
retf
repz
mov
xchg
leave
jne
xchg
sbb
std
cmp
in
add
pop
ds
inc
mov
neg
and
or
retf
rcl
pop
cmp
int3
mov
dec
rol
and
sar
pop
xchg
sbb
xor
sub
cmc
cmp
xor
xchg
jo
mov
retf
test
jae
shl
retf
sub
out
jge
in
aad
dec
mov
pushf
pop
fisttp
pop
mov
push
fnsave
lahf
jbe
inc
into
jnp
dec
jle
mov
aaa
mov
jg
sbb
inc
lock
and
(bad)
mov
jbe
ret
bound
jl
jmp
pop
rol
enter
mov
sar
sub
(bad)
rol
or
mov
sbb
push
sub
(bad)
fist
repz
pop
cmp
arpl
pop
lahf
loopne
inc
fwait
mov
ror
sbb
aad
push
sub
sahf
xchg
dec
in
or
pop
ss
cli
xchg
fs
or
xchg
jl
fisub
jp
rcl
lds
cmp
loopne
jl
xlat
shr
hlt
pmaddwd
sub
pop
icebp
push
pop
(bad)
sahf
fs
rcr
inc
and
(bad)
movs
js
push
xchg
inc
cmc
pop
mov
inc
dec
fmul
std
bound
sbb
(bad)
push
fs
push
jp
ret
dec
mov
mov
jmp
mov
mov
sub
call
test
sub
xchg
mov
mov
inc
ins
inc
int
add
cmp
(bad)
int
sub
pop
cmp
cld
cmp
test
popa
fstp
inc
repnz
gs
cmp
mov
js
inc
mov
test
push
fidivr
pop
mov
cmp
fnstsw
xor
or
fdivr
(bad)
in
sub
mov
pop
out
arpl
arpl
mov
inc
xchg
enter
inc
inc
es
outs
mul
xlat
inc
(bad)
addr16
popf
shl
aam
loop
and
and
cmp
or
push
loop
mov
adc
std
mov
in
lods
jmp
ja
push
mov
pop
sti
and
dec
push
je
(bad)
lahf
jno
js
mov
xor
inc
fs
addr16
xlat
je
adc
call
nop
loope
gs
mov
pop
sub
xchg
nop
push
cwde
test
les
jns
push
in
cwde
rcl
mov
mov
(bad)
clc
popf
lahf
imul
test
shl
cs
pop
or
dec
and
daa
mov
adc
hlt
or
out
test
jnp
mov
mov
(bad)
inc
and
shr
cmp
dec
iret
retf
lock
daa
arpl
aaa
mov
arpl
movs
or
push
scas
mov
pusha
xlat
shr
mov
sbb
mov
lods
xchg
ja
iret
mov
shl
scas
or
imul
ins
int
sub
cmc
call
jg
fs
xchg
fnstcw
jo
mov
arpl
xor
inc
pop
push
cli
sbb
cmp
mov
dec
cld
jle
sbb
inc
mov
test
xchg
scas
ja
movs
into
push
cmps
sahf
mov
retf
jo
rcl
mov
outs
mov
push
inc
add
inc
sub
out
shl
jmp
jl
inc
jg
push
js
pop
jmp
iret
daa
jne
aad
mov
inc
retf
cli
mov
xchg
call
call
xor
jno
ficom
sub
sub
es
dec
hlt
sbb
pop
cdq
stos
jne
enter
mov
xor
(bad)
int3
ss
rcl
cmps
mov
je
dec
mov
aad
lods
mov
sub
idiv
xchg
sub
sub
daa
sbb
sbb
pop
stc
inc
enter
shl
jmp
xchg
mov
cmp
adc
stos
arpl
inc
icebp
into
mov
(bad)
aam
or
pop
xor
inc
out
mov
cmp
push
sbb
sub
cmp
jbe
sbb
xor
icebp
push
test
shl
pusha
retf
pop
jmp
add
cmc
jg
xchg
int3
out
(bad)
xchg
loopne
push
inc
cmp
inc
in
jl
das
sub
fwait
push
ror
jmp
stc
inc
adc
mov
add
(bad)
fdivr
std
call
repnz
push
cmc
popf
fiadd
mov
jl
push
push
clc
inc
mov
adc
fld
or
scas
push
(bad)
pushf
fs
mov
dec
mov
sub
sub
push
int3
push
out
xchg
xchg
cld
std
mov
xlat
in
pop
pop
in
add
cwde
repnz
(bad)
out
mov
leave
icebp
adc
dec
inc
scas
out
mov
lock
cmps
loope
das
cmp
es
loopne
fwait
rcl
and
push
cwde
stc
adc
ret
adc
sbb
inc
xchg
stos
bound
popf
xor
icebp
cld
loop
lock
scas
inc
mov
ins
pushf
rcl
adc
sbb
push
mov
mov
sbb
imul
inc
pop
cmp
scas
loope
sub
dec
sbb
(bad)
outs
pop
xor
dec
cmp
or
jb
cs
stc
rcl
and
adc
in
ret
pop
mov
dec
loopne
cli
cmps
push
in
mov
xchg
cmp
jp
xor
sub
mov
cmp
outs
sar
(bad)
cs
dec
mov
mov
and
inc
cdq
mov
cmp
jge
sub
mov
ret
push
ja
add
mov
int
inc
aaa
xor
mov
lahf
imul
das
(bad)
dec
(bad)
shl
repz
pop
imul
or
or
fnsave
test
xchg
sub
out
push
jge
cmp
fidivr
nop
mov
pop
sbb
aaa
xor
push
add
popa
or
mov
jbe
adc
ds
push
cmps
add
es
dec
jl
js
nop
add
mov
pop
cmp
test
dec
addr16
packssdw
inc
jo
mov
jle
cdq
fs
cmp
sub
rol
sar
jmp
push
adc
(bad)
out
pop
loop
out
in
jns
push
jb
sbb
arpl
pop
jb
cmps
xchg
shl
int3
and
sar
jle
dec
inc
and
(bad)
or
cmp
cmp
in
fstp
push
sar
jecxz
dec
xchg
cmp
dec
sar
and
sar
scas
lahf
repz
mov
dec
add
cmp
add
adc
out
mov
stos
aad
fmul
imul
inc
mov
loope
loope
(bad)
enter
jo
dec
adc
ss
aad
adc
inc
adc
gs
clc
repnz
cmp
xor
in
(bad)
loope
js
adc
xchg
push
push
dec
fnsave
popf
repz
push
fimul
cmp
push
inc
shl
shl
test
jecxz
cmp
ds
sub
mov
std
jb
mov
movs
les
jl
scas
jp
and
fidivr
popf
stc
loopne
out
cmps
in
add
stos
fbstp
mov
or
inc
daa
mov
int
push
push
push
xor
outs
aam
je
jb
mov
dec
mov
dec
scas
ja
and
push
adc
xchg
push
and
jmp
inc
mov
into
pop
and
popf
push
mov
adc
mov
stc
inc
or
xchg
xchg
stos
lock
fmul
or
pushf
push
sbb
mov
sub
push
sar
loopne
fs
lock
bound
pop
out
fiadd
mov
mov
ret
push
xchg
mov
popf
or
or
retf
dec
inc
sti
push
push
sub
mov
mov
adc
mov
cs
ret
push
pushf
out
into
movs
ret
jb
cmp
hlt
fcmove
push
cmps
popf
jmp
push
xor
movs
push
call
push
enter
jecxz
imul
fld
jl
push
or
inc
icebp
jp
out
xor
jbe
jb
out
js
repnz
mov
mov
lods
stos
dec
sub
cmps
sub
popa
jmp
outs
scas
movs
pop
xor
retf
and
imul
(bad)
cmp
lea
ret
cld
sub
xlat
sbb
imul
mov
mov
(bad)
mov
push
xor
mov
aad
xchg
mov
mul
retf
cld
ja
cmp
scas
mul
cmp
les
repnz
xor
lods
repnz
dec
mov
add
pop
addr16
pop
and
fldenv
adc
aaa
(bad)
mov
popa
push
int
xchg
add
pushf
(bad)
xchg
pop
call
lods
jb
pop
(bad)
mov
jl
jmp
and
xor
int
test
ror
(bad)
pop
mov
scas
mov
enter
dec
adc
sub
into
sbb
mov
into
or
dec
lock
mov
add
outs
out
out
adc
cli
push
hlt
dec
clc
sbb
fucomip
cs
in
mov
cmp
in
ja
cmp
or
es
out
gs
mov
xchg
ss
mov
pop
jae
fadd
aad
or
cld
jo
pop
pop
cmp
xchg
mov
pop
push
(bad)
out
mov
shl
popa
inc
jno
cmp
mov
push
pop
rol
imul
or
push
mov
dec
aas
and
mov
sub
sub
and
mov
enter
rol
pushf
aad
xchg
mov
dec
mov
sbb
adc
push
or
xor
(bad)
xchg
cmp
inc
push
inc
cwde
hlt
lahf
dec
add
cmps
inc
jecxz
mov
test
inc
mov
or
(bad)
fadd
clc
enter
sub
lds
int
sub
loopne
stos
sahf
mov
bswap
inc
mov
push
in
imul
xor
ins
mov
dec
out
dec
add
rcl
mov
fild
loopne
fwait
mov
gs
sbb
add
call
in
ror
into
js
stos
xchg
loop
sub
dec
jmp
icebp
sahf
add
jmp
xchg
push
cmp
cwde
cwde
adc
cmp
mov
and
or
or
out
pop
mov
cmp
sub
xlat
add
push
call
arpl
mov
xor
dec
dec
ret
aaa
xchg
mov
ss
or
inc
add
xor
jle
and
les
fcmovu
mov
jmp
mov
and
xchg
push
jge
cmp
cmp
mov
mov
or
mov
stos
sbb
push
cwde
xlat
cmps
fwait
(bad)
ins
inc
add
cs
imul
adc
sbb
lods
dec
imul
push
jns
xchg
jo
(bad)
cmc
(bad)
jle
pop
sub
mov
lock
fisttp
jo
rcr
mov
push
pop
imul
test
data16
shl
idiv
and
jp
arpl
dec
jecxz
jmp
inc
pop
xchg
cs
pushf
into
xor
and
scas
adc
cmp
int
jmp
sub
adc
movs
jge
xor
and
sub
adc
inc
pushf
sbb
push
fbstp
pop
mov
fist
sbb
mov
outs
mov
ret
into
inc
jbe
lds
aam
(bad)
cmp
aas
test
dec
fisub
cmp
adc
adc
dec
add
fisttp
adc
inc
sbb
stos
jbe
clc
js
add
mov
push
es
pop
cld
cs
outs
inc
mov
mov
je
lea
adc
scas
push
inc
mov
arpl
or
xor
or
mov
jg
mov
(bad)
pop
push
xchg
js
fnstcw
cmc
and
xchg
call
mov
push
mov
test
in
jo
sbb
aaa
loop
ja
mov
push
orps
fadd
cmp
push
cmps
out
pop
adc
scas
mov
mov
or
jmp
inc
pop
mov
push
int
push
(bad)
cmp
add
sub
ficom
neg
arpl
cmp
mov
mov
jp
movs
imul
cmp
stc
and
cmp
je
aaa
inc
push
mov
cdq
dec
or
cwde
inc
aad
fidivr
in
pop
js
(bad)
sbb
loop
add
stos
cmp
xchg
xor
fidiv
mov
ja
inc
xchg
mov
pop
outs
lods
in
or
(bad)
pop
(bad)
retf
add
and
inc
mov
fs
xor
int3
jne
call
push
jmp
fdiv
pop
mov
pop
xor
(bad)
fs
std
adc
fistp
adc
or
out
fwait
dec
pop
in
jge
dec
inc
cmps
fmul
test
std
mov
cli
add
(bad)
into
jns
inc
mov
inc
test
ins
lods
pop
imul
int3
leave
mov
push
sbb
scas
cmp
push
lods
hlt
out
and
jp
jne
mov
in
jo
sub
pop
je
push
dec
sub
cwde
nop
mov
int3
xchg
ins
jecxz
fs
inc
sbb
jo
imul
mov
mov
out
push
call
cdq
push
cmps
ja
or
int3
mov
jo
add
pop
neg
xor
cli
cmp
mov
mov
aad
les
test
shr
icebp
ror
cmp
ds
dec
push
mov
hlt
push
(bad)
and
jnp
ret
test
add
mov
mov
pop
dec
or
call
icebp
int
lock
les
enter
mov
test
sub
lock
sbb
fwait
add
lods
adc
sbb
scas
jecxz
je
aas
sub
js
jle
pop
popa
jge
fbstp
xchg
ret
inc
(bad)
cmps
mov
mov
pop
jecxz
stos
mov
test
push
xor
pop
xor
jno
or
push
push
mov
mov
pop
stos
(bad)
mov
jecxz
add
jnp
push
adc
sub
adc
lock
mov
fiadd
cs
mov
sbb
sub
add
sbb
mov
push
test
adc
jg
les
sbb
ds
xchg
add
dec
cwde
push
cmps
stos
sub
mov
inc
jo
leave
fild
es
loopne
push
pop
inc
sbb
push
data16
lahf
mov
mov
test
mov
mov
fidivr
movs
and
sub
shl
lock
and
in
retf
push
rcl
pop
sti
ficomp
mov
adc
pop
jge
mov
add
stos
inc
imul
cld
fmul
mov
lock
int3
jmp
in
shl
jnp
pop
dec
call
out
fdivr
push
mov
hlt
test
push
pop
daa
adc
or
inc
aaa
cmp
push
push
shr
pusha
int3
into
(bad)
mov
sbb
retf
add
push
pop
mov
imul
adc
inc
loop
sbb
movs
loope
and
icebp
push
add
rcr
(bad)
add
or
jmp
mov
or
test
stos
mov
push
pop
mov
sbb
xor
mov
xchg
cmp
daa
xlat
aaa
pop
jmp
repnz
psubusb
int
sbb
outs
jmp
stos
repnz
push
jle
call
jno
and
jl
xor
push
fidivr
scas
fisttp
cli
or
fadd
test
hlt
and
sbb
sub
jns
call
movs
in
xchg
test
cmp
cmp
push
and
mov
es
mov
and
bound
sar
jb
or
cdq
jmp
pusha
or
pop
mov
jno
cli
push
sub
xchg
mov
dec
push
pop
push
leave
jmp
inc
ins
std
add
jg
movs
jp
mov
lods
in
fistp
fld
inc
imul
in
ss
fdivr
lock
inc
fcomp
dec
add
mov
(bad)
cmp
into
sti
sahf
add
fwait
pop
icebp
test
or
jns
(bad)
cmps
and
or
add
mov
fld
xchg
cmp
shr
test
(bad)
icebp
in
mov
fld
jge
sbb
xlat
sbb
xchg
jns
jp
jnp
and
ret
add
cdq
cmp
in
mov
push
pop
pop
popa
dec
js
sub
inc
aaa
jle
loopne
mov
pop
jo
mov
cmp
loopne
cmps
(bad)
gs
imul
and
adc
cmp
sar
stos
mov
cwde
cmp
push
sbb
pop
call
sub
(bad)
mov
add
call
mov
inc
dec
push
sti
das
adc
nop
das
jecxz
lods
pop
dec
xchg
or
sahf
or
cmp
pushf
sbb
in
dec
and
mov
and
(bad)
cs
ds
jg
ins
cli
std
or
push
mov
push
sbb
jb
push
jmp
test
call
mov
adc
pop
sub
dec
ret
push
test
adc
inc
sbb
sbb
in
loope
test
imul
jno
mov
iret
retf
js
neg
(bad)
sahf
fld
pusha
std
inc
les
stc
call
jmp
pop
jns
pop
lea
mov
and
ret
fldcw
mov
stos
mov
pop
sbb
ss
iret
sbb
arpl
loop
or
xor
pop
and
pop
xor
add
jp
xor
mov
aas
inc
dec
cmp
mov
jecxz
push
mov
sahf
and
mov
inc
in
dec
jbe
cmp
add
push
aas
mov
cdq
test
mov
jecxz
cmps
and
inc
(bad)
inc
lea
lea
sti
mov
pop
mov
es
xchg
or
lods
cs
dec
into
jmp
daa
xor
pop
imul
jno
hlt
mov
inc
pusha
stos
repnz
pop
xchg
call
cmps
scas
push
mov
sahf
loope
inc
aam
push
push
retf
pop
pushf
xchg
ror
mov
jl
push
das
hlt
test
dec
dec
xchg
cmp
mov
test
cmp
dec
push
mov
int3
cs
push
xchg
xor
inc
mov
jne
add
out
xor
inc
mov
xchg
add
or
pop
hlt
and
cld
sub
cld
in
addr16
aaa
mov
push
jge
mov
ldmxcsr
mov
ret
enter
adc
in
movs
imul
jnp
add
jbe
cmps
outs
adc
fist
xor
lea
xchg
js
sbb
movs
sbb
popa
xchg
(bad)
lods
pop
or
fmul
sub
inc
xchg
cwde
das
je
rcl
ja
sbb
js
pop
rcr
fistp
outs
add
popa
cmp
dec
xor
sbb
outs
sub
xor
fisub
push
leave
jg
repnz
out
repnz
pop
push
and
xor
out
and
(bad)
les
pop
jg
sti
fcomp
into
mov
sar
scas
cmp
test
pop
ins
push
pop
and
fwait
icebp
(bad)
and
add
and
and
or
push
cmp
(bad)
stos
dec
aad
sbb
aaa
das
js
sbb
mov
xchg
retf
je
das
clc
lahf
or
cmp
neg
jp
mov
adc
mov
dec
in
ss
cld
jmp
cmp
jmp
mov
mov
ret
adc
frstor
sub
xor
and
xchg
(bad)
rcr
icebp
pop
sbb
inc
sbb
xchg
mov
loop
cdq
jmp
mov
dec
stos
dec
or
mov
div
ret
lock
mov
sbb
and
add
imul
pop
dec
inc
sti
push
sbb
and
jp
daa
jp
dec
ss
rcl
push
dec
sbb
add
xor
mov
shl
int3
add
dec
dec
retf
mov
in
sti
in
sub
jns
push
ds
bound
push
jne
in
mov
push
fsubr
outs
dec
push
leave
(bad)
ret
mov
icebp
ror
xor
out
xchg
add
adc
rcr
mov
addr16
shr
or
ret
pusha
cmp
pop
inc
pop
mov
mov
pop
push
xor
imul
sbb
xlat
pusha
push
out
or
push
ss
mov
movs
cwde
xor
xor
pushf
cmc
xchg
in
int
or
scas
imul
sub
pop
jecxz
lods
push
push
cmp
inc
mov
lahf
inc
pushf
inc
cli
adc
(bad)
dec
add
sub
push
test
scas
inc
adc
sbb
add
and
mov
xchg
sti
int3
add
cli
jmp
push
nop
sub
add
add
dec
jo
jp
cmp
pop
ret
stos
sbb
imul
push
lods
rcl
js
mov
int3
xchg
dec
push
pop
pop
(bad)
mov
fs
push
outs
(bad)
adc
adc
jae
clc
js
ficom
xchg
jp
add
xchg
aam
jmp
loop
dec
xchg
cmc
adc
out
mov
js
mov
les
das
inc
cli
enter
lods
push
add
mov
sub
xor
cmp
aad
push
stos
ret
inc
pop
dec
xchg
ds
jae
iret
fptan
inc
and
mov
out
int
mov
popf
inc
fs
mov
add
rcl
push
imul
push
add
addr16
sub
aam
fsubrp
fwait
sub
cmp
(bad)
movs
mov
fsubr
pop
sbb
add
mov
test
scas
jmp
dec
adc
fidivr
lods
push
fwait
dec
cdq
pop
lods
(bad)
pop
popf
sbb
mov
push
enter
push
pop
add
(bad)
imul
cmp
or
lods
jge
push
sbb
cld
xchg
xor
jnp
shl
pop
mov
sub
ja
punpckhdq
les
shr
jae
mov
aaa
cmps
pop
fldcw
or
call
imul
inc
fs
sub
dec
xchg
jnp
out
jmp
loop
push
test
cmp
mov
aad
stc
xchg
fist
je
push
dec
mov
xchg
mov
test
push
in
and
push
add
retf
mov
jo
popf
mov
sub
shr
jecxz
sahf
cmp
stc
push
movs
push
xchg
ret
ja
push
daa
clc
call
adc
test
out
add
fimul
pop
mov
pop
gs
add
adc
push
cs
pop
js
or
enter
xchg
jo
cmp
lods
arpl
mov
ins
mov
push
js
aam
xor
movs
(bad)
lods
cmp
nop
add
les
xchg
(bad)
mov
std
aam
mov
cmc
imul
imul
and
push
sub
push
inc
inc
jae
push
stos
sbb
mov
dec
les
gs
lods
xor
out
xchg
imul
add
jle
shr
retf
(bad)
out
mov
ja
loope
jmp
test
xlat
jge
in
cmp
inc
adc
leave
cmp
(bad)
mov
cdq
outs
outs
fistp
je
stc
xlat
js
enter
outs
outs
xor
int
adc
and
lea
pushf
xor
das
jl
cli
sbb
retf
sub
or
inc
pop
sbb
ror
hlt
rol
adc
mov
out
in
jb
cld
sbb
loop
cmp
inc
add
adc
pusha
rcr
lahf
cmp
push
jo
nop
bound
and
adc
sbb
leave
adc
ret
pusha
out
or
loopne
mov
push
dec
mov
xchg
call
retf
dec
sub
or
ja
out
mov
jb
mov
add
retf
jne
jge
fimul
shl
sbb
xor
mov
xchg
in
nop
shl
add
inc
cmp
jnp
xchg
mov
sbb
call
lds
stos
nop
mov
sbb
push
and
ja
in
dec
outs
in
sub
aam
arpl
not
sbb
xchg
mov
jmp
or
stc
pop
push
pop
mov
retf
inc
mov
retf
xor
mov
or
movs
push
inc
and
fsub
movq
xchg
js
repz
iret
mov
imul
jle
fldenv
pop
sbb
shr
cs
mov
xchg
sub
add
pop
pop
add
arpl
ret
leave
ret
mov
imul
mov
jbe
or
sbb
xor
xchg
imul
in
movs
pop
outs
pop
pinsrw
sbb
mov
ja
outs
mov
gs
push
mov
cdq
dec
in
cmp
and
xlat
adc
add
clc
add
push
add
jmp
jo
fs
lods
in
fs
mov
adc
mov
and
push
jle
pop
mov
test
dec
inc
push
mov
retf
or
mov
cmps
mov
cmp
cmp
(bad)
push
cmp
in
iret
cmps
icebp
xor
push
dec
inc
jg
cwde
out
jp
pop
add
fcomp
lods
iret
movs
jo
adc
out
mov
push
dec
mov
xlat
into
test
jl
retf
jb
(bad)
out
clc
adc
lea
pop
jno
add
int3
gs
pop
loop
cli
xchg
leave
jecxz
je
jmp
ins
aam
xchg
push
sbb
mov
add
mov
mov
mov
mov
adc
cmc
xor
imul
push
int
int
cmp
test
jns
mov
jecxz
retf
std
sbb
jle
in
retf
mov
push
jecxz
test
dec
mov
scas
jecxz
sbb
frstor
out
int
mov
inc
mov
sub
push
fiadd
test
outs
ficomp
idiv
and
xchg
aaa
int
cmp
inc
jl
mov
nop
into
sub
pop
add
xchg
and
aaa
leave
cmp
or
sbb
jmp
mov
sbb
pop
popa
jb
inc
dec
adc
jns
std
xchg
push
adc
sub
mov
mov
and
ret
popa
aam
stc
std
xchg
push
ror
ret
adc
push
adc
or
out
shl
ds
cld
xchg
mov
or
rcl
ins
fiadd
mov
call
push
or
retf
imul
rcr
nop
scas
sub
jg
pop
and
in
jg
loopne
sbb
sti
bound
sub
adc
shr
mov
(bad)
aaa
test
shl
and
cmc
xor
jae
rcr
mov
rcr
rol
lods
fcomp
cmp
(bad)
movs
into
push
shl
jmp
enter
nop
jmp
xchg
jl
pop
mov
sbb
sti
cmp
jmp
inc
sub
nop
popf
stc
movs
and
lods
add
or
pop
pop
add
mov
cs
rcl
fcmovne
leave
mov
bound
adc
and
fwait
daa
push
mov
into
shr
push
aas
mov
in
in
push
jns
nop
xchg
stc
or
cmp
cdq
xor
inc
neg
pop
xor
dec
and
sub
out
sub
repz
(bad)
mov
jbe
xchg
and
pop
mov
adc
lods
sti
push
in
fisubr
je
icebp
(bad)
div
call
and
aas
mov
shr
js
lahf
pop
stc
in
push
jge
(bad)
aas
push
and
mov
and
int
jno
or
cmps
xchg
(bad)
mov
mov
mov
sbb
mov
push
xor
mov
dec
cmp
pop
inc
dec
pop
cmps
xchg
mov
mov
out
popa
add
dec
test
retf
les
mov
mov
out
in
add
fidivr
xchg
aad
or
and
mov
jecxz
out
sub
xchg
imul
cdq
push
lea
ja
cmp
and
dec
mov
push
div
push
jecxz
pop
or
mov
ss
and
xchg
in
mov
mov
or
int
mov
adc
stc
xchg
mov
stos
adc
or
repnz
out
ror
sbb
int
dec
adc
add
mov
push
adc
pop
(bad)
stos
popf
test
stos
xor
adc
sbb
imul
inc
push
add
(bad)
(bad)
dec
push
scas
push
lea
not
adc
add
jl
pop
and
js
mov
adc
hlt
adc
sbb
icebp
xor
add
sbb
jo
popa
mov
lods
xlat
xchg
xchg
std
mov
or
dec
mov
fwait
push
fs
inc
test
ficom
lahf
pop
ja
push
repz
xor
jl
nop
mov
adc
pop
ret
stc
fist
ds
pusha
ja
xchg
xchg
xchg
jle
ins
bswap
jle
out
je
jle
cmp
mov
into
push
cmps
cdq
sbb
rcr
inc
inc
cmp
fstp
mov
xlat
test
cdq
daa
jg
aas
xchg
clc
rcr
iret
leave
leave
out
inc
sub
scas
rol
add
ds
mov
sbb
sub
jmp
add
adc
movs
dec
imul
pop
mov
xor
imul
fistp
cmp
prefetch
les
(bad)
retf
repnz
mov
popf
or
or
dec
test
mov
fwait
dec
ret
sub
mul
push
pop
inc
add
mov
jnp
xchg
(bad)
aaa
mov
add
inc
inc
aaa
dec
lahf
push
inc
mov
mov
in
pop
push
scas
dec
scas
js
mov
mov
(bad)
rcl
imul
cmp
xchg
or
jae
inc
xor
xor
inc
mov
add
(bad)
retf
outs
and
adc
adc
cdq
ins
xchg
fdiv
mov
inc
xchg
mov
fmul
ins
push
test
outs
je
add
xchg
dec
repnz
or
loopne
fwait
cmp
aas
lea
or
arpl
or
(bad)
imul
inc
or
xor
in
dec
sub
push
xchg
jge
leave
add
nop
paddsw
push
nop
adc
test
push
xor
(bad)
mov
add
int3
xor
scas
adc
(bad)
hlt
jbe
mov
push
shl
xor
sbb
sahf
ror
push
xor
xor
fwait
sahf
out
lahf
std
mov
cmps
outs
pop
and
(bad)
stos
xchg
fstp
xor
sbb
adc
cmp
pop
sbb
adc
mov
or
mov
pop
and
not
int
shl
int
addr16
js
ins
shr
push
inc
inc
cmps
out
fcmovu
js
call
bound
mov
push
dec
lods
das
dec
inc
push
js
lock
shl
mov
adc
icebp
or
imul
popf
nop
xchg
and
push
mov
inc
cwde
mov
pop
jns
inc
outs
inc
das
sub
pop
xchg
add
aam
stos
sahf
cwde
call
fnstcw
fsubr
push
push
dec
push
mov
or
(bad)
xor
adc
aad
lods
test
push
mov
xlat
and
shl
push
clc
mov
(bad)
fsubr
pop
cmp
pop
mul
das
push
aas
cmc
or
ins
sbb
lods
dec
mov
gs
add
dec
int
lahf
mov
xlat
stos
ror
icebp
idiv
or
std
stos
mov
cmps
ds
and
push
out
xor
and
jns
jnp
imul
mov
je
cmp
ss
fimul
mov
xchg
(bad)
adc
mov
jecxz
dec
cli
pop
leave
pop
rol
add
sbb
jbe
int3
or
cmp
add
sub
xchg
je
jnp
or
dec
or
push
pop
nop
repnz
fdiv
les
int
jns
pop
sbb
dec
cmc
addr16
pop
pop
adc
cwde
sub
push
lea
push
mov
(bad)
cdq
sbb
fsubr
int3
pop
cdq
scas
into
or
jmp
sub
dec
icebp
mov
out
call
cmps
(bad)
(bad)
mov
dec
das
dec
es
and
sub
xchg
cmp
and
shl
ds
pop
push
popf
or
jecxz
mov
(bad)
push
jmp
xor
shl
movs
xchg
ret
dec
es
(bad)
or
xlat
in
inc
xchg
into
xchg
adc
in
bound
outs
or
imul
cmc
mov
pushf
movs
arpl
or
push
iret
in
mov
and
mov
stos
cld
cld
jo
movs
nop
cwde
add
push
loop
das
sub
cmps
lods
jns
sti
lea
clc
imul
imul
mov
sbb
call
sbb
xchg
ds
cmp
mov
(bad)
popf
hlt
jecxz
mov
pop
ss
cmp
pop
pop
mov
push
cmp
and
(bad)
nop
sbb
xor
lock
dec
inc
mov
xchg
scas
push
sar
push
test
aam
push
sti
fwait
les
stos
cli
es
movs
lods
aaa
(bad)
sub
add
stos
pushfw
(bad)
jmp
rol
cmp
sar
je
nop
sub
jmp
mov
mov
cmps
cmps
lods
cmp
fdivrp
jg
das
cmp
gs
pop
test
sub
adc
or
std
jge
ds
mov
cmp
add
xchg
and
scas
scas
out
inc
jecxz
jmp
dec
mov
push
xchg
xor
lahf
scas
push
jl
mov
jb
or
out
cwde
sti
pop
outs
arpl
xor
sub
repnz
cmc
xor
int
je
push
out
jns
sti
(bad)
xor
stos
imul
bound
movups
sub
sub
stos
xor
(bad)
or
mov
and
pop
xchg
(bad)
xchg
mov
jp
ror
sub
rol
mov
dec
cmps
ret
dec
mov
out
(bad)
neg
loope
sbb
int3
in
and
dec
stos
adc
push
push
jmp
mov
fidiv
sub
mov
push
inc
inc
xchg
adc
(bad)
jns
and
lods
sbb
add
stc
(bad)
and
adc
sub
adc
xor
or
retf
inc
pop
dec
pop
lods
out
ins
ja
adc
and
popf
mov
xor
pushf
int
int
call
sbb
jne
inc
mov
gs
loopne
xchg
popf
enter
(bad)
sub
dec
mov
sahf
leave
adc
sub
add
fbstp
(bad)
jne
jge
cwde
cmc
xlat
mov
test
mov
les
int3
sub
cdq
sbb
aad
clc
in
out
fimul
daa
in
mov
into
icebp
jl
int3
xor
inc
aaa
pop
loope
cmp
scas
ins
stos
mov
ss
cs
mov
shl
jge
in
jb
repnz
dec
adc
loopne
rcr
cmc
ret
aad
push
inc
mov
xor
mov
shr
pop
pop
out
(bad)
cmp
xchg
in
push
or
cwde
ins
add
jnp
cdq
mul
push
xor
popf
push
ret
cmp
into
cmp
sub
mov
out
lds
clc
ror
mov
mov
mov
dec
out
cmp
mov
outs
and
pop
cmp
sub
mov
push
push
and
inc
icebp
out
dec
imul
lods
(bad)
dec
int3
push
mov
stc
(bad)
repz
adc
ror
pushf
call
xlat
adc
cmps
fs
loopne
sbb
inc
mov
jmp
fsub
aad
and
inc
mov
pop
mov
call
xor
cli
cs
jl
out
fdivr
inc
add
and
hlt
pop
aad
mov
ficomp
inc
aas
pop
in
push
sbb
or
or
repz
xchg
and
sbb
push
daa
stos
int
pop
addr16
mov
mov
jne
cmp
(bad)
xor
pushf
xor
mov
int3
pop
and
mov
out
ret
shl
es
xchg
sbb
cmp
sub
enter
cdq
data16
pop
dec
cdq
lea
ja
dec
push
add
cmp
movs
inc
nop
std
xor
mov
in
push
ds
pshufw
mul
xor
int3
add
cmps
ffreep
inc
(bad)
mov
jecxz
addr16
push
add
fstp
xor
and
loopne
lea
push
dec
int3
call
xlat
mov
inc
clc
mov
(bad)
jns
mov
add
add
lods
mov
hlt
in
dec
cwde
sbb
lock
iret
pop
lock
out
push
push
stos
sbb
retf
or
outs
es
and
inc
and
leave
out
pop
and
pop
or
sub
adc
mov
out
and
mov
cmp
or
mov
mov
ins
js
and
jp
retf
inc
xchg
mov
cmp
(bad)
xlat
or
(bad)
je
cmp
mov
(bad)
jle
dec
jecxz
inc
mov
shl
imul
lahf
ins
xor
push
fsub
sbb
xchg
jmp
mov
adc
add
add
in
std
mov
leave
rcr
(bad)
push
sbb
fnstenv
jne
add
ins
jmp
into
and
and
add
rcr
mov
pop
push
mov
jnp
mov
sbb
sub
sbb
(bad)
dec
push
cmp
imul
and
je
or
pop
sahf
push
jb
loope
xchg
mov
add
xor
test
adc
stos
leave
mov
nop
loopne
dec
jmp
pop
das
or
hlt
xor
stos
push
mov
push
push
(bad)
addr16
mov
cmps
mov
and
cmp
lock
in
mov
ins
xor
push
cs
add
aam
sar
inc
xchg
xchg
mov
imul
test
pop
(bad)
cmp
mov
popa
enter
in
pop
out
push
mov
cmps
dec
cli
pop
out
sysret
cld
push
jo
fisttp
push
dec
jmp
std
lahf
sbb
mov
xchg
push
or
jl
fistp
xchg
cmp
add
add
add
dec
dec
daa
ret
aas
pop
inc
ins
lahf
popa
(bad)
sub
jmp
pushf
into
dec
and
jae
inc
loope
jg
into
adc
jo
dec
cmps
jo
cvtps2pd
cmp
mov
sbb
xchg
xor
and
cmp
sbb
lods
and
jb
cs
push
adc
push
int
jp
and
inc
or
lea
xor
pushf
(bad)
movs
stos
push
bound
jl
or
push
or
mov
pop
jne
mov
hlt
sub
cmp
or
xor
test
jl
push
idiv
jge
in
mov
loop
cmp
mov
xlat
retf
sbb
cdq
pop
leave
mov
retf
pop
das
mov
sub
xchg
repz
mov
jnp
or
into
fldcw
lock
(bad)
(bad)
sti
mov
push
dec
in
jbe
lea
cmps
neg
lock
lods
and
mov
add
pop
mov
and
xchg
jmp
nop
leave
mov
pop
push
add
dec
dec
fistp
and
jae
mov
mov
mov
pop
add
fadd
pop
dec
dec
iret
out
outs
sar
or
aas
lods
push
mov
add
xchg
or
test
test
and
(bad)
popf
inc
leave
push
dec
xor
jl
test
imul
push
sub
(bad)
push
mov
mov
aaa
daa
and
push
dec
dec
adc
pusha
pop
cmp
xlat
mov
jmp
dec
pop
ret
adc
adc
sahf
lock
mov
xchg
nop
push
dec
xor
or
dec
fst
popa
pop
gs
mul
or
cli
loope
(bad)
clc
push
cmp
lock
dec
xor
clc
aam
mov
dec
xor
hlt
aad
sub
mov
(bad)
fistp
sbb
fistp
jecxz
jg
sub
jg
mov
and
sbb
xor
int3
lea
xchg
repz
xchg
sbb
movups
xor
arpl
pop
inc
mov
test
xchg
and
arpl
sbb
pushf
in
stos
mov
enter
ret
jl
xchg
xchg
fimul
add
in
ds
jnp
sbb
cmc
lock
add
loope
mov
push
xor
jmp
jno
or
push
out
cmp
out
mov
and
outs
pop
sub
xor
pop
loopne
in
push
adc
imul
test
push
mov
sbb
mov
aaa
mov
xor
adc
in
adc
mov
mov
dec
mov
dec
mov
and
cmps
pop
popa
mov
stos
and
add
call
adc
call
das
(bad)
jne
jo
inc
sbb
push
test
inc
jo
(bad)
repnz
mov
sbb
loopne
inc
dec
and
cmp
sub
pusha
ins
(bad)
mov
and
sub
sub
pushf
dec
lods
je
ret
cmps
add
mov
push
inc
cld
lds
adc
std
jecxz
fidivr
cs
ins
pop
push
or
aas
dec
jo
cmp
fdiv
je
mov
rcr
out
inc
xchg
mov
jns
add
cmp
xchg
pop
test
push
inc
bound
aaa
jp
or
daa
push
xlat
bswap
mov
pop
push
mov
sbb
xor
mov
adc
pop
icebp
mov
mov
or
shl
push
or
leave
mov
lods
push
imul
xchg
rcr
lds
sbb
xchg
rep
pop
into
sub
fisttp
mov
mov
push
adc
add
cld
aam
inc
pop
adc
rcl
inc
in
push
stos
pop
popf
fisub
or
mov
push
imul
test
sar
mov
push
dec
mov
fldenv
mov
or
lods
mov
repz
mov
rcr
cmp
mov
and
jno
jle
sub
dec
fadd
icebp
ret
jae
sar
push
add
das
fldz
rcr
dec
xor
adc
dec
xor
movs
push
xchg
push
push
das
addr16
scas
dec
scas
int3
fcom
rcl
sub
dec
and
fbld
hlt
outs
fs
jmp
pop
ja
and
add
pop
enter
mov
cmp
movs
mov
rcr
jmp
xor
ret
inc
xchg
lds
dec
jl
xchg
popf
sbb
dec
mov
popa
addr16
mov
(bad)
or
in
fadd
in
mov
lods
addr16
outs
mov
loopne
jp
stos
xor
iret
cs
pop
aas
xchg
or
imul
clc
test
call
shr
sub
xor
xchg
(bad)
jae
add
iret
fs
mov
fwait
pop
mov
mov
fldcw
scas
pop
jl
test
jae
xor
loopne
sar
adc
rol
mov
add
jb
mov
stos
sub
mov
inc
pushf
mov
cmp
sti
popf
jecxz
int3
aas
push
sbb
cmp
nop
push
daa
lock
popf
cmp
arpl
test
nop
mov
(bad)
jmp
or
adc
repnz
nop
inc
leave
mov
push
fs
dec
sbb
push
popa
pushf
out
sub
dec
cmp
cdq
pop
daa
fcomi
call
sahf
add
jecxz
loopne
and
shr
(bad)
lea
outs
(bad)
xor
dec
rcl
push
retf
and
popa
mov
mov
cmp
dec
bound
push
fdiv
cdq
cmp
adc
into
ss
lock
sbb
sbb
mov
inc
push
sar
jne
mov
pop
bound
mov
jecxz
cdq
imul
inc
idiv
arpl
mov
rcl
cld
aaa
scas
sbb
ins
lahf
daa
xchg
inc
or
jb
inc
xchg
(bad)
adc
cmp
retf
pop
mov
popf
cmp
ja
ja
add
mov
(bad)
or
push
mov
popf
add
lods
loop
push
test
mov
and
xchg
adc
xor
lods
dec
(bad)
adc
push
rol
aaa
jne
das
mov
bound
ds
adc
rcr
and
aaa
loop
mov
pop
xchg
and
ins
outs
enter
xchg
inc
out
mov
xchg
dec
adc
pop
pop
iret
cmp
test
ret
scas
or
mov
(bad)
jo
retf
stos
outs
pop
xchg
mov
(bad)
pop
repz
pusha
jns
in
mov
bound
or
pop
div
in
les
arpl
and
or
cmp
call
or
mov
mov
jmp
jl
in
je
dec
stc
pop
mov
or
cmp
jb
fisub
mov
paddw
dec
push
icebp
mov
std
inc
out
rol
pop
mov
mov
ins
inc
and
icebp
mul
(bad)
mov
int
cli
scas
or
push
mov
add
popf
scas
fsubr
das
lods
ficomp
call
nop
or
sar
sbb
mov
pop
ds
add
popa
jle
jg
or
dec
xor
test
rcl
and
(bad)
jmp
rcr
cmp
ror
fld
imul
aaa
vpaddusb
sbb
outs
cld
hlt
push
aas
xor
cmp
sahf
clc
sub
outs
mov
push
jb
or
adc
aaa
lahf
xor
loopne
test
and
ret
fwait
out
out
sub
out
or
fucomi
in
push
sbb
sahf
xchg
cmp
fs
and
inc
dec
xor
(bad)
iret
adc
sub
mov
mov
xor
inc
pop
jge
or
popf
stc
sub
or
fdivr
test
cmp
dec
lods
jmp
repz
cmp
adc
pop
mov
stc
rol
cwde
pop
pop
fiadd
dec
rdtsc
jbe
idiv
push
cmps
scas
loope
pop
test
xchg
jp
imul
loope
xor
pop
or
or
mov
ret
lock
(bad)
and
movs
sar
sub
mov
jae
fidiv
cmp
and
cmp
movs
dec
sub
inc
int3
add
and
add
push
cvtdq2ps
dec
(bad)
xor
dec
mov
add
arpl
add
stc
jmp
jge
xor
add
pop
repnz
int
pop
or
les
mov
adc
test
add
mov
cmp
add
pushf
mov
mov
sbb
jne
jo
std
fnstcw
add
dec
fld
mov
or
mov
xor
mov
jge
test
adc
arpl
jne
adc
pop
lds
xchg
inc
popa
xor
(bad)
xor
sbb
inc
push
push
jbe
mov
test
mov
jle
loopne
jb
mov
iret
lds
ffreep
lods
mov
pop
sub
scas
pusha
add
aas
test
or
cmps
out
out
or
mov
gs
cmp
fcom
je
pop
mov
cmps
adc
mov
loopne
adc
and
push
fcom
cs
jo
push
or
sub
mov
stc
cmp
pop
inc
sub
and
leave
xor
mov
fldcw
ss
ror
mov
rep
retf
lahf
jmp
adc
xchg
std
icebp
fld
cmps
(bad)
retf
or
sub
fiadd
mov
inc
sahf
sbb
ja
cmps
pop
leave
push
jp
shr
call
mov
adc
mov
cmc
mov
scas
inc
mov
ja
mov
call
ss
lds
pop
imul
and
and
mov
pushf
rol
mov
push
xchg
test
and
fidiv
call
dec
iret
data16
movs
sbb
cli
fisubr
inc
sub
dec
xchg
std
int3
sbb
adc
dec
stc
xor
jmp
xor
mov
adc
(bad)
and
pop
les
mov
(bad)
xchg
ins
ror
push
xor
ins
sub
(bad)
sar
cld
sti
clc
mov
scas
push
fs
add
inc
adc
sub
pop
mov
sub
cmp
dec
xchg
xchg
movs
adc
movs
icebp
sub
sub
rcr
and
mov
dec
out
or
(bad)
xor
sbb
fucomip
leave
jecxz
rol
xor
aad
cld
aas
popf
cld
xor
xor
cld
mov
lods
xor
and
repz
int3
mov
cmp
in
dec
lods
mov
rcl
push
in
fwait
cld
(bad)
jns
cdq
push
push
jns
mov
(bad)
in
mov
add
out
stc
jne
loope
adc
push
and
jle
xor
push
leave
clc
inc
popa
test
retf
mov
dec
adc
mov
cmps
and
mov
mov
icebp
aam
jge
fsub
fldenv
mov
push
jecxz
fisubr
test
inc
mov
add
cmp
cmc
arpl
jmp
adc
and
jle
push
mov
jns
out
out
ja
dec
and
fcomi
sub
jb
add
fidivr
cmc
and
call
rcr
ficom
cmps
cwde
mov
inc
pop
sbb
pop
nop
mov
jb
cmc
daa
or
outs
cmps
cwde
loope
adc
cs
sub
pushf
xchg
dec
xor
cwde
aas
test
dec
mov
aad
call
imul
sub
push
ret
cdq
pop
lock
mov
xor
out
and
(bad)
fistp
js
movs
mov
adc
(bad)
adc
xlat
push
inc
sbb
fiadd
xlat
cmp
(bad)
loope
xor
sti
hlt
test
out
jecxz
mov
adc
pop
adc
adc
pop
pop
(bad)
test
aad
rep
cmp
jecxz
mov
cmp
gs
xor
dec
and
xor
jmp
mov
(bad)
not
les
xchg
sub
lods
sbb
push
xor
adc
fiadd
adc
div
mov
sbb
fwait
(bad)
(bad)
(bad)
out
scas
and
add
loopne
das
mov
nop
inc
or
shl
cmc
adc
sub
repnz
sub
pop
cmps
cwde
inc
or
stos
jge
mov
mov
enter
loope
popf
fwait
loopne
mov
push
neg
(bad)
(bad)
jmp
and
pop
retf
and
inc
aas
cs
jle
fnstsw
pop
retf
pop
jmp
lahf
push
fnstsw
(bad)
in
ret
cwde
pop
xlat
sub
inc
pop
sbb
das
xchg
mov
std
imul
inc
pop
pop
test
sub
mov
mov
mov
add
lock
dec
fld
mov
or
dec
in
enter
retf
imul
out
adc
popa
push
mov
push
movs
xchg
mov
xchg
dec
dec
mov
dec
jge
push
enter
mov
call
xlat
dec
cmp
fwait
icebp
add
jo
aam
sub
add
movs
push
or
push
aad
or
adc
iret
test
repz
sti
mov
adc
jns
inc
push
jne
out
fmul
mov
int
inc
sbb
clc
aas
fst
jno
(bad)
fld
out
outs
and
mov
inc
lock
push
pop
jnp
push
add
cmp
and
pop
pop
cmps
jmp
jae
xchg
dec
cvttps2pi
test
inc
ds
jge
add
mov
mov
out
add
cmp
dec
cld
xor
xchg
and
cld
lea
pop
mov
jne
cmp
aad
push
push
jmp
mov
add
iret
repz
iret
or
add
cmp
addr16
movs
sar
mov
and
fbstp
jmp
add
(bad)
dec
loopne
std
cmp
sbb
pop
scas
cmp
mov
adc
push
cmp
jmp
(bad)
test
jae
rol
jnp
(bad)
lods
stos
dec
pushf
dec
add
imul
retf
mov
lods
push
(bad)
outs
pop
pop
les
jl
inc
les
xor
str
cmp
fwait
cmp
pop
ds
fmul
and
add
cmc
das
pop
movs
int
data16
xchg
adc
adc
add
lds
lock
sub
push
aad
out
sub
xor
repnz
push
es
xchg
push
xchg
std
xchg
xor
jle
movs
movs
or
repz
hlt
into
cmp
rcl
lods
add
and
ret
sahf
jmp
retf
lahf
push
js
adc
lods
mov
mov
or
mov
mov
xchg
jne
pop
inc
cmps
xchg
and
ror
cmp
mov
aad
(bad)
jl
fst
lds
std
daa
(bad)
scas
mov
pop
pop
push
(bad)
cmp
inc
arpl
ins
dec
test
int3
lods
mov
call
pop
add
pushf
mov
leave
adc
icebp
jne
icebp
pushf
out
or
add
push
jo
scas
lods
mov
push
xlat
cs
in
mov
fidiv
sub
jl
arpl
add
jecxz
or
imul
arpl
sbb
xor
push
call
mov
xchg
xor
xor
jbe
adc
jnp
cmp
or
div
mov
adc
fmul
mov
js
test
test
cli
rol
aam
and
cmp
pop
mul
jo
adc
mov
jbe
rcl
mov
ficom
lods
jne
cmps
sar
cmp
adc
xor
add
add
in
sub
or
jmp
xchg
test
sbb
je
movs
shl
push
and
push
push
fidivr
jo
dec
test
push
mov
pop
addr16
add
or
mov
mov
pop
adc
sahf
call
or
and
mov
xor
pop
pop
daa
jbe
and
fisttp
xchg
push
adc
and
add
jne
or
cdq
or
shl
inc
pusha
push
mov
fbld
aas
fcmovnbe
icebp
xor
push
and
xchg
cdq
dec
fdiv
lds
sub
retw
jg
fild
retf
mov
cmp
aas
and
add
rcr
shl
push
mov
test
push
cmp
push
mov
call
lods
jg
rcl
jbe
loope
push
test
cld
sbb
mov
xor
inc
cmp
(bad)
jbe
mov
mov
push
fmul
lods
out
sbb
fist
retf
cmp
add
inc
pop
mov
dec
jno
sbb
or
arpl
pusha
jmp
std
shr
int3
loop
mov
cld
push
sub
jge
jmp
push
shr
loop
test
std
inc
ret
lea
lea
call
inc
dec
js
jge
mov
(bad)
dec
cdq
ja
mov
stc
push
add
adc
test
out
or
loope
arpl
jbe
ror
mov
jmp
inc
cs
and
(bad)
outs
jne
mov
lock
loopne
cmps
rcr
or
inc
add
jmp
es
mov
scas
call
mov
imul
add
jae
aad
jno
test
mov
test
xor
test
popf
out
lea
sti
push
(bad)
fisub
push
aaa
clc
jl
jle
inc
test
in
gs
in
pop
inc
mov
imul
and
mov
jmp
(bad)
stos
jecxz
loopne
call
lods
and
sahf
test
pop
push
(bad)
fs
stc
jmp
dec
out
(bad)
stc
fcomip
jp
(bad)
push
pusha
or
cmp
stc
jmp
pop
test
jle
mov
lds
or
pushf
les
test
neg
pop
or
and
xchg
push
sub
(bad)
sti
das
jge
push
jge
mov
repnz
and
fisubr
es
mov
pop
ss
stc
retf
scas
sbb
adc
jns
and
in
(bad)
pop
(bad)
call
es
out
dec
jns
stc
in
add
pop
push
inc
mov
mov
cli
xlat
xlat
icebp
leave
jge
cdq
addr16
ret
sbb
adc
push
retf
aam
dec
dec
mov
xchg
repz
shl
in
stc
int
mov
jle
jnp
ins
sti
and
out
sbb
add
ss
xlat
dec
cli
(bad)
int3
mov
clc
jo
mov
xchg
sahf
ss
push
inc
sbb
pop
inc
ins
add
push
pop
and
lock
jl
jo
int
repnz
fsubp
or
adc
retf
push
int3
retf
lods
retf
jne
dec
sub
sti
dec
sysenter
nop
or
jbe
inc
fbstp
sti
jmp
fldcw
add
(bad)
jle
inc
push
stos
enter
out
call
push
out
fdiv
in
jo
mov
outs
fisttp
pushf
push
into
sbb
std
pusha
mov
ja
fdiv
xchg
test
sbb
xchg
js
xlat
daa
cld
test
sti
dec
or
pop
jbe
cmp
test
jmp
inc
add
jne
push
pusha
add
jg
daa
cli
push
inc
bound
mov
mov
jo
or
xor
inc
push
sbb
push
mov
test
sbb
cmp
test
ror
js
outs
retfw
xchg
out
(bad)
mov
mov
xlat
push
leave
out
inc
out
cdq
pop
ins
(bad)
pop
fdivr
outs
xor
lods
jns
mov
mov
sbb
js
mov
aad
inc
xchg
out
cmp
in
popa
stos
xchg
clc
cmp
mov
and
push
mov
jle
and
lea
scas
out
bound
(bad)
or
jecxz
int
aad
test
jnp
in
ror
dec
int3
mov
outs
xchg
push
push
sbb
pop
fs
jecxz
adc
std
fidivr
stc
jle
hlt
ins
xchg
and
mov
cmp
gs
out
mov
das
je
inc
adc
int3
pop
jmp
aad
gs
fiadd
and
pop
outs
cmc
stos
mov
icebp
dec
pop
ror
and
cmp
xor
push
pop
sub
ficom
cli
stos
jg
repnz
push
or
sbb
cmp
ror
inc
sbb
xor
push
lds
stos
jo
enter
loopne
hlt
pop
add
adc
call
shl
lods
mov
loope
xchg
imul
aad
mov
mov
enter
sbb
mov
enterw
lods
mov
cmp
xchg
rcr
retf
and
call
sbb
movs
in
in
xchg
fs
cmps
cmps
sti
cmps
adc
xchg
cmp
(bad)
push
fsubr
push
cmp
imul
fucomp
cwde
lea
inc
aaa
ror
repz
mov
pop
mov
test
sub
adc
ror
xchg
mov
xor
test
shl
into
adc
push
mov
and
aaa
int
push
out
cmp
jnp
push
dec
dec
mov
fdiv
lahf
cld
jmp
jecxz
test
push
xor
shl
mov
mov
cmp
or
test
cmp
loop
dec
jp
dec
sub
cmp
outs
ins
aad
mov
cwde
xchg
pop
adc
push
xchg
outs
xor
std
pop
mov
in
mov
aam
adc
xor
cmp
mov
push
(bad)
cdq
adc
dec
or
pop
dec
retf
push
mov
bound
mov
mov
rol
aad
mov
call
scas
lea
pop
jno
clc
(bad)
into
add
push
mov
cld
xchg
inc
stos
popa
jae
call
add
sub
xchg
cmp
pop
movs
call
cmc
bound
dec
push
sti
stos
mov
cmp
lahf
jo
jp
test
push
sub
out
inc
stos
inc
mov
ds
cmpxchg
cld
cmp
fcomp
and
jne
sub
mov
sahf
pop
pop
cmp
fiadd
add
in
mov
mov
dec
out
stos
pop
xchg
xchg
cmc
int
jbe
stos
xor
ret
mov
fisubr
cdq
mov
inc
(bad)
(bad)
dec
inc
ret
addr16
dec
sub
hlt
cmp
jns
stos
arpl
mov
fidivr
mov
sar
xchg
jnp
pop
ror
mov
adc
ins
mov
pop
push
cmp
out
frstor
push
or
sub
sbb
mov
xchg
cmp
jg
lods
inc
ins
shl
sub
add
xchg
push
neg
sbb
jge
pop
(bad)
ss
ins
push
adc
outs
imul
(bad)
in
test
pusha
fdivr
and
and
repnz
aad
add
cmp
cmp
jmp
inc
sar
adc
popf
or
rol
sti
mov
ror
nop
xchg
xchg
adc
xchg
sub
clc
push
ds
lods
pop
or
add
es
inc
fmul
sbb
mov
mov
ins
std
int
xchg
out
addr16
in
out
bound
jne
mov
push
pop
shl
mov
fisttp
out
mov
movs
inc
mov
fwait
mov
pusha
or
add
mov
mov
push
mov
mov
add
jae
mov
cmps
pop
icebp
sahf
inc
sub
jl
rcl
mov
test
(bad)
xchg
icebp
cs
test
fnstsw
fwait
mov
mov
aaa
test
retf
in
iret
mov
add
sbb
sbb
mov
cmps
(bad)
and
and
or
shl
mov
adc
test
repnz
fdiv
imul
je
and
in
ins
pop
imul
mov
jge
jmp
add
lahf
sbb
test
inc
jno
aas
xor
jmp
(bad)
fldenv
cli
fstp
(bad)
pop
mov
xchg
cmc
mov
rcl
jne
add
sub
clc
pop
cld
mov
ror
sbb
popf
in
sbb
xchg
int3
test
int
jbe
out
adc
xor
mov
or
add
call
push
add
cmp
fstp
pop
mov
cmps
rcl
mov
xor
push
rcl
je
push
loopne
mov
int3
loopne
mov
ror
repnz
retf
imul
add
(bad)
jmp
fwait
sub
movs
sub
mov
cwde
dec
sub
jnp
retf
fcomip
jg
pop
or
fadd
cmc
ins
inc
adc
sub
cmc
sbb
out
inc
add
lea
and
or
movs
pop
mov
mov
cmc
adc
scas
and
addr16
and
scas
cwde
xor
paddsb
test
and
enter
test
mov
adc
inc
jl
repnz
cwde
aas
lds
aam
sbb
(bad)
icebp
in
pop
adc
adc
mov
sbb
pop
(bad)
inc
ins
outs
aas
call
mov
sbb
jno
mov
movs
shr
push
cmps
jmp
push
sbb
add
dec
in
inc
adc
ja
loopne
scas
xchg
js
mov
fucom
shl
inc
sahf
test
loope
mov
pop
xor
sub
out
test
or
cmc
retf
mov
add
mov
ds
push
ja
and
shl
into
(bad)
in
cmps
push
add
xchg
mov
xchg
jecxz
ss
or
pusha
loope
das
xlat
out
data16
ret
mov
jmp
or
pop
jl
mov
cmp
stc
sub
mov
hlt
dec
outs
jmp
inc
movs
pusha
movs
dec
ret
xchg
ror
xlat
push
inc
or
test
mov
push
jae
in
dec
loop
loop
test
(bad)
push
lds
std
leave
xchg
cs
leave
xchg
mov
push
jbe
jmp
mov
jne
mov
xlat
test
out
jne
inc
ret
cmp
test
and
xor
add
pop
lock
imul
ret
xchg
sub
xchg
out
ins
and
inc
push
pushf
adc
push
sbb
stos
idiv
or
cmp
sub
sub
inc
lds
dec
xchg
adc
call
je
cmp
frstor
loopne
mov
dec
mov
in
dec
and
repz
(bad)
rcl
inc
pop
ins
popf
xor
add
popf
xchg
adc
sahf
js
xchg
mov
or
jle
std
cmp
xchg
loope
shr
hlt
retf
ins
push
call
std
xchg
retf
cmp
(bad)
sub
(bad)
push
div
xchg
into
push
pop
loop
ror
inc
jg
xchg
inc
sbb
cmp
lods
xor
out
sbb
sub
(bad)
sbb
mov
mov
cs
mov
jb
jp
push
xor
les
imul
fwait
add
adc
dec
mov
fild
adc
int3
imul
dec
inc
jae
fcom
and
sti
mov
cwde
xlat
sbb
xchg
sti
scas
ds
aas
inc
clc
wrmsr
sti
mov
(bad)
sub
add
push
sub
cmc
jge
ss
ret
(bad)
adc
fadd
sbb
arpl
xchg
jmp
xchg
movs
or
and
add
in
je
dec
mov
rcr
jb
repz
mov
into
pop
jp
addr16
jns
push
ror
repz
jne
gs
xchg
ret
retf
outs
adc
adc
sub
cld
push
rcl
pop
call
push
add
popa
(bad)
in
scas
in
cmp
mov
rol
jnp
push
pop
and
cmp
lea
fsubp
jno
jbe
adc
jb
arpl
aam
add
xor
add
stc
loop
add
fdiv
add
sbb
pmuludq
retf
sub
xchg
push
push
fs
xchg
and
retf
(bad)
rcr
inc
call
or
mov
pop
aad
pop
or
cmc
lock
adc
sub
push
and
fsubr
aam
add
mov
pushf
jmp
aam
stos
push
or
jae
ds
inc
sbb
and
mov
std
dec
repnz
xchg
push
jne
xchg
cmps
mov
sbb
or
inc
xchg
inc
iret
arpl
daa
pop
xor
imul
jb
(bad)
shl
mov
cs
sbb
inc
mov
fnstenv
dec
(bad)
mov
mov
cmp
sbb
or
adc
mov
or
lds
xor
push
test
ror
xor
add
jbe
and
or
inc
inc
cmp
xchg
or
aad
pop
ss
dec
loopne
imul
inc
jecxz
pop
adc
adc
xlat
xor
xchg
mov
enter
sub
sbb
ds
out
cdq
int
leave
or
lock
or
pop
cld
dec
fisubr
out
dec
stos
mov
scas
push
jg
(bad)
cwde
add
mov
test
clc
dec
ret
rcr
shl
or
rol
mov
dec
push
movs
pop
mov
test
in
mov
adc
fdivr
xchg
js
pop
pushf
add
popa
and
push
push
or
adc
adc
pop
pop
dec
imul
xchg
pop
sub
push
add
mov
pop
push
inc
add
lea
popa
push
(bad)
xchg
(bad)
loope
mov
jg
cld
mov
push
sub
jo
adc
push
sti
xor
xlat
repnz
sbb
dec
jns
cmp
bound
or
sbb
push
ss
pop
ret
ror
mov
stc
enter
inc
xor
add
or
inc
jmp
jnp
(bad)
inc
mov
bound
pop
cmc
test
lds
(bad)
mov
movs
mov
fs
stc
call
jae
sbb
mov
dec
adc
xchg
or
or
mov
ins
mov
lods
cmp
xlat
ret
imul
jnp
stos
mov
sbb
mov
add
cmp
cli
jl
pop
xor
inc
xor
pop
sub
test
xchg
pop
xchg
jns
mov
xor
push
imul
mov
call
out
mov
cdq
inc
jmp
jo
adc
push
sbb
clc
inc
and
sbb
ds
pop
jle
and
cmps
jae
xor
jae
xchg
adc
fcomp
movs
int
cmp
popf
add
sbb
add
sub
inc
repnz
xchg
adc
arpl
jmp
mov
outs
out
(bad)
pop
fstp
push
and
or
cmp
movs
xchg
lods
(bad)
sbb
xor
and
fwait
popf
push
jecxz
xor
lahf
retf
push
add
push
jl
mov
out
add
mov
dec
jl
or
jb
mov
or
sbb
mov
inc
retf
fmul
out
into
cmc
clc
repz
mov
and
(bad)
idiv
add
xchg
js
loop
dec
jmp
mov
fld
das
lods
inc
lock
inc
jg
or
retf
mov
cdq
and
mov
jae
mov
or
and
adc
call
or
mov
jmp
dec
jnp
icebp
pop
and
stc
call
pop
inc
fisub
aas
enter
mov
adc
push
or
(bad)
sbb
add
push
or
popf
or
xlat
or
ins
out
or
pop
xor
xchg
sub
mov
inc
jne
mov
fstp
lods
dec
lea
fistp
out
dec
jmp
leave
jmp
cdq
in
popa
(bad)
cmc
xchg
(bad)
das
fst
(bad)
xlat
fwait
mov
mov
inc
xor
sar
ret
imul
add
dec
sbb
inc
xor
jge
jge
nop
dec
inc
(bad)
test
dec
push
sbb
ror
push
inc
jmp
jmp
xor
stc
pushf
pop
gs
int
jmp
jmp
inc
data16
inc
cmp
or
ds
rol
into
cmps
scas
mov
enter
push
add
sub
mov
dec
or
or
dec
inc
inc
mov
ret
mov
in
adc
pop
ret
or
sub
pop
sub
cmp
std
mov
fs
cmp
sub
movs
loope
add
xor
and
sub
int
xchg
cdq
mov
test
cwde
push
std
xchg
and
lahf
pop
lds
dec
loop
sub
or
mov
add
xor
sti
retf
pop
jae
ret
repz
sbb
into
lea
mov
jo
fmul
sub
fwait
icebp
arpl
sbb
jg
adc
xchg
sub
popf
fs
mov
adc
retf
mov
dec
movs
jle
mov
sbb
adc
add
or
je
movs
call
shl
inc
adc
ret
jp
(bad)
les
adc
lds
jb
bound
out
push
clc
jmp
xchg
inc
inc
enter
fld
cmc
mov
mov
arpl
retf
leave
xchg
rol
mov
movs
jecxz
aaa
xor
data16
lea
call
aaa
jge
out
in
push
ss
push
dec
xchg
(bad)
or
jmp
ins
int
jp
loopne
mov
mov
loop
mov
fisttp
outs
sub
sub
sahf
jnp
mov
pop
adc
cs
mov
movs
and
cmp
xchg
les
or
daa
inc
xchg
retf
jle
xchg
movs
daa
icebp
in
xor
outs
sbb
movs
imul
sub
mov
sar
js
gs
scas
js
xor
shl
out
icebp
xchg
xor
dec
or
in
jl
dec
sub
mov
mov
push
aam
fistp
enter
xor
test
mov
push
xchg
xor
mov
lds
repz
dec
sbb
jmp
mov
push
fsub
xchg
push
movs
fistp
mov
pop
sbb
pop
xchg
leave
aaa
jmp
jnp
(bad)
idiv
xchg
(bad)
test
or
scas
push
sub
popf
pop
cmp
packssdw
inc
not
adc
xchg
leave
jne
mov
or
sub
xor
into
xor
scas
add
lods
out
arpl
test
ins
sub
jne
out
in
movs
sbb
add
(bad)
das
push
cmp
movs
lods
cwde
sbb
push
mov
popf
xor
xor
pop
es
add
cmp
loopne
call
dec
pop
lods
sar
cmp
pop
sub
jge
out
aam
push
ds
and
add
mov
rcr
movs
add
mov
add
xchg
mov
aam
daa
adc
cld
xor
and
retf
div
bound
jb
scas
mov
inc
jge
jb
icebp
or
movs
push
adc
or
jle
and
iret
jb
test
pop
enter
mov
in
ret
adc
fst
add
xor
cmp
dec
mov
xchg
js
mov
int
pop
jnp
mul
enter
add
data16
add
jp
mov
imul
cmc
sbb
ins
push
mov
out
ror
cwde
imul
xor
sbb
sbb
or
nop
push
push
popa
pop
mov
ret
xlat
cmp
sub
movs
add
stc
in
in
cdq
xor
dec
inc
jecxz
ins
xchg
aas
mov
lds
mov
mov
xor
or
aaa
aam
or
xor
adc
loope
or
mov
pop
xchg
inc
fdiv
mov
(bad)
inc
or
int3
icebp
mov
pop
ficomp
ss
add
loop
ja
out
ds
les
fadd
loopne
(bad)
fisubr
mov
and
cdq
and
(bad)
push
push
jae
xlat
rol
inc
sbb
pop
add
ret
loope
test
mov
dec
mov
movs
(bad)
xchg
(bad)
(bad)
iret
inc
pop
repz
aas
mov
popf
test
hlt
out
cmp
shl
jbe
data16
mov
mov
sbb
mov
jbe
mov
sbb
jne
test
or
sub
jb
jmp
mov
sbb
adc
leave
pop
dec
pop
or
or
retf
adc
iret
jnp
mov
push
mov
pop
test
leave
shl
sahf
in
das
jbe
lds
and
push
xor
(bad)
inc
jbe
pusha
mov
sub
dec
sar
aas
xor
jp
in
fadd
xchg
add
add
pop
shl
call
out
jno
cs
out
fwait
push
fs
jg
stos
in
pop
sahf
loop
mov
(bad)
adc
mov
icebp
adc
mov
and
mov
int
sub
mov
ins
out
repz
leave
mov
sub
scas
and
push
or
ret
stc
neg
jae
pop
pop
in
lea
test
sar
mov
jbe
push
xor
inc
sub
mov
fld
outs
sbb
out
daa
adc
dec
icebp
ins
call
aad
push
(bad)
fmulp
movs
movs
pop
and
xor
mov
pop
pop
(bad)
out
mov
xchg
add
(bad)
mov
inc
xor
dec
cmp
cmp
fidiv
loop
aad
in
jp
shl
cld
jge
cmp
fld
cli
popf
es
mov
jbe
xor
xor
and
xor
scas
add
mov
jmp
ret
cmp
cmp
int3
cmp
jns
fidivr
jbe
mov
iret
call
mov
clc
cld
mov
adc
cmc
call
js
sbb
les
(bad)
lahf
push
test
mov
pop
inc
mov
dec
xlat
cmp
(bad)
jnp
sub
ja
pop
stos
xor
icebp
adc
push
pop
fxch
sub
and
retf
ds
mov
add
jge
dec
or
out
push
add
in
sbb
pop
push
and
add
adc
(bad)
shl
and
cmp
ret
sub
dec
xchg
push
fidivr
sbb
inc
in
jp
sub
daa
aam
sub
mov
cld
inc
jecxz
push
rcl
xor
jns
(bad)
outs
popa
mov
mov
push
push
rcl
adc
push
std
fsubp
(bad)
mov
adc
cmp
repnz
mov
sbb
or
mov
stc
repnz
pop
das
mov
fs
sbb
fadd
out
xlat
inc
aaa
lahf
imul
xor
mov
into
dec
and
push
push
out
mov
cdq
leave
xchg
(bad)
and
mov
bound
pop
test
jmp
mov
je
jmp
cmp
jbe
pop
addr16
dec
in
jb
loopne
and
(bad)
pop
add
ss
jge
push
jmp
mov
mov
mov
out
sbb
mov
mov
or
mov
bound
adc
jno
mov
cwde
addr16
es
xor
and
pop
out
ret
and
mov
jl
test
mov
xchg
mov
frstor
jg
addr16
in
mov
data16
mov
fs
(bad)
mov
xchg
inc
jmp
jbe
rcr
(bad)
clc
cmc
stos
pop
icebp
in
jecxz
mov
dec
lock
dec
lds
cmp
xchg
cdq
xor
(bad)
rcl
push
cmp
aam
jnp
inc
xchg
pop
mov
fisttp
sub
cmps
sub
test
push
fs
dec
jae
test
add
or
pop
mov
mov
ret
or
pop
mov
push
enter
lds
and
mov
or
adc
mov
mov
dec
mov
jge
dec
xchg
mov
shl
test
fcom
pop
xchg
shl
and
jmp
sub
dec
es
ficomp
mov
clc
sub
mov
pushf
fcmovnu
push
outs
sahf
add
outs
bound
or
push
ret
sub
in
mov
in
sub
add
jp
sub
sar
aas
mov
add
cmps
cmp
sar
je
shl
mov
sbb
push
ins
or
jecxz
je
repz
pop
fs
cmp
mov
ds
and
(bad)
lock
gs
jnp
movs
aad
cmp
out
(bad)
jnp
inc
jg
or
scas
and
dec
add
aad
sub
call
jno
mov
xor
xchg
mov
jge
inc
es
mov
test
sbb
xor
lods
pop
repnz
push
nop
inc
xor
ins
cmp
test
jg
cs
inc
ins
pop
or
int
shl
and
xchg
std
xchg
add
xchg
and
or
add
adc
xor
jle
out
push
fwait
cli
jmp
lods
(bad)
mov
push
push
push
cmp
sbb
fs
call
adc
std
sub
push
pusha
cld
mov
xchg
add
aam
add
push
icebp
test
pushf
mov
pop
xor
dec
loop
push
ret
mov
xchg
push
and
and
mul
lods
mov
sub
aaa
ret
adc
push
fidivr
jg
dec
inc
dec
ins
mov
jecxz
jmp
mov
mov
push
stos
aam
or
jbe
int3
xchg
jl
pop
pop
mov
lods
std
mov
mov
outs
in
push
stc
mov
pop
mov
je
cdq
inc
jmp
cld
call
imul
push
mov
adc
or
xchg
xchg
test
or
dec
retf
jno
jp
scas
adc
leave
not
stos
push
stos
loope
ins
cmp
inc
data16
xchg
adc
dec
jno
dec
in
xchg
push
inc
outs
pop
lds
rcr
repz
and
mov
sub
mov
mov
push
mov
xor
pop
ins
(bad)
pusha
pop
test
mov
xchg
jo
jle
and
test
out
jp
sub
mov
dec
aaa
add
cmps
dec
fild
dec
pop
stc
xchg
ins
out
cmp
sbb
ja
mov
xchg
cmp
adc
and
jnp
call
mov
rcr
mov
jl
outs
rcl
aad
push
call
ins
in
or
out
repnz
inc
rcl
pushf
loop
test
stos
push
xor
xchg
mov
jle
xchg
addr16
loope
xchg
mov
sar
(bad)
push
popf
fild
js
stos
or
push
or
fnstsw
cmp
pop
sqrtps
lahf
fstp
mov
aas
fucomp
loopne
or
js
pop
mov
add
int
stos
or
(bad)
and
cmc
test
bnd
xlat
sbb
retf
int3
inc
mov
cld
mov
call
mov
into
loop
rol
jecxz
push
fs
cmp
scas
shl
lods
mov
push
jae
and
push
les
das
mov
sub
aaa
mov
aaa
and
(bad)
addr16
jne
or
xchg
nop
sbb
out
xor
(bad)
xchg
std
sbb
test
adc
rol
cmp
add
or
jbe
movs
or
mov
scas
jnp
std
fdivr
mov
pop
add
aaa
outs
and
enter
clc
gs
fcmovnu
nop
push
(bad)
aam
test
stc
jge
pusha
push
arpl
and
push
mov
lods
daa
mov
arpl
xor
stos
repz
push
das
test
cmp
pop
mov
mov
mov
and
and
scas
mov
adc
dec
jb
stos
stos
jmp
fwait
sti
movs
add
sub
fisttp
dec
sub
mov
inc
into
inc
sub
push
and
xchg
jnp
or
cwde
aaa
mov
push
dec
xchg
xor
imul
or
dec
mov
cmp
daa
jo
pusha
hlt
in
shl
xor
adc
adc
inc
into
mov
push
mov
fist
lods
jae
and
stos
stos
xor
shr
or
cmps
imul
push
add
pop
icebp
add
jb
push
push
cmp
push
jg
outs
sbb
dec
test
out
ret
fs
adc
adc
mov
pop
leave
jnp
mov
add
mov
fistp
bound
push
xor
outs
leave
daa
mov
adc
xor
test
pop
mov
call
aam
and
cmp
stc
jecxz
jne
imul
fwait
or
loop
fwait
dec
and
jecxz
(bad)
(bad)
push
mov
fisttp
sti
mov
push
xlat
fbld
xor
inc
pusha
and
add
test
not
cli
jmp
xchg
or
push
call
shl
(bad)
jmp
and
std
xchg
jbe
imul
ins
sbb
addr16
popf
adc
pop
mov
adc
shr
mov
sbb
dec
push
fs
and
int
dec
pusha
enter
aas
push
jae
repz
dec
(bad)
(bad)
mov
inc
pop
call
mov
jae
call
addr16
adc
in
xor
push
inc
fxch
(bad)
aam
xchg
lods
add
or
lahf
test
cmp
or
jo
je
stos
xchg
retf
imul
(bad)
out
in
sbb
inc
sbb
adc
dec
pusha
mov
imul
stc
or
(bad)
inc
out
movs
loope
movs
mov
or
adc
jae
fisubr
sub
(bad)
movs
sbb
mov
cmps
test
sbb
ror
xchg
push
push
push
sbb
xor
leave
jge
aad
mov
movs
data16
aas
arpl
mov
jl
mov
pop
cmc
data16
call
fcmovbe
sbb
xor
ffree
mov
xor
popf
ja
rcl
jl
test
(bad)
ror
mov
push
je
inc
and
jge
pop
push
rcr
enter
jbe
loop
sbb
out
movs
mov
mov
mov
mov
cmp
js
cdq
mov
outs
mov
sub
sub
ret
mov
in
add
push
cld
das
sbb
clc
fxam
or
jl
call
inc
dec
push
arpl
mov
add
inc
mov
mov
dec
xchg
leave
daa
jp
mov
lods
mov
cmps
test
arpl
mov
cld
sbb
mov
scas
out
mov
pop
pop
and
clts
in
retf
xor
and
adc
mov
or
jmp
push
bound
pop
fxch
sbb
cld
mov
lods
sbb
cmps
dec
out
enter
jns
stos
mov
movs
inc
dec
shl
call
fiadd
adc
dec
dec
sbb
dec
or
mov
push
pop
mov
jnp
push
xor
aam
iret
mov
test
leave
push
sbb
mov
jae
sbb
mov
push
or
fild
mov
sbb
in
inc
loope
aaa
sti
mov
push
stc
into
sahf
out
jmp
pop
stc
jns
pop
inc
add
push
ficomp
and
ds
into
mov
fiadd
xchg
pop
nop
es
xchg
jne
adc
retf
xchg
fst
test
jp
fistp
pop
aaa
(bad)
inc
cmc
ss
stos
pop
xor
add
lea
fcmovnbe
mul
es
sub
ds
pop
aam
cmps
fdivr
ror
cli
cmps
adc
xlat
mov
jg
push
jne
aaa
mov
cmp
mov
repz
rcl
push
add
jne
out
loope
sbb
test
mov
aam
jge
adc
dec
xor
and
in
sar
loope
ins
aam
(bad)
cmc
loopne
jle
and
into
cmp
xchg
and
movs
inc
repnz
retf
xor
or
push
mov
jmp
dec
mov
mov
int
in
imul
xor
inc
sub
jl
push
lods
cli
(bad)
jmp
hlt
(bad)
sbb
fisub
xor
in
iret
pop
adc
popf
jb
test
aaa
cld
sub
call
je
int3
mov
mov
out
xchg
inc
cmp
add
out
test
cmp
sbb
dec
stos
xchg
add
or
test
jp
inc
add
mov
add
lock
push
arpl
gs
(bad)
push
repz
lods
sub
enter
mov
push
push
xlat
repz
jecxz
ficom
jp
pop
sub
jmp
dec
pusha
pusha
sbb
sub
mov
mov
push
das
push
out
mov
mov
in
out
lds
inc
ret
jecxz
push
cmps
and
pop
mov
daa
rcr
add
jne
and
mov
xor
dec
inc
aaa
call
sub
mov
mov
jne
jnp
jl
(bad)
push
not
inc
push
or
sbb
sub
aam
add
cmp
(bad)
adc
and
(bad)
adc
sub
jae
push
mov
gs
cmc
(bad)
in
sbb
sub
inc
mov
cmp
adc
push
(bad)
mov
or
and
outs
cmp
mov
pop
pop
push
stos
jge
and
cld
aad
adc
int3
add
pop
xchg
rcl
sbb
mov
test
mov
sub
push
ret
xchg
lods
xor
lods
(bad)
shr
mov
push
fwait
xchg
add
fist
or
dec
sbb
mov
out
aaa
push
xor
xor
in
jne
outs
add
loop
lock
mul
inc
adc
sub
jae
int
sub
jbe
lea
xor
ins
inc
lods
inc
mov
ins
fild
mov
xor
xlat
mov
or
ins
pop
xor
mov
jnp
adc
cmps
mov
dec
hlt
jo
std
mov
arpl
xchg
cmp
shl
fwait
jecxz
pop
call
xchg
ret
cmc
cs
sub
add
stos
mov
fnsave
add
aam
add
ror
xchg
pop
in
movs
sub
pop
xchg
(bad)
cmp
mov
not
sub
cdq
pop
push
pop
and
mov
mov
inc
scas
aaa
xor
std
mov
mov
das
scas
movs
adc
in
test
ins
xor
adc
imul
xor
sub
test
xchg
or
jbe
push
into
and
push
dec
icebp
pop
dec
fcomp
es
mov
cmps
xor
pop
mov
xor
(bad)
psubd
pop
push
test
dec
mov
int
xchg
mov
mov
repz
je
dec
dec
ror
in
xchg
int
mov
fist
frstor
bsr
mov
mov
in
sub
jle
fisubr
mov
cdq
fcmovnbe
in
sub
add
dec
xor
xchg
sti
movs
scas
popa
stos
movs
sti
xchg
scas
shl
xchg
test
out
dec
xor
and
xchg
outs
add
jp
cld
mov
int
jg
les
push
retf
dec
popa
mov
aaa
add
ins
mov
cs
out
sub
call
(bad)
jl
jecxz
ret
add
mov
cli
dec
mov
into
movs
pop
inc
adc
outs
mov
leave
std
rcl
rcl
mov
stc
repnz
adc
jo
pop
add
das
adc
fs
lahf
or
and
mov
inc
out
lea
mov
or
add
bound
bound
mov
aam
sbb
nop
add
sub
popa
int3
repnz
cli
sti
pop
mov
jne
je
clc
fs
out
aaa
in
inc
nop
(bad)
lds
dec
hlt
dec
test
es
sub
lods
inc
pop
mov
loop
lds
fist
jnp
neg
into
sub
imul
sbb
adc
inc
dec
add
cmp
mov
test
jae
mov
shl
inc
data16
stc
or
cmp
jnp
jecxz
ins
pop
inc
pop
push
or
cmp
jb
or
pop
mov
push
cmp
arpl
inc
std
dec
xor
xor
mov
pusha
(bad)
push
movs
scas
pop
test
push
pop
pop
fstp
dec
pushf
cs
outs
pop
cmp
inc
jecxz
sbb
mov
sub
mov
sti
jecxz
lods
out
mov
ret
jae
fsubr
cmp
mov
enter
cmp
xor
sbb
pop
push
addr16
pushf
leave
cmp
das
pop
lods
imul
and
lods
clc
ficomp
mov
pop
xlat
xchg
jno
(bad)
pop
dec
xchg
rol
shl
call
inc
sbb
in
pop
cmp
test
inc
mov
dec
je
xor
jmp
cmp
sub
popa
inc
sub
fisub
hlt
aam
push
jmp
xor
and
test
outs
pop
lahf
push
popf
das
cmp
pop
add
fmul
sbb
dec
or
daa
hlt
stc
adc
es
aaa
scas
inc
xchg
lea
inc
cmps
sub
lahf
cmp
and
aaa
add
push
adc
hlt
mov
call
jmp
icebp
int3
ss
inc
inc
xchg
iret
xor
mul
cmp
xchg
cmp
sbb
cld
add
inc
pop
mov
in
mov
test
ins
sub
psubusw
push
xchg
loop
mov
and
mov
js
pop
test
iret
lods
dec
imul
dec
adc
gs
sahf
jnp
cdq
pop
popf
lahf
mov
mov
stos
je
mov
or
daa
(bad)
movs
ja
out
leave
or
pop
mov
and
ins
mov
mov
or
int3
cld
scas
mov
sub
lods
sbb
ss
bound
xchg
arpl
jne
jge
pushf
popa
aas
movs
fdivr
test
pop
pop
xor
mov
pop
mov
sbb
jno
in
cmp
pop
ins
test
adc
mov
mov
fwait
lahf
sub
jl
daa
mov
cld
or
stos
jae
shl
jo
adc
out
loopne
stos
xchg
adc
jg
sbb
rcr
sbb
cmps
mov
jmp
mov
jge
xchg
sub
push
mov
jge
dec
pusha
in
test
(bad)
dec
mov
mov
imul
lea
push
dec
nop
jbe
cmp
mov
mov
inc
push
aam
and
push
mov
mov
aam
cs
dec
retf
jbe
lods
or
pop
sub
js
xchg
fisubr
pop
sbb
mov
mov
pop
xchg
mov
loopne
add
mov
lods
xor
mov
jle
mov
or
add
std
ins
nop
fisubr
pop
jne
push
xor
lds
or
xchg
jb
int
push
jle
aas
mov
and
loope
add
pop
dec
scas
xchg
adc
movs
pusha
aad
ja
xor
cs
sbb
xchg
std
lods
pop
ret
and
pop
out
push
int3
cmp
mov
or
mov
jae
xchg
push
aad
inc
retf
and
fldcw
inc
mov
aam
cmp
repnz
out
xor
lea
mov
ds
mov
jmp
sub
jp
bound
and
mov
int
add
je
cli
cdq
mov
imul
pop
ret
lods
in
iret
and
scas
shl
push
shr
int
xlat
add
inc
retf
pop
aas
mov
sbb
push
stc
mov
and
xchg
pop
arpl
or
enter
lea
mov
or
int
ds
daa
jae
xchg
jb
cwde
mov
aad
js
add
test
stos
dec
dec
xchg
push
mov
fdivr
outs
jo
xchg
push
sbb
xchg
pop
or
(bad)
in
or
lea
mov
add
sbb
pop
mov
loop
xor
loopne
inc
jl
pop
dec
cdq
ss
outs
sbb
pushf
mov
enter
ret
pop
or
cli
aaa
and
es
mov
and
jl
or
stc
sbb
out
inc
sar
mov
mov
dec
jl
xor
push
jp
xchg
out
lock
adc
xchg
fs
addr16
push
cs
mov
mov
cmc
stc
and
sub
dec
enter
jp
push
enter
movs
xlat
mov
mov
nop
nop
(bad)
fld
mov
xchg
jno
dec
jbe
jmp
dec
xor
mov
jmp
mov
xchg
sbb
lock
(bad)
fxch
lods
push
and
lds
mov
mov
mov
cmp
cmp
pushaw
xchg
sub
jmp
pop
mov
push
add
adc
loope
adc
jmp
cdq
jno
mov
ficomp
and
or
nop
add
(bad)
inc
jb
pop
ss
(bad)
pop
icebp
shl
retf
cmp
cdq
inc
adc
cmp
sbb
mov
mov
push
sub
or
pop
test
and
mov
adc
fisubr
cmp
pop
jg
ja
adc
scas
aas
and
js
jge
dec
stos
add
cld
out
movs
call
iret
dec
push
daa
fmul
mov
mov
mov
daa
dec
push
jmp
cmp
sbb
push
je
imul
dec
pusha
ins
rcl
pop
rol
jmp
repnz
dec
mov
test
in
dec
sti
mov
aaa
adc
jmp
sahf
and
jno
adc
fwait
shr
loope
cmp
sub
into
xor
add
push
inc
inc
sti
fiadd
lock
push
mov
push
out
sbb
sub
cmp
stos
cld
das
or
mov
add
mov
cmp
jb
mov
mov
stc
xor
mov
lds
leave
ror
ficom
pop
mov
dec
pop
xchg
sbb
in
pop
pop
lds
outs
pop
cs
jp
cmps
sub
cmps
ret
mov
mov
movs
aas
jecxz
xor
xor
or
xchg
xchg
or
nop
inc
adc
rol
aas
pop
lods
jmp
test
inc
fst
out
ss
push
xchg
push
jnp
or
fld1
jno
daa
call
ins
iret
cmp
cli
mov
ds
fisubr
mov
mov
mov
adc
jnp
imul
rcr
loop
push
(bad)
sti
and
adc
out
outs
test
sti
jle
mov
aaa
mov
mov
add
push
jno
xor
imul
or
pop
push
lock
mov
pop
and
gs
pusha
outs
sub
loop
lock
mov
inc
pop
jg
xchg
jae
rcr
xchg
add
in
pop
xor
jne
fadd
enter
pop
ins
hlt
xor
das
mov
cwde
ficom
js
dec
push
mov
xor
in
aad
jne
(bad)
and
dec
inc
aaa
(bad)
jg
js
lods
add
fist
sub
mov
jnp
add
stos
xchg
and
push
dec
or
inc
test
les
dec
int3
jno
and
test
test
out
sti
mov
data16
stos
add
iret
daa
jnp
popa
pop
ins
sub
add
js
data16
mov
mov
fsubr
pop
ins
dec
pop
jno
test
jmp
jl
repnz
out
popf
(bad)
jo
mov
adc
cmp
ror
mov
xor
les
test
ins
pop
mov
cmps
push
ror
sbb
je
test
test
sbb
inc
xor
dec
mov
adc
jnp
cdq
ins
mov
paddusb
call
mov
(bad)
add
and
aam
nop
xchg
inc
inc
aad
jp
outs
xchg
test
add
mov
inc
pushf
push
cmp
inc
cmps
lods
mov
inc
add
in
inc
sbb
je
sub
inc
popa
add
sub
dec
push
shl
push
sub
sub
adc
dec
mov
(bad)
jle
dec
push
inc
repnz
mov
mov
mov
arpl
sbb
mov
imul
fidivr
cld
cmp
pusha
out
xchg
aam
in
mov
leave
scas
sbb
push
pop
leave
aaa
cld
sub
sub
mov
lock
push
je
sti
mov
mov
mov
mov
add
int
mov
lock
inc
pop
mov
push
cmc
inc
popf
adc
addr16
xor
mov
fdivr
das
das
out
sbb
dec
js
mov
jl
add
aaa
(bad)
sub
mov
push
mov
and
outs
ss
in
xchg
sub
push
add
int
cmp
stos
ins
add
idiv
in
cmp
sbb
pop
addr16
mov
push
sub
sbb
push
call
and
and
inc
popf
or
and
cmp
loopne
(bad)
jle
loope
mov
cmps
jmp
in
ins
fwait
or
cmc
pop
repnz
in
lea
div
mov
rol
inc
sbb
push
mov
sub
mov
dec
test
cwde
sub
loope
ret
push
cmps
xchg
pop
mov
fnstcw
jmp
in
xor
and
fidiv
xchg
xlat
jmp
push
inc
push
scas
xor
adc
mov
in
push
clc
or
pop
jne
cmp
xchg
lock
cmc
sbb
inc
pop
(bad)
inc
je
gs
cdq
inc
sub
sar
push
das
mov
rol
es
aad
mov
gs
test
inc
outs
cld
test
push
sahf
inc
sub
pusha
stos
mov
sti
xchg
adc
fwait
mov
and
ret
rcr
in
inc
popa
xchg
cmp
in
ins
cli
fstp
cmc
mov
cmp
sub
pop
fsubr
shl
jnp
scas
push
pop
leave
pusha
mov
out
jbe
xchg
jns
je
adc
and
(bad)
add
scas
shl
pop
mov
pop
add
xchg
mov
or
cmp
xlat
xor
jnp
jge
popa
xchg
adc
outs
xchg
(bad)
out
lahf
pop
jecxz
dec
pusha
sti
fnstenv
stos
jge
aas
popf
or
push
jecxz
pop
dec
inc
and
xchg
xor
clc
push
or
imul
or
dec
out
scas
out
mov
or
push
or
dec
pop
stc
fmul
fidivr
adc
sub
jns
dec
pop
(bad)
test
popf
cmp
in
cmp
pop
mov
xor
jle
cmp
ret
mov
dec
xchg
push
mov
inc
cwde
movs
adc
mov
pop
push
int
add
es
cmp
or
mov
pop
and
cs
dec
(bad)
cs
test
test
mov
inc
inc
div
fldcw
mov
enter
loop
scas
jo
pop
mov
sbb
or
xlat
out
mov
adc
movs
imul
push
mov
cmps
std
ss
in
cdq
or
add
xchg
push
shrd
iret
pop
js
(bad)
push
adc
cli
rcl
lods
pop
(bad)
int3
jge
(bad)
dec
mov
dec
adc
add
inc
and
lds
dec
test
mov
in
xor
mov
sub
jae
sub
repz
push
mov
push
add
mov
xchg
test
mov
sti
call
rcl
scas
sbb
dec
arpl
xor
imul
das
shl
test
rol
mov
lods
cld
xor
js
jl
mov
push
cvtps2pi
lock
(bad)
jl
repz
inc
xchg
or
sbb
mov
bound
clc
mov
scas
push
sbb
int3
fdivrp
adc
pop
repnz
ror
addr16
push
dec
js
add
lahf
or
scas
adc
aad
std
ins
pop
int
push
das
lahf
dec
into
rcr
dec
push
aas
dec
test
mov
in
mov
sbb
add
aas
fldz
jl
lock
pop
dec
push
loopne
jns
jge
idiv
daa
mov
fdiv
or
in
sub
pop
sub
popa
dec
mov
pop
mov
movs
mov
cwde
das
push
and
dec
lods
pop
cmp
mov
lods
mov
mov
jno
and
adc
lods
leave
adc
mov
mov
(bad)
adc
sti
or
jbe
dec
sub
mov
(bad)
ret
push
inc
popf
movs
mov
es
fwait
jns
lds
xor
lds
inc
pop
xor
jmp
jnp
cli
adc
loop
push
mov
cmp
push
xchg
shl
xor
push
xor
mov
fnstsw
loop
ret
shl
or
push
test
mov
push
hlt
pop
xor
cmp
lahf
mov
into
es
or
loop
mov
in
imul
push
sar
sbb
mov
push
arpl
or
stos
ja
loope
in
fwait
mov
mov
dec
fst
xor
je
mov
aam
dec
adc
call
jnp
add
adc
pop
or
push
stos
fmul
pop
mov
dec
or
xchg
cmp
adc
mov
sub
out
push
scas
clc
sbb
out
dec
dec
loopne
cmp
(bad)
xor
ret
sub
(bad)
popf
pop
cmp
pop
lahf
dec
pop
inc
pop
lods
cmp
mov
inc
add
inc
xchg
ss
gs
gs
jno
cmp
jae
cmps
mov
(bad)
mov
idiv
loop
push
pop
popf
cmp
push
push
pop
iret
stc
dec
xchg
fmul
dec
push
out
das
sbb
test
aas
dec
or
out
clc
pop
daa
xchg
push
dec
jp
shl
pop
test
enter
sbb
lods
(bad)
inc
mov
pushf
sub
lahf
lods
jb
fs
sti
mov
mov
mov
jo
sub
push
push
les
into
ds
or
dec
push
nop
mov
adc
movs
popa
mov
int
hlt
outs
ficom
int
push
push
jl
adc
ror
dec
data16
(bad)
pop
and
jmp
sub
xchg
xchg
ror
popa
and
inc
add
jmp
pushf
xor
lods
test
jp
fsubr
mov
lods
sub
sbb
mov
in
stc
sbb
jne
stos
xor
popf
jae
add
out
stc
fcom
mov
retfw
mov
(bad)
in
iret
sbb
dec
cmps
inc
and
imul
jno
ja
jbe
or
stc
push
mov
xchg
sub
clc
nop
xchg
xchg
cs
or
xor
add
xlat
neg
xchg
mov
jle
jns
cmp
outs
scas
loope
mov
mov
adc
cmp
js
stos
add
dec
ror
and
or
stos
and
(bad)
out
add
dec
scas
shr
jmp
dec
gs
out
jne
cmp
cmp
and
pop
cmp
cli
push
mov
out
mov
lods
adc
(bad)
in
pop
dec
mov
loopne
call
sbb
mov
fld
adc
ds
lods
mov
jmp
sub
push
mov
add
loop
fcom
cmp
ss
and
stc
mov
jne
pop
fs
push
inc
fidivr
adc
movs
xor
jmp
cmps
fstp
(bad)
jb
popa
dec
dec
mov
(bad)
fld
pop
retf
mov
mov
inc
jno
cmps
mov
pop
mov
adc
inc
pop
mov
pushf
repnz
mov
inc
xor
mov
and
mov
retf
xor
idiv
sbb
lods
stc
mov
fdiv
pusha
cmp
nop
jb
sbb
pop
gs
imul
fild
xor
pop
xchg
lods
cld
and
add
sbb
push
popf
aad
jmp
pop
std
jne
nop
rcr
cmps
push
cwde
call
push
add
pop
sub
dec
repnz
cmp
push
(bad)
and
cmc
mov
cld
mov
cs
(bad)
int
pop
jmp
mov
ret
ins
mov
sub
test
push
mov
mov
fs
sbb
aaa
cmp
add
sbb
into
daa
jmp
cmp
push
sbb
xlat
sbb
jmp
or
add
sub
daa
gs
pushf
adc
movs
xchg
shl
push
out
mov
mov
cs
inc
je
shl
push
sbb
cmp
xchg
fwait
sub
mov
xchg
mov
jno
xor
cmp
fild
je
xor
and
movs
add
les
fnop
fisub
inc
sahf
sub
rol
fstp
xor
and
add
mov
xchg
aad
mov
jae
jo
mov
pusha
lods
and
fs
mov
push
or
add
xchg
mov
icebp
or
aas
sbb
mov
daa
scas
sbb
je
cmps
fbstp
(bad)
or
xchg
out
jne
adc
xchg
cmp
lods
sbb
aaa
xchg
rol
pop
rcl
ins
xchg
or
inc
int
cmps
add
dec
outs
add
jae
mov
jb
cmps
adc
sbb
mov
mov
and
jmp
pop
cmp
ret
mov
mov
ds
loopne
cdq
scas
or
shr
mov
ret
(bad)
inc
movs
dec
xchg
jne
(bad)
cmovle
add
pop
div
lods
mov
outs
sub
add
sub
icebp
inc
aaa
shl
hlt
in
lods
js
add
nop
addr16
vmwrite
sbb
xchg
and
mov
pop
push
aas
(bad)
test
mov
(bad)
icebp
sub
xchg
dec
cmp
inc
clc
push
add
xor
pop
push
or
loop
sub
fstp
je
add
(bad)
js
fiadd
lahf
jmp
fistp
ret
add
fidiv
out
ja
lea
push
jl
in
in
data16
mov
enter
mov
loope
inc
inc
add
outs
mov
lods
sbb
ret
pop
inc
shr
int3
inc
mov
mov
ins
push
pop
rol
sub
dec
push
xchg
xlat
imul
les
cmp
mov
or
fmulp
loop
outs
mov
adc
sbb
mov
push
lods
les
pop
lods
retf
mov
nop
xchg
loop
outs
push
and
cwde
cmp
adc
ret
inc
mov
into
inc
and
fnsave
mov
push
dec
aas
lods
dec
mov
repnz
xor
add
arpl
push
mov
or
call
and
mov
test
inc
aam
clc
and
mov
retf
add
xor
jle
push
dec
xlat
xor
add
xor
mov
call
cwde
jl
shr
dec
out
lods
and
mov
adc
dec
rol
(bad)
leave
inc
gs
mov
addr16
sub
jne
lods
and
jmp
iret
mov
xor
xchg
xchg
xor
lds
jae
jle
in
adc
inc
pop
sbb
pop
sub
out
mov
adc
(bad)
stc
lods
push
sbb
push
sbb
das
mov
push
mov
iret
ins
xchg
pop
or
sub
lods
test
dec
push
jecxz
aas
addr16
add
and
dec
stos
mov
dec
push
dec
movs
in
loopne
cmp
js
js
xor
mov
mov
push
fdiv
into
cmp
or
jne
xor
lods
mov
mov
sti
jl
retf
fwait
inc
ret
mov
cld
add
push
lods
mov
loopne
popf
push
push
inc
out
aam
pop
fdiv
mov
lea
mov
sahf
setg
in
rcl
push
inc
push
out
sub
nop
aad
scas
pusha
imul
stos
xor
mov
fcom
mov
push
(bad)
push
lods
sbb
loop
pop
fnstcw
fnstenv
outs
imul
lock
and
fcmovne
addps
mov
sbb
arpl
xor
leave
jnp
xchg
enter
xor
xor
popf
fs
push
mov
es
xor
push
dec
(bad)
dec
iret
rol
jne
xchg
xor
inc
push
fiadd
shr
pop
loope
xor
aaa
jle
lock
and
in
rol
dec
xor
fcomp
repnz
adc
or
sahf
sbb
frstor
mov
and
and
lods
mov
mov
enter
and
xor
mov
adc
mov
sar
(bad)
and
add
pushf
adc
ret
std
aad
outs
xlat
pop
pusha
out
pop
cli
jnp
add
mov
aam
inc
loop
cmp
push
loop
mov
fimul
loope
push
scas
into
sbb
push
sahf
mov
shl
pop
int
pop
jae
mov
std
icebp
mov
add
pop
popf
mov
jae
dec
xor
push
out
push
jmp
sub
int3
inc
push
retf
(bad)
dec
push
or
ss
shl
jp
cmp
dec
aaa
cli
sub
and
jbe
sbb
not
shr
jp
pop
hlt
push
cmp
cmp
fwait
sub
test
call
into
xchg
pop
cmps
sbb
or
into
mov
cmp
and
jge
fidivr
cwde
sbb
add
mov
inc
pushf
fwait
adc
pop
(bad)
adc
cmp
fcom
mov
jecxz
dec
dec
mov
push
or
icebp
adc
stos
fchs
leave
jb
mov
hlt
cmp
punpcklwd
cld
int
dec
clc
(bad)
mov
xor
jecxz
cmc
int
cmc
inc
dec
add
sub
jne
out
in
sbb
retf
inc
mov
or
mov
or
xchg
xlat
mov
loop
(bad)
rcl
dec
jge
sbb
jmp
add
and
jo
fadd
icebp
inc
(bad)
pop
call
pop
jg
ds
stos
jns
call
out
and
cmp
test
ins
not
jmp
cmps
dec
sbb
push
idiv
add
pop
add
scas
scas
cmp
push
xor
sub
cli
das
jbe
clc
mov
or
xor
pushf
fstp
dec
push
inc
into
mov
jmp
mov
mov
daa
or
and
adc
mov
sub
cs
sub
or
retf
ins
push
pop
push
les
xlat
dec
rep
std
or
or
aad
sub
into
(bad)
mov
scas
cdq
mov
push
clc
lods
xor
mov
mov
push
and
test
push
mov
imul
scas
call
test
ret
test
dec
gs
(bad)
or
fld
icebp
(bad)
popa
cmp
xchg
mov
add
jmp
fst
iret
jcxz
push
nop
adc
test
adc
push
dec
xlat
mov
jmp
push
pop
mov
fld
add
push
mov
in
push
xchg
push
stc
mov
mov
test
adc
call
call
xchg
add
xchg
pop
js
hlt
mov
xor
dec
lea
call
mov
mov
pop
and
mov
dec
and
arpl
adc
dec
and
jne
adc
xor
sub
xor
rol
dec
jnp
jg
push
jecxz
xor
imul
aam
jmp
repnz
add
sub
fisttp
pop
add
in
(bad)
test
popf
addr16
jns
mov
jp
(bad)
imul
cmp
xor
cs
dec
cmp
push
mov
mov
mov
and
add
test
movs
xor
pop
cs
imul
mov
pop
xchg
les
adc
pop
cmp
sub
jo
sub
out
cmps
pop
mov
fnstsw
or
dec
push
jmp
adc
and
cdq
and
and
jo
js
test
popa
xor
jle
cs
push
sub
addr16
cwd
jmp
sbb
jg
pop
popf
add
ret
iret
ins
or
addr16
es
sbb
xor
out
aas
cmp
sub
add
repnz
mov
and
int
sbb
mov
repnz
fstp
jae
mov
dec
push
pop
push
ds
in
cmp
movs
adc
fcom
adc
fdivr
movs
cs
je
cmp
idiv
(bad)
mov
jmp
stc
cli
into
mov
ds
icebp
scas
sub
scas
push
fsub
hlt
inc
out
xor
add
xchg
int3
sbb
fadd
dec
mov
push
ds
idiv
cld
test
das
pop
fcomp
shr
sub
add
cmp
cld
adc
jb
push
xchg
jne
jne
push
das
(bad)
in
jmp
test
jbe
jecxz
shr
aam
cmps
mov
add
mov
inc
pop
mov
hlt
cmps
and
icebp
mov
das
pop
ins
fidivr
icebp
div
lock
shl
sub
js
push
stc
xor
test
pop
(bad)
pushf
rcr
mov
mov
popa
xor
std
jnp
xor
lds
push
enter
jmp
outs
(bad)
adc
clc
push
jmp
int
pop
xchg
popf
cli
jns
shr
cmc
push
add
sti
mov
xchg
mov
adc
mov
mov
and
sti
add
(bad)
mov
lods
or
xlat
dec
jbe
loopne
or
in
jecxz
sbb
xchg
push
out
ss
xchg
cmp
movs
dec
dec
inc
iret
scas
pop
mov
xlat
push
or
xchg
cwde
push
stos
fistp
inc
nop
mov
lea
aas
pop
and
mov
shl
sar
js
push
and
adc
pop
xchg
push
repz
jne
fidiv
bnd
mov
fst
and
adc
mov
xchg
and
call
mov
sub
movs
jl
push
sub
xor
inc
rcl
hlt
and
mov
aam
adc
push
mov
mov
in
das
fild
outs
push
pop
mov
mov
fmul
xor
mov
jb
jns
int3
sub
mov
and
push
rcl
test
or
div
cdq
add
gs
mov
push
sub
(bad)
test
aad
rcr
jo
adc
or
cld
xor
dec
mov
gs
ins
scas
stos
jns
inc
ror
pop
mov
inc
push
xchg
mov
cwde
call
inc
(bad)
in
out
sub
and
test
cmc
aas
cmp
(bad)
jbe
mov
sub
mov
pop
in
and
call
cmp
sub
cmp
push
test
jmp
inc
adc
loop
sub
fdiv
inc
ror
cwde
leave
add
in
gs
out
adc
(bad)
std
xor
mov
fnstsw
inc
repnz
pop
mov
jl
clc
outs
xor
mov
inc
and
(bad)
xor
in
mov
test
int
and
and
arpl
lock
add
test
test
enter
jle
adc
ret
ja
(bad)
sub
xchg
mov
sahf
mov
fs
ret
xchg
push
inc
push
jge
jecxz
push
in
xchg
test
ficom
pop
out
lea
xor
dec
or
pop
in
jge
icebp
(bad)
cmps
dec
cmp
dec
repz
adc
cmps
cmp
leave
jecxz
mov
test
rcl
popf
nop
xchg
prefetcht2
dec
dec
(bad)
sub
aam
mov
xor
cdq
inc
mov
sub
dec
movs
mov
mov
aad
inc
inc
inc
or
adc
pop
dec
xor
push
push
xlat
push
test
in
adc
and
mov
out
test
pop
cli
adc
or
(bad)
or
and
mov
and
pandn
in
push
cmc
ret
dec
fs
inc
mov
imul
sbb
popf
int3
pop
out
mov
mov
push
sub
sti
cmp
or
push
test
(bad)
out
mov
mov
sub
daa
jg
sub
inc
push
adc
dec
and
dec
xchg
xchg
xor
jg
adc
popa
or
xchg
or
sub
push
in
cmp
add
outs
clc
daa
sub
aaa
sub
dec
ret
cmp
bound
add
and
xchg
and
or
xlat
shl
(bad)
(bad)
aad
xor
add
adc
sahf
retf
aas
sahf
dec
push
clc
jl
out
pop
or
jmp
idiv
or
push
add
daa
fsub
in
and
add
pusha
adc
adc
push
adc
sbb
jae
add
pop
sar
mov
stos
pop
sbb
sti
ja
push
ins
cld
pusha
mov
gs
mov
pop
or
xchg
adc
add
pop
test
xor
mov
popf
pop
push
popf
inc
mov
sbb
xor
ret
mov
add
leave
jns
imul
scas
xchg
xchg
dec
jg
mov
adc
xor
(bad)
out
(bad)
sub
jle
mov
pop
mov
xchg
stos
sti
aas
cmc
dec
mov
push
ss
jns
mov
push
clc
jnp
stos
pop
loop
bnd
xor
call
(bad)
push
fcmovne
cwde
repnz
add
fisttp
pop
mov
rol
mov
pop
pop
(bad)
xor
fldenv
cmp
sbb
mov
push
popa
div
popf
hlt
pushf
std
jge
xchg
inc
rcl
dec
cmp
inc
dec
mov
ins
sahf
or
pop
test
inc
dec
cmp
cmp
and
hlt
leave
sbb
sub
or
jl
pushf
rol
jmp
xchg
mov
mov
push
push
adc
push
fwait
push
add
cmp
and
cld
in
add
fist
add
retf
cmp
(bad)
pop
mov
mov
cmps
cmp
lds
je
mul
aaa
add
pop
fcmovnu
loop
add
add
pushf
inc
dec
pop
xchg
repnz
jne
sbb
ja
popa
imul
adc
sub
and
push
les
inc
jl
adc
in
xor
ja
and
nop
aas
rcl
and
movs
dec
xor
and
dec
jo
mov
dec
jb
xchg
add
inc
pop
cmp
add
imul
(bad)
das
mov
std
mov
inc
cmps
dec
imul
and
loopne
pop
mov
inc
rcl
fwait
or
xor
mov
dec
ror
jmp
les
push
lds
sbb
je
xchg
or
(bad)
out
inc
enter
and
jno
mov
imul
and
mov
or
fist
nop
fmul
cmp
inc
sub
test
dec
or
lock
xchg
test
mov
les
mov
cdq
sbb
mov
ss
mov
fisub
call
or
out
leave
rcl
or
mov
in
cli
int
xchg
pop
test
cmp
(bad)
mov
sbb
cmp
mov
dec
js
mov
and
sub
add
fiadd
and
dec
(bad)
test
mov
popa
inc
scas
bound
dec
add
lods
idiv
xchg
inc
into
cmp
xchg
dec
add
pop
in
jle
jp
jo
pop
mov
dec
shl
cmp
adc
shr
jnp
popf
shl
jl
lahf
repz
adc
inc
inc
ds
retf
nop
int3
add
jle
scas
in
xchg
sub
jle
fcmovbe
and
das
jp
std
and
es
adc
push
mov
mov
fild
scas
js
test
and
les
push
rcr
imul
and
and
loopne
jmp
(bad)
dec
addr16
fiadd
mov
mov
mov
xchg
adc
jne
inc
sub
jno
jno
mov
mov
push
aam
cmp
sub
pop
lds
mov
je
outs
test
mov
data16
jno
sti
push
fbld
arpl
cli
inc
cmp
mov
ficomp
mov
add
push
pop
rcr
sub
(bad)
fld
or
and
popa
sahf
repz
push
(bad)
jge
jae
lahf
test
fcom
iret
pop
cmp
push
cmp
(bad)
fcom
arpl
(bad)
sub
fwait
jbe
xor
dec
mov
jmp
sub
repnz
test
add
shr
adc
pop
jl
jg
inc
sbb
ds
dec
jae
imul
dec
cmc
leave
hlt
or
jnp
pop
xor
xor
and
jae
mov
movs
mov
add
sub
xchg
in
mov
ins
in
mov
jb
call
int
not
pop
cmp
push
test
icebp
shl
xlat
push
repnz
mov
aaa
or
xchg
(bad)
push
push
dec
adc
or
repz
jnp
mov
retf
pop
dec
xchg
mov
jns
or
xor
mov
jle
bound
fs
xor
jae
mov
add
movs
fucomi
xchg
sub
xor
pop
push
or
pop
and
push
mov
mov
xor
cdq
jne
xchg
rcl
neg
mov
add
dec
lahf
mov
dec
adc
sbb
(bad)
repz
mov
fisubr
mov
aas
cmp
popf
enter
sub
push
cmp
push
and
mov
bound
fist
outs
sti
call
mov
loopne
add
pop
dec
mov
leave
ror
fdivp
dec
mov
inc
cmp
clc
shl
inc
jl
mov
test
or
lds
fisub
and
add
jo
sub
mov
sub
out
push
call
mov
outs
not
push
adc
mov
out
cmps
cmovb
fcmovbe
dec
and
sbb
push
in
mov
movs
or
xor
std
cwde
std
movs
fptan
and
cmp
idiv
mov
pop
jmp
jno
sbb
jo
xor
mov
rcr
imul
add
nop
aam
leave
push
pop
jnp
retf
mov
call
das
xchg
mov
sar
or
gs
xchg
lods
popf
adc
and
mov
je
or
pop
pop
jecxz
jge
xor
mov
jecxz
gs
mul
ror
jle
and
sub
call
cwde
jb
into
je
aam
sar
jge
adc
or
add
in
iret
mov
push
pusha
fwait
mov
pop
xor
shr
neg
call
pop
mov
fisttp
ja
mov
mov
push
in
xor
hlt
sbb
dec
setbe
xor
sbb
sub
sub
push
in
fst
jge
out
fldenv
or
ds
cmp
aam
inc
lock
cmp
or
ins
mov
sub
lods
cmp
(bad)
call
push
inc
mov
cld
sahf
add
xchg
(bad)
jmp
xor
jb
lea
and
and
mov
imul
mov
dec
adc
pop
xlat
sbb
clc
loop
lea
clc
xor
push
stc
dec
movs
dec
cmps
test
sbb
pop
aam
daa
rcr
or
xchg
dec
sub
les
cwde
sbb
data16
mov
(bad)
ds
xor
jg
sbb
addr16
add
shr
cmp
sub
push
mov
push
jbe
mov
imul
jo
sbb
inc
push
les
sahf
in
or
jle
sti
jns
aad
fnstenv
inc
pop
sbb
sub
jle
sbb
not
sub
ret
(bad)
and
inc
sbb
repnz
sub
inc
and
aas
xor
(bad)
mov
fsubr
pushf
and
clc
call
daa
std
and
mov
mov
mov
loope
inc
into
ss
cmc
sbb
mov
jnp
mov
shl
(bad)
fsubr
je
mov
add
pop
int3
test
leave
jmp
ds
xchg
icebp
imul
addr16
fstp
cmc
xchg
mov
push
std
and
lsl
and
rep
js
out
sbb
push
rcl
(bad)
push
xchg
mov
fwait
ins
cmps
or
push
adc
dec
xor
aas
pushf
ss
sub
ss
shr
inc
jnp
xor
bound
jne
or
inc
xor
adc
and
push
into
sar
aaa
or
sysenter
jmp
jmp
outs
test
jbe
movs
addr16
mov
add
pop
dec
dec
dec
shr
pop
dec
gs
cmp
or
mov
shl
push
cmps
xor
leave
lods
std
adc
push
fimul
or
dec
xor
jecxz
aaa
jno
or
fsubr
loopne
dec
mov
adc
pop
sbb
popa
jp
mov
pop
mov
or
aad
loope
add
jecxz
(bad)
imul
int3
aaa
addr16
div
push
inc
and
lock
test
sbb
ss
imul
sub
xor
js
in
and
dec
dec
(bad)
jo
aam
loopne
adc
outs
hlt
fsub
jge
add
cmp
iret
xor
push
push
(bad)
cld
cmp
lahf
imul
out
call
mov
pop
cli
mov
jle
in
jo
jge
rcr
fwait
lock
cwde
xor
sbb
sbb
adc
mov
cmp
push
adc
imul
popa
fs
mov
(bad)
into
rcr
retf
cdq
sbb
pushf
sbb
mov
stos
(bad)
in
mov
lea
call
shr
pop
ins
push
bnd
cmp
rol
repnz
mov
lahf
and
xchg
icebp
add
icebp
js
push
xor
xor
pop
jns
imul
ror
adc
aam
sub
mov
dec
scas
int
push
mov
mov
mov
ret
jecxz
pop
imul
push
adc
clc
push
cmp
leave
daa
add
ror
inc
fiadd
pop
movs
iret
cmp
icebp
pop
pop
(bad)
cmp
mov
fdivr
push
xor
adc
adc
(bad)
popf
mov
inc
pop
pop
mov
adc
(bad)
xchg
dec
cmps
pop
dec
dec
mov
push
jno
cmp
call
outs
xor
stc
dec
iret
gs
mov
xlat
xchg
mov
(bad)
push
repnz
mov
arpl
jmp
sub
pop
push
(bad)
push
sahf
and
jge
fild
int
sub
jns
inc
movs
popf
cmp
cld
mov
xlat
aam
stc
pop
mov
sbb
and
jecxz
fst
xor
jg
ins
shl
xchg
jg
leave
aad
pop
scas
add
ins
std
push
outs
fnstenv
nop
and
ret
fbstp
je
xor
sbb
ins
movs
test
dec
(bad)
xor
inc
mov
iret
pop
inc
xchg
jle
stc
sub
ret
push
fsub
ss
iret
xor
fsubr
stos
pop
mov
sahf
push
push
lahf
mov
push
mov
pop
test
cdq
sbb
daa
mov
ja
dec
xchg
gs
les
sub
and
not
or
out
jnp
test
arpl
lahf
sub
dec
mov
dec
das
mov
sub
lea
ror
(bad)
cmp
mov
push
fwait
mov
cli
xchg
rcl
push
xor
jp
or
mov
cmp
add
pop
inc
pop
and
pop
jl
icebp
jae
test
jecxz
or
neg
and
dec
dec
mov
pop
xor
inc
aaa
inc
mov
add
cmp
mov
inc
pusha
arpl
es
es
mov
das
add
mov
xchg
nop
push
stos
xor
dec
and
pop
push
jecxz
ins
mov
push
mov
imul
ja
adc
or
dec
fidivr
sbb
loop
aaa
sbb
cmc
mov
xchg
mov
jnp
movs
js
mov
aas
and
push
push
jl
test
in
(bad)
xchg
nop
pop
int
pusha
mov
cmc
aad
mov
mov
popf
jp
inc
push
movs
push
cmp
repz
sbb
xchg
xor
push
aam
test
scas
push
enter
inc
push
dec
cmps
cmp
ss
fwait
in
xchg
xor
pop
jo
das
jnp
sbb
ret
inc
push
jbe
leave
xor
and
enter
adc
jae
cmps
jl
inc
loop
lds
mov
mov
adc
mov
cmp
dec
pusha
or
mov
cs
in
and
fistp
test
lds
retf
fist
mov
inc
adc
or
es
pusha
fs
adc
shl
rcl
xchg
(bad)
cdq
push
push
inc
sbb
gs
cmc
cmp
or
pop
and
addr16
sar
stc
and
mov
gs
cmp
cmps
adc
loope
daa
sbb
arpl
or
les
shr
push
neg
in
jns
ret
popa
xchg
jbe
stos
add
shl
repz
jb
outs
int3
mov
movs
push
test
and
push
push
sub
cdq
ss
cmps
add
xor
pop
cmp
or
dec
push
scas
xchg
scas
std
jmp
pop
or
mov
fiadd
adc
cs
mov
scas
cmps
mov
mov
imul
pop
add
imul
jg
(bad)
out
pop
or
sbb
loop
clc
xchg
xor
inc
cmp
add
xchg
(bad)
jp
adc
xchg
jae
loope
sub
xchg
push
mov
mov
(bad)
jbe
cld
or
cmp
push
sub
xchg
ds
das
cs
pop
jp
jp
mov
fwait
xor
pop
shr
repz
idiv
xor
mov
sbb
test
int3
or
clc
jmp
xor
sub
jl
aad
lods
outs
aas
mov
idiv
(bad)
jb
mov
lods
fistp
inc
push
jmp
repz
pusha
pop
in
lock
dec
dec
push
loop
inc
mov
cmps
retf
push
jge
mov
mov
pop
jo
wbinvd
popa
or
test
int3
ror
cmp
xlat
rcl
cmp
aas
je
xchg
mul
or
addr16
pop
fisubr
jns
inc
jl
jmp
les
pop
fsub
jmp
dec
mov
adc
sub
sub
sbb
outs
stos
scas
hlt
mov
sti
jmp
cmp
(bad)
or
push
inc
mov
pop
lock
inc
les
mov
outs
mov
xchg
xchg
leave
lds
push
jg
not
dec
jp
rcl
push
popf
lods
add
jecxz
movs
adc
sub
and
ret
(bad)
out
or
adc
mov
int
jns
pop
retf
and
push
shr
xchg
mul
leave
test
repz
enter
inc
add
xchg
xor
cmp
jmp
jno
pop
add
jbe
sbb
adc
stos
pop
push
mov
outs
sub
in
cmc
enter
neg
and
aad
cmp
daa
sbb
leave
sar
cli
int
push
fldl2e
movs
rcl
pop
mov
outs
inc
cs
outs
inc
in
into
ins
mov
push
hlt
mov
and
dec
push
mov
sbb
or
popa
add
fucomp
in
cld
adc
pop
xchg
mov
sbb
in
xor
xor
dec
cmc
cld
xor
push
push
fimul
sub
pop
pop
(bad)
fnclex
hlt
dec
push
pop
cmps
push
inc
mov
retf
xor
sub
xor
ins
call
(bad)
cli
(bad)
jge
cmp
xlat
xchg
pop
test
mov
dec
bound
mov
retf
mov
test
cmp
ss
fistp
dec
mov
push
test
arpl
dec
fidivr
(bad)
mov
pop
icebp
pop
mov
jp
std
icebp
sbb
in
ds
mov
jecxz
dec
pop
xlat
adc
(bad)
iret
sbb
jmp
pop
fsubr
jmp
add
div
shr
mov
inc
or
mov
bound
mov
addr16
fisttp
sub
call
xor
inc
push
pop
adc
shl
and
ss
call
(bad)
(bad)
clc
fdivr
mov
movs
cdq
lock
popf
clc
rcl
adc
mov
inc
jno
xchg
stos
sti
(bad)
push
lds
(bad)
sub
sbb
repnz
lods
popa
jnp
mov
fcomp
dec
sti
sbb
sub
push
movs
aam
sub
mov
hlt
mov
inc
and
rcl
(bad)
fucomip
inc
inc
cdq
inc
loopne
and
mov
push
xlat
repz
xchg
out
adc
repnz
retf
push
jmp
cmc
dec
mov
(bad)
(bad)
scas
ror
push
fistp
pop
jbe
inc
inc
movs
pop
dec
sar
(bad)
sub
icebp
jb
jo
or
xor
bound
xor
repnz
sbb
loopne
dec
adc
inc
and
retf
pushf
icebp
retf
out
sub
jnp
lds
jo
into
push
stos
sbb
cdq
mov
data16
push
mov
and
and
mov
push
test
add
xchg
ror
pusha
lods
clc
imul
dec
stos
xchg
cmp
mov
cmp
loope
dec
(bad)
dec
jl
(bad)
xchg
adc
(bad)
in
and
add
(bad)
mov
xor
retf
push
sbb
mov
mov
clc
or
mov
adc
jo
in
(bad)
arpl
lods
popa
lahf
ins
mov
popa
in
xchg
jae
cli
cmovnp
test
mov
push
xor
out
mov
sar
repnz
imul
dec
mov
xor
mov
int3
int
xor
mov
int3
jno
cwde
loopne
cmp
pop
cld
dec
mov
call
sub
mov
jmp
into
xchg
inc
repnz
aas
cmp
mov
rol
repnz
sbb
adc
dec
lock
repnz
arpl
test
or
sub
mov
mov
pop
repnz
push
cld
nop
xchg
adc
or
stos
push
mov
ret
lea
sub
and
cdq
mov
mov
movs
(bad)
imul
out
dec
mov
inc
and
dec
jle
retf
sbb
push
ins
in
and
mov
mov
mov
in
leave
mov
push
out
push
jns
push
and
or
outs
sbb
popa
sub
outs
ret
inc
jmp
inc
adc
pop
xchg
mov
xchg
gs
cdq
pop
lea
mov
and
inc
add
push
test
ss
jno
in
xchg
xor
add
scas
mov
retf
jo
aad
(bad)
pop
outs
push
sub
jge
data16
pop
call
mov
lds
daa
test
add
mov
gs
jge
dec
lods
inc
mov
mov
call
add
outs
mov
ins
pushf
mov
daa
inc
std
test
or
arpl
jmp
mov
fist
pop
sub
(bad)
(bad)
shr
ins
mov
out
dec
dec
popf
outs
xchg
push
xchg
cmp
cmp
shl
rol
dec
mov
pop
sbb
in
jge
(bad)
leave
or
jp
shr
sbb
arpl
js
xor
xchg
xor
cmp
jb
sbb
fwait
inc
fadd
push
lahf
add
mov
(bad)
jo
cdq
movs
push
jns
ja
xchg
fs
xchg
pop
es
inc
dec
inc
sti
dec
mov
add
call
int3
call
push
out
popa
xchg
cmps
and
int3
and
stos
gs
dec
xchg
retf
lds
mov
cmp
stos
pop
cmp
das
outs
in
or
mov
xor
test
in
adc
and
xchg
ret
xor
fst
cwde
sbb
inc
or
add
jns
test
jle
test
das
adc
test
mov
push
das
or
aam
jnp
jecxz
into
inc
push
xchg
cmp
adc
outs
and
test
add
mov
(bad)
shl
pop
outs
daa
dec
xor
(bad)
mov
pop
cld
xor
aad
lahf
test
push
mov
clc
ss
aaa
push
xlat
jle
push
sbb
adc
mov
leave
fld
or
and
adc
movs
fidivr
dec
retf
add
or
xchg
aas
std
add
pop
push
push
stos
pop
(bad)
div
lock
adc
fadd
push
inc
pop
fwait
cwde
lods
cmps
and
jmp
call
jns
or
lock
scas
popa
or
add
cmp
aad
daa
inc
movs
ret
jnp
stos
adc
sbb
(bad)
xor
xor
push
loope
loopne
push
xchg
jno
mov
jns
mov
dec
aad
sub
jo
pusha
div
inc
and
call
push
mov
push
iret
movs
mov
xor
lahf
inc
loopne
jae
xor
neg
ins
pop
jno
dec
jp
add
push
cmp
aaa
js
add
repz
or
sbb
sub
push
pop
mov
dec
push
pop
cld
push
shr
(bad)
outs
fbstp
(bad)
cmps
or
int3
dec
addr16
or
bound
jge
mov
stc
loop
sahf
xchg
dec
sub
stos
std
sbb
sub
inc
add
scas
mov
jo
or
and
ror
jb
call
out
cmp
lock
push
jnp
lea
call
dec
test
repnz
call
jnp
or
movs
mov
push
pop
dec
clc
dec
or
add
add
cmps
mov
es
repz
jae
and
aad
inc
ins
add
fdivr
daa
mov
lahf
rcr
movs
or
xor
and
xor
sbb
out
out
lods
or
popf
add
test
pop
shr
retf
pushf
rcr
mov
stos
sar
sub
cmc
fcmovu
imul
repz
push
push
ret
ja
fnstcw
dec
neg
dec
sbb
fstp
inc
inc
inc
ins
and
jbe
adc
cli
retf
imul
cdq
and
jle
push
jnp
adc
out
jae
push
out
das
mov
shl
xor
enter
push
inc
and
out
movs
jge
movs
xchg
xchg
in
scas
mov
sbb
out
dec
pop
xor
ss
loope
movs
ror
push
std
(bad)
mov
xor
aas
loopne
push
leave
dec
imul
out
add
jp
mov
xor
xchg
stos
std
mov
out
mov
push
lods
cmp
dec
adc
mov
enter
and
cdq
retf
arpl
fs
(bad)
pop
adc
mov
pop
mov
jnp
cmps
jb
add
(bad)
loope
popf
lods
pop
cmc
xor
xlat
imul
or
outs
pop
int3
lods
add
call
and
jnp
lods
fnstenv
ret
mov
xchg
dec
nop
ins
xchg
clc
push
xor
and
sub
sti
mov
ins
retf
rcr
pop
sbb
pop
stos
fwait
xchg
inc
pop
mov
out
pop
add
hlt
inc
xchg
jbe
out
mov
mov
int
fnsetpm(287
pop
pop
popf
mov
jge
pop
xchg
sbb
repnz
sub
das
bswap
or
popf
pop
xchg
sub
cs
mov
jae
or
into
push
xchg
ds
adc
retf
pushf
add
mov
dec
or
xchg
inc
jp
mov
xchg
lods
movs
(bad)
aas
push
xchg
mov
fimul
xchg
pop
cmp
add
(bad)
icebp
dec
or
icebp
lds
fwait
xor
xchg
mov
add
mov
ins
fs
mov
jmp
sbb
cs
sbb
xchg
add
leave
pusha
jecxz
sti
out
mov
adc
push
add
pop
bound
adc
jnp
cdq
into
call
popa
les
mov
inc
aam
push
jno
or
ds
and
int
fwait
mov
xchg
(bad)
mov
cmp
xchg
scas
movs
test
cmps
xor
adc
xchg
mov
les
loopne
inc
pop
ficom
dec
push
adc
rcl
lods
pop
dec
mov
movs
push
clc
or
xor
mov
icebp
nop
xlat
push
mov
and
or
arpl
or
fstp
xchg
inc
fnstsw
cmp
test
out
(bad)
int3
and
(bad)
sar
jg
xchg
xor
and
dec
(bad)
leave
es
pop
sbb
sub
mov
fwait
stos
xor
or
xor
stos
fist
pop
adc
shr
icebp
daa
mov
mov
icebp
lods
movs
or
jecxz
fbld
fdivr
repz
jmp
mov
outs
shl
pop
or
ins
jle
mov
imul
in
mov
popf
scas
hlt
lock
xor
sub
add
inc
aas
push
jnp
and
mov
jecxz
(bad)
imul
shl
arpl
retf
out
pop
cs
test
sub
popf
movs
repnz
xchg
cmp
adc
jae
inc
jecxz
add
xchg
and
test
sub
sti
aam
xor
ret
pop
call
mov
int3
or
push
mov
loop
lods
mov
jg
enter
sub
sbb
das
in
cli
ins
sar
cdq
repz
pop
aam
(bad)
cwde
popf
inc
xchg
outs
cmp
push
xchg
ins
push
cdq
clc
jg
sbb
icebp
and
je
sub
stc
xor
pop
mov
adc
mov
xchg
dec
mov
push
stos
add
jns
lds
or
mov
in
in
adc
mov
pop
dec
inc
inc
cmc
ret
sti
pop
jge
pop
ins
adc
mov
repnz
(bad)
mov
mov
add
inc
and
dec
jecxz
cs
lds
add
test
cmp
xor
lea
push
and
lods
cld
mov
pop
push
aas
push
sbb
and
retf
ja
or
cmp
out
xchg
dec
fnstenv
and
clc
aaa
cmc
(bad)
cld
fild
jo
test
ds
loop
mov
add
add
mov
mov
dec
sbb
out
bound
dec
mov
hlt
mov
sub
cmps
sbb
aad
or
dec
mov
popa
add
imul
(bad)
xor
lds
stos
xchg
fiadd
cdq
std
(bad)
dec
cmc
cwde
aam
std
mov
stos
fcomp
call
mov
add
pop
leave
fimul
jg
mov
popa
(bad)
dec
pop
push
mov
or
int
pusha
iret
not
dec
xchg
das
cdq
pop
adc
mov
add
mov
in
(bad)
scas
mov
shl
push
jne
xchg
stc
mov
adc
aas
addr16
or
or
pop
aad
pop
cmps
enter
dec
and
mov
je
movs
mov
sbb
mov
fidivr
cmps
ss
das
sbb
in
imul
imul
jmp
js
inc
cmp
push
cli
xor
and
aaa
mov
ins
daa
je
and
(bad)
cmp
mov
or
add
pop
inc
pop
jmp
sahf
push
mov
rcr
jmp
shr
sub
xchg
push
in
arpl
xchg
into
mov
xor
sar
xchg
and
scas
retf
push
pusha
push
cmp
mov
cwde
dec
inc
(bad)
icebp
js
popa
call
add
scas
stos
or
in
sbb
sbb
jb
popa
in
mov
test
push
sbb
cmp
rcr
mov
inc
push
icebp
push
pop
and
ficomp
inc
sahf
lods
lea
cwde
fdivp
ins
out
hlt
adc
xchg
jmp
leave
(bad)
out
outs
and
push
sub
sar
mov
push
pop
mov
adc
jns
sti
inc
rol
addr16
jns
loop
push
push
js
pop
jne
pop
imul
test
fisubr
dec
jno
inc
cwde
nop
lahf
mov
sub
sub
enter
mov
sub
je
mov
sub
(bad)
push
inc
cmc
mov
cmp
adc
xchg
lea
dec
repz
xor
jbe
lods
sbb
sub
loope
sbb
icebp
(bad)
and
lock
pushf
xchg
xchg
or
movs
pop
mov
jmp
xor
add
pusha
outs
push
pop
fst
std
pop
leave
scas
add
sbb
fist
int
add
je
aaa
xchg
scas
loop
daa
in
dec
stos
aas
dec
push
mov
cmps
sub
push
push
pop
add
sub
xchg
pop
or
cdq
cmp
popf
movs
adc
cmps
push
jae
ja
add
xchg
not
jo
lea
loope
adc
ret
push
in
sub
or
jmp
pusha
xchg
dec
mov
mov
fs
ret
stos
ss
es
mov
stc
mov
test
fstp
xchg
fwait
or
sub
add
js
push
mov
mov
sub
je
aam
xor
enter
jae
out
adc
dec
mov
push
popa
add
ror
mov
dec
pop
dec
and
cmp
loope
nop
cmp
sub
adc
cld
cld
mov
call
cmp
pop
cmp
jmp
adc
ror
mov
mov
sbb
sbb
out
mov
aad
sub
inc
mov
scas
sbb
mov
dec
iret
(bad)
sti
aaa
clc
loopne
fimul
sub
push
test
add
imul
lahf
cmc
test
add
pusha
xor
mov
stos
(bad)
sbb
imul
cmp
xchg
stos
mov
push
repz
aam
jb
ss
fisubr
mov
hlt
out
fucom
cs
push
es
pop
mov
mov
in
iret
cs
rcr
add
into
mov
aas
clc
adc
sub
icebp
popa
mov
aad
pushf
xor
xor
xor
xchg
add
jge
mov
adc
pop
shl
retf
cmp
imul
cmp
sub
fdivr
pop
dec
pop
ret
clc
dec
inc
push
test
push
xor
(bad)
lock
or
ror
sbb
aad
outs
xor
adc
push
fs
sbb
test
call
cmp
ret
dec
sub
les
outs
cdq
dec
adc
mov
addr16
fld
in
sar
leave
cmp
es
stc
pop
sahf
call
mov
ret
fisttp
inc
mov
mov
in
jmp
dec
inc
cmps
call
fist
pop
std
or
cdq
xor
in
icebp
pop
push
add
and
mov
adc
outs
(bad)
cmp
adc
inc
or
jmp
call
retf
adc
mov
cwd
pushf
dec
add
sub
gs
addr16
sub
int
xchg
js
out
mov
fmul
xor
push
pop
mov
xor
add
mov
popa
fld
outs
call
in
arpl
lahf
xchg
xchg
push
mov
ret
cmp
mov
adc
mov
inc
jbe
loop
into
loope
mov
arpl
pop
data16
or
call
movs
(bad)
jmp
dec
leave
pusha
dec
sbb
mov
dec
inc
ret
sahf
mov
sar
std
pop
jle
fiadd
jb
mov
mov
mov
leave
add
aad
ds
sbb
shl
pop
mov
mov
(bad)
fistp
imul
into
mov
pop
push
sub
mov
popa
bound
stc
mov
fist
les
mov
jb
pop
mov
jo
push
in
mov
cmp
lea
adc
push
outs
xor
dec
jne
inc
xchg
test
out
push
outs
mov
stos
jne
cmp
mov
pop
mov
add
mov
mov
mov
fwait
test
or
ss
inc
and
xor
adc
rcl
mov
cmc
call
scas
sub
clc
movs
sbb
popf
cmp
cmps
les
cmc
ret
mov
pop
sub
loop
xlat
in
aad
int
sub
xchg
lock
inc
or
adc
adc
dec
cdq
push
(bad)
repnz
call
mov
inc
jmp
mov
mov
mov
dec
xchg
push
fcmovb
mov
cdq
sub
test
jb
mov
mov
sub
push
movs
repnz
or
adc
scas
inc
or
jmp
xchg
in
in
(bad)
and
(bad)
cwde
cmc
sbb
into
pop
cmps
xor
popa
out
xchg
push
(bad)
jle
jno
jb
ss
xor
aam
(bad)
jecxz
rol
jnp
xor
test
xor
sub
mov
dec
ds
rcr
adc
jge
ins
test
popa
adc
sahf
mov
xchg
test
cmp
mov
cld
out
lds
sub
fs
inc
fcmovnu
pop
mov
adc
and
test
ja
or
sub
mov
into
(bad)
push
push
call
cmp
loope
fmul
call
push
xchg
push
(bad)
pop
or
(bad)
mov
inc
pop
cmp
inc
xchg
jmp
sub
arpl
ja
push
in
(bad)
mov
xchg
movs
movs
(bad)
mov
(bad)
in
ds
inc
movs
dec
add
or
ror
mov
jl
dec
sbb
shl
rcl
mov
movs
outs
aad
xchg
stc
call
xchg
adc
mov
ds
enter
fbstp
and
lock
aas
push
cmps
cmc
sub
mov
nop
push
xchg
xor
pop
cmp
add
cwde
arpl
in
sub
stc
push
aad
pusha
fwait
xchg
in
cmps
int3
test
addr16
mov
mov
jne
lds
cld
call
inc
xor
fsubr
sub
and
cs
sbb
not
mov
lahf
fidiv
inc
jo
push
inc
prefetch
xor
ins
inc
and
mov
loop
push
(bad)
loopne
and
rcr
and
inc
fld
jge
mov
pop
mov
outs
mov
fld
in
mov
sub
and
scas
jp
xchg
dec
das
push
imul
sbb
stos
rcl
xor
les
mov
fwait
cli
rcr
sbb
mov
pop
jo
data16
retf
mov
fs
jns
int
push
std
popa
sahf
fdivr
pop
adc
in
sar
or
xor
cmps
popf
outs
inc
stc
stos
out
and
test
xchg
(bad)
call
das
xchg
dec
inc
or
out
and
movs
mov
ja
test
cmp
jle
sub
outs
imul
jne
pop
dec
loop
loopne
call
jle
test
jno
xor
jl
loopne
fsubr
outs
jns
popf
ds
jg
(bad)
mov
adc
mov
xchg
pop
inc
cmp
(bad)
stos
aam
pop
jmp
inc
add
ds
push
rcr
and
addr16
xchg
sub
fiadd
scas
loope
jge
and
gs
adc
or
jl
sahf
(bad)
movs
inc
xchg
cmp
adc
mov
cmc
add
xor
into
shr
stos
iret
sahf
and
adc
push
lods
push
push
nop
movs
pop
rcr
sub
pop
sbb
push
dec
icebp
xlat
mov
cmovle
cmp
mov
jmp
call
movs
push
test
stos
repnz
aad
int
pop
test
dec
repz
out
add
pop
mov
cmps
adc
lea
add
ja
ja
jnp
mov
iret
xchg
or
inc
sahf
pop
mov
push
jp
jge
xchg
into
leave
call
push
inc
mov
pop
test
rcr
adc
and
call
jne
mov
int3
adc
cmp
cwde
movs
aad
mov
push
push
mov
iret
ins
cmp
adc
out
ins
clc
and
push
jb
mov
mov
pusha
mov
jmp
push
and
ficomp
jne
(bad)
icebp
add
sbb
ja
jg
popf
mov
retf
and
lock
loop
ss
(bad)
add
xor
mov
fst
cmps
mov
lods
xchg
mov
sar
sub
pop
xchg
jnp
enter
ret
jo
cdq
scas
xchg
push
sbb
outs
add
xchg
jns
movs
mov
and
ret
push
adc
arpl
and
out
mov
xlat
inc
lock
stc
cmps
inc
push
ds
retf
inc
add
out
test
inc
xor
xor
daa
push
mov
out
aas
add
jge
adc
sub
sbb
rcl
fist
aaa
cld
cmp
leave
(bad)
in
cmc
push
mov
sbb
in
in
dec
dec
jno
inc
mov
sbb
inc
icebp
cmps
push
lods
sbb
sub
in
pop
and
test
inc
lods
cld
pop
and
cmps
xchg
imul
out
lods
int
and
sub
outs
fld
xchg
ficomp
ret
popa
or
jae
sub
and
inc
(bad)
inc
(bad)
mov
lea
clc
push
test
jmp
jmp
push
mov
adc
aas
mov
test
cs
sbb
shr
adc
mov
cmp
leave
hlt
mov
or
push
dec
push
imul
pushf
shr
mov
cmps
ins
ficomp
inc
jo
sbb
push
pop
mov
mov
shl
iret
mov
out
xchg
pop
out
push
cmp
cld
shl
or
dec
cmovns
cmp
adc
mov
pop
cmp
test
sub
das
aaa
shl
inc
aaa
mov
pop
int3
inc
adc
(bad)
mov
sub
call
jmp
sbb
clc
sahf
dec
mov
cld
and
call
xchg
test
js
xlat
scas
aaa
adc
dec
stos
inc
mov
xchg
in
mov
and
lds
add
jg
arpl
cwde
adc
or
rcl
punpcklwd
sub
push
add
or
xor
test
add
xchg
jo
mov
ds
mov
inc
adc
das
clc
stos
call
push
or
stos
add
push
mov
shr
mov
call
pop
retf
movs
dec
jp
in
je
fistp
jo
push
push
push
ret
and
or
cmp
stc
pop
bound
adc
xor
xchg
sahf
mov
loop
pop
mov
cmps
leave
stos
adc
dec
mov
push
pextrw
mov
pop
and
jmp
(bad)
push
dec
js
xor
cmp
out
mov
lods
push
call
ret
cmp
jmp
mov
sub
mov
mov
sub
jbe
loopne
into
lds
retf
stos
call
bnd
loopne
push
add
xor
stos
push
push
mov
into
fs
unpckhps
xchg
cmp
push
std
out
in
cdq
scas
xchg
call
ss
iret
or
cmp
jmp
or
pop
add
xchg
mov
push
push
and
xor
pusha
daa
(bad)
and
push
inc
cmp
dec
adc
jmp
xor
pushf
adc
jmp
push
jge
jnp
push
dec
xchg
mov
mov
iret
sub
jmp
loope
(bad)
mov
cmp
je
and
xor
cmp
push
pop
and
lods
outs
neg
scas
sahf
fwait
xchg
xchg
scas
mov
cmp
cmp
mov
not
pop
cmc
or
mul
cdq
daa
test
mov
mov
ret
xor
add
imul
js
inc
xchg
jb
dec
mov
mov
call
rcl
push
pusha
repz
sub
in
pushf
jge
xchg
lea
outs
inc
mov
mov
icebp
rcr
add
xor
(bad)
mov
sbb
arpl
stos
stc
std
mov
pusha
dec
in
ins
test
mov
or
mov
mov
cdq
out
sub
loopne
and
cmp
imul
xchg
cmp
mov
or
arpl
ret
in
addr16
lods
xchg
push
pop
xlat
and
dec
mov
popa
sbb
repz
push
int3
aad
xor
test
int
sub
in
push
xor
ret
add
stos
xor
mov
pop
cmp
jp
push
retf
add
or
mov
rcr
outs
inc
in
and
mov
aam
(bad)
dec
xchg
add
mov
mov
mov
rcl
movs
loopne
push
js
add
jae
mov
out
lahf
test
js
mov
push
data16
out
jne
xchg
jb
or
add
mov
add
rcl
inc
sub
cmps
shl
sar
leave
cdq
cmps
out
pop
and
push
retf
or
pop
bound
adc
cmp
push
es
jbe
and
rol
cli
stc
xchg
pop
xor
adc
pop
arpl
inc
mov
jmp
imul
neg
into
(bad)
aad
pop
fcom
call
lock
push
ins
xchg
(bad)
int
push
dec
ficom
pusha
add
fcmovnb
retf
or
pop
xor
add
mov
sub
jmp
and
jbe
xor
das
ss
data16
mov
sti
inc
sub
mov
or
mov
jmp
or
in
xchg
sti
xchg
push
cmp
xchg
xor
test
loop
into
ins
jge
cmp
or
cdq
mov
call
add
loop
dec
cmp
jnp
cmp
test
mov
xlat
dec
mov
(bad)
adc
adc
ins
sbb
lods
sub
test
pop
iret
(bad)
lahf
xchg
out
mov
icebp
test
mov
arpl
cwde
cmps
es
mov
js
in
xchg
mov
add
push
mov
addr16
mov
mov
cmp
js
sub
mov
mov
jns
mov
(bad)
ins
xchg
sbb
and
xor
nop
aaa
je
stos
retf
mov
imul
fidiv
scas
stc
jmp
add
cmp
or
push
out
repnz
mov
test
movs
or
(bad)
popf
adc
popf
sbb
inc
sub
ds
inc
cmc
push
call
repz
inc
adc
add
jnp
iret
in
int
mov
stos
inc
(bad)
sub
and
push
or
mov
cmp
jge
push
in
mov
xchg
sub
icebp
popf
fwait
mov
jg
mov
in
dec
rcl
sub
in
sahf
push
cmp
fcomi
loope
pop
sahf
(bad)
stos
mov
ins
lods
int
mov
sahf
inc
fidiv
dec
pop
stc
rcl
sbb
fisttp
cwde
pop
(bad)
sub
or
retf
mov
pop
mov
cmps
test
xchg
mov
xchg
sbb
sub
pop
jg
mov
cmp
gs
(bad)
push
rcl
jle
mov
outs
mov
or
dec
popa
call
cmp
inc
lds
inc
and
loop
ins
rep
mov
pusha
cmp
(bad)
scas
fmul
shr
retf
es
cmovne
inc
pop
xor
mov
fild
nop
cmp
aam
clc
ins
not
(bad)
jo
fcmovnbe
jae
or
and
ror
adc
rcr
push
shl
jecxz
(bad)
push
bound
rol
pushw
adc
dec
lods
scas
dec
adc
jmp
loope
push
adc
repz
jmp
mov
push
adc
test
bnd
mov
das
jns
pop
imul
mov
jae
jne
xor
(bad)
int3
bound
xchg
mov
push
dec
cli
pushf
ret
mov
or
cmp
push
sbb
std
hlt
sub
pop
or
stos
sahf
mov
xor
mov
push
pop
mov
jno
std
jecxz
inc
imul
sbb
mov
call
dec
push
sahf
add
push
mov
mov
mov
adc
push
mov
jl
sub
pop
data16
int
pop
arpl
ss
add
lahf
sahf
cli
sub
cmp
jl
pop
dec
push
sub
popf
mov
xor
sub
popa
cmp
xor
cmp
ret
lds
loop
fsubr
mov
pop
rcl
(bad)
pushf
sub
or
int3
mov
stc
scas
xchg
push
dec
add
shr
int
int3
(bad)
mov
ss
push
ret
xchg
mov
loope
daa
or
adc
test
mov
push
sti
enter
rcl
push
add
ja
pop
loop
inc
adc
ficomp
sahf
and
cwde
push
call
mov
cmp
(bad)
mov
jecxz
jns
sahf
(bad)
in
cmc
pop
imul
aam
nop
push
aaa
mov
xor
(bad)
mov
nop
mov
js
xor
inc
fdivr
cwde
mov
mov
inc
inc
ins
dec
sahf
xchg
dec
fwait
push
or
cdq
fs
inc
cli
inc
sbb
mov
dec
clc
cld
popf
pop
rcl
punpcklbw
push
adc
jmp
add
push
aas
std
nop
loop
add
mov
push
mov
inc
mov
pop
into
retf
mov
jns
cmp
cmp
mov
call
or
ss
(bad)
jge
cmps
inc
repnz
xor
cli
xor
xlat
cmp
sbb
(bad)
xor
cwde
jo
dec
aaa
or
scas
loopne
pop
xchg
jge
lods
stc
jmp
mov
xchg
mov
mov
add
and
dec
outs
dec
sbb
test
push
enter
arpl
movs
cmps
xchg
ror
(bad)
jb
fdivrp
mov
aam
fimul
inc
jae
jp
sbb
fistp
xchg
(bad)
(bad)
out
cmps
fwait
pushf
mov
call
cmp
in
movs
mov
sbb
mov
jne
or
xor
mov
lock
jle
sahf
and
repnz
push
adc
xchg
test
mov
push
ss
jge
inc
xor
js
jle
ret
mov
xchg
mov
adc
imul
mov
mov
int3
bound
add
and
movs
mov
mov
jmp
mov
and
arpl
push
mov
out
and
push
sub
in
mov
mov
aam
nop
arpl
bound
mov
xchg
adc
ja
imul
push
lock
out
dec
adc
and
lock
sub
xor
push
xchg
jle
mov
stos
stc
in
out
scas
pop
in
cwde
arpl
outs
cdq
jp
inc
cli
ds
add
rdmsr
imul
jo
sbb
fcomi
cmp
ja
add
xchg
mov
mov
das
or
lahf
xchg
add
call
les
movs
push
(bad)
xchg
adc
pushf
lods
icebp
xchg
adc
stc
pusha
dec
das
add
lea
xor
ret
dec
nop
jle
aam
data16
call
mov
mov
mov
mov
fs
cwde
loope
out
loope
cmp
sbb
ja
or
addr16
repz
mov
jno
mov
mov
jnp
into
mov
fistp
ficom
sub
mov
out
imul
fwait
fwait
pusha
icebp
(bad)
xlat
and
call
lods
push
dec
lea
test
cmc
js
jnp
push
fimul
or
and
scas
mov
ins
xor
cmps
mov
cmp
in
mov
call
(bad)
xacquire
fcomp
sub
iret
push
scas
inc
jle
out
int3
jae
cmp
les
and
test
mov
pop
push
mov
adc
sti
jl
and
push
lock
xor
add
or
(bad)
jl
adc
inc
(bad)
mov
xchg
dec
push
repz
call
shrd
or
pop
fst
adc
cmp
pop
mov
cmp
int
(bad)
jl
add
dec
cmp
push
test
pushf
add
aad
mov
adc
cwde
test
(bad)
(bad)
cmp
jg
dec
dec
cmp
aam
jmp
jecxz
std
clc
mov
jne
outs
in
gs
push
add
xchg
adc
cwde
fisttp
lods
scas
dec
popa
xchg
aam
stos
and
cmp
(bad)
(bad)
aaa
jge
in
sbb
shr
mov
xchg
xor
cmc
xchg
pushf
dec
fistp
cld
or
mov
lock
mov
dec
jbe
inc
and
cmps
imul
out
lds
sub
lock
out
cmp
bound
dec
pop
jb
cli
jg
arpl
adc
test
movs
(bad)
sbb
(bad)
test
sub
mov
dec
adc
mov
or
sub
inc
mov
xor
call
mul
lds
dec
(bad)
mov
in
or
cmp
xchg
call
in
sub
ds
cli
scas
inc
inc
jae
jl
inc
push
adc
push
sub
xchg
jbe
jp
leave
outs
gs
pop
sub
int
cdq
mov
jbe
xchg
dec
retf
in
in
loopne
cwde
lock
lea
dec
ds
icebp
push
mov
aad
fisubr
or
test
(bad)
sub
or
sbb
sbb
sbb
push
aam
fdiv
nop
mov
push
lds
push
stos
ror
es
lsl
mov
fidiv
sar
jge
push
leave
rcr
std
pushf
or
mov
lods
hlt
fdivp
div
inc
arpl
pop
inc
or
popa
inc
dec
mov
push
and
push
dec
mov
and
add
call
cli
out
std
sbb
sbb
push
les
pusha
lods
in
pop
add
pop
dec
fldcw
out
xchg
fisub
fisttp
inc
inc
pusha
and
dec
gs
popa
scas
dec
xchg
loop
mov
outs
jbe
xchg
xlat
or
sbb
mov
out
stc
cmp
and
push
adc
sbb
adc
mov
jmp
pop
or
inc
cmp
dec
and
or
sahf
out
inc
loopne
adc
ret
push
popa
lods
xor
aam
mov
jns
stos
retf
sbb
mov
add
pushf
push
mov
ss
js
or
sbb
or
mov
pop
out
js
pop
gs
jle
mov
inc
pop
xchg
test
sbb
inc
imul
out
mov
rcl
mov
cmp
and
(bad)
movs
retf
pop
mov
sbb
pop
inc
sbb
sti
out
push
out
test
out
mov
mov
mov
shr
xchg
mov
push
sub
stos
sbb
adc
gs
pop
mov
outs
cmp
stos
cmps
sbb
fisub
inc
jp
xchg
mov
popf
in
mov
inc
adc
sbb
add
push
pop
nop
sub
mov
in
int3
ret
in
dec
cwde
xchg
ds
add
ror
jnp
dec
cmp
sbb
jmp
or
mov
jle
in
aaa
lahf
popa
mov
dec
retf
shr
mov
pop
aas
mov
ror
cmps
jbe
mov
inc
xchg
aas
mov
in
(bad)
outs
sbb
sub
and
adc
xor
je
sbb
pop
inc
clc
mov
fsub
call
in
mov
mov
loopne
mov
xchg
jmp
not
inc
adc
sbb
clc
xor
fscale
je
lock
jp
adc
mov
jbe
cmp
ss
mov
jge
lods
leave
dec
xor
mov
adc
cmp
test
jecxz
xchg
gs
cwde
aas
sub
mov
pusha
cmc
mov
inc
add
jmp
jmp
nop
cmp
or
rcr
and
pop
stc
jmp
jl
ror
or
cmps
or
pop
adc
dec
pop
aas
les
out
sub
inc
imul
push
sbb
dec
sti
xchg
pop
jae
add
lahf
fsubr
xchg
lods
add
adc
ja
test
push
and
fstp
dec
or
adc
push
mov
imul
out
mov
sub
test
add
sbb
inc
mov
and
loope
clc
pop
fs
inc
fst
inc
stos
mov
cmp
test
(bad)
pop
jmp
sub
fcomp
sbb
out
dec
mul
sub
push
in
mov
jmp
lea
jl
scas
bound
jl
loopne
dec
jmp
in
cmc
push
jne
mov
inc
rcl
sub
int3
scas
scas
cwde
pop
or
jecxz
cld
paddsb
adc
and
sbb
inc
call
mov
sbb
sub
add
adc
loope
jne
push
xchg
movs
jno
stos
xchg
out
dec
sub
shl
jle
push
movs
adc
jl
lahf
das
dec
push
add
add
cmc
leave
jb
clc
mov
sbb
out
pop
and
bound
add
js
mov
cmp
fsub
mov
pop
ds
(bad)
aas
jmp
loope
add
fwait
inc
pushf
sbb
or
je
das
push
mov
test
loop
int3
sub
dec
push
cmp
mov
scas
fbstp
xor
movs
pop
lds
and
les
stos
fild
ss
push
cmp
mov
jge
jb
ins
(bad)
lock
jb
sbb
test
sub
into
and
push
scas
data16
pop
enter
jne
clc
add
adc
mov
xor
(bad)
mov
not
in
imul
cmc
cdq
and
outs
xchg
cmp
mov
or
pop
aaa
addr16
shr
in
dec
ffree
in
imul
push
or
sub
fnstsw
mov
cld
mov
jl
sbb
dec
fnstenv
retf
jae
pop
scas
aam
bound
jl
push
pop
add
pop
cmp
lods
push
and
fistp
jbe
jp
ret
add
jns
mov
mov
mov
fcmovu
ror
or
sub
fdiv
xor
popf
or
iret
mov
push
pop
iret
inc
inc
aaa
xchg
adc
sub
dec
inc
and
sbb
sbb
lahf
sbb
mov
mov
xor
into
mov
rcr
in
inc
in
in
push
or
sub
push
push
mov
or
test
xchg
sahf
push
jg
jbe
enter
fwait
or
aad
jns
loop
push
cmps
iret
ficomp
inc
data16
add
gs
test
mov
ss
xor
fnsave
cmp
mov
pop
adc
sbb
xlat
(bad)
nop
adc
icebp
loope
fisttp
mov
rcr
scas
in
cmc
dec
in
stos
mov
jae
fstp
pop
fs
in
ins
pop
xchg
mov
in
cdq
inc
sbb
jl
std
lahf
neg
aas
shl
or
test
retf
ret
adc
jge
push
dec
popf
mov
xchg
mov
inc
mov
mov
and
(bad)
call
rcr
jno
ret
out
cdq
test
arpl
xchg
(bad)
mov
cs
and
in
dec
popa
lods
pand
xor
loopne
ds
add
cdq
(bad)
pop
mov
fmul
cs
inc
dec
mov
jo
aam
sbb
cli
cmps
hlt
xor
and
and
fild
dec
call
dec
div
fnsetpm(287
mov
push
sahf
sahf
outs
jne
or
movs
cmp
xchg
arpl
xchg
ins
mov
or
fsubr
cld
out
dec
int3
mov
inc
jge
mov
jecxz
adc
mov
shl
adc
cmp
imul
ins
sti
mov
sub
test
test
int3
sub
nop
and
pop
das
and
jmp
sub
xchg
jmp
leave
popf
jle
inc
scas
inc
pop
mov
cmp
mov
mov
mov
data16
jb
cmp
lea
cwde
out
int
sbb
push
imul
popf
scas
sbb
mov
loope
leave
pop
lods
xchg
call
jg
mov
retf
jnp
inc
ror
dec
imul
push
pop
adc
addr16
aam
cdq
xor
xchg
push
jne
cli
(bad)
pushf
jbe
shl
xor
outs
ret
adc
sar
pushf
in
mov
and
fisub
jle
loop
(bad)
into
xor
les
je
push
add
fld
ds
xor
je
mov
push
inc
dec
jecxz
bound
jmp
jge
test
idiv
xor
mov
lods
pop
sar
or
lds
stos
mov
push
dec
outs
jmp
sub
push
test
je
jl
mov
pop
(bad)
mov
sub
imul
pop
or
mov
lods
mov
cld
inc
gs
cmp
mov
xor
xchg
or
test
adc
mov
xlat
(bad)
nop
clc
add
fs
fwait
out
loop
stos
mov
outs
jbe
sbb
sbb
addr16
or
addr16
in
pop
stos
or
jae
retf
jge
jg
aas
pop
fistp
jb
sub
or
dec
fild
mov
dec
add
inc
int
jno
pop
ret
push
xlat
mov
sbb
inc
outs
cmp
scas
xchg
adc
xor
push
mov
add
inc
leave
stos
jne
movs
xchg
je
xor
or
out
fbstp
rcr
adc
xchg
movs
pop
and
je
mov
(bad)
ins
fucom
push
test
cmp
in
es
hlt
dec
mov
xchg
and
dec
into
lds
and
xchg
cmps
jb
shl
loope
dec
cwde
dec
mov
jno
xchg
popf
xchg
push
inc
js
fs
mov
jae
push
or
sti
and
imul
popa
rcl
or
bswap
repnz
push
fadd
repnz
scas
getsec
pop
loope
pusha
scas
or
push
pop
pop
sbb
cmp
scas
pop
sub
jg
test
ds
scas
xchg
cmp
and
add
push
push
mov
mov
data16
and
inc
dec
or
fs
add
in
sbb
jno
jo
cli
mov
lahf
test
xchg
push
jne
pop
xor
fnstsw
jmp
push
pop
mov
or
enter
(bad)
fs
out
imul
fsubr
or
lods
stos
ret
loopne
icebp
cmp
push
call
push
bound
mov
int
lahf
clc
push
or
(bad)
outs
out
adc
cdq
mov
fadd
(bad)
jne
pop
(bad)
out
imul
xor
add
jge
mov
(bad)
dec
cmp
mov
nop
cmp
pop
jge
inc
or
inc
jp
jae
cmp
inc
movs
call
xor
ins
jo
jae
fstp
cdq
call
sbb
mov
xchg
aas
xchg
pop
mov
inc
fiadd
cmp
xchg
mov
xor
in
push
call
dec
pop
pop
jae
and
icebp
mov
dec
jmp
mov
lahf
xor
loop
sub
xchg
hlt
rcl
jge
mov
(bad)
call
ins
sub
jmp
(bad)
aas
aaa
je
mov
in
or
iret
and
aam
jge
stos
call
jl
imul
cmp
cmp
dec
outs
push
ret
cmp
and
cmp
movs
xchg
popa
fdivr
jne
xchg
(bad)
cli
and
cwde
in
or
xor
ret
pop
xor
in
or
fdivr
pop
and
push
in
cmp
jl
jmp
icebp
mov
sub
addr16
(bad)
fwait
add
stc
sbb
(bad)
aaa
adc
(bad)
ins
ret
pop
fdivp
xchg
(bad)
test
dec
push
cmp
enter
rcl
adc
jle
or
test
mov
xchg
std
cmp
cmp
in
mov
push
scas
mov
sbb
or
mov
call
mov
and
adc
dec
pop
dec
pop
pop
loopne
sub
enter
dec
js
adc
pop
mov
cmp
add
xchg
add
mov
mov
not
sub
fninit
sbb
fdivr
aaa
mov
sub
push
xor
jns
push
inc
int3
jno
ds
push
xchg
mov
push
jg
xchg
cmps
push
and
je
jne
loope
ins
cmp
inc
cli
rcr
dec
into
test
jno
cmp
push
or
sbb
and
add
push
mov
fistp
jbe
sub
repz
leave
fidiv
mov
sub
dec
sub
imul
mov
pop
fadd
mov
or
pop
lds
je
sti
add
fldenv
dec
gs
loope
push
fstp
cdq
push
mov
pusha
imul
mov
faddp
mov
xchg
dec
cld
xchg
repnz
xor
(bad)
push
mov
xchg
fld
cmp
inc
push
adc
sub
sahf
rcl
stos
and
fnsave
sub
scas
retf
addr16
cwde
mov
mov
inc
push
(bad)
pop
inc
xchg
jle
xchg
jns
lock
inc
stos
les
lds
call
jb
mov
daa
cmps
pop
mov
fs
outs
stc
jae
add
xor
mov
loope
adc
cmp
arpl
or
mov
daa
cmc
push
stos
sub
dec
ins
jle
aad
jnp
ficom
cmp
cmps
push
retfw
scas
ins
hlt
aam
add
in
and
sbb
mov
out
mov
stos
in
loop
jmp
loope
test
mov
(bad)
adc
movs
stos
cwde
stc
pop
jle
in
jo
in
ret
mov
xchg
xor
fbld
je
pushf
sub
test
dec
test
ins
or
mov
add
cmp
inc
adc
fst
or
mov
jo
call
jne
arpl
add
ds
ins
call
mov
xchg
cmc
pop
arpl
jne
jmp
inc
mov
dec
jp
mov
adc
mov
cld
loop
aam
dec
pop
mov
or
lods
or
popa
aas
sbb
nop
test
sbb
push
cmp
mov
iret
dec
mov
mov
aaa
inc
push
jmp
jmp
(bad)
or
shr
es
call
push
sub
dec
jecxz
mov
jmp
in
cs
leave
rcr
pop
stos
inc
or
daa
jnp
mov
dec
xchg
push
and
call
ret
loope
mov
out
jmp
sbb
or
aas
lods
inc
add
xor
mov
(bad)
outs
xchg
movs
test
jns
ins
std
jno
cmp
(bad)
fcomip
pop
mov
call
lea
add
cmp
mov
mov
lods
fs
cmp
shl
leave
je
out
dec
into
sar
dec
daa
jb
mov
imul
mov
sbb
test
ss
push
jne
and
lahf
xor
push
(bad)
lods
mov
mov
outs
into
inc
fwait
xor
ins
stc
add
sub
and
jl
(bad)
rcl
sbb
add
movs
jge
gs
adc
or
fadd
int
jbe
sub
stos
push
(bad)
dec
outs
outs
inc
leave
jge
shl
mov
cld
mov
or
dec
sahf
sbb
dec
sti
repnz
add
jmp
sub
jmp
fld
inc
cmove
sub
imul
jbe
out
pop
mov
cmp
(bad)
das
cmp
dec
mov
push
and
push
(bad)
sbb
js
add
add
mov
xchg
pop
in
xchg
lock
xor
and
cld
stc
int3
popf
sub
mov
(bad)
aaa
jg
aam
enter
in
jle
(bad)
jbe
outs
das
scas
inc
nop
xchg
call
shl
cwde
ds
out
retf
out
pop
inc
pop
mov
jnp
js
xchg
pop
pusha
sbb
sbb
and
movs
ja
mov
cdq
mov
sbb
inc
(bad)
out
test
pop
sbb
pop
add
loopne
icebp
push
jae
clc
fidivr
cmp
test
arpl
add
jle
and
call
in
xchg
dec
(bad)
pop
cmp
cmp
test
in
fistp
test
xchg
fidivr
fistp
jp
dec
xchg
cmc
cmps
out
mov
test
in
xchg
inc
mov
sar
push
push
dec
add
mov
add
icebp
xor
not
mov
xor
das
sub
adc
push
add
push
orps
jmp
lahf
popf
pop
xchg
mov
into
ret
mov
fdiv
out
and
or
in
xchg
and
adc
sub
inc
loop
inc
out
xchg
inc
sub
ror
outs
push
jge
xchg
js
test
rol
pusha
mov
xchg
mov
sbb
sti
push
mov
and
xor
imul
mov
pop
iret
daa
and
cmp
adc
sub
hlt
loope
scas
or
adc
inc
inc
lea
movs
adc
pop
add
cwde
cmp
add
out
daa
pop
stos
ror
jp
imul
pop
sub
add
jmp
lods
aas
outs
push
dec
or
das
into
(bad)
mov
aam
aad
mov
sar
push
pop
mov
inc
jle
push
sub
inc
adc
sub
jns
jo
xchg
inc
pop
cld
nop
ret
daa
mul
movs
movs
mov
stos
mov
and
imul
sti
inc
cdq
lock
sbb
jns
adc
call
mov
and
adc
loopne
adc
push
mov
scas
repnz
mov
push
cli
in
dec
sub
ja
or
es
stos
daa
bound
imul
jnp
(bad)
jg
and
mov
in
cmp
push
cmp
mov
pop
xchg
jbe
push
sti
dec
add
in
add
xchg
and
sub
nop
mov
test
loope
push
cmp
lods
retf
jae
mov
stc
and
cmp
cmp
xchg
jp
xor
adc
adc
jo
fist
sbb
(bad)
and
test
add
aaa
dec
add
mov
push
push
sub
lds
mov
cmp
out
mov
lods
mov
or
xlat
(bad)
fist
jae
cmp
fbld
and
cmp
push
jecxz
pop
jmp
jmp
(bad)
jp
pusha
cmc
add
test
movs
pop
sbb
sub
cmps
sbb
pop
mov
pop
adc
mov
adc
mov
or
mov
in
dec
out
mov
pop
xlat
inc
inc
(bad)
xor
and
iret
or
test
(bad)
movs
js
imul
aad
shl
xor
mov
mov
movs
jb
(bad)
ja
add
dec
xor
lea
lock
mov
(bad)
xchg
jge
hlt
jl
test
loop
cld
pop
cmp
or
cdq
(bad)
fistp
test
mov
jge
mov
int
loope
add
cmp
mov
(bad)
out
movs
mov
adc
cs
push
bound
int
mov
xor
add
out
add
pop
dec
in
jg
sbb
les
cld
inc
push
sbb
cmp
rcr
push
xchg
leave
rol
int
sbb
or
jle
(bad)
sub
shr
fist
xchg
rcr
ins
jp
add
fwait
mov
(bad)
aas
sbb
pop
mov
mov
sub
jg
call
ds
mov
fsubrp
pushf
aaa
cmp
sbb
inc
cmp
(bad)
and
jo
cmp
test
movs
or
inc
add
pop
or
arpl
push
aad
dec
cwde
sbb
out
pop
push
fild
retf
sti
add
scas
cmp
add
push
dec
push
mov
out
and
xchg
inc
add
fdivr
sub
shl
test
mov
pop
fadd
jae
(bad)
lods
add
cmp
or
ret
pop
sar
adc
ret
repnz
mov
arpl
cmovbe
xor
out
cmp
movs
pusha
sbb
scas
mov
pop
(bad)
test
aas
sbb
push
sbb
add
pop
cwde
jbe
sub
scas
fidivr
out
add
or
add
clc
dec
xor
in
or
test
(bad)
ret
jb
repz
push
or
vpmovsqw
retf
dec
pop
cmp
push
jns
ss
mov
push
in
in
enter
je
gs
icebp
pop
push
ja
cmp
sub
jb
je
(bad)
mov
into
xchg
scas
leave
sahf
addr16
mov
cdq
sub
and
add
out
out
push
lahf
ja
jg
mov
leave
scas
add
pushf
movs
cmp
xchg
push
push
mov
jae
fimul
xor
mov
or
imul
mov
mov
(bad)
ret
out
dec
jo
cld
jmp
loopne
jmp
push
lods
or
dec
jmp
js
rol
sub
push
sbb
push
hlt
push
stc
pop
xor
mov
mov
icebp
int3
clc
icebp
imul
mov
jne
adc
loopne
cmp
sub
fiadd
daa
and
jno
xchg
mov
pushf
pusha
cwde
cli
mov
fimul
bound
or
add
mov
fs
sbb
push
sbb
xchg
imul
jb
xchg
add
push
sbb
xchg
mov
sub
stos
pop
call
sub
lods
(bad)
mov
push
sbb
mov
mov
cmp
(bad)
cmp
int
loope
(bad)
(bad)
push
cwde
les
fimul
rcl
rcl
jb
jae
push
pop
jbe
cmp
jl
cmp
in
ror
scas
jae
cmps
mov
dec
sub
push
mov
push
mov
leave
sub
(bad)
adc
je
sub
or
xchg
xchg
vandps
movs
mov
cmc
jl
cmps
sbb
addr16
pop
(bad)
inc
pop
push
scas
add
or
xchg
adc
xor
jno
iret
stc
aaa
int
adc
daa
loopne
imul
jnp
jp
(bad)
loop
lods
ret
out
jno
jno
(bad)
in
fld
cmp
ss
and
cdq
jmp
outs
jo
sahf
adc
fs
into
lods
arpl
cld
out
(bad)
(bad)
mov
mov
pop
xchg
sub
mov
not
stos
add
xor
(bad)
lea
cwde
sahf
int
int
mov
mov
add
mov
pop
inc
adc
and
movs
test
cmc
ins
fwait
mov
cld
jb
rcr
xchg
or
xchg
mov
cmp
jne
inc
rcr
cs
leave
repnz
sar
enter
aaa
rcr
mov
out
pop
mov
dec
dec
cmps
in
sbb
dec
sub
movs
cdq
sub
test
lods
xchg
pop
inc
inc
jle
pop
sbb
das
nop
aad
jae
scas
pusha
xchg
inc
add
pop
call
(bad)
in
or
fcom
push
test
sar
ds
dec
xor
outs
repz
mov
fst
mov
pop
inc
inc
dec
pop
inc
(bad)
and
mov
sar
dec
sbb
dec
test
xor
jmp
dec
dec
(bad)
or
xlat
(bad)
pop
cwde
mov
shr
nop
mov
inc
adc
or
enter
mov
mov
jmp
sub
inc
jnp
or
outs
jp
js
inc
dec
ret
arpl
add
mul
push
in
aas
xchg
sar
(bad)
sbb
cmp
xchg
fisttp
fldcw
xchg
sbb
adc
fimul
pop
xor
pop
popa
mov
cmp
int3
lock
aas
and
sti
retf
daa
rol
cs
aas
push
out
std
ins
add
pop
aas
shr
cmp
jp
pop
out
hlt
xor
mov
in
repnz
pop
js
jle
sahf
out
in
pop
neg
int3
gs
ss
mov
scas
scas
in
out
and
(bad)
xchg
dec
test
push
pop
das
pop
sub
hlt
and
(bad)
call
bnd
xchg
dec
scas
lea
and
pop
jg
movlps
add
retf
aad
jp
in
iret
jl
int
rol
jecxz
pop
movs
jl
sub
ficomp
jae
xor
pop
repnz
adc
dec
fisttp
dec
ins
dec
mov
jge
xlat
pop
dec
arpl
ss
neg
cmp
cmp
arpl
inc
xchg
jno
cli
xor
mov
pop
xchg
cmp
scas
fcom
vpmovzxwd
xchg
cld
pop
(bad)
ss
xor
adc
retf
push
xor
aaa
ss
aam
sbb
ret
scas
cs
and
add
sbb
sub
out
adc
push
test
ja
or
mov
mov
jmp
mov
and
jno
push
sbb
js
jl
push
cmp
xor
out
outs
inc
(bad)
retf
test
nop
ror
popf
sbb
mov
xor
inc
mov
xchg
sbb
push
shr
adc
inc
ja
not
jb
ret
aaa
std
fild
sahf
cli
push
mov
stos
cmps
cmp
dec
scas
add
not
pusha
fcomp
xor
popa
sbb
loope
lock
xlat
and
push
gs
cmp
(bad)
int3
call
sti
hlt
add
pop
lods
nop
or
ss
adc
xor
sbb
mov
loopne
inc
cwde
aam
(bad)
adc
cmps
leave
std
sbb
stc
mov
pop
mov
sub
movs
jbe
movs
push
pusha
fwait
jge
jns
xchg
xchg
sub
xbegin
fst
xchg
test
test
bound
ret
push
repz
xchg
stos
inc
xchg
and
add
daa
retf
sahf
std
aas
sub
and
add
call
mov
dec
arpl
imul
mov
sar
lods
cmp
aam
push
mov
xlat
int
xor
sub
jb
xchg
add
inc
(bad)
and
inc
outs
nop
adc
cdq
and
test
sub
loop
jne
cmp
addr16
cmp
xor
ins
(bad)
nop
mov
je
cld
adc
idiv
test
jbe
xor
ins
sub
pusha
push
clc
stos
adc
cmp
dec
pop
int
adc
frstor
dec
cmp
cmp
or
push
push
mov
test
jno
je
dec
sbb
dec
mov
cli
shr
or
jecxz
sub
out
add
xchg
adc
(bad)
jno
cli
adc
out
in
xchg
jg
mov
gs
fs
mov
mov
js
daa
and
popf
stos
cmps
fld
mov
leave
pop
dec
cmp
push
xor
cli
icebp
hlt
mov
xchg
xor
or
(bad)
dec
ja
ret
dec
fsubr
push
ins
sbb
shr
adc
aam
mov
test
push
ret
out
pop
add
add
inc
ja
dec
pop
mov
xchg
js
ja
cmc
push
in
sbb
or
mov
jae
bound
mov
mov
nop
daa
(bad)
addr16
into
int
mov
nop
jns
xchg
mov
and
js
in
push
cmp
aad
retf
cmp
dec
jmp
inc
sbb
rcl
sbb
sar
js
xor
mov
inc
mov
mov
fucom
out
inc
test
sub
mov
mov
aas
pop
adc
shl
add
cmps
mov
sti
inc
fwait
mov
rcl
sbb
sub
sub
gs
sahf
and
test
sub
push
add
add
mov
outs
scas
fmul
mov
jns
pop
repz
mov
fnstcw
xlat
cmp
shl
sub
popf
movs
sbb
imul
fadd
add
les
or
out
daa
(bad)
mov
test
rcl
outs
popf
scas
adc
ja
jae
pop
ror
cmp
popa
xchg
cld
jno
mov
loope
inc
inc
add
lahf
cmp
sti
and
ins
mov
repz
sub
arpl
repz
cmp
iret
inc
arpl
fisub
xor
ins
nop
imul
push
pop
mov
fld
cld
jge
adc
test
cmps
pop
scas
xchg
jge
mov
push
push
pop
js
inc
push
ins
push
cmp
das
lds
and
movsx
stos
cmc
mov
push
mov
daa
mov
mov
xor
and
fsub
cld
(bad)
mov
cmp
sub
stos
sub
ror
cmps
lods
mov
add
add
adc
cmp
sahf
call
xlat
fwait
add
mov
icebp
outs
dec
leave
bswap
rcl
xchg
cmps
dec
sbb
retf
shr
mov
into
test
xchg
bound
jb
pop
push
sub
div
es
pop
add
mov
lock
mov
inc
and
lea
pop
imul
bound
cli
ja
bound
int3
push
inc
(bad)
(bad)
mov
jae
(bad)
rcl
adc
imul
ret
dec
dec
pop
pop
(bad)
cmp
adc
xchg
dec
loope
daa
stos
mov
pop
data16
push
movs
jp
mov
pop
in
loop
loopne
bound
movs
stos
(bad)
adc
pop
inc
imul
dec
scas
xor
or
mov
sub
xchg
push
jl
and
stos
pop
das
mov
test
leave
push
scas
cld
push
and
stos
(bad)
adc
mov
push
ja
pop
(bad)
pop
imul
xchg
pop
pop
or
xchg
mov
jnp
mov
push
aas
loop
(bad)
fadd
outs
pop
test
daa
mov
mul
mov
jg
pusha
loop
mov
jne
cmp
and
pop
int
das
sahf
les
cmp
cmps
lock
pop
rol
dec
jl
adc
mov
jg
movs
bound
xor
test
jmp
dec
fistp
adc
dec
lds
push
pusha
aad
fistp
xor
xor
int
xchg
and
fdiv
xor
fs
ficomp
mov
int3
popa
shl
jae
hlt
(bad)
and
(bad)
into
repnz
adc
mov
xchg
push
push
sar
and
popa
shr
sub
push
jle
mov
std
cdq
mov
and
push
pushf
addr16
(bad)
xchg
xor
ins
scas
nop
cs
adc
cmp
xor
into
(bad)
shl
inc
jecxz
jnp
mov
and
jmp
mov
inc
test
xchg
mov
pop
into
push
xor
ja
call
xchg
jo
outs
(bad)
ret
stc
dec
fdiv
icebp
adc
cli
push
js
fidivr
xor
jo
xor
es
jg
cmps
push
int3
and
xor
push
or
in
ins
jo
rol
shl
or
sbb
sub
mov
mov
push
pop
xor
xor
push
or
add
mov
xchg
adc
dec
xor
sti
add
test
sar
xchg
mov
push
mov
fimul
ficomp
or
sub
sbb
in
xchg
inc
lods
inc
mov
movs
inc
xchg
cmc
inc
add
icebp
pop
push
pop
jbe
popa
cmp
retf
retw
xchg
fild
and
nop
cmp
rcl
outs
stc
call
or
sbb
mov
std
icebp
lea
bound
loopne
ret
outs
mov
fdivr
cpuid
dec
sbb
xor
xchg
je
sbb
test
push
scas
call
mov
sub
aam
stc
and
sub
fild
dec
ret
pop
repz
call
dec
clc
inc
mov
ja
test
enter
lahf
ror
and
push
sbb
call
aam
dec
pop
int
test
mov
in
aaa
push
mov
jecxz
das
ret
ret
dec
inc
mov
and
add
xor
daa
aas
cwde
sbb
add
xchg
inc
jo
retf
test
(bad)
fmul
add
rol
cmc
dec
adc
sbb
jge
clc
cmp
and
and
and
sahf
scas
and
push
sub
pop
cmp
jmp
dec
dec
jg
icebp
and
jg
test
add
push
push
cmps
mov
mov
pop
mov
jmp
inc
add
retf
mov
out
cld
inc
push
repnz
and
jnp
sldt
adc
jae
mov
push
cmp
call
sahf
cli
push
out
mov
xchg
cld
data16
inc
loopne
ja
push
inc
mov
nop
call
or
out
mov
fs
js
iret
mov
or
ja
scas
jmp
aaa
stos
lahf
or
data16
mov
mov
and
shr
mov
loop
fidivr
shl
gs
mov
std
test
aad
and
fistp
sbb
push
xchg
xor
(bad)
xor
leave
adc
jno
aad
cmp
pop
inc
in
in
ret
jne
lods
shl
xchg
pop
shl
mov
retf
cs
dec
push
aam
repnz
jmp
jno
push
(bad)
xor
lea
pushf
jbe
scas
nop
cmc
ret
pushf
movs
mov
cmp
retf
mov
rol
push
add
push
fcomp
add
scas
mov
adc
jo
jae
xchg
les
bound
mov
leave
sub
mov
(bad)
(bad)
inc
mov
jl
das
jmp
pushf
sub
adc
mov
das
rcr
or
jp
mov
pop
xor
xor
fsubr
xchg
arpl
fild
xor
out
inc
test
or
sub
(bad)
push
outs
into
and
add
or
cwde
js
outs
bound
ret
pusha
movs
or
shl
inc
or
es
aaa
fist
fs
push
scas
push
ret
daa
mov
mov
push
pop
dec
mov
mov
aad
pop
adc
cmp
sbb
xor
jg
pop
add
push
xchg
mov
mov
ins
(bad)
out
mov
test
jecxz
add
cld
cmp
adc
in
leave
or
(bad)
xchg
ds
ja
jmp
ins
sbb
lods
jae
mov
xchg
idiv
out
sbb
or
bound
(bad)
cwde
mov
or
adc
xor
sub
enter
inc
and
dec
cli
imul
xchg
sub
pop
fldl2t
mov
push
dec
dec
std
idiv
cmp
push
mov
sti
pop
mov
movs
mov
add
les
or
inc
xor
hlt
ss
fcmovu
lahf
stos
out
fwait
repz
and
hlt
mov
jg
sub
cmp
jb
or
(bad)
xchg
xchg
xchg
les
loop
jmp
fisub
add
jnp
and
(bad)
xor
cmc
pop
xor
mov
enter
mov
(bad)
loopne
neg
cmp
xchg
fsubr
mov
mov
sub
push
stos
push
icebp
dec
sar
sub
ret
dec
mov
loop
ret
mov
inc
or
mov
push
push
mov
in
mov
scas
pushf
push
cmps
addr16
push
pushf
jne
and
sub
or
sbb
pop
xchg
repz
cmp
popa
cmp
push
(bad)
pusha
adc
in
cmp
mov
ret
mov
dec
les
mov
or
ja
sahf
xor
out
nop
idiv
push
sub
xor
jns
ret
out
ja
inc
ja
loope
xor
jo
sbb
cs
cli
cmp
ins
sub
xchg
dec
adc
jne
retf
add
js
stc
pusha
push
loop
dec
mov
or
xchg
add
retf
ins
pop
cmp
push
in
add
and
out
out
and
(bad)
xchg
xchg
ret
loope
mov
scas
loope
std
shr
rol
outs
adc
mov
adc
int
xor
sub
inc
adc
inc
adc
or
scas
lods
dec
test
int
adc
leave
xor
or
cmp
jl
mov
push
sbb
fwait
sub
pop
out
sbb
mov
inc
sub
add
add
push
cli
movs
jl
mov
push
jmp
loope
and
xor
in
movs
mov
sub
jbe
icebp
ret
movs
mov
inc
leave
xchg
mov
(bad)
jle
cli
xchg
(bad)
mov
jne
cli
mov
loope
pop
add
xchg
pop
push
inc
push
aaa
pop
shr
shl
frstor
sbb
lock
jg
push
adc
fldcw
add
inc
mov
stos
mov
loop
ds
fsub
shl
jmp
cmp
jle
std
dec
test
sub
fistp
sbb
jmp
push
aas
imul
push
sbb
push
cmps
pop
dec
or
outs
push
fnsave
out
inc
mov
mov
aas
or
test
adc
inc
fdiv
das
jnp
retf
xor
inc
jo
test
and
inc
rcr
ins
jl
mov
cdq
aam
(bad)
mov
inc
sub
cmp
push
ret
xchg
imul
std
(bad)
jmp
sbb
data16
mov
pop
mov
iret
repz
push
popf
mov
aas
jg
inc
cmp
or
frstor
push
shl
mov
inc
cmc
shr
ja
mov
std
dec
sub
pop
jmp
mov
xor
stos
(bad)
sahf
jnp
sbb
sar
icebp
push
ficomp
mov
cmps
ss
aam
repnz
aas
mov
dec
dec
lods
add
addr16
pop
pop
into
fist
addr16
lock
imul
aas
and
lea
scas
ret
je
(bad)
xchg
xchg
xchg
pop
pop
outs
out
add
(bad)
ins
xor
add
adc
mov
(bad)
pop
lds
mov
ror
inc
and
mov
sti
sbb
es
ja
outs
and
xchg
pop
mov
repz
repnz
das
add
pop
or
xor
int3
daa
inc
pusha
mov
sbb
lods
sub
xor
and
pop
mov
retf
lods
imul
xor
(bad)
popa
stc
fsub
jne
fsub
pop
mov
add
xchg
dec
mov
pop
test
inc
dec
ja
retf
mov
pusha
cdq
dec
sbb
and
(bad)
imul
enter
or
movs
icebp
mov
js
mov
and
ins
or
pushf
mov
out
cmp
rol
into
int3
xor
adc
adc
ret
(bad)
sbb
add
xchg
or
push
mov
adc
mov
aas
sti
mov
fistp
sbb
scas
ins
icebp
out
jno
out
(bad)
mov
lods
movs
jns
mov
loopne
popf
xor
sbb
jmp
and
aas
jo
jne
xor
jmp
pop
jl
pop
out
add
retf
imul
sbb
dec
inc
and
xor
fadd
xlat
xchg
call
fsubr
jge
sbb
or
inc
hlt
mov
movs
movs
imul
std
or
xchg
dec
cmp
push
mov
and
es
add
jmp
dec
and
inc
rcl
ret
and
ret
jae
jecxz
sub
movs
mov
in
adc
in
popf
into
cs
movs
jne
fucomip
or
or
gs
jecxz
jbe
das
mov
or
xor
int
repnz
sbb
or
(bad)
mov
test
and
push
ss
mov
sar
or
je
xchg
mov
jno
mov
fs
cmps
jl
sub
mov
repz
cmps
mov
mov
sbb
test
add
mov
jnp
xchg
push
out
push
jmp
cmp
sbb
arpl
and
pop
(bad)
xchg
xor
xchg
pop
call
and
scas
aad
sub
inc
or
xchg
retf
jno
popf
int
mov
sti
lock
jecxz
sbb
and
xchg
pop
enter
ins
add
sahf
jae
int
inc
out
sub
imul
lahf
int3
and
mov
push
lods
mov
xchg
jno
jne
jo
enter
add
push
and
cmp
retf
adc
out
lods
add
add
cmp
mov
pusha
loopne
outs
imul
sbb
mov
mov
mov
sub
inc
add
pop
jge
mov
repnz
sti
xor
repnz
retf
repz
fcmovb
sbb
or
retf
cli
xchg
pop
lea
loop
fnsave
lahf
fwait
cld
push
dec
out
mov
cwde
sbb
idiv
ret
shr
mov
aad
hlt
lahf
imul
dec
jg
aas
aam
add
sbb
js
mov
mov
ret
xchg
in
pop
adc
and
scas
cmps
mov
ja
shl
sub
loope
clc
jge
or
movs
ss
outs
sub
jo
repnz
aaa
fiadd
cld
sub
xor
js
call
jb
or
pop
dec
popa
cld
sub
sub
es
outs
dec
lds
pop
lea
sub
iret
fcmovnbe
dec
stc
das
call
mov
call
pop
popa
jecxz
mov
pop
clc
mov
shl
cs
shl
je
add
pop
enter
xchg
mov
sub
in
xchg
xchg
lahf
add
or
std
movs
mov
popa
popf
lahf
lods
scas
fist
mov
mov
add
imul
xchg
in
outs
ret
jb
push
mov
or
cmp
xchg
jmp
ficom
test
sub
adc
mov
jnp
aam
mov
cld
fild
jecxz
and
repz
mov
fcom
test
mov
mov
mov
stc
push
sti
out
stc
enter
xor
leave
nop
ins
fimul
stos
sub
xor
or
mov
test
mov
rcl
bound
xor
out
cmp
add
sub
hlt
bound
(bad)
pop
mov
sub
mov
hlt
bound
jl
mov
jae
jg
and
or
add
dec
mov
icebp
mov
mov
cmp
test
hlt
dec
push
push
out
cwde
sub
fwait
pop
lds
dec
pop
sbb
mov
mov
sbb
add
fnstenv
mov
or
scas
bound
push
or
pop
jbe
jmp
push
sub
xor
mov
sub
xchg
stos
pop
inc
or
rol
ror
jg
pop
ss
scas
aam
jle
pusha
sub
jb
das
hlt
add
ret
les
lahf
jmp
outs
gs
jb
inc
mov
aaa
out
call
add
ss
jle
cld
outs
pushf
xor
mov
popa
fwait
test
clc
push
pop
pop
mov
loope
pop
out
fsubp
pop
int3
mov
or
dec
aaa
fisub
and
sti
cmp
ins
inc
xor
jo
cdq
out
mov
call
jle
sar
test
es
and
fsub
adc
mov
or
pushf
arpl
xchg
xchg
enter
imul
lods
out
fisub
add
mov
fidiv
scas
idiv
fdivr
mov
mov
imul
push
jmp
scas
popf
jge
adc
cli
mov
pop
inc
push
in
xchg
push
aas
and
shr
enter
call
loopne
cmps
and
imul
cmovle
adc
push
pop
addr16
adc
jl
and
out
pop
imul
jecxz
dec
mov
adc
adc
imul
jae
mov
mov
in
jge
repnz
rcr
sti
cld
adc
fild
mov
push
scas
cwd
fwait
xor
push
js
mov
push
aam
leave
jle
aam
or
test
loopne
jmp
jno
ffreep
ins
mov
adc
cwde
jnp
xor
inc
mov
inc
and
push
add
mov
std
ret
stos
push
in
cmps
or
mov
fdiv
inc
cmp
sbb
jecxz
xor
int
jmp
mov
mov
nop
pop
mov
jmp
or
adc
outs
les
cmp
jmp
outs
jo
xor
mov
push
fcomp
popa
or
xlat
push
mov
int3
jmp
arpl
push
add
mov
(bad)
int3
fsub
xchg
dec
fwait
sbb
ins
fs
jmp
dec
mov
clc
pushf
xchg
sub
add
cmp
mov
arpl
and
fsubr
stos
imul
adc
pusha
mov
xor
inc
scas
inc
movs
xchg
inc
rol
sbb
inc
and
dec
adc
inc
test
sar
loope
les
test
xor
rcl
movlps
ror
cli
leave
mov
push
push
xor
dec
or
xchg
cmp
rol
mov
rol
scas
jns
cmp
addr16
mov
ins
adc
jecxz
jmp
retf
pop
push
adc
add
xor
(bad)
mov
scas
jge
lds
cmp
xchg
lahf
leave
push
xlat
lock
sub
das
movs
out
push
xchg
stc
clc
mov
jecxz
cmp
cdq
stos
mov
fdivrp
icebp
or
pop
mov
(bad)
lock
push
cmps
and
adc
es
sub
mov
mov
sub
mov
mov
mov
mov
dec
xchg
jg
cwde
push
popa
mov
mov
test
je
cmp
imul
rep
pop
sub
sbb
adc
aam
inc
sub
pusha
jo
mov
iret
fldenv
add
push
(bad)
jl
dec
push
stos
in
enter
mov
xor
add
xchg
cld
cmp
jnp
je
loope
ficom
cmc
cmc
outs
js
sti
mov
jbe
sub
lods
xchg
les
dec
pop
lds
mov
push
adc
sub
pop
pop
cmp
xchg
pop
dec
dec
cmp
les
cmp
ins
js
out
in
and
setp
(bad)
pop
or
xchg
fcmovnb
dec
jo
popf
push
pop
popf
pushf
movs
mov
or
xchg
and
shl
ret
mov
pop
lods
cmps
inc
test
scas
cdq
inc
mov
pop
bound
(bad)
stos
mov
cmp
dec
cld
inc
aam
arpl
adc
in
enter
cmp
fdiv
dec
arpl
sbb
fcomip
shl
cmps
sti
fwait
push
pop
sub
inc
imul
or
push
xor
sbb
xor
or
mov
(bad)
cmps
pop
dec
add
adc
inc
aas
or
push
out
cmps
(bad)
hlt
pop
sub
call
mov
jle
cmp
dec
dec
push
add
imul
pop
ret
fcos
in
jmp
fcmovnb
jbe
jmp
retf
fnstsw
(bad)
call
shr
sub
ds
xchg
movs
xchg
dec
add
cmps
stos
sub
div
enter
xchg
loop
mov
mov
jg
aam
mov
aad
add
icebp
std
leave
dec
sbb
fcomi
mov
movs
pusha
mov
imul
or
push
mov
sbb
mov
xlat
push
pop
sbb
mov
sbb
pop
imul
pop
les
inc
pop
in
cmps
ret
outs
stc
in
js
xchg
fild
xor
xchg
mov
jno
and
and
xchg
retf
cwde
mov
fisttp
aaa
test
pop
dec
xor
adc
add
sti
pop
cs
ss
in
shl
xor
in
(bad)
call
or
imul
cmp
pop
add
xchg
loopne
xchg
sbb
(bad)
fisttp
fstp
inc
xchg
adc
nop
mov
sbb
loopne
add
sub
sar
pop
icebp
stc
or
add
cwde
xor
stos
xchg
pop
les
retf
in
push
not
aaa
xabort
imul
sbb
push
jmp
jl
and
cmp
das
iret
xor
arpl
out
(bad)
and
push
ds
test
pop
arpl
push
mov
nop
retf
inc
(bad)
or
push
and
movs
fs
hlt
jg
fcmovu
hlt
rcr
dec
aaa
leave
and
outs
arpl
jae
mov
movs
mov
repnz
movs
rcr
xor
call
sbb
mov
aas
inc
or
mov
dec
xlat
ds
outs
jae
xchg
out
in
retf
jle
inc
pop
dec
repz
push
addr16
hlt
ja
push
add
sbb
test
ja
daa
xchg
jns
bound
inc
push
js
sub
imul
test
inc
sub
sub
pop
js
xchg
pushf
dec
les
push
mov
pop
jp
retf
movs
xchg
mov
pop
daa
clc
paddd
jle
xor
ins
test
(bad)
inc
mov
pop
xor
push
adc
cmp
adc
dec
dec
lea
jbe
cmp
xchg
pop
in
pop
mov
fstp
cmp
push
jne
popa
sbb
in
popa
mov
shl
push
jecxz
sub
xor
pop
repz
retf
mov
inc
mov
sar
lock
jmp
sub
aad
xchg
int3
(bad)
inc
fisub
mov
push
pop
inc
jb
sub
ror
aam
(bad)
loopne
pop
add
je
xor
test
xchg
adc
mov
or
mov
sbb
sbb
push
mov
sbb
mov
mov
jecxz
in
sar
daa
sub
mov
cli
mov
or
pop
pushf
jnp
xor
cmp
inc
mov
mov
mov
ins
mov
xchg
icebp
xchg
push
imul
inc
test
push
add
les
xchg
lahf
jle
test
mov
sub
xor
and
push
(bad)
cdq
loope
mov
in
mov
inc
out
jbe
xchg
dec
fbstp
repz
jp
cmp
push
xor
ins
fnsetpm(287
imul
out
pop
aam
mov
dec
cdq
xchg
push
xchg
sub
push
xor
cmp
fsub
pop
xchg
mov
adc
mov
xlat
out
mov
cwde
(bad)
jmp
sbb
pusha
inc
mov
cmps
push
loop
fs
gs
and
mov
mov
cmp
cdq
mov
pop
jg
(bad)
test
inc
icebp
xchg
bound
sbb
dec
jno
mov
cmp
popf
xchg
mov
cmps
in
outs
pop
push
push
(bad)
iret
aad
icebp
mov
pop
gs
(bad)
cmp
rcl
cwde
mov
dec
ss
cmc
sahf
rcr
add
xor
dec
adc
dec
pushf
out
inc
adc
mov
(bad)
cmp
push
jo
push
dec
mov
rcr
je
mov
rcr
mov
sub
adc
fadd
dec
or
test
outs
fnstsw
pop
dec
xchg
jbe
add
lods
push
and
cmps
mov
jle
fdiv
push
adc
ror
cld
loope
push
xchg
push
stos
jl
mov
sub
jg
je
addr16
sub
rcr
cli
mov
pop
repnz
xchg
aas
lea
ret
pop
inc
mov
jmp
inc
stos
std
mov
ror
mov
mov
inc
mov
fcomp
fldenv
out
leave
jle
aaa
mov
jmp
cmp
hlt
add
sbb
xor
out
cmc
add
jo
test
add
stos
xchg
xor
xchg
xor
pop
or
push
inc
in
shl
add
jp
sbb
dec
fld
mov
ins
mov
jmp
fild
push
xor
loopne
dec
lahf
scas
fwait
arpl
mov
xlat
loope
loopne
sbb
and
and
inc
sub
inc
xchg
in
(bad)
fidivr
xchg
pop
movs
adc
pop
cmps
jns
ss
pop
icebp
xor
mov
cs
sub
add
arpl
fstp
retf
push
and
aam
cmp
pop
xchg
inc
sbb
ins
inc
push
push
sbb
fcomp
push
jae
cmp
ins
xchg
xor
rcl
fld
aas
cwde
std
xchg
idiv
sbb
push
xor
outs
aam
xchg
aaa
pushf
adc
mov
in
shl
xabort
out
dec
add
mov
popf
cmc
pusha
popf
jmp
lds
and
sub
movs
pop
jno
(bad)
loop
imul
push
aad
xchg
popf
(bad)
mov
shl
cld
jl
mov
jg
ret
rcr
arpl
fld
call
inc
cmp
mov
adc
(bad)
imul
or
call
sbb
pop
dec
cmp
(bad)
push
cmp
lods
mov
sub
push
call
or
cmp
push
mov
fstp
ret
mov
out
cmp
xor
inc
add
xlat
(bad)
stc
in
mov
in
psubsw
stc
xor
out
mov
dec
pop
std
retf
out
dec
aad
fcom
retf
push
repnz
add
ret
test
mov
adc
ficom
xchg
fiadd
test
popa
mov
jb
mov
cmp
push
not
mov
mov
xchg
push
add
gs
outs
popf
stos
xor
mov
mov
inc
in
fist
ret
sub
cs
jmp
inc
jne
lock
jecxz
popa
iret
hlt
mov
jle
lea
pop
je
add
mov
mov
xchg
(bad)
retf
add
lahf
and
fdivp
sub
outs
std
(bad)
(bad)
aad
or
mov
call
repz
adc
sbb
pop
add
cmp
mov
sub
cmp
add
fucom
mov
dec
or
push
cwde
loope
jge
adc
in
mov
sbb
xor
mov
jno
inc
dec
adc
push
inc
xor
add
cld
adc
mov
enter
out
cmp
inc
adc
ss
sbb
or
mov
xchg
dec
out
es
outs
or
jno
out
adc
aas
push
adc
pop
loop
rcl
pop
leave
mov
(bad)
jle
(bad)
lods
test
dec
mov
shl
inc
hlt
xchg
xchg
movs
mov
xchg
pop
pop
jb
or
mov
mov
push
fadd
daa
inc
stc
test
outs
xor
xchg
js
daa
sahf
pushf
inc
cs
or
data16
push
aam
cmc
test
inc
cmp
ret
stos
icebp
sbb
push
mov
and
cmc
imul
xchg
push
xchg
scas
test
cmp
xor
loope
add
movs
jle
into
test
in
int3
pop
or
mov
pop
sub
aas
mov
retf
neg
imul
mov
inc
pop
lds
shr
mov
add
ss
stc
pop
push
arpl
jecxz
add
xor
xchg
adc
push
adc
sub
xchg
ins
ja
jnp
(bad)
jmp
fimul
pop
mov
inc
shl
push
xchg
lock
push
xchg
and
or
mov
mov
loope
jmp
cmp
es
cmp
stc
mov
out
mov
jle
push
mov
loop
adc
clc
cmp
mov
clc
retf
jg
and
pop
sub
add
mov
mov
leave
ret
mov
fiadd
jmp
mov
pushf
retf
add
test
test
cs
mov
xor
mov
adc
inc
push
(bad)
nop
sti
(bad)
outs
inc
jno
(bad)
enter
pushf
ja
std
add
add
mov
sbb
mov
mov
movs
sbb
addr16
mov
bound
push
xchg
bound
jo
movs
mov
mov
sub
mov
mov
sub
out
inc
jmp
sbb
jmp
ins
xchg
loope
jle
xchg
nop
mov
mov
cmps
sub
cmps
ret
or
gs
xor
mov
sar
sbb
daa
push
gs
or
adc
fistp
pusha
mov
pop
test
mov
dec
jle
adc
adc
out
xor
(bad)
cmp
shl
test
push
test
dec
pop
mov
sahf
shr
cmp
and
clc
in
dec
repz
mov
push
jle
mov
push
xor
mov
jl
dec
and
xor
sub
jns
retf
and
mov
mov
sbb
nop
xchg
aad
out
mov
mov
movs
sbb
ror
pop
in
repz
repnz
(bad)
dec
adc
pop
in
mov
fdivr
push
arpl
retf
cmc
daa
nop
adc
cmps
mov
inc
fdivr
rol
es
sub
jb
stc
clc
mov
mov
enter
xchg
les
sbb
sti
jle
iret
(bad)
mov
xchg
fimul
or
xlat
mov
mov
icebp
mov
fmul
inc
jmp
es
leave
inc
inc
sub
pop
repz
jge
mov
fmul
call
aaa
pop
push
push
fmul
outs
nop
movs
jo
xchg
imul
adc
adc
scas
fld
ss
pushf
ds
popa
ss
jo
sbb
jno
inc
pop
add
mov
loopne
stc
aad
cmps
push
fcmovnu
sub
imul
mov
jmp
mov
fwait
jl
pop
shr
pop
clc
pop
pop
cmp
dec
xor
inc
ffree
imul
xor
movs
xchg
or
mov
cmp
(bad)
sti
adc
rol
and
icebp
stos
pop
int
jmp
clc
pushf
dec
pop
add
repz
fdivr
mov
adc
cmp
ror
cmp
cli
in
clc
scas
adc
sub
pop
mov
retf
faddp
add
xlat
xor
cld
(bad)
fsubr
clc
cmp
jp
(bad)
outs
enter
int3
dec
jmp
push
hlt
fsub
cld
leave
cmc
clc
pop
lods
mov
push
int3
cmp
xchg
popf
lahf
jg
loop
pop
fisttp
cmp
mov
rcl
push
ret
sub
popf
add
sub
inc
ret
call
and
lods
push
pop
repz
or
cmp
addr16
push
fnstcw
jnp
iret
inc
sbb
sti
and
jo
cwde
mov
jle
adc
mov
sti
cmps
nop
jo
inc
hlt
pop
add
sahf
push
inc
adc
sub
add
mov
inc
je
cmp
in
adc
out
lahf
mov
in
sbb
mov
ficom
ja
jg
sbb
and
out
ja
int
xchg
ja
int
inc
mov
aam
(bad)
push
push
xor
xchg
fcom
mov
cmc
test
shl
(bad)
pop
arpl
jge
call
enter
mov
arpl
mov
mov
shl
std
jno
fcmovne
jmp
xor
jmp
ret
mov
mov
mov
arpl
adc
or
cdq
idiv
stc
sbb
fst
sbb
xor
arpl
and
or
outs
addr16
mov
add
push
add
pop
aaa
inc
push
sbb
or
jecxz
mov
test
stos
add
and
idiv
out
sub
jge
push
mov
jmp
jnp
(bad)
clc
xlat
pop
sub
mov
in
add
pop
std
test
mov
or
mov
cmp
jg
cli
jle
sbb
es
cli
outs
pop
mov
push
enter
sub
sbb
and
int3
xor
in
je
push
mov
or
out
mov
cwde
sbb
mov
int
mov
or
leave
jg
loope
test
fcmovnbe
sub
sahf
repnz
jb
sbb
adc
out
pop
gs
dec
ss
mov
je
push
cdq
fimul
mov
icebp
sub
and
and
jmp
inc
sub
mov
adc
sbb
stc
mov
xchg
and
xor
aam
jge
js
dec
jns
dec
hlt
mov
sbb
sbb
call
sysret
inc
hlt
ret
int
push
pop
shr
and
lock
mov
push
mov
adc
push
aam
xchg
push
pop
ret
and
mov
push
mov
mov
outs
push
in
xchg
scas
out
add
aam
jle
adc
pop
or
jbe
stos
cdq
rol
les
add
sbb
arpl
xor
loope
push
pushf
or
rcr
test
jecxz
gs
lds
(bad)
pop
sbb
sbb
test
mov
or
mov
mov
push
lds
stos
sbb
mov
adc
arpl
cmc
adc
xor
cmp
and
scas
sbb
jb
mov
int3
mov
(bad)
mov
rcl
pop
push
sbb
dec
stos
pop
add
or
push
popf
ds
pop
and
aam
imul
add
pop
xchg
sbb
scas
mov
aas
jno
les
leave
or
push
std
jb
jae
fcmovb
pop
ins
sub
dec
ror
push
pop
push
(bad)
shr
xchg
dec
mov
mov
aad
dec
int
shr
xlat
mov
arpl
outs
sub
nop
jae
pop
pop
sbb
sbb
mov
call
call
cmps
mov
xrelease
lods
sub
inc
jp
inc
sub
jns
call
ficom
test
rcl
jmp
mov
loopne
pop
aas
adc
inc
mov
je
fcmovu
test
arpl
clc
frstor
icebp
movs
inc
test
cmp
or
jae
stc
mov
aas
lahf
lods
mov
fmul
cmp
add
test
mov
dec
xlat
sbb
inc
and
push
add
and
leave
push
or
sbb
out
ss
pop
adc
repz
cmp
lods
sub
sbb
test
and
and
shr
hlt
add
out
pop
nop
icebp
lock
loope
cmc
out
dec
shl
jns
push
mov
dec
(bad)
xlat
cli
leave
sar
dec
loop
mov
fadd
sbb
and
xor
sub
stc
movs
cmp
movs
xchg
mov
data16
movs
mov
iret
push
sub
xor
mov
mov
jo
fidivr
mov
dec
mov
popa
mov
(bad)
mov
xchg
fnstcw
mov
lock
das
or
mov
mov
mov
inc
pop
push
cmp
jae
stos
lods
sbb
inc
iret
dec
cmp
dec
(bad)
(bad)
xor
jbe
ss
cmp
(bad)
(bad)
out
pusha
nop
test
mov
jmp
xor
jp
push
mov
sahf
scas
cmp
sub
or
lahf
test
retf
lods
inc
call
les
jns
mov
xchg
push
push
call
ins
or
pop
cs
fsub
fmul
loopne
sbb
xchg
jne
mov
push
retf
jp
adc
cwde
popa
push
stos
jnp
pusha
sbb
and
(bad)
or
or
cli
shl
in
in
cdq
(bad)
mov
scas
and
or
or
stc
retf
aas
scas
aad
sub
and
dec
js
fs
jno
xor
outs
sti
les
mov
loopne
jecxz
or
fisub
gs
fdiv
bound
and
jo
dec
sbb
nop
retf
or
sbb
imul
pop
adc
xor
or
or
sbb
add
add
xor
or
adc
inc
xor
xor
push
and
sahf
mov
push
mov
rol
pop
xchg
out
add
jmp
cmp
dec
sub
arpl
sub
jae
das
jnp
inc
push
nop
and
and
xor
dec
fdivr
cmps
push
ret
jle
cmp
pop
in
mov
and
ffree
cmp
in
push
jne
dec
ins
mov
out
arpl
xor
test
xchg
jbe
pop
cmp
in
sbb
push
leave
je
or
movs
jle
xchg
xor
sbb
push
mov
push
mov
out
dec
sub
and
mov
jnp
rcl
xchg
sbb
mov
sbb
fadd
push
jae
scas
js
es
mov
pop
xchg
dec
iret
popa
fbstp
cdq
inc
scas
add
scas
out
cmc
xchg
les
in
fisub
pop
fiadd
arpl
mov
lds
test
mov
jl
mov
push
xchg
add
add
ror
and
xchg
add
into
fild
dec
aad
dec
cmp
or
es
sub
xor
mov
ins
add
push
test
dec
xchg
sub
sub
and
xchg
jle
rcr
inc
retf
and
out
adc
add
jno
ror
pop
cmp
sbb
in
enter
xor
xor
sbb
scas
fwait
mov
adc
call
push
and
mov
test
scas
loop
xchg
sub
cmpps
cmpxchg
in
rcl
mov
mov
mov
cmp
mov
out
mov
std
or
mov
and
shr
loope
push
fisttp
mov
or
pop
imul
movs
push
xchg
cmp
xchg
ds
test
xchg
dec
mov
idiv
mov
jae
in
mov
inc
xchg
sahf
mov
mul
fist
sahf
pop
popa
dec
cmp
jno
inc
cmp
or
ret
xchg
push
adc
(bad)
call
fdivp
sbb
xchg
daa
mov
cmp
cmp
daa
in
push
ret
jle
mov
dec
mov
test
aas
dec
sub
or
ja
push
imul
fidiv
pop
or
jmp
sbb
ret
and
sub
or
outs
sub
mov
fadd
jle
out
je
push
cdq
add
adc
dec
dec
pop
push
hlt
movs
push
mov
enter
pop
mov
xor
repnz
aas
inc
mov
pushw
cmp
cmp
in
test
stc
lds
sets
or
lods
imul
int
fld
sbb
pop
and
xor
lock
or
mov
or
shr
mov
mov
add
mov
retf
push
and
fwait
mov
push
ja
dec
retf
push
cld
jbe
pop
mov
xor
jnp
sub
je
pop
cmps
pop
lea
fmul
and
pusha
cmc
pop
mov
or
add
push
repz
not
ds
pushf
mov
cmp
loope
stos
je
jnp
les
mov
addr16
push
jl
call
cmp
(bad)
xor
je
cmp
repz
in
cmp
repnz
add
jle
xor
scas
pop
(bad)
out
dec
int3
repnz
pop
loope
icebp
dec
pusha
test
int3
cs
stc
xchg
push
test
dec
jle
fsub
inc
bound
rcr
cdq
pop
mov
mov
sub
mov
sbb
cmps
lock
aaa
push
popf
mov
sub
(bad)
jns
push
and
mov
pop
loope
sub
aad
pop
lahf
dec
or
jb
leave
ror
xchg
fsubr
stc
out
jae
adc
(bad)
(bad)
sbb
push
aas
xor
or
(bad)
call
fisttp
clc
push
stos
xor
adc
dec
mov
jno
sub
mov
inc
pop
lods
imul
cmp
cmp
sahf
jecxz
idiv
and
mov
enter
sbb
mov
in
test
jnp
mov
das
xor
out
in
jmp
ret
pop
test
imul
pop
mov
xor
pusha
inc
in
scas
call
out
and
sub
neg
push
pop
xor
mov
mov
adc
adc
xchg
adc
pop
hlt
je
push
mov
gs
fwait
iret
sbb
cmp
xchg
push
rcl
mov
mov
mov
mov
lock
(bad)
mov
mov
mov
lods
pop
mov
aad
dec
(bad)
pop
nop
out
sbb
push
ss
bound
pop
lods
ror
imul
repz
repz
xchg
and
and
lahf
mov
mov
push
cli
mov
ror
rcl
cmp
cmp
clc
mov
adc
cmps
push
enter
sahf
inc
jge
pop
cld
jnp
hlt
xor
clc
in
cmp
cld
pop
pop
outs
inc
jg
dec
mov
pop
pop
cmp
mov
loop
sbb
mov
pop
xacquire
leave
xor
stos
lds
mov
sbb
sub
add
xlat
add
mov
inc
daa
imul
les
test
int
lods
jbe
lahf
xchg
nop
repz
sbb
mov
movs
ret
add
push
pop
xchg
fimul
out
repz
adc
cdq
jno
push
mov
pop
mov
cmp
and
mov
xor
xchg
popa
in
adc
push
int3
(bad)
fild
es
pop
outs
jl
fwait
push
mov
scas
xchg
dec
aad
int
pop
sahf
retf
and
mov
and
cmp
jnp
mov
std
pop
std
mov
shl
fcom
adc
push
jge
gs
and
pop
cmp
add
xlat
dec
fadd
jb
bnd
jne
pop
sub
rcr
in
jge
stc
mov
mov
data16
pusha
and
into
xor
pop
rcr
icebp
jmp
or
ret
sbb
ror
sbb
outs
imul
mov
fisub
xchg
mov
imul
mov
cli
mov
cmp
mov
(bad)
scas
and
ins
fwait
or
hlt
cmps
rcr
into
xchg
popa
sub
mov
xlat
inc
jp
mov
pop
mov
inc
or
cmps
mov
fcom
ja
sbb
(bad)
cld
ds
rcr
push
out
pop
pop
adc
outs
fistp
mov
jmp
lods
adc
xlat
dec
sub
inc
jb
sti
popf
push
fild
dec
in
mov
jo
xchg
gs
or
scas
add
cdq
stos
mov
inc
mov
push
add
js
sub
cmp
push
movs
and
call
lahf
in
or
cmp
aam
mov
cmp
jbe
sub
outs
fdivr
inc
call
jp
sbb
adc
mov
(bad)
inc
xchg
xchg
push
ins
pop
xchg
push
mov
mov
dec
call
test
push
loope
test
mov
jns
adc
mov
mov
add
lds
call
ret
into
and
int3
xchg
mov
das
adc
add
icebp
cli
jmp
sub
mov
sbb
add
pop
jb
xchg
aad
sub
jo
dec
and
fbld
jbe
das
cld
int3
leave
mov
fwait
xor
adc
mov
push
(bad)
jmp
loop
jno
aas
mov
mov
dec
mov
push
repz
out
movs
jno
mov
push
and
mov
mov
push
es
xchg
dec
mov
cmc
fs
mov
jmp
lds
jecxz
mov
add
gs
xchg
add
mov
pop
cmp
cwde
and
idiv
jne
jg
std
arpl
or
mov
mov
pop
stos
ds
outs
sub
xchg
mov
jb
sub
xchg
or
not
stos
movs
daa
fs
push
push
gs
dec
mov
das
xchg
mov
inc
mov
or
pop
dec
or
adc
and
cmp
stos
add
(bad)
push
inc
mov
ja
push
fs
fdivp
outs
loop
shr
jae
popf
add
or
inc
jmp
xchg
adc
nop
xchg
sbb
add
dec
stos
xor
lock
xchg
lahf
jmp
xor
pop
pop
push
mov
jecxz
cmp
cld
jp
(bad)
fs
popa
jp
repz
cmp
pop
pop
jecxz
popa
add
sti
sbb
xchg
shr
pop
pop
es
shl
lds
icebp
add
push
imul
jmp
xlat
inc
(bad)
push
and
and
idiv
(bad)
and
adc
cwde
in
fwait
cmps
dec
nop
repz
sbb
inc
nop
popa
fistp
retf
out
add
sbb
push
dec
bound
ins
push
(bad)
test
pop
fs
outs
push
jge
fisttp
pop
call
and
ficomp
rcl
scas
add
xchg
movs
rcr
(bad)
dec
and
les
scas
mov
sub
lds
push
jns
adc
mov
dec
pop
lahf
dec
xchg
test
and
jg
jo
sbb
popa
xlat
jg
test
mov
dec
pop
xor
and
popa
mov
cmp
push
inc
ror
push
inc
mov
or
mov
xor
adc
into
mov
jle
jae
pushf
jo
add
xor
enter
in
and
mov
pop
ins
hlt
cmp
leave
hlt
push
int
stos
movs
jmp
call
in
lods
mov
inc
lock
daa
or
lea
push
mov
add
mov
xor
mov
push
call
xchg
mov
jo
outs
sub
sbb
daa
inc
bound
and
loopne
shl
pop
or
add
std
repz
es
and
out
cs
or
fistp
(bad)
mov
sbb
sbb
movs
inc
xor
shl
dec
cmc
push
faddp
gs
sbb
into
inc
mov
test
aas
xchg
fidivr
add
cmp
retf
loopne
or
dec
and
mov
repz
stos
sbb
adc
nop
cli
ds
addr16
and
push
nop
cmp
outs
sbb
arpl
inc
jae
xchg
xor
add
dec
ds
les
mov
cwde
sahf
pop
in
test
aas
jp
cmp
in
pop
add
aas
and
pop
test
push
dec
ins
sbb
(bad)
scas
mov
mov
mov
add
pminub
mov
cld
jns
jne
pop
push
push
cmp
inc
stos
bound
add
aaa
sbb
lahf
jp
in
test
xchg
inc
loope
(bad)
retf
int3
fimul
setae
sar
cwde
inc
and
mov
not
stc
shl
imul
punpckhwd
outs
ret
test
in
jo
scas
gs
movs
jle
xor
fs
int3
xor
movs
fstp
mov
pop
jle
push
and
xchg
mov
cmp
das
gs
jne
hlt
push
in
js
xchg
cmps
mov
fadd
cs
bound
int3
out
fldenv
dec
cmps
stos
or
retf
jae
out
jae
sbb
sahf
cmp
mov
jae
mov
ja
mov
or
pop
mov
repnz
adc
add
(bad)
ja
movs
and
pop
dec
out
pop
pushf
and
mov
retf
imul
add
cmc
xchg
loope
add
adc
adc
and
idiv
fsubr
out
fsubr
push
jns
or
ret
loope
(bad)
xchg
sti
jp
pop
mov
je
add
(bad)
cmp
hlt
(bad)
nop
mov
nop
leave
jo
clc
mov
imul
pop
idiv
in
adc
dec
xor
and
dec
cmps
aam
out
(bad)
mov
retf
sbb
jge
dec
sub
sub
int3
cmps
popa
aas
stos
aas
push
mov
out
xchg
std
push
dec
add
jno
pop
addr16
push
in
enter
fdivrp
mov
jnp
mov
push
sub
outs
out
cmp
cld
push
push
and
mov
lods
mul
int3
scas
inc
mov
adc
add
arpl
xlat
or
add
das
cmp
jno
dec
cli
sti
out
push
inc
jno
scas
mov
xchg
stc
dec
iret
(bad)
and
or
mov
int
inc
cmps
imul
test
or
inc
mov
inc
pop
cmp
push
pop
sub
fwait
(bad)
gs
call
iret
xchg
int3
xchg
test
mov
scas
and
into
cmp
je
or
sahf
jne
push
dec
push
and
push
inc
test
cdq
(bad)
xor
sub
sbb
xchg
retf
jo
mov
cmc
rcr
add
dec
popa
pop
xor
mov
dec
mov
gs
pop
int3
mov
pop
(bad)
ja
sbb
es
inc
sahf
dec
cli
xchg
adc
into
loopne
inc
dec
cld
dec
aaa
mov
sbb
pop
mov
test
mov
dec
mov
outs
aas
push
movs
adc
test
push
outs
dec
in
in
xlat
outs
inc
in
cmp
push
push
into
jmp
cmp
ds
movs
sbb
jno
fnstcw
int
mov
stos
sbb
cmps
mov
and
xor
fnstsw
iret
lods
in
pop
sti
cli
dec
(bad)
ficom
adc
or
fmul
call
sbb
cmp
sbb
xchg
sahf
xchg
fmul
push
pusha
in
xchg
sub
jmp
and
jmp
test
pop
push
retf
pop
jge
sbb
in
inc
scas
push
cmc
push
jmp
aas
cmps
arpl
mov
call
stos
sub
pushf
inc
leave
adc
pop
addr16
and
nop
xor
(bad)
mov
add
out
ret
push
jmp
loopne
sbb
and
les
xchg
mov
mov
sar
js
dec
bound
sbb
pop
or
scas
stc
dec
add
mov
cmp
cli
xchg
add
popf
mov
(bad)
mov
js
(bad)
rcl
sub
xchg
js
popf
ja
adc
jle
cmps
mov
sbb
rcl
call
retf
inc
sub
adc
push
rol
nop
(bad)
dec
add
pop
inc
xchg
mov
data16
jne
pop
cmp
and
pop
inc
arpl
and
dec
xchg
and
mov
call
cmc
push
(bad)
imul
in
jb
push
aad
std
cmps
enter
pop
frstor
je
loop
adc
pushf
push
push
mov
ins
out
outs
or
push
pusha
(bad)
mov
cwde
ja
cli
lds
add
xchg
out
sbb
push
adc
stos
jnp
aad
cld
lods
adc
xchg
xchg
clc
cmp
lods
scas
adc
sbb
lds
xchg
pop
and
mov
xchg
xchg
mov
das
popa
dec
inc
jb
lods
mov
push
cmp
jo
test
icebp
in
mov
out
repz
xor
and
xor
lea
loopne
or
mov
aam
outs
fidiv
jnp
cwde
cmps
fmul
mov
xor
fild
leave
jae
adc
je
adc
sub
jl
sbb
mov
imul
xor
dec
sbb
(bad)
ffreep
sbb
push
sbb
in
addr16
xchg
add
push
data16
mov
xchg
xor
ret
mov
jo
mov
movs
xor
mov
div
(bad)
jp
jmp
jo
mov
cmp
xor
test
dec
mov
push
test
call
push
repnz
push
fadd
xor
add
arpl
push
sub
aad
xor
ds
cmp
and
daa
add
test
call
sahf
rol
jge
and
cmp
ins
mov
in
cdq
add
push
mov
cwde
aas
fld
mov
and
jns
push
fstp
cmp
jl
popa
cmc
mov
pop
mov
imul
jo
es
shl
fsubp
xor
loope
cmps
dec
dec
cwde
push
add
mov
jecxz
imul
or
mov
adc
jp
es
arpl
push
jmp
xchg
loope
cmps
sbb
stc
xor
fsubr
sbb
mov
push
pop
das
pop
test
add
pop
sbb
retw
fdivrp
lock
ins
add
js
ret
and
stos
fwait
sub
sbb
mov
int
js
mov
les
jmp
cmp
jo
outs
cld
xchg
sub
bound
inc
adc
iret
dec
ins
dec
xor
add
add
pop
shl
cwde
pop
mov
or
or
cmps
cmps
nop
test
pop
call
xchg
idiv
pop
pop
aas
jne
movs
jecxz
cmp
adc
add
pop
mov
je
dec
inc
add
jl
les
ja
or
loopne
test
into
das
aaa
xchg
pop
(bad)
sub
pop
push
add
xor
data16
jne
fsub
add
int3
push
cmc
mov
pop
dec
test
mov
mov
nop
js
repz
sbb
cld
pop
mov
push
movs
shl
push
and
cmp
mov
and
ds
mov
shr
xchg
xchg
push
pop
scas
jge
add
cmps
cs
jb
pop
cmp
xor
mov
lods
lods
xor
sbb
mov
out
push
outs
sub
lock
push
mov
fstp
fucomip
loopne
push
xchg
xor
push
bound
aam
cli
push
push
jbe
mov
cmp
call
xor
imul
xor
(bad)
scas
xor
enter
push
in
popa
retf
je
mov
pop
ret
mov
pop
mov
mov
sahf
push
loopne
arpl
or
dec
sar
fisub
sub
mov
pop
or
xchg
jmp
push
inc
js
addr16
into
sti
push
imul
push
out
mov
movs
out
cmp
push
cmp
dec
xchg
pop
cmp
loop
jge
mul
xor
retf
sahf
dec
mov
adc
sub
in
xor
jle
add
aam
mov
or
adc
arpl
push
std
aam
into
mov
sahf
(bad)
cli
dec
mov
daa
dec
les
setbe
pushf
cwde
hlt
stos
mov
bound
inc
adc
call
cmp
(bad)
adc
fcomp
jmp
hlt
pop
pop
mov
xchg
mov
or
dec
hlt
shl
scas
pop
pop
mov
lods
lahf
inc
mov
sub
xor
or
jge
ret
test
enter
and
sbb
test
inc
scas
and
jl
sbb
outs
mov
in
cmc
loopne
mov
cmp
ja
repnz
sub
(bad)
not
xchg
div
mov
test
call
and
inc
mov
jnp
(bad)
ficomp
cmps
xor
fcmovnb
jmp
xchg
and
and
mov
stc
sahf
daa
and
(bad)
aam
push
mov
mov
rol
enter
mov
shr
or
mov
dec
popa
and
mov
mov
xor
lods
add
inc
mov
jnp
add
sbb
dec
pop
test
test
push
push
nop
out
(bad)
xchg
xchg
ins
sub
cmc
test
dec
lods
mov
add
pop
test
xor
push
inc
loop
(bad)
jmp
lahf
loope
ins
mov
mov
cmp
ret
mov
mov
mov
in
loope
mov
and
inc
lods
movs
out
inc
mov
fld
xor
nop
inc
push
sub
test
jo
shl
push
repnz
cli
inc
or
pushf
mov
push
xlat
aas
adc
adc
sub
jp
jbe
test
pop
jmp
ja
das
xchg
stos
cmp
inc
js
fucomi
jbe
sbb
or
repz
add
test
dec
inc
je
repnz
out
addr16
mov
sbb
cmp
imul
sti
adc
mov
mov
mov
dec
cmps
jns
jmp
mov
nop
and
popa
add
jnp
add
into
pop
push
push
pop
mov
jb
(bad)
lock
push
mov
test
scas
mov
or
mov
into
cdq
popf
es
fsubr
and
nop
xor
sbb
pop
inc
jecxz
add
out
adc
pop
shl
inc
or
aaa
scas
fbstp
jno
mov
add
int
and
in
and
add
movs
and
imul
sti
adc
cdq
ror
lods
scas
adc
mov
dec
xchg
in
dec
outs
jns
test
pop
or
out
pop
cs
popa
js
mov
mov
mov
push
test
scas
push
cmp
ret
pop
and
in
inc
popf
sub
xor
hlt
es
sub
jmp
fisub
js
pushf
push
sub
push
add
mov
jp
or
retf
out
xchg
jl
dec
sbb
arpl
std
cmps
out
mov
outs
loop
mov
cwde
mov
sub
sub
sar
repnz
jg
imul
fcomp
cmp
(bad)
into
loop
rcl
push
fucomp
inc
mov
ret
fsubrp
jne
push
mov
or
fisttp
or
mov
push
repz
fucomip
jl
pop
inc
or
out
loope
jmp
fs
fst
(bad)
stc
je
test
clc
jge
adc
repnz
and
call
adc
repnz
aad
adc
lds
or
ja
mov
imul
and
out
in
push
in
sbb
mov
cmp
imul
pop
dec
fwait
adc
and
mov
imul
cmp
sub
fmul
adc
jle
sub
push
out
xchg
cmp
lahf
cmp
mov
pop
sub
inc
mov
xchg
add
xchg
dec
cmp
and
and
dec
jne
sbb
adc
ins
and
push
push
jge
xchg
out
dec
or
aad
js
sbb
fld
jl
sub
add
push
lds
jno
sbb
pop
lods
xor
lahf
test
cmovge
push
pusha
enter
leave
inc
(bad)
pusha
gs
add
(bad)
scas
(bad)
popf
inc
test
dec
outs
mov
cmp
dec
push
xchg
jg
aad
lds
(bad)
mov
push
jg
fimul
mov
push
mov
popf
push
xchg
call
imul
ins
nop
inc
(bad)
mov
lock
xor
or
mov
add
fsubr
or
jge
repz
fidivr
fnstenv
push
sbb
sub
push
push
xchg
loop
adc
fsub
adc
pop
je
pop
pushf
pop
or
add
xchg
and
inc
je
popa
xchg
mov
movs
sub
push
daa
mov
mov
adc
icebp
js
ret
div
leave
or
aad
sti
cmp
inc
xchg
ret
cmp
or
cmps
jo
cdq
cmp
inc
or
jl
xchg
mov
ins
aas
sbb
xor
popf
cmp
inc
fld1
ja
xchg
out
adc
jbe
add
call
xchg
adc
outs
adc
xor
loopne
jmp
mov
pusha
scas
dec
xor
or
pop
adc
pop
mov
test
scas
test
hlt
fdiv
cmp
js
jg
pusha
inc
xchg
jmp
xlat
les
scas
push
sub
inc
mov
ret
xor
out
ror
adc
out
es
sub
or
ret
in
dec
aam
and
and
mov
cli
or
in
jle
mov
data16
add
iret
mov
outs
mov
aad
mov
(bad)
retf
mov
(bad)
daa
jae
and
pushf
sub
adc
gs
add
popf
into
stc
lahf
imul
lods
imul
(bad)
fisubr
sub
xchg
int
popf
push
push
xchg
daa
clc
or
leave
jp
call
cmp
fisttp
scas
add
sti
and
push
adc
pop
xchg
mov
fcmovnu
in
and
shl
fst
sbb
add
jb
mov
xchg
repnz
rol
out
mov
mov
rcl
pop
mov
test
mov
add
arpl
pop
cmp
lods
mov
les
outs
movs
fs
adc
enter
out
retf
inc
lahf
popf
aad
sub
in
adc
and
mov
sar
dec
xor
cmps
aam
mov
clc
fild
movs
aas
sti
int3
outs
or
retf
push
shr
inc
ds
and
inc
dec
stos
jmp
jmp
sbb
out
push
aas
xchg
loopne
cmp
sbb
mov
stos
call
fisubr
movs
pop
jmp
jmp
mul
adc
mov
push
cli
bound
jne
rcr
mov
call
dec
shl
mov
lods
xchg
call
sbb
mov
retf
cmc
cmp
adc
jno
pop
jae
lds
push
push
cdq
xor
push
and
test
push
adc
jl
sbb
push
add
mov
fwait
adc
sbb
shl
stos
(bad)
repz
scas
mov
pop
xor
pushf
xchg
push
jbe
jecxz
sub
aad
repz
pusha
jle
mov
cdq
xor
cdq
adc
xchg
rcl
sar
and
or
dec
shl
fucomi
cwde
shr
sub
jge
addr16
and
out
mov
(bad)
xor
or
and
lahf
sub
mov
or
push
pop
pop
and
(bad)
stos
cwde
repz
xchg
movs
daa
(bad)
into
lock
pop
add
in
and
loop
scas
jo
mov
ret
sub
sar
inc
mov
div
mov
mov
cmp
nop
adc
cs
jbe
mov
clc
gs
sub
fiadd
loopne
and
mov
adc
cmp
dec
das
fisub
int
cmp
cs
mov
mov
movs
or
pop
pop
inc
dec
aaa
test
jno
aaa
(bad)
jle
jb
mov
mov
mov
adc
dec
adc
shr
adc
sbb
test
or
cmp
(bad)
jnp
jne
push
sbb
idiv
(bad)
(bad)
mov
cmp
sub
sahf
lea
mov
adc
sbb
xor
popf
lds
sub
scas
out
cwde
pop
mov
ss
(bad)
jmp
mov
or
add
in
sub
push
outs
out
imul
mov
add
ret
jl
into
xchg
jg
and
ror
jae
add
fstp
cdq
adc
pop
pop
aam
push
test
cmp
loope
cmc
cmc
mov
push
jns
(bad)
jp
lock
mov
leave
add
leave
jle
loope
cmp
mov
retf
jno
xor
leave
(bad)
lock
sub
mov
mov
inc
in
out
sar
or
pavgb
jge
mov
fldcw
icebp
adc
mov
outs
xor
cmp
adc
int3
xor
sub
fstp
dec
inc
xchg
cli
or
add
and
out
dec
dec
fwait
out
rcl
push
push
ret
ins
pop
sub
dec
ins
jecxz
and
outs
test
push
outs
movs
call
cwde
in
(bad)
sti
stos
cmps
sbb
mov
push
cdq
push
pop
ret
inc
mov
inc
add
and
ss
xchg
shl
fdiv
(bad)
inc
es
mov
xchg
daa
int3
jg
xor
jmp
pop
mov
stos
push
outs
xchg
push
or
mov
xchg
and
(bad)
jmp
mov
pop
xchg
cld
repnz
test
test
pop
pop
add
mov
push
dec
jge
push
mov
lods
ins
jbe
lds
dec
sahf
es
add
test
(bad)
rcr
dec
mov
dec
mov
scas
pop
pop
inc
push
sub
mov
cld
adc
out
mov
outs
js
mov
rcl
movs
pushf
xor
sar
mov
pushf
ret
xlat
shl
dec
repz
and
bound
(bad)
imul
fdivr
or
outs
enter
std
test
ss
mov
fist
inc
pop
pop
mov
sbb
inc
push
fbld
(bad)
ins
lds
aam
jmp
pop
daa
jp
scas
cs
sbb
(bad)
jecxz
sub
test
shr
push
ja
jno
retf
xrelease
push
inc
ins
dec
call
ins
inc
dec
xchg
repz
mov
call
inc
adc
cmp
jae
jo
data16
sub
gs
retf
out
push
jp
dec
adc
lea
jbe
push
sub
aad
int3
sbb
xchg
adc
push
dec
in
pop
add
movs
xchg
or
enter
inc
imul
(bad)
scas
add
mov
jmp
fcom
push
adc
mov
inc
mov
pop
cmps
test
xor
and
bound
sahf
lods
cmp
or
cmp
data16
jnp
int3
pop
adc
or
push
mov
test
sub
mov
inc
aas
inc
fldcw
pop
rcl
fwait
jb
fcmove
xchg
mov
mov
(bad)
mov
mov
aam
cs
dec
pushf
js
js
movs
int
std
or
lds
movs
imul
ds
in
inc
addr16
sbb
imul
push
scas
sti
es
or
pop
sub
jecxz
mov
cli
aas
sbb
or
loope
fild
xor
xor
shl
pop
or
add
pop
or
sbb
ret
add
mov
mov
add
dec
adc
test
movs
push
mov
repz
jmp
lea
fnstsw
xchg
xchg
int
loopne
cmp
stos
ret
pop
dec
imul
test
mov
cmps
fiadd
neg
enter
test
int
cdq
fistp
or
cmp
inc
rcr
push
hlt
pop
ins
jo
popf
xchg
xlat
or
loopne
jle
push
pop
push
push
fcmovnu
repnz
fsub
dec
shr
cmp
(bad)
mov
cmp
dec
dec
xor
dec
jno
dec
xchg
das
xor
mov
pop
sahf
adc
or
mov
das
fiadd
out
jno
in
out
push
je
push
and
imul
lods
jle
push
add
aaa
push
push
or
jp
xor
psubw
sbb
and
mov
stos
fnstcw
and
sti
out
je
mov
pop
jg
mov
mov
push
pop
ss
sbb
xor
ja
jle
xchg
retf
xchg
call
cmp
rcr
in
sti
pop
xor
test
push
call
mov
jge
mov
call
push
ins
mov
cdq
das
xchg
mov
shl
scas
iret
cmp
fs
pop
lea
sti
fwait
push
mov
(bad)
retf
jno
xchg
xor
sub
ds
imul
in
lods
test
jae
mov
jl
mov
cmp
aad
mov
cs
sub
aam
mov
adc
ins
popa
mov
cmps
sbb
jae
out
mov
cmp
and
fild
outs
xor
mov
scas
add
(bad)
cdq
call
movs
mov
in
mov
cli
das
jg
mov
(bad)
test
clc
(bad)
data16
push
and
mov
pop
imul
dec
mov
and
jmp
retf
sub
loopne
daa
cmp
sbb
jbe
popf
inc
sub
adc
xchg
test
xor
xor
cwde
sub
stc
lahf
or
xlat
adc
push
cdq
or
push
jp
add
movs
call
pop
(bad)
fwait
es
fldcw
pop
aam
ja
call
xchg
xchg
cmps
cdq
sub
adc
mov
or
cmp
stos
xchg
xchg
xchg
pop
push
sbb
inc
cs
lock
xchg
loop
mov
sbb
mov
scas
and
add
fcom
jg
or
jbe
iret
sub
mov
dec
cmps
(bad)
dec
xchg
sub
pusha
mov
arpl
jg
fimul
mov
add
jmp
shl
inc
(bad)
or
pop
movs
xchg
scas
mov
push
mov
cli
and
ret
loope
mov
bound
mov
(bad)
xor
mov
jne
push
pop
adc
stc
test
popa
cdq
mov
cwde
jb
ficomp
xchg
xchg
cmp
icebp
xchg
sub
rcr
xor
cmp
push
add
xchg
dec
ins
ja
inc
mov
pop
data16
cmc
or
in
std
ins
std
add
xlat
adc
rcl
xchg
dec
lods
sub
movs
pop
mov
cmp
retf
ret
push
and
xchg
(bad)
adc
jo
rcl
push
dec
fld
les
aad
pusha
cld
jmp
add
push
jae
add
aad
cmp
int3
pop
sub
and
xchg
or
add
pop
inc
mov
xor
xchg
les
test
call
aaa
pushf
mov
and
out
xchg
dec
fimul
outs
daa
cmp
fld
imul
cmp
imul
push
loope
fist
sbb
retf
add
push
test
movs
fadd
inc
(bad)
sti
or
adc
(bad)
xchg
rcr
ja
add
mov
pop
and
popf
cmp
pop
jne
fstp
xchg
pop
cmp
test
clc
js
sbb
gs
sub
cmp
pop
rep
jmp
dec
ins
call
xor
(bad)
cmps
add
xchg
dec
inc
mov
add
cli
cs
pop
(bad)
daa
ret
mov
sub
xchg
xor
int3
add
dec
xor
mov
loop
mov
adc
and
(bad)
mov
and
cmp
pop
pusha
and
add
jmp
ror
ins
jno
test
dec
das
aad
mov
ds
(bad)
test
stos
icebp
xchg
mov
das
inc
(bad)
and
sub
pop
ins
pop
cwde
popf
fist
stc
xor
or
inc
jae
int
aas
lods
shl
lock
shl
sbb
ret
stos
and
mov
mov
repz
mov
sub
sub
loop
jl
cmp
cmc
(bad)
pop
aad
xchg
mov
movs
mov
loopne
mov
xchg
pop
or
inc
dec
gs
(bad)
out
fwait
inc
dec
iret
inc
pusha
ror
ret
xor
lock
mov
push
imul
sbb
xor
bound
mov
push
nop
int3
nop
pop
push
xor
fs
in
jae
sti
jg
dec
loopne
scas
sub
(bad)
call
stos
out
and
adc
pop
(bad)
push
sar
xor
leave
push
mov
sub
add
adc
out
mov
xchg
push
mov
les
sbb
xchg
aam
push
fld
(bad)
cs
add
inc
bound
aaa
xchg
idiv
adc
ja
sub
and
gs
shl
rcr
add
fstp
mov
mov
cmp
pop
lock
cmps
aam
nop
fist
ja
adc
in
and
test
lock
or
and
pop
and
fdivr
push
mov
lahf
xchg
adc
inc
je
movs
xchg
clc
neg
pop
jmp
std
inc
stos
hlt
outs
and
(bad)
xor
xchg
mov
bound
mov
in
retf
int3
mov
rcr
jae
(bad)
push
sub
fmulp
fnstsw
or
pop
retf
sbb
mov
mov
mov
shr
pop
in
jnp
inc
cwde
inc
callw
and
jne
push
mov
cwde
clc
xchg
jmp
jl
mov
xchg
mov
je
xchg
push
jl
dec
daa
xor
ror
cmp
je
loop
mov
shr
addr16
xor
cmps
stc
das
stc
icebp
mov
mov
pop
jle
xor
push
sbb
adc
js
mov
loopne
push
xor
repnz
cli
sar
inc
retf
fs
adc
xchg
pop
popf
fwait
les
mov
mov
enter
push
sbb
cmp
xchg
jp
sub
mul
dec
mov
outs
pop
sbb
jae
or
pop
jns
(bad)
std
imul
dec
mov
mov
daa
cmp
jge
push
out
sti
outs
mov
sbb
mov
mul
in
imul
dec
push
dec
jnp
test
and
mov
fwait
xchg
mov
xor
mov
sbb
xchg
jne
mov
xchg
out
sub
dec
xchg
popa
mov
dec
ds
das
in
bound
and
jg
sub
sub
jge
mov
test
ror
jns
fsub
cdq
pushf
xchg
in
hlt
stc
inc
dec
hlt
mov
inc
cmps
jl
push
cmp
shr
add
sbb
imul
jb
sub
dec
stos
cwde
jmp
xchg
push
mov
addr16
xor
arpl
xlat
xor
xchg
push
dec
pop
pop
xchg
aam
inc
mov
jo
mov
cmp
aam
pusha
fisub
fstp
push
dec
stc
cmp
and
push
jle
adc
ret
(bad)
icebp
call
push
jg
out
sub
pushf
or
in
aas
mov
pop
in
arpl
js
push
xchg
mov
pop
jp
mov
in
add
shr
popa
cmp
pop
nop
adc
ss
stos
dec
jo
jmp
sbb
test
adc
gs
(bad)
ds
ins
pop
loop
add
aas
mov
add
pop
jno
test
rol
iret
cld
les
aad
pop
cmp
xor
fwait
sahf
xor
shl
scas
rcl
jne
xchg
xor
sbb
xor
sbb
mov
dec
mov
fwait
and
popa
inc
pextrw
js
loopne
pop
lahf
outs
aaa
adc
inc
mov
dec
aam
add
add
pop
(bad)
mov
es
cmps
sbb
push
push
repz
pop
in
pop
jno
loop
data16
mov
rcr
mov
push
and
leave
pop
ret
add
fidiv
call
pop
shr
fwait
in
mov
xchg
inc
movs
rol
or
test
daa
test
cmp
std
(bad)
lahf
adc
sbb
mov
jmp
in
iret
pop
loope
xchg
cmp
mov
movs
fmul
push
sub
imul
dec
xchg
mov
inc
aam
cmp
pop
lods
jmp
mov
mov
pop
mov
jge
(bad)
mov
fwait
pushf
or
test
and
movs
inc
inc
dec
and
pop
pop
mov
mov
aam
into
inc
retf
rol
or
mov
sbb
jl
or
adc
mov
stos
dec
ror
aas
mov
call
add
push
mov
sbb
push
inc
jge
and
div
movs
and
sub
iret
sub
mov
adc
aaa
retf
mov
ja
jno
mov
mov
movs
sar
stc
aam
popa
arpl
adc
push
test
nop
dec
nop
jo
test
xlat
inc
aad
dec
cmp
popa
sbb
cmps
imul
pop
dec
cli
and
xlat
mov
inc
add
mov
push
xacquire
or
push
(bad)
cmp
inc
inc
mov
fadd
push
arpl
ss
sub
cli
icebp
lock
push
jecxz
or
sub
dec
or
cmp
and
out
mov
mov
sbb
inc
and
lock
aas
imul
stos
data16
pop
cmp
ret
es
stos
jmp
xchg
call
hlt
int
xor
or
push
xlat
and
les
mov
mov
and
pop
xchg
adc
mov
mov
jne
adc
gs
pop
xchg
imul
xchg
stos
dec
(bad)
mov
mov
mov
inc
retf
xor
pushf
sub
ds
cmp
pop
ret
mov
lods
push
push
sub
ins
enter
mov
mov
xchg
dec
sahf
mov
inc
xchg
or
jmp
push
data16
xor
inc
call
arpl
mov
mov
in
shr
imul
xchg
lds
dec
fs
xor
xchg
fisubr
test
add
aas
int
and
lahf
sbb
mov
in
pushf
mov
dec
into
ss
fisttp
mov
or
popf
dec
movs
push
xchg
adc
dec
loopne
xchg
add
js
lods
jo
sbb
sahf
push
xor
push
ror
ss
mov
mov
fst
retf
inc
popf
arpl
retf
jae
pop
xchg
jnp
push
jns
dec
adc
mov
stos
xor
xchg
and
xchg
mov
pop
mov
loopne
pop
pop
mov
xchg
add
cld
(bad)
dec
iret
aam
fist
mov
cdq
(bad)
(bad)
out
or
ret
lock
popa
retf
and
mov
mov
jle
idiv
imul
fisttp
xchg
sub
sbb
cmps
retf
call
and
imul
movs
push
xor
fbstp
dec
jne
xor
xchg
lock
rol
adc
or
repz
aad
aam
mov
xchg
dec
cld
xor
sbb
mov
mov
jmp
loop
mov
imul
aad
and
cmc
jle
sbb
pop
mov
fist
sub
sbb
cli
cmp
or
dec
jno
adc
mov
in
lahf
sbb
scas
or
mov
pop
loopne
adc
jno
test
mov
xor
pushf
mov
sti
or
inc
add
dec
and
pop
xchg
sahf
mov
imul
and
cmps
or
aad
aaa
retf
loope
or
pop
cmp
push
sbb
jl
aas
loope
mov
mov
(bad)
sti
xor
sub
fmul
hlt
cmps
lods
xor
scas
jle
push
out
mov
xchg
cmp
jmp
icebp
mov
(bad)
cld
dec
inc
mov
cmp
int
inc
jo
dec
push
rcl
stc
int
mov
jne
fild
ja
cmp
in
xor
jmp
call
mov
into
ret
inc
(bad)
cmp
mov
mov
jno
sbb
mov
enter
leave
mov
or
sub
or
and
jb
outs
in
mov
and
adc
mov
cmp
mov
cmp
call
mov
or
xchg
mov
adc
pop
sbb
scas
push
daa
push
and
pop
push
fdivr
ror
and
xor
popa
loop
pop
popa
rcr
shl
xchg
adc
ss
outs
or
sub
dec
sub
loope
cmp
push
inc
aam
rcl
sub
xchg
pop
int
adc
cmc
lahf
fdiv
xor
mov
fstp
jo
jb
cs
(bad)
mov
dec
lods
sbb
iret
push
pop
push
and
lds
enter
loop
cmp
push
mov
jb
mov
lds
movs
lahf
sbb
mov
jmp
jae
cmp
in
or
sbb
pop
mov
and
retf
push
mov
sbb
pop
mov
xchg
mov
pushf
dec
leave
icebp
jo
cmp
call
aam
jae
rol
fs
or
dec
(bad)
pop
arpl
add
mov
sahf
fisttp
mov
jmp
lock
jle
mov
adc
xor
jo
aaa
adc
fidivr
std
adc
sbb
ja
ficom
push
dec
retf
pop
gs
pusha
jmp
push
js
imul
sub
enter
cdq
push
inc
cli
rcr
and
or
int3
(bad)
mov
ds
add
das
ds
lods
or
gs
cdq
in
xlat
mov
add
cmp
and
mov
(bad)
dec
in
xor
jle
frstor
out
inc
clc
stos
push
stos
add
or
rcr
les
enter
in
lds
hlt
loop
fidivr
jns
hlt
mov
pop
sbb
sti
ffreep
mov
mov
mov
mov
xchg
fidiv
inc
xchg
mov
jl
dec
pushf
mov
mov
inc
shl
push
jae
imul
xor
xor
cmps
and
imul
jge
push
movs
adc
mov
inc
dec
data16
sbb
and
and
cwde
mov
jecxz
jbe
out
dec
cmps
lods
and
mov
es
iret
bound
jnp
out
stos
pop
and
repz
inc
mov
inc
xchg
and
or
movs
jo
lock
fwait
dec
mov
mov
dec
fmul
xchg
and
movs
pop
pop
xchg
out
ficomp
mov
outs
xchg
xlat
and
jle
stos
(bad)
and
mov
pop
sbb
fdivr
test
xchg
inc
call
cmp
ss
call
pop
mov
scas
push
sti
fwait
jnp
xchg
pop
xor
sbb
inc
and
and
clc
and
nop
adc
or
dec
push
and
sub
cmp
jmp
xor
fwait
(bad)
iret
mov
gs
cwde
and
adc
xor
outs
daa
mov
xor
push
inc
ss
ds
mov
popf
lods
pop
inc
jmp
xchg
es
add
push
je
retf
cmp
mov
aad
add
outs
cmp
inc
ret
mov
scas
push
icebp
jno
xor
sbb
mov
mov
xchg
das
call
mul
jbe
mov
fcmovbe
rcr
arpl
stos
dec
sbb
adc
test
in
cli
dec
(bad)
movs
add
push
mov
pop
cmps
dec
or
and
xlat
daa
lods
xlat
adc
cmp
nop
into
addr16
popf
into
adc
call
not
enter
pop
and
inc
ret
loop
call
loope
test
mov
sub
xchg
ret
push
xchg
sbb
mov
ds
into
call
daa
mov
xchg
movs
push
jmp
sbb
loop
and
lods
in
sti
(bad)
hlt
lds
mov
cmps
loopne
pop
xlat
mov
fiadd
dec
movs
mov
fdiv
push
test
js
jmp
mov
cld
or
test
ja
mov
in
lock
jno
cmps
ret
movs
push
inc
fidivr
out
pop
mov
test
in
rol
arpl
mov
dec
and
loopne
(bad)
add
pop
jbe
ja
imul
out
pop
loop
mov
out
cdq
cmp
scas
fdiv
fcom
and
xchg
inc
outs
(bad)
dec
test
mov
fimul
push
jl
sub
sbb
mov
ret
test
movs
inc
ds
fsubr
fwait
es
fistp
push
or
mov
les
mov
push
leave
xor
call
nop
jmp
sub
mov
fldl2e
push
push
and
pop
pop
nop
cli
scas
mov
and
adc
dec
out
adc
fisubr
icebp
mov
xchg
out
sub
stos
jmp
fdivr
dec
cmp
fwait
jecxz
jmp
pop
out
fst
(bad)
and
mov
test
mov
fidivr
ins
cs
repz
std
xchg
popf
popf
jb
mov
fdiv
mov
sbb
and
scas
xchg
xchg
jo
lea
rcr
xchg
cmp
outs
sub
pusha
rol
push
cmp
in
adc
out
int
sub
jnp
jmp
push
and
and
mov
stc
pop
sub
add
dec
test
(bad)
(bad)
adc
mov
add
sub
push
jg
aas
mov
test
sbb
rol
cmc
rcl
(bad)
call
loope
mov
cmp
xor
inc
retf
mov
arpl
dec
out
nop
xchg
jecxz
cli
ret
fdiv
aad
mov
(bad)
(bad)
xchg
push
push
or
or
(bad)
cli
or
ds
into
rol
xchg
ins
sbb
sti
cmp
cs
ja
pop
jge
mov
repz
repnz
jmp
dec
scas
pop
aas
movs
test
mov
retf
lds
mov
mov
xor
mov
sub
jno
xchg
aaa
pop
adc
dec
test
int
xlat
pop
test
fst
fcmovbe
jg
sub
push
adc
shl
gs
sbb
cmps
repnz
dec
retf
aam
(bad)
push
jl
cmc
scas
xlat
jb
dec
in
mov
aas
adc
push
fisttp
pop
jb
lods
adc
push
cmc
mov
push
gs
mov
mov
out
in
les
mov
sbb
push
ret
aad
lea
mov
xor
push
imul
idiv
stc
jno
inc
push
mov
xor
gs
fdiv
xchg
push
sbb
pusha
sbb
out
jns
push
fistp
mov
pushf
jno
sbb
test
mov
inc
ret
bound
repnz
gs
(bad)
mov
repz
jge
jl
gs
std
push
icebp
mov
fwait
lahf
sbb
sub
daa
addr16
add
sub
mov
fs
jmp
call
cmp
iret
stos
scas
(bad)
jb
add
jne
leave
sbb
jne
inc
dec
add
adc
cmp
pandn
fidiv
mov
(bad)
xor
adc
pop
dec
xor
push
fstp
xor
mov
pop
inc
retf
bound
jne
xchg
loope
mov
js
fbstp
pop
mov
add
push
xor
aam
test
jecxz
cmps
adc
inc
sbb
leave
fmul
stc
scas
sub
cmp
jne
lods
popa
add
mov
sbb
inc
jnp
loope
pop
imul
addr16
push
jp
idiv
mov
dec
pop
movs
std
add
adc
add
sbb
sbb
call
daa
push
cmps
repz
jmp
clts
xor
popa
mov
sbb
fwait
jl
or
sti
mov
jo
js
xchg
fidivr
sub
pop
fimul
cmps
mov
int3
mov
push
mov
sub
jge
arpl
and
jmp
inc
ja
outs
push
xchg
jne
std
or
sub
jns
push
call
sub
sahf
sub
inc
cmc
fistp
stos
mov
xor
push
adc
push
xchg
cmp
push
jne
div
movs
aas
ret
aas
jno
lods
dec
bound
cmp
(bad)
aam
jg
shl
mov
sets
ret
jae
push
pop
adc
mov
mov
and
cmp
aas
cmps
cmc
dec
xchg
or
jle
add
sbb
sbb
and
jl
aas
imul
pop
sbb
pop
enter
in
adc
fucomi
mov
test
fadd
popf
dec
loope
cmp
sar
test
xlat
lock
and
idiv
rol
call
inc
and
sbb
and
xchg
mov
jbe
push
imul
scas
ret
fsubr
out
inc
aas
pop
ds
mov
jnp
sbb
leave
hlt
sbb
ret
push
stos
sub
sub
outs
cmp
call
scas
push
cmps
aam
add
enter
cdq
pop
xor
dec
pop
hlt
push
test
mov
and
shl
pop
shr
sub
inc
movs
aaa
js
or
mov
es
or
push
push
data16
mov
push
xchg
out
loop
and
dec
or
xchg
test
into
(bad)
cli
dec
loope
add
mov
xor
mov
cmp
clc
jle
fnstsw
push
xor
call
sub
jo
test
add
pop
aam
add
(bad)
jmp
push
(bad)
mov
pushf
aas
shl
mov
sub
mov
push
xchg
push
stos
rcl
and
into
push
int3
les
cmp
adc
sub
in
pushf
(bad)
ins
jb
and
mov
dec
cmp
sub
mov
dec
push
adc
or
repz
inc
stc
push
push
ret
xor
test
mov
int3
mov
or
jmp
inc
push
pop
xor
jbe
pusha
adc
arpl
gs
push
adc
jnp
xchg
xchg
xchg
leave
pop
mov
adc
dec
(bad)
cld
xor
aaa
add
jge
fs
scas
popf
push
in
das
in
xlat
popf
push
sub
imul
movs
in
repnz
ret
(bad)
std
mov
or
jmp
popf
in
ins
adc
push
(bad)
sbb
adc
movs
out
sub
or
outs
xor
mov
push
nop
dec
(bad)
push
mov
shl
push
sub
cli
pop
sbb
push
jle
div
addr16
dec
lds
xor
call
sbb
jbe
inc
or
enter
dec
mov
cld
fdivr
add
adc
mov
adc
xor
cmp
mov
cmc
cmp
pop
fs
push
cmc
repnz
into
jo
nop
push
out
aaa
iret
sub
mov
hlt
jmp
scas
jns
sbb
or
adc
and
fimul
fisttp
repz
aas
imul
or
loop
ins
jno
add
sbb
pop
out
lods
push
adc
push
or
xlat
popf
mov
nop
jo
xor
mov
fnstsw
bound
lock
push
add
pop
push
(bad)
jge
pusha
push
jl
or
cmp
push
outs
stos
movs
(bad)
cmp
push
pop
(bad)
push
es
sbb
ja
mov
dec
jae
mov
and
push
pop
(bad)
jmp
cs
or
cmc
cmps
sub
icebp
xor
mov
xlat
mov
outs
out
das
dec
cmp
jge
push
repz
cmp
arpl
jns
cmp
push
fnstenv
lock
icebp
out
mov
push
add
xchg
ror
xor
inc
or
leave
xchg
mov
mov
std
(bad)
imul
bound
pop
mov
cdq
mov
fld
lods
leave
or
sub
hlt
mov
xchg
push
push
xchg
sbb
out
retf
clc
aad
push
(bad)
sbb
mov
jmp
jb
out
mov
(bad)
push
jle
pop
pushf
imul
dec
sub
sbb
add
addr16
mov
push
stos
scas
dec
inc
data16
rol
int3
sub
pushf
or
push
(bad)
push
xor
xlat
loopne
enter
sbb
ds
int
adc
sti
cmp
fmul
ins
out
jmp
sbb
pop
out
jae
call
rcl
add
cmp
jno
clc
lahf
je
xchg
and
lahf
push
mov
mov
push
outs
push
mov
inc
cdq
cmp
dec
repnz
call
shl
xor
cmps
adc
or
xor
add
push
bound
jp
push
jmp
adc
call
inc
jns
das
aam
xor
js
add
cmp
cli
pop
pmaxub
ss
inc
xrelease
idiv
mov
jle
sbb
mov
loopne
fcom
nop
in
scas
jge
shl
icebp
pushf
xchg
lods
ds
leave
retf
(bad)
loope
pop
int3
adc
push
nop
ins
mov
jge
pop
push
int3
ror
and
mov
cmp
mov
mov
and
fcmovnu
xchg
mov
stos
addr16
cmp
jle
test
mov
call
inc
ror
mov
repz
dec
push
ret
jnp
(bad)
jne
sbb
pushf
ret
ds
stc
or
mov
jns
mov
fsubr
cmp
adc
cmc
inc
inc
dec
pop
mov
lahf
sub
and
inc
xchg
pop
test
jecxz
sub
jge
out
movs
hlt
or
inc
sbb
mov
add
stc
add
retf
fst
fs
xor
aas
mov
int
jmp
fs
test
cmp
sbb
test
movs
adc
mov
out
in
retf
movs
and
movs
shr
push
ret
sbb
imul
cld
jmp
xor
inc
pushf
addr16
dec
xchg
or
stos
lahf
out
call
or
sbb
and
cdq
cmp
pushf
popf
inc
add
sbb
mov
call
cmp
and
(bad)
mov
or
cdq
in
adc
cmp
loopne
test
outs
or
int3
pop
cmc
xor
(bad)
aas
hlt
jo
mov
jecxz
cdq
push
pushf
retf
out
pop
push
add
sub
xor
dec
mov
mov
xor
add
jmp
dec
mov
jo
add
pop
or
fild
out
loope
sub
je
cmp
sbb
shl
jp
mov
push
sbb
enter
jns
fnsave
xor
inc
xchg
retf
push
int3
pop
and
xor
inc
mov
in
fnstsw
push
rol
fisub
arpl
add
div
adc
cmp
pop
pop
cmp
out
leave
xchg
cmc
rep
adc
sbb
outs
mov
aas
sbb
(bad)
les
xchg
pop
bound
cld
aad
push
cmp
jno
in
cmp
fimul
sysenter
and
(bad)
and
jle
shl
adc
jne
repnz
bound
dec
neg
sbb
rcl
or
shl
jp
xor
mov
imul
lods
xor
cli
or
jmp
mov
ins
nop
xor
aam
push
stos
xor
xchg
mov
fld
in
pop
imul
sbb
arpl
xchg
scas
cdq
or
push
push
es
out
add
or
ja
sbb
fstp
loope
leave
jmp
cmc
add
inc
std
push
stos
je
in
add
mov
or
(bad)
or
push
data16
pop
ja
ins
lods
ss
mov
adc
sub
aaa
fstp
cmc
and
inc
bsr
mov
dec
lods
fist
cmp
int3
adc
mov
and
mov
dec
cmp
push
adc
icebp
sub
pop
(bad)
cmp
mov
cmc
sbb
outs
pop
fcom
in
sbb
push
scas
jmp
xor
sub
cmp
add
cwde
xchg
push
sub
shl
enter
icebp
adc
xor
test
add
inc
dec
loopne
and
aad
and
mov
mov
ins
jp
mov
int
push
cmp
push
mov
in
ss
pop
jmp
pop
adc
mov
fsub
fisub
gs
sbb
mov
add
(bad)
dec
(bad)
retf
push
ret
into
fidiv
jbe
adc
cmp
xor
push
retf
stc
bt
dec
clc
loopne
mov
dec
push
adc
retf
(bad)
in
loope
js
or
mov
rol
(bad)
xor
mov
mov
loopne
in
ins
dec
add
je
adc
jp
jbe
and
lods
retf
inc
mov
adc
mov
test
int
arpl
pop
dec
pop
out
add
sti
mov
imul
call
mov
je
rcl
clc
pop
mov
sbb
repnz
not
mov
or
mov
pusha
cld
ss
xor
xchg
test
loop
xor
jmp
add
je
icebp
cmp
jge
xor
pop
jp
cs
fimul
sub
inc
in
test
add
outs
fidiv
cmp
push
mov
repz
pop
cmp
inc
or
add
add
test
sub
sub
pop
cmps
ret
int3
xor
sub
sbb
in
das
mov
pop
imul
loop
mov
jno
xor
mov
out
or
sahf
iret
dec
inc
data16
cmp
test
sbb
pop
into
sbb
add
dec
add
gs
or
jnp
or
push
shl
cs
mov
in
imul
fs
nop
xchg
fcom
pushf
(bad)
mov
int
hlt
push
rcr
cmp
add
aam
in
dec
fwait
add
sub
mov
fwait
clc
adc
mov
call
mov
cmp
jg
push
sbb
mov
push
push
ja
xor
xor
pop
or
imul
in
adc
es
sbb
push
inc
xor
and
cs
fild
inc
ins
or
mov
call
mov
mov
jg
call
mov
stos
aam
outs
les
jl
inc
ss
shl
add
icebp
enter
(bad)
jmp
push
ret
mov
xor
jle
arpl
jbe
ret
int
xchg
aam
inc
mov
push
jg
mov
in
popf
lods
test
pop
enter
cld
lahf
push
(bad)
mov
ds
enter
cmp
in
(bad)
sub
add
lock
push
push
cmp
dec
cli
cwde
push
mov
fadd
jno
add
nop
pop
retf
cmp
pop
jmp
test
add
es
test
jns
das
data16
lock
and
popf
aaa
cdq
xor
outs
out
cmc
push
or
sar
enter
cs
xchg
mov
fcom
leave
fs
pop
das
cmc
loop
ret
xchg
sar
test
nop
aam
dec
xor
and
sti
xchg
or
enter
inc
neg
paddw
adc
dec
sbb
jns
mov
dec
dec
icebp
xor
adc
outs
jns
jle
pop
leave
adc
(bad)
imul
faddp
call
mov
mov
out
movs
pop
dec
rcl
stos
ins
lods
mov
call
jnp
cmps
xor
aas
jns
(bad)
mov
shl
cmp
or
ret
sub
stos
add
sbb
aam
repz
pop
mov
mov
popa
add
lea
cdq
mov
push
inc
xchg
adc
fxch
mov
xor
cmp
push
jl
out
pop
inc
xor
dec
jbe
retf
mov
aam
xchg
jnp
xor
loopne
js
xchg
sbb
movs
jmp
pop
push
call
pop
loop
adc
push
rol
jb
xacquire
xchg
sbb
clc
and
jns
cdq
xor
cli
sub
(bad)
retf
out
loop
shl
div
dec
call
mov
mov
inc
pusha
jge
or
aaa
in
sub
sbb
add
add
sbb
fidivr
fs
push
xchg
xlat
xor
test
pushf
pop
(bad)
pop
(bad)
sub
xor
pshufw
push
xchg
mov
repnz
dec
or
cld
sbb
out
jb
jle
xor
(bad)
retf
sbb
fnstenv
jmp
outs
and
xor
inc
adc
aas
jmp
js
mov
imul
ds
not
inc
and
mov
ret
push
add
(bad)
test
xchg
pop
int
mov
pushf
stc
push
mov
mov
(bad)
or
loop
sub
int
test
inc
loop
ss
xor
je
aad
retf
pop
push
add
jmp
pop
scas
in
fs
stos
pop
call
cs
push
sete
jge
js
fld
dec
lock
pop
cwde
cmp
pop
xor
loop
dec
loope
cdq
or
aam
adc
cmp
inc
add
retf
jnp
scas
pusha
xchg
inc
dec
pop
ror
mov
nop
ss
int3
push
test
adc
inc
outs
fisubr
push
imul
outs
ss
push
mov
ss
gs
mov
ret
cmp
popa
adc
mov
adc
psrlq
aas
imul
lods
sub
jp
sub
sub
test
inc
mov
push
jmp
mov
xchg
(bad)
retf
cmp
fwait
je
mov
imul
mov
rol
stc
cmp
lahf
xchg
or
in
cmps
push
outs
cmp
xchg
int3
jb
adc
hlt
sbb
int3
xor
mov
fcomp
ins
ins
adc
int
xchg
jmp
neg
int3
fwait
mov
mov
movs
iret
mov
pusha
pop
lea
shl
and
and
lock
mov
(bad)
in
aaa
lahf
je
push
mov
out
loopne
jl
push
sub
cwde
cmp
dec
scas
jne
arpl
fadd
pusha
xor
add
fcom
aad
test
clc
(bad)
(bad)
retf
xor
retf
jb
xor
ins
stos
xlat
out
enter
rcl
cmps
jo
push
push
jge
scas
sub
pop
sub
movs
cmps
pop
cmp
imul
arpl
loope
js
sbb
jmp
inc
int
jle
pusha
js
movs
jmp
shl
pushf
lds
jb
mov
jae
in
cmp
add
fldenv
push
fidiv
mov
loopne
mov
nop
mov
mov
cwde
adc
mov
cmps
jns
imul
mov
jmp
arpl
scas
fstp
bound
sahf
and
lods
bound
popa
sub
or
dec
movs
sbb
ja
dec
mov
inc
mov
stos
in
add
sti
mov
mov
xchg
leave
inc
scas
out
iret
fdiv
lock
hlt
sub
mov
cwde
(bad)
and
lods
sahf
push
nop
das
call
or
push
fwait
shr
ins
sbb
imul
jae
push
jmp
push
(bad)
into
inc
xchg
aas
inc
xchg
mov
dec
jmp
lahf
mov
mov
cmp
(bad)
test
xor
sub
daa
inc
jmp
bound
ins
sbb
ficom
push
shl
xchg
jl
sub
cmp
push
gs
enter
jl
cdq
xchg
jp
int
push
fild
sar
outs
jno
adc
mov
sbb
xchg
jle
pushf
in
sub
loopne
pop
xchg
pop
mov
mov
jo
lods
sahf
(bad)
xchg
cmp
jbe
mov
xor
mov
push
js
test
jmp
cli
dec
mov
in
mov
in
or
lea
aam
and
inc
(bad)
sti
push
ret
es
jne
clc
cs
pop
dec
mov
outs
aad
aad
fsubr
int3
jmp
xchg
or
test
push
mov
mov
and
xchg
xlat
xchg
cmc
adc
out
das
inc
mov
and
out
mov
sbb
push
sub
retf
push
fdiv
repnz
jae
shr
leave
xchg
ja
(bad)
xor
mov
cld
in
jecxz
mov
ror
cmp
mov
xchg
xor
fstp
ret
(bad)
xchg
pop
fst
pop
mov
xchg
or
test
addr16
mov
jns
out
pop
repnz
mov
popa
(bad)
jg
mov
aaa
cli
ret
mov
in
add
sub
in
mov
xor
jae
xor
aas
jne
xchg
cmps
push
shl
xchg
sbb
mov
adc
push
loop
std
push
int3
inc
stos
adc
(bad)
mov
lods
test
out
mov
sub
cmp
xor
jle
adc
sub
sub
int
test
cmp
or
jne
outs
sbb
push
cmps
xlat
jnp
push
sub
mov
or
pop
push
jp
xor
stos
xor
xor
out
mov
fimul
push
mov
and
in
dec
pop
out
xor
aad
hlt
into
jmp
aas
pop
sub
jnp
lock
pop
xor
cmp
xor
inc
push
clc
xor
imul
jmp
jns
shl
jle
xlat
mov
jno
js
sbb
pop
retf
or
mov
and
or
mov
push
clc
pop
scas
jbe
fs
leave
adc
jle
scas
cmp
in
push
popf
adc
sbb
imul
popa
int3
out
out
xchg
xchg
xchg
cmp
enter
push
pop
adc
mov
xchg
lds
fs
mov
mov
xchg
inc
leave
and
sub
mov
shl
xor
push
popa
ins
int
xor
stc
cld
adc
es
inc
les
ja
mov
out
push
or
push
fmul
dec
pop
cmp
popa
pop
cli
lahf
fistp
loop
mov
adc
pop
push
add
aad
xchg
punpckhdq
push
xor
in
mov
push
and
popf
out
fidiv
lds
mov
push
rcl
mov
sub
sub
jecxz
or
fisttp
xor
cmp
xchg
aaa
jle
jo
not
mov
les
mov
mov
test
lods
mov
cdq
pop
or
adc
mov
nop
mov
std
or
dec
xchg
test
scas
and
mov
jns
mov
popf
cmp
push
push
xchg
pop
xor
mov
ror
push
push
pop
loope
call
lea
mov
arpl
adc
xor
adc
lea
push
dec
inc
(bad)
mov
in
icebp
dec
sub
retf
movs
test
loop
adc
cmc
sub
sub
inc
or
xchg
jl
call
outs
sbb
sahf
imul
gs
in
ret
sub
xchg
jge
add
mov
dec
(bad)
jb
mov
leave
imul
into
mov
sub
inc
jg
jecxz
lahf
int
test
jmp
adc
adc
(bad)
daa
xchg
fwait
scas
mov
lods
or
loopne
xlat
rcl
mov
fs
mov
test
iret
call
jnp
loop
(bad)
(bad)
mov
jge
lods
pusha
ja
mov
mov
in
add
push
sbb
fiadd
sbb
pop
enter
mov
ss
mov
cwde
sub
xchg
stos
pop
jbe
lahf
fst
xchg
ret
scas
pushf
rep
in
imul
mov
adc
fs
xchg
push
or
(bad)
mov
xor
shr
jle
inc
es
push
lds
xor
mov
mov
in
call
inc
test
jae
jmp
xchg
leave
mov
dec
cmp
inc
addr16
cmp
fmulp
push
xchg
and
push
(bad)
es
adc
(bad)
into
inc
sub
sub
rcr
arpl
dec
not
adc
(bad)
ror
xchg
push
loopne
pop
das
mov
retf
mov
push
adc
mov
cdq
daa
pop
frstor
nop
pop
dec
int3
xchg
adc
jecxz
(bad)
xchg
ffreep
bound
test
(bad)
enter
movs
mov
or
dec
mov
outs
xor
jmp
inc
xchg
rcr
pop
out
pop
and
data16
sbb
sbb
jmp
cmp
leave
push
imul
dec
add
xchg
sahf
movs
dec
jno
stos
repz
push
clc
adc
pop
out
dec
push
movzx
pop
out
jg
lahf
in
mov
fcom
dec
into
cmc
pop
fimul
inc
aaa
sbb
retf
or
push
arpl
mov
inc
call
dec
xor
jns
pop
dec
ins
mov
mov
mov
cmp
ja
pop
stc
xor
xor
xor
mov
inc
mov
inc
movs
xchg
jnp
adc
movs
lods
pop
stos
pusha
gs
les
mov
xchg
pop
dec
cmps
popa
jmp
cmp
push
cmps
ret
iret
and
fstp
xlat
jecxz
jno
test
lds
fidivr
aam
jae
sahf
xchg
ret
ret
neg
jge
rcl
inc
fdiv
xor
and
and
(bad)
arpl
sub
push
inc
xor
pop
and
movs
cmp
xor
dec
out
hlt
lods
cwde
xor
xor
int3
rcr
push
sub
inc
jns
fimul
cmp
pop
mov
test
or
lods
les
stc
jmp
pop
add
jmp
jb
mov
xchg
lods
(bad)
bound
sub
adc
idiv
inc
das
sub
push
clc
stos
mov
push
ret
(bad)
outs
aaa
outs
mov
jo
ins
js
retf
repnz
cdq
cmp
xor
sub
lock
call
sbb
imul
ins
sbb
or
repz
mov
ja
(bad)
addr16
sbb
outs
(bad)
adc
mov
xor
imul
push
mov
or
or
mov
ret
xchg
mov
int3
bound
or
cmova
sbb
push
inc
cmp
add
mov
cmp
dec
mov
sbb
or
pop
inc
pop
loop
movs
dec
or
cwde
xchg
mov
loop
bound
leave
inc
cdq
jge
pop
out
and
in
sub
jo
std
arpl
pop
sub
xor
sub
or
dec
repz
int3
dec
inc
popa
(bad)
adc
clc
(bad)
jae
mov
ficom
cmp
shl
rol
lods
call
jb
cmp
sbb
xchg
or
sbb
dec
sahf
push
lea
into
inc
add
jl
test
std
or
sbb
xchg
mov
mov
cmps
fnclex
js
mov
movs
jne
fidivr
and
push
push
jno
fcom
lahf
js
lods
or
icebp
push
sbb
sar
shl
mov
addr16
push
sbb
jns
ins
mov
inc
in
fcmovne
add
sti
adc
idiv
rcr
call
stos
seto
(bad)
xchg
icebp
sub
mov
js
xchg
jno
jge
jo
je
xlat
pop
stos
inc
inc
sub
xor
icebp
dec
and
push
xchg
push
aad
js
jg
dec
fnstcw
inc
retf
push
adc
pop
inc
lods
out
leave
je
rcr
(bad)
aad
imul
xlat
inc
retf
xchg
xchg
mov
into
xor
pop
dec
xor
mov
xor
(bad)
cmp
mov
inc
xchg
sub
mov
ss
xchg
xchg
fxch
cdq
or
xlat
dec
mov
sub
mov
sbb
dec
(bad)
mov
call
js
sti
ss
(bad)
lock
dec
je
sub
repnz
out
mov
mov
jb
jno
mov
sub
ror
cmp
inc
and
ins
in
push
sbb
dec
or
push
sub
out
pop
out
mov
js
mov
and
mov
cmp
push
leave
dec
inc
xchg
in
popf
cmp
daa
mov
adc
out
rol
aam
dec
loop
test
pop
dec
in
pop
cwde
repz
push
aam
push
cmp
jnp
adc
cmc
xchg
inc
hlt
jno
mov
lahf
jnp
enter
in
and
inc
pop
movs
jg
js
push
xor
jg
jae
loopne
pusha
(bad)
inc
pop
dec
(bad)
dec
movs
mov
sub
clc
fisubr
sbb
xchg
jns
inc
gs
je
cs
mov
(bad)
ja
adc
or
nop
daa
or
out
mov
jle
lds
fld
dec
in
add
daa
dec
jecxz
cmp
mov
pop
inc
jle
cld
xchg
mov
les
or
pop
push
inc
cmps
inc
jnp
xor
cmc
cdq
cmc
inc
fdiv
mov
(bad)
imul
fadd
adc
jo
aam
jbe
jo
jge
sbb
push
adc
popf
ins
(bad)
cmp
addr16
cli
retf
dec
hlt
jmp
mov
std
or
mov
add
imul
sbb
jmp
sub
xchg
(bad)
out
jg
xchg
xor
or
and
cmps
jns
aas
pushf
xchg
movs
dec
sub
xor
ror
jmp
mov
push
fnstenv
lods
rcl
lods
or
xor
popa
shr
push
shl
xor
fwait
jl
cmp
or
div
test
imul
pop
pop
jno
or
shl
sbb
jge
pop
call
mov
addr16
fld
movs
jns
(bad)
cwde
js
xlat
call
mov
pop
mov
je
mov
xchg
cmps
fiadd
and
ror
test
and
arpl
shl
cmp
jbe
(bad)
push
(bad)
sbb
lea
es
les
mov
mov
cli
aad
mov
mov
ins
inc
adc
adc
(bad)
imul
inc
out
jnp
lds
push
test
and
dec
push
jb
out
xor
nop
xchg
xchg
cdq
test
push
sbb
adc
pop
dec
pop
or
push
jne
shl
pop
clc
retf
push
mov
call
call
fs
xchg
inc
or
imul
sti
gs
hlt
icebp
hlt
jg
movs
jae
push
cmp
mov
jmp
push
test
out
daa
mov
jns
push
in
cwde
mov
lods
inc
pusha
adc
int3
rcl
mov
mov
js
adc
in
sbb
sub
add
and
inc
lahf
popf
js
push
or
(bad)
out
mov
or
xor
enter
push
dec
scas
or
in
sbb
mov
jbe
nop
inc
mov
xchg
mov
shl
mov
into
push
movs
mov
mov
xchg
das
ins
aam
ret
lea
fmul
jb
add
fsub
cmps
pop
mov
ud1
fild
cmp
mov
pop
(bad)
enter
test
pop
hlt
sar
inc
pop
call
lock
rcr
and
and
dec
add
in
and
adc
shr
push
inc
xchg
clc
mov
push
call
cs
push
lds
lods
inc
sbb
jne
jne
cmp
pop
fsub
ret
jbe
mov
sub
(bad)
jbe
rol
retf
fsub
adc
pop
pmullw
cmc
call
mov
leave
mov
push
lock
into
jno
mov
xchg
sub
rcl
xchg
xchg
jge
and
das
add
movs
inc
pop
ja
jg
fcmovnbe
call
sub
das
add
or
pushf
sub
retf
into
cli
fwait
or
push
push
push
movs
jp
std
out
stc
stc
sbb
push
lahf
mov
fs
ret
daa
ffree
mov
enter
mov
cdq
sub
sbb
pop
pop
push
dec
jmp
into
iret
leave
sbb
fidivr
xchg
cmp
cmp
jb
jle
xor
dec
out
popa
icebp
push
int3
fld
add
ins
out
adc
rol
into
sbb
or
xchg
push
loop
pop
inc
jno
cmc
cmp
loop
mov
cpuid
daa
shl
cmps
loop
dec
or
xchg
mov
mov
sar
xor
lea
and
mov
adc
xchg
pop
ins
lea
mov
push
xor
adc
cmp
in
push
xchg
in
fcom
ins
je
pushf
stos
mov
cmp
push
sub
loop
repnz
test
stos
shl
enter
mov
gs
and
mov
call
dec
sub
cmp
sub
and
xor
(bad)
cmp
stos
pop
pop
xor
mov
cmps
out
dec
and
mov
cmps
jg
mov
aas
push
mov
mov
das
xchg
and
into
out
xor
mov
mov
in
stc
call
adc
pop
cdq
arpl
xchg
aam
sub
in
jmp
int3
test
sti
mov
mov
rcr
sar
pop
movs
loop
dec
ins
out
imul
stos
jae
jmp
dec
lds
inc
pop
xor
arpl
jno
add
ret
(bad)
mov
dec
xchg
mov
jp
or
cmp
push
aam
xchg
ror
ds
mov
dec
cmp
ficom
fst
pop
push
scas
adc
daa
sbb
pop
push
push
rol
add
aaa
mov
fldcw
jge
adc
mov
call
inc
add
shl
neg
dec
ja
mov
mov
fdiv
pop
inc
popf
mov
push
sub
and
aas
fidivr
adc
dec
cmp
aad
and
retf
add
movs
das
jno
fild
fcom
or
push
adc
mov
mov
loopne
(bad)
pushf
mov
push
aad
retf
and
in
jmp
in
adc
and
mov
(bad)
lods
aas
mov
sar
xor
clc
imul
jmp
add
dec
idiv
ins
movs
mov
fsubr
test
ror
xor
sti
movs
mov
imul
jmp
push
jmp
(bad)
aam
(bad)
lods
pop
popa
and
mov
pop
push
jno
adc
push
pop
jge
mov
push
mov
inc
add
lahf
push
pushf
and
mov
jmp
inc
ja
out
push
movs
mov
rol
loopne
fucomi
outs
dec
ror
push
xchg
fidiv
pop
mov
sti
sub
xor
(bad)
adc
out
sbb
mov
test
inc
sub
adc
in
js
inc
inc
jbe
inc
sbb
pop
imul
sub
xchg
scas
fbld
sbb
push
rol
rcl
ins
cmp
shl
or
stos
popf
dec
movs
jb
push
cmp
xor
pop
js
xor
add
je
jb
inc
lock
xor
jg
loop
sbb
pop
sub
dec
jns
aam
mov
push
pop
xor
dec
dec
xchg
add
add
shr
pop
sar
cld
dec
sar
(bad)
fisubr
or
div
out
loop
pop
mov
test
add
and
pop
scas
lock
fwait
push
stos
mov
cli
jle
cli
cmp
inc
lea
jne
mov
jge
pop
jle
or
pusha
cmp
push
std
and
les
or
xor
cmp
mov
lahf
out
shl
cmp
pushf
xor
bound
cmp
ror
add
aaa
dec
sbb
and
aam
cmc
cmp
int
enter
push
(bad)
add
sub
data16
enter
cmps
add
inc
and
pop
in
push
adc
imul
fs
leave
jbe
mov
jecxz
ss
jecxz
pop
cmps
rol
idiv
mov
aaa
and
jbe
adc
out
jle
int
jg
hlt
sbb
xchg
mul
fimul
inc
sbb
ficom
imul
push
test
mov
pop
in
ficomp
dec
sub
cld
dec
xchg
sub
out
mov
sub
push
mov
aam
fucompp
sahf
add
cs
cmps
xchg
pop
sub
pop
xor
adc
addr16
out
nop
test
(bad)
push
sar
sbb
cmps
fdivr
mov
cmp
aas
xchg
std
fld
ds
xchg
cmp
push
cmp
in
aaa
jne
dec
xor
xchg
sbb
sbb
aaa
aaa
push
cmp
pop
and
pop
cmp
xchg
popf
mov
icebp
call
xchg
out
dec
add
daa
and
retf
dec
lods
add
push
inc
add
and
pop
mov
je
and
outs
stc
pop
inc
out
add
pop
or
push
shl
mov
fucom
mov
mov
xlat
popf
into
pushf
mov
cs
ss
ds
jecxz
fild
stos
jl
mov
mov
cmp
nop
not
dec
adc
popf
push
inc
retf
xor
sub
mov
xchg
fld
test
fld
dec
stc
imul
jl
enter
jb
mov
pusha
push
xchg
xchg
jnp
shl
xlat
test
in
sar
xchg
cmp
inc
dec
adc
xchg
jecxz
pop
push
(bad)
jg
or
xlat
xor
mov
or
and
ret
lods
iret
xchg
pop
cld
and
cmp
lods
popf
push
and
inc
inc
call
lock
enter
jne
lods
pusha
(bad)
std
sbb
jge
pop
sub
sar
mov
pusha
cmp
bound
pop
dec
arpl
jecxz
shl
leave
mov
fwait
xor
mov
cmp
mov
add
sar
sub
out
scas
fstp
test
add
xchg
rcl
jno
sbb
xor
mov
dec
xchg
inc
pop
fist
es
pop
inc
mov
bound
stos
cmp
mov
jbe
sub
out
push
mov
cmp
not
jl
mov
(bad)
in
sub
fcomp
ret
pop
jnp
fwait
fwait
pop
movs
adc
push
or
sbb
cmp
inc
mov
inc
add
dec
std
cli
repz
loope
xchg
mov
ds
dec
sub
adc
mov
xor
fs
stc
push
test
sub
or
xchg
push
mov
lahf
mov
xchg
fiadd
mov
cmp
add
aam
stos
mov
in
(bad)
dec
je
adc
fsubr
ret
lods
mov
add
or
sub
jmp
dec
sub
aad
cmp
mov
xor
mov
outs
cmps
push
in
test
(bad)
cmp
or
pop
popf
test
ficom
jmp
bnd
jne
cli
inc
dec
out
xor
outs
push
mov
lods
ss
mov
(bad)
shl
pop
cmp
or
sbb
xchg
call
ret
(bad)
push
push
jmp
mov
lahf
out
jmp
cmp
out
ret
dec
or
xlat
in
jo
mov
pop
lahf
lods
jbe
xor
lahf
pushf
push
out
pop
shl
in
int3
and
mov
repnz
mov
rcl
cmp
retf
das
mov
pop
ror
nop
aad
push
mov
sub
xchg
fsubp
and
mov
cmpxchg
sub
push
mov
call
xor
cs
loopne
jp
imul
es
pushf
sbb
sbb
cmps
xchg
leave
mov
(bad)
sahf
loope
mov
fnstenv
jg
fild
fucomip
jnp
sbb
inc
fldcw
xchg
mov
iret
ja
ja
jmp
cmp
adc
fisubr
sbb
sbb
aam
sub
fcomp
cwde
lock
lea
jne
pop
repnz
xor
mov
mov
cld
test
lahf
(bad)
test
inc
cdq
push
cdq
sub
sti
pop
adc
dec
cwde
xor
mov
push
adc
(bad)
pop
or
or
int3
push
xlat
push
mov
test
je
sbb
(bad)
pop
and
or
pop
ror
inc
cli
popf
js
sti
and
mov
xor
pushf
mov
push
lock
ficom
and
mov
andps
sub
hlt
mov
outs
in
lods
mov
imul
and
out
mov
adc
lods
retf
xor
mov
loop
dec
jno
jae
out
in
add
out
sbb
out
adc
xchg
bound
cmp
or
stos
adc
mov
sub
out
sbb
rcl
ror
mov
push
out
mov
and
xchg
push
xchg
(bad)
cld
cli
jle
loop
dec
dec
mov
ds
in
jp
mov
lods
mul
mov
xchg
test
or
imul
cmp
mov
fs
outs
out
adc
cmp
mov
lds
aad
daa
test
jno
sbb
lods
mov
xor
ret
push
cmp
cmovs
cmps
jl
test
push
enter
stos
mov
repnz
jae
cmps
or
xchg
xchg
jle
pop
shr
loope
inc
or
arpl
push
in
in
ss
ds
in
add
pop
mov
sbb
clc
cmp
call
aaa
dec
pop
(bad)
imul
mov
jne
ficom
mov
imul
rcl
mov
pop
sub
movs
cmps
outs
idiv
xor
std
popf
popf
and
aaa
fadd
sbb
sub
jb
sbb
(bad)
js
xchg
and
jl
push
fsubr
test
test
loop
or
mov
push
push
scas
pop
enter
gs
ret
jae
pop
loope
iret
inc
sbb
add
sbb
(bad)
std
je
jb
(bad)
fbstp
sar
and
push
popf
jmp
shr
sub
sbb
or
(bad)
sahf
push
aaa
adc
out
loop
push
and
leave
push
pop
(bad)
cmp
stos
xchg
sub
addr16
ss
add
repz
shl
(bad)
cmp
push
sbb
repz
inc
push
repz
sti
(bad)
sbb
adc
cmp
mov
je
add
das
push
or
iret
shl
xchg
sbb
dec
dec
cmp
jmp
das
xor
cmps
push
jae
bound
test
jle
mov
mov
pop
xchg
mov
sub
pop
pop
dec
and
imul
push
pusha
enter
movs
je
jmp
push
cli
cs
inc
pop
xchg
xchg
mov
adc
jnp
cmps
addr16
xchg
xchg
inc
js
push
out
stos
test
(bad)
xlat
push
mov
jmp
sub
adc
push
jne
ja
imul
cli
std
jge
loope
mov
cmp
ins
repnz
or
call
push
sub
pop
mov
pop
mov
mov
repnz
je
daa
mov
sub
test
dec
imul
jecxz
mov
outs
or
cmp
sub
icebp
adc
xchg
add
in
lea
pop
mov
dec
cdq
sub
xor
mov
sbb
movs
and
mov
or
cli
inc
xor
in
jmp
push
mov
push
fldcw
ss
inc
pusha
cmc
scas
fnstenv
jle
sahf
sbb
sbb
add
(bad)
jne
aaa
cmp
dec
jl
cmp
dec
dec
aas
or
push
ret
dec
shr
fnstcw
ret
scas
xor
(bad)
mov
add
push
pop
icebp
aam
paddsw
mov
outs
inc
mov
in
test
jo
push
pop
mov
lea
xchg
ss
adc
fwait
addr16
dec
pop
xchg
mov
or
or
mov
or
(bad)
mov
sbb
pusha
repz
(bad)
loop
mov
and
xor
sub
push
inc
mov
sub
aad
stos
aam
(bad)
and
sbb
sbb
sbb
loop
dec
les
faddp
mov
jge
mov
shl
lahf
jb
cld
adc
mul
retf
cmps
inc
lock
loopne
xchg
jns
imul
cmp
int
cdq
movs
pop
add
jnp
in
jmp
ins
or
or
mov
inc
or
loopne
icebp
jb
mov
rol
jecxz
jp
pop
adc
mov
(bad)
sti
ror
add
fidivr
mul
out
stc
sbb
adc
jmp
lahf
mov
pop
adc
adc
mov
dec
jns
and
aaa
xor
adc
sbb
push
out
cmp
push
cmp
sub
xor
pop
xor
test
push
test
ins
mov
outs
or
adc
jae
test
sti
lds
sahf
xchg
call
mov
mov
jmp
push
push
and
lods
lock
mov
mov
das
inc
sbb
es
jecxz
ja
jp
add
cmc
sub
inc
jno
fwait
ja
mov
dec
cmp
dec
cmp
add
(bad)
cmp
(bad)
inc
mov
cld
std
cs
movs
mov
jae
adc
push
mov
nop
call
bound
cmp
stos
fist
ret
xor
pop
push
fist
inc
addr16
sub
add
aam
adc
xor
mov
fwait
jns
dec
imul
mov
lahf
iret
push
sbb
sub
push
out
lea
ins
ds
mov
dec
imul
inc
jle
call
dec
std
dec
xchg
ss
(bad)
std
push
(bad)
movs
out
jmp
fcmovnb
leave
test
mov
test
inc
sub
xchg
pop
adc
sub
icebp
add
pop
loope
das
mov
enter
loop
stc
pop
jbe
dec
xchg
lods
fsubp
mov
int3
fidivr
sbb
mov
and
mov
add
stc
popf
es
mov
loop
popf
out
push
sub
push
cmps
inc
fbstp
sbb
pop
stos
sbb
mov
clc
arpl
xchg
and
jae
ds
fnstcw
mov
mov
or
xor
arpl
std
sbb
movs
inc
ins
(bad)
clc
adc
xor
cmps
enter
push
adc
loopne
pop
stc
ins
sub
fldcw
shl
sbb
dec
nop
test
call
fmul
clc
fisubr
mov
inc
repnz
(bad)
fdivr
mov
jmp
shl
jl
dec
and
lea
lahf
outs
mov
xor
adc
popa
inc
xor
lods
xor
cwde
lods
push
cli
jnp
push
dec
and
sub
xlat
ror
clc
cmp
pop
in
jbe
rol
push
gs
cmp
cmp
xchg
mov
mov
dec
xchg
outs
es
nop
(bad)
jne
jne
sbb
mov
in
dec
adc
xlat
sub
sub
loop
push
xor
arpl
mov
adc
mov
jp
xor
stos
xor
shr
enter
dec
jbe
cdq
call
mov
adc
fxch
aaa
xchg
inc
and
retf
mov
in
xor
push
(bad)
add
jg
xor
cs
and
es
mov
std
int
push
push
gs
cmp
out
ret
sti
stc
push
push
and
imul
movs
push
les
and
xor
fucomp
fdiv
int3
mov
mov
fwait
rol
mov
push
jmp
lods
pop
xor
mov
or
stos
(bad)
push
ret
ds
mov
icebp
aaa
retf
stos
push
stc
xchg
adc
cmc
in
neg
shl
dec
cmp
and
popf
and
xor
xchg
movs
cmp
outs
and
jecxz
mov
movs
push
cmp
ins
sub
mov
and
out
std
in
bnd
retf
aam
or
dec
inc
dec
and
pop
jb
out
retf
or
mov
out
ss
xor
in
in
sub
xchg
ins
in
movs
test
xor
sbb
movs
xchg
sahf
push
movs
mov
push
jns
xor
jp
xchg
mov
fscale
stos
loope
ja
ins
mov
and
dec
test
out
adc
daa
(bad)
repz
fdivr
(bad)
push
cdq
jb
mov
pop
in
jae
(bad)
sbb
mov
cdq
sub
sub
in
push
jbe
fwait
jae
jnp
ret
das
(bad)
mov
fcom
mov
pop
out
loop
cmps
pop
xchg
or
mov
ret
shl
in
adc
outs
outs
in
loop
repz
cmps
sbb
xchg
enter
mov
xor
out
outs
dec
ret
mov
jl
adc
movs
in
fcmovb
cmp
and
inc
mov
mov
mov
gs
push
outs
mov
mov
cmps
sbb
in
dec
fbld
cld
leave
mov
ja
cmp
fild
cdq
mov
ja
lock
cmps
jmp
ret
adc
xlat
pop
and
jmp
inc
dec
mov
mov
cmp
movs
dec
shl
cmp
xor
(bad)
mov
fimul
hlt
ret
mov
mov
loope
sbb
fisub
pop
jge
push
add
fcom
shl
(bad)
(bad)
in
(bad)
add
loopne
loop
pushf
outs
sub
neg
imul
jge
ret
jne
inc
leave
push
outs
invd
jg
ret
jns
outs
xchg
in
lods
loope
dec
push
jle
push
and
aad
push
js
push
imul
or
rol
in
sub
or
jge
jb
inc
sti
pop
pop
jne
clc
jge
(bad)
jb
xlat
cmp
jp
dec
and
ficomp
ds
ins
xor
push
and
xor
dec
dec
jge
mov
imul
mov
enter
loopne
mov
xor
and
stos
repnz
test
xchg
sbb
cmc
and
inc
push
clc
stos
or
inc
lds
stos
js
cld
test
inc
mov
mov
and
rcl
lods
pop
add
inc
inc
stos
ret
dec
cmp
inc
jno
mov
test
neg
xor
add
and
lods
ins
or
mov
rcl
ret
push
sbb
cmp
icebp
sbb
out
xor
loop
ins
inc
inc
adc
mov
add
scas
clc
scas
clc
(bad)
fcomp
push
shl
mov
imul
or
loop
std
or
das
repnz
jno
loope
pop
and
pop
call
das
cmp
and
loope
ins
cmps
pop
mov
fwait
out
xchg
icebp
push
mov
cmp
aaa
sbb
test
mov
xor
leave
xchg
f2xm1
ja
inc
fsubrp
out
jecxz
push
jle
movs
out
pop
ficom
scas
pop
out
mov
(bad)
outs
lods
les
pop
jmp
jecxz
push
push
mov
repz
in
inc
pop
iret
cli
sti
pop
popa
xor
cmp
(bad)
in
lods
mov
pop
or
sbb
push
pop
bound
fisubr
out
add
mov
movs
cli
in
mov
mov
sub
outs
adc
pop
mov
fs
cmovb
popa
mov
push
pop
outs
add
adc
adc
mov
mov
fdivr
mov
data16
cmps
adc
push
mov
outs
pop
xchg
mov
or
(bad)
xor
xchg
jg
inc
lea
push
xchg
mov
mov
pop
inc
pop
mov
push
fs
cmp
push
clc
dec
or
popa
xor
mov
pop
(bad)
mov
jmp
xor
scas
lock
and
in
sbb
sbb
jns
ins
js
jno
push
in
loope
push
idiv
add
cmp
sub
call
dec
jp
jns
minps
push
aam
iret
inc
ins
cli
in
mov
clc
scas
je
(bad)
push
jmp
test
scas
push
nop
adc
hlt
mov
mov
sub
pop
stos
(bad)
sub
mov
push
das
cwde
ret
pop
add
loopne
add
jno
mov
xor
xor
test
out
jmp
jne
mov
retf
lea
xchg
push
lea
out
mov
mov
sub
mov
leave
ret
enter
jg
pop
add
outs
adc
mov
sbb
out
and
retf
stc
shl
imul
ret
push
pusha
xlat
inc
fsubr
mov
xchg
inc
mov
mov
adc
nop
sar
mov
stos
ds
out
mov
mov
(bad)
loope
dec
les
lea
push
fnstcw
into
lahf
adc
xor
cli
mov
popa
mov
and
pop
mov
mov
sub
ds
sbb
pusha
cmp
lods
push
xor
adc
lds
push
daa
xor
cmp
cmp
stos
cmp
sub
imul
(bad)
(bad)
jbe
es
push
adc
mov
jno
adc
das
jae
dec
aaa
push
pusha
mov
cdq
pop
adc
adc
xchg
fs
jb
pop
cmc
std
dec
pusha
xchg
iret
push
sbb
inc
(bad)
cmps
js
in
daa
cdq
add
push
push
mov
push
xor
aad
pushf
xchg
add
inc
xlat
test
inc
ja
scas
sub
pop
mov
and
jmp
imul
ins
cmp
loop
push
daa
imul
or
fld
mov
scas
pop
iret
jnp
adc
arpl
xchg
ins
and
movs
jmp
lds
xchg
inc
fnsave
push
pop
repz
data16
sbb
popa
jg
sbb
sets
call
das
xchg
repz
sub
cmp
stc
jmp
jae
dec
icebp
xor
rcl
or
loope
xchg
shr
or
xor
cmp
push
ins
sbb
(bad)
call
sbb
add
xchg
dec
adc
lahf
fst
movs
mov
sub
xchg
ds
pushf
inc
stc
and
(bad)
out
rcr
fnsave
icebp
push
or
mov
sbb
and
or
aad
sbb
hlt
push
div
jo
data16
je
mov
sub
add
test
cmps
mov
ret
mov
popf
mov
cwde
lock
mov
mov
cmps
xchg
pop
lahf
jb
add
mov
ins
add
jmp
jns
cmp
jmp
jl
aam
inc
mov
jle
in
push
fcmovnu
cmp
out
cmp
cmps
in
lock
enter
aad
or
repnz
test
test
arpl
mov
jne
arpl
dec
pusha
cmp
mov
hlt
jb
adc
pop
ret
out
push
fcomp
out
sbb
push
lea
mov
lds
xchg
pop
jns
xor
or
xlat
mov
ins
movs
shr
and
fdivr
sbb
jmp
push
dec
jne
push
mov
or
pop
dec
cmp
imul
push
push
and
xor
neg
add
mov
push
or
inc
dec
and
xchg
or
ret
jns
stos
push
into
scas
mov
pop
or
and
push
fldcw
cmp
jle
loope
xchg
xchg
add
mov
xor
jle
loopne
push
je
mov
push
(bad)
xlat
cmp
dec
jns
jge
sbb
(bad)
ret
pop
add
int
mov
retf
fwait
sub
shr
cdq
jne
push
movs
fs
push
xor
mov
inc
or
adc
call
inc
iret
movs
outs
pop
mov
shl
cmp
jge
jno
iret
test
je
mov
cdq
mov
sub
jl
push
shl
and
hlt
arpl
fs
aas
cmp
jle
std
xchg
jp
cmps
cdq
test
aas
pop
sub
dec
mov
adc
cli
mov
aam
enter
std
out
adc
pop
sti
push
jns
cmp
add
out
cmp
cmc
ror
lock
dec
mov
push
mov
mov
mov
or
and
int
scas
push
mov
mov
ficom
into
or
test
mov
fdiv
jmp
rcl
aad
mov
xchg
das
ror
dec
dec
call
xor
movs
lock
mov
test
mov
dec
cmp
sbb
scas
push
inc
fsub
add
iret
adc
retf
hlt
(bad)
inc
xor
lods
ds
out
push
dec
jg
jl
mov
mov
stc
icebp
fst
outs
arpl
add
nop
fcomp
jno
xor
inc
retf
jmp
jnp
jne
(bad)
bound
cwde
bnd
call
adc
mov
shl
arpl
je
mov
xor
adc
adc
ret
cs
cmps
xchg
imul
jg
fsub
sti
movs
cld
(bad)
sub
clts
sub
inc
test
mov
in
adc
data16
pop
ret
int3
mov
call
sbb
out
imul
and
clc
xchg
mov
adc
repnz
int3
clc
mov
mov
dec
jnp
pop
shl
sub
sti
inc
call
mov
mov
and
mov
push
xlat
imul
mov
xor
call
ret
dec
mov
sub
xor
jmp
push
adc
ins
push
add
add
ds
fs
fisub
popa
push
jnp
jnp
cdq
inc
sbb
scas
adc
adc
xchg
adc
aas
ror
fdivr
dec
mov
(bad)
cwde
ret
lods
stc
outs
sbb
fisttp
xchg
dec
mul
lahf
js
retf
dec
lods
mov
and
rol
sub
into
js
mov
addr16
adc
mov
cmp
mov
pop
mov
scas
mov
out
aad
retf
or
mov
inc
call
sbb
aaa
jae
jns
xor
or
add
push
test
adc
int
mov
imul
cmp
mov
aas
bound
sahf
out
pop
cdq
jbe
and
cmp
xor
shl
sahf
cmp
ss
scas
fild
ret
xor
add
imul
out
clc
and
adc
test
sub
out
dec
repnz
je
dec
push
pusha
jne
mov
loopne
xchg
(bad)
adc
pop
jnp
call
sub
repz
jb
xchg
mov
into
das
add
mov
cmp
xchg
adc
dec
bound
inc
int3
inc
mov
push
mov
pop
push
loopne
loop
out
sub
fldcw
mov
pusha
and
mov
push
mov
push
test
mov
adc
sbb
call
jmp
nop
cmp
addr16
out
cmp
lahf
out
push
mov
ds
bound
out
mov
jb
jnp
out
and
scas
sbb
in
push
jge
fcomp
inc
dec
mov
outs
dec
or
dec
mov
outs
jp
std
popa
dec
jbe
and
xchg
cmp
mov
fiadd
cwde
pop
sub
cmps
xor
ins
lahf
inc
int3
js
sbb
or
ins
mov
inc
mov
add
ins
mov
inc
or
and
mov
or
sub
outs
adc
lahf
pop
rcl
pop
popf
cld
jns
inc
inc
out
mov
adc
jbe
and
hlt
test
std
daa
enter
repnz
mov
xlat
sbb
fst
sub
(bad)
lock
xchg
mov
cmp
in
cmp
imul
sahf
ja
xchg
loope
adc
adc
dec
int3
cmps
add
mov
test
add
cmp
out
(bad)
aaa
and
add
aad
mov
jge
loop
dec
mov
pop
sub
sar
loop
pop
mov
movs
pop
imul
add
sub
(bad)
xchg
scas
mov
pop
sub
push
push
mov
iret
sbb
sahf
in
mov
in
push
pop
sahf
xchg
int
retf
jg
mov
pop
leave
fmul
int3
inc
and
and
dec
mov
in
fwait
shr
movs
movs
mov
sti
aaa
ins
clc
pusha
cmps
mov
inc
add
pop
and
fwait
mov
cmp
std
jo
sbb
jp
mov
test
rcl
loope
lea
ja
js
mov
lods
jp
push
scas
pushf
pop
or
dec
jmp
dec
add
out
call
movs
fbstp
fs
call
hlt
in
xchg
cli
shl
xchg
fstp
mov
sbb
inc
sub
mov
cmp
cwde
dec
and
loop
(bad)
cmp
cld
fnstsw
and
mov
imul
ds
fisttp
ret
cdq
mov
pusha
movs
fnstenv
push
adc
xor
pop
adc
jns
fs
(bad)
mov
pushf
ds
pusha
test
hlt
push
cli
int3
sbb
push
push
sub
loopne
inc
test
fnsave
dec
push
cmc
jecxz
cmc
xor
push
outs
add
aad
xchg
or
pop
iret
iret
inc
mov
or
daa
jae
in
sub
in
dec
sbb
ds
push
loope
int
mov
cmp
sbb
test
push
pusha
les
popa
das
sbb
ror
into
add
mov
rep
inc
stos
cli
sbb
stos
leave
mov
ins
aaa
mov
adc
aaa
test
arpl
mov
fst
or
xchg
push
mov
adc
repnz
dec
cli
sahf
adc
es
push
dec
retf
add
mov
push
sub
jl
or
pop
inc
arpl
cmc
mov
outs
push
lock
outs
mov
jbe
mov
cli
dec
sub
sbb
xchg
dec
xchg
mov
cs
mov
jbe
cmps
aas
ins
hlt
ss
adc
popa
rcl
inc
jecxz
sbb
xchg
and
push
xor
bound
movs
mov
adc
push
dec
push
xchg
cmps
repz
sub
sbb
mov
or
inc
bound
cmps
add
int
stos
dec
xchg
xchg
cmp
jne
push
sub
cmp
test
(bad)
fcmovne
dec
fdiv
sbb
lods
stos
dec
xchg
pop
mov
outs
sbb
fldenv
lods
scas
std
sub
sbb
test
xchg
mov
or
and
mov
sub
push
in
inc
add
dec
test
dec
cs
mov
or
inc
mov
jmp
jno
push
mov
sub
cmps
cmc
dec
pop
push
add
cs
jb
lock
lock
inc
js
call
mov
mov
lds
cli
jno
or
mov
lds
xchg
mov
pop
ds
inc
sar
shl
mov
push
mov
mov
aam
mov
xor
push
idiv
arpl
pop
sbb
jne
and
inc
adc
ror
mov
(bad)
ins
mov
loop
cmps
lock
das
cmp
mov
mov
sub
cmp
movs
rol
nop
push
dec
cmp
lahf
ficomp
ret
xchg
stos
mov
out
pop
mov
jns
sar
cmp
add
sbb
jmp
push
xchg
nop
push
test
add
jnp
in
sar
dec
addr16
add
inc
enter
or
sbb
adc
xchg
jbe
inc
mov
add
xchg
add
xchg
push
out
push
imul
lahf
cs
test
bound
shl
inc
xchg
sub
pop
rcl
fmulp
add
dec
xchg
pusha
mov
stos
push
mov
add
cmpps
in
inc
(bad)
push
icebp
fimul
mov
cmp
sbb
mov
push
inc
jecxz
push
pop
push
xlat
sub
mov
and
mov
xchg
(bad)
dec
mov
fcom
call
imul
mov
jge
movs
sub
hlt
daa
out
push
fwait
ror
mov
neg
test
mov
fnstsw
fst
or
inc
cld
in
(bad)
sbb
bound
shl
push
or
pop
call
xchg
sbb
pusha
mov
jne
fnsave
lock
xor
mov
inc
cld
rol
retf
mov
pop
xor
mov
ret
call
aad
sahf
ja
push
dec
ds
loope
retf
xchg
imul
dec
sub
pop
aam
jmp
mov
push
out
mov
add
add
or
rcl
out
mov
scas
jg
xor
out
pop
fst
mov
nop
dec
jno
test
es
mov
adc
mov
dec
sbb
adc
(bad)
out
cmp
movs
sub
ins
stos
jnp
test
test
outs
adc
mov
xor
imul
mov
sbb
sbb
dec
mov
movs
in
jno
cwde
retf
cld
jecxz
add
loop
ror
call
lahf
fld
jbe
lods
lods
stos
stc
fidiv
inc
inc
(bad)
and
div
adc
sbb
mov
aam
xchg
neg
or
mov
sub
jne
and
inc
ret
ins
xlat
pushf
inc
sbb
sbb
into
push
xchg
nop
or
out
out
jne
xchg
or
mov
ror
and
jmp
stos
icebp
push
pop
push
add
pop
data16
aam
add
in
mov
xchg
push
(bad)
adc
and
fs
mov
aad
movs
fld
pop
sub
(bad)
cmps
into
or
enter
dec
mov
sbb
adc
fist
lods
in
outs
cmp
push
pop
loope
outs
dec
out
mov
js
in
mov
pusha
xchg
in
mov
mov
push
pushf
mov
cwde
test
add
xor
pop
call
cmp
push
push
push
jle
test
js
jp
pop
jl
cs
push
cmc
ss
ja
es
nop
or
repnz
ss
pop
addr16
sub
xchg
inc
mov
lock
pop
ins
dec
dec
cdq
inc
repz
ds
or
inc
loopne
lds
xor
or
pop
dec
out
ret
jecxz
(bad)
clc
test
(bad)
std
lea
sbb
cmp
mov
aad
retf
dec
retf
push
fwait
in
xor
mov
mov
adc
push
aad
enter
frstor
push
and
ret
xor
pop
push
push
push
sbb
leave
enter
neg
push
cdq
shl
push
jae
mov
mov
jb
bound
jmp
mov
inc
jp
pop
sbb
outs
mov
add
ins
mov
adc
mov
inc
dec
adc
mov
dec
add
popf
mov
test
aaa
lahf
or
xor
hlt
retf
jb
jge
push
(bad)
retf
test
inc
lock
lock
jno
push
int3
jmp
jno
cmp
aas
jle
add
(bad)
jns
adc
gs
pop
pushf
xchg
adc
cs
sti
mov
xlat
cmp
bound
mov
pop
push
cmp
out
mov
pushf
push
or
(bad)
xor
nop
cli
je
jle
or
or
cmps
int
mov
into
cmps
out
mov
mul
int
mov
pop
sub
repnz
pop
rcl
lock
pop
gs
push
mov
in
loopne
xchg
ins
and
cmps
je
call
ja
push
arpl
xor
push
sbb
test
sbb
repnz
ins
loope
or
sub
outs
add
xor
mov
push
das
das
jno
sub
repz
loopne
cli
pushf
mov
cwde
hlt
inc
jbe
scas
cld
push
loopne
xchg
test
cdq
mov
jmp
shr
adc
jno
push
dec
xchg
mov
or
pop
pop
sbb
mov
sub
pop
lea
(bad)
hlt
xchg
sub
xchg
dec
stos
xlat
fstp
mov
add
pop
pushf
movs
iret
jb
mov
lahf
jmp
mov
dec
into
and
push
xchg
imul
call
mov
mov
enter
cmp
inc
mov
mov
inc
clc
addr16
das
ds
iret
inc
adc
repnz
test
lahf
xor
in
xor
jp
inc
jmp
adc
outs
test
jae
pushf
dec
xchg
fidiv
mov
aad
cli
(bad)
outs
xchg
movs
arpl
cwde
xchg
outs
mov
pop
jmp
inc
pop
sub
jge
or
mov
clc
repz
push
mov
lock
mov
push
pushf
(bad)
pop
jl
daa
push
push
js
int3
lods
jne
xchg
inc
shl
cdq
pop
int
xchg
adc
push
inc
and
xchg
pop
sbb
add
dec
or
shr
mov
xchg
sbb
pop
push
push
mov
mov
ins
mov
sub
test
push
pop
cdq
pop
xchg
loop
out
repz
into
fisubr
loopne
cmps
sub
inc
add
cmp
adc
and
jecxz
outs
aaa
cmp
mov
mov
call
jp
xor
repz
pop
into
test
add
ins
cld
jnp
adc
mov
mov
enter
call
add
mov
push
in
pop
sti
retf
add
imul
mov
jge
fistp
push
adc
les
mov
push
xor
cli
test
stc
xchg
mov
sub
mov
std
jmp
mov
push
xchg
jmp
shl
fwait
scas
dec
mov
(bad)
int3
aas
xor
or
cmp
nop
cmps
sar
xor
push
pop
div
fimul
mov
in
and
sbb
sub
stc
stos
mov
add
sbb
xor
mov
sub
lea
pop
cbw
sbb
mov
out
xor
mov
inc
int3
loope
addr16
ret
sbb
test
enter
cmp
cmp
xor
sub
pop
xor
lea
int
daa
jl
push
(bad)
ja
cmp
es
mov
push
xchg
outs
and
les
sbb
mov
popa
movs
and
fwait
outs
push
or
mov
and
enter
fsubr
pop
fsubp
and
imul
movs
push
ss
mov
shr
cwde
push
(bad)
test
jne
adc
and
lods
bound
outs
push
in
fdiv
ret
sti
outs
aas
jne
cs
scas
icebp
and
inc
jge
dec
es
mov
jmp
leave
cmps
ins
cmp
dec
mov
ret
or
fs
dec
in
add
xor
dec
push
mov
xor
pop
mov
clc
jbe
nop
test
cs
mov
push
test
dec
jmp
pop
and
mov
cdq
retf
sub
rol
loop
repnz
es
pop
inc
mov
cmp
(bad)
mov
mov
inc
lds
mov
dec
xor
or
hlt
jae
and
idiv
adc
mov
jae
sbb
jae
cld
jg
sub
fisttp
ret
cmp
sbb
(bad)
ror
cdq
sar
push
xchg
xchg
test
repz
(bad)
das
xor
xchg
inc
cs
int3
mov
adc
cdq
xchg
(bad)
xchg
iret
jno
jb
jne
retf
push
push
mov
jecxz
call
pop
stc
adc
mov
sub
lds
xchg
jbe
aaa
fdiv
fist
in
mov
out
pop
inc
loop
mov
pop
mov
xor
mov
xchg
movs
call
rcr
mov
sub
sbb
rcl
iret
xchg
cmp
sbb
sub
dec
sbb
mov
mov
pop
(bad)
sub
loopne
lods
adc
(bad)
xchg
es
push
js
(bad)
bound
pop
icebp
push
in
pop
ins
xor
pushf
cmp
inc
mov
ret
test
push
cld
adc
shl
xor
frstor
outs
cmp
pop
shld
mov
or
popf
fbld
pusha
xchg
imul
adc
push
mov
xor
fcmovbe
mov
fild
xchg
syscall
(bad)
push
cwde
cmp
out
ins
call
sub
fwait
xor
je
jnp
scas
leave
cwde
cmp
xchg
add
mov
and
jl
sbb
mov
adc
or
inc
leave
and
push
inc
ins
mov
sbb
inc
(bad)
fwait
xchg
aad
dec
add
test
jns
dec
imul
fs
cdq
popf
jmp
jl
inc
inc
fprem
test
rcr
mov
cmp
mov
jns
add
xor
or
xchg
in
hlt
mov
fsub
(bad)
cmp
cmp
call
imul
jb
cld
mov
xor
fidiv
movs
inc
mov
out
xor
(bad)
popa
mov
sbb
fs
or
outs
cmp
dec
and
scas
push
mov
rcr
mov
jns
sbb
jnp
xor
sbb
push
jl
add
jno
fwait
or
dec
pop
into
pop
aas
mov
shl
adc
into
adc
or
and
rcl
mov
js
xchg
adc
icebp
into
inc
sbb
xchg
movs
xchg
or
mov
stos
mov
sbb
sbb
ret
cwde
jns
movs
mov
dec
shl
out
(bad)
loop
jl
mov
jno
sbb
in
cmp
mov
rol
add
mov
aaa
les
adc
jo
sub
push
sar
outs
and
daa
mov
loopne
lahf
les
inc
mov
dec
mov
sub
sub
stos
pushf
out
push
mov
mov
(bad)
(bad)
fidiv
lods
mov
xchg
sub
dec
or
arpl
sbb
cmp
mov
bound
sub
mov
or
add
scas
retf
mov
mov
movs
movs
lock
add
paddd
jbe
aad
aad
xchg
div
sub
cmp
in
repnz
adc
mov
out
pop
xchg
in
adc
or
imul
ret
ds
add
inc
pop
and
mul
stos
add
jae
movs
jmp
in
xor
add
loopne
cmc
sub
inc
dec
stos
pop
out
bound
dec
cmc
into
mov
out
pushf
push
cmp
ins
shl
stc
ficomp
(bad)
dec
jmp
pop
push
jae
and
adc
shr
mov
add
mov
push
dec
and
sti
mov
pusha
cmp
clc
add
mov
pusha
test
pop
or
gs
xor
pop
les
outs
sub
sbb
xchg
jmp
out
xor
stc
sbb
daa
xor
xchg
push
(bad)
lods
mov
mov
int3
mov
mov
add
cs
stos
push
push
jmp
lahf
push
rol
xor
ja
jg
pop
nop
sbb
sar
addr16
ins
lods
and
pushf
ss
arpl
inc
(bad)
test
ret
mov
retf
dec
inc
cmps
jo
or
sbb
ficom
fnstsw
or
ja
sub
dec
mov
std
mov
sub
lock
cmps
js
jp
fimul
hlt
cmp
mov
bound
mov
inc
not
ins
xchg
retf
xor
cmp
fimul
pop
mov
xor
xchg
xor
outs
test
lods
sbb
enter
pop
mov
jge
(bad)
push
jne
jmp
add
add
das
arpl
mov
repz
inc
cmps
jns
sbb
mov
clc
jp
add
xchg
and
repz
push
scas
push
ins
int
dec
xlat
xlat
jg
mov
pop
mov
ret
sbb
mov
leave
cmp
cld
dec
mov
stos
push
fmul
mov
push
jge
mov
inc
es
sbb
and
jp
mov
push
dec
xchg
jno
sbb
hlt
pushf
scas
pusha
arpl
dec
adc
jne
mov
ss
gs
mov
mov
fld
sub
aaa
xchg
mov
jbe
xchg
jo
dec
sbb
aas
outs
jmp
loopne
pop
push
sti
xchg
sub
std
inc
cmp
enter
popa
enter
adc
mov
sbb
fwait
test
adc
push
sbb
jp
mov
jno
jb
cli
fsub
jns
sub
(bad)
add
bound
dec
cmp
std
movs
cmp
imul
jge
xchg
inc
xor
adc
sbb
popf
push
dec
adc
mov
mov
loopne
dec
jge
gs
movs
mov
push
push
pop
add
mov
fild
int3
push
movq
mov
pop
test
inc
push
mov
push
mov
dec
jne
xor
in
loopne
aad
rcr
test
std
in
jb
or
lods
rcl
mov
xlat
in
lods
loop
repz
xchg
sub
inc
sbb
pusha
test
test
xor
push
or
cmp
mov
outs
into
push
stc
jno
sbb
adc
arpl
xor
sub
sub
mov
cmp
rcl
jl
test
fistp
sbb
sub
cs
ds
xor
imul
xor
test
sub
jne
sub
pop
xlat
sbb
test
dec
add
jecxz
out
(bad)
pusha
(bad)
pop
pop
push
and
xchg
or
(bad)
int3
adc
sub
xchg
cmp
scas
test
fwait
ret
fbld
pop
sub
push
dec
ins
(bad)
mov
mov
mov
sbb
dec
xchg
adc
mov
push
lea
or
xchg
jl
inc
inc
out
adc
imul
dec
dec
xchg
repz
sbb
sub
pop
push
out
fcmovne
(bad)
xor
loope
int
jo
aam
or
cmp
inc
pop
ds
push
xchg
sahf
int
xor
inc
xchg
sub
inc
lea
lods
cmp
xchg
sbb
ret
daa
mov
scas
cmps
outs
dec
inc
dec
cmp
fidivr
dec
les
mov
enter
stos
xor
pop
outs
outs
imul
adc
or
push
cdq
pusha
add
in
pop
sbb
dec
pop
idiv
repz
repnz
xchg
ror
mov
inc
icebp
jecxz
(bad)
mov
xchg
or
push
xchg
test
add
dec
sahf
out
sar
lea
push
or
fst
pop
xor
add
xchg
cli
mov
out
inc
repnz
mov
(bad)
fwait
mov
lods
imul
out
adc
fld
aad
mov
xchg
add
aaa
jle
jle
push
rep
mov
fimul
jg
inc
dec
out
pop
cmp
rep
pushf
int3
into
test
or
or
add
and
cmp
cmp
aas
and
xchg
push
rcl
(bad)
in
mov
xor
inc
fdiv
call
add
and
adc
and
mov
arpl
sbb
retf
sub
les
icebp
test
and
xchg
mov
daa
icebp
jo
or
call
stc
or
sub
xchg
retf
pop
inc
jo
pop
mov
and
addr16
neg
mov
out
push
sub
push
pop
jle
imul
pop
fdivr
add
inc
xor
add
(bad)
sbb
arpl
and
out
test
hlt
stc
xor
int3
push
adc
xor
sbb
stos
aam
mov
rol
outs
int3
push
in
xchg
and
lods
adc
mov
aas
push
sbb
or
lds
jecxz
movs
in
out
and
cmp
inc
pop
or
pop
(bad)
cmp
jns
out
call
lock
dec
fwait
jg
push
sub
movs
dec
mov
(bad)
aad
dec
dec
jno
pop
cs
pop
pop
popa
mov
mov
mov
test
mov
inc
adc
cmp
or
sub
pop
call
aas
(bad)
cdq
push
and
mov
push
inc
adc
ja
mov
xor
in
stos
aaa
jno
sbb
dec
inc
adc
cmc
sbb
lods
aaa
sub
test
pand
sub
test
retf
(bad)
jp
dec
push
and
or
mov
mov
mov
sahf
inc
jl
inc
push
icebp
and
fwait
mov
cwde
push
dec
sbb
rol
icebp
pop
mov
pusha
mov
and
xchg
push
rcr
ins
push
pushf
or
xor
inc
or
jae
cld
mov
push
out
stos
dec
int
mov
or
and
cmc
xor
retf
scas
pop
sub
scas
jne
sub
sbb
xor
movs
dec
inc
(bad)
(bad)
popf
and
push
or
add
inc
inc
lahf
call
ins
loope
inc
mov
addr16
rcr
sub
les
sbb
bound
movs
lock
mov
push
mov
ret
shl
push
daa
pop
gs
pushf
dec
test
push
mov
neg
push
sbb
sbb
mov
pusha
out
in
add
(bad)
pushf
sahf
ficomp
(bad)
cli
xor
inc
and
data16
mov
test
in
jmp
add
jnp
adc
movs
(bad)
mov
jb
ret
imul
pop
jmp
mov
ins
lds
out
mov
mov
add
bound
xchg
mov
push
sub
enter
push
adc
loop
pop
jmp
xchg
jmp
scas
jecxz
cli
push
fstp
push
ins
int3
out
pop
xchg
mov
jmp
movs
sbb
jno
lds
sbb
cmovne
and
movs
mov
xchg
mov
(bad)
in
loopne
(bad)
cmp
pushf
dec
sub
ins
xor
das
jbe
lods
dec
sbb
mov
and
sar
leave
dec
ja
push
retf
icebp
out
inc
fisub
push
inc
inc
arpl
add
or
movs
xchg
ins
cli
adc
ds
jb
sbb
sub
mov
test
fmulp
push
cdq
xlat
push
lods
xchg
mov
and
(bad)
mov
adc
loopne
mov
push
jge
mov
mov
or
push
lods
jno
cmp
mov
sub
xlat
sbb
xchg
leave
fs
xchg
cmc
mov
ret
inc
sbb
loopne
push
cmps
mov
dec
imul
mov
test
test
push
mov
retf
lods
jge
mov
add
sub
arpl
cmp
xchg
sub
std
leave
icebp
sub
pop
rcr
(bad)
pop
xor
jo
js
sub
cmp
dec
xor
bound
adc
jmp
and
inc
mov
fwait
scas
xchg
fcom
mov
or
iret
fwait
rcr
inc
int3
iret
out
lahf
add
out
call
test
xor
(bad)
dec
mov
push
ror
std
pop
push
cmp
or
pop
adc
xchg
pop
adc
out
ror
or
pop
xchg
gs
ror
out
inc
mov
ret
cld
out
push
mov
jmp
and
push
dec
stos
je
mov
dec
add
cmp
push
enter
xor
mov
lods
mov
div
or
(bad)
mov
das
pop
dec
cmovae
sbb
xchg
push
push
push
mov
dec
mov
cmp
xor
xlat
pop
out
xchg
xchg
mov
sub
(bad)
arpl
jle
outs
xchg
and
mov
leave
ret
cmps
aaa
loop
cmp
push
mov
jno
loope
sbb
test
push
pop
les
inc
and
pop
sbb
mov
cmp
dec
lds
dec
jge
push
ror
sahf
mov
call
shl
sub
push
pop
jb
push
arpl
int3
shl
not
inc
jae
outs
mov
data16
es
mov
movs
(bad)
aas
les
pop
shl
mov
fstp
scas
aaa
add
aaa
(bad)
mov
fmulp
aas
bound
push
ret
fwait
xchg
mov
push
test
int
sbb
push
inc
call
xchg
cmc
dec
arpl
jmp
add
lea
jmp
ret
dec
(bad)
mov
cmp
adc
iret
dec
mov
xor
in
add
mov
rol
dec
cmps
mov
adc
sub
lods
mov
push
jge
les
jbe
cmp
pushf
jo
imul
push
jge
sbb
ret
pop
mov
in
ja
shl
sbb
and
dec
add
outs
aad
js
movs
or
mov
dec
ins
sub
pusha
mov
or
mov
lahf
je
in
dec
add
mov
in
push
into
push
int
lods
mov
(bad)
mov
in
jbe
sar
sbb
gs
(bad)
movs
and
out
or
leave
xor
icebp
mov
push
imul
xchg
in
test
push
mov
xchg
mov
pop
add
pusha
ss
hlt
mov
retf
ret
ja
jne
pop
mov
sub
gs
push
adc
shr
imul
std
add
jle
scas
mov
loopne
xor
and
aam
test
pop
xchg
jge
hlt
jb
xchg
mov
mov
and
mov
out
fcom
jnp
inc
fwait
mov
push
cld
pop
xchg
sub
pop
add
lock
arpl
mov
pop
ins
cmp
scas
cmp
mov
pop
test
pop
cli
(bad)
sbb
aas
xchg
mov
jo
sub
cmp
push
sahf
add
mov
mov
icebp
repz
xor
dec
xor
je
add
ds
jo
scas
cdq
ds
into
scas
ins
pop
dec
mov
pop
jl
inc
jnp
ds
cmp
or
fmul
mov
sub
mov
push
imul
sub
loopne
test
xchg
aad
xor
cdq
fdivr
(bad)
fist
or
rcl
jle
aad
clc
push
dec
fcmovnbe
xchg
imul
mov
(bad)
mov
mov
lods
adc
loop
sbb
leave
cmp
sbb
rcr
cmp
push
test
dec
and
je
pusha
cmp
xor
mov
xchg
xchg
aaa
enter
scas
sbb
and
xchg
push
hlt
sub
push
call
pop
add
pop
mov
retf
inc
das
xor
into
inc
add
mov
push
movs
sub
xor
adc
enter
(bad)
jg
lahf
ret
popf
xchg
nop
inc
push
add
xor
push
adc
push
jns
xchg
ds
stos
sti
sbb
jl
dec
push
into
fisub
imul
adc
push
mov
gs
mov
inc
and
or
jo
hlt
rcl
xchg
mov
cmp
sub
call
lds
mov
int3
nop
push
nop
cld
not
ret
push
popa
push
mov
jae
fistp
add
clc
loop
xor
adc
cmp
add
add
jne
push
xchg
and
xlat
xor
in
lock
dec
or
data16
dec
adc
stc
cdq
dec
movs
mov
xor
daa
mov
hlt
aad
fs
push
hlt
xchg
mov
stc
push
sub
adc
sub
mov
or
mov
ror
jnp
adc
inc
or
xchg
andnps
in
inc
cld
sbb
sub
enter
(bad)
test
leave
mov
or
inc
(bad)
jns
fldenv
and
lea
or
mov
call
unpcklps
mov
xor
pop
mov
loope
cmovg
(bad)
inc
int3
dec
ror
sbb
pop
inc
cmp
cmp
retf
jge
and
push
mov
mov
push
aam
paddusw
call
ins
push
into
fisub
in
mov
cld
push
jmp
add
stos
in
lahf
cli
add
hlt
fst
repnz
and
in
cli
out
aaa
sub
lods
icebp
pop
push
dec
pop
stos
xor
cmps
sbb
ja
dec
scas
retf
adc
cmc
and
out
(bad)
and
jecxz
pop
(bad)
jno
in
adc
int
inc
or
aad
jne
aam
fwait
je
mov
mov
inc
icebp
test
mov
sbb
fsub
pop
jg
mov
pop
push
in
and
icebp
jp
push
mov
push
jae
in
mov
pusha
adc
int3
lods
dec
xchg
aam
popf
popa
shl
mov
ret
cld
inc
mov
pop
fadd
js
pop
scas
cdq
daa
xchg
pop
jae
das
push
dec
sub
or
xchg
mov
stos
ja
cmc
(bad)
iret
cmp
jmp
jbe
xor
mov
adc
arpl
out
jecxz
inc
mov
adc
mov
aam
pop
push
cmps
xchg
sahf
es
xchg
stos
(bad)
sti
jmp
jns
ins
and
and
fs
dec
and
and
and
inc
mov
cwde
pop
add
scas
std
mov
mov
imul
aam
and
xor
push
mov
ja
inc
ret
fnstenv
pop
or
outs
fwait
ss
ja
mov
cmc
mov
cmp
mov
jbe
pop
test
(bad)
in
stos
daa
hlt
aad
je
or
retf
push
or
mov
add
xchg
scas
push
push
pop
inc
mov
scas
pop
push
jae
retf
mov
push
test
push
inc
push
pushf
add
adc
cs
rol
test
mov
div
push
ins
daa
and
sub
adc
nop
in
sub
cs
lock
ja
push
sbb
sub
or
push
jno
mov
mov
sti
xlat
in
and
push
int3
cvttps2pi
sub
inc
mov
adc
aam
inc
mov
push
jmp
pop
mov
inc
xchg
and
addr16
imul
add
pop
mov
lock
into
sub
std
ret
sub
jmp
push
xchg
push
lods
lock
in
mov
mov
sbb
cdq
repz
fidiv
jmp
xchg
clc
shl
lgs
pop
movs
push
pop
pop
mov
pop
fstp
or
jl
cmps
push
arpl
in
test
mov
test
shl
mov
add
retf
shl
push
out
xchg
fs
inc
xchg
add
mov
iret
xor
push
ds
leave
push
loope
pop
inc
and
mov
dec
popf
out
bound
mov
push
cdq
call
imul
js
test
pop
int3
jg
or
jbe
imul
ret
push
es
pop
retf
das
mov
scas
mov
inc
movs
imul
div
inc
mov
sbb
bound
lods
push
push
dec
push
fwait
sub
and
dec
pop
pop
push
rcr
and
cmp
inc
jne
das
dec
div
xchg
mov
icebp
sbb
and
int3
adc
fldcw
cmp
adc
and
movs
mov
lods
ret
pop
jns
fsub
pop
xchg
xchg
mov
fbstp
loop
pop
jb
inc
xor
iret
arpl
mov
xchg
sar
enter
iret
sbb
inc
jno
test
add
jo
or
mov
mov
cmps
repnz
jns
mov
retf
pop
jmp
push
imul
mov
push
add
xchg
jl
cs
xchg
inc
int3
xchg
mov
mov
leave
fdiv
shl
mov
jno
mov
and
pop
jmp
xor
sbb
int
or
loop
sbb
sbb
xor
mov
in
adc
mov
arpl
mov
sti
mov
or
lods
loope
dec
xor
jmp
xchg
js
outs
in
clc
out
data16
adc
int3
jg
dec
mov
cld
ins
in
lods
les
or
pop
push
and
jbe
(bad)
aam
adc
cmp
xor
call
dec
aad
arpl
jmp
or
mov
aaa
dec
(bad)
loopne
in
sub
pop
sub
push
or
into
adc
mov
repz
pushf
inc
lock
cmps
dec
loope
fdiv
stos
fs
cmp
mov
push
(bad)
movs
mov
lods
outs
cmp
push
dec
aas
adc
lock
jge
rcl
inc
stos
stos
fld
add
mov
movs
scas
dec
cmp
fmul
addr16
dec
sar
test
retf
(bad)
loope
adc
stos
mov
or
dec
(bad)
push
mov
mov
cld
pop
mov
gs
emms
movs
xor
jecxz
push
or
mov
xchg
retf
mov
cmp
or
sbb
sbb
xchg
sti
pop
push
fistp
ja
push
movs
add
xchg
jne
rcr
fmulp
adc
daa
jnp
mov
mov
push
lea
out
jnp
jp
adc
push
xor
dec
in
movs
mov
lahf
mov
sbb
mov
stos
mov
call
rol
sub
xor
imul
or
in
test
cmps
add
stc
outs
mov
in
dec
mov
fist
jne
jge
sub
pop
dec
je
inc
and
adc
(bad)
loopne
movs
cmp
mov
ret
cs
or
imul
or
rol
arpl
ss
and
test
dec
push
(bad)
cmp
sbb
mov
in
test
bound
xchg
out
xor
adc
sub
lea
(bad)
(bad)
js
scas
push
stos
call
mov
arpl
xchg
mov
jnp
stos
iret
push
lahf
ficom
and
out
das
dec
xchg
addr16
fucomp
scas
sub
sbb
xor
scas
xchg
shr
add
and
add
(bad)
aaa
and
adc
fidivr
in
and
shr
xchg
test
imul
jmp
outs
push
inc
and
fimul
mov
or
sub
out
xchg
push
push
pop
push
test
inc
mov
jmp
pop
mov
xchg
cld
dec
(bad)
fiadd
add
addr16
(bad)
enter
popf
repnz
hlt
clc
cmp
imul
cmps
clc
adc
icebp
dec
iret
xchg
sbb
jmp
in
xor
sbb
shr
or
cwde
jbe
popa
or
pop
stc
icebp
and
or
into
aad
call
pop
adc
arpl
xchg
sbb
jle
rol
out
sbb
sti
inc
retf
outs
sbb
test
xchg
push
inc
outs
inc
adc
add
dec
div
mov
idiv
add
ret
push
pop
add
(bad)
xchg
sti
out
int
lahf
push
xor
push
add
pop
sbb
push
inc
xchg
pop
and
(bad)
out
mov
retf
stos
call
xor
dec
mov
aam
in
(bad)
mov
ror
or
mov
out
jb
push
cmc
stc
mov
or
lock
sub
and
jne
ret
xor
cmp
dec
lods
xor
hlt
jbe
es
cli
lods
in
lods
dec
sub
adc
cmp
retf
sub
inc
adc
retf
push
stos
mov
push
or
sbb
push
inc
out
retf
(bad)
aas
shr
call
adc
out
sub
and
jge
dec
lods
fwait
pop
mov
repz
push
fwait
mov
mov
(bad)
out
fs
shl
iret
pop
ficomp
push
jno
in
ins
mov
repz
cmp
pop
pop
dec
jecxz
ds
mov
rol
inc
push
xchg
add
jae
cdq
inc
mov
cli
jge
(bad)
push
push
clc
mov
sub
mov
daa
cdq
sbb
sub
jns
scas
fwait
sbb
adc
xor
mov
out
dec
fsub
into
shr
(bad)
shl
jecxz
addr16
loopne
adc
outs
xchg
test
adc
cmp
into
inc
nop
shl
call
push
fadd
mov
imul
into
cmp
test
jb
or
sub
fld
aaa
xlat
ror
call
jns
adc
sub
xor
xor
gs
jg
push
test
scas
or
cmps
outs
movs
int
gs
and
inc
cli
(bad)
dec
adc
dec
sbb
jp
inc
fidivr
xchg
ds
cmp
jb
sbb
pushw
mov
mov
sub
pop
mov
(bad)
mov
xlat
int
fimul
sub
sar
int
sar
xor
cdq
inc
and
scas
mov
inc
mov
cmp
in
cmp
adc
lock
jl
jae
dec
popf
push
or
ins
sbb
cmp
mov
or
fcmovbe
(bad)
(bad)
mov
sbb
cmp
pop
push
fdiv
mov
xchg
mov
mov
xchg
push
int
pop
adc
push
and
adc
clc
jge
mov
xor
mov
stos
addr16
fcomp
in
call
mov
jo
adc
stc
xor
jbe
pop
pop
xchg
inc
ror
movs
jne
inc
and
xor
addr16
nop
mov
add
mov
sahf
rol
mov
and
sbb
push
in
cmc
or
or
jne
movs
div
push
jne
mov
(bad)
jbe
aas
call
cmps
mov
call
out
inc
adc
add
loope
dec
mov
push
pop
and
mov
test
fistp
jp
adc
gs
(bad)
jae
enter
dec
(bad)
xchg
cwde
addr16
or
out
sub
loop
and
pop
jb
and
bnd
ficom
js
mov
dec
push
add
es
addr16
sbb
cs
dec
add
dec
out
fld
add
call
repnz
popa
mov
dec
je
mov
(bad)
retf
mov
sar
mov
inc
sbb
push
jg
jbe
inc
pop
addr16
(bad)
mov
ds
fdiv
mov
cmp
loope
es
dec
inc
ret
dec
(bad)
imul
stos
and
repnz
mov
hlt
shl
push
stc
or
pop
mov
sbb
cmp
retf
and
xor
adc
es
sbb
sar
int3
jg
push
mov
push
cs
xor
loope
repnz
or
leave
cdq
inc
adc
pop
inc
dec
sbb
lahf
push
cwde
ficomp
cmp
xor
mov
loop
call
mov
test
shl
(bad)
loop
ret
xchg
xchg
cmp
pushf
xchg
inc
in
inc
sub
xchg
aam
sbb
sbb
inc
test
or
retf
jmp
mov
shr
fist
and
mov
lea
jle
jb
ror
aaa
add
jmp
adc
inc
mov
add
mov
mov
scas
in
sub
inc
clc
xor
out
dec
dec
(bad)
xchg
adc
xchg
inc
pop
int
(bad)
mov
pop
rcl
in
imul
dec
cmp
(bad)
push
fsub
cwde
push
mov
sbb
cmp
es
loop
sub
push
push
js
dec
add
jle
test
mov
adc
sub
jge
add
xor
outs
adc
test
pushf
mov
dec
dec
push
movs
rcr
sub
xor
je
icebp
mov
xlat
nop
sub
mov
cmp
ja
jl
je
xchg
jl
arpl
sub
lock
ds
and
push
mov
outs
ffree
push
pop
mov
lods
in
cmp
xchg
retf
dec
adc
or
movs
push
xor
enter
inc
xor
pop
pop
jns
pop
pop
sbb
jmp
movups
add
sbb
mov
mov
fs
jno
dec
mov
adc
jg
je
retf
push
jnp
ss
iret
cmp
call
xor
aad
mov
imul
ror
pop
nop
aam
push
jl
add
stos
mov
mov
push
pop
inc
push
shl
leave
scas
outs
mov
dec
out
imul
and
imul
add
inc
jge
xor
ins
jge
(bad)
fmul
scas
add
inc
or
ret
fwait
aad
sub
rcl
xchg
mov
stos
mov
jne
xor
mov
fild
xchg
stos
ins
test
xchg
and
and
sub
fchs
inc
mov
pop
mov
mov
sbb
out
fistp
mov
add
inc
adc
and
inc
nop
ret
in
add
inc
mov
dec
out
xor
or
xlat
mov
lods
lea
or
idiv
jmp
adc
lods
lock
movs
dec
cli
mov
mov
shl
xchg
fmul
icebp
test
cmps
in
test
js
push
add
mov
add
stos
push
std
mov
sub
inc
jmp
ret
mov
push
cmp
ret
inc
cmp
out
loop
jmp
hlt
cwde
dec
xor
jo
mov
inc
add
aam
addr16
lahf
inc
adc
push
sti
mov
and
dec
adc
xor
mov
xor
(bad)
fsub
cmps
in
xchg
mov
sti
jecxz
pop
aas
jb
xlat
xlat
js
js
pop
jle
jmp
pop
fistp
mov
ins
daa
pushf
cmp
push
cmps
mov
imul
jnp
or
rol
adc
and
inc
xchg
iret
push
sti
in
inc
jle
cmps
scas
push
sub
adc
in
aas
mov
mov
js
sbb
mov
call
fidiv
adc
fcomp
pop
call
test
push
mov
jns
lds
or
jo
lahf
mov
es
xchg
mov
cs
xchg
cli
clc
mov
(bad)
xchg
pusha
mov
sub
mov
add
std
rol
push
bound
(bad)
div
sbb
out
scas
rol
shl
mov
loopne
ds
pop
jp
dec
dec
ss
stc
jb
jmp
ficomp
xchg
ins
(bad)
fcmove
pushf
outs
pop
gs
(bad)
in
push
xchg
push
jle
bound
inc
stos
sbb
or
mov
jno
shl
ret
sub
fmul
push
and
out
daa
call
retf
jg
mov
aad
ins
aaa
mov
aad
in
call
sbb
pop
outs
and
scas
xor
ja
pushf
fs
(bad)
hlt
aaa
cmp
adc
add
mov
xor
lods
mov
cdq
call
ds
xchg
fistp
and
jae
(bad)
jns
adc
dec
and
inc
mov
icebp
dec
(bad)
(bad)
cmp
out
mov
jmp
xchg
(bad)
cmp
repz
mov
jmp
scas
daa
dec
enter
not
cli
fcom
xor
mov
outs
test
loope
add
ret
jnp
and
call
(bad)
in
xchg
inc
jo
in
test
mov
pop
sbb
mov
inc
fcom
or
mov
push
dec
inc
repz
bound
sar
fdivr
fimul
shl
add
ins
dec
loop
pop
xchg
jle
sub
test
push
jo
fmul
inc
movs
lock
mov
int3
push
mov
mov
dec
(bad)
test
sub
ja
cs
mov
and
popa
(bad)
or
leave
movs
add
jge
mov
cmp
fsubr
in
hlt
js
ret
xchg
adc
int3
and
jbe
fistp
aas
int3
push
dec
jb
push
xchg
es
dec
outs
pop
jle
nop
imul
ret
pop
xchg
ja
push
xor
call
ret
add
ret
popa
fs
test
jbe
mov
loope
xor
push
jb
int
and
xchg
enter
aam
repnz
jno
ret
into
mov
in
xchg
pop
ins
in
retf
daa
sahf
das
out
call
xor
jle
repnz
and
and
sbb
outs
test
ja
lods
(bad)
jl
xor
stos
int3
xor
jno
or
sar
xchg
inc
inc
push
gs
sbb
call
and
cwde
movs
pop
ja
jmp
or
repnz
(bad)
daa
call
(bad)
mov
les
fidivr
pop
(bad)
data16
loop
in
fild
pop
or
fabs
es
adc
(bad)
fadd
mov
add
xor
and
shl
cs
push
(bad)
loop
arpl
std
mov
or
mov
pusha
(bad)
mov
mov
mov
sub
xchg
lahf
inc
clc
ficom
jge
cmps
xor
xor
lods
adc
dec
mov
movs
adc
in
js
inc
adc
cmps
je
cmps
and
popf
pop
pop
push
add
repz
xchg
jecxz
in
xor
call
fmulp
fdivr
idiv
sub
jp
lods
nop
es
jbe
ja
leave
or
and
jnp
cmp
arpl
adc
sub
fwait
push
add
xor
sbb
sbb
cmps
arpl
or
mov
mov
out
pop
mov
lahf
cs
xor
cmp
lods
rcr
cmp
sbb
aaa
adc
adc
lea
popf
inc
aam
xchg
inc
aad
pop
sbb
sbb
addr16
loopne
repnz
stc
inc
movs
imul
cmps
imul
je
arpl
rcr
in
fistp
lock
push
rcl
addr16
sbb
lods
push
or
in
xor
jge
in
mov
and
ins
mov
in
push
outs
aaa
mov
dec
mov
jle
jb
stos
out
(bad)
fisubr
adc
iret
stc
iret
xchg
out
dec
sbb
retf
je
cmp
mov
push
jmp
jae
jb
mov
les
jg
mov
mov
rcl
xchg
jbe
shr
lock
xlat
imul
sbb
rol
sub
ret
mov
les
adc
adc
xor
rcl
inc
jnp
sti
jno
push
imul
call
scas
jae
mov
jbe
hlt
ins
or
bound
mov
xchg
pop
dec
imul
xchg
jge
ret
pop
add
mov
or
gs
push
fcom
or
lock
imul
test
sub
outs
pop
xchg
pop
dec
aad
dec
dec
sub
gs
add
cmp
push
ss
xchg
retf
cs
sub
daa
jnp
mov
xor
cld
mov
scas
sub
aaa
dec
dec
dec
mov
or
aas
dec
int3
jnp
aad
stc
pushf
scas
addr16
ins
psraw
mov
rcr
jb
cmp
lock
ja
ror
in
ja
stos
push
lods
out
adc
xchg
mov
dec
xchg
out
retf
and
jns
cmp
push
sti
cli
jmp
push
add
mov
out
pop
aam
jge
aad
mov
call
std
test
in
scas
out
dec
xor
leave
pop
aaa
in
sbb
mov
dec
adc
rcr
push
sti
inc
xchg
sub
push
mov
fistp
adc
sbb
xor
sti
test
fstp
adc
lock
cwde
mov
test
sbb
lahf
sub
(bad)
adc
cli
lods
xchg
cmp
sahf
sar
sub
fistp
inc
mov
je
push
in
mov
mov
int3
push
outs
out
and
mov
(bad)
mov
shl
mul
push
(bad)
adc
fisttp
movs
repnz
pop
inc
mov
push
cmp
and
cwde
imul
inc
test
ret
test
mov
jecxz
adc
sbb
jns
js
adc
loope
dec
icebp
ror
lods
and
xlat
mov
cmc
cld
add
shl
mov
push
jmp
into
mov
or
mov
in
out
push
lea
dec
sbb
leave
in
aaa
push
mov
ficomp
ret
sbb
pusha
sahf
or
dec
clc
ret
mov
sub
mov
mov
adc
sub
pushf
dec
outs
sbb
add
add
fcmovb
adc
push
xchg
std
mov
or
mov
stos
movs
xchg
sbb
dec
ins
push
lea
jne
mov
into
shl
adc
rcl
add
sub
sbb
(bad)
cmps
inc
(bad)
inc
les
adc
in
sub
call
lahf
mov
dec
sbb
ds
dec
xlat
jb
movs
mov
cwde
enter
inc
pusha
in
inc
jl
test
cmp
ret
lock
rcl
push
sbb
pusha
(bad)
in
dec
jbe
and
push
stos
aam
mov
fs
outs
mov
fbstp
or
leave
fisttp
enter
popa
imul
sub
clc
js
adc
pop
mov
mov
or
sbb
add
stos
leave
pop
adc
movs
hlt
cmps
inc
xor
enter
mov
enter
mov
idiv
loope
dec
sub
sub
sbb
xor
mov
ficom
mov
push
xchg
pop
imul
aam
xor
push
inc
sar
call
(bad)
jp
mov
or
std
je
imul
lods
daa
jne
xor
pop
fstp
xchg
pop
sub
add
cmp
push
sbb
ficomp
(bad)
pop
xchg
mov
fmul
lods
cmps
dec
add
pop
shr
and
xchg
add
nop
fild
(bad)
lahf
xor
shr
mov
outs
mov
mov
cmp
sbb
das
in
fcomp
pop
mov
outs
mov
inc
(bad)
mov
jecxz
push
pop
or
ins
sub
mov
jecxz
shl
add
lea
scas
cmc
(bad)
out
cmp
nop
pusha
pop
in
xor
pop
or
push
cmc
adc
adc
out
pop
das
test
icebp
sahf
leave
xchg
fbstp
lods
xchg
(bad)
sahf
stos
xchg
fxtract
rol
xlat
pop
sub
jb
jns
push
adc
icebp
dec
push
mov
jo
ret
xor
mov
ror
fldenv
mov
xor
sub
std
cmp
add
xlat
nop
dec
pop
dec
jns
xchg
push
and
aad
je
or
mov
mov
cmp
and
sbb
hlt
xor
xor
shl
adc
imul
call
pop
jmp
cmc
test
ret
mov
sub
lds
mov
addr16
sub
xchg
dec
jb
ins
mov
add
adc
add
pop
push
jle
jbe
xchg
inc
and
sub
mov
jecxz
rcl
add
(bad)
retf
scas
fldcw
inc
cdq
fsub
mov
leave
push
cld
sbb
sbb
cs
(bad)
mov
sbb
mov
outs
jg
test
jae
icebp
jbe
inc
or
aad
mov
popa
ds
das
retf
push
lock
div
outs
stos
mov
push
cmp
pop
xchg
clc
adc
sub
push
(bad)
out
adc
pop
out
test
and
or
mov
cli
std
pusha
clc
sub
or
(bad)
pop
pop
and
stc
jle
cmp
jp
ins
enter
push
pop
rcr
outs
dec
outs
std
and
push
outs
add
cmps
push
push
mov
sub
nop
add
jo
sbb
lods
mov
imul
inc
retf
sbb
sbb
leave
inc
rol
mov
stos
inc
mov
fdivr
outs
(bad)
dec
lds
cdq
dec
mov
(bad)
pop
mov
into
xchg
retf
mov
dec
sub
ja
shl
pusha
fisttp
movs
xor
cdq
shl
cmp
lea
stos
cld
pusha
jmp
cmps
xchg
(bad)
mov
push
mov
std
add
cmp
xor
jecxz
xlat
shr
dec
repnz
clc
jbe
dec
mov
mov
or
emms
or
daa
adc
inc
cmc
in
jb
mov
fdivp
out
fsub
sbb
cmc
or
repnz
xchg
test
mov
jecxz
aad
jbe
pop
loopne
into
sub
mov
mov
sub
aaa
cmp
push
in
dec
pushf
fisttp
popf
retf
inc
sub
(bad)
(bad)
test
mov
out
nop
fs
out
sahf
aas
pop
mov
cmp
or
dec
inc
xlat
inc
xchg
and
pop
rcr
iret
dec
xlat
inc
sahf
movs
in
dec
push
sbb
hlt
movs
adc
lea
leave
(bad)
xor
push
cmp
mov
push
jp
repnz
add
aam
add
pop
pop
sar
fadd
inc
lds
jp
dec
mov
sub
sub
mov
xor
inc
leave
jmp
mov
sub
fidivr
push
fsub
or
dec
ja
mov
fistp
mov
pusha
dec
mov
push
pop
imul
sub
rcr
sti
mul
nop
out
sahf
ss
mov
nop
je
and
push
xchg
push
and
repnz
xadd
cwde
cmp
add
cmps
jp
add
scas
sahf
aaa
push
pop
and
mov
jbe
stos
idiv
cli
lods
jge
fs
shl
shl
pop
outs
mov
inc
arpl
dec
xchg
push
xchg
shl
sbb
push
fst
imul
(bad)
fild
add
pop
sar
mov
outs
add
(bad)
jg
xchg
fdiv
adc
mov
pop
pop
cmp
ds
inc
inc
mov
sbb
jnp
xchg
fdivr
jge
sti
add
mov
stos
popf
and
loopne
push
std
cmp
sbb
or
ss
inc
in
retf
leave
int3
xchg
clc
mov
mov
data16
mov
in
outs
mov
imul
jnp
mov
adc
ins
xchg
mov
xchg
mov
aad
pop
push
dec
cmps
fistp
add
mov
mov
in
stos
push
out
push
jbe
aas
mov
cmp
fnsave
jb
push
hlt
into
mov
mov
sbb
cdq
xor
lahf
and
push
or
sahf
rcl
mov
fdivr
cmps
lahf
jl
mov
retf
push
push
fbstp
mov
shl
mov
in
dec
mov
movs
and
jmp
jp
lea
ret
js
or
push
push
daa
pop
movs
push
dec
fldcw
xlat
jle
add
dec
addr16
out
shl
aaa
xor
or
xchg
inc
xor
out
into
mov
das
outs
mov
or
outs
pop
jg
rcr
mov
adc
je
push
(bad)
mov
in
nop
push
sub
push
push
sahf
test
cmp
or
mov
(bad)
mov
mov
jae
dec
mov
mov
(bad)
fist
cmovnp
or
cmp
inc
icebp
in
bound
xchg
jbe
fisubr
sti
cvtpi2ps
mov
popa
xor
add
fcom
jmp
mov
xor
lock
retf
cdq
bound
sbb
rol
add
pop
popf
or
cwde
int3
mov
sub
test
repz
mov
lods
idiv
test
ins
rcl
ds
ja
in
push
dec
jp
mov
leave
sub
push
bound
pop
ret
mov
fstp
inc
xor
rcr
imul
xchg
inc
pop
mov
std
(bad)
out
cli
add
ins
fwait
add
es
icebp
sbb
push
(bad)
call
pop
rol
sbb
movs
dec
(bad)
jbe
pop
jmp
popf
pop
sub
xor
mov
add
push
std
je
and
ror
adc
push
jae
stos
or
jb
in
cmp
sahf
cli
rol
jnp
ror
call
pop
fisub
ins
jecxz
into
test
retf
jmp
mov
movs
inc
nop
jo
add
aaa
xrelease
mov
xchg
adc
out
rcl
test
cmp
mov
fsub
pop
jge
adc
loope
or
xchg
mov
sahf
sub
mov
xor
mov
movs
cmp
sbb
out
xchg
div
lahf
push
enter
jae
(bad)
out
leave
jnp
call
test
cmp
and
repnz
call
cli
out
jo
fimul
lahf
xchg
cmp
mov
inc
jnp
push
icebp
mov
cmp
dec
clc
cmp
popf
push
es
lds
cwde
pop
sbb
cmc
push
inc
rol
and
inc
out
ss
pop
je
sti
mov
mov
aad
in
cmps
sbb
in
in
(bad)
mov
jl
pop
fld
ror
scas
das
sbb
aam
or
(bad)
pop
js
enter
cwde
popf
cmp
mov
jno
push
pop
fucomip
push
hlt
cmp
or
mov
pop
inc
(bad)
nop
pop
lods
inc
clc
out
dec
cwde
or
mov
daa
cs
in
popf
stos
fisttp
(bad)
fbstp
pusha
idiv
out
int
dec
push
lahf
mov
jb
out
std
and
jle
gs
jo
sbb
adc
in
jle
mov
into
push
(bad)
dec
(bad)
add
jne
jno
jb
repnz
cmp
cli
pop
jp
loopne
scas
cmp
test
das
mov
xchg
retf
xor
into
cli
mov
inc
or
xor
push
nop
mov
pop
and
pop
fs
xor
into
push
inc
or
push
rcr
dec
fnstcw
mov
pushf
xchg
test
outs
shl
outs
adc
pusha
and
mov
cmp
jbe
cld
shl
clc
mov
mov
cli
(bad)
fst
adc
sub
pushf
outs
or
cld
mov
jle
mov
lods
xchg
jp
mov
aaa
push
data16
mov
inc
mov
jp
and
xor
loop
jae
fsub
sbb
das
(bad)
fild
sub
ret
mul
jb
ret
or
es
test
das
stos
pextrw
push
cmp
dec
push
or
xchg
fistp
pop
or
lods
mov
sub
fsub
out
fsubr
xor
fcos
popf
fidiv
retf
cdq
fcmovu
out
adc
inc
out
xor
adc
or
pop
loop
mov
xor
cmps
mov
test
jmp
jg
cmc
call
hlt
adc
loopne
xchg
mov
(bad)
rcl
cmp
push
dec
xchg
test
dec
(bad)
hlt
cmp
pop
loopne
add
ror
loope
xchg
imul
sbb
fwait
xchg
clc
inc
cmp
mov
faddp
fmul
push
mov
gs
or
sub
mov
or
push
jbe
sbb
xor
loopne
lea
mov
sub
dec
rcr
fmul
popf
aam
stos
jnp
mov
(bad)
(bad)
mov
sbb
jmp
(bad)
frstor
imul
ins
or
fild
cmp
dec
pop
test
pop
scas
sar
xchg
add
(bad)
xor
dec
not
xor
retf
stos
mov
pop
loopne
pop
and
xor
mul
jnp
xchg
mov
test
sub
fdiv
inc
mov
mov
fcomp
in
ja
(bad)
xchg
mov
(bad)
sti
add
push
mov
cs
pop
jno
sub
mov
sub
(bad)
fild
push
dec
ins
xor
mov
arpl
or
nop
lods
retf
popa
xchg
add
xlat
add
or
(bad)
mov
sub
iret
pop
mov
pop
adc
int3
cmp
xchg
push
frstor
add
(bad)
jno
arpl
(bad)
sub
pop
xor
out
or
cmp
mov
(bad)
sub
and
push
bound
fbld
int3
dec
hlt
and
push
ja
jl
sbb
stos
popa
test
shr
imul
je
dec
mov
cmp
mov
dec
jl
loop
xchg
pop
daa
sub
test
into
push
scas
xlat
mov
jecxz
jmp
neg
aaa
idiv
loope
mov
test
test
jnp
mov
or
in
and
(bad)
jp
mov
div
les
ins
ret
inc
(bad)
fst
or
adc
pop
push
inc
lds
dec
pushf
out
test
sub
out
stos
ins
push
mov
pusha
push
xor
lahf
jl
out
inc
(bad)
pop
mov
mov
sti
pop
cmps
push
jecxz
mov
cld
in
movs
adc
xchg
xor
mov
xchg
in
in
cmps
(bad)
ficomp
out
cld
pop
into
das
inc
or
(bad)
mov
fcomp
push
fcom
add
jo
xor
test
out
dec
scas
push
leave
(bad)
push
sub
dec
repnz
clc
jb
scas
shl
mov
popa
fcom
push
or
sub
mov
pop
fadd
fcomp
xchg
mov
or
cmp
adc
gs
cwde
idiv
test
cwde
jmp
fldpi
ss
sbb
cmp
and
test
mov
sbb
jae
sti
xor
mov
xor
sub
icebp
dec
mov
add
in
fisub
adc
leave
mov
icebp
mov
scas
bound
push
nop
cs
out
mov
call
stos
jp
stc
mov
mov
rcl
or
std
lahf
jmp
cdq
cwde
push
repnz
iret
mov
mov
cwde
(bad)
cli
adc
cmp
sbb
and
(bad)
movs
mov
jnp
xchg
mov
or
scas
pop
mov
pushf
dec
add
xor
cmps
sbb
(bad)
imul
or
out
push
xlat
fstp
fmul
pop
mov
and
ds
cmp
ins
repnz
mov
hlt
ins
(bad)
pop
sbb
cmps
mov
mov
in
mov
push
stos
sahf
pop
(bad)
ins
imul
push
sub
scas
call
cdq
mov
aaa
test
add
cmp
xor
mov
fmulp
shr
in
push
push
lods
pop
jmp
sbb
cmps
ficom
sub
sbb
(bad)
xor
sbb
(bad)
ja
or
jno
icebp
inc
jg
stos
push
pop
and
sbb
push
jno
and
push
jb
dec
pop
and
sub
mov
(bad)
ficom
lods
fcmovnbe
add
push
xor
clc
rcl
push
leave
dec
and
sahf
fisubr
or
mov
lods
out
fadd
jg
inc
sbb
cmp
sub
mov
outs
sub
push
push
jg
xchg
cdq
(bad)
jnp
lods
cmps
inc
(bad)
repz
std
cmp
xchg
cmp
adc
dec
repz
fcmovu
pop
or
fmul
mov
bound
xor
dec
adc
add
sbb
sub
lahf
xchg
test
sub
loopne
xchg
jge
xchg
dec
pop
xchg
ret
ss
imul
out
xor
jmp
xor
ret
je
repz
fisttp
pop
int
arpl
add
sub
mov
setno
or
imul
or
sbb
mov
jns
push
pop
jmp
push
adc
adc
push
cmps
mov
jns
div
fwait
retf
add
and
adc
popf
dec
dec
stc
pop
pop
xchg
rol
mov
mov
jp
jmp
gs
adc
add
ficom
cmc
jmp
inc
into
xchg
retf
(bad)
fmul
mov
mov
cmp
sub
add
pop
enter
sub
mov
imul
xchg
push
push
jg
imul
aas
repz
xor
enter
(bad)
pop
int3
bnd
pop
xlat
bound
xchg
mov
jnp
cmp
ret
test
dec
ret
fist
pop
int3
(bad)
mov
mov
push
(bad)
mov
shl
add
aaa
fucomp
mov
jecxz
ret
mov
add
jb
add
sti
(bad)
mov
clc
fmul
mov
pop
dec
ds
mov
lods
mov
pop
jmp
(bad)
xchg
cwde
sub
fsubr
scas
test
cwde
mov
push
pop
sub
dec
sti
in
jl
mov
sub
mov
mov
add
outs
and
in
outs
jmp
pop
imul
pop
dec
outs
xlat
out
idiv
aas
ret
mov
leave
(bad)
movs
adc
repz
fistp
sbb
cmps
gs
push
dec
cwde
add
cmps
cmp
pushf
inc
retf
cmp
daa
xor
push
jge
jne
nop
leave
xor
inc
cdq
nop
int3
mov
and
into
not
sub
scas
xchg
sar
add
aad
mov
cld
movs
cmovp
in
in
and
jb
jne
cwde
arpl
xor
leave
xchg
pop
jmp
inc
mov
jne
jle
test
dec
mov
ins
inc
xor
adc
mov
repnz
mov
mov
pop
xor
sub
adc
arpl
mov
int3
adc
ins
cmp
ret
(bad)
ds
xchg
into
mov
pushf
sub
into
sub
lock
cmp
lahf
fisttp
dec
adc
clc
fst
xchg
mov
rol
mov
imul
pop
fwait
xchg
imul
xor
aad
fs
sub
and
jmp
push
mov
xor
add
daa
pushf
lods
dec
or
jb
rcl
mov
sub
inc
xchg
repz
mov
sbb
mov
pop
mov
xchg
mov
and
retf
inc
stc
cmp
mov
test
or
cmp
jp
ficom
sub
daa
pop
ja
mov
rol
lea
push
adc
mov
dec
aas
in
pop
in
outs
add
(bad)
jns
push
jb
sub
push
fucom
jmp
push
cld
stc
scas
aaa
repz
jge
xchg
jno
cdq
and
icebp
aas
sar
jmp
fld
loope
fs
sub
scas
push
ins
xchg
retf
mov
sbb
or
adc
push
fdivr
jl
xlat
cli
pop
and
jge
jne
adc
inc
(bad)
sub
(bad)
jmp
xchg
xchg
and
(bad)
jp
pop
push
jle
fsub
sar
data16
movs
sbb
xor
mov
leave
cs
xchg
int
jge
imul
or
xor
and
push
out
add
inc
pop
les
ret
pop
into
stc
mov
jge
mov
mov
or
cmps
mov
(bad)
or
movs
jg
cmp
xchg
dec
add
shl
into
cmp
ret
dec
retf
add
xor
jns
fwait
dec
outs
push
loope
jle
stos
inc
fisubr
lods
sbb
adc
cld
nop
pop
push
cmp
inc
shl
inc
adc
inc
or
jno
dec
test
pop
fbstp
jecxz
nop
mov
push
mov
cdq
mov
lahf
(bad)
in
ficomp
pushf
xor
jb
out
pop
dec
lods
add
lea
xchg
and
jo
mov
mov
jns
jmp
pop
push
mov
out
mov
xchg
in
cmps
lock
les
(bad)
aad
call
imul
mov
xor
push
repz
jns
xlat
mov
out
cmp
adc
fisttp
jmp
in
sti
cdq
aas
or
dec
rcl
add
inc
or
and
pop
push
mov
jecxz
stos
test
xchg
sti
fcom
(bad)
cli
pusha
sub
ds
std
scas
ja
test
push
adc
retf
pop
inc
cmp
into
rcl
xchg
dec
movs
repz
pop
push
jg
retf
gs
add
sbb
repnz
or
pop
lods
imul
popa
mov
xor
mov
stc
inc
fisub
mov
sbb
loopne
push
ret
jbe
mov
add
push
lds
lock
dec
stos
movs
pop
fld
enter
add
mov
jg
jnp
aad
xchg
push
dec
add
es
and
sub
or
in
mov
out
push
ret
cmp
fwait
mov
dec
add
inc
cmps
outs
jmp
aad
mov
shl
add
xchg
stc
in
sub
dec
and
or
cld
out
sar
sub
test
adc
mov
push
sahf
sub
mov
push
and
push
push
adc
cdq
mov
and
pop
cmp
aad
or
ret
and
dec
sti
add
fnsave
xor
xor
pop
fwait
mov
push
dec
int
je
into
jl
ja
pop
jb
movs
(bad)
and
iret
pusha
xchg
mov
push
or
xchg
push
lods
test
sti
cmp
xor
mov
arpl
arpl
cmc
lods
push
dec
gs
pop
and
ins
jge
cmp
or
xchg
outs
test
and
xchg
(bad)
jnp
inc
jo
and
movs
pop
scas
mov
push
jl
sub
into
and
aad
pushf
push
adc
xor
xchg
inc
ficomp
and
xor
push
inc
push
inc
out
cwde
pop
loop
fs
xor
cld
push
mov
push
jp
jmp
mov
sahf
cmp
aaa
or
repnz
cmps
sub
xor
stos
ficom
fs
nop
std
out
mov
cs
adc
jae
jmp
inc
jl
pushf
iret
xchg
pop
(bad)
fisubr
push
adc
nop
ret
stc
or
and
movs
out
retf
sub
mov
fdiv
cmp
inc
sub
loopne
fwait
test
xor
add
and
jmp
clc
jge
clc
pop
sti
inc
das
scas
cmp
fistp
mov
pop
jg
lds
cmp
mov
jnp
js
or
xchg
jns
cmp
mov
fist
(bad)
xor
xor
xchg
jno
loope
or
xchg
adc
out
xchg
cmp
nop
adc
fisub
adc
(bad)
lods
aaa
jp
ja
pop
add
dec
fnstenv
add
sbb
pop
xchg
xor
and
(bad)
outs
mov
xchg
push
je
jecxz
inc
sbb
lock
adc
cmp
fucom
loope
fdivp
mov
fiadd
jecxz
mov
retf
retf
jp
pop
mov
std
mov
popa
add
retf
call
jnp
pop
adc
sti
push
sub
jbe
out
les
popf
cmp
aam
repnz
or
mov
hlt
push
jl
jae
mov
pop
sbb
ins
loope
xchg
(bad)
mov
dec
inc
jl
mov
cmp
pop
xchg
cmps
pop
sbb
fs
scas
mov
int3
cmp
retf
cdq
sbb
mov
inc
mov
ror
cmp
xor
lea
add
jmp
cmc
movs
or
call
mov
cmc
add
inc
out
lock
pop
test
xchg
aaa
pushf
push
shl
xor
push
mov
repnz
call
jmp
push
inc
dec
mov
add
xchg
ret
mov
cld
add
add
mov
cwde
jp
push
mov
stos
mov
pop
dec
or
inc
ret
sbb
lds
int3
outs
adc
stc
cmps
push
sub
scas
mov
push
xchg
lds
cmp
adc
push
xchg
mov
jne
into
in
dec
push
movs
into
test
es
mov
adc
jbe
loopne
mov
add
sti
add
test
or
push
inc
fadd
out
mov
xor
clc
cmp
in
je
lods
push
pop
lds
cmp
jne
and
retf
fiadd
mov
cmps
mov
maxps
gs
xor
mov
inc
mov
mov
aad
jmp
hlt
push
sub
mov
out
mov
fnstsw
popa
add
les
ret
sar
ins
add
add
(bad)
lea
cld
xor
add
test
sub
movs
xchg
add
stc
inc
out
cdq
push
bt
div
repz
(bad)
call
in
jmp
cwde
das
leave
mov
sbb
retf
inc
(bad)
ins
jae
test
fistp
out
push
sub
je
adc
pop
jg
or
fidivr
adc
sbb
inc
mov
into
aad
and
pop
inc
fisttp
mov
sbb
push
cmp
mov
sub
(bad)
xchg
pusha
dec
mov
pop
lock
test
push
ret
ins
inc
jnp
jecxz
cld
in
cmp
std
sub
cmc
xchg
lods
mov
push
push
cs
mov
dec
add
jge
std
push
mov
and
rol
jns
outs
and
cmp
test
imul
jp
dec
(bad)
sti
retf
push
and
mov
add
test
(bad)
fwait
ins
adc
jno
push
cmc
enter
inc
dec
enter
call
scas
fldenv
out
xchg
lods
add
movs
xor
gs
out
add
imul
sub
sbb
xchg
out
test
lock
ins
add
jbe
inc
neg
sub
mov
xor
outs
add
xchg
mov
iret
or
adc
sbb
sbb
out
fcmovnbe
push
jnp
adc
ja
xor
mov
test
add
jne
retf
mov
stos
mov
cmp
pop
pop
fidiv
enter
aam
xor
dec
xchg
push
fwait
cli
leave
std
sbb
pop
and
dec
mov
xor
cmps
cmp
push
sbb
and
mov
das
add
sub
push
push
mov
jmp
dec
cmc
retf
mov
push
inc
(bad)
dec
rcr
aaa
(bad)
adc
mov
in
pop
dec
xor
retf
(bad)
xor
pop
jns
dec
stos
jae
ins
mov
in
sbb
js
into
adc
je
test
hlt
and
xchg
mov
sbb
cmp
xor
imul
jp
mov
in
pushf
push
push
dec
xor
mov
call
push
rol
nop
add
mov
mov
dec
hlt
scas
jno
out
sbb
fs
cmp
pusha
sub
mov
imul
inc
in
bound
not
(bad)
ror
out
mov
and
addr16
das
mov
adc
lods
data16
jo
xor
push
mov
loop
xor
inc
dec
(bad)
adc
xor
call
or
inc
mov
shl
mov
(bad)
mov
adc
imul
rcl
nop
aad
pop
fucomip
rol
dec
jno
movs
(bad)
fsub
dec
jge
in
and
mov
pusha
and
jb
mov
repnz
loop
clc
int
adc
scas
or
rcr
mov
add
imul
push
popa
int3
je
shl
loopne
ror
arpl
fsubr
lock
or
xchg
out
mov
ss
sar
dec
out
xchg
movs
add
cli
mov
les
or
inc
inc
dec
push
xchg
out
jo
call
(bad)
test
push
pop
xor
lea
jg
xchg
sub
and
xor
mov
add
movs
mov
cwde
call
jnp
mov
call
jo
test
pushf
adc
sub
cmp
(bad)
push
stos
mov
fwait
mov
cmp
retf
sbb
fadd
xchg
mov
(bad)
test
jb
cmc
jns
mov
popf
push
jge
jnp
(bad)
xchg
in
adc
sub
add
xchg
jns
xchg
add
mov
mov
cmp
mov
lods
cmp
or
inc
and
stos
and
push
mov
or
stos
hlt
and
xlat
xchg
and
(bad)
retf
xchg
push
shr
mov
(bad)
mov
xor
sbb
jbe
stos
cmc
sbb
in
jg
lahf
mov
sub
repnz
out
out
fs
mov
pop
xchg
cs
sub
sbb
mov
or
imul
jmp
test
jmp
xchg
push
popa
dec
adc
push
xor
inc
cs
push
cwde
or
nop
dec
jg
cmp
xchg
popa
(bad)
push
ret
xor
sahf
mov
sti
and
push
jp
scas
sbb
stc
test
test
retf
mov
scas
test
adc
aam
idiv
and
sub
pushf
jno
mov
sbb
cmp
daa
in
mov
into
xchg
ins
add
push
loopne
nop
inc
loopne
aad
nop
div
jmp
mov
lea
call
xlat
test
cmp
(bad)
mov
ret
mov
push
sahf
adc
fild
adc
cli
add
(bad)
dec
inc
add
and
ins
in
out
and
loop
dec
or
rcl
cs
pop
push
ret
dec
rcr
push
xchg
sbb
fmul
loope
jb
dec
or
inc
push
mov
jecxz
les
pop
idiv
inc
test
adc
popf
xlat
xchg
stos
sbb
popa
sub
aas
and
mov
push
repnz
or
mov
addr16
aaa
fdivr
adc
dec
sub
inc
add
out
sub
add
jb
enter
lea
mov
clc
add
sub
jbe
lods
enter
cdq
sub
addr16
push
stc
mov
mov
cmp
push
out
aaa
leave
or
jl
pslld
add
dec
xor
out
xor
icebp
xchg
retf
sti
dec
or
out
mov
cli
mov
ret
mov
out
inc
mov
add
cmp
xabort
jle
jae
neg
int
ds
daa
cmp
(bad)
xor
cli
into
jmp
pop
push
mov
sbb
fsub
gs
inc
mov
loopne
xchg
rcl
or
call
jmp
push
les
imul
add
inc
cmp
lahf
mov
sub
les
shr
sub
add
clc
sub
repnz
push
clc
mov
js
ds
dec
xor
mov
(bad)
lods
inc
je
sub
jle
aas
adc
and
or
mov
jecxz
outs
inc
pop
inc
stc
cmp
xchg
iret
mov
cdq
(bad)
fisttp
mov
dec
in
ficom
fnsave
idiv
jle
inc
add
in
add
int
mov
mov
push
push
ins
dec
dec
or
cld
jecxz
sbb
cmps
test
psrlw
jl
call
dec
jl
cmp
mov
shl
pushf
dec
fcom
push
iret
mov
dec
mov
push
mov
adc
adc
add
arpl
mov
pop
popf
xlat
add
and
pop
test
fimul
mov
mov
fnsave
xchg
scas
sbb
fidivr
jg
mov
ficom
nop
stos
icebp
out
xchg
shl
adc
dec
movs
aas
in
xor
xor
pop
mov
mov
ja
jmp
cdq
sbb
popa
jno
xchg
(bad)
sbb
in
fsub
mov
mov
pop
gs
push
xor
add
jnp
dec
ret
sbb
in
jg
int
add
in
repnz
mov
mov
sbb
inc
pop
adc
xchg
es
ret
out
arpl
jg
mov
aad
or
pop
push
cdq
out
pop
addr16
inc
inc
mov
push
sbb
xchg
hlt
into
push
xchg
mov
aaa
stc
mov
(bad)
cmp
cwde
fs
mov
es
jne
cdq
mov
mov
add
dec
xchg
mov
mov
mov
popf
xchg
mov
xor
mov
sub
out
test
nop
mov
leave
jbe
cmp
adc
mov
add
jne
add
inc
sbb
adc
jbe
retf
and
sbb
pop
hlt
mov
or
cwde
in
pop
or
push
inc
std
and
jns
jae
xchg
xor
sub
aam
fstp
jne
hlt
mov
shr
inc
or
pushf
out
jmp
push
stos
push
into
test
sub
or
movs
loope
xor
jns
icebp
(bad)
cld
dec
rcr
jmp
inc
pop
dec
dec
push
push
mov
xchg
jg
push
add
icebp
popa
mov
lahf
out
fsubr
bound
in
imul
ins
adc
dec
ins
push
icebp
sub
sub
out
loopne
mov
imul
pop
xchg
call
jbe
xchg
push
repz
mov
into
ins
jge
mov
sbb
daa
xor
cmp
out
popa
sbb
mov
xor
sbb
pop
enter
out
adc
add
lock
sbb
cmp
dec
pop
shr
stos
jb
test
gs
mov
sbb
xchg
mov
(bad)
xchg
push
stos
inc
push
xchg
clc
mov
add
pop
pop
sub
out
je
mov
imul
jo
pop
cmp
adc
mov
cmp
or
xor
shl
cmp
sbb
xchg
retf
adc
cmp
or
jl
outs
ret
sahf
mov
not
push
pop
aad
dec
scas
(bad)
dec
add
push
push
aas
and
sbb
sbb
fs
hlt
pop
(bad)
sti
jmp
aad
adc
icebp
push
mov
push
fsub
xor
shr
data16
push
xor
inc
lds
je
mov
pop
cs
test
ja
cmps
sahf
mov
rcl
adc
push
loope
xor
inc
aas
hlt
mov
xchg
xor
jnp
sbb
and
pop
xchg
add
sahf
push
xchg
pop
jg
imul
or
xor
jns
mov
mov
pop
xchg
sub
cmps
es
push
mov
test
test
adc
inc
pop
in
ror
movs
xchg
pop
adc
sti
mov
in
sub
pop
gs
jne
inc
rol
nop
jnp
sub
repnz
not
or
dec
sti
aaa
fnsave
jb
call
(bad)
fistp
test
aas
xchg
adc
ja
pushf
pop
retf
(bad)
js
mov
outs
pop
pop
add
adc
push
arpl
jb
dec
hlt
outs
xor
out
fs
out
xor
inc
mov
fidiv
push
cmc
out
dec
test
cmc
dec
outs
adc
jns
adc
push
sbb
jb
jg
sub
jle
add
stc
ja
lods
inc
in
inc
test
(bad)
cmc
scas
ret
iret
adc
jl
shr
in
iret
neg
sub
jp
ret
fild
jmp
inc
xchg
ds
mov
sbb
sub
aaa
jg
inc
push
arpl
or
(bad)
out
xchg
push
cmp
dec
pushf
mov
lock
mov
pop
shl
leave
jne
in
js
out
xchg
mov
xor
mov
sub
mov
and
lods
imul
js
push
int3
idiv
(bad)
in
(bad)
shl
loope
(bad)
repnz
adc
mov
addr16
fisubr
and
stc
jmp
ret
shl
test
or
push
mov
mov
mov
adc
pop
aam
mov
cmp
dec
xor
lahf
bound
pop
xor
jo
mov
hlt
xchg
xchg
jo
inc
xchg
stc
aad
fwait
xchg
push
mov
pop
mov
push
xor
aad
sar
popf
fimul
jmp
ret
jbe
add
outs
enter
xchg
iret
call
(bad)
ss
cmp
xor
(bad)
lock
mov
sub
mov
lea
xor
(bad)
stc
hlt
popa
pop
inc
stos
imul
loope
ror
jmp
je
mov
out
test
sbb
pop
inc
dec
aam
cld
(bad)
scas
push
dec
mov
dec
push
or
fnsave
xor
mov
fisubr
call
aaa
pop
mov
(bad)
aam
je
loopne
ret
xor
(bad)
sbb
pop
add
mov
in
retf
sar
add
mov
stc
fisub
fisubr
fisub
mov
jae
push
dec
(bad)
out
fst
outs
adc
or
cmp
inc
data16
sub
jecxz
cld
ret
imul
in
mov
cmps
fld
push
retf
mov
fwait
fs
push
lock
out
lods
and
push
sub
jmp
fwait
loop
push
jmp
jnp
add
push
fiadd
cld
mov
push
mov
add
outs
mov
icebp
mov
push
cld
adc
(bad)
push
or
dec
clc
dec
cs
jg
std
pop
and
xor
push
xchg
jb
add
data16
adc
mov
push
push
icebp
test
jl
xlat
fwait
jle
loopne
and
outs
pop
ret
lahf
xchg
nop
pop
mov
clc
shr
and
inc
adc
(bad)
push
hlt
stc
fld
dec
sub
xchg
sbb
cs
jb
sub
mov
mov
mov
jno
jp
mov
out
shl
jmp
jmp
fwait
jno
add
je
mov
jl
push
ds
xor
hlt
mov
adc
(bad)
push
xor
or
push
xor
imul
adc
push
mov
test
into
mov
cmc
push
int3
inc
fwait
sbb
and
scas
mov
and
js
cmp
jae
(bad)
cmp
cmp
test
inc
cmp
mov
lahf
fld
dec
enter
mov
mov
mov
sub
repz
add
popa
test
mov
push
retf
ins
cmp
mov
xor
das
sub
adc
pop
jl
push
or
rcl
test
jl
jl
aaa
xor
(bad)
mov
ja
rol
call
jb
fisubr
pop
movs
int
pop
adc
inc
push
or
je
xchg
push
loopne
mov
shl
dec
jmp
and
push
sbb
pop
sbb
add
pop
les
mov
jns
int3
sti
test
pop
mov
sbb
push
int
ss
cdq
sub
xchg
std
aaa
gs
dec
hlt
add
push
js
mov
add
xchg
mov
hlt
mov
sbb
outs
popa
pushf
out
cmp
mov
(bad)
leave
and
lea
pop
repz
out
pusha
sub
adc
test
sub
(bad)
push
sub
cmc
xchg
mov
fisttp
out
stos
into
mov
push
ss
xchg
cmp
retf
fnstsw
jnp
out
dec
sub
inc
sub
dec
out
sub
dec
pop
cmp
jnp
fiadd
pop
sti
xchg
lock
je
lods
lds
push
xor
or
out
arpl
scas
shl
push
add
jge
mov
pop
sub
imul
idiv
inc
(bad)
popa
imul
adc
add
stos
jbe
fwait
loope
(bad)
cdq
lahf
push
mov
int3
cmps
sti
scas
retf
and
popa
imul
cmc
jle
add
movs
adc
adc
(bad)
sub
js
test
imul
xchg
push
pop
pop
stos
cmp
sub
pop
loopne
call
and
mov
fld
nop
inc
mov
lock
lods
pop
mov
cmc
iret
(bad)
ror
push
sub
mov
sub
dec
pop
loope
lods
mov
ret
add
hlt
lods
or
ins
idiv
push
mov
and
rcl
add
dec
ficom
adc
movs
push
out
loope
and
mov
in
sub
mov
in
mov
cmc
dec
xor
adc
lods
and
rcr
and
xor
push
xchg
pushf
imul
sahf
mov
ret
lods
inc
and
jbe
pop
mov
or
jle
out
inc
test
push
dec
fs
fidivr
call
mov
sbb
rcr
and
icebp
rcr
cmp
mov
test
(bad)
mov
and
out
hlt
pushf
xchg
xchg
retf
sub
mov
push
mov
les
or
cmp
or
cmp
mov
(bad)
cli
push
(bad)
dec
jmp
xchg
(bad)
xor
fadd
push
jae
adc
xchg
add
mul
fdiv
fwait
in
and
in
cmps
mov
in
jmp
aas
lods
call
dec
loope
ret
(bad)
(bad)
aam
std
enter
ins
fldcw
and
mov
dec
and
ds
rcr
or
(bad)
rol
fstp
jcxz
jmp
xchg
rol
sub
shl
inc
xor
and
leave
mov
out
in
imul
or
xlat
dec
jl
mov
sbb
xlat
fist
stos
and
add
jno
push
cmp
sub
fcom
mov
cmp
(bad)
js
retf
div
mov
or
add
adc
push
push
outs
test
mov
jmp
xchg
shr
sbb
xor
dec
cmc
call
sbb
les
mov
rcr
pop
or
call
rol
fmul
call
and
and
fadd
pop
jge
sbb
fwait
gs
call
xor
xchg
jb
sub
icebp
movs
push
test
sub
adc
or
jmp
xchg
mov
sahf
inc
sub
push
mov
cdq
jb
or
rol
bnd
js
icebp
call
adc
mov
int3
pop
sbb
test
movs
xor
scas
int
sub
cli
dec
nop
mov
stos
sbb
mov
fs
xor
mov
jns
nop
cs
inc
and
add
sbb
fisubr
enter
lahf
mov
shl
cli
jecxz
iret
fxch
jg
ret
leave
retf
pop
stos
jmp
dec
push
add
stos
call
lods
push
stos
or
dec
stos
imul
scas
test
jecxz
hlt
out
mov
test
dec
retf
popf
(bad)
sbb
and
mov
mov
mov
call
cld
and
das
jmp
sub
cwde
cmp
or
lds
(bad)
ins
shr
call
sbb
mov
pop
xor
ds
lahf
add
add
sbb
out
mov
hlt
and
shl
in
xchg
inc
bswap
std
std
mov
xor
sti
(bad)
int3
(bad)
xor
push
fisubr
(bad)
cmp
mov
dec
push
jns
pop
cmp
neg
jbe
push
int3
inc
cs
ds
xlat
dec
sbb
and
sbb
cld
std
inc
fidivr
dec
lds
sti
add
cli
jle
jl
and
mov
test
xlat
sbb
ds
jmp
movs
xchg
es
or
fild
