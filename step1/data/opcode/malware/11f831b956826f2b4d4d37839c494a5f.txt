pop
jge
xchg
mov
in
outs
inc
adc
mov
in
ret
(bad)
and
in
stc
pushf
sbb
mov
dec
xchg
cld
cmps
je
lds
push
and
add
jmp
push
mov
lods
cmp
xchg
hlt
fisubr
mov
in
test
mov
mov
push
adc
sub
or
out
push
arpl
sub
mov
aam
cli
mov
je
cmp
inc
push
xchg
retf
stos
mov
jg
out
xchg
fbld
stos
pusha
cmps
ins
test
xor
fld
jbe
cmp
stos
jbe
ja
out
xchg
mov
jecxz
retf
js
jno
pop
mov
mov
inc
daa
pop
fwait
ins
dec
mov
xor
xor
js
ficom
mov
push
cmp
inc
add
inc
int
pop
int3
in
out
sahf
pop
xchg
popa
std
cs
lock
stos
jbe
push
xchg
jl
call
jbe
jns
mov
push
jns
rcl
idiv
pop
pop
mov
pusha
dec
call
fldenv
sbb
retf
add
jbe
ja
mov
xchg
inc
and
fstp
(bad)
xchg
mov
mov
inc
les
inc
icebp
pop
test
je
les
mov
or
ins
in
stos
push
pop
inc
gs
loope
add
cmc
sbb
mov
stc
mov
imul
outs
cmc
jnp
jg
ins
bound
inc
das
xchg
and
popf
push
sub
jl
neg
sbb
jl
mov
cld
inc
fwait
ss
jb
cmp
cmp
adc
mov
mov
js
jns
test
ins
lea
sbb
cmp
xchg
clc
test
loop
jle
std
cmc
pop
(bad)
jnp
mul
fsubr
mov
mov
mov
xchg
cmp
in
xchg
nop
jae
into
xchg
sbb
mov
inc
popa
inc
jnp
imul
ins
jo
hlt
gs
mov
jl
movs
retf
inc
pop
inc
mov
mov
cmps
add
test
fild
loop
push
out
jbe
mov
popf
es
mov
mov
mov
in
add
mul
loop
mov
mov
push
mov
xchg
imul
cmps
cld
clc
xor
jb
sub
jge
xchg
mov
icebp
cld
(bad)
daa
icebp
cmps
and
push
in
ins
add
das
hlt
xchg
call
icebp
xchg
pop
jmp
ins
imul
sbb
imul
jl
push
call
mov
stos
pop
mov
pop
mov
fwait
jbe
mov
jmp
cmps
pop
daa
xchg
sti
sbb
jle
out
xchg
sbb
sbb
fwait
or
and
aas
out
les
mov
jno
in
es
rol
js
not
lahf
js
jge
add
jno
xchg
pop
outs
icebp
movs
add
fs
repnz
mov
sbb
xchg
les
jb
rol
mov
popf
fwait
sub
(bad)
shrd
mov
in
dec
out
aam
sbb
xor
dec
rcl
xor
or
mov
pop
lods
jne
movs
xchg
in
popa
pop
mov
jle
mov
cli
rcr
hlt
cmp
or
xchg
sbb
sbb
pop
mov
pop
into
sti
push
lea
scas
sbb
cdq
push
jg
mul
mov
jge
xor
xchg
lock
or
int
xor
int3
xchg
gs
push
addr16
rcr
sub
cdq
int3
xor
out
push
or
imul
shl
mov
jmp
mov
xor
call
inc
push
(bad)
outs
popa
popa
arpl
dec
adc
mov
mov
jo
sub
fld
mov
in
push
mov
mov
inc
add
jbe
sub
movs
icebp
repz
retf
pop
add
sbb
cmp
jp
and
out
repz
aaa
mov
push
cmp
add
and
adc
(bad)
aam
dec
jle
loopne
cmps
add
xchg
out
or
push
les
mov
mov
mov
cwde
stc
in
pop
aam
(bad)
or
cmps
outs
call
sbb
push
cmp
fisub
hlt
mov
add
and
in
adc
inc
cmp
mov
or
jecxz
cmp
outs
into
cdq
cwde
jae
adc
mov
pushf
mov
sti
xchg
imul
jno
cld
xor
mov
or
pop
int
pop
mov
xchg
sub
data16
imul
or
adc
in
mov
or
pop
push
mov
js
mov
test
rcr
push
outs
inc
adc
sahf
or
retf
(bad)
mov
push
(bad)
sbb
and
xchg
sti
pop
xchg
and
pop
or
xchg
mov
add
jmp
xor
jge
jnp
sbb
loop
push
mov
fdiv
mov
test
out
mov
into
and
jmp
xor
jb
inc
loop
ss
stos
test
into
jge
or
add
fisubr
xchg
cmp
add
in
or
loop
push
nop
(bad)
nop
sbb
stos
imul
retf
(bad)
popa
scas
je
pushf
not
(bad)
out
clc
mov
mov
ror
jmp
pop
mov
js
push
mov
cmp
pop
push
pop
lods
cwde
jns
popf
enter
aaa
adc
test
fiadd
cmp
and
inc
in
adc
jns
(bad)
pop
jp
push
cld
test
inc
nop
jne
mov
aaa
sbb
mov
arpl
cmp
and
sub
test
mov
dec
xchg
pop
pop
sbb
cmp
dec
xor
retf
mov
pop
mov
jbe
movs
mov
adc
lock
cmp
or
push
xchg
fwait
test
out
cmps
mov
lods
pop
stc
adc
sbb
lds
cmp
sub
xchg
imul
mov
add
and
sub
test
jnp
cmc
xchg
xchg
mov
inc
mov
dec
jge
dec
lods
inc
push
into
adc
hlt
adc
jnp
ja
aas
nop
js
cdq
add
dec
fs
push
adc
(bad)
clc
mov
jno
aas
hlt
and
jnp
mov
add
jne
mov
arpl
dec
cmp
mov
stos
adc
out
adc
fadd
test
or
dec
fwait
sar
dec
(bad)
je
mov
(bad)
add
into
call
loope
push
jns
push
or
shl
mov
paddusb
add
adc
fild
je
mov
mov
aad
jge
retf
xor
sub
shl
xor
popa
jae
sbb
mov
jl
inc
in
jns
and
fidivr
cmps
imul
in
jno
push
cld
mov
xchg
or
test
into
movs
mov
arpl
push
outs
ret
ret
in
outs
and
fisttp
pop
stc
mov
push
shl
xor
sub
jnp
sub
dec
rol
dec
sahf
adc
test
fwait
jnp
shr
adc
jle
jmp
fld
jbe
outs
jmp
xchg
test
sub
xchg
add
cmps
jge
repnz
mov
cwde
mov
jnp
(bad)
(bad)
and
xor
fistp
data16
add
jmp
stc
mov
rcr
xor
lahf
stos
imul
shr
loop
sbb
int3
push
movs
mov
or
repnz
repz
pop
inc
in
jb
fst
scas
pop
and
or
shl
test
js
lds
out
add
dec
clc
or
jle
imul
cli
shl
cmps
(bad)
hlt
push
push
and
fldcw
(bad)
pop
add
xchg
xchg
(bad)
lea
ret
pop
fisubr
pop
lock
dec
iret
pop
adc
add
movs
dec
jno
imul
mov
or
add
jnp
or
adc
push
scas
or
in
out
imul
(bad)
sub
movs
ds
fsubr
xchg
mov
jg
sub
out
xchg
fstp
lds
pop
cmp
out
mov
cs
pushf
push
inc
adc
mov
xchg
push
mov
je
pushf
cli
xchg
jp
(bad)
jo
shr
inc
cs
dec
jp
jge
push
jg
mov
rcl
les
test
xchg
fs
push
inc
fsubr
and
verw
je
retfw
jmp
xor
loop
movs
es
and
ja
mov
xchg
jg
repnz
(bad)
mov
in
hlt
aaa
mov
add
mov
test
adc
add
jle
in
addr16
sub
mov
scas
lods
test
adc
mov
inc
xor
js
mov
sub
out
lods
das
or
adc
dec
ins
and
jmp
mov
cmps
mov
or
js
aam
fistp
or
jbe
pop
loopne
adc
pusha
xor
out
aad
xchg
adc
(bad)
jo
icebp
adc
add
pop
js
and
pop
mov
sbb
imul
out
in
push
call
dec
mov
add
out
and
xchg
and
add
sbb
inc
hlt
inc
mov
arpl
dec
sbb
xchg
jo
xchg
add
pop
push
mov
aad
test
pop
out
push
pop
pop
ftst
fst
sbb
adc
adc
test
sti
call
ffreep
or
mov
adc
out
call
mov
mov
xchg
mov
outs
in
data16
xchg
xchg
stc
mov
sbb
inc
stos
dec
or
rol
mov
and
jecxz
bound
ins
shl
add
xor
loopne
cmp
or
mov
test
sub
xchg
cmp
xchg
fisttp
cmps
in
cdq
fcmovnu
add
jecxz
scas
inc
in
mov
inc
stos
dec
dec
inc
jl
jno
stc
sub
cmc
movs
xchg
jle
movs
xor
pusha
fdivr
pop
jb
mov
popf
xchg
mov
cmps
ja
popf
xchg
and
addr16
dec
mov
mov
mov
jno
and
or
das
idiv
adc
stos
movs
out
adc
add
jns
add
jmp
push
cmc
and
mov
fadd
xchg
cld
stos
jns
dec
das
xchg
fwait
stos
das
dec
adc
popa
add
push
xor
pusha
or
into
or
sub
lock
aad
and
push
mov
sbb
in
and
out
movs
push
inc
outs
movs
sbb
fwait
add
in
push
xchg
mov
jmp
shrd
pop
inc
xor
jns
xchg
pop
mov
ret
popf
sbb
movs
xchg
inc
lods
cmc
pushf
jle
mov
add
mov
jge
or
retf
ret
arpl
fwait
add
icebp
adc
fnstcw
test
mov
cmp
das
cmp
mov
inc
mov
das
cmp
(bad)
cmp
xor
jae
movs
pop
sbb
paddusb
sbb
(bad)
mov
imul
jle
mov
addr16
fcom
sbb
cmp
repz
cmp
mov
dec
jmp
std
mov
les
jb
fcomp
push
in
(bad)
mov
gs
leave
loope
rcl
cmp
jb
dec
imul
shl
mov
mov
ror
lds
add
call
aad
pop
inc
pop
stos
adc
movs
(bad)
sbb
sub
xchg
and
cmps
push
repz
push
adc
xor
cmp
shl
xchg
fwait
(bad)
mov
dec
mov
lds
xchg
(bad)
push
push
jecxz
rcl
jl
and
cmp
js
mov
cmps
outs
repnz
stc
gs
mov
mov
push
and
lods
cmps
adc
xor
add
push
inc
xor
(bad)
push
in
adc
mov
in
inc
loope
jl
mov
pop
fwait
push
retf
enter
stc
leave
push
push
xor
cmps
pop
paddb
sahf
fisub
cmp
sub
push
cld
cmps
mov
aam
retf
(bad)
movs
(bad)
js
repz
mov
lods
mov
stos
mov
test
xchg
call
add
jbe
ret
xor
pop
es
dec
pop
push
in
add
in
lock
stc
pusha
dec
ficomp
mov
lods
pop
jge
xchg
cmp
repz
cmp
ret
push
retf
jnp
jb
aaa
sub
fist
ins
movs
push
sbb
stos
imul
adc
adc
mov
sbb
into
in
push
jmp
push
xchg
add
aas
in
pusha
out
push
scas
les
push
sub
loopne
dec
retf
neg
out
jo
push
and
mov
dec
adc
lods
icebp
repnz
outs
std
(bad)
push
in
jbe
jno
in
in
jp
or
lea
jp
imul
and
lods
or
dec
cwde
dec
bound
xchg
push
lock
stc
data16
je
adc
xchg
test
mov
mov
mov
leave
mov
out
xlat
fistp
call
adc
fstp
jae
mov
inc
call
jge
dec
mov
cmp
fxch
repz
(bad)
or
scas
jnp
cld
ins
aas
mov
cmp
test
pop
rcr
ret
push
imul
aaa
dec
es
mov
jp
movs
fwait
inc
sub
mov
add
mov
lea
push
push
jmp
outs
push
and
ins
sub
into
outs
sub
mov
sub
mov
sub
fwait
cmp
mov
cwde
mov
pop
push
add
fwait
lods
ds
cwde
and
pop
ficom
sti
arpl
je
xchg
icebp
fisub
std
pop
test
push
fucomp
loope
sahf
mov
dec
shr
movs
add
xor
and
dec
ds
(bad)
dec
(bad)
and
sbb
fisttp
and
xchg
ret
xchg
leave
xchg
dec
inc
xor
stc
arpl
and
jo
imul
cmp
aam
pop
pop
cmp
sbb
add
je
lock
loop
loope
pop
inc
fnsave
dec
(bad)
lods
adc
adc
push
out
inc
pop
rcr
and
xchg
inc
jge
mov
iret
mov
xor
cmp
inc
lock
inc
or
fs
pop
pusha
fiadd
add
mov
pop
push
cmp
or
jae
popa
fs
or
pop
xchg
inc
push
xor
shl
test
out
cs
lock
cmp
dec
xchg
jmp
mov
les
jl
rcr
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
.byte
