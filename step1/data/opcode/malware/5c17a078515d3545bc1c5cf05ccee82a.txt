lock
add
add
add
add
add
add
add
add
add
add
sbb
je
add
add
add
xor
add
add
add
and
or
jge
add
add
add
add
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
sub
add
or
add
xor
add
add
add
add
dec
inc
adc
dec
inc
adc
add
add
add
add
pop
mov
add
mov
add
push
mov
add
add
add
push
pop
push
sub
add
push
add
jnp
add
add
jnp
add
add
jge
add
add
add
fiadd
sub
push
mov
sub
mov
stc
add
add
add
add
add
push
push
add
adc
add
sbb
add
jne
add
add
add
push
mov
add
add
add
add
add
inc
add
add
pop
add
add
add
add
add
jne
add
cmp
add
dec
add
add
or
pop
js
ror
push
and
ror
push
pop
and
add
inc
add
add
add
add
dec
push
add
inc
add
add
add
add
mov
add
jp
sub
add
add
mov
add
jle
add
add
dec
push
push
outs
pop
add
add
add
add
mov
add
and
add
add
(bad)
(bad)
(bad)
fstp
xchg
add
add
add
add
xchg
add
add
add
add
fst
inc
add
add
pop
add
add
add
add
add
add
add
add
add
pusha
add
add
add
add
pop
add
add
add
add
push
add
add
add
add
push
add
add
add
add
mov
add
add
add
sub
add
sub
jle
add
add
cmc
add
add
add
inc
add
add
add
add
mov
add
and
add
add
(bad)
(bad)
(bad)
fisub
ficomp
add
add
mov
add
add
add
pop
add
add
add
add
add
add
(bad)
(bad)
call
add
add
add
add
push
pop
mov
sldt
or
and
add
add
cmp
(bad)
(bad)
dec
pop
push
or
add
or
add
add
mov
add
or
add
or
add
add
add
mov
add
add
add
add
add
mov
add
add
add
adc
add
adc
add
add
add
add
jecxz
(bad)
dec
sub
and
push
pop
and
push
pop
mov
add
add
add
add
add
add
and
add
add
mov
add
add
and
add
add
sub
or
add
or
add
add
mov
add
fcom
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
add
or
add
or
ds
(bad)
call
add
add
add
add
stos
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
xor
sub
xor
sub
add
add
add
add
sub
push
mov
sub
mov
stc
add
mov
add
add
pop
mov
add
mov
add
add
add
add
add
xor
add
add
add
add
mov
mov
inc
inc
add
add
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
mov
add
add
pop
mov
add
mov
add
add
jge
add
add
sbb
add
mov
add
adc
jbe
or
and
or
mov
add
add
add
add
add
add
arpl
add
add
mov
add
add
pop
mov
add
mov
add
push
inc
add
add
push
add
add
inc
add
add
and
add
xor
add
pop
add
add
add
push
or
pop
pop
push
push
push
add
add
pop
jge
add
add
add
add
mov
sub
push
pop
dec
xor
and
add
add
add
add
add
add
std
add
add
push
add
add
add
add
mov
sub
add
mov
sub
add
add
mov
sub
mov
stc
add
add
adc
add
add
add
add
add
xor
add
add
adc
jle
mov
mov
inc
add
add
test
add
add
add
test
add
add
mov
add
add
push
inc
add
add
push
add
add
inc
add
add
pop
add
add
add
add
add
pop
add
add
jnp
add
add
jnp
add
add
add
inc
add
add
add
add
mov
sub
add
add
add
dec
xor
and
add
add
add
add
add
add
jnp
add
add
pop
sub
add
push
and
add
add
add
add
add
mov
sub
add
add
mov
sub
mov
stc
add
mov
add
mov
add
sub
add
adc
add
add
add
add
or
add
push
add
add
add
add
mov
push
ins
and
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
add
add
sub
add
push
add
add
add
jge
add
add
add
fiadd
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
sub
add
add
add
add
add
cmp
add
adc
add
sbb
add
jne
add
add
add
push
mov
or
or
add
add
add
add
inc
add
add
pop
add
add
or
add
add
add
add
xor
add
add
add
mov
add
mov
add
push
or
or
push
add
add
add
add
add
add
push
add
add
add
add
mov
or
mov
jle
add
add
and
add
add
mov
or
movs
sub
push
and
push
add
mov
or
nop
sub
and
add
add
ficom
fimul
sub
push
mov
sub
mov
stc
add
add
add
or
add
or
add
push
add
add
(bad)
add
or
jae
add
or
jle
add
add
sbb
add
add
add
add
fs
add
add
add
fiadd
adc
push
add
push
adc
(bad)
add
add
add
mov
or
or
inc
add
add
cmp
add
and
add
and
add
mov
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
push
mov
add
add
adc
inc
add
add
mov
add
add
add
add
add
pop
and
add
add
sub
adc
adc
add
and
add
add
sub
fmul
push
jae
add
or
add
inc
(bad)
(bad)
jmp
add
add
mov
or
or
inc
add
add
adc
add
adc
inc
add
add
pop
add
add
(bad)
(bad)
dec
sub
and
add
add
sub
or
add
or
add
add
mov
or
into
sub
fsub
sub
push
inc
add
add
pop
add
add
or
add
add
add
push
add
add
add
push
add
add
adc
add
std
add
add
add
add
add
add
mov
or
retf
adc
add
add
sub
jle
add
add
adc
add
inc
adc
add
sub
and
add
add
fiadd
fiadd
fiadd
push
push
push
jle
add
add
inc
add
add
push
adc
pop
add
add
(bad)
(bad)
(bad)
call
pop
sub
add
inc
les
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
aam
add
test
add
dec
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
dec
add
add
add
add
add
add
add
add
add
xor
add
add
add
ss
sbb
ss
sbb
add
add
add
add
add
add
add
mov
sub
mov
stc
add
pop
mov
add
mov
add
push
mov
add
add
sub
add
sbb
add
add
mov
or
or
add
add
add
add
add
add
jnp
add
add
rol
fst
add
add
(bad)
add
add
inc
add
add
pop
add
add
or
add
add
add
add
add
or
add
add
adc
and
add
add
adc
and
inc
and
add
add
sub
adc
pop
pop
adc
and
mov
mov
mov
add
add
add
add
add
push
mov
add
add
and
add
add
sub
and
add
add
(bad)
add
add
(bad)
add
add
inc
add
add
pop
add
add
or
add
add
add
xchg
add
add
add
add
adc
push
add
or
add
jb
add
jo
lea
add
add
or
or
adc
pop
add
or
add
adc
sbb
add
jo
adc
sbb
add
add
sbb
add
mov
add
or
add
add
add
pop
add
or
add
jo
sbb
add
jge
add
add
add
add
mov
or
jno
(bad)
call
add
add
sbb
add
sub
and
add
add
(bad)
(bad)
jmp
add
add
jo
jge
add
jnp
add
add
mov
add
sbb
add
adc
add
(bad)
(bad)
jmp
add
add
add
mov
or
sbb
(bad)
(bad)
ficomp
ficomp
inc
add
add
sbb
add
adc
inc
add
add
add
add
inc
add
add
add
push
add
add
adc
outs
sbb
pop
pop
mov
add
mov
add
and
add
mov
or
(bad)
cmp
sub
add
or
and
add
add
sub
or
add
and
add
add
cmp
(bad)
(bad)
call
lea
and
add
add
cmp
inc
add
add
pop
add
add
or
add
add
add
cmp
add
daa
add
add
add
push
push
add
add
pop
sar
add
add
jb
add
jo
or
add
add
add
mov
or
ret
loop
add
push
sbb
add
sub
pop
pop
push
or
add
add
mov
or
sahf
sub
and
add
add
fnsave
fnsave
adc
jle
add
add
and
adc
add
or
sbb
add
jge
add
add
jg
add
add
sbb
add
jb
add
jo
pop
add
or
add
add
and
add
pop
sar
add
add
mov
add
fld
or
add
or
add
sar
add
add
jb
add
jo
or
add
sbb
add
jb
add
jo
sbb
add
jge
add
add
jb
add
jo
lea
add
add
or
or
jb
add
jo
adc
sub
add
or
add
add
mov
fnsave
add
mov
sub
mov
stc
add
outs
and
add
or
add
add
mov
or
xor
(bad)
(bad)
cmp
call
pop
movs
sbb
add
add
add
es
adc
add
add
sub
mov
add
add
mov
add
add
add
add
jge
add
adc
add
add
mov
dec
add
push
adc
add
add
or
pop
popa
add
adc
add
sbb
add
add
add
adc
inc
add
add
push
add
add
inc
add
add
xchg
add
add
add
add
add
add
or
jb
add
jo
lea
add
add
pop
push
add
add
sbb
add
mov
add
jo
pop
sbb
add
jo
pop
sub
add
or
add
add
jb
add
jo
or
add
sbb
add
add
add
sbb
add
sub
add
or
add
add
jb
add
jo
jnp
add
add
pop
add
or
add
add
add
add
add
sti
add
add
jge
add
add
add
add
mov
cmp
(bad)
inc
sub
and
add
add
(bad)
jmp
add
and
add
pop
sar
add
add
add
add
mov
cmp
(bad)
jmp
add
or
or
inc
inc
add
add
adc
add
add
add
adc
add
add
mov
add
add
and
add
add
(bad)
(bad)
fiadd
fiadd
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
inc
sbb
add
add
adc
add
add
add
adc
add
adc
add
adc
add
add
add
add
add
or
add
add
sub
add
or
add
adc
add
cmp
add
add
add
mov
sub
mov
stc
add
arpl
das
pop
and
das
pop
mov
add
add
add
add
add
push
mov
add
add
pop
mov
add
mov
add
sub
add
adc
add
and
add
add
add
add
push
add
or
jle
add
or
sbb
add
add
sub
add
push
add
add
or
adc
sbb
add
add
add
adc
mov
push
adc
inc
add
add
add
add
push
inc
add
add
pop
add
add
push
inc
add
add
xor
add
push
add
add
add
and
add
pop
or
or
add
add
pop
or
add
pop
pop
or
add
add
add
mov
push
sub
push
jle
add
add
push
and
add
add
sub
pop
pop
sbb
ror
and
add
add
sub
and
add
add
fnstsw
fnstsw
inc
add
add
cmp
add
adc
inc
or
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
pop
pop
or
add
or
imul
add
mov
push
sub
add
adc
adc
pop
xchg
add
xchg
popa
add
pushf
add
add
pushf
and
add
mov
push
cmp
(bad)
(bad)
cmp
sub
add
pop
adc
add
add
mov
push
cmp
(bad)
call
mov
add
mov
add
cmp
or
add
mov
push
cmp
(bad)
inc
mov
push
and
add
add
(bad)
(bad)
jmp
mov
add
inc
or
add
sldt
add
sldt
add
or
add
push
add
add
pop
or
add
es
add
add
or
add
add
mov
push
cmp
(bad)
(bad)
jmp
push
jle
add
add
push
add
add
or
add
or
add
or
add
or
add
or
add
sldt
add
pop
or
add
push
add
add
sldt
add
or
add
sldt
add
dec
pop
or
add
sub
fisubr
and
add
add
(bad)
(bad)
call
add
mov
fdivr
(bad)
jmp
add
adc
cmp
(bad)
(bad)
cmp
mov
pop
lea
and
add
add
(bad)
(bad)
jmp
and
add
(bad)
(bad)
inc
cmp
(bad)
(bad)
jmp
add
add
mov
push
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
(bad)
jle
add
add
sldt
add
add
inc
or
add
sldt
add
push
add
add
jle
add
add
jle
add
add
or
add
es
(bad)
(bad)
call
or
sub
mov
stc
add
pop
add
add
std
(bad)
(bad)
cmp
(bad)
call
inc
add
add
pop
add
add
push
inc
add
add
jo
add
lea
add
pushf
add
add
add
add
adc
push
pop
cs
push
add
add
sldt
add
add
inc
or
add
add
add
add
adc
and
mov
inc
inc
add
add
adc
add
add
push
mov
add
add
and
add
add
(bad)
(bad)
jmp
add
add
add
dec
inc
or
add
add
add
mov
push
cmp
jmp
add
add
add
mov
push
cmp
(bad)
(bad)
fld
std
(bad)
jmp
fld
std
(bad)
dec
sub
add
add
add
add
add
add
add
cs
add
adc
add
add
mov
dec
inc
add
add
add
add
xor
add
add
add
add
xchg
push
adc
add
add
add
inc
add
add
add
add
aas
sti
jle
and
sti
jle
mov
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
push
mov
add
add
pop
mov
add
mov
add
add
add
add
add
xor
add
add
add
add
mov
add
mov
add
and
adc
inc
inc
add
add
add
add
or
add
add
add
mov
sub
mov
stc
add
push
mov
add
add
add
jge
add
add
sbb
add
adc
add
or
add
push
mov
adc
adc
add
add
add
add
inc
add
add
pop
add
add
adc
add
add
add
add
add
add
dec
add
add
or
push
jle
add
add
pop
or
add
pop
push
pop
push
jle
add
add
push
add
add
or
add
pop
push
or
add
add
mov
adc
mov
and
add
add
and
add
add
mov
adc
mov
sub
push
add
add
add
add
mov
adc
mov
add
add
add
mov
adc
jl
(bad)
(bad)
ficom
fimul
sub
push
mov
sub
mov
stc
add
push
inc
add
add
sub
add
adc
inc
or
add
xor
add
fiadd
add
ins
add
add
add
add
add
add
add
add
add
and
add
adc
adc
sub
add
or
add
add
cmp
add
add
adc
jle
add
add
sldt
add
add
inc
or
add
push
pop
pop
rcl
push
adc
pop
pop
rcl
push
jle
add
add
push
pop
or
add
push
pop
dec
inc
or
add
popa
add
add
fstp
add
push
inc
add
add
and
add
adc
inc
pop
add
add
add
add
add
add
add
add
add
add
add
add
push
adc
push
adc
and
add
add
adc
sbb
push
and
add
add
sub
adc
pop
pop
adc
and
add
add
sub
and
add
mov
adc
mov
add
add
and
push
add
add
sub
adc
pop
pop
adc
and
adc
cmp
(bad)
jmp
add
add
add
mov
adc
imul
add
add
(bad)
add
add
add
imul
adc
add
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
call
inc
add
add
pop
add
add
adc
add
add
add
sub
add
add
add
push
jle
add
add
lods
add
add
add
or
push
or
add
adc
or
add
or
test
add
push
and
add
add
mov
adc
test
add
add
pop
or
add
add
add
mov
adc
xchg
sub
and
add
add
fiadd
fiadd
or
adc
lea
add
add
std
(bad)
(bad)
cmp
sldt
add
push
add
add
add
or
add
sldt
add
push
add
add
add
inc
or
add
push
add
add
aad
add
popa
or
add
sldt
add
push
add
add
or
add
dec
fimul
add
add
mov
adc
mov
or
add
imul
and
adc
cmp
or
add
adc
or
adc
xchg
pushf
adc
pop
pop
adc
and
add
add
std
(bad)
jmp
cmp
adc
push
adc
and
add
add
std
(bad)
jmp
mov
add
or
pop
adc
adc
pop
pop
adc
and
add
add
std
(bad)
(bad)
cmp
call
inc
add
add
pop
add
add
adc
add
add
add
add
add
add
adc
push
adc
adc
and
add
jle
add
add
cli
add
add
add
adc
pop
pop
adc
adc
pop
arpl
adc
jle
add
add
pop
or
add
add
add
mov
adc
mov
add
add
and
add
add
mov
adc
lea
add
or
adc
and
add
add
(bad)
(bad)
jmp
add
add
add
mov
adc
data16
(bad)
(bad)
fnsave
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
call
adc
sldt
add
pop
or
add
sldt
add
push
add
add
add
jle
add
add
pop
or
add
or
sbb
sldt
add
push
add
add
sldt
add
add
inc
or
add
push
add
add
sldt
add
add
inc
or
add
push
std
(bad)
jmp
fst
(bad)
inc
adc
sub
add
push
adc
and
add
add
sti
(bad)
(bad)
fld
add
sub
jae
add
or
jae
add
or
jle
add
add
pop
or
add
push
add
add
pop
or
add
push
add
add
pop
or
add
add
fiadd
fiadd
push
inc
add
add
and
add
adc
inc
pop
add
add
add
mov
add
add
add
add
add
aad
add
inc
add
add
adc
jle
add
add
push
add
add
or
add
push
add
add
sldt
add
add
inc
or
add
add
add
mov
adc
lods
adc
jle
add
add
or
push
add
add
sub
and
add
mov
adc
lea
add
add
jno
add
add
mov
adc
jns
(bad)
jmp
aas
adc
push
inc
or
add
add
add
mov
adc
pusha
(bad)
(bad)
jmp
enter
and
inc
stos
addr16
add
add
add
add
add
push
mov
add
add
sub
push
mov
add
jle
add
add
or
add
add
add
mov
adc
pop
(bad)
(bad)
jmp
add
add
adc
cmp
(bad)
(bad)
(bad)
fstp
fst
adc
add
inc
hlt
add
lahf
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
cmps
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
adc
add
add
add
nop
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
push
add
add
add
add
xor
add
add
add
add
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
ret
xor
ret
xor
add
add
add
add
push
mov
add
add
add
add
add
add
xor
add
add
add
add
add
mov
sub
mov
stc
add
test
and
and
inc
add
add
add
add
add
add
add
add
add
mov
add
add
pop
mov
add
mov
add
add
jge
add
add
add
add
inc
add
add
add
add
add
mov
sub
mov
stc
add
push
out
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
pop
mov
add
mov
add
add
add
add
add
xor
add
add
add
add
add
mov
sub
mov
stc
add
add
pop
jle
add
pop
jle
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
add
pop
mov
add
mov
add
add
jge
add
add
add
add
dec
add
add
add
add
add
mov
sub
mov
stc
add
into
cmp
and
cmp
mov
add
add
add
add
add
pop
mov
add
mov
add
push
mov
add
add
pop
or
add
or
add
or
add
add
xor
add
add
add
add
add
pop
jge
add
add
sub
add
or
add
add
add
jae
add
or
and
add
add
push
and
add
add
sub
add
push
sub
sbb
add
cli
add
add
add
adc
mov
adc
adc
add
add
add
add
inc
add
add
and
add
adc
inc
pop
add
add
add
xchg
add
add
add
add
add
add
dec
add
add
or
push
pop
pop
push
or
pop
push
or
add
jo
lea
add
add
or
dec
add
jo
adc
add
adc
add
adc
or
and
add
add
push
pop
dec
xor
and
add
mov
adc
sub
pop
or
add
adc
cmp
(bad)
jmp
cmp
add
add
mov
adc
pop
(bad)
(bad)
inc
and
xor
and
add
add
(bad)
(bad)
jmp
mov
and
add
add
(bad)
(bad)
jmp
(bad)
and
add
add
(bad)
(bad)
(bad)
fiadd
sub
or
or
add
ja
add
sbb
add
or
add
mov
add
sbb
add
or
or
fst
fisttp
adc
push
push
or
add
jo
lea
add
add
adc
adc
jle
add
add
and
add
mov
add
or
jb
add
jo
mov
lds
add
sbb
add
adc
adc
pop
or
frstor
fstp
inc
add
add
and
add
adc
inc
pop
add
add
add
into
add
add
add
add
add
add
add
out
add
add
adc
or
push
jb
add
jo
lea
add
add
push
adc
push
jle
add
add
and
add
mov
pop
add
add
and
add
mov
add
or
push
and
adc
sub
das
pop
and
add
add
sub
iret
add
jo
lea
add
add
movups
push
jb
add
jo
adc
pop
adc
or
jecxz
add
adc
sbb
add
jo
adc
sub
add
or
and
add
mov
adc
cmp
(bad)
jmp
dec
and
add
add
(bad)
(bad)
call
push
jb
add
jo
add
or
and
add
add
(bad)
(bad)
jmp
mov
add
jo
adc
daa
add
or
push
and
add
add
(bad)
(bad)
jmp
mov
add
add
mov
adc
loopne
(bad)
(bad)
ficomp
pop
and
adc
aaa
mov
add
add
add
add
add
add
inc
add
add
push
mov
add
add
push
inc
add
add
adc
add
adc
inc
add
add
sub
add
adc
add
inc
add
add
sub
add
adc
add
add
mov
adc
fdivr
js
(bad)
inc
jae
add
push
adc
and
add
add
cmp
pop
adc
add
push
adc
add
add
mov
adc
stos
(bad)
sub
push
push
or
add
jo
lea
add
add
adc
adc
jb
add
jo
adc
pop
adc
sub
add
or
cmp
add
adc
sub
add
or
fiadd
fiadd
fiadd
pop
mov
add
mov
add
jle
add
or
or
add
or
jb
add
jo
lea
add
add
adc
adc
jle
add
add
and
add
mov
add
or
jb
add
jo
adc
or
add
add
sbb
add
fst
push
std
(bad)
jmp
add
mov
sub
mov
stc
add
or
add
inc
lods
add
test
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
adc
inc
add
add
and
add
pop
mov
add
mov
add
pop
inc
add
add
inc
add
add
add
add
add
push
or
add
and
add
and
add
add
add
and
add
add
add
pop
push
add
add
and
add
and
popa
sub
add
and
add
add
add
add
add
sub
add
add
mov
sub
jnp
add
add
inc
and
add
and
add
add
(bad)
jmp
add
jnp
add
add
cmp
and
(bad)
and
(bad)
mov
add
add
add
add
add
add
adc
add
add
mov
add
add
and
add
add
(bad)
(bad)
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
add
add
add
add
add
fcmovu
add
adc
add
add
add
inc
add
add
add
add
rol
push
jbe
inc
inc
add
add
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
mov
add
mov
add
push
mov
add
add
add
add
add
add
xor
add
add
add
add
mov
lea
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
mov
add
push
mov
add
add
sub
push
mov
sub
mov
stc
add
add
add
add
add
add
inc
add
add
add
add
inc
inc
retf
je
inc
inc
retf
je
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
mov
add
push
mov
add
add
sub
push
mov
sub
mov
stc
add
jnp
add
add
add
xor
add
add
add
add
stos
out
and
stos
out
and
add
add
add
add
pop
mov
add
mov
add
push
mov
add
add
sub
push
mov
sub
mov
stc
add
add
add
add
add
add
inc
add
add
add
add
sbb
inc
adc
add
add
add
add
pop
mov
add
mov
add
push
mov
add
add
sub
push
mov
sub
mov
stc
add
jnp
add
add
add
xor
add
add
add
add
aad
je
and
jl
inc
mov
add
add
add
add
add
pop
mov
add
mov
add
push
mov
add
add
sub
push
mov
sub
mov
stc
add
add
add
add
sbb
add
jo
add
or
add
and
mov
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
mov
add
push
mov
add
add
jae
add
or
jb
add
jo
lea
add
add
push
push
add
pop
add
push
or
add
pop
add
or
add
adc
fiadd
sub
push
mov
sub
mov
stc
add
add
add
add
add
pusha
pusha
add
adc
add
sbb
add
int
add
or
add
push
mov
add
add
add
add
add
push
push
jecxz
and
adc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
push
mov
add
add
push
or
add
and
add
pop
jb
inc
push
inc
jge
add
add
pop
add
jo
lea
add
add
add
add
jb
add
jo
adc
adc
sub
adc
jb
add
jo
adc
sbb
add
adc
ficom
inc
add
add
adc
add
adc
add
add
or
add
add
sub
jle
add
add
add
jo
add
or
and
add
add
jnp
add
add
dec
pop
push
and
add
add
add
add
fidiv
add
push
add
sub
and
add
add
sub
push
push
pop
or
add
push
push
inc
jge
add
add
and
add
pop
push
add
and
es
fst
mov
add
add
sub
add
push
add
add
add
add
add
sub
add
pop
dec
push
add
add
add
add
and
add
pop
push
add
xchg
add
jo
adc
and
push
pop
push
sub
add
fiadd
fiadd
and
add
add
(bad)
(bad)
jmp
add
mov
sub
mov
stc
add
cmp
(bad)
call
mov
add
mov
add
and
add
add
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
inc
jnp
add
add
cmp
add
add
add
xor
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
and
push
adc
add
add
daa
add
add
adc
add
add
add
pop
add
add
add
add
mov
add
mov
add
and
mov
ins
pop
mov
add
add
add
add
add
push
mov
add
add
sub
push
mov
sub
mov
stc
add
add
or
jae
add
or
jae
add
or
sub
adc
add
pop
add
add
add
add
sub
add
or
add
xor
add
add
adc
add
add
mov
sub
push
inc
add
add
adc
add
pop
inc
add
add
in
(bad)
jmp
add
add
sbb
sub
add
or
sub
mov
stc
add
add
add
mov
sub
sub
jb
add
jo
pop
add
add
sub
add
outs
sub
add
or
push
sbb
sub
mov
add
and
mov
inc
inc
add
add
push
add
add
add
add
add
add
push
mov
add
add
and
add
add
(bad)
jmp
add
add
add
add
add
xor
add
add
add
add
and
fwait
add
add
add
add
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
mov
add
mov
add
push
mov
add
add
jle
add
add
add
add
add
inc
add
add
add
add
dec
cld
and
cmp
add
add
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
mov
add
mov
add
push
mov
add
add
add
sub
adc
add
pop
add
add
mov
and
add
add
add
add
add
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
push
mov
add
add
sub
add
push
jb
add
jo
push
add
add
das
add
or
push
je
add
sbb
sbb
add
add
add
adc
mov
push
adc
inc
add
add
add
add
and
add
add
push
inc
add
add
inc
add
add
push
inc
adc
add
or
(bad)
(bad)
jmp
add
adc
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
push
add
add
clc
add
add
add
add
mov
push
sub
add
sub
add
push
or
add
add
mov
push
sub
add
or
add
mov
push
sub
xchg
add
add
push
add
add
(bad)
(bad)
(bad)
cmp
add
inc
add
add
pop
add
add
push
inc
add
add
dec
add
add
add
cmp
add
daa
add
add
or
pop
pop
ror
pop
pop
pop
ror
pop
pop
pop
ror
pop
pop
adc
or
pop
push
pop
ror
and
add
add
pop
and
sbb
add
sub
pop
pop
pop
ror
and
add
add
sub
and
add
add
frstor
add
fstp
add
and
adc
cmp
(bad)
(bad)
dec
cmp
push
add
add
(bad)
(bad)
call
mov
add
mov
add
sub
adc
and
add
add
(bad)
(bad)
inc
pop
pop
pop
inc
add
add
add
adc
cmp
xor
pop
or
or
add
and
add
mov
push
cmp
(bad)
dec
cmp
or
add
mov
push
cmp
(bad)
(bad)
cmp
(bad)
(bad)
dec
sub
add
or
sldt
add
(bad)
(bad)
(bad)
cmp
add
push
inc
add
add
pop
add
add
push
inc
add
add
inc
add
add
add
add
add
add
add
jae
add
or
push
or
or
or
push
add
mov
push
sub
or
cmp
push
and
add
add
sub
or
addr16
push
add
mov
push
sub
add
add
fld
(bad)
jmp
fnstsw
(bad)
(bad)
jmp
pop
add
add
std
(bad)
inc
mov
das
push
and
add
add
std
(bad)
jmp
add
mov
sub
mov
stc
add
jecxz
(bad)
inc
push
xchg
or
add
add
mov
push
cmp
pop
(bad)
(bad)
inc
mov
pop
lea
and
add
add
std
(bad)
(bad)
cmp
(bad)
(bad)
call
inc
add
add
inc
add
add
push
inc
adc
add
mov
add
mov
add
add
add
add
add
add
add
add
add
and
add
adc
add
add
add
repnz
add
add
add
add
add
adc
adc
add
add
adc
add
add
sub
add
add
mov
push
sub
add
and
add
add
(bad)
(bad)
call
add
add
add
(bad)
(bad)
call
add
add
add
add
(bad)
(bad)
call
add
add
add
(bad)
(bad)
jmp
mov
add
(bad)
(bad)
call
add
inc
adc
add
(bad)
(bad)
call
add
add
add
(bad)
(bad)
jmp
inc
and
add
add
(bad)
(bad)
call
sub
and
add
mov
push
cmp
(bad)
(bad)
call
sub
add
add
(bad)
(bad)
call
add
add
add
(bad)
(bad)
(bad)
cmp
(bad)
call
add
add
add
(bad)
(bad)
jmp
add
add
add
mov
push
cmp
adc
(bad)
jmp
fisttp
std
(bad)
call
inc
add
add
pop
add
add
push
inc
add
add
mov
add
push
add
add
add
add
add
push
adc
add
pop
rcl
add
add
pop
rcl
add
add
adc
adc
cmp
adc
dec
pop
rcl
add
add
add
mov
push
sub
inc
and
add
add
sub
adc
cs
rcl
add
add
add
mov
push
sub
add
jmp
inc
inc
add
add
into
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
push
mov
add
add
sub
and
add
add
(bad)
(bad)
(bad)
frstor
fstp
sub
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
sub
add
or
push
sub
add
push
sub
add
xor
add
add
add
add
and
mov
out
mov
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
pop
mov
add
mov
add
push
mov
add
add
add
add
add
add
xor
add
add
add
add
sub
sub
inc
inc
add
add
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
mov
add
mov
add
push
mov
add
add
add
jge
add
add
sbb
add
jge
add
add
add
and
mov
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
add
jle
add
add
jbe
push
add
add
cmp
add
sub
sub
push
sub
add
add
add
inc
sub
sub
add
push
add
jnp
add
add
inc
sub
add
push
fiadd
fiadd
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
add
adc
add
add
add
add
adc
add
sbb
add
lds
add
add
adc
mov
or
or
add
add
add
add
inc
add
add
adc
add
adc
inc
add
add
fld
add
add
add
add
or
add
add
mov
or
loope
pop
add
add
add
xor
add
outs
xor
add
rol
add
sub
add
outs
xor
add
outs
xor
add
je
add
add
push
sub
push
inc
add
add
and
add
adc
inc
pop
add
add
add
movs
add
add
add
sub
add
add
add
add
push
pop
push
adc
add
add
add
add
add
add
inc
sub
add
push
adc
pop
pop
push
add
add
adc
and
xor
add
sub
jle
add
add
pop
push
add
add
add
mov
or
sub
and
add
add
(bad)
(bad)
call
or
cli
add
add
and
add
(bad)
(bad)
jmp
add
pop
pop
push
adc
and
adc
cmp
(bad)
jmp
add
add
add
mov
or
cmp
(bad)
(bad)
fiadd
fiadd
adc
add
push
add
push
or
jmp
add
adc
xor
push
inc
add
add
pop
add
add
or
add
add
add
add
add
sbb
push
add
add
push
pop
push
sub
add
and
add
add
adc
add
cs
and
add
add
sub
and
pop
sub
sub
add
add
loopne
(bad)
inc
add
add
(bad)
(bad)
inc
push
mov
add
add
add
add
jo
fild
add
daa
add
or
xor
add
and
add
add
(bad)
(bad)
jmp
add
add
add
mov
or
pop
(bad)
(bad)
(bad)
fnstsw
(bad)
(bad)
jmp
fnsave
(bad)
push
add
or
or
or
aaa
add
or
add
or
add
or
or
and
add
add
std
(bad)
(bad)
cmp
add
add
and
push
pop
push
sub
add
add
add
add
mov
add
inc
jge
add
add
add
add
add
sub
add
push
inc
push
inc
jge
add
add
jb
add
jo
add
add
cmp
add
sub
add
or
xor
add
fnsave
add
add
(bad)
add
cmp
add
and
inc
inc
sub
add
push
jle
add
add
cmp
and
add
fld
(bad)
jmp
add
mov
sub
mov
stc
add
add
jo
and
add
adc
adc
jb
add
jo
cmp
add
sub
add
or
sub
add
adc
add
add
mov
or
adc
(bad)
call
mov
add
mov
add
cmp
(bad)
(bad)
call
inc
add
add
cmp
add
adc
inc
or
add
add
add
and
add
mov
add
xchg
add
adc
add
pop
add
add
add
add
add
add
add
add
add
leave
add
add
or
or
add
pop
inc
push
inc
jge
add
add
add
add
pop
push
add
pop
add
add
add
add
add
inc
xor
sub
or
pop
inc
sub
push
sub
jge
add
add
or
add
mov
or
jo
(bad)
inc
add
add
add
adc
add
sub
add
push
jb
add
jo
sbb
add
sub
push
sub
jge
add
add
add
add
mov
or
ds
(bad)
inc
sub
add
push
add
add
add
daa
and
add
add
(bad)
(bad)
jmp
add
add
add
mov
or
adc
(bad)
dec
add
cmp
add
inc
sub
and
add
mov
or
cld
(bad)
(bad)
call
sub
or
or
add
mov
or
jmp
(bad)
dec
add
cmp
add
xor
or
add
mov
or
aad
(bad)
jmp
add
jb
add
jo
inc
add
jo
daa
add
or
xor
add
and
adc
cmp
add
add
add
mov
or
mov
pop
and
sub
or
add
mov
or
nop
(bad)
(bad)
jmp
add
add
add
add
and
add
add
mov
or
jne
(bad)
jmp
add
push
add
add
(bad)
(bad)
(bad)
fisttp
(bad)
(bad)
jmp
fld
(bad)
(bad)
inc
sub
add
inc
xchg
add
add
add
data16
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
add
add
add
add
add
add
xor
add
add
add
add
sub
push
mov
sub
mov
stc
add
fwait
mov
mov
add
add
add
add
add
pop
mov
add
mov
add
push
mov
add
add
add
add
add
add
xor
add
add
add
add
add
mov
sub
mov
stc
add
and
in
cmp
add
add
add
add
add
add
add
add
add
mov
add
mov
add
push
mov
add
add
add
jge
add
add
sbb
add
inc
add
add
add
adc
inc
add
add
add
add
inc
or
add
mov
add
test
add
lea
add
jmp
add
add
add
popf
add
add
pop
push
mov
and
and
add
add
add
add
add
add
add
add
push
mov
add
add
push
or
or
jle
add
add
inc
sub
add
push
add
jnp
add
add
inc
sub
add
push
and
add
add
add
add
add
sub
add
push
xor
add
add
add
inc
sub
push
sub
jge
add
add
jle
add
add
inc
and
add
add
(bad)
inc
pop
xor
and
add
add
(bad)
jmp
add
pop
pop
push
add
mov
cmp
(bad)
(bad)
jmp
pop
push
pop
sub
push
add
mov
cmp
(bad)
(bad)
jmp
and
add
add
mov
cmp
and
push
and
add
mov
cmp
(bad)
(bad)
jmp
(bad)
and
add
add
(bad)
(bad)
fiadd
fiadd
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
add
sub
add
sub
add
add
add
adc
add
sbb
add
add
add
adc
in
mov
mov
add
add
add
add
add
push
mov
add
add
add
add
jo
jns
add
sub
add
push
or
add
pop
add
or
sbb
add
sub
add
add
jl
add
add
pop
add
or
xor
add
jle
add
add
pop
push
add
jb
add
jo
lea
add
add
pop
push
jb
add
jo
pop
pop
add
add
pop
add
or
cmp
add
or
add
sub
add
mov
cmp
add
or
add
or
add
sub
add
fiadd
fiadd
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
adc
add
add
add
add
add
xor
add
add
adc
add
push
inc
add
add
xor
add
pop
mov
add
mov
add
pop
inc
or
add
dec
add
add
add
add
add
add
add
add
add
mov
add
sbb
add
push
or
add
cmp
add
pop
sbb
add
inc
jge
add
add
add
add
pop
push
add
add
cmp
add
add
add
add
add
inc
sub
add
push
add
add
jo
xor
add
and
add
add
and
dec
and
or
outs
(bad)
(bad)
jmp
add
add
cwde
loope
mov
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
push
mov
add
add
jle
add
add
pop
push
add
add
add
mov
cmp
add
push
add
add
(bad)
inc
sub
add
push
jb
add
jo
sbb
add
sub
and
add
mov
cmp
(bad)
(bad)
jmp
add
add
add
mov
cmp
(bad)
(bad)
inc
add
add
add
and
cmp
add
pop
push
push
add
inc
sub
sub
add
push
and
add
add
(bad)
jmp
add
sub
and
add
add
(bad)
(bad)
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
add
inc
sbb
add
add
push
add
add
add
add
add
add
xor
add
add
add
add
and
mov
add
add
add
add
add
push
mov
add
add
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
add
add
add
add
xor
add
add
add
add
cli
test
jge
cli
test
jge
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
add
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
add
add
sbb
add
add
add
adc
cdq
jmp
cdq
jmp
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
mov
add
push
mov
add
add
jae
add
or
push
push
add
add
jo
lea
add
add
push
push
outs
and
add
mov
and
pop
add
or
add
sub
add
add
sub
add
push
and
add
add
add
add
add
pop
jge
add
add
add
cmp
add
es
fiadd
sub
push
mov
sub
mov
stc
add
add
add
add
add
add
mov
add
add
add
inc
add
add
add
add
push
sbb
sbb
add
add
add
add
add
sub
push
mov
sub
mov
stc
add
mov
add
add
pop
mov
add
mov
add
add
add
add
add
xor
add
add
add
add
mov
add
mov
add
and
test
and
test
mov
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
push
mov
add
add
add
jge
add
add
adc
add
das
add
add
add
add
pop
jge
add
add
sub
add
or
add
add
add
jle
add
or
xor
add
add
push
cmp
add
add
sub
add
push
sub
adc
add
cmp
add
add
imul
push
test
mov
add
add
add
add
add
push
mov
add
add
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
add
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
and
add
add
je
imul
add
add
mov
push
push
add
adc
add
add
add
inc
push
dec
inc
add
add
adc
add
inc
ins
outs
bound
add
add
add
add
add
push
adc
add
add
and
add
add
add
add
or
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
dec
add
add
or
push
add
add
add
add
push
add
add
push
add
add
push
add
add
push
add
cmp
push
add
cmp
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
push
add
dec
add
add
dec
add
add
cdq
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
cdq
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
aaa
add
add
add
add
adc
cmp
or
push
add
add
add
add
or
adc
add
adc
cmp
add
add
add
adc
aas
add
sbb
add
add
add
xor
add
add
add
add
xor
add
add
add
cmp
aaa
add
cmp
cmp
cmp
add
add
inc
add
aaa
add
cmp
cmp
aaa
add
cmp
cmp
cmp
add
add
inc
add
inc
add
aaa
add
cmp
cmp
cmp
add
add
inc
add
inc
add
pop
add
pop
add
pusha
add
aaa
add
cmp
aaa
add
cmp
cmp
cmp
add
add
aaa
add
cmp
cmp
cmp
add
add
inc
add
add
add
xchg
dec
add
add
je
add
add
xchg
aaa
add
mov
add
add
xchg
cmp
pushf
and
add
add
add
add
add
add
add
and
add
add
add
add
and
add
add
add
push
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
das
add
add
xchg
sbb
jo
or
and
add
add
sbb
add
add
add
add
add
add
add
xor
add
add
add
xor
add
or
or
shl
add
add
add
add
add
add
add
add
add
or
add
test
add
add
add
add
cmp
add
add
add
add
xchg
sbb
jo
adc
cmp
sbb
cdq
add
add
xchg
add
add
jo
add
add
add
add
js
add
add
or
adc
enter
add
or
adc
sbb
add
or
adc
push
add
add
add
add
add
or
add
add
add
pop
inc
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
or
add
sub
add
add
xchg
or
add
jl
add
add
xchg
or
add
int3
dec
add
add
xchg
or
add
xor
add
add
add
add
add
add
add
or
sbb
hlt
dec
add
add
or
sbb
inc
push
add
add
add
sbb
loopne
add
add
add
add
dec
push
add
add
or
sbb
cwde
push
add
add
or
sbb
call
add
add
push
pop
add
add
add
sbb
inc
pop
add
add
add
add
aam
add
add
or
sbb
and
add
add
or
sbb
je
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
xchg
sbb
jo
pop
add
add
add
add
cmp
inc
add
inc
add
inc
add
inc
add
push
add
inc
add
push
add
push
add
pop
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
push
add
inc
add
inc
add
inc
add
inc
add
add
adc
dec
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ret
add
rol
enter
rol
add
jno
dec
add
add
add
add
icebp
add
add
imul
jmp
add
add
add
add
add
add
jle
or
dec
add
add
mov
test
and
fld
mov
and
jmp
xchg
add
add
cwde
add
add
add
add
add
add
add
add
add
add
add
add
cmp
inc
add
mov
add
add
add
add
inc
add
leave
add
mov
add
add
nop
add
add
add
add
add
add
dec
add
add
dec
add
add
add
cli
add
add
pop
add
add
cli
add
add
add
add
add
and
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
jmp
icebp
add
add
inc
add
add
inc
add
add
add
jecxz
imul
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
imul
add
add
add
add
inc
add
add
inc
add
add
inc
add
imul
add
imul
add
imul
add
add
add
inc
add
add
add
and
add
inc
add
add
pusha
add
add
popa
add
add
add
inc
add
add
add
add
and
loopne
imul
add
push
imul
add
imul
add
add
pop
imul
add
pop
imul
add
imul
add
add
add
add
add
add
add
add
add
add
aas
add
dec
add
ins
add
jp
jg
add
add
add
bound
fs
add
add
add
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
add
add
add
add
gs
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
arpl
add
jae
gs
cs
gs
arpl
outs
add
jae
ins
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
jae
gs
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
imul
imul
jae
gs
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
ins
push
imul
je
jb
bound
add
imul
jne
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
jae
gs
add
push
arpl
popa
jb
push
push
gs
bound
arpl
je
jb
bound
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
arpl
je
outs
outs
add
jae
gs
cs
dec
add
jb
popa
ins
add
ins
outs
jb
push
je
gs
ins
add
popa
add
imul
jb
jns
dec
inc
imul
ins
add
jo
jae
add
je
add
jae
gs
cs
dec
cs
outs
ins
jo
gs
imul
ins
popa
je
push
je
gs
ins
add
ins
jo
gs
imul
add
jae
ins
bound
dec
gs
outs
fs
outs
outs
add
jb
outs
add
jo
jns
inc
outs
outs
ins
gs
outs
add
je
imul
outs
add
jb
popa
je
outs
jo
inc
jno
popa
ins
imul
outs
fs
popa
jae
add
jbe
imul
outs
popa
add
outs
arpl
add
je
inc
outs
je
jns
outs
imul
xor
add
imul
imul
gs
jb
popa
jns
outs
jo
dec
outs
gs
popa
ins
imul
xor
push
jns
je
ins
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
imul
imul
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
jae
gs
cs
gs
jne
arpl
add
jae
jne
arpl
popa
outs
popa
addr16
push
jns
je
ins
cs
ins
outs
bound
imul
add
ins
je
jb
dec
outs
outs
add
data16
outs
arpl
jno
popa
ins
jae
push
jns
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
je
inc
jae
gs
bound
inc
gs
bound
arpl
jb
popa
jns
inc
outs
jo
add
jo
outs
ins
popa
imul
add
jo
outs
ins
popa
imul
js
arpl
imul
ins
bound
addr16
inc
outs
fs
popa
jae
add
je
inc
jne
ins
dec
popa
ins
add
gs
je
dec
outs
jae
popa
outs
arpl
jb
ins
inc
outs
fs
outs
ja
popa
jo
push
outs
ins
outs
popa
add
je
inc
jne
jb
outs
je
outs
ins
popa
imul
inc
popa
jae
inc
imul
jns
jae
je
inc
jo
ins
imul
inc
popa
jae
add
je
add
jae
gs
cs
arpl
imul
arpl
inc
jbe
fs
arpl
inc
jb
popa
je
inc
outs
ins
popa
imul
imul
popa
addr16
je
jb
bound
add
je
imul
jb
gs
add
jb
ins
jbe
outs
cs
add
arpl
ins
imul
jne
arpl
outs
jb
je
jb
bound
add
bound
arpl
add
data16
inc
pop
xor
arpl
outs
jb
inc
pop
xor
inc
pop
xor
inc
pop
xor
push
add
inc
add
jb
ins
jbe
outs
add
jb
jae
jne
arpl
add
add
and
add
outs
add
add
outs
add
popa
add
ins
add
or
popa
add
jne
add
sbb
jne
jae
add
add
and
jnp
xor
jge
pop
add
or
add
bound
imul
add
ja
outs
add
bound
and
jnp
xor
jge
and
jnp
xor
jge
and
jnp
xor
jge
and
add
add
ins
add
jne
add
ins
add
outs
add
data16
add
adc
ja
jb
jne
jne
jae
popa
add
add
imul
outs
add
adc
xor
jge
cmp
jnp
xor
jge
pop
add
(bad)
add
imul
push
adc
outs
add
outs
add
jne
ins
add
add
cmp
add
jne
jb
outs
add
jne
jb
outs
add
je
add
ins
add
outs
add
bound
ins
add
jo
add
ins
add
imul
jne
imul
add
xor
jge
jl
jnp
xor
jge
pop
add
or
ins
add
add
add
sub
add
ins
add
popa
add
add
outs
add
bound
add
ins
add
arpl
jne
add
imul
outs
add
adc
arpl
jb
jne
jbe
outs
add
jne
add
adc
jae
jne
add
imul
add
jae
jne
imul
xor
jge
cmp
jnp
xor
jge
and
add
jne
outs
add
outs
add
or
imul
add
jl
add
imul
ja
add
ja
add
outs
add
js
jne
imul
imul
ja
imul
add
adc
data16
add
jb
outs
add
pop
jo
add
popa
add
jo
cmp
add
sub
add
imul
add
add
outs
add
jo
imul
pop
add
adc
add
data16
add
popa
add
add
add
pcmpgtw
outs
add
add
push
adc
outs
add
popa
add
ja
jb
imul
push
add
popa
add
jae
jbe
popa
add
add
jne
jae
push
add
outs
add
add
jb
popa
add
add
add
or
imul
jo
add
popa
add
imul
add
jb
outs
add
add
xor
jge
and
add
jb
ins
add
imul
push
add
add
imul
add
jne
add
jb
arpl
jae
add
add
pop
add
xor
jge
add
dec
add
or
jb
jne
outs
add
add
js
ins
add
imul
jbe
add
add
xor
jge
sub
add
jo
ins
add
ja
add
outs
add
add
popa
add
ins
add
add
popa
add
add
xor
jge
pop
add
xor
jge
sub
add
popa
add
push
add
or
imul
jne
add
ins
add
add
jne
jb
outs
add
bound
add
arpl
add
add
add
add
add
call
dec
test
mov
mov
add
and
add
add
push
add
add
or
add
add
and
or
and
add
and
sbb
add
add
dec
adc
push
push
add
add
push
add
push
push
sbb
push
push
sbb
add
push
pop
add
push
sbb
sbb
and
sbb
sbb
adc
add
push
push
add
add
gs
add
jns
add
push
push
sbb
and
add
push
add
sbb
add
adc
add
add
popa
push
and
add
adc
and
sbb
adc
or
add
or
sbb
adc
and
sbb
push
push
add
add
and
mov
push
or
add
and
sbb
xor
sbb
mov
add
add
add
add
add
add
add
push
jns
je
ins
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
add
add
push
or
or
and
or
push
or
push
add
add
sbb
and
or
add
or
add
sbb
add
add
push
add
sbb
push
push
or
add
add
add
add
add
sbb
add
push
add
push
add
add
and
add
add
mov
adc
adc
adc
add
or
push
and
sbb
sub
push
add
add
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
or
add
add
push
add
adc
jo
jb
addr16
and
xor
xor
add
imul
outs
add
sub
add
xor
xor
cmp
sub
sub
bound
xor
xor
or
add
xor
xor
xor
xor
add
add
dec
push
push
pop
push
push
pop
push
pop
push
popa
pop
push
pop
pop
pop
pop
pop
arpl
pushw
ss
cmp
and
add
xor
xor
xor
cmp
cmp
cmp
xor
xor
xor
xor
add
or
push
add
or
add
or
pop
add
push
pop
or
add
dec
or
pop
add
sbb
or
popa
or
gs
sbb
sbb
push
pop
add
sbb
pop
add
push
or
pop
adc
add
or
add
add
push
pop
adc
or
add
sbb
or
push
or
push
sbb
push
or
add
pop
push
or
push
or
pop
add
or
or
pop
add
add
or
adc
and
adc
add
or
pop
add
sbb
pop
add
sbb
sbb
add
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
inc
push
inc
inc
push
add
test
add
add
add
add
add
imul
jo
add
add
and
add
add
les
lahf
jl
outs
stos
cmp
mov
and
shl
mov
xor
ins
lahf
fwait
sti
sub
mov
fnsetpm(287
and
mov
mov
pop
jmp
push
jecxz
ror
push
jmp
sub
pop
push
inc
fadd
sub
push
ins
push
push
test
xor
lds
int3
shl
dec
sbb
imul
aad
ins
int3
adc
add
rcr
cmp
ds
mov
dec
aas
enter
scas
fisub
sub
iret
cmp
mov
mov
or
aaa
test
or
jp
mov
js
(bad)
pusha
icebp
cli
pop
adc
adc
cld
or
or
retf
loopne
mov
jl
leave
cmp
imul
in
aas
cmp
inc
add
jecxz
ins
js
push
mov
pop
sub
xchg
cdq
jp
sbb
and
imul
sub
mov
xor
xchg
stos
fsubr
fadd
ds
and
ss
cmp
loop
push
or
aaa
xor
dec
arpl
inc
shl
sub
inc
movs
mov
push
lock
dec
or
or
mov
loop
inc
stos
adc
(bad)
lods
ins
loop
js
lock
rcr
aas
inc
lea
xchg
lods
rcl
or
jmp
or
(bad)
int
xlat
jmp
popa
cmp
sub
cmps
pop
mov
in
push
cs
ror
jnp
mov
xchg
retf
inc
arpl
or
rcr
or
jp
and
sar
sbb
jb
adc
pushf
daa
push
pop
call
jg
(bad)
cmp
mov
sbb
arpl
loope
dec
sbb
out
push
cdq
test
in
bound
test
sub
jb
jns
mov
sar
cmc
rcr
jmp
addr16
test
mov
sub
cmps
push
iret
repnz
sbb
pop
mov
(bad)
adc
out
mov
push
ds
mov
or
inc
mov
call
jecxz
fcmovne
or
div
and
cmps
mov
sbb
cli
iret
int3
ja
sub
rol
outs
jecxz
mov
inc
aas
xchg
int
xor
aaa
gs
mov
les
out
daa
dec
retf
xor
(bad)
pop
sub
retf
xlat
aaa
cmp
(bad)
push
fcmovb
pop
jecxz
pop
mov
aad
sub
cwde
std
mov
or
cld
cli
fwait
cdq
and
inc
ins
ror
(bad)
pop
mov
push
ds
shl
jb
fistp
les
(bad)
pop
fiadd
push
ins
cwde
sub
jge
push
inc
jg
pop
pop
cli
xor
les
sbb
jmp
adc
pusha
cli
popf
imul
add
sub
xor
fs
sub
xor
imul
jl
push
retf
dec
mov
pop
data16
in
fstp
jg
mov
scas
in
add
and
int
dec
mov
rcr
enter
jo
fisubr
mov
mov
sbb
xor
shr
in
mov
rcl
sbb
mov
enter
je
push
push
jl
lea
jmp
(bad)
aam
cdq
jnp
test
pop
push
xor
mov
pop
daa
ror
icebp
sbb
add
lds
stos
add
fisubr
ss
adc
sti
push
fcmovne
inc
mov
add
mov
cs
outs
out
fwait
arpl
imul
xor
sub
stos
push
xchg
mov
push
test
or
inc
inc
mov
cld
lods
shl
stc
out
sbb
adc
sub
xchg
mov
lock
loopne
cwde
jmp
push
mov
push
and
ja
stos
scas
(bad)
rep
mov
xchg
push
mov
jno
mov
sar
cmp
loopne
sahf
enter
repnz
or
jecxz
pop
mov
sbb
push
int3
dec
lea
sub
cmp
push
stos
outs
inc
mov
push
jbe
sub
jno
in
popf
(bad)
in
mov
mov
sub
mov
cmp
mov
cmp
lods
dec
les
mov
or
inc
mov
mov
hlt
cmp
xchg
and
scas
or
hlt
sbb
pop
push
inc
add
mov
ins
leave
repz
int3
test
lahf
add
(bad)
add
add
pushf
stc
add
dec
sub
(bad)
xor
or
mov
add
fisubr
out
xchg
rcr
mov
xchg
(bad)
not
movs
fsubr
int3
jg
push
cmp
cmp
inc
lods
jbe
push
inc
xchg
adc
mov
ins
dec
jae
test
jp
ins
div
jbe
idiv
push
fst
or
xchg
retf
in
adc
jbe
inc
sub
mov
add
jno
cmps
jbe
pusha
shl
jl
jbe
fwait
rcr
mov
out
stos
xchg
in
(bad)
and
sbb
les
(bad)
mov
in
jo
cld
hlt
imul
sub
inc
test
adc
lods
pop
lea
or
mov
push
lock
ret
push
test
cmp
imul
sbb
xchg
lea
pop
sbb
ret
pop
test
dec
xlat
mov
in
push
pop
lock
push
(bad)
sub
cmp
in
(bad)
mov
lahf
in
push
lock
lds
or
push
cli
call
out
jle
fs
and
fild
jns
nop
dec
fyl2xp1
nop
sti
mov
loope
sbb
push
sub
lods
fcom
mov
fsubrp
xor
and
xchg
and
(bad)
add
hlt
push
xor
aad
outs
mov
neg
mov
test
push
sbb
retf
pinsrw
inc
js
pop
icebp
add
or
and
xlat
sub
xchg
push
clc
lods
fild
cmc
data16
mov
cmp
inc
cmp
sbb
add
xchg
test
sahf
push
xor
aad
pusha
adc
xchg
mov
add
jle
pop
adc
add
jle
dec
sub
loope
mov
in
es
mov
add
(bad)
ss
fidiv
pop
cwde
xchg
daa
in
lds
inc
inc
mov
fwait
jbe
cdq
inc
out
add
push
not
push
inc
leave
sahf
clc
inc
test
hlt
(bad)
test
pusha
cmp
jge
fsubrp
data16
pop
or
je
aas
(bad)
icebp
ds
inc
syscall
test
xchg
cdq
mov
scas
push
in
sub
xor
rcl
mov
push
call
fwait
cwde
cmp
repnz
mov
lock
jo
mov
add
sti
xor
int3
mov
mov
or
add
sbb
sub
mov
jnp
cmp
(bad)
push
ror
xchg
mov
iret
sbb
adc
cmp
pop
fist
stc
cmp
or
loope
mov
adc
dec
dec
rcr
inc
sub
add
pop
rcl
add
adc
xchg
hlt
push
mov
(bad)
popa
pop
test
rol
mov
retf
cmp
push
mov
xor
ss
xlat
lds
ret
dec
mov
pop
arpl
xchg
int3
fstp
xor
jg
push
mov
jbe
sahf
sbb
sbb
or
add
mov
int
leave
enter
in
xchg
int3
out
sahf
push
shl
(bad)
scas
(bad)
xchg
and
mov
jp
fs
jae
ficomp
mov
cmp
lahf
cmp
pop
sbb
jns
mov
mov
adc
and
sti
jno
ja
(bad)
lods
and
shl
pop
mov
and
shl
jmp
out
or
bnd
lea
lahf
push
and
mov
push
dec
push
jp
(bad)
sti
test
adc
popf
ins
sahf
pop
jmp
jnp
sbb
cmps
sub
jbe
cmp
int
jbe
mov
jmp
adc
ja
cmc
lock
addr16
and
jbe
mov
push
mov
int3
pop
sbb
push
cmp
cmp
sti
inc
jecxz
add
push
adc
and
cmp
sbb
retf
inc
cmp
mov
sub
inc
pop
test
in
lods
cmp
jmp
or
cld
sti
lahf
add
push
inc
lea
push
lea
mov
jns
xor
push
sbb
push
push
arpl
xor
test
into
aaa
dec
sbb
adc
jecxz
inc
cmp
out
add
ficomp
(bad)
cmp
mov
ja
mov
mov
test
add
daa
mov
xor
lahf
jle
xchg
outs
xchg
inc
cli
mov
or
push
ds
out
inc
sbb
cmp
mov
gs
cbw
mov
int
pop
aam
cmc
inc
call
jo
aam
push
add
mov
and
cmps
mov
lahf
sub
lea
jmp
out
xchg
mov
out
js
adc
inc
arpl
(bad)
ds
xchg
test
enter
and
and
ret
fst
sub
mov
in
xchg
push
test
sbb
shl
repnz
inc
std
or
fcomp
xchg
div
mov
adc
sub
mov
jo
sbb
and
movs
adc
inc
lods
out
fcomp
adc
pop
pop
mov
jle
sub
jo
stos
pop
sub
mov
or
add
push
push
jo
test
cmp
cs
(bad)
(bad)
mov
int3
push
adc
lock
dec
je
int3
(bad)
aaa
test
out
pop
mov
jo
ins
mov
and
repnz
fcom
es
fucomip
add
ret
ds
pop
add
cmp
mov
and
xchg
push
and
mov
gs
mov
iret
mov
std
stc
or
push
(bad)
jno
or
pop
jle
retf
jg
pop
(bad)
repnz
sbb
and
adc
dec
mov
pop
lahf
arpl
test
mov
call
dec
fwait
xchg
imul
sbb
push
mov
dec
push
jg
mov
push
mov
daa
rcl
mov
std
cli
pop
test
jmp
movs
cmc
stc
aad
xor
shl
imul
pop
icebp
fwait
or
sub
outs
dec
(bad)
xlat
imul
jae
pop
cmp
ins
push
test
lods
fsub
cmps
scas
dec
cmps
stos
cmp
loopne
out
dec
sub
jp
test
xchg
repz
ret
pusha
call
(bad)
cmp
push
xor
test
jo
fadd
fbld
push
add
nop
imul
mov
mov
int
enter
sub
dec
jl
in
jecxz
dec
pop
es
mov
(bad)
fstp
aas
push
sbb
pop
cli
xchg
retf
mov
sbb
push
mov
ja
jmp
mov
jae
retf
(bad)
jb
loope
dec
or
and
imul
mov
(bad)
retf
out
fcmovu
adc
pop
loopne
fs
pop
cli
jns
pusha
loopne
sub
jecxz
xor
xor
test
adc
xchg
and
scas
mov
lods
(bad)
fucomip
xchg
in
xchg
neg
pop
sub
call
inc
add
adc
xor
mov
mov
aas
sti
shl
clc
std
mov
pop
mov
mov
mov
pop
or
in
adc
sub
scas
add
lock
sub
repnz
inc
jl
xchg
dec
pop
jecxz
in
and
mov
dec
or
dec
sub
enter
or
int
xor
mov
adc
inc
sbb
stos
jmp
js
jge
das
xlat
or
jne
pop
mov
push
mov
or
and
mov
aam
jno
cli
mov
std
cmp
ret
dec
jnp
mov
xchg
or
leave
out
ficomp
xchg
pop
push
or
fs
inc
pop
add
outs
stos
pushf
daa
call
pop
cs
test
sub
sbb
mov
test
sti
stos
sbb
push
push
ins
pop
in
mov
push
out
pop
test
mov
mov
pop
test
fnstsw
jno
and
pop
jns
or
jnp
mov
repz
fst
out
inc
jle
into
leave
jno
xchg
ja
out
imul
mov
adc
push
sbb
adc
fnstsw
add
xor
and
push
jbe
mov
or
nop
cmc
out
or
lahf
xor
mul
or
mov
mov
xchg
mov
push
fnstcw
bswap
jmp
je
sbb
add
icebp
jge
call
repz
mov
mov
mov
ins
or
jmp
(bad)
push
jno
jmp
xchg
js
aaa
stc
popf
push
mov
mov
test
dec
retf
ds
sub
cdq
jns
ins
sub
lods
nop
and
mov
test
mov
loop
(bad)
jmp
stc
pop
push
adc
fld
jae
jmp
and
(bad)
pop
popa
xor
mov
(bad)
in
mov
push
push
psraw
popa
pop
repz
mov
mov
ret
xlat
and
stos
dec
push
or
repz
jb
call
dec
test
push
ja
movs
mov
icebp
lods
jge
mov
arpl
cmp
dec
call
xchg
mov
sub
rol
jle
stos
and
sub
aam
sub
fild
lock
and
mov
js
jmp
pop
std
dec
dec
in
pop
or
pop
mov
xor
ror
jge
stos
ret
mov
icebp
or
scas
push
add
inc
inc
pop
push
add
xchg
cmp
fist
jge
js
adc
cli
bsf
nop
(bad)
mov
sub
cdq
jl
jne
xchg
cmc
shl
enter
hlt
stos
sbb
xchg
dec
jg
mov
xchg
sub
xchg
hlt
in
dec
ds
jp
nop
cmps
sub
add
push
pop
jnp
or
dec
daa
sbb
imul
mov
cmc
inc
add
lods
outs
add
out
and
fsubr
inc
outs
jmp
mov
cdq
daa
pop
cmps
into
fsincos
inc
aad
sti
jno
(bad)
in
ret
sahf
xchg
jp
mov
(bad)
data16
pop
mov
cmp
clc
cld
sbb
addr16
push
pop
int
jp
push
mov
rol
xor
(bad)
repnz
and
shl
sbb
cdq
in
add
adc
push
outs
mov
sti
mov
xchg
xchg
pop
inc
mov
or
nop
mov
pop
ins
mov
cmp
xor
in
pop
aam
xchg
xor
std
push
mov
mov
outs
pop
cmps
ret
fwait
sub
sub
lods
inc
adc
dec
jle
icebp
push
hlt
mov
shl
adc
xor
rcl
and
mov
mov
pop
jb
sysexit
test
pop
or
or
fadd
cmp
xor
push
and
mov
shl
ds
loopne
push
aad
sub
in
fcmovu
or
inc
adc
pop
sub
cmp
outs
xchg
dec
cmps
sub
clc
adc
dec
adc
sahf
pop
add
ja
and
dec
sub
(bad)
and
retf
jbe
ja
sbb
lea
lahf
sub
imul
mov
cmp
add
sbb
jo
cmp
pop
or
cli
call
dec
mov
mov
and
mov
xor
outs
ret
mov
outs
or
outs
xlat
sub
fs
xor
js
fld
stos
sbb
inc
dec
add
pop
sub
mov
cmp
mov
fsubr
ins
xor
ret
js
jb
inc
mov
iret
push
mul
dec
cld
xchg
pmuludq
loopne
lea
lds
mov
ret
shl
pop
xchg
or
inc
and
push
out
in
jo
xor
int3
cmp
jo
mov
sti
jbe
add
or
dec
ds
cmp
repnz
scas
xchg
or
push
out
sti
shl
and
cmp
fcom
push
clc
stc
sbb
pop
adc
out
int3
sub
inc
dec
push
cmp
ss
sub
push
pop
cwde
imul
ret
jne
adc
inc
jmp
push
xchg
into
clc
gs
mov
xor
pop
(bad)
cld
sbb
bound
test
cld
mov
push
jae
inc
xchg
(bad)
gs
sahf
retf
pusha
mul
cmps
mov
adc
iret
daa
mov
jl
cld
dec
xchg
nop
push
pop
cmp
xchg
inc
jmp
out
rdtsc
or
jne
sbb
inc
(bad)
ja
pop
das
push
mov
in
(bad)
stos
shl
data16
pop
int3
or
or
push
cs
adc
jo
sbb
push
pop
aam
pop
jmp
nop
inc
sub
(bad)
jnp
mov
dec
push
pop
rcr
mov
mov
or
xor
xchg
mov
mul
pop
int
sar
pop
movs
(bad)
inc
xor
cmps
and
cmp
stos
call
repz
test
nop
ret
mov
sbb
in
movs
mov
ins
jnp
mov
out
ret
pop
dec
popa
ffreep
retf
push
pusha
imul
pushf
xchg
adc
ja
test
jbe
ret
and
xchg
push
mov
mov
js
mov
dec
push
cli
sbb
add
mov
add
push
sub
cmps
in
imul
test
adc
add
jo
iret
iret
cmp
(bad)
adc
adc
clc
bnd
adc
cmp
imul
cwde
push
dec
mov
shl
push
(bad)
and
mov
lods
shl
cmp
xchg
jo
xor
ins
cli
mov
cld
adc
lock
jmp
dec
jne
fnstcw
xchg
xchg
cs
popf
pop
aas
adc
or
mov
mov
in
shl
rol
or
lahf
jle
mov
stos
cmc
imul
je
test
sbb
adc
clc
call
jl
and
jo
cmps
psubusb
aad
(bad)
and
pop
loopne
inc
mov
iret
inc
mov
push
mov
aad
xor
bound
xchg
(bad)
outs
xchg
outs
push
das
jne
adc
jns
jp
int3
call
jae
adc
and
jmp
mov
popf
xchg
and
test
stos
add
mov
sti
mov
iret
pop
xchg
dec
cmp
xchg
fldenv
sbb
sub
push
xor
test
enter
mov
sbb
adc
jns
cmc
mov
add
cmp
push
jmp
aad
jecxz
adc
pop
out
adc
outs
add
test
enter
xor
inc
push
pop
inc
xor
stc
rcr
scas
xor
pusha
push
pop
les
hlt
or
mov
test
repnz
retf
jmp
xchg
add
outs
jmp
movs
sahf
cmps
dec
jno
jp
xor
sub
popf
ja
jo
jle
sbb
mov
and
xor
pop
jb
jge
inc
sbb
mov
ins
jnp
imul
movs
cmp
stc
fidiv
dec
div
or
aam
mov
jno
bound
leave
pop
and
nop
mov
lahf
cmps
ss
xchg
pop
add
fdivr
test
in
(bad)
imul
cdq
xchg
icebp
sub
js
mov
dec
mov
xlat
retf
sahf
and
push
jae
mov
(bad)
icebp
cmp
loopne
jo
inc
fmulp
mov
jmp
or
sub
push
or
(bad)
fstp
retf
push
scas
mov
jmp
mov
sahf
pop
jbe
xchg
scas
imul
ss
aas
or
imul
xchg
jge
push
mov
jnp
and
sbb
mov
call
sbb
scas
push
sbb
jae
jge
pop
jns
sbb
int3
mov
and
shl
mov
cmp
aad
adc
mov
add
mov
pop
cmp
fadd
ins
aaa
adc
sub
and
pop
jg
inc
clc
sbb
retf
fstp
push
popa
and
pusha
cld
aam
mov
gs
pop
imul
repz
loop
lods
xchg
adc
repnz
por
mov
jb
in
push
shl
jp
sub
popf
jne
pop
and
cmp
xlat
ds
imul
int
push
mov
mov
aas
fld1
pop
mov
pop
cmps
les
jo
mov
in
mov
aam
fcom
outs
jmp
mov
enter
adc
cs
cmp
jo
mov
cmp
shr
icebp
lahf
xor
cmp
jecxz
aas
push
cmc
call
xor
aaa
lods
(bad)
loope
cs
inc
jae
rol
mov
cld
ret
inc
(bad)
cmp
adc
es
pop
rol
les
xchg
ja
jns
adc
cmp
jl
jo
fmul
repz
and
mov
fldenv
icebp
pop
stc
arpl
xchg
aam
mov
nop
(bad)
mov
aad
push
sbb
mov
adc
jecxz
sub
jno
inc
ins
dec
xor
push
(bad)
retf
addr16
sbb
dec
ret
outs
sbb
sbb
push
xchg
arpl
push
pop
jg
mov
(bad)
pop
sbb
jno
imul
call
jl
xor
gs
or
movs
jp
add
pop
push
sub
cmp
dec
scas
lds
pushf
xor
or
lds
adc
data16
daa
and
cmps
gs
cdq
and
ds
pop
stc
and
lahf
push
es
daa
push
mov
ret
or
mov
cmp
in
adc
stos
mov
mov
xchg
mov
mov
add
ret
jle
les
dec
ret
daa
idiv
shl
mov
ffreep
loopne
std
sahf
cdq
shr
xchg
sub
mov
aad
or
cmp
dec
push
sub
and
or
pop
jl
es
stos
sbb
call
imul
pop
cmp
stos
and
pop
inc
addr16
mov
test
push
jb
or
push
mov
push
in
rol
inc
xchg
push
sahf
mov
sub
mov
leave
loope
mov
cmps
(bad)
out
or
pop
pusha
ss
mov
in
fild
and
xchg
shl
mov
lock
and
lods
sub
xchg
std
out
mov
pop
imul
and
nop
gs
sub
inc
daa
test
fs
call
jg
jp
in
enter
cmc
test
xchg
movs
add
cmp
pop
adc
(bad)
sbb
dec
rol
adc
out
push
(bad)
push
pop
xchg
das
sub
ficom
push
scas
not
shl
sbb
mov
leave
(bad)
das
out
sbb
pop
scas
xor
sub
dec
mov
or
stos
cmp
test
mov
push
cdq
outs
mov
sub
or
and
jp
mov
scas
add
cmps
ret
lea
(bad)
push
inc
cmp
xchg
rol
and
popf
push
rol
jae
call
add
and
repz
movs
xchg
xor
xor
adc
repz
test
adc
hlt
sbb
loopne
shr
es
mov
mov
dec
mov
xchg
push
mov
dec
cdq
mov
mov
push
lea
and
into
std
out
sub
ds
stc
xor
xchg
stos
push
and
inc
sahf
adc
mov
je
jb
jle
pop
mov
adc
mul
out
les
and
and
fcomp
mov
jno
adc
cdq
mov
in
inc
sub
jne
in
ins
jno
xor
bound
addr16
mov
mov
aaa
dec
mov
mov
jmp
rcl
movs
mov
daa
ds
push
cwde
retf
mov
aas
call
mov
sbb
sub
adc
xor
or
int3
icebp
xor
pop
loopne
in
xor
lea
mov
int
xor
and
inc
and
movs
push
inc
or
lds
call
in
xchg
inc
pop
fsubr
inc
and
and
or
mov
popf
test
sub
jmp
leave
add
adc
push
out
dec
test
(bad)
and
push
jecxz
scas
cld
sub
jns
dec
and
sbb
pop
int
in
dec
je
xor
cs
test
mov
std
adc
(bad)
inc
mov
cmc
shl
sub
mov
mov
pop
pop
push
and
cmp
mov
cmp
daa
sub
stos
repz
xor
out
sbb
xchg
out
jecxz
push
mov
in
jmp
call
dec
add
rcl
ins
cmps
or
mov
aaa
inc
xchg
push
scas
mov
and
push
test
xor
and
retf
movs
pop
jno
cmp
dec
sti
inc
sti
jle
shl
sub
inc
fsub
gs
gs
pusha
sbb
repnz
pop
loopne
sbb
cdq
pushf
idiv
inc
sub
fadd
not
retf
jns
xor
retf
lahf
(bad)
sbb
sbb
sub
sahf
inc
xor
shr
gs
push
stc
sbb
add
call
sub
push
cmp
ret
rcl
add
push
out
dec
out
mov
nop
(bad)
retf
fild
in
nop
and
int3
mov
mov
sar
cs
mov
and
adc
out
sahf
and
das
and
jbe
pop
out
cld
mov
xor
cmp
ja
stc
shl
dec
hlt
scas
mov
xchg
inc
je
mov
push
and
add
jae
or
and
push
push
xor
cld
push
cmps
mov
fstp
cmps
mov
jne
or
mov
stos
fnstsw
xor
jge
mov
adc
daa
shr
pusha
push
push
and
fwait
out
icebp
mov
sub
jb
jbe
and
jle
or
jmp
mov
dec
outs
dec
lods
xor
clc
mov
adc
inc
or
cs
jmp
dec
push
arpl
jg
xlat
pop
jne
dec
dec
xchg
inc
leave
pop
and
adc
test
(bad)
(bad)
popf
add
mov
push
ds
mov
hlt
push
ins
rcr
add
cmp
dec
sti
mov
sahf
jp
dec
jp
cmps
jnp
movs
call
adc
sbb
enter
ins
pop
sub
push
xchg
(bad)
in
(bad)
ins
mov
cmps
inc
jae
jb
loopne
loop
cmp
and
add
inc
mov
fstp
push
(bad)
call
xor
outs
push
sahf
dec
jg
mov
pop
call
inc
daa
movs
shr
data16
repnz
icebp
or
cs
mov
mov
and
enter
mov
out
ret
xchg
pop
dec
repnz
mov
add
fwait
into
xor
cmc
sahf
mov
push
pusha
xchg
cmps
mov
cmp
cli
mov
test
fs
fcmove
mov
dec
or
daa
into
cmc
push
mov
call
popf
xchg
mov
mov
sti
in
cwde
sti
dec
xor
mov
xchg
out
push
mov
xchg
push
and
jns
das
test
pop
and
sbb
or
jmp
aaa
pop
enter
pushf
inc
imul
icebp
lds
arpl
daa
aas
ds
cdq
nop
jbe
xchg
add
ds
(bad)
ds
mov
fistp
test
cmp
cmp
(bad)
cmp
jg
xor
sbb
xchg
xchg
dec
(bad)
(bad)
jb
mov
sbb
xchg
movs
ja
(bad)
pusha
push
jle
jmp
dec
je
data16
mov
(bad)
ins
lahf
and
(bad)
push
lds
inc
mov
mov
punpckhdq
cli
add
mov
fwait
xchg
pop
push
lock
addr16
add
(bad)
sub
sub
ds
lea
call
dec
mov
das
loop
inc
dec
xchg
dec
and
cdq
mov
test
test
icebp
mov
out
add
cmps
dec
dec
inc
add
je
jmp
mov
shr
not
les
sbb
movs
inc
pusha
loopne
fdivr
jmp
aaa
outs
das
mov
imul
push
retf
or
and
cld
pop
mov
cli
pop
mov
push
dec
popf
std
call
push
imul
and
test
ja
inc
loopne
test
ja
mov
mov
or
lock
lds
ins
outs
outs
mov
fld
aam
sti
aam
add
fcmovnb
xchg
adc
loope
movs
dec
scas
or
inc
xchg
nop
xor
aam
xor
fcomp
and
cmps
imul
xchg
cmc
dec
or
clc
aam
out
mov
mov
pop
test
nop
aas
in
test
test
push
mov
hlt
sbb
xchg
ja
das
cmps
dec
out
push
into
fidiv
pop
lock
mov
ja
inc
test
cli
ret
ret
lds
push
jns
xor
test
pop
test
lock
(bad)
xchg
mov
rep
lea
retf
les
in
xchg
add
dec
popf
cmps
and
pop
sub
cdq
data16
or
pop
fiadd
stos
pop
push
je
aad
sar
ins
mov
xor
mov
lahf
mov
int3
pop
cmps
sub
fmulp
scas
in
int3
sub
imul
cld
xlat
push
loope
push
pop
ss
pop
outs
out
cmp
or
jecxz
xor
cdq
das
clc
mov
xchg
scas
(bad)
dec
shl
push
jl
xor
jmp
call
test
mov
inc
pop
cmps
inc
into
ret
adc
xchg
fnstsw
not
out
movs
mov
or
jnp
pop
ja
in
mov
cmp
and
xchg
sbb
mov
mov
adc
mov
pop
pop
xchg
jmp
jmp
sti
or
test
sub
sub
cli
cmp
(bad)
mov
mov
stc
(bad)
jae
xchg
aad
mov
ds
(bad)
push
leave
sub
cmp
mov
xchg
adc
lods
jno
cdq
test
xchg
cmp
gs
cmp
mov
and
lds
inc
push
xor
lea
jg
retf
call
and
mov
or
push
sahf
cmps
push
pop
ret
test
call
mov
fdivr
cmps
add
ins
mov
(bad)
dec
loopne
js
(bad)
hlt
inc
test
push
lea
xor
(bad)
test
mov
adc
retf
push
cmp
xchg
or
or
test
sti
or
or
mov
push
sub
mov
and
lock
fs
arpl
fisttp
rcr
sbb
jne
clc
int3
and
and
retf
movs
jns
sub
fldenv
sbb
xchg
fisubr
inc
int
or
adc
loop
jecxz
ja
mov
jae
lahf
adc
fld
inc
mov
mov
les
inc
and
fadd
mov
cld
scas
mov
aam
ja
ret
sub
sbb
sahf
jmp
mov
mov
shl
fwait
(bad)
jbe
sbb
xchg
cld
cmc
xor
push
jo
nop
mov
xor
cmps
mov
pop
call
and
shr
mov
imul
sahf
lods
dec
aad
jg
inc
cs
out
push
movs
pop
push
sub
mov
rcl
push
fcomp
ret
(bad)
les
fadd
jbe
mov
mov
outs
add
cld
sub
push
scas
idiv
ins
inc
add
cdq
ins
mov
mov
das
loope
add
das
call
push
sar
pop
mov
imul
fdivr
mov
cld
shr
fsubr
sub
inc
test
push
mov
ds
ins
clc
das
arpl
shr
loope
pop
retf
fstp
or
test
loopne
xchg
in
stos
fadd
pop
pop
fucom
loop
adc
rcr
xchg
clc
fcomp
clc
and
(bad)
or
push
cmps
sub
sbb
xchg
cmp
add
inc
rcr
rol
pop
cmp
jecxz
in
fcom
dec
retf
mov
push
(bad)
sub
dec
cmps
add
xor
jmp
push
and
push
scas
sbb
add
es
dec
jmp
pop
aas
imul
jb
mov
add
adc
push
push
mov
cmps
adc
(bad)
jo
jmp
inc
je
and
jecxz
test
mov
sub
inc
es
lahf
and
mov
outs
cmps
mov
adc
jo
cwde
jne
int
inc
dec
mov
adc
sub
push
aam
icebp
lods
test
ins
gs
mov
call
sub
and
pop
xchg
(bad)
fisubr
leave
lock
fst
jp
inc
adc
adc
mov
or
xor
jmp
adc
jno
leave
pop
clc
push
sti
lds
push
add
out
(bad)
(bad)
repz
push
daa
scas
or
clc
shl
sar
push
stc
xor
es
sbb
pop
int3
add
mov
cld
mov
mov
loop
sub
iret
(bad)
jge
cld
je
aad
out
mov
jo
cmp
leave
pop
pop
movs
push
sbb
gs
xor
sub
sar
lods
jg
pop
xor
jne
(bad)
(bad)
call
push
mov
jle
pop
iret
clc
fdiv
adc
jae
mov
mov
out
jg
xor
ss
ret
push
mov
add
pop
jmp
aaa
aaa
mov
xchg
aas
and
pop
ins
lock
ficomp
lahf
mov
pop
adc
mov
cld
in
(bad)
ss
std
push
push
mov
sub
mov
or
mov
mov
cmp
icebp
nop
xor
clc
out
jo
adc
outs
loope
xchg
or
loop
cmp
dec
daa
mov
pop
fld
lahf
dec
pop
sub
push
adc
cmps
nop
pop
jmp
or
pop
fistp
jle
out
iret
push
cmp
stos
and
das
movs
std
scas
xor
pop
inc
mov
aad
jno
gs
sub
js
or
mov
test
int3
mov
mov
(bad)
add
out
mov
shr
and
stc
loopne
pop
xor
or
call
movs
fmulp
inc
inc
mov
in
stos
mov
mov
aad
and
jnp
loopne
and
cmp
mov
or
mov
inc
loopne
(bad)
daa
dec
fnsetpm(287
xor
adc
cmp
(bad)
xchg
in
clc
out
ret
retf
call
pop
mov
cmp
add
mov
loop
in
retf
mov
and
mov
sti
adc
mov
pop
scas
xchg
outs
das
mov
jle
cmp
jmp
cmps
ins
mov
fbld
psubsw
xchg
sub
mov
push
inc
iret
adc
push
nop
neg
and
pop
test
dec
mov
add
fidiv
push
jb
mov
sar
movs
mov
or
sahf
(bad)
arpl
clc
jb
jg
cmp
out
xchg
xlat
cmc
or
push
sub
inc
clc
pop
call
je
push
hlt
movs
add
and
add
jmp
sahf
stos
mov
sbb
bound
es
jp
xor
jno
cmp
movs
push
push
pop
sbb
dec
mov
mov
int3
xor
cmp
add
retfw
mov
pusha
call
or
popf
aaa
dec
sub
inc
dec
aam
push
push
add
inc
adc
inc
js
adc
in
mov
xchg
(bad)
rcl
jp
push
and
push
mov
push
or
in
cmp
xchg
mov
add
lods
pop
mov
jmp
or
adc
mov
mov
fidiv
and
lahf
mov
addr16
cmp
and
ins
jle
cmps
cmp
adc
test
out
cmp
push
pushf
cli
in
cmps
jge
out
or
xor
daa
mov
fidivr
cmp
push
push
xor
jle
push
cli
in
sti
cmp
mov
stc
stos
rol
cld
(bad)
(bad)
fcmovb
cmp
jne
xor
sbb
jecxz
(bad)
ret
fnstenv
pop
call
sar
mov
inc
loopne
xchg
sbb
pop
into
push
push
lods
push
xchg
(bad)
das
fiadd
cmps
push
mov
jl
frstor
sub
jl
dec
inc
dec
scas
xchg
pop
sub
cli
pushf
inc
push
sar
inc
xchg
push
dec
fs
ins
inc
mov
push
sti
sbb
jp
xchg
stc
xor
push
je
enter
loope
cwde
out
add
in
std
push
fwait
ins
shl
mov
push
mov
dec
mov
and
push
and
sub
or
ds
inc
vcvtss2sd
xchg
fild
xor
ins
xor
imul
and
out
xchg
mov
jno
xor
data16
inc
stc
test
mov
sbb
or
dec
int
gs
cld
push
mov
add
and
mov
dec
pushf
or
test
nop
fmul
in
test
cmp
mov
fld
leave
lds
xlat
inc
out
or
jp
lods
pop
mov
and
jge
clc
push
popf
mov
aaa
popa
xor
stc
lods
les
or
pop
div
daa
call
je
rcl
(bad)
mov
xor
dec
outs
xor
xchg
ficomp
in
push
mov
cli
cmps
cmps
jmp
pop
dec
jecxz
dec
in
sar
xor
stos
or
std
js
ss
cmp
mov
and
push
fstp
and
mov
(bad)
cmp
out
jg
mov
adc
icebp
or
mov
pop
xchg
pushf
test
dec
pop
dec
pop
inc
lds
pop
mov
mov
mov
test
js
mov
sti
fst
push
movs
cmp
push
retf
xchg
imul
scas
cli
dec
xchg
js
loope
mov
iret
iret
ja
mov
paddd
hlt
adc
pop
xchg
inc
fwait
icebp
fist
xchg
cdq
loope
stc
mov
inc
jns
loop
adc
sub
ins
aad
sti
inc
mov
push
fwait
xor
dec
imul
xor
or
loopne
dec
adc
out
adc
dec
aas
les
addr16
sub
or
inc
xor
cld
(bad)
retf
mov
jl
les
ja
(bad)
fstp
fcom
test
aam
nop
mov
xchg
enter
jae
out
(bad)
(bad)
adc
push
fwait
jle
cmp
dec
call
sbb
or
sbb
fs
das
push
and
mov
pop
mov
ins
sbb
sub
cmp
and
repz
jmp
sub
lock
dec
mov
(bad)
lahf
ret
cmps
adc
imul
add
ja
push
movs
xchg
aam
xor
daa
shr
imul
fwait
shr
ret
jnp
mov
jo
jge
cmp
jp
xchg
(bad)
and
pop
in
mov
leave
mov
or
fild
es
mov
push
and
loopne
icebp
int3
cmp
mov
fcom
or
push
movs
jbe
loop
xor
mov
cmps
push
and
jne
in
je
lods
push
add
add
push
movs
test
sub
(bad)
popa
pusha
sub
aas
lds
xchg
stc
or
jg
xor
lds
in
mov
jle
(bad)
sub
int
inc
push
mov
vpminub
lahf
ret
movs
jo
ret
rcr
dec
addr16
popa
and
(bad)
or
ins
ret
fsub
cs
adc
mov
jg
test
out
sub
shl
movs
or
mov
cmp
pop
jno
jbe
ret
aas
sbb
(bad)
cmova
mul
push
sub
popf
cmc
add
sti
bound
adc
cli
and
loop
mov
les
pop
adc
pushf
cs
test
das
gs
lods
arpl
push
call
dec
out
cmc
adc
sbb
or
adc
push
data16
push
loope
sub
add
nop
xor
cmp
pop
lods
sbb
and
add
(bad)
push
sub
stos
(bad)
fcomp
ja
adc
and
adc
add
push
aas
mul
fs
out
dec
sahf
pusha
loop
fst
gs
(bad)
mov
sub
sub
mov
xor
push
scas
ins
inc
int3
pop
push
sub
dec
icebp
mov
ss
fwait
cmps
pop
(bad)
fild
push
mov
mov
test
(bad)
xchg
sahf
push
loopne
xor
jae
arpl
mov
or
xor
ss
inc
fs
inc
leave
push
xor
or
inc
push
and
sbb
cmps
rcl
push
arpl
or
stos
xchg
jb
movs
test
sub
xchg
test
pop
xor
and
cmps
jg
(bad)
and
mov
or
cmovno
and
stc
adc
pop
xor
mov
shl
call
aaa
ret
out
and
cmp
mov
jmp
in
and
cmp
and
cmp
(bad)
sbb
cmp
mov
adc
mov
cmp
mov
push
jmp
cmps
enter
sub
movs
mov
out
adc
xchg
add
int
inc
xor
loope
pop
stos
lock
mov
les
jg
xchg
fisub
in
into
call
test
mov
test
fwait
jae
xlat
loopne
shl
pop
adc
fst
mov
push
pop
jo
dec
cmps
push
outs
xor
pop
jbe
cld
sbb
jg
cld
lds
add
dec
xlat
pop
retf
outs
cmps
xchg
jp
xor
sahf
ins
mov
fs
out
sbb
dec
mov
or
movs
mov
and
xor
add
xor
sbb
pop
mov
and
push
cmp
cdq
loopne
pop
pop
add
iret
out
repnz
and
shl
pop
sbb
adc
cmps
jge
mov
xor
inc
dec
pop
(bad)
jecxz
aas
xor
mov
aas
mov
aas
out
jge
retf
(bad)
aas
pop
fnstenv
lods
std
ss
jmp
push
fidiv
pop
pop
outs
movs
mov
in
adc
adc
sbb
(bad)
or
dec
sbb
xlat
mov
movs
lods
mov
push
push
and
jge
scas
jmp
jle
shr
mov
test
inc
lea
fcmovnb
gs
movs
leave
add
dec
ss
iret
pop
inc
nop
or
xchg
frstor
popa
mov
mov
hlt
or
pop
push
outs
push
mov
mov
mov
fldenv
imul
pop
and
xchg
mov
jmp
jp
jg
lahf
dec
inc
pop
and
je
xchg
idiv
sub
mov
loop
fcom
stos
jbe
into
pop
dec
xor
push
add
cmp
lea
push
outs
push
dec
scas
add
mov
leave
inc
or
mov
(bad)
cwde
outs
ja
in
arpl
test
sbb
outs
xchg
mov
scas
test
lods
xor
sbb
imul
mov
adc
fmul
lods
mov
push
mov
je
movs
jbe
adc
push
pop
(bad)
sbb
adc
push
inc
cs
test
cs
es
jmp
fs
call
shr
or
push
shl
(bad)
push
repz
neg
mov
pop
pop
stos
test
sar
inc
jg
xor
arpl
pop
(bad)
outs
adc
inc
out
popf
loope
scas
in
retf
out
(bad)
jmp
xchg
jae
inc
sub
aaa
push
leave
ins
mov
aas
ror
fnsave
movs
jl
adc
sbb
out
nop
xchg
push
int
pop
shl
inc
imul
ja
dec
push
stc
call
call
xor
mov
inc
pop
loopne
(bad)
xchg
icebp
sbb
test
sbb
imul
out
sti
je
jno
or
pop
fst
jno
std
rcr
into
ja
dec
in
mov
push
cmp
call
fidiv
int
ds
add
mov
jno
mov
lods
repz
gs
jg
pop
cwde
mov
fiadd
inc
ja
es
fnstcw
dec
sahf
push
adc
fs
inc
cmp
xchg
fcmovne
sbb
sub
and
mov
retf
out
(bad)
into
movs
(bad)
cli
shl
mov
mov
jno
fimul
or
mov
sub
mov
iret
add
into
xchg
out
pop
and
movs
inc
cli
int3
or
gs
clc
int
xor
push
and
movs
push
stos
(bad)
fidiv
xchg
push
dec
pop
imul
mov
je
inc
and
inc
dec
push
adc
das
push
dec
out
xor
sub
push
aad
loop
js
jbe
mov
arpl
retf
pushf
sub
dec
or
pop
aad
sbb
xchg
dec
cwde
stos
lahf
push
call
repnz
gs
jge
loop
sbb
movs
and
sub
mov
ret
add
outs
sbb
repnz
inc
mov
(bad)
jne
push
aam
cmp
ror
jno
xchg
cmp
jnp
icebp
ins
ret
mov
or
jl
mov
test
mov
mov
xor
fnsave
push
scas
push
out
sub
imul
or
xor
dec
les
jmp
push
xor
in
dec
or
ss
iret
int
jl
popf
xchg
loope
shl
sub
mov
mov
and
loope
mov
xchg
push
jecxz
cmps
mov
mov
jl
fidiv
fprem1
enter
cs
out
and
(bad)
cmps
add
aam
aam
lds
loope
out
or
js
mov
cmp
mov
or
push
and
imul
add
ret
mov
out
(bad)
sub
cs
cmc
dec
fnstcw
fisub
das
mov
out
add
daa
pop
aas
scas
jb
int
mov
pop
xchg
or
inc
inc
ret
and
out
xchg
mov
in
mov
and
rcr
jb
push
cwde
fst
mov
fstp
call
fiadd
clc
int3
shl
or
push
fcmovnu
mov
sti
clc
pop
jmp
mov
xor
jne
or
or
cdq
mov
js
sbb
ja
(bad)
popa
xor
arpl
icebp
icebp
inc
jmp
inc
or
out
xor
mov
mov
jno
movs
jg
xchg
jnp
nop
imul
cmc
je
jp
mov
popf
lods
ins
pop
int
sbb
outs
div
punpckhdq
mov
push
pop
mov
iret
(bad)
test
mov
or
and
sahf
xchg
sbb
and
in
mov
adc
mov
les
outs
dec
(bad)
into
mov
adc
dec
mov
outs
jae
bound
stos
pop
fistp
push
mov
out
mov
sub
out
xchg
(bad)
mov
movs
adc
sub
idiv
imul
and
push
mov
cmp
jmp
fwait
int
sbb
dec
test
push
retf
add
push
and
xlat
mov
cmps
aad
repnz
les
or
(bad)
fxch
inc
add
sti
adc
dec
sub
je
lea
push
mov
sub
dec
xor
or
nop
pop
mov
dec
jb
pop
je
cwde
mov
xchg
mov
ficom
scas
in
mov
shl
addr16
cmp
push
ret
sbb
cmp
in
pop
repnz
(bad)
shl
jnp
into
xor
mov
dec
(bad)
stc
icebp
fmul
push
sbb
(bad)
stos
pop
cdq
loopne
sbb
popf
loope
out
imul
push
loopne
jb
mul
idiv
and
add
cli
jno
test
inc
sub
ins
jb
fwait
sbb
xor
movs
jg
pop
scas
or
add
sahf
and
dec
aad
inc
sub
dec
je
mov
bswap
pop
mov
into
cmp
pop
sub
das
add
fiadd
sbb
fiadd
addr16
clc
add
lea
jecxz
adc
push
movs
xchg
cs
xor
jae
inc
mov
jecxz
mov
mov
xlat
addr16
and
or
adc
jno
bound
loop
inc
test
sub
and
inc
(bad)
jp
xchg
das
in
ss
jmp
xchg
adc
push
pop
aas
mov
dec
pop
adc
ret
ret
jo
not
(bad)
test
icebp
arpl
jae
mov
adc
jl
retf
push
jbe
aam
out
and
add
ficom
and
pop
pusha
(bad)
fstp
nop
out
push
jle
adc
movs
xlat
inc
adc
outs
sbb
nop
cli
outs
stos
xchg
stc
sub
or
outs
iret
fst
aas
pop
das
mov
sub
mov
scas
pop
jmp
or
mov
or
push
jecxz
sub
xor
idiv
outs
fmul
cmc
in
imul
dec
into
xchg
sbb
(bad)
popa
jp
mov
mov
add
adc
jp
aad
popa
mov
loope
repz
out
sub
dec
sbb
loopne
mov
daa
cdq
outs
cmp
les
jnp
jg
pop
loop
or
cmp
(bad)
shl
xchg
sub
cmp
cmp
push
sub
jle
jge
sub
add
enter
adc
push
loopne
pop
outs
mov
inc
lds
lds
mov
mov
cmp
stos
mov
cmp
adc
and
cmps
dec
fs
push
adc
mov
aam
jp
shl
cmps
jl
xchg
xor
fidivr
mov
popa
mov
inc
pop
movs
xchg
ror
mov
or
mov
xor
dec
in
cmp
stos
push
mul
ds
mov
lods
add
test
and
int3
fdivr
mul
retf
xchg
push
(bad)
enter
pop
sub
imul
outs
inc
(bad)
pop
add
cwde
icebp
call
fdiv
sub
ret
int
ins
add
jo
pop
jl
mov
xchg
pop
scas
inc
mov
(bad)
rcr
rcr
inc
mov
push
dec
cld
ins
icebp
xor
(bad)
dec
popa
in
scas
es
mov
and
adc
lock
sbb
pusha
shl
std
stos
sar
push
scas
popf
and
mov
pushf
lds
pop
xchg
stos
cs
mov
dec
mov
out
inc
imul
out
jle
dec
gs
jmp
inc
sub
(bad)
lock
aaa
jae
pop
in
movs
test
jmp
jno
test
cmp
jg
mov
out
xchg
test
rol
lods
pushf
mov
mov
or
jbe
clc
ja
mov
stos
push
shr
scas
cmp
mov
dec
add
hlt
iret
push
mov
movs
aad
sbb
mov
fwait
mov
sub
pop
into
ffree
(bad)
cmps
add
mov
test
cwde
xchg
jo
mov
cmp
pushf
lahf
icebp
ja
in
(bad)
lahf
rol
pop
and
(bad)
add
adc
aas
xchg
sbb
stos
mov
test
clc
adc
lods
mov
pcmpeqd
popa
jl
pop
sub
scas
(bad)
or
mov
mov
mov
push
push
retf
mov
outs
xchg
push
jo
or
(bad)
fisub
inc
and
aaa
rol
push
jp
dec
rcl
nop
or
popa
or
ins
fwait
jg
push
xor
push
fadd
pop
pop
cmc
mov
mov
aam
pop
stos
int
test
adc
adc
add
cmp
inc
or
hlt
int3
das
adc
inc
inc
jp
mov
jp
dec
lock
fsubr
out
jge
std
mov
ins
fadd
and
dec
ret
jecxz
push
push
ss
fisubr
stos
dec
call
and
movs
loopne
xlat
shl
mov
inc
dec
cmp
cmp
jl
shl
inc
mov
xlat
or
arpl
stc
rcl
pop
mov
adc
add
jne
mov
xchg
out
sbb
sbb
jno
ins
or
and
(bad)
mov
(bad)
in
addr16
shl
in
xor
es
pop
cs
(bad)
mov
pop
xchg
adc
icebp
push
aas
pop
les
inc
mov
out
cmp
sti
pusha
cmp
in
sbb
pusha
ret
push
les
and
pop
pop
mov
cli
lods
pop
in
addr16
xor
jae
pop
and
cmp
jge
inc
add
fmul
and
dec
mov
sub
js
push
(bad)
xor
mov
mov
jns
out
pop
lods
test
pop
fdiv
test
mov
pop
mov
icebp
outs
int
mov
fucomi
stos
dec
lds
dec
jo
ret
pushf
mov
push
retf
mov
(bad)
xor
mov
push
add
mov
add
lods
ins
lods
jae
out
mov
es
mov
inc
pushf
cmp
sbb
enter
lahf
mov
in
mov
aaa
and
jmp
xchg
loop
push
add
push
push
or
fs
mov
xchg
(bad)
rcr
push
rcr
sbb
xchg
mov
mov
push
mov
xlat
add
sti
jne
add
jbe
aad
xor
scas
daa
hlt
cmps
pop
jb
pop
sbb
sahf
xor
mov
add
in
inc
in
add
ds
ja
sbb
sbb
mov
sti
push
pop
pop
popf
jmp
xchg
push
pop
lods
retf
sub
xchg
aad
fs
addr16
add
in
fdiv
mov
jbe
call
int
add
popf
stos
fiadd
movs
inc
and
inc
push
xchg
pop
add
sbb
cdq
mov
aam
jl
lea
sti
repnz
pushf
in
xor
lods
loope
mov
dec
and
mov
fidiv
mov
adc
sar
sti
repz
push
xor
or
outs
mov
or
sub
movs
xchg
sti
inc
punpckhbw
push
sbb
mov
and
jmp
add
call
fs
hlt
add
add
xchg
mov
mov
jmp
cmp
or
fbstp
jle
mov
mov
out
retf
xor
jbe
xlat
or
inc
jne
add
push
cmp
pop
push
mov
mov
aaa
mov
push
in
(bad)
xor
cmp
ds
or
mov
cmp
shl
shr
ja
loopne
punpckhbw
aaa
jge
cmp
retf
sub
stos
jb
xor
pop
ret
idiv
pop
dec
jl
push
mov
pop
clc
pusha
stos
inc
mov
mov
je
fsub
pop
push
sbb
xchg
in
xor
sub
jb
nop
adc
add
fstp
push
dec
dec
call
push
jb
das
lods
and
dec
push
pop
imul
xor
inc
mov
mov
test
scas
jge
shl
xor
push
das
sbb
dec
test
pop
or
xor
loopne
push
int3
(bad)
(bad)
in
push
jb
jb
mov
jle
mov
icebp
push
mov
jno
xchg
shl
cmps
xlat
and
(bad)
mov
pop
jg
mov
das
cmp
iret
jg
sbb
pop
xchg
push
inc
retf
pop
mov
inc
fstp
not
ss
cld
stos
xor
mov
scas
pop
fs
ret
xor
ins
push
fisubr
test
fbld
mov
imul
mov
cmp
adc
pop
mov
into
push
sbb
adc
and
out
div
xchg
(bad)
out
dec
pop
jno
jnp
ss
add
mov
xor
mov
mov
ret
dec
and
sbb
mov
test
in
stc
sbb
retf
(bad)
push
cmp
add
mov
lods
imul
and
xor
ret
(bad)
jo
shl
into
mov
cmp
add
push
movs
popw
adc
or
push
(bad)
dec
mov
cmp
pop
jp
pop
int
pop
or
mov
push
sbb
and
fst
add
stc
pop
xor
test
repnz
or
out
(bad)
cmc
xchg
lahf
push
cmps
mov
cmp
mov
in
sub
xor
and
clc
fstp
or
repnz
lods
in
data16
std
rcl
sti
mov
add
retf
movs
xchg
pop
addr16
inc
mov
shl
outs
pop
jb
in
test
or
and
into
js
dec
xor
push
sti
fnsave
(bad)
mov
ret
(bad)
fxch
in
mov
dec
push
test
mov
sub
repz
xor
push
push
xor
movs
inc
and
dec
mov
push
xor
add
ret
aas
cmp
mov
sub
mov
imul
jne
loope
cmp
aaa
adc
push
(bad)
and
daa
test
adc
cdq
dec
jle
fcomp
aas
das
or
push
cmp
hlt
mov
jns
sbb
je
mov
dec
call
xchg
dec
movs
xchg
in
icebp
fwait
arpl
or
and
jge
mov
adc
or
inc
jecxz
(bad)
pushf
pop
in
mov
icebp
int3
movs
aam
adc
pop
int3
sub
not
imul
dec
mov
xlat
and
add
push
outs
push
not
jmp
push
outs
ror
dec
hlt
add
out
(bad)
ja
lea
aad
ficom
and
jle
out
mov
xor
sbb
cmps
out
repz
add
test
pop
lock
and
and
dec
adc
xchg
daa
mov
rcr
mov
les
arpl
cmp
adc
inc
cwde
stos
aaa
xor
sbb
fcmovne
and
sub
sub
add
ins
movs
jne
test
retf
shl
mov
sbb
xor
cmps
xor
add
xchg
mov
jmp
fs
fwait
adc
mov
dec
(bad)
and
pop
jle
jmp
jmp
inc
add
retf
pop
xchg
mov
jb
scas
shr
mov
aam
mov
addr16
xchg
pop
clc
in
ins
stos
movs
std
sar
pop
and
shr
rol
es
or
pop
xchg
retf
add
jp
or
out
xor
inc
rcr
inc
mov
pop
jmp
push
or
jg
ror
cs
push
pop
mov
xchg
(bad)
push
pop
je
sbb
jmp
sub
xchg
mov
popf
call
std
shl
lods
movs
xchg
pop
xor
fcmove
mov
test
inc
popf
cmps
push
pop
in
jns
fadd
mov
cmps
shl
enter
in
sahf
sar
sahf
mov
cdq
mov
fsubr
fsub
dec
mov
mov
and
cmp
mov
retf
loope
jns
std
add
loope
call
mov
sub
add
in
cmp
mov
scas
push
mov
add
jmp
movs
mov
pop
xor
pop
(bad)
stc
sub
pop
xor
pop
lds
or
push
mov
and
lea
inc
xchg
dec
mov
repnz
int3
sub
jo
out
aaa
ror
xor
or
aas
out
xor
xchg
xchg
imul
cmc
sub
mov
movs
dec
iret
add
mov
inc
pushf
call
icebp
dec
sbb
and
mul
or
add
dec
das
int
push
add
scas
dec
fwait
movs
mov
jle
mov
cld
(bad)
cmps
test
push
stos
in
xchg
mov
jns
test
dec
jo
jns
cwde
lds
and
dec
mov
or
jo
enter
add
dec
popa
inc
shr
mov
sub
repnz
repz
dec
ss
fcom
fdiv
retf
mov
mov
jge
loope
dec
and
aaa
xor
push
outs
inc
bound
repnz
leave
dec
fidivr
xchg
dec
mov
jl
adc
into
add
test
xchg
imul
add
in
mov
xchg
stos
inc
jno
arpl
xchg
and
push
adc
add
stos
push
sub
dec
movs
pop
in
fwait
int
test
inc
inc
popa
cmc
adc
int
and
adc
mov
addr16
movs
sbb
jle
mov
jl
jecxz
je
fwait
shl
sub
xor
fs
mov
ret
jl
call
push
adc
mov
add
fistp
daa
pop
sbb
dec
fcmovb
lock
mov
dec
retf
inc
outs
inc
out
push
dec
jb
push
pop
popa
adc
sub
jp
and
test
mov
cmc
and
push
sbb
xchg
jnp
sbb
sub
bound
and
ss
int
ins
mov
inc
jg
sbb
into
or
jns
adc
enter
or
retf
repz
in
aas
inc
repnz
mov
repz
dec
xlat
jp
and
setbe
loope
popf
leave
jle
call
jbe
mov
cmps
inc
dec
sub
out
iret
nop
jb
out
rcr
mov
push
jns
data16
push
aas
cmc
push
adc
gs
cmp
add
push
cmp
mov
add
add
test
aas
call
cmp
mov
push
ss
popf
push
call
std
mov
stos
scas
xor
adc
push
es
sbb
mov
cmp
cmp
jb
cmp
(bad)
cli
or
mov
or
inc
ins
fisttp
fwait
fs
add
repnz
arpl
jb
sbb
pop
out
inc
leave
add
ss
jl
add
push
test
pop
stos
adc
dec
imul
xlat
sbb
out
xchg
int
pop
jmp
test
loope
add
xchg
jge
jp
jp
dec
loop
cmps
push
sbb
sbb
in
sbb
shl
adc
xor
inc
pop
in
push
pop
pop
mov
je
xor
dec
std
inc
ds
fs
repz
mov
loopne
sub
fs
add
inc
sub
lods
sub
shl
sub
sbb
test
dec
sub
sbb
das
call
xor
mov
mov
sub
sbb
and
adc
outs
out
cld
daa
sub
cmp
ret
cs
into
dec
add
jle
add
dec
gs
xor
loopne
jg
jl
pop
lock
lods
ins
clc
mov
cmp
ins
sbb
mov
int3
bound
fdiv
jbe
xchg
mov
ret
xor
enter
les
repnz
aaa
out
add
into
inc
aad
aas
inc
and
mov
je
add
outs
retf
cwde
test
inc
adc
repz
xlat
mov
and
not
call
jge
jg
pop
mov
add
pushf
fisttp
aaa
in
push
inc
add
and
imul
add
fs
jb
push
pop
sub
mov
push
loopne
sar
sbb
cmp
pop
pop
das
jg
ror
mov
sbb
push
adc
xchg
adc
add
js
inc
xor
or
xor
jl
cmp
inc
xchg
inc
xchg
fmul
xor
mov
(bad)
(bad)
pop
cmc
jne
pop
push
dec
adc
shl
xchg
stos
movs
sbb
arpl
xlat
addr16
rol
idiv
out
pop
fimul
dec
nop
cmc
push
xor
fnstsw
mov
cmp
ret
mov
mov
fnstsw
cwde
push
rcr
xor
mov
jp
adc
jo
mov
arpl
fstp
stos
adc
(bad)
ins
inc
jle
and
jmp
(bad)
xor
mov
jns
push
push
mov
adc
xchg
(bad)
jns
sub
out
ret
stos
pop
mov
add
jnp
dec
inc
sahf
inc
sahf
mov
xor
and
adc
cmp
push
pusha
(bad)
sti
adc
stc
push
(bad)
push
sbb
inc
nop
fiadd
arpl
outs
cmps
xchg
fst
push
add
sub
inc
or
(bad)
xor
mov
mov
pop
sti
dec
(bad)
loope
into
(bad)
xchg
xchg
call
jo
mov
iret
stc
ss
adc
and
jnp
clc
pop
aaa
xchg
sbb
dec
sbb
inc
scas
outs
xchg
stos
fwait
and
cdq
hlt
fwait
xchg
adc
pusha
dec
nop
int3
xor
mov
cwde
or
sub
inc
(bad)
and
sbb
jmp
or
leave
and
sub
out
xchg
cmp
xchg
inc
inc
mov
and
iret
pop
mov
xor
repz
cmp
and
mov
std
pop
rol
sub
pop
mov
jbe
mov
scas
mov
and
push
cmp
adc
test
pop
add
xchg
and
push
inc
push
push
lock
div
frndint
aas
lahf
fldcw
ds
pop
pop
ja
popa
mov
inc
lods
cs
xor
xchg
cmp
push
fsubr
and
(bad)
scas
cmp
add
cs
into
adc
or
sub
(bad)
(bad)
(bad)
or
movs
cmps
pop
push
and
ss
mov
ret
call
outs
xchg
das
push
push
add
arpl
clc
push
scas
fwait
sbb
jb
fwait
inc
inc
cmc
and
and
sbb
repz
add
inc
pop
shl
cs
push
addr16
fwait
xchg
sbb
shl
movs
xor
or
ret
jnp
pop
xchg
xchg
ja
je
jecxz
pop
or
xor
cmp
mov
or
in
jmp
dec
movs
outs
xchg
dec
mov
aas
jl
inc
xchg
mov
xchg
test
or
pop
mov
or
rol
retf
stc
inc
test
cmp
mov
dec
leave
je
adc
sbb
jecxz
lahf
inc
cmp
mov
push
call
pop
cmp
push
popa
sub
out
lea
pop
sbb
test
jp
add
or
mov
call
dec
xchg
fisttp
sbb
shl
mov
ins
hlt
adc
xchg
call
jnp
xchg
(bad)
sbb
mov
fwait
jno
sbb
push
add
stos
push
dec
and
ret
ins
mov
or
out
adc
mov
push
mov
fisub
out
loop
ja
scas
outs
adc
jmp
and
scas
jecxz
jbe
or
lahf
push
fucomp
push
add
call
cmp
aad
pop
and
and
std
leave
push
loope
inc
and
fidivr
xchg
adc
(bad)
sar
adc
jns
push
repz
sbb
ss
mov
sti
jbe
and
xchg
mov
ss
mov
mov
mov
popa
mov
popa
fwait
add
push
mov
add
push
inc
(bad)
jp
fldenv
xlat
cmp
lahf
scas
les
push
call
aaa
pop
jl
shr
sbb
stos
sub
cld
dec
sub
ins
cmp
imul
mov
icebp
call
pop
pop
jbe
cld
cmpxchg
test
mov
(bad)
mov
outs
stos
test
xchg
mov
clc
in
cwde
add
xor
dec
rol
jl
add
shr
fcomp
adc
in
xchg
push
cmp
mov
and
mov
mov
and
mov
dec
movs
test
test
ins
adc
popf
mov
addr16
int
push
adc
xor
aas
sbb
fnstenv
xor
push
push
or
les
pop
mov
fisub
sar
mov
push
repz
call
fisttp
mov
push
sub
sub
imul
and
sub
cs
in
add
ja
mov
or
ret
es
rcr
pusha
dec
retf
mov
popf
cwde
jae
jmp
jmp
jg
out
jae
repz
call
inc
stos
arpl
mul
push
sbb
ja
dec
lds
jg
jmp
or
stos
inc
cwde
adc
sahf
sub
addr16
dec
sub
push
iret
idiv
pop
adc
xor
sti
je
jns
pop
dec
iret
mov
mov
adc
dec
xor
xor
add
test
cli
lods
xor
xor
popa
push
inc
add
jae
les
mov
lods
xchg
bound
dec
addr16
inc
cmp
mov
fst
jns
xor
nop
mov
mov
mov
push
mov
sbb
mov
jns
popa
fld
dec
mov
xlat
add
add
inc
fild
movs
pop
adc
cwde
adc
stc
push
jle
cmp
xor
pop
jmp
push
je
sub
push
test
xlat
pop
lock
arpl
push
xchg
out
je
push
aad
(bad)
das
lock
or
ret
push
cmp
dec
cmps
(bad)
cld
pop
dec
stos
scas
push
cmc
pop
adc
xchg
(bad)
sbb
dec
fist
dec
shr
jg
and
out
(bad)
jmp
jnp
sub
add
pop
xor
xor
retf
std
ins
(bad)
sbb
mov
add
int
xlat
inc
push
jne
scas
jno
mov
imul
inc
adc
mov
cmps
ror
jmp
or
sar
pop
loop
adc
sub
jbe
repz
cmp
(bad)
aas
(bad)
test
sub
dec
std
test
xchg
imul
or
pop
aad
(bad)
push
aas
mov
(bad)
push
jo
cmp
test
or
jg
or
or
adc
fdiv
push
xor
cmc
jg
and
sbb
lods
outs
jge
loop
out
stos
sub
pusha
ss
adc
mov
or
inc
jg
inc
push
cmp
xchg
push
cmc
dec
ins
or
frndint
out
arpl
iret
pop
(bad)
cdq
xor
lock
mov
retf
fwait
stos
js
xor
adc
and
stos
shr
pop
lods
and
movs
dec
out
ficomp
fimul
mov
mov
js
xor
and
sbb
scas
add
jge
xchg
mov
add
xchg
dec
xchg
lods
adc
adc
pop
adc
in
sub
movs
add
inc
sbb
mov
fstp
iret
dec
scas
inc
or
(bad)
sub
and
sub
dec
push
loopne
sbb
or
popa
mov
inc
or
add
addr16
add
and
iret
cmps
cli
push
pop
loopne
xchg
cs
sub
cli
xchg
test
mov
xchg
mov
repnz
mov
and
add
and
fwait
pop
mov
inc
jge
sub
jbe
aad
pop
sub
mov
or
lds
or
sub
jg
jnp
xchg
or
cld
sbb
hlt
imul
mov
scas
test
sub
cmp
or
mov
(bad)
mov
repnz
scas
popf
mov
sub
push
ret
pusha
inc
pop
dec
ss
mov
and
adc
call
sar
add
mov
repz
pop
xchg
stos
pop
and
mov
jnp
mov
push
stos
gs
push
retf
ja
jbe
retf
rcl
push
dec
repnz
cs
xchg
out
cmp
int3
and
push
sbb
mov
shl
call
pop
adc
pop
adc
adc
cmc
into
aaa
or
jnp
mov
push
aaa
lea
and
(bad)
pop
or
cli
mov
dec
imul
cmp
dec
pop
pop
cmc
dec
lods
pop
inc
sbb
(bad)
adc
jmp
(bad)
dec
jns
icebp
neg
push
outs
rcl
lods
push
mov
mov
adc
inc
call
mov
in
inc
push
mov
pop
push
sbb
aas
or
sbb
xor
or
dec
(bad)
mov
or
mov
and
mov
pop
mov
xchg
dec
ja
ror
es
outs
or
out
or
dec
or
jecxz
xchg
repz
push
bound
adc
(bad)
dec
add
rol
sub
les
mov
dec
or
out
cmc
and
mov
push
pop
add
jecxz
mov
and
adc
mov
test
in
fwait
jle
iret
xchg
cmp
loope
mov
mov
sub
pushf
mov
jg
pop
jnp
adc
mov
jbe
add
sub
daa
in
and
jne
ror
sub
rcl
es
sbb
jb
push
sub
bound
call
push
jl
push
loop
ror
add
inc
in
xchg
mov
imul
in
cmp
sub
mov
or
div
out
or
add
cmp
mov
mov
ja
jae
adc
and
sahf
xor
scas
cli
in
add
dec
push
mov
push
jecxz
xor
jmp
jo
loop
jmp
push
xchg
leave
xchg
(bad)
mov
aad
cli
mov
add
dec
mov
dec
repz
(bad)
fidiv
mov
lods
mov
jmp
fprem
jecxz
pop
cmpps
add
call
(bad)
(bad)
mov
mov
jle
ror
in
test
xchg
sbb
daa
and
xchg
lods
bound
adc
cmp
iret
cli
xchg
mov
pushf
adc
xchg
xchg
and
in
adc
fcomp
add
dec
push
imul
js
add
jecxz
enter
pusha
sub
lock
es
sbb
stc
rcr
or
jno
push
and
stc
stc
push
std
(bad)
aad
fdivr
arpl
mov
inc
jns
xlat
jmp
mov
lds
mov
pusha
jge
cmp
mov
rcl
xchg
nop
loope
mov
aas
push
imul
ds
iret
inc
inc
push
jmp
lods
fs
rcl
ja
jne
stos
or
pop
and
scas
sahf
(bad)
(bad)
or
xchg
aam
jno
push
or
(bad)
mov
gs
aaa
inc
jl
call
and
ret
sub
adc
bound
clc
sbb
clc
test
fild
jae
cmp
push
pop
push
sbb
mov
pop
dec
aas
adc
jp
sti
push
(bad)
cmc
call
cmps
add
outs
arpl
icebp
cmp
mul
faddp
xlat
js
out
add
jl
das
inc
(bad)
shl
dec
rol
nop
fdiv
mov
lods
fwait
jo
mov
(bad)
lods
xchg
push
lahf
mov
jg
pop
push
push
sub
push
scas
ins
jecxz
repz
and
rol
or
mov
add
repz
xchg
adc
mov
mov
add
mov
or
push
stos
pop
xchg
mov
(bad)
mov
sub
loope
adc
push
cmps
mov
call
pop
xor
(bad)
dec
rcr
mov
adc
push
out
cmp
rol
mov
test
fwait
jno
and
stos
sbb
adc
push
push
ja
push
lods
aad
xchg
hlt
jge
dec
sub
pop
dec
and
movs
xchg
movs
mov
push
jns
movs
dec
sbb
dec
nop
or
sub
add
or
xchg
xchg
mov
jp
xor
inc
out
inc
dec
xchg
inc
call
dec
push
clc
jle
outs
inc
cmp
inc
scas
cld
bound
es
out
mov
xchg
sahf
ja
cmps
mov
jns
sbb
stc
sbb
loope
mov
div
sbb
mov
sbb
(bad)
(bad)
aam
(bad)
imul
aaa
sub
neg
sahf
loop
push
push
stos
cmps
into
jne
xchg
out
push
adc
sub
(bad)
mov
std
push
pop
movs
fcom
mov
into
cmp
clc
sbb
ja
jbe
lods
adc
ds
mov
test
hlt
jo
leave
sub
cmps
inc
inc
cs
cmps
sbb
mov
jg
push
xchg
sti
jmp
icebp
mov
in
outs
ds
lods
rcr
cmps
mov
or
or
scas
inc
mov
cs
fistp
add
xor
ds
dec
mov
mov
xchg
outs
adc
mov
xor
xchg
jle
stos
shr
rcr
add
adc
aaa
dec
mov
test
sbb
fisubr
mov
mov
sub
div
pop
int
sub
out
sbb
(bad)
repz
xchg
push
fadd
cs
xchg
inc
retf
movs
sub
cmp
test
in
pop
loopne
(bad)
jge
(bad)
rol
jbe
push
mov
nop
retf
sub
out
push
int
jg
imul
mov
mov
(bad)
nop
sbb
xor
add
or
call
iret
dec
jl
scas
js
in
cmp
int
push
sbb
ins
iret
imul
movs
push
inc
pop
ins
xor
pop
push
jno
cmp
and
sub
repnz
out
iret
call
imul
sbb
cmp
inc
pop
mov
adc
adc
sbb
mov
xchg
inc
jge
imul
loop
sahf
sbb
mov
lock
and
dec
cld
lods
inc
or
ret
jne
in
adc
adc
sbb
sub
adc
fadd
call
into
mov
mov
mov
mov
mov
or
test
sbb
mov
ss
xchg
or
ret
dec
clc
and
inc
sub
sahf
cmp
call
sbb
lahf
int
fs
pop
push
pop
aaa
pop
mov
pop
fwait
add
shl
mov
pop
cmp
shl
cld
scas
xlat
dec
aam
mov
(bad)
loope
fcompp
dec
and
and
das
inc
mov
cwde
loop
xor
xor
clc
call
xor
add
xor
cmp
loopne
lock
ror
popf
adc
fwait
add
xchg
into
daa
xchg
xchg
in
mov
mov
lock
jp
xor
cmp
mov
lahf
in
pop
addr16
jmp
popf
popf
loope
pop
adc
ja
pop
sub
jae
in
pop
mov
(bad)
push
test
or
int3
jmp
mov
div
stos
mov
loopne
push
out
retf
xchg
test
mov
lahf
sub
add
(bad)
xchg
dec
fwait
mov
xor
retf
lds
pop
lods
addr16
mov
or
mov
mov
jmp
retf
push
pop
test
mov
out
pop
js
inc
inc
pop
out
push
sbb
push
add
mov
(bad)
rcr
rcr
pusha
jae
xchg
inc
stos
enter
pop
mov
popa
xor
mov
cli
je
(bad)
test
ret
cwde
(bad)
repnz
pushf
adc
ror
fwait
jns
xor
repz
cmp
push
icebp
pop
mov
inc
(bad)
ins
cs
loopne
retf
mov
lock
and
outs
call
sub
xchg
add
stos
popa
mov
inc
push
add
adc
retf
fcmovne
sbb
and
nop
clc
or
jb
call
mov
push
cmp
into
push
repz
push
cwde
jae
mov
sub
adc
dec
rol
pop
mov
pop
sbb
mov
jp
sbb
out
sbb
or
push
mov
mov
mov
adc
cs
mov
push
je
mov
sbb
arpl
aaa
imul
jo
(bad)
retf
and
ficom
mov
jmp
cmp
jnp
fnstsw
fisubr
fsubrp
sbb
or
dec
fcmovb
push
or
and
ds
xchg
vandnps
inc
(bad)
mov
hlt
sub
and
sbb
outs
fwait
pushf
inc
mov
aad
call
mov
add
mov
aaa
jbe
rol
jns
ficomp
xor
cs
add
xchg
mov
xor
jecxz
and
push
sbb
mov
jno
dec
pop
shl
stos
push
xor
mov
clc
and
test
xor
push
stc
add
mov
fst
xlat
leave
js
lahf
enter
(bad)
xchg
daa
ficomp
adc
loope
lds
cmp
scas
xor
scas
fcmovb
sub
mov
cmp
xchg
pop
hlt
sbb
xchg
(bad)
out
aaa
je
sahf
lea
hlt
mov
das
xor
mov
and
mov
jns
out
inc
imul
push
nop
scas
scas
cli
aad
ret
xchg
dec
xchg
(bad)
add
sahf
(bad)
(bad)
or
or
in
ja
scas
icebp
jge
push
(bad)
ficomp
int
mov
and
(bad)
mov
jp
call
(bad)
enter
push
pop
rcl
jecxz
aas
movs
ror
adc
and
xor
shl
loopne
(bad)
fimul
in
dec
cmp
or
inc
sub
xor
mov
xchg
jecxz
push
push
daa
adc
xchg
add
out
or
sbb
jns
jb
mov
in
nop
in
pop
pop
xor
adc
jnp
lods
push
scas
cld
daa
fsubr
into
and
jmp
dec
mov
movs
ins
out
sbb
add
sbb
inc
stc
adc
adc
scas
xchg
xchg
cmp
call
into
sub
scas
sub
dec
sbb
xor
sbb
bound
xchg
(bad)
lds
ret
outs
cmp
(bad)
(bad)
aas
add
ret
sbb
sbb
cmp
cli
cdq
cmp
or
aas
adc
inc
mov
jge
shl
aam
xor
inc
pop
mov
cmps
nop
call
and
mov
outs
cld
dec
xchg
int3
xchg
mov
pop
in
out
mov
xor
jl
xchg
ss
jmp
jmp
bound
add
adc
mov
es
cld
mov
shl
ins
dec
rcl
inc
and
shl
push
mov
inc
cmps
pusha
lds
data16
fild
sar
xchg
mov
xchg
cmp
test
add
data16
repz
jae
inc
das
aas
cmps
add
test
jle
sub
xchg
pop
mov
mov
lahf
mov
sub
dec
(bad)
sub
pop
into
xor
fdivr
push
xor
add
int3
xchg
fidiv
mov
pusha
cmp
gs
xlat
push
lods
stc
daa
xlat
xor
iret
and
pcmpgtw
loopne
sub
cld
stos
shl
fimul
(bad)
lods
dec
sbb
imul
mov
and
in
xchg
pop
xchg
ins
cdq
retf
mov
das
push
cmps
outs
or
and
lods
dec
add
dec
xchg
out
sbb
mov
rol
xor
jl
xchg
shl
into
jo
fcom
aad
push
mov
pop
fldenv
loop
cmp
retf
jp
sbb
das
scas
mov
pop
pusha
mov
dec
retf
or
or
sbb
not
mov
dec
mov
out
cmp
add
fcom
ret
xor
xchg
clc
test
mov
les
cmc
(bad)
data16
push
fisttp
push
push
cmps
pusha
sub
cmp
fst
add
or
adc
mov
jl
(bad)
sub
pop
div
mov
and
adc
push
das
sbb
jle
xchg
loopne
cmp
mov
sub
les
mov
fstp
out
jbe
xchg
aaa
xor
pop
or
call
mov
movs
mov
test
mov
jmp
inc
mov
sub
mov
mov
sbb
xchg
out
mov
icebp
jno
pop
pop
or
sub
push
lahf
push
mov
xor
ins
ins
or
mov
inc
xchg
cmp
mov
inc
enter
and
dec
jnp
add
dec
mov
mov
out
popf
arpl
adc
mov
push
(bad)
mov
cdq
mov
arpl
dec
inc
icebp
mov
movs
jbe
adc
cld
hlt
outs
push
(bad)
into
pop
cmp
fsubr
pushf
dec
pop
icebp
and
hlt
jno
pop
sbb
cmps
loope
gs
jns
xchg
lahf
ret
sub
adc
rcl
xor
(bad)
pop
test
popw
aam
cwde
pop
or
cmp
push
loope
sub
cmp
jnp
(bad)
fsub
mov
ins
inc
stc
pushf
dec
sti
in
mov
fdiv
cmp
sub
enter
daa
xchg
mov
loopne
push
ffree
mov
add
mov
pushf
imul
push
push
jmp
cwde
outs
shl
jmp
bound
lock
sbb
jae
sahf
sub
pop
pop
sub
adc
repz
and
inc
dec
in
mov
dec
(bad)
and
sbb
stos
xor
(bad)
out
cmp
push
int
jns
mov
fdivr
fmul
test
mov
dec
js
or
and
addr16
into
push
sub
mov
das
push
into
dec
mov
fld
push
retf
mov
add
fwait
in
clc
pusha
(bad)
aaa
xchg
or
jle
retf
cdq
pop
sbb
xor
jmp
push
imul
fisubr
cdq
mov
push
jbe
popw
repnz
in
ins
repz
and
xchg
repz
into
adc
(bad)
push
push
das
mov
cwde
ja
leave
cmps
in
int3
pop
icebp
sbb
out
cwde
push
clc
mov
adc
mov
cmp
out
in
inc
mov
mov
xchg
or
fiadd
xchg
test
pop
push
mov
xchg
mov
dec
(bad)
mov
or
in
sub
stos
std
push
fiadd
mov
(bad)
jmp
into
outs
test
pop
sbb
sti
les
mov
rcl
sub
or
inc
ds
enter
push
in
inc
and
mov
aas
jns
sbb
mov
test
dec
ret
dec
sub
(bad)
push
cmps
stc
not
cwde
xchg
or
nop
(bad)
retf
mov
retf
data16
(bad)
dec
cmp
mov
add
or
xchg
in
push
add
dec
in
cmps
adc
adc
xor
loope
repnz
xchg
push
scas
movs
in
pop
push
inc
adc
cmc
in
adc
stos
mov
bound
pushf
aaa
cmps
dec
jge
mov
dec
stos
neg
loope
pushf
adc
fstp
mov
fbld
add
sbb
jmp
inc
or
inc
clc
movs
out
ficomp
and
not
xchg
inc
fidiv
cmps
cs
popf
retf
push
or
pop
ret
mov
test
scas
in
aam
mov
popa
mov
lea
loope
hlt
hlt
and
xchg
dec
adc
cmp
mov
dec
dec
loope
push
mov
xor
xor
cmps
jnp
mov
inc
push
fisubr
mov
push
mov
popf
add
and
and
pop
mov
fmul
out
loopne
addr16
jns
add
outs
and
xchg
or
dec
cmp
icebp
lock
and
cmp
push
dec
imul
outs
inc
popa
xor
sbb
imul
(bad)
les
call
jb
cmp
jbe
aaa
mov
std
inc
and
shr
adc
adc
stc
adc
fs
cli
jge
test
sti
cdq
arpl
adc
lock
inc
mov
icebp
or
pop
inc
adc
push
push
rol
in
push
jge
adc
jg
jl
test
or
mov
pop
ret
imul
add
retf
mov
xor
fstp
sbb
arpl
fwait
lahf
cld
dec
mov
mov
shl
jmp
test
xor
adc
pop
nop
cmp
js
test
sti
fnstcw
and
and
int3
pop
jp
out
dec
cwde
inc
mov
push
hlt
shl
and
sahf
ss
pop
cmps
std
jge
das
pop
clc
jp
pop
shl
xor
adc
lds
imul
jo
add
sbb
xor
pushf
aas
add
movs
push
dec
fwait
aam
sub
add
pop
and
dec
xor
cwde
inc
push
rcl
dec
(bad)
nop
in
and
mov
pause
cli
jle
dec
sub
ficomp
cmp
push
mov
jbe
pop
push
push
cmp
into
pop
push
in
inc
jns
sbb
sub
mov
lds
out
nop
cmc
push
adc
shl
sbb
jbe
outs
inc
sub
std
mov
into
aaa
ror
vmread
pop
mov
mov
inc
hlt
adc
popa
mov
or
mov
fidiv
dec
retf
push
inc
push
int
sub
cmp
js
arpl
sbb
xchg
ins
xor
sbb
stos
dec
pop
(bad)
pushf
sbb
or
push
push
xor
popa
mov
and
das
fstp
add
sbb
stos
inc
out
dec
std
xor
inc
(bad)
fsubr
sub
jno
pop
outs
cmp
adc
ja
pop
jb
pop
aaa
dec
leave
(bad)
retf
mov
enter
mov
add
pop
dec
push
jbe
test
fsub
jns
sbb
pop
lock
mov
or
cmp
inc
sbb
xchg
mov
leave
or
add
dec
neg
or
out
popf
pop
pop
test
sub
cmp
dec
mov
imul
cmps
outs
repnz
std
addr16
div
fisttp
jecxz
and
jg
mov
rcl
int3
shr
sti
mov
jnp
inc
mov
mov
sar
push
cmp
nop
jge
movs
xchg
(bad)
aaa
adc
ja
dec
jp
addr16
es
inc
ss
cmp
movs
pop
cld
gs
pop
add
dec
fnstenv
pop
pop
and
lods
xchg
movs
into
or
aam
movs
movs
xchg
mov
jge
inc
jmp
test
and
movs
jne
sar
xchg
inc
repz
out
xchg
and
data16
jp
push
and
cmp
std
gs
in
js
inc
xchg
xchg
fild
jg
into
xchg
outs
cdq
sbb
push
mov
lds
stos
mov
lea
loop
stos
les
scas
push
movs
retf
sub
std
xor
ds
xchg
add
xchg
movs
mov
pop
add
add
std
xchg
push
push
div
repnz
arpl
fs
out
mov
pop
fldenv
dec
lods
test
mov
paddusw
and
movs
sub
mov
scas
imul
cmp
add
and
nop
or
jbe
push
outs
mov
rcr
sub
(bad)
outs
addr16
push
mov
xchg
pop
dec
dec
lahf
test
inc
fwait
cmps
push
xchg
fwait
dec
xchg
enter
leave
movs
fist
cld
popf
cmp
(bad)
dec
adc
xchg
mov
jecxz
dec
into
inc
sahf
imul
inc
xchg
ds
aaa
push
xor
xlat
pushfw
push
jae
into
loop
mov
in
xchg
lods
lods
cmp
aaa
retf
cmp
outs
adc
jmp
cmps
mov
xchg
sub
pop
mov
in
jmp
pop
mov
(bad)
mov
xchg
ss
shr
out
xchg
aaa
push
sbb
dec
adc
and
add
fidiv
inc
cwde
hlt
ins
jo
inc
mov
adc
and
jo
scas
stos
(bad)
dec
(bad)
fwait
scas
cmps
sbb
add
out
cmp
jbe
push
lock
xor
in
sahf
xor
inc
xchg
mov
push
aas
loopne
dec
mov
dec
je
jmp
push
movs
ja
repnz
fdiv
push
xchg
lds
fidiv
sub
mov
mov
inc
inc
sahf
iret
sub
push
pop
or
ins
mov
pop
loop
pushf
pusha
jle
(bad)
mov
jge
sar
pop
aas
dec
movs
add
mov
ins
xor
pop
gs
jp
in
ds
cwde
fdiv
std
cmp
sub
pop
mov
sbb
add
adc
adc
cmp
mov
and
in
out
sbb
mov
es
or
mov
jmp
fwait
jmp
dec
lock
inc
dec
je
int
sar
fidivr
mov
data16
loopne
arpl
pop
jp
mov
inc
sub
idiv
fimul
or
into
cmps
push
das
push
or
sti
add
push
rcl
sub
or
aad
div
cmp
push
rcl
mov
sahf
into
inc
sti
ss
fidiv
retf
inc
pop
jle
jge
inc
fldenv
push
pop
and
out
or
icebp
inc
ja
out
(bad)
mov
push
arpl
jmp
psraw
lahf
mov
push
retf
(bad)
mov
pop
xor
adc
and
jmp
sbb
leave
inc
inc
addr16
push
daa
and
jmp
xor
xchg
add
cdq
rcl
push
sti
xchg
in
push
mov
xchg
popf
daa
add
adc
and
repz
std
std
mov
cmp
mov
cmp
push
push
out
adc
fcom
sbb
pause
or
pop
sbb
js
push
scas
mov
add
out
inc
(bad)
stos
push
imul
ins
imul
(bad)
rcr
mov
sbb
xor
mov
test
pop
inc
push
and
and
cli
and
jl
jmp
and
mov
lods
push
lock
add
push
pusha
and
adc
retf
js
mov
lods
ficomp
cmp
sbb
int
bound
cmp
mov
fwait
jns
dec
in
div
sub
cmps
xchg
push
or
dec
stos
mov
cs
jg
icebp
lahf
imul
into
jns
aam
mov
add
in
xchg
int
ja
out
stc
add
cld
stos
(bad)
mov
cs
add
dec
adc
cmc
push
adc
fs
aaa
lea
loop
add
jmp
movs
xchg
test
stc
and
mov
outs
adc
push
inc
retf
sahf
mov
inc
ins
gs
mov
mov
icebp
in
mov
mov
shr
jnp
adc
lods
jbe
outs
sub
loope
xchg
addr16
pusha
js
and
dec
mov
add
cmp
pop
shr
clc
ret
fist
push
stc
jne
mov
ds
cwde
pop
movs
cmps
xor
mov
arpl
push
mov
sbb
inc
adc
cld
jle
neg
rcr
icebp
cmp
scas
test
sbb
ins
pop
adc
mov
fcom
jne
dec
ins
or
adc
cwde
aam
imul
push
inc
push
jge
jp
or
xchg
mul
xor
mov
lods
mov
lea
push
out
or
or
or
mov
cli
dec
push
push
or
rcl
sub
xchg
pop
pop
ins
rol
jecxz
stos
gs
(bad)
not
sub
push
dec
je
sbb
cmps
mov
mov
mov
add
mov
sub
or
mov
push
mov
cmps
mov
jo
inc
xchg
mov
pop
scas
test
ins
mov
adc
(bad)
std
mov
mov
push
lds
push
(bad)
mov
cmp
pop
lock
and
push
xchg
dec
mov
repz
xchg
jecxz
retf
test
gs
aaa
mov
(bad)
(bad)
xor
popa
not
xlat
fstp
push
shl
xlat
mov
sbb
loopne
fwait
push
loopne
pop
mov
mov
jecxz
in
nop
fstp
into
pop
and
mov
cmp
call
clc
mov
xchg
rcr
pop
sub
cmp
push
(bad)
cld
aam
xchg
pop
mov
jmp
push
mov
loope
or
adc
dec
push
push
xchg
xchg
(bad)
pushf
lds
add
(bad)
fcmovbe
(bad)
stc
mov
in
aam
imul
add
(bad)
push
inc
imul
icebp
xchg
pop
inc
mov
or
and
(bad)
leave
add
xor
and
mov
loope
popf
adc
xchg
sahf
sub
mov
xor
into
test
lahf
cmp
xchg
test
(bad)
repz
(bad)
sub
cli
dec
int3
jge
cmp
fstp
mov
outs
add
das
imul
add
mov
mov
mov
rol
or
inc
sbb
cwde
js
xchg
(bad)
push
ret
xchg
bound
adc
xor
pop
dec
inc
or
fwait
mov
cwde
jg
inc
mov
(bad)
cli
xchg
leave
inc
pop
jne
xor
fwait
xchg
or
std
cmps
push
push
xchg
jg
mov
data16
in
dec
mov
outs
mov
std
in
inc
or
movs
jmp
inc
xor
pop
inc
(bad)
xchg
inc
mov
out
push
nop
xchg
lahf
pop
(bad)
or
repz
jo
and
rcr
stos
mov
(bad)
push
inc
dec
add
cwde
imul
sbb
xchg
mov
lock
arpl
popf
(bad)
inc
out
mov
push
cmp
loopne
(bad)
cmp
nop
ins
call
iret
fsubr
mov
inc
in
xor
mov
cmp
imul
jmp
ror
push
shl
mov
adc
cld
xor
sbb
int3
or
mov
xor
push
in
shl
jmp
push
inc
mov
lds
aaa
pushf
cmp
or
pop
mov
push
test
aaa
adc
in
sbb
or
sbb
scas
pop
pop
cs
mov
fisttp
sbb
repz
leave
push
and
aam
add
and
dec
scas
xchg
enter
in
xchg
loopne
jge
mov
mov
int3
adc
push
sti
mov
xchg
fs
aam
xchg
mov
jo
or
or
jp
sar
js
in
inc
les
or
ds
push
cld
push
pop
or
les
ins
movs
shl
(bad)
std
jmp
or
imul
rol
call
pop
jo
cdq
loop
xlat
sub
in
pop
fimul
jae
fbld
cmps
sub
ss
cmp
mov
pop
inc
cmp
rol
out
ret
push
jae
add
mov
mov
arpl
int3
lahf
xor
daa
sar
cmc
imul
add
sub
rcr
add
jecxz
cld
les
int3
sbb
out
gs
push
dec
mov
int3
cmp
xchg
call
aas
mov
xor
pop
icebp
out
ins
ins
data16
jnp
out
ds
loopne
add
jle
xchg
and
ret
hlt
push
sub
movs
sbb
cmp
fsubr
daa
stos
mov
repnz
pop
mov
sub
jo
mov
xchg
pop
mov
in
jp
(bad)
or
frstor
lds
dec
jne
xor
out
cs
in
test
push
ret
push
sub
loop
cdq
aad
push
sub
pop
pop
jo
mov
ins
and
jle
les
or
clc
(bad)
icebp
pop
dec
inc
sbb
fidiv
loop
(bad)
xchg
jnp
ror
inc
sar
push
in
or
push
or
inc
pop
sub
je
fcomp
ins
stc
jno
xchg
mov
xor
sbb
loope
les
jb
mov
cld
pop
mov
mov
inc
pop
out
and
pop
outs
sahf
imul
fwait
push
adc
jne
inc
fdivr
xor
xlat
sbb
in
sbb
clc
jb
mov
mov
fsubr
xor
jecxz
loopne
in
xchg
sub
in
push
add
std
rol
(bad)
loope
cmp
mov
loop
loop
mov
mov
add
mov
cmps
jl
mov
fstp
mov
xchg
dec
pop
cmp
dec
cmp
fild
ja
inc
imul
mov
dec
mov
or
mov
jecxz
cdq
xor
pop
adc
rol
or
lods
imul
jbe
arpl
and
add
fwait
leave
call
pop
or
shl
pop
stos
loopne
lock
fdivp
mov
jb
jns
std
mov
push
push
push
jnp
icebp
ficom
xlat
inc
loopne
out
xchg
fwait
inc
cmp
adc
stos
(bad)
fs
mov
fdivr
mov
jae
call
ret
enter
dec
pop
mov
jbe
iret
pop
pop
pop
dec
nop
stos
xor
pop
inc
ds
stc
aas
mov
push
jg
outs
xchg
cmps
pushf
jg
xchg
popa
iret
xchg
outs
pop
retf
inc
mov
test
(bad)
fsub
jge
addr16
inc
dec
shl
mov
push
and
cwde
and
mov
xchg
pop
dec
pop
div
sbb
add
not
push
add
mov
repnz
int
idiv
mov
cmp
inc
(bad)
leave
jns
push
cmp
add
xchg
mov
fnstcw
(bad)
out
jbe
clc
dec
scas
loopne
lds
enter
push
pop
mov
push
mov
xchg
cmp
jae
arpl
movs
fnstenv
cwde
push
fmul
xchg
add
push
cmps
and
out
xchg
out
dec
stos
leave
adc
and
xor
(bad)
jp
adc
mov
add
mov
cmps
fbstp
pop
pop
ret
jecxz
cmp
or
cmc
mov
cmp
cmp
dec
movs
aam
add
pop
xchg
or
pop
add
pop
fdiv
lock
ret
shr
and
mov
xchg
xor
xchg
xchg
clc
pop
ins
push
dec
mov
mov
(bad)
aaa
mov
nop
cmp
mov
cli
jno
inc
mov
clc
mov
leave
imul
push
pop
mov
loopne
jno
fisub
and
ins
push
or
(bad)
cmps
stc
cmp
cmps
adc
into
stos
(bad)
jbe
jmp
inc
stos
mov
not
add
cmp
pop
pop
cmp
mov
add
shl
repz
int
test
nop
sar
enter
lea
mov
fdivr
fmul
fadd
test
mov
jmp
xchg
and
nop
and
test
mov
std
iret
jno
loopne
xchg
mov
or
enter
aaa
cs
out
jp
es
in
or
inc
movs
jge
repz
lea
in
jnp
into
inc
jge
retf
adc
dec
in
repnz
ja
or
rcr
inc
pop
mov
gs
inc
leave
int3
fwait
mov
sbb
or
shl
ja
imul
pusha
aam
(bad)
dec
push
retf
xchg
aaa
xbegin
sahf
icebp
cmc
popa
fdiv
sahf
bound
adc
fsub
loop
push
xor
mov
or
cmp
pop
xchg
add
fstp
and
loop
pusha
fsub
pushf
pusha
inc
xor
ins
mov
add
inc
add
idiv
sub
xchg
or
cmps
adc
or
sub
mov
sti
sbb
aam
mov
add
mov
lock
jmp
sahf
xor
cdq
mov
sub
xor
inc
fnstsw
sbb
jae
(bad)
mov
mov
dec
sbb
jmp
aam
inc
fisubr
aaa
shl
not
pop
fisubr
xchg
push
mov
dec
leave
mov
and
mov
les
add
push
(bad)
not
and
cmp
adc
addr16
adc
mov
aad
ss
clc
dec
and
in
aas
lock
adc
test
or
stos
inc
push
mov
xchg
rol
hlt
cwde
in
lahf
inc
jle
add
jp
arpl
cmp
pusha
pop
jge
sbb
ret
arpl
xchg
cwde
jp
iret
sbb
or
and
mov
jne
ins
loope
shl
push
ficomp
add
pop
movs
sub
out
lock
pushf
stos
push
mov
repnz
push
fnsave
mov
mov
fwait
jno
ret
fdiv
out
popa
cs
outs
mov
mov
inc
xor
cli
ss
lahf
jle
dec
rcl
cmp
jb
add
xchg
sar
sub
mov
ret
mov
cli
xor
shl
jb
adc
mov
call
mov
xor
or
jecxz
cmp
pushf
jmp
inc
sahf
dec
dec
dec
adc
or
sbb
cmp
mov
in
das
cmovne
in
or
rcl
in
ret
loop
mov
dec
mov
iret
add
rcl
mov
mov
popf
std
lock
jo
out
fnstsw
mov
xchg
xchg
movs
adc
repnz
dec
loope
or
xchg
sahf
jmp
call
repz
jecxz
add
or
adc
aam
loope
imul
cmp
xor
shl
mov
jo
leave
sbb
and
imul
dec
pop
mov
(bad)
shl
out
fdivr
fldenv
mov
sbb
jb
gs
retf
mov
inc
mov
add
pop
mov
inc
sub
adc
add
or
inc
fs
xor
ins
adc
int
pop
jb
mov
jmp
les
cmps
test
dec
iret
mov
sub
popa
aaa
daa
(bad)
dec
add
iret
retf
dec
mov
inc
cmp
cwde
scas
xchg
mov
add
mov
mov
cmp
nop
dec
out
(bad)
setae
or
shl
cmp
ret
inc
or
mov
(bad)
lea
dec
jae
xchg
ret
add
(bad)
aam
mov
or
shr
dec
pop
loop
in
movs
xchg
adc
popf
push
cs
ret
iret
(bad)
mov
(bad)
push
dec
xor
push
jmp
fcomp
or
jae
fwait
stos
aaa
xor
fimul
sbb
xor
pop
mov
lock
ds
inc
jl
adc
mov
adc
push
xchg
mov
xor
aam
and
in
fst
and
pop
mov
jge
cwde
mov
xor
mov
fbld
sub
cmp
add
push
stos
adc
cmp
mov
popa
ins
xchg
mov
inc
xchg
push
pop
or
add
test
add
xchg
inc
ret
test
mov
in
add
es
addr16
ins
inc
jl
addr16
call
sub
cmp
cli
jmp
rcr
js
inc
movs
lods
adc
mov
mov
mov
hlt
sub
push
and
mov
mov
enter
push
xor
into
cli
or
or
xlat
je
psraw
and
cs
stos
hlt
icebp
dec
xchg
sbb
daa
mov
shl
cmc
adc
cmps
(bad)
sahf
dec
outs
inc
jns
mov
sbb
test
sahf
cld
scas
mov
xchg
mov
aaa
jns
div
and
popf
adc
ret
sbb
ror
dec
aaa
pop
les
xchg
mov
daa
nop
sti
call
push
fsubr
in
aas
sar
in
mov
call
inc
cmp
adc
loop
in
and
cmp
pop
in
push
mov
sbb
sti
xchg
mov
sbb
les
(bad)
jecxz
mov
es
ret
jno
pop
xchg
cmp
repnz
xchg
xor
ret
inc
shl
arpl
in
dec
sub
(bad)
int
sub
sbb
clc
jmp
or
jmp
jnp
xor
nop
mov
ud1
add
mov
push
call
aas
jg
dec
es
in
pop
sbb
retf
mov
fisubr
mov
mov
or
xor
adc
pop
es
push
jecxz
add
sahf
fucomp
mov
cdq
pop
sbb
ds
mov
sbb
rcr
inc
mov
mov
mov
adc
mov
into
sub
retf
and
cmp
mov
je
sbb
push
fild
(bad)
imul
dec
cld
addr16
fwait
cs
das
out
or
jmp
stos
mov
or
and
loope
mov
dec
lds
sbb
cmp
sub
test
or
and
ror
sub
add
test
adc
int
test
sbb
push
les
fisttp
push
pop
ja
out
scas
pushf
arpl
push
adc
popa
repz
loop
arpl
and
ins
rol
mov
and
xor
clc
das
pop
push
push
shr
sti
hlt
mov
push
dec
sbb
push
in
xlat
shr
loopne
stos
test
push
inc
and
mul
inc
or
mov
mov
sbb
mov
pop
add
rcr
or
rol
mov
stc
mov
push
or
jmp
dec
repz
or
and
scas
push
jns
pushf
dec
mov
mov
(bad)
push
push
(bad)
mul
or
xchg
add
cmp
xor
or
fadd
adc
sbb
adc
mov
push
lea
dec
cmp
sub
push
movs
(bad)
dec
dec
sbb
mov
(bad)
sbb
jns
outs
ins
out
dec
jl
iret
mov
jbe
push
hlt
rcl
jo
xor
(bad)
mov
jmp
adc
into
add
rol
arpl
lods
outs
out
inc
cmovno
cwde
sbb
cld
not
pop
mov
adc
inc
(bad)
into
cmp
rcr
scas
jle
mov
pop
push
xchg
leave
outs
cld
stos
mov
sbb
rcr
or
add
fidivr
mov
shl
in
pop
xchg
das
mov
xchg
outs
mov
fist
stc
cmps
jnp
ss
fcmovb
mov
or
xchg
add
mov
cmc
nop
out
fdivr
mov
add
mov
fidivr
and
dec
dec
ret
push
mov
outs
sub
add
fwait
lds
mov
sub
sub
cwde
xor
dec
in
std
ja
aas
dec
inc
push
and
inc
stc
add
pop
or
pop
or
inc
jns
lock
mov
stc
cld
mov
xlat
(bad)
mov
(bad)
aaa
lds
adc
inc
push
jae
add
fadd
xor
arpl
stos
mov
xor
pop
fwait
js
leave
dec
(bad)
std
lea
aaa
iret
out
ds
cmp
repz
mov
ins
or
icebp
nop
sub
sbb
mov
(bad)
std
sbb
retf
dec
cmp
jae
sub
in
inc
sbb
and
inc
jp
or
das
mov
ret
arpl
sub
imul
jns
pop
sbb
mov
sti
bound
inc
retf
inc
jmp
iret
cdq
add
add
cdq
adc
repnz
jp
fdiv
imul
fidiv
hlt
sbb
jmp
fwait
mov
daa
ret
ins
std
push
push
or
lea
or
jp
sbb
lea
add
inc
xchg
mov
arpl
xchg
icebp
push
(bad)
pop
jbe
mov
dec
xlat
cmp
mov
mov
xchg
lock
inc
push
pop
lea
test
loope
in
xchg
ss
sub
aad
jae
dec
call
dec
jge
js
xlat
xchg
call
in
push
sub
clc
and
out
dec
push
mov
adc
push
mov
fwait
shr
pop
ffreep
aad
xor
add
cli
aas
sbb
jno
in
call
mov
jb
shl
bound
repz
cmp
add
pop
mov
repnz
xchg
sti
dec
lds
or
add
addr16
mov
fisttp
ret
iret
sub
(bad)
outs
(bad)
jmp
jb
and
push
or
xor
push
adc
sbb
ins
mov
add
add
pop
mov
jno
push
dec
jmp
mov
pop
push
les
ins
and
repnz
imul
xchg
sub
mov
xchg
mov
(bad)
xchg
cs
rcr
inc
pop
sub
jp
or
cmp
js
mov
jne
mov
daa
fldcw
push
jne
push
pusha
std
je
and
inc
xchg
pop
mov
dec
mov
outs
jnp
into
in
loop
inc
and
in
xor
in
sbb
adc
push
bound
and
pop
cmp
icebp
jmp
jmp
repnz
cmp
movs
adc
shl
sbb
pop
inc
repz
push
xchg
and
xor
cs
sub
cmp
add
imul
and
inc
test
jmp
mov
mov
test
and
xchg
rcl
inc
mov
pop
xor
out
mov
or
lea
stos
adc
jle
ss
inc
dec
jno
outs
loope
and
jmp
sbb
ins
lods
out
xor
mov
shl
pop
mov
es
es
sbb
jecxz
dec
sar
out
test
add
(bad)
test
push
mul
jo
push
push
mov
lahf
movs
fiadd
cmp
or
fbstp
pop
in
lock
test
leave
ss
int3
pop
mov
xchg
icebp
sub
into
pop
fisttp
adc
out
lods
mov
inc
or
call
in
mov
inc
cdq
mov
xor
or
call
fild
mov
addr16
or
int
push
loope
inc
cs
push
js
jp
jle
dec
div
mov
mov
mov
fisttp
push
mov
jg
(bad)
scas
fild
outs
sub
loopne
out
jmp
mov
jecxz
lea
std
in
inc
adc
cmp
mov
inc
fadd
mov
fadd
xchg
aam
dec
push
jp
(bad)
and
imul
push
dec
xor
xchg
adc
aas
test
fldenv
cmp
shl
lods
ja
inc
mov
imul
pop
cmp
and
(bad)
pop
je
add
sbb
ret
arpl
xchg
mov
xchg
and
addr16
ds
jmp
inc
dec
inc
gs
xchg
sub
lods
push
dec
jne
inc
mov
mov
call
sbb
mov
xchg
scas
mov
hlt
push
mov
pushf
or
stos
and
mov
ret
hlt
pop
popa
pop
xlat
xor
cmp
pop
cmp
rcl
mov
bound
adc
cmps
sahf
pop
or
pop
dec
imul
mov
push
push
push
loop
(bad)
js
fs
cmps
ss
pop
repnz
lahf
inc
das
ins
(bad)
lock
adc
(bad)
mov
call
icebp
or
push
and
jo
xlat
push
les
ret
jmp
repz
mov
jg
xor
push
call
movs
sub
xchg
ret
or
frstor
(bad)
adc
or
dec
mov
ret
les
mov
push
mov
pop
call
push
xchg
mov
fs
mov
and
mov
aam
mov
sbb
add
in
or
jp
adc
mov
arpl
loope
test
pop
out
loopne
mov
pop
pop
arpl
xor
test
les
mov
jmp
xor
std
mov
shl
ds
and
mov
aam
pop
nop
mov
adc
mov
push
pop
pop
lea
ins
sbb
pop
sar
mov
(bad)
pop
pushf
xor
xchg
mov
int3
pop
and
mov
popa
sub
adc
test
adc
xor
lock
(bad)
add
cmps
hlt
or
dec
adc
xchg
hlt
or
xchg
mov
into
cmp
jle
loop
push
sbb
mov
or
scas
daa
xor
inc
push
mov
dec
lods
fstp
pop
pop
dec
lahf
ret
inc
dec
aaa
and
inc
jp
cmp
sbb
dec
inc
sbb
and
push
push
lock
cdq
retf
inc
cmp
loop
pushf
cli
xor
cmps
mov
outs
ret
les
retf
sub
mov
daa
add
mov
std
call
int3
movs
pop
lahf
movs
jmp
pop
(bad)
mov
test
pop
fsubrp
(bad)
or
in
mov
retf
mov
mov
push
cli
dec
jmp
movs
mov
push
shl
xor
sbb
fmul
mov
dec
dec
sbb
sub
cmp
stos
in
xchg
sub
xor
xchg
add
sar
inc
and
sbb
jne
loop
xchg
lods
cmp
jno
clc
iret
push
fcmovne
dec
sub
pop
jge
jnp
test
cmp
inc
lds
(bad)
mov
push
test
push
cmp
test
imul
(bad)
dec
es
retf
jp
pop
sub
mov
rcr
xor
sbb
ja
push
in
rcr
jb
fsub
adc
fcom
or
outs
cdq
int
scas
loop
inc
or
imul
or
rcr
xchg
aad
hlt
clc
mov
adc
enter
mov
cwde
sbb
xor
and
sub
sbb
in
cmp
daa
dec
dec
or
push
aas
lgs
not
icebp
dec
sbb
lds
and
fs
(bad)
mov
leave
xor
xchg
inc
arpl
cmps
xor
out
int3
out
sub
sbb
aas
pop
and
mov
leave
xor
imul
or
movs
and
lock
lds
mov
mov
outs
fmul
cwde
xor
fcmovnb
sbb
adc
dec
mov
out
enter
push
mov
sub
test
pop
push
cmp
hlt
inc
ja
jp
movs
mov
mov
sbb
xor
jns
xor
fistp
test
cmps
add
fadd
mov
jecxz
sahf
lods
retf
inc
les
aad
cmp
ror
shl
xor
pop
dec
adc
das
aad
mov
inc
push
ja
push
ds
outs
iret
jmp
dec
pop
arpl
cmp
jnp
fcomp
fsub
dec
movs
mov
(bad)
out
mov
bound
call
div
pop
fnstenv
mov
push
xchg
pop
pusha
xchg
and
inc
(bad)
jp
xor
xor
addr16
aas
xchg
or
loopne
add
shl
int3
add
pop
push
mov
fsub
dec
or
mov
sbb
cmp
push
adc
xchg
aas
pop
add
shl
(bad)
shr
cmp
fadd
push
dec
inc
imul
and
jb
iret
movs
into
sti
push
jle
aas
xor
(bad)
mov
and
inc
mul
xor
jle
in
pusha
jmp
cld
jns
or
mov
cmp
cli
test
and
xor
mov
mov
ret
lahf
fnstenv
test
jmp
push
jne
mov
int
out
push
jne
jne
fdivr
in
cmps
sub
xchg
rep
dec
push
add
mov
pop
push
repz
retf
test
mov
outs
pusha
inc
mov
loopne
xchg
mov
mov
mov
sub
(bad)
xchg
stos
enter
inc
sub
and
xchg
push
push
jecxz
jp
pop
jae
and
imul
movs
ficom
imul
bound
adc
sbb
jmp
sub
ror
dec
or
ret
jb
pop
test
std
pop
mov
(bad)
es
mov
sar
or
adc
adc
repz
sub
sbb
popf
mov
sub
and
shl
lea
repz
sbb
lea
repz
mov
lahf
jmp
test
stos
out
(bad)
fmulp
jno
push
lahf
fmul
mov
ins
cld
xor
pop
sahf
rcr
and
icebp
jmp
xor
sbb
and
adc
mov
test
imul
lods
leave
int
(bad)
iret
jge
jge
dec
mov
(bad)
pop
pop
jae
outs
adc
jo
pusha
cmc
popf
mov
fisub
sbb
idiv
hlt
in
pop
loop
in
pop
mov
push
test
lods
in
out
scas
into
push
and
push
or
out
aaa
ins
outs
cwde
adc
mov
mov
push
out
aaa
jecxz
psubw
jae
inc
(bad)
sbb
loopne
mov
push
cli
aad
nop
jnp
mov
jnp
mov
cmp
ss
call
mov
jb
and
inc
pushf
mov
jmp
or
aam
mov
jecxz
jns
add
mov
mov
and
(bad)
scas
sub
jg
jmp
pop
adc
or
js
(bad)
mov
pusha
cmp
rol
mov
mov
pop
lahf
and
cmp
add
scas
mov
xor
(bad)
aam
cmps
and
lods
imul
(bad)
mov
retf
aaa
pop
div
push
and
xor
scas
movs
lods
xor
xor
push
shl
push
arpl
idiv
mov
and
xor
cmp
mov
mov
and
mov
push
cmp
adc
imul
cmc
shl
adc
pop
jge
xchg
fadd
shr
ins
ja
mov
adc
lahf
in
fstp
jmp
mov
sub
dec
fimul
arpl
outs
aas
int3
inc
test
cmp
pop
push
mov
loope
imul
add
sub
mov
push
xor
mov
push
icebp
fsub
cmp
lds
adc
jae
scas
fnstsw
pushf
dec
lea
cld
in
ins
add
jmp
mov
or
push
(bad)
fsubrp
sub
push
shl
inc
pop
shl
arpl
in
out
pop
add
stos
in
and
stos
cmc
iret
lea
cmps
mov
cs
mov
jecxz
int3
mov
sub
stos
mov
mov
repz
lods
in
ins
aam
ins
fadd
loopne
pushf
jo
adc
retf
dec
aas
(bad)
imul
add
lds
sub
push
push
jp
cld
xor
cmp
cwde
out
aas
loope
push
mov
ss
pop
pushf
sbb
sbb
cld
push
repz
pop
retf
mov
addr16
out
inc
fist
cmp
push
pop
sbb
dec
icebp
enter
sub
(bad)
icebp
add
xchg
mov
inc
jmp
fst
sub
jl
fs
dec
ja
cmp
dec
or
stos
(bad)
out
sub
mov
mov
(bad)
mov
inc
iret
dec
lods
addr16
(bad)
int
imul
lahf
pop
mov
stos
pusha
jne
loope
pusha
mov
mov
scas
aas
mov
int
retf
cmp
mov
jbe
add
loopne
fs
jp
dec
lahf
bound
mov
cmp
pushf
int
xchg
in
mov
mov
clc
pop
movs
cmps
cmp
dec
push
cmp
in
ror
dec
xchg
push
mov
or
sub
pop
or
cld
jmp
out
push
stc
xchg
push
sub
cs
pop
loop
push
fldenv
jmp
pop
mov
fist
cwde
inc
enter
arpl
dec
daa
(bad)
xchg
seta
iret
inc
mov
sbb
mov
aam
mov
pop
pop
(bad)
fldenv
call
in
add
jo
mov
push
test
fbld
fwait
sub
sbb
push
inc
cdq
loope
xor
shl
xchg
add
mov
fsub
or
adc
xor
inc
daa
add
retf
clc
leave
push
jnp
in
push
push
cli
fsubr
mov
adc
leave
sub
mov
sahf
adc
or
(bad)
jecxz
(bad)
jle
mov
lds
inc
mov
xchg
pop
call
xor
in
dec
outs
dec
dec
aaa
push
retf
shl
cmp
es
xor
xor
cdq
imul
mov
sub
adc
jecxz
pop
adc
es
sub
mov
imul
pop
lods
(bad)
retf
push
int
aas
out
adc
repz
mov
xchg
mov
push
mov
mov
mov
sbb
dec
xchg
jge
fimul
push
test
sbb
add
popf
jae
test
adc
inc
pop
inc
out
std
dec
jmp
es
and
rol
lahf
jl
sub
lods
mov
stos
ds
cmp
mov
jno
and
push
fldenv
push
scas
imul
push
bound
or
inc
test
sbb
push
jnp
dec
mov
sbb
daa
es
les
sti
xchg
call
sbb
movs
ins
pop
aam
mov
xor
sbb
xchg
iret
test
dec
adc
js
pop
fsubr
repnz
add
jp
mov
mov
mov
mov
mov
ret
bswap
cmp
ds
ins
push
jo
push
push
fimul
ds
cmp
imul
call
sbb
jae
push
push
jns
mov
lahf
test
dec
movs
xchg
xchg
dec
adc
push
(bad)
out
test
pop
jge
daa
and
xlat
loop
test
fmul
inc
stos
test
xchg
add
push
xchg
icebp
inc
adc
outs
push
inc
push
sub
into
jle
push
retf
pop
scas
pop
ins
adc
popa
and
xchg
rcl
mov
fs
push
imul
push
jae
and
sub
jne
popa
nop
adc
mov
xchg
test
push
jb
cld
dec
imul
loope
arpl
sbb
or
add
mov
aad
add
jae
mov
dec
gs
jo
iret
imul
sub
push
lods
jmp
cmovne
or
fld
jge
pop
popa
push
aad
pop
movs
cmp
cli
scas
shl
inc
cmp
mov
call
outs
arpl
dec
shl
pop
mov
mul
xchg
adc
sub
xchg
push
pushf
xlat
add
icebp
inc
inc
lods
xor
enter
mov
mov
dec
mov
call
pop
mov
rcr
sahf
sahf
push
mov
out
or
in
sub
cmp
cmps
not
ret
cmp
push
int3
or
pop
cmps
pop
or
cld
sub
int3
fld
les
add
loope
or
leave
mov
retf
shr
inc
push
mov
cmp
sar
xor
mov
push
mov
dec
scas
jae
popa
cmp
ja
enter
jns
dec
shl
pushf
adc
loop
mov
mov
or
(bad)
lock
adc
pop
(bad)
data16
outs
out
add
cmp
jb
mov
cmp
inc
fucom
mov
inc
jle
aaa
cmp
mov
repz
repnz
rol
loop
adc
ins
inc
sbb
jne
pop
add
rol
es
ret
mov
(bad)
lds
das
sub
mov
sahf
cmps
mov
ins
call
jge
in
hlt
pop
repz
mov
pop
test
push
daa
std
cmp
mov
aam
pop
daa
mov
mov
js
xchg
loopne
aaa
in
jp
fs
add
cdq
and
iret
out
hlt
jns
inc
sar
movs
xlat
mov
popf
cmps
mov
pop
ror
push
in
cmp
xchg
push
sbb
jnp
push
mov
adc
pusha
push
sbb
aas
in
push
inc
xchg
call
xor
pop
xlat
ret
(bad)
out
inc
push
or
das
fnstsw
jecxz
xor
xor
jg
fild
cmp
lock
or
sti
arpl
in
call
out
movs
mov
sub
lock
daa
dec
repz
inc
outs
inc
retf
imul
out
xor
out
scas
and
out
leave
out
mov
ins
lods
push
jb
bound
retf
cmp
sub
push
jmp
fisttp
les
jge
ss
pop
pop
mov
(bad)
(bad)
ss
fbstp
sub
mov
inc
js
jge
mov
and
mov
xor
jmp
xchg
add
sub
cmp
ja
stc
lea
into
dec
stc
sub
mov
retf
xchg
lds
mov
ins
je
push
sub
rcl
cli
mul
xor
add
inc
sahf
out
(bad)
fcom
and
or
push
jns
mov
push
pop
add
(bad)
dec
and
dec
and
(bad)
out
sub
push
in
popf
pop
mov
stos
pushf
lods
mov
(bad)
(bad)
sbb
(bad)
popa
ins
xchg
cmc
out
push
gs
fldln2
sub
inc
push
cli
dec
sub
popf
inc
pushf
push
(bad)
js
mov
fsub
out
arpl
cmps
hlt
(bad)
call
in
xchg
mov
loopne
xor
test
xchg
inc
push
in
xchg
(bad)
je
mov
adc
(bad)
call
gs
pop
cmc
mov
xchg
sbb
arpl
pop
jmp
imul
shl
scas
adc
mov
or
aam
mov
movs
mov
inc
pmaddwd
(bad)
fistp
pop
test
xor
cld
pushf
push
arpl
icebp
ret
jb
xor
mov
jle
mov
mov
or
jl
rcr
ss
inc
cmp
lahf
loop
jns
hlt
retf
cmp
inc
es
icebp
out
lods
and
fld
cmp
jbe
nop
out
push
xchg
push
cs
std
scas
mov
xchg
popa
bound
or
retf
push
fmul
push
mov
push
int
push
mov
inc
mov
sbb
int3
mov
pop
loope
xor
and
test
push
and
mov
ficomp
arpl
push
int3
mov
test
cwde
xor
test
and
fs
hlt
lahf
xchg
cmps
add
imul
dec
int3
sbb
into
pop
add
cli
test
xchg
loop
and
clc
add
(bad)
stc
rol
dec
jbe
int
add
sub
pop
xchg
cmc
ffreep
cli
and
cmps
mov
hlt
ror
fstp
jns
sar
jg
inc
or
inc
jecxz
inc
popf
fadd
add
xchg
(bad)
arpl
adc
outs
imul
push
fistp
jo
pusha
cmp
jb
int
push
cmp
outs
push
jae
movs
jp
inc
sahf
inc
stc
inc
cmp
or
je
scas
dec
jbe
lods
ins
es
mov
test
test
in
les
ins
sub
lods
inc
jle
jno
jge
mov
into
add
sti
sub
ror
xchg
scas
in
addr16
loope
std
jbe
rcl
mov
shr
xor
and
inc
je
sahf
bnd
push
mov
jno
sbb
mov
fmul
nop
or
inc
xor
sbb
sub
and
retf
(bad)
in
fcom
fisttp
mov
mov
pushf
sub
xchg
ja
cdq
push
xor
mov
dec
ja
dec
pop
add
inc
aam
mov
pop
bound
xor
pusha
and
adc
xor
cmp
jbe
es
pop
inc
lds
sbb
leave
arpl
add
adc
into
and
lods
pop
repz
push
or
sbb
mov
outs
in
stc
(bad)
imul
jae
out
jmp
xor
gs
xchg
(bad)
xor
jns
(bad)
enter
das
mov
call
dec
(bad)
pop
shl
ss
lahf
pushf
and
inc
push
ds
jbe
clc
xchg
jge
mov
adc
adc
cld
cmp
mov
(bad)
cli
mov
push
pop
add
and
xchg
fcom
sub
mov
push
xchg
add
addr16
in
js
adc
push
mov
or
or
adc
adc
ins
rol
outs
push
fild
xlat
out
or
shr
out
call
mov
mov
int3
mov
in
dec
movs
inc
call
call
out
or
repz
lahf
or
push
adc
lds
xchg
call
jnp
xchg
movs
xchg
xor
iret
adc
jo
xor
jnp
mov
add
mov
loop
fisubr
jae
fdivr
ret
push
and
xchg
xchg
jne
jmp
xor
retf
fcom
daa
pusha
pop
mov
mov
test
call
jnp
mov
sbb
sti
jnp
mov
and
ins
xchg
movs
ss
std
push
adc
pop
jno
shl
in
pushf
ja
or
mov
sbb
mov
xlat
dec
aaa
repnz
popa
inc
pusha
sbb
outs
cmps
pop
dec
xchg
xlat
mov
xor
(bad)
lock
popf
mov
cmc
retf
add
and
xor
or
in
fs
pop
xadd
adc
inc
push
lea
push
movs
repz
mov
sbb
clc
es
icebp
xchg
mov
xor
fisttp
push
sbb
enter
cli
pop
repnz
ror
scas
sti
fwait
movs
pop
sbb
into
pop
xchg
push
lock
movs
fnstsw
cwde
mov
push
jecxz
xchg
lods
cmc
mov
test
cmp
mov
aad
stc
mov
jl
cmp
pop
xor
xor
stos
outs
pop
mov
push
in
adc
outs
xor
inc
sub
(bad)
and
bound
pop
adc
or
into
adc
dec
clc
shr
in
sar
xor
xchg
out
xor
int
mov
push
mov
cmps
outs
ja
inc
and
xchg
bound
pop
inc
cmp
neg
mov
push
dec
int
mov
out
ds
(bad)
fisub
pop
push
popa
mov
xlat
add
movs
out
sbb
dec
add
mov
jmp
call
(bad)
jbe
neg
inc
or
push
sbb
push
xchg
inc
(bad)
sub
cmp
sub
movs
lock
add
bound
add
add
test
inc
push
push
cdq
or
retf
inc
idiv
sbb
jno
gs
jnp
call
adc
pop
push
jp
mov
and
nop
test
push
xor
adc
lods
stos
aam
cli
or
inc
pop
arpl
ror
int
xchg
icebp
add
mov
adc
inc
adc
(bad)
pop
mov
cmp
sti
(bad)
mov
mov
aam
sub
jmp
mov
pop
mov
dec
test
fisttp
dec
rol
rcl
retf
or
push
jne
cmps
mov
jbe
add
mov
stc
call
inc
jb
mov
rcl
(bad)
adc
dec
cmp
fs
xchg
test
jns
and
ins
enter
mov
pop
sbb
push
ins
(bad)
icebp
sbb
mov
fcomp
test
adc
mov
mov
test
xchg
cmp
fst
pop
retf
stc
add
or
gs
xchg
mov
test
xor
mov
les
sub
pop
cmp
mov
jne
das
and
test
add
xor
fisub
pop
adc
movs
inc
ror
movs
jo
mov
bound
aad
or
xor
ins
sti
xchg
mov
cmp
jle
and
mov
hlt
out
or
pop
popf
sbb
sub
mov
xchg
lea
imul
aas
mov
pop
stc
cwde
(bad)
xchg
or
aaa
shl
movs
inc
js
ffreep
leave
cwde
in
push
jp
pop
jge
ins
stos
xor
retf
sub
loope
push
or
mov
popa
xor
not
push
sub
jno
and
cdq
mov
pusha
pop
fld
and
xchg
sbb
in
xchg
lahf
out
dec
xor
mov
sub
icebp
shl
jnp
jno
popa
lods
int
mov
clc
dec
mov
mov
idiv
mov
arpl
data16
fcmove
cdq
adc
push
push
into
fst
out
xor
ins
adc
mov
dec
dec
mov
pop
fcomi
fbld
sub
daa
shl
fdiv
or
in
jmp
or
adc
jecxz
xchg
push
xchg
mov
pop
push
xor
(bad)
mov
adc
aad
movs
movs
aas
out
sub
dec
ja
out
add
pop
frstor
cwde
imul
jb
inc
shl
outs
sar
ss
cmp
cmps
popa
cld
fcomp
aas
ds
mov
sbb
jmp
ins
add
sahf
pop
loopne
in
xchg
test
pop
scas
jno
out
(bad)
retf
outs
imul
push
inc
xor
ins
ficomp
fdiv
nop
pop
adc
test
cmp
into
pop
and
push
sub
mov
jno
cmp
mov
mov
mov
dec
mov
xor
inc
out
test
mov
mov
test
call
movs
mov
jb
leave
jmp
stc
test
xor
mov
ret
inc
stos
add
and
out
pushf
dec
gs
lds
int3
push
lahf
or
in
test
pop
int3
test
dec
adc
push
loopne
stos
mov
add
xchg
xchg
adc
pop
test
cdq
push
inc
lock
push
dec
jp
cmp
ror
lods
mov
dec
loope
jo
mov
pop
or
cmps
je
push
retf
pushf
rcl
out
or
mov
nop
push
jg
retf
lods
jmp
mov
fdiv
call
ss
mov
add
ins
push
in
adc
push
out
mov
movs
addr16
sar
inc
aam
stc
inc
sbb
mov
fwait
iret
(bad)
push
sbb
or
mov
inc
push
rcr
stos
cmp
in
inc
adc
fild
pop
imul
inc
adc
call
xor
xor
popa
cwde
(bad)
call
fs
aad
cmp
xchg
sahf
fwait
xor
jmp
pop
and
ins
pop
test
mov
sahf
adc
test
push
arpl
fxrstor
jmp
imul
sbb
dec
pop
cwde
mov
cmc
push
sahf
xchg
nop
jae
hlt
xor
retf
adc
push
cmp
pop
jne
mov
sbb
sbb
push
jle
dec
mov
(bad)
sbb
cmp
xchg
push
lds
jle
xchg
(bad)
retf
push
mov
in
icebp
inc
pop
out
jo
xor
(bad)
out
dec
dec
les
loop
mov
adc
stc
outs
mov
repnz
xchg
jg
ror
sub
rol
jnp
ja
int3
pop
into
jle
out
imul
stos
inc
(bad)
mov
dec
mov
pusha
clc
call
add
out
ins
jecxz
and
xchg
ror
jo
sub
loop
mov
fdiv
popaw
clc
push
dec
jge
xchg
jmp
or
mov
ret
sub
pop
mov
xchg
test
and
push
out
inc
mov
test
inc
mov
stc
add
call
pop
scas
inc
or
shl
and
mov
jg
adc
ja
fdivr
xor
fist
xchg
cld
icebp
ds
jb
bnd
mov
ficom
lea
and
ficom
push
outs
xchg
dec
and
jl
push
push
mov
xchg
pop
ins
rol
push
inc
outs
inc
(bad)
xchg
rcr
idiv
repnz
(bad)
(bad)
hlt
xchg
sbb
(bad)
xchg
jmp
cmp
call
fld
pop
test
xchg
sub
jbe
pop
xchg
rcl
sub
jle
sub
dec
loope
or
call
or
fsubrp
fwait
ret
sub
hlt
and
fistp
push
rcl
ja
adc
fwait
cmp
push
mov
(bad)
arpl
xchg
pop
dec
mov
data16
push
jo
(bad)
out
pop
inc
gs
xor
sbb
push
sbb
pop
xor
(bad)
mov
mov
mov
jnp
dec
ins
jae
or
sbb
sbb
rcr
add
scas
frstor
push
xor
cmc
adc
cmps
sahf
jb
and
mov
or
lds
out
call
mov
pop
cmp
pop
xchg
sub
mov
gs
pushf
cmp
push
cmpxchg
sub
call
lock
mov
sbb
movs
inc
pop
xor
test
ret
call
jmp
jnp
jp
ds
movs
into
mov
and
xchg
ficomp
and
inc
dec
das
in
sub
xlat
sahf
loope
dec
enter
mov
lods
ror
es
test
fcomp
xor
int3
mov
sbb
jbe
push
(bad)
bswap
mov
gs
imul
fstp
rcl
(bad)
or
leave
ss
scas
sbb
mov
add
add
sub
stos
lods
std
sbb
rcr
gs
and
shl
xlat
rcr
jmp
out
lahf
les
add
jb
mov
cwde
and
les
ret
sub
bound
loop
imul
xor
out
inc
inc
and
fs
push
cdq
leave
aaa
in
sub
xor
es
idiv
pop
cmp
jbe
jp
mov
push
jmp
mov
imul
sbb
xlat
or
mov
mov
pop
repz
pop
push
pop
outs
outs
bound
mov
pop
sub
mov
(bad)
std
mov
lods
mov
sbb
aas
or
xor
(bad)
pop
push
icebp
or
sub
mov
ins
leave
in
dec
xchg
movs
int3
and
jbe
xchg
xchg
jns
pop
cs
mov
xor
sub
xor
bound
mov
div
xor
outs
adc
jmp
call
sbb
push
cld
int3
sbb
int
out
movs
(bad)
pop
cmp
adc
dec
and
(bad)
je
inc
push
pop
(bad)
sbb
das
call
inc
and
pop
movs
and
xor
xchg
jge
xor
push
(bad)
xor
mov
imul
mov
es
mov
sbb
idiv
movq
xor
sbb
sub
xor
ret
pop
fld
xchg
popa
and
dec
push
stc
push
add
bound
mov
pushf
stc
(bad)
push
std
push
jl
dec
jl
jb
aas
enter
mov
cmp
push
sub
push
sub
mov
or
enter
dec
dec
out
push
sbb
fnstcw
sbb
mov
mov
push
and
mov
adc
and
jbe
dec
push
adc
push
je
xor
mov
out
sbb
jb
xor
mov
push
stc
xchg
mov
mov
pop
fmul
sub
push
scas
xchg
or
add
push
mov
add
xchg
or
cmp
cmc
xchg
inc
push
xchg
enter
jmp
sbb
popf
outs
pop
popf
stos
in
psrlq
sub
enter
add
(bad)
push
xor
dec
popa
jge
adc
out
shl
mov
dec
cmp
loop
iret
les
xchg
xchg
test
xchg
sub
jo
das
sar
mov
dec
dec
(bad)
mov
mov
ret
xchg
enter
pop
xor
cwde
int3
shl
jbe
jo
mov
jno
mov
aas
jp
jae
fcomp
dec
fst
add
lods
pop
mov
aam
scas
movs
retf
cwde
clc
inc
add
leave
ret
popf
imul
jge
test
cmp
rcr
cmp
and
mov
inc
mov
fs
sbb
lds
ins
cmps
out
dec
jbe
inc
scas
fnstsw
cmc
dec
shl
pop
xchg
xchg
mov
(bad)
mov
sub
add
cmps
sbb
test
lods
push
xor
mov
call
jg
inc
push
pop
sub
loop
stc
cmp
aaa
out
ja
stos
popa
and
movs
sub
fistp
int3
call
in
ret
aaa
dec
ins
jbe
ds
inc
arpl
fwait
clc
loopne
sub
pop
ror
aam
mov
shl
call
lock
into
pop
lods
test
mov
mov
neg
jb
xchg
add
(bad)
cmps
inc
rcl
push
clc
in
xor
sbb
retf
lock
js
hlt
xor
mov
movs
add
mov
mov
(bad)
jnp
jg
outs
sub
js
arpl
test
fadd
rcr
jg
rol
mov
mov
mov
and
sar
adc
retf
push
into
aam
(bad)
in
jp
clc
fdivr
jno
jnp
pop
out
mov
or
lea
rcr
push
xor
out
call
pop
les
mov
pushf
mov
sbb
mov
loopne
gs
scas
inc
add
adc
add
mov
call
or
dec
loope
dec
mov
jle
push
les
sub
ds
mov
sti
fst
xchg
outs
int
(bad)
stc
push
push
fbld
pop
pop
mov
xchg
nop
and
leave
imul
arpl
cmp
add
std
mov
jnp
push
mov
mov
mov
or
sub
sub
addr16
es
popa
lods
mov
xchg
cmp
dec
fstp
or
sti
data16
fistp
mov
xor
xor
xor
mov
retf
jb
and
sub
add
add
mov
add
aaa
push
cmps
mov
(bad)
mov
and
add
les
mov
add
sub
mov
push
jge
or
xlat
int3
mov
outs
mov
iret
inc
in
test
push
pop
fucomi
mov
mov
adc
mov
pop
lea
or
sub
dec
adc
imul
dec
test
daa
(bad)
jg
sub
mov
dec
mov
shl
pop
xchg
and
xchg
lock
outs
dec
jecxz
dec
(bad)
xchg
jns
std
sub
sahf
mov
ss
std
or
ja
inc
gs
dec
clc
xor
fisttp
sub
cmc
xchg
scas
retf
mov
push
jnp
test
lods
ret
xchg
cmc
loopne
mov
mov
xchg
sbb
jmp
daa
cmps
enter
ret
inc
inc
sti
mov
push
call
repz
mul
lahf
gs
pop
arpl
and
div
dec
(bad)
sbb
mov
mov
outs
mov
(bad)
jge
jmp
mov
jns
cld
outs
sbb
cmc
cwde
pop
retf
xchg
icebp
push
sbb
mov
(bad)
nop
push
inc
mov
pop
imul
mov
cli
cs
(bad)
add
idiv
mov
push
pop
mov
dec
(bad)
iret
in
mov
add
scas
jg
mov
(bad)
sub
das
sbb
or
ret
addr16
jmp
cmp
in
icebp
push
iret
jge
fdivr
mov
sub
out
arpl
mov
mov
pop
test
ins
adc
sbb
or
lods
test
inc
pop
iret
jae
retf
mov
and
cwde
data16
inc
or
inc
imul
sbb
lock
scas
mov
sub
mov
aas
jmp
mov
cmp
jno
cwde
inc
jle
inc
lods
push
into
jge
dec
dec
jno
jb
xchg
fadd
push
fdiv
xchg
pop
stos
fs
adc
out
rcl
test
stos
in
in
sub
cdq
leave
ss
(bad)
out
cmp
clc
push
imul
sbb
mov
inc
jle
shr
fild
mov
pusha
inc
mov
push
adc
ds
into
xchg
pushf
arpl
mov
mov
xchg
fsubrp
jge
aad
hlt
popf
imul
cld
fnstcw
ins
imul
inc
xor
cmp
inc
dec
leave
xlat
ja
dec
sub
or
sbb
xchg
push
sqrtps
or
mov
xor
pop
push
in
cmp
scas
push
push
pop
imul
imul
sti
loopne
xchg
inc
shl
shl
jp
sahf
mov
mov
enter
mov
fstp
ds
ret
sahf
repnz
in
add
inc
adc
out
pop
mov
in
inc
retf
push
push
aaa
cmc
rol
leave
fldenv
sub
sbb
imul
pop
sti
test
push
repnz
pop
xchg
popa
leave
sti
out
rcr
sbb
inc
neg
test
mov
xor
stos
gs
cld
xchg
bound
jb
mov
sub
adc
pop
sbb
xchg
and
add
ret
movs
loop
in
and
ret
mov
les
and
add
push
ficomp
dec
or
inc
test
ret
jg
cs
jb
shl
nop
xlat
mov
std
cmp
adc
xchg
scas
mov
adc
xchg
test
imul
pop
repz
jge
jno
shr
not
icebp
dec
push
fiadd
mov
mov
cmp
ja
(bad)
dec
or
inc
or
stos
leave
addr16
mov
push
in
data16
ror
xor
cmp
aad
ror
cli
call
pop
ja
jb
cmps
cmp
fiadd
rcr
jo
lods
mov
(bad)
sub
add
fs
fisttp
iret
cwde
mov
cmc
lods
jp
sub
jp
xor
fstp
or
mov
ror
xchg
mov
pop
je
fld
mov
adc
xchg
mov
adc
jbe
push
ins
xchg
jne
pop
sub
jge
je
xchg
in
push
push
cdq
and
movs
mov
cs
or
sbb
xor
mov
outs
ins
ss
sub
push
push
xor
ja
or
mov
ficomp
sbb
push
jg
call
push
cmps
or
xchg
sub
scas
loopne
imul
mov
push
enter
mov
cmp
(bad)
sti
xchg
ds
loop
pop
xchg
or
sub
retf
mov
icebp
lahf
xor
arpl
mov
std
retf
aam
pushf
popf
push
or
lods
xchg
sbb
push
push
shr
sub
xchg
xor
jo
out
aad
iret
push
(bad)
pusha
inc
add
mov
sbb
outs
js
iret
jo
inc
ror
xchg
sub
clc
dec
adc
sub
xchg
and
pusha
es
jge
cmp
scas
scas
popa
rcr
aam
and
iret
dec
ror
movs
xor
int
ror
xchg
inc
fucomip
cmp
jmp
iret
cli
je
outs
push
mov
inc
adc
repz
arpl
mov
sti
sub
test
xchg
aad
pop
sub
popa
loopne
mov
sbb
mov
add
sub
cmp
inc
test
push
adc
or
scas
movs
jae
sahf
cli
icebp
xor
arpl
adc
movs
jecxz
mov
out
cmp
mov
push
jnp
pushf
cmc
mov
repnz
xor
add
shl
fs
xchg
xor
inc
jne
ja
in
mov
jle
mov
adc
adc
pop
es
and
pop
scas
push
movs
pop
aam
repnz
xor
ret
cmp
ds
push
sbb
and
mov
or
jmp
xchg
in
arpl
jnp
inc
les
repnz
ss
pop
pop
rol
fdivr
rcl
fist
fist
sub
mov
(bad)
bound
rol
ds
mov
aad
dec
out
call
retf
sub
inc
jnp
and
pop
sub
mov
setle
cld
xchg
xor
loopne
cwde
fs
cmps
das
test
or
xchg
inc
pusha
xor
imul
rol
jb
mov
mov
mov
(bad)
and
xor
sbb
lea
add
or
loop
jmp
arpl
inc
inc
repz
arpl
in
mov
pop
cmc
aaa
fmul
movs
repz
cmp
mov
pop
in
jb
xor
cmp
xchg
mov
icebp
push
sub
cmp
aam
int3
movaps
pop
push
inc
pop
jns
cmp
pmaxub
shl
mov
ins
adc
or
sbb
mov
xor
and
push
(bad)
mov
xchg
sbb
push
sbb
cmp
ja
out
mov
or
dec
xor
add
fcmovne
jecxz
mov
dec
aam
icebp
add
cmp
pop
loopne
push
sbb
out
xor
xlat
jb
mov
lahf
test
les
xchg
xor
xor
pop
sub
sbb
cld
test
jle
add
call
in
inc
test
stc
or
(bad)
xor
mov
jle
mov
call
cld
mov
addr16
retf
cli
xchg
sub
mov
retf
ja
js
pop
or
xor
outs
xor
mov
iret
(bad)
mov
fs
sbb
mov
(bad)
sub
loop
or
in
test
mov
push
les
xor
jnp
cdq
icebp
pop
call
retf
push
iret
(bad)
stos
iret
rcl
lea
dec
cld
mov
xlat
cld
xchg
mov
jns
sub
loop
out
sub
dec
aad
sbb
or
pop
(bad)
(bad)
jno
sbb
or
and
std
jb
jg
fwait
dec
sti
cs
mov
sub
push
vpmaxub
sub
cld
sub
cli
dec
pop
fmul
int3
stos
adc
push
mov
aas
mov
repnz
cdq
jbe
addr16
push
push
aad
fdiv
inc
xor
adc
cmp
enter
pop
push
(bad)
cs
call
mov
sbb
xchg
es
stos
add
test
maskmovq
div
int3
xchg
fadd
outs
outs
(bad)
sub
leave
or
movs
xchg
cs
outs
xchg
stos
push
or
cdq
movs
pop
pop
adc
jnp
inc
movs
pusha
or
scas
dec
cmp
or
dec
inc
push
lds
xchg
sahf
repnz
xlat
mov
or
imul
xchg
retf
inc
mov
jp
xor
and
adc
mov
mov
jg
aam
jge
cmps
pop
mov
loope
inc
loope
pushf
and
mov
xor
test
cmc
adc
mov
cdq
mov
ret
xor
or
mov
cmp
mov
mov
rol
push
and
adc
mov
(bad)
movs
das
sub
pop
push
gs
xor
fdivp
jl
loope
data16
jb
jae
sar
xor
xor
push
mov
push
shr
repz
dec
add
push
or
je
(bad)
jns
cwde
rol
jnp
std
and
fimul
call
mov
xchg
jne
and
movs
push
cmp
(bad)
scas
aas
mov
cld
or
push
and
ficom
cmps
fcomip
cdq
mov
inc
test
jns
in
popa
sti
pop
das
or
jmp
or
mov
in
mov
sub
cmc
dec
dec
test
sar
fidivr
xchg
test
loope
sahf
dec
inc
adc
or
mov
lock
ror
mov
lods
xchg
shl
into
dec
loopne
jg
data16
fisub
adc
mov
mov
or
aam
movs
or
xor
gs
sbb
jle
sbb
xchg
js
cwde
pop
jae
xchg
push
adc
ins
cs
jnp
push
dec
cmc
cwde
jo
sti
repnz
out
fistp
mov
cmp
mov
add
add
add
jg
fwait
ss
cld
jns
ficomp
or
push
inc
ror
aaa
mov
fnstenv
dec
dec
push
ror
sbb
es
sbb
mov
and
or
paddusw
xchg
sub
pop
mov
fld
mov
test
and
jnp
xchg
ja
std
and
inc
mov
add
jg
test
out
outs
icebp
int3
dec
popf
and
sbb
push
stc
pop
jns
shr
popf
das
ss
movs
add
and
leave
fdiv
ficom
cmp
sbb
shr
and
sbb
adc
pop
retf
data16
fcmovnu
fisub
jns
xchg
dec
jp
adc
jl
leave
xchg
adc
nop
jnp
jle
stos
in
pop
in
mov
pop
shl
into
push
adc
cmc
add
mov
retf
mov
add
data16
dec
lods
(bad)
ret
fcmovu
pop
les
or
pop
xchg
mov
cmp
xor
fwait
adc
ins
inc
imul
push
call
mov
mov
rcl
adc
test
sbb
mov
mov
push
dec
sbb
jle
mov
push
shl
inc
cmp
xchg
sub
aam
lock
int3
repz
mov
shl
retf
or
push
outs
xor
xor
mov
(bad)
mov
pushf
lds
lods
cmp
xor
cmp
enter
les
cmc
mov
mov
pop
repz
cmp
(bad)
mov
dec
mov
jb
stos
mov
jle
fmul
push
mov
inc
sub
repz
in
je
aaa
or
scas
imul
(bad)
fsub
mov
cmp
ret
sub
repnz
pop
mov
shl
xchg
popa
add
(bad)
jo
mov
push
lock
int3
mov
xor
clc
repz
inc
jne
pushf
in
in
push
scas
or
std
fsubr
jo
stc
pop
jmp
push
sub
mov
mov
out
xor
clc
dec
jmp
data16
jg
jo
pop
push
les
(bad)
xchg
das
jne
pop
dec
and
test
mov
aaa
fadd
sbb
jge
push
scas
push
ins
push
test
cld
and
dec
push
push
sub
or
sub
leave
repnz
jmp
adc
xor
mov
ds
cmp
bound
repnz
dec
loop
iret
pop
stos
add
push
push
lahf
cmp
push
mov
or
mov
pop
xlat
push
xchg
push
sbb
ret
in
out
mov
(bad)
mov
movs
jl
out
mov
mov
out
movs
push
dec
push
js
pop
xchg
sub
pusha
pop
cmc
lds
push
mov
lods
mov
jmp
jp
or
cld
data16
into
mov
jmp
mov
xor
cmp
add
scas
inc
shr
mov
jg
sub
add
adc
xchg
std
push
js
push
jg
clc
scas
je
cdq
imul
es
xchg
and
mov
push
pop
idiv
and
clc
jl
ror
xor
dec
jb
jmp
repnz
rcl
mov
mov
popa
add
std
dec
lock
dec
pop
xchg
cli
dec
push
mov
ja
call
std
rcr
shl
je
push
pushf
imul
es
call
das
push
pop
sbb
and
jg
test
fsubr
mov
addr16
enterw
or
(bad)
js
pextrw
popf
cmp
(bad)
call
adc
dec
jnp
cmps
dec
push
aas
lea
iret
(bad)
repnz
(bad)
mov
cmp
pop
inc
mov
or
bound
dec
iret
xor
fisttp
mov
xchg
xchg
push
imul
cld
cmp
iret
(bad)
cdq
sar
fs
shr
jg
out
jb
adc
inc
or
adc
dec
outs
test
mov
sti
mov
or
ret
ins
in
push
mov
mov
xchg
pop
add
mov
mov
inc
cmp
jns
dec
dec
leave
je
mov
mov
out
sub
pop
call
or
int
add
call
scas
sbb
xchg
sbb
or
fstp
(bad)
xlat
neg
or
rcl
inc
cmps
(bad)
sbb
jne
repz
dec
ins
aaa
cmp
mov
adc
dec
repnz
jmp
sub
sub
xchg
or
pushf
test
retf
aam
fcom
xor
hlt
and
sbb
lods
xor
mov
push
xchg
cmc
imul
outs
mov
ror
adc
popf
inc
fnstenv
dec
pop
ret
daa
fwait
aad
xlat
dec
sahf
xlat
xor
xor
call
sub
loop
and
mov
(bad)
fcmove
sub
xor
dec
movs
dec
out
idiv
frstor
popf
mov
in
ins
add
pop
adc
fisttp
test
jge
call
cli
ins
cmp
imul
adc
cmp
sub
popa
fild
fidiv
jmp
pushf
lods
jp
pop
xlat
jmp
mov
jge
iret
pop
add
sbb
pusha
sbb
dec
mov
in
outs
pusha
rcl
xchg
adc
dec
cmc
loope
test
pop
cmp
fwait
inc
mov
in
push
jno
hlt
inc
push
lds
(bad)
jmp
inc
inc
aad
fsubr
ins
mov
idiv
js
fisttp
in
lods
or
sub
stos
xchg
dec
pop
sub
enter
add
push
xchg
stc
out
nop
pushf
in
aam
mov
add
mov
(bad)
lods
mov
mov
xchg
clc
fnstsw
ins
xor
out
scas
test
imul
add
fnstcw
push
dec
cmps
xchg
int3
adc
pusha
scas
cli
scas
pushf
aas
movs
mov
mov
xor
stos
(bad)
mov
data16
dec
jg
cdq
aad
movs
push
inc
mov
test
fwait
pop
outs
or
mov
inc
mov
adc
mov
fild
jecxz
(bad)
or
cs
push
out
mov
xchg
jbe
jp
adc
and
pop
xchg
adc
stos
les
test
outs
pop
or
aaa
stos
popa
jne
pop
jo
inc
cld
(bad)
(bad)
push
les
fidiv
cmp
sti
(bad)
daa
in
call
es
pop
aad
cs
and
ror
mov
push
shr
sbb
adc
test
and
mov
iret
push
push
jg
fs
adc
mov
mov
pop
and
retf
pusha
js
cmp
lea
mov
(bad)
das
or
ds
sahf
ficomp
push
ficom
pop
ss
fimul
cdq
scas
out
test
cmp
daa
scas
add
push
test
loope
jle
ret
xchg
mov
add
pop
sub
mov
xchg
inc
xor
ins
mov
cwde
or
int3
dec
adc
inc
mov
sbb
bswap
mov
iret
xchg
jmp
adc
cdq
add
mov
pusha
fist
lds
cmp
push
push
jae
imul
cmp
fst
mov
jmp
mov
cld
xor
es
and
or
ds
out
pop
mov
mov
dec
xor
mov
mov
pop
(bad)
pop
scas
inc
jp
leave
jge
push
(bad)
dec
pop
sub
sub
mov
cmp
(bad)
in
in
adc
popa
inc
or
sub
aaa
push
push
arpl
retf
jns
sbb
stos
sbb
ret
aam
jbe
rol
les
aad
jl
xchg
aas
jg
cli
pop
adc
shl
mov
lds
jo
inc
cmp
in
lahf
ret
pusha
lock
call
test
and
std
sub
push
repz
mov
mov
and
idiv
add
loope
aad
dec
push
rcl
adc
dec
or
inc
pop
inc
ja
dec
adc
add
mov
sbb
mov
inc
jp
into
pop
hlt
sub
sbb
in
outs
cmp
mov
mov
cmp
or
retf
test
xor
into
cmp
push
and
jecxz
(bad)
sti
in
rol
movs
jmp
jae
and
les
dec
inc
aad
cmp
add
jge
retf
retf
retf
jl
or
pop
mov
add
xchg
fstp
stos
jae
in
jp
xor
icebp
lea
adc
aas
and
cdq
add
(bad)
jns
mov
sub
stc
jecxz
mov
inc
popa
repnz
addr16
call
and
adc
push
cmp
addr16
es
cmc
add
test
dec
adc
jge
jae
ret
xor
test
aad
mov
jae
inc
imul
cwd
das
repz
(bad)
iret
std
in
cmps
adc
push
out
cmp
call
cwde
jno
or
movs
leave
repnz
outs
mov
dec
dec
sbb
and
scas
call
dec
xchg
sbb
cmps
loop
ins
lds
and
lods
mov
cmps
add
(bad)
mov
pop
icebp
mov
mov
pop
push
cwde
jl
retf
rcl
ds
cwde
mov
and
rcl
fdiv
xor
shr
xlat
xor
das
xchg
or
cmp
mov
lods
ins
je
test
test
cdq
adc
(bad)
cmps
sbb
cdq
mov
arpl
mov
mov
test
xchg
imul
fcomp
mov
mov
fldcw
shl
outs
cli
mov
ret
xchg
into
inc
add
sti
jno
mov
jo
cmp
adc
xchg
rol
cmc
outs
pushf
dec
dec
mov
jae
adc
iret
test
pop
in
sahf
rcl
lahf
mov
inc
out
add
retf
xchg
mov
dec
dec
xor
jne
sub
push
sahf
sbb
cli
or
pop
(bad)
fidivr
fcomp
daa
imul
aad
pop
adc
scas
ret
push
(bad)
out
ror
(bad)
mov
lgdtd
mov
xchg
sbb
jmp
mov
cwde
hlt
(bad)
or
stos
stos
adc
stc
dec
and
and
lock
add
outs
sbb
sub
mov
dec
inc
adc
out
push
cmp
mov
test
or
and
lock
or
adc
ret
sar
sbb
mov
aam
xlat
mov
shl
sub
and
ds
shl
pop
sub
(bad)
mov
sub
mov
adc
aam
stos
jl
sti
ja
daa
jp
cmps
addr16
jp
(bad)
call
popa
cld
clc
out
out
arpl
int3
jmp
push
lods
shr
lahf
adc
or
mov
imul
and
pop
aas
xor
push
pushf
sbb
xor
push
sub
aam
inc
push
in
gs
push
in
dec
inc
sbb
popa
call
or
mov
xor
jmp
ds
fstp
les
fisttp
in
inc
mov
adc
cdq
fwait
cwde
adc
jle
scas
ins
jne
xchg
outs
stc
in
shr
dec
and
or
or
jmp
cs
add
and
jnp
dec
cli
xchg
scas
dec
jge
fwait
ins
loope
dec
ins
cmps
xor
cdq
sbb
call
out
shl
adc
xor
fcom
pop
stos
sbb
pop
sbb
pop
and
arpl
neg
pusha
std
aam
cmp
(bad)
call
jbe
fbstp
dec
fist
test
jbe
je
jae
jmp
xchg
push
and
add
jne
jp
cld
pop
(bad)
mov
mov
enter
xor
addr16
lods
call
(bad)
xor
mov
mov
imul
dec
ins
pop
mov
into
ror
ret
cdq
ins
adc
retf
jmp
addr16
fidiv
out
jmp
add
and
out
scas
and
rol
fdivr
movs
popa
shl
test
mov
mov
add
xor
sub
loop
into
cmps
ja
push
(bad)
mov
aaa
test
xor
imul
mov
(bad)
(bad)
ja
inc
shr
movs
retf
test
jmp
outs
cli
mov
pop
aam
fs
daa
jg
ror
ret
mov
mov
mov
(bad)
rol
or
inc
xor
and
sbb
cwde
stc
(bad)
add
mov
and
and
fwait
mov
mov
push
sbb
outs
outs
cmps
shl
in
ss
cmps
push
paddq
inc
test
lds
push
and
jo
movs
pop
pusha
or
fsub
cmp
jl
fdiv
pop
xchg
out
clc
stos
and
imul
jne
mov
fcmovnu
inc
clc
inc
pop
mov
inc
test
cdq
sbb
fbld
xor
xchg
mov
jmp
add
push
cmc
jmp
daa
or
fiadd
xchg
push
outs
mov
sbb
scas
xchg
shl
ja
jo
adc
nop
inc
popa
cmp
in
(bad)
cmp
adc
jnp
xchg
jno
mov
or
or
dec
or
or
jp
xor
push
clc
cmp
mov
jnp
int
pop
data16
push
jbe
push
mov
aaa
imul
mov
xchg
call
stos
int
(bad)
jmp
jb
pushf
mov
jmp
adc
pusha
leave
mov
test
mov
jae
aas
xor
mov
xor
imul
jo
mov
loope
inc
je
inc
jno
mov
add
or
mul
mov
or
pop
jg
dec
xchg
jecxz
jle
fwait
pusha
push
ds
imul
neg
pop
je
or
jle
int3
jmp
xor
mov
js
cs
xchg
sbb
lock
imul
in
sub
fisubr
inc
jb
mov
test
aas
(bad)
cwde
pop
push
xchg
jno
(bad)
iret
jge
movsx
push
inc
and
mov
or
addr16
rol
fmul
inc
fmul
push
hlt
dec
cmc
mov
stos
imul
push
shl
xor
pushf
rcr
jmp
mov
inc
push
outs
add
test
ret
mov
je
jmp
sbb
add
add
mov
xor
shl
call
in
(bad)
and
and
jns
or
or
rcr
mov
inc
mov
push
mov
repz
sub
jl
adc
cmp
mov
or
adc
in
xchg
jae
push
pop
ins
das
cmps
retf
and
or
leave
mov
cmps
jecxz
pop
sub
pop
and
shl
inc
mov
adc
fwait
push
dec
xor
ret
shl
sub
add
(bad)
xor
stos
mov
pop
out
mov
ins
arpl
mov
push
inc
inc
cld
in
adc
imul
retf
repz
inc
adc
or
mov
inc
icebp
jg
inc
shl
mov
pop
je
xchg
pop
push
cmp
and
pop
(bad)
xchg
pushf
mov
push
ins
dec
jmp
arpl
ins
sub
inc
fisttp
and
popf
pop
scas
dec
and
(bad)
jnp
xor
and
or
movs
inc
mov
push
push
jno
cwde
jae
dec
mov
push
retf
mov
mov
imul
xor
and
lahf
xchg
ins
pusha
cs
mov
add
movs
push
test
inc
cmp
sbb
sub
sbb
sar
leave
push
or
int
push
adc
jb
adc
xlat
jg
push
in
mov
pop
pop
push
cmps
rcr
or
xchg
les
repz
xlat
sub
push
xchg
out
adc
dec
mov
mov
jno
adc
fstp
aam
pop
sub
les
jge
dec
sbb
pop
dec
dec
jmp
stos
push
ja
leave
data16
mov
inc
and
pop
(bad)
sbb
sub
pop
dec
fimul
adc
es
and
mov
lock
jg
movs
and
pop
mov
or
cmp
gs
div
push
in
sar
sbb
popf
xor
push
pop
cs
push
pop
(bad)
mov
adc
cmc
or
(bad)
jmp
fcmovu
xchg
data16
sbb
push
shr
movs
daa
cmp
push
adc
fimul
ins
gs
or
xchg
(bad)
pop
popf
pop
aam
add
push
fild
loop
cmp
sub
pushf
sar
mov
xor
rol
les
ror
xor
popf
and
pop
inc
sub
rcl
jle
jne
dec
inc
sub
out
(bad)
push
in
sub
(bad)
in
(bad)
mov
mov
push
xor
push
pop
cmp
xor
jne
fistp
test
inc
fucomp
das
cmp
test
fcom
pop
pop
mov
or
mov
imul
mov
cmp
xchg
cmc
push
in
int
cmp
jle
adc
out
mov
jno
cs
mov
ins
into
jmp
push
popa
xchg
xchg
cmp
sbb
ds
dec
push
or
push
jmp
and
push
and
jle
push
(bad)
dec
pop
cli
jp
lahf
ret
xchg
shl
stos
jo
sbb
and
rcr
popa
je
ss
cld
pop
call
sub
pusha
shr
pop
pop
cs
jns
sahf
xor
iret
dec
adc
daa
adc
and
neg
pop
pop
cmps
clc
pusha
jmp
pop
jp
ins
mov
pop
ror
sub
lds
and
add
fcomip
lods
movs
rcr
xchg
jl
mov
mov
fidiv
mov
aas
sbb
bound
mov
and
ss
jno
jl
add
fstp
scas
cmp
and
jnp
cmp
lea
push
pop
mov
lds
ret
leave
movs
mov
test
and
imul
repz
push
or
cmp
lods
repz
loopne
mov
mov
jo
div
loope
mov
xor
sbb
out
popf
jl
bound
push
add
ins
(bad)
test
fcmovu
(bad)
neg
das
gs
sbb
add
fs
lods
jnp
lds
add
or
inc
es
inc
and
shl
js
lds
mov
ds
lahf
cmp
jne
out
dec
inc
cld
dec
sti
outs
adc
adc
movs
(bad)
pop
mov
enter
sbb
scas
inc
rcl
sbb
cmp
pop
cli
mov
inc
dec
stos
not
imul
dec
imul
mov
scas
sti
mov
loop
mov
lahf
sbb
sub
das
inc
cwde
push
in
jp
adc
das
popa
sar
nop
mov
ret
ja
(bad)
pushf
jns
jne
cs
and
mov
lds
jae
je
add
xor
(bad)
fist
dec
push
adc
out
sub
cwde
push
ret
or
adc
jp
cwde
imul
cdq
and
data16
loop
gs
jbe
pop
jecxz
shl
jo
and
adc
lods
stos
rcl
dec
and
sub
jl
xchg
jae
ror
out
mov
push
aaa
pushf
inc
adc
fmul
outs
popa
cld
xor
dec
push
adc
arpl
add
mov
adc
mov
retf
mov
pop
push
push
div
stos
xchg
sbb
and
and
xor
ds
jmp
popf
jle
sbb
pop
(bad)
ja
mov
fcmovnb
cmp
adc
push
mov
clc
or
and
pop
mov
bound
imul
fxsave
sub
loope
(bad)
xchg
fsubr
icebp
add
mov
inc
sar
mov
jg
data16
loopne
stos
add
clc
mov
xor
mov
cdq
xor
add
aad
jb
data16
sub
jbe
pop
outs
pop
or
lahf
jns
out
adc
fnstcw
cmp
fidivr
push
into
sbb
pop
and
sbb
cmp
stos
jg
stos
inc
movs
stos
pop
mov
dec
push
mov
mov
add
(bad)
movs
fisub
sbb
xor
shr
movs
(bad)
ins
fwait
sbb
enter
outs
inc
js
lea
loope
jnp
xor
sahf
mov
jecxz
pop
enter
int
adc
and
retf
mov
and
jne
pop
aam
stc
(bad)
popa
sbb
pop
jmp
push
inc
fisttp
mov
jnp
popa
push
fwait
cmps
out
sbb
(bad)
fdivp
mov
out
push
stc
push
sub
aad
inc
int3
out
fmul
push
dec
mov
mov
add
mov
ins
inc
fwait
sbb
not
push
popf
scas
scas
mov
cmp
test
jno
pop
into
sub
xor
arpl
and
aaa
adc
cwde
out
mov
pop
xor
cmp
xchg
(bad)
addr16
fsubr
pop
inc
sub
jg
inc
adc
dec
cmc
pushf
xchg
mov
test
pop
inc
jecxz
jge
mov
add
xor
bnd
outs
(bad)
sti
jle
(bad)
pushf
mov
sti
cmps
fcmovb
loop
scas
mov
mov
fcom
sti
push
imul
adc
sub
fmul
jne
repz
(bad)
jg
and
movs
retf
and
mov
aad
pusha
cwde
or
cmp
mov
inc
dec
xchg
mov
in
sbb
push
xor
adc
add
js
arpl
call
jnp
(bad)
js
sbb
dec
std
mov
into
pop
xchg
jecxz
je
mov
inc
dec
cmp
push
mov
mov
sbb
outs
movs
mov
std
xor
add
aas
inc
das
xor
or
xchg
ror
in
ins
pusha
cwde
mov
lods
outs
push
scas
mov
push
daa
pop
xchg
inc
push
cmp
mov
aaa
fwait
sub
pop
rcr
scas
rcr
movs
lods
iret
ret
mov
mov
mov
retf
push
xor
add
xchg
mov
or
imul
cmp
add
pop
repz
test
stos
call
mov
nop
dec
ins
xchg
push
ror
push
aaa
shl
je
mov
pop
adc
add
dec
fs
inc
or
pop
inc
cmp
push
(bad)
and
repnz
(bad)
enter
sbb
inc
xchg
mov
and
into
outs
imul
mov
push
ret
cmp
cmp
ss
pushf
fild
ins
lods
adc
adc
jo
push
ins
jmp
ret
xchg
jge
stc
xchg
and
das
adc
inc
and
nop
or
es
int3
fimul
sub
pop
js
add
out
mov
lods
jge
sti
dec
aas
jmp
and
(bad)
push
(bad)
sar
in
or
psllq
cld
or
cmps
jns
and
fbstp
fmul
mov
das
jnp
fwait
add
adc
dec
mov
pop
inc
sbb
adc
push
iret
lods
les
mov
and
ds
fwait
out
cdq
push
sub
xlat
mov
int3
jb
mov
hlt
and
inc
jle
xlat
(bad)
xor
inc
pop
sbb
in
push
bound
cmc
mov
xchg
dec
scas
stos
loope
or
push
jle
add
outs
jmp
inc
and
mov
inc
loopne
jl
mov
fwait
mov
cmp
dec
daa
sbb
xchg
fnstcw
and
push
iret
outs
retf
hlt
mov
pop
nop
(bad)
in
lock
sar
sub
scas
push
scas
mov
gs
outs
(bad)
jnp
mov
movs
sbb
lods
or
(bad)
pop
inc
adc
movs
xor
cmp
ret
dec
cdq
or
cmp
pop
cmp
test
sar
pop
retf
out
xchg
add
shl
out
test
shr
xchg
jns
in
jl
mov
sti
in
loopne
sub
jge
lahf
inc
lods
sar
mov
shl
test
xor
and
and
out
dec
xor
pop
mov
dec
add
pop
daa
in
and
call
pop
dec
pop
push
xchg
cmps
push
retf
mov
xor
jno
leave
sahf
xor
push
scas
jg
inc
push
ja
add
daa
mov
out
pusha
mov
int3
(bad)
or
call
push
in
pop
popf
sbb
dec
xor
aas
stos
(bad)
repnz
imul
push
neg
call
jmp
add
gs
push
pop
sbb
pop
and
adc
jg
lahf
xchg
mov
popf
jb
mov
movs
jge
outs
clc
push
loop
cmp
aad
push
imul
push
sbb
imul
dec
fadd
adc
adc
or
call
leave
pop
sti
mov
adc
ds
idiv
jbe
ins
and
les
add
fild
xchg
pop
neg
retf
call
mov
fwait
mov
xor
adc
in
dec
nop
jbe
pop
mov
cli
pop
push
pop
fdiv
call
orps
dec
jb
inc
hlt
daa
jp
pop
lock
scas
add
mov
mov
test
loope
fisttp
ins
inc
into
js
stc
xlat
push
std
and
mov
mov
push
xchg
and
out
fldenv
daa
aad
mov
mov
(bad)
ds
repnz
(bad)
(bad)
mov
mov
fwait
xchg
fsub
sub
inc
mov
and
push
pop
xor
or
xor
scas
xor
je
jo
ret
lahf
repnz
cs
pop
pop
push
(bad)
fstp
data16
cld
push
mov
imul
or
cmp
add
and
in
pop
xchg
sahf
icebp
(bad)
pop
inc
cld
push
rol
scas
cli
adc
xchg
push
xchg
fsub
pop
mov
iret
mov
adc
fnstcw
xchg
test
(bad)
sbb
jo
loop
pop
pop
pusha
mov
loop
int3
call
inc
lods
pop
inc
xchg
mov
sbb
sbb
ficom
les
ret
sub
or
imul
and
lods
xchg
sub
add
and
bound
cmp
jge
out
xor
adc
call
cdq
push
jmp
mov
sub
jmp
(bad)
stc
fstp
mov
imul
sbb
pop
movs
and
pop
daa
mov
xchg
int3
(bad)
lods
jbe
push
and
test
pop
ins
xor
mov
sub
fwait
mov
repnz
fs
retf
cmp
mov
(bad)
addr16
xchg
outs
mov
sbb
out
push
inc
retf
call
loop
jle
cmps
xchg
adc
xchg
sub
dec
mov
(bad)
int3
mov
jo
push
push
jle
stos
xor
dec
popa
pop
adc
mov
inc
(bad)
pop
loop
mov
jl
mov
and
sbb
rol
jmp
dec
adc
icebp
lods
(bad)
or
cs
int
sbb
cmp
mov
fst
aas
in
rcr
das
fnstcw
cmp
ret
cmps
pop
or
stc
push
cmp
pop
sar
ja
test
call
mov
imul
cmps
cdq
and
mov
sub
inc
push
out
loope
mov
cmp
adc
fnsave
shr
rol
cli
loop
aad
popa
retf
sub
stos
sub
mov
pop
pop
cmc
pop
hlt
push
adc
adc
test
cmp
xor
mov
ins
and
mov
fbld
out
gs
ror
push
add
js
mov
mov
(bad)
push
hlt
mov
xchg
mov
inc
fsubr
push
pop
lahf
inc
repz
mov
mov
(bad)
movs
adc
ror
repz
sar
jl
push
cdq
addr16
das
movs
(bad)
push
mov
in
cdq
mov
sahf
into
or
dec
in
add
push
add
sbb
daa
lahf
xchg
in
shl
pop
jo
int3
fstp
add
outs
dec
mov
sbb
std
sub
mov
push
loope
out
xchg
pushf
push
aam
scas
movs
push
mov
push
(bad)
stos
cmp
adc
out
cld
inc
dec
clc
inc
xor
mov
push
sbb
add
shr
or
cmps
inc
cmp
popa
adc
push
pop
dec
inc
push
(bad)
jmp
push
sbb
clc
sysret
and
sbb
adc
jmp
push
(bad)
scas
scas
sbb
mov
inc
cwde
sahf
inc
mov
clc
mov
bound
jl
rol
push
jmp
and
and
jge
jns
in
outs
add
(bad)
imul
push
push
pusha
les
lods
lds
imul
inc
outs
rcl
aad
ds
mov
mov
xchg
lods
jo
sbb
dec
call
bound
jo
mov
out
rol
stos
jbe
mov
fwait
cmp
xchg
test
mov
mov
adc
pop
push
and
adc
retf
inc
loopne
fcomp
sub
ins
ret
sub
xchg
fimul
xchg
ds
cmc
and
dec
add
add
loop
dec
fldcw
out
push
add
or
repnz
inc
sbb
enter
lods
imul
or
enter
xor
sub
not
lahf
out
lahf
std
push
data16
in
mov
jg
shl
cmp
pop
push
not
push
jmp
jae
cmp
int3
jge
mov
test
out
or
jp
retf
xor
call
cmc
data16
push
test
cmp
in
inc
xchg
nop
nop
dec
addr16
jo
push
lock
cli
rcr
or
adc
data16
jg
test
add
fwait
aaa
or
inc
in
mov
not
jb
mov
arpl
fisttp
push
lds
jae
das
mov
test
xor
mov
push
mov
push
cmc
pop
pop
scas
xor
stos
jge
push
mov
pop
mov
out
mov
jmp
retf
pop
xlat
jno
pop
rcl
fcmovb
pop
or
rcl
adc
adc
dec
je
jo
sbb
fcomp
inc
sub
mov
ins
xchg
test
fidivr
(bad)
fisub
cmp
push
loope
les
push
ins
loop
inc
sbb
xchg
pop
mov
loopne
addr16
sub
pop
jl
adc
sub
jae
rcl
jb
iret
imul
inc
and
adc
mov
adc
xor
fidiv
and
ret
retf
ds
inc
mov
or
(bad)
mov
clc
inc
lds
popa
mov
and
xor
add
movs
or
mov
sbb
inc
out
test
stc
sub
jmp
add
scas
xchg
mov
dec
jbe
push
(bad)
sbb
jp
mov
push
ficomp
imul
dec
scas
fisub
dec
sub
push
aad
dec
popa
inc
adc
adc
les
shl
push
add
stc
sar
mov
mov
adc
int3
stos
or
pop
or
shld
xchg
sbb
dec
test
mov
stos
xchg
and
and
xchg
xchg
es
xchg
stc
mov
loope
sub
jbe
push
call
lods
mov
inc
jle
loopne
loope
(bad)
cmps
sbb
stc
jp
lock
xchg
add
cmps
dec
sti
and
mov
lds
arpl
stc
retf
retf
(bad)
sbb
cmps
leave
xchg
cmp
lds
les
mov
movs
mov
es
add
ret
inc
push
out
push
pop
cwde
stos
mov
ret
lea
scas
icebp
idiv
cmp
xchg
into
(bad)
mov
in
mov
clc
push
xchg
aam
pop
ret
ja
lahf
pop
out
cld
add
add
cmp
rcl
pop
mov
mov
jmp
jmp
mov
and
int
mov
cmps
sub
test
ret
pop
mov
pop
push
cli
pop
je
or
mov
jne
cmc
sbb
les
(bad)
or
and
cs
ins
jae
stos
ins
sbb
pop
rcr
mov
xor
pop
mov
cmp
mov
dec
mov
add
loopne
cmc
dec
shl
xchg
dec
dec
cmc
ds
jg
pop
cmps
sub
cmp
fidiv
das
fs
mov
dec
js
add
dec
cmps
rcl
push
enter
clc
test
pop
repz
sbb
jb
lock
dec
js
cmc
xlat
not
add
pop
sbb
xchg
(bad)
pop
push
cs
in
in
sbb
xchg
xchg
or
adc
pop
xor
mov
movs
xchg
cs
xchg
or
cmp
jmp
enter
lods
or
imul
or
cmp
lahf
dec
idiv
out
sbb
fwait
(bad)
xor
inc
mov
rol
in
in
cmps
jl
mov
inc
imul
loopne
outs
lea
or
icebp
pushf
movs
xchg
iret
dec
es
push
and
fldlg2
fild
pop
mov
push
(bad)
in
outs
jmp
lsl
mov
fdiv
outs
push
jp
dec
jp
pop
push
xchg
sar
and
ds
nop
stos
jbe
stc
int
mov
mov
cld
ds
sahf
jno
sbb
mov
and
cmp
jp
mov
outs
fisub
or
(bad)
aas
or
pop
jle
test
mov
jmp
xchg
xchg
jnp
clc
daa
jp
cmp
push
std
out
push
cdq
jle
mov
jge
mov
cmc
mov
dec
outs
mov
xchg
mov
aaa
aad
push
xchg
inc
test
jo
not
(bad)
xlat
mov
cmp
sbb
cmps
aas
jge
popf
push
aas
xchg
data16
push
fisubr
mov
pop
xchg
mov
and
jno
xor
fldenv
pop
xchg
(bad)
mov
pop
outs
shl
and
test
sbb
and
inc
push
out
dec
adc
movs
repz
(bad)
mov
aas
sbb
sbb
or
pop
iret
push
lea
or
popa
in
pop
or
jl
ror
ret
in
add
adc
repz
pop
xchg
int
aad
push
ss
imul
mov
stc
pushf
sbb
xchg
adc
adc
xchg
cmp
pop
pusha
arpl
pop
fwait
shl
sub
je
jbe
es
(bad)
retf
cmp
(bad)
pop
pop
push
fwait
dec
outs
pop
ret
lea
sub
or
outs
mov
or
xor
jno
pop
sub
mov
es
shl
inc
popf
add
pop
in
xor
add
in
repz
dec
dec
jmp
add
gs
mov
pop
int3
js
cld
loop
push
pop
lea
pop
dec
pop
fstp
(bad)
mov
inc
jne
vmovapd
dec
pop
ds
repz
lahf
cmp
aas
iret
mov
in
addr16
stos
adc
push
inc
cmp
push
ins
call
and
push
dec
mov
sub
je
pushf
xor
cmp
scas
mov
cld
mov
loopne
dec
pop
gs
mov
xchg
inc
inc
scas
loopne
mov
ins
(bad)
xchg
test
sub
pop
test
mov
into
fs
aad
pusha
movs
mov
inc
cwde
mov
in
add
and
jno
xchg
push
fwait
dec
jl
aad
lock
(bad)
aam
xchg
sub
popa
sbb
mov
sub
cwde
mov
xchg
stos
sub
(bad)
xlat
or
ja
jo
inc
or
adc
jno
ret
mov
lock
jecxz
inc
mov
jl
cld
pop
mov
push
and
js
ins
stc
hlt
lahf
jmp
push
pop
dec
and
nop
pop
mov
loopne
loop
inc
into
(bad)
adc
sbb
ret
dec
cdq
iret
call
sbb
sahf
fcom
pop
mov
inc
sbb
inc
popf
sub
icebp
push
or
leave
push
xor
fidivr
repz
call
jmp
xor
mov
and
or
call
or
jb
imul
(bad)
retf
inc
xchg
movs
cmp
jp
sub
fs
jmp
rcl
or
mov
iret
push
pop
add
ins
pop
enter
stos
(bad)
movs
test
int
cld
cmp
mov
cmp
pop
(bad)
not
(bad)
mov
rcl
push
daa
in
cld
jp
(bad)
ds
cmp
xlat
call
(bad)
jbe
lds
std
int3
(bad)
fldenv
sbb
sub
inc
stos
shl
jns
jmp
and
and
or
xchg
in
push
addr16
lea
lea
fs
sub
es
xchg
pop
sub
fdivp
jge
inc
sbb
inc
pop
sahf
cmp
jecxz
inc
or
std
push
dec
push
enter
fistp
add
mov
je
fstp
test
mov
add
test
dec
and
out
jmp
out
fwait
popa
adc
mov
retf
cmp
jecxz
call
cmp
jne
xchg
test
mov
aas
jnp
ins
dec
add
adc
sub
adc
repnz
(bad)
out
and
mov
pop
loopne
jo
(bad)
mov
(bad)
lods
shld
and
adc
add
rcl
(bad)
dec
test
jbe
nop
dec
outs
sub
fldcw
mov
dec
aaa
xchg
int3
lock
repz
es
add
cmp
push
inc
js
(bad)
mov
aam
into
outs
mov
out
xchg
mov
bnd
and
xor
call
sahf
in
or
(bad)
js
cmp
jl
cmp
call
jo
push
mov
jno
(bad)
retf
dec
cmp
js
sti
mov
jns
inc
int3
inc
lea
jmp
mov
mov
adc
add
inc
xor
cmp
lods
inc
sbb
out
mov
pop
pop
loope
loope
cld
(bad)
add
scas
cs
and
sahf
cli
or
jl
adc
outs
sti
loope
xchg
ret
das
and
(bad)
test
out
out
mov
xor
push
xchg
dec
int3
push
dec
outs
fild
pop
sub
mov
call
sbb
mov
jg
ja
xor
pop
add
fadd
jnp
and
mov
int
xor
repz
inc
out
iret
inc
pusha
lods
data16
lahf
and
sbb
and
sub
cmp
ret
jnp
inc
les
pop
ins
fst
mov
stos
out
mov
push
inc
jl
inc
xchg
sahf
cmp
sbb
xchg
(bad)
gs
gs
cmp
imul
jg
jo
fld
pop
dec
dec
div
cmp
sbb
and
ud0
pop
push
sub
mov
rol
dec
int3
sti
mov
fmul
add
xchg
pusha
pusha
xchg
call
xchg
and
jp
(bad)
test
leave
iret
popf
int
rcl
pop
loop
fsubr
std
xor
pop
into
jge
fcmovnbe
mov
cmps
out
(bad)
into
(bad)
add
leave
fiadd
xchg
aaa
inc
bound
inc
ret
das
and
inc
inc
bound
fdivr
ja
push
sbb
xor
sbb
out
pop
jmp
loope
nop
aam
mov
mov
cmp
lds
pop
pusha
aaa
je
jo
in
sub
pop
je
sub
jmp
ja
and
push
cmps
ret
sub
add
dec
and
rol
pop
adc
loop
in
ja
xchg
aam
pop
repnz
sub
sub
je
fwait
xchg
xchg
inc
ja
lahf
adc
push
jg
movs
(bad)
stc
cmp
and
cld
ftst
inc
push
and
jne
popa
xor
jle
scas
aad
mov
(bad)
and
(bad)
push
rcr
ret
ficom
loop
mov
or
sbb
outs
lock
xchg
dec
jmp
pop
and
div
mov
bound
pop
xor
in
mov
jbe
pop
mov
int
cwde
pop
test
xchg
shr
mov
mov
(bad)
movs
enter
aam
cmp
jmp
push
inc
xor
adc
sbb
out
lods
mov
sbb
pop
(bad)
ror
add
call
pop
xchg
mov
inc
sbb
inc
mov
xchg
xor
into
or
retf
(bad)
xchg
adc
or
mov
aas
ret
cmps
push
xchg
adc
sub
pushf
fst
pop
xchg
dec
paddsw
(bad)
loop
retf
js
cmp
inc
imul
xlat
sahf
addr16
(bad)
mov
std
xchg
repz
sub
icebp
(bad)
imul
hlt
xchg
jmp
cld
pop
dec
aam
loop
shl
stc
in
cmp
pop
repnz
scas
out
mov
(bad)
push
rcr
adc
sub
rcr
dec
jb
mov
mov
jmp
fsub
imul
lea
les
fs
iret
ds
or
dec
jbe
fnsave
lea
call
xor
jmp
xor
sbb
push
sbb
std
pop
push
inc
mov
dec
sub
clc
repnz
aaa
inc
mov
fdiv
aas
jb
(bad)
cli
rol
dec
call
(bad)
lods
push
xchg
cmp
fisubr
sbb
movs
scas
repnz
add
push
daa
xor
inc
mov
imul
pop
pop
shl
jo
outs
mov
sub
jp
cmc
xor
movs
inc
dec
popa
cmp
sbb
outs
dec
dec
jl
dec
jno
sbb
xor
push
ror
sahf
adc
in
sbb
cmp
pop
adc
cld
test
dec
jecxz
inc
and
inc
xchg
xchg
mov
mov
inc
sbb
aam
in
inc
stos
ins
in
inc
cmp
rep
out
cmp
ds
mov
cmc
je
sbb
jl
add
and
mov
iret
fist
dec
pop
sbb
or
sub
mov
cmps
arpl
cmp
cdq
jecxz
mov
pop
mov
push
mov
xor
or
inc
(bad)
popf
fld
imul
xor
xchg
ss
add
out
xchg
sbb
fst
out
add
or
cmp
mov
xor
(bad)
dec
int3
pop
mov
add
mul
mov
mov
add
mov
shr
pop
setle
addr16
jg
or
pop
sub
jmp
mov
jmp
or
jns
test
and
jne
jecxz
jge
mov
pop
cli
pop
repnz
cmp
mov
cmps
sbb
(bad)
dec
cmp
mov
jno
xchg
mov
cmp
fisubr
out
in
hlt
or
pop
jmp
(bad)
icebp
test
xchg
sub
jmp
dec
movs
and
out
sbb
fs
add
pop
lea
mov
rol
fwait
aaa
xchg
add
cmp
mov
push
int3
ins
loope
jno
leave
mov
and
mov
xor
loop
dec
sti
neg
stos
cdq
mov
shl
fild
aaa
pop
cwde
xchg
loope
xchg
sub
dec
mov
mov
push
clc
stos
call
mov
sub
cli
fs
gs
dec
lods
dec
mov
call
sbb
in
cmp
inc
cmp
idiv
xor
aad
sub
shr
mov
stc
and
(bad)
leave
or
scas
stos
sbb
pop
repz
xchg
movs
bound
lods
mov
jbe
mov
cmps
test
cmp
inc
add
push
sub
xchg
pop
mov
lea
mov
adc
stos
mov
leave
xchg
leave
call
or
(bad)
mov
dec
push
dec
fwait
push
lock
pop
stos
xchg
adc
inc
lahf
jg
mov
aam
sub
jmp
int
sbb
in
out
retf
cdq
sti
mov
sub
lds
mov
int
popa
shl
add
fimul
mov
(bad)
jo
(bad)
jne
into
loope
add
mov
xchg
or
push
pop
loopne
stc
inc
movs
mov
push
pop
(bad)
in
int
retf
or
xor
sub
sahf
fwait
xlat
movs
adc
add
xchg
call
or
jns
jne
out
xchg
push
dec
adc
movs
aam
cmp
and
out
retf
pop
jno
mov
outs
sbb
xor
inc
rcr
sub
lods
test
and
jnp
sahf
cmp
xchg
es
adc
ret
loopne
(bad)
outs
fbstp
or
(bad)
pop
jo
add
adc
aam
in
loop
popf
sub
scas
xchg
repz
xchg
mov
pop
xor
adc
dec
push
add
dec
scas
adc
popf
outs
mov
cmps
push
arpl
cmp
imul
add
fwait
mov
sbb
mov
hlt
call
pop
xor
ror
xchg
or
in
sub
popf
cdq
pop
inc
push
inc
pop
mov
jb
ss
add
sub
pop
mov
xchg
cmp
pop
out
push
test
out
scas
mov
add
and
jnp
push
in
(bad)
mov
retf
push
pushf
mov
cdq
ja
and
clc
addr16
mov
and
mov
std
sub
sbb
jmp
dec
in
add
adc
stos
(bad)
shl
dec
mov
loop
call
jo
dec
xchg
ins
mov
mov
clc
pop
aam
sbb
inc
cmp
xchg
sub
mov
call
jmp
jae
sti
in
or
jne
jge
cmps
pop
pop
push
cmp
in
mov
ins
imul
cli
mov
inc
aad
xchg
jo
cmp
mov
mov
lock
scas
das
xor
test
pop
push
adc
mov
daa
out
test
mov
data16
div
cld
(bad)
cmp
cli
adc
xchg
add
adc
sbb
shl
dec
rcr
inc
movs
mov
fldl2e
icebp
lahf
sub
mov
cdq
pop
push
mov
push
mov
dec
mov
leave
mov
ret
xchg
xor
adc
inc
pop
mov
xchg
div
aaa
stos
dec
inc
fwait
adc
adc
fs
jbe
mov
inc
bound
sahf
sub
mov
(bad)
lds
stos
outs
mov
or
push
push
mov
test
push
jecxz
repz
mov
movs
cwde
addr16
in
mov
(bad)
mov
mov
pop
adc
cli
fwait
adc
dec
jecxz
movs
ret
push
jo
loope
or
xchg
arpl
adc
inc
jne
sbb
loopne
movs
cld
or
mov
and
sti
aaa
pop
ja
iret
adc
sar
(bad)
mov
call
inc
outs
pop
cdq
leave
test
fmul
xchg
mov
fwait
add
adc
ss
dec
fld
repnz
add
outs
int3
adc
pop
ror
aad
ficomp
(bad)
sti
sub
je
mov
or
outs
(bad)
fsub
push
fidivr
jmp
mov
or
sti
lods
mov
lods
inc
xor
inc
jmp
xor
call
jmp
test
dec
mov
or
pushf
jp
gs
sahf
inc
sub
fmulp
jb
jl
mov
dec
fs
or
xchg
or
push
mov
cmp
mov
inc
fs
in
jl
rcr
call
mov
mov
and
cmp
fiadd
push
imul
lock
xchg
imul
les
(bad)
fsubr
mov
and
test
out
das
out
dec
out
popa
pop
push
adc
pop
(bad)
std
nop
cmp
or
retf
sub
pop
adc
iret
pop
out
jmp
mov
adc
into
sbb
mov
dec
jl
sbb
enter
jo
mov
add
sbb
mov
mov
addr16
out
fcmovu
mov
xchg
fs
lods
test
int3
fld
into
das
jmp
(bad)
test
daa
in
(bad)
or
mov
pop
popf
inc
enter
mov
das
std
icebp
jnp
stc
push
mov
mov
out
xchg
or
fwait
and
cmp
gs
xchg
and
push
inc
jge
mov
xchg
and
mov
xchg
jbe
inc
pop
fistp
adc
and
xchg
mov
pop
add
aas
jno
sub
aam
sbb
std
dec
fs
and
test
cmps
sbb
rcl
mov
rol
ds
stos
repz
bound
les
daa
xchg
pop
stos
in
imul
jno
repz
xor
inc
leave
cmp
dec
adc
or
hlt
aam
cmp
cs
test
aaa
jo
jecxz
mov
out
sbb
or
mov
lea
xor
mov
push
xor
sbb
mov
in
cmp
cli
out
push
iret
inc
pop
neg
div
aaa
add
cmp
cmp
add
xchg
clc
push
adc
(bad)
scas
fs
push
imul
(bad)
inc
lahf
push
mov
adc
mov
push
fimul
outs
push
ins
xchg
jmp
mov
push
mov
ror
cmp
int3
pop
fwait
jbe
and
test
pop
fadd
xor
push
mov
or
jmp
jl
push
pusha
in
mov
mov
and
(bad)
xor
add
jne
xlat
pop
inc
ret
jmp
dec
pusha
xchg
mov
jmp
xor
inc
mov
jecxz
hlt
sub
stos
mov
pop
xor
and
pop
out
cmp
aam
or
ja
xchg
stos
or
(bad)
bound
inc
je
out
mov
jno
rcr
pop
mov
stos
repz
add
outs
pop
test
ffree
pop
in
sahf
dec
cs
or
call
add
push
sub
out
dec
lock
xchg
cmp
mov
push
call
loope
bound
jl
js
mov
cmp
add
and
sub
mov
(bad)
jg
out
adc
jle
fisttp
mov
mov
mov
mov
test
mov
cmp
mov
stos
in
mov
shl
lds
ins
daa
test
and
adc
cmps
push
sti
addr16
jecxz
int
pop
xor
and
mov
pop
mov
xchg
and
push
jmp
stos
(bad)
push
(bad)
adc
jno
add
mov
test
push
das
sbb
pop
xor
mov
jg
mov
gs
dec
mov
int
or
jp
xor
mov
stos
mov
dec
sar
in
push
fwait
cdq
cmp
sbb
cwde
sbb
dec
stc
sti
pop
cmps
(bad)
lahf
mov
leave
or
hlt
push
xor
and
mov
jge
arpl
fcomp
cld
pop
sbb
mov
xchg
pop
dec
mov
jo
(bad)
ss
js
ret
sbb
mov
or
mov
repz
push
ins
fisub
icebp
mov
push
rcl
sub
arpl
inc
inc
sub
jb
or
mov
sbb
cmp
in
pop
and
mov
fs
mov
xchg
sbb
ds
aas
push
out
push
jge
push
mov
sahf
ss
into
call
retf
shl
into
sti
popf
push
cmp
add
cld
mov
adc
xchg
mov
ins
jb
dec
out
enter
test
outs
test
mov
test
cmp
popa
and
fwait
sub
push
fnstenv
sub
jne
jecxz
adc
cmp
mov
and
xchg
ss
loop
pop
jmp
add
and
es
or
dec
test
adc
and
rol
mov
movs
ins
push
add
cmps
mov
mov
jecxz
int
push
shl
pop
out
jl
loop
pusha
repnz
xlat
aad
das
stos
inc
out
mov
and
outs
aaa
fistp
pop
sti
(bad)
jnp
je
dec
lods
nop
pop
dec
fcomp
sub
mov
call
sub
inc
mov
leave
adc
add
repnz
loop
add
push
fisub
out
xor
sub
mov
cli
mov
fwait
push
inc
cli
int3
push
mov
fdivp
cmps
inc
outs
mov
or
mov
push
std
or
dec
std
ret
test
(bad)
xor
push
je
cmp
mov
xor
add
mov
shr
cmp
enter
(bad)
fild
aas
dec
xchg
push
inc
dec
outs
xchg
jmp
or
fbld
dec
mov
arpl
mov
adc
or
std
repz
ret
loop
bound
sub
and
stos
inc
dec
push
pop
mov
dec
pop
and
xor
sub
or
push
xchg
mov
out
adc
popa
dec
push
push
mov
pop
add
and
or
pushf
sub
scas
and
add
ds
stos
lahf
ret
bndstx
dec
addr16
inc
adc
inc
add
aam
cdq
(bad)
cmps
mov
xchg
adc
ret
pop
jle
inc
cmps
jns
fbstp
mov
and
mov
xchg
repnz
into
push
xchg
popa
data16
retf
in
and
imul
inc
ficom
loopne
mov
idiv
xchg
xchg
push
stos
dec
jge
fstp
push
stc
sub
clc
xor
and
xchg
cmp
movs
ret
push
add
out
lds
dec
mov
mov
xchg
add
fs
shr
cmp
je
neg
ja
sbb
inc
call
mov
add
jne
shr
add
in
cld
adc
jg
neg
out
mov
cmp
hlt
(bad)
sar
pop
into
and
cli
or
daa
(bad)
sar
lahf
outs
btc
unpckhps
jmp
sub
nop
pop
sub
adc
add
push
sub
inc
inc
nop
rcr
cmp
leave
(bad)
sbb
daa
sbb
mov
dec
jmp
shl
push
outs
out
cld
movs
push
popa
sub
(bad)
dec
cli
pop
sub
lods
mov
test
and
pop
add
in
mov
(bad)
sub
and
or
inc
dec
leave
xchg
add
hlt
loop
pop
int3
cld
cmp
sub
dec
pop
add
sbb
aam
ret
jmp
push
jmp
loopne
xchg
(bad)
rcr
mov
mov
into
sbb
mov
and
cmp
test
sbb
dec
mov
jb
dec
in
or
or
xchg
xchg
fldenv
mov
sahf
mov
aam
inc
imul
rcr
pushf
sbb
and
mov
fdiv
jae
stc
repz
and
sub
test
fistp
js
add
arpl
(bad)
test
mov
ja
or
in
mov
add
adc
sub
dec
push
in
and
jo
ffree
adc
fs
dec
std
iret
xchg
nop
mov
loope
das
movs
stos
ins
(bad)
dec
cmc
fwait
test
rcr
test
pop
dec
pop
sti
dec
cmc
cmp
cmp
test
xchg
retf
mov
sub
ficomp
aam
jmp
cwde
cmps
daa
cs
xchg
or
mov
out
pop
mov
push
pop
and
aad
test
cmc
mov
pop
pop
adc
xor
or
stc
inc
sbb
and
leave
int3
fsub
or
fstp
or
call
test
fs
dec
leave
push
fild
mov
stos
sahf
lea
das
add
cmps
jae
jmp
sahf
pop
das
std
dec
(bad)
xchg
mov
mov
push
ss
popf
adc
stc
call
push
xor
push
aad
std
sti
sub
mov
(bad)
adc
dec
into
pop
mov
mov
loopne
cwde
jle
ficomp
popa
jb
xchg
cdq
sub
ja
mov
cmp
dec
jmp
(bad)
pop
cs
dec
adc
dec
jno
cli
sbb
dec
and
mov
jne
in
mov
dec
mov
ja
inc
in
dec
or
les
js
xchg
cwde
sbb
adc
push
mov
mov
dec
jp
aaa
pop
sti
push
jnp
jg
ret
sbb
xor
or
scas
sbb
sub
cdq
pusha
jns
inc
jmp
ins
inc
lods
jge
mov
mov
imul
cld
cmc
mov
not
mov
push
imul
xchg
mov
adc
jb
pushf
cmc
lods
xor
sub
std
ins
dec
ins
push
clc
inc
int3
push
pop
and
sub
or
inc
xor
sbb
cmps
dec
mov
aam
mov
jp
fistp
mov
arpl
sub
sbb
push
mov
scas
adc
mov
lock
jge
stos
adc
ins
cmp
(bad)
mov
jmp
mov
daa
repz
xchg
aaa
cdq
lods
xor
push
shl
retf
aas
jecxz
mov
arpl
lock
outs
bound
push
mov
cmp
xchg
mov
pop
inc
mov
sub
aaa
jae
mov
(bad)
fsubrp
inc
push
pop
push
pop
inc
ja
or
dec
jmp
pop
mov
cmps
in
or
test
mov
add
cld
xchg
loopne
xchg
out
pop
cwde
dec
xchg
adc
inc
sbb
inc
ds
cli
mov
adc
sub
sbb
rcl
mov
aaa
dec
call
dec
and
xchg
pop
movs
fnsave
xor
push
jmp
cmp
xchg
fs
enter
(bad)
push
inc
add
mov
or
mov
ja
jmp
scas
mov
and
(bad)
jnp
sbb
mov
pop
arpl
call
dec
repz
push
fs
and
adc
repnz
sub
push
cmp
or
ja
arpl
mov
add
(bad)
sub
aam
test
imul
mov
dec
enter
pop
add
xchg
add
pop
sub
loope
mov
lods
loop
jmp
mov
in
push
pop
cmc
xor
and
ret
sub
stc
enter
int3
sahf
mov
jo
xchg
jge
ret
movs
adc
push
js
xor
add
hlt
push
cmp
pop
ins
out
pop
push
jge
mov
jmp
mov
sbb
sbb
aaa
loopne
out
cwde
lods
fadd
sbb
aam
clc
icebp
test
aad
arpl
mov
dec
sub
inc
lods
adc
fisttp
mov
push
sbb
inc
xlat
stc
and
(bad)
cmp
cmps
aad
and
push
inc
mov
aad
cmp
sbb
out
xchg
dec
mov
cli
mov
loop
mov
push
scas
lods
scas
mov
jno
inc
popa
aad
or
cmps
add
ret
or
outs
inc
jg
das
repz
call
dec
adc
adc
sahf
add
sbb
jge
mov
call
add
jge
loopne
popf
jae
lods
sub
xchg
out
arpl
sub
sbb
pop
lea
inc
xchg
mov
rcr
aaa
xor
stos
ds
mov
cmp
and
xchg
sub
dec
mov
push
pop
je
jae
jmp
outs
mov
sub
test
sub
xchg
fisub
xor
cli
stos
xor
mov
(bad)
shr
(bad)
and
and
outs
pop
mov
dec
adc
jns
mov
(bad)
out
push
and
jg
repz
es
dec
fisub
jae
loope
ret
mov
push
inc
and
test
jmp
mov
rcl
mov
mov
mov
jo
fld
mov
mov
adc
mov
stos
shr
jne
je
cmp
xlat
aad
mov
mov
cwde
call
mov
mov
scas
push
fisub
xor
mov
mov
nop
ins
pop
inc
jge
mov
lods
ret
daa
ja
sub
lahf
out
scas
and
pop
dec
adc
(bad)
mov
in
dec
sub
xchg
push
push
inc
shr
dec
pop
out
add
sbb
je
sbb
popf
jl
test
pop
add
cmc
fld
sub
lods
pop
ret
cld
adc
int3
std
das
sbb
popa
dec
shr
jecxz
pop
jbe
push
or
add
and
nop
nop
jae
sbb
pop
xchg
ret
fwait
rcl
inc
das
or
jp
ja
push
arpl
mov
cs
shr
clc
mov
addr16
add
dec
neg
lock
sub
mov
inc
cmp
into
mov
push
sbb
gs
jmp
adc
pop
je
sbb
push
sbb
sbb
call
mov
clc
dec
out
pop
sub
adc
je
sbb
sbb
xchg
mov
pusha
(bad)
pop
ror
hlt
mov
cld
lea
mov
mov
add
sub
add
push
aam
pusha
push
ret
mov
pop
inc
leave
dec
lods
cwde
adc
stc
popa
scas
ds
dec
pop
jno
leave
test
dec
fs
cli
mov
push
out
in
mov
sbb
jmp
xor
inc
pusha
adc
test
jns
test
mov
xchg
ret
lods
(bad)
dec
cmps
push
inc
ins
scas
loope
dec
cmp
jns
shr
or
movs
addr16
cmp
xor
hlt
data16
mov
xchg
mov
lods
pop
jge
sub
add
daa
movs
jo
or
jb
std
inc
call
xor
(bad)
imul
cmp
(bad)
push
cli
and
pop
sbb
mov
jp
lahf
cwde
arpl
push
in
mov
arpl
mov
js
inc
fwait
scas
lods
inc
pop
(bad)
sti
jg
add
sahf
sub
test
or
imul
cwde
push
mov
dec
lods
scas
fs
in
sbb
jle
addr16
push
sar
fwait
push
out
stc
movs
dec
jmp
mov
je
inc
loopne
out
leave
cmp
enter
mov
js
sub
jecxz
dec
mov
mov
jle
popf
in
and
push
lock
test
xchg
enter
hlt
inc
xchg
mov
mov
jmp
repnz
shr
xchg
cdq
into
push
sbb
mov
jmp
xchg
and
iret
push
sub
cdq
push
jmp
mov
mov
cmps
xlat
add
cwde
mov
inc
pop
stc
push
cmp
scas
cli
adc
mov
cdq
je
addr16
cmc
mov
aas
out
or
sbb
push
ja
add
jl
sar
test
pop
pop
jo
xor
inc
mov
jne
retf
ret
jnp
rcl
shl
js
jne
mov
in
and
and
push
mov
xchg
(bad)
inc
imul
mov
jo
pop
inc
scas
ins
out
xor
add
push
xor
bound
jns
jl
xor
inc
sbb
leave
push
pop
aas
in
not
lods
int
xor
arpl
pop
and
aaa
cmps
inc
repnz
dec
mov
(bad)
out
sub
xchg
fcomi
cmp
cmps
mul
dec
jns
jmp
jmp
fcomp
sbb
fcom
shr
xchg
imul
add
inc
loope
rcr
sbb
mov
cmp
lahf
in
daa
and
imul
mov
dec
push
jmp
clc
mov
inc
data16
int3
inc
mov
mov
rcr
add
in
dec
cli
daa
add
cmp
sbb
xchg
int3
cmp
mov
add
jecxz
or
mov
and
jmp
fucomip
jb
or
cmp
loopne
scas
sbb
out
repz
fcomp
sub
mov
iret
xor
icebp
movs
jp
pop
xchg
sub
(bad)
xchg
or
iret
pop
call
scas
sti
mov
lock
es
imul
mov
push
iret
iret
test
movs
jl
mov
aas
inc
in
push
dec
repz
add
sub
cmc
xor
retf
adc
mov
hlt
jne
adc
fstp
fnstsw
enter
push
cmp
clc
adc
lea
pop
jne
adc
inc
jmp
mov
pop
cmps
fisubr
dec
shl
pop
cli
pop
outs
xchg
test
rol
pop
inc
mov
sbb
test
retf
mov
popf
nop
lea
dec
xchg
sub
repz
mov
pop
cmp
stc
sar
shr
jae
adc
test
and
iret
add
sbb
mov
jecxz
(bad)
movs
jo
sahf
jb
inc
sti
mov
pushf
adc
rcl
pusha
and
je
popf
inc
pop
ds
adc
int3
out
cmp
aaa
and
fcomp
fnstcw
sub
xchg
add
xchg
call
push
push
mov
push
sti
jmp
out
fmul
nop
pusha
aad
repz
pusha
js
jnp
out
inc
bnd
pop
mov
and
or
push
jmp
das
outs
pushf
ret
inc
or
punpckhbw
jmp
(bad)
loope
es
sub
mov
movs
out
xchg
je
inc
pusha
pop
pushf
jmp
int3
aam
inc
cmp
cmp
ja
adc
test
data16
dec
(bad)
xchg
cdq
dec
dec
jmp
out
push
loopne
retf
test
ins
push
ret
xlat
jmp
fmul
(bad)
ds
jae
sbb
addr16
ins
mov
daa
add
dec
arpl
mov
adc
lahf
mov
ret
call
push
and
inc
les
inc
or
int
bound
mov
test
xchg
sbb
popa
clc
sbb
or
dec
mov
hlt
push
(bad)
or
mov
call
fstp
xchg
jnp
stos
jbe
xor
xchg
lahf
mov
int
call
popa
sub
cmps
inc
ins
sahf
sub
sbb
add
add
sub
pop
add
jg
sbb
lock
push
stos
aaa
push
push
mov
jge
icebp
mov
int3
mov
dec
mov
iret
sbb
retf
adc
aad
scas
mov
repz
xor
rcr
or
ins
je
enter
cld
sbb
dec
xchg
fidivr
jae
xor
gs
xor
data16
push
std
mov
fs
sub
push
or
xor
push
retf
aas
cld
add
cs
fimul
pop
stos
loope
and
and
and
(bad)
aam
xchg
outs
jmp
es
pop
mov
mov
fild
or
shl
and
mov
add
jecxz
jge
xchg
push
add
pop
out
test
retf
jb
mov
mov
mov
push
or
sub
icebp
pop
movs
push
and
sbb
jge
lods
fsub
or
cmp
loop
popa
mov
imul
fmul
jns
js
dec
cmp
jbe
mov
inc
(bad)
dec
cs
out
push
adc
repz
dec
(bad)
mov
sub
mov
xor
imul
imul
cmp
pop
push
cmp
jmp
sti
cli
ins
mov
shl
mov
and
leave
fnstenv
xchg
cmp
shl
jmp
arpl
pusha
ins
sub
jle
add
dec
fidiv
lahf
fcomp
mov
inc
xor
out
push
cli
xchg
(bad)
or
xor
pop
or
stc
lock
into
add
lea
xlat
and
inc
or
sub
aas
fist
cli
jmp
hlt
mov
fmul
and
arpl
lahf
out
fmulp
movs
xchg
xor
mov
movs
adc
cld
fisttp
out
stos
stos
(bad)
not
cmp
mov
sbb
dec
or
rcr
call
cli
sub
sbb
stos
inc
cwde
dec
data16
push
inc
sbb
inc
xor
push
scas
dec
or
fiadd
mov
push
sbb
mov
ds
xchg
mov
movs
ret
imul
add
retf
mov
jl
mov
jmp
rcr
mov
clc
mov
iret
cmc
or
fdivr
pop
jbe
in
push
pop
jno
repnz
and
outs
mov
push
ss
adc
xchg
cld
test
mov
mov
add
push
cmp
jb
adc
cmp
inc
fidivr
pop
mov
inc
dec
push
mov
and
sbb
sub
in
add
lods
pop
jg
cdq
xchg
in
jno
shr
repz
in
pop
adc
fistp
mov
out
push
repz
mov
pop
rol
in
push
inc
ffree
inc
ins
mov
cmp
ja
scas
fild
jmp
or
call
push
outs
jns
xchg
sub
fiadd
or
popf
mov
pusha
mov
pop
mov
jne
dec
sub
jmp
mov
inc
jge
imul
inc
pop
jne
les
push
jae
cli
mov
icebp
inc
pop
sbb
mov
and
mov
rcl
mov
mov
or
je
(bad)
mov
add
repz
add
fwait
movs
or
xor
xchg
imul
mov
mov
stos
pop
mov
loop
dec
dec
(bad)
sti
push
stos
mov
int3
dec
cmp
mov
scas
xlat
loop
add
or
inc
push
hlt
sahf
fcomp
rcl
outs
ret
xor
or
mov
xchg
stos
inc
(bad)
mov
add
dec
inc
je
adc
sub
test
in
popa
mov
dec
jg
mov
xor
std
jmp
inc
xor
adc
push
and
jg
lea
fwait
xchg
sahf
popa
push
push
repz
fcomp
pop
inc
inc
rcl
sub
adc
xchg
mov
xor
adc
and
xor
mov
mov
fmul
mov
push
ds
ins
adc
cmp
test
dec
or
mov
pop
mov
jne
sbb
jno
pop
pop
inc
add
fwait
nop
int
xchg
cld
pop
(bad)
sti
rol
push
popf
js
push
sub
and
pop
sub
jbe
ja
out
push
movs
lea
in
outs
ror
jmp
mov
pop
sub
push
inc
cli
mov
std
push
pop
jp
(bad)
aad
inc
xor
lods
nop
pop
push
cmp
dec
pop
je
call
das
cmp
push
shl
ret
inc
ins
push
inc
sub
mov
dec
fcomp
push
and
loop
movs
jmp
push
dec
cmp
xor
aaa
aad
xchg
data16
and
add
mov
sub
cmps
fcmovne
clc
sub
movs
adc
sub
and
movs
mov
adc
push
jnp
push
out
mov
jl
or
mov
loop
int3
fisubr
pop
call
add
in
sub
sbb
in
mov
jg
shl
jl
sub
push
bound
sbb
ins
fadd
out
inc
sub
lea
inc
xchg
sub
dec
mov
out
mov
scas
aaa
sub
push
push
jns
loope
out
xor
mov
adc
sbb
inc
pop
or
jae
and
mov
pop
or
mov
jae
push
out
ins
sbb
sahf
inc
fwait
xchg
mov
sbb
xor
dec
mov
push
ror
imul
lods
jno
jecxz
ins
pmulhuw
adc
pop
addr16
sbb
add
cmps
cwde
push
pop
dec
pop
jmp
xchg
imul
fcomip
aad
dec
pop
add
sbb
adc
xor
into
scas
push
lahf
in
int3
sbb
jae
sub
mov
(bad)
mov
inc
std
push
stc
or
aas
adc
data16
mov
cmp
test
imul
shl
pop
mov
into
inc
and
pop
pusha
adc
sub
sbb
dec
mov
pop
adc
sbb
adc
stos
sub
clc
daa
pop
jg
test
push
call
push
inc
sbb
js
sahf
jmp
pop
out
fdiv
or
push
lods
stos
mov
cmp
rol
mov
aad
sub
out
dec
xor
jmp
push
repnz
xor
neg
popf
jle
pushf
jnp
dec
sbb
jg
out
sub
clc
int
mov
sbb
xchg
nop
aaa
xchg
shr
mov
enter
push
(bad)
out
jb
push
mov
mul
addr16
pop
add
push
jb
lods
vpacksswb
jo
cmps
inc
cdq
popa
aaa
push
cmc
lds
outs
add
pop
rol
call
into
scas
into
sbb
push
clc
jmp
sti
mov
pop
xchg
sar
dec
adc
daa
adc
repnz
pop
lahf
push
or
or
in
fs
cmc
inc
loopne
fs
dec
rcr
inc
ins
add
mov
xchg
sub
aas
jmp
cli
mov
adc
pop
retf
inc
push
adc
call
jbe
xor
inc
or
or
mov
mov
es
mov
call
cmc
push
mov
lods
jbe
dec
hlt
cmp
sub
xchg
out
das
fld
inc
inc
xchg
dec
stos
and
pop
xor
scas
pop
push
push
push
add
cld
dec
pop
imul
push
popf
mov
imul
js
mov
push
in
sub
sbb
dec
xchg
sub
outs
adc
adc
add
mov
cmp
or
jo
adc
mov
loopne
mov
xchg
and
aad
(bad)
xchg
mov
mov
sbb
xor
add
repz
out
bound
mov
sub
jecxz
push
fisttp
cmc
inc
rcl
inc
mov
jbe
aaa
jns
in
add
dec
imul
pop
loop
into
dec
pop
std
out
or
inc
imul
lock
js
js
inc
xor
jae
adc
mov
inc
shl
add
jmp
or
int
jp
mov
mov
sti
jae
ret
je
adc
push
add
and
rcr
fistp
sbb
jnp
je
mov
fsub
push
xchg
mov
imul
mov
sub
mov
loop
mov
(bad)
fs
cli
call
mov
in
(bad)
jp
outs
push
pop
jne
stos
adc
arpl
cmp
jno
xor
jp
lds
sbb
lods
mov
jl
das
stos
mov
dec
and
mov
retf
xchg
cmps
and
pop
inc
ds
mov
add
pavgb
daa
or
push
inc
gs
fidivr
sbb
cwde
and
sub
fadd
xchg
xchg
mov
mov
popf
addr16
nop
pinsrw
adc
jmp
in
push
in
dec
in
pop
imul
mov
cmp
scas
jmp
push
stc
push
stos
xchg
pop
loope
scas
ins
dec
cdq
or
scas
dec
test
mov
adc
repz
dec
sbb
scas
xor
sbb
std
ret
sbb
xchg
outs
mov
cmovne
add
and
xor
fwait
inc
outs
mov
popf
and
jge
sti
repz
xor
add
xor
push
stc
mov
or
aam
xchg
cmp
push
lahf
hlt
pop
leave
out
and
jmp
jecxz
inc
push
xchg
movs
ficomp
add
or
xchg
(bad)
pop
retf
fs
je
adc
ja
data16
sbb
ins
popf
pop
mov
xchg
push
ret
je
outs
mov
std
sbb
dec
sbb
jae
sbb
push
push
cmp
xchg
into
cwde
add
cmp
repz
xor
push
inc
fnstsw
ds
jns
out
(bad)
cmp
jge
inc
dec
nop
sbb
jle
lods
fsub
jecxz
mov
mov
in
cmp
not
add
cld
test
jae
popf
jl
jnp
and
and
mov
cld
add
data16
mov
mov
jno
add
add
aaa
push
int3
aad
mov
cwde
repz
or
cld
dec
int
push
add
xchg
xor
lods
(bad)
pop
jae
inc
nop
scas
ds
popa
(bad)
fldenv
dec
pop
lock
inc
mov
dec
mov
into
das
jne
push
sti
dec
jb
xlat
xchg
push
add
scas
out
movs
gs
ficomp
and
mov
loope
jns
sub
pop
add
mov
cmp
xlat
fidiv
sbb
out
xchg
jp
mov
mov
cdq
mov
inc
xchg
inc
nop
in
fstp
sbb
mov
dec
stos
nop
out
xchg
xor
call
loope
push
hlt
jb
out
pop
shr
test
mov
sub
(bad)
cdq
cs
ins
mov
(bad)
pop
mov
ss
pop
mov
cmp
repnz
outs
inc
pushf
push
mov
test
add
clc
sbb
push
sbb
cmp
lods
enter
les
in
sti
shl
test
call
mov
sub
inc
or
xor
add
cli
adc
in
jle
xchg
icebp
add
xchg
push
and
aam
outs
jecxz
mov
mov
add
std
inc
xchg
push
jnp
mov
aam
sbb
gs
fwait
mov
std
sub
aas
js
sbb
push
inc
dec
mov
push
xor
mov
nop
cwde
clc
cmp
test
in
les
outs
sbb
xchg
outs
(bad)
cdq
pop
pop
sub
lods
push
icebp
mov
popa
stos
push
xor
pop
arpl
jle
dec
or
sbb
aam
loop
sbb
mov
push
pop
push
cmp
(bad)
cmp
enter
nop
es
daa
sbb
cmp
sub
or
pop
nop
add
sti
aaa
push
mov
mov
sahf
rol
pop
pop
mov
fcomp
pop
xchg
add
adc
aam
nop
cmp
(bad)
mov
and
pop
fdivr
inc
push
(bad)
clc
daa
cmps
sbb
and
not
retf
loope
daa
and
fmul
xchg
dec
sub
push
dec
jne
std
neg
mov
adc
fld
mov
mov
lock
jg
jbe
mov
jo
lock
sti
mov
sbb
push
mov
and
inc
dec
pop
out
jg
sub
jmp
imul
fwait
xchg
scas
mov
das
ret
jb
and
ror
daa
add
xlat
pop
ja
push
sbb
mov
or
sbb
aas
js
sbb
(bad)
mov
fdivr
sub
ror
mov
dec
add
out
scas
packuswb
and
mov
jmp
push
lds
cli
ficom
outs
sbb
div
cmp
jmp
je
test
dec
imul
pop
push
js
mov
int
or
(bad)
fimul
xor
cmc
rol
mov
inc
add
movs
cmc
loop
pop
jl
mov
movs
xor
(bad)
dec
jae
sbb
je
sub
shr
aam
add
pop
xor
sti
scas
repz
inc
sub
jecxz
std
jbe
(bad)
int
cmp
xlat
test
das
mov
outs
xchg
data16
dec
jg
pop
leave
lahf
(bad)
into
dec
jae
jo
sbb
cmp
test
movs
dec
xlat
mov
mov
js
adc
stc
pop
ins
add
(bad)
xor
leave
mov
(bad)
shl
adc
dec
(bad)
retf
daa
mov
or
and
hlt
sub
sbb
sti
inc
rcr
jge
mov
sbb
xchg
jg
fwait
jp
fcomp
aaa
mov
and
mov
or
lahf
pop
retf
frstor
pop
pop
sub
mov
dec
jnp
das
inc
jl
dec
nop
pop
and
and
test
pop
jns
div
and
xchg
popf
arpl
jno
sub
fwait
pop
mov
call
retf
popa
xchg
gs
add
lahf
inc
jno
inc
arpl
test
cmp
jge
pop
test
or
gs
aas
repnz
shl
hlt
xor
xchg
addr16
ss
jo
xor
rcl
push
bound
mov
add
shl
and
std
or
inc
movs
or
mul
pop
fs
sbb
stos
jnp
push
pop
arpl
mov
cmps
or
push
movs
mov
mov
mov
push
(bad)
in
or
jg
int3
jae
cli
dec
cmc
pop
mov
or
aaa
arpl
fnop
loope
xchg
ins
shr
xor
out
jnp
sbb
cs
jmp
je
outs
aaa
inc
push
mov
xchg
mov
shl
(bad)
fisubr
mov
cmp
aaa
out
scas
dec
add
sar
out
xor
(bad)
add
fbstp
jmp
mov
dec
pop
out
jnp
cmp
cs
outs
sub
sub
out
sub
ror
idiv
mov
xor
xchg
add
sbb
retf
dec
mov
and
xor
ins
test
mov
mov
sti
bound
mov
(bad)
ja
mov
aam
add
xor
setge
iret
jmp
adc
repz
jmp
adc
sbb
cmp
sbb
mov
fild
sar
clc
sub
cld
add
test
mov
push
dec
cmp
cmp
adc
cmp
jl
sar
(bad)
fadd
inc
jg
cdq
icebp
mov
dec
cmp
dec
cmp
xchg
mov
and
movs
push
sbb
test
loope
mov
dec
adc
imul
pop
jo
cmps
jne
mov
out
pushf
and
sahf
stos
in
and
xchg
push
jge
outs
and
push
push
push
icebp
pop
push
lods
push
sbb
mov
dec
call
jp
sbb
dec
mov
popf
rcr
inc
xlat
add
leave
cmps
dec
int
(bad)
and
mov
push
dec
inc
sbb
jbe
sub
mov
inc
pop
stos
out
or
mov
out
out
push
ins
sub
sar
mov
and
cmps
cmp
sti
outs
gs
dec
xchg
gs
call
mov
call
dec
gs
dec
adc
mov
push
cs
lods
sbb
ret
pop
stos
dec
dec
fiadd
sub
ret
xchg
lahf
cmp
adc
ins
jae
(bad)
and
loop
jbe
ins
repnz
dec
popf
sub
pop
imul
mov
bound
dec
jne
dec
das
mov
inc
leave
movs
sahf
and
outs
scas
cmp
out
jl
sub
dec
out
loope
or
shl
push
daa
inc
call
fnstenv
sbb
call
inc
pop
(bad)
data16
jno
test
clc
mov
push
call
sahf
pop
add
call
pop
bound
les
ins
add
ficomp
push
je
nop
pop
xor
mov
ror
pop
mov
ins
dec
ror
jecxz
cdq
mov
adc
mov
fnstenv
out
push
mov
mov
push
jecxz
mov
and
pushf
lock
out
sbb
(bad)
fisubr
int3
add
mov
mov
jle
mov
out
dec
aad
or
cmp
pushf
mov
std
sti
cmps
and
lds
push
aad
out
je
adc
fdiv
ret
xchg
sub
jnp
out
in
retf
jp
inc
or
adc
fsub
sub
fs
dec
cmc
cmps
ret
lds
pushf
addr16
dec
cmp
ret
mov
pusha
nop
loope
mov
add
cwde
in
mov
ss
cmp
aaa
jnp
inc
inc
hlt
xchg
loop
inc
dec
jge
xchg
test
cmp
clc
int
jl
push
daa
add
jno
pop
and
or
cmp
push
adc
lods
loop
ins
or
mov
xchg
mov
mov
jl
cld
lea
push
sbb
mov
xor
sub
loop
je
les
aas
sar
jg
jne
inc
inc
mov
mov
outs
inc
add
jnp
out
jae
lea
(bad)
push
pop
ror
loope
leave
sub
sub
dec
jmp
or
(bad)
and
jns
mov
xor
xchg
clc
loop
mov
push
(bad)
jns
fs
sbb
clc
sub
push
or
jo
mov
scas
pop
mov
jp
dec
imul
cmp
fwait
jg
in
dec
popf
fldcw
aad
push
stos
mov
mov
dec
cld
pop
stos
div
jno
into
test
lods
xchg
mov
mov
jb
fild
in
int
and
dec
xchg
adc
ins
js
adc
mov
pop
movs
jns
xchg
jl
int3
jge
addr16
dec
xor
sub
mov
sbb
push
aas
cdq
jns
test
inc
rcl
add
pop
cmp
scas
rol
xor
jbe
into
xor
aas
mov
(bad)
adc
xor
add
fwait
cmps
aad
ficom
ret
mov
or
dec
push
ja
imul
(bad)
mov
jns
mov
push
(bad)
call
mov
neg
fstp
dec
sub
add
mov
inc
loop
mov
xor
cli
pusha
ror
stos
sub
xor
je
fdivr
inc
(bad)
adc
not
out
jbe
das
loopne
fcmovb
je
push
pop
sbb
(bad)
(bad)
into
das
cmp
xchg
data16
xchg
add
xchg
fs
enter
sbb
push
dec
pop
push
leave
jp
cwde
mov
sub
inc
sbb
arpl
pop
fwait
(bad)
call
push
lock
sub
test
sahf
fistp
push
add
mov
xor
mov
in
mov
test
cpuid
sbb
sbb
inc
out
mov
sbb
mov
int
pop
xor
or
and
out
xor
sbb
shl
or
push
jnp
push
sub
mov
std
pop
cld
add
mov
loop
stc
rol
adc
cmc
movs
pusha
mov
sub
loop
lea
retf
xchg
xchg
push
cmp
ja
xchg
sbb
loop
jg
dec
dec
and
ds
pop
jg
icebp
call
and
fstp
(bad)
imul
add
jo
pop
stc
pop
popa
stos
gs
mov
xor
shl
(bad)
mov
aam
push
adc
js
les
dec
add
jl
imul
popa
dec
gs
add
fcmovb
jbe
add
or
mov
addr16
adc
and
dec
adc
add
icebp
mov
xchg
aaa
loope
push
int
into
cmp
dec
mov
loop
mov
and
jne
in
mov
and
(bad)
or
dec
and
adc
lock
shl
add
add
enter
xchg
jns
pusha
lods
cmp
pop
fidiv
or
call
movs
sti
xor
fchs
jge
or
mov
xchg
test
dec
jle
out
nop
pushf
jnp
call
pop
jmp
repnz
ja
js
sti
ins
cs
data16
in
popf
dec
adc
jp
inc
pushf
or
(bad)
sti
and
mov
pop
pop
iret
nop
jmp
dec
jbe
cmp
idiv
cwde
add
push
ds
lea
and
test
xor
pop
add
sub
push
lahf
in
stc
mov
dec
mov
mov
push
sub
jg
push
outs
xchg
cmps
and
ficom
pop
jge
jno
pop
invd
fcomp
test
sbb
xchg
ss
rcr
or
xchg
or
add
out
jnp
mov
push
sbb
xor
xor
dec
inc
push
dec
inc
cmp
gs
bnd
dec
sbb
sub
push
push
jp
ror
clc
(bad)
mov
push
push
push
inc
mov
push
xor
dec
mov
add
lock
sub
xchg
adc
pop
xchg
mov
sti
fldcw
mov
outs
cld
aaa
fld
add
sbb
xor
dec
add
mul
mov
popf
repz
mov
arpl
ret
sub
push
pop
mov
adc
xchg
jp
jb
cwde
daa
ret
mov
ins
inc
and
fst
daa
sbb
pop
adc
fisubr
and
inc
or
adc
adc
aaa
jno
inc
jbe
and
bound
inc
daa
(bad)
hlt
sbb
bound
sahf
outs
add
pop
aaa
or
push
call
or
mov
icebp
mov
dec
in
pusha
rcl
lds
les
cld
dec
xchg
inc
push
dec
es
cmps
jmp
arpl
mov
dec
stos
call
push
dec
jge
jg
or
fisttp
pop
dec
aaa
cld
jns
adc
cwde
jmp
inc
aas
and
jno
mov
fdivrp
call
xor
ret
mov
dec
push
ins
mov
loope
je
xor
std
jo
push
cli
xchg
xor
sbb
test
in
fwait
mov
jp
inc
movs
mov
inc
sub
pop
arpl
jp
iret
ret
and
iret
push
sub
cmp
out
adc
pop
cmps
jmp
jg
(bad)
add
outs
fsub
mov
arpl
xchg
inc
movs
sar
pop
imul
inc
sti
iret
(bad)
retf
mov
shl
xor
aaa
sub
movs
add
fld
lea
mov
dec
fwait
xchg
pop
lods
push
gs
rol
jno
adc
stos
sbb
in
adc
mov
pop
fs
inc
and
xor
test
adc
das
leave
fist
pop
icebp
xor
(bad)
aad
sub
out
push
xchg
movs
mov
xchg
sub
pop
inc
dec
push
pop
ja
ret
mov
xchg
fsub
adc
shl
rol
cmps
(bad)
mov
and
ret
out
push
and
xor
(bad)
dec
ins
jl
jbe
and
mov
adc
mov
mov
popf
(bad)
repnz
imul
shl
jne
mov
pop
cmc
mov
sbb
sar
cmps
pop
(bad)
daa
jo
adc
(bad)
ins
stos
int
test
cmc
in
push
jmp
sahf
mov
inc
push
fisttp
mov
add
test
pop
iret
lea
call
dec
pop
call
mov
dec
or
pusha
xchg
retf
push
iret
mov
jmp
jb
rol
repnz
sbb
dec
aad
pop
call
push
push
xchg
cmps
sub
push
adc
or
lea
retf
es
test
in
add
out
fsubr
inc
ds
and
xor
jge
mov
dec
test
jns
push
dec
mov
mov
push
test
arpl
enter
clc
push
mov
fnstsw
dec
sub
cmp
mov
push
(bad)
in
adc
pop
pop
sbb
xchg
data16
and
add
mov
popf
pop
sahf
cmps
cmps
rcr
sub
sbb
push
ss
xlat
arpl
in
xchg
nop
ficom
xor
mov
sbb
mov
cs
mov
das
xchg
xor
mov
adc
cmp
xor
out
jb
sub
imul
gs
scas
repnz
(bad)
xor
jmp
retf
pop
pop
add
xor
or
jo
loop
adc
in
inc
push
je
add
into
jl
pop
out
sbb
dec
mov
call
sbb
or
popa
jmp
pop
sub
jp
and
(bad)
jns
fwait
test
or
icebp
push
push
or
cmp
in
adc
icebp
adc
popf
cmp
dec
int3
fidiv
ret
pop
retf
push
mov
fcom
jo
in
inc
pusha
or
shr
in
or
mov
push
outs
adc
mov
xchg
outs
loope
test
lds
je
call
jns
lods
mov
dec
mov
int3
jb
les
xor
das
mov
sbb
pandn
rol
cmp
sub
sti
sbb
mov
xchg
aam
fadd
jecxz
sub
mov
and
jle
mov
pop
je
ins
popa
dec
xor
scas
mov
push
mov
aad
mov
add
cmp
mov
out
fst
push
xor
je
clc
pop
repnz
dec
lods
mov
mov
xchg
leave
std
in
push
xor
xor
(bad)
mov
test
sub
dec
cdq
fiadd
and
jmp
(bad)
cmp
pushf
rol
js
call
pop
cmps
push
gs
push
sub
dec
imul
rol
stos
push
scas
mov
fcomi
inc
into
icebp
mov
xchg
add
jne
dec
stos
mov
xchg
xchg
mov
rcr
xor
xor
imul
dec
pop
in
mov
push
cwde
inc
clc
adc
arpl
cmps
add
fcmovnu
movs
pop
push
aas
out
or
out
loopne
rsm
scas
mov
sbb
aaa
std
xchg
ins
sbb
add
(bad)
mov
xchg
xor
(bad)
aam
cmp
test
(bad)
test
test
iret
add
sub
mov
scas
retf
loopne
mov
inc
(bad)
cmc
stos
scas
jno
rol
cmc
mov
sbb
or
aaa
scas
and
repz
imul
js
mov
jb
(bad)
mov
popa
loopne
cdq
cmp
call
add
fidiv
mov
fisttp
loop
dec
mov
ins
fild
sub
xchg
retf
enter
push
aas
push
xchg
xchg
cdq
jp
retf
call
int3
mov
adc
push
fst
(bad)
or
adc
sub
int3
xor
dec
aas
jae
popa
sub
adc
inc
push
div
stos
or
aas
mov
pop
add
adc
adc
adc
pop
out
push
sbb
mov
shl
adc
stos
add
xchg
mov
add
mul
cmc
cmp
sbb
popf
and
and
icebp
scas
xlat
push
int3
inc
(bad)
gs
jp
jecxz
ss
pop
add
add
xchg
add
cmp
push
arpl
mov
(bad)
jl
push
sti
aad
pop
lahf
adc
out
ret
in
js
clc
adc
mov
das
and
lock
pop
mov
mov
movs
jmp
or
pop
mov
or
mov
movs
cli
cmp
push
lds
fist
aaa
shl
adc
imul
mov
and
xlat
pushf
xchg
ins
inc
popa
(bad)
xchg
arpl
dec
xlat
add
fstp
push
mov
imul
ss
mov
pop
add
nop
sar
call
cmp
pop
jmp
or
cdq
imul
cmp
xchg
jp
(bad)
pop
jne
fmul
not
pop
sub
or
fptan
ror
(bad)
fistp
out
ret
(bad)
sbb
jge
xchg
les
inc
(bad)
or
dec
sahf
mov
push
sub
mov
adc
ins
push
push
cs
or
popf
xchg
xchg
add
and
and
pop
hlt
cmps
sub
or
sbb
(bad)
outs
inc
and
push
arpl
add
call
add
sti
lds
mov
js
dec
les
movs
mov
loopne
push
addr16
fild
lock
mov
and
fld
mov
lods
sub
es
lock
and
js
fwait
pusha
cmp
xchg
fstp
aaa
xchg
iret
out
jmp
push
mov
and
test
(bad)
arpl
hlt
jno
aaa
sub
inc
mov
dec
push
xlat
push
jle
or
nop
xor
stc
jbe
sbb
pop
jg
mov
or
jmp
push
add
add
xchg
xlat
leave
dec
mov
fimul
das
adc
inc
dec
push
(bad)
faddp
js
add
or
push
(bad)
sub
xchg
(bad)
in
sub
sar
jnp
cmovne
jmp
and
jnp
out
mov
push
mov
loopne
fwait
loop
out
stos
jno
addr16
pushf
fs
pusha
jg
xlat
(bad)
adc
stc
pop
(bad)
fidiv
popa
ss
dec
stos
pop
adc
hlt
add
in
ds
cmp
in
mov
ja
xlat
mov
ret
pop
fmul
mov
sahf
das
xchg
lds
cs
call
cmp
jmp
add
pop
fadd
lds
or
neg
jp
mov
arpl
or
repz
jne
outs
add
add
xor
or
pop
cli
and
cmp
ins
push
xchg
cmp
or
addr16
inc
rol
push
mov
fs
jge
data16
adc
mov
mov
scas
cmp
outs
das
in
fs
imul
movs
cld
mov
mov
sub
push
movs
sbb
inc
ins
ss
mov
dec
ret
xor
cwde
rcr
aad
mov
xor
sub
enter
sbb
dec
repnz
cmp
jno
adc
push
mov
sub
sbb
mov
mov
clc
(bad)
jecxz
cmp
and
rol
jne
xchg
mov
enter
sub
mov
push
jmp
shl
out
and
sbb
das
mov
jmp
cmp
and
dec
pop
mov
ins
jmp
and
push
mov
pusha
dec
jo
repnz
(bad)
pop
inc
or
mov
jbe
js
dec
cli
addr16
xchg
shl
push
leave
cdq
fld
idiv
mov
lea
add
aaa
xor
or
mov
or
jp
out
mov
cmp
sub
mov
int3
xchg
inc
cmp
test
inc
mov
jne
ins
dec
dec
adc
bound
mov
cmps
jmp
movs
jno
shl
loope
in
add
leave
ins
std
dec
imul
xchg
mov
pop
lods
cs
(bad)
jmp
cmp
mov
adc
push
cmp
in
xor
stc
daa
push
mov
fsubr
jbe
pop
xor
js
imul
div
imul
ss
sbb
fldz
jp
jge
dec
cmp
xchg
add
rcl
out
ja
cmp
imul
or
mov
hlt
xlat
inc
js
cmp
pop
cmp
and
or
inc
sub
xchg
cmps
ds
pusha
mov
retf
add
test
dec
sbb
mov
add
test
jne
cmp
mov
leave
cmp
rol
fwait
fwait
call
xchg
in
mov
jmp
sbb
push
mov
stos
lahf
jp
pop
test
cmp
cmp
cmp
hlt
mov
(bad)
mov
pop
pop
stos
jnp
cmp
in
test
add
xor
daa
movs
mov
push
pop
and
push
adc
sub
xor
gs
mov
ja
mov
pop
mov
mov
fnstenv
data16
add
(bad)
in
pop
inc
or
pusha
iret
jecxz
aam
sbb
scas
cmps
std
mov
xchg
daa
imul
retf
pusha
push
xor
repz
sar
mov
pusha
int3
fstp
adc
pop
rcr
mov
jmp
fist
test
inc
cmp
sbb
mov
or
fs
adc
neg
jmp
xchg
sbb
push
fcmovnbe
shl
adc
lods
mov
ins
js
sub
std
jb
aam
ret
push
push
mov
(bad)
cs
push
cmp
imul
dec
cmps
test
push
xchg
jge
fdiv
adc
es
pop
mov
fwait
das
sub
es
cmps
fbld
aas
test
repz
sbb
out
iret
xor
dec
stc
rol
out
cmp
pop
jmp
in
(bad)
rcr
das
add
imul
jg
mov
pop
js
mov
cmp
lahf
pop
xor
enter
and
fwait
and
jmp
lock
pushf
or
cli
cmp
fsub
pushf
std
xor
or
imul
sti
dec
cmc
rcr
jno
xchg
sub
cmp
fucomp
iret
or
in
push
popf
retf
pop
push
sub
cld
push
mov
inc
adc
fldln2
in
js
pop
(bad)
(bad)
in
cmc
push
adc
inc
ret
inc
ins
xchg
into
out
jl
fisttp
sbb
push
js
adc
push
dec
ins
test
cwde
xchg
mov
in
dec
ret
jmp
cdq
jns
int
rcl
in
cdq
xor
sbb
push
mov
ins
(bad)
ret
cmp
iret
inc
aaa
sub
jae
dec
add
mov
stos
xor
pop
mov
push
aad
outs
jp
cmp
bound
outs
shl
mov
in
aas
and
inc
je
enter
sub
imul
and
inc
out
lds
mov
(bad)
or
pop
jle
in
jg
mov
or
dec
xor
test
outs
cmp
sub
mov
add
fwait
lea
cmp
mov
push
or
in
or
fld
dec
loop
cs
cli
outs
fucomip
cmp
mov
xor
jno
adc
push
int3
dec
stc
pop
(bad)
jg
mov
adc
inc
mov
cs
inc
pop
mov
sbb
retf
mov
in
push
mov
loop
xor
loop
push
ss
aad
pop
and
mov
push
inc
push
mov
mov
or
fdivr
outs
add
mov
stos
(bad)
sub
jp
(bad)
dec
popa
mov
jecxz
or
push
push
cwde
je
mov
push
retf
sbb
mov
mov
inc
mov
xchg
jmp
ret
xchg
sub
cmp
nop
fisttp
sbb
lahf
pop
imul
and
xchg
adc
std
mov
aas
mov
call
or
aas
arpl
cmp
mov
jl
(bad)
daa
push
mov
stos
mov
jmp
fwait
stc
enter
and
xor
cmp
inc
cli
aas
mov
shl
adc
popf
(bad)
ja
mov
pushf
mov
ds
sahf
ror
into
xor
leave
sub
fsubr
test
gs
pop
dec
add
sub
fs
mov
cmc
jns
ficomp
(bad)
sbb
xchg
or
les
scas
leave
pusha
aad
sbb
push
add
push
stos
xchg
dec
movs
pop
es
lods
mov
add
mov
xor
add
jge
cmps
mov
mov
sbb
mov
push
(bad)
loope
aad
lahf
mov
jns
in
loopne
mov
mov
pop
jnp
in
adc
mov
sti
outs
lds
push
rol
xor
mov
popf
pop
xchg
jns
dec
in
push
popf
push
xor
xchg
pop
mov
and
push
popa
cs
out
(bad)
outs
cmp
or
cmp
xchg
or
ss
xor
outs
cmps
movs
mov
call
and
mov
mov
test
stc
mov
inc
jmp
daa
dec
mov
sbb
ss
loop
loop
cmp
xor
(bad)
out
adc
fstp
jnp
pusha
or
aaa
mov
lds
sub
jnp
retf
sbb
mov
out
in
aad
icebp
push
test
ror
push
scas
push
std
pop
movs
fmul
pop
jecxz
push
jmp
test
jb
loope
popa
loope
dec
cwde
(bad)
and
jmp
jmp
sbb
push
sbb
not
mov
mov
nop
xchg
jo
adc
fsub
mov
(bad)
cwde
(bad)
ror
fwait
ja
mov
push
test
retf
xchg
outs
adc
adc
xchg
mov
xchg
push
mov
lods
or
xchg
fdivr
inc
mov
push
loope
push
loopne
add
push
jmp
sub
nop
hlt
or
lods
arpl
aam
xchg
jl
sete
adc
rcr
aaa
gs
mov
dec
mov
push
mov
mov
add
sub
fsub
aam
hlt
icebp
xchg
jns
push
pop
mov
mov
test
(bad)
lock
data16
dec
jbe
pop
ret
mov
outs
mov
xchg
mov
fiadd
test
xor
ins
out
shl
push
stc
push
push
xor
fsubp
xchg
sti
test
jle
cwde
pop
pop
psubw
mov
push
and
sahf
and
cmc
cmp
adc
inc
test
jno
aas
cmc
pop
pop
inc
js
jno
je
push
push
cld
xor
cmc
test
pop
movs
adc
xchg
sbb
adc
ss
xchg
sub
inc
and
mov
jmp
test
dec
lea
inc
jp
repz
jo
xor
movs
stos
gs
jg
pop
jbe
lods
push
retf
retf
dec
mov
jge
xchg
jno
gs
movs
sub
loop
bound
int
add
fld
mov
sub
mov
mov
and
pop
jge
in
cmp
dec
mov
mov
jnp
mov
mov
xor
jbe
shl
popa
call
(bad)
fs
push
lahf
push
xchg
lods
cmps
push
sti
or
adc
scas
ds
mov
aad
mov
test
fstp
jns
int
inc
xor
test
xor
out
shr
or
out
aas
mov
sahf
inc
xor
jmp
xchg
test
sub
iret
lahf
add
xlat
loop
repnz
mov
hlt
fisub
rcl
repnz
mov
mov
and
int3
(bad)
jb
bnd
jecxz
ret
jb
xchg
cwde
ret
sub
mov
pusha
pushf
(bad)
test
cmp
sbb
imul
adc
cld
and
xor
ja
jno
call
int
stos
in
aam
jno
mov
pop
and
or
jp
fstp
pop
pop
(bad)
out
pop
pop
mov
and
mov
dec
(bad)
call
pop
addr16
inc
push
aam
out
and
aas
pop
in
les
sti
addr16
mov
jae
clc
jp
sub
aaa
push
ins
lds
ficom
mov
ret
loopne
xchg
push
xchg
lods
test
ss
jl
imul
fisttp
(bad)
adc
ins
aas
std
lods
inc
es
imul
leave
sbb
adc
outs
mov
and
xchg
sub
ret
mov
scas
rcl
sub
dec
popf
aas
cmps
pop
pusha
sahf
lea
pop
int
and
push
xchg
jmp
outs
cdq
ins
cld
scas
mov
inc
add
pop
pusha
mov
cmps
mov
test
scas
inc
push
pop
jg
push
fdiv
cmp
bound
enter
loop
mov
(bad)
mov
push
add
mov
jle
push
adc
mov
mov
mov
xchg
xlat
sahf
push
push
ins
mov
fcomp
shl
mov
mov
inc
test
xchg
jnp
(bad)
sub
sbb
inc
lods
rcl
dec
push
imul
addr16
xlat
or
jg
add
pop
pushf
call
fbld
pop
inc
or
pop
stc
out
xchg
or
retf
pop
test
dec
stos
push
dec
or
cmc
mov
cmps
xchg
push
jle
inc
scas
xchg
adc
inc
mov
out
arpl
loope
bound
idiv
in
mov
mov
or
push
inc
adc
test
lods
sbb
dec
adc
jno
mov
xchg
xor
out
loope
xchg
xchg
and
test
pop
imul
scas
ret
pop
daa
aad
mov
ror
pop
test
test
mov
sub
data16
in
stos
int3
stos
sar
mov
sub
sub
sbb
xor
mov
out
pop
lds
cli
jmp
sbb
in
iret
mov
fisttp
fnstcw
mov
cmp
fsub
push
std
jo
test
cld
fimul
fsub
out
jge
or
rol
jmp
fisubr
rol
test
cmp
adc
dec
leave
addr16
out
ins
fwait
xor
cld
xor
addr16
dec
sub
call
sti
xor
in
push
dec
add
add
add
imul
fcmovnu
icebp
mov
es
inc
xchg
xor
add
cmp
or
aaa
hlt
fild
cmp
mov
nop
aad
dec
jno
repnz
xor
fs
test
mov
xor
loop
pop
pop
(bad)
jmp
xchg
jl
lock
pusha
das
mov
inc
aad
adc
pushf
push
cmps
retf
out
out
test
shl
xchg
add
or
mov
mov
aas
cmp
sub
mov
call
imul
cmps
jns
push
ds
or
push
sbb
fwait
cli
movs
xchg
or
jp
add
(bad)
mov
push
(bad)
push
push
shr
fdivr
out
mov
jno
dec
test
inc
fadd
into
imul
stos
cdq
cwde
inc
xor
call
mov
repz
aad
fsubr
fcmove
ror
mov
out
movs
cmps
retf
pop
mov
add
xchg
or
ret
xchg
and
sti
sub
mov
(bad)
push
stos
pusha
(bad)
pushf
or
(bad)
push
xchg
add
mov
jmp
sbb
mov
(bad)
sub
sbb
and
inc
xor
fidiv
in
sti
xchg
jo
adc
sahf
in
int3
jecxz
mov
or
cld
aas
test
inc
mov
pop
add
pop
mov
test
push
les
test
fsubr
sahf
stos
(bad)
in
xchg
jg
mov
cmp
sub
std
ja
btr
rcl
pop
inc
imul
mov
aas
jb
out
mov
ror
or
mov
mov
iret
add
sbb
aam
neg
fidivr
or
dec
aam
dec
push
push
jbe
and
gs
retf
add
ret
mov
add
fsubr
dec
or
loopne
push
push
push
inc
xor
push
imul
mov
cmp
sub
hlt
test
dec
adc
push
fcom
mov
(bad)
adc
outs
ss
popa
jb
mov
cmp
pop
movs
cmp
mov
jbe
loope
inc
movs
mov
shl
cld
shr
outs
and
out
push
push
fld
lock
and
sbb
mov
loopne
pop
test
lock
push
in
add
mov
pop
mov
outs
dec
retf
fldcw
jecxz
push
test
mov
xchg
sub
mov
pushf
mov
mov
sub
jp
jge
push
ret
clc
push
inc
int
xchg
call
ss
and
pop
ret
sti
or
iret
mov
mov
out
xor
pop
pop
inc
scas
pusha
jge
call
daa
inc
sub
stc
cmp
aas
sbb
jnp
out
scas
sar
adc
cwde
xor
ja
mov
mov
push
fld
das
int
jne
popf
pop
stos
push
mov
outs
rol
adc
xor
mov
mov
(bad)
aas
(bad)
mov
push
xchg
mov
imul
cmc
xor
lock
mov
sub
xor
inc
mov
xor
xchg
sbb
mov
inc
ins
adc
sbb
and
xor
dec
mov
adc
pop
sub
lea
frstor
(bad)
dec
lea
imul
pop
sbb
dec
stc
push
push
or
push
pop
sti
xchg
ret
jge
add
pop
mov
popa
jmp
jge
mov
and
pop
mov
dec
je
retf
mov
add
mov
call
jp
xchg
adc
ins
push
ins
xchg
inc
retf
mov
gs
in
(bad)
out
lea
xchg
(bad)
movs
mov
or
xor
pop
and
mov
mov
ret
popa
add
or
or
xchg
es
popa
mov
rcl
stos
sub
fdivp
push
dec
outs
mov
mov
or
push
es
test
inc
aad
(bad)
cmp
call
sbb
lea
repz
aaa
(bad)
xor
test
xchg
pushf
add
cwde
mov
imul
retf
adc
mov
addr16
inc
jecxz
or
jl
addr16
inc
arpl
popf
les
inc
test
push
cmp
mov
dec
leave
(bad)
sar
movs
addr16
jecxz
rcl
lods
shl
jno
ds
add
fbld
dec
sub
adc
adc
in
adc
fidiv
dec
add
js
arpl
movd
or
jmp
sub
add
movs
mov
lods
xchg
mov
ins
mov
in
dec
mov
push
movs
sbb
pop
or
pop
fld
lahf
cmp
sub
fs
test
xchg
dec
imul
fdivr
pop
push
(bad)
cmps
jno
sti
movs
test
mov
push
out
xchg
or
mov
pop
ror
adc
cmp
xor
clc
stc
(bad)
jmp
sub
mov
cmps
popf
xor
mov
mov
leave
div
rcl
test
push
jo
jle
or
cs
pop
pop
ja
out
ins
cli
inc
jecxz
ds
shl
aam
add
mov
daa
call
inc
lock
pushf
adc
test
nop
test
pop
loope
jl
mov
jmp
and
outs
xor
cmc
mov
inc
loope
outs
stos
dec
and
sbb
adc
retf
fidiv
lods
inc
daa
jl
jg
aas
dec
sub
dec
inc
call
in
pop
mov
push
sbb
push
cmp
mov
mov
ja
call
jo
xchg
pushf
sahf
xchg
repz
mov
and
xchg
mov
ja
loopne
xchg
ins
stc
pop
movs
xchg
mov
scas
std
xor
aad
add
into
mov
imul
jne
(bad)
imul
imul
mov
ja
and
ret
sub
(bad)
jb
inc
or
out
xor
out
or
cmps
dec
aam
scas
dec
js
mov
mov
adc
jecxz
sbb
or
jp
cmp
jg
(bad)
and
or
pop
mov
xchg
retf
retf
xchg
outs
xor
xor
idiv
cmp
push
stos
or
cli
push
sar
test
pop
inc
ret
ja
cwde
jecxz
mov
xchg
mov
jo
cs
jmp
(bad)
or
push
jb
call
pop
pop
jmp
dec
xor
mov
out
adc
mov
jle
mov
add
pop
add
mov
xlat
pusha
sahf
loop
mov
mov
cmp
not
add
stc
push
mov
jmp
cmp
(bad)
inc
fdiv
in
in
or
xchg
(bad)
out
dec
lock
xor
dec
pop
push
inc
xchg
and
mov
jne
mov
or
xor
icebp
aad
xchg
fs
cmp
push
push
sbb
nop
adc
cmp
js
pop
(bad)
mov
push
or
out
int3
(bad)
dec
xor
les
inc
adc
or
adc
push
dec
loop
(bad)
cmp
or
inc
mov
mov
pop
cmp
push
out
ret
or
icebp
adc
test
inc
jmp
mov
mov
inc
ins
adc
retf
test
fistp
stos
push
imul
inc
(bad)
mov
ret
mov
push
cmps
mov
sub
lods
into
sub
mov
retf
inc
loop
scas
cwde
xchg
and
pushf
fdivp
lock
ds
and
pop
push
jae
les
push
pop
repz
cs
pop
stc
(bad)
mov
mov
add
daa
mov
xor
mov
jl
sub
push
jno
mov
(bad)
dec
sbb
fsub
repz
lea
cdq
adc
add
repnz
push
(bad)
imul
sahf
sbb
imul
jle
clc
sbb
pop
rol
sar
jnp
mov
adc
aad
mov
mov
push
or
add
mov
mov
mov
and
inc
and
test
adc
std
imul
jle
jo
adc
jp
inc
add
jno
in
sbb
and
fs
mov
jp
pop
xchg
in
popf
mov
aaa
mov
sbb
push
mov
mov
test
cmp
stc
mov
fdivr
ins
mov
clc
mov
push
jg
and
iret
lods
popf
mov
out
in
dec
cmps
popa
cmc
mov
xor
iret
or
lds
add
add
idiv
dec
int
cmp
repnz
test
cmp
cmps
rcl
iret
fisub
jo
aas
js
mov
test
or
ins
imul
rol
dec
dec
ins
setae
stos
leave
outs
imul
mov
or
leave
mov
inc
inc
jmp
push
jmp
xlat
and
push
test
mov
cmp
cmp
imul
jmp
xor
add
movs
enter
dec
jg
jne
leave
popa
outs
ss
mov
sub
aas
gs
pop
add
and
sbb
je
dec
pop
aad
jns
test
mov
fisttp
inc
dec
dec
call
mov
xchg
fs
jmp
sti
aam
cmp
test
and
xchg
cwde
out
inc
xor
ror
js
sar
in
pop
stos
inc
dec
push
push
pusha
mov
adc
mov
shl
out
xchg
das
inc
xor
rcl
adc
(bad)
loope
jae
inc
in
mov
mov
loopne
jns
and
in
mov
iret
rcr
pop
inc
xchg
clc
xchg
hlt
call
xlat
mov
dec
int
lods
pop
pop
dec
xor
and
scas
xor
dec
pop
ss
cmp
sbb
rcr
cmp
pop
ss
scas
pop
(bad)
xchg
push
sub
mov
xor
xchg
sub
push
fisub
ds
and
sbb
bound
add
push
dec
fcmovnb
out
xlat
sti
neg
jbe
int
ins
outs
addr16
cdq
es
(bad)
pop
std
mov
or
xor
cmp
mov
(bad)
adc
adc
ds
fistp
int3
mov
push
xchg
cli
sub
or
pop
js
cli
cmp
jne
inc
jge
pop
sbb
stos
xor
test
add
cmp
imul
cmps
out
mov
jo
inc
jnp
and
sub
jp
aas
cli
(bad)
ins
or
mov
test
cwde
sub
push
(bad)
cld
rol
ret
pop
sub
pop
xchg
imul
pop
mov
out
das
test
arpl
add
ins
mov
outs
(bad)
fcomp
fcomp
lock
and
lods
test
icebp
add
mov
aas
xchg
xchg
rol
cli
scas
lds
adc
pop
ds
pushf
sub
retf
push
mov
popa
mov
fucom
movs
fist
aam
or
jno
jb
gs
cmps
mov
cmp
iret
inc
push
add
loope
mov
inc
jb
cmp
or
mov
cmp
call
dec
sbb
fild
and
push
loop
loope
or
enter
jne
add
pushf
mov
rcr
lods
jl
setbe
fcomp
xor
add
add
ficom
pop
out
sbb
inc
inc
sbb
out
mov
mov
fiadd
push
out
cmp
xor
ret
pop
fcmovne
xor
xor
jl
adc
scas
mov
adc
jmp
pop
add
rcl
mov
data16
xor
cmp
pop
in
push
add
xchg
xlat
fistp
xor
jno
shl
ror
push
jbe
into
sub
add
out
out
mov
jne
leave
mov
xor
or
mov
out
sub
sub
outs
prefetchw
bswap
aaa
test
pushf
es
xchg
sbb
cmp
mov
repnz
dec
xchg
int
mov
jle
ds
or
mov
dec
rcl
pop
xchg
jbe
cs
inc
or
pop
fld
arpl
xchg
cli
dec
and
xchg
popf
or
cmp
cmc
ins
jp
pop
adc
cmp
shr
push
push
dec
div
jbe
rcl
pop
imul
pop
shl
mov
xchg
(bad)
mov
adc
stos
in
adc
stos
mov
out
cwde
hlt
std
cli
mov
movs
pop
cld
xchg
jp
and
sub
shr
aas
in
stos
push
and
lahf
out
pop
mov
add
mov
sub
inc
fisubr
cmp
add
inc
cmp
mov
lock
xor
aam
push
mov
dec
outs
iret
lahf
and
jmp
xor
push
(bad)
idiv
stos
cwde
movs
icebp
scas
adc
test
jo
mov
add
aam
repnz
aad
stc
das
dec
jbe
mov
clc
cmps
sub
loope
repz
sub
pop
fs
dec
or
and
pop
dec
mov
mov
pop
mov
add
pop
adc
adc
xchg
jp
mov
popf
aam
dec
lds
push
(bad)
stos
pop
sahf
(bad)
pusha
cld
das
clc
bound
mov
retf
and
int3
es
lods
cdq
push
lds
dec
mov
or
pop
pop
jle
or
data16
out
push
int
mov
sti
pop
test
and
add
add
dec
jmp
(bad)
mov
out
out
imul
aam
out
xchg
out
rcr
or
and
aad
push
es
push
add
inc
sbb
push
push
iret
pop
adc
xor
add
test
jge
stc
dec
push
jb
pop
pop
loopne
ret
mov
shl
xor
xor
stos
inc
push
lods
push
ret
jnp
hlt
or
mov
test
and
push
dec
inc
les
dec
inc
int
mov
in
(bad)
aas
and
lds
ror
cmps
adc
(bad)
push
stos
xor
xchg
aas
pop
push
(bad)
lock
(bad)
push
fs
sar
daa
leave
inc
jecxz
push
dec
or
pusha
add
mov
add
ins
jne
ins
or
fwait
or
hlt
fnstsw
xchg
xor
jge
pop
aad
aam
add
jg
sub
xor
pushf
sub
cdq
stos
enter
fstp
mov
mul
stc
dec
push
push
sub
aas
repz
ror
jno
arpl
iret
dec
iret
mov
scas
xor
ret
cmp
jecxz
cmps
cwd
jg
imul
jbe
out
jns
jnp
rol
cmp
into
fs
mov
jo
addr16
mov
mov
loop
add
out
cmp
push
gs
push
jg
inc
fucomp
ret
mov
add
cmp
mov
punpckldq
loopne
add
bound
or
retf
daa
enter
hlt
inc
or
xchg
jae
push
mov
adc
mov
pop
mov
push
push
mov
retf
jge
or
xor
int3
dec
or
retf
stc
jge
mov
repnz
xchg
jmp
adc
jg
call
add
(bad)
inc
loope
je
dec
dec
mov
and
outs
pop
aaa
icebp
and
xchg
daa
mov
push
push
frstor
hlt
push
cmp
pushf
pop
and
out
xor
inc
or
stc
sbb
xor
sbb
mov
push
imul
mov
ds
mov
ds
jg
cmc
add
pop
jo
or
pop
push
push
leave
xor
mov
imul
das
out
push
cmp
xchg
in
out
mov
mov
mov
loop
xor
xchg
adc
cmp
jmp
or
dec
imul
dec
jbe
or
xchg
xor
cwde
pop
push
mov
or
int
cwde
dec
fs
or
or
(bad)
(bad)
nop
cmps
aam
pushf
rcr
icebp
adc
fimul
push
out
dec
fistp
icebp
xchg
test
dec
bound
stos
pushf
nop
sbb
and
pushf
fs
ins
dec
sbb
add
fsubr
call
and
in
sbb
mov
xchg
xchg
leave
cmp
dec
setno
out
ja
inc
and
and
inc
(bad)
push
mov
jl
ror
fstp
pop
xor
pop
in
pusha
sub
mov
stos
sbb
wrmsr
sbb
adc
push
inc
cs
pop
inc
adc
jbe
pop
mov
mov
out
dec
outs
sub
in
pop
sub
in
or
or
hlt
in
mov
mov
out
stos
or
cmp
mov
dec
pop
in
lds
sub
jmp
arpl
or
ins
mul
push
fsubr
push
dec
(bad)
leave
sbb
sub
stos
int3
and
test
xor
lods
inc
cdq
or
sbb
adc
dec
enter
push
xchg
gs
int
inc
ins
xchg
or
xor
ins
or
ins
sti
mov
jbe
mov
bound
ds
out
das
cmp
or
outs
sbb
push
cmp
mov
ds
loop
and
sbb
mov
repnz
aaa
lods
jb
ss
cmp
adc
add
jl
and
pop
scas
jle
sar
jnp
lahf
clc
call
inc
ins
push
les
rcr
js
lods
push
and
das
mov
aad
push
ss
enter
out
mov
mov
or
push
imul
jg
into
cld
ss
and
in
or
ficomp
and
and
xchg
pop
cld
sbb
stc
retf
mov
jbe
mov
(bad)
int3
data16
or
(bad)
std
stos
jnp
and
adc
adc
jbe
out
and
loop
ds
repz
rol
sub
test
push
mov
pop
sbb
int
ror
adc
pop
fnstenv
test
addr16
jecxz
cli
xor
xlat
hlt
or
ret
inc
cmp
xor
adc
fwait
mov
dec
aam
jne
out
shl
and
jns
test
xchg
(bad)
ret
sbb
mov
or
adc
jmp
ficom
mov
mov
inc
outs
sbb
mov
push
push
test
add
scas
push
pop
scas
ins
jne
not
mov
gs
mov
pop
stos
cwde
loopne
je
sub
add
dec
mov
mov
xchg
imul
inc
inc
mov
or
std
push
cmp
movs
lock
mov
in
adc
push
mov
mov
aad
add
mov
jo
push
shl
das
cmps
retf
das
sbb
je
jl
push
add
push
cld
jecxz
iret
mov
(bad)
or
sbb
push
loopne
jb
in
mov
rcr
mov
mov
cmps
mov
jecxz
dec
adc
jmp
(bad)
ins
mov
call
ds
push
sbb
fldcw
cmp
cmp
mov
out
mov
fisub
nop
out
and
jl
push
and
push
push
or
dec
inc
stc
lods
test
nop
shl
mov
dec
enter
mov
or
es
ror
imul
pushf
mov
lea
das
and
mov
xlat
jnp
popa
shr
test
mov
and
mov
or
inc
imul
mov
push
lods
(bad)
cmp
into
add
sub
xlat
push
bound
sbb
ret
mov
jle
fwait
dec
xchg
rcl
xor
xchg
out
mov
mov
or
mov
scas
jg
pushw
xchg
pop
(bad)
enter
dec
push
daa
add
xchg
dec
test
daa
jl
stos
dec
ds
jl
(bad)
repz
addr16
adc
int3
ds
pushf
fmul
movs
or
mov
int3
fbstp
sub
stos
ins
ins
mov
xor
aam
fnstenv
rol
call
mov
xor
jne
outs
(bad)
movs
ret
pop
aas
push
inc
pop
ficom
xor
lods
mul
sub
pop
daa
sub
jns
xchg
jl
xchg
sbb
xor
call
test
outs
bound
int
mov
xchg
fnstenv
mov
mov
test
cmp
dec
nop
pop
sub
xor
or
out
sahf
mov
cli
push
jns
loope
not
pop
or
pop
outs
cli
inc
xchg
pop
sub
cwde
imul
mov
jnp
xchg
dec
xlat
cmp
mov
shl
cs
arpl
mov
dec
or
mov
fiadd
fistp
jne
cwde
imul
jecxz
retf
mov
into
adc
mov
syscall
dec
add
xor
sub
shl
out
xchg
xchg
(bad)
cwde
dec
lods
inc
jno
(bad)
hlt
in
test
cmps
xor
jecxz
xor
mov
pop
loop
adc
inc
jge
xor
xchg
fisub
mov
inc
sbb
stos
rol
in
outs
mul
adc
rcl
add
sbb
test
not
std
pop
inc
jmp
ds
mov
sub
and
mov
sub
enter
(bad)
loope
or
mov
dec
xchg
dec
div
(bad)
sub
mov
dec
js
inc
xor
gs
push
xor
inc
mov
push
mov
rcl
addr16
pop
sub
gs
or
push
cmc
into
rcl
pop
dec
xor
lea
and
fdiv
test
jbe
arpl
out
add
fidiv
xchg
cld
daa
pop
jge
(bad)
jg
mov
imul
dec
xchg
add
outs
sub
sub
(bad)
iret
pop
pop
ss
xor
jne
ins
fmul
cmp
cmps
lahf
inc
sbb
aad
sbb
sub
dec
mov
mov
in
es
ss
bnd
xor
mov
pushf
test
shl
pop
out
mov
jne
ins
adc
add
xor
jecxz
dec
stc
cmp
sbb
rcl
bound
cld
es
xchg
sub
pop
sub
jbe
inc
jbe
je
leave
aaa
out
jmp
ror
in
add
xchg
mov
xor
mov
icebp
rol
jne
mov
movs
mov
xchg
jecxz
frstor
(bad)
std
jl
xchg
mov
sti
lea
pop
pop
add
sahf
add
out
pop
fisttp
pop
xor
mov
movs
xlat
in
pusha
xor
jecxz
lahf
adc
in
loopne
push
movs
sar
pop
add
add
push
or
clc
xchg
adc
es
sbb
inc
cmps
in
or
pop
test
jno
stc
test
mov
ret
les
push
scas
adc
into
stos
scas
movs
loop
stos
adc
xor
enter
aad
jg
call
lds
mov
fwait
ror
(bad)
push
jbe
in
or
xor
cmp
pop
mov
ins
pop
test
lahf
das
scas
add
xchg
es
cmp
dec
mov
loop
jae
mov
pop
fld
scas
mov
sbb
das
push
xchg
test
pop
out
sbb
pop
sub
call
aam
add
pop
hlt
mov
fdivr
fld
mov
dec
xchg
dec
ficom
fld
dec
push
push
rcl
cwde
enter
sti
arpl
push
mov
into
in
fdivr
fwait
lahf
daa
fidivr
fwait
inc
add
cmp
das
mov
nop
inc
in
(bad)
jle
adc
inc
jp
cdq
arpl
iret
sub
xor
in
(bad)
cmps
pop
in
loop
js
mov
push
stc
and
pop
xor
inc
dec
in
repz
or
add
aam
jbe
in
emms
loope
mov
out
pushf
push
in
and
cmp
jle
sub
imul
cdq
add
sub
jae
jo
pop
sub
add
cmps
stos
rol
in
sti
pop
dec
mov
lods
xchg
xchg
loop
sbb
ja
sub
imul
outs
jg
cmc
pop
sbb
retf
sub
add
test
or
or
or
dec
out
in
inc
repnz
popa
ret
div
xor
int
dec
bnd
push
cmps
add
fisttp
std
daa
xor
pop
add
das
sub
cmp
pop
enter
clc
out
pop
shr
ror
mov
jb
jae
or
sbb
inc
xchg
std
xor
not
xchg
test
stos
mov
jne
test
rcr
(bad)
call
call
scas
imul
mov
mov
add
cli
dec
adc
in
aad
cmp
push
jnp
outs
xlat
shr
shl
nop
or
sbb
hlt
scas
pop
mov
pusha
dec
dec
rol
mov
lock
jnp
and
fist
test
scas
ds
jne
daa
cmp
lahf
mov
mov
out
adc
or
(bad)
stc
loopne
sub
and
xlat
sub
iret
xor
sti
cdq
arpl
sub
lods
js
fwait
pusha
add
movs
jl
sar
xchg
sar
adc
cli
jb
sar
cmp
or
test
add
jmp
pop
xor
or
lea
jecxz
or
and
pop
mov
sbb
mov
ss
or
mov
push
movs
sub
test
jae
pop
sbb
push
mov
push
movs
xchg
lahf
imul
fisttp
mov
adc
(bad)
das
push
or
ins
fmul
pop
push
lock
push
xchg
xchg
add
and
daa
enter
int3
sub
cwde
mov
xchg
mov
xor
outs
or
xchg
push
push
stos
data16
mov
sti
mov
lahf
inc
and
inc
fdivr
fiadd
mov
sub
repz
jnp
and
pop
jmp
jmp
pop
adc
jae
xor
xchg
sbb
xchg
add
dec
adc
pusha
inc
movs
jmp
xchg
inc
in
jmp
mov
and
fisub
pop
inc
imul
add
fucom
xchg
xor
ins
xor
loopne
fild
ds
out
mov
xchg
aad
imul
in
std
fiadd
imul
mov
loopne
mov
cdq
outs
into
jmp
addr16
mov
outs
into
movd
in
(bad)
adc
movs
hlt
imul
(bad)
or
cmp
xchg
(bad)
cmps
pop
jmp
ror
not
not
cs
dec
pop
pushf
je
(bad)
mov
jae
cdq
mov
dec
pop
mov
ins
push
scas
mov
add
aaa
mov
out
outs
adc
jl
cmp
test
jno
mov
sub
and
pop
pop
sbb
dec
mov
inc
sti
jle
pushf
(bad)
ds
movs
or
mov
xchg
sbb
or
push
cmp
or
(bad)
cdq
enter
in
sbb
lahf
stos
push
push
sub
fcmovnu
out
jno
sub
add
(bad)
repnz
dec
add
fsubr
adc
dec
push
push
push
inc
data16
(bad)
pop
mov
pusha
push
fisttp
outs
and
add
mov
ins
test
enter
cmp
test
jne
test
movs
hlt
mov
mov
cmc
test
inc
nop
push
pop
fbld
outs
mov
fst
in
mov
cmp
mov
(bad)
jle
add
lds
jae
xchg
shl
push
(bad)
mov
jp
and
mov
retf
dec
xor
push
xor
jg
into
ret
jo
sbb
mov
leave
std
cwde
adc
mov
xor
cmp
mov
mov
and
jnp
fstp
in
shl
jae
sbb
scas
std
sub
xor
adc
or
sbb
jmp
and
mov
lea
jg
cs
adc
pop
ret
mov
jge
movs
retf
adc
retf
mov
popa
inc
xchg
mov
sbb
mov
push
or
neg
jo
mov
ret
xchg
jns
and
fwait
inc
xchg
adc
add
mov
mov
jno
or
pop
in
adc
jge
std
dec
mov
sub
and
push
out
aam
outs
push
mov
call
and
movs
and
pop
xchg
push
test
mov
movhps
push
xor
adc
pop
rol
pop
aad
push
jno
stos
clc
adc
add
or
(bad)
xlat
pop
or
xchg
loope
fnstsw
fcom
mov
dec
inc
mov
and
pop
inc
int3
adc
add
ins
lds
cdq
jae
push
push
jbe
or
les
dec
ror
and
shl
cld
leave
std
mov
or
or
lods
stos
ret
ss
cmp
(bad)
push
clc
call
mul
and
(bad)
movs
lods
push
cs
mov
lock
(bad)
sub
pop
aam
sub
and
(bad)
aam
test
bound
test
inc
enter
mov
mov
mov
les
dec
push
mov
cmps
and
out
fcomp
fst
pop
mov
not
addr16
sti
pop
lds
pop
test
daa
xor
popa
pop
sub
xor
in
push
icebp
mov
jecxz
xor
sbb
xor
xchg
shl
sti
dec
push
cmp
sbb
sbb
push
sti
test
hlt
sbb
xor
movs
fimul
add
mov
gs
in
stos
and
inc
push
xlat
call
inc
add
retf
xor
adc
inc
jnp
in
pop
mov
arpl
adc
into
fistp
cmc
jmp
add
mov
xchg
or
mov
call
xchg
mov
xor
push
jo
mov
jae
ins
xor
add
dec
std
push
or
xor
imul
mov
(bad)
hlt
jnp
sbb
add
sbb
fdiv
pop
out
sub
cdq
dec
add
xor
jg
push
xchg
sub
(bad)
fmul
sbb
std
cmovle
(bad)
test
cmp
cli
pop
sub
fdiv
hlt
mov
outs
add
fnsave
or
dec
adc
add
cmp
fld
retf
inc
pop
idiv
mov
jmp
pop
xor
movs
loopne
cdq
mov
ins
xchg
loope
pop
(bad)
ret
or
push
sub
sub
pushf
sbb
test
data16
int3
fs
xor
inc
pop
in
mov
in
lahf
mov
movs
and
dec
aam
call
mov
or
dec
jae
shl
pop
into
jle
dec
in
push
and
aam
cmp
cmpxchg
push
call
pop
jne
xor
jge
mov
jle
sti
(bad)
shl
dec
sub
daa
ret
sub
or
mov
stos
imul
(bad)
in
test
sbb
pop
movs
cmps
xchg
arpl
shr
test
push
push
int
stos
in
mov
cmp
pop
rcl
adc
inc
cmp
pop
fucom
cdq
xor
inc
jbe
mov
adc
cli
scas
jmp
push
xor
cdq
aaa
xchg
mov
push
mov
mov
ret
xchg
loope
cmp
outs
mov
jne
sbb
fimul
cmc
mov
mov
in
sub
add
cli
cmps
adc
mov
loop
push
fisubr
stos
mov
sbb
pop
xlat
dec
push
cmps
xchg
aaa
adc
or
xchg
or
add
cs
cmps
popa
shl
add
sbb
pop
add
pop
xchg
fs
shl
or
(bad)
mov
lds
pop
test
sub
inc
fdivr
inc
add
sbb
lock
pop
push
jl
scas
mov
cmp
cs
mov
cmp
xor
js
mov
mov
mov
push
add
mov
add
push
imul
mov
and
daa
sub
pop
out
das
aad
xor
test
or
xchg
retf
xchg
mov
cwde
movs
and
or
mov
pop
jne
fs
cmp
inc
jg
aad
push
nop
push
rol
dec
sub
loopne
stos
xor
lods
inc
scas
sbb
aas
mov
or
xor
pop
pop
xchg
cmp
jb
jecxz
adc
and
idiv
fisubr
sub
sub
mov
mov
adc
test
push
loopne
mov
test
shl
jge
xchg
imul
aad
cwde
pop
call
jp
scas
inc
push
pop
adc
pop
jno
push
sub
sub
mov
jge
xchg
sbb
je
icebp
pop
icebp
leave
push
std
cmp
sti
cmps
scas
xchg
mov
cmp
dec
add
shl
xor
cmp
inc
neg
dec
lods
sub
dec
nop
aad
movs
(bad)
xchg
(bad)
mov
push
lock
mov
retf
sbb
jge
jnp
mov
add
sub
adc
add
cli
fbld
out
push
addr16
psrad
xchg
jge
stc
and
dec
pop
jp
ins
push
xchg
cmps
movs
mov
push
cld
movs
mov
push
into
sbb
and
iret
add
mov
sub
mov
xor
scas
jnp
xchg
ror
xchg
hlt
pop
pop
int
pop
(bad)
mov
sahf
sbb
loopne
movs
mul
jns
ret
imul
mov
mov
fidiv
test
add
loop
mov
movs
das
enter
dec
push
xchg
pop
dec
clc
xlat
sub
sbb
pop
(bad)
xchg
jbe
jmp
push
out
push
sbb
adc
icebp
push
(bad)
xchg
lea
icebp
inc
and
rcr
sbb
mov
imul
das
mov
sub
bound
ret
pop
hlt
jle
stos
cmp
rcr
pop
jmp
sbb
pushf
xlat
jb
push
ins
add
iret
push
pop
idiv
inc
add
out
mov
repnz
cmps
or
(bad)
adc
hlt
jge
aam
call
push
imul
adc
xor
leave
jnp
jne
in
add
xchg
out
(bad)
mov
dec
add
push
and
fistp
ins
xor
pop
xchg
adc
retf
in
dec
inc
add
popf
xchg
cmp
add
mov
add
mov
fisub
test
push
xor
es
xor
fs
scas
pop
inc
push
and
(bad)
sub
jo
retf
sti
xchg
shr
data16
js
movs
inc
(bad)
mov
push
in
call
iret
pop
stos
js
add
pop
retf
retf
out
sub
push
(bad)
push
dec
and
rcr
dec
nop
xchg
sub
sahf
xchg
jmp
outs
push
dec
jecxz
shr
pushf
sub
mul
cli
push
mov
jg
(bad)
loope
(bad)
sub
push
push
scas
mov
add
fwait
xor
mov
push
sbb
outs
mul
pop
jae
icebp
cmc
and
jl
cwde
push
xor
dec
and
les
ret
pop
ror
arpl
int3
mov
xchg
sub
leave
scas
and
pop
cmp
sbb
sub
lock
adc
(bad)
call
xchg
fisub
xor
cld
and
mov
jg
aad
add
jp
sbb
aam
shl
sbb
xchg
xchg
mov
fdiv
mov
movs
(bad)
adc
jmp
push
data16
les
push
scas
(bad)
shl
les
sbb
js
mov
arpl
in
jecxz
push
jbe
pop
dec
vmovdqu
xor
pop
in
cli
imul
outs
cmp
xor
sar
in
pop
sti
(bad)
jne
inc
iret
xor
dec
xchg
aaa
mov
add
iret
mov
jle
sbb
cli
adc
stos
adc
lock
pop
pushf
add
in
jmp
add
jmp
dec
jbe
gs
sub
and
movs
fwait
stos
sub
mov
push
fcom
stos
adc
cld
and
lock
jp
jns
mov
sbb
mov
mov
xchg
mov
repz
fdivr
sbb
jle
push
mov
popa
outs
add
xchg
pop
imul
push
jge
in
lods
mov
mov
push
jp
retf
inc
aas
es
add
imul
adc
in
ffreep
lds
push
xchg
outs
loope
fld
jl
sti
test
imul
jnp
inc
or
fcmove
fwait
test
es
fisttp
retf
inc
stos
cld
rcl
add
mov
popf
lds
xor
dec
jmp
jne
jecxz
shr
pop
in
rcl
dec
dec
mov
mov
dec
cld
cmc
cmp
add
or
loope
pop
bound
popf
dec
fs
fisttp
iret
repnz
xchg
mov
cwde
pushf
fimul
sub
je
out
dec
fldln2
and
stos
int
pop
push
or
push
sub
sbb
cmp
mov
stc
fsubr
push
not
out
pop
add
mov
lock
cmp
pop
stc
in
xchg
(bad)
adc
or
mov
aas
aas
mov
in
cmp
sub
mov
and
(bad)
popf
push
xor
pop
lahf
jns
add
pop
leave
or
fs
add
dec
not
pop
shl
adc
push
push
nop
mov
ret
cmp
xor
jmp
and
add
push
push
adc
cmp
sahf
test
push
jge
xlat
and
or
and
xor
leave
and
mov
adc
adc
cdq
cmp
bound
and
outs
lock
xchg
in
dec
int3
(bad)
sahf
mov
fwait
mov
xor
pop
push
fucomip
mov
call
inc
out
jmp
jae
pop
movs
inc
lahf
lods
jg
push
dec
mov
mov
(bad)
out
data16
jle
cmp
out
dec
clc
shl
lods
shr
mov
sub
inc
pop
xchg
clc
add
es
xchg
add
and
and
cmp
mov
mov
bound
dec
loope
int3
je
rcr
cmp
int3
adc
rcl
adc
punpckhdq
jnp
pop
stos
push
imul
cmp
or
sbb
daa
jmp
out
rcl
mov
mov
xor
out
scas
fmul
jo
inc
loopne
(bad)
outs
or
neg
inc
adc
das
sti
das
outs
shr
push
mov
jg
push
mov
push
push
or
ficom
or
push
in
loop
ja
mov
stc
inc
(bad)
loop
ds
fistp
(bad)
and
jecxz
and
je
add
stos
test
neg
push
jns
dec
inc
cld
jbe
mov
test
mov
jns
mov
add
das
push
leave
inc
lea
or
pushf
stos
ja
push
push
cdq
pop
mov
arpl
xchg
mov
popf
nop
mov
xchg
pop
aam
sar
inc
pop
pop
dec
push
sbb
lock
mov
xchg
mov
mov
retf
jecxz
mov
ins
push
stos
ror
cld
inc
js
jge
mov
add
sub
enter
dec
lea
dec
loope
sahf
push
lock
mov
retf
repz
pop
retf
int
mov
scas
ins
jmp
sti
mov
clc
dec
mov
sbb
sub
adc
test
add
invd
stc
cmp
xchg
adc
outs
cs
push
jb
xchg
popa
test
dec
pop
sub
add
pop
call
in
pop
lds
pop
lahf
popf
mov
test
inc
aas
movs
fimul
xor
mov
popf
out
fndisi(8087
sbb
jle
or
adc
jns
shr
aam
jecxz
mov
pusha
xchg
add
movs
cld
into
es
fstp
push
or
jae
(bad)
shl
push
jp
inc
inc
jg
pop
pop
mov
dec
fld
xchg
imul
ds
gs
fnstcw
pop
pop
cmp
stos
or
mov
or
cmp
or
jno
ficomp
cs
dec
outs
sahf
and
stc
test
clc
jnp
dec
fcomp
in
dec
rcr
(bad)
arpl
mov
or
adc
loop
int3
lds
retf
pop
xlat
dec
(bad)
or
jle
idiv
dec
out
dec
xor
ins
cmp
push
and
outs
pop
fcom
jmp
mov
push
data16
mov
pop
inc
xchg
jno
rol
xchg
push
sub
outs
shl
or
nop
pop
jl
jge
push
add
clc
adc
push
pop
imul
(bad)
xchg
mov
dec
xchg
sbb
gs
cmp
or
loop
adc
push
data16
test
jg
cdq
jb
ret
je
lahf
inc
sbb
aam
pop
retf
test
ror
js
scas
push
repnz
(bad)
cs
or
icebp
in
lea
icebp
cld
lock
and
mov
dec
test
enter
ins
(bad)
adc
imul
push
jo
daa
mov
mov
push
push
jne
cmp
pop
in
mov
dec
call
es
xor
jb
jl
mov
in
push
fisub
jg
scas
sti
cmc
arpl
ins
jp
xchg
or
jne
lods
jecxz
cs
cmps
push
adc
inc
sub
xchg
cmp
mov
inc
and
into
shl
push
mov
pop
jmp
lods
(bad)
(bad)
mov
xchg
js
xlat
mov
sbb
sub
hlt
shl
out
and
in
xchg
inc
adc
mov
xor
and
lods
jmp
mov
ds
xchg
inc
aaa
mov
sub
and
inc
and
push
fs
lock
jmp
inc
movs
add
mov
fdivr
out
jmp
sar
push
lods
mov
mov
retf
or
mov
loop
popf
iret
mov
mov
pop
and
adc
in
popf
xchg
and
xchg
hlt
out
test
xor
fcomp
add
inc
mov
jae
and
imul
adc
fiadd
mov
imul
xor
ror
leave
fdivr
or
xor
stc
jmp
clc
adc
push
int
push
jl
fdiv
ret
or
mov
cmp
int3
(bad)
sti
pop
pop
lods
sahf
fsub
xchg
loopne
add
push
mov
push
inc
sbb
adc
ret
jmp
dec
push
or
lahf
lahf
aad
pushf
xchg
xchg
pop
cmp
ficomp
fild
inc
sub
xor
xor
adc
dec
dec
adc
adc
jmp
mov
pop
pushf
pop
std
in
pop
mov
pop
loope
add
add
push
test
and
lahf
jnp
(bad)
fimul
or
rol
aaa
(bad)
leave
repnz
(bad)
cmps
sub
loop
add
cmps
fwait
iret
popf
mov
mov
mov
imul
dec
inc
lods
sub
and
and
jmp
mov
into
adc
mov
sti
and
cmp
call
lock
mov
xchg
inc
(bad)
dec
push
push
lods
or
mov
cmp
dec
cmp
and
xchg
loop
jb
pop
dec
mov
popa
mov
jmp
rcr
aaa
xchg
jns
in
retf
xor
mov
mov
and
imul
pop
mov
shr
xchg
or
inc
je
jl
push
rol
push
pop
out
dec
mov
push
loop
les
neg
test
mov
or
adc
add
and
loop
xchg
sub
adc
jl
mov
icebp
fmul
mov
pop
xchg
push
sub
cmc
dec
cmp
dec
push
rsm
mov
pop
push
push
push
stos
cmp
(bad)
fincstp
mov
out
cmp
dec
jns
or
sub
sub
xchg
cmp
cmp
(bad)
sub
jnp
dec
loop
sub
add
icebp
pop
daa
or
pop
or
mov
scas
and
mov
stos
push
and
adc
call
adc
lods
jae
and
mov
ds
add
add
call
push
or
push
jge
pop
mov
add
cmc
std
nop
add
dec
stos
xchg
xchg
das
cdq
daa
into
mov
push
jge
test
pushf
cmc
dec
and
fsubr
mov
lods
outs
shl
fisubr
lods
xor
adc
push
cmp
addr16
add
ret
mov
enter
jmp
sub
mov
cli
dec
sbb
jae
adc
inc
cmp
cmp
mov
dec
retf
sbb
push
xor
xchg
jl
lahf
or
xor
cmps
add
mov
sbb
mov
not
jns
icebp
or
mov
int3
sub
inc
mov
mov
dec
loop
cmp
and
xchg
xchg
in
lea
mov
pop
lods
push
push
mov
xchg
daa
dec
dec
jae
in
aad
test
sub
in
jns
xchg
mov
movs
pop
cwde
push
pop
cmp
sub
fidiv
data16
int3
ins
lods
in
jmp
sbb
and
movs
xchg
fwait
dec
cmp
pusha
sbb
mov
xchg
and
pop
sub
fimul
int3
leave
pop
ret
imul
mov
fldenv
xor
mov
shl
jne
dec
ins
push
bound
xchg
xor
pop
sbb
mov
sbb
(bad)
adc
mov
daa
pop
fmulp
jns
cmp
xor
sub
fwait
sub
sub
stc
mov
sub
mov
sub
mov
cmp
adc
sub
adc
dec
push
cmps
hlt
inc
push
ins
push
mov
arpl
push
mov
adc
retf
in
and
movs
std
cmc
add
jo
ins
iret
pop
push
ret
inc
adc
push
cmp
push
fild
adc
sub
mov
push
(bad)
adc
popf
jp
clc
test
dec
mov
pop
pop
sub
jmp
jno
adc
imul
fs
call
push
out
and
mov
push
jae
in
jbe
rcr
cmp
mov
push
inc
shl
stos
call
lea
bound
mov
shl
pop
out
mov
inc
xlat
inc
cmp
push
mov
aad
xchg
cmp
inc
ja
popf
bound
mov
cld
fsub
inc
mov
sbb
dec
xchg
cli
stos
mov
or
sub
inc
sub
add
jns
xchg
jl
lahf
(bad)
jns
mov
sub
icebp
push
jno
das
shrd
and
push
cmp
aaa
jp
add
movs
or
mov
push
mov
sub
bound
fwait
cmp
sub
fsub
(bad)
icebp
retf
ds
mov
out
sub
lahf
add
xchg
xor
xchg
repz
div
leave
(bad)
sbb
xchg
jl
(bad)
aas
test
push
xlat
mov
arpl
sub
lea
pusha
in
ds
in
(bad)
mov
push
xchg
mov
push
inc
pop
and
jge
or
movs
ins
mov
pusha
jne
lods
cmps
jge
sbb
movs
pushf
js
cli
in
je
aad
xchg
pop
xlat
dec
iret
and
xor
std
pop
fnsave
js
jge
cmps
sbb
cmp
pop
and
aaa
cdq
push
ins
sub
add
repz
ja
aad
fstp
pop
neg
jno
xor
(bad)
jp
in
fwait
mov
je
arpl
mov
stos
lods
xchg
mov
fisttp
rol
fwait
shl
fst
mov
retf
mov
imul
fwait
cmc
inc
and
in
jnp
or
jl
sti
aad
and
aas
pop
xchg
push
or
test
int
xor
mov
inc
add
in
sub
repnz
fdiv
jbe
aas
ret
xor
sbb
inc
lahf
mov
enter
pop
jno
cmc
cmp
retf
in
mov
mov
xor
loop
dec
dec
ret
stc
ins
mov
in
xor
xor
fld
xchg
mov
pop
idiv
lods
jp
ins
ins
(bad)
ror
xchg
popf
push
or
gs
inc
dec
fcom
cmps
xchg
cmps
jecxz
(bad)
int
mov
inc
xor
pop
(bad)
enter
adc
and
je
and
gs
pop
and
sub
and
inc
mov
mov
mov
aad
std
sbb
dec
xchg
pop
mov
daa
test
fs
stos
ins
or
mov
add
loopne
test
imul
(bad)
jmp
inc
adc
data16
daa
pop
xor
inc
fld
inc
mov
js
push
inc
adc
inc
adc
mov
jbe
arpl
inc
and
inc
xchg
js
mov
xor
movs
push
push
sub
js
in
divps
and
sbb
jae
mov
dec
lahf
lods
stos
inc
jnp
and
into
jbe
pop
mov
push
lods
test
pop
dec
test
ins
dec
xchg
xchg
add
adc
in
je
sbb
(bad)
sbb
(bad)
mov
cs
div
sub
inc
js
adc
pushf
aam
mov
cmp
xor
and
mov
out
cmp
lods
jmp
sahf
(bad)
cld
ins
scas
vmulsd
nop
js
adc
pop
fadd
imul
js
push
sbb
sbb
repnz
jmp
jo
push
loopne
add
jne
out
push
sar
dec
movs
aad
mov
lods
mov
dec
les
fnstcw
xor
out
pushf
bound
pop
mov
mov
out
mov
loope
ficom
cmc
arpl
nop
lods
jl
sbb
xor
mov
cmp
nop
mov
and
cwde
xor
into
mov
retf
ins
add
in
imul
sbb
out
pop
sub
push
daa
cmps
outs
loopne
das
icebp
cwde
push
cwde
push
mov
inc
xchg
icebp
imul
(bad)
push
stos
mov
ficomp
dec
and
mov
adc
bound
and
int
jecxz
aam
push
jge
adc
call
xchg
xor
cmp
sbb
mov
sub
inc
xchg
out
mov
push
xchg
out
push
xor
repnz
mov
mov
ud0
ja
rol
scas
fcomip
cmp
adc
scas
pop
push
cmp
inc
daa
call
jle
bound
sub
jne
mul
cmp
lea
fcomp
jmp
xchg
adc
retf
fist
lock
out
ret
jmp
and
sub
arpl
test
pushf
sti
mov
dec
into
or
sahf
pop
out
xchg
pop
cmp
mov
imul
cmps
pusha
mov
shr
in
repnz
loopne
push
jl
pop
jecxz
mov
push
aaa
sbb
in
jns
repnz
setbe
dec
imul
xor
(bad)
xchg
cmc
lds
ss
stos
adc
ret
mov
pushf
(bad)
sub
push
jmp
out
jg
inc
inc
sbb
cmc
out
dec
aad
ins
sub
pop
cwde
jne
or
jp
jecxz
bts
push
fidiv
jne
mov
dec
mov
or
cs
mov
xor
shl
mov
mov
fistp
mov
movs
repz
mov
sar
mov
ins
jo
outs
xlat
add
adc
and
mov
push
sbb
mov
cmovne
sbb
push
push
test
push
int3
mov
sbb
jbe
or
cmp
jne
dec
jns
clc
out
call
mov
sbb
aam
inc
cmc
call
dec
(bad)
test
(bad)
das
test
mov
fcom
cmp
mov
pop
mov
dec
out
pop
jnp
sub
mov
cwde
add
sbb
lock
enter
ret
aaa
out
pop
cmp
and
ret
je
mov
stos
(bad)
in
mov
je
ss
(bad)
jo
and
adc
retf
dec
pusha
scas
ficomp
inc
pop
int3
dec
push
push
icebp
repnz
cmp
cwde
fist
sbb
jl
add
inc
hlt
arpl
sub
jbe
jbe
fistp
push
out
add
sbb
push
dec
sub
repz
jmp
enter
mov
stos
std
fisubr
ret
enter
(bad)
retf
pop
test
adc
es
imul
hlt
push
clc
push
shl
lods
fs
cmps
(bad)
in
fnstsw
add
shr
scas
int
in
imul
dec
and
sub
test
push
(bad)
leave
outs
add
xchg
js
xchg
cmp
mov
sbb
push
in
arpl
adc
(bad)
ja
rcr
test
adc
cdq
jmp
sub
sbb
cmps
xchg
jp
push
push
add
mov
pop
mov
sub
pushf
inc
add
pusha
pushf
rol
movs
xchg
pop
pop
mov
repnz
dec
xchg
dec
adc
jb
out
or
clc
mov
inc
out
(bad)
inc
xchg
jb
bound
outs
mov
sub
dec
or
mov
sar
cmp
mov
or
jge
test
popf
aaa
xchg
cmp
das
cmp
cmp
or
jmp
(bad)
push
ret
jae
retf
leave
cli
or
pop
inc
imul
and
xor
test
call
sar
or
sbb
fdiv
add
xlat
je
fidivr
jp
mov
mov
int3
mov
push
sar
xor
inc
lea
pop
fsub
ret
push
sbb
pop
fbstp
xchg
xor
imul
es
pop
inc
mov
push
mov
dec
dec
sbb
jl
push
scas
frstor
push
adc
cmps
or
test
in
add
and
dec
lods
xchg
in
push
jo
in
mov
add
stc
fs
cdq
scas
cwde
stos
(bad)
movs
cmp
pop
repz
lods
inc
ss
cmc
push
mov
dec
mov
add
add
mov
call
ficomp
pop
pushf
and
sbb
add
push
in
mov
push
ret
popf
dec
imul
lds
repnz
in
fwait
xchg
in
and
adc
scas
out
out
xor
dec
xor
xchg
lahf
adc
adc
sub
scas
dec
and
fcom
shl
cld
cmp
and
push
in
stos
jmp
test
sub
xchg
mov
cmc
inc
cmp
int3
nop
xchg
cmp
jg
icebp
push
retf
dec
jmp
or
xor
jmp
pop
jecxz
dec
dec
and
mov
mov
test
and
xor
jb
hlt
xchg
jge
add
pop
sbb
out
dec
lock
lock
fidiv
nop
xchg
xor
loop
add
jg
jl
pop
out
mov
out
and
cmp
xlat
mov
sbb
shr
jmp
and
bound
sbb
and
mov
mov
(bad)
or
repz
adc
leave
mov
jnp
cmp
clc
inc
cs
jno
ja
xor
lds
mov
test
ficomp
mov
mov
dec
cmp
sub
arpl
aad
scas
mov
or
lahf
and
jmp
test
sub
mov
xor
or
stc
pop
dec
dec
mov
shufps
or
lods
pop
mov
adc
jae
cld
ror
xor
enter
cdq
cmp
ja
imul
or
adc
mov
dec
mov
(bad)
out
dec
fadd
js
or
xor
pop
stos
popf
stos
cmp
xor
mov
enter
or
ret
imul
adc
jnp
mov
movs
stos
clc
mov
jg
stos
iret
pop
pop
push
aad
fsubr
mov
xor
std
pop
mov
stos
lods
jae
pop
sub
mul
ja
sbb
xchg
fadd
outs
aas
mov
fwait
mov
sbb
daa
int
outs
xor
and
add
(bad)
pop
mov
inc
add
xor
cld
(bad)
mul
rol
xchg
stos
mov
cmp
inc
add
jmp
mov
scas
sbb
popa
push
cmps
jmp
lea
(bad)
shl
call
fs
jp
ret
sub
ror
xor
sbb
inc
ror
inc
(bad)
sbb
cs
mov
mov
mov
xor
fsubr
sub
add
aad
or
loopne
popa
add
push
xchg
push
jmp
push
(bad)
fidiv
pop
mov
xor
jmp
sub
mov
lahf
mov
pusha
sar
push
mov
test
cmp
jmp
movs
rcr
xor
add
mov
push
(bad)
repz
sub
hlt
sahf
xchg
sti
mov
or
cmps
fwait
mov
sub
jg
adc
dec
push
push
shl
aaa
dec
jmp
fucomip
push
mov
rcl
test
fiadd
sbb
lods
rcl
lea
push
jl
std
dec
in
ror
out
xchg
das
cmp
adc
mov
jne
ret
mov
sbb
shl
rol
xchg
push
push
sbb
xor
bound
test
push
pop
dec
retf
movs
adc
inc
push
pop
push
fcmovnbe
add
jmp
les
cmp
pushf
pop
out
mov
mov
xchg
out
xchg
mov
data16
push
pop
mov
int3
jp
(bad)
mov
dec
fxch
push
pop
cs
(bad)
mov
mov
loopne
xor
and
out
aaa
jns
in
sub
out
cdq
sub
xor
ja
sbb
repz
(bad)
cmp
push
xor
es
mov
es
xchg
test
sti
das
push
(bad)
mov
das
mov
jmp
sbb
sub
push
mov
aam
test
jmp
(bad)
movs
jo
sti
stos
jp
dec
in
push
jno
sub
out
test
or
jbe
mov
or
pop
or
lahf
cld
jg
sbb
mov
adc
jecxz
sub
scas
imul
jae
popf
push
pop
scas
sub
sbb
in
cdq
mov
rol
inc
mov
stos
mov
sar
popa
repz
or
adc
pusha
ffree
outs
pop
not
push
xor
xchg
cmc
sbb
push
mov
add
jmp
mov
(bad)
mov
inc
dec
push
adc
xor
adc
hlt
sahf
dec
pop
inc
jecxz
adc
ror
sub
retf
sti
pop
test
nop
data16
push
adc
scas
fistp
std
and
adc
ja
scas
sbb
in
mov
mov
xor
inc
ja
sahf
add
and
outs
adc
test
jb
cmp
mov
adc
vcvttps2dq
adc
mov
mov
emms
dec
lock
dec
sbb
fld
stc
sub
jns
dec
mov
mov
mov
or
mov
lahf
repnz
pop
push
shr
inc
out
mov
push
pop
mov
jl
push
mov
xlat
aam
xchg
aaa
jge
pop
cmc
mov
ds
sub
icebp
sbb
lock
stos
jae
loop
scas
or
sahf
jno
sub
jo
bound
es
and
jg
inc
lods
test
enter
dec
dec
ss
cmp
std
mov
xor
adc
sbb
fs
sahf
sub
jmp
(bad)
(bad)
cdq
cmp
or
pop
fnstcw
dec
add
cld
fcmovnbe
jle
shl
repnz
mov
mov
and
aad
je
lods
aas
ds
pop
jae
mov
or
mov
(bad)
in
mov
mov
dec
das
ds
lahf
mov
pop
sbb
push
(bad)
xchg
xchg
(bad)
inc
out
push
movs
call
add
push
retf
in
lock
pop
xor
lock
hlt
std
jp
in
test
dec
mov
add
addr16
xchg
jnp
sahf
outs
fmul
xchg
push
xchg
mov
lods
aas
cwde
add
aas
push
faddp
sub
cmp
and
and
div
cmp
add
jle
rcl
shl
xchg
adc
inc
aaa
(bad)
pusha
push
push
hlt
arpl
(bad)
jmp
daa
ds
mov
ficom
jne
xor
mov
scas
pop
or
sbb
jmp
mov
les
js
loope
inc
dec
rol
cmps
xlat
stos
cwde
pop
(bad)
ins
imul
inc
add
or
test
push
enter
mov
or
popf
pop
addr16
rol
mov
add
cmp
nop
ret
and
dec
outs
retf
bound
push
fyl2xp1
call
pushf
cli
cvtpi2ps
mov
dec
stc
test
dec
(bad)
push
es
cmp
or
xchg
sahf
fbld
sbb
pushf
xlat
pusha
dec
call
pop
jo
mov
hlt
sbb
ins
jg
mov
jns
repnz
mov
pop
div
ins
mov
sub
jno
jbe
dec
inc
stos
mov
xchg
shl
add
mov
xchg
hlt
push
push
shr
push
push
mov
adc
cmc
fist
sahf
jne
and
xchg
(bad)
jo
jle
dec
mov
xor
or
loope
ret
repnz
sub
int
fistp
(bad)
xchg
jecxz
mov
cld
add
cmp
out
sbb
dec
xor
scas
shl
mov
cmp
cs
mov
js
leave
push
gs
inc
cmp
push
inc
test
adc
pop
jge
mov
push
jmp
and
dec
push
rol
sti
cdq
mov
push
add
ss
dec
ret
xchg
js
sti
fnstcw
scas
jecxz
dec
jae
or
mov
cmp
push
mov
mov
mov
cmp
mov
or
jb
or
leave
sub
icebp
sbb
sub
imul
dec
mov
dec
xor
pop
mov
mov
jg
pop
enter
mov
scas
jbe
mov
(bad)
shr
movs
fldenv
cdq
mov
sub
pop
pop
xchg
mov
mov
mov
das
test
xchg
mov
stc
or
aaa
imul
stos
repnz
jae
out
imul
sub
sub
ds
cmps
adc
fs
bound
dec
in
push
mov
sub
int3
shl
iret
mov
sub
(bad)
outs
(bad)
push
and
mov
dec
cmps
test
hlt
sti
mov
push
repnz
fstp
push
add
pop
mov
mov
rol
test
mov
jne
sub
cld
ins
cmp
sub
pop
pushf
mov
clc
pusha
retf
in
sub
ror
sbb
push
xor
adc
mov
add
sbb
mov
adc
inc
fs
fisttp
xchg
adc
cld
mov
and
hlt
jmp
pop
sub
test
and
mov
ins
adc
jb
xor
or
ret
pop
mov
outs
mov
sbb
repz
add
scas
xchg
mov
scas
fs
int3
sbb
inc
sub
jp
popf
fucomip
test
(bad)
jl
shl
fld
ret
out
jae
push
idiv
sti
sar
loop
ja
dec
add
lds
inc
xchg
imul
mul
addr16
in
daa
and
add
dec
or
push
sub
cmps
push
dec
div
cmps
xor
mov
clc
xchg
sub
out
ficomp
test
push
(bad)
and
rep
loopne
jbe
call
add
das
test
stc
pop
and
out
dec
jae
cmp
lods
add
cmp
xchg
cmp
pushf
dec
lds
imul
mov
push
add
pop
(bad)
mov
loop
dec
mov
mov
push
cmp
stos
xor
cmp
push
ret
rcr
jmp
les
or
gs
mov
movs
sti
test
jo
(bad)
jo
movs
sar
mov
test
push
aaa
xchg
lods
jg
test
stos
das
stc
push
(bad)
scas
inc
jmp
mov
in
outs
scas
call
dec
xor
xchg
push
mov
jne
pop
sbb
scas
test
shr
sti
jne
in
fisttp
mov
adc
pop
dec
pop
jns
pop
rcl
cmc
mov
xchg
sbb
xlat
sub
ja
rcl
mov
js
jnp
xor
aam
hlt
xor
repz
iret
dec
mov
clc
(bad)
ja
dec
jno
jmp
fld
arpl
and
or
movs
cmp
pop
sti
sbb
mov
push
ror
mov
xlat
mov
cmp
out
pop
mov
repz
inc
lods
sub
test
test
retf
cmp
rcr
cs
(bad)
and
inc
daa
shl
stos
pop
jle
xchg
cmp
lahf
or
sub
aad
aas
inc
lods
inc
mov
add
in
sbb
int3
push
fild
pop
mov
mov
jmp
ror
aad
test
push
leave
aaa
enter
bound
sub
xchg
aaa
sbb
jae
pop
hlt
pop
inc
xchg
mov
xchg
inc
cmp
addr16
push
lods
gs
sbb
in
in
test
sbb
jmp
cmp
jecxz
push
daa
mov
jbe
jg
int
cmps
push
push
jns
xor
mov
xchg
push
adc
xchg
mov
cs
sbb
pushf
in
push
popf
ret
dec
ret
and
gs
outs
add
loop
pop
cmp
(bad)
ds
pop
xchg
jecxz
cmp
bound
sbb
(bad)
call
push
std
fucomp
or
in
icebp
push
out
dec
clc
shr
push
bound
jns
retf
(bad)
jp
popa
dec
push
and
jmp
(bad)
imul
popa
lods
inc
adc
and
jo
dec
es
movs
mov
add
or
inc
stos
push
fdivp
sbb
mov
mov
mov
into
test
mov
call
inc
jno
mov
psubsw
cmp
mov
sub
enter
lods
or
neg
sahf
sub
jp
mov
mov
push
stc
mov
mov
scas
push
push
jp
jnp
add
int
call
jg
or
sub
sbb
add
out
mov
mov
adc
dec
outs
scas
(bad)
mov
mov
adc
dec
jle
mov
cdq
inc
jbe
xchg
aas
mov
ins
push
dec
adc
jbe
cli
into
pusha
inc
ret
sbb
mov
sub
fdivp
xlat
xchg
fisub
fidivr
data16
lods
repz
shl
mov
mov
adc
xchg
jb
add
lfs
mov
lahf
sahf
add
loop
das
sti
(bad)
add
jmp
xlat
sub
fsubrp
or
pop
jmp
pop
or
scas
mov
jmp
cmps
mov
mov
mov
call
fs
xor
dec
sub
xchg
retf
and
adc
sahf
mov
or
iret
shl
cmp
ret
test
repz
gs
sbb
cmp
imul
push
mov
outs
out
cmp
movs
jl
repz
inc
call
mov
xor
push
jne
mov
adc
push
and
fistp
mov
push
and
add
inc
mov
jp
(bad)
and
fdiv
cs
push
pop
push
pop
push
rol
(bad)
data16
rcr
xchg
into
into
daa
dec
cdq
repnz
jne
cdq
pop
jp
outs
jmp
sbb
xor
mov
in
cdq
jmp
(bad)
aas
xor
inc
jne
jp
lock
cmp
shl
hlt
push
aas
and
jge
cmps
pop
push
rol
lea
and
mov
xchg
idiv
ins
(bad)
or
mov
and
lds
out
fst
sbb
iret
ret
iret
shl
shl
test
repz
lds
es
adc
sbb
jo
mov
mov
out
mov
inc
adc
pushf
mov
in
push
arpl
mov
fs
(bad)
dec
or
movs
and
aad
xchg
test
xlat
pop
pop
shr
or
js
clc
call
mov
stos
jb
push
fs
aas
cld
imul
in
jae
out
sub
xor
mov
xchg
aam
push
xchg
ja
xchg
mov
sar
ror
add
pop
mov
or
loope
lods
pop
cs
js
sbb
sti
sbb
shr
sbb
sti
jnp
cmc
sub
test
adc
or
sbb
sbb
jl
mov
adc
jl
adc
enter
inc
into
(bad)
mov
pop
cmovbe
data16
xchg
loope
mov
mov
icebp
jge
jb
test
out
sbb
nop
ror
std
test
icebp
nop
push
std
cwde
mov
sbb
mov
into
adc
pop
fmul
(bad)
mov
mov
xor
leave
mov
jmp
pop
daa
ins
pushf
lods
inc
jb
fwait
pop
cwde
rol
jle
test
mov
outs
and
or
lea
and
cs
test
dec
xor
pushf
lock
lock
pop
retf
pop
call
(bad)
mov
clc
mov
and
call
je
add
pop
jne
loopne
xor
cs
in
push
in
and
in
inc
xchg
fsubr
sbb
rcl
mov
jecxz
stc
ret
loopne
popa
or
add
mov
mov
lea
pop
popf
ror
inc
push
fisubr
inc
addr16
pop
dec
out
mov
test
fwait
or
sub
push
es
mov
into
mov
mov
cs
fsubr
jbe
push
and
add
sub
or
ret
or
cld
or
adc
out
fld
inc
lock
jp
in
scas
sar
mov
mov
ins
ret
sahf
lods
in
outs
bnd
iret
pop
mov
fiadd
dec
mov
xchg
sahf
inc
cmp
icebp
fadd
or
lock
mov
push
push
adc
adc
push
sub
ins
in
daa
pop
nop
in
push
les
adc
inc
add
mov
add
js
int
cmp
(bad)
in
(bad)
mov
neg
aam
sub
push
pop
inc
add
jle
mov
dec
xor
lock
sub
cs
aam
mov
mov
mov
sti
inc
mov
test
jmp
push
mov
loope
lea
mov
adc
aad
push
add
dec
dec
xchg
add
cmp
pushf
not
and
stos
mov
rcl
fwait
mov
fwait
pop
jl
aaa
cs
out
fnstsw
mov
sar
loope
dec
mov
daa
and
in
mov
sbb
mov
popf
sbb
fcom
dec
movs
outs
xor
mov
fs
inc
xchg
scas
mov
sub
push
and
nop
not
mov
mov
sbb
les
pop
mov
mov
push
lods
iret
loope
dec
sar
adc
enter
aad
aas
jl
scas
pusha
sub
aam
mul
stc
test
xor
leave
jbe
pushf
jmp
and
rcl
inc
imul
jmp
std
adc
in
mov
xchg
(bad)
mov
or
pop
cld
pop
mov
mov
push
and
(bad)
cmp
mov
xchg
cdq
add
out
lahf
sbb
bound
pushf
jge
out
dec
imul
mov
lahf
mov
scas
mov
jmp
jo
(bad)
adc
adc
sbb
sbb
out
sar
jbe
sub
push
cs
sbb
gs
inc
inc
idiv
adc
(bad)
jl
neg
xlat
sbb
xchg
sub
mov
scas
sbb
mov
enter
int3
dec
fidiv
mov
pop
and
addr16
lds
mov
test
mov
lea
add
loopne
clc
inc
sti
pop
jae
mov
ins
xchg
cmc
loopne
test
jle
fsub
jb
stos
fnstsw
cwde
or
lea
xlat
gs
or
cmp
bnd
add
call
data16
daa
jne
sbb
lahf
lock
imul
div
stos
scas
std
fwait
mov
cmps
xor
dec
add
daa
rcr
in
cmp
xchg
push
sub
mul
mov
(bad)
and
lock
mov
or
pop
inc
(bad)
fbstp
jae
xchg
adc
mov
adc
loopne
cmp
retf
mov
and
gs
inc
sub
ret
jmp
pop
jge
mov
int3
scas
nop
and
and
test
(bad)
jge
das
add
enter
xor
fcmove
lahf
or
mov
adc
adc
jne
out
pop
pop
ins
imul
scas
dec
xchg
jnp
mov
dec
mov
stos
(bad)
lods
inc
pop
ins
(bad)
sti
mov
ficom
sub
pop
(bad)
push
pop
add
stos
cmp
mov
mov
enter
dec
jae
mov
jmp
dec
xchg
dec
xor
test
popa
push
vpcmpeqb
xor
dec
mov
lds
mov
icebp
call
jp
mov
xor
xchg
mov
ror
xor
xchg
inc
or
mov
push
cmp
stos
lods
mov
call
push
jl
out
or
mov
pop
pop
outs
ret
cmp
bound
out
call
sahf
lock
enter
not
pcmpeqb
inc
shr
sub
pusha
dec
mov
ror
xor
adc
pop
test
sub
ja
pop
xchg
jo
stos
pop
xor
js
push
mov
iret
cmp
out
pop
retf
popf
push
xchg
hlt
(bad)
aad
or
jmp
jg
sub
xor
push
(bad)
or
test
sbb
xchg
xor
mov
fs
mov
icebp
aam
mov
in
mov
add
push
or
mov
out
dec
movs
lods
adc
jg
push
outs
push
xor
and
cmp
inc
sti
repnz
pop
inc
data16
retf
fisttp
out
mov
mov
retf
icebp
add
aad
into
je
mov
inc
div
fist
inc
mov
push
mov
(bad)
pop
fild
cmp
repz
shl
into
and
inc
into
xor
mov
xchg
xchg
ds
cmp
add
(bad)
int
mov
xchg
dec
aaa
push
loop
outs
movs
neg
icebp
add
call
std
ret
addr16
sbb
dec
sub
inc
pop
and
les
or
jo
mov
xor
sub
mov
test
fistp
jmp
sub
repnz
gs
aaa
pop
into
cmp
fwait
jmp
retf
dec
cs
rol
into
push
mov
xchg
std
(bad)
loop
add
add
fwait
jo
mov
into
sub
mov
int
ja
out
inc
retf
cld
mov
fldenv
into
xor
mov
nop
inc
sysexit
adc
mov
stc
and
imul
pop
mov
push
push
idiv
xchg
add
int3
clc
mov
add
jo
call
aam
jb
fsubr
lods
stc
mov
push
int
cmps
into
inc
jne
movs
pop
cmp
shl
into
mov
test
jg
rcr
pop
xor
sub
push
aad
dec
adc
das
sub
daa
xlat
call
sub
cmp
push
nop
clc
push
cld
test
sbb
imul
(bad)
movs
add
push
adc
add
jge
inc
push
cld
push
stc
xlat
cmp
dec
les
adc
ja
sbb
and
cmp
cmps
or
sbb
and
pop
outs
adc
xchg
jns
adc
movs
pop
stos
in
movs
movs
inc
sub
jge
sub
jle
xchg
outs
jmp
pushf
scas
xlat
and
pop
stc
repz
mov
aam
(bad)
(bad)
jp
xchg
xchg
inc
aam
inc
adc
fild
clc
mov
push
jmp
push
add
in
jmp
(bad)
std
mov
popf
mov
jnp
xor
test
mov
sbb
jle
jnp
arpl
inc
mov
ret
push
mov
inc
xor
xor
xchg
push
ror
fs
jmp
push
test
movs
sub
add
pop
xor
js
and
adc
push
arpl
(bad)
push
xlat
mov
pop
sti
or
shl
scas
add
mov
int3
stc
imul
adc
test
stos
or
inc
mov
icebp
jns
jb
retf
test
in
push
lods
pop
and
enter
pop
xor
test
je
inc
mov
int3
dec
pop
mov
das
mov
js
push
mov
inc
and
pop
mov
pop
ins
retf
movs
ins
test
(bad)
call
mov
movs
fist
sub
call
repnz
ins
ret
cli
loope
jmp
sbb
test
jns
sub
js
imul
push
xchg
in
and
xor
fnsave
and
jecxz
xchg
xchg
push
inc
test
xchg
lods
fisttp
sub
sub
je
lea
retf
arpl
jbe
or
xor
adc
loope
(bad)
add
call
ret
and
mov
sar
adc
in
ss
(bad)
mov
and
add
movs
xchg
and
in
movs
pushf
(bad)
pushf
pop
push
adc
lods
xor
push
mov
pusha
pop
ja
push
cli
(bad)
xchg
rcr
sub
in
(bad)
sub
push
icebp
loopne
lahf
mov
and
in
sub
rcl
sub
sub
cmp
fldenv
cmp
mov
lahf
push
cmc
stc
xlat
jne
lds
addr16
rcr
aas
jp
mov
adc
push
cld
sbb
xor
push
ret
or
push
xlat
fistp
sar
sti
inc
cmp
push
enter
mov
cld
fdiv
pop
les
imul
xor
add
mov
mov
jmp
rcr
adc
jmp
inc
jb
mov
adc
pop
cmp
ret
bound
or
ss
push
mov
jmp
arpl
or
cmp
xchg
mov
mov
xchg
rcl
xlat
push
sub
jbe
dec
inc
pop
sbb
jno
ret
mov
cmp
std
mov
ss
mov
or
jno
test
test
ins
mov
sbb
outs
push
addr16
inc
dec
or
cwde
in
repz
inc
fwait
jmp
mov
add
pop
out
push
push
mov
push
xor
mov
std
iret
lds
shl
nop
or
fistp
sub
or
or
mov
pop
mov
add
push
ja
mul
les
daa
dec
cmps
in
mov
je
lahf
sti
adc
pop
cwde
push
push
jnp
cwde
movs
inc
or
mulps
inc
cmp
sbb
lods
ds
rcr
fadd
addr16
aam
mov
call
xchg
pop
cmp
mov
idiv
dec
or
push
pop
mov
jae
movs
(bad)
push
inc
mov
(bad)
int
fnstcw
js
fild
add
jmp
sti
mov
lahf
scas
sbb
inc
xchg
dec
xor
in
sub
or
js
adc
mov
ds
or
into
jnp
arpl
cld
(bad)
jg
push
int
aaa
pop
rcl
xchg
jmp
in
int3
cmp
clc
retf
idiv
out
fldenv
test
pushf
xchg
jmp
test
das
push
repz
mov
pop
push
out
imul
cmp
es
cmp
fxch
push
adc
aad
arpl
repnz
outs
rcl
and
sbb
scas
push
test
inc
cmps
push
cmp
pop
ret
lahf
(bad)
call
imul
xchg
jmp
mov
ss
push
retf
dec
enter
jae
retf
cmps
xor
mov
add
addr16
xor
fidivr
das
out
lahf
ret
daa
inc
pop
mov
cld
sbb
xchg
add
shl
outs
(bad)
sbb
mov
pop
jle
retf
ficomp
inc
inc
ins
mov
cwde
jne
xor
mov
dec
adc
pop
shr
inc
ror
nop
mov
jo
push
icebp
fadd
movs
sahf
inc
or
add
adc
cmc
and
fwait
or
out
ja
push
mov
fld
adc
mov
cs
shr
mov
dec
or
pop
nop
outs
mov
cld
(bad)
push
dec
shl
call
enter
pop
adc
xlat
stos
in
mov
or
ja
xchg
das
add
fisubr
data16
popf
jo
fdiv
hlt
movs
fst
retf
aas
test
fs
gs
mov
shr
add
push
test
inc
int3
inc
inc
les
(bad)
icebp
lock
test
adc
xchg
add
adc
jmp
dec
nop
add
push
lods
sbb
pop
mov
jp
pop
fs
arpl
mov
push
add
xchg
dec
addr16
xor
adc
stos
ins
add
push
int
cmps
add
bound
pop
xchg
push
jo
arpl
mov
jle
cmp
dec
cs
inc
loope
xor
movs
or
push
int3
test
cwde
and
add
enter
stos
ret
sar
mov
push
dec
xor
lods
cdq
cmp
hlt
movs
addr16
mov
movs
dec
xchg
add
arpl
dec
push
imul
mov
mov
dec
jmp
add
stos
ja
push
fwait
ds
xchg
lods
pop
and
xchg
mov
ins
sbb
imul
or
fwait
push
mov
lods
and
neg
out
inc
sbb
or
out
mov
mov
xchg
cmp
fwait
(bad)
push
movs
push
mov
ret
lea
aam
xchg
aad
pop
or
sbb
xlat
cs
inc
dec
xor
inc
mov
add
repnz
add
int
(bad)
cli
mov
dec
mov
bound
test
int
imul
jge
out
and
mov
dec
push
retf
popa
cmp
mul
push
dec
or
outs
lea
(bad)
je
cmp
inc
mov
xor
sub
retf
int3
jle
pop
retf
sub
out
loop
mov
mov
adc
test
push
stos
fnstcw
cmp
fidiv
add
dec
inc
add
pushf
mov
push
or
popf
arpl
mov
in
loop
adc
jmp
jb
mov
jnp
push
jns
sub
inc
and
adc
rcr
jg
jmp
rcr
mov
xchg
frstor
jns
arpl
inc
inc
std
sbb
mov
or
dec
xchg
fbld
xor
adc
retf
out
in
push
hlt
movs
mov
in
ret
add
enter
add
pop
scas
call
and
movs
mov
addr16
and
mov
aas
pop
fdivr
call
lahf
nop
sub
push
leave
and
imul
mov
shr
ins
cmc
mov
hlt
rol
sub
or
inc
outs
pop
push
sub
jle
addr16
mov
xchg
xchg
mov
pop
std
add
dec
jnp
and
xor
xor
loopne
das
addr16
mov
jmp
out
in
int
int
xor
es
adc
dec
cmp
and
mov
movs
enter
mov
jne
cdq
lahf
out
mov
(bad)
dec
jbe
dec
js
pushf
mov
sbb
out
inc
mov
xchg
fistp
mov
stos
xlat
movs
add
jo
lods
jb
xor
shl
test
mov
lods
scas
std
pushf
fild
push
cdq
xor
pop
dec
jmp
arpl
into
(bad)
movs
and
sbb
pop
cs
cmps
pop
mov
push
add
sub
push
xor
es
jbe
cdq
popf
lahf
div
imul
push
or
jg
push
ret
ins
inc
xor
xor
jns
mov
out
add
add
ins
mov
and
lods
loop
pusha
test
push
cwde
in
push
inc
pop
pop
jo
pop
inc
shl
xchg
mov
push
and
cmc
add
test
clc
jbe
or
lock
loope
imul
cmp
sub
cmps
and
xchg
sbb
adc
popa
cs
(bad)
rcl
repnz
adc
push
aaa
fadd
cmps
cmc
es
pop
cli
pop
mov
and
fadd
hlt
inc
into
or
xchg
(bad)
or
push
iret
cmps
pop
mov
inc
dec
out
das
cmp
push
or
jnp
fs
sub
pop
xchg
inc
sti
sub
xchg
sar
push
jmp
jns
mov
cmp
aam
lahf
xchg
in
jne
call
pop
jp
ins
cmps
adc
(bad)
cmps
inc
stos
mov
std
jmp
add
(bad)
cmp
movs
cld
jbe
cld
sbb
dec
jl
leave
adc
jp
mov
mul
xor
fadd
and
int3
ja
mov
dec
ins
dec
jae
call
(bad)
xchg
mov
xchg
or
cld
cmc
cs
mov
inc
cmp
nop
fwait
pop
in
pop
lahf
adc
mov
out
push
jbe
inc
inc
push
push
in
mov
fiadd
adc
movs
mov
leave
dec
movs
mov
and
jns
jno
mov
jae
fnstsw
jp
or
div
add
xchg
imul
dec
rcr
push
xchg
sub
repz
or
fwait
inc
(bad)
mov
shl
add
dec
mov
and
xor
iret
jmp
rcr
hlt
mov
push
push
jmp
popa
adc
adc
and
inc
and
cmp
inc
aas
fcomp
xchg
adc
ret
jle
leave
pusha
fsincos
pop
cmc
retf
es
inc
leave
leave
in
das
fld
(bad)
aam
xchg
mov
sbb
push
push
jne
lods
int
lods
lods
lea
inc
shr
call
fst
in
jb
retf
mov
in
pop
imul
(bad)
loopne
adc
outs
mov
cs
xlat
or
pop
retf
out
mov
movs
sahf
push
cwde
mov
movs
adc
inc
add
and
and
in
mov
mov
mov
jg
imul
xor
adc
sbb
and
fwait
xchg
xchg
scas
sysenter
pop
scas
mov
fidivr
aaa
mov
or
sub
int
mov
xchg
push
adc
dec
(bad)
data16
sbb
and
pop
push
fild
cwde
inc
pusha
or
movs
and
pop
cmc
cmp
inc
inc
mov
sbb
fwait
test
rcl
pop
sub
pop
mov
adc
repz
call
xchg
xchg
in
mov
movs
pop
push
add
xor
jb
icebp
popf
pop
out
jnp
xchg
xor
mov
pop
pop
push
xlat
xchg
inc
push
aam
sub
or
rcr
test
ja
xlat
xor
mov
ins
ss
popw
or
mov
pop
call
lea
imul
gs
shl
mov
mov
and
push
pop
xor
xor
xor
and
iret
xchg
cli
push
bnd
or
sbb
xchg
dec
iret
cmc
imul
or
cli
xchg
outs
int
shl
jo
mov
cmp
arpl
fisub
stos
mov
arpl
test
or
pusha
adc
mov
cmc
push
add
pop
(bad)
int3
cmp
mov
imul
stos
mov
test
xlat
add
dec
(bad)
xchg
ins
jmp
dec
adc
gs
mov
or
pop
es
scas
cmp
retf
inc
mov
lea
shl
xor
sub
out
fild
das
cwde
cmp
hlt
sbb
cmp
out
loop
ficom
sbb
jmp
adc
cmp
and
std
pop
cs
add
cmp
lahf
sbb
jb
inc
arpl
mov
sbb
sbb
(bad)
lea
push
mov
in
test
in
lds
xchg
sub
aad
push
pop
mov
mov
sub
out
pop
xchg
mov
clc
pop
xor
jmp
sti
pop
aas
adc
or
(bad)
xor
cmp
stos
ins
neg
jmp
sub
inc
and
push
call
or
mov
retf
xchg
es
(bad)
jp
cmps
leave
in
dec
daa
out
ror
jbe
push
xlat
ins
std
dec
cmp
cmp
scas
mov
push
mov
pop
pushf
js
cld
add
call
(bad)
pop
cmp
call
or
pop
push
ror
push
sbb
aad
in
xor
stc
retf
mov
pop
out
sbb
and
outs
add
lea
inc
cmps
call
mov
sbb
cmp
adc
mov
mov
mov
cmp
adc
pop
stc
imul
enter
pop
sbb
mov
ds
mov
xchg
cwde
sti
push
jo
mov
mov
pop
aad
jmp
inc
mov
xor
mul
shr
xchg
push
and
xchg
arpl
sbb
xor
aam
jmp
test
and
movs
lock
mov
mov
pusha
stos
sbb
sub
imul
cwde
lahf
add
or
adc
repnz
pop
sub
popf
ss
ss
es
js
dec
mov
push
(bad)
dec
(bad)
aad
sbb
repnz
sar
pop
mov
movs
cdq
repnz
das
add
pop
jmp
pop
pop
adc
jmp
jecxz
int3
adc
rcr
mov
xor
fsubr
nop
out
xor
sub
jle
xchg
jbe
push
xor
mov
and
sub
and
mov
mov
mov
mov
and
and
dec
and
loope
push
push
imul
pushf
cwde
in
shl
inc
inc
mov
pop
test
ret
xor
lahf
push
cmp
lds
add
imul
outs
in
mov
adc
and
dec
inc
jnp
add
xor
mov
and
retf
cli
frstor
(bad)
ror
jecxz
xchg
hlt
pop
and
add
adc
mov
or
dec
stc
and
pop
mov
and
sub
sahf
rol
movs
jecxz
or
shl
sahf
outs
movs
cmp
(bad)
ficomp
dec
sahf
adc
mov
loop
pop
cmp
loop
push
cdq
js
xchg
jge
int3
lea
and
adc
mov
push
shl
hlt
pop
aam
xchg
jnp
inc
jmp
jmp
repnz
sti
push
fcmovnbe
icebp
in
push
(bad)
retf
jle
fisubr
push
push
or
fst
xchg
dec
test
cmp
dec
fstp
add
jnp
fistp
and
daa
mov
mov
push
sub
ror
dec
icebp
cmp
dec
(bad)
push
arpl
xchg
inc
shl
xchg
sub
fwait
inc
sbb
out
bound
jne
das
adc
aaa
ds
mov
movs
dec
test
cmps
and
push
dec
mov
jnp
mov
cmp
add
sub
mov
add
sbb
in
jg
jmp
jmp
retf
das
into
sbb
inc
add
pop
and
test
aas
cmp
test
out
adc
outs
aam
push
(bad)
sub
adc
das
dec
ja
nop
sbb
cmp
outs
mov
out
mov
daa
ins
xchg
push
mov
out
out
pusha
ret
pop
sub
jecxz
aad
daa
cmp
adc
jbe
mov
pop
or
bound
loopne
push
xor
and
hlt
aaa
mov
add
test
jnp
mov
out
loope
out
jnp
rcl
inc
iret
into
add
out
xor
jbe
int
test
jmp
movs
popa
add
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
in
popa
lods
ret
jg
retf
adc
adc
jecxz
pop
jmp
(bad)
nop
jb
retf
xor
out
dec
add
jne
add
jne
add
and
add
jne
add
add
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
