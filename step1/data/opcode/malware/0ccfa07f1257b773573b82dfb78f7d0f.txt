int3
dec
(bad)
mov
ds
sub
out
xor
and
ds
loop
push
(bad)
shl
add
retf
and
ds
test
ds
and
mov
add
jbe
(bad)
mov
(bad)
dec
out
add
mov
out
sub
(bad)
mov
mov
xor
dec
ss
cdq
mov
and
ds
mov
cmps
std
sahf
test
ins
popf
jbe
push
retf
dec
std
push
pop
xor
(bad)
popf
pop
std
ds
jle
gs
int
std
aaa
je
fisttp
cmc
ins
popf
jbe
mov
sub
jno
mov
je
pop
xchg
mov
cmp
and
xor
std
ds
test
mov
mov
fstp
jnp
std
mov
fnstenv
stos
mov
inc
pop
cmc
mov
arpl
std
ds
sub
stc
ds
dec
in
mov
int
ds
and
jnp
std
mov
int
cmp
adc
mov
jl
ja
outs
jb
std
ds
lods
rol
arpl
mov
adc
pop
mov
sbb
ror
arpl
addr16
jg
push
and
icebp
aaa
or
inc
jmp
xlat
shl
cli
iret
lods
xchg
cs
jb
std
xor
sub
mov
(bad)
rcr
jo
mov
inc
add
xor
cmp
push
fisttp
ins
and
xor
xchg
mov
mov
and
mov
mov
and
mov
and
ds
mov
mov
jae
std
ds
retf
xor
mov
fmulp
cs
std
(bad)
stc
pop
std
ds
in
sar
dec
jl
leave
icebp
inc
retf
and
iret
cdq
cld
ds
and
rcl
xchg
mov
xchg
and
ds
pop
adc
std
push
rcr
data16
std
ds
retf
push
std
ds
je
(bad)
arpl
push
push
xor
sbb
and
ds
int
ins
popf
jbe
pop
and
add
inc
jl
out
and
out
add
std
push
retf
dec
aad
mov
xchg
sbb
std
push
jmp
mov
ds
fmulp
push
jnp
std
sar
dec
jl
fmulp
push
jnp
std
mov
xor
movs
dec
retf
and
rcl
xor
xchg
lods
(bad)
stc
pop
std
ds
cdq
popf
retf
and
or
test
cs
in
jb
and
ins
popf
jbe
mov
dec
mov
mov
ror
xor
cmp
std
push
enter
retf
dec
std
ds
mov
std
(bad)
xor
ds
loop
stc
popa
data16
ds
fiadd
dec
iret
adc
mov
aad
shl
xchg
std
mov
(bad)
xor
scas
(bad)
adc
ds
leave
add
and
enter
scas
imul
lea
and
ds
in
add
std
ds
retf
cmp
cld
ds
mov
or
cli
loope
pusha
nop
call
jle
(bad)
ja
cmp
frndint
mov
jnp
jno
jnp
jno
mov
dec
std
push
retf
dec
std
sar
inc
inc
retf
and
out
pop
retf
and
enter
(bad)
and
dec
rcr
mov
xor
loope
retf
fimul
(bad)
or
out
dec
aaa
leave
gs
retf
and
enter
(bad)
and
jle
xor
mov
jae
std
ds
retf
xor
sbb
cli
loope
popa
xchg
call
lods
push
push
or
fnstenv
add
cmp
cmp
dec
std
sar
movs
inc
retf
and
xlat
mov
cli
loope
or
mov
dec
std
sar
mov
clc
xor
add
jmp
xlat
mov
cli
loope
xor
int
cmp
xchg
call
jle
out
jb
imul
stos
push
call
test
into
inc
fs
scas
shl
test
(bad)
xor
mov
aas
and
aaa
and
push
cli
cli
jbe
xor
sbb
jnp
test
(bad)
xor
mov
and
jnp
and
or
repnz
(bad)
out
mov
mov
sar
push
add
or
mov
jbe
fistp
mov
jnp
retf
mov
mov
mov
mov
sar
push
add
or
dec
ror
cmp
add
mov
dec
xor
mov
shl
shl
popa
xchg
jp
std
sahf
test
xchg
and
and
mov
retf
jb
imul
cmp
dec
ins
dec
pop
dec
movs
add
xor
and
cmp
fs
mov
mov
sar
push
add
or
and
shl
or
push
sub
(bad)
into
inc
je
mov
sbb
into
and
shl
loope
retf
jbe
aaa
fiadd
rol
cld
inc
mov
shl
cmp
xor
jo
retf
rcl
fisttp
loope
popf
jbe
arpl
out
ret
mov
inc
add
aas
(bad)
cwde
mov
mov
(bad)
enter
jne
and
mov
sub
xchg
outs
inc
loopne
aam
(bad)
push
ds
inc
icebp
movs
mov
mov
retf
inc
clc
iret
cmp
mov
fnsave
test
(bad)
cmp
adc
aaa
jle
gs
test
mov
stos
mov
sub
mov
ret
aam
inc
je
(bad)
retf
sub
ds
pop
cmc
test
ins
lahf
cs
cmp
fsub
pop
add
jle
stos
test
and
fdivrp
dec
jg
std
mov
sub
cmp
and
aaa
test
mov
leave
scas
fnstenv
test
ret
cmps
test
int
ins
popf
jbe
dec
fld
add
xor
jecxz
imul
clc
dec
jg
std
mov
retf
mov
repnz
je
loop
jbe
(bad)
cs
sub
sbb
jle
cmp
mov
fnsave
test
retf
add
jnp
adc
std
sahf
test
outs
popf
jbe
dec
ret
sahf
adc
inc
jl
nop
js
ds
mov
(bad)
dec
mov
(bad)
mov
add
inc
add
mov
ja
push
fiadd
outs
inc
pop
add
ja
xlat
fiadd
mov
add
test
cs
push
je
mov
aas
xor
adc
mov
dec
std
push
retf
dec
add
retf
and
push
retf
dec
std
(bad)
xor
ds
rcl
xor
int3
ds
(bad)
sbb
xchg
jg
test
jb
imul
cli
sbb
aam
inc
out
add
mov
lahf
push
cmp
cwde
sub
iret
fimul
ins
ret
stos
sti
sar
in
cwde
sub
(bad)
je
aaa
test
(bad)
and
jg
test
int
ins
popf
jbe
dec
ret
sahf
js
popf
gs
retf
stc
dec
pop
std
mov
retf
leave
inc
dec
retf
and
cmp
sub
(bad)
push
push
std
ds
loop
ror
std
ds
loope
in
mov
hlt
(bad)
mov
ret
mov
fs
ds
test
ud2
sub
xor
je
and
cmp
mov
imul
ds
daa
add
inc
xor
sub
and
ds
test
mov
(bad)
sbb
cli
loope
in
mov
hlt
(bad)
mov
retf
and
add
xor
jl
movs
push
std
ds
loope
pusha
nop
call
inc
push
retf
and
(bad)
or
ja
test
mov
inc
retf
and
xchg
mov
ds
xchg
mov
mov
cs
retf
mov
sub
std
xchg
ret
adc
add
inc
loop
add
mov
lahf
push
cmp
popf
sub
pop
std
ds
add
popf
mov
std
mov
retf
dec
add
retf
and
sub
add
fimul
ds
dec
cld
push
cmp
mov
shl
add
dec
in
add
std
ds
cmp
retf
and
loop
std
leave
sub
add
fwait
stos
mov
outs
inc
sbb
imul
pop
or
les
jle
aaa
and
mov
dec
inc
add
mov
and
out
loop
cmp
or
into
pop
dec
jl
push
cli
mov
retf
and
arpl
mov
fnstcw
je
mov
and
addr16
stc
aam
inc
loop
stc
mov
(bad)
ds
fs
inc
jg
std
mov
shr
rcr
test
xchg
and
cmp
cmp
je
aaa
mov
std
aaa
or
push
cmp
retf
stos
mov
rcr
std
ds
and
sub
leave
sub
add
xor
add
mov
jbe
xor
imul
aaa
sub
inc
jg
std
shl
mov
sub
add
mov
stc
je
dec
sbb
popf
mov
std
dec
rol
mov
fisubr
mov
aad
jnp
cs
xor
add
retf
and
stc
je
xchg
jg
test
int
ins
popf
jbe
sbb
xor
mov
and
mov
test
pop
xor
std
mov
sub
sti
and
std
ds
das
or
add
retf
and
mov
mov
std
aad
test
pop
adc
(bad)
fist
mov
ja
enter
mov
and
jbe
ret
lods
mov
scas
imul
ds
in
mov
retf
out
sahf
imul
shl
dec
shl
pop
xor
std
dec
lahf
sub
jg
std
aad
mov
std
mov
adc
fbstp
or
es
iret
sbb
dec
leave
retf
mov
ja
sti
sbb
int
iret
mov
or
std
js
fs
mov
dec
pop
add
xor
cwde
ret
add
push
repnz
std
(bad)
sub
push
je
loop
je
mov
and
xchg
ds
and
and
(bad)
mov
and
ds
fs
mov
mov
sar
push
add
or
mov
aad
ins
xor
cmc
sar
std
push
retf
lods
mov
push
cmp
mov
(bad)
mov
std
ds
into
mov
dec
xor
jmp
pusha
nop
call
inc
xchg
retf
and
(bad)
cmc
dec
std
ds
ja
test
or
sbb
int3
out
loop
mov
retf
dec
sbb
mov
adc
mov
aad
shl
cli
xor
add
movs
push
shl
inc
movs
adc
retf
and
stc
je
mov
and
(bad)
pop
push
std
ds
movs
xor
xor
daa
std
ds
lods
js
xor
add
daa
add
xor
cmp
dec
sbb
popf
mov
std
dec
add
push
pop
int
std
mov
rol
xor
pop
mov
inc
sbb
imul
movs
and
xor
ret
inc
movs
sbb
mov
fsubrp
add
and
ds
add
retf
sub
ds
lods
js
xor
add
mov
jbe
xor
test
cli
stc
je
dec
pop
add
les
outs
imul
jle
add
xor
fld
xor
jle
ret
test
jns
pushf
add
mov
push
mov
std
mov
lahf
add
xor
pop
mov
inc
sbb
imul
es
lods
mov
add
les
jge
fiadd
ror
jns
int3
and
push
retf
fisttp
fiadd
rcr
jle
(bad)
test
pop
inc
pushf
dec
shl
je
fiadd
rol
mov
add
xor
add
retf
and
mov
les
add
lods
js
xor
add
jno
jg
leave
int
retf
and
(bad)
cs
mov
or
pusha
std
ds
test
xor
dec
dec
jl
and
mov
jae
mov
mov
mov
shl
push
retf
fmul
pusha
std
(bad)
test
add
dec
in
add
std
ds
out
pop
jl
lods
inc
ret
xor
add
adc
shl
xor
fiadd
ds
push
idiv
dec
xchg
add
xor
std
ds
dec
cld
push
or
mov
jg
leave
lock
cli
(bad)
sbb
ror
mov
mov
arpl
mov
fadd
shl
into
fiadd
mov
xor
std
dec
shl
mov
add
retf
and
push
retf
fmul
pusha
std
(bad)
add
add
dec
in
add
std
ds
cwde
pop
jl
lods
inc
ret
xor
add
(bad)
mov
add
retf
push
idiv
dec
xchg
add
xor
std
ds
mov
std
push
retf
fmul
pusha
std
(bad)
dec
aam
ror
add
std
ds
cwde
pop
jl
lods
inc
ret
xor
add
inc
or
xor
cmp
neg
add
retf
push
idiv
dec
xchg
add
xor
std
ds
dec
cld
push
pop
ret
mov
jg
leave
mov
cli
(bad)
sbb
ror
mov
movs
dec
shl
xchg
aas
mov
dec
lods
sahf
mov
adc
mov
xor
std
dec
shl
mov
add
retf
and
push
retf
fmul
pusha
std
(bad)
cmp
add
dec
in
add
std
ds
cwde
pop
jl
lods
inc
ret
xor
add
sti
or
xor
cmp
neg
add
retf
push
loopne
retf
fmul
fiadd
rcr
cli
(bad)
sbb
ror
mov
movs
dec
shl
jl
mov
std
ds
pushf
dec
shl
clc
dec
jg
std
ds
movs
add
xor
fild
rcl
dec
jl
and
arpl
popf
scas
xchg
mov
out
loop
mov
retf
enter
and
stc
je
inc
movs
and
mov
std
add
xor
jbe
xor
mov
inc
movs
sti
cmp
and
jae
add
fwait
stos
js
xor
add
sbb
imul
stc
aam
inc
loop
inc
aaa
and
mov
dec
test
shl
and
out
xor
add
dec
pushf
inc
shl
std
ds
mov
std
pop
or
push
shl
dec
shl
jo
push
fiadd
rcr
add
movs
and
mov
fisubr
add
and
pop
fiadd
rcr
jbe
imul
rcr
std
ds
and
sub
ds
lods
js
xor
add
movs
sub
xor
fisubr
retf
and
mov
fnsave
stc
je
dec
pop
add
les
mov
fwait
stos
js
xor
add
sbb
imul
loope
adc
retf
lods
js
xor
add
movs
and
xor
fisubr
mov
or
ret
js
enter
adc
push
mov
xchg
add
xor
ds
lds
shl
mov
fwait
stos
(bad)
add
cmp
ds
cdq
cmps
pop
retf
and
fld
dec
shl
or
sar
shl
sahf
mov
jo
fiadd
rcr
jle
(bad)
mov
add
and
(bad)
ds
dec
std
(bad)
in
dec
std
ds
stc
int3
out
loop
mov
fiadd
rol
shl
mov
shl
std
ds
in
pop
or
ins
shl
adc
xor
fiadd
rol
shl
add
xor
adc
inc
mov
std
int
lods
dec
scas
xor
add
jb
std
ds
rcr
jbe
add
xor
jbe
xor
shl
ds
ds
mov
dec
test
xor
mov
shl
mov
dec
add
push
xor
sar
and
mov
fnstsw
push
std
ds
mov
inc
movs
pop
shl
add
xor
jbe
xor
xchg
mov
fld
mov
std
leave
sub
add
retf
cs
leave
and
mov
xor
adc
retf
push
retf
leave
rcl
and
dec
jge
shl
pop
or
(bad)
shl
push
shl
add
inc
movs
jns
xor
push
add
xor
adc
inc
mov
std
int
lods
dec
dec
xor
add
jb
std
ds
rcr
jbe
add
xor
jbe
xor
mov
repnz
ds
mov
dec
test
xor
test
xchg
dec
sub
mov
movs
add
xor
jbe
xor
sar
and
mov
(bad)
inc
movs
loop
retf
and
inc
fiadd
ror
jns
retf
mov
inc
add
xor
xchg
ds
or
xor
fiadd
rcr
je
aaa
cdq
ins
dec
retf
and
fld
movs
shl
add
les
mov
xor
repnz
dec
pushf
xchg
shl
std
ds
lods
js
xor
add
xchg
xchg
shl
add
mov
add
retf
mov
add
les
cmp
retf
mov
fiadd
rol
shl
mov
shl
std
ds
in
mov
or
ret
xor
add
mul
std
dec
xor
add
jle
add
xor
js
xor
add
movs
add
mov
xor
adc
mov
inc
movs
add
xor
ret
mov
shl
std
ds
in
mov
and
mov
fild
ds
fiadd
rcr
inc
cmps
stos
and
leave
sub
add
xor
add
xor
js
xor
add
dec
daa
add
xor
js
xor
add
adc
push
xor
add
adc
push
xor
add
xor
js
xor
add
dec
std
add
xor
inc
into
xor
add
mov
fiadd
ror
and
mov
leave
add
xor
jbe
xor
cmc
mov
xor
mov
inc
movs
sub
mov
fisubr
ds
(bad)
push
mov
lea
shl
mov
xor
mov
inc
movs
sub
xor
fisubr
shl
stos
ss
movs
and
xor
fisubr
ds
(bad)
push
mov
mov
shl
mov
rol
xor
jbe
xor
cmc
xlat
rcl
add
xchg
jg
test
ficom
push
push
xor
ds
and
ds
and
shl
imul
scas
adc
inc
das
test
leave
sub
mov
mov
lds
jnp
and
ds
mov
std
mov
leave
loope
retf
and
iret
leave
xchg
enter
add
mov
aad
cdq
add
pop
das
test
loop
pop
and
aaa
fiadd
shl
stc
mov
cld
ds
and
pop
loop
pop
and
mov
sbb
and
aad
out
ret
add
xchg
jg
scas
inc
fs
ds
mov
cld
iret
and
imul
rdpmc
test
push
dec
xchg
mov
mov
dec
std
push
retf
leave
mov
and
leave
adc
and
loopne
std
leave
sub
mov
pusha
add
test
mov
jbe
ret
cwde
movs
inc
ret
je
mul
jmp
mov
dec
add
scas
mov
std
xchg
std
ds
je
aaa
test
mov
retf
and
repz
fdiv
pop
popa
std
ds
adc
retf
and
sub
mov
ds
and
stos
std
pushf
mov
clc
jle
pusha
std
aaa
or
jno
leave
and
add
std
les
add
dec
mov
jl
mov
std
jle
dec
(bad)
ds
fdivrp
dec
jg
std
ud2
mov
cmp
jle
or
into
sbb
retf
enter
and
sar
sti
push
les
cmp
push
lock
daa
mov
lds
xor
lds
fsubr
std
and
(bad)
ds
fdivrp
push
push
pusha
std
xlat
int
std
ds
mov
sar
cli
ud2
enter
and
shl
leave
sub
jge
sar
mov
cs
popa
std
xlat
in
add
cmp
and
dec
int3
adc
ds
loopne
add
and
sar
icebp
shl
cmp
mov
cli
ud2
enter
and
sar
xor
sahf
mov
pop
jg
enter
fimul
cmp
mov
cli
ud2
enter
and
sar
cmp
shl
std
stc
into
int
jg
and
ds
enter
fimul
cmp
mov
cli
ud2
enter
and
jmp
in
mov
(bad)
stc
into
gs
and
ds
enter
fiadd
cmp
and
mov
cli
jmp
in
mov
mov
ds
pusha
jg
and
push
push
pusha
std
mov
and
es
pusha
std
jle
int3
std
ds
adc
mov
jle
leave
and
push
push
pusha
std
xlat
adc
std
ds
fs
and
ss
popa
std
xlat
add
std
ds
pusha
jg
and
push
push
pusha
std
xlat
jno
std
ds
mov
repz
push
ds
and
les
std
leave
sub
jle
repz
ins
ds
and
(bad)
and
cld
ds
mov
std
push
jae
(bad)
ds
(bad)
sbb
mov
je
inc
sar
sahf
mov
repnz
jno
jl
sub
xor
dec
mov
jl
sbb
ds
and
ds
pop
mov
mov
jge
sar
retf
push
dec
jl
retf
daa
mov
lds
xor
lds
call
mov
(bad)
adc
ds
jmp
add
mov
and
mov
dec
out
ds
test
js
and
push
std
mov
(bad)
sbb
mov
je
les
std
sbb
and
ds
or
jge
lea
int3
test
mov
ds
cs
retf
and
mov
int
clc
ss
popa
std
xchg
pop
std
ds
je
daa
test
xor
or
dec
and
ds
pusha
std
aas
into
sub
retf
mov
std
cmp
xor
inc
cmp
mov
pop
or
mov
mov
ds
retf
mov
stc
dec
out
mov
std
mov
inc
loopne
into
lea
mov
ficom
std
mov
cmp
push
lock
int3
mov
std
cmp
icebp
scas
mov
std
aad
test
js
xor
scas
mov
ja
inc
and
std
ror
ins
jle
xor
mov
les
(bad)
mov
ds
sbb
icebp
scas
mov
std
aad
test
js
xor
scas
mov
ja
inc
and
std
ror
ins
jle
add
mov
les
(bad)
mov
ds
xchg
mov
out
and
cmp
(bad)
cmp
std
sahf
test
outs
fwait
ja
adc
pop
jl
mov
sbb
xor
mov
jno
std
(bad)
test
ds
out
sub
and
ds
and
jno
std
imul
sub
mov
inc
add
test
mov
add
std
imul
or
mov
xchg
jne
arpl
imul
or
mov
xchg
pusha
jno
std
imul
and
add
test
mov
stos
test
stc
cld
out
loop
cmp
movs
inc
jl
lods
mov
bound
std
stc
mov
in
retf
and
stc
je
dec
inc
adc
inc
fs
mov
sar
jnp
popa
std
ds
mov
push
pop
frstor
std
mov
into
push
dec
jl
mov
daa
jns
and
fld
gs
mov
mov
ds
and
retf
and
mov
push
inc
jl
test
fidiv
mov
jnp
std
ds
mov
std
stc
mov
jle
jae
jo
ja
mov
jb
std
ds
rcr
mov
lods
push
retf
and
ds
sbb
xor
mov
sub
popa
outs
mov
jno
mov
daa
add
leave
jge
retf
and
imul
outs
lods
mov
(bad)
dec
inc
std
ds
mov
xor
pop
push
retf
dec
std
push
iret
dec
sti
sar
std
mov
retf
fimul
ds
fdivrp
dec
jg
std
mov
leave
lods
sar
add
aas
mov
sbb
int
push
hlt
mov
std
popa
xchg
jp
std
sahf
test
mov
aaa
push
lods
or
stos
mov
cld
inc
je
mov
sub
mov
inc
ins
add
nop
adc
push
retf
(bad)
fwait
lods
mov
(bad)
mov
jno
shl
rcr
bound
stos
mov
stos
and
leave
scas
fnsave
test
ret
test
cs
jne
jb
mov
retf
fdivrp
dec
jg
std
sar
in
mov
or
dec
int
ins
popf
jbe
dec
ret
stos
mov
mov
xchg
stc
add
fdivrp
ds
push
leave
xor
retf
fdivrp
ds
push
aad
jge
retf
fdivrp
ds
push
loope
jge
retf
fdivrp
ds
push
in
xor
retf
fdivrp
ds
cs
leave
and
mov
xor
enter
cmc
test
add
les
stc
cmp
xchg
jmp
mov
inc
(bad)
pop
or
js
retf
and
mov
mov
jmp
inc
inc
fstp
enter
fstp
aas
dec
movs
test
mov
iret
daa
rcl
and
dec
xchg
cs
jnp
dec
cmp
push
ja
std
outs
and
ds
cs
imul
sub
call
ins
fwait
leave
test
jnp
mov
in
mov
xor
aas
xor
(bad)
jnp
mov
or
enter
dec
leave
stc
mov
aad
sub
and
ds
retf
jge
add
xor
inc
jl
and
aas
and
add
xor
clc
dec
jg
std
mov
lahf
test
jbe
sbb
je
dec
leave
(bad)
mov
mov
jge
int
mov
inc
fnstcw
iret
cs
cmp
sbb
inc
ds
and
(bad)
into
mov
jmp
adc
mov
cmp
stc
mov
fisub
std
ds
mov
cwde
mov
imul
inc
fnstcw
leave
mov
lods
mov
mov
sti
cmp
addr16
dec
leave
stc
xor
sti
add
and
ds
and
dec
in
xor
mov
xor
aas
xor
cld
out
leave
stc
mov
fnstenv
fld
mov
xor
std
ds
sbb
je
and
mov
mov
sti
aas
mov
leave
(bad)
mov
clc
test
mov
iret
daa
rol
das
rol
and
dec
int3
sbb
ds
and
ds
stos
test
inc
jne
cmp
fstp
iret
test
sub
and
mov
std
xor
add
xor
mov
mov
mov
stos
ror
dec
jl
stos
mov
and
jge
cmc
and
(bad)
enter
cmp
std
dec
fldenv
jnp
or
cmp
mov
and
mov
mov
xchg
test
or
push
mov
int3
in
frndint
out
leave
jns
xor
movs
ror
dec
jl
cs
cmp
sbb
ds
and
ds
push
fnstsw
lds
ja
int3
test
add
repnz
fidiv
lods
mov
mov
fnstenv
sti
aam
inc
(bad)
in
icebp
je
aas
lods
mov
retf
(bad)
and
mov
ds
(bad)
dec
inc
mov
cld
in
icebp
je
retf
out
dec
leave
stc
mov
fnstcw
cmp
enter
and
xor
dec
jl
mov
jo
aad
cld
out
dec
leave
stc
mov
fnstcw
cmp
test
add
and
ds
ja
mov
fmulp
sub
push
add
xor
cmp
xchg
jg
test
jge
ds
leave
cmp
and
(bad)
xor
cmp
retf
leave
dec
fs
and
ds
and
int3
out
fst
add
or
fdivrp
mov
retf
es
sub
add
retf
push
in
xor
push
shl
jge
into
inc
inc
jl
and
loope
fdivrp
dec
fsubr
dec
mov
dec
sbb
std
cmp
and
pusha
les
add
xor
aaa
xor
lock
ja
std
outs
and
push
mov
mov
cmps
mov
repnz
adc
xor
aaa
and
lock
arpl
outs
or
push
xor
leave
sub
cld
movs
ds
stos
push
mov
xor
scas
mov
jge
cmp
add
retf
mov
mov
and
test
ins
add
xor
js
and
add
les
add
sub
jle
fiadd
ins
jle
and
mov
les
add
sub
jbe
fidiv
jg
test
jmp
dec
jl
mov
add
les
adc
mov
stc
and
xor
clc
dec
jg
std
mov
cmc
and
xor
jmp
aaa
cmp
(bad)
mov
shl
int3
shl
xchg
(bad)
std
ins
and
mov
leave
test
xor
add
mov
std
add
xor
sub
xor
adc
ror
dec
jl
mov
add
and
add
retf
and
mov
into
add
xor
and
and
fiadd
mov
aaa
sub
mov
inc
mov
push
jl
fidiv
retf
(bad)
jmp
and
imul
leave
test
stc
add
xor
mov
mov
std
dec
push
mov
std
dec
les
std
ds
movs
jge
xor
push
jo
loop
cs
and
sar
ds
leave
in
xor
movs
mov
xor
std
aas
retf
stos
js
adc
fdivrp
repnz
adc
xor
repnz
xor
mov
adc
add
and
movs
ds
enter
and
mov
adc
xor
pop
cmp
xor
std
mov
aad
shl
retf
add
inc
mov
shl
cmp
leave
test
jmp
and
leave
and
mov
xor
loope
fidiv
aas
into
add
or
push
or
(bad)
cmp
dec
sub
ror
shl
retf
add
iret
and
dec
jl
clc
dec
jg
std
mov
xor
mov
jg
jl
leave
pop
imul
inc
rol
sub
sbb
push
mov
inc
movs
gs
fidiv
imul
rol
loopne
fidivr
xlat
and
mov
mov
shl
sahf
adc
mov
shl
mov
mov
shl
xchg
adc
add
xor
js
adc
add
js
adc
add
xchg
and
xor
adc
mov
cmc
and
xor
js
adc
add
stos
js
adc
add
xor
js
adc
add
xor
mov
mov
dec
std
mov
xchg
and
xor
pop
xor
fiadd
jmp
sub
cld
ds
push
loope
ficom
movs
xor
mov
pop
rcl
shl
cmp
lods
and
xor
(bad)
mov
inc
rol
push
pop
popa
std
xor
push
shl
cmp
leave
stos
jmp
ds
mov
shl
xchg
(bad)
std
ins
and
ds
test
mov
add
or
js
retf
mov
dec
sbb
ds
stos
js
and
add
jge
rcl
and
dec
les
jns
retf
xlat
shl
std
ds
movs
or
xor
jbe
into
and
ds
mov
(bad)
cmp
sbb
xor
cmp
retf
mov
add
inc
xchg
sbb
xor
je
and
into
dec
leave
(bad)
mov
inc
sar
enter
mov
leave
stc
mov
inc
sar
into
mov
mov
push
fdivrp
dec
jg
std
xor
pop
loopne
fidivr
leave
test
sub
add
dec
movs
pop
loopne
fdivrp
xor
rcl
and
dec
(bad)
std
ds
leave
add
dec
lds
shl
mov
retf
dec
aad
shl
pop
cmp
mov
enter
inc
ror
dec
stos
push
ret
push
xor
cmp
retf
mov
std
ds
push
aad
neg
ds
and
dec
aad
rol
and
ds
push
jmp
ds
and
dec
shl
ds
push
(bad)
jns
jmp
and
xor
cmp
ss
xor
push
shl
lods
sar
shl
jmp
add
dec
in
mov
xor
mov
or
xor
std
mov
aad
shl
cmp
clc
cmp
leave
loopne
cmp
ins
add
xor
je
fcmovu
js
and
add
xor
stc
ds
push
sub
jl
enter
fidivr
cmp
add
retf
mov
mov
and
test
push
push
shl
gs
test
mov
stos
mov
sub
jnp
mov
jo
cdq
call
pop
xor
add
mov
(bad)
jo
mov
xor
ds
rcr
mov
je
loop
je
xor
or
std
int
lods
sub
adc
or
std
int
mov
mov
cld
loop
je
xor
mov
mov
cs
imul
sti
mov
shl
rcr
sbb
retf
and
jnp
and
retf
and
mov
cs
imul
mov
scas
retf
and
mov
jge
cld
add
and
ds
inc
jp
and
leave
scas
fnstenv
test
mov
mov
ds
mov
jge
xor
repnz
ret
cli
mov
dec
(bad)
dec
ret
jle
and
repnz
loope
xor
cli
mov
dec
add
out
loope
ds
sbb
ds
and
cmp
add
xor
ror
and
dec
rcl
aas
repz
stc
mov
mov
cld
mov
dec
jae
shl
ret
jmp
enter
aaa
sbb
mov
shl
ret
sbb
add
xor
jnp
cs
cmp
retf
push
stc
mov
jge
add
jp
std
sahf
test
outs
cwde
ja
mov
sub
fisttp
leave
xchg
(bad)
je
aaa
test
push
xor
std
ds
dec
std
(bad)
and
ds
sar
xor
jge
retf
mov
ret
bound
and
aad
outs
jle
retf
popa
xchg
jp
std
sahf
test
xchg
add
and
scas
ds
ja
and
ds
(bad)
sbb
xor
cmp
mov
rol
fwait
leave
std
imul
and
leave
sub
js
adc
add
sub
add
cs
ds
mov
je
loop
je
xchg
jg
std
sahf
test
outs
pushf
sahf
ins
adc
and
leave
sub
mov
mov
dec
std
(bad)
mov
call
jle
(bad)
imul
cmp
and
push
retf
dec
jge
retf
and
cmp
dec
fimul
ds
test
mov
dec
pop
icebp
ds
mov
popf
jae
and
(bad)
and
ds
leave
and
and
loope
outs
mov
and
mov
fld
mov
std
leave
sub
mov
ds
pop
icebp
ds
test
into
and
jo
xor
or
push
retf
ja
test
adc
ret
cmps
test
jno
push
add
shl
and
mov
and
push
iret
dec
std
push
retf
dec
std
ds
loope
dec
ret
leave
mov
retf
and
fild
dec
iret
adc
mov
and
push
leave
dec
std
push
retf
ja
ins
cdq
and
mov
sub
add
sbb
je
mov
jae
sar
std
mov
jno
cmp
rcr
jl
ja
mov
and
push
retf
cdq
das
add
and
fld
add
stc
jae
std
ds
jle
gs
test
cs
push
push
push
jl
mov
and
push
iret
dec
std
push
retf
dec
std
ds
loope
dec
ret
leave
dec
outs
retf
and
frndint
mov
shl
ud2
retf
leave
dec
std
push
retf
ja
mov
lods
mov
cs
icebp
push
retf
ja
xchg
fwait
and
xchg
push
std
ds
je
xor
mov
mov
mov
stos
mov
sub
jnp
jmp
sub
std
ds
cli
je
and
repnz
pop
cld
std
mov
xor
aad
sar
std
(bad)
lea
ds
add
sahf
fst
(bad)
stc
jne
ds
in
movups
out
xor
jecxz
mov
leave
loope
retf
and
ret
(bad)
(bad)
arpl
pop
adc
mov
iret
out
add
data16
or
jl
leave
or
and
ret
stos
mov
mov
aad
pop
xor
add
jp
std
sahf
test
mov
pushf
stos
mov
stc
mov
out
jecxz
jbe
aaa
test
mov
leave
scas
fnstenv
test
ret
pop
jl
leave
push
ins
retf
and
jge
(bad)
outs
mov
leave
imul
data16
leave
mov
arpl
(bad)
dec
jb
ds
mov
std
ds
jg
test
int
ins
popf
jbe
aaa
les
std
ds
je
pop
test
pop
or
pop
aas
retf
mov
cwde
(bad)
retf
mov
or
adc
or
std
int
mov
std
mov
int
cmp
cmp
mov
sub
mov
retf
adc
push
mov
stc
je
les
mov
and
adc
iret
mov
nop
ror
add
push
sub
cmp
je
adc
repnz
retf
jge
add
jge
clc
iret
dec
loope
aas
mov
jge
xor
dec
adc
out
loop
push
xor
and
ds
(bad)
push
mov
cmc
je
inc
fs
xor
imul
dec
sub
icebp
xchg
(bad)
cmps
and
les
aas
aas
mov
jbe
and
repnz
fs
std
hlt
dec
std
ds
fs
xor
mov
sub
mov
xchg
test
les
jbe
(bad)
cs
jle
stos
test
les
cld
jnp
stos
mov
test
mov
xchg
xor
mov
and
xchg
cmp
dec
in
ins
scas
pop
adc
scas
pop
mov
jle
mov
scas
pop
popa
ins
scas
pop
mov
jle
mov
scas
pop
popa
ins
scas
pop
mov
pop
adc
daa
scas
pop
mov
xchg
xchg
mov
fisttp
gs
or
pop
mov
dec
xlat
mov
scas
pop
adc
scas
pop
mov
mov
pop
sbb
dec
daa
mov
scas
pop
inc
ins
scas
pop
mov
pop
and
popf
scas
pop
mov
scas
lods
leave
std
ds
and
scas
into
mov
jle
mov
outs
mul
scas
inc
cmp
pop
mov
jbe
mov
scas
inc
jno
scas
pop
mov
sub
dec
loop
scas
pop
mov
cmc
pop
mov
scas
mov
ins
scas
pop
mov
inc
mov
scas
dec
sbb
scas
pop
mov
neg
ins
scas
stos
mov
scas
pop
mov
xlat
js
add
retf
xor
xchg
mov
ds
gs
or
pop
mov
xchg
xor
scas
pop
mov
popa
pop
mov
scas
pop
mov
ins
dec
cdq
mov
scas
pop
call
adc
cmp
pop
mov
nop
ins
scas
pop
mov
mov
mov
scas
pop
(bad)
or
pop
mov
scas
pop
jns
scas
pop
mov
add
int
pop
mov
aas
xor
stmxcsr
ins
xchg
xchg
mov
ds
mov
dec
cdq
mov
scas
pop
call
adc
cmp
pop
mov
nop
ins
scas
pop
mov
mov
mov
scas
pop
(bad)
or
pop
mov
scas
pop
jns
scas
pop
mov
cmp
leave
or
pop
mov
aas
xor
stmxcsr
ins
pop
pop
mov
scas
pop
inc
adc
fcmovu
add
or
dec
int
ins
popf
jbe
arpl
stos
mov
xor
add
mov
call
enter
mov
int
jnp
(bad)
cwde
rol
sbb
mov
std
ds
std
ds
test
aas
cmp
jno
fiadd
addr16
jecxz
imul
mov
cld
inc
je
mov
int
mov
(bad)
cmp
ds
fs
ds
std
ds
cs
imul
add
sbb
jbe
sub
jne
xor
(bad)
mov
inc
stc
cld
into
mov
dec
les
jne
les
std
ds
push
in
mov
and
xor
pop
pop
add
std
ds
add
aaa
dec
cmc
push
pop
and
ds
movd
je
ds
cs
jnp
jno
out
shr
mov
leave
int
retf
and
outs
inc
stc
cld
into
fwait
leave
fnsave
and
out
stos
mov
cld
inc
je
mov
mov
repnz
cs
xor
add
jp
std
sahf
test
mov
pushf
lahf
or
cmp
je
pop
test
(bad)
lds
ds
std
cmp
cmp
cld
hlt
or
lock
ds
inc
icebp
movs
mov
test
or
inc
fs
cli
jbe
std
ds
imul
ficomp
pop
add
ss
loop
inc
movs
sar
and
mov
stos
jmp
ds
rcl
outs
je
and
mov
fmulp
add
mov
add
pushf
mov
jo
and
(bad)
and
leave
sub
out
xor
and
or
adc
mov
jbe
std
mov
fst
sub
(bad)
jnp
stos
call
pand
cmp
add
or
and
pop
pushf
mov
aad
test
aas
cmp
mov
or
add
jl
and
out
arpl
pop
mov
(bad)
out
fdiv
out
and
mov
retf
stos
sub
xchg
add
or
in
aaa
sbb
shr
arpl
(bad)
adc
inc
fs
sbb
inc
pop
xor
jl
je
les
hlt
jmp
mov
jl
jmp
std
mov
arpl
mov
and
(bad)
jbe
std
outs
and
ds
mov
inc
jl
test
retf
je
cmp
je
add
mov
or
or
push
inc
jl
and
bnd
std
pop
mov
(bad)
inc
jl
test
into
and
je
retf
clc
inc
stc
(bad)
jnp
stos
call
pand
sub
adc
dec
adc
inc
jl
cs
imul
mov
mov
or
mov
mov
and
cli
jbe
std
xor
adc
sub
mov
or
or
test
inc
and
mov
dec
dec
adc
(bad)
fwait
test
cmp
retf
jno
inc
aaa
fiadd
mov
mov
and
ds
mov
and
fisub
jno
dec
sub
dec
das
leave
cmc
je
and
inc
std
ds
sbb
push
imul
ja
and
dec
loop
mov
mov
std
ins
popf
jbe
add
and
mov
std
xchg
retf
and
mov
ficomp
retf
test
(bad)
test
(bad)
xchg
ins
std
ds
mov
(bad)
(bad)
cmp
cmp
int3
loopne
and
jmp
out
xchg
test
mov
inc
mov
shl
jnp
and
adc
or
ds
cs
inc
xor
cs
xor
xor
cmp
aam
aaa
mov
js
cld
dec
jecxz
mov
sbb
shl
jnp
and
xor
cmc
dec
add
js
xor
add
and
mov
retf
test
enter
xor
fmulp
clc
dec
daa
add
xor
je
cmp
je
daa
fadd
rol
mov
fwait
dec
ins
lahf
mov
xchg
retf
sub
mov
fiadd
shl
cmc
and
push
retf
dec
std
push
leave
dec
std
push
retf
dec
std
ds
popa
jo
xor
add
fwait
leave
xchg
jbe
and
fadd
rol
into
inc
out
dec
ret
cdq
jne
mov
lods
(bad)
pop
push
mov
fadd
rcr
xchg
(bad)
jbe
std
sar
shl
jbe
and
mov
fadd
shl
mov
dec
jg
std
ins
mov
lods
js
xor
je
ds
test
pop
cmp
add
xor
xchg
loop
arpl
mov
fiadd
shl
ds
and
(bad)
and
ds
mov
sub
push
push
sar
xor
lods
push
retf
and
mov
retf
jb
push
sub
push
mov
mov
ds
leave
repz
and
lahf
mov
std
popa
xchg
jp
std
sahf
test
outs
fwait
ja
mov
xor
mov
ds
fdivrp
dec
jg
std
mov
retf
mov
mov
ret
std
push
hlt
and
mov
and
dec
(bad)
fimul
ds
test
rdpmc
test
mov
mov
sar
push
add
mov
add
ja
aas
mov
fimul
ds
fimul
ds
jle
test
jbe
jmp
sbb
xor
jmp
mov
xor
mov
xor
cmc
(bad)
cli
and
ds
in
popa
add
test
cs
movs
xchg
inc
fdivr
retf
dec
stc
push
iret
lods
mov
cs
icebp
sar
std
mov
or
call
push
dec
(bad)
ja
retf
and
xor
jnp
jno
mov
dec
std
push
retf
dec
std
sar
std
ja
and
(bad)
mov
push
add
fimul
push
retf
fimul
(bad)
fldcw
ds
xor
add
sub
ds
loope
das
inc
frndint
mov
dec
aaa
leave
sub
dec
test
mov
inc
push
jmp
mov
cmp
retf
mov
and
ds
fxch
mov
jnp
jno
daa
retf
and
push
retf
fimul
(bad)
push
imul
cmp
loope
add
popf
dec
std
push
retf
fimul
(bad)
inc
imul
xor
add
lods
imul
sub
add
xchg
imul
and
je
cmp
je
cmp
imul
outs
popf
jbe
push
lea
add
ret
std
ds
and
outs
and
ds
test
(bad)
dec
(bad)
push
ins
retf
and
arpl
pop
mov
mov
cli
loope
aad
dec
std
push
or
std
mov
and
(bad)
leave
data16
ds
mov
std
aaa
or
or
jmp
(bad)
(bad)
jl
leave
or
jnp
retf
or
mov
retf
jle
test
inc
jl
fs
ds
fnstcw
inc
xor
fisttp
loop
mov
jo
push
jo
les
mov
std
mov
sub
ret
xor
test
pop
or
int3
retf
sar
std
mov
loopne
icebp
mov
xor
cmp
and
loope
aad
test
pop
adc
ret
ds
and
ds
mov
call
ds
test
leave
sub
jbe
(bad)
popa
push
jl
sar
jnp
jno
jne
and
mov
test
aas
adc
jecxz
cmp
mov
and
ds
test
leave
sub
jbe
(bad)
and
aad
test
leave
sub
mov
imul
rcr
jb
imul
mov
jnp
xor
adc
mov
fnstenv
(bad)
jle
ret
jbe
jle
cmp
ds
test
retf
or
mov
ror
enter
mov
adc
mov
cs
cmp
mov
into
js
push
add
jnp
and
aad
cs
inc
xor
test
xchg
and
ds
(bad)
add
sbb
test
xchg
and
ds
adc
test
pop
jmp
and
test
mov
mov
stos
push
xchg
sar
retf
and
fild
jnp
cs
jnp
sbb
jnp
retf
mov
je
retf
imul
mov
mov
cdq
mov
leave
and
ins
popf
jbe
xchg
xchg
xor
and
retf
add
dec
test
shl
std
mov
fld
shl
dec
(bad)
leave
lods
into
xor
jle
ret
test
mov
retf
sub
dec
int3
adc
ds
pushf
add
dec
(bad)
ja
or
or
fidiv
(bad)
and
mov
jae
std
ds
(bad)
pop
(bad)
xor
add
xor
inc
out
fadd
push
jbe
add
xor
jbe
pop
fiadd
rol
ds
and
imul
fld
shl
ins
retf
and
fld
sub
std
xor
cmc
push
iret
and
and
mov
outs
retf
and
fld
xor
fidiv
fs
mov
jmp
cmp
add
mov
dec
xor
push
aas
xor
in
pop
fiadd
mov
sub
sar
std
mov
sub
sar
shl
jnp
and
ret
leave
dec
jnp
and
and
cmps
cmp
jle
into
pop
out
push
cmp
mov
shl
std
mov
mov
std
xchg
and
ds
(bad)
add
xor
sbb
retf
cwde
sahf
ds
and
jae
xor
add
pushf
dec
ret
fisttp
fs
ds
in
mov
or
jnp
and
and
cmps
cmp
jle
into
pop
out
push
cmp
mov
shl
std
mov
sub
sar
shl
jnp
and
ret
leave
in
retf
and
and
cmps
cmp
jle
into
pop
out
push
cmp
mov
shl
std
mov
(bad)
and
xchg
and
ds
(bad)
add
xor
sbb
retf
cwde
sahf
ds
and
jae
xor
add
pushf
dec
ret
fisttp
gs
ds
in
sar
std
mov
fld
shl
pop
sub
outs
and
mov
sub
int3
out
loop
movs
(bad)
and
xchg
and
ds
(bad)
add
xor
sub
retf
fimul
xor
add
jno
std
ds
in
push
rol
ds
add
xor
and
mov
(bad)
and
xchg
and
ds
(bad)
add
xor
sub
retf
fimul
xor
add
dec
gs
ds
in
push
enter
xor
add
xor
and
mov
int
std
and
ds
cwde
idiv
retf
and
mov
adc
xchg
(bad)
add
inc
pushf
add
xor
sar
retf
and
fcmovne
or
(bad)
enter
cmp
scas
push
sar
fisubr
ds
movs
and
fisubr
mov
fwait
dec
sub
(bad)
sbb
ds
in
(bad)
jns
std
ds
std
ds
mov
clc
inc
call
and
and
cmps
cmp
scas
mov
fld
shl
add
arpl
imul
mov
test
retf
(bad)
push
mov
in
ret
xor
ds
movs
(bad)
std
ds
std
ds
mov
clc
inc
fmul
fmul
fiadd
shl
mov
and
ds
cwde
idiv
retf
and
mov
xchg
cmc
sub
sar
shl
jge
and
ret
leave
fnstcw
and
and
cmps
cmp
jle
into
pop
out
push
cmp
mov
shl
std
mov
mov
std
mov
fimul
shl
mov
jl
and
(bad)
and
inc
xor
and
cmps
cmp
jle
into
pop
out
push
add
mov
shl
std
mov
mov
std
xchg
and
ds
(bad)
add
xor
sub
retf
fimul
xor
add
sbb
in
(bad)
pop
arpl
ds
std
ds
mov
clc
inc
call
and
and
cmps
cmp
scas
mov
fld
shl
add
arpl
imul
mov
fnstsw
les
jle
or
add
retf
enter
and
mov
retf
cdq
in
retf
and
fld
inc
shl
je
dec
test
ss
aad
stos
js
xor
add
xor
js
xor
add
stos
inc
(bad)
xor
add
xor
dec
add
test
xchg
and
ds
(bad)
add
or
mov
cwde
out
retf
and
daa
in
leave
sub
pop
cmp
fidiv
out
imul
stos
push
xchg
sar
xor
stos
(bad)
adc
in
ror
ret
xor
inc
xor
mov
dec
fimul
xor
add
mov
and
rcr
add
inc
sbb
cdq
mov
std
mov
cld
push
std
and
idiv
retf
and
mov
xchg
arpl
arpl
sar
shl
jg
and
ret
leave
mov
xor
and
cmps
cmp
jle
into
pop
out
push
add
mov
shl
std
mov
mov
std
xchg
and
ds
(bad)
add
xor
sub
retf
fimul
xor
add
popf
pusha
std
ds
in
mov
xor
std
ds
fidivr
xor
add
xor
js
xor
add
dec
mov
shl
shl
add
retf
enter
and
xlat
test
(bad)
xor
add
test
std
ds
pushf
std
ds
std
xor
cld
ds
mov
std
mov
cmp
std
pop
dec
fld
shl
jb
and
mov
fld
shl
shl
add
mov
arpl
mov
aad
ret
xor
adc
mov
aas
fiadd
ror
jle
sbb
je
lods
test
cld
xor
add
or
outs
les
add
fisubr
ds
movs
or
fisubr
ror
mov
rol
ret
xor
dec
retf
add
mov
fiadd
rol
shl
mov
jle
and
ror
jmp
xor
and
cmps
cmp
jle
into
pop
out
push
xchg
sar
xor
and
mov
jmp
std
ds
ret
cwde
idiv
retf
and
mov
xchg
cmc
sub
sar
shl
jle
and
ret
leave
cmp
retf
and
and
cmps
cmp
jle
into
pop
out
push
cmp
mov
shl
std
mov
cmp
add
and
ds
fidivr
xor
add
dec
popf
add
xor
ds
and
shl
mov
fiadd
rcr
jle
(bad)
test
(bad)
xor
add
or
js
xor
sar
xor
and
mov
scas
push
std
and
retf
cwde
idiv
retf
and
mov
xchg
arpl
arpl
sar
shl
add
and
ret
leave
fld
retf
and
and
cmps
cmp
jle
into
pop
out
push
add
mov
shl
std
mov
cmc
and
xchg
and
ds
(bad)
add
xor
sub
retf
fimul
xor
add
rcr
std
ds
in
push
stc
sar
xor
and
mov
loop
je
and
ds
and
mov
adc
xchg
(bad)
add
inc
pushf
add
xor
sar
retf
and
fcmovne
jne
retf
and
and
cmps
cmp
jle
into
pop
out
push
xchg
sar
xor
and
mov
cmc
and
xchg
and
ds
(bad)
add
xor
sub
retf
fimul
xor
add
dec
pop
std
ds
in
(bad)
cmc
pop
std
ds
std
ds
mov
clc
inc
fmul
fmul
fiadd
shl
ret
ds
mov
in
retf
and
xchg
and
ds
(bad)
add
xor
sbb
retf
cwde
sahf
ds
and
jae
xor
add
pushf
dec
ret
fisttp
sbb
ds
in
push
loop
mov
shl
std
mov
mul
std
xchg
and
ds
(bad)
add
xor
sub
retf
fimul
xor
add
and
xchg
gs
ds
je
or
add
inc
loop
and
arpl
sar
shl
add
and
ret
leave
jns
retf
and
and
cmps
cmp
jle
into
pop
out
push
cmp
mov
shl
std
mov
sub
sar
shl
add
and
ret
cdq
push
adc
and
fld
inc
shl
je
and
ds
cwde
idiv
retf
and
mov
xchg
into
sub
sar
shl
add
and
ret
lods
js
xor
add
movs
add
xor
sar
retf
and
fcmovne
add
retf
and
and
cmps
cmp
jle
into
pop
out
push
cmp
mov
shl
std
mov
sub
sar
shl
add
and
ret
mov
std
(bad)
jne
std
ds
std
ds
mov
clc
inc
fmul
fmul
fiadd
shl
sar
mov
sar
cwde
adc
leave
xor
fidivr
retf
jbe
xor
add
pushf
dec
adc
(bad)
inc
sbb
in
(bad)
movs
sbb
std
ds
mov
clc
inc
fmul
fmul
fiadd
shl
sar
mov
ret
ds
(bad)
push
mov
cdq
add
xor
ds
adc
xchg
add
xor
and
mov
mul
std
xchg
and
ds
(bad)
add
xor
sub
retf
fimul
xor
add
lea
cmc
(bad)
leave
sbb
std
ds
mov
clc
inc
call
and
and
cmps
cmp
scas
mov
fld
shl
add
arpl
imul
mov
and
dec
ret
add
xor
in
push
retf
dec
std
push
leave
dec
std
push
retf
dec
std
ds
popa
add
leave
test
retf
and
fiadd
rol
out
loop
mov
fiadd
shl
lds
retf
dec
std
mov
aad
shl
sar
shl
(bad)
xor
add
sbb
xchg
adc
push
cld
and
sar
shl
push
retf
and
lock
xor
and
mov
int
ret
xor
mov
mov
mov
std
imul
rdpmc
test
clc
mov
std
aad
test
rdpmc
test
xor
add
stos
and
js
xor
or
ds
dec
std
push
dec
(bad)
mov
shl
push
retf
mov
xor
cmp
dec
add
inc
add
into
push
inc
push
retf
dec
(bad)
and
push
retf
mov
xor
sub
mov
xchg
in
arpl
push
and
mov
ds
leave
sahf
into
xor
jle
jmp
add
popa
add
test
mov
std
ins
popf
jbe
aaa
mov
(bad)
sbb
xor
cmp
xor
jbe
ret
mov
cmp
mov
inc
fs
mov
and
ds
and
fadd
rol
fld
test
xor
je
cli
cli
jbe
ret
test
mov
jne
std
ds
je
mov
and
jl
mov
ret
xor
stos
(bad)
popa
push
std
ds
movs
mov
xor
add
and
test
inc
lods
mov
xor
jo
shl
leave
and
shl
rdpmc
test
push
retf
test
dec
fiadd
sar
shl
or
and
fadd
shl
ret
xor
adc
mov
sub
mov
jne
cmp
xchg
ret
xor
jo
shl
push
and
shl
xchg
xchg
and
push
retf
stc
mov
ds
test
stos
fiadd
mov
retf
dec
in
push
retf
lods
js
fiadd
outs
and
retf
leave
xor
(bad)
jns
std
mov
lods
js
fiadd
outs
mov
dec
dec
loopne
and
(bad)
das
into
add
dec
in
aaa
or
and
retf
ds
adc
ds
into
xor
adc
mov
adc
aas
retf
and
aaa
fild
rcr
add
call
dec
stos
fiadd
sar
shl
mov
fiadd
sar
shl
cmps
fiadd
sar
shl
mov
fwait
leave
aad
xor
jle
jmp
js
fiadd
aaa
or
and
xlat
cmp
std
mov
lods
js
xor
xor
ds
mov
std
mov
xchg
add
xor
jo
aaa
fild
rcr
adc
mov
movs
add
xor
or
dec
std
mov
cdq
add
xor
adc
mov
out
std
ds
inc
shl
ds
and
mov
retf
lods
out
(bad)
xor
mov
add
mov
leave
add
xor
std
mov
or
xchg
in
adc
xor
jo
outs
fadd
rcr
add
and
mov
movs
add
xor
lods
push
retf
leave
movs
or
and
inc
movs
pop
ds
and
mov
add
and
leave
ds
cdq
adc
and
fld
cdq
ret
xor
je
xor
imul
sub
push
mov
mov
shl
(bad)
leave
sbb
ds
in
clc
dec
dec
add
xor
push
adc
aam
inc
out
mov
fwait
dec
mov
mov
adc
mov
sub
cmp
jmp
std
mov
xor
ja
mov
and
test
mov
and
or
and
pop
fadd
ror
not
sar
and
stc
aas
retf
and
aaa
fild
rcr
std
push
retf
loopne
and
aaa
fild
rcr
jle
(bad)
sbb
ror
mov
dec
test
xor
std
aad
mov
add
dec
into
push
push
retf
and
cmp
popa
ret
xor
std
mov
xchg
add
xor
adc
mov
retf
ja
jmp
retf
fimul
fiadd
(bad)
loope
std
ds
pop
ret
xor
adc
mov
mov
icebp
mov
(bad)
sbb
xor
cmp
jp
cld
iret
and
and
xor
fwait
mov
and
and
leave
ds
test
pop
inc
je
mov
retf
fimul
ds
test
pop
inc
je
sar
std
mov
inc
je
cmp
and
mov
inc
je
aas
cs
jnp
cs
imul
sub
aas
sbb
dec
imul
mov
and
ds
test
xchg
std
ds
je
cmp
and
cs
int
stc
mov
cmp
(bad)
aad
std
ds
in
sar
clc
outs
and
sbb
and
sar
jo
int
mov
ds
fimul
rol
cmp
xchg
test
inc
gs
cmp
leave
xchg
bswap
and
mov
daa
clc
xor
aas
sbb
dec
imul
adc
xchg
push
std
ds
je
and
lods
push
retf
ja
jb
popa
std
push
retf
dec
std
(bad)
cdq
adc
ds
out
rcr
jo
xor
(bad)
inc
adc
ds
(bad)
fld
sbb
cli
and
mov
fldenv
imul
jbe
and
(bad)
sbb
ja
mov
sub
out
mov
xor
add
mov
cdq
sbb
stc
dec
popf
sbb
ds
lods
js
sub
add
movs
cmp
push
lods
(bad)
mov
ds
test
aaa
or
jns
retf
and
mov
retf
jb
mov
rol
and
leave
ds
mov
mov
xor
xor
dec
(bad)
leave
jne
retf
and
fnstenv
loope
aad
out
sub
add
and
mov
popf
sbb
mov
fwait
ja
icebp
in
std
aaa
or
mov
adc
mov
rol
and
ss
daa
xor
xor
dec
(bad)
leave
leave
push
retf
and
sub
ds
loope
aad
retf
or
sti
mov
and
gs
test
cs
in
retf
and
ins
popf
jbe
arpl
lahf
dec
dec
sbb
jb
ds
sar
into
inc
out
push
iret
and
and
and
add
mov
dec
xor
daa
aas
xor
pop
jo
add
retf
clc
mov
jb
test
movaps
(bad)
je
aas
inc
rol
loope
fidiv
outs
sbb
retf
lods
js
sub
add
ins
leave
ds
mov
leave
ds
cwde
idiv
retf
and
mov
xchg
into
sub
mov
and
jne
and
mov
jmp
std
xchg
and
ds
(bad)
add
xor
pop
and
into
ds
cwde
sahf
ds
and
jae
or
add
pushf
dec
movs
loopne
and
retf
rol
pushf
leave
adc
fcmovne
xor
retf
and
cmps
cmp
jle
into
pop
jmp
ds
movs
std
fidiv
lods
(bad)
and
std
ds
in
mov
retf
dec
retf
and
retf
rol
fwait
leave
sub
cli
ret
leave
jno
retf
and
and
cmps
cmp
jle
into
pop
jmp
ds
movs
std
fidiv
lods
(bad)
popa
adc
ds
in
(bad)
lods
adc
ds
std
ds
mov
clc
inc
loop
test
pop
retf
and
cmps
cmp
scas
mov
and
adc
mov
and
jne
and
mov
fisttp
fisttp
rol
fwait
dec
(bad)
mov
jo
retf
rol
fwait
leave
aad
retf
and
fild
cmp
leave
adc
ds
std
ds
mov
clc
inc
fisttp
fmul
rol
fwait
leave
fisttp
ret
dec
neg
mov
jo
retf
rol
fwait
leave
icebp
or
ret
leave
xor
xor
and
cmps
cmp
jle
into
pop
jmp
ds
movs
std
fidiv
lods
(bad)
sub
in
push
enter
inc
movs
std
fidiv
lods
(bad)
sbb
std
ds
in
mov
and
or
and
and
cmps
cmp
jle
into
pop
aam
mov
inc
std
ds
mov
inc
ds
add
jns
jl
lods
inc
ds
add
dec
iret
ds
mov
sbb
ds
add
pop
iret
ds
mov
iret
ds
cwde
idiv
retf
and
mov
xchg
into
sub
mov
and
imul
sub
mov
std
leave
sub
fiadd
mov
dec
mov
mov
jo
retf
rol
fwait
leave
leave
or
and
ret
leave
or
xor
and
cmps
cmp
jle
into
pop
jmp
ds
movs
std
fidiv
lods
(bad)
lds
std
ds
in
push
rol
mov
fidiv
lods
(bad)
xor
std
ds
in
mov
retf
leave
dec
bswap
and
and
cmps
cmp
jle
into
pop
jmp
ds
movs
std
fidiv
lods
(bad)
add
in
sar
add
fwait
dec
shl
mov
jo
retf
rol
fwait
leave
jno
retf
and
fcmovne
xchg
bswap
and
and
cmps
cmp
jle
into
pop
jmp
ds
movs
std
fidiv
lods
(bad)
inc
adc
ds
in
push
retf
sar
xor
lods
(bad)
mov
in
(bad)
stc
adc
ds
std
ds
mov
clc
inc
fisttp
fmul
rol
fwait
leave
lods
bswap
and
ret
cdq
xor
retf
and
fadd
adc
xor
je
and
int
retf
cwde
adc
leave
xor
fidivr
retf
jbe
or
add
pushf
dec
jmp
mov
jo
retf
rol
pushf
leave
adc
retf
and
fcmovne
xor
retf
and
and
cmps
cmp
jle
into
pop
jmp
ds
movs
std
fidiv
lods
(bad)
and
std
ds
in
push
adc
movs
std
fidiv
lods
(bad)
sbb
in
mov
(bad)
sbb
xor
cmp
dec
adc
ds
std
ds
mov
clc
inc
fisttp
fmul
rol
fwait
leave
pop
push
retf
and
ret
leave
popf
push
retf
and
and
cmps
cmp
jle
into
pop
aam
test
std
ds
std
ds
mov
inc
ds
add
jns
jl
lods
inc
ds
add
fs
retf
mov
and
js
sub
add
je
ds
mov
xchg
mov
and
ins
and
sar
retf
test
ret
add
retf
lods
js
sub
add
je
ds
dec
std
mov
fldenv
shl
mov
and
mov
inc
shl
sar
retf
fimul
adc
add
or
loope
aad
mov
std
popa
xchg
jp
std
sahf
test
mov
retf
jb
imul
sub
outs
mov
int3
enter
cmp
and
ret
jb
shl
and
mov
sub
leave
and
fadd
rol
fld
jns
xor
je
and
adc
(bad)
(bad)
shl
ds
(bad)
sbb
xor
cmp
stc
mov
ds
test
sahf
fiadd
mov
(bad)
sbb
xor
cmp
std
mov
test
shl
(bad)
std
push
iret
and
ds
movs
dec
ret
xor
lods
push
fs
mov
jl
dec
(bad)
ds
mov
add
les
xchg
cmp
and
mov
fld
shl
mov
fwait
leave
mov
and
fnstenv
xchg
pop
ret
xor
scas
mov
xchg
add
xor
adc
mov
les
xchg
sahf
adc
fld
shl
fucom
and
mov
xchg
add
xor
jo
aaa
fild
rcr
adc
mov
mov
or
(bad)
dec
std
mov
cdq
add
xor
adc
mov
jmp
std
leave
sub
js
xor
add
xor
and
stc
dec
lds
shl
ds
mov
add
mov
leave
add
xor
std
xchg
(bad)
je
mov
out
mov
fwait
leave
data16
movs
mov
test
shl
mov
fwait
dec
std
push
retf
dec
fst
std
push
retf
lods
js
xor
and
aaa
or
jns
retf
sar
shl
pop
retf
and
fnstenv
xchg
pop
ret
xor
xchg
sub
arpl
push
mov
mov
shl
(bad)
adc
clc
dec
push
push
shl
or
or
inc
movs
(bad)
lds
je
inc
movs
add
xor
lods
push
mov
ins
(bad)
ds
test
aaa
or
and
std
and
dec
xor
add
inc
movs
mov
xor
sar
jecxz
enter
aas
retf
and
(bad)
mov
and
js
aaa
fiadd
outs
popf
leave
or
rcr
ja
mov
arpl
mov
mov
shl
dec
jns
add
xor
std
xor
std
ds
lods
js
xor
add
leave
or
fidivr
ret
sub
ds
dec
std
sar
shl
mov
fiadd
outs
and
ds
lods
js
fiadd
outs
xor
imul
sbb
cdq
test
and
fld
(bad)
lds
je
xor
imul
loope
std
push
sar
and
ds
jno
xor
and
sar
retf
mov
mov
mov
leave
in
retf
and
push
fadd
ror
ins
inc
loop
int
fimul
fiadd
(bad)
dec
test
dec
in
aad
stos
js
fiadd
mov
xor
imul
sbb
add
imul
pop
retf
and
mov
retf
ds
fxch
mov
mov
fwait
leave
and
retf
and
ret
xor
adc
mov
(bad)
sbb
xor
cmp
jle
add
xor
rcl
retf
and
push
fadd
rcl
imul
rcr
jb
imul
out
dec
out
das
retf
and
ds
fs
popa
loop
std
mov
fnstenv
leave
xor
push
retf
and
(bad)
mov
push
retf
jb
add
mov
and
ds
leave
mov
retf
and
fnstenv
add
and
mov
add
ds
test
push
xor
adc
xchg
sbb
ds
je
aas
test
mov
(bad)
ds
ja
inc
in
and
mov
fst
aaa
inc
(bad)
fld
or
gs
test
cs
std
cs
and
push
cmps
add
fnstenv
and
dec
ret
leave
stc
pop
retf
and
xlat
mov
cli
loope
jge
fxch
mov
rol
std
mov
and
(bad)
and
and
dec
(bad)
lods
js
cmp
add
addr16
shl
xor
fiadd
ds
push
stc
mov
retf
leave
ja
test
and
mov
retf
xchg
call
jle
fbstp
iret
neg
test
mov
je
lods
out
ror
push
push
inc
fxch
mov
mov
(bad)
mov
outs
and
xlat
ds
lods
mov
push
mov
std
ds
jge
mov
adc
xor
mov
xor
mov
outs
and
cmp
inc
adc
and
sar
bound
leave
stc
pop
retf
and
inc
std
lods
fidivr
ror
inc
inc
jle
std
sahf
test
outs
fwait
ja
xor
outs
inc
ror
fadd
add
leave
dec
std
push
retf
dec
clc
push
retf
push
retf
dec
std
push
pop
and
mov
daa
xchg
and
retf
test
push
retf
push
xor
jns
mov
adc
push
retf
push
xor
adc
lods
jecxz
std
mov
(bad)
sbb
mov
fmulp
mov
mov
std
mov
fmulp
adc
(bad)
mov
and
and
std
(bad)
xchg
or
mov
fmulp
push
push
pusha
std
(bad)
or
mov
and
sar
bound
leave
leave
push
retf
and
sar
pop
jl
leave
fst
retf
and
sar
pop
jl
leave
jmp
rcr
std
mov
fmulp
push
push
pusha
std
(bad)
xor
and
into
push
pusha
std
(bad)
and
and
stos
push
push
std
mov
fmulp
cmps
push
push
std
ds
jg
std
pushf
sahf
dec
dec
adc
je
cli
fnstenv
fld
or
mov
fidivr
retf
sbb
mov
xchg
xlat
dec
popa
std
push
aaa
fmulp
(bad)
push
pusha
std
(bad)
cdq
push
std
mov
cmp
retf
add
mov
xchg
xlat
dec
popa
std
push
aaa
fmulp
mov
in
std
mov
mov
fidivr
retf
sbb
mov
xchg
xlat
dec
popa
std
push
aaa
fmulp
adc
(bad)
rol
ds
(bad)
mov
ret
loope
mov
adc
popf
retf
mov
mov
dec
add
(bad)
cmp
sbb
ret
aad
mov
adc
popf
mov
mov
jle
dec
add
dec
bound
leave
inc
sbb
and
mov
in
and
popf
out
mov
jle
dec
add
inc
bound
leave
gs
and
lahf
mov
adc
popf
xlat
mov
jp
retf
dec
add
(bad)
movs
pop
jl
leave
mov
retf
and
mov
je
fwait
fs
test
rdpmc
test
push
ds
mov
(bad)
ins
fld
rol
rcl
arpl
push
xor
cmp
push
dec
std
outs
and
movs
xlat
and
mov
shr
ds
dec
std
sar
bound
dec
std
push
mov
lods
mov
(bad)
jnp
jno
mov
mov
mov
jl
dec
std
cmp
and
popf
pop
add
(bad)
mov
lods
push
imul
or
push
fisttp
push
retf
and
mov
dec
daa
jecxz
and
ds
cmp
mov
jl
rcl
mov
mov
add
pop
cld
ds
stos
mov
mov
call
outs
mov
dec
daa
jecxz
and
ds
sbb
mov
and
mov
popf
(bad)
ds
dec
std
push
retf
dec
cmc
push
(bad)
fstp
retf
and
and
cmp
(bad)
dec
add
mov
mov
add
pop
xchg
or
and
push
scas
dec
aad
retf
and
outs
mov
dec
daa
jecxz
and
ds
add
xor
leave
mov
xor
mov
mov
dec
test
std
ds
jno
es
arpl
push
adc
mov
add
and
popf
imul
fld
adc
(bad)
adc
std
sar
pop
jg
dec
in
push
sbb
std
mov
dec
aad
retf
and
outs
mov
dec
daa
jecxz
and
ds
xor
mov
xchg
ds
leave
mov
xor
mov
mov
dec
inc
ds
and
ds
dec
jae
mov
xchg
in
arpl
push
retf
leave
cmp
retf
and
push
pusha
std
push
retf
fmulp
or
push
retf
fmulp
pop
imul
scas
dec
cdq
push
popa
and
mov
mov
mov
jl
dec
std
(bad)
inc
add
pusha
jg
mov
std
push
mov
mov
jge
and
outs
and
retf
dec
mov
mov
xchg
mov
fmulp
(bad)
push
pusha
std
(bad)
std
add
add
(bad)
mov
add
stos
cmp
push
popa
and
mov
mov
mov
jl
dec
std
(bad)
in
add
pop
jl
dec
std
sar
bound
dec
std
sar
pop
jl
dec
sar
retf
and
ds
dec
push
ds
and
push
pop
sar
retf
dec
std
(bad)
and
std
ds
leave
rol
ficom
mov
xor
mov
mov
and
push
mov
and
ds
dec
xchg
loop
and
push
retf
leave
push
sbb
push
(bad)
sbb
mov
mov
add
pop
xchg
mov
xor
std
mov
dec
std
ds
jno
ins
pop
arpl
push
adc
mov
pop
call
cmp
(bad)
mov
add
pop
xchg
pop
mov
dec
ds
and
push
mov
mov
jl
dec
std
(bad)
in
std
ds
dec
std
sar
bound
dec
std
sar
pop
jg
dec
in
push
ss
mov
dec
cdq
push
retf
and
outs
mov
dec
daa
jecxz
and
ds
or
xor
leave
mov
xor
mov
mov
and
push
imul
mov
dec
sti
loop
and
push
retf
leave
inc
sbb
and
push
fmulp
or
push
retf
fmulp
pop
imul
ror
aas
retf
and
push
fisttp
ds
jno
loop
arpl
push
retf
mov
leave
jge
retf
and
push
std
push
retf
fmulp
or
push
retf
fmulp
pop
imul
ror
ds
and
push
fisttp
ds
jno
scas
imul
mov
leave
mov
and
std
mov
retf
dec
std
sar
bound
dec
std
sar
pop
jl
dec
in
jecxz
and
retf
and
mov
mov
xchg
aas
pop
arpl
push
retf
and
and
ds
adc
mov
xchg
ds
leave
mov
xor
popf
sahf
mov
xchg
mov
and
push
fisttp
ds
jno
loop
arpl
push
retf
mov
leave
xor
retf
and
push
pusha
std
push
retf
fmulp
or
push
retf
fmulp
jp
pusha
std
push
fmul
ds
and
push
aad
std
ds
jno
fst
arpl
push
xor
mov
lods
jmp
and
shl
aas
xor
add
xchg
jg
std
sahf
test
mov
je
mov
leave
mov
std
push
ds
mov
(bad)
mov
add
inc
out
rcl
arpl
push
xor
cmp
push
cdq
shr
or
inc
adc
(bad)
sub
retf
leave
fstp
retf
and
cmp
(bad)
rol
std
ds
(bad)
inc
adc
and
mov
popf
stos
mov
outs
inc
fs
push
retf
dec
std
push
retf
and
mov
dec
sbb
mov
xchg
ds
and
(bad)
sub
gs
jg
dec
std
sar
bound
dec
std
outs
mov
or
outs
mov
and
mov
mov
xchg
in
arpl
push
retf
leave
dec
push
retf
and
push
pusha
std
push
retf
fmulp
or
push
retf
fmulp
jp
pusha
std
push
out
std
ds
fs
(bad)
scas
jno
outs
mov
mov
mov
jl
dec
std
(bad)
mov
inc
pop
jl
dec
std
push
leave
dec
std
push
retf
dec
clc
push
retf
push
retf
dec
std
push
ja
std
mov
sub
ds
test
mov
retf
dec
cld
push
iret
mov
fnstsw
retf
dec
std
sar
bound
dec
std
sar
pop
jl
dec
cdq
push
scas
dec
jmp
ds
jno
loop
arpl
push
dec
std
mov
cmp
and
mov
inc
pop
arpl
push
retf
dec
mov
or
mov
loop
retf
dec
mov
mov
xchg
mov
fmulp
(bad)
push
pusha
std
(bad)
ins
ds
ds
sbb
pushf
mov
leave
dec
fisttp
push
retf
aas
retf
and
or
mov
loop
retf
retf
retf
dec
std
push
test
std
ds
adc
dec
aam
std
push
retf
fmulp
or
push
retf
fmulp
pop
imul
out
std
mov
pop
xchg
cmp
pop
sar
retf
dec
std
(bad)
lods
ds
ds
test
rdpmc
test
push
retf
fmulp
or
push
retf
fmulp
pop
imul
out
std
mov
(bad)
std
ds
dec
(bad)
ds
jno
loop
arpl
push
dec
std
mov
sbb
and
popf
out
mov
shl
sar
bound
dec
std
sar
pop
jg
dec
in
push
dec
and
mov
and
push
retf
and
outs
mov
dec
daa
jecxz
and
ds
or
cwde
dec
std
mov
mov
add
pop
xchg
pop
mov
dec
ds
and
push
mov
mov
jl
dec
std
(bad)
popa
aas
std
ds
dec
std
sar
bound
dec
std
sar
pop
jg
dec
in
push
ss
mov
dec
cdq
push
retf
and
outs
mov
dec
daa
jecxz
and
ds
or
xor
leave
mov
xor
mov
mov
and
push
imul
mov
dec
sti
loop
and
push
retf
leave
lds
retf
and
push
fmulp
or
push
retf
fmulp
jp
pusha
std
push
fisttp
aas
retf
and
push
aad
std
ds
jno
inc
adc
push
adc
mov
rcl
std
popf
mov
mov
mov
ds
leave
mov
xor
mov
mov
dec
add
retf
and
ds
dec
stos
in
and
push
retf
leave
cmp
sahf
push
fmulp
or
push
retf
fmulp
pop
imul
ror
ds
and
ds
mov
mov
jl
dec
std
cmp
and
popf
xlat
mov
mov
mov
add
stos
cmp
sub
dec
and
mov
xchg
aas
pop
arpl
push
retf
and
and
ds
adc
mov
jl
ret
jo
mov
mov
add
stos
cmp
sub
dec
and
mov
xchg
aas
pop
arpl
push
retf
and
and
ds
sbb
mov
xchg
ds
leave
mov
xor
mov
sub
dec
mov
and
dec
push
in
and
push
retf
leave
and
retf
and
push
rol
shl
or
xor
cmp
and
popa
xchg
call
jle
shl
imul
cmp
and
fld
adc
dec
and
mov
and
sar
std
mov
mov
fs
and
daa
retf
and
into
dec
js
and
ds
inc
add
or
or
retf
and
mov
shr
mov
(bad)
add
std
push
retf
mov
xor
cmp
inc
(bad)
fld
adc
ret
xchg
ds
add
cli
mov
jl
fimul
(bad)
mov
add
dec
in
mov
fnstenv
fnstenv
pop
add
cmp
jno
dec
fisttp
mov
and
dec
add
dec
in
popa
xchg
jp
std
sahf
test
mov
retf
jb
or
int3
into
inc
out
clc
cld
dec
std
mov
lods
js
xor
add
dec
in
retf
leave
stc
and
and
and
cmps
cmp
je
inc
jl
mov
fimul
mov
fiadd
rcr
jge
xor
mov
mov
lods
js
xor
add
or
ds
mov
std
mov
fimul
mov
fiadd
rcr
jge
xor
mov
mov
lods
js
xor
add
aam
ds
mov
in
push
sti
nop
mov
shl
(bad)
adc
pop
add
mov
arpl
mov
and
shl
stc
fsub
std
mov
retf
mov
in
push
scas
nop
mov
shl
(bad)
popa
ss
ds
pop
add
mov
arpl
mov
and
shl
lods
fsub
std
mov
fimul
(bad)
mov
fwait
leave
sub
xor
mov
mov
lods
js
xor
add
inc
jmp
test
ret
add
rcl
xchg
mov
shl
(bad)
mov
std
ds
pop
add
mov
arpl
mov
and
shl
adc
mov
lock
fimul
mov
fiadd
rcr
jge
xor
mov
mov
lods
js
xor
add
fsubr
ds
dec
std
push
retf
dec
mov
jne
arpl
mov
and
shl
ds
pusha
std
(bad)
pop
lds
shl
inc
vpshlw
pusha
std
(bad)
pushf
fadd
shl
std
and
jecxz
or
xlat
stc
fild
rcl
test
cs
push
je
mov
imul
or
inc
add
and
cmp
jbe
(bad)
enter
dec
in
aaa
or
push
retf
jbe
pop
shl
std
popa
xchg
jp
cld
iret
and
adc
and
ins
popf
jbe
ins
call
or
aas
cmp
mov
leave
xor
lods
(bad)
icebp
aaa
std
ds
out
retf
cwde
repnz
and
test
add
xor
mov
mov
lods
js
cmp
add
sub
ds
cdq
mov
fadd
sbb
xor
je
dec
pushf
push
(bad)
xor
dec
dec
cmp
(bad)
add
fwait
leave
sbb
retf
and
cmp
add
enter
sub
mov
leave
xor
lods
(bad)
add
(bad)
xor
stc
dec
fimul
lea
(bad)
add
fwait
leave
dec
sub
and
cmp
add
into
push
in
push
rcl
adc
xor
lods
(bad)
pop
xor
ds
ror
fadd
sbb
clc
dec
pushf
push
(bad)
xor
sti
dec
fimul
lea
(bad)
add
fwait
leave
lea
retf
and
cmp
add
int3
push
in
push
test
adc
xor
lods
(bad)
popf
xor
ds
pushf
push
(bad)
xor
cmc
dec
fimul
lea
(bad)
add
fwait
leave
shr
and
(bad)
je
pop
(bad)
add
inc
out
cmp
add
ret
push
inc
xchg
mov
leave
xor
lods
(bad)
fnsave
(bad)
xor
test
and
es
add
fwait
leave
add
retf
and
cmp
add
rcl
xchg
mov
leave
xor
lods
(bad)
sub
push
(bad)
xor
icebp
dec
fimul
lea
(bad)
add
fwait
leave
xor
clc
sbb
pushf
push
(bad)
xor
lock
fimul
mov
(bad)
add
fwait
leave
push
sub
and
cmp
add
lds
jmp
mov
leave
xor
lods
(bad)
inc
xor
pop
jl
lods
js
cmp
add
and
shl
outs
(bad)
and
push
mov
scas
dec
jl
leave
adc
xor
jle
fld
add
xor
mov
dec
pushf
adc
xor
(bad)
ds
test
(bad)
test
mov
retf
adc
push
retf
dec
lea
or
add
daa
fld
rol
repnz
and
(bad)
ds
mov
add
les
jge
aaa
fld
shl
js
retf
mov
xor
repnz
or
fdivrp
mov
and
(bad)
xor
add
adc
jl
lods
js
aaa
fiadd
outs
and
xor
add
dec
loop
mov
std
pop
cmp
aam
(bad)
push
ds
inc
icebp
movs
mov
data16
cmps
retf
and
stos
mov
retf
cmp
retf
lods
js
xor
adc
ds
mov
std
push
pop
cmp
retf
lods
js
xor
add
xor
ds
mov
xchg
ds
and
mov
fld
add
and
mov
retf
lods
js
xor
add
xor
jl
lods
js
xor
shr
retf
dec
(bad)
in
and
aaa
fld
rcr
jle
fild
outs
and
call
ret
add
dec
fld
les
arpl
mov
fld
mov
rdtsc
xchg
ds
movs
add
xor
lods
(bad)
add
xchg
retf
std
mov
fld
shl
cmps
push
fiadd
mov
les
mov
dec
loope
outs
and
jmp
fld
rol
into
inc
out
xor
add
shr
adc
and
sar
shl
lahf
mov
xchg
fist
arpl
mov
fld
adc
rdtsc
xchg
mov
arpl
mov
fld
shl
popa
fldenv
std
mov
fld
shl
popa
fbld
std
mov
stc
or
xor
(bad)
xor
inc
cmp
fild
shl
in
mov
stc
or
xor
jns
aaa
fild
ror
repnz
shl
out
fiadd
cmp
je
std
ds
add
mov
fwait
dec
sub
mov
jo
aaa
fild
rcr
jle
fld
outs
and
out
ds
test
jmp
add
xor
adc
mov
cmc
or
xor
cmp
and
out
ds
test
retf
add
xor
add
and
ret
add
mov
ds
lods
inc
ret
add
pushf
or
xor
jo
int3
and
ds
xlat
sbb
and
xor
add
fwait
dec
std
sar
shl
dec
mov
xchg
mov
and
outs
and
ds
lods
js
aaa
fiadd
outs
cwde
fimul
xor
add
dec
in
add
dec
in
mov
sub
shl
shl
fiadd
(bad)
inc
xor
ds
iret
mov
and
(bad)
lods
xor
ds
enter
fisub
cmp
je
(bad)
out
ds
leave
adc
retf
and
add
dec
jl
dec
add
ds
stc
aam
inc
loop
stos
jnp
std
push
retf
dec
cld
ds
adc
mov
test
shl
dec
lds
inc
fisub
std
push
retf
sub
and
push
pusha
std
xchg
jns
ds
je
jg
add
inc
loop
cmp
and
mov
leave
ins
das
retf
and
push
pop
cmp
retf
leave
cdq
das
retf
and
ds
retf
retf
and
mov
nop
adc
xor
add
leave
add
retf
and
jl
lods
js
and
adc
xor
cmp
neg
add
retf
cs
retf
mov
retf
sub
mov
and
mov
and
leave
sub
add
retf
and
xchg
outs
inc
loopne
aam
(bad)
push
ds
inc
icebp
movs
mov
mov
jne
push
movs
dec
shl
cld
aad
leave
gs
and
mov
adc
xor
cs
xor
xor
cmp
aam
aaa
mov
js
clc
dec
out
mov
test
add
dec
movs
dec
shl
cld
mov
xchg
adc
xor
cmc
dec
or
js
fiadd
and
ds
test
enter
xor
fmulp
clc
dec
mov
shl
out
stc
je
inc
movs
pop
shl
lods
push
pop
cmp
retf
lods
js
daa
fiadd
outs
and
jmp
mov
mov
jo
jp
add
fwait
leave
mov
retf
and
push
int
rcr
jo
push
leave
popf
stc
xor
jle
shr
ds
retf
lods
js
daa
fiadd
outs
and
in
ds
cdq
out
retf
and
fld
imul
mov
and
push
jbe
mov
jl
dec
cmp
mov
xchg
jle
pusha
std
(bad)
jne
std
ds
loop
inc
retf
and
test
adc
out
and
and
int
test
push
pop
cmp
retf
dec
lea
fsub
std
mov
or
shl
js
arpl
xchg
and
cmp
mov
or
in
and
push
or
add
retf
leave
movs
sub
sub
add
inc
adc
out
and
and
int
test
push
pop
cmp
retf
dec
std
mov
fsub
std
mov
jne
add
inc
adc
out
and
and
int
mov
std
push
retf
dec
std
push
iret
dec
std
push
retf
dec
std
ds
popa
xchg
ds
pusha
std
(bad)
gs
ds
fs
push
leave
dec
std
push
retf
jno
std
les
std
mov
retf
out
xchg
std
ds
fs
outs
inc
movs
dec
shl
lods
(bad)
test
lods
dec
shl
jle
xor
jge
retf
(bad)
mov
ja
mov
xchg
adc
xor
add
leave
adc
retf
and
outs
mov
arpl
sar
std
stc
mov
jo
jae
jo
jle
add
fwait
leave
jne
retf
and
jle
add
dec
jmp
cld
ds
push
inc
push
and
add
push
dec
(bad)
push
cs
mov
jno
cmp
rcr
jl
fimul
ds
fimul
ds
test
movlps
and
mov
jg
test
repnz
and
inc
mov
je
or
inc
retf
and
ds
test
jmp
push
mov
xchg
adc
xor
js
fiadd
mov
dec
inc
and
ds
test
out
or
and
retf
and
push
retf
leave
push
cs
and
out
or
std
ds
retf
retf
and
jnp
and
ds
out
test
std
ds
fs
outs
and
std
sar
bound
dec
std
push
retf
dec
std
push
retf
dec
std
push
retf
dec
std
add
xchg
fist
arpl
push
sub
mov
and
retf
mov
dec
jl
dec
std
push
retf
leave
movs
xor
and
shl
cmp
test
ds
sbb
ds
mov
daa
jl
leave
int
retf
and
outs
and
ds
test
xchg
fiadd
xchg
ret
arpl
add
inc
movs
push
shl
je
and
icebp
ds
dec
cld
outs
xor
push
shl
cmp
iret
and
ds
retf
retf
and
jae
add
fwait
lods
js
and
dec
dec
jl
dec
test
mov
xchg
outs
jg
std
push
retf
mov
xor
cmp
ret
cmp
xchg
mov
dec
dec
jl
and
ds
leave
gs
xor
je
retf
std
inc
movs
push
shl
lods
push
retf
dec
std
push
add
mov
xor
ds
jno
mov
and
mov
mov
shl
mov
popa
std
push
retf
dec
std
(bad)
cmp
leave
lea
retf
and
ds
dec
cld
sar
bound
leave
popf
xor
and
es
sbb
loopne
ds
test
pop
adc
lods
(bad)
jne
std
mov
and
das
jno
lds
std
aaa
or
xchg
jp
cld
(bad)
test
mov
std
ins
popf
jbe
mov
cmp
mov
retf
stos
mov
xor
cld
ds
pop
repz
mov
jecxz
ds
sbb
aas
retf
and
mov
div
cld
ds
push
out
fisub
std
les
rol
and
xor
cld
ds
enter
and
mov
cs
retf
and
push
ds
mov
mov
fiadd
mov
int
shl
leave
sub
js
fiadd
mov
dec
adc
mov
add
and
shl
cs
movs
adc
mov
fimul
fiadd
(bad)
fldcw
mov
inc
movs
xor
sar
pop
jg
leave
add
(bad)
mov
fadd
shl
and
(bad)
iret
stos
push
adc
xor
sub
fidiv
fiadd
adc
xor
adc
ret
xor
(bad)
stos
pop
fadd
shl
mov
mov
fadd
shl
and
xor
lods
mov
rol
xor
js
fiadd
outs
mov
adc
sahf
mov
adc
mov
or
pop
jg
std
les
pop
pop
jg
std
popf
mov
frndint
mov
sbb
mov
std
ds
xchg
mov
shl
add
cs
int3
and
sar
dec
jl
leave
mov
xlat
mov
fxch
mov
ds
pusha
std
pop
mov
repnz
mov
and
xlat
and
ds
bound
sbb
dec
ret
leave
in
xor
and
fnstenv
or
ds
stos
mov
shl
leave
mov
std
ds
popf
mov
mov
and
lahf
mov
mov
lock
cmps
mov
mov
lock
mov
lock
popf
mov
mov
lock
lahf
mov
mov
lock
popf
mov
mov
lock
mov
lock
mov
sbb
std
mov
leave
adc
mov
lock
lahf
mov
mov
lock
popf
mov
mov
lock
cmps
mov
mov
mov
fimul
ds
dec
add
xor
add
leave
pop
xor
and
and
ds
test
mov
xor
jo
sub
add
fwait
leave
popa
xor
and
fadd
shl
sti
ds
test
aas
xor
std
ds
out
xor
and
mov
and
shl
or
mov
idiv
retf
mov
add
mov
and
push
retf
leave
popf
xor
and
ds
enter
and
pop
std
ds
movs
cld
shl
mov
or
fdivrp
mov
retf
and
mov
mov
lods
js
xor
add
adc
lahf
mov
adc
mov
and
shl
ror
add
xor
and
arpl
mov
and
shl
ds
fiadd
mov
xor
std
dec
jmp
std
push
retf
dec
into
in
and
ds
fmulp
mov
mov
std
and
ds
test
rdpmc
test
mov
and
shl
mov
fwait
dec
shl
mov
jo
fadd
rcr
jle
fisttp
ds
and
retf
rcr
std
(bad)
xor
pushf
cld
shl
dec
jmp
std
push
retf
dec
repz
and
ds
fmulp
and
std
(bad)
(bad)
std
ds
stc
ds
lods
jo
xor
add
mul
std
dec
xor
xchg
mov
arpl
push
retf
leave
leave
xor
and
or
mov
ds
hlt
ds
enter
and
mov
retf
retf
jge
std
shl
mov
xor
int
iret
sbb
std
push
retf
dec
sbb
mov
xchg
ds
hlt
ds
fmulp
and
std
(bad)
imul
stc
ds
mov
add
inc
movs
std
shl
cs
fnstenv
movs
cld
shl
mov
aam
shl
adc
arpl
mov
aam
shl
cdq
shl
mov
retf
and
mov
and
shl
or
mov
ds
mov
add
mov
and
push
retf
leave
xor
dec
cmp
retf
enter
and
retf
leave
sub
js
fiadd
mov
lods
js
xor
add
movs
or
xor
lods
push
out
mov
ret
xor
lods
(bad)
std
sub
ds
in
push
xor
std
ds
movs
cld
shl
sar
bound
leave
pop
ss
and
retf
ror
fst
std
push
arpl
mov
xor
dec
inc
ss
and
enter
dec
and
shl
mov
fwait
dec
pop
out
and
fadd
rcr
jle
fisttp
ds
and
retf
rcr
std
(bad)
cmc
sub
ds
pushf
cld
shl
dec
jmp
std
push
retf
dec
xchg
out
and
ds
fmulp
push
push
pusha
std
(bad)
popf
sub
and
jo
xor
add
mul
std
dec
xor
xchg
mov
arpl
push
retf
leave
mov
retf
and
or
mov
cmc
ds
enter
and
mov
retf
retf
jge
add
xor
ja
into
and
shl
inc
jmp
std
push
retf
dec
shl
mov
xchg
and
push
push
pusha
std
(bad)
sub
std
ds
(bad)
ds
mov
add
inc
movs
add
xor
sar
fnstenv
movs
cld
shl
mov
aam
shl
adc
arpl
mov
aam
shl
fld
and
mov
retf
and
mov
and
shl
or
mov
cli
ds
mov
add
mov
and
push
retf
leave
inc
cmp
and
or
mov
cli
ds
enter
and
mov
retf
retf
jge
add
xor
ja
into
and
shl
inc
jmp
std
push
retf
dec
adc
mov
xchg
and
retf
fmulp
push
push
pusha
std
(bad)
loope
std
and
(bad)
ds
mov
add
inc
lods
cld
shl
div
jge
retf
mov
fiadd
pop
or
mov
(bad)
sbb
xor
js
fiadd
mov
lods
js
xor
add
movs
or
xor
lods
push
out
mov
ret
xor
lods
(bad)
fldcw
std
ds
in
mov
(bad)
sbb
xor
js
fiadd
mov
dec
std
push
retf
dec
stc
push
retf
dec
std
push
retf
and
jle
popa
bound
leave
popa
cmp
and
fild
shl
add
and
ror
std
ds
mov
add
sbb
je
mov
fadd
rcr
std
sar
shl
cmp
and
ret
xor
lods
push
leave
dec
or
mov
fild
shl
clc
ds
lods
jo
fiadd
mov
mul
std
dec
xor
mov
rol
shl
mov
aam
shl
mov
fild
shl
clc
ds
dec
std
mov
rol
shl
cmp
rcr
jl
fimul
xor
and
ds
frndint
mov
mov
fild
shl
stc
ds
fmulp
jp
pusha
std
(bad)
jne
std
mov
and
xchg
ds
and
and
js
xor
fs
retf
dec
call
std
sar
shl
cmp
and
pop
cmp
dec
sbb
je
mov
fadd
rcr
std
sar
shl
cmp
and
ret
xor
lods
push
retf
out
and
mov
fild
shl
stc
ds
fimul
xor
and
ds
xchg
mov
and
fnstenv
and
dec
jl
dec
test
mov
xchg
outs
jg
std
push
retf
mov
xor
cmp
mov
mov
clc
ds
test
leave
sub
js
fiadd
mov
retf
mov
fimul
(bad)
cmp
test
les
(bad)
jb
imul
dec
ds
idiv
retf
(bad)
sbb
inc
fs
add
and
les
inc
fld
repnz
lock
lahf
mov
mov
mov
adc
xchg
std
ds
je
aas
test
add
retf
push
test
mov
jne
retf
and
or
mov
or
mov
stc
ds
sbb
adc
dec
rcr
and
std
(bad)
test
(bad)
mov
or
mov
ds
mov
stc
ds
sbb
push
push
pusha
std
dec
rcr
push
push
pusha
std
(bad)
std
and
frstor
dec
sbb
mov
fmulp
(bad)
push
pusha
std
(bad)
shl
aam
inc
out
or
mov
jge
mov
push
test
movs
pop
jl
leave
add
in
adc
mov
inc
cmp
stos
mov
je
loop
je
lock
lahf
mov
mov
inc
cmp
mov
out
mov
and
mov
loope
mov
mov
inc
cmp
scas
mov
(bad)
or
mov
jbe
mov
mov
add
and
or
mov
jbe
out
mov
lahf
mov
mov
inc
cmp
mov
mov
fimul
push
retf
and
xor
enter
sbb
xchg
jg
test
and
sbb
sar
ds
and
sbb
sar
ds
and
sbb
sar
ds
and
sbb
sar
ds
and
sbb
sar
ds
and
sbb
sar
ds
and
sbb
sar
ds
and
sbb
sar
ds
and
(bad)
jne
std
ds
out
add
push
ficom
add
cmp
and
ret
test
ret
mov
inc
out
aad
data16
jmp
pop
aad
data16
cmp
push
mov
cs
cmp
loope
cmp
fisttp
dec
std
(bad)
or
and
xor
fiadd
popa
add
movs
mov
retf
or
cs
and
out
sbb
cs
and
cmp
ficomp
retf
and
out
sub
(bad)
jb
add
xor
pop
int3
gs
and
sbb
jp
sub
mov
stc
int
mov
jmp
or
std
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
sar
ds
and
sbb
sar
ds
and
sbb
sar
ds
and
sbb
sar
ds
and
sbb
sar
ds
and
sbb
sar
ds
and
sbb
sar
ds
and
sbb
sar
ds
and
sbb
sar
ds
and
sbb
sar
ds
and
sbb
sar
ds
and
sbb
sar
ds
and
sbb
sar
ds
and
sbb
sar
ds
and
sbb
aad
ds
mov
ds
and
sbb
aad
ds
mov
ds
and
sbb
aad
ds
mov
ds
and
sbb
aad
ds
mov
ds
and
sbb
aad
ds
mov
ds
and
sbb
aad
ds
mov
ds
and
sbb
aad
ds
mov
ds
and
sbb
aad
ds
mov
ds
and
sbb
aad
ds
mov
ds
and
sbb
aad
ds
mov
ds
and
sbb
aad
ds
mov
ds
and
sbb
aad
ds
mov
ds
and
sbb
aad
ds
mov
ds
and
sbb
aad
ds
mov
ds
and
sbb
aad
ds
mov
ds
and
sbb
aad
ds
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
mov
ds
and
sbb
aad
ds
mov
ds
and
sbb
aad
ds
mov
ds
and
sbb
aad
ds
mov
ds
and
sbb
aad
ds
mov
ds
and
sbb
aad
ds
mov
ds
and
sbb
aad
ds
mov
ds
and
sbb
aad
ds
mov
ds
and
sbb
aad
ds
mov
ds
and
sbb
aad
ds
mov
ds
and
sbb
aad
ds
mov
ds
and
sbb
aad
ds
mov
ds
and
sbb
aad
ds
mov
ds
and
sbb
aad
ds
mov
ds
and
sbb
aad
ds
mov
ds
and
sbb
aad
ds
mov
ds
and
sbb
aad
ds
mov
ds
.byte
