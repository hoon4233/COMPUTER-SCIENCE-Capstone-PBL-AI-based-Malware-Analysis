ins
mov
add
mov
add
add
add
inc
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
jle
add
xchg
mov
add
add
enter
loop
add
repnz
add
mov
add
add
sub
add
ins
mov
add
mov
add
add
add
add
lock
add
mov
add
mov
add
add
add
mov
add
add
add
add
(bad)
mov
add
mov
add
mov
add
mov
add
add
out
add
bound
add
fdiv
add
repnz
add
add
add
mov
add
add
xor
add
add
add
add
add
add
add
add
add
push
xor
data16
dec
ja
add
dec
pop
dec
add
push
inc
ja
dec
add
outs
ja
add
arpl
add
cmp
outs
pop
and
add
add
arpl
inc
js
add
add
outs
outs
jbe
push
inc
add
outs
inc
outs
pop
aaa
and
aas
ja
inc
inc
inc
add
push
dec
ja
add
jb
push
and
dec
ss
sub
cmp
add
xor
add
ins
dec
push
jb
add
dec
pop
inc
add
add
add
inc
jne
dec
add
imul
gs
and
dec
dec
push
inc
inc
jbe
add
add
push
xor
push
add
arpl
sub
add
and
add
addr16
outs
pop
push
dec
and
and
add
xor
addr16
dec
pop
add
dec
push
jb
add
dec
pop
arpl
add
ins
gs
jns
pusha
dec
dec
push
add
add
push
jbe
arpl
push
add
add
dec
dec
sub
add
pop
push
push
dec
dec
inc
add
add
pop
add
gs
jae
add
add
and
pusha
add
push
add
add
push
dec
aas
imul
add
cmp
data16
push
dec
add
pop
pop
bound
push
je
arpl
dec
inc
js
xor
add
add
ja
sub
add
ja
dec
ja
push
and
data16
cmp
jb
pop
add
sub
je
pusha
ja
dec
add
pop
add
inc
pop
jns
add
add
inc
add
add
jne
pusha
add
add
xor
add
add
add
add
inc
add
add
pop
add
add
jbe
jae
jb
add
jb
add
jo
dec
ds
cmp
add
add
inc
add
add
ja
dec
ja
dec
add
add
sub
push
dec
add
dec
popa
push
jns
dec
jo
add
pop
xor
push
add
dec
cmp
cmp
add
ss
inc
arpl
push
add
push
add
xor
add
ja
push
add
jb
fs
data16
add
ins
jb
add
inc
dec
inc
add
add
addr16
add
add
and
sub
push
pop
dec
dec
add
sub
add
dec
add
add
add
add
cmp
imul
add
inc
add
inc
add
add
jno
pop
add
arpl
arpl
add
inc
inc
pop
xor
add
add
push
pop
fs
push
add
jb
inc
inc
sub
add
add
cmp
add
sub
add
push
addr16
push
cmp
and
aas
push
add
add
aas
add
add
arpl
inc
add
add
pop
add
push
dec
add
add
xor
and
add
dec
inc
add
pop
add
add
sub
add
add
add
add
daa
add
add
data16
arpl
add
jae
je
and
add
add
dec
sub
dec
inc
dec
xor
sub
add
jo
inc
pop
dec
add
add
fs
jae
and
pop
jbe
add
arpl
add
sub
inc
add
gs
add
push
jne
add
add
outs
add
add
add
cmp
push
popa
sub
aaa
dec
add
add
bound
push
ja
dec
ja
add
dec
fs
add
add
add
push
add
cmp
inc
add
add
and
pusha
arpl
add
dec
inc
add
pop
imul
jbe
inc
add
cmp
add
jb
add
add
pop
add
add
and
ja
inc
and
sub
add
fs
add
add
jne
add
arpl
sub
jb
add
add
js
jb
add
fs
inc
cmp
dec
push
and
jb
sub
inc
sub
jb
add
inc
sub
xor
addr16
js
add
arpl
add
inc
sub
add
add
add
pop
dec
and
add
add
add
push
imul
ja
jb
add
push
dec
push
push
pop
inc
pop
jae
xor
add
jno
inc
add
sub
and
dec
add
add
add
push
je
ja
jbe
add
push
inc
inc
xor
add
add
add
pop
push
add
add
add
add
add
push
add
adc
add
add
add
push
aam
add
add
add
add
add
add
add
add
jp
add
mov
add
add
add
add
and
add
add
add
add
add
xor
add
add
add
mov
add
add
add
add
mov
add
fs
add
add
aad
add
adc
add
add
ja
add
add
add
add
add
add
stos
add
pop
nop
add
repnz
add
jmp
test
add
add
add
add
add
rol
pop
add
add
add
xchg
rol
add
add
movs
add
ins
push
add
add
ins
add
add
cmp
add
add
add
add
add
add
add
push
add
jl
add
add
add
mov
add
add
add
add
enter
add
add
mov
inc
add
sti
jp
add
add
add
add
add
add
pusha
aas
add
add
mov
add
add
add
add
add
add
add
mov
add
aad
add
add
add
add
add
add
and
leave
xchg
add
add
add
sbb
add
add
mov
add
add
add
mov
add
add
add
add
fild
add
add
add
cmp
add
in
add
sbb
add
lods
add
add
add
add
add
cmp
add
add
fiadd
add
add
ret
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
pop
push
add
or
aas
inc
add
inc
xchg
add
add
add
sbb
dec
add
add
add
add
mov
add
add
add
add
add
add
fwait
add
add
adc
add
aaa
add
pop
and
add
sub
add
clc
push
add
add
out
add
add
add
add
movs
add
push
add
add
mov
or
add
outs
enter
inc
add
add
add
das
icebp
add
add
or
add
mov
add
mov
add
aaa
jge
add
aam
add
add
add
add
add
popa
xor
add
add
or
add
add
add
add
add
add
sti
add
add
add
add
add
add
add
enter
add
add
(bad)
fiadd
add
mov
add
add
add
add
lahf
add
repnz
ins
add
pushf
add
add
js
add
(bad)
jns
add
add
lahf
pop
add
cmp
add
add
jg
add
in
add
add
add
call
add
add
add
add
add
arpl
add
add
fadd
add
add
add
inc
add
add
add
add
add
add
add
add
add
and
xchg
add
ins
jo
push
add
add
add
add
xor
add
repnz
add
xchg
fld
add
or
add
add
add
add
push
and
add
xchg
add
or
add
add
add
and
add
mov
add
add
mov
add
xlat
add
mov
add
mov
data16
add
add
add
add
jmp
add
cmp
add
mov
add
add
add
mov
xor
xchg
dec
xor
push
inc
dec
cli
and
sub
(bad)
call
add
and
pop
mov
cmp
popf
xor
mov
and
add
add
cmp
pop
jmp
lock
and
jno
mov
sti
jmp
add
aad
je
sub
mov
add
xor
cs
push
and
popf
scas
mov
std
add
push
mov
nop
add
call
(bad)
jns
xlat
jecxz
fimul
std
mov
call
add
fbld
add
inc
jmp
sbb
loopne
push
adc
mov
outs
nop
dec
cli
movs
call
push
lock
add
sub
add
(bad)
xchg
cs
jle
js
sbb
sub
dec
jnp
test
rol
cs
xchg
in
or
push
hlt
cdq
mov
add
lock
jle
cs
std
aaa
sub
js
cs
sub
adc
lock
cs
jle
repz
add
jae
cs
std
repz
xchg
inc
push
inc
and
call
add
mov
and
loop
xchg
pusha
mov
push
push
sbb
stos
xchg
call
add
jle
xchg
fistp
xor
jbe
jge
pop
or
jmp
es
jp
sub
push
add
jle
cs
and
cs
repnz
idiv
nop
add
adc
cli
mov
mov
and
or
int
push
mov
jle
push
push
add
mov
add
aad
jo
int3
stos
xchg
push
ret
xor
cmp
mov
push
add
xchg
mov
mov
call
inc
sbb
add
dec
lock
js
push
repnz
aas
add
loopne
arpl
xchg
pusha
push
(bad)
push
add
sub
cmp
ss
mov
rol
mov
jl
mov
loope
mov
aaa
inc
idiv
push
add
mov
xchg
pusha
mov
mov
pop
add
jns
lods
jmp
sub
xchg
pusha
inc
das
pusha
jle
mov
rol
lahf
ss
mov
cmp
adc
add
(bad)
pop
std
popf
out
add
pop
xchg
jmp
add
sbb
add
aas
jp
stos
call
add
and
push
(bad)
call
add
xchg
push
cmp
daa
in
stos
xchg
call
add
sahf
xor
sti
mov
push
pop
sbb
stos
xchg
mov
jne
sbb
cs
and
xor
fdivr
loope
sbb
sub
jmp
add
push
stos
xchg
push
movs
inc
ja
cmp
mov
mov
loopne
jnp
(bad)
lea
pusha
jle
cmp
ja
mov
mov
test
jo
and
gs
jle
imul
dec
out
inc
inc
inc
outs
push
pop
or
or
add
(bad)
xchg
mov
xchg
jp
clc
inc
add
arpl
adc
jle
mov
lods
retf
jmp
add
movs
into
nop
hlt
push
inc
imul
fwait
add
shr
sbb
xchg
pusha
mov
xor
xor
push
add
push
stos
add
xchg
sahf
daa
pusha
jle
mov
add
push
(bad)
push
idiv
and
jp
dec
push
add
mov
cs
jle
xchg
push
sbb
add
cs
es
jle
jo
mov
add
jle
loop
nop
add
into
(bad)
adc
jmp
xchg
pusha
mov
add
jbe
xchg
mov
aas
add
jle
dec
and
test
and
mov
pop
xor
es
sahf
popf
cmp
xor
cmp
xchg
inc
add
jle
cs
enter
add
mov
mov
xchg
mov
xor
jmp
add
jge
xchg
call
scas
aas
pop
jle
cs
bound
and
mov
call
add
dec
jle
cs
jle
and
mov
xor
mov
and
jl
sahf
es
jle
(bad)
push
add
test
cli
mov
sbb
std
add
cld
xchg
cs
jle
adc
xchg
imul
jle
cs
inc
add
xchg
stc
jne
dec
pusha
jle
ror
push
scas
push
je
jle
mov
int3
stos
xchg
jmp
add
sbb
in
(bad)
inc
and
add
add
and
bound
and
in
or
sub
outs
sbb
add
aas
jb
stos
jmp
add
jp
inc
pusha
jle
sti
call
add
push
stc
push
test
or
push
add
lock
call
add
and
add
ins
pusha
jle
pop
call
cs
mov
scas
call
arpl
pop
inc
std
shl
jle
mov
stc
jge
cs
cmp
stos
xchg
push
add
sti
pushf
cmp
std
mov
inc
xor
mov
stos
xchg
inc
add
jb
cs
pop
jmp
inc
std
shl
jle
adc
aam
cwde
mov
retf
mov
inc
mov
xchg
mov
(bad)
sub
dec
jle
jmp
add
jp
icebp
call
js
jnp
pop
fild
xchg
in
xchg
pusha
repz
sub
xchg
mov
xchg
add
dec
add
pop
xchg
jmp
inc
inc
dec
sbb
test
jo
jl
jle
cs
add
mov
cs
push
add
jmp
cs
inc
push
and
mov
test
jmp
pop
xchg
lock
pop
xchg
jmp
in
mov
add
arpl
inc
sub
call
add
das
or
dec
add
mov
sub
(bad)
jmp
add
mov
mov
pusha
cmc
inc
ss
adc
mov
mov
pusha
cmc
inc
cmp
mov
mov
pusha
cmc
inc
dec
mov
ret
xor
mov
pusha
shl
mov
adc
pusha
mov
and
push
cmp
add
mov
add
push
scas
pop
sbb
mov
and
fiadd
add
sub
in
push
push
out
inc
add
mov
xor
push
inc
push
adc
and
cmp
std
icebp
call
add
push
add
mov
add
mov
jb
mov
or
mov
add
jb
or
jmp
inc
jmp
add
add
arpl
mov
in
aad
xchg
push
mov
pop
jle
xchg
inc
add
imul
pop
mov
cs
fist
jle
mov
nop
add
das
mov
lods
mov
hlt
add
xchg
aas
cmp
daa
in
stos
xchg
mov
jl
sbb
lahf
xor
cld
mov
mov
pusha
add
mov
stos
xchg
inc
or
jno
cs
pop
push
adc
aam
xchg
push
ficom
lock
daa
jle
xor
adc
sub
sahf
ss
jle
pop
xchg
push
xchg
mov
add
imul
or
sti
pop
jbe
lahf
push
cmp
add
sti
pop
stos
inc
jne
out
sar
nop
add
retf
jmp
mov
mov
sbb
add
cs
jno
pusha
jle
adc
add
push
xchg
push
dec
pop
imul
loopne
inc
add
jle
fidiv
ds
in
stos
xchg
inc
add
sti
fwait
ss
mov
call
add
sbb
stos
xchg
push
add
jb
cs
es
call
add
bound
and
and
mov
pop
add
rep
xchg
inc
add
mov
xor
or
dec
fsubr
sbb
pusha
sub
das
xor
cmp
arpl
ret
cmp
pusha
jle
mov
or
xchg
cs
and
daa
or
retf
xchg
xchg
pusha
xor
fdivrp
xor
sub
cs
jle
in
jmp
add
mov
cs
jle
mov
outs
xchg
(bad)
out
add
add
mov
push
arpl
fisubr
pusha
jle
inc
dec
leave
adc
jecxz
xchg
pusha
out
scas
inc
add
sbb
stos
xchg
jmp
xchg
fistp
xor
jbe
mov
add
scas
std
sahf
jg
cld
test
aaa
add
inc
mov
add
add
add
adc
popa
(bad)
std
jmp
add
push
aaa
movs
inc
add
fldcw
pusha
jle
pop
dec
popf
dec
(bad)
add
jns
xlat
push
add
or
xchg
inc
jge
xchg
movs
xchg
out
jge
repz
xor
popf
add
xchg
push
push
adc
xor
xchg
cs
jle
adc
cld
mov
pusha
jle
(bad)
push
inc
cs
jle
push
push
test
cs
jnp
ins
loope
xchg
pusha
(bad)
and
icebp
jae
cs
pop
lds
jle
xchg
fnstcw
call
stos
or
xchg
fs
stos
cs
and
push
add
(bad)
xchg
cs
jle
and
das
test
pushf
in
loopne
pop
pusha
jle
mov
add
add
add
mov
pop
push
sbb
add
add
rcr
push
sub
fwait
add
mov
jbe
mov
inc
add
dec
jle
cs
jg
push
pusha
jle
sar
add
pusha
jle
outs
loopne
stos
xchg
mov
mov
sbb
xchg
pusha
mov
xor
sub
inc
fimul
pushf
xor
repnz
bound
mov
stos
add
(bad)
push
add
jp
sub
jmp
add
inc
jle
cs
test
mov
retf
gs
jp
loop
or
and
es
(bad)
jo
pop
dec
jle
cs
add
or
xchg
test
inc
push
mov
loopne
add
mov
add
(bad)
fs
int3
stos
xchg
call
ret
add
add
mov
add
jle
cs
add
or
stos
xchg
mov
test
pop
popf
pop
adc
sti
cmp
and
add
cli
dec
call
mov
push
inc
jmp
mov
or
cdq
push
sbb
call
lahf
inc
lock
xor
mov
out
add
add
mov
jmp
add
pop
jle
push
push
mov
(bad)
ins
ins
jle
icebp
inc
mov
icebp
jmp
mov
add
mov
stos
add
(bad)
call
and
bound
call
xchg
adc
add
dec
jne
push
add
mov
push
into
inc
and
push
add
inc
mov
add
(bad)
cmps
mov
lods
into
loopne
push
mov
popa
bound
and
xchg
pusha
std
neg
jle
aad
rol
(bad)
mov
mov
dec
add
xchg
lds
inc
daa
in
stos
xchg
jmp
add
sti
sahf
cmp
sti
mov
push
pushf
outs
(bad)
stos
xchg
mov
in
add
push
cs
and
inc
xchg
inc
outs
sbb
add
aas
bound
inc
adc
and
jmp
add
stos
xchg
jmp
cs
and
mov
adc
(bad)
cld
push
add
or
cs
mov
and
pop
leave
aad
push
inc
(bad)
stos
pop
leave
sub
push
inc
jno
push
inc
call
pusha
mov
and
loop
(bad)
add
pusha
jle
imul
fdivrp
inc
(bad)
push
jp
sub
pusha
jle
jp
push
jns
sub
push
loope
sub
push
xchg
mov
loopne
push
push
mov
xchg
pushf
outs
mov
fwait
call
aas
aaa
inc
outs
xchg
mov
pop
add
aam
cs
jle
in
pusha
add
loopne
inc
idiv
xor
sub
add
aas
adc
sub
inc
add
inc
ss
cli
inc
add
and
(bad)
inc
xchg
inc
cmp
stos
xchg
push
pushf
xor
mov
mov
sbb
stos
xchg
mov
xchg
sbb
cs
and
adc
aam
xchg
push
add
mov
add
and
push
ins
inc
mov
adc
sbb
dec
stc
inc
add
dec
mov
popf
ds
jle
pop
ror
pop
cmp
adc
jne
call
add
sbb
test
inc
or
mov
mov
call
add
fs
cs
sub
jle
(bad)
call
add
jg
add
add
dec
and
pusha
jle
fdivr
pusha
add
jle
cs
inc
lods
call
xchg
fst
(bad)
jo
and
xchg
sbb
add
sbb
stos
xchg
call
add
jle
fistp
das
push
jbe
idiv
inc
add
xchg
push
add
sub
and
jmp
add
(bad)
mov
pusha
jle
fwait
mov
in
or
test
popa
pop
push
pop
inc
jle
mov
pusha
add
jge
or
xchg
pusha
daa
mov
(bad)
inc
add
jp
pop
dec
call
(bad)
mov
popf
jp
cli
inc
add
xchg
push
jae
pop
lds
data16
rcl
cmps
mov
popf
add
call
xchg
mov
cmp
sbb
mov
cmp
ins
jo
(bad)
inc
push
xchg
inc
add
jns
xchg
add
xchg
dec
lods
push
add
movs
jle
ds
jle
icebp
inc
sbb
dec
push
mul
sub
retf
add
scas
repz
stos
call
add
push
jmp
inc
pusha
jle
and
jle
pop
call
sub
enter
std
test
bndstx
mov
jno
call
mov
bound
scas
push
adc
jb
xchg
pop
jo
mov
mov
sub
cmp
add
pusha
jle
repz
add
aad
push
cs
jle
popf
call
cs
repnz
cs
and
mov
loop
imul
cs
enter
(bad)
movaps
xchg
ins
xchg
pusha
sbb
cmp
jle
cs
push
or
push
pusha
jle
or
mov
push
cs
jle
sub
push
add
pop
cli
stos
xchg
call
or
jle
fistp
xor
jp
jnp
pop
or
push
add
push
call
imul
fnstsw
mov
jno
cmp
addr16
lods
call
add
call
add
sbb
shl
push
call
imul
jae
inc
das
pusha
jle
mov
sahf
xor
jmp
add
mov
add
sar
fmulp
stos
xchg
inc
add
ret
xor
push
push
mov
add
push
xchg
mov
mov
and
jae
jle
cs
int
inc
add
sbb
inc
adc
mov
add
lods
sbb
dec
(bad)
and
xlat
aam
aam
add
add
sub
add
cli
push
add
jp
outs
movs
call
jmp
xchg
mov
ins
ds
cs
jle
jb
repz
add
jb
in
test
pusha
push
mov
pop
cmp
aas
pusha
jle
jle
jno
cs
and
cld
sub
push
mov
xchg
cs
jle
ins
and
add
stos
sub
push
and
jmp
add
retf
pusha
xchg
pusha
push
xchg
and
repz
jge
cs
add
jmp
mov
call
push
mov
nop
add
mov
add
mov
add
div
add
mov
dec
inc
sbb
push
and
jo
ins
and
and
call
or
stos
xchg
mov
add
nop
dec
pop
xor
inc
mov
and
sbb
call
add
xor
pop
in
call
add
xor
sub
daa
scas
push
push
push
cwde
int3
sahf
sar
add
sub
xchg
push
add
dec
sub
and
inc
popa
dec
jle
jmp
add
sbb
test
xchg
aad
inc
add
jle
inc
cmp
cli
fs
jle
inc
mov
jle
les
jle
cs
xor
xor
xchg
mov
fild
loope
imul
jle
iret
inc
repz
call
add
inc
out
mov
call
add
pop
add
outs
ffreep
stos
xchg
inc
xchg
pusha
sti
adc
mov
mov
cs
jle
adc
mov
popa
add
push
push
dec
mov
add
mov
adc
push
add
jae
xchg
pusha
xchg
mov
push
add
(bad)
repz
pusha
jle
xchg
push
mov
xacquire
ins
sbb
ss
in
mov
sub
stc
mov
xchg
idiv
pusha
jle
sub
add
jmp
inc
sbb
stos
xchg
mov
cmps
add
jns
xor
jbe
leave
jmp
add
cs
popa
jnp
mov
add
and
push
jb
push
dec
pop
popf
cmc
call
jle
call
add
xchg
mov
and
add
imul
cs
jle
repz
(bad)
ins
in
out
inc
dec
sbb
add
jb
repz
mov
movs
jle
sbb
stos
and
cmp
(bad)
jmp
jo
jl
jnp
fistp
add
mov
xchg
inc
add
jl
push
add
dec
push
xchg
inc
add
jle
sub
cmp
mov
and
pusha
mov
xchg
mov
test
dec
popf
(bad)
jmp
imul
lods
mov
cmp
push
(bad)
popa
dec
pusha
and
outs
out
xchg
pusha
pop
and
push
add
pusha
mov
scas
inc
add
fimul
stos
fdivr
jo
arpl
cs
jp
adc
jle
jle
sti
cmp
pusha
jle
xchg
dec
repz
push
push
or
mov
push
adc
inc
xchg
sbb
pop
xor
ds
iret
add
jp
mov
inc
add
dec
(bad)
cld
inc
add
mov
sbb
clc
popf
pop
jo
xchg
pop
sti
(bad)
add
mov
and
mov
sar
add
aas
push
in
push
inc
ret
ins
sahf
xor
call
add
push
ret
add
call
xor
add
inc
xor
or
add
(bad)
and
xchg
das
jge
adc
pop
cs
jle
outs
jmp
xchg
pusha
movs
(bad)
out
call
add
jo
mov
mov
inc
gs
and
jnp
loopne
cmp
adc
shr
sbb
cs
sti
adc
inc
push
std
inc
add
jmp
(bad)
loopne
xchg
add
xchg
jo
inc
add
inc
dec
sbb
dec
popa
or
xchg
pusha
fidivr
jmp
add
fidiv
popa
mov
mov
adc
bound
or
cdq
dec
out
adc
cmp
loopne
js
pusha
jle
and
ja
cs
inc
mov
je
mov
and
mov
add
sbb
add
pusha
jle
fistp
xor
outs
xchg
call
popa
loope
rol
outs
sbb
dec
add
mov
std
add
stos
sbb
and
xchg
push
xchg
jle
sbb
xchg
jmp
add
mov
std
icebp
inc
add
pusha
mov
xchg
mov
rol
cmp
in
cdq
jmp
add
jmp
add
js
dec
bound
mov
repz
push
add
push
cs
mov
inc
add
ds
add
dec
lods
push
adc
sub
shld
es
mov
test
and
pop
sbb
jbe
mov
das
pusha
push
xchg
xchg
mov
scas
inc
add
jle
or
cs
inc
ds
nop
add
xchg
dec
dec
or
mov
add
add
sahf
push
cld
idiv
xor
jl
pop
inc
(bad)
jmp
push
adc
dec
inc
xchg
call
add
mov
inc
pusha
jnp
pop
imul
inc
out
push
scas
and
push
pop
pop
out
push
push
pusha
outs
xchg
inc
sub
mov
xor
sub
push
or
sub
mov
pop
xor
adc
mov
add
and
add
push
stc
call
add
inc
(bad)
jle
cmp
push
add
xchg
pop
xchg
mov
sbb
xchg
jle
add
push
mov
popf
jle
outs
sbb
fcomip
inc
push
mov
dec
add
pop
dec
inc
and
popa
cmp
mov
(bad)
add
add
jmp
adc
sahf
xchg
imul
cs
jle
(bad)
rol
cmp
fistp
add
dec
push
inc
pop
xchg
jle
cdq
jmp
add
jle
test
add
gs
mov
cs
mov
push
scas
inc
and
stos
inc
push
xchg
jle
arpl
sbb
pusha
jle
inc
inc
sti
shl
je
outs
out
xchg
pusha
test
add
imul
xchg
mov
inc
add
mov
add
(bad)
pop
inc
pusha
jle
lea
sub
jle
mov
add
or
sub
jmp
xor
jmp
pusha
jle
loope
add
cs
jle
dec
data16
mov
inc
pusha
jle
cs
ss
push
add
mov
add
(bad)
jg
fmulp
stos
xchg
push
add
aad
lods
jmp
pop
adc
add
jle
cs
mov
and
mov
sub
or
xchg
inc
jge
mov
add
xor
or
or
xchg
cs
jle
xchg
inc
das
pop
dec
push
or
xchg
pusha
(bad)
in
inc
add
sub
mov
xor
aaa
(bad)
lea
lods
jp
ins
jmp
cdq
(bad)
dec
leave
jns
cs
les
scas
inc
add
and
stos
scas
jmp
adc
sub
add
pop
retf
outs
loope
stos
xchg
call
add
pusha
mov
xor
xor
or
add
pusha
add
mov
push
cmc
aam
pushf
mov
hlt
add
add
xchg
lock
jle
cs
add
xchg
jmp
xor
repz
sub
jmp
add
cmp
push
pusha
jle
inc
sbb
push
scas
push
add
retf
pop
xchg
pusha
mov
add
enter
jle
lahf
push
add
je
cs
pop
add
sbb
xchg
scas
(bad)
ror
jb
scas
mov
sahf
add
test
xchg
mov
mov
sbb
adc
sub
add
aad
cs
jle
in
and
add
jo
cmp
jmp
or
xchg
pusha
icebp
stc
adc
mov
loopne
push
imul
cs
jle
call
mov
inc
add
pusha
jle
cwde
push
add
loopne
jge
pusha
jle
adc
or
cs
jle
in
add
add
jle
pop
adc
and
std
test
push
sbb
pop
xor
es
inc
ficomp
or
adc
add
mov
mov
inc
or
cs
mov
add
pop
mov
push
(bad)
pop
mov
lock
and
ds
int3
pop
and
mov
add
fwait
mov
mov
push
leave
inc
xchg
adc
aas
daa
in
stos
xchg
jmp
add
xchg
js
mov
scas
add
fwait
mov
mov
xchg
pusha
loope
jecxz
adc
jp
stc
mov
jmp
push
sbb
add
jo
add
sbb
add
and
mov
jmp
add
mov
dec
clc
call
add
and
cmps
jmp
stos
aad
add
repz
add
in
fisub
mov
add
or
add
sbb
dec
in
mov
add
jle
cmps
jmp
inc
pop
jnp
pop
imul
xor
dec
inc
pop
scas
push
ins
js
push
test
nop
add
jge
cs
aas
ds
xchg
(bad)
inc
imul
mov
or
jbe
xchg
dec
mov
add
jnp
(bad)
push
jp
popf
jle
test
rol
mov
nop
shr
pusha
inc
push
sub
repz
stos
jmp
call
fs
xchg
inc
je
pusha
jle
outs
lds
add
add
sbb
push
pop
mov
ret
nop
add
mov
add
lods
jle
cs
adc
aam
cs
jle
repnz
inc
sub
jmp
in
inc
push
or
stc
daa
idiv
jo
push
pushf
cmp
std
mov
std
add
add
fistp
add
mov
xchg
cs
jle
push
repz
add
xor
cs
jle
ror
clc
dec
xchg
bound
dec
call
(bad)
sub
call
cdq
stos
inc
(bad)
jmp
fs
hlt
xor
xchg
sbb
scas
push
add
loope
scas
inc
mov
and
push
pusha
jle
lahf
mov
enter
inc
call
jl
push
cmp
adc
scas
gs
test
cmp
mov
mov
xor
ins
fs
mov
cmps
sub
push
sub
lock
jge
xchg
ret
out
add
and
mov
mov
cs
jle
icebp
call
movs
in
inc
xchg
pusha
xchg
int
inc
add
inc
jle
call
jns
pusha
jle
lods
call
xchg
in
add
inc
pop
jle
cs
add
xchg
addr16
add
sub
or
fnstsw
jle
cs
pop
add
outs
ffreep
stos
xchg
mov
sti
add
pop
xchg
pusha
sti
adc
push
jbe
jmp
push
(bad)
jmp
dec
or
cs
test
adc
jo
jge
outs
and
add
fmul
and
xchg
cs
jle
jg
sahf
xchg
pusha
jle
adc
push
loope
fwait
jle
cs
aas
add
pusha
jle
push
jbe
leave
sar
add
push
jle
cs
xor
sub
inc
add
retf
cs
lahf
and
add
std
jmp
mov
add
mov
addr16
stos
mov
or
loope
nop
add
jle
add
ds
in
stos
xchg
call
fwait
sub
clc
mov
call
pushf
outs
loop
stos
xchg
mov
and
sbb
cs
jmp
std
shl
jle
adc
aam
xchg
mov
cli
add
mov
add
cli
jmp
mov
jecxz
dec
aad
cs
jle
or
cmp
out
inc
std
mov
cmp
cdq
aas
dec
mov
movs
sahf
(bad)
jmp
inc
repz
cmp
rcl
in
xchg
pusha
and
and
cs
cs
jle
and
add
dec
xchg
cmps
ins
xchg
out
push
cld
sub
xchg
loopne
inc
jae
xchg
js
mov
fs
aad
call
aad
mov
inc
add
push
or
add
cmc
push
add
(bad)
adc
pusha
jle
mov
jo
adc
bound
pusha
jle
and
lock
cwde
jmp
add
fwait
xchg
push
addr16
lods
jmp
xchg
pusha
mov
xchg
xor
mov
add
xchg
call
add
(bad)
xchg
scas
jmp
xor
sub
(bad)
add
mov
ret
rol
ins
dec
das
mov
push
cs
mov
add
fwait
xchg
push
fistp
add
loope
xchg
pusha
add
add
imul
xchg
call
add
mov
add
jae
add
jmp
add
mov
inc
and
lods
xchg
push
add
sbb
push
cmc
mov
aaa
add
mov
ja
inc
add
push
clc
add
(bad)
xchg
cs
jle
jno
jmp
mov
xchg
pushf
test
or
xchg
pusha
std
(bad)
cmp
inc
xchg
jmp
fild
pusha
jle
push
rcl
and
into
mov
mov
call
jge
ret
call
add
out
jbe
clc
jmp
add
pusha
jle
mov
pop
jle
and
es
jl
pusha
jle
ins
out
xchg
pusha
mov
add
mov
add
xchg
fistp
xor
jbe
scas
call
add
xchg
pusha
sub
cli
push
je
xor
add
pop
(bad)
cmps
jmp
and
dec
or
add
mov
mov
or
inc
add
mov
xchg
inc
dec
(bad)
call
lods
mov
pusha
jle
dec
imul
cs
jle
addr16
inc
jmp
xchg
inc
xor
and
pusha
jle
add
(bad)
xchg
cs
jle
dec
out
int3
mov
add
push
pop
and
push
sbb
cs
jle
or
push
add
popa
xchg
bound
or
cdq
dec
out
sbb
xchg
xchg
pusha
inc
add
call
mov
jmp
jg
pusha
jle
lahf
mov
jp
mov
ret
lods
mov
mov
xchg
call
add
cmps
jle
cs
adc
pop
pop
std
mov
dec
add
pop
es
rol
or
pusha
jle
(bad)
call
add
mov
and
xchg
jmp
mov
in
xchg
mov
jle
into
inc
add
in
add
dec
(bad)
imul
or
add
sub
fnstsw
cli
std
and
ja
push
das
and
jge
pusha
jle
jl
or
add
sbb
stos
xchg
jmp
inc
scas
jle
cs
adc
push
and
push
sahf
daa
pusha
jle
(bad)
jmp
(bad)
jo
inc
montmul
cmps
inc
xchg
nop
add
iret
(bad)
fs
jb
and
jae
std
fcom
jle
jmp
add
leave
inc
and
jae
(bad)
fsubr
pusha
jle
xchg
mov
jnp
inc
add
mov
add
aam
jo
(bad)
stos
xchg
call
daa
sbb
ret
and
js
mov
add
mov
push
add
adc
add
sahf
in
stos
mul
pop
mov
add
add
jle
and
mov
xor
iret
out
push
add
aaa
dec
cld
push
dec
xchg
ja
out
jmp
adc
push
add
aaa
push
inc
sti
shl
lea
(bad)
call
add
jp
sub
pusha
jle
(bad)
call
adc
xchg
push
add
ret
jl
mov
adc
adc
xchg
cs
jle
pop
call
and
jle
in
jmp
add
outs
add
sbb
or
xchg
mov
cs
jmp
xor
jge
inc
inc
jae
push
fistp
add
xchg
pusha
cmp
stos
xchg
inc
add
sbb
lahf
and
jge
sub
add
cs
bound
ins
call
pop
popa
push
add
and
or
mul
push
addr16
inc
scas
inc
dec
add
jmp
mov
and
push
data16
call
add
scas
and
aas
jp
and
jae
jle
cs
xchg
pusha
jle
in
call
add
outs
add
sbb
add
push
sahf
push
lods
inc
ins
adc
mov
sub
jl
inc
inc
cmp
inc
ins
fisubr
cs
inc
xchg
mov
push
add
repz
fisub
add
jge
cs
fdivrp
lock
out
std
xor
cs
jle
bound
mov
xchg
fwait
in
xchg
cs
jle
pop
cmc
(bad)
dec
mov
clc
xchg
xchg
pusha
ds
xchg
call
add
call
push
fwait
sahf
xchg
pusha
jle
xor
xor
jle
idiv
rol
lea
scas
add
nop
add
sub
mov
jle
fidivr
cmp
mov
lock
jl
cs
sahf
add
sbb
repz
mov
xchg
pusha
and
out
adc
xor
mov
jmp
add
sbb
add
mov
inc
add
mov
add
cld
lods
xchg
push
adc
mov
push
lods
call
add
sub
xchg
add
ds
inc
std
shl
jle
adc
aam
cwde
mov
retf
mov
adc
mov
popf
add
(bad)
xchg
cs
jle
pop
cs
iret
xlat
jmp
xor
sbb
push
sub
fldenv
in
jge
lods
push
add
cmp
add
pusha
and
xchg
add
cmp
ss
jle
cs
inc
mov
mov
std
inc
sub
pop
dec
mov
xchg
std
sbb
pop
push
(bad)
and
push
jg
push
xchg
scas
mov
and
outs
loope
stos
xchg
call
xchg
pusha
sti
adc
stos
cmp
sti
lods
cmp
stc
jns
pusha
jle
icebp
mov
push
lods
sahf
xchg
pusha
aad
cs
jle
xchg
mov
mov
sub
xchg
xor
pusha
jle
inc
pusha
jle
stos
mov
push
add
jl
mov
add
add
and
cmp
jle
test
jle
cs
and
jb
cs
jne
push
shl
add
cs
jp
mov
stc
icebp
push
add
mov
stos
and
push
fistp
jo
test
shr
cmp
push
xchg
pusha
jle
sbb
adc
push
sbb
push
or
pop
std
sub
xor
push
mov
mov
jp
pusha
sub
push
inc
stos
xchg
inc
test
fs
mov
stos
xchg
inc
xor
mov
xchg
call
add
inc
and
jae
std
hlt
pop
pusha
jle
sar
add
repz
sub
jle
cs
jp
inc
leave
xor
sbb
push
add
sub
or
cs
pushf
push
int
xor
xor
xchg
pusha
or
xor
inc
std
shl
jle
outs
jmp
stos
inc
out
pusha
add
imul
xchg
inc
inc
sbb
add
pop
lds
loop
xchg
nop
std
fdivr
pusha
jle
test
push
add
fwait
mov
add
mov
jle
mov
jo
inc
gs
in
pusha
jle
cmp
add
mov
fld
sbb
add
xor
push
loope
sub
push
add
jle
mov
pusha
add
mov
sub
(bad)
mov
int
xchg
mov
jecxz
sbb
ret
rol
adc
add
jo
xchg
mov
xchg
call
and
xor
push
push
(bad)
nop
add
adc
jmp
imul
repnz
xchg
sar
lock
jle
aas
fisub
(bad)
inc
add
jecxz
bound
dec
call
(bad)
sub
push
push
or
(bad)
stc
call
sbb
pop
lds
push
jle
cs
addr16
and
sbb
(bad)
rol
pop
jge
add
sub
mov
mov
(bad)
in
jmp
add
and
xchg
push
add
sbb
cs
mov
xor
es
sti
xor
scas
sub
sbb
sub
add
(bad)
cs
jle
dec
retf
mov
lahf
ins
icebp
call
add
pusha
jle
stos
mov
in
add
push
push
add
aad
cs
jle
mov
cmp
dec
(bad)
jno
jmp
add
mov
and
inc
add
mov
cs
into
mov
mov
sub
cmp
jle
hlt
adc
cmp
and
test
sub
mov
mov
fs
scas
sub
push
add
jle
cs
int3
cmp
dec
inc
fdiv
inc
in
outs
or
cs
cmp
mov
dec
add
jle
cld
inc
add
dec
jle
push
pop
iret
jmp
adc
push
xchg
call
add
lds
jle
mul
add
jle
cs
pop
lds
jle
cs
jmp
jle
and
inc
add
xor
add
add
(bad)
pop
jo
shr
sbb
xchg
pusha
sti
adc
shl
lock
sahf
and
add
sub
jmp
lock
pop
ds
add
pop
scas
dec
stc
adc
push
daa
dec
ds
pop
mov
sub
mov
xor
cmps
xor
push
jmp
push
add
xchg
out
ins
cmp
sahf
mov
sbb
sbb
add
jp
cmp
and
pusha
cs
add
push
cmp
mov
daa
add
jle
pop
jecxz
sbb
mov
sub
mov
jecxz
sbb
pushf
jmp
xchg
mov
jmp
add
jp
pop
dec
call
(bad)
xchg
mov
movs
jp
cli
jmp
add
and
jmp
add
outs
loopne
xchg
pusha
push
pop
scas
mov
(bad)
add
jp
and
js
jo
shr
sbb
xchg
pusha
mov
xor
sub
and
inc
push
add
aad
cs
jle
leave
mov
adc
scas
mov
add
fistp
out
sub
xlat
inc
ja
inc
mov
mov
pop
add
ror
lock
cmp
dec
pusha
jle
mov
push
(bad)
jmp
add
inc
jle
xor
cmps
push
xchg
sub
out
loopne
sub
and
sar
cs
iret
mov
mov
mov
inc
push
pusha
pop
add
adc
ret
jecxz
stos
xchg
jmp
add
daa
xchg
pusha
sti
adc
jl
stc
inc
or
arpl
out
mov
nop
add
inc
add
inc
push
lock
aaa
jmp
sub
scas
push
push
adc
lock
repz
es
jp
inc
add
mov
dec
inc
lods
call
call
data16
sahf
add
(bad)
mov
pusha
jle
repz
mov
popa
inc
inc
push
mov
or
rcl
sub
mov
out
lods
jle
cs
hlt
das
mov
pop
sub
mov
mov
popa
(bad)
xchg
mov
popf
jp
loopne
and
push
inc
jle
cs
or
sahf
push
add
jl
call
sub
jle
jecxz
mov
push
dec
fwait
add
inc
jmp
cmp
loope
scas
or
outs
jecxz
stos
xchg
mov
sbb
sbb
xchg
pusha
mov
xor
sub
cwde
jo
pop
or
push
add
imul
(bad)
cmp
or
cs
adc
call
add
in
jne
pusha
jle
mov
mov
pop
int3
dec
xchg
pusha
jle
movs
jmp
xchg
and
inc
inc
sti
shl
cld
arpl
pusha
jle
cs
pusha
pop
mov
das
pusha
jle
in
push
add
outs
add
sbb
add
push
pop
das
pusha
jle
xchg
jmp
add
ss
call
add
mov
add
(bad)
xchg
jo
int
xchg
inc
add
aad
lods
call
add
call
add
jle
cs
adc
inc
inc
std
shl
jle
adc
aam
cwde
call
add
mov
add
in
jmp
add
mov
(bad)
push
(bad)
push
sub
xor
jl
outs
xchg
pusha
xchg
test
cmp
arpl
sub
cmp
push
push
lods
ins
mov
xlat
retf
pusha
and
jmp
add
jae
cs
push
xchg
pop
xchg
sub
lahf
jle
adc
adc
pusha
jle
sbb
cmp
xchg
call
jne
jmp
cs
jle
add
add
adc
mov
fwait
push
add
mov
add
jle
stos
mov
sbb
fs
mov
push
add
push
inc
xchg
mov
push
jb
xchg
xchg
(bad)
jno
(bad)
push
adc
inc
add
inc
jle
mov
retf
jle
outs
call
push
lods
inc
adc
pusha
add
inc
ja
dec
(bad)
xchg
mov
movs
jp
icebp
inc
add
aaa
rol
inc
mov
popa
and
daa
(bad)
ret
xor
xor
dec
popa
sub
fwait
jmp
add
mov
add
jle
fistp
das
push
jbe
pusha
out
xchg
mov
add
clc
clc
add
inc
add
lock
dec
push
lock
cli
jmp
add
(bad)
xor
lahf
cmp
add
mov
pop
pop
xchg
repnz
and
and
cmp
cmps
test
pusha
test
jmp
add
imul
cs
jle
sbb
jnp
push
xchg
dec
mov
add
mov
pop
sti
sbb
pop
mov
adc
push
and
outs
add
jle
add
push
enter
iret
icebp
mov
out
in
mov
pusha
jle
ror
cwde
mov
inc
add
loope
stos
cs
jge
stos
call
add
jl
stc
push
add
pusha
jle
sub
popf
add
add
std
shr
pusha
add
sub
dec
inc
sti
shl
rol
ret
inc
dec
(bad)
lea
xchg
jp
clc
inc
dec
pop
mov
mov
sbb
cmp
xchg
mov
add
and
test
add
add
adc
mov
jnp
pusha
jle
push
cdq
jnp
xchg
push
add
sbb
cs
mov
xor
ds
inc
xor
call
add
add
mov
add
data16
out
xchg
sbb
jb
call
add
mov
add
pusha
jle
(bad)
push
add
cmp
daa
push
xor
xchg
jmp
add
pop
or
repz
pop
sub
js
call
jecxz
inc
add
jle
in
inc
push
pop
jge
sti
push
add
les
cwde
test
mov
xchg
inc
mov
std
mov
repnz
jle
fs
pusha
add
and
je
jmp
mov
ja
pusha
jle
retf
add
sti
loop
rol
pusha
jle
outs
jmp
call
add
jle
cs
cli
sub
mov
xchg
fs
xor
and
mov
pop
dec
cmc
adc
jle
cmp
cmps
iret
xor
mov
mov
scas
movs
mov
xor
lods
outs
sahf
idiv
inc
add
sbb
add
add
cs
jae
push
loope
sub
inc
add
rcl
inc
out
call
cmp
in
jno
pusha
jle
test
rol
inc
dec
stos
outs
add
sbb
dec
add
imul
add
mov
add
mov
sahf
mov
mov
sbb
xchg
push
imul
bound
fs
push
add
sar
adc
pusha
fsub
cld
sub
call
push
pop
sbb
or
push
add
add
jle
push
out
mov
or
test
out
rol
in
dec
or
inc
add
cwde
dec
push
stos
mov
les
out
jp
call
add
popf
jbe
ins
or
inc
add
sbb
mov
jmp
and
add
ins
xchg
pusha
add
mov
and
cmp
rol
pop
adc
xor
stc
in
pop
jmp
rol
fs
lods
inc
xchg
pusha
jae
push
loope
sub
push
add
xchg
xchg
pusha
mov
sar
add
push
icebp
icebp
sti
mov
and
call
and
jae
jle
cs
test
pusha
jle
out
inc
add
outs
add
sbb
add
ins
and
(bad)
fisubr
pusha
jle
out
inc
jnp
inc
stos
xchg
inc
adc
jecxz
stos
xchg
jmp
add
inc
add
stos
xchg
call
and
jle
cs
call
pusha
jle
adc
aam
xchg
mov
pop
add
mov
(bad)
retf
add
xchg
add
mov
xchg
cs
jle
mov
add
add
add
push
es
sub
inc
cs
jle
mov
sub
jmp
add
fnsave
dec
and
cdq
stos
inc
add
or
jmp
fs
jle
cmp
add
add
add
sti
pop
pusha
jle
xor
or
add
sbb
mov
add
ins
fs
xor
repz
add
add
sbb
(bad)
lea
pusha
jle
out
mov
push
mov
dec
ret
push
add
xchg
rol
jae
sub
xor
push
or
cs
pop
pop
in
rol
fldenv
or
adc
mov
pusha
add
rcr
inc
add
xor
dec
out
mov
fdivr
loopne
xor
xchg
nop
ret
(bad)
cmp
cs
aad
out
rol
jno
in
cs
jle
lods
push
and
stos
xchg
inc
add
scas
jle
cs
adc
jle
(bad)
push
push
add
sub
xchg
push
add
push
iret
cmps
inc
push
mov
mov
mov
loope
push
cs
jle
xchg
call
add
mov
jbe
cs
aad
lods
inc
add
mov
mov
and
jg
add
pop
pusha
jle
sbb
loop
mov
ss
dec
jge
xchg
lds
xchg
push
push
cs
jle
pushf
mov
fadd
jecxz
stos
xchg
mov
push
add
and
cs
sti
adc
and
adc
inc
cmp
test
pop
std
lods
mov
imul
dec
sub
mov
xchg
bound
mov
ja
xchg
sahf
xchg
dec
enter
aam
cs
jle
adc
cmp
add
add
dec
sbb
std
push
add
jecxz
inc
and
repnz
sub
cmc
push
call
les
mov
add
add
call
push
inc
push
out
cmc
inc
dec
pop
mov
inc
je
cmp
inc
sub
xchg
pop
ror
xchg
or
push
sub
push
xchg
add
scas
inc
add
mov
xchg
inc
add
sbb
pop
cs
jle
adc
or
pusha
jle
mov
and
pop
or
cs
jle
sbb
mov
les
jle
cs
mov
push
test
pusha
jle
in
call
add
sbb
add
pop
les
mov
add
push
sub
mov
xchg
push
add
mov
or
idiv
add
fwait
push
add
icebp
sar
add
pushf
xchg
pusha
(bad)
call
or
add
daa
shr
mov
lahf
bound
sub
aad
cs
jle
mov
pop
dec
mov
inc
jecxz
(bad)
stc
inc
sub
rol
push
or
cdq
ds
sub
jne
cs
cld
add
inc
je
add
das
pop
jle
xor
add
pusha
jle
gs
js
jmp
push
cs
jle
stos
call
sub
std
mov
mov
scas
push
add
call
add
(bad)
addr16
jle
mov
out
dec
cmc
mov
lahf
add
jns
pushf
jle
cs
mov
add
xchg
jle
or
xchg
pusha
jge
cld
inc
add
sbb
inc
cmps
aas
pop
jle
mov
mov
lea
lods
jp
lahf
call
add
xchg
call
mov
cmp
xchg
call
add
das
(bad)
and
push
bound
add
sbb
stos
xchg
mov
sub
cs
adc
aad
cs
jle
add
pop
inc
mov
nop
add
lock
in
jo
inc
test
aaa
cmps
mov
test
mov
add
mov
lock
xchg
ret
push
sbb
cdq
call
add
sbb
push
add
push
xlat
jnp
mov
xchg
(bad)
in
and
call
add
xchg
jmp
dec
sbb
cmp
pusha
jle
xchg
and
mov
inc
jle
cs
jle
lahf
push
add
jb
mov
push
jle
cs
inc
lahf
inc
add
lock
cs
jne
xchg
inc
add
jle
adc
dec
add
jmp
add
mov
xchg
fs
xchg
xchg
jle
fnsave
rol
in
jns
add
xchg
pusha
jnp
push
mov
std
dec
inc
icebp
(bad)
push
adc
out
mov
(bad)
int3
mov
pop
repz
stos
mov
loop
or
call
fs
fidiv
pusha
jle
inc
and
test
pusha
jle
adc
xor
mov
fwait
mov
push
add
mov
rol
jle
fistp
xor
jbe
or
push
add
call
xchg
or
mov
or
push
into
mov
xchg
add
push
add
enter
jle
cli
inc
add
pusha
jle
lods
push
add
push
push
pusha
and
call
xchg
pusha
jnp
xchg
jmp
add
pop
mov
inc
add
jge
cs
test
mov
stos
add
push
dec
int
pop
popf
call
add
pusha
jle
cwde
call
add
(bad)
push
and
jle
adc
jmp
cs
jle
and
ret
push
adc
xchg
jnp
xchg
jmp
add
sbb
cs
sti
adc
xor
dec
int3
cdq
lds
sbb
xchg
pusha
and
sbb
push
push
cmc
jmp
add
pop
cmp
fcomip
std
repnz
add
xchg
pop
jae
(bad)
xchg
mov
xchg
outs
xchg
push
cli
mov
pusha
jle
call
fs
pushf
es
(bad)
pop
pop
inc
jle
mov
jae
and
mov
jp
sahf
sub
ret
in
xchg
pusha
sti
scas
sub
cli
adc
pusha
jle
xchg
push
daa
pop
outs
add
pusha
jle
test
push
add
les
cs
push
mov
add
add
inc
add
jle
cs
cmp
jmp
add
xor
add
pusha
icebp
inc
push
loope
cmp
rol
and
jmp
add
jle
cs
xchg
pusha
jle
lods
inc
add
sar
cs
sbb
retf
jmp
lds
pop
jle
cs
sub
mov
sub
clc
cld
sbb
sbb
(bad)
test
xor
pusha
jle
xor
es
mov
mov
add
add
icebp
popa
jnp
mov
add
(bad)
mov
test
push
aad
cs
jle
mov
jp
cmps
xchg
jmp
sbb
jle
adc
outs
test
push
add
xchg
xor
lods
mov
fild
(bad)
mov
xchg
push
fbstp
jnp
imul
xchg
mov
and
sbb
add
inc
sbb
push
sbb
and
add
sbb
stc
mov
add
add
jle
jbe
(bad)
and
stos
and
add
mov
sub
inc
cs
jle
adc
push
add
jo
mov
and
sbb
shr
call
outs
lods
jp
or
(bad)
pop
sbb
mov
xchg
(bad)
dec
sub
(bad)
adc
pusha
jle
and
inc
stos
xchg
call
sub
sti
adc
dec
stos
lock
add
or
cs
dec
push
or
xor
mov
xor
cwde
sbb
xchg
pop
dec
add
pop
sub
mov
push
mov
or
ror
daa
push
movs
jmp
add
movs
into
cld
add
push
push
xor
sbb
ss
jle
scas
push
add
mov
add
sar
stc
mov
xor
sub
xor
aad
fcos
nop
add
push
jle
dec
jle
pop
xor
pop
adc
or
pop
and
jle
pusha
jle
scas
push
add
fimul
and
add
xchg
int3
push
(bad)
rol
addr16
and
jmp
xchg
pusha
je
scas
push
add
je
cs
inc
lds
jle
cs
mov
fwait
mov
add
mov
xchg
fs
mov
inc
add
add
inc
sub
dec
xchg
push
mov
mov
adc
dec
xchg
jb
sbb
add
jae
daa
in
mov
pusha
push
xchg
test
adc
sub
mov
inc
add
ins
mov
mov
rol
push
jle
cs
sub
retf
cmps
call
sahf
xchg
inc
pop
imul
xchg
pusha
clc
inc
mov
rol
xchg
mov
mov
and
stos
inc
add
fs
push
add
pop
or
inc
xor
pusha
jle
dec
xor
clc
pushf
jmp
and
push
stos
add
sub
(bad)
add
mov
add
inc
add
or
xchg
sbb
add
inc
jle
cs
sahf
fstp
xchg
in
ins
cs
jle
push
ins
cmp
jmpw
xchg
adc
pop
pop
jle
mov
scas
call
std
xor
xor
jle
sub
hlt
cmp
xchg
ins
not
pusha
jle
and
pusha
jmp
add
sub
add
jg
inc
std
shl
jle
outs
loopne
xchg
pusha
aam
in
mov
pop
imul
xchg
jmp
add
mov
popa
or
xchg
call
cs
jle
scas
inc
ins
lea
cs
ds
xchg
push
sbb
mov
pusha
jle
lods
mov
out
add
loopne
lahf
lock
mov
adc
cwde
push
dec
cmps
mov
(bad)
add
push
dec
sbb
push
test
rol
push
mov
daa
add
add
xchg
jle
cs
movs
inc
into
inc
add
jmp
mov
mov
pop
add
cmc
xchg
cs
jle
dec
leave
arpl
movs
push
add
mov
push
add
jge
popa
mov
pusha
add
and
daa
sub
xchg
push
sub
and
ds
jle
in
jmp
add
outs
add
sbb
mov
cs
es
cs
or
push
fimul
jle
sbb
stos
xchg
inc
add
sbb
mov
mov
add
mov
aad
(bad)
clc
inc
sbb
inc
adc
pusha
add
xchg
dec
add
jle
aas
or
mov
push
mov
mov
mov
xchg
add
jge
cs
cmp
stos
xchg
mov
mov
dec
and
mov
jmp
add
mov
stos
xchg
inc
outs
sbb
cs
and
std
aam
cwde
inc
add
sbb
push
mov
jo
push
fisub
push
mov
push
dec
neg
dec
push
add
pop
xchg
pusha
cmp
inc
add
out
inc
add
add
sbb
jnp
call
add
jle
cs
popf
or
jle
aas
scas
jle
cs
pop
cmp
jle
std
call
add
cmp
add
adc
sub
jle
lods
mov
or
leave
jp
cs
popf
shr
loope
xchg
pusha
cmp
mov
mov
push
ret
das
adc
(bad)
cs
jle
mov
mov
xchg
stc
cld
add
pusha
jle
bound
rol
sbb
mov
xchg
fs
in
mov
inc
add
mov
push
push
shr
(bad)
push
add
and
mov
jns
xchg
sbb
xchg
mov
lahf
and
and
movs
cs
cdq
(bad)
sub
ja
or
xchg
pusha
std
mov
scas
(bad)
pop
and
std
imul
pusha
jle
cmps
jmp
and
lods
mov
mov
outs
mov
inc
add
mov
mov
imul
loope
jns
pusha
jle
mov
rol
and
arpl
(bad)
add
lods
jle
cs
pop
lds
jle
cs
push
add
jno
jle
cs
mov
add
jle
fistp
xor
outs
xchg
push
add
push
cs
call
pop
cld
inc
or
call
or
jo
or
cmp
sub
push
xchg
pusha
jnp
sub
cmp
add
int3
jge
or
xchg
pusha
std
mov
lods
mov
add
mov
add
fdivr
add
stc
mov
xchg
sub
push
add
pusha
jle
sbb
push
fld
adc
sbb
add
xchg
pusha
mov
out
call
and
mov
das
add
push
xchg
pusha
es
pop
pop
ret
jmp
xor
dec
xchg
pusha
sti
adc
stos
add
mov
add
mov
rol
fwait
cs
and
push
mov
mov
cmp
jp
call
add
jo
xchg
out
xchg
sub
cmc
xchg
gs
or
xchg
push
ret
jle
daa
in
stos
xchg
mov
lea
sbb
mov
rol
inc
mov
sub
lock
aas
pusha
jle
push
inc
mov
test
add
daa
mov
add
pop
push
jmp
lock
jle
or
es
add
push
movs
jmp
add
call
(bad)
popa
mov
mov
and
push
xchg
pusha
loop
xchg
call
add
jns
loope
jmp
xchg
pusha
inc
push
mov
xor
js
add
adc
cld
test
js
mov
mov
fs
cmc
cmp
gs
jle
mov
add
add
dec
stos
inc
add
dec
jmp
add
add
dec
scas
xchg
push
add
pusha
jle
jmp
pusha
jle
jl
clc
scas
retf
push
add
test
add
or
cdq
push
out
sub
xchg
pusha
push
and
call
add
jne
cs
and
sar
clc
cld
xor
out
push
loopne
cmps
xor
cmp
lods
jmp
stos
xchg
inc
add
jle
cs
adc
fneni(8087
push
scas
push
pop
cli
mov
mov
jle
out
enter
mov
jno
xchg
sub
push
and
xor
hlt
call
add
std
inc
xor
mov
add
in
addr16
jle
in
jmp
add
cmp
lods
call
xchg
not
lods
mov
aaa
add
xchg
daa
push
xchg
call
jge
pusha
jle
lods
jmp
pop
lods
jle
and
addr16
bound
cmc
add
mov
pop
xor
es
pop
pop
(bad)
push
add
mov
test
cmp
push
rcl
jmp
add
cmp
ret
mov
or
inc
jns
repz
aas
dec
outs
retf
jle
add
xchg
push
add
dec
pop
lahf
cs
add
add
xchg
(bad)
mov
or
cdq
adc
test
adc
push
push
sbb
jnp
pusha
jle
mov
stos
jle
cs
fst
pusha
jle
icebp
inc
stos
xchg
inc
add
pop
xchg
pusha
sti
adc
mov
scas
push
add
call
call
add
inc
jle
call
add
lods
jb
xchg
mov
xchg
add
jle
stos
inc
add
and
pop
xchg
xor
add
outs
add
mov
rol
mov
cdq
adc
sub
pop
mov
sub
fisttp
std
jmp
sub
and
xchg
mov
inc
pop
sub
mov
add
cmp
cmp
cs
jle
sar
mov
ror
call
and
test
pusha
jle
icebp
push
add
outs
add
sbb
add
or
lahf
mov
jo
repnz
std
push
add
pusha
jle
and
dec
test
bnd
cs
cmp
daa
in
stos
xchg
call
fwait
inc
and
mov
inc
add
mov
stos
xchg
inc
xchg
pusha
and
bound
xor
xchg
std
aam
cwde
mov
js
sbb
add
adc
cmp
add
mov
stos
xchg
call
ss
daa
push
std
jmp
add
scas
neg
push
aad
stos
xchg
jmp
aaa
fld
cs
sti
stos
cs
sub
jmp
jno
(bad)
(bad)
stc
mov
scas
add
es
out
mov
sub
movs
daa
sbb
add
retf
cmp
mov
cld
push
sahf
aaa
pusha
jle
aam
pusha
add
jecxz
stos
add
or
movs
retf
call
add
or
add
popf
ret
adc
out
inc
add
pop
xchg
cs
jle
pop
push
mov
rol
scas
pop
mov
mov
in
dec
jle
cs
jg
ss
add
add
xchg
lods
jne
mov
jbe
xchg
pop
std
pop
jmp
adc
aas
pusha
jle
cmp
hlt
mov
jo
and
add
ins
jle
cs
loopne
pusha
loopne
and
pusha
jle
adc
jmp
and
push
xchg
pusha
sti
adc
imul
arpl
mov
rol
sub
cmp
add
not
fisubr
cmp
and
fisubr
xchg
call
add
xor
inc
pop
movs
out
xchg
push
add
sbb
add
cs
test
pusha
jle
jecxz
add
imul
xchg
push
add
mov
add
jb
add
sbb
verr
clc
mov
jmp
add
mov
dec
mov
push
call
and
(bad)
inc
add
stos
mov
scas
jne
addr16
push
mov
cmove
sti
push
add
xchg
ds
jle
lods
mov
mov
repz
add
inc
cmps
movs
call
add
test
das
jle
inc
cmp
push
adc
cmp
lahf
mov
fadd
out
fwait
xchg
pusha
jne
xchg
mov
fiadd
sbb
ins
out
xchg
pusha
adc
add
outs
xchg
dec
mov
lds
sahf
jle
cs
add
sbb
add
pusha
jle
stos
jmp
push
fs
inc
add
pop
or
push
(bad)
(bad)
call
add
or
pusha
mov
add
ret
push
inc
inc
sub
add
xchg
inc
add
loopne
nop
cs
jle
push
adc
fs
jle
mov
add
mov
jle
mov
add
add
mov
add
xchg
jo
leave
stos
xchg
mov
pop
sbb
ret
add
push
adc
add
imul
dec
pop
call
and
(bad)
inc
aas
sbb
out
sub
adc
dec
jg
sub
mov
lea
sbb
stos
cdq
mov
cmp
sbb
add
cdq
out
push
add
sbb
add
mov
es
pop
cmp
push
inc
and
xor
mov
test
idiv
inc
add
jb
out
inc
add
test
lahf
push
lahf
mov
add
aaa
lods
pop
ja
inc
add
mov
adc
jp
sub
or
push
add
mov
sti
neg
cmc
mov
sbb
mov
cld
push
loop
jo
sbb
pop
mov
call
add
stos
sti
lods
mov
movs
add
pop
test
pusha
add
jne
inc
mov
mov
push
sub
push
add
jecxz
mov
imul
sbb
jo
jo
daa
rcr
xchg
iret
ror
(bad)
gs
mov
pop
sub
sbb
mov
pop
or
jns
sbb
jmp
call
inc
and
paddusw
jmp
push
out
inc
daa
push
adc
psrld
mov
pop
xchg
and
sti
pop
sar
xor
jae
popf
arpl
sbb
call
jnp
ds
push
int3
cdq
inc
add
cmp
add
push
stos
adc
jnp
cmps
inc
sbb
shr
xchg
inc
mov
xchg
retf
popa
dec
out
add
sahf
push
add
pop
inc
xchg
leave
rol
xchg
das
inc
inc
xchg
push
cmp
mul
mov
arpl
jmp
add
jb
xchg
mov
mov
fimul
mov
add
outs
cmps
pop
cmp
in
push
jge
shr
ja
scas
inc
add
pop
lahf
cmp
push
addr16
rol
xchg
jo
(bad)
inc
add
inc
push
xor
push
cmp
mov
out
inc
repnz
push
sub
ret
daa
sub
sbb
jp
enter
scas
call
(bad)
call
add
ret
push
dec
popf
mov
lods
mov
sbb
sbb
mov
push
add
xor
dec
xor
mov
add
inc
in
aad
push
add
add
sbb
aaa
mov
imul
and
inc
add
sbb
mov
lock
in
mov
pop
add
mov
mov
lahf
add
test
push
add
mov
mov
lods
sahf
mov
jno
cmp
add
int3
mov
push
add
inc
scas
jmp
mov
jecxz
xor
xor
dec
pop
cmp
stc
push
fs
frstor
and
mov
popf
add
cmp
gs
dec
cmp
mov
dec
add
push
cmp
add
or
in
add
add
test
jg
xor
call
cmp
data16
add
sbb
scas
lods
push
mov
lods
cmps
call
add
aam
popf
mov
inc
add
xor
push
add
jne
mov
add
and
dec
inc
dec
hlt
mov
jae
jns
jle
scas
repz
cmp
xor
jne
mov
addr16
cld
inc
dec
cmp
add
xchg
das
add
mov
xor
push
add
into
xor
mov
jl
adc
pop
cld
call
add
mov
xor
loope
movs
jmp
add
iret
lds
rcr
cmp
jmp
add
inc
cmp
sbb
call
pop
push
lods
test
mov
add
add
pusha
add
or
cmp
sti
inc
sar
add
and
mov
inc
dec
aam
add
add
mov
cmp
dec
arpl
cdq
jmp
std
sub
int
mov
nop
add
mov
test
pusha
add
mov
mov
outs
test
add
(bad)
test
add
push
outs
cmc
or
fwait
out
and
imul
cmp
movs
hlt
dec
imul
popa
add
int3
es
jo
movs
out
call
imul
and
mov
add
rcl
add
xor
neg
lds
lods
fcos
lock
mov
cmp
lods
adc
pop
inc
retf
lods
push
fistp
mov
push
imul
movs
inc
mov
pop
push
out
jl
mov
adc
jnp
dec
push
inc
(bad)
and
inc
add
(bad)
in
sbb
fs
pop
bound
pop
pop
pop
add
(bad)
lock
cmp
lods
mov
or
dec
xchg
jg
repz
sbb
inc
pop
xchg
inc
mov
jmp
jnp
or
mov
jmp
add
(bad)
lods
add
inc
add
mov
add
or
mov
jno
fwait
lods
daa
mov
jnp
hlt
mov
pop
add
push
enter
push
add
retf
mov
popa
xchg
mov
jmp
add
mov
sub
push
xchg
imul
and
imul
dec
add
sbb
mov
sahf
add
push
mov
xor
ins
jle
popf
or
fwait
adc
test
push
sti
xor
add
scas
xor
jmp
add
and
sub
movs
out
sub
pop
sbb
fdivrp
jo
and
and
clc
mov
iret
push
add
cmp
and
xor
les
add
je
sbb
call
arpl
cmps
adc
xor
in
pop
arpl
push
stos
cwde
call
scas
addr16
mov
sub
add
sub
and
mov
into
add
int
mov
nop
add
loopne
sti
out
add
add
rol
aaa
cld
scas
scas
(bad)
jmp
and
push
pushf
clc
push
cmp
out
fs
pushf
out
inc
add
xchg
inc
add
mov
cmp
shl
jno
push
mov
mov
in
add
cmp
add
cmp
push
add
jno
sbb
jg
add
enter
adc
and
loop
loopne
pusha
idiv
lods
leave
mov
mov
jl
and
pop
mov
in
and
sbb
call
add
add
add
jmp
rol
jo
mov
mov
xchg
nop
frstor
add
mov
add
js
iret
repnz
stos
add
rol
loope
pusha
add
pop
lods
jno
(bad)
adc
inc
mov
push
es
jp
push
test
iret
push
sub
add
ja
gs
jle
cmp
pop
scas
mov
std
add
add
add
xlat
ds
lahf
es
jmp
add
xchg
not
jle
rol
xor
xor
inc
adc
jmp
int3
sub
cmp
ret
add
adc
jmp
add
das
inc
test
inc
add
ret
mov
xor
adc
(bad)
pop
sar
add
add
cmps
dec
sub
or
push
push
jmp
add
pop
ret
idiv
add
add
sub
sbb
add
adc
adc
push
push
adc
cmp
lahf
call
hlt
pusha
loope
add
add
add
sub
cdq
jmp
add
jmp
idiv
pusha
add
mov
xchg
repz
jb
xor
xor
cwde
mov
inc
mov
loopne
jmp
imul
js
jp
iret
mov
or
arpl
push
dec
imul
pushw
movs
push
mov
xchg
inc
loop
pop
jmp
enter
call
add
hlt
jo
push
std
mov
lods
(bad)
push
cwde
mov
fild
mov
sbb
sbb
sub
stos
fwait
call
add
pop
pusha
nop
jmp
jg
jmp
add
ficom
pop
arpl
cmp
aas
mov
mov
jp
fistp
add
sbb
ret
xor
and
inc
imul
inc
add
pop
das
aam
div
sub
ja
mov
cmp
cli
jmp
add
adc
popa
fwait
call
fnsave
jns
sar
fwait
inc
adc
js
or
push
std
call
add
inc
jp
imul
(bad)
hlt
call
add
(bad)
mov
push
add
adc
add
push
push
ret
jnp
aaa
mov
pop
retf
mov
fld
mov
les
push
xor
mov
ja
push
daa
or
ss
adc
pop
cmps
mov
jmp
add
inc
cs
nop
xor
inc
add
sub
adc
mov
(bad)
xchg
jmp
add
and
ficom
jmp
ror
dec
fst
inc
add
lods
sbb
test
pusha
adc
jmp
jle
sbb
pop
sti
push
inc
push
pop
and
jmp
add
mov
test
mov
int3
mov
sub
(bad)
pop
xor
mov
dec
sar
adc
inc
and
add
cmp
dec
pusha
xlat
call
int3
mov
sub
add
inc
jb
push
(bad)
mov
mov
jb
pavgw
out
sbb
or
and
sbb
sub
inc
cdq
dec
sbb
jnp
xchg
mov
fnstsw
jge
sar
inc
add
or
sub
lahf
aam
rol
mov
add
add
add
jae
add
stos
add
dec
jge
push
add
cmp
retf
push
inc
xchg
inc
add
mov
mov
fld
ficomp
add
cmp
adc
outs
ret
cwd
cli
inc
adc
jg
fs
sar
cmc
movs
sub
gs
mov
add
jmp
mov
sub
dec
mov
fistp
add
repnz
call
add
and
in
jmp
jo
call
inc
aaa
fadd
add
push
loopne
std
inc
das
mov
inc
gs
aas
dec
inc
or
adc
jne
ins
push
scas
and
call
and
fwait
aas
pop
jo
cmc
mov
jnp
in
int
xchg
les
data16
cmp
sbb
cs
mov
sub
call
cmp
jne
push
push
call
add
push
call
call
pop
mov
cmp
jne
pop
push
mov
cmp
ja
call
cmp
je
lea
push
call
pop
mov
push
push
call
call
push
pop
mov
push
push
lea
push
call
xor
mov
mov
cmp
jbe
push
mov
mov
pop
call
push
pop
mov
push
cmp
jbe
mov
mov
push
mov
push
call
sub
push
mov
push
call
pop
push
call
call
cmp
jne
lea
sub
call
mov
call
mov
mov
pop
call
call
pop
mov
call
mov
mov
mov
mov
push
mov
push
push
push
call
cmp
jne
push
push
push
call
push
pop
mov
sub
push
push
lea
mov
push
call
lea
mov
push
pop
lea
call
lea
push
call
call
push
push
push
call
call
pop
mov
mov
push
lea
push
push
call
push
push
push
lea
call
mov
lea
push
push
push
push
call
lea
mov
lea
cmp
ja
call
cmp
ja
call
pop
cmp
ja
call
mov
call
call
pop
pop
xor
add
push
cmp
je
mov
push
call
lea
call
cmp
jne
mov
push
push
add
mov
call
lea
sub
push
mov
push
call
test
je
test
jne
pop
xor
mov
mov
sub
test
jbe
pop
sub
add
mov
pop
call
xor
lea
push
mov
push
lea
pop
call
pop
call
push
push
pop
add
call
pop
sub
push
push
mov
push
call
mov
push
pop
pop
mov
mov
push
push
push
call
sub
mov
mov
push
mov
pop
push
mov
push
call
push
push
push
call
xor
cmp
jne
mov
cmp
ja
mov
push
test
je
lea
sub
pop
cmp
jne
call
call
lea
push
lea
mov
add
cmp
jbe
cmp
ja
xor
pop
pop
test
jbe
mov
mov
push
push
call
lea
cmp
ja
mov
mov
mov
push
push
call
mov
pop
push
push
call
xor
pop
add
pop
mov
test
js
cmp
jnp
add
add
or
and
add
mov
call
jno
mov
mov
mov
jb
sub
sub
mov
add
sub
and
add
or
test
jne
cmp
ja
test
jp
sub
xor
and
mov
mov
add
add
push
je
or
mov
sub
mov
cmp
js
test
ja
mov
mov
xor
and
mov
add
jae
mov
or
mov
and
leave
test
jo
and
mov
and
add
test
jl
mov
xor
mov
mov
and
jae
mov
mov
mov
add
mov
cmp
jb
test
je
mov
sub
sub
mov
mov
add
and
movzx
test
jne
add
test
je
mov
cmp
je
test
ja
mov
leave
cmp
jb
test
jl
xor
and
mov
cmp
ja
or
and
ret
cmp
jno
mov
mov
mov
push
cmp
je
mov
mov
mov
mov
jne
mov
add
add
push
jb
mov
mov
mov
jmp
test
ja
mov
add
xor
mov
pop
jne
xor
and
mov
mov
cmp
jno
mov
and
mov
mov
add
mov
mov
cmp
jle
cmp
jp
mov
mov
sub
mov
cmp
je
cmp
ja
mov
mov
sub
mov
add
test
jo
or
mov
cmp
jne
mov
cmp
jne
mov
mov
cmp
jge
mov
add
push
mov
push
cmp
je
or
or
xor
mov
push
jo
and
add
mov
jae
sub
add
mov
sub
cmp
jo
test
je
xor
xor
mov
jae
or
or
sub
mov
mov
cmp
jne
cmp
jnp
sub
and
add
push
and
mov
test
jnp
test
jle
mov
mov
mov
mov
and
sub
xor
mov
test
jle
xor
mov
call
cmp
jb
mov
xor
mov
test
jp
xor
or
pop
cmp
jne
sub
add
cmp
jae
cmp
ja
mov
add
mov
dec
jne
cmp
jne
mov
leave
test
jp
cmp
jb
add
sub
pop
mov
pop
jo
and
sub
pop
mov
pop
jne
mov
mov
xor
jno
xor
or
mov
and
leave
cmp
jo
test
js
or
xor
mov
xor
or
ret
cmp
jo
mov
mov
cmp
jo
mov
mov
or
add
jne
mov
mov
or
sub
call
jo
sub
mov
mov
jo
add
mov
add
push
jne
sub
add
mov
add
pop
cmp
jno
test
ja
mov
or
and
mov
mov
add
push
test
jns
or
mov
mov
push
push
cmp
ja
xor
mov
call
push
test
jb
mov
mov
mov
pop
cmp
jbe
mov
or
mov
sub
jne
cmp
jb
cmp
jl
mov
mov
or
add
mov
mov
mov
add
cmp
jne
mov
push
cmp
jns
and
call
cmp
jge
mov
sub
and
push
test
jp
mov
mov
mov
cmp
jge
cmp
jae
mov
xor
mov
add
xor
mov
add
push
cmp
je
cmp
jle
add
mov
add
mov
push
mov
push
jo
mov
mov
call
cmp
js
test
jle
and
xor
add
mov
or
mov
push
add
add
jno
and
mov
and
add
push
cmp
jns
cmp
ja
and
or
or
xor
sub
add
push
test
jb
test
jle
and
mov
mov
add
push
test
jbe
or
mov
or
mov
mov
test
jbe
test
jns
and
xor
sub
or
mov
mov
cmp
je
sub
and
sub
add
push
test
jb
add
mov
mov
sub
pop
jne
and
sub
mov
mov
jae
sub
xor
and
mov
jo
add
mov
mov
test
jl
xor
mov
mov
sub
add
add
add
xor
jno
sub
mov
mov
mov
cmp
jle
or
mov
xor
add
test
jb
sub
cmp
jbe
cmp
jne
mov
add
add
add
mov
add
jo
mov
mov
or
mov
sub
jne
test
jl
cmp
jae
add
and
and
and
pop
test
jo
mov
mov
mov
pop
cmp
jbe
and
ret
cmp
jb
or
xor
and
call
jae
mov
mov
or
and
xor
jo
mov
add
pop
cmp
jp
cmp
jp
mov
add
call
dec
adc
add
add
add
sbb
add
xor
add
sub
add
push
add
add
add
mov
inc
add
add
add
inc
add
add
xor
add
sbb
add
jmp
adc
jbe
or
in
jb
popa
out
and
retf
mov
jmp
addr16
inc
push
add
sbb
arpl
inc
loope
mov
arpl
add
add
add
add
add
add
or
or
or
or
or
or
add
adc
call
adc
adc
adc
adc
fisub
jno
push
bound
cmp
repnz
inc
rol
inc
xchg
or
das
sbb
or
out
mov
pop
pop
fdiv
mov
ds
cmps
jle
rol
cmp
aam
adc
ss
mov
fadd
jne
sub
and
rol
cs
ret
mov
pop
xor
and
mov
cmp
pop
sti
inc
(bad)
xchg
pusha
in
xchg
xchg
sub
ins
ret
sahf
sar
rep
push
pop
outs
xchg
(bad)
cmps
sbb
lock
push
inc
popf
mov
lea
xchg
cmp
inc
mov
fild
sbb
mov
inc
xchg
jmp
into
sub
ror
xlat
xor
int3
js
sub
ss
push
je
nop
mov
push
out
ja
in
or
mov
inc
and
aaa
jl
stos
test
stos
es
cmp
movs
sar
out
sahf
mov
mov
(bad)
and
ret
movs
pop
mov
xchg
nop
sbb
nop
sbb
mov
lods
sbb
inc
xor
pop
lods
cmp
xchg
fimul
pop
sti
add
aaa
movs
lahf
lock
xor
repz
jns
cs
cmp
adc
push
xchg
fwait
push
int3
adc
cld
retf
outs
test
ficomp
xchg
lahf
cmps
popf
or
mov
pop
and
sbb
pop
mov
push
mov
mov
inc
mov
bound
sub
clc
jo
test
lock
repz
(bad)
int3
jbe
sub
push
out
xchg
xchg
xchg
loop
mov
jp
push
jg
mov
and
dec
das
mov
push
xor
and
adc
les
push
mov
xor
and
rcr
push
mov
push
xchg
mov
arpl
rol
mov
dec
rcr
adc
outs
push
test
out
dec
fstp
pop
aam
les
into
pop
lods
xchg
out
mov
push
add
cld
cmp
inc
test
inc
fdivr
fistp
pop
jge
dec
jae
in
cmp
jmp
(bad)
cwde
mov
aam
popf
cmp
push
jmp
mov
loop
ud2
mov
pop
push
push
and
adc
test
xchg
pop
popf
cwde
cmp
(bad)
mov
dec
push
cmp
repz
aas
inc
jnp
shr
jmp
jmp
pop
jl
xchg
paddw
(bad)
rol
push
sub
jmp
mov
xor
js
rcr
outs
pushf
in
ins
mov
xchg
ja
jb
je
outs
out
pop
scas
add
sbb
inc
xchg
mov
xchg
mov
ds
pop
inc
inc
int3
dec
dec
jb
stos
cdq
sub
test
push
sbb
sbb
fs
dec
xlat
dec
dec
nop
xchg
aad
push
in
xchg
imul
(bad)
js
adc
adc
(bad)
jmp
sub
enter
add
je
cld
xchg
cdq
or
loop
les
sub
nop
sbb
in
ds
ds
xor
lds
inc
add
dec
or
mov
xor
jae
bound
fwait
test
mov
icebp
push
or
mov
das
mov
ss
cwde
and
sub
loope
inc
pop
stos
sub
mov
adc
adc
xchg
shr
xchg
xchg
mov
ret
dec
jnp
aad
mov
pusha
mov
adc
retf
es
lea
xor
adc
xchg
dec
jle
dec
(bad)
mov
ret
push
pushf
jbe
fsubr
lds
xor
mov
inc
add
jmp
inc
arpl
xchg
daa
pop
mov
and
ja
(bad)
jae
push
les
stc
fldcw
ret
pop
jno
sbb
push
in
inc
mov
dec
sbb
xchg
jp
nop
fistp
push
scas
xlat
pop
pop
cmp
jecxz
(bad)
sbb
cmp
mov
fnstenv
inc
dec
hlt
jmp
(bad)
stos
imul
ja
xlat
nop
outs
outs
pusha
xor
aam
or
retf
push
je
lock
mov
add
cmp
jns
adc
mov
jbe
sar
xlat
or
pop
out
pop
pop
sbb
pop
sub
add
fidivr
jg
inc
sbb
imul
dec
push
nop
je
arpl
jbe
xchg
cdq
fs
lahf
sbb
sub
mov
jecxz
(bad)
sbb
xchg
clc
dec
cmp
cmp
bnd
pop
xlat
push
jns
cs
pop
loop
push
gs
mov
or
js
retf
inc
in
or
loope
pop
movs
fisttp
sub
jnp
cmp
and
jl
or
cmps
mov
xor
rol
xchg
loope
call
daa
fisttp
push
bound
lock
add
les
lds
mov
aaa
xchg
adc
ins
xchg
jl
cmp
dec
add
mov
lea
mov
mov
add
sub
jo
adc
clc
ror
xor
xchg
aaa
dec
dec
call
mov
idiv
xor
leave
mov
fbstp
or
cmp
cmp
dec
cmp
xchg
push
cmps
es
pop
add
cli
mov
loopne
xor
pop
sbb
mov
stc
out
pop
lahf
jecxz
lea
jne
leave
jmp
scas
mov
sub
adc
lea
mov
out
mov
(bad)
jns
stos
daa
arpl
push
pop
imul
scas
mov
sar
call
mov
out
inc
and
pop
test
push
popf
cmp
fld
xchg
jge
retf
mov
add
movs
stc
mov
pop
(bad)
call
mov
pop
in
jl
aaa
push
push
pop
jle
in
inc
lock
xchg
mov
cmp
push
mov
add
jmp
adc
sub
dec
mov
push
inc
add
stos
js
xchg
push
stos
mov
mov
cmps
add
pop
mov
add
mov
lahf
mov
test
ret
mov
mov
in
into
jecxz
push
pop
sahf
inc
pop
add
mov
and
movs
cdq
aas
jnp
iret
adc
int3
ss
pop
pop
mov
je
adc
pop
stos
imul
xor
fneni(8087
pushf
push
cmps
xchg
aaa
and
pop
cmc
jo
add
inc
leave
mov
nop
fcomp
push
dec
jle
sub
and
mov
pop
loopne
rcl
fwait
adc
cs
mov
(bad)
mov
sub
cld
mov
int3
in
mov
sbb
fisub
ret
arpl
mov
xchg
jno
adc
ja
push
mov
add
push
test
addr16
test
push
xchg
xchg
lds
jbe
adc
xor
xor
lea
jno
cmp
adc
cmp
jb
std
sub
pusha
pusha
adc
push
mov
mov
test
repz
dec
sti
cmp
loope
sub
add
inc
daa
enter
test
loope
fild
adc
imul
retf
stos
nop
cmp
xchg
sbb
xchg
or
mov
ins
test
lea
ins
mov
or
das
pop
rol
jle
mov
test
dec
movs
xchg
xor
push
xchg
and
jne
cmp
sahf
stc
inc
sub
and
adc
mov
or
push
dec
xor
add
jb
jg
sbb
loope
stc
fwait
mov
jle
push
test
adc
push
xchg
pop
imul
clc
or
loopne
mul
es
mov
add
cmp
aad
add
shl
lahf
inc
fiadd
jns
sbb
mov
jp
mov
(bad)
movs
ffree
(bad)
fiadd
or
push
loop
mov
sahf
lds
sub
mov
(bad)
mov
in
add
xor
(bad)
rcl
mov
and
or
jo
xor
dec
popa
lods
cmp
ja
in
rcl
cmp
push
loopne
(bad)
push
retf
(bad)
jbe
or
mov
jle
jo
xor
ss
outs
mov
jnp
sbb
and
push
es
call
fs
mov
jb
mov
xchg
adc
adc
mov
call
pop
rcl
test
adc
push
mov
dec
sub
shl
jb
lahf
lods
pop
xchg
clc
add
cmc
aas
frstor
jno
pop
div
scas
lods
ins
push
loope
mov
and
rcr
ins
push
divps
loop
jg
push
push
sti
sbb
rol
push
pop
rcr
adc
imul
xchg
ins
shl
and
js
cs
popf
cmp
push
and
into
fwait
pop
stc
fstp
frstor
sti
repz
mov
mov
ret
xchg
xchg
jge
and
vpsubd
xor
nop
or
sub
ja
ja
jmp
icebp
cmp
jecxz
and
cmp
jmp
xor
add
push
mov
mov
iret
dec
in
ss
in
dec
pop
xchg
mov
sub
scas
push
cmp
push
retf
adc
(bad)
mov
xor
cdq
push
je
repnz
je
(bad)
push
pop
and
outs
leave
in
clc
fldcw
leave
pop
xchg
inc
pop
pop
les
cmp
pop
push
xchg
stos
xchg
rol
cmp
shl
sbb
mov
mov
jle
cwde
shr
pusha
push
cmps
cdq
sub
(bad)
aam
mov
cmps
and
pop
movs
cmp
aas
fwait
in
mov
aad
sar
xor
xor
sbb
xor
xchg
in
movs
gs
fisttp
lea
pop
mov
and
adc
mov
inc
or
pusha
dec
outs
test
inc
and
sub
add
adc
lahf
ins
sub
add
stos
mov
das
jnp
pop
sbb
mov
les
mov
mov
dec
call
scas
sub
xchg
leave
ror
call
mov
inc
or
mov
call
in
xchg
bound
es
idiv
test
and
mov
push
inc
pop
mov
call
xor
mov
fisttp
retf
pop
fdivp
mov
rcl
enter
mov
adc
std
ret
and
jl
adc
push
ret
cmp
jmp
jo
xchg
lods
cli
aaa
sbb
int
outs
dec
sbb
enter
push
cmp
mov
or
xchg
sbb
shl
dec
jmp
gs
cmps
aaa
mov
jo
or
push
cwde
adc
add
jae
add
and
in
pop
mov
jmp
mov
nop
sbb
(bad)
xlat
cmps
xchg
xor
sti
dec
popf
mov
mov
pop
add
leave
mov
hlt
adc
mov
push
mov
dec
push
push
mov
sahf
stos
aas
jb
add
(bad)
mov
ret
mov
jbe
arpl
jns
sbb
mul
inc
stc
jnp
inc
mov
and
fdivr
aas
inc
mov
in
mov
fiadd
lock
popf
outs
push
mov
ins
nop
and
or
pop
pushf
imul
(bad)
push
or
sbb
cmp
jmp
imul
loope
inc
or
jmp
lods
pop
sbb
lods
repnz
xor
and
jmp
int
loopne
push
cmp
jecxz
arpl
rol
dec
push
call
dec
es
add
hlt
sar
push
add
test
pop
sub
out
pop
mov
(bad)
inc
adc
in
or
and
movs
data16
fisub
push
mov
retf
gs
adc
ja
dec
nop
jle
and
adc
and
pushf
das
xchg
jl
sub
mov
test
sub
cmps
out
aas
xchg
nop
pop
inc
jmp
enter
push
loop
xchg
mov
ins
das
inc
xor
jmp
imul
imul
ror
movs
loopne
in
sar
or
test
cmps
je
mov
xor
imul
xchg
mov
mov
div
push
sub
adc
aas
push
lds
xor
lds
sbb
add
xchg
xchg
pop
jo
dec
mov
mov
xchg
xchg
or
clc
xor
in
mov
call
int3
stos
dec
or
lds
jmp
shr
cmps
mov
ss
lock
pop
sub
adc
cmp
shl
cmps
aam
pop
mov
jmp
sbb
sub
pop
je
imul
push
(bad)
xor
jb
mov
pop
es
enter
icebp
cmps
add
mov
in
jg
movs
aam
mul
xchg
push
imul
inc
push
push
jbe
shl
mov
push
mov
or
popa
pop
pushf
(bad)
call
popa
hlt
(bad)
not
mov
ffree
clc
repz
movs
adc
sub
mov
out
lock
lods
inc
inc
sti
sbb
stos
popa
aam
stc
pusha
cmp
jmp
add
fbstp
fsub
dec
jp
xchg
fnstsw
and
mov
pusha
es
cld
iret
push
scas
jmp
mov
xor
(bad)
daa
and
xchg
jmp
mov
sbb
imul
(bad)
(bad)
cmp
push
jno
jle
dec
scas
stc
pop
inc
inc
nop
pop
xchg
popa
pop
dec
cmp
jns
jno
pop
test
repnz
cmc
add
xchg
les
jnp
imul
(bad)
lock
popf
scas
pop
xor
and
add
aaa
(bad)
inc
out
cmps
mov
outs
push
loope
jbe
enter
sbb
in
adc
pop
cmp
cmps
inc
xadd
lds
arpl
in
push
jp
lds
mov
(bad)
dec
cmps
mov
xchg
xor
cmp
int3
repz
int3
xlat
adc
cmps
icebp
xlat
fist
lds
aam
or
sahf
adc
push
sahf
jecxz
(bad)
fld
jns
add
retf
dec
stos
push
test
inc
inc
xor
mov
sbb
cmp
or
in
data16
pop
adc
test
fdivr
push
out
idiv
adc
adc
push
add
cmp
pushf
shr
sub
arpl
inc
adc
stos
jmp
loop
push
mov
cld
jle
(bad)
aam
jns
fs
out
fsub
rcr
pop
leave
ins
add
aaa
cmp
dec
lock
mov
movs
bound
ficomp
jns
cmps
fmul
mov
add
retf
jge
js
xchg
lods
add
cmc
mov
scas
sbb
pop
lods
sbb
adc
inc
jae
jp
vaddps
mov
mov
mov
ret
mov
cmp
into
into
in
nop
mov
adc
push
out
cmp
stc
and
dec
xchg
jne
in
jnp
add
jl
(bad)
int3
jle
cmp
test
fsubr
in
push
(bad)
mov
jae
cmp
sub
push
mov
mov
popa
inc
sbb
mov
repnz
sar
adc
jnp
pushf
push
adc
fcomp
xchg
inc
lods
jl
aad
inc
movs
pop
loopne
inc
pop
repz
aas
inc
sub
and
mov
and
aad
xor
test
xor
stc
jl
mov
cmc
and
jmp
cmp
sar
fmul
lods
inc
mov
adc
loop
cmp
sbb
adc
mov
xor
pusha
dec
(bad)
mov
shl
std
pop
fs
enter
imul
xchg
arpl
pop
jb
mov
inc
push
and
(bad)
stc
ret
adc
repz
in
inc
ja
inc
(bad)
scas
sub
dec
daa
pop
push
inc
xor
(bad)
imul
jo
inc
jmp
pop
aaa
ins
adc
outs
mov
or
loope
call
xor
and
mul
sub
adc
jns
out
pusha
in
(bad)
out
int
push
cmp
and
jae
test
jb
cli
add
push
jmp
int3
and
cmp
pop
jg
out
mov
call
movs
jbe
daa
and
mov
or
and
dec
mov
inc
sbb
fs
add
push
pop
scas
cmp
jle
pop
clc
push
loope
repnz
adc
jbe
out
outs
ret
das
push
test
aaa
ret
mov
mov
sub
(bad)
pushf
xlat
jo
jl
mov
(bad)
push
pop
out
pop
xor
sbb
popf
jp
rcr
test
adc
jg
mov
idiv
jae
inc
dec
mov
es
jle
std
mov
adc
mov
js
retf
inc
sub
cmps
fmul
lahf
or
cld
jno
pop
mov
loope
rol
stos
inc
push
aam
or
inc
aad
repz
sahf
mov
mov
movs
add
fimul
dec
imul
sbb
lahf
jp
push
ins
jecxz
scas
cli
sahf
pop
fidivr
cdq
pop
rcr
cwde
in
and
mov
ja
jne
outs
out
add
or
push
dec
xor
aas
adc
lea
scas
movs
push
fwait
(bad)
mov
xor
cmp
movs
cmp
mov
pop
push
inc
enter
sbb
dec
adc
xor
adc
les
arpl
xchg
rcr
movs
add
pop
push
and
mov
cmps
dec
jb
mov
pop
sbb
(bad)
enter
pop
add
xor
dec
fild
out
std
xor
aas
inc
ins
or
pop
xchg
or
js
test
or
xor
mov
push
mov
sub
data16
pop
mov
xlat
mov
add
jge
or
jo
ror
popf
cmp
leave
dec
add
das
ja
jno
pop
loop
call
xor
idiv
xchg
mov
lds
fwait
pop
daa
jo
lods
push
aam
es
in
movs
fwait
or
jbe
xor
pop
xor
ret
das
pop
adc
retf
out
neg
cli
(bad)
jmp
or
test
loope
mov
sbb
imul
xor
add
fisubr
pop
jmp
xor
ds
xchg
cwde
push
pop
inc
in
push
sbb
ret
add
je
and
cmps
(bad)
(bad)
xlat
jb
jo
mov
aam
adc
push
or
sbb
or
xchg
cmp
jno
rcr
rcr
jp
popaw
mov
aad
push
and
ret
out
mov
cmp
mov
inc
clc
pop
mov
and
mov
cmps
into
scas
xor
push
xchg
cmp
mov
or
les
inc
xor
test
or
bt
mov
sub
int
xchg
push
or
and
(bad)
jae
hlt
test
mov
sar
mov
add
cmc
or
lock
call
jl
das
mov
lahf
test
leave
rol
xchg
push
fs
call
xor
loopne
pop
jne
xor
in
fdiv
push
retf
add
test
dec
rol
pop
sbb
pop
cmp
sub
lahf
mov
mov
add
mov
or
repnz
push
pop
dec
xchg
inc
popf
cmp
fsub
mov
stc
inc
fisttp
call
ja
outs
xor
inc
adc
mov
rcl
inc
jo
xor
ja
(bad)
jle
jmp
inc
fmul
in
mov
jmp
(bad)
jge
adc
das
and
sbb
repnz
loopne
cdq
jnp
fwait
test
mov
inc
in
(bad)
arpl
push
pop
call
popa
mov
cdq
push
jmp
and
sub
test
fsub
push
or
sbb
cmc
pushf
mov
(bad)
jns
xor
push
repz
dec
aas
xlat
jnp
shl
jns
add
cmp
adc
push
iret
xchg
(bad)
lock
inc
cmps
cmp
xor
xor
mov
pushf
push
push
ret
sbb
mov
movs
sub
mov
sbb
outs
call
inc
outs
sahf
mov
cli
stos
and
cmp
add
adc
pop
scas
add
pop
pop
iret
and
mov
pop
popf
mov
dec
mov
mov
xchg
sbb
lea
stos
inc
xchg
mov
pop
pop
jmp
sub
dec
fistp
(bad)
push
int3
cs
mov
cs
enter
ins
push
pop
dec
or
pop
add
mov
hlt
leave
loopne
adc
push
xor
shr
fdiv
clc
sub
retf
(bad)
xchg
out
sub
out
dec
inc
push
nop
out
pop
pusha
loop
ins
dec
out
sbb
inc
ds
jmp
cmp
push
inc
into
dec
and
cmps
inc
xchg
add
push
iret
scas
and
int
mov
movs
(bad)
out
test
mov
jle
push
dec
icebp
rol
enter
push
xor
repz
cdq
cmp
dec
clc
addr16
lahf
aad
retf
retf
cmp
push
scas
mov
call
sub
cmp
add
iret
outs
jae
adc
in
add
jge
jmp
ds
push
cmc
mov
lods
mov
cmps
mov
jp
mov
mov
ficomp
jmp
fist
xchg
or
sbb
push
cmp
movs
frstor
pop
call
popa
outs
jmp
add
xchg
pop
jecxz
add
mov
jmp
dec
mov
retf
mov
cwde
loope
pop
in
or
and
(bad)
cmps
xchg
sbb
fdiv
enter
aad
(bad)
(bad)
cdq
movs
xor
cmp
outs
jb
das
retf
or
rcl
sub
add
(bad)
jne
jge
fimul
out
sbb
dec
cld
rol
jae
mov
call
aad
cmp
rcl
test
jg
jl
mov
jbe
lock
test
mov
pop
mov
cmp
loopne
adc
fsubr
dec
dec
adc
lods
push
rol
sbb
fwait
add
dec
inc
rcl
dec
xor
out
jmp
sbb
stc
leave
js
xor
mov
mov
dec
jns
int
test
cmp
das
adc
add
inc
paddd
fsub
hlt
xor
push
test
push
push
mov
inc
xor
and
push
push
test
outs
ins
or
jl
pop
aam
out
add
repz
addr16
arpl
int3
mov
popa
mov
mov
jo
test
sub
sar
adc
imul
push
(bad)
jl
inc
test
and
neg
lock
rol
mov
adc
push
fisubr
dec
mov
ret
sbb
sub
sbb
mov
or
xor
mov
mov
adc
sbb
retfw
push
ins
lods
test
loope
push
adc
pop
shl
add
lods
call
mov
jmp
pop
xchg
mov
dec
mov
sbb
out
jnp
jb
adc
cdq
cmp
xor
mov
call
std
sub
mov
call
mov
push
ins
cmp
mov
pushf
movs
and
scas
mov
mov
adc
data16
dec
pusha
jmp
fsub
movs
mov
test
add
dec
mov
cmp
jge
xor
in
mov
push
scas
lods
fisub
pop
int3
inc
test
mov
out
sbb
dec
icebp
nop
xchg
loop
fisttp
pop
shl
adc
lea
add
dec
jne
ds
or
je
xor
pop
cmp
xor
dec
xor
pop
xor
pop
test
icebp
and
add
jo
dec
mov
push
mov
test
jmp
repnz
loopne
inc
in
pushf
add
enter
jp
sar
jae
scas
sub
and
cmps
mov
push
mov
xchg
adc
je
or
ds
xlat
jne
jmp
xor
mov
call
add
push
jmp
mov
cld
add
add
inc
mov
mov
loop
cmp
repz
jnp
xchg
jecxz
and
push
xor
or
mov
xlat
inc
(bad)
loop
mov
addr16
sub
fidivr
pusha
cmps
mov
cmp
dec
push
push
icebp
or
cld
ja
(bad)
(bad)
or
scas
adc
push
xchg
fwait
(bad)
cmp
inc
call
and
jns
les
and
add
cmp
gs
das
xor
mov
out
xchg
repz
retf
or
jecxz
jl
repnz
aam
loope
xchg
dec
or
ds
cdq
lds
dec
sti
outs
or
call
adc
mov
and
dec
jmp
popa
sub
add
dec
mov
in
mov
or
mov
push
test
not
ret
xchg
inc
push
cmc
and
mov
mov
xor
push
jmp
lea
popa
loope
adc
mov
jo
in
mov
clc
cld
sub
jae
sar
(bad)
data16
call
dec
mov
mov
push
sbb
inc
(bad)
loope
sbb
sub
ret
test
movs
test
daa
or
cld
push
shl
ds
xor
mov
add
pusha
pop
popa
dec
in
pop
mov
mov
cmp
add
mov
push
fist
jbe
outs
xchg
scas
jo
jb
mov
out
(bad)
xor
jb
mov
xor
lds
ret
push
jae
inc
ss
push
aam
hlt
scas
and
xchg
aad
aad
sub
xlat
inc
in
outs
pop
jecxz
fs
adc
or
adc
sub
inc
mov
xchg
sub
xor
scas
ds
cli
push
adc
ds
sub
call
cs
in
mov
sub
ss
imul
ja
adc
loope
mov
scas
push
adc
jmp
dec
cdq
push
push
stc
popf
pop
or
push
imul
jmp
loopne
imul
cmp
(bad)
mul
outs
cmc
stos
imul
inc
std
pop
call
mov
int
dec
fldcw
cmpps
ins
inc
pop
pop
pop
dec
cmp
xor
arpl
adc
frstor
mov
ja
cmc
ins
add
mov
or
jecxz
or
cmp
mov
(bad)
pop
js
cmp
mov
push
dec
xor
sbb
repz
aam
push
xchg
push
loope
jl
retf
jmp
mov
cwde
outs
inc
pop
mov
xor
adc
jae
mov
sbb
movs
mov
push
call
dec
imul
in
inc
stos
inc
data16
sub
jecxz
or
icebp
push
xlat
pop
scas
ins
jno
retf
pop
test
jl
jb
imul
ror
in
mov
xor
std
cdq
and
mov
cmps
xchg
xor
es
lahf
out
loope
jl
lods
or
push
retf
add
xor
dec
xchg
xchg
arpl
mov
xchg
imul
es
jg
test
mov
add
mov
retf
pop
or
fbld
lds
mov
jmp
mov
cmps
push
jno
cmp
jmp
in
les
in
scas
fs
and
test
(bad)
adc
jmp
iret
ss
ja
or
inc
ja
mov
add
cmp
lods
inc
dec
popa
pop
fwait
mov
int
nop
add
cmp
bound
xor
jl
(bad)
sbb
in
out
push
stc
xor
out
mov
cmp
fisttp
mov
call
mov
mov
xchg
mov
push
mov
lods
mov
in
mov
or
inc
cmp
lea
push
mov
int
idiv
pushf
arpl
(bad)
test
jmp
ds
mov
mov
sub
sbb
dec
mov
cmp
sub
lds
adc
lods
pop
add
inc
out
xlat
sbb
pop
mov
cmc
adc
mov
add
jle
out
adc
imul
es
cwde
enter
js
shl
mov
add
loopne
xor
mov
out
sub
clc
mov
repz
aaa
sti
popf
pop
cmp
ds
mov
add
fnstenv
push
call
adc
int3
xchg
aad
ror
aam
sub
ins
imul
arpl
xchg
push
mov
imul
sub
outs
or
imul
sti
lds
push
stc
iret
pop
adc
mov
loop
sbb
xor
sub
or
and
dec
fadd
push
loopne
lock
xchg
cdq
fstp
not
out
cmp
cli
adc
add
xchg
push
leave
xchg
test
cdq
mov
inc
xchg
rcl
or
jnp
out
pop
mov
mov
jo
or
repnz
push
inc
popa
add
jmp
call
fcomp
or
add
pop
pushf
int
pop
mov
daa
or
dec
shl
cs
stos
icebp
xor
stc
push
enter
or
movs
cdq
sub
jno
cmps
jae
shl
push
cmp
mov
cs
xor
mov
adc
cmps
cmps
mov
shr
xor
mov
movs
sbb
pushf
add
imul
les
loope
mov
mov
mov
and
cmp
rol
js
call
pop
nop
jno
nop
sbb
sub
pop
cwde
dec
add
fcomip
ja
nop
xchg
shl
fld
add
fwait
pop
pop
mov
inc
xchg
mov
xchg
add
out
int
lds
imul
fcomp
pop
in
mov
xchg
mov
xor
dec
(bad)
add
dec
mov
pop
mov
push
sub
in
jo
sbb
sub
loop
xchg
push
pop
pop
add
lsl
movs
cmp
mov
cli
fcmovnbe
or
cmp
push
(bad)
sbb
shl
arpl
mov
fcomp
and
retf
add
xchg
push
setge
pop
retf
iret
shr
jmp
outs
add
sub
(bad)
fild
fisttp
mov
and
xlat
dec
jmp
inc
pushf
lock
jge
mov
inc
bt
push
daa
data16
imul
pop
push
imul
pop
sub
add
push
add
sub
(bad)
pop
dec
mov
out
jns
mov
ins
sub
arpl
xlat
push
inc
push
es
ret
push
ins
scas
or
mov
sbb
jp
dec
fmul
inc
push
xchg
pop
dec
jno
push
(bad)
cmc
mov
nop
adc
and
aas
sub
push
std
jne
sar
sbb
jp
mov
pushf
cmps
dec
inc
out
xor
pop
outs
dec
shl
mov
mov
aas
fnstenv
mov
gs
push
push
jno
or
stc
std
push
in
je
arpl
adc
push
or
mov
gs
cmps
scas
mov
sbb
jle
call
add
mov
lahf
bound
and
push
or
fidiv
shl
sbb
std
mov
jmp
mov
dec
clc
cwde
(bad)
pop
mov
jmp
jp
sub
(bad)
pop
pop
jb
leave
and
test
fsub
inc
loope
mov
add
leave
dec
addr16
mov
or
loope
push
cwde
ds
mov
movs
retf
fst
jg
mov
mov
mov
jnp
or
inc
stc
and
ror
mov
lea
fwait
add
mov
data16
out
mov
mov
lods
inc
xchg
and
pusha
fisttp
out
aam
push
call
dec
mov
pop
pusha
fidivr
sar
cmp
test
jne
or
pop
rcr
cmp
clc
push
jmp
nop
gs
(bad)
enter
pop
jecxz
jg
add
hlt
out
pop
cmp
pop
xchg
dec
push
test
call
fdivr
jo
jmp
data16
iret
inc
fst
push
shr
jbe
add
push
fbld
cmps
pop
mov
pop
add
sub
stos
mov
stc
cmps
es
cs
pop
xor
mov
jmp
pop
pushf
fs
(bad)
shr
adc
adc
aaa
mov
cmc
or
cmp
inc
push
std
bnd
lahf
retf
push
sbb
dec
jp
mov
loop
xor
dec
(bad)
cli
mov
clc
jnp
and
movs
ret
mov
(bad)
or
nop
xchg
pop
mov
out
and
or
mov
scas
sub
add
xor
int
mov
pop
push
sbb
mov
jle
jmp
repz
jns
es
fwait
push
in
ins
push
lock
mov
lods
inc
mov
sub
sub
cmp
sbb
mov
sub
mov
movs
and
int
(bad)
jns
adc
movs
push
test
push
sbb
pop
cdq
pushf
sub
jnp
cmp
adc
xor
jno
pop
clc
jl
push
outs
sahf
or
loopne
outs
pop
sub
lds
ss
add
jne
popa
int3
and
sub
mov
(bad)
mov
push
mov
pop
cmp
jns
jmp
push
jmp
adc
into
aas
mov
mov
xchg
add
xchg
fdiv
shl
in
pop
inc
adc
pop
inc
push
xchg
jg
jl
sbb
cmp
fcmovb
sti
pop
test
es
clc
pop
imul
sub
push
pop
loopne
nop
popa
jmp
jno
sub
mov
scas
cmp
fld
aas
movs
push
mov
lea
fs
setle
int
aad
push
mov
int3
fwait
ins
xor
mov
scas
in
rcl
adc
jo
jnp
test
es
fnstenv
ret
xchg
sbb
mov
xlat
adc
sti
les
xchg
dec
pop
stos
outs
cmp
and
jns
in
jecxz
mov
and
and
cli
sub
jmp
and
dec
push
mov
sbb
dec
ds
leave
cmp
adc
add
int
cmp
jecxz
xlat
push
call
or
jg
adc
or
dec
push
mov
fdiv
sub
jl
cmp
inc
rcr
inc
xchg
imul
inc
test
out
adc
shl
inc
sbb
sti
popa
sbb
adc
mov
sbb
sar
sbb
fldenv
xor
pop
lods
or
fist
mov
xor
mov
xchg
mov
mov
sbb
add
ret
dec
xchg
jl
loope
in
ins
mov
call
sbb
arpl
sub
cmps
xchg
mov
fwait
add
push
xchg
fisttp
inc
in
out
mov
adc
mov
fisttp
add
xchg
adc
call
sbb
sbb
sub
mov
clc
or
imul
cmp
fcmovne
stos
add
pop
cwde
out
sbb
pop
xor
stos
xor
xchg
movs
mov
nop
mov
dec
add
xor
mov
into
in
dec
push
dec
mov
add
jp
test
xchg
jae
into
pop
imul
iret
cmps
add
inc
add
inc
mov
cmc
loopne
movs
iret
cmps
add
hlt
mov
ins
lods
test
std
sar
or
mov
in
adc
xor
movs
mov
int3
stc
sbb
movs
sti
fnsave
mov
xor
or
push
push
imul
mov
bound
push
jnp
inc
aas
adc
fistp
xor
or
out
pop
xor
ins
outs
pushf
fstp
dec
popw
ja
or
push
fcomp
mov
(bad)
fnstsw
sub
mov
dec
sub
add
push
icebp
mov
inc
adc
mov
fwait
loop
inc
mov
or
jns
(bad)
jnp
cmp
jmp
js
dec
adc
movs
retf
ficomp
sahf
sub
push
into
jne
cwde
jbe
dec
fdiv
fsub
adc
ret
pop
xor
mov
cmc
mov
cvtpi2ps
ins
test
adc
or
(bad)
xchg
push
dec
aam
test
mov
imul
dec
imul
mov
sub
clts
push
pop
je
inc
inc
add
scas
lea
push
add
cwde
pushf
rol
xor
jns
pop
mov
dec
or
test
jns
sub
(bad)
jp
pusha
sub
dec
pop
in
(bad)
mov
push
mov
sbb
mov
pop
imul
repnz
lea
inc
inc
repnz
dec
test
pop
adc
add
mov
mov
test
adc
cdq
out
and
cmp
cs
xor
mov
or
leave
jle
fadd
std
push
mov
jns
push
nop
cdq
aad
fmul
in
movs
ret
inc
xchg
out
rcl
sbb
sar
sub
pushf
or
ja
scas
mov
adc
outs
xchg
mov
ins
push
fwait
nop
into
loopne
sar
dec
lods
sub
rol
add
dec
js
xchg
loopne
sar
mov
and
adc
push
outs
outs
std
inc
data16
fimul
out
cli
sub
fcmovnu
mov
push
(bad)
lahf
js
fnstcw
ja
(bad)
and
iret
mov
dec
mov
popf
(bad)
mov
add
out
jo
mov
adc
push
jne
jle
hlt
adc
jle
push
or
retf
push
fist
mov
mov
and
sub
movs
ret
xchg
out
sbb
adc
push
pop
xor
jge
ins
or
pop
out
clc
arpl
jo
sub
sub
mov
xchg
and
mov
retf
icebp
ret
ss
movs
lods
mov
mov
mov
push
lea
and
repz
jecxz
add
movs
popa
push
push
in
je
sub
addr16
mov
push
ja
jge
jno
test
push
mov
aaa
aas
test
sahf
push
leave
fwait
xchg
xchg
push
test
in
jnp
retf
push
cs
and
bound
pop
fisttp
sbb
in
add
push
xchg
scas
shr
ja
adc
xor
pop
neg
or
cmp
xchg
es
pop
mov
inc
jbe
and
(bad)
adc
cmp
cdq
fcmove
and
in
cmp
je
je
ss
cmps
xor
stos
cmp
stc
adc
sbb
and
mov
sbb
ja
addr16
(bad)
hlt
fstp
sbb
imul
jl
leave
adc
out
retf
or
mov
call
lds
pop
dec
xor
dec
les
cs
pop
pop
xlat
adc
icebp
push
repz
out
sbb
and
mov
sbb
(bad)
push
xor
inc
iret
add
xchg
ret
loope
div
test
dec
mov
jmp
xor
inc
xor
inc
and
cmp
jb
sub
mov
test
jl
jo
mov
shr
neg
div
out
call
sti
lds
fbstp
stos
xor
mov
xor
clc
not
es
sbb
add
out
fldcw
(bad)
sub
cmp
mov
mov
sub
call
out
push
in
sti
das
sbb
cli
std
sbb
inc
mov
sub
cmp
les
jge
pop
rol
mov
cdq
xchg
pop
adc
dec
jbe
pop
cld
retf
pop
or
cli
pop
xchg
xor
push
popa
test
ja
jnp
add
mov
pop
adc
(bad)
sub
xor
add
fmul
mov
lock
cmps
loope
cdq
sub
and
gs
fs
inc
loope
cli
dec
sub
je
pushf
neg
movs
pusha
mul
shrd
icebp
cmp
xchg
sub
bound
dec
sar
pop
pop
jne
(bad)
sbb
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
mov
add
mov
add
adc
add
add
add
add
add
add
inc
mov
add
mov
add
adc
add
mov
add
mov
add
add
cmps
mov
add
add
sbb
add
add
add
mov
add
xchg
adc
add
mov
add
mov
add
ins
mov
add
mov
add
add
add
inc
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
jle
add
xchg
mov
add
add
enter
loop
add
repnz
add
mov
add
add
sub
add
ins
mov
add
mov
add
add
add
add
lock
add
mov
add
mov
add
add
add
mov
add
add
add
add
(bad)
mov
add
mov
add
mov
add
mov
add
add
out
add
bound
add
fdiv
add
repnz
add
add
add
mov
add
add
xor
add
add
add
add
jo
outs
fs
outs
jne
add
add
imul
push
imul
jae
xor
inc
push
outs
jne
popa
imul
add
gs
imul
mov
je
jne
je
gs
popa
add
push
imul
outs
ins
push
outs
imul
jb
xor
fs
ins
add
xor
inc
ins
outs
jae
dec
popa
outs
fs
add
je
jb
arpl
jae
les
inc
imul
outs
dec
outs
arpl
inc
imul
lds
inc
imul
outs
push
jns
je
ins
push
imul
inc
gs
outs
ins
ins
popa
outs
fs
imul
inc
gs
outs
outs
jae
ins
gs
push
add
jno
inc
gs
popa
jae
inc
jb
outs
jb
add
inc
gs
outs
fs
gs
popa
outs
fs
gs
add
add
gs
outs
fs
gs
popa
outs
fs
gs
add
mov
inc
gs
je
jb
jne
dec
outs
outs
inc
add
add
je
jns
je
ins
dec
outs
outs
add
add
je
push
inc
outs
outs
je
js
add
loop
inc
gs
imul
dec
outs
outs
jb
popa
je
outs
outs
add
jmp
push
gs
imul
adc
dec
gs
jo
ins
ins
outs
arpl
adc
dec
gs
jo
jb
popa
je
add
sbb
dec
gs
jo
gs
ins
ins
outs
arpl
push
push
imul
ins
add
dec
jne
je
inc
jns
gs
outs
push
imul
rol
push
gs
ins
gs
push
add
xlat
add
ins
push
outs
ja
outs
add
inc
jb
outs
jb
outs
fs
sub
push
gs
popa
jae
inc
jb
outs
jb
add
add
je
jb
outs
jb
je
inc
ins
popa
jae
add
xor
push
jb
arpl
jae
outs
jb
imul
imul
push
dec
inc
dec
xor
cs
ins
add
jb
push
gs
jo
imul
jbe
jb
outs
jae
popa
ins
ins
push
popa
jb
ins
jae
add
leave
add
je
jo
jne
jb
inc
imul
add
add
je
jo
gs
outs
jbe
push
arpl
outs
inc
jb
ins
inc
imul
gs
imul
gs
jo
jo
cs
ins
add
add
dec
outs
popa
fs
imul
add
gs
outs
xor
cs
ins
add
xor
dec
outs
arpl
gs
imul
bound
gs
add
addr16
outs
jne
dec
gs
add
add
imul
jb
imul
dec
popa
outs
fs
gs
add
add
je
gs
imul
arpl
arpl
imul
popa
jo
xor
cs
ins
add
add
inc
arpl
imul
outs
je
popa
ins
jae
popa
outs
fs
gs
add
inc
fs
arpl
imul
addr16
add
add
gs
push
arpl
imul
js
add
add
arpl
jo
dec
gs
popa
add
or
inc
outs
jne
gs
je
push
arpl
imul
addr16
add
adc
dec
ins
jo
jb
push
arpl
imul
js
push
add
adc
dec
outs
imul
je
dec
outs
je
jb
popa
arpl
add
adc
je
arpl
imul
popaw
arpl
add
sbb
push
jne
jb
inc
jb
fs
je
popa
ins
jae
je
jb
bound
gs
add
jb
push
arpl
imul
js
push
outs
imul
jae
arpl
imul
add
popa
je
push
je
inc
arpl
jae
imul
js
inc
add
add
je
outs
ins
gs
gs
inc
add
push
add
outs
outs
ja
jb
ins
inc
arpl
jae
imul
arpl
outs
ins
gs
arpl
fs
ins
