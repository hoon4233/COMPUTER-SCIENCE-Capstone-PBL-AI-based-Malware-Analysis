mov
add
add
add
add
add
add
add
add
add
adc
add
mov
add
outs
fld
add
add
add
add
sub
add
add
add
sub
or
jae
add
or
jae
add
or
jae
add
or
sub
add
xor
add
add
add
add
adc
add
add
or
add
sub
adc
add
or
add
add
add
jle
add
add
or
add
sub
adc
add
or
add
add
add
jle
add
add
or
add
sub
adc
add
or
add
add
add
jle
add
add
or
add
xor
add
add
adc
add
adc
add
sub
add
or
add
add
xor
add
add
add
add
adc
sub
add
or
add
xor
add
add
add
add
adc
add
adc
add
sub
adc
add
pop
add
add
add
adc
sub
add
xor
add
add
add
add
adc
mov
add
sbb
add
sub
sub
xor
add
add
add
add
adc
adc
(bad)
adc
push
add
push
add
pop
add
or
adc
add
sbb
add
or
add
jle
add
or
or
add
add
sbb
add
jle
add
or
push
add
pop
add
or
adc
add
popa
add
add
add
sub
or
adc
push
push
pop
pop
pushf
push
pop
pop
dec
pushf
push
sbb
inc
pushf
push
sbb
outs
pushf
push
sbb
adc
push
pushf
push
sbb
pop
pushf
push
sbb
push
pop
dec
pushf
push
pop
or
inc
pushf
push
pop
or
push
sbb
push
je
add
sbb
add
or
sub
add
push
add
pop
add
or
adc
sldt
add
add
jo
adc
add
add
pop
aas
pushf
adc
pop
aas
pushf
adc
pop
aas
pushf
adc
pop
aas
pushf
adc
pop
aas
pushf
adc
pop
aas
pushf
adc
pop
aas
pushf
adc
add
pop
aas
pushf
adc
or
aas
pushf
adc
or
aas
pushf
adc
or
aas
pushf
adc
or
aas
pushf
adc
or
add
push
pop
aas
pushf
adc
nop
pushf
adc
adc
aas
pushf
adc
adc
aas
pushf
adc
adc
aas
pushf
adc
adc
aas
pushf
adc
adc
aas
pushf
adc
adc
add
push
pop
aas
pushf
adc
pop
pop
aas
pushf
adc
sbb
aas
pushf
adc
sbb
aas
pushf
adc
sbb
aas
pushf
adc
sbb
aas
pushf
adc
sbb
aas
pushf
adc
sbb
add
push
pop
aas
pushf
adc
pop
pop
aas
pushf
adc
and
aas
pushf
adc
and
aas
pushf
adc
and
aas
pushf
adc
and
aas
pushf
adc
and
aas
pushf
adc
and
add
es
aas
pushf
adc
daa
pop
aas
pushf
adc
sub
aas
pushf
adc
sub
aas
pushf
adc
sub
aas
pushf
adc
sub
aas
pushf
adc
sub
aas
pushf
adc
sub
add
cs
aas
pushf
adc
das
pop
aas
pushf
adc
xor
aas
pushf
adc
xor
aas
pushf
adc
xor
aas
pushf
adc
xor
aas
pushf
adc
xor
aas
pushf
adc
xor
add
ss
aas
pushf
adc
aaa
pop
aas
pushf
adc
cmp
aas
pushf
adc
cmp
aas
pushf
adc
cmp
aas
pushf
adc
cmp
aas
pushf
adc
cmp
aas
pushf
adc
cmp
add
ds
aas
pushf
adc
aas
pop
aas
pushf
adc
inc
pop
aas
pushf
adc
inc
pop
aas
pushf
adc
inc
pop
aas
pushf
adc
inc
pop
aas
pushf
adc
inc
pop
aas
pushf
adc
inc
pop
aas
pushf
adc
inc
pop
aas
pushf
adc
inc
pop
aas
pushf
adc
dec
pop
aas
pushf
adc
dec
pop
aas
pushf
adc
dec
pop
aas
pushf
adc
dec
pop
aas
pushf
adc
dec
pop
aas
pushf
adc
dec
pop
aas
pushf
adc
dec
pop
aas
pushf
adc
dec
pop
aas
pushf
adc
push
pop
aas
pushf
adc
push
pop
aas
pushf
adc
push
pop
aas
pushf
adc
push
pop
aas
pushf
adc
push
pop
aas
pushf
adc
push
pop
aas
pushf
adc
push
pop
aas
pushf
adc
push
pop
aas
pushf
adc
pop
pop
aas
pushf
adc
pop
pop
aas
pushf
adc
pop
pop
aas
pushf
adc
pop
pop
aas
pushf
adc
pop
pop
aas
pushf
adc
pop
pop
aas
pushf
adc
pop
pop
aas
pushf
adc
pop
pop
aas
pushf
adc
pusha
pop
aas
pushf
adc
popa
pop
aas
pushf
adc
bound
aas
pushf
adc
arpl
aas
pushf
adc
fs
aas
pushf
adc
gs
aas
pushf
adc
popw
aas
pushf
adc
addr16
aas
pushf
adc
push
add
imul
pop
push
aas
pushf
adc
imul
pushf
adc
ins
pop
aas
pushf
adc
ins
pop
aas
pushf
adc
outs
pop
aas
pushf
adc
outs
pop
aas
pushf
adc
add
add
add
lea
add
add
adc
pop
add
or
mov
add
add
and
add
sub
add
or
(bad)
lea
push
push
mov
or
add
push
mov
add
lea
add
add
push
adc
push
or
adc
adc
and
add
sub
add
or
pop
lea
add
add
pop
adc
push
add
add
add
lea
add
add
adc
pop
add
or
mov
add
add
and
add
mov
and
add
sub
add
or
pop
lea
add
add
or
or
or
adc
add
add
lea
add
add
adc
pop
add
or
and
add
mov
and
add
sub
add
or
adc
and
add
pushf
or
(bad)
or
dec
(bad)
(bad)
inc
sub
adc
push
add
or
add
add
adc
push
add
add
and
sbb
lea
pop
adc
push
pop
pop
pushf
adc
pop
pop
dec
pushf
adc
sbb
inc
pushf
adc
sbb
outs
pushf
adc
sbb
dec
pushf
adc
sbb
pop
pushf
adc
sbb
jl
adc
sbb
sub
add
push
je
add
sbb
add
or
lea
add
add
or
or
sub
sbb
adc
adc
push
pop
inc
pushf
adc
pop
pop
push
pushf
adc
sbb
pop
pushf
adc
sbb
push
pushf
adc
sbb
pop
pushf
adc
sbb
dec
pushf
adc
sbb
dec
pushf
adc
sbb
or
pop
adc
or
push
pushf
adc
pop
or
push
pushf
adc
pop
or
push
pushf
adc
pop
or
dec
pushf
adc
pop
or
or
push
pop
pop
pushf
adc
pop
nop
adc
pop
adc
pop
pushf
adc
pop
adc
pop
pushf
adc
pop
adc
imul
pop
adc
push
pushf
adc
pop
adc
or
push
pop
dec
pushf
adc
pop
pop
pop
dec
pushf
adc
pop
sbb
inc
pushf
adc
pop
sbb
push
sbb
pushf
adc
sub
add
push
je
add
sbb
add
or
adc
pop
add
or
adc
add
adc
adc
push
add
add
and
sbb
lea
or
or
pop
pop
pushf
adc
pop
pop
dec
pushf
adc
sbb
inc
pushf
adc
sbb
outs
pushf
adc
sbb
dec
pushf
adc
sbb
pop
pushf
adc
sbb
jl
adc
sbb
sub
add
push
je
add
sbb
add
or
lea
add
add
or
or
sub
adc
adc
adc
push
pop
dec
pushf
adc
pop
pop
push
pushf
adc
sbb
dec
pushf
adc
sbb
pop
pushf
adc
sbb
dec
pushf
adc
sbb
push
pushf
adc
sbb
dec
pushf
adc
sbb
pop
push
pop
jp
adc
pop
or
adc
or
push
pushf
adc
pop
or
pop
pushf
adc
pop
or
dec
pushf
adc
pop
or
pop
pop
push
pop
inc
pushf
adc
pop
nop
adc
pop
adc
pushf
adc
sub
add
push
je
add
sbb
add
or
adc
pop
add
or
adc
add
or
je
add
add
sbb
jge
adc
adc
push
pop
pop
pushf
adc
pop
pop
pop
pushf
adc
sbb
push
pushf
adc
sbb
pop
pushf
adc
sbb
dec
pushf
adc
sbb
dec
pushf
adc
sbb
push
pushf
adc
sbb
or
pop
pop
pushf
adc
pop
or
dec
pushf
adc
pop
or
pop
pushf
adc
pop
or
pop
pushf
adc
pop
or
dec
pushf
adc
pop
or
or
push
sbb
add
je
add
sbb
add
or
lea
add
add
or
jle
add
add
and
sbb
lea
pop
adc
push
pop
pop
pushf
adc
pop
pop
dec
pushf
adc
sbb
inc
pushf
adc
sbb
outs
pushf
adc
sbb
dec
pushf
adc
sbb
pop
pushf
adc
sbb
jl
adc
sbb
sub
add
push
je
add
sbb
add
or
lea
add
add
or
or
sub
and
adc
adc
push
pop
dec
pushf
adc
pop
pop
pop
pushf
adc
sbb
pop
pushf
adc
sbb
pop
pushf
adc
sbb
push
pushf
adc
sbb
pop
pushf
adc
sbb
jbe
adc
sbb
or
pop
pop
pushf
adc
pop
or
dec
pushf
adc
pop
or
dec
pushf
adc
pop
or
push
pushf
adc
pop
or
dec
pushf
adc
pop
or
or
push
pop
imul
pop
adc
dec
pushf
adc
pop
adc
pop
pushf
adc
pop
adc
pop
pushf
adc
pop
adc
dec
pushf
adc
pop
adc
dec
pushf
adc
pop
adc
or
push
pop
dec
pushf
adc
pop
pop
pop
pop
pushf
adc
pop
sbb
imul
pop
sbb
push
pushf
adc
pop
sbb
pop
pushf
adc
pop
sbb
dec
pushf
adc
pop
sbb
or
push
pop
inc
pushf
adc
pop
pop
pop
push
and
pushf
adc
sub
add
push
je
add
sbb
add
or
adc
pop
add
or
adc
add
mov
sbb
or
adc
or
or
pop
dec
pushf
adc
pop
pop
pop
pushf
adc
sbb
pop
pushf
adc
sbb
dec
pushf
adc
sbb
dec
pushf
adc
sbb
push
pushf
adc
sbb
dec
pushf
adc
sbb
or
pop
imul
pop
or
push
pushf
adc
pop
or
pushf
adc
sub
add
push
je
add
sbb
add
or
adc
je
add
add
sbb
adc
adc
or
pop
inc
pushf
adc
pop
push
pushf
adc
pop
pop
pushf
adc
pop
push
pushf
adc
pop
pop
pushf
adc
pop
dec
pushf
adc
pop
dec
pushf
adc
or
pop
inc
pushf
adc
or
dec
pushf
adc
or
dec
pushf
adc
or
push
pushf
adc
or
jle
adc
or
or
push
pop
pop
pushf
adc
nop
or
adc
pushf
adc
adc
add
je
add
sbb
add
or
lea
add
add
adc
pop
add
or
adc
add
mov
adc
pop
add
or
adc
add
adc
add
adc
add
adc
sbb
or
adc
or
pop
dec
pushf
adc
pop
pop
pushf
adc
pop
pop
pushf
adc
pop
push
pushf
adc
pop
pop
pushf
adc
pop
je
adc
pop
dec
pushf
adc
or
pop
jl
adc
or
pushf
adc
adc
add
je
add
sbb
add
or
lea
add
add
or
sbb
lea
or
or
pop
setl
or
sbb
adc
sub
add
push
je
add
sbb
add
or
adc
pop
add
or
adc
add
or
push
je
add
add
sbb
lea
or
or
pop
pop
pushf
adc
pop
pop
pushf
adc
pop
push
pushf
adc
pop
ja
adc
sbb
add
je
add
sbb
add
or
lea
add
add
or
sub
add
or
push
add
push
sub
add
or
adc
add
je
add
sbb
pop
add
push
mov
adc
pop
add
or
adc
add
or
sub
add
or
sbb
lea
or
or
pop
pop
pushf
adc
pop
dec
pushf
adc
pop
inc
pushf
adc
pop
outs
pushf
adc
pop
dec
pushf
adc
pop
pop
pushf
adc
pop
jl
adc
sub
add
push
je
add
sbb
add
or
lea
add
add
or
sbb
lea
or
or
pop
push
pushf
adc
pop
sbb
add
je
add
sbb
add
or
add
jo
sbb
lea
or
or
pop
push
pushf
adc
pop
sbb
add
je
add
sbb
add
or
add
or
adc
pop
add
or
adc
add
adc
add
add
sbb
jge
adc
or
pop
pop
pushf
adc
pop
pop
pushf
adc
pop
push
pushf
adc
pop
pop
pushf
adc
pop
dec
pushf
adc
pop
dec
pushf
adc
pop
push
pushf
adc
or
pop
pop
pushf
adc
or
dec
pushf
adc
or
pop
pushf
adc
or
pop
pushf
adc
or
dec
pushf
adc
or
or
push
sbb
add
je
add
sbb
add
or
lea
add
add
or
add
or
adc
pop
add
or
adc
add
or
adc
add
or
add
sldt
adc
add
popa
mov
add
add
add
xor
add
add
add
adc
adc
adc
add
lea
add
add
adc
pop
add
or
adc
pop
add
jo
lea
add
add
adc
pop
add
or
daa
add
or
mov
add
add
daa
add
or
mov
add
add
and
add
sub
add
or
(bad)
lea
push
or
adc
pop
add
jo
lea
add
add
adc
pop
add
or
mov
add
add
and
add
sub
add
or
add
je
add
push
add
adc
add
lea
add
add
adc
pop
add
or
mov
add
add
and
add
sub
add
or
pop
adc
add
pop
sbb
sbb
add
sub
lea
add
add
or
or
adc
add
add
pop
add
add
adc
adc
sbb
adc
adc
push
pop
pushf
adc
pop
pop
pushf
adc
sub
add
or
or
nop
sub
adc
push
call
pop
add
add
adc
add
sub
add
or
add
add
add
add
add
sub
adc
pop
call
pop
add
add
adc
add
sub
add
or
add
add
add
add
add
jb
add
jo
lea
add
add
adc
pop
add
or
and
add
pushf
push
pop
sbb
pop
(bad)
add
sub
lea
add
add
or
or
adc
add
add
pop
add
add
adc
adc
sbb
adc
adc
push
pop
pushf
adc
pop
pop
pushf
adc
sub
add
or
or
nop
sub
adc
push
call
pop
add
add
adc
add
sub
add
or
add
add
add
add
add
sub
adc
pop
call
pop
add
add
adc
add
sub
add
or
add
add
add
add
add
jb
add
jo
lea
add
add
adc
pop
add
or
and
add
pushf
push
pop
sbb
add
sub
lea
add
add
or
or
adc
add
add
pop
add
add
adc
adc
sbb
adc
adc
push
pop
pushf
adc
pop
pop
pushf
adc
sub
add
or
or
nop
sub
adc
push
call
pop
add
add
adc
add
sub
add
or
add
add
add
add
add
sub
adc
pop
call
pop
add
add
adc
add
sub
add
or
add
add
add
add
add
jb
add
jo
lea
add
add
adc
pop
add
or
and
add
pushf
pop
pop
(bad)
or
add
adc
std
(bad)
call
add
(bad)
adc
add
cmp
std
(bad)
jmp
push
and
add
or
add
add
lea
add
add
adc
pop
add
or
mov
add
add
and
add
sub
add
or
or
push
sub
or
lea
add
add
or
or
adc
mov
add
add
adc
sbb
xchg
mov
adc
adc
sub
add
adc
pop
(bad)
adc
adc
adc
xor
or
adc
or
lea
add
adc
add
jae
add
or
add
add
or
pop
jae
add
or
add
or
adc
dec
add
jo
lea
add
add
push
adc
push
pop
sub
add
or
mov
add
add
adc
add
add
lea
add
add
adc
pop
add
or
adc
add
mov
adc
adc
sbb
adc
adc
push
pop
pushf
adc
pop
push
pushf
adc
sbb
pushf
adc
sub
add
or
or
nop
sub
adc
push
call
adc
sbb
adc
add
add
lea
add
add
or
or
adc
sbb
or
pop
push
sub
adc
add
adc
add
mov
add
add
sub
add
or
push
adc
push
add
jo
lea
add
add
or
or
pop
sub
add
or
mov
add
add
add
adc
add
mov
adc
adc
sbb
adc
adc
push
pop
pushf
adc
pop
push
pushf
adc
sbb
pushf
adc
pop
sub
add
or
adc
push
nop
sub
adc
push
call
adc
sbb
sbb
or
add
(bad)
(bad)
(bad)
dec
adc
popa
add
jo
lea
add
add
adc
sub
add
or
push
adc
ins
add
jo
lea
add
add
adc
pop
add
or
add
sub
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
imul
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
inc
inc
push
inc
inc
sbb
cli
fisubr
add
add
add
add
add
add
add
add
add
add
add
add
add
outs
add
shl
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
das
and
push
dec
inc
or
add
or
add
add
add
add
or
add
add
in
dec
add
add
jae
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
and
dec
inc
inc
push
push
inc
sbb
xchg
sti
movs
aad
retf
outs
fnstenv
sub
imul
in
xchg
in
pop
mov
jecxz
(bad)
(bad)
push
mov
mov
ret
and
repnz
cld
push
mov
in
lds
or
sbb
mov
cmp
(bad)
jecxz
and
nop
jmp
popa
repz
dec
push
mov
gs
arpl
sub
cld
jmp
sbb
mov
fbstp
and
dec
loope
iret
cmc
fisttp
or
popf
icebp
ja
push
outs
xor
adc
ja
outs
mov
dec
push
add
in
int3
mov
cdq
inc
add
xchg
cwde
(bad)
addr16
lea
mov
fwait
pop
aaa
mov
push
scas
(bad)
imul
nop
cmp
cmps
cld
jg
mov
imul
jmp
mov
mul
mov
loopne
clc
addr16
pusha
call
mov
mov
jmp
mov
jl
loopne
jns
inc
inc
sbb
push
inc
enter
inc
xor
(bad)
fcomp
add
sbb
jmp
pop
out
rcl
push
sahf
neg
mov
fst
popa
and
in
fstp
pusha
dec
sub
xchg
repz
and
outs
xchg
mov
out
mov
lods
inc
clc
mov
mov
test
int3
mov
jle
and
icebp
mov
retf
fisub
xchg
(bad)
into
mov
es
nop
push
es
arpl
mov
push
cld
stc
mov
ss
nop
pop
xor
loop
sub
jnp
cmps
mov
stos
pop
jae
out
enter
xor
repnz
pop
jmp
cld
jp
in
push
dec
xor
stos
ins
mov
lea
(bad)
sbb
aam
out
xchg
aaa
inc
inc
inc
and
test
out
jecxz
test
jmp
dec
jno
xchg
add
out
cmps
mov
sysenter
call
fbld
sub
out
inc
fdiv
call
jl
sub
loop
stos
or
dec
add
daa
loopne
adc
adc
fidivr
xlat
jg
mov
push
gs
xor
mov
pop
or
jmp
std
int
inc
sbb
int3
cmc
mov
bound
push
scas
imul
(bad)
inc
les
add
pop
or
loop
inc
or
xchg
pop
jo
leave
xchg
loop
cmp
mov
sbb
mov
std
test
stos
mov
jno
ret
mov
adc
adc
sub
loope
out
xchg
mov
mov
arpl
test
lods
lahf
cwde
imul
popf
popf
(bad)
mov
imul
data16
add
or
xchg
or
pop
sub
pop
int3
xchg
test
pop
cmp
(bad)
jmp
sub
aam
lods
xor
ret
and
or
pop
pushf
pop
daa
enter
(bad)
xchg
repz
sbb
sub
lock
aam
sahf
outs
aad
fs
div
(bad)
sbb
push
jle
fsubr
xchg
inc
xor
cli
jg
mov
mov
enter
(bad)
cmp
and
test
mov
pop
lock
ja
pop
pop
imul
jmp
sahf
mov
je
mov
dec
mov
into
add
adc
and
pop
les
icebp
std
jb
lods
mov
fwait
repnz
pop
cmps
mov
mov
out
addr16
aas
(bad)
int3
nop
sahf
rcl
pop
add
mov
std
xchg
pop
sahf
jmp
xchg
or
not
pop
add
ficom
mov
loop
out
sbb
js
out
test
retw
xchg
daa
push
outs
mov
fild
pop
test
sub
(bad)
pop
inc
rcl
xchg
mov
sbb
add
pushf
popf
lds
gs
daa
xor
xor
add
(bad)
xor
clc
add
jno
and
jne
pop
fmul
fisubr
push
test
sub
xor
(bad)
idiv
add
inc
movs
mov
xor
pop
shl
add
mov
cdq
cwde
pusha
mov
jmp
mov
outs
ins
lahf
in
loope
or
clc
xchg
das
jmp
loope
scas
inc
jnp
clc
mov
jmp
cmp
aam
stos
lods
and
imul
jmp
pop
push
int
daa
sbb
scas
or
(bad)
das
sti
iret
pop
hlt
test
xchg
fsubr
into
mov
inc
sbb
clc
(bad)
xor
scas
mov
and
enter
out
iret
xchg
mov
popf
dec
imul
or
xor
pop
sahf
or
ins
in
mov
adc
and
and
in
add
adc
cmp
lods
sub
and
dec
and
push
ins
stc
and
jmp
imul
inc
jge
stc
(bad)
imul
xchg
adc
xor
dec
(bad)
jo
ret
push
and
sub
test
mov
mov
and
adc
movs
clc
sbb
mov
out
mov
push
sbb
lods
and
(bad)
nop
imul
aaa
sub
and
sub
popa
aas
mov
repz
jo
aas
jne
xchg
fcomi
pop
jle
std
test
jle
sbb
retf
and
and
test
jp
and
sub
sti
bound
fld
(bad)
int3
adc
adc
cmps
mov
mov
xchg
cmp
xor
fsubr
int3
push
(bad)
mov
adc
test
daa
retf
sar
xchg
int
jg
lds
stc
sahf
js
scas
mov
jg
adc
xchg
dec
lods
div
jbe
push
push
(bad)
fisub
mov
ss
jmp
mul
imul
lea
sti
aaa
and
push
outs
sbb
jbe
aam
push
loop
pop
ret
(bad)
in
inc
dec
test
xor
int3
or
addr16
sbb
sbb
mov
or
in
jne
mov
mov
push
dec
(bad)
mul
repz
inc
test
out
(bad)
pop
dec
jg
adc
movs
sar
jle
in
mov
dec
jno
dec
add
xchg
jl
test
xchg
add
icebp
(bad)
arpl
mov
pop
mov
aad
push
repz
adc
test
cmps
pop
ins
adc
leave
mov
sub
sub
pop
in
cmps
popf
mov
or
and
std
mov
lods
dec
and
scas
pop
inc
movzx
inc
sbb
imul
inc
xchg
mov
enter
jle
outs
jo
std
call
xor
mov
pushf
imul
pop
call
and
sub
aam
mov
push
xor
add
xchg
loope
fiadd
jmp
cdq
pop
int3
xlat
leave
xchg
xchg
psubsw
and
mov
and
into
push
pop
cmp
xchg
rcl
test
push
cs
adc
push
(bad)
jmp
and
cdq
pop
outs
xor
or
cli
xor
mov
out
aad
or
cmps
test
cmps
adc
clc
call
or
adc
sbb
xchg
xchg
fiadd
push
xor
mov
fld
xchg
popf
movs
aas
sti
jo
sbb
xchg
xor
clc
mov
pop
jne
out
mov
repz
test
cmp
mov
dec
movs
or
rol
add
test
xchg
or
rcr
mov
inc
pop
iret
jp
(bad)
scas
mov
mov
pop
dec
repz
adc
xchg
add
lea
pop
out
in
mov
and
or
push
or
adc
xchg
fwait
jl
sub
aas
fdivrp
imul
cmc
inc
call
xlat
xchg
sbb
pushf
sti
adc
add
retf
iret
ud0
lods
or
in
mov
mov
shl
push
fdivrp
or
jne
cmc
cmp
in
push
fisttp
inc
ret
pop
sub
or
cmp
mov
movs
int3
and
jl
or
into
mov
mov
retf
lock
stc
scas
sti
aam
adc
std
nop
ret
push
setns
cmp
sbb
sbb
retf
loop
test
imul
into
cmps
aaa
mov
les
cmc
stc
fwait
dec
sub
pop
mov
sar
cmp
cmp
mov
pop
shl
jnp
(bad)
jle
sub
cmp
lock
jl
mov
push
and
push
push
jns
fnstcw
jmp
xrelease
ja
cwde
popa
rcr
sahf
jno
cmp
sbb
inc
icebp
push
shl
outs
inc
call
jno
es
inc
retf
rcl
scas
and
mov
shr
add
gs
aas
jecxz
pop
mov
das
mov
mov
jns
add
fisttp
xchg
dec
bound
rol
or
pushf
xchg
repz
out
fist
sub
or
jb
mov
les
xchg
mov
jmp
push
hlt
adc
jno
push
xor
std
movs
mov
mov
fmul
push
mov
adc
mov
jae
push
push
adc
out
arpl
outs
mov
pop
outs
lods
mov
out
xor
jb
(bad)
daa
cmp
sbb
xor
mov
loopne
pop
test
xchg
in
jge
jb
or
div
rcr
mov
mov
jo
call
pop
xor
and
xor
mov
sub
(bad)
scas
pop
cmp
popa
enter
ret
(bad)
xchg
cdq
loopne
out
test
jb
xchg
jae
js
mov
fstp
cdq
das
movs
jne
test
imul
stc
mov
lods
inc
adc
dec
push
or
test
mov
scas
ret
addr16
inc
push
inc
push
lods
ret
dec
das
mov
push
mov
js
daa
stc
sbb
push
mul
mov
mov
sbb
(bad)
push
pop
jecxz
jnp
mov
push
enter
popf
loopne
pop
fisub
push
lahf
xlat
and
ins
mov
dec
or
out
mov
xlat
lahf
jae
dec
out
sbb
push
push
fstp
adc
cmps
inc
adc
push
leave
cmp
cli
xor
call
out
mov
ficomp
outs
call
(bad)
jmp
outs
mov
cmp
xchg
xchg
fwait
imul
xchg
dec
lahf
xchg
ins
xchg
pop
mov
xlat
(bad)
cwde
pop
or
xchg
adc
mov
loope
shl
daa
sahf
sub
mov
pop
aas
aam
push
add
adc
lea
push
fwait
xor
xlat
jb
outs
adc
ins
ss
jne
xor
xchg
adc
(bad)
fbstp
call
lea
rcl
push
xchg
cli
cmps
mov
jmp
sbb
lea
jb
gs
rol
mov
popa
push
bound
arpl
sbb
adc
mov
mov
jae
lahf
sahf
rol
cli
je
das
in
inc
mov
adc
int
xor
xchg
adc
cmp
out
jl
add
adc
pop
xlat
mov
shl
jne
icebp
dec
mov
test
imul
loope
arpl
popa
or
rcl
mov
in
add
in
add
jle
mov
imul
aas
fiadd
mov
test
iret
cmp
push
add
jnp
xchg
into
cmp
mov
cmps
dec
cld
repnz
lods
aad
cmp
outs
(bad)
adc
push
pop
bound
dec
inc
clc
je
or
out
sti
in
adc
mov
mov
mov
sub
fimul
xchg
push
test
neg
pop
push
inc
aaa
(bad)
cld
dec
cwde
inc
and
jp
dec
inc
leave
mov
xchg
and
push
loope
ror
jl
(bad)
adc
dec
jne
call
sub
sub
jmp
les
scas
cmp
xlat
aam
scas
aad
imul
movs
call
(bad)
add
mov
and
daa
jmp
cmp
xor
test
hlt
lahf
xchg
inc
adc
repnz
push
or
bound
sbb
call
fnstsw
mov
lahf
mov
repz
mov
out
adc
adc
mov
sub
sbb
mov
mov
sbb
jmp
sbb
je
shl
jnp
scas
xchg
es
add
inc
push
stc
cmp
dec
xor
jne
imul
(bad)
push
cmp
loopne
aaa
lahf
(bad)
mov
repnz
(bad)
sbb
dec
lods
mov
add
mov
xor
neg
mov
xchg
cmp
dec
ds
xor
sub
inc
std
inc
xchg
cmp
or
mov
enter
test
rcl
repnz
int
jo
pop
out
mov
in
and
arpl
add
int3
lods
adc
add
push
push
mov
iret
push
lds
dec
cs
xchg
cmps
xchg
pop
push
fist
fcom
push
clc
xchg
repnz
sahf
cmp
mov
mov
push
(bad)
repz
mov
(bad)
outs
cmps
xchg
dec
sbb
das
cmc
enter
xchg
jp
pop
dec
jb
jns
sub
enter
jl
leave
lock
dec
jne
shl
movs
mov
mov
cli
js
inc
mov
pop
mov
mov
jp
les
xor
aam
fst
retf
cmp
loop
scas
ds
mov
imul
jae
int
ja
jp
js
mov
jb
mov
stc
mov
mov
mov
arpl
(bad)
pop
xlat
jg
ss
mov
iret
dec
xor
test
sub
es
xchg
pop
rol
dec
push
fimul
cmp
mov
push
push
in
jne
stos
fimul
mov
lea
(bad)
popf
(bad)
rcl
rcl
ret
jne
fstp
push
jge
ret
xor
jl
into
or
in
inc
add
dec
sbb
(bad)
test
adc
jle
fcmovu
sbb
pushf
xor
sar
inc
xchg
outs
mov
shl
sbb
pop
ss
jle
mov
dec
(bad)
jge
scas
imul
mov
repnz
sbb
aaa
sar
and
push
cwde
push
jmp
pop
mov
mov
mov
mov
sbb
mov
adc
mov
inc
pop
sub
ja
xor
xor
mov
test
push
in
sbb
ins
lea
push
pop
jns
pop
adc
mov
(bad)
loop
clc
enter
push
jb
jge
mov
or
xchg
lock
cmp
fld
sbb
jno
push
and
add
shl
fldcw
mov
inc
pop
pop
push
stos
mov
xchg
lea
repnz
push
push
retf
sub
cmp
loopne
sbb
hlt
sub
or
mov
pop
add
add
scas
xchg
clc
xor
out
sub
xor
out
jae
fisttp
nop
jo
mov
jb
lahf
mov
dec
mov
mov
fdivr
fist
mov
push
fnstenv
movs
add
or
das
popa
dec
cli
or
std
mov
js
ret
bound
jnp
mov
add
test
mov
cmp
jne
push
mov
xchg
jne
jnp
les
push
jns
stos
and
mov
xchg
inc
(bad)
mov
int3
lods
and
or
mov
cs
(bad)
stc
arpl
pop
pop
and
push
enter
idiv
mov
add
mov
xchg
and
jno
mov
pop
fisub
rol
rcr
pop
sbb
popa
push
cmp
sbb
inc
dec
adc
xor
call
adc
movs
loopne
movs
adc
mov
retfw
sbb
add
add
jo
imul
mov
ja
sbb
mov
(bad)
lods
fbstp
pusha
mov
xor
clc
jns
aaa
rcl
mov
(bad)
sbb
sbb
cmp
xor
pop
jg
pop
fadd
inc
push
mov
ret
jae
pusha
xlat
mov
int3
outs
mov
xor
cwde
push
or
ja
push
xchg
mov
mov
jbe
test
fsubr
aas
mov
mov
loope
adc
push
loop
mov
mov
and
ror
jmp
rcl
adc
stos
mov
mov
out
pop
push
cmp
addr16
test
loopne
mov
sbb
xor
pushf
out
mov
xor
pop
push
mov
add
sbb
(bad)
and
out
cmp
jns
sub
sub
aad
cli
out
out
sbb
lods
dec
pop
xchg
(bad)
adc
jb
ss
mov
fstp
bound
xor
mov
loopne
in
cmps
fld
call
xor
ins
inc
or
add
mov
dec
dec
lods
and
pop
retf
pop
lahf
jmp
or
push
xor
cmp
js
add
xor
xchg
jg
adc
je
jl
push
or
push
aam
cmp
inc
fsubr
loop
xor
push
push
sahf
dec
popa
and
pop
aaa
fistp
inc
or
in
inc
lock
cwde
add
iret
cld
and
cwde
ss
add
(bad)
mov
lock
cld
mov
xor
dec
js
xor
cdq
(bad)
leave
test
fxch
xchg
xchg
cmp
mov
add
or
out
pop
xor
add
cmp
outs
pop
adc
mov
cwde
pop
inc
dec
(bad)
arpl
std
cmps
cld
rcr
add
push
xor
mov
out
shl
pop
stos
pop
pop
jecxz
xchg
inc
dec
jg
sub
in
dec
mov
pop
jb
cmp
fnstcw
sbb
ret
inc
inc
sub
add
and
mov
int
cmp
mov
sbb
stos
cdq
inc
jge
cld
je
scas
xchg
cli
lods
shr
js
sub
push
or
sub
sub
xchg
hlt
movs
sbb
xchg
mov
inc
in
dec
mov
pop
adc
data16
push
cmp
pop
mov
cli
jg
scas
pop
inc
pop
or
cmp
jb
sbb
aam
mov
add
mov
in
add
push
test
push
in
outs
push
div
mov
sti
and
addr16
cli
sub
xchg
add
mov
pop
cmp
xchg
pushf
cmp
or
xchg
mov
jge
mov
js
fldenv
fwait
shl
aaa
pop
and
arpl
fucomi
movs
addr16
sbb
scas
rcr
push
xchg
mov
cdq
arpl
mov
push
fwait
mov
pop
dec
arpl
mov
out
or
fnstenv
pop
test
arpl
cld
or
cs
xchg
out
addr16
jecxz
pop
and
hlt
xchg
fiadd
fsubr
and
dec
sbb
xor
dec
(bad)
jae
mov
push
mov
push
dec
aam
push
cmp
add
dec
inc
movs
push
adc
leave
push
fiadd
cmovge
push
(bad)
scas
data16
shl
adc
xchg
and
js
retf
push
inc
sbb
mov
(bad)
shl
call
jne
or
je
cmp
fsub
loope
out
lods
jne
shr
jae
neg
jno
test
mov
stos
imul
es
mov
and
(bad)
fnstsw
xor
sbb
sub
jmp
fistp
push
adc
out
cdq
maxps
pushf
or
dec
inc
aaa
fnstenv
dec
jns
inc
sub
sbb
cmp
sbb
out
dec
imul
xor
push
imul
gs
std
outs
(bad)
lock
sub
mov
aaa
dec
mov
and
xchg
gs
mov
xlat
ret
lea
fisub
aad
push
adc
cdq
mov
test
pop
jge
xchg
fwait
add
shr
fstp
stc
outs
mov
sub
fst
imul
xchg
mov
ja
mov
jmp
int
cmp
icebp
push
cli
lods
jbe
adc
or
dec
dec
fisub
mov
test
pop
cwde
pop
mov
xchg
xchg
into
add
mov
sub
mov
adc
fidiv
cdq
ds
dec
inc
in
loopne
dec
xchg
or
sbb
jno
loopne
lods
femms
in
or
outs
add
bound
call
adc
addr16
rol
pop
sbb
lods
aam
in
test
fwait
idiv
mov
loop
mov
int
dec
(bad)
jne
inc
mov
mov
rcl
inc
inc
pop
xchg
cld
shr
or
adc
dec
std
or
scas
or
repnz
fs
loop
test
lods
sub
jg
stos
ret
sbb
scas
xchg
repz
pop
movs
inc
xchg
adc
dec
mov
cmps
lea
push
add
jge
jne
xor
nop
mov
add
repnz
sub
arpl
and
xor
and
jp
ror
inc
cmp
cmp
(bad)
sub
jns
daa
mov
jo
and
ins
xor
sbb
frstor
daa
les
jne
xor
cmp
xchg
xchg
jmp
push
push
out
lds
mov
jge
in
retf
adc
imul
rcr
and
sbb
jmp
popf
jnp
xor
adc
stos
sub
jecxz
or
adc
loop
(bad)
and
pop
push
mov
sbb
and
nop
dec
shr
outs
lea
mov
and
jmp
mov
outs
gs
sbb
xor
out
ja
mov
lods
jbe
loopne
js
lsl
jle
sbb
ja
fadd
inc
jecxz
clc
and
pop
sbb
(bad)
in
xlat
bound
mov
xchg
push
stos
(bad)
mov
and
arpl
mov
(bad)
shl
push
cmps
js
ret
mov
out
xchg
test
mov
pop
pop
aam
adc
cli
inc
jb
arpl
mov
cmp
scas
jb
cmp
xlat
dec
imul
jmp
pushf
mov
jmp
jge
mov
shl
xchg
dec
mov
and
lds
aad
pusha
ja
daa
fst
jno
or
pop
jle
mov
add
cmp
test
cmp
xchg
mov
leave
gs
retf
push
imul
mov
int
sahf
xchg
mov
pop
mov
push
das
aaa
cmp
outs
test
aas
call
nop
or
mov
mov
mov
sub
sub
cwde
inc
lds
shl
dec
into
sbb
aas
pop
adc
pop
and
ds
mov
sub
rcl
inc
scas
or
(bad)
dec
movs
shl
push
xchg
cld
in
mov
out
or
xchg
fmul
data16
mov
mov
repnz
cdq
ret
ds
sub
in
aad
test
xor
stc
inc
in
xchg
(bad)
mov
pop
xchg
fs
ror
cmp
jle
ins
dec
test
(bad)
not
xchg
hlt
movs
and
and
nop
lea
std
mov
imul
sqrtps
or
stos
mov
test
syscall
push
xchg
scas
fcomp
retf
jb
dec
pop
inc
fbld
dec
push
stos
(bad)
call
add
mov
(bad)
cmp
int3
sub
jae
stos
adc
xchg
push
inc
fst
mov
nop
clc
xchg
retf
add
fs
mov
sti
inc
imul
jb
mov
push
sahf
dec
xchg
test
push
push
jno
push
es
jge
movs
(bad)
sbb
fsub
fidiv
in
fstp
push
push
and
mov
fbld
sub
fcom
inc
aaa
in
jmp
stos
push
outs
or
nop
std
xchg
add
imul
inc
push
jb
hlt
data16
push
pusha
(bad)
xchg
push
fcmovnu
mov
or
(bad)
cwde
or
mov
xchg
fwait
cdq
add
ins
xor
jmp
xchg
stos
mov
cmp
adc
loope
sbb
outs
xchg
xor
shl
jge
enter
sahf
add
out
sbb
or
cmp
scas
pop
xchg
out
neg
cdq
inc
mov
pop
repnz
ss
nop
mov
in
or
adc
fist
pop
push
dec
mov
and
test
cmps
ins
icebp
xchg
xchg
nop
or
pop
jmp
in
fneni(8087
mov
mov
adc
mov
in
addr16
xor
jge
scas
jbe
mov
mov
add
mov
loope
mov
repz
mov
and
sbb
pop
cmp
fsub
xchg
ret
ficomp
push
lahf
mov
dec
mov
fnsave
inc
mov
jnp
sbb
scas
pop
dec
dec
loope
hlt
push
ss
add
lahf
jns
test
btr
mov
test
inc
jb
add
sbb
or
xchg
sub
cmp
out
ss
daa
ret
and
and
sbb
mov
test
pop
scas
ret
cmp
add
hlt
mov
push
adc
das
cmp
fisttp
clc
aad
or
lock
int3
add
adc
aas
mov
iret
push
inc
sub
pushf
movs
leave
fild
(bad)
into
jns
dec
es
push
(bad)
(bad)
fadd
jb
mov
jae
inc
clc
(bad)
cs
jge
sbb
inc
pop
and
loope
sbb
inc
leave
xchg
or
inc
push
jmp
shr
mov
adc
inc
sbb
push
jle
adc
js
sub
sti
jge
mov
dec
fimul
int3
(bad)
arpl
xchg
add
jmp
int3
into
dec
jbe
or
jle
sbb
repz
cld
inc
fwait
jb
cmp
pop
mov
pop
mov
icebp
sahf
enter
or
repnz
(bad)
icebp
pop
sti
mov
inc
movs
stos
add
push
mov
cdq
adc
mov
ss
stos
inc
mov
push
jge
mov
push
dec
push
xor
inc
mov
push
jo
clc
pop
or
jg
loope
add
xor
mov
push
test
xchg
shl
jge
fadd
or
xor
in
jl
mov
push
lods
cmps
aad
push
shr
dec
xor
std
cld
and
fistp
std
je
xor
or
movs
daa
xchg
repnz
out
ds
mov
push
popa
call
push
push
mov
std
dec
xchg
mov
sub
inc
mov
getsec
outs
xor
jl
fstp
xor
dec
push
movs
in
retf
je
adc
cmc
adc
add
(bad)
bound
movs
popa
rcl
or
lock
(bad)
jns
ds
pusha
movs
jge
cmps
xchg
inc
jp
call
addr16
or
(bad)
and
mov
and
cmp
pusha
sub
sub
adc
cmp
and
cmp
jbe
jg
pop
inc
mov
repnz
pmovmskb
cmp
sti
mov
mov
push
adc
pop
ja
dec
(bad)
pop
xor
jno
das
xchg
lods
ret
pop
or
rcr
or
ret
leave
std
scas
dec
popa
out
daa
cmp
test
dec
stos
popa
ror
and
jae
scas
in
sbb
and
gs
pop
inc
fwait
jae
cmps
daa
retf
ins
dec
add
dec
iret
test
mov
std
neg
mov
(bad)
loope
xlat
jle
dec
push
lds
ins
repnz
mov
xlat
hlt
mov
mov
(bad)
enter
enter
or
pop
or
shl
or
pop
call
(bad)
icebp
xor
loop
call
mov
fidiv
sti
lock
push
inc
mov
bound
xor
imul
shl
xor
arpl
std
loop
fldcw
test
out
xchg
movs
and
sub
xor
push
push
cmp
xchg
mov
sub
cmps
imul
cmps
cld
inc
lahf
or
jmp
xchg
jno
xor
xor
fldcw
movs
std
ins
leave
jmp
xchg
jbe
in
inc
stos
(bad)
ud1
dec
adc
shr
sahf
dec
test
mov
(bad)
test
mov
adc
ret
dec
data16
test
add
xchg
call
dec
xor
arpl
jp
add
push
xor
cmp
dec
int3
mov
xchg
pop
scas
not
jno
dec
(bad)
addr16
mov
daa
cs
hlt
inc
clc
hlt
inc
add
sbb
mov
aas
(bad)
cmc
push
ins
or
cmp
sbb
bound
jmp
fs
mov
(bad)
xor
and
ss
jmp
mov
add
dec
mov
and
mov
in
jo
div
xlat
stos
cmp
je
add
(bad)
ret
ds
fisttp
jge
mov
dec
sbb
push
mov
out
jbe
ds
lahf
call
test
icebp
into
add
hlt
test
and
idiv
lock
and
jle
test
lock
ret
jb
inc
repnz
inc
pop
dec
inc
xor
xor
ds
push
dec
jno
jns
outs
aas
sub
lock
cmp
sub
xchg
pop
gs
ret
mov
aaa
push
mov
jle
bound
aaa
stos
xor
loope
fstp
aam
cmp
or
mov
push
sbb
out
jnp
sar
das
jae
test
in
jne
inc
popf
xor
jo
mov
jae
outs
add
imul
pop
ins
or
jae
sti
push
fidivr
je
loop
test
jle
mov
std
or
mov
movs
fld
mov
lahf
ins
xchg
rol
inc
ins
or
sahf
sbb
aad
fistp
fs
add
call
(bad)
push
push
jae
or
jge
xchg
push
jb
xchg
arpl
icebp
test
call
and
jecxz
loop
cmp
jne
xchg
pop
xchg
jmp
push
imul
test
into
sub
ins
fs
nop
es
fwait
pop
shr
out
xchg
ss
pop
dec
movs
mov
lds
popf
push
repz
data16
dec
sub
inc
sbb
push
inc
adc
mov
mov
add
cmps
loopne
retf
rcl
inc
adc
pop
mov
jns
xchg
cmc
jb
xchg
push
push
cmp
lea
xor
repz
inc
or
fucomip
dec
mov
xor
push
ficomp
pop
in
lock
inc
or
cld
mov
xchg
xchg
mov
add
iret
mov
push
pop
fwait
and
jae
dec
imul
std
into
test
mov
call
outs
mov
push
mov
inc
outs
add
mov
sbb
pushf
stos
xchg
jg
imul
pop
iret
xchg
mov
adc
rcr
aas
addr16
cdq
cmp
xchg
inc
jecxz
push
es
sbb
int3
mov
int3
cwde
daa
lods
sub
addr16
push
dec
int
xchg
inc
dec
add
sbb
aas
push
test
(bad)
cmp
mov
es
inc
xchg
dec
mov
adc
(bad)
push
jne
dec
push
arpl
xor
stos
pop
into
cs
mov
adc
out
repnz
popf
outs
add
inc
mov
loope
retf
mov
sar
cmps
add
push
push
push
shr
outs
arpl
lock
mov
in
mov
retf
jl
jb
daa
xor
fsubr
adc
shl
(bad)
sbb
ds
jns
mov
lods
fcom
addr16
or
inc
popf
inc
(bad)
jmp
movs
div
mov
jl
adc
sub
(bad)
gs
fcmovnu
cdq
fwait
test
(bad)
aam
jecxz
add
mov
mov
je
(bad)
hlt
xchg
movs
(bad)
leave
fild
aam
retf
inc
pop
push
test
in
add
fisub
in
(bad)
cmp
add
dec
inc
scas
inc
pusha
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
scas
mov
add
mov
inc
or
add
or
add
add
add
add
or
add
add
shr
add
add
jae
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
jo
pop
jae
add
ret
add
push
ret
add
outs
test
add
jmp
js
in
std
or
lds
out
sbb
fild
movs
nop
imul
(bad)
popa
adc
inc
dec
inc
and
fwait
int
loop
pop
push
adc
shr
sub
stc
add
sbb
sub
sbb
pop
shl
gs
push
pop
push
xor
xchg
inc
sbb
(bad)
jnp
jnp
and
fistp
out
jle
cmps
shl
sahf
cli
cmp
pop
not
jmp
xlat
pop
scas
mov
xor
add
push
sub
std
imul
dec
cmps
mov
(bad)
sbb
sub
(bad)
jae
pop
dec
les
aaa
adc
arpl
dec
sub
jnp
add
in
xlat
(bad)
les
ret
inc
mov
cmc
sahf
leave
imul
ret
pop
adc
adc
aam
(bad)
mov
add
cmc
dec
push
mov
cmc
arpl
rcr
addr16
adc
inc
mov
outs
xlat
jae
adc
jle
pop
hlt
cmp
je
fimul
mov
cmc
ins
mov
pusha
jl
fistp
xchg
xchg
outs
or
jo
inc
dec
imul
jno
idiv
gs
xor
scas
jle
out
fxam
jbe
push
jge
cmc
mov
lahf
leave
cdq
scas
rcl
cli
xor
aas
popf
inc
mov
mov
xlat
mov
rcl
mov
cmp
pushf
add
jecxz
jmp
fs
adc
lea
sbb
cmp
stos
mov
out
cmp
call
dec
cmps
test
cdq
les
mov
shl
sub
mov
adc
cdq
sbb
inc
mov
inc
in
push
popf
mov
cmp
mov
pop
lahf
xchg
js
sub
gs
and
or
cmp
outs
call
repnz
jmp
adc
pop
sub
out
scas
or
push
push
pop
adc
rcr
pusha
or
inc
cmp
aam
lahf
repnz
dec
xchg
pop
pop
jb
fcmove
js
and
leave
repnz
xor
sub
xchg
out
dec
xchg
es
call
jno
cmps
adc
sub
add
inc
movs
adc
hlt
(bad)
sbb
shl
adc
dec
rcl
dec
dec
mov
ja
cmp
(bad)
or
retf
js
cmp
fwait
xor
mov
daa
xchg
or
lods
xchg
test
cmp
outs
pop
or
popa
xor
fadd
inc
adc
call
arpl
jb
adc
push
inc
pop
test
mov
es
jmp
pop
jns
fcmovnu
add
mov
pop
into
rcr
lods
push
jmp
inc
xlat
or
ret
push
aas
adc
add
mov
js
or
mov
and
or
aas
push
popa
cmp
cmp
mov
cld
outs
fisubr
push
mov
out
cmp
sub
jmp
(bad)
shr
fild
pushf
push
sub
dec
inc
xchg
or
test
leave
outs
sub
pop
mov
xor
xor
ss
(bad)
lods
dec
xor
xlat
sbb
cmps
ss
xor
inc
hlt
mov
pop
or
push
rol
jae
addr16
inc
jae
fwait
push
and
repz
and
shl
mov
cmp
xchg
or
xor
inc
out
movs
mov
popa
add
(bad)
sbb
mov
(bad)
sbb
mov
add
mov
xchg
shr
cmp
push
pop
add
xchg
pop
sub
lock
mov
adc
int3
adc
call
xchg
test
ret
inc
sub
push
push
push
call
cmp
rol
stos
xor
gs
icebp
out
call
ins
ja
ins
add
ror
aam
ret
ins
push
idiv
jnp
xchg
mov
inc
or
or
xor
or
cwde
xchg
and
and
ret
in
jno
xor
daa
inc
inc
add
dec
adc
mov
jp
scas
fmul
cdq
add
and
push
(bad)
and
push
out
xchg
sbb
or
retf
scas
cmps
sub
add
and
outs
or
sbb
add
xor
and
cwde
jl
(bad)
xor
loopne
or
sbb
fsub
mov
push
mov
jne
dec
adc
popf
push
lahf
inc
ficomp
sahf
pop
pop
sub
cmc
imul
xchg
ds
sub
shr
test
xchg
xchg
movs
mov
pop
int3
push
sub
jp
out
pusha
in
mov
into
push
cmp
inc
inc
dec
(bad)
inc
mov
test
dec
les
fmul
sub
data16
ficom
and
push
dec
or
aam
ja
ret
loop
ja
pop
sub
call
xor
aam
(bad)
in
mov
mov
loope
mov
lods
js
ret
mov
xor
lods
and
jnp
jno
mov
shl
xlat
aas
or
les
sub
daa
adc
push
stos
push
sub
inc
push
xor
mov
xor
test
add
add
cld
mov
pop
or
add
or
cdq
push
(bad)
repnz
jmp
jmp
addr16
xchg
mov
inc
push
xchg
gs
mov
dec
jg
rcl
mov
or
stos
mov
add
pop
dec
or
aam
pop
inc
or
fisttp
sbb
xor
mov
clc
std
mov
lock
mov
aas
add
lds
shl
sahf
cmps
ss
(bad)
push
retf
mov
repz
mov
cmps
scas
mov
and
pop
pop
stos
ret
adc
cmp
lock
mov
imul
jle
add
pop
shr
xor
sub
pop
xchg
mov
fsub
pushf
sub
pushf
mov
dec
fldenv
xor
xor
jp
sub
popf
mov
fisttp
or
sbb
and
shl
fs
cwde
ja
xor
cmps
daa
fs
es
fwait
aam
adc
jo
bndstx
or
add
push
and
loope
xor
fisub
jno
rol
add
out
xor
jbe
and
xchg
cmp
mov
into
jns
call
or
dec
push
fstp
inc
test
inc
jb
sub
jns
dec
xchg
pop
sbb
mov
repz
cmp
push
paddusb
pop
mov
lods
cmp
into
jns
call
mov
xor
lods
aas
pop
out
hlt
xchg
mov
push
out
ror
test
sbb
mov
adc
dec
pop
outs
sbb
jp
push
cwde
mov
push
cmc
or
sahf
inc
aad
(bad)
push
test
pop
xchg
dec
pop
clc
hlt
(bad)
in
mov
pop
pop
js
push
sahf
dec
mov
lods
enter
pop
pop
pop
das
xchg
and
dec
xchg
cwde
test
xchg
push
cs
and
xor
mov
mov
test
pop
pusha
mov
sbb
xchg
adc
cmp
bound
in
in
pop
dec
inc
sub
adc
pop
cmp
leave
or
push
bound
add
inc
popf
test
pop
xchg
mov
sub
jno
je
xchg
mov
sbb
mov
fwait
retf
js
outs
into
sbb
cmc
in
push
pop
ja
push
add
add
or
adc
popf
dec
aaa
ins
lods
daa
gs
call
gs
(bad)
xchg
inc
add
call
mov
mov
jb
sub
fcmovnu
test
aam
cmps
xchg
ins
daa
imul
xchg
movs
in
inc
(bad)
jne
cmp
jb
mov
fwait
adc
dec
mov
cmc
xor
sar
aam
test
sub
div
xor
jmp
data16
arpl
fld
mov
mov
loope
and
xchg
xchg
pop
push
jge
pop
pop
imul
scas
cmp
jle
or
adc
push
popf
cmc
and
cli
xor
test
adc
cld
daa
loop
pop
or
imul
and
or
imul
mov
adc
pop
mov
and
push
jge
ins
fnstsw
xchg
lahf
lods
cli
mov
xor
test
out
cwde
dec
int
aam
mov
adc
rcl
add
stos
cmc
mov
and
(bad)
lahf
xchg
add
(bad)
cmp
dec
mov
xchg
jns
jecxz
repnz
and
lahf
movs
daa
scas
aad
repnz
popa
inc
push
sbb
mov
js
dec
dec
outs
lods
cmp
dec
xchg
dec
xor
icebp
data16
jp
lods
xor
push
pop
test
or
adc
jge
mov
dec
enter
iret
push
inc
xchg
call
push
(bad)
aaa
sub
std
in
jg
cdq
jo
adc
mov
imul
movs
int3
das
inc
push
push
or
push
aas
mov
mov
test
add
mov
jo
inc
sbb
xchg
dec
cs
imul
pop
sbb
or
lahf
mov
ret
test
push
hlt
push
or
push
sub
push
push
cmps
ror
adc
jnp
add
ja
pop
xchg
pop
sbb
clc
out
and
sub
xchg
dec
jle
jl
and
stos
cmps
mov
clc
and
fwait
mov
xor
cwde
xchg
pop
mov
mov
mul
fs
cmp
mov
jl
mov
cmp
test
ja
leave
int3
and
ds
dec
aaa
inc
fwait
retf
jmp
data16
gs
push
sub
push
hlt
inc
add
loopne
mov
or
lock
jo
xor
sbb
test
stc
mov
inc
jecxz
sti
fsubr
(bad)
out
and
sub
mov
jo
je
pop
or
imul
push
popa
cmp
mov
xchg
pop
xor
mov
(bad)
sti
push
push
and
jb
(bad)
rcl
mov
xchg
xor
jae
fiadd
popf
vxorps
ret
outs
call
icebp
outs
in
dec
inc
mov
scas
movs
es
sbb
and
cmps
out
xor
arpl
movs
pop
adc
and
adc
push
mov
mov
cmp
fdivp
leave
cmp
dec
fild
jg
sub
sub
int
mov
shl
sub
movs
xchg
or
push
sbb
sbb
adc
mov
ins
sub
inc
enter
xchg
ins
push
aad
rol
and
pop
mov
(bad)
scas
pop
sub
cmp
add
retf
cmc
jmp
cmps
cwde
adc
xor
in
pop
jns
xchg
sbb
nop
retf
bound
(bad)
rol
mov
(bad)
adc
retf
add
cmps
shl
push
shr
add
or
sbb
pop
cmc
adc
(bad)
(bad)
sar
movs
(bad)
mov
xchg
fst
into
push
stos
and
push
ja
cwde
or
or
sbb
in
and
mov
mov
out
jbe
imul
xor
inc
mov
imul
arpl
xchg
xchg
xchg
adc
xor
mov
xchg
push
inc
xchg
sbb
ds
push
sub
aam
xchg
cmp
ds
fidiv
mov
mov
clc
cmp
(bad)
in
adc
test
nop
and
outs
je
rcr
ins
cmp
push
push
sub
in
lahf
jns
out
hlt
daa
xor
js
sbb
cdq
aam
sub
out
pop
call
jno
scas
ds
cmp
imul
mov
sub
adc
push
add
inc
jae
jns
xor
lock
cmc
mov
dec
adc
mov
jno
fbld
outs
outs
lds
mov
fdivr
fs
cmp
rcl
adc
mov
mov
or
ins
hlt
ror
add
out
mov
nop
movs
aad
(bad)
fcmovne
jg
sbb
mov
and
push
enter
test
ret
je
jns
and
dec
cdq
or
xor
push
je
popa
nop
sahf
add
xchg
mov
cli
test
stc
pop
aas
mov
pop
adc
add
les
xor
push
cmp
add
iret
fcom
push
iret
rol
sbb
rcl
popf
clc
mov
push
mov
xchg
sub
inc
sub
je
mov
lods
scas
dec
(bad)
cmp
sbb
pop
iret
mov
push
stc
and
stc
xor
xor
ds
mov
mov
scas
and
add
or
aas
mov
sub
lea
inc
xor
nop
sub
or
popa
lea
add
inc
les
dec
add
mov
xchg
sbb
lea
ret
sub
sub
mov
cmp
mov
jle
sub
pop
stos
jo
sar
cmp
lea
and
adc
xor
or
mov
lock
in
ja
add
cmc
push
hlt
sbb
dec
retf
mov
imul
adc
inc
les
cmps
movs
cmp
add
add
mov
and
sbb
bound
add
outs
mov
(bad)
adc
inc
dec
sbb
inc
cli
mov
dec
lds
xchg
(bad)
int3
cdq
mov
mov
das
sub
out
mov
fiadd
xchg
sbb
mov
jmp
cmp
inc
jmp
test
js
pop
pusha
mov
xor
or
imul
pop
ror
cwde
(bad)
jmp
jbe
ss
cmp
xor
lods
out
dec
shr
sub
inc
or
scas
mov
gs
xor
aas
push
xchg
add
nop
repnz
cmps
rcl
inc
xchg
fwait
iret
mov
push
out
xchg
stc
or
pushf
push
xor
test
ja
mov
sub
pop
jg
out
sbb
fmul
xchg
fbld
dec
add
ins
pop
push
cld
adc
loopne
mov
outs
push
cmp
mov
xor
pop
mov
sbb
xchg
outs
mov
add
jmp
test
cdq
(bad)
rol
add
(bad)
xchg
adc
hlt
les
cmps
shr
add
push
jge
and
cli
retf
loope
pop
push
jge
inc
xor
fmul
sbb
hlt
mov
imul
sub
xchg
stc
hlt
and
aaa
xor
mov
sub
in
cmp
fs
je
mov
dec
mov
movs
jg
sub
mov
in
mov
jne
test
test
lds
or
xlat
sub
xor
xchg
xor
xchg
cdq
cdq
cli
scas
sbb
push
mov
int
mov
sub
ds
dec
cwde
fnstcw
push
adc
push
mov
sbb
jnp
push
adc
cmps
pop
push
inc
mov
mov
mov
bt
mov
push
call
mov
sub
aam
xchg
cwde
sub
jae
sub
daa
mov
dec
xchg
cmps
arpl
push
iret
leave
and
sti
sbb
add
and
ficom
test
fldcw
and
retf
mov
add
mov
jp
mov
repnz
ds
sub
cmps
and
call
xchg
xchg
mov
retf
and
ins
inc
and
mov
pop
push
lea
dec
push
fwait
shl
pop
adc
pusha
cmp
sub
or
inc
add
push
lea
dec
jmp
jb
bound
rcr
mov
pop
adc
fwait
add
mov
and
xchg
not
scas
sub
xor
seto
dec
add
and
and
xor
fs
ret
add
call
fs
and
ret
pop
cdq
push
ret
inc
sar
inc
and
lds
scas
sbb
popa
retf
icebp
imul
aad
adc
add
mov
pop
ds
repnz
xchg
xor
add
in
inc
ret
shr
imul
sub
sub
in
jle
add
outs
loopne
sub
cmp
dec
int
sbb
cmp
iret
sub
mov
fdiv
out
push
mov
inc
mov
dec
jno
jns
pop
es
popa
retf
data16
ret
neg
aam
sub
sub
lods
mov
xchg
xchg
or
cmp
(bad)
cmp
mov
sub
xor
aaa
or
mov
ficomp
lock
push
cmp
ret
mov
in
xor
retf
scas
mov
cmp
stc
xchg
jmp
xor
push
sbb
iret
loope
cmp
add
cmp
add
push
xchg
sti
xor
imul
jl
xor
into
lock
push
pushf
jle
test
add
cmp
xor
cdq
mov
pop
pop
aas
lahf
xchg
inc
ret
(bad)
and
and
jge
push
je
dec
idiv
or
outs
add
push
mov
ds
push
pop
cmp
jo
jmp
add
add
sbb
fwait
mov
outs
mov
nop
push
pop
pop
xlat
out
pusha
inc
mov
push
clc
pop
fsub
outs
mov
loop
sbb
in
dec
or
cmp
ja
fild
mov
mov
inc
scas
adc
pop
add
push
sub
mov
stc
enter
pusha
push
xor
xchg
cmp
data16
sti
dec
mov
dec
pop
dec
hlt
pop
fadd
outs
aad
dec
adc
rol
dec
rcl
sub
mov
push
pusha
mov
rcr
rcl
adc
outs
jge
pop
daa
dec
in
das
push
jge
ret
mov
lods
jno
lock
(bad)
and
jmp
sbb
aad
xor
push
mov
and
cmp
pop
add
jne
test
scas
sbb
retf
jns
rcr
stc
or
std
retf
daa
pop
fiadd
adc
sahf
iret
jp
out
or
ds
and
push
push
or
mov
sbb
adc
mov
sahf
out
xrelease
bound
cmc
stc
push
aad
mov
iret
(bad)
push
sub
or
loopne
or
pop
sub
stos
fcomip
repz
ds
std
cmp
gs
xchg
push
jae
aas
loope
add
push
push
cs
arpl
sub
fsub
in
into
pop
fldcw
cmp
popw
retf
cmovg
dec
je
fmul
xor
jecxz
dec
jb
mov
and
enter
test
out
pop
cmps
jle
bound
and
xchg
repz
jae
mov
and
inc
xchg
mov
xor
(bad)
imul
ds
jb
mov
unpckhps
mov
and
mov
mov
sbb
mov
test
mov
ins
ss
sub
push
mov
les
bound
sbb
push
mov
cmp
push
xor
bound
and
mov
sub
add
inc
lods
push
sub
lea
pop
mov
cs
mov
pop
sbb
call
inc
and
out
and
sbb
push
jmp
adc
jl
jecxz
mov
jmp
out
mov
in
and
xchg
cmp
add
xor
std
and
das
cli
ret
cmp
inc
and
xor
and
cmps
push
dec
dec
mov
cmp
jae
dec
push
das
mov
movs
in
dec
add
push
add
inc
lahf
mov
cdq
imul
ret
jl
adc
xor
fadd
xchg
imul
adc
add
xor
xor
arpl
adc
xor
arpl
adc
xor
arpl
adc
xor
arpl
sbb
jae
and
add
shl
dec
(bad)
retf
(bad)
push
and
mov
mov
sti
mov
jns
cmp
pop
xor
scas
pusha
cmc
sahf
fucomip
shl
call
lds
into
mov
mov
jnp
sbb
jns
jge
mov
shr
mov
adc
add
adc
(bad)
push
mov
push
add
mov
leave
jge
arpl
fild
push
(bad)
mov
and
inc
jp
ret
das
push
icebp
adc
sahf
xchg
sahf
cmp
or
xor
mov
or
addr16
xchg
icebp
popa
out
int
enter
cmp
mov
dec
outs
xchg
lods
sbb
je
jmp
imul
fcomp
push
push
mov
cmp
lahf
jno
push
push
(bad)
repnz
push
cmp
sahf
fs
mov
cmc
cmc
das
adc
loop
mov
push
mov
jb
pop
es
push
cmc
sub
dec
sbb
pop
das
(bad)
adc
shl
sub
cwde
(bad)
out
arpl
pop
clc
pop
push
adc
fs
clc
mov
cmps
and
cld
add
shl
cmc
cmp
add
jmp
and
ins
test
xchg
adc
es
and
repnz
call
stos
inc
inc
push
dec
test
inc
test
pop
stos
mov
push
sbb
test
xor
call
adc
dec
fs
xchg
imul
out
cmp
icebp
scas
push
out
jmp
sub
leave
cs
adc
dec
jp
daa
scas
aaa
imul
ret
push
pop
enter
rol
ret
xchg
pop
xchg
loopne
shr
adc
fs
scas
popf
mov
cdq
sbb
cmp
mov
mov
adc
and
dec
arpl
dec
cmp
arpl
pop
lock
mov
xchg
(bad)
lock
jp
test
adc
xor
lahf
add
loope
dec
jno
mov
cmc
aas
popa
push
gs
movs
fsubr
sbb
mov
push
xchg
repz
xlat
int3
dec
xor
mov
pop
mov
pop
fcom
out
xor
fdiv
loopne
ror
xchg
push
xchg
cmp
mov
out
xlat
push
ror
jl
jg
jecxz
xchg
push
jmp
mov
icebp
mov
mov
mov
imul
jo
sbb
pop
inc
ret
adc
out
xor
push
jo
cmp
leave
adc
rcr
in
sub
fstp
cmps
jg
mov
les
cmp
or
les
in
dec
retf
dec
loopne
retf
add
jmp
in
sub
lsl
pop
sahf
cmps
outs
sbb
mov
dec
add
cmp
jns
push
ret
sub
pop
scas
xchg
jo
clc
sbb
mov
adc
pop
mov
vcvtdq2ps
iret
iret
mov
jle
add
push
jnp
add
leave
or
das
sbb
repz
jmp
push
inc
dec
(bad)
jns
mov
jecxz
pop
aas
pop
inc
(bad)
jle
dec
mov
stos
xchg
lea
test
je
lea
mov
jl
rcl
cli
xor
and
adc
retf
or
inc
and
retf
mov
shl
loop
adc
xor
pop
inc
cwde
adc
dec
jmp
call
stc
push
sahf
hlt
cmps
jae
xchg
lock
push
call
xor
enter
frstor
in
fbstp
daa
push
mov
loop
stc
adc
mov
inc
scas
jae
gs
xor
retf
add
add
inc
mov
inc
push
lods
(bad)
jo
adc
push
pop
enter
mov
(bad)
mov
jge
xor
mov
outs
shl
jp
cmps
cwde
inc
mov
loope
popa
data16
sahf
rcr
iret
cli
sub
fimul
dec
pop
aad
or
lock
push
adc
pop
or
adc
ret
adc
push
inc
lock
push
ret
div
jmp
mov
inc
loopne
repnz
add
xchg
adc
arpl
cmc
in
(bad)
enter
call
add
popa
ficom
aad
test
out
in
repz
pop
loop
in
aaa
imul
or
sub
mov
inc
push
or
test
ss
jp
cmps
xor
sar
and
data16
popa
call
das
xchg
fmulp
or
adc
jmp
loop
call
mov
or
xchg
adc
inc
inc
ror
sub
ret
test
dec
sti
out
dec
test
sub
repnz
mov
xchg
icebp
and
xor
sbb
cmp
cmps
addr16
pop
or
stos
dec
hlt
rol
pop
idiv
into
dec
rcr
(bad)
pop
test
hlt
fistp
sti
xchg
call
push
in
mov
xchg
ja
push
add
or
inc
int
add
and
xchg
outs
pop
cs
nop
outs
add
lahf
sbb
int3
sub
call
in
fs
sub
jge
std
push
mov
mov
push
push
inc
out
lods
xchg
addr16
inc
jno
sub
or
imul
push
jg
jno
inc
and
pop
(bad)
retf
in
pop
pop
push
sub
(bad)
jno
cmp
sahf
sub
js
sub
mov
dec
mov
dec
xchg
inc
aas
sub
sub
xchg
add
nop
in
lea
test
mov
daa
js
mov
mov
cwde
add
and
nop
fcom
inc
call
sub
cmp
scas
(bad)
aad
stc
ret
sbb
mov
test
add
inc
sbb
fsubr
push
or
mov
pop
data16
fisub
mov
test
fs
mov
fs
outs
mov
jbe
sbb
out
dec
inc
mov
fwait
(bad)
push
adc
std
adc
or
scas
cmp
rcr
pop
sub
pop
dec
inc
shr
in
inc
mov
xor
cld
lahf
fiadd
inc
mov
mov
push
shl
pop
aam
rcl
sub
stos
loop
jmp
cdq
push
stos
leave
and
mov
xchg
out
cdq
fiadd
adc
aad
pop
stc
push
mov
or
int3
rcr
aas
aas
mov
hlt
dec
(bad)
ror
jl
or
jecxz
mov
push
loop
adc
cmp
test
cs
sbb
out
popf
dec
arpl
(bad)
add
sbb
mov
xor
sub
lahf
out
loopne
aas
repnz
ins
sbb
mov
mov
sub
movs
jl
push
add
xchg
das
test
add
xchg
nop
arpl
and
xor
cwde
into
pushf
add
outs
call
mov
jg
shl
mov
sub
jge
pop
cli
pushf
enter
leave
test
das
sub
cli
int3
pop
adc
or
ds
jge
and
out
sbb
ror
adc
(bad)
fwait
shl
mov
mov
mov
mov
add
or
fnstsw
movs
iret
xchg
adc
ss
push
jns
mov
fimul
xchg
lds
jp
cdq
dec
scas
push
or
xchg
push
mov
faddp
xor
cmp
inc
xor
inc
dec
out
xor
sub
mul
imul
movs
cmp
fs
rcr
inc
rcr
add
cld
push
mov
inc
sbb
add
fs
xchg
test
leave
icebp
add
fs
push
ret
dec
adc
mov
inc
(bad)
sbb
push
fld
mov
inc
fistp
push
adc
lea
jge
sub
fist
dec
aam
pop
daa
xor
push
sub
icebp
inc
xor
push
cli
stos
leave
icebp
xchg
mov
xchg
out
sti
das
xchg
je
sbb
sub
in
dec
jg
ja
jno
fs
repnz
mov
and
push
leave
enter
xor
enter
popa
repz
jge
push
jne
retf
into
cmp
push
inc
pop
jne
hlt
pop
pop
inc
fbld
sar
adc
das
pop
shl
in
cli
mov
jns
add
xchg
adc
cs
or
cmp
cmp
mov
ja
pop
std
pop
sbb
iret
movs
das
sti
imul
test
mov
cmp
out
and
xor
fild
cmp
call
fwait
or
fistp
out
jmp
mov
push
dec
cli
dec
cwde
hlt
popf
and
hlt
int
es
sahf
icebp
es
inc
sahf
inc
addr16
adc
stos
pop
popf
aad
rcr
aam
sub
das
lock
mov
movs
add
sbb
mov
rcl
mov
jns
fmul
in
push
xor
jmp
add
inc
sbb
cmc
dec
outs
cld
repnz
mov
adc
out
ror
js
mov
jge
pop
or
out
outs
call
fstp
xchg
pop
jge
mov
push
pop
sbb
stos
gs
cmp
dec
mov
mov
jmp
fistp
les
mov
idiv
mov
add
je
fcmovnbe
mul
jns
jge
rep
ret
and
and
xchg
mov
push
mov
test
jmp
sahf
shl
jl
arpl
fstp
shr
and
scas
mov
adc
ret
and
scas
lea
popa
mov
int
mov
xor
push
outs
sub
xchg
mov
rol
gs
mov
mov
mov
fs
xlat
xor
jecxz
call
cmps
stos
or
push
jecxz
cmps
stos
nop
out
adc
js
cmp
adc
loopne
hlt
cmp
into
sbb
mov
xor
push
mov
je
das
repnz
shr
and
mov
mov
push
cmp
pop
add
mov
loopne
jmp
call
mov
cld
push
mov
call
sub
dec
out
add
test
push
add
lds
cli
mov
test
rcl
pop
stos
lods
mov
pop
dec
sub
sub
push
mov
cmc
pop
pop
stos
stos
les
xor
cwde
(bad)
jp
adc
(bad)
cmp
pop
fcos
into
and
pop
pushf
and
or
(bad)
mov
test
movs
dec
scas
and
cmp
pop
inc
jns
mov
jmp
jg
and
imul
mov
into
enter
push
cli
stos
mov
stos
and
push
(bad)
jmp
cmp
aam
mov
or
imul
cdq
repnz
mov
add
scas
fwait
or
scas
sub
aas
and
dec
dec
adc
imul
mov
push
mov
movs
push
adc
jecxz
mov
pop
mov
mov
pop
add
shr
retf
mov
sub
into
(bad)
mov
jmp
stos
dec
pop
add
(bad)
or
pop
add
aas
push
cmp
adc
pop
pop
cmp
inc
xchg
and
mov
cli
ins
adc
loop
call
jmp
gs
push
sbb
jecxz
add
shr
div
mov
hlt
scas
push
cmp
out
repnz
gs
sub
mov
in
pop
inc
repnz
mov
test
aaa
movs
les
rcr
xor
(bad)
sahf
mov
sbb
(bad)
in
imul
sbb
jno
std
cmps
or
jle
sahf
push
mov
int
mov
imul
popa
loop
cli
inc
add
push
stos
int3
jns
jl
jnp
adc
movs
xchg
std
mov
jmp
(bad)
in
inc
jmp
jnp
jp
out
pop
(bad)
fcmovnb
mul
mov
mov
pop
cmp
(bad)
in
lock
sub
popa
test
dec
pusha
fidivr
into
into
mov
xchg
into
fs
mov
lahf
fcomp
jbe
inc
mov
repz
(bad)
sbb
arpl
adc
mov
xchg
pop
ficom
dec
enter
jge
fnstcw
sub
add
jae
pop
cmps
mov
jae
outs
int3
sub
jecxz
adc
std
das
mov
fiadd
inc
ror
add
aas
aaa
(bad)
fdivp
xlat
(bad)
scas
das
lods
lods
pop
aas
outs
ins
in
jp
stc
stos
inc
lahf
dec
mov
or
or
sub
imul
lods
lods
cmp
cmp
inc
add
pop
jmp
or
cmps
mov
bound
repz
xchg
int3
sub
jns
js
adc
sub
mov
push
dec
inc
inc
hlt
addr16
pusha
push
lea
mov
inc
fidiv
(bad)
mov
js
push
add
sub
pop
mov
xchg
pop
shr
popf
mov
(bad)
fdivr
or
jae
call
mov
je
outs
clc
out
in
xchg
std
out
arpl
xor
adc
arpl
jp
fs
or
and
sbb
std
inc
xor
jecxz
xchg
add
xor
pusha
aam
add
xchg
xor
dec
outs
xor
out
cs
cmp
out
cs
mov
ins
ror
lds
cmc
cli
jmp
jno
outs
mov
fld
cmc
test
cmp
lock
push
(bad)
(bad)
mov
fwait
pop
cli
dec
pop
mov
dec
xchg
loop
stc
or
add
sti
adc
pop
mov
in
rcl
out
scas
rcl
cs
sbb
or
je
xchg
mov
jmp
sti
arpl
pop
ds
nop
mov
stos
mov
sti
xchg
ds
adc
cmp
dec
or
xchg
adc
sub
and
mov
and
xchg
sbb
xor
aas
and
adc
jmp
(bad)
cmp
mov
loope
adc
enter
and
dec
and
push
dec
add
stos
adc
out
push
pushf
jmp
jne
mov
dec
xor
shl
iret
fldenv
cmps
dec
ins
jg
mov
mov
fimul
mov
sbb
mov
lea
mov
inc
pop
sahf
jnp
imul
stos
clc
stos
js
inc
push
call
jne
adc
lahf
pusha
test
dec
test
xor
sub
xchg
std
cmp
enter
xchg
sbb
fwait
loop
addr16
jb
xchg
ror
push
arpl
pop
mov
mov
pop
push
mov
addr16
hlt
scas
mov
xchg
or
call
push
mov
lock
(bad)
xor
sbb
(bad)
cmp
xchg
cmps
or
mov
hlt
xchg
dec
cwde
hlt
ret
push
rol
js
mov
retf
je
jmp
shr
nop
pop
pop
xor
popa
or
stc
xchg
or
movs
test
maxps
enter
scas
scas
and
mov
mov
dec
cld
shl
mov
(bad)
out
mov
addr16
pop
(bad)
inc
int
(bad)
aas
or
xchg
fwait
sub
enter
xchg
adc
aaa
dec
or
mov
mov
gs
sub
push
mov
xor
loop
imul
mov
and
pop
sahf
sbb
pop
arpl
mov
les
add
add
inc
add
jae
mov
push
add
xchg
pop
adc
ficomp
test
sbb
stos
and
retf
push
dec
mov
bound
shl
add
sub
xor
and
data16
(bad)
mov
shl
shl
aam
sar
mov
rol
rol
sub
dec
das
adc
mov
push
ds
inc
pop
in
dec
cwde
sub
jmp
add
enter
mov
pusha
xchg
cs
arpl
cmp
push
or
lds
ret
repz
or
xor
xor
stos
(bad)
in
push
lahf
(bad)
repz
outs
jmp
jp
fadd
inc
push
pop
mov
cmp
(bad)
cli
shl
xor
jb
sti
jbe
ds
dec
cwde
hlt
scas
mov
cmp
lds
cmp
jge
into
sub
(bad)
sti
enter
inc
loopne
inc
jno
stc
ret
mov
loopne
jmp
xor
(bad)
jmp
ror
(bad)
sbb
(bad)
(bad)
out
add
xchg
mov
mov
out
int3
cs
jmp
jmp
cmp
xchg
(bad)
push
mov
cld
and
pop
cdq
add
add
retf
mul
pop
shr
(bad)
movs
(bad)
std
add
dec
jl
pusha
ret
jbe
add
dec
cli
xchg
xor
call
pop
jmp
fistp
cmps
hlt
fbstp
pop
rol
and
lds
jp
pop
pop
(bad)
jnp
mov
call
mov
std
xor
ror
call
int3
and
icebp
cs
sub
mov
mov
cmp
mov
leave
xchg
xor
pop
leave
in
mov
cld
data16
sub
dec
push
push
push
dec
out
in
adc
(bad)
jge
xor
retf
ror
add
jne
sub
mov
or
int3
push
ds
xchg
(bad)
and
call
adc
test
jne
daa
pop
in
dec
hlt
int
dec
push
aad
loop
mov
pushf
inc
lods
rcr
push
retf
das
xchg
jmp
ret
nop
add
mov
sub
call
add
fiadd
and
cld
sbb
retf
out
mov
and
fmul
jle
pop
and
pop
bound
shr
or
inc
jmp
dec
cmp
popf
cmp
fisubr
rcl
lods
cld
lea
inc
pop
lea
xchg
rcl
in
shl
jge
xchg
sub
pop
out
xor
dec
shr
sbb
cld
push
div
push
xor
test
das
jp
pusha
hlt
or
mov
(bad)
std
icebp
push
adc
mov
sbb
cwde
dec
ror
int3
xor
xchg
pop
inc
std
leave
push
hlt
in
ret
xchg
mov
cli
jmp
mov
movs
xchg
hlt
sahf
xor
aas
jb
jmp
dec
push
push
cs
std
jmp
movs
xchg
hlt
lds
xchg
mov
inc
retf
cmc
mov
jge
mov
pop
mov
out
push
(bad)
jmp
mov
mov
sub
and
jmp
int3
stos
fs
jmp
xlat
arpl
or
cmp
dec
sbb
mov
xchg
pop
fcom
in
or
daa
fisttp
adc
pusha
cmp
pushf
xchg
mov
fldcw
jl
jae
push
imul
push
movs
push
add
sti
or
inc
icebp
clc
mov
out
xchg
push
call
jmp
jo
push
sti
test
pop
sub
adc
dec
or
jo
sub
jnp
dec
pusha
add
repz
outs
xchg
or
cmp
movs
lds
sub
je
or
test
sub
in
movs
arpl
cmp
jne
adc
aas
dec
jne
mov
inc
test
xchg
jne
add
mov
sbb
shl
sbb
aaa
adc
cmp
fucomip
bound
les
push
iret
sbb
xlat
addr16
xor
push
scas
cld
sbb
sar
or
fs
iret
inc
ja
push
repz
retf
shr
cmps
push
idiv
cmove
pop
rcl
je
jmp
inc
ficom
das
sar
dec
xchg
push
or
push
push
std
dec
out
fld
std
and
arpl
aas
pusha
push
ficomp
adc
mov
hlt
jmp
mov
loope
sbb
sbb
sbb
sub
clc
gs
xchg
movs
lods
sbb
loop
sbb
mov
fs
pop
jbe
jl
mov
retf
mov
pop
mov
jae
retf
jp
sbb
not
and
(bad)
pop
sbb
push
movs
fcomp
push
imul
aas
icebp
gs
movs
mov
cdq
rcl
shl
rcr
xchg
push
out
mov
cmove
das
or
xchg
(bad)
std
cmp
pusha
ja
adc
inc
mov
cmps
xchg
rol
ss
xor
gs
xchg
cmp
push
dec
or
or
lahf
dec
test
jo
test
pop
(bad)
les
jg
mov
js
xchg
nop
ret
ja
dec
js
jne
xlat
fsubr
rcl
add
ret
int
mov
icebp
(bad)
cmps
push
xchg
in
mov
cmp
retf
pop
cdq
fistp
mov
cdq
dec
sub
xor
pop
sbb
jno
sbb
xor
cld
ficom
scas
mov
lock
sub
push
mov
(bad)
fcomp
shl
pop
mov
outs
fnstsw
adc
movs
cmp
(bad)
sbb
jle
fst
bound
xor
add
nop
cmps
in
sbb
sti
and
adc
cld
jne
xchg
xchg
in
rcr
iret
jecxz
in
in
aas
loopne
mov
into
shr
lds
hlt
not
jo
test
dec
(bad)
(bad)
mov
in
in
fnstsw
ret
mov
ficomp
je
mov
sbb
out
cwde
add
mov
mov
retf
push
jle
xlat
xchg
sar
dec
pop
sub
add
(bad)
retf
cdq
xor
scas
or
pop
push
jp
(bad)
xchg
add
xchg
stos
nop
shl
daa
loopne
mov
xor
stc
ins
int3
push
movs
test
jmp
lea
das
jle
rcl
inc
nop
sbb
mov
outs
pop
add
dec
cmps
add
cmp
mov
ds
inc
xlat
les
dec
ds
out
cmp
xchg
js
add
push
hlt
(bad)
(bad)
cmp
imul
mov
dec
pop
in
sub
sub
movlps
dec
ss
jnp
je
arpl
clc
int
je
pmuludq
inc
jmp
dec
sbb
xchg
(bad)
dec
call
pop
push
mov
pop
sub
js
xor
sub
setl
in
shl
mov
pop
aas
test
(bad)
sub
in
(bad)
mov
add
dec
mov
stos
(bad)
push
out
push
aad
cmps
ins
outs
addr16
cmps
daa
mov
adc
retf
test
aam
cmc
xchg
stc
bound
cld
int3
and
cmps
jb
daa
(bad)
xchg
mov
mov
jmp
dec
aas
pop
rol
mov
stc
dec
cmp
add
es
icebp
pusha
dec
sahf
sbb
push
sbb
xchg
adc
outs
leave
stos
xchg
repz
mov
sbb
ja
add
or
sahf
scas
(bad)
int
movs
xor
(bad)
outs
rol
bound
jns
lods
js
hlt
or
lahf
icebp
push
(bad)
scas
mov
addr16
data16
mov
hlt
idiv
into
loop
xor
pop
jge
call
out
jne
mov
in
std
retf
std
jecxz
push
add
or
jl
inc
ja
xor
xor
inc
scas
arpl
js
mov
sahf
stc
mov
dec
out
cdq
dec
jo
and
or
xor
pop
pushf
ret
cwde
mul
les
push
pop
mov
popf
ins
mov
inc
movs
arpl
and
aas
clc
cmp
xchg
into
push
repz
push
jns
xor
(bad)
jbe
(bad)
mov
int3
fstp
scas
lds
leave
xor
xor
popf
cwde
mov
out
push
aaa
push
mov
iret
imul
adc
cmp
and
sub
hlt
pusha
gs
cld
mov
adc
ror
pushf
(bad)
xor
mov
movs
jne
aaa
jbe
mov
cmc
xchg
or
cmp
les
in
push
jl
fst
and
jno
pop
mov
inc
mov
cmp
and
inc
outs
dec
mov
aaa
jp
sbb
inc
outs
jmp
pop
ret
outs
pop
push
ss
xor
pop
(bad)
mov
pop
ins
hlt
pop
or
push
mov
mov
cmp
(bad)
jg
mov
mov
ins
shl
sbb
fistp
je
jno
sar
int3
retf
mov
pop
cmp
push
mov
jge
leave
xor
mov
clc
xlat
shl
push
mov
popa
mov
mov
pop
mov
xchg
dec
mov
dec
out
fmul
xchg
pushf
cs
inc
int3
or
mov
gs
mov
imul
shl
inc
cmovle
pop
inc
cmp
push
mul
shr
or
bts
xchg
cli
cmp
jb
movs
push
icebp
adc
sub
bound
arpl
dec
sbb
or
(bad)
ror
mov
arpl
xchg
xchg
xchg
loopne
lea
cmps
rcl
clc
or
cmps
mov
test
jae
mov
jnp
push
sbb
mov
fstp
ds
jnp
sbb
retf
ds
adc
sub
jns
es
xchg
cld
jae
dec
add
pop
cld
sbb
outs
mov
jge
xchg
dec
mov
clc
xchg
jo
lods
fnstsw
sbb
iret
and
mov
jmp
xlat
or
aas
dec
out
xchg
cmps
cmps
fisttp
gs
les
xlat
adc
arpl
test
mov
icebp
pop
cmp
aad
cmps
mov
enter
mov
pop
lods
and
in
dec
push
bound
inc
push
sbb
push
cmp
inc
pusha
ins
fs
jmp
jne
jns
push
lock
enter
push
sti
sar
pop
gs
inc
inc
xchg
jb
pop
mov
pop
andps
hlt
inc
jecxz
xor
add
or
jbe
mov
jl
movs
xchg
lea
cmp
(bad)
int3
jmp
sub
pusha
mov
xchg
pop
mov
or
sbb
jmp
outs
pop
jecxz
std
jnp
js
add
add
ror
sub
nop
pop
mov
cwde
cmp
in
mov
leave
push
test
or
xchg
jo
or
sbb
rol
cmp
gs
mov
sbb
rcl
stc
sbb
scas
jnp
cld
cmp
inc
les
leave
inc
push
inc
xchg
pop
dec
adc
hlt
aaa
enter
cmp
outs
loop
push
addr16
cmps
fdivr
dec
sar
mov
lods
xchg
xlat
sub
or
shl
adc
xchg
mov
xchg
dec
or
push
mov
call
mov
and
test
retf
(bad)
mov
ss
out
mov
sti
jnp
mov
sub
jl
mov
pop
enter
mov
(bad)
cld
loop
sar
in
into
xadd
mov
xor
mov
xchg
neg
or
cmp
adc
add
sub
inc
pushf
mov
rcr
iret
test
mov
cwde
push
xchg
ss
outs
(bad)
xchg
cmc
and
mov
push
push
aaa
pushf
adc
dec
adc
fidivr
sub
nop
dec
xor
lods
mov
dec
mov
dec
push
mov
inc
outs
sub
push
repnz
cmp
sbb
fnsave
sub
mov
call
mov
jb
or
out
jle
sbb
aam
add
test
out
shl
pop
cdq
and
mov
aaa
ss
jl
je
cmp
scas
jmp
dec
jmp
push
stos
(bad)
or
(bad)
jecxz
inc
fadd
xchg
fwait
sub
pop
lods
cmps
inc
test
(bad)
xchg
cmpps
xchg
xchg
dec
retf
sbb
sub
mov
test
scas
xchg
xchg
jb
pop
retf
xchg
pop
xchg
xchg
cmp
adc
xchg
adc
xor
inc
jne
cdq
and
pop
inc
dec
enter
inc
cmp
push
push
(bad)
cli
jecxz
or
pushf
dec
inc
jns
rcr
mov
xchg
lds
pop
repnz
mov
rcr
jnp
jecxz
add
out
loopne
scas
test
fist
push
fnstenv
jp
fiadd
cld
jbe
push
cwde
repnz
xchg
xor
cmp
gs
xchg
or
lods
pop
pop
mov
fld
fsubr
adc
lea
pop
cmps
inc
aas
dec
pop
xlat
ror
lds
or
push
push
jg
(bad)
arpl
lea
enter
jno
shl
shl
movs
mov
clc
jbe
sbb
movs
popa
adc
or
ds
pop
mov
cmp
dec
push
scas
adc
sbb
clc
test
pusha
mov
inc
cli
adc
test
mov
and
push
rcl
push
shr
inc
inc
retf
rcr
imul
cmp
mov
push
cdq
push
and
call
xchg
test
mov
mov
icebp
xchg
jmp
mov
mov
adc
in
clc
xor
mov
mov
lahf
nop
mov
and
mov
imul
mov
mov
(bad)
cmp
mov
pop
jns
pop
adc
push
stos
jp
cmps
(bad)
sbb
ret
in
jmp
inc
stc
cmp
in
xchg
sbb
xchg
sub
add
jmp
retf
scas
ret
imul
jne
(bad)
leave
aaa
pop
push
mov
shl
in
cwde
enter
lea
xchg
mov
and
movs
call
jbe
jge
test
adc
sub
dec
les
stos
inc
inc
inc
repz
int3
adc
mov
inc
adc
mov
and
cmps
sbb
or
rol
retf
pop
mov
adc
repnz
mov
retf
mov
outs
push
stos
loopne
add
stos
imul
test
jp
test
inc
xor
addr16
ds
inc
jge
jmp
xchg
call
sub
or
in
pop
dec
out
push
pusha
jne
sbb
in
xor
lahf
sub
test
cmp
inc
nop
cmc
enter
xchg
jecxz
mov
js
sbb
lods
and
sub
es
push
push
lahf
in
ror
mov
clc
enter
mov
pop
data16
jmp
int3
movs
jbe
xchg
fimul
mov
xchg
jbe
outs
cmp
cmp
pop
in
mov
add
ds
push
jne
jae
aam
imul
loope
xor
loop
mov
mov
shr
jno
shr
out
cmp
push
jmp
aaa
sub
mov
inc
std
lss
repnz
aas
in
gs
outs
xchg
cmc
xor
js
lods
in
cmp
out
add
das
popf
idiv
sub
mov
mov
fsub
and
loop
mov
jecxz
aas
xor
scas
xchg
jmp
(bad)
sti
jno
dec
jns
mov
or
push
(bad)
lods
out
bt
pop
imul
xchg
xchg
mov
xor
pop
out
sbb
add
mov
not
sub
dec
out
add
loopne
jo
ja
fwait
mov
and
shr
in
(bad)
cmp
and
push
sub
mov
int
xchg
nop
(bad)
mov
popf
aaa
push
in
push
dec
inc
into
(bad)
mov
jg
and
inc
nop
sub
(bad)
ucomiss
xor
mov
xlat
mov
movs
lock
cmp
sub
ins
jb
push
ss
xchg
push
fistp
sbb
shl
rep
or
inc
cmc
mov
loop
pop
jns
pop
mov
jb
inc
mov
dec
je
gs
fistp
cld
and
jnp
or
xlat
mov
jge
fucomp
(bad)
(bad)
inc
fbld
nop
out
je
sub
xchg
xchg
jg
lock
lea
mov
cwde
mov
mov
in
rol
pop
fstp
inc
mov
retf
adc
pusha
fidivr
jecxz
jle
fisttp
sbb
shl
fcomp
push
pop
push
fsubr
hlt
out
pop
in
inc
mov
(bad)
cwde
inc
dec
xor
push
cld
pmaddwd
mov
ficomp
ret
sub
mov
out
lea
and
es
mov
in
pop
je
cmp
daa
js
out
push
dec
push
mov
pop
call
popf
pop
pop
xor
mov
pop
hlt
out
xlat
pop
mov
sub
pop
repz
xor
sub
outs
test
shl
and
test
sar
in
lods
mov
and
sbb
xchg
jbe
mov
ja
cmp
dec
cmp
mov
adc
or
add
jne
test
cmp
std
popa
and
push
and
pop
popa
inc
mov
mov
rcr
aam
push
xor
int3
xchg
xchg
rcl
xlat
and
or
cmp
adc
push
pop
mov
mov
out
repz
mov
jmp
cmps
mov
rol
and
test
popa
retf
(bad)
xchg
pop
add
pop
add
ret
inc
add
aaa
adc
mov
fisttp
adc
fs
mov
inc
pop
icebp
cs
test
frstor
cdq
hlt
scas
(bad)
inc
push
loop
xchg
outs
lods
test
mov
jb
loopne
arpl
push
fucomip
mov
mov
mov
(bad)
sbb
adc
mov
or
push
scas
cmp
cmc
in
cs
test
imul
push
cmps
ror
xchg
fcomp
adc
jbe
iret
adc
int
pop
push
jne
rol
xchg
cdq
dec
adc
scas
out
inc
jmp
push
call
ins
call
mov
pop
aaa
cmp
fimul
xchg
add
dec
enter
mov
inc
cmp
out
lea
movs
repnz
jmp
iret
sbb
test
jbe
mov
fldcw
fidivr
cli
jne
and
ret
xchg
sub
jmp
mov
ss
lock
jp
xor
ss
jns
push
xchg
ss
leave
adc
pop
adc
mov
jge
pusha
and
cmp
jmp
adc
add
sbb
sub
adc
int
jbe
sub
and
cmp
shl
jb
push
aad
sti
jge
ret
jae
add
push
and
aad
in
add
adc
push
iret
mov
xor
cs
(bad)
jb
ds
jmp
xor
xchg
out
cmp
shl
aas
xlat
dec
sub
cs
hlt
int
ins
stc
xor
jbe
fwait
aam
je
f2xm1
or
add
cs
add
cmp
cmps
add
jnp
pop
fsubp
adc
rcr
out
dec
es
jae
daa
add
cmp
mov
adc
leave
repnz
push
mov
mov
adc
ret
inc
cmp
push
dec
fcom
daa
std
xor
js
or
cmp
add
test
fcom
fwait
call
ds
or
cmp
dec
adc
push
xor
lds
inc
and
sub
out
push
mov
hlt
push
iret
ror
jle
repnz
out
(bad)
loopne
bound
mov
xor
adc
pushf
mov
push
in
xchg
dec
ds
cmp
loop
pop
mov
dec
int3
jae
aad
call
or
popf
aaa
jne
dec
shl
test
cmp
mov
daa
out
jge
sub
ins
addr16
push
xor
int3
cdq
ret
or
or
in
fst
int
or
(bad)
frstor
lods
mov
cdq
(bad)
cmp
imul
xchg
sub
(bad)
inc
jns
psrld
inc
dec
push
mov
push
imul
ret
mov
mov
mov
aas
leave
mov
mov
aas
pop
cmps
inc
in
mov
fmulp
xchg
adc
dec
mov
cmp
jns
clc
jb
in
shl
rcl
push
loopne
(bad)
mov
scas
push
push
addr16
sub
add
or
push
or
sub
sub
or
pop
lds
mov
add
test
loopne
and
jle
adc
jmp
xchg
dec
popf
hlt
cmp
dec
jecxz
cmc
and
out
jmp
xchg
daa
push
inc
scas
add
push
sub
into
push
sub
out
sub
add
pushf
test
jecxz
sbb
jns
dec
(bad)
out
cmp
or
inc
(bad)
mov
ds
outs
icebp
stc
inc
xchg
ffreep
pop
test
fnstcw
inc
arpl
mov
je
fiadd
xor
mov
xor
adc
pop
sub
popa
add
mov
sub
lods
retf
jb
rcl
jnp
js
outs
outs
pop
outs
pop
fistp
jnp
lahf
ins
inc
inc
and
movs
and
int
out
ja
push
push
mov
jp
pop
xchg
fisttp
hlt
mov
inc
fs
rcl
mov
sbb
or
xchg
out
stos
xor
popa
test
mov
or
and
addr16
repz
out
pushf
arpl
js
ins
push
fmul
or
cdq
fs
imul
mov
popa
test
das
fidivr
lahf
dec
cmp
mov
add
add
cwde
jno
mov
jp
pushf
jmp
mov
(bad)
les
mov
push
fsub
xchg
mov
adc
in
or
bound
inc
fcomp
sub
mov
add
xchg
call
jae
sbb
jge
scas
cmp
cmp
xchg
adc
call
popf
shl
icebp
xchg
inc
or
mov
sub
sbb
out
xchg
mov
inc
push
mov
dec
stos
ss
data16
cmp
pop
int3
cmps
stos
out
mov
data16
popa
test
aas
aaa
pop
mov
xor
pop
aaa
push
pop
call
fs
test
push
shl
lds
add
sub
xchg
or
lds
mov
mov
call
push
cmc
sbb
call
or
xchg
sub
xor
sahf
jge
xor
hlt
dec
xchg
cli
mov
stos
fs
pop
lods
in
(bad)
enter
cwde
mov
outs
inc
outs
lock
push
push
add
pop
pop
and
push
mov
dec
sub
loope
ret
jecxz
pop
sahf
pushf
add
sbb
and
test
mov
mov
jns
fld
std
sbb
call
(bad)
fldcw
(bad)
pop
mov
dec
inc
fwait
xor
shr
pop
ss
in
push
shl
cmp
mov
aaa
sub
test
jne
cmp
mov
aam
test
shl
adc
aam
push
lock
stc
aaa
sub
mov
(bad)
ret
ret
inc
cmp
jbe
push
dec
jns
dec
mov
xchg
fistp
lods
stos
mov
(bad)
mov
push
inc
xchg
ficomp
or
sub
cmc
add
jnp
je
in
fwait
movs
aad
mov
xor
pop
pop
sub
push
cli
mov
neg
mov
fdivr
arpl
call
icebp
pushf
movs
sbb
or
push
xor
push
mov
xchg
iret
dec
sbb
stc
or
push
mov
or
jl
cld
sbb
cld
inc
ss
cdq
repnz
mov
or
mov
inc
das
outs
addr16
mov
push
loopne
aas
pop
jne
div
or
fwait
or
daa
xchg
scas
popf
retf
sbb
pushf
xlat
into
mov
jmp
out
mov
not
retf
mov
xchg
pop
sub
dec
pop
inc
and
add
(bad)
mov
mov
or
push
inc
int
imul
cld
pop
and
cmps
cmp
pushf
lock
pop
inc
es
js
or
cmp
push
cdq
add
push
fdivr
dec
push
dec
push
push
push
inc
add
mov
pop
xor
and
sub
outs
sbb
lea
div
imul
mov
jecxz
jbe
mov
push
fnstsw
daa
fisubr
rcl
dec
or
mov
push
dec
rcr
and
sub
xor
cmp
mov
xchg
and
adc
stos
lds
push
add
jmp
jecxz
imul
mov
aaa
push
and
(bad)
sbb
mov
xor
jecxz
add
clc
cmp
inc
ins
gs
cmp
xchg
or
lds
aaa
add
xchg
cmp
dec
in
cmp
mov
pushf
pop
jns
inc
inc
pop
jp
mov
push
retf
mov
xchg
sahf
gs
push
xor
sbb
stos
pop
arpl
sub
sti
repz
push
je
jp
jle
mov
imul
enter
mov
xor
xor
dec
daa
push
enter
ror
out
inc
inc
xor
call
mov
out
sbb
das
pop
sub
fisubr
inc
fwait
scas
mov
popf
and
in
and
lods
int3
fimul
iret
mov
loopne
popf
sub
cmp
not
adc
cmc
pop
pop
jns
fstp
inc
jnp
xchg
repnz
adc
xchg
mov
jl
pop
xchg
pusha
mov
push
outs
dec
ja
xchg
add
mov
push
mov
cmp
in
jle
xor
add
icebp
jae
call
add
ins
movs
sbb
stos
in
dec
into
pop
fistp
shr
mov
xor
xchg
jg
lock
mov
and
pushf
iret
in
call
xor
fsubr
ja
dec
inc
ja
jo
push
cmp
sbb
and
push
rcr
es
mov
retf
fsub
and
sbb
inc
outs
mov
push
mov
loopne
fiadd
pop
lahf
retf
cmp
test
test
jmp
iret
dec
sub
push
retf
cmc
js
add
mov
ficomp
mov
sub
lods
jmp
scas
leave
mov
add
aad
push
dec
pop
cwde
pop
sbb
rcr
jecxz
jns
daa
push
test
(bad)
xor
mov
mov
sbb
push
adc
pusha
jp
(bad)
jae
dec
jp
aad
cmp
push
adc
dec
out
mov
dec
frstor
pusha
sti
xor
sub
mov
(bad)
sbb
cmc
fist
aas
sbb
jmp
inc
xor
scas
nop
xchg
jmp
cmp
lahf
mov
adc
xor
(bad)
adc
int
mov
loop
push
ja
sub
push
enter
push
enter
inc
lods
xor
jae
pop
aas
pmaddwd
dec
push
and
inc
inc
fs
xor
xchg
inc
or
push
sbb
mov
pop
js
push
mov
ret
cmps
sti
xor
dec
pusha
xchg
fwait
cmp
push
in
push
sbb
stos
pop
repz
jg
sub
dec
into
gs
sbb
inc
sub
rol
xchg
inc
nop
push
jp
hlt
pop
mov
jnp
mov
loope
fldcw
lods
cmp
mov
mov
jp
push
leave
and
js
cld
xchg
(bad)
or
(bad)
mov
mov
inc
(bad)
sbb
inc
enter
or
adc
in
stos
pop
popa
jmp
adc
fs
cmc
popa
fucomp
add
(bad)
hlt
and
lock
inc
add
ja
(bad)
mov
popa
sbb
dec
fstp
mov
ja
js
(bad)
mov
sti
pop
iret
fwait
pop
sub
lahf
fisubr
sub
pop
jno
ret
icebp
or
js
cmp
rcl
cmp
jno
test
push
xchg
jmp
or
je
ret
cmp
xchg
(bad)
lahf
out
and
ja
inc
fs
fadd
std
mov
aad
add
sbb
inc
int3
cmp
add
mov
xchg
mov
jmp
add
lock
xor
ja
jmp
fpatan
sub
mov
in
hlt
sub
retf
scas
gs
dec
setg
scas
add
mov
repnz
mov
lock
mov
mov
shl
fimul
pop
mov
(bad)
mov
xchg
xor
retf
repnz
xor
mov
pop
fbld
(bad)
sbb
dec
test
repnz
pusha
or
popa
xchg
movs
push
fisub
ret
jne
pop
or
lods
inc
scas
sub
mov
iret
out
stc
arpl
sbb
test
test
jno
(bad)
daa
sub
jo
xchg
xchg
in
mov
dec
into
into
(bad)
sbb
(bad)
or
aaa
xchg
push
hlt
jo
clc
mov
cs
scas
es
test
adc
jge
or
pop
push
rol
imul
mov
mov
xchg
cmp
sbb
loopne
(bad)
int
xchg
add
jns
mov
xchg
fldenv
into
xor
retf
lods
jo
mov
sahf
jno
fs
xchg
(bad)
mov
mov
push
lds
retf
cld
pop
fnstcw
(bad)
rcl
scas
mov
add
cmp
sbb
data16
mov
ds
cmp
mov
jno
cmp
int3
test
retf
xchg
xchg
push
mov
mov
jl
sbb
lods
mov
int
cmp
cmp
(bad)
out
mov
call
jae
cdq
jno
xchg
cwde
or
mov
loopne
iret
xor
dec
pop
es
aad
inc
pop
repnz
mul
fnop
(bad)
adc
dec
and
inc
sub
enter
mov
in
adc
in
or
aaa
adc
repz
arpl
in
or
xor
add
inc
call
ja
mov
call
fcom
sbb
xor
out
add
bound
sbb
dec
xchg
addr16
(bad)
fnsave
mov
or
es
cmp
out
mov
add
loope
cmp
mov
hlt
mov
imul
mov
cld
push
pop
add
fucomi
sub
out
dec
mov
and
(bad)
int3
test
pop
mov
leave
sub
jmp
movs
rol
arpl
stos
xchg
imul
sbb
test
addr16
jecxz
or
in
push
pop
push
mov
aaa
or
hlt
pop
sbb
in
inc
aad
mov
cmps
jp
in
push
mov
into
rcl
hlt
(bad)
repz
retf
and
bound
(bad)
push
push
jp
nop
dec
leave
int3
fidivr
and
pusha
popa
sub
ret
mov
imul
ins
mov
rcl
and
mov
sbb
mov
add
inc
movs
sub
call
mov
mov
out
mov
sbb
adc
sub
sub
dec
dec
fdivr
dec
(bad)
leave
scas
popf
dec
xchg
pushf
jl
xchg
imul
test
rol
pop
cld
data16
scas
pushf
movs
inc
mov
and
push
dec
and
ror
and
(bad)
movs
out
mov
pop
cmps
cmps
clc
mov
rol
out
rol
orps
adc
lea
push
push
lds
rcl
pop
or
outs
mov
cmp
shl
loopne
and
nop
sbb
(bad)
jle
loope
das
in
and
cmps
lds
retf
and
mov
sbb
fdiv
cwde
add
outs
sbb
xchg
fiadd
mov
cmp
fs
cmps
fcmovne
ret
shl
rcl
(bad)
mov
or
ja
shl
shl
sub
pop
test
retf
xchg
sub
stos
loop
or
sbb
xchg
retf
push
xor
dec
adc
pop
clc
pop
(bad)
xchg
jle
sub
aad
es
jp
loop
jnp
mov
jmp
not
push
push
mov
ficom
sub
inc
mov
scas
jge
mov
pop
retf
push
jge
xchg
mov
sbb
push
int
ss
fs
sub
pop
inc
mov
dec
loope
xchg
xor
push
xchg
or
paddb
out
addr16
xchg
ret
les
mov
test
fbstp
sub
jb
shl
pop
pop
or
mov
push
rcl
je
xchg
aas
pop
xor
cmp
mov
(bad)
sar
in
movs
or
xchg
stc
inc
les
jecxz
call
pusha
dec
nop
test
cmp
stos
inc
cmp
out
fsubrp
mov
inc
rcr
(bad)
fldenv
(bad)
fisub
fld
scas
and
test
cs
les
daa
push
and
dec
inc
or
xor
scas
mov
jnp
ret
sub
cmp
repz
ret
mov
cmps
fs
cld
fs
cmp
popf
sub
mov
in
loope
aas
and
sbb
mov
std
sbb
(bad)
push
outs
push
add
dec
fxtract
jbe
push
(bad)
loopne
ins
pop
loopne
mov
add
or
sbb
and
add
mov
add
mov
rcl
popf
mov
add
or
jo
call
dec
adc
sub
pop
xor
dec
fucomp
psrad
out
pop
aad
lods
imul
xor
mov
rcl
div
dec
cwde
loop
adc
daa
inc
daa
pop
leave
push
sbb
and
dec
adc
repz
fimul
outs
sub
in
mov
test
cwde
jl
xor
das
out
push
jge
dec
and
int3
out
movs
mov
fdivr
xchg
mov
mov
call
cld
stos
mov
dec
lods
or
aaa
cdq
lahf
test
or
movs
pop
aaa
ret
aaa
lea
stos
xchg
sub
mov
pop
inc
test
js
sub
xlat
jmp
or
cmc
push
je
sub
mov
or
aaa
or
les
out
(bad)
add
fidiv
xchg
adc
mov
or
cwde
or
inc
or
jbe
adc
ja
rcr
arpl
fs
cmp
cmp
sub
xchg
fidiv
jns
les
adc
jge
xor
xor
or
xchg
mov
jl
mov
popf
aam
stos
and
(bad)
ins
or
sub
loope
sbb
xor
(bad)
xchg
adc
inc
mov
add
loop
in
inc
pop
dec
dec
(bad)
xor
ret
xchg
push
sbb
sbb
push
les
cmp
add
(bad)
div
xor
push
and
sbb
das
cmc
ds
(bad)
rol
ins
adc
stos
add
leave
xchg
addr16
mov
xor
and
imul
fisub
add
dec
cmps
mov
shr
mov
fimul
rcl
inc
nop
push
mov
test
sbb
loopne
pop
frstor
push
inc
xchg
inc
scas
ds
mov
push
les
sahf
in
or
push
push
mov
sbb
sti
or
loopne
add
inc
inc
rcl
icebp
or
call
jl
test
popf
into
xor
pop
add
fwait
nop
xor
xor
(bad)
jl
je
pop
xor
xlat
ins
jns
cmps
pusha
lock
jmp
pop
push
mov
nop
xlat
lock
ins
mov
ss
cmps
mov
sahf
and
sub
fsub
loop
fsub
mov
call
shr
push
shr
aad
fstp
xchg
inc
out
pop
(bad)
mov
mul
or
int
pop
xchg
pop
cmp
cmp
(bad)
je
ja
xchg
or
daa
lea
mov
sub
mov
xchg
stos
xchg
jmp
adc
add
or
icebp
mov
shl
xor
daa
dec
nop
cdq
or
data16
fsub
add
bound
cdq
cwde
mov
test
adc
mov
inc
mov
test
lahf
dec
cmp
and
mov
test
xchg
das
push
clc
xchg
test
sub
in
dec
adc
out
dec
pop
sub
in
outs
fcom
fwait
push
sar
push
(bad)
(bad)
aaa
cld
cmp
dec
test
mov
in
sub
es
ins
adc
not
mov
inc
inc
or
cld
mov
test
mov
pop
jmp
sahf
aaa
retf
jnp
int
push
cld
repnz
xor
mov
add
mov
and
add
jecxz
mov
cmp
shl
mov
call
xlat
sbb
into
mov
test
jecxz
push
cmp
push
rol
xor
test
mov
or
dec
mov
cmc
jo
xor
jge
repnz
mov
xor
add
mov
cmp
mov
mov
dec
sub
data16
xor
dec
push
push
push
cmp
(bad)
data16
iret
sub
cmp
cmp
inc
shl
xor
mov
pushf
jo
xor
xchg
xor
push
sti
sub
js
mov
lods
mov
dec
repnz
data16
dec
xchg
adc
cdq
ror
jmp
shl
cmp
mov
cs
sub
sbb
fsub
mov
fsub
mov
mov
mov
or
adc
cmc
and
movs
add
cmps
xchg
outs
in
xchg
jge
and
arpl
test
dec
outs
push
sbb
sbb
mov
cmp
sub
mov
cmp
pusha
sub
lock
push
pop
xchg
sbb
test
cdq
pop
adc
mov
hlt
les
loop
aam
and
retf
pop
call
lahf
dec
jmp
xchg
mov
retf
xchg
dec
in
into
lahf
test
fld
inc
cmc
jns
adc
scas
les
push
dec
mov
stc
sub
fwait
mov
cmp
cmp
retf
add
sbb
or
xor
or
dec
or
mov
in
ins
cmp
ret
pop
fmul
mov
into
xchg
fsubr
rcl
das
rol
test
popf
mov
sbb
and
jg
adc
test
xor
adc
iret
push
sub
add
outs
popa
adc
fdivr
and
in
add
int
mov
pop
sbb
mov
fwait
adc
push
out
and
xchg
push
out
rcl
jae
cld
mov
outs
mov
sar
adc
hlt
rcl
pop
jmp
adc
bound
mov
add
(bad)
adc
push
lahf
mov
sti
out
rcr
cmps
or
mov
inc
int3
jl
inc
adc
bound
pop
xor
or
data16
mov
jmp
jmp
popf
pop
out
sbb
pop
test
aam
je
add
nop
adc
ja
push
xchg
dec
mov
or
push
and
mov
cld
or
adc
jp
or
mov
dec
dec
or
inc
pop
pop
inc
jne
xchg
push
push
push
sbb
cwde
xor
lock
pop
xchg
push
xlat
call
push
stc
je
cmp
mov
imul
inc
pop
pop
int
test
jge
pop
inc
jp
pop
pushf
adc
iret
xchg
adc
mov
mov
dec
inc
sub
inc
dec
inc
loopne
adc
jp
jge
push
arpl
pop
push
cli
in
sahf
in
push
jae
cmp
xchg
je
in
aas
add
(bad)
int
xchg
(bad)
or
dec
jle
(bad)
jbe
in
aaa
mov
or
dec
daa
pop
lds
and
iret
sbb
test
push
push
and
mov
xor
ss
mov
xchg
iret
shr
jno
(bad)
shr
add
and
lods
outs
imul
test
fcomp
push
pop
jge
clc
adc
out
mov
pop
pop
test
xor
push
cmp
cld
sub
fistp
pop
cmpxchg
xchg
repnz
lods
mov
mov
dec
sbb
fiadd
cmp
pop
pop
mov
mov
in
popf
mul
xchg
adc
and
int3
mov
jl
sbb
dec
hlt
push
fdiv
add
cmp
jo
test
sub
dec
call
mov
test
ret
xchg
push
push
jns
push
dec
sub
add
mov
jns
add
cmps
stc
int3
jnp
xchg
and
xor
push
rol
adc
jno
mov
mov
mov
cs
mov
out
add
mov
icebp
outs
mov
fdivrp
mov
fs
outs
pop
jmp
jle
dec
data16
jns
dec
out
mov
sbb
jecxz
jb
pop
popf
movs
cmp
outs
lea
cmp
jl
push
mov
push
or
cld
jb
sub
cmp
loopne
mov
inc
ror
pop
cmp
dec
outs
ja
or
retf
les
mov
mov
inc
into
out
test
out
cwde
lock
jb
jns
aas
mov
mov
stc
test
cmp
cmc
or
rol
cmp
xchg
cmp
ror
mov
cmp
mov
sub
and
and
adc
sub
in
dec
retf
adc
not
add
scas
ds
cs
pop
ret
push
or
pushf
cmp
xchg
push
fmulp
sub
pop
shl
ds
sub
lods
fs
mov
jge
add
jp
cmp
fmulp
inc
mov
ror
int3
ds
add
mov
gs
adc
mov
adc
fs
sbb
add
push
js
jno
mov
enter
adc
adc
in
mov
shl
and
sub
push
aad
nop
repnz
movsx
add
mov
sub
mov
ficom
jne
adc
mov
mov
sub
loop
nop
fldenv
xor
fcom
cmp
and
cmc
sbb
or
cwde
fidivr
test
js
(bad)
out
pop
loop
dec
jne
xchg
mov
cli
out
adc
jp
call
test
ret
mov
fisubr
push
sub
test
mov
dec
fwait
loopne
push
data16
mov
cld
fwait
pop
not
sbb
push
ror
xor
scas
rcr
ret
sbb
lods
or
daa
pop
jg
leave
inc
mov
cmp
ins
setae
js
repz
pushf
dec
test
mov
pop
ins
adc
adc
aas
cli
out
fild
cwde
sbb
jl
out
push
inc
(bad)
sbb
sub
stos
cs
in
inc
test
cmps
lods
or
shr
jge
sub
ror
mov
push
outs
and
pop
ret
dec
mov
bound
sbb
int3
jne
ins
inc
js
and
push
mov
popa
cmps
pusha
sub
cli
add
cmc
out
pop
daa
gs
mov
xor
aas
mov
and
adc
cmp
lods
or
js
dec
jle
fucomp
sbb
or
out
xchg
jmp
aam
xchg
les
fdivr
outs
or
popf
sbb
pop
jge
ret
call
pop
mov
arpl
sub
or
dec
dec
aam
mov
cmp
in
imul
adc
fnstsw
mov
sub
js
inc
fbld
pop
push
data16
aas
pop
jg
ds
mov
icebp
dec
push
adc
pusha
lea
mov
dec
cwde
sbb
xor
sub
and
mov
leave
loope
sub
xor
ror
mov
dec
call
xor
sub
in
mov
or
fst
or
stc
jb
add
mov
xchg
push
xchg
sbb
push
pushf
ins
or
popa
retf
sub
inc
(bad)
xchg
adc
scas
xor
and
push
or
mov
push
scas
sbb
adc
nop
inc
bound
out
mov
rcl
outs
gs
lahf
sub
xor
pop
scas
loopne
aas
push
lds
push
(bad)
inc
fdivr
fs
icebp
nop
stos
push
clc
test
fst
dec
sub
and
mov
out
sub
out
push
loope
pop
xor
and
sub
nop
dec
inc
(bad)
pop
inc
retf
jae
pushf
pop
ins
jne
pop
mov
sbb
(bad)
rcr
sub
xchg
jb
test
or
dec
hlt
aad
hlt
dec
ins
pop
push
out
mov
int3
aam
pusha
or
fcom
addr16
dec
sar
sahf
and
inc
and
pop
dec
mov
add
jno
pop
mov
push
stos
fild
fwait
movs
scas
ja
jecxz
push
addr16
inc
mov
mov
cmp
xor
mov
cld
loopne
add
xchg
jne
jl
fwait
add
ror
xchg
mov
dec
and
push
fs
mov
push
js
xchg
cmc
hlt
add
jno
jo
ins
in
movs
or
int
xchg
retf
popa
inc
dec
fwait
in
mov
scas
or
sub
out
jmp
add
push
xchg
dec
scas
movs
cmps
hlt
add
adc
dec
loop
xchg
push
pop
xchg
jnp
pop
add
push
js
fcomp
jg
mov
dec
not
xchg
sbb
and
xchg
adc
dec
cmps
xor
mov
or
dec
xchg
addr16
jp
int3
les
dec
pop
mov
pop
outs
data16
in
repz
mov
jnp
mov
imul
push
xchg
dec
adc
lea
lahf
mov
push
adc
lods
pop
sbb
sub
sbb
pop
xchg
cwde
jb
(bad)
add
lods
xchg
addr16
mov
cmp
sar
retf
mov
sbb
mov
maxps
int
sbb
int
mov
or
jmp
cli
outs
lea
fwait
les
mov
out
inc
sub
mov
test
mov
stos
cmp
dec
jp
xchg
mov
mov
push
in
mov
xchg
aam
jmp
xor
dec
inc
mov
push
dec
jg
dec
mov
imul
mov
data16
adc
ss
push
fiadd
out
popf
pop
sbb
sub
imul
jl
in
jo
jle
mov
gs
cs
cmp
(bad)
fs
add
repnz
scas
jl
sbb
sub
in
fs
push
mov
and
leave
test
test
mov
ret
pushf
out
dec
jmp
cli
leave
cmp
pop
hlt
adc
test
sbb
cdq
add
mov
outs
lock
scas
mov
int
lahf
dec
daa
or
push
sbb
mov
jae
dec
je
dec
dec
xchg
fiadd
je
dec
out
inc
jns
sti
cli
call
lock
ss
repnz
push
pop
fwait
hlt
jecxz
js
inc
xor
push
adc
jns
jns
ret
in
shl
hlt
stos
inc
mov
retf
sub
ss
cmp
xchg
cli
stos
push
lahf
inc
push
pop
fist
stc
cmp
jge
fdiv
xchg
in
or
mov
add
push
mov
fs
leave
mov
clc
dec
add
pop
shl
icebp
sbb
cmp
repz
sbb
fild
push
xchg
cmps
je
push
icebp
cmp
nop
xchg
mov
inc
xchg
push
xchg
xchg
out
rcl
xor
inc
out
stos
xchg
loopne
call
jns
xor
sbb
mov
mov
mov
or
lds
dec
mov
xchg
sub
bound
out
xor
pand
or
add
pop
aaa
jle
enter
push
je
pop
inc
jo
jp
int
inc
jp
xchg
ins
sub
imul
xor
push
stc
int
fsubr
jmp
jp
mov
in
arpl
dec
mov
imul
push
cli
out
mov
mov
cmc
pop
xor
ss
pop
pop
xor
cdq
sahf
into
mov
arpl
scas
fcmovne
mov
or
in
lahf
xor
mov
jmp
xchg
mov
sbb
mov
jge
outs
sar
sub
cs
add
mov
adc
call
mov
jb
jno
ins
shr
fld
into
inc
in
ins
cmc
xlat
repnz
ficom
mov
call
push
cmp
aaa
stos
xchg
mov
mul
je
mov
sbb
mov
adc
jp
jl
mov
popa
inc
and
jmp
or
cld
fld
arpl
in
xor
and
pop
mov
jp
(bad)
imul
iret
pop
xchg
inc
loopne
neg
test
xchg
int3
shr
jecxz
(bad)
push
sub
push
pop
rol
xchg
xchg
inc
add
adc
lahf
jmp
fcom
test
movs
inc
add
call
mov
pop
retf
mov
push
movs
clc
xchg
shl
pop
and
repnz
les
jle
xlat
dec
out
ror
fwait
push
pop
inc
dec
mov
in
jecxz
ss
lea
lahf
ss
lea
push
scas
push
xor
lds
mov
cmp
push
pusha
jmp
and
sbb
enter
push
pop
pop
inc
xchg
pusha
ror
(bad)
sbb
jecxz
test
xchg
or
dec
push
test
inc
push
lods
mov
mov
push
daa
aad
and
mov
push
dec
xchg
mov
(bad)
sti
scas
cmps
out
dec
arpl
ins
push
lahf
and
les
jmp
pop
loopne
sahf
into
adc
pop
pop
push
inc
and
pop
cmp
shl
jne
inc
je
daa
cs
adc
ret
xchg
pop
cmc
mul
sahf
movs
comiss
sub
xchg
or
ret
dec
add
(bad)
pushf
sbb
neg
int3
xchg
add
pop
cli
popf
iret
jae
xor
and
or
loop
out
bound
mov
aam
aaa
xchg
pusha
(bad)
call
jg
in
mov
pop
push
adc
jp
add
in
shr
pop
xor
jg
scas
rcr
sub
jecxz
test
gs
dec
mov
adc
int3
dec
retf
push
sub
sti
and
xlat
repz
in
dec
jne
je
jge
cmp
ret
xchg
jne
adc
cs
ss
(bad)
repnz
popf
(bad)
cdq
xor
xchg
inc
cmp
repz
stos
jae
xor
(bad)
ins
cli
push
mov
loopne
in
lahf
shl
or
outs
push
add
mov
hlt
je
cdq
or
ins
mov
shl
nop
scas
add
stos
xchg
mov
cmp
sar
mov
jmp
mov
or
in
hlt
push
aas
in
shl
push
xor
test
push
xor
ret
rol
jmp
inc
out
or
popa
leave
mov
ret
mov
and
popa
sub
or
jnp
sbb
test
xchg
fidiv
outs
sbb
aas
xchg
cli
pop
sub
out
mov
add
mov
sub
mov
xor
dec
stos
clc
cmp
(bad)
pop
or
lahf
cdq
inc
pop
or
jb
lds
sub
ret
xor
mov
push
jns
push
mov
cld
out
enterw
rcr
rcr
stos
mov
popa
sbb
sub
dec
jp
dec
or
xlat
jno
adc
and
pushf
jbe
loopne
mov
ins
pop
rcl
out
mov
ins
push
add
pushf
(bad)
cmp
enter
adc
inc
xchg
xchg
xor
aaa
sahf
rol
std
sbb
imul
push
mov
fstp
mov
(bad)
(bad)
push
sar
cmps
ror
popf
jge
imul
sti
movs
mov
adc
pop
and
(bad)
push
jg
inc
pop
outs
jb
xlat
sti
xchg
aas
add
sub
and
push
fwait
movs
div
mov
or
or
fstp
dec
xlat
push
pop
mov
pop
(bad)
mov
(bad)
or
scas
mov
fcmovnbe
fbld
xchg
iret
(bad)
stos
in
in
js
hlt
stc
sub
push
loope
neg
push
adc
(bad)
stos
ja
sbb
icebp
mov
mov
loopne
inc
push
ins
leave
imul
xchg
mov
mov
daa
aad
mov
sbb
mov
nop
sub
cmc
and
mov
and
fidivr
ds
popa
leave
in
push
push
push
aaa
jmp
jmp
mov
sub
cmps
sbb
mov
out
fmul
pop
jg
retf
test
fwait
shr
sub
sar
pop
test
out
mov
pop
mov
xor
inc
fs
(bad)
sbb
in
cdq
loop
psubb
inc
dec
jae
cmp
cmps
pop
ror
loopne
or
jb
cmp
pop
cmps
std
sub
push
unpcklps
cmp
inc
xor
dec
inc
dec
or
adc
mov
(bad)
jnp
(bad)
add
add
dec
add
mov
and
es
jnp
add
cmps
pop
cdq
xor
aaa
test
xchg
inc
mov
push
cli
xchg
sahf
adc
movs
xor
add
loop
(bad)
sbb
xchg
iret
push
(bad)
ret
inc
scas
push
sub
and
outs
daa
jecxz
sbb
inc
jge
push
cmp
adc
loop
sahf
sti
outs
(bad)
cmp
mov
jp
jmp
lea
mov
or
pop
(bad)
je
les
es
shr
mov
mov
mov
xchg
test
enter
mov
mov
push
and
jbe
mov
push
or
sub
xchg
jno
loope
push
inc
cmps
daa
aad
xchg
inc
mov
sub
sbb
cs
inc
adc
jle
or
cmp
pop
jp
jnp
xor
xchg
jl
das
jne
sbb
dec
xor
xchg
dec
xor
not
jg
hlt
(bad)
mov
or
pusha
retf
adc
cmp
fcomp
test
mov
mov
(bad)
mov
aas
mov
xchg
rep
jns
cmps
add
pop
scas
or
ins
mov
mov
jmp
stos
mov
ret
fs
dec
js
test
rcr
repnz
dec
push
sahf
les
mov
mov
outs
inc
jne
sub
xchg
ror
repnz
add
shl
bnd
dec
movs
(bad)
pop
mov
or
in
std
ins
mul
ss
jp
xlat
sub
or
or
pop
es
add
in
jae
imul
dec
mov
out
scas
aam
xchg
dec
xor
jo
mov
shr
or
sub
mov
hlt
dec
mov
sub
mov
jl
loopne
rcl
and
and
dec
data16
pop
bound
sub
add
stos
mov
stos
pop
(bad)
ds
jl
xchg
xchg
or
es
ins
es
add
cs
push
jno
push
cs
push
cmp
inc
lds
rol
dec
add
retf
sub
or
mov
cmp
mov
repnz
call
mov
shr
cmp
mov
fiadd
test
mov
daa
(bad)
out
add
jp
in
cli
sbb
jl
in
lahf
loope
fcomp
xchg
ror
stos
leave
pop
dec
mov
or
jecxz
dec
call
xchg
xchg
push
pop
sub
jl
rol
jle
mov
xor
sub
fs
dec
dec
aaa
imul
adc
aas
xor
pop
pusha
xor
or
(bad)
and
push
add
xchg
loope
jle
stos
and
pop
mov
adc
jne
jge
test
(bad)
and
(bad)
hlt
mov
mov
lods
xor
arpl
xchg
dec
in
lds
jecxz
aam
ret
mov
cmps
vsqrtps
jmp
jo
fcom
mov
mov
outs
(bad)
xchg
adc
xchg
mov
retf
push
rcr
add
mov
lods
fsubrp
add
add
lahf
xchg
hlt
in
lock
loopne
jge
pop
das
cli
ds
cli
inc
icebp
mov
loope
sti
and
or
cmp
mov
dec
mov
scas
ins
mov
pushf
fst
xchg
out
into
or
fs
icebp
enter
xor
scas
xlat
leave
mov
adc
cli
jns
xchg
sub
cmp
push
sbb
mov
ss
or
outs
mov
jp
adc
test
jmp
inc
nop
mov
aas
movs
mov
adc
and
inc
mov
dec
adc
adc
(bad)
jl
repz
mov
cld
xor
cli
imul
lock
jg
clc
out
hlt
clc
xor
gs
jmp
cmp
dec
cmp
mov
mov
pop
cmp
mov
cmp
jno
xchg
pop
add
xchg
mov
sar
mul
loopne
scas
add
ja
pop
jae
mov
ja
add
add
gs
data16
cdq
inc
mov
adc
mov
mov
mov
test
sbb
inc
hlt
lods
xchg
inc
mov
pop
adc
cmps
shr
and
scas
xchg
inc
cmp
sahf
or
jecxz
cdq
cmp
popf
xlat
mov
test
mov
shr
adc
jle
in
push
sub
cld
pop
test
aas
pop
fwait
outs
jmp
sbb
aam
dec
pop
adc
mov
call
jmp
scas
ds
faddp
sahf
pusha
lahf
cmc
pop
enter
icebp
test
mov
out
(bad)
push
pushf
mov
scas
aas
imul
mov
mov
adc
popa
clc
adc
mov
push
and
cli
xor
adc
movs
xchg
ins
mov
(bad)
in
cmp
dec
mov
mov
popa
adc
daa
leave
cmp
sbb
and
arpl
mov
outs
(bad)
fwait
jle
jns
mov
sbb
mov
retf
dec
push
xchg
lock
add
scas
push
bound
dec
sahf
das
out
pushf
dec
movhps
adc
in
pop
fisttp
adc
dec
xchg
ficom
int3
sub
push
xor
pop
test
scas
rcl
out
shr
xchg
or
dec
jo
enter
mov
ins
push
(bad)
(bad)
cmp
add
or
mov
(bad)
jbe
inc
aad
xor
cwde
cmps
aad
in
lahf
mov
sbb
ins
repnz
loopne
out
loop
data16
fs
int
push
int3
cmp
push
jmp
cmp
out
and
das
ins
add
xchg
jno
push
rol
pop
mov
jne
cmp
xchg
icebp
jno
inc
sbb
inc
push
sub
inc
adc
out
inc
mov
inc
fld
popa
inc
sahf
outs
xchg
adc
push
and
mov
mov
pusha
cmp
ja
pop
inc
cmps
stos
jne
ror
nop
cld
dec
cmp
test
jp
inc
iret
pop
into
bound
jl
jp
xchg
mov
xchg
xchg
ret
jns
fcom
inc
jae
cmc
hlt
outs
out
mov
mov
lods
push
mov
cwde
scas
jge
dec
into
inc
fist
cmp
jg
mov
fsub
adc
std
mov
inc
popa
lods
adc
retf
adc
cmps
das
cmp
jno
stos
jae
pushf
or
mov
outs
mov
jge
dec
movs
pusha
scas
shr
(bad)
ficom
cs
xchg
inc
add
push
loope
xchg
es
inc
ins
mov
icebp
repz
ins
cmc
sbb
xchg
leave
ins
push
jle
mov
mov
dec
loope
lods
sbb
and
ret
ins
pusha
push
popf
cmp
push
mov
cmp
arpl
in
(bad)
fsubr
std
mov
jp
fbld
fnstenv
and
push
xchg
mov
fbld
(bad)
pop
test
push
or
push
retf
hlt
or
ins
xlat
loope
into
aas
xor
pop
mov
inc
shl
sbb
xchg
pusha
jg
sbb
sbb
fcmovbe
inc
retf
retf
adc
fsub
cli
popf
jl
xor
fs
ret
lds
xchg
mov
inc
cmp
lea
and
and
shl
xchg
imul
in
test
dec
jg
scas
lods
push
adc
sub
repnz
lods
jle
(bad)
mov
aad
sbb
xchg
js
pop
cmp
and
jmp
xchg
push
cmps
rcl
pushf
cmp
test
jp
enter
jo
xor
(bad)
lock
cmp
and
inc
pop
jno
push
pop
call
les
les
or
aaa
push
sbb
sub
adc
jno
sub
stos
int3
pusha
cld
mov
jg
adc
or
out
pop
mov
jb
out
out
jg
ficomp
nop
xchg
xchg
sbb
ins
jne
pop
jge
adc
and
or
fist
dec
xor
push
mov
and
jne
movs
out
push
mov
sar
adc
push
fdivr
fiadd
sub
cdq
cmps
cmp
sub
or
jne
neg
jbe
call
inc
mov
call
inc
mov
mov
xchg
lock
lods
(bad)
inc
in
dec
push
mov
xor
ins
ja
push
jge
cwde
cwde
mov
push
mov
outs
mov
lahf
nop
mov
lock
fucomi
jae
rcr
mov
push
push
cmp
je
shl
xor
repz
adc
mov
mov
jo
jb
and
(bad)
mov
cdq
nop
sbb
pop
jg
adc
test
or
out
and
and
mov
call
jl
pop
in
xchg
adc
jo
or
lock
inc
inc
in
push
lock
not
mov
jo
mov
fst
or
add
pop
inc
js
out
and
mov
cwde
mov
pusha
adc
lea
adc
push
rol
xchg
movs
sbb
rol
pop
in
outs
movs
mov
es
xor
stos
cdq
mov
jae
popa
cmp
repz
movs
jae
jno
div
fstp
outs
paddsb
and
std
lea
jmp
hlt
ss
out
inc
and
stc
dec
aad
push
stos
push
inc
sbb
and
dec
or
adc
aaa
repz
inc
aas
mov
jecxz
sbb
jmp
cmc
dec
sub
mov
or
out
lahf
sar
sub
loop
sub
sub
out
repz
jle
repz
rcl
adc
scas
sbb
jmp
mov
repz
mov
inc
or
cs
xor
cmp
popf
pop
and
and
ja
mov
jge
imul
int3
cmp
jnp
sbb
ror
push
dec
out
dec
out
test
push
dec
mov
ror
lds
add
hlt
add
adc
mov
jne
test
push
(bad)
ror
mov
std
data16
jmp
bound
inc
int3
pop
jmp
repnz
pop
add
and
stos
or
pop
mov
jne
mov
push
adc
jae
test
add
pop
cmp
arpl
jno
jns
in
retf
repnz
and
adc
dec
xchg
inc
fst
imul
movs
jecxz
fmul
pusha
mov
inc
inc
(bad)
int
xor
stc
mov
inc
cmp
in
(bad)
call
cmps
add
jle
lods
add
and
jmp
(bad)
fcom
dec
cmp
mov
adc
inc
fcom
pop
dec
imul
mov
add
mov
fwait
rcr
loop
push
popa
push
mov
fwait
jbe
push
(bad)
jns
mov
int3
and
push
je
sbb
scas
cld
out
cmp
scas
inc
loope
inc
mov
inc
xchg
push
(bad)
push
inc
sub
outs
dec
clc
sub
cmp
jg
xchg
into
xor
mov
adc
lds
cdq
mov
sbb
add
retf
and
movs
ror
ret
scas
loope
push
call
aaa
lock
and
push
nop
push
cmc
pusha
pop
jmp
or
sub
repz
out
ins
gs
cmp
aaa
cli
inc
pusha
movs
xor
add
push
clc
sbb
gs
ror
or
ss
or
das
cmps
mov
add
xlat
jmp
mov
scas
aad
popa
int3
and
cdq
jno
into
iretw
push
sbb
push
push
jno
pop
loope
dec
push
cs
call
popa
add
inc
cmp
push
fstp
ins
add
test
ins
pop
popf
mov
leave
mov
std
sbb
xchg
je
jmp
scas
jge
mov
mov
jl
scas
jl
out
icebp
push
aad
je
out
(bad)
or
jae
(bad)
push
leave
mov
out
xchg
mov
mov
cwde
clc
shl
push
dec
data16
(bad)
fisubr
in
std
cld
stos
(bad)
std
inc
fucomip
shr
cmp
jns
in
shl
shr
mov
jl
push
adc
mov
ret
and
pop
and
shr
or
shr
adc
aas
or
sar
jae
xchg
leave
xor
leave
inc
sbb
int3
outs
inc
clc
add
mov
inc
xchg
mov
or
pop
inc
add
jecxz
inc
cld
or
inc
pop
and
stc
cdq
sbb
add
or
jnp
add
xor
scas
mov
fstp
lahf
shl
cmps
fcom
call
out
into
mov
les
mov
jbe
test
and
not
cwde
mov
cs
addr16
mov
jns
mov
outs
iret
pop
inc
mov
dec
imul
fdivr
dec
mov
jno
push
or
mov
sbb
dec
jle
sar
mov
int
mov
in
cld
test
mov
nop
fisttp
lahf
enter
cwde
mov
sbb
inc
repz
mov
jnp
scas
daa
push
xor
mov
in
inc
(bad)
push
in
inc
(bad)
push
movs
or
xchg
mov
cld
xor
ins
pop
xor
and
and
jg
(bad)
sub
xchg
adc
dec
xchg
(bad)
and
cmp
inc
in
enter
dec
or
mov
repnz
push
add
sub
pop
call
in
jmp
in
jmp
inc
xchg
nop
in
fld
pop
stos
cmp
ja
pop
inc
mov
ja
xchg
mov
pop
push
inc
mov
in
shl
jmp
into
scas
inc
mov
inc
das
test
in
inc
pop
or
and
retf
les
mov
mov
cmp
imul
fnstsw
and
and
mov
jo
or
inc
xor
mov
adc
cdq
pop
leave
retf
popf
popa
mov
enter
out
sar
std
mov
shr
xchg
ja
push
sub
jno
adc
jno
dec
neg
pop
add
(bad)
mov
dec
add
out
in
and
inc
or
jle
fimul
je
adc
lock
inc
repz
xchg
pusha
adc
xchg
and
sbb
dec
or
outs
mov
dec
stc
mov
daa
cmp
pop
jae
pop
imul
out
mov
add
bound
cmp
lahf
cwde
fsubr
in
aaa
mov
and
mov
adc
setge
or
jbe
pop
les
(bad)
leave
push
xor
or
mov
jl
pushf
out
enter
in
mov
sbb
enter
and
ffreep
pop
fist
xchg
stos
or
test
rol
pop
ds
jmp
cmps
and
inc
jb
out
xchg
dec
push
(bad)
pop
outs
rcl
cmc
call
sub
xor
push
stc
test
addr16
fmul
outs
test
shl
fsub
dec
and
or
mov
je
dec
sub
push
mov
xchg
push
adc
push
pusha
and
(bad)
jmp
int3
add
aaa
in
int3
inc
int3
or
pop
mov
pop
cdq
xchg
mov
sub
add
pop
das
jb
mov
pop
in
scas
leave
aaa
jp
stos
or
sub
fmul
enter
pop
add
inc
retf
ja
mul
movs
ret
lods
out
adc
inc
sub
fistp
in
fisub
push
jns
adc
xchg
adc
pusha
rcr
jmp
daa
sbb
int3
push
retf
mov
mov
sti
call
and
jle
fistp
xchg
ja
cmps
sbb
jmp
into
jb
or
fbld
sub
gs
jnp
adc
les
arpl
mov
mov
jecxz
lock
std
jbe
and
mov
rcr
jg
mov
or
cld
jnp
fisttp
mov
inc
into
mov
inc
mov
pop
push
add
dec
pop
popf
cmps
add
sbb
fs
(bad)
push
sub
or
sub
dec
add
je
xchg
fisub
into
divps
sar
mov
dec
int3
loopne
mov
cwde
loopne
sti
mov
daa
dec
mov
inc
test
fcomp
jp
jno
dec
inc
test
arpl
bound
mov
dec
(bad)
sub
mov
mov
in
fild
push
sub
inc
out
dec
or
ret
icebp
(bad)
popa
or
sar
xchg
fs
outs
or
xlat
lods
or
xor
das
push
fisttp
retf
mul
xchg
fwait
sbb
les
mov
and
and
pop
aad
xchg
stos
add
mov
inc
or
test
sub
cmp
lods
ret
jmp
add
cs
push
xor
ss
xor
sbb
push
mov
pop
cmp
jo
es
push
(bad)
rol
dec
inc
nop
adc
out
add
cmp
xor
pop
(bad)
and
dec
sub
jge
inc
cdq
mov
push
mov
mov
adc
jmp
jae
push
mov
inc
or
adc
xchg
sub
mov
stos
or
stos
lock
push
fild
inc
retf
cmc
jo
jno
fcomp
xchg
pop
je
(bad)
test
fdecstp
jmp
sti
fisttp
outs
iret
jns
xchg
enter
retf
jmp
sbb
fs
fnstenv
adc
fstp
test
cmp
pop
push
fmul
cs
cld
and
loop
jmp
mov
retf
inc
mov
mov
enter
mov
pop
daa
imul
cmp
fcomip
push
mov
shl
xor
scas
or
in
cld
cmp
pop
fld
rol
mov
xor
ficom
ds
lods
push
shl
dec
(bad)
movs
push
cli
or
daa
ret
add
mov
push
out
inc
sbb
mov
jno
push
popa
xlat
leave
shl
repz
cmp
adc
out
and
ins
xor
mov
sub
mov
cs
popf
push
pop
ins
pop
icebp
inc
(bad)
xchg
cmps
pop
xchg
jae
jno
out
lods
jno
pusha
add
add
add
lea
dec
scas
in
mov
xor
test
arpl
xchg
mov
push
or
and
pop
icebp
inc
ficom
stc
(bad)
jo
cmps
repnz
adc
cmc
xchg
push
in
sahf
or
sbb
dec
push
(bad)
pop
js
push
sub
test
(bad)
neg
(bad)
fisub
add
pushf
test
pop
pop
sub
xor
sub
scas
and
mov
xor
dec
repz
adc
cmp
cli
sbb
sub
xchg
test
sysenter
xchg
push
mov
xor
cmp
add
sbb
and
mov
loopne
movs
and
pusha
pop
sti
jecxz
or
cld
xor
xchg
pop
xchg
loopne
arpl
push
ja
mov
cs
arpl
cmps
out
mov
jle
cwde
or
dec
adc
je
mov
add
sub
sub
lock
adc
clc
adc
sub
dec
sub
and
or
imul
add
cmp
pop
cli
dec
push
push
jne
or
fadd
and
cmp
(bad)
sbb
and
mov
or
adc
xor
xchg
in
lea
and
loopne
pop
pop
addr16
test
inc
dec
ror
popa
sub
test
xchg
mov
or
or
pop
ss
ffreep
sbb
mov
mov
stc
sub
sub
pop
scas
xchg
cmc
ins
test
arpl
push
mov
mov
fistp
jg
test
jbe
hlt
mov
sbb
popa
neg
int
xlat
cmp
neg
pop
into
retf
cwde
mov
sbb
adc
push
fiadd
push
in
movaps
cmp
fsubr
out
mov
dec
out
jge
js
stos
ss
ja
ret
(bad)
push
cmp
test
fisttp
inc
mov
sbb
mov
aad
jo
stos
out
mov
rol
jo
add
rcr
call
xchg
and
push
mov
adc
mov
mov
pop
(bad)
xchg
test
mov
or
cwde
fidiv
xchg
jbe
xchg
mov
pop
cwde
call
sub
sbb
dec
data16
aas
cmp
push
sahf
test
pop
repnz
push
xlat
xchg
rol
mov
mov
in
aaa
add
add
cmps
jae
sub
cmps
or
pop
sbb
clc
ror
jmp
mov
dec
scas
push
xchg
(bad)
pop
mov
mov
mov
xchg
jne
xchg
push
jno
fcmovb
xor
jecxz
inc
mov
or
xchg
mov
aad
pop
imul
aam
enter
popf
outs
movs
ins
cli
test
mov
test
repz
pop
stc
add
imul
jmp
(bad)
ficomp
mov
shl
out
scas
xor
mov
xchg
aaa
xchg
popf
fdivr
rcr
arpl
lods
das
scas
cld
pop
xchg
xor
jecxz
inc
ror
jne
(bad)
xchg
(bad)
les
add
mov
lods
mov
in
loope
scas
mov
iret
mov
jmp
popf
sar
aaa
or
pop
mov
adc
mov
popa
push
and
in
push
pop
jmp
fidiv
mov
shl
xor
add
sbb
popf
xchg
mov
repnz
test
cmp
(bad)
xchg
push
jns
adc
jnp
adc
cmps
add
adc
cmp
(bad)
mov
loopne
dec
pop
cmp
sbb
sbb
neg
loop
jg
dec
mov
lea
xor
xchg
mov
dec
dec
cld
aad
xchg
fadd
hlt
push
and
idiv
les
outs
push
loop
push
loop
gs
xchg
jg
les
xchg
js
xchg
clc
mov
std
mov
sbb
out
pop
rcr
mov
rcr
cmc
mov
mov
icebp
add
(bad)
aad
sub
dec
fld
loope
aad
(bad)
or
jae
xor
outs
mov
pop
add
cwde
sbb
dec
inc
lds
fiadd
push
daa
cmps
xor
jle
aad
jb
or
xchg
and
xchg
dec
pop
xchg
imul
repnz
js
cs
ret
sar
int3
into
mov
pushf
adc
inc
loop
cmp
into
call
aas
out
out
je
and
ds
mov
imul
loopne
pop
data16
mov
out
jmp
(bad)
and
cwde
lahf
cmps
mov
jns
sti
movs
push
fisttp
ja
xor
xor
dec
sar
mov
imul
iret
or
push
or
mov
popf
and
xchg
sub
xchg
bound
repz
xchg
lahf
ins
lahf
xor
mov
scas
adc
sbb
push
sbb
dec
sub
xchg
adc
rcl
xor
adc
mov
stos
lahf
pushf
sub
cdq
and
mov
int
adc
inc
cmp
jge
and
push
aas
loope
pop
mov
ss
cli
jno
push
mov
lahf
push
inc
es
(bad)
dec
sub
mov
je
fisubr
sub
(bad)
and
data16
sbb
cmp
push
mov
std
aad
adc
push
mov
lods
fisubr
mov
and
mov
push
sti
add
mov
xor
ins
and
xor
cli
pop
aam
adc
movs
sub
jno
cli
rcr
mov
cmp
test
xor
jmp
in
jno
sub
sub
and
cli
push
test
dec
call
push
sbb
stc
pusha
shl
jp
mov
pusha
sbb
test
dec
cmps
cmp
imul
adc
jbe
(bad)
out
push
cmps
xchg
jbe
cmp
test
scas
push
into
mov
pop
xor
mov
xchg
sub
pop
and
scas
test
sub
cmc
mov
xchg
push
dec
jb
adc
xchg
mov
pop
jle
(bad)
lock
jns
jnp
xor
push
enter
dec
push
jmp
mov
add
jnp
(bad)
nop
lea
sub
jns
inc
test
fcmovnb
cmp
sub
sbb
repz
inc
out
or
(bad)
inc
jne
imul
popa
fbld
ins
cmp
push
mov
xchg
in
pop
repnz
repnz
mov
gs
mov
(bad)
jmp
call
push
push
push
cmp
stos
xchg
sbb
sbb
push
ds
sahf
(bad)
push
daa
dec
push
aad
pop
inc
retf
sbb
repz
mov
in
(bad)
mov
xchg
ins
mov
mov
pop
test
ds
mov
cmps
xlat
pop
hlt
cmps
inc
jbe
paddb
pop
push
pop
inc
dec
add
or
repnz
xchg
movs
mov
(bad)
sub
mov
inc
dec
sub
add
stos
bound
js
mov
mov
int
xor
pop
hlt
mov
push
xlat
mov
pop
stos
cmp
xor
(bad)
outs
fdivrp
and
jns
mov
and
mov
mov
shr
push
and
dec
cmp
retf
outs
adc
xchg
pop
or
std
sahf
iret
inc
xor
into
imul
sub
and
into
adc
push
sub
mov
xchg
pop
adc
jo
xor
ja
test
and
ret
mov
xchg
aad
mov
jae
xchg
dec
xor
mov
sub
repz
or
test
jb
das
mov
push
lods
jo
mov
xor
in
inc
retf
int
scas
sahf
jnp
cmp
loopne
pop
push
test
sahf
mov
jmp
cmp
loopne
out
nop
mov
dec
int3
out
sub
jl
xchg
sahf
aas
jge
and
aaa
mov
shl
shr
or
repz
dec
jmp
add
stc
mov
adc
jae
dec
int3
pushf
rcr
and
in
xchg
mov
or
xor
cmp
call
aam
dec
mov
add
arpl
enter
add
xchg
and
xor
xchg
dec
dec
fst
test
test
shl
add
xchg
ret
xchg
sbb
imul
mov
inc
les
call
adc
jmp
push
pop
pop
daa
jnp
imul
mov
push
xchg
xchg
(bad)
lods
daa
pop
stc
jno
mov
cmp
sbb
add
std
mov
sub
mov
pop
push
cld
inc
gs
and
movs
or
dec
sub
loopne
and
pop
and
push
mov
adc
dec
inc
cld
inc
ins
pop
jle
fimul
inc
clc
das
stos
(bad)
loopne
scas
loope
test
repz
cmp
or
cmp
leave
shl
dec
push
in
ins
clc
xor
jmp
popf
cwde
jnp
mov
popa
hlt
add
inc
stos
fisub
mov
xchg
mov
sti
add
xchg
out
ins
sbb
and
push
fnsavew
lods
sub
daa
or
ror
push
or
xor
push
outs
xchg
xchg
test
jnp
mov
pop
ret
lock
jb
test
xchg
jbe
aaa
rcl
ins
fcmovb
cmp
fsub
and
mov
sub
jg
pop
test
popf
inc
cmp
pop
iret
fcomi
gs
ret
xor
ret
pop
sbb
mov
sbb
add
fisubr
inc
mov
pop
shl
adc
mov
or
sbb
ret
popf
fdiv
cmp
push
test
push
mov
mov
add
dec
cmc
mov
and
call
push
ds
or
lahf
mov
fs
adc
int3
stc
test
cdq
es
sbb
inc
xor
repnz
sub
call
rol
push
xlat
jno
imul
mov
adc
inc
adc
adc
out
cmc
mov
mov
fimul
sub
sar
mov
inc
dec
xchg
fidivr
es
call
and
jae
or
ficomp
cmovl
adc
jb
(bad)
jmp
jmp
data16
sub
in
xchg
adc
or
stos
mov
mov
js
dec
lds
rcl
or
fstp
bound
cmps
xor
retf
test
xor
jbe
mov
dec
xchg
jecxz
inc
mov
movs
jmp
mov
mov
aad
dec
ror
add
dec
mov
arpl
bound
fidivr
jbe
mov
dec
daa
push
xchg
loop
inc
push
mov
inc
jp
je
pop
xor
cmp
in
cmc
call
sub
loope
cmps
fadd
les
inc
and
call
shl
inc
movs
outs
loope
mov
jo
add
test
out
mov
adc
test
das
adc
jb
repz
cwde
les
pop
cld
sbb
xchg
pop
add
sbb
(bad)
fdivrp
xor
and
add
jmp
aas
sahf
popf
adc
xchg
sub
movs
test
int
jl
mov
stos
ins
push
aaa
retf
(bad)
push
jl
sub
popa
xchg
fdivr
jno
sbb
inc
dec
ret
test
lods
push
and
mov
inc
or
test
add
sub
adc
inc
xor
test
fcom
pop
iret
or
add
pop
sbb
cdq
lea
cwde
push
xor
ds
rcr
push
aad
mov
in
xchg
into
xchg
inc
repnz
popf
mov
mov
pop
pushf
outs
xchg
leave
call
bound
(bad)
mov
inc
xor
inc
dec
ret
sub
les
dec
data16
sub
xchg
push
popf
dec
shl
mov
mov
mov
(bad)
mov
lea
jmp
call
xor
jno
mov
(bad)
mov
nop
sub
bound
es
aad
fs
cmp
push
mov
jg
inc
movmskps
add
dec
jae
lods
jg
jp
fisttp
mov
and
test
dec
(bad)
lods
or
cmc
mov
scas
pushf
(bad)
dec
sub
mov
outs
mov
sub
mov
add
popf
das
sub
mov
arpl
fld
jb
retf
(bad)
xchg
pop
pop
and
jb
jmp
(bad)
js
(bad)
test
xchg
arpl
lods
mov
in
sti
call
mov
xor
xchg
inc
sahf
dec
cmp
xchg
addr16
jmp
outs
mov
xor
cmc
stos
and
fwait
cmp
push
(bad)
jmp
pushf
xor
ror
cmp
call
push
je
cmp
mov
xor
and
xor
push
int
mov
push
jbe
sar
dec
das
popa
je
or
mov
stos
pop
iret
jns
out
std
in
push
outs
icebp
cwde
push
aaa
mov
pusha
int
arpl
mov
daa
and
hlt
and
ja
test
and
and
stos
cmps
sub
(bad)
inc
pop
mov
xchg
test
adc
fs
push
mov
jmp
arpl
mov
cmp
rep
lods
jmp
xor
fwait
pop
pop
lock
(bad)
loop
and
push
inc
jae
es
fld
pop
push
cmp
fidiv
sub
cmp
sbb
jmp
ss
or
shl
rcl
sub
lea
(bad)
mov
js
sbb
ret
sbb
mov
or
or
cmps
pop
pop
push
or
mov
imul
or
fld
dec
pop
call
xor
ins
cld
add
call
movs
call
mov
icebp
inc
and
(bad)
ret
jge
xor
shl
ret
mov
lods
xor
and
or
loop
sub
push
inc
dec
and
sti
inc
cdq
loope
test
sar
xchg
jae
aam
adc
jns
cmp
pushf
imul
icebp
and
jo
js
mov
cmp
xchg
inc
or
lock
jbe
xchg
aas
or
je
les
int3
cmp
cmp
sbb
mov
jae
ficom
jp
outs
test
sub
in
or
xchg
je
adc
xor
and
jecxz
lea
add
xchg
pop
pop
loop
jmp
push
in
shl
xor
std
cmps
fcom
mov
mov
pop
sbb
retf
or
mov
stc
shl
cmp
rol
inc
daa
add
xchg
loope
mov
mov
nop
es
into
jp
sbb
jb
xchg
xor
jnp
movs
xchg
aas
adc
hlt
jecxz
loop
cmp
jmp
aaa
mov
sbb
pushf
neg
mov
mov
inc
mov
shl
dec
rcr
push
dec
cdq
xor
push
clc
dec
mov
sub
or
xor
add
leave
lahf
loope
loope
mov
dec
mov
loop
int3
retf
inc
cmp
cwde
es
out
cmp
mov
jmp
lods
add
in
retf
loop
inc
inc
scas
out
xchg
cdq
dec
mov
xchg
movs
imul
xor
out
inc
xor
jmp
mov
xchg
repnz
repz
dec
xchg
dec
cmp
push
loop
mov
or
inc
push
push
aaa
xchg
cld
cmp
or
xor
push
xor
or
xchg
push
xor
hlt
div
sbb
push
cmps
mov
cmp
or
loop
dec
or
and
scas
push
dec
or
ror
cmp
sahf
mov
sar
das
xchg
cmp
aam
in
mov
inc
pop
into
and
sar
mov
sub
push
sbb
mov
jmp
jnp
jmp
fnstsw
inc
mov
(bad)
jns
adc
and
or
daa
inc
jge
ret
push
cwde
sub
cmp
out
jnp
retf
inc
pusha
cld
cmc
adc
xchg
xlat
push
jbe
mov
mov
xchg
push
mov
mov
dec
mov
xchg
test
movs
adc
and
rcr
xlat
rcpps
xlat
xor
mov
mov
outs
daa
inc
add
xlat
push
sbb
push
dec
test
mov
mov
outs
ret
out
ret
test
shr
mov
sub
add
lea
mov
(bad)
not
div
ror
inc
lods
clc
xor
push
imul
bound
lock
add
or
pop
inc
pop
ins
dec
mov
mov
repz
mov
adc
cld
das
or
push
shr
mov
inc
rol
ins
or
pop
and
imul
ss
sbb
pop
cmp
mov
scas
mov
(bad)
addr16
ss
fstp
sub
ins
or
pop
aam
movs
test
and
sbb
mov
rcr
add
ret
loopne
rcl
or
sub
add
mov
push
inc
jo
es
hlt
mov
out
inc
cmp
push
or
pop
ds
into
jmp
sbb
and
in
push
pop
mov
mov
xor
(bad)
sub
pusha
loopne
(bad)
jb
or
mov
scas
jmp
push
mov
shl
leave
movs
scas
mov
movs
lahf
push
(bad)
aas
xchg
push
jle
jmp
call
scas
inc
jge
addr16
cmps
(bad)
jbe
test
sbb
idiv
shl
jg
and
out
ficom
int3
repnz
mov
jmp
scas
adc
popa
add
and
adc
popf
push
xchg
mov
fist
jne
test
xor
inc
cmp
mov
fcmovbe
add
fmulp
xchg
popa
in
and
imul
adc
push
sahf
not
pop
out
pop
cmps
sahf
in
lea
cmp
mov
rol
loopne
cmp
mov
movs
ror
mov
retf
mov
inc
ds
outs
retf
mov
out
jge
jbe
scas
and
jne
adc
xchg
push
jne
or
call
jmp
push
cmp
pop
xchg
imul
jno
test
out
lahf
push
mov
fadd
inc
jecxz
mov
xchg
adc
stos
call
mov
jle
push
cmp
dec
sbb
pusha
add
or
mov
jnp
out
xor
cmc
mov
inc
dec
fdivr
mov
xchg
or
push
xchg
or
mov
or
push
jle
sub
retf
push
pop
cmp
pop
cwde
or
cli
mov
mov
or
push
addr16
inc
pop
xchg
pop
sbb
pop
and
into
pop
popf
das
adc
inc
xchg
jnp
adc
fdivr
and
inc
in
lods
enter
inc
mov
std
mov
imul
and
inc
cwde
jle
adc
loope
imul
dec
lds
mov
sub
sub
xchg
fldcw
mov
lods
fidivr
ds
inc
movs
popf
add
(bad)
adc
aaa
inc
js
jb
cmp
jmp
sub
lods
leave
ds
push
adc
fcmovnbe
and
or
push
stos
ret
scas
loop
xchg
sbb
jbe
addr16
test
mov
dec
cdq
scas
shl
xor
cmps
(bad)
in
adc
aad
cmp
hlt
xor
lods
stos
xor
push
push
or
test
mov
dec
aad
jl
inc
add
enter
(bad)
stc
mov
je
aad
inc
dec
sbb
ret
fisttp
retf
jg
xchg
imul
xor
ret
mov
jmp
add
mov
push
dec
push
lods
jmp
xor
shld
retf
dec
rcr
sbb
sub
in
xchg
mov
push
xchg
out
inc
test
js
jb
clc
ret
jl
shr
fst
loopne
popa
xor
test
dec
aaa
mov
inc
shl
lods
shl
loope
xor
fs
inc
retf
sub
sbb
sbb
aaa
xor
and
xchg
ds
pop
test
mov
mov
cmp
(bad)
cmps
or
lahf
jo
(bad)
cmps
scas
in
daa
jae
test
push
call
cmp
ss
jmp
sar
ret
push
jo
mov
(bad)
fiadd
popf
jle
inc
bound
dec
mov
cs
inc
add
stos
mov
xor
sti
jne
call
or
cdq
gs
xlat
adc
in
push
aam
ins
xchg
sub
push
xchg
lock
push
iret
jne
repz
cmps
mov
bound
mov
cmp
xchg
pop
(bad)
in
inc
fisub
mov
pop
cwde
mov
cmp
in
pop
jmp
cmp
stos
sbb
inc
lods
es
push
push
jbe
fs
mov
mov
cmp
mov
loope
add
xlat
and
jno
jmp
jnp
sbb
mov
ficomp
mov
or
leave
adc
adc
pop
xchg
mov
jge
sbb
dec
or
lock
add
lds
add
or
xchg
add
call
dec
add
adc
call
js
mov
dec
fstp
in
xor
int
xchg
and
mov
sbb
adc
dec
lock
ror
and
(bad)
jae
xchg
inc
mov
sbb
cmp
xchg
sub
not
pop
cmps
repnz
pusha
adc
jmp
jecxz
or
dec
sti
cwde
and
dec
push
mov
mov
jae
js
push
arpl
inc
imul
lods
sub
dec
(bad)
and
sbb
or
popf
mov
or
popf
inc
loop
cmp
cmps
test
stos
ret
add
movs
pop
adc
xchg
mov
test
jg
ss
rol
int
sbb
dec
mov
adc
xchg
popf
in
inc
adc
adc
push
lea
bswap
dec
int
out
mov
jo
pop
cmps
std
scas
(bad)
stos
pusha
sbb
and
dec
jns
(bad)
or
fs
in
and
xchg
data16
mov
dec
adc
xchg
lea
jns
ins
fs
aam
in
mov
aam
mov
adc
inc
mov
pop
xor
mov
dec
mov
cmp
xlat
add
in
rcr
mov
or
inc
jmp
mov
hlt
pop
pop
cwde
jle
repnz
in
fdiv
ret
mov
js
xor
adc
dec
jl
out
fcmovnb
jge
mov
popa
cmps
dec
xor
xchg
(bad)
inc
aad
test
xchg
cmp
inc
and
push
pop
hlt
in
push
mov
or
js
xchg
movs
mov
xor
or
pop
movs
lahf
outs
loop
retf
fcmovu
dec
pop
out
xor
(bad)
ins
int
dec
sub
or
in
fadd
call
jno
jnp
cmc
leave
mov
xchg
inc
fs
lods
sbb
cmp
push
scas
adc
pop
mov
sbb
retf
xor
jmp
std
dec
pop
js
aam
lock
and
xlat
in
aam
in
add
push
icebp
push
jmp
xchg
jp
mov
retf
mov
data16
mov
(bad)
jmp
push
jle
and
les
mov
cmp
ds
cdq
dec
not
sub
ret
xchg
(bad)
jge
out
add
daa
nop
imul
sub
call
movs
mov
lods
inc
xor
dec
adc
sub
add
dec
xor
in
mov
lahf
sar
cmps
sbb
imul
push
fisubr
and
push
imul
test
cs
neg
cmp
loopne
push
push
cmp
hlt
js
xchg
or
aam
jmp
sbb
mov
xchg
and
xchg
ins
outs
ret
dec
push
das
fisub
mov
inc
pop
jmp
in
ins
hlt
addr16
call
mov
(bad)
in
call
or
sub
add
jno
mov
or
or
jmp
jl
call
add
call
rcl
nop
jle
sub
enter
sti
pop
pusha
sbb
data16
mov
js
iret
mov
mov
jmp
and
bound
test
adc
push
rcr
hlt
pop
addr16
dec
xchg
pop
sub
iret
jne
loop
and
popf
bound
in
loopne
xchg
into
ficomp
movs
aam
xchg
mov
jno
(bad)
mov
push
in
fst
ds
or
mov
mul
pop
or
fbld
xor
div
fstp
jg
int3
pusha
aas
dec
push
mov
mul
inc
mov
push
cmp
xchg
push
test
ret
xchg
neg
in
cmp
out
(bad)
loop
fisubr
push
in
cmp
xchg
daa
mov
or
aad
movs
mov
adc
cmp
xchg
and
jns
push
xchg
mov
push
clc
popa
aam
pusha
mov
in
test
(bad)
scas
inc
call
or
mov
popa
pop
xchg
lods
stos
dec
mov
das
sbb
popa
lahf
dec
loope
xor
mov
psubq
call
fldenv
aaa
les
inc
jge
(bad)
call
(bad)
and
shl
repnz
jne
pop
inc
or
and
push
aas
push
popa
lea
and
dec
out
add
cmc
fnstsw
test
mov
adc
in
sub
xor
add
clc
loopne
mov
xor
das
mov
pop
das
sub
sub
pusha
loope
fwait
fwait
in
cmp
push
sub
in
jbe
or
call
jge
cmp
inc
ins
aam
aas
mov
cmp
inc
aas
stos
mov
aam
lods
and
inc
xchg
push
push
jae
lock
(bad)
aad
adc
dec
jns
sbb
inc
and
aad
adc
int3
push
fsub
rol
jmp
mov
call
jl
aam
jmp
popf
push
adc
ret
ss
push
mov
sub
lods
dec
push
js
or
xchg
hlt
mov
xchg
adc
xchg
cmps
push
imul
test
xchg
loope
and
and
scas
cmc
xor
aas
adc
rcr
fbld
call
lods
cmp
adc
aad
cmp
scas
nop
sub
mov
arpl
jnp
outs
inc
clc
imul
xor
or
lahf
xchg
loope
sbb
sub
dec
sub
fcomp
test
retf
sbb
xchg
hlt
pop
sbb
aad
cli
mov
jns
ret
daa
adc
ds
pusha
stos
mov
or
fwait
mov
or
push
jns
call
sbb
mov
test
retf
sbb
add
cmc
add
(bad)
cmp
in
add
cmp
dec
xchg
ins
mov
adc
sub
or
inc
mov
jmp
or
mov
push
scas
test
sbb
mov
jg
ret
mov
pop
mov
and
cmp
or
cli
jbe
stc
xchg
movs
lods
nop
xchg
and
mov
jnp
jmp
pop
(bad)
push
pusha
in
je
(bad)
xchg
xor
out
dec
stc
fs
(bad)
cli
xchg
xor
pop
std
mov
cmp
inc
repnz
aam
loopne
jno
lock
jge
imul
fnstcw
pop
js
sar
test
xchg
jno
cwde
cmp
inc
hlt
xchg
mov
js
sub
fadd
fs
fidivr
cmc
mov
sub
pop
popa
jmp
into
out
adc
inc
jmp
mov
sub
adc
cmp
mov
inc
mov
jl
mov
jne
pop
arpl
loop
jmp
push
dec
imul
push
pop
push
hlt
cmc
outs
adc
rcl
jecxz
fmulp
and
mov
mov
aam
(bad)
retf
mov
aaa
xor
sub
arpl
dec
or
pop
subps
dec
stc
mov
mov
and
jge
push
test
xchg
repnz
in
cmp
call
loop
ret
outs
mov
fcmovbe
jno
and
rcl
mov
inc
sbb
xchg
mov
cld
cmp
scas
fiadd
fbld
dec
(bad)
pop
(bad)
dec
sub
dec
arpl
ret
jle
xchg
mov
leave
cmp
mov
call
and
mov
push
sub
enter
repnz
dec
enter
outs
mov
(bad)
sub
sahf
sar
jne
cmp
retf
cli
or
cmp
js
out
in
gs
pop
mov
adc
vmread
mov
push
cdq
jne
dec
mov
xchg
addr16
ficomp
pop
xchg
aaa
jnp
in
in
enter
int
adc
cli
cmp
hlt
mov
out
rol
retf
das
div
stos
leave
push
setnp
call
aas
in
cmp
and
mov
sti
cmps
imul
cdq
(bad)
sti
std
(bad)
cld
inc
xchg
cmp
ins
loop
enter
mov
cmps
(bad)
out
cli
icebp
or
jg
xor
cmp
mov
dec
and
lahf
mov
or
lahf
inc
js
test
mov
cmp
mov
fld
(bad)
pop
stc
test
add
sbb
jle
sti
in
push
mov
mov
sbb
sbb
jg
cmc
movs
pop
mov
(bad)
daa
mov
fisub
push
inc
add
add
xor
in
dec
lea
and
int3
in
cmp
xchg
add
mov
aaa
adc
into
mov
push
xchg
mov
mov
push
mov
fbld
inc
add
shr
cli
jg
(bad)
not
retf
cdq
add
mulps
push
mov
dec
jmp
or
sahf
xchg
cmp
fnstenv
xor
dec
popa
mov
jo
and
jns
loop
jae
or
stos
mov
ins
jbe
std
int3
and
outs
and
pop
and
pop
jge
pop
jmp
mov
mov
sub
mov
fdivr
enter
clc
ss
jae
jge
xchg
sub
and
jne
loop
popf
lods
mov
jmp
inc
fs
mov
mul
push
cmc
ror
sbb
fs
fisttp
and
fdivr
call
scas
inc
pop
lea
cmc
mov
cwde
and
lock
loop
ret
test
mov
(bad)
xor
and
add
cmp
pop
mov
mov
in
cmp
sbb
bound
mov
mov
into
lahf
or
test
xchg
sub
fcom
push
clc
sub
pop
lahf
dec
fucomp
cmp
les
imul
jno
mov
add
scas
adc
cmp
adc
repz
xchg
jmp
dec
pop
inc
js
(bad)
push
int
repz
popa
(bad)
out
mov
into
xor
xlat
jmp
and
xchg
inc
retf
fbld
mov
pop
push
jle
mov
lods
leave
iret
xor
or
je
pushf
fadd
ss
fsubr
fisub
cmp
arpl
inc
cmp
lahf
xchg
xchg
addr16
fwait
mov
sub
push
(bad)
xlat
mov
adc
mov
dec
sbb
mov
sbb
imul
xor
pop
pop
retf
pop
mov
and
mov
inc
(bad)
call
loope
(bad)
jle
fucomi
inc
clc
std
call
das
ret
daa
ins
or
movs
sub
jmp
adc
dec
cld
inc
xlat
cmc
(bad)
jle
lock
inc
adc
std
out
inc
clc
rcr
lahf
hlt
inc
ins
sbb
repnz
cli
std
mov
and
cwde
enter
or
mov
inc
aas
(bad)
out
xchg
pop
(bad)
ds
inc
inc
sti
adc
(bad)
aaa
pop
mov
sbb
std
test
xor
scas
in
std
es
adc
jnp
push
retf
pop
xadd
cli
pop
and
sbb
sahf
test
imul
loope
btr
mov
cmc
or
jmp
xor
(bad)
jmp
mov
aaa
pop
fwait
(bad)
mov
sar
cs
xchg
shr
in
mov
inc
stc
cwde
cmc
pop
test
test
outs
xchg
xor
inc
push
retf
sub
xchg
loope
test
mov
ror
and
std
in
sbb
push
call
mov
sub
cmp
or
fsubr
ret
and
cmp
ret
cmp
dec
scas
xor
loopne
retf
outs
cmp
add
mov
cdq
and
or
jl
mov
mov
stc
lea
mov
retf
push
cmp
sub
addr16
pop
xchg
xchg
es
mov
or
or
in
lods
je
xchg
mov
(bad)
aas
add
sub
inc
mov
nop
fild
test
xor
sbb
push
dec
xlat
leave
int
lds
or
dec
dec
mov
sub
dec
lods
shl
gs
popf
in
popf
ins
ds
mov
(bad)
jb
idiv
fild
clc
scas
pusha
daa
adc
addr16
or
mov
std
sbb
add
inc
mov
not
mov
or
add
cmp
cmp
bound
jecxz
pop
cmp
inc
fadd
pop
pop
push
xor
mov
push
inc
mov
mov
pushf
clc
adc
out
jge
sub
loope
push
test
es
int
and
mov
adc
and
(bad)
std
or
jnp
adc
dec
loope
cmp
adc
mov
pop
sub
shl
ror
mov
add
sar
ins
std
stos
cli
(bad)
hlt
iret
jmp
hlt
sbb
test
pop
mov
neg
test
adc
cmp
pop
mov
mov
add
push
mov
xchg
test
sub
jecxz
and
jle
push
cmp
jg
push
in
enter
test
inc
jl
in
jnp
jecxz
sbb
out
enter
popa
rcl
mov
fadd
adc
sti
out
fcomi
(bad)
daa
ss
xor
cmovne
cld
xor
lods
and
mov
or
and
or
ss
scas
fs
mov
mov
scas
xchg
hlt
sbb
pop
dec
cdq
and
lods
xchg
shr
sub
div
adc
xor
fmul
push
or
arpl
mov
mov
ret
push
sbb
dec
jnp
inc
out
je
aas
and
cmps
in
bound
sbb
sbb
mov
fidivr
(bad)
int
ss
lods
fist
outs
fidivr
lods
ins
ret
mov
imul
pop
mov
sbb
xchg
ins
fs
aaa
lods
fdiv
in
pop
pop
push
ins
fdiv
lea
jno
imul
shl
(bad)
or
fwait
sahf
pop
mov
retf
(bad)
jne
pop
aaa
ins
ins
pop
mov
(bad)
jmp
sbb
fisub
imul
ins
imul
outs
pop
mov
lahf
push
(bad)
(bad)
outs
jns
jne
jecxz
ss
pop
xlat
mov
fcmovb
mov
fsubr
daa
pop
aaa
outs
pop
fnstcw
fnstsw
lods
sbb
mov
popa
lods
pusha
mov
mov
jb
jecxz
aaa
mov
pop
mov
sbb
lods
(bad)
mov
jne
sti
mov
inc
jns
pop
(bad)
lods
fstp
iret
adc
fcom
pop
fcmovnbe
or
daa
(bad)
ins
pop
pop
jg
lods
cmc
mov
cmp
fistp
dec
lods
(bad)
cmp
fcomp
jbe
pop
pop
aaa
lods
ins
pop
mov
push
pop
mov
hlt
ret
xchg
ins
imul
inc
imul
ins
pop
mov
xlat
mov
div
(bad)
pop
fistp
mov
ret
lahf
jbe
sar
sub
ins
pop
lea
mov
pop
mov
jne
jnp
out
mov
stos
cmp
outs
fcom
mov
xchg
or
mov
js
cdq
imul
imul
cwde
sbb
push
aaa
cmp
shl
mov
jnp
rcl
mov
popa
neg
xlat
fcomp
jns
mov
xor
cmp
fwait
xlat
jecxz
fild
mov
fwait
fwait
call
add
or
scas
pop
mov
sub
test
sti
hlt
add
out
cmps
adc
(bad)
ins
jmp
lds
push
xor
out
mov
repz
pusha
rcr
jno
cli
(bad)
sub
mov
fs
int
imul
sar
push
pop
loop
sbb
repz
shr
adc
lds
and
pop
mov
mov
lods
sbb
out
push
icebp
mov
out
lea
cmp
mov
fidiv
jg
fadd
sbb
mov
imul
lods
outs
fdivr
push
(bad)
lods
pop
vpcomud
add
add
ret
ret
fidiv
into
outs
push
ins
jp
or
or
sub
ins
inc
fwait
out
mov
movs
test
sub
in
pop
out
hlt
test
pop
ret
ins
rol
hlt
xlat
mov
in
sahf
fxch
ret
or
cmc
add
sti
fdivp
not
sbb
add
sbb
sbb
sub
jnp
mov
cwde
jnp
fdivp
mov
or
fcom
sbb
gs
mov
jb
sbb
push
int
addr16
cmp
pop
and
mov
jns
pop
pusha
sar
or
or
lods
pushf
mov
popa
push
pop
mov
jmp
sub
out
pop
cmp
or
call
fstp
aam
xor
jo
mov
test
cmp
aaa
mov
imul
mov
cmps
dec
mov
imul
sbb
adc
scas
sub
mov
loop
sti
mov
ss
outs
push
push
sub
mov
or
mov
pusha
mov
imul
pushf
retf
push
inc
cmp
pop
std
mov
gs
into
ins
lea
ficomp
cwde
mov
mov
outs
fiadd
pop
sbb
cmp
stc
mov
cwde
scas
imul
out
fld
fistp
outs
pop
mov
push
les
xchg
cmp
inc
fs
mul
xchg
lods
fdiv
aaa
mov
mov
jno
jecxz
fldenv
push
call
fisttp
mov
imul
pop
mov
imul
int
mov
fsub
dec
sbb
mov
mov
div
lods
faddp
(bad)
mov
mov
xor
icebp
lea
push
push
scas
sahf
sbb
addr16
ins
sub
rcr
mov
ins
gs
xor
scas
pop
(bad)
cld
sub
cmp
ja
cli
js
fadd
in
pusha
add
cmp
cs
fstp
dec
call
xor
pop
fdivr
lds
ins
shr
pop
add
out
push
sbb
push
stos
xor
mov
add
cwde
sub
fiadd
mov
scas
mov
rcr
cmps
add
push
push
pop
xor
adc
or
sub
das
push
push
adc
test
cdq
fs
and
and
and
sbb
dec
enterw
fs
leave
inc
dec
enter
inc
and
xor
or
jmp
mov
mov
lea
pusha
ror
mov
mov
push
mov
pop
mov
leave
mov
aad
push
es
stc
mov
sti
(bad)
jmp
test
lods
cmp
mov
sub
adc
xchg
jle
and
fwait
pop
fidiv
cmps
scas
cs
xchg
pop
mov
jp
retf
fsubr
push
sub
mov
repnz
or
stos
js
imul
pop
push
loope
mov
mov
ins
jmp
push
mov
add
and
stc
pop
std
std
mov
cmp
jg
pop
jmp
add
or
adc
sbb
cmp
dec
mov
addr16
out
mov
(bad)
shl
push
xlat
push
leave
mov
loopne
jns
mov
test
inc
(bad)
gs
out
inc
inc
add
mov
cmps
(bad)
test
mov
adc
mov
(bad)
or
mov
daa
dec
sub
mov
add
push
lds
cwde
inc
xchg
int
pop
scas
cdq
and
sub
pop
(bad)
stos
sbb
adc
test
dec
and
mov
(bad)
nop
mov
in
mov
cmps
mov
mov
in
retf
mov
push
iret
cwde
xchg
fs
sub
jo
adc
jg
adc
push
leave
sub
shl
mov
sar
mov
jecxz
stos
jne
js
shr
push
mov
xchg
outs
(bad)
repz
pop
jl
daa
sub
into
adc
pop
test
dec
mov
jne
ret
push
adc
mov
push
pop
mov
add
inc
or
inc
pop
ret
push
out
push
cmp
arpl
nop
jge
ret
dec
push
aad
ror
xchg
sub
ss
xor
or
sbb
je
dec
outs
add
fldcw
sub
inc
jno
push
xchg
fcom
dec
or
mov
add
mov
or
xchg
inc
mov
xchg
(bad)
arpl
sbb
mov
les
push
sbb
jo
into
xor
adc
sbb
stc
aad
xchg
pop
mov
test
push
jbe
nop
inc
stc
and
push
sbb
xchg
xchg
push
movs
mov
push
fmul
into
adc
je
mov
and
jae
(bad)
(bad)
jmp
dec
jb
ja
lea
sub
ja
sti
les
mov
inc
lock
mov
sub
stos
xchg
xor
and
scas
mov
xchg
mov
pop
pop
fs
sti
ins
add
sbb
retf
cmps
push
test
mov
out
push
aaa
movs
xchg
add
aam
sbb
aas
push
pop
fdiv
nop
aaa
shr
ja
nop
pop
(bad)
loopne
test
jae
mov
mov
dec
push
cwde
pop
mov
mov
sub
rcr
xchg
cmp
loopne
xchg
mov
mov
leave
in
fcomp
fldenv
daa
mov
mov
mov
scas
push
test
xlat
push
pop
xchg
sbb
loope
push
jmp
aam
xchg
or
loopne
and
int
in
cwde
cwde
int
mov
mov
jge
addr16
cmps
adc
stos
(bad)
xor
jecxz
sbb
shr
mov
inc
jmp
in
dec
test
imul
mov
ins
xor
mov
mov
mov
jmp
sbb
gs
xchg
dec
jp
into
stos
ficomp
ins
cmp
push
sbb
mov
mov
fs
mov
mov
leave
sub
sbb
add
adc
and
dec
xchg
pop
lock
or
ins
push
or
out
jno
push
mov
xlat
outs
sub
lahf
jmp
int3
cdq
mov
mov
aad
hlt
in
push
push
or
push
(bad)
and
pop
xor
mov
add
push
and
ret
pop
mov
add
inc
scas
ja
pop
push
stos
aad
mov
jmp
and
repz
popa
out
and
push
dec
mov
dec
mov
add
or
test
sub
jp
cdq
pushf
push
ss
xchg
pushf
daa
fwait
dec
mov
add
jecxz
sub
inc
cld
lock
adc
jp
inc
inc
mov
ins
enter
jnp
fnsave
dec
mov
inc
rcr
int
ds
fdivr
sbb
int
cmp
(bad)
pop
aam
mov
dec
inc
sar
mov
pop
or
aaa
mov
or
aad
mov
or
jo
int
jb
mov
cmp
mov
or
adc
xlat
inc
std
push
and
inc
ror
cmp
pop
push
and
or
or
pop
sbb
inc
or
sbb
lea
call
std
jbe
push
xchg
or
mov
mov
ss
mov
mov
and
cdq
mov
add
fsubr
push
cli
popa
shr
inc
add
outs
mov
xor
test
and
xchg
add
sbb
jb
xor
loope
mov
es
adc
jmp
mov
push
inc
and
sbb
pushf
idiv
loop
ret
scas
sahf
pop
addr16
pop
es
sbb
xor
dec
sub
cmp
sahf
imul
xor
mov
aas
shl
int
xor
lods
and
pop
push
lods
mov
into
iret
and
hlt
ret
int3
loop
imul
iret
mov
and
call
cmps
das
out
mov
push
push
stos
sbb
hlt
rcl
vpsubw
int3
int3
sbb
scas
das
lahf
push
aaa
out
inc
and
outs
int3
push
jecxz
mov
xor
lods
iret
aaa
jno
jmp
hlt
fwait
cld
pop
fcmovb
das
sbb
lock
add
mov
push
in
sub
jle
mov
nop
mov
sbb
inc
inc
jb
or
mov
int3
clc
out
call
push
xchg
ret
sahf
ds
push
cld
arpl
xor
test
sbb
cmc
loope
popf
nop
ret
xchg
inc
vmread
out
nop
jmp
push
jnp
sub
nop
lds
fadd
pshufw
aas
sub
or
sbb
adc
stos
sub
ss
gs
lock
mov
sbb
inc
lds
test
cmp
cwde
and
jecxz
loopne
inc
add
das
cmps
push
shl
ret
je
or
dec
mov
jno
popa
shl
and
mov
adc
rcr
das
lods
xor
xor
addr16
or
cli
xor
and
jns
inc
scas
adc
ret
repz
jb
bound
mov
jns
push
xor
test
pop
repz
or
gs
mov
lds
lock
retf
pop
pop
add
jp
inc
ja
popa
(bad)
lods
sbb
jmp
les
sub
js
shl
lock
popa
in
ins
cwde
add
mov
(bad)
movs
and
sbb
jp
xor
inc
push
cmc
js
mov
adc
aam
frstor
dec
call
xchg
inc
push
jecxz
repnz
call
hlt
in
jl
jno
add
int3
fisub
ins
in
fnstsw
ja
popa
popa
mov
mov
(bad)
cwde
push
sbb
shr
bound
sbb
mov
sbb
xchg
je
jno
push
pop
lahf
xor
outs
imul
in
test
xor
sahf
in
mov
jmp
xchg
out
dec
aad
mov
fidivr
mov
out
lods
mov
test
cmp
push
lods
(bad)
mov
sub
sar
in
mov
imul
mov
jecxz
out
or
pop
inc
jmp
sub
lds
not
icebp
in
icebp
jbe
pop
fcom
dec
pushf
mov
or
out
sub
out
(bad)
inc
mov
sahf
dec
xchg
xchg
das
mov
cld
xlat
out
aam
dec
push
fcmovnb
mov
jle
fidiv
xor
jb
test
cmp
jb
cmp
fcomp
cwde
lahf
gs
add
ss
dec
es
pushf
imul
iret
and
mov
out
mov
addr16
out
pop
outs
fbld
lahf
xor
(bad)
xor
jl
repnz
dec
arpl
mov
push
retf
cmp
jg
xchg
cmp
mov
cmc
or
and
adc
sbb
das
outs
imul
or
out
mov
hlt
in
add
pop
in
push
inc
mov
shl
fld
mov
cmps
bswap
mov
cli
ror
(bad)
div
ret
dec
aaa
push
xchg
std
xor
or
sbb
daa
cmps
dec
mov
dec
lahf
out
mov
(bad)
pop
xor
jbe
pop
sti
hlt
in
xor
push
repz
cld
cld
sahf
lds
jle
pop
ins
out
(bad)
adc
fistp
push
sub
jge
push
cdq
ins
xor
loopne
or
cld
imul
inc
movs
adc
mov
and
cmp
daa
push
jnp
jno
jg
or
jg
addr16
and
jno
ins
mov
push
fwait
ret
div
ja
je
mov
jmp
ins
sbb
xor
in
mov
retf
fistp
pushf
mov
inc
addr16
rol
sbb
scas
fnsave
push
mov
xchg
aaa
icebp
into
dec
and
mov
add
ret
mov
cdq
fdiv
hlt
(bad)
dec
rcl
fwait
cmps
sub
loope
(bad)
sbb
mov
or
mov
ret
(bad)
icebp
pusha
pusha
pop
ins
or
(bad)
pop
cdq
dec
pop
imul
in
test
xlat
jns
sbb
xor
ds
lahf
push
sar
mov
fdiv
sbb
movs
xor
outs
fnstcw
cmp
aaa
mov
hlt
aam
sbb
mov
cmp
lock
push
pop
pop
fcom
ud2
fnstenv
lock
jmp
sbb
xchg
push
fs
imul
pop
xchg
push
jecxz
stos
daa
fisub
or
mov
pop
out
jp
fisub
ins
in
aaa
mov
popa
rcr
fs
pusha
sbb
cld
xchg
dec
je
stc
push
cmps
xor
cmp
jbe
(bad)
jo
or
retf
ret
dec
dec
jge
jle
xchg
ret
sub
sub
jl
or
lahf
mov
imul
popf
movs
in
jnp
imul
shr
mov
mov
push
das
cdq
not
(bad)
cmp
iret
sub
mov
push
pusha
xor
push
ss
movs
add
repnz
inc
fist
jle
sbb
(bad)
rcr
push
mov
mov
sub
mov
aas
xor
pop
cwde
sbb
push
sar
jp
gs
lds
and
push
out
pusha
push
pop
ss
cld
mov
aaa
(bad)
stos
loopne
or
sub
cmp
push
xchg
jp
daa
icebp
pop
(bad)
jecxz
scas
ss
(bad)
sub
jo
pusha
jns
mov
ss
cmp
aas
mov
loope
inc
mov
in
cmp
mov
or
das
xchg
xchg
and
cs
mov
xor
stos
loope
fild
cld
clc
xor
retf
leave
mov
xlat
stc
mov
das
jg
shl
add
or
inc
xchg
jmp
loopne
and
cmp
in
cmps
bnd
mov
mov
inc
cmps
clc
popa
add
and
cmps
lahf
adc
fistp
push
daa
jg
hlt
xor
mov
sub
dec
out
mov
sbb
xor
in
push
dec
mov
jle
and
xlat
mov
aaa
in
sahf
mov
out
(bad)
mov
adc
cmp
iret
lahf
push
(bad)
jns
aas
in
inc
pusha
add
fcomp
mov
mov
(bad)
adc
ret
popa
inc
clc
fmul
fnsave
js
xor
xchg
repz
enter
adc
sub
sbb
repnz
dec
(bad)
mov
mov
mov
into
cmp
ror
popf
clc
addr16
ficom
inc
jnp
fdiv
fwait
das
jbe
push
mov
sub
xchg
loop
movs
mov
imul
xchg
(bad)
ror
lahf
push
aam
cwde
scas
adc
add
rol
sub
in
pop
push
add
mov
xchg
rol
test
dec
mov
cld
lods
rol
scas
jae
push
mov
cmp
push
nop
not
pop
ins
retf
aas
mov
out
push
nop
(bad)
jmp
mov
mov
mov
adc
(bad)
(bad)
sbb
out
push
mov
inc
pusha
idiv
push
mov
mov
call
sbb
imul
adc
aas
pop
jle
out
mov
dec
jg
and
(bad)
jecxz
mov
sbb
rol
call
jge
enter
mov
fnsave
ins
mov
sub
cs
mov
mov
fcomip
rol
shr
sar
or
sbb
std
aaa
mov
adc
das
or
addr16
retf
test
(bad)
push
xor
ja
or
mov
inc
out
stos
or
sbb
adc
in
nop
js
sub
mov
imul
js
(bad)
aam
jno
xchg
mov
aas
pop
jb
inc
test
mov
jae
cmc
adc
in
cmps
cmp
pop
sbb
mov
(bad)
enter
inc
in
mov
ins
jno
outs
imul
sub
mov
in
adc
fdiv
push
cmp
jge
cmps
ja
jecxz
pop
and
out
(bad)
cld
mov
pop
mov
cmp
out
ins
xor
out
sbb
pop
outs
fiadd
in
lods
not
jle
mov
or
in
fsubrp
(bad)
jle
xchg
cmp
dec
sbb
lock
jno
out
xchg
adc
ss
xor
cmp
cmc
aas
adc
or
dec
lods
lods
out
add
mov
mov
popa
cdq
aaa
xchg
jb
pop
mov
in
je
push
out
adc
in
ja
test
mov
jae
lods
pop
icebp
cmp
iret
add
jge
or
adc
pop
xchg
push
sub
out
ja
cmp
fdiv
cdq
gs
and
sti
sub
fimul
jle
add
xchg
dec
popf
dec
dec
popf
mov
and
push
in
and
pop
add
pop
mov
dec
imul
xor
fnstcw
test
mov
int
pop
fidiv
ins
jle
dec
fcmovnu
ret
or
out
out
push
ins
sahf
nop
retf
inc
stos
jle
es
(bad)
mov
xchg
xor
enter
cmps
dec
(bad)
pop
(bad)
mov
mov
loop
push
xchg
or
movs
sti
(bad)
stc
sahf
idiv
mov
mov
popa
push
jno
es
pop
mov
xchg
cmp
cdq
jb
call
xor
sub
repz
dec
adc
mov
adc
mov
outs
sub
mov
mov
sbb
out
ds
inc
out
(bad)
aam
adc
outs
mov
dec
dec
rol
mov
mov
call
mov
std
ja
adc
sub
pop
sbb
or
imul
mov
popf
jl
push
ins
(bad)
in
je
iret
jecxz
(bad)
test
xchg
sub
(bad)
jo
scas
iret
xor
jo
pop
sub
mov
and
fsub
retf
fstenv
inc
int3
dec
(bad)
(bad)
lods
loope
mov
call
cli
cdq
mov
jg
xchg
pop
test
adc
mov
cdq
add
xchg
or
and
lods
test
inc
mov
add
dec
push
call
jg
xchg
mov
push
jae
sbb
sub
jl
sbb
mov
out
adc
cmc
push
sub
or
loopne
xor
jmp
ins
push
ficom
fnsave
outs
ins
int
sbb
jge
add
xchg
fbld
xor
clc
rcl
push
mov
rcr
ds
shl
lods
or
sar
in
mov
and
or
pop
fstp
cmc
rol
mov
xchg
cmp
adc
in
push
fnstcw
cmp
ret
mov
xor
popf
hlt
call
xchg
out
pop
xor
xchg
jb
xchg
fmul
inc
ins
into
xor
sub
and
call
mov
jns
or
lods
rcr
aas
adc
cdq
fprem1
test
cwde
mov
xor
sbb
ins
jecxz
sub
outs
mov
arpl
pop
inc
mov
or
(bad)
shl
jnp
out
pop
and
mov
(bad)
push
jge
or
data16
sbb
xchg
jmp
lods
loop
je
aas
mov
ret
mov
cmc
ds
loopne
dec
in
(bad)
xor
lds
cli
jl
cmp
mov
test
ins
jo
sbb
push
repnz
pminsw
fucom
mov
lahf
clc
and
outs
stos
inc
lods
adc
inc
dec
push
pushf
call
push
iret
or
pop
cmps
scas
shl
add
ins
jmp
das
add
mov
fistp
mov
cmp
cld
fnstenv
sub
sub
push
mov
or
cdq
xlat
(bad)
(bad)
test
xor
out
dec
(bad)
shr
mov
sbb
ror
xchg
call
out
stc
and
ins
mov
fistp
dec
sub
stc
into
jb
or
inc
sub
call
cdq
adc
(bad)
mov
xor
dec
mov
call
sub
sub
mov
clc
pop
ins
(bad)
fucomp
std
repz
bound
out
jl
hlt
imul
mov
je
cld
xchg
mov
cli
mov
pop
ficomp
jg
retf
iret
adc
mov
push
xchg
sti
dec
jecxz
mov
cmps
(bad)
aad
jge
xor
retf
leave
mov
repz
(bad)
xchg
cmps
or
cmp
inc
test
push
into
ins
mov
pop
aaa
pop
fisubr
inc
addr16
lahf
ss
pop
ss
cmp
es
sahf
ins
sbb
pop
fwait
add
add
jle
inc
addr16
jo
not
cmp
aaa
add
mov
mov
mov
data16
sbb
ds
jns
mov
sub
mov
(bad)
loopne
push
mov
cmp
stc
out
idiv
dec
inc
aas
add
push
xor
cmp
push
out
fld
mov
mov
sti
shl
loopne
lods
or
cmc
sub
rcr
(bad)
mov
mov
jge
mov
adc
sbb
out
std
xor
std
bound
cli
iret
cmc
popa
std
push
pop
mov
sbb
movs
jns
jp
aaa
lock
enter
lds
xor
in
hlt
xlat
sar
xor
adc
(bad)
cld
cld
and
jg
pusha
stos
std
push
mov
push
pop
stos
jmp
cmps
jmp
mov
dec
jns
push
popf
aam
dec
mov
(bad)
pop
fisubr
je
jge
(bad)
cmp
push
mov
ss
imul
out
cmps
pop
inc
ret
dec
mov
js
shl
out
pop
lock
mov
pop
xchg
push
or
loopne
je
shr
add
adc
xor
xor
cmp
pusha
inc
rol
lock
jge
rcl
mov
scas
in
retf
hlt
test
cmp
jno
lock
pop
stc
test
mov
pusha
jecxz
mov
das
push
mov
cli
loop
sbb
or
(bad)
(bad)
lock
ficom
mov
into
sbb
cmp
pop
sbb
xor
pop
fldenv
pop
jbe
xor
jo
sub
pop
xor
rol
push
xchg
nop
mov
jae
(bad)
mov
stc
sbb
addr16
cld
out
std
sub
sbb
push
push
(bad)
inc
jp
or
xchg
cmp
int
lds
xor
pushw
ds
in
pop
ret
mov
add
das
test
fbld
jp
inc
jp
(bad)
push
mov
dec
add
hlt
inc
repz
jg
pushf
lahf
imul
cmps
mov
lods
inc
retf
stos
mov
add
jl
std
mov
sbb
mov
cmps
std
sub
or
leave
out
jge
xor
cs
jecxz
mov
dec
mov
retf
jno
outs
out
fs
push
pop
jns
jecxz
jecxz
jmp
sahf
mov
cs
cmp
and
add
jle
and
xchg
sbb
push
push
out
cmp
mul
shr
sub
icebp
jecxz
inc
je
mov
mov
mov
jb
cld
adc
in
lods
jge
test
mov
add
loopne
and
lods
aam
cwde
sahf
xlat
inc
cli
adc
aam
loope
or
xor
pop
add
loope
cli
xchg
(bad)
cmp
lock
ret
cmp
inc
cwde
inc
xor
es
mov
js
loopne
add
pop
jnp
jle
shr
cmp
mov
add
pusha
clc
push
add
add
lock
popa
(bad)
xor
mov
dec
adc
dec
rcr
call
cmp
(bad)
hlt
iret
xchg
mov
das
call
sar
dec
repz
bound
jge
sar
cmp
cdq
out
les
repnz
cmps
out
add
add
jmp
mov
enter
jmp
pop
or
pushf
lahf
adc
cs
mov
xchg
(bad)
xor
out
sub
sbb
push
push
and
inc
cmp
sub
icebp
add
(bad)
pop
xor
pop
retf
cmp
jnp
sbb
mov
dec
rol
pop
repz
arpl
lock
faddp
repnz
sti
xor
pop
pop
das
dec
dec
pop
lods
inc
dec
and
stos
jb
sub
mov
in
push
mov
jg
lea
int3
cmp
xor
neg
pop
jne
ja
fisttp
scas
in
retf
outs
lods
dec
shr
fcomp
adc
jno
lds
cld
or
enter
and
pop
mov
lods
lods
mov
push
cmovns
lds
sub
stos
xor
stos
pop
lods
movs
add
scas
and
push
lahf
retf
add
and
lds
int
sub
push
(bad)
rol
psubsb
mov
ss
jecxz
mov
ror
push
mov
and
stos
jne
loop
js
loop
sub
retf
mov
call
ret
jne
stos
and
inc
movs
and
hlt
inc
fild
aad
mov
sti
mov
lock
bound
int
test
xchg
dec
ret
ror
inc
and
sub
cmp
and
mov
pop
sbb
movs
jns
mov
adc
fnsave
push
sbb
add
ja
adc
sub
int
xor
cmp
ss
cmp
jo
ins
push
das
gs
dec
fucomi
mov
pusha
sbb
lods
mov
addr16
jmp
add
pop
inc
mov
mov
sbb
xlat
cmp
sbb
fidiv
dec
(bad)
in
or
push
push
mov
lds
jp
call
mov
repnz
cs
push
sbb
cmp
jecxz
inc
dec
pop
xchg
ja
xlat
loope
int3
js
xor
pop
pop
add
jb
sahf
shr
push
pop
sub
add
fwait
xor
xchg
call
sti
out
push
pop
dec
push
adc
imul
pushf
jmp
jmp
adc
mov
cmp
push
mov
(bad)
loop
and
xchg
popa
push
adc
cmp
repnz
test
mov
adc
call
mov
popa
out
xor
sbb
sub
(bad)
jecxz
jmp
pop
int3
or
jbe
je
or
ss
push
sub
retf
dec
je
sbb
mov
(bad)
outs
movntps
cmp
cld
test
jbe
xchg
mov
mov
ja
cmp
sbb
dec
(bad)
jae
lea
mov
in
xchg
jle
jae
in
push
dec
in
cmps
adc
inc
ret
shl
mov
pop
push
mov
xchg
push
in
stos
lea
lea
mov
mov
rol
xchg
xchg
rol
push
test
pop
jmp
icebp
push
push
cmps
dec
mov
fidivr
pop
dec
sub
push
cmp
push
rcr
lock
movs
and
orps
push
mov
push
cmps
inc
xchg
mov
(bad)
idiv
in
add
nop
(bad)
sbb
xchg
xor
loope
pushf
fsubp
pop
test
test
retf
sub
inc
ret
jmp
or
stos
mov
xor
imul
test
jl
ss
dec
pop
pusha
jne
aad
neg
loope
mov
test
add
or
lock
cmp
lea
pop
push
hlt
test
and
loop
outs
stos
int
sub
enter
xor
js
add
aaa
xchg
icebp
jp
jecxz
fldlg2
outs
pop
out
in
test
repz
daa
jae
aam
sbb
xchg
out
adc
mov
jno
pop
push
mov
jb
xor
imul
add
jo
and
inc
mov
call
push
aad
adc
pusha
sahf
mov
lods
and
into
call
mov
sbb
pop
jno
pop
movs
scas
fisttp
jno
xor
jne
aam
inc
into
repz
push
cmp
dec
mov
inc
ja
mov
mov
gs
jecxz
mov
jb
shl
leave
and
js
add
mov
popf
ret
adc
in
inc
pop
popa
jae
cmp
out
jo
icebp
out
cmp
xor
inc
sahf
aas
jne
lods
push
sbb
ins
push
jmp
aas
push
ret
or
ds
data16
adc
hlt
jle
bound
xor
xor
or
(bad)
pop
jo
ins
or
mov
rol
mov
pop
xor
mov
sbb
mov
out
dec
popa
das
add
jno
ins
and
or
and
push
sub
cdq
stos
retf
lods
clc
fs
adc
mov
mov
cmp
ret
jmp
dec
dec
sar
jl
(bad)
or
fwait
pop
pop
(bad)
int3
leave
fwait
shl
int3
gs
out
adc
xlat
xchg
ins
xor
dec
sti
cmc
mov
in
call
ds
mov
call
mov
arpl
ja
pop
ja
mov
push
jl
or
cmps
scas
iret
jmp
xchg
cmp
mov
dec
sahf
or
sub
xchg
js
adc
retf
lods
repz
jae
fwait
loope
add
mov
loop
push
mov
xlat
sahf
out
jns
push
dec
mov
xchg
repz
mov
or
jne
imul
addr16
xchg
je
hlt
or
jge
jp
jnp
mov
push
inc
pop
fadd
stos
xor
mov
aas
lahf
mov
ins
lods
test
loop
(bad)
cmc
int
imul
imul
jp
jno
xchg
cdq
(bad)
ss
jne
jno
mov
dec
jmp
mov
adc
mov
sahf
lods
mov
leave
leave
scas
fistp
out
mov
inc
popf
call
arpl
icebp
or
int3
bnd
jge
push
addr16
push
mov
cli
mov
rol
xor
ss
mov
aam
pop
aam
push
mov
jne
jbe
mov
jp
sbb
lea
in
es
(bad)
test
cwde
cdq
jns
lahf
fild
mov
mov
nop
mov
hlt
(bad)
iret
or
sub
xor
aam
or
cs
popf
loope
or
mov
xor
js
jbe
xlat
popa
jle
(bad)
cdq
inc
in
mov
lahf
aad
push
xchg
mov
ror
pop
push
test
das
sbb
cdq
test
js
sub
into
push
jnp
cwde
push
jb
repz
jmp
in
(bad)
push
fld
xor
jne
popa
popa
popa
mov
xor
retf
mov
cmc
test
mov
iret
jb
mov
packssdw
loopne
scas
sbb
xor
repz
xor
mov
retf
pop
mov
lods
mov
sbb
dec
mov
div
dec
jecxz
sbb
pushf
retf
dec
jle
imul
push
jns
xchg
int
sub
je
aaa
xchg
fisttp
xchg
sbb
dec
scas
cmp
sahf
cld
ja
cmps
pop
icebp
sub
pop
jl
xchg
sbb
inc
or
dec
mov
ja
cmp
pop
add
mov
(bad)
fstp
int3
xor
mov
and
adc
xchg
icebp
cs
rcr
xchg
and
call
out
mov
sar
push
cmps
cdq
or
adc
ret
in
xchg
popa
movs
dec
cld
sahf
pop
or
jbe
xor
mov
ss
cmp
mov
sub
pop
leave
jno
pop
jmp
pop
sahf
xor
in
xchg
sbb
sbb
fnstsw
xchg
test
xchg
jnp
jmp
xor
stos
xrelease
inc
aas
xor
cmp
mov
or
pop
fstp
ret
cmp
jp
mov
(bad)
movs
add
(bad)
idiv
scas
adc
sbb
lods
jmp
and
fwait
push
push
iret
call
gs
cwde
ret
fs
add
sbb
cmps
(bad)
loope
push
sbb
lds
dec
wrmsr
pop
and
mov
aaa
sbb
movs
lock
add
int3
repnz
pop
inc
cmp
mov
shl
inc
xor
addr16
mul
mov
jne
shl
test
sbb
dec
xchg
jmp
jg
mov
test
cmc
mov
mov
sahf
sbb
addr16
enter
push
push
scas
aam
outs
mov
rol
xchg
clc
iret
mov
and
jns
and
mov
adc
nop
mov
inc
cmp
adc
lock
jb
cld
in
pushf
out
dec
(bad)
cmp
jae
daa
cmp
call
or
(bad)
sbb
push
or
cmp
push
fdiv
fwait
scas
cld
mov
pop
ss
(bad)
mov
pushf
mov
lock
retf
int
movq
jge
fs
cwde
lds
mov
mov
pop
fsub
add
aaa
mov
jnp
jecxz
push
jno
and
mov
sbb
nop
mov
rcr
pop
out
inc
aaa
out
push
sbb
inc
cmp
sti
aam
sbb
push
xchg
jmp
aas
icebp
hlt
out
cmps
fnstsw
mov
mov
(bad)
mov
jno
bound
jae
xor
adc
hlt
out
test
outs
out
lock
fimul
mov
mov
sub
ins
lock
gs
aaa
ud0
cmc
xchg
mov
push
push
neg
cmp
xor
jns
sbb
pop
mov
aas
in
mov
loopne
ja
push
fidivr
rcr
test
cmp
and
cld
fwait
popf
mov
(bad)
bound
xchg
cli
adc
repz
pop
pushf
mov
jmp
push
inc
into
mov
push
retf
cld
sti
scas
xchg
pop
dec
ret
mov
test
imul
cwde
push
cs
in
mov
bound
ror
lds
and
(bad)
jmp
xchg
and
mov
adc
bound
inc
mov
or
inc
and
push
stc
loopne
pop
mov
mov
(bad)
push
dec
stc
pop
xor
jb
and
mov
jns
(bad)
call
inc
sbb
pop
stc
jg
iret
mov
cmps
push
mov
cld
popf
mov
dec
cmp
ja
mov
push
imul
(bad)
sbb
cmp
repnz
push
ja
xor
test
dec
not
fwait
sti
adc
cmp
(bad)
psubusw
out
mov
test
jmp
adc
lgdtd
nop
xor
pop
in
cmc
sbb
test
js
mov
movs
stos
(bad)
scas
pop
cld
aam
iret
ror
dec
loopne
jmp
adc
mov
add
and
push
clc
mov
jp
loope
add
in
popa
ficom
je
lock
add
inc
adc
mov
mov
jae
std
enter
mov
cmp
gs
ds
rol
lock
lds
fnsave
fild
xchg
sti
add
test
nop
cmp
clc
or
imul
push
cdq
repnz
xchg
test
(bad)
loop
cmc
sub
jl
clc
loope
xchg
out
pusha
imul
loop
retf
lahf
fcmovnu
and
xor
jge
cdq
lahf
das
lahf
add
das
aam
cmp
sbb
outs
leave
(bad)
out
cmp
outs
call
ffree
sub
jge
rcr
sti
push
stos
inc
sbb
cmp
pop
pop
repnz
div
pop
sti
lahf
cdq
outs
rcr
cmp
je
xor
jge
pop
mov
inc
push
je
pop
fsub
jmp
mov
out
(bad)
sbb
ins
mov
sahf
std
imul
jg
fwait
cmc
inc
imul
or
mov
cmp
ins
xor
neg
pop
pushf
fist
inc
mov
std
inc
loopne
add
xchg
repz
mov
cmp
sub
ja
clc
sub
cli
and
xor
paddb
push
stc
imul
pop
icebp
push
jns
sbb
out
add
mov
lock
adc
mov
fdiv
out
push
jp
les
push
adc
repz
icebp
jmp
pop
jg
rcl
dec
out
popf
pop
cmc
jbe
jecxz
pop
cmps
int3
lahf
cmps
mov
loop
pop
xchg
cli
jmp
inc
pop
cmps
call
arpl
jecxz
adc
and
outs
mov
pop
sub
jns
push
mov
repz
dec
mov
movs
mov
(bad)
mov
add
fadd
pop
clc
cmps
ja
gs
in
jp
shl
repz
(bad)
cmc
mov
iret
pushf
mov
clc
xchg
jg
shl
in
jl
mov
mov
mov
add
lock
pop
inc
popf
jo
pop
icebp
inc
cs
xor
add
sti
and
repz
lahf
fdiv
pop
cli
sbb
stos
cmp
(bad)
test
cmc
cdq
push
pop
pop
js
jle
std
adc
pop
jmp
outs
ret
lods
js
sahf
dec
inc
in
mov
rcr
mov
mov
and
and
js
jg
shl
xor
dec
xor
and
ins
add
add
pop
hlt
xchg
cmp
gs
rcr
sub
adc
mov
jmp
clc
js
add
loopne
out
popa
sahf
aaa
aas
jmp
xchg
dec
stc
stc
adc
pop
shl
dec
xor
into
fst
popf
mov
dec
fsub
clc
xchg
fmul
xor
lds
pop
mov
outs
aas
mov
cmp
in
test
in
and
dec
ret
fs
addr16
(bad)
test
mov
sbb
scas
out
pop
(bad)
xor
shl
ds
fistp
jmp
lahf
cmp
add
repnz
push
stos
test
jbe
shl
ret
or
mov
repnz
lods
out
add
aas
xchg
sti
xchg
int
fild
loopne
aaa
mov
jnp
xor
mov
jl
mov
repnz
in
jp
lahf
jp
int
mov
add
jge
icebp
inc
call
stc
xor
addr16
mov
fwait
lahf
loope
inc
inc
add
hlt
sub
imul
xchg
jmp
xor
fbld
lea
dec
jns
jmp
icebp
ds
call
cld
push
jb
sbb
pop
cmps
(bad)
mov
outs
mov
icebp
(bad)
inc
push
jo
or
mov
pushf
loop
cmps
dec
jo
or
sbb
scas
push
xor
iret
mov
lods
jno
das
xor
and
xor
adc
adc
sbb
dec
call
xchg
stos
fisttp
shl
cld
hlt
popf
mov
out
daa
mov
out
push
sub
add
pextrw
mov
xor
jmp
jb
mov
sub
jae
fst
dec
or
stc
xor
sar
cmp
(bad)
pushf
out
mov
jns
(bad)
pushf
das
bound
or
aaa
or
jae
push
adc
out
out
int3
leave
scas
cmps
test
lahf
gs
mov
jl
hlt
cli
jge
call
mov
mov
pushf
jae
out
adc
clc
mov
out
sar
mov
xor
in
dec
jo
(bad)
sub
out
ret
or
xor
iret
rcr
inc
or
repz
jle
mov
and
adc
inc
mov
loop
std
hlt
lahf
nop
imul
fwait
inc
into
lahf
adc
sbb
lods
hlt
adc
cmp
inc
repz
xor
cmp
jo
sub
pop
jne
or
pushf
scas
mov
mov
jle
sbb
add
clc
jnp
bound
mov
ins
call
push
and
ds
lock
cmp
in
mov
xchg
and
mov
lock
mov
stc
data16
jg
call
pushf
jb
in
out
fwait
jns
pop
fdivr
imul
pop
sbb
or
enter
hlt
test
in
cld
in
push
mov
out
add
adc
popf
aas
imul
xlat
dec
xor
jmp
or
rcr
mov
ja
dec
or
inc
jge
stos
add
jb
inc
sub
mov
cwde
jle
ret
stos
or
add
or
pusha
mov
push
xor
add
(bad)
pop
inc
mov
adc
ror
xchg
cld
mov
out
out
add
jo
fld
mov
mov
add
mov
cmc
inc
cmp
add
pop
aaa
xbegin
sbb
or
pop
add
jnp
jle
shl
in
gs
adc
add
or
jns
or
and
ja
cdq
dec
cmp
lahf
pop
pop
cmp
dec
int3
pop
adc
aam
jnp
fwait
mov
add
cmps
cli
mov
int
out
dec
jno
aas
and
aaa
arpl
push
pusha
leave
xor
mov
arpl
repnz
cmp
inc
jns
scas
loop
jmp
jp
loop
popf
(bad)
ror
mov
ret
in
cs
pusha
pop
aaa
cmp
into
outs
call
ja
jp
jmp
push
repz
retf
push
xchg
adc
ss
imul
jae
fmulp
cmp
fisttp
jnp
xchg
ja
push
cmps
in
imul
jg
imul
pop
and
adc
test
xchg
call
sub
jmp
cwde
mov
test
int
jge
stc
cmps
popf
cmc
sahf
push
ds
inc
jae
cmp
and
scas
mov
dec
bound
pop
lds
popf
scas
and
fidivr
fist
push
mov
out
mov
mov
mov
pushf
mov
add
cdq
push
fwait
push
pushf
stc
sub
enter
mov
add
adc
dec
aas
fnstsw
retf
fldenv
lods
or
outs
jle
outs
int3
inc
movs
pop
adc
pop
por
out
and
jne
xor
in
mov
cmp
dec
push
or
cmp
push
mov
jecxz
pusha
cmp
jb
in
inc
dec
mov
clc
popf
ja
xchg
sub
fcom
lock
mov
mov
or
adc
mov
dec
lahf
push
scas
les
mov
aaa
rol
push
add
repz
add
xchg
cli
adc
add
lock
(bad)
mov
mov
cmc
in
aas
ds
pop
mov
je
pop
ret
stos
mov
pop
cmp
daa
dec
xlat
add
mov
jl
movs
sbb
push
sub
mov
mov
aad
fisttp
test
sub
jmp
dec
cmps
outs
add
adc
push
jge
je
in
add
jg
sub
mov
dec
mov
pop
add
jnp
or
rol
ss
pop
cmp
xchg
out
icebp
mov
out
icebp
pop
mov
(bad)
std
cmp
std
add
push
inc
rcl
cld
cld
add
mov
or
ret
inc
lahf
std
push
loopne
jbe
fimul
jge
xchg
sbb
jmp
adc
cli
xor
ins
xlat
sub
jmp
rcl
mov
inc
fsubp
imul
fidiv
sar
pxor
jbe
popa
mov
inc
sti
(bad)
pop
lds
fistp
fcom
and
(bad)
pop
jns
or
daa
and
fdivr
ins
(bad)
(bad)
xor
fnstenv
pop
stc
mov
inc
and
inc
imul
ja
(bad)
push
ins
outs
jmp
jle
xchg
mov
mov
dec
cmp
into
iret
repnz
xacquire
rcr
mov
mov
lahf
mov
mov
cmp
mov
in
jae
repz
sbb
sub
das
inc
push
jbe
aas
clc
stc
sbb
(bad)
mov
out
outs
mov
lods
iret
(bad)
dec
ror
mov
clc
out
addr16
lahf
dec
rol
fcmovnb
stc
dec
fsubrp
idiv
inc
fst
pushf
xchg
out
jmp
mov
out
cmp
dec
sbb
adc
(bad)
in
adc
outs
cld
lea
xor
mov
shl
loopne
mov
out
adc
pushf
mov
jbe
xor
lock
into
int
sbb
(bad)
mov
stc
aam
xlat
loopne
data16
call
retf
fidivr
ss
daa
jmp
imul
push
pop
bnd
mov
popa
sbb
call
enter
(bad)
sbb
sar
push
(bad)
nop
mov
stc
dec
jle
mov
xor
xchg
cld
cdq
movs
push
rol
xor
dec
in
push
jmp
into
and
loope
sbb
dec
bound
sti
mov
push
scas
enter
std
xor
enter
jno
mov
jmp
stc
repz
jns
pop
psrlw
mov
repz
(bad)
cld
xchg
cmps
push
mov
or
sub
out
cmps
mov
lahf
adc
std
(bad)
idiv
stc
push
sub
shl
jecxz
cmp
in
mov
cmp
loop
jg
xchg
lods
mov
push
shl
xchg
nop
cmp
mov
fidivr
add
xchg
test
adc
jle
leave
dec
jmp
not
lock
bswap
ds
bound
cmp
inc
gs
sbb
xor
aaa
push
mov
mov
mov
or
test
push
pop
mov
adc
cmc
imul
jecxz
mov
xchg
repz
mov
fidiv
pop
fwait
xlat
je
mov
fsubr
cmp
pop
sub
mov
iret
sti
(bad)
mov
jns
repz
push
jae
pop
rcl
dec
sbb
(bad)
fistp
or
pop
movs
out
shl
bound
cmp
mov
out
pushf
movs
out
call
sub
not
mov
and
int
mov
jle
xchg
cwde
xor
and
call
cmc
out
mov
idiv
jmp
inc
fidiv
repz
movs
int3
xor
je
test
repz
out
loopne
xor
mov
fld
sti
xlat
rcl
rcr
sbb
mov
aas
and
js
jecxz
cld
or
cmc
push
jp
jecxz
into
lock
das
fcos
jecxz
mov
(bad)
aas
pop
add
scas
and
cmp
mov
ins
scas
fdivrp
sti
popa
repz
xor
pop
jns
adc
mov
jle
mov
rcl
jo
xor
popf
aas
out
in
jl
cdq
cmp
pop
jmp
test
push
(bad)
retf
cmp
mov
adc
jb
pop
out
cld
push
aas
psubw
les
dec
fbld
sbb
scas
lahf
fsubr
cmp
dec
inc
sub
mov
ja
idiv
sub
xor
lods
outs
lock
mov
and
or
shr
aam
lea
dec
or
sub
mov
inc
xchg
push
int3
stos
cld
dec
(bad)
mov
scas
sbb
movs
das
cmp
aam
xor
std
inc
mov
cld
ins
(bad)
adc
cmp
iret
sar
ret
pop
mov
sar
es
push
inc
out
jns
jmp
imul
jne
adc
xchg
sahf
jp
sub
sti
mov
fs
sar
jle
mov
js
push
push
jbe
cmps
les
push
push
or
imul
jbe
dec
mov
inc
(bad)
hlt
repz
loope
jle
pusha
dec
jbe
jo
sub
xor
push
pop
jl
pop
mov
jmp
rcl
dec
nop
mov
(bad)
push
add
gs
into
sbb
addr16
inc
dec
fistp
sub
xor
fld
sub
aaa
(bad)
imul
or
jbe
fld
dec
pop
clc
cmp
repnz
ja
stc
mov
rol
and
mov
pop
psrld
rol
(bad)
mov
or
call
cwde
push
mov
sbb
dec
push
pusha
out
jge
sub
out
movsx
ret
out
mov
movsx
add
or
lock
cwde
mov
pop
push
cld
mov
ja
fwait
sub
call
repz
xchg
dec
jp
jmp
push
inc
les
mov
sbb
lahf
add
or
sub
adc
mov
adc
outs
std
cmc
adc
mov
cld
or
pop
push
cmps
mov
mov
fld
in
std
sub
jp
retf
push
push
test
hlt
or
lods
cmps
addr16
xor
adc
xor
inc
aad
sbb
setg
aas
pusha
hlt
nop
setle
fistp
mov
enter
sahf
lods
fbstp
mov
xchg
rol
shl
stc
mov
jns
outs
into
rep
movs
push
jl
hlt
out
jmp
inc
pop
js
pop
cmps
hlt
outs
into
(bad)
arpl
aaa
aas
inc
hlt
dec
std
xor
movs
xor
cmp
xchg
ds
jle
cld
dec
test
hlt
lods
inc
inc
iret
jg
add
int3
repnz
(bad)
jae
mov
rcl
lahf
xor
jo
cmp
add
add
mov
enter
ins
je
lahf
xor
cli
sub
mov
xlat
aas
ja
cs
cmp
cld
lods
sar
prefetch
rcr
cmp
fistp
fucom
sbb
mov
daa
hlt
jl
sub
sar
nop
mov
(bad)
xchg
sar
movs
add
mov
iret
mov
pushf
fistp
sbb
and
stos
stos
hlt
mov
jbe
(bad)
call
loopne
shl
movs
cmps
callw
out
stos
hlt
or
iret
imul
cmp
xor
in
je
jo
mov
popa
call
push
jp
ds
iret
in
push
pop
fwait
xchg
jge
out
pop
sti
xchg
jmp
adc
(bad)
pushf
sbb
fwait
das
cli
sar
fucom
cmp
movs
out
add
fistp
dec
fld
pop
inc
(bad)
fnstsw
mov
xchg
pop
arpl
aaa
xor
jbe
sbb
push
mov
mov
cmc
nop
(bad)
jmp
mov
aam
out
xchg
fisubr
adc
pop
jl
push
jge
arpl
add
pop
inc
push
inc
aaa
sar
rcl
js
psubsw
dec
cli
mov
out
loop
loop
or
fsub
pop
loope
gs
gs
outs
movs
dec
jmp
call
dec
daa
push
adc
cmp
jg
mov
stc
faddp
(bad)
xlat
int3
loopne
push
cmps
pminsw
inc
push
xor
push
jmp
mov
jle
lds
push
sbb
cmc
xlat
cmc
jb
mov
clc
outs
(bad)
mov
stc
shl
jbe
push
pop
xchg
je
lahf
inc
loopne
ret
cmp
cli
push
outs
mov
jo
mov
adc
fdivr
cmc
pop
or
jbe
ins
(bad)
mov
fisttp
xchg
fiadd
stos
xor
or
lods
jne
add
mov
sbb
fidivr
add
inc
popf
cmp
fs
and
out
fist
cmp
cmps
lahf
test
inc
dec
jno
scas
faddp
pushf
fild
or
cli
jmp
sti
mov
cli
faddp
ja
xor
(bad)
sub
repnz
push
shl
mov
xchg
stc
ret
ror
int3
mov
jecxz
jg
add
or
xchg
pop
int3
pushf
xchg
fisttp
into
mov
ret
pop
cmpunordps
cld
and
js
mov
or
aam
mov
push
mov
into
pop
adc
xor
ds
dec
mov
jmp
aam
fs
fwait
cmp
push
add
jae
imul
test
loopne
aas
xchg
rdmsr
daa
mov
sub
and
inc
cwde
repz
jmp
dec
push
ror
lock
push
ror
(bad)
jp
aas
xor
(bad)
mov
pushf
out
std
mov
out
iret
in
int3
stc
and
dec
mov
rcr
rcr
repnz
xlat
sub
fwait
(bad)
or
jge
shl
stos
xchg
nop
(bad)
cmp
cwde
mov
repz
push
xor
mov
mov
cwde
iret
mov
add
aas
xor
sub
mov
pushf
pop
call
es
loopne
push
fld
popf
leave
(bad)
jae
into
mov
(bad)
in
stos
or
xor
(bad)
into
pop
popf
xchg
xchg
add
call
dec
adc
push
hlt
jl
jp
push
jmp
repz
ins
loopne
shl
in
hlt
fdiv
jecxz
pop
cmp
mov
mov
out
enter
repz
cli
fdivr
iret
cmp
iret
movs
jns
pop
pop
movs
daa
dec
jmp
fldcw
sbb
ins
call
mov
ss
jecxz
jb
imul
(bad)
push
mov
into
add
jecxz
xchg
pop
mov
outs
jo
jo
jmp
out
xchg
xor
out
sbb
and
inc
(bad)
jmp
cli
fwait
in
retw
cmp
push
inc
cs
mov
gs
jle
loopne
or
cmc
mov
push
jb
inc
daa
out
and
test
add
jge
into
lahf
pushf
jl
ins
jae
hlt
sub
fstp
sar
loopne
dec
jmp
xlat
fstp
loope
ss
leave
xchg
push
jl
cmp
aad
dec
aas
iret
call
fwait
das
rcr
mov
jae
sbb
das
mov
das
(bad)
(bad)
fld1
loop
fisub
bound
push
add
fyl2x
mov
add
jns
pop
sbb
mov
mov
imul
jae
icebp
jg
icebp
push
cli
sbb
(bad)
test
inc
inc
out
loop
adc
xor
mov
std
and
cld
and
dec
xchg
dec
pop
cmp
pop
add
jno
call
jmp
lahf
icebp
fild
ss
sbb
adc
cmps
aas
or
add
mov
jg
pop
(bad)
mov
lahf
inc
mul
int
or
jns
jecxz
icebp
je
fisubr
cmps
call
push
cmps
loopne
xchg
les
shl
sub
jb
mov
inc
pop
fidiv
sbb
cdq
(bad)
shl
or
inc
pop
inc
enter
rcl
cmp
inc
fwait
pop
or
movs
ja
ss
cmps
adc
jns
add
inc
mov
cld
out
add
sbb
add
adc
xor
mov
dec
clc
xor
hlt
push
sahf
xchg
scas
ja
out
mov
mov
dec
jbe
fistp
je
scas
dec
sbb
into
movs
push
sub
ds
loop
(bad)
ja
sahf
or
xchg
cmp
ret
sbb
dec
add
mov
call
jae
lea
popa
pop
jbe
(bad)
xchg
cwde
retf
cli
leave
icebp
pop
jo
ror
ficomp
mov
cmp
push
pushf
fwait
sbb
out
mov
cld
push
pushf
adc
in
dec
mov
jmp
pop
push
jae
test
lds
ins
jl
icebp
xchg
cwde
rcl
cmc
mov
sub
das
xlat
or
leave
pop
outs
mov
mov
sar
mov
mov
mov
fs
inc
fucomp
push
push
inc
cmps
jl
add
mov
(bad)
adc
js
icebp
cmovae
into
dec
xchg
in
(bad)
xchg
hlt
inc
dec
outs
jp
cmps
dec
arpl
pop
daa
es
lods
pop
aas
xchg
xchg
jl
popa
mov
push
bound
mov
mov
in
mov
pop
jmp
ins
or
ds
mov
pop
adc
mov
dec
push
jb
div
arpl
repz
add
mov
or
clc
(bad)
cmps
sbb
sar
(bad)
or
push
or
sub
adc
mov
aas
add
shl
pop
fsub
or
pop
add
cmp
adc
movs
ror
mov
jmp
iret
rcr
push
jge
push
jmp
sub
(bad)
jns
loope
loope
into
rol
add
xor
lods
xor
cmps
imul
sbb
mov
cld
adc
sbb
aas
sub
mov
add
out
pop
pusha
cmp
stos
lock
cmp
test
add
cli
aam
ret
aas
ins
addr16
xor
mov
ss
scas
push
aam
push
loopne
xor
add
xor
xor
sbb
sub
add
test
outs
aad
out
pop
mov
lods
ins
clc
cmps
sub
pop
hlt
lds
(bad)
mov
jle
mov
movs
pop
add
add
clc
adc
push
ja
fnstenv
xchg
inc
jmp
pop
jo
mov
xchg
mov
in
cld
cmps
nop
fucomip
rcl
pop
mov
aam
mov
das
or
sbb
cld
and
push
push
cmps
pop
and
imul
sbb
(bad)
js
push
cmps
xlat
sar
movs
adc
dec
dec
add
xor
test
add
adc
xchg
xor
scas
or
out
lods
(bad)
(bad)
(bad)
mov
lods
aam
sar
iret
jno
loop
cli
mov
push
fmulp
mul
enter
add
push
xor
shl
pop
iret
cs
je
rol
add
lods
mov
sbb
hlt
xor
jmp
and
lock
fxtract
mov
hlt
xor
inc
cmps
jmp
pop
shl
shl
sbb
push
push
sar
pop
sar
inc
stc
mov
or
dec
xchg
sub
fsub
aaa
mov
aas
or
(bad)
add
and
jmp
inc
pop
popf
jle
loopne
stc
repz
hlt
clc
mov
or
jmp
hlt
xchg
or
or
cmps
les
cld
fwait
or
dec
mov
jp
push
in
fdiv
loope
jo
addr16
and
add
stos
pop
jae
jo
xchg
call
inc
jmp
imul
cmp
ja
sub
xor
loopne
shr
push
and
idiv
stos
and
loop
ins
lahf
fld
sub
addr16
push
xchg
repz
test
jmp
mov
or
push
cmp
sub
pop
dec
pop
pop
(bad)
push
repz
pop
in
pop
imul
fistp
xor
aaa
loope
ss
sub
inc
jmp
paddd
jl
xor
dec
lahf
add
ds
loopne
mov
dec
cli
push
scas
je
xor
scas
add
sbb
mov
imul
cmps
dec
cld
dec
call
iret
movs
jo
xchg
mov
movs
mov
or
adc
int
cmp
add
and
in
mov
sub
stc
cmp
repz
and
push
(bad)
mov
lock
add
cs
adc
xor
mov
addr16
outs
add
jo
cli
loop
(bad)
jg
pusha
adc
push
mov
sbb
bound
inc
mov
mov
iret
adc
ficomp
in
mov
push
push
sbb
adc
arpl
ins
sar
xor
xor
fsub
sub
cld
add
loopne
or
out
or
inc
add
add
fild
aam
add
scas
movs
dec
fld
not
cli
xchg
sbb
in
pop
inc
inc
js
mov
aad
mov
rcl
pop
push
sbb
jl
mov
sub
add
ins
in
ds
push
jnp
jecxz
jo
mov
sti
add
jl
(bad)
cmp
jg
mov
push
mov
jb
jg
or
lea
mov
pop
(bad)
cmp
inc
loop
fwait
xchg
jmp
dec
(bad)
dec
retf
das
outs
fisub
int3
jmp
cmp
shl
psubsb
pop
(bad)
stos
(bad)
das
retf
(bad)
fidivr
pop
call
repnz
mov
push
mov
cld
std
xchg
cmp
jns
(bad)
cmps
gs
icebp
in
inc
pop
inc
mov
jge
jmp
xchg
mov
in
movs
cmp
jg
imul
push
cmp
mov
dec
jmp
repnz
cmp
xchg
imul
cmp
lods
jmp
sti
push
or
lea
mov
gs
dec
lods
xor
mov
sti
cmp
cmp
jmp
mov
scas
shr
cdq
mov
scas
mov
scas
shl
(bad)
addr16
jae
in
retf
cmp
pop
aas
shr
movs
mov
repz
(bad)
(bad)
das
mov
push
stos
add
sti
test
repz
add
das
loopne
add
clc
outs
je
loopne
call
out
out
mov
sbb
sar
jge
xor
clc
inc
movs
(bad)
call
dec
aaa
pushf
hlt
sbb
sti
call
inc
sbb
inc
inc
xor
inc
leave
push
or
mov
mov
ins
outs
dec
repz
dec
and
ret
jp
iret
push
mov
dec
jmp
outs
aad
jp
jb
sar
shl
jp
mov
das
and
xchg
pop
mov
shrd
mov
jp
inc
fs
pop
fdiv
aad
je
fisttp
inc
out
out
cld
cmps
mov
imul
aaa
lock
hlt
mov
xor
add
mov
iret
or
sti
jg
xor
cmp
jg
outs
fild
outs
adc
into
ror
push
shl
fsub
movs
mov
popa
out
faddp
lds
and
setg
out
adc
cli
lock
mul
jmp
jp
ret
add
movs
mov
shl
pop
push
fwait
neg
sti
idiv
pop
mov
aad
das
call
fwait
mov
pop
add
xor
mov
out
out
(bad)
cld
dec
mov
xor
mov
jg
loopne
neg
cmp
aad
mov
push
je
loop
pop
out
lahf
sar
cmp
jae
out
scas
outs
pop
xor
int3
ret
out
jo
(bad)
movs
ja
fisttp
xor
push
xor
pop
or
(bad)
lock
(bad)
jo
out
out
add
in
mov
outs
imul
fdivr
cs
mov
stc
out
lea
iret
ss
in
imul
mov
xchg
xchg
mov
int
push
mov
or
arpl
icebp
retf
jne
shl
xchg
pop
xlat
aaa
std
iret
jle
jne
lea
jae
sub
or
div
or
sbb
imul
add
pop
pop
ins
add
call
add
imul
jae
lea
mov
ss
cmp
xor
xchg
jle
and
push
jp
fadd
and
imul
sti
fistp
shl
xchg
add
addr16
popf
or
iret
(bad)
js
icebp
(bad)
repz
shr
ja
inc
mov
xor
mov
push
mov
pop
jg
in
add
outs
mov
push
aaa
ss
pop
push
in
shl
stos
test
scas
data16
cmc
adc
aaa
ret
and
fdivr
jb
or
in
xor
or
lea
jno
mov
jg
jb
add
jge
sahf
cwde
mov
call
lods
lea
mov
popa
cmps
pop
jle
test
hlt
xchg
cmp
pop
sbb
fistp
jl
clc
scas
comiss
ficomp
aaa
push
fidiv
pop
imul
sbb
inc
rcr
sbb
clc
shr
mov
out
pop
inc
in
das
(bad)
jo
cli
ficom
das
push
stc
sub
mov
mov
jbe
loope
icebp
pop
ret
int
std
mov
xchg
dec
aas
retf
cmp
scas
aaa
sbb
mov
or
add
mov
jmp
lods
int
mov
push
mov
push
sbb
inc
jb
push
retf
xchg
out
leave
dec
sti
cs
mov
dec
scas
aaa
mov
mov
sub
out
pop
iret
jbe
sbb
ja
in
pop
cdq
movs
jge
(bad)
push
xor
das
cwde
std
and
mov
sbb
(bad)
int
pop
mov
(bad)
cmps
ja
adc
jne
retf
imul
pop
mov
popf
sbb
cmps
(bad)
lea
cwde
data16
fidivr
sbb
int
div
jecxz
or
pop
dec
cs
inc
jmp
ins
push
mov
pop
test
cmp
in
icebp
mov
adc
mov
out
stc
repz
cld
lahf
push
iret
sub
in
in
out
daa
out
aas
pusha
push
hlt
fs
sub
fnstsw
out
jnp
popf
sti
pop
cwde
ins
sub
cld
shl
mov
mov
sub
jb
div
cli
aad
pop
call
xchg
jno
cmps
sar
fnstsw
add
popf
dec
out
xlat
addr16
cdq
ds
inc
cmp
cwde
fstp
jnp
lods
in
dec
(bad)
in
adc
sahf
or
lods
adc
aam
jecxz
jae
out
cmp
outs
out
sahf
clc
call
add
rcr
jle
jnp
in
mov
xlat
cld
int
jmp
or
shr
loopne
xchg
jg
jae
test
stos
in
leave
jmp
(bad)
lock
cld
sub
xchg
idiv
push
jg
fsub
hlt
adc
mov
xor
fld
inc
into
popf
jge
pop
inc
sub
enter
sar
sbb
lods
cmp
mov
(bad)
ds
mov
xchg
mov
mov
fcmove
outs
lahf
shr
pop
fiadd
add
popf
in
pop
fwait
xchg
idiv
ficomp
iret
(bad)
in
outs
sti
xchg
mov
jl
pop
fsubrp
and
add
fisubr
jge
xor
das
cmp
(bad)
outs
hlt
adc
cmp
dec
neg
paddb
sar
cmp
fsub
jp
jg
mov
int
(bad)
and
mov
push
shr
pop
(bad)
mov
cli
add
(bad)
mov
ret
jnp
mov
pop
test
sar
rol
dec
retf
xor
mov
jno
fld
jp
jge
aaa
sar
movq
arpl
sbb
add
in
fisttp
inc
xor
and
mov
xor
arpl
add
cld
add
mov
arpl
das
aad
add
jbe
imul
pop
(bad)
fld
inc
dec
push
dec
xor
add
and
int3
sub
scas
rcl
cmp
pop
outs
push
lock
(bad)
dec
sahf
(bad)
or
clc
xor
add
jno
sbb
cmp
not
dec
loopne
xor
ins
loopne
sar
test
in
jecxz
dec
cmp
js
mov
dec
ja
mov
jle
fmul
pop
ds
push
adc
clc
test
sub
mov
gs
mov
add
pop
inc
dec
inc
mov
fucomip
sbb
outs
call
leave
(bad)
lock
dec
cmp
mov
jecxz
pop
inc
in
stc
inc
ja
out
sub
mov
les
iret
pop
xchg
fdivrp
addr16
mov
xor
int
pop
jns
mov
rcl
ja
cld
fcmovnb
jnp
mov
pop
push
inc
push
mov
scas
pop
lock
iret
loope
jecxz
lea
pop
js
jge
out
inc
mov
neg
or
push
nop
xor
push
sbb
icebp
ins
xchg
cld
mov
pusha
add
cld
pop
mov
jmp
and
hlt
pop
mov
mov
mov
out
add
push
je
mov
inc
ja
int3
pop
jnp
ficomp
shr
(bad)
pop
pop
push
dec
stc
mov
mov
inc
mov
jl
aaa
mov
sbb
sti
mov
xchg
out
add
outs
loop
clc
xor
das
ins
cmp
out
xchg
sbb
lahf
xchg
fmul
dec
lods
gs
(bad)
fdivrp
int3
adc
ror
sbb
fwait
mov
dec
jp
aam
(bad)
sbb
lock
mov
out
in
push
jp
pop
push
ret
lds
adc
bound
mov
sar
cs
mov
cmp
add
push
stc
cmc
loop
lods
mov
fcomip
mov
sub
lods
mov
lock
xchg
lods
not
cli
dec
call
and
mov
adc
ja
push
dec
jp
out
(bad)
lods
xor
repnz
add
pusha
repz
mov
out
fdiv
in
movs
iret
pop
mov
scas
xchg
inc
stc
jne
jno
sub
mov
inc
into
fst
jg
loop
loope
aam
pushf
fstp
push
xlat
out
mov
idiv
std
dec
pop
jae
jmp
outs
mov
mov
loopne
outs
lahf
outs
repz
jo
inc
fistp
mov
lahf
jg
(bad)
fild
jle
fadd
shl
xlat
sar
aam
repz
dec
lock
int3
lods
fist
es
add
add
mov
lahf
adc
sbb
int
outs
and
std
lods
xlat
inc
jb
std
sub
imul
daa
sbb
xor
icebp
sub
aaa
add
jns
into
xchg
mov
js
cmp
lock
fsub
lock
iret
mov
or
or
dec
aaa
mov
cmp
icebp
data16
cmc
int
test
and
or
retf
daa
leave
scas
lahf
movsx
mov
cli
cmp
jp
and
or
xchg
ins
mov
jmp
clc
cmps
lahf
cmp
jae
inc
movs
cli
inc
stos
lahf
jle
je
(bad)
sar
sub
std
jecxz
sbb
mov
jp
int3
dec
retf
or
dec
sub
push
rcl
adc
repz
loop
jp
(bad)
mov
repz
cs
pop
jnp
call
mov
pop
hlt
pop
jle
mov
dec
push
lock
das
add
push
cli
add
sahf
es
or
inc
std
sub
out
push
sub
jle
clc
inc
cli
or
fimul
lock
sub
jg
retf
add
dec
mov
adc
mov
lods
jecxz
ins
xchg
push
adc
add
iret
sahf
fidivr
mov
mul
add
int3
mov
aaa
lahf
shl
setnp
ficom
cld
out
cli
inc
xlat
aaa
pushf
and
icebp
mov
inc
inc
not
outs
out
xchg
push
mov
cmp
fsubrp
pmulhw
mov
mov
aaa
push
mov
or
jae
jno
mov
push
jecxz
jmp
nop
jo
jp
or
pop
jg
call
push
ds
pop
jg
icebp
dec
pop
mov
imul
sahf
jecxz
inc
stc
cmc
ret
dec
cmp
or
inc
nop
ja
jo
add
stc
leave
adc
xchg
dec
pop
inc
call
inc
cmps
cmp
add
call
(bad)
adc
ror
push
(bad)
fucomi
xor
inc
sbb
mov
pop
push
pushf
inc
rol
out
scas
pop
jmp
xchg
inc
(bad)
pop
add
adc
or
add
and
pushf
(bad)
fbstp
rcr
inc
sub
jge
ret
jb
call
leave
mul
jnp
mov
and
and
inc
ss
push
shl
clc
aas
dec
adc
mov
push
(bad)
mov
call
ja
mov
nop
cli
mov
push
fbstp
sbb
inc
hlt
fld
outs
add
fwait
mov
ret
push
rcr
data16
cmp
jmp
retf
or
xchg
fstp
loopne
mov
stc
add
(bad)
sbb
mov
arpl
js
jp
hlt
mov
dec
sar
or
inc
out
dec
add
ret
cmp
div
jnp
outs
adc
fdiv
jg
call
and
adc
(bad)
popf
mov
fidivr
xlat
icebp
aaa
sbb
retf
jecxz
cmp
pop
and
aas
jae
cli
js
clc
and
xchg
jg
repnz
jl
jo
out
dec
pop
jl
xchg
adc
outs
cmp
daa
xchg
adc
cld
loope
sbb
push
dec
mov
call
movs
push
mov
cdq
inc
mov
fcom
fisttp
mov
fisub
(bad)
push
dec
push
jl
rcr
cld
int3
shr
xlat
outs
pop
jl
mov
jge
fist
cmps
neg
aas
mov
(bad)
jle
das
mov
mov
loope
push
jle
lock
test
jb
fiadd
cmc
std
xlat
out
jns
inc
idiv
lds
lods
fwait
jnp
iret
inc
out
jbe
ins
jae
out
cmp
aas
mov
out
scas
neg
(bad)
mov
out
cdq
jne
ja
cld
jno
push
sar
out
(bad)
dec
pop
div
xchg
fxch
ins
outs
sti
movs
in
fbstp
out
xor
mov
mov
(bad)
mov
cmps
(bad)
loope
shl
fist
loopne
add
cmc
mov
stc
loop
cmovle
jge
sti
daa
int
fwait
pop
outs
jb
psadbw
adc
mov
mov
das
push
mov
(bad)
stos
jno
rcr
ror
jmp
daa
out
fiadd
rcr
dec
jecxz
lahf
push
push
imul
ins
mov
jbe
test
(bad)
cmp
push
(bad)
and
mov
test
pop
(bad)
adc
jle
xor
sbb
inc
(bad)
xor
dec
loopne
pop
ret
add
stc
fist
or
lds
mov
sub
scas
mov
aas
jb
lahf
jae
mov
add
fmulp
dec
sbb
jmp
call
(bad)
call
jns
(bad)
jg
nop
aam
bsr
clc
icebp
cmp
addr16
pop
dec
std
and
adc
icebp
pop
cmp
mov
pop
mov
dec
call
fcomip
mov
xlat
ret
div
fisttp
pop
popa
std
(bad)
mov
sub
mov
fisubr
fdiv
sbb
dec
and
std
neg
std
push
pop
je
arpl
xchg
int3
cmp
xor
jg
mov
push
jg
(bad)
mov
cmovne
dec
lahf
add
mov
imul
mov
jp
pop
int
jmp
test
popf
xchg
push
xor
dec
mov
mov
hlt
es
sti
cmp
lahf
call
lahf
call
jp
test
jecxz
adc
push
jae
fcomp
mov
addr16
std
cli
mov
cld
pusha
(bad)
pop
jecxz
int3
rcr
js
mov
add
cli
ror
addr16
repz
lods
cmp
nop
scas
sub
xor
lahf
xchg
jg
mov
cli
mov
mov
(bad)
in
xor
adc
(bad)
cmp
fistp
inc
(bad)
push
daa
neg
cmp
(bad)
inc
pop
xchg
cmp
stos
(bad)
jge
(bad)
ficomp
out
std
arpl
int
or
ret
outs
cmc
mov
jge
call
dec
cmp
xor
sbb
jle
dec
jg
push
pop
aam
out
jmp
ret
movs
pop
sbb
jmp
stc
int
cs
jbe
dec
sbb
inc
jno
ins
push
stos
inc
cmc
mov
lods
test
and
test
sbb
push
xchg
ja
ror
outs
pusha
push
(bad)
sub
lds
push
fsubr
mov
push
pop
fnstcw
call
and
test
pop
cmc
icebp
xchg
paddb
sub
jg
scas
aam
aaa
test
pop
les
or
jmp
push
in
sbb
mov
hlt
hlt
xchg
inc
xlat
and
pop
jne
rol
mov
mov
fnstsw
loopne
xchg
lds
jne
jmp
xor
mov
icebp
jns
mov
(bad)
mov
add
out
xor
jae
cmp
je
fdiv
adc
stos
inc
mov
(bad)
and
dec
jmp
push
jle
xchg
sub
pop
sar
stos
loop
push
pop
jbe
lds
dec
out
test
scas
sar
inc
mov
shl
mov
push
(bad)
gs
xchg
xchg
mov
outs
add
cmps
mov
ins
call
sbb
stos
cmp
out
movs
dec
lods
stos
or
daa
ins
or
jbe
mov
pop
sbb
xor
mov
loop
(bad)
inc
jmp
ss
popf
push
sbb
adc
out
imul
out
mov
pusha
je
xchg
dec
in
sbb
ret
inc
xchg
(bad)
inc
dec
leave
out
cmp
mov
adc
in
add
mov
add
mov
dec
inc
inc
push
popa
cmp
movs
das
xor
(bad)
xchg
push
pop
mov
data16
jle
hlt
shl
push
mov
adc
stos
out
jge
loope
(bad)
mov
xchg
dec
out
aad
xlat
xchg
mov
mov
(bad)
call
ja
jle
cwde
jl
shl
jp
call
mul
jns
test
sbb
aas
bound
sub
repz
mov
mov
das
pop
sub
stos
in
sub
cmps
outs
out
or
test
mov
aad
(bad)
push
aam
mov
push
mov
push
dec
fsubr
and
test
fwait
aad
sbb
mov
sbb
mov
sub
add
ficomp
inc
mov
cmps
ins
add
mov
sub
out
pop
mov
jnp
cmc
sbb
xchg
leave
push
cmps
push
push
push
cld
jmp
push
test
movs
jnp
push
cs
or
fild
cs
mov
in
mov
mov
outs
or
movs
ja
dec
loope
out
out
(bad)
fsubr
mov
stos
(bad)
pop
cmps
loopne
sub
mov
inc
xchg
sti
mov
sbb
cmp
jb
jp
lods
ss
adc
dec
cdq
rcl
adc
sbb
mov
fdivrp
push
mov
xlat
jns
add
jg
push
stc
outs
test
daa
fs
inc
(bad)
mov
push
inc
push
add
nop
adc
push
pop
loop
mov
mov
adc
mov
add
cmp
iretw
imul
sbb
scas
xchg
std
mov
arpl
cld
xchg
adc
cli
mov
inc
jle
mov
cmp
ss
jl
inc
push
jae
mov
(bad)
iret
add
(bad)
mov
jle
xor
sbb
push
jo
mov
dec
push
sub
sbb
cmps
imul
jl
cmp
pop
cmp
or
jge
sbb
out
inc
jb
jb
pushf
sub
(bad)
stc
jp
leave
aas
inc
fstp
scas
pop
xchg
mov
test
add
push
das
ja
inc
stc
adc
shl
or
nop
xchg
iret
clc
push
inc
and
pop
mov
xchg
mov
mov
(bad)
xchg
xchg
fs
jecxz
es
(bad)
mov
mov
sahf
shl
mov
xchg
push
jl
push
sub
int
aaa
mov
stos
sub
pop
sbb
or
and
gs
xor
pop
cmps
loop
cmp
mov
push
scas
xchg
icebp
jb
mov
xchg
lahf
cmp
cmc
push
outs
pop
pop
dec
cld
(bad)
push
test
sub
mov
jl
aas
add
sub
cmp
fs
cmp
in
int3
and
sub
jecxz
mov
mov
test
arpl
mov
frstor
les
(bad)
and
jg
arpl
xor
mov
leave
push
and
mov
dec
xchg
stos
sub
call
pop
pop
push
sub
imul
adc
push
stos
xchg
mov
dec
xor
dec
xchg
std
ins
cmp
jmp
test
dec
mov
cmps
test
pop
mov
cdq
jo
fs
jno
xchg
scas
mov
xchg
scas
push
push
or
movs
ret
or
jg
push
dec
inc
ret
xchg
pop
dec
sub
stc
ret
fstp
call
adc
add
repnz
dec
xchg
retf
mov
sub
push
call
fimul
adc
cs
sub
adc
sub
jmp
movs
shl
retf
icebp
inc
repnz
xchg
into
addr16
je
shl
dec
or
out
sahf
push
jmp
inc
cmp
cmps
mov
imul
xlat
std
aad
sub
ror
nop
or
pop
sub
cmps
mov
sub
and
dec
inc
sti
(bad)
push
test
inc
stos
dec
dec
mov
sbb
in
mov
push
sbb
dec
in
xor
mov
adc
xor
fwait
stos
mov
push
dec
xchg
icebp
pusha
es
test
dec
retf
clc
mov
pop
sub
retf
push
popf
pop
ror
xchg
dec
sti
mov
push
adc
cs
mov
push
sub
mov
cs
or
mov
pop
or
fsub
wbinvd
imul
(bad)
fs
pop
dec
daa
(bad)
in
sbb
ins
push
dec
ret
xor
mov
add
(bad)
pop
call
mov
push
retf
xor
cmp
sub
adc
fwait
dec
(bad)
mov
cs
mov
mov
pop
cmp
push
or
imul
scas
xlat
rol
jg
cwde
test
cmp
imul
xor
or
daa
inc
pop
stos
mov
xor
push
stos
aad
mov
mov
movs
mov
pop
xor
scas
adc
call
mov
repnz
dec
and
repnz
rcr
mov
mov
add
xchg
or
retf
inc
ret
stc
pop
mov
xchg
test
push
adc
(bad)
and
stc
fs
sbb
jnp
imul
cmp
mov
scas
sub
jmp
out
retf
adc
pop
sub
jl
mov
xor
movs
or
push
cmp
fwait
sar
mov
push
scas
stc
push
nop
das
push
sub
jae
loop
out
ret
pop
xchg
shr
shl
xor
(bad)
xor
js
sbb
add
jbe
xor
cmp
or
xchg
call
jno
ja
xchg
je
sbb
clc
and
pop
and
sbb
sbb
pop
sbb
mov
test
push
ja
scas
adc
je
ret
ficomp
xchg
imul
out
or
pop
cmp
dec
and
jmp
cmp
pop
or
pusha
and
movs
xor
neg
in
jge
call
jo
movs
and
test
sbb
adc
imul
adc
fs
cmc
dec
mov
mov
xchg
movs
mov
mov
push
es
sbb
out
out
nop
int
(bad)
cmc
je
cdq
lods
daa
jecxz
or
imul
add
xlat
mov
push
test
mov
sbb
xlat
dec
jns
and
mov
adc
pop
or
jmp
or
cmp
test
xor
cli
xchg
call
inc
and
xchg
dec
fs
mov
std
jb
xchg
xchg
imul
int
xor
push
(bad)
ins
inc
hlt
and
xchg
loop
and
push
push
push
movs
int3
mov
das
mov
mov
mov
or
cmps
mov
inc
loopne
fwait
fwait
mov
jge
sub
(bad)
pop
pop
dec
in
test
xor
cwde
and
imul
pop
cmp
cs
xor
sub
pop
outs
add
push
pop
xchg
xchg
pushf
aas
pop
or
dec
call
pop
push
jmp
test
js
pop
int3
inc
jmp
push
and
mov
das
in
mov
ds
data16
mov
push
test
jge
lds
into
cli
sbb
daa
and
enter
and
sub
cwde
xor
bndstx
jo
and
jmp
ins
out
mov
test
cmp
ret
sti
xchg
push
or
bound
cmp
inc
into
retf
push
mov
sbb
jo
shr
test
push
adc
ret
sar
dec
add
pop
inc
pop
test
lahf
out
sub
aas
fild
scas
add
sbb
add
sbb
sub
inc
test
cs
jl
xor
mov
mov
push
pushf
cld
gs
mov
out
sbb
xor
mov
lods
ret
popa
push
pop
loopne
(bad)
sub
aaa
enter
aad
or
sbb
adc
in
push
aam
fwait
inc
sub
rcl
les
(bad)
xchg
dec
push
xchg
cmp
xchg
stc
mov
mov
mov
jo
std
ss
mov
xchg
inc
fld
cmp
test
inc
mov
rol
xchg
icebp
push
xor
into
bound
data16
call
sbb
sbb
mov
cdq
xchg
inc
mov
movs
cmp
outs
enter
data16
mov
dec
imul
mov
adc
push
mov
ja
jmp
test
mov
retf
rol
(bad)
push
adc
mov
xor
mov
mov
push
sub
pop
push
xchg
mov
cmp
push
dec
adc
mov
sbb
add
xor
test
loope
bound
sahf
out
icebp
sbb
mov
shr
aaa
and
mov
push
jne
push
stos
inc
jge
aas
ins
push
mov
dec
enter
lods
in
mov
sub
mov
mov
lods
xchg
mov
sub
rcr
pop
xchg
jge
cs
in
daa
shl
xchg
pop
mov
leave
es
sub
pushf
dec
push
cmp
rcl
aas
add
add
or
inc
mov
test
ins
inc
inc
sbb
stos
loop
nop
mov
sub
add
aaa
jmp
cwde
mov
fs
ss
or
jmp
rol
shl
push
jg
adc
push
call
adc
xor
or
loopne
popa
xchg
jl
adc
mov
adc
xchg
inc
dec
mov
js
sub
aam
clc
arpl
sub
scas
push
mov
sub
shl
cmc
adc
shl
mov
and
mov
retf
mov
icebp
enter
dec
adc
ja
outs
in
ja
sub
jne
mov
cdq
push
inc
lods
in
pop
xor
push
scas
shl
cmp
mov
ror
add
and
in
pop
fxch
sub
(bad)
dec
call
jne
adc
dec
mov
push
mov
int3
pusha
sbb
es
xor
mov
cmp
or
ins
cmc
aad
pop
enter
xchg
retf
fwait
xor
pop
pop
pop
pop
xchg
mov
sbb
das
cli
inc
fsub
xchg
rcr
ret
mov
xor
dec
xor
xor
push
aad
jg
dec
sub
(bad)
loope
(bad)
shr
inc
into
push
std
add
inc
inc
mov
mov
adc
mov
cli
fcmove
push
and
pop
jne
xor
aas
add
dec
mov
js
add
mov
jmp
mov
and
push
cwde
dec
jl
push
adc
dec
loop
add
lds
mov
xor
cmps
sub
cmp
push
(bad)
fs
inc
jl
aad
jbe
xlat
dec
xchg
fild
fiadd
pop
rol
outs
rol
push
pop
scas
and
jecxz
jno
push
sub
or
mov
xor
dec
stos
xlat
addr16
push
cmc
repz
pop
sub
gs
(bad)
cld
inc
call
dec
cmp
mov
daa
mov
sbb
inc
inc
stc
mov
stc
and
mov
in
sub
jae
xlat
inc
repz
inc
mov
xchg
push
mov
inc
pop
es
xchg
cmp
sbb
sub
and
outs
mov
mov
mov
jns
mov
js
inc
loope
dec
rcl
lds
mov
stos
push
adc
dec
or
and
cs
fnstenv
repnz
cmp
add
sub
jmp
dec
or
sub
dec
addr16
lods
addr16
je
push
mov
and
movs
cmp
inc
jge
fs
xchg
xlat
mov
nop
test
and
neg
sahf
dec
and
pop
sub
fs
sub
and
sbb
jae
xor
pushf
mov
test
retf
and
ret
adc
movs
es
ins
cmp
jno
xor
movs
jnp
push
adc
dec
inc
mov
das
sbb
mov
push
test
jo
and
scas
and
add
arpl
imul
cli
popa
jne
test
dec
in
xchg
aaa
xchg
jo
ror
or
adc
iret
movs
pop
xchg
imul
sub
adc
jmp
pop
cmps
cmp
mov
jp
ins
leave
popf
or
xor
enter
dec
add
shl
fxch
shr
mov
outs
fdivr
(bad)
xchg
das
adc
push
mov
jne
cs
push
sub
or
je
xlat
leave
(bad)
push
mov
fnstenv
mov
lea
add
movs
mov
push
cld
push
lds
ret
(bad)
in
and
mov
cmp
adc
retf
dec
je
ins
xor
push
cmp
fld
mov
nop
sub
mov
test
fs
popf
sbb
in
mov
mov
nop
pop
or
mov
stos
sbb
ret
fld
add
and
mov
repz
ret
or
add
pop
cmp
adc
mov
mov
xchg
pop
fst
jno
jne
jno
xchg
fstp
imul
(bad)
xchg
dec
mov
ins
jmp
lods
mov
ja
rcr
xor
les
ds
xchg
dec
xchg
push
inc
(bad)
(bad)
cmp
cs
hlt
(bad)
je
push
mov
rol
sub
mov
bound
in
mov
ret
sbb
and
xor
sub
pop
cmp
sahf
mov
aaa
iret
popf
test
(bad)
dec
std
sbb
jmp
cmps
xchg
mov
popa
mov
or
cmp
xchg
aaa
data16
scas
aam
jmp
dec
mov
lods
int
sub
pushf
cwde
pop
jae
xchg
adc
in
mov
data16
fucom
sbb
rcl
xchg
out
pusha
mov
dec
cli
adc
lds
fsubr
fcom
and
loope
cs
or
cwde
xor
mov
js
fwait
syscall
dec
shr
mov
scas
jbe
ret
mov
sub
scas
push
mov
shr
pop
inc
and
jno
or
ja
sbb
dec
jno
sub
loope
hlt
ret
jmp
inc
cmp
push
pop
pop
sub
stc
jl
pop
mov
mov
movs
pop
das
or
and
(bad)
popa
xchg
das
ucomiss
ror
mov
movs
in
lea
inc
cmps
nop
jae
xor
scas
(bad)
jl
inc
rol
push
pusha
lahf
test
movs
inc
xchg
cwde
mov
pushf
ss
jmp
pop
in
prefetch
ret
arpl
push
sahf
lods
sti
push
jb
sbb
movs
cmp
push
fcmovne
sub
jne
nop
xor
fcmovbe
cmp
dec
mov
nop
or
inc
adc
mov
inc
mov
call
sub
imul
lds
mov
adc
out
jo
adc
and
(bad)
std
sbb
and
scas
xchg
loope
clc
loop
jp
sub
cmps
out
or
xor
mov
sub
test
cdq
and
pop
aaa
cmp
mov
cs
dec
mov
or
dec
inc
lds
shl
add
sbb
gs
retf
mov
sbb
add
in
cmp
push
xchg
out
mov
sbb
xchg
cmc
or
xchg
or
or
mov
mov
xor
shl
xor
adc
and
push
sbb
imul
mov
cmc
cwde
jmp
daa
repnz
mov
push
cmp
push
jae
jmp
mov
pop
test
inc
test
mov
cmp
lods
enter
inc
add
retf
jne
dec
mov
les
mov
fisttp
inc
and
or
mov
xor
adc
enter
xor
adc
mov
movs
into
xor
test
inc
icebp
fcom
stos
and
mov
sbb
jno
inc
sahf
dec
adc
arpl
jne
and
adc
adc
mov
data16
mov
int3
push
and
or
ja
fs
sub
push
inc
pushf
mov
std
mov
and
push
jge
in
dec
les
sub
imul
ins
cmp
mov
cmp
mov
repz
xor
in
sbb
push
cwde
fstp
mov
xor
mov
in
retf
xor
nop
inc
and
clc
push
call
pop
xchg
arpl
sbb
ficom
add
jl
(bad)
ja
fs
(bad)
jmp
inc
rol
mov
push
les
mov
(bad)
add
shl
fstp
mov
mov
leave
pop
pusha
outs
inc
push
inc
xchg
shr
and
cmp
inc
and
inc
sub
ret
in
jmp
or
sub
ss
jle
pushf
js
nop
jae
push
jmp
sbb
xor
jle
cmp
fild
push
rcl
fsubr
or
fst
adc
jb
cmp
mov
cmp
add
sbb
and
ja
in
push
sbb
push
cdq
inc
jle
push
pop
jo
sahf
outs
in
lea
movs
int
mov
inc
jg
in
mov
mov
lea
ins
jae
sti
jge
mov
mov
mov
xchg
int3
push
or
sub
daa
pop
cmp
fld
mov
sahf
cmc
cmps
cmp
mov
ror
xor
lock
pop
ss
adc
out
cmps
mov
dec
mov
scas
in
cmp
ss
out
inc
mov
stc
mov
js
test
xor
add
adc
sub
jb
dec
arpl
mov
add
cmp
xor
mov
ficomp
movs
loope
mov
lea
ficom
bound
jle
mov
adc
mov
(bad)
test
aaa
sub
outs
aaa
mov
outs
push
jae
nop
loop
sub
xchg
fisub
inc
or
outs
aam
movs
adc
ret
popf
or
xchg
dec
sub
xchg
pusha
cmp
sahf
add
jmp
adc
push
inc
mov
pop
sub
cmp
(bad)
xchg
(bad)
push
xor
adc
xchg
inc
in
ja
and
rcr
push
dec
or
mov
push
xchg
jecxz
jns
scas
sahf
out
into
cmps
mov
jb
push
retf
sub
out
pop
enter
push
mov
pop
pcmpgtw
shl
sahf
sub
movs
sbb
dec
iret
jmp
jnp
jg
les
cs
push
dec
sar
and
sbb
movs
inc
in
lods
or
xchg
inc
pushf
dec
cli
jne
push
(bad)
mov
fdiv
sbb
shrd
or
and
jb
pop
cs
mov
fisub
adc
shl
pop
or
pop
or
xchg
out
xchg
or
cmc
sub
test
scas
in
and
and
dec
mov
mov
jge
mov
daa
push
jns
add
les
aam
inc
mov
jns
loop
daa
xor
xor
fiadd
push
xchg
(bad)
mov
push
jg
sbb
in
mov
test
inc
pop
ds
fcomp
push
or
mov
push
js
jne
pop
mov
lds
mov
mov
imul
sub
inc
in
outs
inc
jne
in
cmp
xchg
or
mov
push
lods
sbb
pusha
mov
cmp
push
add
es
fs
(bad)
lea
sub
int3
sbb
add
jmp
jnp
add
(bad)
scas
imul
pop
iret
sbb
jne
div
jno
fisub
js
cmc
add
xor
dec
(bad)
adc
jne
stos
add
add
jmp
push
jne
out
sub
js
cmp
xchg
jle
push
mov
pop
and
or
loop
ds
cmps
sub
or
outs
xchg
(bad)
adc
cmps
cmp
ins
mul
ret
ja
adc
jbe
ret
sub
dec
jge
loop
or
push
dec
fidiv
fwait
test
imul
dec
jb
dec
pushf
mov
into
daa
iret
mov
cmp
into
ret
sbb
test
dec
enter
cmp
test
clc
sub
cdq
sub
sar
inc
xlat
push
inc
push
xchg
mov
push
or
in
xor
lods
or
xchg
or
xor
jnp
mov
add
mov
hlt
mov
push
inc
movs
push
arpl
jbe
xlat
sub
cmp
call
add
nop
sub
retf
mov
jmp
lahf
xor
cmp
push
pop
shr
retf
pop
xchg
xchg
pop
dec
popa
xchg
inc
mov
test
enter
ret
sub
push
mov
int3
push
cmp
inc
sbb
test
leave
test
push
(bad)
ins
les
adc
out
cwde
loop
shl
inc
cmp
retf
icebp
pusha
and
loope
pop
cmp
cmp
aad
es
xor
aaa
sbb
pop
out
sbb
and
je
xchg
dec
out
mov
xchg
popa
sbb
push
stos
cmps
es
adc
scas
scas
or
and
add
les
test
cmp
aad
ins
push
xchg
(bad)
in
sub
sbb
push
jne
cld
push
aad
dec
cdq
test
dec
xchg
sbb
jo
loopne
push
rcl
int
lock
xor
xor
mov
inc
pop
ds
mov
dec
xchg
loope
and
dec
fnsave
push
inc
shl
(bad)
sub
imul
cmp
mov
add
cmp
pop
je
or
cmp
pop
test
sar
into
push
mov
in
jle
or
pusha
add
loop
dec
ret
movs
ret
jmp
push
push
mov
push
mov
int
std
cs
nop
xor
mov
lock
cld
or
inc
scas
mov
retf
sbb
push
push
loop
cmp
push
sbb
cmp
or
retf
movs
retf
mov
inc
js
cmp
sub
mov
test
test
enter
dec
push
imul
inc
and
int3
push
inc
movs
js
call
out
cdq
push
aad
cmp
test
shl
outs
adc
or
loop
pop
xchg
and
inc
cmp
ja
pushf
dec
xchg
ror
jl
ja
jl
addr16
ja
pop
scas
cmps
xor
pop
cmp
lods
leave
jns
push
dec
or
adc
adc
int
pop
sub
je
stos
sbb
and
and
or
and
push
sbb
inc
inc
loopne
lea
inc
outs
dec
sar
ror
and
add
sub
mov
and
stos
push
aad
aad
sbb
iret
sbb
aad
in
ins
and
stos
xchg
or
dec
and
lock
dec
lds
inc
pusha
daa
push
and
cmps
(bad)
push
xor
jb
cmp
pop
pop
retf
xchg
dec
push
inc
fstp
pop
test
jno
push
and
dec
xchg
add
jp
shl
mov
les
pop
int3
lahf
leave
daa
cmp
cwde
ins
test
or
pop
mov
lea
sti
pop
in
out
mov
js
dec
es
and
xor
pop
lods
and
outs
inc
jge
push
imul
sbb
ret
add
mov
mov
push
push
add
pop
jno
mov
(bad)
and
icebp
mov
retf
push
jmp
sbb
cwde
out
cld
scas
mov
sub
add
sub
cs
cmp
jp
cmp
jp
out
mov
lods
sahf
pop
pop
mov
dec
movs
mov
cmp
push
popa
out
arpl
adc
into
push
add
pop
mov
add
leave
cmps
bound
gs
mov
push
inc
xchg
call
pop
imul
pop
mov
xor
pop
adc
sbb
cwde
or
xchg
mov
out
dec
leave
das
ins
mov
or
jmp
dec
cs
fdiv
ss
or
mov
cdq
movs
dec
xor
btr
dec
cmp
mov
xchg
add
call
(bad)
mov
cmp
inc
push
cmp
pushf
stos
mov
dec
movs
mov
add
sahf
lods
(bad)
xlat
add
fidivr
ret
fst
(bad)
movs
or
into
cwde
loop
jl
out
cdq
and
dec
std
mov
dec
xor
xchg
add
or
xchg
inc
(bad)
inc
adc
cmp
movs
lock
xchg
daa
or
pop
es
xchg
sar
xor
and
in
into
push
je
adc
(bad)
sti
rcr
xchg
jb
inc
sub
mov
das
or
adc
cmp
xchg
loope
xchg
mov
(bad)
faddp
cwde
sbb
inc
dec
test
in
mov
xchg
xor
push
mov
and
jp
add
arpl
ret
test
test
push
lea
mov
inc
fmul
push
adc
xor
mov
pop
bound
enter
fsub
and
mov
cs
adc
inc
mov
scas
lds
push
xor
stos
lds
loop
mov
push
mov
int3
mov
arpl
mov
sbb
push
push
jl
push
dec
jo
sbb
or
mov
push
sub
je
aam
(bad)
inc
pop
xor
pop
cmp
dec
mov
sub
sub
ins
scas
mov
xor
scas
ins
mov
addr16
mov
retf
inc
mov
push
inc
rol
stos
add
lods
daa
rol
push
or
cmp
jp
push
xchg
jmp
pop
jno
add
jmp
repz
sub
lea
pop
dec
pop
test
push
test
and
fcmovne
test
sbb
dec
(bad)
mov
sub
bnd
mov
inc
sbb
cmps
fidivr
or
les
ret
in
pop
pushf
mov
or
xchg
lds
mov
add
jbe
fwait
mov
push
push
pop
push
shl
xchg
out
jp
ds
sbb
loopne
jae
jns
and
mov
jae
mov
xor
dec
inc
cwde
sbb
mov
ret
gs
aaa
aam
push
in
stos
dec
fsub
xlat
lds
pop
(bad)
add
mov
dec
mov
cld
outs
es
mov
jnp
inc
in
(bad)
jg
loop
add
cmp
movs
loopne
xchg
retf
lods
xchg
xchg
or
outs
into
jb
ret
daa
fwait
push
sahf
add
cmp
(bad)
mov
pop
gs
sub
mov
mov
push
sbb
xor
movs
push
or
xor
fistp
dec
leave
push
aas
mov
sbb
push
imul
or
fadd
adc
or
push
test
and
dec
ds
xchg
fs
dec
pop
in
and
je
lods
out
pop
ret
das
pop
enter
add
mov
jecxz
cld
rol
mov
mov
push
xlat
and
(bad)
push
pop
add
pop
mov
enter
pusha
sub
push
(bad)
pop
or
and
dec
arpl
test
sub
or
push
scas
push
xor
cmp
pop
pop
sbb
mov
inc
push
and
rcl
jmp
lods
outs
sub
sbb
sbb
sbb
(bad)
ins
jo
loope
test
sbb
test
push
or
(bad)
popa
adc
inc
mov
sbb
cwde
push
xor
jmp
inc
mov
and
out
in
mov
push
dec
push
ret
aas
pop
or
ret
pop
clc
jns
hlt
add
xor
nop
cmp
push
pop
movs
outs
movs
cs
mov
(bad)
setp
sub
lods
gs
inc
xor
xlat
inc
fstp
sub
inc
cwde
jno
add
dec
inc
imul
lds
int3
xchg
gs
popa
lds
jne
pop
stos
pop
or
adc
sbb
aaa
mov
icebp
outs
sub
inc
in
jmp
fidivr
ds
(bad)
or
sbb
lds
sub
mov
fwait
stos
jl
adc
aam
mov
fdiv
jecxz
(bad)
jl
lods
sbb
(bad)
jae
mov
(bad)
neg
movs
push
enter
mov
jne
mov
bound
or
fcom
(bad)
popf
pop
bound
inc
mov
pop
lods
adc
lds
addr16
pop
fst
mov
in
call
xor
sub
int
inc
es
inc
inc
outs
inc
scas
cli
adc
mov
cdq
sub
pusha
push
loope
retf
into
mov
mov
popf
cmc
jmp
arpl
push
fadd
pop
and
jne
jmp
sbb
dec
fld
vpsrad
gs
das
in
push
and
mov
fsubr
jecxz
aad
pop
pop
inc
mov
inc
icebp
xchg
movs
sub
sub
or
or
sbb
add
jecxz
and
push
cwde
outs
jecxz
push
xchg
or
retf
push
lds
pushf
xchg
push
loop
mov
sbb
mov
xchg
mov
pusha
xor
iret
xchg
push
jle
push
mov
es
mov
adc
adc
sub
dec
test
and
add
adc
or
pop
adc
test
neg
aad
xchg
(bad)
dec
adc
gs
cmc
shl
mov
cdq
sub
test
push
retf
push
jl
pop
dec
adc
shr
push
jmp
xor
mov
lds
jge
push
dec
xlat
mov
movs
repz
pushf
repnz
sub
xor
or
pop
lods
push
sub
xor
xor
jb
and
cmps
repnz
xchg
lea
jb
push
mov
loopne
pop
dec
push
dec
ja
mov
ficomp
sub
jp
mov
inc
sbb
shr
mov
pop
cmp
ins
push
jecxz
movs
loop
cmp
(bad)
hlt
(bad)
mov
scas
add
sbb
fsub
adc
repz
xchg
aad
dec
or
add
sbb
dec
mov
jle
add
xchg
test
test
adc
cmp
out
push
sub
push
jb
mov
fld
xchg
xor
leave
outs
dec
lock
sub
cmp
cmps
bound
scas
jae
jnp
push
mov
mov
sub
cmc
lods
pusha
xor
sub
jl
add
jmp
inc
(bad)
neg
in
in
push
sbb
cs
cmp
and
imul
sub
outs
sbb
mov
enter
xor
int3
xor
les
xchg
push
icebp
mov
xor
lods
imul
dec
push
retf
dec
ins
pop
sbb
or
push
push
push
(bad)
cmp
ins
fldcw
scas
xchg
dec
leave
push
shl
addr16
inc
ja
lahf
int3
and
push
ror
adc
stc
jo
lahf
leave
mov
daa
sub
ins
adc
mov
scas
push
pop
sub
or
pop
and
imul
movs
inc
cdq
push
dec
stos
cwde
and
sub
push
mov
mov
push
es
mov
pop
(bad)
outs
movs
dec
cmp
lahf
jl
ins
push
out
lock
outs
jb
push
mov
cmps
mov
dec
xor
xor
push
cmp
iret
bound
fcom
je
test
nop
hlt
daa
mov
sbb
nop
retf
(bad)
fwait
mov
jge
push
push
or
sbb
es
out
and
ja
jbe
and
inc
retf
loope
jne
xchg
ret
pop
int
and
cwde
push
arpl
sbb
test
or
and
pop
out
cmp
fs
dec
mov
cmc
cmp
push
pop
cmp
mov
ret
das
xchg
xchg
arpl
xor
and
les
rcl
push
loope
cmps
(bad)
fstp
lahf
sub
bound
enter
or
sub
mov
and
inc
jae
mov
dec
inc
std
nop
push
pextrw
jge
sub
aad
mov
and
pop
or
cmp
aaa
and
and
sub
fs
mov
mov
clc
cmps
push
pop
mov
test
lock
mov
int3
xchg
jl
mov
push
jmp
dec
ss
inc
dec
ret
rcr
push
xchg
push
add
cmp
imul
xchg
shr
fldenv
cmc
and
pop
sbb
xor
push
lods
add
cld
add
mov
add
and
jno
in
(bad)
fsub
adc
popf
cmp
or
into
add
ret
out
xor
inc
push
mov
shr
daa
jo
push
adc
(bad)
rol
pop
movs
mov
inc
fnstsw
add
outs
daa
sub
fs
mov
aam
jg
push
popf
bound
or
mov
push
mov
ret
lods
xchg
cmc
xchg
shl
jp
push
retf
popf
mov
and
mov
xor
pushf
jmp
pop
pop
and
fsub
cwde
xor
rol
movs
pushf
mov
lods
ret
push
mov
pop
or
fist
aam
and
sbb
mov
mov
inc
lea
loope
xor
push
push
push
int3
jmp
test
das
ret
imul
scas
cmps
je
imul
jns
and
jmp
dec
test
ins
cs
movs
dec
adc
sti
je
pop
or
icebp
loope
and
rcr
pop
jge
or
push
xor
inc
inc
mov
pop
mov
fs
adc
push
push
test
stos
nop
pop
sbb
xchg
mov
pop
mov
dec
add
xchg
in
fs
mov
das
inc
je
or
cmp
add
loope
(bad)
dec
stc
inc
cmp
xor
in
push
cdq
adc
mov
sbb
add
scas
sbb
pop
mov
das
cli
repnz
pop
and
adc
push
stos
and
xor
push
jae
out
inc
sub
pusha
cs
sub
mov
pop
inc
sbb
mov
sbb
jae
and
popf
sub
adc
(bad)
mov
aam
aaa
stc
movs
jg
cmp
adc
jns
sbb
mov
ja
xchg
push
push
or
push
dec
adc
inc
mov
jno
in
jge
sbb
inc
jl
pop
mov
sub
imul
cld
pusha
dec
sub
sbb
fldz
pusha
mov
sar
inc
clc
xor
dec
jmp
repz
in
cmp
add
cli
sub
cld
rcr
pop
dec
xchg
sub
sbb
mov
jb
adc
(bad)
imul
ficom
xchg
rcl
mov
push
xchg
jmp
mov
xor
xlat
push
jbe
jmp
pushf
xchg
dec
(bad)
scas
js
popf
into
xchg
sbb
sbb
cmp
cmps
push
adc
cs
push
outs
push
int3
into
push
scas
or
dec
add
es
out
push
ret
xor
rcl
cwde
cmp
jo
cmp
xlat
shl
and
dec
mov
(bad)
daa
stc
xor
ficomp
pop
xor
cmps
mov
xor
xchg
mov
das
dec
mov
inc
cld
pop
arpl
push
clc
rol
movs
mov
mov
retf
cdq
push
out
test
mov
int
xor
xor
sub
mov
cs
pop
sub
lds
jbe
mov
xor
pusha
stos
sbb
sub
lods
xchg
jae
mov
inc
and
rol
arpl
sbb
push
aas
dec
xchg
mov
scas
xor
lods
nop
lods
pop
mov
repnz
mov
retf
lds
pop
call
movs
push
mov
mov
out
jb
sbb
es
nop
add
jbe
data16
mov
test
mov
(bad)
fiadd
push
mov
icebp
fcomp
lods
push
dec
outs
xor
cmps
movs
aas
inc
shl
mov
xchg
xchg
push
cmps
mov
cmp
das
and
leave
jo
fimul
push
jg
pop
inc
push
cdq
dec
(bad)
js
pop
inc
add
dec
fdiv
stos
cs
enter
aad
cmp
int
(bad)
scas
repz
dec
push
retf
xor
dec
mov
mov
pop
das
es
mov
push
(bad)
aad
lock
cmps
movs
adc
mul
repnz
cmp
sub
int
cmps
dec
add
sbb
pop
scas
sbb
xchg
jnp
jl
bound
sbb
nop
sub
mov
inc
push
xor
sub
add
and
sub
jo
adc
lahf
scas
sub
scas
pop
test
ins
loope
cmc
push
movq
push
mov
in
pushf
push
in
jnp
jno
(bad)
jmp
cmp
xor
push
jne
cmp
and
inc
imul
loope
xor
sub
xor
shl
mov
mov
jae
cmp
sahf
mov
adc
xchg
sbb
cli
pop
hlt
ja
shl
stos
out
jnp
jb
mov
js
or
mov
adc
jle
lea
fwait
cmp
iret
adc
and
ds
sbb
pop
fild
fisub
mov
jbe
data16
ins
mov
(bad)
bound
test
adc
mov
stos
mov
mov
inc
ror
mov
retf
pop
mov
fwait
in
or
mov
fs
fdivr
in
sbb
dec
inc
cmp
test
mov
arpl
outs
fldenv
fwait
leave
cmps
add
das
pop
mov
mov
sub
stos
add
mov
cmp
arpl
call
add
nop
pop
repz
xchg
cli
inc
leave
addr16
(bad)
in
inc
mov
inc
push
mov
test
and
cmp
inc
and
sbb
xor
pop
ja
push
adc
(bad)
xchg
dec
js
in
sbb
in
(bad)
sar
je
sbb
mov
jp
gs
sbb
or
popa
sub
push
icebp
inc
sub
adc
aas
ins
mov
loopne
loop
cmps
nop
or
xchg
mov
inc
mov
add
mov
push
xchg
pop
xor
and
vmovntps
and
add
and
shl
push
shr
sub
bound
and
cmps
adc
aas
stos
fs
sub
mov
jae
outs
add
mov
jp
add
cmps
mov
cmc
pop
push
imul
test
sbb
pop
icebp
mov
or
inc
lahf
pop
jns
pop
retf
cmc
jp
pop
sysret
inc
jmp
pop
pop
push
push
retf
mov
and
je
sbb
push
ss
sub
shl
cs
mov
retf
pop
jecxz
sub
es
and
add
daa
inc
aaa
es
mov
inc
loopne
test
not
mov
mov
mov
push
sub
rcr
push
(bad)
fild
scas
or
cmps
inc
addr16
cmps
test
adc
inc
push
int3
xor
mov
xor
xchg
pop
xor
dec
repz
cwde
aad
cmp
and
add
mov
fcomp
mov
mov
inc
out
into
arpl
mov
sbb
dec
jbe
inc
out
xchg
nop
pop
xor
nop
sbb
dec
fcom
lock
pop
jle
in
adc
xchg
lds
sub
add
std
cmp
leave
push
and
leave
sub
or
or
and
aad
add
xor
push
mov
pop
xor
popf
inc
jge
pop
cmc
test
jne
sbb
mov
and
jmp
test
bound
sbb
fs
rol
add
adc
dec
add
xchg
sbb
imul
dec
fsub
jmp
jbe
ins
fs
sar
bound
loopne
inc
fndisi(8087
arpl
add
js
mov
sbb
ret
arpl
cmp
into
jecxz
or
sub
and
push
fld
cmp
sbb
int
and
shl
repz
add
mov
call
mov
retf
cwde
lods
fadd
iret
and
rol
pop
xor
and
and
in
fs
scas
lock
scas
ins
sub
push
add
sub
sub
add
adc
imul
cwde
sub
bound
push
lods
inc
retf
add
push
dec
out
sbb
leave
aad
cmc
out
sahf
je
adc
push
arpl
sub
loop
xchg
xor
or
mov
xchg
or
arpl
mov
dec
cwde
pop
nop
add
movs
push
ret
mov
mov
mov
push
adc
jns
(bad)
mov
sub
(bad)
lds
lea
dec
or
inc
ror
and
xor
or
out
inc
in
sbb
rol
ja
ret
jp
mov
popa
fdiv
add
leave
or
xchg
cmp
xchg
aas
fwait
mov
mov
out
xor
jbe
pop
adc
mov
dec
pop
stos
mov
ror
pop
lds
inc
dec
mov
icebp
call
sbb
dec
int
mov
popa
mov
loope
mov
retf
mov
add
adc
or
mov
(bad)
dec
shl
fnstsw
xlat
bound
mov
je
inc
adc
nop
test
add
mov
inc
adc
fwait
jmp
adc
jne
jae
push
shl
mov
sbb
sbb
xor
push
into
cmps
rcr
pop
dec
sbb
scas
xchg
idiv
and
xchg
aas
push
scas
add
mov
sub
test
pop
pushf
xchg
lods
cli
std
mov
xchg
push
movs
mov
adc
jl
fcomp
into
push
or
push
sub
sub
ins
push
inc
add
sub
out
jae
cdq
sub
sub
inc
xchg
js
pop
int
and
sub
out
mov
sub
push
adc
and
lahf
pusha
xchg
test
jb
lods
xchg
dec
and
mov
ins
(bad)
daa
cmp
(bad)
adc
xor
lock
mov
pusha
test
dec
push
adc
inc
push
repnz
xchg
sbb
adc
retf
dec
and
cmp
popa
repnz
xchg
popf
mov
push
mov
dec
call
lock
adc
ror
add
sbb
sub
call
inc
inc
add
pop
pop
and
repnz
mov
repz
sahf
dec
sub
cdq
inc
inc
shl
lods
int3
xchg
cmp
mov
sub
adc
sbb
push
pop
push
or
fs
into
test
jmp
jb
xchg
adc
enter
sbb
mov
in
nop
retf
popa
cmp
or
xchg
lea
arpl
add
inc
scas
sub
fsubr
cmp
inc
inc
pop
pop
mov
xor
pop
test
mov
scas
lock
in
sub
enter
movs
loopne
cmp
es
push
mov
mov
leave
test
mov
gs
iret
pop
dec
stc
jge
inc
mov
mov
dec
or
jae
pop
mov
pop
or
push
in
dec
add
inc
or
movs
xor
xchg
jno
sub
jnp
xor
sub
or
outs
xor
jae
inc
add
stos
or
push
add
and
adc
nop
xor
adc
push
push
ins
xchg
adc
dec
imul
dec
mov
(bad)
or
lods
adc
mov
jno
shl
imul
inc
mov
leave
call
jle
xchg
adc
mov
rol
ret
pop
jbe
sub
xchg
or
fwait
in
(bad)
aad
call
push
and
into
movs
ja
or
and
sbb
dec
(bad)
sti
push
pop
add
push
ss
bound
(bad)
pop
aam
(bad)
sbb
jne
bound
xchg
pop
dec
cmps
in
jp
adc
mov
jo
loopne
aam
mov
int3
scas
push
cld
test
fistp
in
fsub
xchg
lds
nop
ret
push
(bad)
scas
inc
mov
es
xor
xchg
cdq
push
jecxz
pop
pop
push
and
dec
push
cdq
jo
xchg
retf
lds
pop
and
nop
dec
push
xor
sub
gs
lds
int3
push
repz
xor
push
inc
inc
fs
and
add
loopne
inc
xlat
xchg
add
nop
mov
add
lods
xchg
add
xchg
adc
adc
aaa
call
scas
sub
ret
(bad)
xchg
mov
and
out
pop
test
cdq
add
xchg
sbb
push
js
fcmove
sub
dec
jne
and
cmc
push
jl
push
sub
cmps
xchg
fnstenv
in
sub
sahf
jae
mov
inc
xchg
mov
inc
rcl
das
push
pop
int3
inc
mov
mov
call
mov
inc
adc
pop
mov
in
fmul
mov
push
dec
and
or
inc
and
add
dec
push
add
retf
scas
jp
xor
outs
nop
mov
pop
stos
test
repz
push
jns
mov
inc
enter
pop
mov
inc
mov
cmps
dec
loop
mov
je
clc
retf
leave
xchg
das
push
dec
(bad)
repnz
popa
mov
or
or
adc
sbb
cs
jmp
mov
les
ja
inc
cs
dec
cmp
jl
push
bound
mov
and
push
inc
xor
and
test
sbb
and
xor
dec
mov
adc
out
test
lahf
(bad)
cli
xor
xchg
mov
shl
rcl
push
repnz
mov
fdivr
xchg
loop
ins
pop
in
xor
mov
enter
mov
stos
sbb
and
jo
dec
mov
fst
sub
sub
mov
retf
movs
pop
sub
cli
repz
xor
arpl
mov
xchg
xchg
jl
jg
pop
jno
hlt
stc
push
(bad)
dec
inc
arpl
aam
xchg
xchg
pop
mov
call
mov
test
push
dec
rcr
add
jbe
std
test
dec
cmp
mov
xor
cmc
movs
js
jmp
pop
adc
cmp
push
in
les
ja
pop
sbb
les
fsub
dec
and
div
arpl
popa
mov
push
inc
mov
(bad)
aam
jns
mov
test
retf
popf
fs
or
or
xlat
je
test
(bad)
adc
repnz
stos
aad
stos
addr16
mov
adc
sub
clc
dec
test
(bad)
pusha
cmp
push
xchg
push
mov
mov
fiadd
pop
(bad)
lods
test
push
adc
mov
(bad)
dec
push
mov
push
dec
fs
test
mov
xchg
inc
fs
dec
sub
mov
iret
(bad)
jmp
arpl
xchg
pushf
cli
jo
mov
pusha
aaa
jo
dec
popa
xchg
add
test
scas
in
pop
or
add
xchg
adc
adc
dec
in
sub
push
lahf
dec
outs
jne
cmps
cli
jmp
jp
in
sbb
mov
retf
sub
cmps
add
jae
dec
stos
and
loopne
aam
push
sbb
adc
das
cwde
enter
js
push
sub
and
leave
movs
sbb
int
aas
pop
or
imul
ret
stos
xlat
adc
adc
sbb
sub
jns
cmp
retf
aas
rol
mov
mov
ss
repz
inc
and
pop
mov
cmps
xchg
xor
test
sub
movs
fs
mov
adc
dec
mov
(bad)
cdq
push
dec
movs
mov
out
lods
mov
test
bound
loope
inc
scas
test
xchg
ret
push
mov
add
xor
dec
mov
push
ret
jo
sbb
and
jge
pop
test
jns
aas
scas
inc
sbb
out
stc
je
pop
or
icebp
jbe
mov
or
sub
loope
pop
sub
mov
mov
retf
rol
neg
enter
bound
push
test
jmp
jp
ds
mov
inc
cld
aad
or
add
add
xchg
and
sub
push
add
jle
addr16
idiv
jno
daa
dec
xchg
ret
inc
xor
sbb
nop
push
retf
xor
sbb
jns
outs
into
mov
leave
cmp
xchg
xchg
and
mov
sti
sti
push
pop
loop
aaa
cmc
test
adc
arpl
pop
test
leave
mov
(bad)
fld
retf
and
arpl
xor
push
enter
mov
fild
xor
aas
sbb
jae
pop
cmp
xbegin
out
es
jmp
mov
mov
in
push
xchg
repnz
jb
sbb
enter
jge
retf
lods
sub
sub
add
outs
push
mov
dec
cli
cld
gs
movs
fwait
mov
inc
fldcw
jbe
stc
aad
push
lods
adc
xchg
stos
mov
push
(bad)
xlat
popf
stos
(bad)
rol
push
xor
dec
clc
dec
cmps
cwde
jl
lea
stc
dec
imul
add
pop
ficomp
fldcw
cmp
mov
shr
xchg
mov
and
and
bound
cmps
mov
cli
jae
bound
push
pop
pop
leave
sti
sbb
lea
sbb
push
imul
pop
lods
imul
mov
mov
andps
in
mov
push
fs
fadd
fs
inc
in
and
mov
lds
call
test
bound
and
mov
call
jno
call
scas
clc
imul
push
cs
mov
inc
sbb
sub
mov
mov
pop
xor
shl
std
pop
cmp
retf
ja
mov
ins
cmps
out
scas
add
mov
xor
out
fadd
ffree
pop
movs
sbb
sub
repnz
push
jno
(bad)
xchg
out
into
data16
ds
leave
ret
sbb
dec
(bad)
imul
pushf
dec
cmp
call
lods
push
sbb
xor
push
sub
int3
imul
dec
inc
jecxz
mov
pop
scas
mov
mov
pop
xchg
sub
loopne
mov
into
pop
mov
cmc
inc
mov
dec
rcr
dec
(bad)
repz
adc
cli
sbb
sbb
and
jno
in
cmps
mov
mov
mov
scas
daa
mov
outs
sbb
fs
sbb
and
jb
xor
xchg
push
ja
jmp
pop
add
rcr
aas
xchg
cmp
xchg
sbb
aas
pop
les
cmp
fnstsw
xchg
mov
aas
pop
retf
add
pop
sub
or
sbb
rcr
sub
mov
mov
xchg
dec
or
shl
fs
mov
xchg
mov
and
shl
out
mov
test
lods
adc
imul
fs
gs
js
adc
cmps
fs
lds
xor
dec
adc
sbb
cmp
xor
sub
mov
push
fst
inc
test
aad
rol
xchg
mov
push
or
fs
sub
cmp
jns
sbb
push
stos
sti
jge
lods
call
dec
and
adc
mov
and
lods
call
imul
(bad)
out
cmc
pop
or
retf
push
adc
outs
pop
mov
and
stos
sub
dec
and
add
inc
es
xchg
mov
ss
dec
mov
bound
pop
and
inc
stos
mov
jns
pop
sub
lock
xchg
cdq
shl
out
cmps
mov
repz
cld
in
bound
adc
jb
push
xor
lds
test
or
mov
mov
cmps
adc
mov
xchg
mov
inc
push
inc
shl
sub
dec
dec
xor
mov
inc
mov
pop
or
xchg
dec
cmp
retf
pop
xor
shl
and
mov
cdq
fcom
or
ins
sub
inc
push
sbb
pop
push
mov
push
jo
cmp
iret
xchg
inc
xchg
sub
lea
dec
or
hlt
or
outs
sbb
repnz
outs
stos
int3
or
mov
pop
push
mov
dec
sbb
mov
pop
push
adc
xchg
jge
cvtps2pi
aad
cmc
xchg
shl
je
xlat
xchg
pop
out
adc
into
and
nop
and
mov
nop
pop
push
lds
shr
stc
mov
std
jle
shl
pop
pushf
(bad)
lods
daa
lds
into
sbb
lods
inc
mov
jno
mov
fxch
in
adc
dec
dec
add
inc
jg
pusha
ficomp
xor
shl
sub
jl
scas
aam
mov
or
mov
lahf
jge
pop
test
dec
cli
push
movs
dec
cmp
push
cmp
adc
in
inc
loope
pop
inc
leave
jl
sahf
mov
jmp
push
or
jo
movs
retf
ss
jmp
xchg
out
mov
inc
cmp
bound
or
and
sbb
sahf
xchg
jns
dec
xor
xchg
out
and
sub
add
jae
add
inc
dec
jne
fs
mov
mov
data16
frstor
fmul
jbe
int
pop
xchg
iret
add
or
cmps
adc
add
dec
jle
out
dec
gs
cmp
dec
loope
cmp
push
in
jb
pop
stos
cmps
std
xor
and
sti
hlt
pushf
xchg
int
add
mov
bound
or
pop
push
add
or
xchg
in
into
and
dec
xor
stos
iret
xchg
xchg
outs
push
pop
pop
jnp
jns
add
outs
adc
cmps
sbb
lock
int
dec
xchg
or
inc
xor
into
or
or
mov
test
int3
ins
adc
dec
retf
push
sbb
cmp
adc
mov
cmp
sub
jno
cld
push
xor
push
mov
xlat
ds
enter
pushf
dec
aad
test
loop
or
dec
xor
pop
fisubr
mov
frstor
xchg
iret
out
sub
pop
jae
(bad)
aam
(bad)
jo
xchg
stos
mov
jl
int
sub
push
mov
mov
aam
adc
inc
cmps
mov
fwait
mov
sub
in
inc
or
ins
and
retf
push
sub
dec
retf
and
ins
xor
sub
stos
(bad)
push
(bad)
test
mov
gs
add
inc
pop
int
jne
idiv
xchg
dec
retf
adc
adc
jne
pop
pusha
push
test
into
mov
xchg
sbb
mov
jp
mov
test
and
xchg
sar
push
fcomp
pop
(bad)
xchg
rol
mov
dec
push
in
cld
dec
aaa
sub
ss
nop
retf
loopne
push
or
pavgw
test
adc
sub
fld
stos
mov
and
jno
xchg
movs
pop
mov
lods
sub
mov
inc
inc
fwait
lds
cs
sbb
fwait
push
lds
cwde
push
push
jle
cwde
cmp
aaa
in
(bad)
xor
sbb
mov
in
retf
sub
push
test
inc
stc
jle
dec
retf
or
(bad)
mov
rcr
inc
inc
pop
mov
iret
pop
das
retf
(bad)
test
push
fadd
or
retf
inc
dec
pop
jl
pop
pop
out
pushf
sbb
pop
ja
push
xchg
test
stos
cld
lods
pop
and
xchg
repnz
stos
mov
push
out
(bad)
dec
inc
movs
sbb
xchg
push
sahf
scas
loopne
and
out
mov
stc
repnz
cwde
xchg
jb
xchg
and
iret
or
out
mov
push
ret
loop
bnd
cmps
repz
das
mov
and
clc
pop
cs
aas
in
lods
pop
lods
pusha
pop
scas
and
outs
mov
push
cmps
cmp
mov
into
popf
push
pushf
push
pop
mov
mov
sub
sub
jne
repnz
aad
pop
push
xor
js
outs
jb
push
sbb
and
dec
in
mov
lods
dec
rcl
popf
sub
pop
mov
(bad)
sbb
bound
loop
je
rcl
push
or
sub
add
xchg
jns
xor
das
pop
mov
(bad)
adc
lea
retf
loope
xchg
mov
push
scas
outs
push
push
inc
cdq
ins
xor
and
mov
shr
inc
push
sub
xchg
ret
aas
push
sub
les
sbb
cld
std
or
cld
pop
sbb
mov
aad
add
aaa
ficom
inc
xor
xchg
in
fist
mov
adc
mov
add
cmp
mov
mov
lds
sub
pop
int
in
stos
movs
mov
sub
mov
fld
lods
out
jne
xchg
inc
xchg
shr
push
push
leave
pop
ja
sbb
dec
sub
cdq
retf
mov
ja
nop
dec
and
jmp
inc
inc
lds
jl
cmp
pop
cmp
dec
and
popa
push
lock
xchg
jmp
(bad)
sub
cwde
arpl
mov
out
dec
cmp
gs
cmps
mov
push
ror
ins
mov
ja
fcomp
out
pop
fadd
fninit
jno
ss
jae
stos
mov
push
jbe
xor
test
sub
(bad)
test
je
push
js
mov
cmc
lea
call
sbb
outs
lahf
pushf
jmp
xor
clc
add
jbe
pop
lods
cmp
(bad)
adc
or
jmp
sti
mov
outs
pop
fbld
call
pushf
fidivr
cmp
ds
ins
jl
sti
neg
push
jbe
ret
cwde
jns
outs
mov
pop
sub
push
aaa
out
fdiv
clc
hlt
(bad)
(bad)
in
mov
sbb
aaa
(bad)
cmc
dec
dec
mov
je
mov
sti
cmps
sub
aaa
cmp
ja
mov
dec
dec
(bad)
xchg
jne
cwde
bound
sti
cli
cmps
es
(bad)
cmp
sbb
push
out
push
sahf
fcmovbe
xchg
mov
jb
jns
int3
mov
ss
(bad)
fdivp
sbb
call
jns
cmp
rcl
rcl
sbb
and
push
sub
or
lods
test
fsubr
les
adc
cmp
ins
sti
movs
jns
mov
pop
out
mov
retf
aam
call
or
mov
pop
sub
or
cmp
mov
(bad)
sub
mov
shr
cmp
adc
(bad)
icebp
in
push
xor
mov
(bad)
fldenv
(bad)
daa
cli
adc
fwait
pushf
fidiv
out
fmul
cdq
mov
rcr
mov
mov
mov
and
aam
xlat
mov
cmp
cmp
mov
jmp
popf
inc
jno
jge
sub
dec
push
out
mov
retf
cmp
sub
xchg
fnstcw
ss
push
int3
pop
fmul
pop
dec
xor
sbb
nop
cmc
cmc
pop
cmps
sub
xchg
dec
push
pop
inc
in
sub
shr
xor
xor
pop
mov
inc
inc
sub
scas
cmc
mov
in
cmp
jae
jmp
dec
dec
or
out
movs
sub
scas
adc
pop
bnd
aaa
clc
aas
fidivr
hlt
ds
ins
cld
xchg
ror
xor
cmp
mov
sbb
pop
adc
jmp
inc
pop
rcr
enter
xchg
dec
dec
adc
mov
dec
(bad)
test
push
xchg
outs
in
push
mov
movs
pushf
shl
jnp
dec
jmp
mov
xor
jns
mov
mov
mov
movs
pop
push
cmp
out
mov
mov
neg
repz
sbb
and
(bad)
add
mov
es
lds
pop
fs
pop
outs
push
clc
into
mov
adc
jge
push
mov
mov
out
adc
leave
bound
push
fsubr
push
push
xchg
mov
loop
jno
cmp
adc
mov
pop
ds
adc
push
mov
bound
mov
adc
or
mov
bound
inc
repz
pop
sbb
out
lds
mov
mov
or
aas
xchg
(bad)
fnstenv
sub
shl
repnz
lods
push
sub
out
into
xchg
sti
mov
sub
call
bound
mov
cmp
and
cli
mov
mov
jecxz
mov
push
shr
inc
mov
xchg
mov
stc
sbb
out
mov
xchg
inc
fcmovu
xchg
sti
mov
fnstenv
mov
js
lahf
addr16
gs
dec
repz
mov
mov
pop
inc
inc
div
cmps
(bad)
mov
jmp
mov
xchg
jnp
inc
cmc
cmp
lds
div
jl
jno
and
in
sti
inc
repz
push
jb
push
scas
out
xchg
mov
jmp
sbb
sub
(bad)
mov
(bad)
mov
fdivr
push
adc
cli
pop
or
cld
int
dec
icebp
mov
stc
mov
popf
fild
mov
mov
aad
fdivr
nop
call
mov
bnd
xor
sub
icebp
mov
pop
mov
mov
jmp
cmps
xor
dec
xor
add
cdq
sar
sub
xor
(bad)
imul
scas
movs
dec
icebp
bnd
cmp
sahf
dec
jmp
mov
dec
mov
jg
out
es
in
cmps
mov
cmc
inc
ficomp
sub
data16
mov
mov
out
xor
jno
fwait
jno
int3
popf
aaa
rcr
jmp
mov
icebp
pop
jle
jge
in
in
shl
movs
(bad)
push
ror
mov
cdq
mov
push
jle
dec
cmp
popf
out
ja
fimul
ja
movs
gs
cmc
scas
je
jle
ins
sub
retf
sub
inc
xor
sbb
mov
xchg
outs
dec
fs
push
fs
outs
data16
out
mov
ja
mov
shl
or
lock
sub
dec
jg
fs
popf
push
pop
add
sahf
call
(bad)
sub
sti
cdq
and
in
cmp
dec
stc
jns
iret
sahf
dec
or
outs
fisttp
cmp
sub
dec
sbb
ds
inc
cmp
out
jno
and
cmps
sbb
jb
leave
fdivr
inc
clc
lds
jmp
lods
xchg
out
xor
xlat
repnz
inc
jae
push
in
xor
cmp
mov
in
push
jp
inc
ss
sub
div
xchg
jmp
popf
dec
data16
imul
push
bound
jns
sub
and
sbb
(bad)
ins
ja
les
xor
pusha
cs
and
ds
add
mov
dec
xor
xchg
adc
push
push
sub
out
out
stos
cdq
ret
stc
adc
sub
cmp
stc
mov
pop
dec
leave
jecxz
xor
dec
pop
jns
push
fimul
mov
sbb
fcmovnbe
push
stos
or
popf
call
out
arpl
inc
cmc
repz
sbb
add
loope
ficomp
out
dec
mov
sti
shl
pop
push
fnstsw
sahf
cmps
mov
mov
into
pusha
push
dec
xchg
xor
xchg
sub
jno
enter
(bad)
push
dec
into
out
movs
aam
lahf
mov
mov
test
icebp
push
leave
rcr
jg
sbb
xchg
in
push
jae
out
out
rcr
outs
lock
or
(bad)
mov
sub
jl
sar
stc
dec
dec
sbb
cs
out
dec
sti
inc
test
xchg
(bad)
mov
retf
mov
rol
fwait
sbb
div
aas
jne
or
push
hlt
outs
jmp
dec
push
test
push
(bad)
cmp
imul
push
pop
push
mov
cwde
(bad)
out
movs
daa
push
call
ss
test
mov
hlt
sti
push
jle
dec
pop
fincstp
sti
gs
mul
sti
cmps
cdq
cli
loope
jmp
sahf
movs
fsubr
push
cmc
and
pop
dec
das
jbe
push
pop
cmps
push
out
dec
push
or
xor
(bad)
repnz
fs
mov
ss
in
dec
stc
fst
cmp
aad
int3
out
mov
in
inc
imul
in
aam
cmp
dec
pop
inc
mov
(bad)
mov
dec
icebp
leave
xor
pop
inc
out
data16
cdq
ret
and
(bad)
add
stc
jnp
adc
pop
mov
mov
addr16
leave
cmps
sbb
out
dec
jecxz
inc
cmp
out
in
inc
cmc
sub
xchg
es
out
jl
xchg
jmp
mov
fwait
stos
dec
xor
jmp
xor
out
mov
jp
xor
mov
adc
shr
xlat
mov
mov
xchg
and
mov
dec
xor
inc
loopne
sbb
jnp
pushf
shl
enter
mov
cmp
pusha
dec
xor
ret
daa
xor
mov
mov
push
sub
out
icebp
out
jbe
push
out
mov
sbb
and
jbe
xchg
outs
aas
dec
sub
shl
sbb
iret
jecxz
jnp
adc
or
push
dec
cmp
sar
idiv
push
movs
pop
ret
mov
xchg
stos
div
mov
push
movs
out
imul
rcr
mov
jne
data16
push
ja
add
stc
aam
lahf
xor
push
mov
sub
fild
mov
jp
xor
xchg
call
imul
mov
cmc
pop
(bad)
jecxz
dec
jp
xchg
push
mov
jae
sbb
test
pop
ror
sbb
fcom
adc
ret
jb
leave
das
xlat
repz
cmp
(bad)
out
lea
fisub
jecxz
daa
cmps
rol
out
ds
xchg
sbb
sbb
inc
inc
push
fs
xor
xchg
das
mov
ror
ja
aam
enter
imul
adc
cmps
scas
xor
test
cdq
dec
cmp
mov
xchg
jb
(bad)
jp
mov
mov
xchg
aam
jae
aam
jmp
mov
mov
sub
dec
pop
in
rol
loopne
scas
hlt
movs
in
fnsave
bswap
imul
in
iret
xchg
in
lahf
sub
jg
dec
sub
fmul
rep
in
xor
cmp
sti
outs
push
pusha
xor
scas
sar
jmp
jbe
imul
std
xor
jle
push
ret
mov
cli
fstp
fs
mul
fld
repz
sbb
(bad)
and
sub
je
xor
ja
sub
add
jecxz
popf
iret
iret
test
fidivr
retf
inc
imul
fst
push
sbb
clc
jbe
mov
lds
cmp
xor
sub
popa
add
hlt
loopne
sub
addr16
(bad)
jns
lahf
and
outs
add
xchg
cmp
push
in
aad
pop
dec
jecxz
pop
jne
clc
stc
mov
imul
cdq
fld
stc
ret
jmp
out
(bad)
mov
mul
dec
xchg
out
daa
ror
mov
aas
pushf
cli
outs
in
mov
ds
call
add
xchg
jnp
xchg
push
stc
out
dec
jp
outs
pop
dec
(bad)
pop
movs
stos
test
test
or
xor
aaa
rcr
ins
or
cdq
mov
(bad)
mov
fist
mov
pop
fistp
mov
out
mov
out
push
(bad)
jo
(bad)
sbb
xchg
push
je
xor
scas
inc
loope
scas
arpl
inc
push
push
mov
sbb
sub
pop
stc
mov
xchg
fwait
popf
jmp
xchg
arpl
mov
dec
jge
xor
ins
and
mov
std
jmp
out
in
retf
cmp
pop
repnz
inc
icebp
xchg
xchg
mov
mov
out
xor
cmp
push
ret
in
dec
in
dec
cdq
pop
sub
adc
xchg
shr
push
jbe
pop
dec
leave
(bad)
dec
mov
or
cs
xchg
mov
jp
xchg
adc
sub
aam
xor
popf
dec
cmp
xchg
or
(bad)
icebp
lock
sbb
mov
push
lds
xchg
fimul
movs
mov
jl
rcr
jmp
adc
(bad)
push
aas
xchg
sbb
movs
jl
jne
xor
pusha
in
push
mov
iret
icebp
mov
xchg
hlt
and
rcr
inc
sbb
stos
cld
pop
enter
sub
pop
cmp
sbb
cmp
mov
mov
or
dec
es
(bad)
clc
dec
mov
pop
sub
(bad)
jle
sbb
imul
int3
addr16
not
in
call
push
shr
retf
sti
xchg
mov
shl
lods
or
pushf
inc
sub
or
fdivr
sbb
push
clc
mov
pop
cmps
in
mov
cmps
sbb
cmp
xchg
xor
into
and
das
fs
dec
fs
mov
lock
fstp
jno
movs
fdivr
and
xchg
jbe
movs
push
pop
adc
sbb
shl
lds
jge
push
cmp
push
ret
xchg
pop
and
cmp
in
mov
mov
cmps
(bad)
jecxz
lahf
fs
je
enter
sbb
(bad)
cmp
jmp
push
adc
mov
hlt
je
push
cmp
mov
jb
and
pop
dec
pop
call
xchg
dec
jmp
mov
inc
iret
loope
xchg
(bad)
cld
loop
adc
movs
sub
dec
loopne
nop
jnp
push
and
mov
ja
cmp
inc
out
push
jae
gs
xchg
cmp
dec
in
leave
mov
xchg
daa
sbb
mov
lods
sti
ins
mov
jbe
pop
sub
inc
out
mov
jno
push
imul
dec
sub
dec
das
xchg
mov
pop
(bad)
sbb
xchg
(bad)
jbe
mov
lods
mul
lahf
xor
gs
push
inc
sbb
shr
(bad)
pushf
dec
jecxz
movs
iret
aaa
shl
mov
dec
aad
xor
adc
test
jae
xor
(bad)
cs
mov
ins
push
shl
xor
mov
idiv
mov
inc
mov
js
arpl
icebp
rcr
inc
std
ja
dec
xor
jg
clc
aas
sbb
scas
xchg
sti
out
xchg
xor
sbb
out
sti
cdq
or
mov
std
out
lock
gs
fimul
add
outs
fstp
mov
adc
dec
cmps
out
pop
jne
pop
cs
mov
xchg
pop
out
jno
jnp
xchg
call
xchg
out
leave
pop
sbb
aaa
retf
inc
ss
ins
ds
xchg
xchg
ins
mov
stc
xor
and
into
xchg
dec
push
fs
mov
mov
xchg
fsubr
push
xchg
and
repnz
out
cmp
jae
repz
pop
shr
rcl
mov
fcmove
out
cld
sar
jge
stc
ins
cmp
mov
jle
(bad)
jmp
or
out
leave
push
inc
cmp
xchg
test
push
ror
(bad)
sti
into
fdiv
jmp
dec
ins
and
sbb
icebp
cmc
jno
mov
xchg
or
fsubr
(bad)
in
hlt
jmp
scas
cmc
movs
aad
test
aam
mov
daa
xchg
adc
ins
mov
mov
cmp
jg
sub
idiv
arpl
les
in
imul
push
jp
movs
sbb
dec
cmp
or
rcl
ret
stc
sahf
mov
jmp
pop
setbe
repz
in
int3
and
mov
xchg
sahf
sahf
dec
jns
(bad)
fadd
cmp
mov
jecxz
push
fstp
in
jecxz
cld
in
dec
fwait
sbb
pop
push
test
cmc
adc
test
data16
sbb
out
sub
dec
jmp
xchg
mov
out
and
in
int
push
scas
rcl
scas
std
cmp
jg
adc
pop
leave
test
adc
or
pusha
sahf
movs
call
ret
popf
hlt
xchg
icebp
jecxz
cmp
pop
mov
pushf
ja
retf
jno
mov
je
and
add
loopne
daa
data16
adc
sti
mov
pushf
out
repnz
jns
xchg
icebp
repnz
xchg
daa
mov
retf
dec
dec
jmp
lods
cmc
ins
dec
fld
mov
pushf
or
aam
aam
jge
dec
(bad)
and
pop
dec
mov
in
je
imul
jecxz
stc
jno
xor
ja
jp
popf
dec
sti
repz
(bad)
pop
cmps
int3
loope
fmul
sti
jge
mov
es
cs
int
xor
icebp
rcl
addr16
mov
neg
add
mov
push
xor
mov
cmp
call
ss
push
adc
test
cmp
dec
or
popa
in
les
dec
push
repnz
test
hlt
mov
test
mov
mov
jno
and
jmp
iret
leave
mov
ret
aam
(bad)
mov
ja
jmp
rol
jb
pop
or
sub
ja
pop
dec
dec
sti
push
out
xchg
rcr
pop
mov
call
aad
int3
sbb
int3
cmp
bswap
mov
retf
mov
out
jae
out
or
jecxz
inc
mov
loopne
push
push
inc
std
cmp
mov
cwde
jmp
xor
repz
or
(bad)
xor
adc
or
ja
(bad)
icebp
shl
xor
ins
clc
pop
cmp
cmp
mov
mov
bound
push
cmps
shr
pop
mov
sbb
adc
jmp
dec
pop
cmp
cdq
imul
cdq
lds
push
push
neg
popa
hlt
pop
scas
imul
out
mov
outs
gs
mov
cwde
test
out
movs
jae
gs
pop
xchg
dec
aas
inc
push
and
mov
push
cmps
cdq
lahf
mul
aas
ret
jno
and
stos
push
or
sub
or
movs
(bad)
std
pop
pop
jnp
(bad)
(bad)
fadd
ret
imul
xchg
scas
sahf
dec
addr16
xchg
movs
mov
xor
cmp
sub
push
movmskps
cli
repz
adc
push
lds
imul
cld
imul
inc
fs
mov
repz
js
mov
sub
ja
int3
into
iret
call
sbb
mov
leave
out
cmps
cmp
jmp
push
jns
fyl2xp1
daa
mov
movs
or
into
dec
xchg
fsub
inc
aas
pop
mov
xor
and
out
dec
movs
xor
and
stc
outs
ss
mov
xchg
xchg
cli
pop
pop
ret
dec
dec
cmc
movs
inc
in
push
outs
and
shr
mov
jg
push
cmc
cld
(bad)
repnz
addr16
mov
jmp
mov
pop
es
xchg
lods
dec
mov
ins
cmp
jb
jge
jno
mov
out
cs
push
jno
imul
sti
data16
add
in
xchg
fs
cmp
mov
lea
out
lock
xchg
cmp
fbld
int3
jb
pop
inc
inc
jae
push
xchg
movs
popa
inc
pushf
sahf
inc
xor
out
xchg
movs
jbe
mov
pop
popa
push
dec
lock
mov
push
mov
cli
ret
movs
les
ret
out
inc
jge
int
sti
jns
jne
jmp
rcr
add
sti
stc
sti
(bad)
xchg
mov
aam
inc
mov
out
mov
mov
mov
adc
sbb
out
xor
fstp
int3
cmps
xor
or
jae
xchg
cmps
xchg
cmps
data16
ins
push
retf
mov
fcom
xor
cmp
mov
and
add
inc
retf
into
xchg
mov
dec
sub
xor
nop
out
sbb
outs
push
add
dec
jle
retf
pop
push
dec
lea
and
dec
sahf
sbb
jmp
movs
in
jbe
xchg
jb
hlt
mov
sbb
xor
sub
call
in
dec
inc
and
(bad)
out
mov
lea
mov
lahf
outs
cmps
out
mov
sbb
sar
cmps
add
sar
into
movs
mov
cmp
iret
arpl
mov
xor
(bad)
repz
xchg
popa
push
lahf
int3
popf
cmp
xor
xlat
lods
fdiv
xor
ror
not
rol
xor
pop
fcomp
in
lds
js
xchg
mov
add
inc
lds
pop
mov
push
lds
adc
call
enter
retf
inc
fst
outs
fs
xchg
jbe
loop
push
icebp
aad
mov
cmp
push
jbe
mov
or
pushf
mov
mov
ror
cwde
std
fs
pop
gs
sahf
loope
sub
and
jb
jb
mov
or
adc
inc
mov
jbe
add
jnp
sub
int
cdq
fcmovbe
pop
pop
inc
push
xchg
sar
imul
imul
cli
jg
push
push
movs
or
or
and
push
sbb
arpl
dec
or
(bad)
pop
or
dec
push
pop
xor
and
mov
fisub
sbb
mov
fdiv
xchg
mov
ror
push
int3
mov
test
and
(bad)
out
add
xchg
out
mov
daa
out
fist
cwde
jnp
xchg
js
sub
push
xchg
cmp
mov
push
jmp
cmp
xor
push
and
ins
outs
popa
cmp
retf
aad
mov
sub
xor
push
or
xor
ja
sub
imul
leave
outs
cmp
fsubp
pop
int3
add
scas
fsub
and
cmp
popf
push
lock
rol
xchg
js
jne
sahf
icebp
cmp
cmp
addr16
mov
sbb
inc
div
cs
cmps
mov
dec
out
out
mov
loope
adc
je
mov
in
mov
sar
retf
sbb
jecxz
or
fistp
(bad)
cmp
mov
xor
inc
fmul
jl
sbb
enter
arpl
ja
loop
test
retf
aas
or
jnp
fdiv
push
xchg
mov
outs
movs
in
mov
mov
or
js
data16
in
mov
mov
lahf
int3
ins
iret
repnz
cmps
(bad)
jno
cmps
xchg
ret
fimul
fs
imul
mov
pop
fdivr
pop
in
rol
xchg
out
or
mov
dec
xchg
mov
nop
(bad)
pusha
call
mov
sbb
enter
xchg
pop
in
pushf
or
xor
jmp
test
push
sbb
cmp
inc
jle
icebp
shl
xor
loope
retf
cmp
xchg
xlat
xchg
nop
jo
mov
mov
mov
cmps
xchg
sbb
mov
xchg
push
jae
fldenv
cdq
xchg
or
and
xchg
sbb
out
pusha
push
mov
jecxz
cmp
int3
cmps
and
mov
jl
jbe
lock
pop
or
sub
inc
xchg
and
pop
mov
nop
jecxz
or
fisub
inc
sbb
cmps
lods
addr16
(bad)
pop
xchg
xor
push
mov
mov
arpl
push
push
scas
mov
rol
xlat
jecxz
cdq
retf
and
mov
jle
cmc
in
and
mov
fild
mov
idiv
jmp
dec
stc
arpl
pop
call
scas
sub
cs
(bad)
retf
xor
lds
xor
enter
push
jmp
and
mov
and
xor
lahf
ret
call
in
fadd
(bad)
ror
je
mov
addr16
fisttp
mov
(bad)
push
call
imul
fsubp
jbe
repnz
out
gs
mov
shl
outs
out
dec
aad
mov
sahf
mov
(bad)
rcl
enter
adc
xchg
les
adc
movs
bound
add
or
hlt
add
dec
pop
sub
stos
in
jp
test
cmp
aas
pop
sbb
xor
mov
scas
sar
aam
dec
cmp
sbb
repnz
je
cmp
mov
mov
xchg
pop
rcl
je
sub
ins
cmp
iret
in
mov
fcomp
adc
mov
push
sbb
pop
jp
dec
loopne
and
mov
adc
aam
or
mov
xor
stc
cdq
loope
push
out
mov
dec
mov
mov
gs
fiadd
xchg
inc
repnz
nop
or
mov
js
and
or
push
stc
out
test
cmp
sar
enter
fdivr
ret
fs
retf
out
data16
int
ret
neg
gs
retf
xor
loope
cli
pop
push
add
xchg
pop
imul
or
(bad)
fcomp
pushf
xchg
mov
ret
and
imul
dec
sub
xor
push
cmp
or
mov
out
enter
lods
(bad)
mov
ret
pop
stos
xlat
inc
cmp
aaa
imul
mov
xchg
(bad)
add
lahf
lods
xchg
int
aas
aas
xchg
out
movs
hlt
(bad)
je
dec
call
and
nop
cmp
jp
mov
xor
xchg
push
dec
push
mov
jecxz
adc
rcr
or
imul
sbb
fidiv
adc
or
dec
cs
cld
pop
ficomp
fcom
push
add
cmp
cmp
pop
mov
out
stos
cmps
push
dec
inc
daa
sar
mov
dec
hlt
jl
test
arpl
mov
mov
mov
(bad)
fistp
mov
mov
shl
mov
test
push
mov
jp
sub
cmovle
cmp
clc
ds
xor
or
mov
mov
ds
rol
jmpw
cmp
fidiv
xchg
mov
adc
loope
lea
aaa
mov
out
dec
ret
movs
adc
cmps
ret
dec
sub
jmp
popf
sahf
xor
adc
daa
lds
cs
(bad)
ret
xlat
cmp
call
or
jl
cmp
mov
repz
hlt
xchg
jo
xchg
pusha
aaa
push
rol
ret
jb
xchg
call
int3
mov
ror
lods
inc
cmp
jmp
dec
push
push
and
(bad)
popf
or
movs
jb
ffreep
fwait
nop
data16
xchg
cdq
mov
or
fbstp
shr
pop
popa
adc
shr
push
pop
jp
iret
in
cli
fdiv
aam
cs
pop
dec
leave
mov
inc
imul
sub
inc
inc
daa
push
jno
push
shr
or
lock
mov
lods
adc
xchg
sub
lea
setno
(bad)
push
cmp
mov
shr
xchg
push
mov
xchg
inc
sbb
sub
xchg
dec
out
jae
sbb
adc
add
xor
jecxz
or
mov
dec
sbb
and
push
repz
shl
xor
add
retf
and
inc
mov
lahf
sti
lock
and
cmp
pop
clc
cmp
jbe
out
icebp
and
into
cmps
popf
and
push
jmp
out
in
lea
and
pushw
in
punpckhwd
xchg
xchg
pushf
lea
stc
loope
xor
shl
cmp
cs
or
mov
adc
mov
inc
mov
aaa
js
cmc
je
(bad)
les
popa
dec
xchg
fidiv
sbb
fcomip
je
jno
or
movs
and
inc
add
xchg
fisubr
xor
jae
out
xor
mov
adc
mov
test
sub
out
(bad)
stc
pop
mov
cld
sub
shl
std
add
call
call
inc
xor
out
stos
in
inc
xor
or
fstp
arpl
xacquire
jno
pop
sub
cs
xlat
fs
add
jmp
aaa
nop
mov
out
xor
cwde
test
mov
loopne
(bad)
in
int3
not
or
mov
mul
test
mov
inc
pop
pop
dec
fistp
imul
lahf
dec
or
rcr
pop
xor
add
les
loop
mov
repz
fxtract
popf
and
add
sbb
cmps
adc
pop
(bad)
out
jecxz
data16
xchg
xor
xor
and
or
shl
and
sbb
fbstp
pop
call
sbb
sahf
sahf
push
inc
ret
ins
jnp
cld
mov
add
pushf
xchg
fcom
popf
dec
imul
fcmovnbe
or
xchg
xchg
mov
add
cdq
test
ror
imul
mov
push
mov
mov
sbb
mov
test
pop
cmp
cli
mov
push
jmp
stc
cld
inc
mov
int3
mov
cdq
mov
jbe
or
pop
stc
daa
and
xchg
mov
cmp
scas
push
push
jno
cli
or
dec
fld
jl
and
pop
dec
push
cmovs
dec
sub
push
add
bound
sub
arpl
jmp
xchg
dec
nop
xchg
inc
in
and
and
daa
push
xchg
enter
ins
dec
in
pop
loopne
mov
mov
jecxz
adc
inc
sub
je
stc
pushf
xchg
xchg
movs
repnz
iret
cmps
adc
fst
jbe
cmp
xor
sbb
sub
out
sbb
cmp
sbb
mov
cdq
cmp
fcmovnb
aaa
xor
push
sub
les
pusha
hlt
idiv
and
xchg
ins
add
pop
int3
pop
dec
jns
cmp
fst
xchg
aas
and
sub
arpl
out
cld
repnz
iret
movs
jge
out
jns
es
xor
xchg
jnp
inc
stos
out
mov
jo
div
es
ja
dec
fs
adc
fnstcw
sub
das
(bad)
int
js
dec
sub
cmp
fwait
dec
push
out
jbe
jmp
fisttp
or
nop
jae
arpl
mov
lods
mov
pop
test
push
sbb
into
ja
push
aas
mov
xchg
scas
ins
ja
arpl
and
adc
push
outs
cmps
nop
xchg
cmp
jb
cdq
xchg
push
sahf
cmps
sub
fist
pop
clc
movs
in
xchg
jb
mov
nop
and
addr16
fs
xchg
rol
ficom
adc
enter
pop
jmp
ds
popf
movs
popf
ins
push
test
jmp
cmps
sub
leave
imul
int
aam
fpatan
sub
mov
test
push
call
in
out
xchg
mov
dec
test
sbb
fwait
xor
loopne
xchg
lahf
dec
lea
ss
cmp
push
push
sar
xchg
xor
jp
retf
xchg
gs
sbb
sbb
out
out
inc
dec
jmp
dec
sbb
adc
add
xor
cmp
mov
icebp
jne
or
test
xor
outs
(bad)
ror
ds
arpl
out
xchg
and
ja
sti
fs
cmp
retf
sbb
xchg
out
mov
push
push
popf
int
xchg
ror
ins
add
cmp
scas
movs
ds
outs
test
inc
jp
pop
and
sbb
lods
or
(bad)
sbb
test
inc
test
add
adc
les
fimul
mov
repz
fnstenv
pop
in
jmp
and
push
dec
adc
add
loop
or
fmul
repz
lahf
dec
pmaxsw
push
mov
mov
add
sbb
cli
xor
and
sub
je
pop
jae
mov
mov
sbb
jg
shl
sbb
sbb
add
or
xchg
mov
imul
lods
popa
mov
in
mov
les
fnstenv
cld
cmp
ja
scas
mov
pop
dec
add
(bad)
in
xor
repz
loopne
mov
jmp
call
mov
cmp
out
sbb
pop
cmp
mov
jne
xchg
xchg
inc
sub
aad
pop
mov
xchg
pop
cmp
(bad)
(bad)
mov
pushf
inc
int3
(bad)
and
xor
out
jb
lock
mov
cwde
sub
call
je
mov
jmp
mov
ret
ds
mov
imul
mov
popf
loope
sub
inc
cld
pop
(bad)
ins
imul
arpl
ins
into
and
ret
mov
sub
popf
or
aaa
adc
jb
pop
test
lahf
jno
cdq
cmc
inc
scas
mov
(bad)
outs
push
inc
mov
jne
xchg
xchg
jbe
lods
cdq
data16
cmps
inc
inc
in
mov
or
mov
cmp
shr
cli
jmp
xor
inc
test
inc
mov
lods
lds
scas
out
adc
jno
jno
inc
cdq
xchg
(bad)
and
mov
sub
inc
cmp
pop
ret
sbb
iret
push
adc
addr16
outs
jno
lock
test
mov
in
shl
pop
dec
cdq
leave
jl
push
lahf
lods
call
mov
pop
popa
push
jbe
jo
ds
add
and
jo
ds
std
inc
push
out
or
hlt
or
mov
in
in
out
rcr
xchg
inc
les
jp
sbb
stc
fmul
push
inc
add
xor
repnz
(bad)
cmp
sbb
pop
push
lds
popa
xchg
adc
arpl
jl
rcl
cli
int3
dec
mov
pushf
and
dec
ins
push
jmp
data16
or
mov
xchg
inc
sub
iret
loope
into
fidivr
cwde
jp
repnz
jne
mov
ins
cmps
cwde
imul
mov
loop
xchg
xchg
adc
push
stc
popf
call
inc
sbb
push
addr16
adc
enter
dec
jb
sbb
push
fs
cmps
mov
jne
ret
cmp
retf
and
add
dec
je
mov
popf
clc
mov
imul
dec
sar
adc
mov
retf
dec
cmp
cmp
int
mov
xchg
cwde
pop
xchg
xor
push
push
jo
aas
dec
xchg
nop
outs
cmps
push
xor
fsub
stc
popf
(bad)
pop
mov
(bad)
push
enter
imul
mov
inc
sbb
call
mov
lahf
or
test
(bad)
dec
and
in
inc
pop
lods
sahf
shl
mov
jne
or
add
push
fmul
mov
stc
mov
dec
aas
into
rol
cmp
sti
ins
push
clc
aad
jnp
lock
xlat
jbe
add
test
cs
mov
stos
(bad)
aas
sub
(bad)
pop
sbb
mov
jmp
jecxz
pop
add
inc
aad
mov
int3
mov
test
xchg
clc
lods
cmp
cdq
ror
fadd
pop
cmp
mov
(bad)
pop
mov
adc
cwde
mov
cmps
sub
popf
push
inc
jl
push
jo
adc
loope
cmp
or
sub
dec
xchg
mov
hlt
hlt
(bad)
int
jl
jmp
enter
mov
lds
pop
or
xor
and
je
not
into
test
aad
loop
adc
jno
sub
xchg
mov
test
or
inc
jmp
sbb
movs
xor
stos
or
fadd
or
xchg
add
xchg
div
push
xor
xchg
pop
mov
push
or
push
xor
xor
imul
cmp
iret
xor
hlt
jne
cmovl
retf
xor
mov
jge
xor
lds
xor
mov
movs
loopne
cdq
xor
sub
jb
pop
daa
les
hlt
test
jl
push
adc
xchg
call
cmp
jo
adc
mov
ficomp
pop
stos
lock
mov
mov
std
mov
cmps
pop
cmp
sbb
dec
mov
fbstp
mov
push
cwde
inc
iret
mov
popf
das
or
push
cmps
mov
cdq
add
ret
or
sub
add
call
test
aad
pslld
enter
in
fcomp
jb
call
inc
iret
cld
xchg
jg
pop
in
or
loopne
jle
pushf
dec
cmp
pop
popf
pop
pop
cmps
sub
jns
mov
jns
fstp
and
mov
sub
sub
inc
push
lods
and
jecxz
mov
sar
mov
je
mov
loope
fcmovnbe
add
mov
cmc
jle
mov
mov
or
xor
lods
(bad)
loopne
aaa
fild
cwde
test
jne
sub
ror
out
xor
push
cmp
js
sub
sbb
outs
test
cmps
rcr
mov
sub
cmp
rol
sbb
data16
enter
sbb
call
loop
add
inc
les
out
mov
inc
jp
push
pop
cmp
cwde
and
shl
jl
in
jge
and
push
test
push
movs
popa
xchg
dec
ss
or
pop
adc
xor
and
xor
popf
lds
and
rcr
inc
call
inc
inc
movq
cmp
xchg
or
(bad)
dec
outs
aam
xor
les
sbb
add
push
imul
sbb
cld
(bad)
iret
inc
mov
adc
not
pushf
loop
jge
out
or
adc
fld
outs
cmp
rcl
sar
cmp
mov
lock
jns
fadd
fmul
paddq
movs
shr
add
in
pushf
dec
idiv
mov
sub
inc
cmp
cwde
or
jl
jl
int3
jmp
out
xchg
popa
xor
addr16
out
loope
adc
sub
adc
mov
jge
popf
sar
mov
add
sahf
sub
repz
int3
mov
push
sbb
mov
jmp
mov
or
lea
rcl
or
sbb
shl
pushf
iret
not
sub
mov
lods
sub
pcmpeqd
or
and
push
mov
inc
mov
sbb
mov
pop
mov
jp
push
and
cmc
add
and
int3
cdq
into
ins
test
add
lods
repz
cmps
jns
popf
cmp
cmp
outs
jb
pop
leave
iret
jl
popf
dec
aad
or
leave
adc
sbb
mov
popf
lea
sbb
(bad)
sar
inc
movs
xor
mov
xchg
or
sub
adc
or
or
les
adc
jno
daa
or
push
inc
out
in
repnz
mov
fsubr
mov
mov
rcr
xor
aam
adc
cmp
xchg
mov
loopne
inc
jb
lds
(bad)
gs
pop
add
xchg
fidiv
xchg
pop
(bad)
in
(bad)
sbb
daa
mov
sub
xchg
loope
in
loopne
jmp
mov
cmp
je
xchg
(bad)
jb
lock
dec
mov
addr16
sub
outs
pop
jp
mov
xor
lds
add
ret
mov
mov
push
xor
test
xor
xchg
movs
dec
test
js
adc
pushf
addr16
lock
dec
arpl
or
mov
imul
js
jo
das
cmp
xchg
movs
outs
ror
dec
popa
shl
test
popa
adc
mov
jmp
add
cmp
sbb
movs
jge
mov
push
call
adc
xchg
sbb
arpl
fstp
and
mov
js
pop
add
ins
pop
iret
jl
lock
pop
bound
sub
sub
loope
outs
and
jo
xchg
inc
aas
xor
inc
or
pop
xlat
xor
in
xor
div
das
cmp
cmp
arpl
sbb
out
or
mov
mov
and
retf
(bad)
jb
(bad)
(bad)
lahf
lock
pop
pop
in
mov
or
ins
inc
dec
and
popf
cmps
or
sub
ins
pop
push
shr
cmp
xor
mov
and
jge
movs
lahf
cmps
out
cld
loope
bound
push
jmp
cmp
jmp
cdq
hlt
sbb
add
popf
inc
rcr
xchg
stos
fnstcw
pop
cmp
das
fs
or
mov
lock
pop
mov
jg
loope
data16
ret
push
sar
fld
stos
xchg
mov
clc
imul
ins
sub
push
dec
stc
pop
popf
push
int3
mov
sub
pop
(bad)
push
xor
or
enter
or
jb
arpl
xor
mov
pop
je
pop
aad
xchg
test
movs
mov
ret
lods
daa
xor
sbb
cmp
jge
outs
dec
pusha
xchg
(bad)
sar
mov
inc
(bad)
adc
lods
inc
jbe
or
test
add
or
repz
inc
fs
scas
jbe
stc
jo
jmp
pop
xchg
std
shl
push
int3
in
retf
stos
add
and
fwait
movs
mov
mul
dec
cmp
bound
aaa
mov
sub
push
or
adc
fisub
jae
lahf
mov
mov
push
xor
movups
sbb
fstp
repz
xchg
cmp
les
ret
pop
mul
fistp
cmps
xor
rol
push
ror
push
adc
push
mov
and
or
sub
inc
and
cmp
aam
jl
fcom
sar
data16
mov
jo
mov
pop
sbb
out
cdq
sub
jle
xchg
movs
movs
ret
stc
sahf
cdq
pop
nop
sbb
adc
shr
push
mov
dec
cmp
add
add
mov
push
dec
lds
cld
dec
imul
popa
adc
pop
int3
int3
or
mov
cs
retf
ds
fnsave
addr16
add
push
mov
adc
inc
movs
int
sub
and
mov
jmp
mov
fadd
sbb
scas
sbb
push
cmps
or
and
add
mov
in
in
loop
mov
add
lods
inc
push
xchg
mov
sbb
adc
or
out
adc
mov
leave
mov
js
stos
xor
inc
or
repz
dec
rcl
js
hlt
sub
das
fild
mov
sbb
push
jo
(bad)
mov
or
xlat
shl
jl
stos
sub
mov
push
pop
icebp
in
push
call
jmp
pusha
in
pop
add
inc
out
sub
int3
ds
imul
sub
fadd
adc
je
movs
xchg
pop
or
rcpps
call
fiadd
jecxz
mov
jb
push
push
push
add
call
stc
iret
(bad)
int3
push
add
xchg
sub
inc
into
mov
adc
mov
les
sahf
jne
add
mov
call
jno
xor
jno
jbe
or
dec
popa
stc
or
lods
in
rol
mov
push
test
mov
mov
jns
push
aas
shl
xor
sub
mov
push
movs
dec
xor
pop
adc
inc
sbb
cwde
addr16
sar
aas
in
xor
jnp
adc
fldenv
sub
mov
xor
(bad)
mov
or
inc
lock
in
fcom
push
push
mov
push
ins
fmul
movs
loope
jne
movs
xchg
fiadd
push
fwait
mov
cmp
gs
and
mov
jne
cmp
in
mov
lock
or
mov
in
out
dec
or
sahf
xor
scas
mov
pop
int
adc
dec
pushf
hlt
retf
rol
cmp
mov
or
mov
ins
adc
(bad)
push
sbb
cs
cmc
sbb
and
xchg
or
test
jne
dec
retf
sbb
out
shl
out
movs
mov
cmps
inc
dec
cmp
mov
jmp
xchg
inc
jne
test
cmp
fisttp
arpl
scas
mov
cmp
sahf
xor
adc
nop
pop
mov
jb
rol
arpl
jbe
push
mov
lds
push
jnp
add
push
or
ins
popa
mov
fisub
enter
movs
lock
xor
mov
sub
sub
and
xor
add
in
cmp
push
(bad)
lahf
add
nop
inc
mov
cs
mov
(bad)
cmp
xchg
sbb
inc
aaa
lock
mov
cwde
inc
adc
test
ficom
inc
xlat
dec
xchg
jno
mov
mov
xor
push
mov
pop
sbb
dec
push
push
mov
mov
wbinvd
jmp
in
pop
dec
imul
or
inc
out
push
xchg
pop
in
adc
xchg
or
pop
mov
nop
adc
in
(bad)
out
fwait
push
push
xchg
movs
movs
retf
xchg
and
ja
mov
push
(bad)
scas
out
test
mov
push
jmp
jns
fldcw
sbb
hlt
dec
dec
in
cli
out
movs
xor
xchg
jge
in
mov
rcl
cmps
xor
pop
jg
adc
push
cmp
gs
adc
cmp
inc
mov
jg
(bad)
mov
sub
stos
iret
jns
mov
sub
loopne
push
mov
cmps
test
mov
cmp
dec
cmp
bnd
ret
add
in
mov
or
popf
sub
inc
call
iret
push
mov
aaa
test
add
mov
mov
xchg
jb
dec
pop
cmp
in
cmps
or
push
cmp
push
and
rcl
push
movs
scas
mov
jbe
mov
push
xchg
sbb
(bad)
aas
std
fdivr
ins
pop
xchg
jmp
jns
pusha
and
je
repnz
or
imul
iret
mov
sbb
mov
adc
mov
sub
mov
fs
ret
mov
out
inc
js
add
sbb
int
nop
in
xor
xor
fdivr
ret
xchg
mov
enter
xchg
mov
xchg
xchg
pop
and
out
xchg
fmul
outs
pop
dec
leave
push
(bad)
adc
dec
jns
dec
add
or
ins
push
jb
enter
cmp
push
rcl
into
xchg
push
sub
ss
sti
push
data16
test
pop
or
pop
std
jge
jmp
sbb
shl
retf
mov
sbb
sub
shl
pop
cmp
sti
inc
mov
or
mov
adc
inc
loope
dec
daa
xchg
pop
sub
aam
dec
gs
and
xchg
jbe
sar
(bad)
shl
mov
je
test
std
mov
mov
enter
retf
or
scas
add
add
mov
push
cmp
or
or
jb
dec
retf
mov
xor
arpl
mov
xchg
and
jecxz
aam
xchg
pop
stos
enter
(bad)
sub
mov
jl
aas
sub
cdq
xor
xor
mov
imul
in
fild
sub
dec
xchg
loope
pop
test
push
and
mov
jb
add
mov
pop
scas
or
adc
pusha
lds
mov
xchg
dec
sti
inc
rcl
adc
dec
out
mov
or
push
enter
push
inc
clc
xchg
cmps
jns
daa
and
mov
dec
fild
dec
into
jle
push
test
xchg
add
push
mov
mov
cdq
outs
dec
in
and
cdq
and
xchg
jmp
mov
popa
sar
cmp
sbb
add
movs
mov
popf
inc
push
fmul
cmp
popf
inc
or
int3
sti
and
mov
sub
push
add
mov
inc
cmp
mov
sar
or
cwde
or
push
push
cmps
sbb
sub
mov
add
sub
cmp
into
xor
and
lds
jge
mov
shl
sar
inc
or
hlt
pop
shl
lea
mov
aad
dec
push
mov
arpl
xchg
movs
int3
aaa
(bad)
sahf
push
sub
(bad)
and
xchg
cmps
ret
enter
pop
adc
movs
push
fist
ins
pusha
inc
fnstcw
pop
jo
shr
gs
sti
ins
retf
test
js
mov
push
push
inc
sub
sti
cli
test
aam
and
loope
int
pop
cli
ret
jae
adc
dec
retf
jmp
aas
into
shl
adc
add
mov
and
icebp
ds
mov
ins
mov
fadd
daa
or
mov
jge
(bad)
in
inc
push
cmp
add
adc
push
mov
xchg
mov
push
out
popa
mov
cmp
xchg
call
or
adc
daa
adc
adc
push
sub
addr16
gs
sbb
fdiv
adc
inc
mov
adc
dec
and
mov
jp
cwde
ss
out
outs
pop
scas
fisttp
bound
jo
pushf
jmp
add
shl
cmp
and
aaa
fmul
iret
inc
push
rol
adc
in
movs
aas
xchg
fistp
cmp
jne
mov
and
xor
jns
sbb
sub
push
scas
push
mov
les
dec
lods
test
test
xchg
push
mov
xor
pop
movs
jmp
sub
fsubr
pop
aaa
inc
adc
xchg
call
mov
sub
xchg
push
movs
mov
mov
and
jmp
imul
mov
inc
fistp
or
pop
xor
push
mov
xor
mov
sub
push
repnz
inc
test
sub
loope
push
ja
(bad)
sbb
and
stc
jmp
sar
xor
adc
sbb
or
into
xchg
add
and
cmps
and
and
arpl
int
or
cli
cdq
xor
out
sahf
add
pop
jae
inc
and
inc
and
mov
jp
and
cmp
xchg
mov
test
stc
pop
mov
scas
jns
add
inc
push
retf
cmps
pop
jnp
xorps
inc
pop
adc
cmps
add
mov
outs
ja
push
cmp
xchg
daa
add
pop
pushf
inc
xchg
cli
xchg
sbb
ret
or
sub
pop
pop
xchg
clc
cmp
inc
xchg
push
movs
outs
push
into
gs
rol
ins
int
and
lds
dec
and
pop
cmp
das
xor
mov
jbe
out
test
ins
ja
jle
mov
inc
nop
xor
lods
xchg
cmp
fadd
push
ret
jmp
pop
inc
or
pop
adc
push
in
aas
xchg
adc
aad
pop
iret
stos
and
pop
or
icebp
jl
movs
cmp
adc
add
jns
push
mov
jmp
add
adc
jne
ins
jns
push
leave
add
or
dec
and
fs
adc
retf
fsub
xor
out
jns
pop
pop
in
xor
mov
arpl
test
data16
dec
xor
or
push
aaa
sbb
stos
xchg
adc
inc
jo
xor
mov
dec
sbb
pusha
push
xchg
add
cmp
or
mov
pop
pop
or
jne
pusha
adc
out
loopne
aad
cmp
mov
sbb
xor
cwde
sbb
enter
jecxz
dec
pop
jno
cdq
shl
int3
movs
add
sbb
adc
jne
scas
xchg
cmp
ss
(bad)
xchg
and
ret
push
dec
and
in
mov
xchg
push
jmp
sbb
pushf
inc
inc
retf
sar
mov
leave
clc
or
dec
adc
push
std
mov
sub
push
pop
pusha
and
and
adc
xchg
dec
out
mov
or
xchg
push
sub
lock
mov
nop
pop
adc
push
or
test
add
and
repnz
mov
pop
push
ficom
push
outs
fadd
xchg
xchg
mov
add
fild
sub
mov
jbe
push
dec
mov
int
cdq
fxch
mov
fnstcw
(bad)
sar
inc
dec
(bad)
not
shr
cwde
xchg
xchg
jmp
mov
test
movs
ds
and
push
add
cmp
cmps
push
pusha
mov
add
lea
ins
sub
adc
jl
xchg
inc
pop
sbb
shl
push
xchg
movs
jge
not
inc
mov
cmp
or
int3
adc
push
jb
shl
cmc
mov
sbb
and
test
or
enter
(bad)
hlt
test
repnz
cmp
ss
imul
push
mov
test
jno
pop
and
sub
inc
add
sub
dec
jg
test
mov
xor
lock
pop
das
cmc
lods
adc
xchg
xor
nop
(bad)
in
aam
das
ins
cmp
inc
push
ficom
inc
jae
add
dec
fs
inc
pop
cmp
cmp
or
adc
stos
or
adc
daa
test
loopne
fdivr
push
popf
adc
sub
jmp
gs
out
idiv
xor
push
lds
adc
pop
mov
or
lock
popa
dec
mov
cdq
jne
mov
pop
out
test
push
mov
cmps
push
cmps
pop
fcom
sub
shl
frstor
inc
xchg
jmp
rcr
sbb
(bad)
fistp
or
popa
movs
push
mov
sbb
sub
pop
addr16
xlat
xchg
fsub
sub
cmp
sub
xchg
ror
ret
movs
dec
loopne
xchg
iret
xchg
pop
and
cs
(bad)
fs
mov
scas
push
std
jmp
pushw
mov
mov
dec
and
pushf
push
add
xor
and
cmp
les
mov
in
sub
cld
gs
xchg
cs
adc
mov
mov
aam
sub
cmp
sbb
jbe
loopne
xor
cmp
or
cmps
ja
inc
shl
mov
mov
loopne
in
popa
fisub
out
adc
cmc
inc
jae
pop
imul
xchg
adc
into
jae
or
inc
dec
xchg
vpshufhw
inc
xchg
enter
inc
test
movs
inc
aas
fdivr
sahf
mov
push
cmp
or
fs
outs
pop
jmp
mov
leave
retf
into
push
and
fdivr
xchg
cs
aad
push
daa
rcr
neg
in
fwait
adc
test
and
inc
mov
push
fisttp
inc
and
test
adc
mov
jp
mov
lock
daa
add
xchg
ret
retf
js
fmul
sbb
push
lods
xchg
(bad)
sub
sahf
retf
and
and
je
pop
xor
loop
gs
and
or
sub
aad
(bad)
adc
fincstp
xchg
or
xchg
push
mov
in
ror
inc
push
mov
jno
retf
or
sbb
or
mov
test
repz
and
movs
inc
mov
loop
aas
sar
push
pop
cmps
cmp
into
xor
or
add
pusha
ds
pop
jbe
fxam
loope
in
xor
jb
mov
test
mov
adc
loop
aam
mov
push
and
push
jae
lahf
movs
popf
jp
sbb
add
sub
sub
pop
ins
mov
ins
or
mov
jge
inc
adc
test
sahf
mov
mov
cmp
add
fdiv
fucomi
pop
retf
or
jnp
mov
out
mov
jnp
xchg
mov
jns
test
xchg
lods
aas
or
(bad)
xchg
jbe
sbb
cwde
jne
sbb
add
rol
enter
mov
std
pop
dec
out
inc
push
inc
test
xchg
cmp
and
jo
push
ins
mov
xor
(bad)
mov
mov
dec
test
mov
popa
dec
mov
cwde
sub
scas
pusha
push
sahf
(bad)
pop
jne
pusha
sub
mov
mov
xchg
jns
xor
mov
cmovae
jp
lods
cs
ret
push
arpl
mov
dec
out
aas
or
repz
mov
mov
ret
daa
out
adc
mov
das
or
mov
test
test
xor
inc
movs
adc
sub
adc
data16
cmp
dec
ret
ja
xchg
mov
or
xor
int
pushf
mov
xchg
add
aas
mov
inc
lds
jo
xchg
add
dec
imul
xor
iret
pop
test
push
(bad)
pop
nop
fiadd
and
dec
(bad)
leave
xor
lds
pop
jbe
xor
pop
or
fcomp
inc
sti
sbb
in
mov
out
jecxz
ret
and
cmp
fldcw
retf
sub
jge
aaa
(bad)
cmp
xor
adc
in
sbb
mov
mov
jg
xor
sub
sbb
jecxz
or
dec
pop
or
sahf
les
xor
or
ss
pop
or
enter
xchg
aad
cld
bound
add
popf
or
adc
test
stos
xor
sahf
inc
push
dec
xchg
mov
mov
ja
imul
sbb
xchg
xchg
or
mov
cmp
(bad)
fs
fld
shl
sbb
(bad)
mov
cld
in
test
and
loop
fsub
ins
or
test
jmp
mov
adc
lods
shr
hlt
fadd
int3
es
icebp
cmp
iret
les
nop
pop
lods
add
add
(bad)
aam
mov
std
jmp
adc
repz
push
jne
jp
and
cwde
std
mov
ret
test
ret
sub
and
das
cs
ret
into
xor
test
addr16
or
mov
rcl
push
sub
cmps
and
mov
(bad)
jb
xor
call
xchg
pop
stos
or
not
dec
and
sar
dec
push
mov
mov
cwde
sbb
repz
aas
inc
xchg
outs
stos
lea
push
sub
int3
add
retf
xor
fimul
sub
fsubp
enter
sub
mov
leave
call
jae
shr
cwde
inc
movs
adc
test
mov
xchg
(bad)
push
js
cmc
enter
inc
push
pop
cmp
push
lock
cld
pop
xchg
ss
mov
out
inc
scas
xchg
ret
es
sbb
mov
ins
cs
dec
cwde
stos
je
lea
dec
mov
jb
cs
cmp
outs
fist
sub
add
retf
push
sub
xor
ins
mov
pop
push
outs
ret
inc
pop
(bad)
mov
aaa
ror
xor
das
arpl
adc
repnz
mov
rcl
inc
movs
cmp
cmp
and
xlat
inc
call
pop
or
dec
aad
mov
push
not
clc
jae
inc
sbb
inc
xchg
lds
cmp
pop
(bad)
pop
cmps
add
push
mov
inc
cmp
aam
cmp
lahf
pop
xor
or
push
js
add
sahf
and
and
and
xor
out
dec
fs
popf
adc
jb
mov
jo
mov
mov
js
pushf
in
test
mov
(bad)
sbb
sub
mov
jns
test
dec
xchg
adc
jns
inc
xchg
out
retf
mov
mov
inc
data16
(bad)
fdiv
xor
mov
xor
mov
dec
cmp
mov
push
aas
push
iret
add
ss
scas
stos
jnp
xchg
jno
inc
ret
adc
test
fcomp
arpl
add
mov
std
nop
cmp
cmp
and
xchg
or
mov
test
push
into
retf
and
in
and
pop
sub
jmp
cs
jecxz
lods
sub
add
adc
retf
cmp
inc
lea
fwait
call
(bad)
rol
(bad)
mov
sbb
inc
imul
pop
mov
bound
and
mov
or
test
add
add
out
dec
jne
push
leave
dec
test
cmp
sysret
pushf
and
mov
mov
cwde
int
xchg
jo
and
and
push
xchg
fild
jmp
add
test
xchg
stc
push
dec
ins
push
inc
adc
ror
xor
dec
push
xor
je
pop
push
push
xchg
dec
mov
add
les
sahf
push
popa
out
enter
lea
(bad)
jb
and
mov
xor
mov
cmps
mov
or
mov
push
retf
mov
inc
adc
ret
jno
frstor
mov
mov
or
sub
or
test
into
jbe
adc
jl
dec
xor
movs
dec
adc
mov
(bad)
cmp
mov
wbinvd
(bad)
dec
and
jmp
enter
shl
lods
or
sahf
or
jmp
popa
ss
out
mov
mov
rcr
inc
xchg
add
lock
repnz
jmp
or
mov
fld
(bad)
and
aam
lods
xchg
out
fsub
leave
xchg
inc
loop
cmps
cwde
lods
retf
sub
add
xchg
sub
rcr
xchg
int3
xchg
ret
jecxz
or
pop
into
(bad)
ja
jmp
arpl
sub
mov
mov
gs
cmp
push
cmp
dec
add
(bad)
aam
and
jmp
or
pop
outs
je
fmul
outs
xor
stos
mov
mov
cmp
(bad)
dec
dec
repz
das
movs
pushf
clc
or
rcr
adc
add
sbb
mov
inc
mov
iret
adc
add
mov
mov
enter
sbb
push
and
xor
pop
inc
mov
sub
sar
push
sahf
pop
mov
cmps
add
ins
jns
out
out
and
mov
add
mov
cwde
das
(bad)
retf
movs
dec
jmp
xchg
mov
shl
dec
daa
dec
jbe
js
sbb
lds
cmp
mov
repz
xor
cmp
dec
retf
bnd
repnz
inc
stos
xor
mov
or
or
xchg
std
dec
pushf
fwait
xor
push
xchg
sbb
out
repnz
pop
mov
mov
push
int3
icebp
bound
push
mov
jmp
repnz
push
or
sbb
inc
ds
out
imul
retf
test
outs
sub
das
shl
inc
es
sbb
(bad)
in
jns
pushf
add
aad
test
lock
mov
inc
adc
rcr
fistp
dec
sub
clc
inc
in
sub
or
or
pusha
xor
push
imul
pop
xchg
jmp
cmp
gs
sbb
das
retf
cmc
adc
dec
stos
cld
mov
add
mul
sar
push
in
add
aad
cmps
cs
jne
xchg
mov
dec
or
xchg
adc
adc
out
pusha
daa
test
repnz
add
cmps
xchg
(bad)
out
call
or
imul
cs
and
sbb
not
jmp
push
imul
xchg
jno
adc
inc
mov
mov
outs
pop
out
and
jbe
pusha
das
xor
fcom
mov
mov
push
pop
mov
shl
mov
in
jmp
pop
push
and
cmps
(bad)
mov
or
out
sbb
lds
sbb
xchg
imul
gs
stos
rcr
sbb
inc
dec
xor
lahf
arpl
jo
(bad)
sbb
test
iret
xchg
popf
sbb
adc
push
mov
dec
iret
lods
addr16
and
adc
mov
repnz
pop
dec
cmc
fucom
pop
repnz
inc
pop
jmp
or
add
enter
push
lahf
call
inc
jnp
sub
push
or
outs
xchg
pop
inc
pop
lock
call
pop
movs
xor
or
mov
jns
or
inc
dec
or
in
or
int3
pop
mov
popf
sbb
ror
pop
push
jnp
lods
or
add
xor
fidivr
pop
lahf
xlat
imul
cwde
stc
mov
lds
dec
js
sub
lods
xor
or
(bad)
mov
jmp
push
push
loope
push
mov
fcomp
dec
(bad)
xchg
inc
cmp
cmp
jne
push
rol
sahf
in
stos
jb
jecxz
inc
aad
cs
add
(bad)
mov
sbb
add
inc
inc
scas
data16
push
xchg
xchg
inc
xor
xor
xchg
mov
lahf
mov
mov
push
and
jmp
push
cmp
int
pop
mov
inc
push
out
xchg
jb
aam
call
cld
push
in
mov
or
outs
(bad)
fisubr
aam
nop
ss
js
movs
xor
adc
rsm
xchg
fstp
in
add
mov
aas
xor
ficom
je
aad
aas
js
add
pop
and
(bad)
pop
push
cmp
enter
push
xchg
into
std
sub
push
in
ss
push
out
mov
dec
(bad)
loop
xchg
jecxz
mov
pop
jb
pop
retf
jp
xor
add
addr16
outs
add
test
and
push
leave
and
mov
pop
add
lahf
dec
leave
sub
xchg
push
add
or
pop
mov
and
movs
push
loop
das
pop
test
add
mov
jle
or
jne
jg
int3
dec
cli
sbb
sbb
enter
into
dec
sbb
add
dec
fsubr
inc
inc
or
outs
test
mov
xchg
(bad)
mov
adc
add
pushf
adc
fsubr
fiadd
cld
dec
nop
adc
sbb
sub
stc
or
nop
jmp
faddp
pop
leave
popa
setno
gs
es
and
mov
jl
loop
inc
and
dec
ins
and
loopne
cs
int3
xchg
and
cmp
adc
ret
mov
adc
dec
imul
and
and
ror
test
pop
mov
add
ret
outs
iret
pop
(bad)
(bad)
in
mov
sub
dec
xchg
add
and
mov
inc
push
push
inc
dec
xchg
dec
mov
and
icebp
rol
and
cmps
xor
mov
xchg
adc
cmp
mov
aas
pushf
imul
mov
imul
push
daa
xchg
pop
cmp
call
pop
fcomp
inc
inc
popa
pusha
inc
in
jecxz
out
and
pop
mov
cmp
jp
mov
fdivrp
adc
mov
aas
in
in
in
sub
and
ss
inc
(bad)
push
jo
sbb
pop
adc
ffree
ret
adc
out
stc
ds
lods
es
push
adc
je
xor
outs
pop
popa
add
mov
jp
ss
jb
mov
int
or
inc
mul
jb
into
rcl
pushf
pop
fs
rcr
push
loopne
cmp
or
xor
dec
addr16
push
push
jmp
es
jp
imul
cs
mov
sub
add
xchg
push
xchg
sub
repz
dec
scas
push
iret
and
sub
dec
xchg
sbb
or
(bad)
test
stos
xor
cmp
xor
stos
and
(bad)
pop
pop
mov
push
add
pop
cmp
pop
adc
imul
mov
lock
cmp
mov
xor
pusha
sti
(bad)
dec
pop
xchg
aas
push
cs
xchg
xchg
leave
imul
xchg
adc
sub
fild
lods
add
aaa
cli
mov
adc
and
and
xlat
fsub
jmp
push
js
repnz
pop
loope
jne
pop
shr
lods
enter
inc
xchg
in
sub
push
rcl
cld
or
in
les
dec
add
test
aas
in
sbb
rcr
js
js
dec
mov
mov
ret
mov
fisub
cld
adc
jp
push
pop
cmp
sub
push
sub
int3
popf
or
psrad
enter
xchg
dec
sbb
int
out
das
mov
jmp
mov
call
neg
and
fmul
daa
mov
xchg
mov
jecxz
sbb
imul
and
adc
dec
enter
push
inc
cmp
scas
dec
jb
retf
push
fwait
cs
mov
push
push
sahf
repz
into
pop
hlt
fdivr
nop
xor
jo
or
pushf
dec
lods
mov
xchg
dec
outs
jnp
test
nop
sahf
sub
pop
in
out
mov
push
movs
jp
pcmpeqb
fcom
sbb
std
xchg
pop
inc
fcomp
fist
scas
or
jbe
iret
test
mov
mov
movs
mov
cmp
mov
retf
in
mov
fwait
mov
sbb
imul
scas
test
gs
lock
arpl
or
jb
jno
or
sbb
addr16
out
shl
lods
xor
inc
(bad)
push
inc
adc
or
pop
lock
pop
leave
aas
icebp
sub
add
push
test
xchg
lds
cs
cmp
test
push
sar
leave
and
mov
jbe
ror
lock
xchg
lahf
imul
scas
in
cmp
xchg
pmaxub
bnd
int3
gs
jno
push
and
inc
push
pop
pop
in
mov
jne
inc
stos
push
jge
push
pop
mov
test
sbb
xor
and
inc
loopne
fs
mov
sbb
push
scas
cmps
inc
push
leave
mov
mov
cmps
mov
cmps
inc
out
loopne
jp
cmp
fstp
adc
es
jnp
and
outs
imul
mov
fmul
inc
mov
pop
inc
rol
in
dec
es
stos
adc
cmp
shl
adc
push
ror
bound
stos
sub
sub
or
xchg
xchg
test
pop
cmp
mov
mov
ret
int
jns
or
mov
xlat
push
fwait
dec
jae
inc
pusha
data16
add
and
push
lods
cmp
shl
and
daa
mov
xchg
lods
xchg
push
rol
sub
fstp
or
fsubp
add
sti
mov
adc
mov
cmp
mov
xor
test
iret
nop
xchg
je
(bad)
in
test
mov
(bad)
push
push
loopne
cmps
pop
out
test
mov
cmp
and
mov
fs
add
das
pop
lahf
pop
scas
mov
mov
fist
xor
xchg
jno
push
and
inc
ja
xor
mov
sbb
pop
or
cli
or
retf
push
and
and
or
loope
test
(bad)
ret
retf
adc
call
add
cwde
rol
repnz
(bad)
rcl
jge
int3
sub
cwde
mov
adc
ret
add
pushf
dec
cmp
aaa
sti
sahf
pop
not
cmp
and
add
xchg
and
mov
and
sub
or
hlt
pusha
push
xor
pop
outs
(bad)
pop
shl
enter
arpl
cmps
inc
mov
add
shr
inc
mov
mov
pop
sbb
xchg
fcmovnb
pop
aad
inc
mov
pop
in
mov
mov
push
lock
cmps
or
sub
sti
pop
movs
mov
jnp
sub
(bad)
fcmovnbe
cmp
sahf
in
jl
or
or
and
add
adc
data16
mov
or
push
jl
cwde
loop
xlat
push
mov
or
xchg
adc
adc
mov
cmc
scas
jp
xchg
fstp
nop
(bad)
mov
xchg
sub
add
and
push
xchg
aaa
push
xchg
xchg
xchg
mov
xchg
ins
out
cwde
add
jmp
xchg
mov
mov
mov
out
js
or
fst
in
and
xchg
lds
cli
or
sbb
leave
adc
pushfw
sahf
mul
or
lahf
lds
in
lock
mov
loopne
fdiv
or
pop
(bad)
sub
push
mov
inc
icebp
push
outs
push
pop
mov
jns
loopne
sbb
mov
add
fsubr
mov
or
pop
test
sub
and
test
cmpxchg
adc
xor
pop
adc
xchg
gs
jns
jg
mov
and
je
and
hlt
xchg
inc
add
pop
cmps
sub
mov
xor
lds
cmp
out
addr16
mov
xchg
pop
test
mov
push
adc
jge
hlt
arpl
and
pop
pop
jns
xor
push
push
in
mov
movs
test
leave
or
jb
dec
dec
dec
and
xchg
dec
je
push
icebp
mov
xor
push
fimul
jno
xor
cli
push
into
sub
jmp
add
mov
aad
mov
shr
in
(bad)
and
popf
loop
or
xlat
dec
rcl
outs
nop
sbb
dec
mov
cmp
cmp
or
or
call
sbb
jno
xchg
and
js
push
cmp
mov
push
push
inc
stc
cld
sbb
or
cli
jp
aaa
fwait
cmp
mov
out
jns
jo
dec
pop
nop
pop
add
shr
inc
xchg
inc
add
fwait
xchg
xchg
and
sahf
ret
retf
bnd
js
push
mov
or
adc
push
test
loop
lgdtd
mov
pop
gs
push
pop
mov
jo
cmp
loopne
in
pop
mov
mov
jns
xchg
ss
inc
fistp
sahf
test
aaa
pop
sbb
xor
repz
add
in
adc
nop
mov
sahf
mov
shl
jl
daa
mov
inc
lds
and
ret
xor
arpl
pop
push
ins
mov
xchg
and
mov
dec
es
sub
lea
(bad)
or
into
pop
icebp
(bad)
adc
test
cmp
mov
mov
xchg
add
out
mov
dec
popf
xchg
les
rcl
retf
adc
mov
push
daa
fs
in
xchg
xchg
mov
pop
repnz
and
pop
lock
inc
sub
nop
pop
sbb
sub
adc
xchg
xchg
add
loop
add
ret
out
sbb
xor
pop
inc
xor
jmp
cmp
stos
and
jnp
jle
push
sar
stc
adc
es
out
jnp
sbb
les
adc
stos
mov
and
jmp
xor
pop
cmp
rep
je
data16
mov
cmp
test
pushf
or
push
inc
push
sub
call
or
xor
mov
pusha
cmp
xchg
dec
jmp
cmc
adc
shl
mov
jb
mov
sbb
push
cmps
xchg
push
data16
fcom
xor
fiadd
ror
adc
aam
into
jecxz
push
and
pop
(bad)
dec
sbb
mov
cmp
les
scas
and
and
xor
cmps
int
int3
dec
into
lea
aad
mov
xchg
jbe
push
in
mov
stos
cwde
cmp
js
adc
loopne
lods
sub
addr16
jbe
xor
jbe
jb
rol
cdq
xlat
and
push
sbb
push
pop
es
(bad)
mov
and
popf
sub
xor
bnd
adc
xor
jb
sar
mov
pushf
mov
dec
sub
inc
cmp
inc
out
xchg
arpl
add
and
jne
cmp
stos
shl
mov
jae
js
mov
sub
mov
and
adc
pop
push
ins
fwait
mov
mov
in
in
pusha
bound
rol
test
inc
cmp
push
xchg
add
pop
or
pop
cdq
aam
xor
jecxz
enter
and
push
xor
sub
outs
sub
in
and
jg
inc
es
sub
push
sub
mov
(bad)
fwait
imul
dec
imul
sub
jae
cmp
and
enter
push
gs
dec
cdq
test
imul
and
dec
movs
sbb
push
xor
mov
ficom
xor
shl
aam
mov
data16
lock
xchg
cmp
xchg
(bad)
and
mov
mov
xor
loope
jmp
and
add
xor
jle
jno
cmp
adc
das
and
mov
fs
sbb
sahf
jns
test
lods
leave
sbb
xchg
imul
add
or
add
adc
ret
test
push
scas
adc
test
icebp
test
xchg
and
ret
lahf
sbb
popf
test
inc
sbb
and
cmp
pop
dec
shl
mov
jns
mov
sbb
and
push
cli
lods
adc
leave
cmps
dec
call
mov
lock
movs
adc
push
xor
jl
xor
or
pop
sahf
js
sub
pop
add
mov
cmps
test
push
(bad)
xor
fucomp
push
dec
mov
(bad)
in
das
fwait
sbb
int
hlt
mov
mov
inc
mov
loop
fsubr
jl
mov
repnz
xchg
lahf
inc
fucom
mov
or
push
mov
movs
xchg
dec
or
call
cwde
adc
jl
push
dec
adc
or
add
xchg
mov
test
lods
sub
mul
jb
(bad)
aam
sub
movs
test
sub
jo
adc
pop
push
lds
rcr
dec
cmp
xchg
mov
gs
and
dec
int
popf
and
and
nop
bound
push
sti
and
lods
jbe
cmps
out
dec
bound
neg
test
shr
and
out
cmp
fmul
dec
in
mov
mov
mov
cdq
xchg
sub
sar
in
test
jg
adc
je
inc
movs
inc
push
sbb
fcom
out
and
das
repnz
pop
cli
adc
into
sub
scas
add
xchg
cmp
test
dec
dec
jb
sbb
outs
xlat
xor
mov
arpl
test
movs
pop
inc
call
and
push
out
leave
and
das
dec
mov
adc
jae
repnz
xor
enter
push
call
call
in
xor
adc
in
sub
or
fdivr
inc
push
bndldx
or
sbb
add
fs
call
mov
push
bound
(bad)
rcl
mul
pop
ss
inc
add
sahf
pop
jne
das
hlt
pop
iret
addr16
push
das
jo
jno
adc
aad
fs
sub
loop
hlt
add
mov
inc
fcomp
mov
cld
xor
(bad)
fidiv
repnz
inc
sbb
push
popa
sub
pop
add
jo
inc
ror
pushw
inc
ret
inc
jge
cmp
mov
push
or
shl
cmp
cli
mov
scas
fsub
hlt
test
sbb
outs
gs
push
(bad)
sbb
mov
jns
inc
and
cmp
inc
ret
jmp
sub
in
pop
sub
xor
setbe
cs
jl
aam
mov
adc
clc
jmp
icebp
dec
mov
jnp
fstp
aad
sub
inc
cs
pop
lods
ds
lea
jl
sbb
push
inc
sub
jmp
sahf
or
xor
cli
sbb
maskmovq
test
in
jbe
pop
imul
push
ss
cmc
data16
mov
fcomp
pop
call
stos
cmc
test
pop
jmp
(bad)
in
cmps
sbb
fdivr
leave
retf
int
jmp
jno
test
sub
retf
in
pop
movs
repnz
pop
stos
in
xchg
mov
(bad)
in
adc
xor
(bad)
rol
jmp
retf
scas
aaa
jg
inc
jae
in
enter
call
jg
idiv
jmp
pop
pop
sbb
std
mov
push
(bad)
jnp
adc
adc
sbb
mov
pop
or
ret
int
sub
xchg
fstp
xchg
aaa
sti
xchg
mov
repz
lods
jb
cmp
pop
into
pop
fiadd
stos
idiv
inc
mov
mov
cwde
or
sub
dec
cmp
in
xchg
sub
mov
jae
mov
jo
stos
fcomp
xor
inc
jo
and
sub
hlt
fisubr
cwde
test
push
inc
mov
sub
(bad)
stc
ins
jp
pop
call
cdq
sbb
test
mov
xor
bound
jmp
push
(bad)
or
push
cmc
mov
lods
pop
jl
push
dec
fist
ret
daa
aaa
cmp
mov
xchg
sbb
aam
mov
ds
sbb
dec
sub
push
mov
push
jnp
fs
aas
pop
pop
retf
imul
popf
xchg
dec
jae
jge
xor
scas
(bad)
pop
pop
in
jge
aam
lods
mov
out
bnd
mov
mov
cli
cdq
(bad)
sahf
ja
cmps
aaa
fidivr
push
stos
push
lods
scas
xchg
pop
lods
das
pop
pop
sti
mov
mov
dec
out
jnp
mov
outs
mov
fidivr
adc
fsubr
jmp
das
mov
(bad)
(bad)
cli
(bad)
pop
(bad)
in
sahf
div
(bad)
(bad)
repz
mov
mov
cmp
xchg
jmp
idiv
mov
call
vorpd
mov
pop
in
stc
mov
cmps
fs
lods
xchg
and
jnp
gs
js
std
cmp
test
aad
xor
stos
rcr
mov
je
mov
sbb
mov
ins
pop
mov
mov
push
aam
popa
mov
test
outs
mov
(bad)
rcr
(bad)
(bad)
stc
mov
pop
aam
push
(bad)
xor
mov
neg
pop
out
scas
int3
xchg
out
inc
mov
into
mov
push
test
movs
lds
mov
mov
xor
pop
call
arpl
(bad)
das
stos
outs
push
jl
cs
int3
loopne
das
cmc
mov
sahf
fild
sub
lds
push
mov
out
adc
popa
jg
cmc
fisub
std
mov
mov
mov
xor
clc
div
(bad)
es
mov
shl
data16
fcmovnu
out
fstp
mov
jge
cmp
(bad)
call
bound
cmc
shl
xchg
daa
es
hlt
sbb
mov
jmp
pop
push
sbb
jns
pusha
je
mov
jbe
scas
outs
rcl
pop
jg
jecxz
jp
(bad)
popa
into
stc
jge
pop
adc
scas
mov
(bad)
pop
ins
sub
xor
icebp
ret
dec
shr
icebp
aad
hlt
mov
or
cmc
ins
jge
mov
scas
sub
adc
cmp
push
inc
femms
in
mov
inc
jmp
(bad)
stos
aaa
mov
sbb
loope
mov
fwait
push
push
xchg
out
in
fwait
cmp
cmp
loope
add
dec
outs
aaa
mov
loope
adc
push
mov
das
pop
aam
scas
rol
aad
adc
fistp
mov
idiv
mov
js
ficomp
outs
aam
in
push
iret
mov
arpl
arpl
push
push
inc
mov
(bad)
lods
sahf
movs
and
aaa
gs
sar
ins
stc
pop
in
jns
js
xor
int
push
fisubr
mov
out
jg
out
std
mov
cmps
orps
(bad)
jmp
mov
inc
fidivr
(bad)
(bad)
jmp
push
repz
mov
sti
dec
int
jno
stc
stos
pop
mov
xlat
jbe
dec
adc
retf
call
mov
lods
jbe
inc
dec
out
pop
lods
ficomp
in
std
mov
std
outs
movs
(bad)
mov
outs
lods
mov
int
stc
mov
sub
mov
ins
fs
xor
(bad)
cmc
outs
pop
xor
mov
jmp
in
lds
ins
mov
xlat
aaa
pop
jecxz
xchg
cmc
imul
pop
das
pop
stos
(bad)
inc
jb
jmp
out
sbb
leave
fnstsw
mov
mov
int3
fs
xlat
dec
ret
sub
jle
mov
movs
xchg
pop
not
xor
xchg
push
jmp
fld
ret
fwait
sbb
addr16
dec
popf
into
xchg
icebp
pop
imul
cmp
jnp
mov
fcmovnb
(bad)
pop
imul
out
in
cld
outs
mov
stos
mov
dec
std
mov
imul
fwait
mov
shl
ror
cmps
mov
imul
dec
iret
mov
repz
jp
fst
scas
xlat
push
jp
arpl
cmp
ins
cs
mov
mov
push
(bad)
mov
push
aaa
cmp
xchg
cli
cmps
lahf
scas
arpl
lds
aam
jnp
xchg
cmp
std
mov
mov
addr16
ror
(bad)
pop
lods
(bad)
sahf
lahf
ins
mov
scas
push
jle
in
retf
jmp
push
(bad)
fst
scas
jae
mov
gs
jmp
test
mov
mov
jns
xchg
xlat
test
jp
mov
outs
stos
push
imul
xor
jmp
in
inc
lods
mov
ss
lods
(bad)
cli
jp
dec
outs
and
lahf
aaa
xchg
pop
ins
cmp
push
cmp
rcr
jp
xchg
sahf
scas
aam
shr
fcmovu
dec
mov
fcmovu
mov
mov
mov
xchg
sbb
mov
inc
fld
icebp
xor
scas
pusha
lock
arpl
sub
cmp
ins
outs
push
arpl
inc
scas
test
pop
lea
ss
out
dec
scas
pop
jmp
lock
sub
push
imul
push
push
mov
aam
sub
and
aad
hlt
sahf
mov
or
stc
retf
jmp
test
lods
xlat
xchg
jae
push
pop
mov
outs
ja
push
mov
jb
(bad)
aas
sti
push
movs
lods
jbe
mov
outs
mov
jmp
pop
dec
xlat
jle
jle
mov
jmp
in
out
lahf
push
fstp
std
jb
jns
jne
mov
mov
mul
out
lahf
test
and
pop
fstp
(bad)
in
lods
aaa
fist
mov
mov
(bad)
push
fstp
call
push
inc
mov
out
jns
mul
out
mov
out
push
fcomip
mov
jle
aad
stos
popf
mov
lds
inc
in
(bad)
cmp
mov
retf
mov
out
in
repz
out
mov
iret
xor
pop
aas
call
push
out
(bad)
(bad)
xchg
push
stc
aas
ja
push
aad
das
in
dec
test
outs
pop
into
mov
(bad)
fcmove
fistp
scas
lahf
stos
jmp
mov
into
ret
(bad)
call
fdiv
aas
mov
inc
icebp
mov
pop
mov
scas
sbb
mov
(bad)
sbb
imul
mov
js
imul
js
out
dec
out
das
mov
icebp
scas
(bad)
div
ret
imul
stos
mov
mov
scas
fucomp
fdivp
bound
stos
in
cmc
cli
jmp
leave
pop
ins
mov
sub
inc
pop
mov
ins
scas
lods
sub
xlat
(bad)
(bad)
(bad)
xor
imul
aam
or
sti
fldcw
fwait
cmc
aad
pop
ror
fstp
mov
jp
sub
jbe
push
jg
(bad)
jb
(bad)
mov
pop
lahf
pop
dec
imul
lods
jmp
(bad)
lods
jmp
data16
push
movs
mov
outs
pop
outs
lahf
outs
call
dec
sti
jecxz
aaa
ret
inc
push
mov
std
jle
inc
lea
jmp
pusha
sti
jp
in
in
pop
outs
lahf
das
pop
iret
xchg
scas
mov
mov
std
in
neg
stc
lahf
repz
mov
int3
cmps
jge
lods
fldcw
cdq
mov
pop
(bad)
in
ret
push
in
movs
retf
jmp
push
sti
int3
ret
mov
and
jne
xchg
mov
mov
xchg
add
pop
sar
mov
out
inc
jbe
repz
mov
jne
out
(bad)
mov
pop
gs
(bad)
xlat
adc
xchg
repz
out
fsubr
mov
pop
call
mov
jge
or
pop
rcr
ins
sub
xor
push
mov
push
push
mov
and
mov
mov
arpl
xor
mov
sti
fidiv
(bad)
movs
dec
mov
lea
call
pop
sub
add
inc
movs
mov
out
fdiv
shl
jmp
pop
div
inc
fstp
fmul
jecxz
jmp
std
jl
stos
jbe
lods
mov
push
stc
movs
cmp
push
xor
fiadd
outs
scas
out
dec
rol
neg
jne
jns
test
mov
ret
out
lock
or
sub
call
mov
push
cs
adc
push
sub
fdiv
jmp
int
out
in
mov
nop
scas
ficomp
scas
mov
addr16
xor
cmc
leave
out
outs
enter
dec
xchg
mov
(bad)
call
mov
pop
mov
jp
mov
jp
sub
arpl
inc
in
cmc
cli
mov
jns
dec
cmp
ins
mov
and
outs
retf
into
or
retf
dec
aam
fbstp
pop
stos
and
pusha
arpl
push
out
popf
int3
mov
daa
push
push
fist
mov
sbb
lods
data16
mov
scas
inc
call
mov
cmps
jnp
into
lahf
div
and
sbb
cmp
scas
mov
mov
seta
mov
inc
stc
cli
pop
xchg
scas
push
cli
das
retf
pop
mov
lahf
xchg
scas
jmp
cdq
lds
aas
ins
outs
cld
sbb
out
pop
retf
ins
sbb
jmp
pop
mov
icebp
lahf
aaa
aaa
(bad)
jp
pop
mov
cwde
call
cdq
mov
dec
jmp
push
pop
dec
jecxz
lds
cdq
mov
mov
push
dec
push
mov
fnstenv
pop
xchg
imul
inc
movs
pushf
cmps
sti
(bad)
pop
test
sub
and
ror
add
xchg
int
inc
xchg
pop
pop
repz
(bad)
scas
mov
in
out
xchg
cmps
xor
mov
xor
test
lds
mov
mov
jecxz
sbb
test
mov
mov
(bad)
dec
xor
and
dec
cmp
and
push
rcr
pop
ins
jne
add
(bad)
xchg
pop
sub
jle
inc
mov
jbe
iret
jbe
out
out
mov
std
(bad)
sar
xchg
repz
cdq
fsubr
es
dec
jns
data16
inc
(bad)
cmps
repnz
xor
jp
mov
jle
outs
mov
pop
scas
std
js
gs
enter
icebp
jns
pop
imul
(bad)
loop
(bad)
retf
scas
in
popf
push
fstp
or
stc
mov
data16
(bad)
adc
mov
scas
div
jno
mov
enter
or
aas
scas
xchg
lahf
sti
fild
push
sti
push
xlat
fcmovb
int
(bad)
push
stc
jecxz
mov
mov
xchg
mov
sub
fstp
shl
mov
mov
push
aam
repnz
inc
xlat
out
ss
inc
pusha
lods
inc
cli
mov
push
out
mov
(bad)
ffree
in
repnz
xchg
bound
sti
ja
add
test
adc
pop
ins
ss
mov
ret
jne
out
daa
sti
mov
pop
jmp
out
xor
jae
scas
mov
call
mov
int
mov
lock
dec
pop
iret
jnp
iret
pop
(bad)
in
mov
in
out
rcl
sbb
neg
add
jnp
cmc
jmp
push
xchg
in
clc
ficomp
sub
and
mov
fiadd
(bad)
cmp
ret
bound
xor
cmp
retf
inc
stos
std
mov
and
mov
push
jecxz
scas
jmp
xchg
mov
mov
mov
sbb
test
xchg
ins
sub
mul
mov
xor
sub
out
dec
loope
idiv
out
ss
mov
test
mov
outs
jecxz
neg
xor
xchg
repz
or
fldcw
imul
loop
sbb
push
pop
jl
popa
mov
push
or
mov
rcl
in
xchg
pop
xor
gs
ss
jg
fild
ins
sbb
call
je
enter
cmps
bound
cmc
retf
retf
or
ror
loope
adc
and
push
mov
imul
js
xor
add
shr
mov
xchg
mov
popa
shl
rcr
xchg
inc
inc
repz
push
pop
dec
outs
mov
out
sbb
mov
or
ins
ins
fcmovne
je
pop
sub
icebp
sbb
adc
(bad)
test
retf
jmp
jb
test
inc
jle
fisttp
jmp
repz
aad
sbb
mov
pop
scas
xor
jbe
sbb
div
ss
retf
(bad)
add
ins
jl
xchg
cmp
retf
jge
inc
dec
iret
sti
int
push
push
sahf
addr16
cli
push
mov
addr16
sti
cmp
mov
pop
cmc
pushf
outs
cld
xor
rcl
stc
(bad)
mov
ret
push
in
into
mov
rcr
xlat
movs
adc
sbb
and
pushf
inc
cld
gs
outs
inc
and
je
lock
shl
and
jmp
jae
icebp
bound
scas
xchg
pop
mov
and
fstp
adc
sub
mov
fdivr
and
lods
cmc
data16
or
jle
xchg
sbb
std
jns
js
pop
std
mov
xchg
jmp
mov
mov
xchg
mov
int
jmp
mov
in
fsub
cmc
mov
cmps
mov
fisttp
pop
outs
ret
cmp
xchg
int
inc
push
dec
outs
movsx
mov
mov
pop
mov
(bad)
std
(bad)
sti
addr16
fcom
inc
push
mov
pop
out
test
shr
int3
in
jne
mov
and
pop
sub
das
cld
sub
sbb
jmp
push
jbe
jecxz
outs
call
or
cs
hlt
mov
jg
jne
mov
inc
xor
mov
retf
outs
jmp
mov
jae
push
xchg
cmps
and
cmp
mov
jmp
fwait
(bad)
cli
xor
leave
jp
loope
jmp
xor
cld
mov
hlt
dec
out
push
jg
and
popf
or
fcomp
pop
pop
jns
(bad)
mov
out
jmp
mov
ins
scas
cmps
xchg
push
push
ror
sub
or
jns
xchg
mov
xchg
dec
cmp
sbb
mov
das
push
mov
inc
sbb
sub
sahf
retf
jmp
push
pop
std
jo
rcr
adc
and
jge
fs
push
ficomp
or
push
pop
mov
sbb
mov
in
add
iret
xlat
fidivr
pop
in
jge
std
aad
mov
pop
mov
sbb
in
push
push
aam
jp
ds
jnp
inc
inc
lea
xchg
xlat
mov
cli
adc
mov
mov
pop
nop
mov
pop
sub
xchg
push
push
jnp
(bad)
repz
xchg
aad
lds
out
out
cmp
pop
push
mov
pop
scas
movs
pop
inc
mov
(bad)
fxch
jg
xchg
bound
aas
mov
fucomi
pop
pop
pop
pop
push
inc
mov
pop
xor
mov
add
sub
lea
lds
xchg
scas
cmps
add
push
outs
aas
push
dec
jne
ret
push
xor
dec
xlat
aas
retf
dec
(bad)
fcomp
mov
pop
push
nop
ins
push
fnsave
(bad)
jecxz
sahf
ja
or
call
stos
sub
outs
ss
das
(bad)
fwait
mov
mov
mov
ss
push
test
call
jbe
movs
mov
sbb
sub
repnz
arpl
and
imul
das
lods
data16
lahf
(bad)
aad
fld
imul
shr
or
retf
int
aaa
push
ror
adc
ret
xor
push
or
mov
ins
(bad)
retf
in
or
shr
out
mov
mov
fs
xchg
sbb
sti
gs
rep
mov
mov
std
push
push
lea
pop
stos
cmc
(bad)
out
mov
mov
fdivr
cmps
lea
fs
inc
cmp
add
jmp
or
(bad)
sbb
or
push
scas
sub
mov
adc
push
dec
pop
(bad)
sti
(bad)
loope
add
cmp
push
pop
sbb
popf
sub
sub
xor
rcr
int
shr
div
out
and
aam
cmc
mov
lea
push
in
pop
cmp
xor
out
mov
push
jl
pop
fdivr
jno
pop
dec
fdiv
inc
sub
aad
push
in
outs
mov
idiv
jmp
dec
(bad)
xchg
retf
cmc
mov
gs
lods
pop
ins
push
int
imul
dec
imul
ins
xor
xchg
and
dec
mov
dec
fnstsw
retf
ret
daa
push
sbb
dec
push
add
xor
int
pop
lea
xor
inc
ins
mov
ret
loopne
mov
fnstsw
inc
(bad)
jmp
push
pushf
pop
jge
pop
xchg
fstp
movs
stos
mov
jnp
out
(bad)
cmc
pop
lahf
xchg
mov
mov
outs
(bad)
hlt
rol
(bad)
push
(bad)
push
inc
xchg
(bad)
cli
retf
cmp
mov
cld
pusha
jne
pusha
push
jg
bound
xchg
sbb
dec
ins
pop
pop
pop
pop
pop
sub
sub
call
nop
iret
imul
cdq
cs
mov
or
pop
sbb
push
fsubr
dec
jns
push
lock
push
mov
and
stc
mov
adc
lods
das
call
rol
lds
aad
movs
xchg
jp
and
imul
cmps
and
lods
mov
dec
ficom
or
in
scas
xor
mov
imul
imul
lods
(bad)
jmp
mov
mov
test
mov
or
call
in
hlt
mov
sub
jmp
cmp
rol
mov
ret
enter
inc
mov
adc
int3
mov
sub
cmpxchg
mov
pop
loope
jb
dec
fidivr
hlt
adc
xchg
xor
mov
push
in
xchg
and
add
lds
cmc
(bad)
mov
es
call
sar
idiv
sub
xchg
jp
scas
dec
mov
mov
adc
adc
rol
mov
or
dec
gs
and
hlt
dec
dec
sub
pop
call
jno
mov
vcvtsd2ss
popa
out
repz
jle
cld
xchg
sub
jl
inc
stos
ds
repz
xchg
sub
add
retf
daa
test
mov
push
imul
bswap
mov
push
aas
idiv
xchg
mov
xchg
xchg
adc
cli
ret
lock
cmp
ds
add
xor
addr16
std
cld
push
je
imul
movs
lea
xlat
into
mov
out
fild
sti
scas
pop
cld
cmc
jmp
xchg
push
rcl
loop
jns
sub
dec
xor
aad
std
sti
stc
pop
rol
inc
lahf
(bad)
fdivr
mov
js
lods
mov
push
(bad)
jmp
mov
(bad)
repnz
idiv
cdq
jg
mov
sub
(bad)
cmp
stos
bound
pusha
cmp
or
pop
jns
cdq
nop
jle
fbld
fs
icebp
adc
jns
mov
lods
nop
das
add
add
dec
inc
dec
inc
scas
inc
pusha
or
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
pop
add
and
add
add
je
imul
add
sldt
add
add
push
push
add
add
add
inc
push
dec
inc
add
add
sldt
mov
inc
ins
outs
bound
add
add
add
add
add
push
adc
add
add
add
add
add
add
add
sub
add
pop
add
add
add
add
add
add
add
add
add
xor
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
push
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
adc
push
add
cwde
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
das
add
arpl
add
add
int
mov
push
add
add
fild
daa
push
repz
add
iret
add
add
iret
add
add
add
add
push
mov
push
add
push
mov
push
add
push
mov
push
add
pop
mov
push
add
pop
mov
push
add
push
push
add
mov
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
jg
or
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
push
sbb
add
add
add
add
add
adc
add
pop
add
add
adc
or
sbb
add
movs
and
add
add
or
add
add
add
adc
push
add
and
add
add
or
inc
add
add
and
add
add
mov
add
and
add
add
les
push
and
add
add
add
add
add
add
inc
add
add
add
dec
and
add
add
add
add
add
and
add
add
add
add
add
add
sbb
add
add
mov
add
add
add
sbb
mov
add
mov
add
add
push
sbb
add
add
mov
add
sbb
add
add
sub
add
add
push
sbb
add
add
xor
add
add
adc
dec
add
add
add
push
add
pop
add
add
add
add
mov
add
add
adc
mov
cdq
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jae
add
add
jge
add
add
mov
add
add
mov
add
add
add
add
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
sbb
mov
sub
sbb
mov
xor
sbb
mov
cmp
sbb
mov
push
add
add
add
mov
add
mov
add
inc
cdq
add
add
add
add
sub
pop
add
add
add
add
jns
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
inc
add
push
add
pop
add
aad
pop
add
add
pop
add
add
cs
add
add
add
add
add
add
add
stos
add
add
add
add
push
push
retf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
add
add
add
add
add
add
add
cs
add
jae
add
add
add
add
add
inc
add
add
add
adc
mov
inc
add
add
add
add
add
add
sbb
les
arpl
adc
mov
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
sub
fadd
add
sub
fadd
add
adc
mov
and
sub
fadd
and
adc
mov
inc
add
add
add
adc
mov
pusha
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
imul
add
jg
cli
add
add
add
xchg
add
add
add
push
add
add
add
mov
add
pop
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jne
mov
loope
call
add
add
add
add
lldt
add
adc
add
add
add
lahf
pop
add
add
add
add
or
add
add
or
add
or
adc
add
add
add
add
add
repz
add
add
add
add
add
add
push
add
add
add
add
adc
or
stc
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
outs
fs
gs
arpl
ins
imul
outs
jae
data16
push
imul
jae
arpl
dec
jns
jo
ins
imul
add
add
inc
outs
ins
jo
je
jb
dec
jns
jb
push
arpl
jns
bound
jb
imul
jb
popa
fs
popa
gs
bound
arpl
outs
jbe
fs
xor
jecxz
scas
jecxz
mov
jecxz
test
xchg
movs
jecxz
popf
jecxz
cmps
add
arpl
jae
data16
push
imul
jae
arpl
inc
jo
ins
imul
push
gs
imul
jo
imul
inc
popa
jae
add
arpl
add
arpl
jae
data16
push
imul
jae
arpl
inc
gs
arpl
add
ins
jo
je
jb
push
jns
je
ins
add
push
arpl
arpl
outs
jb
addr16
inc
outs
ins
jo
je
jb
ins
pop
inc
outs
ins
jo
je
jb
bound
arpl
outs
jbe
fs
addr16
inc
jo
ins
imul
add
inc
jo
dec
bound
arpl
outs
jbe
fs
push
jae
jb
addr16
push
jae
jb
ins
pop
push
jae
jb
bound
arpl
outs
jbe
fs
addr16
push
bound
jb
imul
dec
jns
bound
jb
imul
arpl
outs
jbe
fs
inc
jo
ins
imul
add
bound
jb
imul
jne
ins
jae
outs
add
je
popa
jae
inc
outs
fs
add
je
jns
add
je
imul
popa
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
add
outs
jae
popa
outs
arpl
inc
imul
pop
dec
outs
jae
popa
outs
arpl
pop
add
je
inc
gs
outs
jae
popa
outs
arpl
ins
pop
push
push
push
je
je
arpl
ins
jne
add
je
outs
jae
popa
outs
arpl
jecxz
mov
jecxz
stos
jecxz
mov
sub
dec
popa
imul
or
stos
jecxz
mov
jecxz
stos
jecxz
xchg
jecxz
test
jecxz
mov
sub
jecxz
xchg
jecxz
pop
jecxz
mov
adc
jns
gs
push
jns
je
ins
cs
outs
ins
jo
outs
outs
je
outs
fs
add
imul
jae
bound
je
jb
bound
add
imul
jae
bound
je
je
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
imul
imul
jne
addr16
imul
jb
bound
add
arpl
jae
data16
push
imul
jae
arpl
inc
outs
ins
jo
ins
gs
gs
imul
popa
outs
fs
jb
dec
outs
fs
gs
je
jb
bound
add
fs
outs
fs
gs
popa
ins
gs
je
jb
bound
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
cs
gs
outs
add
ins
jo
gs
outs
jb
inc
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
outs
je
ins
gs
gs
jo
jb
add
je
bound
arpl
ins
jne
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
je
jbe
je
jb
inc
jb
popa
je
dec
outs
jae
popa
outs
arpl
dec
jns
jb
jne
inc
outs
ins
ins
arpl
outs
inc
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
ins
push
imul
je
jb
bound
add
gs
fs
je
je
arpl
je
imul
outs
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
jae
gs
cs
gs
add
arpl
imul
pop
inc
gs
jne
je
inc
jns
add
je
je
imul
dec
popa
je
inc
imul
dec
popa
je
inc
gs
dec
outs
je
xor
dec
jo
jb
je
jb
add
bound
arpl
push
arpl
outs
outs
jbe
jb
imul
dec
outs
je
addr16
dec
popa
je
dec
outs
fs
gs
dec
outs
fs
bound
arpl
outs
inc
jns
add
jb
outs
add
outs
arpl
add
ins
je
jo
jns
bound
arpl
outs
outs
ins
gs
outs
add
popa
outs
addr16
jns
add
gs
outs
fs
gs
push
jns
je
ins
cs
dec
add
ins
outs
jb
push
je
gs
ins
add
jae
gs
cs
dec
cs
outs
ins
jo
gs
imul
jo
je
gs
ins
add
jb
popa
ins
add
ins
jo
gs
imul
add
gs
gs
outs
ins
jo
gs
inc
outs
outs
imul
outs
ins
jo
jb
dec
bound
arpl
gs
je
jb
dec
popa
je
inc
popa
ins
ins
add
inc
push
push
inc
je
jb
bound
add
push
gs
jne
arpl
cs
jae
jne
arpl
add
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jae
gs
cs
gs
arpl
outs
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
imul
jne
add
jae
ins
bound
jne
je
jb
inc
je
jb
bound
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
jae
gs
bound
imul
imul
push
push
push
push
js
add
add
add
outs
add
je
push
add
or
imul
push
add
imul
je
add
inc
add
je
push
add
js
add
add
add
inc
add
add
add
push
add
popa
add
or
jb
imul
add
inc
add
add
add
andps
outs
add
jb
jb
popa
add
add
add
jp
mov
pop
mov
dec
nop
pusha
jl
or
or
xor
mov
mov
pop
jg
aad
cmp
and
add
add
add
add
or
push
adc
or
add
adc
pop
push
adc
or
add
adc
push
adc
adc
add
adc
push
adc
adc
or
adc
or
adc
add
add
adc
add
adc
and
add
and
or
add
adc
add
add
adc
add
add
add
xor
add
adc
add
adc
add
add
add
push
adc
add
add
add
add
add
push
push
add
sbb
or
push
add
sbb
and
add
sbb
add
add
add
push
pop
add
or
push
gs
jo
popa
je
pop
cmp
xor
xor
xor
add
add
add
adc
or
adc
or
adc
adc
adc
adc
pop
add
or
pop
add
or
add
adc
add
adc
and
add
adc
add
dec
jns
inc
jo
ins
imul
add
adc
add
dec
jns
inc
outs
ins
jo
je
jb
add
add
dec
jns
push
jae
jb
add
add
push
dec
jns
push
bound
jb
imul
pop
add
add
add
push
add
adc
add
adc
add
add
add
add
add
add
and
push
push
push
push
popa
add
xor
jns
je
ins
cs
bound
push
gs
imul
outs
je
arpl
jae
push
outs
popa
jo
je
jo
ins
imul
je
arpl
adc
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
jo
jae
pop
pop
dec
outs
jae
popa
outs
arpl
pop
add
add
adc
add
add
add
add
add
add
add
add
add
push
add
push
sbb
sbb
sbb
adc
push
sbb
add
sbb
add
or
add
sbb
sbb
add
add
sbb
sbb
sbb
add
adc
push
push
push
push
pop
pop
push
sbb
sbb
sbb
sbb
add
sbb
add
add
add
sbb
adc
sbb
sbb
push
adc
or
add
or
or
add
add
add
adc
jge
adc
or
sbb
adc
push
sbb
push
add
add
add
add
sbb
adc
push
sbb
add
pop
or
sbb
sbb
add
add
or
add
add
add
add
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
or
ss
xor
sub
add
data16
ss
xor
sub
sub
sub
xor
xor
add
sbb
outs
jo
jb
addr16
and
dec
outs
jo
xor
xor
add
push
add
or
dec
outs
jo
dec
push
add
adc
add
push
and
jo
inc
outs
ins
jo
add
adc
add
push
push
and
jo
dec
imul
add
or
add
push
push
and
jo
add
add
cwde
and
add
and
add
add
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
