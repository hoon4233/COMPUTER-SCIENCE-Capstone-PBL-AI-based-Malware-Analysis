adc
inc
aad
movs
out
add
cmps
sbb
sub
xchg
nop
test
cmp
aad
pop
sahf
leave
(bad)
cmp
pop
call
mov
and
push
sahf
and
pop
js
add
mov
es
lods
inc
pusha
fist
(bad)
loopne
sub
or
mov
out
sti
mov
daa
popf
dec
jb
repz
adc
inc
repnz
xchg
nop
cmps
mov
mov
lds
sahf
sbb
fisubr
pop
retf
xchg
dec
cli
call
adc
fstp
push
and
int
out
sar
mov
and
mov
dec
xor
mov
pop
sub
cli
hlt
cdq
dec
mov
inc
push
inc
ds
lahf
mov
addr16
in
pop
pop
fiadd
mov
das
inc
aaa
push
daa
inc
mov
fabs
fild
xor
jmp
xchg
mov
inc
fnstcw
or
xchg
mov
add
cmps
mov
loop
(bad)
sbb
xchg
not
mov
(bad)
test
sub
neg
mov
adc
jmp
mov
jmp
add
imul
jae
lock
js
mov
movs
(bad)
pop
inc
out
loope
(bad)
push
mov
outs
shl
pop
jl
je
pop
out
test
sahf
and
out
xchg
scas
scas
jnp
push
dec
mov
sti
fcomp
test
jmp
xchg
rcl
fisubr
push
mov
adc
leave
popf
leave
cld
stos
and
or
out
aaa
mov
jo
mov
add
rol
add
cdq
shl
sbb
ja
(bad)
ins
xor
add
xchg
or
ins
(bad)
pop
adc
cdq
add
test
cs
and
dec
stos
repz
pop
cmp
mov
out
dec
mov
jo
stos
xor
std
xlat
bound
int3
ins
js
inc
js
bound
jg
mov
xchg
mov
jp
xor
test
jbe
mov
sbb
ret
sub
mov
in
mov
fninit
cld
mov
add
jne
sub
sbb
shl
push
push
lods
mov
dec
pushf
push
scas
inc
loopne
cmp
and
cdq
inc
and
test
loop
mov
aam
lods
jp
fwait
pop
and
fiadd
aam
push
inc
in
push
push
aam
inc
mov
aam
gs
outs
sahf
popf
mov
aam
jno
sbb
inc
aad
inc
push
jmp
js
aam
pop
fisttp
sub
push
lods
mov
cs
mov
sub
pusha
inc
repz
add
mov
sub
or
outs
add
call
or
sub
inc
cmp
cmps
call
rcr
fst
fwait
inc
sti
push
mov
mov
aas
leave
inc
fild
cwde
push
push
inc
frstor
addr16
mov
sub
stc
aam
push
not
fsub
test
out
arpl
cwde
adc
aam
lods
add
xchg
daa
cmp
loop
push
shl
push
mov
cmp
push
push
xchg
cwde
push
inc
push
mov
xor
outs
push
dec
inc
sub
pop
push
jmp
loopne
mov
fmul
setp
adc
mov
and
mov
or
ds
ret
add
sbb
nop
ret
nop
ret
mov
lock
xchg
out
cmp
in
xchg
fimul
nop
ret
repnz
out
sbb
sbb
mov
sbb
sahf
inc
mov
xchg
cmps
sbb
xchg
ficomp
nop
ret
call
sbb
add
xchg
push
es
loop
nop
ret
fist
push
cmp
sub
cmps
sbb
xchg
ficomp
nop
ret
call
sbb
in
cmps
sbb
mov
cmps
sbb
mov
sbb
js
jno
mov
test
lods
jp
inc
rol
mov
popf
hlt
mov
dec
pop
fist
ret
outs
adc
jle
pop
in
jge
or
dec
pop
sub
push
jae
mov
fninit
loope
aam
inc
mov
push
xchg
lods
mov
sub
cmp
mov
lds
addr16
aas
arpl
push
cmp
cmp
pop
das
out
and
int
jae
push
lods
push
push
lods
mov
push
jmp
jmp
das
dec
sub
ins
jae
push
push
mov
mov
aam
inc
ins
push
mov
mov
retf
lods
add
mov
inc
cmp
cs
aad
jecxz
inc
lods
mov
aam
lods
add
sub
jge
mov
je
nop
inc
add
test
mov
push
test
outs
in
sbb
das
mov
pop
or
in
mov
sub
pushf
imul
sub
cwde
popf
mov
sub
push
es
push
mov
in
mov
test
addr16
mov
das
(bad)
aam
leave
inc
sub
arpl
cwde
push
inc
push
mov
xchg
popf
lahf
inc
jae
push
push
inc
sub
pop
mov
es
aaa
sub
ins
or
sub
mov
scas
inc
push
xchg
sbb
or
pop
dec
and
aad
sbb
test
push
fild
sbb
adc
sbb
or
pop
repz
sbb
lods
xor
xchg
bound
xchg
mov
add
out
cmp
imul
les
or
adc
inc
ret
jmp
mov
stc
cmp
pop
test
push
sub
test
out
mov
jmp
fsub
in
aam
cwde
dec
nop
and
push
int3
lods
mov
(bad)
addr16
movs
sahf
imul
mov
push
movs
lods
mov
fld
jae
sbb
pop
mov
es
jae
mov
test
out
mov
sub
sub
pop
lods
mov
aam
mov
aam
scas
mov
imul
mov
aam
addr16
lods
in
jecxz
add
pop
and
lods
xchg
mov
lods
rcl
sub
sbb
ins
fst
add
scas
adc
mov
push
xor
int
mov
fst
jle
test
jl
cli
adc
jg
pop
push
sub
cmp
sbb
xchg
scas
loop
bound
bound
inc
shl
sbb
mov
in
pop
(bad)
mov
cli
mov
lods
icebp
out
jge
push
neg
in
dec
cli
retf
js
mov
pop
mov
or
dec
sub
mov
mov
fldenv
pop
dec
sub
cmc
dec
xchg
stc
push
push
dec
sti
jb
jmp
adc
push
or
jbe
jbe
jl
out
adc
pop
or
lods
pop
inc
mov
scas
fucom
sti
fnsave
bound
mov
loope
mov
cli
test
add
xchg
(bad)
mov
gs
stos
dec
sahf
fcom
gs
jmp
push
pop
pop
cmp
iret
xchg
dec
adc
shr
test
ss
addr16
das
out
fucom
test
xchg
or
jns
out
ficomp
or
adc
dec
push
and
out
xchg
int3
jb
adc
pop
retf
jmp
ja
sub
fwait
repnz
in
xchg
jecxz
sub
repnz
push
imul
add
sbb
popf
mov
add
pushf
mov
add
cld
mov
add
fsub
add
cmp
es
call
mov
mov
sub
mov
jl
(bad)
and
mov
out
repnz
js
mov
movs
jne
mov
cmp
xrelease
dec
cmc
inc
add
push
add
inc
test
mov
cli
test
cmp
xchg
repnz
fwait
or
or
jecxz
xor
stos
mov
add
and
fwait
or
or
jecxz
sbb
movs
inc
add
mov
add
add
dec
fwait
or
or
jecxz
or
pop
mov
bound
(bad)
mov
sbb
pop
cmp
sahf
jecxz
pop
(bad)
mov
xchg
test
inc
add
or
std
ficom
popf
add
fsub
or
test
inc
pop
dec
in
mov
jg
inc
add
sbb
ror
stos
mov
in
add
in
cmp
sahf
ret
xor
cmps
cli
xchg
add
jle
and
cmp
leave
in
lahf
movs
ret
and
xchg
jmp
sbb
std
cld
imul
pop
add
and
inc
cmp
sahf
ret
sub
(bad)
jmp
sar
mov
cmc
into
clc
push
mov
ret
cmp
sahf
ret
cmp
inc
std
inc
leave
sbb
dec
xchg
add
and
cdq
inc
sbb
xchg
sbb
jmp
lds
test
jne
and
xor
mov
es
inc
mov
fs
mov
icebp
mov
cmp
mov
int
mov
add
mov
test
in
stos
xor
sub
sbb
les
test
mov
scas
xor
jns
ret
ret
cmp
loop
call
push
and
loop
pop
mov
outs
pop
shl
sbb
(bad)
out
adc
mov
in
xchg
ret
xchg
sar
out
or
out
pop
pop
push
push
jmp
inc
dec
out
adc
mov
pop
jnp
push
call
repnz
bound
lea
xchg
stos
loope
in
and
pop
push
push
sahf
xor
xor
fwait
lods
dec
jb
jns
add
dec
mov
and
cmp
dec
pop
sbb
sbb
test
push
mov
mov
movs
push
mov
sub
xchg
out
std
les
adc
hlt
pushf
sub
push
xor
add
ss
add
mov
and
dec
out
xor
adc
jmp
mov
adc
xchg
jbe
ins
sbb
add
shr
movs
into
mov
test
pop
aad
sbb
(bad)
jmp
jmp
loop
lea
idiv
imul
jb
sbb
jo
pop
push
jno
sbb
je
inc
rcl
push
xor
dec
jne
xlat
inc
dec
sbb
mov
push
cld
xlat
sub
fadd
adc
cld
jg
imul
inc
pop
adc
aaa
jmp
push
jg
sub
repz
jbe
aad
dec
cmp
push
jbe
aad
sub
xchg
movs
ins
sbb
pusha
jle
sbb
(bad)
fcmove
retf
sub
add
push
cs
xor
test
pop
inc
and
call
push
repz
lock
push
xor
xlat
jae
aad
(bad)
sbb
jo
mov
(bad)
cmps
dec
cmp
shl
sar
jo
in
cs
ds
clc
pop
in
jo
inc
icebp
push
pop
xchg
cld
mov
sbb
sub
rcl
jmp
stos
pusha
(bad)
xor
pop
cdq
mov
sub
sbb
cmp
jbe
lea
outs
push
add
jo
sbb
jo
xor
clc
push
sbb
stos
jbe
pop
pop
ds
(bad)
xor
xchg
test
mov
adc
xchg
icebp
mov
pop
test
imul
fst
sbb
test
push
lock
outs
mov
hlt
loop
mov
ret
in
xor
push
cmp
(bad)
and
hlt
cld
loop
jb
cld
push
push
inc
icebp
fst
jle
cs
out
adc
xchg
xchg
(bad)
jmp
mov
cmp
adc
retf
in
cmp
jmp
mov
fldenv
push
mov
dec
or
mov
ret
mov
jnp
mov
pop
xor
cmc
xor
mov
stos
(bad)
sti
fld
xor
das
ret
retf
pop
adc
cmp
out
pop
mov
inc
adc
(bad)
shr
es
mov
scas
ffree
ins
out
ret
rcl
fwait
lods
and
cmp
fisubr
jmp
pop
cmp
cmp
popa
push
and
test
cwde
jns
inc
adc
jge
jmp
je
xor
dec
jl
out
mov
addr16
shl
mov
mov
stos
fucom
outs
inc
mov
sti
mov
push
test
pop
adc
outs
push
mov
rol
inc
cli
ss
dec
into
pusha
(bad)
jae
cmp
and
adc
push
mov
xchg
push
push
mov
xchg
push
push
fnstcw
cmc
fstp
jo
mov
mov
js
push
repnz
mov
int
repnz
and
ror
(bad)
xchg
(bad)
(bad)
xchg
(bad)
(bad)
xchg
(bad)
(bad)
xchg
(bad)
(bad)
xchg
(bad)
(bad)
xchg
(bad)
(bad)
xchg
(bad)
(bad)
xchg
(bad)
(bad)
xchg
(bad)
(bad)
xchg
(bad)
(bad)
xchg
(bad)
(bad)
xchg
(bad)
(bad)
xchg
(bad)
(bad)
xchg
(bad)
(bad)
xchg
(bad)
(bad)
xchg
(bad)
(bad)
xchg
(bad)
(bad)
xchg
(bad)
(bad)
xchg
(bad)
(bad)
xchg
(bad)
(bad)
xchg
(bad)
(bad)
xchg
(bad)
(bad)
xchg
(bad)
(bad)
xchg
(bad)
(bad)
xchg
(bad)
(bad)
xchg
(bad)
(bad)
xchg
(bad)
(bad)
xchg
(bad)
(bad)
xchg
(bad)
(bad)
xchg
(bad)
(bad)
xchg
(bad)
(bad)
xchg
(bad)
(bad)
xchg
(bad)
(bad)
xchg
(bad)
(bad)
xchg
fldenv
mov
push
and
and
mov
bound
adc
kmovb
(bad)
xchg
and
cmp
(bad)
xchg
sar
fisttp
(bad)
cmp
movs
pop
(bad)
fiadd
cs
rcl
std
(bad)
xchg
and
cmp
(bad)
xchg
sar
(bad)
cmp
movs
pop
(bad)
fiadd
or
shl
(bad)
xchg
and
cmp
(bad)
xchg
sar
xchg
fisttp
(bad)
cmp
movs
pop
(bad)
fiadd
fimul
nop
(bad)
xchg
or
(bad)
xchg
fldenv
mov
jno
jle
fist
repnz
imul
mov
xchg
or
imul
xchg
(bad)
mov
jno
jle
fist
repnz
mov
jbe
and
adc
movs
push
data16
push
add
or
sti
jne
cmp
fstp
lock
jmp
xchg
push
dec
in
or
xchg
popa
xchg
add
leave
lea
fwait
movs
into
xchg
fxch
fdivr
and
les
fld
scas
cmp
icebp
(bad)
xchg
ror
cdq
leave
cmp
adc
pop
(bad)
shufps
or
sti
jne
cmp
fstp
(bad)
xchg
shr
std
sub
xchg
out
jne
and
fist
outs
jmp
or
mov
dec
mov
dec
adc
pushf
imul
repnz
(bad)
xor
mov
nop
jno
rol
dec
adc
mov
fisttp
(bad)
nop
ror
xchg
xchg
cdq
fdivr
fcomi
imul
sub
(bad)
xchg
pop
icebp
imul
and
xchg
fist
loop
cdq
cmp
xchg
fisttp
push
mov
xchg
nop
mov
xchg
nop
mov
xchg
and
(bad)
shr
icebp
(bad)
xchg
and
mov
mov
loopne
mov
sti
(bad)
xchg
push
and
mov
cdq
in
and
adc
jl
or
add
or
add
mov
add
sti
xchg
mov
xor
call
pop
dec
push
jns
add
mov
dec
and
or
xchg
iret
push
mov
outs
xchg
inc
pop
into
or
ja
cmp
push
mov
mov
xchg
test
and
adc
xchg
lods
shl
ss
lock
test
fiadd
std
repnz
and
das
push
(bad)
test
ss
mov
jno
push
in
cmp
jmp
test
cwde
jns
add
mov
pop
add
stc
push
pushf
arpl
push
dec
mov
data16
pop
dec
and
movs
aaa
push
jp
out
test
fdivp
mov
ror
retf
repnz
dec
sub
mov
jg
mov
cwde
in
pop
scas
mov
ins
les
shl
pop
xchg
jbe
fdivrp
push
add
mov
out
sbb
dec
out
adc
xchg
popa
dec
pop
stos
jge
out
repnz
xor
fisttp
pop
jg
into
cwde
mov
ins
sbb
iret
dec
dec
xor
out
adc
push
jns
sti
mov
nop
jo
cmp
(bad)
or
push
inc
in
and
bound
jne
outs
movs
xor
fld
mov
enter
adc
repz
jge
xchg
cld
or
hlt
sub
mov
mov
xor
cli
mov
int
and
fidivr
xchg
imul
fdivr
jne
or
xchg
sub
int3
loop
xchg
vmaxsd
jmp
jnp
add
push
cmp
test
adc
sub
movs
pop
mov
lods
pop
jno
xchg
pop
jno
popf
pop
xor
mov
pop
popa
xchg
xchg
pop
popa
xchg
popf
pop
and
mov
pop
mov
call
fldenv
movs
pop
cdq
mov
popf
pop
sbb
mov
pop
xchg
stos
lods
pop
push
stos
xchg
pop
push
in
addr16
jns
lods
xor
jle
pop
sub
fwait
xor
repz
rcr
mov
pop
dec
ret
out
add
push
adc
bound
test
add
pop
sahf
adc
test
xchg
adc
push
sbb
adc
scas
(bad)
adc
scas
(bad)
adc
scas
(bad)
adc
scas
xchg
scas
adc
or
adc
xchg
(bad)
adc
pop
sbb
ret
mov
jecxz
mov
and
add
adc
cmp
and
xor
xchg
sub
stos
xor
aaa
ins
adc
xor
cmp
and
(bad)
adc
movs
xor
adc
xor
jne
repz
movs
pop
inc
dec
mov
rcl
fsubp
out
aad
es
vshufpd
repz
call
xchg
mov
xchg
mov
cmps
arpl
call
retf
add
mov
sahf
mov
mov
sbb
sbb
jmp
in
mov
cmp
in
ret
xor
in
ins
lea
xlat
int
push
vpsubq
int
push
loop
jmp
cmp
mov
out
add
jno
and
or
jb
cli
xchg
cmp
xchg
xchg
mov
mov
fnsave
mov
jne
shl
inc
mov
mov
dec
mov
rcl
add
in
cmps
mov
xor
jne
test
adc
test
mov
lds
push
stos
icebp
addr16
xor
imul
fwait
or
cmp
sahf
cli
int
fcom
mov
in
(bad)
push
frstor
sbb
mov
and
sbb
stc
mov
xchg
mov
push
adc
(bad)
gs
loop
cmps
sub
les
or
enter
ror
pop
rol
pop
ror
push
and
std
outs
inc
cdq
xchg
jp
dec
xchg
pop
mov
(bad)
pop
add
fld
fistp
xadd
cwde
pop
rol
and
std
outs
inc
cdq
cmp
dec
aad
pusha
jg
pop
ret
out
inc
cdq
xchg
mov
enter
shr
mov
ror
mov
enter
fisubr
mov
pop
enter
jle
xchg
jp
outs
dec
pop
enter
aas
xor
into
retfw
dec
fwait
aaa
adc
pop
inc
xchg
ja
push
mov
inc
inc
ret
lea
pop
mov
jbe
cmp
into
push
les
out
adc
xchg
rol
jne
mov
jmp
pop
cmps
cmp
loop
in
popf
js
(bad)
neg
call
mov
scas
fcmove
int
imul
sub
mov
mov
shr
jmp
lods
outs
adc
cmp
cmp
test
(bad)
adc
ret
lea
(bad)
mov
fstp
jo
and
repnz
jl
and
shl
push
aam
shr
or
sbb
jmp
mov
jnp
movs
mov
adc
cmp
mov
jle
jo
test
sbb
fisub
mov
repnz
push
pop
mov
in
(bad)
push
in
test
inc
mov
lea
lea
pop
mov
sub
cmp
adc
push
sbb
cmps
mov
sti
data16
mov
lods
push
sbb
jne
jmp
repnz
imul
rcr
jmp
fisttp
(bad)
icebp
xor
adc
sub
push
cmp
cld
popf
clc
dec
inc
in
mov
sub
rcl
mov
mov
imul
retf
aam
imul
cld
je
cmp
push
ins
imul
retf
aam
imul
imul
cmp
push
sub
mov
imul
push
mov
sub
push
ins
imul
push
push
ins
imul
inc
je
sub
cld
hlt
sbb
push
ins
imul
cs
push
fs
cld
nop
jle
inc
mov
stos
push
push
imul
imul
xchg
push
ins
imul
ficom
imul
sub
pop
ins
push
leave
pop
ins
imul
shl
and
je
ins
imul
(bad)
push
ins
or
int3
dec
xchg
xchg
jg
push
je
imul
jmp
or
(bad)
xor
cs
push
fs
nop
jle
inc
xor
lods
push
push
fs
repz
ins
imul
push
mov
push
push
or
adc
push
push
ins
or
adc
dec
jl
push
adc
aam
leave
arpl
fmul
push
fs
jp
(bad)
jmp
mov
imul
inc
xor
add
xor
movs
push
sub
and
mov
push
push
ins
(bad)
test
inc
imul
or
xor
outs
arpl
loop
aam
imul
inc
xor
or
xor
and
push
push
xor
adc
sub
cmps
jmp
rcl
rcl
arpl
dec
int
push
imul
pop
dec
int
lods
push
xchg
mov
mov
(bad)
pop
add
or
lahf
ficom
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
movs
out
sbb
loope
sbb
(bad)
adc
test
sbb
jecxz
sbb
(bad)
sbb
jmp
data16
in
(bad)
adc
vshufpd
in
(bad)
adc
gs
pop
(bad)
pop
and
in
sbb
in
adc
gs
ret
sbb
enter
in
ret
sbb
aad
stos
ins
ins
dec
mov
vpcmpgtd
mov
retf
call
lds
gs
ret
sbb
iret
shl
call
shl
std
loope
aad
pop
mov
sub
push
inc
je
add
popf
js
pop
mov
mov
jnp
stc
gs
jge
lds
adc
xchg
pusha
mov
xchg
clc
mov
cmps
and
jae
stos
jmp
push
daa
adc
mov
lea
sub
sub
or
in
(bad)
push
in
adc
lahf
(bad)
out
shr
cmps
bound
pop
das
or
sbb
jo
rcl
in
into
adc
(bad)
jmp
adc
lods
xor
int3
push
mov
jne
mov
sub
(bad)
adc
push
xchg
fwait
jl
shl
scas
xchg
sar
push
retf
repnz
les
mov
and
ret
enter
enter
push
pop
add
cli
add
inc
mov
adc
push
lea
jne
jne
ret
and
icebp
test
stc
inc
fsubr
(bad)
jne
popf
dec
sub
xor
bound
push
mov
and
jns
mov
movs
(bad)
sbb
sub
js
xor
gs
test
iret
gs
sub
xchg
mov
sbb
(bad)
fild
pop
imul
pusha
call
gs
popf
cmp
pusha
call
aam
movs
cmc
(bad)
adc
movs
call
cmps
or
shl
inc
xchg
in
es
in
(bad)
adc
jnp
out
cli
setno
mov
cdq
add
std
(bad)
adc
cmp
stc
gs
out
shl
stos
add
popa
sar
dec
jbe
and
push
es
in
inc
lahf
in
cmps
ret
and
movs
in
(bad)
adc
into
lea
imul
into
adc
shr
mov
sbb
mov
or
adc
jmp
add
jne
call
xchg
xchg
fwait
imul
cmps
enter
mov
mov
outs
jnp
shl
in
in
ror
mov
jne
call
sbb
mov
jp
ret
jo
and
or
lods
icebp
ret
mov
mov
mov
or
in
mov
jne
jb
fimul
sar
jl
gs
mov
dec
mov
jmp
mov
lea
ja
jo
inc
rcl
js
add
call
cmp
lea
push
clc
cmps
or
adc
push
or
inc
cli
mov
mov
xor
call
inc
lock
xchg
push
and
mov
push
int3
inc
push
scas
sub
xor
or
lds
lock
stos
mov
mov
or
push
fisubr
lock
into
pop
dec
imul
mov
sub
adc
adc
pop
hlt
cmp
movs
call
pop
inc
in
cmps
or
in
(bad)
adc
vshufpd
pop
loopne
(bad)
lods
gs
ret
sbb
loopne
jecxz
shl
movs
gs
ret
sbb
vshufpd
test
sbb
vshufpd
in
(bad)
jne
retf
xor
ret
movs
gs
sbb
and
in
cmps
mov
sub
aas
in
xchg
xchg
jno
cmp
movs
in
adc
loop
push
dec
lods
in
loop
push
in
mov
das
out
cmp
daa
adc
push
sbb
pop
mov
retf
cmp
gs
sbb
lods
nop
add
jmp
push
mov
sbb
jmp
push
loope
mov
shl
mov
fwait
push
call
sbb
ret
in
push
xlat
in
out
fsubr
(bad)
jne
xchg
jno
inc
test
mov
xchg
cmp
cmps
ret
jmp
sub
(bad)
jne
outs
ds
mov
pop
jne
inc
pop
movs
mov
dec
or
jge
inc
mov
lea
sub
shl
mov
dec
mov
fwait
jl
lods
xor
cmp
push
xchg
mov
enter
jne
ds
shl
add
xchg
mov
and
rcl
lahf
dec
call
out
mov
das
out
mov
das
out
mov
das
out
mov
das
out
mov
das
out
mov
das
out
mov
das
out
mov
das
out
mov
das
out
mov
das
out
mov
das
out
mov
das
out
mov
das
out
mov
das
out
mov
das
out
mov
das
out
mov
das
out
mov
das
out
mov
das
out
mov
das
out
mov
das
out
mov
das
out
mov
das
out
mov
(bad)
pop
outs
shr
out
out
out
mov
imul
sahf
lock
mov
outs
push
sub
leave
mov
psubw
lock
out
mov
xor
mov
daa
push
ss
cs
imul
mov
clc
iret
sbb
es
ret
(bad)
jmp
(bad)
xor
int3
nop
pop
icebp
fidiv
sub
xchg
test
dec
les
adc
push
es
mov
outs
cmc
daa
into
dec
push
sub
mov
mul
into
es
and
test
mov
mul
out
jno
rcl
out
sub
xchg
fld
std
cmp
vshufpd
ins
sub
jge
xor
vcvttpd2dq
inc
add
aad
(bad)
jne
jne
movs
in
ret
sbb
fucom
pop
push
in
data16
nop
jbe
movs
call
pop
(bad)
in
cmps
or
in
(bad)
adc
vshufpd
pop
loopne
(bad)
lods
gs
ret
sbb
jecxz
jecxz
shl
movs
mov
inc
vshufpd
jp
sbb
vshufpd
in
(bad)
jne
retf
xchg
adc
in
jmp
pusha
or
in
cmps
mov
add
rcl
mov
xor
mov
cmps
inc
repnz
fucomi
out
fisubr
pusha
neg
stc
gs
and
jmp
push
test
sub
(bad)
mov
mov
dec
xchg
cmp
push
gs
mov
cmc
mov
xchg
xor
xchg
call
ficomp
leave
test
in
(bad)
jne
mov
stos
push
cli
(bad)
sbb
fsubr
cmps
mov
in
(bad)
adc
pop
fisttp
adc
pusha
sbb
add
bound
imul
mov
xchg
fcmovnb
inc
xchg
rcr
(bad)
test
dec
add
add
sbb
mov
xchg
sti
jae
cmp
xor
sbb
push
loope
test
mov
js
test
adc
jmp
dec
fcomp
int
stc
xor
mov
fbstp
mov
sub
jmp
push
dec
aaa
adc
adc
imul
enter
dec
cli
sbb
fidivr
std
out
movs
mov
clc
ficomp
stc
gs
or
leave
jecxz
adc
jle
push
mov
(bad)
into
hlt
or
mov
pop
mov
push
xchg
mov
mov
scas
test
pop
jl
repnz
loop
cmc
adc
int
adc
cs
pop
jecxz
cmp
pop
imul
mov
push
in
into
dec
loop
push
fdiv
jae
jb
ds
nop
hlt
push
stos
mov
test
rcl
cwde
fdiv
sub
call
daa
movs
push
and
in
(bad)
adc
inc
add
aad
(bad)
jne
jne
stc
ins
dec
xchg
adc
int
adc
and
in
cmps
test
ja
xchg
jmp
jne
dec
mov
les
or
movs
call
cmps
ins
vshufps
in
(bad)
adc
(bad)
int
sar
into
cmc
ins
dec
mov
vshufpd
jmp
xor
(bad)
or
into
adc
or
sub
(bad)
adc
vshufpd
in
cmp
imul
dec
jecxz
iret
or
(bad)
jne
lods
aam
aad
push
fisub
cdq
ret
es
fwait
call
and
in
cmps
add
cmc
das
cmp
mov
stc
inc
cli
jg
imul
addr16
movs
cmc
(bad)
adc
hlt
push
es
cld
(bad)
adc
jb
fwait
push
fwait
xor
or
(bad)
icebp
repz
mov
jg
mov
adc
mov
or
(bad)
jne
out
jnp
shr
or
jg
jns
fstp
gs
adc
adc
mov
jl
push
fisttp
stc
inc
fsubr
(bad)
jne
mov
mov
mov
xchg
sbb
push
xchg
jnp
adc
or
mov
xor
das
stc
sar
adc
push
test
dec
inc
lahf
aad
in
ficom
fsub
mov
dec
sbb
xchg
mov
out
xor
cmp
dec
(bad)
sub
retf
and
xor
sbb
sub
(bad)
pushf
push
sbb
xchg
mov
push
mov
sub
xor
xchg
and
test
xchg
add
jmp
xchg
les
test
xchg
add
add
dec
dec
or
push
nop
pop
lahf
and
jb
dec
or
loop
or
inc
xchg
cwde
dec
jmp
pop
in
pop
add
cmc
lods
jb
dec
imul
sub
push
and
into
in
les
leave
jbe
inc
leave
xchg
test
rcl
test
leave
ja
ret
sub
test
leave
jbe
inc
enter
sbb
and
push
mov
inc
stos
pop
jl
dec
movs
mov
pushf
inc
jmp
mov
dec
sub
mov
dec
or
hlt
jbe
test
inc
(bad)
add
test
xchg
loopne
adc
mov
das
pop
inc
ror
jns
or
movs
call
(bad)
jne
popa
ret
pop
(bad)
adc
inc
int
lods
test
sbb
mov
inc
stc
gs
(bad)
adc
mov
in
movs
test
movs
aad
adc
vshufpd
in
(bad)
adc
das
jmp
adc
int
rcl
enter
aam
jns
jge
into
cmc
ins
sub
(bad)
adc
pop
nop
jbe
and
or
loopne
(bad)
jne
sub
sub
dec
mov
cmp
jmp
push
fisubr
ja
lds
cmps
add
(bad)
in
sub
test
sbb
and
jns
and
(bad)
lods
add
in
(bad)
adc
retf
in
xchg
movs
out
pop
cmp
in
cmps
mov
adc
sbb
aaa
push
add
xchg
in
jns
adc
cmps
ficom
xchg
inc
jo
adc
and
in
(bad)
adc
lods
cmp
adc
lea
xor
xchg
push
sti
(bad)
adc
sbb
jns
push
mov
cmp
jnp
rcr
push
ret
lea
call
test
rcr
adc
jmp
imul
stc
rcr
int
xor
jmp
into
cmc
and
(bad)
cmc
inc
jge
adc
mov
rcl
scas
sbb
sbb
push
fcmovbe
mov
mov
jmp
or
xchg
push
jecxz
aaa
cdq
mov
pusha
and
das
adc
adc
ret
sub
xchg
mov
fstp
gs
rcl
cwde
or
lea
(bad)
test
adc
dec
inc
jae
pop
in
aam
retf
icebp
rcl
loop
jmp
movs
lock
and
adc
adc
out
push
data16
mov
scas
and
pop
xchg
or
jo
inc
adc
xchg
retf
rcr
xchg
fstp
cmp
mov
cli
in
mov
outs
std
shl
mov
sbb
stc
imul
sub
inc
mov
mov
int
cld
cmps
call
xchg
xchg
mov
cli
out
cmps
cmp
cmp
sahf
jp
adc
xchg
add
popf
sub
cmp
fcos
mov
lods
xchg
adc
jo
sub
repz
popf
mov
stc
pop
sbb
and
(bad)
xor
shr
or
dec
or
dec
or
dec
or
dec
pop
push
jno
add
dec
or
dec
pop
push
dec
dec
add
adc
outs
adc
mov
xchg
movs
mov
sbb
stc
push
outs
pop
dec
push
adc
or
jae
dec
or
icebp
push
or
call
mov
lods
mov
jo
cmp
outs
jno
test
jmp
stos
ficom
mov
outs
or
(bad)
rol
or
dec
jmp
test
out
dec
or
nop
add
dec
or
sbb
rcr
fimul
xor
or
dec
sbb
or
push
or
mov
ror
xor
adc
adc
outs
mov
stc
add
neg
jecxz
adc
cmpxchg
ss
mov
inc
outs
sbb
pop
outs
adc
outs
push
and
or
dec
or
call
sbb
lldt
scas
xor
add
ror
aad
push
push
or
(bad)
mov
not
push
aad
addr16
adc
outs
or
out
in
or
and
dec
or
dec
ss
mov
test
lods
mov
add
or
adc
jno
xor
adc
xor
sub
pop
push
out
xchg
push
or
or
iret
mov
mov
dec
repz
inc
sub
and
das
adc
sbb
or
sub
or
lgdtd
out
xor
outs
sbb
sub
dec
not
dec
push
push
(bad)
cmc
nop
outs
outs
jae
shl
push
fisub
call
popa
pop
push
ucomiss
sub
or
outs
test
pop
push
xadd
iret
push
cmp
mov
cwde
ror
outs
adc
or
nop
add
dec
or
sbb
mov
dec
or
test
test
icebp
xor
add
adc
or
imul
pop
inc
dec
jp
or
push
shr
add
mov
xor
dec
addr16
and
test
popa
out
test
pop
or
dec
add
(bad)
scas
fdivr
push
call
xchg
(bad)
pop
dec
stos
ficomp
push
mov
xchg
sbb
or
or
outs
scas
stc
sbb
out
mov
test
sub
shr
aaa
or
pusha
cdq
leave
inc
adc
sbb
popa
cwde
push
mov
retf
dec
stos
add
add
iret
imul
arpl
dec
stos
arpl
push
sub
push
scas
icebp
push
add
test
pand
add
clc
sub
iret
pusha
or
iret
scas
pop
mov
ficom
pop
loopne
shl
pop
addr16
arpl
pusha
ror
arpl
push
add
or
adc
shr
fldz
mov
test
sub
into
scas
inc
pop
test
sub
push
mov
pop
loopne
push
std
pop
adc
jg
or
(bad)
scas
pop
mov
lods
mov
add
movs
lods
mov
jno
add
dec
or
popf
les
out
icebp
stc
or
dec
push
xchg
push
or
outs
pusha
adc
or
sub
aas
adc
sbb
ds
inc
sub
pop
test
out
xor
scas
jo
push
(bad)
and
lods
(bad)
aaa
dec
add
push
lods
iret
sub
add
sub
nop
jns
and
dec
mov
aaa
adc
pop
and
out
vcvttpd2dq
fsubr
into
adc
cli
xor
test
mov
enter
jmp
inc
jge
adc
xor
repnz
cmc
mov
stc
gs
xchg
push
add
popf
clc
push
mov
cdq
and
jbe
or
(bad)
adc
mov
jge
inc
mov
push
inc
sbb
repnz
mov
lds
sti
add
in
cmps
lds
push
ret
loope
mov
das
xor
jle
sbb
into
xchg
adc
into
jne
lea
xor
dec
or
fstp
cmp
repz
sbb
cmp
push
xchg
pop
aam
in
into
sbb
lods
xchg
sti
xor
cmps
jno
mov
mov
pusha
scas
enter
rol
adc
stos
adc
cmp
rol
push
fisubr
sub
cmp
in
(bad)
push
fcmovb
cmp
shr
rcr
clc
and
jmp
ficomp
cmp
sub
mov
call
push
xchg
jnp
cli
jo
loop
cmp
xor
in
out
fild
mov
mov
sar
stc
cmp
mov
sub
add
jmp
xchg
push
xlat
xchg
stos
repnz
cmp
arpl
mov
out
call
xor
adc
arpl
(bad)
iret
popa
fisub
popa
fisub
popa
retf
(bad)
iret
inc
jb
int
into
xor
addr16
popa
retf
(bad)
iret
inc
jb
into
imul
push
xor
iret
popa
shl
push
nop
push
mov
(bad)
(bad)
iret
loope
ror
popa
fsub
rcr
(bad)
imul
inc
jle
fisubr
popa
fild
or
(bad)
jge
popa
xlat
and
popa
fidiv
popa
call
ins
lds
xchg
js
ficomp
sti
popf
imul
inc
jle
xchg
outs
das
faddp
popf
jo
dec
xor
inc
gs
jmp
mov
cli
rol
aam
out
sbb
jle
and
popf
lock
(bad)
iret
cmp
iret
ins
lds
xor
jo
inc
xor
xor
jle
stos
rol
jg
mov
cli
xor
popa
fisub
(bad)
clc
jne
popa
retf
add
fstp
iret
popa
retf
and
shl
dec
movs
mov
sub
(bad)
std
call
sbb
rol
jb
scas
rol
xlat
and
jle
popa
cli
rol
adc
iret
add
add
and
popf
lock
(bad)
iret
inc
jp
shl
mov
and
popa
fisubr
popa
shl
rol
jle
pushf
sub
iret
add
add
sbb
imul
sbb
mov
xchg
les
xor
out
cmps
pop
ret
sbb
outs
hlt
movs
inc
sar
das
sahf
xor
dec
cmps
(bad)
dec
fadd
sbb
mov
adc
(bad)
xchg
leave
loope
loope
jle
ror
jmp
js
ficomp
mov
imul
jns
iret
mov
xor
daa
sbb
jg
(bad)
cmp
ficomp
fstp
jp
dec
cs
cdq
jo
imul
add
cs
(bad)
iret
popa
mov
rol
fiadd
popa
retf
add
mov
sub
or
ficomp
jo
sub
or
fdivr
fisubr
fisubr
popa
(bad)
bound
lea
iret
popa
fiadd
pop
stc
stc
mov
fisubr
inc
(bad)
(bad)
iret
add
(bad)
iret
popa
stos
repnz
add
fadd
jle
retf
add
int3
imul
out
imul
bound
(bad)
mov
imul
jmp
imul
push
(bad)
mov
lahf
push
sahf
cmp
push
popa
xlat
sbb
or
lahf
ja
(bad)
cmc
(bad)
mov
jl
movs
leave
mov
adc
add
loope
sbb
pop
xchg
sbb
sbb
sbb
pop
jns
outs
mov
(bad)
mov
jl
movs
(bad)
mov
mov
into
je
in
mov
(bad)
in
sbb
push
add
call
je
adc
call
inc
les
xchg
sub
push
fisubr
ja
les
(bad)
call
gs
mov
int
cmps
lea
and
in
pop
push
out
data16
nop
ja
stos
std
loope
jp
fcmovnu
out
in
cmps
movs
inc
(bad)
mov
pop
(bad)
sub
lea
lods
mov
hlt
arpl
stos
add
adc
stos
les
jns
cmp
imul
and
pop
in
jnp
sub
mov
in
pushf
cmps
movs
lds
ficom
imul
(bad)
or
cmp
imul
and
(bad)
adc
aam
data16
nop
ja
stos
std
loope
cli
call
cmps
movs
inc
mov
pop
lds
sub
lea
lods
mov
hlt
arpl
stos
add
adc
vshufps
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
aam
data16
lock
popf
aam
(bad)
mov
movs
fs
sbb
int
sub
sbb
lea
vshufpd
in
(bad)
sbb
stos
ret
adc
int
sub
pop
in
adc
lods
pop
mov
xchg
sub
in
mov
adc
or
cmps
pop
adc
movs
imul
sbb
shl
clc
dec
in
adc
fidiv
add
and
jle
inc
in
adc
and
loopne
adc
in
retf
push
shr
js
in
adc
int
inc
sbb
and
mov
sbb
and
mov
jmp
pop
push
in
data16
lock
xchg
fsub
(bad)
fsubr
into
adc
int
inc
sbb
fucom
(bad)
mov
cmp
ins
lea
vshufpd
in
(bad)
sbb
stos
ret
adc
int
sub
pop
in
adc
lods
pop
mov
xchg
sub
in
or
cmp
movs
loope
adc
js
push
or
push
cmps
popf
vcvttpd2dq
aaa
push
add
popf
in
pop
push
in
data16
lock
in
mov
(bad)
cmc
ins
lea
vshufpd
das
jbe
lds
(bad)
fmul
test
nop
aaa
sub
or
into
xor
aad
jns
outs
mov
(bad)
adc
int
add
ret
in
cmp
in
adc
fidiv
pop
jmp
(bad)
cmp
in
adc
int
and
int
imul
in
or
cmp
in
(bad)
adc
vshufpd
in
(bad)
adc
dec
lock
push
adc
movs
call
(bad)
xor
pop
adc
vshufpd
in
lahf
and
in
inc
cmp
(bad)
adc
sub
in
adc
lds
sub
(bad)
repnz
in
mov
and
push
add
and
movs
in
into
sbb
in
into
sbb
(bad)
jnp
in
lods
gs
sbb
movs
mov
lods
gs
ret
sbb
movs
jl
adc
ja
aad
(bad)
jne
jne
stc
gs
adc
inc
add
aad
(bad)
jne
jne
movs
fist
leave
sub
(bad)
sbb
das
pop
inc
fcmove
pop
repnz
mov
adc
vshufpd
in
(bad)
adc
jne
push
push
push
adc
movs
call
(bad)
xor
pop
adc
vshufpd
in
lahf
and
in
inc
cmp
(bad)
adc
sub
in
adc
(bad)
sub
lea
(bad)
in
and
in
adc
aaa
push
add
and
movs
gs
into
sbb
gs
into
sbb
(bad)
sti
pop
in
lods
in
into
sbb
movs
mov
lods
gs
ret
sbb
movs
jl
adc
ja
aad
(bad)
jne
jne
stc
gs
adc
inc
add
aad
(bad)
jne
jne
movs
fist
leave
sub
(bad)
sbb
das
pop
inc
fcmove
pop
repnz
mov
adc
hlt
mov
push
cmp
cmps
pop
adc
jne
push
push
cmc
pop
dec
push
dec
(bad)
sbb
in
data16
lods
pop
(bad)
sbb
or
sub
(bad)
adc
mov
xchg
ja
in
dec
adc
data16
push
adc
(bad)
adc
mov
or
mov
adc
stc
les
stos
mov
cmc
movs
xchg
xchg
ins
mov
pop
enter
stc
sar
mov
adc
gs
or
cmps
pop
adc
gs
or
cmps
pop
adc
dec
lock
lods
vshufps
gs
sub
fstp
xchg
ret
in
inc
sbb
rcl
cmc
jecxz
sub
jno
fucomi
imul
cmps
inc
lea
mov
mov
hlt
icebp
adc
cmps
pop
adc
fmul
into
cmc
push
mov
cmp
cli
(bad)
adc
test
adc
dec
in
(bad)
mov
jl
test
call
(bad)
adc
int
out
fisubr
ins
jecxz
movs
(bad)
fild
in
in
out
(bad)
shl
cli
in
cmc
mov
aad
or
xchg
in
into
adc
ins
ins
in
aam
out
outs
gs
movs
fst
jns
je
into
xor
inc
into
iret
sbb
ins
gs
popf
mov
into
sub
cmp
fisttp
mov
cmc
mov
pop
dec
push
stos
in
(bad)
aad
in
dec
sub
in
es
add
push
dec
push
add
dec
into
imul
mov
(bad)
int
sbb
fimul
sbb
fldln2
cmps
movs
cmps
ficom
pop
iret
dec
sbb
enter
sbb
cmp
movs
aam
sbb
gs
shl
and
in
(bad)
enter
std
sbb
in
(bad)
adc
aam
(bad)
and
in
(bad)
enter
cmp
sbb
stos
cmp
pop
cmc
in
(bad)
or
cmps
push
movs
cli
(bad)
adc
xchg
xchg
jnp
vshufpd
in
out
jp
pushf
dec
int
mov
(bad)
int
sbb
fimul
sbb
into
lea
cwde
cmc
(bad)
adc
in
into
jmp
cmc
pop
int3
sub
(bad)
in
push
jnp
pusha
clc
adc
pop
mov
(bad)
rol
jne
in
mov
sub
adc
in
(bad)
adc
retf
in
cmps
movs
lds
call
jb
(bad)
or
in
(bad)
jne
repnz
cmp
jmp
(bad)
jne
repnz
vshufps
cmc
(bad)
mov
jl
test
icebp
fs
out
fisubr
ins
jecxz
movs
inc
xchg
ja
and
in
cmps
movs
cmps
pop
adc
inc
lock
xor
pop
dec
sub
mov
adc
cmps
enter
jmp
(bad)
jne
repnz
push
enter
(bad)
or
in
(bad)
jne
repnz
push
dec
hlt
arpl
(bad)
or
in
(bad)
jne
repnz
push
enter
(bad)
or
in
(bad)
jne
repnz
push
dec
mul
(bad)
or
in
(bad)
jne
repnz
fcmovb
adc
(bad)
cmc
les
inc
in
cmp
cli
(bad)
adc
les
dec
xor
lea
adc
mov
xchg
ja
mov
ins
call
adc
mov
in
(bad)
adc
fucomp
pop
aam
data16
nop
ja
and
in
pop
push
in
data16
nop
push
or
pop
and
in
xchg
loope
xchg
vshufps
loope
gs
push
jo
loop
fdivr
scas
fnstsw
or
mov
mov
xor
aad
push
mul
jns
inc
shl
jp
(bad)
in
and
in
push
bound
into
adc
lods
cmp
mov
fwait
jno
jo
mov
out
mov
lods
ret
popa
or
jo
mov
pushf
mov
cmps
shl
sti
xchg
lods
test
in
(bad)
push
test
pop
mov
les
add
in
xchg
mov
xchg
icebp
jne
icebp
mov
mov
call
cmp
pop
in
xor
xchg
sti
jb
push
data16
xchg
iret
sbb
test
(bad)
loopne
xchg
fwait
push
and
sub
cmp
loope
and
cmp
cmp
out
fwait
adc
in
leave
adc
cmp
lea
jne
jp
aad
xchg
test
xchg
(bad)
xchg
xlat
lock
dec
mov
cmp
pop
out
nop
add
retf
pop
cmp
mov
pop
repnz
mov
out
lock
lds
daa
movs
lods
push
and
push
jo
push
fwait
nop
inc
jecxz
cmp
cli
mov
push
addr16
adc
ins
cli
inc
mov
test
sbb
arpl
cdq
repnz
jg
nop
test
sbb
cmp
fcos
mov
cmps
ficom
in
(bad)
adc
dec
lock
lds
jle
vshufpd
in
mov
or
(bad)
adc
js
into
adc
in
pop
and
aad
es
in
(bad)
adc
sti
jmp
gs
push
repnz
mov
mov
or
loope
adc
repnz
cdq
inc
xchg
ss
pop
cs
popf
sbb
and
enter
jl
cmp
neg
xor
stc
or
in
(bad)
jne
fiadd
iret
fucom
cmps
and
(bad)
sbb
vshufps
in
cmps
and
hlt
push
es
cli
(bad)
adc
test
fisttp
in
enter
xchg
or
pop
mov
mov
test
push
mov
mov
loop
imul
imul
cmps
bound
clc
(bad)
adc
xor
into
jne
xor
loopne
adc
mov
pop
lods
adc
mov
sub
mov
sar
clc
xor
sbb
xor
test
cli
sahf
fisttp
in
inc
shr
loop
mov
imul
dec
inc
fistp
jmp
mov
cld
repnz
cmp
and
cmp
test
cmp
mov
cmp
xchg
imul
sub
lock
cdq
loop
ss
cmp
call
xor
dec
mov
mov
inc
cmps
pop
test
scas
jle
fcomp
sbb
mul
pop
mov
lods
or
test
pusha
std
push
in
sbb
(bad)
sti
mov
mov
gs
ins
xchg
repz
mov
in
(bad)
mov
fisubr
stos
sbb
pop
mov
xor
lahf
xchg
movs
retf
mov
test
cmovp
dec
movs
mov
scas
push
mov
pop
psrlw
cmps
add
mov
scas
or
push
jg
aas
cmps
pop
test
pop
movs
pop
leave
sub
cmps
movs
cmps
pop
adc
into
in
lds
enter
jo
mov
jp
mov
shl
fld1
shr
(bad)
push
gs
fst
xchg
rcl
stos
inc
retf
cmp
adc
ss
cmps
or
lock
mov
ret
(bad)
push
jp
jmp
and
mov
mov
dec
cmps
mov
sub
lods
mov
loop
outs
addr16
clc
dec
xor
jo
ret
into
jne
xchg
push
lea
xchg
sbb
adc
jmp
pop
jne
test
mov
imul
pop
mov
pop
imul
cmp
or
jnp
retf
in
out
sub
cmp
xchg
ret
xchg
cmp
(bad)
sbb
repnz
jmp
retf
mov
mov
mov
fsub
pop
push
lea
dec
cli
jb
and
int
sti
xor
mov
(bad)
hlt
mov
cmps
mov
mov
inc
mov
sub
adc
nop
pusha
jmp
daa
pop
mov
xor
inc
pop
jns
push
jbe
das
cs
das
rcr
sub
mov
or
dec
inc
wrmsr
arpl
setle
and
aad
sahf
fwait
sub
das
fiadd
cmp
(bad)
mov
aam
or
push
lea
xchg
out
xor
gs
sbb
and
in
cmps
mov
pop
out
sbb
pop
stos
mov
sub
in
cmp
in
cmps
adc
imul
mov
push
movs
inc
cmp
mov
and
sbb
in
dec
fsubr
(bad)
jne
mov
jne
mov
sub
in
xchg
mov
(bad)
push
idiv
pop
in
rcl
aam
cmps
loop
jb
push
scas
adc
jle
shl
xor
xor
xchg
push
lea
iret
(bad)
jne
sub
cmps
call
rol
ror
cmp
sahf
cmp
mov
sbb
movs
out
adc
movs
xchg
test
lods
mov
leave
xor
call
push
movd
clc
mov
cmp
cli
push
sub
cmp
or
xor
adc
cmps
enter
cmc
jp
das
jmp
cmps
ins
adc
fisubr
dec
push
jmp
stc
inc
cmp
xor
(bad)
aaa
add
mov
xor
or
out
repnz
lods
mov
push
lods
stos
addr16
aad
lods
adc
mov
adc
out
mov
xchg
cmps
mov
or
sbb
push
clc
das
mov
mov
aaa
adc
pop
mov
dec
push
jne
movs
fist
jns
in
dec
jmp
cmp
imul
adc
push
push
lea
leave
ins
push
popa
add
adc
fmul
test
in
mov
dec
lea
in
int3
sbb
and
in
cmps
mov
cmp
sub
fsubr
(bad)
rcl
xor
lahf
(bad)
xchg
jae
test
xchg
jp
bound
stos
stos
ret
cmp
adc
dec
aad
(bad)
jne
shl
mov
std
(bad)
adc
pop
out
xor
mov
pop
aad
jge
sbb
mov
mov
jnp
shr
xchg
xchg
cli
pushf
dec
sbb
sbb
ret
push
jge
mov
popa
sub
mov
sub
mov
push
aad
jne
mov
mov
xchg
(bad)
jne
inc
sbb
imul
push
lea
stos
push
mov
shr
(bad)
push
cmp
cmp
stos
mov
add
or
lods
xor
mov
cmp
cmp
cmp
mov
xchg
add
xchg
test
adc
xor
cmp
cmp
cmp
sbb
sar
(bad)
cmp
stc
inc
cmp
sub
sbb
mov
rcl
sub
inc
push
(bad)
rol
gs
inc
and
jno
jecxz
and
jecxz
pop
inc
inc
call
jnp
or
inc
mov
pop
sahf
sbb
sbb
or
sbb
jmp
(bad)
adc
int
data16
cmc
es
add
jo
ficomp
popf
and
mov
mov
push
mov
adc
adc
mov
ins
dec
jp
mov
and
mov
out
lock
clc
jp
imul
xor
jo
test
adc
adc
retf
sub
sbb
jmp
stc
sub
in
(bad)
xor
stos
fisub
and
in
cmps
loop
sbb
push
test
stos
js
add
test
push
aas
adc
inc
out
mov
test
jne
das
ss
jo
adc
cli
leave
inc
(bad)
out
sub
push
enter
pop
adc
push
popf
push
and
into
jne
pushf
mov
push
std
add
mov
out
jp
xor
stos
(bad)
mov
mov
mov
mov
lea
push
mov
nop
mov
mov
pop
dec
imul
fstp
jp
cmp
stos
(bad)
mov
call
scas
mov
xchg
or
rcr
lods
sar
out
popf
sbb
imul
test
shl
mov
xchg
retf
retf
cmp
dec
movs
shr
ds
(bad)
and
leave
ret
inc
and
push
stos
add
jmp
jecxz
sub
ret
and
ins
stos
xchg
ret
push
jge
cmp
xor
leave
ret
add
sub
(bad)
hlt
jns
xchg
inc
lock
adc
in
int3
sbb
and
in
cmps
mov
popf
mov
inc
jne
xor
call
dec
mov
movs
push
lea
inc
lds
adc
rol
fmul
ret
pop
and
mov
stc
gs
shl
clc
mov
js
fs
(bad)
jp
cmp
sub
sti
mov
xchg
imul
and
in
xchg
clc
cmp
sub
(bad)
adc
leave
in
ja
cmc
cmps
sub
(bad)
icebp
sub
or
bound
add
ss
mov
cmp
and
cmps
idiv
jne
out
cmp
shr
cmps
inc
fmul
(bad)
adc
push
xchg
sbb
data16
out
jne
mov
ret
(bad)
push
ficom
push
mov
dec
push
int3
mov
push
jmp
(bad)
dec
push
xchg
pop
data16
jo
and
cli
cdq
jmp
mov
add
adc
xor
jmp
out
shr
(bad)
push
pop
loopne
mov
nop
sub
cmp
call
sti
jb
push
mov
jp
sahf
shl
add
das
cmp
jo
cmp
mov
fnstenv
shl
sub
xchg
xor
jmp
sbb
inc
adc
jmp
dec
mov
push
repz
push
mov
inc
into
dec
push
cmc
mov
inc
mov
sbb
test
repz
push
lds
adc
and
push
mul
pop
cmc
dec
push
cmp
scas
mov
in
rol
jae
sbb
sub
and
mov
add
mov
inc
push
pop
cld
xchg
mov
in
rcl
adc
stc
popf
sbb
sbb
cmps
mov
mov
mov
inc
pop
sbb
or
fidiv
push
retf
sar
cmc
push
adc
cmps
mov
mov
sbb
dec
pop
cmc
mov
cmp
jge
mov
cmp
cmc
lods
xor
push
cmp
(bad)
stos
movs
cmps
pop
adc
inc
dec
jnp
arpl
cmp
pusha
dec
mov
dec
inc
or
push
in
(bad)
adc
vshufpd
jl
fbld
ja
mov
dec
mov
push
sub
and
adc
sbb
adc
ss
pop
xchg
aaa
imul
xlat
out
in
sahf
push
sbb
or
in
(bad)
or
lea
je
rol
in
cmp
(bad)
and
adc
adc
xchg
inc
lock
in
int
in
push
or
in
cmps
mov
cli
out
cld
xchg
xchg
add
sub
sub
bnd
(bad)
in
xchg
lock
push
iret
push
repz
jns
movs
test
idiv
pop
loop
xchg
pop
jbe
jge
ins
in
fist
fsubr
cmps
and
mov
stc
push
cmp
out
fucom
out
add
xchg
js
fist
stos
sbb
sbb
pop
jbe
mov
xchg
fwait
call
gs
(bad)
adc
cmp
sub
cmp
data16
shl
mov
cmp
mov
mov
sub
in
mov
cmp
cmp
mov
stos
into
push
lods
xchg
sti
mov
lods
shl
xor
cmp
retf
inc
xchg
dec
test
and
mov
shl
jne
pop
xchg
mov
mov
add
or
(bad)
(bad)
mov
mov
lea
xchg
mov
push
fcmove
jnp
cmp
stc
inc
call
xchg
and
inc
cmp
cmp
into
sbb
push
or
fcmovnb
mov
jg
cmp
leave
push
ret
imul
test
cld
leave
jl
or
adc
add
push
mov
sub
lods
sub
movs
ja
xor
movs
pop
push
push
les
in
xchg
push
int
adc
iret
jmp
data16
mov
ja
in
adc
fstp
cs
sbb
(bad)
fs
sbb
xchg
inc
mov
or
lods
lods
push
out
fnstsw
add
pop
arpl
xchg
test
mov
ret
call
adc
(bad)
and
mov
push
push
les
in
xchg
push
ins
mov
push
les
hlt
(bad)
and
mov
stc
cmp
lods
repnz
stc
jb
adc
ins
loope
jns
mov
push
cmp
adc
xchg
std
mov
jns
mov
cmp
ja
sub
pop
mov
mul
add
pushf
jl
in
add
(bad)
lods
push
add
cdq
jl
int
rcr
arpl
inc
cmp
fcos
mov
cmps
pop
adc
jne
push
sub
rcl
in
int
fidiv
pop
call
ins
jecxz
pop
js
(bad)
adc
mov
in
out
in
int
inc
in
fld
and
in
cmps
mov
mov
cdq
loop
inc
aam
xchg
cmp
lods
xor
jnp
out
cmp
cmp
lds
adc
adc
push
push
pop
or
mov
xor
push
xchg
push
ror
jns
and
call
loop
sar
or
in
(bad)
ror
(bad)
(bad)
in
imul
ja
cwde
mov
out
sub
test
xchg
push
daa
ds
jne
jo
add
jae
jne
mov
mov
jo
push
sub
mov
xor
in
cmps
mov
lds
mov
cmp
repz
add
in
jmp
jb
into
jne
shl
pop
push
xchg
sti
imul
jp
stos
add
xor
push
sti
xor
sub
out
push
push
iret
rcl
(bad)
in
xchg
sbb
cli
add
jmp
add
call
xor
cmp
test
icebp
mov
cmc
mov
xor
shl
aam
cli
sbb
mov
(bad)
ja
jmp
adc
ret
cmp
mov
jo
ret
push
mov
or
pop
idiv
xor
mov
xor
mov
add
push
inc
inc
jmp
xor
sahf
add
cli
xchg
pop
mov
out
xor
or
hlt
jle
test
out
ds
hlt
jmp
xor
pmaddwd
jecxz
jae
jmp
xor
mov
jae
sbb
jno
mov
push
int3
mov
jecxz
daa
fdiv
mov
xor
unpcklps
mov
push
mov
faddp
pop
mov
mov
cmps
mov
jl
or
arpl
in
adc
jnp
(bad)
je
int3
mov
adc
mov
inc
sti
mov
int3
mov
adc
and
sti
mov
int3
mov
adc
cmp
dec
mov
scas
add
inc
xchg
dec
xor
push
xor
push
cmp
or
and
mov
int3
mov
jmp
and
jmp
mov
jecxz
mov
adc
int3
mov
out
adc
int3
call
adc
int3
cmp
aam
jmp
and
or
inc
sti
mov
int3
mov
sbb
cmp
out
scas
inc
jl
pop
out
adc
int3
cli
jmp
xor
hlt
push
movs
dec
mov
fs
mov
fcmovnb
sub
or
sti
sahf
and
repz
adc
retf
scas
and
xor
pop
cld
xor
jmp
ret
fld
clc
dec
mov
mov
xor
mov
push
out
push
scas
fistp
test
or
lods
cmp
jnp
call
mov
retf
test
lods
mov
scas
fdivr
loope
adc
int3
sbb
push
int3
mov
stos
mov
pop
cld
mov
int3
mov
sub
xchg
hlt
je
int3
mov
sti
mov
int3
mov
out
xor
out
ds
add
pop
jmp
and
push
adc
int3
pop
jmp
imul
push
int3
mov
sti
mov
int3
mov
stos
mov
jae
mov
int3
mov
stos
lahf
xor
push
xchg
hlt
hlt
push
int3
mov
stos
mov
scas
sti
mov
int3
mov
add
sahf
scas
pop
cld
mov
int3
mov
jno
adc
cli
mov
fnstcw
adc
and
cli
je
int3
mov
jmp
xor
adc
int3
mov
out
xor
mov
dec
mov
push
int3
mov
adc
int3
mov
adc
adc
ret
aad
inc
int3
pop
adc
and
cli
je
int3
mov
loop
adc
inc
int3
jp
xor
clc
jp
xor
or
and
or
(bad)
faddp
into
mov
jmp
and
fstp
hlt
mov
dec
sbb
hlt
je
int3
mov
jmp
xor
scas
push
hlt
retf
and
fwait
dec
stos
or
ret
gs
test
xor
mov
mov
xor
dec
stos
and
adc
mov
and
cmovno
push
xchg
xor
mov
inc
out
push
aam
mov
xor
fisub
add
idiv
fcomip
jmp
xor
cs
and
or
add
mov
and
jmp
dec
idiv
dec
cmc
je
int3
mov
jmp
and
mov
cli
je
int3
mov
stos
mov
std
retf
aaa
cmp
in
xlat
pop
or
cmp
sbb
jecxz
adc
dec
hlt
mov
cmps
aam
mov
jge
pop
cmp
into
(bad)
jmp
(bad)
in
or
adc
push
push
lea
cli
loope
xchg
test
enter
in
adc
xchg
xchg
leave
xor
movs
mov
adc
cmp
lds
idiv
out
sbb
stc
lds
ret
lods
push
jp
push
stc
gs
xchg
mov
mov
and
xchg
sub
aaa
stos
xor
dec
neg
shr
(bad)
push
cli
das
movs
shl
int
shr
mov
push
sar
cmp
xchg
in
(bad)
adc
lds
stc
push
(bad)
aam
bound
shl
mov
stc
(bad)
adc
jne
cmp
pop
mov
xchg
mov
ret
imul
rcr
mov
(bad)
(bad)
jo
push
push
lea
bound
aaa
xor
in
add
or
jmp
dec
jae
xor
mov
dec
mov
test
lea
xchg
test
imul
retf
ins
cdq
lock
xchg
mov
out
sub
adc
sub
mov
xor
retf
add
xor
aad
lock
jmp
mov
cli
jo
jmp
stc
inc
pop
enter
pop
data16
xchg
xchg
sub
pop
pop
popa
xchg
aad
dec
je
fdiv
adc
lahf
aad
gs
fdiv
adc
dec
jnp
mov
jle
adc
jle
fdiv
je
int
cld
(bad)
sub
cld
sahf
rcr
mov
(bad)
sub
fdivr
(bad)
xlat
inc
ds
cmp
push
sub
cld
neg
push
or
dec
(bad)
in
cmp
cld
sahf
ins
and
cdq
sub
or
mov
int3
add
ss
ds
cld
sahf
sub
inc
ficomp
ss
sahf
dec
data16
add
dec
jmp
sub
stos
inc
mov
dec
xchg
push
fs
data16
or
inc
daa
test
pop
xchg
push
fs
data16
or
inc
(bad)
cld
mov
xchg
ss
test
mov
and
fnsave
and
pop
jle
cmp
mov
(bad)
mov
and
loope
ror
cmp
cmp
call
movs
lock
(bad)
cmp
in
out
vpcmpgtd
vpcmpgtd
(bad)
or
in
out
gs
retf
popa
xchg
add
(bad)
mov
scas
(bad)
pop
jmp
imul
fwait
(bad)
adc
in
xchg
push
mov
add
sub
cdq
v4fnmaddps
ret
stos
bound
imul
imul
xor
stc
push
and
lock
loop
adc
push
int
add
in
cmps
xor
(bad)
adc
mov
cmp
sbb
pop
aam
xchg
mov
enter
in
cmps
loop
clc
sub
xchg
imul
std
sub
je
shl
cdq
cmp
js
jo
sub
jo
ret
sub
movs
xchg
xchg
jle
mov
lahf
xor
add
add
and
call
and
xor
cmp
pop
xchg
pusha
retf
popa
xchg
add
xor
jne
and
lahf
fidivr
sbb
lods
push
mov
mov
shl
mov
mov
adc
rcl
dec
gs
pop
pop
movs
jb
(bad)
sub
mov
mov
out
sub
pop
scas
das
push
mov
push
dec
mov
xor
inc
jns
jbe
cmp
adc
adc
rcl
mov
out
cmp
adc
in
mov
shr
hlt
daa
aaa
adc
pop
mov
jge
mov
cmp
jge
dec
call
lds
(bad)
adc
fucomp
(bad)
cmc
lds
adc
ficom
cmp
sub
mov
ins
das
daa
inc
fimul
in
movs
inc
xchg
ja
cli
pop
into
jmp
arpl
stos
add
shl
add
xchg
xchg
outs
pop
dec
or
push
dec
jmp
(bad)
jmp
ja
in
mov
int3
fcomp
popa
(bad)
in
arpl
stos
add
std
cmp
imul
fimul
fwait
lds
adc
cmp
mov
adc
xchg
inc
jo
adc
cmp
es
(bad)
xor
cmp
jle
add
in
(bad)
jne
in
add
cld
mov
jmp
ret
cmc
xor
xor
jmp
fst
fidiv
cmp
vshufpd
adc
pop
aam
retf
mov
jge
jmp
add
call
push
test
(bad)
retf
sub
cmovns
jp
sbb
and
dec
ja
movlps
or
add
cdq
les
(bad)
jmp
and
add
(bad)
cwde
cli
in
(bad)
cmc
ins
das
pop
inc
fmul
cmp
or
mov
adc
cmp
aam
sti
je
gs
or
mov
in
data16
rcl
hlt
in
(bad)
jne
gs
or
lds
cs
ja
sbb
jge
jmp
ja
mov
pop
push
retf
stc
sub
fimul
push
retf
cmp
vshufpd
adc
adc
pop
xor
jmp
ja
movlps
or
or
jle
fld
cmc
in
cmps
mov
xor
jmp
jle
add
in
(bad)
mov
jge
jmp
(bad)
jge
in
add
pop
jns
xor
jp
jmp
clc
adc
push
mov
sbb
xor
es
mov
loopne
cwde
xor
dec
je
in
add
pop
jns
xor
adc
lods
shl
cmc
xor
cmp
push
lea
in
(bad)
aad
lods
pop
xor
jmp
out
cs
ja
mov
dec
je
in
movs
pop
xor
jmp
(bad)
in
in
cmps
mov
xchg
popa
popf
and
in
lods
fidiv
cmp
vshufpd
(bad)
xlat
ins
jp
sbb
and
jl
nop
sbb
cmp
jp
sbb
cmp
jle
add
in
(bad)
cmc
jp
sbb
and
dec
ja
movlps
or
pop
(bad)
retf
fstp
or
into
jne
adc
xchg
movs
inc
adc
and
in
data16
fidiv
cmp
leave
out
fimul
scas
movs
iret
mov
adc
test
cmps
add
in
(bad)
jne
cli
sbb
sub
pop
push
enter
mov
xor
jmp
mov
je
out
mov
xor
jmp
cmps
mov
xor
jmp
(bad)
jmp
and
(bad)
(bad)
jmp
cmp
(bad)
sub
in
es
add
xor
jne
and
cli
or
into
test
(bad)
adc
gs
or
mov
out
data16
mov
cmc
imul
stos
inc
mov
mov
scas
and
(bad)
(bad)
jmp
fidiv
out
ja
cmp
es
data16
mov
cmc
jcxz
stos
test
xchg
sbb
ins
das
and
dec
lea
mov
pop
mov
fnstcw
jcxz
stos
test
sbb
gs
mov
in
data16
nop
push
mov
nop
jl
sub
jbe
xchg
loopne
push
in
(bad)
cmc
inc
sbb
pop
push
cmc
out
ret
xor
or
stc
inc
fimul
xchg
out
popf
pop
jg
popa
stc
gs
inc
push
lds
adc
sti
int3
mov
dec
cli
push
xor
pop
rcl
stos
fdiv
jbe
aaa
adc
enter
jne
lods
mov
adc
lods
stos
mov
jne
push
es
stc
(bad)
adc
lods
xchg
cmp
scas
call
and
in
xchg
js
xor
ret
xor
cmp
fs
mov
pop
jne
push
bound
cmps
and
shl
call
in
jb
pop
cdq
cli
fisubr
fidiv
aaa
jmp
mov
loop
sub
push
mov
ret
into
jne
(bad)
imul
js
mov
adc
clc
scas
(bad)
jne
hlt
xor
and
pop
les
sti
addr16
xchg
adc
in
(bad)
xchg
call
call
ret
xlat
push
jne
test
adc
dec
fidivr
xor
sbb
mov
jg
inc
lods
add
ins
lods
mov
in
jmp
jne
xchg
mov
push
in
jecxz
mov
pop
sbb
in
add
push
pop
pushf
push
in
lock
mov
arpl
stos
or
sbb
in
xchg
sbb
pop
aam
or
jl
mov
fdiv
mov
loop
nop
xchg
inc
mov
pop
test
ret
lods
ins
sbb
into
xor
adc
or
call
sbb
adc
xor
into
xor
cmp
fst
test
into
sbb
jmp
push
fisubr
inc
(bad)
ja
fisub
cmp
add
xchg
out
cld
movs
movs
(bad)
sahf
outs
pop
dec
dec
mov
es
pop
pop
jns
test
xchg
aaa
push
test
repnz
mov
es
rcl
push
cmp
cmp
mov
in
(bad)
adc
dec
mov
push
movs
jg
sbb
xor
jbe
dec
loopne
aad
push
fdivp
inc
pop
loopne
ror
shl
rcl
sub
shl
push
sar
(bad)
adc
sti
call
mov
lods
icebp
cli
cmp
gs
dec
and
push
add
clc
sbb
push
(bad)
jno
sbb
stc
loop
in
(bad)
jne
mov
sub
sub
in
(bad)
push
jnp
aaa
jmp
fsub
push
mov
cmp
push
test
mov
add
test
movs
cld
(bad)
adc
mov
push
mov
sbb
lods
adc
mov
jne
jo
or
sub
retf
mov
lods
icebp
rcr
mov
add
out
adc
mov
cmp
push
bt
lock
and
fcmovu
xchg
xor
mov
cmps
mov
pop
(bad)
cmp
cmp
shr
sub
cmp
test
lea
not
sbb
fcmovbe
adc
xchg
addr16
bnd
stc
gs
popf
clc
addr16
cmp
popa
cli
adc
xor
add
xchg
cmp
ins
in
jmp
pushaw
lods
xor
pop
add
cdq
or
cmps
sub
mov
dec
mov
test
into
mov
and
xchg
or
sub
push
xchg
or
mov
xlat
sbb
jne
mov
retf
pop
or
sub
retf
movs
out
add
or
push
cld
call
cmp
es
retf
sbb
daa
push
lea
mov
sub
push
cmps
movs
dec
dec
(bad)
lods
and
jmp
call
jne
fsubr
aad
mov
xor
(bad)
push
clc
sub
jl
addr16
xchg
or
cmc
shl
sbb
es
adc
sub
sbb
les
mov
call
aam
data16
xor
les
mov
popf
xchg
dec
mov
or
inc
adc
movs
inc
in
pop
or
push
xor
cmps
pop
adc
ins
stos
and
retf
int
and
or
(bad)
jne
or
jno
add
sub
xchg
jno
pop
jbe
or
in
(bad)
xor
imul
dec
xor
dec
dec
fimul
cwde
into
mov
pushf
sub
and
in
push
and
jecxz
jne
test
mov
xchg
cmp
test
sub
mov
cmp
push
xchg
test
dec
test
jp
xchg
fwait
ja
pop
test
fbstp
out
fsubr
(bad)
jne
xor
jb
mov
jmp
and
sub
mov
bound
jne
test
jo
jmp
mov
and
adc
(bad)
scas
xor
jmp
jnp
ror
(bad)
adc
pop
xchg
icebp
add
or
in
xor
daa
adc
(bad)
cmp
mov
push
inc
(bad)
stc
call
adc
cmps
push
xchg
add
dec
in
imul
mov
pop
adc
in
jecxz
jae
mov
adc
mov
mov
je
push
jp
mov
pop
popf
jb
xchg
sbb
hlt
inc
pop
pop
test
fld
cmps
ficom
pop
and
fucom
cmps
xor
hlt
es
vshufps
inc
push
cmp
ins
mov
and
mov
jo
adc
xor
lods
dec
cli
mov
clc
mov
mov
dec
pop
dec
sbb
js
push
(bad)
adc
addr16
aaa
xchg
scas
adc
and
jecxz
xor
movs
xchg
push
lea
xchg
test
int
es
cmps
and
out
shl
test
push
or
adc
adc
xchg
adc
(bad)
jne
fnstcw
mov
adc
cmp
dec
in
xlat
adc
enter
xchg
sbb
xor
jle
(bad)
repnz
cld
(bad)
(bad)
xor
xor
pop
paddq
cmps
inc
mov
xchg
imul
mov
(bad)
mov
pop
push
cmp
fs
(bad)
test
ror
push
call
cmp
(bad)
and
cmp
lods
jno
pop
arpl
sbb
lods
xchg
test
sar
lock
and
add
sub
test
inc
cmp
(bad)
icebp
repz
stc
inc
jp
rol
lock
add
or
inc
add
xor
and
mov
shl
inc
adc
addr16
xchg
inc
test
jbe
xchg
mov
xchg
xchg
nop
inc
mov
push
inc
out
repnz
loope
test
mov
mov
shl
and
push
mov
(bad)
adc
les
and
and
mov
out
shl
and
inc
cmps
add
test
inc
mov
test
mov
addr16
inc
arpl
add
jecxz
test
add
test
adc
mov
nop
movs
lods
mov
mov
inc
lea
push
mov
(bad)
adc
les
sbb
in
js
and
mov
jecxz
aam
and
inc
cmps
add
test
inc
mov
test
mov
addr16
inc
arpl
add
jecxz
test
add
and
mov
repnz
in
test
and
pop
sub
and
vpinsrb
(bad)
shl
push
mov
sub
mov
rol
and
mov
ins
push
enter
sar
sahf
jg
and
push
ror
jp
dec
pop
push
shl
jl
or
push
rcl
jmp
and
cmp
lds
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
jmp
mov
pop
xchg
jmp
xchg
in
(bad)
adc
push
in
ret
je
sbb
not
mov
mov
cmp
adc
es
inc
push
test
in
cli
push
and
adc
movs
xor
in
rcl
mov
in
(bad)
xor
mov
pop
push
pop
push
test
fstp
cli
jp
mov
adc
push
rcl
inc
jb
into
jne
pop
cmps
push
mov
in
(bad)
jne
xchg
test
lea
(bad)
repnz
sub
stos
bound
inc
shr
imul
ficom
jmp
cmps
inc
js
mov
lds
mov
mov
mov
push
(bad)
fld
lock
rcr
dec
sub
jmp
pop
dec
test
mov
in
loop
test
sub
add
jmp
es
test
xchg
mov
ins
(bad)
adc
mov
mov
mov
add
shl
push
push
push
dec
div
movs
fdiv
or
cmp
xchg
add
retf
cmp
ss
jns
push
add
ss
cmp
ss
sbb
add
retf
cmp
ss
cmp
ss
ss
js
mov
stos
js
push
add
(bad)
mov
pop
(bad)
ss
cmp
ss
cmp
ss
aas
outs
jo
popf
scas
xor
aas
outs
lock
int
sub
retf
cmp
ss
cmp
ss
cmp
scas
inc
les
dec
jae
ss
imul
ins
mov
add
jmp
(bad)
xchg
cmp
xchg
mov
stos
jbe
xor
cmp
cmp
ss
fnstenv
xchg
imul
jns
les
dec
xor
ss
imul
sahf
dec
mov
jae
add
cmp
ss
jns
les
pop
mov
xor
cmp
jnp
cmp
mov
mov
ret
xor
cmp
cmp
ss
cmp
je
fnstenv
xchg
imul
cmp
ss
sbb
les
mov
popf
aaa
ins
cdq
sub
rdtsc
stos
icebp
adc
aaa
ret
pop
sub
add
pop
jae
add
cmp
push
sbb
retf
leave
or
push
cld
add
daa
or
xchg
les
outs
enter
fild
inc
adc
data16
das
mov
mov
xor
sahf
in
dec
les
sub
movs
stos
push
push
sbb
aaa
lods
div
pop
imul
jmp
les
int
(bad)
xor
add
jp
cmp
push
mov
pop
jnp
jns
ret
jns
daa
ins
cmps
mov
daa
ins
cdq
lods
pop
add
or
cmc
mov
mov
ja
pop
xor
(bad)
out
int
cmp
push
cli
cmp
iret
mul
rol
test
(bad)
mul
rol
add
xor
or
retf
xor
ss
cdq
jnp
loopne
ret
push
retf
cmp
pop
mov
fldenv
sahf
iret
mov
(bad)
mov
mov
(bad)
jl
ret
xchg
sahf
iret
mov
sub
(bad)
lods
sub
xor
fnstenv
mov
fbstp
add
aaa
ret
loope
ss
jmp
or
cmp
sbb
push
fidiv
popa
sub
(bad)
or
loope
cmp
jns
inc
nop
cld
cmps
aaa
dec
mov
or
cld
cli
out
outs
leave
xchg
inc
frstor
es
stc
cmps
aaa
or
mov
ins
leave
xchg
mul
int
ret
ins
(bad)
add
retf
je
sahf
sub
jae
add
retf
mov
les
pop
(bad)
fwait
add
mov
or
fnstenv
out
cmp
cmp
ret
and
sub
xor
sahf
dec
mov
in
mov
xor
sahf
iret
mov
(bad)
daa
or
ror
add
cmp
push
xchg
dec
jnp
mov
ret
pop
mov
(bad)
lea
stos
leave
push
fld
mov
pop
push
in
cmp
inc
frstor
stos
sahf
ins
fcmove
cmp
inc
xor
ss
cdq
jnp
loopne
ret
push
retf
cmp
pop
mov
fldenv
sahf
iret
mov
jle
add
(bad)
les
rdtsc
push
stos
mov
aaa
ins
cdq
sub
rdtsc
stos
lock
cmp
hlt
pop
shl
xchg
imul
mov
jle
add
imul
popa
cdq
lods
fimul
xor
(bad)
cmc
cmp
pop
std
popa
sub
mov
jge
add
pop
mov
adc
or
cld
pop
cmp
push
sbb
test
cdq
test
inc
sbb
push
sbb
lods
mov
(bad)
mov
ret
xor
xor
fnstenv
mov
dec
les
or
sbb
pushf
add
retf
cmp
cmp
mov
fmul
retf
sbb
bound
aaa
ret
or
and
dec
je
sahf
iret
movs
cwde
and
xchg
dec
add
sub
in
sub
adc
lahf
dec
nop
add
jmp
lahf
retf
xor
jmp
stc
mov
and
adc
pop
mov
loop
push
add
int
inc
cmp
pop
xor
call
in
dec
xchg
adc
fsin
(bad)
call
mov
mov
int
aam
mov
mov
popf
sbb
fild
in
mov
fstp
jp
sbb
lea
pop
cli
jl
cs
adc
push
adc
mov
xor
and
in
cmps
loop
lea
stos
call
shr
push
pop
sbb
sti
add
in
cmps
and
jp
push
pushf
mov
mov
cdq
movs
push
in
ror
xchg
push
lea
xchg
mov
adc
push
(bad)
push
aam
xchg
(bad)
out
ret
sahf
push
and
dec
aam
cmps
dec
mov
mov
cli
dec
and
nop
mov
push
lea
sbb
lods
mov
pmuludq
test
adc
push
push
in
cmps
adc
nop
cmps
shl
cmps
and
clc
(bad)
adc
mov
adc
or
lods
push
and
cli
out
xor
shl
lods
pop
xor
sar
xor
(bad)
or
xchg
xor
push
dec
pop
ins
ja
idiv
mov
or
lock
lea
retf
fisub
xor
dec
and
inc
jnp
and
jmp
mov
mov
aaa
call
pop
jmp
sub
imul
loope
and
fild
sub
mul
mov
cmp
in
retf
sub
ins
pop
test
mov
mov
and
sbb
and
enter
mov
pop
mov
and
sti
lea
fs
lea
fs
mov
fs
push
shr
cmc
push
int
ins
sti
lea
fs
mov
in
xor
imul
lea
or
ret
(bad)
mov
or
push
mov
push
dec
retf
imul
lea
sbb
imul
in
xor
mov
and
(bad)
ins
xchg
sub
inc
mov
or
repnz
in
jno
lea
lods
xchg
cmp
jno
(bad)
mov
inc
sbb
dec
test
dec
ins
pushf
ja
lea
ins
jns
sti
lea
imul
sub
mov
sub
sub
push
ins
imul
adc
ins
xchg
cmp
imul
mov
(bad)
ins
test
vfrczss
imul
ds
imul
cmps
push
mov
sub
imul
ins
pushf
mov
dec
ins
pushf
mov
in
xor
xchg
or
sbb
jno
xchg
pop
fldenv
push
ins
pushf
mov
dec
ins
pushf
jecxz
loope
mov
xor
enter
imul
imul
daa
shr
add
ins
push
fisttp
mov
and
pusha
(bad)
push
mov
and
add
mov
ins
cmp
jnp
mov
add
mov
loope
mov
sub
test
add
lods
and
add
lods
and
loope
arpl
loope
cmp
push
arpl
aam
push
mov
(bad)
movs
sbb
pusha
xchg
jge
movs
sbb
pusha
cmp
sbb
lods
adc
test
fs
lea
fs
lea
aad
pusha
(bad)
ins
mul
xor
mov
add
lea
or
inc
int
test
imul
test
sti
enter
adc
jno
lods
cmps
ret
mov
cmp
fwait
jmp
adc
adc
adc
jns
or
or
lahf
(bad)
movs
in
leave
sbb
and
in
cmps
mov
pop
rcl
mov
dec
(bad)
push
scas
cdq
mov
fwait
add
in
xchg
rol
jne
sbb
sbb
mov
jns
in
inc
(bad)
jp
ds
xchg
pop
jg
jne
or
ss
and
hlt
shl
mov
clc
(bad)
adc
xor
into
push
mov
sbb
jmp
cmps
and
fsubr
(bad)
xor
in
(bad)
adc
jb
test
cmp
mov
mov
mov
adc
enter
jmp
cmps
add
daa
push
sub
jl
imul
xor
into
push
sbb
mov
push
lea
push
in
int3
adc
clc
cld
mov
out
and
in
cmps
and
add
jmp
jno
sub
mov
add
xchg
sti
outs
call
or
adc
or
lods
xor
lea
add
jne
call
stc
shl
mov
xchg
(bad)
adc
jmp
mov
xchg
out
clc
scas
ret
cwde
les
sub
stc
jns
and
or
aaa
sub
adc
addr16
int3
dec
mov
dec
bound
mov
arpl
sub
or
rcr
gs
retf
push
vshufpd
xchg
inc
jo
cwde
int
jo
fsubr
jnp
cmp
mov
push
add
nop
ins
in
cmp
in
cmps
or
jns
jne
into
xor
int
test
or
(bad)
jne
ins
leave
test
mov
jb
dec
dec
jp
sbb
xchg
mov
fwait
or
mov
test
cli
xchg
xor
dec
add
adc
push
xor
mov
lods
xor
add
in
cmps
and
sbb
inc
mov
sbb
shr
test
(bad)
mov
dec
dec
js
iret
mov
ins
push
jne
and
xchg
push
cmp
xor
in
xor
cmp
xchg
mov
mov
and
cli
and
jno
push
fdivr
test
std
into
xchg
cwde
xchg
into
adc
sbb
jle
xchg
sti
jae
movs
repnz
in
mov
xchg
js
mov
push
cmp
imul
cmps
push
test
push
add
in
xchg
call
bound
shr
call
gs
sbb
push
xchg
fld
cmps
bound
and
loop
test
jne
js
loop
push
mov
imul
sar
retf
in
mov
stc
sbb
iret
xchg
repz
fsub
call
(bad)
jmp
xchg
ffree
imul
pop
out
mov
add
sbb
adc
(bad)
inc
psadbw
loopne
repnz
mov
mov
repz
call
loop
mov
loopne
repnz
mov
out
repz
call
loop
aad
add
pushf
loope
xchg
(bad)
imul
int
adc
push
pop
jo
push
pop
jo
push
pop
jo
push
pop
jo
push
pop
jo
jmp
jo
call
dec
push
pop
jo
push
pop
nop
movs
push
push
pusha
or
out
cmps
jo
push
pop
jo
push
pop
nop
lods
push
add
push
jg
or
push
pop
jo
push
pop
jo
push
pop
jo
mov
dec
lods
jp
js
push
pop
jo
mov
aas
shr
aas
and
push
pop
mov
retf
test
iret
or
and
adc
out
cmps
ror
push
pop
jo
aaa
vmread
mov
xchg
push
push
jg
adc
scas
sbb
push
pop
jo
cs
add
outs
push
adc
out
cmps
clc
repnz
loopne
cmps
mov
adc
jp
push
jecxz
jb
nop
(bad)
lods
loopne
enter
js
push
pop
jo
xchg
and
out
cmps
ror
push
pop
xor
dec
xchg
je
xor
xchg
(bad)
movs
dec
sti
and
(bad)
out
inc
sbb
cmp
adc
mov
outs
adc
pop
jo
shr
jge
pop
adc
jg
std
out
mov
shl
push
adc
cwde
scas
and
int
dec
js
mov
pop
cmp
(bad)
sar
xor
cmp
adc
mov
nop
stos
xchg
lea
js
mov
pusha
or
into
push
xchg
movs
mov
or
dec
adc
push
sbb
add
jne
dec
adc
adc
scas
js
add
iret
lea
js
mov
(bad)
scas
and
int
dec
js
mov
cmp
push
jg
jge
adc
jmp
sub
push
fistp
lea
dec
lods
mov
pop
shl
outs
adc
push
mov
jo
scas
scas
not
pop
adc
dec
shrd
shl
outs
add
dec
xchg
mov
jo
scas
scas
pop
inc
push
pop
push
data16
scas
inc
cmp
js
mov
aaa
or
push
jg
dec
dec
iret
mov
mov
ucomiss
ror
ret
idiv
shld
push
pusha
or
mov
aaa
or
push
jg
jge
sbb
add
pop
ror
push
pop
nop
adc
pop
adc
push
pop
adc
dec
vmread
pop
jo
repz
or
scas
xchg
xchg
movs
push
pop
pusha
or
outs
inc
xchg
movs
push
pop
pusha
or
outs
inc
adc
scas
scas
sti
jno
sub
icebp
pusha
int
mov
add
push
aas
jo
push
jg
pushf
or
jo
outs
(bad)
cmps
push
dec
push
pop
push
adc
pop
adc
repz
xchg
outs
scas
push
pop
push
pop
adc
cs
jle
push
ret
icebp
pusha
ror
lahf
jle
add
pusha
adc
nop
scas
add
iret
int
dec
js
mov
pop
lock
mov
xor
jp
mov
jg
push
lahf
jg
sbb
push
cmp
push
aas
(bad)
int
vmread
push
pop
int
icebp
loopne
in
sbb
js
repz
sub
aam
test
sbb
cmp
jbe
vshufpd
int
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
adc
jmp
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
shr
adc
jmp
ret
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
out
vshufpd
shl
cmp
mov
cmc
inc
sbb
pop
aad
xchg
fst
push
repz
sti
mov
mov
or
mov
cmps
ret
and
enter
jp
jg
shl
stos
jo
cwde
mov
xor
stc
mov
in
(bad)
xor
mov
or
(bad)
push
mov
rcr
adc
imul
sub
fstp
out
data16
push
jmp
hlt
shl
mov
cld
(bad)
adc
mov
sti
jo
out
icebp
clc
sub
push
jne
mov
sbb
jmp
cdq
add
or
push
lods
xor
scas
adc
and
cld
into
jne
xchg
test
adc
(bad)
adc
cmp
ins
ss
(bad)
adc
in
out
cmp
cmp
call
adc
cmps
mov
mov
adc
sti
enter
sbb
adc
test
cmp
or
fcmovu
cmps
cli
rcr
(bad)
xor
mov
ret
mov
sub
rcl
push
stos
popa
arpl
mov
add
ins
retf
setae
add
fidivr
stc
or
xchg
shl
hlt
xchg
sti
jo
shl
fdivr
jb
sub
pop
iret
pop
mov
xor
jmp
ficomp
adc
fisub
push
iret
shl
adc
das
cld
repnz
fdivr
dec
jmp
sub
pop
pop
cwde
cmp
nop
fdivr
stos
je
fld
nop
mov
sbb
sub
adc
pop
cmps
ficom
jne
push
sub
xlat
adc
movs
add
sbb
and
and
adc
fsub
mov
es
vunpckhps
mul
dec
fidiv
(bad)
jns
fisub
and
in
out
sbb
pop
mov
call
out
jns
in
inc
idiv
pop
in
xchg
fist
gs
adc
(bad)
or
in
cmps
call
movs
test
pop
sub
call
cli
icebp
fs
fsub
mov
cmps
call
xor
(bad)
adc
cwde
push
into
jne
shr
ret
bound
into
sub
cld
(bad)
adc
adc
lods
or
test
xchg
(bad)
sbb
lock
adc
(bad)
in
cmps
mov
lahf
push
mov
mov
pop
push
call
add
lea
and
inc
or
push
call
jne
xchg
leave
aaa
mov
dec
test
outs
movs
lock
jne
retf
shl
mov
add
mov
cmp
mov
je
cld
xor
sub
mov
dec
pop
int
push
mov
ror
jne
cwde
mov
sbb
gs
movs
aas
lea
adc
fs
outs
in
inc
outs
in
inc
outs
in
push
outs
in
jmp
(bad)
and
push
outs
in
jmp
loop
jg
xchg
out
mov
dec
outs
sub
ret
pusha
dec
outs
in
(bad)
(bad)
inc
outs
test
inc
xor
outs
daa
faddp
adc
(bad)
sbb
jle
inc
pop
outs
in
std
dec
cdq
mov
mov
add
adc
mov
aaa
loop
cdq
inc
outs
psubusw
(bad)
in
jbe
outs
in
out
data16
sub
(bad)
pop
ins
and
jmp
jle
or
in
push
outs
add
cdq
bound
bound
mov
jbe
dec
in
inc
dec
adc
xchg
test
pop
jbe
scas
scas
imul
stc
outs
lds
test
add
dec
and
outs
out
sti
iret
push
in
mov
arpl
outs
sub
cli
out
(bad)
pop
mul
outs
in
inc
cld
(bad)
data16
jmp
jmp
xchg
sub
xor
push
push
mov
data16
jle
mov
mov
daa
fiadd
test
loop
cmc
outs
mov
into
cmp
dec
in
pop
push
push
rol
rcl
mov
outs
ret
lds
(bad)
loop
cmc
outs
shr
jmp
jmp
push
out
imul
cmp
mov
pop
into
stos
xchg
dec
cmp
dec
in
push
outs
clc
enter
push
call
jbe
outs
in
pop
outs
cwde
inc
outs
movs
imul
(bad)
aas
enter
sub
dec
push
outs
daa
fild
inc
adc
pushw
cwde
shl
push
arpl
in
push
adc
pop
test
bound
stos
xchg
dec
or
inc
out
jmp
sbb
movs
stos
inc
arpl
xchg
lods
and
pop
mov
cmp
pop
outs
in
jmp
pop
mov
inc
push
ins
sbb
outs
in
repz
ret
pop
mov
inc
outs
in
mov
inc
mov
add
adc
inc
dec
std
jp
cmp
jo
test
xchg
cmp
inc
jmp
pop
mov
adc
outs
inc
arpl
xchg
sub
xor
dec
push
outs
mov
outs
in
inc
mov
data16
fld
lods
mov
jae
ins
(bad)
gs
mov
lods
daa
xor
cs
imul
fst
pop
call
inc
arpl
pop
ficom
jle
data16
sub
mov
xchg
cmp
push
loop
cmc
outs
xor
inc
mov
loop
test
push
outs
dec
mov
in
(bad)
jle
data16
inc
xor
outs
clc
push
mov
cli
dec
(bad)
jle
data16
cmc
outs
dec
ret
lods
jg
outs
dec
mov
in
outs
xchg
sbb
mov
xor
outs
mov
in
lahf
jle
popfw
inc
sbb
push
outs
dec
mov
iret
dec
in
data16
cmc
outs
pop
ror
cdq
mov
outs
movs
into
sub
inc
outs
in
sub
inc
imul
mov
fs
bound
gs
outs
in
inc
out
loop
inc
outs
in
inc
outs
in
inc
outs
in
inc
outs
in
add
out
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
outs
in
add
out
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
outs
in
add
out
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
outs
in
add
out
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
outs
in
add
out
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
outs
in
add
out
add
inc
mov
sbb
sbb
xor
mov
jle
cdq
cmc
push
mov
test
std
mov
(bad)
lods
fnstenv
dec
and
ins
movs
and
mov
add
inc
mov
(bad)
test
loop
add
sub
add
inc
mov
add
inc
mov
inc
ins
or
inc
and
add
inc
mov
add
dec
outs
sub
add
sbb
cdq
cmc
push
mov
test
std
mov
jle
cdq
cmc
push
mov
add
mov
fs
out
add
inc
outs
in
add
out
add
inc
mov
sbb
jmp
inc
or
sub
stos
dec
ins
and
inc
or
sub
lods
or
xchg
pop
sub
fs
out
add
inc
mov
mov
mov
dec
xchg
mov
xor
movs
and
mov
add
inc
mov
ficomp
mov
imul
add
inc
mov
add
sbb
add
lea
jmp
sub
stos
dec
ins
and
inc
or
sub
jmp
pop
mov
fs
out
add
inc
outs
in
add
out
add
inc
mov
sbb
in
imul
mov
sub
mov
call
mov
mov
add
dec
out
push
cwde
cmps
xchg
sub
dec
test
inc
retf
loopne
movs
and
mov
es
sub
sub
sub
imul
in
add
inc
mov
adc
push
sbb
xchg
sub
mov
sub
mov
iret
and
inc
mov
add
inc
outs
in
add
out
add
inc
mov
sbb
in
imul
mov
sub
mov
(bad)
in
lahf
int
sub
or
fldcw
daa
adc
inc
dec
or
movs
jmp
gs
enter
sti
test
and
mov
pusha
add
inc
and
mov
mov
mov
or
out
push
data16
sub
mov
sub
mov
iret
and
inc
mov
add
inc
outs
in
add
out
add
inc
mov
sbb
in
imul
mov
sub
mov
iret
add
pop
adc
cs
fs
out
sbb
fwait
pop
adc
loopne
les
mov
push
and
or
dec
test
ret
jecxz
sti
repnz
add
pop
les
mov
outs
out
xor
mov
out
js
enter
mov
les
push
sub
mov
iret
and
inc
mov
add
inc
outs
in
add
out
add
inc
mov
sbb
in
imul
mov
sub
mov
sub
push
(bad)
in
into
pop
out
or
(bad)
daa
add
les
push
sub
mov
dec
mov
or
sub
or
loope
pop
les
push
in
mov
and
mov
call
and
push
sub
mov
sub
mov
iret
and
inc
mov
add
inc
outs
in
add
out
add
inc
mov
sbb
in
imul
mov
sub
mov
sub
mov
and
xchg
add
pop
dec
xchg
cmp
sub
jmp
sub
test
lods
leave
mov
or
push
lea
or
sub
movs
jmp
(bad)
rcr
add
inc
into
inc
in
test
mov
mov
les
push
sub
mov
iret
and
inc
mov
add
inc
outs
in
add
out
add
inc
mov
sbb
in
test
sub
mov
sub
mov
sub
mov
psubsw
movs
add
xor
inc
into
ins
shr
js
sub
sub
add
sub
and
lea
or
sub
add
sbb
shl
movs
and
leave
aam
and
or
sub
mov
sub
mov
scas
ret
mov
mov
mov
add
inc
outs
in
add
out
add
inc
mov
sbb
(bad)
xlat
call
daa
les
push
sub
mov
sub
mov
inc
test
mov
test
inc
jl
in
or
punpckhdq
cmp
mov
imul
sub
movs
imul
cmp
sub
or
push
test
mov
les
mov
les
push
sub
mov
scas
pusha
xor
and
mov
add
inc
outs
in
add
out
add
inc
mov
adc
jns
loop
jb
dec
dec
and
movs
jmp
sub
mov
sub
mov
imul
mov
retf
addr16
mov
push
mov
cmp
mov
imul
sub
movs
inc
dec
aad
lea
or
retf
int3
sub
mov
sub
mov
sub
mov
out
out
ins
dec
dec
mov
and
mov
add
inc
outs
in
add
out
add
inc
mov
add
dec
into
sub
and
std
or
dec
ret
jmp
and
mov
sub
mov
or
and
leave
(bad)
lods
and
xchg
cdq
aas
retf
push
sub
test
lods
sub
int3
ins
(bad)
in
lea
or
or
pop
sbb
out
adc
add
sub
push
xor
sbb
pop
les
push
sub
mov
pop
addr16
pusha
loopne
cwde
imul
add
inc
mov
add
inc
outs
in
add
out
add
inc
mov
add
inc
mov
sbb
into
dec
ror
or
add
test
or
sub
test
mov
loope
out
or
dec
adc
stos
push
xor
push
aaa
sar
xor
sub
test
(bad)
shl
into
test
punpckhdq
jo
pop
sub
pusha
adc
jbe
cs
sub
mov
sub
mov
(bad)
mov
sbb
and
mov
add
inc
mov
add
inc
outs
in
add
out
add
inc
mov
add
inc
mov
add
fucomi
push
pop
scas
retf
mov
jmp
sub
mov
sub
mov
mov
or
pusha
jecxz
mov
cmp
dec
psubsw
(bad)
scas
in
mov
sub
and
mov
outs
dec
cmps
mov
inc
lahf
test
mov
loope
pop
les
push
sub
enter
stos
and
gs
xchg
pusha
dec
cmps
and
mov
add
inc
mov
add
inc
outs
in
add
out
add
inc
mov
add
inc
mov
add
inc
mov
daa
xchg
pop
mov
sub
movs
jmp
lods
mov
and
xlat
outs
dec
push
or
test
jmp
add
test
ins
add
add
test
shld
push
or
das
or
or
and
test
jecxz
retf
loope
pop
les
push
test
daa
clc
fnsave
inc
add
out
add
inc
mov
add
inc
mov
add
inc
outs
in
add
out
add
inc
mov
add
inc
mov
add
inc
outs
ins
jecxz
sub
es
inc
stos
stc
sub
es
or
mov
add
imul
out
int
xchg
xor
call
xor
dec
mov
loope
add
mov
and
inc
in
retf
aaa
xchg
test
mov
jecxz
push
mov
(bad)
mov
outs
add
mov
dec
shl
cmps
and
mov
add
inc
mov
add
inc
outs
in
add
out
add
inc
mov
add
inc
mov
xchg
push
bound
and
mov
xor
add
or
dec
dec
in
and
jmp
dec
sub
dec
ret
das
push
jp
jmp
add
loopne
(bad)
or
mov
mov
mov
pusha
push
add
outs
dec
add
mov
test
sub
add
int3
push
scas
sub
enter
popf
adc
sub
fs
out
add
inc
mov
add
inc
outs
in
add
out
add
inc
mov
add
inc
mov
xor
jmp
jge
iret
and
mov
inc
cmp
inc
imul
imul
test
test
loope
inc
addr16
std
jb
inc
dec
xchg
inc
ins
dec
xchg
ds
add
mov
or
or
mov
nop
push
add
ins
pop
loop
aad
cmps
and
aam
pusha
or
imul
xchg
xchg
xchg
pop
out
and
fs
das
jne
mov
mov
mov
arpl
and
add
inc
mov
add
inc
outs
in
add
out
add
inc
mov
add
inc
scas
iret
popa
or
rcr
add
stos
or
das
push
in
and
js
sub
ins
movs
pusha
add
or
and
dec
sub
jp
inc
xor
mov
dec
test
lods
enter
in
and
out
bswap
retf
or
cmp
test
sub
and
enter
mov
retf
dec
rcr
fs
push
pop
dec
inc
sub
or
lds
mov
mov
add
inc
mov
add
inc
outs
in
add
out
add
inc
mov
or
sahf
sub
ins
mov
test
mov
loope
daa
and
test
test
stos
in
dec
and
aaa
jmp
ss
dec
add
loopne
pop
aam
inc
push
loope
das
mov
xchg
pop
popa
movs
pop
out
test
jmp
dec
pop
inc
bound
inc
ins
add
imul
ret
and
arpl
stos
loopne
loope
xor
pusha
pop
add
movs
jmp
sub
mov
dec
imul
xchg
sti
pusha
mov
fs
out
add
inc
outs
in
add
out
add
inc
mov
add
pop
scas
push
mov
les
push
sub
mov
punpcklwd
inc
or
sub
(bad)
daa
enter
outs
test
inc
popf
push
sub
ins
movs
and
mov
add
inc
mov
mov
retf
ins
movs
and
mov
add
dec
push
jmp
ins
loop
push
fs
or
test
pushf
mov
push
sub
test
jmp
sub
mov
inc
lds
jle
ins
movs
and
mov
add
inc
outs
in
add
out
add
inc
mov
add
inc
mov
jge
dec
cmps
jmp
sub
mov
sub
test
dec
xor
mov
dec
aaa
push
out
add
add
sub
add
inc
mov
add
inc
mov
mov
retf
ins
movs
and
mov
add
inc
mov
and
retf
shl
stos
movs
jmp
sub
mov
sub
mov
test
inc
cmps
add
inc
mov
add
inc
outs
in
add
out
add
inc
mov
add
inc
mov
mov
fdiv
mov
das
push
sub
mov
sub
mov
leave
pop
loope
iret
pop
xor
ret
out
sub
add
inc
mov
dec
out
xchg
sub
dec
xor
ins
add
not
out
add
inc
scas
and
in
scas
push
adc
pop
aad
sub
mov
sub
mov
sub
or
mov
out
add
inc
mov
add
inc
outs
in
add
out
add
inc
mov
add
inc
mov
xchg
and
jecxz
mov
les
push
sub
mov
lea
and
xlat
in
iret
lock
adc
and
mov
(bad)
cmps
lea
test
lea
or
out
add
dec
scas
or
inc
mov
movs
dec
xchg
xchg
outs
inc
xchg
in
mov
test
mov
loope
pop
les
push
sub
addr16
xchg
retf
ret
fs
out
add
inc
mov
add
inc
outs
in
add
out
add
inc
mov
add
inc
mov
es
inc
or
fmul
sub
inc
mov
and
mov
popa
and
sub
cmc
sub
ins
movs
and
leave
or
push
fild
mov
bound
push
gs
mov
bound
cs
dec
push
dec
or
daa
xchg
mov
retf
add
mov
and
mov
gs
jne
add
fs
out
add
inc
mov
add
inc
outs
in
add
out
add
inc
mov
add
inc
mov
es
ins
movs
scas
cdq
sub
icebp
jo
pop
repz
je
leave
push
dec
inc
rcl
jno
push
mov
retf
lock
sti
repz
push
cwde
add
adc
or
cmp
and
ins
loope
inc
push
gs
mov
bound
push
gs
mov
bound
jmp
dec
out
retf
or
ja
jae
aam
ins
repz
lock
popf
xor
xor
leave
push
dec
inc
shl
pop
adc
cwde
test
mov
int
and
mov
add
inc
mov
add
inc
outs
in
add
out
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
es
push
push
gs
mov
gs
into
xchg
call
mov
mov
bound
push
gs
mov
bound
push
gs
mov
bound
lea
fs
pushf
test
mov
outs
xor
add
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
outs
in
add
out
add
inc
mov
add
inc
mov
add
dec
outs
retf
imul
sub
mov
or
leave
fmul
push
and
sub
and
add
leave
add
sub
gs
ins
loope
mov
mov
bound
lea
inc
sbb
inc
not
push
bound
add
pop
push
mov
or
sub
test
add
inc
mov
add
inc
mov
add
inc
outs
in
add
out
add
inc
mov
add
inc
mov
es
and
dec
mov
imul
jecxz
inc
dec
and
add
retf
sahf
mov
mov
iret
dec
adc
leave
mov
mov
(bad)
out
(bad)
out
add
pop
movs
pop
mov
bound
push
(bad)
ficom
test
lea
sub
inc
cmps
movs
dec
add
and
add
call
jmp
push
mov
inc
pusha
stos
and
mov
add
inc
mov
add
inc
outs
in
add
out
add
inc
mov
add
inc
mov
(bad)
pop
xchg
and
loope
pop
les
push
sub
mov
lods
dec
xor
push
or
or
fisubr
and
push
xor
ins
add
bound
push
popa
mov
lods
outs
jae
add
(bad)
sbb
mov
mov
inc
ins
shl
or
mov
sub
mov
rol
test
cld
call
add
out
add
inc
mov
add
inc
outs
in
add
out
add
inc
mov
add
inc
mov
movs
and
or
and
les
push
sub
mov
into
mov
jecxz
rcr
mov
and
ins
mov
inc
arpl
mov
ins
loope
dec
mov
inc
(bad)
out
and
ins
mov
movs
lds
jmp
jno
popa
jmp
inc
pop
les
push
sub
mov
sub
add
ret
xor
add
out
add
inc
mov
add
inc
outs
in
add
out
add
inc
mov
add
inc
mov
jle
pusha
scas
jmp
sub
mov
sub
mov
(bad)
loope
cmps
mov
pop
push
mov
scas
das
add
out
add
inc
mov
es
and
loope
out
ins
int
jmp
add
out
add
inc
mov
add
pop
sub
or
dec
movs
jmp
sub
mov
sub
sub
sub
sub
add
inc
mov
add
inc
outs
in
add
out
add
inc
mov
add
push
cs
ja
daa
jmp
punpckhdq
les
push
sub
enter
loopne
icebp
sub
enter
push
call
add
inc
mov
inc
(bad)
retf
repnz
fild
sar
cmp
fs
out
add
inc
out
dec
mov
in
movs
jmp
push
sar
or
or
mov
sub
test
jmp
inc
cmp
xor
ins
movs
and
mov
add
inc
outs
in
add
out
add
inc
mov
add
mov
add
jmp
sub
test
jmp
mov
dec
sub
push
fisttp
adc
add
dec
movs
and
pop
cmc
sub
ins
movs
and
mov
add
push
scas
or
inc
test
movs
and
mov
add
dec
into
enter
hlt
mov
and
ret
punpckhdq
pop
clc
fisttp
sub
arpl
les
push
sub
mov
lds
mov
inc
mov
add
inc
outs
in
add
out
add
inc
mov
add
push
dec
xchg
shr
pop
fs
push
adc
add
sub
das
sbb
xlat
xor
ins
add
bound
jnp
test
dec
dec
add
jmp
mov
add
dec
mov
sub
ins
movs
and
mov
add
dec
push
test
dec
loope
(bad)
hlt
out
ins
movs
sti
ins
scas
push
dec
loopne
jge
loope
ud2
imul
and
(bad)
ret
cs
sub
test
call
fs
xor
add
inc
mov
add
inc
outs
in
add
out
add
inc
mov
add
inc
mov
or
fimul
or
arpl
and
mov
xchg
mov
add
out
adc
add
push
lea
retf
movs
or
ds
fs
adc
dec
bound
xor
bound
mov
xchg
sub
int3
jmp
movs
jno
sub
adc
daa
daa
test
jmp
imul
mov
mov
ret
jg
lds
mov
mov
add
out
add
inc
mov
add
inc
outs
in
add
out
add
inc
mov
add
inc
mov
push
aad
bound
jp
ret
xor
and
xor
mov
and
cmp
add
dec
les
scas
ret
lods
inc
dec
inc
scas
ror
dec
imul
add
pushf
mov
cmps
fmul
mov
mov
jno
cmc
adc
add
out
out
dec
mov
and
inc
les
ret
jp
movs
mov
push
sub
mov
or
mov
imul
int3
and
add
inc
mov
add
inc
outs
in
add
out
add
inc
mov
add
inc
mov
es
imul
push
ins
add
push
ins
jmp
inc
imul
and
leave
sub
in
out
pop
(bad)
push
adc
inc
add
mov
out
ret
mov
mov
inc
xor
mov
shl
add
in
and
out
or
mov
loope
xor
inc
mov
or
mov
fs
out
add
inc
mov
add
inc
outs
in
add
out
add
inc
mov
add
inc
mov
add
inc
mov
xchg
xor
jbe
inc
arpl
les
mov
les
dec
or
int3
dec
int
loop
iret
mov
shl
and
add
popa
ret
xchg
stos
mov
movs
mov
sub
and
fs
ror
sub
mov
in
aad
jb
jg
and
fs
out
add
inc
mov
add
inc
mov
add
inc
outs
in
add
out
add
inc
mov
add
inc
mov
add
dec
out
stos
or
mov
test
jae
arpl
add
and
test
mov
add
daa
retf
mov
dec
(bad)
adc
mov
dec
mov
add
scas
imul
and
mov
sbb
shr
add
fs
icebp
push
and
arpl
xchg
adc
mov
les
mov
aaa
imul
jae
add
and
mov
add
inc
mov
add
inc
outs
in
add
out
add
inc
mov
add
inc
mov
cmps
push
retf
(bad)
psubusw
call
jmp
sub
mov
xor
and
xor
rcl
inc
xchg
or
or
sub
adc
add
stos
in
jbe
sub
adc
push
or
add
mov
ret
test
xor
das
push
sub
mov
sub
mov
mov
popf
inc
lahf
mov
mov
sub
add
inc
mov
add
inc
outs
in
add
out
add
inc
mov
add
inc
outs
ret
out
dec
xchg
fcos
retf
mov
and
and
test
mov
loope
pop
les
mov
je
dec
dec
and
mov
push
sub
les
(bad)
xchg
mov
pop
call
sub
enter
(bad)
retf
inc
ins
and
push
pushf
stos
inc
push
mov
sub
mov
sub
mov
outs
and
call
ins
movs
dec
shl
movs
and
mov
add
inc
outs
in
add
out
add
inc
mov
es
ins
mov
sub
rep
fs
sbb
sub
sub
test
mov
loope
pop
les
mov
pusha
mov
add
leave
cmps
or
loope
out
sub
aas
mov
out
ja
enter
sub
fs
or
out
(bad)
jmp
or
mov
sub
mov
sub
enter
ins
cs
mov
mov
add
inc
outs
in
add
out
add
inc
mov
sbb
retf
mov
or
and
test
mov
loope
pop
les
push
sub
mov
lods
push
test
sub
enter
punpckhdq
rol
adc
out
retf
stos
arpl
mov
les
das
jo
movs
out
sub
mov
int
lods
mov
test
mov
loope
pop
les
push
sub
mov
iret
arpl
mul
cwde
mov
fs
out
add
inc
outs
in
add
out
add
inc
mov
sbb
in
imul
mov
sub
mov
sub
mov
add
cld
aas
add
mov
in
mov
test
mov
add
out
fs
imul
sub
cmps
or
mov
les
retf
and
mov
dec
add
les
push
sub
mov
sub
mov
iret
inc
hlt
or
mov
add
inc
outs
in
add
out
add
inc
mov
sbb
in
imul
mov
sub
mov
sub
test
or
mov
jge
inc
ret
ins
movs
or
or
test
or
fiadd
adc
jne
ret
fs
inc
out
or
inc
push
ret
or
mov
int3
out
push
loopne
stos
and
call
mov
mov
loope
pop
les
push
sub
mov
iret
and
inc
mov
add
inc
outs
in
add
out
add
inc
mov
sbb
in
imul
mov
sub
mov
sub
dec
fs
(bad)
jle
xchg
add
out
push
ins
add
pop
lods
arpl
sub
scas
enter
jo
add
xchg
loope
das
mov
(bad)
fisttp
popa
leave
pop
hlt
lea
dec
inc
add
cmps
scas
leave
into
push
out
mov
inc
mov
xor
push
sub
mov
sub
mov
iret
and
inc
mov
add
inc
outs
in
add
out
add
inc
mov
sbb
in
imul
mov
sub
mov
psraw
addr16
and
xor
add
dec
into
out
ins
das
push
push
ins
aas
add
mov
add
inc
mov
add
dec
push
aam
into
inc
pop
pop
and
ins
mov
ins
pop
les
and
ins
movs
and
mov
jecxz
xlat
jns
add
mov
les
push
sub
mov
iret
and
inc
mov
add
inc
outs
in
add
out
add
inc
mov
sbb
in
imul
mov
sub
mov
dec
mov
mov
fs
out
add
push
dec
mov
lds
sbb
xor
ja
jmp
sub
fs
dec
add
daa
retf
out
sub
fs
int
inc
ss
mov
icebp
push
adc
out
add
inc
mov
out
mov
mov
les
push
sub
mov
iret
and
inc
mov
add
inc
outs
in
add
out
add
inc
mov
sbb
in
imul
mov
sub
mov
repz
adc
add
out
adc
in
jns
ds
int
adc
dec
inc
out
je
mov
inc
pop
jae
rol
jno
mov
jmp
mov
in
dec
das
mov
(bad)
ja
aas
cmp
xchg
xor
ins
movs
and
mov
push
fwait
stos
daa
sub
xchg
in
retf
int
add
test
jmp
sub
mov
iret
and
inc
mov
add
inc
outs
in
add
out
add
inc
mov
sbb
es
push
daa
dec
test
bound
xchg
inc
xor
rol
dec
movs
arpl
jg
and
mov
or
out
adc
inc
mov
sbb
pop
pop
mov
cwde
xchg
cwde
cmp
xchg
xchg
fistp
sbb
fdivr
pop
fstp
mov
fcomp
pop
rcr
mov
jns
rol
jmp
mov
or
mov
inc
bound
bound
xchg
inc
xor
rol
dec
test
bound
aad
iret
inc
mov
mov
mov
add
inc
outs
in
add
out
add
inc
mov
es
push
inc
adc
mov
mov
sbb
mov
mov
std
inc
mov
ds
add
inc
mov
inc
mov
pop
sub
je
sbb
xchg
jne
fnstsw
xchg
xchg
mov
sbb
jo
ss
cmp
adc
cmp
mov
fcom
shl
jecxz
push
jmp
and
mov
add
jne
xor
lahf
ss
mov
xchg
cmp
xor
xchg
mov
inc
mov
add
inc
outs
in
add
out
add
inc
mov
es
gs
and
stos
adc
sub
mov
sub
mov
jmp
sub
add
inc
mov
push
and
mov
push
xchg
(bad)
es
sub
pop
jp
push
dec
adc
mov
jl
lahf
xor
xchg
jecxz
clc
addr16
cmps
out
push
pop
jno
push
add
mov
dec
and
mov
inc
mov
add
inc
mov
sub
scas
push
mov
sub
mov
or
inc
mov
fs
out
add
inc
outs
in
add
out
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
out
mov
rcl
mov
xor
sbb
adc
cli
adc
repz
lea
adc
das
push
rcl
fimul
jge
push
dec
ins
stos
adc
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
outs
in
add
out
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
inc
xlat
pop
pushf
les
or
jg
fs
jnp
imul
iret
xor
or
aaa
or
mov
rcr
shl
add
std
push
scas
lods
mov
test
add
mov
fs
out
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
outs
in
add
out
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
scas
add
jge
add
rol
(bad)
or
dec
ja
push
mov
popa
pop
inc
or
push
jae
xchg
add
fwait
loope
out
push
out
inc
push
ins
inc
add
sub
push
repnz
scas
lock
xchg
jne
fstp
pop
add
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
outs
in
add
out
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
out
and
leave
clc
push
xchg
mov
in
and
gs
adc
add
pusha
xchg
movs
popf
jl
xchg
test
sub
popa
inc
test
inc
pop
fs
loop
hlt
sbb
jb
fcomp
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
outs
in
add
out
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
scas
inc
mov
xchg
fcomp
daa
dec
pop
data16
retf
out
pusha
mov
imul
and
add
pop
(bad)
retf
inc
retf
jmp
and
rol
outs
mov
inc
dec
adc
scas
adc
mov
ja
out
add
out
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
outs
in
add
out
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
dec
mov
and
adc
enter
dec
ds
lods
push
cli
das
sahf
mul
pop
shl
shr
pop
ret
mov
test
jbe
daa
jne
push
les
aad
loopne
es
nop
inc
sub
retf
dec
out
shr
adc
sub
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
outs
in
add
out
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
or
cmps
xchg
push
add
scas
in
mov
(bad)
xchg
stc
fiadd
xchg
add
and
ds
and
data16
inc
sbb
(bad)
and
repz
neg
dec
(bad)
lea
dec
cmps
dec
and
in
xchg
xor
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
outs
in
add
out
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
es
loopne
adc
push
or
inc
ret
inc
imul
addr16
fsub
push
cmp
and
pusha
cld
test
xlat
adc
or
sub
leave
push
xchg
loopne
loopne
xchg
mov
stos
xchg
mov
movs
and
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
outs
in
add
out
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
xchg
cmps
sbb
iret
xor
bound
arpl
and
loope
pusha
jno
mov
and
and
ja
push
ret
dec
sub
mov
cmp
and
les
aas
pusha
js
add
sub
cld
push
lods
xor
cmp
dec
retf
mov
fs
out
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
outs
in
add
out
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
xchg
rcr
pop
das
jno
ror
inc
jmp
cmps
mov
push
(bad)
jmp
jmp
sub
es
scas
cmp
jmp
bound
ret
leave
and
mul
push
lods
in
(bad)
lahf
mov
std
inc
inc
lods
and
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
outs
in
add
out
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
push
fldenv
ret
retf
jo
add
inc
mov
mov
ret
fs
out
pop
ins
in
mov
outs
dec
add
enter
movs
and
mov
mov
jecxz
bound
adc
mov
std
shl
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
outs
in
add
out
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
es
ins
in
shld
sub
in
push
fwait
and
and
mov
add
inc
mov
ins
mul
mov
xor
ja
jl
retf
mov
add
inc
mov
(bad)
test
push
mov
cmps
and
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
outs
in
add
out
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
or
(bad)
std
lahf
leave
inc
sbb
and
mov
es
and
push
shr
mov
out
aad
push
call
add
push
and
mov
inc
cdq
ret
xor
mov
and
ins
movs
and
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
outs
in
add
out
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
or
xor
(bad)
mov
(bad)
push
cmp
sbb
xor
js
test
mov
push
arpl
mov
mov
mov
retf
cmp
or
ds
cmp
push
movs
dec
popf
fisubr
adc
and
ins
movs
and
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
outs
in
add
out
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
out
inc
add
mov
cmp
ins
cmp
sub
in
fbstp
(bad)
mov
pop
jne
xlat
cmp
add
sbb
fdiv
ja
and
pop
test
mov
xor
(bad)
rcr
mov
add
std
adc
cmp
out
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
outs
in
add
out
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
(bad)
push
or
(bad)
repnz
aam
(bad)
repz
int3
and
pop
xor
push
into
push
loop
icebp
and
mov
fisub
jns
xchg
cwde
xor
jle
test
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
outs
in
add
out
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
out
arpl
push
and
mov
or
int
mov
mov
and
or
out
inc
imul
loope
lods
inc
and
xchg
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
outs
in
add
out
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
out
inc
int3
iret
adc
push
mov
dec
push
and
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
outs
in
add
out
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
es
adc
jo
mov
test
fistp
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
outs
in
add
out
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
out
aas
xchg
and
inc
adc
or
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
outs
in
add
out
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
xchg
sbb
lahf
add
xchg
xor
ins
movs
and
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
outs
in
add
out
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
or
daa
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
outs
in
add
out
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
mov
add
inc
outs
in
or
sub
inc
outs
in
inc
outs
and
arpl
inc
push
outs
gs
inc
outs
lds
ins
in
dec
outs
in
inc
outs
in
inc
outs
in
inc
outs
in
inc
outs
in
inc
outs
in
push
jbe
xchg
add
data16
in
inc
outs
inc
jno
into
repnz
cmp
mov
inc
jno
cs
outs
lds
cs
push
pop
xchg
and
(bad)
pushf
call
jnp
cmp
jnp
fdiv
mov
fdivr
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
fdiv
jnp
(bad)
jnp
fdiv
jnp
fdiv
pop
clc
fdiv
jnp
(bad)
jnp
(bad)
pop
fdivr
lock
fdivr
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
lock
cmp
rcr
inc
call
jle
mov
push
jbe
xchg
add
data16
in
inc
outs
inc
jno
cs
cmc
cmp
xchg
inc
jno
into
repnz
jns
mov
inc
push
inc
scas
repnz
jbe
pop
jbe
inc
outs
add
data16
in
inc
outs
inc
jno
out
shl
cmp
cmps
add
jle
into
repnz
inc
inc
outs
lds
cs
push
addr16
inc
(bad)
cld
call
jnp
cmp
jnp
fdiv
mov
fdivr
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
lock
fdivr
jnp
cld
lock
fdiv
fwait
clc
cld
lock
fdiv
jnp
cmp
fdivr
sar
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
lock
sbb
sar
inc
mov
outs
in
bound
data16
in
inc
dec
lds
mov
mov
inc
outs
and
xchg
cmp
cmps
inc
outs
and
inc
xchg
pop
in
bound
push
inc
scas
repnz
jbe
inc
inc
outs
in
inc
dec
std
data16
in
inc
outs
inc
jno
into
repnz
in
inc
outs
lds
dec
std
pop
jbe
es
outs
inc
jle
into
popf
call
dec
and
fsubr
jl
mov
lock
(bad)
jnp
cld
lock
fcomp
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
lock
clc
fdiv
jnp
fdiv
pop
mov
pop
icebp
pop
cwde
cld
lock
sbb
adc
cld
sar
(bad)
pop
fdivr
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
lock
cmp
icebp
jp
call
jle
outs
std
mov
inc
outs
add
mov
inc
outs
add
data16
in
inc
outs
add
push
jbe
xchg
in
inc
outs
mov
data16
in
inc
outs
lds
dec
std
data16
inc
inc
outs
in
inc
dec
std
mov
inc
outs
gs
push
frstor
jbe
push
inc
outs
inc
jle
into
popf
call
dec
and
fmul
pushf
fstp
jnp
cld
sar
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
lock
std
lock
cld
adc
js
sar
mov
xchg
js
(bad)
pop
fcomp
lock
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
lock
fdivr
icebp
jp
mov
outs
lds
mov
data16
in
inc
outs
in
inc
mov
data16
in
inc
outs
add
data16
in
inc
outs
in
inc
outs
std
push
jbe
xchg
add
inc
jbe
data16
inc
outs
in
inc
dec
std
data16
inc
inc
outs
movs
jle
push
std
data16
in
inc
outs
inc
jle
out
frstor
push
in
inc
outs
inc
pop
inc
scas
popf
call
outs
add
sbb
pushf
fistp
fcomp
lock
fdiv
pop
fdivr
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
lock
fdiv
pop
clc
(bad)
pop
cli
cmp
add
cmp
lock
cld
lock
fdivr
lock
fdivr
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
lock
fdivr
icebp
pop
loope
jbe
inc
inc
outs
lds
dec
std
inc
jp
in
inc
outs
lds
mov
data16
in
inc
outs
add
pop
jbe
inc
outs
in
inc
dec
std
data16
in
inc
outs
and
data16
jbe
es
outs
in
inc
frstor
push
in
bound
jle
push
std
data16
bound
jle
out
fld
jbe
push
inc
outs
test
bound
test
sbb
pop
fistp
fcomp
sar
fdiv
pop
fdivr
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
lock
fdiv
pop
sbb
sar
fcomi
inc
jecxz
outs
movs
sahf
sbb
lock
sbb
rcr
fdiv
pop
fdivr
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
lock
fdivr
icebp
sbb
bound
jno
outs
std
inc
jp
in
inc
outs
add
xchg
jns
mov
jno
mov
xchg
jns
xchg
lds
cs
data16
in
inc
outs
add
retw
data16
in
inc
outs
test
push
std
data16
push
inc
outs
test
push
std
data16
inc
inc
outs
lds
dec
frstor
jbe
push
inc
outs
movs
pop
bound
popf
data16
(bad)
into
and
fstp
fcomp
sar
fdiv
pop
fdivr
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
sar
fdiv
pop
clc
sahf
adc
fcmovnbe
inc
ret
jp
gs
mov
rcr
fcomp
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
lock
fdivr
icebp
cli
mov
dec
add
push
jbe
xchg
lds
outs
std
data16
jns
mov
jle
dec
std
data16
in
inc
outs
lds
outs
std
data16
in
inc
outs
add
inc
jbe
data16
in
inc
outs
gs
inc
push
std
data16
es
outs
test
push
std
data16
inc
outs
movs
jle
dec
std
data16
push
bound
pop
(bad)
out
popf
data16
(bad)
outs
in
pop
test
sti
pop
rcr
clc
fdiv
pop
fdivr
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
sar
fdiv
pop
clc
(bad)
lock
mov
call
pop
pushf
sar
cld
lock
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
lock
fdivr
icebp
fimul
ja
inc
inc
dec
add
data16
in
inc
outs
movs
jle
dec
std
xchg
jns
cmps
inc
outs
in
bound
inc
jp
lds
outs
lds
cs
data16
inc
outs
add
bound
inc
mov
outs
inc
ds
push
std
data16
es
outs
lds
cs
data16
bound
jle
mov
data16
push
inc
outs
test
out
mov
push
push
dec
add
pop
enter
adc
cld
sar
fdiv
pop
fdivr
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
sar
fdiv
jnp
fdivp
sbb
fwait
(bad)
(bad)
mov
rcr
cld
lock
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
lock
fdivr
icebp
mov
es
dec
lds
scas
bnd
in
inc
outs
movs
jle
dec
std
pop
jbe
inc
outs
in
inc
scas
repnz
jp
in
inc
outs
lds
cs
data16
in
inc
outs
add
retw
data16
jbe
mov
jle
outs
std
pop
jbe
inc
inc
outs
lds
outs
std
data16
in
inc
outs
lds
scas
bnd
in
inc
outs
test
push
mov
mov
mov
pop
adc
(bad)
jnp
fdiv
pop
fdivr
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
sar
fdiv
jnp
fcomip
sbb
rol
and
hlt
clc
pop
pushf
rcr
fdiv
jnp
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
lock
fdivr
icebp
mov
inc
bound
jle
into
repnz
in
inc
outs
movs
jle
frstor
jbe
xchg
add
mov
inc
outs
lds
cs
data16
in
inc
outs
in
bound
in
cli
jbe
out
outs
gs
push
std
data16
push
inc
dec
movs
jle
cs
data16
es
outs
lds
outs
std
data16
inc
bound
jle
push
mov
out
pop
fstp
jnp
fdiv
pop
fdivr
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
sar
(bad)
pop
fdivr
sar
cld
sar
cld
sar
cld
rcr
(bad)
jnp
cld
lock
fdivr
sar
fdiv
jnp
(bad)
sti
sbb
push
ret
loopne
in
daa
fidivr
clc
pop
mov
lock
cld
rcr
cld
sar
cld
rcr
(bad)
pop
fcomp
rcr
cld
lock
fdivr
rcr
(bad)
pop
fdivr
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
lock
fdivr
adc
inc
inc
outs
lds
into
repnz
jbe
inc
outs
movs
jle
dec
std
data16
in
inc
outs
lds
outs
std
pop
jbe
inc
inc
outs
lds
dec
std
data16
in
inc
outs
add
inc
jbe
data16
jbe
out
outs
gs
push
std
data16
es
outs
lds
dec
std
data16
in
inc
outs
movs
jle
dec
std
data16
in
inc
outs
movs
jle
push
mov
mov
(bad)
cld
jmp
sti
pushf
adc
fdiv
pop
fdivr
lock
clc
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
fdiv
pop
fdivr
lock
clc
fcom
jnp
cmp
pop
fcomp
lock
fcomp
lock
clc
cld
rcr
cld
rcr
(bad)
jnp
fcom
jnp
aas
mov
sti
fcom
and
inc
mov
pushf
adc
fcomp
sar
cld
lock
fcomp
rcr
cld
sar
cld
lock
clc
fdiv
jnp
cld
lock
fdivr
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
lock
cmp
adc
sbb
inc
outs
lds
scas
repnz
jbe
inc
inc
outs
lds
dec
std
data16
inc
inc
outs
lds
dec
std
data16
inc
inc
outs
lds
dec
std
data16
in
inc
outs
add
bound
data16
jbe
cmps
inc
outs
inc
jle
dec
std
data16
es
outs
lds
cs
data16
inc
inc
outs
lds
cs
data16
in
inc
outs
in
inc
push
mov
cmps
inc
iret
and
sti
pushf
adc
fdiv
jnp
cld
lock
fdivr
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
sar
cmp
pop
fdivr
cmp
pop
xchg
jnp
mov
rcr
fdiv
jnp
fcom
jnp
fdiv
jnp
fdiv
jnp
fist
lods
mov
mov
pop
cld
lock
adc
fdiv
jnp
fdiv
jnp
cld
sar
pushf
lock
mov
lock
(bad)
pop
clc
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
lock
cmp
adc
scas
cmp
es
dec
lds
mov
data16
in
inc
outs
movs
jle
dec
std
data16
in
inc
outs
lds
dec
std
data16
inc
outs
lds
cs
inc
sbb
inc
inc
outs
add
bound
data16
push
bound
pop
bound
std
data16
es
outs
in
inc
cs
data16
in
inc
outs
lds
cs
data16
in
inc
outs
lds
dec
frstor
mul
push
xchg
and
fstp
pop
fdivr
lock
fdivr
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
lock
fdivr
sar
fidiv
push
mov
fcom
clc
pop
cwde
sbb
mov
xor
pop
push
jp
fdiv
js
sar
fcmovnu
adc
mov
mov
pop
cld
adc
sbb
xchg
sbb
pop
icebp
pop
cwde
pop
xchg
js
aas
push
std
jno
cli
jbe
cld
mov
fcomp
sar
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
lock
sbb
icebp
sbb
inc
outs
movs
jle
scas
repnz
jbe
xchg
movs
jle
dec
std
inc
pop
jbe
inc
outs
lds
cs
data16
in
inc
outs
movs
jle
fld
jbe
inc
inc
outs
in
inc
mov
inc
jbe
data16
push
bound
pop
inc
push
std
data16
es
outs
lds
cs
data16
in
inc
dec
lds
dec
std
data16
in
inc
outs
lds
cs
xchg
and
fstp
pop
fdivr
lock
fdivr
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
fdiv
jnp
(bad)
mov
ficomp
adc
loopne
pop
add
in
mov
adc
pop
adc
adc
cdq
mov
nop
sub
push
popf
jne
cdq
popf
xchg
pop
mov
push
clc
jns
fdiv
lea
sub
xchg
cld
aam
mov
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
lock
cmp
icebp
sbb
inc
outs
movs
jle
scas
repnz
jbe
xchg
movs
jle
cs
mov
inc
outs
lds
dec
std
data16
in
inc
outs
lds
cs
data16
inc
dec
lds
mov
inc
jbe
data16
inc
inc
outs
lds
cs
data16
in
inc
outs
lds
dec
std
pop
jbe
inc
outs
add
data16
in
inc
outs
in
inc
frstor
ss
xchg
and
fistp
pop
fdivr
lock
fdivr
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
lock
(bad)
jnp
(bad)
fstp
xor
inc
outs
and
data16
inc
outs
inc
adc
mov
out
or
sbb
daa
dec
outs
and
dec
cli
push
shl
in
and
mov
jbe
xchg
add
pop
jbe
inc
pushf
mov
clc
(bad)
pop
fdivr
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
lock
cmp
adc
outs
cmp
bound
jle
mov
data16
in
inc
outs
movs
jle
dec
std
data16
in
inc
outs
lds
dec
std
data16
inc
outs
lds
dec
std
data16
in
inc
outs
add
inc
jbe
data16
es
outs
lds
push
std
data16
es
outs
movs
pop
inc
push
std
data16
in
inc
outs
in
bound
data16
in
inc
outs
lds
dec
std
data16
in
out
in
cmp
pushf
fistp
pop
fcomp
lock
cld
rcr
cld
rcr
cld
sar
cld
rcr
(bad)
pop
fcomp
rcr
fdiv
pop
fcomp
lock
fdivr
adc
fadd
inc
push
inc
out
std
data16
push
inc
outs
gs
out
std
data16
es
outs
test
outs
std
pop
jbe
es
outs
lds
cs
data16
push
inc
outs
test
dec
std
data16
in
inc
outs
in
inc
mov
inc
push
jbe
xchg
xlat
call
pop
fdivr
rcr
(bad)
pop
fdivr
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
lock
cmp
icebp
mov
data16
jle
outs
std
data16
in
inc
outs
movs
jle
dec
std
xchg
jns
mov
jle
cs
data16
inc
inc
outs
lds
dec
std
data16
in
inc
outs
add
data16
jbe
inc
inc
outs
in
inc
frstor
push
in
bound
pop
inc
push
std
data16
es
outs
movs
jle
outs
std
data16
inc
inc
outs
movs
jle
outs
std
inc
jp
in
out
inc
(bad)
fmul
pushf
fistp
jnp
fdiv
pop
fdivr
lock
fcomp
rcr
cld
rcr
cld
lock
fdivr
lock
fdivr
rcr
cld
rcr
(bad)
pop
fcomp
lock
fldenv
sub
data16
push
inc
outs
test
push
std
data16
push
inc
outs
lds
cs
data16
inc
inc
outs
test
push
std
data16
mov
jle
dec
std
data16
in
inc
outs
add
push
jbe
es
aas
fwait
pushf
nop
pop
clc
fdiv
jnp
fdiv
jnp
cld
lock
fdivr
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
fdiv
jnp
cmp
icebp
mov
cmps
bound
jle
mov
data16
in
inc
dec
inc
jno
into
repnz
cmc
jns
mov
jno
outs
std
pop
jbe
inc
dec
movs
jle
dec
std
pop
jbe
inc
outs
and
data16
jbe
es
outs
movs
jle
frstor
jbe
es
outs
lds
dec
std
data16
in
inc
outs
lds
outs
std
data16
in
inc
outs
in
inc
dec
std
data16
in
out
and
fstp
jnp
fdiv
fdivr
lock
cld
lock
cld
sar
cld
rcr
cmp
pop
sbb
lock
clc
cld
lock
sbb
adc
(bad)
jnp
pushf
push
stc
jge
stos
(bad)
jle
cs
data16
es
outs
movs
jle
cs
data16
es
outs
lds
push
std
data16
in
inc
outs
movs
jle
out
frstor
jbe
push
inc
outs
lds
dec
std
pop
jbe
inc
outs
add
mov
data16
mov
jnp
cld
xor
fdiv
jnp
(bad)
pop
fdivr
sar
(bad)
jnp
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
lock
cmp
icebp
pop
bndldx
bound
jle
scas
repnz
in
inc
outs
and
inc
xchg
jns
mov
jle
mov
data16
in
inc
outs
in
inc
dec
std
inc
sbb
inc
outs
in
inc
mov
inc
jbe
data16
push
bound
jle
dec
std
data16
inc
inc
dec
lds
dec
std
data16
lds
outs
in
inc
scas
repnz
sbb
es
outs
lds
cs
data16
push
es
gs
pop
cmp
pop
cmp
lock
clc
cld
lock
cld
rcr
(bad)
pop
fdivr
pop
pop
fdiv
mov
fcomp
jnp
mov
jnp
jp
bound
inc
dec
std
data16
inc
outs
movs
pop
bound
std
data16
in
inc
outs
lds
cs
data16
lds
dec
lds
out
std
data16
jbe
inc
inc
outs
lds
outs
std
data16
in
inc
outs
add
data16
in
jno
pop
adc
fistp
cmp
fwait
clc
fdiv
pop
clc
cld
lock
clc
cld
lock
clc
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
lock
cmp
adc
cmc
ja
xchg
add
data16
in
inc
outs
lds
outs
std
push
jbe
xchg
lds
dec
std
data16
in
inc
outs
movs
jle
dec
std
data16
in
inc
outs
in
inc
scas
repnz
inc
jbe
data16
es
outs
movs
jle
dec
std
data16
inc
inc
outs
lds
cs
data16
in
inc
outs
lds
into
repnz
jbe
es
outs
lds
cs
data16
in
es
inc
ds
cmp
mov
lock
fdiv
fistp
cmp
jnp
cld
rcr
cld
lock
cld
sar
cmp
jnp
cld
adc
fnstenv
nop
jnp
mov
jns
es
movs
jle
dec
std
data16
lds
outs
movs
jle
dec
std
data16
in
inc
outs
lds
dec
std
data16
inc
inc
outs
movs
pop
inc
out
frstor
jbe
push
inc
outs
test
outs
std
mov
inc
outs
add
mov
inc
cs
push
out
mov
cmp
sbb
fcom
jnp
(bad)
jnp
cld
rcr
cld
sar
cld
lock
fdivr
rcr
cld
rcr
fdiv
jnp
sbb
xor
aad
in
bound
jle
outs
std
push
jbe
mov
jno
into
repnz
jns
xchg
add
data16
jns
mov
jle
cs
data16
in
inc
outs
add
inc
inc
jbe
data16
bound
pop
inc
dec
frstor
jbe
es
outs
in
inc
dec
std
pop
jbe
inc
dec
lds
scas
bnd
in
inc
outs
in
inc
push
frstor
push
lds
(bad)
cs
pop
pop
retf
sbb
mov
sar
fdiv
mov
clc
cmp
jnp
fdiv
jnp
fdiv
jnp
sbb
cmp
fst
fwait
js
jo
jp
sub
sbb
push
inc
outs
lds
cs
data16
in
inc
outs
lds
outs
std
data16
es
outs
movs
jle
dec
std
data16
inc
inc
outs
add
data16
es
outs
lds
outs
std
xchg
jns
cmps
inc
outs
add
xchg
jns
push
inc
outs
test
cs
pop
jns
scas
jl
fcomp
sbb
fwait
clc
cmp
jnp
fdiv
jnp
cld
sar
cld
rcr
cld
rcr
cld
lock
cmp
adc
fidiv
data16
jno
outs
std
push
jbe
mov
jno
scas
repnz
jns
mov
jle
scas
repnz
jns
cmps
inc
outs
in
inc
dec
std
data16
inc
inc
outs
in
inc
scas
repnz
cmp
es
outs
movs
jle
dec
std
data16
es
outs
lds
dec
std
data16
in
inc
outs
in
inc
into
repnz
jbe
es
outs
lds
push
std
data16
xchg
jle
or
sti
mov
sar
(bad)
mov
clc
sbb
pop
cmp
lock
clc
fcom
fwait
clc
sbb
jnp
cmc
mov
call
xor
outs
and
data16
in
bound
jle
cs
data16
inc
inc
outs
movs
jle
dec
std
data16
inc
inc
outs
movs
jle
outs
std
data16
inc
outs
and
data16
in
inc
outs
test
outs
std
inc
mov
in
inc
outs
and
xchg
jns
xchg
movs
jle
dec
std
fidivr
push
aaa
sub
cmp
stc
jl
jnp
cmp
jnp
cld
rcr
(bad)
pop
fdivr
lock
cld
lock
cmp
icebp
pop
out
cmp
es
outs
and
push
jbe
cmps
inc
outs
in
inc
outs
std
data16
jns
mov
jle
mov
push
jbe
xchg
lds
dec
std
data16
in
inc
outs
add
retw
data16
es
outs
lds
frstor
jbe
inc
inc
outs
in
inc
frstor
jbe
inc
outs
lds
into
repnz
jbe
es
outs
test
cs
data16
inc
out
gs
or
sbb
jnp
cmp
fwait
clc
cld
adc
cmp
jnp
fdiv
sti
fcomp
nop
js
push
adc
cmp
pushf
fsubp
cli
jbe
es
outs
in
inc
cs
data16
push
inc
outs
test
dec
std
data16
in
inc
outs
lds
outs
std
data16
inc
inc
outs
in
inc
dec
std
data16
inc
outs
and
data16
in
inc
outs
test
dec
std
inc
push
jbe
xchg
add
push
jbe
cmps
inc
outs
lds
mov
data16
jns
mov
mov
outs
popf
push
fdiv
cmp
lock
clc
cmp
fcomp
rcr
fcomp
lock
cmp
adc
cmp
bound
jno
mov
data16
in
inc
outs
in
inc
dec
std
inc
cmc
jns
mov
jle
outs
std
mov
inc
outs
add
data16
in
inc
outs
add
data16
cmp
inc
inc
outs
lds
out
std
data16
out
outs
lds
outs
std
inc
push
jbe
xchg
in
bound
in
inc
outs
lds
dec
std
data16
lds
add
pop
sbb
sbb
sbb
cwde
clc
pushf
sar
cld
lock
fdiv
clc
pop
sar
js
rcr
clc
pushf
adc
std
ret
call
outs
lds
dec
std
data16
in
inc
outs
lds
outs
std
data16
in
inc
outs
lds
cs
data16
jns
inc
inc
outs
lds
outs
std
data16
in
inc
dec
in
inc
cs
data16
inc
inc
outs
movs
jle
outs
std
data16
in
inc
outs
add
data16
in
inc
outs
add
pop
jbe
inc
outs
and
data16
jns
push
pop
repnz
cmp
fcmovnu
cld
push
sbb
lock
fdiv
jnp
cld
lock
fdivr
adc
inc
inc
outs
inc
jno
outs
std
pop
jbe
inc
outs
lds
outs
std
push
jbe
xchg
add
push
jbe
xchg
lds
outs
std
push
jbe
cmps
inc
outs
add
inc
jbe
data16
inc
inc
outs
lds
push
std
data16
push
inc
dec
movs
jle
outs
std
inc
mov
outs
lds
scas
bnd
in
inc
outs
movs
jle
dec
std
data16
lds
pusha
outs
inc
sahf
pop
jmp
cmp
jnp
cld
lock
fdiv
clc
pop
lock
sbb
adc
dec
inc
outs
add
data16
es
outs
lds
dec
std
data16
in
inc
outs
in
inc
outs
std
data16
in
inc
outs
lds
dec
std
call
outs
movs
jle
outs
std
push
jbe
xchg
in
inc
dec
std
data16
es
outs
movs
jle
dec
std
push
jbe
cmps
inc
outs
add
data16
in
inc
outs
add
data16
in
inc
outs
add
data16
in
push
mov
sahf
pop
clc
mov
cwde
pop
mov
clc
fdiv
jnp
cld
rcr
cmp
icebp
call
dec
add
xchg
jns
xchg
lds
outs
std
call
outs
add
data16
in
inc
outs
in
inc
mov
data16
in
inc
dec
inc
jno
push
repnz
ret
data16
inc
inc
outs
lds
cs
data16
push
bound
jle
mov
pop
jbe
inc
inc
outs
in
inc
into
bnd
in
inc
outs
gs
dec
std
data16
lds
pusha
outs
inc
sahf
pop
jmp
aas
repz
cwde
fcom
(bad)
cld
push
pop
clc
sbb
mov
inc
and
pop
inc
scas
mov
xchg
lds
dec
std
data16
in
inc
outs
lds
dec
std
data16
lds
outs
movs
jle
dec
std
data16
jns
inc
outs
lds
outs
std
data16
in
inc
dec
add
data16
lds
outs
lds
dec
std
push
jbe
xchg
add
xchg
jns
xchg
in
inc
mov
data16
in
inc
outs
add
data16
in
inc
outs
test
ror
shl
aam
js
nop
(bad)
fdiv
jnp
fdiv
jnp
sbb
icebp
pop
iret
cmp
bound
add
data16
in
inc
dec
in
inc
outs
std
data16
in
inc
outs
add
data16
in
inc
outs
in
inc
into
repnz
jns
inc
dec
test
out
repnz
data16
bound
jle
dec
frstor
push
in
inc
outs
test
outs
std
es
jns
mov
jle
frstor
jbe
es
outs
test
cs
data16
in
inc
outs
inc
fdivrp
in
pop
ficomp
cmp
rcr
clc
cld
nop
pop
stc
inc
pop
jge
or
data16
push
add
jle
scas
std
data16
push
inc
outs
movs
jle
dec
std
data16
inc
inc
outs
movs
jle
dec
std
data16
in
inc
outs
lds
cs
data16
in
inc
dec
in
inc
outs
std
inc
jp
lds
inc
outs
movs
jle
dec
std
data16
in
inc
outs
movs
jle
mov
data16
in
inc
outs
and
data16
jns
xchg
in
inc
mov
data16
(bad)
outs
inc
jno
outs
std
push
jbe
cmps
inc
dec
and
data16
cmp
jl
cmp
cld
lock
cld
xor
pop
sar
stos
icebp
pop
scas
adc
dec
and
data16
in
inc
outs
lds
dec
std
push
jbe
xchg
add
pop
push
in
inc
outs
add
data16
in
inc
outs
inc
jno
mov
data16
es
outs
lds
dec
std
data16
in
inc
outs
test
outs
std
es
jns
xchg
lds
dec
std
data16
in
inc
outs
lds
push
std
data16
es
outs
and
mov
aas
repz
cwde
cld
adc
cdq
sub
call
in
bound
jg
scas
std
data16
inc
inc
outs
lds
dec
std
data16
in
inc
outs
lds
dec
std
data16
in
inc
outs
lds
dec
std
data16
in
inc
outs
add
mov
inc
outs
movs
jle
outs
std
data16
in
inc
outs
lds
mov
push
jbe
xchg
inc
jno
into
repnz
jns
xchg
in
inc
mov
data16
jns
mov
jno
mov
push
jbe
xchg
lds
cdq
mov
cmc
pop
push
jp
fdiv
mov
fdivr
jnp
stos
adc
adc
outs
and
xchg
jns
cmps
inc
outs
and
data16
in
inc
outs
add
data16
in
inc
outs
add
data16
in
inc
outs
inc
push
inc
scas
mov
inc
jbe
data16
es
outs
lds
cs
data16
bound
jle
outs
std
inc
cmc
jns
cmps
inc
outs
lds
cs
data16
inc
inc
outs
lds
push
std
data16
push
add
jle
int
call
mov
fdivr
push
pop
fcomp
xor
adc
xchg
pop
inc
inc
outs
and
data16
inc
inc
outs
lds
dec
std
data16
in
inc
outs
lds
cs
data16
in
inc
outs
lds
dec
std
data16
in
inc
outs
add
call
outs
lds
dec
std
data16
in
inc
outs
movs
jle
scas
repnz
jne
in
inc
outs
and
xchg
jns
xchg
add
xchg
jns
mov
jno
mov
data16
in
push
outs
gs
fcomp
sti
mov
(bad)
mov
fdivr
jnp
stos
adc
scas
adc
outs
inc
jno
outs
std
xchg
jns
mov
jno
into
repnz
jns
xchg
add
push
jbe
cmps
inc
outs
add
push
jbe
cmps
inc
outs
inc
jno
scas
shl
jns
inc
cmp
out
outs
gs
out
std
data16
out
outs
gs
cs
inc
cmc
jns
mov
jle
dec
std
pop
jbe
inc
inc
outs
lds
out
frstor
push
in
popa
dec
gs
or
mov
js
adc
sbb
js
adc
sbb
out
sub
inc
cs
pop
jbe
es
outs
lds
cs
data16
in
inc
outs
lds
dec
std
inc
jp
in
inc
outs
lds
dec
std
pop
jbe
inc
inc
outs
in
bound
data16
in
inc
outs
in
inc
dec
std
data16
lds
inc
outs
movs
jle
mov
data16
in
inc
outs
add
data16
(bad)
outs
inc
jno
into
repnz
jbe
xchg
and
data16
jns
pop
outs
add
pop
cld
adc
(bad)
jnp
(bad)
fdivr
xor
jge
jnp
stos
icebp
cmp
inc
cs
inc
outs
std
data16
in
inc
outs
in
inc
outs
std
data16
in
inc
outs
lds
outs
std
pop
jbe
inc
outs
add
push
ss
outs
inc
push
inc
into
repnz
jbe
push
inc
outs
test
inc
out
frstor
push
in
inc
outs
test
cs
es
jns
cmps
inc
outs
movs
jle
dec
std
pop
jbe
inc
inc
outs
lds
push
frstor
jbe
push
popa
dec
inc
pop
mov
lock
js
adc
fcomp
js
sar
cwde
call
jle
cs
data16
in
inc
outs
lds
dec
std
data16
in
inc
outs
movs
jle
dec
std
pop
jbe
inc
inc
outs
movs
jle
dec
std
data16
in
inc
outs
in
inc
dec
std
pop
jbe
inc
inc
outs
lds
cs
data16
inc
inc
outs
lds
mov
call
outs
add
data16
in
inc
outs
inc
jno
into
repnz
in
inc
outs
and
data16
jns
xchg
in
popf
lahf
mov
clc
cmp
jnp
cld
sar
fcomp
jnp
stos
adc
(bad)
cmp
inc
bound
jno
mov
xchg
jns
xchg
add
call
outs
add
pop
jbe
inc
outs
add
data16
in
add
push
inc
into
repnz
jbe
bound
pop
inc
out
frstor
jbe
es
outs
movs
jle
outs
std
xchg
jns
xchg
lds
mov
data16
es
outs
lds
frstor
jbe
mov
add
jp
lock
js
adc
fcomp
fwait
cwde
mov
fstp
bound
jle
push
std
data16
in
inc
outs
movs
jle
dec
std
data16
in
inc
outs
lds
push
mov
es
outs
test
out
std
pop
jbe
inc
inc
outs
lds
dec
std
inc
pop
jbe
inc
outs
and
data16
inc
inc
outs
lds
push
jge
call
push
inc
dec
std
data16
jns
xchg
in
inc
outs
std
data16
in
inc
outs
and
xchg
jns
mov
xor
xor
fdiv
fwait
sbb
lock
adc
cwde
test
fimul
in
inc
outs
add
data16
in
inc
outs
add
push
jbe
xchg
in
inc
outs
std
pop
jbe
inc
outs
add
xchg
jns
mov
jno
mov
inc
jbe
data16
out
dec
gs
push
std
data16
es
outs
lds
mov
data16
in
inc
outs
in
inc
scas
repnz
bound
pop
inc
push
std
data16
jbe
cmps
and
pop
pushf
sub
mov
js
adc
fcomp
pop
cwde
ins
icebp
fcmovnbe
cmp
jle
scas
std
data16
in
inc
outs
movs
jle
dec
std
data16
in
inc
outs
movs
pop
inc
dec
std
push
(bad)
inc
(bad)
mov
outs
std
data16
inc
outs
lds
cs
data16
in
inc
dec
gs
outs
std
data16
in
inc
outs
lds
into
shl
test
add
jle
cs
cmc
jns
xchg
in
inc
dec
std
push
jbe
xchg
and
data16
in
bound
fdivrp
scas
xor
adc
fdiv
cmp
fdiv
pop
fcomp
sar
cmp
icebp
jp
jp
in
bound
jle
scas
repnz
in
inc
outs
add
push
jbe
xchg
in
inc
outs
std
data16
in
inc
outs
add
pop
jbe
inc
outs
add
data16
jbe
push
inc
outs
gs
out
std
data16
es
outs
lds
mov
mov
inc
outs
in
inc
scas
repnz
jp
in
inc
outs
test
out
frstor
jbe
xchg
outs
in
cld
dec
pop
pop
mov
repz
js
adc
clc
pop
lock
dec
adc
jp
lds
inc
outs
in
inc
dec
fsub
jbe
push
bound
pop
inc
out
std
data16
push
bound
jle
dec
std
test
mov
out
cdq
cwde
loop
std
data16
in
inc
outs
movs
jle
outs
std
data16
inc
dec
inc
jno
mov
data16
inc
outs
movs
jle
outs
mov
jbe
jb
cmp
jns
inc
outs
add
data16
in
inc
outs
add
data16
lds
xor
rcl
aad
(bad)
lock
clc
fdiv
jnp
fdiv
jnp
sbb
icebp
jp
jp
in
inc
outs
in
inc
outs
std
data16
in
inc
outs
add
push
jbe
xchg
add
pop
jbe
inc
inc
outs
and
push
jbe
cmps
inc
outs
in
bound
data16
push
lds
bound
jle
dec
std
data16
es
outs
in
bound
data16
in
inc
outs
lds
dec
std
data16
inc
inc
outs
lds
out
std
data16
push
and
jle
ins
jl
mov
sar
cld
lock
fcomp
adc
jns
pop
cmp
xchg
pop
add
movs
es
jle
outs
cld
call
outs
test
out
std
data16
inc
arpl
ds
pop
xor
adc
clc
jecxz
cmp
mov
push
movs
push
inc
outs
in
inc
dec
std
data16
inc
inc
outs
lds
push
std
data16
jbe
es
outs
test
bound
cs
mov
in
bound
jle
dec
popf
inc
adc
outs
add
call
outs
movs
push
dec
dec
cmp
js
sar
clc
cld
lock
sbb
sar
jne
in
inc
outs
add
push
jbe
cmps
inc
outs
in
inc
mov
data16
in
inc
outs
in
inc
mov
mov
inc
outs
in
inc
outs
std
push
jbe
xchg
in
bound
in
cmp
out
outs
test
outs
std
pop
jbe
inc
inc
outs
lds
dec
std
data16
es
outs
movs
jle
cs
data16
in
inc
outs
lds
push
frstor
jbe
out
cs
cmp
clc
pop
sar
fdiv
mov
js
sar
cmp
test
gs
add
test
call
into
movs
push
popf
sahf
sahf
fcomp
mov
mov
jbe
inc
inc
outs
lds
dec
std
data16
inc
inc
outs
in
inc
push
std
data16
push
in
inc
outs
test
into
shl
bound
jb
clc
mov
repz
inc
outs
in
(bad)
out
std
pop
mov
inc
or
je
test
add
scas
and
sbb
cmp
fdiv
pop
clc
cld
lock
sbb
icebp
pop
or
ja
bound
add
data16
in
inc
outs
add
data16
in
inc
outs
add
data16
in
inc
outs
add
data16
in
inc
outs
add
inc
mov
jbe
push
inc
outs
test
dec
std
data16
in
inc
outs
lds
dec
std
data16
in
bound
jle
cs
data16
inc
bound
jle
cs
data16
out
dec
and
sbb
clc
sbb
jnp
cmp
fwait
clc
fst
mov
js
fcomp
inc
cdq
aaa
retf
cmp
cwde
pop
cmp
pop
push
popf
mov
jbe
cmps
pushf
in
cmp
mov
mov
mov
push
std
inc
sbb
inc
inc
outs
test
outs
std
data16
inc
inc
outs
lds
push
std
data16
es
outs
test
scas
xchg
data16
(bad)
mov
mov
retf
inc
out
std
data16
cdq
mov
mov
repz
or
push
popf
test
pop
popa
pop
mov
fstp
jnp
fdiv
pop
clc
cld
sar
sbb
icebp
pop
or
ja
xchg
and
data16
in
inc
outs
add
data16
in
inc
outs
add
data16
in
inc
outs
add
push
jbe
mov
jno
mov
inc
mov
jbe
mov
pop
inc
push
frstor
jbe
push
inc
outs
test
out
std
inc
call
jle
cs
data16
in
inc
outs
inc
jle
scas
std
data16
in
mov
retf
cld
lock
cwde
cmp
jnp
fdiv
jnp
fdiv
jnp
fdiv
jnp
cmp
sti
clc
cld
sar
clc
mov
lock
fdivr
nop
cmp
inc
mov
js
test
data16
dec
ins
pop
adc
mov
cmp
xchg
inc
outs
std
data16
es
outs
in
inc
outs
std
data16
inc
inc
outs
lds
push
frstor
push
in
inc
outs
lds
dec
std
data16
les
jnp
call
jp
mov
or
js
mov
fcomp
lock
fdivr
jo
fdivr
sti
cmp
xor
clc
fdiv
jnp
cld
lock
(bad)
jnp
test
pop
sub
ja
bound
jle
into
repnz
jns
cmps
inc
outs
lds
dec
std
push
jbe
xchg
in
inc
outs
std
push
jbe
xchg
add
adc
cmps
inc
outs
add
data16
in
cli
jbe
out
outs
inc
jle
push
std
inc
sbb
es
outs
lds
push
std
inc
mov
outs
test
cs
data16
es
outs
inc
jle
into
mov
cmps
popa
out
lds
cld
lock
cwde
cmp
jnp
(bad)
pop
fcomp
rcr
fdiv
jnp
fcom
jnp
cmp
fwait
clc
fdiv
jnp
cld
lock
fcom
pop
sbb
idiv
mov
(bad)
sti
jns
rcr
jle
cs
inc
jp
in
inc
outs
movs
jle
cs
data16
inc
inc
outs
lds
push
frstor
jbe
inc
outs
lds
dec
std
data16
movs
data16
stos
pop
cld
xchg
(bad)
cmp
fwait
clc
je
cli
cdq
xlat
jbe
xor
cmp
pop
clc
fdiv
pop
fdivr
adc
fdiv
pop
clc
cmp
jnp
cmp
jnp
(bad)
jnp
cld
sar
(bad)
pop
fcomp
lock
test
cmp
outs
and
xchg
jns
mov
jno
scas
repnz
jns
xchg
in
inc
outs
std
data16
in
inc
outs
movs
jle
dec
frstor
jbe
cmps
inc
outs
add
data16
jbe
push
inc
outs
gs
push
std
data16
es
outs
movs
jle
cs
mov
bound
jle
push
std
data16
push
inc
outs
gs
scas
mov
mov
(bad)
fsubr
fwait
cwde
cmp
jnp
(bad)
pop
fcomp
lock
cld
sar
cld
sar
cld
rcr
cld
rcr
cld
rcr
fcom
pop
clc
cmp
jnp
jg
mov
fcomp
adc
mov
mov
dec
daa
jle
scas
std
inc
jp
in
bound
jle
cs
data16
inc
inc
outs
lds
cs
data16
inc
inc
outs
lds
dec
std
data16
pop
daa
dec
(bad)
mov
adc
fdivr
jo
cmp
lock
fdiv
pop
fdivr
rcr
cld
lock
fdivr
rcr
cld
lock
fdivr
lock
fdivr
lock
cld
lock
fdivr
icebp
sbb
outs
and
data16
jns
out
outs
inc
jno
into
repnz
jns
cmps
inc
outs
and
mov
inc
outs
lds
outs
std
adc
cmps
inc
outs
in
inc
mov
inc
jbe
inc
cmp
inc
inc
outs
lds
push
std
data16
push
inc
outs
gs
inc
out
std
data16
bound
jle
cs
data16
push
inc
outs
gs
out
frstor
mul
out
scas
add
sti
(bad)
fwait
js
lock
(bad)
pop
fcomp
rcr
cld
rcr
cld
lock
fdivr
rcr
cld
rcr
cld
lock
cld
rcr
fdiv
pop
clc
cld
adc
fcomp
lock
fdiv
jnp
std
adc
cdq
cmp
pop
inc
outs
gs
into
std
data16
es
outs
test
dec
std
data16
inc
inc
dec
in
inc
dec
std
data16
out
outs
movs
jle
dec
std
data16
in
push
sub
fidivr
cdq
cld
lock
cmp
jnp
(bad)
pop
clc
(bad)
jnp
fdiv
fwait
clc
fdiv
pop
fdivr
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
adc
jge
jnp
test
cli
sub
bound
jle
into
repnz
jns
cmps
inc
outs
add
call
dec
in
inc
mov
pop
jbe
inc
outs
add
push
jbe
xchg
in
inc
outs
std
inc
jbe
data16
push
inc
outs
gs
push
std
data16
es
outs
test
push
std
data16
inc
inc
outs
movs
jle
out
std
data16
es
outs
in
inc
out
mov
out
iret
and
sti
(bad)
fwait
js
lock
(bad)
pop
fdivr
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
(bad)
pop
fcomp
lock
lock
(bad)
jnp
(bad)
jnp
fdiv
jnp
mov
adc
inc
outs
gs
inc
push
std
data16
push
inc
outs
lds
dec
std
data16
inc
outs
and
data16
jbe
es
outs
lds
dec
std
data16
in
xor
push
pop
frndint
lock
cld
lock
clc
fdiv
jnp
fdiv
jnp
(bad)
pop
fdivr
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
adc
jge
jnp
test
cli
or
inc
dec
add
data16
jns
mov
jle
outs
std
es
pop
movs
push
inc
outs
add
pop
jbe
inc
outs
add
inc
jne
in
inc
dec
in
bound
inc
jbe
data16
out
outs
gs
inc
cs
data16
push
bound
jle
dec
std
inc
pop
jbe
inc
outs
lds
frstor
jbe
inc
inc
outs
lds
out
mov
out
out
and
sti
cld
lock
cwde
cmp
jnp
(bad)
pop
fdivr
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
fdiv
jnp
cmp
sar
mov
outs
gs
push
fld
push
in
inc
dec
lds
cs
data16
inc
outs
in
inc
push
mov
es
outs
gs
dec
frstor
jbe
data16
movs
sahf
fnstsw
cdq
mov
sar
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
sar
cld
lock
fdivr
rcr
or
inc
dec
inc
push
inc
mov
data16
in
inc
outs
add
(bad)
jne
test
bound
xor
shl
push
in
inc
outs
in
inc
outs
std
push
jbe
cmps
bound
jno
scas
repnz
jbe
push
inc
outs
gs
push
std
data16
out
outs
movs
jle
mov
es
jns
inc
inc
dec
movs
jle
dec
std
data16
inc
inc
outs
lds
out
frstor
(bad)
(bad)
iret
(bad)
stos
pop
sti
cld
lock
cwde
cmp
jnp
(bad)
pop
fdivr
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
lock
(bad)
pop
cmp
fwait
lahf
cmp
inc
pop
inc
into
std
data16
push
inc
movs
jle
cs
data16
inc
inc
outs
lds
out
std
mov
push
ret
pop
bound
data16
cmp
mov
sbb
pop
icebp
jnp
cld
sar
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
sar
cld
mov
fdivr
lock
test
fcmove
pop
ja
inc
outs
inc
xor
mov
inc
outs
add
inc
cmc
cmp
out
outs
and
data16
in
inc
outs
in
bound
push
push
in
add
push
inc
scas
repnz
push
in
add
jle
push
std
data16
inc
inc
outs
lds
scas
repnz
jns
inc
inc
dec
movs
jle
cs
data16
in
inc
outs
lds
out
mov
push
inc
out
in
sbb
pop
sti
cld
lock
cwde
cmp
jnp
(bad)
pop
fdivr
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
lock
(bad)
jnp
push
sar
mov
push
lds
dec
lea
sti
mul
outs
add
jle
dec
std
data16
in
inc
outs
in
inc
push
mov
xchg
in
pop
addr16
mov
inc
dec
outs
add
cwde
(bad)
cmp
cld
rcr
fdivr
rcr
fdiv
jnp
cld
rcr
cld
lock
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
sar
cld
mov
fdivr
lock
test
sbb
ja
inc
outs
inc
xor
mov
inc
outs
and
push
push
(bad)
outs
test
inc
outs
mov
inc
outs
and
push
push
in
bound
jno
into
repnz
jbe
push
inc
outs
movs
ds
out
frstor
jbe
es
outs
lds
dec
std
call
dec
movs
jle
cs
data16
es
outs
lds
push
popf
inc
(bad)
in
inc
iret
add
sbb
jnp
(bad)
pop
fdivr
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
lock
clc
fcom
jnp
or
mov
(bad)
xchg
data16
cld
popf
(bad)
cdq
cld
adc
sbb
pusha
jle
out
std
xor
xchg
add
data16
lds
mov
repz
mov
xchg
sti
frndint
lock
cld
rcr
cld
lock
cld
rcr
fdiv
jnp
(bad)
pop
fcomp
lock
cld
rcr
cld
rcr
cld
rcr
cld
sar
cld
lock
fcomp
icebp
sbb
jp
in
inc
outs
and
data16
jns
cmps
inc
outs
add
xchg
pop
in
add
push
inc
mov
data16
cmp
cmps
inc
dec
add
push
jbe
xchg
add
data16
jbe
out
outs
test
frstor
jbe
es
outs
movs
jle
cs
inc
mov
dec
movs
jle
cs
data16
in
inc
outs
movs
jle
fld
(bad)
(bad)
iret
and
clc
mov
lock
(bad)
pop
fdivr
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
lock
cld
adc
ss
jne
mov
jae
jae
cwde
mov
adc
cdq
add
mov
push
inc
outs
in
inc
out
std
pop
ss
sub
adc
sbb
fistp
cdq
pushf
fistp
cld
mov
fcom
pop
fdivr
lock
fdivr
rcr
fdiv
jnp
fdiv
jnp
fdiv
jnp
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
adc
jge
jnp
test
sbb
jp
in
inc
outs
and
data16
lds
inc
outs
std
xchg
cmp
cmps
and
xor
shl
cmp
(bad)
bound
jle
mov
push
jbe
xchg
in
inc
mov
data16
cmp
out
outs
gs
inc
push
std
data16
es
outs
lds
cs
es
jbe
inc
outs
movs
jle
cs
data16
inc
inc
outs
in
inc
dec
frstor
(bad)
(bad)
scas
and
sbb
jnp
(bad)
pop
fdivr
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
sar
(bad)
jnp
(bad)
pop
js
xor
fdivr
fwait
sbb
pop
js
(bad)
repnz
jbe
es
outs
movs
jle
scas
std
data16
fptan
pushf
fcom
pop
clc
cld
mov
fcomp
pop
sbb
mov
clc
cld
adc
cld
rcr
cld
rcr
fdiv
jnp
fdiv
jnp
fdiv
jnp
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
adc
jge
jnp
test
cli
int
ja
xchg
inc
jno
scas
repnz
jns
out
outs
in
inc
mov
data16
in
add
push
inc
into
shl
pop
in
inc
dec
add
data16
in
inc
outs
add
data16
jbe
out
outs
inc
bound
frstor
push
in
inc
outs
movs
jle
cs
inc
xchg
jns
xchg
movs
jle
cs
data16
in
inc
outs
in
inc
push
mov
mov
in
cmp
cmp
pop
icebp
jnp
cmp
jnp
(bad)
pop
fdivr
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
lock
clc
fdiv
jnp
(bad)
pop
clc
fcom
jnp
fdiv
pop
clc
(bad)
jnp
cld
lock
push
push
sbb
mov
in
inc
lds
scas
(bad)
fcom
pop
cld
lock
fdiv
pop
clc
fdiv
jnp
cld
lock
fdiv
pop
clc
fdiv
jnp
cld
lock
fdivr
rcr
cld
rcr
fdiv
jnp
fdiv
jnp
fdiv
jnp
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
sar
cld
lock
fcomp
lock
test
mov
inc
inc
dec
add
data16
in
inc
outs
add
xchg
cmp
(bad)
bound
xor
mov
cmc
cmp
mov
jno
mov
data16
in
bound
jno
into
repnz
jbe
es
outs
movs
jle
cs
data16
es
outs
lds
cs
data16
jns
cmps
inc
outs
movs
jle
outs
std
data16
in
inc
outs
test
cs
cmps
and
aas
sbb
pop
sbb
jnp
(bad)
pop
fdivr
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
sar
(bad)
pop
fcomp
lock
cld
lock
fdiv
pop
clc
fdiv
jnp
cld
lock
fdiv
jnp
lahf
sar
push
jnp
sbb
arpl
fidiv
sar
cmp
lock
clc
cld
lock
cld
lock
cmp
pop
clc
fdiv
fwait
clc
fdiv
jnp
cld
rcr
(bad)
pop
fdivr
lock
cld
rcr
fdiv
jnp
(bad)
pop
fcomp
lock
cld
rcr
cld
rcr
cld
rcr
cld
sar
cld
rcr
(bad)
jnp
test
mov
inc
outs
and
data16
in
inc
outs
add
data16
cmp
out
outs
inc
push
inc
into
shl
pop
in
inc
outs
gs
mov
data16
in
bound
push
inc
into
repnz
sbb
inc
inc
outs
lds
dec
std
data16
es
outs
movs
jle
cs
data16
jns
cmps
inc
outs
movs
jle
outs
std
data16
in
inc
outs
test
frstor
(bad)
(bad)
iret
and
cmp
jnp
(bad)
pop
fdivr
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
sar
cld
rcr
cld
rcr
cld
rcr
(bad)
pop
clc
cld
sar
fdiv
jnp
push
icebp
fist
add
gs
fild
cmp
(bad)
fwait
cwde
mov
lock
cld
rcr
cld
lock
fdivr
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
sar
cld
lock
fcomp
lock
test
mov
inc
outs
gs
mov
data16
in
inc
outs
add
data16
cmp
out
outs
inc
push
inc
scas
shl
pop
in
inc
outs
inc
jno
mov
inc
jne
in
bound
push
inc
into
repnz
ret
data16
inc
inc
outs
lds
cs
data16
in
inc
outs
lds
dec
std
xchg
jns
xchg
movs
jle
dec
std
data16
in
inc
outs
movs
jle
cs
out
(bad)
in
sbb
jl
pop
mov
clc
fdiv
jnp
(bad)
pop
fdivr
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
lock
fdivr
rcr
cld
lock
(bad)
fwait
cwde
(bad)
adc
rcl
mov
jge
cwde
fdiv
jnp
fdiv
jnp
fdiv
pop
fcomp
lock
cld
rcr
(bad)
pop
fdivr
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
fdivr
lock
test
fcmove
push
ja
xchg
gs
into
repnz
jns
out
outs
inc
jno
into
shl
sbb
cmps
bound
push
inc
into
mov
xchg
pop
in
inc
outs
add
push
push
in
add
push
inc
scas
mov
mov
jbe
es
outs
lds
outs
std
data16
in
inc
outs
movs
jle
cs
data16
jns
mov
jle
dec
std
data16
inc
inc
outs
lds
dec
fld
test
mov
sub
mov
clc
fdiv
jnp
(bad)
pop
fdivr
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
(bad)
pop
fdivr
lock
clc
cld
rcr
cdq
sahf
jo
xor
retf
and
cmp
fcomp
fdiv
jnp
(bad)
jnp
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
sar
cld
mov
fdivr
lock
test
mov
xchg
gs
out
repnz
jns
cmps
inc
outs
inc
jno
into
repnz
pop
(bad)
outs
and
xchg
cmp
cmps
inc
outs
and
data16
in
bound
push
inc
out
repnz
data16
inc
inc
outs
lds
dec
std
pop
jbe
inc
outs
lds
dec
std
inc
cmc
jns
cmps
inc
outs
movs
jle
dec
std
data16
inc
inc
outs
lds
dec
frstor
(bad)
(bad)
into
and
cmp
clc
cmp
jnp
fdiv
pop
fdivr
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
lock
fcom
pop
mov
lahf
rcr
mov
fdiv
jnp
(bad)
pop
clc
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
sar
cld
lock
fcomp
lock
test
mov
cmps
inc
outs
inc
jno
scas
shl
pop
in
inc
outs
and
data16
pop
in
bound
push
inc
out
shl
cmp
mov
jle
mov
data16
in
bound
jno
push
repnz
data16
inc
inc
outs
lds
dec
std
data16
in
inc
outs
movs
jle
dec
std
inc
xchg
jns
cmps
inc
outs
lds
dec
std
data16
in
inc
outs
in
inc
cs
out
out
inc
ds
fdivr
pop
adc
cmp
jnp
fdiv
pop
fdivr
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
lock
fcomp
lock
clc
cld
lock
fcom
sbb
fcom
jnp
fdiv
pop
fcomp
lock
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
lock
fcomp
lock
test
pop
lea
in
inc
outs
and
data16
pop
in
inc
dec
and
data16
pop
in
bound
jno
into
shl
cmp
cmps
inc
outs
add
xchg
pop
in
add
xor
mov
loop
in
cmp
es
outs
lds
cs
pop
jbe
inc
outs
movs
jle
cs
inc
xchg
jns
xchg
lds
dec
std
data16
in
inc
outs
in
bound
mov
out
scas
add
sbb
jnp
(bad)
pop
fdivr
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
sar
cld
sar
cld
sar
cld
lock
cld
lock
fdiv
jnp
cld
sar
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
sar
cld
rcr
(bad)
jnp
test
cmp
inc
outs
and
data16
pop
in
inc
outs
inc
jno
out
repnz
jns
out
outs
inc
push
inc
into
shl
cmp
cmps
inc
outs
add
push
push
in
add
xor
shl
jns
data16
es
outs
lds
cs
data16
inc
inc
outs
movs
jle
outs
std
data16
in
inc
outs
movs
jle
cs
data16
in
add
push
inc
dec
mov
push
or
pop
sbb
clc
fdiv
jnp
(bad)
pop
fdivr
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
fdiv
pop
fcomp
rcr
cld
lock
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
(bad)
jnp
test
ja
mov
push
bound
mov
aad
in
bound
push
inc
into
mov
aad
in
bound
push
inc
mov
xchg
and
data16
in
add
push
inc
into
repnz
in
cmp
inc
inc
outs
lds
push
std
data16
es
outs
movs
jle
outs
std
pop
jbe
es
outs
lds
dec
std
data16
in
and
push
inc
outs
popf
mov
es
pop
cmp
jnp
(bad)
pop
fdivr
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
sar
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
(bad)
jnp
test
ja
push
inc
outs
and
inc
aad
(bad)
outs
and
data16
pop
in
add
xor
popf
data16
in
inc
outs
add
data16
in
add
push
inc
into
shl
jns
data16
es
outs
test
dec
std
data16
out
outs
lds
mov
pop
jbe
es
outs
lds
dec
std
data16
inc
add
push
inc
dec
jge
call
push
pushf
in
jge
mov
lock
lock
fdivr
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
cld
rcr
(bad)
jnp
test
jbe
inc
outs
gs
inc
out
rol
jns
out
dec
gs
(bad)
out
shl
jns
out
dec
and
pop
ss
ret
push
inc
outs
popf
push
push
in
bound
push
inc
into
shl
jns
into
and
inc
outs
in
sub
inc
imul
add
data16
in
bound
gs
outs
in
inc
daa
out
inc
outs
in
inc
outs
in
inc
outs
in
inc
outs
in
das
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
mov
cmovs
das
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
data16
ret
mov
retf
add
dec
and
ret
mov
retf
pop
outs
xchg
sub
fild
push
inc
scas
shl
pop
loopne
in
movs
push
inc
shl
sti
jecxz
les
push
inc
shl
fneni(8087
out
and
arpl
mov
inc
adc
cmovs
das
ret
mov
retf
add
dec
and
ret
mov
data16
ret
mov
retf
add
mov
push
pop
jecxz
xchg
mov
outs
push
arpl
pop
jecxz
addr16
shl
pop
jecxz
out
in
inc
scas
shl
pop
loopne
addr16
inc
outs
push
arpl
sti
jecxz
in
movs
rol
jo
pop
fninit
es
xor
mov
test
or
and
ret
mov
data16
ret
mov
mov
out
xor
fmul
add
adc
pop
jecxz
test
sub
and
push
mov
outs
jmp
push
loopne
fs
push
pusha
xchg
pop
loopne
push
sub
iret
movs
in
rol
mov
in
xchg
pusha
and
ins
movs
rol
xor
jne
mov
icebp
jp
and
xor
pop
loopne
sbb
icebp
jnp
push
pop
lods
gs
imul
xchg
sbb
mov
xchg
(bad)
jne
xor
or
pop
sbb
cdq
f2xm1
jnp
mov
xchg
mov
ror
in
ss
mov
rol
xor
jne
xchg
mov
call
xchg
stos
lods
std
icebp
cmp
retf
xor
es
inc
sti
jge
sbb
mov
push
sbb
sbb
fild
inc
outs
xchg
scas
(bad)
jns
mov
call
sti
jecxz
outs
es
and
nop
ror
in
ss
mov
rol
xor
jne
xchg
mov
call
adc
mov
call
pop
jecxz
js
gs
std
xchg
sbb
sub
push
mov
pop
adc
out
cmp
mov
push
pushf
jae
scas
shl
pop
jecxz
out
and
pusha
dec
fneni(8087
push
loop
in
ss
mov
rol
xor
jne
xchg
mov
jbe
sbb
inc
aaa
jb
inc
outs
push
arpl
pop
jecxz
js
gs
std
xchg
sbb
mov
push
adc
xchg
sbb
sbb
cdq
xor
cli
je
inc
cs
pop
sti
jecxz
les
repz
cs
dec
fneni(8087
push
loop
in
ss
mov
rol
xor
jne
xchg
mov
mov
mov
jae
xchg
xor
cmp
sbb
mov
js
gs
std
xchg
sbb
mov
rcr
cdq
xlat
mov
or
gs
cs
xor
cli
je
inc
cs
pop
sti
jecxz
les
repz
cs
dec
fneni(8087
push
loop
in
ss
mov
rol
xor
jne
xchg
mov
cmp
sbb
push
mov
xchg
sbb
es
gs
std
xchg
sbb
test
pop
stc
aaa
jne
je
imul
push
pop
aam
xchg
sbb
inc
cs
pop
fninit
es
jo
dec
fneni(8087
push
loop
in
ss
mov
rol
xor
jne
xchg
mov
cmp
sbb
xchg
pop
adc
xlat
mov
inc
sti
jge
sbb
mov
sar
mov
cdq
ja
jnp
daa
leave
and
inc
into
push
iret
cmp
lock
shl
sub
xlat
mov
in
add
shl
fneni(8087
push
loop
in
ss
mov
push
inc
cs
add
repz
in
xchg
pushf
xchg
mov
lock
out
xchg
sub
mov
rcr
sbb
clc
fsubr
std
xchg
sbb
in
movs
push
inc
scas
shl
imul
mov
imul
sbb
ror
in
ss
mov
push
inc
outs
xchg
scas
pop
mov
or
fsubr
cld
xchg
jle
repnz
hlt
ss
mov
dec
shl
push
arpl
loopne
adc
and
lea
pop
aam
hlt
ss
cli
xchg
fsubr
add
addr16
gs
pusha
xchg
pop
loopne
push
inc
out
mul
cdq
xor
adc
xchg
ret
pusha
dec
fneni(8087
push
loop
in
ss
mov
rol
shl
mov
gs
out
xor
mov
in
inc
cs
pop
fninit
es
push
hlt
dec
jbe
inc
in
push
mov
scas
shl
fsub
data16
mov
arpl
sti
jecxz
out
gs
out
xor
pop
loopne
mov
xchg
retf
in
(bad)
sti
loope
loop
in
ss
mov
repz
cs
pop
sti
jecxz
les
repz
cs
pop
sti
jecxz
in
movs
repz
cs
adc
jecxz
jmp
push
xlat
cli
bound
push
push
pusha
iret
js
push
in
inc
sub
and
bound
loopne
pop
imul
xlat
js
xchg
mov
loope
loop
in
ss
mov
repz
cs
pop
sti
jecxz
les
repz
cs
pop
sti
jecxz
inc
push
push
pusha
(bad)
js
out
jmp
test
les
repz
shl
fsub
cmps
push
clc
xor
dec
and
imul
inc
and
xor
(bad)
pop
loopne
loop
in
ss
mov
repz
cs
pop
sti
jecxz
les
repz
cs
icebp
jnp
inc
movs
out
bnd
(bad)
(bad)
fsubr
(bad)
lahf
push
and
lock
jecxz
les
rol
xor
or
ja
(bad)
retf
inc
xchg
jmp
xchg
push
cmp
inc
push
ret
lea
mov
cmp
sar
loope
fneni(8087
push
loop
in
ss
mov
rol
jo
pop
sti
jecxz
les
repz
shl
mov
lock
sub
inc
in
mov
shl
outs
push
arpl
sti
jecxz
out
test
inc
dec
push
out
test
fcom
inc
push
mov
xor
loopne
inc
imul
retf
cli
and
add
arpl
loopne
loop
in
ss
mov
rol
jo
pop
sti
jecxz
les
repz
mov
bound
loopne
jmp
cmps
call
in
inc
cs
push
(bad)
dec
imul
(bad)
inc
push
imul
pop
cmp
jo
pop
fninit
(bad)
dec
push
imul
lahf
das
cmp
sti
loope
loop
in
ss
mov
rol
jo
pop
sti
jecxz
(bad)
push
xchg
jmp
sbb
aaa
cmp
mov
xor
imul
popf
ins
loop
movs
and
lahf
das
loope
imul
pop
sti
jecxz
dec
push
adc
cmc
jmp
jle
popa
fild
inc
add
sub
ss
mov
rol
jo
adc
jecxz
dec
imul
in
fsubr
sub
jns
sbb
xchg
ret
arpl
jecxz
or
adc
enter
cmps
(bad)
xchg
sti
aad
and
loopne
add
inc
jae
into
mov
xor
loopne
inc
imul
(bad)
bound
scas
sbb
or
sub
ss
mov
rol
lock
dec
fsub
cmps
push
jle
and
adc
jg
or
imul
inc
cs
pusha
xor
loopne
jp
out
cmp
(bad)
sbb
ret
bound
dec
loopne
ret
(bad)
xchg
nop
imul
lods
ret
cs
fld
inc
push
mov
xor
fistp
sbb
gs
pop
loop
in
ss
mov
jae
push
lock
mov
xchg
cli
iret
es
push
out
mov
loope
in
in
ret
arpl
loop
stc
cmp
mov
inc
push
test
inc
jae
push
mov
pop
stos
imul
dec
adc
popa
dec
lods
ins
loope
retf
jns
inc
push
mov
icebp
xchg
jl
iret
cmp
inc
cmp
movs
not
ss
mov
rcl
scas
xor
addr16
rol
push
arpl
cmp
cmps
or
xchg
retf
in
inc
dec
mov
popa
(bad)
sbb
scas
xlat
js
es
xor
xchg
imul
ror
adc
push
mov
mov
(bad)
fisub
mov
ins
gs
push
inc
push
outs
bound
aaa
ret
mov
mov
test
aam
dec
mov
mov
daa
pushf
sub
jbe
stc
iret
cmp
sub
mov
sub
arpl
sti
jecxz
(bad)
push
imul
push
jnp
les
(bad)
fiadd
adc
outs
scas
out
in
imul
and
xor
pop
pop
cmps
cmp
loop
in
ss
mov
and
mov
in
inc
out
jno
inc
imul
xchg
sbb
add
imul
inc
out
jno
hlt
cmp
out
imul
ins
sub
imul
daa
shl
jge
cmps
cmp
(bad)
push
xchg
cmp
push
loop
in
xchg
add
inc
xor
out
xor
loope
jnp
mov
xor
lea
or
mov
aaa
cmp
es
push
mov
push
imul
les
jb
mov
aam
or
call
sub
gs
ins
mov
daa
adc
scas
das
cmp
push
loop
in
xor
mov
push
and
mov
push
fsub
test
mov
push
lea
inc
into
lock
adc
jecxz
mov
xchg
lahf
mov
pop
adc
repz
and
xchg
inc
fnsave
or
pop
cmp
mov
and
popf
sbb
es
push
out
das
cmp
push
loop
in
ss
mov
retf
arpl
mov
or
add
sbb
xchg
cli
bound
imul
mov
loope
mov
adc
pop
or
mov
jecxz
mov
and
pop
loope
icebp
and
mov
mov
pop
ret
(bad)
mov
das
jnp
push
loop
in
ss
mov
rol
push
add
push
nop
mov
xchg
cmp
inc
popa
push
arpl
loopne
(bad)
push
mov
and
retf
xor
add
mov
outs
push
sbb
lock
das
add
pop
ins
inc
movs
out
repnz
jmp
or
outs
popf
ins
add
sub
ss
mov
rcl
das
je
sub
cdq
cmps
ret
outs
jo
shl
jnp
push
push
imul
fisub
mov
sub
sbb
xchg
cli
into
add
mov
or
test
(bad)
xchg
shr
loope
cli
(bad)
in
jmp
pop
scas
add
dec
jmp
or
pop
loop
in
aaa
ret
mov
(bad)
fld
cmps
call
movs
repz
into
lock
or
and
adc
jg
retf
popf
fstp
xlat
jns
std
nop
inc
fucom
int
cmp
pop
lds
gs
pop
sbb
loope
push
push
cmp
mov
mov
(bad)
jns
imul
jnp
push
loop
in
aaa
ret
mov
popa
aad
loop
aaa
cmp
mov
inc
push
lock
xchg
sub
loope
pop
ins
test
xchg
mov
imul
inc
push
js
push
push
adc
out
movs
and
dec
mov
cmc
test
dec
mov
dec
sub
or
shl
sti
jecxz
loop
in
ss
mov
and
xchg
or
aaa
cmp
es
in
dec
scas
push
in
push
dec
mov
jo
into
lock
xor
loopne
mov
or
clc
xor
push
nop
push
pop
aas
jne
div
adc
out
test
inc
push
mov
xor
loopne
pop
imul
aaa
cmp
es
jo
psubq
push
loop
in
xor
mov
pusha
es
push
out
idiv
es
test
dec
push
dec
dec
je
mov
test
rol
jo
and
pop
popf
and
icebp
das
je
or
mov
mov
hlt
aaa
cmp
les
repz
cs
pop
sti
jecxz
les
repz
cs
pop
sti
jecxz
les
repz
cs
psubq
push
loop
in
ss
mov
add
push
pop
scas
mov
ins
lds
repz
into
lock
(bad)
cli
bound
adc
add
jmp
or
inc
mov
inc
push
out
idiv
les
repz
cs
pop
sti
jecxz
les
repz
cs
pop
sti
jecxz
les
repz
cs
psubq
push
loop
in
aaa
ret
mov
sub
aaa
cmp
es
lock
idiv
es
movs
repz
cs
dec
fsub
cmps
cwde
pop
jno
clc
mov
fiadd
repnz
xor
cmp
retf
in
push
fsub
les
repz
cs
pop
sti
jecxz
les
repz
cs
pop
sti
jecxz
les
repz
cs
psubq
push
loop
in
aaa
ret
mov
push
into
sub
loopne
jmp
test
sti
jecxz
les
repz
outs
push
arpl
fild
push
int3
pop
dec
dec
sub
retf
jg
test
xor
jno
fild
repz
cs
pop
sti
jecxz
les
repz
cs
pop
sti
jecxz
les
repz
cs
psubq
push
loop
in
aaa
ret
mov
jae
push
mov
fs
ins
mov
shl
loope
fsub
data16
test
xchg
dec
jmp
rol
test
xor
pop
loope
ja
in
sbb
inc
push
idiv
and
inc
push
jo
pop
sti
jecxz
les
repz
cs
pop
sti
jecxz
les
repz
cs
psubq
push
loop
in
aaa
ret
mov
repz
push
mov
daa
daa
xor
jmp
pusha
idiv
and
mov
push
int
test
sbb
sub
popa
push
mov
out
push
jns
aas
idiv
and
inc
push
jo
pop
sti
jecxz
les
repz
cs
pop
sti
jecxz
les
repz
cs
psubq
push
loop
in
aaa
ret
mov
push
inc
shl
or
push
pop
mov
inc
shl
gs
pop
fwait
ja
mov
mov
mov
bound
xor
sbb
push
cmp
cwde
and
shl
xlat
cli
(bad)
les
repz
cs
pop
sti
jecxz
les
repz
cs
pop
sti
jecxz
les
repz
cs
psubq
push
loop
in
aaa
ret
mov
repz
outs
push
arpl
daa
rcl
fs
out
inc
(bad)
mov
push
adc
das
xchg
sbb
push
mov
lods
push
or
shl
push
pop
nop
das
nop
jp
je
cmp
mov
pusha
pop
sti
jecxz
les
repz
cs
pop
sti
jecxz
les
repz
cs
psubq
push
loop
in
aaa
ret
mov
repz
outs
push
arpl
pushf
sub
ds
lahf
and
adc
jns
cmp
inc
push
mov
push
fsub
out
in
inc
outs
push
arpl
out
in
inc
outs
push
arpl
sti
jecxz
les
repz
cs
pop
sti
jecxz
les
repz
cs
pop
sti
jecxz
les
repz
cs
psubq
push
loop
in
aaa
ret
mov
repz
cs
push
fsub
(bad)
or
or
adc
dec
dec
and
lods
push
inc
shl
pop
jecxz
fs
shl
pop
jecxz
fs
shl
sti
jecxz
les
repz
cs
pop
sti
jecxz
les
repz
cs
pop
sti
jecxz
les
repz
cs
cvtdq2ps
push
loop
in
xchg
add
add
inc
xchg
or
int3
gs
xor
or
int3
add
popa
or
int3
add
popa
or
int3
add
popa
or
int3
add
popa
or
int3
add
popa
or
int3
add
or
lods
sbb
inc
outs
and
arpl
test
add
inc
ins
in
dec
outs
adc
in
inc
outs
in
inc
outs
in
inc
outs
in
inc
outs
test
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
lahf
imul
add
ds
or
sub
lahf
imul
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
lahf
imul
gs
leave
popa
and
jmp
ret
mov
retf
add
fisttp
ss
add
leave
adc
repz
imul
vunpcklpd
repz
imul
vunpcklpd
(bad)
lahf
imul
add
dec
and
loop
xchg
vunpcklpd
repz
imul
vunpcklpd
repz
imul
ret
or
das
ret
mov
xchg
lds
je
mov
leave
mov
imul
add
dec
and
ret
mov
xlat
and
ds
or
jmp
dec
add
sub
xor
mov
xlat
and
pop
jmp
push
inc
test
test
xchg
(bad)
or
bound
inc
leave
aad
xchg
ds
popa
cs
ret
or
(bad)
jg
add
sub
lds
push
or
bound
inc
mov
mov
add
dec
and
ret
mov
mov
imul
or
jg
add
sub
and
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
add
ss
inc
dec
add
or
in
or
mov
adc
ret
leave
adc
das
ret
mov
retf
add
dec
and
ret
mov
ja
dec
je
dec
fisubr
or
imul
add
inc
or
sub
shr
adc
add
inc
ret
sub
dec
lods
sub
inc
jmp
shr
inc
or
enter
add
sub
and
test
adc
mov
add
dec
and
lahf
imul
test
int
add
sub
inc
or
enter
loope
inc
mov
hlt
jmp
jg
inc
leave
and
(bad)
test
iret
loopne
inc
add
repnz
dec
add
add
fisttp
imul
out
add
inc
add
push
pop
leave
mov
add
ds
sub
or
or
out
and
fs
fs
mov
jecxz
test
out
add
jmp
scas
lods
inc
pavgw
inc
sub
call
mov
leave
and
mov
push
out
pusha
or
fs
jmp
test
ss
mov
dec
bound
dec
ins
and
and
fs
test
call
leave
shl
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
ja
or
jle
add
mov
scas
lock
push
push
std
cmp
lahf
cwde
aam
mov
xchg
fnstenv
or
sub
add
dec
and
ret
mov
ss
sub
mov
dec
push
cmp
pop
cld
mov
aam
cld
push
ss
(bad)
daa
test
lods
xchg
ret
out
sbb
jle
clc
aad
fbstp
xchg
xchg
mov
ds
push
mov
dec
ja
ret
repz
mov
imul
idiv
xchg
sub
dec
and
mov
ja
repz
retf
dec
ja
ret
jno
stos
or
mov
jo
mov
leave
sub
pop
xchg
repnz
hlt
cmp
(bad)
sbb
out
pushf
stos
push
inc
cmps
push
cmovno
dec
movs
and
push
mov
xchg
jns
lahf
(bad)
fdiv
pop
fst
xlat
lahf
lahf
xchg
call
and
push
lods
das
loopne
and
mov
(bad)
jg
pop
xor
cdq
mov
aad
aas
jno
push
repz
out
mov
mov
lock
cmp
adc
popf
icebp
pop
std
lock
in
mov
fdiv
hlt
fdiv
sbb
ds
fwait
mov
pop
pop
das
pop
mov
in
mov
sub
outs
pusha
or
aaa
mov
hlt
pop
call
push
push
(bad)
and
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
ss
in
mov
mov
sbb
cmp
xchg
sbb
mov
push
xor
out
arpl
clc
mov
sar
mov
pop
shl
inc
and
or
xor
mov
test
test
nop
sbb
adc
ds
xor
mov
fldcw
ror
popf
lock
cwde
mov
xchg
sbb
mov
push
fdiv
cmp
std
adc
cdq
mov
xchg
sbb
mov
jne
fisub
ror
xor
mov
aam
in
cld
mov
xchg
sbb
mov
xchg
mov
sub
pop
mov
cdq
mov
xchg
mov
sar
jbe
xchg
mov
mov
xchg
jo
iret
and
clc
cmp
xchg
sbb
mov
lahf
(bad)
mov
jns
sub
call
dec
mov
xchg
sbb
je
pop
ds
fnstsw
mov
mov
cdq
mov
xlat
jge
mov
xchg
sbb
mov
icebp
mov
dec
repz
adc
mov
xchg
mov
push
call
fdivr
xor
mov
(bad)
jnp
xchg
sbb
mov
push
fdiv
push
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
mov
sub
mov
leave
fnsave
sbb
mov
xor
adc
das
ret
mov
retf
add
dec
and
ret
mov
mov
sbb
xor
fimul
xor
jmp
lahf
imul
mov
xchg
sbb
das
ret
mov
retf
add
sbb
cmp
cmp
jnp
mov
xchg
sbb
xor
mov
push
fiadd
cmp
ds
loope
or
mov
xchg
sbb
mov
repnz
ret
mov
retf
add
dec
and
ret
mov
xchg
les
lods
pop
xlat
rcl
mov
xchg
sbb
xchg
pop
xchg
les
dec
and
xchg
sbb
xchg
dec
and
ret
mov
adc
cmp
pop
mov
mov
xchg
sbb
pop
xchg
pushf
retf
add
fmul
int3
sub
div
popf
lock
cwde
mov
jno
sbb
mov
test
add
dec
and
inc
mov
cdq
mov
xchg
sbb
mov
xchg
cli
jno
ds
jecxz
pop
or
mov
xchg
pushf
retf
add
dec
and
ret
mov
push
mov
xchg
sbb
mov
xchg
sbb
xchg
sbb
mov
popf
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
loope
mov
pop
mov
pop
mov
xchg
sbb
vmread
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
sbb
lods
pop
xor
and
jmp
xchg
pop
sbb
mov
xchg
cli
mov
das
ret
mov
retf
add
dec
and
pop
jmp
cdq
mov
xchg
sbb
scas
icebp
push
push
das
ret
mov
retf
add
dec
and
mov
pop
cwde
sbb
mov
adc
mov
retf
add
dec
and
ret
mov
retf
add
loope
cmp
xchg
sbb
add
sub
xchg
sbb
outs
lock
out
test
add
dec
and
ret
mov
push
dec
or
mov
xchg
sbb
mov
sbb
out
mov
add
fisubr
loopne
cmps
pusha
adc
mov
xchg
cli
mov
das
ret
mov
retf
add
dec
and
ret
mov
jmp
mov
xchg
sbb
mov
mov
mov
or
mov
mov
xchg
sbb
daa
ror
das
ret
mov
pop
add
lock
cwde
mov
xchg
sbb
inc
ficom
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
mov
test
sub
jl
dec
sbb
xchg
sbb
cs
push
das
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
lahf
imul
pop
xchg
std
jno
jle
and
mov
cdq
mov
xchg
cli
call
mov
retf
add
dec
and
rcr
sbb
mov
adc
das
ret
mov
retf
add
dec
and
test
lock
pushf
sbb
mov
pop
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
and
pusha
jge
sbb
mov
xchg
sbb
out
fucomip
pop
sub
xchg
mov
xchg
sbb
inc
ret
or
cmovs
das
ret
mov
test
(bad)
popf
mov
xchg
sbb
out
test
add
ror
mov
nop
sbb
mov
cli
add
and
ret
mov
retf
add
dec
and
ret
mov
push
dec
dec
xor
cdq
mov
xchg
sbb
mov
test
and
or
xchg
sbb
mov
sbb
cmps
loop
retf
add
dec
and
ret
mov
mov
or
xchg
mov
xchg
sbb
out
mov
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
jbe
push
enter
sbb
mov
xchg
mov
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
ja
xchg
cmp
jecxz
sbb
xchg
sbb
test
sub
ret
mov
retf
add
dec
and
test
lock
pushf
sbb
mov
adc
das
ret
mov
retf
add
dec
and
test
lock
pushf
sbb
mov
pop
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
and
pusha
jge
sbb
mov
xchg
sbb
out
fucomip
pop
add
imul
lahf
mov
xchg
sbb
(bad)
and
and
ret
mov
test
push
xchg
mov
xchg
sbb
out
sub
les
lods
cmp
adc
mov
xchg
cdq
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
pop
add
imul
popf
mov
xchg
sbb
push
inc
mov
cmp
xchg
sbb
mov
sbb
jecxz
dec
and
ret
mov
xchg
(bad)
leave
mov
std
jg
mov
xchg
sbb
out
mov
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
test
test
ins
jge
push
pushf
mov
xchg
sbb
xchg
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
pop
imul
cmp
add
jl
cdq
sbb
mov
shl
push
adc
test
retf
add
dec
and
test
lock
pushf
sbb
mov
adc
das
ret
mov
retf
add
dec
and
test
lock
pushf
sbb
mov
pop
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
and
pusha
jge
sbb
mov
xchg
sbb
out
fisttp
in
pop
je
xchg
mov
xchg
sbb
scas
jmp
and
ret
mov
test
push
xchg
mov
xchg
sbb
out
sub
jge
dec
mov
xchg
sbb
out
nop
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
test
repnz
mov
xchg
sbb
out
sub
les
(bad)
std
sti
mov
mov
xchg
sbb
outs
push
repz
gs
retf
das
ret
mov
xchg
(bad)
leave
mov
std
jg
mov
xchg
sbb
out
mov
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
lahf
imul
imul
mov
xchg
sbb
pop
inc
mov
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
xchg
vpmullw
adc
jo
cmp
sbb
mov
mov
sbb
jl
lea
inc
and
or
test
lock
pushf
sbb
mov
adc
das
ret
mov
retf
add
dec
and
test
lock
pushf
sbb
mov
pop
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
and
pusha
jge
sbb
mov
xchg
sbb
out
fisttp
ja
leave
aad
pop
fist
mov
xchg
sbb
in
adc
and
lahf
imul
add
sub
xchg
sbb
scas
xchg
sbb
out
sub
pop
add
imul
xchg
mov
xchg
sbb
xchg
mov
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
xlat
and
or
xchg
sbb
scas
xchg
sbb
out
test
add
fisttp
mov
xchg
sbb
mov
call
lahf
imul
(bad)
leave
mov
std
jg
mov
xchg
sbb
out
mov
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
shr
and
mov
xchg
sbb
(bad)
xlat
mov
out
test
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
sbb
in
out
sbb
pop
cld
mov
xchg
sbb
xchg
rcr
(bad)
test
sub
ret
lock
pushf
sbb
mov
adc
das
ret
mov
retf
add
dec
and
test
lock
pushf
sbb
mov
pop
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
and
pusha
jge
sbb
mov
xchg
sbb
out
mov
add
jle
mov
mov
xchg
sbb
cs
not
jae
push
inc
into
and
pop
mov
sub
clc
push
xchg
mov
xchg
sbb
out
sub
sub
nop
mov
xchg
sbb
out
test
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
mov
or
in
cmp
xchg
sbb
scas
xchg
sbb
out
test
add
ds
mov
mov
xchg
sbb
mov
xor
push
inc
ret
jmp
retf
xchg
sbb
mov
sbb
out
mov
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
jle
shl
sbb
mov
xchg
sbb
out
test
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
pop
test
je
inc
je
pop
push
adc
mov
xchg
sbb
or
xchg
push
inc
outs
pusha
push
test
lock
pushf
sbb
mov
adc
das
ret
mov
retf
add
dec
and
test
lock
pushf
sbb
mov
pop
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
and
pusha
jge
sbb
mov
xchg
sbb
out
mov
add
dec
and
mov
sbb
mov
xchg
sbb
sub
sub
push
push
xchg
mov
xchg
sbb
out
sub
fs
stos
ins
pop
push
mov
cdq
mov
xchg
sbb
out
test
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
xchg
(bad)
jmp
xor
cdq
mov
xchg
sbb
out
test
add
dec
and
and
sar
sbb
mov
aad
pop
test
call
jmp
mov
xchg
sbb
out
mov
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
add
cmp
inc
sbb
xchg
sbb
mov
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
pop
dec
adc
xchg
lahf
imul
pop
cmp
aas
jl
ds
std
adc
cdq
mov
push
jae
jbe
in
adc
pushf
sbb
mov
adc
das
ret
mov
retf
add
dec
and
test
lock
pushf
sbb
mov
pop
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
and
pusha
jge
sbb
mov
xchg
sbb
out
mov
add
dec
and
ret
mov
xchg
enter
fidivr
push
pop
mov
cmp
xchg
sbb
stos
cmp
stos
pop
sbb
mov
xchg
sbb
out
sub
pop
or
pop
xor
sbb
dec
mov
sbb
sub
das
ret
mov
retf
add
dec
and
ret
mov
mov
or
in
std
jg
mov
xchg
sbb
out
test
add
dec
and
ret
mov
ja
sub
mov
mov
sar
ja
cmp
xchg
fidivr
jge
or
mov
xchg
sbb
out
mov
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
mov
or
mov
xchg
sbb
das
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
xchg
mov
jae
fst
jg
mov
nop
sbb
mov
adc
das
ret
mov
retf
add
dec
and
test
lock
pushf
sbb
mov
pop
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
and
pusha
jge
sbb
mov
xchg
sbb
out
mov
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
pushf
or
fstp
sbb
mov
xchg
sbb
out
sub
mov
xchg
sbb
mov
sbb
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
xlat
and
or
xchg
sbb
scas
xchg
sbb
out
test
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
mov
dec
pop
cmp
lock
cwde
mov
xchg
sbb
out
mov
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
add
pusha
cmp
xchg
sbb
mov
jno
shr
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
sahf
push
inc
popf
pop
adc
mov
xchg
sbb
das
ret
mov
retf
add
dec
and
test
lock
pushf
sbb
mov
pop
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
inc
packsswb
sbb
mov
xchg
sbb
out
mov
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
xchg
mov
cmp
mov
xchg
sbb
scas
xchg
sbb
out
sub
jmp
xor
xchg
sbb
inc
pusha
mov
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
test
push
xchg
mov
xchg
sbb
out
test
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
ss
test
sbb
mov
xchg
sbb
out
mov
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
arpl
arpl
sbb
mov
xchg
sbb
scas
adc
xlat
das
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
mov
or
cmovs
das
ret
mov
retf
add
dec
and
loope
inc
arpl
xchg
sbb
mov
adc
das
ret
mov
retf
add
dec
and
test
lock
pushf
sbb
mov
pop
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
sub
xor
cdq
mov
xchg
sbb
out
mov
add
dec
and
ret
mov
mov
leave
adc
das
ret
mov
retf
add
dec
and
ret
mov
pop
add
imul
call
sbb
out
sub
in
adc
mov
xchg
sbb
daa
pop
mov
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
pop
sub
xchg
mov
xchg
sbb
out
test
add
dec
and
ret
mov
xlat
and
jg
add
sub
das
ret
mov
mov
sub
in
std
push
repnz
mov
xchg
sbb
out
mov
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
mov
pop
cdq
mov
xchg
sbb
mov
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
test
outs
sub
ret
test
sub
or
test
lock
pushf
sbb
mov
adc
das
ret
mov
retf
add
dec
and
test
lock
pushf
sbb
mov
pop
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
adc
cmp
sbb
out
mov
add
jmp
dec
les
test
retf
add
dec
and
ret
mov
test
mov
mov
xchg
sbb
out
test
add
popa
or
mov
xchg
sbb
jns
ja
or
das
ret
mov
retf
add
dec
and
ret
mov
jbe
leave
or
mov
xchg
sbb
out
test
add
dec
and
fisttp
dec
and
mov
mov
leave
mov
add
dec
and
ret
mov
xchg
(bad)
leave
mov
mov
xchg
sbb
mov
sbb
out
mov
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
ret
dec
cmp
sbb
mov
adc
das
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
jmp
aam
jmp
add
das
ret
mov
retf
add
dec
and
rcl
sbb
mov
adc
das
ret
mov
retf
add
dec
and
test
lock
pushf
sbb
mov
lock
das
ret
mov
retf
add
dec
and
ret
mov
xchg
les
ins
cmp
sbb
xchg
mov
add
loope
shr
adc
xchg
or
cmovs
das
ret
mov
test
push
xchg
mov
xchg
sbb
out
test
add
mov
adc
mov
adc
mov
push
dec
and
ret
mov
retf
add
dec
and
ret
mov
or
push
pop
call
sbb
out
test
add
sahf
push
sub
push
loop
mov
mov
or
cmovs
das
ret
mov
mov
jmp
jmp
xchg
sbb
out
mov
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
mov
sbb
mov
xchg
sbb
das
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
dec
int
xor
mov
xchg
sbb
scas
jg
add
sub
mov
leave
inc
push
fs
fstp
cdq
mov
adc
das
ret
mov
retf
add
dec
and
loope
inc
ret
lock
pushf
sbb
mov
adc
aaa
(bad)
jg
add
sub
das
ret
mov
test
dec
mov
xchg
sbb
xchg
mov
add
inc
outs
pusha
popf
pop
or
mov
sbb
daa
pushf
mov
add
dec
and
ret
mov
ss
stos
ins
pop
sbb
mov
xchg
sbb
out
test
add
dec
and
fisttp
fdivr
xchg
sbb
add
ret
mov
retf
add
dec
and
bound
dec
mov
xchg
sbb
scas
xchg
sbb
out
test
add
fisubr
rcr
sbb
outs
cdq
xor
das
ret
mov
test
jmp
mov
xchg
sbb
xchg
mov
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
sub
xchg
sbb
mov
xchg
sbb
das
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
xchg
mov
repz
mov
xchg
sbb
jae
test
retf
add
add
cli
out
(bad)
cdq
sbb
mov
adc
das
ret
mov
ja
or
shr
mov
loopne
fstp
cdq
mov
rcr
sar
add
mov
retf
xchg
lahf
imul
out
sub
popf
call
mov
mov
sbb
sub
adc
push
sbb
cdq
mov
xchg
sbb
add
ret
mov
or
dec
dec
out
std
xlat
jge
mov
xchg
sbb
out
test
add
dec
and
and
cdq
mov
xchg
cmp
sub
xlat
or
add
and
jle
ror
cmp
mov
xchg
sbb
scas
xchg
sbb
out
test
add
dec
and
loope
cdq
mov
xchg
sbb
test
mov
(bad)
xchg
or
mov
xchg
sbb
pop
inc
mov
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
and
mov
mov
xchg
sbb
mov
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
xlat
sub
fwait
cwde
mov
xchg
sbb
mov
stos
in
lods
inc
mov
mov
sbb
mov
cmp
add
dec
and
ret
mov
xchg
lds
mov
mov
xchg
sbb
mov
xchg
pop
sbb
push
popf
push
mov
cmc
push
shr
test
and
stos
dec
ins
std
lock
cdq
mov
div
adc
add
dec
and
fisttp
fdivr
xchg
sbb
test
lea
in
dec
stos
dec
retf
xchg
sbb
mov
div
adc
add
dec
and
ret
mov
not
leave
lock
mov
xchg
sbb
in
dec
dec
imul
out
loopne
cmps
add
pushf
sbb
mov
xchg
sbb
out
test
add
dec
and
lahf
imul
jge
sbb
mov
jp
test
lods
or
lds
dec
fst
call
sbb
out
test
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
sub
mov
xchg
sbb
movs
rcl
das
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
mov
push
cdq
mov
rcr
test
call
push
mov
xchg
sbb
out
nop
retf
add
dec
and
ret
mov
ja
or
fcom
cdq
mov
xchg
sbb
or
ds
xchg
aam
xchg
retf
and
mov
das
adc
sbb
mov
aas
mov
out
test
add
dec
and
ret
mov
mov
movs
mov
cdq
mov
jo
xchg
mov
inc
mov
ret
mov
xchg
sbb
das
ret
mov
retf
add
dec
and
ret
mov
retf
add
pop
mov
fst
sbb
mov
repz
js
mov
mov
cdq
mov
sti
mov
jge
sbb
mov
xchg
sbb
out
test
add
dec
and
ret
mov
neg
xchg
sbb
mov
xchg
push
lods
inc
or
in
inc
inc
idiv
xchg
sbb
mov
cmp
movntq
test
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
loope
loopne
mov
sbb
mov
jno
imul
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
ja
leave
adc
out
lahf
imul
add
dec
and
add
aam
pop
fidivr
ds
mov
xchg
sbb
sbb
sahf
popf
adc
xor
sbb
test
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
shr
arpl
cli
ss
mov
mov
dec
and
add
pop
pop
stc
mov
mov
push
jnp
sbb
mov
jecxz
dec
and
ret
mov
retf
add
dec
and
ret
mov
ja
or
stc
mov
std
cmp
xchg
sbb
mov
xchg
mov
adc
das
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
add
repz
and
pop
xor
cdq
mov
mov
sbb
mov
out
pusha
jge
sbb
mov
xchg
sbb
out
sub
imul
imul
pushf
ja
sbb
xchg
sbb
sbb
fild
not
xchg
ds
or
test
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
pop
jmp
cdq
mov
xchg
sbb
mov
adc
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
mov
jmp
leave
mov
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
and
pusha
jge
sbb
mov
xchg
sbb
inc
mov
sub
and
inc
or
fs
mov
out
test
add
lahf
imul
xor
mov
imul
out
add
inc
arpl
in
push
or
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
in
ficomp
sbb
mov
jno
pop
(bad)
jg
add
sub
das
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
ss
in
push
cmp
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
and
pusha
jge
sbb
mov
xchg
sbb
test
enter
push
mov
cmp
(bad)
cwde
push
push
out
sub
in
je
xchg
ds
and
and
ja
or
xor
mov
mov
push
mov
std
aaa
pop
pushf
push
das
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
bound
adc
xchg
sbb
mov
mov
test
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
or
call
pop
pop
xchg
mov
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
and
pusha
jge
sbb
mov
xchg
sbb
test
enter
xchg
sbb
mov
ss
mov
jecxz
test
(bad)
mov
inc
or
xor
mov
retf
std
mov
cdq
mov
xchg
sbb
das
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
jmp
mov
xchg
sbb
push
xchg
nop
mov
loop
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
call
mov
sbb
daa
ror
das
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
and
pusha
jge
sbb
mov
xchg
sbb
test
enter
xchg
sbb
mov
ss
jne
inc
ret
enter
mov
xchg
jbe
daa
ss
xor
mov
dec
and
mov
xchg
sbb
das
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
test
xchg
sbb
mov
sar
ja
or
das
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
in
jmp
imul
scas
xchg
sbb
out
test
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
and
pusha
jge
sbb
mov
xchg
sbb
test
enter
xchg
sbb
mov
jbe
adc
int
xchg
push
mov
xchg
sbb
sar
push
retf
std
mov
cdq
mov
xchg
sbb
das
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
ja
test
pop
mov
xchg
sbb
mov
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
sahf
push
mov
mov
xchg
sbb
out
test
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
inc
packsswb
sbb
mov
xchg
sbb
test
enter
xchg
sbb
mov
xchg
nop
aad
and
push
pop
lahf
sbb
mov
xchg
sbb
sub
retf
std
mov
cdq
mov
xchg
sbb
das
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
pop
jmp
cdq
mov
xchg
sbb
gs
scas
jg
add
sub
das
ret
mov
retf
add
dec
and
ret
mov
ja
leave
aad
das
loopne
mov
std
xchg
sbb
out
test
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
ja
sub
arpl
sbb
mov
xchg
sbb
test
enter
xchg
sbb
mov
jbe
mov
movs
inc
call
sbb
mov
xchg
sbb
fsubr
cdq
mov
xchg
sbb
das
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
inc
inc
pop
cmp
xchg
sbb
or
imul
mov
leave
mov
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
jbe
jmp
mov
jge
adc
outs
lock
out
test
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
test
mov
mov
xchg
sbb
test
enter
xchg
sbb
mov
ss
adc
rcr
xchg
xchg
mov
mov
aad
xlat
mov
stos
pop
test
std
mov
cdq
mov
xchg
sbb
das
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
not
imul
cdq
mov
sbb
add
jg
add
sub
in
xor
lods
ds
mov
inc
mov
nop
mov
xchg
sbb
out
test
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
jmp
dec
(bad)
or
iret
sbb
xchg
sbb
mov
sbb
test
enter
xchg
sbb
mov
ss
adc
vpmullw
hlt
cld
sahf
mov
icebp
push
push
xor
mov
retf
std
mov
cdq
mov
xchg
sbb
das
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
mov
sbb
mov
xchg
sbb
clc
adc
leave
mov
jb
push
and
enter
sub
pop
daa
sahf
sbb
xchg
sbb
mov
push
ds
out
test
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
jle
add
in
call
popf
rcr
cdq
mov
xchg
sbb
scas
enter
xchg
sbb
mov
push
push
adc
add
mov
push
adc
xor
mov
call
mov
xchg
sbb
das
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
xor
arpl
fdivr
xchg
cmp
adc
sbb
lods
jl
mov
add
sbb
xchg
or
adc
js
sbb
hlt
(bad)
push
ds
fnstsw
mov
out
test
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
jmp
cmp
xchg
sbb
mov
mov
sbb
sub
mov
xchg
sbb
scas
div
adc
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
ss
sbb
mov
adc
pop
out
test
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
pushf
or
call
mov
mov
xchg
sbb
mov
cmp
push
das
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
retf
add
dec
and
ret
mov
(bad)
adc
outs
push
into
jmp
jmp
imul
inc
xlat
add
aad
dec
and
es
mov
cli
cmp
xchg
dec
ds
outs
in
pop
mov
cmp
dec
outs
in
jno
pop
rcr
and
mov
lahf
jle
data16
mov
add
lods
mov
and
add
loop
loopne
bound
and
imul
outs
in
(bad)
lds
inc
dec
in
dec
push
mov
pop
outs
test
fisttp
push
arpl
jg
push
jmp
loope
jg
inc
jmp
in
jmp
pop
repz
push
inc
push
les
inc
jae
lds
data16
pop
hlt
outs
jae
movs
pop
inc
in
jbe
sbb
ret
outs
pop
jae
repnz
aam
movs
add
sbb
sub
cmp
and
movs
cdq
in
movs
cmps
pop
adc
vshufpd
in
(bad)
adc
and
push
popaw
vshufpd
iret
jmp
call
in
lods
movs
leave
jmp
vshufpd
in
lahf
and
in
inc
cmp
(bad)
adc
call
lods
retf
push
retf
xor
aaa
push
test
xchg
in
movs
fiadd
cmp
cli
pop
(bad)
cli
and
fxch
fucomp
cmps
adc
movs
in
(bad)
sbb
adc
into
mov
int
add
test
xchg
sbb
and
popa
vcvttpd2dq
push
jmp
(bad)
adc
loope
jle
in
into
xor
test
vshufpd
or
cmp
lea
cmc
ror
ins
mov
cmp
int
pop
lds
sbb
in
fwait
arpl
std
into
push
aad
jns
je
into
jne
push
lea
mov
(bad)
ins
sub
iret
int3
or
(bad)
jne
lea
(bad)
int
mov
xor
aad
mov
mov
or
(bad)
adc
or
cdq
and
addr16
test
cmp
add
cmp
adc
push
mov
movs
inc
cmps
mov
and
cli
mov
imul
jo
shl
xor
cmp
test
fwait
mov
lods
jno
(bad)
in
test
sub
jmp
mov
(bad)
sti
adc
(bad)
adc
ror
jge
test
in
loop
ror
call
bound
sub
cmc
in
or
jb
sbb
call
ret
iret
iret
lods
xor
movs
(bad)
cmc
jp
sub
and
stc
test
adc
or
adc
jmp
sti
fs
cli
sar
shl
xor
in
cmps
mov
sbb
cmp
stos
fidivr
mov
mov
(bad)
inc
mov
popf
fadd
mov
aad
mov
nop
in
jno
pusha
push
mov
popa
dec
cdq
sbb
pop
fdivr
(bad)
out
call
fdivr
(bad)
out
pop
xchg
fnstcw
out
cmp
mov
out
sub
adc
(bad)
stos
mov
jbe
xchg
adc
inc
loop
xchg
test
sbb
adc
sbb
and
aaa
out
cmc
add
sub
dec
pusha
jmp
stos
ja
sbb
out
cmc
sbb
popf
out
sub
push
pusha
mov
lock
adc
push
imul
jmp
test
xor
xor
jmp
(bad)
jmp
dec
fist
push
adc
popf
jne
lahf
xchg
cmc
dec
int3
xor
into
or
xor
and
push
push
pop
mov
test
adc
or
lahf
ja
mov
jge
xor
push
cmp
in
jl
ret
add
dec
ins
bound
xor
mov
push
test
stc
inc
pop
mov
loope
mov
(bad)
mov
rcl
sub
push
add
jno
mov
aad
jmp
imul
in
imul
jae
mov
sub
xchg
push
ja
and
sub
nop
mov
js
jo
test
xor
adc
add
mov
fstp
shl
icebp
add
mov
out
xchg
clc
call
mov
xchg
(bad)
mov
mov
sbb
push
lea
mov
fcmovb
adc
and
jmp
mov
mov
scas
rol
dec
mov
cmp
xchg
test
movs
mov
sar
add
jmp
xor
jp
(bad)
xor
cmp
add
lods
lock
jmp
lods
push
cmp
in
jl
ror
stos
popf
in
mov
cdq
and
outs
mov
shl
push
push
loopne
ins
mov
fstp
iret
push
sbb
or
pop
pop
adc
lods
loope
push
cli
(bad)
mov
sbb
push
cmp
jmp
cli
push
std
adc
push
pop
cwde
arpl
popf
jmp
fs
push
mov
add
cld
xor
in
push
pop
in
push
icebp
push
sti
and
cmps
stos
loope
push
push
in
push
icebp
push
mov
add
or
xchg
jno
pop
xchg
loope
cmp
imul
or
and
rcl
push
jp
movs
jmp
dec
ror
push
jns
sti
jmp
sub
xchg
loope
mov
mov
pop
rol
mov
ret
jmp
arpl
(bad)
pop
fild
shr
jge
push
pop
lods
loope
jnp
add
push
daa
mov
rcr
nop
sar
or
mov
(bad)
inc
xchg
mov
inc
xchg
cmp
imul
and
loop
push
icebp
push
sbb
mov
jl
icebp
push
pop
or
mov
icebp
mov
pop
jp
mov
loope
push
xchg
push
std
pop
mov
loope
adc
repnz
ret
jmp
arpl
(bad)
pop
fcmovne
jl
arpl
jge
jno
test
push
push
pop
jp
mov
loope
xchg
mov
or
sbb
mov
sti
mov
or
std
pop
icebp
push
fistp
imul
pushf
jl
(bad)
out
mov
xor
jb
mov
push
and
mov
icebp
push
jnp
outs
es
ror
mov
adc
push
mov
int
inc
jnp
fbstp
(bad)
jae
jb
xchg
(bad)
sti
xor
inc
pusha
push
mov
add
jmp
loop
cmp
jle
rcl
push
cld
cmp
mov
adc
loop
jo
push
icebp
push
mov
pop
lahf
es
lds
and
jecxz
dec
cmps
mov
lods
push
fiadd
pop
dec
rcl
cwde
inc
out
jmp
pop
jbe
icebp
push
cmp
and
mov
dec
ror
adc
fld
loope
xchg
movs
in
dec
jmp
push
icebp
push
mov
int
and
(bad)
ficomp
jne
mov
cmp
sub
mov
and
ins
push
icebp
push
sti
mov
jg
push
add
lds
ret
clc
stos
fsubr
(bad)
xor
rol
es
mov
ins
push
icebp
push
sti
mov
jg
imul
dec
rcr
mov
cmps
or
rcl
cld
xor
in
fstp
jl
mov
gs
std
push
icebp
push
sti
and
out
stos
loope
push
mov
inc
xor
inc
mov
cmps
add
sbb
push
mov
ret
in
sti
mov
pop
mov
inc
push
pop
fstp
shl
scas
add
fstp
test
(bad)
rcl
mov
in
loopne
jb
loope
cmp
movs
and
mov
(bad)
push
or
out
imul
int3
push
sti
or
movs
pop
push
and
fistp
aas
jmp
jle
inc
nop
push
mov
ret
into
adc
stos
std
fnstenv
shr
sub
push
push
lea
out
ret
into
xchg
fs
inc
pop
out
adc
xor
push
nop
test
jno
fstp
pusha
lods
loope
cwde
lds
in
(bad)
xor
les
mov
mov
repz
adc
stc
sub
in
(bad)
jne
pop
(bad)
std
shr
push
pop
jp
inc
cmp
sti
(bad)
adc
jp
mov
outs
ret
cmp
add
mov
adc
into
pop
stc
vpermi2w
push
scas
ins
push
nop
cmp
and
pop
aam
push
xchg
fstp
jo
mov
pop
retf
(bad)
bound
shl
xchg
jp
adc
inc
adc
adc
cmps
shl
retf
lea
gs
jo
mov
add
inc
mov
push
cwde
sahf
cmp
fld
cmp
cmp
sub
and
in
mov
sbb
cmp
sbb
sbb
std
sub
lds
call
jmp
stc
mov
jo
loop
bnd
hlt
jb
mov
or
jmp
mov
push
pop
(bad)
or
fst
push
fbld
or
fbld
or
outs
xchg
inc
mov
stos
movs
add
fbld
push
and
cmp
xlat
mov
(bad)
cmps
cmps
pop
rcl
push
fbld
(bad)
fbld
and
push
fbld
imul
adc
and
test
je
loopne
lds
outs
sub
push
dec
(bad)
addr16
sbb
mov
and
inc
mov
mov
add
mov
jge
add
xor
test
add
dec
leave
and
fld
mov
push
pop
leave
and
pusha
inc
push
mov
mov
add
pusha
jecxz
inc
xlat
inc
mov
mov
add
mov
adc
add
pusha
jecxz
inc
xlat
shl
xlat
or
xchg
(bad)
out
fbld
xchg
cmp
sbb
sbb
mov
mov
ja
cmp
cli
jmp
push
icebp
test
and
push
repnz
(bad)
and
xchg
pop
sub
adc
inc
add
jns
pop
xlat
sub
call
xlat
mov
or
dec
mov
cmp
push
lea
fmul
test
in
sub
repz
or
cmp
repnz
mov
sbb
sbb
mov
movs
gs
sbb
and
in
cmps
mov
mov
xchg
(bad)
push
dec
pop
test
ret
adc
jne
enter
push
out
rcl
push
cmp
adc
retf
cmp
addr16
in
cmp
shr
cmps
inc
push
das
sub
movs
lock
adc
jge
stc
jmp
dec
ffreep
int
pop
fsubr
push
ret
into
xor
movs
xchg
imul
(bad)
fstp
hlt
push
es
inc
adc
add
into
mov
stc
or
in
(bad)
push
jnp
xor
or
(bad)
icebp
enter
call
mov
lock
ins
in
test
dec
mov
lock
hlt
ret
sub
adc
jno
aaa
mov
pop
mov
fwait
pop
cmp
cmp
xchg
ficomp
rcl
push
sbb
lea
jmp
mov
test
adc
sub
sub
sub
(bad)
mov
(bad)
daa
inc
in
sub
push
cdq
shl
jg
cdq
loop
retf
mov
mov
fdiv
ret
ss
ss
daa
ret
sahf
les
jp
(bad)
adc
daa
ret
sahf
(bad)
mov
pop
mov
adc
sahf
inc
mov
fidivr
ret
fsubr
adc
mov
cmps
fdivr
ret
push
jae
fidiv
ret
ss
rcr
fbstp
sub
xchg
pop
subps
mov
into
std
mov
cmp
call
ds
retf
fmul
xchg
xchg
fisttp
push
push
into
aaa
push
push
into
xchg
xchg
inc
jb
xor
retf
sbb
sbb
jbe
pop
xlat
jbe
sbb
daa
ret
sahf
mov
repz
dec
rcr
jae
test
bound
fcom
pop
aaa
ror
jge
and
sub
cmps
aam
jge
inc
jle
mov
imul
push
xlat
jbe
pop
xlat
jbe
pop
xlat
jbe
pop
xlat
cwde
jae
push
or
sbb
sahf
xor
xor
stc
neg
rol
jp
xor
retf
ss
ss
or
cmp
xor
ds
cwde
jae
push
or
sbb
sahf
add
jle
mov
idiv
iret
shl
sub
cmps
aam
jge
inc
js
stc
gs
cmps
sbb
mov
fild
retf
mov
(bad)
push
xlat
jbe
pop
xlat
jbe
pop
xlat
jbe
pop
xlat
cwde
jae
push
or
sbb
sahf
xor
sahf
bound
ss
fidiv
mov
cmc
imul
sbb
pop
push
cmp
push
retf
aaa
ret
mov
test
es
mov
jge
ss
rcr
popf
pusha
adc
jns
mov
aaa
rcr
bound
push
push
fild
les
adc
or
mov
cli
sahf
add
fisubr
popa
out
pop
push
xor
aaa
adc
pop
int
cmp
fucomip
jnp
sbb
mov
adc
aam
data16
mov
adc
fidiv
(bad)
or
(bad)
cwde
js
(bad)
adc
cmps
pop
adc
cli
in
cmc
mov
es
gs
sbb
jmp
push
cmp
test
hlt
mov
stc
gs
xchg
aam
lds
jno
mov
xchg
cmp
sub
mov
rcr
mov
push
(bad)
cmp
cmp
outs
inc
sar
fsubr
cmps
and
hlt
shl
mov
std
(bad)
adc
test
cmp
leave
in
push
ret
into
xor
ficomp
cmp
cmp
(bad)
adc
inc
rcr
add
mov
sub
or
in
mov
sbb
adc
scas
call
mov
xor
xor
dec
mov
adc
loope
data16
lods
push
xchg
add
pushf
into
jmp
es
lea
jb
push
data16
xchg
mov
call
sub
push
mov
stc
add
in
(bad)
push
(bad)
dec
xor
shr
jmp
aam
mov
adc
push
fiadd
jne
out
es
mov
pop
jne
or
add
push
and
and
cmp
and
cli
sar
sbb
cmp
stc
gs
outs
push
in
mov
cdq
add
shl
push
xchg
arpl
jle
mov
jle
mov
jle
mov
cmc
push
imul
repz
sbb
push
imul
push
imul
fdiv
xor
rol
jle
xchg
inc
jp
mov
push
div
ds
stc
mov
rol
ror
mov
sti
push
dec
fidiv
mov
pop
inc
mov
idiv
stos
adc
jle
mov
out
ficomp
fdiv
lods
repz
icebp
jb
div
arpl
and
not
mov
fdiv
sbb
mov
fimul
mov
aam
stos
repz
(bad)
shl
push
dec
icebp
call
push
rcr
mov
push
dec
sahf
push
push
push
xchg
sti
pop
loopne
in
dec
scas
mov
dec
mov
(bad)
pop
or
or
jmp
or
aaa
cmp
mov
gs
adc
sbb
into
adc
stos
std
fnstenv
shr
test
aaa
cmp
push
lods
sub
(bad)
inc
test
in
(bad)
jne
lods
fcom
lods
push
push
jnp
stc
gs
adc
ficomp
shl
or
enter
mov
out
cli
sbb
mov
adc
movs
aam
loopne
mov
fwait
jns
shl
mov
test
sahf
jp
sbb
fsubr
cmps
and
shr
cmps
dec
add
cmp
scas
(bad)
int3
movs
ja
movs
call
test
xor
(bad)
xor
cmp
mov
push
int3
sti
or
in
xchg
clc
mov
sub
(bad)
adc
clc
xchg
add
add
xchg
ret
pop
xor
adc
scas
cmp
push
fwait
outs
(bad)
jb
call
mov
lock
shl
mov
xchg
mov
mov
rcr
cli
cmp
mov
icebp
scas
adc
jne
nop
in
mov
dec
aad
call
sub
adc
sub
add
jmp
rcl
adc
imul
mov
out
cdq
inc
mov
(bad)
icebp
fadd
lods
stc
dec
xor
cmp
gs
(bad)
adc
and
ret
lea
mov
or
in
cmps
ret
jge
popf
fwait
xchg
adc
cwde
mov
call
call
pop
sbb
add
aam
add
hlt
add
loopne
je
add
cmps
hlt
add
and
adc
shl
mov
add
add
mov
shl
cmps
aam
add
repnz
popf
movaps
lods
or
(bad)
leave
pop
pop
sub
scas
je
stos
out
fdivrp
jmp
pop
lea
fcomp
lea
fcomp
scas
mov
(bad)
cmp
pop
jg
sub
sbb
cmps
aam
add
aam
mov
stos
dec
jmp
mov
cdq
popf
mov
inc
sub
mov
inc
fwait
or
mov
adc
push
mov
sbb
jg
sub
adc
aad
dec
cmp
mov
push
mov
sub
test
mov
test
aas
das
mov
movs
aas
push
(bad)
mov
(bad)
dec
mov
leave
cmps
xchg
lock
stos
xchg
mov
inc
ja
mov
adc
aam
dec
lods
aam
or
stos
xchg
mov
mov
iret
call
retf
sub
sub
cmp
cmp
or
or
mov
push
imul
fdiv
or
stos
xchg
mov
inc
ja
mov
or
cmps
aam
dec
cmps
aam
or
pop
imul
push
xchg
jnp
mov
jmp
or
push
je
add
mov
push
pop
mov
aam
add
inc
sub
dec
ins
je
xchg
xchg
add
cmp
pusha
and
out
fwait
or
gs
sbb
fwait
or
jle
add
sub
cld
sti
mov
loopne
repnz
sti
mov
das
mov
sti
mov
dec
inc
in
das
mov
adc
pop
int
add
fsubr
sti
mov
adc
adc
dec
rcl
dec
in
(bad)
push
mov
or
in
mov
repnz
loopne
sbb
in
fwait
(bad)
sbb
mov
movs
in
jmp
sbb
in
cmps
mov
fidiv
sub
mov
xchg
push
sub
(bad)
mov
outs
add
in
out
jp
sbb
mov
ficomp
dec
cli
lods
xchg
pop
jb
inc
ret
addr16
gs
fisttp
push
(bad)
fstp
jne
enter
ins
call
adc
inc
inc
adc
(bad)
add
dec
lea
xor
into
jne
fdivr
sub
or
mov
adc
dec
pop
dec
loopne
movs
push
das
lods
in
jmp
sbb
nop
xor
sub
jnp
stos
(bad)
mov
lods
xchg
pop
mov
mov
ja
repnz
popf
jp
(bad)
lea
out
data16
jp
jp
xchg
mov
sbb
(bad)
imul
xor
cmp
cld
mov
cmps
sub
sub
pop
cmp
sbb
jno
(bad)
in
cmps
call
hlt
fwait
mov
sub
lods
xor
push
lea
ret
jmp
jmp
cdq
add
in
cmp
jp
jbe
rcl
jmp
icebp
pop
icebp
pop
icebp
(bad)
push
sbb
mov
call
push
sbb
mov
stc
scas
in
jle
mov
movs
adc
icebp
(bad)
lea
mov
in
icebp
pop
fnstsw
inc
cmp
(bad)
jp
xor
and
aaa
xor
in
xchg
or
mov
dec
sbb
dec
dec
mov
dec
call
dec
cmp
(bad)
outs
dec
jp
das
dec
jp
cmovns
cld
das
dec
cmp
(bad)
outs
dec
jp
das
dec
cli
hlt
das
dec
cmp
das
inc
cmp
(bad)
gs
movs
aaa
push
add
ss
gs
dec
jp
pop
cmp
xchg
test
lds
nop
retf
xchg
adc
(bad)
into
xor
icebp
pop
icebp
(bad)
cli
mov
mov
clc
outs
fld
cld
andnps
push
fiadd
jo
xor
jo
xor
xor
sbb
fiadd
jo
push
loope
(bad)
nop
lahf
add
or
addps
push
add
test
push
or
out
inc
add
xchg
adc
inc
push
jo
ror
(bad)
outs
cli
sub
(bad)
pop
fimul
and
cmp
outs
cli
stos
mov
and
dec
pop
and
cmp
das
cli
stos
mov
add
push
xor
call
cmp
stos
mov
add
inc
lahf
das
lds
nop
mov
mov
sbb
icebp
cmp
icebp
outs
in
clc
ins
fisttp
cld
pop
cmp
xchg
test
ds
inc
jno
pop
mov
iret
pop
jp
outs
out
push
xor
test
call
aaa
in
hlt
xchg
icebp
(bad)
and
jge
(bad)
(bad)
push
cmp
out
frstor
pop
mov
dec
pop
lods
push
movs
mov
(bad)
pop
cmp
dec
mov
stc
out
in
jle
mov
movs
adc
lock
fiadd
jo
adc
jl
xchg
fs
aas
adc
gs
sub
fiadd
outs
xor
mov
lds
lock
fiadd
sub
aam
add
xor
int3
cs
ja
movs
cmc
(bad)
adc
in
pop
lahf
retf
in
es
ror
test
in
stos
outs
(bad)
in
or
repnz
mov
xlat
pop
mov
jbe
and
inc
(bad)
sbb
das
pop
inc
aad
pop
sub
stos
xchg
and
int
inc
gs
in
(bad)
jne
int
adc
int
sub
cmp
mov
xchg
push
(bad)
(bad)
icebp
aad
stc
cdq
and
into
(bad)
(bad)
adc
fstp
gs
bound
fmul
in
stos
inc
data16
addr16
shr
add
or
test
xor
(bad)
cmp
inc
div
adc
xchg
jnp
call
mov
stc
xor
xchg
jnp
out
jo
and
ret
vshufps
(bad)
sti
xor
cmp
imul
xor
ret
mov
mov
jmp
cmps
test
fstp
jl
mov
jmp
mov
push
lods
xchg
mov
or
clc
cmp
mov
inc
xor
cmp
shr
or
dec
(bad)
icebp
and
lea
or
mov
jmp
stc
and
in
(bad)
xor
hlt
sub
and
lock
bound
pop
sub
add
jmp
stc
inc
jp
loop
xchg
cmp
bswap
xchg
jno
and
jb
push
push
sub
xchg
mov
cwde
jb
mov
in
adc
test
out
lea
call
xchg
cmps
out
or
xchg
mov
adc
push
(bad)
popa
xor
call
xchg
jb
jle
lea
pushf
out
lea
and
jg
add
popf
sbb
sbb
je
mov
fwait
and
jg
add
mov
test
pop
out
pop
mov
add
cmps
fstp
in
cdq
sbb
movs
mov
lahf
ds
(bad)
cmc
pop
and
fstp
cmp
xor
jecxz
cld
add
fistp
inc
push
push
add
aad
(bad)
gs
add
jnp
inc
test
cli
jmp
and
(bad)
leave
mov
push
add
popf
sbb
arpl
adc
int
sbb
add
cli
inc
and
mov
and
popf
cmp
sar
add
or
jle
shl
sbb
inc
mov
inc
aas
cmp
inc
popa
aas
ss
add
pop
bound
jg
and
jg
add
ins
push
lock
fcom
jb
hlt
loop
sub
push
popf
fwait
leave
pop
call
or
xchg
scas
out
lea
dec
jg
mov
lea
push
adc
sahf
inc
push
iret
pop
mul
in
into
inc
push
ins
jg
out
xchg
test
lods
daa
jno
test
push
dec
mov
push
dec
mov
imul
xor
cmp
inc
push
sub
out
add
jmp
xchg
lods
(bad)
fwait
inc
push
stos
jp
out
add
imul
adc
test
mov
mov
xor
out
jns
jns
ins
push
adc
push
mov
push
enter
rdmsr
fld
lods
dec
mov
lea
push
xor
lea
push
cmp
fwait
inc
push
dec
push
icebp
out
pop
cmp
test
mov
xor
mov
or
dec
mov
scas
adc
scas
adc
out
push
cmp
test
mov
xor
mov
or
dec
mov
scas
adc
scas
adc
out
sahf
mov
rdmsr
push
mov
mov
or
dec
mov
scas
adc
scas
adc
out
sahf
mov
rdmsr
push
mov
mov
or
dec
mov
in
and
out
ins
sub
jb
fwait
mul
int
jmp
lods
inc
shl
int
inc
push
dec
push
jmp
outs
inc
icebp
push
enter
out
sub
mov
push
lods
inc
shl
int
inc
push
dec
push
jmp
outs
inc
icebp
push
enter
out
sub
mov
push
lods
inc
shl
int
inc
push
dec
push
jmp
outs
inc
icebp
push
enter
out
sub
mov
push
lods
inc
shl
lea
fild
shl
out
and
dec
jecxz
adc
addr16
sub
fwait
(bad)
ror
sahf
mov
xor
mov
loopne
xchg
out
sahf
hlt
loop
sub
sub
fdivr
xchg
adc
cmp
rcl
or
push
imul
mov
inc
sahf
mov
xor
mov
mov
sahf
hlt
loop
sub
sub
fdivr
xchg
adc
cmp
rcl
or
push
imul
mov
inc
sahf
mov
xor
mov
push
and
lea
jmp
(bad)
mov
or
ins
pop
mov
xchg
mov
mov
jns
lods
dec
shl
fnsave
mov
scas
adc
out
sub
(bad)
shl
out
sahf
mov
xor
mov
cmps
lock
adc
pop
popf
jmp
sbb
inc
push
iret
push
jmp
outs
and
cmps
out
and
xchg
out
sahf
mov
xor
mov
cmps
lock
adc
sti
lea
cmp
test
mov
addr16
sub
fwait
xlat
call
xchg
mov
jb
fwait
jmp
lods
dec
shl
mov
ins
or
jmp
lea
test
push
iret
pop
out
out
mov
pop
jg
push
adc
xchg
clc
ror
or
ins
push
adc
push
jnp
test
hlt
loop
sub
das
fistp
sbb
inc
xchg
inc
push
iret
pop
mul
ins
sub
push
popf
fwait
xchg
out
lea
xchg
fist
fnsave
(bad)
inc
cmp
dec
nop
xor
dec
stc
xchg
mov
lea
mov
popa
and
jg
mov
push
popf
in
adc
into
add
cmps
out
(bad)
repz
and
pop
sbb
inc
adc
and
dec
ret
xchg
(bad)
inc
adc
adc
mov
out
mov
leave
sub
lock
mov
retf
fild
ins
fidivr
fisub
aaa
adc
pop
int
mov
xor
adc
fcomp
in
(bad)
cmc
ins
das
pop
inc
fcmove
sti
sbb
push
add
cdq
in
movs
cmps
pop
adc
jne
push
push
test
sbb
cmc
in
(bad)
xor
xlat
sub
inc
movs
clc
in
(bad)
jne
dec
mov
lods
adc
fwait
cs
gs
push
add
xchg
cdq
inc
rol
push
adc
cmp
mov
test
mov
inc
sub
repnz
stos
push
add
pushf
or
fcmovu
mov
in
in
enter
and
lea
xor
out
aad
(bad)
jne
jne
or
bound
movs
fstp
gs
ficom
or
(bad)
cmc
gs
xlat
adc
aam
cmps
bound
lods
xchg
sub
sti
add
in
(bad)
loop
adc
push
xchg
mov
adc
push
mov
imul
cmps
and
sbb
mov
and
rcl
pop
retf
in
cmps
dec
scas
xchg
icebp
mov
lahf
cdq
sbb
jne
mov
mov
sub
pop
push
cmp
jae
mov
dec
test
call
inc
bnd
sub
call
adc
or
jp
in
das
shr
test
adc
or
cmp
mov
sti
jge
jnp
lahf
mov
jp
push
int
idiv
adc
jb
jg
test
adc
sub
cmp
in
cmp
fwait
out
stc
gs
(bad)
lds
int
dec
xchg
adc
and
push
or
pushf
xchg
pop
add
inc
cmp
popa
nop
sahf
mov
jg
mov
cmp
sbb
pop
fwait
and
mov
shl
push
and
shr
popa
mov
jg
cmp
xchg
jns
adc
pop
mov
out
(bad)
adc
dec
nop
push
or
in
mov
lea
xchg
cmc
les
sub
aad
es
add
pop
mov
ret
es
add
jo
icebp
pop
clc
xchg
shr
dec
pop
pop
fcmovb
xchg
fidivr
push
iret
shl
adc
mov
outs
ds
icebp
pop
sbb
clc
inc
fwait
or
ror
cmp
push
and
sub
xchg
jb
and
jmp
imul
and
in
xchg
retf
inc
push
sbb
mov
inc
jmp
adc
cmc
xchg
pop
je
push
data16
xchg
fwait
das
test
(bad)
adc
repnz
cmp
inc
sbb
jge
out
adc
xchg
inc
push
mov
cli
adc
push
mov
mov
enter
in
cmps
and
lea
ror
aam
mov
imul
pop
aad
inc
neg
push
xchg
fild
mov
xchg
cwde
cmps
loopne
repnz
jne
ins
pushf
cmp
scas
cmc
sub
stc
(bad)
adc
aaa
xchg
adc
add
stc
dec
xor
jne
and
and
jo
enter
jne
jo
inc
cwde
push
sub
mov
call
cli
enter
push
mov
push
jp
fwait
(bad)
xor
mov
fs
xchg
adc
sar
rol
jno
or
adc
add
shr
mov
test
jns
push
sbb
push
xor
inc
ror
stos
push
xor
inc
ror
stos
push
xor
inc
ror
sbb
push
xor
inc
rcl
movs
jmp
mov
mov
ficom
shl
mov
lods
shl
int3
jl
xor
sub
fwait
push
mov
dec
popa
add
(bad)
mov
test
xchg
xor
rol
jno
add
xchg
xchg
xor
adc
dec
popa
add
fwait
mov
push
sbb
mov
add
dec
popa
adc
sbb
cmp
pop
mov
adc
push
xor
jns
adc
test
jb
pop
adc
ret
mov
dec
popa
add
test
test
xchg
xor
add
mov
xchg
xchg
xor
and
stos
xchg
xchg
xor
mov
add
push
add
dec
popa
adc
sbb
cmp
pop
mov
jb
popa
pslld
in
adc
gs
(bad)
ret
mov
stos
xor
mov
mov
xlat
icebp
mov
out
or
sbb
push
xor
inc
ror
stos
push
xor
inc
ror
sbb
push
xor
inc
rcl
movs
jmp
mov
mov
ficom
mov
mov
int
mov
add
dec
and
rcr
test
mov
repnz
push
adc
cmp
xchg
add
xchg
sub
push
mov
shl
frstor
cmp
mov
cmps
ficom
vshufpd
in
(bad)
adc
inc
lock
jg
gs
jp
pop
jmp
into
xor
into
in
(bad)
aad
xchg
xchg
cmc
les
cmps
add
ins
or
add
xchg
es
test
xchg
sbb
in
out
(bad)
in
(bad)
enter
dec
aad
jns
js
into
xor
or
pop
vshufpd
sub
lea
(bad)
in
data16
out
rcl
sbb
ficom
in
aam
(bad)
(bad)
(bad)
dec
jge
movs
adc
pop
jp
aad
out
aad
(bad)
jne
repnz
xchg
pop
mov
dec
or
jnp
scas
xchg
cwde
cmc
les
xchg
dec
arpl
popf
in
adc
xchg
pop
movs
mov
xor
dec
rcl
inc
fwait
gs
rcl
sbb
scas
ret
pop
(bad)
les
adc
stos
inc
vmwrite
cmp
hlt
jcxz
stos
add
xchg
pop
movs
pop
dec
mov
pushf
les
and
stc
movs
gs
sbb
and
in
cmps
mov
syscall
sti
mov
cdq
and
mov
mov
mov
jne
xor
mov
daa
inc
(bad)
adc
in
xchg
movs
xor
xor
mov
stos
movs
dec
ss
adc
stc
push
vshufps
lea
stos
adc
inc
fsubr
(bad)
jne
and
xchg
clc
pop
lock
mov
loope
cmps
dec
test
icebp
iret
add
jecxz
push
cmp
(bad)
in
aam
fsubr
pop
sbb
adc
jmp
leave
jle
mov
lahf
ret
iret
jne
call
xor
shl
mov
sbb
ja
mov
lods
mov
add
cmps
push
cmp
jnp
and
lock
sbb
scas
cli
mov
xor
shl
mov
inc
adc
jo
add
jb
cli
cli
nop
sub
xor
(bad)
stos
cli
jmp
adc
push
loope
cmps
inc
mov
add
jmp
stc
inc
cli
jo
js
sbb
fnstsw
mov
ds
stc
sbb
cmp
leave
push
add
dec
ss
push
mov
pop
mov
repnz
cmp
sub
mov
ss
arpl
ficom
dec
ss
mov
mov
pop
in
inc
jne
sub
out
movs
jnp
or
inc
enter
or
lea
call
(bad)
cmp
dec
daa
call
cmps
(bad)
jmp
fwait
gs
fisub
out
and
cli
(bad)
mov
sbb
dec
xchg
inc
retf
(bad)
cmp
inc
mov
or
and
in
daa
or
cmp
imul
ins
jmp
data16
outs
fld
push
add
mov
cmp
jmp
xchg
test
inc
mov
or
add
leave
inc
repnz
call
(bad)
cmp
inc
out
out
cmps
fwait
in
les
sub
inc
test
clc
fs
daa
pop
inc
sub
mov
sub
add
inc
xchg
and
and
leave
cmps
mov
inc
call
in
daa
or
cmp
enter
imul
test
call
out
test
(bad)
cmp
jmp
data16
outs
sti
in
inc
xchg
add
out
imul
xchg
addr16
in
loopne
inc
jmp
fs
mov
test
inc
push
inc
jmp
inc
repnz
fs
inc
and
in
and
stos
dec
sbb
stos
scas
sbb
enter
stos
dec
sbb
test
xchg
and
and
sub
fbld
pop
aas
lea
and
loop
loop
inc
(bad)
loop
sub
fld
push
add
or
cmp
or
fadd
sbb
push
mov
imul
and
dec
xor
jmp
inc
push
pop
imul
cmp
mov
inc
sbb
in
inc
call
add
lea
cmp
in
out
daa
cmp
sub
cli
ins
dec
inc
jb
dec
data16
fiadd
mov
test
out
xchg
push
cwde
test
movs
jnp
test
sbb
cmp
dec
out
int
in
lods
or
(bad)
loope
mov
in
mov
int
mov
and
inc
shl
ret
shl
in
mov
inc
rol
sub
cmp
call
xchg
inc
or
repnz
dec
out
int
out
out
cmps
fwait
in
les
in
inc
fwait
in
data16
inc
mov
cmps
mov
fs
pop
mov
test
fadd
stos
scas
sbb
enter
stos
dec
sbb
test
xchg
add
inc
push
lds
xor
mov
push
or
sub
dec
xchg
ins
stos
pop
fadd
cmp
add
sti
in
daa
cmp
push
push
mov
mov
call
inc
mov
or
(bad)
jmp
(bad)
fild
into
fsub
imul
inc
test
in
addr16
cwde
and
stos
outs
fld
push
add
or
cmp
jmp
cmp
(bad)
fild
xchg
push
or
retf
int
out
out
sbb
xchg
add
inc
push
lds
push
add
dec
inc
adc
or
in
call
daa
sbb
sub
add
dec
out
inc
test
dec
sbb
stos
outs
fld
repnz
cmp
sub
or
ror
sbb
cmp
dec
test
add
add
lea
cmp
in
out
fs
in
test
gs
scas
sbb
sti
in
in
xchg
out
dec
movs
jnp
add
jmp
fwait
in
data16
inc
stos
dec
sbb
or
cli
fs
inc
adc
retf
out
xchg
(bad)
cmp
and
test
(bad)
cli
les
cli
int3
push
inc
repnz
cmp
enter
sub
add
rol
call
inc
rol
sub
cmp
leave
in
gs
mov
movs
stos
outs
fld
adc
sub
out
daa
cmp
dec
fs
in
cmps
jnp
mov
mov
pop
stos
outs
fld
mov
shl
mov
mov
fs
daa
stos
outs
fld
sbb
jb
test
movs
call
out
gs
fisub
fs
gs
cmp
test
mov
stos
out
xor
or
xchg
jl
imul
adc
ins
sahf
add
test
loope
cwd
inc
imul
fwait
test
inc
jb
or
cmp
call
cmp
pop
test
(bad)
cmp
or
lea
cmp
in
daa
in
bound
in
loopne
fs
pop
pop
out
cmps
cmp
inc
xchg
(bad)
leave
out
int
inc
adc
les
and
sub
inc
stos
dec
sbb
or
cli
fs
int
in
in
lds
es
xchg
or
cmp
add
cmp
dec
fs
add
outs
mov
xchg
daa
pop
in
movs
cmp
in
xor
movs
dec
ss
movs
dec
ss
movs
dec
ss
movs
dec
ss
movs
dec
ss
movs
dec
ss
movs
dec
ss
movs
dec
ss
and
jp
and
test
sbb
xchg
sub
mov
cdq
gs
out
cli
fs
cmp
fs
test
jp
mov
lods
or
fild
nop
sbb
outs
jmp
pop
cwde
les
(bad)
inc
sbb
outs
pop
out
bound
add
bound
in
daa
cmp
test
movs
sbb
shl
in
xchg
in
mov
inc
imul
lea
xchg
and
in
daa
or
cmp
enter
imul
test
sbb
mov
popa
and
mov
in
mov
mov
out
xchg
and
es
ins
lods
out
int
(bad)
cwde
movs
outs
out
mov
mov
test
inc
jb
retf
out
and
(bad)
cli
in
mov
sti
add
mov
test
xchg
in
mov
inc
popa
(bad)
pop
out
push
cwde
in
add
test
es
inc
sub
add
sbb
mov
add
and
or
inc
mov
dec
xor
pusha
push
loop
(bad)
inc
dec
ss
movs
dec
ss
movs
dec
ss
movs
dec
ss
and
dec
ss
movs
dec
ss
movs
dec
ss
inc
dec
ss
movs
dec
ss
movs
dec
ss
movs
dec
ss
and
dec
ss
movs
dec
ss
movs
dec
ss
in
ss
movs
dec
ss
movs
dec
ss
movs
dec
ss
test
jp
movs
dec
ss
movs
dec
ss
movs
dec
ss
in
ss
movs
dec
ss
movs
dec
ss
movs
dec
ss
test
jp
movs
dec
ss
movs
dec
ss
movs
dec
ss
add
dec
ss
movs
dec
ss
movs
dec
ss
retf
mov
jp
movs
dec
ss
movs
dec
ss
movs
dec
ss
lds
jmp
movs
dec
ss
movs
dec
ss
movs
dec
ss
test
jp
movs
dec
ss
movs
dec
ss
movs
dec
ss
gs
ss
movs
dec
ss
movs
dec
ss
movs
dec
ss
test
jp
movs
dec
ss
movs
dec
ss
movs
dec
ss
dec
jmp
lea
cmp
imul
xchg
sti
in
ret
mov
fwait
gs
jle
dec
and
movs
imul
fadd
in
and
lea
sti
inc
enter
push
sbb
sub
cmp
sub
add
sub
lea
addr16
test
out
mov
or
lds
out
or
jmp
cmp
mov
arpl
ins
dec
daa
call
mov
fs
jp
and
stc
lds
out
sub
test
sbb
add
pop
out
(bad)
cmp
(bad)
cwde
movs
ins
outs
mov
leave
and
pop
cmps
loope
shr
sub
mov
cmps
add
mov
and
or
jnp
or
inc
mov
dec
xchg
in
mov
sbb
cmp
cmps
fwait
and
out
dec
stos
out
cli
les
fs
or
cmp
jmp
inc
sti
mov
sti
int3
add
ja
jecxz
mov
out
dec
jb
test
out
add
cs
out
mov
jb
mov
js
pusha
out
dec
stos
push
sbb
sbb
(bad)
or
inc
stos
inc
fsub
add
lds
test
ud2
ja
add
cmp
(bad)
mov
addr16
inc
xchg
in
and
xor
dec
loop
movs
dec
out
lea
inc
push
ret
sub
xor
or
inc
popa
in
in
cmps
(bad)
fiadd
cmp
das
les
lea
inc
xchg
shl
test
out
jle
or
push
fs
jle
enter
or
(bad)
pop
add
and
aas
dec
mov
out
fbld
fiadd
inc
jb
pop
cmp
test
jle
enter
or
movs
mov
sbb
fiadd
call
es
in
rcr
stos
dec
sbb
and
out
dec
push
shl
dec
mov
ins
push
out
sub
clc
and
xchg
in
sbb
stos
push
fadd
inc
repnz
test
add
and
data16
ins
cmps
cmp
lea
mov
scas
test
sahf
addr16
cli
in
sar
(bad)
mov
movs
test
ror
loope
fwait
in
sar
dec
out
daa
or
shr
fcmovb
outs
inc
adc
jecxz
test
inc
cmp
leave
fs
sub
les
cmp
mov
mov
fiadd
mov
and
or
mov
sub
and
inc
xor
das
les
lea
inc
xchg
shr
cmp
ins
(bad)
cmp
push
pop
inc
sub
sub
loop
test
inc
cmp
leave
fs
cmps
mov
xor
xchg
in
or
cmp
call
out
lahf
gs
fwait
cmps
popa
out
in
les
mov
inc
popa
in
in
dec
repnz
cmp
sub
inc
popa
(bad)
sbb
int
cmp
(bad)
js
sub
shr
movs
in
cmp
add
ja
add
pop
in
cmps
mov
in
sub
cmp
les
test
call
test
dec
mov
popa
in
in
int3
xor
inc
in
adc
test
jle
and
js
add
mov
and
fs
inc
out
dec
push
popa
or
clc
ret
lods
in
ins
lea
cmp
lea
aas
dec
mov
cs
call
and
in
arpl
in
cs
inc
jmp
mov
call
and
les
adc
inc
adc
(bad)
cwde
mov
sub
out
retf
inc
(bad)
inc
cmp
and
clc
dec
in
jmp
mov
sti
fs
inc
xchg
in
loope
jo
retf
inc
(bad)
inc
cmp
and
cmp
xchg
shr
pop
dec
test
mov
call
das
fcmovb
imul
jp
fs
inc
in
jmp
or
cmps
jnp
sub
shr
fcmovb
outs
inc
adc
inc
xchg
in
in
in
xor
das
(bad)
cmp
sub
sub
fisub
xchg
call
dec
scas
shl
pop
sbb
mov
addr16
les
in
mov
test
or
pusha
sub
jecxz
pop
cwde
gs
pop
in
cs
and
into
fbld
cmps
sti
in
bound
in
ret
add
pop
out
leave
arpl
add
les
and
sub
add
fisub
out
jle
mov
out
cld
les
in
in
arpl
add
cmps
fwait
in
add
popa
or
add
mov
and
dec
sub
(bad)
movs
sti
in
iret
adc
out
pop
inc
or
mov
(bad)
js
add
in
dec
ins
push
sub
test
iret
retf
stos
mov
in
movups
es
iret
ins
push
mov
cmps
mov
xchg
stos
cmp
leave
les
int3
mov
(bad)
ret
imul
in
sub
pop
call
ins
push
mov
movs
(bad)
dec
jae
enter
enter
mov
mov
movs
sub
cmp
(bad)
ins
push
imul
cmp
out
ins
push
sub
fs
movs
outs
adc
data16
movs
outs
adc
daa
(bad)
call
cmps
sti
int3
fs
dec
jmp
push
fs
lods
outs
mov
fs
add
and
cmps
fwait
inc
in
jmp
mov
sti
add
pop
in
cmps
sbb
out
xchg
fiadd
sbb
sbb
outs
mov
in
out
ja
jmp
push
fs
lods
outs
mov
in
push
sbb
sbb
(bad)
cwde
inc
mov
mov
test
or
imul
(bad)
pop
add
sub
aas
int
inc
push
jecxz
push
mov
in
dec
(bad)
fwait
inc
enter
test
push
inc
movs
in
inc
jecxz
xchg
iret
or
jmp
push
arpl
repnz
or
pop
dec
test
enter
or
sbb
daa
clc
mov
xchg
in
(bad)
pop
test
fwait
mov
fs
sbb
test
ja
jmp
pushf
test
inc
xchg
popa
or
cmp
(bad)
mov
xchg
sti
in
ret
test
daa
fcmovb
(bad)
out
call
sub
dec
sub
(bad)
movs
sti
mov
cs
and
jmp
fadd
imul
fs
xchg
gs
or
and
cmps
cmp
sub
mov
sti
mov
test
dec
jo
mov
ror
cwde
movs
test
push
pushf
inc
add
sbb
leave
mov
cmp
or
call
push
push
fs
lods
outs
mov
out
loope
adc
jmp
pop
out
push
cmp
imul
inc
or
popa
or
cmp
sub
call
(bad)
mov
int3
or
fcmovb
push
inc
pushf
gs
cmp
inc
xchg
sub
add
les
dec
retf
out
cmps
loopne
sbb
push
push
fs
lods
outs
mov
inc
and
jp
test
out
pop
and
push
mov
in
mov
mov
arpl
in
gs
mov
movs
sub
or
js
and
lea
inc
mov
lods
inc
adc
in
ja
imul
sbb
push
push
fs
lods
outs
mov
dec
dec
xchg
in
das
sbb
ins
(bad)
cwde
ins
or
sbb
pop
movs
rol
and
pop
inc
leave
inc
xchg
inc
sub
in
(bad)
sbb
sti
in
mov
jp
test
pop
add
fs
inc
mov
dec
push
inc
enter
push
movs
call
dec
jb
add
sti
in
or
mov
fs
sbb
imul
sub
add
and
push
mov
loope
arpl
jecxz
dec
fucomp
leave
(bad)
cli
les
call
lods
ror
imul
sbb
(bad)
cwde
and
cmps
fwait
inc
in
jmp
enter
(bad)
enter
stos
push
push
fs
lods
outs
mov
or
add
fwait
cmps
add
mov
out
mov
or
fwait
and
sub
cmp
pop
pop
imul
or
test
fbld
add
lds
(bad)
xor
ret
inc
xor
fs
xchg
test
movs
fsub
mov
fcmovb
push
das
fiadd
pop
and
cmps
cmp
imul
sbb
(bad)
cwde
and
cmps
fwait
inc
in
jmp
enter
(bad)
enter
test
out
les
push
sahf
(bad)
stos
push
push
fs
test
out
les
nop
out
or
cwde
inc
stos
into
call
xchg
inc
out
and
ins
or
js
call
(bad)
xor
ret
inc
jb
outs
inc
adc
stos
(bad)
mov
int3
imul
sbb
(bad)
cwde
and
cmps
fwait
add
or
pop
enter
and
sti
in
ret
or
inc
mov
shr
fcmovb
push
(bad)
js
test
fwait
test
mov
test
addr16
in
out
ins
mov
add
in
ins
or
cwde
sub
data16
les
dec
dec
xchg
fs
out
in
and
test
movs
fsub
mov
mov
and
cmps
call
jmp
test
(bad)
pop
add
or
sbb
or
sbb
push
push
fs
lods
outs
mov
dec
dec
xchg
in
loopne
movs
add
call
push
fiadd
cli
(bad)
jmp
cmp
mov
js
fs
cmp
dec
mov
or
mov
addr16
inc
or
sbb
mov
ja
ins
xchg
in
mov
addr16
inc
or
sbb
test
ja
jecxz
cmp
sub
pop
loope
or
inc
pop
mov
ins
or
cmp
(bad)
fild
out
inc
loop
mov
dec
dec
jb
add
sti
in
int3
rcr
fs
cwde
test
int3
xor
push
fiadd
cli
(bad)
out
les
lea
iret
pop
inc
jmp
cli
sub
add
js
add
ds
jecxz
cmp
test
loopne
and
test
call
(bad)
mov
call
dec
scas
rol
dec
test
sub
mov
inc
and
xchg
test
ins
nop
out
mov
mov
adc
add
popa
test
fbld
add
lds
(bad)
xor
int
xor
(bad)
out
or
fisub
out
inc
jecxz
adc
mov
dec
xor
test
cs
ret
imul
inc
pusha
in
lods
push
dec
dec
xor
inc
ins
xor
or
or
mov
dec
jmp
mov
or
movs
fsub
jmp
addr16
les
cmps
fwait
add
or
gs
cs
pusha
cli
test
clc
inc
call
and
les
adc
jecxz
call
loopne
adc
dec
mov
inc
in
ror
(bad)
lock
add
push
vphaddubd
and
jp
leave
les
add
mov
test
clc
inc
jmp
out
call
dec
scas
rol
dec
test
inc
mov
jp
dec
pop
in
das
fiadd
push
add
sub
mov
jp
dec
pop
in
das
fiadd
xchg
test
inc
sbb
test
test
inc
add
cwde
in
loop
test
dec
jb
sub
les
adc
jecxz
enter
or
jmp
cmps
sbb
sub
ret
imul
inc
popa
in
out
and
out
pop
mov
in
out
sub
(bad)
cwde
test
ret
retf
(bad)
fadd
in
out
loopne
in
dec
jb
sub
les
adc
jecxz
test
sbb
cli
movs
push
adc
dec
mov
or
movs
fsub
call
(bad)
fwait
and
les
adc
retf
ret
or
mov
mov
aas
lea
mov
or
inc
loope
pop
out
loopne
in
dec
xchg
shr
jp
add
xchg
out
mov
jmp
data16
in
sar
sub
sbb
arpl
mov
outs
in
ja
or
sbb
cli
movs
push
adc
dec
mov
or
movs
fsub
call
(bad)
fwait
and
les
inc
xchg
lods
mov
pop
add
and
aas
dec
test
fbld
add
lds
inc
xor
iret
lahf
add
mov
ja
mov
pop
in
inc
adc
inc
xor
out
out
jecxz
cmps
dec
inc
fsub
sbb
push
and
inc
in
inc
xor
in
sub
retf
loopne
and
xor
call
dec
xchg
inc
sub
in
(bad)
sbb
sti
in
and
and
in
inc
dec
xchg
movs
das
(bad)
xor
ret
inc
xor
scas
inc
adc
dec
dec
push
shr
lds
or
and
dec
outs
sti
test
fs
add
or
ja
jmp
inc
xchg
ins
mov
cmp
sbb
xor
mov
pop
add
mov
cmp
sbb
test
out
ins
(bad)
cmp
mov
jp
stos
into
pushf
movs
call
xchg
loope
xor
test
dec
jmp
mov
or
xchg
mov
fcmovb
push
das
fiadd
ja
jmp
out
in
mov
scas
sahf
and
(bad)
dec
adc
jecxz
enter
out
enter
mov
mov
test
push
and
add
cwde
gs
out
mov
bound
in
in
pop
scas
mov
pop
add
das
loopne
lea
cmps
mov
xchg
(bad)
sbb
and
ror
or
iret
ins
dec
push
jecxz
add
add
ds
in
pusha
inc
dec
push
jecxz
add
add
ds
add
pusha
movs
outs
jle
jmp
mov
or
(bad)
pop
test
fwait
mov
fs
sbb
imul
dec
inc
jle
enter
or
sbb
daa
clc
mov
es
test
inc
repnz
inc
addr16
xchg
sti
in
ret
jecxz
nop
ins
and
out
leave
loopne
and
test
(bad)
xor
and
jp
in
sahf
test
pusha
(bad)
pusha
pop
inc
shl
scas
pusha
jg
and
push
scas
out
pop
mov
in
mov
xchg
mov
or
ja
sub
pushf
gs
jp
jmp
mov
push
dec
scas
fadd
imul
fs
mov
mov
int3
nop
lods
ret
lods
nop
ins
test
dec
in
jmp
test
and
lods
inc
push
inc
outs
ret
pushf
mov
out
pusha
fild
inc
mov
int3
bound
inc
jecxz
xor
dec
push
lsl
ja
in
jmp
popa
(bad)
jecxz
(bad)
in
loopne
sub
or
cs
ffreep
ins
inc
jb
or
pop
and
pop
popa
movs
out
jg
jecxz
xor
movups
add
ja
in
stos
mov
push
and
inc
add
pushf
test
dec
mov
loopne
jo
jecxz
mov
add
aaa
dec
sub
or
lea
inc
repnz
or
movs
retf
(bad)
mov
ret
in
sbb
sub
push
xchg
lea
cmp
lea
aas
int
inc
push
shr
jnp
or
cmp
test
jo
test
jle
mov
fcmovb
mov
and
out
or
clc
lods
sub
pop
sub
mov
daa
les
test
xchg
add
retf
movs
mov
and
test
or
push
ret
retf
and
gs
cmps
sti
mov
mov
pop
dec
out
jmp
test
cmps
sbb
inc
jb
sub
les
xchg
ror
sbb
out
enter
out
enter
or
xchg
lds
cmp
imul
pop
dec
test
dec
data16
(bad)
jmp
addr16
and
call
lds
test
call
dec
scas
rol
dec
test
daa
and
fwait
add
or
jns
xchg
lea
xor
xchg
inc
xchg
dec
test
test
in
pop
outs
test
push
and
jmp
mov
in
mov
fs
fwait
inc
jmp
inc
retf
arpl
test
inc
xchg
test
(bad)
mov
or
movs
clc
mov
cmp
out
les
pop
and
data16
adc
imul
movs
test
dec
repnz
les
in
bound
inc
jmp
push
fs
test
xchg
test
int3
xor
ins
addr16
pusha
in
ins
stos
into
fsub
or
and
dec
scas
fadd
imul
mov
mov
jle
mov
inc
outs
(bad)
cmp
push
cwde
les
mov
or
lahf
add
and
sbb
adc
stos
push
push
lds
fsub
dec
shl
lods
out
lahf
bt
and
dec
push
shr
lds
or
test
mov
and
inc
xchg
in
imul
dec
pop
sbb
stos
push
push
fs
lods
outs
mov
iret
lods
or
or
push
inc
push
arpl
in
sub
ret
retf
(bad)
fsub
and
les
call
mov
movs
pop
inc
call
xchg
add
xchg
test
xchg
add
call
push
pop
(bad)
imul
fwait
test
arpl
out
mov
pop
add
jmp
push
fs
lods
outs
mov
test
outs
mov
mov
inc
and
sbb
retf
inc
adc
movs
loopne
inc
jmp
into
pop
inc
mov
pop
inc
stos
push
push
fs
lods
outs
mov
out
inc
shl
inc
mov
jmp
pop
mov
adc
jecxz
enter
add
xchg
in
movs
fwait
out
movs
cmp
or
in
es
in
bound
in
xchg
dec
imul
movs
test
cmp
xchg
test
loop
mov
inc
and
sbb
retf
inc
adc
mov
mov
out
test
lds
in
mov
sbb
inc
mov
lods
ret
or
lods
in
inc
(bad)
xchg
mov
cmp
dec
mov
push
dec
scas
fadd
imul
and
test
push
add
add
call
dec
adc
add
ja
jmp
push
fs
mov
test
or
sub
les
sbb
movntq
mov
fisub
out
mov
dec
xchg
in
or
inc
mov
or
ret
imul
inc
fs
inc
loope
pop
loope
xor
in
mov
les
call
lods
adc
mov
int3
lock
or
push
add
sub
sub
les
sbb
add
ja
jmp
push
sbb
es
jmp
push
sbb
cmp
les
cmp
popa
out
out
sub
out
and
ror
in
adc
fs
nop
test
loop
lds
pop
xor
retf
(bad)
cmp
or
mov
push
add
call
es
or
pop
inc
mov
pop
movs
sub
lds
ja
add
out
or
pushf
ret
ret
and
or
int
lods
add
nop
iret
add
xchg
test
push
movs
dec
xchg
lods
add
dec
mov
mov
(bad)
sti
movs
or
inc
(bad)
mov
inc
call
(bad)
sbb
dec
pusha
mov
in
arpl
or
int3
ror
jmp
inc
dec
xchg
out
mov
(bad)
repz
test
nop
test
int
out
dec
add
add
out
pop
inc
cmps
mov
xchg
xchg
test
pusha
call
cs
dec
daa
cmp
or
test
imul
gs
daa
cmp
push
or
in
add
adc
and
ror
ins
xor
add
aaa
dec
sub
mov
or
test
pop
sbb
leave
sar
(bad)
mov
mov
or
mov
mov
mov
sbb
or
imul
or
shr
test
ja
call
inc
push
popa
or
pop
in
or
mov
pop
in
das
fiadd
xchg
inc
and
stos
cs
out
movs
jnp
test
fcmovb
imul
inc
and
and
cmps
fwait
inc
call
out
mov
sub
out
mov
in
xor
test
test
or
movs
mov
pop
add
inc
out
test
or
imul
push
fs
enter
dec
daa
sbb
mov
addr16
test
fiadd
xchg
test
add
or
push
fs
or
mov
mov
call
xchg
mov
test
or
shr
aaa
les
add
xchg
fiadd
xchg
test
mov
sbb
test
(bad)
js
imul
(bad)
das
fiadd
xchg
test
mov
sbb
push
cwde
test
movs
fsub
enter
sub
or
clc
sub
(bad)
cwde
test
or
sub
mov
fsub
jmp
mov
in
(bad)
fwait
gs
xchg
test
bound
stos
outs
jmp
push
add
sbb
dec
daa
fcmovb
imul
fwait
test
or
imul
movs
fsub
sub
inc
loopne
pop
and
in
jmp
test
(bad)
sbb
daa
pop
inc
jmp
sbb
sbb
or
and
cmp
stos
fadd
push
pop
clc
movs
push
or
cmps
or
addr16
inc
jmp
cmp
jmp
pop
xchg
cmps
sbb
das
fiadd
xchg
test
mov
cli
inc
or
push
add
imul
fwait
test
or
mov
call
pop
inc
push
or
les
push
test
out
mov
sti
movs
and
and
in
jmp
mov
sti
test
fcmovb
imul
push
add
inc
addr16
in
(bad)
cli
inc
sub
and
xchg
sub
or
add
in
loope
mov
add
in
test
movs
fild
mov
loop
ins
jo
out
in
ja
test
dec
xor
in
mov
jecxz
mov
or
push
inc
stos
inc
fsub
xchg
imul
fwait
test
or
mov
push
add
dec
movs
clc
mov
sti
movs
imul
fwait
test
in
out
pop
mov
and
test
shl
test
arpl
in
pop
inc
jmp
fadd
push
push
mov
inc
add
xchg
test
jmp
enter
or
xchg
in
add
test
and
les
push
add
or
jmp
inc
js
enter
mov
fwait
test
or
mov
ja
dec
addr16
inc
leave
xbegin
test
or
sub
les
fwait
test
mov
fs
test
(bad)
jmp
mov
or
ja
sub
sbb
dec
xchg
test
add
arpl
or
movs
dec
(bad)
clc
mov
xchg
xchg
xchg
test
bound
lds
mov
lds
xchg
test
bound
test
or
sub
sbb
daa
sbb
and
mov
test
or
inc
lea
pop
movs
mov
pop
add
sbb
cmps
sbb
das
fisub
and
test
in
out
pop
mov
test
pop
sbb
sbb
das
fisub
and
test
or
ret
lods
in
ins
test
call
inc
(bad)
inc
cmp
and
cwde
test
movs
fsub
enter
push
test
fs
pop
inc
in
jmp
mov
fs
inc
imul
or
clc
mov
fs
inc
push
inc
add
mov
stos
push
sahf
(bad)
stos
push
push
fs
int3
in
call
in
loop
cmps
mov
pop
add
mov
jnp
movs
(bad)
cwde
inc
in
jmp
test
xbegin
inc
or
xchg
inc
and
test
fisub
fs
gs
add
imul
fwait
test
inc
(bad)
push
xor
sub
sub
push
add
xchg
test
mov
cli
mov
rep
or
ja
mov
sbb
das
fisub
pop
cdq
test
cmps
sti
lea
mov
cmps
mov
pop
add
dec
xchg
movs
add
xchg
test
sub
les
fbld
in
or
clc
mov
sti
fs
xchg
and
out
test
or
jmp
outs
sahf
xchg
add
test
test
(bad)
js
sub
sbb
les
and
and
jmp
(bad)
jnp
stos
out
in
out
xchg
(bad)
call
(bad)
sbb
push
or
jecxz
xchg
iret
mov
ins
adc
jecxz
mov
or
aaa
add
push
adc
out
or
or
stos
cs
test
cwde
inc
jmp
out
scas
mov
add
xchg
test
loop
cmps
mov
pop
add
mov
in
rcr
and
mov
and
or
lea
(bad)
mov
lea
add
inc
sub
ja
or
jnp
or
inc
lods
mov
mov
dec
adc
les
and
sbb
stos
call
addr16
and
cmps
fwait
and
out
test
or
mov
xor
inc
mov
and
xchg
test
jecxz
movs
dec
out
daa
or
and
cmps
mov
sbb
or
push
add
call
out
dec
jmp
addr16
add
pop
inc
jmp
addr16
add
pop
daa
fs
inc
in
jmp
sub
cwde
in
daa
mov
movs
or
test
test
or
xchg
test
arpl
jmp
out
call
sub
fwait
gs
xchg
test
mov
sti
or
push
add
imul
sti
int3
add
ja
jmp
(bad)
jnp
sub
les
test
cmps
pop
lds
pop
sbb
sbb
test
add
ja
call
cmps
js
leave
(bad)
cli
les
sbb
test
es
sub
cli
add
es
sub
cli
add
sbb
les
sub
and
test
es
inc
dec
inc
jb
mov
sbb
enter
dec
out
(bad)
imul
movs
push
xchg
gs
addr16
add
es
mov
cmp
enter
sub
les
push
fs
mov
inc
push
pop
imul
call
scas
sti
add
mov
addr16
sti
dec
in
jmp
call
dec
inc
xor
add
inc
inc
in
ja
imul
retf
inc
sbb
sub
les
cmp
mov
cmp
popa
cmps
call
inc
adc
adc
mov
cmp
inc
mov
or
sub
cwde
test
inc
xor
into
fsub
retf
mov
sbb
inc
mov
or
inc
mov
cwde
test
inc
xchg
in
inc
sbb
call
outs
mov
inc
push
inc
push
add
test
xchg
in
fs
call
test
and
dec
cwde
cmps
retf
inc
sbb
stos
dec
sbb
or
cmp
sub
stos
outs
fld
sbb
test
daa
mov
in
out
out
mov
addr16
in
fs
sub
dec
inc
mov
or
and
les
enter
imul
fild
in
ja
mov
cmp
test
jle
dec
and
movs
push
into
fsub
and
mov
mov
cmps
test
mov
in
data16
and
xchg
add
and
mov
in
(bad)
sbb
fs
lods
outs
ds
mov
mov
dec
imul
movs
stos
outs
fld
xchg
inc
or
fs
in
xchg
cmps
sti
les
addr16
imul
in
mov
pop
pop
inc
pop
mov
test
inc
push
inc
jmp
out
fs
xchg
jnp
mov
in
inc
loope
cli
in
leave
pusha
cli
inc
stos
outs
fld
xor
enter
jmp
cmp
mov
xor
jmp
fs
mov
and
(bad)
sbb
inc
push
and
mov
lds
repnz
(bad)
fild
into
cmp
mov
in
jmp
fwait
in
in
in
xchg
ins
stos
out
or
sub
cmp
imul
in
mov
lea
cmps
pop
inc
stos
outs
mov
(bad)
dec
xchg
ins
dec
inc
mov
or
inc
enter
sub
or
fiadd
cli
fs
sbb
daa
clc
in
sub
mov
stos
outs
fld
jb
sub
les
rol
sub
fwait
gs
mov
in
data16
and
xchg
add
and
mov
lds
push
popa
and
cmp
or
movs
and
or
pop
loope
clc
in
or
mov
or
(bad)
mov
fs
lea
fs
lds
fs
push
inc
xchg
les
sbb
addr16
leave
pop
inc
test
cwde
and
popa
in
in
add
shl
scas
adc
inc
xor
or
inc
and
ror
stos
cs
lds
dec
and
js
stos
outs
fld
jb
sub
les
jb
sub
test
inc
jb
imul
cmp
out
sub
or
test
ja
mov
sbb
inc
jb
sub
les
xor
mov
fwait
and
sub
test
(bad)
cmp
xchg
and
into
cmp
fwait
and
imul
movs
test
push
sbb
sbb
outs
mov
xchg
dec
push
and
pushf
and
mov
fwait
and
in
jmp
push
stos
out
(bad)
out
out
bound
inc
jmp
fild
movs
jnp
mov
sbb
test
and
cmps
cmp
mov
dec
xor
mov
push
sbb
sbb
scas
jnp
or
xchg
and
enter
pusha
outs
mov
les
jmp
mov
add
inc
xor
test
xchg
and
enter
pusha
outs
mov
les
sahf
sub
dec
and
or
xchg
and
enter
pusha
outs
mov
les
sahf
(bad)
mov
mov
test
bndldx
sbb
outs
mov
les
pop
lds
cmp
jmp
movs
dec
ss
movs
dec
ss
movs
dec
ss
movs
dec
ss
movs
dec
ss
movs
dec
ss
movs
dec
ss
movs
dec
ss
movs
dec
ss
movs
dec
ss
movs
dec
ss
movs
dec
ss
movs
dec
ss
movs
dec
ss
movs
dec
ss
movs
dec
ss
movs
dec
ss
movs
dec
ss
movs
dec
ss
inc
inc
add
call
out
(bad)
push
gs
repnz
cmp
add
dec
mov
test
mov
or
sub
retf
iret
push
hlt
in
dec
out
in
cli
adc
movs
inc
push
or
sub
leave
inc
jmp
int
dec
push
pop
mov
sti
movs
cmp
imul
test
mov
lods
xor
rol
inc
inc
mov
imul
in
je
dec
ss
push
jp
mov
out
dec
rcl
cmps
adc
add
cmp
movs
dec
push
pop
test
dec
pop
test
or
mov
or
dec
mov
les
dec
cmp
sbb
cdq
leave
push
dec
les
pop
and
jmp
call
stc
mov
stos
xchg
cmc
nop
add
dec
dec
jmp
push
cmc
adc
movs
inc
push
jns
into
lds
mov
ds
and
dec
(bad)
pop
mov
cmp
ret
pop
inc
xlat
push
gs
fs
push
adc
and
jmp
dec
jne
ret
sar
sub
leave
stos
pop
xor
dec
push
mov
add
dec
mov
stos
xchg
stc
jne
leave
(bad)
add
dec
(bad)
dec
test
mov
xchg
mov
xchg
cmp
mov
dec
mov
push
xor
dec
mov
push
jno
dec
mov
push
mov
dec
mov
dec
ss
mov
pop
or
addr16
pop
or
inc
mov
pop
xchg
dec
mov
dec
(bad)
dec
movs
push
jmp
movs
inc
or
sub
jmp
inc
mov
ss
mov
pop
or
mov
ss
add
jmp
movs
dec
xchg
addr16
repnz
add
dec
push
push
mov
icebp
push
stos
inc
ss
pop
ds
or
jmp
inc
dec
ss
add
add
or
stos
mov
pop
ds
mov
stos
(bad)
movs
push
jmp
or
or
jmp
inc
pop
ds
mov
in
fdivrp
mov
stos
xchg
cmc
nop
add
dec
dec
jmp
push
cmc
adc
movs
inc
push
jns
into
lds
mov
ds
and
dec
(bad)
pop
mov
cmp
ret
pop
inc
xlat
push
gs
fs
sti
xchg
add
jge
jmp
mov
or
jmp
mov
bound
jmp
mov
popa
ss
enter
enter
leave
lods
int
aad
rol
stos
inc
push
dec
and
jmp
inc
mov
ss
movs
inc
push
jns
dec
(bad)
pop
sub
pop
ds
and
dec
(bad)
pop
sub
mov
push
pop
mov
mov
add
push
test
mov
xchg
dec
or
sti
mov
or
sub
mov
mov
outs
or
out
xchg
dec
mov
push
jno
dec
mov
mov
and
sbb
add
dec
ss
push
pop
mov
xor
add
ret
push
add
fidiv
or
ret
test
mov
pop
sti
ds
or
push
imul
jmp
push
cmc
hlt
sub
inc
push
pop
add
jp
or
data16
xchg
dec
mov
push
icebp
xchg
dec
mov
push
jno
dec
mov
mov
and
sbb
add
push
jmp
push
pop
mov
xor
add
ret
push
add
fidiv
or
ret
test
mov
pop
sti
ds
or
push
imul
jmp
push
cmc
hlt
sub
inc
push
pop
add
jp
retf
push
pop
add
sbb
mov
mov
(bad)
mov
scas
fdivr
movs
pop
scas
pop
and
cs
movs
pop
push
inc
and
push
test
ss
movs
inc
push
jns
dec
(bad)
pop
sub
pop
ds
and
dec
(bad)
pop
sub
mov
push
pop
mov
mov
add
push
test
mov
xchg
dec
or
sti
mov
or
sub
leave
test
xchg
pop
ds
in
jo
lods
sub
leave
gs
add
lods
sub
leave
inc
rol
jmp
dec
and
retf
and
mov
and
adc
mov
mov
in
fdivrp
mov
stos
xchg
cmc
nop
add
dec
dec
jmp
push
cmc
adc
movs
inc
push
jns
into
lds
mov
ds
and
dec
(bad)
pop
mov
cmp
ret
pop
inc
xlat
push
gs
fs
sti
xchg
add
or
xchg
add
adc
jmp
mov
js
jmp
mov
jg
jmp
les
ins
mov
neg
pop
dec
xor
ds
test
xchg
pop
ds
in
push
jmp
push
pop
ds
gs
add
lods
sub
leave
inc
rol
jmp
sub
jno
stos
es
mov
and
adc
pop
imul
cmc
nop
add
dec
(bad)
pop
sub
pop
ds
and
dec
(bad)
pop
sub
mov
push
pop
mov
mov
add
push
test
mov
xchg
dec
or
sti
mov
or
sub
jmp
add
jp
lea
mov
cs
mov
mov
(bad)
mov
scas
fdivr
fs
scas
pop
in
cs
fs
push
push
in
xor
mov
fdivrp
cmps
sub
jno
sti
xchg
add
aaa
ss
mov
push
ss
mov
push
ss
ror
out
lods
int
aad
adc
stos
inc
ss
iret
sub
jmp
mov
fs
push
aad
xchg
add
jnp
jmp
mov
aaa
ss
mov
and
mov
pop
into
std
movs
push
scas
pop
and
cs
movs
push
push
inc
and
pop
test
js
inc
inc
add
sbb
xor
ds
inc
jmp
retf
movs
dec
push
pop
add
jp
enter
pop
add
sbb
pop
test
outs
mov
sub
mov
ins
outs
pop
into
or
ins
pop
iret
lods
int
push
repnz
xor
inc
push
jmp
add
fidiv
sbb
in
fdivrp
mov
aaa
ss
or
sub
loope
cmc
adc
movs
inc
push
jns
into
add
mov
xchg
in
inc
xchg
pop
sub
push
mov
sbb
mov
sub
xor
sti
xchg
add
outs
ss
mov
sub
mov
push
into
std
movs
pop
scas
pop
and
cs
movs
pop
push
inc
and
push
test
ss
movs
inc
push
jns
dec
(bad)
pop
sub
pop
ds
and
dec
(bad)
pop
sub
mov
push
pop
mov
mov
add
push
test
mov
xchg
dec
or
sti
mov
or
push
movs
or
jmp
lods
dec
push
pop
daa
sub
sub
and
leave
test
jmp
push
pop
ds
in
inc
jmp
push
pop
ds
rcl
jmp
push
pop
ds
inc
adc
jmp
sub
jno
stos
das
icebp
mov
rcl
scas
xchg
inc
pop
ds
test
clc
sub
mov
not
mov
xchg
pop
mov
mov
outs
or
out
xchg
dec
mov
push
jno
dec
mov
mov
mov
mov
mov
dec
xchg
pop
jp
(bad)
cmp
or
sub
adc
sti
xchg
add
imul
add
js
jmp
mov
jg
jmp
(bad)
or
ins
addr16
lods
int
aad
rol
stos
inc
ss
push
mov
(bad)
aad
xchg
add
imul
add
jb
jmp
mov
js
jmp
mov
jg
jmp
(bad)
or
ins
addr16
lods
int
aad
rol
stos
inc
ss
push
mov
(bad)
aad
xchg
add
jb
jmp
mov
or
jmp
mov
js
jmp
mov
jg
jmp
(bad)
or
ins
addr16
lods
int
aad
rol
stos
inc
ss
push
mov
(bad)
aad
xchg
add
or
xchg
add
adc
jmp
mov
js
jmp
mov
jg
jmp
(bad)
or
ins
addr16
lods
int
aad
rol
stos
inc
ss
push
mov
(bad)
aad
xchg
add
adc
jmp
mov
cs
mov
js
jmp
mov
jg
jmp
(bad)
or
ins
addr16
lods
int
aad
rol
stos
inc
ss
push
mov
(bad)
aad
xchg
aaa
stos
inc
ss
lods
and
leave
test
xchg
pop
ds
in
dec
jmp
push
pop
ds
gs
add
lods
sub
leave
inc
rol
jmp
sub
jno
stos
sub
mov
sub
adc
pop
ds
pop
sahf
leave
push
lea
xchg
pop
mov
mov
les
mov
out
or
ins
outs
daa
(bad)
or
ins
daa
(bad)
lods
int
aad
rol
stos
inc
ss
sahf
sub
jmp
add
jp
lock
dec
push
pop
add
sbb
lea
mov
scas
int3
mov
mov
outs
sar
push
scas
pop
fs
cs
in
push
inc
fs
pop
inc
mov
cmp
movs
dec
xchg
pop
jp
(bad)
cmp
or
push
mov
dec
mov
push
icebp
hlt
dec
mov
push
rcl
(bad)
scas
push
push
or
adc
mov
mov
mov
mov
lea
push
pop
aad
adc
stos
inc
ss
jno
mov
gs
(bad)
jne
test
inc
push
mov
sub
jno
sti
xchg
add
aaa
ss
mov
push
ss
mov
push
ss
ror
inc
(bad)
lods
int
aad
adc
stos
inc
ss
scas
sub
jmp
pop
sahf
leave
push
lea
xchg
pop
ds
test
pop
jmp
push
pop
ds
in
dec
jmp
push
pop
mov
pop
pop
test
dec
xchg
mov
mov
mov
mov
push
pop
jp
(bad)
cmp
or
push
dec
lds
jmp
mov
imul
aad
xchg
add
je
jmp
mov
sub
mov
push
into
std
in
scas
pop
fs
cs
in
push
inc
fs
pop
test
cmp
movs
dec
xchg
pop
jp
(bad)
cmp
or
sub
xor
sti
xchg
add
outs
ss
mov
sub
mov
push
into
std
in
scas
pop
fs
cs
in
push
inc
fs
pop
test
cmp
movs
push
pop
jp
(bad)
cmp
sbb
xchg
pop
mov
xchg
add
mov
mov
inc
jbe
dec
mov
mov
(bad)
cmp
sbb
xchg
pop
movs
inc
(bad)
out
or
or
sub
in
sbb
xchg
pop
movs
addr16
out
or
or
sub
jmp
mov
xchg
inc
movs
addr16
out
or
or
dec
jl
pop
cmc
cmp
or
push
movs
push
jmp
mov
mov
ds
add
dec
(bad)
dec
in
ss
pop
mov
in
sub
pop
movs
mov
jmp
dec
mov
inc
xor
cmps
das
xchg
hlt
cmps
js
sbb
mov
in
mov
imul
sbb
test
push
adc
sub
mov
inc
je
daa
sub
xchg
or
scas
sub
lea
movs
(bad)
das
xchg
call
or
or
inc
xlat
push
gs
fs
sti
xchg
push
movs
inc
push
dec
add
sti
cmp
movs
sub
jmp
(bad)
cli
cmp
sub
push
pop
movs
mov
dec
add
add
mov
or
or
test
push
cmc
hlt
sub
inc
push
(bad)
mov
ss
jne
daa
push
cmc
xchg
daa
mov
test
loope
loop
stos
mov
fwait
push
cmps
inc
(bad)
push
gs
loope
repnz
daa
movs
inc
ss
and
es
inc
jmp
inc
lods
dec
xchg
pop
stos
push
fcom
stos
mov
movs
hlt
es
sti
push
(bad)
call
mov
mov
pop
or
sub
jno
ins
cs
and
mov
or
sub
jno
jb
cmc
xor
jg
mov
or
sub
or
out
mov
mov
mov
lods
mov
mov
retf
mov
or
test
push
outs
ss
mov
dec
mov
mov
sbb
or
push
imul
mov
mov
retf
mov
or
test
push
outs
ss
mov
dec
mov
mov
sbb
or
push
imul
mov
push
pop
mov
retf
lock
in
js
mov
pop
or
stos
mov
pop
ds
and
dec
add
push
imul
xor
fcom
hlt
es
cmc
hlt
cmp
inc
push
aam
cmc
nop
add
into
sub
or
sub
in
daa
mov
mov
dec
mov
mov
mov
jp
or
push
imul
pop
mov
retf
out
test
js
mov
pop
or
stos
mov
pop
mov
xor
add
ret
push
add
fidiv
or
ret
test
mov
pop
sti
ds
or
push
imul
rol
mov
sbb
je
dec
or
inc
ret
push
in
fs
cli
adc
movs
inc
or
dec
ficom
mov
mov
aam
or
ret
add
fidiv
or
ret
test
mov
xchg
dec
or
inc
rcl
es
fidiv
or
pop
push
icebp
mov
and
and
pop
push
out
lods
stos
mov
pop
ds
and
dec
(bad)
pop
sub
pop
ds
and
dec
(bad)
pop
sub
mov
push
pop
ds
and
dec
(bad)
pop
lods
mov
ds
and
dec
(bad)
pop
mov
xor
ins
cs
and
xor
movs
pop
ins
out
mov
jns
jmp
in
inc
push
pop
mov
hlt
es
cmc
je
std
inc
push
out
cmp
icebp
mov
pusha
jmp
dec
fcom
hlt
es
cmc
hlt
aas
std
inc
push
out
cmp
out
inc
fcom
hlt
es
cmc
je
std
inc
push
out
cmp
test
push
movs
hlt
es
cmc
je
std
inc
push
out
cmp
icebp
mov
sub
dec
fcom
hlt
es
cmc
hlt
aas
jecxz
(bad)
push
add
fidiv
iret
push
pop
mov
retf
out
cmp
mov
pop
or
stos
mov
push
cmc
je
in
xchg
pop
test
stos
je
ds
sbb
add
stos
mov
mov
push
mov
mov
dec
mov
mov
mov
arpl
mov
push
mov
mov
dec
mov
mov
mov
or
dec
jl
push
cmc
hlt
push
mov
mov
loope
stos
idiv
inc
mov
loope
in
push
jmp
test
cmp
inc
dec
push
loope
cmc
hlt
jbe
inc
push
in
inc
es
xchg
push
gs
loope
retw
inc
ss
jb
jmp
push
jne
push
test
popf
mov
ds
or
jmp
ins
dec
(bad)
sub
out
adc
test
or
push
out
mov
push
ja
jge
jmp
movs
dec
ss
push
pop
ds
and
dec
(bad)
pop
sub
pop
ds
and
dec
(bad)
pop
sub
mov
push
pop
mov
jb
add
push
test
mov
inc
sti
ds
mov
push
mov
cmps
mov
mov
add
jb
or
stos
mov
outs
sbb
test
sub
pop
mov
xor
add
ret
push
add
fidiv
or
ret
test
mov
pop
sti
ds
or
push
imul
jmp
jp
or
stos
mov
push
cmc
je
loop
push
pop
add
stos
xchg
cmp
in
call
dec
and
sti
push
cmps
call
mov
mov
pop
or
sub
jno
addr16
and
xor
sbb
or
sub
jno
push
cmc
ds
ss
mov
or
stos
mov
pop
mov
retf
push
cmc
adc
movs
inc
push
jns
push
pop
jmp
lods
daa
adc
mov
dec
mov
mov
mov
jp
or
inc
ret
push
in
fs
xlat
es
out
jns
jmp
in
inc
push
pop
mov
hlt
es
cmc
je
std
inc
push
out
cmp
icebp
mov
sub
dec
fcom
hlt
es
cmc
hlt
aas
std
inc
push
out
cmp
mov
and
inc
dec
fcom
hlt
es
cmc
je
jecxz
(bad)
push
add
fidiv
iret
push
pop
ds
and
dec
push
mov
pop
jecxz
cmc
xor
inc
(bad)
push
gs
fs
cmc
cmp
jmp
push
cmc
je
in
inc
push
pop
mov
hlt
es
cmc
je
std
inc
push
out
cmp
icebp
mov
sub
dec
fcom
hlt
es
cmc
hlt
aas
std
inc
push
out
cmp
test
push
movs
hlt
es
cmc
je
jecxz
(bad)
push
add
fidiv
iret
push
pop
mov
retf
jmp
xor
mov
pop
or
stos
mov
pop
mov
retf
push
cmc
adc
movs
inc
push
jns
mov
pop
inc
mov
jecxz
cmc
xor
inc
(bad)
push
gs
fs
cmc
nop
add
dec
ins
jmp
test
mov
enter
test
fcom
hlt
es
cmc
hlt
cmp
inc
(bad)
push
add
fidiv
iret
push
pop
mov
retf
stc
out
les
js
mov
pop
or
sub
or
in
push
add
fidiv
iret
push
pop
mov
retf
inc
xor
mov
pop
or
sub
or
sub
push
test
mov
enter
gs
add
ret
inc
fcom
hlt
es
cmc
hlt
cmp
inc
(bad)
push
add
fidiv
iret
push
pop
ds
and
dec
push
mov
pop
jecxz
cmc
xor
inc
(bad)
push
gs
fs
cmc
nop
add
into
xor
or
push
imul
mov
loope
inc
fcom
hlt
es
cmc
hlt
cmp
inc
(bad)
push
add
fidiv
iret
push
pop
ds
and
dec
push
mov
pop
jecxz
cmc
xor
inc
(bad)
push
gs
fs
cmc
nop
add
into
xor
or
push
imul
fucomi
lds
fcom
hlt
es
cmc
hlt
cmp
inc
(bad)
push
add
fidiv
iret
push
pop
ds
and
dec
push
mov
pop
jecxz
cmc
xor
inc
(bad)
push
gs
fs
cmc
nop
add
into
aam
sub
pop
ds
and
dec
(bad)
pop
sub
mov
push
pop
ds
and
dec
(bad)
pop
lods
mov
ds
and
dec
(bad)
pop
mov
xor
jne
cmc
cmp
pop
cmp
cmp
out
sbb
or
sub
or
add
push
add
fidiv
jmp
movs
inc
push
jns
dec
sub
cmps
sub
lods
pop
loop
mov
dec
mov
mov
mov
jp
or
push
imul
mov
ds
and
dec
push
mov
pop
jecxz
cmc
xor
inc
(bad)
push
gs
fs
cmc
nop
add
into
xor
or
push
imul
add
out
inc
pop
add
push
movs
hlt
es
cmc
hlt
cmp
inc
(bad)
push
add
fidiv
iret
push
pop
ds
and
dec
push
mov
pop
jecxz
cmc
xor
inc
(bad)
push
gs
fs
cmc
nop
add
into
xor
or
push
imul
pop
in
test
fcom
hlt
es
cmc
hlt
cmp
inc
(bad)
push
add
fidiv
jmp
movs
inc
push
jns
dec
adc
lods
pop
(bad)
fstp
dec
mov
mov
mov
jp
or
sub
push
test
mov
mov
mov
cmps
ss
js
mov
pop
or
stos
mov
pop
mov
mov
add
ret
push
add
fidiv
or
ret
test
mov
xchg
dec
or
inc
rcl
es
fidiv
or
mov
shl
adc
jecxz
push
push
fwait
or
hlt
es
cmc
hlt
and
inc
push
out
cmp
mov
and
and
mov
or
stos
mov
pop
ds
and
dec
add
push
imul
add
call
ret
inc
fcom
hlt
es
cmc
hlt
cmp
inc
push
out
cmp
test
push
movs
hlt
es
cmc
je
std
inc
push
out
cmp
mov
mov
push
movs
hlt
es
cmc
hlt
aas
in
xchg
pop
add
jmp
cmps
pop
push
pop
add
mov
ds
and
dec
add
push
imul
add
cvtps2pd
mov
pop
or
stos
mov
push
cmc
je
cmc
inc
push
test
stos
ror
pop
ss
movs
inc
or
stos
mov
pop
ds
and
dec
add
push
imul
push
jbe
jecxz
(bad)
push
test
adc
movs
dec
mov
jecxz
cmc
xor
inc
(bad)
push
in
fs
cmc
nop
add
out
imul
test
mov
lds
in
and
inc
(bad)
push
add
(bad)
adc
movs
dec
mov
jecxz
cmc
xor
inc
(bad)
push
in
fs
cli
rol
movs
inc
push
or
stos
mov
pop
ds
and
dec
(bad)
pop
sub
pop
ds
and
dec
(bad)
pop
sub
mov
push
pop
ds
and
dec
(bad)
pop
lods
mov
ds
and
dec
(bad)
pop
mov
xor
bound
cmc
and
xchg
push
in
lods
stos
mov
pop
ds
and
dec
(bad)
pop
sub
pop
ds
and
dec
(bad)
pop
sub
mov
push
pop
ds
and
dec
(bad)
pop
lods
mov
ds
and
dec
(bad)
pop
mov
xor
gs
and
xor
lods
stos
mov
pop
ds
and
dec
(bad)
pop
sub
pop
ds
and
dec
(bad)
pop
sub
mov
push
pop
ds
and
dec
(bad)
pop
lods
mov
ds
and
dec
(bad)
pop
mov
xor
bound
cmc
and
xchg
and
lods
stos
mov
pop
ds
and
dec
(bad)
pop
sub
pop
ds
and
dec
(bad)
pop
sub
mov
push
pop
ds
and
dec
(bad)
pop
lods
mov
ds
and
dec
(bad)
pop
mov
xor
ins
cs
and
xor
in
lods
stos
mov
pop
ds
and
dec
(bad)
pop
sub
pop
ds
and
dec
(bad)
pop
sub
mov
push
pop
ds
and
dec
(bad)
pop
lods
mov
ds
and
dec
(bad)
pop
mov
xor
movs
push
cmc
cmc
sti
jb
scas
inc
fstp
ds
push
sti
push
mov
inc
add
push
loope
mov
or
sub
jno
gs
and
xor
sbb
or
sub
jno
jne
cmc
cmp
out
sbb
or
sub
jmp
inc
mov
sbb
mov
cmc
nop
add
push
or
mov
mov
mov
scas
dec
ss
out
add
js
mov
pop
or
sub
or
push
(bad)
push
cmc
nop
add
dec
psubsw
mov
mov
scas
dec
ss
cmps
ss
js
mov
pop
or
stos
mov
push
cmc
je
in
xchg
pop
test
add
stos
je
ds
sbb
add
stos
mov
mov
push
mov
mov
dec
mov
mov
mov
arpl
mov
push
mov
mov
dec
mov
mov
mov
or
dec
(bad)
dec
movs
pop
ss
movs
inc
push
jns
into
adc
mov
mov
mov
scas
dec
ss
pop
xor
mov
or
stos
mov
pop
ds
and
dec
add
push
imul
push
add
ret
inc
fcom
hlt
es
cmc
hlt
cmp
inc
(bad)
push
add
fidiv
jmp
movs
inc
push
jns
into
push
jmp
lods
inc
outs
fstp
dec
mov
mov
mov
js
ds
and
cli
rol
movs
inc
push
or
stos
mov
pop
ds
and
dec
add
push
imul
pop
add
ret
inc
fcom
hlt
es
cmc
hlt
cmp
inc
(bad)
push
add
fidiv
jmp
movs
inc
push
jns
dec
sub
cmps
sub
lods
pop
push
fstp
dec
mov
mov
mov
jp
or
push
imul
pop
ds
and
dec
push
mov
pop
jecxz
cmc
xor
inc
(bad)
push
gs
fs
mov
jmp
inc
pop
ds
add
fidiv
jmp
movs
inc
push
jns
into
sub
test
sub
or
stos
mov
js
ds
daa
xchg
inc
pop
mov
add
push
add
fidiv
jmp
movs
inc
push
jns
into
sub
and
xchg
mov
dec
mov
mov
mov
jp
or
push
imul
pop
ds
and
dec
push
mov
pop
jecxz
cmc
xor
inc
(bad)
push
gs
fs
cmc
cmp
jmp
push
cmc
je
in
inc
push
pop
mov
hlt
es
cmc
je
std
inc
push
out
cmp
loope
dec
fcom
hlt
es
cmc
hlt
aas
std
inc
push
out
cmp
test
push
movs
hlt
es
cmc
je
jecxz
(bad)
push
add
fidiv
jmp
movs
inc
push
jns
mov
jmp
lods
pop
inc
fstp
dec
mov
mov
mov
jp
or
inc
ret
push
in
fs
pop
scas
jmp
ds
inc
jmp
shl
add
stos
je
ds
sbb
add
stos
mov
mov
push
mov
mov
dec
mov
mov
mov
arpl
mov
push
mov
mov
dec
mov
mov
mov
or
sub
push
test
mov
enter
inc
push
add
ret
inc
fcom
hlt
es
cmc
hlt
cmp
inc
(bad)
push
add
fidiv
or
ret
add
fidiv
or
ret
test
mov
pop
sti
ds
or
sub
loope
dec
scas
pop
xchg
push
sub
push
shl
add
test
loope
cmc
xor
inc
(bad)
push
and
nop
add
push
xlat
pop
sub
pop
ds
and
dec
(bad)
pop
sub
mov
push
pop
mov
repnz
inc
rcl
es
fidiv
or
mov
shl
adc
jecxz
add
xchg
mov
pop
or
stos
mov
push
cmc
je
jmp
mov
or
dec
and
cli
adc
inc
or
jmp
push
cmc
je
in
inc
push
pop
mov
hlt
es
cmc
je
std
inc
push
out
cmp
icebp
mov
sub
dec
fcom
hlt
es
cmc
hlt
aas
std
inc
push
out
cmp
test
push
movs
hlt
es
cmc
je
loop
push
pop
add
scas
xchg
mov
or
sub
popa
push
cmc
nop
add
dec
push
jmp
push
cmc
adc
movs
inc
push
jns
push
rcr
mov
ds
and
dec
(bad)
pop
mov
xor
jne
cmc
cmp
pop
das
lahf
cmp
mov
jmp
push
cmc
xor
inc
(bad)
push
and
nop
add
push
pop
jmp
push
cmc
nop
add
dec
jmpw
xchg
cmc
adc
movs
inc
push
jns
push
rcr
mov
ds
and
dec
(bad)
pop
mov
xor
jne
cmc
cmp
pop
sub
ss
push
cmc
xor
inc
(bad)
push
and
dec
jmp
jnp
imul
mov
pop
mov
jb
add
ret
push
add
fidiv
or
ret
test
mov
pop
sti
ds
or
push
imul
rol
(bad)
mov
mov
mov
jmp
add
movs
hlt
es
cmc
hlt
and
inc
(bad)
push
add
fidiv
or
ret
add
fidiv
or
ret
test
mov
pop
sti
ds
or
push
imul
rol
(bad)
mov
mov
mov
movs
jp
or
stos
mov
js
ds
gs
xchg
xor
test
cmc
nop
add
push
xlat
pop
sub
pop
ds
and
dec
(bad)
pop
sub
mov
push
pop
mov
jb
add
push
test
mov
xchg
dec
or
mov
shl
adc
jecxz
gs
ss
mov
pop
or
push
mov
add
push
ss
mov
mov
mov
pop
sti
mov
stc
mov
bound
jmp
or
sub
loope
cmc
adc
movs
inc
push
jns
dec
add
mov
xchg
fimul
xchg
push
sub
push
shl
inc
pop
imul
jl
or
stos
mov
jp
or
push
imul
sti
mov
stc
mov
sbb
jmp
or
sub
loope
cmc
adc
movs
inc
push
jns
dec
add
mov
xchg
fimul
xchg
push
sub
push
shl
add
in
xchg
loope
cmc
xor
inc
(bad)
push
and
add
mov
pop
imul
(bad)
push
add
fidiv
sbb
in
fdivrp
mov
bound
jmp
or
sub
loope
cmc
adc
movs
inc
push
jns
dec
add
mov
xchg
fimul
xchg
push
sub
push
shl
inc
fwait
retf
movs
mov
dec
mov
scas
stos
mov
jp
or
push
imul
sti
mov
stc
mov
sbb
jmp
or
sub
loope
cmc
adc
movs
inc
push
jns
dec
add
mov
xchg
fimul
xchg
push
sub
push
shl
inc
fcomi
mov
ss
jge
or
stos
mov
js
ds
gs
ss
movs
inc
jbe
mov
(bad)
dec
and
cmc
nop
add
push
xlat
pop
sub
pop
ds
and
dec
(bad)
pop
sub
mov
push
pop
mov
jb
add
push
test
mov
xchg
dec
or
mov
shl
adc
jecxz
repz
sbb
add
movs
hlt
es
cmc
hlt
and
inc
(bad)
push
add
fidiv
or
ret
add
fidiv
or
ret
test
mov
pop
sti
ds
or
push
imul
rol
(bad)
mov
mov
mov
jmp
add
movs
hlt
es
cmc
hlt
and
inc
push
mov
repnz
xor
inc
push
jmp
mov
mov
or
push
dec
lds
jmp
call
mov
mov
pop
or
sub
jno
addr16
and
xor
sbb
or
sub
jno
jne
cmc
cmp
out
sbb
or
stos
mov
pop
mov
jb
add
ret
push
add
fidiv
or
ret
test
mov
pop
sti
ds
or
push
imul
rol
(bad)
mov
mov
mov
jmp
add
movs
hlt
es
cmc
hlt
and
inc
(bad)
push
add
fidiv
or
ret
add
fidiv
or
ret
test
mov
pop
sti
ds
or
push
imul
rol
(bad)
mov
mov
mov
jmp
add
movs
hlt
es
cmc
hlt
and
inc
(bad)
push
mov
mov
or
dec
fcom
pushf
fs
sti
ds
push
cmc
xor
inc
(bad)
push
in
fs
dec
scas
lahf
xchg
push
sub
dec
pusha
call
cmps
inc
(bad)
push
gs
fs
dec
scas
pop
xchg
push
sub
push
shl
cmc
xor
inc
(bad)
push
in
fs
cmc
nop
add
push
aaa
add
sub
and
cmps
js
mov
dec
mov
mov
mov
jp
or
inc
ret
push
in
fs
cli
adc
inc
ss
dec
jecxz
leave
out
jns
jmp
in
inc
push
pop
mov
hlt
es
cmc
je
std
inc
push
out
cmp
icebp
mov
sub
dec
fcom
hlt
es
cmc
hlt
aas
std
inc
push
out
cmp
test
push
movs
hlt
es
cmc
je
in
inc
push
push
push
sti
xchg
mov
or
push
loope
mov
or
sub
jno
addr16
and
xor
sbb
or
sub
jno
jne
cmc
cmp
out
sbb
or
stos
mov
pop
mov
repnz
ret
add
fidiv
or
ret
test
mov
pop
sti
ds
or
sub
loope
dec
scas
pop
xchg
push
sub
push
rcl
stos
xchg
daa
jmp
xchg
pop
daa
lahf
jl
lods
out
fidivr
pop
or
push
sti
mov
xchg
es
push
ss
psubq
add
jge
or
stos
mov
js
mov
pop
or
or
dec
or
jecxz
adc
mov
movs
hlt
es
cmc
hlt
and
inc
push
aam
cli
xchg
xor
aam
cmp
(bad)
dec
fstp
movs
hlt
es
cmc
hlt
and
inc
push
push
xchg
cli
xchg
xor
cmps
dec
xchg
(bad)
jmp
xchg
pop
and
jl
lods
daa
fidivr
pop
or
stos
mov
push
cmc
je
loop
push
pop
test
fadd
push
fisub
pushf
fs
sti
ds
push
cmc
xor
inc
(bad)
push
in
fs
dec
scas
lahf
xchg
push
sub
dec
pusha
call
cmps
inc
(bad)
push
gs
fs
dec
scas
pop
xchg
push
sub
push
shl
cmc
xor
inc
(bad)
push
in
fs
neg
loope
mov
ds
sbb
add
stos
mov
mov
push
mov
mov
dec
mov
mov
mov
arpl
mov
push
mov
mov
dec
mov
mov
mov
or
push
pop
push
cmc
nop
add
mov
jmp
push
cmc
nop
add
into
or
mov
xchg
cmc
adc
movs
inc
push
jns
push
xlat
pop
lods
mov
mov
jb
sbb
mov
shl
xor
fdivrp
mov
stos
xchg
cmc
nop
add
into
or
mov
xchg
cmc
adc
movs
inc
push
jns
push
xlat
pop
lods
mov
mov
jb
sbb
mov
shl
adc
jecxz
push
dec
cmp
movs
hlt
es
cmc
hlt
and
inc
(bad)
push
mov
mov
inc
jle
jmp
movs
inc
push
or
jmp
push
cmc
je
in
inc
push
pop
mov
hlt
es
cmc
je
std
inc
push
out
cmp
icebp
mov
sub
dec
fcom
hlt
es
cmc
hlt
aas
std
inc
push
out
cmp
test
push
movs
hlt
es
cmc
je
jmp
(bad)
push
mov
mov
or
stos
ror
ja
jmp
test
mov
inc
xor
pop
loope
sub
xchg
or
jecxz
leave
out
jns
jmp
in
inc
push
pop
mov
hlt
es
cmc
je
std
inc
push
out
cmp
icebp
mov
sub
dec
fcom
hlt
es
cmc
hlt
aas
std
inc
push
out
cmp
test
push
movs
hlt
es
cmc
je
in
inc
push
push
push
sti
xchg
mov
or
push
loope
mov
or
sub
jno
addr16
and
xor
sbb
or
sub
jno
jne
cmc
cmp
out
sbb
or
push
test
rcl
push
add
fidiv
sbb
in
fdivrp
mov
outs
ss
or
push
outs
pop
sti
ds
or
push
outs
inc
sti
ds
mov
push
mov
cmps
mov
mov
push
movs
hlt
es
cmc
hlt
and
inc
(bad)
push
mov
mov
lds
es
xor
mov
jmp
movs
dec
ss
mov
(bad)
dec
sbb
push
cmps
call
mov
mov
pop
or
sub
jno
addr16
and
xor
sbb
or
sub
jno
jne
cmc
cmp
out
sbb
or
dec
xchg
call
push
add
fidiv
or
ret
add
fidiv
or
ret
test
mov
pop
sti
ds
or
push
imul
rol
(bad)
mov
mov
mov
jmp
add
movs
hlt
es
cmc
hlt
and
inc
push
xor
dec
ss
mov
(bad)
dec
in
ss
movs
inc
push
jns
dec
das
jmp
push
cmc
nop
add
into
or
mov
xchg
cmc
adc
movs
inc
push
jns
push
xlat
pop
lods
mov
ds
and
dec
(bad)
pop
mov
xor
jne
cmc
cmp
pop
cmp
ss
push
cmc
xor
inc
(bad)
push
and
nop
add
mov
mov
xchg
cmc
nop
add
push
pop
jmp
push
cmc
adc
movs
inc
push
jns
push
xlat
pop
lods
mov
ds
and
dec
(bad)
pop
mov
xor
jne
cmc
cmp
pop
sub
pop
fnstsw
pop
or
push
mov
imul
add
mov
push
ss
or
push
imul
ins
(bad)
mov
stos
xchg
push
cmc
adc
movs
inc
push
jns
dec
add
mov
xchg
fimul
xchg
push
sub
push
shl
add
in
add
push
cmc
xor
inc
(bad)
push
and
in
cmps
dec
xchg
test
inc
jmp
lock
mov
mov
mov
or
ret
add
fidiv
or
ret
test
mov
pop
sti
ds
or
push
imul
rol
(bad)
mov
mov
mov
jmp
add
movs
hlt
es
cmc
hlt
and
inc
(bad)
push
add
fidiv
or
ret
add
fidiv
or
ret
test
mov
pop
sti
ds
or
push
imul
rol
(bad)
mov
mov
mov
jmp
add
movs
hlt
es
cmc
hlt
and
inc
push
xor
dec
ss
test
xchg
(bad)
push
cmc
nop
add
dec
das
jmp
push
cmc
nop
add
into
or
mov
xchg
cmc
adc
movs
inc
push
jns
push
xlat
pop
lods
mov
ds
and
dec
(bad)
pop
mov
xor
jne
cmc
cmp
pop
das
lahf
cmp
mov
jmp
push
cmc
xor
inc
(bad)
push
and
sahf
jmp
test
add
add
fidiv
or
ret
add
fidiv
or
ret
test
mov
pop
sti
ds
or
push
imul
rol
(bad)
mov
mov
mov
jmp
add
movs
hlt
es
cmc
hlt
and
inc
push
mov
dec
ss
test
xchg
(bad)
push
cmc
nop
add
dec
das
jmp
push
cmc
nop
add
into
or
mov
xchg
cmc
adc
movs
inc
push
jns
push
xlat
pop
lods
mov
ds
and
dec
(bad)
pop
mov
xor
jne
cmc
cmp
pop
aaa
lahf
cmp
mov
jmp
push
cmc
xor
inc
(bad)
push
and
mov
push
test
add
add
fidiv
or
ret
add
fidiv
or
ret
test
mov
pop
sti
ds
or
push
imul
rol
(bad)
mov
mov
mov
jmp
add
movs
hlt
es
cmc
hlt
and
inc
push
xor
dec
ss
test
cmc
nop
add
dec
das
jmp
push
cmc
nop
add
into
or
mov
xchg
cmc
adc
movs
inc
push
jns
push
xlat
pop
lods
mov
ds
and
dec
(bad)
pop
mov
xor
jne
cmc
cmp
pop
sub
(bad)
mov
mov
pop
or
push
xchg
imul
add
in
fdivrp
mov
push
ss
or
push
imul
ins
(bad)
mov
stos
xchg
push
cmc
adc
movs
inc
push
jns
dec
add
mov
xchg
fimul
xchg
push
sub
push
shl
inc
jnp
stos
dec
ss
cmp
or
stos
mov
js
ds
add
cli
ror
mov
dec
ins
cmps
mov
pop
ds
and
dec
(bad)
pop
sub
pop
ds
and
dec
(bad)
pop
sub
mov
push
pop
mov
jb
add
push
test
mov
xchg
dec
or
mov
shl
adc
jecxz
push
dec
fild
inc
(bad)
push
movs
hlt
es
cmc
hlt
and
inc
push
xor
dec
ss
test
xchg
(bad)
push
cmc
nop
add
dec
das
jmp
push
cmc
nop
add
into
or
mov
xchg
cmc
adc
movs
inc
push
jns
push
xlat
pop
lods
mov
ds
and
dec
(bad)
pop
mov
xor
jne
cmc
cmp
pop
aas
lahf
cmp
test
ss
push
cmc
xor
inc
(bad)
push
and
jae
cmps
dec
xchg
test
add
loope
fidiv
or
ret
add
fidiv
or
ret
test
mov
pop
sti
ds
or
push
imul
rol
(bad)
mov
mov
mov
inc
jp
or
stos
mov
js
ds
add
cli
ror
mov
dec
ins
cmps
mov
pop
ds
and
dec
(bad)
pop
sub
pop
ds
and
dec
(bad)
pop
sub
mov
push
pop
mov
jb
add
push
test
mov
xchg
dec
or
mov
shl
adc
jecxz
mov
sti
xor
hlt
es
cmc
hlt
and
inc
push
xor
dec
ss
test
xchg
(bad)
push
cmc
nop
add
dec
das
jmp
push
cmc
nop
add
into
or
mov
xchg
cmc
adc
movs
inc
push
jns
push
xlat
pop
lods
mov
ds
and
dec
(bad)
pop
mov
xor
jne
cmc
cmp
pop
ss
cmp
test
ss
push
cmc
xor
inc
(bad)
push
and
sub
push
test
add
loope
fidiv
or
ret
add
fidiv
or
ret
test
mov
pop
sti
ds
or
push
imul
rol
(bad)
mov
mov
mov
jmp
add
movs
hlt
es
cmc
hlt
and
inc
push
push
mov
ror
mov
dec
sub
pop
ds
and
dec
(bad)
pop
sub
pop
ds
and
dec
(bad)
pop
sub
mov
push
pop
mov
jb
add
push
test
mov
xchg
dec
or
mov
shl
adc
jecxz
add
addr16
mov
pop
or
stos
mov
push
cmc
je
cmc
inc
push
xor
dec
ss
or
or
jmp
xchg
dec
ss
or
dec
fcom
pushf
fs
sti
ds
push
cmc
xor
inc
(bad)
push
in
fs
dec
scas
lahf
xchg
push
sub
dec
pusha
call
cmps
inc
(bad)
push
gs
fs
dec
scas
pop
xchg
push
sub
push
shl
cmc
xor
inc
(bad)
push
in
fs
cmc
nop
add
push
xlat
pop
sub
pop
ds
and
dec
(bad)
pop
sub
mov
push
pop
mov
jb
add
push
test
mov
inc
sti
ds
mov
push
mov
mov
push
xchg
pop
and
jl
pop
mov
or
stos
mov
pop
ds
and
dec
(bad)
pop
sub
pop
ds
and
dec
(bad)
pop
sub
mov
push
pop
mov
jb
add
push
test
mov
xchg
dec
or
mov
shl
adc
jecxz
test
jmp
mov
pop
or
stos
mov
pop
mov
jb
add
ret
push
add
fidiv
or
ret
test
mov
mov
or
inc
rcl
es
fidiv
or
mov
shl
cmc
xchg
dec
jns
test
outs
add
push
cmps
inc
(bad)
push
and
nop
add
dec
das
jmp
push
cmc
nop
add
dec
dec
jmp
push
cmc
adc
movs
inc
push
jns
dec
das
jmp
push
cmc
adc
movs
inc
push
jns
dec
add
mov
xchg
fimul
xchg
push
sub
push
rcl
(bad)
fidiv
jecxz
test
jmp
sbb
or
stos
mov
push
cmc
je
hlt
inc
push
xor
dec
mov
retf
movs
ja
jmp
call
mov
mov
pop
or
sub
jno
addr16
and
xor
sbb
or
sub
jno
jne
cmc
cmp
out
sbb
or
stos
mov
pop
mov
jb
add
ret
push
add
fidiv
or
ret
test
mov
pop
sti
ds
or
sub
loope
dec
scas
pop
xchg
push
sub
push
rcl
adc
mov
cmp
(bad)
stos
fcom
hlt
es
cmc
hlt
and
inc
(bad)
push
add
fidiv
or
ret
add
fidiv
or
ret
test
mov
pop
sti
ds
or
push
imul
rol
(bad)
mov
mov
mov
jmp
add
movs
hlt
es
cmc
hlt
and
inc
(bad)
push
add
fidiv
sbb
in
fdivrp
mov
outs
ss
or
push
imul
ds
or
push
imul
rol
(bad)
mov
mov
add
pop
and
mov
or
stos
mov
pop
ds
and
dec
(bad)
pop
sub
pop
ds
and
dec
(bad)
pop
sub
mov
push
pop
ds
and
dec
(bad)
pop
lods
mov
ds
and
dec
(bad)
pop
mov
xor
jne
cmc
cmp
xchg
in
sti
mov
jmp
movs
hlt
es
cmc
hlt
and
inc
(bad)
push
mov
mov
test
ss
movs
inc
(bad)
push
imul
cmps
call
mov
mov
pop
or
sub
jno
addr16
and
xor
sbb
or
sub
jno
jne
cmc
cmp
out
sbb
or
stos
mov
pop
mov
jb
add
ret
push
add
fidiv
or
ret
test
mov
pop
sti
ds
or
sub
loope
dec
scas
pop
xchg
push
sub
push
rcl
adc
mov
cmp
(bad)
stos
fcom
hlt
es
cmc
hlt
and
inc
(bad)
push
add
fidiv
or
ret
add
fidiv
or
ret
test
mov
pop
sti
ds
or
push
imul
rol
(bad)
mov
mov
mov
jmp
add
movs
hlt
es
cmc
hlt
and
inc
(bad)
push
mov
mov
add
sti
push
cmps
call
mov
mov
pop
or
sub
jno
addr16
and
xor
sbb
or
sub
jno
jne
cmc
cmp
out
sbb
or
stos
mov
pop
mov
jb
add
ret
push
add
fidiv
or
ret
test
mov
pop
sti
ds
or
sub
loope
dec
scas
pop
xchg
push
sub
push
rcl
adc
mov
cmp
(bad)
stos
fcom
hlt
es
cmc
hlt
and
inc
(bad)
push
mov
mov
or
dec
fcom
pushf
fs
sti
ds
push
cmc
xor
inc
(bad)
push
in
fs
dec
scas
lahf
xchg
push
sub
dec
pusha
call
cmps
inc
(bad)
push
gs
fs
dec
scas
pop
xchg
push
sub
push
shl
cmc
xor
inc
(bad)
push
in
fs
cmc
nop
add
dec
das
jmp
push
cmc
nop
add
dec
dec
jmp
push
cmc
adc
movs
inc
push
jns
push
xlat
pop
lods
mov
ds
and
dec
(bad)
pop
mov
xor
jne
cmc
cmp
pop
xor
dec
ss
push
cmc
xor
inc
(bad)
push
and
cmp
push
icebp
mov
xchg
es
stos
xchg
jns
dec
or
sub
popa
push
cmc
nop
add
dec
dec
jmp
push
cmc
adc
movs
inc
push
jns
push
xlat
pop
lods
mov
ds
and
dec
(bad)
pop
mov
xor
jne
cmc
cmp
cmps
call
mov
mov
pop
or
sub
jno
addr16
and
xor
sbb
or
sub
jno
jne
cmc
cmp
out
sbb
or
or
dec
or
jecxz
push
inc
fist
movs
hlt
es
cmc
hlt
and
inc
(bad)
push
mov
mov
or
sub
popa
push
cmc
nop
add
dec
dec
jmp
push
cmc
adc
movs
inc
push
jns
dec
add
mov
xchg
push
cmc
adc
movs
inc
push
jns
into
add
mov
xchg
int
scas
aas
xchg
push
sub
dec
shr
lods
ss
call
mov
mov
pop
or
sub
jno
bound
cmc
and
mov
or
sub
jno
jge
cmc
xor
and
mov
or
stos
mov
pop
mov
xor
add
ret
push
add
fidiv
pop
or
push
imul
ins
(bad)
mov
jg
jmp
mov
push
mov
mov
sti
mov
in
js
or
stos
mov
jp
or
sub
popa
push
cmc
nop
add
dec
adc
popa
push
cmc
adc
movs
inc
push
jns
dec
add
mov
xchg
push
cmc
adc
movs
inc
push
jns
into
add
mov
xchg
lds
xchg
push
sub
dec
and
push
push
add
push
cmps
inc
(bad)
push
and
nop
add
cs
popa
push
cmc
nop
add
push
push
jmp
push
cmc
adc
movs
inc
push
jns
dec
add
mov
xchg
push
cmc
adc
movs
inc
push
jns
into
add
mov
xchg
lds
xchg
push
sub
dec
and
push
ds
push
cmps
inc
(bad)
push
and
nop
add
push
push
jmp
push
cmc
nop
add
push
jno
mov
xchg
cmc
adc
movs
inc
push
jns
dec
add
mov
xchg
push
cmc
adc
movs
inc
push
jns
into
add
mov
xchg
lds
xchg
push
sub
dec
and
push
cmp
loope
cmc
xor
inc
(bad)
push
and
nop
add
push
jno
mov
xchg
cmc
nop
add
scas
ins
jmp
push
cmc
adc
movs
inc
push
jns
dec
add
mov
xchg
push
cmc
adc
movs
inc
push
jns
into
add
mov
xchg
lds
xchg
push
sub
dec
and
push
cmp
xor
inc
(bad)
push
and
nop
add
scas
ins
jmp
push
cmc
nop
add
scas
push
jmp
push
cmc
adc
movs
inc
push
jns
dec
add
mov
xchg
push
cmc
adc
movs
inc
push
jns
into
add
mov
xchg
lds
xchg
push
sub
dec
and
push
xor
push
cmps
inc
(bad)
push
and
xchg
aaa
stos
inc
ss
sub
pop
ds
and
dec
(bad)
pop
sub
pop
ds
and
dec
(bad)
pop
sub
mov
push
pop
ds
and
dec
(bad)
pop
lods
mov
ds
and
dec
(bad)
pop
mov
xor
push
cmc
and
out
pop
daa
lahf
jl
lods
(bad)
dec
fidivr
pop
or
stos
mov
push
cmc
je
loop
push
pop
test
xchg
cmp
in
fdivrp
mov
stos
xchg
cmc
nop
add
into
ficomp
mov
ds
and
dec
(bad)
pop
lods
mov
ds
and
dec
(bad)
pop
mov
xor
addr16
and
xor
mov
xchg
jns
jmp
in
inc
push
pop
mov
hlt
es
cmc
je
std
inc
push
out
cmp
icebp
mov
sub
dec
fcom
hlt
es
cmc
hlt
aas
std
inc
push
out
cmp
test
push
movs
hlt
es
cmc
je
loope
jbe
psubq
in
js
or
stos
mov
jp
or
inc
ret
push
in
fs
neg
mov
pop
ds
inc
jmp
icebp
mov
mov
mov
pop
sti
mov
stc
mov
imul
pop
or
push
imul
ins
(bad)
mov
jg
jmp
mov
push
mov
mov
dec
ss
or
dec
fcom
pushf
fs
sti
ds
push
cmc
xor
inc
(bad)
push
in
fs
dec
scas
lahf
xchg
push
sub
dec
pusha
call
cmps
inc
(bad)
push
gs
fs
dec
scas
pop
xchg
push
sub
push
shl
cmc
xor
inc
(bad)
push
in
fs
out
pop
daa
lahf
jl
lods
xchg
mov
pop
or
stos
mov
push
cmc
je
jmp
push
adc
dec
mov
or
dec
and
cmc
nop
add
cs
popa
push
cmc
nop
add
push
push
jmp
push
cmc
adc
movs
inc
push
jns
dec
add
mov
xchg
push
cmc
adc
movs
inc
push
jns
into
add
mov
xchg
enter
xchg
push
sub
dec
pusha
call
push
sti
xchg
mov
or
push
loope
mov
or
sub
jno
addr16
and
xor
sbb
or
sub
jno
jne
cmc
cmp
out
sbb
or
or
mov
add
movs
hlt
es
cmc
hlt
and
inc
(bad)
push
mov
mov
gs
jmp
movs
inc
push
or
stos
mov
pop
ds
and
dec
(bad)
pop
sub
pop
ds
and
dec
(bad)
pop
sub
mov
push
pop
ds
and
dec
(bad)
pop
lods
mov
ds
and
dec
(bad)
pop
mov
xor
addr16
and
xor
mov
xchg
jns
jmp
in
inc
push
pop
mov
hlt
es
cmc
je
std
inc
push
out
cmp
icebp
mov
sub
dec
fcom
hlt
es
cmc
hlt
aas
std
inc
push
out
cmp
test
push
movs
hlt
es
cmc
je
loope
jbe
psubq
(bad)
fidivr
or
stos
mov
jp
or
inc
ret
push
in
fs
imul
mov
pop
imul
(bad)
push
add
fidiv
or
ret
add
fidiv
or
ret
test
mov
xchg
dec
or
inc
rcl
es
fidiv
or
cmp
icebp
mov
sub
dec
or
stos
dec
(bad)
push
mov
mov
or
dec
fcom
pushf
fs
sti
ds
push
cmc
xor
inc
(bad)
push
in
fs
dec
scas
lahf
xchg
push
sub
dec
pusha
call
cmps
inc
(bad)
push
gs
fs
dec
scas
pop
xchg
push
sub
push
shl
cmc
xor
inc
(bad)
push
in
fs
out
pop
and
out
fidivr
pop
or
stos
mov
push
cmc
je
in
inc
xchg
pop
stos
push
fcom
stos
mov
arpl
mov
cmc
je
in
inc
push
pop
xor
mov
push
cmps
inc
(bad)
push
in
fs
cmc
mov
mov
inc
repnz
popf
movs
inc
push
jmp
xor
mov
add
sub
jns
mov
(bad)
mov
retf
ficomp
dec
ss
sbb
in
push
xor
leave
xchg
sbb
out
inc
jne
cmps
movs
cmps
popf
out
dec
imul
add
and
imul
in
add
xchg
in
jbe
test
dec
inc
ins
add
mov
xor
ss
mov
cmp
les
sub
aam
ja
add
cmp
aad
pop
adc
jle
pop
jp
vshufps
in
(bad)
adc
vshufpd
in
(bad)
adc
inc
nop
push
or
lods
into
adc
stos
std
fnstenv
xchg
jne
xor
ror
or
or
(bad)
jne
sub
mov
jb
add
cmps
idiv
mov
dec
fld
iret
adc
push
pop
lods
sub
rcl
sub
xchg
mov
je
xchg
sbb
and
mul
add
mov
push
add
nop
jmp
ins
pushf
xchg
rcl
adc
mov
in
(bad)
jne
(bad)
mov
and
sbb
and
or
adc
or
lods
ror
sub
cmps
or
lea
sbb
adc
jmp
add
call
js
dec
push
(bad)
test
lods
into
jne
rcr
pop
daa
sub
and
xchg
cmp
xor
mov
rol
xor
mov
mov
movs
daa
in
sub
shr
pop
ficomp
sub
and
in
call
loop
stc
push
stos
(bad)
mov
int
sti
and
test
imul
es
add
jmp
jnp
sbb
jb
out
mov
clc
gs
push
lds
sbb
xchg
sbb
nop
sbb
mul
daa
int
mov
lds
je
out
int
stos
cmp
adc
int
sbb
xchg
xlat
xor
jbe
popa
lds
pop
lds
mov
sbb
ins
movs
pushf
mov
ins
test
cmp
xchg
mov
addr16
fld
xchg
cmp
xchg
pop
lds
fld
xchg
mov
addr16
fld
xchg
pop
popa
gs
pop
lds
arpl
mov
pop
cmp
shl
movs
leave
mov
or
cmp
push
jne
and
fs
lds
stos
out
fcmovu
jbe
jp
jp
dec
xchg
sti
out
out
addr16
test
movs
ins
and
adc
daa
int
push
daa
enter
test
sbb
fistp
test
xchg
dec
outs
movs
jbe
daa
int
push
daa
lds
pop
outs
lds
es
movs
movs
ins
rcl
pop
je
shl
int
cmp
(bad)
dec
pop
idiv
sbb
jae
out
add
pop
cmp
jnp
outs
add
fisttp
and
xchg
sbb
sbb
sub
movs
dec
inc
inc
cmc
xchg
daa
lds
enter
ret
xchg
sbb
xchg
sbb
enter
pop
fcom
pop
xchg
fistp
nop
adc
xchg
sbb
fistp
test
xchg
dec
outs
movs
push
push
and
(bad)
push
outs
enter
lds
push
xchg
xor
fwait
pop
push
xchg
sbb
xchg
push
addr16
pop
push
ds
cld
xchg
xchg
jnp
push
ficom
daa
enter
ret
xchg
push
xchg
sbb
enter
pop
fst
pop
xor
outs
lds
movs
and
leave
pop
outs
and
xchg
sbb
nop
sbb
int
xchg
xor
sahf
sti
fadd
and
in
push
and
cwde
or
fdivr
fild
(bad)
in
cli
push
push
and
cwde
or
fdivr
fild
imul
mov
xchg
sbb
xchg
sbb
xchg
sbb
xchg
cmp
or
outs
and
xchg
sbb
xchg
cmp
add
outs
in
fbld
test
pop
outs
lds
in
cmp
sbb
dec
je
sbb
imul
addr16
ds
rcl
imul
fcomp
lds
adc
into
lds
mov
cmp
stos
shl
jns
(bad)
neg
outs
in
jne
jne
push
sub
push
in
jne
imul
dec
xor
cmp
stos
shl
sbb
(bad)
push
in
jne
push
leave
lds
mov
jge
outs
(bad)
int
sbb
test
movs
push
add
(bad)
test
jnp
inc
jbe
lds
push
adc
add
outs
movs
fbld
test
pop
outs
in
push
data16
adc
scas
cmp
pop
push
ds
lods
test
dec
outs
lds
push
xchg
shl
int
movs
movs
pop
(bad)
adc
fwait
or
popf
sti
fsub
dec
pop
outs
and
call
lds
xchg
xlat
daa
int
push
xchg
pop
push
xlat
sti
fmul
(bad)
push
daa
dec
imul
neg
outs
in
sbb
sbb
lds
push
push
cmp
int
sbb
out
out
sbb
xchg
jnp
pop
imul
pop
je
out
int
stos
cmp
adc
fcomp
or
sbb
scas
rcr
test
sti
inc
jecxz
sbb
and
ds
cli
call
outs
lds
das
jmp
into
adc
xchg
es
add
pop
jp
inc
in
(bad)
adc
vpcmpgtd
in
es
(bad)
adc
movs
jmp
(bad)
adc
add
jmp
(bad)
adc
vshufpd
in
out
vpcmpgtd
(bad)
adc
in
data16
in
inc
adc
in
push
adc
in
inc
adc
in
cmps
sub
shr
sub
or
(bad)
jne
lods
daa
mov
lea
jno
dec
cdq
bound
aaa
or
mov
push
pop
and
(bad)
adc
call
dec
cli
arpl
retf
adc
cmps
popf
call
xor
std
pop
in
cmps
bound
jmp
icebp
and
aas
mov
push
ror
stc
or
in
(bad)
aad
les
lods
add
mov
(bad)
adc
mov
mov
in
cmps
ins
sbb
nop
aaa
mov
(bad)
test
in
(bad)
push
call
adc
loopne
cmp
popa
mov
push
mov
fstp
call
loop
lods
into
push
sbb
nop
sub
es
xchg
inc
inc
dec
(bad)
mov
xchg
sti
cli
cmp
mov
test
adc
push
or
aam
shl
ret
(bad)
jne
jo
enter
mov
mov
ret
or
stc
test
adc
or
adc
jmp
add
cli
popf
cmp
xchg
dec
cdq
loop
test
xchg
xchg
push
xchg
je
pop
(bad)
mov
xchg
pop
xor
sbb
or
movs
dec
das
mov
out
pop
pop
sahf
not
mov
(bad)
(bad)
xchg
push
xchg
pop
pop
mov
cld
adc
sar
daa
hlt
inc
dec
popf
push
arpl
push
not
pop
outs
push
(bad)
cli
lods
nop
jge
sub
sar
daa
push
jl
xchg
xchg
jge
adc
rcr
lock
and
out
inc
pop
xchg
mov
lock
adc
pop
mov
jge
jne
push
lea
and
sbb
in
cmps
mov
sub
or
popf
clc
mov
push
jg
push
adc
xchg
ret
int
mov
jmp
adc
pusha
xchg
jno
fistp
mov
sbb
test
sub
imul
(bad)
lock
push
retf
enter
xor
(bad)
adc
inc
lods
mov
clc
inc
mov
jle
jp
into
test
mov
ins
jb
fcmovnbe
test
enter
sbb
fstp
add
mov
loop
lods
into
jne
nop
mov
shl
and
sbb
lock
adc
stc
shl
mov
(bad)
test
xchg
(bad)
push
data16
xchg
sbb
cmp
cmp
lods
call
icebp
movs
mov
iret
xor
enter
push
lea
cli
cli
mov
jmp
stc
and
in
(bad)
jne
fld
xor
loope
sbb
inc
mov
and
mov
fistp
ror
xchg
push
iret
call
mov
mov
pop
and
pop
mov
adc
inc
mov
dec
xchg
mov
xor
pmuludq
or
dec
sbb
or
out
xor
or
test
push
inc
repnz
out
xor
aam
hlt
jns
push
lea
mov
pop
jne
push
lea
in
test
and
in
cmps
mov
cmp
sbb
aad
movs
sub
repnz
in
out
inc
pusha
lds
neg
stc
inc
mov
mov
mov
stos
adc
jbe
or
fstp
xlat
cmps
push
hlt
mov
stc
push
cmp
(bad)
push
ror
mov
adc
fldln2
cmps
push
clc
gs
push
mov
push
lods
shr
in
test
lds
int
ror
cmp
stos
cli
cmp
fcom
mov
jge
int
add
test
mov
rcr
repnz
call
push
mov
(bad)
shr
(bad)
(bad)
lods
or
push
data16
pop
(bad)
popa
ror
test
pop
jne
mov
(bad)
sbb
in
cmps
enter
cmc
jp
sub
ss
jno
mov
enter
push
jne
and
cmp
mov
sub
jp
les
jp
cmp
jg
xlat
stos
aaa
fs
(bad)
pop
mov
push
ins
jbe
int
jbe
out
in
xchg
enter
jg
mov
adc
fisub
sub
sub
pusha
or
mov
pushf
dec
xchg
imul
sub
mov
cdq
sub
ror
and
fsubp
es
sbb
faddp
mov
sub
out
rol
aaa
adc
pop
out
xor
mov
in
(bad)
cmp
call
lea
cdq
ret
movs
clc
in
(bad)
jne
ins
outs
lds
cdq
mov
mov
rcl
or
mov
mov
sub
xchg
mov
and
movs
call
xor
jo
and
js
and
pop
aam
pushf
adc
clc
scas
into
jne
popa
(bad)
jne
daa
and
lds
into
adc
push
mov
mov
push
(bad)
fisttp
adc
jmp
pushw
xchg
mov
xor
je
in
add
(bad)
push
mov
sub
mov
sbb
lods
mov
sub
nop
pushf
mov
inc
lock
adc
mov
sbb
mov
pop
cmp
add
cmp
xchg
in
call
adc
add
imul
mov
jg
aam
and
push
test
test
iret
(bad)
lods
pop
call
fstp
hlt
jb
mov
add
jmp
fwait
addr16
data16
jo
jmp
stc
test
adc
push
adc
clc
mov
jmp
inc
xor
xchg
mov
js
icebp
mov
scas
cmp
push
das
dec
ss
jno
jne
(bad)
aaa
(bad)
imul
mov
mov
xchg
push
das
dec
ss
jno
pusha
fwait
(bad)
xchg
push
or
xor
(bad)
sub
push
push
or
xlat
mov
sub
xchg
sbb
mov
movs
mov
ja
sub
mov
mov
int
adc
xor
out
adc
adc
repz
mov
shl
push
xor
pop
xchg
cmp
imul
and
gs
adc
call
push
clc
sbb
ds
addr16
add
adc
mov
lods
add
test
lods
sbb
jne
jne
sbb
sub
std
(bad)
adc
xor
jecxz
mov
lea
ins
and
in
cmps
enter
mov
cmps
push
mov
out
mov
leave
mov
scas
into
jne
stos
fwait
sti
mov
mov
mov
mov
push
mov
jo
test
in
(bad)
jne
xchg
mov
push
lahf
xlat
push
in
(bad)
adc
test
mov
sbb
and
daa
mov
push
cmp
sbb
jp
sub
push
mov
or
fiadd
xor
jp
fwait
jmp
lahf
test
fidiv
icebp
cmp
xchg
mov
push
mul
adc
mov
push
cmps
xchg
pop
inc
ss
addr16
ins
int
inc
ins
retf
lods
enter
retf
ins
int
dec
in
(bad)
and
inc
in
imul
in
daa
ss
(bad)
daa
inc
das
(bad)
es
loopne
and
in
jmp
inc
in
xchg
bswap
es
push
pusha
retf
mov
in
cmp
and
(bad)
push
or
data16
jmp
adc
cmps
mov
dec
push
sub
cmps
mov
xchg
adc
dec
lahf
xchg
test
sbb
pop
mov
xchg
inc
jo
or
in
(bad)
adc
vshufpd
pop
loopne
test
lods
gs
ret
sbb
out
jecxz
and
test
test
(bad)
adc
add
sub
(bad)
adc
aam
(bad)
jne
retf
push
xchg
jne
into
jne
pusha
enter
in
ror
int3
push
fcmovb
sub
movs
cmp
(bad)
int
imul
and
adc
shr
stc
gs
arpl
fisubr
je
push
loope
jne
cmp
mov
push
or
jb
sbb
gs
pushf
ficomp
mov
nop
(bad)
adc
call
push
sbb
push
mov
sub
test
mov
pop
jne
jo
test
fstp
cmp
dec
stos
fnstsw
cmc
mov
jp
shl
movs
ror
sub
adc
sti
outs
jmp
cdq
add
dec
int
movs
loope
adc
jb
pop
push
sbb
pop
daa
push
inc
lods
mov
cmps
inc
push
jecxz
dec
lods
jp
push
adc
pop
or
mov
enter
push
ror
test
call
mov
lock
and
and
jmp
(bad)
push
pushf
adc
sub
xchg
adc
cli
xchg
jmp
inc
idiv
cld
(bad)
cmp
(bad)
jp
cld
(bad)
cmp
not
je
jl
icebp
jmp
cld
bnd
cld
mov
jmp
hlt
(bad)
xchg
jecxz
and
pop
add
push
scas
idiv
in
jmp
inc
icebp
mov
ds
xor
sbb
cli
xchg
mov
mov
mov
pop
mov
stc
dec
jno
mov
sbb
cli
mov
jmp
xor
lds
nop
dec
jp
ret
sub
lahf
in
dec
lock
pushf
sbb
jp
cld
jmp
lock
xchg
jecxz
mov
hlt
(bad)
jp
cld
(bad)
jp
ds
jnp
icebp
cmp
mov
hlt
call
hlt
div
cmp
jg
inc
fnstenv
pop
hlt
mul
mov
test
icebp
gs
add
rcr
jp
cld
jmp
xlat
cwde
das
cmp
cmp
inc
rcr
jp
cld
jmp
push
popf
das
cmp
sbb
and
sub
loopne
xchg
(bad)
bnd
cld
mov
mov
arpl
xchg
xchg
cld
out
gs
pop
fcom
add
add
jl
xor
fsubr
xchg
sbb
pop
aas
pop
das
cmp
mov
xor
xchg
cld
sub
mov
jmp
jle
movs
call
(bad)
jne
popa
ret
pop
(bad)
adc
inc
int
lods
gs
test
mov
inc
stc
gs
(bad)
adc
cmps
pop
jecxz
and
test
mov
out
mov
sub
je
cmp
push
lods
lods
mov
int
adc
scas
into
adc
inc
std
loope
ror
fbstp
cmp
mov
sbb
js
and
in
(bad)
adc
dec
xchg
push
cmp
mov
stos
daa
jns
lahf
cmp
pusha
adc
nop
rcl
inc
fsubrp
sub
push
jne
add
jle
test
leave
loop
adc
push
scas
xor
jmp
test
cmps
jp
sub
in
cmps
enter
aad
xchg
add
mov
mov
xchg
jnp
sbb
cmp
push
fimul
mov
push
inc
aad
lock
call
mov
xchg
cmp
jo
enter
inc
aaa
in
cmps
adc
(bad)
adc
jne
fwait
arpl
jb
call
add
repnz
fwait
rol
cli
pop
test
rcr
clc
cmp
mov
test
adc
push
xor
mov
dec
or
nop
and
and
in
cmps
mov
cli
mov
mov
cmp
and
cmp
cld
cmp
add
scas
mov
pop
mov
dec
add
push
dec
pop
dec
out
leave
sti
push
das
jecxz
lods
mov
mov
pop
mov
leave
push
mov
ins
test
jb
(bad)
ins
test
push
hlt
mov
adc
mov
xor
aam
jns
mov
jg
nop
push
mov
pop
mov
lea
mov
push
sti
out
out
pop
pop
fucom
mov
xchg
adc
add
inc
mov
lock
int
imul
mov
neg
mov
dec
sbb
jecxz
push
adc
mov
sub
dec
mov
cmps
loop
jl
push
lods
push
sub
(bad)
mov
xor
ficomp
cmp
das
mov
and
push
mov
(bad)
adc
popf
scas
into
xor
inc
retf
fucomp
cmps
mov
inc
call
(bad)
cmp
mov
jnp
lahf
cmp
aas
pop
lods
mov
(bad)
cmps
lds
(bad)
jo
and
add
in
xchg
int
sub
fisub
adc
xchg
sbb
mov
stos
(bad)
mov
test
mov
mov
(bad)
icebp
(bad)
or
mov
inc
fsubr
jne
xchg
mov
gs
(bad)
or
mov
xor
in
into
adc
fsub
and
in
mov
and
xor
cmp
movs
cwde
test
ds
shl
mov
cmps
ret
ror
ret
in
pop
loope
loop
(bad)
mov
les
dec
sub
fwait
(bad)
int
sub
xor
inc
xor
pusha
cmp
or
pop
push
movs
pusha
and
add
mov
arpl
movs
loopne
jae
and
in
arpl
jp
cmp
int
mov
dec
xchg
ja
(bad)
cmc
(bad)
mov
jl
test
int3
jbe
pop
scas
into
cmc
inc
adc
cmc
inc
pop
loope
leave
lea
repnz
clc
dec
xchg
scas
cdq
mov
mov
aad
xchg
sub
cmp
into
in
cmps
mov
mov
cli
mov
mov
cmp
mov
adc
int3
in
cmps
enter
add
rcl
cwde
lea
cli
test
sub
shr
rcr
sar
pop
enter
cmp
push
neg
xor
stc
push
inc
call
cwde
into
pusha
push
xchg
test
scas
into
push
in
add
mov
out
fwait
ret
stos
(bad)
mov
sahf
sbb
cmp
cmp
pushf
fidiv
(bad)
mov
(bad)
in
mov
add
in
jo
bound
into
xor
mov
pop
jne
push
pop
stos
cmp
rep
in
inc
push
aam
pop
in
aad
fwait
fs
shl
mov
pop
cmp
mov
push
stc
call
add
sbb
sub
fidiv
inc
nop
push
pop
int
clc
cmp
stc
inc
pop
pushf
mov
icebp
jo
xchg
dec
xchg
or
adc
xchg
std
test
jns
push
sub
inc
pop
cdq
imul
cmps
(bad)
mov
cdq
cmp
in
cs
cli
cmps
fld
dec
sub
mov
add
imul
jno
or
loope
mov
gs
sbb
xchg
es
aaa
adc
pop
mov
into
push
push
lea
test
pop
and
xchg
stc
es
movs
rol
mov
out
sti
loope
gs
push
ins
xor
mov
push
adc
gs
sub
in
out
pop
je
scas
mov
shl
push
(bad)
fiadd
rcl
add
and
adc
adc
(bad)
jmp
inc
adc
mov
pop
jne
outs
cmp
mov
scas
into
push
jp
ror
mov
scas
push
sub
push
stos
lds
push
inc
aam
stc
sub
in
(bad)
push
fimul
fs
dec
test
jp
inc
test
inc
mov
stos
(bad)
mov
stos
push
mov
add
sbb
(bad)
shr
xor
adc
or
bound
jmp
adc
cmp
rcl
or
sub
and
gs
xchg
adc
push
es
add
jmp
cmp
adc
jmp
aaa
sub
fstp
clc
jb
call
(bad)
cmp
div
adc
jp
mov
jle
jo
into
xchg
cmp
cmp
mov
jecxz
rcr
inc
cli
xor
enter
jmp
mov
jmp
inc
stc
xchg
xor
or
test
in
mov
lock
int
rcr
sub
jl
shl
aad
stos
repz
xchg
jl
(bad)
retf
cmp
push
sub
jb
imul
jmp
mov
jg
nop
push
mov
pop
mov
fst
es
add
jo
jno
out
cmps
add
push
scas
dec
fcmovu
add
ficomp
call
lods
push
lahf
mov
fisub
popf
clc
call
cmp
jp
sbb
and
in
cmps
ins
mov
cwde
stc
sar
sar
or
in
cmps
and
cli
(bad)
lahf
jns
cmp
jnp
jb
cli
mov
enter
sahf
bound
iret
push
(bad)
test
sbb
(bad)
adc
and
movs
icebp
(bad)
test
mov
in
fst
ret
jmp
cmp
push
sub
lock
dec
mov
xchg
int
xor
hlt
(bad)
mov
push
mov
scas
stos
mov
mov
ins
or
sar
stc
xor
mov
jle
sbb
jmp
mov
mov
aam
cld
aas
adc
ret
into
push
cmp
sub
mov
or
cmp
push
sub
mov
push
cli
icebp
adc
cli
nop
sub
and
sbb
fwait
repnz
pop
xlat
and
xor
mov
xor
jo
and
cmp
out
mov
cmp
inc
and
in
jb
mov
jb
mov
cwde
loop
adc
sbb
xchg
push
jmp
push
cmp
nop
inc
push
leave
cmp
pop
xor
sti
test
sar
mov
(bad)
pop
sbb
jnp
or
popa
leave
inc
sbb
or
mov
sbb
jmp
mov
jg
nop
push
mov
pop
and
nop
in
sub
hlt
es
inc
rol
mov
in
inc
mov
popf
js
fwait
cli
stc
gs
popa
add
jecxz
fmul
repz
sbb
test
adc
cmp
mov
dec
sbb
mov
xchg
jp
popf
rcl
jl
jmp
mov
or
(bad)
push
cli
xchg
repnz
test
(bad)
xchg
sbb
test
sub
scas
mov
or
scas
and
mov
jns
cmp
fldcw
cdq
inc
mov
mov
sub
and
inc
shr
inc
je
xchg
sbb
pop
sbb
and
cmp
hlt
(bad)
push
(bad)
test
inc
add
rcr
xchg
fwait
pusha
cmp
call
test
int3
mov
xor
mov
mov
shr
(bad)
push
ficomp
or
movs
adc
add
sbb
push
lea
fiadd
cmp
mov
pop
jne
jmp
pop
xor
mov
pop
jne
cmp
stos
fstp
sub
mov
cmp
xchg
add
dec
pop
sti
mov
xchg
test
lea
mov
mov
clc
mov
fs
cmps
xor
shl
clc
gs
in
icebp
mov
repnz
mov
xor
loopne
leave
xor
sahf
push
clc
add
dec
mul
pop
and
push
in
movs
adc
xlat
sar
out
test
into
add
sar
int
mov
dec
xchg
ja
(bad)
jne
mov
jl
test
enter
push
popaw
vshufpd
shl
and
in
(bad)
adc
fisubr
(bad)
adc
vshufpd
fst
ficom
cmp
cmp
sti
mov
pop
push
ja
les
pop
iret
cmp
mov
test
in
(bad)
cmc
ins
jecxz
movs
int
ins
movs
dec
repnz
pop
repz
cmp
mov
add
ins
arpl
movs
aam
loopne
jp
(bad)
and
dec
adc
sub
dec
xchg
add
in
push
lods
in
sbb
ret
pop
test
lods
add
in
(bad)
adc
and
pop
(bad)
in
inc
inc
(bad)
adc
in
lods
add
in
(bad)
adc
cmp
mov
sbb
stos
sbb
mov
into
sbb
(bad)
in
retf
xlat
(bad)
in
(bad)
sbb
in
(bad)
adc
int
add
ret
in
stos
in
into
sbb
(bad)
in
fcomi
or
stc
sbb
shl
or
inc
mov
mov
or
cmps
add
mov
stos
into
adc
aad
sub
jmp
cmps
add
je
(bad)
jns
out
pop
cmp
jmp
scas
mov
adc
cmp
cmp
jae
fsubr
adc
push
or
movs
call
(bad)
jne
popa
ret
pop
(bad)
adc
dec
int
lods
vshufpd
pop
(bad)
adc
pop
mov
mov
dec
imul
or
aam
cmp
push
lea
fmul
test
stos
push
(bad)
int
push
ret
(bad)
(bad)
jne
in
dec
push
ret
nop
push
mov
dec
fisubr
mov
and
in
out
mov
call
xchg
sub
dec
cmp
test
push
cmp
mov
rol
xchg
sbb
ins
lods
push
(bad)
int
push
fisttp
(bad)
call
and
mov
popf
inc
or
(bad)
icebp
xchg
hlt
push
clc
sub
in
(bad)
jne
jo
ret
into
jne
retf
aad
cmps
ret
mov
lds
pushf
inc
sbb
lea
(bad)
test
push
cmp
and
aad
adc
cmp
cmp
or
in
xor
daa
adc
ins
hlt
push
es
push
cmp
mov
rcr
cli
and
cmp
xchg
xor
stc
inc
fsubr
(bad)
jne
mov
mov
lock
stc
jl
popf
test
xchg
test
dec
inc
push
lahf
shr
out
cdq
and
xchg
dec
aas
push
push
xchg
xchg
mov
call
lea
call
mov
bound
mov
dec
gs
mov
mov
mov
push
mov
mov
mov
push
popa
fs
enter
push
push
mov
sub
mov
push
test
mov
dec
fs
push
call
mov
popa
push
add
call
test
arpl
mov
fs
push
mov
push
adc
fstp
inc
fnstcw
and
push
(bad)
rcr
pusha
in
adc
fwait
adc
xor
xchg
jg
test
push
(bad)
and
mov
jg
mov
cmp
and
leave
fldenv
mov
push
aam
enter
out
cmps
shl
or
add
sub
movs
imul
test
mov
aam
enter
scas
mov
xchg
cmp
jecxz
sub
movs
imul
test
xor
(bad)
and
mov
aas
test
cmp
int
fldenv
pusha
sub
movs
imul
test
setno
jmp
mov
das
mov
push
in
out
mov
(bad)
sbb
call
enter
push
shr
and
pusha
push
movs
xchg
into
mov
mul
and
into
push
pop
arpl
sub
mov
repnz
jns
mov
adc
inc
jo
movs
gs
mov
xor
in
cmps
mov
mov
fld
icebp
mov
imul
push
lds
xchg
and
cdq
loop
leave
push
dec
(bad)
cmp
call
mov
aas
mov
jp
add
cmp
in
cmps
and
dec
or
jne
test
sbb
jmp
repz
mov
inc
sub
mov
push
ror
(bad)
adc
lds
js
lds
mov
in
int
aad
jnp
loope
data16
test
sahf
cmp
push
adc
(bad)
test
adc
(bad)
sbb
adc
push
ret
(bad)
(bad)
jno
ins
mov
sub
outs
leave
jle
xor
lods
xchg
xchg
(bad)
retf
mov
add
mov
jno
mov
mov
imul
js
call
push
cmp
cli
nop
sub
and
jp
pop
test
rol
sti
xor
stc
jl
or
stc
mov
call
lahf
mov
ror
push
stc
inc
cli
xchg
mov
sbb
ins
jmp
les
cmc
xchg
mov
sahf
lds
xor
ret
push
in
je
fs
mov
jecxz
not
cmc
jnp
inc
xchg
shl
std
mov
push
push
push
push
je
xor
xlat
push
push
push
enter
adc
adc
pop
adc
or
lahf
ja
mov
in
data16
lock
mov
or
in
cmps
mov
loopne
pop
std
mov
out
call
fistp
cdq
bound
inc
dec
call
adc
push
dec
mov
dec
jp
stos
mov
mov
out
inc
add
sahf
mov
push
addr16
add
in
cmps
and
shr
dec
mov
mov
push
shl
mov
int
add
in
(bad)
loop
adc
dec
sbb
pop
cmps
mov
mov
pushf
mov
scas
int
mov
ror
lea
cs
cmp
mov
cli
sbb
jmp
dec
jno
pop
pusha
push
movs
lock
mov
xchg
push
lea
xchg
cmp
ins
dec
std
push
fisttp
fld
mov
cmps
mov
shl
retf
in
cmps
loop
lahf
or
fiadd
cmp
or
stc
pop
cli
arpl
test
pop
(bad)
sti
je
movs
push
js
sar
mov
fstp
cmp
mov
inc
fstp
lock
sbb
call
push
mov
adc
gs
jl
retf
stc
inc
gs
xchg
pop
and
out
add
mov
xor
cmp
inc
call
sti
adc
inc
push
jecxz
in
sti
adc
xchg
mov
sahf
call
pop
repnz
aam
cmps
ficom
lock
cmp
test
int
or
(bad)
jne
lods
daa
xchg
int
or
fld
sbb
xchg
lea
xchg
adc
add
adc
in
popf
fsub
mov
cmp
and
popf
js
pop
push
js
and
arpl
jp
popf
test
xchg
pop
jnp
jne
ret
sub
jo
mov
push
lods
icebp
mov
stc
mov
mov
std
(bad)
adc
shr
add
and
mov
push
test
push
cmp
xchg
movs
adc
ja
xchg
pop
cmp
(bad)
adc
mov
lock
ins
inc
mov
mov
lea
int3
inc
imul
call
dec
adc
dec
je
push
push
jp
in
inc
or
xchg
add
in
cmps
test
nop
mov
repnz
or
lahf
xor
lock
xor
add
mov
cli
mov
jmp
ss
and
mov
push
mov
push
pop
lea
movs
imul
mov
sub
stc
sub
push
jp
cmp
scas
mov
or
adc
push
vcvtps2dq
mov
mov
dec
call
scas
les
ret
adc
idiv
sub
pop
loop
jne
mov
dec
push
push
jg
mov
push
jl
ins
loop
xor
leave
dec
jl
scas
cmc
fist
and
cmc
loopne
jl
inc
cmc
fdiv
leave
nop
jl
inc
cmc
retf
adc
mov
mov
push
and
aam
hlt
jns
gs
pop
imul
xchg
repnz
vshufps
call
add
lea
retf
mov
stos
cmp
imul
cmp
fldln2
xchg
mov
shl
sub
xchg
sub
sbb
in
cmp
ja
stc
test
in
(bad)
xor
lea
rcr
ret
call
int3
(bad)
fld
stos
(bad)
mov
(bad)
fwait
push
(bad)
cmps
and
sbb
xor
daa
adc
jne
arpl
in
(bad)
jne
scas
adc
test
mov
inc
xor
add
or
lea
ins
stc
jo
add
cmp
adc
mov
ss
arpl
fwait
jg
jb
cmp
xchg
sahf
ret
cmp
cwde
test
push
es
mov
cmps
ret
cwde
sub
add
jmp
cmps
or
lods
jno
jg
mov
pop
fstp
mov
xor
lea
out
mov
adc
dec
cmp
pop
cld
mov
stc
inc
jp
std
ret
clc
sbb
or
push
inc
pop
or
out
dec
inc
in
das
test
shl
int3
scas
arpl
add
out
in
cmp
outs
xchg
push
test
aaa
adc
pop
in
lea
test
pop
mov
cli
xor
retf
cmps
jo
mov
out
inc
pop
cmp
ror
mov
jecxz
hlt
(bad)
call
ficom
std
xlat
repnz
stc
inc
cmp
or
je
addr16
fld
stc
push
test
(bad)
adc
ror
sbb
repnz
xor
stc
sub
in
(bad)
jne
jo
and
stos
into
jne
cld
push
loop
adc
loop
in
(bad)
jne
mov
imul
pop
or
lods
adc
mov
cmps
push
pop
inc
repnz
add
lods
fcmovbe
jno
xchg
pop
call
pop
xchg
call
in
mov
loop
sub
and
gs
mov
in
(bad)
push
call
mov
cmp
mov
jbe
xchg
test
push
icebp
adc
cmp
jmp
mov
cmp
adc
call
jno
xchg
add
sub
lods
icebp
lock
out
xor
rol
xchg
imul
ds
mov
sbb
lahf
push
mov
or
js
sub
sbb
jl
test
mov
(bad)
mov
out
xchg
enter
add
sar
push
mov
adc
out
mov
and
jl
jmp
icebp
jno
out
adc
popa
fstp
xchg
mov
and
lock
sbb
jl
jmp
repz
and
push
enter
and
sar
xor
clc
xchg
(bad)
pop
out
fistp
daa
fnstsw
fnstsw
mov
mov
xchg
xor
xchg
jle
neg
cmp
in
ins
push
or
jle
mov
in
pop
ret
(bad)
pushf
cmp
mov
mov
sbb
mov
push
lahf
cmp
push
idiv
or
lods
neg
mov
xchg
int
addr16
xchg
dec
cwde
xchg
mov
sub
mov
and
mov
les
cmp
mov
xchg
push
ret
mov
gs
sbb
ins
xchg
cmps
repz
mov
in
pop
ret
daa
jge
enter
push
cmp
fs
fsub
rcr
and
push
xchg
xchg
mov
(bad)
fidivr
out
inc
push
cmp
xor
sbb
lahf
mov
sbb
sub
mov
sbb
enter
cmp
inc
push
fsub
ret
inc
(bad)
cwde
mov
sbb
loopne
repnz
mov
dec
push
push
lea
fadd
jbe
loop
into
mov
cmp
cmc
inc
cmp
pop
jne
leave
(bad)
jne
int
imul
xor
sub
repnz
pand
out
movs
retf
out
cmp
jp
pop
iret
cdq
cli
mov
jg
adc
push
js
les
push
test
test
(bad)
adc
jne
(bad)
jb
call
mov
or
loop
into
mov
cmp
jne
mov
lds
test
xchg
fld
jo
enter
jmp
cmp
mov
fiadd
imul
data16
mov
pushf
jnp
(bad)
sti
jle
shl
cmps
fisubr
adc
jo
ret
xchg
push
push
data16
stos
into
jne
lods
mov
lds
or
sub
push
jne
call
sub
test
ins
adc
(bad)
adc
mov
lods
push
add
mov
movs
mov
push
dec
repz
and
mov
push
cli
icebp
(bad)
pop
push
jbe
lods
icebp
sub
and
cmc
hlt
jmp
sbb
gs
aam
pop
xchg
xchg
sbb
cld
les
popa
ja
xchg
lock
movs
mov
mov
adc
lock
adc
aad
in
xor
nop
cmc
sub
test
xor
aad
pushf
repz
xor
dec
stc
imul
adc
xchg
add
or
fild
push
in
data16
shl
mov
into
aad
popa
(bad)
cmc
inc
pop
in
adc
jne
xlat
xor
xor
mov
or
cld
(bad)
adc
inc
mov
cld
add
sub
shl
stos
pop
dec
jmp
cmp
push
cmp
(bad)
(bad)
icebp
dec
mov
cmp
out
in
aad
lds
pop
jne
loopne
add
stos
(bad)
mov
mov
mov
and
xor
ficomp
cmp
and
pop
stc
mov
in
(bad)
jne
in
add
jmp
jne
movs
icebp
repz
mov
rcl
push
push
clc
mov
or
jle
mov
into
aad
popa
les
push
stc
mov
dec
mov
or
mov
add
jmp
shl
fcom
sahf
bound
sub
adc
cmp
mov
pop
jne
lods
(bad)
stos
fstp
cwde
(bad)
xor
out
test
xor
mov
sub
adc
dec
pop
xor
sub
cli
jnp
xor
add
inc
outs
in
cli
jo
jmp
pop
push
aad
xor
pop
push
or
popf
cmp
push
pop
(bad)
sub
xchg
adc
call
es
xor
es
mov
mov
pop
cs
inc
es
stc
push
icebp
dec
out
(bad)
jle
inc
push
fincstp
jmp
stc
shr
push
xchg
inc
(bad)
sub
mul
and
fldenv
add
mov
push
in
data16
shl
fs
into
aad
or
cmc
inc
cmp
pop
push
mov
fbstp
(bad)
int
stos
adc
xor
movs
repnz
inc
cmp
inc
cli
popf
mov
gs
call
mov
mov
pop
shl
jp
loop
and
in
cmps
and
call
inc
sub
mov
add
in
cmps
cmp
jne
mov
mov
rcr
loop
adc
push
lea
call
fwait
mov
rep
jo
inc
adc
sub
fstp
jecxz
rcl
lahf
in
dec
mov
xchg
sbb
aas
push
cdq
sti
cmp
adc
add
stos
into
jne
retf
shr
loop
dec
xor
lahf
test
in
push
pop
lock
rcl
mov
mov
in
adc
test
call
mov
adc
mov
push
inc
enter
lock
and
loop
test
mov
retf
popf
xchg
mov
xor
cdq
mov
daa
xchg
xchg
mov
mov
aad
std
cmp
stc
gs
retf
cmp
popf
cwde
dec
dec
cmp
retf
mov
xchg
push
shl
popa
out
sub
push
xor
adc
xchg
mov
jae
hlt
adc
call
jb
push
repnz
pushf
xchg
mov
jne
(bad)
sbb
push
ror
mov
cmp
lds
(bad)
fmul
test
pop
mov
mov
movs
int3
(bad)
adc
lock
inc
xchg
out
sub
xchg
icebp
sub
fcomp
or
call
sar
mov
std
mov
test
push
cmp
lods
icebp
xchg
add
sbb
fidiv
add
in
cmps
test
cli
rcl
repnz
fwait
xor
pop
outs
ror
mov
mov
xchg
push
test
mov
jne
sub
neg
adc
push
nop
push
lea
xchg
mov
je
lds
inc
mov
in
add
mov
inc
mov
dec
mov
nop
test
mov
mov
imul
xchg
pop
push
in
rcl
mov
mov
vshufpd
(bad)
icebp
hlt
fldcw
cmp
into
jne
fnsave
sub
mov
xor
in
inc
ret
xchg
xchg
push
fld
xor
out
clc
aad
fsubr
addr16
pop
rcl
or
cli
clc
adc
or
inc
(bad)
jae
cli
clc
cmp
ret
repnz
(bad)
jne
mov
jl
test
mov
(bad)
mov
sbb
(bad)
cmps
cmp
fstp
call
stos
fsubr
cmp
ror
(bad)
adc
cmp
cdq
pop
jp
cmp
mul
push
ficomp
jmp
stc
stc
jae
daa
stos
ficomp
jmp
ja
push
cmps
(bad)
adc
cmp
fstp
call
aas
jp
(bad)
mov
jne
movs
pop
pop
cmp
(bad)
sbb
adc
movs
ficomp
jmp
out
adc
and
in
es
ficomp
jmp
jns
pop
push
cmp
cli
pop
(bad)
cmps
sub
fstp
jp
aam
cmp
cdq
pop
cli
push
cmp
hlt
loope
push
sti
jae
ss
ja
je
cmp
jl
jmp
push
scas
cmp
fcos
jp
jb
adc
jp
cmp
jp
jo
cmp
cmp
pop
push
cmp
(bad)
std
add
inc
pop
ficom
and
in
cmps
movs
ficomp
jmp
es
test
(bad)
adc
jne
and
add
inc
ja
outs
adc
dec
(bad)
ins
jmp
shl
ficomp
jmp
mov
test
cmp
jp
jne
xor
jns
outs
adc
or
jo
jmp
ja
imul
dec
adc
and
ficomp
jmp
retf
push
or
(bad)
adc
int
and
test
in
cmc
ins
dec
daa
sbb
aam
(bad)
push
inc
vmwrite
cmp
cmps
xor
cmp
fidiv
jmp
adc
(bad)
jp
jae
cmp
sbb
adc
ficomp
jmp
jns
ficomp
jmp
mov
adc
in
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
ret
push
vshufpd
out
adc
in
(bad)
adc
add
in
pop
iret
in
(bad)
xchg
iret
dec
iret
adc
in
(bad)
adc
ins
jecxz
movs
inc
sub
adc
test
(bad)
adc
mov
scas
or
inc
mov
paddq
jecxz
sbb
(bad)
adc
mov
out
out
in
sbb
(bad)
mov
adc
xchg
cmp
cmp
setns
sbb
(bad)
adc
fisttp
jb
stc
popf
pop
push
add
jns
inc
shl
jp
stos
scas
and
in
cmps
xor
xor
cmps
cmp
pop
and
cmp
push
movs
rcr
iret
in
out
shr
(bad)
jne
sub
add
xor
adc
xchg
cli
int
lds
dec
and
in
(bad)
push
vcvtps2dq
leave
in
cmps
and
nop
push
xor
ret
pushf
sub
adc
dec
cmp
fcom
test
xchg
imul
mov
repnz
xchg
mov
xlat
add
mov
xor
movs
xchg
stc
shl
xchg
push
lea
xchg
fwait
in
ins
int
push
ror
(bad)
out
ror
sbb
div
call
sbb
stos
into
jne
xchg
imul
jnp
xchg
cmp
push
push
fist
sub
shl
dec
mov
popf
mov
mov
dec
xor
dec
xor
std
xchg
adc
cmp
cli
dec
xor
inc
adc
sbb
inc
xor
fwait
jbe
cmp
(bad)
cli
dec
xor
dec
xor
push
jmp
jmp
fcomip
pop
inc
shl
retf
popf
icebp
mov
jp
cmps
xchg
out
shr
retf
std
mov
add
dec
xor
sbb
ds
push
ret
cli
inc
xor
mov
xlat
arpl
outs
sbb
das
test
push
(bad)
push
and
cmp
push
sub
imul
mov
xchg
hlt
dec
shr
adc
push
push
stos
(bad)
jmp
dec
hlt
push
les
and
or
mov
sub
sbb
xor
sbb
dec
xor
ins
sbb
mov
push
ret
in
sbb
mov
sbb
mov
imul
sbb
std
cmp
push
repz
pushf
aam
mov
fwait
imul
aas
nop
cli
dec
and
mov
push
ja
cmp
inc
shr
out
mov
push
cmp
std
mov
and
sbb
pushf
sbb
or
das
clc
inc
inc
dec
mov
sub
pop
mov
jg
add
bound
sbb
lds
jmp
scas
leave
je
mov
stos
and
ins
sbb
ficomp
loop
clc
push
test
cli
sub
xor
pushf
imul
imul
jmp
add
sbb
sbb
cmp
sbb
mov
aam
cmp
imul
cdq
or
movs
mov
push
aam
jge
jmp
push
push
fs
dec
mov
cwde
mov
inc
call
hlt
xor
push
and
or
lods
rcl
fdiv
call
div
(bad)
push
and
ret
inc
cli
sub
mov
in
push
ret
adc
das
sbb
adc
ret
test
mov
mov
jmp
xor
pop
hlt
xchg
loopne
inc
adc
dec
mov
pop
dec
xor
mov
cmp
int
and
mov
test
sar
sub
mov
or
hlt
push
imul
cli
popa
popf
call
into
sub
adc
pop
jg
xchg
sbb
xor
cmp
pushf
fucomp
xchg
(bad)
mov
xor
in
mov
sbb
inc
xor
ret
inc
nop
in
mov
lea
iret
dec
iret
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
lods
aad
es
movs
retf
mov
mul
inc
ficom
aas
aas
xor
(bad)
xor
push
rcl
push
(bad)
jmp
jmp
jb
sub
jmp
fisttp
aad
out
loope
data16
cli
xchg
dec
xchg
xchg
sbb
movs
stc
mov
test
jnp
shr
ret
dec
push
sbb
push
lea
call
in
cmps
or
in
cmps
mov
(bad)
mov
and
or
mov
aad
cmc
mov
fisttp
push
xchg
jne
pop
(bad)
shl
mov
adc
push
xor
add
sub
push
pop
push
sti
xchg
cdq
pop
std
movs
jo
shr
lea
lea
dec
jmp
xchg
dec
sub
jmp
ja
fcmovbe
sti
cld
xor
sbb
push
adc
cli
shl
jmp
cmp
movs
mov
lods
movs
sbb
sbb
mov
cmp
xor
pop
xchg
xchg
or
lods
cdq
mov
or
cmp
sahf
cmp
and
mov
sub
aad
lock
(bad)
and
or
jl
and
xchg
push
fisub
and
lds
jno
or
xchg
sub
shl
sub
push
and
sub
push
retf
mov
(bad)
(bad)
sbb
sub
xchg
sub
mov
daa
mov
push
cmp
and
xchg
and
daa
push
sub
fs
push
pop
jnp
and
nop
and
push
sub
fld
sub
(bad)
enter
jp
or
ret
xchg
and
xchg
int3
jnp
and
shr
xchg
call
fisub
and
das
mov
nop
mov
jbe
aad
neg
ins
bound
or
jbe
bound
mov
int3
push
cmp
mov
mov
aaa
ja
cmp
lds
cmps
in
xchg
cli
inc
ja
rol
jns
je
into
jne
in
movs
inc
mov
mov
in
test
push
pop
ror
das
shld
(bad)
adc
lods
daa
lods
test
movs
adc
jecxz
test
movs
test
movs
push
sar
xchg
aas
sar
add
jl
xchg
cmps
jl
adc
sti
outs
(bad)
mov
btc
jg
cmp
dec
adc
imul
cmps
push
adc
push
xchg
add
push
jl
xchg
pop
int
cmps
sahf
adc
xchg
dec
jo
lods
and
out
in
mov
and
in
cmps
mov
fisub
mov
aas
stc
inc
pop
sbb
out
lds
adc
jnp
stc
inc
cmp
dec
in
in
fdiv
stos
jns
les
cli
jp
mov
or
in
cmps
or
mov
xchg
xchg
movs
repz
shl
rcl
adc
fucomp
xchg
dec
add
add
sbb
add
in
fcom
sti
sbb
mov
(bad)
xchg
stos
shl
sub
in
(bad)
push
sbb
test
xor
xor
push
in
sub
in
(bad)
aad
xchg
mov
xor
jb
mov
xor
shl
xchg
pop
out
rcl
mov
pop
sar
clc
xor
mov
inc
mov
lods
push
out
jecxz
and
xor
mov
mov
sti
jg
loopne
fstp
sbb
xor
sbb
stos
sbb
mov
and
mov
cmp
mov
pop
push
pop
pop
jns
mov
add
jmp
and
xor
icebp
jmp
jp
cmp
or
stc
pop
cmp
rcl
xor
stc
gs
cmp
dec
push
push
cs
mov
fiadd
lea
xor
repz
out
cmp
scas
stos
cld
lods
inc
and
(bad)
(bad)
dec
inc
xchg
js
dec
xchg
js
xchg
adc
and
jg
leave
dec
enter
and
jb
adc
pop
in
je
call
out
dec
enter
and
push
lea
inc
aam
loopne
pop
xor
dec
clc
int
mov
jae
out
jge
not
dec
dec
call
out
jl
not
dec
dec
mov
movs
sbb
xchg
pop
lea
stos
lods
xor
pop
push
pop
loope
mov
xor
hlt
pop
loope
mov
mov
adc
hlt
jge
pop
adc
or
lahf
ja
test
lds
vshufpd
in
(bad)
xor
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
cmp
es
inc
retf
mov
data16
cmp
out
jp
ret
scas
cli
mov
stc
sbb
pop
enter
fiadd
(bad)
lds
adc
aad
aas
sub
xchg
mov
adc
cmp
nop
and
xchg
add
clc
push
cmp
mov
sub
stos
and
stc
(bad)
adc
ror
push
les
int3
in
out
jb
(bad)
push
jp
out
sbb
fstp
sbb
cmp
and
ret
fwait
jp
and
sub
mov
into
rcl
(bad)
add
sub
pop
les
mov
sar
xchg
fwait
jle
fidiv
dec
xchg
cmp
mov
(bad)
imul
sbb
jne
jl
retf
mov
(bad)
icebp
push
inc
in
or
jb
sbb
adc
push
xchg
mov
loop
and
sti
(bad)
adc
push
lea
inc
mov
xor
stc
fst
int
dec
mov
clc
sub
xchg
rcr
add
jno
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
xor
shl
movs
(bad)
cli
inc
push
repz
or
xor
int
adc
dec
ds
and
(bad)
and
mov
and
mov
and
and
(bad)
and
fisub
or
and
push
and
mov
and
mov
and
and
(bad)
lods
mov
pop
sbb
pop
pop
and
out
(bad)
mov
push
and
jnp
inc
jl
jg
shr
or
test
xchg
cmp
jle
mov
adc
mov
add
loope
adc
in
mov
or
push
inc
js
adc
mov
(bad)
jmp
mov
pop
mov
not
mov
mov
and
movs
sti
push
mov
mov
or
int3
(bad)
frstor
adc
movs
mov
sub
push
xor
mov
xor
push
sub
pop
loope
xor
push
fist
jns
js
mov
pop
cmp
pop
push
ins
js
xchg
ret
inc
add
in
icebp
aaa
test
and
stos
sbb
sub
push
xor
mov
xor
push
sub
push
loope
xor
push
imul
mov
loope
aaa
jmp
push
and
mov
sub
pop
ss
mov
sub
(bad)
cli
popa
movs
sti
push
sub
mov
sub
lds
fucomi
movs
in
push
das
movs
mov
sub
push
xor
mov
or
push
imul
mov
loope
aaa
jmp
push
and
mov
sub
pop
ss
mov
sub
(bad)
jmp
mov
mov
xor
fsubp
in
pop
fist
jns
imul
push
aaa
or
fsubp
in
pop
fist
jns
jge
mov
pop
jmp
popa
push
nop
data16
mov
mov
sub
lods
mov
pop
imul
fwait
(bad)
pop
dec
add
xchg
out
pop
imul
jmp
in
mov
sub
push
and
add
xchg
in
pop
imul
aas
adc
lods
cmps
out
lods
fucomi
jmp
or
mov
sub
inc
rcl
imul
std
outs
movs
fucomi
mov
repz
inc
sbb
jnp
jmp
sub
inc
jl
fisubr
jl
ds
fld
mov
dec
mov
leave
and
push
jmp
test
xor
or
ds
in
or
mov
pop
jge
jb
ins
xchg
psubsw
imul
(bad)
imul
jecxz
push
hlt
fwait
outs
sub
cmps
jmp
push
xor
gs
mov
(bad)
sub
mov
and
mov
mov
and
paddb
sti
push
sub
ss
xor
mov
psllq
adc
cwde
clc
in
or
lods
pop
cmp
sbb
fld
xchg
mov
mov
out
or
repz
or
and
push
sub
dec
inc
lds
and
not
mov
mov
sub
lds
fucomi
test
mov
das
movs
mov
sub
push
xor
mov
push
repz
mov
in
or
in
pop
cmp
adc
test
sti
pop
sub
push
and
fisttp
scas
push
loope
ja
push
inc
sbb
pop
push
(bad)
stos
sbb
iret
es
test
fwait
mov
stos
inc
pop
cmp
in
jle
lods
mov
xor
in
mov
mov
in
or
fcmovnb
rcl
imul
push
and
fisttp
scas
push
loope
ja
push
inc
sbb
pop
push
(bad)
stos
sbb
iret
es
test
fwait
mov
stos
inc
pop
cmp
in
jle
lods
mov
xor
in
mov
rcl
jnp
sbb
add
jnp
imul
loop
movs
mov
and
add
push
cmp
sbb
cmp
in
(bad)
adc
in
pop
mov
xor
mov
mov
jmp
gs
lds
scas
jp
retf
xchg
sub
sbb
dec
jp
cld
mov
pop
paddsw
in
out
jp
call
jmp
cwde
xchg
or
push
xchg
xor
cmp
lods
bound
clc
(bad)
adc
and
in
cmps
and
and
in
xchg
fidiv
jl
(bad)
mov
sub
call
jmp
pop
mov
mov
and
mov
mov
cmp
sub
cmps
outs
nop
in
xor
cmp
mul
jae
jo
lds
icebp
(bad)
fdiv
mov
push
jmp
aad
cli
cmp
mov
mov
jb
into
push
cli
jb
fwait
stos
push
mov
call
jne
test
(bad)
jne
mov
fidiv
jg
add
stc
dec
and
cmp
(bad)
(bad)
jne
and
or
jmp
rcr
xor
push
es
push
cmp
mov
ret
mov
fs
stc
stc
sub
adc
dec
jp
sbb
sbb
mov
cdq
loop
arpl
cmp
mov
daa
jo
mov
clc
sub
(bad)
fcmove
hlt
outs
in
vmptrld
ins
mov
cli
sub
push
cdq
cld
(bad)
cli
cs
(bad)
cli
repz
ins
mov
adc
mov
shl
outs
mov
mov
stos
mov
or
adc
das
mov
xchg
fmul
adc
dec
sub
es
push
sub
cli
xchg
in
outs
fidivr
mov
addr16
es
(bad)
pop
xchg
imul
sahf
push
adc
es
(bad)
pop
xchg
imul
xchg
fcmovbe
cli
cs
(bad)
xchg
imul
es
xor
jle
pop
cdq
mov
dec
sbb
mov
or
add
das
mov
div
inc
shl
fidiv
ds
sar
jbe
daa
mov
daa
(bad)
xchg
fcmovnu
outs
pushf
jnp
dec
cdq
inc
pop
(bad)
and
in
xor
adc
sbb
mov
fwait
fwait
mov
mov
sbb
sbb
cli
repz
ins
mov
adc
mov
and
daa
stos
mov
or
adc
sbb
mov
fwait
mov
mov
sbb
sbb
cli
repz
ins
mov
adc
mov
cmps
mov
mov
mov
stos
mov
or
adc
sbb
mov
fwait
test
mov
sbb
sbb
cli
repz
ins
mov
adc
mov
jmp
outs
mov
mov
stos
mov
or
adc
sbb
mov
fwait
scas
mov
mov
sbb
sbb
cli
repz
ins
mov
adc
mov
or
outs
mov
mov
stos
mov
sbb
lea
pop
cmp
inc
sbb
inc
(bad)
jg
cdq
jl
(bad)
cs
pop
sahf
push
adc
es
sub
aas
mov
es
dec
outs
mov
cmps
es
(bad)
mov
mov
add
ret
or
add
outs
mov
adc
cs
mov
imul
fld
mov
add
adc
cs
(bad)
lahf
inc
adc
xor
stos
push
sbb
cmp
mov
adc
movs
es
les
rcl
add
jmp
mov
adc
movs
into
xchg
and
enter
in
adc
xchg
sbb
in
repnz
out
fidivr
xor
repz
add
in
xchg
movs
repz
xchg
jno
jnp
mov
xor
les
repnz
sahf
and
mov
adc
and
cli
nop
movs
mov
sbb
cmp
(bad)
shr
cmps
mov
gs
adc
movs
test
lea
repnz
lahf
in
rcl
sahf
in
cmp
gs
xchg
jno
in
stc
shr
xchg
(bad)
stos
pop
mov
mov
adc
mov
push
cmp
xor
mov
mov
call
push
xchg
sbb
push
nop
xlat
in
(bad)
adc
sbb
inc
loopne
push
(bad)
out
pushf
in
out
jecxz
add
call
cmps
and
cmp
cmp
cwde
pop
jle
xchg
xchg
cvtps2pd
mov
test
adc
push
cmp
pop
cli
repz
repnz
arpl
and
fisub
mov
or
cmp
lods
lods
repz
out
enter
or
mov
xor
sub
mov
das
pop
popf
stos
and
ja
pusha
(bad)
aad
mov
fdivr
into
mov
push
cwde
in
inc
pop
pop
push
ret
xor
dec
lea
shl
mov
pop
cmc
and
(bad)
fbld
shl
inc
leave
mov
or
inc
adc
add
shl
sub
xchg
add
push
jnp
mov
stos
adc
enter
or
(bad)
aad
and
sub
inc
jl
lods
ret
fwait
and
mov
mov
cli
cmp
jmp
xchg
sahf
mov
mov
dec
and
scas
and
mov
and
mov
and
mov
and
mov
or
mov
push
or
int3
mov
or
mov
xchg
add
je
mov
mov
xor
cwde
(bad)
mov
and
mov
mov
int3
mov
mov
mov
das
mov
repnz
mov
in
adc
adc
aad
retf
adc
cmc
mov
xor
mov
in
adc
adc
aad
retf
adc
push
or
sub
std
sub
(bad)
cmc
mov
(bad)
shl
inc
jl
ret
xchg
adc
sub
mov
xchg
popf
test
loopne
lods
or
ins
shl
lods
and
and
add
int3
mov
dec
pop
sub
mov
xchg
mov
int3
aad
mov
int3
mov
cmps
push
rol
add
(bad)
mov
outs
les
push
mov
sub
cmp
xor
shl
push
push
adc
sti
mov
push
adc
and
mov
int3
fnsave
dec
mov
or
(bad)
aad
mov
stos
into
mov
and
xor
mov
lods
lds
cmp
mov
cli
cmp
jmp
mov
jne
and
mov
add
mov
inc
mov
pushf
mov
lods
test
and
mov
and
mov
and
mov
xor
mov
mov
(bad)
ss
adc
mov
xchg
mov
(bad)
sub
add
pop
xchg
clc
and
mov
sub
jns
test
mov
mov
int3
mov
add
mov
int3
aad
and
adc
sub
xchg
adc
sub
mov
xchg
pop
jo
sahf
mov
sbb
shl
jge
mov
mov
sbb
shl
jb
(bad)
aad
das
dec
sbb
das
mov
or
gs
cmp
mov
cli
cmp
jmp
(bad)
sahf
mov
mov
jae
das
imul
pop
dec
cmp
(bad)
shl
vpcmpgtw
aad
cmp
mov
cli
cmp
jmp
lahf
sahf
mov
adc
mov
shr
jge
mov
int3
aad
mov
mov
mov
push
xchg
xor
or
mov
lods
and
fsub
aad
mov
sar
aas
sub
jo
sahf
mov
mov
jae
das
ins
les
dec
mov
dec
sti
xor
sub
xchg
mov
aaa
in
adc
and
mov
clc
cmp
xor
(bad)
aas
xchg
jmp
pop
adc
inc
jo
movs
gs
mov
and
in
cmps
mov
mov
or
call
xchg
in
sub
rcl
or
repnz
adc
pop
movs
stc
inc
(bad)
out
cdq
call
mov
push
ror
dec
idiv
sbb
mov
xchg
(bad)
adc
ins
cmps
into
xor
mov
sbb
test
aas
xchg
push
xchg
sti
into
in
mov
pop
lods
adc
loop
mov
adc
shr
xchg
clc
dec
(bad)
clc
movs
push
pop
jp
mov
ins
cli
jnp
in
nop
scas
and
ficomp
imul
push
stos
and
call
loop
adc
dec
cli
fldcw
cmps
sub
mov
pushf
jno
adc
mov
cli
lock
cmp
pop
push
jmp
mov
dec
sub
cmps
mov
add
jmp
xchg
xor
in
cmps
dec
call
pop
add
rcl
or
in
out
cmp
xor
dec
jp
scas
jo
mov
stc
gs
popf
clc
pop
dec
in
cmp
enter
mov
cmp
adc
arpl
ret
cmp
lods
rcr
or
cmp
adc
popa
movs
movs
call
popa
movs
xor
or
pop
fwait
dec
mov
ret
xor
imul
mov
and
les
sub
fcom
mov
fcom
dec
imul
in
aad
outs
push
and
jbe
cmps
test
or
aam
or
and
add
xchg
mov
dec
imul
(bad)
fcom
mov
ins
cmp
or
push
hlt
out
fst
movs
or
mov
(bad)
adc
mov
push
imul
inc
xor
leave
adc
test
movs
cld
mov
push
and
xchg
or
jg
lods
and
dec
out
adc
mov
call
jg
lods
cld
out
(bad)
push
stos
add
pop
mov
in
(bad)
adc
inc
nop
push
or
stos
mov
cmc
mov
pop
into
or
in
(bad)
push
scas
in
mov
cmc
push
cmp
repnz
cs
xchg
retf
in
es
fcom
jns
dec
mov
mov
cmc
push
cmp
repnz
add
fucomi
sbb
cmps
ficom
lea
gs
xchg
adc
and
int
inc
popf
in
adc
mov
int3
jne
ins
cld
ins
jmp
xor
gs
dec
sbb
popf
clc
mov
inc
enter
xor
adc
xchg
jmp
movs
bound
scas
push
jno
and
push
dec
test
jns
fs
loop
mov
pop
jns
jne
dec
mov
pop
jne
lea
cmp
rcl
shr
out
fwait
aad
jmp
lock
into
sub
cmps
mov
cli
push
jne
mov
lea
and
jp
dec
std
in
aad
(bad)
lea
dec
vmovss
adc
movs
mov
rcl
pop
inc
cmp
inc
mov
push
inc
call
leave
out
mov
repnz
mov
nop
movs
cmp
push
pop
mov
xchg
fdiv
mov
add
in
xchg
test
push
mov
mov
adc
inc
jl
sbb
lock
cmp
ins
push
xchg
imul
jb
mov
mov
jnp
xor
jne
mov
pop
or
jmp
jnp
jp
ret
(bad)
mov
dec
call
jmp
jnp
mov
inc
fdivr
icebp
or
retf
push
enter
pop
iret
inc
push
inc
int
push
inc
int
push
inc
int
push
inc
in
icebp
mov
xchg
clc
ins
xor
dec
int
push
inc
in
icebp
mov
xchg
icebp
test
clc
xor
dec
push
inc
int
pop
mov
in
dec
or
inc
inc
inc
dec
ins
repnz
int
pop
and
or
and
dec
int3
loopne
inc
rol
mov
test
nop
push
and
cwde
in
inc
pop
inc
in
xchg
shl
jge
outs
loopne
inc
lea
mov
or
nop
shl
sbb
cwde
jb
int
bound
mov
into
inc
push
mov
jb
test
nop
push
and
cwde
lea
inc
in
xchg
shl
jge
aas
loopne
inc
shl
inc
pop
ins
dec
or
inc
pusha
ret
push
dec
int
add
and
enter
lock
push
int3
ins
iret
or
inc
xchg
(bad)
int3
inc
xor
ret
dec
sub
rol
xor
lods
lock
sub
cmp
jmp
and
inc
dec
and
lea
jmp
and
clc
push
fld
inc
xor
ret
cs
cmp
cli
addr16
or
cmp
bound
mov
int
lea
inc
aas
cli
addr16
or
cmp
and
cmp
sub
cmp
and
pop
push
sub
pop
fisubr
scas
icebp
aad
call
inc
call
inc
push
and
icebp
aad
test
push
add
call
inc
push
and
icebp
sar
enter
inc
cli
scas
sub
inc
dec
and
mov
pop
inc
lods
icebp
shl
cmp
jge
lods
lock
popa
ins
mov
icebp
jmp
and
adc
into
cmp
jmp
popa
cmp
xor
ret
dec
ret
mov
push
or
sub
inc
inc
dec
inc
and
iret
int3
xor
int
dec
jge
mov
ret
or
and
icebp
inc
mov
push
and
and
retf
inc
or
inc
push
inc
lods
cmp
loop
ins
inc
fdivr
int
xchg
mov
int
cli
cmps
add
push
inc
dec
mov
inc
lods
lock
shr
or
scas
aas
jl
xlat
or
and
clc
dec
gs
inc
or
mov
inc
and
and
retf
push
inc
int
xor
ret
into
lods
icebp
jb
test
icebp
inc
popa
mov
mov
jmp
and
retf
jge
lods
lock
inc
outs
push
dec
jge
mov
ret
or
and
retf
ins
(bad)
cmp
int
push
mov
int
lea
xor
cli
addr16
dec
push
inc
dec
mov
mov
outs
scas
adc
call
out
lahf
dec
cmp
jmp
jp
inc
xor
jne
and
inc
popa
add
shr
push
pop
ins
outs
cmp
rol
int3
bound
loopne
and
pusha
pop
inc
lods
icebp
iret
popa
pushf
and
and
pop
int
scas
xor
mov
inc
repnz
int
arpl
and
retf
cmp
lods
icebp
ret
and
dec
mov
push
inc
push
jecxz
mov
test
mov
jp
inc
lods
icebp
enter
bound
and
dec
lods
loop
dec
push
fbstp
fiadd
and
cmp
sbb
inc
pop
inc
lods
mov
inc
dec
mov
mov
pusha
lock
ins
inc
pushf
inc
int
xchg
mov
int
xor
cmp
loope
shl
sbb
int
push
fnsave
movs
cli
loopne
inc
push
pusha
int
push
and
shl
push
inc
int
rcl
mov
dec
in
inc
push
inc
lods
sbb
inc
inc
int
xlat
fsubr
dec
cmp
test
lock
dec
jg
and
out
inc
dec
mov
xor
sar
or
popa
jmp
repnz
xchg
out
bound
dec
in
out
pop
xchg
(bad)
inc
adc
int
mov
cmp
into
dec
mov
push
push
lea
vshufpd
in
(bad)
adc
xchg
and
fdivr
into
adc
out
pop
mov
ss
repnz
and
jo
pop
jnp
out
cmp
and
les
clc
inc
mov
adc
adc
mov
add
xchg
adc
mov
jns
fs
in
cmp
jnp
or
ret
pushw
jo
mov
lds
add
and
rcl
test
xchg
fwait
imul
in
cmps
and
vshufps
sub
jne
fild
jne
jne
sbb
test
cli
and
lea
jmp
lahf
cmp
in
stc
adc
data16
into
jne
pusha
fst
stos
lock
call
movs
shl
add
in
cmps
or
xor
mov
add
mov
adc
push
lahf
mov
dec
in
mov
jl
aaa
ss
push
sub
and
mov
mov
dec
mov
(bad)
jne
jb
enter
xor
sti
popf
js
cmp
gs
repnz
out
mov
cdq
inc
xchg
xchg
mov
inc
loop
pop
or
pop
mov
xchg
jecxz
and
sub
(bad)
dec
sub
jnp
sar
hlt
ins
lea
hlt
sub
dec
sbb
mov
idiv
or
test
mov
movs
pop
sub
add
ret
dec
pusha
push
jge
adc
je
dec
mov
jp
dec
jmp
int
jno
fsubr
sti
jle
adc
inc
in
(bad)
adc
inc
nop
push
or
in
(bad)
cmc
gs
adc
mov
mov
mov
sub
inc
bnd
retf
in
es
pop
adc
pop
mov
ja
test
adc
mov
retf
jmp
cmc
push
cmp
bnd
shr
in
sbb
ins
stos
les
(bad)
aad
int3
or
(bad)
jne
lods
les
int
stos
jb
aam
mov
popf
sbb
pop
lods
add
sub
(bad)
in
(bad)
push
sbb
inc
inc
mov
daa
repnz
xchg
sbb
in
gs
cmp
xchg
sbb
and
mov
nop
fist
mov
lods
fsubp
rcl
sbb
push
lods
push
adc
fstp
sub
xchg
popf
sbb
mov
scas
dec
inc
mov
add
dec
jmp
add
in
cmps
ret
dec
push
lods
shl
fsubr
(bad)
jne
xchg
test
xchg
test
fnstsw
xchg
mov
sbb
xor
pop
or
sub
push
sub
mov
mov
xchg
mov
clc
imul
cmps
and
adc
sbb
dec
sub
cmp
mov
xor
pop
jne
and
shl
imul
mov
cli
sub
push
cmp
sub
pop
xchg
in
push
adc
cmps
bound
pop
ret
adc
mov
sar
inc
call
push
(bad)
mov
pop
jecxz
movs
(bad)
dec
cld
adc
jne
sbb
sbb
pop
adc
movs
cli
xor
adc
aaa
mov
cmp
fst
call
dec
in
xchg
mov
psubd
repnz
lds
lea
xor
jle
push
shl
icebp
mov
(bad)
cmc
inc
popf
out
adc
xchg
mov
xor
jns
nop
cdq
and
(bad)
js
in
(bad)
adc
das
shl
push
push
jns
mov
int
dec
mov
push
repz
data16
fstp
repnz
mov
pop
jne
adc
in
nop
ficom
inc
fimul
adc
sbb
inc
repnz
retf
mov
xchg
mov
push
aad
add
inc
(bad)
test
lea
cmp
(bad)
adc
xchg
xchg
icebp
push
stc
jecxz
ret
(bad)
jne
(bad)
shl
shr
xchg
push
lock
push
jo
inc
cwde
enter
out
xor
and
sbb
lea
mov
mov
xor
lods
push
add
out
or
cmp
lahf
imul
cmp
cmp
cdq
mov
vpmullw
cli
jo
jmp
cmps
enter
pop
ror
mov
cmp
jae
sbb
cmp
mov
pop
push
mov
fstp
jb
rcr
pusha
mov
push
cdq
clc
mov
push
jp
pop
in
ja
repz
repz
repz
repz
inc
ins
or
sti
imul
scas
xrelease
inc
ins
xor
retf
xchg
int3
bound
in
or
sti
mov
repz
jns
aad
repz
push
fild
scas
repz
push
adc
in
mov
(bad)
iret
inc
sub
out
sti
call
in
hlt
sti
dec
addr16
inc
loop
mov
dec
sub
out
xchg
mov
or
rol
hlt
out
cld
(bad)
movs
adc
xchg
adc
adc
and
fcomi
mov
xrelease
ds
jmp
inc
mov
repz
aaa
shl
iret
xchg
int3
bound
scas
or
push
repz
push
xchg
or
retf
inc
ins
xor
retf
xchg
retf
(bad)
iret
inc
in
or
sti
mov
int
repz
xchg
xchg
dec
jnp
pop
jae
cmps
repz
movs
adc
cmps
shl
jmp
cmps
repz
xchg
mov
aaa
adc
pop
cmps
pop
adc
vshufpd
in
(bad)
adc
vshufpd
in
data16
nop
push
mov
mov
jp
stos
std
fnstenv
iret
in
(bad)
test
push
cmp
in
(bad)
adc
inc
in
out
arpl
adc
in
cmps
mov
mov
mov
push
cmp
loop
fcomp
test
or
fisub
mov
fild
push
adc
xchg
mov
shr
(bad)
jo
stos
mov
test
push
data16
(bad)
in
sbb
jmp
ret
lea
sbb
in
(bad)
xor
add
dec
pop
or
mov
lea
push
cmp
adc
xchg
jmp
mov
in
(bad)
jne
sbb
(bad)
(bad)
loop
adc
push
push
mov
mov
mov
cmc
shl
mov
std
(bad)
adc
mov
pop
outs
in
jo
and
es
mov
add
mov
push
lea
mov
test
cli
shr
jmp
(bad)
adc
push
xchg
fcmovnbe
gs
sbb
xchg
xchg
mov
cmp
lods
adc
mov
dec
mov
call
jmp
mov
lods
lds
mov
outs
div
enter
sub
repnz
cli
xor
or
adc
test
xchg
mov
les
loopne
pusha
jae
out
jge
shr
jno
out
jge
shr
jge
push
pextrw
jmp
push
iret
int3
jne
mov
sar
out
mov
or
ret
out
jge
loopne
jns
(bad)
out
sbb
jns
push
cmc
outs
shr
jge
pusha
addr16
sub
jae
push
aas
ret
fnsave
out
out
jge
aas
pextrw
out
jge
mov
fwait
js
loopne
jge
mov
add
jno
out
jge
pop
ja
popf
push
iret
jge
int3
(bad)
and
and
jno
out
sbb
hlt
jno
jne
push
(bad)
int
pusha
mov
jl
jge
jge
pop
or
(bad)
nop
out
push
inc
icebp
popf
push
in
dec
popf
call
add
in
dec
mov
ins
adc
or
jp
jns
adc
icebp
sub
aam
movs
imul
cmp
jp
push
in
data16
shl
or
into
adc
inc
pop
out
adc
jne
(bad)
xor
gs
mov
repnz
add
xchg
dec
repnz
jns
call
cwde
cwde
push
shl
ds
add
in
rcl
in
mov
bound
nop
stos
and
add
sub
(bad)
adc
(bad)
lea
xchg
ja
mov
in
(bad)
jne
cmp
dec
inc
rcr
pinsrw
mov
lea
test
cmp
(bad)
and
in
xchg
cmp
aas
push
aad
or
in
cmps
and
aas
hlt
mov
gs
stc
jl
mov
mov
xchg
mov
cli
stos
push
mov
xor
sbb
clc
popf
(bad)
push
xchg
icebp
(bad)
and
pop
sub
lea
lea
int
stc
cmp
mov
les
adc
sbb
mov
jl
push
xchg
fwait
adc
adc
jmp
cmp
cmp
mov
sub
pop
cmp
mov
mov
aaa
mov
(bad)
mov
lahf
adc
cwde
adc
(bad)
fwait
movs
stc
inc
cli
sbb
mov
cli
cmp
jne
sbb
jne
sbb
jne
sbb
jne
stos
js
clc
adc
int
outs
fstp
sbb
jne
stos
jnp
cld
adc
les
mov
fidiv
sbb
mov
jle
xor
mov
outs
jno
sbb
adc
mov
or
je
movs
sbb
clc
adc
int
outs
fstp
sbb
jne
mov
cmp
outs
jne
sbb
adc
adc
xlat
cmp
jp
hlt
pop
stos
fidiv
sbb
shr
ds
cmp
push
(bad)
push
pop
push
(bad)
add
lea
push
mov
sahf
retf
sbb
push
xchg
mov
(bad)
sar
sbb
call
and
pop
stc
xchg
jge
xchg
jmp
(bad)
mov
jl
movs
in
mov
and
in
cmps
mov
popf
sbb
(bad)
nop
int
mov
cdq
loop
jecxz
push
clc
sbb
lds
xchg
cmp
in
inc
call
and
in
xor
cmp
pop
add
in
cmps
loop
mov
jmp
adc
in
xchg
sbb
out
vshufps
lods
xor
movs
mov
sar
dec
jmp
cmp
stc
(bad)
adc
dec
lea
sahf
and
mov
push
(bad)
in
xchg
push
popa
pushw
jo
mov
xchg
dec
or
lods
push
fdiv
fstp
lock
mov
mov
imul
mov
push
add
lock
mov
rol
jmp
ret
inc
retf
inc
dec
arpl
dec
and
cmp
or
sbb
mov
rcl
or
lea
loop
adc
sub
add
jmp
pop
icebp
cmp
stc
inc
pop
inc
les
fwait
mov
int
movs
ror
(bad)
int3
dec
push
(bad)
int3
dec
push
(bad)
int3
dec
push
ret
loope
add
and
(bad)
les
ror
loope
add
push
test
stos
call
(bad)
int3
dec
push
leave
add
fisub
dec
push
aad
retf
enter
lods
sti
mov
add
(bad)
int3
dec
push
movs
jno
call
in
dec
push
movs
pop
(bad)
push
inc
and
push
aam
dec
xor
mov
(bad)
in
dec
push
enter
and
dec
push
fmul
sub
dec
test
mov
add
retf
lods
cli
aaa
test
dec
std
jns
dec
push
pop
sahf
imul
mov
sub
(bad)
leave
stos
jno
push
adc
pop
pop
jmp
les
adc
mov
(bad)
(bad)
or
cs
(bad)
jne
mov
jl
test
iret
jbe
movs
mov
shl
fucomp
adc
adc
iret
jne
ret
loope
clc
movs
fwait
aad
inc
sbb
mov
(bad)
fcom
jnp
in
(bad)
adc
in
cwde
loop
add
push
retf
mov
mov
popa
pushf
push
add
cmp
xlat
adc
cmp
cdq
ret
cmps
push
inc
add
clc
out
sub
call
xchg
sar
call
loope
pop
xchg
lods
sub
in
cmps
and
test
(bad)
adc
repnz
(bad)
jne
add
out
lock
or
sbb
mov
sub
mov
push
lea
push
(bad)
adc
iret
in
cmps
call
mov
mov
jmp
mov
(bad)
mov
jle
movs
mov
shl
test
adc
add
lods
jno
mov
lea
jne
popa
sar
nop
in
mov
xchg
jnp
gs
and
lock
and
jp
retf
cmp
clc
sub
mov
dec
call
aas
sahf
push
jns
pushf
test
mov
or
mov
lods
push
fmul
push
xchg
scas
sbb
lea
aas
mov
cmp
or
pushf
cmp
xchg
out
pushf
test
mov
mov
out
xor
xchg
ret
mov
int3
sub
or
hlt
mov
lea
in
push
lods
xor
lock
sub
call
lock
jl
add
pop
in
xor
out
aam
mov
xor
jne
cmp
and
retf
add
jne
out
push
out
mov
or
fcomip
clc
push
add
popa
jp
icebp
or
or
hlt
jno
js
shl
jne
out
mov
dec
push
std
in
push
arpl
je
mov
in
aaa
or
int3
sub
(bad)
test
aas
popf
movs
pop
xchg
xor
outs
pushf
movs
or
xor
jg
pushf
movs
or
pushf
add
aas
pushf
test
mov
adc
sub
fmul
imul
imul
aas
cmp
inc
xchg
xor
push
fisttp
inc
xchg
and
xor
test
outs
pop
cwde
add
mov
add
mov
add
hlt
jno
ret
add
jp
vshufps
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
data16
nop
push
or
pop
mov
pop
push
clc
es
inc
mov
mov
clc
out
cli
or
dec
(bad)
popf
sbb
sub
or
mov
stc
inc
add
mov
mov
ret
stos
fisub
mov
xor
jbe
stc
call
adc
adc
fucomi
xchg
push
in
add
and
adc
jo
adc
shr
cmps
xor
xor
test
(bad)
adc
xchg
xchg
fist
cmp
cmp
mov
push
je
xchg
push
daa
add
cli
sub
xchg
pop
aam
add
mov
xchg
pop
outs
adc
adc
xchg
test
lea
dec
or
(bad)
cmps
pusha
xchg
sbb
xchg
pop
js
shl
test
ins
mov
jmp
stc
shl
sbb
jmp
mov
cmp
mov
fs
jp
xchg
mov
sbb
jo
and
cli
add
adc
sbb
mov
sbb
scas
sbb
shl
ud0
mov
out
out
cmp
call
xor
push
pusha
and
int
retf
mov
and
xchg
adc
dec
push
xchg
int
cmp
sbb
es
fisub
mov
fsub
xchg
stos
cmp
clc
adc
sahf
adc
sbb
es
stos
cmp
clc
adc
xchg
shl
call
adc
es
aam
ret
cs
cmp
xor
sbb
inc
add
daa
imul
xchg
or
pop
clc
es
movs
shl
pop
cmp
jmp
addr16
sbb
es
daa
cdq
mov
in
xchg
xchg
test
and
xchg
jmp
movs
ffree
or
jbe
mov
sbb
es
lahf
cs
inc
push
sbb
retf
fisub
mov
and
in
dec
fiadd
mov
hlt
movs
and
pop
xlat
cbw
sbb
or
cli
imul
cmps
neg
dec
inc
lds
sti
jp
div
fisubr
mov
fcmovnb
or
jns
sbb
ss
call
adc
ins
fcomp
ret
sbb
in
dec
lds
in
or
pop
fisubr
movs
sbb
data16
fisub
push
sub
adc
cdq
ja
test
aad
ss
push
movs
ffree
or
jbe
mov
and
es
gs
retf
cdq
fwait
sti
gs
in
fxch
xchg
es
xlat
data16
(bad)
or
cs
dec
add
cmp
retf
xchg
in
fxch
pop
call
test
sub
sbb
mov
xchg
mov
stos
mov
and
xchg
cmp
or
push
mov
cli
es
mov
retf
retf
jp
mov
mov
fiadd
mov
(bad)
inc
call
sbb
es
inc
inc
add
sub
jp
inc
dec
push
fiadd
jge
push
mov
sub
push
push
in
xchg
cmp
in
aaa
push
mov
call
mov
test
clc
adc
jnp
in
pop
add
xchg
cs
ja
cmp
into
lahf
ja
test
lds
mov
in
pop
sti
sub
shl
mov
shl
popf
in
adc
adc
int3
jne
in
xchg
loopne
mov
mov
sub
xchg
icebp
mov
in
(bad)
xor
into
int
jmp
and
mov
call
xor
xchg
jb
in
rcl
int
cmps
or
rcl
std
and
push
sbb
jae
movs
(bad)
cmc
gs
xlat
adc
dec
test
test
sbb
jmp
mov
jne
lods
adc
fstp
gs
mov
push
lea
outs
movs
mov
loop
lods
fisubr
jne
mov
lds
jns
cmp
mov
call
leave
(bad)
icebp
sbb
jmp
test
fstp
outs
cwde
mov
shl
mov
xlat
cli
jo
jmp
and
sub
jp
in
mov
test
or
(bad)
sahf
push
mov
mov
imul
int3
xchg
pop
xor
(bad)
das
cmp
fwait
lock
mov
jmp
jnp
sub
fisub
mov
push
scas
int
sbb
xor
sti
push
xor
std
push
adc
sbb
jle
push
call
xor
sbb
jle
aad
push
idiv
sub
sti
push
xor
mov
lock
out
ss
push
mov
pop
push
xor
sbb
outs
inc
fmul
jno
scas
dec
mov
in
test
das
xchg
xchg
xor
fs
pop
xor
push
(bad)
xor
adc
fsub
xor
hlt
dec
mov
cs
push
cmp
ja
xor
sbb
xor
jnp
fdiv
fwait
sub
fist
mov
push
xor
xchg
loope
idiv
sub
xchg
loopne
hlt
mov
adc
mov
cmp
xor
jmp
jno
sar
icebp
nop
out
std
mov
test
xor
jmp
scas
push
adc
push
in
inc
push
scas
dec
jp
push
cmp
fcos
mov
cmps
pop
adc
pop
movs
into
adc
lods
cmc
jmp
test
(bad)
mov
in
(bad)
adc
inc
lock
inc
pop
pop
fucomip
jnp
jp
mov
pop
test
adc
cs
ja
xchg
cmc
(bad)
xor
enter
ret
or
(bad)
jne
sub
jno
pop
lods
stc
inc
(bad)
fisubr
sbb
push
into
int
retf
fcom
(bad)
adc
ins
rcl
dec
cmp
pop
shl
addr16
pop
cmp
test
(bad)
adc
adc
add
pop
in
out
cmp
pop
scas
in
aad
lds
mov
jne
jb
ficomp
lea
jl
cmp
stos
jmp
clc
dec
dec
je
xor
fiadd
test
or
lods
mov
bnd
pop
cli
(bad)
pop
mov
sti
enter
jne
or
adc
cmp
jns
iret
(bad)
icebp
fwait
and
mov
ins
xor
leave
jne
cmc
xor
and
xor
jmp
dec
inc
fldcw
fldcw
and
lock
inc
(bad)
imul
adc
sub
pop
cmp
in
pop
adc
mov
lods
icebp
adc
out
out
xor
cmp
dec
pop
call
aad
fnsave
aaa
xchg
inc
ret
div
pop
shl
pop
shl
pop
shl
pop
loope
hlt
xchg
(bad)
jecxz
in
xchg
not
repnz
loope
not
inc
das
mov
xchg
(bad)
div
pop
shl
nop
idiv
push
jecxz
sti
repnz
inc
xlat
inc
pop
shl
cmp
idiv
adc
pop
dec
push
(bad)
repnz
mov
out
cmp
out
enter
add
das
imul
pop
dec
push
fsubp
repnz
mov
not
jecxz
or
mov
pop
inc
aam
pop
jge
inc
push
cld
mov
repz
or
mov
adc
call
or
xor
or
(bad)
jmp
adc
mov
repnz
shl
push
call
jae
scas
call
push
jb
call
(bad)
pop
shr
in
into
fcom
fnsave
enter
or
fild
mov
rcr
mov
mov
(bad)
jmp
jle
(bad)
in
into
mov
or
pop
rcl
pop
shl
pop
shl
pop
shl
jl
pop
add
leave
adc
mov
cli
pop
shl
jl
pop
sbb
cmp
mov
mov
leave
div
pop
sar
mov
mov
dec
pop
shl
fsubr
push
neg
xchg
in
daa
push
mov
ret
xchg
mov
lahf
inc
jnp
scas
cli
cmp
repnz
ja
pop
rcl
cmp
daa
mov
pop
rcl
jl
test
lea
cmps
shr
xor
cmp
xchg
shr
mov
aas
pushf
jl
not
xlat
mov
pop
jp
adc
nop
lods
retf
test
cmp
xor
cmp
xchg
shr
mov
aas
pushf
jl
hlt
xchg
lea
add
mov
pop
jp
adc
xchg
lods
retf
inc
inc
push
nop
sub
dec
cld
pop
dec
xchg
inc
movs
pop
jmp
addr16
push
lods
sub
nop
retf
push
(bad)
jo
neg
pop
rcl
inc
jmp
repnz
pop
aas
cmps
and
(bad)
ja
pop
ror
in
xchg
not
repnz
mov
pop
inc
pop
shr
cmp
ja
mov
xchg
add
leave
xlat
repnz
rol
pop
shl
int3
pop
cdq
inc
mov
jo
add
leave
cdq
inc
cmp
mov
lock
repnz
cld
outs
dec
mov
shr
cmp
div
pop
shl
pop
shl
pop
shl
pop
shl
in
pop
iret
mov
sub
div
pop
shl
in
add
mov
jle
hlt
adc
adc
repnz
sar
ins
mov
xor
sub
repz
jo
repnz
rcr
fdivr
push
ins
adc
xlat
movs
fadd
cli
xchg
ret
mov
adc
cli
pop
mov
pop
and
ret
repnz
adc
cld
mov
cli
jl
sti
repnz
data16
sub
not
in
xlat
mov
pop
mov
div
pop
rol
jge
cmc
xchg
in
test
mov
jg
cmc
sar
out
neg
add
test
and
div
pop
shl
pop
shl
pop
shl
pop
rcr
cli
cld
mov
mov
leave
div
pop
rcr
stc
std
mov
jl
xlat
iret
adc
sbb
push
repnz
or
xor
jle
repnz
shl
(bad)
pop
mov
jmp
mov
cmp
cdq
push
xlat
jle
repnz
repnz
xchg
hlt
and
adc
mov
cli
jl
sti
repnz
data16
sub
not
in
xlat
mov
pop
mov
div
pop
rol
pusha
mov
xchg
in
in
mov
bound
idiv
and
repz
and
adc
mov
cli
jl
sti
repnz
data16
sub
not
in
aaa
mov
pop
mov
div
pop
rol
nop
(bad)
sti
xchg
in
inc
daa
mov
xchg
(bad)
cmc
sar
out
neg
hlt
iret
in
repnz
jmp
push
adc
enter
call
or
push
add
aam
inc
push
mov
popf
(bad)
cmc
sar
popa
sub
ds
cmps
test
int
pop
pop
fsubr
sti
loopne
adc
adc
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
vshufpd
in
(bad)
adc
inc
jo
movs
in
mov
and
in
cmps
mov
or
sbb
mov
mov
sub
repnz
push
xlat
in
cmps
adc
jg
call
or
mov
sahf
rol
or
mov
ss
jbe
data16
or
jo
mov
hlt
push
es
inc
adc
mov
int
pop
int3
or
cmp
jo
loop
(bad)
retf
mov
fisttp
ss
sar
shr
out
shr
(bad)
jne
xchg
out
mov
movs
dec
mov
shr
jl
shl
mov
std
(bad)
adc
push
lea
cmp
repz
adc
xor
aaa
(bad)
in
repnz
jp
enter
cmps
lds
cmp
outs
inc
xchg
test
sar
cmp
jo
sbb
push
aas
sub
(bad)
sti
xlat
and
mov
xor
xor
mov
push
pop
popf
xchg
or
mov
jmp
mov
sbb
cli
pop
inc
jb
pop
addr16
and
cwde
jno
xor
cdq
loop
xchg
cmp
popf
neg
out
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
dec
retf
outs
std
xchg
je
push
push
in
call
ret
jbe
clc
outs
add
dec
ds
retf
cwde
imul
loop
push
jne
xor
xchg
fnstcw
(bad)
xchg
jb
retf
dec
retf
mov
ret
rcl
cmp
dec
retf
inc
retf
int3
aad
retf
mov
jl
jnp
or
aaa
inc
xor
dec
stos
and
test
cmp
xchg
jmp
les
push
dec
xor
ins
int3
lahf
je
retf
shl
call
cwde
call
jne
imul
jns
jne
imul
xchg
je
aaa
std
(bad)
fnstsw
nop
ror
ret
cs
xlat
add
push
pop
inc
shl
pusha
int
aad
jecxz
pop
out
fs
out
mov
xchg
je
jb
add
ret
dec
retf
push
enter
inc
ins
retf
mov
jl
(bad)
jb
push
data16
jbe
sub
ss
call
test
jne
loop
imul
xchg
xchg
icebp
pop
jbe
mov
retf
mov
sbb
out
push
es
sub
push
das
test
xchg
ins
in
xor
enter
out
push
cmp
xor
rol
ins
mov
(bad)
in
cmp
das
in
aaa
adc
pop
mov
xchg
inc
lock
adc
retf
sbb
pop
xor
cmp
jmp
rcl
push
mov
mov
adc
mov
mov
mov
rcl
stos
push
adc
bound
dec
mul
arpl
mov
lds
shl
mov
jmp
(bad)
adc
xor
jo
or
imul
mov
push
lock
sub
int3
xchg
cmps
arpl
aam
sub
std
(bad)
adc
adc
loope
pop
fist
adc
jne
bound
jge
loop
cmps
ret
shl
mov
mov
jg
shl
xchg
fld
jb
mov
out
shl
movs
mov
lea
lds
push
int3
xchg
jno
in
out
xor
shl
mov
(bad)
test
mov
xchg
in
inc
pop
sti
shl
(bad)
cmp
aaa
xchg
push
stos
ret
or
adc
dec
pop
inc
ret
push
shr
cmps
mov
rcl
sub
rcl
dec
inc
adc
or
pop
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
push
adc
push
push
xchg
sbb
imul
repnz
adc
push
sbb
xor
sbb
push
adc
mov
xchg
sbb
imul
repnz
adc
fisubr
mov
jmp
and
push
mov
add
inc
pop
inc
xchg
cmps
test
xchg
dec
ins
fidivr
js
adc
call
push
mov
fs
or
repnz
pushf
aas
sbb
sbb
push
adc
bound
outs
cmps
stos
adc
adc
xchg
pop
inc
pop
bound
bound
mov
xchg
mov
push
sbb
push
hlt
in
test
pop
ret
push
xor
mov
push
movs
xor
sbb
ror
mov
shl
sbb
ror
lods
popf
push
dec
inc
bound
pop
hlt
mov
mov
push
sbb
pop
sbb
bound
bound
mov
xchg
mov
push
sbb
push
hlt
in
test
pop
ret
pop
xor
mov
push
movs
repnz
add
jb
retf
mov
xchg
data16
jb
dec
mov
push
bound
pop
hlt
mov
mov
add
pop
jns
push
bound
bound
sbb
push
stos
nop
(bad)
sbb
jg
adc
and
pop
cmp
div
inc
xor
repnz
jmp
popf
jmp
in
mov
ja
inc
mov
jb
jmp
jge
stos
(bad)
xlat
mov
lods
fst
inc
arpl
repnz
scas
lods
popf
sub
sub
fs
jbe
inc
mov
jb
jmp
jge
stos
(bad)
xlat
mov
lods
fst
add
add
ret
je
mov
add
js
gs
pop
xor
imul
adc
(bad)
in
pop
(bad)
mov
add
xor
dec
mov
sub
jbe
cmp
mov
jg
mov
mov
push
stos
nop
les
adc
push
sbb
fst
mov
jb
je
hlt
bnd
sbb
xchg
(bad)
jle
cmp
or
hlt
cli
(bad)
jp
ror
hlt
fmul
push
fisttp
hlt
sbb
push
adc
fnsave
nop
lds
adc
sbb
outs
adc
adc
stos
mov
adc
adc
mov
pusha
inc
push
pop
sar
cmp
xchg
mov
push
cdq
cli
shl
jg
push
(bad)
in
mov
mov
in
test
pop
cmp
cmc
xor
dec
pop
sbb
iret
cmp
and
pop
and
pop
and
pop
and
in
test
pop
cmp
sti
xor
bound
call
fistp
hlt
jae
cld
mov
sub
mov
pop
inc
cld
je
sub
stos
jmp
(bad)
mov
bound
and
fcos
mov
je
jle
dec
shl
lods
mov
retf
cmp
pop
cmc
push
fcom
xor
fdiv
mov
adc
mov
popf
retf
xchg
shl
dec
sbb
xor
popf
push
inc
outs
aad
cmp
mov
adc
ret
into
jne
shr
xchg
in
rcl
repnz
sub
inc
cmps
fidivr
lods
mov
pop
jmp
xchg
jnp
icebp
mov
in
xchg
mov
mov
fnstsw
mov
cdq
cmp
mov
or
lods
mov
retf
out
sub
stos
inc
sub
jo
add
into
jne
fiadd
loope
lock
and
scas
jo
and
lea
pusha
fcmovbe
mov
add
xor
or
lea
gs
int
push
xchg
fwait
jo
jb
mov
cmps
inc
mov
jmp
cmp
mov
cdq
icebp
in
stos
stc
mov
cmp
mov
adc
jae
nop
leave
rcl
jmp
xchg
pop
inc
xor
popf
ret
adc
mov
push
cmp
add
jle
push
sbb
add
pop
std
rcl
ds
adc
les
cmp
out
pop
std
shr
add
cdq
mov
mov
(bad)
xchg
adc
lds
sar
adc
push
inc
mov
repz
mov
pop
repnz
mov
clc
adc
(bad)
js
xchg
cmc
inc
xor
loope
fsubrp
pop
ds
call
pop
hlt
repz
repz
std
mov
out
cmc
mov
dec
dec
jno
cmc
std
repz
inc
mov
xlat
call
or
(bad)
fdiv
sub
mov
movs
mov
(bad)
movs
mov
fnsave
movs
mov
outs
test
adc
scas
push
mov
fbld
movs
mov
jo
sbb
shl
adc
pop
cmps
ficom
in
push
xor
mov
lods
jo
xor
mov
add
inc
pop
pushf
out
mov
or
in
(bad)
xor
sub
mov
xor
xchg
jne
pop
shl
stos
mov
dec
test
adc
sub
in
(bad)
push
fisubr
test
adc
mov
fisub
jnp
xchg
add
(bad)
mul
in
ficom
inc
push
mov
lock
xchg
push
ficom
movs
mov
and
(bad)
xor
xchg
cmp
mov
xchg
jnp
gs
xchg
sbb
sub
mov
inc
ror
mov
jne
call
xchg
mov
mov
adc
xor
stc
pop
pop
jg
retf
mov
mov
sbb
push
jle
fs
int
sbb
jmp
imul
push
repnz
pop
ins
(bad)
sbb
call
cmp
mov
mov
mov
mov
mov
xor
jnp
add
inc
cwde
push
mov
(bad)
test
pushf
and
cmp
call
cmp
stc
inc
cmp
xor
call
outs
aaa
mov
test
test
pushf
push
add
popf
jno
or
adc
sbb
mov
sub
sbb
add
mov
push
cmp
aad
mov
ins
sub
lahf
int3
or
(bad)
jne
or
rcr
and
mov
fldcw
in
(bad)
push
jp
jmp
cmps
cmp
jecxz
mov
into
jle
mov
stos
adc
addr16
dec
idiv
push
mov
sti
adc
add
in
shl
jo
adc
sbb
(bad)
adc
(bad)
xor
xor
mov
jne
retf
scas
enter
jne
mov
lea
vshufps
(bad)
icebp
push
jl
mov
jne
mov
sub
(bad)
adc
rcl
adc
mov
(bad)
test
cwde
sbb
mov
xchg
gs
lods
add
stos
dec
sbb
dec
dec
jae
test
stos
cmp
cmp
mov
push
mov
lea
in
(bad)
jne
cmps
mov
adc
cmp
inc
int
push
data16
and
cmp
add
push
cmp
stos
(bad)
mov
mov
mov
adc
push
jp
jmp
shl
sbb
dec
lea
mov
sbb
dec
mov
sbb
call
sbb
mov
movs
jo
xchg
add
int
or
fmul
mov
fmul
in
sbb
or
cmp
imul
pop
push
cmp
iret
push
fisttp
mov
int3
fimul
stos
mov
cmc
cmps
xchg
xchg
sub
lea
jle
out
xor
stos
dec
dec
mov
push
lea
fdivr
cmc
inc
pop
loopne
retf
jne
mov
xor
add
stc
gs
jns
lds
adc
push
(bad)
push
push
or
popf
cmp
repz
into
mov
mov
sbb
int
dec
idiv
shr
(bad)
push
mov
sub
cmp
mov
jle
adc
push
call
ror
xchg
sbb
add
jno
popf
pop
mov
std
cmps
jno
call
aad
(bad)
jo
call
fimul
fsubp
cmp
cmp
xchg
sti
jno
jo
bound
lahf
push
jb
jp
cmp
hlt
shl
mov
xchg
mov
adc
xchg
call
add
adc
push
in
(bad)
push
mov
cmps
dec
(bad)
fs
mov
jnp
jmp
adc
push
stos
jno
loopne
inc
fsubr
(bad)
xor
xchg
mov
adc
js
ret
add
jmp
fild
mov
stc
gs
mov
sbb
and
mov
fwait
jle
popa
repz
mov
mov
mov
mov
pop
je
lods
mov
dec
sub
pop
cmps
loope
mov
scas
leave
pop
je
lods
mov
push
inc
sub
xor
and
int
cmp
sbb
dec
loopne
mov
test
sbb
dec
ret
stos
add
pushf
sub
mov
fisttp
lods
mov
jg
test
mov
lea
push
cwde
ins
loopne
mov
sub
pusha
lahf
push
ins
loopne
mov
lods
mov
jge
dec
and
call
pop
jg
and
dec
test
cmp
lds
mov
into
ins
sbb
dec
mov
jns
out
loopne
jmp
sbb
sbb
fnstcw
mov
pusha
fistp
into
and
dec
add
pushf
sub
mov
cmp
in
fcomp
call
add
stc
sbb
cmp
cs
stc
sbb
cmp
(bad)
sbb
dec
and
cwde
mov
cwde
jl
test
cmp
cmp
int3
mov
fistp
jmp
pop
push
cmp
int3
mov
fistp
call
and
cwde
mov
cwde
jl
test
cmp
mov
clc
jp
cmp
dec
mov
pop
push
ins
mov
pop
mov
mov
cmp
mov
ins
and
push
sub
cmp
mov
pop
dec
dec
pop
pop
cmps
loop
jg
mov
pop
sahf
mov
je
mov
mov
int3
mov
fwait
pop
ins
(bad)
js
mov
jp
add
pushf
ins
add
mov
cmp
sbb
sbb
dec
cmps
fwait
pop
push
and
ins
loopne
mov
scas
add
outs
mov
call
loop
sbb
sar
dec
loopne
cld
retf
pop
lods
lods
cwde
fsubrp
inc
jge
int3
mov
pop
sahf
mov
and
ins
cmp
pop
mov
aas
ror
fld
mov
lahf
sub
cdq
lahf
or
xchg
cmp
mov
cdq
pop
mov
aad
ins
sbb
dec
mov
mov
ror
fld
mov
lahf
sub
cdq
lahf
int3
and
call
cwde
ds
loopne
mov
dec
mov
pop
push
ins
mov
pop
mov
mov
aas
repnz
dec
and
fsubrp
inc
fnstsw
into
loopne
mov
or
sbb
enter
call
add
lahf
int3
mov
cdq
mov
add
jns
dec
int3
sbb
lods
add
aas
add
cwde
clc
ins
int3
pop
pop
in
cmp
dec
add
and
ins
cmp
in
sar
mov
mov
pushf
int
sbb
dec
add
and
ins
sbb
call
out
jg
add
fild
jnp
mov
out
pusha
lahf
mov
dec
cmp
sub
inc
fwait
ds
rcr
add
mov
mov
sbb
ror
pop
sbb
add
lahf
int3
inc
sti
sbb
mov
ror
mov
fimul
mov
pop
dec
popa
jnp
sub
mov
mov
jmp
lahf
int
mov
fsubrp
les
dec
call
rcr
leave
in
cwde
push
call
mov
cwde
push
call
sbb
cwde
mov
fwait
(bad)
ins
mov
mov
push
ins
sbb
call
loop
(bad)
ins
and
call
jge
push
pusha
cmp
dec
mov
js
sub
loope
jle
add
dec
add
call
aas
jg
add
mov
sub
stc
lahf
sub
fwait
ins
cmp
pop
push
cmp
lds
shr
cmp
sub
or
jmp
cmp
ins
inc
(bad)
sub
xabort
push
and
int
cmp
dec
lods
mov
sbb
add
and
fmul
add
and
call
cld
dec
cmc
sbb
movs
(bad)
into
and
pop
or
sbb
add
jle
mov
popf
jl
int3
js
call
inc
mov
pop
mov
iret
and
dec
push
mov
mov
iret
and
pushf
or
clc
mov
dec
mov
sbb
dec
add
pop
outs
add
pop
pop
into
les
cmp
movs
pop
ds
sbb
int3
cdq
push
call
mov
fwait
jle
inc
mov
dec
rcr
outs
and
pop
push
or
mov
ins
rcr
ins
ret
fcomp
rcr
retf
fimul
mov
sbb
dec
add
fisubr
xchg
mov
or
cmp
dec
mov
fstp
lods
mov
fwait
add
pop
mov
mov
and
push
sub
add
mov
call
bound
call
fdivr
int3
pop
push
call
add
pop
mov
sahf
in
xchg
mov
ins
and
call
cdq
lahf
dec
mov
cmp
mov
jnp
int
mov
and
pop
in
(bad)
fstp
lods
mov
pop
mov
or
fcomp
call
add
mov
lea
push
mov
call
mov
pop
push
int
fwait
mov
int
xchg
cmp
sbb
add
push
inc
sbb
ins
cmp
jmp
mov
dec
fidivr
and
mov
mov
cmp
mov
fwait
mov
dec
add
pushf
mov
cwde
aas
into
mov
jns
ins
mov
ds
inc
jge
int3
mov
cmp
add
dec
cmps
pop
cmp
mov
pop
mov
outs
add
inc
cmp
dec
sar
mov
fsubr
add
mov
int
jns
dec
inc
cmp
pusha
test
mov
call
mov
mov
jg
dec
mov
mov
ins
(bad)
js
add
pop
or
pushf
int3
movs
fwait
mov
mov
jne
ins
ins
mov
pop
lods
and
pop
ins
push
js
mov
mov
pop
lods
add
mov
dec
mov
jnp
ins
add
sbb
movs
fstp
or
mov
or
fwait
dec
add
cwde
ins
loop
mov
mov
cwde
or
mov
fwait
int3
and
call
sbb
dec
add
pop
dec
popa
sti
sbb
cmp
es
dec
add
sahf
lods
ret
test
sbb
cs
pop
sahf
or
aad
dec
loop
cwde
lods
loopne
pop
dec
ret
push
jns
mov
cdq
fsubrp
inc
mov
cwde
lods
loopne
pop
dec
and
ins
cmps
cwde
and
jle
add
sahf
mov
cmp
mov
fstp
add
sbb
sbb
lods
fwait
pop
out
popa
lahf
fmulp
inc
mov
jle
add
sahf
mov
stc
mov
jmp
mov
int3
loope
mov
lods
sbb
and
dec
inc
pop
mov
dec
sbb
int
cmp
test
cdq
pop
retf
push
ins
add
add
pop
dec
mov
cmp
lea
cdq
lahf
in
and
push
or
clc
lahf
mov
mov
pop
dec
mov
mov
lahf
mov
mov
aas
and
pop
mov
pop
pop
push
jns
dec
and
jb
inc
stc
cmp
mov
jne
sub
inc
mov
pop
mov
mov
cs
lahf
in
and
cmp
jb
mov
push
adc
in
sbb
add
loop
int3
xchg
ret
xor
mov
nop
cmp
xor
sub
mov
add
or
arpl
dec
test
push
mov
call
pop
test
inc
fnsave
push
cmp
bound
aas
cmps
imul
scas
bound
pop
test
cmp
xchg
scas
bound
fild
pop
test
inc
fnsave
push
cmp
bound
jmp
stos
pusha
call
sub
ficomp
jnp
call
std
pop
push
scas
jae
xor
test
loop
aad
adc
ret
cld
sbb
or
adc
sub
xchg
lock
int
test
xor
xor
mov
and
dec
outs
and
adc
xchg
and
fs
test
cmpxchg
fs
adc
pop
mov
xor
fld
mov
arpl
mov
jecxz
mov
and
mov
ret
cmp
add
retf
mov
and
mov
add
mov
add
mov
add
mov
and
mov
fdiv
add
and
add
rol
and
mov
add
rol
jecxz
mov
add
lods
sti
add
call
ret
lea
add
pop
iret
add
scas
mov
mov
shl
jecxz
mov
add
push
mov
jecxz
mov
add
mov
add
inc
jecxz
mov
jecxz
loopne
add
iret
add
cmp
scas
and
mov
jecxz
xlat
add
cmp
and
mov
and
mov
mov
pop
mov
xor
add
addr16
arpl
mov
ret
add
add
inc
mov
ret
repnz
add
mov
cli
add
mov
inc
push
mov
jecxz
mov
jecxz
mov
jecxz
mov
and
jo
jecxz
jae
arpl
jge
ret
pop
fs
arpl
les
lock
sti
fmul
cmp
or
stc
mov
or
mov
or
sub
cmp
xor
or
pop
les
ret
push
jp
ret
fst
or
jns
or
jecxz
or
mov
call
or
stos
xlat
or
adc
or
adc
add
pop
xchg
sub
xchg
cmps
or
scas
xlat
or
arpl
or
pop
les
jns
or
shld
add
or
push
ss
addr16
das
arpl
jcxz
cmp
ret
(bad)
cmp
pop
aas
arpl
add
cmp
xor
inc
cmp
jecxz
aas
addr16
cmp
and
and
ds
pop
and
pop
add
pop
and
inc
adc
popa
mov
mov
arpl
jnp
arpl
cmp
adc
and
xor
and
pop
data16
cs
pop
popa
jecxz
jb
or
popa
xor
inc
mov
jae
ret
es
ret
idiv
inc
push
jge
jecxz
jb
mov
cmps
js
add
mov
(bad)
arpl
sar
add
jnp
jecxz
adc
test
fistp
loop
cld
xchg
in
mov
pop
cmp
ins
sub
inc
retf
sti
int3
or
(bad)
jne
ins
test
ror
mov
jne
pop
sub
mov
ins
sub
fucomi
out
cmp
int
mov
stc
sbb
arpl
rcl
stos
push
(bad)
fidivr
outs
adc
sbb
push
test
out
mov
mov
or
pop
test
mov
push
xlat
mov
mov
call
adc
mov
push
ret
into
jne
xor
mov
mov
dec
leave
jns
xor
movs
adc
lods
add
int
sbb
mov
adc
in
(bad)
adc
sbb
je
jo
and
movs
out
xchg
sbb
aad
mov
mov
add
jmp
fwait
gs
push
es
add
jmp
(bad)
cmp
(bad)
xor
cmp
mov
cmps
mov
mov
mov
push
cdq
imul
cmp
sub
stc
mov
jne
enter
jne
jo
mov
call
jbe
cmp
test
mov
xor
test
pop
gs
(bad)
popa
fisttp
ret
enter
popa
fisttp
dec
xchg
aad
or
dec
xor
outs
sub
das
nop
popa
fucomp
(bad)
in
pop
outs
fmul
imul
xchg
add
cs
jo
aad
mov
push
div
iret
outs
retf
inc
adc
test
scas
sahf
fst
(bad)
sahf
pop
pop
ja
aad
iret
cs
or
xchg
add
sub
or
cwde
test
outs
es
add
sub
or
push
inc
repnz
pop
jle
retf
scas
test
jbe
adc
xchg
es
(bad)
pop
aad
outs
(bad)
or
test
outs
es
jb
aad
dec
rcl
or
push
sahf
popa
fucomp
fisubr
inc
jbe
pusha
ficomp
inc
fs
dec
xor
jge
lods
test
outs
data16
nop
pop
stos
pop
addr16
or
fidiv
sub
fs
es
or
or
pop
ret
es
leave
push
es
or
sbb
sub
xor
push
xchg
repz
ja
add
int
gs
clc
ins
add
dec
(bad)
int
fs
clc
ja
add
xchg
mov
in
inc
mov
shr
xchg
repz
sbb
xchg
pop
push
outs
cmps
aad
jnp
sub
mov
out
add
imul
push
movs
sub
neg
pop
cs
fsubr
movs
add
xchg
add
sub
xchg
xor
sub
outs
cmp
add
es
shr
mov
sbb
push
daa
sub
popa
cmp
mov
fisubr
fwait
cdq
pop
xor
mov
pop
cdq
(bad)
shr
xchg
xor
sub
popa
cmp
mov
aad
das
lock
jmp
lock
jmp
inc
repnz
pop
ja
retf
cdq
repz
cs
or
aad
out
aad
pop
xchg
fbstp
test
mov
nop
int3
ins
inc
outs
push
xchg
imul
es
btr
or
mov
dec
mov
popf
dec
nop
cmp
xchg
aad
outs
es
cwde
xor
out
fimul
xchg
inc
imul
(bad)
lock
nop
div
(bad)
iret
scas
retf
or
xor
or
ret
es
imul
es
outs
es
imul
inc
ret
es
outs
aas
push
popa
sbb
arpl
es
outs
sti
push
or
fstp
jle
aad
xor
test
imul
jnp
or
fnstsw
jle
aad
xor
test
aad
adc
mov
and
jg
outs
xlat
add
sbb
pop
les
int3
test
lods
lods
clc
pop
les
outs
es
(bad)
adc
or
test
ins
es
or
les
outs
es
(bad)
jno
or
test
fs
clc
inc
sbb
jno
cs
sbb
aad
outs
(bad)
loop
jne
aad
adc
aad
mov
add
lods
sbb
aad
outs
mov
add
aad
push
or
aad
inc
xlat
aad
add
aad
dec
dec
and
sub
lahf
or
push
cwde
mov
pop
jo
(bad)
sahf
popf
push
inc
data16
(bad)
sahf
sbb
or
aad
push
es
(bad)
outs
nop
push
(bad)
push
sub
outs
es
es
imul
inc
ret
es
outs
aas
push
popa
sbb
arpl
es
outs
sti
mov
outs
data16
jle
aad
xor
test
aad
adc
mov
mov
inc
sbb
aam
stos
sbb
aad
outs
(bad)
loop
outs
es
adc
aad
mov
adc
aad
outs
mov
aaa
es
mov
stos
(bad)
xchg
std
push
addr16
mov
and
test
push
xchg
fstp
mov
or
jno
cmps
aad
outs
sti
call
daa
aad
punpckhbw
or
xchg
jno
idiv
and
mov
outs
pop
jne
(bad)
int
(bad)
cs
test
xor
push
dec
xchg
jmp
inc
xchg
jno
test
and
shr
dec
mov
xchg
repz
cs
cli
adc
cmp
mov
pop
mov
jmp
scas
ror
jle
aad
(bad)
scas
loop
out
aam
(bad)
es
imul
ror
ja
aad
out
scas
push
or
aad
out
cmps
rcl
es
push
mov
or
out
scas
ror
jg
aad
out
scas
push
or
mov
lea
inc
xchg
jne
outs
icebp
jp
jg
dec
push
les
aad
lock
push
call
dec
inc
mov
das
pop
ret
es
or
pop
add
xor
inc
xchg
pop
mov
punpcklbw
jmp
lock
shr
out
xor
loope
aad
lea
xchg
pop
xchg
pop
ds
sahf
pop
pop
outs
inc
repz
inc
xchg
jae
pop
ret
es
and
sbb
es
mov
dec
imul
mov
push
xchg
(bad)
cmps
cs
mov
cmps
scas
scas
mov
setbe
sub
enter
test
mov
out
jae
imul
inc
add
mov
mov
out
and
imul
inc
jne
adc
hlt
outs
adc
sbb
sahf
pop
pop
jne
jne
seta
push
lods
mov
out
cmp
mov
out
add
imul
pop
sbb
out
fdivr
xchg
lods
loope
es
outs
add
mov
out
cmp
cmp
aad
jle
aad
shr
mov
sahf
es
mov
adc
imul
daa
aad
test
xchg
sahf
sahf
je
imul
daa
jne
or
cs
dec
es
pop
jg
and
sbb
or
add
xchg
pop
jle
sub
mov
adc
and
pop
ds
ds
or
ret
es
jg
adc
mov
in
and
mov
pop
sub
sbb
pop
mov
pop
aaa
lods
adc
dec
xchg
repz
mov
str
int
push
and
mov
fcom
test
pop
push
dec
imul
jecxz
push
sub
cdq
daa
aad
sahf
fldcw
jbe
fstp
ret
retf
(bad)
adc
push
cdq
sbb
xor
mov
int
ja
cmovl
add
not
and
pop
mov
add
jmp
call
mov
fxch
xchg
mul
cs
outs
test
lods
in
fmul
test
inc
sub
jns
mov
out
test
mov
in
or
sub
push
add
lods
mov
mov
pop
xchg
retf
mov
inc
mov
push
daa
and
retf
push
pop
aaa
dec
pop
pop
mov
call
add
push
inc
sub
cmp
aad
nop
pop
stos
pop
addr16
or
les
mov
ins
cmps
mov
mov
mul
xchg
cwde
or
in
fcom
add
dec
inc
add
mov
pop
inc
pop
cmc
fsubr
inc
add
sbb
div
fadd
test
popa
outs
(bad)
movzx
or
inc
xchg
add
ins
test
ja
aad
(bad)
out
pop
imul
das
(bad)
cmps
sub
push
jae
mov
(bad)
out
pop
jno
push
cmp
call
fdivr
mov
jae
mov
out
(bad)
adc
int
call
out
adc
movs
in
xchg
sbb
and
in
cmps
mov
mov
stc
gs
pop
push
sub
xchg
adc
add
dec
aad
(bad)
xor
lods
shl
dec
call
mov
mov
daa
cli
sub
arpl
mov
rcr
xor
xor
xchg
mov
push
test
cmps
test
sub
push
xchg
mov
push
mov
jp
add
lods
in
xchg
sbb
ficom
aas
jmp
sahf
jmp
gs
or
or
into
jne
fimul
loop
ss
sbb
jb
cmp
xchg
push
jbe
sub
jne
jo
loop
mov
push
test
mov
mov
xor
js
cmp
in
imul
cmp
das
adc
jne
jp
das
cmp
fwait
std
cmp
(bad)
cmp
cmp
fiadd
cmp
mov
pop
jne
jb
mov
add
jmp
imul
loope
cmp
cmp
ret
out
clc
mov
push
stc
inc
inc
aam
or
mov
ds
push
not
pop
mov
pop
mov
jb
adc
cld
inc
or
shl
daa
cli
leave
movs
cmp
cmps
loope
je
xlat
push
mov
or
sub
mov
cli
and
add
and
xlat
mov
movs
sub
cli
aaa
in
mov
nop
test
and
call
or
lods
mov
or
xchg
and
jp
aas
loop
add
inc
mov
xor
lods
sahf
inc
imul
(bad)
jno
imul
fst
inc
mov
pop
(bad)
and
mov
iret
call
cmp
call
fadd
pop
pop
mov
aad
ret
xchg
adc
mov
in
xchg
gs
adc
inc
lods
imul
push
inc
cmp
mov
pop
retf
pop
stos
pop
mov
push
cmp
inc
add
out
add
call
pop
out
add
and
push
pop
pop
das
fdivr
bound
pop
mov
pop
(bad)
fadd
pop
pop
xchg
aad
loop
xlat
xchg
cli
adc
and
xchg
gs
adc
inc
stos
imul
pushf
push
cmp
mov
pop
retf
pop
stos
pop
mov
push
cmp
sub
loop
cwde
adc
push
test
add
and
retf
das
fidivr
bound
pop
mov
pop
(bad)
fadd
pop
pop
xchg
or
sbb
add
mov
adc
mov
in
xchg
gs
adc
inc
test
gs
cmp
mov
pop
retf
pop
stos
pop
mov
push
cmp
pusha
pop
jmp
jno
loop
cwde
adc
push
test
add
and
mov
das
fdivr
bound
pop
mov
pop
(bad)
fadd
pop
pop
nop
or
cwde
add
mov
in
xchg
gs
adc
inc
stos
imul
or
cmp
mov
pop
retf
pop
stos
pop
mov
push
cmp
jnp
repz
add
call
jl
inc
add
and
cmp
scas
fidivr
and
pop
stos
pop
retf
pop
sahf
fadd
pop
pop
mov
aad
inc
mov
cmp
add
adc
daa
add
xchg
cdq
xor
xchg
imul
jmp
inc
cmp
ficomp
pop
mov
fbld
imul
shl
sbb
out
pop
add
pop
retf
pop
stos
pop
(bad)
fadd
pop
pop
mov
xlat
pop
and
cmp
add
add
push
xchg
gs
adc
inc
mov
rol
and
pop
mov
pop
mov
push
cmp
(bad)
and
mov
test
add
and
sub
pop
add
pop
retf
pop
stos
pop
(bad)
fadd
pop
pop
sahf
or
cmp
adc
loop
cli
inc
add
push
xchg
gs
adc
inc
mov
cld
pop
cmp
mov
pop
mov
pop
mov
push
cmp
pop
mov
mov
test
add
and
sub
pop
add
pop
retf
pop
stos
pop
(bad)
fadd
pop
pop
or
pop
add
sbb
xchg
cli
inc
add
push
xchg
gs
adc
inc
mov
and
cmp
mov
pop
mov
pop
mov
push
cmp
sbb
mul
jae
mov
test
add
and
sub
pop
add
pop
jmp
fcom
call
in
jb
cmp
push
out
inc
mov
je
cmp
mov
pop
stos
pop
pushf
pop
pushf
xchg
xchg
mov
cli
adc
ret
add
popa
xchg
daa
mov
mov
pop
sub
pop
bound
pop
jmp
fcom
call
out
out
add
xchg
add
sub
cmp
mov
pop
stos
pop
pushf
pop
pushf
mov
xchg
sti
inc
repz
adc
xor
add
popa
xchg
daa
mov
xor
pop
sub
pop
bound
pop
jmp
fcom
call
jmp
jb
cmp
push
out
inc
cmps
sub
add
pop
cmp
ret
and
jbe
xor
inc
inc
movs
sub
cmp
ficomp
pop
fcomp
or
pop
sbb
adc
pop
add
dec
sbb
scas
fidivr
add
pop
mov
push
mov
sbb
add
pop
fwait
and
jbe
xor
inc
inc
lods
sub
imul
mov
ficomp
pop
fcomp
mov
xchg
pop
loop
mov
cli
xchg
push
adc
pop
and
add
sub
cmp
cmp
pop
loop
pop
test
xchg
mov
retf
lahf
pop
pop
lods
fnstcw
inc
cli
pop
jmp
inc
pop
fistp
xchg
or
(bad)
cli
xchg
add
sar
and
cdq
adc
popa
inc
mov
add
dec
or
mov
mov
pop
fwait
push
mov
pop
xchg
test
out
add
push
pop
test
xchg
mov
jae
mov
fstp
inc
cli
pop
jmp
inc
pop
fistp
lea
xchg
pop
mov
xchg
add
sar
and
cdq
adc
popa
inc
test
sub
mov
mov
pop
fwait
push
mov
out
cmc
(bad)
mul
repnz
push
pop
test
xchg
mov
cmp
pop
lods
fnstsw
inc
cli
pop
jmp
inc
pop
fistp
or
jnp
mov
mov
xchg
add
sar
and
cdq
adc
popa
inc
mov
pop
dec
cmp
mov
pop
fwait
push
mov
not
add
push
pop
test
xchg
mov
xchg
fdivr
pop
pop
lods
fistp
inc
cli
pop
jmp
inc
pop
fistp
xchg
or
lahf
cli
xchg
push
ret
and
cdq
adc
popa
inc
mov
jmp
inc
mov
(bad)
jno
jp
fcmovne
adc
xchg
jg
dec
jmp
or
loop
jbe
ficom
into
das
mov
add
fimul
mov
das
cli
sbb
cs
loop
adc
pop
int
call
or
(bad)
vshufpd
jge
xor
int
xchg
in
jnp
bound
stc
movs
gs
sbb
and
in
cmps
mov
aas
mov
xchg
cmp
clc
inc
jp
adc
repnz
jno
push
std
mov
or
mov
xchg
fdiv
adc
jne
xor
jp
test
pop
inc
cmp
ret
aam
cmps
inc
xchg
mov
(bad)
adc
dec
lods
xor
pop
mov
addr16
shr
(bad)
jne
loope
sbb
vpsubq
(bad)
cmps
and
shr
(bad)
jne
cli
jbe
mov
xchg
(bad)
shl
in
(bad)
adc
fcomp
shl
xor
mov
adc
dec
gs
jae
in
(bad)
adc
dec
int
sub
sub
cmps
test
mov
jle
popf
mov
(bad)
lahf
std
adc
xor
adc
cs
clc
enter
push
shl
call
inc
fiadd
cmps
loop
int3
cdq
push
fwait
push
lea
mov
pusha
inc
mov
mov
in
(bad)
adc
call
out
xchg
pop
dec
cli
lea
and
xchg
add
pop
scas
adc
push
rcl
push
daa
jmp
sub
lock
xor
mov
fcom
ret
fwait
or
not
fcmovbe
mov
aad
mov
sub
ins
mov
jne
add
and
cmp
movs
mov
je
or
push
add
sbb
xchg
mov
sbb
mov
cmp
jecxz
xchg
fcomp
sub
sbb
fwait
add
not
and
lods
mov
or
xchg
jl
and
arpl
aad
jl
call
push
fcom
cmp
ins
cmp
(bad)
aam
pusha
jmp
xchg
adc
adc
fwait
ret
cld
jmp
mov
sub
jecxz
push
and
aad
push
cmps
fwait
or
push
daa
jne
xchg
shl
push
enter
or
push
mov
mov
daa
jne
adc
and
enter
or
push
mov
fdivr
stos
lods
and
mov
sbb
sti
ins
xchg
pop
xor
dec
push
or
test
jl
sbb
cld
jmp
sbb
ins
adc
push
lea
fcomp
arpl
clc
fcmovbe
cmp
xchg
cmp
aad
int3
add
or
fwait
pushf
adc
xor
and
inc
fs
xchg
push
sub
cmc
jne
or
push
and
pop
xor
jp
and
jne
jl
mov
(bad)
cld
xchg
adc
sar
xchg
or
mov
aad
push
iret
js
cld
lods
mov
call
sub
ins
or
jp
and
mov
sbb
cmp
retf
cmp
mov
retf
stc
aam
adc
xor
ret
not
jne
mov
and
jne
xchg
shl
and
or
mov
or
call
aad
fstp
jnp
adc
xor
and
int
and
(bad)
xor
jecxz
jmp
dec
ret
inc
daa
xor
mov
and
pusha
xchg
mov
xchg
cmp
movs
je
or
push
cmovle
mov
mov
jne
arpl
pushf
cmp
fidivr
int3
cmc
aam
jecxz
mov
mov
or
push
cli
loope
aam
xchg
dec
inc
dec
and
cli
loope
aam
fwait
adc
sar
mov
mov
aad
dec
sti
aam
adc
cmp
loopne
xchg
cmp
aad
arpl
stc
fcmovbe
cmp
adc
int3
add
or
aaa
sub
ds
xchg
(bad)
(bad)
xor
jecxz
jmp
and
sti
ins
adc
xor
mov
lods
retf
ret
inc
and
or
sbb
jecxz
sti
loope
inc
sub
sbb
retf
clc
jb
jecxz
xor
ret
fadd
cmp
(bad)
xor
add
xchg
pop
or
fwait
aad
loop
mov
sbb
test
push
xor
jecxz
mov
xor
add
sub
dec
ret
aam
ret
push
out
ins
mov
jne
inc
shl
mov
push
jl
mov
fcom
mov
aad
mov
aad
sahf
xchg
cmp
mov
jnp
adc
and
ins
fwait
adc
xchg
sti
jne
or
and
(bad)
xor
adc
(bad)
and
sub
dec
ret
aam
ret
push
daa
and
jp
arpl
retf
jecxz
retf
and
sar
test
jecxz
je
or
jl
jecxz
xchg
cmp
aad
arpl
retf
daa
xor
mov
jnp
add
into
cmc
aam
xor
adc
arpl
retf
jecxz
retf
and
mov
add
xchg
fcomp
test
lods
and
cmp
popf
fdivr
cmp
aad
sbb
retf
xor
and
dec
xor
ret
fsub
and
xchg
dec
inc
dec
and
ins
adc
sahf
and
dec
and
add
mov
mov
inc
aam
call
xchg
(bad)
and
mov
and
int3
sbb
js
pop
lahf
retf
xchg
sub
popa
sub
cmp
jp
dec
retf
mov
mov
pop
aad
mov
sbb
xchg
adc
or
dec
mov
lea
retf
int
adc
mov
shl
inc
fucomp
adc
mov
shl
popa
shl
sub
repnz
add
in
out
jp
rcl
popf
clc
jne
lea
sub
push
inc
jne
lahf
and
mov
adc
or
fidiv
mov
pop
push
cmp
xchg
adc
rcl
adc
add
pop
(bad)
out
xchg
pop
jbe
mov
lods
(bad)
sbb
in
aam
(bad)
lea
or
adc
jmp
push
push
and
(bad)
mov
shl
mov
xor
sub
icebp
(bad)
adc
xchg
xchg
jnp
push
jne
loop
xchg
sub
jo
mov
(bad)
test
xchg
imul
stos
fstp
inc
mov
mov
jg
sar
sti
xor
mov
(bad)
in
rcl
xor
sbb
clc
mov
add
fisubr
imul
sti
out
and
mov
jg
xchg
cmp
sbb
popf
movs
xchg
push
out
mov
cmp
shl
mov
or
and
ds
jno
sbb
stc
gs
jb
inc
cmp
inc
xchg
adc
pop
push
inc
xchg
dec
js
cdq
inc
jne
fild
xchg
and
in
jle
xchg
bound
inc
adc
add
jne
xlat
sbb
stos
fmul
sbb
cmc
adc
adc
movs
xor
inc
lds
lea
es
dec
push
inc
xor
stc
xor
fnsave
inc
jne
jno
int
xchg
adc
in
xchg
arpl
mov
adc
cmp
inc
xchg
rol
mov
pushf
mov
loopne
popa
inc
xchg
inc
mov
lahf
ficom
inc
nop
push
mov
mov
je
repz
mov
sub
mul
xchg
and
jo
rcr
out
jp
push
pop
lahf
sbb
pop
cmp
cmps
inc
pop
sub
or
mov
cmps
mov
mov
mov
bound
jns
les
mov
jge
xor
(bad)
loop
adc
sub
fnstsw
mov
std
out
fucomp
(bad)
jne
jp
fwait
mov
(bad)
shl
xchg
sbb
jo
loop
(bad)
or
lds
xor
add
mov
sti
sbb
in
cmps
bound
cld
(bad)
adc
cwde
rol
jne
and
jl
(bad)
imul
xor
mov
rcl
sub
cmc
(bad)
adc
cmp
cmp
cmp
mov
jo
lea
sub
cli
rol
(bad)
sub
and
xor
lds
adc
push
or
mov
push
lea
mov
cmp
add
xor
mov
cwde
(bad)
mov
stc
inc
lds
sub
mov
xchg
stos
and
shl
fcom
add
nop
add
nop
add
nop
add
ror
or
inc
pushf
std
inc
dec
pushf
popf
add
nop
add
sbb
push
dec
mov
shr
lock
cmp
cwde
inc
dec
sar
pop
ret
je
jp
(bad)
ror
retf
call
dec
cs
inc
out
cwde
pusha
adc
ror
inc
and
mov
cmp
dec
not
cwde
loopne
rcr
cs
and
inc
stos
and
cmp
push
test
push
ret
lods
inc
sbb
pop
add
rol
fsub
and
inc
mov
sbb
sbb
push
dec
cli
popa
or
sub
add
mov
rcr
loopne
call
and
sbb
int
inc
cmp
cdq
out
mov
pop
(bad)
loopne
call
daa
adc
bound
mov
rcr
loopne
call
and
push
jl
fdiv
or
fwait
jmp
aam
cs
xor
jl
push
mov
dec
sbb
jg
cmp
mov
nop
add
and
mov
adc
jo
add
ret
je
jnp
(bad)
jo
test
or
(bad)
jo
test
cmps
arpl
(bad)
mov
sub
(bad)
cmp
pushf
xor
sub
inc
cmp
sbb
push
dec
sub
inc
cmp
cwde
loopne
sbb
push
dec
mov
lock
es
call
push
adc
push
aad
fidiv
pusha
je
arpl
fdiv
or
adc
ret
nop
popf
lock
jg
add
and
leave
call
js
mov
je
mov
in
data16
adc
mov
inc
int3
mov
pop
aam
data16
nop
push
mov
(bad)
jbe
jp
into
mov
(bad)
cmc
inc
fucom
adc
sar
cmp
out
cmp
sbb
fisubr
pop
lds
ficom
pop
cmp
(bad)
stc
in
popf
js
das
mov
push
dec
pop
jmp
mov
add
and
mov
mov
adc
mov
push
inc
test
loopne
(bad)
test
in
(bad)
push
fisubr
stos
dec
fsubr
push
jge
mov
mov
mov
mov
ficomp
cmp
aaa
xchg
xor
std
test
in
in
adc
pop
out
test
pop
and
push
test
pop
sbb
(bad)
test
or
imul
xchg
dec
sub
sub
cli
lock
sub
test
or
out
test
(bad)
adc
adc
jp
mov
jne
cmp
and
fild
push
xchg
push
lea
xchg
test
lea
popa
mov
mov
cld
cmp
stc
gs
pop
xchg
mov
ffree
push
popa
sbb
sti
lea
push
ds
mov
cmps
dec
mov
cmps
dec
mov
out
cmc
ins
out
dec
loop
cli
aaa
cmc
mov
inc
test
inc
xchg
js
adc
sub
movs
dec
push
adc
mov
push
jl
dec
adc
movs
dec
sbb
fs
xor
in
imul
std
mov
or
out
mov
lock
dec
mov
mul
push
or
dec
mov
cmp
jl
dec
xchg
cmp
addr16
out
cli
jnp
or
sti
xor
add
cli
cmp
movs
dec
cs
pop
std
sub
out
in
scas
dec
scas
imul
lods
jmp
cmc
lods
retf
hlt
cmp
jno
inc
inc
and
hlt
popf
mov
adc
lods
retf
hlt
cmp
lods
fdiv
std
xchg
dec
retf
push
frstor
test
fnsave
sbb
pop
int
xchg
test
shl
mov
iret
cmps
dec
mov
adc
jae
movs
dec
adc
fs
jnp
dec
pop
push
ds
movs
dec
in
pop
adc
in
out
stc
mov
arpl
and
std
dec
dec
lds
lods
cmp
std
ins
sbb
ss
inc
test
aaa
adc
pop
cs
scas
xchg
test
(bad)
adc
vshufpd
jl
movs
in
xchg
sbb
and
in
cmps
mov
mov
cwde
arpl
stc
gs
enter
cwde
hlt
fist
clc
gs
mov
fld1
shr
(bad)
push
lds
or
shl
push
sbb
mov
mov
add
mov
pop
ins
jmp
enter
(bad)
adc
lds
call
jne
shr
mov
lock
lds
cli
inc
ret
lea
add
cmp
xor
jne
and
jo
mov
in
(bad)
push
sbb
and
fcmovbe
adc
cld
add
jmp
mov
xchg
xor
sbb
push
out
test
(bad)
sahf
ret
enter
sub
repnz
test
cmp
movs
adc
push
mov
ins
cli
mov
jmp
test
fnstsw
ins
xchg
sahf
icebp
cld
dec
adc
cmp
into
jne
sahf
fimul
cmp
cmp
stos
mov
loopne
stc
push
div
pop
mov
xchg
mov
and
mov
cmp
stc
cmp
push
pusha
mov
pop
stc
test
pusha
pop
popa
cld
push
call
add
test
and
mov
mov
adc
sbb
shl
cmp
add
push
add
mov
in
mov
cmp
sbb
mov
bts
pushf
xchg
mov
cld
push
mov
pushf
add
sbb
daa
xchg
jne
jns
popa
mov
arpl
xchg
enter
jno
mov
stos
or
or
cmp
or
adc
or
data16
sbb
adc
repnz
xchg
jne
xor
fsubr
xchg
or
or
(bad)
jne
sub
push
nop
sti
mul
inc
sti
mov
cld
call
jmp
inc
cwde
mov
adc
enter
xor
cdq
bound
pop
sub
inc
mov
cmp
(bad)
adc
xchg
xchg
sub
inc
jmp
fsubr
(bad)
jne
xchg
sub
in
cmps
mov
ror
(bad)
push
jp
pushf
jmp
jo
addr16
shr
(bad)
jne
jbe
(bad)
xlat
adc
mov
xchg
mov
xor
xchg
in
cmp
xor
and
cli
movhps
ins
or
ror
xchg
sbb
cmp
lods
xchg
inc
fsubr
xchg
or
lods
xchg
jbe
push
fsubr
cmp
cmp
sbb
cmp
pop
movs
push
(bad)
call
(bad)
mov
stc
dec
sub
cmp
cli
lock
xor
test
or
lods
mov
jg
mov
mov
nop
sahf
bound
std
int3
jne
xchg
test
mov
ja
sub
shl
ret
mov
loope
lock
rcl
mov
mov
stc
repnz
mov
pop
lods
pop
jns
pop
mov
mov
xchg
cmp
sub
sti
data16
xchg
xchg
in
repnz
(bad)
adc
in
les
gs
adc
pop
dec
pop
repz
add
cmp
xor
ja
mov
pop
and
test
dec
jo
mov
not
cmp
xchg
mov
cli
sbb
jecxz
es
imul
shl
push
ss
jns
mov
pop
jge
shl
es
imul
mov
repz
push
jns
mov
bound
and
mov
push
jb
mov
clc
sbb
push
jbe
mov
bound
sub
xchg
dec
jb
mov
clc
sbb
pop
jle
rcr
sbb
pop
and
imul
dec
outs
xchg
mov
cmc
sbb
pop
jnp
mov
addr16
ret
sub
mov
push
ja
mov
pop
jnp
mov
xchg
dec
push
adc
push
je
mov
cli
sbb
mov
test
dec
jo
mov
out
push
xor
xchg
mov
cli
sbb
jecxz
push
inc
popa
test
ins
nop
mov
repz
ss
jno
mov
neg
cmp
mov
inc
imul
mov
repz
push
jns
mov
pop
jge
shl
and
mov
push
push
lods
shl
adc
push
jbe
mov
bound
and
xchg
dec
jb
mov
clc
adc
push
jbe
mov
pop
and
arpl
sub
outs
xchg
mov
cmc
sbb
pop
jnp
mov
stc
sbb
pop
jg
ret
sub
mov
dec
outs
(bad)
mov
cmc
adc
mov
pop
jg
ret
and
into
out
adc
push
je
scas
shl
adc
mov
test
inc
push
push
xor
xchg
mov
cli
sbb
(bad)
push
inc
popa
test
ins
nop
test
jmp
cs
jno
mov
neg
cmp
mov
ds
and
repz
dec
jno
mov
not
cmp
popf
shl
and
mov
dec
push
lods
shl
adc
push
jbe
mov
pop
jp
mov
data16
inc
push
lods
int
adc
push
jbe
mov
pop
sbb
arpl
sub
outs
xchg
mov
in
adc
push
jae
mov
stc
sbb
pop
jg
ret
sub
and
outs
(bad)
mov
cmc
adc
mov
stc
sbb
jg
ret
and
into
out
sub
scas
shl
adc
mov
pop
jl
mov
push
push
xor
mov
push
js
mov
popa
test
mov
push
jno
mov
neg
xor
cwde
mov
popa
and
jmp
cs
jno
mov
not
cmp
popf
rcr
sbb
pop
and
shl
adc
dec
outs
xchg
mov
hlt
pop
aaa
pop
jp
mov
data16
shl
daa
inc
push
lods
int
adc
inc
test
xor
sti
mov
xor
dec
arpl
and
mov
adc
push
jae
mov
stc
sbb
pop
ja
mov
arpl
sub
outs
(bad)
mov
in
or
mov
stc
sbb
jg
ret
sbb
mov
test
dec
jo
stos
retf
out
push
xor
xchg
mov
cli
sbb
(bad)
push
inc
popa
test
ins
nop
mov
repz
cs
jno
mov
neg
cmp
mov
inc
imul
mov
repz
push
jns
mov
pop
jge
shl
and
mov
dec
push
lods
shl
adc
push
jbe
mov
bound
mov
data16
dec
jb
mov
lock
push
jbe
mov
pop
and
arpl
sub
outs
xchg
mov
cmc
sbb
pop
jae
mov
stc
sbb
pop
jg
ret
sub
mov
dec
outs
(bad)
mov
cmc
adc
mov
pop
jg
ret
and
into
out
adc
push
ins
(bad)
scas
shl
adc
mov
test
inc
push
push
xor
xchg
mov
cli
adc
(bad)
push
inc
popa
test
mov
mov
sbb
ins
xchg
scas
aad
sbb
pop
jnp
mov
addr16
ret
sub
mov
push
ja
mov
rcr
or
sub
in
fcomp
in
retf
pop
add
rcr
in
ficomp
movs
fbld
(bad)
call
in
stc
pop
sub
in
push
sub
in
dec
cmp
cld
test
inc
cmp
hlt
mov
inc
xor
hlt
mov
inc
cmp
hlt
mov
js
cld
mov
cmp
cld
mov
inc
or
hlt
mov
push
adc
fcom
push
adc
movs
icebp
push
ins
aam
adc
mov
adc
or
gs
adc
mov
or
adc
movs
stc
or
stc
add
jmp
or
icebp
cmp
jmp
add
adc
jne
jmp
or
loope
jne
loope
jge
icebp
add
loope
jne
fld
jne
icebp
cmp
loope
jne
rol
inc
mov
sbb
loope
dec
mov
stc
or
fst
dec
mov
cmp
icebp
add
(bad)
dec
test
cmp
jmp
add
sar
push
mov
sub
fnstcw
dec
movs
shl
movs
stc
or
rcl
inc
mov
xor
icebp
add
ror
inc
test
xor
jmp
add
fnstenv
pop
mov
and
sar
inc
pushf
shl
push
mov
fmul
shl
inc
ins
shl
test
or
ror
pop
mov
sub
jmp
add
shr
inc
mov
sub
leave
cmp
shr
test
and
leave
xor
cmp
mov
pushf
leave
sub
xor
mov
leave
enter
and
and
jne
jmp
add
shl
pop
mov
and
shl
xchg
leave
and
xchg
shr
ins
shl
pushf
leave
enter
sub
and
mov
xchg
shl
je
and
xchg
rcr
test
pop
test
and
cmp
lods
ins
rcr
pushf
leave
fcom
cmp
lods
jl
fdiv
ins
cmp
lods
jl
fdiv
ins
cmp
lods
je
fmul
ins
cmp
lods
ins
or
movs
xchg
ror
fs
movs
jl
shl
fs
movs
dec
and
test
movs
fs
movs
inc
sbb
popf
jl
loopne
fs
movs
je
enter
lock
jl
enter
enter
loopne
jl
sar
and
mov
sbb
popf
jl
lock
and
mov
or
in
je
call
mov
add
xchg
inc
sbb
lea
xchg
dec
sbb
lea
in
inc
adc
lea
in
inc
adc
test
lock
pop
or
popf
and
call
in
pop
or
cmc
and
cmp
add
sub
in
mov
pop
sub
in
stc
push
shr
mov
pop
in
outs
sub
fdivr
push
cmp
cmp
pop
das
loope
and
cld
std
sbb
aam
cmp
push
mov
dec
sub
and
fdivr
ret
jnp
cmp
sbb
out
jne
hlt
inc
mov
scas
xchg
mov
mov
inc
add
fsubr
fld
out
mov
pop
scas
fsubr
mov
adc
push
div
sbb
jecxz
les
ja
inc
sub
cwde
sub
inc
dec
pop
(bad)
mov
nop
inc
xor
mov
and
cmp
daa
js
imul
inc
dec
pop
outs
test
fldenv
aaa
fdivr
mov
repnz
dec
adc
cmp
shl
outs
into
pop
push
mov
retf
icebp
jl
push
jns
das
call
(bad)
enter
popa
dec
and
ror
jbe
pop
sti
inc
mov
movs
outs
adc
pop
(bad)
dec
add
adc
add
les
sbb
imul
sub
mov
inc
arpl
test
in
cwde
hlt
enter
mov
cmovle
xor
jnp
sub
imul
ja
in
movs
xor
mov
xor
sbb
imul
fcomp
sbb
pushf
add
icebp
or
mov
push
mov
and
movs
(bad)
mov
call
inc
lods
ds
push
push
sti
jnp
(bad)
bnd
xchg
jge
inc
repz
add
fneni(8087
fisttp
and
cmc
mov
(bad)
push
mov
lods
es
mov
int3
outs
and
xor
and
cmp
inc
shl
ret
xor
add
(bad)
jecxz
sbb
cmp
mov
test
push
mov
dec
sub
arpl
cwde
test
sbb
and
and
sbb
pop
imul
enter
jne
js
cli
loop
jno
mov
inc
jl
push
jo
test
in
mov
push
sbb
(bad)
(bad)
ret
pushf
jg
mov
push
or
sti
les
pushf
aas
pusha
jnp
pop
add
sbb
jp
popa
(bad)
in
mov
(bad)
ja
push
cmps
pop
test
add
and
sub
sbb
push
pop
sub
sub
mov
sub
inc
push
sahf
ja
cmp
mov
addr16
sti
ds
xor
rol
push
cwde
pop
enter
movs
ja
in
mov
adc
aaa
add
enter
cld
retf
xchg
fwait
mov
push
or
dec
mov
cmp
ss
mov
ins
in
adc
mov
lea
cmp
adc
inc
mov
cld
push
es
(bad)
push
ficom
adc
or
retf
and
or
loope
pop
sub
push
mov
ins
cli
out
jl
cmp
cmp
xor
xchg
icebp
lea
or
add
sub
push
or
cmp
inc
inc
push
nop
fiadd
jmp
sub
mov
in
and
adc
mov
loopne
movs
xor
cmp
push
dec
jl
call
ins
jp
or
ret
or
dec
neg
popa
std
lods
jmp
test
sub
clc
scas
(bad)
loope
lock
and
mov
pop
aam
test
(bad)
cmc
shr
push
pop
adc
mov
pushf
fsubr
or
cmp
jge
xor
dec
xor
fucomp
mov
or
out
test
mov
add
pop
jge
stos
in
jae
xor
push
shl
mov
in
icebp
sbb
adc
popa
(bad)
push
scas
imul
or
dec
int
cmp
push
inc
xchg
loope
not
outs
and
mov
mov
out
fld
test
push
xor
mov
arpl
dec
test
cwde
pop
js
cdq
add
mov
xor
pop
sub
(bad)
out
scas
imul
cwde
stos
lods
ins
cmp
arpl
pushf
push
mov
into
dec
in
sbb
cmp
cmp
sub
and
loop
retf
aam
mov
xor
adc
in
mov
xor
std
(bad)
out
xor
pop
ficomp
inc
hlt
dec
shl
cmps
cmps
scas
sub
sub
in
adc
sub
jbe
fs
jno
mov
cmp
hlt
jle
(bad)
dec
cmp
jp
mov
and
inc
(bad)
cld
pop
dec
or
jbe
mov
add
push
fnstenv
mov
dec
in
mov
jl
jmp
scas
scas
movs
in
jmp
call
cs
test
and
stc
push
dec
retf
mov
xor
jmp
cs
sub
pop
stc
lahf
mov
and
int3
leave
jne
test
(bad)
aaa
jg
dec
int3
cmps
sub
mov
or
pop
cli
sbb
inc
and
ins
mov
sbb
push
jl
movs
jl
xchg
out
cmps
sbb
jno
jle
in
ja
in
fwait
cli
rcl
jo
adc
fcmove
sahf
cmp
fnstcw
clc
dec
dec
xor
mov
out
jmp
(bad)
push
cmp
stos
push
jmp
push
mov
xchg
adc
push
push
mov
cs
adc
adc
sub
fmul
inc
shl
sahf
popa
mov
sbb
dec
jp
xor
clc
mov
sub
test
inc
pmaxub
test
(bad)
pop
fidiv
dec
icebp
xchg
enter
cmp
mov
push
xchg
imul
push
jge
mov
in
test
xchg
es
dec
in
sub
scas
jg
cmp
es
or
pusha
xchg
adc
push
aad
or
push
scas
cmp
aam
rol
jne
popf
popa
cmp
push
test
ret
fbld
jp
cmp
inc
aad
sub
stc
xor
in
inc
pushf
(bad)
call
pop
or
sbb
sbb
mov
std
imul
jp
mov
or
ins
test
cmc
gs
aam
fwait
adc
out
shr
and
bound
xor
std
data16
ins
ss
test
jecxz
out
clc
jno
fld
pop
inc
(bad)
fist
sbb
dec
xchg
push
fwait
or
loope
mov
lods
push
jmp
movs
enter
(bad)
rcr
ins
test
test
dec
movs
adc
mov
int
stos
ja
mov
mov
mov
in
outs
fs
loopne
ficomp
cmps
aas
fld
imul
jbe
outs
imul
stc
jb
movs
les
js
pop
outs
pop
sub
mov
cmp
out
aas
xor
inc
in
outs
cwde
icebp
and
mov
xor
aaa
dec
or
mov
cmp
xor
mov
mov
pop
(bad)
int3
(bad)
mov
pop
mov
mov
push
sbb
sbb
dec
cmps
pop
inc
loop
loop
js
fdiv
or
retf
jl
cwde
loopne
std
mul
sar
arpl
test
jo
fiadd
aam
ins
loopne
xchg
das
cdq
das
push
mov
jmp
or
in
cwde
into
xchg
mov
adc
inc
dec
sar
adc
cli
nop
div
pop
fcom
ds
jbe
stos
in
scas
repz
dec
pop
pop
out
sar
lods
fidiv
test
mov
jbe
or
xor
ss
cld
mov
ds
movs
aaa
aam
call
popf
in
mov
stos
jbe
(bad)
retf
inc
push
test
ds
mov
mov
and
cmc
or
xor
sbb
sbb
das
sti
pop
and
fstp
lods
in
pop
(bad)
hlt
dec
movs
cmp
pop
xchg
add
mov
sbb
mov
sbb
jecxz
mov
jge
xor
pop
aaa
push
adc
enter
mov
push
addr16
jne
jmp
loop
div
mov
or
push
leave
icebp
ret
sahf
dec
out
inc
add
movs
sbb
add
in
xchg
fsub
mov
mov
pop
out
popf
out
mov
fmul
sets
pop
cmp
jge
int
and
ds
mov
cmp
mov
pop
cmc
sub
call
gs
mov
fild
fsub
mov
cmp
push
popf
int3
sbb
push
out
push
xchg
dec
and
and
inc
je
stc
lock
xchg
jnp
push
or
cli
xor
xchg
sbb
mov
rol
cwde
sub
rol
stos
mov
adc
push
jmp
push
lods
leave
lock
shl
pop
movs
shr
xor
adc
lea
mov
repz
push
fwait
mov
pop
out
pop
and
pop
push
ret
dec
mov
inc
loop
test
sub
add
sbb
jge
imul
sub
xchg
sub
and
add
mov
js
pop
daa
push
in
jmp
or
dec
dec
out
in
mov
mov
ror
loope
adc
sub
sub
xor
adc
sbb
sar
sub
out
enter
popf
sbb
dec
mov
stc
inc
jae
dec
retf
in
imul
add
jns
mov
inc
ficom
sbb
call
sbb
cmp
dec
loope
pop
cs
sbb
cmp
stos
(bad)
sbb
(bad)
push
cmps
neg
jmp
push
and
inc
cmp
pop
dec
mov
loop
sbb
ds
push
fimul
cdq
es
inc
inc
xchg
or
mov
sbb
mov
scas
mov
or
iret
inc
(bad)
mov
test
pop
cmp
shl
(bad)
fwait
inc
pop
movs
mov
pusha
test
pop
jl
xchg
dec
sub
cmp
jge
inc
xor
ret
and
pop
lods
iret
cmp
push
adc
fnstcw
mov
int3
pop
mov
pop
aas
xchg
sbb
ds
sub
sub
dec
push
mov
and
jp
les
jmp
or
or
addr16
sub
and
adc
mov
fdivr
mov
pop
mov
adc
aas
xchg
mov
test
dec
ret
test
pminub
movs
pop
(bad)
push
in
fwait
cld
dec
ja
outs
lahf
pop
cld
inc
fdiv
sar
cmc
fwait
outs
sub
pop
pop
in
scas
mov
push
xchg
push
call
mov
jbe
loope
aad
mov
dec
sahf
push
pop
dec
fdivr
adc
jmp
sti
pop
sub
out
jo
ja
jp
rcr
imul
mov
es
pushf
fsub
hlt
cmp
lock
pop
mov
mov
xor
push
cmp
das
clc
xchg
ror
or
or
sub
adc
imul
ds
stos
dec
xchg
retf
jbe
fistp
or
test
in
ret
sti
add
ds
cmp
cwde
js
inc
cmps
cmp
dec
cmps
xor
cmp
ficom
pop
lock
fnstcw
fucom
les
imul
sbb
pop
cmp
push
fstp
test
push
mov
cld
and
cmp
cmp
cmp
cmp
ror
or
pop
or
sbb
mov
mov
mov
(bad)
dec
dec
int
mov
dec
jnp
push
fst
lods
std
or
dec
shl
jb
movs
xor
or
sub
jno
adc
iret
retf
sub
sahf
pusha
xor
and
popf
cmp
daa
pop
into
(bad)
dec
dec
fs
nop
in
inc
popa
pop
mul
add
sub
(bad)
pop
jge
sub
dec
mov
cmp
sbb
and
sub
or
xchg
cmps
movs
ds
push
mov
(bad)
jmp
call
push
cmp
loopne
in
or
pop
sbb
pushf
sbb
repnz
outs
mov
push
inc
adc
(bad)
inc
fistp
xor
push
sbb
aas
sar
or
inc
std
cmp
aad
fs
push
cmps
repnz
or
sbb
sub
ret
xchg
mov
or
(bad)
mov
in
(bad)
and
xchg
push
pushf
push
mov
mov
jecxz
out
or
dec
inc
push
mov
jmp
sub
mov
lods
sub
cmps
sbb
test
and
mov
pushf
cmc
rcr
cmp
lock
out
xor
adc
(bad)
in
out
ret
cmp
cmp
jo
stos
mov
cmp
fwait
sub
test
add
dec
xor
cmps
cmp
jp
mov
sub
push
ror
neg
dec
pop
imul
cmp
push
mov
loope
mov
outs
mov
push
pop
lods
push
push
jg
rcr
adc
push
mov
popa
popa
sub
fcomp
add
stos
dec
ret
dec
sbb
jns
push
push
mov
push
add
leave
sub
jp
push
cmps
cs
cmp
inc
xor
mov
popf
mov
xlat
jmp
jno
xor
or
dec
push
sub
cli
into
dec
dec
cli
cmp
mov
jl
imul
cmps
jl
into
mov
cs
dec
dec
leave
or
adc
jne
repz
mov
sbb
lock
fldcw
out
sub
push
lock
pop
jmp
jg
pop
pop
imul
sub
xor
mov
push
mov
jmp
inc
and
in
fiadd
mov
and
in
cmps
push
xor
inc
pushf
fcomp
das
fcom
mov
sbb
or
retf
bound
shl
dec
jne
data16
cmp
dec
imul
retf
adc
repz
and
data16
pushf
rcr
pop
pop
pushf
popf
push
mov
test
(bad)
xchg
test
in
sub
test
test
xor
or
xor
mov
mov
mov
mov
pop
sub
sub
xchg
jne
loop
dec
in
cwde
and
and
xor
jae
jmp
repnz
daa
inc
mov
into
mov
cmp
cdq
inc
inc
and
mov
pop
lods
pop
and
loopne
cld
sub
mov
cmp
fwait
and
dec
in
lea
sbb
mov
enter
mov
mov
sub
dec
fcomp
xchg
mov
mov
inc
aas
rcl
xor
sub
jmp
in
out
leave
pop
jg
cdq
or
sub
or
dec
push
add
sbb
lock
in
jecxz
jns
adc
push
mov
xor
rcr
mov
xchg
aad
popa
(bad)
and
sub
mov
rcl
je
or
mov
fidiv
mov
je
xor
jge
and
jge
mov
cmp
xlat
das
pop
sub
inc
cld
inc
sbb
fucomp
mov
push
xchg
mov
mov
and
add
dec
call
loope
jns
jmp
push
js
stc
out
jmp
fist
jl
and
daa
inc
sub
xor
push
push
and
adc
mov
cmp
lods
sub
mov
loopne
mov
mov
inc
out
arpl
loope
mov
mov
cdq
lea
scas
into
enter
lock
jae
cmp
jns
out
jg
mov
jmp
mov
xchg
dec
xor
inc
sbb
fist
fwait
mov
xchg
in
test
lock
scas
xor
cmc
stc
mov
(bad)
pop
out
enter
imul
mov
pop
mov
mov
out
ins
sub
fucomp
mov
push
xchg
pop
stc
out
sub
popf
loop
xor
mov
inc
add
gs
xor
cwde
inc
pop
fcmove
inc
mov
int
pop
bound
inc
add
daa
pop
sti
mov
push
and
ror
xor
icebp
jbe
pusha
cmp
retf
bound
lods
add
loopne
call
loop
xor
out
lea
cmps
jo
popa
js
xlat
xchg
bound
sahf
(bad)
int3
call
cs
cmc
pop
imul
call
cld
pop
push
ins
aaa
sub
mov
xchg
nop
nop
dec
fldcw
mov
push
mov
out
clc
call
sar
movs
in
or
inc
or
dec
cmc
shr
ins
jmp
cld
push
shr
icebp
push
or
mov
sbb
cdq
lea
cmps
and
test
je
mov
je
clc
pop
addr16
sub
arpl
or
loop
js
outs
xchg
retf
xor
sub
or
mov
es
pop
test
add
out
aas
cmc
xor
mov
mov
mov
call
mov
pop
dec
lods
fld
jmp
push
sbb
and
mov
sub
cmp
popa
or
popf
jmp
data16
xchg
push
mov
test
test
scas
adc
sub
adc
mov
inc
ficomp
cmps
sub
lahf
mov
adc
cdq
cmp
pop
fwait
sub
fnstsw
pop
out
cmp
clc
ds
jge
xchg
cmp
sti
xor
sbb
cmp
out
add
xchg
cmp
mov
mov
(bad)
mov
or
xchg
sub
imul
mov
es
adc
cmc
cdq
data16
sahf
pop
jp
fnstcw
jge
mov
pop
inc
fcomp
icebp
(bad)
jmp
leave
jl
fidivr
jg
push
or
xchg
inc
jns
test
and
call
das
mov
xor
and
mov
mov
sub
neg
xor
iret
in
addr16
cs
test
push
mov
es
nop
out
cmps
js
push
scas
dec
mov
daa
fld
scas
das
xchg
in
jae
push
add
xor
sub
jae
adc
cmp
cmp
sub
imul
fdiv
push
js
sub
pop
gs
pop
loopne
xchg
arpl
sub
js
outs
stc
pop
fs
in
sbb
xchg
scas
mov
pusha
jp
fcomp
sub
mov
xchg
mov
sti
sbb
jne
ds
jge
and
mov
xor
fs
in
test
cwde
mov
cmc
jp
push
sub
pop
test
jns
test
mov
pop
jecxz
mov
jmp
and
dec
ss
xchg
push
mov
jmp
xor
add
stc
(bad)
int3
sar
ret
jge
and
sub
push
(bad)
jmp
jae
(bad)
inc
xchg
leave
ret
sbb
inc
in
js
arpl
nop
add
mov
pop
mov
cs
pop
sbb
or
sti
in
sbb
xor
lods
call
js
popa
inc
test
pop
adc
scas
gs
or
mov
dec
sub
inc
and
adc
lock
ja
pop
outs
and
retf
retf
adc
push
stos
pop
sahf
jle
mov
mov
inc
jmp
dec
pop
push
mov
adc
xchg
or
ret
aaa
mov
neg
push
loope
inc
shl
dec
mov
xchg
scas
jecxz
mov
sti
xchg
push
push
and
and
(bad)
jnp
and
mov
fidivr
dec
out
jne
pop
aaa
xor
loopne
push
cmp
pop
pop
rcl
pop
lea
or
leave
enter
push
mov
mov
mov
jle
in
movs
dec
xchg
addr16
in
fwait
and
pusha
fsubr
scas
repnz
inc
arpl
lods
fstp
hlt
push
sub
mov
cmp
or
test
(bad)
mov
jno
pop
popf
outs
idiv
sbb
std
or
div
test
fisttp
das
xchg
ins
std
mov
fst
not
lock
pusha
xchg
hlt
inc
repz
leave
stos
movs
sub
mov
jno
add
xchg
aad
icebp
mov
stos
test
lahf
or
gs
pop
ss
mov
cli
hlt
ss
loopne
aas
lea
dec
jle
or
pop
mov
jb
push
mov
sbb
cmp
(bad)
or
jo
enter
call
gs
test
(bad)
adc
sbb
mov
sbb
cmp
enter
mov
push
aas
push
mov
test
es
dec
push
jns
sub
mov
inc
mov
ret
dec
add
fdiv
sbb
dec
mov
retf
add
inc
repnz
cld
pushf
and
or
neg
(bad)
in
and
outs
jmp
and
fwait
adc
sub
mov
iret
fidivr
imul
sbb
jmp
aas
jge
in
adc
cmp
xchg
dec
jmp
xlat
inc
adc
lock
jo
out
hlt
jne
nop
outs
ins
and
cmp
or
imul
rcr
aam
and
(bad)
shl
scas
jle
push
dec
dec
lock
std
cs
dec
jo
fidiv
push
sbb
test
jnp
popf
fisub
sbb
jle
ins
sahf
pop
and
and
cmps
and
xchg
je
adc
mov
sbb
in
inc
leave
mov
cmc
rcl
jno
or
nop
in
jbe
fst
adc
jb
push
lods
cmp
pop
stos
stos
mov
aam
adc
add
movs
and
popa
dec
ds
not
fstp
lahf
push
dec
dec
or
es
cmp
mov
ins
cld
push
pushf
(bad)
std
mov
jmp
ficom
xchg
ltr
shr
imul
jl
cmc
sub
jmp
cmps
dec
lods
in
shr
(bad)
fldcw
ret
mov
pop
fld
pop
sbb
push
push
sbb
stc
or
lods
xchg
lock
stos
jle
cmps
clc
lods
hlt
test
shr
and
push
sbb
add
data16
cmp
fucom
cdq
pop
aas
in
loopne
(bad)
les
and
aas
mov
fild
and
inc
mov
cs
xchg
or
push
int
add
in
les
push
lods
mov
loopne
dec
out
push
mov
(bad)
lods
sub
mov
bound
or
sub
sbb
call
in
imul
add
mov
call
cli
loop
test
and
sub
rcl
outs
mov
fistp
int
ins
das
arpl
popa
xchg
and
(bad)
jg
mov
call
daa
mov
and
or
inc
icebp
in
ja
mov
out
mov
int
cmps
lods
lods
jecxz
clc
imul
dec
sbb
sbb
outs
dec
push
pop
push
cwde
inc
fnstcw
in
jle
sub
mov
imul
sub
ins
or
jmp
mov
cwde
mov
push
fld
fldz
add
cmp
adc
pop
test
sub
movntq
movs
fcmovne
mov
fnstcw
fnsave
(bad)
cs
sbb
xor
or
pusha
popf
or
call
push
clc
das
(bad)
neg
pop
dec
or
cmp
sbb
dec
jnp
jne
or
jle
scas
push
dec
data16
mov
loop
jmp
pop
jle
iret
mov
jae
sbb
jns
xor
std
push
pushf
jnp
aad
cmp
cmp
pop
pushf
call
(bad)
sbb
dec
mov
std
pop
or
enter
inc
sbb
(bad)
sub
das
ss
jmp
xchg
xchg
ins
jne
dec
mov
jmp
shr
ins
mov
dec
addr16
mov
mov
xor
ja
cmps
mov
pop
stos
popa
out
iret
dec
jb
cmp
shr
sbb
das
ror
xor
sbb
xchg
aad
jl
xor
retf
aad
mov
shr
ins
jmp
test
hlt
bnd
daa
lea
xchg
ds
popa
xchg
cmp
imul
lods
out
mov
int
xor
inc
popa
cld
shr
enter
or
mov
(bad)
gs
pop
aas
dec
add
push
mov
push
je
sbb
jnp
test
ret
mov
loop
pop
mov
xor
pop
scas
iret
add
fdivr
inc
sar
daa
shr
cmc
jne
mov
stc
out
jecxz
sub
sti
in
push
out
or
icebp
mov
das
loope
xor
pop
ror
daa
enter
inc
aad
mov
dec
gs
mov
gs
pop
sub
push
mov
pop
jns
dec
inc
out
mov
jns
dec
fistp
enter
jns
fcom
cmc
in
mov
aam
push
push
jmp
leave
movs
fmul
jns
inc
mov
pop
icebp
push
pop
dec
mov
jbe
mov
xor
inc
dec
scas
cmp
imul
cmp
movs
ins
or
das
(bad)
in
cmps
sbb
push
mov
cmp
arpl
push
cmc
scas
mov
xchg
imul
jecxz
shr
pop
leave
stos
lods
fistp
cmp
jle
cmp
mov
dec
dec
daa
retf
sub
sbb
scas
inc
psubusw
dec
pop
inc
xchg
push
sti
dec
or
imul
lds
xor
inc
xchg
idiv
mov
mov
dec
mov
sti
mov
lea
lods
popf
fadd
sub
jo
push
jo
push
inc
test
jbe
ja
das
jmp
add
fcomp
or
xchg
mov
stos
(bad)
jns
cmp
pop
fiadd
int3
test
jp
dec
sub
push
outs
fs
repz
cmp
mov
ror
cmc
test
push
cmp
or
or
fimul
outs
(bad)
fisttp
enter
jl
inc
icebp
dec
cmp
or
imul
test
aad
sbb
push
pushf
pop
enter
adc
retf
fdivr
arpl
sbb
mov
sub
or
or
pop
in
sbb
mov
in
jecxz
mov
xlat
mov
xor
xor
cmps
dec
mov
cmp
fwait
mov
in
dec
mov
sub
xor
xor
mov
jmp
jge
mov
frstor
sub
xor
ret
sbb
push
rcr
dec
out
movs
mov
(bad)
adc
test
neg
cmp
adc
sub
fstp
aad
cmp
out
mov
or
lahf
neg
dec
pop
test
add
mov
jl
js
call
arpl
mov
mov
pop
add
mov
outs
cmp
das
enter
fmul
fsubrp
cmps
enter
fsub
jns
push
out
lea
ins
aaa
sub
outs
mov
fsub
test
fsubr
mov
pop
xchg
repz
test
aaa
fisub
cld
stc
add
in
int
movs
leave
pop
cmp
ret
mov
ins
dec
sub
addr16
sbb
sbb
xchg
ja
rcr
scas
leave
inc
lods
xor
sbb
pop
sar
xor
xchg
mov
add
add
bound
mov
mov
sub
enter
xor
mov
fdiv
std
popa
or
xchg
pop
dec
cld
pop
or
call
neg
or
add
imul
cwde
mov
gs
out
aam
mov
sub
data16
sub
jp
aad
rcl
fsub
jb
outs
mov
fild
in
aaa
std
jmp
shl
lods
iret
push
in
inc
add
mov
lock
rol
cmp
add
dec
push
(bad)
in
in
enter
(bad)
cmp
jne
mov
movs
pop
mov
iret
sbb
adc
std
mov
dec
and
mov
jge
rcr
stos
out
cmp
jge
stos
cmps
(bad)
mov
add
out
call
jbe
fwait
aad
call
sti
lds
xor
and
scas
cmp
outs
(bad)
fnstsw
lods
cmps
out
mov
or
xor
add
mov
frstor
rcr
popf
out
cmp
pop
dec
inc
jno
and
mov
loope
push
push
jo
test
fidivr
leave
add
mov
jnp
(bad)
and
adc
xor
inc
inc
(bad)
in
mov
pop
aaa
in
jns
and
dec
adc
outs
sub
pop
dec
sub
test
xchg
fist
pop
sub
imul
inc
sbb
xor
rol
sub
mov
sub
cdq
aad
cmp
lock
cmc
stc
add
push
mov
ret
sub
adc
in
xchg
mov
xor
sbb
jg
push
dec
mov
and
mov
cdq
cmp
loopne
inc
xlat
leave
inc
xchg
dec
sbb
cmp
jns
xor
shl
in
enter
pop
call
mov
xor
mov
pop
cld
lock
sbb
out
cmp
imul
push
(bad)
inc
jl
xor
mov
or
scas
fimul
aas
lea
call
jl
cdq
or
cmp
outs
mov
sar
std
jmp
jmp
inc
inc
and
dec
and
nop
imul
push
das
int3
mov
inc
xor
mul
jae
out
mov
ficom
pop
popa
adc
pusha
scas
add
dec
mov
lock
outs
mov
(bad)
add
mov
mov
push
neg
jp
mov
jnp
lods
mov
pop
push
gs
xrelease
ss
jno
in
pop
ins
out
dec
mov
jle
cmp
cmp
sbb
adc
adc
ins
xchg
jp
addr16
dec
pop
push
lods
inc
mov
mov
nop
iret
add
adc
out
cmp
push
push
or
pusha
sub
mov
test
cwde
xchg
add
push
test
fsubr
jno
lds
imul
lods
iret
mov
in
pop
in
mov
pop
jg
cmp
sub
test
mov
imul
and
adc
pop
mov
cmp
lock
aaa
jl
dec
pop
out
mov
fldcw
sbb
outs
cmp
andps
iret
push
cmp
or
fistp
jae
out
and
dec
pop
push
repz
push
pusha
cmp
repnz
and
and
fisttp
shl
and
popa
in
imul
dec
int
popf
mov
cmp
xor
rcr
cmp
inc
sbb
push
cmp
xchg
and
push
xor
scas
pop
in
xchg
xor
mov
stos
arpl
dec
push
mul
lea
fnsave
add
aad
sub
mov
out
cmp
jne
cdq
mov
mov
add
or
aas
fsubr
mov
sub
test
jge
outs
jle
sub
cwde
pop
pusha
int3
jno
mov
xchg
lds
lods
test
dec
scas
frstor
rcr
jmp
pop
pushf
xchg
cmp
stos
xchg
int3
pop
xor
sub
outs
mov
jl
dec
test
push
mov
jno
mov
sub
cld
xor
mov
pop
mov
out
fmul
push
xor
and
add
les
int
mov
cmps
test
rcr
inc
xor
sub
aas
sub
fcomp
add
leave
or
push
in
sahf
lahf
imul
cmp
int3
psrlw
pop
bound
ins
sub
inc
adc
outs
adc
add
push
mov
push
lods
cmp
ja
cmp
xor
ret
clc
mov
jbe
out
mov
pop
jno
xor
popf
imul
movs
push
loopne
mov
pop
je
leave
push
pop
push
jno
sub
popa
jge
mov
(bad)
in
loope
dec
outs
cmp
sub
jno
out
sub
pop
test
js
sub
leave
and
sar
add
fsubr
adc
and
xor
(bad)
xchg
pop
ins
je
jg
out
mov
pop
pop
(bad)
stc
pop
lods
out
mov
sub
xchg
xchg
outs
add
ret
stc
fadd
and
sub
mov
pusha
cs
fsub
or
jge
cmp
stos
loope
inc
add
icebp
sub
mov
fdivr
leave
push
not
arpl
push
pop
mov
push
jecxz
push
dec
out
dec
(bad)
dec
test
xchg
cld
push
add
fwait
daa
mov
jg
aaa
aad
lahf
jmp
lock
push
jno
push
push
std
call
bnd
sub
sbb
test
stc
add
imul
push
movs
cmp
test
shl
pusha
sbb
sbb
call
std
pop
inc
sub
and
mov
fcmovnu
pop
mov
pop
test
and
lods
jecxz
pop
dec
shr
xor
stos
dec
sub
cmp
jne
ds
cmps
ret
cmp
jne
out
add
test
mov
and
mov
and
sub
sbb
imul
add
call
sahf
fadd
icebp
fcomi
imul
into
les
or
addr16
repnz
sub
popa
cmp
mov
mov
sub
sbb
or
in
ja
jns
in
adc
jmp
mov
das
sbb
in
fdiv
xchg
pusha
call
mov
aas
in
in
jo
adc
std
mov
cdq
imul
popf
ins
test
or
scas
lods
stc
pop
ins
test
iret
shr
enter
fstp
jno
sub
xchg
(bad)
pop
je
and
push
rcr
add
cmp
adc
ficomp
in
ins
add
out
stos
(bad)
rcr
loopne
pop
dec
gs
mov
pop
pop
pushf
aaa
and
push
fsub
(bad)
jmp
retf
cmp
fcmovbe
ficom
jmp
in
mov
retf
add
inc
sbb
call
sbb
jmp
clc
sub
leave
or
sub
fnstenv
retf
fwait
int
push
mov
rcr
sub
xchg
and
imul
stos
stos
les
push
push
out
popa
fucomp
aas
rol
not
addr16
fs
ins
jns
aam
or
mov
std
sub
int
jne
es
sub
ret
mov
mov
add
loopne
rcl
dec
push
dec
es
stos
dec
xchg
cmc
xor
xor
cdq
mov
call
lock
cmp
inc
add
fld
add
cmp
inc
add
jge
out
cmp
cwde
(bad)
(bad)
idiv
pop
or
jnp
xor
xor
and
xchg
ret
frstor
xor
in
mov
pop
push
cdq
ss
mov
fistp
cmp
adc
hlt
loop
clc
push
test
ins
mov
adc
lods
pop
faddp
es
push
stos
movs
aad
add
jns
and
xchg
rcr
inc
test
repnz
mov
lods
push
pop
fild
int
ds
xchg
imul
push
fisubr
int
mov
popa
ret
push
pusha
pop
mov
sbb
pop
popa
aam
adc
outs
mov
shr
dec
mov
movs
ins
mov
std
shl
cmp
dec
dec
or
mov
loopne
clc
lods
add
std
sar
jle
cdq
xlat
sub
cmps
cld
lods
inc
cmp
cmp
movs
jmp
cmp
add
(bad)
pop
in
push
cmp
lods
pop
pop
data16
adc
das
fcom
xor
cmp
and
xchg
ret
pop
push
and
sub
dec
mov
pop
cmp
(bad)
sar
fsubr
sbb
leave
and
xchg
add
pop
fdiv
pop
popf
aam
jo
sub
es
cwde
push
fist
js
add
pop
push
pushf
mov
pop
test
out
dec
fs
push
jmp
ds
mov
or
test
cwde
sub
sub
mov
mov
pop
mov
test
pushf
test
aad
inc
mov
and
jmp
mov
mov
sub
lock
in
int3
les
inc
xor
movs
call
mov
pop
add
in
xor
retf
dec
or
dec
or
in
fsubr
es
cmp
or
(bad)
jmp
dec
add
imul
lock
lea
mov
push
jge
add
clc
inc
int3
inc
adc
icebp
inc
lock
out
movs
mov
cmps
pop
test
jb
mov
pop
call
les
out
and
sub
mov
imul
add
push
ret
jbe
clc
fild
outs
je
push
push
and
sbb
out
push
in
jbe
ffree
add
dec
xchg
mov
mov
mov
adc
test
xor
stos
pusha
mov
pop
ret
inc
adc
fidivr
popf
stos
lahf
or
retf
loop
jg
ins
(bad)
fs
ins
sbb
sti
cmps
aam
nop
outs
and
add
cmp
cwde
jbe
sbb
(bad)
mov
repnz
mov
pop
mov
je
sbb
int3
mov
in
sub
jmp
pop
cmp
or
lods
or
int
cmc
adc
sub
sbb
std
cmp
call
test
xchg
push
clc
cdq
jns
cmp
sti
mov
rcl
jmp
outs
dec
je
push
loope
jne
popa
ins
out
in
repz
jl
in
pop
mov
jg
popa
fdivr
(bad)
daa
xor
lods
sub
fdiv
rcr
pop
mov
cmp
xor
sub
stos
ret
(bad)
bound
imul
hlt
pop
sbb
cli
out
jmp
in
jmp
sub
pop
cwde
fsub
jmp
fsub
dec
pavgw
scas
movs
(bad)
sti
aas
loop
in
sbb
call
push
mov
fistp
ds
ss
cmp
fistp
jmp
add
lods
pushf
ja
sub
xchg
add
push
int
mov
cmp
nop
aam
sbb
pop
cmp
shl
scas
icebp
lahf
xchg
and
push
or
cmps
lahf
loope
(bad)
rcr
mov
add
dec
in
cmc
fisttp
cmp
cmp
jo
mov
test
js
repnz
mov
popa
jl
push
fcomip
data16
add
sub
or
jnp
hlt
sub
xchg
mov
mov
pop
(bad)
xchg
int3
cmp
(bad)
mov
repnz
xchg
sti
retf
mov
sub
call
push
or
jmp
test
jae
lahf
out
add
nop
xor
push
dec
mov
outs
arpl
int
test
xchg
jg
adc
aam
mov
arpl
adc
or
jnp
ror
clc
or
fs
outs
lahf
push
sbb
pop
add
push
add
fmul
pop
xchg
inc
dec
cmp
or
movs
cli
into
and
push
mov
hlt
jl
inc
ret
scas
sub
aaa
rep
adc
fisub
fsubr
das
popf
cdq
jns
rol
jae
fwait
loope
in
xchg
cmps
cmps
push
cli
mov
jle
arpl
stc
std
into
out
test
ds
fsub
std
clc
mov
enter
fs
retf
stos
jge
ins
sbb
je
in
mov
mov
mov
or
js
push
pop
sbb
adc
fdivr
cs
xlat
aad
scas
push
fisubr
fdivr
in
in
int3
loopne
pop
jmp
scas
mov
pushf
or
cmp
mov
aas
mov
test
test
in
add
fsub
jmp
xchg
pop
adc
push
jg
dec
push
mov
dec
std
ss
dec
aaa
scas
lods
imul
fsub
xchg
sub
hlt
into
push
mov
repz
mov
(bad)
jl
shl
aam
push
das
adc
(bad)
test
mov
inc
xor
mov
add
outs
mov
dec
xchg
repz
into
outs
cwde
daa
mov
icebp
pop
adc
jl
sub
cmp
and
aad
stos
mov
popa
(bad)
in
outs
cli
fidiv
and
lahf
mov
or
sar
mov
(bad)
add
mov
in
sub
inc
lods
pop
sub
retf
mov
dec
cmp
enter
xchg
sub
and
adc
cmp
cmc
mov
cmps
imul
das
xor
lods
jmp
aas
jl
pop
xor
dec
push
dec
lods
jp
mov
cli
cmp
in
mov
stc
aad
lods
shr
mov
pusha
cld
cli
jmp
(bad)
das
sbb
pop
pop
mov
sti
pop
jp
xor
pop
in
mov
test
test
ficomp
or
xchg
nop
in
call
js
inc
imul
push
fstp
inc
cwde
inc
lahf
pop
jp
xor
xor
popf
jmp
inc
repz
push
dec
loop
aad
sub
and
push
push
or
inc
int3
in
cmp
sbb
ds
popf
push
adc
out
sub
xchg
adc
add
clc
inc
fldcw
dec
sub
ds
mov
adc
test
or
pop
and
add
shr
cmc
jmp
push
xchg
ja
xor
cmp
jne
and
xor
(bad)
ret
mov
xchg
jmp
test
xor
adc
fnsave
cmp
ins
sbb
cli
add
in
hlt
ins
cld
add
and
movs
pop
sbb
cdq
fistp
test
ret
movs
(bad)
cmps
pop
pop
(bad)
pop
pop
nop
push
push
dec
mov
fdivr
sub
jl
neg
enter
enter
cmp
popa
pushf
xor
(bad)
sbb
pushf
popf
jne
lea
ja
aaa
mov
int3
bound
mov
jecxz
xor
into
pusha
or
test
xlat
push
loopne
inc
ret
pop
pusha
push
jmp
cmp
inc
jecxz
jns
fsub
sub
into
mul
cwde
das
sti
(bad)
enter
stc
and
cmc
sbb
pop
popa
pop
add
fldcw
icebp
mov
xor
add
bound
mov
int3
cs
mov
mov
movs
add
shl
push
dec
addr16
sub
fistp
ins
dec
and
dec
pop
retf
ret
in
inc
or
out
comiss
mov
mov
bound
or
int3
stos
loop
cld
imul
pop
in
lods
call
ret
mov
inc
ins
push
jmp
adc
lock
test
(bad)
popa
mov
adc
rcl
pop
push
(bad)
dec
cwde
sub
mov
mov
sub
mov
imul
sub
sbb
inc
push
or
mov
jg
icebp
mov
aam
out
adc
enter
sbb
ss
outs
test
sbb
pop
mov
inc
mov
mov
popf
lods
mov
mov
test
cdq
jl
add
and
cmp
adc
leave
push
jns
pop
dec
xchg
mov
xor
sbb
pushf
scas
stc
out
imul
fldenv
sbb
loopne
ror
mov
jns
jge
test
xor
mov
out
cdq
mov
ds
cmc
cmp
jns
pop
movs
aas
js
fiadd
fnstenv
fwait
jle
dec
adc
pop
mov
(bad)
add
pop
bnd
movs
lods
ss
cmc
pop
aaa
cs
in
jmp
pop
jns
fwait
lahf
(bad)
cmp
dec
pop
add
popa
out
mov
stos
in
stos
lods
loop
not
push
repz
imul
das
lahf
aaa
es
pop
or
push
sub
shr
dec
fldenv
and
out
push
test
jl
test
fcmove
sub
pop
jne
xchg
inc
mov
sbb
pop
pop
push
sub
pop
sub
jno
std
cmp
xchg
aas
push
push
sub
fisubr
int
and
lock
imul
xor
pop
inc
adc
hlt
fst
pop
dec
popf
fdivr
fdivr
retf
mov
xor
fldcw
das
sub
fld
jae
scas
cmp
scas
imul
ja
out
jnp
outs
leave
inc
call
clc
mov
arpl
sar
pop
mov
in
dec
pop
leave
pop
or
cmp
add
mov
sbb
mov
cmp
leave
or
ins
call
fsubr
mov
scas
mov
shr
test
idiv
cdq
mov
jge
out
mov
cdq
ss
jbe
cmp
cmp
bound
rol
bound
scas
cmp
mov
jp
repz
sub
in
ficomp
ins
xor
rol
arpl
cmp
std
lods
xchg
mov
leave
lods
js
scas
fld
fs
fstp
outs
pop
outs
cli
or
mov
aas
pushf
lods
dec
xor
js
das
hlt
movs
sbb
and
dec
sub
mov
inc
pop
out
js
in
stc
cdq
sbb
hlt
test
out
cli
pop
scas
cmc
sahf
cdq
xor
cmps
add
cmp
cmps
jp
fiadd
jge
out
mov
sbb
dec
ret
dec
scas
sti
or
repz
cdq
cmp
mov
popa
jo
mov
dec
fld
bound
cli
in
ss
cld
loopne
jmp
daa
clc
cld
enter
inc
repnz
jge
imul
xor
cs
scas
fist
js
sub
push
sbb
add
dec
cs
clc
sub
mov
js
outs
sti
and
outs
fistp
lods
jne
std
outs
jp
and
cwde
adc
hlt
mov
fist
push
pushf
mov
out
xchg
pop
xor
mov
push
push
xchg
sahf
int
mov
out
ret
xchg
int3
jno
push
out
cmp
fdivr
sub
mov
jbe
data16
imul
cdq
popa
jne
cmp
scas
cdq
cmp
and
push
enter
sub
lods
pop
cmp
inc
sub
lock
imul
inc
jge
clc
jl
retf
cdq
sbb
das
mov
sbb
pop
shr
jp
scas
(bad)
push
sbb
jno
popa
cs
test
stc
xor
sub
mov
ja
xor
shl
test
cli
or
mov
out
dec
mov
mov
inc
pusha
and
iret
test
pop
jno
cmp
das
xchg
arpl
jo
popf
aaa
movs
inc
inc
icebp
or
cld
push
idiv
outs
popf
cmp
rcr
jge
cmp
push
neg
push
or
lds
cmps
cli
pop
push
fist
adc
xchg
mov
outs
mov
fist
ins
pop
jne
mov
fs
test
cmp
pop
cmp
adc
in
in
into
fwait
sbb
adc
pop
sbb
jnp
ins
jecxz
sbb
xor
cdq
sub
xchg
pop
xor
cdq
inc
mov
je
retf
add
sbb
cmp
lods
cli
into
pop
or
mov
cmp
sub
test
cmp
ja
outs
cmp
das
shl
pusha
sbb
leave
mov
add
jge
call
cwde
pop
or
push
adc
dec
stc
pop
mov
push
cmp
xchg
mov
mov
out
adc
popf
stc
mov
arpl
inc
and
add
fdivrp
fwait
sbb
pusha
inc
cs
sub
popf
sbb
pop
or
mov
mov
sbb
out
fcom
cmps
hlt
outs
pop
or
jno
jge
mov
ret
push
mov
imul
fcomp
sbb
mov
into
nop
sbb
in
inc
sub
mov
test
(bad)
clc
inc
add
fist
and
jbe
outs
cmp
add
shl
sub
scas
cdq
add
jno
xchg
outs
jp
scas
add
inc
or
mov
pop
dec
mov
clc
test
mov
dec
loope
cmp
lods
cmc
xchg
fnstcw
and
outs
stos
test
sub
xlat
sub
cdq
fist
pop
ins
fldcw
jp
lods
leave
cmps
sbb
mov
mov
pop
cmp
ins
clc
movs
mov
jge
adc
sub
push
movs
out
mov
out
sbb
mov
mov
jmp
push
or
adc
sbb
xchg
imul
ins
pusha
outs
sbb
call
fld
sub
(bad)
cmp
mov
cdq
cmp
dec
(bad)
add
loope
cdq
push
adc
and
fisttp
jbe
scas
jp
lods
lock
cmps
out
retf
popf
fiadd
xor
retf
xchg
pop
add
gs
int
mov
sbb
xor
jns
cli
sbb
adc
imul
mov
sbb
icebp
gs
rcl
in
out
jnp
out
retf
cwde
call
fsubp
lods
stc
scas
pop
xor
in
cmp
test
dec
int
cmp
sub
stos
fnstcw
sbb
pop
out
cli
scas
cdq
cmp
cmp
sub
ret
inc
in
ins
js
ins
into
mov
ins
dec
out
cli
xchg
das
int
call
sbb
outs
ret
call
loope
pop
mov
and
add
(bad)
mov
jae
cmp
pusha
mov
movs
mov
jne
and
lods
and
mov
cwde
icebp
mov
imul
inc
dec
pop
movs
in
mov
push
sbb
dec
cli
js
int3
xchg
adc
push
inc
lock
cs
xchg
lods
(bad)
imul
loop
pop
xor
clc
ins
les
in
cli
fs
fist
xor
fimul
jbe
shr
repnz
fist
js
(bad)
scas
jnp
out
ret
pop
add
or
jge
add
push
enter
in
scas
lods
mov
sbb
inc
out
mov
pop
pop
mov
sti
xor
sub
ret
in
repnz
dec
push
ins
clc
jo
leave
test
sbb
and
cld
adc
in
jnp
lods
cli
lods
fnstcw
movs
sub
fs
lods
fistp
aam
push
das
(bad)
mov
xor
in
jno
sti
ds
jmp
mov
pop
cmp
pop
bound
mov
ror
jbe
je
adc
fs
jmp
in
cmp
mov
pop
sbb
jle
mov
ja
out
cmp
das
cmp
jl
scas
jnp
sub
cdq
cdq
jo
inc
jb
dec
fistp
ins
mov
sub
(bad)
sub
pop
jecxz
fcmovnu
sbb
cmp
sahf
pop
push
xor
jbe
das
cmp
cwde
and
jle
mov
pushf
sbb
sub
ins
pop
sub
mov
fs
outs
(bad)
pop
cmp
int
jne
sti
cmc
data16
sub
add
mov
nop
cmps
fild
jp
outs
jp
outs
ret
pushf
fidivr
mov
inc
aad
js
ins
cmc
dec
cmp
lods
rol
in
imul
dec
lods
cs
jnp
in
mov
cld
lods
adc
stos
inc
cmc
into
js
ins
stc
test
setl
ins
push
outs
cmp
lea
fisttp
iret
sbb
cmp
leave
aas
sbb
in
popa
outs
jnp
lods
jmp
adc
in
xchg
and
mov
mov
mov
push
push
adc
into
sub
adc
mov
mov
jno
dec
mov
sbb
cmp
rcr
sar
sti
aam
add
lock
and
cli
mov
ja
das
cmp
mov
scas
fdivr
mov
dec
mov
stos
leave
add
cld
jo
scas
cmp
call
scas
cmp
mov
xor
ins
movs
scas
sub
pop
js
xchg
dec
es
jb
dec
(bad)
(bad)
pop
add
bnd
cmps
shl
sbb
push
mov
fistp
add
lods
ret
cli
cmp
test
call
xor
add
xor
pop
cmps
sbb
dec
out
push
int
clc
cmps
loope
movs
fs
nop
pop
add
(bad)
into
ret
cmps
fiadd
in
dec
inc
ins
fimul
ins
sti
cmps
sub
jl
or
xor
sbb
scas
retf
or
cwde
ins
out
adc
sub
arpl
test
bound
jge
xchg
leave
sub
pop
dec
cmps
pop
xchg
sub
test
jecxz
adc
scas
mov
xor
das
out
pop
or
mov
add
mov
ret
cmp
cmp
cmps
cdq
or
scas
jp
outs
push
xchg
fnstcw
mov
lds
sub
stos
sbb
dec
pop
pusha
add
retf
xchg
xchg
or
ins
movs
scas
mov
sbb
mov
cmp
out
(bad)
xchg
fistp
js
enter
inc
out
ficom
xor
push
sub
jo
leave
mov
loopne
fmul
fs
scas
out
rcr
sbb
std
popa
inc
in
mov
mov
push
test
adc
mul
jae
sub
(bad)
fimul
sub
cmc
pop
mov
call
jnp
xchg
mul
arpl
cli
xchg
jl
sbb
inc
das
mov
adc
xchg
and
cmps
cwde
add
rcl
fild
ds
mov
xchg
and
pusha
mov
lods
cmp
add
sub
dec
sub
cs
sbb
inc
sar
sbb
xor
popa
jmp
adc
mov
clc
pushf
ja
outs
cmp
retf
cli
xchg
mov
cwde
jno
test
sbb
mov
ret
push
rol
jns
in
xchg
nop
stos
lds
gs
cli
jns
cli
xchg
(bad)
sbb
dec
adc
int3
mov
add
and
add
pop
xor
pop
test
test
push
mov
cmp
sub
gs
aaa
int3
mov
scas
cmp
cmc
push
cdq
cmp
mov
shr
xor
pop
mov
sub
mov
dec
ins
in
cmp
enter
nop
fst
xchg
in
cmp
sbb
lea
test
mov
pop
sbb
out
cmp
mov
cdq
pop
or
or
sub
nop
and
test
sets
popf
neg
pop
adc
call
inc
mov
mov
ja
pop
repnz
or
sbb
fs
fldcw
xchg
sbb
inc
in
(bad)
hlt
leave
mul
sub
inc
inc
add
outs
test
xor
push
lods
aam
inc
ins
daa
shl
jae
xor
and
jno
loope
pop
fsubr
xor
(bad)
imul
push
mov
cld
loope
inc
and
cli
aas
pop
in
gs
xchg
xchg
adc
rcl
stc
inc
int3
xchg
xor
je
push
mov
out
jne
out
push
aaa
sbb
test
xchg
ror
mov
leave
fimul
movs
or
imul
sbb
lods
dec
pop
movs
jae
and
adc
aad
dec
push
in
mov
dec
cmp
nop
sub
ins
dec
shr
sub
lods
ins
pop
xor
gs
adc
fsubr
sub
loopne
and
mov
push
cmp
sub
outs
inc
mulps
(bad)
jp
ficomp
xor
xor
jo
fmul
cli
js
jne
jns
sbb
pop
adc
pop
dec
lods
sti
mov
shr
stos
mov
out
cmps
jns
and
mov
jbe
and
sub
sub
movs
movs
push
push
dec
fwait
pop
mov
in
fisubr
and
add
cli
fsub
imul
shld
jmp
stos
jle
mov
or
sbb
(bad)
adc
xlat
in
rol
shl
mov
retf
cld
push
dec
into
and
mov
cmp
mov
mov
cmp
push
sub
jl
popf
imul
mov
sbb
fistp
loopne
ror
in
ja
xor
movs
into
stc
pusha
push
fs
push
inc
sbb
jp
mov
fldenv
or
adc
or
dec
or
mov
or
pop
stos
fldcw
int
and
inc
sbb
aas
movs
dec
mov
int3
out
clc
dec
adc
out
les
mov
add
mov
dec
dec
inc
mov
mov
ins
xlat
ret
add
adc
in
cmp
push
adc
shr
sar
cmps
and
fisub
fcmovu
xchg
adc
loope
mov
cmp
fs
cmp
fldcw
mov
pop
inc
(bad)
push
nop
jnp
test
cmps
lock
iret
popa
ja
lea
inc
cmps
mov
dec
inc
sahf
sbb
popa
test
outs
inc
inc
or
cmp
jo
pop
jge
mov
or
jb
scas
movs
retf
les
and
push
adc
pop
(bad)
fdiv
cld
mov
das
push
push
xchg
repz
pop
mov
sub
(bad)
push
cmp
(bad)
in
or
in
sub
push
push
and
mov
or
xor
cmp
jge
fcom
adc
aad
int
in
fidiv
outs
nop
int3
adc
retf
cld
cmp
mov
mov
mov
dec
arpl
mov
nop
pop
in
cmps
in
pop
xor
inc
sbb
or
mov
fcomp
test
ins
aaa
mov
sub
xor
popw
and
mov
cmp
cs
nop
mov
nop
sbb
push
lods
rcl
mov
xchg
jne
(bad)
xor
xor
jp
(bad)
fldcw
mov
enter
mov
(bad)
cmps
sbb
test
rol
xchg
pop
ror
stos
sbb
in
jo
imul
jo
lds
and
fstp
cmp
jo
pop
adc
mov
jno
int
and
mov
(bad)
scas
inc
fsub
dec
loop
test
xor
jnp
xor
jmp
mov
jl
fs
mov
dec
mov
ins
or
sbb
jmp
out
fistp
ds
and
xor
mov
loop
sbb
mov
push
pop
cmp
and
or
retf
and
or
xchg
mov
jbe
stc
and
sub
es
pop
in
sbb
aas
stc
stos
mov
lock
or
fsubr
push
fs
mov
and
sbb
mov
inc
dec
sbb
xchg
and
pushf
cmp
int3
cmp
sub
mov
cmp
cld
stos
push
iret
out
sbb
fnstcw
jns
sbb
mov
sbb
jns
pop
mov
push
push
ins
cmp
lods
scas
stos
add
fsub
int3
(bad)
mov
lahf
pusha
in
jl
adc
lods
lahf
pop
cwde
mov
push
add
inc
aam
jge
popa
lea
cmp
xor
in
and
jmp
(bad)
fldcw
arpl
lds
add
xor
popa
push
pop
mov
sub
sbb
cmp
fs
aas
adc
test
inc
ins
in
sbb
std
xor
sub
sub
cmps
pop
fidivr
sbb
ror
lock
in
outs
adc
ret
in
sti
mov
outs
icebp
loop
jmp
(bad)
jns
lods
xchg
fidivr
js
pop
xor
sub
push
jns
ss
sbb
sub
movs
mov
mov
push
imul
or
xlat
frstor
call
gs
sbb
lfs
bound
push
lea
pop
imul
jmp
cwde
jecxz
xor
add
push
pop
pop
mov
js
mov
cmp
cli
mov
in
sbb
(bad)
ror
mov
add
fisttp
hlt
xchg
lahf
arpl
cmp
xchg
das
mov
sub
retf
(bad)
imul
dec
mov
shl
out
inc
dec
cmps
stos
and
cmp
pop
push
idiv
xor
pop
mov
mov
std
add
cmp
inc
push
sar
cld
into
pusha
outs
lock
and
leave
fidivr
inc
jmp
dec
sbb
push
and
mov
in
std
test
xchg
nop
das
push
jecxz
test
popa
push
pop
push
test
push
pop
les
inc
pop
pop
mov
mov
jmp
cmp
test
retf
sub
fldcw
fisubr
daa
rcr
pop
cld
mov
pop
aaa
pushf
jns
sbb
bound
ins
or
cwde
mov
loopne
cwde
pop
gs
dec
add
popf
movs
call
cmps
dec
ja
inc
or
mov
sub
or
cli
lock
jmp
(bad)
or
pop
adc
sbb
aas
inc
pop
push
jbe
shl
sbb
sub
ins
ret
pop
cli
ds
cs
ins
(bad)
in
mov
in
jmp
adc
test
cmp
fdivr
add
adc
mov
imul
sub
movzx
inc
bound
test
test
call
rcr
out
pop
add
imul
scas
aas
stos
mov
in
and
cmp
aad
pop
sub
scas
mov
pusha
and
aaa
enter
dec
adc
clc
fdivr
jp
mov
mov
cmp
loop
js
repnz
and
lds
cmp
jmp
enter
addr16
xor
sub
out
stos
add
xchg
jecxz
add
xchg
pop
outs
sub
cmps
mov
test
cmp
out
stc
mov
jne
test
xchg
retf
jae
push
and
adc
stc
retf
sbb
adc
stos
add
xor
push
ins
js
push
sub
dec
stc
dec
jnp
jne
mov
out
int
test
mov
cld
xor
neg
sub
jno
cmp
ficomp
stos
loope
inc
add
inc
popa
hlt
push
jg
fidivr
add
push
movs
jo
mul
and
mov
xor
int
jmp
dec
dec
or
inc
and
mov
fidivr
mov
push
cs
fdivr
aas
mov
jns
inc
test
dec
inc
sbb
dec
cmp
int
ret
mov
popf
cdq
lods
jl
in
imul
scas
fldenv
push
cmp
loopne
inc
stos
and
inc
call
ror
test
cmp
int3
dec
stos
fcomp
and
pop
push
cmp
add
in
or
inc
(bad)
hlt
jl
push
iret
(bad)
jl
aam
push
adc
bound
out
sbb
cdq
fs
mov
int3
push
mov
(bad)
push
push
add
cmp
lods
sti
lods
jns
adc
dec
mov
mov
or
and
push
test
dec
out
js
lods
outs
dec
test
cmp
fld
and
out
cmp
dec
cmp
and
pop
in
inc
cmp
stos
test
and
mov
xor
mov
push
fimul
pop
cmp
push
dec
inc
int
sub
das
xchg
in
mov
sub
clc
dec
loopne
sbb
and
dec
lea
push
lods
loope
sbb
jge
(bad)
int
fisubr
mov
call
mov
and
or
repnz
mov
and
inc
inc
rol
int3
sbb
(bad)
std
sbb
xor
cs
xor
aam
sub
lods
push
xor
inc
test
in
mov
mov
push
leave
in
cmp
int
and
leave
bound
cli
push
mov
mov
scas
(bad)
loop
jge
jno
mov
pop
add
mov
jg
xlat
int3
das
inc
mov
cwde
sub
scas
cld
dec
and
test
in
cmp
ins
(bad)
mov
sub
or
movs
cwde
and
jne
jecxz
stc
cmp
mov
push
adc
idiv
cmp
sub
xor
js
sub
pop
dec
dec
pop
jl
jb
cdq
aaa
mov
jmp
aaa
inc
pop
push
fisttp
mov
push
movs
or
mov
fild
xchg
es
mov
iret
ins
jns
lods
jmp
adc
adc
cmp
cmc
cmp
push
clc
int
test
and
push
mov
lods
fnstcw
out
xchg
rep
aad
in
in
adc
test
push
dec
cmps
cmp
ins
in
std
ds
mov
sub
in
pop
cmp
pop
dec
ins
push
push
(bad)
aam
loop
sbb
in
dec
icebp
mov
dec
sbb
movs
pop
xor
add
clc
dec
add
mov
pop
push
sub
mov
sub
imul
pop
push
or
scas
jle
jno
(bad)
xchg
gs
out
rcl
shl
mov
push
and
inc
lods
lods
mov
fnstenv
popa
push
dec
sbb
hlt
ins
loop
cdq
lds
sbb
imul
push
ins
lea
cli
sub
cmovno
dec
sbb
(bad)
jmp
dec
sub
or
mov
pop
leave
int3
cmp
dec
clc
mov
shl
mov
lock
sbb
adc
scas
push
pusha
loop
mov
stos
ja
fisttp
aas
and
or
sub
cs
into
mov
test
sbb
ja
ror
int3
std
scas
pop
xor
sub
outs
cmp
dec
rcl
xchg
mov
jle
ins
or
loopne
sbb
sbb
push
dec
pop
cdq
mov
outs
sub
mov
inc
lods
(bad)
ficom
jecxz
clc
sbb
inc
push
popf
dec
fcomp
lods
out
mov
outs
imul
call
jmp
pop
outs
cmp
sub
iret
jnp
ss
add
es
adc
jb
jl
shl
mov
adc
cmp
call
and
push
stos
ins
stc
mov
pop
inc
cdq
ins
sbb
or
mov
pop
and
inc
sbb
sti
mov
push
inc
sub
sub
mov
es
inc
push
dec
retf
ins
(bad)
test
and
int3
(bad)
outs
(bad)
lods
mov
jg
fnsave
lds
dec
inc
stc
ins
sbb
lods
shl
sub
jle
imul
in
in
sbb
cmp
popf
mov
(bad)
ds
mov
jb
in
cmp
lock
inc
mov
cmp
int
mov
and
or
xor
lock
ss
pop
mov
fldcw
(bad)
out
pop
and
addr16
and
imul
adc
pop
js
call
cmp
pop
jp
repnz
sti
mov
inc
sbb
jecxz
into
and
xlat
or
es
in
bound
sbb
or
fist
loopne
popa
sbb
adc
in
xchg
neg
(bad)
dec
dec
or
mov
cwde
sbb
call
mov
mov
ss
xchg
stc
pop
or
(bad)
lods
stc
xor
shl
add
cli
mov
sahf
or
xchg
lea
dec
mul
inc
scas
int
out
repz
jns
retf
pop
in
pop
hlt
int
mov
and
sar
ins
cmp
clc
mov
pop
fwait
dec
push
sub
mov
mov
div
mov
pop
cmp
leave
dec
sbb
and
jo
mov
mov
push
in
dec
aam
dec
out
cwde
and
das
push
cmc
dec
fnstenv
sub
cdq
cmp
cmp
pop
test
cld
mov
push
xchg
mov
push
in
loopne
pop
and
sub
adc
icebp
mov
sub
and
push
cli
(bad)
out
cmp
inc
sbb
cmp
xor
in
jecxz
in
and
arpl
sub
movs
pop
xor
dec
in
cwde
xor
stos
fmul
inc
pop
pop
sub
xor
jne
in
cmc
cmp
xchg
pusha
dec
sbb
in
sub
lods
or
mov
js
ss
rol
add
mov
lods
cmc
mov
dec
push
ins
push
jl
stc
lods
pop
xor
dec
mov
fnstenv
add
out
pop
ins
sbb
in
sti
mov
test
out
clc
pop
test
sub
xchg
in
mov
push
cdq
jmp
jp
xchg
adc
frstor
data16
(bad)
in
int3
or
jp
nop
in
pop
loopne
loop
js
loop
dec
adc
aam
sbb
in
push
out
in
mov
clc
xchg
jns
js
xor
sub
lock
imul
xor
sub
xchg
loopne
pop
and
xorps
jmp
xor
dec
(bad)
mov
and
xor
and
(bad)
inc
mov
jle
mov
icebp
mov
cwde
cmp
sub
mov
inc
stos
sub
ret
scas
xor
in
jge
int3
adc
add
addr16
pop
hlt
mov
and
sub
mov
pop
jp
inc
clc
jge
xchg
cmp
push
mov
mov
mov
(bad)
pop
jle
fcomp
cli
stos
stc
xor
loope
scas
or
cmp
inc
stos
push
cwde
pop
sub
mov
pop
test
cmp
lods
loopne
(bad)
(bad)
sub
sub
jmp
pusha
cmp
aaa
clc
push
mov
adc
mov
clc
das
fdivr
enter
xor
stc
jns
loop
mov
es
push
popf
stc
dec
cdq
(bad)
in
sti
mov
push
sub
dec
call
mov
jle
pop
sub
inc
imul
mov
pop
xor
mov
cmp
push
jno
ror
inc
js
in
mov
fwait
lods
pop
pop
cmp
mov
adc
int3
dec
sbb
dec
test
hlt
mov
pusha
mov
dec
mov
cld
mov
push
pop
dec
(bad)
adc
push
xchg
into
cs
sbb
mov
lea
push
cs
retf
mov
ins
mov
test
loop
sub
iret
std
dec
or
(bad)
stos
jo
pop
sub
and
mov
repnz
inc
std
in
js
ins
mul
push
leave
mov
xlat
ret
fsubr
push
inc
push
inc
int3
std
(bad)
clc
mov
clc
push
aaa
arpl
dec
sbb
xor
adc
add
cmp
je
jl
ins
fld
mov
mov
cwde
repnz
ja
and
sahf
sbb
and
setns
lods
inc
add
stc
inc
lods
xchg
sahf
and
jno
stc
mov
lahf
cdq
xor
pop
or
ret
inc
sbb
dec
stc
pusha
dec
(bad)
mov
cmp
mov
cwde
and
adc
lea
dec
jmp
dec
outs
or
stos
pop
ds
xchg
dec
cmc
or
and
mov
and
push
mov
jb
mul
mov
xchg
iret
fistp
jns
sbb
jb
inc
lods
dec
inc
sub
arpl
cmp
xchg
ret
push
test
cmp
fisttp
ins
cmp
lock
inc
out
clc
(bad)
sub
movs
pop
sub
or
nop
mov
call
fcmove
in
push
push
aaa
and
fcomip
dec
add
sub
sar
fild
mov
ss
ins
loop
fsub
cld
arpl
adc
inc
imul
mov
cmp
mov
dec
test
and
(bad)
loop
mov
jmp
clc
xchg
sub
loopne
push
retf
dec
fsubr
mov
stos
test
ss
cmp
jmp
xchg
push
dec
push
loop
fnstcw
jmp
or
mov
cmp
cmp
dec
js
or
ficom
les
mov
enter
ret
iret
pop
add
dec
rcr
mov
inc
int3
adc
pusha
xchg
retf
cmp
inc
sub
mov
inc
fs
xor
xor
jns
(bad)
and
popf
dec
cmp
ins
(bad)
mov
inc
push
lods
or
mov
xchg
mov
fidiv
inc
jnp
add
pop
jge
cdq
ret
mov
out
push
ja
stos
ins
(bad)
popf
(bad)
xor
leave
add
push
es
jns
addr16
lahf
(bad)
out
mov
xchg
mov
cld
(bad)
xchg
inc
sti
aam
out
in
call
sub
ins
fxch
sub
inc
fcom
fistp
shl
push
sbb
mov
cmc
stc
ja
push
xchg
dec
stc
movs
scas
out
sbb
addr16
dec
push
or
cmp
call
mov
pop
and
stc
push
cmc
sub
adc
stc
stos
pop
and
jecxz
imul
adc
xchg
sbb
xchg
das
add
dec
jl
fstp
js
and
fild
lods
inc
nop
fdiv
es
dec
adc
pop
cmp
add
js
dec
cmp
xchg
dec
mov
pop
idiv
xchg
cmp
ins
stc
iret
ins
clc
icebp
fldenv
jo
and
pop
dec
lods
popf
sbb
adc
push
in
jae
leave
gs
cmps
test
sti
push
in
cmp
pop
pop
or
lods
pop
cmps
xchg
in
js
dec
(bad)
out
dec
add
pop
in
jecxz
mov
jne
ds
cld
jmp
scas
enter
cmps
sar
jns
or
dec
push
(bad)
xor
pop
mov
fdivr
(bad)
pusha
stc
mov
dec
mov
inc
lods
xor
es
inc
push
mov
cmp
dec
inc
sbb
mov
mov
adc
fwait
push
and
and
sub
jnp
rcl
xchg
repz
stc
xchg
cmps
push
in
int
xor
add
rcl
sub
outs
add
hlt
mov
or
jo
dec
ja
inc
mov
cdq
in
add
cdq
inc
jge
mov
lahf
test
jmp
call
xor
jae
xchg
(bad)
mov
mov
movs
adc
push
js
xchg
stc
adc
cwde
iret
jb
sbb
cmp
jbe
mov
out
or
inc
push
call
cdq
popf
int3
fbld
idiv
ror
cs
(bad)
adc
push
add
divps
test
and
shl
stos
ret
lea
cmp
mov
or
sub
dec
xor
pop
imul
jg
fnstenv
mov
lahf
aaa
jle
mov
mov
lahf
push
xor
cld
sar
mov
jne
or
fidiv
cmp
call
pusha
sub
fsub
pop
jnp
loope
sub
lods
cmp
ins
lods
(bad)
fs
mov
xchg
xor
call
cmp
lea
cmp
imul
cmp
rcr
loopne
xor
mov
cwde
(bad)
adc
das
fimul
icebp
js
pop
lock
adc
lods
push
adc
mov
pop
mov
hlt
lds
in
sbb
mov
adc
cmc
call
pop
mov
jp
and
test
cs
jne
ins
stos
jmp
sbb
test
ins
int3
jge
xor
jmp
es
cld
scas
push
gs
std
fnsave
mov
in
pop
ins
jg
push
mov
mov
mov
bound
shr
fsub
imul
js
addr16
cmp
stos
jp
mov
push
pop
cmp
mov
sti
mov
add
mov
jb
loope
mov
jl
and
xor
add
mov
jnp
and
popf
ja
pop
jo
sbb
fisubr
int3
test
jle
rol
jne
in
std
sahf
js
pop
mov
cmp
aam
int3
jle
pop
xchg
jne
xchg
sub
jge
scas
add
xor
retf
or
dec
aas
pop
ss
stc
sub
ror
lods
test
sbb
push
test
jge
movs
push
ds
clc
js
pop
addr16
cld
cmp
xor
mov
fldcw
and
xlat
sub
mov
mov
jl
fsubr
enter
stos
test
test
jecxz
add
mov
ret
rcr
or
jmp
repz
test
scas
into
mov
mov
into
and
repnz
bound
inc
jmp
jb
sbb
and
xor
sub
push
push
inc
js
pop
out
adc
push
dec
pop
jns
xchg
outs
in
ins
mov
xor
das
mov
int
mov
cmps
std
push
fidivr
(bad)
cmp
jmp
sub
jle
and
sbb
outs
pop
clc
pop
dec
mov
in
(bad)
daa
addr16
cs
adc
out
sub
push
dec
stos
sbb
sbb
wbinvd
call
retf
cmp
fdiv
shr
(bad)
fcom
test
pusha
and
mov
mov
fisubr
xor
or
push
aaa
cmp
jnp
mov
jno
int
das
mov
jnp
(bad)
(bad)
sub
sti
js
cli
ret
clc
sub
jmp
mov
dec
sub
int
cmp
test
pop
push
sub
cdq
data16
fimul
sbb
pop
das
cmc
cmp
in
enter
call
sub
jne
scas
in
loopne
jle
mov
jno
sub
jne
and
xor
rcl
dec
cli
lahf
push
stos
inc
push
dec
sub
dec
loopne
sbb
ins
cmp
test
xor
repnz
icebp
ror
jae
sbb
idiv
jne
mov
pop
xchg
rcr
push
pop
xlat
inc
(bad)
cld
cli
outs
add
cs
test
test
mov
fwait
dec
scas
std
sub
cli
sbb
xor
push
fsub
cmp
stc
pop
pusha
pop
mov
or
imul
sbb
mov
fstp
hlt
fld
js
ss
and
mov
mov
mov
xchg
jmp
add
dec
fsub
inc
sbb
stos
add
sub
shl
cmps
js
pushf
lods
add
(bad)
in
sub
cmp
dec
cdq
mov
sub
mov
sub
ror
jns
test
(bad)
cwde
lods
sub
xchg
sub
call
loop
in
out
ja
shr
je
sub
mov
daa
cmp
push
pop
sub
inc
(bad)
mov
fs
(bad)
(bad)
and
das
mov
xor
ds
out
ror
js
dec
hlt
sbb
in
pop
cmp
loopne
mov
bswap
pop
js
inc
int3
out
xchg
les
push
xor
jle
or
call
xchg
add
dec
int
jl
ins
call
mov
std
call
lock
scas
clc
mov
cmp
outs
jg
xor
cmc
fimul
pop
cwde
jge
jl
fidivr
repnz
outs
scas
movs
aas
inc
mov
hlt
mov
sbb
push
das
stos
adc
add
popf
std
hlt
stos
and
bnd
retf
shl
bnd
stc
mov
push
xor
inc
mov
or
pop
push
jns
dec
dec
cmp
lock
pop
sub
ret
enter
pop
int
sbb
xor
(bad)
out
mov
fsub
or
test
or
xchg
pop
stos
xor
mov
js
fwait
out
pop
dec
jo
sahf
imul
in
mov
pop
or
cwde
push
scas
loop
mov
cli
enter
das
pushf
and
dec
xchg
fisttp
bnd
sbb
cld
xchg
outs
dec
in
cmp
std
test
in
pop
jmp
xchg
jo
xchg
and
mov
xchg
xchg
and
push
fmul
push
dec
sub
inc
movs
or
outs
popf
dec
mov
repnz
shr
inc
cmc
mov
jo
and
rcl
in
cmp
cmp
pop
jmp
fimul
les
test
xchg
sub
push
xor
rcr
jne
jl
cmp
mov
sbb
das
mov
mov
jo
aad
cmps
or
lds
maskmovq
test
lea
mov
cmp
mov
inc
cld
or
arpl
ins
jmp
test
movs
fisubr
or
in
stos
aam
call
sbb
pushf
push
sbb
sbb
dec
cmp
and
jno
mov
lock
outs
stos
push
ins
jmp
mov
mov
aas
push
pop
fcomp
jbe
push
pop
inc
xlat
inc
lods
sbb
xor
retf
sbb
ins
int3
repnz
jns
mov
mov
les
dec
inc
mov
inc
out
or
xlat
pop
ins
sbb
in
in
out
inc
add
push
fsubr
cli
cmp
das
loop
js
mov
mov
mov
xchg
jnp
mov
retf
loope
mov
mov
xor
js
xchg
pop
push
and
pop
sbb
sbb
in
movs
dec
mov
popf
jge
ins
enter
xchg
sbb
pop
out
adc
mov
jg
mov
pushf
mov
retf
xor
xor
imul
cmp
pusha
fistp
and
fidiv
inc
fsub
dec
mov
lock
mov
enter
pop
imul
fldenv
pop
push
(bad)
(bad)
(bad)
xor
loopne
cwde
and
jns
xchg
sub
loopne
dec
jo
das
ja
jnp
das
int
mov
cmp
jl
mov
sub
pop
js
jns
retf
jmp
push
mov
out
enter
gs
pop
cmp
jge
mov
and
retf
xchg
mov
dec
or
pop
or
stc
test
int3
test
fstp
ret
pushf
js
dec
mov
sti
fst
test
fnstcw
adc
dec
fsubr
push
mov
in
cmp
mov
jns
mov
ret
outs
fsubr
ins
popf
call
ds
mov
lods
xor
das
and
stos
pop
jecxz
fistp
pop
xchg
push
in
mov
mov
and
push
push
sti
or
cmp
movs
call
dec
lahf
test
pop
sub
jmp
leave
sub
pop
jnp
imul
cmp
jl
sbb
sub
clc
sub
lods
lds
ins
imul
sbb
cmp
pushf
repz
xchg
cmp
pushf
pop
fst
and
jae
dec
in
dec
scas
mov
push
xchg
adc
pop
stc
and
movs
scas
ret
cmp
ss
inc
fdivr
push
popf
push
sbb
repz
js
dec
inc
push
sti
xchg
movs
xchg
pop
mov
sti
fmul
repnz
rol
mov
dec
sahf
pop
sub
push
jns
push
sub
and
(bad)
mov
pop
out
jns
in
mov
dec
outs
lods
mov
sub
pusha
cmp
sar
push
mov
lock
xor
jae
mov
sub
dec
push
push
lahf
sbb
popa
cli
jmp
imul
or
cmp
(bad)
cmp
repz
xor
pusha
mov
and
pushf
sti
call
mov
pop
inc
int3
pop
(bad)
jle
call
sub
jl
mov
jecxz
mov
mov
out
cmp
mov
push
mov
test
or
pushf
pushf
pop
inc
cmp
aas
int
mov
push
(bad)
fcomp
sub
pop
retf
xchg
or
popf
jmp
add
sar
imul
es
shl
imul
xor
(bad)
jne
clc
popa
dec
leave
sub
xchg
push
sub
fsubr
cld
stc
popf
js
pop
scas
inc
xchg
jmp
movs
sti
fsub
out
sub
retf
push
in
ret
inc
mov
xchg
sub
mov
test
pop
sbb
(bad)
repnz
pop
jge
pop
mov
jecxz
mov
and
mov
and
fs
int
cdq
ins
pop
jns
stos
das
(bad)
adc
jno
mov
cwde
and
push
pop
cmp
setge
jmp
pop
adc
jmp
add
add
cmp
lods
mov
pop
gs
dec
es
xchg
imul
int
or
ja
pop
jmp
fucom
or
sub
mov
or
test
pop
jecxz
cmp
int
mov
push
cli
or
fsubr
mov
adc
das
sub
pop
jmp
cmp
sbb
in
stc
mov
dec
call
enter
mov
xchg
sub
(bad)
aam
data16
pop
jb
cmp
and
mov
pop
pop
pushf
fsub
lods
out
dec
mov
sti
aaa
inc
pop
push
sub
out
cmp
add
push
outs
mov
dec
pop
ret
shr
or
inc
fs
lods
dec
sbb
sub
cmp
je
cmc
sub
in
mov
push
fmul
mov
and
inc
enter
popf
loop
jns
sbb
push
int3
cdq
and
lock
xor
leave
fstp
aas
gs
jbe
sbb
iret
idiv
jns
test
or
mov
pop
xchg
xor
sub
fnstcw
lods
jmp
inc
je
fs
adc
xchg
sub
push
inc
pop
gs
jns
pminsw
pop
and
push
ret
or
ss
mov
pop
pusha
cdq
cwde
add
sub
xchg
sbb
iret
(bad)
js
fsub
jp
lods
sbb
ficomp
and
into
jp
pushf
cli
mov
lods
rol
sub
sub
mov
lea
sar
push
test
pop
ret
mov
daa
pop
ficom
fdivr
mov
in
sbb
add
jge
mov
js
adc
lahf
sbb
rcl
pushf
jns
fucom
mov
push
fmul
daa
inc
sub
push
add
imul
and
pop
test
popf
call
fst
dec
or
push
scas
stos
push
ja
imul
movs
cmp
je
int3
pop
sbb
(bad)
mov
add
mov
cmp
fist
cmc
or
imul
dec
pop
test
cmp
int
mov
and
or
retf
sar
or
cmp
pop
push
jl
cmp
out
add
ret
lahf
test
lods
retf
sub
mov
dec
jl
ds
push
(bad)
fistp
jecxz
(bad)
sub
fstp
int3
cmp
pop
lods
lahf
imul
pop
sub
mov
xchg
xchg
test
out
pop
jbe
cmp
xchg
cmp
sub
dec
jmp
mov
jp
pop
sub
push
(bad)
jmp
stos
js
mov
pop
outs
add
dec
out
mov
pop
push
dec
imul
daa
jae
xchg
neg
mov
loop
popa
mov
push
dec
and
mov
pusha
outs
adc
add
jmp
retf
int3
mov
retf
outs
pop
inc
pushf
mov
lods
add
jne
fistp
jno
int3
mov
jne
scas
fwait
pusha
ins
jmp
ficomp
cld
cmp
push
push
in
dec
jmp
stc
int
mov
pop
mov
fwait
mov
aaa
push
(bad)
dec
or
(bad)
sub
push
mov
dec
dec
fstp
sub
xchg
pop
add
fst
inc
push
push
adc
fsub
cdq
inc
xchg
or
lods
fiadd
sti
out
and
cwde
and
sub
mov
pop
cdq
test
pop
push
jp
icebp
in
retf
dec
or
push
mov
out
sbb
jns
pop
jmp
cwde
daa
add
jp
pushf
cmp
ins
out
push
xchg
xchg
fcom
cmp
retf
adc
mov
call
cli
pop
xor
pop
pop
in
in
fidivr
dec
call
std
jmp
hlt
pop
dec
sbb
pop
or
imul
ins
mov
dec
pinsrw
or
std
shr
add
cmp
(bad)
jmp
add
leave
pop
add
sub
and
mov
mov
enter
push
jbe
sub
int
mov
sub
sbb
in
in
or
aaa
fist
mov
into
sub
retf
dec
push
sub
and
jg
les
leave
popf
mov
and
xor
into
mov
clc
sub
scas
sbb
dec
pop
inc
(bad)
pop
jb
sti
sub
cmp
cmc
mov
pop
push
ins
sbb
enter
push
xchg
cmp
daa
sbb
and
push
push
sub
daa
lods
in
cmp
jae
push
test
push
call
out
mov
jnp
dec
imul
mov
mov
jmp
fistp
push
cmp
int
movs
xchg
sub
pop
out
dec
dec
xor
push
adc
iret
jg
jmp
test
add
mov
cmp
scas
ret
jg
pop
pop
adc
and
cmp
cmp
push
or
in
ins
mov
and
sbb
and
gs
push
mov
in
or
lods
xor
lods
int3
fstp
fistp
jns
out
fidivr
push
or
(bad)
leave
mov
push
push
inc
push
aas
enter
jnp
xor
cmp
or
call
mov
sub
mov
jmp
xchg
pushf
mov
cwde
and
sub
fisubr
leave
fst
xchg
repnz
mov
(bad)
cmc
cmp
loope
mov
mov
xlat
mov
in
cmp
mov
movs
add
(bad)
mov
fbstp
xchg
lock
lock
jecxz
out
test
(bad)
aam
pop
int3
mov
pop
sub
or
or
mov
add
dec
mov
sbb
mov
pop
je
or
popf
in
push
and
xchg
test
call
leave
push
pop
adc
jmp
enter
push
les
fsubr
cmp
pop
cmp
sti
outs
pop
push
and
pop
(bad)
(bad)
mov
pop
(bad)
mov
mov
adc
fst
sub
ins
test
sub
loop
pop
inc
jns
icebp
stc
push
scas
xchg
jbe
jmp
in
push
les
or
cmp
dec
pop
mov
imul
jns
push
pop
lods
stc
sub
jmp
mov
mov
in
call
mov
inc
mov
xor
inc
imul
das
push
sti
je
pushf
cwde
ja
out
mov
jb
and
adc
xor
inc
cmps
and
push
jle
fnstcw
ins
out
stos
sub
jns
fucom
mov
and
fisubr
mov
add
lods
jns
xor
mov
pop
enter
popf
out
mov
pop
mov
stc
sbb
cs
nop
pop
push
imul
mov
aad
outs
sbb
or
fwait
outs
mov
cwde
daa
push
and
push
lods
ret
sar
sbb
ret
popf
xchg
pop
rcr
sub
add
fisubr
idiv
push
mov
push
mov
test
pop
je
aas
mov
or
fbld
sub
push
push
imul
sub
retf
in
push
(bad)
cld
leave
call
add
leave
adc
call
out
pop
outs
mov
lods
sbb
lods
inc
pop
dec
pop
loopne
pop
fstp
(bad)
ins
leave
scas
cmp
sbb
or
jge
mov
pop
and
ror
loope
pop
sub
mov
sub
call
xor
push
(bad)
jmp
shr
lods
pop
stc
dec
mov
dec
sub
jb
call
pop
sub
clc
fcmovnu
loope
sbb
in
pop
cmc
(bad)
clc
sbb
or
jno
sub
int
mov
xchg
shl
sar
scas
test
dec
aas
std
enter
out
jo
and
mov
test
jmp
inc
fnop
mov
dec
in
dec
xor
dec
mov
push
outs
xchg
push
pop
es
sbb
arpl
pop
inc
pop
imul
xchg
sbb
push
test
xchg
shr
movs
(bad)
std
sbb
pop
(bad)
pop
mov
(bad)
adc
xor
ret
jp
js
pop
adc
in
js
dec
cdq
test
leave
adc
in
or
test
xor
cmps
xor
dec
mov
ds
test
int3
jg
div
or
mov
repz
mov
dec
xor
out
mov
mov
dec
mov
jmp
cwde
push
push
fcom
jp
fs
enter
xchg
movs
ins
fist
xor
loopne
mov
cmp
mul
jl
mov
rcl
cli
and
cmc
leave
hlt
ins
into
stc
ins
fldenv
add
jno
and
data16
cmc
dec
xchg
je
adc
sbb
cmps
(bad)
loope
or
leave
shr
das
into
ficomp
jne
cmp
inc
retf
mov
pop
sub
shl
xor
mov
enter
sub
cmps
pop
jg
in
mov
jmp
fld
cmp
fwait
mov
pop
mov
push
mov
push
shl
into
cld
pop
add
fistp
or
mov
sub
push
enter
cmp
ficomp
add
jmp
out
adc
or
std
cmp
lock
mov
int3
and
(bad)
fadd
mov
push
sbb
add
cmc
mov
fwait
and
add
scas
popa
and
jge
inc
mov
sti
mov
fs
shr
leave
pop
sub
test
pusha
(bad)
pop
and
sub
in
rcl
arpl
fnsave
loopne
cld
cmps
sbb
push
dec
dec
int
out
sub
jnp
pop
fisub
out
dec
sub
aam
fcomp
fwait
and
xchg
(bad)
cld
mov
ror
rcr
or
add
(bad)
shl
daa
iret
xor
(bad)
nop
das
ins
cmp
xchg
repnz
pop
scas
jp
lock
retf
push
pop
pop
(bad)
repnz
in
les
addr16
adc
cmp
adc
call
jl
pop
xchg
push
stos
aad
rcr
mov
cmp
jmp
and
dec
cmps
lds
push
mov
sub
pop
pop
push
movs
inc
inc
xchg
leave
call
test
cmps
(bad)
push
cmp
xor
sub
sbb
jmp
cmps
test
dec
add
test
cmp
inc
arpl
mov
retf
jns
lock
cwde
das
popa
sub
push
inc
movs
dec
shl
fisubr
stos
clc
xor
sub
jmp
lods
inc
xchg
mov
cmp
in
imul
sub
or
aad
xchg
jge
movs
fwait
dec
mov
dec
add
mov
cmp
mov
or
div
cmp
cmps
inc
sbb
mov
jg
ins
xchg
mov
pop
or
out
inc
pop
fild
rcr
mov
and
mov
or
adc
jae
outs
icebp
into
sub
cmc
test
cmp
lods
dec
in
jp
pop
scas
stc
pushf
sub
push
jmp
cmp
sbb
sbb
dec
movs
sbb
jnp
pop
addr16
mov
jl
(bad)
xor
xor
fstp
adc
sbb
add
inc
enter
mov
jg
jge
mov
jge
mov
jo
clc
shl
sub
imul
xchg
pusha
ds
sub
stc
pop
data16
js
outs
jge
push
push
out
mov
jge
movs
inc
lea
add
mov
jge
scas
pusha
int3
out
push
std
mov
scas
push
repz
lods
aad
and
pop
xor
pop
and
js
sub
scas
mov
ins
out
inc
clc
or
nop
hlt
cmp
call
or
jne
popa
push
lods
mov
mov
out
loopne
sub
lods
inc
sbb
stos
inc
sbb
js
pushf
sub
or
ins
jnp
je
repnz
scas
dec
jmp
je
push
pop
in
lods
int
mov
mov
fild
jge
test
cld
xor
sub
call
jmp
popa
cdq
cmps
mov
jmp
(bad)
push
lds
and
jmp
repnz
loop
enter
xor
lds
test
mov
call
aaa
pop
ss
sbb
bound
call
jl
lea
scas
lods
jmp
sub
fs
(bad)
cmp
sbb
pop
sub
push
bound
inc
jmp
or
or
sub
outs
mov
pop
in
loopne
into
in
or
xchg
imul
out
jle
mov
imul
mov
aas
lea
call
xor
sub
jmp
test
fldenv
xchg
pop
cmp
sbb
inc
inc
mov
cmp
mov
icebp
(bad)
mov
sbb
mov
nop
dec
add
repz
push
in
rol
outs
neg
fsubr
aam
stc
mov
and
push
xor
rcl
sbb
jae
ins
mov
cs
and
sbb
out
loopne
mov
std
sbb
cli
aaa
sbb
fcom
hlt
and
inc
or
pop
add
call
cmp
(bad)
aam
inc
icebp
in
stos
push
dec
jmp
xor
xor
jg
mov
fs
jle
or
sub
ror
cli
nop
mov
retf
and
sbb
jl
pop
dec
mov
clc
jle
or
mov
jge
stos
std
ins
mov
call
movs
lods
push
xor
sar
popf
push
add
rcr
js
data16
fdiv
gs
xor
scas
add
loope
pop
sbb
(bad)
stc
stos
lock
clc
cs
adc
push
popf
jg
xchg
dec
enter
test
add
mov
stos
mov
imul
das
pop
mov
cdq
jns
xchg
cmp
adc
pop
loopne
inc
xchg
pop
inc
test
adc
push
xchg
mov
and
gs
pop
cmp
or
shl
(bad)
inc
fwait
dec
imul
mov
loopne
cwde
fidiv
and
sti
sub
fdivr
or
jae
or
and
lock
popf
sub
cld
loop
mov
(bad)
fnsave
xlat
xor
js
sar
or
inc
pop
aam
inc
fwait
dec
js
inc
push
cmp
fimul
cmps
xchg
or
xchg
movs
add
clc
adc
sbb
aas
ret
test
popa
mov
jle
stc
jmp
rcl
jmp
test
stc
out
loop
pop
jns
xchg
inc
call
or
mov
pop
std
and
es
aad
mov
pop
test
leave
cmp
pop
sti
stos
mov
into
xchg
shl
popa
test
in
int
test
cmp
loop
inc
enter
and
daa
icebp
push
dec
adc
push
mov
fwait
inc
outs
dec
mov
jo
ins
mov
lock
call
xchg
test
test
aaa
push
leave
pop
adc
cmp
fdivr
add
mov
stos
xor
fiadd
or
xlat
js
fsubr
mov
inc
xchg
fild
dec
cmc
outs
cmps
xor
test
mov
jno
jno
jge
mov
pop
pop
or
je
dec
mov
fstp
jns
lds
push
stos
sub
jp
outs
mov
and
(bad)
jns
int3
inc
xor
scas
(bad)
lods
clc
xchg
ins
xor
call
(bad)
lods
lock
stos
shl
cmp
sbb
mov
ret
jp
xchg
in
sub
es
jmp
dec
test
std
adc
sub
(bad)
jne
add
fidiv
add
dec
jmp
test
fwait
out
pop
test
pop
sub
cmp
add
cmp
pushf
in
mov
fistp
add
push
xor
sub
bound
mov
xor
pushf
(bad)
dec
mov
in
stc
lock
movs
fnstenv
and
dec
jne
cmp
test
jl
cdq
hlt
jmp
repnz
xlat
xor
(bad)
imul
popa
xor
jno
repnz
push
mov
xor
xor
aad
cmp
lods
mov
fs
(bad)
ins
or
lods
leave
inc
pop
cmp
dec
lods
sti
movs
pop
mov
out
cmp
sub
pop
aad
or
add
fimul
mov
sbb
dec
cld
fwait
sub
out
movs
jae
enter
je
je
call
lock
movs
and
movs
dec
mov
fcom
sub
inc
fucomp
cmp
sahf
mov
cli
sub
and
repz
and
out
inc
dec
fs
pop
test
mov
retf
or
das
xchg
jmp
cmp
in
push
sbb
mov
fidivr
mov
icebp
pop
mov
xor
das
mov
fidiv
pop
ins
jne
aas
push
ds
cmp
mov
fdivr
push
add
cmp
pop
loop
add
sub
stos
fstp
jmp
scas
retf
hlt
rcr
inc
jp
cld
sub
loope
push
push
or
cmps
pusha
and
fld
sbb
mov
cmp
sub
cli
pop
adc
dec
or
mov
push
sbb
outs
mov
fild
outs
cmp
sub
sbb
ins
daa
or
dec
fnstenv
outs
sbb
xor
je
inc
popf
je
mov
test
jmp
icebp
scas
jl
pop
imul
sbb
outs
cmp
lods
loop
not
sahf
stc
pop
aad
cmp
mov
lods
retf
jnp
push
imul
jns
cmp
sub
and
or
mov
fwait
retf
mov
in
loopne
(bad)
mov
inc
out
(bad)
sub
pop
das
cmc
jmp
pop
and
shl
mov
(bad)
mov
lods
jmp
ds
sbb
mov
pop
dec
je
or
push
mov
aaa
fsubr
std
sub
lods
sahf
fldcw
cmp
sbb
call
loopne
ins
pushf
test
dec
push
in
mov
pop
je
jno
ins
push
mov
sbb
xchg
sub
adc
popf
int
inc
add
pop
sub
or
cmps
js
jecxz
jmp
in
inc
inc
out
cmp
push
sub
sub
in
popa
lods
add
lods
test
ret
push
mov
dec
sub
shr
std
cs
imul
xor
jmp
add
in
mov
sti
mov
scas
ins
call
hlt
pop
dec
push
pop
mov
test
ret
test
outs
shl
movs
dec
cwde
mov
daa
out
adc
inc
cwde
inc
test
push
lods
ins
mov
stos
mov
pop
gs
imul
mov
iret
pop
pop
mov
popf
je
test
mov
pop
or
in
cmp
pop
inc
leave
jae
ins
cmp
scas
fsub
add
in
pop
ins
call
aam
xor
popf
out
cmp
or
jg
outs
add
push
sbb
inc
in
out
cmp
or
movs
pop
add
call
shl
push
lods
leave
retf
jmp
out
add
and
icebp
jmp
sub
call
jmp
cmp
ins
mov
fist
cld
cmp
jmp
(bad)
pop
ins
add
pop
mov
mov
pop
dec
cld
pop
jae
in
cmp
jo
sub
jmp
add
add
mov
pop
gs
sar
outs
xor
(bad)
sbb
mov
xor
xor
ja
(bad)
fmul
mov
mov
cli
test
xor
out
mov
ret
jnp
add
and
aas
dec
push
pop
es
fsub
sub
cmp
mov
mov
ficom
fadd
imul
dec
test
mov
push
fucomp
mov
fisttp
mov
inc
outs
aas
clc
lods
rep
fisttp
or
dec
jmp
loope
js
dec
jnp
jne
fcomp
pop
call
outs
cmp
cs
jmp
outs
mov
pop
or
test
adc
push
(bad)
pop
mov
dec
mov
stos
pop
shl
push
add
mov
test
stos
call
jmp
and
ror
in
jmp
mov
fs
call
xchg
fimul
inc
mov
out
jne
sub
fstp
mov
(bad)
mov
nop
xchg
sub
sbb
cwde
imul
dec
fisttp
gs
jp
out
sub
das
rcl
lods
outs
add
scas
int3
sbb
add
jmp
ret
mov
jns
xor
inc
dec
xchg
jbe
int3
add
in
cmp
mov
add
dec
test
aas
pop
mov
idiv
jmp
dec
in
bswap
push
push
dec
push
cmp
ret
sbb
popa
adc
mov
pop
inc
setno
ins
mov
pop
pusha
in
pusha
mov
cmps
jmp
retf
cmp
cld
mov
inc
lods
outs
mov
fistp
push
pop
fnstcw
pushf
imul
add
jnp
imul
movs
or
pop
mov
repz
adc
push
outs
in
cmp
test
(bad)
fldenv
adc
movs
outs
mov
pop
pop
pop
adc
out
sbb
das
fdivr
fild
pop
sbb
ins
jmp
cmp
stc
xchg
pop
in
mov
adc
lods
jmp
cmp
ret
iret
fstp
mov
js
ins
scas
fsubr
mov
sbb
mov
loop
aad
cmp
jmp
adc
cmp
xor
and
mov
retf
and
and
add
inc
add
xchg
add
clc
and
gs
xlat
sub
pop
inc
jmp
pop
test
das
mov
mov
jnp
int3
test
test
mov
icebp
jb
jmp
pusha
sub
or
adc
cmp
test
mov
inc
je
sti
pop
aas
add
inc
std
ins
cmp
xlat
sbb
mov
fild
jno
dec
ins
mov
pop
xor
jmp
aam
jl
fld
push
test
shr
sub
cdq
add
repz
(bad)
outs
loopne
sub
lahf
fcmovnbe
xlat
jns
adc
out
cmp
pushf
pushf
pop
pop
fdiv
bound
out
(bad)
mov
pop
inc
mov
imul
mov
je
jp
out
scas
shr
mov
adc
push
(bad)
cwde
scas
lods
add
add
leave
scas
ins
js
jge
jo
pop
ret
out
in
fsubrp
int3
pop
dec
dec
jbe
xchg
test
int
int3
ror
sbb
pop
and
push
(bad)
sub
ficomp
xchg
imul
push
mov
stc
xchg
sbb
enter
pop
adc
adc
mov
cs
mov
fiadd
mov
je
jle
pop
mov
jp
jl
scas
stc
fsubr
mov
adc
(bad)
fimul
jo
outs
mov
fldcw
popa
cmp
xchg
sahf
cld
sub
repnz
jne
dec
cmps
fcom
jmp
xor
movs
mov
das
scas
sar
pop
push
call
cli
add
fldcw
dec
lock
pop
dec
jle
dec
pop
out
daa
shr
gs
inc
push
sub
jns
mov
retf
lds
les
test
icebp
or
or
scas
das
dec
add
out
mov
sbb
adc
xor
fcomp
sub
cmps
jae
mov
ss
mov
cmp
ins
mov
loop
mov
inc
mov
inc
les
xchg
push
gs
int3
push
xor
(bad)
inc
mov
and
xor
jmp
xchg
fcom
in
aas
cmp
mov
xor
call
outs
pop
imul
push
aad
mov
fbstp
mov
in
outs
mov
and
retf
inc
fnstcw
pop
push
cmp
push
rcr
pop
mov
mov
out
add
das
jmp
dec
stos
mov
test
sub
sahf
fsub
hlt
push
ja
ins
mov
pop
dec
lods
loope
in
outs
mov
ficomp
jmp
clc
das
and
fnstenv
add
jmp
stc
sbb
add
test
jl
jp
sar
scas
enter
xchg
dec
sbb
lods
hlt
(bad)
mov
in
dec
cmps
pop
mov
jp
in
(bad)
cmp
sbb
ss
daa
lods
jmp
push
shl
jbe
int
jbe
scas
or
ret
xchg
ret
mul
ja
pushf
mov
mov
data16
pop
jmp
cmp
lahf
iret
fadd
sub
ins
mov
pop
or
jmp
dec
scas
call
fucomp
mov
mov
scas
in
jg
cmp
pushf
mov
das
cmp
dec
inc
adc
mov
fld
cmp
test
(bad)
push
inc
call
std
pop
adc
dec
jge
adc
int
cld
xor
xchg
int
sbb
sub
mov
fdiv
leave
sbb
das
sti
fcompp
add
ins
sub
scas
stos
mov
xor
mov
pop
dec
int3
inc
das
std
imul
cmp
sub
jmp
jge
ins
mov
ficom
cld
jno
lea
adc
int3
push
push
out
cmp
and
mov
js
sbb
cld
lea
sub
mov
pop
call
mov
inc
fdiv
mov
ins
rcr
repnz
jecxz
movs
xchg
mov
jo
xchg
scas
sbb
and
jnp
int
pushf
gs
jmp
sub
shl
jmp
ret
scas
push
jne
inc
inc
mov
sub
pop
sbb
cmp
frstor
daa
push
daa
std
sbb
in
mov
fnstsw
push
add
dec
or
dec
mov
pop
xchg
retf
cmp
scas
js
mov
inc
jg
jmp
cmp
jbe
add
out
and
dec
aas
repz
cwde
cmc
pop
std
rcl
outs
ja
ror
mov
inc
xor
and
add
cli
add
imul
push
ds
jb
mov
fwait
jp
je
cmp
xchg
cmp
mov
add
scas
xchg
inc
ds
inc
add
std
inc
mov
pop
addr16
aad
icebp
imul
jbe
fs
xor
pop
sbb
dec
or
in
or
cmp
xor
push
div
inc
sbb
mov
ss
frstor
mov
call
and
mov
in
or
and
dec
adc
pop
jmp
movs
pop
sub
mov
repz
adc
mov
cli
lea
mov
dec
popf
push
fstp
pushf
leave
imul
add
sub
lock
and
xor
lahf
inc
das
xchg
jnp
mov
retf
in
test
xor
nop
cmp
in
adc
push
retf
fsubrp
dec
mov
sbb
int
mov
xchg
mov
cmp
out
mov
and
jne
and
jb
adc
push
cdq
dec
mov
call
mov
dec
je
popa
sar
fs
sbb
jp
(bad)
lds
push
mov
clc
jno
ss
pop
mov
(bad)
popa
cmp
mov
push
ja
mov
cmp
inc
es
mov
ins
hlt
std
mov
stos
imul
and
and
popf
push
or
std
leave
dec
iret
out
clc
fmul
fdivr
call
mov
mov
sub
sbb
dec
cs
lods
fs
cs
sub
stc
sbb
adc
jmp
sbb
jne
test
dec
test
out
xor
enter
adc
sbb
leave
jle
pusha
les
sbb
imul
mov
imul
enter
cdq
push
mov
push
cwde
jmp
push
and
mov
ds
and
rcl
pop
inc
dec
in
mov
push
adc
or
mov
mov
adc
fisub
(bad)
test
(bad)
test
adc
stos
and
daa
add
stc
(bad)
stos
jno
aam
pop
daa
ret
xor
call
mov
out
cld
push
push
jge
or
call
test
jle
fnsave
xchg
test
cmp
int
inc
dec
mov
and
pop
pop
push
stc
sbb
out
int
popa
in
pushf
mov
adc
or
cdq
xchg
outs
into
call
popa
inc
lods
lahf
ins
dec
fadd
xor
in
mov
mov
jl
ror
int
mov
inc
(bad)
jbe
int
std
ds
outs
mov
adc
jmp
mov
test
xor
or
push
adc
inc
jmp
sub
in
imul
int
fwait
mov
lock
pop
sub
outs
js
fsub
cmp
dec
pop
pop
pop
push
xchg
aad
shl
pop
in
mov
jbe
push
call
mov
add
inc
adc
imul
leave
mov
pop
jmp
pop
cmp
or
cmp
push
jmp
cmp
push
rcr
mov
pushf
iret
std
jmp
imul
jmp
jne
xchg
sbb
cmp
pop
test
or
mov
mov
icebp
das
loope
pusha
outs
(bad)
test
test
pop
adc
clc
inc
inc
cld
cmp
ins
mov
(bad)
mov
jnp
sub
mov
or
jmp
add
loope
xor
pop
xchg
xchg
dec
enter
inc
stc
mov
dec
cmp
jl
leave
test
cmps
jns
mov
sub
jnp
jno
jb
push
dec
mov
mov
sub
cmp
int
stos
(bad)
gs
push
rcr
jb
sbb
ins
(bad)
dec
sub
push
(bad)
sbb
and
inc
add
push
jnp
mov
mov
jmp
sbb
jecxz
mov
lock
loopne
call
and
add
repnz
inc
jl
xchg
jne
bnd
shr
xor
test
cmp
in
call
in
cmps
cmp
das
icebp
lock
sub
jecxz
add
inc
out
cmp
in
jg
adc
sar
jmp
jge
mov
mov
xchg
inc
out
frstor
jns
mov
cdq
push
pop
jl
dec
cmps
mov
mov
pop
pop
out
stc
mov
inc
add
lods
xchg
pop
das
out
cmp
adc
cmps
(bad)
mov
ret
daa
outs
pop
pop
jl
out
sbb
int3
pushf
and
and
gs
sub
enter
mov
mov
rcr
stc
ins
jge
jg
mov
mov
xchg
add
clc
lock
push
inc
add
jecxz
push
outs
retf
aas
cmp
lahf
ror
mov
inc
sbb
xlat
push
lock
push
cmp
int3
popf
jge
or
or
outs
xchg
int3
lods
call
mov
xor
sti
adc
sar
in
scas
pop
adc
xchg
mov
mov
fbld
xor
jno
jo
std
ds
cmp
sbb
push
popf
xor
push
mov
movs
sub
mov
test
repz
test
clc
jge
cmp
sub
adc
stc
dec
clc
adc
ins
cdq
ins
jg
leave
lea
lea
stos
pop
mov
fldz
outs
outs
sar
sub
jne
sub
(bad)
fsubr
lock
dec
sub
pop
fdivr
push
cdq
sbb
lods
push
fmul
or
or
add
leave
sub
imul
adc
xor
pop
gs
or
cmp
arpl
shr
or
cwde
mov
call
dec
add
outs
aas
mov
movs
mov
push
mov
xchg
sbb
cmp
sub
xor
push
inc
enter
push
jp
mov
out
ss
xor
aam
mov
jno
into
dec
mov
xchg
adc
push
clc
pop
pop
mov
xor
jbe
(bad)
cmp
mov
ins
loope
mov
cli
xlat
nop
sub
daa
enter
jnp
and
test
push
push
hlt
fwait
dec
pop
mov
xchg
dec
out
mov
or
imul
sub
imul
ins
xchg
pop
cmp
je
push
dec
pop
clc
dec
sub
adc
mov
cs
xchg
mov
mov
mov
rcl
mov
or
dec
retf
mov
call
push
xchg
icebp
jle
xchg
mov
push
jno
sbb
jne
add
ins
loope
xchg
mov
and
loope
xor
(bad)
stc
fadd
test
addr16
jp
sbb
mov
test
popa
aam
out
call
or
sub
fst
and
or
mov
jmp
lea
jp
movs
(bad)
xchg
push
bound
fisttp
pushf
adc
pop
mov
pop
add
mov
lods
mov
in
loope
dec
outs
loop
lahf
bound
cmp
cmp
push
add
test
xor
and
or
test
pushf
popa
mov
sti
shl
jmp
rcl
sar
add
or
cmc
inc
cdq
cmp
and
gs
std
pop
cmps
sbb
jne
mov
sbb
movs
mov
pushf
addr16
push
jno
jns
jmp
mov
imul
(bad)
enter
movs
jl
lods
call
in
(bad)
mov
ret
jnp
and
cmp
fwait
push
cmp
imul
je
(bad)
mov
dec
loope
cmp
ins
sti
movs
cdq
cmp
xor
inc
das
mov
fiadd
lods
jp
ins
push
rcr
cmp
sub
mov
mov
je
out
cli
test
lock
rcr
stos
and
inc
je
bound
ret
push
xor
bound
repnz
sub
xor
mov
dec
dec
push
lods
mov
pop
es
mov
adc
xchg
pop
inc
pop
stc
popa
adc
push
xchg
cdq
sub
mov
imul
(bad)
fidivr
or
jb
scas
cmp
fcom
je
outs
mov
fidiv
in
cmp
or
in
mov
test
aas
pop
mov
lds
or
jmp
xor
std
out
mov
xor
jl
les
fsubr
pusha
lods
mov
enter
pop
lods
ss
fs
aaa
fcomp
dec
jl
outs
cmp
fstp
popa
gs
cmp
fist
dec
pop
out
cmp
cdq
pop
xor
inc
std
in
mov
fnstcw
cmp
push
imul
int3
sbb
xor
outs
jp
cs
pop
add
mov
mov
jecxz
sbb
rol
shr
in
in
arpl
cmps
lock
or
movs
or
cmp
test
push
cwde
and
out
mov
fist
sbb
jae
adc
dec
aad
mov
sbb
push
add
lods
ficomp
js
push
xor
mov
fstp
outs
mov
fcomp
sub
adc
fcom
jge
out
jnp
outs
ret
sbb
push
ins
sbb
repz
cdq
ss
jge
out
mov
fnstenv
cld
jns
gs
mov
cwde
in
mov
outs
mov
in
xor
adc
std
pushf
and
mov
mov
inc
mov
shl
out
or
das
popa
mov
ficomp
pop
mov
jb
out
scas
push
das
ficomp
push
pop
out
mov
call
stc
aam
icebp
mov
dec
mov
lock
js
sub
stos
sbb
mov
cmps
mov
(bad)
fidivr
je
inc
lods
outs
jns
sub
js
pop
rol
cli
int3
outs
mov
jae
jg
popa
mov
ins
and
pop
scas
mov
sbb
loopne
inc
cdq
in
cmp
ret
sbb
shr
je
imul
push
test
jmp
push
test
sti
sub
movs
das
cli
int3
outs
retf
rcr
add
inc
pop
mov
mov
xlat
add
loop
mov
ficom
imul
xchg
cdq
or
dec
gs
ficomp
clc
lock
adc
mov
movs
lods
push
xor
nop
stos
pop
mov
sbb
das
mov
shl
call
rcl
adc
sub
popf
sbb
cs
pop
leave
mov
bound
pop
dec
loope
popf
sub
lea
and
loopne
fsub
lods
mov
pop
xor
xor
shr
add
loop
aam
pop
push
bound
cmc
sub
fsubr
or
inc
movs
scas
mov
fwait
and
leave
and
addr16
loopne
and
clc
cmc
mov
cmp
out
fdiv
call
cmps
cmp
sub
inc
push
push
cmc
ins
mov
sbb
or
out
cmps
sub
sti
mov
xchg
scas
mov
xor
test
jno
out
test
xlat
jg
adc
or
scas
mov
call
cmp
out
fisttp
jae
sub
xchg
push
cmp
lods
clc
enter
sbb
ins
lods
pop
dec
ins
stc
jno
out
aam
jbe
(bad)
das
push
icebp
test
(bad)
jno
adc
mov
popa
pop
mov
xlat
sub
in
aam
mov
daa
cli
jne
aam
sbb
mov
adc
ins
rcl
das
(bad)
int3
pop
or
push
sbb
or
inc
xlat
test
or
imul
mov
in
mov
pop
or
pop
jo
dec
clc
jo
sti
mov
or
popf
gs
sub
mov
shr
fwait
push
cld
pop
dec
mov
cmp
lahf
fwait
adc
ins
ins
mov
cmp
adc
inc
sub
leave
jnp
jg
cmc
out
sbb
or
fadd
mov
or
das
mov
sbb
pop
popf
push
and
in
fadd
out
mov
cdq
sub
cs
add
dec
fistp
fidiv
leave
lods
cmp
sbb
jbe
(bad)
out
(bad)
mov
or
loopne
cld
xor
loope
cmp
das
mov
mov
pop
cmps
adc
sar
cmc
movs
test
mov
shl
inc
xchg
adc
call
pop
lea
test
stc
mov
jo
cli
fmul
std
sbb
pop
sbb
test
jl
out
sahf
sbb
mov
jne
cdq
scas
cmp
ins
dec
jg
or
sbb
pop
ins
js
out
cmp
icebp
fwait
call
cmp
fisub
int
mov
test
fadd
or
clc
in
lods
outs
cmp
outs
adc
outs
jp
inc
mov
mov
lods
cld
fiadd
jo
scas
cmp
sub
mov
dec
xor
jns
sub
stos
fstp
in
mov
pop
and
xor
and
cli
mov
sbb
jmp
dec
out
cli
pop
pop
pushf
xchg
mul
jnp
xchg
pushf
loop
je
lods
lock
scas
jo
fiadd
call
loopne
das
retf
sbb
movs
leave
dec
xchg
sub
mov
xor
add
cmp
popf
mov
pop
sub
mov
pop
sub
inc
movs
sub
stc
add
adc
pusha
clc
xor
jnp
inc
mov
mov
enter
popa
je
jmp
jb
mov
mov
ficomp
xor
nop
outs
retf
add
sar
mov
call
cmp
lods
jmp
dec
mov
sbb
fsubr
(bad)
hlt
shr
movs
cmps
cmp
scas
(bad)
sbb
imul
in
mov
jg
push
scas
nop
or
fmul
icebp
scas
aas
add
jecxz
dec
sbb
sub
sub
mov
paddusb
test
retf
cdq
push
leave
lods
jns
iret
hlt
mov
sub
mov
push
pusha
mov
in
cmp
cmp
mov
cmp
xlat
lea
movs
leave
arpl
fild
outs
test
ror
mov
test
push
fdivr
pop
dec
jmp
in
(bad)
mov
add
jne
test
pushf
imul
mov
push
imul
mov
and
stos
ficom
test
int
addr16
pop
or
or
ret
cmp
push
hlt
sbb
sub
call
dec
stc
ja
mov
sbb
lods
sti
enter
fisttp
hlt
sub
ret
cmp
into
movs
fiadd
test
push
das
lock
inc
pop
mov
fist
(bad)
outs
popf
in
cli
or
(bad)
inc
cmps
outs
and
fisttp
in
and
pushf
fld
jp
cs
scas
mov
popa
scas
hlt
inc
pop
add
jp
lods
int3
loop
clc
jecxz
cmp
rcr
push
js
in
in
pop
add
xor
lods
lods
bound
cmp
scas
mov
inc
add
movs
dec
imul
fwait
imul
mov
std
gs
mov
mov
cmp
mov
sbb
(bad)
xchg
sbb
adc
xor
sbb
js
les
push
jns
sbb
push
pop
stc
dec
inc
or
fld
imul
xor
sub
xor
imul
mov
mov
pop
and
xchg
xor
(bad)
(bad)
std
popf
in
mov
jo
pop
in
shr
sar
out
aam
aas
xor
mov
imul
sahf
stos
scas
js
das
fcom
jp
outs
js
lods
std
stos
sbb
push
popa
inc
or
adc
push
enter
pop
aam
jbe
scas
jp
scas
xchg
xor
sar
mov
outs
(bad)
cmp
cmc
or
jae
scas
fist
inc
int
mov
outs
repnz
or
pop
loope
add
cmp
out
loop
fsub
pop
and
in
int
jmp
stc
xor
jo
dec
jl
mov
test
in
mov
cdq
cmp
xchg
jns
adc
xchg
(bad)
ins
popa
scas
cli
dec
fmul
jae
outs
jnp
push
cmc
cwde
sbb
sub
cdq
add
mov
pop
add
push
add
mov
pop
das
and
inc
aam
inc
xchg
(bad)
cmp
(bad)
pushf
jno
inc
push
mov
mov
and
mov
adc
jmp
aad
jnp
pop
loopne
fist
cs
sub
mov
pop
xor
fild
out
mov
sbb
push
cmp
mov
aam
push
add
xchg
fwait
sbb
cs
sub
mov
mov
push
scas
or
fist
nop
add
out
jp
cs
mov
sub
bound
jp
mov
fisttp
xor
jle
out
inc
das
lds
jo
in
sti
mov
add
lods
cmp
sub
les
movs
scas
cmp
jns
scas
fdivr
loopne
inc
xchg
sub
mov
adc
ret
scas
jp
scas
les
push
movs
mov
scas
mov
pushf
push
outs
inc
scas
jp
fild
(bad)
std
rcl
outs
pop
xchg
fimul
xlat
popf
or
test
cmps
push
dec
or
sub
and
in
xchg
arpl
aam
mov
add
jmp
call
cmps
push
loopne
fs
sub
sbb
outs
fld
stos
fsubr
mov
push
xor
jecxz
add
cmp
push
lods
xlat
stos
(bad)
(bad)
call
ss
adc
sti
xor
mov
mov
push
addr16
movs
dec
scas
xchg
nop
xchg
xchg
mov
inc
inc
jne
fdivr
mov
cmp
sub
dec
push
or
pop
arpl
and
jle
jns
push
pushf
xchg
aam
loope
ss
cs
add
or
jmp
out
push
push
test
sbb
ins
std
js
jmp
or
jne
stos
or
or
fidivr
into
xchg
jne
addr16
fisubr
daa
inc
pop
mov
in
pop
ins
push
adc
sub
pushf
repnz
retf
xor
test
add
push
and
ins
addr16
mov
fld
loop
jg
pop
in
shr
cwde
inc
ret
inc
inc
push
in
jns
and
dec
aaa
(bad)
int3
mov
loop
xchg
pop
cs
mov
scas
jmp
mov
add
int3
jns
or
int3
inc
inc
ja
inc
mov
mov
cmp
outs
and
out
mov
aas
mov
nop
and
retf
(bad)
inc
inc
inc
sub
push
clc
inc
cmps
jmp
push
das
dec
sub
pop
sar
push
nop
loopne
or
dec
repnz
push
or
sub
not
mov
ret
cmp
in
mov
pop
mov
inc
das
mov
int
xchg
shl
jge
stos
xor
sbb
jmp
adc
popf
jge
repnz
clc
into
outs
and
jo
xchg
xor
(bad)
cmp
icebp
loope
in
outs
loope
dec
into
mov
jae
xor
sbb
pop
cwde
mov
and
adc
jge
mov
sbb
mov
cmp
scas
stos
aam
mov
and
sub
(bad)
cdq
lock
cld
jge
sahf
into
cli
dec
popa
sbb
loop
(bad)
fnstenv
add
imul
push
mov
outs
adc
mov
push
cmps
ret
dec
mov
(bad)
in
mov
ins
int3
xchg
pusha
pop
in
mov
ret
(bad)
js
and
jno
imul
jmp
(bad)
pop
ficomp
sbb
mov
lock
int3
jmp
inc
mov
cmp
cld
sub
bound
push
jnp
and
cmp
int3
jmp
lock
jmp
push
ss
inc
call
mov
xor
lods
ror
mov
or
sbb
fs
or
inc
sub
neg
mov
jbe
les
cmp
cs
(bad)
mov
shr
stos
enter
sbb
ret
dec
jmp
lods
dec
stos
jge
fstp
test
fldcw
cld
mov
in
stc
std
and
cld
and
adc
pop
jle
not
dec
bound
or
cmp
push
mov
fild
outs
out
jno
mov
add
into
add
ins
ss
fucomi
jg
gs
cmc
xchg
clc
push
cdq
xchg
jmp
push
push
add
dec
mov
pop
loope
cmp
out
sar
ror
loope
inc
cmp
cmp
imul
cmps
sub
pop
and
call
cli
push
adc
stos
mov
shr
nop
sub
or
mov
cwde
test
fbld
call
ins
ror
mov
imul
(bad)
cmps
loope
imul
cmp
(bad)
int
xor
popf
cmps
push
lahf
jge
xor
cmp
aam
mov
call
dec
mov
movs
jmp
scas
not
nop
fs
mov
cmp
andps
adc
test
dec
daa
cmp
cmp
aad
lods
sbb
out
mov
mov
sti
loope
and
aad
xor
or
pop
jae
call
or
into
mov
cmp
loope
push
dec
hlt
in
outs
inc
mov
and
mov
and
sbb
mov
mov
ror
xchg
(bad)
shl
push
push
pop
out
mov
sub
sub
out
adc
pop
cmp
shl
mov
arpl
cld
add
cli
movs
es
mov
fstp
stc
pop
sbb
inc
jl
inc
retf
push
lods
sti
or
ja
inc
cmp
mov
jmp
mov
sub
fsubr
xchg
jns
mov
ret
add
std
clc
push
repnz
mov
xor
popf
jmp
nop
enter
inc
and
or
mov
gs
sbb
push
jl
sti
dec
jmp
sti
sbb
ins
ds
outs
mov
pushf
outs
stos
ror
into
shl
inc
cwde
sub
cmp
aas
nop
leave
push
pop
in
pop
jae
in
cmp
cmp
sub
addr16
out
cli
lods
call
adc
mov
xor
push
cmp
fiadd
sbb
dec
mov
lods
cmp
(bad)
cli
jecxz
call
mov
dec
sub
mov
aas
adc
jnp
das
jo
inc
fsubr
and
xchg
jb
jecxz
movs
dec
sub
mov
sbb
into
mov
jmp
inc
dec
imul
cdq
clc
sub
pop
push
pop
icebp
jecxz
jl
sbb
les
jae
lea
push
scas
aaa
rcl
mov
cs
nop
jmp
dec
test
add
call
sub
sub
int
sbb
ins
jmp
and
loope
mov
(bad)
in
cmp
cwde
loope
sbb
cmp
nop
ror
je
push
cld
mov
adc
gs
lods
out
push
and
cdq
xchg
jl
mov
mov
jo
lea
jns
in
mov
std
out
stos
mov
scas
sti
mov
lods
xchg
(bad)
repnz
dec
loopne
push
sbb
lods
mov
das
movs
out
scas
out
push
lods
cmp
loop
cmp
aad
push
hlt
mov
jmp
addr16
pop
or
mov
pop
mov
dec
or
ins
pop
dec
test
mov
jge
inc
into
popf
jmp
test
outs
repnz
jns
in
sbb
and
jl
std
cmp
dec
das
ja
or
dec
int3
in
int3
gs
stos
and
shr
pop
pop
ror
mov
or
aaa
mov
stos
xchg
mov
and
idiv
or
fistp
mov
jge
adc
dec
add
inc
pop
gs
ins
ja
mov
and
sub
js
hlt
fidiv
imul
or
mov
int
add
jns
or
push
fidivr
or
jmp
lea
or
xor
(bad)
js
out
adc
xor
fs
mov
push
ins
in
call
and
pop
inc
es
push
pop
aad
hlt
arpl
push
sub
xchg
sbb
lock
(bad)
mov
imul
sti
jb
ins
pop
inc
test
dec
mov
ja
das
and
adc
sub
popf
ja
sub
paddusb
loop
push
lods
addr16
call
sub
pop
movs
dec
jns
add
cld
fs
push
cmp
push
int3
aad
mov
clc
sar
lods
js
pop
scas
mov
xchg
sbb
pusha
add
inc
iret
aam
push
cmp
pop
jl
das
mov
in
jp
fdivr
test
sti
and
fisttp
mov
test
je
in
cld
das
mov
ss
ins
test
sbb
mov
popf
enter
fsubr
inc
sub
es
xchg
fnstcw
movs
mov
sbb
outs
mov
push
xor
lods
cmc
cmovge
popf
ins
mov
or
rol
dec
mov
sub
repz
ins
push
sbb
add
fbstp
lods
lea
or
iret
jp
sbb
fisttp
mov
fild
pop
and
dec
pop
enter
pushf
jb
test
jo
(bad)
fdivr
mov
cdq
in
or
lods
pop
outs
or
mov
xor
divps
cmp
cmc
mov
inc
pop
add
sbb
hlt
mov
inc
and
push
mov
inc
imul
test
(bad)
in
popf
stos
sub
sub
ror
cmp
lods
js
sub
movs
fnstenv
pusha
add
ret
mov
inc
cdq
in
mov
stc
xor
cwde
dec
or
ins
mov
ins
or
jp
sub
xor
adc
enter
js
test
popf
jg
cmp
jmp
jmp
sub
out
stos
pop
and
dec
int3
jecxz
pop
and
pop
push
dec
in
(bad)
in
aad
fwait
repz
pop
jns
cmp
pop
jno
or
dec
ins
sti
in
out
or
retf
cmp
cmps
xchg
ret
push
ins
movs
shr
ret
xchg
das
les
repz
outs
or
arpl
cmp
sub
aaa
ins
fdiv
hlt
fstp
imul
mov
loope
dec
in
cmp
mov
sbb
ds
int
mov
cmp
cmp
inc
outs
arpl
cmp
imul
dec
xor
mov
inc
(bad)
lods
cwde
in
inc
lock
mov
mov
sbb
sbb
cwde
add
fisubr
icebp
dec
ror
es
jmp
mov
mov
jns
int3
cmc
mov
and
cmp
fldz
(bad)
out
cwde
in
jge
mov
test
mov
inc
(bad)
outs
xchg
add
rcl
mov
shl
out
fnstcw
lods
scas
dec
pop
lods
cwde
imul
ins
fist
lods
cdq
xor
push
gs
or
mov
jp
aaa
push
inc
pop
add
xlat
inc
jge
add
mov
dec
xlat
inc
pop
mov
inc
gs
cmp
out
jb
sbb
sub
mov
adc
jo
cmp
aas
adc
imul
lea
in
inc
test
cld
test
inc
cdq
or
mov
push
pop
add
repz
push
cmp
sub
mov
cmp
inc
(bad)
mov
cmp
inc
test
fnstenv
ss
cmps
xor
push
lea
(bad)
in
clc
mov
xor
int
mov
not
mov
sti
mov
dec
cmp
mov
and
test
loop
out
cmp
call
ins
sti
stos
xor
jb
dec
(bad)
sub
dec
and
or
mov
pop
jg
sbb
xchg
jg
adc
mov
push
lds
retf
mov
add
pop
jge
sbb
lods
jmp
cmp
cmc
mov
sbb
in
push
int
test
leave
arpl
imul
pop
js
lods
ja
mov
mov
scas
mov
sbb
cmp
jbe
into
out
das
pop
mov
jo
jmp
add
mov
jg
mov
push
cld
scas
fnstenv
xor
mov
iret
pop
aaa
mov
pop
jmp
jne
ins
or
test
cmp
pop
pop
aaa
ins
mov
cmp
in
inc
mov
imul
inc
fwait
lods
cmp
cmc
scas
cmp
fadd
push
aad
sbb
int
lahf
cdq
xor
aaa
inc
mov
stc
mov
mov
ins
imul
dec
cmp
sbb
std
mov
cmp
add
or
pop
jns
fnstcw
inc
adc
mov
cdq
pusha
or
test
push
dec
lods
mov
or
xor
ss
mov
bound
movs
cwde
cmp
add
arpl
pop
cmp
jno
icebp
out
js
mov
mov
add
sbb
enter
cmps
fild
adc
jp
pop
jmp
cmp
fldcw
sbb
sub
sbb
fadd
dec
push
lods
pop
push
in
jecxz
clc
imul
add
(bad)
fidiv
shr
icebp
movs
enter
pop
fldenv
scas
stc
xchg
xor
jmp
mov
inc
mov
cwde
sub
mov
out
or
mov
xor
pop
clc
sahf
sub
movs
mov
imul
cwde
or
sbb
push
movs
int
in
ins
pop
scas
pop
sub
iret
push
ret
int3
cmp
lods
pop
pop
cmp
inc
xchg
lea
or
mov
sub
push
fucomip
(bad)
or
scas
sbb
inc
sub
int
pop
lea
pop
jge
jno
xchg
into
(bad)
in
clc
push
int3
mov
cmp
jle
push
pop
int3
cdq
ror
shl
movs
lods
sbb
ins
jmp
xchg
xchg
add
push
fsub
test
jecxz
ret
rcl
or
push
add
addr16
sbb
sti
fld
inc
(bad)
add
mov
mov
mov
in
cmc
cmp
cmp
fild
push
dec
inc
mov
lods
mov
sub
mov
inc
cdq
sub
scas
or
and
inc
ja
fcom
in
jmp
repz
stc
int
inc
xchg
mov
xor
xor
or
test
and
dec
inc
inc
lods
xor
in
mul
inc
lea
dec
(bad)
scas
cwde
and
sahf
dec
mov
sti
inc
fwait
lea
daa
in
in
mov
gs
stc
test
mov
ja
lods
cdq
into
sbb
stc
dec
pop
ins
lods
cs
push
mov
pop
mov
cmp
(bad)
jmp
retf
push
aad
cmp
mov
ds
adc
loope
js
xchg
sub
mov
js
mov
jns
in
out
sub
(bad)
rcr
jmp
dec
jnp
mov
xchg
retf
cmp
das
fistp
in
and
(bad)
cdq
cwde
sbb
cdq
sbb
mov
imul
sub
add
dec
mov
xchg
pop
mov
repnz
lods
stc
scas
mov
movs
in
stc
fmul
or
jp
push
ss
dec
(bad)
dec
loopne
fnstcw
into
leave
jnp
in
imul
lock
inc
fnstsw
xor
dec
clc
sub
push
out
int3
cdq
adc
out
cmp
inc
add
lods
fnstsw
stc
push
aas
int
sub
sub
int
ret
(bad)
mov
(bad)
ins
pop
out
stos
mov
sahf
or
pop
dec
stc
pop
ret
sub
mov
jmp
fsub
pop
sub
arpl
bound
stos
int
sbb
mov
daa
sub
mov
or
mov
push
jg
stc
cmp
pusha
sub
popf
mov
mov
es
jo
jne
pop
jp
icebp
cmp
call
je
in
push
sub
bound
xor
not
ret
(bad)
popf
and
in
cmc
out
mov
jp
fmul
sti
scas
fldenv
outs
lahf
push
sti
or
xor
lods
mov
mov
cmp
sub
sub
pop
cmp
dec
retf
cwde
xchg
push
and
fst
lods
pop
pop
push
xor
mov
sub
cmps
and
into
int3
cmps
xchg
sbb
pop
jae
jne
sbb
int
lods
sbb
sti
inc
frstor
inc
sub
hlt
lea
jb
inc
dec
or
mov
imul
mov
jmp
sbb
sbb
mov
je
jge
aas
mov
(bad)
je
mov
imul
ret
loop
enter
cmp
test
jecxz
or
ret
mov
add
lahf
sub
push
add
call
or
enter
mov
or
jnp
cmp
scas
ficomp
cdq
cmp
push
(bad)
mov
xchg
sub
mov
inc
dec
js
sbb
movs
dec
lods
ins
dec
mov
and
sub
xor
pop
in
mov
fldenv
mov
stc
sub
dec
mov
inc
dec
mov
cmp
sub
inc
int
into
int3
out
dec
arpl
push
jle
ins
fdivr
in
xchg
push
push
mov
ins
lds
xor
or
mov
cld
mov
test
clc
mov
dec
jecxz
or
pop
jg
ret
dec
or
sub
in
pusha
cmp
ins
clc
(bad)
lods
hlt
scas
fldcw
sub
lods
test
push
fmul
mov
push
arpl
cmp
mov
xchg
daa
scas
data16
mov
sub
cmp
sub
sub
mov
ss
stos
movs
and
xchg
nop
and
inc
ins
cmp
mov
fxch
popa
xlat
jnp
aas
add
sbb
dec
dec
push
mov
sbb
stc
stos
cdq
daa
xchg
mov
int
sub
js
mov
xchg
pop
lea
xor
lahf
adc
repnz
not
adc
sbb
xchg
lock
fld
mov
push
cmp
test
xor
addr16
loop
mov
adc
dec
fmul
ins
cli
scas
pop
sbb
sbb
inc
sbb
add
push
les
push
div
jne
mov
out
mov
mov
cli
daa
sbb
fisttp
cmp
or
ins
dec
pop
inc
or
in
push
out
js
imul
dec
adc
dec
xor
add
dec
xchg
in
dec
push
push
int3
add
mov
adc
sub
shr
mov
sbb
aas
mov
cmp
push
mov
dec
repz
sub
sti
mov
xor
mov
cwde
ins
mov
stos
jns
dec
rcr
dec
pop
pushf
sub
adc
dec
pop
int
xor
in
inc
cmc
dec
cwde
cmp
shl
xchg
or
mov
dec
sub
cli
mov
push
fwait
sub
(bad)
stc
cmps
js
rol
int3
or
dec
(bad)
outs
dec
lods
js
jmp
push
xchg
in
jns
call
jecxz
xchg
mov
cmp
and
and
clc
and
or
dec
xchg
(bad)
out
out
mov
mov
dec
mov
cmp
push
addr16
or
ins
jns
and
lea
sub
loop
add
hlt
xchg
pop
sub
jae
test
dec
xor
add
in
lds
cmps
repz
or
adc
xor
jmp
lea
icebp
(bad)
js
jp
mov
pop
shr
jmp
in
pop
or
inc
sahf
test
add
sbb
imul
daa
cmc
jno
xchg
cwde
mov
shr
mov
pop
cwde
mov
stos
fs
cmp
and
adc
ror
inc
cmp
sbb
cwde
adc
mov
mov
jge
mov
xchg
fld
sar
jge
xor
call
sahf
mov
push
not
ds
lods
push
jecxz
sub
dec
or
inc
int3
rep
imul
enter
std
and
sbb
sub
mov
(bad)
call
mov
dec
imul
mov
cmp
inc
fsub
hlt
stc
dec
jmpw
ins
xchg
sbb
inc
push
js
dec
in
out
loope
test
cwde
cmp
sbb
aad
sbb
xchg
in
lea
jb
lock
or
loope
jl
sub
jp
js
(bad)
sbb
stc
in
mov
ja
in
mov
popf
cmp
stos
shl
out
mov
aas
and
add
in
(bad)
mov
cmp
jno
test
loopne
mov
jl
sbb
stos
sub
dec
sbb
and
das
mov
lods
xor
push
pop
retf
dec
push
std
outs
mov
mov
jne
xor
mov
jmp
xor
mov
pop
out
add
aaa
xchg
or
movs
ficomp
sub
jmp
ins
test
sbb
and
sbb
out
push
mov
mov
jne
or
and
sub
cmp
mov
stc
xchg
in
push
imul
into
mov
in
pop
std
adc
imul
cmps
dec
mov
imul
xchg
add
mov
ret
fnstcw
in
jl
outs
mov
addr16
daa
shr
stos
jns
leave
fisub
push
xor
jp
fnstenv
xor
lods
aas
mov
dec
aad
inc
push
loope
lahf
xor
lea
test
inc
dec
add
dec
jne
or
pop
les
lock
xor
xor
pop
and
cdq
mov
mov
pop
ins
cmp
and
or
out
cdq
int
xchg
test
sbb
lock
iret
out
les
xchg
jb
call
stos
mov
inc
sub
push
in
lods
pop
enter
sahf
in
repnz
repz
pop
mov
or
(bad)
jmp
ds
adc
sub
mov
cmp
sub
ret
ss
push
inc
es
push
xor
jmp
(bad)
(bad)
fisttp
stc
rol
js
lock
nop
popf
pushf
in
call
jp
imul
rcr
mov
(bad)
repnz
cmp
or
mov
es
mov
or
pop
or
ja
int3
push
fild
rcr
adc
pop
mov
mov
jbe
push
psubb
mov
and
sbb
aam
rol
inc
jmp
cmp
add
aad
scas
fimul
mov
cld
repnz
outs
int
lahf
and
lods
cli
cmp
xor
adc
cmp
inc
test
mov
in
scas
test
call
mov
jne
ja
cmp
push
xor
dec
sub
int3
jle
pushf
xchg
fnstenv
call
stos
push
cmp
js
mov
bound
outs
mov
sub
xchg
sahf
pop
stc
push
push
std
scas
jg
mov
(bad)
and
loopne
mov
stos
out
lds
cmps
mov
cmp
jno
cwde
fxch
movs
call
retf
pop
dec
test
mov
ds
loope
add
je
dec
jns
cmp
xor
and
aam
lock
fild
test
or
sub
dec
mov
fisub
fdivr
pop
sub
repnz
pusha
pop
or
lds
les
jae
sub
adc
mov
mov
arpl
cmp
ss
xchg
(bad)
push
hlt
popf
inc
add
sbb
or
mov
mov
jl
stos
pop
in
xor
push
mov
lods
xchg
(bad)
nop
push
xor
sub
jbe
and
rcr
xor
mov
aaa
sar
stos
push
mov
xor
fsubr
and
add
push
dec
cmp
dec
stos
cld
cmp
mov
lea
lods
popa
sub
test
push
fnstsw
inc
or
push
mov
jl
xchg
pop
shr
arpl
ficomp
inc
mov
or
xor
xor
out
mov
sub
jno
movs
mov
movs
sbb
mov
push
xchg
and
inc
jnp
jge
xor
sub
add
test
retf
es
xchg
inc
cmps
pusha
mov
cdq
out
dec
loopne
and
sbb
mov
frstor
(bad)
jge
push
mov
sbb
jmp
popa
fidivr
jge
aad
test
and
jmp
rol
add
inc
jge
leave
mov
jmp
cmp
jne
fimul
push
outs
popf
in
jg
cmp
in
push
imul
sbb
aam
arpl
xchg
sahf
sbb
leave
into
inc
test
inc
mul
jg
xor
clc
push
adc
cmp
ror
ins
stc
ffreep
cmps
(bad)
xor
(bad)
daa
fnstenv
(bad)
loopne
sar
dec
dec
ror
jl
add
xor
movs
or
pop
repnz
repz
fistp
daa
mov
and
cs
pop
cmp
dec
lock
sbb
clc
aad
popa
or
scas
mov
(bad)
int
mov
xor
sbb
push
popf
test
cwde
movs
sub
inc
xor
dec
inc
shr
cmp
das
mov
aad
stos
sub
aam
outs
mov
outs
xor
add
lea
fadd
nop
test
imul
test
push
push
bound
dec
cmps
sub
iret
(bad)
push
jg
aam
mov
fbstp
fdivr
hlt
mov
pop
cmp
sbb
je
js
add
mov
sub
push
scas
(bad)
jge
sbb
arpl
mov
mov
lea
mov
adc
or
in
jmp
not
dec
push
mov
sub
ss
addr16
push
dec
in
cli
cmp
mov
jmp
jg
xchg
retf
(bad)
jno
fcmovnu
or
(bad)
push
sbb
jno
jmp
in
mov
or
and
(bad)
mov
and
pop
pusha
clc
xor
cmp
out
jmp
dec
jl
fidiv
sub
enter
push
outs
sti
fstp
popa
fnstenv
mov
imul
out
(bad)
jae
loope
je
cmps
push
mov
xor
dec
push
mov
in
dec
into
imul
jmp
(bad)
fimul
add
and
lods
mov
mov
int
test
sub
xchg
movs
xor
addr16
in
sahf
rcr
frstor
mov
mov
adc
int
aas
gs
mov
fld
sar
mov
aad
sbb
dec
movs
jns
cs
inc
ret
jle
jl
sub
popf
push
xchg
icebp
push
jae
js
nop
dec
inc
push
sbb
xchg
or
mov
retf
pop
pop
sbb
jmp
dec
pop
test
sub
sub
push
or
cmp
push
inc
cli
int3
fild
and
fldl2t
imul
das
loop
sub
and
push
xchg
sbb
sub
cmps
jbe
loope
int3
cdq
cld
test
inc
pop
lods
or
lods
and
in
or
in
cmps
mov
inc
dec
or
cmp
push
cmp
(bad)
cld
out
push
into
call
or
scas
stos
(bad)
cmp
cmp
or
mov
jle
rcl
pop
and
ds
cmps
jns
int3
xchg
in
pushf
push
int
in
daa
inc
(bad)
push
or
push
es
daa
cmp
jl
sbb
pop
push
retf
ins
pop
mov
mov
ds
push
xchg
mov
sbb
cmp
xor
mov
sub
dec
js
out
call
pop
or
sbb
sub
sub
pop
pop
pushf
jmp
push
xlat
sbb
jmp
ja
push
mov
in
test
mov
pop
jnp
imul
cmp
dec
pop
sub
test
pop
inc
lea
jmp
cmp
test
(bad)
stc
dec
inc
call
loope
or
mov
arpl
cdq
pop
jno
std
icebp
jge
clc
push
dec
in
dec
mov
into
fwait
ds
stc
lods
jo
in
fwait
sbb
js
push
or
fwait
mov
ins
cmps
xor
or
jge
mov
stos
data16
mov
loope
sbb
gs
rcl
adc
fimul
idiv
add
scas
shl
dec
pop
mov
loope
xor
mov
cwde
ja
and
fisubr
cmp
loop
push
ins
cmp
pushf
mov
sbb
cmp
ret
popf
push
es
and
sbb
mov
xchg
das
imul
jne
or
rcr
sbb
dec
cmp
fwait
jnp
test
ins
cmp
lds
test
sub
or
stc
dec
add
pop
lea
mov
pop
adc
mov
push
stc
ins
mov
push
lds
leave
aaa
jo
inc
ror
cmp
sub
push
idiv
jmp
push
or
jmp
sbb
cmp
je
or
mov
into
loope
and
ja
ins
sub
push
push
or
sub
jmp
out
aad
pop
add
movs
jmp
cld
cmps
test
push
leave
pop
scas
loope
(bad)
mov
jmp
inc
mov
icebp
push
mov
sub
test
outs
cmp
das
mov
xchg
inc
and
(bad)
in
dec
sub
retf
(bad)
xchg
iret
cmp
xchg
dec
sub
popf
pop
xchg
cld
sbb
push
inc
lock
bound
mov
(bad)
repnz
mov
adc
and
xor
pop
mov
retf
mov
into
push
jmp
cdq
dec
jns
xchg
jmp
mov
jle
dec
sbb
repz
retf
ret
leave
stc
mov
xor
jge
(bad)
sub
pop
in
call
adc
inc
jmp
add
js
fstp
in
mov
inc
add
lods
xchg
test
sub
int
jns
jmp
jb
pusha
add
jnp
and
mov
dec
or
cwde
adc
cvttps2pi
je
cmp
jp
in
inc
push
cs
jmp
cmp
iret
jmp
mov
push
sub
dec
or
fisttp
aas
les
leave
inc
cmps
lods
xor
movs
sub
mov
out
shl
sub
sub
mov
loopne
mov
cmc
test
and
aad
sub
push
push
cmp
and
jmp
enter
pop
imul
(bad)
mov
push
dec
mov
(bad)
or
leave
xor
or
lods
mov
jmp
sub
pop
in
xchg
or
mov
fmul
push
(bad)
sbb
outs
enter
lods
ins
cmp
mov
in
and
out
daa
push
or
int
mov
outs
out
outs
push
(bad)
les
xchg
pop
jl
inc
mov
mov
mov
mov
jmp
leave
aad
into
pushf
sar
jle
arpl
add
test
sbb
jmp
je
cdq
xor
test
mov
mov
jne
sbb
fbld
sub
sub
(bad)
leave
mov
leave
mov
stos
push
cmp
mov
pop
pop
(bad)
or
scas
mov
lea
(bad)
js
aaa
fwait
add
mov
jo
jmp
clc
mov
fcom
(bad)
xor
xchg
(bad)
fnstcw
inc
repnz
ja
test
in
mov
dec
xor
rcr
repnz
cmc
shr
enter
ja
jne
call
test
rcl
test
or
or
xchg
mov
mov
ds
lock
rol
lea
sbb
loop
retf
out
fdivrp
and
ds
stos
pop
dec
aad
dec
int
push
sub
in
xor
gs
push
jp
or
jle
shl
scas
shl
inc
sub
add
dec
inc
cmp
aaa
mov
push
mov
sub
loope
cld
leave
sbb
mov
or
xor
or
mov
cmc
int3
mov
in
fldenv
data16
push
cmp
xchg
sbb
in
out
iret
daa
loop
add
jmp
in
pop
cmp
or
outs
xor
xchg
and
pop
mov
repz
xor
retf
adc
add
shr
stos
push
fld
adc
inc
imul
imul
inc
push
call
mov
into
pop
cs
xor
or
dec
in
sub
jno
or
call
mov
ins
inc
(bad)
xlat
(bad)
out
call
jl
mov
sti
clc
aas
or
xor
mov
cs
jbe
(bad)
mov
or
es
jne
mov
out
push
push
inc
pop
push
mov
jmp
repnz
sub
xor
and
cli
pushf
fistp
xor
jne
call
jns
mov
int
sbb
xor
mov
std
mov
xor
(bad)
retf
push
lahf
and
lahf
jnp
adc
stos
push
xor
jne
jle
inc
mov
inc
adc
mov
mov
repz
mov
jne
and
call
xchg
rcl
popa
mov
movs
xchg
push
rol
loope
xchg
xchg
daa
sahf
test
xchg
loopne
inc
lods
inc
or
mov
and
pop
add
pop
xor
add
popf
in
or
or
nop
sbb
dec
pop
ins
xor
pop
or
push
dec
aas
lods
or
jae
jno
xchg
ret
and
sbb
aaa
cmp
lds
add
pop
inc
pop
movs
repz
mov
pop
test
sbb
lods
call
test
mov
mov
xchg
jl
mov
add
outs
icebp
lods
loope
and
cmc
fdivr
mov
sbb
xchg
int
pusha
int3
sbb
and
jl
iret
leave
test
mov
jnp
or
std
jmp
clc
sub
ret
pop
xchg
popa
scas
mov
std
(bad)
(bad)
push
pop
stos
pop
jl
and
leave
js
cmp
repz
stos
call
neg
dec
stos
and
movaps
fcmovnbe
test
test
rcl
pop
sub
jbe
fcom
pop
fsub
cwde
imul
js
es
jo
mov
push
test
std
jg
cwde
sub
xor
vmwrite
shl
test
cmc
jl
loopne
je
lods
movs
inc
cmp
out
loope
pop
clc
cdq
sbb
and
repz
inc
nop
or
inc
inc
push
out
pushf
mov
test
je
push
sub
push
sub
jns
mov
sub
loopne
test
(bad)
push
mov
cwde
sbb
mov
inc
xor
xlat
adc
stos
push
sbb
daa
imul
or
mov
js
(bad)
adc
out
clc
dec
mov
inc
inc
pop
jmp
sub
out
test
ret
in
cmc
repz
aad
es
xor
mov
pop
pusha
outs
mov
cmc
rol
pop
fnstenv
and
cdq
test
imul
push
(bad)
jecxz
and
out
mov
dec
pop
push
pop
imul
repnz
test
sti
xor
mov
nop
and
push
xchg
scas
aaa
idiv
jmp
xor
or
add
pop
cmp
cmp
sub
imul
cs
ds
mov
jle
dec
mov
jmp
outs
dec
adc
mov
das
push
in
mov
les
sub
adc
std
aam
ins
cmps
push
fbstp
push
push
mov
push
ficom
and
test
push
ret
mov
clc
pop
mov
xor
pop
loopne
repz
dec
xchg
mov
xchg
jno
gs
cld
repnz
jge
jp
sub
mov
cmp
sbb
jg
loop
fadd
stos
mov
mov
fiadd
repnz
mov
add
movaps
push
popf
lahf
push
push
rcl
fucomp
mov
push
push
jmp
adc
adc
add
sahf
inc
push
xor
ror
int3
scas
fptan
push
pop
or
pop
ins
add
sbb
add
stc
loopne
sbb
fsub
aam
push
nop
xlat
mov
into
inc
mov
dec
xchg
pop
jl
or
rcl
xchg
push
sub
sub
mov
sub
mov
mov
ins
push
sahf
(bad)
pop
xor
inc
dec
sub
or
inc
lahf
int3
es
sbb
jbe
test
bound
dec
clc
dec
imul
jnp
je
std
inc
pop
or
in
fsub
sub
and
fcmovb
mov
in
push
clc
aad
dec
cmp
cmp
cli
dec
test
mov
jnp
add
gs
arpl
sub
inc
pop
push
mov
imul
dec
mov
and
sub
mov
jp
data16
jg
enter
ins
jns
sub
movs
xlat
xor
mov
adc
xor
mov
(bad)
call
loopne
test
mov
pop
and
call
pop
mov
mov
mov
inc
jns
adc
rol
sbb
out
adc
int3
inc
lea
jmp
cs
hlt
xor
dec
cmps
repnz
lea
jecxz
add
dec
(bad)
or
rcr
xchg
inc
sbb
imul
aam
pop
lahf
fwait
stos
std
fild
cmc
jo
fld
add
cmps
ficomp
add
test
jp
ret
aam
movs
std
fistp
popa
mov
ds
nop
pop
jle
add
jne
inc
mov
dec
sub
or
js
and
xchg
xchg
mov
jge
mov
sahf
mov
pop
cs
imul
push
or
cmp
in
shr
push
js
cmc
or
jns
call
xor
dec
inc
mov
pop
add
iret
jns
scas
dec
lea
outs
cmps
or
xchg
out
sbb
cld
ror
add
inc
sbb
dec
scas
dec
and
es
call
sti
mov
pop
aaa
sbb
rcr
les
fld
test
ss
cmp
mov
ret
fsub
adc
dec
daa
and
dec
into
sub
lea
jo
add
inc
in
dec
jne
aas
sbb
dec
jg
pusha
hlt
or
adc
lods
sub
or
jns
loop
call
jg
jns
ja
sbb
sub
xor
push
sbb
jae
push
push
sahf
xchg
fs
adc
in
shr
sub
pop
(bad)
pop
call
dec
add
in
cmp
sub
jmp
xchg
sub
es
fistp
cmp
ins
jp
movs
push
in
ins
jne
ret
add
inc
sar
sub
xchg
cli
sub
mov
mov
stc
lahf
xchg
adc
jg
nop
jo
dec
pushf
stos
fidiv
pop
adc
xchg
ficom
shl
push
cmp
pop
mov
or
ja
sbb
mov
stc
push
push
repz
push
xor
mov
push
mov
retf
es
jbe
cmps
(bad)
sar
push
or
fistp
loop
in
dec
jmp
mov
push
sub
push
xor
push
xchg
scas
mov
test
das
adc
lods
stc
adc
cmp
cmc
cmps
les
mov
push
pop
aas
popf
xchg
scas
scas
repz
add
icebp
dec
jne
adc
in
jne
push
mov
fidiv
aas
push
out
pop
repz
out
mov
sti
push
es
and
jg
lods
retf
sbb
cmps
sbb
leave
jecxz
call
pop
xor
pop
mov
mov
fsub
repnz
fistp
je
jp
retf
hlt
mov
cmp
mov
cdq
cmp
adc
loopne
cmps
add
cmp
jo
mov
in
in
sub
sub
in
mov
aaa
and
jl
aaa
xchg
(bad)
loop
(bad)
dec
mov
lods
out
inc
outs
loope
stc
cmps
sti
cwde
jo
jge
lods
es
daa
xchg
adc
jb
dec
adc
jnp
push
lods
cdq
fmul
mov
(bad)
sub
and
lock
cmp
stc
out
retf
imul
sti
jns
fist
(bad)
cmp
jnp
vpsubw
jae
addr16
xchg
jmp
clc
scas
clc
test
stos
push
sbb
or
mov
scas
mov
in
sbb
xchg
dec
pop
lahf
mov
cwde
dec
add
push
cmp
stos
or
jl
mov
mov
dec
dec
push
sbb
jg
shr
test
ins
or
inc
popf
cs
lods
outs
jl
mov
fadd
call
rcr
cmp
add
call
nop
adc
jae
sub
mov
ins
imul
pusha
lods
jmp
sub
pushf
inc
bound
test
inc
add
neg
sub
loopne
mov
adc
mov
xor
jb
push
(bad)
retf
cmp
clc
ficom
stc
in
mov
push
ret
mov
xor
push
cdq
mov
dec
sub
mov
mov
mov
mov
je
mov
into
inc
push
sbb
dec
daa
shr
fucom
(bad)
sbb
frstor
mov
int
add
mov
retf
mov
cdq
inc
cmp
rcr
push
hlt
dec
push
stos
sub
dec
fild
sub
and
retf
fimul
xor
movs
sub
jbe
cmps
sbb
dec
jnp
loopne
mov
xchg
dec
dec
retf
mov
cmp
movs
dec
lods
out
jo
cli
cmc
pop
sub
stc
fcom
xchg
pop
out
jmp
hlt
pop
arpl
mov
js
sub
dec
push
in
aaa
sbb
inc
jp
and
dec
fs
sbb
mov
sar
lods
add
out
push
fild
leave
or
lock
popa
inc
sbb
inc
or
mov
test
dec
(bad)
clc
dec
and
mov
(bad)
xor
fimul
inc
enter
add
ret
xchg
dec
(bad)
mov
(bad)
adc
mov
repnz
in
std
xchg
mov
test
pop
ins
idiv
xchg
push
or
adc
lods
pop
iret
pop
jne
sbb
popf
add
pop
(bad)
mov
inc
(bad)
cld
aam
test
in
inc
mov
jno
mov
dec
test
mov
inc
cdq
and
mov
stos
dec
shr
(bad)
and
je
sub
and
pop
mov
dec
lods
adc
test
loopne
clc
pop
in
xor
add
lock
adc
leave
dec
sub
jbe
and
fst
call
push
paddsw
lock
or
ins
dec
int3
cwde
ret
add
fstp
stc
xor
pop
out
hlt
xor
ror
jb
loope
or
jge
jne
cmp
xor
ficomp
rcl
pop
popf
push
repz
and
ds
pop
in
push
cmp
push
(bad)
out
pop
pusha
in
in
or
dec
push
retf
dec
mov
mov
mov
cmp
sbb
sar
or
in
mov
repnz
jl
sbb
rcr
or
mov
mov
not
loope
push
imul
push
add
(bad)
std
xlat
ins
sub
sbb
(bad)
enter
sbb
or
in
mov
pop
sub
in
mov
pop
sub
in
mov
pop
mov
cwde
ss
in
cdq
(bad)
or
sub
mov
or
cdq
int3
or
cdq
int3
or
cdq
int3
pmulhuw
int3
bswap
cdq
int3
cmpps
(bad)
cdq
or
cdq
pop
in
mov
dec
cdq
cmp
aam
dec
in
in
stos
pop
scas
cmps
mov
fisubr
cld
scas
jp
or
loop
int3
cdq
jp
jmp
jne
cmp
mov
mov
mov
add
sub
add
add
mov
mov
mov
add
sub
add
add
add
add
mov
mov
mov
sub
add
add
sub
sub
sub
add
add
sub
sub
sub
add
sub
add
mov
mov
mov
sub
sub
sub
add
add
sub
add
sub
add
sub
mov
mov
mov
add
add
sub
add
sub
add
sub
add
mov
mov
mov
sub
sub
add
add
add
add
sub
sub
add
add
mov
mov
mov
sub
add
sub
add
sub
add
sub
sub
sub
add
mov
mov
mov
add
add
add
sub
sub
sub
add
add
mov
mov
mov
add
sub
sub
add
sub
add
sub
add
sub
add
mov
mov
mov
sub
sub
add
sub
add
sub
add
sub
mov
mov
mov
sub
sub
add
sub
add
add
sub
add
sub
sub
mov
mov
mov
sub
sub
add
sub
sub
add
sub
sub
mov
mov
mov
sub
add
sub
add
add
add
add
add
mov
mov
mov
sub
sub
add
sub
sub
add
add
add
add
sub
mov
mov
mov
add
sub
sub
add
add
sub
sub
add
add
sub
sub
add
add
sub
add
sub
mov
mov
mov
sub
sub
sub
add
add
add
add
add
mov
mov
mov
add
sub
add
sub
add
sub
mov
mov
mov
sub
add
add
sub
add
add
mov
mov
mov
sub
sub
add
add
add
sub
sub
add
add
add
add
add
mov
mov
mov
add
sub
add
add
mov
mov
mov
sub
sub
sub
add
add
sub
add
add
sub
sub
add
add
add
sub
mov
mov
mov
sub
sub
sub
sub
add
add
sub
add
add
add
add
sub
sub
sub
sub
sub
mov
mov
mov
add
add
add
add
sub
add
add
add
mov
mov
mov
sub
sub
sub
sub
add
add
add
sub
mov
mov
mov
add
sub
add
sub
sub
add
add
sub
add
add
add
sub
add
add
mov
mov
mov
sub
sub
add
sub
mov
mov
mov
sub
sub
sub
sub
add
sub
sub
sub
sub
sub
mov
mov
mov
sub
sub
sub
add
add
sub
sub
sub
add
add
sub
add
sub
add
mov
mov
mov
add
sub
sub
add
sub
add
sub
add
add
add
sub
sub
sub
sub
sub
sub
mov
mov
mov
sub
add
add
sub
sub
sub
sub
add
sub
add
mov
mov
mov
sub
sub
add
sub
add
sub
sub
add
add
sub
add
add
add
sub
mov
mov
mov
add
sub
sub
sub
add
sub
sub
add
sub
add
sub
sub
sub
sub
add
sub
add
sub
mov
mov
mov
sub
add
add
sub
add
sub
sub
add
add
sub
mov
mov
mov
sub
sub
sub
sub
sub
sub
add
add
sub
sub
add
add
add
add
sub
sub
sub
sub
mov
mov
mov
sub
sub
sub
add
add
sub
add
sub
add
sub
mov
mov
mov
sub
add
sub
sub
add
sub
add
sub
add
sub
mov
mov
mov
sub
add
sub
add
add
sub
sub
add
sub
add
mov
mov
mov
sub
add
sub
add
add
add
add
add
add
sub
add
sub
add
sub
mov
mov
mov
add
sub
add
add
add
sub
add
sub
mov
mov
mov
add
add
add
add
mov
mov
mov
add
add
sub
add
sub
sub
add
add
add
add
mov
mov
mov
add
sub
sub
sub
add
add
sub
add
add
add
mov
mov
mov
sub
sub
sub
add
add
add
add
add
mov
mov
mov
sub
add
sub
sub
add
sub
sub
add
sub
sub
sub
add
sub
add
sub
sub
sub
sub
mov
mov
mov
sub
add
sub
sub
sub
add
sub
sub
sub
add
mov
mov
mov
add
add
sub
add
sub
add
sub
add
sub
add
add
add
add
add
mov
mov
mov
sub
add
sub
add
sub
add
add
sub
sub
sub
add
sub
sub
sub
mov
mov
mov
sub
add
sub
sub
add
add
add
sub
add
sub
mov
mov
mov
add
sub
sub
add
sub
add
sub
add
mov
mov
mov
sub
add
sub
sub
add
sub
sub
sub
mov
mov
mov
sub
add
add
add
add
add
sub
add
sub
add
mov
mov
mov
sub
sub
sub
add
sub
sub
mov
mov
mov
sub
sub
sub
add
sub
sub
add
add
sub
add
add
add
sub
add
mov
mov
mov
sub
sub
sub
sub
sub
add
add
add
sub
sub
mov
mov
mov
add
add
sub
sub
add
add
add
add
mov
mov
mov
sub
sub
sub
sub
add
sub
sub
sub
mov
mov
mov
add
sub
sub
sub
add
sub
sub
sub
sub
sub
mov
mov
mov
add
add
sub
sub
sub
sub
sub
sub
sub
add
mov
mov
mov
sub
sub
sub
add
mov
mov
mov
sub
sub
sub
sub
sub
sub
add
sub
add
sub
add
add
sub
add
sub
sub
mov
mov
mov
add
sub
add
add
add
sub
add
add
add
add
mov
mov
mov
add
add
add
add
mov
mov
mov
sub
add
add
sub
sub
add
sub
add
sub
sub
add
sub
sub
add
mov
mov
mov
sub
sub
sub
add
add
sub
sub
add
sub
add
sub
add
sub
sub
sub
add
mov
mov
mov
sub
sub
add
sub
sub
sub
add
add
add
add
add
add
add
sub
mov
mov
mov
add
sub
sub
add
sub
add
add
add
add
add
mov
mov
mov
add
sub
add
sub
add
sub
add
sub
mov
mov
mov
sub
add
add
add
mov
mov
mov
sub
sub
add
add
sub
sub
add
sub
sub
sub
sub
sub
add
add
sub
add
sub
add
mov
mov
mov
sub
add
add
sub
sub
sub
add
add
sub
add
add
sub
add
add
mov
mov
mov
sub
add
add
add
add
sub
sub
sub
add
add
mov
mov
mov
add
add
add
sub
sub
sub
sub
add
add
sub
sub
sub
sub
add
sub
sub
mov
mov
mov
add
sub
sub
sub
add
add
add
add
sub
add
add
add
sub
sub
add
sub
add
add
mov
mov
mov
add
sub
sub
sub
add
sub
add
add
add
add
add
sub
mov
mov
mov
sub
sub
add
add
add
add
sub
sub
sub
sub
sub
sub
sub
sub
mov
mov
mov
sub
sub
sub
add
sub
add
sub
add
sub
add
mov
mov
mov
sub
sub
add
sub
sub
add
sub
add
mov
mov
mov
add
add
add
add
add
add
add
add
mov
mov
mov
sub
sub
sub
sub
add
sub
add
add
sub
sub
sub
sub
mov
mov
mov
add
add
add
add
add
add
mov
mov
mov
add
add
sub
sub
add
add
add
add
mov
mov
mov
add
add
add
sub
sub
add
sub
sub
add
sub
add
add
add
add
mov
mov
mov
sub
add
add
add
sub
sub
add
add
add
add
mov
mov
mov
sub
add
add
add
sub
sub
sub
add
sub
add
mov
mov
mov
add
sub
sub
sub
add
sub
add
add
sub
sub
add
sub
mov
mov
mov
sub
sub
sub
add
add
add
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
mov
mov
mov
add
add
add
sub
add
add
sub
sub
add
sub
add
add
sub
add
add
sub
mov
mov
mov
add
sub
sub
sub
add
add
add
add
mov
mov
mov
sub
add
add
sub
add
add
sub
add
sub
add
mov
mov
mov
sub
sub
add
sub
add
sub
sub
sub
add
sub
sub
add
sub
sub
mov
mov
mov
sub
sub
sub
sub
sub
add
sub
add
mov
mov
mov
add
sub
sub
sub
add
sub
sub
add
add
sub
mov
mov
mov
sub
add
add
add
sub
sub
sub
add
sub
add
mov
mov
mov
sub
add
sub
sub
sub
add
mov
mov
mov
add
add
sub
add
add
sub
sub
add
sub
sub
add
add
mov
mov
mov
sub
add
add
add
add
add
mov
mov
mov
sub
add
sub
add
add
sub
sub
add
add
sub
sub
add
sub
add
mov
mov
mov
add
sub
sub
add
add
add
sub
sub
sub
add
mov
mov
mov
add
sub
sub
add
sub
sub
add
sub
sub
sub
add
add
add
sub
add
add
mov
mov
mov
add
sub
add
sub
sub
sub
add
add
sub
sub
add
sub
add
add
add
add
add
add
mov
mov
mov
sub
sub
sub
sub
sub
add
sub
sub
sub
add
sub
add
mov
mov
mov
sub
sub
add
sub
sub
add
sub
add
mov
mov
mov
add
sub
sub
sub
add
sub
add
sub
mov
mov
mov
sub
add
sub
add
sub
add
sub
add
mov
mov
mov
sub
sub
add
add
add
sub
add
sub
sub
add
add
add
add
add
mov
mov
mov
sub
sub
sub
sub
sub
add
sub
add
sub
add
sub
sub
sub
add
sub
sub
sub
add
mov
mov
mov
sub
sub
sub
sub
sub
sub
sub
sub
add
add
add
sub
add
sub
mov
mov
mov
add
add
sub
sub
add
add
sub
add
add
add
mov
mov
mov
add
add
add
sub
sub
sub
add
add
mov
mov
mov
sub
sub
add
sub
add
sub
mov
mov
mov
sub
add
sub
add
sub
sub
add
sub
add
sub
sub
sub
add
add
add
add
mov
mov
mov
sub
sub
add
add
sub
sub
sub
add
add
sub
add
add
mov
mov
mov
add
add
add
add
sub
add
sub
add
sub
sub
sub
sub
add
sub
sub
add
mov
mov
mov
sub
add
sub
sub
add
sub
sub
add
add
add
mov
mov
mov
add
sub
sub
sub
add
sub
add
sub
sub
add
add
add
add
add
mov
mov
mov
add
sub
add
sub
sub
add
sub
sub
sub
add
add
add
sub
sub
add
sub
mov
mov
mov
add
sub
sub
sub
add
add
sub
sub
sub
sub
sub
sub
add
sub
sub
add
sub
sub
mov
mov
mov
sub
sub
sub
sub
sub
add
sub
sub
mov
mov
mov
add
add
add
sub
sub
add
add
add
mov
mov
mov
sub
sub
sub
sub
add
sub
sub
add
sub
add
sub
add
mov
mov
mov
add
sub
add
add
sub
sub
add
sub
sub
sub
add
sub
mov
mov
mov
sub
sub
add
add
add
add
add
add
add
sub
add
sub
add
sub
sub
sub
add
add
mov
mov
mov
sub
add
add
sub
sub
sub
sub
add
sub
add
mov
mov
mov
sub
sub
sub
add
add
add
add
sub
add
add
mov
mov
mov
sub
sub
add
add
add
add
sub
add
add
sub
add
sub
mov
mov
mov
add
add
add
add
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
mov
mov
mov
sub
sub
sub
sub
sub
sub
mov
mov
mov
sub
add
sub
add
mov
mov
mov
sub
sub
sub
sub
add
add
add
add
add
add
mov
mov
mov
add
sub
add
sub
sub
add
add
add
sub
sub
sub
sub
add
sub
mov
mov
mov
add
add
add
sub
sub
sub
sub
sub
add
sub
sub
sub
sub
add
sub
sub
mov
mov
mov
sub
sub
sub
sub
add
add
add
add
add
sub
mov
mov
mov
add
sub
sub
add
sub
add
add
add
sub
add
mov
mov
mov
add
sub
sub
add
add
add
add
sub
sub
sub
sub
sub
sub
sub
mov
mov
mov
add
sub
add
sub
mov
mov
mov
sub
sub
sub
sub
sub
add
sub
sub
add
add
sub
sub
sub
sub
mov
mov
mov
add
add
sub
sub
add
add
add
sub
add
sub
mov
mov
mov
add
sub
add
sub
add
add
sub
sub
add
sub
sub
sub
add
sub
sub
sub
add
sub
mov
mov
mov
sub
sub
sub
add
mov
mov
mov
sub
add
add
add
sub
sub
sub
add
sub
add
mov
mov
mov
add
add
add
add
add
sub
add
add
mov
mov
mov
sub
sub
sub
sub
add
add
sub
add
mov
mov
mov
sub
sub
sub
sub
sub
add
sub
sub
mov
mov
mov
sub
sub
sub
add
sub
sub
add
sub
add
add
add
add
mov
mov
mov
sub
sub
sub
sub
sub
sub
add
add
add
sub
sub
sub
add
sub
add
add
add
sub
mov
mov
mov
sub
add
sub
sub
add
add
sub
add
add
add
add
add
add
add
mov
mov
mov
sub
sub
sub
sub
sub
sub
add
sub
add
add
mov
mov
mov
sub
sub
sub
add
add
sub
sub
add
sub
add
mov
mov
add
sub
sub
add
add
add
call
ret
