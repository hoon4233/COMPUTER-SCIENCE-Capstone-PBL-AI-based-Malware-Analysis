sbb
add
mov
push
stc
pop
xlat
pop
leave
lahf
cmps
mov
push
push
call
cld
bound
cs
cmc
inc
jmp
lods
add
pop
fwait
cmp
jecxz
in
xor
xchg
inc
mov
pop
jb
mov
jnp
push
adc
jno
push
scas
repz
js
mov
add
mov
repnz
push
inc
aas
xor
jle
inc
xchg
pop
dec
fs
popf
out
adc
aad
imul
mov
add
mov
cli
xor
xor
out
add
mov
push
inc
pop
test
ficomp
loop
push
movs
loopne
adc
dec
fsubr
cmps
pop
loope
or
or
or
aad
mov
(bad)
int3
cdq
pop
stc
mov
dec
mov
sub
add
mov
sub
imul
pop
fadd
or
repz
outs
xchg
dec
dec
lahf
push
loopne
loope
xor
mov
sbb
sub
js
iret
or
mov
scas
stos
pushf
hlt
inc
mov
ins
push
jl
iret
es
jge
fld
bnd
gs
cmp
popf
dec
lock
ds
popf
lahf
xor
sub
cmps
add
dec
push
shl
lahf
add
in
cmp
cli
or
je
retf
shr
out
js
(bad)
in
pop
leave
idiv
inc
pop
push
mov
movs
fsub
mov
cmps
je
int
mov
ja
test
rol
ret
aaa
inc
adc
add
add
push
retf
push
fsub
sbb
mov
movs
in
jge
lds
cmp
cmp
call
and
xchg
mov
cmp
sub
cmps
push
inc
xchg
mov
cmps
arpl
lods
pop
rcr
test
sub
ds
mov
mov
test
int
sub
mov
xor
sbb
icebp
ret
(bad)
int3
inc
mov
bound
(bad)
fldcw
repnz
xor
mov
inc
inc
cmps
pusha
xchg
pop
mov
mov
retf
dec
aam
fnstenv
adc
or
jb
pushf
add
loope
movs
cmp
aam
mov
adc
je
xor
sbb
cld
pusha
test
(bad)
mov
pushf
mov
int
sahf
test
mov
mov
rol
push
cmp
daa
call
clc
fld1
std
push
(bad)
jae
cs
sbb
loope
cli
nop
int3
out
add
arpl
push
fs
hlt
lods
cli
pop
addr16
inc
outs
lods
jae
mov
adc
movs
adc
mov
out
aad
pop
es
or
xchg
les
ds
jne
sub
(bad)
cmp
push
sub
xor
xor
xor
mov
test
xchg
sbb
cmc
push
test
mov
cmp
xor
sbb
cs
daa
je
xor
js
imul
mov
add
enter
ss
xchg
sub
test
or
adc
xlat
inc
js
mov
clc
jle
and
loope
mov
dec
dec
aas
xchg
and
in
(bad)
das
mov
aad
imul
ror
push
int3
loop
aaa
pop
adc
mov
inc
daa
ss
inc
into
or
div
pop
movs
lock
add
xchg
jb
hlt
pop
sbb
lahf
dec
mov
pop
hlt
mov
loopne
test
push
iret
clc
vorps
fiadd
push
jg
mov
aam
cmp
out
in
push
or
scas
out
sbb
sub
int3
mov
mov
dec
pusha
push
int
stos
add
mov
jae
ins
gs
and
cmps
nop
pop
fcom
mov
or
sub
ins
leave
inc
inc
jae
adc
sar
and
out
clc
push
mov
dec
fidivr
xlat
dec
xchg
ja
icebp
ja
xchg
retf
call
cmp
call
repnz
jl
xor
mov
jmp
mov
rcl
not
int
jmp
xchg
xor
mov
popa
sbb
mov
jp
mov
cdq
xchg
jo
mov
xor
add
jmp
dec
dec
pop
sbb
pop
dec
out
ret
and
sbb
shr
jl
dec
mov
adc
mov
sbb
jmp
mov
pop
lds
pop
push
pop
pop
(bad)
xchg
dec
mov
retf
adc
loopne
loope
adc
sbb
clc
in
lock
pop
stc
repnz
push
lock
mov
das
sbb
aad
hlt
(bad)
(bad)
fldl2t
mov
jmp
daa
not
in
sub
xor
fstp
or
adc
es
jnp
dec
rcr
ins
into
aaa
pusha
mov
(bad)
or
stos
(bad)
out
xor
mov
mov
loopne
pop
arpl
pushf
lock
or
fist
cmp
cmps
pop
out
mov
in
inc
(bad)
out
jle
mov
sti
pop
pop
jo
aad
jnp
push
push
mul
lods
call
daa
sbb
sbb
fcomp
add
xchg
sub
ret
fistp
fs
je
xor
jmp
mov
push
cmc
je
push
movs
pop
es
imul
sbb
xor
iret
cld
(bad)
lock
ret
xchg
retf
mov
cmps
popf
retf
and
es
addr16
loop
sub
rcl
xor
pop
jg
add
leave
out
popa
xchg
outs
inc
push
fadd
idiv
push
(bad)
jb
xchg
and
ins
sbb
fs
imul
outs
xor
out
test
push
cs
hlt
xlat
fsubr
mov
and
push
sar
xchg
test
loopne
mov
data16
adc
push
out
in
popa
mov
js
cmp
sub
xor
cmp
mov
enter
mov
dec
mov
test
add
jmp
(bad)
xchg
add
and
test
nop
lds
adc
mov
push
or
cmps
es
push
test
sbb
sar
out
inc
and
fstp
ds
cdq
xchg
or
cdq
movs
ret
jne
sahf
cmps
mov
mov
ja
cmp
test
test
and
lods
int3
inc
mov
and
push
inc
ucomiss
cmps
sbb
mov
adc
stos
sbb
push
and
popf
enter
cwde
gs
(bad)
in
ror
enter
mov
cdq
test
in
fwait
adc
xor
rol
int
push
or
cmps
and
and
popf
xor
(bad)
(bad)
(bad)
fisub
push
inc
int
push
mov
push
cli
mov
sbb
inc
mov
in
sbb
jg
cmp
clc
mov
aam
test
cli
xor
cmp
cmc
loop
push
jmp
pop
fwait
sbb
aas
jg
(bad)
mov
std
imul
mov
mov
push
jb
stc
sbb
dec
push
adc
jge
mov
push
mov
mov
xchg
outs
mov
jmp
sbb
dec
xchg
mov
sub
sub
scas
sbb
div
lods
push
sub
cmp
shr
in
imul
mov
xchg
xchg
mov
cli
repz
dec
cmp
xlat
cmp
push
aam
sub
push
mov
mov
dec
(bad)
xor
into
movhlps
jg
adc
retf
ss
sbb
pop
jmp
pop
sub
not
(bad)
fmul
lods
fild
xchg
fmul
inc
push
sub
lahf
into
test
xor
jae
daa
in
movs
add
add
or
repz
add
pop
stc
addr16
jae
cdq
add
xchg
add
adc
(bad)
and
and
aas
add
add
inc
push
ins
mov
pushf
out
pop
pop
sbb
aad
push
idiv
shl
aad
dec
xchg
xlat
bnd
daa
addr16
idiv
xor
test
rcl
mov
sub
inc
mov
push
adc
cs
sub
dec
pop
dec
ja
movs
lock
outs
rcl
pop
popa
mov
imul
push
retf
jns
ret
xchg
(bad)
fcom
pop
(bad)
popf
sbb
xlat
mov
jbe
cld
pop
xor
xor
xchg
imul
das
mov
jae
mov
and
jns
and
lds
rcr
or
clc
imul
div
icebp
in
pop
mov
(bad)
(bad)
lock
lock
movs
dec
hlt
push
test
divps
cmp
out
cld
loop
sahf
fcomp
div
aad
stos
in
jp
aas
or
test
loopne
jne
ds
mov
dec
jmp
xor
retf
in
xor
fdiv
cld
pop
popa
sub
lahf
pusha
add
pusha
xor
adc
call
and
dec
push
hlt
dec
ds
push
ror
div
(bad)
or
jb
imul
test
mov
movs
mov
in
and
push
xchg
out
dec
or
mov
mov
jbe
or
pop
or
repz
cmp
nop
shr
jno
xor
push
pop
xchg
sub
mov
fild
and
or
xchg
xchg
daa
mov
rcr
cmc
ins
cmc
xchg
or
out
mov
and
inc
mov
xchg
in
ret
lods
sahf
scas
sub
movs
inc
hlt
mov
pop
inc
mov
xlat
mov
mov
cmps
push
addr16
inc
adc
cld
cli
cli
out
cdq
test
jne
pop
mov
out
inc
or
xor
fnstenv
test
inc
cmp
jno
repz
or
inc
add
jns
mov
fldenv
jg
xor
xchg
inc
dec
jmp
in
mov
test
jmp
sub
pop
xor
cmp
or
leave
adc
pop
push
movs
into
scas
outs
jmp
and
out
cmp
jmp
inc
jmp
or
movs
mov
jno
add
in
rcr
call
add
sbb
or
int3
lea
cmp
test
cmps
jno
sbb
ins
repnz
mov
cdq
jb
xchg
lea
fst
sahf
push
and
ins
sub
or
mov
dec
sub
ds
add
scas
movs
(bad)
stos
in
push
clc
xchg
dec
fldenv
inc
pop
jle
fild
cmp
repz
pusha
inc
loope
movs
inc
dec
xchg
inc
fs
mov
aad
out
out
(bad)
and
cld
jmp
jmp
lock
imul
and
stos
mov
jnp
jmp
int
imul
int3
mov
out
dec
add
(bad)
cmp
xchg
ss
mov
sub
popf
add
push
mov
mov
pop
mov
push
sub
add
jae
mov
cmp
xchg
and
jle
inc
push
xchg
into
lds
fcomip
dec
jnp
sub
mov
jns
cmp
inc
sar
sbb
pop
aam
xchg
test
jns
enter
pop
lea
fwait
xchg
inc
mov
pop
add
push
clc
cld
enter
data16
pop
or
cwde
aad
sbb
rcr
adc
xchg
sub
scas
jp
xor
je
pop
xchg
(bad)
push
cmp
mov
shr
push
std
cdq
fild
mov
and
add
fldenv
daa
movs
clc
imul
push
outs
mov
sbb
cwde
mov
sbb
jmp
rol
cmp
mov
leave
(bad)
push
das
pushw
mov
xor
mov
pop
adc
stos
ror
sbb
lods
adc
test
push
mov
imul
sub
inc
xchg
pop
fdiv
gs
daa
sub
ins
sbb
push
fimul
in
pop
jo
mov
clc
or
mov
and
ret
std
mov
jae
sbb
out
jmp
sub
xchg
xchg
add
pop
(bad)
inc
pop
lds
dec
fidivr
jge
(bad)
lods
loopne
fadd
inc
mov
lods
lahf
push
inc
(bad)
fldcw
jmp
push
adc
mov
pop
or
inc
push
jne
retf
jmp
ror
jmp
push
sar
ss
repz
mov
and
call
inc
dec
sahf
fimul
les
jp
add
ss
sbb
fwait
mov
add
inc
sti
mov
dec
mov
rol
dec
test
(bad)
cmps
aas
dec
push
out
jnp
jle
(bad)
loope
and
mov
cmp
jl
adc
in
arpl
mov
jb
fcomi
ror
xchg
and
call
out
jmp
xor
xor
pop
push
push
and
sbb
and
pop
lahf
push
inc
ins
mov
sbb
mov
cmp
dec
in
xor
movs
int3
add
ret
mov
push
pop
retf
ins
inc
fild
xchg
fsubr
xchg
cmps
test
out
popa
cmps
scas
sub
in
push
popf
cmps
adc
or
jmp
(bad)
sub
add
(bad)
imul
push
int3
jg
inc
repz
jmp
mov
jl
clc
in
sbb
shl
sub
mov
(bad)
test
sbb
sahf
mov
xchg
sub
call
jmp
ss
popa
jns
ins
mov
ss
or
shr
shr
adc
dec
sub
lods
mov
dec
xchg
adc
mov
jns
inc
mov
xor
cmp
jns
mov
imul
stos
pop
fcmovnu
rcl
inc
mov
cmp
inc
ja
adc
mov
call
dec
push
mov
sbb
cmps
test
loop
shl
xchg
ret
dec
loop
lds
hlt
leave
repz
or
stos
cmp
mov
jb
pop
xor
sahf
into
adc
pop
cmps
test
popf
pop
add
mov
loop
mov
movs
test
call
dec
sbb
xchg
out
sub
push
imul
jl
fld
ins
in
mov
out
cmp
mov
mov
lods
mov
test
mov
and
xor
xchg
scas
ret
xor
jae
sub
std
or
js
xchg
(bad)
pop
mov
adc
pop
mov
pop
(bad)
out
out
cmp
cdq
dec
icebp
sbb
push
pop
jo
pop
jg
in
out
aad
in
jge
cld
add
xchg
mov
mov
cdq
fist
in
jle
hlt
inc
aaa
jnp
jbe
fsubr
sbb
jecxz
jb
mov
dec
sub
xor
mov
mov
xor
pusha
xor
repz
jmp
dec
cdq
fnstenv
pop
popa
popf
and
pop
test
cmps
iret
shl
cwde
repnz
outs
xor
dec
mov
jge
pusha
push
aad
xchg
sub
cmp
fs
adc
xchg
aad
mov
mov
jmp
cmp
cmp
and
aad
ret
call
imul
dec
stos
dec
(bad)
stos
dec
test
dec
nop
add
fild
fstp
out
adc
or
fwait
pop
test
mov
mov
xor
test
stos
cli
mov
pop
xor
add
push
inc
scas
lahf
repz
arpl
in
or
push
fcom
lods
pop
pop
mov
xchg
add
add
cmps
dec
and
movs
sar
in
lfs
mov
ins
mov
out
jecxz
les
push
dec
sahf
lock
in
pushw
lods
pop
in
ins
inc
pop
mov
mov
sub
test
inc
jmp
add
sahf
and
sbb
fdivr
mov
sub
mov
mov
fcomp
scas
ficom
cmps
lea
fistp
sub
jb
ret
rcr
fsubrp
imul
rcl
mov
imul
(bad)
jmp
and
lock
int
gs
cmp
add
out
cmp
fstp
stos
cmp
fst
or
inc
xchg
dec
push
mov
into
push
ret
enter
jle
add
test
jbe
xchg
inc
cwde
lea
in
sbb
inc
cld
jg
adc
idiv
push
retf
inc
cmp
ficom
dec
push
xor
retf
push
sub
in
sbb
test
imul
loopne
lods
dec
push
mov
cmp
or
mov
int3
fdiv
add
stc
dec
adc
lds
xor
cmps
ins
add
dec
movs
jne
add
push
or
sti
jmp
sbb
jb
jecxz
sbb
cmp
idiv
cmc
push
jg
xchg
mov
push
sbb
adc
movs
shl
cmps
ja
xchg
cmp
test
ss
enter
int3
fld
fisubr
js
stos
or
or
push
jnp
jmp
xor
aam
test
lock
sbb
iret
xchg
iret
(bad)
jo
mov
das
cmp
xchg
or
pop
pop
mov
xor
les
aad
cs
mov
jns
stc
ja
mov
xchg
cmp
stos
ret
push
(bad)
aaa
cli
inc
je
je
in
xchg
fldenv
ss
sbb
cli
sahf
mov
adc
jmp
jp
jmp
mov
lahf
leave
jo
push
pcmpgtb
cmps
ins
clc
mov
sub
sbb
das
push
call
mov
adc
pop
test
cdq
pop
push
push
retf
clc
dec
jne
push
(bad)
into
inc
xlat
mov
mov
cmp
xor
stos
fcom
mov
cmp
pop
inc
add
cmp
test
imul
sbb
fcmovu
adc
retf
std
cs
aad
push
lods
jle
add
sub
movs
pop
pop
int
(bad)
xor
mov
hlt
dec
cmp
in
outs
cmps
hlt
add
or
(bad)
(bad)
ins
addr16
out
mov
or
mov
sbb
iret
stc
sbb
ss
rol
cs
sbb
mov
adc
sti
cmp
dec
mov
sbb
push
test
lods
mov
fdiv
pop
imul
dec
mov
rcr
adc
or
adc
jne
or
rcl
es
out
sbb
pop
out
mov
fbld
xor
and
sub
fbld
jle
and
(bad)
(bad)
mov
out
mov
stos
out
icebp
add
mov
mov
int3
jne
add
dec
pop
retf
(bad)
ins
mov
lahf
add
(bad)
jge
push
inc
mov
sub
xchg
jecxz
cmps
lds
test
fdiv
call
xor
jmp
pop
(bad)
xchg
iret
jmp
xor
adc
jge
jge
mov
jb
mov
inc
push
popa
in
sub
in
adc
mov
stc
(bad)
adc
mov
test
jge
dec
cmp
cmps
lods
sub
push
out
pop
xor
inc
jo
sbb
jae
jmp
into
jbe
cdq
test
sbb
mov
dec
bnd
neg
cli
mov
test
mov
sbb
pop
bound
add
lods
cmp
inc
je
mov
scas
and
sbb
sbb
jns
fmul
pop
in
lock
mov
xchg
repz
clc
outs
cli
sub
mov
sti
mov
xchg
or
jmp
mov
mov
ins
sub
outs
aam
cli
pop
pop
sbb
mov
dec
pusha
and
arpl
movs
mov
fs
mov
inc
imul
dec
ds
loopne
mov
sbb
add
inc
push
inc
and
cwde
lods
fsub
xor
div
push
retf
sub
sahf
sbb
mov
out
mov
and
add
popa
push
and
into
add
lock
or
mov
iret
retf
adc
movs
ins
sar
jns
ins
or
std
push
pop
inc
ins
jae
add
stos
cmps
inc
cmps
sti
in
mov
cmp
sti
adc
pop
loope
fdiv
xchg
cmp
or
xchg
dec
mov
and
(bad)
lea
mov
aad
ret
mov
mov
dec
aaa
adc
mov
int3
movs
sbb
movs
sbb
nop
ret
and
or
pop
fidivr
arpl
daa
mov
dec
daa
push
repnz
mov
jmp
pop
fiadd
pop
push
(bad)
xor
lods
iret
xlat
iret
pop
mov
aaa
pop
fnstenv
dec
pop
adc
lds
xor
inc
mul
aas
mov
jl
dec
int3
xor
adc
pop
out
mov
jae
ret
nop
push
push
mov
and
xchg
sbb
arpl
inc
add
mov
pop
push
cmp
shl
mov
addr16
jne
dec
add
mov
ss
fst
dec
push
stos
and
or
cmp
icebp
std
cmp
in
mov
and
test
pop
sbb
fdiv
and
or
das
jo
(bad)
jo
out
dec
jge
mov
ss
jl
fiadd
add
(bad)
loopne
fidivr
mov
(bad)
mov
stc
cmp
(bad)
pop
fidiv
ret
jb
xlat
js
or
sub
add
push
fisubr
sti
push
rcr
imul
iret
xchg
cmc
in
enter
mov
jecxz
rcr
dec
mov
sub
aas
sbb
cwde
xchg
xchg
icebp
pop
pop
movs
jnp
popa
imul
mov
iret
or
mov
test
jae
div
cld
xchg
mov
push
cmp
fmul
mov
addr16
xchg
xchg
jl
(bad)
mov
sub
mov
pushf
das
nop
pushf
aaa
add
in
cld
xchg
xor
shr
or
sbb
push
into
rcr
mov
mov
xor
pushf
jp
mov
dec
add
mov
pushf
sbb
lds
mov
xchg
and
int
enter
ja
sbb
adc
ds
or
into
in
pop
mov
movs
data16
es
hlt
add
div
sar
add
js
mov
jb
inc
cmps
mov
fadd
loop
add
mov
fsub
fld
aas
inc
psubb
cmp
push
in
cwde
jne
push
cmp
icebp
ins
pop
mov
jmp
push
push
lahf
xchg
pop
mov
pop
(bad)
int3
mov
imul
test
mov
ss
sub
inc
cmp
addr16
xchg
(bad)
cwde
outs
fwait
mov
dec
pop
out
imul
fistp
shl
imul
enter
jae
or
adc
test
int
xchg
icebp
and
repnz
ins
test
add
mov
idiv
dec
cwde
xchg
mov
mov
aad
push
mov
dec
add
idiv
imul
sub
cmp
sub
fstp
push
cmp
inc
pop
add
(bad)
call
mov
xchg
cmps
cs
cmc
mov
lods
icebp
clc
outs
adc
aas
fwait
add
das
test
xchg
jb
adc
(bad)
add
sbb
aam
sub
loopne
in
mov
cmp
retf
sub
test
add
out
inc
pop
stos
mov
mov
add
push
ins
int3
xchg
shl
ins
outs
mov
mov
xchg
dec
inc
xor
(bad)
fadd
mov
sbb
pop
sti
mov
sbb
out
push
lods
jle
pop
pop
mov
mov
jbe
mov
lock
(bad)
mov
cld
out
fistp
popf
mov
into
or
movd
lods
stc
mov
aam
adc
loop
in
hlt
aas
or
arpl
xor
pop
mov
jecxz
lock
fcmovnb
and
dec
adc
cmps
cmp
mov
or
gs
push
dec
icebp
add
add
std
add
mov
adc
jmp
into
push
sahf
sar
fdiv
sub
sbb
jecxz
add
inc
dec
mov
cwde
sti
into
cwde
cs
dec
mov
mov
push
mov
fidiv
cmp
xchg
fdiv
cmps
lds
adc
and
xor
or
and
cmc
xor
test
cmps
xchg
and
mov
push
fldenv
bound
shl
imul
das
pushf
jmp
jnp
push
ret
stos
mov
and
mov
sahf
xor
jnp
add
xchg
inc
idiv
mov
cmp
jle
idiv
into
retf
add
imul
cmp
aas
into
sub
fucomp
mov
call
scas
std
call
jno
push
aas
clc
cmp
push
jo
dec
mov
dec
mov
mov
clc
pusha
sub
sub
pop
jne
pusha
sbb
adc
in
xchg
push
adc
sbb
fbld
add
fwait
xchg
dec
movs
mov
cmp
bound
fistp
dec
xchg
mov
sbb
lea
xchg
or
aam
push
push
and
inc
pop
cs
push
pusha
imul
aad
cmp
sub
movs
popf
push
ret
xchg
jecxz
xchg
mov
rol
mov
adc
sub
push
jne
lahf
push
pop
jns
(bad)
out
lock
idiv
scas
repz
fprem
popa
cmp
jbe
push
pop
dec
(bad)
cmps
push
dec
mov
outs
inc
fs
test
add
mov
repnz
retf
cmps
cmps
sub
dec
mul
ret
dec
mov
fbld
inc
or
repnz
add
pop
mov
(bad)
cmps
ins
and
jp
fwait
sbb
cmp
outs
cld
add
gs
aam
xlat
cmp
jae
mov
ja
mov
adc
xlat
das
pop
(bad)
mov
xchg
and
cmp
jno
shl
ret
sub
call
or
adc
add
xchg
ficomp
(bad)
adc
pushf
int3
dec
mov
retf
cld
addr16
neg
ret
mov
dec
dec
cwde
mov
xchg
mov
call
adc
push
movs
ss
retf
out
mov
xchg
outs
sub
jae
xchg
arpl
or
jle
retf
sbb
stos
test
push
shl
push
cdq
push
sbb
dec
sbb
daa
popf
cmps
mov
inc
mov
adc
jae
push
jnp
es
dec
pushf
jg
add
out
mov
mov
clc
je
inc
test
mov
inc
xor
mov
fistp
sub
ins
or
fld
inc
es
(bad)
mov
cmps
ss
aas
mov
and
sub
ret
pop
push
mov
in
pop
lods
cld
jmp
cdq
adc
xchg
mov
ins
lods
(bad)
adc
jp
xchg
nop
push
pop
xor
mov
nop
daa
inc
sbb
(bad)
cwde
cli
xchg
or
jmp
mul
stos
push
ins
cwde
mov
hlt
movs
sub
(bad)
cmp
int
cmps
iret
jge
xchg
pop
xchg
inc
or
xchg
xor
call
inc
sbb
adc
mov
js
pusha
xor
fdivr
pop
jns
shr
cmp
xor
xchg
mov
jecxz
xor
mov
dec
inc
inc
rcl
ret
cmps
jb
arpl
and
push
sbb
sbb
pop
xlat
shl
pop
daa
add
dec
rcr
sahf
sub
in
popa
xchg
movs
jo
jns
or
and
sbb
retf
and
fbld
shl
dec
pop
lahf
jg
sti
inc
pop
loope
sub
lahf
repnz
push
mov
(bad)
out
inc
retf
js
(bad)
and
sbb
xor
xor
js
dec
mov
xchg
mov
sbb
dec
jmp
das
scas
push
(bad)
sub
jmp
loop
popa
cmp
rcl
pop
fs
jo
fnstenv
add
jne
js
push
and
or
adc
in
ds
push
add
mov
or
hlt
pop
gs
xor
int3
fdiv
test
stos
das
cmc
push
fnsave
das
repz
fadd
movs
mov
jmp
adc
adc
jnp
and
aaa
and
lods
xchg
daa
sub
adc
loop
inc
dec
jnp
call
fwait
adc
test
popa
fcom
jns
sti
fwait
mov
xchg
jnp
popa
stc
rcl
call
add
addr16
out
retf
inc
add
or
jl
and
outs
cmps
xchg
mov
ret
sbb
enter
mov
(bad)
repz
push
mov
addr16
add
xlat
mov
vandnps
ja
add
mov
sbb
movs
mov
mov
mov
push
inc
aad
jnp
lahf
call
test
mov
pop
fld
lahf
lahf
mov
sbb
mov
adc
shl
sub
or
(bad)
sbb
(bad)
bound
mov
(bad)
dec
iret
push
sub
push
cld
fidivr
aad
adc
int
push
push
cmps
add
test
mov
pop
int3
scas
mov
gs
jnp
pop
icebp
inc
scas
cmp
not
(bad)
fcmovu
inc
jbe
out
fadd
into
std
stos
xchg
or
test
jl
sbb
mov
cs
jno
adc
sar
call
or
dec
and
dec
dec
mov
test
jg
sar
(bad)
cmps
push
in
fsub
pop
arpl
int3
scas
loopne
in
stos
pop
push
and
pop
pop
pop
cmc
xchg
loopne
test
test
leave
adc
mov
and
mov
sbb
(bad)
(bad)
div
(bad)
adc
js
sahf
cmp
xchg
dec
loopne
mov
ss
push
ins
pop
jmp
mov
aaa
in
sbb
out
ins
jg
shr
xor
aaa
xor
hlt
call
aas
xor
icebp
mov
push
mov
repnz
pop
push
dec
psubb
call
(bad)
mov
jnp
retf
int3
fs
imul
sbb
and
xor
rol
aam
sbb
xchg
pop
repnz
arpl
mov
sub
jae
fsub
adc
imul
adc
sbb
inc
inc
jmp
icebp
popa
les
fisttp
sbb
push
int3
adc
lods
mov
cld
sub
sahf
mov
mov
into
sbb
fild
pop
mul
lock
hlt
lock
jp
push
test
cdq
retf
fiadd
and
repz
adc
inc
enter
xchg
je
push
and
popa
or
inc
jo
or
aaa
shl
ret
xor
(bad)
adc
je
imul
mov
addr16
dec
mov
test
sub
hlt
call
push
push
cmc
std
mov
into
iret
mov
repz
shl
in
mov
imul
push
pop
jp
pop
loopne
mov
push
mov
enter
out
sub
fild
jnp
pop
add
or
in
(bad)
adc
and
aaa
jmp
fcmovne
mov
fstp
push
std
fwait
cmc
adc
push
cwde
mov
in
aas
fs
popf
add
cld
mov
add
mov
pop
inc
rcl
rdpmc
pop
sub
mov
out
mov
les
pop
mov
pop
fs
push
jecxz
jo
or
mulps
aaa
mov
scas
daa
adc
xlat
xchg
sub
retf
pop
pop
xor
sub
push
inc
inc
pop
cmps
nop
xchg
xchg
sub
in
out
jb
xchg
mov
arpl
popf
into
shr
pushf
push
mov
mov
(bad)
xor
outs
inc
pop
ins
mov
scas
jnp
sub
pop
lahf
popf
mov
xchg
fstp
icebp
enter
mov
out
mov
mov
cld
or
loope
enter
mov
adc
ror
xor
cmp
jp
sti
cmp
lea
sub
enter
or
addr16
popa
lock
sahf
mov
aam
pop
and
movups
leave
jae
mov
test
xchg
sub
xchg
or
shl
out
test
add
rcl
mov
js
jbe
pop
out
cmp
sbb
in
dec
imul
xchg
mov
(bad)
cmc
fidivr
push
fild
add
or
leave
inc
xor
cmp
pop
test
jmp
add
jecxz
dec
xor
out
loope
dec
ror
pop
scas
into
and
pop
out
fs
in
and
sbb
xor
fnstenv
fsubr
stos
xchg
cmc
and
or
inc
xchg
pop
ds
pop
add
test
mov
into
pushf
mov
fild
pop
cmp
scas
loopne
and
cmps
ins
xor
mov
pop
adc
lea
shrd
neg
cdq
dec
(bad)
mov
loope
dec
jecxz
jne
xchg
mov
int
cmp
add
push
inc
call
and
es
push
lock
retf
(bad)
cmp
bound
or
addr16
push
sbb
pusha
push
and
dec
push
cvtps2pd
in
and
addr16
out
mov
retf
imul
sbb
adc
pop
fadd
imul
sub
jecxz
jae
sbb
pop
xor
mov
xchg
pop
add
jbe
enter
dec
push
xchg
int
std
leave
js
stos
repnz
ins
scas
test
pop
aam
in
lods
mov
cmps
mov
jmp
scas
pop
punpckhwd
bound
push
movs
clc
fs
sbb
ins
cmc
scas
mov
lds
mov
(bad)
add
inc
mov
aam
sti
aaa
jl
loop
and
ret
int
outs
dec
pop
dec
pop
xchg
ds
mov
mov
fcomp
and
xchg
aas
outs
cld
in
push
jp
xlat
cmps
jmp
mov
push
out
shl
pushf
and
mov
stos
cmp
stos
out
ds
ficom
or
or
dec
sar
ins
pop
inc
inc
(bad)
push
push
add
xor
loop
ret
fistp
ja
shl
sti
inc
mov
or
fiadd
bound
mov
outs
xchg
xor
xchg
(bad)
cmc
cwde
push
mov
pop
outs
cmp
sbb
dec
pop
ret
push
mov
(bad)
jmp
movs
stos
rol
or
xchg
push
sub
mov
(bad)
mov
jne
aad
inc
push
jne
int
stos
cmps
lock
adc
push
mov
outs
mov
pop
cmp
outs
div
cwde
je
movs
fdiv
fistp
sbb
push
mov
dec
inc
mov
std
out
dec
mov
fcmovne
sti
sbb
jns
test
aad
lahf
jle
pop
ret
rcl
je
mov
pop
das
cmp
fld
ja
pop
rcl
jbe
mov
enter
dec
or
test
or
jae
in
arpl
mov
jmp
mov
stos
dec
xchg
aaa
in
mov
mov
xchg
aam
loope
mov
jmp
out
leave
and
aas
outs
pop
daa
add
cmp
jb
xchg
mov
or
enter
ins
and
adc
sysenter
gs
mov
in
stc
lahf
pusha
cmc
jge
inc
scas
imul
sub
clc
cli
dec
sub
push
nop
pushf
jmp
fldcw
in
bound
dec
jnp
cmps
repz
cli
cmp
fstp
or
adc
and
repz
jl
in
mov
mov
mov
fdiv
shl
out
je
sub
add
shl
adc
sub
pop
retf
rep
mov
(bad)
push
test
repz
jns
jg
adc
movs
ins
jne
mov
sbb
cmps
xor
(bad)
mov
sbb
call
cmc
push
int
cmp
test
daa
xchg
sbb
cmps
mov
rcr
cmps
mov
in
pop
jmp
cmp
loop
xchg
ja
xor
mov
push
lds
lea
arpl
jmp
shr
repz
jb
scas
mov
sahf
xchg
daa
adc
cwde
ret
adc
retf
inc
daa
lods
or
xchg
cmp
pop
mov
je
push
mov
rcr
int
mov
ins
jae
xor
lods
xor
and
adc
pop
jno
jg
int
fistp
cmps
sbb
out
jns
out
addr16
adc
pop
rol
pop
dec
inc
(bad)
jmp
outs
sub
jnp
xchg
inc
hlt
fwait
pop
jnp
(bad)
in
lds
or
repz
xchg
imul
int
test
mov
mov
je
jno
mov
cmp
shr
loopne
pop
mov
add
retf
xor
sbb
shr
inc
movs
xchg
fdiv
pop
mov
jle
xchg
cs
movs
daa
out
popa
xchg
aas
inc
cmc
cli
call
icebp
je
mov
sbb
daa
add
dec
jmp
mov
add
mov
adc
mov
mov
dec
(bad)
das
mov
shl
add
mov
mov
daa
jb
aam
sub
in
in
adc
sahf
mov
jns
ret
cmp
mov
gs
shl
mov
cmps
cli
test
call
adc
jmp
daa
loope
ins
lods
mov
jge
sahf
push
mov
pushf
mov
stos
adc
pop
test
xchg
cs
repz
xchg
mov
ds
mov
jle
mov
test
xchg
xor
aas
ds
ins
(bad)
fsubrp
test
cmp
retf
gs
sub
popf
inc
test
movs
out
sti
mov
or
test
push
xchg
sbb
jns
jg
outs
add
rcl
fdivr
adc
es
ret
ins
mov
loopne
out
inc
push
ins
xor
ins
(bad)
lods
pop
addr16
and
inc
pop
sub
out
and
out
int3
into
xchg
cmp
shr
cdq
xlat
popf
pop
mov
out
adc
push
jmp
push
data16
or
enter
mov
push
mov
sub
aad
mov
mov
mov
fsubr
setno
xor
xchg
repz
dec
shl
sbb
(bad)
out
cli
jbe
je
xchg
test
lea
xchg
dec
push
clc
mov
jecxz
pop
fidivr
mov
mov
mov
xchg
jo
in
mov
mov
jno
jae
outs
adc
push
push
inc
out
aaa
dec
nop
out
mov
dec
sub
mov
(bad)
mov
pop
cmp
and
pop
dec
pop
lock
push
add
test
(bad)
add
cmp
ss
sbb
adc
xchg
cli
icebp
push
mov
call
add
and
or
sbb
jo
and
adc
pop
inc
push
ja
test
mov
loope
pop
and
mov
inc
shr
stos
adc
and
jp
jl
(bad)
sub
mov
imul
lock
or
aad
retf
dec
sbb
jb
jp
sub
loop
ins
add
das
and
je
pusha
gs
stos
dec
lods
test
sub
mov
enter
(bad)
jne
pop
jne
sahf
adc
mov
shl
adc
fmul
inc
addr16
nop
stc
sub
leave
scas
jo
jnp
adc
cld
jno
adc
cli
jb
push
sbb
xor
outs
loopne
and
out
and
repnz
cmp
cmp
sti
sbb
pop
mov
scas
cmp
add
fisubr
imul
mov
sbb
arpl
sahf
cmp
mov
mov
outs
lea
jno
leave
inc
push
dec
inc
loope
stos
and
dec
out
cmp
mov
inc
add
(bad)
jge
jns
or
stos
lods
or
pop
or
aam
cmps
das
xchg
aas
aas
add
mov
and
(bad)
imul
xchg
or
int3
mov
mulps
add
mov
scas
sbb
in
add
jecxz
test
leave
icebp
push
mov
xchg
sub
daa
adc
xchg
add
stos
pop
lea
xor
adc
jge
mov
inc
test
or
test
jmp
aam
xchg
pop
call
cld
fisttp
aaa
retf
xor
adc
(bad)
sub
inc
int
gs
iret
hlt
cmp
mov
loop
into
mov
add
inc
sub
mov
sbb
test
popf
fld
mov
call
in
sbb
pop
shl
fld
popf
sub
je
movzx
mov
mov
test
jnp
(bad)
sti
inc
mov
xchg
bound
or
dec
(bad)
or
fs
mov
movs
pop
fs
cmp
ret
call
aas
test
cs
arpl
cmp
das
or
dec
popa
or
push
mov
call
leave
adc
cld
outs
scas
xchg
std
inc
sbb
adc
ja
and
add
inc
mov
cmc
and
sub
push
mov
fidiv
mov
dec
fld
adc
adc
loope
jmp
mov
shr
mov
mov
lock
adc
rol
aaa
pop
lahf
mov
test
jmp
test
xchg
out
cmp
mov
ss
inc
jo
mov
push
mov
out
popa
fs
mov
xchg
test
repz
pop
mov
sahf
popa
je
les
jmp
add
inc
xchg
mov
and
push
sbb
pop
adc
mov
mov
push
mov
jle
pop
out
jo
scas
in
xlat
in
in
mov
imul
fiadd
pop
clc
jp
fidivr
xor
adc
nop
sar
fld
arpl
rcr
jae
(bad)
stos
scas
les
push
movs
pop
cli
jmp
call
and
test
add
xor
sbb
mov
dec
test
jnp
out
fldenv
lock
mov
(bad)
push
movs
mov
setb
and
pop
sub
cwde
repnz
cmp
inc
(bad)
fcmovne
inc
jg
pop
lods
ins
push
jg
and
cmp
and
cmp
jae
sbb
cmps
sbb
sti
or
push
push
push
je
jmp
sub
sahf
call
sti
ins
dec
das
inc
or
pop
mov
sbb
stos
sbb
iret
outs
dec
sub
push
cwde
inc
pop
xchg
jnp
pop
fwait
mov
popf
jne
and
dec
pop
arpl
sub
xor
xchg
fcmovnu
ds
fdivr
sub
repz
xor
mov
clc
cs
mov
pop
mov
movs
movs
cdq
add
push
xchg
div
(bad)
std
out
mov
push
cmps
adc
mov
bound
mov
add
mov
pop
enter
hlt
sbb
dec
js
ja
shr
and
cli
jnp
fnstsw
dec
jae
jns
or
mov
jns
adc
aaa
shl
jbe
outs
out
dec
aad
cmp
mov
andnps
mov
lea
in
inc
or
ds
repnz
jmp
xor
into
or
sbb
hlt
shr
push
xor
rcr
rol
add
addr16
xlat
retf
sbb
cmps
push
ret
add
and
sahf
retf
xchg
pop
ins
add
fs
stos
fsubr
jne
das
pop
or
and
int
lock
movs
pop
in
add
sti
sub
sbb
test
in
adc
xor
mov
pushf
sar
repnz
aaa
pop
sbb
call
addr16
aaa
xor
jl
push
push
xor
dec
jno
mov
inc
movs
sub
adc
mov
ret
mov
gs
lods
dec
out
fwait
sub
mov
pop
dec
or
pop
into
xchg
pop
lock
aam
push
scas
xchg
xchg
or
inc
push
je
fcomi
jnp
loop
pop
inc
inc
rcr
push
pop
pop
cmps
push
jmp
and
gs
cmps
adc
sub
dec
inc
repnz
int
inc
fiadd
inc
lods
mov
ins
dec
ins
xchg
adc
cmp
pop
push
mov
mov
lods
xor
shl
stos
or
sti
pop
push
lock
lea
popa
jmp
int
add
movs
pop
ins
push
adc
xlat
jae
jg
fincstp
dec
and
cmp
(bad)
in
jbe
dec
mov
lahf
fadd
mov
gs
in
sbb
test
xlat
lea
jno
pop
lock
rcl
push
lods
mov
inc
aas
pushf
xor
inc
pop
dec
sub
ins
sahf
int
jmp
xchg
add
sub
(bad)
mov
sbb
loopne
leave
cmp
test
(bad)
sbb
mov
and
lea
cmp
jmp
mov
and
test
mov
mov
imul
inc
or
adc
ror
dec
not
add
push
mov
cwde
cdq
adc
arpl
xchg
in
mov
call
int
leave
sar
jmp
jp
imul
rcr
ins
push
idiv
and
rol
mov
rcr
mov
jecxz
jo
dec
or
shl
sub
call
or
cld
mov
cmps
cmp
shl
loop
dec
(bad)
test
fisttp
push
dec
add
pop
stos
cmp
pop
std
int3
xor
and
imul
mov
xchg
sub
sub
cwde
das
push
leave
sbb
xchg
mov
mov
xchg
adc
jbe
xor
or
stos
mov
scas
push
push
mov
dec
in
jecxz
and
push
xchg
mov
sub
xchg
inc
push
loope
push
pop
and
push
xchg
cmp
or
xlat
push
adc
add
or
(bad)
jmp
lock
jns
dec
nop
jecxz
mov
cmp
jmp
pop
cmp
xor
or
fwait
scas
cdq
stos
or
pushf
test
adc
xor
pop
pop
rcr
jae
sub
sbb
sbb
pop
mov
mov
addr16
push
iret
shl
xchg
jb
in
retf
sbb
pop
mov
inc
xchg
imul
add
mov
mov
push
ficomp
cmp
out
retf
mov
mov
stc
(bad)
fwait
fwait
or
fild
test
push
mov
or
add
mov
jmp
je
mov
xchg
call
sbb
repz
imul
jno
push
data16
and
into
xchg
pushf
push
xor
sbb
or
int3
add
or
loop
sub
jecxz
mov
xchg
retf
inc
jns
rol
xchg
jl
in
inc
int
sar
jae
popf
mov
pop
mov
addr16
inc
shr
rcr
neg
push
loope
xchg
mov
cdq
div
xchg
xchg
rcr
mov
add
mov
(bad)
fwait
sbb
push
inc
ss
push
add
cmp
shl
es
inc
lahf
aam
aam
sbb
ins
out
fstp
in
jns
inc
pop
hlt
rol
sub
adc
sbb
loope
gs
cs
xor
pusha
shl
mov
mov
push
dec
jmp
mov
cmp
aaa
repz
mov
sub
imul
sbb
sbb
xlat
cmp
stos
fld
cmps
pop
shr
fnstsw
and
ds
sbb
scas
mov
jnp
repz
or
(bad)
in
pop
jb
fimul
or
dec
cs
mov
imul
fucomip
push
sbb
repz
or
xor
adc
pop
movs
lds
sbb
mov
cwde
into
inc
push
pusha
mov
sahf
mov
nop
jl
fist
je
adc
mov
es
cmp
xor
xchg
mov
adc
fisub
fmul
clc
loope
fdivr
repz
in
and
scas
push
sub
pop
rol
push
es
sbb
dec
or
and
pop
test
retf
jo
sbb
scas
ds
mov
cmp
test
xchg
js
xor
fst
stos
cli
lods
and
aas
pop
scas
inc
dec
mov
mov
pusha
adc
inc
inc
loop
mov
aas
xchg
or
cmp
adc
leave
pop
lea
cwde
inc
repnz
(bad)
jmp
shr
mov
sub
cmp
sub
icebp
cmps
das
mov
mov
dec
jo
cmps
(bad)
fsubr
xor
lahf
pop
adc
dec
mov
pop
fmul
mov
mov
mov
sbb
out
or
(bad)
mov
loop
test
jle
jmp
cmp
push
cmps
xor
add
call
mul
std
mov
jp
hlt
cmp
push
test
ficomp
ds
aaa
leave
pop
scas
push
push
fcom
jnp
sub
mov
add
daa
rol
pop
je
dec
pop
movs
pop
or
ror
push
adc
or
push
aam
stos
in
xor
int
int
push
sti
xchg
rol
sub
sbb
div
out
inc
add
and
cwde
and
inc
into
das
(bad)
pop
xchg
lock
enter
adc
fiadd
imul
pop
loope
xor
pusha
sbb
add
mov
push
push
cli
retf
mov
lods
retf
jb
shr
and
loopne
mov
hlt
sar
daa
sub
and
(bad)
lahf
add
jnp
mov
push
out
aas
jl
(bad)
jp
adc
xlat
dec
movs
pop
retf
dec
pop
ffree
popa
daa
mov
jnp
mov
int
pop
nop
das
repz
cmp
xchg
and
inc
aaa
push
adc
or
dec
xor
dec
aad
mov
pop
pop
mov
xchg
(bad)
xor
dec
or
ret
ss
sbb
push
scas
xchg
inc
jge
pop
push
retf
xchg
cmp
inc
and
xor
mov
pop
cmps
adc
jbe
shl
pop
xchg
sub
pop
lahf
sbb
aam
xor
xchg
loopne
adc
sbb
in
iret
aad
pop
or
sbb
lds
push
in
out
jae
lds
jmp
out
repnz
int
inc
push
jp
add
inc
mov
push
je
xor
push
pushw
push
dec
pop
(bad)
int3
pop
push
xchg
xor
(bad)
and
stos
dec
jecxz
fwait
pop
test
outs
stos
sub
fisub
mov
jnp
pause
test
push
sbb
inc
int3
ror
jmp
mov
movs
add
mov
movs
or
cmp
stos
pop
mov
cs
repnz
xor
pop
(bad)
popf
lods
push
fst
cmp
stos
mov
sub
and
jbe
fild
pop
sub
cmp
scas
repz
in
mov
ins
into
imul
stc
mov
fmul
and
mov
xor
mov
add
cld
push
mov
dec
dec
sub
aad
mov
scas
cmp
es
push
inc
dec
push
mov
xor
or
imul
ins
icebp
and
adc
inc
mov
scas
cld
and
fadd
and
in
loop
push
out
mov
cmp
shr
out
push
sbb
fldenv
inc
push
jno
ret
xor
push
(bad)
and
cmc
adc
gs
cmps
fiadd
xchg
inc
les
out
fimul
(bad)
xor
mov
add
mov
or
loopne
fcmovnb
test
out
jo
mov
les
dec
and
lock
cld
fisttp
jo
fcmovu
cmp
outs
mov
cld
inc
inc
add
xor
mov
imul
inc
add
iret
jae
and
test
mov
sbb
scas
or
in
ds
aad
(bad)
loop
aas
mov
and
pop
mov
adc
mov
js
enter
jns
xchg
add
dec
icebp
clc
mov
stos
adc
stc
mov
in
cli
cmp
mov
pop
lahf
xor
test
push
cmp
movs
enter
inc
sti
push
ret
sbb
push
inc
in
pop
sbb
inc
outs
arpl
lds
mov
pusha
push
test
int3
lock
cmc
ins
stc
mov
and
mov
xor
dec
ds
sahf
mov
add
out
mov
es
outs
inc
lds
jbe
xchg
push
imul
outs
lds
and
int
ror
inc
bound
jmp
outs
or
addr16
ficomp
jo
mov
jmp
pusha
jns
repnz
mov
movs
loope
and
aas
or
aam
movs
mov
xchg
arpl
jno
fwait
xor
aad
cdq
retf
into
fwait
push
icebp
cmp
fbld
inc
sbb
cmp
mov
icebp
mov
and
jge
loope
sub
mov
xor
dec
shl
push
pusha
iret
push
outs
xchg
jo
mov
gs
ins
add
nop
fcomp
fnstsw
loopne
push
ror
loope
ret
sahf
lock
mul
mov
popf
rep
mov
ins
push
lahf
mov
xor
mov
ja
xchg
jecxz
repnz
sub
add
mov
retf
and
movs
cld
jo
movs
inc
xchg
sahf
test
movs
add
push
test
mov
enter
imul
les
mov
or
add
ja
xor
aaa
add
xor
arpl
clc
in
test
mov
retf
je
ret
push
pop
xchg
lods
push
pop
mov
loop
ins
mov
fisubr
(bad)
int3
dec
(bad)
lahf
clc
pop
mov
mov
sub
pop
mov
jg
push
jne
add
je
xor
inc
and
ret
jmp
mov
mov
enter
xor
stos
sub
arpl
popa
mov
scas
sub
sub
std
inc
mov
pop
push
out
add
stos
inc
dec
daa
fstp
jle
icebp
lods
adc
xor
jae
sub
test
sub
mov
aam
sahf
or
lds
sub
jmp
pop
mov
aad
add
lahf
cmps
mov
idiv
mov
js
and
icebp
cmp
imul
dec
stos
xchg
stc
pop
pusha
or
sub
cmps
sbb
xor
add
sbb
jne
pop
jmp
rol
ret
mov
fwait
or
sub
icebp
xchg
add
leave
in
js
mov
push
sbb
ja
fld
test
adc
jp
pop
outs
icebp
hlt
cmps
imul
add
add
and
jecxz
cmp
mov
dec
nop
add
shl
mov
pop
push
mov
inc
fidivr
lods
push
cli
popa
push
mov
cmp
mov
and
jbe
fs
test
popa
call
push
jl
(bad)
sub
movs
lods
pop
jae
cmps
push
jnp
jmp
hlt
or
cli
enter
sub
nop
in
adc
push
cmp
and
aas
adc
mov
mov
cmp
lahf
push
and
jb
imul
addr16
dec
cmc
add
inc
mov
cmps
rcr
adc
mov
jl
pop
cli
std
xlat
repz
out
mov
push
repnz
pop
fdecstp
fnstenv
movs
jmp
mov
push
out
inc
popa
out
sbb
xchg
sbb
lahf
addr16
jns
leave
imul
ins
xchg
adc
add
xchg
sbb
je
push
pop
popw
push
inc
cmps
jne
and
bound
adc
pop
dec
es
stos
(bad)
arpl
test
push
adc
imul
jne
push
pop
xor
out
ins
mov
and
inc
pusha
dec
mov
xchg
dec
push
push
rcl
push
push
retf
mov
mov
jp
mov
jp
xor
std
sbb
dec
pop
lds
neg
loopne
adc
push
dec
mov
sti
cmc
icebp
add
sub
inc
rol
mov
sub
dec
mov
inc
retf
in
jnp
push
aas
pop
and
les
mov
adc
push
adc
rol
xor
and
pop
jo
add
or
popa
push
fnsave
mov
push
pop
jne
fcom
mov
fwait
in
data16
retf
push
ins
mov
stc
test
xor
mov
inc
into
rcl
jmp
ss
cdq
outs
jb
jp
mov
or
dec
push
mov
push
mov
jnp
xchg
jmp
test
add
dec
pop
imul
pop
nop
popf
clc
ret
mov
push
and
mov
enter
mov
add
iret
sbb
and
push
loope
daa
pushf
xchg
jl
dec
loopne
sbb
push
adc
mov
cmps
popf
xchg
mov
fsub
mov
sbb
mov
jg
test
stos
mov
inc
adc
push
int
sub
(bad)
div
inc
cmps
pop
in
sar
ins
shl
xlat
dec
xor
jmp
cli
adc
mov
addr16
cmps
(bad)
push
xor
mov
int3
les
mov
ficom
jmp
lea
aam
clc
jno
sub
fst
into
xchg
fiadd
in
jmp
cmp
(bad)
push
sbb
in
and
mov
call
mov
into
xlat
cld
lea
adc
xchg
sub
cwde
int3
inc
lods
fmul
push
ds
mov
std
jae
mov
cmp
nop
mov
imul
clc
popf
inc
sbb
and
cwde
sbb
mov
icebp
iret
sub
push
fdiv
sar
pop
dec
add
ds
inc
rcl
addr16
popf
xchg
push
xchg
pop
dec
cmps
sub
je
xchg
pop
out
xchg
sbb
mov
push
cdq
inc
pusha
cdq
xchg
cmp
in
mov
sar
adc
jmp
xchg
cmp
adc
jb
mov
cmp
into
sub
push
hlt
lods
inc
arpl
pusha
(bad)
lahf
retf
and
das
iret
mov
dec
aam
dec
and
movs
jb
popf
(bad)
not
adc
inc
push
pusha
cmp
cli
and
xor
jg
or
div
enter
int3
mov
xchg
pop
pop
mov
shl
mov
xor
sbb
xchg
mov
lods
xor
lea
fwait
and
cmp
add
out
push
mov
push
xchg
pop
inc
pop
data16
xchg
rol
jge
xor
sar
(bad)
mov
lea
std
cli
out
or
mov
fistp
cmp
mov
push
aaa
cmp
sbb
push
mov
pop
stc
jo
outs
(bad)
dec
push
adc
mov
push
cmp
jo
adc
sysret
mov
fwait
dec
(bad)
cli
shr
imul
lea
mov
xchg
outs
mov
dec
push
cmps
xlat
ins
pop
call
and
and
dec
mov
lods
push
sbb
inc
adc
push
pop
xor
test
gs
inc
or
mov
dec
mov
ret
fld
xchg
push
mov
mov
stc
or
inc
mov
mov
imul
pop
jns
stos
mov
bound
push
jo
(bad)
ins
mov
and
pop
sbb
(bad)
(bad)
jmp
cmc
mov
xor
mov
call
jle
inc
mov
(bad)
mov
mov
cmc
leave
cwde
dec
in
loop
and
ins
in
gs
sbb
clc
lods
jge
call
jno
mov
mov
lea
xchg
dec
xor
inc
adc
add
mov
adc
mov
cli
jbe
jnp
pop
sub
sbb
(bad)
in
sub
aas
dec
push
push
ficomp
add
xchg
or
pop
mul
ret
out
lods
fst
repz
push
mul
sbb
xchg
ss
mov
pop
sbb
pop
or
and
scas
cmp
mov
push
xchg
and
mov
fisub
sbb
fs
jmp
mov
outs
push
ja
sar
(bad)
cmc
sub
das
repnz
add
imul
out
mov
xacquire
mov
pusha
ja
ins
icebp
pop
or
aad
(bad)
cmp
ret
sub
push
(bad)
imul
iret
and
push
loop
mov
push
add
adc
cmp
inc
mov
imul
int
mov
sub
stc
adc
shr
cmc
lahf
jne
enter
nop
jmp
push
jge
cli
int3
mov
ds
push
mov
ds
mov
aam
jle
int
pcmpgtw
pop
je
lock
sbb
movs
gs
sub
cmps
in
sbb
scas
sbb
lds
mov
sar
jg
cmp
mov
fidivr
jmp
sub
mov
out
push
addr16
out
push
aad
loope
xor
mov
je
jmp
outs
aas
shl
lock
inc
(bad)
call
push
pusha
js
repnz
std
xchg
movs
cmps
ret
out
mov
mov
sbb
je
mov
rcr
outs
and
jmp
mov
mov
test
daa
pusha
ins
por
push
cld
push
clc
pusha
call
out
adc
push
frstor
cmp
pop
or
push
adc
mul
test
into
cmp
sahf
xchg
jge
push
sbb
movs
pop
xchg
(bad)
sar
cmp
in
std
(bad)
mov
add
in
add
jge
xchg
jae
dec
xor
dec
sub
addr16
cwde
arpl
rcr
in
push
inc
mov
cmp
mov
mov
sbb
xchg
sbb
jge
hlt
xor
mov
add
push
push
pop
mov
rol
add
jno
push
inc
inc
sbb
psubd
mov
sbb
dec
sbb
lods
int
sub
call
and
popf
adc
adc
pop
je
test
call
push
push
add
mov
and
sbb
dec
xchg
xor
jb
(bad)
lea
fcomp
sti
leave
imul
ss
adc
pop
mov
jno
test
and
jns
mov
test
push
xor
test
jl
in
movs
sbb
mov
jecxz
xor
mov
into
retf
imul
mov
jecxz
push
fisubr
add
ss
jno
(bad)
jp
loopne
sahf
aad
int3
int3
add
sbb
les
sti
push
ror
jno
and
sahf
xor
mov
cmc
sub
sub
fbld
sub
out
retf
xor
lds
ror
retf
shl
std
out
or
push
pop
inc
sub
pop
lds
sti
and
push
clc
mov
test
das
mov
(bad)
dec
dec
enter
adc
(bad)
jmp
push
mov
hlt
add
in
int
cmc
ret
mov
adc
loopne
scas
jle
data16
ficom
or
dec
and
aaa
rcl
movs
mov
jbe
iret
gs
cwde
test
sti
xor
lods
cdq
scas
add
or
mov
movs
enter
fiadd
rol
push
mov
stos
jg
xlat
repnz
in
xchg
imul
sub
fcom
aaa
test
dec
clc
adc
adc
pop
lds
pop
stos
push
sub
lods
mov
(bad)
out
add
call
xchg
push
imul
retf
ret
and
mov
movs
sahf
xlat
dec
mov
xlat
cmp
or
ret
retf
jmp
sub
xchg
adc
xor
or
sub
mov
js
and
and
add
jp
add
jae
paddb
loope
push
push
push
sub
mov
stc
xor
repz
loop
outs
test
es
inc
adc
pop
jmp
call
add
das
xor
test
jle
cwde
jle
mov
jp
mov
iret
push
and
mov
daa
(bad)
out
out
xchg
pop
ds
dec
xor
jl
jge
sub
and
mov
jnp
je
loop
or
pop
or
sub
shr
movs
add
mov
out
inc
inc
mov
das
push
clc
in
pusha
in
js
or
mov
add
push
mov
cmp
push
inc
mov
sbb
sbb
cdq
mov
arpl
add
dec
call
in
ins
lods
ret
daa
xor
daa
push
xchg
sub
sahf
and
push
mov
mov
stc
ds
mov
jg
xor
mov
mov
jmp
dec
and
sbb
and
test
(bad)
int
fisubr
and
cmp
pop
fild
nop
ins
fisubr
call
push
push
dec
sar
xchg
sub
xchg
or
cmp
dec
mov
mov
xor
mov
ja
jl
cmps
mov
stos
adc
popf
outs
imul
repnz
fcomi
xchg
pop
mov
inc
ret
loope
push
aad
je
pop
sbb
stos
jnp
or
das
rcl
arpl
mov
or
ja
jg
jbe
sbb
iret
ss
mov
cwde
pushf
sub
and
mov
ret
cmp
xchg
int3
and
and
leave
dec
lock
loope
das
cmps
out
lahf
arpl
dec
fiadd
jle
mov
jne
or
cld
cmp
and
mov
movs
in
repz
rcr
rcr
mov
nop
sub
das
dec
mov
jge
stos
pop
jmp
rol
add
push
enter
sub
out
dec
mov
cmp
push
jmp
in
call
cmc
inc
rcl
push
js
add
mov
lea
push
call
cmp
push
dec
pusha
cmps
lds
add
pop
jmp
aad
popa
imul
repnz
jo
idiv
mov
adc
outs
sar
icebp
cld
cmps
add
loope
jbe
push
rcl
nop
addr16
and
iret
push
xchg
or
out
dec
pop
sbb
mov
(bad)
(bad)
and
mov
jl
xor
repz
pop
adc
jae
into
rcr
cmp
jmp
test
mov
les
jnp
xchg
sbb
push
and
call
stos
push
js
xor
inc
adc
ret
mov
movs
sub
aam
sub
jmp
in
cmps
rcl
repz
ret
cmc
jbe
mov
sub
es
push
inc
addr16
mov
push
es
add
pusha
push
sub
cmp
outs
adc
push
ins
pop
pop
leave
popf
mov
ret
lods
fiadd
push
xchg
jmp
in
cmps
xchg
fnstcw
jg
mov
dec
mov
mov
int
call
movs
dec
cmp
push
xchg
pusha
and
pop
test
popf
xor
xchg
out
cld
fldenv
cli
sbb
push
pop
outs
sbb
fnstenv
pop
or
test
lea
es
mov
add
push
add
cdq
dec
mov
pop
mov
addr16
add
add
std
jnp
adc
mov
call
push
mov
clc
xor
adc
scas
push
jge
sub
mov
add
inc
xor
cmps
xor
mov
cmp
dec
(bad)
inc
repz
mov
pop
xor
fimul
sbb
imul
test
jns
xchg
sbb
outs
jo
xor
call
int3
std
mov
je
loop
movs
xlat
imul
(bad)
cmc
xchg
xor
cmp
in
aaa
je
dec
ret
push
add
xchg
push
in
inc
call
dec
inc
lock
retf
cmp
cmps
inc
add
adc
in
mov
pusha
int
les
test
popf
adc
repz
mov
(bad)
gs
mov
xchg
jg
push
(bad)
cmp
pop
mov
inc
shl
lods
les
cmp
mov
mov
cmp
bound
pop
in
jo
shl
push
movs
dec
adc
ins
stos
(bad)
sub
xlat
xor
add
jne
(bad)
(bad)
dec
add
cmc
cmps
test
xchg
adc
xor
mov
fwait
jb
jmp
lods
fsubrp
call
repnz
push
mov
fcom
and
nop
adc
(bad)
mov
xor
sahf
ins
es
adc
ins
jnp
ds
adc
mov
popa
call
call
bound
test
das
sbb
jle
xchg
sub
and
xor
pop
cmp
inc
mov
and
pop
mov
inc
inc
or
cmp
out
div
cdq
mov
cdq
out
mov
test
jmp
dec
ins
sub
daa
aad
jmp
sbb
in
jle
xor
mov
push
fs
push
sub
(bad)
clc
ret
shl
adc
cmp
nop
xchg
pop
je
cmp
pop
stos
adc
enter
cmp
lahf
cmps
mov
iret
daa
rol
adc
jmp
push
repnz
or
sbb
es
adc
das
mov
mov
xchg
mov
imul
mov
mov
cmp
loope
ins
fdivr
outs
sbb
retf
cdq
or
nop
popa
mov
push
in
imul
aaa
xchg
idiv
or
cmp
inc
add
mov
ds
fiadd
push
dec
loopne
(bad)
out
xchg
mov
int
inc
shr
xlat
mov
xlat
add
iret
and
mov
xor
push
jge
pop
dec
xor
arpl
cdq
sbb
mov
dec
aas
test
jge
adc
loopne
sar
mov
jl
xor
mov
icebp
sub
mov
sbb
dec
lods
into
imul
pop
cli
inc
inc
out
add
sbb
cmps
loop
adc
xlat
cs
iret
xchg
retf
shr
cmp
ins
fxch
in
pop
sub
cmp
pop
dec
xor
cmps
mov
adc
mov
daa
pop
shl
cmc
push
sub
inc
jb
xchg
imul
adc
js
int
pop
not
test
hlt
xor
loopne
pushf
add
sbb
mov
div
xchg
or
into
inc
retf
xor
call
dec
js
ja
mov
je
xchg
mov
stos
mov
xor
xchg
data16
push
mov
std
xor
sub
cwde
and
hlt
push
xchg
shl
mov
retf
mov
mov
fist
jmp
push
xchg
fwait
push
sub
ins
or
push
pushf
cdq
push
(bad)
aam
cwde
mov
cmps
mov
pop
test
aaa
(bad)
movs
icebp
retf
xor
icebp
mov
idiv
aaa
call
pop
mov
dec
ja
pop
dec
inc
dec
xchg
scas
test
sar
mov
fimul
js
push
fadd
mov
xor
cdq
mov
mov
xor
gs
sub
(bad)
(bad)
cmc
mov
mov
adc
lods
aam
cmp
push
jns
sub
or
add
cmp
ror
aam
mov
mov
inc
push
out
or
mov
inc
shl
xor
adc
mov
xor
xor
sub
jp
add
dec
or
and
sbb
dec
cmp
aaa
and
loop
pop
psrld
or
loop
les
sbb
mov
pop
and
arpl
jmp
call
xor
mov
sbb
push
and
lahf
stc
outs
or
push
xor
xor
fcmovnb
stc
add
ficomp
cmp
popf
pop
or
and
arpl
loope
lds
xor
mov
imul
push
or
sar
bswap
popf
adc
mov
lock
sti
nop
xchg
jno
std
popa
out
push
sub
sbb
inc
mov
sub
jb
test
out
mov
jp
aad
or
or
imul
xor
ret
fst
pop
mov
js
pop
cmp
stos
(bad)
jl
lock
cmc
fistp
cmps
jmp
xchg
xor
out
jb
or
jae
fild
push
lea
mov
jns
sbb
add
rcl
pop
and
dec
sar
idiv
stos
jge
or
rol
les
add
dec
add
out
cld
push
and
fidivr
bound
sbb
lods
or
test
add
and
jae
outs
add
nop
dec
ret
xchg
xchg
mov
jnp
cmp
pop
mov
jl
pop
adc
sbb
pushf
cmp
loopne
dec
add
pop
mov
fs
mov
mov
xor
push
aam
jge
adc
pusha
(bad)
pop
or
jle
lods
rcl
push
jl
inc
inc
outs
and
out
jge
cmp
fld
jge
pop
ins
add
(bad)
adc
loopne
pop
add
xchg
iret
aas
call
adc
shl
jecxz
jp
into
jne
mov
sbb
fcom
in
hlt
jle
pop
test
mov
shl
int3
js
mov
js
mov
(bad)
inc
lods
push
fcom
clc
pusha
push
mov
xor
loopne
aad
inc
sbb
out
cs
xor
ss
dec
cmps
cmp
lods
push
push
pop
sar
cwde
mov
xlat
test
mov
mov
js
xor
cwde
xchg
dec
retf
loop
or
stos
lods
dec
cdq
movs
and
lea
fcomp
jb
arpl
cmps
cmp
mov
addr16
iret
push
cmp
and
(bad)
int
in
stos
in
dec
js
jmp
dec
push
pop
or
jbe
push
jb
aas
out
add
cmp
add
xchg
mov
mov
mov
xor
sar
popf
and
push
mov
jp
ins
adc
dec
cmp
dec
push
in
cmps
inc
add
bnd
lock
sbb
(bad)
jbe
xor
xchg
cmp
stc
sbb
mov
lock
jno
dec
pop
and
xchg
int3
sbb
add
pop
int3
fdivr
ret
sar
pop
out
jp
jo
outs
sbb
jne
sbb
dec
push
pop
and
retf
data16
mov
cmps
imul
fild
(bad)
cmc
mov
mov
mov
sbb
push
push
loop
aad
sub
cwde
enter
inc
into
sub
mov
ins
and
mov
ror
in
lods
mov
or
inc
cld
mov
and
es
push
sahf
cwde
jbe
imul
clc
repz
loop
mov
mov
in
lods
cmps
or
adc
sar
mov
test
sbb
jno
mov
mov
rcr
xor
mov
add
sub
add
mov
dec
test
adc
xchg
mov
mov
out
inc
adc
mov
mov
and
or
push
fimul
push
pushf
jmp
push
xchg
stc
imul
clc
mov
jo
push
sbb
iret
mov
and
div
push
add
out
div
stc
sbb
mov
shl
retf
ret
add
cmp
jb
adc
sbb
sbb
add
test
add
push
ss
dec
jne
add
ret
(bad)
stos
outs
or
mov
or
push
pop
(bad)
cmp
lea
dec
shr
xlat
push
mov
push
mov
xor
repnz
inc
ds
mov
ja
dec
icebp
call
cmc
sahf
mov
xchg
mov
add
stos
aas
mov
dec
sbb
fisttp
shl
aaa
pop
push
sub
dec
hlt
jb
add
ins
mov
inc
cmp
xlat
daa
mov
dec
outs
inc
dec
and
rcr
ds
mov
xchg
pop
pop
movs
into
xor
ins
pop
mov
xor
cli
push
test
leave
movs
je
jae
imul
pop
mov
ret
(bad)
pop
lods
sbb
xor
js
mov
out
out
sub
sahf
daa
mov
test
cmp
stos
jge
adc
fadd
cmp
adc
jge
mov
xor
jg
pop
std
test
ins
je
ds
dec
ins
xor
add
sub
ins
dec
sub
xor
sub
xor
inc
pop
ins
loope
cli
jae
fucomip
xor
dec
adc
cmp
xchg
icebp
xchg
js
mov
jns
inc
xchg
and
cld
outs
mov
sar
sbb
imul
jnp
out
sbb
push
bound
inc
inc
adc
sub
mov
mov
and
mov
add
or
push
dec
and
xor
fstp
mov
das
test
inc
add
mov
inc
ror
jb
xchg
or
lea
jae
imul
cmp
in
xor
mov
call
js
ret
movs
sbb
int3
pop
dec
loope
popf
mov
push
xchg
ror
jns
mov
or
imul
xlat
repz
xchg
xchg
xor
or
mov
xor
nop
sbb
aad
aam
test
sbb
mov
fs
sub
push
xor
mov
fidivr
and
inc
and
add
push
pop
xor
stos
test
and
lea
add
scas
mov
(bad)
push
in
inc
into
lea
call
adc
lods
ja
mov
mov
adc
sbb
jb
inc
pop
(bad)
dec
sub
jmp
out
ins
xor
mov
and
or
adc
loop
dec
sub
into
xor
mov
mov
lods
aad
xor
ins
popa
cmp
retf
pop
and
jbe
xor
stc
sbb
sahf
js
cwde
scas
pop
repnz
leave
repnz
sbb
and
mov
add
addr16
dec
push
nop
cmp
in
in
add
ins
nop
sub
dec
sub
mov
sbb
packssdw
data16
xchg
mov
dec
pop
lahf
in
daa
cmps
rcl
xchg
test
fimul
push
add
sub
sbb
sbb
adc
mov
pop
mov
mov
dec
jne
fnstenv
cmps
cmp
ret
retf
push
in
retf
jns
sbb
xor
ds
mov
div
mov
pop
loop
cmc
(bad)
mov
stos
test
jmp
mov
or
popf
push
(bad)
into
repnz
int3
xchg
xchg
and
mov
cld
ja
or
sbb
das
out
dec
ins
push
adc
mov
fdiv
adc
pop
inc
sbb
loop
xchg
mov
or
in
dec
retf
mov
icebp
(bad)
or
cmp
es
sbb
cs
fbstp
push
lea
push
xor
fwait
repz
lds
lods
xchg
shl
mov
cmps
sbb
popa
xor
scas
movs
inc
xchg
mov
out
call
add
adc
sbb
push
jmp
jp
scas
test
cld
popf
add
push
inc
pop
lahf
mov
loope
ret
data16
xor
fimul
lock
jb
dec
sub
cmp
hlt
xchg
std
or
mov
inc
inc
xchg
loope
enter
cs
lods
cmc
add
add
xor
push
sbb
movs
xchg
lds
mov
test
enter
test
xchg
add
adc
adc
and
jg
scas
inc
das
cmp
in
into
jle
add
ja
inc
xchg
mov
not
push
mov
cmp
vunpckhps
xchg
(bad)
nop
loopne
test
shl
xor
inc
jno
out
xchg
aam
ins
inc
jne
and
inc
jno
mov
shl
jg
pop
mov
not
sti
inc
popa
repz
(bad)
es
retf
les
mov
xchg
cmp
push
mov
mov
out
je
out
pop
inc
leave
test
in
out
imul
dec
sub
cld
inc
fs
popf
adc
fimul
push
push
fs
mov
int3
dec
call
fs
aas
imul
jbe
aad
mov
iret
jb
outs
mov
iret
mov
inc
mov
lods
iret
mov
mov
and
(bad)
rcr
imul
arpl
mov
sub
inc
aad
mov
mov
les
push
push
movs
sahf
add
fsub
cmp
aad
dec
cmp
inc
rcl
xor
hlt
mov
jb
in
cld
pop
test
dec
pop
int3
push
or
lea
jg
dec
das
xor
push
leave
push
xchg
pushf
(bad)
jae
loope
sub
inc
cdq
push
test
fs
(bad)
xchg
pop
push
add
pop
inc
jecxz
dec
sub
adc
push
repz
daa
nop
mov
arpl
or
xor
inc
cmp
ins
xchg
lods
cmps
ins
not
pop
lahf
js
add
lds
xor
add
inc
fadd
repz
addr16
pop
sub
in
cmc
addr16
dec
inc
test
into
loop
pop
out
inc
or
and
aam
and
out
jbe
fbstp
mov
(bad)
push
sub
mov
push
sbb
sbb
mov
mov
popa
leave
(bad)
mov
mov
sub
inc
es
push
daa
inc
mov
loope
sbb
ins
pop
xchg
add
jmp
in
cmps
push
push
repnz
pop
mov
imul
or
das
retf
js
sbb
pop
push
in
shl
mov
cmp
adc
rcr
mov
rcl
pop
(bad)
out
push
and
mov
adc
(bad)
icebp
mov
push
mov
sbb
out
xchg
jns
dec
in
jb
bound
cmp
outs
add
retf
into
in
imul
dec
fcom
inc
pop
ins
cld
call
mov
xor
in
mov
push
jbe
ss
dec
lds
sar
mov
cli
push
xor
ins
(bad)
sbb
fnstsw
mov
sbb
in
mov
mov
sub
and
cmp
mov
out
and
cmp
jb
aaa
sbb
and
movs
push
scas
out
(bad)
jmp
mov
repnz
mov
bound
mov
pop
or
cmp
xacquire
nop
cwde
cmp
mov
mov
or
jp
out
fstp
sbb
fiadd
sbb
mov
and
outs
mov
or
int
setae
and
xor
xor
repz
jno
call
sub
dec
mov
adc
cmc
(bad)
cmp
xor
retf
dec
jb
js
sub
jge
sub
aam
nop
pop
xor
or
(bad)
in
jl
dec
push
and
adc
cs
aam
aaa
test
sbb
xor
cli
sar
pushf
and
or
in
cmp
ins
jns
retf
pop
push
push
out
stos
mov
jb
(bad)
mov
out
(bad)
ss
test
pop
dec
(bad)
and
mov
inc
je
test
adc
clc
adc
rcl
pusha
jmp
(bad)
lahf
jbe
mov
xchg
shl
fld
mov
mov
outs
cmp
xchg
and
cmp
cmp
and
adc
cmp
enter
dec
and
bnd
movs
jno
adc
push
ret
in
fild
iret
mov
popf
imul
cmp
test
enter
es
cmp
enter
mov
xchg
sub
out
add
adc
jbe
std
sub
adc
inc
mov
push
retf
xchg
cmp
in
pop
xor
mov
and
cmp
ja
repz
xor
mov
mov
leave
or
in
or
push
mov
push
popa
call
mov
sub
pop
mov
mov
loop
out
pop
retf
or
or
ins
mov
push
rcl
push
ins
shl
sub
fadd
inc
mov
pop
mov
mov
inc
bound
shl
sbb
inc
and
loopne
push
das
cmp
xchg
mov
mov
and
sbb
shr
and
push
mov
mov
or
cld
je
push
mov
ins
aam
call
or
mov
cmc
cld
cdq
jb
inc
scas
pop
jae
aaa
sub
jne
popa
adc
or
fstp
mov
xchg
inc
std
mov
pop
sahf
inc
lahf
imul
cld
mov
gs
rcr
adc
mov
mov
or
cmps
test
adc
adc
jl
or
ss
lock
add
xchg
and
das
and
loopne
jns
jne
push
fs
cmp
pop
(bad)
mov
in
add
add
cmp
sar
shr
repnz
jg
loopne
and
in
aam
xchg
push
push
(bad)
out
pop
dec
inc
cs
dec
pop
pop
leave
ins
lock
xor
push
jle
jg
fnstsw
cwde
pop
fsub
popf
loope
aaa
xor
das
out
push
movs
pop
dec
inc
dec
cmp
mov
sbb
test
outs
(bad)
pushf
lock
(bad)
loop
lds
ins
xor
sbb
test
xor
and
mov
push
out
cli
mov
sub
sahf
add
cmp
shl
aaa
or
jl
lea
stos
cs
ja
pusha
mov
daa
mov
mov
bound
push
inc
aam
int
adc
(bad)
mov
push
inc
jnp
add
add
hlt
dec
clc
sti
das
ins
push
push
ins
mov
xchg
(bad)
jns
push
mov
add
scas
adc
es
test
mov
dec
ins
js
pop
fsubr
xchg
stos
outs
inc
pop
push
push
and
and
add
mov
cmps
les
cmp
das
xchg
outs
cmp
sub
and
mov
xchg
xchg
sub
pop
scas
test
jecxz
mov
xchg
mov
fcomp
(bad)
jnp
pop
and
fcom
or
cmp
imul
call
jge
(bad)
mov
(bad)
inc
dec
xchg
movs
add
dec
out
xchg
xchg
je
adc
aas
popf
pop
ret
xor
cs
lods
xor
mov
fwait
fwait
pop
shr
jmp
cli
call
imul
xchg
test
mov
xlat
jecxz
push
xchg
into
add
push
ss
fld
adc
stc
mov
fmul
arpl
out
in
adc
mov
test
inc
inc
dec
sbb
arpl
inc
mov
jbe
cmp
add
jl
jecxz
xor
ror
and
mov
int3
push
xlat
mov
adc
xlat
ret
add
mov
leave
enter
jp
mov
dec
fcomp
dec
mov
adc
in
adc
xchg
not
fsub
inc
imul
pop
sbb
jns
jle
or
push
jmp
push
data16
xor
adc
and
sub
or
jg
inc
sub
adc
js
pop
arpl
xchg
scas
xchg
pop
fs
dec
jle
ret
xchg
cdq
popa
fbld
and
daa
push
jp
das
xlat
push
repz
test
loope
pop
push
stc
mov
dec
fwait
sub
ss
shl
xchg
sbb
xchg
cmc
mov
retf
jle
dec
push
mov
sub
in
jo
jg
or
iret
je
jne
xchg
fldln2
das
jae
cmc
xchg
mov
inc
xchg
data16
and
mov
inc
inc
fild
(bad)
mov
add
fistp
mov
addr16
popa
mov
xchg
lea
cmp
pop
add
jns
loope
mov
jmp
inc
std
retf
sbb
es
scas
fadd
sbb
int3
daa
mov
mov
fnstcw
pop
test
mov
mov
cmp
jmp
pusha
mov
ret
addr16
scas
out
push
ins
retf
test
pushf
pop
popa
add
fisubr
ficom
sbb
xor
movs
(bad)
neg
adc
xor
add
jae
in
jp
mov
mov
inc
lods
adc
jp
xlat
push
fstp
inc
mov
daa
ss
sub
inc
cmp
pop
test
push
(bad)
ins
fadd
xor
jbe
mov
jo
lock
ror
jg
icebp
cld
xor
loope
jo
sub
rcl
xor
loop
jmp
jo
and
xor
dec
ficom
add
sbb
int3
in
jb
outs
loopne
iret
cs
push
xor
and
aad
cld
test
add
jne
inc
add
outs
out
(bad)
scas
in
pop
and
fistp
mov
sub
mov
scas
ins
out
sbb
xor
jmp
in
lds
fbstp
mov
mov
adc
test
pop
sbb
jae
cwde
imul
mov
or
in
sbb
aad
push
sbb
scas
push
dec
test
xchg
popa
pcmpgtd
jno
adc
dec
repz
mov
imul
icebp
xchg
adc
push
fild
cmp
cs
std
add
cmp
aaa
push
dec
jmp
test
repnz
or
jle
imul
jnp
inc
and
mov
add
imul
cmp
mov
retf
inc
and
in
pop
mov
js
rol
fstp
jmp
aad
lock
xor
(bad)
sub
pop
inc
test
xor
nop
shl
js
xor
outs
jge
fcom
mov
aas
xchg
pop
push
loope
movs
loope
inc
push
sbb
aaa
xor
xchg
(bad)
pop
(bad)
unpcklps
sub
xchg
push
pop
jmp
adc
(bad)
stos
stc
in
push
inc
lods
ret
jmp
faddp
cwde
mov
xchg
ss
and
pop
jge
mov
jns
dec
jge
int
cmp
mov
imul
test
repnz
sub
mov
mov
gs
jne
mov
es
push
inc
jmp
dec
retf
cmp
shr
mov
das
aam
mov
or
jecxz
sbb
imul
fs
dec
aad
stos
test
stos
push
aaa
xchg
outs
retf
add
popa
(bad)
cmp
sbb
sbb
mov
cmps
fild
outs
int
int3
icebp
ret
or
mov
daa
sahf
adc
adc
or
das
jle
aam
(bad)
retf
scas
sub
sbb
lea
cmp
and
jecxz
sar
push
lock
lock
mov
imul
xor
gs
push
in
mov
jle
adc
xchg
fwait
mov
icebp
push
ds
and
and
loope
jle
in
call
dec
inc
loope
sub
fsub
push
mov
ds
mov
arpl
and
sahf
cwde
mov
sbb
shl
dec
out
nop
pop
in
pop
xchg
ds
(bad)
cmp
or
int
pushf
fistp
pusha
mov
(bad)
nop
scas
xor
fs
cld
int
icebp
ficom
and
inc
jnp
je
loope
jb
hlt
mov
jmp
icebp
stos
adc
jl
jle
imul
xor
repnz
lds
adc
mov
mov
(bad)
add
outs
shl
and
jg
jmp
xor
jge
inc
loop
add
ja
aas
dec
adc
sar
stos
pop
sub
ret
ss
add
and
cmp
cmc
xchg
fidiv
sti
(bad)
fwait
icebp
rcl
mov
enter
xor
dec
pop
sti
test
stos
fsubr
xchg
(bad)
pop
stos
or
out
add
cmp
push
fchs
mov
pop
add
js
pop
dec
inc
or
sbb
das
in
mov
and
test
pop
clc
push
push
dec
xchg
push
inc
xchg
add
cmps
ror
out
pushw
push
sub
cmp
xor
lods
gs
ja
push
ficomp
or
mov
mov
test
or
pop
fdivr
and
or
imul
xor
or
mov
rcr
daa
out
fwait
push
ins
mov
cmp
jno
inc
sar
mov
(bad)
pop
fcom
adc
das
sti
sbb
iret
ins
aad
rcr
jmp
aaa
adc
sbb
jle
ins
jle
jo
ret
push
mul
imul
push
mov
ret
adc
cld
ret
jg
(bad)
cmc
mov
sub
pop
(bad)
clc
test
mov
sbb
xchg
cwde
popa
pop
cmp
jge
sbb
inc
sbb
ins
(bad)
sti
in
inc
or
adc
jno
popf
mov
mov
fist
jecxz
mov
push
ins
sbb
sar
sbb
cmp
addr16
xchg
mov
fst
rcr
or
es
push
or
pop
int
mov
cmp
xor
cmps
mov
mov
push
dec
jp
int3
jno
mul
outs
pop
lea
test
out
out
test
outs
and
lods
mov
rcl
fisttp
sub
inc
sbb
nop
lea
mov
scas
or
lods
rcl
loope
aas
sahf
fxch
pop
cmp
cmp
iret
adc
iret
mov
dec
loop
repnz
js
cmp
adc
test
jp
retf
ficomp
and
jmp
xor
cmc
mov
jae
push
mov
repz
ficomp
bswap
(bad)
cmp
aas
push
out
xor
popa
xor
rcr
add
popa
(bad)
lea
sbb
mov
and
push
ss
push
hlt
cmp
push
outs
scas
jp
mov
xchg
dec
sbb
xlat
jae
mov
imul
sbb
loop
and
ss
sbb
repnz
sbb
jmp
mov
push
lds
mov
cdq
data16
pop
ret
mov
or
nop
leave
inc
sub
dec
inc
sbb
test
daa
and
dec
dec
aad
xchg
das
mov
lods
jle
adc
stos
add
mov
add
cmp
not
mov
cmp
dec
or
cmps
movs
lahf
js
(bad)
and
fisubr
add
fimul
xchg
mov
jbe
rcl
xchg
and
ret
out
pop
cmps
inc
icebp
jg
imul
dec
and
push
sbb
movs
ficom
pop
jecxz
imul
les
ss
pusha
xor
fidiv
sbb
lods
fcmovbe
sub
xor
mov
pop
ret
mov
sbb
mov
mov
mov
add
inc
xor
bound
daa
fadd
sti
dec
imul
aam
xor
sub
xor
cld
adc
scas
sub
xor
jecxz
pusha
pushf
sub
sbb
push
sbb
push
shl
stc
and
daa
push
inc
std
xchg
push
dec
or
and
outs
int3
call
push
mov
inc
xchg
cmps
push
jmp
and
cmc
jbe
dec
inc
xlat
loop
xchg
stos
fsubr
add
mov
xchg
stos
mov
push
dec
and
retf
(bad)
or
iret
sahf
mov
rcr
dec
movs
loope
cld
pusha
dec
popa
add
xor
loope
and
ins
jp
mov
out
and
adc
repz
clc
lods
push
mov
dec
ror
or
gs
mov
leave
xchg
stc
xchg
dec
dec
xor
push
scas
xor
ja
pop
xchg
aas
rcl
and
and
sub
cmp
movs
(bad)
popa
popf
pushf
lds
shl
aad
pop
push
cmps
imul
dec
ds
or
xchg
cmp
je
adc
ret
fs
popa
or
inc
loopne
mov
add
call
sub
xor
push
fst
sti
stos
mov
jmp
fs
popf
cmc
or
shl
mov
dec
pop
pop
jle
shl
push
jp
inc
xor
mov
fdivr
push
push
mov
xor
jecxz
lock
pop
xchg
or
sbb
mov
test
int
sbb
ret
(bad)
sti
cmp
out
loop
icebp
(bad)
call
xor
push
sub
jl
inc
and
or
sti
dec
adc
(bad)
icebp
sub
adc
mov
sub
hlt
(bad)
daa
call
movs
das
adc
adc
ret
out
adc
je
sub
loope
adc
add
hlt
inc
div
outs
pop
fldenv
xchg
sbb
sbb
or
sub
fs
ins
xor
scas
leave
xor
pop
stos
jmp
xlat
jbe
cli
(bad)
pop
cdq
push
adc
fldcw
xor
mov
cmp
ficom
push
mov
lds
inc
sbb
sub
xlat
sub
jg
(bad)
sbb
arpl
jg
neg
test
sub
(bad)
xor
icebp
pop
js
call
aas
cmp
sbb
ror
xor
mov
lock
cmp
cmc
in
dec
popa
test
(bad)
sbb
imul
or
retf
lahf
dec
rcr
jmp
push
pop
outs
add
push
pop
and
mov
fldenv
les
or
add
ret
outs
pop
or
in
test
mov
or
cmp
aas
and
sub
(bad)
pause
cmp
mov
sub
xchg
xchg
(bad)
inc
and
shl
cmp
out
popf
gs
arpl
adc
test
fldenv
int
fsubrp
xor
mov
stc
or
aad
test
mov
in
xchg
into
mov
mov
clc
or
pop
pop
ja
imul
xor
loopne
jle
adc
dec
and
mov
(bad)
loopne
xor
jp
push
aaa
pop
test
jl
push
jae
mov
call
retf
mov
mov
cmp
dec
xchg
lea
cmps
out
sbb
or
sti
mov
sub
into
bound
xor
xchg
add
or
inc
test
mov
lock
sar
sbb
mov
jb
stos
sbb
adc
ins
cmp
clts
adc
cdq
fwait
sub
xor
das
inc
leave
mul
aad
xor
mov
jmp
cmp
(bad)
js
aam
xchg
popa
rcl
es
jge
std
test
mov
inc
mov
popf
adc
cmp
jmp
movs
mov
js
xor
push
jns
test
retf
ret
sbb
xor
dec
mov
push
xor
pop
in
xchg
in
push
jae
adc
hlt
add
hlt
dec
stos
sar
stos
adc
add
or
outs
loope
stos
xchg
sti
std
jmp
cmp
push
(bad)
not
inc
push
cs
and
jl
daa
stc
jb
or
mov
mov
iret
or
jns
xor
dec
mov
or
mov
dec
dec
push
mov
push
pusha
mov
(bad)
push
sar
mov
pop
ror
es
sub
mov
fcmovu
xchg
mov
xchg
movs
mov
(bad)
jecxz
xor
out
cmc
jp
pop
push
(bad)
hlt
ins
cmp
jp
mov
gs
out
mov
fisttp
and
shr
es
pop
and
sbb
iret
into
out
jae
push
mov
and
or
add
and
movs
inc
mov
int
sbb
or
inc
mov
sbb
les
push
sub
push
int3
add
xchg
inc
cmps
sahf
cmp
jmp
xor
dec
push
adc
xchg
cld
call
out
jmp
adc
mov
pop
popf
jbe
sub
push
cmp
(bad)
loop
mov
push
xor
mov
xor
mov
ss
adc
cmp
outs
mov
arpl
adc
aad
jne
sub
jae
push
inc
mov
or
sbb
inc
scas
cmps
push
mov
lea
popf
scas
xchg
sti
shr
mov
push
mov
test
xchg
xor
int3
(bad)
into
rcl
cmp
pop
push
mov
iret
lds
add
cs
xchg
into
xchg
mov
xchg
or
nop
or
addr16
fwait
retf
xor
in
dec
fs
inc
or
mov
fwait
sbb
push
and
mov
mov
mov
cmp
fdivr
sbb
add
inc
push
bound
xor
sahf
ja
aaa
lahf
jg
test
pusha
ins
enter
jno
or
in
movs
scas
mov
(bad)
repz
sub
inc
lds
lds
fld
lock
mov
ja
imul
(bad)
in
pop
(bad)
jg
jns
sbb
dec
inc
pop
pop
sub
inc
sbb
dec
mov
xchg
sti
adc
dec
pushf
or
pop
test
pop
(bad)
jne
push
xchg
mov
or
mov
arpl
pop
mov
lods
ror
js
sub
lods
and
scas
mov
dec
adc
mov
inc
xchg
xchg
jae
mov
xor
call
aaa
jle
(bad)
adc
(bad)
std
stos
or
ficom
sahf
jmp
push
movs
sti
mov
xchg
jb
sbb
cmp
mov
mov
xchg
gs
(bad)
les
sbb
mov
jp
sub
test
mov
cmp
pop
rol
mov
ds
rcr
jae
sti
push
jo
xor
add
pop
adc
int3
test
add
pop
icebp
sub
loope
scas
sbb
ins
loop
pop
repnz
push
mov
ss
mov
push
popf
pop
add
stos
popf
dec
push
sar
mov
out
adc
retf
mov
les
xor
push
xor
es
adc
in
in
xor
retf
adc
imul
and
or
aas
int3
and
(bad)
ret
iret
sar
jo
fdivr
int3
jb
cli
push
xlat
outs
icebp
mov
aad
fwait
mov
xchg
pushf
in
cmp
imul
cmp
fs
aad
cmc
jmp
out
xor
sbb
stos
icebp
jle
sub
fld
shl
mov
sub
jg
stc
cmp
icebp
(bad)
add
out
or
pop
lahf
add
jp
test
xchg
push
xchg
mov
ret
jb
les
xor
pop
stc
mov
pop
aas
push
xor
in
push
outs
sbb
(bad)
pop
mov
rol
mov
into
adc
fstp
xchg
loop
xchg
cdq
(bad)
les
xchg
fs
push
mov
clc
jmp
(bad)
lods
test
ja
addr16
xlat
out
mov
mov
popf
pushf
mov
sbb
mov
xchg
popa
jp
sbb
and
xchg
pop
mov
inc
cwde
dec
mov
(bad)
sub
xor
jb
sub
push
iret
mov
shl
fwait
cmp
cmp
data16
div
add
sub
jmp
pop
push
adc
and
and
(bad)
push
les
inc
js
add
mov
push
push
fisub
imul
mov
xchg
dec
jmp
cmp
outs
jle
in
clc
push
fsubr
retf
xor
cli
cmp
lahf
sahf
and
movs
pop
mov
bound
or
loope
dec
in
aad
dec
push
mov
cli
cmp
dec
(bad)
and
in
xchg
cmp
(bad)
or
test
add
lahf
dec
fimul
clc
jne
(bad)
jmp
fild
scas
jae
daa
xor
jo
jmp
fmulp
data16
outs
adc
sub
fistp
xor
int
mov
jmp
in
sub
fldpi
pop
xor
lea
jno
push
mov
into
sbb
push
cmp
xchg
add
fs
(bad)
arpl
dec
or
mov
loop
pusha
ds
fsubr
out
retf
leave
ret
push
int3
jge
fnstcw
or
xor
xchg
loopne
xchg
adc
xchg
cmps
xor
adc
rcr
cmp
stos
lea
out
mov
pop
inc
dec
xlat
retf
dec
push
fadd
jl
movs
jmp
inc
dec
leave
repz
and
xchg
je
lods
jecxz
mov
add
sbb
adc
sbb
adc
cmps
je
push
std
dec
gs
xchg
sbb
fbstp
retf
push
loopne
pop
cmps
movs
jecxz
ss
jmp
fsubr
dec
dec
rcl
(bad)
nop
sub
out
xor
gs
push
mov
aam
lods
stc
pop
repz
mov
sbb
out
fisubr
lock
ja
adc
fwait
scas
shr
test
inc
repnz
jmp
shl
mov
mov
mov
leave
pusha
jg
and
inc
hlt
icebp
xlat
inc
jmp
adc
jb
cmp
inc
mov
popf
inc
inc
pop
dec
int
les
add
mov
daa
mov
sbb
outs
cld
out
cmp
icebp
inc
push
adc
dec
sbb
inc
js
or
stc
cmp
add
rcl
call
mov
inc
mov
fstp
cmps
fnsave
cmps
aam
push
daa
imul
or
xor
jg
mov
mov
fcmovbe
xchg
xor
xchg
jecxz
add
test
adc
jecxz
jmp
stos
pop
in
scas
aaa
and
test
in
stos
push
mov
pop
sub
sbb
xchg
iret
mov
call
adc
xor
fdivp
mov
pop
cmp
bound
cmps
outs
jmp
xchg
push
mov
xchg
inc
cmp
push
mov
inc
in
ficom
jmp
ror
fiadd
cmp
fs
mov
push
mov
or
ret
mov
inc
cdq
dec
in
inc
push
cmp
push
pop
mov
dec
jb
xor
or
add
sub
lea
scas
pop
bound
cmp
jb
cs
xor
cmp
jb
call
xchg
aad
sbb
dec
inc
sti
mov
in
mov
(bad)
jo
sbb
sti
mov
test
mov
outs
ins
push
add
(bad)
xchg
in
jae
sahf
(bad)
js
xchg
jno
mov
rol
fistp
loop
fisub
call
test
sub
addr16
into
dec
int3
dec
and
rcr
inc
addr16
push
pop
xor
in
jp
jl
pop
xchg
dec
sbb
fimul
dec
xchg
ss
fistp
cmp
jns
push
xor
jo
push
popa
jmp
xor
(bad)
mov
call
stos
jp
jle
sbb
ins
pop
mov
ss
pushf
add
jbe
daa
cmp
mov
aam
or
sub
nop
push
popa
pop
jmp
mov
pop
repz
adc
mov
inc
sahf
sbb
inc
sub
rol
dec
xchg
mov
jae
sub
sub
scas
sub
push
mov
lahf
repz
jle
adc
push
dec
shl
cmp
or
js
inc
mov
cmp
(bad)
cmp
add
cmp
mov
mov
int3
push
mov
cli
xchg
push
jge
add
cmp
xchg
dec
xchg
test
mov
pop
dec
dec
fbstp
pop
mov
nop
and
dec
retf
mov
cmp
jl
xlat
sub
mov
xchg
mov
mov
dec
inc
ror
into
jne
lods
mov
dec
cmc
adc
out
inc
cmp
movs
jl
inc
sub
mov
mov
and
jecxz
(bad)
add
les
rol
add
dec
fbld
mov
aam
icebp
inc
pop
scas
push
popf
and
les
jne
mov
into
repz
imul
ins
in
and
call
mov
inc
nop
sbb
inc
ret
inc
out
sbb
ds
ret
je
xchg
mov
rcl
sub
rcr
outs
mov
jmp
mov
out
xchg
mov
aad
stos
pop
or
push
mov
inc
mov
add
cld
in
mov
pop
xor
adc
stos
sbb
ret
out
div
lods
sbb
dec
cmc
shl
add
cmps
pop
mov
aad
mov
push
mov
je
xor
pushf
pop
out
xchg
daa
mov
ret
cmp
jmp
lea
out
or
arpl
mov
es
fld
or
outs
test
out
iret
push
inc
xchg
aam
push
sbb
sub
stos
pop
int
scas
je
mov
xchg
ror
ss
adc
cmp
scas
sbb
dec
int
cmp
dec
adc
push
stos
fisttp
cmps
xchg
adc
mov
fxch
shl
cs
sbb
jns
xor
movs
fwait
setb
xchg
inc
test
xor
jne
pop
sub
xchg
iret
adc
mov
cmp
pop
cmp
and
jnp
mov
jno
xor
cmp
adc
imul
adc
mov
cld
jg
cmc
gs
data16
dec
(bad)
push
push
in
out
retf
adc
(bad)
xor
or
test
or
cld
inc
(bad)
dec
jno
int
sar
push
pop
inc
jo
enter
fstp
test
jp
fwait
push
imul
addr16
fimul
iret
movs
(bad)
retf
cmp
pop
mov
aad
cmp
dec
rcl
rcl
cs
or
or
lea
mov
dec
out
jbe
ror
ja
xlat
xor
cwde
ss
xchg
mov
icebp
push
cmp
dec
jo
and
and
pop
retf
addr16
sub
es
inc
push
lods
inc
mov
(bad)
sub
mov
cmp
or
idiv
out
push
sub
push
fisttp
pop
imul
adc
add
pushf
int
cdq
push
mov
add
lods
mov
hlt
mov
loope
movs
sbb
adc
ret
push
aam
dec
xchg
das
gs
ds
and
retf
enter
pop
mul
mov
shl
or
enter
(bad)
mov
xchg
dec
pushf
cmp
mov
xor
test
nop
dec
(bad)
cmp
das
dec
and
adc
inc
xlat
jbe
ins
dec
mov
mov
sub
inc
sti
mov
out
nop
sub
movs
fistp
in
mov
push
in
pop
and
jbe
xchg
sbb
sbb
mov
aaa
fcomi
pop
pop
jecxz
mov
add
retf
test
sbb
and
je
into
cmc
add
fcom
and
repz
int3
adc
xchg
push
push
and
cmps
adc
mov
xor
fwait
pop
push
jno
mov
pop
test
js
ins
arpl
add
xor
arpl
mov
std
lahf
fistp
cmp
test
je
mov
ss
xchg
push
pop
stos
pop
aam
movs
gs
dec
sub
add
in
test
mov
add
(bad)
sub
jbe
pusha
retf
adc
cmp
cmps
add
dec
mov
mov
and
aad
pop
(bad)
xchg
jp
pop
sar
pusha
repnz
sbb
mov
cli
(bad)
call
add
stc
(bad)
mov
js
out
es
and
mov
inc
mov
and
call
out
idiv
aaa
mov
test
bnd
jno
(bad)
and
lea
sar
arpl
mov
mov
dec
add
pop
xchg
lahf
mov
mov
push
repz
out
jbe
cmp
xchg
push
sbb
and
mov
jl
pop
mov
adc
pop
nop
adc
dec
add
in
aam
cmps
pop
js
ins
push
mov
pop
in
dec
mov
iret
imul
mov
shr
jge
pop
in
jg
mov
xchg
sbb
mov
dec
jo
push
xchg
sbb
data16
xchg
stc
pop
or
xrelease
inc
adc
cmp
int3
jne
sub
inc
out
in
bnd
addr16
cmp
inc
test
rcl
dec
div
add
jnp
xchg
mov
cmp
mov
jne
mov
in
addr16
mov
dec
test
mov
and
sub
push
jb
inc
(bad)
jmp
pop
xchg
mov
imul
xchg
or
cmp
out
mov
or
outs
or
inc
add
aaa
popa
sbb
and
jle
sti
call
xor
mov
movs
jns
jb
jb
nop
ss
pop
inc
cwde
jmp
cmc
jbe
icebp
test
cmp
push
sub
mov
daa
xor
out
add
mov
lds
jne
jbe
cmc
or
lds
sti
inc
in
inc
scas
js
sbb
sbb
inc
cmc
lock
pop
xor
and
retf
mov
sub
mov
push
movs
rcl
dec
je
sbb
fs
shr
xor
cmc
pop
stos
les
xor
mov
sbb
ss
xor
dec
ins
std
push
shl
je
jo
push
stc
stc
inc
in
fldcw
push
sbb
je
arpl
movs
inc
icebp
aas
sahf
jae
jl
dec
je
push
dec
adc
je
test
mov
ret
xchg
les
lods
cmp
fsub
(bad)
mov
data16
xchg
dec
out
mov
cmp
inc
mov
into
outs
mov
dec
and
mov
and
xchg
mov
mov
push
pop
add
pushf
cmps
mov
pop
inc
or
ret
sub
fstp
push
jle
call
into
mov
inc
jge
(bad)
jbe
sub
dec
shl
xor
mov
int
mov
loope
mov
cmp
push
movs
and
rol
leave
shl
xchg
je
loop
inc
sub
xlat
push
pop
inc
mov
lahf
mov
adc
fstp
sbb
lods
and
push
push
iret
sub
pop
or
mov
fsubr
push
cmp
push
dec
int
(bad)
retf
out
ja
sbb
jg
scas
enter
cmp
ins
add
mov
not
pop
add
dec
mov
or
mov
mov
mov
sub
push
test
loope
mov
ficomp
mov
je
xlat
lds
dec
sbb
xchg
or
mov
and
jae
(bad)
dec
mov
retf
pop
adc
imul
push
lds
aad
cli
ss
movs
stc
ds
(bad)
push
repz
push
add
aas
fcmove
jae
dec
cmp
in
outs
clc
jae
dec
fisubr
mov
jb
scas
test
fnstcw
(bad)
mov
mov
inc
shl
scas
cld
pop
or
test
xchg
xor
fmul
daa
lahf
rcr
dec
fsub
push
dec
push
ds
es
cmc
xor
shl
bound
ret
aad
cmp
fstp
pop
retf
cdq
mov
pop
adc
or
test
jbe
mov
and
add
sub
jae
(bad)
shl
int
mov
ficom
mov
xor
push
pop
jecxz
aam
mov
and
(bad)
daa
test
call
ja
sbb
or
ds
aaa
rcl
pop
push
out
inc
sbb
lea
out
and
sub
ds
pop
dec
dec
dec
sub
es
sub
dec
mov
mov
and
sbb
sbb
and
push
shl
and
push
lods
cmp
adc
test
push
dec
cwde
mov
jo
in
rol
adc
call
lods
adc
push
je
mov
aad
rcl
xchg
push
xchg
cmc
retf
iret
mov
scas
xchg
xchg
xchg
or
jne
add
test
(bad)
sahf
fisubr
in
pusha
sub
xor
fdiv
xchg
dec
jno
cmovg
cld
lock
cmp
sbb
sub
ficomp
ins
pop
mov
jbe
popf
cwde
popf
mov
mov
and
pop
inc
fidiv
(bad)
mov
ins
int3
pop
cmp
inc
pop
cwde
or
mov
pop
sbb
pop
add
inc
shr
fld
xchg
jecxz
jne
push
xchg
fst
shr
iret
jg
shr
ins
dec
retf
jnp
inc
idiv
mov
and
adc
fwait
pop
push
and
inc
jge
loope
test
xor
mov
or
cli
and
and
jno
fisttp
xlat
daa
and
add
ss
test
or
aam
out
iret
movs
cwde
push
sub
jmp
mov
loop
add
inc
adc
jbe
rcr
pop
pop
add
inc
int3
pop
test
js
sahf
inc
cmp
aam
cmp
movs
ror
(bad)
push
mov
js
push
aam
outs
aaa
sahf
jb
cmc
inc
xchg
test
or
movs
xor
iret
out
jmp
les
pusha
mov
shl
mov
mov
loop
mov
jo
aaa
xchg
idiv
xchg
and
stc
out
pop
out
sbb
mov
fld
sbb
je
je
xchg
icebp
por
in
jnp
fs
icebp
(bad)
mov
adc
sbb
scas
add
jbe
fmul
loop
je
cmp
loopne
addr16
dec
popf
xchg
add
cmps
or
mov
mov
dec
rcr
adc
cmp
push
rcr
loope
clc
lea
or
pop
repnz
fdivr
mov
adc
pop
mov
mov
lea
daa
(bad)
cmp
ficom
sbb
outs
jmp
ret
pop
xor
fcomp
pop
in
inc
fwait
cmp
jae
mov
mov
rcr
mov
push
inc
fldenv
data16
sub
pop
pop
push
push
mov
add
(bad)
pop
push
adc
arpl
aad
pushf
fistp
mov
add
loop
adc
xchg
fidivr
mov
imul
mov
pop
push
push
cmp
xlat
lods
dec
push
in
ins
dec
mov
push
sti
or
mov
and
sbb
scas
xchg
adc
gs
lods
out
out
sub
jg
repnz
sar
inc
xchg
pushf
jp
jae
scas
xor
aaa
cmp
int
adc
fadd
sbb
cmp
and
call
outs
shr
xchg
jmp
sub
movs
mov
dec
rcr
pop
test
test
into
cs
ss
call
mov
sub
dec
mov
scas
sbb
mov
jno
dec
pop
hlt
jne
leave
loope
movs
inc
mov
fbld
call
in
clc
(bad)
and
rol
or
xchg
aam
mov
cmps
sbb
xchg
dec
sar
and
mov
aam
inc
mov
stos
push
in
call
or
cli
(bad)
movs
push
adc
jg
push
shl
aaa
(bad)
mov
ret
jb
push
mov
adc
mov
xor
ret
js
dec
cmps
mov
xor
fs
sbb
xchg
dec
leave
mov
or
xor
or
push
xchg
nop
imul
add
int
dec
inc
jmp
mov
es
dec
pop
dec
mov
cmp
pop
movs
or
add
xchg
or
scas
dec
sbb
ret
into
lock
jb
add
adc
pop
ror
jp
stos
cli
sbb
mov
dec
(bad)
fmul
pop
push
jp
inc
pop
imul
mov
repz
arpl
xor
sub
sub
je
bound
push
add
(bad)
dec
fucomi
jns
cmp
lahf
jmp
movs
pushf
xchg
daa
jae
sar
pop
or
pop
sbb
push
sub
and
jb
dec
jle
(bad)
jo
ror
and
bound
mov
ins
cwde
mov
push
out
sub
mov
jnp
scas
push
mov
add
or
jb
aam
cwde
pop
dec
mov
inc
sbb
adc
cli
jne
add
neg
dec
cdq
imul
sahf
sub
test
dec
mov
nop
jle
xor
neg
add
mov
mov
adc
(bad)
inc
mov
movhps
loopne
xor
shl
xor
fdiv
xrelease
int3
rcl
xor
jae
rol
(bad)
cwde
imul
es
push
(bad)
ret
data16
in
adc
scas
outs
xlat
prefetcht2
adc
mov
mov
dec
add
stos
dec
jecxz
ins
popa
jl
add
pusha
push
inc
test
ret
cwde
cdq
inc
outs
jo
or
aad
movs
fdivrp
cld
pushf
adc
pop
lea
ss
dec
cdq
push
(bad)
cmp
fdiv
(bad)
or
aas
sahf
frstor
mov
and
pop
sbb
cs
dec
push
pushf
ror
in
fadd
sub
aad
aas
repz
out
mov
and
mov
stos
fstp
test
sub
add
xlat
inc
sbb
push
mov
cli
mov
imul
jmp
inc
jb
sub
clc
js
repnz
popa
xchg
aad
xor
jne
ja
push
add
or
push
push
mov
mov
xchg
pop
push
fadd
mov
xor
stos
iretw
mov
ror
popf
mov
je
xor
jecxz
movs
push
mov
into
sub
test
sar
dec
push
outs
push
jge
xchg
jge
popf
in
outs
shl
dec
cmp
std
sahf
bnd
fbstp
inc
jb
pop
mov
ins
push
movs
dec
mov
xlat
fwait
ja
push
ror
jg
leave
inc
in
gs
pop
sub
add
adc
inc
cmp
adc
xor
xchg
movs
out
clc
xchg
mov
por
push
fcom
(bad)
push
mov
cmp
cli
int
cmps
pop
loop
inc
jl
inc
lods
xchg
pop
dec
mov
mov
sub
cwde
adc
icebp
cli
shr
ja
call
shl
pop
fcom
loopne
sub
test
hlt
cdq
sahf
sti
sbb
test
arpl
mov
xchg
aad
out
sub
(bad)
std
not
gs
xchg
loop
ins
and
jns
outs
test
ror
popf
sub
add
hlt
cmps
sub
fdivr
lock
bswap
cmps
jecxz
and
xlat
aad
rol
sub
xlat
cmc
sbb
inc
and
mov
inc
xor
stc
mov
ja
add
jp
clc
paddw
and
imul
fist
mov
popf
add
inc
or
ins
imul
sbb
adc
xchg
cmps
cmp
in
ror
call
aam
or
add
bound
mov
pop
cmps
loope
or
cwde
sbb
leave
adc
and
imul
aaa
cmp
mov
jecxz
cwde
cmps
inc
sar
scas
mul
das
push
hlt
inc
int
mov
and
std
not
pop
dec
repz
inc
js
cmp
adc
scas
mov
xchg
push
pop
fnstsw
push
dec
pop
add
xchg
inc
pop
dec
add
gs
ret
stc
mov
jle
movs
addr16
dec
mov
sti
jnp
cdq
xchg
daa
mov
movs
push
aad
(bad)
fidivr
sbb
test
mov
add
cmp
or
cdq
cmp
lods
sahf
ja
cld
push
add
mov
call
loop
push
push
inc
add
mov
cmp
pop
push
inc
lds
sbb
dec
push
repnz
and
movs
mov
test
xchg
lods
mov
aad
mov
jge
jmp
gs
cmp
in
sbb
test
adc
lahf
dec
push
sahf
jae
adc
mov
cmp
sbb
mov
pushf
pop
ror
pop
nop
mov
or
repz
mov
fnstcw
xor
mov
dec
imul
shl
inc
inc
js
pop
dec
popf
jle
pop
outs
sub
jnp
pop
fs
xor
inc
push
mov
in
clc
mov
ins
sbb
pop
test
push
push
call
dec
add
mov
lahf
mov
fldcw
and
push
das
add
sub
inc
movzx
ja
pop
lahf
std
in
daa
lahf
push
jmp
data16
rol
and
(bad)
sbb
fwait
cs
inc
inc
ja
push
and
loope
jle
call
leave
mov
jg
xlat
lea
jne
fadd
sub
ds
cmp
add
and
xor
and
mov
xor
fidivr
add
int3
fsub
pop
daa
sbb
jno
adc
xchg
(bad)
shl
and
pop
jne
dec
pop
scas
adc
inc
out
jg
fst
add
sub
inc
call
push
sbb
push
push
add
pop
movs
xchg
rcl
cli
ret
adc
stc
mov
push
aad
cmp
and
(bad)
mov
mov
ins
std
loop
movs
stos
inc
icebp
jno
push
imul
pop
retf
push
push
mov
ror
sub
fld
imul
jge
and
cmp
xlat
xchg
sub
sti
rcl
push
arpl
mov
(bad)
jnp
cmp
loope
jp
das
or
fwait
push
stc
inc
in
hlt
pop
outs
or
mov
sbb
push
mov
dec
ret
adc
or
sub
mov
mov
sub
mov
test
out
int
repnz
push
mov
sar
sub
adc
push
loope
les
(bad)
cld
cmc
inc
int3
ja
xor
pop
jne
rcr
shr
adc
daa
hlt
arpl
inc
int
and
xchg
cmp
inc
mov
dec
test
push
addr16
add
mov
add
and
pop
and
pop
or
fidiv
mov
dec
xor
mov
cmovp
or
add
dec
dec
push
ins
out
inc
lds
push
mov
push
xchg
or
ret
daa
imul
ss
scas
leave
dec
xor
mov
xchg
xchg
mov
int
inc
rcl
ja
stos
and
or
xchg
dec
mov
enter
jmp
push
sahf
mov
dec
imul
fcomp
arpl
mov
jmp
mov
xchg
data16
cmp
inc
sahf
mul
sbb
lock
es
xor
jg
int
pop
shl
test
sub
inc
sub
stc
jbe
stos
sti
jnp
push
xor
fst
mov
xchg
add
sbb
test
dec
enter
arpl
jmp
fadd
(bad)
push
fwait
xlat
test
or
inc
push
das
fld
lods
(bad)
gs
xchg
pusha
leave
inc
sti
push
inc
idiv
(bad)
ins
je
ror
mov
pop
(bad)
adc
outs
inc
push
or
test
addr16
leave
lods
fs
fiadd
mov
mov
fs
jnp
inc
imul
fsubr
pop
int
loop
pop
rol
sub
(bad)
sbb
adc
retf
(bad)
mov
cmp
cmc
sub
xchg
jecxz
xor
mov
pop
xor
das
shr
icebp
dec
mov
ret
test
pop
int3
adc
pop
xchg
xor
adc
test
mov
xlat
or
sbb
ins
in
je
call
inc
loop
cdq
fdivr
cmp
test
addr16
or
xchg
adc
loope
xor
movs
pop
add
jo
mov
sbb
outs
pop
adc
stos
fdivr
retf
inc
jmp
das
push
retf
xor
and
dec
dec
iret
sub
dec
retf
fdiv
mov
int
in
adc
fs
mov
sub
fistp
add
xor
xchg
popa
mov
(bad)
mov
jg
add
xor
push
adc
(bad)
out
cmp
or
dec
inc
cmp
mov
aam
test
out
cmp
ins
xlat
icebp
hlt
jle
pop
test
repz
jle
cmc
stc
jl
ficomp
retf
call
push
fwait
sbb
int3
pop
xor
pop
xor
adc
cdq
popa
aam
sub
icebp
fbld
and
je
out
cwde
outs
jbe
fldenv
shl
movs
cld
daa
retf
sahf
shl
adc
imul
adc
sar
mov
test
adc
jmp
lock
shl
ret
or
fistp
(bad)
pop
sar
jg
sub
adc
adc
icebp
mov
mov
adc
aad
aaa
mov
sbb
cs
mov
idiv
add
and
inc
push
or
cdq
leave
daa
xor
add
mov
and
fwait
scas
je
dec
sahf
pop
add
cmp
sub
push
inc
sbb
inc
ret
cli
push
in
aam
dec
push
lods
pop
stc
push
out
es
xchg
jge
loop
mov
jecxz
jno
xor
js
scas
cmc
cmp
dec
(bad)
mov
mov
jecxz
lods
in
je
pop
and
je
shl
xor
fidiv
or
mov
and
fisub
sub
fsub
jno
enter
xor
into
lea
movs
inc
jo
xlat
pop
ret
mov
ficomp
jo
push
rol
cmc
xchg
fs
jecxz
add
call
ss
movs
div
pop
sub
sbb
ret
fistp
icebp
inc
les
xlat
jle
add
stos
test
sbb
sub
(bad)
jmp
pushw
mov
sbb
call
test
in
mov
jle
fs
aaa
and
dec
inc
dec
test
pop
(bad)
mov
dec
push
xchg
inc
push
loopne
dec
icebp
mov
cmp
and
xor
lds
sbb
frstpm(287
iret
jmp
inc
push
lods
daa
imul
leave
jl
inc
pop
pop
inc
mov
push
push
cmc
scas
in
mov
shl
inc
sti
and
pop
xor
in
ds
pop
(bad)
xchg
add
daa
pop
xor
popa
cmp
loop
cs
(bad)
sub
int3
bnd
lea
xor
rcl
dec
std
jo
ror
jns
dec
and
push
jg
cs
and
sbb
cwde
in
sbb
jo
xor
loop
and
and
cmp
push
and
jmp
cmps
stos
sbb
cmp
dec
xor
mov
cwde
(bad)
jns
cmc
inc
outs
jle
sbb
push
sub
push
fsubr
mov
imul
mov
or
mov
add
int3
leave
ret
frstor
jmp
jae
xor
pop
jecxz
lods
pop
(bad)
pop
pop
(bad)
lods
hlt
mov
aaa
cmp
push
sahf
fwait
push
adc
jmp
movs
inc
div
cmp
cmp
jmp
aaa
and
rol
push
lock
repz
out
lods
(bad)
xchg
cmc
out
push
aaa
in
jmp
clc
inc
push
jmp
add
mov
push
in
xchg
rcl
or
inc
sub
in
adc
in
xlat
push
lea
xchg
pop
rol
pop
stc
fwait
sub
ror
and
mov
lds
sbb
dec
adc
in
pusha
out
fst
jno
mov
stc
add
retf
aaa
or
or
test
cld
test
enter
inc
sahf
call
and
inc
ret
adc
dec
loope
fst
fsubrp
fist
jmp
pop
scas
out
adc
ror
sub
stc
or
(bad)
dec
leave
pop
out
clc
sbb
fwait
shr
icebp
fst
sub
or
sti
cmp
push
add
or
adc
mov
sub
inc
add
xor
movs
pusha
xor
dec
jns
addr16
xor
call
gs
out
mov
outs
(bad)
repz
es
cmp
mov
stos
inc
cmp
mov
sub
dec
shl
rol
(bad)
dec
jmp
adc
repnz
dec
ins
mov
xchg
mov
sub
loope
cmp
jmp
mov
aam
mov
pushf
imul
movq
out
pop
dec
shl
cmps
mov
jo
adc
cmp
cmp
lds
mov
pop
pop
sub
or
or
xchg
retf
or
jb
popf
xchg
stos
ds
ror
dec
pop
ds
je
jbe
cmp
stos
mov
sbb
mov
mov
bound
lahf
push
add
int3
push
out
das
leave
push
cmp
stos
fwait
imul
lahf
int3
mov
aad
out
xchg
mov
cmp
xchg
or
out
pop
push
fwait
ret
or
push
push
dec
adc
in
and
mov
mov
movs
dec
repnz
js
mov
adc
dec
cmp
iret
xchg
xor
int3
out
add
inc
sub
test
ins
sbb
xchg
sbb
push
mov
push
clc
ds
jge
dec
repnz
fld
xchg
setp
dec
aad
in
stos
daa
cmp
jbe
movs
cmp
xor
aad
rcl
push
xchg
cmp
sub
cmp
dec
adc
jmp
loopne
imul
or
ins
dec
gs
mov
adc
ror
xchg
int
push
adc
cmps
lahf
xchg
push
neg
ret
inc
js
aas
int3
jmp
sbb
dec
adc
test
mov
push
cmps
mov
lods
popa
ret
sub
arpl
push
adc
scas
inc
fisubr
xchg
aam
add
pop
jmp
xchg
pop
es
sbb
div
fsub
sub
xor
stc
(bad)
in
fsubr
push
nop
iret
(bad)
in
iret
arpl
mov
fdiv
sbb
ror
in
cli
loope
sbb
out
pop
in
and
fimul
pop
pop
gs
nop
cmp
mov
xchg
add
icebp
xchg
xor
test
sbb
jmp
jecxz
shr
js
mov
clc
xchg
push
retf
push
mov
ins
mov
lds
mov
xchg
aad
push
xor
test
loop
adc
xchg
xchg
fdivr
es
cs
sub
popa
jbe
mov
retf
cmps
rcl
call
sbb
pop
or
ja
mov
jg
stc
inc
call
cld
jno
add
xchg
mov
or
sub
adc
scas
in
cmp
xchg
jmp
dec
test
aam
in
enter
mov
dec
clc
adc
rcl
sub
and
movs
out
gs
or
xor
js
movs
sbb
call
jl
jge
rol
lock
repnz
adc
push
test
add
push
js
sbb
push
xor
ficomp
pop
in
push
dec
popf
xor
outs
pop
lds
adc
punpcklwd
jne
imul
scas
push
dec
int
leave
mov
and
and
jle
loope
mov
inc
mov
cmp
(bad)
out
add
daa
movs
mov
mov
lea
adc
mov
xor
lock
fidivr
mov
shl
bound
ret
dec
inc
xlat
ds
push
rol
cmp
(bad)
lahf
cmp
out
push
scas
pop
mov
push
mov
mov
sbb
xchg
(bad)
add
lock
push
loopne
mov
cld
xchg
xor
and
int3
cs
(bad)
inc
pop
mov
and
jnp
daa
test
mov
and
pop
mov
lahf
push
xchg
ds
lock
das
and
adc
push
mov
out
sub
out
mov
jmp
jp
push
hlt
lahf
mov
add
sub
test
pop
repz
xor
stos
not
mov
scas
mov
mov
cmps
pop
rcl
cmp
cmps
or
jno
js
or
fsubr
cli
and
cdq
mov
pop
sar
pushf
aaa
add
cmps
fwait
inc
rcl
push
out
pop
xor
rcr
outs
sub
xor
jmp
out
lods
rcr
jno
mov
mov
pop
pop
add
test
ins
aad
mov
cmp
mov
and
sbb
loope
iret
jl
shl
mov
push
data16
mov
out
pop
mov
push
(bad)
push
and
adc
popa
mov
jl
add
add
scas
test
lods
nop
pop
imul
pop
inc
not
mov
push
stos
popf
fstp
sub
out
(bad)
mov
cwde
sub
add
iret
xchg
pop
xchg
outs
add
aas
inc
xchg
outs
add
loope
push
dec
jnp
or
adc
movs
sub
dec
sub
xchg
add
ins
pop
rcr
sub
rcl
in
mov
cdq
mov
iret
pop
jmp
jb
int3
fs
daa
movs
iret
adc
cld
mov
pop
je
push
mov
rcl
and
push
aas
or
push
pop
mov
jae
call
mov
std
aad
pop
mov
cmp
mov
icebp
jmp
cmp
xchg
fistp
sbb
inc
adc
ret
pop
loope
inc
pop
pop
cmp
push
push
mov
sbb
adc
cmps
test
imul
jae
fild
inc
aaa
stos
xchg
iret
out
cmp
(bad)
jo
mov
jns
mov
pop
bound
dec
push
stos
div
jmp
jo
xchg
pop
xchg
jne
pop
aad
mov
mov
int3
mov
mov
dec
(bad)
icebp
popf
ret
into
mov
aaa
mov
call
fs
or
ds
inc
addr16
adc
(bad)
arpl
movs
adc
xchg
pop
adc
bound
or
add
dec
dec
sbb
mov
xlat
out
pop
imul
sbb
rcl
mov
jae
cld
cmovp
rcpps
stos
pop
adc
adc
(bad)
test
jmp
sub
dec
test
es
movs
or
jmp
je
mov
lods
dec
xchg
push
pushf
in
push
(bad)
dec
pop
fisttp
and
mov
and
xor
pop
loop
jae
lock
mov
cmp
sub
pop
mov
sbb
sahf
enter
(bad)
std
loop
out
adc
aad
push
push
push
sar
idiv
mov
mov
mov
inc
pop
or
inc
push
cmp
ins
fadd
jecxz
xor
idiv
call
add
push
jp
pop
sahf
inc
stc
sbb
daa
jo
cmp
int3
dec
scas
inc
out
cmp
arpl
dec
(bad)
nop
jge
xchg
cs
shl
and
or
cmp
rcl
call
push
pop
mov
xchg
sti
jmp
add
ja
popa
movs
(bad)
adc
(bad)
jge
jbe
dec
(bad)
lock
dec
test
sti
mov
xor
es
mov
aad
iret
inc
popa
retf
or
jbe
stos
aaa
loopne
sbb
cmc
sbb
or
cmps
pushf
xor
dec
sbb
or
shl
stc
mov
loopne
sub
sbb
sar
outs
dec
or
mov
in
test
dec
test
int3
mov
jp
xor
jmp
pop
retf
call
xor
popa
dec
mov
mov
sbb
mov
inc
xor
(bad)
mov
adc
fcomp
pop
push
movs
jmp
cmp
mov
mov
lahf
xor
xchg
cmp
gs
cmps
fstp
test
dec
or
sub
repnz
dec
jns
push
imul
mov
lea
fstp
adc
lods
dec
stos
call
jae
test
inc
jp
cmp
adc
mov
(bad)
ror
daa
hlt
xchg
fcmovnu
sbb
ror
adc
or
in
mov
mov
fistp
std
xchg
clc
outs
stos
adc
pop
mov
sti
jno
dec
push
or
ss
or
repnz
(bad)
mov
out
test
aam
iret
aad
fstp
ror
call
std
dec
and
mov
fistp
(bad)
push
fsub
ja
push
arpl
add
out
mov
mov
pop
ds
add
hlt
xchg
inc
sar
loopne
fcom
pop
loop
dec
cmps
jno
ficom
push
pop
jo
out
xchg
dec
xor
push
xor
adc
(bad)
xlat
mov
stos
push
jle
xor
push
(bad)
jp
add
(bad)
hlt
arpl
push
in
add
adc
out
retf
aam
popa
das
test
cmp
je
adc
test
jo
add
cdq
jnp
aas
xchg
xchg
int3
sti
sbb
lahf
sbb
push
pop
dec
inc
dec
mov
or
std
ret
pop
push
adc
inc
popf
mov
dec
adc
and
aas
leave
dec
es
rol
fs
call
adc
mov
mov
enter
add
push
gs
outs
and
xor
pop
sbb
jg
in
push
(bad)
(bad)
sub
stos
addr16
add
in
xlat
add
ins
ja
cmc
sar
inc
fs
xor
or
lea
mov
xor
inc
leave
mov
mov
int3
es
scas
es
sbb
leave
ins
loopne
mov
repz
dec
or
fist
movs
sbb
loop
mov
jge
outs
test
or
push
int
add
repz
dec
ins
enter
xchg
jne
retf
ins
test
pushf
mov
daa
scas
jbe
leave
jae
and
push
sub
jp
js
mov
push
xor
daa
sbb
movs
mov
dec
pushf
add
jg
shl
in
shr
mov
popf
and
into
loopne
mov
ins
mov
ror
dec
jg
mov
loope
mov
sub
mov
add
push
adc
(bad)
jo
loope
rcr
ins
fsub
jp
jmp
jmp
fidiv
scas
scas
jg
(bad)
jmp
ins
cs
hlt
shl
add
pushf
mov
adc
xor
daa
mov
out
std
xor
aam
pop
fisttp
in
bnd
sub
cmps
fs
jo
mov
out
into
repnz
mov
movs
test
add
adc
ret
xor
ficomp
dec
or
pop
int
mov
and
pop
cmp
int3
fidivr
xchg
sbb
hlt
jmp
(bad)
push
call
mov
cmc
sub
xor
adc
mov
es
out
jg
movs
rcr
jno
les
sub
pop
inc
mov
mov
daa
inc
sub
mov
movs
call
push
cmps
in
add
push
inc
push
jb
lahf
sbb
pop
call
mov
xchg
xchg
mov
mov
(bad)
xchg
or
add
dec
adc
pop
ror
call
mov
pop
jns
dec
dec
je
push
mov
sbb
mov
icebp
movs
fist
bound
inc
dec
or
mov
inc
rcr
sub
pop
xor
clc
mov
xor
fsub
les
push
mov
popa
jge
aas
xchg
shr
lods
jecxz
or
loopne
add
std
cmp
or
mov
imul
mov
ret
popf
packsswb
xchg
xor
retf
repnz
sbb
and
jb
in
fdivr
popa
ret
sbb
xchg
add
adc
test
ds
dec
or
or
dec
gs
out
retf
mov
ss
xor
pusha
mov
mov
aas
call
pop
clc
rcr
enter
aaa
lods
cmp
mov
ins
dec
xchg
mov
test
scas
xchg
mov
popf
xchg
lods
(bad)
or
jo
push
jmp
inc
or
fcom
and
cmp
stc
adc
jnp
mov
mov
mov
fmul
xor
and
(bad)
cmp
popf
push
jne
jnp
jne
adc
aaa
add
ficom
adc
loopne
mov
ds
inc
cmps
xor
iret
and
sub
mov
sub
int3
stc
(bad)
adc
mov
mov
(bad)
mov
ret
and
int
inc
cld
fiadd
pushf
sti
jl
fisttp
cwde
cmp
ror
mov
scas
or
lahf
mov
lods
cld
pop
ret
push
ds
das
adc
sbb
fisub
xor
test
and
retf
test
cmps
mov
dec
adc
xor
mov
xchg
pop
shr
pop
ins
jg
loop
cmp
dec
jns
ds
cli
shl
pop
mov
es
(bad)
repnz
jge
in
cmp
outs
cmc
adc
inc
mov
push
sar
addr16
sbb
xchg
mov
mov
xor
adc
xor
fmul
ins
pop
cmp
xchg
data16
int
out
xchg
imul
or
cmc
pop
push
xor
xchg
push
dec
sub
adc
fbld
or
xlat
test
jae
sti
loop
sub
fwait
lods
les
mov
fisttp
retf
adc
stos
dec
and
outs
push
jnp
or
retf
mov
loop
cmps
cmp
cwde
iret
mov
ds
cmps
mov
scas
addr16
sbb
jecxz
mov
cmp
mov
pop
repnz
enter
push
imul
or
mov
call
icebp
jnp
cld
cmc
jecxz
lahf
adc
xor
fsub
dec
sbb
adc
outs
inc
cmp
je
push
loope
clc
sidtd
mov
mov
cmp
pop
xchg
fdivr
shl
cmc
arpl
or
ja
mov
push
cli
jns
repz
cmp
cwde
scas
sti
push
and
xor
xor
jnp
loope
jnp
push
out
dec
mov
xor
and
jmp
(bad)
cmp
adc
and
sti
fwait
(bad)
sbb
jmp
sbb
adc
xchg
retf
aas
xchg
add
stos
mov
xchg
jno
(bad)
in
pop
shl
or
repz
mov
(bad)
addr16
lds
stc
loopne
inc
sub
push
enter
ins
sbb
or
jb
addr16
inc
inc
add
lahf
inc
jnp
or
sti
shr
sub
and
sub
add
fs
repnz
push
push
mov
aam
ins
pop
mov
icebp
and
xor
xor
push
outs
out
xchg
and
iret
jae
ja
cmp
push
movs
mov
stos
repz
fcom
dec
xor
leave
or
and
adc
iret
mov
mov
adc
cmp
(bad)
cmp
jno
dec
sub
jmp
mov
jmp
mov
push
sbb
cld
je
nop
pop
sti
mov
fadd
stc
mov
es
test
rol
fcomp
push
push
or
xor
cs
add
pop
mov
outs
out
xchg
retf
and
mov
int
bound
(bad)
outs
clc
cmp
add
mov
push
or
add
stos
aaa
adc
out
inc
push
int3
xchg
pop
cmps
xor
in
movs
jmp
lods
add
adc
mov
and
mov
pop
test
movs
mov
fiadd
dec
stc
xchg
jmp
sub
loopne
cdq
inc
lock
sub
mov
pop
push
adc
outs
dec
jo
in
cmp
add
jmp
(bad)
test
add
jne
xchg
or
add
push
in
sahf
sub
cmp
stc
jae
adc
sti
(bad)
bound
test
lea
(bad)
or
jns
(bad)
push
mov
daa
jno
push
pop
dec
ss
dec
fimul
out
push
retf
push
lea
sub
and
fucom
sbb
mov
daa
enter
adc
add
aad
mov
shr
fwait
ins
and
ins
cmps
jbe
je
retf
rol
or
xchg
xchg
(bad)
dec
dec
push
int
push
in
push
sbb
push
repnz
stos
and
movs
popa
inc
add
ss
aaa
out
(bad)
fld
mov
aaa
fdiv
mov
cmp
aaa
sub
inc
push
dec
inc
pop
mov
jns
aad
xor
xchg
imul
add
pushf
push
push
cld
dec
retf
jns
add
(bad)
and
push
mov
mov
jae
lock
push
or
jge
iret
into
aaa
push
das
les
lds
sbb
int3
shl
outs
leave
movs
jle
jp
pop
mov
pop
imul
std
stos
je
fsub
mov
push
xor
dec
dec
jae
add
(bad)
repz
cdq
fstp
dec
(bad)
mov
xorps
dec
cmp
or
sub
mov
lds
rol
mov
inc
jae
inc
jl
popf
mov
mov
test
cwde
jl
cmps
and
push
or
xor
loopne
ret
jg
iret
arpl
(bad)
or
cmp
aam
inc
mov
sub
xlat
repnz
mov
pop
outs
jno
add
lsl
sub
and
stos
mov
inc
nop
xor
rcl
mov
pop
pop
dec
xor
popf
sub
jle
ficom
cs
rcl
rcr
lahf
jbe
adc
loopne
mul
sub
push
dec
aaa
mov
test
inc
push
mov
aaa
ret
icebp
push
adc
cmp
shl
sbb
call
mov
gs
aam
mov
add
inc
aaa
test
fsubr
mov
mov
push
xor
add
sbb
es
clc
mov
(bad)
psubusw
cmp
or
bound
inc
int3
push
pop
sub
mov
jns
jae
popf
xor
pop
movs
cmc
xchg
mov
(bad)
dec
pushf
mov
push
aam
ret
sti
mov
add
xchg
jl
xor
adc
mov
pop
xor
inc
pushf
(bad)
je
stc
and
jb
sub
jg
jne
lds
pop
xlat
mov
test
inc
jns
pop
pop
jo
cmp
pusha
movs
jo
and
fucomip
mov
int
aad
jle
aas
adc
movs
mov
inc
mov
dec
push
mov
icebp
pop
popf
mov
sub
nop
icebp
push
mov
leave
outs
pop
xlat
cdq
push
jg
arpl
xor
ror
mov
inc
lods
xlat
imul
pop
mov
cmps
adc
nop
inc
adc
cmp
out
pop
cmp
popf
jecxz
in
in
jmp
mov
sahf
push
inc
dec
das
leave
outs
xchg
ins
lods
lea
and
fs
mov
adc
inc
(bad)
aas
js
jmp
inc
dec
mov
daa
jno
mov
fcmovbe
out
ret
call
call
sbb
add
(bad)
jno
fbld
cmp
jp
adc
lea
jnp
pop
xlat
jp
jbe
ss
push
sbb
movs
jo
add
push
and
fdivr
or
jo
or
ror
test
ret
aas
jbe
xlat
retf
into
sbb
dec
sub
jno
pop
fimul
(bad)
shr
cmp
or
mov
sbb
pop
dec
sbb
test
mov
inc
into
test
ins
mov
mov
mov
push
dec
jns
cs
or
inc
aad
or
dec
mov
add
nop
movs
stos
or
ss
or
mov
rol
jo
into
dec
arpl
sbb
cmp
push
jne
mov
dec
test
jae
test
push
adc
dec
jae
sbb
inc
retf
adc
xlat
(bad)
stos
icebp
jle
popf
jge
xor
imul
ds
mov
ins
sub
call
pop
es
in
jmp
jbe
dec
in
jmp
or
scas
call
push
add
mov
dec
ret
ret
and
dec
xchg
fidivr
jmp
scas
jge
jecxz
popf
sub
outs
jbe
jecxz
xchg
sub
push
push
xchg
adc
mov
xchg
pop
retf
ret
stos
and
or
es
cli
xor
icebp
mov
lds
in
imul
or
movs
xchg
in
push
and
dec
fdivr
scas
xchg
movs
xor
imul
lock
push
adc
adc
jmp
lock
pop
adc
aaa
pop
scas
push
xor
aas
jp
scas
push
fst
mov
lods
sahf
cmp
sti
mov
jle
inc
jne
jp
xor
push
loope
shr
inc
xchg
(bad)
pop
or
jmp
cmc
leave
shl
cmps
cs
movs
push
popf
mov
xchg
(bad)
push
(bad)
mov
pushf
xchg
mov
sbb
cmp
jo
jmp
xchg
push
test
js
mov
sub
xchg
gs
cmp
push
dec
repnz
xor
ret
mov
mov
fdiv
jl
lahf
out
or
shr
cmc
stos
jb
xor
fwait
stc
add
xor
jp
cmp
daa
mov
(bad)
and
mov
mov
bound
sbb
push
mov
jl
dec
inc
and
mov
out
loope
ja
lds
js
push
fwait
jp
inc
cli
push
mov
out
inc
dec
hlt
and
mov
xchg
das
sti
sub
inc
mov
mov
jmp
int
cmp
ins
out
into
lods
cs
jnp
xchg
xor
mov
xchg
pushf
push
jb
sahf
xor
mov
aaa
xchg
push
pop
mov
adc
add
sbb
test
pusha
out
cmp
mov
es
movs
inc
out
lds
xor
loope
lods
int3
mov
mov
fstp
jbe
lods
jecxz
cmp
add
xor
jo
inc
push
mov
push
bound
and
sti
mov
add
inc
gs
rcl
mov
jb
fs
pop
aaa
mov
mov
rol
shl
cli
stc
fwait
retf
cmps
mov
call
or
sub
dec
(bad)
and
pop
push
jle
loop
cwde
or
imul
lods
stc
fistp
fimul
popa
inc
out
mov
mov
dec
sahf
push
pop
sbb
imul
(bad)
cmps
mov
out
mov
mov
paddusb
lahf
or
ins
cmps
repnz
gs
or
or
and
xchg
sub
shl
pushf
push
ins
and
cs
or
mov
inc
jno
pop
lahf
rcl
fadd
jbe
retf
mov
mov
cmp
ror
mov
sub
mov
in
retf
pop
mov
std
out
je
pop
adc
ins
out
dec
sbb
pop
inc
sbb
fwait
or
push
adc
xchg
mov
push
hlt
sbb
lods
lods
push
mov
cmp
jns
shl
add
call
or
push
jp
neg
xchg
sbb
enter
jbe
and
outs
retf
and
aam
dec
and
xchg
in
in
pushf
inc
les
xchg
push
mov
pop
cmp
and
sbb
dec
push
mov
mov
daa
sub
clc
stos
add
push
mov
and
inc
inc
mov
pop
xchg
popa
cmps
aas
xchg
add
cmps
fwait
pushf
adc
sbb
(bad)
xor
ds
cmps
rol
mov
fwait
std
xchg
dec
pop
xor
fcom
ret
retf
pop
cs
push
pop
imul
mov
xor
inc
dec
mov
xor
or
push
xchg
push
push
sub
pop
dec
shl
int
sub
xchg
ss
test
fcmovne
push
mov
mov
sub
sub
push
push
pop
sbb
sti
inc
fdiv
inc
or
bound
xor
pop
test
ins
pop
mov
mov
pop
(bad)
jae
pop
stos
jge
xchg
xor
daa
push
xor
xchg
adc
xchg
xlat
cdq
popa
aas
jnp
shl
sub
or
out
and
(bad)
hlt
cwde
mov
mov
add
sbb
dec
repz
sbb
sbb
xchg
je
test
fiadd
jo
out
sub
push
xor
adc
repz
mov
jno
cmp
or
mov
fisub
xor
daa
inc
mov
hlt
imul
mov
sahf
jns
mov
add
lock
cwde
out
cmp
xchg
test
pop
ret
fwait
mov
sub
(bad)
adc
in
aad
je
push
je
pop
out
sub
fisubr
sub
mov
cmp
ret
daa
fst
fimul
mov
neg
or
aaa
in
cmp
imul
and
push
push
dec
jl
push
or
cs
dec
outs
mov
repnz
fld
aam
mov
jno
(bad)
data16
(bad)
xchg
add
nop
sar
sbb
xchg
pop
sahf
or
or
push
stos
dec
cld
pop
ins
test
xor
dec
pop
or
jl
mov
ds
frstor
icebp
jmp
enter
mov
ficom
aam
lea
inc
or
mov
add
pop
cmp
pop
jne
adc
mov
sbb
mov
dec
mov
fcom
dec
mov
movs
dec
mov
stos
aaa
jle
les
scas
std
add
ds
mov
bound
or
adc
fnstenv
jge
add
mov
jne
cmp
pop
lods
out
mov
call
jne
pop
add
je
mov
bound
push
out
xchg
pop
mov
daa
sub
or
and
mov
out
fld
ret
aaa
pop
inc
jge
hlt
mov
cmp
xor
inc
test
mov
retf
cmp
mov
test
mov
or
fidiv
jge
mov
gs
pop
mov
jno
enter
nop
cmp
push
cwde
lods
and
stc
lods
jmp
xor
adc
or
out
pop
mov
xlat
or
in
dec
cld
or
xor
mov
add
shr
out
adc
out
sub
jmp
in
xchg
push
(bad)
aad
xchg
push
jo
or
arpl
push
mov
sub
cli
or
adc
out
outs
xor
dec
repnz
ret
jecxz
jae
ret
popa
mov
xchg
test
retf
je
push
dec
mov
xor
fucomi
xor
das
jnp
push
test
scas
and
repz
and
push
(bad)
out
mov
pusha
cmp
cmp
les
mov
fld
dec
mov
arpl
out
push
mov
inc
xor
and
inc
adc
jge
les
mov
ins
dec
push
xor
(bad)
retf
arpl
or
imul
mov
add
test
pop
sbb
lea
xor
dec
xor
xor
mov
jmp
les
test
pop
leave
shr
add
jecxz
dec
pop
ja
stc
cmp
(bad)
adc
and
lds
fisttp
and
cwde
popf
gs
jb
push
and
adc
jno
fcom
pop
jnp
push
add
xlat
adc
dec
fs
push
fisub
ins
imul
dec
jp
push
or
or
and
xchg
aad
ds
mov
cmps
adc
mov
aas
lahf
ins
sub
dec
ins
lds
in
stos
addr16
xchg
jg
and
test
scas
jg
push
mov
cdq
cmp
sub
adc
adc
data16
lods
stos
stc
mov
inc
mov
adc
mov
xor
push
jb
ja
loopne
add
dec
data16
repz
daa
data16
jbe
fstp
hlt
and
add
pop
push
dec
push
xchg
adc
push
inc
xchg
dec
and
in
xchg
jns
movs
lods
ret
fdivrp
jecxz
cs
shl
lods
lods
cmc
dec
ret
dec
push
std
popa
(bad)
(bad)
call
add
scas
clc
(bad)
in
push
js
mov
pop
icebp
sbb
add
inc
inc
ret
inc
jo
and
add
push
mov
lds
push
data16
call
mov
icebp
cld
push
int3
imul
out
js
mov
pop
dec
test
cmp
pop
add
sti
cmp
sub
adc
and
stos
sti
sahf
push
dec
mov
into
jge
nop
aam
lods
fistp
and
mov
addr16
add
sub
push
mov
jg
hlt
pop
aam
jnp
sti
pop
dec
daa
jmp
out
pop
sbb
repz
push
mov
sbb
add
leave
mov
outs
push
mov
pop
dec
xchg
loop
cli
in
sub
jge
out
cld
lahf
push
jmp
sbb
inc
shl
sbb
call
fsub
je
xlat
push
push
enter
std
or
adc
xor
bound
jmp
xchg
jno
out
(bad)
call
retf
loope
inc
add
sti
jnp
rol
ror
ins
mov
add
push
aam
je
ss
push
mov
lahf
sub
retf
fucomi
jl
mov
mov
(bad)
xchg
int
mov
cmps
cmc
or
push
sbb
ret
jns
loope
mov
inc
inc
lods
test
and
adc
xor
jae
lahf
out
or
outs
clc
or
ins
mov
nop
js
fdiv
ffree
push
sbb
push
jne
retf
fwait
pushf
sbb
and
sbb
repz
pop
sbb
cmp
mov
popf
mov
xlat
or
mov
aaa
ins
je
xchg
imul
push
(bad)
jmp
mov
(bad)
or
mov
movs
js
out
and
dec
lods
inc
cmp
pop
inc
not
dec
xor
mov
call
jmp
fcom
js
mov
ret
xchg
lods
add
cmc
fcomp
push
push
or
(bad)
pusha
test
call
pop
movs
xchg
or
addr16
xchg
das
outs
dec
and
inc
and
inc
and
or
fild
fadd
push
sub
sub
push
mov
dec
mov
jb
sahf
push
sub
cmp
neg
int
push
xor
enter
dec
and
imul
push
mov
cmp
dec
std
push
sub
xchg
icebp
ins
cmp
mov
ins
and
xchg
mov
pop
jl
hlt
xchg
call
dec
adc
outs
push
mov
aas
mov
adc
jmp
and
mov
(bad)
cmp
mov
cld
fucomi
xchg
or
mov
loopne
push
call
push
(bad)
gs
jp
push
jo
xchg
add
mov
jmp
mov
push
leave
sub
lea
outs
or
sbb
xor
inc
xchg
pop
cmp
into
repnz
pop
sbb
jne
push
mov
sti
inc
mov
sub
mov
jp
jge
(bad)
and
push
jmp
fsubr
mov
in
hlt
mov
ret
push
fadd
push
dec
fldcw
fistp
and
xchg
mov
cmc
ret
pop
jge
popa
cmp
pop
pop
ret
outs
hlt
retf
ds
sub
xchg
xor
push
shr
mov
mov
scas
rcl
push
cs
outs
cdq
stos
sbb
lds
jo
cmp
dec
push
xchg
movs
ficom
fsub
pop
sub
sbb
in
aas
push
xor
fisub
sbb
mov
xchg
icebp
es
mov
sbb
dec
sbb
mov
mov
loop
mov
addr16
xor
idiv
cmp
pop
out
mov
xlat
push
(bad)
mov
inc
mov
or
mov
push
inc
sar
xor
mov
dec
adc
(bad)
stc
cs
cwde
jbe
data16
adc
sbb
xor
pop
xor
add
ror
shl
mov
xor
cmps
or
pop
sbb
jns
arpl
jns
mov
inc
shl
lock
pop
sub
xor
xchg
jl
push
dec
cmp
test
mov
push
sub
push
xchg
aas
out
and
ins
imul
pop
jg
sub
cmp
mov
jne
iret
into
jns
mov
inc
jns
popf
imul
cmp
sub
outs
or
cmc
(bad)
mov
cmp
std
ror
rcr
pop
mov
sti
cs
and
mov
mov
jp
sbb
arpl
ins
adc
popf
sub
sbb
scas
addr16
push
inc
aas
jbe
mov
push
jmp
in
mov
jnp
loopne
ret
push
jo
mov
addr16
jmp
sbb
in
xor
cmp
cmp
xchg
push
sahf
sub
xor
call
aaa
jmp
and
fistp
rcr
pusha
bound
mov
mov
cmc
push
test
inc
lds
cmp
sub
mov
es
fstp
int3
xor
inc
das
cmps
std
jecxz
aas
adc
push
call
rcr
cmp
mov
leave
imul
imul
mov
pop
shl
es
out
jge
cmp
and
mov
mov
mov
mov
jmp
mov
fisub
and
stc
mov
scas
dec
cli
retf
xchg
out
pop
lahf
call
lods
push
dec
fsub
jo
mov
fwait
mov
xor
mov
scas
inc
mov
(bad)
(bad)
movs
pop
xor
mov
inc
pop
mov
movs
or
inc
repnz
inc
les
ret
push
test
loop
ja
mov
out
dec
cdq
push
inc
imul
fisttp
sbb
mov
add
imul
addr16
jno
xchg
stos
mov
xor
mov
sbb
mov
jns
mov
popf
push
cmp
xchg
and
clc
gs
xor
cdq
outs
dec
and
or
nop
dec
push
push
sub
in
and
stc
mov
jmp
int3
ins
ret
arpl
or
dec
jne
dec
push
js
in
mov
push
xor
out
xchg
fistp
jge
pop
xchg
or
fadd
mov
adc
imul
mul
and
dec
stos
test
inc
test
in
cwde
retf
aaa
sub
int3
inc
repnz
push
dec
les
fldpi
clc
fistp
int3
jne
adc
arpl
nop
push
leave
sbb
mov
sub
loop
stos
aaa
push
adc
ret
bound
cmps
sub
cmp
mov
jmp
mov
mov
adc
aas
xchg
mov
scas
or
xchg
adc
mov
fsub
xchg
push
mov
pop
or
jnp
bnd
lock
push
mov
pop
mov
loope
sbb
cmps
es
(bad)
or
aam
icebp
sub
rol
inc
mov
lods
repnz
sar
xchg
add
jmp
dec
lds
mov
sti
or
or
or
sub
jo
aad
mov
std
je
dec
pop
sub
pop
ins
xor
fldenv
mov
cmp
mov
imul
adc
mov
mov
push
sub
jmp
ja
bnd
cwde
repnz
adc
js
in
jmp
jo
add
cwde
int
mov
sub
sbb
fnstenv
cmps
ret
div
jne
add
inc
(bad)
jp
xchg
push
arpl
loop
pop
jo
js
fidivr
ins
mov
push
inc
popa
je
sub
jp
dec
lods
repnz
clc
int
hlt
pop
test
sti
inc
xchg
or
mov
lea
xchg
dec
cmp
jns
pop
push
sahf
in
mov
or
mov
sub
push
add
clc
int3
pop
and
aas
xchg
push
mov
in
pop
es
pop
cmps
movs
dec
cmps
stos
out
sub
xchg
mov
pop
call
outs
cmp
movntq
out
mov
jmp
pop
jo
sbb
sub
xchg
in
(bad)
jmp
xlat
scas
test
add
xor
cmp
sub
ror
ds
cmp
and
(bad)
mov
popa
in
xchg
mov
mov
inc
ja
test
pop
or
mov
mov
scas
or
cmp
lods
adc
call
mov
je
mov
test
fwait
pop
add
ins
mov
cwde
sbb
jmp
mul
out
sub
adc
mov
dec
xor
sbb
int
sbb
xor
mov
mov
sub
mov
push
int
add
ficom
push
fcomp
cmp
sub
jp
inc
jecxz
call
enter
(bad)
fistp
(bad)
ret
sub
outs
dec
ins
jb
xchg
in
js
push
ficom
mov
mov
outs
outs
jnp
je
pushf
push
inc
stos
mov
add
(bad)
cld
dec
in
xchg
sti
ins
(bad)
xlat
dec
jp
mov
ja
sub
movs
movs
leave
cmp
movs
lods
sbb
loopne
and
stc
int3
push
ins
add
sbb
xchg
pushf
mov
repz
push
dec
jnp
xchg
jmp
dec
cmp
mov
sbb
ins
lds
sar
gs
sub
in
movs
sbb
dec
fcomp
mov
push
imul
out
jg
mov
retf
push
and
dec
loopne
or
addr16
out
aam
xchg
add
loop
inc
lock
jmp
in
push
mov
jp
imul
add
push
add
add
imul
lods
movs
loop
(bad)
push
adc
ss
retf
mov
icebp
vmwrite
adc
(bad)
push
and
sahf
in
cmp
mov
lds
out
lods
push
mov
mov
jbe
das
xchg
es
pop
pop
aaa
icebp
stc
mov
pop
pop
dec
xchg
xor
test
jns
imul
pusha
outs
in
bound
ret
pop
mov
dec
xor
jl
xchg
adc
enter
jnp
pop
cs
jmp
fs
sti
sbb
mov
xor
or
inc
lds
ret
mov
mov
bound
mov
adc
movs
mov
sub
mov
adc
add
push
xchg
outs
add
aam
dec
adc
fdivr
cmp
outs
mov
pop
dec
leave
bound
lods
pop
scas
and
jl
sub
xchg
lahf
das
bound
cli
and
mov
lods
sbb
xchg
shl
mov
retf
cmc
cmp
int3
std
daa
cwde
dec
loope
xlat
xchg
xchg
aas
outs
repz
and
inc
dec
loop
dec
in
pusha
not
ret
fist
sub
cmp
cld
(bad)
inc
mov
fwait
ins
stc
inc
fldcw
retf
ret
xor
jne
dec
rcl
test
fwait
jmp
outs
sbb
fxam
mov
jne
rol
jge
imul
adc
inc
or
inc
cmp
pop
lods
jmp
push
mov
mov
sbb
(bad)
clc
cmps
pushf
cld
jno
cwde
inc
fadd
ss
and
mov
mov
data16
sar
jne
mov
(bad)
cld
loope
gs
scas
jg
cmp
in
xor
jecxz
sbb
mul
in
dec
lods
aas
sbb
push
push
xchg
mov
add
es
cmp
mov
jns
sub
mov
paddsw
inc
push
bound
out
mov
cmp
fstp
dec
shl
add
cmps
pop
pushf
(bad)
in
mov
adc
(bad)
and
push
mov
outs
cdq
push
add
lahf
lahf
dec
cmp
mov
xlat
cs
mov
pop
xor
push
push
test
int3
inc
xchg
ss
sbb
mov
mov
and
jnp
loopne
pop
pop
icebp
dec
(bad)
mov
imul
push
inc
lahf
shl
js
inc
cmps
call
(bad)
cli
test
mov
call
sbb
pop
xor
sbb
xor
mov
dec
fndisi(8087
pop
pop
clc
data16
cmps
(bad)
lods
and
repz
inc
mov
ret
xchg
cmps
lods
mov
arpl
inc
popf
or
sti
lock
cmp
xchg
mov
push
and
in
mov
enter
or
lock
dec
shr
or
adc
lahf
ins
ja
int
xchg
ror
mov
sub
sbb
data16
jno
jecxz
mov
inc
outs
add
push
fmul
push
mov
inc
cmp
dec
(bad)
and
sbb
inc
addr16
cdq
push
mov
int
into
dec
leave
jb
in
mov
gs
out
mov
jle
rcr
jge
arpl
je
lahf
mov
push
lods
repz
sahf
fwait
jecxz
adc
imul
cmp
xlat
mov
push
push
jg
push
adc
cmp
das
ret
outs
aam
arpl
jno
test
dec
xchg
pop
test
mov
mov
pop
push
mov
cs
xor
neg
mov
fadd
es
mov
test
or
jl
xlat
cmp
jb
add
loope
add
push
es
adc
mul
cmc
add
mov
sub
mov
data16
aam
popa
sbb
xor
pushf
fistp
adc
jns
xchg
pop
arpl
push
lds
mov
xchg
cmp
inc
xchg
stos
call
imul
or
sub
mov
add
adc
into
add
(bad)
push
xor
push
mov
mov
jl
jmp
movs
and
xor
inc
push
dec
mov
stc
and
jne
dec
lea
fwait
movs
push
mov
xor
xchg
out
scas
leave
push
cmps
test
(bad)
in
inc
lods
cmp
imul
sub
mov
pop
sti
add
hlt
ror
mov
int3
cmp
inc
inc
add
add
sub
rol
adc
aaa
ins
sar
xchg
jle
scas
test
retf
in
mov
adc
daa
mov
mov
mov
call
mov
imul
out
push
fisttp
pop
sbb
fwait
add
retf
call
cld
or
add
test
data16
cmp
fs
aam
pop
xor
mov
stos
test
out
ja
ds
lock
shr
pop
jae
jbe
repz
mov
sub
sub
adc
inc
popf
stc
retf
sub
mov
rol
or
inc
add
mov
lock
jmp
mov
int3
xchg
test
push
cmp
pushf
mov
adc
dec
repnz
jl
aam
stc
shr
(bad)
jb
and
jb
stos
aad
popa
ret
fcmovu
outs
imul
out
mov
mov
pop
out
add
pop
outs
es
xchg
ins
fnsave
or
xor
mov
mov
adc
pop
(bad)
repz
test
xchg
inc
inc
mov
mov
mov
ret
sub
sbb
test
xchg
dec
ins
enter
pusha
cwde
ins
jmp
(bad)
pusha
popf
cwde
push
add
mov
mov
stos
add
push
div
inc
test
nop
fwait
imul
mov
push
iret
dec
(bad)
adc
je
pop
dec
pop
(bad)
adc
push
mov
loopne
mov
repnz
(bad)
(bad)
cs
jbe
push
scas
xchg
pop
ins
push
daa
xchg
nop
repnz
iret
bswap
sbb
in
popa
out
mov
std
lods
call
sbb
lods
inc
imul
xor
xchg
sti
sub
(bad)
(bad)
jp
icebp
pop
push
lods
clc
out
inc
in
ror
bound
(bad)
scas
add
call
add
and
mov
imul
mov
jl
xor
mov
outs
movs
push
fbld
popa
push
pushw
sub
loope
sbb
cmp
repnz
enter
pop
das
sbb
jmp
mov
das
push
fmul
or
test
sub
xchg
pop
rol
(bad)
in
fidiv
cmps
inc
jecxz
outs
scas
sub
push
sub
sub
mov
fstp
and
or
add
shr
adc
mov
das
add
mov
cmc
mov
adc
pusha
fistp
cmps
aam
xchg
push
lods
test
jmp
add
mov
xor
cmp
cmp
aad
jle
fwait
jp
icebp
push
repz
retf
shl
xor
ss
push
int
idiv
sub
push
sub
movs
out
out
test
xor
inc
sbb
mov
xor
dec
scas
imul
jnp
adc
and
jl
loope
ss
dec
xor
retf
das
pop
xor
and
add
inc
cmp
bound
in
sbb
add
dec
pop
addr16
ins
add
push
pop
scas
push
outs
inc
add
out
jle
or
pop
push
sbb
add
push
add
dec
fmul
push
sub
sub
loop
(bad)
sbb
retf
dec
cmp
cld
loop
jecxz
jp
mov
sbb
out
cmp
das
hlt
pop
cmp
sub
andps
test
adc
out
mov
retf
lods
xor
sub
repnz
movs
lods
test
test
inc
add
mov
(bad)
dec
imul
fwait
or
minps
out
and
jns
lea
xchg
mov
daa
fdivr
push
clc
aam
cmp
pushf
inc
test
cmp
mov
dec
je
xchg
inc
and
in
sbb
mov
pop
mov
lds
and
aam
adc
inc
dec
add
fcomip
cmp
fstp
cmp
out
test
rol
(bad)
adc
mov
imul
fisttp
push
xchg
in
xor
popf
xchg
push
lock
mov
adc
cmp
in
sub
dec
pusha
cmc
aas
inc
arpl
dec
jp
(bad)
cld
sub
lds
mov
cmp
ret
add
push
mov
loope
inc
and
loop
test
mov
cmp
test
xor
scas
repz
loop
call
push
or
outs
adc
and
jle
add
mov
aaa
adc
inc
pop
cmp
mov
js
es
fcom
xlat
xchg
leave
mov
in
data16
mov
in
in
dec
fldenv
out
std
sbb
jae
dec
dec
ror
push
retf
cwde
stos
xor
adc
call
fldenv
inc
push
cdq
imul
nop
shl
mov
scas
test
pop
fimul
push
cmps
or
or
scas
loop
in
imul
aas
in
sbb
inc
dec
add
pop
jns
xchg
neg
pop
daa
adc
ins
lahf
lea
jb
and
call
xor
movs
(bad)
mov
mov
cmp
retf
cmc
and
push
adc
push
(bad)
jbe
mov
xor
and
(bad)
(bad)
fdiv
adc
cmp
movs
adc
in
test
fisttp
rcr
push
mov
pop
push
popf
rcl
enter
in
mov
stos
retf
arpl
fs
in
mov
(bad)
dec
jle
cmps
movs
retf
loop
in
outs
jge
mov
mov
fcmovne
popa
and
scas
mov
jns
in
aad
pop
loopne
dec
in
aaa
shl
push
mov
cli
fst
mov
lea
add
jmp
sub
fild
sub
cld
loop
pop
or
cmp
jp
push
push
mov
sar
out
stos
dec
cwde
xchg
cwde
mov
cmp
sub
dec
(bad)
fld
lods
mov
into
cmp
sbb
cmps
mov
push
cmp
ins
sbb
int3
div
push
test
mov
test
lahf
(bad)
leave
shl
mov
xor
movs
fild
jne
mov
xor
sub
sahf
mov
sbb
adc
(bad)
xchg
cmps
adc
mov
int3
mov
mov
mov
outs
push
test
lds
push
mov
mov
jmp
scas
sub
ret
int
jg
dec
call
xchg
sub
push
jb
fwait
lock
mov
stc
adc
pop
add
mov
out
jmp
cmc
stos
fmul
push
xlat
loop
mov
xor
mov
push
ds
mov
test
cmp
pushf
adc
mov
repz
pop
mov
lods
outs
movs
std
loop
cmp
repnz
mov
pcmpgtd
cld
imul
(bad)
lahf
mov
jb
adc
loope
xchg
lods
xchg
dec
or
push
dec
xor
repz
xchg
cmp
sbb
in
xchg
sbb
pushf
out
mov
jl
lods
jl
add
pop
hlt
fsub
stos
add
mov
sub
jmp
std
repz
push
fst
xlat
mov
test
mov
fst
xor
push
iret
and
pop
mov
dec
xlat
pop
push
out
and
movs
ret
ins
rcr
inc
dec
xchg
xchg
dec
repnz
not
fnstenv
aam
stos
imul
sub
je
ret
push
out
or
cmp
cmp
push
jge
mov
xchg
adc
inc
mov
jnp
mov
test
and
sub
ja
xor
ins
pusha
mov
mov
scas
sub
das
pop
repz
ins
cwde
daa
jmp
mov
or
js
jge
jb
mov
sub
das
gs
in
xchg
clc
push
in
adc
xchg
fcomi
xor
xchg
and
jge
xor
adc
add
ret
push
pop
or
or
retf
pop
int3
pop
sub
dec
add
imul
addr16
push
(bad)
in
addr16
cmp
mov
scas
sub
pop
popf
in
jge
jmp
add
out
mov
cmps
and
out
pop
in
mov
jp
add
pop
mov
loope
in
push
jp
mov
ss
aad
icebp
test
stos
dec
mov
data16
inc
adc
sub
dec
fidivr
iret
or
mov
sub
mov
ins
jnp
add
clc
rcl
ins
(bad)
xchg
(bad)
pushf
ds
xchg
iret
ins
ss
sbb
sub
mov
arpl
and
or
cmp
ret
(bad)
dec
jnp
pop
pop
mov
rcr
add
mov
movs
jecxz
es
dec
(bad)
add
adc
xchg
cdq
ja
loop
cmp
nop
xlat
adc
sbb
xlat
test
mov
pushf
imul
mov
int
xchg
or
pop
mov
cmovae
(bad)
jbe
xchg
xor
dec
imul
sub
mov
scas
cdq
mov
xor
shr
dec
xor
dec
mov
or
xor
(bad)
pop
jle
sub
or
getsec
sbb
fsubr
scas
add
pushf
les
mov
pop
fcomp
dec
xor
in
leave
mov
rcl
imul
sub
cs
inc
cmp
or
rol
sub
loopne
sahf
mov
icebp
jge
mov
popf
add
xchg
mov
push
dec
lea
push
arpl
pop
out
jp
add
cdq
lods
and
jmp
lds
fcom
fwait
jmp
sub
call
or
cld
call
dec
dec
and
mov
xor
repz
pop
jmp
mov
sbb
and
mov
jb
add
fisttp
dec
fnstsw
adc
popf
or
pop
aad
xor
ins
sbb
stc
xchg
pop
cmps
fadd
dec
mov
(bad)
out
dec
push
pop
inc
out
scas
das
pop
mov
imul
xchg
inc
icebp
clc
inc
xchg
push
mov
adc
cs
test
nop
push
fild
add
jl
cmp
xchg
aam
push
out
out
mov
outs
mov
or
jg
and
jns
mov
mov
out
pushf
inc
or
out
sbb
mov
(bad)
imul
cmp
pop
sub
sbb
cwde
cdq
imul
xchg
sbb
movs
fstp
repz
pop
out
fidiv
xor
mov
push
icebp
adc
(bad)
jmp
repz
nop
jae
cmp
fisttp
mov
in
out
jp
(bad)
jg
mov
xor
(bad)
hlt
jle
pop
aam
pand
movs
rcr
(bad)
push
shl
lahf
test
ds
cmp
mov
inc
xchg
fisub
or
ds
jns
imul
pop
mov
mov
jb
lea
xor
pop
cmp
iret
and
add
out
cmc
and
push
xchg
sbb
xor
daa
cwde
sub
xchg
out
aam
or
cld
out
(bad)
rcr
inc
sbb
xlat
add
scas
pushf
ret
xor
adc
jecxz
test
inc
addr16
out
ins
imul
dec
(bad)
push
pop
sbb
addr16
add
or
shl
cdq
pop
push
lods
sbb
retf
pusha
in
jp
push
ja
push
ins
cmp
aas
dec
ret
arpl
xor
mov
jnp
inc
mov
aaa
cmp
test
scas
push
push
je
arpl
mov
mov
fimul
fstp
add
out
jmp
pop
fs
add
add
jo
mov
sbb
lea
push
or
adc
sti
call
jne
aad
mov
pushf
pop
dec
jno
cmp
sti
jo
icebp
in
mov
mov
fucomip
xchg
mov
aam
cld
xor
push
test
imul
pop
shl
adc
lds
aad
loop
mov
mov
ret
add
adc
and
sti
jge
fstp
mov
enter
jno
movs
lods
ins
repz
loope
mov
mov
repnz
adc
lahf
cmc
or
mov
mov
or
nop
jbe
mov
js
sbb
adc
iret
scas
sbb
jmp
sub
test
mov
(bad)
and
das
icebp
pop
outs
xchg
and
push
(bad)
(bad)
mov
pop
pusha
hlt
mov
and
cwde
ret
mov
data16
add
addr16
mov
xchg
popa
add
lea
pop
pop
xor
xor
pop
jp
ins
aas
inc
stos
inc
xlat
iret
imul
outs
mov
sub
cld
inc
imul
inc
push
pusha
pop
push
mov
aam
xchg
dec
out
and
mov
jns
or
push
xchg
scas
push
and
(bad)
jl
adc
fcmove
pop
enter
jmp
pop
fisub
and
mov
gs
popf
jns
cmp
inc
push
inc
scas
int3
mov
jp
sub
int3
inc
push
loop
adc
mov
push
in
repnz
sbb
xchg
jae
(bad)
in
ins
mov
dec
jle
int3
sub
xchg
or
jns
shl
fidiv
cmp
clc
pusha
and
out
or
bound
ja
bswap
cs
push
cmc
cmc
cmp
stos
ror
adc
jb
out
cmp
cmps
(bad)
pop
scas
stc
mov
(bad)
sti
mov
mov
imul
cmp
xchg
test
cmc
or
stc
jae
add
xchg
xchg
call
or
cwde
mov
jo
fldenv
adc
sbb
inc
pop
popf
arpl
adc
mov
sbb
pusha
cmp
mov
adc
or
xor
or
jle
stos
pop
cmps
ds
icebp
retf
mov
bswap
xor
mov
retf
mov
pop
(bad)
jge
repnz
retf
lods
stos
ret
out
or
aas
int3
inc
pop
sbb
std
(bad)
sbb
lahf
xchg
cmps
mov
sub
in
ins
cld
dec
sbb
add
inc
xchg
inc
sar
mov
jle
pop
mov
xlat
not
iret
mov
jp
or
or
ins
out
(bad)
pusha
ja
jg
add
cdq
xor
xchg
xor
rcl
lock
and
cdq
xchg
es
imul
mov
sub
push
cs
mov
fiadd
add
mov
pop
xor
and
ja
into
aaa
(bad)
inc
cmp
mov
add
adc
sti
shl
mov
pop
add
ja
ins
retf
lahf
mov
mov
int
out
and
outs
xchg
jno
xor
les
inc
mov
sbb
push
mov
mov
lahf
sub
in
xor
test
pop
push
jb
aam
sub
test
sbb
push
gs
into
std
xchg
sbb
xor
stos
fistp
push
fsubr
in
loope
inc
sbb
ror
pop
xor
xor
add
push
aaa
lahf
retf
push
shl
jp
dec
pop
outs
mov
jl
stos
lods
sbb
fld
ins
xor
pop
ror
push
das
ins
mov
inc
mov
pusha
jo
dec
das
cmps
rcr
mov
jecxz
push
xor
or
sbb
das
(bad)
jecxz
jle
push
jne
jp
mov
pop
pop
std
pop
fwait
mov
aam
add
push
jno
inc
mov
clc
mov
cwde
xor
enter
aaa
and
lock
je
cwde
int
(bad)
pop
and
sub
cmp
repnz
push
pop
sbb
outs
pop
ror
and
jge
cmp
sbb
cs
add
out
les
jle
xchg
cmc
gs
mov
cmps
mov
nop
dec
mov
dec
fwait
inc
sar
inc
xor
popf
jo
lahf
and
lock
push
lods
pop
pop
add
or
repz
stos
push
pop
(bad)
mov
cmp
and
sti
inc
xchg
pusha
call
sbb
pop
mov
int3
je
push
retf
mov
mov
xor
imul
inc
scas
mov
mov
mov
xlat
fcmovne
bound
and
mov
adc
adc
test
cmp
mov
rcl
loope
sti
jb
inc
into
fld
ja
(bad)
dec
adc
inc
xchg
out
js
lock
js
lahf
pop
mov
rcl
fisubr
cmp
mov
nop
daa
mov
mov
jo
icebp
lea
data16
(bad)
fwait
jecxz
nop
mov
sub
sub
sahf
and
rcl
add
add
rcr
ret
jp
inc
ret
lds
or
iret
pop
push
loopne
and
sbb
rol
and
pop
add
icebp
bound
jge
cli
dec
mov
nop
fs
mov
push
mov
mov
loopne
cli
fidiv
push
lods
pusha
mov
adc
in
out
lea
xor
ja
aam
or
outs
jae
mov
push
push
inc
xchg
or
scas
mov
xchg
repz
(bad)
je
mov
movs
repz
xor
adc
add
je
fst
xchg
sbb
and
inc
xor
xchg
ficom
xlat
jecxz
xchg
lods
rol
and
mov
inc
mov
imul
pop
cmp
push
das
sub
cmps
mov
call
ss
mov
sub
jae
xor
sbb
xor
dec
sub
push
and
aas
popa
fistp
retf
div
scas
icebp
cmp
sar
push
icebp
jecxz
loop
and
mov
lods
cmp
mov
into
sub
gs
(bad)
jmp
int
xchg
ins
add
popa
aam
and
xor
sub
mov
adc
mov
and
push
pusha
sbb
sar
jnp
inc
and
and
stos
in
lds
pop
sub
pushf
out
out
pop
(bad)
jae
xor
push
daa
(bad)
daa
stos
mov
ja
pop
xchg
mov
idiv
xchg
push
adc
(bad)
hlt
out
inc
xor
mov
mov
cmp
adc
and
pop
movs
into
or
fadd
scas
pushf
cs
adc
ret
sub
out
outs
sbb
push
mov
xor
aas
retf
imul
repnz
fisubr
mov
adc
dec
dec
mov
add
das
push
mov
mov
dec
add
or
(bad)
retf
inc
add
fiadd
(bad)
adc
push
xchg
mov
push
jp
push
mov
or
loop
mov
or
ja
cmp
sub
mov
add
mov
test
and
stc
jge
fiadd
sbb
cmps
xor
pop
fwait
mov
jno
xchg
test
sub
pop
les
fimul
xchg
int
sbb
mul
pop
push
inc
ins
pop
fs
jge
jle
xchg
in
enter
jmp
xchg
dec
lods
je
jp
pop
imul
ja
out
imul
mov
sub
(bad)
jne
mov
or
mov
enter
pop
jmp
dec
sub
cmps
cmp
jle
xor
ror
dec
test
adc
(bad)
bound
xor
jae
jns
hlt
cmp
aaa
retf
stos
inc
jl
(bad)
pop
es
add
jb
int
scas
fst
mov
and
cmp
adc
add
enter
jg
lea
jmp
lea
pop
or
pop
cmp
movs
int3
xor
sahf
mov
mov
test
sub
ins
push
scas
repnz
nop
xor
es
cmp
loope
jmp
ja
stc
mov
pop
fisub
and
inc
fcmovnb
jno
inc
in
xchg
loope
sbb
call
icebp
dec
xor
add
mov
xor
fiadd
mov
cdq
or
arpl
aad
lods
test
lea
or
mov
xor
mov
cmp
call
into
or
mov
inc
and
inc
movs
lea
addr16
cmp
pusha
(bad)
xchg
mov
(bad)
dec
xchg
fsub
inc
loop
mov
pop
mov
xchg
mov
std
cmp
jbe
out
imul
popa
cmp
jns
xchg
inc
cli
push
xchg
div
in
cmp
pop
inc
ja
mov
sbb
sub
add
push
xchg
xor
jmp
add
xchg
inc
adc
mul
push
and
adc
xor
add
jle
inc
fwait
sub
adc
sahf
aaa
xchg
repnz
push
stos
or
mov
jae
dec
mov
mov
mov
outs
pop
ror
xor
push
xor
pop
imul
mov
and
add
mov
mov
pop
sub
dec
mov
jb
shr
mov
(bad)
mov
pop
sti
or
sbb
inc
mov
lock
jg
push
ffreep
ror
ins
or
push
pop
ja
je
inc
sbb
sub
pop
in
jle
div
jg
dec
dec
sub
mov
cmps
arpl
nop
lods
dec
pop
mov
sbb
sub
repz
rcr
xchg
xchg
cld
rcr
and
inc
mov
hlt
aas
jbe
sub
dec
xchg
adc
jmp
dec
mov
mov
call
add
ins
dec
or
xchg
shl
stc
jl
mov
call
sub
jmp
and
sar
push
or
std
int3
out
rcr
mov
mov
lock
call
fwait
ret
(bad)
pushf
inc
es
fidivr
adc
addr16
sub
fimul
cmp
push
pop
dec
stc
cld
jmp
mov
add
or
pop
mul
and
inc
xor
mul
and
push
mov
cmp
or
aas
or
push
push
sub
out
movs
in
adc
sub
jne
das
in
inc
sub
loop
and
cli
fdiv
in
pop
lds
lods
lods
je
sti
add
iret
mov
fiadd
mov
cmp
add
pusha
shl
les
cld
pop
ins
outs
into
or
mov
jne
cwde
xchg
imul
xchg
ja
stc
sbb
sbb
xor
std
mov
push
cmps
aad
mov
pop
pop
fwait
rcr
adc
imul
ret
imul
add
shl
sbb
cmps
inc
cmp
out
pusha
push
(bad)
dec
pop
xchg
xchg
add
pop
das
mov
outs
push
ficomp
fwait
dec
jo
ja
inc
outs
pop
dec
mov
(bad)
arpl
push
and
mov
fwait
push
dec
jo
push
pusha
jle
and
and
retf
scas
test
pusha
test
inc
sub
xchg
icebp
cs
call
and
adc
mov
sbb
int
sbb
sbb
aas
jge
push
repnz
xor
or
ret
hlt
clc
daa
add
je
enter
out
and
mov
mov
push
mov
stos
fisubr
add
jle
nop
bound
enter
pop
pop
mov
or
in
and
movs
cmp
xor
pusha
sub
(bad)
gs
sahf
aaa
lods
nop
push
cld
cmps
out
pop
dec
pop
or
mov
bound
mov
mul
in
cmp
adc
lds
xchg
or
fild
inc
sti
jl
cmps
fmul
in
outs
push
inc
mov
xor
jp
call
fisubr
mov
cmp
cli
pop
sub
test
push
pusha
jmp
int
jo
jne
mov
mov
mov
stos
push
cli
sbb
fcom
fwait
pop
cmc
bound
loope
popa
and
movs
call
fwait
dec
jmp
add
jg
popf
cmp
loop
sub
cmps
jp
xchg
ins
cwde
dec
xor
aas
in
dec
push
lods
add
and
inc
ss
inc
push
les
add
jge
je
add
mov
sbb
add
or
stos
dec
sub
unpckhps
retf
out
mov
call
xor
sbb
movs
mov
out
rcr
or
retf
mov
sti
jmp
test
cmp
fldcw
add
pop
and
jmp
adc
icebp
or
movs
sbb
and
jo
cmc
pop
movs
stc
mov
popf
call
jne
mov
sbb
ins
shl
jge
icebp
mov
(bad)
fmul
xor
test
xchg
inc
cmp
sub
leave
inc
and
xchg
dec
jg
repz
adc
(bad)
jp
pop
push
push
cwde
aaa
pop
adc
cmp
dec
xchg
call
xor
fcmovb
in
pusha
pop
mov
inc
ins
mov
xchg
sbb
sti
movs
repnz
add
das
or
stc
sub
jne
sub
dec
xchg
jno
fwait
and
and
mov
test
enter
xchg
or
stc
xchg
xchg
mov
(bad)
hlt
sbb
mov
xchg
imul
xchg
ins
mov
mov
ins
and
shl
movs
add
fcmovne
int
push
pusha
leave
(bad)
std
mov
nop
push
loopne
out
inc
sub
or
fmul
sub
pop
shr
or
inc
popa
lea
lods
pushf
cmp
mov
pop
pop
dec
retf
(bad)
out
push
pop
shr
repnz
cmps
arpl
jbe
(bad)
shl
cmp
call
adc
pop
ror
or
xor
cs
inc
push
jne
cmp
in
sbb
hlt
test
retw
stos
pop
cmp
cs
pop
fidivr
mov
sti
dec
add
shr
sbb
push
jge
push
and
cmps
rcr
or
cld
hlt
stos
push
adc
ret
add
cld
arpl
dec
push
jg
imul
sbb
mov
inc
adc
in
arpl
mov
rcr
pop
sti
xchg
dec
out
sub
jmp
frstor
div
push
ja
aam
fdiv
retf
sbb
push
bound
out
push
ret
pop
mov
int3
push
cdq
cdq
sbb
shl
(bad)
cdq
fsub
fiadd
xor
push
rcl
(bad)
cmc
(bad)
fs
shr
pushf
or
movs
mov
pop
icebp
xlat
dec
fnstenv
pop
test
repz
cdq
jno
cmps
xor
or
sub
icebp
shl
cdq
popf
pop
mov
or
and
jp
jecxz
or
mov
dec
hlt
xor
inc
cmc
and
popf
push
dec
dec
or
test
mov
pop
shr
fsub
jecxz
push
int
add
cmp
xchg
shl
or
(bad)
inc
jge
mov
and
dec
cmc
jecxz
mov
test
xlat
cmp
ror
mov
pop
and
ja
fwait
pop
fdiv
cmc
outs
inc
inc
and
adc
movs
add
mov
aad
fwait
scas
retf
adc
out
aas
adc
and
pop
aad
inc
out
cwde
xchg
retf
aad
div
push
pop
and
cmc
mov
ret
add
inc
adc
xor
adc
adc
jo
pop
sbb
add
and
mov
div
out
or
movs
test
push
mov
fcmovb
xchg
sbb
and
ficomp
sbb
fld
std
in
retf
jae
dec
movs
or
mov
shl
and
iret
adc
fldenv
scas
ret
sbb
pop
mov
xor
xchg
call
fs
mov
sar
or
leave
pop
adc
mov
(bad)
mov
mov
jne
dec
jl
or
mov
pop
mov
add
add
sub
mov
cmp
mov
inc
sahf
cdq
lahf
sbb
cmc
leave
rcl
lods
int3
ret
imul
arpl
lods
xchg
test
jns
(bad)
pop
pop
and
fstp
mov
pop
movs
jmp
xchg
out
(bad)
push
push
mov
xchg
sub
addr16
xchg
mov
popf
dec
sti
fnstenv
aad
in
pop
jne
retf
cli
imul
mov
sar
lea
pop
sbb
mov
pop
push
inc
xlat
cwde
mov
lods
fild
mov
push
ins
sbb
fimul
sub
leave
push
adc
sbb
mov
jno
ret
retf
retf
movs
xchg
mov
dec
mov
out
fwait
jl
push
adc
push
push
xchg
sub
mov
aaa
xor
cmp
scas
rol
xor
pop
stos
inc
jno
dec
fisubr
push
in
out
xor
mov
mov
adc
dec
dec
dec
inc
movs
push
mov
inc
aam
mov
ds
pop
jne
jae
cld
mov
icebp
xchg
jb
cdq
mov
push
jmp
mov
xor
(bad)
xor
dec
dec
ds
push
loop
add
test
pop
xchg
out
not
xor
inc
gs
cdq
and
test
pushf
call
xor
mov
inc
lahf
loope
xchg
or
sti
inc
lods
xchg
add
das
movs
inc
pop
ficom
mov
jecxz
idiv
out
mov
mov
dec
aas
(bad)
mov
dec
pop
(bad)
mov
xchg
push
repnz
cmps
ror
xor
sbb
cmp
addr16
jle
jne
aad
inc
or
clc
(bad)
popf
xor
adc
xor
mov
mov
mov
sbb
cmps
fist
ja
lahf
mov
xchg
push
fimul
pop
mov
jne
jbe
std
push
fcmovbe
(bad)
out
pushf
sub
cmp
test
pop
retf
mov
test
pop
les
add
lea
pop
jno
push
mov
inc
push
std
mov
pop
(bad)
push
and
mov
or
ds
add
jb
rcl
hlt
add
add
sub
sbb
pop
xor
add
mov
push
sbb
dec
pop
into
xchg
imul
pop
push
add
mul
in
jb
xor
fwait
inc
pop
rcl
sub
ss
ins
sub
scas
into
sbb
or
sub
and
es
loopne
fisub
jmp
mov
xor
les
push
push
pop
gs
shl
pop
(bad)
mov
inc
jb
sbb
aam
mov
in
test
sbb
cmps
mov
hlt
mov
outs
mov
sub
cwde
ins
jl
mov
xchg
retf
scas
stc
sub
(bad)
outs
dec
data16
jecxz
mov
push
mov
push
mov
pop
xlat
and
jo
or
jmp
xchg
sbb
push
mov
(bad)
lea
xchg
ins
movs
loop
xlat
adc
or
(bad)
pop
push
add
mov
cs
add
cdq
sub
sbb
movs
and
ja
cli
sbb
mov
mov
cmc
fild
cmp
out
lds
xor
ja
in
clc
pusha
sbb
xor
das
test
sbb
adc
xchg
jl
mov
add
dec
sbb
xchg
jecxz
adc
mov
int
out
xor
pop
fbld
gs
rol
mov
test
or
xchg
fmul
sbb
xchg
fnstcw
fld
loop
dec
(bad)
icebp
loope
ds
and
cdq
mov
adc
jnp
mov
cmp
adc
shl
push
ret
inc
mov
daa
xor
xor
imul
rol
pop
xor
push
mov
inc
mov
mov
xor
loope
jmp
mov
mov
xlat
test
bound
arpl
fcmove
jp
call
loopne
ror
aad
jle
lds
push
mov
enter
inc
mov
pop
cmp
inc
gs
xlat
mov
jecxz
fstp
test
and
dec
xor
adc
out
fild
pop
test
(bad)
rcr
push
sub
fs
push
sahf
pop
ins
xchg
xor
movs
in
jp
push
repnz
push
jb
repz
fs
adc
dec
adc
dec
sbb
ss
inc
add
retf
int
in
inc
popf
xor
xchg
int3
iret
mov
jl
dec
fwait
loopne
cwde
and
int3
cmp
inc
jg
scas
adc
sbb
push
xchg
adc
js
xchg
xchg
clc
mov
jb
and
mov
or
sub
les
mov
cs
xchg
dec
bound
adc
loopne
or
test
popa
jg
push
xchg
xor
pushf
jb
stos
leave
fsub
lock
or
dec
mov
inc
shl
btc
pop
xor
dec
aam
cld
mov
test
scas
pop
pop
sahf
call
pusha
add
into
adc
mov
ds
cmp
push
popa
mov
push
retf
sbb
cmp
jl
xor
pop
sar
dec
outs
mov
push
jo
leave
shr
add
dec
mov
test
jo
not
stos
fst
int3
dec
jmp
popa
ins
push
xor
das
lea
mov
jae
jbe
fdiv
pop
ret
test
les
cmp
sub
push
push
sub
popa
lea
mov
mov
xor
xlat
push
cmp
ret
popf
stos
in
inc
inc
xchg
adc
and
push
jmp
mov
cmps
and
adc
sti
push
fs
addr16
xchg
out
push
sbb
mov
cmp
inc
mul
in
adc
(bad)
movs
xchg
sbb
jns
inc
dec
mov
mov
sub
ja
sti
test
sub
test
outs
pop
mov
jmp
lock
jmp
mov
or
daa
fldenv
lahf
repz
push
jns
lahf
(bad)
shl
test
or
inc
mov
(bad)
mov
into
dec
mov
mov
add
scas
in
xor
pop
imul
arpl
into
test
inc
cli
cmp
fwait
addr16
retf
xor
push
add
xor
out
mov
retf
mov
adc
retf
pop
xor
sub
xchg
int
cdq
dec
outs
mov
push
div
ja
clc
dec
rcr
pusha
repz
loop
out
test
arpl
ins
out
scas
adc
arpl
mov
add
push
jmp
(bad)
mov
and
stc
test
fsub
or
adc
jge
cmp
push
xchg
adc
or
jp
mov
mov
out
mov
push
xchg
mov
sbb
gs
xor
push
iret
dec
push
xchg
mov
and
test
jg
outs
mov
xor
shr
mov
lds
popf
jmp
mov
movs
xchg
enter
or
out
iret
jno
ja
sub
cmp
mov
out
xor
xor
push
bound
cdq
sbb
pop
(bad)
cwde
mov
jb
cld
mov
sbb
ror
repz
mov
dec
fld
mov
movs
add
pushf
mul
pop
push
into
fmul
lods
pop
imul
retf
or
inc
cmc
xchg
dec
cs
ret
je
std
rcr
dec
pushf
in
adc
cs
sub
sahf
fidiv
jbe
sbb
jnp
xchg
ret
push
cs
inc
scas
cmp
pop
and
adc
ins
les
xor
pop
mov
out
fs
ja
xor
mov
fwait
fwait
call
outs
in
mov
dec
ror
std
inc
icebp
lods
xor
mov
pusha
jg
cs
popf
cmp
ja
mov
fld
aam
jp
jmp
or
pop
cmps
add
ins
dec
inc
sbb
lock
push
mov
sub
dec
call
pop
out
add
xlat
inc
nop
das
dec
cwde
xchg
xchg
adc
sbb
lds
adc
cmp
xchg
sub
inc
test
push
js
mov
ret
dec
in
loope
(bad)
imul
aad
inc
nop
mov
cmp
int3
cmps
jmp
pop
pop
sbb
aad
jp
or
mov
or
into
or
lock
jp
xchg
sub
(bad)
cs
dec
lods
push
cmps
es
push
and
mov
add
retf
out
dec
ins
test
setle
imul
ss
pusha
(bad)
mov
add
inc
popa
push
xor
jp
ficomp
pop
cld
mov
cs
(bad)
in
pop
popa
aam
dec
rcr
push
jbe
jge
jbe
sbb
in
lea
sbb
jle
mov
jge
cmps
push
call
cmp
and
pushf
mov
xor
leave
or
pop
pop
cmps
(bad)
sti
(bad)
pop
sbb
(bad)
fidivr
inc
js
xchg
dec
mov
xchg
icebp
movs
add
in
push
mov
aad
mov
enter
movs
lods
jno
dec
cmc
pop
sub
push
leave
stc
je
test
cmps
jns
jle
mov
or
mov
cmp
test
jne
int3
mov
inc
pushf
inc
in
rol
pop
movs
fldenv
mov
mov
mov
stos
cdq
outs
(bad)
test
mov
jmp
sahf
div
add
ja
movs
xor
pop
movs
or
dec
mov
or
cmps
sbb
xchg
add
cmps
xchg
mov
dec
pop
scas
popa
mov
imul
cmc
ret
test
in
retf
lock
stos
xchg
jb
out
cs
inc
xchg
kmovb
push
aas
sahf
sub
std
daa
adc
push
test
pop
xchg
fadd
outs
jbe
imul
test
leave
ins
sahf
jno
mov
inc
je
adc
push
or
mov
iret
mov
fsub
aam
icebp
mov
imul
jg
in
pusha
outs
jae
test
out
jp
mov
(bad)
(bad)
push
inc
pop
and
sbb
cld
imul
iret
ds
(bad)
push
dec
dec
push
cmp
mov
pop
test
jne
pop
mov
mov
das
in
fidiv
sub
and
dec
mov
jl
stos
inc
pop
aaa
pop
sbb
adc
cwde
pop
arpl
imul
ds
sub
push
cmps
mov
mov
neg
jbe
fs
ret
sahf
pusha
pusha
add
sub
pusha
push
mov
lahf
adc
out
sbb
mov
jge
mov
xchg
xor
adc
mov
or
or
in
retf
add
mov
mov
ficomp
out
push
ins
rcl
not
in
push
push
mov
and
ins
or
adc
add
pop
lods
jg
daa
retf
arpl
mov
stos
jbe
sbb
dec
jmp
xor
and
std
mov
(bad)
mov
psubusb
pop
xor
pop
in
ja
shr
into
push
mov
mov
icebp
xchg
jl
and
or
dec
stc
push
mov
daa
leave
ret
fwait
push
mov
pop
jecxz
mov
cld
push
mov
inc
adc
adc
add
in
and
aas
lea
mov
pop
pop
or
dec
ds
stos
or
sbb
jmp
lock
fidivr
je
push
(bad)
cld
arpl
ret
or
sbb
add
jge
push
loopne
imul
mov
cmc
fcomp
call
fbld
sub
jb
in
in
cld
std
cmp
(bad)
dec
mov
sub
rcr
inc
pop
sub
adc
mov
(bad)
shl
je
cmp
int3
mov
pop
shr
adc
je
mov
adc
cmp
gs
or
or
mov
rcr
lock
adc
lods
dec
fwait
(bad)
xor
cmp
shl
pop
in
xchg
cwde
outs
pushf
push
dec
out
aaa
pop
fwait
(bad)
std
lock
fldcw
lds
lds
pop
xor
scas
jbe
add
inc
test
int
mov
int
mov
(bad)
mov
sub
outs
fldcw
xchg
leave
ror
(bad)
fidivr
jns
jge
sbb
test
push
cmp
push
cdq
add
inc
xchg
cmc
cmp
cmp
or
push
inc
add
outs
jmp
shl
add
mov
ja
je
xor
pop
and
dec
ret
enter
mov
jge
ret
retf
in
iret
push
jecxz
into
(bad)
pop
add
mov
push
xor
xchg
adc
retf
int
addr16
in
mov
push
hlt
data16
inc
loop
fstp
lods
stos
or
sub
arpl
sbb
sbb
and
pop
pop
xchg
jmp
mov
out
adc
dec
clc
and
add
stos
push
sbb
int3
ror
sbb
cld
mov
adc
in
jb
mov
add
xor
in
sub
jl
imul
and
std
jae
xchg
jmp
inc
stc
cmp
pop
out
mov
imul
mov
sbb
sbb
push
movs
shl
enter
mov
ret
fdivr
in
push
std
call
test
daa
dec
inc
and
frstor
movs
or
(bad)
js
ins
(bad)
aad
outs
xor
in
mov
dec
dec
loopne
js
icebp
out
cmp
add
jmp
retf
adc
mov
ja
mov
mov
call
push
xchg
enter
jl
(bad)
push
pop
add
cwde
cmc
(bad)
call
iret
ja
jo
jl
xor
xchg
push
stos
xor
cld
or
mov
mov
pop
and
or
cmps
cmps
ss
add
pushf
and
jmp
cmp
sar
sbb
fisub
dec
jae
jle
xchg
mov
jg
fnsave
mov
not
push
idiv
or
add
imul
cmp
mov
mov
dec
sar
cmp
loop
ins
push
sti
bound
mov
fidivr
inc
jnp
dec
or
push
cwde
add
dec
enter
ret
jns
sub
rcl
and
lahf
ficomp
push
pop
inc
aaa
add
sar
sti
add
(bad)
and
call
jp
call
or
rol
bound
nop
sbb
and
adc
push
adc
daa
mov
mov
pop
pop
mov
test
xchg
and
adc
jo
test
mov
fldcw
dec
xor
sub
outs
das
xor
int
ins
pop
xor
mov
push
or
jp
jmp
mov
fistp
loopne
je
enter
jg
and
inc
pop
fdivr
bound
dec
adc
retf
cmps
(bad)
push
push
pushf
jle
daa
mov
arpl
xor
dec
test
cmp
jbe
mov
push
fyl2x
xchg
fisttp
xlat
cdq
test
cmp
push
(bad)
call
je
jo
imul
cmp
mov
pop
dec
sbb
jg
dec
jp
jae
iret
mov
jno
sahf
fxch
push
push
mov
bnd
sub
popa
push
scas
xchg
xor
mov
lahf
(bad)
cdq
fiadd
mov
test
stos
jbe
inc
sub
clc
inc
je
out
adc
std
aaa
fwait
icebp
arpl
movs
(bad)
mov
push
inc
iret
cwde
(bad)
rol
sbb
fadd
mov
test
stc
fistp
jmp
lock
dec
xchg
xchg
xchg
and
xor
ret
sahf
sbb
jns
std
fiadd
pop
mov
stc
pop
xor
pop
cmp
or
je
xchg
sub
inc
cmp
xchg
shl
dec
cmps
pop
pop
sti
xor
push
gs
stos
fmul
push
bound
sbb
sbb
dec
add
inc
ds
retf
stc
test
cmp
lea
js
in
jo
inc
in
es
loopne
sub
or
sub
jge
int
loope
xchg
adc
pop
fucomip
test
lock
jg
das
pop
push
(bad)
push
pop
leave
push
add
mov
inc
or
clc
mov
jne
adc
out
push
mov
iret
adc
fcmovu
push
test
mov
sbb
movs
cmp
inc
pop
js
pop
push
adc
cmp
lock
pusha
(bad)
test
jge
xchg
fcomp
or
push
pushf
mov
adc
push
jns
push
jge
xchg
and
sbb
outs
mov
scas
mov
loope
dec
sbb
cmp
shl
aas
jge
fist
loop
fwait
or
pop
pop
add
movs
mov
sub
dec
or
mov
dec
inc
js
xor
out
cmp
(bad)
jecxz
or
das
cwde
sahf
xacquire
imul
mov
ss
mov
mov
cmp
and
icebp
adc
mov
test
mov
sub
les
or
cld
sbb
dec
jmp
div
lea
cmp
or
push
add
pop
pop
cmp
data16
dec
inc
sub
xchg
mov
mov
push
fsubrp
dec
sahf
sub
mov
jmp
add
pop
jae
je
cmp
enter
or
cmc
(bad)
push
fs
xor
mov
mov
ins
mov
imul
jb
sub
mov
out
mov
push
adc
adc
(bad)
jge
push
aad
push
mov
in
adc
lahf
lds
xchg
mov
(bad)
int
std
mov
int3
ja
ss
pop
rcr
or
dec
cmp
loop
(bad)
div
stos
push
add
add
mov
push
sub
gs
fild
loope
fsub
jg
test
cwde
jg
test
(bad)
pop
sbb
pusha
(bad)
cmc
cmp
std
arpl
mov
or
ficomp
jp
out
inc
iret
mov
sbb
pop
jno
into
or
pop
adc
dec
push
mov
xchg
outs
xchg
push
adc
cmp
imul
cmp
ror
inc
xor
pop
hlt
or
leave
xchg
sbb
inc
fwait
(bad)
loop
cmc
xor
popf
jecxz
sub
xchg
adc
sub
jmp
sbb
(bad)
ret
mov
cmps
and
repz
ds
pop
mov
pop
cmp
adc
dec
shr
or
lods
inc
(bad)
ja
inc
scas
push
daa
addr16
js
idiv
test
jae
mov
cmp
(bad)
mov
into
fsubr
xor
test
mov
stos
dec
test
pop
xor
mov
loop
les
jle
pop
test
and
call
mov
mov
(bad)
xor
xlat
shr
sub
xchg
xchg
xor
jmp
lock
adc
xchg
mov
add
add
push
les
mov
cld
mov
pop
dec
push
sbb
xchg
int
mov
pop
test
loop
push
js
movntps
out
gs
pop
mov
les
push
mov
mov
sub
mov
js
ret
sbb
imul
mov
and
xchg
push
sub
test
ror
push
mov
adc
inc
ret
mov
xchg
dec
mov
cmp
js
outs
leave
mov
add
scas
jg
in
fs
cmps
test
(bad)
out
rcl
xchg
test
or
pop
fadd
push
xchg
xchg
jp
in
jmp
jnp
iret
cmp
lods
imul
enter
pop
mov
sub
cdq
call
sbb
test
into
mov
fisttp
cmp
mov
aaa
and
popf
xor
cdq
loopne
mov
ds
clc
aam
push
cmp
add
popf
cmp
or
inc
sar
xchg
mov
mov
test
cmp
and
mov
xor
mov
dec
outs
mov
fucompp
xor
and
pop
xor
sbb
(bad)
jl
jl
adc
out
mov
ss
pop
sub
push
idiv
stc
int3
push
sbb
or
jno
ins
xchg
sub
xchg
pop
pop
jge
jp
icebp
movs
call
popf
adc
out
xchg
pop
xchg
mov
icebp
mov
inc
mov
and
rcr
loopne
and
fnstsw
scas
jmp
adc
xchg
inc
push
or
and
nop
pop
faddp
outs
out
pushf
nop
repnz
add
cmps
dec
shr
jg
cmp
call
cmps
sahf
dec
fcom
stos
and
outs
ret
add
aaa
ret
xbegin
push
push
loopne
les
(bad)
inc
stc
fmul
push
clc
dec
add
pop
xchg
sti
cmp
fwait
mov
retf
inc
push
repnz
bound
inc
mov
imul
push
mov
shl
pop
enter
adc
mov
movs
jae
fwait
xchg
fistp
stos
shl
pop
out
repz
sbb
inc
out
das
add
movs
push
cmp
mov
mov
xor
lock
iret
outs
jge
pop
adc
outs
jecxz
ror
push
add
or
daa
or
test
mov
or
jmp
or
adc
stos
dec
jbe
xor
iret
adc
jno
push
fwait
lods
jnp
pop
xor
add
cwde
jne
iret
pop
fdiv
push
lock
xchg
xchg
xor
aam
in
aaa
ror
(bad)
pop
retf
inc
fstp
out
(bad)
cld
or
jnp
sbb
push
add
jp
mov
or
pop
popf
js
sbb
push
xor
scas
xchg
das
mov
add
or
fist
pop
retf
in
aas
mov
dec
aas
repz
icebp
fwait
lods
ja
sub
adc
movs
out
ins
mov
push
or
popf
jge
aad
(bad)
pusha
call
in
mov
gs
fbstp
loope
out
push
iret
dec
shr
xor
inc
fist
mov
ins
or
mov
mov
les
leave
inc
jp
xchg
jge
shl
jge
mov
call
dec
push
xlat
mov
loop
outs
sbb
mov
add
jmp
push
pop
push
add
xchg
fimul
xor
in
push
add
imul
sar
dec
nop
xor
inc
mov
add
ins
or
xchg
cmp
je
dec
cmp
gs
inc
in
lock
or
repz
mov
push
add
dec
pop
sbb
mov
gs
arpl
sbb
pop
shr
pop
scas
das
in
sub
sbb
(bad)
es
ret
xchg
mov
in
xchg
dec
popa
popa
dec
cmp
test
cmc
retf
retf
mov
sub
(bad)
fs
call
mov
fwait
jl
adc
jl
xor
inc
adc
out
les
sub
fisttp
das
sub
jmp
cmps
out
jecxz
int
or
or
cmp
mul
xchg
add
call
out
scas
ins
lods
aad
seta
pop
loopne
imul
fstp
sbb
pop
imul
loopne
pop
lods
outs
sbb
and
dec
and
xchg
xchg
and
ds
jle
jmp
cmovne
mov
jns
xchg
shl
cli
dec
mov
adc
bound
cli
mov
push
imul
jb
fcmovb
outs
pop
gs
pop
mov
daa
mov
jo
xchg
movs
dec
xor
sub
out
in
div
xchg
call
mov
mov
cwde
dec
mov
xchg
out
pop
cld
mov
ins
sar
ds
out
out
bound
add
out
mov
sbb
mov
loop
out
xlat
or
fwait
add
inc
pop
pop
in
mov
ins
rol
push
cmps
ss
cli
jp
xor
jmp
push
mov
sub
fld
shl
gs
jge
jno
push
dec
cmp
pop
pop
je
mov
lock
ds
and
mov
in
sub
push
mov
test
sbb
shl
dec
dec
adc
inc
test
movzx
jg
xchg
imul
jae
in
sub
sub
and
std
mov
mov
mov
cwde
mov
fisttp
icebp
push
loopne
or
sbb
pop
jmp
aad
outs
jle
add
mov
push
xor
adc
mov
ret
enter
imul
clc
shr
gs
xlat
sar
fdiv
push
out
cmps
cmp
(bad)
out
(bad)
jmp
mov
xchg
dec
dec
sbb
ins
mov
sbb
(bad)
aas
xchg
xchg
dec
call
mov
das
dec
mov
xchg
xchg
inc
test
fs
adc
jmp
push
jo
(bad)
xchg
xchg
lea
in
adc
bound
cmc
add
mov
mov
repnz
mov
and
dec
cmp
(bad)
jno
inc
jae
jmp
mov
call
loopne
mov
jo
mov
sbb
jo
add
sbb
dec
ror
test
movs
adc
mov
sahf
push
stc
test
jecxz
into
cmc
shr
rcr
pop
fstp
call
es
cdq
xor
out
psadbw
dec
jmp
xchg
out
lds
mov
mov
hlt
jb
ss
outs
xchg
mov
adc
cmps
out
sub
out
pop
sub
js
pop
mov
pop
aam
cmc
lock
enter
cmp
jb
mov
stos
adc
pop
in
rcr
sub
mov
jle
sar
aas
stos
xor
test
test
sub
(bad)
fisttp
sbb
lods
test
jns
je
inc
xor
fmul
inc
and
xor
outs
dec
std
mov
pop
or
iret
ret
call
mov
sub
stos
and
fimul
scas
icebp
mov
fwait
and
fwait
pop
test
jbe
push
pop
mov
sar
cmp
lods
jbe
inc
mov
or
outs
ja
xchg
add
shr
sub
shl
mov
call
inc
cld
pop
cmp
les
sti
lea
(bad)
fld
xchg
push
(bad)
or
pop
push
push
pushf
inc
cmp
jecxz
mov
cwde
dec
xor
sub
test
lds
inc
sbb
loope
daa
mov
add
pop
push
enter
sbb
xchg
pop
gs
jae
lods
add
mov
in
mov
adc
and
inc
and
pop
cmp
mov
das
cwde
xor
pop
out
mov
bound
jnp
mov
add
dec
push
rol
mov
inc
imul
jno
inc
add
cs
aaa
sahf
mov
cs
push
xor
dec
xor
mov
js
hlt
rol
loopne
retf
daa
sub
fwait
call
push
adc
sahf
and
jecxz
jg
sti
push
imul
push
xor
cmps
sub
jmp
and
movs
popa
std
and
add
or
cld
xchg
cld
sub
stos
jle
push
scas
cmps
adc
imul
outs
out
inc
iret
lds
rcl
clc
fst
and
xor
or
mov
aas
adc
pop
xchg
repz
sbb
test
pop
and
mov
sub
jg
dec
jp
pusha
cmc
add
dec
jo
or
outs
(bad)
into
movs
out
pop
push
fdivr
push
rol
ins
pop
inc
mov
movs
and
pop
arpl
sub
inc
push
dec
cmp
cmp
sub
pop
int
fsub
jns
out
imul
xor
and
ja
imul
(bad)
es
pop
pop
jae
jmp
push
int
std
or
std
dec
and
pop
imul
adc
and
popa
add
xchg
mov
push
movs
inc
jne
xor
mov
rcl
add
fisub
in
cld
push
test
outs
inc
shl
jl
mov
pop
loopne
aad
cmp
hlt
mov
or
jns
xor
jns
nop
sub
inc
push
call
push
sub
pop
xchg
(bad)
sbb
fstp
aad
enter
jg
(bad)
push
mov
pop
dec
out
jmp
adc
jmp
sbb
fisttp
das
or
cli
add
clc
push
test
or
or
sub
cmc
ds
fidiv
call
sbb
jg
mov
js
movs
ss
jge
bound
adc
cmc
imul
or
out
ret
and
fwait
test
dec
cli
mov
popf
lea
out
es
inc
push
mov
adc
stos
cmps
inc
stc
mov
sbb
xchg
or
sub
scas
mov
test
cmc
inc
mov
int3
jp
xchg
or
les
adc
repz
inc
xor
add
repz
push
xchg
xor
lods
(bad)
in
inc
int3
adc
loop
sti
xchg
mov
arpl
imul
stos
not
mov
inc
sahf
pop
add
dec
sub
dec
std
and
mov
sbb
fadd
clc
aas
cwde
js
in
or
push
mov
popf
pop
adc
scas
xor
mov
lea
inc
cwde
(bad)
jl
out
adc
cmp
fsubr
xor
ss
fstp
jmp
sbb
xchg
jne
leave
neg
add
cmps
or
mov
sbb
or
out
iret
ins
inc
imul
test
idiv
mov
xchg
mov
mov
adc
not
test
setg
in
sar
test
lahf
std
jb
outs
adc
in
xor
retf
aam
sbb
stos
jg
or
mov
ds
xchg
js
xchg
ficom
adc
adc
cmc
popf
out
cmc
push
outs
jmp
inc
fstp
cs
xchg
pushf
inc
clc
js
mov
lods
arpl
push
hlt
in
cmp
je
pop
push
add
fbstp
out
push
js
cwde
pop
sub
ins
sbb
fwait
adc
adc
or
or
lock
ret
retf
mov
lea
dec
aad
inc
xchg
mov
xor
cs
add
dec
lock
ins
movs
sbb
icebp
jecxz
ins
das
push
outs
and
mov
hlt
sub
sbb
test
xchg
outs
test
mov
daa
pop
mov
sbb
adc
dec
into
imul
jecxz
push
jo
lock
lods
test
add
fdiv
and
loop
xor
push
pop
rol
lock
loope
cmp
rol
push
fsubr
fstp
sub
add
add
cmp
mov
xor
xchg
mov
popa
and
pusha
cmp
test
jno
fwait
xchg
push
and
xor
jb
out
push
clc
jo
stc
imul
repnz
mov
xchg
sbb
sbb
dec
fiadd
mov
pop
test
add
cmps
pop
dec
jns
xor
ret
cmp
add
gs
fld
scas
loopne
mov
ss
pop
test
xor
test
iret
mov
jne
out
jmp
add
mov
jg
cmc
loop
cmp
movs
fbld
mov
mov
add
ins
ja
pop
fidivr
xchg
add
jecxz
lock
sub
aaa
dec
lods
dec
cs
xor
addr16
fst
mov
out
std
fcomp
adc
call
jo
or
push
add
mov
(bad)
in
repnz
cmp
jne
inc
and
pop
ret
sub
loop
clc
mov
xchg
je
push
test
and
mov
push
or
push
sbb
stos
and
ror
or
ja
and
cmp
out
je
xor
mov
inc
pop
inc
mov
cmp
addr16
(bad)
jl
and
xchg
ret
jle
dec
push
pop
pop
std
sub
fist
jmp
cs
pop
js
aaa
scas
xchg
and
out
jno
movs
add
or
enter
cdq
imul
out
pop
loopne
cmp
cmps
ins
cmp
(bad)
cmp
dec
enter
in
js
dec
shl
inc
cmp
js
xor
retf
cmp
jb
cmp
int
jbe
lea
daa
xchg
xor
mov
ret
addr16
or
and
jo
mov
and
dec
mov
lock
fwait
cwde
sub
lods
rcl
cdq
pushf
xlat
popf
cmp
sub
cs
fidivr
jns
push
xchg
xor
and
sub
mov
jecxz
push
popa
mov
jle
push
(bad)
mov
sub
jns
div
mov
movs
aad
jp
add
cmp
or
repz
cmp
aad
syscall
and
mov
int
gs
push
lahf
ins
mov
retf
jbe
paddq
lods
ret
pop
pop
(bad)
cld
or
add
je
mov
aam
je
mov
cvtdq2ps
lock
sub
push
dec
add
jae
xchg
dec
push
cmp
fs
es
mov
dec
repz
data16
mov
jle
(bad)
add
adc
test
cmp
shl
and
call
mov
cmp
out
pop
test
pop
in
sub
int
in
cmps
mov
cmc
lods
lds
icebp
loope
adc
mov
pop
(bad)
lods
xchg
mov
icebp
sahf
xor
xlat
jg
arpl
jmp
fstp
dec
xor
dec
xor
pop
jne
mov
push
sti
mov
out
xor
and
mov
jl
ffreep
aas
fs
cmp
jl
in
repz
push
jae
mov
(bad)
pop
mov
ret
cmp
fsin
out
push
jmp
mov
xchg
dec
jo
scas
(bad)
ror
mov
adc
inc
stos
popa
mov
mov
mov
mov
push
sbb
call
add
cdq
sahf
pop
es
inc
and
popf
cmp
add
popf
push
addr16
jae
addr16
stos
sub
sbb
nop
mov
mov
popa
cmp
rcl
dec
push
add
mov
fisub
push
pop
shl
mov
pusha
mov
scas
pusha
cmp
es
ss
xchg
cmp
xor
lea
lods
stos
cmps
jne
daa
(bad)
jmp
or
xor
scas
cld
out
inc
or
push
mov
dec
outs
dec
pop
jb
dec
das
adc
sub
adc
shr
shl
cmp
(bad)
gs
or
sub
repnz
inc
xor
std
jmp
enter
call
movs
mov
adc
push
and
inc
fdivrp
stc
jbe
push
fwait
ins
xchg
stos
mov
or
daa
sub
xchg
jecxz
imul
mov
test
retf
pop
sub
and
mov
push
inc
cli
sbb
enter
add
pop
popf
jb
mov
repz
stc
inc
mov
ret
lahf
add
inc
sub
retf
pushf
and
cmps
jne
imul
jno
jns
xchg
push
repnz
sahf
ret
push
scas
ins
in
mov
loopne
pop
jp
arpl
vmread
cmps
es
outs
ins
ss
push
aad
lea
or
add
or
js
cmp
sub
int
mov
fcom
mov
mov
enter
or
sahf
imul
ror
movs
enter
inc
inc
out
(bad)
lea
fs
test
nop
mov
shl
add
mov
lds
es
scas
cdq
cmps
xchg
mov
pop
sub
pop
inc
jnp
scas
add
mov
push
push
daa
std
adc
stos
iret
lods
rcl
adc
arpl
sub
xchg
ficom
sahf
mov
mov
inc
stos
cmp
inc
push
jo
retf
pusha
or
mov
sti
mov
xchg
fisttp
call
retf
int
or
daa
pop
add
aam
and
fiadd
jns
xor
mov
cmc
or
retf
sub
ss
cdq
xchg
mov
or
or
xchg
jle
mov
add
fdiv
xchg
add
mov
ss
outs
out
repnz
adc
retf
mov
inc
dec
cli
fcomp
sub
mov
hlt
mov
movs
pop
outs
dec
sti
out
adc
pop
fidivr
out
push
or
dec
and
gs
addr16
mov
mov
and
retf
and
mov
xor
xlat
leave
adc
or
pop
jmp
(bad)
push
xchg
sbb
mov
and
pop
out
mov
mov
ja
aam
hlt
push
not
xor
leave
push
iret
movs
push
retf
pop
dec
bound
neg
fidiv
int
mov
pop
sar
jmp
hlt
mov
jp
mov
jmp
jns
pop
cmp
dec
mov
scas
cwde
cmp
xchg
jmp
scas
mov
dec
fs
fcom
ja
ret
push
mov
ds
push
icebp
push
jae
add
(bad)
ins
mov
fadd
in
mov
in
xchg
sbb
jae
data16
push
mov
cmp
outs
and
mov
sti
xchg
cmc
add
mov
xchg
sbb
rcl
out
gs
inc
in
fcomp
inc
push
(bad)
test
inc
call
shl
fadd
call
out
pop
repnz
mul
repnz
cwde
pop
movs
mov
sbb
xchg
add
addr16
sahf
adc
cmp
out
js
sbb
cmp
inc
pop
push
mov
inc
fdivp
pop
inc
push
jo
movs
frstor
sbb
test
mov
(bad)
add
inc
add
cmps
jns
ret
xor
sub
add
adc
aas
xor
movq
ret
out
fiadd
or
dec
inc
clc
(bad)
jg
mov
xchg
mov
out
inc
adc
ror
rcl
jno
fbstp
inc
test
dec
in
push
cmp
inc
jno
int
fidivr
fisubr
repnz
cmp
out
xor
cmc
xchg
ficomp
loop
fidivr
xlat
jp
(bad)
push
in
jbe
and
pop
mov
or
pusha
xor
clc
retf
aas
repz
ja
xchg
mov
movs
repz
cwde
xchg
movs
pop
or
hlt
mov
fwait
and
aam
xor
mov
lods
mov
dec
dec
stos
adc
push
push
xchg
mov
pop
aam
lods
in
and
mov
pop
(bad)
push
jl
push
(bad)
push
mov
mov
adc
mov
xchg
hlt
add
dec
(bad)
jle
cmc
pop
push
leave
hlt
xor
push
dec
push
cmps
gs
push
pop
pushf
xor
call
jb
aam
mov
and
mov
xor
test
mov
jno
xchg
data16
jecxz
ficomp
pop
test
loopne
jg
push
ins
out
mov
ins
and
jne
jl
leave
inc
imul
jb
and
cwde
fwait
test
loope
dec
aaa
push
ins
ja
loop
add
(bad)
idiv
xchg
les
sti
test
mov
xor
mov
hlt
in
fbstp
sub
sub
cdq
cmp
fisub
add
pop
add
mov
mov
mov
rcl
inc
and
movs
(bad)
stos
nop
sub
iret
push
fxch
scas
push
push
aas
mov
mov
mov
pop
mov
push
aas
(bad)
or
and
mov
or
fbld
jmp
pop
dec
mov
(bad)
cli
(bad)
lea
xlat
cmps
xchg
and
or
(bad)
fwait
xor
xor
retf
adc
dec
xchg
adc
push
rcr
pusha
inc
loop
xchg
and
sbb
pop
js
mov
dec
movs
xor
xor
mov
jb
ja
push
loopne
in
mov
cdq
adc
push
mov
push
inc
(bad)
pop
push
test
sub
inc
mov
add
cmps
inc
ja
jmp
mov
call
mov
dec
rcl
jnp
fcmovbe
jecxz
(bad)
gs
ins
sahf
ins
dec
clc
test
jle
vmulsd
cld
sub
retf
mov
jb
sbb
and
push
dec
test
jbe
out
sahf
mov
test
fsubr
jo
aad
add
dec
enter
cmp
mov
push
push
or
inc
hlt
shr
mov
adc
mov
fldenv
jo
mov
call
bound
pop
mov
leave
push
gs
and
mov
jae
or
call
ja
fsubp
mov
rcl
imul
and
or
stos
push
xor
mov
inc
gs
xor
(bad)
bnd
jp
popf
mov
push
call
xor
sbb
adc
jle
push
adc
adc
movs
xor
scas
push
xlat
pop
out
inc
inc
loopne
xchg
adc
aaa
dec
xchg
xchg
fdiv
leave
mov
ins
es
into
call
cmc
sbb
jo
and
mov
lods
jmp
popf
in
dec
inc
sub
pop
enter
push
pop
pop
jg
rcl
stc
popa
aam
mov
retf
fnstenv
loop
leave
pop
nop
in
(bad)
out
push
add
sub
cmps
dec
fsub
out
call
or
jl
dec
ret
push
sub
das
and
das
pop
inc
mov
mov
stos
ins
sahf
repz
xchg
shl
dec
or
js
jo
iret
in
sbb
cs
int
and
add
mov
mov
fnstenv
push
and
jbe
popa
dec
mov
repz
outs
add
and
jle
inc
push
or
gs
(bad)
into
ja
dec
cs
shr
inc
data16
sub
and
sub
loope
es
pop
movs
jae
cdq
jmp
sub
dec
fistp
mov
or
es
mov
cmps
cs
test
shr
out
or
jbe
ja
add
adc
jne
sub
out
data16
mov
jno
mov
bound
mov
cli
icebp
inc
cmps
cs
call
popa
stos
inc
loop
pop
sar
shl
fadd
dec
mov
pop
and
les
(bad)
out
push
mov
sbb
ret
jae
mov
mov
and
sbb
adc
cmp
sbb
xchg
and
inc
or
(bad)
and
jg
or
leave
pop
dec
pushf
aaa
mov
adc
xchg
or
jns
pop
dec
lods
test
cmps
fcom
xchg
out
test
mov
cmps
sbb
out
cld
sahf
aad
ret
xchg
mov
xchg
lea
in
jb
xor
fld
inc
push
pop
lods
mov
out
push
pusha
cmps
ja
mov
jge
jecxz
or
xchg
ins
pop
xchg
imul
not
sub
shr
sub
not
(bad)
dec
call
stc
mov
fiadd
or
mov
shr
int
mov
adc
mov
cmp
sbb
mov
mov
enter
js
aaa
(bad)
jmp
lea
sbb
jecxz
(bad)
fist
ins
push
mov
loop
pop
adc
pop
ja
ret
push
mov
dec
mov
pop
dec
sub
cwde
jle
sub
jo
push
sub
xchg
or
pop
adc
and
pop
jge
test
pop
sbb
sub
xor
add
push
(bad)
mov
xchg
jb
outs
push
(bad)
mov
jmp
xor
adc
mov
add
scas
pop
cdq
das
dec
adc
sbb
sub
or
adc
lods
int
scas
(bad)
adc
cld
int3
cmp
shl
iret
push
ins
pop
std
fimul
out
loope
movntps
sbb
dec
rol
dec
adc
repz
repz
add
retf
aas
leave
cmp
jl
sub
and
shl
xchg
sbb
test
stos
mov
sti
dec
test
and
dec
stos
div
ret
fld
pop
cmp
mov
mov
jmp
mov
cld
inc
retf
adc
cmp
sub
loop
jmp
dec
mov
push
cmp
add
xchg
jnp
fadd
je
inc
pop
in
xchg
adc
push
add
push
stos
lods
fnsave
and
cs
xor
mov
loopne
mov
jne
push
jl
dec
into
mov
dec
es
push
das
call
cs
sti
mov
push
or
inc
jne
(bad)
mov
lds
add
fcom
jno
pop
xchg
test
dec
mov
push
pop
call
loop
add
cmp
scas
push
fwait
dec
inc
stos
test
mov
dec
jecxz
jmp
jo
int3
xchg
push
ret
data16
outs
cmps
bound
dec
mov
dec
int
fiadd
ds
dec
std
sti
cmp
(bad)
out
push
add
xor
and
jmp
push
out
scas
cmp
shl
aaa
mov
jnp
push
cmp
adc
call
in
add
jns
loopne
popa
pop
pop
retf
ds
jmp
mov
mov
fidivr
(bad)
mov
jae
fld
in
ficomp
pop
xchg
xor
jmp
pop
mov
mov
sbb
mov
les
xor
out
ja
or
test
mov
movs
dec
mov
jnp
pop
lahf
(bad)
or
pop
hlt
test
fld
repz
ret
jl
push
int3
(bad)
mov
leave
(bad)
mov
fwait
dec
ins
and
bound
push
jmp
dec
int3
pop
pop
sbb
jmp
sti
cmps
cmp
adc
sbb
test
push
xchg
inc
pop
and
sub
shl
out
push
pop
cmc
xor
test
dec
xor
cmp
std
xlat
lds
bound
pop
fcmovnbe
add
loopne
inc
xor
dec
push
push
jae
add
daa
inc
jge
inc
xor
fmul
pop
ficom
in
(bad)
loopne
out
rcr
aad
fst
xchg
in
sahf
fmulp
pop
xor
dec
xor
call
adc
xchg
push
and
imul
sbb
test
inc
xchg
daa
add
lahf
cmc
cld
mov
xchg
xchg
imul
add
daa
inc
nop
je
dec
std
cmc
out
jae
outs
and
shr
push
and
add
data16
mov
dec
out
mov
in
or
movs
clc
dec
mov
mov
adc
or
bound
or
sbb
test
xchg
les
or
push
in
or
retf
pop
sub
xlat
dec
call
sqrtps
mov
ss
cwde
mov
sub
lds
push
jb
fwait
push
arpl
dec
xchg
mov
or
adc
xchg
xchg
es
adc
adc
fcmovnu
adc
movs
and
daa
into
test
add
xlat
jl
add
xlat
xchg
push
mov
popf
das
movs
add
sbb
popf
push
and
data16
scas
mov
xor
mov
dec
mov
and
mov
or
sub
cmp
mov
dec
mov
neg
test
or
pop
cld
push
fldenv
adc
rcr
adc
pop
mov
or
bound
sub
adc
add
mov
cmp
pop
dec
mov
push
or
fild
xor
add
lds
pop
in
inc
test
mov
pop
sub
in
jmp
mov
out
std
add
mov
xor
dec
enter
xchg
sub
fwait
push
call
dec
dec
jnp
ret
fnstsw
cmp
pop
mov
in
aad
aad
jnp
rcr
push
adc
mov
cmps
mov
nop
icebp
test
jmp
sahf
dec
je
xchg
nop
push
xor
add
and
outs
adc
adc
in
xchg
jae
or
push
cli
mov
ds
adc
cmp
mov
sbb
jmp
stos
data16
pop
jno
in
push
push
cmps
jb
jp
lods
dec
(bad)
lods
and
ret
shl
cmp
aaa
out
jg
data16
mov
lahf
(bad)
pop
(bad)
pop
nop
mov
clc
or
sub
test
jle
aad
pop
pop
in
loopne
push
rcr
xor
fstp
mov
lds
lock
pop
jnp
adc
clc
loop
inc
push
adc
out
fadd
or
jecxz
cli
xchg
pop
cwde
fdiv
sbb
xor
sub
jns
ret
leave
push
das
in
xchg
jns
fstp
cmp
jp
in
sahf
fiadd
into
add
push
xchg
jg
inc
mov
jnp
cli
inc
inc
cmc
and
mov
cs
jbe
push
bound
xchg
adc
iret
sub
cmp
bound
jnp
xchg
pusha
or
cld
adc
mov
xchg
jge
cmps
lock
icebp
xor
cld
pop
dec
cmp
dec
fld
loopne
neg
es
test
dec
push
mov
jae
jmp
popf
push
sbb
hlt
stos
repz
xchg
(bad)
scas
cmp
pop
scas
cmp
rcr
iret
pusha
cmps
(bad)
cld
xor
mov
inc
mov
ins
inc
ret
xchg
push
cmp
(bad)
cld
and
xor
or
repnz
jae
or
and
cmps
inc
sti
inc
add
out
pop
in
setge
rol
mov
test
in
fiadd
jns
movs
inc
daa
outs
popa
int3
cmp
lds
or
inc
sbb
data16
in
mov
xor
imul
fstp
push
xchg
mov
fbstp
jo
mov
add
ss
fst
sub
add
sbb
int
pop
std
adc
sti
ss
sub
mov
mov
inc
adc
or
dec
ret
cmc
mov
mov
mov
cs
neg
inc
inc
mov
(bad)
ja
mov
or
and
pushf
aam
lods
jmp
mov
ret
mov
jle
daa
and
xchg
jne
sub
mov
mov
mov
mov
sub
pop
rol
add
in
jecxz
lea
dec
pop
pop
jecxz
dec
cmc
sbb
mov
lods
es
jo
inc
leave
loop
(bad)
add
push
mov
and
ret
cmp
cmp
cmc
sti
push
mov
ja
in
add
jecxz
cmp
pop
lahf
mov
sub
aam
or
jnp
test
xchg
pop
pop
xor
movs
push
rol
jg
icebp
add
mov
xchg
mov
jae
jns
add
xor
pusha
into
mov
jbe
push
xor
sub
clc
lods
movs
mov
sbb
rol
or
call
add
aam
(bad)
outs
sahf
ins
outs
aad
dec
push
test
std
jns
sti
mov
jp
in
aad
(bad)
and
and
call
mov
inc
xchg
fprem
in
in
lods
inc
loopne
cmp
adc
shr
inc
cmp
and
iret
fimul
repz
test
es
mov
xchg
xchg
xchg
push
lahf
fbld
ret
pop
mov
lock
or
push
pop
and
mov
dec
push
loop
mov
call
push
push
pop
jno
cdq
rcr
adc
aad
jo
popf
hlt
xlat
mov
sbb
mov
mov
dec
fmul
inc
pop
cli
mov
rcl
and
aas
xchg
sub
loop
repz
(bad)
in
push
jne
xor
into
out
repz
lods
repnz
pop
pop
in
mov
bound
addr16
fcom
mov
push
fs
cmc
in
xchg
dec
ja
cmp
adc
sub
or
pop
inc
scas
and
cwde
test
retf
mov
scas
adc
mov
mov
xor
dec
in
xchg
retf
ja
fst
cmps
add
icebp
popf
inc
xchg
lock
add
inc
out
daa
ins
jnp
pusha
sbb
int3
shl
mov
mov
pop
mov
xchg
loope
popf
adc
xor
push
(bad)
int3
fistp
xchg
mov
add
or
js
jge
push
cmps
pop
cmp
inc
cmp
add
ror
int
push
push
loope
call
push
int
inc
push
fsub
add
and
cmps
pop
lock
out
pop
mov
push
xor
mov
sti
sub
cmp
addr16
test
xchg
jae
mov
icebp
xor
xchg
adc
push
rol
ins
int3
push
mov
dec
loope
mov
cwde
loop
mov
adc
outs
jge
in
inc
pop
pop
popf
imul
pop
mov
daa
xchg
mov
in
push
cmc
inc
adc
test
int
ins
xchg
dec
mov
adc
jno
fadd
jb
lds
nop
sub
call
cwde
cmp
mov
push
cmp
stos
mov
cdq
mov
mov
shl
in
dec
jno
aaa
in
adc
in
(bad)
sbb
jbe
loop
mov
in
lea
adc
fld
out
data16
ins
adc
sbb
xchg
imul
jne
lds
or
jp
cmp
xchg
out
dec
or
jmp
or
pop
aad
and
push
push
or
mov
icebp
adc
and
lock
jge
cmp
sar
sub
je
or
jmp
push
int
cli
arpl
dec
sbb
fstp
push
mov
aas
pop
mov
movs
jmp
lea
jmp
adc
mov
(bad)
pop
fadd
adc
fcomp
(bad)
fisub
cmps
jp
mov
fwait
jecxz
inc
xchg
mov
or
adc
mov
fidivr
(bad)
xor
add
movs
push
in
iret
or
aam
pushf
nop
es
xor
retf
sbb
push
lock
cmc
int
in
mov
(bad)
push
xchg
call
std
out
ja
dec
lea
enter
je
or
sar
out
sbb
cmpps
sub
sub
push
fstp
push
aam
jp
lahf
and
fcmovnu
xchg
cmp
sbb
std
jge
das
aas
jnp
inc
inc
and
pusha
aaa
add
add
pop
scas
add
adc
std
test
mov
and
stos
push
pop
cdq
and
fistp
cli
jno
mov
adc
cmp
mov
into
or
pop
pop
aad
push
xor
test
repz
sub
je
mov
xchg
xor
jg
add
mov
xchg
jb
lea
into
fdivr
adc
jg
xchg
push
xlat
inc
mov
and
popa
pusha
jmp
ror
mov
cmp
les
imul
add
mov
mov
adc
call
pushf
call
mov
sbb
(bad)
mov
push
push
js
pop
hlt
lods
out
in
add
bound
loope
xchg
js
jl
mov
inc
(bad)
ss
fstp
jg
adc
jnp
push
jle
xchg
ficomp
and
add
mov
push
push
cmp
mov
or
dec
fsub
sbb
ins
call
pop
aam
and
jae
test
cwde
ret
cwde
fs
pop
retf
or
xchg
mov
fnsave
add
nop
ret
pop
adc
push
add
into
jmp
(bad)
popf
or
add
loope
xchg
add
lods
mov
bound
push
jle
sbb
xchg
dec
(bad)
pop
mul
ror
loopne
data16
in
sbb
sub
pop
shr
xchg
int
jmp
in
mov
stos
leave
cmp
sub
sbb
jg
fwait
imul
repnz
in
jno
ins
xor
push
in
lea
sub
and
cmps
sbb
xor
sub
mov
mov
jmp
repnz
ds
fistp
scas
test
out
inc
dec
jmp
dec
enter
aam
rcl
push
jae
jno
(bad)
cli
sbb
sbb
sub
fsubr
icebp
adc
pop
ret
mov
jecxz
scas
cmps
push
ins
outs
fmul
popa
sub
xchg
mov
pop
xor
in
call
test
shr
ds
loop
mov
dec
xchg
cmps
jmp
mov
fdiv
xor
push
leave
cli
icebp
jmp
outs
outs
jae
(bad)
je
add
cmp
sub
mov
outs
inc
fist
outs
dec
out
ins
sub
jno
and
gs
push
mov
dec
push
div
or
hlt
pop
ret
es
in
cmp
and
call
dec
icebp
sub
and
mov
xchg
fist
js
mov
fcomi
jmp
adc
mov
xlat
mov
or
imul
outs
imul
stc
gs
dec
pop
mov
or
sbb
sti
xchg
arpl
jnp
(bad)
lods
fistp
imul
test
xlat
fnsave
push
pop
in
sbb
jg
jno
js
mov
xchg
adc
nop
idiv
js
sbb
retf
ins
je
xchg
das
mov
lods
xor
js
sbb
push
pop
pop
iret
pusha
push
fwait
cmp
add
and
enter
mov
mov
scas
int
inc
or
shl
gs
add
add
call
mov
mov
adc
stos
test
mov
inc
mov
jg
sub
inc
pop
inc
xor
movs
sub
xor
dec
xlat
mov
add
fcom
(bad)
jno
sub
cs
rcl
retf
call
leave
repz
pop
addr16
ds
sbb
xor
(bad)
loop
mov
imul
and
or
pop
test
in
xchg
xlat
jne
and
cmp
adc
mov
xchg
mov
aas
mov
ins
iret
add
mov
sub
adc
ins
mov
sar
nop
inc
cmp
out
out
jns
jle
xchg
mov
xchg
mov
xchg
lock
inc
xor
scas
adc
sub
push
push
sbb
call
(bad)
ins
es
add
mov
pop
shl
movs
push
sbb
cli
sub
rol
gs
fs
imul
cmp
mov
pop
cmp
icebp
xchg
cli
inc
es
mov
adc
scas
jns
dec
xchg
mov
inc
pop
or
popf
ffree
sti
jbe
inc
fsub
jge
not
or
scas
outs
cld
adc
push
lahf
shl
or
outs
push
test
hlt
call
adc
aam
sbb
mov
or
inc
mov
inc
stos
ins
sub
inc
dec
inc
mov
inc
push
int
adc
std
mov
mov
pushf
xchg
and
push
(bad)
ds
enter
aam
cs
out
ds
(bad)
movs
pop
int
repz
in
pop
and
mov
xor
outs
rcr
repnz
fnstsw
iret
push
xchg
retf
mov
jg
in
jo
inc
add
(bad)
movs
aam
test
or
push
pop
imul
inc
push
mov
in
push
(bad)
pop
inc
dec
or
in
sub
addr16
adc
aaa
dec
pop
xchg
jmp
xchg
and
popf
push
pop
lods
and
xadd
mov
addr16
sub
jmp
leave
arpl
(bad)
sub
retf
pushf
ins
mov
adc
in
sub
data16
push
pop
pusha
cli
mov
pop
sbb
cmp
xor
stos
sub
scas
mul
stos
cmp
out
lea
retf
xor
add
push
in
or
shl
inc
enter
test
movs
sub
mov
sub
lods
sub
add
es
or
xor
pop
ss
loope
xor
adc
fistp
hlt
and
push
test
mov
push
fmul
adc
hlt
pop
jge
ret
cmp
or
popa
jmp
test
dec
sub
sub
cmp
arpl
pop
bound
(bad)
shr
pop
mov
xor
mov
rcr
mov
in
xchg
cmc
repz
inc
cwde
jae
mov
and
mov
dec
cmp
jnp
inc
mov
in
neg
sar
into
inc
enter
ins
jnp
call
je
pop
xor
stc
mov
xor
lods
stc
out
or
call
js
pop
mov
sbb
mov
ins
mov
call
jg
ins
call
daa
fsub
out
mov
stos
push
mov
not
push
mov
sub
adc
sbb
mov
test
popf
xchg
sub
out
jb
adc
aaa
jnp
fdivr
jecxz
sbb
sub
test
adc
xchg
in
xchg
and
pop
mov
mov
pop
mov
inc
dec
imul
mov
clc
mov
dec
(bad)
cld
dec
ror
cdq
or
pusha
mov
test
in
fdivr
adc
sub
dec
shl
lods
repz
mov
cld
mov
gs
fld
std
mov
cmc
lds
inc
xchg
add
push
fbstp
sbb
fwait
pop
ret
add
adc
cdq
xchg
daa
daa
pop
jge
sti
sub
jns
push
ds
or
mov
ficomp
adc
and
jmp
stc
mov
mov
pop
xor
jns
push
test
mov
popf
xchg
fbstp
push
or
mov
inc
clc
jb
std
sub
mov
in
(bad)
cmc
loopne
fcomp
ss
xchg
pop
cmp
inc
or
mov
scas
jns
das
aam
mov
es
out
push
call
ds
stc
cmp
aas
sbb
mov
push
jle
jg
jae
adc
or
bound
xchg
les
das
pop
outs
push
fneni(8087
fild
dec
shl
xchg
les
fsubr
mov
cli
or
sub
sbb
data16
jmp
cdq
dec
and
push
movs
fsubr
push
xchg
jge
dec
jp
call
dec
test
xor
add
fs
mov
and
pop
push
dec
(bad)
push
mov
(bad)
and
sub
dec
inc
or
retf
add
cld
mov
push
test
push
ret
sub
cmp
xor
push
sbb
ds
iret
and
stos
mov
mov
mov
out
cli
lahf
aam
inc
add
mov
ret
stos
pop
repz
jg
fild
mov
lahf
imul
xor
les
mul
iret
xor
add
push
jge
fmul
(bad)
daa
or
sbb
mov
imul
mov
sbb
and
add
out
std
fst
loop
pushf
bound
and
shl
mov
outs
or
fistp
inc
cld
xchg
pop
xlat
and
hlt
call
pop
cmp
ret
sahf
and
outs
lods
test
test
xchg
aad
xlat
loope
xchg
mov
jmp
(bad)
dec
xchg
or
call
cwde
xchg
ret
xor
bound
fwait
push
jnp
xor
pop
cmps
cmp
mov
(bad)
call
push
pop
adc
cmps
push
in
cli
adc
test
mov
push
in
aad
in
push
xor
xchg
mov
mov
in
stos
cmp
not
aad
mov
bound
add
or
mov
(bad)
jle
push
aas
out
push
and
add
loopne
inc
sbb
mov
call
jg
jne
sub
pop
stos
mov
cmp
push
stos
les
adc
cmp
cmp
stc
movs
mov
pop
(bad)
fst
xor
adc
arpl
pop
shl
xchg
jae
retf
add
and
int
imul
aaa
or
mov
sbb
push
js
js
xor
in
cmc
shr
jno
adc
ds
jb
push
nop
pop
pop
addr16
sub
mov
xor
sar
pop
or
push
dec
cmp
mov
xor
xchg
mov
sbb
sub
push
mov
xor
inc
xor
adc
add
mov
dec
ret
xor
xor
aad
adc
push
jge
mov
add
call
mov
and
ins
push
sub
out
cmp
pop
jno
cmp
push
mov
lods
mov
cmp
inc
aad
aaa
cwde
arpl
push
dec
mov
xchg
mov
js
aas
test
loop
mov
xor
inc
and
mov
jbe
jle
pop
pop
ins
lds
add
inc
(bad)
test
fld
and
out
xchg
or
and
adc
jne
push
sub
xchg
pop
retf
mov
mov
inc
ins
movs
sbb
fiadd
mov
repnz
test
mov
pop
(bad)
or
pop
sub
aas
popf
pop
sbb
es
xor
mov
or
jne
je
loopne
fnstenv
or
add
inc
mov
test
ret
sub
jae
jmp
dec
je
arpl
lds
ret
mov
call
icebp
jmp
arpl
scas
xor
mov
test
fxch
push
push
xor
jp
aad
jb
mov
outs
sub
mov
xor
mov
sub
rcl
xor
jle
stc
xchg
call
ja
sahf
adc
lahf
ins
xor
mov
pop
push
das
aas
mov
ins
sub
imul
fdivr
xchg
inc
shl
scas
fist
retf
aad
loopne
into
out
fldcw
add
sbb
cwde
shr
mov
pop
sbb
retf
mov
aaa
xor
(bad)
fdivr
and
pushf
push
jae
push
pop
mov
pop
inc
mov
inc
test
xchg
es
js
call
js
adc
enter
fwait
jecxz
or
inc
test
ds
sub
or
test
inc
mov
sbb
adc
push
adc
xchg
pop
jge
cmp
and
xchg
int
aad
push
push
dec
rcl
call
imul
in
shr
fsubr
jns
mov
mov
mov
cmp
ret
sbb
sub
int3
ins
pop
in
mov
mov
inc
(bad)
(bad)
pop
out
fnstenv
dec
and
(bad)
loope
xlat
mov
(bad)
xor
sbb
stos
out
xor
adc
js
inc
push
xchg
push
pop
mov
jbe
cmp
aad
adc
pop
std
mov
popf
rcl
xchg
loopne
retf
jno
fistp
push
cmp
adc
pushf
mov
inc
inc
push
std
imul
sub
cmp
xor
jbe
pusha
pop
jb
pop
std
mov
jl
add
sub
outs
mov
pusha
inc
popa
add
repz
cmp
mov
sub
daa
adc
mov
inc
sbb
nop
enter
pop
push
jge
enter
hlt
out
das
xor
cmp
xchg
cld
mov
dec
rcl
stos
jp
push
je
lea
cmp
js
or
pop
in
or
pop
and
ror
mov
xor
mov
sub
hlt
pop
cs
adc
stos
adc
cmovb
(bad)
in
mov
out
hlt
jns
ja
mov
sar
jne
adc
out
push
dec
ror
loope
push
mov
xor
outs
js
fld
outs
(bad)
cmp
adc
je
js
sbb
mov
dec
inc
pop
mov
(bad)
int
mov
jmp
adc
(bad)
adc
ins
dec
and
push
in
sbb
jle
adc
aad
std
mov
pop
pop
pushf
jo
outs
or
das
pop
outs
push
mov
push
push
loop
and
pop
fwait
les
ret
push
cmps
push
mov
call
inc
mov
mov
jae
and
xor
stos
into
sbb
ret
popf
pop
adc
pop
retf
std
leave
add
loope
cmp
mov
jae
in
hlt
in
jae
neg
mov
fistp
push
or
cmps
cdq
mov
inc
stc
sub
(bad)
sub
cld
or
scas
mov
fidiv
enter
sbb
pop
add
xchg
test
mov
ror
ror
sub
(bad)
hlt
add
push
xchg
outs
sub
adc
dec
stos
inc
jp
cs
inc
xchg
repnz
fdivr
rol
sbb
test
cmp
sub
ins
mov
movs
pop
dec
inc
ins
xor
pop
mov
aam
stos
push
por
cs
jae
cmp
jnp
aas
mov
sub
jg
call
dec
aam
(bad)
call
sub
cmp
pop
movs
dec
push
xchg
jb
leave
sahf
outs
repnz
sahf
add
push
xor
jge
cdq
hlt
push
imul
mov
adc
lds
aas
push
mov
mov
mov
lods
mov
add
push
jno
aad
mov
cmp
mov
sbb
ja
(bad)
adc
adc
mov
out
ret
mov
ins
jmp
dec
xchg
pop
fwait
xchg
je
xchg
call
fldcw
pop
lods
and
in
mov
push
call
hlt
dec
aam
mov
mov
add
fstp
je
xor
outs
fnstenv
out
gs
or
sub
mov
mov
mov
push
cmp
repz
mov
adc
shl
inc
mov
cmp
mov
push
xor
aaa
repz
jg
shr
or
sahf
neg
stc
iret
and
dec
and
mov
add
or
inc
mov
popf
fsub
or
adc
popf
ds
test
pop
repz
repnz
aas
int
and
jge
add
sbb
pop
(bad)
repnz
nop
stos
add
and
out
xchg
push
sbb
mov
mov
mov
and
jge
es
ja
sbb
in
in
cpuid
fmul
dec
std
mov
bound
fisttp
jbe
dec
(bad)
imul
loop
or
mov
jne
mov
push
lods
xchg
aas
dec
retf
xchg
inc
ficomp
mov
movs
jbe
sar
cmp
mov
stc
jno
ret
(bad)
cdq
idiv
retf
std
mov
outs
mov
sub
pushf
mov
add
mov
lock
sub
mov
mov
mov
(bad)
mov
shr
idiv
scas
xor
push
fwait
cmp
jae
(bad)
push
mov
mov
jo
outs
add
dec
shl
push
add
mov
sti
mov
xor
jecxz
idiv
adc
mov
out
add
aaa
cmp
ins
pop
or
pop
jecxz
popw
test
xor
sub
adc
cmp
loopne
or
popa
mov
(bad)
pop
lahf
and
xor
leave
fist
push
cmc
mov
test
out
test
inc
popf
dec
dec
call
push
jo
xchg
aam
xchg
push
and
popf
ds
xchg
test
ret
push
pop
repnz
cmp
and
jno
mov
mov
mov
lock
popf
and
dec
inc
fmul
test
pop
and
cmp
and
adc
or
inc
jnp
xchg
cmp
push
sub
sbb
cld
std
sub
and
fld
nop
das
mov
dec
inc
fld
call
mov
fwait
inc
jp
daa
sbb
imul
daa
pop
sbb
into
aaa
mov
fld
sub
pusha
adc
jge
(bad)
iret
shr
aaa
adc
jae
xchg
adc
sub
ja
daa
inc
dec
cmp
in
(bad)
rcl
cmp
nop
fld
jne
fstp
shl
push
(bad)
in
mov
jbe
es
push
(bad)
lock
scas
cmp
enter
inc
or
test
sub
adc
popa
dec
dec
cmps
cmp
adc
(bad)
int
ins
jno
lock
mov
adc
pop
(bad)
push
test
fstp
sub
stc
sar
shl
cmp
mov
mov
sub
push
call
or
pop
jmp
mov
add
cmps
pop
mov
sbb
jo
mov
inc
lahf
call
inc
cwde
or
(bad)
sub
xor
mov
or
sub
sub
inc
jmp
out
pushf
movs
ins
mov
ja
mov
or
mov
data16
shl
icebp
sub
cmps
dec
cmp
lahf
push
sti
fwait
dec
push
push
and
scas
mov
mov
dec
ins
adc
or
inc
sbb
jmp
sub
adc
sbb
or
push
enter
lock
ja
cmc
adc
lahf
movs
test
fld
fcmovnbe
rcl
xor
test
call
pop
push
fistp
pushf
add
jo
sub
test
mov
fdivr
adc
mov
js
cmp
out
cmp
mov
mov
and
retf
(bad)
popa
outs
mov
xchg
es
pushf
push
ficom
jmp
aaa
jo
add
mov
sub
cdq
test
dec
mov
and
xlat
jmp
outs
ret
bound
add
cmp
jnp
lods
in
xchg
jmp
mov
ror
jg
xchg
jmp
(bad)
pop
mov
test
jp
ds
pop
pop
in
or
push
push
jecxz
int
movs
movs
jo
cmp
push
lods
push
repz
cmc
int
lods
loopne
pushfw
mov
jle
pop
fs
mov
inc
aam
jmp
in
mov
out
cmp
bswap
pop
push
push
jle
inc
repnz
cld
in
movs
jecxz
retf
xor
int
dec
sahf
sbb
mov
sbb
lea
sti
pop
lods
movs
mov
xchg
xchg
addr16
push
or
mov
das
shl
and
cmps
sbb
enter
lea
xchg
inc
(bad)
sahf
adc
dec
das
dec
xchg
adc
push
ret
imul
jmp
cmps
adc
push
xor
ins
std
jl
push
inc
sub
or
cmps
dec
cmps
push
xor
retf
mov
(bad)
fidiv
pop
retf
(bad)
sbb
jecxz
ficom
cmps
imul
out
es
adc
test
or
xchg
mov
inc
outs
cmp
bnd
xor
lea
daa
push
push
mov
xchg
sbb
mov
rcl
cmps
xchg
shl
inc
repz
nop
or
add
dec
or
bound
fsubr
mov
pop
unpckhps
pop
outs
pop
fmul
loope
xchg
push
pop
test
mov
dec
std
mov
fild
fst
mov
push
das
dec
sub
ficom
retf
add
jne
cmps
cmovg
inc
xchg
das
fldcw
ds
lock
fldenv
js
in
xor
dec
cmp
arpl
cmps
add
mov
sub
cmp
stos
pusha
in
fisubr
pop
sahf
fstp
mov
sub
pop
lods
in
add
push
mov
outs
shl
(bad)
dec
fwait
js
mov
push
and
push
cmc
mov
movs
push
cmp
xor
push
push
addr16
add
mov
call
test
xchg
and
xchg
mov
sbb
sbb
mov
aad
mov
cmp
pop
sub
dec
pop
enter
dec
xchg
and
mov
sbb
inc
ins
in
or
scas
cmp
bound
push
jae
aaa
sub
xlat
push
push
sbb
xchg
inc
jne
sub
les
rcl
daa
and
clc
sub
adc
xor
mov
push
pop
les
lods
fwait
jl
jo
xchg
out
push
sbb
cmp
mov
inc
ret
pop
fs
repnz
or
xchg
lahf
call
cs
(bad)
out
inc
adc
fwait
xor
lods
or
or
dec
sbb
pop
stos
dec
sbb
adc
and
stos
inc
mov
call
mov
and
and
ins
cmp
daa
dec
cmp
xchg
lods
and
mov
or
adc
cmp
jmp
jle
jmp
cmps
aad
sbb
or
inc
stc
mov
pusha
repz
ret
xchg
ror
adc
sub
and
cwde
fmul
inc
or
cmp
outs
xor
and
mov
arpl
sbb
mov
(bad)
outs
pop
leave
pushf
push
jecxz
cmp
mov
movs
adc
push
dec
cmp
inc
or
out
std
add
test
aas
or
pop
xchg
jbe
mov
ja
popf
sub
sbb
jecxz
outs
and
(bad)
fldcw
mov
pop
scas
adc
jns
shl
xor
lods
dec
pop
iret
stc
in
lahf
aam
iret
rcr
ins
jecxz
mov
xlat
sub
out
icebp
cmp
fisttp
xchg
iret
jle
retf
adc
and
xor
cmp
inc
setno
sbb
mov
xchg
sbb
rcr
sub
into
sbb
inc
pop
xchg
les
cdq
ins
mov
xor
icebp
lods
xchg
push
retf
sar
test
fdivp
cdq
into
and
shr
dec
pop
add
dec
into
adc
inc
sub
xchg
mov
sub
jmp
and
sti
cmp
dec
jmp
std
sbb
imul
mov
test
sub
add
dec
sub
push
adc
cli
in
scas
dec
pop
idiv
int
dec
(bad)
cmc
scas
bound
mov
stos
stos
aas
rcl
push
lahf
enter
xchg
and
or
repnz
cmp
cmps
cmp
mov
cmp
retf
inc
xchg
in
pop
dec
mov
jnp
push
push
xor
lea
outs
xor
xchg
bound
push
cmp
add
ss
inc
das
lods
fmul
int3
dec
shl
in
lods
mov
inc
into
xchg
fisttp
shl
add
mov
pop
fdiv
ins
dec
xchg
push
popf
mov
pop
dec
ja
lods
std
into
or
sub
imul
add
jae
bound
inc
imul
pop
lds
mov
(bad)
fisubr
gs
pop
lods
in
cmp
fmul
das
fwait
int
popa
mov
call
ds
adc
cmp
mov
imul
fsubr
and
jl
stos
xor
mov
imul
scas
cld
and
inc
and
aam
imul
mov
push
sub
mov
inc
push
mov
lahf
arpl
push
arpl
mov
inc
sbb
push
and
push
mov
fild
lods
push
(bad)
retf
push
test
rol
pop
mov
jmp
push
fsub
test
cmp
jmp
pop
mov
outs
and
mov
adc
jnp
retf
push
arpl
test
shl
scas
stos
push
jo
xor
(bad)
xor
mov
ret
dec
mov
xchg
xor
gs
xchg
adc
mov
push
or
mov
inc
ret
scas
adc
jg
mov
cmp
cmp
xchg
test
idiv
mov
xchg
add
cmp
shl
and
jge
inc
popa
xor
retf
leave
mov
fdiv
adc
sub
pop
inc
or
inc
retf
or
je
jg
xor
es
out
jb
jo
bound
pop
and
xor
dec
cmc
mov
psubw
cmp
mov
adc
mov
js
cs
enter
inc
dec
cmc
shl
inc
sbb
in
xchg
ins
cmp
stos
pop
xor
aam
retf
sbb
push
mov
cmp
lock
retf
or
in
dec
xchg
mov
cmp
pop
cmps
cmp
mov
arpl
lds
xlat
rol
jo
addr16
dec
fs
pop
int
cmp
xchg
xor
jb
sub
pop
imul
lds
mov
sbb
xchg
mov
sbb
fucomp
int3
outs
les
push
sub
rcl
mov
jno
dec
movs
call
and
push
call
mov
lds
xchg
or
fmul
out
call
push
lock
or
xlat
cmc
loopne
pop
dec
(bad)
dec
dec
adc
ret
nop
mov
iret
push
or
mov
fnsave
inc
in
pop
test
inc
jmp
push
jae
sar
fisubr
mov
adc
ret
dec
jecxz
in
cmp
hlt
hlt
fisttp
jle
stos
cmp
dec
push
mov
lods
test
dec
xor
xlat
jl
adc
inc
xchg
cmc
repnz
jnp
push
inc
mov
push
inc
sbb
idiv
inc
inc
mov
pop
cli
stos
add
xchg
pop
cmp
cdq
dec
sub
scas
mov
rol
push
shr
mov
repz
xchg
out
mov
push
sbb
jle
inc
iret
or
mov
gs
pop
cdq
dec
jo
fst
mov
push
sahf
dec
dec
stos
mov
push
test
(bad)
lock
xchg
call
push
test
shl
xor
adc
or
ins
sub
(bad)
xchg
pop
(bad)
jns
out
sar
test
movs
or
lea
sub
xchg
nop
sub
cmc
nop
retf
push
push
push
mov
dec
adc
push
fidivr
and
scas
cmc
inc
cld
add
mov
dec
pop
xchg
imul
push
mov
sub
inc
pop
retf
inc
mov
mov
pop
ret
inc
out
mul
popf
cmp
(bad)
adc
loopne
push
sub
xor
push
outs
pop
mov
cmp
mov
cmps
fst
and
xchg
xlat
arpl
cmp
jno
shl
jb
and
xchg
fstp
aad
pop
es
sbb
out
gs
sub
ins
and
xlat
xor
(bad)
in
dec
les
inc
and
les
outs
push
mov
pushf
xchg
mov
pop
cli
outs
ret
shr
shl
inc
arpl
int
test
test
mov
sbb
sti
jle
mov
xchg
enter
icebp
pusha
call
cmp
pop
xor
jno
sbb
or
dec
cdq
xchg
fist
adc
fdivr
repnz
xchg
imul
ins
(bad)
mov
mov
sbb
pop
bound
retf
mov
mov
and
xor
jmp
xchg
pusha
dec
cmps
cmps
jmp
adc
add
into
sbb
dec
mov
mov
in
(bad)
cmc
push
cmp
js
mov
repz
loope
xchg
out
in
jmp
dec
sbb
sbb
mov
cmp
enter
(bad)
pop
xor
gs
sub
sbb
cli
xchg
jnp
mov
mov
mov
repnz
shl
pop
fwait
std
int3
xchg
or
cmps
adc
push
out
or
aam
and
ins
loop
jmp
dec
and
adc
fnsave
jae
mov
mov
out
cli
in
xchg
jno
daa
push
mov
loop
adc
add
pushf
ret
jge
push
(bad)
addr16
fiadd
imul
adc
ins
mov
jg
jg
dec
mov
inc
xabort
cmp
std
(bad)
jo
sti
mov
and
mov
retf
test
gs
imul
inc
cmps
jns
inc
stos
xchg
(bad)
sbb
jle
adc
xchg
fdivr
sub
int3
sti
in
ret
test
imul
pop
inc
cs
mov
sbb
lahf
cmc
into
mov
pop
into
mov
sbb
movs
sbb
pmullw
aaa
and
sub
ret
fmul
mov
mov
lds
clc
adc
into
adc
lds
pop
stc
aad
aam
sub
imul
mov
ins
shl
test
inc
mov
sub
fsubr
sbb
sub
pop
shl
test
cwde
or
jne
test
xor
pop
int
push
mov
cdq
xor
dec
pusha
test
fnsave
jbe
nop
test
stc
pop
mov
pop
mov
pop
test
outs
jne
in
mov
adc
pop
fwait
and
jns
rol
ret
stos
mov
lock
(bad)
sti
or
pop
std
fisubr
xlat
(bad)
lea
pop
(bad)
inc
aaa
or
ins
pop
inc
pop
sti
test
addr16
cmps
xchg
fidivr
push
scas
ret
mov
retf
not
pop
dec
jae
mov
cmp
popa
and
mov
push
bound
and
leave
cmp
mov
inc
(bad)
rcr
aad
xor
mov
sbb
xor
cmc
enter
(bad)
push
mov
(bad)
int3
mov
dec
sub
(bad)
clc
or
ret
add
mov
mov
inc
pop
mov
cmp
xchg
jns
int3
mov
loope
xchg
cmps
fnstenv
scas
push
je
repnz
jecxz
lahf
inc
int3
push
mov
mov
inc
dec
inc
mov
adc
xchg
add
in
xchg
xchg
ins
(bad)
lahf
sub
xchg
call
cmc
movs
mov
mov
pop
je
fnstenv
push
xor
int
mov
xchg
loope
or
push
ds
fld
dec
pusha
push
mov
add
pop
mov
outs
mov
or
int
or
xchg
aas
outs
xor
sub
scas
add
mov
mov
inc
ss
xchg
ret
arpl
sub
mov
pop
sub
lahf
sub
xchg
cli
mov
aam
mov
rcr
stos
aaa
sub
fnstsw
lock
std
daa
xchg
inc
sbb
push
xchg
pop
xchg
aad
xlat
dec
add
dec
sub
scas
std
jmp
ds
nop
cdq
push
xor
sbb
shr
rcl
rol
jbe
int
jle
or
dec
mov
mov
fisubr
mov
movs
aas
aam
and
push
into
lea
loope
or
mov
enter
push
fimul
clc
pop
mov
add
and
mov
cmps
les
test
ja
xor
inc
inc
adc
mov
sbb
jbe
call
popa
fwait
fs
xchg
sbb
in
retf
xor
scas
dec
and
adc
mov
lods
outs
push
into
jp
popf
mov
add
fdivr
pop
loopne
push
jmp
(bad)
add
add
fcomp
sbb
jo
lods
or
fiadd
pop
cwde
inc
imul
xor
fisttp
fs
dec
rol
jmp
enter
cs
jo
xlat
push
jge
fucomip
mov
sbb
mov
add
dec
sti
mov
sbb
(bad)
sub
je
pop
dec
arpl
cmp
dec
popa
pop
jmp
and
gs
or
pusha
jl
(bad)
adc
leave
adc
or
sub
shr
mov
push
stc
xor
cmp
cld
shl
jo
out
dec
cli
dec
sar
outs
stos
cmps
or
xchg
movs
addr16
push
fst
pushf
xor
inc
out
xchg
in
push
pop
and
xchg
ins
xor
aad
jge
cmps
add
cmp
sub
mov
jnp
jae
dec
aam
jae
mov
cli
aam
dec
mov
and
sbb
sub
jmp
cmp
arpl
inc
push
and
mov
sub
test
movs
les
fild
mov
repnz
cmp
ror
scas
cdq
sub
or
lock
(bad)
out
sub
cmps
sbb
pop
cmp
imul
mov
jle
inc
sbb
outs
in
inc
scas
data16
xor
cdq
hlt
cli
je
jnp
push
scas
retf
std
not
or
call
jae
jns
in
or
mov
push
push
push
dec
movs
or
fs
pop
nop
pop
mov
inc
cmp
xchg
jnp
cmp
das
xchg
mov
popa
xor
pop
fmul
fnstsw
loope
enter
cmps
push
jne
cmp
xor
imul
dec
cmc
and
ret
push
outs
mov
cmp
bound
dec
ss
(bad)
mov
outs
dec
cmp
adc
(bad)
or
pop
dec
fstp
mul
(bad)
cli
aam
pop
or
jb
faddp
inc
(bad)
jge
xchg
xchg
lock
daa
xchg
fisubr
cmp
in
and
das
test
je
mov
push
test
dec
fild
push
and
aam
dec
mov
iret
movs
gs
lds
pop
lea
mov
and
jmp
icebp
add
push
cdq
jmp
es
lods
sub
pop
push
adc
or
push
mov
repz
rol
fidiv
sbb
pmuludq
lea
clc
xor
lods
xchg
sub
daa
ds
aam
fimul
xor
and
loope
rep
xlat
int
and
test
mov
ins
push
mov
xchg
adc
clc
out
loope
lahf
clc
xor
sub
stos
aam
inc
mov
or
pop
lock
jmp
int
fcom
aaa
cdq
or
or
mov
push
sbb
in
cwde
adc
adc
push
or
dec
inc
inc
pushf
mov
xor
in
fisttp
jge
out
sbb
pop
mov
pusha
jae
ror
xor
scas
test
stc
jo
rcl
add
lds
pop
loop
sub
adc
cs
jmp
lea
cmovp
shl
adc
out
mov
pop
(bad)
mov
fimul
mov
sti
imul
aad
inc
and
out
cmp
out
sub
repz
inc
add
in
cld
in
pop
xor
popa
or
xor
test
push
leave
out
mov
add
add
clc
sub
fcomp
xchg
out
xor
cmp
cdq
cmp
js
das
xor
xchg
sbb
sub
sub
add
sbb
call
add
fld
scas
std
sbb
jg
dec
outs
xchg
test
jle
jmp
sub
push
test
je
fstp
out
test
mov
call
push
dec
xor
or
dec
jmp
lahf
cmps
xlat
ins
std
pop
push
push
mov
push
dec
add
adc
jp
outs
(bad)
addr16
jg
and
in
in
dec
retf
test
sbb
cmp
xchg
add
aad
loop
or
cmp
or
cmp
inc
out
xor
movs
and
out
lds
loope
test
call
mov
xor
jecxz
jge
and
cmp
inc
test
jle
sbb
cmp
sbb
ffree
sub
mov
adc
pop
hlt
lods
call
pop
or
cli
je
mov
imul
mul
das
push
pusha
lahf
test
xor
lods
mov
jb
shr
mov
(bad)
xchg
bswap
xchg
outs
push
xchg
test
scas
dec
and
sahf
jmp
popf
shl
and
pushf
sbb
in
(bad)
mov
push
scas
mov
nop
stos
repz
adc
sti
mov
push
js
leave
jle
inc
push
xor
test
sbb
xchg
mov
outs
test
into
push
fwait
loop
iret
fwait
(bad)
push
push
xchg
call
cmp
xchg
cld
sub
cld
add
mov
ja
ja
jmp
adc
int
push
ror
scas
or
mov
call
stc
scas
pop
or
mov
push
movs
imul
ret
(bad)
sti
push
daa
lds
or
xor
jno
jp
sub
dec
loopne
sub
xchg
loopne
(bad)
shl
or
(bad)
out
es
call
or
push
adc
push
cmps
pop
dec
pop
outs
inc
fstp
push
xchg
mov
enter
jp
pop
mov
cmp
mov
dec
xchg
outs
arpl
es
mov
in
jno
xor
or
pop
ja
data16
sub
cli
aaa
push
push
sahf
and
mov
scas
cwde
and
xchg
sub
dec
xchg
pop
push
test
movs
sub
adc
jg
pop
stos
out
xchg
mov
inc
dec
test
gs
or
daa
into
cmps
or
enter
mov
xchg
dec
mov
pusha
pop
in
sar
push
mov
repnz
mov
add
and
mov
and
rcr
and
xor
sub
fbld
jo
test
stos
mov
adc
or
mov
dec
mov
sub
pop
push
sbb
sub
mov
add
ss
mov
(bad)
mov
bound
clc
repnz
mov
adc
dec
or
les
stc
sub
mov
mov
adc
pop
data16
fiadd
out
frstor
stos
adc
ins
shr
data16
fidivr
stos
inc
jle
sbb
sbb
inc
cmp
ror
aad
jne
push
and
pusha
push
repnz
jae
xchg
push
imul
popa
stos
adc
cmp
ret
mov
in
stos
inc
jnp
cmp
xchg
lds
dec
or
bound
aad
fld
mov
sbb
sbb
cmp
xor
lds
push
ins
sbb
ja
push
push
add
mov
adc
jne
mov
xor
jns
xchg
pop
pusha
add
adc
scas
xchg
lods
sbb
imul
pop
icebp
and
inc
mov
jge
xlat
lock
add
pop
or
push
out
cmp
dec
dec
ds
mov
xor
shl
rcr
int3
enter
clc
loopne
out
mov
or
or
fisub
imul
dec
ins
mov
dec
retf
mov
aas
test
jecxz
jp
push
inc
add
jnp
out
jo
fwait
push
add
jmp
cmp
mov
adc
jno
dec
pop
outs
sub
fs
push
in
test
push
leave
ret
lea
aam
and
push
xchg
dec
fldlg2
mov
fcomp
dec
cmp
dec
cmps
neg
jnp
add
int
sub
add
push
fadd
dec
jl
sbb
xor
adc
stos
sbb
jnp
lahf
stos
retf
adc
in
xor
cmp
pop
addr16
dec
push
stc
leave
stos
aad
gs
aam
loopne
xchg
jbe
or
push
jmp
cwde
cmc
std
stos
inc
mov
lds
inc
adc
pop
push
sub
in
or
mov
or
jbe
jo
add
mov
fnstcw
out
inc
push
dec
ja
mov
and
push
mov
out
mov
or
psrad
sub
push
outs
outs
ret
outs
xchg
in
inc
outs
adc
mov
dec
ror
das
add
repnz
ret
aaa
cwde
jl
cmp
(bad)
std
xlat
sub
push
and
sbb
xor
push
cld
fiadd
push
in
in
out
adc
in
clc
int3
sub
jnp
scas
adc
outs
test
stc
test
xchg
sbb
popf
scas
xor
(bad)
int
jnp
push
or
cmps
outs
ret
lahf
repz
dec
mov
popa
mov
mov
out
sub
pusha
mov
mov
arpl
leave
(bad)
jns
mov
int
xor
mov
inc
loopne
(bad)
ficom
cdq
mov
je
dec
fdivr
inc
test
lods
jnp
mov
inc
ror
xchg
outs
add
cwde
rcr
jo
std
dec
std
adc
test
outs
dec
and
mov
scas
mov
add
mov
jae
fdiv
or
in
mov
icebp
push
in
call
popa
mov
test
out
es
repnz
sub
mov
retf
movs
push
jo
mov
mov
cdq
loope
retf
lods
ret
push
jne
cwde
xchg
push
jnp
jo
cmp
or
in
cmp
mov
mov
repz
sub
fcomp
mov
movs
fild
mov
std
cmc
xchg
loop
(bad)
daa
(bad)
and
mov
or
xchg
stos
fidiv
or
ficom
out
cmp
xor
loop
xchg
jnp
pop
clc
imul
or
sbb
bound
and
repnz
jno
pop
jp
sub
call
lds
mov
xchg
popf
xor
push
retf
fld
lds
lea
jo
not
cmp
inc
mov
daa
sahf
xchg
pop
scas
sub
pop
and
jp
fld
out
and
add
test
aas
sar
ret
jne
mov
lahf
sbb
dec
cmps
add
fcmovne
and
das
xchg
pop
mov
or
sbb
fwait
push
mov
movs
inc
xor
push
(bad)
and
cdq
lahf
sahf
dec
pop
clc
aas
mov
loope
cmp
scas
mov
push
dec
fcmovne
pop
aaa
xor
pop
sub
lods
mov
or
push
sub
adc
outs
jl
lods
jecxz
xchg
cmp
dec
(bad)
leave
pop
ror
sub
mov
adc
adc
inc
ja
xchg
add
xchg
popa
pushf
mov
dec
scas
mov
into
mov
and
int3
or
push
popf
repz
pop
cs
mov
scas
jp
ds
xor
dec
inc
popf
popf
imul
rcl
rcl
jle
bound
dec
inc
sbb
sbb
push
dec
cli
or
pop
sbb
dec
xor
dec
vmovntpd
adc
pop
and
nop
rol
or
inc
aas
fmul
pusha
adc
ins
add
jmp
push
ins
push
xchg
idiv
xchg
test
stos
mov
jb
cmp
sbb
movs
sub
cmp
dec
jo
ror
(bad)
cld
in
dec
push
rcr
bswap
gs
or
rcl
jmp
movs
jbe
retf
lock
inc
pop
jp
mov
stos
mov
inc
icebp
xchg
and
fnstcw
push
call
or
add
jecxz
imul
cmp
mov
das
jb
pop
in
(bad)
(bad)
cwde
adc
les
movs
push
mov
aad
cli
jns
push
sbb
outs
mov
cmp
sti
(bad)
stos
mov
shr
cmp
push
lahf
pop
or
cs
movs
cld
jo
repz
adc
ret
mul
jb
addr16
les
cmp
repz
adc
ss
xchg
into
push
cmc
pop
js
shl
adc
retf
ja
imul
add
in
adc
push
add
push
or
push
fs
lock
popf
ficomp
jmp
not
hlt
repnz
cmp
loopne
adc
fimul
test
cmp
aaa
es
mov
ja
inc
xchg
jp
scas
mov
jne
sbb
hlt
dec
movs
arpl
mov
dec
leave
loopne
sbb
push
repnz
jmp
pop
(bad)
push
adc
xor
ret
fldenv
add
inc
in
inc
jp
popa
pop
or
dec
pusha
xchg
sti
or
pop
push
inc
pop
inc
adc
outs
bound
je
adc
test
rol
xchg
push
icebp
mul
test
test
jmp
adc
inc
xchg
fld
inc
in
jbe
dec
int3
test
inc
rol
test
lods
push
xchg
mov
stc
retf
sbb
outs
cmp
or
int
push
test
fstp
push
xchg
pop
aam
pop
jo
ret
outs
aam
cmps
pop
cmps
sbb
test
dec
mov
retf
adc
daa
cli
call
fld
stc
mov
xor
cmp
ret
loopne
xchg
and
shr
mov
in
xchg
sbb
mov
sbb
xchg
loope
pop
cmp
lahf
arpl
push
in
into
jae
ds
stc
loope
xlat
cld
push
push
ror
xor
add
jae
jl
repnz
add
addr16
bound
mov
call
dec
cmp
add
push
sub
mov
in
inc
dec
push
push
push
xor
(bad)
pop
pop
mov
call
push
cmps
push
ins
xor
jb
adc
jecxz
call
adc
inc
cld
daa
out
fwait
int3
fwait
push
cmp
add
nop
out
test
int3
dec
mov
inc
rcl
add
or
push
outs
mov
sbb
cmps
out
mov
idiv
ret
(bad)
imul
add
ds
adc
add
ins
sbb
ss
rol
(bad)
inc
popf
dec
loop
ds
push
push
xor
and
(bad)
scas
je
rol
adc
mov
test
addr16
dec
dec
mov
cs
mov
shl
push
cs
adc
repnz
xchg
(bad)
gs
pop
cmp
mov
mov
hlt
fucomp
movs
aas
and
inc
jae
mov
add
adc
cmp
test
xchg
and
gs
loop
pop
xchg
sbb
call
xchg
and
mov
and
lahf
lods
test
jbe
mov
cmp
sbb
xor
(bad)
(bad)
pop
adc
or
call
jle
repnz
ds
inc
out
and
pop
mov
mov
int3
mov
xchg
xor
das
lods
sbb
rcr
cmp
test
pop
shl
cmp
mov
mov
addr16
cld
inc
push
aaa
cs
fidiv
rcl
test
adc
jecxz
push
push
pop
loope
rol
sti
lahf
sub
daa
cmp
popa
call
popf
sahf
lea
cwde
leave
mov
mov
jge
fimul
pop
and
push
enter
enter
jae
cmps
retf
hlt
jp
cld
lods
loope
pop
inc
ret
push
ss
push
add
add
ret
gs
mov
leave
sbb
xor
mov
cld
(bad)
popf
ss
(bad)
add
adc
mov
and
xchg
xchg
test
xchg
shl
jecxz
mov
aad
in
and
mov
cmp
sbb
out
ret
jns
div
cdq
add
ds
inc
std
sub
push
in
fimul
popa
cmp
dec
sbb
pop
push
pop
sub
int
mov
stos
inc
idiv
leave
adc
pop
(bad)
popf
sbb
mov
and
out
pusha
mov
in
or
in
mov
ror
mov
mov
popf
inc
jbe
inc
outs
aad
out
pop
mov
cmp
les
aas
sbb
ins
mov
scas
fcomp
clc
cs
xor
cdq
rcl
or
inc
dec
pmulhuw
rcl
push
fnstenv
call
mov
and
mov
(bad)
add
xchg
stos
or
or
mov
adc
mov
cld
add
push
push
pop
inc
xchg
adc
adc
ds
xchg
fidiv
cs
mov
out
mov
inc
and
mov
std
mov
retw
in
loopne
daa
adc
aam
das
inc
fld
sub
shl
lds
cmp
call
xchg
mov
mov
sbb
fs
fild
repz
out
(bad)
jge
adc
leave
stos
mov
add
test
add
imul
mov
dec
xchg
push
jo
or
push
cmp
add
dec
push
or
xor
xor
ss
and
dec
adc
fnstsw
(bad)
sbb
or
stos
cmp
xor
repnz
or
or
ret
shl
sbb
fbstp
mov
dec
inc
fcomip
loopne
imul
add
sahf
out
out
scas
mov
lods
mov
push
pop
push
ja
jmp
adc
lea
aam
pop
out
lahf
iret
div
or
loopne
and
xchg
xchg
pop
ds
es
(bad)
inc
pop
out
mov
aam
fild
test
aad
imul
push
gs
aam
push
(bad)
repnz
mov
mov
sub
adc
pop
shr
adc
es
call
sti
int3
push
outs
sub
mov
int
not
fisubr
test
add
xor
enter
and
popf
cli
addr16
rol
cdq
mov
sbb
lahf
xor
js
sbb
scas
cmp
ret
mov
jmp
pop
jne
(bad)
or
add
sbb
xchg
popf
shl
fisubr
test
addr16
xchg
push
adc
inc
add
out
sbb
xor
and
inc
dec
and
cmp
(bad)
pusha
cmc
int
aaa
cmp
cmp
div
dec
and
cmp
movs
push
les
adc
adc
push
das
push
sbb
jbe
bound
iret
push
fwait
add
fnstcw
sbb
movs
jne
push
mov
dec
dec
dec
leave
ror
inc
aas
push
push
data16
add
arpl
push
jnp
ins
cld
seto
sbb
and
xor
imul
dec
stc
ja
scas
shl
dec
mov
popa
sti
mov
mov
jp
xchg
lods
cmp
add
enter
adc
mov
xor
mov
push
mov
mov
mov
repnz
dec
sub
scas
hlt
dec
sub
add
stos
mov
outs
add
and
minps
push
mov
test
xor
cld
aad
lock
adc
fisub
loop
xor
or
fadd
mov
cmp
rcr
(bad)
je
out
std
mov
icebp
cld
dec
mov
clc
xchg
xlat
add
js
scas
ins
fisubr
adc
ret
add
repnz
loop
and
xor
or
call
mov
jmp
and
adc
out
sbb
push
lods
push
out
push
or
add
stos
mov
fwait
inc
je
arpl
dec
int
mov
push
pop
(bad)
in
imul
mov
cld
xor
ret
clc
add
inc
outs
sub
(bad)
mov
enter
cmps
adc
fst
or
jmp
jg
fisub
mov
test
cwde
mov
movs
and
push
shr
test
stc
inc
pop
clc
movs
sbb
mov
jle
push
ins
out
int3
aaa
popa
mov
push
iret
jecxz
std
adc
jmp
xchg
aaa
dec
push
pop
inc
je
test
pushf
retf
hlt
imul
pop
xor
(bad)
daa
ret
ins
lods
imul
arpl
ins
push
(bad)
or
repnz
mov
xchg
hlt
mov
cwde
pop
sbb
add
pop
fwait
iret
sbb
mov
sub
adc
add
js
(bad)
and
mov
or
sub
imul
ret
pushf
xor
jmp
mov
aaa
vpand
fcom
jae
mov
fistp
imul
loope
addr16
mov
cmp
mov
outs
out
mov
xchg
cld
scas
in
out
into
ins
lods
arpl
scas
loop
jp
(bad)
and
pop
inc
mov
push
xor
js
leave
test
sub
pop
xor
xchg
inc
cmp
lock
inc
push
out
je
popa
leave
loop
or
outs
jbe
int
jmp
mov
sahf
xchg
pusha
xchg
mov
pop
pop
cdq
sbb
dec
push
stos
sub
(bad)
lahf
(bad)
jmp
pop
movntq
out
sbb
mul
stos
movs
mov
jmp
mov
mov
jae
xchg
mov
(bad)
repz
or
test
scas
sbb
mov
jo
xor
lahf
aam
jno
push
xchg
mov
push
adc
aad
outs
repz
xchg
cmp
out
adc
retf
or
mov
or
inc
lds
xor
mov
imul
test
push
push
stos
or
sti
mov
in
imul
dec
jmp
xchg
dec
cmp
sbb
pop
or
ja
push
mov
mov
stos
imul
adc
push
pop
retf
mov
lods
jle
movs
mov
inc
packsswb
(bad)
jmp
retf
dec
jle
pop
(bad)
and
mov
sahf
jle
push
scas
lods
lahf
mov
fimul
pop
jae
cmp
push
ret
cmp
mov
add
adc
dec
aad
lods
pop
xchg
jb
js
icebp
jl
adc
sahf
stos
add
test
and
inc
out
das
cmps
pop
aaa
cmps
lea
adc
pop
retf
(bad)
push
mov
test
push
push
test
or
fimul
dec
and
dec
or
mov
popa
mov
pusha
and
das
xchg
adc
sub
or
jae
not
push
or
jns
xor
dec
or
jmp
mov
fldcw
scas
xor
jnp
pop
dec
add
cmps
inc
ins
push
and
push
ds
push
sbb
mov
arpl
adc
xchg
xor
push
cmp
dec
mov
jg
shrd
cli
cmps
add
jmp
push
jl
dec
add
sbb
mov
jge
inc
popf
push
push
fwait
and
and
pop
fwait
add
rcr
mov
cld
mov
mov
arpl
out
mov
jmp
daa
sub
dec
test
jae
ds
and
inc
dec
sahf
cmps
sbb
adc
dec
mov
xor
ds
xlat
add
movs
fsub
pop
shl
and
push
retf
retf
pop
and
push
pop
outs
daa
(bad)
pop
sbb
popf
repz
jae
add
xchg
jg
shl
ficomp
adc
pop
ret
loop
sub
adc
fidivr
pop
xchg
pop
(bad)
cdq
xchg
mov
ret
xor
cli
sbb
dec
cmp
mov
add
inc
mov
aas
pop
jle
jmp
sbb
ds
mov
in
les
adc
mov
(bad)
retw
mov
aaa
pop
lods
fcmove
add
retf
mov
mov
inc
jge
pop
jmp
or
test
js
lods
scas
(bad)
xor
adc
pop
or
in
xlat
inc
imul
xchg
mov
ficomp
ds
aas
mov
stos
xchg
push
loop
jnp
call
add
nop
js
mov
mov
enter
bound
or
sti
mov
xchg
xor
or
(bad)
ror
dec
and
dec
sub
imul
pop
fwait
mov
mov
xor
push
inc
pop
ret
mov
or
pop
jb
pop
sub
sar
cmps
dec
icebp
(bad)
mov
bound
int3
bound
cmp
int3
pop
mov
xchg
repz
xor
sub
pop
(bad)
ret
cmps
adc
(bad)
pop
xor
mov
pop
push
movs
enter
mul
sbb
mov
xchg
cmp
xor
aad
xchg
mov
mov
mov
sub
fcomp
dec
arpl
jmp
mov
pop
adc
cmp
in
and
jo
pop
sub
add
into
enter
addr16
out
jb
add
mov
cli
test
inc
cmp
or
inc
in
in
pusha
cmp
ror
xchg
leave
pop
popa
test
adc
pop
aam
mov
arpl
add
and
(bad)
in
call
sbb
sub
xchg
dec
dec
xchg
scas
cmps
mov
shr
arpl
pop
pop
jmp
pushf
pop
lock
sbb
xor
addr16
fldcw
fcom
or
mov
aam
jne
jb
cdq
popf
xor
je
or
push
sub
jmp
movs
jno
xor
add
or
xor
cmc
sub
inc
inc
jne
repnz
pop
jmp
sbb
xchg
fadd
into
or
pop
gs
sub
(bad)
shl
sbb
out
sahf
or
cmp
pop
(bad)
sar
sub
(bad)
or
pop
xor
cwde
mov
call
jg
cld
je
adc
xor
xchg
xchg
add
and
ficom
popa
mov
dec
fnstenv
leave
push
push
and
movs
add
jg
int
push
inc
jmp
nop
ror
push
outs
xor
addr16
inc
fwait
and
mov
aaa
inc
ret
dec
ja
jle
adc
dec
mov
mov
fbstp
loopne
mov
cmp
rcl
cmp
add
sub
inc
lds
or
in
ror
mov
pusha
sub
sub
add
xor
enter
add
enter
inc
cld
int3
sub
jmp
inc
xchg
enter
out
push
js
in
stos
arpl
(bad)
ins
or
jne
xor
shl
out
das
aaa
scas
sahf
(bad)
int
rol
jmp
cmp
push
outs
int3
push
jmp
mov
adc
add
arpl
add
push
dec
push
mov
ds
and
loop
es
fstp
femms
test
outs
pop
inc
sub
pop
sbb
jno
pop
aad
loopne
adc
and
or
mov
iret
sub
bound
fadd
sub
sub
pushf
ss
pop
fld
aaa
jns
ins
add
in
mov
out
pop
sbb
push
jp
mov
and
mov
sbb
loop
scas
lea
je
sti
iret
fsub
jnp
sub
cmovp
cmp
in
sahf
sahf
fs
pop
addr16
les
dec
aam
push
gs
repz
jmp
pop
xor
(bad)
into
inc
cli
mov
push
jl
iret
sbb
sub
jl
imul
inc
add
call
xor
adc
cdq
push
out
stc
daa
mov
push
mov
xor
cdq
mov
jmp
mov
retf
loop
cdq
retf
ret
inc
aaa
cmp
mov
sub
push
mov
xchg
jp
fisttp
push
pop
pop
sar
mov
ret
fild
cmp
xchg
das
and
loopne
movs
push
movs
jmp
mov
jmp
inc
(bad)
out
sub
adc
fwait
ror
dec
cs
cld
adc
xor
mov
xchg
push
fcom
jmp
into
sbb
shl
aas
arpl
mov
fidivr
sub
cmp
clc
cmp
int3
mov
jb
or
push
in
adc
ucomiss
pop
rcr
in
cld
loop
jmp
fadd
xchg
jb
movs
ins
sbb
push
cmp
mov
cmc
push
pop
or
test
fxch
or
pusha
les
jmp
les
mov
test
or
cmp
dec
mov
xchg
call
cli
xchg
mov
dec
adc
cdq
mov
stos
xor
pop
(bad)
push
xchg
xor
inc
lods
push
mov
cmp
pand
aas
push
push
scas
mov
fdiv
dec
adc
mov
inc
mov
dec
sbb
sti
pop
and
ins
test
adc
inc
dec
in
mov
ficomp
push
jbe
add
push
cmp
adc
and
popf
cwde
(bad)
test
sbb
ret
mov
add
sahf
dec
push
in
inc
xor
mov
jmp
loopne
mov
movs
hlt
repnz
dec
sbb
rcl
sub
aam
gs
fwait
or
test
sahf
and
push
(bad)
mov
jge
fwait
inc
mov
sub
pop
pop
nop
dec
movs
inc
cmps
pop
call
cmp
pop
fwait
mov
clc
pop
sub
add
fld
and
push
(bad)
jbe
(bad)
aam
add
in
sub
cli
cmp
int3
xchg
fwait
out
arpl
push
pop
test
pop
cmp
jp
sbb
sub
jns
js
in
lods
push
or
shr
adc
ret
les
adc
call
adc
jecxz
aam
xchg
ja
leave
mov
aas
test
xor
pop
pop
aad
inc
in
clc
movs
and
adc
fisub
jne
sahf
cli
outs
mov
ret
xchg
xlat
cwde
stos
mov
and
add
xchg
push
mov
icebp
and
adc
(bad)
int
dec
ins
rcr
ror
cmps
ficom
or
mov
retf
pusha
mov
or
lods
cmps
inc
adc
lds
jge
push
cmp
popf
icebp
mov
sub
ds
dec
std
pop
dec
es
mov
push
mov
fisubr
inc
and
(bad)
(bad)
sbb
out
out
mov
scas
xor
fimul
sub
cmp
ret
xchg
fwait
cmp
xlat
idiv
outs
jmp
cmp
ins
in
inc
jns
lock
add
ss
and
shl
inc
mov
sbb
mov
outs
cmps
jl
gs
aaa
in
sub
sbb
mov
xchg
mov
push
push
mov
arpl
mov
fs
(bad)
sub
repz
or
imul
mov
mov
mov
or
test
sub
retf
dec
adc
mov
daa
retf
lahf
cmp
repz
jp
es
adc
cmp
push
push
push
hlt
lds
inc
fiadd
push
jo
dec
jp
sub
cld
or
fwait
or
jo
and
out
xor
inc
pop
mov
data16
mov
add
inc
jb
(bad)
push
js
pop
or
mov
sub
pop
shr
inc
retf
xchg
xlat
jns
or
in
std
mov
enter
and
jp
cmp
stc
push
ror
pushf
jbe
push
sahf
mov
jmp
mov
int3
cmp
dec
leave
cld
stc
or
mov
sbb
fstp
jno
xchg
add
dec
xor
push
enter
inc
retf
dec
fwait
test
and
into
and
mov
fs
je
test
sbb
stos
leave
ss
inc
ins
lods
arpl
and
mov
add
cmps
stos
sub
dec
mov
shr
lods
add
xchg
fistp
cmp
and
or
mov
jmp
sub
add
or
test
mov
dec
mov
adc
jb
int
mov
mov
lods
dec
ins
popf
dec
test
dec
dec
aas
sbb
inc
pop
adc
ja
outs
add
pop
test
cld
aas
sbb
retf
xchg
out
sub
imul
std
xchg
add
xlat
cmps
cli
icebp
push
lods
dec
mov
pop
mov
mov
sbb
mov
sbb
jns
aad
sar
xor
push
mov
fmul
sahf
pop
(bad)
jle
xchg
lods
fs
mov
inc
xor
mov
jnp
stos
mov
ficomp
pop
cmp
mov
cmp
and
(bad)
inc
arpl
pop
out
push
call
adc
dec
jnp
cwde
sbb
mov
adc
std
aad
pop
pop
and
and
jecxz
sub
and
mov
push
sbb
lock
xor
mov
inc
dec
cmp
pop
sbb
rcl
push
jno
add
cmp
push
jmp
mov
push
jae
or
inc
pop
mov
jb
test
popf
and
(bad)
mov
stos
mov
fild
jae
xor
xchg
and
pop
int3
loope
addr16
adc
fs
rol
mov
pop
out
mov
pop
ret
or
dec
outs
out
and
xchg
rol
push
add
in
xor
mov
push
jbe
jmp
sbb
mov
pop
cmp
out
call
into
scas
into
adc
jo
out
and
test
xchg
mov
stos
loop
fadd
rcr
adc
mov
sbb
mov
xor
stos
mov
movs
pop
icebp
repnz
xchg
sub
stc
pop
dec
push
clc
add
inc
mov
pop
pusha
aaa
xchg
scas
mov
movs
fdiv
mov
clc
add
call
cmp
xchg
pop
sti
add
call
mov
sti
push
ins
and
push
call
daa
sub
or
xor
test
lock
mov
movs
pop
jne
adc
add
dec
jle
cmp
cmp
enter
fucomi
scas
inc
mov
jo
mov
jge
(bad)
jno
mov
add
lea
addr16
cvtps2pi
call
imul
sbb
js
jl
iret
lods
clc
retf
push
dec
test
pusha
aaa
adc
jne
mov
sub
pop
popa
rol
fwait
push
ja
popa
mov
mov
(bad)
popa
stos
pop
mov
mov
mov
jp
jge
cmp
jp
rol
jmp
and
push
inc
dec
ficomp
push
mov
sub
adc
jle
(bad)
push
imul
ror
dec
(bad)
jl
in
sahf
setp
sbb
call
xchg
repnz
aas
sub
inc
xor
xor
ds
cmps
jg
fist
or
pop
inc
ret
in
jle
sub
mov
or
pop
mov
xchg
mov
mov
mov
push
inc
or
and
fild
imul
dec
pop
mov
push
mov
jp
sbb
aaa
pop
sub
jecxz
pop
pop
sbb
cmps
shl
je
pmulhw
repnz
dec
adc
scas
mov
jbe
daa
nop
push
pop
jge
xchg
pop
ins
movs
out
(bad)
dec
sti
sar
push
int3
(bad)
repnz
scas
es
scas
mov
lods
mov
ja
aad
shl
or
sub
jge
ss
add
push
mov
dec
push
inc
loopne
dec
or
adc
jmp
xchg
inc
gs
jae
pop
cwde
cmp
jbe
daa
(bad)
hlt
dec
aaa
std
sbb
ret
xor
mov
retf
push
lahf
jmp
jo
jbe
add
xchg
in
xchg
sub
loop
(bad)
or
lds
sub
mov
fst
test
add
movs
jge
adc
or
inc
sbb
cmps
jg
cmp
jle
mov
fdiv
loop
mov
shl
push
cwde
sbb
cdq
cdq
(bad)
pop
cmp
cmp
push
or
lahf
fist
inc
sbb
bound
mov
jl
movs
mov
fsubrp
fwait
pushf
int3
mov
test
loopne
fs
int
jecxz
cmp
movs
in
bound
or
xchg
nop
xchg
mov
mov
and
mov
retfw
cs
inc
ret
outs
add
sbb
cmp
shl
xchg
or
cmp
and
shr
pop
pusha
ror
dec
mov
xor
or
retf
fbstp
mov
inc
jo
inc
ds
cmp
in
ins
loopne
nop
mov
mov
jns
call
loopne
push
cmp
push
das
and
mov
jl
in
cmps
outs
sbb
mov
inc
or
xor
pop
xchg
mul
arpl
cmps
test
pop
mov
pop
retf
push
lahf
and
je
sbb
push
adc
and
mov
ja
ror
icebp
cld
nop
in
mov
xor
sbb
sar
pop
adc
sub
ss
std
xchg
repnz
fsubr
push
push
jmp
push
std
daa
jmp
mov
ffreep
mov
xchg
or
sub
scas
imul
icebp
cmp
in
xchg
inc
cmp
xchg
xchg
sbb
pushf
mov
mov
jne
lock
push
jl
inc
adc
test
ins
mov
inc
ficom
and
adc
stos
push
test
leave
les
or
in
in
dec
std
stos
jo
das
cmp
mov
sub
and
pop
aas
les
lock
cwde
hlt
cmps
cmps
xor
sti
fistp
mov
ret
ins
or
retf
mov
sub
pop
mov
cmp
aaa
movups
cmc
shr
test
fdivrp
(bad)
call
sub
xor
rol
pop
and
sub
xlat
fdiv
jmp
in
repz
pop
fisub
sar
dec
es
bound
xor
sbb
add
aaa
lods
adc
test
jmp
aas
stos
popa
popf
stos
push
(bad)
mov
fild
jl
add
mul
dec
cld
push
dec
sbb
ja
lds
inc
in
pushf
leave
fidivr
jl
hlt
adc
pop
(bad)
sbb
sbb
and
and
loopne
lea
test
scas
dec
add
mov
enter
iret
jo
aas
push
ins
pop
fs
add
pop
cld
dec
sub
dec
dec
and
dec
add
pop
rcl
push
pop
jbe
mov
xor
cmp
(bad)
out
pop
push
push
mov
movs
test
fnsave
popf
sbb
test
inc
cmps
or
scas
push
mov
mov
lods
icebp
xadd
out
adc
add
(bad)
or
fwait
jns
sub
lods
xor
jnp
sbb
xor
add
dec
cmp
jmp
xor
mov
jmp
jbe
and
(bad)
cmp
push
push
daa
sbb
lea
hlt
dec
jp
add
repnz
sub
les
inc
mov
dec
ss
leave
cld
mov
or
aas
into
xchg
jb
adc
into
sti
push
and
icebp
neg
aas
xor
int3
nop
test
sub
pop
dec
inc
mov
hlt
mov
mov
aam
xlat
fcmovu
imul
iret
xlat
loop
sti
adc
and
in
hlt
xor
sahf
sub
mov
jge
inc
stc
ds
(bad)
and
mov
out
neg
xchg
xor
mov
and
mov
dec
sbb
sub
repz
mov
push
mov
jo
(bad)
and
xor
xlat
(bad)
int
pop
cld
mov
sub
and
rol
call
xchg
adc
dec
mov
out
fnstcw
fisttp
ror
jo
clc
sbb
dec
mov
adc
(bad)
mov
jno
movs
push
cmp
in
and
adc
or
and
mov
and
stc
das
xlat
sbb
jae
xchg
ins
cmp
sbb
mov
les
pop
sub
(bad)
jns
test
or
adc
rcr
stos
fcmovbe
xchg
arpl
adc
jmp
and
cmp
dec
mov
das
enter
cmp
mov
mov
es
sbb
inc
xchg
dec
mov
std
jmp
xchg
jns
shl
js
sub
(bad)
popf
loop
jl
aam
or
push
nop
inc
in
and
pop
mov
and
jecxz
data16
push
int
xchg
inc
mov
shl
frstor
inc
xchg
outs
setne
jmp
or
aas
call
pop
loop
adc
das
jp
mov
push
mov
mov
mov
fs
leave
inc
ins
popa
push
jnp
into
lea
stos
loop
sbb
xchg
iret
loop
icebp
out
sbb
outs
popf
pop
xor
lods
seto
hlt
mov
cmp
loope
and
dec
cwde
jg
pop
icebp
mov
dec
sub
sub
cmp
aam
and
data16
ror
mov
adc
sub
fstp
cmp
inc
lea
push
out
sub
nop
loop
movs
push
jno
stc
cwde
shr
adc
push
cmp
cmc
push
mov
xchg
push
out
xchg
xor
jl
into
jecxz
xchg
leave
rcr
or
push
mul
pusha
int3
add
jbe
and
push
and
fild
push
and
inc
loopne
pushf
loopne
pop
ins
sub
sub
and
pushf
daa
push
push
cwde
sub
or
or
inc
in
or
dec
sbb
push
(bad)
fldcw
pop
movs
mov
mov
aad
enter
inc
mov
ret
xor
push
sbb
mov
sub
fst
test
test
or
add
je
ret
or
sub
rcr
shr
jmp
cmp
stos
mov
add
cwde
mov
mov
sar
add
inc
adc
sbb
push
sbb
test
leave
sub
in
imul
popa
sar
inc
jae
jle
hlt
mov
(bad)
lahf
arpl
aas
test
aaa
inc
push
or
out
ins
xchg
icebp
push
pop
sub
xchg
movs
pop
or
scas
(bad)
add
xor
inc
inc
ret
aad
xchg
ret
leave
mov
and
repnz
push
mov
mov
je
pop
in
je
ror
push
inc
fiadd
xor
cmpxchg
push
xchg
xchg
mov
loop
cmp
cdq
xchg
mov
cs
xchg
or
lods
xchg
inc
mov
stos
cmp
sbb
mov
outs
(bad)
pop
imul
enter
cmp
sub
pusha
shr
push
or
and
adc
pop
cmps
push
adc
or
jne
dec
dec
push
mov
xchg
fstp
iret
imul
cmc
cwde
mov
mov
inc
mov
shr
les
out
mov
add
mov
stc
jo
mov
dec
xchg
daa
xchg
dec
pop
xchg
inc
inc
ja
add
xor
inc
jo
rcl
xor
mov
jl
pop
xchg
xor
retf
dec
cmp
popf
cmp
mov
aas
xor
dec
test
scas
aad
xchg
rcl
sub
cmps
adc
dec
push
sbb
bnd
sbb
mov
mov
push
xchg
push
lods
(bad)
ret
not
mov
xor
adc
mov
outs
retf
jno
outs
jge
repz
retf
outs
inc
ret
in
ret
shl
push
std
adc
dec
push
mov
xor
adc
cmps
or
jle
and
lea
call
pop
or
jno
ja
adc
inc
outs
pushf
add
xlat
unpcklps
js
call
dec
rcr
sub
std
pop
enter
jno
std
fcmovb
pop
mov
dec
ins
mov
mov
movs
cli
daa
call
push
pop
leave
or
cld
lea
cmps
jnp
scas
hlt
xchg
or
ja
in
shr
fldenv
(bad)
add
sbb
sbb
pop
xchg
mov
retf
mov
jnp
aas
(bad)
retf
push
and
cmp
cmps
mov
sbb
inc
shr
gs
icebp
and
std
xchg
dec
and
dec
test
inc
mov
(bad)
mov
mov
sbb
addr16
and
xlat
(bad)
icebp
rol
xchg
in
add
cmp
cli
jnp
cmp
shl
jno
jno
and
stos
daa
sub
lock
sbb
test
mov
movs
mov
in
push
mov
mov
adc
lea
aad
xchg
pop
dec
icebp
inc
mov
and
mov
hlt
fmul
dec
cwde
pop
jb
inc
rcr
es
arpl
jmp
ja
fsubr
mov
push
in
xchg
ja
test
and
or
out
and
xor
sbb
hlt
inc
sbb
mov
fs
fcomp
fst
les
fs
hlt
aad
lea
ficomp
clc
fsubr
je
test
inc
jp
data16
xchg
in
fcmovbe
call
dec
push
and
push
call
pop
adc
fisttp
jmp
adc
jo
jae
mov
ret
dec
cli
scas
popa
mov
mov
cmp
outs
push
pusha
fs
test
or
outs
scas
push
inc
mov
rol
iret
repnz
and
dec
cmc
fsub
not
dec
ss
sub
mov
test
les
mov
and
add
mov
inc
sbb
adc
dec
iret
sub
aad
push
add
retf
push
adc
es
cld
inc
mov
jne
fwait
jl
lods
and
mov
and
pop
or
mov
lods
xchg
xor
lea
inc
out
xchg
dec
js
stc
test
dec
mov
xchg
les
pop
push
in
push
arpl
mov
(bad)
ja
xchg
jmp
shl
std
cmp
mul
sti
sti
or
push
(bad)
mov
lods
hlt
mov
pop
xor
je
add
dec
jl
mov
std
retf
ror
std
inc
sbb
imul
or
mov
int3
pushf
jno
leavew
sub
ins
jo
imul
add
xlat
loop
std
bnd
pushf
inc
or
cmp
push
mov
dec
push
leave
jmp
jae
push
and
pop
pop
ja
xchg
movs
mov
es
mov
les
push
loop
or
jg
sahf
fist
sub
add
out
sbb
and
outs
and
rcr
movs
outs
mov
hlt
mov
push
stos
push
xchg
scas
rcr
ins
std
mov
inc
xchg
sbb
stos
pop
repnz
sub
inc
sub
jb
mov
sbb
nop
push
inc
stos
into
loope
int
arpl
jle
test
inc
jb
sar
addr16
(bad)
jnp
pop
push
pop
retf
daa
(bad)
push
loop
lods
inc
out
or
popa
pusha
in
outs
mov
xchg
cs
aam
cmp
hlt
aaa
aad
icebp
nop
mov
and
rcr
stos
retf
imul
jmp
leave
cmp
shl
outs
cmp
int3
retf
push
(bad)
movs
neg
cmp
mov
ret
xor
gs
adc
pop
add
ss
add
cmps
add
pop
jle
lds
cwde
loop
add
sbb
mov
into
or
push
cmp
bnd
scas
shl
mov
cmp
shr
pop
je
push
enter
mov
push
add
ds
add
jle
imul
leave
and
repz
adc
shl
aam
cld
cmp
ficom
adc
ds
mov
nop
jne
pop
inc
out
shl
stc
pop
sub
push
pop
xchg
adc
in
lock
lods
test
retf
mov
mov
inc
and
movs
fsub
or
xchg
es
jmp
sub
(bad)
pushf
or
test
movs
stos
dec
(bad)
retf
pusha
int
das
or
stos
sbb
ret
mov
pop
call
xor
sub
ins
push
lods
out
sbb
fistp
aam
aam
xchg
jmp
push
in
iret
jae
ud2
jne
mov
call
(bad)
fsubr
fmul
jmp
pop
push
dec
test
in
jo
inc
or
jle
ret
loop
clc
xchg
cmp
shl
mov
dec
sub
dec
mov
dec
lahf
push
iret
imul
mov
inc
push
mov
xor
and
scas
or
adc
jnp
leave
test
bound
dec
into
inc
scas
push
cli
ficom
in
push
ret
rcr
daa
push
addr16
shl
cmp
mov
sub
je
push
out
int
pop
push
jno
mov
push
cmps
inc
mov
arpl
sbb
lods
pop
inc
(bad)
mov
inc
mov
test
retf
outs
pop
jmp
das
clc
in
hlt
pop
arpl
in
sub
mov
addr16
mov
int
or
xor
in
(bad)
std
push
cmps
enter
rol
(bad)
xchg
push
repnz
popf
pop
ficom
xchg
pop
aas
sub
or
push
shl
mov
jns
loope
ror
mov
dec
rcr
push
xchg
pop
xor
sub
push
popa
(bad)
in
sub
push
jmp
loop
in
loopne
jo
(bad)
and
jmp
pop
lock
xchg
rcr
popa
jns
push
xchg
sub
add
stc
js
shl
pushf
pop
cld
gs
hlt
scas
sub
inc
mov
jg
sub
jecxz
out
fsub
mov
xor
jge
fisttp
test
in
popa
neg
and
arpl
jo
xchg
xchg
hlt
fisttp
mov
push
mov
mov
outs
mov
cld
xchg
mov
pop
sar
lahf
pop
jmp
lock
loopne
test
or
rcr
(bad)
or
jge
movs
adc
cmps
mov
mov
push
fsub
pop
aam
movs
cwde
cmp
cmp
shl
xchg
sahf
out
sbb
(bad)
jecxz
and
push
jmp
inc
jecxz
scas
add
retf
xor
bound
push
xchg
loop
rcl
xor
adc
xchg
adc
imul
push
mov
cmp
mov
sar
adc
pop
mov
(bad)
jns
(bad)
xor
gs
nop
jmp
ja
sar
add
iret
jg
ss
cmp
cld
test
push
(bad)
call
xor
jnp
xchg
dec
test
xchg
inc
add
and
aad
aaa
xchg
sub
loopne
ja
jns
xchg
call
push
and
or
retf
into
(bad)
and
das
add
or
jbe
ret
xor
(bad)
in
into
lea
fimul
dec
adc
adc
not
and
ja
cmc
adc
movs
(bad)
cdq
cmp
or
cld
pop
and
and
(bad)
aad
pop
or
addr16
hlt
test
adc
or
or
mov
mov
fxch
mov
or
outs
inc
push
push
xor
mov
data16
mov
sbb
fmul
js
jno
or
std
dec
push
not
mov
and
pop
cmp
das
jmp
mov
popf
xchg
xchg
pusha
hlt
jne
xchg
cld
mov
ror
inc
mov
nop
mov
mov
ins
or
xchg
cmc
inc
mov
call
cmp
xor
or
popf
test
enter
mov
mov
inc
push
jb
or
mov
cmp
dec
retf
add
loop
ja
push
aam
adc
cmp
div
inc
loop
cwde
mov
jmp
pop
int
les
adc
inc
jmp
ficom
sub
jb
inc
fdiv
xor
inc
pusha
ds
daa
adc
jno
cwde
addr16
mov
lods
xchg
mov
mov
movs
retf
repz
(bad)
cmp
ins
popf
push
es
sti
jno
ja
cmp
mov
mov
jno
jbe
cwde
sar
es
rcr
sbb
cmp
scas
int
push
cld
dec
repnz
xor
test
movs
ror
inc
ror
retf
pop
inc
adc
call
sbb
mov
mov
int3
inc
mov
mov
ror
(bad)
cmp
or
jbe
das
or
inc
je
or
test
push
dec
enter
div
or
xor
adc
retf
push
lea
push
jae
pop
movs
pop
mov
leave
frstor
mov
mov
add
movs
xor
mov
push
fwait
push
xchg
push
std
ret
mov
cmc
pop
and
int
lea
fnstcw
pop
sbb
fimul
(bad)
outs
aad
cld
mov
cmp
out
aaa
mov
lock
retf
femms
add
jle
imul
push
lds
mov
lahf
leave
xchg
add
js
adc
pop
scas
dec
jg
jge
pop
js
sub
and
sub
cmp
sbb
inc
xor
test
jmp
sub
ds
xor
scas
gs
mov
test
inc
cdq
xor
xchg
rcl
xchg
mov
(bad)
pop
enter
imul
cmp
test
fidiv
sub
stc
push
mov
cdq
ins
das
(bad)
aam
inc
imul
mov
int
mov
dec
sbb
mov
out
call
dec
push
fsub
jns
or
xor
stos
xchg
xchg
hlt
mov
outs
out
jle
shl
sahf
ret
push
sub
mov
in
frstor
in
inc
add
ja
fiadd
call
test
push
out
sbb
fstp
xchg
adc
jns
sub
call
fs
lds
mov
fild
or
sbb
adc
or
jbe
mov
jmp
nop
xor
xchg
sub
sahf
test
and
push
mov
std
sahf
mov
jmp
mov
and
aaa
cs
je
push
adc
mov
pusha
inc
add
xchg
adc
ins
aam
aas
aaa
cmp
dec
sbb
xlat
lock
in
cdq
mov
out
arpl
fidivr
ds
pushf
mov
cmps
push
push
mov
jmp
mov
push
sub
push
cmp
nop
fisub
btr
fisubr
out
xchg
rcr
inc
adc
pop
dec
jmp
or
cmp
lds
or
and
add
jl
xor
sti
add
mov
(bad)
int3
mov
or
cmp
push
dec
aad
push
cmp
sti
int3
xchg
and
sbb
jae
fwait
xchg
adc
nop
ret
daa
(bad)
int
xchg
and
in
mov
cmp
es
mov
mov
int
rol
dec
(bad)
ficomp
mov
sub
retf
imul
ret
stos
mov
dec
mov
push
xor
sub
test
mov
pop
cmp
dec
test
sub
sub
cdq
lods
inc
popf
(bad)
dec
jnp
push
std
data16
inc
cmps
inc
mov
push
jle
sti
scas
lods
xchg
je
call
out
les
sbb
sub
mov
mov
lahf
retf
mov
cmp
fstp
sbb
cld
jbe
mov
adc
adc
xor
clc
xchg
xchg
jae
sar
xchg
push
adc
jns
dec
pop
sahf
xor
push
loopne
jmp
pushf
adc
xchg
into
sahf
jmp
sub
cmps
add
lahf
sbb
cmps
mov
ins
dec
cmp
sbb
pop
inc
inc
test
retf
test
or
fs
xchg
mov
sbb
mov
out
stc
gs
sahf
cld
in
cmp
stos
pop
bound
jno
movs
sahf
and
enter
pop
sbb
daa
sbb
rcr
xchg
sbb
das
data16
inc
jo
(bad)
lods
sti
jl
jns
lods
neg
cmc
repz
jg
adc
pop
mov
movs
adc
mov
xor
xchg
push
fnsave
add
xchg
xor
pusha
sbb
addr16
push
jmp
pop
pop
ja
mov
xor
call
xchg
in
mov
lods
pop
push
aam
cdq
xchg
add
test
aam
cdq
test
mov
push
je
sbb
addr16
cmps
mov
jns
aas
sub
(bad)
mov
and
and
sbb
and
dec
pop
xchg
lock
call
lods
mov
test
dec
repnz
sbb
cdq
fs
add
pop
lods
add
fst
imul
sbb
fs
int
sahf
test
outs
shl
xchg
push
outs
out
mov
aaa
aad
push
fucom
test
imul
push
ins
jl
in
pop
mov
je
adc
xor
ficomp
or
sub
cmps
mov
shr
push
push
cwde
ret
pop
lods
mov
sahf
js
cmc
jecxz
mov
ds
sub
or
leave
lahf
push
ja
addr16
(bad)
ins
fwait
inc
mov
sbb
xchg
repz
mov
cli
jo
dec
dec
outs
inc
and
fistp
cmp
jae
push
ret
movs
fcom
or
xchg
iret
repz
bound
(bad)
mov
push
xchg
push
push
enter
xchg
push
push
loop
adc
pop
ret
loop
lock
jmp
mov
push
loopne
iret
adc
add
int3
xchg
push
jae
sti
popa
in
int3
fcmovnb
js
mov
ficomp
add
adc
test
xchg
ds
mov
mov
gs
jp
repz
cld
sub
fist
sub
push
call
sti
cmovb
mov
pop
fist
mov
retf
js
jnp
nop
or
mov
cmc
test
in
test
mov
shr
adc
fs
ret
iret
retf
(bad)
loope
sbb
(bad)
push
add
mul
sbb
in
mov
cld
stos
into
push
popa
repz
jp
jl
shr
rcl
mov
mov
jae
xchg
jg
cld
das
lea
add
fldpi
xor
jl
ss
fwait
adc
lods
cld
add
ret
jmp
jmp
das
es
push
jbe
add
xlat
inc
(bad)
fs
push
jge
ror
jns
fcomp
bound
retf
push
fmul
sub
lock
push
xchg
lock
gs
stos
xor
cmp
fwait
test
sbb
dec
cmc
or
sahf
jns
(bad)
and
jae
cmp
jmp
(bad)
js
dec
adc
sub
push
mov
add
aad
shl
inc
int
xor
adc
mov
dec
stos
dec
mov
sbb
es
rol
sub
xchg
fcmovnbe
or
pop
fld
clc
adc
or
cmps
call
jae
not
xsave
jb
jo
(bad)
imul
movs
out
mov
retf
mov
iret
leave
das
outs
mov
pop
mov
addr16
retf
jp
ss
repz
mov
in
xchg
xchg
dec
sbb
dec
pop
cmp
in
lods
xchg
ucomiss
std
mov
add
mov
sub
push
sar
xchg
js
outs
cwde
lock
es
(bad)
push
out
test
jno
aas
add
das
in
pop
in
jmp
xchg
pop
adc
add
or
sub
hlt
rcl
cld
mov
pop
out
jb
fst
dec
call
mov
jp
sbb
and
cmp
push
cmp
push
gs
aam
(bad)
xchg
popf
sbb
shr
mov
es
add
inc
mov
std
mov
dec
jbe
clc
in
cmp
(bad)
out
shr
push
(bad)
mov
pop
mov
loop
(bad)
pop
mov
aaa
sub
jb
loope
xchg
fdiv
xchg
xchg
sub
jns
std
mov
mov
mov
sub
in
add
in
enter
cmp
lock
pop
sbb
pop
sbb
rol
fadd
icebp
push
(bad)
xchg
pop
das
sbb
mov
sbb
jmp
dec
loopne
aad
jp
push
adc
(bad)
xchg
js
dec
inc
call
dec
mov
cld
xor
sub
mov
hlt
or
mov
(bad)
dec
or
repnz
stos
mov
xchg
sbb
dec
sbb
jmp
add
fdivr
push
push
cld
sub
ret
gs
mov
popf
push
mov
cmp
pop
xchg
rol
jno
out
add
pop
out
daa
enter
mov
dec
cmp
loope
icebp
cmp
mov
je
lds
mov
test
cmp
dec
mov
outs
gs
mov
stos
or
lock
aad
and
sbb
inc
mov
dec
aad
scas
and
or
push
mov
pusha
inc
xor
push
inc
rol
inc
jnp
xor
xor
aam
adc
movs
sti
lea
mov
adc
lods
xchg
mov
ds
mov
ja
popf
and
ret
push
ja
push
mov
dec
pop
shr
sbb
sub
ror
(bad)
dec
adc
jle
mov
das
dec
ror
imul
mov
or
jecxz
pop
call
xchg
daa
sti
daa
mov
movs
arpl
sub
sbb
pop
xlat
jo
jb
pop
in
xchg
xor
fsub
sbb
ins
sti
mov
fs
inc
loopne
mov
pop
rcl
adc
test
test
or
and
imul
or
pop
fadd
imul
push
mov
mov
sbb
je
push
fst
cmp
imul
pushf
dec
rcl
mov
sub
jmp
mov
push
scas
bound
in
fsub
xchg
nop
cmp
push
bswap
mov
or
jmp
pop
test
add
xchg
xlat
mov
push
add
sti
test
sbb
push
(bad)
aas
cwde
lea
ror
adc
ret
pop
fdivr
(bad)
ins
or
jge
ins
dec
mov
or
rcl
in
jne
js
aad
sbb
mov
push
or
in
or
and
fcom
sub
push
xlat
mov
lea
mov
mov
and
push
pop
mov
push
or
pop
shl
scas
repnz
fnstsw
push
push
cmp
mov
jmp
push
push
dec
jecxz
hlt
pop
in
not
rol
jecxz
sbb
stos
fistp
push
inc
(bad)
sbb
aam
sub
shl
cmp
jne
or
movs
jmp
pop
mov
shr
xlat
xchg
sar
dec
or
fcmovnb
dec
out
das
pxor
jno
test
popf
clc
mov
xor
xchg
push
cwde
mov
and
fdivr
int3
leave
mov
int
clc
test
test
and
xor
clc
mov
cmps
sbb
(bad)
adc
jae
pop
push
add
mov
inc
add
aam
mov
fcom
imul
out
aas
and
rcr
je
cmp
pop
push
add
pop
dec
push
and
dec
pop
movs
xor
dec
fdiv
lahf
or
cdq
jmp
push
cmp
mov
stc
int3
imul
xchg
adc
mov
pop
addr16
mov
rcr
sbb
or
jo
mov
or
mov
sbb
and
mov
jge
in
push
xor
ins
inc
out
ja
nop
jp
aam
imul
(bad)
call
dec
pop
out
ror
add
cmp
jnp
addr16
and
sbb
and
out
jg
movs
mov
cmp
lock
mov
rcr
loopne
dec
jmp
or
mov
jno
retf
xchg
jge
dec
sbb
adc
and
stos
mov
fdivr
arpl
xchg
push
mov
das
test
test
sar
fld
sahf
mov
inc
ret
inc
mov
adc
pushf
outs
inc
or
bound
aaa
add
aad
gs
xor
add
loop
shl
or
xor
fwait
mov
rol
adc
mov
(bad)
mov
in
push
jecxz
or
mov
popf
repz
lock
inc
hlt
push
mov
outs
outs
retf
lock
je
es
xchg
outs
les
sbb
and
inc
pop
xor
mov
push
jle
repz
push
pusha
mov
mov
inc
jb
cmps
pop
stos
js
push
dec
shl
(bad)
sahf
int3
fist
and
outs
and
and
les
jo
dec
adc
fcomp
rep
push
pusha
jae
mov
lods
fidiv
dec
xor
in
add
mov
mov
push
mov
aam
and
xchg
(bad)
mov
icebp
adc
daa
mov
scas
jmp
fcomp
ss
xchg
test
sub
mov
adc
aas
adc
sub
mov
pop
mov
into
out
movs
aas
seto
jmp
imul
vphaddubw
jmp
ins
(bad)
iret
dec
in
cmp
rcr
ror
xlat
and
movs
mov
imul
jae
or
add
pop
loop
pop
push
adc
nop
sbb
push
cdq
bts
push
sbb
add
adc
xor
cmps
add
fyl2xp1
mov
ja
push
ret
add
imul
data16
fld
mov
ret
lahf
iret
lahf
ins
cmp
ret
add
cmps
mov
(bad)
adc
mov
push
imul
xchg
and
mov
add
pop
mov
push
jmp
adc
cdq
or
push
push
pop
ret
cmp
pop
mov
xor
adc
pop
add
in
push
mov
lahf
call
(bad)
push
movs
xchg
sbb
ror
in
dec
iret
les
dec
xlat
and
jnp
clc
cmc
push
sub
xor
cdq
jb
mov
xchg
pop
jmp
out
mov
push
(bad)
push
mov
sbb
push
inc
inc
and
fs
fidiv
push
(bad)
sub
div
(bad)
aad
add
push
movs
call
mov
jb
fnsave
cwde
xor
outs
dec
adc
push
xchg
ret
mov
mov
lock
mov
addr16
outs
pop
inc
daa
pop
inc
test
cmp
push
mov
repnz
leave
jns
rcr
inc
ret
xchg
cli
enter
dec
mov
push
add
sbb
(bad)
mov
xchg
jmp
daa
push
loopne
sub
data16
in
clc
push
xchg
(bad)
and
stc
add
or
xor
cld
pop
idiv
(bad)
loope
dec
adc
jle
in
cmp
mov
adc
sub
or
or
hlt
push
retf
js
ja
mov
add
adc
frstor
sbb
sub
int3
sub
lods
sbb
sbb
inc
xchg
out
and
jge
jp
mov
dec
xor
mov
aad
jns
sbb
inc
cmps
(bad)
jb
imul
and
lods
test
mov
test
inc
xor
jne
mov
or
loope
shl
scas
cmp
push
xchg
out
push
imul
int
push
pmaxub
outs
std
xor
jne
ret
clc
int3
aam
(bad)
(bad)
aaa
and
imul
rol
retf
mov
pop
jle
pop
retf
jo
jns
cmc
test
mov
push
jge
dec
or
(bad)
pop
jae
mov
movs
pop
in
push
je
(bad)
xor
adc
xchg
xchg
out
out
cmp
jns
sbb
xchg
xchg
cs
or
sub
dec
cmp
push
mov
adc
add
dec
ins
push
(bad)
rcr
jg
aaa
mov
call
jg
fisttp
nop
inc
je
in
push
es
loopne
fld
cli
jnp
adc
dec
sbb
leave
in
(bad)
lods
sub
xchg
aas
fisttp
rcl
mov
xor
push
dec
mov
sub
cmc
fmul
xchg
jbe
sbb
outs
outs
in
fbstp
clc
push
pop
add
shl
ss
dec
or
mov
outs
xchg
add
or
fistp
pop
shr
mov
pop
inc
xor
scas
je
inc
fild
test
sub
or
jle
jnp
mov
pop
cld
add
(bad)
sti
jb
xor
icebp
mov
int3
lahf
adc
inc
add
pop
repz
push
(bad)
(bad)
stos
out
mov
xor
fs
xor
in
stc
jbe
mov
int
mov
out
test
and
xor
sar
and
das
mov
arpl
pop
rcr
icebp
pop
sahf
fs
je
stos
push
mov
pop
loop
jno
jge
mov
mov
jmp
sub
add
inc
pop
loop
mov
(bad)
or
add
cwde
xchg
mov
xchg
jae
shl
pmuludq
shl
or
jle
pop
inc
inc
stc
cld
adc
out
push
inc
mov
pop
xlat
aaa
aam
outs
shl
in
shl
xor
mov
mov
pop
scas
mov
push
in
pop
loopne
aam
jl
jns
or
push
bnd
gs
push
mov
addr16
in
(bad)
pop
or
std
ja
fwait
sahf
xchg
jg
push
sub
cmps
retf
pop
or
dec
fadd
and
sub
sbb
mov
dec
add
(bad)
adc
int3
mov
add
fs
lods
add
outs
jg
jle
pushf
lock
jp
xchg
cmp
rcl
mov
push
push
sbb
lods
repz
or
or
xlat
fisttp
mov
inc
das
stc
cs
sub
pop
and
pop
adc
in
add
sar
cmp
xchg
and
out
adc
mov
dec
popf
rol
cmp
sub
sti
adc
mov
icebp
mov
sbb
xlat
(bad)
fdiv
adc
mov
cmc
test
in
dec
es
inc
mov
xchg
rcr
inc
xor
xchg
lock
ja
arpl
inc
dec
not
mov
jo
mov
das
inc
sbb
or
int3
pop
adc
aas
(bad)
push
jmp
cmps
popa
jle
(bad)
jb
mov
mov
retf
ja
pop
and
or
jecxz
cs
ds
xchg
xor
dec
xchg
pusha
icebp
pop
mov
pop
not
or
(bad)
cdq
jno
test
push
dec
in
mov
(bad)
sbb
mov
test
(bad)
ins
ret
adc
jbe
jecxz
mov
inc
add
jecxz
mov
in
or
pop
pop
sub
fisub
sahf
cld
inc
jge
mov
(bad)
arpl
loopne
sbb
mov
sbb
stos
popf
jns
xor
sbb
movs
inc
pop
push
add
adc
jo
out
fstp
stc
sbb
imul
(bad)
movs
les
xor
adc
(bad)
lods
inc
es
loope
icebp
jecxz
push
dec
(bad)
int3
aam
cli
and
scas
repnz
sbb
mov
sbb
push
outs
mov
int
dec
(bad)
idiv
dec
jns
fwait
or
aaa
dec
ror
je
or
jne
xor
fcomi
pop
ret
scas
sbb
jb
in
xor
push
sub
ins
sub
inc
sahf
es
jmp
inc
cmp
pop
cli
inc
mov
push
push
(bad)
call
jmp
in
add
xchg
imul
xchg
in
test
test
sub
pop
jg
mov
pop
mov
and
push
pop
int3
(bad)
into
lea
or
pop
out
mov
js
leave
lock
mul
int3
mov
mov
loope
stc
imul
xchg
ins
mov
loopne
stos
inc
xchg
(bad)
fs
test
xchg
adc
cld
cmc
(bad)
dec
mov
dec
or
int
sbb
outs
jae
test
and
xlat
fmulp
in
xchg
or
(bad)
jge
pop
sub
sub
hlt
rcr
jno
or
pop
ins
(bad)
fdiv
imul
inc
retf
mov
sbb
xor
dec
add
rcl
jno
mov
lar
or
inc
jmp
popa
dec
jge
xor
jmp
xor
jp
push
test
push
mov
pop
xchg
out
popa
jno
mov
xchg
dec
push
icebp
call
xor
mov
mov
dec
pop
js
mov
xor
daa
adc
lds
mov
cmp
jb
and
iret
add
in
jg
fisub
dec
icebp
mov
mov
inc
rcl
leave
call
dec
dec
pop
repz
fwait
stc
into
xor
shl
sbb
sahf
sub
stos
xor
and
cwde
sbb
movzx
out
cli
xor
pop
xchg
repz
pop
in
inc
aad
popf
stos
adc
xor
mov
test
loop
push
test
ret
scas
in
imul
mov
adc
data16
call
or
push
xor
and
mov
lock
lods
adc
push
fs
in
ret
js
add
jecxz
popf
add
pop
sub
mov
test
in
imul
mov
or
sbb
stc
ins
sub
mov
in
fld
fsubr
mov
xor
sub
xchg
mov
mov
out
movs
clc
out
add
adc
addr16
jp
test
cmc
lahf
idiv
data16
jecxz
mov
xor
std
mov
jae
adc
mul
push
mov
mov
sbb
ins
and
aam
out
nop
xor
aas
loopne
cmc
push
jmp
push
adc
in
jge
out
retf
sub
xlat
xor
(bad)
adc
pop
mov
sub
icebp
test
stc
push
sbb
mov
(bad)
dec
repz
sbb
mov
scas
test
fisubr
dec
sub
adc
mov
jl
dec
sub
inc
inc
icebp
push
aas
dec
retf
mov
ja
sbb
pop
mov
shl
lods
xchg
(bad)
movs
jle
inc
mov
aad
mov
xchg
pop
pop
add
in
in
repnz
cwde
ins
xchg
int3
and
cli
cmp
cwde
adc
sbb
cmp
movs
aam
into
loop
stc
inc
jo
mov
mov
mov
pop
mov
push
aam
sti
sub
scas
cmp
lock
adc
xchg
sub
jno
sbb
lock
ret
mov
(bad)
push
(bad)
add
imul
fst
fild
mov
pop
test
adc
dec
sbb
dec
sub
dec
in
xlat
fucom
in
cs
xchg
pop
and
je
xchg
pop
fild
sar
popa
popf
call
dec
sub
shr
adc
push
sub
pop
cmp
fsub
xchg
test
js
out
rol
and
xor
ins
icebp
or
es
push
rol
(bad)
lods
pusha
outs
lahf
pop
test
adc
stos
xchg
mov
xor
mov
and
xor
pusha
sbb
and
xchg
and
push
in
sahf
sbb
cmp
sbb
mov
jmp
sbb
pushf
inc
mov
pop
xor
adc
xlat
jg
or
fcom
fist
cld
enter
xchg
jg
mov
cmp
in
and
pop
jge
xor
jecxz
in
xchg
dec
pushf
xor
jmp
push
scas
dec
jnp
in
inc
fisub
lds
ret
or
dec
cmp
mov
gs
jae
jge
fwait
daa
cmp
dec
lods
sub
mov
mov
aaa
pop
jmp
dec
int
xchg
sub
addr16
sub
xchg
pop
(bad)
dec
mov
fist
test
cli
int3
mov
inc
in
movs
pop
ficomp
sub
arpl
and
in
ficomp
dec
popa
push
icebp
popf
sub
out
nop
jge
pop
jnp
sbb
pop
dec
pop
bound
push
mov
mov
ss
lahf
rcr
and
daa
push
mov
inc
pop
pop
jecxz
adc
outs
add
xlat
adc
push
fstp
mov
push
push
sub
neg
test
cmp
fnstcw
movd
pop
test
(bad)
stos
cmp
jnp
out
(bad)
fld
sub
cmps
mov
fild
adc
xlat
aam
pop
je
pusha
stc
jmp
xchg
shr
cwde
les
daa
or
das
sub
mov
(bad)
repnz
lods
call
in
movs
inc
adc
xchg
rcr
icebp
inc
lock
call
mov
int
cdq
add
fnstsw
inc
pop
pop
out
xor
or
aam
fwait
sub
xchg
repz
mov
push
mov
ja
adc
sbb
fdiv
call
sbb
jge
leave
in
(bad)
in
or
shr
push
inc
sbb
mov
lea
jg
inc
jb
push
jmp
xchg
jbe
or
cs
and
mov
stos
push
sub
add
and
fldcw
les
xchg
sbb
and
fidivr
(bad)
dec
inc
xor
ins
fcmovnb
jb
scas
imul
push
lods
lods
mov
(bad)
jno
sbb
xchg
add
not
pushf
mov
shr
icebp
or
call
cmp
pop
mov
mov
sahf
test
jp
cmp
pop
cli
lock
push
call
cmp
xchg
xchg
fild
pop
lea
pop
push
mov
mov
add
cmp
scas
adc
in
jae
out
adc
icebp
cs
jg
xchg
and
ror
pop
mov
and
shl
mov
and
sbb
loope
movs
pop
lahf
sub
sbb
ror
test
ja
mov
cmc
jle
adc
outs
mov
std
dec
xlat
pop
mov
push
js
sub
push
cmp
ja
out
shr
enter
fs
dec
jmp
sahf
inc
mov
bnd
gs
push
sbb
adc
fwait
jae
push
dec
sbb
jl
mov
and
inc
mov
movs
ins
inc
sub
jb
inc
cmp
repz
jne
jg
mov
in
jo
jns
ins
xchg
fisubr
sahf
sahf
out
outs
xor
bndstx
mov
les
adc
xor
xchg
cmps
and
out
dec
vmovdqu
sbb
rcl
in
stos
jbe
add
loope
retf
enter
push
pop
add
rcr
sub
xor
pop
jl
sbb
imul
(bad)
retf
addr16
add
in
mov
and
mov
scas
int
sahf
cmp
sub
rcl
inc
cmps
xchg
int3
ret
mov
test
xchg
pop
dec
push
push
es
jmp
jne
push
jb
shl
push
mov
xchg
inc
and
add
add
inc
frstor
mov
scas
sub
inc
adc
add
mov
(bad)
cmps
mov
xchg
sbb
xchg
pop
lods
jns
dec
lods
scas
inc
in
cmps
int3
loope
xor
fwait
cmp
push
fs
push
aas
sub
mov
ror
and
rcl
pop
sbb
push
push
test
adc
push
in
enter
sbb
dec
repnz
mov
dec
fs
jnp
pop
sbb
adc
pusha
mov
or
pop
dec
sub
cmp
stos
xchg
fwait
jno
aas
ret
sbb
iret
mov
adc
(bad)
push
jp
mov
int
mul
jl
arpl
mov
push
mov
add
and
dec
jmp
push
dec
into
fcom
mov
sub
rcl
mov
repz
fidivr
neg
push
cs
push
fsub
loopne
dec
fistp
push
loopne
mov
ds
addr16
pop
mov
push
adc
cmp
mov
fdiv
xchg
in
add
aas
shl
sar
jne
or
and
bound
aas
xchg
push
pop
lds
paddsw
push
inc
jmp
or
hlt
adc
ror
aam
inc
mov
sbb
push
js
push
pop
inc
pushf
out
jns
mov
dec
xchg
pop
push
aas
or
dec
(bad)
or
frstor
jg
xor
or
push
mov
movs
in
(bad)
jmp
enter
inc
call
(bad)
aam
rcr
and
dec
into
push
icebp
or
leave
dec
scas
adc
inc
into
cmps
sbb
xor
sti
cmp
and
test
pop
xlat
repz
loop
mov
stos
mov
test
cmc
and
fs
xlat
and
mov
mov
cmc
mov
dec
cmp
call
mov
xor
pop
pop
mov
sbb
or
mov
sbb
xchg
lock
push
sub
dec
fsub
shr
nop
clc
mov
mov
test
ds
adc
in
sub
leave
in
shl
xchg
mov
xchg
sbb
(bad)
push
in
into
inc
jno
cmp
jbe
ins
cmp
in
mov
jb
fadd
dec
pop
mov
and
fiadd
push
outs
jmp
daa
outs
lds
cmc
sub
pop
movs
xchg
fdivr
mov
sti
or
mov
in
test
sbb
shr
sbb
cmps
pop
ds
mov
adc
or
xchg
add
jae
xchg
(bad)
sub
mov
aad
xor
pop
add
stc
add
push
mov
aad
cdq
cmp
rol
fcmovb
ja
pusha
sbb
push
xor
mov
push
outs
aaa
data16
dec
outs
adc
cld
fwait
push
xor
push
clc
push
adc
push
or
arpl
retf
bound
pop
je
jmp
pop
cmp
dec
xor
cmc
sub
push
jmp
push
jp
call
and
cmp
retf
add
push
sti
pop
push
fbld
push
call
jno
pop
out
and
inc
das
pop
hlt
adc
fwait
call
mov
aad
scas
sub
mov
or
and
repz
imul
xchg
int3
scas
fnsave
data16
movs
push
and
mov
jle
sahf
cmp
hlt
jmp
mov
pop
or
test
(bad)
std
in
pop
aam
scas
adc
ds
call
inc
es
push
test
fnstcw
jl
in
push
xchg
sti
push
nop
sbb
xchg
int
ins
push
(bad)
(bad)
sub
imul
ins
fist
pop
xchg
retf
out
xor
call
inc
jmp
push
outs
stos
jl
ds
mov
and
pop
out
or
add
out
out
pop
push
xchg
inc
mov
xchg
jne
jmp
(bad)
mov
adc
mov
imul
add
mov
cmps
jno
dec
jle
pop
test
xor
les
stos
(bad)
icebp
adc
fdiv
push
jnp
out
adc
outs
dec
dec
mov
lods
mov
or
shl
inc
in
dec
fsubp
cmp
shr
aas
rol
shl
inc
sub
cmp
test
rol
inc
xlat
adc
fnsave
xchg
cmps
(bad)
fild
jmp
push
dec
(bad)
mov
nop
xor
xchg
cwde
fwait
aaa
clc
scas
cld
into
and
ret
dec
xchg
retf
sub
cmp
add
cmp
xor
mov
xlat
scas
xor
mov
xchg
idiv
ins
out
fstp
std
test
addr16
cmp
fucomp
leave
popf
adc
sti
push
mov
popa
nop
adc
and
rep
cs
leave
aad
stc
repz
aam
jmp
pop
jns
enter
mov
or
dec
test
movs
popf
xor
rol
fiadd
xor
xchg
sti
pop
or
and
jmp
push
push
jns
int
mov
mov
lds
xchg
mov
call
pop
push
hlt
ror
mov
pop
das
cmps
pop
icebp
or
dec
mov
inc
lods
mov
push
mov
and
outs
push
jno
lahf
or
mov
mov
push
dec
sahf
lods
xor
xor
dec
aam
shl
pop
mov
addr16
xor
js
mov
icebp
or
out
es
inc
loope
in
mov
int
fst
jno
lea
jmp
mov
stc
out
push
out
add
cli
ja
xchg
hlt
sub
(bad)
jne
xchg
xchg
out
imul
cmps
mov
mov
in
xor
pop
adc
and
push
dec
and
mov
xchg
call
mov
or
in
data16
pop
and
mov
xchg
jecxz
cmps
les
dec
jbe
push
xchg
mov
les
scas
adc
fcom
mov
jns
fbld
test
sub
lock
js
or
je
push
mov
out
js
leave
push
fidivr
jnp
mov
add
or
int3
cli
dec
test
mov
in
cmps
imul
pop
out
retf
ror
and
mov
sub
out
pusha
mov
clc
clc
repnz
inc
push
cs
ret
cmp
push
and
call
(bad)
or
mov
mov
retf
daa
in
jne
sbb
fisubr
mov
out
mov
inc
test
test
jae
or
shr
or
jnp
je
cmp
add
stos
rcr
movs
gs
adc
aaa
xor
fadd
add
jns
jge
adc
icebp
jnp
cwde
dec
push
rol
cmp
ror
mov
mov
mov
mov
inc
jl
cmp
mov
iret
test
pop
retf
xor
xor
hlt
mov
pop
(bad)
mov
pop
pop
bound
stos
and
sbb
fcomip
and
pushf
pop
popf
jne
outs
setp
jp
rcl
push
mov
inc
lock
(bad)
int3
cmp
xchg
and
cmc
movs
fmul
loopne
or
mov
in
dec
ss
movlps
xchg
sbb
neg
iret
daa
jle
mov
movs
cmp
sar
inc
sbb
in
pushf
or
or
pop
bound
stos
int
not
push
pop
mov
xchg
push
mov
add
pusha
cli
jle
sbb
psubq
dec
fild
idiv
je
and
movs
daa
xor
dec
pop
cmp
add
(bad)
add
jp
xchg
out
loop
rcl
sbb
(bad)
xchg
add
les
pop
jp
mov
push
ins
add
retf
fiadd
inc
xor
pop
or
and
ds
dec
aam
das
cmp
sub
mov
sub
pop
pusha
xor
loopne
cmp
rcl
lds
cmp
mov
sbb
and
xor
loope
pop
loope
xor
and
sub
pushf
lods
cld
cmp
ret
(bad)
jp
call
push
mov
retf
cli
inc
cmp
ins
out
movs
mov
cmps
inc
sub
neg
repz
push
push
inc
and
jnp
(bad)
repz
pop
test
xor
xor
mov
add
test
jmp
mov
cmp
scas
push
xchg
xor
cmp
dec
(bad)
sub
test
call
imul
jns
retf
(bad)
int
mov
bound
pop
jl
xor
xor
mov
cmps
push
fadd
xor
cmp
adc
jb
sub
xor
jl
aas
sbb
test
aas
movs
fwait
in
jmp
daa
fisubr
add
sbb
test
clc
add
push
fmulp
cmc
lods
dec
ja
xchg
mov
inc
pop
sbb
dec
mov
jbe
jecxz
jecxz
popa
in
xchg
ret
sbb
sub
into
mov
jmp
push
dec
iret
fistp
adc
shl
mov
stc
cmp
mov
inc
test
jmp
sti
jns
call
in
push
mov
into
mov
test
mov
adc
scas
push
fwait
aas
jnp
or
jg
pop
xchg
mov
cmc
outs
or
mov
push
aad
(bad)
retf
inc
pop
inc
sbb
mov
jb
fnstsw
and
jmp
popf
loopne
xchg
push
add
sbb
lods
xchg
repz
sub
xchg
sub
clc
lods
xlat
imul
loop
out
add
pop
dec
stos
and
pop
(bad)
loope
int3
xchg
cmp
sahf
sub
vpavgw
inc
inc
xchg
vmwrite
icebp
fdiv
add
fld
add
scas
jg
inc
sbb
daa
das
push
stc
or
xor
mov
(bad)
stos
fsubp
mov
jg
add
mov
bnd
cmc
enter
jmp
inc
or
js
cwde
mov
pusha
xchg
js
xor
leave
jecxz
and
add
imul
rcl
test
lods
add
jne
sti
movs
daa
sbb
push
les
out
mov
jecxz
add
jbe
movs
push
xor
sub
and
gs
pop
stc
adc
xor
or
cmc
scas
push
mov
adc
in
std
mov
cmps
jno
repnz
ds
add
xchg
test
fldenv
mul
inc
in
(bad)
cmp
leave
call
ds
xchg
xchg
lea
cmp
xor
aaa
out
loopne
push
pop
xor
sbb
out
and
lods
push
daa
js
xchg
xor
movs
and
(bad)
arpl
in
and
inc
popa
aam
jo
xchg
lea
dec
fcompp
test
div
or
call
adc
call
out
loope
push
pop
outs
shl
daa
cs
push
pop
dec
es
pop
or
iret
(bad)
mov
es
cmp
out
arpl
fidivr
jno
inc
outs
test
push
std
inc
(bad)
mov
push
cmp
jnp
xchg
jnp
fwait
loope
int
add
in
into
aam
sbb
test
(bad)
xor
lds
mov
mov
xor
mov
popf
jecxz
sbb
inc
and
pop
and
mov
out
pop
mov
and
jle
neg
rol
imul
addr16
or
mov
xor
repnz
dec
clc
sahf
retf
inc
pmaxub
pop
mov
inc
push
shl
loop
mov
call
push
cmp
adc
lahf
push
pop
cwde
nop
jmp
jae
pop
vminps
cmp
pop
shl
stos
ret
dec
and
add
jns
pop
in
mov
push
(bad)
movs
or
pop
xchg
xor
clc
mov
add
data16
xlat
and
sub
ret
mov
scas
mov
nop
mov
das
jae
pop
popa
data16
adc
mov
jecxz
mov
push
cmp
xchg
popf
jl
lea
cmp
enter
xlat
jge
xchg
mov
dec
sbb
jno
mov
cmps
ins
sbb
mov
xor
es
cld
out
stc
jl
les
pop
cmovp
cs
mov
mov
fisttp
mov
enter
jg
or
outs
mov
mov
mov
sub
pop
jl
xlat
pusha
clc
arpl
fwait
mov
or
adc
add
cld
jp
xchg
imul
test
jno
ins
(bad)
xlat
cmps
cmc
push
ins
jecxz
outs
push
lods
push
call
mov
aaa
loopne
stc
popf
cli
loop
xor
push
mov
inc
mov
call
outs
sbb
outs
mov
cdq
adc
mov
out
push
out
gs
retf
call
retf
inc
or
sbb
lods
xchg
jno
cmp
call
mov
dec
jns
adc
vmovupd
ds
add
adc
sbb
or
cmc
popf
push
enter
rcl
retf
cmp
pop
mov
or
sbb
mov
adc
mov
dec
jne
popf
and
in
js
in
pop
pop
pop
(bad)
jecxz
stos
not
mov
mov
mov
lds
push
mov
or
mov
xor
sbb
je
bound
jmp
or
pop
pop
sub
jg
in
mov
scas
out
sbb
daa
outs
inc
push
out
xchg
pushf
cmc
inc
(bad)
or
js
mov
fs
inc
je
push
sub
xor
jmp
ret
stc
and
int
cmps
pop
fwait
jo
in
and
mov
and
jnp
jo
xor
push
out
outs
inc
inc
cmp
neg
gs
xor
pop
pop
mov
(bad)
cli
fwait
retf
mov
dec
in
and
into
mov
adc
mov
jge
cs
ja
es
sub
test
push
mov
in
popf
fnstcw
sub
sub
cmp
xchg
inc
outs
les
jge
lds
dec
inc
ins
inc
cmp
push
aad
jl
jnp
stc
(bad)
jp
jmp
sub
into
pop
jmp
cld
rol
xchg
stc
sahf
fsub
(bad)
xor
xlat
enter
mov
int3
into
retf
imul
shl
add
jecxz
jge
rol
sbb
dec
test
aas
bound
jns
jbe
(bad)
or
push
mov
cmp
xchg
ss
sbb
and
adc
sbb
mov
std
mov
push
inc
lods
in
clc
and
adc
gs
mov
inc
mov
sbb
pop
mov
xor
cmp
out
add
add
add
imul
aaa
jbe
lea
xchg
mov
inc
jnp
push
mov
bnd
cli
shl
pop
ins
dec
addr16
sub
dec
or
push
pop
mov
test
mov
add
retf
adc
sub
mov
cmp
das
shl
cs
pop
jp
add
xchg
dec
or
lea
test
mov
(bad)
stos
and
adc
mov
(bad)
in
push
mov
outs
add
icebp
inc
aad
test
mov
pop
inc
add
jecxz
enter
shr
push
jbe
pop
pop
jp
xchg
mov
movs
adc
lods
sbb
ret
in
jb
xor
dec
cmp
daa
test
ror
(bad)
pop
xchg
lock
jae
jbe
sub
adc
arpl
pop
rol
or
clc
dec
push
dec
fisub
ficomp
mov
out
sbb
shl
ficom
mov
jmp
push
push
fnsave
or
ins
adc
test
sub
add
adc
ins
sbb
xchg
mov
into
stc
push
add
add
jmp
movs
and
add
dec
and
xchg
pop
jmp
rol
rol
pop
xchg
(bad)
and
sbb
pop
adc
jp
sub
in
sub
loope
inc
mov
and
and
loop
retf
into
dec
sti
ret
push
pop
lds
push
ins
dec
dec
inc
fist
fdivr
cmp
push
pop
cwde
or
inc
aaa
push
dec
and
imul
dec
sbb
out
ss
pop
pop
popa
bound
dec
mov
cmp
enter
shl
test
cdq
jmp
xchg
repz
call
mov
idiv
ror
cmp
ret
cwde
stos
jne
aam
es
xor
sub
enter
aad
int
or
mov
loopne
es
(bad)
ss
int3
mov
sbb
jp
inc
in
xor
repnz
(bad)
xchg
dec
neg
or
lock
xchg
inc
xor
shl
cmp
cmp
pop
(bad)
daa
xor
or
and
mov
cmp
add
mov
rcl
pop
int
inc
jmp
add
xor
mov
sbb
pushf
adc
ins
mov
rol
cmps
and
push
add
das
mov
dec
jmp
pop
int
out
sub
mov
pop
xor
push
xchg
pop
pushf
dec
mov
push
popf
mov
sub
or
pop
and
(bad)
jns
xchg
ja
xor
rcl
loop
pop
inc
push
sti
jbe
mov
scas
leave
xor
int3
mov
or
scas
push
mov
rcr
(bad)
jp
push
stc
cmp
xor
mov
jp
aas
cld
mov
mov
pop
std
repz
xchg
xchg
dec
xchg
mov
jns
fxch
sbb
mov
jp
into
mov
xchg
jecxz
outs
sti
xor
dec
or
inc
sbb
inc
loop
repz
aas
push
iret
jo
int
call
mov
in
dec
mov
cld
xor
inc
jge
ins
sar
sbb
fisttp
dec
xor
xor
mov
pop
cdq
sbb
mov
hlt
xchg
pushf
jle
call
inc
iret
test
adc
mov
in
inc
jg
sbb
fwait
mov
add
adc
cmc
lea
adc
xchg
outs
into
sub
popa
dec
int3
jno
jno
cmps
int
jne
rcl
bound
movs
(bad)
sbb
add
push
xchg
add
retf
push
es
jg
iret
xlat
rcl
sub
push
dec
inc
push
jo
shr
popa
xlat
neg
(bad)
in
ins
jecxz
inc
adc
adc
mov
mov
bound
jle
xor
pop
addr16
jge
jne
push
mov
imul
push
cdq
push
es
iret
inc
sub
push
push
add
xor
or
(bad)
ins
push
dec
scas
add
xchg
or
mov
aad
pop
push
adc
dec
iret
popf
push
in
cmp
xchg
add
dec
scas
addr16
jmp
retf
or
test
bswap
add
bound
sbb
cmp
push
mov
(bad)
mov
daa
loop
ja
imul
int
out
add
ficomp
cmps
lds
cmps
aas
aas
jg
pop
inc
mov
pop
fnstenv
test
cld
mov
repnz
sbb
adc
mov
dec
mov
daa
ds
xor
sti
cmp
dec
lods
inc
adc
das
push
mov
push
retf
int
push
and
test
scas
cli
mov
data16
cmp
push
popf
cmp
inc
outs
mov
inc
aas
dec
xchg
aad
pop
cdq
sbb
fisub
stos
das
inc
test
adc
inc
stos
shl
(bad)
mov
les
std
popa
(bad)
jle
call
cwde
arpl
or
mov
sub
adc
or
mov
inc
add
(bad)
movs
adc
or
inc
sub
add
bound
and
lahf
cmp
hlt
lds
sub
rcr
outs
arpl
xor
push
inc
retf
imul
push
in
sbb
cmp
daa
inc
test
push
imul
retf
mov
fwait
cmp
repnz
cmp
push
sub
scas
inc
das
jl
or
call
ja
push
aas
mov
retf
add
lahf
add
inc
pop
adc
(bad)
mov
dec
icebp
or
arpl
jmp
jmp
sub
cli
mov
enter
in
adc
cmp
fs
adc
fucom
popf
hlt
xor
shl
xchg
pop
xlat
test
push
jno
scas
(bad)
retf
arpl
stos
sub
pop
fidiv
movs
stos
(bad)
aaa
or
test
jmp
xchg
js
push
popf
ins
popf
add
inc
add
push
mov
mov
movs
jbe
cli
cmp
cmp
add
retf
movs
push
jne
loop
leave
cmp
mov
xchg
mov
mov
stos
mov
xlat
cmp
cmp
and
je
push
(bad)
cmp
xor
stos
mov
mov
mov
hlt
sbb
sti
pop
push
cmp
adc
mov
mov
fadd
call
adc
xor
mov
les
outs
loopne
rcl
mov
test
push
aaa
xchg
sar
ss
ja
push
inc
push
push
pop
cmp
iret
jge
jmp
loope
in
push
cmp
leave
clc
or
pop
mov
dec
(bad)
xor
jnp
fmul
pop
pop
and
es
mov
inc
sub
mov
rol
cmp
nop
mov
and
pop
fisttp
popf
mov
and
test
(bad)
ins
xchg
xor
aaa
call
mov
fwait
aas
mov
cmps
add
sub
xchg
dec
ja
dec
jmp
or
xchg
push
lods
ins
push
xor
int3
popa
sub
cmc
lock
adc
mov
leave
sbb
sti
sbb
bound
frstor
mov
push
or
cmc
inc
mov
popa
jnp
cmps
mov
lea
adc
push
das
mov
popf
(bad)
sti
xor
xchg
push
xor
sbb
(bad)
fmul
out
inc
inc
je
sbb
add
pop
dec
(bad)
mov
call
fstp
outs
xor
aaa
jbe
pop
out
sbb
test
sar
mov
xchg
adc
jmp
lahf
les
in
mov
push
push
push
movs
or
inc
sahf
add
retf
cmp
sbb
jle
cmp
mov
shr
imul
lods
test
adc
ds
outs
popa
out
mov
push
mov
or
mov
fld
adc
xor
cld
pushf
out
pop
scas
ja
vpmacsdql
jno
repz
lahf
and
mov
stos
aaa
mov
mov
out
sbb
cmp
xlat
push
or
jg
sahf
enter
movs
dec
and
int3
mov
test
not
in
ins
dec
retf
and
shl
scas
in
and
aad
ret
ror
sub
in
mov
popf
scas
xchg
scas
fs
out
imul
jl
out
pop
push
mov
lahf
xor
mov
pop
(bad)
fild
mov
in
jecxz
jmp
mov
in
or
les
or
cwde
sub
push
std
imul
imul
push
leave
sub
inc
inc
jmp
jo
icebp
lods
in
dec
cmp
fs
cmp
mov
loope
pop
ds
inc
sbb
mov
retf
jb
mov
aad
ret
mov
in
mov
mov
adc
lods
push
leave
and
sub
mov
jo
lods
xchg
adc
shl
adc
jne
sub
or
cmps
fisub
pushf
add
push
jmp
ss
dec
ds
pusha
outs
mov
out
(bad)
xor
inc
xchg
inc
add
sbb
jbe
mov
ins
aas
pusha
xor
jge
out
fisttp
cmc
jne
sub
push
push
fdivr
or
and
mov
and
pop
inc
sub
cmps
enter
lods
push
ss
test
fsub
stc
or
jmp
pop
bound
(bad)
push
data16
pop
cmp
int3
pusha
sub
lds
lods
out
sbb
call
cmp
test
mov
lahf
or
and
hlt
dec
mov
add
in
jno
sar
outs
shr
cmps
test
pop
and
xor
adc
inc
ret
sbb
fwait
adc
std
sub
sub
movs
xor
imul
mov
lds
cmp
popf
out
mov
out
xor
mov
(bad)
mov
inc
pusha
pop
outs
pop
cmps
es
in
addr16
mov
mov
loope
push
scas
fild
push
dec
mov
xor
into
add
xchg
xor
repz
test
jle
pusha
rol
cmp
sub
add
fstp
push
mov
movs
int3
pop
in
pop
sub
and
sub
xchg
mov
dec
pop
jns
ds
std
fsubr
aaa
pop
repz
cmp
and
ss
fisttp
add
call
push
sub
and
mov
dec
popa
imul
sbb
push
adc
xchg
mov
scas
in
vpexpandq
ret
mov
fs
stos
add
data16
cmp
xchg
hlt
sbb
fsub
loop
xor
jns
adc
popa
or
push
pusha
sbb
fst
xchg
gs
movs
repz
jnp
daa
repz
push
int3
outs
mov
(bad)
fbld
sub
test
pop
cmp
ret
push
adc
fstp
push
fwait
and
shl
dec
movs
repz
xchg
out
cmp
mov
(bad)
dec
mov
sbb
pop
das
in
cmp
(bad)
addr16
aas
movs
sub
pop
jno
mov
jo
push
outs
and
das
(bad)
(bad)
aaa
test
jl
ss
mov
mov
cli
pop
mov
sbb
ret
fwait
retf
jo
cli
call
stc
(bad)
fst
add
mov
out
pop
icebp
pop
jp
jge
and
sub
(bad)
and
in
ja
inc
dec
aas
xchg
cmps
(bad)
test
xchg
mov
or
mov
mov
enter
cmp
or
(bad)
(bad)
pop
fiadd
xor
out
adc
dec
jne
(bad)
retf
adc
dec
mov
xchg
xlat
cmc
clc
movs
pop
data16
fstp
imul
add
jl
imul
dec
pop
jmp
or
push
xchg
dec
dec
fistp
jmp
push
sub
add
dec
mov
push
push
xor
imul
dec
arpl
inc
movs
push
cmp
inc
retf
movs
pop
add
adc
sbb
push
fnstsw
mov
jnp
xchg
adc
sub
push
outs
mov
(bad)
mov
pop
mov
ss
popf
sub
lock
push
loope
into
mov
popf
pop
in
push
mov
mov
xchg
adc
push
xchg
add
test
out
call
and
nop
xchg
xor
jns
fsubr
xchg
mov
pop
push
and
adc
fcmovne
xor
or
mov
cmp
dec
push
xchg
les
std
outs
ret
sbb
jnp
call
ins
movs
cmp
div
outs
or
(bad)
cmc
push
daa
or
fcos
xor
xor
sub
std
sbb
(bad)
dec
add
mov
jg
and
sub
fcom
push
int3
loop
cli
jg
dec
mov
pop
xchg
xor
aaa
call
cld
in
pop
jno
mov
test
ds
mov
mov
cmp
movs
(bad)
sti
scas
dec
mov
mov
xor
jo
ss
mov
push
inc
idiv
fwait
inc
inc
jecxz
inc
or
jg
pusha
sahf
fdivp
jle
jb
call
sar
mov
pop
mov
dec
ja
inc
add
jle
adc
cmc
push
mov
fld
mov
(bad)
push
jns
out
push
add
pop
inc
cmc
fiadd
adc
mov
push
shr
sub
and
pushf
shl
scas
adc
fnstcw
idiv
and
mov
push
cdq
push
inc
mov
push
repz
xor
aaa
aad
ss
cmp
movsx
jmp
test
retf
icebp
mov
std
sub
dec
cmp
aaa
loopne
call
adc
add
std
sbb
leave
inc
daa
sbb
js
push
xlat
pusha
popf
xchg
jne
iret
or
mov
jb
jg
xor
cmp
sub
add
bound
out
adc
mov
or
fmulp
les
outs
rcl
fwait
ss
cli
add
push
sub
mov
mov
test
mov
lahf
iret
or
lock
sub
(bad)
int
(bad)
not
jle
inc
xchg
fnstenv
std
mov
in
pop
push
and
popf
ret
and
cmps
jo
loopne
add
(bad)
in
mov
sti
idiv
sbb
shl
jne
cmp
adc
dec
push
fbstp
add
faddp
sar
sub
rcr
mov
mov
aad
jmp
and
jae
je
cmp
lds
or
or
fs
outs
retf
xchg
jp
ins
push
mov
ds
or
jge
scas
in
or
add
popa
(bad)
fistp
xchg
repnz
adc
dec
(bad)
test
pop
xor
xchg
sub
das
dec
out
mov
mov
fwait
rep
cli
and
test
push
add
pop
lds
lods
add
daa
jo
mov
fistp
retf
sub
bt
popa
dec
jmp
aam
cld
jmp
lahf
pop
ret
outs
dec
inc
mov
(bad)
pushf
sbb
mov
sbb
cmp
pushf
loopne
(bad)
out
sti
daa
dec
fstp
add
push
(bad)
not
daa
cmp
mov
add
adc
shr
and
dec
mov
cmp
add
lahf
xchg
aas
outs
push
cmp
dec
add
in
dec
sbb
js
jno
mov
and
and
shr
int
js
and
pop
scas
iret
jle
mul
adc
jp
ins
sbb
call
lods
cmps
pop
xor
sar
pop
sub
ror
pop
or
fsubr
fs
je
adc
xor
xlat
push
or
mov
fcom
adc
fidivr
mov
sar
lahf
pop
cld
movs
pop
push
neg
jmp
popf
repnz
in
out
adc
mov
jmp
sbb
(bad)
in
or
shr
jmp
pop
ror
xor
inc
or
inc
mov
loopne
add
xchg
fld
lods
js
add
test
(bad)
adc
and
in
faddp
dec
sub
repnz
sbb
repnz
and
mov
pop
mov
dec
int3
fwait
cdq
push
retf
repnz
aaa
rol
inc
mov
scas
xchg
(bad)
push
xor
add
out
cmc
fdivr
movs
rol
inc
jae
mov
test
(bad)
xchg
cwde
test
cwde
pop
push
add
imul
xchg
neg
sub
int3
ficomp
movs
mov
out
loop
dec
xor
mov
sbb
cli
clc
jecxz
dec
cmc
nop
sar
fsubr
cs
fsubr
sbb
xchg
mov
aaa
add
cmc
xchg
pop
cmp
test
test
cmp
sub
sub
dec
out
pop
or
sbb
mov
sbb
cmp
and
sbb
fidiv
inc
adc
sub
jecxz
dec
in
sbb
addr16
and
xor
adc
loop
(bad)
adc
test
ret
or
ret
mov
repnz
mov
inc
imul
ror
jmp
push
mov
test
data16
ja
push
rcr
mov
mov
xchg
push
je
test
int
pop
mov
(bad)
fucomp
mov
sub
pop
pop
jecxz
pop
lds
lods
add
jmp
jnp
cwde
cmp
inc
js
jmp
push
sbb
aas
sub
(bad)
fs
cmp
imul
xchg
push
and
rol
sahf
pop
dec
cmp
xchg
dec
loopne
jge
enter
fdivr
xor
and
xchg
and
mov
sbb
lods
cmp
pop
push
aas
fwait
inc
adc
adc
pop
dec
sbb
mov
les
fstp
xchg
sub
add
stos
jge
movs
lock
test
mov
imul
add
rol
jmp
jne
inc
xchg
(bad)
ss
mov
ins
stos
sbb
sbb
out
inc
cld
sub
cmp
mov
sub
push
or
fcmovu
add
je
jns
out
mov
retf
ret
bound
test
ficomp
or
xchg
fs
cli
dec
jp
xchg
adc
stos
push
(bad)
fild
lods
push
xchg
test
sahf
movs
stc
cmp
frstor
or
scas
test
in
es
pop
out
icebp
data16
xchg
jnp
popf
js
cmp
es
jnp
cmps
test
retf
push
aam
inc
push
xchg
jp
adc
mov
push
pop
in
dec
xchg
fwait
mov
xchg
push
jae
inc
mov
and
mov
fdivr
mov
repnz
(bad)
jmp
sub
dec
push
sub
mov
fsub
in
es
stc
mul
loopne
js
add
lock
sub
fisub
dec
cmp
aas
sbb
sub
fst
sub
inc
rcl
sahf
add
out
jg
test
ja
mov
(bad)
nop
pop
push
out
push
sub
pmulhuw
js
cli
pop
cmps
les
fisttp
or
pushf
and
sbb
adc
and
jae
xchg
(bad)
test
jbe
cmp
outs
fs
lock
gs
movs
mov
(bad)
shl
push
fild
cdq
pop
push
mov
f2xm1
pop
jge
jg
mov
cmp
sub
sub
adc
and
mov
jnp
cld
int3
jecxz
shl
repnz
test
mov
xor
mov
cmp
add
push
mov
int3
in
sti
pop
or
ins
stos
arpl
cld
sbb
and
and
(bad)
es
or
rol
xlat
ror
jmp
je
cwde
and
leave
inc
fidiv
rol
and
pop
inc
cwde
jb
adc
(bad)
sbb
sti
mov
pandn
sti
loopne
mov
mov
pop
pop
cmp
ror
aas
xor
fs
in
stc
fadd
imul
adc
xchg
retf
lahf
fadd
mov
popa
into
mov
mov
cmps
add
ins
stc
ss
xor
mov
jae
push
aaa
mov
adc
xlat
sub
push
lock
popf
in
ins
mov
fst
sub
(bad)
(bad)
not
pop
aad
mov
loopne
mov
cs
aaa
cld
sbb
scas
pushf
mov
inc
pop
imul
int
fdivr
das
bound
cmp
adc
push
icebp
cmps
cmp
ret
data16
inc
jae
cmps
test
cmp
lahf
pop
push
mov
in
cmp
addr16
inc
mov
mov
sub
push
fst
stc
pop
retf
imul
ret
inc
sbb
nop
bound
inc
out
cmp
imul
std
aam
test
pop
daa
or
popf
sub
retf
mov
jle
add
xchg
repnz
mov
mov
call
cmp
mov
push
outs
mov
cmps
mov
imul
out
dec
mov
cmc
imul
outs
pop
loop
mov
imul
test
mov
rol
pop
cdq
cmp
and
and
out
inc
lods
stc
repnz
xor
sbb
push
inc
push
arpl
scas
jle
and
adc
cmps
pop
fwait
jp
jbe
es
stc
mov
jg
inc
jle
adc
xchg
bound
or
xchg
jecxz
shl
in
mov
ja
fiadd
sbb
cmp
add
adc
sahf
or
sbb
pop
push
xchg
pop
cdq
jp
mov
jecxz
scas
or
push
test
aaa
mov
xchg
dec
fstp
xchg
call
in
cmp
rcr
daa
test
test
not
xlat
aad
fnstenv
mov
cmc
mov
pushw
and
pop
cmps
dec
rol
xchg
test
mov
adc
adc
cmps
xchg
xchg
ins
pop
adc
sbb
sar
cs
mov
jo
cwde
enter
add
sub
aaa
adc
loope
jno
pop
ret
mov
cmps
jg
arpl
test
cmps
repz
add
or
push
ss
vmovsd
sbb
loope
cmp
hlt
test
iret
xchg
xor
cmp
mov
outs
pusha
dec
imul
push
mov
cmp
fild
adc
aam
inc
or
mov
xchg
cmp
call
fdivr
aam
or
sbb
test
rcr
or
repz
int3
cs
fldcw
ret
cmp
add
jle
fiadd
daa
test
mov
xchg
dec
jge
mov
adc
push
lea
ja
(bad)
jmp
outs
pushf
outs
or
mov
jle
int3
mov
sub
loope
mov
mov
cmps
stos
rol
mov
dec
sub
leave
int3
inc
mov
mov
push
ret
js
inc
pop
jnp
out
test
out
(bad)
xor
ins
lock
mov
jp
push
arpl
fsubr
adc
imul
sar
mov
jp
and
cmp
cmps
adc
mov
in
sub
outs
sub
std
es
mov
cmp
test
mov
lahf
(bad)
repz
cmp
icebp
fiadd
dec
push
les
out
test
rcl
outs
sbb
scas
cmp
xchg
(bad)
cmp
jo
cli
daa
es
and
fst
mov
(bad)
mov
inc
std
mov
dec
pop
dec
(bad)
fisttp
jnp
gs
stos
push
pusha
fdiv
dec
inc
fwait
test
xchg
pop
mov
out
idiv
dec
daa
dec
cmc
jnp
mov
jge
mov
adc
mov
push
out
in
fincstp
retf
fisttp
test
adc
movs
retf
ja
enter
mov
add
xchg
lods
pusha
mov
popf
in
sub
mov
lea
je
ins
lock
mov
inc
dec
jo
pop
push
sbb
xchg
adc
and
and
jnp
scas
jb
adc
int3
mov
and
clc
xchg
adc
repz
shl
ds
pop
bound
push
mov
cs
lds
leave
daa
jnp
xchg
adc
ins
ror
pusha
int
mov
xor
mov
jae
and
clc
ss
mov
out
xlat
mul
aad
or
xor
popf
fwait
adc
fstp
jp
test
in
add
gs
push
pop
or
repnz
inc
xchg
dec
in
mov
out
loop
cmp
call
ffree
pop
mov
lock
and
jmp
gs
out
in
shl
mov
and
iret
retf
clc
repnz
es
cmp
sbb
ds
and
xor
pop
cwde
cwde
clc
(bad)
jl
fsubr
xor
xor
aas
dec
je
out
test
sbb
inc
xor
sub
push
jecxz
gs
loop
les
in
lahf
push
(bad)
dec
sbb
adc
inc
push
shr
movs
mov
cmp
adc
cmps
ret
pop
fistp
mov
and
mov
test
cmp
xchg
cmp
cmp
or
aaa
stos
jmp
(bad)
adc
sar
add
xchg
cmp
push
es
clc
jne
adc
ror
js
iret
dec
adc
add
outs
push
adc
mov
cmp
or
test
pop
mov
daa
mov
mov
into
xor
test
(bad)
xlat
loope
jl
xchg
(bad)
sti
jp
lods
mov
pop
and
push
push
dec
fimul
jmp
xor
cmp
inc
jae
push
add
in
or
mov
pop
aaa
cmp
ins
lahf
das
or
ror
xor
cmp
cmp
xor
clc
fucomip
gs
lods
mov
push
stc
lods
xchg
cmovns
int
aas
dec
jmp
movs
cmp
mov
fst
(bad)
pop
xor
jnp
cmps
sahf
lock
aad
call
data16
adc
push
int3
sahf
test
movs
ror
retf
push
movs
adc
xchg
mov
js
cmp
xor
cmps
call
es
xor
adc
pop
mov
cmp
lods
fadd
and
aad
cld
arpl
mov
mov
or
cmp
or
xor
xlat
popa
push
mov
sub
enter
xchg
mov
test
push
jmp
inc
imul
mov
sbb
push
jno
sub
icebp
xor
fdivr
jmp
psubsb
int3
sbb
(bad)
lock
icebp
arpl
jmp
and
xchg
push
lahf
jae
sbb
dec
rcl
jo
(bad)
out
ds
mov
mov
aas
js
jmp
and
jmp
lods
xchg
or
xor
nop
push
cmps
add
gs
and
jle
(bad)
jb
cs
ret
clc
jne
jns
jecxz
hlt
sbb
sar
sub
pop
push
mov
clc
xchg
add
jne
mov
jb
sbb
pop
jno
push
(bad)
lahf
dec
div
rcl
fmulp
jno
pop
mov
fild
adc
(bad)
cmc
data16
in
outs
test
ss
pop
test
jmp
shl
int3
ja
nop
ret
dec
inc
in
inc
push
imul
repz
cld
lods
(bad)
loop
pushw
jb
out
sbb
cwde
hlt
repnz
or
sbb
cmp
lods
into
pop
pop
loopne
push
jnp
sbb
imul
mov
sub
enter
test
or
push
mov
pop
retf
mov
rcl
adc
and
inc
push
imul
in
nop
push
mov
sub
cmp
ret
mov
sub
mov
cdq
or
jle
sbb
data16
and
cmp
sub
push
sub
inc
xchg
cs
cs
dec
scas
sbb
add
mov
mov
mov
jns
inc
stos
adc
push
mov
fsubr
dec
icebp
xor
aam
xor
sti
lahf
push
repz
data16
cmp
int
and
lahf
push
mov
loop
(bad)
push
pop
sar
dec
jmp
rcr
xchg
pop
int
retf
push
sti
xor
cmp
xchg
mov
pop
retf
test
xor
fidivr
adc
mov
dec
ss
mov
outs
ret
add
jno
add
ret
arpl
es
test
xchg
and
pop
lahf
inc
js
push
inc
mov
xchg
lods
mov
cmps
push
pop
std
xor
jmp
cdq
jg
or
xor
xchg
(bad)
cmp
sbb
jb
jmp
ret
push
iret
push
mov
fiadd
mov
xchg
sbb
loopne
xchg
sub
es
push
mov
fs
mov
sbb
or
call
inc
sbb
std
fyl2x
dec
or
sub
xchg
movs
xlat
sbb
add
mov
lea
xor
data16
mov
call
popw
jle
mov
xor
adc
xor
push
test
xchg
jno
sbb
add
sub
stc
and
push
push
(bad)
inc
cs
inc
jg
lahf
jae
imul
sub
cmps
dec
fild
popf
cwde
xchg
fs
popf
push
int
fwait
add
mov
xchg
pusha
add
aam
and
outs
aam
inc
stos
mov
leave
and
mov
mov
ins
fs
xor
cmp
pop
push
pop
push
pop
dec
cmps
(bad)
pusha
pop
addr16
jnp
enter
jb
jns
pop
fs
out
sub
add
mov
or
outs
shr
and
pop
mov
push
js
add
in
sub
scas
mov
mov
jg
out
cmp
or
inc
pusha
jg
dec
jp
add
xor
popa
adc
xor
aam
jecxz
and
mov
pop
inc
mov
movs
es
test
jle
data16
icebp
xor
and
xor
cmc
dec
cmps
std
pop
adc
cmp
outs
and
fnstsw
and
out
rcl
or
xor
into
cmp
fadd
packsswb
fmulp
and
out
cdq
mov
cmps
push
mov
mov
pop
fidiv
mov
add
out
movs
jnp
mov
hlt
(bad)
xor
mov
dec
pop
(bad)
mov
sbb
mov
lea
sbb
in
jge
or
cmp
loopne
and
mov
into
ror
xchg
pop
add
xor
sub
sbb
dec
and
mov
shr
cs
inc
fwait
xor
push
int
and
scas
aas
and
inc
pop
retf
jb
jp
(bad)
jae
jbe
push
movs
mov
inc
sbb
xor
jno
aas
mov
fild
js
(bad)
(bad)
push
rcr
outs
adc
jl
lds
call
pop
mov
mov
gs
jmp
pop
ret
mov
push
call
jno
in
or
cmps
test
adc
aas
nop
add
jp
sbb
rol
inc
retf
pop
cmp
push
sub
cmps
adc
mov
jmp
(bad)
mov
xchg
jecxz
push
hlt
sahf
ror
cmp
xor
cmp
or
idiv
push
pusha
test
xchg
pop
jne
sbb
jmp
outs
mov
nop
push
cmps
jb
dec
pusha
mov
mov
jb
(bad)
addr16
lods
addr16
imul
sahf
pusha
stc
out
push
push
add
inc
xchg
dec
inc
sbb
cmps
iret
xchg
xlat
ror
xchg
jmp
pop
sub
retf
add
add
mov
adc
hlt
adc
cdq
ret
enter
cdq
sbb
dec
mul
daa
sub
xchg
test
sub
stos
inc
dec
push
ret
aam
dec
retf
int
cmp
enter
pop
sbb
das
je
clc
sub
mov
mov
pop
adc
sub
mov
inc
adc
cmp
andps
xor
dec
mov
jl
adc
(bad)
out
aas
mov
lods
xor
push
gs
sbb
mov
fwait
or
sbb
dec
rol
sub
inc
cld
addr16
enter
cmp
adc
fwait
lock
sub
mov
shl
gs
out
aas
jge
mov
pusha
jecxz
ins
jp
xor
add
xlat
dec
add
loopne
fcomip
or
pushf
enter
(bad)
gs
lods
push
push
mov
jae
jl
and
xor
adc
adc
cmp
push
jb
mov
lahf
les
in
sub
in
fimul
cmc
mov
lea
dec
push
lds
nop
mov
fmulp
(bad)
cdq
pop
out
xchg
movs
bnd
clc
push
push
jp
(bad)
rcl
repz
jbe
rcr
add
repnz
test
into
mov
mov
xchg
ins
xchg
mov
cmp
cld
out
test
out
not
cmc
mov
ror
and
call
sub
push
adc
test
mov
fdivr
out
jmp
ror
in
pop
sbb
mov
je
xchg
add
fsubr
pop
mov
sub
or
fidivr
sub
retf
jge
in
adc
mov
es
xchg
loope
pop
sub
sbb
fld
inc
(bad)
mov
ss
dec
ror
loope
pop
mov
int
int3
sbb
int
repnz
cmp
and
push
aam
fisub
data16
test
ror
int
scas
cmp
mov
adc
fistp
lahf
mov
repz
cdq
into
call
mov
adc
and
in
repnz
(bad)
adc
ja
pop
loop
push
cs
push
jnp
das
inc
lahf
pop
ror
popf
push
lods
stos
mov
pushf
mov
mov
and
cmps
jb
(bad)
pop
scas
add
cld
or
sbb
daa
xor
sub
mov
adc
movs
iret
aad
ins
xchg
dec
push
ss
xchg
cwde
mov
aam
add
sbb
aad
xor
aas
rcr
leave
sti
add
std
inc
arpl
xor
adc
add
imul
lahf
adc
mov
mov
js
(bad)
adc
and
xchg
push
ds
add
mov
sahf
aam
add
into
push
dec
(bad)
mov
mov
sti
add
clc
mov
push
cmps
ret
xchg
pop
js
and
jbe
dec
add
jp
or
out
push
pop
test
add
lea
mov
push
mov
ret
fs
ins
sbb
sub
xchg
and
rcr
fs
nop
(bad)
mov
test
in
ds
mov
sub
aad
ss
mov
es
in
mov
fist
outs
popf
xor
sub
shr
add
cld
fs
mov
aaa
pop
add
adc
in
sub
push
je
daa
cld
xor
stc
out
dec
mov
pop
pop
cli
inc
lock
ins
xchg
cmp
mov
adc
xchg
mov
jl
dec
aaa
in
js
jne
pushf
mov
jl
dec
leave
lahf
out
outs
xchg
fs
loope
inc
inc
mov
add
cmps
arpl
stc
dec
inc
leave
aad
mov
sub
(bad)
icebp
add
stc
sbb
cmp
icebp
test
cmc
jno
xor
popa
and
jno
and
and
or
or
push
mov
and
and
loopne
xor
mov
scas
push
xchg
fcom
or
add
rcl
in
sbb
xor
call
jno
mov
(bad)
push
inc
ja
(bad)
push
jmp
pop
mov
and
lock
scas
add
lahf
mov
mov
adc
sahf
mov
cmc
fstp
rol
xchg
ja
movs
dec
pushf
push
rol
jp
pop
dec
icebp
rcr
cmp
cwde
(bad)
cwde
add
add
sar
icebp
sub
mov
in
in
jno
(bad)
sbb
mov
aaa
enter
outs
xor
lahf
ins
in
xchg
mov
push
adc
aam
shl
call
xlat
xor
jge
mov
lods
mov
popa
xchg
fcmove
inc
sbb
retf
cmps
push
jno
push
out
mov
inc
aaa
popa
pop
inc
push
adc
adc
fld
test
push
jl
push
inc
fwait
push
adc
rcr
jns
stos
ficom
jl
pop
xchg
jno
mov
sar
jmp
stos
mov
mov
add
adc
test
cmp
mov
push
dec
mov
jb
xchg
pop
repz
xor
mov
xchg
jno
outs
jmp
dec
arpl
pop
pop
stc
xor
inc
fst
push
mov
jecxz
xchg
cmp
cmp
or
aaa
push
lds
push
out
lods
fisub
xor
pop
add
mov
push
daa
pop
sub
rol
and
out
shr
sub
adc
test
or
add
xchg
cmp
jl
xchg
data16
imul
jge
test
mov
push
les
das
and
rcl
jno
ds
loop
dec
sbb
stos
jge
neg
int3
sub
xchg
dec
fsub
movs
ret
or
outs
xor
dec
sub
aas
mov
loopne
adc
lock
call
push
ja
and
jl
gs
fcomp
cmp
out
pop
add
mov
push
add
je
movs
lods
mov
pop
loopne
fld
ja
rcl
leave
xchg
pusha
popf
dec
xchg
popa
xor
ja
fld
inc
push
shl
xchg
push
les
sbb
inc
adc
rcl
inc
adc
cmp
out
cmp
pop
rcl
addr16
loopne
ror
into
pushf
inc
mov
popf
movs
aas
inc
sub
aaa
cmps
sub
add
xor
add
fst
jp
and
xor
test
pop
mov
xor
xor
fld
scas
xor
cmp
mov
pop
add
hlt
cmp
or
dec
call
scas
sbb
outs
sub
inc
jecxz
mov
hlt
jo
pop
mov
dec
cmp
cmp
arpl
push
bnd
mov
jmp
pop
xor
imul
cmp
mov
fisubr
push
inc
sub
adc
xor
test
add
dec
jecxz
hlt
push
mov
cmovnp
test
int
and
fcmovb
scas
mov
mov
test
jmp
dec
push
pop
push
mov
inc
sbb
outs
lds
test
push
neg
movs
popa
jno
inc
push
daa
iret
ja
jle
jecxz
movs
in
add
dec
hlt
jns
repz
in
in
adc
dec
adc
and
push
or
inc
into
add
test
xchg
test
add
cld
arpl
lock
push
int
cmc
shl
stos
vcvtps2dq
sar
imul
sbb
add
cmp
sbb
cmp
scas
dec
arpl
push
cwde
mov
or
mov
popa
jb
popf
lds
mov
lock
mov
(bad)
mov
xlat
adc
and
cdq
inc
or
pop
fcom
cmps
or
xor
std
pushf
add
and
add
xchg
sbb
out
inc
push
fcmove
inc
and
jae
mov
mov
add
mov
dec
int
push
call
jae
daa
mov
mov
pop
mov
or
nop
ins
out
push
or
into
js
test
pop
push
sub
scas
leave
sub
fld
es
adc
jo
mov
test
jno
and
fadd
fst
retf
dec
outs
dec
mov
jg
stc
push
int3
lods
mov
int3
mov
inc
xor
stos
aad
es
dec
push
repz
cld
xchg
push
mov
push
loopne
shl
js
loope
in
call
cmps
mov
lods
ins
adc
jns
aam
movs
pop
fxch
not
test
jnp
ss
adc
mov
mov
dec
or
pop
imul
loop
rcl
bound
dec
outs
push
sub
or
int
add
inc
shr
xchg
rol
in
cmp
rcr
shl
inc
cmp
loope
mov
jg
and
dec
adc
inc
add
cmp
dec
inc
inc
and
push
xchg
test
ss
adc
xor
jo
out
add
inc
or
fwait
mov
cld
repnz
js
or
arpl
popf
dec
mov
gs
test
and
and
ds
push
add
shl
cmp
es
or
inc
sbb
(bad)
arpl
test
mov
popa
mov
pop
dec
mov
and
mov
xchg
inc
call
mov
cmp
loopne
mov
jge
cmc
lds
cmc
mov
xor
jg
loop
add
les
fcomp
xchg
arpl
mov
cs
push
pop
cmc
dec
ds
pop
sbb
or
pop
in
pop
mov
in
in
mov
int3
dec
add
sbb
mov
ror
jo
jp
idiv
arpl
pop
(bad)
out
push
mov
es
add
rcl
jae
xchg
fld
jge
inc
lds
aad
xchg
adc
push
stos
out
fcom
mov
scas
aad
repz
add
lahf
jle
adc
movs
(bad)
fild
icebp
and
sbb
pop
push
mov
xchg
sub
loopne
inc
sbb
dec
xor
test
jne
or
add
or
sub
adc
scas
popa
sbb
cmp
fs
(bad)
cmps
aaa
or
xchg
repnz
js
pop
outs
rcl
xchg
imul
repz
cdq
or
(bad)
and
rcr
pop
icebp
dec
pop
(bad)
cmp
fldenv
add
push
pusha
or
lahf
push
sbb
mov
scas
sub
cli
jb
stos
xchg
sub
in
sbb
xor
test
das
push
or
cs
pop
in
fild
mov
jb
leave
inc
pop
cmp
ret
mov
ja
setb
ins
arpl
fmulp
mov
mov
arpl
addr16
fistp
into
adc
loopne
add
repz
dec
ins
mov
ret
popa
adc
mov
aam
aas
inc
retf
pop
popf
rcr
es
aas
lds
out
fist
lds
sbb
mov
test
repz
sub
and
repnz
adc
mov
pop
jecxz
fcomp
and
xchg
xlat
sbb
mov
and
enter
sub
cld
repz
fild
fidiv
outs
scas
add
and
xor
imul
xchg
xchg
push
ja
xchg
test
pop
jae
adc
push
ret
sbb
jecxz
fcom
in
jge
ja
or
jne
imul
jns
fld
(bad)
sub
popa
rcr
movs
dec
mov
test
push
ins
xchg
dec
and
mov
mov
nop
dec
clc
ret
stc
cwde
push
pop
sbb
pop
pop
push
sbb
mov
xor
cs
jnp
test
adc
jmp
addr16
mov
cmp
xchg
jo
adc
adc
jns
cmp
cld
mov
or
push
(bad)
into
test
or
mov
mov
stc
and
xchg
xchg
scas
mov
and
outs
iret
je
jnp
call
sahf
shr
add
mov
sub
mov
cs
dec
imul
ss
and
jo
or
sbb
push
or
aam
pusha
jl
dec
mov
mov
sub
jl
pop
xchg
or
fcomp
add
push
pusha
adc
sub
inc
fst
xchg
loopne
mov
xchg
cmp
or
les
and
(bad)
aad
inc
test
mov
adc
rcr
sub
movs
test
jno
sbb
xor
sbb
fld
jle
xor
fwait
sub
ret
fistp
sub
adc
stos
out
stos
popf
dec
pushf
(bad)
mov
adc
mov
in
ret
pop
adc
sub
pop
jg
(bad)
dec
xchg
xchg
sbb
or
adc
call
and
out
xchg
fild
mov
sar
jb
xchg
mov
(bad)
mov
add
sub
movs
outs
xchg
adc
mov
in
xchg
cmp
or
popa
sbb
mov
pop
or
mov
(bad)
fs
les
int
stos
jle
(bad)
add
mov
adc
xchg
sbb
ror
fcomp
pop
outs
aad
mov
xchg
inc
ds
sub
dec
iret
push
mov
data16
add
mov
push
and
loop
(bad)
mov
mov
int3
sar
add
push
mov
fld
jne
jmp
mov
loope
cmps
mov
pop
neg
mov
xor
lods
xor
int3
lods
adc
xchg
out
sub
push
cmp
xor
push
push
enter
xchg
call
lods
adc
stos
xchg
mov
jnp
or
rcl
cmp
or
cmp
inc
loope
(bad)
pop
sub
sub
pop
test
mov
dec
mov
fwait
js
jmp
hlt
lock
cmp
sbb
inc
enter
mov
push
aad
idiv
jno
outs
arpl
scas
pop
pushf
lods
mov
pop
dec
int
into
inc
fiadd
out
cmp
inc
test
inc
test
push
(bad)
dec
les
cwde
dec
(bad)
cdq
fdivr
mov
mov
scas
loopne
rcr
js
adc
inc
das
pop
call
sub
xchg
shr
loop
jnp
loope
icebp
ins
push
cmc
push
sub
and
repnz
daa
sbb
jno
jae
inc
push
mov
jne
popf
lock
outs
enter
daa
jno
inc
pop
lahf
mov
ja
xor
popf
mov
das
dec
shr
dec
xor
rep
xor
sbb
mov
mov
dec
loop
ins
cli
mov
inc
mov
dec
xlat
adc
jl
ja
add
mov
repnz
(bad)
bound
mov
push
in
mov
sub
loop
popa
les
push
aas
dec
sub
jno
es
(bad)
(bad)
test
cmp
sbb
(bad)
jle
cmp
xor
sbb
leave
and
mov
lods
fwait
mov
adc
sbb
je
and
mov
das
pop
push
aas
sbb
adc
sub
icebp
mov
sti
sub
cmps
movs
sahf
mov
or
cwde
pop
sub
and
fwait
inc
mov
movs
nop
mov
cmp
xor
xor
sub
mov
shl
nop
rcl
mov
pusha
lock
fcomi
and
loope
add
jo
loope
push
mov
pop
inc
in
imul
ret
fs
mov
or
mov
leave
pop
jge
sahf
sub
lods
mov
push
in
push
ja
cli
bound
mov
mov
mov
xlat
push
aam
sbb
or
sbb
popf
xchg
or
mov
sbb
mov
mov
or
shr
test
mov
dec
dec
push
mov
or
sub
pop
(bad)
and
loopne
push
pop
mov
in
mov
adc
jb
mov
cmp
mov
daa
mov
in
int3
xchg
jo
aam
xor
fisubr
std
xor
push
jns
scas
rcl
jp
and
pop
bound
loopne
cmp
(bad)
mov
out
imul
adc
jns
add
imul
sbb
stos
out
mov
cmc
ins
jbe
jmp
inc
icebp
xor
sbb
cdq
push
leave
or
sub
outs
fdiv
(bad)
lods
pop
sbb
(bad)
outs
cmp
cs
jge
arpl
bound
shr
ins
cld
or
les
mov
into
cmp
push
dec
or
add
shr
loopne
push
jl
out
lahf
mov
sbb
psubsb
mov
dec
stos
push
dec
call
mov
(bad)
daa
shl
jo
mov
inc
lods
mov
pop
and
and
and
push
aam
sub
rcl
aas
xchg
sub
push
int3
adc
enter
push
jns
or
out
xchg
cmps
pop
int3
enter
iret
jnp
jge
mov
push
outs
cmp
dec
mov
psrad
cli
icebp
idiv
mov
inc
pop
call
ss
mov
fmul
nop
xor
inc
mov
xchg
xchg
fldenv
mov
mov
nop
add
cwde
jns
iret
retf
push
jmp
frndint
mov
adc
jle
test
lods
sub
mov
cmps
enter
(bad)
imul
inc
inc
fs
and
xchg
push
dec
cmc
pop
lods
sbb
add
enter
add
adc
pushf
sub
cmps
jns
int
repnz
mov
(bad)
pop
push
arpl
cmp
mov
mov
shl
pop
jmp
pop
sti
mov
push
nop
pushf
loopne
mov
js
out
adc
pop
jns
dec
ins
sahf
inc
sub
repz
arpl
mov
adc
test
mov
in
cmp
add
ret
ss
enter
xchg
in
pop
adc
movs
mov
pop
and
(bad)
(bad)
mov
out
sbb
or
lods
lahf
out
push
(bad)
sbb
fisub
add
inc
movs
out
pusha
push
aas
jle
inc
cmp
xchg
dec
dec
xor
cmps
sub
(bad)
adc
rcr
jns
into
shr
xor
mov
lds
mov
sub
push
mov
pop
outs
inc
adc
data16
cmps
retf
fisttp
inc
sbb
add
jb
ror
jno
mov
cmp
inc
cmp
and
stc
stc
xor
or
xor
data16
lods
popa
mov
fisubr
imul
pop
je
fs
sub
(bad)
lahf
mov
xchg
pop
mov
loop
add
push
(bad)
iret
ja
leave
jne
(bad)
xor
and
jne
and
and
add
std
push
retf
loopne
(bad)
repz
std
in
inc
jl
mov
idiv
test
pop
mov
dec
sub
ja
hlt
and
div
addr16
mov
out
out
xor
cmp
cli
pop
not
and
mov
outs
ja
cdq
inc
mov
pop
push
(bad)
cmp
fcmovb
mov
adc
jg
mov
jp
sub
fldenv
fnstsw
nop
cmp
js
movs
jle
aam
or
inc
iret
test
fstp
mov
das
popf
mov
cld
pushf
pop
outs
ficomp
imul
push
mov
or
mov
pusha
movs
ins
enter
mov
xchg
sbb
mov
inc
xor
pusha
sar
and
add
aad
mov
cmp
push
inc
imul
add
add
(bad)
ror
ds
fbld
fidiv
clc
mov
fwait
imul
mov
adc
xor
in
adc
and
jg
lahf
jnp
popa
cmp
push
iret
out
lods
mov
push
xor
add
jno
into
or
xchg
jae
div
dec
kaddw
lods
mov
test
(bad)
idiv
inc
imul
jae
cmp
inc
jmp
in
xchg
inc
mov
jbe
dec
add
and
loopne
sub
sti
jp
xchg
out
lods
test
(bad)
mov
sub
jl
pop
jle
add
or
pop
push
jne
or
mov
out
outs
inc
les
arpl
sbb
loopne
cmove
lods
in
push
xor
sti
cmp
adc
addr16
cs
or
xlat
inc
pop
push
ss
lods
in
hlt
call
ror
nop
pop
mov
out
fild
jle
ja
mov
movs
xchg
in
xchg
jae
fisub
leave
xor
jle
and
mov
mov
imul
shl
rol
lahf
retf
aam
aad
icebp
mov
push
mov
cmps
xlat
mov
jle
inc
cli
pop
sub
(bad)
cs
push
movs
cs
outs
fstp
xchg
and
xor
push
mov
daa
into
push
pop
dec
inc
and
sti
adc
(bad)
and
pop
fidivr
ficom
mov
xor
inc
push
imul
mov
jge
repnz
loop
xor
sbb
stos
mov
push
xchg
call
mov
popa
push
dec
div
shl
out
pop
sub
call
les
jae
xor
std
mov
add
scas
(bad)
pop
mov
(bad)
sar
sub
in
add
(bad)
xchg
arpl
inc
(bad)
enter
mov
or
mov
daa
and
push
test
pop
jl
mov
mov
mov
mov
outs
add
cmp
stos
and
cmp
xor
es
inc
aaa
repz
not
add
lahf
mov
scas
push
sbb
mov
mov
mov
fist
pop
xor
popaw
sub
mov
lods
dec
dec
loopne
cmp
dec
ret
adc
addr16
and
sub
(bad)
fist
push
and
in
xchg
hlt
cmp
aas
add
jp
mov
push
in
xchg
call
xor
or
adc
sbb
pop
dec
sbb
test
aas
cmp
lods
sbb
adc
std
xor
je
mov
xchg
sar
aaa
cli
push
push
pop
call
imul
and
mov
(bad)
jg
jge
dec
dec
jle
loope
xchg
mov
mov
mov
pop
pop
mov
and
mov
mov
xor
out
mov
mov
ret
dec
mov
inc
and
push
pop
add
aaa
jle
test
jbe
das
sub
clc
call
sub
dec
adc
in
cmp
sub
inc
cmp
sbb
xchg
test
repz
push
add
add
enter
ret
mov
mov
or
xchg
and
pop
(bad)
jg
inc
jg
cs
pop
cdq
add
fdivp
add
int3
push
lods
cld
ror
ins
add
das
(bad)
sbb
jg
xchg
inc
jp
outs
imul
inc
or
jnp
mul
(bad)
pop
mov
lds
mov
inc
test
mov
out
jmp
in
push
cmc
int
lahf
dec
xchg
xor
xor
or
sub
push
or
repz
lea
pop
mov
stc
inc
loope
sub
dec
loope
cmc
scas
jle
lock
aas
jo
adc
adc
imul
(bad)
jmp
std
push
mov
shr
push
cmp
mov
inc
add
sub
test
cmps
dec
retf
sti
inc
pop
setnp
and
je
sub
das
mov
pop
and
push
cli
outs
sbb
jp
ret
shl
test
fwait
aas
out
dec
cmp
cmp
in
adc
mov
mov
xor
sbb
dec
sbb
leave
push
or
xlat
sub
jecxz
add
sbb
lock
shr
and
fmul
cwde
dec
sbb
push
mov
mov
push
jae
dec
iret
inc
push
push
test
adc
sti
sub
pop
pop
jno
push
sub
repnz
cld
das
xor
mov
cmp
sub
pop
mov
inc
sub
xor
jle
sub
add
dec
aam
xchg
fs
ret
mov
mov
cmp
inc
push
inc
js
xor
stc
lock
cmp
xchg
cmp
dec
in
and
mov
xchg
in
push
mov
in
imul
and
pushf
dec
jno
sar
push
xor
xor
push
push
fs
in
sub
xor
cmp
outs
clc
cs
and
aas
cmp
shl
sub
aas
js
jno
icebp
movs
inc
setnp
sub
mov
push
cmp
data16
and
scas
mov
mov
fs
mov
daa
add
xlat
call
mov
fld
nop
add
or
push
and
(bad)
push
shr
sar
pop
sbb
add
not
inc
out
add
cmp
or
fidivr
(bad)
cmp
add
add
cmp
pop
fld
ds
int
sti
scas
jns
add
push
test
mov
xor
cmpxchg
push
xor
mov
int3
call
push
rcl
push
in
daa
push
stc
sbb
mov
mov
add
repnz
aas
test
jno
rcr
(bad)
jg
gs
adc
sub
daa
xchg
ficom
push
sbb
cdq
jmp
sub
dec
pusha
test
aad
aam
lahf
(bad)
test
add
daa
pop
xor
sar
bound
pop
adc
add
retf
mov
cmp
xchg
xchg
or
cld
sbb
aad
popa
jo
sbb
cmp
or
in
xor
stos
sahf
cmp
int
pop
icebp
ins
sbb
leave
mov
cmp
movs
and
adc
test
test
lahf
push
les
push
daa
jl
xchg
jmp
jmp
int
ret
jecxz
jbe
(bad)
hlt
mov
in
pop
ror
pop
jo
fld
(bad)
scas
pop
cmp
ret
call
xchg
pop
aas
sub
daa
add
lods
inc
sub
ss
arpl
add
(bad)
push
sub
out
arpl
inc
mov
dec
push
outs
xchg
retf
(bad)
mov
out
mov
retf
(bad)
or
pop
dec
es
sub
sub
dec
outs
js
(bad)
jmp
in
ja
push
sar
popa
xchg
adc
adc
jp
idiv
jno
ret
call
dec
cmps
inc
or
out
inc
out
sub
mov
arpl
xor
jl
push
pop
fst
push
adc
adc
scas
sbb
sbb
scas
sbb
dec
jmp
dec
cmp
sub
in
mov
xchg
fs
lods
dec
sahf
sbb
enter
fadd
push
pause
mov
sub
sbb
mov
imul
adc
fcom
repnz
or
ds
mov
push
dec
sbb
shr
jae
addr16
xchg
add
jg
dec
pop
pop
aas
pop
push
jg
std
fcmove
dec
mov
push
icebp
sbb
jno
retf
test
das
jp
mul
adc
pop
sbb
scas
ins
push
inc
push
xlat
les
imul
test
pop
adc
cmp
pop
cmp
js
ins
mov
dec
adc
inc
cmp
sbb
mov
setae
test
jmp
mov
clc
cmp
add
inc
sub
imul
dec
push
outs
mov
adc
fstp
(bad)
mov
mov
pusha
data16
jno
add
sbb
adc
aas
adc
scas
cwde
push
ss
icebp
xlat
movs
pop
ror
mov
fild
or
cmp
mov
dec
cmp
les
adc
jp
add
adc
or
mov
or
scas
dec
ret
xchg
imul
(bad)
mov
push
mov
ret
sar
stos
rol
inc
outs
rcl
into
ins
jo
mov
pop
push
xlat
nop
lods
mov
add
adc
mov
xchg
push
jb
mov
and
xor
add
int3
jnp
push
pop
or
rol
icebp
ds
popw
sar
fcmovb
pop
call
shl
out
sti
ret
sub
inc
or
aaa
mov
(bad)
jg
mov
(bad)
cli
mov
and
mov
outs
in
mov
jno
and
cmps
arpl
out
cmp
repz
imul
lods
iret
mov
jge
repnz
mov
js
mov
push
dec
fisub
fadd
cdq
mov
sub
fmul
lahf
(bad)
pusha
hlt
dec
mov
jp
(bad)
fcmovbe
aaa
and
push
mov
cmp
xlat
mov
in
sub
and
mov
loopne
dec
dec
jle
nop
(bad)
dec
fwait
inc
ins
jbe
mul
mov
pop
pop
das
mov
loopne
adc
nop
inc
rol
ja
mov
das
loop
aad
mov
mov
shr
xchg
cli
outs
cmps
sbb
call
outs
leave
fisub
cmp
xchg
bnd
or
inc
es
pop
pop
lds
pushf
stc
push
pop
pop
(bad)
adc
push
(bad)
or
fiadd
xor
or
sub
or
push
or
dec
xchg
in
ret
dec
gs
popa
jg
mov
xchg
inc
movntps
lds
idiv
adc
or
mov
jecxz
sub
jno
(bad)
shl
mov
sub
rcl
cwde
dec
ror
fdiv
adc
out
dec
out
(bad)
test
jecxz
xchg
icebp
jbe
xchg
out
pop
cmp
cdq
inc
stos
sub
mov
dec
or
jmp
add
pop
lock
push
inc
add
xor
sub
aam
sub
and
inc
jg
cs
jno
sar
test
inc
sbb
fisub
and
je
imul
ret
hlt
and
adc
cli
in
call
pop
pop
addr16
pop
jmp
dec
mov
push
mov
ja
adc
addr16
and
push
arpl
fsub
(bad)
or
outs
cmc
mov
pop
mov
outs
popf
jnp
repnz
retf
mov
mov
mov
icebp
cmp
data16
mov
out
or
pop
(bad)
mov
push
push
nop
lahf
sub
je
dec
cli
mov
ret
sub
adc
fstp
sbb
pop
dec
scas
jmp
cmp
dec
dec
mov
sbb
outs
mov
pop
lods
imul
xor
dec
hlt
sar
push
xchg
add
xchg
mov
and
adc
xchg
stos
arpl
cmp
cld
aaa
push
inc
int
rcr
push
dec
inc
jb
sub
movs
push
mov
adc
or
rcl
sahf
and
aam
bound
sub
inc
(bad)
xchg
cmp
fwait
xchg
stos
jne
mov
cmps
inc
mov
cdq
mov
mov
mov
out
pop
dec
and
xchg
mov
or
rcr
lea
mov
and
arpl
pop
loopne
ins
iret
and
pop
cmps
cmp
movs
xchg
cmp
push
jmp
xchg
movs
push
inc
jle
loopne
test
in
lock
xor
(bad)
dec
jle
mov
xor
mov
dec
mov
mov
jae
call
(bad)
sti
movs
out
mov
and
and
nop
repnz
mov
xchg
lea
mov
push
xchg
jb
sbb
inc
push
jge
shl
int
sbb
pop
sbb
xor
xor
jb
and
and
xchg
movs
es
sub
in
loopne
mov
or
jmp
in
repnz
xor
out
dec
in
in
xchg
or
jecxz
in
or
jle
cmp
push
jl
stc
es
sti
push
shl
sbb
xchg
push
rol
sbb
jmp
sub
adc
mov
sub
clc
xor
adc
mov
fist
mov
mov
jmp
dec
push
aas
iret
and
pop
cmp
mov
shr
jae
push
in
lods
shr
push
test
leave
scas
clc
fcmovbe
cmp
xor
sub
and
adc
inc
inc
and
sub
ror
push
push
nop
cmp
mov
movs
pop
pop
mov
jle
xchg
push
cmp
je
nop
jle
adc
leave
sub
adc
mov
mov
mov
and
std
mov
outs
mov
xor
xor
inc
out
sub
mov
sahf
ja
cmp
sbb
mov
shr
loope
std
cmps
jmp
xchg
mov
or
dec
fdiv
popa
retf
adc
int3
push
pop
sbb
lods
fild
push
pop
push
sub
adc
cwde
mov
popf
pop
or
popf
cmp
es
pop
adc
cmp
pop
call
push
xchg
sub
lock
dec
inc
test
adc
mov
mov
nop
out
and
nop
pop
or
fisub
mov
cwde
jle
and
xor
js
test
ficomp
sbb
inc
data16
add
sbb
(bad)
repnz
in
mov
xor
mov
loope
sub
pop
dec
retf
aam
pop
or
std
mov
push
repz
or
mov
xchg
call
xchg
mov
or
clc
popf
xor
outs
ins
cwde
fisttp
push
pop
or
and
call
mov
hlt
cmp
stc
pop
rol
loopne
inc
pop
xor
fnstenv
or
(bad)
rcl
movs
shl
sbb
push
mov
pop
push
aaa
xchg
sar
fwait
mov
xor
pop
stos
push
or
ds
pop
fisttp
leave
bound
les
bnd
mov
repnz
inc
adc
mov
popa
daa
out
cmc
bound
xchg
push
mov
fstp
(bad)
sub
adc
test
adc
push
js
mov
cli
xor
and
in
(bad)
inc
or
push
(bad)
xadd
xor
or
mov
repnz
xlat
mov
xchg
mov
sub
fbld
fwait
in
sar
into
outs
(bad)
xchg
aaa
gs
sar
push
mov
std
mov
xchg
mov
mov
loop
enter
or
mov
mov
sbb
xchg
xor
add
imul
retf
rcr
leave
pop
aad
inc
jbe
fsubr
outs
xor
mov
xchg
outs
cmps
pop
test
jmp
add
mov
daa
in
ins
add
sbb
in
(bad)
jmp
scas
push
lods
stos
mov
and
jmp
imul
leave
frstpm(287
sub
std
adc
mov
sub
sub
inc
sub
mov
arpl
inc
mov
dec
jnp
sub
mov
dec
cmp
jl
in
(bad)
fld
mov
push
ffree
sub
mov
fidivr
mov
adc
movaps
retf
or
fldl2e
xor
dec
fistp
shl
arpl
fwait
imul
add
ret
(bad)
and
je
and
icebp
je
or
stc
(bad)
sub
aas
call
dec
push
in
push
xchg
jmp
push
adc
in
mov
call
and
test
cwde
pop
add
in
pop
push
push
std
mov
cli
cmp
movs
scas
fnsave
mov
lods
call
retf
xor
push
ins
or
cmps
js
sub
cmp
cmp
mov
jo
leave
mov
jge
fwait
xchg
jae
push
mov
pop
pop
lods
hlt
leave
mov
sub
and
ss
shl
cmp
dec
(bad)
adc
je
lahf
cmp
pop
push
frstpm(287
or
push
stc
out
sbb
or
retf
xor
ins
mov
aas
xchg
cmp
mov
cmc
pop
int
retf
dec
es
mov
cdq
xor
jmp
push
outs
or
add
adc
mov
mov
out
jmp
mov
jb
push
mov
loope
(bad)
fiadd
mov
ins
and
xchg
sub
lea
xchg
mov
pop
mov
fild
cli
(bad)
mov
loop
push
sti
xlat
jo
test
jge
addr16
mov
cdq
or
cmp
push
inc
pop
inc
jno
jbe
pop
mov
or
into
inc
daa
jl
push
push
std
jmp
fbstp
dec
retf
aad
daa
arpl
jns
xchg
gs
in
aaa
or
je
push
ja
sahf
adc
outs
xlat
cmp
sar
jg
xor
mov
mov
hlt
inc
aam
imul
cmp
or
stos
cmp
shr
fbstp
xor
mov
leavew
xchg
cmp
sbb
push
fild
cmc
out
push
or
stc
sbb
neg
ins
pop
dec
cmp
cmp
test
adc
adc
or
push
iret
mov
or
(bad)
cmps
and
sbb
xchg
inc
or
add
dec
out
dec
test
dec
inc
pop
mov
lahf
and
add
sub
(bad)
adc
jns
(bad)
cs
jg
gs
rcr
imul
cli
mov
movups
shl
and
adc
rol
adc
and
pop
inc
ficomp
mov
ret
jg
shl
sub
cmp
std
shl
cmp
adc
loope
jo
leave
mov
jmp
aas
fsub
jb
push
and
mov
mov
std
sahf
test
adc
xchg
int
out
fstp
dec
fisub
mov
retf
or
adc
(bad)
arpl
(bad)
mov
sbb
jl
xchg
xor
or
leave
hlt
loopne
dec
sub
pop
ins
sar
mov
xlat
ja
mov
dec
mov
test
and
pushf
outs
jg
push
or
jo
jl
fistp
adc
scas
xchg
fst
jmp
retf
mov
outs
mov
cmps
pop
les
pop
into
jbe
lods
into
jecxz
xor
nop
sbb
in
movs
repnz
pop
mov
not
adc
dec
int
repnz
sub
xor
dec
lahf
out
ds
aas
cdq
test
mul
adc
dec
sbb
pop
dec
sub
inc
dec
out
xor
sbb
leave
test
lea
pop
xor
dec
sbb
scas
pushf
sub
sahf
dec
inc
cmp
inc
inc
inc
stos
adc
call
jge
jbe
icebp
aam
cmp
arpl
inc
jnp
dec
(bad)
mov
adc
mov
shr
xor
dec
test
retf
into
mov
xchg
je
xor
in
sub
sbb
aad
or
adc
mov
iret
rol
int
cmp
inc
ret
(bad)
cmp
add
xor
bound
mov
xlat
(bad)
mov
in
mov
cmp
int3
or
(bad)
push
in
mov
jl
out
push
shl
and
pop
xor
in
arpl
enter
pusha
leave
jmp
into
add
pop
aad
pop
sti
and
outs
dec
adc
mov
xor
cdq
shr
push
xor
add
push
lahf
push
inc
popa
outs
fdecstp
aas
std
ficom
repz
mov
and
and
dec
jp
iret
add
jecxz
sbb
call
mov
neg
ror
call
neg
sbb
and
lea
fld
cmc
ret
fld
ror
and
and
xchg
setg
lods
ins
sbb
arpl
push
lods
outs
sar
adc
push
movs
or
dec
xor
mov
dec
jmp
push
cmp
aam
jecxz
sahf
inc
rcl
push
push
daa
push
outs
scas
mov
pop
(bad)
frstpm(287
dec
imul
not
mov
mov
xlat
xor
add
push
xchg
mov
jb
adc
(bad)
mov
lods
push
jne
(bad)
outs
sub
lea
jne
push
xor
add
sbb
jno
(bad)
fcmovb
(bad)
scas
lea
ins
dec
fwait
jecxz
test
setb
inc
push
enter
call
ins
ret
sti
or
dec
sbb
jle
inc
sub
fsub
icebp
pop
in
gs
int
xor
jnp
adc
dec
xor
sbb
aas
pop
sti
mov
sub
sub
adc
pop
ins
push
ficom
cmp
addr16
xor
scas
xchg
mov
and
mov
and
jae
add
add
xor
push
test
add
or
cwde
rcr
dec
push
push
aam
jae
inc
rcr
cwde
pop
cmp
mov
dec
adc
pop
push
out
inc
add
bound
xlat
mov
pop
xchg
adc
add
mov
jno
out
fsub
push
xlat
scas
retf
stos
or
dec
fisubr
sti
js
push
cmp
xlat
das
sub
mov
jge
push
(bad)
popf
jg
xor
ret
out
mov
jle
adc
inc
jge
test
call
ret
enter
(bad)
mov
ins
sub
cmc
jmp
fwait
(bad)
popa
xor
and
jb
push
sub
pop
xor
ja
cmp
push
push
sbb
mov
ficomp
inc
shl
scas
cmps
pop
dec
data16
fldcw
std
pop
cmps
test
dec
push
ficom
xor
sbb
xchg
into
adc
dec
cs
and
mov
call
and
clc
sete
cs
les
pop
adc
call
es
sbb
mov
add
aam
jne
lods
test
or
pop
nop
sar
inc
mov
mov
sub
dec
clc
mul
jmp
xor
pop
stc
xchg
das
jo
push
adc
repnz
mov
adc
mov
xchg
mov
outs
cmps
and
loop
mov
loopne
mov
push
test
sbb
sahf
cdq
aas
popa
aad
sub
xchg
addr16
fucomp
js
add
sbb
pop
mov
inc
push
mov
pop
inc
bound
(bad)
retf
in
mov
nop
stos
jne
mov
pop
lds
mov
gs
test
push
sbb
and
jb
or
sub
cdq
jl
adc
inc
dec
aas
jne
jbe
xchg
xchg
mov
popf
dec
scas
cmp
or
xor
mov
and
sbb
fidivr
ret
test
jle
xchg
sbb
sub
rol
push
adc
cld
pop
push
push
push
leave
(bad)
sub
and
jae
daa
jmp
adc
pop
sti
sub
hlt
cmp
movs
(bad)
push
jmp
hlt
movs
mov
sbb
ret
dec
jl
rol
clc
adc
sahf
and
or
add
jg
and
cmps
pushf
inc
jnp
inc
mov
daa
sbb
and
mov
aaa
mov
outs
jns
jg
loopne
inc
das
fcomi
sbb
(bad)
sub
push
xor
adc
out
enter
mov
movs
es
popa
daa
jno
dec
cwde
and
pop
rep
inc
scas
or
clc
xchg
and
fisub
cs
dec
fisubr
jmp
cmp
mov
sbb
enter
cmp
fisttp
cmp
ret
inc
cdq
fisttp
push
cs
add
fs
repnz
adc
inc
fcomp
push
push
clc
(bad)
stc
ins
mov
(bad)
jp
cmp
test
js
adc
xchg
mov
retf
push
xchg
and
movs
nop
dec
test
inc
mov
dec
std
jmp
pop
or
in
dec
pusha
scas
call
jae
out
loop
push
dec
xchg
pop
fdivr
not
push
cmp
stc
adc
imul
nop
or
pop
(bad)
jmp
nop
pop
call
cmp
ins
aad
shr
jle
clc
or
fcomip
jecxz
fistp
inc
cmp
ffreep
jge
push
stos
je
jno
(bad)
cdq
test
dec
(bad)
or
inc
aad
(bad)
mov
icebp
daa
(bad)
xchg
xlat
jnp
inc
cmc
mov
fcomp
popa
mov
mov
sar
out
leave
js
pop
push
pop
out
sbb
mov
xor
xchg
outs
jmp
fnstenv
xchg
(bad)
and
sub
add
in
shr
imul
test
inc
fnstenv
xchg
push
dec
push
mov
movs
xchg
push
and
les
or
imul
jmp
mov
sub
pop
xlat
mov
cmp
fcmovnu
shr
ficomp
dec
fist
xor
xchg
inc
ins
sbb
pop
inc
sbb
push
(bad)
scas
push
jne
xlat
bound
mov
pop
loop
inc
lea
std
mov
jns
cdq
adc
addr16
push
dec
sar
mov
and
popf
or
ret
mov
in
sahf
frstor
pop
scas
std
imul
fsubr
inc
xor
adc
dec
xchg
test
not
mov
nop
ss
(bad)
lds
and
aam
les
jbe
daa
lahf
sbb
fdiv
add
or
into
and
and
out
leave
iret
mov
jl
les
dec
pop
lock
sub
mov
or
xor
mov
rcl
mov
dec
mov
scas
mov
inc
ins
(bad)
mov
imul
jne
xchg
imul
test
push
scas
outs
ins
into
movs
mov
jns
xchg
test
lea
in
mov
xor
jle
mov
fadd
arpl
repz
push
jmp
add
inc
imul
jle
jbe
cwde
inc
dec
ins
sbb
ror
push
pop
dec
sahf
popf
cmp
test
dec
push
push
stos
dec
aaa
scas
sbb
adc
lock
addr16
icebp
adc
loope
ficom
hlt
iret
dec
cdq
jle
mov
inc
pop
sar
adc
jmp
adc
sub
loopne
clc
adc
lods
retf
inc
xor
adc
(bad)
sub
retf
sahf
dec
repnz
jp
jmp
and
dec
into
add
sub
and
sub
mov
dec
ds
cli
adc
xor
add
sbb
mov
inc
(bad)
cld
mov
loop
(bad)
xor
dec
mov
sbb
sbb
inc
jnp
pop
aad
ret
xor
sahf
rcl
fdivr
or
jl
cwde
cdq
test
ret
cmp
push
pop
mov
adc
stos
lahf
dec
shl
popa
dec
std
pop
sbb
mov
(bad)
fwait
mov
stc
arpl
inc
popa
jecxz
and
fs
lds
in
add
pop
shl
cmps
shl
pop
mov
pop
xchg
pop
les
push
data16
popf
xlat
xlat
push
sbb
sbb
xor
outs
(bad)
sub
jne
lahf
sub
(bad)
shr
xchg
imul
js
popf
jmp
xor
out
inc
add
lahf
mov
ss
rol
fst
scas
fndisi(8087
sub
mov
imul
cmp
mov
loopne
inc
fcom
in
imul
push
stc
adc
xchg
and
jo
cmp
imul
add
or
test
jp
cli
aas
call
jno
in
mov
jns
arpl
sub
jecxz
data16
inc
mov
pop
adc
xchg
rcl
jmp
popa
scas
xchg
ins
sub
call
fsqrt
(bad)
jne
retf
jne
dec
add
pop
mov
aad
xlat
loop
lock
jp
and
cmp
(bad)
pushf
(bad)
fidiv
cwde
add
mov
movs
jmp
and
jecxz
push
aad
cmp
pop
pop
repnz
scas
sbb
pusha
out
pop
(bad)
imul
mov
push
pop
add
inc
add
push
add
mov
call
aad
sbb
iret
lea
xchg
xchg
xchg
dec
pop
in
mov
xchg
lods
xchg
cmp
test
adc
xchg
xchg
jb
adc
jp
mov
push
int3
xor
pop
retf
aaa
mov
push
add
(bad)
push
mov
mov
loop
mov
in
mov
dec
ja
mov
mov
dec
push
mov
or
pop
xchg
scas
and
lahf
popa
xor
ss
push
loop
cmp
add
retf
sub
cs
pusha
pop
(bad)
mov
fld
out
jg
sbb
fwait
inc
es
sbb
(bad)
fidivr
dec
ret
cld
jne
add
pop
mov
lock
repz
jmp
jae
jo
sbb
or
ss
sar
mov
cmp
mov
fdiv
sub
push
stos
and
mov
push
mov
push
shl
dec
jmp
mov
lods
hlt
(bad)
not
sbb
mov
cli
mov
loop
sbb
pop
ja
cmps
cmp
fdiv
scas
mov
cmps
out
ds
fisubr
add
lea
or
push
inc
sbb
(bad)
mov
rcl
psubd
call
add
push
and
scas
dec
inc
mov
out
or
fcomp
xchg
push
je
movs
clc
sar
and
out
and
outs
mov
cmp
sbb
add
mov
mov
cmp
(bad)
dec
mov
push
fdiv
stos
push
icebp
or
(bad)
push
fs
or
add
xchg
cmp
mov
jge
pop
into
test
or
jmp
sub
cmps
xchg
pop
lds
xor
or
pushf
push
aam
out
push
das
popf
mov
and
call
push
outs
cmp
dec
mov
fisub
push
clc
sbb
out
std
mov
pop
cdq
dec
push
push
add
call
inc
int
dec
aam
and
and
and
mov
rol
sar
push
pop
xchg
add
mov
sub
imul
or
xchg
movs
sbb
mov
stc
push
mov
test
inc
fst
xor
inc
psadbw
dec
push
popf
add
fld
jb
ds
loop
pop
cmps
inc
xchg
sub
add
add
adc
cmp
out
dec
jge
outs
dec
aaa
adc
add
(bad)
test
pop
rcl
cmps
js
xchg
xchg
inc
pinsrw
xor
mov
jp
mov
xor
push
bound
xor
ins
div
jg
adc
dec
mov
scas
jb
lea
movs
cwde
out
cli
iret
into
mov
mov
imul
jb
jg
pop
mov
xor
xor
push
popf
ins
dec
clc
mov
mov
mov
xor
or
lods
pop
or
in
pushf
rcr
push
shr
or
push
test
in
pop
xchg
into
int3
adc
call
sub
ins
dec
ret
stc
into
push
cmp
fsub
lock
xchg
sub
sbb
jns
ins
into
gs
outs
jb
into
cmc
fsubp
mov
sbb
inc
fs
inc
pop
and
hlt
jmp
out
dec
stc
sbb
mov
xor
mov
(bad)
imul
push
call
dec
mov
jne
repz
int
ss
mov
movs
sbb
pop
pushf
ins
xlat
pusha
sub
sbb
std
and
mov
and
inc
xor
mov
std
std
hlt
mov
int
fprem1
bound
mov
scas
push
sub
add
jae
jns
add
fdivr
mov
jb
mov
(bad)
jmp
xchg
mov
dec
mov
mov
jbe
jne
mov
mov
or
inc
or
sub
rcl
sahf
inc
lock
dec
es
aas
stos
jmp
add
stc
jo
in
fidiv
(bad)
jp
add
dec
fidiv
data16
in
je
mov
ins
(bad)
jae
jge
ss
and
jne
push
into
cmps
(bad)
jne
add
les
pop
cdq
test
aas
mov
pop
mov
and
mov
icebp
pop
cmp
fwait
out
cdq
jb
xor
jne
arpl
aas
fst
push
sbb
(bad)
dec
push
ss
into
(bad)
mov
loopne
jne
(bad)
loopne
inc
mov
outs
lea
adc
sub
scas
mov
jno
stos
push
je
retf
jns
rcr
aas
ja
push
in
neg
add
imul
cmp
jb
add
mov
inc
sar
push
scas
cli
push
fnsave
rcl
mov
mov
inc
aas
fistp
inc
inc
(bad)
mov
mov
rol
lock
mov
scas
(bad)
and
mov
and
push
sbb
mov
push
popf
test
or
jae
pop
out
mov
aaa
cmp
shl
xor
sub
mov
inc
(bad)
mov
fdivr
fmul
jle
arpl
sub
std
sbb
es
cmps
mov
popf
fstp
imul
sti
ficom
enter
xchg
into
dec
inc
push
xor
inc
jmp
mov
pop
icebp
dec
das
fwait
inc
jp
dec
xor
mov
xchg
mov
adc
dec
lods
std
mov
xor
into
(bad)
push
push
loop
pop
std
mov
add
fucom
sbb
or
inc
mov
mov
cmovge
jns
sbb
or
push
dec
sub
mov
sub
cdq
pop
mov
lods
push
mov
sub
clc
xchg
or
ret
push
sbb
test
std
fistp
sbb
in
sbb
mov
jne
int3
popf
cmp
jl
push
xchg
imul
int3
cmps
or
sar
cmp
pop
xchg
(bad)
popf
pop
aaa
repz
lock
(bad)
lahf
call
ins
inc
or
in
and
arpl
mov
push
and
cld
lea
inc
shl
ins
pop
pop
pop
test
test
push
rol
repnz
pop
xchg
xchg
fdiv
cmp
mov
sbb
xor
not
or
arpl
jecxz
xchg
out
aam
pop
xor
inc
adc
pop
sub
lahf
inc
fadd
popf
add
test
xor
sahf
popf
test
xchg
popa
enter
xchg
push
fs
sub
jecxz
out
jne
push
lods
pop
sbb
pop
cmp
adc
jle
mov
repz
jae
les
test
mov
xor
pop
push
jecxz
mov
and
mov
iret
cmps
mov
or
push
jp
gs
jbe
mov
into
jbe
cmps
test
(bad)
jo
inc
adc
sub
push
adc
pop
retf
out
out
inc
fidiv
mov
add
nop
or
retf
mov
clc
push
mov
das
adc
push
inc
sbb
xchg
retf
cmp
or
scas
and
sub
and
push
push
repnz
retf
popf
dec
cmps
inc
or
jmp
les
repnz
shl
inc
addr16
mov
add
retf
call
xchg
add
inc
ror
sti
sbb
(bad)
jge
into
loopne
(bad)
xchg
push
jne
addr16
mov
xor
and
jns
dec
lock
pop
add
hlt
pop
mov
int3
mov
aaa
vpmaxsw
xor
into
mov
xor
mov
shl
or
cmp
loope
outs
in
icebp
fstp
cmps
mov
popw
in
xor
cmp
dec
mov
rol
sub
ja
mov
icebp
push
dec
add
mov
js
and
mov
fisttp
inc
retf
or
jg
dec
adc
add
lahf
addr16
popf
lea
push
js
dec
and
cs
push
push
jnp
stos
repz
add
or
jle
jmp
popf
cmp
fwait
inc
sub
add
popf
retf
in
cmp
adc
xor
out
add
push
js
cmp
test
ret
mov
out
test
dec
mov
ds
inc
ins
lea
movs
les
cmp
lods
jne
cmc
cmps
xchg
sub
data16
retf
mov
test
xchg
icebp
mov
xor
aad
cld
cmp
mov
iret
pop
push
sbb
xor
movs
fidiv
fimul
mov
dec
ror
push
std
adc
cdq
stc
xchg
cwde
jp
(bad)
xchg
pop
jns
call
push
loopne
stos
in
outs
cdq
sub
adc
aaa
or
cmp
push
jp
imul
fld
je
fs
lods
or
push
aad
adc
and
push
movs
dec
sbb
cmp
stos
xor
or
mov
arpl
add
retf
daa
sahf
push
mov
dec
cwde
dec
jmp
mov
push
clc
loop
adc
push
xlat
call
mov
jge
and
pop
cli
jbe
dec
out
call
xor
ret
call
aad
mov
iret
jae
call
xor
push
inc
jae
cld
push
push
xor
mov
(bad)
pop
pop
mov
or
rcr
mov
jecxz
mov
push
loop
mov
ins
dec
inc
push
outs
xor
(bad)
mov
sbb
sbb
imul
aad
fcmovne
sbb
mov
mov
call
outs
jmp
or
fld
and
cmps
adc
pop
fstp
or
mov
sbb
(bad)
xchg
shl
pop
jne
call
(bad)
mov
loopne
mov
popa
sahf
mov
push
mov
lahf
mov
and
in
sub
dec
test
inc
(bad)
std
or
cdq
xchg
pop
sub
adc
stos
scas
loope
test
ja
cmp
aaa
inc
outs
leave
mov
mov
push
fsub
sbb
sahf
jmp
cmp
outs
aaa
shl
dec
adc
je
stc
sub
mov
cmps
in
or
stos
ins
cli
lds
pop
fsubr
and
adc
and
push
pop
inc
push
ins
popf
shl
dec
mov
(bad)
out
mov
stc
mov
adc
jp
daa
jecxz
movs
inc
fwait
out
mov
(bad)
xchg
adc
jae
dec
cmp
outs
in
out
aas
nop
inc
jns
push
pop
dec
mov
cmc
push
xor
not
pop
fisubr
add
push
int3
push
jno
pusha
pop
or
jo
fbld
adc
jle
adc
xchg
push
push
jmp
icebp
test
push
daa
dec
stos
cmps
pop
add
inc
inc
sub
mov
adc
fimul
mov
push
or
mov
adc
pop
mov
push
(bad)
sbb
out
aam
outs
pusha
xchg
dec
loope
push
sbb
jns
stos
sti
hlt
mov
loope
ins
jbe
sbb
mov
xchg
jnp
pop
and
jmp
(bad)
(bad)
sub
adc
std
inc
xchg
js
push
aad
in
sub
cs
adc
dec
or
mov
or
push
call
mov
ds
xor
cmp
fwait
leave
sbb
cmp
shl
sar
daa
or
jo
sbb
cmp
pop
daa
mov
adc
sbb
dec
shl
pop
loope
lds
sahf
test
mov
push
pop
jne
outs
and
retf
cmp
mov
test
ret
cdq
pop
jne
xlat
push
in
into
xchg
adc
es
adc
call
dec
out
test
lock
sti
mov
out
push
outs
jmp
loop
es
jns
(bad)
mov
daa
pusha
leave
sub
mov
sahf
pusha
mov
mov
test
or
movs
mov
dec
mov
sub
mov
retf
jl
fistp
mov
imul
pop
lods
jp
call
ss
push
shr
inc
adc
jo
jle
mov
sub
xor
fsubr
mov
inc
fmul
pop
cs
adc
fcmovbe
aaa
in
fwait
and
sub
outs
inc
test
push
inc
stc
pop
xchg
mov
pushf
shl
ret
inc
into
mov
cmp
das
mov
jbe
xlat
or
(bad)
ss
jmp
or
rol
add
pop
jmp
jmp
jo
cmp
inc
in
jbe
xor
or
fs
sub
xchg
jl
jp
test
movs
mov
pop
add
loop
pop
sbb
jmp
lock
je
je
imul
jae
sub
pop
sti
push
test
jecxz
inc
sub
mov
jmp
stos
out
and
sub
sbb
mov
call
fmul
sub
mov
repnz
sub
sbb
push
mov
jnp
(bad)
out
movs
addr16
inc
inc
xor
popf
mov
add
jb
arpl
dec
repnz
and
scas
ret
mov
inc
aaa
(bad)
xor
jne
arpl
fcomp
call
inc
add
js
inc
out
dec
sar
xor
fwait
rol
xchg
cli
fdivr
xor
stc
(bad)
add
add
mov
shr
push
dec
mov
push
adc
mov
xchg
cmp
rcl
xor
arpl
cwde
jle
mov
jg
and
in
retf
xchg
dec
sbb
inc
push
aad
mov
adc
inc
jbe
add
ret
aad
imul
add
into
sbb
shl
pop
jbe
jbe
push
mov
sbb
inc
stc
lds
pop
add
adc
cmp
mov
movs
rcl
dec
lahf
add
jmp
dec
ret
in
out
inc
mov
popf
push
or
xchg
inc
sahf
jns
ret
repz
cld
loopne
leave
leave
pop
add
and
scas
pop
rcl
push
out
fnstsw
mov
leavew
mov
xchg
aaa
push
pop
or
scas
or
dec
cmp
(bad)
(bad)
cli
in
sbb
mov
push
or
cwde
xchg
cmp
add
push
ds
aad
xchg
dec
ins
out
dec
adc
pop
daa
jp
dec
mov
mov
push
ret
or
lods
icebp
call
popa
iret
mov
fisubr
push
xchg
popa
test
test
popa
jge
push
lods
ss
cmp
nop
push
icebp
(bad)
jbe
(bad)
hlt
hlt
ror
outs
int3
and
mov
sub
in
sbb
pop
dec
aad
cld
sar
cmc
mov
cmp
adc
or
and
das
cmp
pop
xor
cs
lds
mov
pop
add
fisubr
in
pop
int
dec
xchg
xchg
dec
test
push
(bad)
xchg
pop
adc
mov
dec
sub
loop
push
shl
sub
shl
cmp
movs
add
pusha
mov
call
jge
sub
(bad)
sub
xchg
ret
xlat
retf
mov
push
in
jle
inc
dec
aas
and
sbb
shl
cmps
add
in
test
sub
inc
pop
and
xor
ja
xlat
mov
xchg
pop
sub
cmp
xor
sar
adc
jl
adc
ficomp
dec
cmps
push
fstp
jb
mov
loopne
out
xchg
out
in
outs
mov
inc
mov
rcr
inc
out
fimul
xchg
mov
dec
fmul
shl
call
arpl
aaa
fst
in
repnz
and
mov
jmp
and
aad
jge
xlat
xchg
or
mov
push
jmp
push
xor
sub
mov
cs
mov
mov
inc
sahf
mov
or
scas
shl
push
dec
fwait
adc
into
sbb
out
cdq
daa
stos
lods
push
dec
lds
mov
test
pop
(bad)
sbb
pop
test
std
call
mov
loopne
xor
pop
pop
dec
adc
in
mov
pop
inc
ficom
push
and
push
ss
jno
js
or
xor
cld
jle
mov
out
jbe
fisttp
cmp
inc
repnz
arpl
cmps
xchg
push
push
jg
jmp
add
jae
popf
pop
retf
sub
(bad)
cmps
pop
mov
(bad)
fsubr
movs
mov
sbb
adc
(bad)
loop
mov
adc
jo
in
aad
push
mov
in
int
inc
fcomp
into
xchg
add
xchg
lods
mov
mov
in
shl
aaa
icebp
push
mov
int
jo
pop
mov
xchg
pop
and
dec
mov
jg
lahf
lds
push
bound
lahf
jae
ret
in
repz
(bad)
in
imul
in
es
popa
push
retf
daa
cmp
fnstcw
ja
inc
push
bound
cmc
cs
sbb
fwait
mov
jmp
mov
test
sti
jae
push
nop
pop
xor
pusha
mov
mov
jmp
std
and
xchg
jno
cli
push
cli
mov
ins
lea
xchg
xlat
pop
push
int3
sbb
std
into
repnz
retf
popf
je
ficom
scas
das
push
sbb
iret
pop
push
clc
neg
lea
das
mov
add
outs
dec
mov
ds
fisubr
gs
test
ds
dec
test
ret
xchg
test
imul
or
fdiv
scas
dec
xchg
rol
imul
xor
hlt
shr
cmp
lods
adc
mov
pop
push
xor
inc
imul
dec
jle
mov
bound
push
cld
hlt
repnz
scas
bnd
push
cwde
ins
jmp
shr
pop
pop
mov
mov
push
cli
dec
inc
gs
push
gs
sahf
add
sbb
pop
xchg
mov
adc
sbb
push
mov
fisubr
pop
mov
sti
outs
cmps
mov
or
jnp
dec
inc
xor
(bad)
arpl
adc
xchg
scas
or
je
adc
mov
std
sub
arpl
adc
aaa
retf
movs
fldenv
adc
test
loopne
(bad)
aam
fst
mov
and
movs
mov
mov
mov
sbb
jl
ins
js
movs
mov
mov
xchg
jno
ror
seta
cmps
imul
pop
std
jbe
pushf
clc
inc
xchg
mov
add
mov
or
dec
xchg
int
dec
push
add
test
adc
icebp
dec
shr
shr
call
loop
inc
stc
sbb
and
adc
data16
adc
mov
in
jno
mov
dec
dec
fnsave
hlt
int3
push
repnz
push
jl
bt
adc
loopne
cmps
outs
(bad)
scas
(bad)
jle
test
aad
mov
xchg
or
xor
repnz
cmp
dec
cmc
(bad)
imul
push
ins
cmp
xchg
dec
repnz
xor
cmp
ins
push
xor
cmps
movs
add
not
jp
gs
or
retf
jge
imul
add
sub
aad
outs
cmps
(bad)
cld
movs
adc
xchg
push
mov
dec
mov
push
xchg
int3
mov
cdq
(bad)
add
mov
adc
imul
push
aam
pop
inc
in
adc
jge
or
sbb
movs
push
inc
or
outs
pop
aas
jecxz
inc
mov
lock
ja
into
dec
ins
(bad)
and
dec
cli
push
mov
retf
iret
pop
jmp
imul
das
xchg
pop
adc
outs
std
imul
mov
cmp
in
xor
arpl
mul
shr
or
xchg
mov
lahf
xor
adc
jnp
mov
mov
push
push
mov
inc
icebp
mov
cmps
scas
sub
std
movs
and
cmp
jl
imul
test
push
pop
gs
jecxz
das
call
push
push
fcom
and
cmc
cmp
mul
or
sbb
pop
loopne
aas
xchg
pop
(bad)
cmp
aad
adc
add
pop
inc
add
test
mov
pop
pop
jg
cli
mov
lods
(bad)
pop
aad
xor
sbb
push
jg
cmps
icebp
in
add
jnp
ret
cs
ror
jg
fldenv
imul
push
hlt
mov
mov
aam
and
adc
repz
add
dec
mov
cld
cmp
fimul
inc
test
add
cmp
nop
mov
das
daa
out
addr16
ret
int
pop
es
xchg
dec
rcl
inc
add
cmps
in
pop
sar
popa
cwde
dec
sti
loopne
push
add
repnz
ss
inc
push
mov
push
push
int3
int
push
or
das
fimul
loopne
jne
in
(bad)
lods
xchg
fnstsw
xchg
xchg
retf
push
jl
and
push
test
jecxz
daa
adc
inc
sub
test
adc
cs
fisttp
mov
test
call
mov
ret
and
imul
and
cli
imul
or
xchg
hlt
dec
inc
fwait
dec
sti
les
sbb
ret
cmp
pop
scas
and
adc
and
retf
aaa
or
cmp
mov
pop
mov
mov
mov
mov
pop
sub
cli
cld
popf
mov
imul
aas
pop
call
sub
stos
cmp
mov
aas
popa
popf
push
sahf
sbb
sbb
adc
or
and
js
jno
jg
out
xor
stos
out
loope
test
(bad)
jns
xchg
fimul
pop
xchg
jbe
adc
cmps
aaa
xchg
fcomp
add
add
adc
mov
mov
test
jnp
mov
fild
pop
jg
shl
pop
rcr
into
pop
movs
cmp
sub
hlt
push
nop
or
fld
imul
xchg
mov
cmp
push
lock
jecxz
xchg
and
cmp
rcr
in
mov
rcr
mov
push
or
iret
jnp
xchg
cdq
repnz
iret
push
scas
faddp
dec
ds
(bad)
popa
iret
and
ins
jns
ret
fsub
aad
cmp
fs
jne
mov
stc
inc
call
test
xchg
xchg
out
repz
sbb
push
(bad)
mov
imul
rcl
enter
iret
and
inc
mov
dec
sbb
cld
pop
iret
int3
xchg
pop
mov
(bad)
sbb
dec
dec
sub
in
lock
push
or
sub
js
repnz
ret
outs
xor
pop
dec
dec
mov
pop
vpshab
and
xor
fwait
test
mov
push
push
les
out
ror
mov
aam
inc
test
ret
pop
jmp
clc
mov
and
call
push
ds
inc
int3
aaa
repnz
fnsave
out
xor
call
cmp
xor
xchg
lods
mov
jo
int
lods
xchg
jmp
aaa
dec
add
cld
xor
sbb
nop
dec
sbb
scas
jbe
and
pop
mov
bound
sbb
push
call
fwait
or
pop
cvtpi2ps
(bad)
and
arpl
jns
xchg
cld
(bad)
xchg
ret
ds
pop
cmp
add
or
sbb
pop
jge
xor
adc
mov
fcomp
test
push
cdq
sub
jmp
shr
push
fnstcw
sbb
push
or
mov
sub
push
and
add
jb
cs
mov
ror
int3
(bad)
adc
cmp
stos
inc
xchg
or
mov
stos
cmp
in
in
std
jo
sbb
sbb
jns
jle
or
or
cmps
aad
push
movs
jmp
int
jne
dec
imul
lds
cli
adc
pop
dec
scas
sbb
xlat
int3
inc
cmp
xchg
mov
scas
push
or
mov
add
iret
push
das
pop
shl
in
fnstsw
xchg
mov
loop
mov
gs
jmp
mov
addr16
jp
out
mov
loopne
hlt
clc
leave
mov
dec
xchg
xlat
jmp
or
xchg
mov
hlt
mov
and
shl
imul
cmp
cmps
repz
mov
push
(bad)
lea
cmps
iret
repnz
repnz
mov
mov
cmp
les
inc
int3
cmp
jno
or
mov
ss
lods
or
pushf
adc
(bad)
sub
pusha
inc
fsubp
jmp
icebp
jmp
mov
and
repnz
aad
in
ret
fiadd
(bad)
inc
data16
jmp
mov
add
div
push
inc
push
sub
sbb
imul
loop
(bad)
mov
pop
adc
mov
sub
and
out
lods
add
cmp
scas
xor
xor
jg
mov
jmp
push
xchg
mov
pop
movs
cmc
fistp
adc
pop
cli
xor
cmps
push
out
inc
and
mov
fs
xchg
icebp
ret
retf
xchg
ja
test
sub
mov
mov
scas
movs
inc
push
lods
push
jg
iret
xchg
int
jl
lods
jbe
sahf
cdq
scas
ins
jl
pminsw
push
mov
cs
popa
jnp
pop
mov
loop
xor
push
popa
mov
jp
sbb
cwde
call
mov
push
pop
jle
popa
inc
sbb
in
inc
cmp
push
mov
push
aas
sti
js
fcomp
into
je
xor
push
ss
shl
(bad)
cdq
pop
pop
es
xor
fst
hlt
pop
pop
jg
xchg
imul
mov
sub
xchg
rcl
fild
fcom
outs
lea
sub
add
stos
cmp
xchg
lea
cmp
mov
cmc
into
pop
dec
ret
loope
push
sbb
ret
xchg
ror
add
arpl
mov
ret
mov
pop
dec
jg
adc
sub
(bad)
mov
push
mov
mov
std
(bad)
(bad)
dec
(bad)
js
std
fdivrp
inc
or
stos
rcl
pop
inc
mov
test
dec
inc
jge
test
arpl
pop
and
xchg
iret
fwait
hlt
or
idiv
aam
int3
sbb
xor
jae
mov
lods
and
test
test
sub
out
das
mov
inc
call
add
jnp
push
mov
das
lods
cmp
xor
imul
and
ins
test
mov
ret
fcmove
or
lds
pushf
jmp
xchg
xchg
pop
push
xlat
add
dec
mov
and
mov
popf
push
rcr
into
cmc
test
xor
hlt
lahf
pop
jg
mov
inc
jp
mov
sub
shl
pusha
sbb
push
push
and
ins
enter
and
enter
(bad)
out
and
xlat
fistp
aad
std
or
mov
in
pop
test
add
xchg
gs
jns
mov
(bad)
mov
setne
in
cli
ins
lods
fcmovnu
in
iret
sub
pop
push
jl
mov
add
cmp
push
add
inc
xchg
cwde
sbb
xor
sub
(bad)
and
pop
outs
sub
inc
imul
or
(bad)
and
loope
lods
dec
sbb
adc
and
in
stc
sub
dec
adc
cmp
fs
push
les
aam
lods
sbb
mov
cld
mov
jge
stos
mov
push
push
psubusw
push
pop
jecxz
sar
outs
add
out
sub
mov
mov
sub
lock
test
and
retf
sti
jbe
adc
jmp
push
call
jge
repz
stos
sbb
pop
jns
sub
(bad)
repz
push
lahf
fisttp
mov
aas
adc
call
ds
jo
stos
sub
in
or
in
dec
jp
xchg
push
popf
jo
adc
xor
and
repz
push
inc
imul
fs
ins
in
or
push
shl
xchg
call
push
hlt
fcmovu
mov
pop
into
movaps
or
nop
cmc
into
jne
xor
inc
inc
dec
popa
or
push
jmp
push
xlat
aas
dec
es
out
xlat
call
push
test
call
inc
dec
aam
out
mov
imul
and
scas
or
rcl
inc
movs
addr16
sub
je
lods
jb
fsub
pop
dec
cs
cwde
and
mov
fimul
call
ret
jmp
xchg
mov
aaa
int
sbb
push
inc
popf
sbb
rcr
inc
sub
adc
push
outs
and
add
retf
lods
mov
mov
and
sub
pop
xchg
jmp
loope
xchg
popf
add
fbld
or
adc
sar
std
scas
pop
push
ret
out
mov
shr
fucom
mul
dec
loop
mov
repnz
cmovbe
pop
mov
out
push
mov
push
lahf
sar
inc
pop
inc
fmul
nop
sar
sub
sub
add
(bad)
or
popf
sub
pop
(bad)
loopne
adc
jns
jne
and
pop
hlt
mov
mov
xor
popf
push
repnz
sub
mov
push
ror
sbb
fcmovnbe
jle
adc
icebp
and
pop
gs
ror
or
sbb
sar
push
inc
daa
sar
dec
xlat
arpl
pop
dec
dec
mov
in
add
or
(bad)
repnz
and
scas
inc
jbe
out
sti
cmps
mov
cs
dec
mov
fldenv
pop
movs
lock
aas
shl
ret
fisubr
mov
push
rcl
mov
inc
test
sbb
stos
in
sbb
add
clc
xchg
cmp
push
(bad)
loopne
pop
mov
lahf
jnp
cli
pop
mov
or
shl
lds
clc
cmp
push
in
mov
jns
aad
in
or
ss
pop
xchg
sbb
adc
inc
xor
pop
jne
dec
(bad)
jo
stc
repnz
inc
dec
xlat
test
icebp
adc
outs
mov
pop
pop
mov
jb
xchg
inc
mov
mov
mov
mov
cmp
out
mov
aaa
cmp
jmp
jmp
dec
jmp
inc
icebp
push
stos
add
push
jmp
push
jmp
icebp
mov
push
(bad)
mov
ins
loop
pop
es
xchg
(bad)
test
mov
scas
mov
fsubr
mov
and
push
fwait
dec
adc
mov
aad
lahf
outs
fwait
pop
cli
cmp
mov
loop
mov
add
jg
mov
cli
push
ret
mov
jns
pushf
ret
stc
add
adc
rcr
mov
adc
out
dec
shl
jnp
popa
retf
xchg
ins
jmp
fsubr
mov
cmp
push
add
loopne
fadd
in
add
bound
mov
fsubr
adc
out
je
dec
fcom
sbb
lds
xchg
scas
jmp
pop
pop
jecxz
sub
sub
jp
lock
xor
out
in
jbe
out
and
jne
jb
jmp
out
push
sbb
adc
push
(bad)
mov
fldenv
out
mov
fisttp
dec
out
aas
int
inc
pop
xor
cdq
in
pop
test
mov
cwde
jmp
jg
outs
int
jmp
fcmovb
in
inc
in
cmps
fidiv
mov
lahf
aaa
sbb
int
mov
das
cmp
push
push
les
repz
test
ror
call
loop
dec
push
push
xchg
int3
mov
(bad)
jne
jg
sub
push
cmp
add
fisub
xchg
mov
jmp
push
and
mov
cmps
call
cmp
jns
jecxz
lock
inc
mov
ret
sub
jg
shl
retf
or
pop
jnp
mov
(bad)
imul
loope
jmp
and
sbb
shr
ds
(bad)
es
(bad)
jmp
or
hlt
idiv
mov
cmps
lods
lea
push
ja
retf
imul
mov
and
push
cmp
inc
test
pop
scas
inc
mov
sbb
pop
cld
out
stos
xchg
xor
icebp
sub
jle
and
psrlq
push
es
xchg
(bad)
stos
(bad)
dec
(bad)
mov
sbb
shl
or
repnz
mov
add
cmc
fwait
dec
daa
ficom
push
push
sbb
not
mov
pop
sbb
xchg
test
inc
mov
and
jmp
data16
adc
pop
jae
push
mov
cmp
lods
mov
in
ret
shr
mov
(bad)
stos
dec
inc
inc
(bad)
in
je
sti
add
jmp
xchg
fwait
pop
sbb
pusha
sbb
neg
ja
in
xchg
add
leave
xchg
out
daa
mov
sub
mov
icebp
jg
pop
jg
push
sahf
xor
jnp
movs
psubsw
mov
sub
xchg
(bad)
into
fild
neg
mov
mov
xor
fucomip
mov
push
jp
fwait
pop
cmp
(bad)
call
movs
mov
adc
jmp
popa
inc
sbb
mov
mov
test
cmp
(bad)
aam
and
pop
jg
ins
jae
imul
mov
mov
add
mov
not
arpl
mov
and
jne
movs
in
call
push
aam
fdiv
xchg
jae
xor
xor
loopne
test
sub
dec
stc
sbb
xchg
pop
or
xor
sbb
arpl
adc
(bad)
out
stos
aad
cmp
scas
jne
adc
outs
loop
loope
inc
sbb
cmp
ds
ds
push
ins
xchg
std
sbb
dec
je
mov
mov
inc
and
shl
pop
push
dec
jle
call
int3
mov
test
fwait
xlat
in
and
xor
std
fsubp
test
fiadd
sbb
cmp
fistp
lahf
and
jecxz
popf
icebp
hlt
enter
jne
mov
cli
mov
jae
fucomip
out
outs
mov
imul
cmp
mov
mov
outs
xchg
jg
in
mov
out
enter
lods
pop
jg
clc
ja
dec
loope
pop
gs
mov
fidiv
in
sti
cs
not
imul
push
ret
or
loopne
pop
push
inc
icebp
jmp
jno
outs
sub
lods
mov
dec
mov
adc
int3
add
js
sbb
rol
ret
adc
lahf
outs
nop
repnz
ret
xchg
xor
xchg
push
and
stos
push
ds
in
pop
xor
xchg
pop
push
cmc
fcom
sbb
sbb
adc
and
int
aas
popa
sbb
enter
lods
sbb
jae
xor
in
or
or
nop
test
xor
adc
icebp
pop
push
stos
jbe
fisubr
pop
or
inc
sub
xlat
in
push
mov
xor
rcl
xchg
or
add
and
pop
add
mov
fdivr
cmp
and
add
shl
loop
iret
jge
or
jae
cmp
gs
fistp
xor
xor
sahf
cdq
xchg
sbb
outs
loopne
push
inc
push
sub
sub
test
and
dec
in
outs
xor
xchg
adc
sbb
push
push
sahf
xchg
xor
pop
cmps
add
mov
iret
cmp
mov
aad
push
pop
sbb
inc
jp
jle
or
dec
js
cmp
jmp
stos
mov
mov
mov
cmc
imul
loop
dec
mov
cmp
ins
les
les
or
push
std
in
jmp
movs
and
enter
mov
mov
sbb
pop
hlt
out
pop
(bad)
jl
add
mov
xor
jmp
(bad)
fcmove
aam
push
pop
shl
and
jecxz
adc
int
push
mov
inc
shl
shl
pop
(bad)
jbe
adc
inc
xor
shr
movs
mov
xor
mov
pop
or
setg
std
lahf
aaa
repz
ret
lock
add
(bad)
mov
push
in
data16
out
test
push
xchg
mov
cmp
jne
out
dec
mov
fld
add
sbb
(bad)
cmc
jmp
sar
sbb
in
stc
jnp
add
push
sub
xchg
ret
sahf
cmps
push
mov
pop
or
je
mov
gs
xor
pop
mov
or
call
fnsave
cli
aam
pop
outs
into
push
lea
mov
mov
pop
or
out
int
lds
(bad)
mov
inc
loope
inc
aaa
jg
loop
mov
inc
cli
sbb
fs
int
jno
cmp
(bad)
ror
cmp
cmp
scas
cli
xchg
adc
int
xchg
fsub
and
rcl
mov
cmps
dec
pop
push
jb
xor
and
dec
inc
and
fild
(bad)
iret
and
inc
jmp
rol
cmp
shl
fwait
sahf
scas
adc
stos
test
xor
adc
dec
nop
mov
in
dec
adc
mov
add
ret
jne
jno
push
retf
cmp
jg
loope
add
in
dec
daa
ja
mov
xchg
jmp
or
jae
cwde
mov
in
outs
in
jecxz
cld
imul
or
pop
pop
mov
cmp
mov
cmp
or
push
mov
sub
or
(bad)
idiv
movs
sub
fcom
adc
pushf
enter
push
stos
cld
sar
packsswb
imul
dec
cmp
cs
dec
pop
push
inc
add
adc
and
pop
jmp
lahf
scas
add
xchg
outs
gs
xchg
(bad)
fld
or
mov
push
(bad)
mov
and
xor
mov
and
stos
ret
mov
add
fidiv
xchg
ror
ffree
push
dec
dec
or
shl
jl
ffree
dec
xor
or
or
or
cld
mov
js
mov
push
mov
(bad)
jo
dec
(bad)
adc
add
push
pop
adc
adc
dec
test
xchg
adc
retf
fidiv
inc
push
in
pop
cs
fimul
jns
jnp
push
das
inc
push
aaa
push
mov
jae
add
mov
inc
adc
not
mov
cs
test
push
mul
(bad)
lods
imul
jle
xor
scas
je
outs
movs
int
out
vpshaq
into
es
dec
xor
imul
or
inc
sub
ins
jno
out
stos
dec
lds
sar
(bad)
mov
pop
pushf
sbb
xchg
dec
je
aad
pop
loope
mov
pop
sub
daa
pop
push
test
inc
(bad)
cdq
int3
gs
xor
retf
shl
inc
adc
jno
cmp
add
sub
icebp
jp
xor
ret
popf
mov
mov
(bad)
test
imul
push
mov
test
dec
mov
sub
imul
pop
sbb
ins
pop
scas
repz
loope
bound
enter
fiadd
mov
out
mov
dec
fiadd
outs
pusha
jmp
xchg
mov
in
data16
fwait
push
dec
sbb
gs
loop
out
xchg
ss
cdq
mov
lods
xchg
jo
mov
clc
dec
add
aas
std
mov
cmps
je
pop
out
std
out
jne
and
out
push
dec
xor
pop
mov
stos
add
sub
mov
bound
push
sbb
aad
push
mov
xlat
add
and
cmc
add
and
mov
push
ins
xchg
std
loopne
xchg
inc
dec
and
adc
push
xchg
sbb
push
xchg
mov
jecxz
(bad)
lods
pusha
xchg
sub
popa
jo
push
pop
push
or
ins
inc
cmp
push
or
outs
push
jp
ret
xlat
call
imul
icebp
outs
nop
ror
rcr
pop
js
jmp
xchg
outs
sahf
jp
into
cmps
push
xchg
add
add
repz
or
jg
loopne
add
inc
fs
inc
mov
call
push
push
test
movs
jl
sbb
inc
loop
into
jecxz
ror
add
aam
dec
sub
push
mov
pop
icebp
mov
mov
cmp
dec
mov
es
sahf
and
adc
test
mov
ror
jmp
inc
xchg
add
push
fldcw
fbstp
jns
pop
xor
and
imul
pusha
pop
push
in
add
add
push
lds
loope
dec
pop
jns
shr
loope
sahf
jge
mov
ins
jl
fidiv
outs
add
adc
cmp
ret
adc
lahf
test
leave
xor
or
mov
shr
(bad)
xchg
mov
je
loop
jle
dec
dec
sub
lods
push
and
pop
mov
push
outs
retf
enter
add
pop
push
mov
cli
aas
pushf
pushf
sbb
dec
popf
pop
mov
xchg
pop
or
sub
push
rcl
(bad)
int3
nop
add
xchg
(bad)
push
ins
fistp
cmp
out
test
adc
cwde
add
sbb
and
xchg
mov
or
ins
mov
mov
xor
push
sbb
jmp
mov
ja
arpl
cmp
leave
mov
lods
add
pop
pusha
ftst
xchg
in
xchg
in
retf
ret
test
dec
inc
(bad)
int
mov
mov
retf
pushf
scas
xor
inc
jae
push
ds
in
mov
test
sub
test
dec
test
rcr
sub
dec
lgdtd
push
ror
stos
sub
int3
xchg
(bad)
fst
adc
xor
xor
jno
(bad)
int3
push
ror
test
push
lea
cmc
sbb
inc
outs
pusha
(bad)
ds
mov
pop
sbb
xchg
mov
shr
stos
jge
fs
push
inc
xchg
pop
jmp
(bad)
js
push
repnz
das
cmp
inc
add
pusha
outs
pop
sar
add
imul
jp
push
and
(bad)
adc
inc
data16
lahf
cmp
jl
inc
mov
int3
lea
lds
stos
lock
pop
and
jmp
mov
mov
es
jb
jl
sub
jnp
dec
xor
mov
ds
popf
jnp
dec
mov
neg
inc
outs
mov
push
or
rol
fs
cmp
add
pop
dec
mov
cwde
mov
sub
lods
jecxz
(bad)
xchg
xchg
icebp
mov
jle
and
mov
push
mov
shl
pop
(bad)
mov
push
jmp
xchg
or
sbb
pop
dec
pop
sbb
add
daa
in
scas
add
dec
mov
cld
dec
sub
push
push
jbe
mov
sub
stc
push
adc
adc
add
and
add
fidiv
or
and
pushf
jne
stos
cdq
sbb
mov
mov
loope
inc
xlat
scas
fild
loop
shl
jno
sbb
adc
(bad)
jmp
into
cli
clc
leave
jecxz
xor
movs
cmp
mov
ja
dec
daa
adc
push
jmp
mov
imul
inc
retf
outs
aad
fs
test
(bad)
int3
mov
mul
sbb
loop
mov
aam
bound
inc
stos
jae
dec
pop
xchg
and
pop
call
fst
jg
or
ficom
mov
aaa
adc
mov
and
dec
in
rol
xchg
mov
scas
into
jle
fcom
fldenv
sub
fstp
cmps
out
push
inc
enter
dec
push
mov
loop
shl
cmps
icebp
in
cdq
adc
sbb
loopne
inc
add
sbb
mov
mov
(bad)
nop
retf
lds
(bad)
cli
push
int
out
fidiv
shl
dec
dec
mov
mov
xchg
mov
push
adc
push
sbb
pop
bound
add
sub
icebp
cli
dec
mov
call
sar
push
(bad)
push
(bad)
push
push
pop
fucom
in
into
pop
aas
ins
sbb
add
dec
mov
push
jle
scas
mov
mov
lea
(bad)
aad
aas
adc
data16
lahf
dec
push
fwait
jbe
push
pop
or
add
add
rcr
es
in
mov
aaa
or
mov
add
cmp
pop
xchg
mov
retf
pop
sub
fcmovnu
gs
add
mov
or
repz
add
or
jp
dec
cdq
popa
xor
imul
mov
daa
fidiv
mov
loop
cmp
cmc
outs
div
fsubp
enter
aam
sub
adc
xchg
jnp
adc
push
ins
dec
pop
(bad)
mov
es
jne
pop
rcl
maskmovq
neg
push
cmps
popf
mov
fsub
xlat
fild
ds
loop
inc
test
jno
mov
xchg
ds
cmp
cld
es
and
adc
pop
push
sub
das
xchg
je
dec
aas
out
lock
(bad)
test
mov
gs
lock
add
fsub
mov
sti
shl
leave
lods
mov
jmp
cmps
push
jne
xchg
lds
stos
jmp
punpcklbw
sub
in
movs
inc
adc
movs
jmp
inc
or
loop
mov
push
adc
lods
in
ret
mov
inc
sbb
arpl
fdiv
shr
les
pushaw
xchg
dec
fstp
sbb
or
mov
add
outs
dec
or
inc
mov
mov
arpl
or
cmps
or
mov
cdq
retf
xchg
retf
movs
arpl
into
mov
push
or
std
fnstenv
in
in
cmp
sbb
or
cmp
out
jns
lods
lods
xchg
sub
sahf
pop
call
(bad)
lods
cmc
cmps
jmp
outs
add
dec
pop
std
into
add
fnstcw
test
test
pusha
add
movs
popf
je
test
dec
jmp
pop
xchg
adc
fdivr
jne
xchg
inc
mov
sub
imul
cmc
aad
mov
pop
test
jp
adc
sbb
(bad)
dec
lods
nop
fcomi
sub
and
adc
pop
xor
adc
cmp
addr16
jl
out
adc
jno
ficom
aam
(bad)
cmp
sub
jecxz
cmp
ret
or
mov
mov
rcl
mov
push
dec
cmps
dec
loopne
stos
add
xor
adc
out
ss
dec
repnz
sbb
mov
shl
push
lods
mov
xchg
mov
push
sbb
stos
into
dec
outs
ja
rol
xchg
and
jle
add
cmps
leave
xlat
add
inc
mov
fwait
ret
jns
rcr
sbb
adc
inc
sti
aad
mov
sub
dec
jno
xchg
sub
xor
mov
pusha
pusha
cmps
popa
cli
popf
std
xchg
mov
xchg
cmp
xor
out
push
in
ins
movs
dec
imul
dec
sub
scas
frstor
or
adc
loop
push
dec
outs
mov
add
sbb
movs
push
and
leave
imul
cmp
in
xor
cmps
or
in
xchg
loopne
(bad)
push
xor
shl
mov
jmp
scas
sar
push
sub
inc
add
fisubr
pusha
mov
and
dec
xor
push
(bad)
dec
xor
lahf
test
pop
or
mov
push
push
daa
add
imul
stos
jmp
adc
adc
iret
sbb
hlt
mov
cmp
pop
mov
xlat
mov
rcl
jmp
test
jmp
inc
je
push
aaa
lock
sub
sbb
in
xchg
repnz
cmp
add
xchg
dec
in
cs
cmps
nop
or
loope
pop
mov
call
jb
sbb
pop
cdq
out
sub
mov
sub
and
pop
out
das
jns
scas
add
jne
adc
loop
inc
in
dec
xor
or
test
cmps
in
clc
mov
push
lds
xor
es
arpl
clc
mov
and
sbb
xchg
mov
mov
(bad)
sbb
sbb
jne
inc
ret
cdq
adc
jns
js
and
call
xor
in
mov
test
or
pop
jecxz
sub
inc
ja
push
pop
add
dec
and
xchg
and
mov
add
sbb
les
jae
sbb
dec
xchg
xchg
pop
and
shr
loop
pushf
jb
in
pusha
adc
jmp
loope
add
adc
xchg
mov
or
movs
(bad)
mov
jg
ins
movs
or
stos
jne
cmp
mov
mov
pop
xor
adc
xchg
pop
ins
xor
ret
fiadd
push
mov
gs
shl
sbb
mul
out
pop
lods
call
xchg
lods
call
mov
mov
cmp
sub
int
push
push
add
mov
cwde
rcl
ins
jmp
jge
jnp
aam
sbb
cli
xor
cmp
jnp
and
lods
cmp
xor
out
fwait
jmp
pop
mov
cmc
in
(bad)
jns
mov
loopne
mov
dec
out
(bad)
retf
lods
nop
call
or
lahf
cmps
jmp
xor
push
add
push
sub
ds
push
ja
test
lods
dec
dec
or
loopne
adc
mov
lea
mov
mov
(bad)
gs
xor
mov
sub
lock
mov
adc
pop
shl
jbe
jmp
clc
inc
in
pop
dec
leave
sub
ret
clc
fmul
cs
repz
inc
icebp
jnp
xor
cmps
jne
xchg
das
pshufw
mov
das
add
std
(bad)
repz
jne
and
mov
les
jmp
dec
movs
xor
adc
mov
imul
ret
mov
xchg
xlat
cs
test
sub
retf
clc
mov
push
cmp
xlat
cmps
loopne
add
and
or
test
clc
xor
les
test
sbb
stos
loopne
imul
mov
add
rcr
inc
mov
dec
pop
stc
adc
test
nop
cmps
adc
sbb
xchg
cmps
mov
push
out
(bad)
jl
int
sub
sbb
js
outs
jle
xchg
pop
aam
lahf
mov
sbb
xchg
bound
retf
jecxz
sbb
sbb
push
push
adc
shl
das
pop
push
jne
push
(bad)
test
lods
or
les
lds
retf
push
shl
fwait
movs
sbb
adc
jle
adc
adc
jmp
lock
inc
lods
adc
fidivr
cld
mov
fwait
aas
jae
or
movs
adc
imul
mov
cs
mov
imul
mov
jg
aas
mov
test
(bad)
nop
inc
pop
pop
outs
mov
imul
test
sbb
call
out
aam
push
xor
not
test
add
or
and
jbe
aad
cmps
ss
lds
popa
retf
fnstsw
cmp
lods
ror
push
ins
ja
clc
or
pop
or
pusha
inc
stc
lods
dec
add
lods
test
repnz
jecxz
inc
stc
inc
rcr
mov
repz
aam
sbb
movs
or
push
inc
mov
imul
dec
outs
mul
cli
fsub
inc
gs
cli
cmp
fs
mov
(bad)
fcmovne
dec
dec
sbb
js
pop
lahf
pop
jmp
es
sti
pop
arpl
sbb
aaa
stos
mov
(bad)
les
push
repz
fstp
mov
or
movs
or
add
push
(bad)
fs
xchg
mov
je
rcr
push
aad
jae
or
mov
push
inc
push
dec
push
sbb
movs
ja
xor
popf
dec
mov
retf
jecxz
mov
mov
shr
and
(bad)
lock
shl
ja
neg
nop
push
cmps
dec
rcr
add
lock
fmul
xor
rcl
daa
clc
mov
adc
sbb
cmp
frstor
cmp
push
lds
outs
jp
cmc
loopne
mov
mov
xchg
fdivp
xchg
ja
je
pop
push
leave
lods
push
clc
add
cmc
add
push
movs
imul
ret
jge
xor
xor
mov
js
push
push
sbb
xchg
arpl
movs
cmc
push
dec
mov
fsub
jbe
retf
sbb
sar
cmp
mov
mov
add
cwde
jne
shl
retf
jns
pop
js
xor
dec
retf
in
inc
bound
test
xchg
lods
push
fwait
mov
adc
in
scas
mov
or
or
cli
xchg
pop
scas
push
inc
mov
mov
std
pop
push
(bad)
mov
or
popf
sub
mov
xlat
push
dec
call
scas
adc
int
inc
stc
push
retf
cmp
xchg
or
cdq
jae
shl
loop
pop
fwait
xchg
stos
push
popa
out
arpl
pop
repz
fadd
or
rcr
movs
frstor
je
adc
sub
pop
mov
sar
rcl
stc
adc
dec
pop
mov
mov
fcomp
mov
push
cmp
jo
ret
sti
(bad)
fucomip
push
retf
push
xchg
nop
cmp
stos
call
mov
aas
mov
addr16
imul
fist
loope
mov
scas
out
dec
(bad)
xchg
xor
cmps
lods
and
sub
es
popa
nop
in
fcmovu
push
inc
push
mov
movs
(bad)
fsubr
add
pop
loop
sub
cdq
pop
rol
and
push
arpl
imul
loopne
cdq
inc
push
lahf
neg
pop
movs
push
xor
into
adc
push
ror
out
sub
inc
std
cmp
enter
mov
push
outs
fs
push
and
mov
ret
dec
popf
popa
(bad)
in
ins
adc
adc
jmp
lds
mov
movs
cmc
not
or
push
push
ret
mov
add
(bad)
mov
add
adc
or
clc
push
retf
mov
repnz
xchg
jb
call
sahf
xchg
push
nop
bound
je
mov
pop
pop
cwde
sbb
cmp
sub
push
popf
mov
push
add
mov
mov
xchg
neg
pop
mov
jl
mov
cmp
cdq
enter
xchg
jb
mov
lds
out
xor
mov
push
pop
or
sub
je
or
ror
and
jne
sbb
iret
popa
pop
sbb
fcom
fsubr
jge
leave
cld
jp
mov
cmp
pminsw
repnz
sti
lock
adc
xor
cmp
pop
jae
ins
add
dec
out
mov
ror
lods
jb
lea
shl
das
adc
jmp
mov
scas
xchg
shr
call
xlat
and
cmps
dec
jbe
pop
adc
and
inc
mov
fs
mov
inc
lock
lock
out
jmp
or
push
pop
popf
adc
xor
sbb
push
movs
call
std
test
mov
pop
hlt
xchg
into
inc
fisubr
mov
imul
sub
lds
xchg
jmp
(bad)
shl
cld
jae
daa
adc
cmp
mov
sti
mov
(bad)
fcom
neg
fwait
cmp
aas
mov
call
mov
jne
inc
ret
je
nop
clc
test
pop
dec
fdiv
fstp
mov
cmc
jmp
mov
xchg
les
add
das
push
cmp
das
push
pop
(bad)
inc
mov
leave
mov
mov
movs
ficom
daa
push
xlat
xchg
sar
push
loop
dec
pushf
arpl
lea
js
aas
test
cmp
fnstsw
mov
test
popa
retf
ret
inc
bound
xchg
dec
loopne
dec
mov
mov
jbe
push
loope
mov
enter
mov
pop
out
fcomp
mov
jmp
out
xchg
adc
and
loop
sbb
es
ja
fcom
mov
shl
push
imul
xor
pop
or
jns
inc
ins
add
inc
mov
dec
iret
inc
(bad)
mov
punpckhdq
cwde
inc
jmp
cwde
push
ret
arpl
aad
add
xchg
xchg
in
in
cdq
cmp
sbb
jle
pop
(bad)
imul
int3
xor
aas
pop
sub
outs
mov
sbb
sbb
fsub
das
stos
scas
adc
cmps
fisubr
call
jae
adc
xlat
xchg
je
addr16
mov
cmp
pop
outs
test
sbb
out
iret
loope
in
nop
jle
fs
push
mov
mov
fwait
ds
imul
cwde
dec
jmp
sub
(bad)
adc
xor
pop
cdq
mov
mov
mov
push
in
dec
xor
cmp
int
(bad)
sbb
ins
push
xchg
xor
jnp
sub
loope
hlt
dec
push
into
lds
pusha
psubsb
adc
pop
scas
sub
je
mov
mov
movs
mov
xchg
adc
xchg
xchg
inc
loopne
or
shr
xor
add
movs
push
shl
adc
jns
call
sbb
sbb
out
jmp
adc
repz
or
xor
add
pop
pop
inc
mov
xor
pop
movaps
mov
sbb
dec
bound
jle
out
cdq
bound
mov
xor
sbb
test
push
xchg
cmp
jge
pop
adc
sbb
sbb
push
enter
push
mov
or
data16
test
mov
jno
add
adc
add
leave
add
popf
(bad)
sti
push
jo
clc
pusha
test
sub
add
cmc
into
push
jb
lea
pop
mov
xor
jbe
inc
xchg
push
cwde
and
lods
cmp
ror
xor
mov
push
push
rcl
inc
hlt
dec
dec
jne
test
test
xor
stos
sahf
pop
dec
aaa
push
mov
outs
cdq
imul
out
jp
xchg
leave
ficomp
inc
cmp
push
daa
fld
push
aaa
jbe
push
(bad)
mov
or
fbld
push
cmp
addr16
pop
pusha
cli
jns
sti
loop
mov
daa
jno
lea
jo
push
(bad)
repz
leave
dec
cmp
nop
and
dec
(bad)
pop
dec
sbb
push
cmps
aad
mov
or
cmp
call
mov
and
dec
sub
aaa
jecxz
cmps
dec
mov
outs
iret
repnz
outs
aas
jecxz
cs
in
lea
jno
xchg
push
aam
jg
paddsb
dec
push
and
daa
lahf
(bad)
mov
mov
cld
and
jnp
adc
cmps
and
and
(bad)
(bad)
(bad)
or
(bad)
mov
xor
shr
sub
inc
in
ror
(bad)
cld
scas
add
shl
push
inc
mov
ret
push
push
push
ss
xchg
cld
push
or
int
mov
xchg
push
sbb
inc
push
ss
cmp
xor
sub
shl
scas
mov
inc
shr
inc
stc
pop
and
loop
cmp
leave
jl
popf
call
cmp
pop
push
sub
lea
test
les
test
xchg
pop
sub
(bad)
jp
jnp
or
retf
imul
pusha
retf
ret
fsubr
aad
jb
jns
inc
xchg
shl
inc
fidiv
nop
lods
pusha
pop
not
repnz
adc
jmp
fist
pop
adc
and
repnz
shl
jmp
es
and
push
and
jno
out
push
mov
push
(bad)
aaa
pop
(bad)
shl
je
fwait
pushf
(bad)
imul
lds
bnd
mov
jo
and
imul
sub
adc
paddusb
jmp
xor
sbb
aad
xlat
les
pop
sub
pusha
clc
stos
ftst
push
xor
mov
pop
in
test
add
shl
fimul
jmp
jo
jnp
sbb
sbb
mov
inc
mov
fdiv
jg
push
add
xchg
inc
scas
outs
add
dec
lea
out
pop
dec
daa
and
sahf
ins
dec
cmc
clc
(bad)
mov
mov
lock
inc
out
ret
mov
hlt
xchg
lahf
and
sub
xor
push
and
and
adc
mov
mov
jp
je
lds
in
dec
lock
sub
fbld
mov
and
outs
clc
iret
xor
outs
clc
inc
mov
iret
aas
sbb
adc
popf
out
inc
add
inc
mov
pop
cmp
jg
and
jle
into
lds
push
stos
loopne
loopne
or
in
cli
xor
xor
(bad)
jle
sub
sub
jbe
mov
outs
sub
popf
fld
push
xor
sbb
icebp
pop
dec
lods
dec
stos
in
cmc
dec
jmp
ds
pop
fimul
outs
retf
pop
clc
fstp
int
scas
sub
div
lahf
gs
icebp
call
adc
cli
sub
adc
dec
mov
pop
push
outs
inc
sub
fwait
test
pop
cdq
adc
dec
das
cmp
cwde
pop
sbb
cmc
push
pop
xchg
popf
cs
mov
aas
test
dec
add
in
jb
sub
fcomp
inc
fadd
aaa
adc
movs
arpl
in
(bad)
fs
sbb
mov
cmp
jge
pop
aaa
clc
jp
xchg
sbb
mov
push
xchg
pop
out
xor
retf
mov
sub
jp
sub
xor
sub
in
xchg
mov
fadd
pop
movs
xor
daa
stos
pop
sbb
movs
inc
mov
inc
clc
pop
cmps
cdq
lahf
push
jnp
mov
lahf
sbb
icebp
out
fs
fidiv
jge
arpl
daa
inc
ins
xchg
das
mov
lahf
inc
stos
ret
pop
inc
push
fndisi(8087
test
test
(bad)
int3
in
sti
cmp
fmul
shl
es
adc
das
(bad)
add
mov
pop
test
outs
in
and
jle
sbb
push
movs
jl
retf
in
fistp
lods
lea
lahf
and
cmp
add
or
mov
cmp
dec
fnstenv
shr
lods
fbld
jne
in
retf
dec
sbb
lock
cmp
data16
jp
aaa
into
ds
ins
cs
inc
cmps
fcomp
lock
dec
add
mov
stos
mov
mov
mov
ins
inc
jbe
lock
mov
pop
or
adc
sub
sub
pop
inc
cmp
sti
test
mov
(bad)
mov
imul
out
mov
mov
aad
nop
xor
add
lods
sub
cmp
fdiv
inc
add
test
fs
and
jmp
push
repz
or
mov
jmp
shl
dec
push
push
or
in
cmps
rcr
jecxz
imul
push
sub
sub
enter
(bad)
clc
pop
mov
imul
sub
sub
fiadd
jae
ret
mov
enter
not
adc
hlt
pusha
sub
ins
mov
imul
mov
stos
ret
je
mov
jg
jnp
xor
sub
scas
mov
or
dec
xor
clc
pop
pop
lods
jecxz
iret
adc
call
jnp
push
imul
dec
jg
mov
push
jmp
cmc
sbb
std
test
jg
xor
(bad)
xor
mov
and
pop
ja
push
out
xchg
sub
mov
or
add
fidivr
jnp
push
out
retf
jo
adc
sti
jae
xchg
adc
inc
or
jne
enter
repz
inc
sub
or
mov
scas
and
ins
mov
pop
or
inc
mov
sti
sbb
cli
and
dec
ins
xchg
hlt
add
das
imul
or
fdivrp
add
mov
popf
jns
ret
imul
add
cmovg
mov
cmp
xchg
pop
mov
repz
ret
xchg
mov
xchg
movs
loopne
push
add
test
cmp
ds
xchg
out
push
ret
(bad)
pusha
xchg
or
es
mov
push
mov
xlat
inc
sub
mov
scas
popf
inc
jmp
sub
pop
dec
cmp
mov
add
popa
iret
retf
dec
cmps
je
lods
ja
push
push
not
repz
jmp
inc
movs
add
cmps
pusha
addr16
dec
movs
xchg
jl
mov
xor
jbe
call
ja
sar
stc
es
xchg
inc
comiss
push
idiv
cmc
or
or
xchg
inc
xor
fidiv
and
and
call
std
aam
fmul
lahf
push
adc
pusha
pop
adc
cmp
ret
sbb
or
dec
out
sahf
int3
lods
retf
rcr
adc
shl
cmp
fild
aam
jb
xor
sub
fidivr
or
imul
scas
xchg
dec
movs
pop
inc
mov
jecxz
xchg
and
das
jns
pop
adc
mov
enter
mov
jno
or
xchg
in
mov
or
lods
jmp
ret
call
and
mov
sbb
push
push
sbb
pop
movs
xchg
add
push
loopne
popf
jg
fild
cli
cmp
shl
test
fmul
in
dec
cmp
les
cmps
mov
mov
add
std
call
sti
in
adc
ins
push
adc
in
adc
data16
xor
iret
or
in
popa
jl
inc
shr
mov
cmp
imul
shr
xchg
mov
xor
mov
ss
adc
sahf
data16
(bad)
push
or
adc
retf
ja
(bad)
stos
jnp
test
pop
cli
loopne
repnz
es
xlat
dec
or
repz
pushf
push
adc
outs
push
xchg
mov
ins
pop
dec
ss
pop
pop
mov
cdq
iret
jge
mov
jbe
mov
pop
hlt
mov
loope
jae
fsub
lea
fcomp
in
jg
sub
jb
or
sbb
jne
cli
push
js
xor
ret
outs
sbb
iret
js
test
sahf
ja
jbe
les
mov
gs
int3
xchg
jge
add
add
sbb
xchg
aas
xchg
ficom
jmp
out
fsub
jecxz
and
test
arpl
das
pop
in
or
dec
test
sbb
add
jmp
and
sbb
add
mov
cdq
inc
arpl
xor
sbb
sub
xchg
push
push
ror
fsub
add
addr16
jecxz
mov
add
xchg
loope
cmc
jno
xchg
movs
add
mov
repnz
lods
cmp
jmp
iret
inc
mov
add
add
movs
in
and
sub
sub
sub
loopne
je
push
data16
test
inc
xchg
das
out
sbb
jl
push
xlat
fwait
xor
mov
xchg
pop
pop
test
fwait
sub
sub
jecxz
add
rcr
mov
sub
sub
sbb
push
sar
dec
xchg
mov
xor
xor
stos
mov
jae
push
ins
out
mov
adc
dec
jecxz
mov
out
inc
sbb
(bad)
mov
cmps
repnz
imul
mov
inc
retf
inc
and
xchg
lahf
xor
addr16
and
and
(bad)
push
xchg
out
daa
add
mov
test
dec
sar
dec
mov
pop
push
sti
inc
movs
(bad)
dec
out
xor
loop
push
mov
push
dec
xor
jge
adc
push
leave
cwde
mov
fdiv
imul
clc
fnsave
sti
dec
inc
xchg
add
push
sbb
jnp
xor
mov
inc
dec
sub
fstp
mov
push
mov
mov
lods
xchg
das
xchg
sub
mov
xchg
xlat
sbb
in
ins
sahf
mov
and
arpl
outs
jns
stos
test
push
aam
sub
adc
cmps
push
push
mov
rcl
ret
mov
call
pop
add
dec
adc
or
outs
mov
xchg
push
lahf
das
aas
sbb
jb
fild
add
rol
aas
lock
pop
or
pop
xlat
jg
ss
in
cmp
inc
popa
(bad)
mov
or
(bad)
push
cmp
mov
xchg
mov
pusha
mov
test
aad
lock
xor
mov
mov
add
cmp
loop
sub
(bad)
neg
in
daa
arpl
mov
movd
jmp
dec
ins
out
aas
and
movs
mov
(bad)
test
les
fisub
cdq
cmc
cmp
jbe
xor
dec
movs
popa
and
enter
xchg
movs
and
push
mov
cmp
repz
into
mov
je
cmps
pop
jecxz
cmp
jne
aam
stos
inc
test
ja
and
inc
push
dec
add
rol
cmp
or
jle
in
popf
scas
test
ins
loop
inc
(bad)
imul
and
push
push
hlt
jmp
mov
push
cmp
test
sahf
inc
sbb
sbb
dec
push
dec
rcl
pop
adc
pop
mov
cmp
test
add
jmp
push
hlt
retf
sub
dec
add
xor
or
sahf
mov
in
push
int3
jp
leave
mov
aas
and
xor
cmp
cmp
cmp
rol
mov
inc
test
or
push
aam
jo
dec
mov
cmp
cwde
cmp
test
inc
in
arpl
mov
xchg
pusha
dec
jl
inc
(bad)
fsub
aam
adc
cmp
jmp
neg
mov
into
jmp
push
jnp
add
mov
and
sub
adc
xchg
push
add
arpl
loopne
inc
adc
shl
enter
daa
or
ins
es
ins
not
stc
mov
gs
mov
inc
cmp
cmp
jbe
xor
jae
fnsave
adc
aad
mov
inc
mov
cmps
cmps
lods
test
push
(bad)
mov
sub
jno
jp
(bad)
neg
sub
icebp
add
fdivr
aaa
xchg
xor
xor
(bad)
push
ret
jle
lods
test
into
into
ret
js
push
lods
xchg
push
cmc
jl
jns
or
mov
pop
jmp
stos
stos
clc
cmp
mov
ins
push
(bad)
in
pop
sar
mov
dec
(bad)
fisttp
inc
sbb
sbb
retf
test
nop
sahf
push
(bad)
push
jge
jp
out
xlat
pop
pop
out
push
push
pop
xor
or
aas
jp
jae
mov
jb
dec
xor
push
rol
inc
mov
iret
retf
test
dec
adc
push
outs
add
jmp
loope
jae
push
cmp
jno
cmps
and
daa
enter
mov
push
add
sub
jno
pop
mov
xchg
pop
push
ss
das
lds
fist
test
dec
push
mov
inc
mov
push
dec
leave
push
mov
imul
rcr
xor
leave
outs
mov
push
inc
push
fist
add
push
sbb
mov
retf
nop
jne
scas
push
adc
out
test
out
inc
add
sub
mov
out
jl
bound
mov
pop
sar
pop
dec
inc
mov
push
enter
test
push
push
or
or
int
pop
ja
xchg
test
(bad)
jg
jmp
mov
pop
mov
nop
inc
xchg
imul
push
fild
push
jle
stos
ror
pop
bound
out
dec
sbb
movs
add
lods
pop
pop
gs
or
lods
rcl
xchg
sbb
push
lds
aad
ret
dec
sub
fcomp
aam
test
call
lahf
push
cmp
mov
js
sub
fdivr
jne
dec
push
into
dec
jmp
xor
mov
fmul
xchg
mov
in
push
hlt
pop
gs
push
adc
(bad)
fxam
imul
or
arpl
xchg
xchg
pop
mov
and
aas
xor
movs
and
mov
lods
adc
sbb
scas
sbb
popf
and
les
dec
repnz
cli
mov
jl
fcomp
sub
push
mov
or
jmp
mov
sub
fucomp
or
in
stos
mov
mov
ds
mov
in
sbb
xlat
push
inc
(bad)
sub
in
inc
add
pop
sbb
jg
cmp
test
mov
(bad)
retf
fdiv
(bad)
lahf
loopne
std
adc
cdq
push
xchg
aad
imul
iret
call
popa
dec
cmp
cmp
jo
push
call
xchg
adc
in
push
and
call
arpl
dec
jmp
ret
sti
jbe
dec
mov
and
push
pop
call
adc
out
inc
xor
sti
enter
add
cli
xchg
ss
xchg
or
mov
sub
movs
xor
dec
pop
mov
test
fistp
shl
cmps
pop
and
mov
jnp
inc
and
mov
jmp
retf
imul
test
fnstsw
dec
adc
mov
jno
sar
fnsave
mov
mov
cmp
jns
add
push
lea
cmp
xor
cmp
pop
aaa
add
adc
neg
sub
sbb
xchg
(bad)
dec
or
pop
neg
xchg
sbb
or
(bad)
mov
out
sbb
(bad)
mov
mov
add
jns
fwait
gs
out
pop
(bad)
inc
pop
mov
jbe
jg
call
jecxz
test
and
xchg
ins
out
in
outs
jne
popa
aaa
(bad)
jle
pusha
mov
xchg
icebp
or
cmps
lds
je
popf
in
popa
jmp
stos
pushf
neg
inc
std
leave
jns
adc
adc
mov
jnp
pusha
or
push
rcr
push
dec
fisub
sub
cld
shl
fst
inc
xchg
push
movs
cmovle
mov
adc
loope
sti
daa
inc
sbb
nop
in
leave
push
rol
mov
rcr
repz
loopne
scas
add
cmp
mov
in
iret
das
xor
jo
(bad)
repnz
push
lods
mov
inc
inc
lea
imul
push
or
mov
dec
inc
cli
mov
mov
ins
mov
mov
leave
bound
sti
aam
call
inc
(bad)
ins
rcr
xor
xchg
mov
jge
rcr
xchg
inc
adc
inc
hlt
push
mov
clc
addr16
sbb
xor
cwde
jecxz
ret
xor
mov
xor
add
shl
inc
cmp
leave
adc
pop
rcl
or
sub
push
mov
mov
test
icebp
movs
into
mov
mov
fstp
stc
mov
inc
sbb
test
mov
sbb
dec
into
ret
aam
cld
push
shl
in
pop
dec
mov
push
xchg
push
jnp
xchg
rcr
sub
mov
cmps
stos
sbb
xchg
cmp
xor
adc
das
leave
nop
aad
or
iret
or
mov
and
enter
pop
(bad)
repz
scas
inc
mov
adc
push
(bad)
shr
call
or
call
pop
(bad)
loopne
int
sbb
(bad)
adc
mov
add
xchg
cmp
dec
cmp
jp
int
lds
das
add
add
cmp
cmp
sbb
outs
(bad)
xor
jmp
adc
popa
adc
cmp
mov
cmp
jle
mov
or
lea
xchg
enter
jge
jg
sbb
add
ror
dec
lods
test
int3
push
xor
adc
mov
iret
aad
xor
push
xchg
in
jmp
in
pop
clc
push
daa
out
into
and
test
inc
outs
inc
mov
stc
and
pop
ror
out
and
dec
movs
pop
add
cmp
(bad)
add
push
inc
mov
clc
lods
shl
xor
mov
(bad)
push
and
push
stc
retf
sbb
cmps
mov
push
ds
lea
test
addr16
cmp
mov
inc
popa
loopne
popf
xor
aad
xchg
mov
add
fadd
in
xchg
sbb
cmps
lock
xchg
mov
lods
movs
jns
clc
sar
mov
jnp
xor
dec
lea
scas
std
pop
or
cmps
xchg
fnstcw
sbb
sub
cmp
sbb
xor
or
xor
sbb
shl
mov
loop
dec
(bad)
ja
shl
jmp
jl
test
push
ins
dec
and
mov
loop
int
test
out
daa
push
fimul
or
test
cmp
adc
das
in
lds
jmp
ss
inc
adc
jge
xor
neg
inc
rcl
sbb
out
jb
aad
icebp
pop
or
sbb
push
cmp
and
push
daa
jnp
outs
aad
or
pop
(bad)
pop
dec
add
or
movs
add
repz
popw
fist
or
jae
inc
je
cdq
pop
jbe
add
ret
pop
sub
mov
popf
mov
mov
pop
cwde
or
sub
mov
or
jae
pop
rcl
int3
sbb
cmc
cmp
sbb
retf
(bad)
mov
sbb
mov
jp
add
xchg
cmp
sbb
cmc
sub
mov
je
je
fwait
mov
mov
movs
in
add
pop
stos
call
push
leave
cmps
mov
cmps
and
mov
inc
mov
mov
sub
cmp
leave
mov
or
mov
and
scas
adc
sub
out
or
call
jno
outs
mov
int
lods
add
push
push
pop
neg
cmc
or
cmps
sbb
dec
test
pusha
jo
test
xor
and
pop
fsubr
ja
(bad)
retf
adc
cmp
call
mov
pop
adc
sbb
pop
shl
mov
mov
hlt
mov
in
push
daa
ret
mov
fwait
sbb
mov
test
jmp
hlt
and
out
stos
fnsave
mov
arpl
(bad)
iret
sti
xlat
and
cmc
or
cs
xchg
dec
cmp
enter
and
sbb
es
jle
icebp
or
pop
sub
cmp
icebp
sub
aaa
jnp
mov
lods
loope
sbb
aam
mov
repnz
and
mov
mov
jns
jmp
inc
add
add
clc
fisttp
mov
lods
pop
loope
mov
ficomp
mov
out
das
inc
mov
inc
adc
ror
pop
ins
sbb
sub
or
(bad)
icebp
out
jbe
and
sub
adc
repnz
sbb
add
addr16
jle
mov
pop
push
or
inc
pop
in
mov
lock
mov
adc
rcr
xchg
ja
xchg
popf
sbb
outs
push
sub
mov
call
xchg
fsub
push
and
out
jle
add
hlt
ret
adc
xlat
or
popf
mov
cmc
dec
adc
xchg
and
xor
shl
or
sub
dec
mov
jae
lods
xchg
xchg
cmp
sbb
shr
inc
ss
rol
jno
or
es
data16
jmp
ret
mov
jmp
sahf
jns
mov
movs
aad
outs
popf
nop
popa
aad
mov
fwait
ins
mov
inc
icebp
pop
xchg
jae
lea
xchg
add
shl
adc
cmc
hlt
fisttp
mov
imul
ret
and
cs
dec
cs
aam
fisttp
repz
jmp
lock
mov
stos
cmps
lods
outs
jecxz
xor
rcr
test
cmp
xchg
or
in
push
push
and
xchg
push
ror
jb
mov
in
cld
mov
inc
xlat
dec
or
inc
pushf
mov
and
mov
inc
xchg
add
cmp
push
push
stos
dec
mov
push
xchg
adc
cmp
shl
pop
rol
mov
pop
fist
and
xchg
movs
sbb
into
repz
hlt
mov
mov
mov
shr
fwait
mov
sub
inc
icebp
push
dec
sbb
mov
cmp
jmp
xor
xor
iret
scas
cmp
ret
xchg
test
mov
xchg
xor
add
ret
inc
call
mov
xor
mov
xor
inc
pushf
push
push
repnz
sbb
enter
push
sbb
clc
inc
adc
xor
mov
xchg
and
jp
add
enter
fdiv
pop
jmp
inc
(bad)
mov
sbb
repnz
(bad)
xor
pusha
or
int
inc
sbb
push
jmp
test
lea
mov
cld
lahf
mov
enter
cs
ret
mov
daa
push
cwde
sahf
mov
xlat
jmp
popf
imul
scas
popf
sti
test
dec
fist
xor
stos
(bad)
pop
lods
push
fld
ret
push
adc
sub
mov
adc
in
jmp
jne
adc
stos
leave
xchg
das
or
sub
sub
push
mov
cld
inc
or
jmp
sub
mov
mov
out
out
mov
rcr
hlt
fidiv
push
mov
xchg
or
test
fmul
fstp
add
jge
daa
mov
fdivr
je
scas
mov
mov
outs
cmps
dec
jae
cli
sub
ret
bound
jne
repnz
sbb
or
pop
and
outs
mov
or
mov
scas
add
inc
pushf
cmps
push
loop
popa
mov
sbb
ja
dec
mov
(bad)
cmp
clc
and
push
mov
mov
fadd
retf
loope
aad
mov
jmp
stos
mov
mov
inc
es
retf
or
hlt
push
retf
cwde
xchg
mov
inc
aas
xchg
in
cmp
out
je
movs
fnstenv
xor
xor
jbe
fwait
test
movs
dec
push
stos
xor
cs
sti
xchg
pusha
mov
jb
stos
xchg
push
jnp
(bad)
mov
sub
xchg
lea
outs
pop
jg
and
jecxz
mov
jnp
gs
outs
sub
jne
cmp
(bad)
movs
and
cmp
add
icebp
(bad)
clc
mov
(bad)
cmp
call
add
cmc
push
and
in
mov
ds
in
jge
dec
in
mov
jnp
sahf
lods
pusha
xor
rcl
push
xchg
int
push
inc
aas
repz
pop
dec
sub
xchg
clc
jnp
movs
dec
xor
outs
jno
in
jno
je
gs
bt
clc
sti
pop
ret
stos
mov
jl
inc
(bad)
loope
mov
xlat
cmps
fdiv
enter
(bad)
and
xor
out
pop
jmp
fldenv
inc
push
inc
sbb
pop
fdivrp
stc
int3
(bad)
bound
lods
clc
xor
jbe
pop
int3
mov
xlat
rol
cmp
ror
div
pop
inc
push
jb
sbb
sbb
mov
lea
jmp
xchg
inc
inc
pop
arpl
jno
or
shl
or
dec
or
jle
or
outs
mov
sbb
shl
adc
mov
sbb
nop
add
daa
dec
and
jg
rol
sub
push
movs
(bad)
xchg
cmps
push
xchg
or
cmp
fiadd
jp
adc
shr
xchg
pop
imul
loop
sbb
imul
xchg
jl
fdivr
into
xlat
mov
inc
jecxz
rcr
adc
mov
loope
fs
retf
sti
jbe
bound
(bad)
out
es
mov
mov
sbb
aam
or
and
popf
stc
loopne
adc
push
mov
mov
pop
movs
(bad)
xor
imul
push
mov
je
cwde
add
cmp
fadd
(bad)
ret
cmps
mov
scas
mov
xor
ds
sub
retf
shr
lock
out
pop
adc
xchg
sub
bound
adc
sub
xor
fs
xchg
(bad)
dec
out
aam
xor
mov
repz
xchg
cwde
das
push
xchg
jp
idiv
sti
mov
xchg
aad
aas
mov
dec
pop
aad
(bad)
fsubr
xchg
pushf
xor
push
lea
xor
pop
mov
imul
xchg
dec
mov
test
call
push
xor
loop
daa
mov
scas
test
fadd
push
sbb
xor
or
out
idiv
outs
jmp
lods
dec
xor
pop
jmp
adc
inc
test
xor
stc
fwait
dec
fs
dec
cmp
adc
outs
js
push
aas
xchg
sti
pop
pop
xor
bound
dec
(bad)
adc
fs
mov
aas
sahf
retf
loopne
inc
loopne
xchg
mov
jns
cdq
inc
outs
inc
jne
jl
jno
hlt
ror
das
dec
xchg
ss
xor
dec
(bad)
sar
pop
repnz
ret
fld
xor
sbb
push
and
dec
add
jl
repnz
mov
idiv
mov
jle
push
mov
pop
jmp
in
add
jl
ret
ror
ins
shl
fcomp
fnstcw
bound
xlat
pop
cmp
push
sbb
icebp
and
in
adc
jb
loopne
pop
mov
jmp
or
or
adc
xlat
or
push
js
mov
pop
sahf
jb
add
test
rcl
xchg
rep
jnp
ret
sti
loopne
and
cwde
sub
imul
aam
fadd
sub
clc
cmps
rep
cmp
and
and
mov
xchg
or
push
stc
cmp
int
jmp
fwait
aad
sub
fiadd
shr
cmps
cmc
leave
mov
adc
sbb
push
icebp
pop
inc
ss
fcmovbe
scas
ret
movs
or
mov
sub
test
inc
xor
int3
cmp
lods
xor
loop
jno
sbb
test
mov
jp
xchg
aam
and
pop
ficom
push
mov
inc
fdiv
call
in
sahf
xor
iret
push
int
or
jp
adc
jb
jp
inc
std
mov
and
sti
xchg
cmps
rcr
cdq
outs
pop
or
jnp
xor
cmps
cmp
test
ret
push
or
imul
jecxz
mul
mov
outs
or
jmp
icebp
jne
pop
mov
pop
mov
or
aad
mov
addr16
and
cmp
jae
rcr
mov
xor
jecxz
jne
adc
cmps
dec
ja
movs
shr
sub
shl
mov
inc
not
adc
pushf
push
sub
jno
inc
push
int3
xchg
inc
push
fucom
adc
pop
stos
cmp
cmp
jmp
addr16
pop
int
pop
hlt
fsub
and
mov
xchg
leave
test
dec
ret
out
div
inc
icebp
dec
jns
sbb
mov
lods
scas
pop
xor
retf
pop
ja
into
imul
out
popa
ins
mov
mov
idiv
mov
dec
pop
push
dec
in
lods
sub
inc
dec
push
inc
sbb
fisttp
sub
dec
nop
sub
and
movs
jecxz
(bad)
sub
add
daa
mov
mov
adc
test
or
xlat
xchg
enter
enter
pop
daa
test
pop
in
out
aas
mov
adc
sbb
dec
(bad)
sbb
xadd
dec
push
retf
movs
movs
jb
push
inc
nop
stos
adc
push
mov
pusha
jle
ret
dec
nop
fisub
dec
mov
dec
retf
ret
add
stos
mov
pop
pop
popa
push
in
imul
xchg
xor
mov
cwde
test
mov
dec
cmp
adc
into
fstp
imul
outs
or
into
xor
xor
(bad)
ins
adc
adc
lods
pop
adc
add
repz
es
mov
inc
fucom
(bad)
sar
cwde
scas
fwait
rcr
lods
xor
push
adc
mov
fsub
movs
or
dec
push
rcr
jp
cmp
cs
lahf
lds
lea
add
test
popa
xor
pop
aam
(bad)
adc
fild
sbb
(bad)
pusha
xchg
cli
lods
cmp
jae
pop
push
cmps
pop
xor
xchg
jg
or
pop
lods
cmp
rcl
mov
adc
mov
aas
int3
inc
ins
dec
or
adc
movs
xor
add
mov
fcmovnu
scas
sbb
inc
cmp
inc
pushf
out
sbb
loop
test
jp
fsubrp
inc
es
pop
shl
or
retf
xchg
int
sbb
call
bndstx
and
lods
dec
xchg
in
stos
stos
mov
xor
sub
icebp
lahf
dec
imul
addr16
jno
and
cmps
int3
ret
mov
push
pop
pop
jno
js
int3
imul
int
mov
cmp
fst
cmp
push
push
xor
add
push
ss
xchg
pushf
clc
sbb
jp
cmps
test
sbb
xchg
(bad)
mov
mov
or
in
or
mov
push
ror
adc
jmp
adc
pop
inc
jmp
dec
inc
rcr
and
mov
mov
sub
ss
push
leave
das
mov
cmp
xchg
or
nop
cli
mov
outs
and
xlat
(bad)
aaa
pop
jns
imul
(bad)
int3
cmp
les
push
mov
sbb
fdivr
xchg
clc
loopne
xchg
loop
xchg
jnp
fld
xchg
jecxz
mov
rol
mov
push
add
pop
lahf
cli
add
mov
out
adc
call
adc
xor
retf
push
in
mov
enter
in
jle
les
sti
stc
ins
jbe
and
mov
pop
push
add
push
mov
push
fwait
add
add
scas
mov
stos
sbb
xchg
hlt
lods
pop
xlat
jecxz
pusha
push
ret
pop
jg
sbb
ret
hlt
or
inc
inc
or
nop
test
jg
cli
sub
mov
rol
int3
dec
fisttp
add
call
pop
imul
inc
stos
and
sbb
es
movs
mov
jae
gs
mov
jae
dec
inc
mov
mov
add
or
dec
inc
or
shr
pop
adc
out
rcl
sbb
jecxz
ins
add
fistp
imul
push
xor
inc
inc
inc
inc
cmp
pop
lock
mov
jg
jb
adc
(bad)
(bad)
jne
iret
nop
pop
add
fcom
fucom
xchg
pop
(bad)
cli
dec
inc
in
and
pop
jns
sub
pop
push
add
xor
push
add
dec
scas
test
mov
add
outs
xchg
lock
sar
jp
push
inc
leave
jl
sbb
inc
mov
dec
mov
hlt
push
shl
inc
sub
fsub
jge
inc
mov
xchg
xor
add
cdq
inc
mov
xor
push
xor
enter
sub
pop
xor
cmps
popa
adc
rcl
cmp
jne
data16
sub
jmp
sub
dec
sub
xlat
rcr
mov
repz
pop
scas
retf
lea
loop
mov
mov
xchg
jne
mov
shl
(bad)
in
mov
sub
jno
jmp
jbe
pcmpgtw
xchg
or
movs
(bad)
repnz
and
adc
shl
shr
das
test
adc
daa
mov
cmp
mov
ds
xchg
push
push
pop
lahf
in
xor
jae
out
pushf
push
pop
pop
cli
xor
cmps
mov
cwde
ss
mov
add
sbb
shl
dec
lea
not
add
test
xchg
add
sbb
adc
mov
push
out
jbe
call
inc
(bad)
in
(bad)
or
ss
jne
xor
hlt
ret
ja
push
mov
and
(bad)
std
pop
test
ror
sub
add
shl
not
fld
dec
mov
ficomp
xor
fidiv
not
dec
or
adc
xchg
lods
(bad)
and
jb
test
dec
popf
out
mov
bnd
sbb
or
rcl
bound
(bad)
mov
movs
out
push
mov
out
or
jge
sbb
xor
mov
lock
pop
scas
sub
popf
mov
imul
mov
mov
sub
lds
fdiv
icebp
and
push
outs
mov
clc
jge
aam
iret
adc
jge
dec
mov
add
out
ret
and
inc
outs
sub
push
pop
and
mul
cwde
sub
cmps
sbb
(bad)
cmps
das
(bad)
sub
movs
or
xchg
loope
call
les
mov
xor
add
aam
fbstp
out
je
dec
fs
scas
fld
push
lods
add
in
call
add
add
inc
scas
imul
and
add
repnz
or
xor
xchg
repnz
rcr
lahf
out
jne
and
cmp
mov
fld
jp
lock
jmp
cmps
mov
and
outs
inc
popf
jae
push
mov
adc
jmp
aaa
xchg
mov
dec
scas
cli
adc
xchg
div
push
cs
xor
les
cmps
sahf
inc
retf
fdivr
add
xor
sub
mov
inc
mov
fidiv
xor
jecxz
cli
mov
imul
retf
call
ret
xor
push
mov
sub
mov
scas
push
sti
clc
or
scas
xor
pop
popf
loopne
dec
rcr
inc
push
inc
xor
retf
leave
jmp
push
mov
pop
je
outs
fldenv
(bad)
jle
popa
mov
mov
ret
jno
cmp
xor
fs
jle
push
ror
arpl
push
mov
pop
push
aaa
das
jns
or
add
cs
cdq
xchg
mov
dec
addr16
add
pusha
add
xchg
dec
xchg
arpl
(bad)
imul
mov
(bad)
out
or
std
aam
xor
push
mov
popa
push
rcr
xchg
xlat
ret
scas
ja
dec
pop
adc
and
(bad)
pop
inc
add
aas
pop
stc
stc
(bad)
cmc
mov
js
sbb
stos
test
ds
pop
push
test
ins
add
adc
add
(bad)
pop
test
push
mov
sub
ror
test
in
aaa
cmp
lahf
dec
jg
mov
aad
xchg
add
out
sub
dec
repnz
pop
(bad)
gs
sbb
imul
scas
clc
test
mov
cdq
and
xchg
mov
fistp
mov
shl
pusha
mov
call
dec
sbb
mov
(bad)
cmp
sub
jo
sub
inc
js
les
dec
mov
sub
iret
(bad)
dec
outs
gs
mov
ret
int3
cmps
retf
jae
out
scas
mov
push
pop
jmp
xor
mov
adc
fs
jo
ds
hlt
je
and
(bad)
loopne
iret
imul
add
das
and
cmps
or
add
xor
repz
ds
sbb
xor
inc
lods
fcom
daa
dec
mov
sbb
xchg
iret
ins
pop
cmp
shr
popf
sahf
icebp
push
cmp
dec
push
scas
mov
sub
mov
rol
push
sar
sbb
and
fistp
mov
push
stos
jb
jbe
ss
sbb
out
mov
pop
pusha
hlt
pop
movs
imul
add
test
pushf
jge
ret
outs
mov
xchg
out
push
pop
inc
push
sbb
pop
sbb
sub
into
sbb
pop
dec
ror
mov
out
mov
mov
iret
lds
adc
test
addr16
nop
movs
mov
xchg
cmp
pop
inc
jmp
scas
mov
cs
movs
jbe
cld
outs
retf
call
mov
bound
imul
pop
lds
mov
call
div
(bad)
aad
pop
jmp
(bad)
mov
cmc
xchg
nop
push
movs
inc
push
std
xchg
or
(bad)
sbb
test
dec
cmc
dec
push
in
enter
aam
xchg
aas
nop
out
adc
mov
and
(bad)
cld
mov
xchg
rcr
pop
push
arpl
arpl
mov
sbb
pusha
add
dec
stos
sbb
add
and
pop
xchg
jg
in
int3
test
mov
push
jg
loopne
cld
mov
sbb
xlat
jecxz
xchg
pusha
cmps
fsubr
sti
aad
dec
(bad)
call
xchg
mov
push
sti
pop
ret
xor
not
inc
ror
inc
sub
adc
mov
es
(bad)
adc
fprem
lea
test
clc
xor
stc
stos
mov
sbb
(bad)
jg
rol
movs
sysenter
rol
rcr
call
in
inc
ss
cmc
sahf
leave
fnstsw
or
shl
mov
jns
movs
pop
xchg
fistp
jno
sti
js
jae
sbb
sbb
cwde
(bad)
cmps
xchg
jo
sbb
mov
in
xchg
add
adc
das
or
push
inc
lds
xor
test
mov
rcl
push
xchg
ja
push
dec
mov
arpl
mov
ins
xchg
popa
ficom
repz
adc
push
in
outs
not
xor
nop
lock
jns
lds
in
mov
adc
int
cmp
lds
sbb
call
dec
fmul
xor
daa
mov
jns
es
mov
(bad)
mov
not
movs
sub
mov
fadd
aaa
(bad)
push
jno
(bad)
repz
out
cmp
and
stc
push
scas
outs
or
sub
xor
mov
pop
cmp
mov
stos
mov
sub
les
in
cmps
jl
cmp
out
pop
dec
(bad)
test
fcomp
pop
jo
push
retf
movs
rol
inc
adc
dec
push
xchg
pop
jnp
dec
or
rcr
jge
int
cmps
xchg
add
mov
adc
jg
jae
push
addr16
test
leave
or
sar
(bad)
ds
jge
adc
mov
inc
add
xor
push
mov
sti
inc
lods
rcr
popf
cmps
mov
push
ss
or
xchg
pop
adc
jge
shr
push
mov
(bad)
mov
imul
sbb
adc
cmp
jmp
jnp
xor
jle
aam
add
add
sbb
out
data16
inc
in
sbb
jg
mov
dec
ficomp
test
adc
jne
js
cmp
cmp
mov
clc
and
mov
cmp
lsl
mov
movs
jae
add
ds
cld
xchg
das
mov
fbstp
jnp
jbe
aas
adc
cdq
sbb
(bad)
xor
mov
ss
and
enter
test
jle
mov
aas
dec
fwait
ja
mov
jl
(bad)
pop
ja
ret
call
mov
out
push
inc
call
repz
loopne
das
loop
ins
sub
jmp
dec
mov
(bad)
cvtpi2ps
ja
das
push
pop
dec
mov
ds
xchg
adc
mov
jmp
call
adc
or
retf
lods
stos
fsubr
jg
push
inc
ret
fmul
mov
adc
cld
aaa
or
test
mov
mov
mov
push
retf
neg
movs
adc
std
cmp
cmp
shl
sbb
add
fcomp
inc
repz
dec
add
mov
shl
adc
ins
jp
mov
aam
movs
mov
cmp
xchg
or
std
sub
dec
sub
pop
and
jle
or
jmp
ss
iret
dec
xor
adc
fst
int
add
or
cmc
cdq
xor
cmp
mov
ins
out
test
pop
(bad)
stc
repnz
cmps
adc
dec
dec
fdiv
fs
xor
mov
outs
add
ins
(bad)
shl
pop
pop
scas
aas
xchg
pop
movs
cmp
xor
cmc
mov
sbb
push
lea
mov
mov
push
nop
lods
push
fwait
and
pop
movs
jge
sbb
jbe
rol
mov
sahf
icebp
call
rep
je
repnz
mov
iret
pop
pusha
test
movs
xchg
jp
in
xchg
arpl
pop
push
adc
loopne
mov
or
pusha
inc
or
retf
imul
sub
add
aad
stc
push
xchg
gs
gs
cwde
call
inc
adc
mov
(bad)
out
push
mov
(bad)
mov
cld
not
std
arpl
xchg
dec
leave
mov
sub
sbb
bound
jg
jp
rep
push
or
jle
dec
jbe
jmp
call
pop
mov
leave
outs
mov
stos
aad
inc
adc
mov
test
mov
popf
inc
xchg
fld
mov
shr
gs
xchg
sahf
cwde
leave
sub
test
fwait
not
popf
movs
or
jge
imul
arpl
aas
das
mul
sub
mov
(bad)
push
mov
shr
mov
pop
mov
mov
mov
test
outs
adc
or
xchg
shl
add
bound
shr
mov
xor
xchg
stos
or
cmp
mov
jp
or
es
in
cld
xor
mov
call
push
(bad)
fsubr
pop
mov
adc
push
dec
jo
cli
jo
loopne
ja
imul
repz
ret
mov
dec
pop
mov
(bad)
fidivr
cmp
inc
mov
cmp
sub
js
jns
movs
sahf
jne
sub
dec
push
in
loope
arpl
jecxz
ja
inc
es
cmp
or
lods
fidiv
out
dec
aam
fnstsw
outs
iret
or
arpl
mov
ret
stc
jmp
or
mov
loope
push
pop
int3
push
sub
call
or
inc
repnz
sbb
inc
daa
int3
xor
fwait
(bad)
mov
xlat
mov
imul
jle
xor
pop
add
jno
inc
and
rol
ret
sbb
jmp
push
aad
leave
adc
movs
call
push
es
jmp
and
push
loope
sub
and
add
mov
ins
clc
inc
sub
mov
sbb
std
push
mov
pop
fdiv
cdq
push
xchg
imul
div
je
cdq
pusha
dec
adc
loop
mov
pop
mov
mov
mov
cmp
ret
cmps
fwait
loope
push
fs
movs
dec
pop
adc
add
(bad)
xchg
xchg
mov
xor
xchg
mov
retf
sbb
mov
jge
pop
push
push
pop
test
fisttp
dec
retf
jae
xor
je
jb
arpl
test
dec
mov
xchg
call
mov
add
cmp
push
stc
in
inc
out
movs
dec
adc
scas
and
push
sbb
add
into
mov
call
mov
sub
inc
add
push
push
sub
push
pop
pop
out
call
cmp
jl
ins
add
fnstenv
ins
mov
inc
les
rcl
sti
mov
mov
scas
in
xor
stc
dec
out
repnz
mov
pusha
inc
data16
mov
xchg
imul
sbb
pushf
add
sub
out
mov
mov
mov
mov
shl
cmp
cmp
or
xor
aad
nop
(bad)
fs
mov
cmp
or
loopne
mov
sbb
sbb
mov
adc
call
fdiv
push
out
(bad)
xchg
pop
adc
jns
test
out
push
mov
add
lahf
pop
aad
test
cwde
mov
not
inc
aam
xchg
mov
in
mov
mov
js
cmps
xor
and
mov
cmp
push
leave
(bad)
push
pushf
sub
fst
dec
leave
dec
pop
out
inc
cmp
mov
jnp
dec
sub
aas
aas
push
addr16
je
mov
dec
mov
pop
cdq
adc
pop
addr16
adc
dec
sub
push
outs
int
jbe
shl
test
rcl
out
aam
ins
xchg
xchg
mov
dec
pop
cwde
sub
mov
fwait
and
xchg
imul
ins
loope
add
lds
clc
int3
mov
xor
xchg
jl
jmp
push
shl
lds
or
mov
cmp
inc
xchg
xor
idiv
pushf
or
in
dec
add
(bad)
test
test
imul
mov
fwait
push
outs
test
inc
mov
inc
xor
pop
cmp
cdq
lods
mov
outs
not
push
jae
inc
cmp
xchg
add
scas
sbb
pop
push
inc
inc
pushf
test
fld
add
xchg
mov
test
xor
test
jno
ds
jo
push
mov
enter
(bad)
mov
mov
mov
sub
movs
pop
idiv
dec
fwait
mov
(bad)
(bad)
call
arpl
pop
jnp
mov
retf
and
sbb
push
cmp
jle
mov
int3
sub
je
test
mov
movs
mov
lods
ins
sub
pop
stos
add
push
adc
sub
push
lds
push
mov
and
add
movs
cs
push
sub
add
pusha
fs
shl
stos
ror
sub
add
inc
ds
mov
pusha
mov
das
cs
stc
or
movs
call
inc
adc
xchg
(bad)
mov
push
or
cld
inc
call
adc
mov
shl
stc
jno
lahf
and
ror
add
cld
ret
xadd
into
mov
push
dec
cmp
sbb
cwde
inc
push
int
pop
xor
adc
popf
stos
pop
jle
loop
jg
xor
xchg
pop
ins
push
scas
sub
mov
sbb
or
mov
mov
sbb
lea
fld
jl
xor
mov
out
lds
xor
xchg
pop
call
cwde
movs
lods
and
mov
push
add
and
pushf
lds
or
dec
adc
pop
xor
add
and
xchg
push
push
pusha
fs
push
rcl
jne
out
mov
test
mov
push
fistp
fwait
daa
pop
bound
cmp
outs
stc
jge
aam
leave
and
sub
test
jp
test
sub
jmp
lock
sub
rol
std
mov
cmp
inc
lods
imul
lods
push
pop
test
into
daa
and
jmp
push
jmp
std
out
mov
iret
icebp
or
sti
aam
mov
and
xor
mov
loop
test
(bad)
xchg
addr16
and
or
xchg
test
mov
scas
aas
aam
sar
movs
pop
inc
js
dec
enter
nop
sub
ins
repnz
adc
cdq
dec
mov
inc
cmp
fmulp
repnz
pop
imul
or
mov
es
mov
inc
xchg
mov
mov
mov
mov
pop
and
addr16
daa
push
dec
ds
jmp
imul
stc
into
test
scas
call
and
sub
in
std
retf
mov
dec
(bad)
mov
stc
stc
pop
add
cmp
sbb
cs
aas
imul
jno
lods
pusha
call
adc
scas
cli
xchg
mov
mov
not
mov
sbb
jae
aad
je
sbb
test
ficomp
lahf
call
mov
fdiv
(bad)
jle
push
lahf
aam
jge
test
aas
dec
daa
mov
inc
xchg
(bad)
adc
daa
mov
scas
movs
cmc
inc
adc
or
pop
les
xor
cmp
in
loop
jl
push
sbb
mov
add
xchg
stc
and
jecxz
cmc
je
outs
push
call
mov
jb
leave
call
add
xchg
arpl
cmc
push
jmp
retf
cmp
imul
mov
sbb
mov
out
pusha
mov
adc
adc
call
scas
(bad)
adc
ja
inc
jg
test
push
jmp
sub
mul
inc
pop
test
push
jmp
cli
cmp
js
lds
call
imul
mul
push
jo
push
mov
push
and
mov
(bad)
adc
pop
xor
push
pop
repz
int3
mov
lea
inc
imul
inc
push
or
pop
add
jmp
aam
sub
daa
push
push
adc
pop
jp
es
mov
mov
scas
add
jmp
pop
add
es
in
mov
xchg
mov
xor
cmp
mov
lods
test
jne
nop
dec
retf
push
inc
inc
sbb
jno
fisttp
mov
xor
and
cdq
inc
mov
pop
fstp
jg
enter
and
ds
leave
mov
push
xchg
bound
popf
js
push
pop
and
mov
xor
xchg
push
mov
or
aad
fidivr
mov
and
loope
xchg
cmp
pusha
imul
jl
xor
and
inc
dec
mov
pop
add
mov
xchg
leave
pop
stc
stos
test
dec
sbb
rcr
add
not
pop
xchg
add
stos
mov
mov
sbb
push
cmp
jne
ss
cwde
(bad)
cmc
stos
leave
pop
mov
add
scas
and
rcr
and
fild
loop
out
mov
jl
xchg
mov
and
pusha
ds
pop
lea
sbb
push
sbb
cmp
xchg
sub
xchg
arpl
pop
dec
lods
fdiv
movs
mov
in
adc
xor
lock
std
scas
add
enter
fs
jnp
push
shl
adc
inc
sar
out
mov
pop
push
cs
add
test
mov
inc
jnp
push
xor
dec
mov
out
pop
enter
shr
pop
push
xchg
jne
sub
in
mov
cmps
rol
imul
push
ja
add
data16
ret
and
and
mov
enter
fwait
xchg
sub
mov
aaa
leave
mov
jb
stos
jecxz
jl
xchg
loope
and
push
icebp
call
dec
adc
adc
mov
(bad)
hlt
adc
fld
xchg
imul
dec
xchg
fimul
mov
pop
push
out
sti
sbb
adc
push
out
sub
shr
clc
push
test
dec
and
scas
xchg
fcmovb
stos
ret
or
cmp
inc
and
mov
inc
or
fbstp
mov
test
in
xchg
cld
dec
fistp
out
(bad)
paddd
mov
pop
xchg
inc
sub
mov
loope
sbb
data16
jbe
rcl
retf
scas
gs
push
mov
(bad)
fbstp
mov
sub
movs
enter
cmps
xchg
jle
push
mov
add
sub
inc
fdiv
push
push
jns
or
lods
xchg
cwde
lds
or
xor
imul
mov
(bad)
cld
out
or
cdq
push
fcom
mov
jmp
push
cmp
xchg
inc
push
aas
xchg
sahf
pop
pop
outs
scas
loopne
or
out
fstp
daa
scas
loopne
repnz
fucomi
mov
and
push
xchg
shl
inc
lock
lahf
mov
and
stc
rol
mov
pop
loop
in
aam
or
push
sub
fcomp
jo
pusha
mov
pop
add
cmp
into
cmp
rcl
fsubr
shl
push
or
fwait
push
and
cmps
das
mov
das
sub
out
mov
mov
test
dec
jae
out
div
mov
(bad)
push
cmp
inc
push
add
xor
out
rol
mov
xor
jno
adc
les
push
inc
in
inc
test
rcr
xlat
adc
fdiv
call
mov
xchg
cmp
enter
test
aad
dec
in
sbb
shr
push
pop
mov
xchg
mov
loop
push
hlt
hlt
add
dec
mov
(bad)
xchg
mov
sub
lods
je
fidivr
hlt
inc
pop
mov
mov
pop
xchg
scas
lahf
test
xchg
out
add
sbb
sbb
add
shr
ss
pop
dec
xor
es
addr16
inc
and
cmp
mov
xchg
mov
shr
loopne
outs
cmp
inc
and
xchg
xchg
mov
(bad)
test
ins
or
and
cmp
imul
int
sbb
(bad)
imul
and
sti
ds
and
aas
mov
cmc
dec
push
mov
sub
push
mov
ficom
fcmovnb
pop
xor
pop
dec
aaa
cmp
fcomp
xor
pop
jbe
cdq
add
mov
and
jp
sbb
std
mov
and
lock
hlt
push
mov
jnp
fwait
add
test
cmp
sar
ret
les
xor
out
cmp
imul
pop
fld
adc
std
inc
lods
xor
nop
ins
fsubr
mov
int
xor
push
and
push
lock
jns
dec
mov
cmps
(bad)
inc
xchg
sub
loope
movs
rol
lods
mov
sub
xchg
pop
outs
inc
xchg
scas
xchg
push
pop
sbb
mov
neg
cmps
in
pop
jl
pop
leave
and
push
in
call
push
inc
adc
scas
aam
in
pushf
xchg
int3
pusha
fyl2x
push
loop
dec
and
ss
mov
rol
jecxz
xor
pcmpgtw
xor
dec
cdq
push
enter
mov
or
add
dec
shl
dec
js
sbb
cld
pop
test
and
rol
jmp
fldcw
pushf
cmp
imul
dec
inc
call
fsubr
add
or
xor
out
lea
ins
loop
dec
xchg
xor
or
cmp
leave
ret
push
mov
loopne
out
outs
adc
adc
retf
or
jmp
dec
aad
cwde
std
mov
fistp
xchg
adc
lock
fsubr
pop
push
and
ins
xor
adc
(bad)
add
rcl
aaa
outs
pushf
jp
ss
jmp
mov
aas
cmp
into
pop
push
sub
jl
cld
pop
add
jecxz
and
push
xor
cmp
jno
fwait
push
inc
inc
and
push
dec
in
cmp
outs
mov
es
scas
js
jno
and
jmp
in
ficom
ror
pusha
mov
popa
pop
lahf
mov
stos
xor
mov
out
and
cmp
loope
stos
fisub
nop
xor
repz
fimul
sbb
jl
stc
jp
cdq
div
adc
xchg
xor
xor
add
icebp
mov
mov
movs
ja
idiv
adc
test
add
xlat
(bad)
rcr
push
out
leave
popf
loop
add
mul
sub
mov
rol
bswap
xchg
in
push
ins
push
lods
and
cmps
sbb
xor
mov
and
(bad)
mov
mov
int3
sahf
sub
rcr
push
push
xchg
inc
ud1
rcr
data16
iret
sbb
mov
add
mov
jmp
mov
and
sub
arpl
fst
jo
mov
lahf
or
daa
xchg
mov
push
jecxz
sbb
ss
dec
sbb
mov
jmp
imul
fiadd
ret
cmc
aas
test
dec
test
sti
add
push
push
pop
mov
leave
test
cmps
xchg
pop
push
mov
ds
cwde
cmp
(bad)
ror
jns
cwde
adc
pop
dec
jl
inc
xchg
lea
xor
add
popa
imul
xchg
sub
sub
xchg
nop
out
cdq
xor
jnp
test
scas
sbb
lock
mov
sub
inc
in
retf
shl
loopne
adc
push
mov
scas
pushf
daa
call
(bad)
push
ss
mov
fistp
inc
add
cmps
shl
cmps
dec
mov
fld
and
or
or
arpl
jl
fwait
(bad)
push
jmp
lds
push
cmp
mov
sbb
xor
cld
xlat
cmp
gs
shr
fisubr
and
test
or
enter
mov
sub
inc
dec
pop
mov
stos
jl
xor
or
cdq
xlat
in
mov
cmp
inc
dec
sub
xor
jge
adc
lods
xchg
push
adc
mov
cdq
add
stos
dec
push
fiadd
push
movs
out
aas
lods
test
outs
adc
loope
arpl
outs
scas
ror
and
fisub
cs
jno
rol
data16
mov
outs
int3
ror
lods
add
jmp
fsubr
(bad)
jne
sbb
and
cmp
pop
loop
and
ds
push
pop
movs
call
adc
sahf
or
dec
and
sub
cmp
ins
in
mov
(bad)
(bad)
cmps
mov
cmp
imul
dec
popf
dec
(bad)
cli
sbb
cmp
bound
popf
das
popf
pop
in
cmp
dec
inc
sbb
push
xlat
jb
aaa
push
mov
push
in
jmp
sbb
sti
mov
out
cmps
cli
add
xor
cld
inc
shr
jmp
or
fstp
fmul
fcom
xchg
jbe
in
loope
loop
js
cmps
lock
loop
sbb
and
pop
jne
add
sti
adc
test
mov
lock
call
(bad)
xor
arpl
out
xor
mov
ror
and
xor
div
push
stos
push
mov
adc
ja
adc
imul
pusha
jg
push
xor
jno
inc
pop
inc
test
pop
jg
fld
(bad)
xchg
(bad)
int3
and
loope
or
dec
rcl
or
pop
call
jno
add
setle
inc
out
pop
loope
jge
enter
(bad)
jmp
cmp
adc
dec
(bad)
cmp
xchg
xor
(bad)
jmp
cmc
xchg
fwait
mov
xor
xchg
fs
mov
inc
jle
jmp
and
sbb
stc
clc
dec
test
pop
dec
icebp
ds
mov
rol
ss
pop
mov
int
jmp
xchg
cmps
bound
ds
add
mov
arpl
xchg
dec
mov
test
add
mov
cdq
mov
push
mov
dec
pop
inc
leave
add
dec
or
dec
rcl
fwait
mov
fs
mov
push
push
pop
(bad)
and
cmp
ficomp
mov
inc
mov
add
mov
rcl
mov
scas
mov
jae
(bad)
lahf
sub
in
mov
arpl
jbe
out
mov
sbb
fs
jb
xor
push
or
push
cdq
in
adc
push
das
mov
cmp
dec
je
inc
rcr
dec
call
stos
push
jo
cdq
bound
fs
mov
jne
add
mov
or
into
popf
and
shl
mov
fcmovnb
pop
mov
sahf
jne
inc
mov
shl
mov
test
out
cdq
sbb
cmc
inc
pop
cmp
mov
cmps
sub
fs
mov
jg
ins
push
inc
int3
dec
movs
(bad)
mov
inc
out
pop
test
shr
cmps
dec
cwde
repz
pushf
mov
or
out
mov
jge
out
mov
cli
xor
jbe
dec
inc
adc
fstp
es
inc
xchg
mov
nop
idiv
mov
adc
and
repnz
inc
movaps
(bad)
mov
or
and
iret
ins
rol
ss
push
inc
or
xor
stos
add
(bad)
adc
ja
cwde
xor
pop
inc
(bad)
jno
data16
shl
lods
and
leave
enter
sub
(bad)
repz
test
adc
jns
sub
mov
sahf
xchg
jp
fadd
or
mov
mov
mov
pop
sahf
fdivr
out
jo
jge
add
mov
cmp
cmp
iret
push
ds
repz
popf
xchg
jp
mov
std
test
cmp
loopne
shl
fadd
adc
les
jb
sbb
mov
xor
ret
jns
mov
pop
jge
xchg
dec
sub
dec
mov
sbb
repz
scas
push
lds
daa
inc
pop
push
outs
add
in
mov
ret
adc
add
mov
in
sbb
xchg
ret
iret
xchg
or
sub
and
xor
push
and
lods
mov
out
movs
mov
fst
jmp
cwde
sub
push
popa
neg
fiadd
mov
sbb
xchg
mov
inc
xchg
mov
in
mov
sub
pop
std
adc
inc
or
cmps
ins
pop
cmc
call
xchg
push
mov
(bad)
mov
int
add
pop
movs
je
ins
mov
adc
xchg
(bad)
fxch
xchg
fistp
aas
scas
gs
sar
(bad)
loope
scas
or
sbb
lds
cmc
clc
push
jmp
mov
xchg
pop
adc
xchg
(bad)
pop
xchg
cs
out
mov
and
std
push
pusha
jecxz
test
mov
rol
pop
adc
sahf
xor
mov
test
cmc
sub
outs
jmp
jg
retf
inc
nop
sbb
push
inc
jg
sub
lds
das
xchg
xchg
outs
fcom
cmp
add
push
mov
inc
pop
call
dec
iret
xor
shr
movs
jle
xor
pop
mov
dec
(bad)
les
and
dec
mov
inc
pop
sar
push
mov
sahf
pop
mov
test
cmps
mov
sub
mov
pop
xchg
inc
fiadd
cld
iret
stos
sub
push
add
lahf
xchg
cmc
jno
push
mov
les
xchg
into
fstp
fcmovne
jecxz
dec
popf
clc
push
mov
adc
sub
mov
fisubr
jns
pusha
scas
sbb
xchg
inc
cwde
add
xchg
push
int
mov
mov
adc
repnz
inc
test
icebp
or
sub
dec
fiadd
test
jl
push
movq
fs
xchg
xor
nop
cwde
jl
pop
leave
sbb
or
inc
or
mov
dec
jns
mov
movs
cmc
and
cmp
xchg
jno
int
stos
shl
mov
mov
sub
cmp
call
ds
inc
ins
or
ret
sbb
sub
xor
sub
sub
scas
jno
sti
jmp
jle
push
ds
dec
lods
sub
and
psadbw
adc
(bad)
pop
cli
lds
cli
jmp
jl
dec
jbe
ja
mov
jle
fmul
jb
(bad)
adc
stc
hlt
jle
stc
mov
cmp
mov
push
xchg
mov
inc
bound
pop
push
adc
jbe
xchg
imul
pusha
inc
push
loope
dec
add
out
jae
adc
jae
jmp
dec
pop
add
xchg
test
push
inc
push
popf
jecxz
js
push
push
pop
stc
inc
or
sub
sub
out
add
imul
repnz
hlt
call
mov
push
jns
pop
popa
leave
mov
pop
sar
jo
call
icebp
sbb
jnp
shl
mov
out
xchg
idiv
enter
stos
out
rol
in
mov
test
sbb
test
out
xchg
mov
mov
xor
dec
dec
push
jmp
mov
xchg
leave
mov
sub
xchg
int3
ret
int
add
adc
adc
ins
scas
retf
mov
xor
cmps
enter
dec
pop
icebp
fsub
int3
add
mov
or
int3
adc
pop
int
(bad)
call
fs
fild
mov
aam
adc
dec
mov
ins
cmp
push
cmp
dec
out
xchg
int
or
mov
or
jbe
pusha
retf
daa
fist
(bad)
sub
jnp
fild
and
leave
jae
enter
and
cmp
lods
dec
repz
inc
test
adc
mov
adc
mov
mov
xchg
sub
movs
add
imul
lahf
imul
inc
jb
cmps
fstp
sub
dec
(bad)
xchg
xchg
push
in
call
add
out
popf
daa
pop
cdq
(bad)
stos
into
jbe
pop
outs
aas
jle
and
or
add
loope
movs
jb
stos
xchg
or
mov
or
(bad)
cmp
mov
sbb
adc
xchg
retf
sbb
imul
call
(bad)
dec
stc
ins
daa
daa
mov
mov
ins
sbb
cmp
clc
xor
cmp
cmp
cmp
mov
pop
pop
ror
mov
es
or
(bad)
aam
fst
cmp
sbb
in
in
sub
in
repnz
mov
xor
mov
es
and
sub
inc
pop
rol
das
cmp
push
adc
xor
sbb
js
int3
gs
cmc
retf
ret
arpl
stos
enter
pop
bound
mov
inc
fisubr
mul
inc
shl
cmp
sub
push
ds
inc
fisub
inc
pop
test
icebp
dec
loopne
inc
stc
mov
mov
mov
pop
shr
stos
add
in
test
xor
ret
and
jl
pop
xor
xor
inc
js
into
and
inc
or
in
jbe
push
pop
loope
pop
imul
icebp
gs
sbb
ret
push
adc
and
retf
jne
push
fadd
pop
pop
pop
push
cmp
and
cmp
add
ins
sub
popa
xchg
mov
ja
pop
sbb
cmc
mov
repz
cld
cs
inc
cmp
in
in
pop
mov
in
mov
jmp
mov
inc
test
pop
xchg
and
mov
xor
stos
imul
pop
loop
pop
mov
inc
mov
cli
sahf
scas
pushf
sub
and
lds
popa
xor
(bad)
loopne
dec
sbb
push
push
sub
jbe
mov
(bad)
fidiv
leave
push
in
add
cld
inc
sbb
in
cwde
es
cs
push
movs
out
sub
xor
int3
idiv
fild
mov
jecxz
mov
inc
pop
add
pop
xchg
fucomi
es
sbb
mov
rcl
sub
ficom
dec
fs
jecxz
or
xor
dec
mov
jecxz
in
mov
icebp
rcl
fmulp
mov
xchg
fsubp
sub
push
dec
xor
push
add
push
sub
cmp
or
ret
gs
dec
ret
jb
(bad)
repz
rcr
sti
out
and
inc
and
cld
mov
outs
out
jmp
ds
gs
ins
jno
sahf
sub
dec
jg
repz
or
fimul
movs
repz
xor
dec
frstor
cmp
mov
lods
(bad)
push
and
pop
jmp
mov
imul
daa
outs
aas
outs
pusha
ret
js
mov
add
dec
outs
sbb
(bad)
cmps
retf
sar
mov
and
sub
hlt
mov
xchg
test
sub
cmp
out
mov
shl
popa
mov
mov
and
aam
fsub
adc
or
loope
call
ins
mov
add
pop
or
and
sar
cmc
clc
out
pop
(bad)
stos
dec
push
das
inc
icebp
jne
scas
mov
jle
add
mov
(bad)
cmp
scas
mov
or
mov
mov
unpckhps
mov
mov
jo
addr16
pop
mov
push
les
sub
dec
jecxz
pop
push
or
mov
movs
call
mov
mov
enter
cmc
ud2
push
stos
mov
add
sub
xor
mov
or
ret
retf
xchg
push
jp
push
mov
jae
xchg
jmp
scas
jb
adc
jle
cli
xor
in
push
mov
mov
cmp
and
mov
cmp
jns
jge
cli
stos
and
sub
sbb
mov
int3
or
mov
enter
mov
push
(bad)
sbb
sub
sub
push
pusha
pusha
cli
xchg
ficomp
inc
aam
iret
jg
dec
leave
cli
adc
dec
sbb
clc
xlat
inc
cmc
xor
pop
ins
js
icebp
in
arpl
icebp
or
rcr
adc
push
or
sbb
jmp
pop
add
mov
xor
shl
repz
xchg
fsubr
cvtps2pd
xor
push
ins
call
cwde
cmp
add
test
lods
inc
mov
stc
jg
retf
sub
push
xor
dec
xor
xchg
daa
retf
ja
pop
jnp
shl
dec
inc
mov
cmp
or
xor
xchg
fld
and
cmp
jnp
adc
and
or
mov
dec
lds
rol
mov
inc
jns
push
mov
or
imul
jb
xor
les
movs
lods
inc
ins
mov
jns
push
dec
mov
shl
add
inc
fmul
sub
xchg
push
gs
push
lods
(bad)
fdiv
cli
(bad)
popa
cmp
out
lahf
enter
jmp
nop
jmp
xchg
mov
dec
test
popa
rol
fs
mov
mov
sub
mov
push
bound
xlat
sub
jns
inc
(bad)
mov
in
icebp
sub
mov
mov
or
rcr
ins
je
in
xchg
jmp
mov
imul
enterw
mov
loopne
xchg
out
sub
jg
(bad)
leave
xor
and
or
fsub
inc
hlt
mov
aad
or
mov
mov
cmp
pushf
out
push
out
lods
pop
lea
enter
icebp
inc
sub
adc
push
mov
jb
out
hlt
ss
sub
mov
ret
hlt
cmc
lahf
loop
popf
mov
push
or
xor
stc
push
xor
and
stc
in
cmp
test
pop
inc
pop
fld
aaa
repz
lahf
popf
jecxz
xchg
mov
enter
add
adc
stos
inc
xchg
pusha
nop
sahf
mov
cmp
in
mov
cmp
cmp
es
jb
ror
push
scas
sub
pop
test
out
retf
adc
(bad)
fninit
inc
cmc
pop
mov
lods
into
fcomp
call
leave
jb
cmp
sub
ins
in
mov
jmp
xchg
push
mov
push
cmps
adc
cmp
pop
iret
call
adc
je
fnstcw
xchg
dec
lea
cmp
inc
push
lods
inc
mov
lea
push
mov
jno
cmp
sbb
jmp
sub
(bad)
mov
sti
dec
lock
sbb
xchg
outs
fdiv
jp
inc
xchg
adc
mov
mov
adc
cdq
test
pop
jp
jnp
imul
push
scas
pop
loop
jne
pop
xor
mov
xor
iret
add
push
xchg
add
aaa
enter
ins
icebp
retf
add
cmc
aaa
jmp
call
xchg
adc
test
int3
inc
movs
jge
inc
sub
pushf
dec
mov
inc
or
call
cmp
int
(bad)
xor
xchg
test
jae
and
sub
sub
fstp
and
test
xor
push
sub
xchg
push
fmul
fistp
outs
pusha
adc
shr
idiv
or
loope
leave
rcr
xchg
xor
xchg
ins
cmp
dec
push
cmp
into
cmp
in
mov
push
jb
fmulp
cli
mov
xor
mov
dec
shr
pop
icebp
es
cmp
mov
rcr
push
not
idiv
(bad)
loop
outs
jne
cs
inc
jg
repnz
fwait
cmc
(bad)
push
lock
int
test
fwait
add
inc
mov
ja
les
(bad)
fld
outs
out
mov
push
ret
rol
mov
addr16
sub
xchg
out
(bad)
pusha
or
ss
dec
inc
jne
and
add
cdq
loopne
add
(bad)
mov
(bad)
cld
mov
ficom
jge
and
xor
ret
dec
xor
lods
and
cs
adc
sbb
lea
sbb
inc
sahf
shr
mov
push
mov
dec
push
or
xchg
sbb
push
jmp
pop
cmp
retf
jmp
push
rol
in
and
adc
mov
dec
xchg
cmp
fnstcw
push
and
retf
add
mov
mov
stos
jmp
and
pop
or
call
aad
inc
loop
adc
retf
fsub
lds
jns
iret
test
out
push
pop
mov
aam
dec
xor
jge
jnp
call
mov
dec
(bad)
loop
imul
movs
inc
add
enter
mov
mov
(bad)
mov
aam
movs
dec
xchg
stos
jns
adc
inc
mov
pop
jns
pop
xchg
jmp
inc
into
sbb
inc
lock
jbe
fcom
pop
adc
push
hlt
pop
sub
add
add
fisubr
push
xor
imul
in
xor
popf
imul
mov
std
jle
scas
(bad)
push
sbb
clc
lds
dec
mov
je
das
fisttp
xlat
adc
pop
mov
jae
add
fadd
mov
lock
xchg
je
add
pop
cld
jbe
add
pushf
arpl
pop
or
cmp
test
and
inc
or
(bad)
shl
dec
mov
(bad)
sub
test
repz
fwait
cmp
jl
adc
xor
or
xchg
pop
cmp
call
std
adc
xchg
je
add
fwait
push
lds
jl
dec
xchg
and
push
adc
cmps
pop
cli
mov
and
cmp
aad
in
enter
mov
sbb
xor
jl
jne
jg
retf
retf
xor
mov
retf
mov
and
sbb
stos
pushf
or
ror
out
cld
rol
push
cbw
mov
cdq
mov
call
fstp
pushf
push
mov
shr
sbb
jbe
cmps
mov
mov
jb
sub
std
call
add
mov
adc
xor
jbe
into
inc
sahf
neg
add
(bad)
cld
aad
test
in
sbb
adc
push
rcr
push
push
jge
aaa
scas
sbb
sbb
mov
addr16
dec
sti
or
pop
xchg
push
bound
test
push
or
outs
dec
xchg
push
out
(bad)
pop
xchg
mov
jle
mov
cmp
inc
sbb
mov
int3
jnp
cmp
mov
fstp
fstp
call
xor
jbe
shl
xor
push
xchg
xchg
sub
adc
mov
or
mov
idiv
push
les
inc
out
daa
dec
mov
mov
in
adc
outs
jmp
jmp
pop
daa
adc
in
fiadd
dec
out
push
sar
aam
out
cmp
mov
xlat
mov
xor
adc
test
cmp
or
cmc
cdq
jo
int
pusha
out
jle
test
(bad)
jo
mov
repz
adc
push
in
rcr
es
(bad)
ins
jl
scas
(bad)
push
add
loopne
add
jae
add
mov
retf
mov
arpl
mov
ss
pop
push
and
dec
sub
add
xchg
pop
popf
lods
retf
pop
mov
add
adc
mov
cmc
add
cwde
shl
daa
push
sub
outs
leave
adc
push
lds
mov
mov
pop
mov
mov
fadd
cmps
and
sub
inc
jmp
repz
js
mov
adc
mov
stos
pushf
addr16
sub
mov
adc
mov
bound
mov
ja
sub
add
mov
cs
inc
mov
adc
sbb
imul
out
(bad)
(bad)
out
mov
into
dec
call
clc
loope
jl
xchg
jp
ret
push
fstp
out
add
mov
dec
cmps
out
sti
adc
cs
aad
popf
jne
pop
and
dec
mov
loope
out
jmp
push
pop
jb
pop
cld
test
stos
pop
pop
jbe
push
mov
lea
sub
dec
adc
cmc
mov
addr16
or
xchg
jmp
test
push
or
(bad)
repnz
into
sub
or
std
mov
xor
jge
inc
repnz
pop
xchg
sbb
push
jnp
xchg
test
mov
push
iret
into
gs
mov
inc
ins
xchg
ins
not
inc
xlat
aam
frstor
xlat
sub
mov
imul
fst
sub
dec
mov
mov
(bad)
xor
mov
stos
popf
xor
popa
(bad)
cdq
ss
dec
lea
xor
inc
iret
out
mov
inc
jns
iret
dec
dec
std
cmps
out
sub
test
add
lds
into
jle
enter
retf
mov
dec
push
fs
dec
shl
test
in
enter
enter
les
loop
jg
pop
gs
test
jmp
fild
rcl
jo
cli
inc
or
sbb
xchg
jns
leave
xchg
lea
call
pop
dec
daa
mov
arpl
cmps
repnz
mov
daa
inc
retf
sti
ins
and
movs
fwait
mov
sub
loopne
xchg
push
(bad)
int
fild
cld
and
ror
(bad)
fist
js
cmps
ins
or
js
inc
rcr
push
lahf
push
ds
jo
repz
adc
mov
sar
fcomp
xor
adc
jmp
push
mov
js
test
dec
fdiv
pop
and
xor
sub
push
out
and
mov
jbe
jns
sbb
xchg
cld
jb
out
xchg
xchg
inc
pop
ror
push
xor
pop
ins
lods
add
dec
and
cld
loop
cmp
pop
loop
or
pop
je
sar
and
mov
add
test
popa
clc
fadd
jp
pop
(bad)
rcl
es
cmp
xor
aad
pop
rcr
dec
jbe
and
movs
sbb
xchg
ins
mov
data16
pop
push
mov
jne
jmp
jo
or
arpl
lahf
push
xchg
mov
push
xchg
push
pushf
inc
xor
loop
fwait
stos
mov
sbb
mov
or
jb
add
das
movs
ficomp
fild
ret
xchg
xor
inc
retf
jl
aas
xor
pop
je
xor
fsubp
test
das
pop
mov
sahf
or
mov
sub
mov
(bad)
mov
rol
popa
sbb
cli
sub
inc
aad
mov
loopne
hlt
jo
ins
std
outs
ins
ja
xlat
repz
fs
xchg
jmp
inc
clc
test
lock
sub
add
jnp
jl
sbb
mov
fimul
hlt
jecxz
push
or
mov
push
ret
push
jb
arpl
iret
sub
xlat
add
jg
jmp
div
sar
sbb
sbb
jne
dec
jbe
test
ins
popa
cmps
popa
or
std
jle
mov
cmps
jae
push
gs
push
or
test
jg
jecxz
add
(bad)
cmc
enter
in
shr
or
mov
add
mov
add
int3
and
xor
xor
fdiv
pop
jo
popa
jo
ja
sbb
ror
call
xchg
jge
retf
adc
outs
or
pop
mov
pop
or
add
pop
add
ficomp
fldcw
stos
stos
mov
xor
and
stc
fisttp
xchg
dec
pop
mov
mov
xlat
push
jmp
lds
cmp
mov
leave
call
enter
inc
out
push
neg
dec
mov
push
jmp
mov
jl
cmp
sub
inc
enter
push
shl
or
mov
enter
(bad)
stos
fs
scas
lock
mul
in
add
dec
movs
or
lock
mov
add
sti
mov
in
in
mov
sub
fld
adc
aam
or
mov
xor
xor
fdivr
cs
cmps
fwait
inc
adc
inc
mov
xor
push
mul
xlat
jno
imul
sbb
push
add
mov
call
test
cmps
sbb
cmp
lahf
call
mov
mov
push
jecxz
movs
cmp
stc
jmp
or
jae
xor
jne
mov
test
and
popf
pop
repz
addps
push
sbb
cdq
lds
test
mov
fild
shr
push
or
stos
sbb
mov
mov
pop
and
(bad)
mov
xor
fldenv
hlt
mov
fisub
lahf
pop
jge
dec
in
dec
sub
je
inc
or
cmps
jmp
or
(bad)
pop
cmp
ins
mov
and
cli
xchg
out
(bad)
or
add
and
stos
adc
mov
adc
push
cmp
(bad)
jno
mov
adc
jmp
jl
mov
xchg
fld
sub
xchg
jbe
fimul
xor
ins
pop
cmc
mov
mov
scas
imul
sub
fild
daa
out
in
jecxz
ins
push
clc
cmps
dec
or
ins
lock
xor
or
ss
mov
mov
mov
cmp
call
loopne
cld
bswap
jae
fs
ret
sbb
mov
cmp
imul
mov
push
addr16
ins
or
xor
cmp
add
ds
mov
clc
sbb
push
jbe
xor
in
mov
jno
xchg
sbb
dec
movs
(bad)
imul
scas
xor
xchg
or
std
stos
push
js
add
inc
or
repz
ss
or
cmc
test
jb
inc
and
cmp
(bad)
sahf
ret
rol
cld
dec
movs
rcr
cld
mov
stc
mov
arpl
and
fdivrp
adc
add
scas
pop
push
or
loope
mov
es
xchg
jg
das
or
dec
fldcw
cs
clc
mov
jmp
and
and
es
jns
stc
xchg
repnz
lods
retf
test
(bad)
cmp
fdivr
cs
adc
xor
sbb
or
enter
and
fcomp
mov
sub
mov
sahf
pusha
jbe
or
jae
cli
in
and
mov
xor
sar
jmp
daa
test
xchg
and
and
sub
xlat
inc
sub
inc
or
out
cmp
lock
(bad)
xor
mov
sbb
inc
adc
sbb
stc
pop
stos
loope
or
pop
jae
lea
cmc
clc
sub
(bad)
mov
ja
push
sub
dec
jns
pop
gs
adc
fst
pushf
mov
stos
adc
and
movs
cmp
outs
inc
ins
xchg
cdq
jb
cmc
add
rcr
xchg
and
mov
xor
ins
cmp
sub
mov
or
adc
adc
test
fs
jp
jl
push
pop
jecxz
jg
shl
inc
jne
adc
adc
push
loope
mov
pop
test
mov
out
mov
mov
cdq
mov
pop
jbe
sub
(bad)
push
sbb
call
cmp
gs
xlat
fld
in
jecxz
xor
adc
call
outs
stos
mov
or
dec
in
and
int3
lods
add
fucomi
rol
(bad)
frstor
loope
mov
jo
or
xlat
outs
cmp
int
movs
sub
aam
scas
xchg
inc
mov
lds
es
jmp
xor
cs
sbb
(bad)
mov
jle
pop
or
adc
mov
jle
out
daa
cmp
add
pushf
sbb
repnz
sub
adc
cmp
scas
(bad)
ficom
add
clc
mov
mov
into
jmp
xchg
cmc
punpcklwd
jno
sub
sub
sbb
stos
mov
shl
xchg
or
mov
outs
out
fcomp
add
iret
mov
leave
imul
dec
scas
fsubp
retf
jge
sbb
fbld
cld
sbb
in
cs
test
int
sub
and
sbb
adc
retf
or
push
pusha
jle
in
jle
lea
jge
loopne
xor
mov
fwait
dec
sbb
test
sub
rcl
jle
(bad)
xchg
out
ds
out
(bad)
xor
imul
repnz
xchg
xchg
lahf
shl
mov
adc
jnp
jbe
dec
shl
inc
xchg
inc
pushf
adc
mov
aad
int
mov
jl
(bad)
test
or
xchg
push
mov
jl
shl
sahf
xchg
int3
push
or
loope
int
dec
jmp
cmps
sbb
test
adc
jmp
mov
stc
push
jmp
(bad)
push
outs
inc
rcr
xchg
pop
push
xor
jecxz
jg
scas
nop
mov
ret
test
adc
fadd
sub
imul
sub
arpl
xchg
clc
call
sbb
dec
add
sbb
pop
inc
cwde
sbb
sbb
dec
push
xor
pshufw
add
test
stos
mov
movs
les
loopne
push
in
jne
imul
call
iret
add
and
mov
xor
into
xor
jle
rol
or
retf
cmc
and
sti
mov
pop
mov
(bad)
cmp
loopne
iret
jb
xchg
jmp
mov
inc
inc
mov
inc
adc
adc
dec
(bad)
aam
cmp
push
repz
push
adc
in
in
cmp
add
dec
test
adc
add
mov
stos
xchg
add
jmp
xchg
les
in
xor
sbb
outs
jecxz
fst
icebp
repz
shl
mov
enter
mov
leave
loope
imul
sbb
int3
dec
and
sbb
(bad)
loop
inc
mov
push
xchg
pop
cmp
and
push
iret
adc
daa
icebp
lea
jmp
arpl
sti
ins
sti
imul
fistp
pop
dec
adc
xor
push
aaa
dec
movs
and
xchg
or
pop
mov
fucomi
sbb
dec
ja
mov
mov
push
inc
(bad)
repnz
sbb
call
ss
and
call
mov
push
dec
and
rcl
adc
ja
pop
sbb
in
dec
fsubr
or
adc
rol
pop
push
or
aas
cld
and
les
repnz
ss
pop
jecxz
sub
sbb
sub
imul
add
rol
fld
ins
mov
push
cmp
stc
fcom
outs
inc
out
add
or
retf
pushf
mov
mov
mov
mov
pop
xor
adc
out
pop
inc
ret
cdq
jg
loope
push
jmp
sub
sub
rol
aas
ret
cvttps2pi
adc
mov
outs
lods
fst
dec
popf
lods
xchg
retf
lahf
jne
dec
in
push
sub
and
push
ret
test
cmp
neg
and
repz
je
fwait
inc
jle
fbld
lds
cmp
mov
call
les
test
push
xor
mov
push
xor
adc
fmul
add
pop
test
jne
push
(bad)
int
outs
in
mov
sbb
ret
hlt
mov
push
adc
xchg
mov
(bad)
push
xchg
rcr
repnz
(bad)
repz
aas
in
ror
cmps
shl
test
xchg
fild
inc
cld
jae
cli
jle
inc
add
ins
mov
add
fadd
mov
push
jb
(bad)
jg
iret
das
sbb
cmp
pop
jbe
sbb
add
and
and
adc
push
cmc
fwait
push
xchg
sub
sbb
cmc
cmc
outs
iret
in
js
push
and
ja
mov
popf
inc
sbb
jno
fisubr
out
inc
adc
cmp
mov
mov
push
mov
inc
scas
xchg
outs
dec
push
fs
in
sub
(bad)
(bad)
loope
popf
sub
call
out
mov
mov
pop
add
cmp
mov
push
enter
mov
sub
movs
js
cmp
fimul
jae
cmc
shl
ror
icebp
xor
out
imul
sbb
arpl
xor
popa
(bad)
xchg
sub
xchg
cmp
gs
xchg
sbb
or
std
(bad)
stos
call
out
sbb
les
push
fist
dec
addr16
xor
pop
adc
fistp
les
sub
jno
ret
call
js
xor
sahf
js
mov
and
movs
sub
popa
lea
les
repz
dec
mov
icebp
push
adc
nop
xchg
mov
mov
inc
xor
pop
or
leave
push
mov
fst
add
add
mov
gs
or
push
pop
mov
ffreep
ss
dec
pop
cdq
add
rol
popf
cmp
sub
cli
shl
jmp
ret
fist
icebp
xor
mov
mov
out
sbb
pmullw
dec
xor
inc
xchg
or
out
fs
sub
push
inc
inc
inc
xchg
icebp
cmp
xchg
xor
push
stc
and
xchg
loope
js
shl
sub
mov
mov
aas
xchg
jmp
bswap
jo
test
or
sbb
mov
mov
das
adc
fidivr
enter
mov
clc
jbe
dec
clc
or
pop
sbb
push
punpcklwd
hlt
and
mov
jg
movs
add
jmp
dec
out
add
or
mov
sbb
repz
jmp
out
pop
push
sbb
sbb
call
outs
pop
inc
mov
xor
fmul
push
fsubr
xor
fs
test
and
cmp
stc
mov
out
dec
fstp
add
cmps
pop
sub
out
push
xchg
xacquire
and
retf
cmps
cli
or
out
call
xchg
mov
lahf
xchg
adc
lds
ds
or
or
cmps
ins
cli
shr
aas
cmps
mov
inc
xor
fild
mov
(bad)
rol
ror
lahf
pop
xor
fs
bound
dec
mov
sbb
mov
pop
sub
test
jg
dec
xchg
inc
(bad)
and
clc
int3
dec
adc
(bad)
clc
scas
into
js
or
cld
test
inc
call
cdq
and
es
imul
xor
(bad)
std
or
sub
ins
mov
divps
iret
sbb
cmp
stc
loope
ret
(bad)
pop
jns
cmp
xchg
pop
xchg
fisub
sub
sub
je
add
pop
pop
or
mov
fwait
xchg
cli
mov
xor
cli
(bad)
push
jno
mov
mov
add
sub
xchg
push
push
(bad)
pop
cmp
fcmovnu
adc
ins
aad
jmp
in
cs
xor
pop
cmp
dec
sub
div
sar
or
and
push
push
imul
int
mov
in
retf
sbb
push
leavew
popa
and
stc
push
pop
add
pop
adc
js
sbb
xchg
adc
pop
into
lea
push
ror
and
rol
data16
scas
test
push
cs
in
mov
cmps
ss
pop
mov
dec
sub
imul
jmp
cld
in
loop
les
xlat
dec
add
mov
(bad)
imul
xchg
cmp
mov
push
mov
and
push
pop
inc
adc
dec
(bad)
sub
push
pop
xor
push
mov
fs
or
add
rcl
loopne
jmp
push
fwait
add
sub
lds
inc
out
scas
push
jbe
imul
enter
xor
mov
fs
retf
call
or
jae
sti
push
cld
clc
adc
xchg
rcr
add
adc
fidivr
ds
pop
jle
js
xor
sahf
aad
mov
lahf
xchg
cwde
rcr
inc
push
or
sahf
fild
sbb
(bad)
fidiv
xor
mov
sbb
ret
imul
sub
dec
mov
(bad)
xor
adc
outs
inc
xor
popf
sbb
mov
push
loope
xchg
inc
dec
sar
pop
das
clc
xor
xor
pop
adc
lods
adc
jae
mov
test
add
int
xor
cmc
sub
cmps
stc
fstp
sub
pop
adc
(bad)
inc
push
daa
xor
dec
xlat
arpl
lods
mov
push
pop
retf
xchg
adc
les
out
xlat
push
popa
rcr
pop
mov
hlt
xor
scas
aam
push
mov
popf
jmp
(bad)
cmp
in
out
in
push
hlt
lods
(bad)
stos
jnp
fst
cdq
push
retf
scas
mov
add
mov
cmps
stos
sub
int3
repz
cdq
(bad)
out
xchg
xor
jbe
xor
inc
stos
push
nop
push
(bad)
aad
and
xchg
jbe
(bad)
fidivr
mov
mov
inc
sub
loope
push
adc
scas
pusha
dec
pop
out
fs
jmp
xor
inc
and
mov
in
sbb
aad
xlat
pop
rcr
push
mov
xchg
jl
repz
cmps
pop
mov
adc
push
jl
(bad)
dec
inc
jns
fwait
pop
retf
mov
fdiv
out
pop
cmp
js
fldln2
cmps
mov
outs
mov
push
add
mov
mov
dec
aas
ss
mov
fwait
sar
sub
sub
retf
jle
sub
out
sbb
arpl
sti
enter
(bad)
cmp
out
mov
or
movs
aaa
(bad)
clc
adc
xor
outs
and
add
mov
xchg
sbb
ins
and
adc
xchg
out
cmp
push
mov
mov
jnp
mov
sbb
outs
or
mov
ss
outs
jecxz
xchg
jecxz
cmp
sub
imul
cld
leave
cmc
int3
push
leave
pop
push
dec
xor
sbb
mov
outs
jge
mov
push
dec
ror
inc
fbstp
and
fsub
jg
or
mov
out
sub
sbb
xor
push
mov
xchg
or
fnstenv
xchg
add
or
ror
push
inc
cmc
pop
(bad)
(bad)
add
sbb
xor
jbe
sub
ins
mov
xor
xchg
sbb
pop
out
mov
popf
push
hlt
and
pop
pushf
jne
jmp
jmp
mov
push
fisttp
push
mov
xor
sub
int3
cwde
sub
(bad)
test
xchg
outs
pusha
int3
push
mov
xchg
mov
mov
shl
test
test
adc
out
mov
mov
cmp
lea
mov
add
dec
ins
rcl
mov
jne
les
ds
pop
nop
aam
pop
push
sbb
in
ss
mov
jg
addr16
mov
dec
pop
in
dec
xchg
xchg
xchg
or
sub
outs
mov
or
outs
movlps
fdiv
mov
imul
jb
leave
retf
loop
mov
mov
test
mov
dec
xchg
adc
or
push
or
push
adc
jae
lea
sti
out
xor
add
addr16
sub
sbb
fst
cdq
inc
or
shl
jp
sub
into
call
cmp
call
out
dec
shr
push
js
xchg
das
inc
loope
into
nop
push
test
pop
push
in
(bad)
pushf
pop
cmps
scas
sub
sbb
sti
xor
inc
jno
inc
jne
outs
sbb
shl
adc
xchg
inc
aam
into
or
mov
inc
hlt
lea
pop
sub
pop
repz
ins
inc
stc
je
sub
sar
push
in
jp
outs
push
outs
bound
arpl
loope
push
sbb
into
xchg
mov
jns
gs
cmps
outs
xchg
cwde
das
pushf
or
dec
leave
xor
jge
adc
jg
sbb
imul
ficom
xchg
fs
in
ret
sbb
sbb
pop
enter
les
std
scas
lods
arpl
test
shld
mov
rcr
(bad)
adc
and
jns
repz
std
cmp
push
inc
out
or
test
add
out
ror
stc
add
push
stos
and
jl
push
dec
(bad)
out
cmp
adc
add
popa
xchg
shr
cdq
mov
mov
mov
mov
not
xchg
movs
cli
dec
add
arpl
cwde
xor
jl
cmps
jo
jmp
cmps
mov
mov
iret
push
xchg
push
xor
xor
xchg
cmc
pop
test
into
cmp
(bad)
jle
into
mov
out
dec
sub
cdq
pop
fidivr
sbb
loope
fld
dec
adc
cmc
mov
lahf
call
mov
xchg
pop
sahf
xor
xor
mov
pop
pop
fwait
xor
outs
xor
fild
call
repz
push
in
inc
(bad)
or
fld
dec
sar
(bad)
(bad)
cmp
cs
cmp
lahf
daa
jmp
xor
xor
mov
cmp
aad
test
data16
(bad)
pop
outs
cs
cld
mov
shl
xchg
and
xchg
jp
add
mov
aad
scas
and
movs
pop
pop
(bad)
hlt
cmp
scas
scas
in
mov
outs
dec
mov
(bad)
movs
loope
data16
fyl2x
test
pop
in
aas
fcomp
push
push
fist
cmp
dec
(bad)
sub
push
sbb
inc
pop
jo
adc
retf
(bad)
cmps
lods
bound
cmp
outs
test
jecxz
loope
jg
sahf
xchg
shl
push
add
and
dec
xchg
shr
push
cli
inc
test
xchg
xor
mov
shr
xchg
loope
add
jp
dec
mov
(bad)
cmp
fistp
dec
add
js
(bad)
imul
push
xchg
pop
sub
push
add
inc
invd
ror
cmp
into
sbb
mov
xor
sbb
xchg
lds
(bad)
fdivr
addr16
ins
(bad)
mov
pop
sub
dec
adc
fdivrp
cld
add
xchg
cmps
jne
inc
mov
or
dec
xchg
imul
outs
icebp
call
inc
(bad)
ror
stc
loope
pandn
in
popa
test
or
sbb
push
lock
push
add
mov
ins
in
inc
repnz
jno
stos
adc
shl
aas
dec
cmps
jle
sbb
dec
adc
test
cli
pop
fdivp
fwait
xchg
cli
mov
push
dec
jns
dec
cmp
xchg
(bad)
std
mov
sub
popa
sbb
xor
add
popf
xchg
out
mov
popf
daa
pop
and
inc
bound
pop
(bad)
out
sbb
into
outs
mul
ret
xor
nop
out
mov
dec
das
and
les
test
and
outs
and
inc
pop
pushf
add
dec
mov
out
aad
outs
(bad)
lahf
sub
bound
mov
lea
dec
outs
jg
mov
stc
movs
xchg
pop
cmp
mov
in
mov
mov
(bad)
push
hlt
pop
hlt
dec
data16
mov
test
ror
or
mov
adc
int
xor
push
mov
(bad)
sar
stc
test
daa
and
pop
cmp
mov
cld
xchg
cwde
out
(bad)
aas
pushf
or
dec
xor
mov
pop
pusha
and
cmps
inc
dec
leave
cmps
clc
sub
out
stos
sti
movs
inc
outs
inc
jbe
ja
jnp
jg
and
fwait
jge
fs
mov
ins
sbb
dec
sub
aaa
mov
sub
test
loopne
in
xchg
jge
inc
push
pop
jg
inc
xor
gs
in
push
push
lock
push
mov
jo
push
fidiv
lods
ror
ss
jb
adc
rcr
or
mov
xchg
out
(bad)
and
std
jb
adc
cld
cmp
or
xor
dec
push
xchg
and
pop
shl
retf
mov
rcr
(bad)
mov
ds
cwde
and
mov
retf
(bad)
hlt
sub
nop
popf
mov
jae
(bad)
cmp
cmp
in
enter
outs
mov
cmp
aaa
in
retf
push
or
xchg
xlat
push
cld
stc
das
pop
les
repz
bound
retf
adc
repnz
inc
in
mov
rcr
out
lock
arpl
mov
test
dec
add
shl
imul
xchg
pop
(bad)
gs
cli
mov
(bad)
sub
sbb
ror
push
(bad)
xor
pop
sbb
leave
repz
setns
icebp
les
sub
mov
(bad)
shr
ss
out
in
sub
int3
aas
aaa
into
add
enter
mov
jae
jmp
mov
inc
sbb
aaa
mov
mov
xor
pusha
jo
sub
in
sub
sbb
push
mov
cmp
inc
mov
hlt
jmp
sub
loope
cmc
fwait
out
and
(bad)
sbb
pushf
sahf
loop
mov
imul
jg
fisttp
xchg
mov
mov
add
call
mov
frstor
movs
jmp
lods
sub
push
out
bound
mov
gs
mul
adc
mov
push
movs
pop
jae
iret
xchg
aam
ret
cmps
mov
in
popf
in
pop
femms
xor
pop
fwait
xchg
cmps
out
lock
mov
shl
push
adc
dec
cmp
hlt
data16
xchg
mov
test
lahf
pop
inc
xor
in
lods
push
inc
dec
jp
adc
in
adc
and
daa
inc
mov
jae
out
fistp
add
sub
adc
stos
jnp
cmps
aaa
repz
xchg
stos
sbb
into
and
daa
or
(bad)
mov
mov
je
mov
rcl
lea
test
movs
mov
daa
jg
pop
inc
leave
gs
cmovno
mov
add
or
das
push
mov
je
pop
(bad)
ja
stos
mov
cmp
lods
cmp
pop
push
cmps
add
aad
retf
in
and
cs
je
sbb
adc
sub
push
lahf
push
outs
sbb
pop
call
xor
lods
test
sahf
fwait
cmp
aad
fs
iret
mov
in
mov
push
sub
lea
repz
mov
(bad)
dec
movs
push
rol
sahf
aam
mov
(bad)
retf
pop
jp
inc
and
add
mov
adc
xor
loop
imul
cmps
inc
push
movs
pop
fisubr
push
jle
cmp
jmp
out
sbb
xchg
shl
pushf
sbb
lea
or
test
xor
pop
retf
int
(bad)
fcom
pop
mov
cmp
movs
pop
mov
mov
aas
lea
cdq
es
xchg
cs
popa
arpl
xor
nop
mov
sub
retf
imul
sub
adc
(bad)
cmps
bound
xor
(bad)
sub
(bad)
push
and
and
push
cmp
jmp
int3
(bad)
cld
inc
mov
in
mov
mov
mov
movs
xchg
add
mov
pop
xchg
out
push
mov
cwde
icebp
cmps
add
add
outs
(bad)
sbb
fidivr
lods
rdseed
scas
mov
leave
pop
mov
pop
je
and
fmul
popa
mov
test
das
mov
lock
sub
inc
dec
mov
and
mov
xchg
pop
mov
div
or
or
stos
daa
sti
push
fdivr
in
mov
mov
aas
xchg
sahf
das
mov
cmp
sbb
pop
xor
pop
fist
add
xchg
bound
jb
mov
fisubr
pop
rcl
jb
pop
jbe
xchg
sbb
xor
idiv
(bad)
push
sub
pop
shr
cmp
pusha
daa
call
push
mov
sbb
fadd
rcr
jb
sbb
jnp
xor
sbb
sbb
out
jge
ds
push
dec
cld
std
push
in
idiv
(bad)
adc
or
cmp
movs
sbb
sub
jne
lds
scas
xchg
xchg
sub
psrlw
mov
mov
add
sub
out
and
movs
sbb
bound
mov
nop
add
xchg
mov
push
lds
or
or
cmp
pop
jae
pop
jbe
fist
imul
fcomip
add
mov
push
push
sar
repnz
fiadd
sbb
mov
test
sar
jle
mov
jbe
das
ja
dec
mov
push
jbe
push
or
dec
jb
out
pop
sub
rol
and
leave
(bad)
mov
xchg
dec
sbb
mov
ss
btc
push
or
mov
sub
retf
and
inc
rcl
adc
adc
and
dec
cdq
pop
retf
mov
sbb
mov
lods
sbb
mov
add
push
sbb
loop
scas
push
mov
inc
loope
xchg
mov
jl
and
loopne
pop
add
in
mov
xor
int3
bound
sahf
sbb
jg
adc
jns
add
jbe
dec
mov
mov
xchg
xor
dec
pop
daa
int
pop
cld
cmps
mov
pop
inc
out
data16
es
pop
mov
xchg
or
imul
imul
cmp
ret
xchg
push
push
out
mov
cmps
adc
(bad)
or
push
push
iret
imul
out
dec
pop
stos
mov
jne
aaa
jp
dec
call
jle
xor
stos
aas
pop
pushf
icebp
xchg
mov
outs
sti
sub
jg
scas
jns
dec
movs
adc
aas
fldenv
enter
bound
mov
jp
pop
not
add
repz
push
es
test
xor
es
mov
sahf
dec
lods
xor
iret
sbb
dec
mov
or
jne
lahf
fdivr
push
mov
or
leave
inc
mov
jg
and
or
and
js
cmp
sar
and
scas
adc
ret
jnp
jp
lea
sbb
icebp
push
push
dec
fidivr
push
int3
leave
add
lods
and
pop
scas
rcr
mov
pop
clc
mov
call
dec
jb
pop
mov
call
push
ss
in
adc
cwde
sub
(bad)
aas
out
cmc
xchg
ss
sbb
jns
mov
pop
les
cmp
jno
mov
pop
fmul
xchg
movs
mov
test
cmp
mov
gs
xchg
mov
outs
rcr
mov
adc
pop
outs
cmps
add
test
fld
nop
in
or
neg
or
rcl
add
push
lahf
lods
scas
mov
add
add
out
mov
dec
xor
jle
xchg
xchg
pop
ret
or
fscale
pop
mov
mov
punpckldq
aaa
iret
lahf
pop
xchg
mov
sbb
scas
movs
fld
ins
xchg
pop
in
dec
shl
(bad)
stos
adc
or
js
fld
fs
test
jne
sbb
fwait
cmps
into
inc
push
mov
xor
lea
xor
cmp
into
cld
imul
sub
or
cmp
mov
out
sub
in
js
lods
add
mov
in
inc
les
inc
ret
call
lea
cmp
xchg
cmp
mov
jg
imul
jae
jecxz
fwait
mov
xchg
xor
mov
mov
sbb
add
push
xor
retf
cmps
stc
call
sbb
pop
inc
push
adc
mov
ja
adc
sbb
jmp
cdq
(bad)
les
fadd
mov
js
imul
dec
mov
and
push
(bad)
adc
adc
test
mov
fdivr
iret
mov
dec
add
jbe
popf
or
in
sub
jl
mov
ins
pop
retf
xchg
sub
xchg
clc
inc
ja
pop
shl
pop
es
ficom
xchg
mov
cs
stos
inc
movs
addr16
pop
mov
dec
cli
fld
xor
xor
call
movs
lock
jge
push
lahf
mov
int3
mov
or
jbe
bswap
mov
inc
sub
sar
pop
ss
(bad)
int3
inc
dec
iret
inc
push
push
dec
push
ja
cld
mov
test
mov
(bad)
(bad)
pop
or
jmp
addr16
mov
ret
and
dec
sub
mov
jg
dec
push
mov
or
and
sti
popf
nop
cmps
xor
psubq
dec
repnz
adc
pop
in
mov
mov
lds
in
lds
rcl
pop
jmp
cmps
inc
out
push
pop
fistp
and
push
and
scas
mov
pop
mov
inc
scas
sbb
mov
jno
cli
sahf
shr
inc
lods
in
cmp
loope
out
shl
fistp
add
(bad)
jle
cwde
ja
loope
dec
sub
loopne
mov
pop
enter
pushf
dec
mov
dec
repz
sti
stos
div
mov
cld
push
mov
sbb
fstp
jae
add
loopne
inc
mov
out
pop
rcr
icebp
xchg
dec
fidiv
inc
test
mov
pop
mov
mov
fsubr
popf
or
jmp
cld
xchg
loope
mov
jbe
sti
fchs
sub
xlat
xchg
sub
imul
test
add
fld
fiadd
out
test
aaa
repz
jle
repz
not
scas
cmp
leave
pop
out
les
leave
pop
not
sbb
and
dec
stos
rcr
jg
cmc
js
sar
add
arpl
lds
dec
fdivr
enter
cdq
and
add
cmp
and
cdq
mov
pop
xor
cs
sbb
xor
or
lea
and
cmp
sbb
pushf
mov
sbb
push
(bad)
ret
push
jg
out
jnp
mov
and
mov
movs
(bad)
lods
aad
call
movs
and
les
fs
cdq
add
sbb
mov
bound
xchg
rcr
cmp
sbb
pop
push
dec
xchg
and
jmp
mov
into
scas
push
or
pop
gs
outs
int3
jb
sahf
jmp
inc
sbb
add
test
aas
mov
mov
jnp
(bad)
imul
inc
adc
fisub
cs
jg
xchg
stos
scas
movs
cmp
mov
lods
sbb
bound
sub
dec
dec
inc
inc
xchg
ror
(bad)
and
fist
mov
inc
test
fldenv
stos
xchg
jle
call
call
push
push
and
sahf
add
dec
sub
fs
and
xchg
pop
pop
sti
cmp
ins
repz
mov
xor
or
ins
sbb
add
adc
jbe
xchg
mov
es
mov
outs
in
fwait
inc
jl
int
sbb
jb
xor
add
sub
pop
push
fst
(bad)
out
out
fstp
loop
mov
in
mov
pop
xchg
sub
and
mov
imul
jnp
cmovns
cmp
cmp
push
nop
mov
jmp
jne
idiv
mov
push
in
mov
popf
mov
fs
mov
outs
cmp
xchg
mov
(bad)
(bad)
jb
mov
ret
adc
dec
aaa
not
data16
dec
aad
ins
inc
enter
mov
or
mov
je
jecxz
ins
adc
xor
ret
imul
sub
sub
mov
int3
aad
ret
loop
mov
and
or
test
adc
mov
mov
cmp
mov
xchg
jbe
add
and
dec
iret
push
push
scas
cmp
ds
push
fwait
push
xor
loop
sbb
sub
pop
lock
push
test
xchg
inc
es
jne
and
repz
rcl
repz
jp
push
sub
into
sbb
xlat
jns
mov
xor
inc
dec
jp
shl
jecxz
sbb
stc
sar
sbb
fs
mov
stc
leave
shl
pop
cld
jno
mov
iret
scas
ja
jmp
cmp
jge
test
jnp
and
inc
int3
sbb
add
xlat
aad
inc
hlt
sar
cwde
aam
pushf
push
ret
xchg
adc
inc
pop
cwde
addr16
mov
inc
cmp
and
sub
outs
fs
ss
and
cmp
push
(bad)
sub
loope
push
mov
jo
and
mov
mov
addr16
sbb
enter
adc
into
out
dec
aad
out
or
ins
mov
mov
test
xchg
fadd
xor
pop
add
(bad)
pop
fs
jne
pusha
dec
push
fsub
cmp
daa
xor
test
or
mov
inc
push
mov
rol
and
aam
or
jne
lods
scas
mov
adc
leave
out
jg
jle
js
pop
pop
fisubr
mov
inc
inc
in
aas
and
add
test
pop
rep
bound
xchg
jnp
mov
cmc
pop
ds
stos
inc
fimul
ins
mov
ja
and
pushf
lods
xchg
test
xor
sub
dec
fdiv
add
pop
xchg
add
aam
push
fsub
mul
int
ss
ins
add
adc
arpl
add
loop
je
add
fstp
cmp
popa
xor
imul
or
push
sub
fdivrp
mov
aas
loopne
xchg
lods
into
push
xchg
call
add
sub
jp
lea
adc
cld
push
xchg
call
inc
sub
rcl
jge
adc
and
xchg
(bad)
and
or
mov
cmp
icebp
cmp
cmp
lea
and
dec
cmp
movs
cmps
aaa
ins
jno
loopne
sbb
jne
cmp
inc
push
sub
aas
rcr
sti
rcr
imul
xchg
sbb
mov
pushf
push
ss
mov
jno
sbb
fidivr
or
jl
sbb
mov
call
mov
(bad)
imul
xor
cld
mov
inc
mov
gs
ror
inc
hlt
mov
rcr
pop
pop
cli
sub
push
or
int3
mov
cdq
sbb
shr
outs
fldcw
lahf
or
js
cmp
adc
mov
xlat
pop
xor
jns
call
in
or
xchg
fwait
sbb
or
lds
push
mov
sub
lods
inc
cmp
sbb
mov
call
dec
push
pop
jmp
jmp
out
mov
clc
mov
(bad)
xchg
add
repnz
sar
xor
popf
adc
push
mov
les
jmp
or
mov
jmp
test
xlat
aam
dec
cdq
loope
ror
dec
dec
mov
cmp
push
fst
or
jne
ja
push
dec
sub
jg
fst
in
test
adc
jmp
jge
cmps
sbb
mov
iret
adc
mov
and
xlat
jp
je
mov
sbb
xchg
jae
test
das
or
pop
pop
jl
inc
ficomp
xchg
jns
fadd
jge
aas
dec
xlat
rcr
cmp
(bad)
sbb
pop
int3
repz
and
sub
mov
clc
cmp
js
and
cmp
jp
ret
cmp
ror
scas
jne
jp
stos
and
adc
and
fstp
out
jae
in
fld
es
aad
addr16
aad
ja
into
jo
(bad)
xchg
das
sbb
mov
mov
push
test
xchg
adc
add
push
scas
dec
or
pop
push
fst
daa
ffreep
je
(bad)
pop
call
jns
out
jle
sbb
(bad)
xor
(bad)
rol
test
add
pop
pop
inc
push
outs
mov
out
xchg
adc
adc
jmp
cmp
and
xchg
push
ficomp
push
jnp
sbb
xchg
retf
mov
scas
sub
ins
test
adc
sbb
mov
data16
push
retf
pusha
cmps
dec
call
aad
add
mov
lds
in
shl
xchg
mov
shl
cmp
pop
mov
xchg
xor
xchg
sbb
jmp
mov
sar
cdq
mov
xlat
fwait
pop
sub
fcmovu
pushf
mov
ss
fldcw
in
call
cwde
mov
aaa
jno
shl
jge
mov
aad
cwde
(bad)
jle
add
xchg
inc
sti
je
(bad)
fidivr
int
int
bound
jb
fisttp
(bad)
hlt
jp
loope
lods
jle
and
out
mov
aad
popf
xor
pushf
dec
add
nop
pushf
cmc
xchg
xor
mov
or
(bad)
lock
jae
out
xchg
jge
stos
or
push
fisttp
rcl
pop
in
ss
jl
inc
sbb
stc
test
and
aad
dec
inc
cmp
xchg
push
call
inc
fild
push
ds
lods
mov
cmps
push
sahf
ds
arpl
movs
aas
jge
bnd
imul
(bad)
jmp
rcl
mov
int
lea
stos
adc
fisubr
mov
pop
sub
stos
dec
xchg
repz
stos
and
xchg
stc
int
outs
cdq
fs
enter
add
ins
in
out
push
inc
popa
ja
mov
jp
mov
push
rcl
sbb
jecxz
jb
mov
sbb
and
lods
es
in
sbb
(bad)
retf
push
loop
dec
leave
adc
bound
mov
jno
test
in
push
imul
jne
cmp
fild
push
jmp
xor
pushf
sbb
pop
mov
fst
cs
mov
xor
std
xchg
push
sti
popf
ret
(bad)
mov
and
icebp
inc
leave
gs
add
inc
inc
popa
or
inc
xor
cmp
pop
sub
movs
hlt
enter
jbe
xchg
jbe
push
into
retf
sub
movs
mov
in
jno
pop
jnp
push
faddp
mov
mov
inc
fucomp
bound
inc
jmp
arpl
cmps
mov
dec
and
test
inc
xor
or
(bad)
jle
out
mul
(bad)
repnz
daa
loop
aad
dec
movs
adc
cmps
mov
or
fwait
sti
mov
and
or
xor
xchg
xchg
add
xor
inc
test
cmps
ret
and
or
add
lds
adc
daa
fmulp
jge
sub
pop
mov
jno
ret
cmp
mov
ins
repz
sti
jl
enter
retf
(bad)
mov
mov
sbb
mov
mov
dec
fs
push
adc
mov
cld
mov
lea
adc
arpl
cmc
mov
lds
and
and
dec
pop
in
out
pop
stos
add
loopne
mov
pop
and
ss
mov
pop
scas
inc
iret
fisttp
int
call
cmps
mov
mov
sar
test
xor
jnp
in
mov
push
arpl
outs
aam
inc
inc
xor
inc
ins
addr16
and
mov
add
or
pop
ins
movs
call
hlt
push
push
cmp
xchg
xchg
jb
mov
arpl
fs
push
dec
call
dec
xlat
mov
in
mov
(bad)
xor
add
xchg
pop
sub
inc
push
ret
add
shl
and
lahf
pop
fcom
ss
mov
mov
or
jecxz
scas
(bad)
test
xor
int
movs
mov
sbb
rcl
sbb
(bad)
idiv
mov
cmp
mov
jbe
jo
adc
xchg
mov
dec
retf
loopne
add
add
xor
loope
jnp
xchg
repz
imul
cmc
mov
push
inc
pop
popf
jae
mov
sar
cld
shl
xlat
mov
frstor
push
sahf
pop
fcomp
jmp
pop
mov
dec
mov
sub
add
add
sub
jl
pop
jae
fcmovb
mov
(bad)
pop
sar
adc
xchg
je
js
jbe
(bad)
mov
(bad)
cmps
das
xor
in
push
or
and
jge
fist
xor
bound
popf
xor
xor
cs
(bad)
aad
loope
stos
sbb
movs
stos
or
xor
sar
mov
sar
leave
mov
fwait
jecxz
push
daa
mov
and
les
mov
lods
mov
cmps
sub
xor
mov
xor
fild
stc
inc
dec
lea
jmp
loopne
xlat
mov
cwde
pop
add
push
pusha
iret
sub
out
jge
xor
push
enter
jmp
mov
cmp
mov
iret
mov
clc
ins
pop
lahf
int3
pextrw
cmp
mov
in
mov
cmp
xor
in
sbb
int3
ss
cmc
dec
adc
mov
push
or
call
les
and
xor
repnz
fdivr
pop
xchg
mov
adc
xchg
mov
(bad)
push
nop
aas
and
or
sbb
sub
addr16
dec
mov
pop
in
icebp
les
lods
inc
sub
cdq
push
adc
outs
dec
push
cmp
outs
push
je
pop
xchg
daa
mov
cmp
(bad)
in
adc
xor
in
aaa
ds
pop
mov
add
jno
lock
push
scas
aam
push
leave
jle
sti
and
mov
(bad)
test
and
sahf
sahf
xlat
les
or
dec
or
xor
es
loop
add
arpl
pop
inc
jl
inc
cs
inc
addr16
cmps
push
or
sbb
sub
sbb
push
and
test
fcmovnu
ror
sub
dec
retf
push
jmp
int3
push
movs
popf
std
fistp
cmp
jl
es
jmp
sbb
cmp
mov
add
shl
leave
cmps
mov
aad
dec
mov
cs
int3
repz
or
lahf
adc
lods
and
into
lds
test
(bad)
dec
sub
jb
lds
mov
or
icebp
xchg
or
das
push
sti
jbe
sbb
or
out
lea
and
(bad)
jmp
leave
mov
in
jmp
cmc
hlt
dec
cmp
(bad)
fldcw
ja
mov
aad
(bad)
xchg
int3
gs
imul
xchg
repz
popa
xor
(bad)
pushf
xchg
outs
mov
mov
mov
cmp
out
bswap
push
test
or
hlt
sahf
test
push
sbb
scas
mov
add
push
xor
pop
cmp
enter
ror
movs
dec
xchg
mov
jbe
jp
cli
test
jb
mov
xor
imul
mov
jp
fnstcw
jbe
test
adc
adc
ja
and
outs
cld
jl
loopne
ss
mov
out
test
xor
inc
(bad)
push
(bad)
mov
cs
ins
test
imul
adc
xchg
cmps
shr
or
dec
mov
lods
dec
mov
mov
xor
or
retf
aas
push
adc
js
adc
pop
push
sub
jecxz
or
movq
mov
or
imul
sbb
mov
sub
outs
sar
in
test
sbb
test
mov
adc
imul
mov
lock
pop
jecxz
mov
and
les
xchg
js
pop
mov
cmp
stos
jmp
xor
push
outs
ins
jo
aam
mov
sbb
es
xor
add
das
repnz
inc
pop
int
clc
push
aaa
mov
mov
mov
inc
pop
stc
dec
sbb
mov
pop
and
xlat
call
ret
mov
mov
pushw
rol
mul
jmp
call
test
ss
(bad)
and
outs
xor
ret
sub
cmp
dec
push
xchg
fimul
popa
and
or
adc
fs
and
and
ret
shl
inc
mov
call
(bad)
pop
int
pushf
jmp
dec
dec
(bad)
addr16
cmc
out
cmp
cmp
or
dec
cli
jne
out
adc
mov
push
(bad)
mov
lods
das
xor
sbb
jge
fdiv
sub
pop
jle
ss
xchg
retf
pop
sti
lock
mov
mov
sbb
mov
out
in
shl
stos
adc
imul
xchg
xor
fadd
imul
jecxz
mov
icebp
add
lea
cmp
sub
pop
add
daa
mov
add
cld
enter
cmps
stc
gs
mov
xor
inc
jmp
not
hlt
push
lods
jecxz
test
sub
loope
dec
call
pop
add
xchg
xchg
retf
xchg
stc
rol
xchg
mov
xlat
mov
push
push
test
gs
adc
adc
xchg
pop
inc
pop
xchg
mov
retf
mov
sub
(bad)
adc
dec
es
aaa
mov
sub
clc
out
push
mov
push
xchg
mov
and
add
movs
les
pop
retf
adc
enter
imul
mov
mov
mov
(bad)
gs
mov
leave
jge
xor
mov
push
mov
and
cmc
shr
mov
sub
add
aaa
sahf
lods
jmp
test
loope
xchg
dec
jo
xor
mov
les
imul
ret
cmps
das
sub
or
ins
imul
cld
cmp
lods
cmp
mov
and
mov
adc
in
aas
stc
mov
aam
pop
inc
inc
add
fld
jecxz
sbb
loop
dec
jmp
push
bound
pop
cmc
mov
adc
out
fucomip
movs
clc
rcl
rcl
imul
ror
pop
mov
mov
dec
into
cli
mov
cmps
mov
lods
dec
cmp
fwait
fs
cs
pop
fst
popa
and
pop
lahf
in
xor
test
mov
sbb
ret
mov
and
fcom
dec
xchg
mov
dec
xor
cmp
fisub
add
mov
and
jl
pushf
or
js
mov
push
int
fs
xchg
ret
jecxz
jbe
aaa
and
scas
sub
pop
sti
jecxz
jecxz
sub
stc
jbe
cmp
adc
popf
rcr
arpl
mov
jmp
lods
cwde
mov
(bad)
imul
sbb
push
out
add
mov
jb
add
mov
in
sbb
cs
stos
mov
jecxz
ffree
add
shl
das
and
jge
das
(bad)
xchg
fwait
sbb
rcl
cmc
lods
fld
leave
outs
test
pop
cmp
loop
jge
inc
add
(bad)
xchg
dec
inc
push
push
jnp
xchg
dec
jbe
test
ret
shl
test
and
inc
loope
sbb
cli
das
jge
adc
dec
into
inc
dec
mov
push
inc
cmps
outs
jae
xor
enter
les
push
pop
ret
shl
push
fadd
mov
stc
mov
imul
ds
push
enter
mov
push
jae
xchg
cwde
aaa
push
fwait
dec
xchg
mov
push
ds
(bad)
sbb
(bad)
ficomp
xor
(bad)
cmp
shl
imul
test
test
jnp
push
rol
jle
jo
fdivr
mov
mov
ret
bound
dec
sub
mov
sub
call
adc
add
or
mov
jbe
clc
clc
xor
call
leave
cmps
aas
call
pop
es
cmp
xor
lea
aad
push
cmp
popf
inc
loop
fsub
inc
mov
sti
stos
mov
shl
pushf
es
push
pop
mov
push
ret
mov
adc
movs
mov
stos
inc
mov
and
jb
jno
(bad)
mov
push
pop
popa
icebp
mov
push
or
pop
mov
cmps
cmp
lock
(bad)
push
xchg
neg
cli
mov
jbe
inc
mov
xor
dec
sub
mov
mov
mov
xor
outs
jmp
ins
pushf
xor
or
jns
and
ret
jmp
dec
mov
and
pop
dec
mov
sub
jl
xchg
jae
cli
mov
into
loop
stos
adc
in
pop
cmp
sub
cld
ret
minps
push
dec
jmp
movs
pop
fisttp
cmps
ss
mul
es
mov
int
jp
cmps
gs
in
push
cmp
xchg
in
mov
js
jge
sub
outs
sbb
xchg
call
sub
ss
cmps
push
out
jb
jne
jb
sub
cmp
push
jle
mov
mov
pushf
xchg
pop
inc
cwde
inc
cli
imul
lods
and
dec
ss
hlt
sub
daa
cmc
neg
xchg
xor
xchg
je
imul
out
je
or
sbb
test
fwait
popf
jae
jp
das
dec
add
(bad)
das
sub
imul
cdq
sub
xchg
sbb
and
add
jne
cmp
or
and
and
sub
imul
push
cs
leave
es
iret
adc
pop
mov
fadd
int
jno
mov
mov
jno
jg
jo
jmp
lds
cdq
sbb
outs
enter
lods
rol
mov
xchg
xchg
push
xchg
push
sbb
aam
sti
push
xor
pop
add
fdiv
int
ucomiss
inc
dec
push
inc
into
add
and
or
lods
aas
test
mov
daa
cmp
fs
(bad)
mov
sti
xor
xchg
das
jno
mov
mov
ficomp
jbe
xor
bound
call
and
lahf
jp
(bad)
stc
or
mov
xor
push
adc
adc
cmp
outs
jb
and
mov
lea
cmps
ret
fidivr
lods
sbb
and
loope
push
xchg
sub
rep
pop
dec
retf
xor
pop
sub
xor
cdq
cdq
fcom
shl
stos
add
popf
mov
push
jmp
ret
retf
sub
dec
fdivr
(bad)
jne
adc
xchg
jle
jnp
jp
jne
jne
adc
fst
mov
push
mov
icebp
mov
xchg
jo
xchg
or
or
leave
ds
rcr
pusha
mov
or
inc
push
mov
pop
jl
pop
ret
inc
or
add
xchg
sti
aad
fwait
cld
data16
jmp
inc
xchg
xlat
or
push
(bad)
data16
and
sbb
std
or
add
das
mov
stos
mov
movs
sti
and
and
sub
in
ja
sbb
xchg
pop
fstp
jmp
sahf
fdivr
test
sbb
sti
push
xor
cmc
cmp
mov
fisub
ins
mov
mov
enter
sbb
jne
inc
test
jno
inc
retf
into
or
mov
mov
jmp
and
pop
cmps
(bad)
and
out
movs
adc
and
jp
outs
leave
push
test
cs
mov
cmps
pop
xlat
ins
sbb
int
leave
enter
push
xchg
xchg
mov
mov
fidiv
rdmsr
inc
xchg
cmp
cs
neg
loop
mov
push
sub
jge
xchg
cmp
and
dec
pop
jbe
(bad)
pusha
or
lock
jb
xchg
jno
adc
push
jb
pusha
xchg
mov
inc
xlat
pop
mov
xor
pop
jno
lods
add
fdiv
cdq
mov
das
xchg
push
push
push
repz
cmp
(bad)
ret
xor
jmp
ror
repnz
push
das
adc
sbb
push
mov
fistp
xor
out
and
sbb
ins
mov
fdivr
mov
das
aam
jp
loope
mov
je
(bad)
mov
jmp
push
scas
stos
inc
mov
pop
cmp
je
nop
or
mov
adc
(bad)
fnstcw
lods
add
add
es
xlat
ins
rcr
push
adc
push
and
mov
inc
call
push
scas
push
movs
and
mov
sub
cmps
cli
xor
add
aam
cdq
out
ins
mov
sub
aas
rol
pushf
pushf
xchg
xchg
out
xchg
xor
shl
in
enter
inc
in
adc
int3
sub
(bad)
ror
sar
push
fld
inc
pop
nop
stos
mov
in
sub
fcomip
inc
sub
mov
pop
std
jmp
gs
or
mov
in
adc
test
xchg
pop
or
and
jnp
leave
sbb
icebp
add
jns
jg
add
mov
outs
test
jnp
outs
ret
xchg
(bad)
jne
or
int3
push
popa
cmp
mov
cmps
xor
in
sbb
sbb
jmp
xchg
pop
cmp
bound
stc
dec
cmp
pop
mov
adc
mov
aaa
iret
(bad)
sbb
in
std
call
xchg
in
cmp
ds
add
dec
cmp
xchg
push
test
inc
xor
fsub
and
jge
data16
add
lock
mov
mov
icebp
popf
cdq
adc
inc
or
loop
ins
mov
lea
pop
xchg
popa
sub
dec
pop
cwde
add
mov
sbb
pop
add
add
inc
sti
repnz
in
sub
sub
xor
adc
icebp
mov
call
push
data16
jbe
dec
push
shl
movs
xor
xchg
loope
pop
adc
stos
pushf
lods
adc
ins
iret
repnz
sbb
hlt
jl
cmp
aad
jne
cs
push
repnz
mov
mov
lds
ret
adc
and
sbb
mov
jmp
ins
enter
adc
aaa
jnp
cmp
mov
push
int
shl
(bad)
rcl
pop
and
sbb
xor
mov
test
sub
jb
inc
jmp
jmp
inc
ds
std
imul
or
pop
(bad)
jl
and
xchg
cmps
retf
out
add
scas
test
jno
stc
jns
retf
or
jl
push
cmp
clc
arpl
out
pop
test
pop
ss
les
xchg
test
sbb
pop
pusha
or
pop
or
sbb
fistp
adc
add
adc
xchg
fcmovne
cmc
call
sub
sbb
das
dec
xor
mov
jbe
add
push
sbb
jae
mov
pop
or
inc
sub
mov
xor
imul
push
fimul
jmp
fimul
sti
inc
(bad)
lds
dec
outs
cmp
stc
cs
jno
dec
call
sub
ss
adc
xchg
cli
push
jl
test
jne
adc
pushf
pop
ins
sub
enter
or
mov
mov
sub
cdq
cmps
mov
in
xor
pusha
call
and
pop
lods
ret
xchg
add
out
xchg
retf
and
add
add
lock
mov
and
pop
std
pop
and
fcomip
xor
add
cmps
aaa
fbld
stc
add
mov
(bad)
pop
popa
loopne
mov
imul
cs
addr16
and
das
retf
mov
or
cli
les
dec
hlt
mov
add
xor
jmp
rcl
pushf
mov
jmp
xor
inc
int
lds
jmp
jns
cmc
in
dec
mov
out
movs
cmp
and
or
adc
push
dec
push
call
cmps
and
cmp
shl
mov
(bad)
jmp
lahf
cwde
mov
aam
bound
jne
into
xor
jge
sbb
adc
and
dec
(bad)
int3
jns
cmp
je
jl
cmp
mov
lea
daa
mov
fst
retf
adc
xor
imul
cmc
pop
arpl
inc
cmc
dec
sub
and
sbb
popa
cwde
mov
push
pusha
ja
xchg
fs
mov
loope
das
lds
sub
jecxz
in
xchg
add
(bad)
fcmovnb
ja
xor
mov
cmp
rol
pop
aas
ins
fs
jl
jnp
ret
(bad)
stos
mov
scas
push
scas
daa
test
in
cmp
in
mov
xchg
jg
cmc
pop
ret
js
pop
xchg
or
(bad)
mov
xor
movaps
jne
shl
into
push
mov
jmp
and
fidiv
ins
jae
jge
adc
gs
and
mov
test
xchg
xchg
in
xor
cmp
popf
out
je
jl
push
or
rcl
mov
xchg
mov
push
cmps
movs
pop
push
mov
stc
push
aam
leave
dec
adc
jb
sti
push
xchg
add
sub
popa
mov
and
ins
ror
and
pop
neg
adc
repnz
fild
mov
and
sbb
adc
call
pop
jecxz
outs
(bad)
xchg
push
jnp
in
(bad)
arpl
jb
rcl
test
out
fld
adc
pop
scas
pop
mov
stc
pop
mov
xor
mov
ret
pushf
sub
aad
test
inc
push
aad
ins
xchg
nop
ss
fiadd
outs
mov
imul
push
in
pushw
cmp
out
shl
outs
mov
daa
sahf
inc
mov
dec
inc
test
mov
jnp
mov
and
fs
(bad)
xchg
enter
int
test
mov
xchg
movs
jnp
or
icebp
ins
(bad)
stos
mov
mov
mov
xlat
inc
repz
push
in
inc
bound
mov
leave
and
mov
jge
leave
mov
daa
xlat
test
addr16
push
cmps
inc
pop
xchg
(bad)
push
and
pop
lods
outs
(bad)
mov
aad
and
mov
dec
ret
xchg
pop
mov
clc
xor
add
pop
mov
xchg
sub
sub
inc
lock
pop
mov
sbb
dec
movs
push
and
movs
nop
xchg
xor
rol
and
call
arpl
aaa
xor
ja
xchg
adc
pushf
push
je
xchg
mov
ja
shr
in
mov
neg
(bad)
xor
and
or
jmp
(bad)
jno
push
sub
pop
pop
jl
pusha
out
fistp
sub
sbb
rcr
xor
pop
sahf
add
push
sbb
mov
ins
cmc
and
(bad)
cmp
dec
mov
cmps
mov
das
xor
loopne
int3
outs
add
xor
xor
out
dec
and
add
push
jae
ficomp
bound
sbb
or
mov
mov
add
jle
fwait
mov
and
leave
mov
push
adc
daa
shl
test
fnstsw
add
mov
inc
ficomp
aas
out
mov
out
jmp
sub
adc
xor
push
out
dec
movs
mov
jb
adc
mov
push
jns
mov
mov
sahf
xchg
adc
fst
cmp
jo
adc
test
je
cmp
jae
and
xadd
mov
cmp
mov
mov
(bad)
fiadd
(bad)
mov
sbb
outs
popf
xor
jl
enter
(bad)
fdivr
xchg
lea
ret
push
leave
in
mov
push
retf
xchg
xchg
xchg
dec
mov
pop
pop
and
xor
xor
or
xor
ins
inc
or
in
rcr
push
push
cli
jecxz
call
or
pop
in
pop
xor
mov
push
inc
mov
mov
out
mov
lock
dec
nop
hlt
mov
icebp
out
xlat
sbb
pop
xchg
(bad)
sub
xchg
push
jle
pop
push
jne
sbb
das
stc
adc
mov
popa
xchg
mov
fbstp
cld
push
mov
or
inc
xor
call
mov
pop
mov
mov
stos
(bad)
fwait
adc
mov
inc
in
adc
mov
or
aad
sbb
mov
daa
out
call
fistp
push
and
pop
fisttp
(bad)
in
test
sbb
mov
xchg
mov
pop
add
dec
cdq
outs
aad
lea
xor
imul
or
sub
lods
shl
xor
test
adc
ds
(bad)
fsubr
add
pop
dec
dec
mov
icebp
call
(bad)
loopne
inc
mov
push
lods
ret
inc
cmps
pop
lahf
dec
or
jns
mov
jmp
and
and
mov
rcl
test
je
push
or
jp
push
adc
xchg
iretw
and
test
loope
adc
cmp
add
push
popa
xchg
fs
(bad)
les
imul
in
aad
jmp
sbb
pop
test
sar
aaa
stos
nop
popf
mov
add
sbb
test
dec
addr16
mov
or
cs
mov
sbb
ud0
in
int
mov
pushw
or
outs
std
aad
adc
leave
lds
pop
cld
cmp
jne
xchg
sahf
ja
inc
jmp
das
dec
cmp
cmps
repnz
pop
in
shl
enter
movs
cmp
in
xor
enter
xchg
aam
clc
(bad)
fisubr
cmps
xchg
fiadd
ret
clc
xchg
cmp
(bad)
mov
pop
retf
mov
sbb
or
pop
mov
adc
in
stc
pop
cmp
test
xor
sbb
jb
inc
or
cmp
or
call
imul
in
adc
ror
and
and
xlat
push
inc
(bad)
add
call
push
mov
xor
popa
or
retf
adc
sbb
dec
mov
cmp
pop
xchg
cs
and
inc
inc
shr
in
sub
push
fisttp
jnp
jp
test
out
ret
mov
fbstp
out
in
add
shl
dec
gs
mov
out
cs
add
loop
jbe
cmp
dec
addr16
and
mov
push
stos
mov
sbb
ror
in
in
sbb
xchg
imul
xor
mov
in
sbb
je
lea
aad
in
and
mov
test
push
imul
lds
xor
cs
aad
retf
fild
cdq
mov
push
push
cmp
xchg
jmp
xchg
push
inc
mov
sti
int
mov
sahf
fwait
jnp
xor
leave
icebp
push
adc
fistp
or
inc
pop
fild
out
push
sbb
jbe
mov
scas
jns
dec
mov
add
test
popa
jge
out
movs
fs
cmp
outs
and
sahf
adc
in
mov
mov
rol
rcl
sub
adc
xor
jle
cwde
inc
fs
sbb
lahf
sbb
jl
call
sti
mov
cmp
jae
cmp
sub
mov
aam
pushf
push
pop
add
mov
je
sub
mov
jne
sahf
jns
jo
mov
mov
daa
mov
lds
movs
lods
les
popf
dec
push
cmp
(bad)
sbb
(bad)
jbe
call
idiv
jge
jp
ins
cmp
cmp
jns
hlt
xor
push
mov
fisttp
mov
hlt
ins
or
mov
dec
cmps
js
retf
jno
loop
jno
mov
xchg
push
inc
out
ja
(bad)
test
fs
xor
jg
out
aam
push
(bad)
fnstenv
jae
sbb
sub
retf
pop
xor
lds
test
cli
repnz
addr16
sbb
jmp
and
(bad)
iret
add
int
sub
mov
ret
mov
inc
xchg
(bad)
(bad)
push
in
imul
xor
and
inc
idiv
push
imul
jne
fwait
inc
out
inc
xchg
jae
inc
cmps
pop
outs
mov
pop
(bad)
sbb
cwde
pop
or
cmps
cmp
dec
push
or
mov
scas
dec
xor
cmc
mov
and
push
neg
(bad)
outs
(bad)
mov
inc
xor
les
pop
not
xchg
call
cdq
sbb
sahf
retf
xchg
xchg
push
aad
mov
hlt
rcl
xchg
xlat
mov
xor
mov
or
pop
les
inc
inc
sub
not
xor
pop
mov
push
adc
push
fisttp
arpl
xor
loope
jnp
ret
(bad)
test
arpl
sub
sub
stc
(bad)
aam
jns
dec
add
movsx
(bad)
jb
es
dec
inc
inc
lds
dec
jl
clc
mov
fisub
inc
test
lods
pop
leave
xchg
adc
mov
xor
gs
mov
rcl
jne
or
outs
jmp
hlt
add
pop
je
sub
enter
fild
mov
ins
test
and
xor
test
ins
mov
inc
jmp
pop
test
xchg
in
cld
add
cmps
out
sub
jl
mov
mov
dec
xor
jecxz
mov
mov
mov
loope
jle
pop
pusha
and
test
xor
push
lods
mov
mov
rcl
jmp
into
or
jnp
mov
fadd
aad
sub
mov
and
or
into
out
add
(bad)
(bad)
sub
iret
mov
jno
adc
inc
ss
add
push
jle
clc
stc
ins
(bad)
fiadd
pop
mov
mov
or
retf
mov
mov
ret
inc
movs
add
xlat
in
test
sub
push
enter
mov
xchg
lock
out
pop
pop
pushf
add
dec
jg
mov
cld
std
bound
stos
or
dec
add
push
cmc
call
mov
dec
pop
push
sub
and
popf
sbb
test
shr
popf
pop
fldz
(bad)
test
scas
shl
ret
jbe
add
lds
iret
pop
pop
add
ss
pusha
adc
imul
inc
pop
icebp
ror
inc
test
aam
test
inc
sub
cmps
sbb
adc
xor
scas
pop
mov
fs
ds
and
retf
fdivp
arpl
ja
test
lods
dec
data16
pop
and
pop
fistp
mov
or
dec
leave
push
psadbw
cmp
jns
pop
pusha
add
xchg
jg
clc
daa
mov
es
(bad)
push
ret
test
retf
inc
addr16
push
or
add
sub
pop
dec
test
pop
test
or
sub
sub
push
xchg
scas
ror
stos
test
xor
sub
das
cmp
rcl
sub
popf
dec
dec
xchg
lahf
xor
gs
ja
sub
adc
jl
cmps
ins
add
inc
addr16
in
test
call
iret
cmp
mov
ror
mov
add
scas
or
mov
push
dec
ins
and
xor
(bad)
stc
loop
rcl
xor
test
and
cwde
pop
bound
push
mov
dec
add
loope
inc
adc
push
inc
out
mov
es
fidivr
lahf
mov
cmp
aad
jmp
push
les
shr
out
ficomp
hlt
pop
(bad)
pop
in
mov
stos
xor
fbstp
mov
cmp
out
shr
(bad)
loope
iret
xor
aas
(bad)
jae
outs
lahf
outs
pop
pushf
xor
repnz
iret
mov
loope
cwde
sbb
sbb
xchg
xor
lods
sar
stos
inc
sbb
ret
scas
add
xor
scas
adc
inc
aad
pop
xchg
sub
cdq
mov
inc
xchg
or
fstp
ret
dec
loop
dec
adc
or
test
repz
sub
rcl
mov
sar
int3
ret
jmp
movs
clc
sbb
mov
sar
shl
mov
sbb
ficomp
push
js
add
add
js
adc
sbb
int
and
xchg
mov
or
or
mov
push
(bad)
dec
sti
jmp
out
push
mov
xlat
fld
xchg
and
ds
push
cmp
inc
pop
cmp
lods
(bad)
mov
lods
stos
int
shr
lock
jmp
sub
xor
cmp
inc
inc
pop
mov
jb
jl
jo
sbb
mov
xchg
mov
cmc
hlt
cmp
retf
or
pop
xchg
sbb
imul
xchg
jle
mov
xchg
add
fsub
jg
pop
mov
mov
ret
xchg
dec
or
dec
int
jmp
mov
inc
lods
mov
inc
lahf
jb
jnp
dec
sbb
inc
jae
xor
mov
(bad)
sbb
add
push
add
mov
jb
pushf
xchg
jmp
sbb
stc
sub
xchg
push
xchg
jecxz
mov
cmps
mov
jns
mov
pop
and
mov
rep
mov
dec
pop
lods
outs
lahf
or
xor
pop
jmp
sti
mov
shr
dec
lods
add
jbe
push
mov
cmps
leave
in
add
mov
sbb
fdiv
into
call
xor
sub
sbb
cdq
stc
pop
cmp
movs
into
lods
shl
and
mov
mov
lds
xacquire
mov
test
mov
pop
xchg
jns
sub
pop
les
pop
pop
arpl
mov
popf
cdq
loop
dec
repz
cmp
lea
stos
aad
sub
mov
cmp
xchg
dec
test
mov
cmp
shr
adc
fmul
and
arpl
mov
pop
data16
scas
neg
data16
repnz
gs
inc
in
gs
xor
retf
in
into
lods
shl
cwde
xchg
movs
ficom
int
jp
cmp
shr
scas
xchg
out
fwait
add
dec
and
and
(bad)
pop
jbe
and
cmp
cld
in
gs
(bad)
call
mov
shl
icebp
jp
mov
vunpcklps
out
int3
mov
ja
sub
aam
xchg
fs
push
lock
aam
addr16
mov
sbb
idiv
outs
pop
push
loope
sbb
cmp
jmp
neg
xor
jmp
and
add
inc
dec
add
jb
aas
hlt
push
adc
xor
adc
call
add
mov
inc
pop
fstp
adc
or
push
mov
xlat
hlt
call
inc
sub
sbb
cmp
mul
dec
mov
dec
retf
and
int3
cmp
out
repz
pop
das
xchg
add
rol
scas
outs
leave
mov
test
mov
pop
je
push
(bad)
int3
pop
mov
cdq
inc
repz
(bad)
imul
mov
xchg
das
dec
push
or
icebp
scas
lods
pop
jo
(bad)
sub
sbb
fdivr
and
sbb
into
sub
cmps
movs
xor
and
jns
pop
mov
dec
stos
imul
fst
cld
push
inc
fdiv
vpsubsw
(bad)
out
mov
bound
xor
inc
jne
and
outs
mov
adc
inc
jmp
lds
inc
mov
shl
and
push
xchg
jns
shl
in
xor
int
xor
sub
xchg
stos
xor
mov
idiv
sub
ret
or
push
sbb
jb
and
inc
test
sbb
ret
mov
push
adc
dec
mov
cmc
mov
sub
mov
aad
cmp
adc
stos
or
fs
dec
mov
fs
fs
movs
rcr
push
leave
ret
lods
inc
mov
test
jp
push
aam
dec
pop
popf
aas
ret
adc
cmp
fld
jmp
bound
jnp
pop
sbb
jg
dec
pop
push
sbb
mov
pop
jmp
sbb
test
pop
dec
inc
pop
push
out
mov
mov
xor
mov
mov
jg
jnp
and
mov
sar
adc
mov
loopne
pop
jmp
pop
popw
ja
mov
inc
mov
cdq
mov
shr
ret
jns
xchg
inc
out
dec
fnstenv
in
test
into
rol
xchg
pop
int3
xchg
mov
sar
out
pop
push
add
jp
or
jne
cdq
adc
or
ss
lds
inc
daa
repnz
lahf
pop
pop
push
dec
mov
stos
not
fwait
outs
sbb
gs
loope
out
and
and
jb
add
les
(bad)
or
aaa
xchg
add
jp
jb
add
or
sbb
test
ins
aad
cmp
jne
pusha
outs
es
int3
pop
clc
ins
sub
fwait
push
sbb
jg
mov
or
loopne
int3
mov
ja
sub
inc
je
test
loop
and
xchg
ret
hlt
mov
arpl
pop
cmp
push
cmp
sti
fnstcw
mov
mov
and
std
push
test
mov
jnp
sub
sub
mov
imul
js
lods
jl
in
jmp
rcr
cmp
ds
inc
cmps
xchg
dec
sbb
xor
push
cmp
mov
add
mov
dec
ficomp
xchg
dec
xchg
sti
aas
out
sbb
dec
or
and
sahf
sub
cmp
jbe
outs
iret
sar
mov
mov
cli
dec
jmp
cmp
lock
das
push
sub
mov
sbb
std
add
mov
push
icebp
and
neg
movs
out
in
inc
jp
and
or
and
cdq
dec
xchg
iret
hlt
or
jnp
pushf
pop
enter
mov
pop
sbb
aad
(bad)
dec
sbb
lods
adc
adc
adc
jmp
or
push
sti
add
push
mov
in
mov
sti
cmp
rol
ficom
in
sbb
jmp
imul
test
jmp
iret
xchg
jecxz
adc
lahf
bound
clc
rol
fwait
ja
jge
cmps
mov
imul
mov
jns
cmp
inc
mov
in
into
fiadd
cmp
or
repz
loope
icebp
jns
and
adc
in
pop
dec
sbb
mov
leave
lahf
sbb
les
cld
(bad)
(bad)
adc
movs
pop
mov
cmp
sar
sbb
jbe
inc
mov
pop
cwde
mov
out
jbe
shl
sar
xlat
adc
out
xlat
lods
push
mov
out
xchg
push
push
clc
or
pop
std
(bad)
mov
mov
pusha
and
cmps
add
enter
in
dec
dec
arpl
jns
dec
push
(bad)
ss
pop
push
outs
shl
mov
xchg
lods
retf
sbb
fdiv
mov
cmps
loop
pusha
mov
mov
xchg
enter
mov
jge
mov
adc
retf
cmps
ja
leave
mov
cmp
pop
fwait
cmp
and
addps
(bad)
adc
add
cmp
ficomp
xor
loop
jo
mov
test
nop
pop
addr16
idiv
imul
(bad)
test
dec
sub
dec
imul
stc
ret
fst
push
jmp
pop
(bad)
xor
or
test
cld
mov
push
xor
scas
nop
nop
jl
jo
jmp
pop
push
mov
dec
jne
lods
jno
arpl
pop
test
sub
and
gs
test
pop
out
xchg
inc
mov
ja
ret
in
mov
or
pop
cli
push
sbb
and
pop
rcl
addr16
popf
jl
ds
and
add
xor
push
pop
push
icebp
icebp
push
dec
or
add
sbb
loop
mov
mov
push
loope
xchg
jl
mov
push
xor
or
push
and
es
push
add
sub
repnz
out
repz
leave
xchg
xor
ins
das
aas
aaa
call
or
adc
(bad)
cmps
das
(bad)
cmps
sub
ja
xchg
test
(bad)
xchg
or
loop
lds
icebp
push
(bad)
or
lds
mov
les
and
and
fwait
outs
lods
add
hlt
mov
jg
sahf
xchg
jmp
rcr
and
cwde
or
and
adc
lds
mov
sbb
pushf
sbb
inc
jle
lock
mov
data16
xor
mov
cmp
push
sbb
scas
xchg
add
es
mov
out
sub
loop
jne
cld
jmp
xchg
shl
jmp
pusha
test
jbe
fcomip
xchg
and
xchg
push
mov
mov
xchg
cwde
jp
sbb
hlt
mov
sbb
pop
test
and
inc
movs
mov
mov
test
inc
pop
loope
cmc
inc
mov
call
pop
fcomp
fst
xchg
es
or
xchg
and
popw
cmp
sar
stos
xchg
pop
mov
jge
dec
sub
movs
adc
sub
jecxz
scas
cmps
outs
jmp
adc
add
loope
sub
xlat
cwde
pop
push
xor
ret
sbb
fwait
inc
cli
ror
loope
repz
cs
sbb
dec
xchg
popf
push
imul
aas
cmp
mov
icebp
and
pop
in
ins
sbb
mov
(bad)
cmp
lds
fwait
push
xor
ror
js
icebp
ins
or
pop
dec
mov
mov
mov
dec
dec
add
sbb
addr16
and
in
push
xlat
nop
pop
and
call
add
cmp
and
fld
jmp
arpl
sahf
xchg
xchg
mov
repz
cmp
cmps
xor
mov
mov
cmp
ins
adc
test
cli
movs
adc
hlt
push
push
inc
call
xor
inc
xchg
ret
sti
xor
fld
push
jmp
jno
fcomp
pop
pop
adc
das
push
xchg
and
fstp
mov
pop
push
jns
mov
in
shl
sub
adc
rol
out
shr
adc
daa
inc
mov
pop
ss
xchg
mov
(bad)
stc
mov
or
sbb
out
mov
stos
in
in
push
xor
push
push
call
fisttp
fld
mov
inc
inc
aam
out
inc
jnp
sbb
call
cmp
es
into
mov
movs
or
sbb
add
cmp
aas
cmp
xor
jmp
mov
retf
adc
cmps
sbb
outs
in
stos
xchg
(bad)
fsub
dec
(bad)
adc
enter
aad
scas
fidivr
out
push
mov
out
test
fistp
mov
out
sbb
jno
popa
inc
(bad)
dec
(bad)
push
and
jge
sbb
lahf
pop
inc
jae
jg
pop
xor
sub
in
xor
lock
and
and
stc
mov
call
scas
out
xor
repnz
and
in
push
jbe
call
lock
out
mov
mov
cs
(bad)
sub
push
aaa
scas
das
out
jl
adc
js
movs
scas
pop
or
mov
bound
outs
inc
mov
rol
sar
shl
mov
sub
and
aas
xchg
inc
arpl
ffree
push
in
loope
or
cmp
sbb
aas
fwait
add
mov
dec
xchg
les
addr16
cwde
jns
mov
or
add
push
xor
jecxz
push
cmp
bound
dec
fcomp
cli
repz
and
ins
or
imul
jnp
rcr
adc
ds
jl
push
int
hlt
adc
push
sub
mov
rcr
sti
lock
lahf
sbb
in
test
ins
jl
jecxz
mov
mov
jo
or
lock
cli
scas
mov
es
popf
call
out
add
xor
adc
lods
fmul
xor
pop
dec
sbb
inc
aaa
mov
pop
and
dec
out
jo
shl
int
outs
or
iret
scas
dec
sub
leave
jg
loopne
fs
dec
jge
xor
cli
and
adc
dec
ror
cs
dec
dec
pop
fwait
je
cwde
jg
div
cmps
dec
loopne
push
mov
mov
push
rdpmc
mov
int
ins
mov
std
stos
push
adc
popf
sbb
or
sbb
pop
and
adc
pop
(bad)
retf
pusha
adc
fs
mov
popf
or
clc
add
sti
pop
xor
mov
neg
pop
jbe
ins
ins
mov
xchg
xor
adc
mov
push
mov
jecxz
cmp
adc
sub
mov
push
icebp
cdq
arpl
add
call
jo
mov
outs
mov
pop
mov
cmps
inc
pop
or
cmps
adc
jne
xlat
jge
dec
sti
hlt
and
inc
pusha
mov
ret
jmp
retf
sub
lods
or
mov
outs
jo
jno
mov
clc
push
sahf
push
xor
stos
(bad)
hlt
sub
cmp
outs
shl
sub
pop
jmp
add
iret
or
cmps
repnz
push
adc
mov
pop
add
mov
outs
sbb
movs
test
sub
push
dec
cld
daa
xchg
inc
xchg
pop
mov
sti
int
mov
daa
(bad)
xor
xchg
stos
pop
push
test
and
push
and
pop
push
jge
xor
mov
outs
xchg
xor
cmp
adc
std
cmp
inc
xchg
and
cmp
sub
xlat
adc
push
push
mov
sub
in
cmp
out
cmc
int3
mov
and
in
mov
xor
dec
jns
dec
iret
jno
test
cwde
test
inc
(bad)
mov
std
adc
cmp
xchg
or
xchg
dec
cmp
pop
not
je
or
push
call
scas
push
(bad)
rcr
xor
ss
loope
ja
lds
ror
mov
mov
jmp
jle
test
push
es
pop
xor
loope
rol
repnz
mov
test
sub
sbb
cmps
adc
aam
xchg
mov
(bad)
fxam
and
(bad)
rcr
mov
push
xlat
out
mov
push
jp
into
clc
lods
push
push
(bad)
mov
int3
xchg
in
loop
in
add
ins
dec
sub
pop
pop
(bad)
out
adc
addr16
dec
ret
aaa
jb
fs
cmp
fisubr
loop
fstp
pop
inc
mov
es
scas
dec
xchg
jno
stos
xor
std
icebp
aad
xchg
jno
adc
scas
xchg
idiv
mov
iret
call
or
out
xchg
push
xor
js
xor
hlt
(bad)
jne
enter
cmc
idiv
push
mov
test
lahf
push
xor
aas
cmp
jl
cli
inc
pop
test
fnstcw
pop
in
inc
sti
and
mov
jecxz
fiadd
sbb
lods
cmp
pop
mov
mov
cld
jp
pop
ss
lods
cmp
retf
sti
sbb
and
and
mov
or
dec
das
shr
and
retf
dec
add
mov
je
push
and
sub
or
push
push
adc
push
hlt
sub
loopne
or
popa
jo
mov
mov
test
mov
in
dec
mov
imul
inc
je
mov
dec
std
mov
xchg
mov
mov
retf
popa
inc
cwde
(bad)
sub
inc
pop
pop
mov
mov
aam
xlat
nop
sub
push
sbb
not
sbb
jns
push
sbb
pop
movs
idiv
cld
and
fucomip
in
jb
xchg
test
data16
sbb
aaa
jbe
pop
xchg
clc
popa
mov
fxtract
or
mov
int3
sbb
or
xor
movhps
dec
into
adc
stc
call
pop
cmc
ins
inc
popf
jno
pop
mov
std
mov
cli
call
push
dec
adc
pop
sub
jno
cmp
lds
enter
sbb
out
mov
xlat
(bad)
out
xor
adc
push
loopne
inc
push
in
sbb
imul
jns
jb
jbe
les
sbb
pop
fldenv
loop
jb
outs
fmul
mov
cmp
data16
fbld
in
pusha
aas
jno
(bad)
inc
or
pop
mov
outs
xor
sub
inc
sbb
aaa
out
jp
cwde
push
iret
cwde
push
cmp
push
push
and
add
ror
dec
pop
add
add
jl
hlt
push
mov
movs
sbb
popf
aas
sbb
enter
cmp
sub
outs
fidiv
out
inc
jns
jge
imul
(bad)
mov
push
xchg
rcr
and
enter
enter
dec
outs
jno
fisubr
mov
dec
movs
jmp
jmp
adc
(bad)
fisttp
clc
adc
ror
outs
mov
xchg
dec
cmps
add
jge
mov
jle
fmul
jbe
xor
ja
sti
or
push
pop
inc
jle
imul
inc
ss
adc
popf
mov
pusha
dec
imul
and
cmps
push
or
ds
dec
jle
adc
xchg
pop
aam
lods
xchg
add
repz
test
fist
rol
xchg
in
(bad)
pop
nop
xor
and
data16
cdq
xor
loopne
rol
sbb
je
repnz
addr16
lea
xor
jae
xlat
xor
fimul
push
pusha
retf
int3
jbe
and
aam
mov
stos
pop
xchg
add
jbe
and
jge
inc
xchg
(bad)
cmc
lods
daa
loopne
stc
es
ficom
sub
lds
aas
pop
or
call
mov
loop
mov
(bad)
pop
and
ds
call
repnz
pop
dec
mov
cld
ror
cld
jge
stos
mov
add
jl
in
or
in
jle
mov
js
out
xor
adc
adc
dec
and
xchg
pop
out
loop
xchg
adc
int
cli
adc
mov
scas
and
leave
xor
fidivr
cmc
bound
icebp
test
ds
mov
jp
xor
pop
test
inc
add
jecxz
push
mov
xor
push
ins
dec
mov
das
test
mov
rsm
jno
ss
or
aaa
push
xchg
jno
ficomp
nop
add
int
iret
test
rcl
outs
fs
adc
arpl
xchg
push
fisubr
mov
ror
clc
dec
add
sbb
and
xlat
add
test
gs
aas
adc
mov
xchg
arpl
push
mov
(bad)
adc
outs
iret
pusha
push
nop
movntq
ins
call
push
mov
test
ja
mov
and
mov
dec
fnstenv
pushf
push
xor
outs
or
dec
stc
lahf
dec
into
pop
jmp
mov
mov
jno
mov
mov
push
dec
pop
stc
xchg
push
cmp
pop
adc
add
iret
not
add
lahf
test
push
push
inc
sub
mov
cmc
(bad)
cmp
xchg
add
jle
test
mov
pop
pusha
mov
jns
and
data16
xchg
mov
push
mov
int
add
push
or
retf
cld
lds
dec
in
int3
dec
push
push
outs
xchg
sbb
test
mov
data16
jl
js
sub
mov
jnp
mov
out
mov
ficomp
fisttp
scas
ja
sar
xor
cmp
mov
sub
ss
add
data16
cmp
test
xchg
dec
or
test
mov
cli
std
mov
in
jo
in
into
das
sub
outs
push
div
xor
pop
(bad)
in
lock
mov
call
sti
call
mov
test
lahf
mov
movs
scas
pop
scas
es
sbb
ror
leave
add
inc
je
cmp
sbb
lock
mov
repz
or
xchg
mov
bound
int3
push
xlat
mov
pusha
call
jp
jge
out
shl
(bad)
cmp
mov
jnp
cmp
sub
push
and
addr16
int
mov
dec
fcomp
inc
dec
and
aam
popa
aas
jg
mov
xor
mov
(bad)
data16
add
jae
ror
pop
ins
pop
repz
(bad)
pushf
jb
lahf
shr
jo
cdq
rcpps
mov
add
outs
xor
inc
or
jecxz
add
inc
push
call
mov
cmp
cmp
popf
cwde
mul
push
mov
outs
push
(bad)
push
leave
inc
and
inc
int
or
add
adc
enter
out
xor
lds
ds
in
icebp
push
pop
cdq
jb
cdq
(bad)
fiadd
ret
repnz
mov
fmul
mov
(bad)
pop
pop
mov
or
push
cmps
inc
mov
fxch
inc
cld
mov
daa
jb
pop
push
push
sub
int
cmp
test
outs
sbb
pop
push
iret
retf
and
clc
pop
sahf
sub
push
mov
mov
fs
cmc
jno
jge
or
sub
bndstx
push
inc
xor
jp
and
arpl
(bad)
rcl
mov
jns
push
ret
inc
xchg
push
scas
popf
out
(bad)
in
xchg
pop
icebp
push
jae
cmp
loop
cmps
jle
jmp
ja
(bad)
and
loopne
fwait
inc
sbb
jle
pop
and
xor
mov
and
push
outs
mov
inc
ror
out
jnp
stos
lea
in
retf
jp
cmp
push
xchg
push
fwait
cmp
ror
out
call
(bad)
jl
sub
cmp
jns
ss
inc
adc
out
xchg
sar
mov
mov
mov
iret
jae
inc
mov
iret
mov
rcl
out
pop
dec
mov
mov
push
mov
not
dec
mov
push
outs
mov
push
push
(bad)
push
jae
pop
test
arpl
sahf
adc
retf
push
out
loop
xor
adc
sub
sbb
xchg
loopne
outs
lods
lea
dec
mov
push
sbb
stc
mov
lods
call
mov
cmp
idiv
arpl
aam
test
loop
ret
jmp
sti
call
or
mov
fsub
mov
push
jo
test
gs
icebp
pop
(bad)
in
mov
adc
cli
aaa
mov
jae
or
mov
adc
out
lea
jbe
in
ret
xlat
or
ret
icebp
mov
fisttp
inc
push
out
dec
in
fist
add
add
das
push
neg
ds
sahf
jg
fild
jmp
add
push
mov
jns
and
pop
in
outs
lds
adc
in
add
stos
xchg
inc
mov
cmps
lods
mov
ficomp
(bad)
(bad)
aas
cmp
and
push
call
in
push
addr16
cmp
(bad)
fldcw
loope
jmp
sbb
stc
push
mov
sub
xor
fwait
(bad)
lea
add
push
enter
fcmovnbe
pop
aas
add
adc
pop
dec
and
push
mov
stos
xchg
mov
dec
mov
in
sbb
jmp
mov
rcr
stos
mov
lock
aad
cdq
ss
mov
inc
enter
rol
inc
call
push
add
push
mov
push
int3
stos
lahf
sti
lods
inc
mov
lock
push
dec
aaa
or
sahf
pop
jb
sar
out
mov
into
xor
ins
rol
mov
xchg
add
jecxz
and
stc
dec
lods
inc
loop
jbe
pop
shl
dec
mov
jle
je
in
ret
cmp
jno
mov
jbe
lds
sub
xchg
xlat
fwait
cwde
pop
jmp
jge
jmp
pop
inc
fild
addr16
dec
jns
std
(bad)
out
ret
dec
ret
neg
enter
push
mov
test
es
xor
mov
lea
out
cmp
xor
add
mov
popf
fs
ret
fadd
shl
ins
or
repz
xchg
sub
jb
push
scas
fiadd
nop
std
pop
das
(bad)
fistp
and
jns
cmp
ret
xchg
xor
mov
cwde
and
ret
jne
mov
mov
outs
sahf
inc
enter
daa
dec
pop
push
out
jb
add
cdq
rol
jo
push
fcomp
cmp
shl
rol
(bad)
mov
jge
mov
push
inc
xchg
xchg
mov
mov
xchg
addr16
rcr
pop
adc
mov
adc
rcl
scas
out
ins
dec
sub
adc
and
jl
out
rcr
sub
pop
and
std
stos
test
hlt
cwde
jae
fwait
dec
push
cmps
xchg
inc
lds
test
dec
into
arpl
fs
and
leave
dec
cmp
aaa
stos
mov
sub
(bad)
cmp
push
movs
clc
mov
pushf
sub
movs
add
cmp
add
dec
shl
fwait
xchg
sbb
ds
int3
sub
dec
pop
cdq
adc
or
dec
or
nop
add
or
pop
aad
ret
mov
and
into
push
loope
push
or
adc
or
add
xor
mov
xor
jmp
sbb
or
mov
xchg
cmp
movs
gs
adc
xchg
sub
jb
lea
add
lahf
div
shr
loopne
rcr
mov
test
int3
test
inc
xchg
sub
pop
popf
xor
out
mov
cmp
and
and
shl
pop
into
or
lods
inc
pop
mov
repnz
pop
or
xor
arpl
push
add
mov
int3
mov
in
hlt
test
jl
adc
xor
clc
mov
fidiv
xor
ds
pop
movs
sub
cmp
xor
adc
cmp
dec
cmps
(bad)
gs
in
je
sbb
ins
add
jbe
mov
push
or
movs
mov
lds
stos
jg
ins
adc
arpl
lock
test
int3
add
push
(bad)
pop
addr16
xor
pop
sbb
dec
sbb
jno
test
fmul
jle
adc
dec
movs
packuswb
aad
sub
fsub
cdq
jmp
xor
jmp
jl
or
push
pop
ins
in
pop
(bad)
int
push
cmp
or
adc
push
pop
mov
sub
add
or
(bad)
cmp
aaa
xchg
cmps
pop
mov
mov
inc
retf
mov
xor
mov
cmc
mov
inc
cmc
xchg
repz
test
or
loopne
xchg
scas
push
inc
shl
push
push
mov
(bad)
push
leave
cmps
adc
dec
mov
fwait
in
pop
xor
jl
out
fisttp
sbb
inc
jmp
dec
fstp
fs
dec
fmul
xor
fwait
jbe
xchg
sbb
xor
sub
pop
inc
mov
dec
fimul
pop
fwait
jns
out
sub
(bad)
lds
inc
mov
cmps
mov
mov
loopne
sti
mul
fcomp
xchg
fsubr
gs
or
mov
idiv
push
repz
dec
inc
inc
sub
lds
mov
mov
mov
jp
dec
jge
out
mov
fidiv
push
and
call
mov
fsubr
stos
fdivr
icebp
jae
rcl
and
jb
aad
(bad)
xchg
popa
push
fidivr
cld
adc
and
jp
xor
cld
pop
dec
push
(bad)
out
jg
adc
iret
mov
jae
push
xchg
add
xor
push
push
fadd
pop
adc
dec
rol
jl
inc
sbb
xor
sbb
mov
data16
out
dec
pop
jmp
test
fisubr
push
add
inc
sub
xor
mov
aas
(bad)
dec
cli
fwait
jb
cmps
(bad)
xchg
mov
sub
into
dec
fwait
xor
xchg
xchg
dec
mov
pop
add
push
mov
mov
push
and
cwde
test
(bad)
jo
adc
jns
mov
fnsave
or
(bad)
hlt
mov
push
push
movs
push
setbe
mov
sbb
retf
dec
je
push
test
or
jbe
aas
retf
sbb
jbe
dec
int
pop
push
bound
retf
in
rcl
and
loope
mov
dec
lea
mov
aas
xor
mov
jae
xchg
in
loopne
lods
fwait
dec
or
fist
or
and
xchg
(bad)
mov
add
cmp
dec
or
jmp
imul
mov
repnz
sub
jmp
retf
out
scas
pop
mov
and
mov
dec
repnz
pop
out
outs
xor
and
or
mov
adc
dec
mov
jno
fwait
sbb
fcom
sbb
or
mov
dec
inc
sub
pop
outs
ss
adc
ror
ins
(bad)
adc
clc
adc
(bad)
xor
xchg
inc
arpl
arpl
sbb
fwait
inc
fisttp
fsubr
cmps
xor
push
jle
lahf
xor
or
scas
mov
xchg
jg
repnz
jg
and
iret
or
dec
pop
push
cmp
add
call
outs
popa
or
add
or
sub
repnz
fdivr
mov
xor
pop
mov
into
leave
sti
pop
out
popf
(bad)
out
outs
cld
jo
into
icebp
fidivr
test
nop
mov
movs
outs
in
stos
js
scas
xchg
stos
xor
cli
aas
call
fmul
movs
pop
icebp
jo
call
lods
lock
jge
nop
inc
(bad)
sti
inc
js
fistp
and
mov
xchg
scas
inc
jg
(bad)
cmp
shl
mov
js
or
sbb
jg
scas
cmp
stos
and
sub
adc
xor
(bad)
xor
jmp
sub
pop
shr
mov
fmul
jne
pop
adc
add
pop
jle
addr16
repnz
jmp
pushf
mov
push
xchg
or
loope
ins
mov
cmps
pop
in
mov
pop
mov
inc
xchg
retf
mov
movntq
out
mov
sub
shl
jecxz
push
jp
mov
ds
mov
push
mov
and
fisttp
inc
pop
fs
cdq
cmp
int3
cmps
xchg
jnp
imul
cmp
adc
fcom
imul
xchg
dec
push
outs
int3
mov
retf
std
cmps
mov
and
fcomi
xor
adc
sub
sbb
cmp
dec
gs
je
(bad)
adc
shr
outs
es
sbb
cmp
sbb
rol
sub
mov
sub
scas
outs
mov
stos
retf
or
hlt
xchg
mov
sbb
jmp
xchg
mov
sub
xchg
pop
xor
fnstenv
inc
cmps
cmc
mov
and
(bad)
cmp
les
push
cmp
fadd
xchg
cmps
movs
shl
outs
dec
pop
pop
std
loope
test
movs
add
cdq
cli
mov
mov
sbb
add
mov
inc
mov
bound
jnp
push
(bad)
mov
inc
pop
ret
std
adc
push
add
mov
sub
xlat
xor
out
mov
inc
leave
and
(bad)
mov
cmps
mov
jp
jle
jne
and
ins
push
(bad)
or
popf
sbb
mov
gs
loopne
ficom
nop
je
aas
shl
adc
(bad)
test
cmc
xchg
loopne
dec
cmps
mov
sub
fcomi
pop
mov
push
pop
out
into
rcl
pop
inc
dec
fwait
retf
dec
gs
mov
sahf
lahf
push
push
mov
enter
ins
push
cmp
push
dec
rcl
(bad)
lock
cmp
mov
pop
fidiv
inc
ja
cld
jae
jbe
(bad)
push
cdq
jae
xchg
jno
xlat
sar
int
in
je
xor
jp
mov
push
mov
icebp
push
xor
lea
xchg
test
cmc
bswap
cmps
jnp
mov
mov
xor
out
hlt
push
pop
ss
shl
inc
dec
(bad)
fimul
mov
ficomp
mov
ss
jmp
ds
mov
xchg
jecxz
inc
test
adc
adc
out
call
xor
inc
ja
mov
ins
loopne
(bad)
stc
out
or
(bad)
mov
ins
and
mov
push
stos
in
ins
outs
pop
mov
mov
dec
repnz
push
push
push
xor
jg
mov
in
jecxz
(bad)
xchg
mov
pop
fnstcw
hlt
jmp
fwait
mov
jns
xchg
mov
test
xchg
leave
fdivr
xchg
push
inc
jae
outs
cwde
repnz
xchg
je
sbb
push
popf
movs
cmp
std
cmp
cmp
add
cmps
mov
push
ds
xchg
xor
sbb
push
cmp
hlt
or
mov
push
push
retf
test
xor
leave
iret
test
lds
iret
pop
mov
in
jmp
pop
push
test
cmp
add
je
(bad)
pop
mov
fsub
fwait
(bad)
aaa
pop
call
rol
cld
and
neg
push
inc
daa
and
jne
mov
cdq
rol
and
inc
cwde
push
fcmovne
iret
js
xchg
scas
shl
retf
fstp
cmp
mov
idiv
push
adc
sbb
mov
push
call
or
xor
rcr
sub
xor
jmp
shl
(bad)
je
and
mov
or
xchg
mov
jnp
sti
sub
in
xor
mov
leave
gs
mov
popf
dec
cmps
in
stc
xchg
stos
movs
jns
(bad)
and
shl
aad
dec
popa
pop
push
cwde
xchg
test
call
fidivr
pop
fcmovu
pop
sti
cmps
neg
hlt
cwde
scas
inc
mov
cmp
(bad)
movs
cld
mov
das
fs
add
inc
(bad)
imul
repnz
xor
dec
sbb
mov
test
out
add
mov
add
shl
popf
out
inc
mov
push
lods
imul
mov
add
mov
call
repnz
call
js
mov
dec
cmp
add
pop
cmc
sub
jl
or
mov
adc
mov
jle
or
(bad)
adc
pop
fst
retf
or
mov
stc
cmp
mov
fstp
js
call
leave
sbb
loop
mov
fcmovbe
xchg
mov
lock
jo
inc
outs
xor
movs
adc
test
jg
inc
cmp
dec
adc
les
in
pop
pop
lods
mov
popf
mov
(bad)
mov
popf
add
pushf
mov
cmps
sahf
call
add
mov
push
mov
add
ins
jge
mov
sbb
mov
xor
push
sar
or
jge
xchg
push
(bad)
popa
xchg
cmp
bound
cwde
jnp
in
xchg
icebp
test
mov
push
aas
movs
repnz
push
mov
pusha
jmp
test
lods
sti
lds
dec
cmp
jnp
(bad)
ss
lods
jg
ror
push
cmp
cmp
sbb
sbb
push
push
sub
cmps
pop
(bad)
cld
and
pop
das
out
gs
push
inc
cli
popf
in
cmps
jmp
ret
mov
adc
mov
mov
loope
cmp
pusha
iret
adc
cmp
cld
neg
fwait
push
add
xchg
and
adc
stos
mov
fistp
pusha
pop
fs
aaa
sub
sub
fcomp
loop
addr16
and
add
mov
pusha
aaa
ret
or
in
jns
test
push
pop
dec
pop
gs
add
inc
stos
push
xchg
mov
mul
mov
pusha
push
xchg
les
xor
add
js
cmp
in
adc
or
pop
iret
cs
or
dec
cmp
dec
cwde
lock
fisttp
(bad)
jmp
(bad)
dec
imul
(bad)
pop
sub
loope
inc
push
mov
dec
dec
adc
and
or
cmps
inc
jle
push
fidiv
adc
dec
repz
mov
jg
call
dec
pop
rcr
sub
inc
pop
dec
push
popa
mov
mov
outs
rcl
test
push
test
into
and
stc
lods
dec
shr
stc
adc
mov
not
push
push
xor
and
adc
addr16
(bad)
push
int
sahf
pop
outs
pop
sub
pop
test
loope
mov
mov
mov
cwde
(bad)
xor
mov
pop
xor
push
sti
leave
push
not
xchg
repnz
cmp
shl
pushf
enter
adc
das
pop
retf
cmp
add
fist
sub
cmps
xor
cmp
sbb
pop
inc
(bad)
lods
call
cmps
cmp
and
mov
es
sub
(bad)
inc
add
movs
xchg
js
push
mov
or
lods
(bad)
ror
int
call
lods
mov
and
and
leave
sub
cld
cwde
mov
nop
adc
dec
pushf
sbb
fidivr
leave
fisttp
cmps
dec
rcr
rcr
icebp
jp
daa
mov
and
mov
int
cld
daa
arpl
mov
dec
imul
test
ror
jg
push
(bad)
adc
xchg
hlt
cli
jae
dec
aam
ret
(bad)
fwait
cmp
loop
push
mov
retf
adc
add
ffreep
add
jbe
call
retf
int3
stos
arpl
inc
scas
and
neg
push
imul
rcl
stc
cmp
sbb
mov
xchg
cwde
inc
and
inc
inc
out
mov
xchg
(bad)
fld
or
dec
mov
hlt
test
xlat
cmp
xchg
and
(bad)
xchg
sub
icebp
xor
clc
jmp
cmps
mov
mov
add
retf
aaa
hlt
pop
outs
aam
jmp
fimul
jle
add
ficomp
add
stc
aas
(bad)
jb
test
xor
rcl
push
inc
inc
jp
pop
dec
(bad)
xchg
add
push
sbb
xchg
push
sub
push
arpl
(bad)
lahf
outs
mov
add
push
loope
movs
in
pop
cmp
stos
ficomp
jnp
push
xchg
mov
addr16
push
in
into
(bad)
push
mov
lock
xchg
std
xchg
lea
fbld
(bad)
ja
pop
outs
std
ds
das
(bad)
jo
test
out
cdq
cmp
ror
inc
jb
inc
dec
ins
dec
mov
out
aas
and
mov
pop
imul
mov
loopne
in
sub
loop
pop
retf
xor
cmp
push
push
jecxz
mov
aas
sar
loope
mov
and
jae
mul
inc
jne
in
ss
jne
jbe
pop
sub
lods
or
inc
jmp
adc
fnop
sub
ds
sahf
in
xlat
test
xor
and
mov
pop
and
loope
or
leave
mov
jnp
dec
retf
popa
cs
pop
inc
add
adc
retf
js
mov
mov
sub
mov
icebp
mov
push
(bad)
(bad)
fist
jns
dec
fnstenv
push
mov
push
xor
ins
or
mov
fs
stos
shl
aad
xor
xor
mov
sub
sti
fdivr
cli
xor
jb
cmc
dec
not
cdq
mov
call
cld
cmps
enter
mov
and
xchg
xor
mov
jno
jmp
xchg
test
inc
push
fcomp
mov
gs
and
sbb
xchg
in
jmp
stos
add
lods
xchg
fwait
outs
loop
les
mov
fld
mov
or
ins
icebp
mov
and
fnstcw
and
push
fisttp
pop
adc
xchg
popa
jbe
cmp
data16
jle
add
(bad)
in
(bad)
adc
ins
and
add
jae
add
lahf
pop
ja
sub
lods
les
ror
popf
jl
adc
dec
inc
inc
ins
mov
push
iret
or
cwde
in
(bad)
call
inc
sub
jg
movs
ja
or
mov
mov
dec
jae
retf
ret
or
shl
popa
mov
dec
push
jmp
xor
cmc
xchg
xchg
andnps
(bad)
pusha
or
and
sub
sub
mov
jb
jb
mov
into
and
xor
dec
jno
inc
test
sub
outs
add
or
lock
daa
xchg
jae
pop
push
js
in
dec
sbb
not
call
ror
aam
sub
rol
pop
dec
jo
cmp
imul
or
mov
or
lahf
mov
gs
pop
(bad)
pushf
and
cs
jb
arpl
movs
cmps
aas
jno
push
gs
mov
out
xlat
xor
mov
mov
jmp
sti
mul
inc
push
sub
jl
daa
cmps
ja
xor
push
cmp
xlat
mov
add
repz
dec
xchg
mov
(bad)
clc
mov
push
in
lahf
pusha
mov
aad
fdiv
pop
mov
or
cmp
sub
rol
mov
ja
imul
ret
mov
mov
repz
test
addr16
(bad)
cld
dec
push
jne
pop
icebp
fcomp
xlat
arpl
(bad)
or
(bad)
outs
mov
inc
mov
outs
cs
adc
inc
ss
push
add
pop
out
mov
mov
push
mov
xor
leave
stc
js
cmps
mov
fs
mov
out
addr16
(bad)
(bad)
ds
dec
jl
xor
fcom
outs
jns
jo
jno
sbb
pop
jno
dec
mov
scas
xor
adc
outs
imul
call
(bad)
cmp
(bad)
jle
jge
in
cmp
inc
sbb
sub
aas
test
mov
imul
adc
imul
mov
inc
and
iret
sub
xor
xor
cmp
nop
fnsave
add
add
cwde
xchg
mov
mov
cmp
inc
adc
nop
clc
(bad)
mov
adc
adc
mov
cwde
jl
jb
lods
push
movs
movs
out
adc
in
add
je
into
out
push
lahf
and
out
nop
fsub
dec
shl
lods
test
test
or
sbb
test
aaa
loop
fstp
xor
popa
push
movs
mov
xchg
fs
loope
sub
push
or
cmp
xchg
xchg
fisttp
and
sbb
sub
inc
inc
jno
inc
aas
jle
fsubr
or
pop
enter
test
shr
push
fisub
jae
lds
fwait
add
lahf
lds
cwde
mov
dec
adc
mov
fwait
xchg
inc
inc
cli
out
rcr
fs
jae
xor
cmc
pop
shl
(bad)
mov
add
cmps
mov
sbb
(bad)
pushf
cli
and
mov
add
aam
mov
ds
sub
push
outs
(bad)
(bad)
fnstenv
out
push
in
neg
and
leave
dec
push
jge
mov
cmp
int3
sbb
or
jle
jnp
xchg
lods
sbb
sbb
xchg
xchg
jb
and
sub
loop
bound
mov
pop
out
mov
mov
sahf
push
jno
mov
rol
xchg
fild
inc
dec
icebp
sub
xchg
imul
mov
mov
mov
mov
arpl
lahf
push
lahf
outs
add
pop
inc
xor
add
sbb
adc
aam
mov
sbb
jnp
bound
out
xor
nop
or
inc
sbb
loop
imul
inc
stos
xchg
scas
mov
push
xor
cld
adc
gs
jmp
cmps
ret
inc
pop
fdivr
dec
jmp
leave
adc
xchg
sub
aam
lods
dec
or
es
pusha
arpl
fwait
cmps
add
adc
mov
or
outs
(bad)
jp
jmp
mov
(bad)
mov
push
shl
adc
xchg
and
cdq
mov
jno
cld
push
dec
mov
out
retf
sub
out
dec
pop
sbb
popf
cmp
iret
xor
(bad)
gs
lock
xor
cmp
jmp
in
mov
and
mov
push
aam
js
dec
call
outs
arpl
dec
outs
push
sti
cwde
pop
mov
int3
mov
lock
ror
push
xor
pop
int
iret
loop
xchg
dec
cmp
cmps
popa
jecxz
and
pop
mov
sub
cmps
mov
(bad)
fidiv
lods
sti
bnd
rcr
(bad)
xor
(bad)
shl
sub
adc
in
lahf
push
cmp
sahf
jae
pop
aad
push
and
(bad)
es
sub
not
push
js
fwait
mov
inc
or
mov
xchg
mov
sbb
xchg
inc
nop
(bad)
mov
arpl
xor
jg
cmc
pop
xchg
retf
adc
mov
loope
iret
stos
inc
loopne
pusha
or
mov
pop
inc
mov
xor
dec
leave
arpl
xchg
ins
jp
pop
and
jo
call
(bad)
xor
loop
(bad)
xor
mov
stos
mov
lock
out
(bad)
jno
cmc
repz
cmp
lahf
mov
dec
cwde
adc
or
cld
xor
mov
test
or
ins
div
nop
rcl
or
xchg
sbb
int3
jns
in
sti
inc
mov
fist
mov
mov
jge
push
sub
push
jge
jecxz
lods
xchg
xchg
(bad)
mov
cmps
dec
dec
or
sar
es
fisubr
(bad)
jbe
out
out
add
xor
sub
jno
call
jno
les
(bad)
cdq
outs
jbe
add
call
cs
mov
mov
imul
mov
pop
mov
mov
mov
or
sub
and
je
sbb
lea
add
in
jge
inc
sahf
xor
data16
adc
sbb
addr16
stc
lahf
aam
(bad)
call
pop
addr16
cmps
jge
xchg
das
xchg
mov
xchg
inc
jle
jle
fcmovb
std
add
sub
lods
xlat
sub
out
mov
repz
or
ins
(bad)
out
fsubr
stos
mov
cmp
jae
push
xor
mov
xchg
mov
add
sti
cmc
cwde
cdq
retf
add
mov
mov
push
xorps
push
(bad)
arpl
(bad)
pop
sub
leave
cmp
loopne
mov
sbb
xor
jg
loop
mov
mov
add
mul
mov
xor
sub
shl
add
inc
(bad)
lea
pop
xor
sahf
add
adc
scas
fcom
and
mov
jb
cld
pop
adc
test
in
in
sub
pop
in
or
adc
fmul
pop
pop
leave
pop
in
cdq
hlt
das
in
ins
pop
in
push
inc
sbb
je
mov
cmp
pop
shr
les
(bad)
cmp
jge
push
pop
xchg
xchg
jmp
sub
mov
pop
xor
(bad)
cmp
mov
out
in
cdq
jp
add
jb
mov
retf
and
test
imul
cmp
mov
mul
xor
xchg
stos
test
rcl
push
xchg
sub
jae
aad
mov
mov
iret
sbb
xchg
jecxz
cmp
or
cwde
cmp
(bad)
lods
and
dec
repnz
in
adc
ss
jle
adc
mov
mov
loopne
div
sub
addr16
popf
cli
cmps
dec
aad
or
xor
mov
aad
dec
sub
sbb
mov
cmp
adc
pop
in
pushf
(bad)
ret
imul
push
sub
shl
xor
aaa
add
adc
and
ror
mov
jbe
dec
jge
cmp
add
movs
dec
xor
dec
icebp
out
jb
ror
lock
inc
daa
(bad)
pop
shr
rcl
mov
addr16
push
inc
ins
cwde
dec
pop
jae
sbb
or
lods
xor
int3
add
stc
inc
jl
sbb
dec
fsub
je
fdivr
sub
or
dec
dec
in
adc
xor
and
jnp
and
fistp
xchg
sar
dec
ficom
mov
js
push
add
mov
int3
dec
sar
pop
cmp
push
push
xchg
cs
mov
outs
mul
or
hlt
ds
out
inc
movs
mov
ins
jge
sbb
test
adc
int
and
in
mov
dec
nop
call
mov
sub
das
xor
and
inc
stos
lds
and
fimul
mov
sahf
clc
sbb
test
fsub
mov
aas
mov
dec
lods
mov
pushf
fdivr
pop
shr
push
enter
pop
xor
push
jge
out
push
int3
cs
(bad)
push
repnz
mov
lods
ret
rcl
sar
dec
jecxz
hlt
push
jp
aas
dec
and
cmp
jo
xor
ins
jmp
sub
jns
and
xor
lods
loope
int3
dec
add
jg
mov
sahf
adc
jbe
cmp
loop
loope
mov
mov
or
rol
std
cdq
pop
mov
dec
loope
dec
cdq
mov
cmp
xlat
test
pusha
sbb
push
repnz
jle
xor
loope
adc
jb
test
pusha
fdivr
in
fldcw
inc
aaa
jmp
(bad)
ins
lahf
adc
jno
inc
adc
adc
cmp
xor
ds
cmps
jne
fmul
xor
xchg
mov
into
push
jge
sbb
ja
outs
out
or
adc
fs
ficom
retf
out
inc
(bad)
and
test
fisub
cmp
out
rcr
shl
out
in
callw
sbb
fs
into
push
icebp
(bad)
aas
jle
xchg
lods
push
(bad)
aam
pop
or
jmp
pop
xlat
sub
loopne
fild
pop
mov
fnstcw
call
mov
pusha
(bad)
xchg
test
ror
icebp
stc
sbb
pushf
add
mov
jmp
cmp
popa
mov
test
adc
pusha
cwde
pop
movs
pop
mov
call
in
dec
or
fcomp
or
sub
xor
cmp
cs
cmp
adc
push
pushf
xlat
jo
das
lods
cmps
push
sub
clc
fs
not
dec
cmp
ins
dec
mov
ss
jne
dec
int3
ror
jo
int3
dec
int
cmp
mov
cmp
sbb
and
inc
enter
push
dec
test
jl
inc
cwde
movzx
pop
repz
lahf
add
push
sbb
sbb
mov
pop
mov
in
imul
mov
inc
aaa
jp
xor
lods
fcmovnu
adc
mov
es
das
dec
sbb
inc
inc
xor
aas
sar
imul
and
ret
mov
dec
cli
add
mov
repnz
retf
pop
adc
movs
cmc
cdq
adc
inc
jbe
fcom
aam
data16
xchg
xchg
mov
jmp
pop
fwait
cli
imul
mov
sbb
cmp
div
adc
and
xchg
pop
into
dec
mov
cwde
(bad)
mov
mov
cmp
out
mov
dec
mov
fstp
neg
inc
inc
pop
jl
nop
xlat
cmp
mov
mov
imul
cs
mov
fnsave
jp
bound
mov
add
inc
arpl
mov
aad
xchg
loopne
cdq
enter
push
rcl
pop
dec
push
jg
mov
or
popf
shr
pop
dec
mov
repz
aas
popf
stos
clc
test
fidivr
push
pop
push
dec
(bad)
or
aad
test
xchg
jle
and
enter
push
idiv
in
(bad)
cmc
push
xchg
enter
mov
loop
ins
fnstsw
push
add
adc
pop
imul
dec
enter
mov
dec
and
fld
out
jb
mov
(bad)
adc
ror
mov
test
cdq
icebp
lahf
(bad)
jb
in
jo
add
sub
or
popa
retf
daa
call
add
xchg
jb
push
adc
movs
xor
add
mov
pop
adc
ins
jl
jmp
jne
add
ret
pop
mov
pusha
push
mov
push
lods
xlat
movs
mov
and
mov
loope
pop
test
xchg
mov
repz
scas
dec
retf
and
arpl
fisttp
je
cmc
mov
movs
adc
dec
push
jmp
sbb
xor
sti
cmp
aad
in
int
xor
pop
xchg
and
sbb
cmc
mov
pop
shr
lods
out
inc
push
aad
mov
popa
inc
mov
sbb
sbb
mov
in
and
pop
nop
jmp
mov
or
mov
push
push
or
es
dec
dec
mov
int3
xor
mov
test
js
les
sbb
cs
sbb
add
das
mov
cmps
jno
adc
mov
xor
das
scas
inc
dec
jne
ins
or
jle
ret
(bad)
mov
mov
dec
pop
out
mov
(bad)
jns
xchg
dec
ja
fcom
push
std
mov
xor
add
cwde
mov
aaa
mov
ss
fldenvw
mov
js
outs
dec
std
fnstcw
adc
outs
nop
jbe
push
mov
fbstp
out
out
xor
mov
(bad)
pop
mov
shl
jge
mov
mov
cli
mov
inc
xlat
aas
jmp
sbb
mov
ret
(bad)
cmp
dec
xchg
cmc
xchg
or
loopne
xchg
mov
leave
cmp
test
outs
ds
ins
add
das
out
in
mov
(bad)
dec
stos
push
test
retf
ret
rol
add
rcl
adc
sub
into
retf
fidivr
std
addr16
outs
push
xchg
mov
adc
popa
or
sub
(bad)
lods
inc
fwait
adc
mov
test
mov
aas
inc
add
ins
mov
pop
dec
sti
out
inc
jnp
jae
jb
gs
mov
xchg
mov
stos
cmp
std
fcom
enter
int
mov
push
push
jmp
add
mov
sub
push
ds
and
sahf
(bad)
sub
xor
fild
repz
bound
push
and
or
push
cmps
out
ins
push
lahf
cmps
sahf
mov
jnp
(bad)
fsubr
cmp
xchg
xor
out
jecxz
add
sbb
and
or
xchg
add
sbb
loope
test
or
popa
daa
xor
pop
inc
sub
aam
mov
in
inc
mov
stc
lea
lods
imul
pop
mov
cdq
mov
inc
fnstsw
out
loopne
ret
or
and
push
hlt
sahf
idiv
xchg
xor
push
jns
jmp
test
repnz
test
loop
jle
push
or
fisub
xor
inc
jbe
ret
into
je
xor
jmp
js
sbb
repnz
xchg
out
fmul
icebp
pushf
fidiv
push
test
cmps
cmp
or
cmp
sbb
(bad)
enter
inc
scas
mov
nop
repz
mov
out
mov
scas
dec
leave
dec
ret
fcomp
aad
xor
dec
pop
mov
(bad)
push
jno
call
mov
(bad)
test
inc
jg
sbb
ds
icebp
dec
inc
add
bnd
jo
in
xor
(bad)
dec
push
xlat
sub
in
or
adc
scas
and
mov
pop
xlat
xchg
popf
pusha
ja
lahf
pop
fldenv
and
in
sub
push
add
xor
adc
adc
xor
push
movs
and
pop
stos
or
fild
xor
test
stc
cld
pop
add
lods
add
mov
push
sahf
fistp
inc
sbb
rcl
sub
repz
cmp
rcr
out
add
hlt
sbb
sub
repnz
shr
ins
bound
nop
xchg
(bad)
adc
sub
pop
out
xor
and
pop
nop
(bad)
je
call
and
mov
mov
ja
pop
pop
mov
fcomp
xor
or
ret
inc
lahf
bound
push
fst
ror
adc
push
adc
mov
xor
dec
mov
pop
pop
mov
mov
cmps
ficom
loope
mov
xor
mov
sbb
sahf
mov
or
or
stos
or
enter
dec
sub
dec
inc
int
pushf
es
pop
mov
and
jnp
cdq
jp
xchg
jge
xchg
retf
test
in
dec
cmp
retf
addr16
in
cdq
in
enter
and
sub
jne
pop
sub
outs
mov
ins
in
(bad)
es
dec
ins
ins
ret
stc
jb
dec
pop
xor
(bad)
shl
pop
sti
jno
js
xlat
adc
bound
xchg
aad
movs
fist
cs
lea
imul
and
dec
data16
push
jne
je
inc
jecxz
xchg
jno
retf
enter
popf
sbb
mov
fdiv
cmp
pop
mov
repnz
sub
xchg
sti
inc
fld
dec
pop
jge
in
push
iret
add
out
xor
sub
loopne
fdiv
fbld
pop
xchg
outs
fcom
xor
loopne
sub
ss
sub
mov
sub
jg
dec
stos
ins
push
push
fimul
dec
cmc
inc
push
mov
jb
jno
stos
cmc
in
adc
xchg
std
shr
je
or
pusha
pop
jno
retf
pushf
and
xor
loop
shl
and
jmp
out
adc
dec
pop
jmp
mov
mov
push
and
jnp
xchg
push
jne
lds
pop
inc
ret
sub
in
push
add
popa
scas
inc
push
lea
push
add
in
jp
mov
loope
cli
xor
popa
or
mov
bswap
ins
jo
cli
lea
retf
mov
xchg
or
dec
cli
or
inc
lds
pop
out
mov
out
jp
adc
jmp
mov
movs
jae
or
xchg
sbb
jg
jbe
mov
jae
aad
add
repnz
fiadd
xchg
loopne
cmp
dec
jae
nop
push
pop
lahf
jg
cld
pop
ret
jmp
(bad)
adc
xchg
dec
fisub
jge
(bad)
pop
adc
stc
pop
scas
rcr
sub
sub
jp
movs
retf
lds
fst
xchg
ss
cmp
add
rcl
lods
loopne
or
fadd
xor
push
mov
mov
fnstenv
xchg
mov
fdiv
aad
xchg
imul
add
mov
mov
jnp
dec
mov
inc
std
cmp
retf
mov
arpl
lea
js
mov
mov
pop
fisub
push
jne
arpl
dec
dec
xor
cmp
rol
adc
mov
xchg
shl
cld
mov
mov
cdq
cmp
adc
shr
jge
(bad)
outs
sbb
mov
ins
cld
sahf
push
arpl
retf
add
mov
sahf
jmp
mov
xchg
call
out
aas
add
mov
cmp
hlt
xchg
clc
mov
aam
call
pop
or
push
mov
loope
cli
adc
inc
mov
inc
dec
shl
mov
int3
jle
ror
mov
out
or
pop
nop
mov
in
adc
sub
mov
jl
lahf
loopne
mov
mov
ret
mov
sub
outs
call
les
adc
ret
aaa
jmp
test
lahf
push
shl
cmp
daa
pop
fs
sbb
js
cmp
popa
push
xor
out
cmp
push
shl
clc
jnp
pop
mov
dec
xchg
iret
jns
popa
and
imul
jns
icebp
ins
mov
inc
ret
xchg
cmc
xchg
adc
into
ret
movs
or
cmps
mov
fadd
outs
or
(bad)
stos
cmc
das
and
aaa
xor
repnz
inc
enter
ret
in
mov
or
and
mov
ja
and
jne
test
pop
push
jmp
popf
(bad)
aaa
ja
out
popf
in
pop
inc
pop
clc
sar
sbb
mov
div
jbe
push
dec
scas
ret
test
(bad)
dec
arpl
cmc
adc
xor
add
test
adc
xor
inc
jae
cmp
add
dec
and
and
sub
cli
outs
inc
cmp
sub
arpl
push
mul
mov
and
mov
test
popa
xor
fst
das
out
xchg
cmp
dec
cmp
adc
clc
sub
call
pushf
pop
popf
movs
add
loop
les
ins
adc
ds
fistp
iret
mov
sbb
push
shl
das
retf
cwde
and
cli
adc
loope
or
jb
retf
ja
xchg
sub
dec
sub
and
fcom
cmp
mov
int
lock
jl
push
jle
mov
dec
stos
cmp
stos
xor
adc
loop
mov
(bad)
js
fdiv
mov
xor
mov
fwait
cmc
sti
popa
call
push
add
pop
scas
les
adc
xchg
aas
or
popf
into
enter
cmp
adc
inc
or
push
outs
inc
scas
add
jno
fimul
repz
jns
call
test
pop
mov
mov
pop
cwde
pusha
ficomp
mov
dec
(bad)
mov
mov
dec
mov
inc
sbb
or
aaa
jmp
std
mov
mov
popa
fdiv
arpl
add
rol
lahf
add
jg
cmc
jp
dec
or
(bad)
(bad)
outs
or
sub
cmp
xchg
mov
xor
adc
sub
scas
in
sbb
fst
in
jbe
inc
jp
fdiv
jmp
dec
lock
retf
mov
mov
and
xchg
(bad)
sub
(bad)
icebp
in
jno
popa
cmovs
pop
fbstp
push
sub
out
pop
lock
push
inc
or
pop
shl
cdq
ins
fimul
leave
shl
pop
adc
xchg
push
mov
pmulhw
fsub
inc
jmp
outs
aas
cld
sahf
sub
add
(bad)
out
pop
inc
cmp
lods
in
xor
test
addr16
push
push
pop
sbb
sbb
jns
test
push
cmp
jl
(bad)
mov
pop
das
xchg
inc
cmp
pop
adc
lods
mov
push
xor
sub
addr16
xchg
mov
cmp
mov
lds
xchg
daa
cmp
test
ss
test
fistp
lods
aaa
in
pop
mov
sub
xlat
jo
(bad)
sub
inc
push
aad
or
mov
cmp
(bad)
sbb
pushf
sub
aad
push
jbe
push
mov
daa
lds
mov
add
leave
sub
rcl
jns
out
in
rcr
pop
pop
call
add
push
mov
push
dec
fld
pop
jb
ds
scas
stc
add
push
in
or
xchg
cmp
xor
nop
sub
lds
or
mov
or
imul
leave
sar
adc
nop
pop
lods
mov
push
push
fsubp
outs
into
or
dec
enter
jge
fs
sub
rol
rcl
jb
mov
or
sub
shr
aam
pop
rcl
pop
lods
jbe
test
mov
xlat
mov
cmc
add
lea
adc
je
cmc
cmp
fdiv
aam
jns
push
pop
mov
and
je
push
mov
push
or
loopne
push
out
push
and
mov
jns
pop
add
jae
jecxz
(bad)
cli
sti
mov
push
and
sub
rol
ret
xchg
sub
jmp
gs
inc
gs
dec
mov
xor
jne
jne
ficom
mov
sbb
sbb
ins
cld
dec
and
test
std
pop
jns
mov
push
paddd
lea
add
pushf
dec
ret
enter
out
sbb
mov
gs
icebp
mov
xchg
mov
sub
dec
pop
aas
sbb
not
leave
lock
sbb
icebp
xor
xchg
mov
xchg
bound
xchg
pop
retf
and
xor
xlat
fwait
shl
adc
sub
fsubp
jmp
push
pop
shr
xchg
push
in
pop
in
jge
rcr
adc
sub
sub
repz
inc
pop
aaa
in
pushf
jbe
pop
sbb
data16
sub
test
adc
cmp
ret
jae
or
mov
add
push
lods
mov
outs
iret
daa
mov
popf
jnp
ins
sub
push
pop
xchg
je
cmp
pop
pop
xchg
or
mov
or
imul
add
push
lods
sub
add
call
sbb
xchg
pop
and
jo
jo
mov
dec
fsub
add
in
push
xchg
repnz
add
inc
int3
or
sar
xchg
retf
icebp
fsubr
aam
sub
jg
pop
jae
pop
mov
jno
pop
pop
enter
push
and
iret
push
jle
les
pop
adc
lea
push
cs
dec
shr
push
or
cmp
inc
jl
and
pop
lock
shr
ret
jno
inc
pop
int3
xor
sub
mov
cmp
shl
push
sub
test
add
pop
int
pop
cmps
add
ud2
leave
adc
fwait
jno
sbb
mov
(bad)
mov
cmove
xor
mov
nop
cmp
imul
mov
imul
stc
jne
movs
xor
mov
fidiv
xchg
mov
jnp
sbb
ret
cmp
push
or
xchg
mov
add
sub
mov
sub
fcomp
ret
stc
mov
sahf
push
sbb
push
mov
push
or
loopne
cmp
out
popa
push
dec
sbb
icebp
scas
inc
adc
push
pop
jno
or
cmp
fcomip
stc
cmps
or
push
mov
sti
lock
push
movs
bound
add
fcomp
adc
cld
cmp
mul
pusha
jl
sub
ins
mov
popa
aad
add
sub
and
sub
mov
jecxz
(bad)
push
cmp
sti
daa
bound
inc
retf
div
adc
inc
jmpw
scas
aas
xchg
pop
xchg
inc
cmp
xchg
mov
int
iret
and
mov
xchg
aam
mov
mov
sub
int
cdq
mov
push
xor
jle
lods
pop
add
imul
pop
addr16
js
sar
sbb
lahf
jl
adc
test
jno
add
pop
and
xchg
ins
loop
retf
dec
xlat
sub
shl
jge
jmp
xchg
adc
push
xor
les
pcmpgtb
xchg
jmp
call
push
ss
push
and
ins
fsubr
out
outs
int
add
push
fidivr
mov
je
hlt
retf
inc
ds
and
mov
in
push
xor
js
(bad)
aad
cli
cs
sbb
fild
and
mov
fld
cmps
mov
aad
test
cmp
ja
sub
mov
dec
into
shl
or
jb
cmp
add
inc
push
inc
(bad)
movs
ss
add
mov
daa
scas
push
dec
push
pop
enter
enter
shl
ret
cld
mov
xchg
nop
sbb
pop
pop
sub
dec
and
popa
mov
push
leave
imul
cli
jp
aaa
shl
jbe
cmps
add
xchg
or
jp
jmp
imul
shl
(bad)
and
jecxz
aam
dec
and
scas
lds
das
mov
xchg
out
scas
jns
fwait
sub
jmp
dec
dec
jp
fld
xor
shl
and
mov
sub
loop
push
mov
jge
rcl
jmp
cld
jmp
addr16
in
sbb
cli
out
fadd
std
(bad)
and
call
sbb
sahf
or
daa
xchg
inc
mov
movs
dec
outs
outs
xchg
dec
mov
cmp
sub
push
sbb
ja
pop
hlt
loopne
pop
sub
or
pusha
cmp
push
mov
stc
mov
aaa
sub
inc
data16
mov
fist
pop
pop
das
jmp
mov
loopne
aam
sar
mov
jle
mov
xchg
(bad)
xor
call
add
sbb
nop
shl
adc
dec
inc
xor
in
mov
push
pop
pop
outs
lds
or
push
inc
mov
xchg
mov
sub
dec
in
sahf
push
xchg
mov
call
cmps
(bad)
mov
mov
shr
dec
mov
ss
mov
(bad)
call
outs
(bad)
and
iret
sub
xor
cdq
push
sar
mov
inc
repz
push
jae
rol
sti
sbb
mov
mov
das
push
into
(bad)
push
repnz
and
icebp
dec
cmps
jb
pop
and
sbb
mov
int3
mov
cli
xchg
jl
adc
call
inc
jge
fmul
fsub
test
clc
adc
fs
mov
xor
ss
push
or
sti
ins
cwde
enter
(bad)
repnz
loop
sar
call
icebp
push
mov
xlat
adc
adc
in
repz
dec
jns
(bad)
adc
sub
ficom
in
sar
adc
pop
mov
imul
xchg
adc
push
pop
int3
fistp
mov
dec
shr
out
add
cs
scas
ja
sub
ret
add
add
fsubr
retf
addr16
mov
ja
lds
(bad)
stos
in
je
dec
loope
or
shl
in
cmp
xchg
mov
or
pop
and
pushf
popa
les
imul
xchg
dec
dec
cmp
ficomp
int3
and
adc
inc
xchg
sub
mov
les
sub
shl
outs
xor
push
sub
inc
adc
(bad)
jns
mov
xor
pusha
cmp
fwait
push
popa
dec
(bad)
jmp
dec
cdq
jns
jecxz
into
data16
cmp
jne
jns
mov
add
jg
xor
add
pusha
popf
cmp
fsub
sbb
mov
mov
sbb
lods
push
sbb
call
int
call
test
jl
adc
lock
jmp
sub
mov
out
fldenv
into
jns
shl
imul
test
enter
pop
xchg
test
push
stos
dec
adc
mov
pop
mov
loope
pushf
ja
xlat
and
push
test
stos
mov
xchg
mov
mov
mov
xor
fisubr
adc
sub
lods
gs
out
add
push
or
sub
pop
pop
add
popa
push
stos
or
xor
aas
outs
add
and
aaa
add
xor
mov
and
adc
enter
pop
xor
ficomp
popf
imul
add
push
rol
call
cmc
cmp
shr
int3
push
sub
sbb
dec
and
rcl
mov
push
(bad)
xchg
sar
fcom
push
rcl
inc
cmp
fsub
xchg
icebp
cdq
push
or
mov
dec
inc
dec
jne
gs
sub
add
or
xchg
test
shl
xchg
stos
(bad)
pop
jge
and
jmp
xor
iret
imul
jmp
call
pop
cli
iret
int3
aaa
enter
push
idiv
scas
add
dec
test
dec
mov
stos
daa
sbb
sub
in
sbb
repnz
(bad)
(bad)
neg
jl
adc
fstp
cld
mov
push
adc
inc
inc
and
std
idiv
sti
pushf
mov
outs
int3
in
cwde
add
pop
fcom
(bad)
in
fiadd
push
dec
sbb
mov
repz
ins
pop
adc
mov
xor
add
outs
call
lods
or
xor
mov
call
addr16
ja
cmp
push
std
pop
arpl
mov
icebp
or
les
dec
cwde
jecxz
mov
shr
scas
ss
xchg
cdq
mov
inc
or
outs
pop
push
leave
ins
add
sbb
or
pop
(bad)
loop
bound
iretw
fdivrp
dec
jmp
jle
and
fdiv
shr
bound
jb
add
jne
xchg
test
std
xor
jne
fsubr
mov
dec
aam
xchg
movs
icebp
pop
in
pop
lea
fstp
mov
pop
lds
out
pop
mov
xchg
sbb
ret
sub
push
lods
rcl
xor
fwait
pop
cmp
fsubr
das
cmc
int3
dec
outs
pop
mov
aam
add
pop
lds
jecxz
cmp
fs
int3
lods
cwde
cmp
xchg
test
lea
xchg
dec
fild
aaa
push
or
fcomp
mov
scas
xchg
repz
push
std
test
push
into
push
addr16
scas
loopne
jge
jns
into
out
jmp
loop
mov
push
cmp
test
out
pop
arpl
mov
push
fnsave
retf
or
add
jmp
test
inc
sbb
ret
test
dec
cmp
outs
div
xor
push
shl
fs
and
addr16
and
adc
xchg
mov
and
fs
out
or
cmp
adc
mov
push
inc
mov
fiadd
push
xchg
repz
push
gs
mov
sub
sti
dec
pop
adc
retf
sub
pop
inc
inc
cmp
int
or
mov
or
pop
dec
mov
ds
inc
sbb
aam
xchg
mov
xor
fdivr
pushf
das
inc
sbb
out
in
and
sub
(bad)
ja
mov
push
shl
mov
jge
jp
loop
xchg
in
cmp
imul
cmp
push
js
jb
in
jae
addr16
ror
push
(bad)
cs
adc
push
in
jmp
and
dec
push
xchg
pop
cwde
mov
aaa
lahf
cs
or
mov
xchg
fnstcw
sbb
fdivp
or
mov
leave
stc
xor
push
mov
mov
inc
ins
add
inc
add
or
out
adc
pop
pop
mov
in
mov
aas
int
dec
sbb
jle
out
repnz
outs
adc
sbb
ja
dec
ss
push
out
inc
pop
in
xor
mov
fld
jb
push
or
outs
xor
fst
(bad)
(bad)
lods
(bad)
adc
sub
jne
pushf
sub
push
pop
mov
(bad)
fldcw
hlt
clc
dec
test
cmp
mov
in
pusha
sub
lahf
xchg
xchg
dec
cwde
stc
fidiv
ffreep
mov
dec
xchg
adc
jg
lods
sar
int3
mov
add
push
imul
fwait
inc
call
push
mov
cmp
xor
cld
xchg
sub
repz
das
in
out
push
and
and
shr
add
push
bound
mov
es
dec
loop
nop
jnp
dec
xor
stos
pop
dec
push
mov
pop
mov
and
pop
or
retf
or
add
sahf
stos
into
dec
jnp
in
or
les
mov
lock
adc
sbb
mov
dec
xchg
in
sahf
pop
add
stos
(bad)
ja
fwait
xchg
adc
xor
stos
mov
adc
movs
jo
add
(bad)
fisttp
int
stc
ficom
jg
xor
mov
and
xor
push
sbb
jle
jae
int
lds
jns
or
xor
mov
cld
(bad)
pop
push
mov
jmp
cs
clc
push
loop
pushf
add
xor
cmc
scas
or
push
arpl
jno
sti
mov
jmp
gs
movs
xchg
retf
cld
mov
jne
pop
push
in
or
add
adc
pop
js
cmp
adc
add
mov
aaa
imul
xchg
pop
arpl
fdiv
and
pop
pop
ret
sub
jns
push
ret
mov
cli
(bad)
sub
cmp
pop
lahf
dec
scas
inc
fs
outs
mov
call
mov
mov
pop
icebp
(bad)
jmp
call
sub
jo
leave
xlat
sub
(bad)
mov
jmp
adc
wrmsr
cmc
sbb
call
js
jae
stos
pop
aad
into
shl
sar
cmp
fcom
inc
arpl
hlt
nop
pop
or
nop
add
sbb
jge
cmps
in
mov
push
add
lods
loop
loopne
fld
adc
ror
mov
je
mov
xor
lock
jnp
fsub
xor
sar
repz
sbb
dec
stc
jnp
js
arpl
pop
inc
xor
fsubr
ret
mul
(bad)
push
int3
or
xor
es
xchg
add
addr16
mov
push
(bad)
cwde
inc
int
and
jle
out
mov
or
shl
sbb
mov
(bad)
mov
fmul
out
sbb
out
lods
inc
fcmove
icebp
mov
lea
imul
clc
out
test
push
repz
in
mov
pop
fnstenv
gs
xor
xchg
fwait
in
and
cmps
imul
aam
sub
cwde
lock
pop
sbb
add
push
out
or
mov
out
or
shl
pop
sbb
retf
mov
fisubr
dec
pusha
mov
push
sbb
mov
mov
inc
bound
mov
ror
movs
xor
fwait
addr16
imul
dec
mov
mov
sbb
lds
rcl
inc
mov
xchg
sub
push
push
and
sbb
jno
test
cmp
jle
push
inc
loopne
rol
inc
arpl
lea
mov
shl
scas
cmps
inc
push
jmp
je
and
(bad)
mov
mov
cmp
adc
sahf
daa
dec
jge
ds
push
add
push
leave
cli
pop
ret
jnp
push
(bad)
push
xchg
cmp
mov
iret
lods
ja
(bad)
cmp
iret
std
dec
test
(bad)
and
repz
mov
movs
cmp
popf
sar
mov
add
clc
add
aam
xchg
lds
pusha
bound
sub
push
ins
sbb
fdivrp
add
cwde
cdq
dec
cmp
movs
xor
(bad)
dec
mov
das
(bad)
jmp
sbb
lahf
stos
xchg
loope
mov
stos
pop
xchg
ins
and
int
mov
inc
(bad)
imul
in
scas
mov
cmps
jb
(bad)
adc
xor
jp
lock
jecxz
push
or
inc
das
mov
mov
loope
out
push
push
cmp
xor
mov
mov
sbb
mov
fwait
(bad)
xor
rcl
cmp
in
ja
stc
iret
fld
arpl
xchg
xchg
stc
js
lahf
fmul
stos
ins
jl
adc
das
stos
(bad)
mov
mov
xchg
ficomp
xchg
pop
repnz
adc
push
push
fldcw
repnz
jmp
nop
leave
popf
mov
aam
jle
jge
mov
int3
and
ds
(bad)
fs
xor
xlat
out
je
jb
adc
into
stc
or
inc
bound
js
(bad)
rcr
cmp
bound
loop
xchg
jbe
jb
daa
je
imul
test
adc
mov
push
mov
popf
in
push
jmp
pop
xor
fild
scas
cmp
leave
xchg
into
int
and
jae
and
push
out
clc
hlt
(bad)
pop
add
cli
push
test
xchg
inc
push
add
xor
mov
or
mov
dec
bnd
jp
mov
mov
or
jmp
or
sti
in
fwait
data16
adc
push
cmc
(bad)
xor
sub
out
sbb
mov
cmp
aam
xchg
ss
and
mov
mov
add
add
jne
js
mov
in
imul
lds
push
outs
fist
data16
cwde
sbb
aas
xchg
es
call
fdiv
(bad)
js
sub
sbb
jg
movs
mov
nop
stos
pop
xchg
ret
pop
xchg
jo
je
loop
addr16
jnp
cmc
xor
xor
shl
nop
test
clc
in
push
std
cmps
cmc
loopne
xchg
les
enter
(bad)
rcr
stc
and
mov
test
jo
psllq
and
(bad)
(bad)
sahf
outs
push
in
outs
idiv
daa
sbb
dec
jbe
sahf
mov
icebp
mov
cmps
dec
fwait
dec
fsub
std
sub
jne
adc
call
jle
lods
cmps
and
or
pop
sub
mov
push
pop
pop
fwait
xchg
xor
pop
jae
mov
push
ret
shr
cdq
lahf
jle
cwde
mov
fiadd
ud0
adc
sti
movs
aas
fild
pop
jo
mov
xchg
mov
pop
out
das
mov
js
xchg
in
pop
cli
push
inc
cmp
jns
dec
and
jecxz
jbe
pop
push
sbb
xchg
sbb
repnz
push
sub
jae
ins
or
and
inc
addr16
loopne
jne
int
es
not
and
inc
ss
or
xchg
dec
push
pushf
je
cmc
inc
repz
jnp
punpckhdq
or
call
push
adc
and
inc
push
mov
imul
cdq
lods
nop
into
or
sbb
xchg
mov
cmp
and
stc
pusha
sbb
jge
sbb
sub
mov
sbb
dec
sar
lds
hlt
sub
inc
loop
movs
cmp
or
daa
and
mov
push
out
pop
dec
and
pusha
fst
repz
cmp
inc
add
mov
icebp
sub
sbb
xchg
and
cs
dec
sbb
stos
mov
dec
jb
das
retf
inc
in
addr16
adc
lea
data16
jae
nop
xor
mov
out
aad
sub
jge
ins
push
mov
imul
jecxz
inc
daa
mov
pop
jnp
sbb
jecxz
pop
and
add
sbb
add
cmp
test
jno
or
popa
add
push
rcr
ins
push
lea
rcl
neg
pop
stos
push
xor
das
dec
pop
mov
inc
adc
cmp
pop
inc
add
add
xlat
mov
shl
enter
or
and
not
ins
fistp
push
adc
(bad)
cmp
lods
daa
push
in
inc
cmp
sbb
retf
add
xor
jp
sahf
in
rol
stc
mov
sbb
in
adc
mov
mov
mov
pushf
test
mov
xchg
sahf
push
clc
loope
xor
xor
out
lods
imul
cmp
paddsb
push
sub
add
jmp
mov
sbb
out
sbb
pushf
mov
jns
and
pusha
out
sub
and
mov
inc
pop
adc
xchg
lock
mov
(bad)
mov
inc
pop
out
and
inc
ret
xchg
mov
stos
stos
jmp
xchg
cli
add
(bad)
adc
jmp
mov
xchg
cli
xchg
(bad)
fstp
iret
jbe
ror
inc
inc
sub
jae
pop
push
cmp
add
outs
and
add
sub
fcmovb
imul
fs
mov
sub
fdivp
sub
ds
clc
and
dec
je
and
shr
mov
in
ret
stos
popa
fisttp
jo
int
mov
std
jno
or
xchg
idiv
pop
mov
mov
cmp
push
loop
jle
add
sub
inc
sti
(bad)
bound
les
inc
jecxz
shl
fmul
iret
in
stos
int
rol
xor
or
mov
bswap
pop
xlat
sbb
cmp
fimul
jns
xchg
mov
inc
xchg
cmp
shl
xchg
scas
fwait
xor
mov
jae
shl
cld
jnp
mov
adc
cmc
jo
jne
jo
xlat
out
add
lods
fst
or
push
(bad)
movs
(bad)
mov
push
gs
into
ins
(bad)
push
xchg
iret
cli
sbb
test
sti
sub
pop
fsub
fwait
xchg
push
das
jo
into
retf
rcl
and
sub
jle
neg
les
enter
mov
xchg
sub
sub
(bad)
(bad)
movs
cld
pop
mov
pop
xor
jle
push
or
out
xor
nop
outs
sbb
xor
ficom
into
retf
sub
mov
jne
dec
cmps
sbb
retf
pop
dec
call
(bad)
dec
jl
stc
xor
dec
xor
cmp
jne
or
fdivrp
mov
imul
push
stos
mov
test
test
jbe
mov
cmp
or
aam
cdq
xchg
(bad)
dec
inc
dec
out
pop
shl
test
xchg
xchg
mov
call
leave
sub
ss
iret
jne
push
shr
xchg
in
inc
(bad)
sbb
mov
(bad)
jb
nop
mov
add
pop
inc
lods
inc
jp
lahf
sbb
mov
cmp
mov
and
cmp
fdivr
inc
cwde
das
pop
shr
cmp
(bad)
mov
xchg
sbb
xchg
sbb
jae
rcl
pushf
jbe
ficomp
cmp
les
jle
nop
pop
movs
or
pusha
sbb
add
pop
dec
push
fsubr
imul
adc
mov
gs
imul
or
pusha
and
fadd
retf
jecxz
scas
sbb
test
mov
inc
push
ins
or
dec
xlat
loop
imul
ds
cmp
cmps
jbe
jle
nop
std
jp
fs
mov
push
pop
sub
dec
jmp
sbb
jmp
mov
bound
lock
add
push
or
repz
add
mov
or
loop
push
adc
jp
ds
cmp
scas
cs
adc
mov
and
mov
pop
cmp
add
dec
and
in
sbb
cmps
fdiv
rol
into
jnp
lea
push
sub
ret
jae
bound
or
adc
push
aaa
or
clc
ret
mov
pusha
cmp
bound
sbb
and
test
popf
lock
inc
addr16
stos
lea
or
imul
pop
pop
cmp
fadd
leave
fnsave
mov
xchg
xor
pop
jb
out
cmc
xor
sub
fwait
xor
in
into
cli
cmp
add
pop
lds
mov
pop
std
add
xor
ja
sbb
sbb
mov
out
xchg
fwait
push
dec
cmc
sub
sbb
sbb
jno
sbb
call
inc
outs
sub
adc
add
call
out
loope
inc
lahf
lods
pop
push
lods
cdq
xchg
mov
inc
or
fdiv
je
xchg
adc
les
call
mov
mov
imul
outs
les
mov
sbb
sbb
dec
shr
jle
adc
mov
jns
or
pop
ficom
xchg
and
mov
int
jg
adc
jge
cmp
inc
and
mov
mov
sub
cmps
mov
or
add
and
cwde
bnd
jne
test
pop
mov
arpl
cli
xor
icebp
test
push
loopne
mov
pushf
push
sub
sbb
adc
cmp
cmps
es
push
rcr
scas
or
mov
lea
sub
into
xchg
(bad)
pop
push
jnp
sbb
cwde
shl
and
(bad)
mov
aad
cdq
or
stos
bound
imul
lods
dec
jg
aad
outs
les
add
and
jle
loope
jno
adc
test
test
mov
adc
jp
adc
fdiv
data16
ss
sbb
dec
ja
add
shl
int3
sti
xor
mov
xchg
sar
adc
loope
push
or
test
inc
data16
aad
xchg
adc
ja
sub
hlt
stos
pop
sbb
fild
scas
mov
cmp
pushf
jmp
stos
mov
int3
test
ja
dec
into
dec
nop
lock
(bad)
fisubr
cmp
je
mov
(bad)
out
pop
and
lahf
xchg
lods
push
imul
pop
adc
std
movs
leave
ret
inc
div
shr
mov
inc
in
jle
test
push
xchg
setne
jmp
popf
aad
inc
call
xchg
xor
lods
ja
aad
dec
adc
ins
push
aad
jmp
in
cmpps
inc
xchg
rol
or
dec
add
mov
push
pop
jl
shr
jb
jmp
xchg
xchg
ss
iret
and
fst
push
cdq
jmp
jecxz
inc
(bad)
sub
fdivr
jb
mov
add
cdq
sub
xchg
jns
jae
stc
mov
(bad)
sbb
mov
mov
ror
xchg
jle
mov
mov
test
or
lahf
test
inc
mov
enter
lods
ins
movs
sbb
xor
sub
push
hlt
outs
jno
ss
pop
mov
mov
mov
pop
sti
out
std
push
loope
mov
jnp
cmp
js
test
mov
fucomip
sub
in
scas
pop
mov
jbe
and
xchg
adc
test
cld
pop
and
sub
inc
js
sub
inc
xor
daa
push
scas
cmp
xchg
cmps
mov
mov
rol
push
mov
shl
or
push
cmps
test
inc
and
clc
pop
xchg
or
nop
lea
mov
lods
(bad)
xchg
int
movs
call
jns
fld
pop
aaa
popa
dec
mov
cs
push
mov
add
int3
call
inc
popa
and
sub
xchg
jb
sbb
adc
stos
cmp
jb
movs
lods
cmp
jecxz
mov
sti
fnstsw
and
pop
push
adc
adc
pusha
mov
inc
pushf
push
cs
mov
into
xchg
or
xor
jmp
dec
out
pop
pop
scas
outs
es
dec
jnp
xor
mov
jp
inc
jge
mov
pop
repnz
dec
jae
popa
cwde
jae
inc
sbb
mov
in
and
xor
mov
aam
mov
or
test
add
repnz
pop
nop
or
cmovno
cmps
pop
ret
mov
push
sbb
fstp
(bad)
and
push
inc
hlt
jnp
mov
jmp
mov
test
add
mov
mov
(bad)
mov
inc
xlat
stos
and
das
mov
cmp
mov
loopne
xchg
inc
imul
and
cmc
mov
mov
lods
pushf
or
pushf
cmp
cmp
cmc
xchg
in
push
pusha
mov
push
mov
int
into
mov
push
mov
out
jae
sub
and
rcl
out
push
cmovb
into
mov
mov
push
mov
jge
leave
jae
(bad)
jmp
mov
(bad)
cmps
repz
mov
rcr
pop
jecxz
sub
xchg
inc
(bad)
dec
adc
jl
mov
xchg
or
jnp
mov
inc
push
mov
push
popa
xor
add
xchg
push
and
pop
dec
add
gs
mov
clc
push
pop
test
sub
addr16
test
iret
jb
fadd
sub
pop
and
or
sbb
(bad)
test
mov
out
ret
push
mov
pop
sub
adc
push
pop
imul
and
pushf
fcom
daa
ret
pop
add
(bad)
icebp
jl
rcl
dec
dec
lock
push
and
imul
inc
lods
mov
xor
xor
mov
inc
cmp
jo
push
push
shr
add
mov
not
mov
rol
dec
mov
xchg
cwde
lods
xor
lds
mov
jno
jp
xchg
mul
cmp
cmps
or
js
jp
xchg
loope
gs
out
inc
jo
mov
iret
popf
sbb
xor
ret
mov
aad
or
jp
jmp
inc
ret
loop
jnp
pop
adc
nop
inc
out
add
push
cmc
es
cs
outs
repz
hlt
adc
test
inc
mov
add
push
shl
add
pop
jae
or
js
mov
add
mov
lds
or
push
iret
dec
and
clc
out
sbb
in
jne
xor
add
out
and
(bad)
aas
adc
popa
scas
push
mov
xchg
mov
or
(bad)
inc
loope
call
pusha
out
int3
dec
or
mov
out
mov
int
out
or
push
mov
inc
pop
hlt
in
pop
movs
retf
(bad)
and
dec
jno
shl
inc
mov
(bad)
dec
xchg
sahf
stc
neg
ror
xor
repz
popa
xchg
fisub
xor
add
dec
xor
orps
mov
pop
bound
rcl
push
cwde
cdq
jmp
mov
pushf
sub
lahf
imul
add
or
sti
mov
xor
les
out
and
mov
jae
dec
dec
call
mov
and
popa
call
jp
push
sbb
sub
jmp
sti
mov
jl
or
sahf
dec
push
xchg
dec
or
bound
fcom
repz
cmc
push
stc
pop
loop
in
retf
stos
cmps
les
jnp
sbb
xchg
adc
scas
aad
push
retf
mov
test
ss
pop
stos
xchg
xchg
bound
mov
or
ror
ret
and
mov
or
mov
adc
popa
jmp
(bad)
xor
aaa
inc
dec
and
inc
add
cmp
fwait
bnd
(bad)
es
pop
fisub
add
(bad)
cmp
call
mov
pusha
adc
and
pop
add
shl
mov
(bad)
movs
mov
enter
inc
sub
repnz
in
cmovp
xor
xor
adc
and
lds
bsr
add
xor
sub
and
adc
data16
(bad)
dec
sub
jnp
dec
mov
jecxz
and
pop
(bad)
and
je
mov
xor
les
cmp
pop
pop
rol
lahf
(bad)
and
fistp
clc
enter
push
aad
add
mov
ficomp
scas
xor
adc
add
ins
add
mov
je
pop
inc
div
mov
movs
fwait
sub
outs
adc
rcr
enter
into
adc
cdq
xor
loop
dec
bound
mov
push
div
std
out
jg
sbb
mov
or
dec
addr16
test
pop
arpl
retf
dec
addr16
cli
or
xchg
or
movs
test
or
je
rcl
dec
in
adc
int
push
sbb
mov
inc
jo
repnz
arpl
shl
popf
stc
sub
outs
add
das
out
in
lds
pop
mov
mov
in
cmp
inc
push
shr
dec
lock
cmp
es
cld
adc
int3
iret
mov
(bad)
push
out
cmps
pop
aad
xchg
add
or
leave
cmps
sahf
mov
push
adc
lahf
enter
and
adc
shr
mov
fdivp
retf
call
pop
loopne
pop
sbb
iret
xchg
imul
out
add
mov
pop
(bad)
ror
xchg
and
ins
jns
ret
inc
imul
jno
inc
mov
iret
cmp
stos
inc
add
add
mov
pop
mov
es
aas
jno
inc
pop
mov
inc
jmp
(bad)
lds
jle
sbb
xor
or
xchg
jle
stos
mov
arpl
push
and
and
adc
in
pop
xor
push
test
xchg
popf
dec
loope
push
push
sahf
lods
sub
jp
fldenv
push
and
in
adc
dec
scas
jno
and
mov
sahf
and
mov
ja
idiv
mov
cmps
ret
mov
xor
or
push
imul
add
repnz
pop
xchg
test
stos
cmp
clc
inc
icebp
cwde
mov
push
cmp
inc
test
cmp
xchg
data16
daa
xlat
add
dec
icebp
movs
jp
movs
popf
pop
cmp
jns
lods
leave
hlt
lds
or
sub
xchg
mov
bound
add
(bad)
imul
or
pop
push
mov
push
add
and
xlat
test
pushf
(bad)
push
sbb
sub
dec
dec
cmp
lock
jb
(bad)
cmp
out
xchg
xchg
popa
push
xor
fisub
scas
inc
xlat
stc
xchg
cmp
pusha
sub
aaa
in
cmc
sub
adc
add
sti
std
cs
pop
add
cdq
or
push
jle
adc
cmps
jle
xchg
pop
sbb
add
daa
sbb
shr
mov
xchg
xchg
lea
xchg
xchg
mov
adc
cmp
or
rcr
daa
push
mov
loop
sbb
xor
jmp
pop
fwait
sub
xchg
jp
mov
mov
jmp
scas
add
mov
stos
inc
scas
push
xlat
mov
out
mov
mov
pop
(bad)
adc
pushf
setno
add
loopne
cmp
aas
(bad)
dec
fwait
push
push
lock
xor
stc
out
mov
fcom
(bad)
(bad)
int
cmp
push
adc
fst
jmp
add
lahf
lods
jmp
sub
add
lahf
jb
test
icebp
add
dec
push
ins
hlt
inc
jle
dec
inc
sub
lahf
rcl
loopne
ds
(bad)
fld
adc
inc
mov
or
jge
call
hlt
sub
cmp
jo
fwait
in
xchg
loop
loop
(bad)
adc
adc
adc
out
call
push
pop
inc
cmp
mov
out
dec
pop
ret
jae
pop
in
push
mov
jo
dec
push
int
inc
adc
movs
gs
cmp
sbb
cdq
ret
mov
cmp
aam
xchg
lods
jp
mov
int
ror
lea
cmp
jb
fs
and
xor
not
inc
je
inc
addr16
jecxz
mov
xchg
pop
scas
icebp
lds
stc
hlt
xchg
js
call
mov
xchg
fistp
pop
dec
mov
in
dec
das
mov
sbb
pop
dec
jge
stc
(bad)
xlat
jge
movs
or
xor
mov
and
gs
push
push
in
iret
or
cmp
cld
xchg
(bad)
mov
popa
lahf
pop
shl
outs
lds
sbb
pop
stc
ret
fs
cmp
jg
(bad)
push
mov
push
int3
ss
scas
hlt
mov
jg
cmp
push
aad
cmp
jg
dec
mov
loopne
push
js
cmps
sbb
rcr
into
repnz
ret
push
(bad)
loopne
and
xor
sub
jno
sbb
pop
jb
in
jp
inc
(bad)
xlat
push
pop
push
add
outs
(bad)
xor
nop
vcvtss2sd
mov
jmp
push
test
mov
mov
and
xlat
sbb
push
int3
xchg
lds
frstor
retf
loopne
xchg
test
push
mov
cmp
es
xchg
sbb
icebp
cmp
sub
cld
outs
or
fsub
mov
shl
mov
push
mov
popf
pushf
dec
lods
mov
arpl
mov
xchg
mov
(bad)
cli
call
inc
dec
in
mov
xor
bound
and
pop
popa
dec
mov
addr16
in
sbb
stos
pop
add
xchg
lahf
(bad)
fwait
push
mov
(bad)
cdq
xor
daa
cmc
dec
cs
jo
push
sub
jmp
sbb
rol
jne
and
push
sbb
out
xchg
mov
sti
cli
inc
rcl
xor
sbb
mov
inc
call
pop
xor
pop
cmp
outs
ins
and
inc
les
outs
fwait
sub
pop
addr16
rcl
pop
dec
pop
mov
imul
adc
mov
js
fstp
push
xor
add
dec
push
push
out
jno
cmp
inc
dec
sahf
in
cmp
xchg
cmps
outs
mov
push
loopne
xor
or
jl
inc
cmps
arpl
iret
std
fsub
push
pop
xor
xchg
neg
mov
push
dec
ret
cmps
xor
dec
out
mov
cli
and
xchg
xchg
sub
test
(bad)
push
stos
(bad)
xlat
xchg
jbe
call
jl
xchg
fwait
movs
iret
mov
inc
pop
stos
push
fld
scas
or
lock
faddp
jecxz
sbb
iret
jge
mov
mov
inc
sti
movs
scas
or
iret
leave
adc
mov
mov
fcmovb
jmp
leave
xchg
ret
xor
mov
xor
les
and
and
add
pop
dec
test
cmp
pop
ret
sub
mov
cmp
test
sar
cmc
cdq
or
lea
or
inc
mov
hlt
mov
cmp
nop
out
fld
jbe
cmp
into
push
mov
pop
push
test
jbe
(bad)
fisttp
je
scas
jno
push
pop
sbb
mov
sar
lahf
sbb
out
shl
adc
pusha
xchg
cdq
cmp
lds
xor
std
arpl
xor
mov
pop
inc
mov
add
outs
mov
jecxz
dec
adc
push
nop
cld
(bad)
cld
dec
jle
xchg
sub
loope
push
jl
xlat
jbe
xor
stc
mov
fs
movs
jno
jb
or
pop
mov
pop
adc
ds
or
push
mov
cdq
pop
or
popf
stc
or
aam
xchg
pop
push
mov
js
out
mov
mov
xchg
mov
jecxz
mov
je
retf
leave
das
mov
dec
imul
mov
out
sub
nop
addr16
cmc
inc
fucomi
popf
dec
sbb
cld
cdq
std
or
push
push
shl
or
(bad)
test
pop
xchg
fistp
push
pusha
adc
stos
cmc
ins
rcr
imul
add
ins
jmp
pop
cdq
imul
dec
pop
je
jb
repz
shl
or
(bad)
dec
js
push
or
xrelease
adc
es
cmc
jp
fmul
mov
push
xchg
sub
mov
imul
fistp
mov
mov
ret
fsubr
out
int
pop
xchg
adc
add
int3
inc
fbstp
jl
(bad)
hlt
test
loopne
cld
in
aaa
repnz
lock
les
push
fstp
add
push
out
mov
cmps
and
shr
push
shr
and
out
xchg
sahf
in
lock
jae
dec
or
loop
xor
rol
cs
xchg
pop
pop
add
and
ss
pushf
push
jle
push
sub
addr16
mov
mov
loope
test
inc
or
jo
jmp
sti
mov
xchg
adc
and
cmp
push
or
adc
xchg
cmps
sbb
retf
jne
(bad)
fisub
push
xchg
in
outs
dec
jp
mov
pop
pop
push
sub
jae
in
movs
or
mov
mov
jg
xlat
cwde
lods
or
xor
jo
sbb
add
loope
std
and
fisub
or
add
lods
xlat
add
loopne
mov
sub
push
mov
and
pop
std
ret
retf
fadd
pushf
xlat
mov
sbb
and
rcr
or
mov
cmps
and
(bad)
sub
dec
dec
sub
and
fwait
sti
push
sbb
ins
mov
jns
sub
pushf
retf
xor
mov
pop
push
call
les
dec
pop
pop
dec
or
ins
xchg
lahf
daa
call
les
pop
xchg
popa
popf
mov
retf
mov
cld
dec
add
mov
mov
sub
xor
cmp
retf
inc
fldenv
inc
fsub
pop
inc
push
addr16
dec
xchg
jnp
push
popa
arpl
mov
fsubr
sbb
mov
and
push
pop
sbb
mov
scas
jno
popa
sbb
cmp
add
bound
jb
mov
dec
sbb
sub
and
xor
pusha
push
cmp
xor
mov
lods
add
lock
mul
out
iret
add
cli
pop
push
push
xor
cmp
adc
xor
test
in
pop
push
inc
fwait
mov
lds
fs
jae
cmp
add
jl
cmp
cmp
addr16
in
dec
xor
mov
push
mov
add
inc
sbb
xor
push
scas
push
enter
bound
inc
or
mov
xchg
sub
test
cld
mov
mov
mov
cmp
inc
xor
ins
fist
mov
js
adc
ja
jne
gs
dec
sbb
sbb
fdivrp
popf
daa
in
imul
pop
repnz
nop
fld
jge
sub
jns
and
icebp
int
fiadd
sbb
mov
inc
pop
sub
outs
(bad)
cdq
inc
jnp
jecxz
scas
mov
pop
jno
int
jmp
push
xor
mov
adc
leave
mov
sub
ins
lods
mov
repnz
dec
jp
fcomi
out
lds
mov
xlat
dec
ja
pop
loopne
push
call
pop
or
movs
push
inc
push
cmp
in
fild
arpl
cwde
ins
jnp
cmp
call
shr
sbb
js
xor
(bad)
nop
sub
fcomp
(bad)
js
mov
mov
stc
data16
fcmovb
mov
daa
cmp
ins
pushf
xchg
bound
(bad)
push
push
mov
and
mov
pop
int
test
jmp
jmp
dec
fwait
push
mov
mov
aad
add
mov
rol
movs
fistp
push
std
cli
cmp
adc
cwde
cli
lods
xor
jmp
(bad)
mov
inc
(bad)
cmp
leave
fisttp
in
xor
fdivr
xchg
adc
scas
pushf
ret
in
xchg
adc
mov
stc
pusha
sbb
dec
mov
mov
inc
pop
ficom
fisttp
xchg
jno
pop
imul
jbe
pop
in
mov
ins
fwait
add
and
xor
xlat
aas
xor
pop
and
cld
call
outs
in
and
in
aad
cmp
pop
xor
out
in
cmps
neg
mov
repz
inc
push
mov
mov
aad
cmps
xor
xor
imul
or
add
out
je
adc
mov
jae
cli
or
fiadd
pop
test
jmp
out
cmp
loop
jp
adc
adc
push
dec
and
arpl
sbb
add
retf
pop
daa
jg
repz
out
mov
fmul
repnz
int3
cmp
stos
push
pop
pop
mov
jmp
js
pop
imul
pusha
xor
std
in
ret
cmp
adc
and
test
fucomi
test
inc
sub
push
leave
mov
loop
or
mul
push
or
(bad)
adc
jmp
push
mov
out
inc
dec
fcomp
sbb
fcmove
jae
stc
cmp
scas
pop
pushf
mov
lock
imul
cmp
ja
fcmovne
cdq
rcl
in
pop
gs
cmp
and
icebp
xor
imul
jl
sbb
test
mov
inc
inc
fs
pop
imul
cmp
mov
xor
shl
push
inc
inc
jge
fmul
push
ds
outs
mov
sub
xor
shl
jmp
xchg
xor
adc
adc
jecxz
xor
xchg
sti
les
inc
xor
cdq
jle
ret
sub
retf
pop
mov
fist
bound
mov
mov
ds
pmullw
clc
xor
in
imul
repnz
fst
adc
dec
adc
mov
and
into
cdq
xlat
daa
jmp
cs
call
xor
jmp
in
sub
mul
daa
jmp
mov
push
and
pop
pusha
cmp
mov
test
adc
and
push
add
pop
adc
fst
cmps
sar
out
aam
jmp
pop
sti
xchg
pop
sub
mov
in
xlat
aad
test
lahf
in
xor
cmp
mov
(bad)
jo
adc
inc
cli
(bad)
sbb
jo
ds
je
xchg
pop
mov
push
iret
(bad)
into
outs
lods
dec
(bad)
sbb
in
fiadd
shl
pop
js
cmps
fld
mov
clc
adc
imul
cdq
icebp
sbb
pop
sub
pop
cld
les
mov
fmul
jmp
inc
sub
inc
aam
pop
fsub
aad
in
dec
js
ror
pop
cli
fisttp
arpl
mov
xor
ins
std
rol
test
mov
int3
mov
push
xor
jnp
sbb
stos
out
push
mul
test
jle
fmulp
fild
cmp
dec
das
xchg
mov
push
lods
dec
aas
sbb
mov
(bad)
mov
or
xchg
in
mov
(bad)
idiv
hlt
pusha
mov
nop
add
push
es
jnp
outs
xchg
pushf
mov
push
fxch
mov
sbb
xchg
(bad)
adc
jno
in
fwait
mov
nop
das
dec
pop
fstp
push
mov
cmp
sbb
rcr
mov
hlt
mov
sub
sub
mov
test
and
and
sbb
test
xchg
nop
mov
jb
inc
js
rcl
stos
and
cmp
sbb
mov
xchg
pop
lahf
dec
adc
icebp
pop
stos
push
sbb
push
sub
imul
mov
push
mov
shl
jns
sbb
test
gs
sbb
add
scas
cdq
dec
dec
xor
or
cld
(bad)
sub
rcl
aad
out
imul
jmp
(bad)
clc
xchg
add
mov
not
xchg
mov
sub
jno
ficomp
mov
int3
xor
(bad)
lods
and
(bad)
fnstenv
cdq
out
ins
rcl
xor
inc
das
inc
or
int3
mov
adc
cmp
lock
hlt
jnp
je
psadbw
jg
jg
mov
dec
cmp
adc
push
and
fld
lds
mov
lods
mov
retf
sbb
adc
ficom
xchg
and
push
in
dec
push
sahf
inc
in
mov
xchg
in
add
dec
or
popa
jae
mov
(bad)
aam
(bad)
aaa
fnstsw
mov
jnp
xchg
shl
ss
test
xlat
mov
sbb
test
and
push
ret
lahf
cmp
or
cmp
xor
dec
test
mov
add
push
fimul
inc
adc
inc
neg
(bad)
test
jae
dec
sahf
out
fs
push
pop
pop
(bad)
cs
popa
mov
sub
mov
hlt
add
pop
jge
pop
sbb
pop
mov
enter
xor
mov
in
sub
adc
arpl
popa
mov
mov
jmp
cmps
pop
pop
jmp
add
lock
enter
cmc
jne
imul
call
std
sbb
sbb
mov
pop
addr16
adc
pushf
test
xchg
xlat
cdq
jo
in
xchg
inc
sub
arpl
adc
adc
(bad)
in
dec
cmp
jl
jge
jne
add
es
mov
imul
mov
leave
mov
cli
leave
addr16
adc
in
jbe
into
cmp
in
mov
push
push
test
sbb
mov
jl
and
sbb
cdq
cs
int
xlat
push
into
fsubr
mov
shl
scas
jns
neg
sub
xchg
cmp
dec
xor
aad
or
test
xchg
popf
jp
rcl
in
sbb
sub
loope
jns
arpl
jns
push
sbb
xor
(bad)
sbb
xchg
cmps
movs
mul
popa
mov
movs
jo
(bad)
fcmovnb
dec
or
adc
out
mov
xchg
add
or
in
adc
jne
test
or
in
cmp
adc
jb
mov
add
dec
and
cmp
outs
lea
sbb
push
iret
in
shl
cs
adc
and
int3
or
xor
div
lahf
stos
pop
nop
cmp
data16
rcr
mov
lahf
lds
inc
imul
jno
sbb
sbb
cld
inc
xchg
mov
retf
hlt
shl
(bad)
cld
or
sti
daa
inc
mov
cmps
ficomp
sahf
pop
or
test
dec
mov
pushf
xchg
sbb
mov
push
es
dec
retf
adc
test
or
clc
out
push
add
fs
jg
fcomi
test
mov
adc
and
adc
int3
test
bound
cmp
test
bound
pop
jmp
xchg
mov
mov
lea
aas
mov
shl
leave
stos
inc
test
ret
vunpcklps
int3
add
or
add
and
pop
les
add
mov
or
out
add
sub
(bad)
aad
inc
lods
(bad)
out
mov
stos
stc
mov
pop
jo
add
jmp
cdq
es
mov
int3
and
pop
dec
mov
das
mov
pusha
push
jmp
push
cmp
cmps
ds
fs
mov
ficom
out
push
hlt
mov
fwait
in
ret
pop
cs
dec
jbe
popa
in
push
xchg
outs
inc
ret
les
cmps
cmp
daa
jb
xchg
add
xchg
pop
addr16
in
push
ret
add
mov
pop
cdq
adc
jnp
adc
xchg
jo
or
dec
stos
jns
fldenv
and
sbb
mov
outs
imul
push
and
loopne
pop
and
adc
sar
add
mov
icebp
xchg
ret
sbb
cmp
imul
mov
jb
adc
push
cmc
mov
inc
adc
jo
pop
sbb
jnp
neg
sub
sar
push
sbb
cmp
das
in
loope
jns
mov
icebp
ja
imul
dec
movs
and
mov
(bad)
mov
push
mov
mov
jo
loope
xor
jns
push
push
fs
rol
cmp
out
repz
adc
mov
popf
pop
mov
ffree
fcom
add
fst
jmp
test
and
(bad)
cdq
clc
imul
or
xchg
arpl
sub
jmp
sbb
push
mov
xlat
push
dec
pop
adc
dec
fidiv
xor
fisub
and
dec
dec
mov
xchg
xlat
mov
lds
sub
jmp
jns
dec
outs
in
dec
clc
xor
test
jg
push
mov
mov
cmc
les
pop
out
lods
fisubr
lods
cmp
jbe
xchg
data16
inc
mov
adc
pusha
adc
dec
jge
dec
cmp
mov
mov
movs
bsr
fimul
or
or
push
repnz
daa
retf
or
inc
and
inc
in
xchg
aas
mov
(bad)
das
inc
cmp
nop
inc
inc
inc
jno
mov
push
daa
cmps
jns
jae
cmp
jmp
cdq
jle
mov
push
dec
mov
push
sub
retf
neg
pop
or
jns
retf
aas
mov
jl
sbb
xchg
ins
repnz
add
(bad)
repnz
pop
int3
out
shl
cmps
inc
xchg
and
cmc
loopne
push
mov
sub
enter
mov
jmp
scas
rol
dec
pop
(bad)
mov
js
les
ins
pushf
jmp
pop
adc
push
sar
stos
and
arpl
cmc
mov
jmp
cs
and
and
popa
ficomp
into
addr16
mov
mov
jmp
fmul
jl
jb
(bad)
push
dec
pop
(bad)
mov
mov
scas
mov
js
cmp
pop
mov
adc
and
and
or
cmps
mov
xor
cmp
cmp
int
adc
std
xor
popf
in
leave
inc
inc
sbb
retf
stos
push
popf
cwde
js
mov
adc
hlt
xor
cmps
jp
retf
fs
cli
int3
mov
(bad)
stc
lahf
mov
xor
xor
mov
xchg
jne
sub
cmps
mov
mov
fldcw
shl
(bad)
loopne
or
in
mov
xor
ficomp
imul
call
rcl
out
rcr
scas
xchg
lods
lods
hlt
jb
xor
sbb
out
sub
stos
pop
jnp
inc
and
sbb
ins
mov
out
fisubr
outs
daa
es
fwait
and
ret
mov
arpl
xor
and
add
adc
and
xor
push
mov
imul
inc
mov
cld
xor
iret
das
pushf
jmp
fcomip
pop
movs
popa
or
in
lea
sbb
out
iret
push
xchg
dec
int
pop
jg
sub
jg
nop
out
and
xor
sahf
jecxz
sub
sub
adc
xor
add
pop
icebp
mov
daa
dec
dec
pop
sub
adc
pop
ins
scas
ss
nop
imul
popf
dec
cmp
enter
xor
jmp
(bad)
fxtract
or
out
rcr
push
push
pop
outs
sbb
in
lods
sub
jecxz
push
clc
std
or
out
inc
rcr
pop
stos
push
sbb
cmp
out
mov
push
nop
or
push
add
jl
jmp
idiv
imul
cld
xchg
sbb
mov
mov
(bad)
jle
push
jb
repz
xor
(bad)
dec
or
fwait
and
pop
adc
sbb
ror
ret
in
cmp
mov
sub
mov
adc
jle
out
pop
xlat
or
stos
aaa
sbb
pop
aas
xchg
and
xchg
and
xchg
movs
and
cdq
in
fdivr
inc
pop
inc
mov
(bad)
push
imul
cdq
mov
ficomp
mov
cmp
cmps
mov
mov
adc
pop
push
(bad)
xlat
pop
inc
mov
shr
pop
in
sbb
xchg
fwait
je
add
jns
in
outs
xchg
bound
inc
aas
push
outs
push
retf
sbb
cli
sub
mov
es
stc
jnp
rol
leave
jae
sbb
dec
dec
(bad)
cmps
mov
dec
jg
movs
in
sbb
out
mov
into
and
jns
pop
(bad)
mov
retf
pop
sbb
call
aas
neg
ja
sbb
imul
pop
inc
test
mov
or
ret
fcom
(bad)
inc
pop
fs
jecxz
xchg
movs
xor
mov
mov
add
mov
and
aaa
movs
mov
loop
arpl
pop
cs
loope
pushf
mov
cdq
xor
(bad)
fcmove
sbb
push
nop
push
sar
pusha
xchg
cwde
dec
fisttp
daa
iret
pop
pop
xor
popa
int3
test
jge
xchg
mov
adc
inc
idiv
cwde
jge
pop
pop
add
mov
fdivr
sbb
mov
rdtsc
mov
outs
jmp
shr
movs
repz
adc
cmc
and
test
sbb
mov
push
mov
mov
push
imul
adc
jle
push
xchg
jns
mov
ret
hlt
nop
adc
into
fcom
sbb
xchg
dec
cmp
movs
call
imul
mov
adc
mov
movs
xor
mov
sbb
(bad)
mov
push
sub
jae
add
sub
xchg
mov
jge
mov
addr16
imul
daa
lock
mov
jmp
cmp
ret
call
push
ss
push
push
ret
mov
std
jno
adc
test
inc
leave
pop
xchg
movs
cmps
sub
push
bound
outs
stos
ins
or
jno
movzx
cmp
es
(bad)
or
int3
sub
dec
pusha
mov
push
inc
movs
mov
enter
push
cwde
dec
and
mov
jp
test
mov
jns
and
push
movs
adc
add
and
out
popf
cwde
fdiv
push
sub
cmp
dec
(bad)
cmp
sbb
movs
mov
push
sahf
outs
pop
jmp
stos
cmp
mov
callw
fabs
inc
mov
push
ret
ja
imul
xchg
imul
dec
jmp
fsub
xchg
ret
mov
mov
js
dec
popf
adc
push
leave
mov
loopne
mov
fst
adc
push
push
jg
ret
and
icebp
mov
je
push
stos
pop
push
jbe
mov
mov
shr
jae
lahf
mov
adc
cli
jmp
inc
out
out
mov
or
int
(bad)
jp
retf
in
pop
movs
cmp
stos
add
mov
inc
movs
mov
lahf
pop
mov
leave
cld
popf
pop
test
aam
lahf
out
inc
sbb
and
bound
or
pop
mov
add
ins
iret
add
and
add
repnz
rcl
inc
fs
sub
xor
fidivr
sub
sbb
cmp
mov
sbb
jge
inc
sbb
pop
mov
pusha
xlat
push
sbb
mov
jmp
jp
jb
and
or
mov
and
pop
test
std
inc
hlt
in
mov
add
ins
sub
test
fcomp
enter
call
push
loop
inc
cmp
das
xchg
hlt
inc
fistp
or
mov
and
cwde
inc
mov
push
test
gs
push
scas
xor
hlt
retf
jmp
pop
jns
ss
mov
sub
sbb
inc
pusha
fisubr
lahf
mov
cmp
cs
jecxz
scas
movs
data16
cs
(bad)
dec
mov
cmp
mov
(bad)
mov
mov
jns
ins
icebp
push
dec
call
loopne
or
(bad)
or
sub
or
jmp
nop
outs
rol
cld
or
int
je
cmps
dec
cli
inc
out
cmp
dec
push
gs
cmc
adc
fwait
sbb
cld
inc
repz
and
mov
(bad)
sbb
inc
movs
mov
sbb
rcl
inc
lahf
jmp
and
and
call
push
scas
retf
dec
and
adc
sub
jnp
push
mov
loop
dec
or
(bad)
fld
mov
sub
or
fwait
lods
push
sub
and
xor
mov
scas
sub
(bad)
xchg
add
arpl
test
repz
sbb
pop
and
or
aas
pop
pop
xor
cmps
(bad)
jae
mov
mov
in
and
pop
test
jnp
xchg
add
jle
adc
shl
push
mov
addr16
inc
into
(bad)
xlat
pop
jmp
fwait
push
mov
test
lods
cmp
das
aas
shr
jge
push
loopne
cli
call
cld
cmps
jnp
inc
sub
imul
(bad)
push
inc
imul
aas
ds
icebp
cwde
data16
int
js
popf
xor
ins
mov
cmp
nop
push
or
pusha
mov
adc
sub
ins
adc
popf
jb
popa
into
xchg
and
aam
repnz
cmp
mov
jecxz
and
add
mov
loope
fwait
push
dec
bound
pop
pop
cld
and
push
push
(bad)
mov
sbb
mov
hlt
push
or
in
xor
les
test
movs
sahf
xchg
sbb
or
in
push
loopne
cmp
push
xchg
jae
cdq
repnz
loope
test
aam
jno
push
movs
(bad)
push
xlat
sar
es
push
sti
rcl
repnz
clc
imul
jo
xor
jb
scas
or
cmova
ror
and
or
xor
bswap
out
adc
jnp
dec
lods
push
adc
aam
pop
stos
call
cmp
mov
inc
outs
xor
add
mov
pushf
sahf
jmp
ficom
stos
repnz
loope
push
jne
das
not
sub
mov
pop
pop
popa
pop
and
cdq
into
in
cmc
inc
pushf
sbb
add
dec
and
fxam
push
in
xchg
cmp
mov
xor
outs
into
xor
sti
jmp
lds
push
cwde
imul
imul
sahf
outs
or
(bad)
xor
pop
and
neg
fbld
mov
jns
xchg
retf
sub
sbb
jmp
push
pop
cmps
pop
pop
jle
fcom
fimul
mov
adc
add
cdq
data16
mov
outs
cwde
std
mul
(bad)
jle
xor
nop
mov
inc
push
cmps
jg
inc
mov
push
idiv
jae
push
aas
cdq
in
jbe
mov
mov
xchg
fldcw
clc
jbe
dec
adc
in
push
fnstenv
cld
es
js
cmp
dec
dec
dec
xchg
mov
les
push
div
jns
rep
jle
push
not
in
and
fwait
xchg
enter
movs
daa
mov
cmps
jae
fidivr
movs
pop
sar
shl
push
(bad)
ins
dec
jmp
popa
jno
inc
push
pop
or
or
xor
sub
and
out
loop
pop
push
jmp
stc
jnp
sti
mov
cmps
ret
and
es
and
inc
fisttp
clc
retf
push
retf
jb
sbb
pop
mov
sbb
jae
loop
push
repz
fimul
mov
and
and
icebp
add
not
and
fst
cwde
jp
popf
dec
mov
mov
jg
push
retf
fiadd
repz
aaa
das
mov
mov
(bad)
sub
push
aaa
fild
rcr
sti
out
arpl
ja
inc
jl
das
adc
pop
jno
rcr
aam
add
mov
gs
popa
mul
out
push
call
pop
and
loopne
fdiv
in
rcl
and
mov
(bad)
mov
or
js
xchg
adc
stos
(bad)
in
popa
rol
icebp
add
nop
repnz
mov
mov
iret
xor
pushf
jae
mov
shr
jb
addr16
rol
scas
pusha
mov
addr16
dec
mov
aaa
into
sub
outs
mov
or
test
shl
shl
xchg
retf
ror
shl
fcmovnb
mov
gs
jno
mov
add
ficom
lds
cld
les
div
inc
and
jns
cs
push
dec
icebp
cmp
cmp
dec
out
mov
jno
cmp
lock
loop
xchg
ins
xlat
ror
fldenv
les
mov
ins
repz
je
cld
(bad)
xchg
fs
sub
dec
inc
fst
mov
int
jl
jae
ret
sub
repz
ret
or
dec
mov
xchg
lds
jnp
push
lds
cmp
adc
push
sub
popf
mov
stos
push
(bad)
fstp
add
jg
(bad)
nop
xchg
sbb
into
pop
xchg
loop
pop
sub
aaa
cmp
out
(bad)
mov
movs
add
xchg
shr
mov
mov
movs
mov
imul
xor
rcr
scas
sar
jmp
cs
stos
sbb
(bad)
xchg
xchg
out
mov
dec
ss
loope
aaa
pop
or
arpl
repnz
inc
jge
aas
dec
adc
ss
ss
pop
or
pop
pop
ja
mov
dec
adc
(bad)
adc
daa
xor
push
stos
pop
mul
xchg
in
mov
jne
xchg
xor
push
add
adc
mov
(bad)
sahf
mov
inc
mov
mov
div
fdivr
cmps
mov
xchg
add
call
push
xor
sub
cmp
cmp
xchg
(bad)
lock
xor
sub
aam
inc
xchg
enter
popf
retf
les
stos
cmc
int
add
or
sbb
sub
cs
push
ja
mov
stos
cmp
(bad)
std
cwde
sub
sti
pop
loopne
cwde
pop
cs
mov
loopne
sbb
popf
mov
in
addr16
mov
cmp
pop
jno
loop
repz
push
push
aad
cs
or
jmp
push
aad
and
jbe
add
mov
pop
aaa
push
icebp
sbb
mov
data16
jmp
sub
fcomp
or
mov
lock
cmp
pop
dec
movs
loope
cmp
out
mov
and
shl
mov
xchg
xchg
mov
adc
or
sub
int
lods
imul
pop
fidivr
or
das
test
sub
outs
dec
pop
out
in
xchg
shr
add
in
jmp
mov
sbb
shl
(bad)
jns
call
in
(bad)
fadd
scas
or
sahf
scas
jmp
adc
cmp
idiv
dec
ffree
sahf
adc
add
test
popf
adc
jmp
or
sbb
sar
inc
bound
mov
aas
dec
inc
sar
xor
mov
and
icebp
pop
and
call
mov
push
jae
neg
jno
ins
push
jl
loopne
(bad)
push
xor
mov
in
add
rcl
mov
adc
pushf
aas
mov
or
cmp
outs
and
and
jle
dec
icebp
pushf
add
mov
mov
retfw
enter
jne
fcom
icebp
shl
xor
cs
dec
cmp
pushf
inc
sbb
add
mov
xchg
call
mov
popa
dec
jmp
pop
inc
fnstsw
push
dec
gs
fidiv
mov
inc
add
mov
inc
in
sbb
mov
cmps
adc
adc
add
iret
inc
jns
xchg
out
sbb
pusha
inc
sar
mov
jne
aaa
rol
mov
xor
xor
enter
add
shr
add
or
(bad)
dec
push
and
xor
es
inc
push
xor
daa
lds
daa
(bad)
(bad)
jmp
adc
jne
addr16
push
mov
and
jg
popa
adc
ins
nop
xchg
and
cmp
cs
mov
fstp
lock
push
scas
cdq
mov
mov
mov
sbb
ficom
push
and
dec
retf
stos
fdiv
aaa
cmp
(bad)
ret
sbb
movs
ins
push
(bad)
aas
add
sub
in
in
jg
sub
mov
ficomp
adc
mov
es
xor
fnstcw
pusha
mov
inc
dec
jnp
mov
push
xor
jge
mov
enter
inc
lahf
mov
shl
xchg
rep
xor
mov
sbb
mov
test
ja
jne
cmps
shl
(bad)
sbb
in
mov
push
mov
scas
fimul
outs
ja
es
add
retf
and
inc
fild
mov
(bad)
not
dec
addr16
scas
pop
inc
inc
dec
mov
jmp
cmc
cld
movs
dec
ss
lock
aad
loope
hlt
vpmaxsw
or
aad
cmp
cli
push
pop
pop
push
es
popf
inc
cld
sbb
shr
pusha
sub
movs
shr
add
out
ficomp
lods
jmp
dec
jno
stc
sbb
scas
lods
hlt
(bad)
xchg
addr16
dec
out
js
xchg
mov
add
call
dec
dec
arpl
sbb
pop
sub
mov
cmp
cmp
adc
push
push
scas
cmc
or
cmp
cmps
mov
jmp
fs
mov
clc
inc
push
ficom
add
dec
adc
retw
lea
and
pusha
les
mov
repz
retf
xlat
nop
cmp
pop
push
cdq
mov
repnz
cs
jecxz
pushf
mov
xor
xchg
fwait
or
push
and
mov
outs
clc
cmp
int3
or
jnp
xor
out
jecxz
sbb
xor
xor
aas
sbb
ins
sti
pop
retf
inc
test
cdq
lock
and
mov
stos
ud0
mov
data16
push
std
add
in
mov
push
inc
(bad)
push
in
xor
popf
sar
xchg
and
xchg
addr16
shr
fstp
sub
in
lods
inc
mov
cld
movs
test
js
cmp
fidivr
pusha
sbb
mov
into
mov
sub
rcr
(bad)
out
xchg
jle
jnp
or
into
mov
je
add
pop
daa
int
js
loopne
mov
loopne
jge
leave
aas
bound
or
and
nop
xor
pop
mov
ins
mov
push
xchg
mov
imul
mov
adc
sub
and
mov
leave
inc
js
int3
push
cmps
test
pop
xchg
cmp
rcr
hlt
pop
or
xlat
cs
adc
xchg
out
inc
sbb
xchg
imul
fisub
loop
cli
arpl
cmps
or
cmp
push
in
and
shl
ret
movs
dec
mov
ins
stc
stos
hlt
mov
xchg
(bad)
fmul
cmps
jo
push
pusha
rcl
add
sbb
mov
or
pusha
hlt
mov
jno
inc
push
int
retf
loope
sub
push
or
mov
cld
or
idiv
cmps
icebp
ror
or
push
mov
xchg
push
push
or
mov
rcl
adc
lock
out
lock
push
(bad)
into
push
(bad)
cmc
adc
fdiv
jo
int
xor
not
retf
movs
ss
jmp
xchg
cdq
mov
fs
xor
pop
sub
emms
lea
jmp
shl
out
lods
inc
cli
ins
imul
mov
adc
adc
call
xchg
jae
add
add
and
pop
iret
fs
ja
xchg
shl
ret
les
out
mov
sub
aam
add
push
aam
mov
dec
jge
movs
out
test
retf
outs
ret
mov
xchg
repz
push
mov
mov
mov
xchg
mov
call
in
clc
and
mov
sub
add
dec
jne
and
ins
ss
jmp
push
push
add
sub
dec
popf
and
dec
dec
cmc
cli
jg
and
movs
dec
xchg
jns
inc
retf
add
jb
xor
hlt
pop
bound
loopne
ds
mov
loop
or
movq
enter
fist
cmp
jae
jp
nop
clc
inc
sbb
test
mov
jmp
cwde
push
hlt
shl
fcomp
sbb
pop
leave
adc
pop
fimul
addr16
cmp
xor
in
sahf
cmp
xor
test
into
or
xchg
mov
dec
jnp
into
scas
leave
push
ins
jns
retf
(bad)
sub
xchg
icebp
xor
daa
mov
mov
cli
inc
into
imul
sub
(bad)
enter
jns
popf
in
cwde
dec
cmps
push
adc
dec
fisttp
pop
pop
mov
fdiv
mov
out
vcvttsd2si
jp
cmc
xchg
out
lds
push
popf
fidiv
or
dec
(bad)
push
dec
test
and
mov
aas
or
retf
rcr
mov
jg
out
addr16
daa
sbb
inc
and
or
mov
(bad)
cmp
inc
sub
xchg
sbb
sbb
imul
repz
mov
adc
push
sbb
pusha
inc
sbb
pop
push
loop
in
add
std
mul
or
fwait
pushf
or
xor
push
fnstenv
rol
mov
cmp
jnp
fild
in
xchg
and
outs
lods
js
or
inc
push
mov
rol
jge
test
mov
pop
jp
jge
push
push
mov
push
movs
push
inc
pop
cwde
mov
adc
mov
push
jmp
in
stos
iret
js
in
ss
xchg
in
xchg
fld
xor
xchg
test
sahf
add
mov
push
mov
test
dec
ins
scas
lods
and
(bad)
adc
mov
mov
scas
cli
sar
lock
icebp
(bad)
shl
lock
mov
popf
xchg
into
sub
rcl
ins
lea
jge
inc
adc
pop
push
add
lods
mov
jns
int3
jae
(bad)
lock
sbb
js
cmp
stos
scas
adc
sub
push
gs
sub
sets
sbb
jle
cmp
pop
cli
pop
xchg
pop
repz
pop
mov
sub
ds
push
mov
push
pop
and
add
loop
int3
ficomp
cmp
int3
xchg
fsub
inc
jb
loop
(bad)
dec
jo
push
add
cmps
and
data16
stc
jo
mov
ins
fs
out
cmp
movs
or
(bad)
(bad)
jle
mov
mov
call
cmp
call
mov
jecxz
dec
jo
jbe
das
rcl
and
adc
cmc
out
test
out
stos
std
out
push
mov
push
in
(bad)
jmp
loop
mov
stos
jns
xchg
fwait
cld
les
je
jo
aam
int
js
and
push
(bad)
jg
jp
adc
nop
test
in
dec
aad
ds
pop
imul
mov
popf
inc
mov
scas
cvtps2pd
pusha
out
jno
adc
cmp
xchg
cmp
push
sub
in
dec
add
dec
daa
out
pop
daa
nop
lods
jge
movs
and
jp
jge
xchg
fild
dec
cwde
in
imul
jne
pop
xor
push
(bad)
arpl
sub
adc
cmp
das
enter
mov
adc
mov
jp
bound
data16
loope
dec
outs
imul
pop
arpl
ins
mov
fs
cmp
xor
inc
mov
mov
inc
(bad)
fidiv
push
jno
loop
fistp
call
rcr
fnsave
aam
inc
popa
jmp
sbb
or
in
push
mov
ret
push
stos
retf
sbb
xchg
dec
mov
loop
and
in
pop
jno
retf
std
sub
rol
loopne
ins
push
and
imul
movs
jmp
pusha
(bad)
or
and
lea
mov
push
inc
mov
in
mul
push
js
es
sub
and
movs
call
xchg
sbb
and
test
mov
sub
mov
xchg
xchg
sbb
jnp
jb
inc
stos
xor
shl
add
pop
sub
outs
leave
pop
adc
clc
push
jns
shr
push
jns
or
sub
shl
push
dec
push
fstp
sbb
sbb
jns
clc
scas
or
std
call
jns
pop
add
xor
jns
mov
into
dec
dec
hlt
cmps
pop
sbb
pop
dec
data16
cmps
retf
mov
xor
popf
mov
dec
hlt
xor
jge
in
jnp
jno
inc
jge
popf
fsubr
sar
fnstsw
mov
inc
jnp
cdq
add
or
cmp
in
push
lods
and
dec
aad
inc
fwait
aad
lds
dec
data16
and
push
jns
jbe
mov
mov
mov
cmp
stos
out
es
ret
jnp
js
jbe
xor
mov
addr16
into
sub
push
je
sub
std
frstor
pop
out
repz
iret
cmpxchg
sbb
int3
imul
xchg
xchg
cmp
dec
lds
inc
mov
(bad)
(bad)
and
sub
jmp
lods
mov
popf
imul
inc
rcr
push
int
pop
push
(bad)
aas
movs
and
or
inc
punpckhdq
jns
mov
cmp
push
pop
add
jge
push
popa
cmc
cmc
into
cmp
dec
pop
ficomp
push
sub
cmp
add
fst
out
push
mov
out
enter
xor
push
pop
xor
pop
inc
pop
xchg
or
hlt
adc
push
aas
mov
xchg
std
lds
pop
xor
test
jmp
in
je
in
sub
adc
fist
jmp
stc
jno
push
in
jl
in
js
daa
paddb
in
sbb
mov
add
call
mov
in
lods
jecxz
nop
sbb
mov
mov
xchg
shr
sub
mov
push
and
inc
fchs
adc
in
ret
lods
call
pop
lahf
inc
inc
mov
or
dec
push
out
outs
cmps
lods
jmp
(bad)
aas
shr
or
xor
in
push
inc
and
fmul
inc
add
dec
add
and
das
adc
push
shr
mov
stos
jle
add
xor
cmp
pop
bound
ret
icebp
das
retf
cli
mov
bound
sar
xchg
in
fst
fcom
or
repnz
pop
mov
scas
mov
movs
mov
js
mov
push
fst
add
add
adc
mov
nop
dec
rol
dec
out
das
jmp
nop
les
mov
mov
lahf
call
cmps
ret
mov
push
jp
inc
out
or
xchg
cmp
mov
out
pop
jne
stos
scas
ins
mov
inc
out
xor
sbb
std
jns
jle
je
inc
adc
mov
jns
pop
jne
bound
(bad)
sbb
enter
clc
push
inc
lods
fcom
jge
push
sbb
cld
into
or
in
mov
mov
addr16
push
inc
pushf
mov
mov
repnz
or
call
pop
(bad)
pop
ds
lods
movs
enter
push
in
fdivr
adc
push
(bad)
cdq
clc
int
clc
mov
sar
xor
icebp
pop
ins
mov
retf
hlt
das
(bad)
or
sub
mov
cmp
arpl
(bad)
shr
daa
cmp
xchg
arpl
pop
rcl
push
js
xchg
not
xchg
inc
pop
mov
push
stc
arpl
nop
adc
add
pop
test
cdq
jnp
mov
jecxz
jne
gs
loop
pop
mov
in
xchg
(bad)
add
aam
sub
inc
jle
outs
and
add
mov
in
pop
mov
or
inc
sub
sbb
lods
and
int
leave
and
jmp
fsub
repnz
and
lods
sub
inc
xlat
ds
dec
(bad)
call
push
ds
dec
add
adc
or
in
gs
xor
cs
fisub
call
pop
lahf
sub
unpcklps
push
adc
icebp
adc
and
jnp
ins
dec
std
test
faddp
push
in
mov
(bad)
cmp
xor
push
lahf
xor
mov
fucom
pop
pop
or
out
mov
cmp
sub
mov
jae
xor
mul
sbb
jb
cmp
cmps
push
pop
mov
rcl
stos
jno
adc
push
jmp
push
frstor
stc
cmp
aas
loopne
pop
jg
dec
xor
loope
gs
enter
push
mov
inc
push
dec
adc
fisttp
and
out
jmpw
cmps
clc
push
fnstcw
add
shl
daa
into
xchg
dec
xor
fmul
xlat
sar
or
(bad)
daa
mov
or
cmps
mov
imul
inc
push
daa
js
es
adc
call
fs
mov
inc
push
fdiv
mov
or
daa
pushf
adc
inc
retf
mov
add
enter
xchg
sar
mov
(bad)
shl
(bad)
retf
cmps
mov
pop
pop
sti
test
or
cmp
dec
out
xor
mov
and
fcomp
add
fdiv
adc
cmps
(bad)
jb
add
cwde
sbb
add
add
xor
cmp
dec
fistp
adc
push
shl
in
dec
adc
mov
outs
xor
xchg
mov
pushf
sar
pop
sbb
cmp
pop
mov
mov
adc
inc
mov
imul
stos
enter
(bad)
mov
test
adc
pop
fstp
push
push
xchg
or
jae
xchg
cmps
sbb
xor
push
sti
sahf
inc
adc
daa
xchg
mov
push
outs
and
jmp
push
xchg
mov
mov
mov
jg
mov
outs
xor
sbb
mov
jne
mov
pop
sti
jae
dec
ins
sub
jge
cld
loopne
pop
imul
ret
je
in
and
stos
or
push
adc
adc
pop
pop
or
mov
gs
pop
adc
cmp
shl
add
xchg
movs
mov
paddusb
stos
jae
cmp
pop
xchg
dec
bound
scas
outs
xchg
jae
xor
mov
dec
jl
(bad)
(bad)
call
xor
cmp
lahf
into
sbb
in
add
or
jae
pop
adc
mov
pop
test
xchg
mov
fisubr
xlat
popa
mov
xor
nop
daa
in
stos
cdq
inc
int
sub
movs
mov
adc
pop
mov
dec
cdq
pop
mov
push
mov
bound
cwde
pop
das
push
pop
mov
jo
xchg
mov
out
inc
xor
mov
mov
xor
sub
mov
and
push
in
sub
jp
ucomiss
or
and
iret
adc
xor
iret
mov
lock
xor
and
test
ja
dec
jge
sub
sub
sbb
mov
push
lods
and
sti
scas
and
or
jo
loope
stos
in
aaa
aas
rcl
jmp
xlat
push
inc
sar
sar
or
mov
xchg
cmps
call
mov
or
bound
mov
cmp
rol
and
jo
mov
sbb
mov
mov
pop
and
sahf
sub
cld
pop
outs
mov
loope
in
fisubr
scas
ss
out
out
repnz
ds
outs
and
xor
(bad)
out
mov
pop
out
cmp
(bad)
imul
push
mov
inc
ret
adc
repz
lods
ins
lea
sub
cdq
(bad)
fwait
push
sub
lods
pusha
push
mov
stos
xchg
cli
cmp
inc
rcl
(bad)
int
adc
lds
mov
cdq
(bad)
and
fcom
ds
dec
sti
arpl
or
call
jecxz
cs
repnz
mov
popa
push
and
pop
stos
sub
sub
mov
aas
xchg
push
(bad)
rcr
xchg
(bad)
in
ror
push
pop
out
and
xchg
or
jno
adc
pusha
inc
shl
cli
in
(bad)
and
fcomp
test
outs
sbb
sub
add
add
stos
xlat
push
jns
repnz
es
add
pop
push
mov
not
push
jne
push
or
pop
fcom
cmp
test
add
popf
lods
and
arpl
fist
gs
data16
adc
je
arpl
cmp
add
and
add
mov
mov
movs
jb
push
dec
mov
loopne
mul
xchg
dec
mov
push
jecxz
xor
fwait
call
es
loop
mov
xchg
cli
ficomp
imul
mov
push
inc
std
push
rcr
jg
scas
and
stos
push
mov
mov
cmps
mov
fldenv
dec
out
jnp
lea
imul
sub
adc
into
dec
push
inc
jnp
mov
jnp
mov
jmp
fisub
mov
sbb
bound
mov
in
dec
test
stos
sub
xor
jnp
adc
test
sub
pop
xchg
inc
iret
popa
cdq
movs
fdivr
arpl
(bad)
fst
sbb
dec
xor
pmuludq
(bad)
sti
sub
std
movs
xchg
adc
and
loop
pushf
cld
cmps
pusha
sbb
call
mov
mov
pop
sti
mov
retf
cmp
jle
lods
pusha
nop
mov
leave
je
addr16
add
(bad)
aam
mov
sbb
jb
sar
stos
aam
hlt
jae
inc
fcomp
pop
in
sbb
or
out
adc
sub
inc
sbb
or
or
dec
mov
mov
aam
fidiv
(bad)
mov
mov
in
jg
cli
(bad)
sti
mov
adc
lds
sahf
cdq
inc
dec
inc
aad
dec
loope
push
jge
fcmove
popa
cmp
outs
push
or
inc
cmp
fidiv
out
scas
and
popa
jl
jne
mov
je
popf
rcl
test
add
dec
fist
pushf
jno
jns
movs
push
dec
aam
push
sbb
mov
mov
xor
jnp
jae
into
or
cmp
jbe
jg
(bad)
jmp
pop
data16
inc
mov
inc
test
cs
retf
sbb
adc
pop
test
ja
leave
xor
sbb
sbb
jo
(bad)
fucomp
cmps
add
mov
and
pop
dec
mov
retf
(bad)
(bad)
xchg
rcr
sub
mov
vcvttss2si
ss
push
sbb
retf
and
in
repz
neg
push
mov
(bad)
mov
ins
dec
and
and
sub
dec
xor
jecxz
pop
or
push
sbb
sbb
iret
test
aad
jle
mov
cmp
cmp
adc
movq
push
push
adc
mov
gs
adc
xchg
(bad)
adc
rcr
scas
sbb
mov
xor
xchg
sbb
div
xor
adc
jno
push
(bad)
not
cmp
or
clc
jnp
or
iret
pop
out
or
sti
xor
xchg
push
mov
push
xchg
test
cmp
inc
inc
(bad)
les
mov
push
add
fnstcw
movs
or
stc
adc
in
jno
or
mov
mov
and
test
jmp
ja
xchg
or
xor
mov
inc
sti
mov
add
js
adc
leave
add
or
ret
test
cmc
hlt
leave
pop
add
jecxz
mov
test
ror
sti
mov
add
mov
hlt
inc
retf
out
jns
inc
cmp
(bad)
aam
pop
retf
pop
xchg
(bad)
xchg
lea
dec
push
push
add
mov
retf
add
push
addr16
in
out
mul
cwde
stos
push
or
(bad)
(bad)
(bad)
lahf
retf
xor
mov
cwde
sub
xchg
cmp
mov
aas
clc
jg
je
jae
loope
rcl
mov
jbe
fs
or
push
fisub
sub
(bad)
(bad)
shl
jge
out
inc
dec
jle
dec
loopne
inc
loopne
sbb
mov
jmp
pop
mov
pop
aad
or
add
and
or
push
sbb
(bad)
mov
fisubr
sar
jge
int3
nop
pop
adc
fisubr
fcomi
adc
inc
cmova
retf
pusha
test
xor
sbb
pushf
fisub
push
iret
out
enter
sbb
jo
sub
mov
imul
addr16
sti
mov
shl
push
xor
mov
mov
retf
adc
pop
add
in
xlat
push
jmp
and
push
add
in
cli
mov
das
popa
iret
and
or
dec
pop
ret
cdq
aam
sbb
mov
aas
sbb
ins
xlat
fist
xor
aaa
inc
aam
mov
inc
mov
push
pop
pop
jmp
pop
repnz
pushf
mov
std
add
push
add
sbb
popa
test
mov
ss
xor
ins
fcomi
je
sbb
adc
arpl
mov
fadd
imul
popf
mov
pop
ds
mov
jmp
mov
imul
repz
pop
jns
mov
clc
sub
adc
icebp
cmp
repnz
ins
xchg
loop
fnstenv
or
rcl
jmp
pop
mov
and
cld
lds
call
push
icebp
push
ror
push
add
lock
sub
ret
outs
aad
and
or
mov
and
popf
mov
je
(bad)
push
retf
int3
mov
jne
shl
and
fimul
pop
test
loope
jae
daa
mov
js
sub
scas
fidivr
xor
dec
aam
movs
cli
sti
pop
out
or
jns
mov
cld
push
test
cmp
jecxz
push
jo
push
pop
jns
addr16
adc
sbb
mov
inc
(bad)
loope
mov
adc
jns
fcomp
outs
in
test
or
aas
xchg
push
stos
jmp
data16
mov
stos
dec
gs
inc
test
jecxz
stos
jae
das
xchg
ror
pop
cs
dec
(bad)
in
in
fucomi
adc
bound
push
adc
jl
cmps
popf
je
ret
int3
sar
xchg
fisubr
xor
jno
pop
inc
inc
out
dec
push
sub
push
daa
jmp
jl
dec
dec
lahf
stos
shl
xchg
cmc
xchg
bsf
or
pusha
cmps
add
or
xor
loopne
jmp
mov
push
jno
in
pop
sub
sub
pop
jo
nop
shl
add
dec
retf
dec
fcom
add
pop
jle
adc
pop
adc
pop
jo
nop
and
mov
int
sbb
jbe
test
lea
fbstp
mov
mov
add
sbb
sub
rol
stc
inc
jmp
adc
fisttp
loopne
jnp
sbb
push
punpckhdq
data16
sbb
das
pop
xchg
aam
dec
mov
jl
mov
push
adc
dec
push
out
push
dec
mov
pushf
dec
mov
or
and
adc
add
pop
add
inc
cmp
and
mov
jb
lahf
pop
sbb
retf
mul
rcr
xchg
popf
add
xor
push
mov
and
cld
sar
dec
sub
jne
pop
nop
cmp
das
cmc
inc
mov
dec
inc
fsubr
hlt
ins
inc
mov
lahf
jl
in
loopne
jmp
popa
xchg
xchg
push
xor
jl
pop
xchg
(bad)
push
sub
stos
push
popa
call
mov
xchg
lods
sbb
inc
push
rol
into
jmp
pop
scas
sahf
and
js
(bad)
lock
mov
mov
out
pop
pop
out
and
mov
leave
aad
push
(bad)
call
and
cli
mov
inc
jg
adc
ds
pop
pop
mov
je
pop
pop
shl
pop
cmp
push
call
imul
lds
das
outs
clc
scas
cmc
out
(bad)
pop
ins
cdq
sahf
out
adc
sbb
and
mov
cmc
dec
pop
daa
add
aaa
adc
inc
lock
cs
jle
bound
cmp
movs
arpl
xchg
sbb
pop
fs
cmp
loop
aad
mov
mov
sbb
mov
xchg
into
adc
or
sar
or
adc
xlat
iret
test
add
fcmovnu
sbb
push
dec
cmc
rcl
inc
retf
xor
addr16
sar
adc
js
jb
pop
push
pop
retf
xchg
cmps
mov
in
xchg
xchg
cmp
xchg
fimul
xchg
mov
push
push
and
int
jns
jp
and
mov
adc
or
fldenv
xchg
xlat
mov
mov
mov
mov
cmps
hlt
je
out
loopne
pop
mov
pusha
mov
scas
adc
aas
(bad)
leave
jmp
inc
lods
in
jmp
jnp
repz
jne
sahf
test
adc
mov
push
ja
jbe
and
mov
in
pop
test
or
jbe
adc
sbb
cld
adc
cmps
dec
xchg
dec
fsubr
pop
mov
push
(bad)
out
mov
loope
int
and
cld
jnp
mov
cld
inc
xlat
sbb
scas
ret
fimul
hlt
push
cmp
add
dec
js
scas
or
(bad)
jmp
lods
stc
mov
pop
outs
lds
or
push
pushf
call
movs
pop
pop
adc
pop
jae
js
pusha
mov
jl
jo
sbb
fs
jmp
bsr
sbb
(bad)
xchg
push
loope
jl
sbb
sahf
bound
cmps
and
ss
push
mov
jge
pushf
jmp
shl
loop
bound
ss
push
mov
movs
mov
push
scas
ins
xchg
gs
pop
test
test
mov
imul
cs
adc
fwait
aaa
pop
(bad)
cmp
mov
sub
inc
sbb
dec
pop
mov
jae
fucomp
out
das
jg
mov
mov
sbb
movs
icebp
pop
div
repnz
sbb
jp
in
dec
jmp
sub
mov
cmp
mov
je
jmp
mov
cmp
inc
jecxz
push
mov
repz
and
push
js
jbe
jae
push
iret
push
mov
cld
adc
dec
lds
sbb
out
mov
dec
push
sub
add
dec
and
test
sub
ja
pushf
push
ja
or
add
cmp
mov
and
or
mov
cmp
pop
dec
fisub
leave
mov
out
push
lods
adc
dec
retf
xchg
cmp
add
xor
mov
cmp
imul
mov
jbe
adc
add
fld
or
mov
xor
sub
mov
mov
nop
cmps
mov
dec
clc
add
imul
dec
(bad)
sub
pop
xchg
outs
lds
call
fld
mov
adc
push
ins
jb
mov
(bad)
cs
or
add
cld
pop
(bad)
sbb
inc
out
jb
mov
sbb
aad
push
sub
test
mov
fwait
inc
or
gs
cli
fbstp
mov
mov
out
xchg
ficomp
mov
or
scas
int3
lods
mov
xchg
test
lock
xchg
(bad)
cmps
jmp
dec
jge
xor
ins
cmp
mov
mov
sbb
jmp
int
test
or
adc
lock
pop
add
hlt
cmc
repnz
pop
aas
ret
ret
aas
iret
sub
(bad)
out
ins
iret
inc
mov
icebp
sbb
(bad)
in
repnz
push
out
out
inc
je
jge
xor
xchg
pop
mov
cmp
sbb
and
mov
dec
mov
jmp
push
aaa
jmp
nop
push
add
out
stc
or
in
lahf
outs
sbb
add
fldenv
rol
jnp
test
mov
in
clc
xchg
adc
sub
inc
or
and
sub
mov
and
fcompp
xor
push
(bad)
push
fisubr
jecxz
enter
ficom
and
arpl
jmp
int
daa
(bad)
dec
or
mov
xor
(bad)
xor
sub
daa
or
jne
mov
dec
out
rcr
hlt
nop
dec
mov
dec
les
push
std
cmp
cmp
pop
bound
dec
sti
pop
jle
dec
shr
ins
sub
pop
rcl
and
pop
adc
lock
sti
in
add
push
inc
lods
enter
cmp
enter
int
jge
dec
sub
add
dec
cmp
out
loop
mov
fadd
sbb
adc
inc
or
cwde
call
push
mov
cmp
cmp
cmp
sahf
pop
mov
(bad)
fisubr
popa
(bad)
pushf
mov
dec
mov
fild
outs
pop
dec
mov
out
push
xor
data16
int3
int3
fwait
(bad)
jno
clc
mov
neg
jle
jns
test
add
rcl
mov
test
or
pop
mov
test
loop
shl
mov
fs
sbb
inc
es
outs
jmp
int
xchg
pop
in
aas
test
pushf
dec
call
xor
mov
and
cwde
adc
in
addr16
mov
mov
(bad)
mov
push
push
jmp
sub
scas
imul
sub
call
inc
cmp
sub
int3
leave
cwde
mov
or
aaa
add
cmp
aas
xor
in
nop
cmp
sbb
popf
xchg
mov
(bad)
outs
out
lahf
xlat
adc
sbb
push
repnz
push
xchg
xchg
test
xchg
add
sbb
rcr
rcr
cmp
lock
jle
adc
call
outs
nop
push
dec
dec
cld
xchg
cmps
dec
xchg
and
fiadd
jmp
jne
out
add
dec
test
in
inc
std
aaa
call
mov
mov
(bad)
shr
(bad)
dec
int3
mov
sahf
rol
mov
repz
out
add
fwait
(bad)
out
push
ss
mov
push
fmul
xchg
test
movs
cmp
sbb
fld
adc
test
movs
push
aas
dec
inc
mov
mov
xchg
mov
jecxz
mov
test
xchg
shl
movs
pop
test
push
daa
icebp
movs
mov
jno
mov
repnz
into
pop
mov
inc
dec
dec
out
scas
je
push
push
out
scas
mov
out
pop
jb
mov
hlt
pop
popf
jb
dec
std
ret
add
pop
mov
xor
popf
cwde
addr16
ins
out
sub
dec
mov
mov
cmps
and
pop
sbb
loope
pushf
push
into
sti
mov
jnp
and
xchg
push
cdq
dec
pop
imul
fs
jecxz
rol
adc
push
or
call
int3
jle
ret
cmc
movs
mov
inc
fcmovbe
jbe
cdq
int
add
push
movs
out
bound
stos
stos
icebp
mov
xor
out
lods
mov
lods
and
data16
jg
sbb
cmp
fmul
pop
sub
sub
mov
retf
or
icebp
test
rcr
jp
leave
stc
cmp
shr
bnd
xor
adc
inc
xchg
mov
into
pop
rcl
sahf
inc
mov
mov
aam
hlt
push
adc
jg
loopne
ins
out
cmp
imul
out
inc
in
loopne
xor
add
push
mov
jnp
jge
adc
or
icebp
hlt
or
pop
cwde
shl
and
jns
retf
xchg
jae
jno
sub
cmp
dec
imul
or
imul
dec
xchg
and
cld
or
pop
test
daa
mov
sbb
mov
add
fidivr
xor
or
aad
ins
xchg
pop
repz
jae
mov
mov
cwde
xchg
(bad)
adc
inc
mov
mov
gs
mov
push
stos
jo
xor
inc
test
in
adc
in
cmp
jne
es
mov
pop
retf
push
jmp
add
mov
retf
in
(bad)
xor
jnp
inc
aam
adc
xor
sti
mul
in
mov
(bad)
in
std
retf
mov
dec
push
add
sbb
mov
dec
leave
sbb
stos
into
out
push
fadd
(bad)
jnp
loope
arpl
pop
xor
mov
mov
or
mov
push
imul
xor
lods
(bad)
hlt
add
popa
das
mov
mov
stos
lds
fiadd
add
popa
xchg
mov
push
test
dec
xor
cmp
mov
push
xchg
shr
dec
sub
and
out
iret
or
icebp
xchg
sbb
lea
xchg
repnz
xchg
and
jnp
mov
push
(bad)
jp
repz
aam
out
adc
dec
int3
sar
mov
in
sub
sub
push
jae
jbe
inc
mov
sub
add
into
mov
push
(bad)
icebp
cvttps2pi
cmp
daa
fdiv
jb
fs
sub
popa
stc
popf
aaa
fdivr
retf
aad
lea
popa
xor
fistp
push
jle
push
scas
(bad)
in
cmps
popa
and
mov
sub
jno
shr
jecxz
cmp
rol
add
xor
xchg
mov
adc
jo
mov
xchg
aas
cmp
mov
les
and
in
sbb
scas
dec
lods
mov
(bad)
out
cdq
das
xor
or
push
push
or
push
sub
or
xchg
sub
adc
rol
jmp
dec
push
sub
inc
das
xchg
mov
jo
out
test
rcl
daa
jg
xchg
jbe
repnz
jb
out
cmp
fistp
mov
mov
jo
mov
fucomi
sti
(bad)
inc
pop
push
nop
xchg
cmp
jg
test
jmp
or
test
les
repz
mov
xor
in
test
cwde
aad
push
ds
mov
sbb
rcl
mov
mov
aaa
fnsave
mov
xlat
mov
xchg
movs
xor
mov
xchg
mov
lahf
pop
sub
call
enter
aad
inc
pushf
gs
jno
sub
adc
pop
xchg
popa
test
sbb
xchg
dec
mov
ror
jge
cs
push
outs
jb
adc
mov
and
les
mov
mov
fs
stc
test
jmp
jl
push
xor
out
pushf
outs
pop
fild
iret
or
pop
test
mov
or
dec
retf
dec
test
pop
es
push
inc
jl
and
xor
and
pusha
rcr
dec
sub
sub
sbb
mov
jno
fidivr
and
push
aam
outs
dec
not
pop
(bad)
push
mov
pop
imul
inc
adc
add
jge
(bad)
int3
cmp
shl
popf
pop
pusha
mov
mov
push
inc
call
rol
push
sahf
pushf
xchg
push
gs
mov
add
adc
(bad)
and
shl
cmp
pop
es
jns
lahf
and
mov
into
lea
or
jns
movs
cdq
xchg
xor
push
mov
pop
or
push
dec
nop
push
test
ins
call
mov
mov
push
inc
popa
pop
cmc
mov
push
and
popf
push
int
jle
cmc
retf
inc
(bad)
push
xor
fsubr
call
neg
not
cmps
int3
pop
mov
cs
idiv
inc
popa
fsub
fnstenv
xchg
pop
xor
fist
sbb
adc
mov
pop
xchg
aam
jbe
mov
stos
adc
xchg
push
test
dec
inc
inc
gs
xor
aas
cmp
leave
sahf
dec
(bad)
fcom
and
mov
and
fwait
jge
les
clc
je
mov
mov
inc
pop
jp
sub
iret
pop
pusha
jb
out
adc
jo
xor
and
pop
mov
scas
rcr
add
push
retf
outs
in
(bad)
mov
mov
movs
(bad)
in
sbb
jbe
neg
mov
dec
inc
cmps
mov
cmp
lods
sub
mov
retf
sbb
mov
daa
xchg
mov
xchg
in
push
test
sub
push
popa
cwde
ret
jecxz
cld
or
in
mov
out
push
inc
dec
cmp
imul
jbe
lock
adc
aam
repnz
inc
and
int3
xchg
push
mov
xchg
inc
xchg
std
cmc
call
cwde
popa
aaa
dec
xchg
out
inc
aam
cmp
add
push
inc
dec
daa
sub
aas
pop
rcr
out
xlat
fdivr
pop
sbb
xor
sbb
inc
adc
out
ins
js
xor
push
dec
ds
loop
(bad)
icebp
aam
ror
jle
push
push
sub
lahf
in
adc
inc
neg
pusha
fistp
fiadd
xchg
adc
leave
or
xchg
inc
add
cwde
shr
lahf
js
adc
xchg
dec
ds
outs
and
data16
ret
pop
or
(bad)
iret
pushf
movhps
adc
cmp
mov
ins
xor
iret
cmp
and
add
jb
outs
push
or
push
(bad)
arpl
pop
mov
sbb
mov
jl
fisubr
xor
xor
retf
leave
(bad)
jg
ret
mov
jno
inc
xor
and
push
into
lds
scas
or
loop
dec
jne
push
mov
fcom
enter
shl
(bad)
sbb
xor
lds
sub
in
test
in
pushf
ja
sar
jle
mov
icebp
push
mov
push
popa
dec
into
sbb
push
(bad)
cmp
adc
test
sbb
movs
arpl
daa
test
cmp
sub
dec
mov
and
pop
outs
add
imul
fdiv
cs
xchg
xchg
mov
out
(bad)
add
jae
dec
(bad)
mov
inc
or
mov
adc
in
jle
js
(bad)
(bad)
jmp
mov
push
call
mov
pop
or
iret
test
dec
push
sbb
cmp
sbb
(bad)
fnstsw
pop
mov
cli
add
shr
cmp
push
push
sar
dec
cwde
jmp
or
das
imul
daa
inc
inc
inc
(bad)
mov
xor
bound
pusha
adc
sar
add
shl
jbe
dec
and
add
mov
hlt
sbb
rcl
xchg
add
xchg
scas
add
mov
dec
(bad)
cmp
add
ret
jbe
jle
and
addr16
jp
pop
jg
aam
(bad)
push
add
cli
ffreep
daa
js
pop
sbb
clc
mov
lahf
push
xor
adc
add
clc
or
dec
fdivr
xor
push
inc
xchg
(bad)
sbb
xchg
leave
jns
je
(bad)
daa
jae
push
jmp
xchg
sbb
adc
popf
xchg
sub
mov
icebp
cmps
adc
add
cmc
js
add
inc
jl
sbb
mov
es
icebp
inc
xor
cmp
imul
jl
test
jmp
bound
push
frstor
push
scas
lahf
test
aas
fwait
cmps
cmps
or
int3
adc
cmp
or
and
xchg
push
fs
cmc
not
or
adc
(bad)
xchg
sbb
push
ins
daa
xchg
aad
jb
cmp
(bad)
push
push
dec
mov
mov
inc
fs
push
call
sbb
and
jg
icebp
sbb
dec
cmp
sbb
ja
dec
sbb
aam
ins
inc
jp
movs
pop
cmp
mov
mov
xchg
std
imul
cmp
push
and
fbld
mov
add
mov
push
and
enter
jbe
xor
dec
mov
mov
pop
mov
pusha
add
les
movs
imul
push
cli
adc
dec
and
out
int
pop
sti
rcr
pop
repnz
fild
fld
js
inc
mov
xor
add
push
mov
and
xchg
outs
fs
push
xlat
cld
adc
jmp
xor
add
and
loop
jp
nop
dec
fmulp
(bad)
ja
and
mov
cmps
mov
pop
imul
adc
push
push
jo
xor
push
js
cs
adc
xchg
xchg
jl
cli
je
std
mov
shr
jmp
ret
clc
in
(bad)
nop
xor
scas
dec
push
ja
dec
pop
pop
daa
sbb
arpl
mov
adc
adc
enter
mov
stc
inc
dec
adc
stos
(bad)
fmulp
popa
mov
neg
push
je
mov
dec
popa
inc
repnz
cmc
in
mov
mov
inc
hlt
mov
pop
mov
stc
inc
xor
popa
pop
sub
ins
mov
mov
mov
fxch
mov
jnp
sub
scas
mov
mov
test
cli
fsub
dec
xor
lods
jl
icebp
adc
test
mov
ret
xchg
sti
cmp
(bad)
shl
int3
adc
call
gs
mov
add
mov
dec
aas
lea
xchg
inc
add
pop
lds
daa
jno
mov
mov
cmp
outs
dec
pop
dec
call
dec
cmc
test
xchg
mov
or
test
add
lods
adc
es
popf
cmps
fs
retf
imul
cmovae
test
aas
aam
add
lods
shr
push
mov
jge
ss
adc
inc
jl
movs
aaa
push
cs
out
rcl
aam
cmps
pop
std
loope
inc
sbb
pushf
push
dec
xchg
scas
xlat
shl
jb
in
mov
ins
lahf
xchg
sub
sar
push
dec
inc
pop
push
bound
out
outs
mov
imul
jbe
or
xchg
jb
push
and
je
jo
jb
shl
iret
dec
ror
lods
loop
pop
sub
xor
dec
and
pop
add
imul
dec
arpl
cmp
sub
fld
(bad)
ficomp
out
sar
fdivr
test
adc
pop
in
je
sbb
aas
xor
ficomp
sti
repnz
in
add
xchg
xlat
pop
ins
and
inc
ds
dec
std
clc
mul
dec
ins
(bad)
sti
mov
xchg
out
add
int3
jne
sub
xor
push
call
adc
(bad)
outs
cmp
mov
mov
out
out
stos
enter
mov
int3
es
ret
in
xor
or
fdivr
retf
mov
xlat
cmp
(bad)
pop
push
fs
mov
test
fnstenv
xor
scas
mov
jb
clc
enter
xchg
inc
imul
xchg
retf
(bad)
outs
adc
mov
cmp
enter
out
mov
es
xor
pop
mov
jecxz
xor
dec
or
fldcw
or
fcmove
xor
inc
push
scas
mov
xchg
in
lds
test
into
dec
lea
inc
and
dec
mov
cli
xchg
push
mov
mov
mov
outs
mov
cmp
ficomp
shl
inc
jo
ror
sbb
mov
push
and
jg
jecxz
idiv
test
jno
jp
lods
add
jns
mov
enter
clc
loopne
jle
fxtract
(bad)
call
inc
call
pop
jae
inc
ins
xor
cmps
ret
or
in
mov
xchg
bound
push
nop
mov
mul
xor
jmp
ror
je
push
lods
jbe
jge
xchg
cmp
cmc
leave
cmc
fcom
mov
je
or
add
mov
pop
inc
in
ret
cli
pusha
mov
cmp
xchg
(bad)
(bad)
cmp
stc
xor
nop
jecxz
cwde
jae
jmp
sar
not
les
or
push
scas
and
(bad)
shr
adc
fcom
dec
aam
cmp
push
stos
xchg
iret
ror
adc
aam
ins
or
es
adc
jl
mov
jne
stos
or
imul
sub
xor
and
test
int
ins
sub
pop
js
jb
push
xor
xor
cmp
jg
pop
mov
fild
cwde
or
aam
or
pcmpeqd
icebp
stc
or
and
jecxz
ds
ret
popf
jne
(bad)
in
mov
mov
popf
shl
push
or
movs
cmp
dec
push
not
push
push
lahf
das
clc
inc
mov
sub
inc
ret
fidivr
mov
add
mov
pop
sahf
mov
jle
leave
and
fisttp
dec
adc
test
xlat
jnp
jbe
(bad)
mov
imul
dec
xchg
jns
cmc
call
mov
dec
inc
mov
jnp
dec
pop
in
mov
dec
shl
mov
fucomp
test
mov
cwde
push
mov
std
pop
xlat
outs
or
rcl
lods
push
or
mov
or
push
inc
stc
xchg
lock
clc
dec
jae
retf
outs
jg
popf
dec
aad
jne
xchg
imul
mul
inc
adc
sub
xchg
popa
inc
stos
adc
xchg
mov
jmp
mov
mov
dec
jecxz
adc
or
test
in
not
sar
out
mov
retf
sub
jns
push
mov
pop
test
mov
cld
or
call
ins
scas
dec
adc
loopne
sar
ret
sub
cli
adc
nop
test
push
nop
cmps
jns
sub
das
fst
pop
data16
popf
popf
xor
lock
add
(bad)
sti
rol
int
sub
sahf
and
mov
add
outs
jnp
mov
js
data16
inc
call
test
popf
add
dec
and
repz
pop
mov
ds
dec
cmp
sbb
int3
xor
dec
cmp
imul
leave
scas
lea
adc
jbe
retf
test
add
inc
mov
jmp
sub
push
mov
push
(bad)
cs
outs
sbb
pop
xor
jno
jle
scas
and
outs
adc
cdq
sub
jp
(bad)
cld
dec
loope
call
xor
mov
sbb
lds
xchg
test
nop
(bad)
cwde
stos
mov
pop
push
mov
(bad)
and
sbb
pop
sbb
(bad)
cs
lds
jecxz
adc
loop
or
xchg
pop
xor
stc
dec
add
inc
aam
dec
addr16
shl
xor
cmp
int3
jecxz
add
pop
or
fnstsw
jae
adc
sbb
je
ins
xchg
call
jbe
inc
(bad)
cmp
test
es
cmp
leave
mov
mov
ret
cmp
jo
retf
add
jmp
inc
sub
clc
sub
test
inc
popf
xchg
push
mov
mov
inc
movs
loope
jge
icebp
add
push
or
aad
pop
push
out
mov
int
mov
mov
sbb
(bad)
xor
leave
bound
rcr
loopne
into
jnp
jnp
std
cmps
lock
and
out
cmp
les
sub
adc
ror
test
cwde
jg
or
into
jmp
popf
inc
sbb
sbb
aas
bnd
adc
mul
fistp
das
jmp
pushf
gs
cmps
add
cmp
or
mov
enter
and
xchg
xchg
jg
cmp
mov
pusha
fsub
and
jo
add
mov
arpl
popf
jbe
inc
mov
in
push
ret
js
cmps
mov
xor
push
test
in
or
shr
mov
fimul
or
test
mov
push
sub
jp
ret
jo
fisubr
mov
jmp
out
pop
cwde
nop
sbb
jmp
sbb
je
cld
xor
mul
(bad)
cld
ror
int
shr
pushf
std
mov
enter
movs
retf
cmps
data16
cmps
sub
lods
and
add
dec
xor
xchg
nop
shr
std
shr
test
add
mov
cld
outs
mov
add
cs
aad
adc
xor
out
scas
aaa
stc
sub
out
fcom
mov
push
out
stc
cmp
jl
outs
or
pushf
jne
and
test
(bad)
and
pop
outs
jle
ja
loopne
addr16
das
ja
sti
dec
pop
pop
jg
les
sbb
(bad)
sub
(bad)
imul
mov
gs
in
push
mov
xchg
repz
jle
cmps
jp
cdq
fs
or
pop
jmp
ss
dec
mov
xor
sar
adc
xor
sahf
push
jp
mov
lock
add
inc
xor
rol
pop
pushfw
std
and
or
nop
or
adc
xchg
adc
nop
inc
fst
loop
out
retf
sub
loopne
mov
push
jno
jle
xchg
icebp
call
in
xor
nop
dec
fmul
sbb
cmp
and
sbb
jecxz
sub
in
xchg
pop
and
test
cmc
jne
push
mov
and
pusha
xor
(bad)
arpl
je
mov
push
outs
mov
xor
jo
into
jnp
jbe
popf
sbb
pop
into
jg
lods
inc
pop
cmp
mov
imul
inc
movs
or
inc
xchg
mov
in
test
test
fs
xchg
sbb
push
mov
or
xor
cmp
fst
inc
xchg
inc
rcl
adc
arpl
aaa
mov
jae
mov
xor
adc
mov
jae
fsubr
pop
loop
add
sahf
inc
pushf
popa
xchg
jmp
jb
cmp
stc
pop
add
mov
adc
add
cmp
les
push
or
cwde
rcl
jg
sbb
pop
mov
stos
or
and
stos
mov
mov
jecxz
je
pop
xor
retf
push
in
and
test
call
xchg
imul
mov
xor
bound
sti
mov
ror
rcr
sar
cs
push
mov
push
jne
out
mov
movs
jecxz
xor
out
mov
jle
idiv
loopne
jno
cmp
dec
jo
data16
xchg
cli
cmp
sub
pop
jo
inc
adc
shl
aad
mov
and
call
pushf
push
mov
mov
or
push
pop
movs
dec
shl
test
adc
cmps
lods
pop
cmp
jns
push
inc
xor
sbb
and
push
dec
dec
xlat
or
jns
xchg
xchg
rol
fadd
mov
or
pop
cmp
cs
rcl
jg
and
int
retf
push
(bad)
shl
xchg
pushf
or
shl
addr16
adc
push
stc
sub
dec
adc
scas
cmp
inc
retf
es
mov
sub
ins
push
jge
jp
sub
ja
inc
minps
cmp
cmc
int
and
push
lods
jmp
dec
hlt
jnp
inc
clc
jl
pop
mov
arpl
lock
cmp
mov
movs
dec
adc
xchg
int3
add
test
fsubr
enter
pop
mov
xchg
mov
push
(bad)
mov
add
sar
mov
cli
test
sbb
stos
or
xor
stos
sti
scas
repz
adc
bound
aam
jecxz
mov
mov
pop
mov
leave
outs
add
fadd
mov
xor
pop
into
call
mov
imul
les
or
ss
sbb
imul
ret
cmp
loop
sti
push
adc
fdivr
out
jmp
xor
int
sub
xchg
cli
imul
(bad)
dec
mov
in
test
imul
pop
adc
mov
xchg
fdiv
dec
push
into
sub
enter
(bad)
retf
push
loopne
push
std
jmp
mov
dec
or
cs
loope
addr16
mov
or
nop
and
mov
jne
mov
xor
sub
pop
enter
clc
mov
outs
outs
repz
out
mov
sub
xlat
vmovaps
pop
sbb
loope
dec
es
popa
jo
sbb
sti
jmp
pop
arpl
xchg
mov
stos
jmp
nop
dec
stos
test
mov
stc
das
imul
mov
push
jecxz
push
and
fild
loop
(bad)
cmps
repz
dec
adc
movs
xor
add
test
dec
loopne
ret
lds
dec
mov
or
inc
push
mov
rcr
mov
sub
sub
dec
jecxz
mov
inc
push
fimul
cmps
xchg
mov
mov
adc
rol
outs
add
jg
and
inc
dec
mov
mov
or
out
add
mov
jmp
mov
jge
mov
jbe
lods
mov
cmps
cld
xchg
mov
mov
push
and
sub
ds
in
int
in
repnz
mov
pop
xlat
(bad)
not
push
mov
mov
jmp
nop
push
js
and
ins
fstp
imul
loopne
out
push
es
sub
or
packssdw
in
loope
or
test
call
cdq
clc
pop
xchg
push
cmp
or
mov
fs
sbb
jb
ret
rol
test
in
(bad)
xchg
test
pop
scas
mov
daa
imul
xchg
test
test
xchg
inc
sub
aas
mov
stc
out
push
xor
fsubr
clc
push
icebp
sbb
scas
mov
mov
push
aad
ret
es
rcl
fwait
push
ja
sar
test
call
arpl
mov
aas
jl
arpl
jg
jne
fld
xchg
mov
cmp
fldcw
jb
and
inc
neg
cmps
sbb
pop
clc
shl
je
enter
scas
je
mov
mov
out
addr16
adc
and
enter
pop
(bad)
stos
lods
js
sbb
push
shr
dec
aas
mov
sbb
fld
cwde
mov
rcr
movs
jg
sub
mov
xor
add
clc
jno
int3
test
lods
shr
cmp
loop
and
out
lock
(bad)
jo
mov
mov
and
(bad)
ret
cwde
mov
out
pop
daa
mov
int3
jbe
jecxz
fimul
cmp
mov
cmp
inc
jnp
cmp
adc
xchg
(bad)
cs
mov
cmp
and
faddp
or
aaa
shl
adc
push
iret
aad
jne
shl
stos
jmp
push
pushf
cmp
jb
movs
scas
movs
retf
call
inc
sbb
out
les
icebp
dec
pop
pop
push
mov
call
nop
retf
mov
icebp
addr16
out
mov
pop
and
neg
push
jnp
adc
and
dec
mov
shl
sub
adc
cwde
pop
mov
lds
adc
mov
lea
xor
mov
fstenv
cmp
ja
(bad)
mov
sub
jmp
sub
ja
sub
test
pop
addr16
fisttp
xchg
mov
and
jecxz
bound
test
sub
push
loop
sti
rep
aas
jae
div
(bad)
cli
mov
sbb
arpl
or
fstp
loopne
ret
mov
stc
ins
sub
and
stos
out
xchg
adc
fdiv
outs
and
(bad)
in
fs
mov
push
or
dec
mov
jg
int
cli
adc
sub
in
xchg
sbb
push
test
loopne
in
enter
xor
jae
fwait
iret
bound
mov
mov
sub
dec
cmp
adc
pop
out
leave
or
sub
mov
push
and
jg
popf
pop
add
(bad)
repnz
jge
ins
inc
add
sti
jbe
mov
mov
inc
fcomp
pop
sahf
call
ss
repnz
push
aad
adc
cmps
das
neg
test
(bad)
fcomp
(bad)
push
inc
xor
into
ror
lds
push
loop
sub
pop
jmp
xor
lahf
shl
movs
inc
push
push
dec
repz
popa
sub
cmp
fs
jp
adc
iret
int3
(bad)
stos
nop
mov
jge
shl
xchg
cmps
repz
and
mov
sbb
mov
push
pop
in
pop
leave
push
dec
ds
and
inc
std
cmps
(bad)
lods
movs
test
pop
iret
cmps
sub
cmps
vcmpps
fdivr
add
add
lds
mov
(bad)
adc
lea
addr16
push
xchg
adc
xchg
out
mov
call
sub
ss
sbb
aad
maxps
fisttp
sbb
pop
ins
pop
cmc
jae
xor
cs
cmp
sbb
sti
ja
and
rcl
adc
mov
arpl
push
inc
repz
nop
push
sti
mov
mov
jl
imul
dec
jg
push
jb
pop
lock
sub
lds
jp
(bad)
push
icebp
sbb
jbe
adc
loope
ja
xchg
aas
int
pop
ins
shr
xchg
out
lods
mov
inc
dec
scas
mov
cmps
push
pushf
movs
in
jl
xchg
and
enter
jns
nop
sub
lods
xlat
jle
sahf
adc
mov
test
push
pop
loopne
pop
cdq
es
or
mov
add
jnp
add
dec
xchg
sbb
call
in
add
and
pop
jmp
jge
data16
daa
xchg
fidivr
(bad)
xchg
into
iret
fnstenv
cmp
imul
sahf
arpl
sub
add
mov
push
out
cs
cmp
jg
dec
xor
jbe
out
cli
nop
inc
or
out
push
and
(bad)
push
div
nop
mov
or
mov
add
pop
mov
jle
ds
dec
out
fsubr
cs
aam
dec
and
or
test
jl
pop
xchg
mov
lds
out
mov
sbb
dec
adc
ins
ret
add
add
(bad)
mov
sub
jge
mov
mov
leave
in
mov
xchg
mov
push
(bad)
std
add
adc
leave
jmp
sub
or
push
cmp
ret
imul
mov
cmps
outs
push
call
xchg
dec
repnz
cmps
inc
push
hlt
dec
xchg
sub
fs
mov
es
xchg
addr16
mov
not
call
xchg
dec
ss
mov
jl
add
cld
jb
sub
loope
xchg
or
fisub
mov
adc
cmp
cmps
hlt
test
inc
sub
bound
mov
xor
cmp
ds
cmps
int3
movs
sbb
aaa
jecxz
or
and
in
popa
fcom
cmps
fadd
xchg
je
xor
or
ret
jne
xlat
fs
jle
sub
xchg
ror
pop
adc
sti
aaa
jl
mov
add
inc
adc
pop
jmp
bound
sbb
test
es
inc
sub
push
and
xchg
pop
xor
mov
fisttp
inc
sbb
pop
pop
mov
daa
fist
(bad)
lods
add
into
(bad)
cmp
inc
aam
jae
inc
push
xlat
xchg
mov
cmp
pushf
add
dec
aas
out
add
dec
dec
dec
or
inc
push
push
shr
mov
sub
test
pop
(bad)
sub
pop
enter
xlat
ror
or
pop
dec
bound
repnz
lock
les
out
jmp
jo
mov
jmp
cmps
call
out
mov
aaa
inc
iret
cwde
pop
jno
and
or
mov
(bad)
imul
ret
aas
mov
add
clc
xchg
rcl
push
mov
sbb
jmp
fild
sbb
mov
int3
inc
mov
jmp
std
mov
imul
xor
sbb
js
sub
test
pop
or
mov
(bad)
sub
and
nop
les
mov
in
dec
mov
(bad)
(bad)
jne
fisubr
ins
sbb
hlt
test
or
or
mov
sti
xchg
dec
adc
dec
xchg
pop
jge
inc
in
inc
jmp
cli
cli
scas
fdivr
sub
pop
(bad)
repnz
or
mov
xlat
out
das
mov
popa
inc
sub
adc
fs
enter
xor
(bad)
fs
clc
popf
(bad)
dec
dec
inc
cmps
mov
jle
pop
cwde
mov
into
add
lock
pop
and
dec
add
xchg
jle
test
xor
inc
jnp
inc
cld
ins
(bad)
inc
mov
mov
mov
push
shl
mov
jno
cdq
push
push
in
pop
and
xor
dec
cmp
sub
(bad)
or
xchg
xchg
xchg
jae
sar
(bad)
mov
jnp
cs
in
or
mov
pop
dec
mov
mov
mov
repz
(bad)
cmps
mov
mov
pop
xor
xor
inc
xchg
bound
cmc
ret
inc
shr
jnp
inc
shl
push
test
mov
leave
stos
or
mov
push
inc
and
inc
rol
sbb
jnp
mov
ins
retf
loope
push
mov
cs
outs
addr16
add
inc
xor
out
fwait
cld
and
stc
jb
inc
sti
inc
mov
lods
sub
pop
lock
and
and
out
clc
ror
cmp
xchg
or
add
mov
cmp
pop
ja
lds
xor
add
out
sbb
adc
mov
mov
and
add
iret
in
arpl
div
dec
pop
mov
in
xchg
out
push
je
mov
jmp
xchg
sar
scas
into
jns
push
mov
jnp
inc
or
pop
mov
cmp
mov
mov
in
add
cmps
dec
mov
(bad)
sti
mov
sbb
loop
xor
fst
repz
adc
outs
mov
jns
pop
outs
nop
xor
and
movs
xor
iret
into
push
push
les
arpl
or
xor
push
sbb
rcr
(bad)
(bad)
mov
gs
dec
mov
jecxz
adc
int3
test
sbb
sub
jecxz
cmp
dec
mov
cli
inc
mov
xlat
jecxz
retf
jnp
mov
xchg
mov
hlt
and
xchg
xchg
je
out
push
push
aad
out
inc
mov
or
mov
fnsave
add
sub
jmp
test
or
(bad)
mov
loopne
inc
add
mov
inc
xchg
fcomp
and
push
adc
mov
gs
jae
xchg
add
bound
pop
sbb
stos
mov
test
repz
sbb
mov
dec
in
mov
test
ds
in
pop
and
fcmovb
push
jmp
loop
mov
sbb
pop
pop
out
jb
pop
add
daa
and
sub
pop
push
sbb
in
movs
popf
les
fbstp
push
sbb
jmp
dec
not
pop
stos
scas
retf
cmp
push
int3
add
sub
and
out
dec
mov
inc
not
cmp
push
push
test
jno
sar
dec
jae
mov
fldenv
(bad)
sbb
xchg
pop
push
jl
lahf
or
push
push
sbb
add
pop
mov
jae
push
push
lahf
jp
xrstors
sbb
aam
lahf
jns
jno
lods
sub
mov
ja
outs
inc
sti
cmp
and
les
loopne
xor
dec
rcr
jb
pop
loopne
or
push
or
mov
cwde
or
jg
(bad)
inc
lods
daa
mov
hlt
cmps
les
mov
retf
loop
jmp
xlat
out
aad
push
leave
(bad)
sti
outs
ret
xchg
jno
cmp
popa
retf
dec
scas
sub
cmp
ret
jne
inc
cmp
in
(bad)
push
in
mov
sbb
push
pop
dec
add
jo
dec
push
jg
fsubr
and
pop
mov
movs
mov
les
dec
or
pop
cwde
std
xchg
jmp
leave
cmc
retf
aas
mov
fs
stos
sub
retf
adc
popa
dec
sub
repz
icebp
sbb
inc
aam
ret
push
aad
mov
fld
sbb
inc
lea
js
pusha
shl
loope
cs
jl
add
movs
dec
sbb
inc
push
jle
in
cwde
or
rol
add
imul
es
pushf
jecxz
sbb
mov
sub
jge
ret
dec
cmp
mov
mov
mov
into
push
mov
mov
aas
mov
push
sbb
lds
aas
sub
sub
fldenv
push
in
cmp
(bad)
fwait
jle
in
jne
ins
lods
push
jmp
cmp
mov
call
neg
cwde
retf
int3
retf
test
pop
enter
jno
out
inc
je
pop
jg
cmp
ins
fsubr
mov
sbb
test
push
jle
rol
imul
aas
shl
or
outs
xchg
mov
xchg
mov
add
cmp
adc
jbe
jae
in
and
pop
push
dec
ror
in
jb
xchg
mov
push
cmps
cmc
bound
cs
sub
aaa
push
cmp
out
aas
fwait
mov
loope
stos
adc
xor
dec
and
mov
fwait
push
add
(bad)
in
movs
inc
leave
or
in
out
nop
pushf
pop
pop
sub
add
jb
int3
jecxz
xchg
or
std
ins
adc
ins
(bad)
je
adc
mov
add
mov
sbb
jmp
nop
sbb
sbb
xchg
fsub
sbb
inc
pushf
inc
cmp
pop
mov
mov
xchg
push
sub
adc
rol
push
xor
mov
sbb
jb
call
(bad)
repnz
in
movs
and
dec
mov
cli
push
push
inc
(bad)
ins
pop
xlat
fldenv
push
push
cs
sub
loopne
jno
fcomip
hlt
pop
test
sub
sbb
sahf
into
test
push
or
dec
lods
sbb
xchg
xchg
dec
adc
sbb
hlt
push
sbb
aam
sahf
sbb
jns
mov
das
in
push
mov
test
scas
pop
test
jmp
jns
push
xchg
retf
pop
xlat
hlt
inc
frstor
mov
aaa
mov
dec
hlt
cmps
stos
and
or
movs
sbb
and
sbb
and
push
outs
cli
test
sub
jle
add
or
and
cmp
hlt
call
and
cli
jmp
adc
outs
add
push
cmp
xchg
mov
je
mov
scas
iret
ds
sub
push
and
popa
push
xchg
mov
cmp
repz
addr16
jmp
inc
mov
dec
push
jmp
and
ficomp
movs
push
fiadd
test
aas
loope
(bad)
ja
lahf
push
stc
and
ret
test
cmc
xor
mov
pop
jp
pop
mov
inc
push
jae
cmp
sbb
fimul
out
xlat
dec
mov
stos
or
enter
in
mov
push
or
sbb
inc
sahf
jecxz
es
retf
(bad)
cmps
sbb
jge
adc
or
enter
mov
js
in
jbe
dec
push
std
inc
pop
pop
mov
mov
aas
cli
mov
ficom
or
arpl
test
sbb
jb
outs
and
lods
jno
ja
sub
mov
retf
mov
bound
into
mov
jle
js
mov
into
adc
cmp
pusha
mov
shl
and
jg
dec
xor
aaa
cld
mov
xchg
sahf
inc
lds
jmp
cli
in
push
pop
mov
inc
jb
fcmovb
push
fs
or
scas
inc
loope
and
out
cli
test
cmp
jmp
popf
pop
push
das
popf
mov
cdq
push
cmp
shl
mov
inc
sub
inc
add
push
xor
pop
enter
mov
pop
(bad)
fistp
mov
jge
(bad)
out
sbb
aam
pop
jb
jl
arpl
out
mov
xor
adc
int
mov
pusha
mov
mov
lds
xchg
adc
add
cmps
in
mov
into
sbb
sbb
clc
aas
dec
cmp
or
mov
out
jns
out
out
and
mov
push
pop
xchg
ja
jno
loop
les
add
push
push
mov
inc
gs
loop
sub
inc
int3
movs
adc
aas
es
sub
push
and
jae
adc
lea
adc
jno
mov
or
or
lods
std
jp
retf
mov
mov
(bad)
pop
jecxz
or
(bad)
rol
mov
xor
cmc
push
aad
push
mov
dec
sahf
mov
outs
cmp
jae
pop
dec
sbb
repz
repz
fiadd
call
rcl
pop
mov
sar
mov
and
mov
push
ror
pop
cmp
jae
xor
mov
cmp
ins
lea
jg
sahf
rcl
daa
sbb
cmp
pop
sbb
out
loopne
adc
(bad)
push
retf
(bad)
adc
mov
sub
pop
xchg
mov
stos
xchg
pop
mov
cmp
popa
or
xchg
repnz
xchg
addr16
and
enter
pusha
popf
test
test
mov
dec
test
js
lds
pop
pop
pop
cmps
mov
xor
loope
xor
aam
ja
ja
xchg
sub
repz
mov
es
pop
xchg
jae
in
and
gs
sbb
daa
rcr
addr16
cmps
push
mov
xchg
mov
bound
fnstcw
popa
mov
xchg
jne
retf
shl
jle
push
sbb
cmp
xlat
cld
xor
test
mov
xlat
push
loop
ret
or
ins
pop
or
push
sbb
push
pop
xchg
std
faddp
mov
add
xchg
push
fist
icebp
adc
cld
xchg
jmp
stos
int3
repz
cmp
mov
dec
pop
sbb
fadd
retf
push
jl
add
mov
fs
icebp
jp
adc
imul
cmp
push
or
fsubr
push
push
mov
inc
movs
jmp
mov
loopne
sub
pmaxsw
je
aad
arpl
cmp
mov
sbb
repz
add
cmp
and
out
pop
sbb
push
xchg
test
xor
jns
add
push
rcr
fisub
jnp
popf
aas
data16
push
add
cmp
adc
rcl
sub
clc
jbe
mov
stos
mov
iret
mov
xor
xor
pushf
mov
add
daa
cld
test
sbb
dec
pusha
mov
sub
add
(bad)
stc
pop
cmp
out
add
fcomp
mov
les
xchg
dec
ss
cmps
sub
fcomp
sbb
fistp
add
adc
es
sub
mul
xor
xchg
xchg
jl
or
mov
cmp
jmp
add
mov
int3
pop
in
jmp
add
inc
mov
mov
jmp
xlat
sbb
out
adc
cmp
into
xor
hlt
ret
out
mov
xor
out
fsubr
ret
add
jmp
cwde
ja
jmp
jg
jmp
jne
out
es
call
(bad)
inc
sar
je
in
(bad)
add
mov
outs
out
mov
div
push
pop
pusha
cmps
push
retf
jns
xchg
ja
cwde
fcomp
mov
mov
dec
inc
xchg
hlt
push
add
sar
ins
jp
pop
ds
or
lea
inc
lods
xor
xchg
scas
test
xchg
stos
pop
or
add
pop
dec
jae
loope
outs
mov
repnz
sub
cli
pop
ins
and
mov
mov
movs
adc
in
xor
movs
sub
hlt
cmp
popa
push
jmp
xchg
add
les
hlt
cmp
movs
clc
cld
sub
xor
iret
and
push
fs
xor
cdq
pop
mov
pop
repz
and
icebp
pusha
cdq
enter
(bad)
mov
enter
icebp
xor
cmp
in
cmp
xor
pop
ins
movs
stos
adc
cld
ret
retf
mov
pop
inc
popa
call
jg
data16
add
fisub
sahf
sub
rol
jne
outs
jns
scas
js
popf
cmp
imul
push
ret
sbb
ret
xlat
xor
mov
pop
jmp
sti
ins
fcomp
mov
add
out
cmp
push
xor
jmp
jge
push
pop
jl
aad
cmps
js
and
dec
(bad)
jl
movs
jecxz
aaa
mov
mov
out
ret
xchg
xor
xchg
rcr
jg
(bad)
leave
cwde
cld
or
stos
mov
(bad)
sub
pop
push
les
jae
(bad)
jecxz
lods
shl
add
outs
cmp
mov
sbb
mov
xchg
fs
icebp
(bad)
push
(bad)
jmp
jmp
call
iret
js
frstor
aas
shr
ja
adc
mov
sub
sbb
push
push
xor
aas
jg
ins
push
int3
mov
xlat
push
(bad)
mov
aad
adc
xchg
jno
pop
sub
mov
cmp
push
sbb
mov
ror
nop
jcxz
mov
xchg
cmps
mov
cwde
lds
push
in
mov
mov
xor
add
arpl
repz
(bad)
popa
retf
jmp
adc
retf
xchg
jne
fsubrp
xor
repz
pop
(bad)
mov
sbb
int3
(bad)
and
shr
pop
jmp
retf
gs
xor
dec
push
pop
or
in
add
and
xchg
mov
push
ins
rcl
fnsave
xchg
adc
cmp
jmp
sub
cld
loop
inc
push
jae
cmps
aam
sbb
pop
sahf
pushf
xchg
cmp
dec
mov
in
jle
jmp
mov
sbb
in
sbb
test
popf
fdiv
retf
xchg
cmp
popf
and
mul
(bad)
mov
push
mov
bound
bound
dec
dec
cmp
and
jo
(bad)
push
call
push
pusha
mov
call
sub
xchg
xchg
mov
add
mov
mov
pop
ror
xchg
inc
mov
sbb
aas
or
lods
dec
xor
iret
ss
sti
mov
mov
pop
rep
test
sahf
lock
dec
nop
ret
add
and
mov
xchg
xchg
mov
dec
cld
inc
add
inc
sub
mov
loope
sar
cmps
aaa
pop
or
jecxz
inc
aad
cmps
pop
add
cmp
pop
pusha
in
cwde
cmp
inc
inc
or
jns
add
(bad)
sbb
shl
loope
push
call
push
or
in
add
dec
and
repnz
or
enter
sub
fbstp
jbe
fld
xchg
add
add
jmp
daa
inc
mov
call
es
loopne
pop
movs
fld
jbe
div
std
lods
cmp
pop
jbe
push
mov
out
push
int3
out
pop
icebp
jmp
add
dec
xor
cmc
dec
in
push
sbb
enter
pop
in
mov
pop
inc
cs
inc
adc
mov
test
adc
cmp
call
adc
pop
add
sbb
rcr
cmp
scas
push
test
mov
pusha
outs
xchg
aaa
add
fsubr
cld
test
(bad)
lahf
mov
into
or
adc
jmp
xchg
pop
pop
mov
mov
cdq
cs
or
ds
adc
jge
cmps
jmp
pop
mov
ins
mov
inc
jmp
stos
mov
sbb
xor
retf
mov
(bad)
sbb
bound
push
and
dec
gs
in
xchg
pop
pop
pop
ins
loope
int3
mov
xchg
adc
sbb
sti
and
add
sbb
ret
mov
into
pop
sahf
sbb
xchg
sbb
mov
push
dec
lods
retf
mov
mov
nop
add
movs
mov
mov
mov
cmc
test
mov
cmp
ja
jmp
rcr
out
imul
dec
push
and
movs
fidiv
arpl
ficomp
sub
jo
jmp
mov
adc
cli
xchg
dec
jp
rsqrtps
test
cmp
xchg
mov
pop
test
xchg
jp
ss
test
data16
mov
ret
xlat
jecxz
es
sbb
jl
mov
into
xchg
sub
pop
cmp
es
lods
add
out
xchg
cmp
pop
inc
xor
push
jnp
xchg
mov
add
out
stos
pop
pop
out
inc
lahf
mov
loop
mov
loop
aaa
or
inc
add
ret
mov
sub
cmp
(bad)
loopne
stos
pop
push
neg
test
and
ja
mov
cmp
push
sbb
add
gs
jmp
lea
pop
ins
cwde
pop
cwde
sub
inc
(bad)
sahf
push
mov
or
pop
cmps
mov
jne
or
jns
fisubr
ret
sahf
cli
add
mov
rcr
sbb
sti
pop
bound
retf
out
mov
shl
arpl
mov
pop
fcmovu
xchg
dec
mul
scas
sbb
fstp
fist
lock
xchg
mov
fld
sub
popf
out
pop
into
jle
cmp
jl
aaa
jae
sbb
pop
jne
ror
adc
xchg
fist
inc
cmp
in
mov
or
cmp
mov
ss
adc
adc
add
pusha
cs
pop
ss
or
jge
addr16
dec
mov
lahf
ds
xchg
fiadd
sbb
mov
add
shl
jno
jbe
fwait
push
(bad)
je
jle
ins
xchg
cli
adc
sub
aaa
and
sbb
mov
dec
or
mov
push
movs
out
imul
sub
btr
mov
mov
fidivr
mov
call
sbb
adc
pop
xchg
sbb
(bad)
(bad)
fbstp
push
xchg
repnz
call
push
repz
sbb
nop
mov
xor
les
sbb
or
and
mov
ins
mov
xchg
ja
mov
pop
dec
lds
icebp
fwait
dec
xchg
out
fisubr
cmp
xchg
adc
(bad)
fidiv
push
adc
mov
jb
or
dec
mov
push
pusha
in
pop
cmc
pop
shl
nop
leave
mov
inc
shr
jl
add
mov
push
out
fst
(bad)
sub
test
outs
outs
lea
add
jg
aam
data16
lods
xlat
repz
adc
leave
outs
xor
(bad)
mov
call
lods
pop
mov
ja
ret
call
enter
mov
mov
popf
loope
xor
jno
adc
mov
dec
cwde
cmps
add
outs
push
fs
ret
lock
leave
xchg
inc
mov
jp
jb
loopne
and
push
mov
int3
pop
mov
xor
cmp
lds
add
gs
or
into
fist
shl
xor
retf
push
mov
data16
add
pop
loop
cmps
test
or
jp
pop
retf
jbe
inc
shl
pop
jle
outs
ret
clc
push
ja
cmc
outs
jns
stos
into
or
fimul
inc
js
test
push
stc
lahf
gs
mov
pop
mov
outs
inc
mov
addr16
sub
movs
out
xchg
ficomp
inc
push
sbb
jmp
push
pop
push
prefetchwt1
mov
cld
scas
jmp
outs
aad
sub
xchg
retf
add
pop
std
sahf
sbb
fs
add
repz
pusha
xchg
in
popf
ins
movs
gs
jno
mov
sahf
les
mov
cli
xchg
shr
jbe
loop
test
jl
sbb
mov
fld
push
(bad)
jle
jle
leave
scas
and
movs
ins
inc
xchg
imul
iret
retf
pop
rol
cwde
and
mov
add
or
mul
xchg
xchg
ds
dec
push
xor
sar
dec
cli
int
cmp
repnz
xor
xchg
mov
xor
sub
outs
sub
push
sahf
xor
movups
and
ins
mov
add
and
in
ins
mov
popa
xchg
popa
loop
aaa
(bad)
mov
or
dec
imul
lods
loop
cmp
sub
jmp
xchg
int
mov
inc
pop
ds
xchg
or
sbb
mov
and
popf
dec
imul
or
(bad)
mov
loopne
shl
mov
xchg
sahf
mov
dec
aas
call
xchg
pop
adc
mov
test
xchg
loopne
or
jmp
jbe
inc
push
mov
pop
add
fidiv
lods
inc
mov
pop
xchg
dec
shr
aam
adc
push
cmps
pop
push
jl
sub
les
jle
ret
(bad)
push
cmp
pop
xor
pop
push
xor
and
dec
sbb
xchg
pop
push
pop
push
jns
inc
les
gs
js
aam
aaa
arpl
in
out
and
cld
fs
repz
inc
lock
xor
jg
pusha
or
sbb
sbb
or
scas
bound
sub
retf
xchg
test
push
(bad)
das
push
jle
cmps
rcr
loopne
fidivr
push
mov
mov
sub
adc
sahf
inc
loopne
data16
int3
pop
jmp
xchg
call
sbb
pop
dec
mov
stc
cwde
push
lock
inc
jp
ret
sbb
adc
mov
test
mov
pop
cmp
lods
and
mov
das
ficom
mov
sbb
pop
xchg
daa
neg
mov
or
mov
mov
rcl
(bad)
div
mov
cdq
daa
pop
or
mov
jbe
test
es
push
(bad)
jp
add
push
ficomp
pushf
rcl
mov
mov
xchg
dec
pop
outs
popf
test
sahf
mov
xchg
push
cmp
push
(bad)
arpl
shl
adc
jae
sar
jecxz
xor
jmp
xchg
or
or
rol
mov
retf
(bad)
out
cli
xchg
xchg
jmp
cmc
jg
push
mov
sbb
mov
lods
pop
lods
imul
cmp
neg
sub
dec
add
inc
pop
rol
fnstsw
dec
fst
mov
mov
mov
into
push
hlt
(bad)
push
and
shl
or
repz
(bad)
dec
jne
cld
fdiv
stos
bnd
repz
xchg
aaa
pop
fdiv
rcl
jno
jp
nop
adc
xor
adc
into
mov
sahf
(bad)
pop
mov
mov
push
daa
mov
mov
xor
or
cli
dec
ins
push
(bad)
clc
dec
jne
fxch
popa
push
sti
outs
or
mov
pop
lods
mov
cmc
rcl
or
in
dec
push
mov
pop
scas
gs
sbb
sti
pop
fcomp
mov
add
mov
int
adc
or
xchg
adc
pusha
lods
movs
mov
mov
int
in
pop
mov
movs
(bad)
lock
jle
add
mov
pop
xchg
jo
add
sar
sub
cdq
popf
cmp
daa
inc
movs
das
pop
sbb
mov
adc
std
sti
push
push
push
test
add
sbb
and
xchg
push
cmp
cwde
jmp
stos
cmp
and
sbb
sbb
push
xchg
ins
jle
stos
stc
pop
fwait
add
jge
enter
sbb
and
out
mov
leave
data16
inc
(bad)
lods
pop
xchg
test
jbe
not
test
cmp
xchg
and
scas
mov
shld
(bad)
push
cwde
inc
pop
sub
fcomp
jo
cs
and
(bad)
push
ficom
xchg
dec
cdq
jne
push
aam
cmp
mov
push
jno
jns
and
sbb
push
call
test
dec
lahf
sbb
int
xchg
jb
aam
retf
push
mov
call
pop
jb
or
mov
repnz
push
adc
aam
js
fst
xchg
hlt
scas
xor
and
mov
push
(bad)
out
mov
retf
lods
add
adc
lods
cld
xchg
ins
sti
push
and
gs
stos
or
sub
mov
mov
sbb
bnd
ins
lahf
adc
mov
pushf
(bad)
pusha
fild
adc
or
pusha
cli
mov
ins
loope
adc
stos
jae
in
inc
fnstsw
and
out
xlat
xor
shl
add
call
or
repz
sbb
rcr
cli
sahf
out
and
mov
loope
cmp
inc
mov
js
xor
dec
pop
popf
stos
pop
sub
jecxz
stos
dec
nop
cmp
cmc
hlt
mov
cmp
into
hlt
xor
(bad)
mov
mov
cmc
inc
mov
fistp
pusha
unpckhps
push
mov
xchg
ror
inc
mov
add
lock
and
jmp
inc
nop
sti
mov
fadd
xor
xchg
scas
jp
pusha
mov
dec
call
aad
imul
push
mul
push
push
sbb
adc
dec
push
addps
jge
xchg
jp
idiv
dec
xor
inc
neg
xor
push
xor
add
xchg
movs
outs
add
sbb
out
pop
sbb
test
inc
add
and
loopne
aam
sub
or
test
mov
retf
call
sti
cmps
push
or
nop
aas
fs
out
mov
cmp
add
ins
(bad)
jne
dec
sbb
loopne
cmp
stos
mov
inc
jno
test
mov
shl
mov
dec
pop
cmp
cmp
fcom
pushf
fmul
not
jl
jmp
enter
test
repnz
xchg
cwde
jae
ja
mov
verr
pop
and
cmp
loope
(bad)
or
pop
dec
das
cmp
add
mov
repz
aas
out
test
sbb
cld
mov
mov
(bad)
xor
dec
mov
retf
mov
cmp
jle
mov
das
stos
(bad)
cmp
sub
add
xor
call
hlt
scas
push
ret
or
adc
inc
(bad)
das
xor
push
add
(bad)
movs
xchg
(bad)
add
sbb
sub
push
xchg
call
scas
jg
jle
xchg
imul
push
sti
cwde
jb
adc
ret
add
repz
push
lea
add
mov
lock
or
hlt
repz
jecxz
sub
or
stos
mov
or
xor
mov
cmp
js
iret
lock
fdivr
pop
sub
jne
dec
cwde
stos
push
cmp
mov
rcl
sub
retf
imul
fdiv
xchg
fs
int3
es
retf
cmp
jg
add
jb
repz
lahf
dec
jno
sub
mov
popa
fiadd
adc
mul
aad
cdq
pushf
jne
clc
fcmovne
arpl
dec
push
cmp
cmc
xchg
popf
push
(bad)
cmps
xlat
sar
int
dec
xor
and
cmps
push
lahf
outs
out
out
ins
das
jb
adc
out
dec
std
jg
inc
inc
into
jmp
dec
mov
jl
jmp
pop
pop
jle
(bad)
jmp
pop
jg
mov
sub
sahf
out
popf
mov
mov
loope
aas
jne
aas
pop
enter
setns
mov
xchg
push
jl
das
inc
rcr
mov
daa
mov
xchg
sub
pop
mov
rol
stos
bound
push
mul
in
sbb
pusha
mov
mov
adc
jno
lods
test
jne
push
clc
daa
push
in
out
enter
jmp
jo
mov
(bad)
jmp
out
xor
in
jns
out
fmul
clc
pop
xchg
inc
add
inc
cmp
dec
das
push
cmps
xor
jg
and
jno
and
cmp
gs
mov
mov
jne
out
aas
mov
stc
loope
add
std
ror
test
add
add
lds
sbb
jmp
es
call
pusha
add
dec
cdq
adc
mov
cwde
in
xor
sub
lea
loop
ror
in
push
sbb
push
push
mov
std
and
dec
xor
dec
or
push
dec
bound
xchg
xor
sar
(bad)
xor
into
mov
inc
jp
adc
cmovle
hlt
ficomp
dec
into
stos
std
(bad)
mov
sub
push
cs
ret
add
cs
fwait
mov
xchg
adc
dec
stc
stos
in
lds
mov
fs
mov
sti
xchg
sbb
xchg
ja
jb
pop
movs
inc
sbb
add
pop
adc
mov
mov
xor
mov
and
inc
pushf
test
or
icebp
jb
jne
mov
loope
xchg
adc
(bad)
push
pop
test
sti
jo
test
scas
mov
scas
add
inc
repz
push
inc
xchg
mov
in
and
inc
adc
es
movs
cmp
sbb
mov
add
not
loope
popf
retf
out
cli
clc
xor
jb
dec
pop
mov
dec
ds
push
push
ret
movs
inc
inc
das
cmp
or
pop
or
or
mov
mov
push
jmp
pop
sbb
cmp
pop
jb
popa
xchg
adc
fmulp
pshufw
ret
(bad)
sbb
cwde
out
imul
(bad)
mov
dec
lea
inc
into
cwde
scas
mov
(bad)
lock
stc
fcom
cmp
dec
add
out
loop
xor
shl
push
sbb
sqrtps
dec
les
bound
mov
xlat
mov
mov
push
push
push
js
and
retf
repz
movs
sbb
daa
cmp
add
push
sub
into
add
stc
adc
mov
pusha
inc
push
repnz
push
mov
sahf
jge
ins
and
jge
stos
sub
jmp
lods
push
and
dec
out
loope
mov
test
cmp
push
mov
jg
xor
and
mov
rcr
or
push
cld
push
mov
sub
bound
or
mov
jno
mov
xor
dec
clc
mov
pop
push
int
push
pop
test
je
jmp
sbb
or
imul
jb
jecxz
push
lahf
scas
and
dec
xor
(bad)
(bad)
pop
pop
stos
loope
outs
mov
int3
stc
test
bnd
cmc
dec
push
out
cmp
popa
xchg
jg
aam
sub
call
pop
or
and
cmp
fidivr
inc
xchg
dec
repz
les
lods
inc
test
fld
push
xchg
mov
popf
sbb
(bad)
cs
loop
pushf
pop
inc
aad
sub
cs
inc
jp
shl
pop
hlt
nop
jge
add
or
and
pop
or
icebp
adc
fidivr
mov
mov
mov
inc
push
mov
or
mov
jl
outs
pop
lea
stos
dec
or
int
shl
cwde
out
pop
retf
inc
mov
pop
cmp
mov
aad
mov
lock
cs
hlt
fiadd
pop
mov
push
add
into
mov
cmp
adc
sub
push
test
adc
rcl
shl
div
cmp
dec
add
jge
dec
adc
repz
nop
movs
retf
out
out
fcomp
xchg
icebp
fadd
jecxz
sbb
ins
lods
pusha
shr
or
cmp
xchg
push
add
dec
mov
sbb
les
pushf
loop
inc
or
int3
cmp
sub
jp
push
mov
adc
sti
fistp
addr16
pop
dec
xchg
call
mov
mov
pop
jl
(bad)
scas
sub
cmps
push
fwait
lods
jecxz
mov
not
lock
mov
xchg
out
xchg
les
xor
pop
outs
inc
hlt
sub
and
fisubr
adc
js
mov
push
mov
pop
in
arpl
sub
outs
or
cwde
movs
xchg
pop
outs
(bad)
fdivr
pop
jb
popa
sub
pop
mov
or
fdiv
test
(bad)
jl
(bad)
xor
movs
jmp
or
push
inc
hlt
scas
shr
mov
add
mov
data16
sbb
lods
adc
aaa
fwait
inc
movs
je
add
sahf
les
xchg
dec
arpl
leave
repz
inc
mov
sbb
and
fsub
sbb
jmp
mov
jns
xchg
or
xor
or
cmps
add
loope
fsubr
sub
cmps
js
lods
inc
(bad)
outs
scas
add
mov
(bad)
xchg
lods
jg
jle
inc
std
lahf
adc
jecxz
push
inc
xchg
dec
jge
shl
enter
sar
jns
push
mov
out
stc
mov
ds
jbe
adc
or
test
xchg
or
and
push
es
push
(bad)
push
jbe
lods
int
add
(bad)
jo
xlat
ja
lahf
imul
pop
fmul
les
mov
xor
cmc
popa
pop
jmp
and
push
out
inc
pop
cmp
out
push
push
je
(bad)
xor
sub
clc
pop
jmp
fnstsw
xchg
cmp
and
sub
ds
inc
movs
sub
and
adc
cmps
push
fnsave
call
mov
fidiv
pop
inc
inc
stos
cwde
xchg
cmp
sti
add
into
xor
repz
loop
jnp
jnp
cmps
inc
pop
xchg
ds
jmp
imul
lods
mov
hlt
scas
js
lahf
sub
fdiv
ret
push
retf
inc
adc
sbb
jge
fsub
stos
push
xchg
xchg
or
ror
gs
ret
pop
addr16
sahf
jbe
or
cld
jl
ret
cmp
(bad)
or
adc
neg
mov
(bad)
mov
add
cmp
loop
add
or
ds
sbb
and
daa
mov
sti
or
xchg
sbb
ins
lea
(bad)
aad
xchg
push
jne
mov
mov
scas
xchg
xor
std
inc
xchg
shr
sbb
in
and
sbb
scas
pop
nop
in
fs
loop
call
push
add
enter
icebp
outs
ret
inc
fild
dec
jmp
movs
jae
ja
and
mov
sub
cld
stos
sub
inc
jbe
sbb
test
xor
xrelease
call
ss
add
inc
imul
int3
rcr
(bad)
cld
call
test
jo
xor
pop
push
sahf
jnp
sar
push
icebp
(bad)
pusha
adc
pop
stos
repz
int
sub
inc
imul
sbb
mov
mul
pop
mov
test
(bad)
jnp
imul
and
mov
loopne
sbb
mov
pop
sti
retf
jge
shr
or
mov
pop
fstp
dec
subps
dec
stc
aad
scas
(bad)
or
aaa
cs
in
push
mov
inc
sub
mov
shr
inc
loope
mov
push
and
rol
or
cmp
sub
hlt
push
leave
dec
pop
sub
scas
imul
fwait
lods
iret
add
dec
mov
xor
aad
sbb
or
stos
dec
popa
adc
mov
lds
jmp
ins
jl
xchg
xchg
xor
movs
jl
inc
add
mov
je
xor
pop
sbb
add
aad
mov
int3
arpl
aam
nop
adc
sahf
fbld
cmp
mov
mov
gs
jo
bound
mov
dec
dec
push
push
mov
cmp
dec
pop
lods
inc
mov
add
imul
popfw
in
sub
mov
aas
mov
xchg
cdq
shl
nop
fnsave
hlt
xchg
call
add
push
jl
(bad)
mov
sbb
cmp
cmps
ror
fsubr
in
xlat
push
add
push
sbb
or
shl
inc
in
outs
aaa
xchg
xchg
test
mov
or
dec
add
popf
cli
lea
cli
call
test
xor
sbb
or
das
mov
das
mul
push
push
loop
push
cmps
outs
xchg
adc
idiv
dec
fbstp
xchg
loopne
inc
imul
cmp
repz
jmp
psubw
mov
add
dec
mov
sbb
mov
retf
pop
lock
cmps
pop
cld
gs
mov
jne
(bad)
fist
adc
inc
pop
fmul
jge
mov
pushf
imul
int
xlat
in
fistp
lds
rcl
das
div
mov
inc
repnz
enter
sbb
dec
push
scas
xchg
push
xchg
xor
fs
or
(bad)
aas
pushf
cld
sbb
pop
and
lods
fs
mov
dec
xchg
rcr
xlat
pop
call
xlat
mov
(bad)
adc
fs
lds
hlt
cmp
inc
and
sbb
(bad)
dec
cmps
cmp
sub
xchg
and
xchg
push
(bad)
sub
mov
pop
mov
mov
stos
xor
call
sti
rcl
mov
push
sub
or
jge
(bad)
mov
push
mov
dec
test
outs
sub
scas
lahf
leave
repz
sub
fist
test
pop
jns
push
mov
icebp
out
jge
mov
jno
cmp
pop
jno
cmp
and
add
retf
jbe
hlt
stc
mov
push
pop
mov
out
fldenv
mov
push
mov
mov
sti
fstp
pop
or
adc
and
xor
ins
call
shr
and
jl
dec
aas
dec
mov
adc
push
(bad)
adc
out
jp
retf
xor
mov
xchg
xchg
sbb
or
aad
outs
mov
pop
cwde
jg
bound
(bad)
sub
iret
fstp
inc
aaa
in
adc
cmp
retf
and
push
xchg
xchg
fnstsw
jnp
cmp
xchg
ret
loopne
cmp
lock
adc
adc
test
(bad)
das
outs
das
mul
jge
mov
xor
or
jg
jae
rcl
scas
add
in
cmp
loope
jb
test
cmp
test
cmps
and
cmp
xchg
popa
sbb
imul
sbb
cmp
mov
out
xchg
push
addr16
add
xor
mov
pop
outs
cmp
mov
mov
cmp
xchg
es
inc
int3
xor
fwait
data16
sti
cmp
rol
mov
iret
add
mov
lds
scas
xor
sbb
(bad)
hlt
inc
addr16
frstor
out
sti
xchg
pop
xchg
jnp
mov
sbb
fnstcw
imul
sbb
adc
pop
cmc
dec
je
mov
adc
fdiv
pop
mov
mov
aad
daa
dec
in
popf
push
push
pop
retf
push
jg
add
jmp
mov
cmp
fdivr
mov
jle
xchg
std
stos
mov
jne
push
mov
ds
xchg
test
pop
mov
je
and
and
sbb
jbe
(bad)
fmul
or
mov
jb
setle
std
push
push
out
sub
cmp
lods
inc
dec
sbb
test
dec
out
dec
in
mov
jle
pop
lahf
inc
and
das
loopne
cmp
(bad)
in
inc
lods
aaa
loope
loope
inc
imul
push
mov
mov
loop
int
daa
and
push
mov
ret
lods
push
mov
fs
and
sbb
dec
or
aaa
shr
mov
jl
sub
mov
adc
bswap
xchg
dec
xchg
sbb
mov
shl
cdq
or
in
pop
push
push
cwde
jo
loope
inc
adc
(bad)
imul
xchg
and
test
xchg
(bad)
push
add
arpl
sub
cmps
iret
sbb
int3
push
sub
pop
push
inc
pop
mov
mov
mov
scas
cmps
pop
call
mov
push
aas
(bad)
push
add
dec
pop
jo
sahf
pop
lahf
xchg
call
retf
pop
sub
pop
dec
(bad)
sahf
dec
(bad)
mov
inc
mov
pop
dec
in
jmp
push
outs
sar
and
mov
jle
dec
add
ds
sbb
dec
xor
out
mov
cmc
std
or
dec
enter
test
push
xor
push
sbb
scas
addr16
pop
xor
pop
adc
sbb
or
push
cld
mov
outs
(bad)
push
mov
fdivr
jbe
ret
fist
retf
xor
scas
jp
add
dec
cmp
inc
add
xor
das
in
dec
jnp
push
cwde
mov
fsubp
jo
inc
pop
scas
jge
sahf
xor
sub
sbb
xor
repz
fisttp
ja
sbb
loope
mov
jne
and
dec
outs
inc
inc
test
inc
xchg
sub
push
adc
nop
(bad)
(bad)
call
adc
cmp
pop
add
out
or
imul
out
push
and
fnstcw
retf
aas
jecxz
push
cld
adc
mov
es
(bad)
ror
arpl
jecxz
mov
vpmovd2m
dec
xor
loop
pop
mov
xor
cwde
push
add
loopne
ss
movs
scas
cmc
addr16
cmp
hlt
sbb
sub
push
push
cs
pop
mov
and
sti
jns
pop
mov
mov
imul
hlt
jp
sub
in
movs
mov
out
loopne
rcl
xchg
adc
push
push
fidivr
in
xchg
rol
fwait
push
(bad)
mov
ss
inc
scas
cmp
popa
inc
imul
in
mov
mov
sbb
stos
shr
xchg
es
push
cmp
sbb
xchg
fbstp
jnp
mov
test
mov
fmul
(bad)
call
fs
dec
add
pop
iret
test
xchg
inc
sahf
dec
xor
or
mov
mov
lds
jae
bound
jl
push
xor
dec
pop
push
js
shl
jbe
dec
pop
movs
iret
pop
mov
call
ins
add
mov
jns
in
xchg
sti
inc
cmps
or
addr16
hlt
int
xchg
ret
pop
dec
repnz
rcl
jmp
out
and
push
cdq
jnp
inc
add
dec
dec
fild
pop
fnstsw
push
add
xlat
cmp
mov
sub
push
mov
inc
mov
clc
sub
adc
jl
fmul
push
push
iret
(bad)
in
push
or
dec
xchg
fidiv
aaa
out
rol
inc
xchg
dec
jmp
push
sbb
cmp
cmp
lock
popa
leave
(bad)
adc
adc
add
neg
jge
dec
inc
pop
fistp
push
dec
pop
or
repz
retf
jbe
pop
pushf
push
ins
jmp
or
dec
std
push
pusha
cld
or
jno
iret
jg
dec
inc
push
js
nop
push
aam
inc
stos
mov
sub
cs
fdivp
sub
ins
into
xchg
repz
add
stc
sbb
call
loopne
pusha
xchg
mov
fld
fs
jnp
jg
out
add
fs
sub
mov
shl
test
fxam
add
push
mov
sub
shl
sbb
adc
aaa
(bad)
xor
stos
mov
push
xchg
data16
push
mov
mov
pop
add
bound
jmp
lock
sub
scas
mov
in
ja
jle
(bad)
sub
mov
mov
cmps
adc
or
and
mov
and
fisubr
xchg
ret
pop
xchg
add
cmp
bndldx
sub
mov
and
test
ins
fsubp
sbb
sar
(bad)
cmc
ds
cmp
push
cmp
dec
inc
mov
xchg
stc
fnstenv
push
(bad)
xchg
or
mov
pop
std
(bad)
or
mov
sub
dec
fiadd
retf
ret
ja
retf
pusha
(bad)
aam
pop
imul
and
stos
ins
(bad)
ror
fmul
shl
dec
jae
pop
dec
lods
ins
(bad)
subps
pop
dec
mov
dec
(bad)
xlat
mov
or
inc
cmp
icebp
xchg
(bad)
mov
sub
push
jno
lock
sbb
adc
add
jns
lods
mov
scas
push
add
aad
(bad)
mov
daa
and
pop
jbe
cdq
xchg
mov
push
pop
jmp
ds
in
or
xchg
retf
loope
cmp
pop
imul
mov
sar
mov
fwait
jl
cwde
pop
nop
adc
inc
ins
dec
xchg
mov
jle
xor
hlt
hlt
jmp
push
dec
ins
push
cdq
or
into
jge
ss
dec
push
mov
pop
fild
mov
push
sbb
push
rcl
push
or
daa
push
dec
inc
test
scas
call
jo
mov
retf
(bad)
loop
outs
xchg
sub
pop
ret
mov
xor
cmps
adc
fwait
pusha
das
add
fwait
xor
fwait
sub
mov
imul
cmc
add
cld
jno
jno
fld
and
pop
mov
mov
push
inc
mov
nop
lahf
call
cmp
mov
push
lods
std
add
cmps
xchg
pop
imul
ins
pop
sub
and
(bad)
aaa
cmc
sti
mov
sbb
test
pop
sub
mov
or
clc
dec
mov
(bad)
xchg
inc
add
popa
outs
pop
jle
fist
sti
adc
icebp
inc
inc
inc
jecxz
scas
ret
adc
xor
test
inc
fimul
dec
(bad)
cmps
outs
dec
mov
into
and
and
and
call
adc
pushf
call
mov
stos
dec
scas
mov
aam
in
sub
je
push
sbb
cld
inc
sub
sbb
push
fisubr
movs
(bad)
sub
inc
ins
popa
add
xor
js
in
test
gs
xlat
dec
mov
nop
int
jmp
rcr
push
dec
ja
retf
movs
(bad)
sub
(bad)
cmp
adc
add
add
sbb
int
pop
pop
stos
add
fistp
add
rol
jp
sub
mov
inc
add
outs
sbb
push
ret
repnz
or
and
shr
push
(bad)
adc
lods
add
or
sahf
retf
out
mul
sub
sti
adc
xchg
daa
cmps
jp
movs
rep
dec
gs
cmp
test
and
pop
xor
or
or
pop
aas
sbb
pushf
bound
cmps
mov
sar
stos
sti
call
pop
scas
cli
test
mov
xor
movs
test
jae
ins
cdq
jl
push
aad
jmp
sahf
lahf
xchg
sub
mov
shl
adc
mov
push
test
adc
pop
ret
call
pop
iret
ins
push
jl
sub
bound
lods
xor
mov
inc
es
movs
push
test
sub
push
xor
mov
int3
cmp
pop
xor
xor
xlat
jp
in
test
loopne
loopne
shl
outs
call
jmp
daa
fisub
mov
repnz
cmp
xchg
je
xor
addr16
in
jbe
inc
sbb
sbb
push
pop
push
and
mov
int3
sub
fsub
mov
sti
aad
jae
repnz
adc
and
rol
add
lahf
pop
(bad)
aaa
inc
mov
test
(bad)
out
push
dec
in
sub
jo
scas
or
imul
pop
inc
std
in
mov
pop
mov
in
and
dec
jge
aaa
fdiv
dec
icebp
dec
jne
or
jecxz
jmp
aaa
push
rcl
mov
std
arpl
pop
les
bound
popa
dec
push
cmp
lock
xchg
mov
pop
call
js
imul
enter
mov
or
fldcw
sbb
into
and
daa
or
fbld
xor
xlat
pop
inc
aad
xchg
or
push
pushf
daa
test
sub
pxor
outs
jg
into
jb
mov
jecxz
ds
jmp
jno
and
outs
lea
cmp
aas
icebp
sbb
push
nop
cwde
xor
cs
pop
loopne
gs
(bad)
mov
jmp
dec
adc
push
pop
inc
cs
jae
mov
jmp
leave
jge
cmp
fistp
scas
mov
or
pop
adc
and
and
sub
cmp
xor
mov
ss
pop
pop
mov
ins
adc
and
and
pushf
and
ins
cmp
adc
mov
sbb
leave
aaa
retf
leave
dec
dec
add
out
cmps
shr
lock
sub
mov
and
(bad)
and
pop
imul
jl
fwait
mov
bound
lock
rol
rcl
retf
sbb
fmul
(bad)
push
cmp
and
sub
fwait
cmp
rol
dec
cmps
dec
ret
stos
aaa
xlat
shr
inc
mov
fs
stos
fimul
push
imul
lods
(bad)
mov
jge
jecxz
hlt
mov
iret
ins
mov
fcmovne
cmps
or
xchg
dec
sub
xor
cmp
jmp
cmp
mov
ret
out
pop
shl
scas
mov
dec
jg
mov
mov
ins
scas
rcr
das
sahf
pushf
popa
adc
push
daa
cmps
push
lods
cmps
movs
add
into
mov
je
psubsw
stos
neg
aad
adc
ins
xchg
lods
pusha
inc
(bad)
pop
enter
out
mov
cmp
jns
mov
cs
push
sbb
imul
ins
mul
daa
mov
mov
fnstcw
and
cmp
test
cli
jge
cmps
pop
shufps
ins
xor
sbb
xchg
mov
dec
jecxz
les
jo
mov
inc
fmul
and
xor
add
mov
sbb
hlt
fldenv
pop
mov
loope
xor
fnstsw
jo
dec
and
inc
je
xchg
push
jl
xchg
ret
dec
js
shr
xchg
(bad)
and
adc
mov
outs
jl
cmp
leave
lods
outs
mov
xchg
out
repnz
adc
inc
xlat
xchg
inc
ds
mov
pushf
mov
out
fldcw
push
jge
push
fnsave
mov
sbb
aam
cmp
inc
push
daa
loop
mov
xchg
out
sbb
xchg
xchg
mov
ins
sbb
mov
pop
push
push
push
xchg
mov
test
xchg
ret
addr16
rcr
pop
test
sti
jl
and
rcr
mov
pop
(bad)
iret
sbb
sbb
push
out
mov
sti
xchg
add
lea
pop
mov
popf
or
push
inc
hlt
sub
jmp
scas
clc
or
inc
jo
xlat
cmp
inc
mov
out
pop
rol
mov
dec
arpl
in
adc
aad
mov
enter
rcl
es
pop
add
sub
mov
cmp
not
stos
xabort
loopne
add
dec
cmps
outs
scas
das
je
or
jb
call
mov
pushf
xor
pop
cmp
ja
xchg
mov
js
jae
fwait
push
mov
neg
fwait
sub
stos
leave
sar
sub
mov
and
xor
xor
push
dec
repz
mov
adc
(bad)
je
stc
adc
sub
(bad)
mov
mov
lods
fisub
enter
leave
mov
(bad)
cmp
ds
inc
jmp
mov
adc
dec
aaa
or
sub
icebp
lea
outs
hlt
jl
sub
clc
pop
(bad)
pop
adc
dec
adc
inc
inc
dec
daa
(bad)
cdq
mov
adc
pushf
xchg
xchg
push
push
xor
test
imul
jo
adc
repz
pop
pop
jno
mov
enter
inc
mov
jge
jp
push
lds
lods
cdq
enter
mov
clc
or
aad
sub
sar
cmp
push
hlt
jmp
je
or
ror
fcom
in
dec
push
inc
mov
imul
add
mov
dec
sbb
shr
mov
daa
ret
add
retf
inc
dec
pop
ds
nop
and
shr
pop
mov
inc
arpl
mov
loope
ret
fnsave
mov
in
sub
call
xchg
(bad)
aam
movs
mov
pusha
inc
and
clc
inc
xchg
jecxz
dec
sbb
jns
lds
mov
fwait
sub
cs
mov
sub
call
xlat
xchg
leave
xchg
sbb
dec
sub
ja
jge
dec
inc
dec
cwde
inc
loop
pop
(bad)
cli
adc
(bad)
cmp
lods
mov
jmp
xchg
addr16
imul
fild
fs
and
xchg
adc
xchg
outs
popa
ret
mov
shl
mov
push
data16
cmp
pusha
xchg
or
jns
leave
mov
out
push
ror
mov
(bad)
cmps
cli
in
jno
in
cmp
mov
pop
jnp
inc
pusha
xor
and
fisttp
dec
jnp
test
enter
lods
movs
push
add
call
add
jns
(bad)
xor
mov
mov
pop
xchg
inc
jmp
pop
std
inc
test
and
sbb
inc
ja
sbb
dec
or
adc
in
fs
mov
sub
test
aad
push
or
popf
sub
sbb
dec
add
out
adc
dec
call
xchg
and
inc
(bad)
add
dec
push
cmp
test
mov
xor
mov
mov
jle
xor
sub
mov
adc
jmp
(bad)
je
jno
and
idiv
out
jnp
out
enter
push
or
push
lods
in
or
jmp
xor
mov
jb
cli
inc
cmp
imul
xor
or
scas
jno
add
mov
or
leave
dec
mov
xor
push
retf
stos
mov
cli
or
sbb
ret
xlat
inc
push
sti
mov
xchg
pop
add
aad
xchg
pop
jl
lods
jno
sbb
ficom
mov
lods
mov
adc
leave
add
(bad)
out
pop
imul
xor
mov
sbb
sar
sti
popa
in
inc
retf
dec
enter
sbb
je
sti
in
xchg
cwde
mov
movs
call
sbb
inc
outs
mov
repnz
sbb
mov
mov
mov
xchg
xchg
cdq
pop
xchg
jne
adc
and
pushf
jp
inc
xor
pop
int
jmp
cli
mov
lods
dec
mov
ror
into
cmps
or
call
nop
adc
pop
inc
iret
xchg
and
int
adc
fcomp
shl
add
popa
scas
or
mov
stc
push
loope
arpl
shl
loopne
add
and
outs
(bad)
jl
stos
sub
jae
lods
dec
xor
push
sbb
xchg
pop
adc
xlat
gs
dec
fcom
neg
in
cmp
ins
cmps
pop
lea
jb
mov
dec
or
cmp
div
or
xchg
inc
mov
ss
lods
xor
sub
outs
jmp
xor
stos
xchg
div
sbb
xchg
sbb
add
and
dec
mov
mov
in
sbb
add
lds
sub
ds
sub
ins
(bad)
aad
pop
shr
or
add
inc
inc
mov
div
clc
xchg
pop
ret
sub
sbb
xor
mov
mov
cmp
add
or
inc
jle
jae
xchg
(bad)
jg
add
jl
sbb
stc
pusha
mov
pop
outs
lock
ud2
inc
fldenv
sti
inc
xchg
dec
pop
das
retf
adc
js
stos
outs
mov
sbb
jae
lods
mov
outs
lahf
xchg
int
xchg
pop
pushf
add
mov
or
jae
cmp
dec
das
cdq
or
cwde
xchg
movs
fdiv
or
rcr
jmp
call
adc
mov
arpl
ror
xor
cmps
data16
es
mov
xchg
cmp
jb
and
push
inc
adc
cmp
inc
out
dec
add
mov
dec
xorps
fsub
test
or
fstp
sbb
fistp
cmp
mov
xchg
and
push
scas
jle
fist
into
mov
push
inc
sbb
daa
pop
pop
bound
inc
dec
cs
and
pop
cmps
and
and
add
or
push
test
push
lock
mov
push
add
ja
bound
test
(bad)
ss
mov
jns
nop
dec
mov
scas
daa
lahf
int
jmp
aaa
aam
retf
mov
mov
add
gs
rol
call
and
cmps
jmp
dec
sbb
mov
sbb
cmp
aas
xchg
scas
sti
xor
jmp
mov
dec
ret
or
(bad)
mov
retf
icebp
push
pop
xchg
hlt
sbb
or
jo
call
fwait
pop
jb
out
dec
loop
push
rol
xor
adc
aaa
add
mov
out
xchg
je
lock
pop
mov
pop
test
stos
or
sub
out
add
xchg
fidivr
into
stc
test
jbe
icebp
pop
nop
jle
loopne
mov
jl
jle
or
mov
hlt
repnz
add
in
outs
mov
stc
fsubr
cwde
jecxz
mov
pop
(bad)
das
jae
(bad)
fld
out
mov
or
and
jb
outs
shl
(bad)
mov
cmp
sub
dec
arpl
(bad)
push
movs
mov
lods
jmp
(bad)
dec
scas
inc
mov
and
(bad)
sub
pop
jecxz
push
loope
mov
mov
in
mov
mov
jge
call
pop
inc
or
stos
cmp
mov
sub
iret
sbb
(bad)
ins
jp
retf
sbb
push
pop
dec
pop
lds
les
aam
lods
out
rol
pop
push
and
cdq
test
fidivr
sub
ins
test
or
jb
sahf
xor
enter
fsub
loope
push
sub
icebp
mov
outs
xor
lods
cmp
mov
fdiv
xchg
sbb
xchg
or
hlt
dec
push
addr16
jg
inc
stc
xor
imul
test
mov
adc
fldenv
fs
mov
xor
mov
pop
cmpxchg
rol
movs
adc
mov
inc
mov
aad
mov
sub
aas
add
into
pusha
xchg
ret
xchg
mov
fsub
push
dec
das
sti
or
fdiv
mov
retw
jmp
stc
xchg
push
push
jecxz
mov
dec
sub
dec
in
dec
adc
pop
pop
and
sar
shl
fs
lock
jmp
sub
adc
jbe
sahf
scas
dec
sub
lahf
mov
lahf
sbb
inc
ja
xor
and
adc
xchg
inc
mov
inc
push
ins
adc
adc
ficom
jmp
cmp
lea
dec
push
pop
fstp
jbe
mov
push
cmp
xchg
xchg
jne
lock
je
xchg
or
or
inc
xor
xor
fwait
jmp
popa
xchg
mov
jmp
cmps
inc
xchg
mov
adc
(bad)
fidiv
ds
pop
(bad)
mov
aas
inc
sub
hlt
mov
sahf
mov
add
or
nop
inc
test
pop
add
push
push
sbb
sub
add
mov
int3
pop
inc
scas
movs
mov
push
and
xchg
jbe
ds
call
pop
or
inc
scas
or
retf
and
sub
or
jp
and
xor
inc
mov
add
pop
outs
in
dec
mov
inc
sub
sub
cmp
jns
inc
pop
popa
pop
ja
lods
imul
xchg
inc
outs
popf
adc
push
sbb
sub
pop
pop
pop
xor
mov
shr
imul
outs
cmp
cs
pop
inc
je
mov
sub
shr
pop
push
cmps
stos
(bad)
push
jecxz
fisubr
arpl
sti
adc
and
pop
ret
out
lock
mul
cmp
jle
test
in
cmp
stos
inc
jbe
retf
pop
jp
ds
xchg
sti
jecxz
test
dec
push
sahf
mov
mov
cmp
mov
std
das
out
out
mov
mov
mov
xlat
fwait
js
and
in
add
push
xchg
mov
retf
mov
and
(bad)
shl
std
xchg
xchg
ror
fsubr
mov
jnp
cmps
fwait
add
add
adc
jnp
in
push
imul
push
inc
adc
dec
fs
add
pop
ret
out
xchg
mov
jmp
in
(bad)
pop
mov
movs
mov
mov
inc
cwde
iret
outs
sub
fsubr
sar
stc
repz
pop
push
fsub
mov
scas
out
xchg
push
mov
lahf
and
pop
test
jne
js
rcr
(bad)
sub
stc
adc
xor
jecxz
adc
not
or
adc
pop
cwde
pop
pusha
out
scas
mov
shr
adc
add
out
cld
jae
popf
or
push
ins
enter
out
jmp
xchg
jnp
and
or
fs
xchg
inc
push
test
sar
mov
rcl
pusha
shr
cmps
outs
cmp
test
adc
out
jp
rol
test
push
cmps
jp
test
or
mov
and
icebp
fistp
fistp
out
push
cmp
test
pop
or
mov
mov
mul
leave
jne
pop
mov
das
ret
pop
xor
(bad)
out
jne
je
fwait
xchg
fadd
addr16
arpl
mov
popa
mov
loope
scas
mov
mov
add
inc
mov
stos
in
push
sbb
mov
sbb
jae
into
xchg
mov
mov
mov
scas
stos
pusha
daa
xor
or
mov
sahf
push
fnsave
mov
addr16
xchg
stos
call
xchg
aad
and
fs
push
das
adc
sbb
js
(bad)
in
test
mov
sub
test
push
(bad)
add
loope
inc
jmp
pushf
mov
je
repz
add
lar
dec
xchg
cmp
xor
jbe
xor
cwde
std
cmp
mov
mov
pop
cmc
cmp
mov
es
ins
mov
mov
pop
inc
addr16
jo
jp
jecxz
mov
xchg
mov
pusha
stc
aam
fnstcw
adc
mov
int
dec
rol
test
or
adc
loope
fisubr
xor
fstp
mov
cwde
mov
les
ret
and
dec
xchg
push
push
xor
push
cmp
and
mov
and
aas
fisttp
mov
cs
and
aaa
sub
div
lea
xor
mov
add
aaa
jge
cmps
les
call
sti
fisubr
loop
shl
sbb
mov
dec
add
mov
sahf
or
push
adc
scas
mov
adc
mov
adc
rcl
out
cs
gs
icebp
movs
pushf
inc
std
icebp
stos
cmp
or
(bad)
push
stc
pop
add
add
std
lods
mov
dec
xor
and
sti
mov
clc
push
aad
mov
mov
out
ficomp
ror
stos
dec
xor
sbb
xchg
cmp
dec
jg
arpl
mov
pop
mov
stos
adc
jle
push
loopne
xchg
ins
pushf
push
cs
stos
jno
gs
mov
jg
or
xor
movs
dec
or
xor
xor
xchg
popf
call
push
inc
test
mov
xor
sbb
fistp
loope
test
cmp
scas
outs
push
adc
inc
lea
outs
pop
(bad)
xor
jmp
push
retf
push
jge
xor
cmc
xchg
sub
jne
inc
jl
es
mov
mov
shr
stos
jmp
cmp
pop
or
mov
dec
push
ins
ret
mov
je
rol
int3
mov
and
pop
fld1
jp
std
test
and
xor
mov
cmc
adc
dec
mov
test
bnd
push
mov
aas
sub
xor
pop
or
mov
pop
cmp
jo
leave
cdq
push
push
and
lea
mov
sub
out
call
pop
pop
dec
add
cld
(bad)
xchg
(bad)
arpl
std
div
cwde
and
xor
sbb
pop
loop
jge
iret
call
adc
jno
jge
retf
dec
xor
sub
aam
mov
loopne
fisub
sahf
pop
jmp
sub
das
sti
call
push
cs
mov
add
into
ret
or
cdq
jmp
pusha
jno
cmc
xchg
xor
pop
pop
repz
clc
pop
shl
mov
mov
dec
hlt
and
mov
sbb
sub
sbb
xor
push
or
mov
mov
(bad)
repz
push
in
dec
sub
retf
hlt
xor
pop
enter
and
pop
das
shl
sub
call
into
clc
push
xor
mov
arpl
adc
sub
xchg
clc
test
push
dec
ret
icebp
fwait
int3
mov
ds
int3
mov
pop
pop
fbstp
shl
test
pop
mov
rcr
mov
js
inc
push
xor
leave
inc
and
test
(bad)
in
mov
jmp
jle
popf
add
sbb
cli
dec
(bad)
aas
xchg
imul
add
cs
mov
mov
jnp
arpl
in
jno
repz
repz
rcr
mov
dec
imul
rcl
imul
dec
fldln2
jmp
or
pop
out
mov
jns
push
pop
fldenv
push
das
aaa
sub
(bad)
xlat
mov
repnz
loopne
mov
mov
jo
bound
mov
out
fcmovbe
addr16
jle
or
cdq
xor
aam
jb
(bad)
adc
xor
test
call
mov
ins
cmp
hlt
cli
lock
scas
jo
es
(bad)
clc
inc
mul
xchg
push
and
ficomp
into
xchg
retf
jecxz
rcr
lods
cmps
inc
jg
push
aas
daa
(bad)
and
aas
arpl
and
mov
out
scas
push
push
shl
in
xor
movs
jo
mov
cmp
xchg
sub
nop
rcr
aad
mov
push
outs
jbe
push
inc
xor
or
push
adc
or
imul
sbb
sub
jecxz
sbb
jp
mov
mov
inc
xchg
adc
in
mov
push
add
imul
push
stos
call
outs
rcl
mov
test
jno
push
aam
pop
dec
push
pop
jge
pusha
or
mov
inc
cmp
fwait
sbb
in
and
aas
lea
sbb
cmc
sub
mov
and
or
aad
add
stc
jecxz
inc
jb
imul
sti
or
dec
xchg
retf
test
scas
lods
(bad)
pop
inc
es
mov
pop
or
icebp
inc
lods
in
add
mov
lea
cmps
out
(bad)
jbe
test
out
adc
jp
adc
cmp
shl
(bad)
imul
in
movs
mov
sub
in
repnz
fcmovne
test
and
shr
add
out
sbb
(bad)
sbb
(bad)
cmp
fdivr
xchg
retf
sub
in
(bad)
adc
popf
xor
cdq
hlt
xor
or
xchg
mov
mov
out
or
mov
sub
sahf
out
hlt
jbe
or
jg
leave
dec
inc
mov
mov
push
pop
jns
mov
ror
nop
pop
jle
es
push
in
hlt
ja
shl
in
xchg
sub
and
push
push
(bad)
repz
out
imul
je
xchg
push
loopne
add
repnz
xor
mov
sub
pop
mov
lds
in
bound
stos
icebp
into
mov
sbb
fisttp
int
cmp
adc
jmp
and
push
dec
vmovlps
fist
inc
ins
mov
inc
stos
fldcw
push
mov
lahf
cmp
cli
lods
cdq
and
or
ins
loop
scas
xor
int3
out
mov
cld
mov
dec
mov
je
dec
cmc
inc
and
jle
shl
inc
and
not
adc
mov
out
lock
mov
inc
mov
mov
fwait
nop
popa
ins
xchg
inc
jmp
jp
in
ins
test
cmp
cmc
or
sub
mov
mov
dec
cmp
dec
(bad)
shl
mov
cwde
imul
les
repz
sbb
xlat
adc
sub
(bad)
dec
in
xchg
popa
in
mov
shl
mov
pushf
pop
out
jns
in
outs
push
cld
and
mov
mov
cmp
adc
mov
aas
or
inc
cmp
imul
adc
and
add
sahf
mov
mov
cmp
xor
mov
or
push
add
cdq
mov
lds
pop
pop
mov
jecxz
adc
xor
in
mov
cmp
sbb
cmps
movs
push
inc
or
(bad)
cmp
sti
out
add
shr
xlat
fdivr
mov
std
push
or
sahf
jge
sbb
mov
ja
imul
loope
test
add
inc
aas
outs
(bad)
je
cwde
sbb
jecxz
(bad)
jbe
push
inc
enter
sub
xor
add
push
in
adc
sub
loop
pop
add
stc
aaa
xor
aad
jnp
inc
sbb
xchg
in
sbb
int3
movs
pop
add
movs
ins
inc
mov
xchg
and
add
sub
(bad)
cbw
aaa
sar
mov
mov
push
inc
and
dec
es
jo
adc
mov
inc
or
icebp
fcos
sahf
cmp
cmp
sahf
push
ror
adc
push
and
fs
inc
rcr
mov
xor
push
mov
bound
cli
outs
ret
cmp
ret
and
push
icebp
imul
dec
dec
stos
and
retf
mov
in
dec
div
sbb
imul
arpl
jb
aas
dec
xor
adc
in
or
adc
(bad)
mov
and
cmp
je
sar
loopne
aad
or
lods
jl
adc
in
cdq
sbb
(bad)
cwde
cmps
fnstsw
gs
imul
arpl
add
sub
mov
std
sti
mov
aad
mov
xlat
movs
(bad)
scas
dec
mov
cmp
(bad)
call
inc
sub
shl
push
push
cdq
mov
ror
jmp
lods
fsubr
ss
fwait
push
inc
xor
fdivp
inc
push
les
adc
jo
jmp
daa
lods
add
pop
mov
jo
mov
sub
add
test
cdq
lods
hlt
xlat
push
sub
fdivr
jmp
retf
in
repnz
and
sbb
or
cmp
xchg
sbb
fisub
adc
jp
jns
data16
call
inc
cmp
aaa
fidiv
sub
js
xor
cmp
or
and
sar
rol
mov
fwait
jmp
xor
add
dec
lds
or
inc
stos
or
sbb
shr
and
jl
jg
fcom
or
loopne
leave
scas
loope
or
repz
cs
(bad)
js
repz
in
inc
jp
test
pop
mov
pop
lock
call
sub
sbb
jbe
(bad)
cmp
fcomp
and
inc
push
mov
mov
mov
push
test
add
mov
pop
sbb
(bad)
fst
cmp
push
mov
aas
mov
mov
stos
pop
call
push
and
add
in
ins
adc
sbb
mov
(bad)
sbb
push
cld
mov
sub
adc
cmc
inc
hlt
jb
lea
dec
je
cmps
mov
jmp
or
scas
jge
aas
adc
mov
leave
adc
or
jmp
jg
pop
test
in
cmp
ret
loop
repz
push
call
lea
(bad)
into
xlat
ret
and
(bad)
push
sub
cmc
and
loopne
ss
jecxz
jecxz
push
clc
xor
mov
clc
shr
mov
clc
jne
push
(bad)
push
cld
lock
int3
fcomi
aaa
test
pmaddwd
add
cmp
adc
mov
pusha
shl
add
mov
in
fisub
xor
int3
xchg
sub
mov
test
inc
mov
or
in
push
pop
jns
mov
dec
fdiv
or
daa
femms
pushf
out
jmp
es
out
cld
(bad)
dec
cdq
inc
js
dec
adc
stos
push
jmp
out
xchg
icebp
adc
(bad)
pop
push
fcom
mov
adc
repz
xchg
hlt
out
(bad)
(bad)
shr
mov
mov
pushf
xor
aam
pushf
test
aad
add
outs
mov
push
test
rol
or
hlt
mov
pop
xor
rcl
mov
fldz
fisubr
cs
cmp
daa
cwde
rol
ret
dec
(bad)
dec
ds
aaa
dec
out
dec
and
jmp
loopne
out
inc
inc
adc
sub
fcomp
sahf
mov
mov
cdq
hlt
jmp
je
push
cmp
cmp
fcmovu
xchg
(bad)
retf
pop
and
out
test
outs
retf
push
aam
dec
sub
pop
fcmovbe
sub
sub
sub
pusha
lock
pop
pop
fdivr
pop
retf
dec
inc
dec
bound
mov
(bad)
mov
push
and
and
imul
mov
add
push
sti
inc
xchg
pop
cmp
mov
xchg
or
nop
inc
xor
test
mov
(bad)
pushf
push
dec
cmp
mov
xor
xor
mov
adc
ret
dec
sbb
sbb
lahf
xchg
sbb
adc
jle
shl
enter
and
cld
pop
test
gs
clc
xchg
imul
fisttp
movs
jl
(bad)
push
fisubr
cmp
mov
adc
sbb
stc
test
call
in
dec
and
cld
pop
ret
loope
mov
or
cld
test
adc
xor
add
stc
les
adc
dec
cmp
fldenv
iret
icebp
mov
mov
fdivp
dec
pop
out
pop
std
stos
mov
es
pop
sar
jp
shl
out
mov
pop
mov
pop
jo
adc
es
or
jae
jne
scas
xlat
ret
xor
or
and
fcom
or
jl
aad
add
addr16
xchg
or
scas
mov
mov
inc
sub
sbb
lds
loopne
cdq
push
inc
jp
addr16
fild
loopne
cmp
sub
ret
dec
xor
mov
xor
out
mov
loope
out
and
fdiv
jbe
retf
hlt
dec
and
fcomp
xor
cdq
dec
out
aas
push
or
push
add
out
jmp
xchg
or
adc
push
or
mov
sti
cmp
and
outs
arpl
push
pop
inc
mul
mov
stos
jl
popa
aaa
or
loopne
shl
in
add
shr
ret
fiadd
push
fs
loope
xchg
das
ficomp
and
data16
ud1
ins
pushf
retf
(bad)
in
fdivr
mov
cmp
cmp
adc
daa
popf
inc
mov
xor
mul
bound
xor
lea
test
lods
les
in
mov
idiv
mov
xchg
ins
movs
aas
call
jns
popf
sti
cdq
movs
mul
jp
xor
and
jle
mov
test
push
pop
mov
xchg
call
mov
and
movs
cmp
scas
clc
cmp
mov
sub
sbb
mov
imul
ja
ja
jl
xchg
(bad)
std
loope
adc
imul
add
call
xchg
pop
pop
idiv
add
push
loope
jbe
jb
sub
push
dec
retf
sti
mov
bound
(bad)
aam
into
or
adc
cmp
mov
xor
add
jmp
loop
lods
int3
inc
sub
jmp
and
and
sbb
push
ss
imul
ret
pop
out
dec
mov
dec
mov
lea
xchg
sar
xchg
cmp
sar
js
adc
ins
daa
ret
imul
push
jne
dec
dec
mov
dec
sbb
xor
push
arpl
in
lds
mov
mov
into
lock
dec
mov
sub
xor
adc
shl
popf
pop
and
arpl
xor
lahf
pop
not
push
mov
adc
sar
mov
xchg
push
stos
sub
gs
push
fistp
lea
push
inc
push
int3
jmp
imul
jbe
xchg
or
repz
pop
lahf
mov
mov
lock
mov
xor
inc
jge
adc
add
sub
inc
test
stos
cdq
imul
mov
push
sbb
sbb
stc
loop
(bad)
push
test
or
out
mov
jno
aad
pop
bound
and
sub
ret
std
in
jg
fistp
inc
lods
sub
movs
mov
lock
lahf
and
fwait
(bad)
cmp
jmp
cmp
loop
cmps
retf
lods
outs
scas
jl
rcr
enter
call
in
sbb
or
sahf
push
pop
pop
push
add
jle
jbe
in
ins
imul
aam
xchg
mov
xor
xor
rol
test
pop
inc
movs
pop
stos
add
mov
fst
call
fwait
sbb
push
add
jnp
cs
adc
sub
xor
or
add
sbb
xchg
push
aas
retf
int
inc
call
gs
imul
or
stos
jl
xor
shl
dec
adc
cld
das
adc
aaa
aaa
sub
rol
addr16
retf
sbb
xchg
rcr
mov
jnp
jno
or
rcr
cmp
je
xor
ret
xor
shr
or
retf
mov
xchg
sub
dec
and
mov
mov
mov
dec
pop
jl
lds
xchg
jns
pop
mov
call
call
aas
fidiv
cld
xor
std
rol
add
(bad)
xlat
mov
or
cmp
cmc
pop
arpl
sbb
push
mov
xchg
xchg
jge
je
sbb
push
xchg
sub
pusha
popf
test
sbb
test
arpl
or
fs
add
jbe
xchg
inc
cli
loop
mov
sub
inc
jnp
push
gs
adc
adc
push
sbb
stc
neg
and
cwde
jl
nop
(bad)
js
stc
push
aaa
fldcw
or
jmp
rcr
stos
and
ins
or
or
cdq
imul
dec
mov
sbb
and
fs
xor
xor
add
xchg
in
fmul
mov
and
movs
or
out
or
rol
cli
mov
fwait
idiv
add
data16
add
sti
sbb
rcl
inc
pop
xchg
dec
push
cmps
lods
fcomp
xor
fcmovnbe
sub
jmp
loopne
in
cmps
adc
loop
rcl
pop
daa
outs
add
push
outs
scas
sbb
rcr
dec
mov
scas
sub
jmp
fiadd
xchg
mov
mov
pop
adc
nop
les
cld
mov
pop
jge
xchg
clc
shl
mov
and
jl
adc
retf
sub
jg
and
xchg
cld
rol
(bad)
mov
(bad)
jbe
fsubr
xor
ins
inc
mov
xchg
mov
sar
std
add
movs
fiadd
sub
and
and
cmp
xor
retf
(bad)
mov
clc
adc
adc
in
mov
adc
aas
test
xor
icebp
jle
(bad)
sahf
loopne
mov
sub
jmp
xor
lods
jmp
stc
adc
cmp
rcr
xchg
inc
sbb
cmp
in
std
call
or
in
fidiv
xchg
cmp
or
jmp
into
fwait
call
nop
sbb
xor
fs
pop
push
ret
mov
adc
ror
fnstcw
xchg
jno
jbe
adc
xchg
push
push
xchg
jge
repz
cmp
mov
add
fiadd
pop
add
and
cld
dec
call
xchg
ins
stos
mov
mov
push
pop
mov
inc
cmp
dec
stos
mov
js
push
test
fsub
jno
outs
mov
push
(bad)
nop
mov
inc
pop
cld
xor
int3
inc
push
scas
outs
popf
jno
stc
mov
push
mov
cli
ret
shl
or
int3
pop
mov
sub
push
fcmovnu
or
(bad)
cmp
push
mov
lahf
and
jmp
sbb
idiv
inc
(bad)
mov
movs
or
add
cmp
and
mov
jmp
in
dec
dec
add
xor
or
sbb
push
and
or
pop
je
iret
(bad)
ret
mov
cmc
pusha
retf
xchg
fs
das
or
xor
mov
xchg
push
pop
jno
cmp
lods
mov
xor
xchg
xchg
in
jecxz
mov
and
int
mov
test
jns
fisttp
cmp
(bad)
into
aad
pop
fcmove
and
cmp
lahf
gs
mov
cli
push
inc
inc
daa
and
(bad)
(bad)
mov
dec
in
xchg
(bad)
jmp
aas
push
inc
das
sbb
jle
or
aaa
jne
and
push
sbb
add
and
inc
fiadd
pusha
inc
je
cld
stos
adc
out
sar
cmps
dec
pop
mov
jmp
add
and
ss
cld
ret
pop
inc
outs
data16
xchg
or
cs
sub
xchg
and
adc
aad
les
(bad)
mov
jo
mov
mov
and
retf
fsubr
jne
enter
(bad)
out
cmp
sbb
jne
xchg
add
or
push
ins
(bad)
pop
add
aad
sub
push
inc
retf
pop
shl
mov
mov
retf
sbb
stc
and
sbb
cmps
into
mov
lods
inc
add
and
repz
add
sbb
arpl
loope
mov
add
and
dec
mov
ss
pop
stos
lods
cli
sub
aad
cwde
cmp
cld
adc
sub
dec
xor
and
daa
add
pusha
dec
inc
aad
sar
sub
dec
mov
push
jge
sbb
(bad)
mov
(bad)
xchg
ret
mov
retf
aad
test
push
out
cmps
mov
fimul
sub
stc
mov
sub
sti
or
mov
aam
mov
and
jmp
push
mov
mov
or
xchg
aaa
pop
dec
out
test
cmp
ja
xor
test
shr
shl
or
pop
jo
enter
std
dec
(bad)
sbb
cmp
sbb
sub
adc
and
fcomp
rcl
out
cdq
mov
in
int3
sti
sub
test
add
shr
mov
vpslldq
add
ds
inc
xchg
inc
xor
lahf
stc
fldenv
mov
fidivr
out
mov
pop
xchg
stos
test
fidivr
dec
idiv
xchg
retf
mov
xchg
pop
sbb
cmp
xor
(bad)
xor
adc
add
push
sub
int3
dec
push
or
sti
pop
xchg
lds
cmp
(bad)
mov
pop
idiv
sub
dec
jnp
jp
add
lods
cmp
xor
fsubrp
pop
int
in
pop
lods
dec
mov
aas
loopne
inc
jg
daa
pop
into
cld
loope
jecxz
loopne
adc
add
adc
scas
and
sub
and
sbb
in
js
add
sub
inc
xor
rol
xchg
test
xchg
scas
(bad)
in
xor
mov
bnd
hlt
lods
into
add
push
push
lahf
fsub
mov
mov
mov
jmp
pop
cmp
ffree
fistp
cdq
lahf
mov
mov
movs
sub
gs
fisttp
cmp
xchg
cmp
and
pop
cmp
push
out
int
jle
aaa
aam
cli
test
push
adc
mov
adc
jmp
cmp
sar
dec
push
push
add
or
jg
mov
dec
lds
ret
pop
jns
dec
adc
fld
leave
xor
push
icebp
fld
add
cs
into
cmp
jmp
cld
dec
cmp
xchg
dec
data16
xor
test
test
pop
xchg
addr16
inc
adc
cmp
sbb
loope
jnp
imul
cmps
mov
or
mov
or
daa
push
inc
or
mov
jo
mov
scas
repnz
bound
(bad)
test
xchg
add
out
movs
mov
jle
cmps
cmp
shl
scas
xor
jmp
push
lds
and
dec
cmps
js
ss
adc
push
sbb
arpl
fmul
mov
test
cmc
in
retf
jl
and
push
(bad)
push
in
adc
jl
xor
(bad)
das
xchg
or
mov
sub
daa
mov
fimul
mov
sbb
jb
out
test
ds
mov
jmp
pop
pop
nop
test
push
outs
int3
pop
push
imul
jnp
or
push
ins
mov
lods
xchg
push
xor
mov
mov
mov
jmp
dec
mov
cmp
imul
shl
and
out
push
lods
adc
ret
and
fst
mov
dec
mov
pop
jmp
mov
pop
test
leave
inc
dec
push
pop
les
(bad)
(bad)
ficomp
js
in
stc
push
fimul
mov
iret
arpl
movs
je
xchg
mov
xchg
push
loop
sbb
test
jle
mov
sub
das
gs
xchg
sub
rep
sub
shl
add
popf
mov
xchg
shl
cmp
sbb
push
pushf
mov
hlt
into
sti
loopne
(bad)
fst
xchg
add
push
mov
xor
out
das
ds
int3
push
repnz
popa
and
dec
hlt
push
push
mov
das
sbb
mov
sbb
sbb
cmps
xchg
lods
popa
fldenv
std
push
pop
pop
stos
repz
push
mov
mov
mov
xchg
pop
sbb
rcl
sbb
pop
mov
xlat
ltr
jo
mov
cmp
stos
xchg
div
mov
cdq
cwde
adc
mov
jbe
sbb
or
xor
and
jp
fpatan
mov
sahf
push
fidiv
test
lods
push
mov
dec
xchg
pusha
lds
pop
adc
pop
xchg
xchg
pop
daa
std
jg
in
and
xlat
sub
sbb
and
xchg
outs
sbb
pop
jmp
push
test
mov
cmp
dec
jmp
data16
push
aad
popf
int3
sbb
(bad)
pop
sahf
dec
pop
outs
hlt
jp
nop
leave
inc
add
inc
push
dec
xchg
sbb
mov
adc
jmp
mov
push
das
in
inc
or
cld
call
sbb
movlps
out
fadd
adc
sub
inc
jo
push
sbb
icebp
xlat
aaa
push
push
and
jl
arpl
cmovo
inc
and
cmp
std
and
mov
mov
mov
mov
int3
push
add
push
fcomip
sub
popf
mov
(bad)
mov
mov
pop
arpl
mov
(bad)
shl
pop
and
lods
ds
sub
jge
out
int
mov
iret
pop
mov
(bad)
push
das
xchg
mov
pop
in
mov
test
xor
fdiv
pop
fiadd
cmp
test
ja
and
pop
mov
test
clc
cmc
cmps
push
push
sbb
xchg
(bad)
pop
or
sbb
cmps
and
jle
and
cmp
mov
in
enter
mov
mov
retf
add
sub
repz
movs
stos
mov
mov
pop
cmp
bound
call
pop
xlat
retf
repz
lock
xlat
cmp
sbb
or
xchg
xor
arpl
popa
sub
or
pushf
push
je
adc
dec
add
add
psubusb
mov
mov
fcmovnu
scas
pop
cwde
test
xchg
adc
pushf
shr
or
fwait
(bad)
dec
xor
imul
xchg
clc
sub
fsubr
sbb
mov
iret
cli
adc
sub
adc
sub
add
xchg
arpl
loope
mov
fcomp
xor
lods
pop
mov
push
rcr
fstp
fidiv
nop
(bad)
mov
popa
jmp
mov
add
push
ss
mov
movs
sbb
call
jb
or
sub
out
repnz
test
daa
pop
hlt
int
cmp
push
pop
cmp
mov
adc
neg
and
es
cdq
pushf
jmp
sub
push
fdivr
add
addr16
add
sbb
shr
jno
pop
mov
xchg
cmc
xchg
(bad)
fimul
test
jle
mov
test
out
lock
and
jb
in
sar
test
cmp
ss
or
push
lds
ret
or
pop
xor
push
fld
(bad)
(bad)
xor
inc
and
add
test
test
inc
ret
call
mov
cli
push
mov
add
dec
mov
cli
div
gs
xor
adc
xchg
call
retf
repz
ins
out
mov
call
adc
adc
push
jb
mov
mov
(bad)
enter
outs
add
sahf
lea
push
jmp
in
sbb
test
ret
mov
ins
es
jmp
in
xor
dec
xor
aaa
adc
ror
ins
mov
aaa
imul
in
jo
cdq
lods
or
ret
lds
xchg
in
lock
add
sbb
pushf
fisubr
stos
retf
inc
mov
mov
add
in
mov
mov
aam
xor
hlt
and
cmps
cdq
adc
idiv
not
mov
addr16
iret
add
outs
addr16
sbb
mov
cmp
pop
add
xor
bound
pop
and
je
lods
xor
dec
add
adc
es
cld
bound
(bad)
xchg
rol
pop
dec
scas
push
cs
jno
add
data16
pop
shr
mov
ins
stos
jle
movs
das
movs
mov
js
pop
cwde
xor
mov
iret
sub
and
xchg
sar
cmps
cmc
addr16
out
popf
ins
inc
(bad)
lahf
inc
(bad)
push
inc
jae
xlat
jmp
mov
hlt
add
add
ss
xor
sar
cmps
jbe
repnz
inc
rcl
data16
sub
js
outs
or
pop
adc
bound
add
mov
sub
iret
mov
xchg
test
and
stc
mov
neg
in
ss
ds
add
sbb
mov
inc
stos
mov
sub
jnp
sub
jle
dec
pop
sub
xchg
std
sub
pushf
stos
lea
movs
sbb
push
test
test
xchg
loopne
lock
xor
mov
fmul
pop
jns
xor
cmps
jae
xor
add
daa
loop
xor
mov
in
or
out
dec
mov
arpl
dec
xor
adc
add
js
or
out
push
push
mov
inc
out
movs
dec
fldcw
push
scas
outs
js
rol
or
(bad)
enter
ins
xor
icebp
ficom
int3
movs
fwait
mov
xor
mov
xchg
(bad)
adc
pop
stos
cmp
retf
lods
and
mov
mov
mov
xchg
outs
jo
inc
cs
mov
mov
mov
mov
push
push
popa
jno
retf
out
mov
mov
rol
jno
aas
or
cdq
mov
cmp
bnd
call
mov
int3
das
jo
mov
adc
cmps
jecxz
jns
cmc
xchg
cmps
jne
(bad)
lock
mov
int3
outs
and
(bad)
pop
sub
mov
mov
jns
xlat
daa
or
sub
dec
xlat
sbb
jle
mov
pusha
lods
xor
push
mov
fcmovu
xor
dec
jp
ja
adc
rcl
mov
aaa
push
and
cmps
inc
(bad)
jecxz
sub
mov
stc
aam
xchg
adc
lods
int
repnz
or
mov
test
xchg
adc
sti
ret
push
cmps
mov
pop
call
adc
jecxz
sbb
mov
rol
add
inc
repnz
add
and
cmps
les
int
retfw
ja
cdq
icebp
stc
ins
leave
jb
xor
test
repnz
je
adc
sar
pushf
push
leave
or
push
jg
hlt
icebp
mov
ret
adc
int3
cwde
push
and
mov
repnz
push
div
(bad)
lods
cld
jo
fwait
std
jmp
mov
xchg
out
jg
loopne
stos
dec
push
jp
daa
jg
mov
add
xor
ins
imul
in
xor
lds
dec
arpl
inc
retf
add
mov
lock
ret
xchg
mov
nop
retf
jmp
dec
clc
push
pop
pop
or
stc
inc
cmp
aam
sub
dec
xor
adc
inc
inc
mov
dec
stos
icebp
adc
ficomp
xchg
xor
cmp
ins
enter
or
in
lock
pop
xor
sub
imul
xor
fmulp
cmp
lock
adc
(bad)
jmp
cdq
push
fmul
ret
dec
data16
ret
mov
or
dec
sub
ficom
adc
mov
sub
and
cmp
stc
cmp
fisttp
stos
out
outs
xor
pop
push
sub
dec
push
add
fisttp
jo
shl
fst
mov
dec
dec
cli
jno
lahf
add
or
ins
xor
loope
js
addr16
push
ret
imul
mov
pop
xchg
sub
dec
inc
sub
inc
arpl
xor
and
fcmove
hlt
pop
dec
sbb
jg
add
test
add
or
or
call
loop
loopne
outs
mov
jl
jge
jnp
pushf
aaa
movs
mov
aas
sub
test
fcomp
js
in
int
cs
push
(bad)
(bad)
in
(bad)
mov
mov
push
mov
or
and
sar
jmp
lods
xor
jo
xchg
std
movs
cdq
pusha
sub
in
jns
aaa
mov
out
push
lds
mov
push
inc
(bad)
das
sub
cdq
mov
mov
push
hlt
xchg
(bad)
jne
aaa
dec
call
or
mov
adc
pop
pop
dec
fsubr
mov
mov
out
popa
push
dec
sub
jae
test
fstp
cmp
mov
cmps
dec
sub
arpl
sar
xor
mulps
mov
cmp
mov
out
outs
fist
push
jne
out
(bad)
pop
call
push
in
stos
(bad)
mov
push
or
jmp
xor
dec
das
cdq
mov
dec
xchg
adc
jle
mov
push
out
mov
sbb
sbb
xor
shl
lds
cmp
ds
cmp
pop
sahf
(bad)
inc
dec
adc
call
dec
clc
sub
xchg
je
aas
add
lock
pop
dec
inc
xchg
add
pop
push
mov
xchg
mov
retf
push
pop
jge
or
pusha
retf
scas
fist
cmp
(bad)
jmp
cli
pop
rcl
popa
fisubr
or
rcl
test
fnstenv
les
cmp
sub
cmp
jp
and
shl
aas
pusha
mov
sbb
push
jg
inc
aas
xchg
sbb
pop
add
sbb
imul
sbb
jne
lods
pushf
adc
xor
or
jmp
in
inc
adc
add
xchg
jp
test
test
xor
inc
mov
xchg
sub
fsubr
mov
into
inc
ja
movs
inc
jge
cwde
shl
push
das
rcl
jno
mov
pop
mov
fs
pop
jb
das
push
cmc
iret
lds
dec
xchg
or
pop
outs
jge
sbb
cmp
or
and
cmp
push
jb
int
lods
pop
nop
stos
xchg
inc
xchg
xor
sbb
inc
mov
in
loope
pop
adc
pop
ins
test
(bad)
loope
mov
fnstcw
in
pop
call
pushf
jle
and
cld
xchg
push
xchg
in
jp
or
das
daa
xchg
add
add
sbb
fcom
pop
je
xchg
leave
push
adc
dec
mov
out
cmp
dec
jmp
pop
adc
ret
jl
add
dec
and
pop
cmp
gs
test
mov
movs
in
mov
aaa
or
ins
xchg
sbb
(bad)
(bad)
sbb
jp
mov
loop
stc
add
gs
in
(bad)
iret
xor
js
mov
push
mov
outs
call
lods
pushf
mov
add
cli
dec
out
adc
out
or
lods
stc
adc
sub
sub
push
xchg
push
arpl
xchg
push
aas
adc
push
mov
adc
or
sbb
push
jmp
out
jae
icebp
nop
outs
repz
gs
jecxz
adc
mov
jb
jecxz
ins
lods
arpl
bound
les
mov
and
mov
test
cdq
and
das
mov
mov
mov
data16
push
or
ret
cdq
mov
in
paddd
aad
and
mov
push
pop
mov
int3
lods
pop
mov
cld
jno
cwde
fcomp
pop
mov
mov
ss
dec
mov
loop
jno
xor
movs
lea
fmul
adc
add
movs
fstp
sub
cmp
int
pop
mov
(bad)
and
cmc
or
xchg
push
fmul
call
push
(bad)
js
scas
inc
retf
movs
cmc
lods
jge
lods
push
push
sub
jl
pop
mov
lods
xor
popf
pop
iret
or
pop
push
es
adc
ds
into
pusha
les
test
loopne
mov
cmps
mov
dec
imul
repz
fisubr
pushf
push
stc
sub
sub
imul
mov
xor
cmp
mov
int3
nop
loopne
and
jl
fild
out
div
je
stos
aaa
cmp
sbb
mov
or
jb
mov
adc
mov
icebp
mov
mov
pop
and
in
cli
mov
cmp
push
inc
fs
push
or
jp
push
gs
ss
pop
lahf
inc
cwde
adc
test
outs
add
dec
inc
xchg
test
fstp
retf
mov
mov
xchg
arpl
push
cs
repz
sbb
and
dec
je
in
call
lock
dec
sub
inc
mov
mov
jg
mov
repz
and
add
cmp
call
dec
sub
push
jmp
jns
int3
jo
mov
ss
pop
add
cmp
mov
and
and
repz
xor
ficom
pop
pop
or
mov
int
jl
sbb
dec
sbb
inc
cdq
lea
add
mov
das
pop
ret
inc
mov
push
xchg
call
stos
repnz
out
arpl
jno
jns
mov
pushf
jae
lods
mov
(bad)
jmp
pop
cmp
mov
int3
sbb
test
fdiv
mov
adc
dec
lock
push
inc
int
ja
stos
stc
pusha
(bad)
retf
mov
cmps
rol
out
mov
stc
push
push
mov
inc
mov
dec
adc
dec
jecxz
add
sub
fdiv
(bad)
shl
bnd
stos
(bad)
lock
cs
push
bound
pop
mov
jle
ins
xor
pop
das
jbe
mov
add
push
jae
sub
ret
test
pushf
loope
gs
dec
ret
aad
loope
in
test
test
sub
clc
aam
xor
aam
daa
outs
pop
mov
inc
stos
mov
sahf
outs
fsub
sti
ret
cmp
mov
mul
mov
fcmove
data16
mov
jbe
and
loope
push
push
xchg
pop
lods
sbb
(bad)
xor
cmc
movs
xchg
mov
jbe
cmps
shl
xchg
ds
stos
jne
pop
cmps
fcmove
adc
mov
push
out
xchg
out
sbb
out
mov
xchg
lahf
lock
sub
scas
push
sbb
daa
xchg
in
add
xchg
mov
mov
call
pop
xchg
pop
jno
push
push
cmp
dec
addr16
cmp
stc
mov
add
pushf
add
inc
dec
ret
in
add
inc
sbb
call
ds
leave
aas
xor
xchg
sbb
dec
clc
stc
and
shr
jns
aam
arpl
clc
sub
dec
jl
(bad)
push
mov
out
add
add
int3
mov
cmps
fdiv
push
stos
cli
adc
iret
adc
inc
out
and
lea
xchg
jmp
into
shl
cdq
dec
push
aam
loope
gs
shl
cmp
(bad)
xor
push
aas
sbb
mov
pop
push
pop
cmp
mov
nop
cmc
sub
fisubr
push
xchg
push
sti
aas
sbb
push
add
jle
dec
push
repnz
add
(bad)
inc
sbb
sub
or
pop
xor
pusha
push
inc
jmp
loope
dec
lea
xor
icebp
push
jle
leave
cwde
ret
cld
xchg
push
sub
shr
add
lahf
stos
rcl
loop
inc
lods
int3
fadd
out
inc
mov
mov
test
sub
jecxz
das
lea
push
and
adc
or
neg
das
sub
push
scas
sbb
fld
inc
sub
mov
or
pusha
loop
mov
push
loop
adc
lea
pushf
enter
in
pop
xchg
sub
lods
push
mov
inc
fs
scas
por
ja
mov
adc
sub
test
arpl
iret
enter
cmp
cmps
test
fst
out
outs
(bad)
leave
in
sbb
or
test
in
rcl
sub
cli
aam
push
ins
imul
or
push
in
jbe
mov
(bad)
sbb
sub
int
mov
ret
and
popf
or
aad
jmp
movs
mov
xchg
jo
jmp
adc
cmp
aad
out
inc
iret
dec
leave
sub
inc
pop
aaa
adc
(bad)
xchg
cmp
sahf
lahf
addr16
fs
retf
cld
shl
pop
mov
in
je
xchg
pop
and
cli
adc
jl
jo
cmp
outs
(bad)
mov
movs
adc
xchg
mov
mov
shr
ds
add
pop
inc
or
icebp
mov
out
(bad)
test
aad
jmp
add
in
add
sbb
cmp
popf
xchg
push
xor
imul
sub
inc
or
lods
jo
icebp
test
cmp
pop
jecxz
(bad)
ffreep
push
mov
pop
mov
arpl
lock
loop
xchg
sbb
test
ins
adc
jmp
add
aad
cmp
mov
adc
sbb
movs
out
rcl
call
retf
into
rcl
sbb
ret
movs
pop
popf
es
cdq
sbb
shl
sbb
or
sub
inc
setp
scas
std
inc
shl
adc
pop
mov
test
push
jg
ret
mov
rol
xor
cwde
cmc
mov
sti
cld
push
xor
or
xor
jae
ret
sar
mov
mov
or
cmps
movs
mov
call
fwait
dec
jle
mov
int
ins
ret
neg
fmul
mov
sahf
addr16
mov
je
icebp
add
dec
fwait
xchg
(bad)
iret
sbb
mov
sub
sbb
sar
scas
sbb
jmp
pushf
stos
cmps
mov
jbe
rcr
push
sub
mov
push
sbb
push
mov
in
cwde
cmps
lock
dec
and
loope
aam
loop
jge
cmp
ins
mov
adc
sbb
mov
dec
add
sub
adc
mov
inc
idiv
fnstcw
xor
outs
imul
push
in
es
and
push
adc
inc
xlat
loop
and
test
adc
shl
aad
int
ins
xor
add
cmp
xor
leave
fwait
loope
shl
xchg
iret
pop
fcom
loope
or
adc
inc
arpl
dec
jno
add
mov
in
and
xor
sbb
sub
and
jmp
add
fld
stc
mov
jb
bound
jg
dec
xor
sub
xchg
call
arpl
(bad)
xor
popf
jns
xor
push
fcmovnbe
adc
scas
cmp
ds
fcomp
cmp
dec
adc
mov
cmp
cmps
in
sub
clc
xchg
xchg
push
jl
adc
cwde
and
divps
cmp
sbb
add
inc
enter
mov
mov
add
sbb
ins
push
push
inc
inc
inc
cmps
lds
imul
mov
adc
sbb
inc
jp
dec
mov
(bad)
loop
mov
or
ret
ret
lahf
cwde
xor
pop
mov
dec
mov
and
adc
or
mov
data16
xchg
inc
jb
adc
xchg
pop
jmp
test
rcl
cld
sbb
and
adc
(bad)
ficomp
jle
xchg
cmc
call
push
mov
in
xor
mov
mov
and
(bad)
repnz
in
pop
fbld
arpl
and
into
rol
lods
scas
sub
dec
ret
xlat
outs
(bad)
aas
int3
pushf
popf
mov
push
inc
mov
test
xor
mov
xchg
jle
jg
cld
shr
and
or
push
add
pop
jmp
adc
stos
lods
aas
shr
retf
nop
(bad)
int3
outs
(bad)
mov
ds
inc
inc
inc
ret
fwait
jnp
fwait
xchg
int
and
pop
cdq
and
mov
shl
adc
jno
jg
ret
jno
and
jg
sbb
sbb
sahf
push
out
(bad)
xchg
stos
inc
cmp
int
aam
loope
mov
jne
dec
pop
inc
mov
sbb
push
or
call
xchg
popf
test
jle
inc
pop
sahf
repz
mov
dec
mov
dec
addr16
pop
rol
and
nop
lds
test
sub
cmc
mov
sub
adc
adc
and
rdtsc
shl
push
stos
push
xchg
clc
loop
fcmovnu
xlat
mov
inc
mov
push
out
call
out
push
pop
push
test
loopne
cld
jnp
jg
push
rol
outs
cmp
movs
mov
stos
test
and
aad
cmp
pop
adc
outs
in
js
ds
movs
jg
pop
out
inc
inc
repz
popa
scas
cmp
test
and
dec
jg
scas
sbb
and
rcl
and
jno
cli
std
cmp
cmp
stc
jbe
ins
or
mov
neg
rcl
mov
xlat
lods
fmul
mov
and
sub
stos
mov
sahf
push
cmp
movs
xchg
push
and
hlt
scas
push
pop
into
scas
xor
in
rdpmc
lahf
sbb
shl
sub
or
or
mov
les
inc
loop
stc
and
rcr
iret
dec
dec
inc
sub
clc
imul
scas
lock
jb
dec
bndstx
scas
test
and
popf
add
shl
xchg
por
mov
xchg
pop
sub
loope
fisubr
seta
sub
push
jmp
sahf
(bad)
xor
inc
cmp
xchg
jg
hlt
lock
pop
push
fsubr
cmc
stc
cmp
lea
nop
add
push
lods
int3
push
stos
cmp
mov
adc
int
(bad)
sub
call
imul
push
and
(bad)
pop
test
mov
aam
js
add
jmp
mov
aam
rcr
pop
sbb
cld
xchg
aas
xchg
jmp
dec
xchg
bnd
std
sub
mov
mov
mov
dec
mov
xor
hlt
(bad)
mov
xchg
fistp
in
mov
bound
test
xor
(bad)
jmp
dec
fsubr
mov
mov
into
out
inc
adc
push
lods
mul
ret
xor
shl
sti
ins
mov
ins
jl
call
dec
pop
fldcw
les
sbb
test
test
hlt
ds
push
shl
repnz
and
jns
mov
call
out
ins
mov
mov
cdq
pop
adc
ss
hlt
stc
sbb
mov
mov
pop
or
dec
std
retf
fist
jge
push
jbe
dec
mov
jbe
push
scas
adc
test
inc
mov
pop
sahf
fiadd
icebp
jecxz
fadd
push
xchg
xor
adc
xchg
mov
scas
out
cmp
xchg
mov
sbb
aas
jnp
mov
lea
add
sbb
ret
aaa
(bad)
jns
(bad)
pushf
inc
jle
xchg
inc
cwde
dec
rcr
cmp
scas
fdiv
mov
dec
xor
add
mov
dec
test
and
into
inc
ss
pop
lds
sub
jns
aad
and
inc
pushf
fst
icebp
push
jl
pop
jnp
push
lods
cmps
fnstenv
sub
lods
jns
repnz
loopne
adc
pop
test
cmp
inc
add
xor
jne
add
adc
in
rcl
dec
xchg
mov
ror
das
sbb
hlt
call
inc
retf
cmp
fcom
mov
rol
in
cld
inc
popf
pusha
or
fcom
adc
rep
daa
dec
test
pop
mov
fidivr
pop
xor
and
fs
jmp
aam
into
mov
scas
mov
pop
iret
sahf
and
sub
out
mov
pop
lods
les
gs
cld
ficom
mov
int3
and
(bad)
out
fistp
pop
mov
lds
nop
imul
or
adc
mov
jo
das
mov
mov
shr
dec
scas
fs
in
mov
dec
add
lods
test
lock
inc
jp
ja
inc
retf
adc
mov
aas
out
dec
xchg
pusha
sti
push
stos
fmulp
cmp
and
adc
std
retf
push
mov
push
push
pop
lahf
fld
jbe
ror
and
loopne
mov
mov
call
xor
jno
pushf
repz
mov
xor
add
adc
cmps
push
pop
test
icebp
cmp
test
daa
ror
mov
gs
sar
and
fsubr
mov
sar
dec
test
mov
mov
jae
shr
and
push
int
popa
mov
pop
lods
inc
mov
sub
js
pop
outs
scas
adc
shl
test
jp
cmps
fnsave
push
imul
lods
push
rcl
pop
mov
scas
and
lahf
cli
aas
call
adc
shl
or
jb
adc
cmp
psubusb
jnp
dec
mov
lahf
(bad)
leave
enter
add
or
jbe
cmps
(bad)
push
xor
jne
add
xchg
out
push
inc
adc
inc
fidivr
xchg
inc
stc
mov
add
icebp
add
popf
or
and
call
out
and
fstp
xchg
xchg
push
aas
jmp
push
mov
xchg
cmp
push
in
mov
stos
sub
pop
popa
mov
movs
push
pop
outs
xor
adc
aaa
arpl
sbb
dec
mov
test
jmp
call
(bad)
pusha
mov
jmp
cdq
cmp
retf
and
and
repnz
mul
pop
xor
xor
ins
sbb
xor
inc
cmp
aas
loope
sub
je
inc
test
call
lods
pop
(bad)
dec
outs
test
test
push
cmp
cs
push
jmp
pusha
mov
adc
mov
(bad)
int
addr16
or
pop
icebp
pop
or
jo
adc
mov
xor
shl
fld
sti
push
xor
popa
lahf
cs
xchg
inc
xchg
mov
mov
push
leave
(bad)
out
cmp
sub
pop
push
in
push
cli
je
movs
xor
jl
ja
pop
jmp
dec
inc
sbb
xlat
daa
out
int
xor
add
pop
movs
xchg
jle
sbb
icebp
enter
cs
inc
pop
and
sub
les
aas
(bad)
dec
add
xchg
and
jno
neg
push
adc
repnz
pop
sbb
ins
inc
sub
daa
(bad)
je
push
sub
sub
cmp
xchg
mov
aad
pusha
inc
jmp
mov
scas
pop
cli
sbb
dec
cmp
jl
popf
test
movs
out
(bad)
fstp
pop
pop
mov
dec
sbb
ss
popa
sti
pop
out
jne
es
mov
mov
not
cmp
lds
retf
ds
out
fcomp
stc
mov
sub
sub
icebp
dec
loopne
rol
das
sub
xor
jns
or
out
cli
ror
jns
inc
xor
fadd
mov
dec
mov
ror
inc
popa
cmp
mov
jmp
and
and
add
jge
std
dec
inc
adc
popa
cmps
push
mov
int
loope
mov
xchg
lahf
ins
jp
mov
mov
jl
movs
sub
cli
cmps
xor
imul
scas
enter
cmp
pop
out
pop
repz
(bad)
push
ret
mov
xchg
jo
loop
ins
adc
ss
add
and
addr16
cmps
inc
fstp
outs
cdq
add
mov
pop
ret
mov
fbstp
test
pop
inc
jmp
icebp
outs
fincstp
jle
xchg
inc
xor
gs
xchg
cli
ins
(bad)
repz
xchg
add
sub
push
out
inc
lds
(bad)
adc
xor
adc
xchg
or
stos
iret
out
je
cmp
pusha
xchg
out
ret
ja
in
sub
add
and
mov
mov
add
stc
loop
imul
inc
jle
inc
in
xchg
add
(bad)
push
mov
jecxz
ret
xor
scas
sahf
push
into
sub
xlat
jne
pop
(bad)
jecxz
cmp
xchg
mov
imul
cmp
mov
sub
jno
cmp
je
add
inc
inc
not
inc
sbb
mov
fwait
and
jns
mov
movs
dec
mov
xchg
aad
inc
dec
lods
mov
mov
pusha
dec
mov
push
leave
adc
dec
or
and
or
outs
(bad)
je
push
push
fs
mov
cmp
push
cmp
dec
mov
pop
or
xchg
inc
in
xchg
jbe
cld
jl
std
dec
jl
ins
mov
mov
sbb
push
scas
test
bound
inc
mov
xor
cmc
mov
movs
mov
jns
xchg
popa
jp
das
out
push
adc
push
sbb
xchg
mov
push
xor
sti
mov
xchg
xlat
jns
jns
popa
icebp
cmc
bound
cdq
add
mov
in
xor
and
das
(bad)
data16
popf
lock
cmp
mov
shr
int
fs
jno
movs
adc
mov
in
test
iret
push
dec
inc
jg
enter
cmp
push
ins
neg
stos
scas
sar
js
and
test
add
repz
daa
mov
jae
loop
scas
jmp
fisub
jo
lock
and
xor
cmp
adc
shl
push
rol
add
xchg
cmp
fwait
cmp
inc
mov
mov
mov
cmps
jecxz
jae
aaa
mov
jg
add
(bad)
sbb
cs
jl
pop
jmp
aaa
or
and
mov
ret
adc
jns
shl
add
shl
loopne
xlat
jp
mov
data16
push
loope
mov
pop
lahf
sub
push
sub
es
into
nop
retf
mov
sbb
clc
movs
loopne
cmp
inc
adc
xchg
test
lods
or
popf
popf
mov
mov
mov
sub
test
adc
dec
add
cmps
pop
jl
iret
mov
mov
fdivr
fdiv
and
jp
sbb
mov
sbb
mov
neg
adc
and
inc
mov
inc
aad
pop
and
inc
retf
sub
push
mov
sbb
inc
pop
loopne
int3
xor
inc
pop
fld
mov
scas
mov
pop
test
outs
adc
jge
sbb
out
imul
data16
shl
rol
mov
or
mov
lea
outs
xlat
inc
pop
inc
mov
outs
stos
arpl
scas
xor
adc
pop
dec
cmp
jo
test
and
ins
scas
fdivp
dec
(bad)
add
test
es
frstor
xor
call
add
push
enter
mov
addr16
push
leave
dec
in
je
adc
sar
clc
pop
jmp
dec
arpl
push
stc
mov
cli
pop
xchg
lahf
lods
mov
add
push
inc
push
daa
ret
(bad)
ds
das
ja
popa
fisttp
in
seta
xchg
jmp
jo
add
sbb
mov
xchg
push
cmp
les
fimul
inc
retf
cmp
or
in
fnstsw
fld
mov
test
mov
cmp
in
xor
mov
inc
arpl
test
fsubp
cmp
xor
or
jns
fmul
sbb
adc
jl
sub
out
cmp
inc
maskmovq
div
repz
popa
mov
fisub
jnp
cmps
push
dec
out
sahf
inc
shl
aad
imul
push
xchg
ss
mov
jb
jecxz
shl
jne
xor
xchg
ror
push
or
or
stos
(bad)
(bad)
jnp
std
bnd
inc
cmp
enter
xchg
shl
fld
mov
xor
jmp
repnz
or
fsubr
mov
cmp
pushf
push
dec
dec
xor
enter
mov
into
jne
push
adc
dec
ins
(bad)
xlat
imul
ins
adc
rol
in
jmp
cli
sbb
mov
je
out
add
inc
ss
outs
xchg
dec
je
int3
gs
sbb
cmp
(bad)
jp
sti
jmp
and
retf
or
(bad)
imul
iret
mov
(bad)
fistp
mov
pop
dec
mov
add
mov
add
jnp
lods
sahf
mov
mov
cmc
pop
sub
outs
aad
out
clc
or
or
ins
jns
imul
jmp
or
xor
(bad)
aad
cli
add
xor
push
leave
xchg
add
lahf
mov
ins
cs
sub
mov
out
mov
in
test
pop
xor
jge
sbb
pop
loope
fcmovnb
scas
cdq
in
mov
jns
dec
and
mov
jb
imul
js
addr16
xchg
mov
pop
pop
dec
inc
xor
xchg
loopne
push
mov
pop
mov
adc
mov
fwait
scas
outs
in
je
call
sbb
fcomp
fist
mov
aaa
adc
inc
sub
mov
icebp
jbe
xchg
aad
(bad)
mov
imul
push
mov
push
sahf
stos
cmc
lock
shr
rcr
and
leave
cmps
fild
adc
push
jns
sbb
(bad)
ret
sub
out
scas
popf
fsubr
(bad)
push
loopne
mov
into
test
stc
sbb
aad
std
shl
mov
ret
pop
mov
outs
xchg
jbe
pop
movs
int3
push
sar
in
enter
inc
out
imul
mov
jmp
dec
mov
or
mov
push
jne
xor
sub
adc
aaa
pushf
fidivr
xchg
xchg
push
in
dec
outs
pop
stos
enter
daa
sbb
cli
movs
add
mov
mov
jecxz
dec
pop
ja
pop
ss
loop
icebp
xchg
mov
mov
daa
aaa
mov
push
xor
jmp
add
mov
aad
xor
retf
inc
test
into
cmp
mov
out
fstp
jg
nop
retf
test
and
pop
je
dec
pop
dec
jmp
leave
jne
jne
cmc
mov
dec
fst
add
enter
push
or
mov
lahf
add
xchg
xor
imul
leave
pop
jmp
pop
nop
xchg
or
cmp
jns
and
and
cwde
outs
jmp
aam
xor
pop
cmp
sbb
push
test
in
push
sub
inc
pop
xor
pop
(bad)
xchg
push
lahf
loopne
inc
sub
xor
cmp
ja
icebp
pop
repz
jbe
inc
sbb
(bad)
cli
gs
push
sub
stos
push
mov
int3
push
push
fstp
cmp
std
test
out
or
cmp
(bad)
lahf
jae
xor
ja
jmp
ror
inc
inc
jl
call
cmp
inc
dec
inc
cli
pop
xlat
movs
lea
fwait
out
adc
outs
loope
push
adc
sbb
cmp
xchg
xchg
sbb
arpl
jecxz
in
mov
out
push
adc
push
std
dec
cmc
mov
fisttp
adc
push
or
idiv
sbb
mov
push
aad
inc
xor
cmp
in
(bad)
or
and
xchg
mov
pop
mov
fistp
xchg
jmp
xor
xchg
jp
push
jg
pop
push
sub
fmul
mov
arpl
arpl
push
scas
and
aad
mov
fistp
adc
ss
repz
movs
neg
inc
jb
ja
in
outs
(bad)
jnp
cmp
popf
out
jmp
gs
outs
cmps
and
sbb
cmp
lahf
xchg
sub
sar
gs
movs
mov
loope
and
retf
bound
xchg
int3
jp
xchg
add
jmp
cmp
ror
rol
(bad)
pushf
jg
ficom
aad
mov
xchg
dec
mov
jmp
mov
dec
add
sbb
and
out
or
pop
(bad)
repz
cmp
mov
jmp
bound
(bad)
lods
pop
pop
sub
cmc
sbb
dec
sbb
push
jbe
cmp
rcr
cmc
mov
fild
mov
pop
lds
push
xchg
sub
enter
mov
inc
jl
and
and
pop
add
inc
mov
(bad)
mov
push
enter
cmp
sbb
repz
dec
imul
ss
dec
xlat
jmp
dec
loopne
sti
aad
push
sbb
push
mov
out
out
pop
daa
rcr
(bad)
pop
mov
fisttp
inc
pop
sub
daa
(bad)
mov
inc
pop
adc
push
cdq
in
mov
(bad)
loop
inc
stc
cld
or
addr16
or
je
pop
pop
pushf
mov
(bad)
mov
fist
cmp
pop
call
adc
mov
sahf
aas
jbe
scas
mov
xor
and
push
repz
jecxz
add
int
sub
cwde
cmp
lahf
push
dec
pop
xchg
test
imul
and
cmps
xor
xor
mov
xchg
xor
(bad)
mov
inc
push
sub
cs
movs
inc
fnstcw
jns
mov
xlat
push
(bad)
out
jmp
xchg
and
ret
xor
scas
cwde
adc
sbb
imul
inc
mov
push
jmp
adc
int3
sbb
(bad)
imul
mov
ja
fdiv
mov
pop
push
push
stos
push
aam
dec
or
mov
mov
mov
inc
mov
and
stos
xchg
repnz
sar
jecxz
push
and
adc
cmp
or
xchg
ret
dec
push
mov
pop
sbb
cld
mov
xchg
stc
daa
call
adc
mov
stos
mov
jno
js
inc
sahf
add
mov
fiadd
enter
out
das
pop
call
and
mov
scas
call
jge
inc
xlat
xor
sbb
sub
pop
sub
xor
pop
enter
xchg
or
cmps
add
dec
jp
cmp
ret
ss
push
rcr
bound
sub
push
lods
pushf
cmp
shl
push
mov
adc
daa
mov
xchg
inc
jae
sbb
stos
test
xor
and
inc
cld
cmp
shl
cwde
loopne
pop
outs
std
xchg
in
ror
sbb
push
shl
xchg
add
dec
push
(bad)
sub
fwait
lods
xor
cmps
lods
or
pop
lock
dec
scas
push
jne
in
aad
inc
xor
adc
xchg
jp
fdiv
hlt
out
mov
inc
push
mov
xlat
jb
nop
push
pop
push
int
enter
jmp
mov
pop
dec
push
loopne
inc
icebp
mov
fsubr
ret
addr16
cmc
ins
xchg
aas
rcl
cld
inc
xchg
adc
inc
imul
mov
mov
pop
and
repz
cwde
dec
sbb
push
sub
lds
int
and
inc
shl
test
xchg
jp
into
inc
cld
hlt
mov
sub
mov
out
sbb
dec
cmp
jb
ds
cmp
dec
dec
aad
push
pop
popa
push
div
or
mov
lea
int
iret
fild
push
adc
shr
adc
ins
(bad)
adc
jecxz
(bad)
ss
inc
mov
pop
mov
call
adc
jne
sub
add
popa
push
into
fmul
std
sub
adc
push
and
stos
ins
rol
adc
bound
jo
xchg
sti
mov
loope
int3
in
adc
sbb
dec
shr
and
fstp
(bad)
xchg
jae
nop
xchg
cmp
sub
inc
push
shr
inc
fnstcw
jg
fiadd
(bad)
sub
cmp
pop
int
(bad)
lea
pop
dec
push
mov
xchg
and
ss
sar
movs
cli
sbb
ins
shl
jne
pop
call
lock
mov
icebp
pop
and
aad
xchg
out
cmp
addr16
jmp
xor
mov
call
xor
frstor
retf
je
cli
xchg
in
push
xor
(bad)
cld
cld
pusha
push
jle
sbb
dec
sbb
stos
inc
dec
cmps
mov
adc
xor
movs
cmp
pop
cmp
fcom
mov
and
sar
jbe
fwait
and
js
fst
xchg
leave
xor
(bad)
hlt
mov
(bad)
pushf
mov
in
mov
xchg
jmp
mov
dec
sbb
or
xor
stc
push
and
cdq
xchg
imul
jbe
mov
add
adc
ret
inc
or
pop
and
sbb
not
int3
push
js
into
dec
mov
mov
cmps
es
xchg
inc
dec
adc
jns
fild
ds
inc
imul
xor
dec
loopne
xor
sbb
inc
jmp
jb
shr
cmc
cmp
push
js
push
jle
mov
dec
mov
push
push
loopne
fwait
and
pop
lods
push
(bad)
mov
pop
call
loop
(bad)
int3
rol
cmp
mov
jp
jp
imul
rol
xchg
lahf
imul
adc
sti
stos
or
push
xor
or
fwait
mov
int3
dec
std
push
shr
out
xlat
jge
xchg
or
ffreep
ins
aad
or
mov
rol
loope
mov
sub
rcr
push
imul
(bad)
push
dec
add
xchg
sub
or
pop
ror
in
fist
mov
cmp
dec
or
cwde
fimul
and
fs
fist
cli
pusha
or
cmp
push
stc
lods
sbb
sbb
popa
test
adc
leave
imul
jbe
inc
and
imul
add
dec
fcom
nop
inc
add
(bad)
in
jae
mov
pusha
sahf
pop
clc
rol
call
xor
mov
into
push
int
inc
mov
call
inc
jg
add
jmp
adc
sbb
mov
sub
xchg
call
pop
jnp
shl
push
sub
inc
dec
dec
dec
push
popa
popa
not
dec
inc
xor
aad
and
(bad)
xlat
ss
push
aas
jbe
popf
mov
cwde
cmp
loopne
fld
mov
push
jae
bound
(bad)
mov
jnp
mov
dec
dec
sahf
dec
cdq
aad
xchg
push
out
out
jnp
mov
pop
mov
hlt
inc
daa
pop
inc
jge
jae
das
jbe
enter
pusha
push
clc
sbb
cli
ficom
xlat
shl
sahf
cmps
xchg
push
jge
adc
(bad)
sub
add
mov
mov
imul
push
js
je
mov
loope
sub
fisttp
jmp
add
mov
stos
cmc
jns
mov
(bad)
inc
iret
jl
jg
jmp
int
pusha
dec
fild
adc
ficom
rcr
mov
mov
popf
xlat
sub
mov
pop
sti
jp
enter
add
inc
fmul
outs
mov
scas
rol
js
icebp
mov
and
jbe
fbld
pushf
daa
jge
pop
push
add
mov
stos
adc
pop
cmc
dec
dec
push
cmps
les
dec
jge
jno
dec
retf
inc
bound
out
(bad)
sbb
retf
fdiv
(bad)
ins
shl
int3
mov
xchg
pop
push
neg
scas
sti
and
pop
call
add
cdq
adc
aad
rcl
mov
test
and
or
mov
lods
xor
adc
add
retf
push
mov
lock
inc
pop
rcl
inc
sub
ror
loop
ret
addr16
rcl
mov
jle
pop
mov
mov
inc
lods
jmp
sub
call
adc
stos
pushf
clc
daa
fstp
cmp
dec
inc
repnz
add
sub
sar
cmc
ins
mov
scas
stos
stc
pop
or
(bad)
hlt
xchg
jno
cld
inc
mov
jle
shr
sub
(bad)
clc
jbe
js
mov
ret
xor
loopne
sub
out
iret
outs
sbb
jb
mov
ds
inc
jb
sahf
and
or
or
mov
push
mov
mov
or
push
mov
push
lods
pop
mov
add
stos
xlat
mov
mov
adc
shl
rcl
sub
cwde
pop
xchg
call
xchg
dec
mov
mov
cmp
inc
je
test
adc
(bad)
aam
and
cmps
xchg
and
pop
cmps
xchg
into
jmp
int
add
jb
retf
push
hlt
fstp
in
sbb
inc
in
sahf
sbb
into
dec
fld
nop
fidivr
not
sti
loopne
fcomi
push
cmp
jp
or
call
scas
rcr
fdiv
push
movs
ret
sub
xor
and
test
pop
nop
xchg
and
mov
fnstcw
ins
jl
pop
out
ret
test
mov
std
jp
xchg
shl
xor
fimul
sub
xchg
shl
int
jnp
ret
mov
out
cld
in
jecxz
push
test
dec
in
lea
loop
pop
out
(bad)
lahf
sub
jmp
das
fisttp
mov
jmp
in
(bad)
pop
out
jp
jbe
dec
(bad)
ds
shl
push
xchg
or
xlat
cmp
pushf
pop
sar
push
ja
fiadd
into
pop
daa
cmp
fs
push
scas
idiv
lds
push
addr16
fidiv
sub
jnp
pop
inc
pop
data16
repz
shr
shl
or
mov
adc
pop
in
push
inc
les
inc
xchg
cmp
ins
jnp
mov
dec
pop
push
loopne
inc
loope
aaa
movs
leave
or
or
mov
push
mov
or
aam
lods
out
aas
rol
adc
cmp
jno
pop
fucomi
pop
pop
adc
das
and
jmp
add
int
dec
mov
or
shr
mov
pop
lea
inc
xor
mov
(bad)
rcl
sub
cmp
or
mov
fidivr
or
mov
sub
cs
xchg
push
imul
jle
cmc
stos
adc
pop
mov
test
cmp
sub
xchg
adc
mov
ins
xor
mov
stos
adc
mov
xor
fdivr
dec
sub
inc
cmps
jnp
sub
out
inc
xor
ret
ror
std
cwde
pop
inc
aas
push
push
push
fmulp
jmp
imul
retf
push
sbb
sar
xor
dec
cmp
into
mov
inc
add
inc
add
mov
cmps
jbe
mov
(bad)
mov
into
pop
push
add
stos
cli
(bad)
in
or
mov
mov
jle
dec
arpl
mov
pusha
jbe
mov
call
inc
(bad)
loopne
inc
int
cmp
je
or
add
in
imul
test
pushw
pop
ror
adc
sub
add
or
repnz
xchg
cdq
adc
retf
jb
shl
mov
(bad)
clc
mov
mov
cmp
xchg
stos
ret
lds
inc
or
xlat
mov
cs
sbb
in
fld
repz
jmp
adc
dec
outs
xor
adc
dec
cdq
xchg
arpl
pushf
add
ins
rol
inc
rcr
mov
push
mov
int3
jae
stos
push
dec
clc
aad
cmp
mov
test
scas
xor
cmps
dec
call
jno
cmp
(bad)
ret
fdivr
lea
cmp
pop
mov
mov
inc
fcomp
ror
gs
xchg
icebp
sub
jge
mov
ds
adc
pusha
jns
mov
scas
(bad)
pop
dec
lahf
(bad)
jmp
sub
pop
sar
add
add
mov
push
mov
outs
ss
xchg
and
retf
push
mov
cmps
or
or
pop
mov
mov
mov
ins
push
jb
daa
xor
pop
lods
ins
loop
aas
test
ret
pop
mov
xchg
pop
push
(bad)
push
dec
push
add
jmp
jmp
cwde
imul
pop
les
mov
xchg
xor
int
cdq
stos
stc
lds
sub
jbe
jmp
push
cmps
fild
lock
xor
std
ret
test
out
stos
jmp
adc
and
call
push
fwait
cmp
pop
fsubrp
cmp
dec
ret
mov
(bad)
fistp
jnp
xchg
shl
push
mov
(bad)
sar
loope
mov
leave
popa
add
aas
sub
popf
dec
cdq
(bad)
cmp
rol
mov
xor
addr16
in
cmp
fisttp
sbb
lods
int
and
aas
ja
shl
dec
addr16
les
sbb
js
iret
mov
paddsw
call
das
mov
jno
data16
ror
dec
push
test
adc
sub
cmp
pop
mov
cwde
jle
clc
(bad)
in
outs
addr16
jle
jmp
(bad)
in
xlat
adc
fadd
cmp
jb
hlt
js
dec
jg
dec
int3
fstp
or
cld
jp
xchg
and
mov
cmp
xchg
test
into
mov
sbb
sbb
psrld
jg
xchg
movs
imul
and
stos
popa
popa
and
sbb
outs
xchg
cwde
inc
daa
scas
or
js
mov
bound
imul
mov
push
mov
dec
sbb
(bad)
mov
pusha
fnstenv
jl
jo
inc
mov
cmp
in
(bad)
or
push
(bad)
xchg
(bad)
ror
nop
imul
pop
sbb
scas
dec
xor
and
xchg
add
std
ins
cwde
shl
imul
xlat
js
call
pop
(bad)
out
and
xor
icebp
and
add
push
(bad)
inc
xchg
xor
aam
les
sub
into
cmc
mov
push
inc
lods
xchg
xchg
mov
sbb
xor
push
push
les
and
xor
aas
and
les
push
test
call
out
jecxz
inc
je
mov
mov
popf
pop
sbb
jae
ja
sahf
jg
movs
out
movs
cld
mov
shl
xlat
pop
repnz
xchg
pop
je
sub
lahf
adc
pop
push
and
jp
fwait
aaa
pop
xor
jl
adc
mov
(bad)
or
xchg
popf
inc
and
cmp
adc
sbb
inc
cmp
jge
outs
mov
lods
bound
jae
mov
(bad)
aad
stos
scas
sbb
mov
xchg
push
sbb
adc
ret
sbb
test
mov
mov
and
xlat
push
inc
fs
loopne
push
outs
pop
mov
loop
push
mov
mov
mov
or
or
pop
cmp
jb
imul
(bad)
xchg
in
sub
pop
jmp
fdivr
shr
mov
cmp
xchg
xor
rol
adc
adc
mov
in
dec
mov
rcl
xchg
hlt
cmp
inc
outs
sub
add
(bad)
dec
mov
stc
cdq
xchg
div
push
mov
movs
jl
into
cmc
jnp
test
hlt
sbb
dec
inc
das
scas
mov
mov
dec
inc
addr16
dec
inc
lds
pop
icebp
aad
dec
sar
aad
cmp
cmp
cmp
mov
sub
dec
test
cmc
pusha
stc
nop
adc
mov
sub
mov
ret
stc
sub
std
cs
and
jne
lods
push
xor
push
pop
hlt
test
loopne
aaa
aad
push
hlt
mov
dec
fbstp
push
ret
sub
xlat
mov
(bad)
hlt
scas
imul
push
mov
xor
mov
mov
cmp
icebp
aad
xchg
ret
std
dec
clc
jno
test
xchg
xor
push
push
mov
fild
(bad)
sub
cmp
iret
pop
push
iret
lock
add
je
dec
clc
or
sbb
je
or
fldenv
lods
daa
adc
mov
sub
addr16
jne
xchg
(bad)
shl
xchg
and
jae
cmp
sar
in
xchg
and
mov
sahf
sbb
push
mov
aaa
test
in
mov
sub
js
shr
xchg
js
inc
lods
retf
cdq
push
pushf
jp
fistp
leave
lock
in
ret
inc
fwait
xchg
push
(bad)
mov
xor
lock
(bad)
stos
jb
icebp
adc
shl
jle
rcl
mov
jle
jae
out
mov
pop
movs
mov
fld
dec
inc
inc
jns
iret
aaa
dec
xchg
sub
cmp
xchg
popw
dec
in
adc
pop
pop
jecxz
cmps
movs
aaa
mov
jmp
imul
push
and
dec
inc
dec
cdq
lock
pop
cmp
pushf
(bad)
popf
(bad)
sbb
mov
aas
sub
inc
mov
adc
shl
int3
mov
pop
loop
jge
and
int
mov
push
loopne
xchg
das
push
pop
fdiv
jnp
outs
xor
gs
jns
icebp
push
push
fsubr
inc
mov
or
iret
ds
popa
sbb
call
(bad)
xor
adc
pop
aaa
(bad)
stos
mov
ror
cli
sahf
pop
div
adc
and
lods
movs
dec
adc
pop
or
adc
mov
lods
xchg
test
mov
mov
repz
sar
mov
push
jne
pop
mov
aaa
mov
push
xlat
cmp
sbb
inc
scas
fs
call
xchg
mov
outs
push
div
mov
and
inc
mov
push
jno
jecxz
xchg
pop
dec
mov
imul
shl
mov
inc
jnp
mov
mov
retf
aas
(bad)
aam
into
pop
xor
out
mov
inc
add
xchg
inc
loope
sub
xchg
push
add
mov
mov
loopne
jne
mov
jmp
cmp
sahf
shl
cmp
nop
outs
mov
jmp
in
xor
mov
jno
cmp
mov
sbb
and
lods
inc
sbb
adc
cmp
jnp
pusha
xor
xor
dec
or
int
in
ret
in
adc
xor
and
es
jae
push
lds
sahf
inc
or
(bad)
repz
cmp
jbe
mov
jmp
movs
xchg
in
mov
sahf
retf
shr
inc
leave
int3
pop
sar
push
lods
rol
and
dec
pop
es
imul
mov
ffree
dec
sub
push
and
adc
out
leave
mov
mov
loop
lahf
or
cld
jmp
jbe
mov
sar
push
push
push
adc
xlat
inc
dec
jae
cmp
mov
mov
loope
mov
out
push
xlat
hlt
xchg
sbb
sub
sbb
inc
mov
mov
inc
sar
or
shr
scas
mov
xor
icebp
mov
lods
(bad)
dec
jge
sbb
push
lods
(bad)
sbb
shr
xchg
cmp
inc
retf
dec
sbb
mov
push
retf
xchg
sahf
int3
out
ins
sub
dec
in
cmp
add
aad
pop
lock
inc
stc
jp
sbb
jmp
jmp
es
jae
mov
adc
cmp
test
sahf
mov
adc
push
outs
jb
mov
push
xchg
cmp
sahf
jecxz
stos
push
push
fbstp
fadd
or
inc
push
dec
sub
aaa
adc
sbb
movs
push
cli
repnz
jmp
jle
cmps
cs
cmps
xchg
cmp
mov
das
xchg
dec
adc
jle
jge
adc
sbb
dec
rcl
outs
aaa
jno
mov
shl
daa
add
sar
cld
mov
jmp
int
mov
cmps
xchg
pop
mov
cmps
mov
xchg
bound
or
cmp
cmps
stc
jmp
jg
shl
adc
push
dec
xchg
fcomip
fmul
mov
lods
or
(bad)
dec
es
ret
push
mov
ja
pop
pop
pop
cli
fs
enter
and
adc
or
dec
push
es
cmp
repnz
mov
cdq
xchg
adc
jg
neg
dec
cwde
std
jmp
xor
retf
inc
jl
mov
je
fsub
adc
cdq
or
ss
and
sbb
dec
and
lea
push
push
int
lahf
cmp
in
scas
mov
sbb
jns
mov
mov
xchg
adc
lea
fwait
loope
loop
pop
or
pop
js
push
push
jno
jns
fist
or
jle
aad
retf
sbb
xchg
lods
inc
mov
imul
enter
call
sub
mov
inc
cmp
sub
xor
in
mov
lods
das
adc
lahf
mov
jecxz
or
(bad)
js
mov
loopne
adc
test
sub
stc
jg
jbe
mov
fst
test
jecxz
or
pop
dec
sub
cmp
mov
cwde
or
mov
or
hlt
out
mov
imul
cmp
ins
cmps
adc
daa
pop
ins
fs
xchg
adc
mov
(bad)
pop
out
(bad)
sti
dec
into
mov
lods
rcr
ror
clc
(bad)
fwait
jne
test
in
push
bound
jnp
call
xor
add
xchg
std
(bad)
jmp
call
sbb
jmp
inc
pop
add
(bad)
jae
mov
mov
fist
sub
jp
movs
xlat
pop
and
and
mov
push
add
pop
ror
test
mov
gs
mov
mov
inc
das
add
or
jl
jle
xchg
popf
stos
mov
inc
xchg
int3
js
jae
movs
int3
mov
pop
xor
or
sub
xchg
rcr
pop
lods
lock
inc
mov
fcmovne
mov
lods
pop
xor
jns
pop
jle
loopne
mov
retf
out
cdq
or
mov
or
int
mov
and
push
test
std
ret
jecxz
repnz
ins
in
call
mov
mov
xchg
dec
add
sti
mov
xor
pop
lea
cmp
cmps
sub
pop
in
and
sub
sub
pop
shl
mov
rcr
dec
sahf
or
cwde
jg
add
xor
sbb
retf
pop
xchg
call
fwait
adc
mov
pop
mov
mov
fmul
(bad)
iret
cs
outs
imul
arpl
int3
adc
es
and
cmps
(bad)
cmp
mov
(bad)
mov
push
push
outs
jne
fs
pop
fidivr
fstp
jbe
jmp
ret
ficomp
pop
xchg
jne
jae
ins
test
sub
or
pop
out
cmp
in
or
cmp
ficom
ss
mov
sub
lds
xchg
idiv
jb
int
sub
and
pop
pminsw
or
in
mov
cli
pop
fdivrp
or
test
rol
sbb
imul
inc
adc
add
popf
in
dec
dec
das
add
ret
cmc
mov
push
aam
inc
pop
mov
jg
pop
lods
sbb
(bad)
xor
dec
ins
pop
sub
xor
rcl
retf
fisttp
sub
fcom
xor
mov
rcr
add
push
or
fcomp
push
and
stos
(bad)
fnstsw
and
loop
jnp
pop
pop
cmps
pop
and
mov
iret
sbb
shl
pusha
push
call
dec
in
jns
fwait
(bad)
lea
cdq
cs
lock
push
jecxz
or
enter
loop
pusha
push
xchg
test
pop
xor
add
push
enter
(bad)
and
aam
outs
test
add
pop
mov
jp
ret
dec
push
inc
xor
lods
xchg
mov
jo
push
adc
int
mov
cmovle
icebp
xor
and
repnz
movs
(bad)
mov
cmp
mov
push
push
lods
imul
div
outs
retf
mov
jbe
fld
pop
mov
jecxz
aas
xchg
push
push
dec
stos
(bad)
retf
js
sub
inc
dec
xchg
lock
jns
mov
loope
sub
fld
fimul
iret
cs
inc
mov
or
adc
xchg
jno
mov
adc
cmp
fsub
cld
pop
mov
out
fild
not
imul
cli
push
or
and
sbb
gs
push
xor
test
mov
jge
mov
xchg
sub
mov
mov
sbb
stos
mov
sub
ss
test
scas
push
pop
lods
cwde
add
cld
xor
aad
mov
adc
adc
push
add
retf
ds
(bad)
dec
fadd
xchg
or
jge
mov
jae
push
sub
out
mov
mov
push
inc
outs
jle
inc
repnz
test
cmp
jecxz
fwait
andps
not
add
xchg
push
mov
or
mov
dec
or
adc
scas
dec
mov
xchg
sub
jge
mov
call
or
cmp
mov
or
adc
jecxz
mov
sahf
fwait
xor
push
cmp
test
mov
mov
dec
addr16
ret
dec
or
aas
repnz
dec
test
out
cmp
cmp
jae
inc
ss
inc
push
cmps
mov
push
jb
cld
rep
in
add
pushf
mov
inc
jo
jmp
(bad)
outs
xchg
sub
dec
xor
fstp
cmp
adc
xchg
mov
call
mov
sti
mov
in
sti
or
mov
in
rcl
lds
dec
stc
xchg
scas
retf
pusha
(bad)
mov
adc
in
stc
sub
pop
or
jne
sbb
push
or
add
cmp
inc
in
push
ret
and
repnz
test
mov
enter
push
dec
lds
mov
hlt
mov
sbb
push
(bad)
lock
pop
xchg
stos
or
xchg
pop
dec
and
addr16
ficomp
mov
inc
cwde
jp
aam
fs
rol
lods
xchg
js
xor
dec
movs
and
in
test
hlt
add
push
jp
xchg
mov
mov
shl
repz
dec
retf
jb
jb
lods
repz
cmp
loopne
cmc
test
pop
test
push
(bad)
shl
das
getsec
xchg
test
lods
cmps
push
in
frstpm(287
ret
repnz
ja
call
imul
call
ins
push
lahf
jbe
mov
xor
jecxz
cwde
sbb
icebp
dec
cmp
mov
jmp
or
mov
xchg
arpl
push
data16
push
pop
jae
imul
pop
out
loop
fld
inc
shl
lea
std
xchg
inc
fs
xchg
jg
pop
sbb
and
mov
popa
(bad)
je
or
popf
aam
sbb
mov
inc
retf
xchg
sub
mov
and
fadd
inc
sub
push
adc
(bad)
fsincos
cmps
stos
sbb
pop
adc
aad
push
popf
enter
push
or
movs
test
jb
test
sub
ds
stc
push
sbb
mov
mov
or
test
les
fadd
das
hlt
cs
sub
stos
inc
xchg
cmp
inc
mov
sbb
pop
js
and
inc
fsub
pop
inc
std
ins
out
xor
or
mov
fs
dec
daa
lods
pop
cmc
sbb
xchg
outs
mov
cmps
and
je
movs
cwde
(bad)
movs
ja
adc
arpl
dec
imul
add
into
test
xchg
les
and
lods
ret
adc
bound
aad
jecxz
mov
cmps
pop
aad
lea
and
out
or
neg
imul
mov
mov
pop
add
imul
mov
lods
xchg
mov
into
pop
movs
aam
in
jle
mov
adc
cwde
xlat
sub
xchg
(bad)
jge
ds
cli
cs
xlat
adc
shl
das
sub
shl
arpl
inc
test
pop
mov
cwde
sbb
das
lea
sahf
mov
outs
xor
xchg
outs
xchg
jns
bound
adc
inc
sub
leave
xor
pushf
daa
and
or
adc
leave
sbb
ja
cmp
mov
jb
pusha
sbb
push
(bad)
call
sbb
lea
imul
out
push
pop
imul
mov
add
adc
je
retf
popa
mov
xchg
loopne
loop
fs
arpl
ja
and
hlt
test
ins
jecxz
pop
mov
movs
mov
fdiv
pop
jbe
repnz
mov
dec
push
mov
xor
pop
add
mov
lahf
int3
mov
outs
lahf
repnz
add
ja
sbb
jle
cdq
pop
nop
push
daa
mov
xlat
and
arpl
test
sub
cwde
rcl
mov
or
mov
pop
push
adc
(bad)
imul
jae
jnp
xchg
push
pusha
xor
fisttp
stos
xchg
sbb
add
add
retf
mov
out
mov
loopne
mov
xor
sbb
sub
into
leave
test
(bad)
retf
sbb
or
mov
iret
or
sbb
(bad)
xchg
dec
(bad)
inc
xchg
mov
dec
test
mov
(bad)
in
or
enter
in
adc
inc
in
dec
(bad)
cmps
daa
cmp
setns
xlat
repnz
shl
push
pusha
jmp
cmp
xchg
test
or
retf
mov
jnp
pop
cld
les
mov
retf
test
rcl
inc
aam
xchg
es
mov
aas
aam
loop
stos
dec
jp
or
int3
xchg
or
rol
dec
lahf
std
jp
push
in
pop
jmp
sub
push
or
stc
cmp
sub
(bad)
ss
mov
cld
addr16
dec
mov
pop
std
or
xor
repnz
test
sub
into
mov
adc
aas
fmul
add
sbb
mov
scas
ror
cwde
inc
pop
push
dec
fwait
jb
mov
stc
dec
movs
add
in
push
add
clc
icebp
mov
and
fs
loope
movs
push
shl
(bad)
xor
push
inc
xchg
dec
mov
cmp
ficomp
dec
cld
push
push
ficom
scas
ss
sub
loop
aaa
out
test
shl
add
in
ja
xor
into
in
mov
std
sbb
cmp
mov
std
jle
xchg
pop
fistp
or
ficom
inc
or
inc
add
rcl
dec
es
fcomp
das
sub
stos
in
out
in
(bad)
int
pop
add
pop
mov
sub
pop
or
fs
xor
push
xor
adc
push
push
and
cmp
loop
les
repz
scas
mov
xlat
in
push
int
push
pusha
adc
jge
mov
gs
imul
adc
es
jne
sahf
xchg
dec
jmp
cmc
jmp
movs
ret
sar
test
mov
fcom
bswap
and
and
stc
pop
mov
add
lock
jb
mov
ins
pop
cs
call
jbe
xor
mov
jg
sbb
push
push
jl
sub
out
dec
push
outs
inc
pop
push
fst
(bad)
fnsave
lock
nop
or
ret
mov
outs
mov
lea
fcmove
sub
mov
repnz
dec
sub
mov
imul
or
fist
mov
fisubr
mov
stos
dec
repz
xor
push
ins
jnp
rcl
push
fucomip
cmps
popa
out
(bad)
nop
jmp
call
mov
and
sub
les
push
pusha
and
ins
shl
fcomp
inc
cs
mov
fiadd
inc
mov
pop
sbb
out
jg
jmp
jp
ficomp
add
jle
nop
sbb
ins
adc
in
mov
dec
jle
cmps
leave
add
mov
sti
inc
iret
inc
mov
fdiv
mov
aad
mov
lds
inc
or
push
push
js
rcr
(bad)
sbb
dec
sbb
movs
stc
push
ss
sar
or
mov
mov
cmps
sbb
mov
adc
mov
psubq
ret
(bad)
out
ficomp
pop
jge
ins
scas
out
gs
popa
std
sbb
les
icebp
mov
mov
sbb
fsub
pop
sbb
scas
sbb
xor
jb
(bad)
mov
xlat
cmp
or
shl
das
jp
inc
popa
sahf
fisubr
gs
addr16
and
aaa
lods
jnp
mov
icebp
push
jnp
mov
pop
stos
fist
mov
lock
popa
lahf
(bad)
clc
pop
nop
cwde
repz
je
mov
repz
jge
rol
stos
lods
pop
cdq
and
dec
adc
fiadd
sbb
xchg
sahf
call
mov
sub
dec
pusha
sbb
fwait
into
ret
xchg
push
les
sbb
loope
scas
dec
mov
xchg
dec
cs
movzx
lds
aas
lea
mov
or
loopne
push
push
or
mov
mov
mov
shr
call
mov
stos
lahf
and
sub
int3
popa
mov
mov
int
adc
or
push
sar
dec
cmp
xor
sub
cmps
in
dec
out
sbb
xchg
popa
div
pop
xor
icebp
imul
js
ins
dec
cmc
stos
jge
pop
pop
ja
sbb
push
dec
dec
int
xchg
mov
ficom
cmps
pop
adc
mov
in
xchg
pushw
push
pusha
into
inc
push
in
aaa
adc
fmul
push
in
out
jecxz
add
mov
push
(bad)
mov
adc
pop
call
add
cld
push
test
test
jp
xor
aam
stos
xchg
mov
lock
cmc
icebp
push
xor
jno
push
out
xchg
inc
ss
scas
nop
fistp
call
call
ins
add
dec
dec
or
fst
mov
fisub
adc
mov
inc
in
jl
sqrtps
mov
(bad)
(bad)
cmp
push
jle
mov
pop
jmp
aas
pop
mov
jle
adc
cmp
inc
xchg
idiv
retf
data16
xchg
cwde
push
xor
xor
mov
movs
jbe
out
inc
inc
ss
mov
sbb
in
mov
aaa
arpl
or
dec
inc
in
and
sbb
cdq
stos
ja
inc
movs
pushf
mov
pusha
xor
fstp
aam
dec
mov
loope
call
int
xor
push
cld
and
mov
sahf
or
fidiv
dec
pop
inc
arpl
jmp
rcr
not
pop
retf
icebp
ds
cmc
stos
mov
test
jbe
cmp
les
jbe
xchg
inc
cmp
cmc
mov
add
pop
pop
inc
jno
xor
xchg
mov
mov
xchg
outs
movs
or
rcl
lds
loope
and
out
lods
out
push
retf
inc
pop
inc
jno
fadd
dec
jl
outs
(bad)
adc
shr
xchg
push
call
pop
ret
inc
in
or
sub
or
mov
push
lods
out
mov
cmp
sub
pop
sti
retf
fsubr
dec
lods
and
adc
ins
mov
jg
movs
or
jne
or
sti
push
aas
rol
mov
enter
xchg
mov
retf
imul
bnd
lods
and
add
data16
pop
div
push
dec
loope
cs
push
sbb
adc
xchg
inc
dec
cmp
stc
push
sbb
mov
push
js
mov
pop
hlt
mov
daa
mov
cld
xchg
push
in
scas
mov
lock
sbb
pop
xchg
pusha
xchg
xchg
jp
std
(bad)
fst
mov
pop
dec
and
(bad)
sbb
gs
mov
outs
mov
xor
scas
dec
int
outs
mov
lock
or
shl
xchg
sub
xchg
rol
aad
sub
ja
retf
rcr
and
inc
add
ret
pop
frstor
aad
addr16
and
sbb
mov
lods
stc
sbb
or
hlt
hlt
push
inc
adc
(bad)
mov
jecxz
nop
ins
lea
or
cs
mov
push
and
mov
je
push
ins
rol
and
push
cmp
sub
dec
pop
add
movs
idiv
cmps
std
sbb
sub
sbb
sbb
ins
dec
mov
sbb
(bad)
cmp
or
aaa
adc
and
inc
test
cwde
sar
loope
cmc
jno
repnz
ret
mov
mov
mov
push
ja
jns
scas
int3
call
xchg
inc
mov
xchg
xchg
xlat
aad
mov
aas
lock
call
fwait
je
xchg
into
dec
sbb
sbb
aas
lea
lea
mov
repz
push
fcmovnbe
cmp
loopne
push
retf
add
push
xchg
mov
repnz
into
out
ffree
arpl
in
daa
sti
xor
popa
mov
sub
rcl
arpl
sti
(bad)
idiv
pop
psubsb
push
pop
xor
ds
out
push
rol
pop
dec
leave
stos
mov
inc
xor
mov
and
aad
shl
jge
arpl
mov
cwde
(bad)
dec
fldcw
cmc
fld
cmp
xchg
mov
and
mov
and
cmp
and
xchg
inc
aaa
adc
dec
inc
mov
cmp
inc
mov
adc
hlt
das
daa
lods
pop
ja
mov
sbb
in
mov
test
push
dec
iret
loop
leave
dec
xor
dec
(bad)
fcmovnu
fistp
push
retf
mov
dec
pop
loopne
int3
push
adc
ret
loop
sbb
add
arpl
inc
push
inc
or
push
pop
(bad)
fwait
pop
aam
xchg
xor
pop
pop
retf
sbb
inc
or
loop
call
pop
pop
xchg
xchg
je
push
jmp
ss
push
adc
je
shl
ret
sbb
mov
xor
xchg
call
mov
mov
ret
and
sahf
xor
pop
mov
scas
(bad)
popa
and
out
fwait
sbb
mov
popf
gs
jb
mov
out
or
cmp
fidiv
cmps
or
sti
pushf
jno
movs
push
mov
sbb
jo
add
inc
mov
and
fld
cmps
or
lock
mov
jl
(bad)
(bad)
mov
icebp
add
pop
mov
test
inc
inc
rcl
mov
xchg
pop
jnp
popf
pop
cmp
icebp
test
xchg
cmp
sbb
nop
mov
dec
or
jg
and
cmp
lock
in
mov
lods
dec
test
sbb
and
xor
bound
cmps
scas
inc
dec
jbe
je
cmp
aad
jnp
mul
dec
or
(bad)
or
mov
lds
gs
sub
aas
push
out
mov
push
sbb
cmp
mov
test
(bad)
pop
push
cmp
lock
and
dec
mov
pop
fdivr
sbb
test
int3
js
dec
fcom
push
ss
pop
dec
or
(bad)
pop
sbb
sub
out
lea
cmp
sahf
(bad)
mov
push
sub
fbstp
cwde
dec
das
cli
out
and
leave
(bad)
aas
mov
fwait
jg
or
mov
dec
sar
push
stos
xor
js
imul
sub
sub
fs
cmps
fsubrp
xlat
lds
jmp
arpl
sub
movs
loope
or
rcl
das
lods
ret
cwde
div
ja
jg
sti
ret
(bad)
ins
das
xchg
je
aaa
into
fdivr
and
mov
ret
cmc
push
jp
retf
mov
jle
push
(bad)
inc
retf
jno
xchg
dec
leave
arpl
loopne
jmp
xchg
aad
mov
jne
xor
out
add
inc
rcl
add
addr16
mov
jnp
push
jl
or
xchg
out
mov
fld
adc
pop
fcomp
fidiv
dec
cld
(bad)
push
rol
movs
test
je
enter
xchg
retf
cmp
mov
sbb
or
mov
pop
inc
jbe
sbb
stos
lds
aad
(bad)
fisubr
popa
das
xor
rcr
mov
dec
into
or
adc
xchg
mov
mov
xor
cmp
test
sbb
out
push
mov
jp
sub
fld
repnz
addr16
loope
jle
lahf
fwait
jo
mov
sar
add
shl
out
(bad)
lock
imul
stc
movs
push
jge
cdq
mov
jg
shl
ffree
jp
mov
add
mov
sbb
sub
push
stc
inc
jno
inc
fiadd
pop
fs
aas
adc
aad
jo
js
pop
xor
xchg
je
pushf
rol
sub
daa
push
cmp
or
jo
mov
fadd
xchg
ret
pop
jmp
jge
das
lock
jmp
iret
loopne
test
mov
loope
jnp
mov
shr
push
outs
stc
add
das
jns
mov
cmc
fdiv
dec
in
inc
dec
inc
or
shl
movs
push
and
ret
shl
pop
dec
push
ret
ret
fs
push
xchg
dec
pushf
lea
mov
(bad)
(bad)
(bad)
adc
enter
inc
test
and
or
cmps
jne
or
pop
push
bound
mov
retf
pop
aam
imul
push
and
jne
ins
jmp
dec
sbb
and
das
repz
aas
(bad)
fldl2e
ds
pop
int3
sbb
cld
leave
sub
out
call
rol
adc
int3
adc
push
cmps
mov
inc
mov
lock
mov
jns
fbld
enter
cdq
je
std
mov
sub
cld
dec
sbb
cmps
mov
dec
push
mov
mov
push
adc
pop
mov
mov
fadd
mov
enter
xchg
outs
jnp
jecxz
mov
sbb
outs
jne
dec
inc
sbb
push
ret
clc
mov
push
and
inc
scas
push
js
cdq
sbb
cld
jno
repnz
shl
push
(bad)
test
jecxz
nop
xchg
xor
xchg
inc
lods
xor
mov
int
movs
ret
mov
cmp
in
dec
repz
xchg
add
js
sub
xchg
or
call
adc
arpl
int
or
add
mov
xchg
mov
adc
in
adc
dec
mov
bswap
inc
dec
add
mov
outs
jle
fldenv
cmps
dec
adc
add
out
fwait
and
adc
out
lods
pushf
gs
jbe
in
stc
imul
jae
neg
pop
call
xor
ja
movs
loop
loop
fcmovu
cmp
mov
jb
pop
js
mov
call
ins
cmp
sbb
lds
pusha
add
cmp
or
cmp
or
mov
inc
das
mov
or
sub
add
dec
inc
inc
das
sti
lods
jno
xor
in
add
pop
xchg
adc
push
fisttp
mov
out
mov
push
in
jmp
int3
hlt
pushf
pop
cli
sub
sub
adc
adc
sub
jle
aad
sub
mov
sub
mov
dec
xchg
in
xor
jno
clc
push
xchg
fwait
outs
xchg
sub
call
aam
xchg
xchg
in
ret
in
bound
push
jl
into
scas
inc
daa
arpl
out
mov
mov
xchg
cmp
jl
hlt
nop
sbb
test
aam
mov
ja
jecxz
and
cli
add
push
sahf
sbb
retf
data16
ja
xor
data16
push
cmp
and
lea
dec
lds
imul
enter
fiadd
xchg
pop
mov
jg
in
jl
adc
repz
cli
movs
jno
call
mov
mov
xlat
scas
jo
xor
cmps
out
aas
mov
adc
test
stos
xchg
pop
jge
sub
clc
adc
add
mov
push
push
add
sub
inc
sub
test
mov
inc
cld
outs
xor
pop
xchg
or
cmp
xchg
add
ja
je
sbb
cmc
fwait
shl
int
mov
ret
and
pop
inc
loopne
fwait
(bad)
daa
es
lds
std
add
mov
mov
pop
test
loop
pushf
(bad)
aaa
cwde
mov
ret
add
inc
ss
or
jns
imul
test
pop
or
std
or
mov
dec
mov
jb
push
add
fs
pusha
jge
pop
jnp
cmp
xor
mov
cmp
je
rol
inc
push
shr
aas
out
int3
sbb
mov
hlt
mov
aam
inc
fcmovu
outs
adc
xchg
mov
in
imul
sub
push
and
cmps
arpl
dec
aad
xchg
ja
mov
or
out
jg
push
imul
imul
xchg
cdq
sahf
ins
dec
lock
and
mov
(bad)
push
nop
pop
jmp
bound
das
or
pop
adc
dec
jg
mov
jnp
imul
pusha
inc
jge
leave
ins
add
xchg
pop
fist
cmps
dec
mov
(bad)
out
cwde
push
cmp
jg
or
or
ins
push
sbb
les
add
xchg
jmp
xlat
cmp
inc
mov
sub
mov
loopne
xchg
mov
mov
es
mov
and
push
or
(bad)
jmp
lea
outs
mov
or
inc
jo
retf
cmp
cmp
lock
push
(bad)
test
inc
mov
pushf
pop
pushf
add
dec
jbe
lahf
fadd
cs
retf
das
rcr
retf
push
push
mov
push
push
xchg
jnp
(bad)
scas
test
imul
mov
adc
js
add
out
pop
and
jge
dec
test
mov
je
popf
out
nop
fmul
xor
lahf
sub
aas
dec
push
xor
pop
pop
mov
dec
lods
dec
lods
shr
enter
xor
sub
test
cmp
shl
inc
jecxz
mov
mov
out
xchg
aad
ja
xchg
mov
test
xchg
xor
or
or
sub
sub
mov
xchg
inc
in
shl
ins
call
je
add
sbb
in
shr
push
or
pop
ins
ret
push
or
les
xchg
xor
scas
cmc
or
pop
outs
mov
pop
and
mov
push
pop
dec
dec
or
stos
pop
mov
cli
popf
and
dec
cmps
add
ins
sbb
xchg
fldcw
aas
hlt
xchg
in
push
xor
cmps
enter
sbb
and
addr16
and
jb
ins
imul
xor
jbe
fidiv
dec
loopne
in
call
jae
xchg
lahf
mov
push
and
sbb
jle
and
data16
dec
add
jg
adc
test
inc
jmp
jne
push
or
mov
fcomi
sub
and
imul
push
sbb
xlat
mov
ret
test
lahf
inc
das
jno
ja
or
mov
lea
mov
imul
in
push
cmp
call
mov
sbb
sub
jno
mov
scas
lock
daa
stc
push
cmp
int
out
mov
icebp
lods
imul
add
push
pushf
fwait
movs
and
and
mov
and
retf
icebp
inc
in
mov
ret
(bad)
mov
aaa
les
lock
xchg
call
jne
cwde
adc
test
movs
cmp
or
and
neg
test
cdq
popf
xor
iret
fimul
jg
int3
and
lahf
int
cmp
pop
add
mov
mov
rol
inc
out
sahf
hlt
cmps
cmovs
mov
jmp
dec
rol
in
mov
and
jmp
dec
and
adc
cmc
sub
stos
inc
fwait
pop
pop
out
xor
call
xchg
and
xor
(bad)
dec
inc
xor
push
outs
push
xor
jmp
mov
dec
iret
and
sbb
pop
push
push
add
jle
rol
shl
cmps
pop
cwde
lahf
add
sub
and
mov
in
cmp
add
mov
lods
aaa
cmc
sbb
and
pop
or
movs
in
pop
in
in
lock
int3
mov
jns
inc
shl
xor
push
in
jns
out
call
jns
push
iret
(bad)
mov
lahf
add
jb
cmp
int
sub
outs
mov
out
nop
sbb
sub
push
mov
adc
mov
(bad)
cmps
push
mov
sub
push
in
sbb
das
mov
retf
iret
pushf
xchg
fistp
pop
addr16
popa
jnp
sar
movs
cmp
idiv
sar
into
jl
pop
jmp
jge
test
mov
jecxz
jno
pusha
jns
bound
pusha
mov
das
mov
or
mov
adc
xchg
jecxz
nop
cmps
xchg
gs
clc
or
inc
addr16
jecxz
and
dec
push
mov
and
sbb
fld
imul
inc
cli
dec
lods
je
cmp
sub
ror
inc
jmp
adc
icebp
sub
add
mov
jecxz
lea
xchg
test
rcr
pop
and
dec
out
arpl
les
gs
out
ja
lock
pushf
std
fs
jmp
outs
adc
mov
dec
in
mov
in
in
and
rol
(bad)
js
pusha
add
push
and
fwait
jl
aaa
test
xor
sahf
mov
inc
sbb
fst
jmp
out
push
adc
mov
dec
push
mov
or
inc
add
test
sar
aad
or
push
ror
and
sbb
imul
pushf
out
test
add
cmps
jnp
fwait
sbb
cmp
ret
push
int3
push
stos
jmp
enter
pop
xchg
and
or
cmp
popa
push
mov
push
xchg
pop
sbb
mov
sub
xor
xchg
int
fiadd
or
mov
movs
mov
pusha
dec
inc
test
push
push
fsub
jne
or
jb
xchg
ja
icebp
mov
fcom
test
or
es
inc
test
icebp
loope
ins
xor
mov
add
pop
ret
lods
arpl
ins
sub
out
cmps
in
in
add
loope
aad
je
dec
fisttp
cmp
(bad)
shl
fwait
loop
add
test
cmp
jb
adc
and
adc
lahf
int
out
add
hlt
push
inc
movs
les
in
jmp
sti
popf
cmp
push
loopne
cwde
out
inc
or
data16
lfs
fdivr
mov
ror
int
xchg
fstp
rol
mov
jns
out
aas
into
rcl
jmp
xchg
lods
pop
shl
xchg
pop
fcom
mov
cmp
loop
xor
aas
(bad)
(bad)
cmp
aaa
xchg
out
inc
sbb
xchg
and
or
jg
or
inc
out
cmp
cmps
dec
xchg
(bad)
mov
in
std
test
mov
xor
out
or
outs
retf
cmp
aam
dec
xor
(bad)
das
sbb
jle
pop
xchg
push
ret
add
cmp
div
mov
movs
jno
shr
inc
into
cmp
push
and
pop
adc
icebp
and
push
sub
push
mov
push
mov
mov
cmp
cmps
mov
aad
pop
movs
jecxz
mov
fst
imul
mov
push
jae
sub
xor
sti
test
and
lods
out
lahf
and
push
jge
lds
mov
popf
pushf
fwait
nop
ret
or
add
test
clc
rcr
stos
arpl
js
aad
adc
stc
jmp
js
call
fist
(bad)
hlt
dec
xor
inc
sbb
int
outs
xor
int3
arpl
add
loope
div
cli
pushf
mov
gs
xchg
(bad)
add
outs
sar
clc
jbe
hlt
jno
inc
rcr
push
mov
enter
or
mov
ins
inc
xchg
or
fs
push
pusha
std
(bad)
retf
dec
es
test
leave
je
mov
ffree
cmp
mov
movs
lods
mov
and
push
pushf
dec
xchg
cmps
scas
mov
mov
xchg
movs
inc
jnp
jbe
ins
sbb
test
sti
test
mov
stos
(bad)
and
and
jnp
xacquire
call
arpl
inc
test
xchg
lahf
fst
test
loop
rcl
clc
je
sbb
test
std
xchg
mov
in
ja
cli
cmp
out
dec
cmps
xlat
fiadd
mov
mov
mov
outs
fnstsw
xchg
lock
retf
daa
arpl
jno
push
mov
jl
rcr
lock
ja
icebp
es
mov
lea
and
adc
pop
xchg
cs
in
jl
xchg
mov
cmps
jns
xchg
xlat
pop
pusha
cmps
ficomp
test
rcr
xchg
cdq
mov
and
fstp
push
gs
fst
jmp
aas
and
xlat
jle
sbb
icebp
jne
xchg
mov
xchg
push
pop
shl
in
lds
lods
jns
imul
ds
pop
fsub
add
xor
sahf
mov
stc
push
jno
cmp
bound
sbb
arpl
(bad)
div
pop
outs
dec
jge
jnp
mov
sti
pop
pop
out
mov
pop
mov
xchg
mov
outs
push
adc
repz
sbb
test
push
add
xchg
push
fbld
push
outs
adc
add
or
pusha
dec
push
push
popf
sub
pop
pop
cwde
fdivr
daa
aad
stos
(bad)
jno
xor
push
dec
jno
pop
aad
cli
push
dec
add
pop
xor
jno
push
mov
lea
fidiv
sbb
mov
sub
mov
mov
push
fucomip
xchg
cwde
(bad)
mov
mov
dec
dec
pop
leave
aam
pop
and
dec
and
mov
(bad)
ins
cs
rol
inc
xor
cmp
ud0
jo
push
pop
les
fsub
cmp
dec
jmp
test
inc
mov
repnz
xchg
lea
sub
mov
cmp
lahf
xchg
(bad)
out
movs
push
mov
xlat
cld
ret
aam
mov
and
mov
xor
sbb
bound
dec
add
dec
jns
cmp
mov
call
aam
(bad)
ss
clc
rcl
(bad)
sti
popa
aaa
in
ja
jl
gs
in
sar
xchg
es
or
inc
jmp
sub
(bad)
pop
cmp
xchg
mov
lock
mov
lea
sar
push
xchg
xchg
mov
pop
jb
pop
mov
cmps
pop
addr16
stos
mov
outs
sbb
adc
pop
shr
das
xor
mov
rcl
iret
pop
(bad)
in
(bad)
fld
mov
jne
dec
jno
retf
clc
retf
aas
jno
clc
mov
cmp
pop
sbb
mov
out
shl
loop
call
outs
std
(bad)
sub
leave
(bad)
shr
repnz
sbb
test
sub
ret
out
enter
or
xchg
or
xor
push
test
shl
mov
lods
inc
sbb
(bad)
movs
iret
jb
pop
ss
cmps
sbb
inc
pusha
add
imul
stc
xor
scas
inc
xor
mov
retf
shl
and
jmp
movs
cmp
inc
dec
and
(bad)
sbb
in
and
sub
iret
xchg
push
sbb
cmps
iret
and
ss
mov
ins
mov
jns
inc
shl
arpl
je
inc
call
pop
pop
jnp
clc
lods
fild
xchg
and
mov
rcl
cmp
dec
ret
cmp
xor
lock
in
jae
sbb
or
xchg
ss
xor
adc
xchg
out
call
jecxz
call
pusha
and
push
sub
loope
call
cmps
sub
sbb
iret
jmp
neg
push
xchg
adc
pusha
push
cmp
pop
inc
cmp
(bad)
iret
cmp
push
ins
xchg
data16
pop
and
or
adc
pop
scas
fst
xchg
fistp
cli
sbb
fcmovnu
add
ds
jbe
imul
adc
ins
outs
repz
xchg
dec
loop
test
movs
and
sbb
cmps
or
mov
icebp
(bad)
and
popa
imul
les
push
retf
xchg
xchg
push
fwait
push
adc
ds
ss
pop
fnstenv
sbb
call
xchg
cmps
and
(bad)
dec
popa
and
dec
in
mov
shl
mov
jg
shl
ret
and
out
clc
enter
pop
arpl
adc
imul
cli
cdq
add
xchg
lock
or
mov
push
mov
cmp
jg
js
ret
iret
stos
mov
add
bound
ds
push
mov
adc
popa
es
push
add
and
jmp
imul
sbb
iret
ja
in
cmps
int3
aad
adc
jb
int3
cmps
cdq
int3
stos
xor
scas
and
adc
rcl
retf
cmp
and
sahf
sub
mov
lock
cdq
mov
sub
pushf
adc
push
jne
les
clc
jo
cmp
lock
inc
adc
or
clc
push
clc
sub
loop
and
inc
in
cwde
sbb
hlt
xchg
sar
les
test
popf
cwde
ds
fbstp
imul
pmaxub
adc
leave
adc
jg
pop
mov
mov
cld
ja
xchg
arpl
pushf
ins
call
xchg
inc
sub
stc
dec
and
popa
sub
or
cli
retf
sub
adc
cmc
xor
pop
or
les
cmps
test
pop
and
push
aad
jbe
test
pop
aam
mov
and
imul
call
adc
or
icebp
sub
scas
cli
mov
mov
pop
push
cmp
daa
and
lods
jge
xor
jmp
shl
mov
repz
rol
nop
add
push
data16
fst
push
sbb
add
out
loop
mov
frstor
(bad)
stc
jno
test
repnz
enter
out
push
rol
add
dec
cmps
cmps
xor
adc
(bad)
cdq
inc
pop
stos
push
push
mov
stos
mov
test
les
in
(bad)
shr
jns
sub
loope
inc
lods
in
sbb
and
ja
mov
imul
fisubr
ficomp
nop
(bad)
ins
(bad)
and
ret
dec
xchg
add
xor
popa
xor
push
pop
shld
xchg
ficomp
push
test
lea
add
scas
sbb
mov
pop
not
movs
xchg
hlt
cmc
push
lods
sub
js
retf
dec
out
fadd
cmp
hlt
mov
inc
jo
cmp
jmp
int3
repz
dec
or
scas
and
dec
adc
jb
inc
rcr
or
mov
mov
movs
cs
sub
clc
cmp
cmp
aam
ret
outs
dec
shr
adc
mov
sti
loope
jmp
cmp
addr16
repz
cld
push
outs
sahf
mov
test
mov
sti
jns
jns
push
ror
(bad)
fdivr
xchg
mov
adc
sub
mov
fucomi
hlt
(bad)
cmp
stos
pop
jg
arpl
(bad)
mov
pop
sub
fcom
lds
pminub
mov
and
pop
imul
mov
push
std
test
gs
cmps
xor
sub
pop
xor
jb
jmp
push
(bad)
fs
call
stos
xlat
and
clc
or
push
rol
or
int
test
shl
hlt
ins
push
xchg
js
imul
and
in
jb
add
and
gs
mov
sar
cmp
pop
lea
inc
clc
movs
jae
stos
test
push
in
jmp
das
scas
addr16
push
push
bound
add
fsub
mov
add
dec
mov
icebp
jmp
in
hlt
cld
sbb
inc
dec
inc
xor
js
shr
lods
movs
jo
loop
inc
test
repz
and
aad
int3
sbb
dec
dec
in
jnp
test
xlat
inc
cmc
fldcw
sub
xchg
mov
push
jbe
dec
mov
gs
icebp
pop
and
push
xchg
stos
pop
adc
push
sar
ins
xlat
cdq
fcom
jg
mov
test
push
inc
mov
push
bound
out
add
shl
loope
pop
push
mov
(bad)
scas
cmps
mov
cmp
cmp
xlat
inc
mov
fld
jb
lods
push
cmps
je
lea
fstp
call
mov
pop
mov
dec
cli
mov
ret
fdivr
mov
outs
dec
xlat
jbe
cmc
dec
in
stos
jbe
push
and
loope
sbb
popw
cld
push
into
jl
push
pop
or
clc
rcl
outs
sub
hlt
jns
ss
add
stos
mov
(bad)
inc
xor
jne
bnd
int3
inc
mov
movs
in
fldpi
cmp
xchg
fcmovnu
call
rcl
je
lahf
mov
xchg
mov
inc
jmp
popf
test
pop
mov
jno
or
les
jmp
mov
outs
inc
and
iret
pop
arpl
sub
sub
scas
daa
push
adc
aas
xor
xchg
fnclex
fldcw
fimul
repnz
test
fst
fwait
cld
xor
shl
stos
addr16
push
(bad)
mov
jns
sbb
rol
clc
jns
or
mov
mov
inc
adc
les
(bad)
in
mov
mov
enter
xchg
jns
jp
pop
xchg
imul
sbb
in
mov
mul
ret
inc
mov
xchg
hlt
into
sub
mov
sub
mov
mov
or
dec
stc
cs
mov
dec
inc
aad
push
add
ins
lea
sub
(bad)
or
adc
push
dec
jg
ins
xor
ja
(bad)
xchg
sbb
sbb
lahf
scas
mov
cmp
sti
xor
and
stc
jno
test
mov
fisttp
adc
test
(bad)
popf
gs
int3
js
sub
push
ss
std
fsub
pusha
outs
call
fs
popa
lds
inc
imul
cmc
mov
retf
mov
cmp
xchg
(bad)
cld
test
rcr
pop
mov
sub
lds
push
xlat
cmp
es
ins
jmp
gs
addr16
cmp
lea
xor
int3
ret
xor
mov
das
icebp
mov
lahf
adc
movs
sub
into
xadd
jbe
cmps
enter
mov
test
jg
jo
lea
bound
mov
xor
(bad)
mov
cs
rol
mov
sbb
fs
mov
xchg
jno
xor
inc
not
scas
push
adc
jmp
loop
cwde
lahf
cmp
cmp
push
out
push
push
movs
data16
cmp
movs
pop
imul
enter
test
popf
leave
fcomp
add
sti
push
xor
or
and
xchg
inc
ss
repnz
mov
stos
cdq
add
inc
jnp
test
nop
shl
inc
mov
into
sub
gs
mov
mov
adc
and
cmp
rol
dec
cwde
sub
es
pop
mov
add
in
aas
fnsave
test
add
and
leave
test
sbb
dec
inc
mov
shl
movs
mov
push
mov
daa
sbb
lods
mov
into
les
jg
dec
sti
push
arpl
shl
das
rcl
je
cmp
mov
std
or
outs
cmc
push
inc
int
xor
out
cld
fwait
push
cmp
fisub
or
mov
mov
xor
jecxz
and
imul
cmp
loope
mov
jae
ret
fdiv
xor
imul
xor
(bad)
cmps
(bad)
jg
or
jae
ss
xchg
jns
dec
jns
mov
popf
loop
dec
int
ret
adc
jg
test
dec
les
adc
daa
fbstp
(bad)
mov
rol
adc
gs
pop
rol
sub
adc
adc
ret
jo
rcr
sub
int
jnp
das
dec
mov
ja
retf
loope
jno
xlat
adc
inc
xchg
push
bound
mov
cmc
call
test
mov
int3
sub
jp
enter
cmc
push
or
sub
cmp
jae
sub
or
fsubp
icebp
mov
xor
sub
retf
pusha
mov
sbb
and
loop
clc
jo
push
jge
sbb
aaa
stc
popa
cmp
je
add
jle
(bad)
icebp
popa
mov
xor
shl
xor
mov
sub
jb
stos
mov
sti
popa
xor
sbb
inc
repz
xchg
cmps
jge
loop
ss
shr
icebp
rep
mov
pop
gs
es
adc
adc
jno
scas
movs
cld
mov
sbb
jns
add
cmp
or
mov
xchg
ret
loopne
xchg
mov
and
dec
push
fisttp
push
fist
rcl
clc
push
outs
test
adc
loopne
xor
ja
fdivrp
mov
push
jl
add
push
add
jmp
push
add
push
pop
dec
mov
dec
cmp
push
add
dec
jbe
jl
or
in
mov
push
adc
mov
cs
clc
mov
xchg
dec
inc
xor
push
mov
lods
cmps
lods
fnstcw
xchg
jmp
ss
push
xchg
(bad)
outs
adc
mov
out
dec
dec
ins
aad
xchg
jl
mov
mov
cmc
fcomp
scas
and
iret
mov
aaa
fdivr
push
sbb
(bad)
icebp
fnstsw
jns
not
xor
loope
xchg
dec
dec
rcl
jnp
mov
jno
inc
xchg
sub
xchg
adc
pop
dec
dec
or
int
mov
fidivr
dec
fimul
push
add
add
adc
test
inc
cmc
je
push
adc
retf
sub
daa
inc
inc
add
pop
mov
push
into
fst
in
sahf
cs
xchg
loope
movs
pop
(bad)
jmp
xor
cdq
mov
out
cs
into
pop
inc
jno
jecxz
repnz
push
aaa
call
xchg
mov
pusha
pop
sbb
call
stc
neg
data16
fwait
into
fistp
cmps
lds
movs
aam
sbb
mov
lea
inc
push
dec
fistp
sbb
test
or
lods
test
lock
lea
mov
mov
and
xlat
out
dec
mov
outs
fcom
xor
aaa
push
repnz
pop
retf
push
jne
xchg
xchg
pop
test
mov
add
or
ret
sbb
inc
push
xor
mov
jno
enter
inc
gs
jp
fstp
inc
dec
push
adc
icebp
in
jge
sub
fcmovnbe
fld
adc
sub
jno
add
push
sahf
push
xchg
cdq
xchg
(bad)
in
push
and
pop
ins
dec
mov
out
cmp
pop
pop
xchg
addr16
mov
nop
scas
enter
lea
popf
mov
mul
loop
mov
jge
inc
mov
xchg
dec
(bad)
adc
adc
sub
and
or
cmp
imul
pop
dec
std
in
xor
inc
push
rol
out
int3
add
push
cli
popa
test
sub
ret
les
out
or
and
inc
inc
mov
or
xchg
ja
mov
adc
(bad)
jae
add
jae
add
cmp
imul
daa
mov
stos
mov
adc
shl
test
jne
mov
rcr
les
and
ret
gs
jge
stos
leave
and
ins
in
shl
adc
inc
mov
add
mov
mov
iret
aam
scas
push
sub
cmps
sbb
sub
lds
lods
ret
test
scas
pop
repz
fidivr
mov
into
popa
adc
out
jmp
fdivr
popf
adc
arpl
test
mov
mov
into
mov
jnp
ficom
cmp
mov
pop
dec
(bad)
clc
(bad)
xchg
xchg
out
dec
je
mov
test
sub
leave
imul
ss
mov
sbb
jae
jns
(bad)
leave
or
add
lds
lods
aam
jl
ins
sbb
ins
cmps
pop
mov
mov
mov
mov
fidiv
cwde
adc
sti
fdivrp
push
arpl
data16
mov
outs
pop
pop
pop
outs
mov
mov
add
repnz
mov
sbb
push
mov
push
ret
adc
xor
mov
cmp
cmc
arpl
inc
call
nop
cmp
sub
add
retf
ror
lods
repnz
xchg
inc
dec
es
ret
out
add
test
or
in
ins
or
sbb
push
shr
ja
xchg
jg
jmp
ds
push
sbb
shl
or
mov
scas
(bad)
cmp
mov
mov
ror
cmps
jns
mov
icebp
fsubr
inc
(bad)
cdq
mov
out
pop
sbb
adc
mov
mov
or
cmp
and
mov
outs
aas
xchg
shr
and
dec
push
int3
sbb
inc
push
lea
jnp
sub
dec
es
push
fwait
mov
xor
xchg
cmp
arpl
movs
lods
test
or
lock
iret
cmp
push
pop
and
xchg
xor
add
into
ret
outs
adc
in
out
pop
cmp
test
or
or
pop
stos
or
mov
cmp
rol
je
pop
cmp
fwait
xor
out
je
adc
jle
xchg
(bad)
call
pop
cmp
out
pusha
mov
fimul
or
loop
(bad)
add
or
inc
cdq
pop
mov
adc
mov
out
int
push
fwait
push
pop
mov
retf
adc
jns
pop
int3
or
push
add
adc
and
sti
xor
fcomp
jge
sbb
loope
and
stos
inc
jecxz
std
ds
dec
sub
iret
cdq
(bad)
fisttp
mov
stos
sbb
retf
les
add
retf
sbb
inc
mov
or
sbb
sbb
ss
push
in
push
mov
mov
jecxz
lods
add
(bad)
pop
out
cmp
rcr
int3
icebp
out
loopne
mov
jne
test
mov
pop
(bad)
mov
push
jne
out
les
and
aas
push
test
add
add
call
sub
in
or
dec
call
out
xchg
dec
daa
sub
jmp
push
les
es
lods
test
mov
js
jg
in
push
jle
mov
rcr
push
sbb
push
daa
fs
int3
inc
push
popa
jecxz
xor
das
mov
cmps
dec
test
es
gs
pop
cld
adc
sti
dec
fsub
push
jp
push
mov
sbb
cmp
(bad)
sub
inc
nop
xor
fdivp
ins
(bad)
jmp
stos
xor
mov
inc
mov
das
call
sub
mov
push
mov
mul
iret
repz
lea
dec
aaa
js
adc
std
les
dec
dec
fiadd
sbb
add
icebp
in
sub
pop
pop
pop
and
imul
fwait
adc
test
pop
sbb
mov
addr16
aas
mov
dec
xor
or
out
sbb
xchg
mov
xchg
jl
and
mov
xor
xor
pushf
cld
pop
mov
aam
ds
int3
fadd
or
out
push
adc
sub
fwait
(bad)
mov
fsub
enter
push
(bad)
test
stos
mov
mov
mov
mov
inc
fwait
dec
add
mov
lahf
sahf
xchg
sbb
dec
inc
(bad)
leave
push
mov
and
xchg
aam
push
jns
imul
or
mov
jb
ins
push
push
test
out
and
jae
in
cdq
clc
adc
hlt
push
nop
fdiv
inc
jns
or
xchg
lock
lods
adc
add
(bad)
sbb
rcr
call
pop
(bad)
adc
mov
in
call
pushf
jbe
aad
mov
inc
sub
xchg
mov
pusha
jb
(bad)
xor
xchg
fisubr
push
mov
ficom
mov
repnz
rol
xchg
push
(bad)
mov
jmp
jecxz
in
dec
sahf
and
ror
mov
(bad)
call
adc
hlt
pop
mov
sub
ds
test
test
sub
pop
addr16
adc
add
lahf
cmp
mov
sub
std
es
sbb
sti
pop
ds
lock
in
cmc
jae
popa
xchg
or
leave
cmps
push
xor
nop
loopne
mov
rcl
xchg
icebp
loop
sbb
test
ret
add
jg
invd
aas
(bad)
jmp
sti
call
mov
or
add
push
xor
inc
or
cmp
ficom
cmc
aaa
out
jo
xchg
pushf
or
push
sti
push
and
sub
push
add
pusha
dec
fadd
xchg
inc
aad
lds
jmp
test
dec
mov
fld
adc
or
xchg
lea
xor
in
out
jp
jmp
or
jle
jno
(bad)
push
and
xor
in
cpuid
ror
mov
mov
ror
nop
test
fisttp
cmc
sbb
jne
cdq
(bad)
sbb
stos
xor
ds
fimul
dec
fwait
xor
mov
das
test
jno
inc
lock
add
and
fcom
stos
add
mov
loop
jne
lock
inc
pushf
fs
daa
inc
sar
mov
dec
cwde
loop
sub
arpl
les
inc
rcr
push
inc
sar
xor
outs
shl
cmc
lods
add
scas
mov
mul
ss
fwait
mov
pop
in
lds
call
out
xor
mov
(bad)
stc
jp
(bad)
xchg
fucomip
lds
ret
rol
loopne
adc
xchg
bnd
rol
xchg
jnp
mov
add
jmp
mov
iret
cmp
jmp
inc
xchg
push
cmps
fcom
jbe
out
hlt
lock
xor
mov
cli
mov
push
pop
jge
loope
push
(bad)
pusha
gs
loope
lock
add
lods
add
pop
sbb
clc
test
or
dec
nop
xor
sahf
adc
mov
sbb
push
(bad)
mov
cmp
mov
push
and
cmc
pushf
mov
std
lea
xchg
xor
fwait
addr16
dec
sar
dec
fucomip
in
cld
mov
xchg
sub
test
mov
loop
push
mov
scas
lea
es
xchg
cmc
inc
or
jbe
inc
stos
mul
cmps
push
mov
sub
lea
mov
mov
and
jne
test
dec
push
cdq
jmp
ret
cmps
jno
in
pop
cmp
test
mov
ret
xchg
jle
xor
xor
outs
fisubr
add
sbb
pop
pusha
mov
repnz
push
test
mov
fnstenv
ins
inc
xor
lea
sbb
adc
int3
or
fs
dec
push
js
xchg
lea
cmc
mov
out
popa
mov
dec
sbb
jo
retf
jb
sbb
mov
imul
sub
mov
fadd
cmc
mov
cld
ret
or
push
pop
addr16
sahf
push
imul
outs
inc
mov
les
sub
sub
cmc
mov
shl
cmp
ds
clc
mov
pop
nop
lea
add
test
or
jmp
outs
jle
test
rcr
sbb
push
mov
sub
xchg
mov
cwde
jns
fnstcw
and
ret
hlt
mov
popa
inc
jle
xchg
sbb
cmps
data16
jno
lea
loop
xchg
inc
dec
stos
pop
add
ret
(bad)
(bad)
adc
jbe
sti
mov
mov
cmp
lahf
and
mov
shl
dec
push
sti
dec
leave
sbb
pop
out
add
sub
mov
xor
popf
adc
and
mov
std
xchg
(bad)
into
ret
(bad)
mov
arpl
inc
js
std
adc
data16
mov
clc
inc
push
cmp
ja
push
in
mov
mov
test
push
test
jp
repnz
lds
push
mov
fisttp
sbb
aaa
shl
push
pop
pushf
mov
scas
retf
adc
sti
in
retf
mov
dec
mov
out
jae
sub
jb
add
ror
stos
imul
xchg
mov
fcom
mov
shr
or
adc
lahf
mov
add
dec
imul
stc
sbb
pop
jne
jl
sbb
fs
push
xchg
sahf
test
mov
retf
pop
hlt
push
cld
jge
sub
pmaddwd
stos
call
mov
fsubr
into
pop
dec
pushf
out
and
or
(bad)
cmp
daa
iret
js
dec
mov
hlt
xchg
sub
mov
jne
in
popf
int3
pusha
jae
aaa
neg
and
add
push
jb
addr16
jg
movs
xchg
xchg
xor
popf
xor
xchg
sbb
cdq
hlt
dec
aaa
daa
pusha
mov
and
jae
or
repz
cmp
sbb
or
clc
arpl
test
lock
outs
and
cdq
jno
lock
mov
in
cld
dec
push
add
add
arpl
mov
bndldx
pop
ret
clc
and
addr16
sbb
lods
test
std
push
inc
in
mov
jb
fisub
bound
js
add
xor
adc
mov
xchg
das
dec
nop
ficom
push
mov
mov
lods
and
mov
pop
sub
cwd
enter
sbb
cmp
and
and
fistp
cmps
inc
cmp
and
and
or
clc
outs
mov
jo
jnp
mov
mov
cmp
jmp
sar
jae
mov
pop
and
cmp
ja
shl
and
aad
int3
loopne
test
add
xchg
xchg
xor
adc
or
mov
test
cmp
dec
sub
cmp
sbb
cmp
in
sub
mov
fldenv
xor
xchg
push
loope
jbe
shl
adc
std
push
pop
loope
sti
outs
dec
add
(bad)
or
nop
sahf
inc
in
push
lahf
adc
inc
popf
enter
push
loope
dec
in
xor
mov
ror
pop
mov
(bad)
xchg
fld
pop
fld
dec
xlat
ins
or
xchg
mov
xor
fild
rcr
pop
inc
lea
(bad)
cwde
push
mov
mov
fcomp
cli
scas
lds
(bad)
scas
(bad)
out
out
aad
add
xor
cmp
mov
and
fisub
jl
mov
pop
imul
and
jmp
or
jmp
add
pop
adc
jbe
add
cdq
cmp
sub
(bad)
xor
sbb
in
xchg
stc
add
mov
outs
cld
push
jmp
fisub
or
fsub
fistp
sbb
dec
dec
jmp
pop
xlat
fidiv
pop
cmps
push
movs
out
dec
inc
(bad)
test
adc
imul
scas
or
add
mov
mov
jbe
loopne
mov
aad
xor
add
and
cmp
push
loop
(bad)
sbb
dec
mov
add
fs
clc
dec
nop
(bad)
loope
sbb
mov
mov
cmp
imul
add
or
sbb
push
es
jg
mov
jnp
(bad)
xchg
call
mov
mov
mov
test
stc
push
and
pop
loope
pusha
push
pop
pushf
sahf
jle
adc
mov
pop
sub
cli
loop
xor
cwde
fsub
rol
arpl
xchg
jecxz
mov
pop
mov
in
cmps
clc
xor
out
(bad)
inc
jae
mov
aad
fdiv
pop
aas
pop
aam
add
cwde
into
enter
mov
in
fisttp
dec
data16
and
bound
loopne
xchg
and
int
fbstp
inc
mov
mov
pushf
aas
cmp
mov
sub
sbb
retf
and
xchg
mov
jb
cmp
lds
mov
dec
add
lahf
addr16
leave
out
enter
dec
adc
out
mov
aad
mov
aam
xor
push
sub
fild
cwde
call
mov
cmps
in
add
jne
fistp
outs
enter
mov
cdq
outs
sbb
jbe
jbe
sub
inc
add
push
inc
in
pop
adc
mov
pop
in
fbld
scas
fwait
push
in
mov
ror
jb
dec
pop
mov
lea
xchg
test
sbb
push
scas
or
adc
icebp
cmp
outs
push
or
add
retf
iret
cmp
or
scas
fs
push
push
cli
out
cs
cmp
mov
ss
(bad)
push
pop
pop
div
loop
add
push
add
enter
nop
(bad)
rcr
out
stos
xor
and
sbb
clc
xor
movs
push
sub
dec
jns
(bad)
aaa
stc
jg
adc
xchg
fisttp
cmp
arpl
xor
pushf
xchg
xchg
push
ror
xchg
sbb
xchg
leave
mov
ja
sbb
jecxz
inc
and
popf
fsub
aad
adc
add
fwait
adc
xlat
jno
jb
(bad)
ficom
or
mov
fisub
movs
in
inc
or
jmp
idiv
daa
mov
repz
jb
test
fsub
and
jge
loope
pop
aaa
loopne
xor
mov
fs
div
scas
or
adc
adc
ja
mov
inc
addr16
inc
sbb
xor
repnz
das
inc
imul
stc
loop
xor
jecxz
fstp
push
lds
or
mov
dec
fldcw
jmp
hlt
xchg
mov
inc
sub
push
inc
cmp
gs
jb
mov
mov
xor
pusha
(bad)
mov
xchg
xor
jo
shr
or
repnz
xor
(bad)
cmc
xchg
pop
in
outs
pop
ror
in
inc
popf
mov
cli
dec
leave
and
aad
fwait
popa
xchg
jo
stos
repnz
das
pop
lods
adc
jg
or
adc
sub
add
push
out
in
loopne
inc
adc
ds
adc
xchg
cmp
jl
imul
xchg
imul
add
mov
les
mov
mov
inc
xchg
cmp
sar
ss
iret
aas
add
jo
jg
repnz
out
xlat
dec
cmp
cdq
aad
pop
scas
adc
push
test
out
(bad)
and
icebp
stos
and
mov
test
xchg
or
and
inc
(bad)
pop
or
call
in
push
imul
xchg
retf
sar
(bad)
xchg
sbb
push
push
xchg
sub
cmc
add
dec
ss
sub
dec
repz
(bad)
jmp
int
mov
out
sub
mov
in
outs
and
fisttp
sub
in
pop
cmp
sbb
jo
sub
mov
add
dec
(bad)
mov
jmp
and
mov
mov
imul
push
fdiv
je
dec
scas
lock
sbb
adc
aam
xor
add
outs
push
in
ror
gs
shl
cmp
mov
jbe
xchg
mov
mov
lock
push
xor
adc
dec
and
pop
cmp
fs
push
jp
xor
xchg
movs
cmp
push
call
(bad)
xlat
(bad)
mov
in
push
pop
aam
mov
and
fild
lods
leave
outs
mov
jae
stc
pop
mov
adc
adc
dec
mov
and
data16
add
push
(bad)
out
xlat
mov
adc
cld
push
jge
daa
mov
mov
lock
sbb
jg
mov
ins
xlat
or
mov
inc
ins
mov
xor
fsub
sub
cmp
mov
mov
pop
pop
and
or
fadd
xor
imul
dec
push
mov
dec
popf
push
sbb
ja
cmps
retf
push
je
adc
retf
xchg
dec
inc
cmp
jle
addr16
cmp
xchg
rcl
sbb
mov
cmp
fmul
shl
data16
sti
jae
jmp
and
lods
fild
data16
test
popa
rcr
adc
lds
jbe
adc
in
int3
add
add
or
and
pop
or
adc
mov
cld
cwde
bound
fcmovbe
push
clc
cmp
add
adc
sbb
icebp
movs
inc
xchg
mov
xor
mov
adc
dec
mov
add
add
jge
dec
cmc
xor
xor
pop
push
push
(bad)
xor
stos
add
sti
add
loop
dec
(bad)
popa
leave
mov
lock
jmp
data16
call
ins
addr16
push
retf
inc
in
int
dec
aas
xchg
popa
aas
dec
popf
mov
rol
(bad)
fwait
xor
fbld
or
mov
push
mov
push
cmp
retf
cld
inc
mov
xor
inc
jmp
or
sbb
dec
push
or
lods
imul
or
call
mov
inc
xor
jmp
add
(bad)
jmp
dec
sub
fist
fwait
or
pop
sub
ins
push
sub
cmp
add
xchg
dec
and
sub
das
les
in
in
add
mov
lahf
imul
rol
iret
dec
stos
mov
dec
push
sahf
add
ins
ja
xor
push
push
dec
push
repz
rcl
push
daa
mov
cmp
jle
inc
popf
and
cmp
outs
and
fsub
jne
gs
pop
jo
movs
xchg
pop
test
loope
xor
(bad)
xor
sbb
mov
cdq
ret
ins
inc
call
pop
shl
mov
cmp
inc
inc
pop
sbb
out
pushf
dec
dec
scas
push
movs
int
mov
fucom
or
retf
icebp
pop
pop
aaa
pop
cmps
scas
out
cmp
cmp
test
xchg
push
xchg
fadd
fwait
and
sbb
pop
sti
fnsave
pop
mov
fdiv
push
xor
cmp
sub
out
cli
movs
xlat
pop
dec
pop
xchg
adc
push
sti
sbb
pop
add
enter
cmp
pop
jae
xor
pop
dec
ja
cli
lahf
xor
loopne
jb
mov
or
mov
test
adc
pop
mov
push
outs
sbb
mov
out
fidivr
ins
dec
out
cmp
jge
push
sub
ins
fnstenv
push
popf
jb
or
mov
faddp
push
cmp
cmc
hlt
cmps
into
xor
int
pop
(bad)
loopne
jno
and
aaa
and
cwde
rol
and
pop
(bad)
push
inc
movs
cmps
add
xor
dec
cmc
int3
pop
xchg
ret
jg
shl
repz
add
pop
cmps
leave
xor
push
sahf
pop
call
cwde
fisttp
and
pop
inc
gs
xchg
sahf
sti
icebp
loopne
std
inc
sub
jnp
popa
or
outs
push
push
xor
jb
retf
xchg
mov
sbb
or
cmp
push
jecxz
outs
mov
inc
dec
nop
push
jne
hlt
cwde
jg
ret
mov
je
xor
cmp
add
test
dec
cmc
in
and
rcr
leave
cmp
xchg
shr
repnz
hlt
lock
rol
add
inc
rol
inc
sar
scas
jne
aam
test
aas
es
ins
adc
dec
cmp
sub
push
popa
xor
or
cmc
push
sbb
pop
(bad)
pmaxub
push
pop
mov
fld
dec
inc
pop
xlat
out
iret
dec
retf
stos
mov
out
inc
add
push
dec
adc
jb
pop
or
and
enter
leave
ret
or
lea
nop
inc
cwde
cld
sub
das
jne
enter
cli
cdq
dec
adc
cmp
std
inc
movs
daa
ret
pop
leave
sbb
push
jle
pop
ins
pop
xchg
sbb
dec
sub
sahf
cmp
mov
shr
ret
fs
jb
mov
or
lea
iret
lock
aam
fmul
in
pop
fldenv
push
xchg
cmp
mov
add
call
lods
sub
jecxz
sub
and
add
jo
cmp
xor
sbb
and
les
push
movs
outs
inc
test
iret
enter
adc
lock
xor
jns
pop
retf
mov
cwde
ja
pushf
jl
gs
call
int
cmp
xchg
dec
cmp
pop
inc
and
push
lea
fldcw
lods
test
mov
hlt
add
std
cld
xor
mov
fsubr
in
sub
mov
xchg
or
nop
or
ins
mov
neg
(bad)
sbb
outs
push
mov
pop
xor
out
pushf
inc
mov
lock
cmc
lods
(bad)
scas
es
sub
xchg
inc
jns
push
add
pop
add
xchg
aam
push
stos
adc
adc
shl
adc
or
les
sub
out
and
inc
push
jne
cmp
cli
mov
add
cmc
mov
lea
dec
jmp
and
mov
lea
adc
jmp
jmp
cmp
ins
and
dec
outs
jp
dec
rcr
cmp
push
adc
ror
mov
push
mov
mov
pop
push
xor
push
and
retf
sbb
inc
sub
pop
les
stos
and
inc
adc
call
adc
test
mov
jmp
sub
out
loope
cmps
test
fist
push
dec
add
in
enter
movs
cwde
test
jne
ins
mov
adc
xchg
and
push
xor
cmc
into
add
mov
jbe
bt
test
mov
mov
jp
pop
fcomp
cld
mov
mov
jnp
stc
ins
push
and
rol
cmc
cdq
jle
push
mov
pop
ds
loop
call
pop
pop
movs
cmp
cwde
ret
je
cmp
stos
es
cmp
movs
inc
xchg
scas
adc
xchg
adc
not
sar
sbb
sub
(bad)
mov
(bad)
movs
push
cmp
je
add
jne
cmp
ret
pop
cld
mov
xchg
or
xchg
nop
(bad)
sbb
dec
push
sub
dec
push
adc
test
ret
xor
push
lods
shl
ret
es
pop
pushf
xchg
xlat
ficomp
jno
or
cli
inc
out
adc
in
call
call
ret
jmp
pop
or
inc
xlat
jg
shr
jp
imul
test
lahf
cmp
sbb
xchg
or
mov
aam
mov
cmp
or
mov
lahf
and
inc
out
fwait
mov
shr
mov
aaa
dec
pop
daa
xchg
push
cwde
xchg
mov
jno
in
call
leave
mov
fmul
add
(bad)
ja
xchg
and
xor
jns
(bad)
sub
xchg
(bad)
push
add
push
or
inc
push
(bad)
sub
jle
bound
test
rcr
repz
(bad)
out
movs
shl
gs
xor
sub
or
shr
ret
mov
stos
add
je
stos
es
and
loop
xor
aad
cwde
mov
inc
popa
pop
test
xor
push
or
or
or
xor
sbb
mov
mov
daa
xor
mov
mov
or
scas
sub
sbb
popa
sub
or
inc
jmp
pop
outs
retf
ds
rcl
push
adc
add
pop
fwait
sub
gs
and
xor
cld
xchg
adc
add
out
addr16
pop
in
add
or
mov
scas
jb
repz
sub
int
mul
ss
gs
jae
test
fistp
mov
adc
jecxz
(bad)
adc
shl
and
imul
pop
xor
sbb
push
push
cdq
rcl
pop
lock
lmsw
(bad)
lds
je
fisubr
aaa
mov
xor
adc
jmp
xchg
add
mov
ret
repz
lock
xchg
bound
jg
inc
ds
sub
xchg
sbb
inc
xchg
rcl
test
xchg
push
xchg
ja
mov
lea
lods
retf
repz
and
pop
loop
or
dec
mov
and
clc
sbb
ins
cmp
adc
jp
stos
vaddsd
or
or
cmps
xchg
aad
mov
in
fadd
sub
pop
retf
ror
into
xor
xchg
fsub
sub
xlat
stc
mov
(bad)
jne
cdq
adc
xor
mov
lods
jns
in
add
(bad)
adc
(bad)
(bad)
hlt
or
lock
and
push
and
pop
sbb
adc
cmps
sar
mov
mov
mov
rcr
and
adc
popf
test
add
adc
addr16
mov
in
add
movs
cs
xchg
xchg
into
or
icebp
out
and
test
fst
loopne
shr
mov
or
cmp
add
mov
mov
or
xor
sbb
push
fld
xor
or
sub
inc
das
shl
mov
or
cmp
mov
pop
mov
test
mov
dec
cdq
or
ds
das
mov
mov
not
jl
cmp
xchg
push
mov
inc
or
rol
jno
and
jl
add
ins
mul
bound
stos
mov
or
mov
popf
std
mul
add
out
test
cmp
jp
push
xor
les
jecxz
jmp
dec
fistp
out
inc
cmp
ficom
dec
fnstcw
and
push
xchg
cmps
mov
xchg
sahf
movs
outs
scas
fidivr
jp
dec
loop
mov
adc
ja
int
ret
xchg
aad
jl
scas
stos
mov
cwde
cmp
sub
adc
mov
(bad)
pushf
(bad)
mov
inc
mov
not
xchg
jno
xchg
push
sahf
and
mov
pop
(bad)
leave
in
and
push
push
or
and
mov
add
push
in
jmp
inc
ficomp
vcvttsd2si
fld
pop
push
loope
stos
aam
rcr
repz
cdq
movs
iret
adc
sti
sbb
mov
pop
add
repnz
stos
cmps
xor
stc
xchg
shl
pop
dec
(bad)
push
loop
pop
ret
in
mov
mov
fsubr
popa
cli
addr16
xor
xor
aaa
and
mov
inc
jae
lock
ins
pop
mov
ror
cmp
sub
fsub
and
or
arpl
hlt
push
mov
xor
cld
mov
cwde
dec
arpl
ins
sti
(bad)
out
jns
fsubr
call
out
or
xchg
movs
not
sub
sbb
push
scas
or
dec
mov
xor
jle
dec
retf
cmc
cdq
mov
xchg
sbb
int3
mov
jne
and
into
jnp
lods
mov
jae
mov
adc
inc
pusha
mov
pop
push
into
mov
adc
arpl
xlat
xchg
rcl
xchg
enter
ret
scas
stos
add
jns
les
repz
mov
int
call
repz
or
xchg
lea
mov
mov
mov
js
mov
cmp
xor
push
push
clc
icebp
sbb
std
dec
loopne
nop
outs
xchg
ror
cmc
(bad)
lahf
cwde
movs
mov
mov
xchg
mov
clc
pop
je
call
(bad)
jmp
jl
neg
pusha
outs
mov
jge
and
mov
jns
lods
xchg
out
stos
add
and
or
outs
sbb
pusha
ss
pop
push
inc
iret
cmps
dec
sub
mov
loopne
fistp
fsub
enter
mov
mov
sbb
adc
shl
mov
fldcw
pop
fs
outs
call
mov
inc
lods
mov
out
ins
and
jl
inc
sub
mov
in
add
jmp
inc
dec
xchg
sar
push
jno
xchg
push
adc
aaa
add
pop
fwait
mov
nop
jb
cmps
inc
adc
out
mov
sbb
out
sub
loopne
xchg
or
pop
push
push
jo
cmp
pop
inc
rcr
xchg
and
dec
xor
push
mov
push
mov
mov
sbb
ss
mov
mov
and
js
or
(bad)
(bad)
sbb
pusha
inc
adc
adc
or
daa
les
out
cdq
mov
mov
nop
adc
mov
lahf
fprem
jl
mov
xor
cmp
cmp
call
arpl
in
lock
mov
mov
icebp
and
cmp
imul
in
adc
retf
rol
jnp
push
in
push
pop
int3
mov
xchg
pop
jae
cmp
xor
add
or
mov
sub
nop
lock
xchg
jns
ss
mov
push
xor
fcomp
push
movs
or
xor
mov
in
cmp
arpl
cmp
xlat
sbb
xchg
push
fdiv
mov
pop
loop
hlt
mov
ins
inc
das
push
lahf
or
mov
dec
pop
push
dec
test
fbstp
cs
test
sub
cld
mov
loopne
adc
aad
daa
push
xor
fcomp
mov
stos
cmp
mov
and
dec
and
jl
cwde
xchg
cmc
push
sar
xchg
lock
mov
loop
fucom
sbb
test
push
jae
or
shl
jmp
lea
mov
mov
imul
sub
inc
dec
js
hlt
std
and
aad
inc
mov
int3
retf
aad
loop
loope
movs
jns
enter
int
ins
in
inc
sub
pop
pop
mov
xchg
sbb
shl
adc
mov
ror
leave
jbe
mov
pop
and
mov
mov
jl
cmp
sub
lock
cmp
repz
push
lods
fldenv
push
mov
pop
mov
outs
fs
adc
jge
or
cmp
mov
sub
push
mov
pop
xor
(bad)
or
(bad)
lahf
add
repz
fiadd
push
push
mov
(bad)
sti
adc
xchg
jo
rcl
fs
xchg
or
int3
xchg
push
mov
loop
add
dec
cli
xchg
sahf
jnp
mov
push
or
push
out
inc
out
xor
mov
push
fisubr
sti
jge
ret
jmp
mov
dec
mov
xor
mov
mov
cs
push
xchg
xchg
pop
outs
lds
ins
and
stos
dec
adc
cli
cmp
lock
jl
enter
pop
xchg
(bad)
push
add
push
add
xchg
mov
cmp
pop
test
retf
stos
lea
int3
mov
daa
aaa
psubsb
adc
sbb
mov
(bad)
pop
add
pop
in
mov
cmps
lea
adc
inc
cld
jmp
stos
imul
cmp
pop
sub
cmp
sahf
daa
cmp
test
sbb
push
cwde
test
and
mov
pop
adc
mov
sub
xor
or
and
(bad)
adc
inc
dec
adc
and
ret
jo
xchg
je
out
cmps
sbb
cdq
int3
idiv
or
jp
sub
add
stos
fist
mov
sub
fistp
add
cmps
cmp
mov
test
mov
and
cmp
fisub
mov
loop
jmp
or
sub
jle
fcmovnbe
mov
mul
push
popa
inc
gs
int
mov
shl
ins
cmp
test
mov
dec
push
mov
or
pop
inc
imul
cmp
cld
stc
cmps
into
push
push
mov
dec
pop
sahf
sub
jbe
sti
mov
pop
shl
iret
scas
xor
mov
rcl
adc
sub
push
xchg
sbb
xchg
daa
mov
pop
retf
or
cmp
out
pop
nop
inc
push
or
(bad)
leave
lock
push
mov
mov
gs
ret
sbb
dec
cld
repnz
out
fdivr
mov
aad
lods
mov
ja
or
ja
push
mov
xchg
xchg
pop
add
rcl
cmp
mov
in
mov
push
inc
out
popf
pop
fld
mov
sbb
cmp
add
xchg
jp
dec
jnp
push
mov
or
cmp
cmc
or
push
push
fcmovne
sbb
jno
retf
adc
enter
xchg
out
adc
sbb
gs
pop
jae
fs
aad
aas
mov
cmps
push
fbld
bound
mov
test
sbb
mov
fimul
fwait
pop
dec
xchg
inc
jnp
push
repz
retf
test
dec
inc
cdq
xor
jmp
pushf
arpl
sbb
ds
lds
pop
cmp
fcomp
inc
dec
ret
hlt
mov
outs
xchg
mov
outs
push
cdq
sbb
pop
jle
cmps
retf
icebp
call
shl
(bad)
aam
into
outs
aaa
mov
(bad)
repnz
mov
out
popf
push
in
sahf
cdq
cmc
imul
mov
add
out
push
pop
loop
jl
fild
add
mov
pop
setp
fstp
xor
daa
adc
aam
cmp
aaa
jbe
dec
test
scas
mov
shl
(bad)
mov
clc
retf
pop
push
out
xchg
jle
dec
ins
paddusw
shl
fs
mov
or
push
or
ja
clc
ss
inc
inc
mov
sub
scas
js
jmp
xchg
mov
cmp
pop
sar
pop
cld
iret
dec
mov
dec
jg
mov
mov
sub
imul
mov
lds
enter
mov
jne
out
mov
js
fs
sub
xor
dec
jmp
mov
dec
sbb
or
mov
clc
dec
icebp
ret
in
and
sbb
mov
sub
aaa
les
adc
adc
xor
rcl
(bad)
aam
jnp
cmp
inc
movaps
or
shl
cmps
push
xlat
dec
sahf
adc
(bad)
repnz
hlt
popa
jl
movs
nop
inc
and
divps
fadd
push
xchg
cmp
xchg
in
pop
test
(bad)
jmp
dec
jno
ins
add
mov
std
and
mov
xlat
inc
rcl
es
sbb
out
movs
push
cmp
aad
sbb
ret
push
mov
add
adc
xlat
das
mov
movs
or
jg
push
inc
or
pop
fld
inc
xchg
and
cli
pushf
push
sub
and
and
xchg
jb
or
test
mov
sub
mov
adc
jecxz
mov
mov
mov
or
int
dec
jnp
cmp
xor
arpl
es
cmp
sar
sahf
pop
add
push
ja
sub
int3
in
jge
pop
add
add
pusha
inc
jne
xchg
xchg
or
dec
mov
adc
fnstenv
xor
fnsave
mov
fnsave
mov
cmc
ja
rcr
mov
sub
dec
xor
es
xchg
dec
fidiv
xchg
mov
iret
adc
dec
mov
sub
dec
add
sahf
pop
dec
inc
dec
mov
dec
push
stc
push
mov
gs
jle
mov
outs
fwait
push
daa
xchg
and
or
sbb
fld
into
mov
adc
nop
xchg
and
push
add
call
mov
cmps
cli
sbb
cmps
in
and
sbb
test
push
inc
nop
xchg
out
(bad)
cmp
repnz
jo
dec
imul
shl
sub
push
sbb
xchg
mov
sub
jns
jge
adc
sub
mov
jns
mov
jnp
inc
pop
adc
stos
jmp
xor
sbb
mov
and
cmp
pop
sub
or
aaa
outs
cdq
daa
mov
mov
cmp
xchg
xchg
inc
sub
ins
mov
cmc
sbb
mov
jl
mov
add
scas
pusha
jbe
xchg
pushf
or
(bad)
pop
add
add
push
(bad)
fs
dec
mov
cmc
aaa
lea
xchg
and
les
jmp
sbb
loopne
(bad)
movd
std
ficomp
test
push
cmc
lods
mov
mov
les
jns
add
ret
inc
sbb
add
(bad)
mov
pop
mov
popf
or
mov
aad
(bad)
scas
mov
test
pushf
call
and
sub
cdq
in
dec
mov
pop
and
aad
(bad)
mov
mov
cmp
add
aaa
inc
jne
jmp
shr
cmp
dec
and
jae
cdq
add
add
push
sbb
(bad)
mov
shl
jmp
lods
je
out
mov
retf
xchg
xor
test
cmp
inc
push
out
call
rcl
jge
mov
mov
cwde
repz
adc
shl
into
(bad)
(bad)
retf
inc
mov
mov
pop
mov
jle
mov
stc
cmp
jbe
ins
popf
and
mul
ins
movs
pop
je
fisttp
leave
cmp
data16
mov
adc
loopne
mov
inc
jae
into
or
xor
cmc
mov
movs
push
cli
jmp
shl
scas
jl
mov
ja
cwde
imul
cdq
mov
call
iret
jb
bound
fwait
pop
cmp
sbb
push
fdivr
lds
ret
dec
inc
push
aam
adc
repnz
rol
add
mov
sbb
mov
sub
retf
push
fisubr
shl
stc
scas
ss
lods
test
rol
jge
xor
daa
std
sub
xchg
or
out
inc
mov
es
sub
add
push
stos
fild
cmps
rol
(bad)
xchg
ss
jmp
pop
scas
lods
mov
je
add
and
ins
sub
retf
das
aas
imul
pop
(bad)
cmp
mov
dec
and
stc
nop/reserved
mov
pop
or
out
dec
sahf
fdiv
(bad)
aas
clc
pop
lahf
push
les
push
pop
pop
xchg
pop
clc
jo
cmp
je
dec
inc
push
inc
int3
push
rcr
icebp
fsubrp
cmp
sahf
jmp
mov
lods
aas
shr
and
test
sub
fwait
push
data16
lods
xor
xchg
pop
les
and
inc
and
aaa
xchg
outs
call
loop
imul
pop
test
mov
pop
jne
adc
pop
popf
jecxz
dec
push
xor
adc
and
jne
les
xor
and
outs
inc
aad
test
and
mov
(bad)
jmp
dec
es
jp
sbb
push
icebp
cmps
fnstenv
cli
mov
jecxz
adc
add
lock
pop
mov
cmp
sub
es
xlat
mov
adc
sub
pop
outs
sbb
push
ds
pusha
or
sub
jg
inc
sar
clc
(bad)
call
and
repnz
and
in
je
add
fnstsw
scas
and
cmps
cmps
cmp
mov
out
inc
daa
lock
pop
add
lea
ss
(bad)
sub
pop
mov
arpl
(bad)
fistp
(bad)
and
push
mov
and
mov
mov
sub
add
aas
arpl
xlat
mov
inc
mov
test
std
test
out
push
aam
jecxz
mov
ret
pop
icebp
add
mov
repz
jmp
jb
cmp
ja
or
xchg
sbb
xor
mov
mov
adc
ficom
les
jns
xor
sub
or
out
xor
add
xchg
in
mov
outs
test
push
sub
(bad)
(bad)
cmp
inc
mov
loope
mov
xor
adc
fld
and
lds
in
cli
inc
pop
adc
and
mov
jns
add
test
sbb
addr16
mov
xchg
cmp
adc
xchg
bnd
out
mov
imul
popa
and
imul
mov
cdq
jbe
fldcw
xor
aam
iret
repz
inc
adc
iret
fst
adc
adc
in
xor
inc
sbb
out
sbb
pop
dec
fcmovne
retf
and
jp
add
cmp
aam
mov
into
enter
out
mov
in
push
outs
jnp
xchg
cmp
dec
cli
adc
mov
push
xchg
or
jmp
sbb
in
ja
jmp
xor
sbb
test
iret
shl
out
mov
mov
pushf
lods
and
dec
mov
jmp
pop
mov
mov
aas
dec
sub
push
or
das
(bad)
out
ins
mov
in
sub
cmp
addr16
dec
add
sbb
pop
out
jl
xor
ror
sub
ret
ror
sti
xchg
pop
and
scas
dec
hlt
popa
xor
fisttp
popa
sti
push
mov
inc
inc
movs
ror
repz
mov
xchg
jo
outs
out
or
les
xor
pushf
scas
inc
sti
jae
scas
add
inc
ror
or
inc
cmps
or
push
push
sbb
or
adc
xchg
xor
sbb
or
mov
aas
push
cwde
call
test
in
cmp
xchg
mov
shl
xor
mov
(bad)
jmp
jo
inc
test
in
jg
or
add
cmp
cmp
jl
push
jmp
rol
jmp
push
pop
and
lock
mov
(bad)
rsm
mov
mov
idiv
mov
aad
mov
mov
pop
inc
in
pop
add
xor
out
mov
add
sbb
xchg
push
inc
jecxz
and
daa
outs
jns
inc
dec
mov
clc
loop
inc
cmps
retf
cmp
shl
push
lea
mov
push
mov
pop
xor
push
add
in
rcl
sbb
push
dec
rcl
mov
test
xor
adc
mov
push
sub
mov
dec
sub
jne
retf
mov
fucomp
sub
inc
jmp
sub
jecxz
sub
cmp
addr16
cmp
repz
loopne
sub
xchg
mov
out
jmp
xchg
push
or
adc
mov
add
das
pop
test
dec
bound
mov
dec
jp
icebp
test
cwde
(bad)
pop
fldcw
and
aam
ret
dec
mov
or
stos
adc
and
(bad)
sub
and
outs
(bad)
fs
jmp
aaa
pop
cdq
js
test
xchg
aaa
lea
lods
sbb
mov
sub
fistp
popa
call
mov
das
dec
ror
(bad)
pop
or
mov
call
ret
ret
aaa
test
mov
(bad)
fs
(bad)
xchg
fs
mov
outs
ret
in
push
addr16
data16
nop
and
inc
sbb
jmp
jns
aas
aam
stos
idiv
sar
cmps
imul
push
or
frstor
pop
pop
and
call
cmp
mov
cmp
icebp
sbb
mov
sbb
xchg
xor
mov
pusha
hlt
(bad)
in
rol
rcr
push
div
push
mov
mov
adc
inc
xchg
ds
bound
dec
in
xchg
push
jl
mov
cdq
in
sub
xchg
jp
add
cmps
f2xm1
es
lds
enter
call
(bad)
out
adc
iret
and
and
mov
pop
inc
xchg
shl
jge
jo
push
xchg
xchg
sahf
(bad)
pushf
hlt
mov
loop
push
stos
pop
push
mov
push
push
pop
outs
arpl
inc
pop
xchg
sbb
xor
mov
aad
pop
jp
imul
stos
lods
les
push
jae
call
por
mov
inc
test
retf
or
leave
scas
pop
mov
fs
retf
or
int3
ret
lds
push
mov
sub
inc
pop
stos
adc
jmp
lods
sub
cmps
cld
scas
push
and
push
iret
jge
sbb
lock
cmp
sbb
fimul
and
sub
mov
loop
hlt
neg
lods
xor
mov
xchg
out
fnsave
pop
aaa
xchg
outs
cmp
vcvttpd2dq
cmp
test
fdivr
cmp
or
in
pop
jae
pop
iret
aad
push
jg
popf
mov
fsub
test
cmp
imul
aas
test
dec
(bad)
sbb
sbb
sti
icebp
std
fisttp
cwde
data16
cmc
and
not
add
jle
pop
nop
movs
push
jb
sar
add
mov
popf
xchg
gs
pop
fcomi
es
adc
sbb
rcl
popa
xlat
movs
cdq
bound
in
out
lahf
test
out
pop
jg
xor
rol
loopne
or
add
test
retf
scas
push
mov
ds
jne
add
pop
jae
sub
fsubr
add
dec
mov
hlt
arpl
dec
ds
jbe
stos
test
out
stc
lods
push
adc
xor
cmp
xor
push
clc
shl
test
das
outs
sub
jno
push
cwde
mov
push
out
dec
sub
retf
sar
lods
lock
xchg
inc
fsin
test
mov
mov
rol
neg
in
inc
mov
movs
mov
sbb
cmps
fbld
mov
xchg
sub
rcl
outs
push
jne
(bad)
aad
bswap
inc
std
fxch
aad
bound
es
(bad)
jmp
adc
call
add
pushf
dec
jns
mov
mov
fild
fwait
push
xchg
dec
stc
popf
aam
adc
xor
in
pop
mov
jns
xchg
fwait
fs
rcr
(bad)
imul
push
and
test
outs
push
sbb
fsubr
inc
xor
pop
in
and
fisubr
jge
test
mov
mov
in
dec
xor
mov
lea
cmp
mov
or
lds
fidivr
inc
repz
push
sbb
sbb
ret
out
pop
mov
xor
cs
(bad)
pop
je
mov
xchg
jle
sub
mov
xchg
inc
inc
mov
js
call
stos
std
sbb
xlat
hlt
fimul
outs
mov
inc
cmps
xor
dec
cmp
lods
mov
sub
xchg
ret
or
and
push
xchg
mov
repz
jp
jnp
adc
jb
out
mov
ss
mov
dec
cvtdq2ps
sub
or
in
sar
adc
ss
cmp
mov
bnd
jle
movs
imul
std
xor
sbb
jg
xor
jns
pusha
mov
pop
call
jg
mov
push
sti
in
mov
fistp
test
sbb
inc
test
xor
mov
mov
out
mov
imul
xchg
jns
inc
pop
in
push
add
push
(bad)
jle
clc
pop
pop
retf
sbb
cwde
dec
fmul
stos
push
mov
adc
mov
mov
xor
or
xor
sub
dec
lods
pushf
lds
inc
jne
cmps
jb
add
xor
mov
xor
ss
sub
adc
xor
fucom
or
jmp
rcr
xchg
pop
je
jl
inc
add
jne
or
xchg
cmc
xor
not
mov
xchg
lgs
pop
push
loop
(bad)
sub
push
js
pop
push
add
fild
jb
mov
mov
ret
mov
lods
pop
pop
xchg
mov
movs
scas
int3
push
loope
push
push
int
lods
imul
xchg
add
aaa
sbb
test
cmp
pop
adc
cmc
mov
pop
(bad)
mov
jmp
ss
inc
mov
movs
adc
add
mov
ins
imul
push
lea
in
pop
dec
pop
pop
mov
aaa
les
leave
sbb
pop
sahf
pop
jnp
add
sbb
loope
outs
pop
xor
mov
jbe
or
sti
add
or
mov
mov
cmp
scas
jne
rcl
and
test
adc
fild
sub
jecxz
dec
fsubp
xor
mov
retf
jbe
and
jg
fnstcw
sbb
and
jge
retf
mov
out
test
in
cbw
or
cmc
aaa
lahf
sti
pushf
sbb
fmul
inc
or
add
daa
cmp
push
repz
dec
sub
sbb
xchg
mov
xchg
xchg
pusha
xchg
mov
aam
lea
push
aad
jns
mov
or
jns
sbb
(bad)
sbb
cmp
inc
xor
out
test
inc
cmp
sar
fild
mov
jb
xchg
bound
scas
outs
int3
push
lds
ins
sub
xlat
adc
xchg
out
stos
push
call
fisub
lds
sbb
test
mov
pop
movs
pop
xor
mov
data16
(bad)
pop
call
or
jg
fdivr
sbb
test
cmp
popa
rcr
mov
push
jg
dec
inc
xor
mov
popf
mov
aas
xlat
fcmovnu
or
and
sbb
shl
jns
and
xor
and
loopne
mov
retf
addr16
or
dec
jbe
jle
jl
stos
ins
fiadd
jl
mov
jg
cmps
rol
dec
repz
popf
es
mov
mov
pop
pop
mov
xor
ds
lea
xchg
mov
cs
jno
mov
push
popf
xor
mov
iret
adc
das
call
push
out
je
xor
mov
jle
jp
(bad)
dec
push
mov
sub
xchg
outs
div
shr
push
pop
mov
jne
addr16
(bad)
fmul
adc
pushf
push
test
sti
mov
mov
ficomp
mov
sub
sub
mov
dec
aas
cmp
xlat
ins
jb
xor
push
iret
pop
call
inc
inc
mov
inc
(bad)
movs
pop
xor
xchg
push
jl
dec
ror
xchg
pusha
push
mov
jns
mov
xchg
rcl
pop
add
push
push
shl
pop
bound
shl
sbb
sub
test
repz
fidiv
outs
shr
test
les
repz
or
xor
add
mov
gs
push
out
inc
inc
xchg
shl
cmp
(bad)
xor
fs
cmp
lods
xchg
jb
jmp
sbb
inc
rcr
jo
jb
cmc
xlat
daa
sub
lahf
fistp
xchg
stc
pop
rcl
mov
scas
rcr
icebp
cld
int3
test
jns
out
cld
mov
ds
add
rol
jne
loop
(bad)
retf
repz
pop
data16
out
mov
ret
or
(bad)
dec
mov
push
lds
push
cmp
sub
outs
or
inc
xchg
(bad)
call
push
loope
sub
sbb
test
add
loopne
jg
out
sub
mov
bound
mov
jbe
les
jl
xchg
(bad)
fist
fstp
pop
jns
out
mov
xchg
aas
mov
jbe
fdivr
xchg
xchg
mov
rcr
jl
fisttp
fs
xor
xchg
stos
cmps
fistp
xor
dec
les
or
mov
imul
pop
cmc
ret
adc
sub
dec
inc
cmp
bound
inc
sub
xor
lahf
jl
jp
xchg
mov
jl
inc
and
inc
dec
mov
add
sbb
nop
add
test
dec
ror
push
jge
lock
jbe
bound
pop
jne
inc
jae
pop
and
out
lds
mov
retf
sub
rol
xchg
jbe
xor
xchg
jbe
movs
cmc
mov
mov
or
(bad)
xor
jg
std
lds
inc
repnz
daa
fnstenv
cmp
daa
push
sbb
sbb
sbb
popa
jb
enter
xlat
adc
pushf
pop
loope
mov
jbe
lahf
sbb
sbb
loop
or
xchg
int3
mov
push
adc
jne
mov
aas
icebp
sbb
ins
mov
das
fiadd
xlat
pop
ror
push
dec
pop
add
nop
push
sub
repz
and
cdq
and
mov
repz
adc
scas
xchg
xchg
test
xchg
cmc
add
cmps
xor
sbb
into
(bad)
hlt
and
fnsave
dec
inc
and
push
and
popf
xor
inc
inc
out
sahf
sub
pop
repnz
out
mov
cmp
mov
mov
cld
mov
(bad)
pop
or
test
call
mov
jae
icebp
and
popa
sysenter
pop
rcr
inc
add
les
mov
and
mov
fstp
imul
loope
loope
pop
push
xchg
cmp
mov
and
jmp
or
clc
mov
jne
sbb
inc
push
mov
cmp
sbb
fild
dec
lock
sub
lods
mov
sbb
dec
mov
sbb
cwde
pop
lahf
nop
add
add
pop
rol
imul
cmps
int3
fisttp
ror
and
jnp
(bad)
cmp
mov
add
and
cdq
leave
ror
xor
ret
dec
aam
out
mov
mov
or
cdq
jl
sub
inc
sbb
(bad)
mov
mov
pop
mov
mov
les
pop
add
loop
dec
pop
sub
cmp
or
call
pop
sub
sar
stos
rol
mov
jns
push
mov
sbb
ss
lds
dec
pop
add
in
lock
mov
jmp
inc
pop
div
ja
jg
je
lock
add
jne
icebp
and
mov
adc
repnz
int
cmps
cmp
sub
jb
cwde
push
fisubr
sahf
repnz
sti
xchg
dec
push
je
inc
sti
sti
jge
fdivr
xor
movs
sahf
es
mov
sbb
ins
xor
jl
mov
imul
sar
push
lahf
pop
fisttp
enter
mov
cs
mov
aad
cmc
inc
stc
les
xor
shr
mov
mov
cdq
jl
pop
mov
retf
add
push
mov
sbb
repnz
pushf
in
inc
in
jae
stc
pop
sbb
call
and
or
lea
lahf
mov
lahf
mov
imul
xchg
adc
push
add
into
fldcw
dec
push
mov
mov
xor
pop
idiv
sub
sar
pop
adc
enter
sub
jl
inc
push
inc
pop
push
xlat
cmp
or
push
mov
cmc
sti
mov
pushf
or
fwait
push
xchg
call
inc
jecxz
xchg
js
ins
ret
and
leave
add
cmp
scas
lea
aad
pop
mov
stos
sub
mov
cmp
push
or
sub
call
or
scas
add
push
in
scas
fsub
sbb
pushf
sub
mov
add
xchg
adc
repz
jns
jbe
scas
fist
ins
sub
in
dec
outs
cmp
mov
pop
sub
icebp
retf
dec
(bad)
push
shr
jg
shl
scas
cli
xchg
sub
inc
repz
lock
adc
add
mov
ror
jb
mov
mov
stos
inc
or
cmp
sar
repz
enter
pop
mov
and
int
add
jae
or
jge
bound
push
jnp
lock
jmp
jbe
push
stos
aam
and
aam
dec
dec
and
popa
jo
jl
outs
mov
jmp
cmps
cs
push
popf
pop
dec
daa
pop
fild
pop
add
test
push
and
pop
hlt
(bad)
aaa
addr16
and
leave
into
rcr
test
rol
jbe
mov
leave
xchg
cmp
push
xchg
and
repnz
ins
push
jns
test
cmp
es
fwait
imul
leave
in
inc
cmp
loope
mov
push
mov
sub
fnstsw
ror
loop
mov
fnstenv
(bad)
mov
movs
data16
mov
pop
movs
pop
dec
sub
adc
mov
ds
repnz
js
imul
cmps
sbb
ror
add
pop
popf
push
(bad)
fnstcw
mov
or
stos
into
gs
and
or
ret
(bad)
lahf
ins
ret
ins
imul
aam
jno
loopne
inc
jmp
fisttp
mov
mov
aam
cld
sbb
aas
mov
loopne
rcr
sbb
cdq
adc
rol
jae
cmps
adc
icebp
and
js
sbb
xor
jg
xlat
xchg
mov
fsub
mov
pushf
enter
cmc
jno
xchg
mov
inc
daa
aam
mov
mov
lods
into
in
cmovne
and
repnz
jle
retf
ret
outs
xor
xlat
jp
data16
add
wbinvd
jbe
pop
pop
lds
mov
in
cli
pop
or
xor
ds
rol
mov
mov
scas
lods
daa
mov
pop
cmp
dec
adc
repz
adc
outs
(bad)
push
pop
and
mov
cmp
push
and
xchg
xchg
xchg
adc
push
pop
and
jg
mov
xor
cli
lods
add
xor
cmc
push
adc
adc
xchg
lods
lea
in
fiadd
and
sub
test
jg
mov
sbb
lock
add
sbb
xor
std
mov
sub
pushf
pushf
sbb
sahf
mov
add
lds
dec
sbb
dec
loope
mov
mov
xchg
test
mov
in
shl
mov
xchg
add
mov
aam
add
push
pop
mov
imul
mov
jp
jns
pusha
jp
pop
and
xchg
cmp
or
and
sub
(bad)
addr16
or
mov
jg
xchg
sahf
xor
rol
jb
adc
lods
sahf
test
aad
cli
inc
jmp
adc
clc
pop
jmp
push
mov
jp
and
cli
adc
in
cmp
and
ins
mov
icebp
arpl
sti
cmp
mov
fsubr
push
dec
repnz
jo
push
call
repz
sub
hlt
pop
lock
mov
out
out
xor
pop
add
mov
cmp
lahf
icebp
add
outs
aam
into
adc
and
xor
outs
imul
outs
inc
ret
and
ds
jne
inc
push
mov
stc
ins
mov
repnz
imul
in
iret
fidiv
push
mov
dec
mov
cli
add
push
dec
inc
pop
daa
xor
xor
jnp
and
xchg
shl
daa
loop
in
push
jle
cmp
or
scas
adc
mov
xchg
mov
inc
adc
cs
pusha
retf
jnp
int
(bad)
mov
add
sub
ret
adc
mov
shr
repz
adc
push
sbb
xor
sbb
cwde
xchg
call
rol
xchg
loopne
and
inc
in
neg
jecxz
loope
(bad)
cli
xlat
mov
jl
(bad)
push
add
and
xchg
sub
or
dec
into
xor
retf
sub
inc
adc
cdq
inc
push
jge
xchg
cmp
inc
repz
call
ins
mov
xchg
fcomp
ror
push
dec
mov
imul
(bad)
and
push
loopne
cmps
jle
add
add
ficom
xor
es
add
sub
mov
test
mov
fadd
ins
inc
and
in
add
popa
push
xlat
pop
or
add
cmp
pop
or
mov
jo
pusha
inc
daa
jb
dec
iret
lock
mov
fldcw
mov
push
push
or
cs
lea
mov
jns
cmp
mov
mov
lds
(bad)
icebp
rcr
fild
into
mul
jo
enter
mov
scas
outs
or
xchg
cs
xor
add
std
iret
lods
mov
mov
jge
stos
cmps
ror
ds
inc
or
jbe
iret
movs
xor
jg
sub
fcmovnb
cmps
adc
sbb
xor
dec
sub
bound
and
es
test
aad
ror
add
cs
xor
mov
inc
in
clc
xchg
or
add
and
mov
mov
and
dec
cmps
pop
xchg
push
add
test
dec
dec
dec
adc
dec
in
out
leave
mov
dec
imul
xchg
call
pop
les
jne
jl
xchg
retf
arpl
movhps
add
and
sub
int
js
mov
mov
mov
push
inc
cwde
adc
rcr
data16
cmp
neg
xor
push
out
loop
inc
in
bound
dec
loop
xchg
cmp
fisttp
jle
call
cmps
sbb
fisttp
add
adc
aaa
jno
sbb
pop
loope
pop
fimul
xchg
push
and
mov
xchg
inc
mov
pop
push
(bad)
hlt
push
ins
push
ins
jo
sbb
hlt
test
adc
(bad)
icebp
and
and
repz
jb
rol
cmp
add
(bad)
mov
xor
jl
fcomp
mov
popa
push
and
ja
rcr
dec
sbb
into
arpl
adc
pop
mov
xchg
stos
jno
adc
lock
lea
push
mov
sub
inc
mov
jp
mov
ins
add
fcom
and
out
jns
pop
dec
mov
dec
sub
div
jb
pop
into
call
ja
push
add
test
pop
outs
xchg
cmc
inc
xor
loop
fstp
mov
pop
add
(bad)
sbb
aas
and
aas
in
in
out
scas
mov
dec
cmp
inc
test
sub
sbb
or
cs
cmp
mov
ins
outs
mov
std
and
cmp
sub
iret
jl
xlat
adc
inc
push
cmp
cmp
out
int
pop
mov
enter
out
mov
mov
aas
ins
sti
repz
mov
mov
xor
inc
out
and
add
data16
adc
mov
mov
push
cdq
shr
jae
dec
mov
(bad)
hlt
stc
repnz
and
aas
xchg
icebp
push
in
daa
xchg
in
jo
mov
fisubr
and
ror
sbb
inc
pop
mov
push
mov
pop
mov
mov
push
sub
rol
cld
or
mov
inc
dec
jle
ror
fcom
mov
mov
dec
test
mov
pushf
sahf
hlt
xor
movs
pop
daa
jmp
outs
xor
xchg
std
xchg
mov
adc
outs
sti
scas
cwde
cmp
ja
movs
test
jge
push
(bad)
dec
arpl
sub
xor
out
add
shl
movs
mov
shl
dec
stc
dec
xchg
xchg
(bad)
adc
sar
push
xor
out
stc
inc
out
arpl
xor
adc
movs
retf
lds
in
jne
mov
jae
sbb
call
nop
dec
push
dec
data16
xlat
add
div
push
add
repz
std
fwait
mov
aaa
mov
into
cmp
les
push
dec
jo
push
or
je
dec
das
repnz
arpl
xchg
pop
into
mov
jp
test
sbb
lea
xchg
popf
mov
repz
cmovg
scas
mov
icebp
mul
ret
dec
xlat
mov
into
push
sub
sub
or
jo
test
in
cs
vpunpckldq
lahf
xchg
pusha
std
mov
and
call
nop
push
cdq
mov
jle
fldcw
test
ret
inc
sub
js
arpl
into
and
adc
push
jnp
add
les
ret
mov
das
scas
jl
mov
xor
xchg
or
xchg
xor
xchg
loopne
popa
in
fidiv
les
fwait
call
shr
pop
ret
out
imul
cmp
mov
or
leave
sub
cmc
xchg
mov
xlat
(bad)
xlat
loop
retf
push
jg
repnz
adc
jbe
mov
std
outs
cmp
mov
es
sub
leave
test
inc
rcr
retf
pop
mov
mov
fs
(bad)
sub
or
mov
nop
pop
into
imul
rcr
scas
mov
out
scas
or
popf
gs
mov
adc
dec
loope
mov
sub
pushf
popf
adc
hlt
mov
jno
out
jl
mov
push
test
movs
inc
inc
ss
imul
(bad)
arpl
push
imul
popf
std
pop
stos
cmp
sbb
int
sahf
movs
adc
lock
mov
xchg
cs
mov
lods
inc
fdiv
jae
daa
mov
imul
enter
or
lods
cmp
movs
bound
mov
xor
jg
arpl
sub
xchg
push
addr16
test
jecxz
aaa
out
cwde
sbb
jb
dec
outs
icebp
icebp
mov
fstp
es
dec
mov
sub
push
mov
jne
xor
lea
and
pop
aad
test
cmp
repz
sahf
sub
inc
mov
sub
cmp
mov
jbe
push
sbb
int
rcr
inc
xchg
or
scas
and
pop
dec
mov
xchg
scas
adc
fsub
sub
lods
outs
xchg
mov
jecxz
sbb
pop
inc
mov
in
sbb
(bad)
adc
pop
and
leave
sub
pushf
sbb
aad
push
test
outs
aas
mov
xor
cdq
jo
das
dec
pop
sbb
mov
push
push
push
xor
outs
clc
movs
adc
inc
fist
jne
test
(bad)
cmp
das
xchg
ja
add
rcr
mov
cmp
jmp
lock
rcr
lock
cmp
aaa
sbb
xor
inc
test
sahf
in
mov
mov
mov
inc
mov
cmp
mov
inc
jcxz
outs
add
addr16
mov
inc
sbb
rcr
mov
sub
mov
push
loop
int
or
mov
cmp
push
pop
clc
jns
adc
jbe
or
cmp
stc
cmps
hlt
loop
aas
push
mov
adc
in
les
js
mov
inc
iret
pop
rcr
fidivr
mov
in
xchg
xor
sub
sbb
pop
cli
cmp
aaa
ins
mov
test
cdq
mov
sbb
inc
out
mov
test
jae
jns
pop
jbe
in
sbb
cmps
jae
jmp
in
pop
jl
movs
lods
adc
add
rcl
mov
cli
cdq
int
and
jmp
sbb
les
test
popa
sub
fnstcw
test
xchg
test
sbb
gs
xchg
mov
fwait
pop
out
inc
mov
xchg
fs
arpl
repnz
shl
mov
arpl
pop
ret
scas
xor
test
or
lock
xchg
xor
mov
into
out
xchg
inc
sub
test
push
popf
fucomi
mov
lods
sub
retf
inc
popa
(bad)
(bad)
adc
xor
test
into
pop
pop
jae
xlat
adc
iret
lea
xor
aas
jp
pop
ss
inc
dec
popf
jl
and
dec
inc
out
lea
fstp
loope
gs
sbb
cmps
cmp
rol
jecxz
pop
dec
push
push
sub
or
push
scas
scas
icebp
jle
fdivr
enter
int3
(bad)
inc
in
pop
cmp
mov
dec
jge
fistp
mov
das
stos
add
xchg
ret
push
jnp
xchg
dec
arpl
(bad)
arpl
mov
test
or
pop
fstp
mov
in
and
pushf
xor
add
add
mov
hlt
mov
jecxz
dec
test
lods
ins
or
mov
mov
mov
jns
cmp
cmp
in
jbe
cmps
ror
aaa
test
xor
lock
inc
push
ins
pop
lea
test
pop
xor
std
fbld
pop
ret
jnp
je
call
test
movs
nop
movs
test
inc
stos
sahf
lea
int3
dec
sub
icebp
inc
cli
aam
mov
xchg
xchg
add
or
jmp
stos
mov
inc
hlt
xchg
push
(bad)
push
sar
imul
mov
adc
or
mov
pushf
ret
xor
in
xor
push
mov
jp
rol
or
popf
push
test
rcl
es
mov
aam
push
out
jns
repz
movs
mov
outs
inc
lock
loop
call
xor
pop
mov
sub
adc
jne
jnp
mov
retf
mov
mov
inc
aaa
sar
js
and
jg
stos
or
pop
aam
mov
pop
adc
je
push
leave
shl
xchg
sbb
xchg
cmp
repz
out
jne
shr
add
sub
dec
inc
pop
loop
adc
push
mov
movs
and
or
jmp
aaa
xchg
retf
das
dec
pop
push
or
stos
adc
mov
lea
mov
mov
push
fisub
push
push
pusha
push
pusha
mov
cmps
fwait
inc
ja
inc
lods
jge
sub
(bad)
pop
fisub
dec
jb
sub
jae
mov
mov
cld
add
nop
aam
cmp
inc
popf
and
dec
pop
cmp
or
or
pop
mov
push
push
xchg
mov
adc
inc
sub
call
pextrw
xor
rcr
push
packssdw
lods
dec
ins
dec
aam
pop
call
stos
outs
js
(bad)
imul
pop
data16
push
jb
icebp
cmp
xchg
jno
sahf
mov
sbb
lock
push
call
test
mov
sub
add
adc
int
outs
cdq
test
sub
xor
mov
or
push
and
sbb
xor
mov
or
add
and
cdq
fdiv
imul
pop
cmc
mov
mov
shr
out
lahf
cmc
ret
gs
xor
stos
movs
cmp
out
pop
mov
popa
shl
fisub
stos
inc
jns
fcom
jp
jbe
fdivr
enter
inc
inc
mov
sub
or
cwde
rcl
ds
inc
popa
mov
fild
aaa
jo
out
call
pop
mov
sub
and
and
push
rcl
js
sub
mov
dec
mov
or
mov
jne
ins
lods
cmp
sub
ret
lea
int3
xor
jp
fcom
adc
dec
inc
mov
and
mov
imul
or
test
lods
mov
and
jle
pop
adc
outs
jne
sbb
push
int
ins
mov
int3
mov
shl
add
push
loope
xor
mov
(bad)
bound
jno
mov
jmp
cmp
xchg
into
mov
test
push
push
add
dec
mov
dec
retf
cmp
xchg
js
cld
pop
sub
inc
in
cdq
ret
int
jae
inc
add
ins
movs
scas
pushf
sbb
mov
es
pop
aad
cmps
enter
xor
cwde
data16
cmp
add
sub
cmp
or
nop
mov
push
shl
dec
pop
je
daa
iret
iret
dec
in
cmps
mov
mov
mov
outs
inc
xchg
data16
int
adc
leave
sbb
gs
shr
inc
jge
bt
hlt
sahf
repz
pop
ror
mov
pop
mul
xchg
xchg
and
mov
adc
jae
cmp
mov
std
cli
and
jmp
dec
loop
mov
adc
sbb
ror
cmp
xor
call
sbb
and
dec
out
aam
(bad)
clc
inc
ins
in
cmps
in
rol
dec
push
sub
repz
mov
push
mov
sbb
mov
pop
push
mov
out
iret
stos
adc
in
adc
jg
scas
scas
pop
rcr
clc
fisub
scas
xor
or
sub
out
sbb
push
in
or
pop
cdq
test
in
outs
pop
cli
xchg
sub
lea
mov
ret
add
sti
mov
and
bound
in
xchg
idiv
test
ror
sbb
fwait
cmp
xor
bound
add
test
or
or
xchg
xor
std
mov
pop
sub
mov
push
lock
pop
loope
jns
rol
loopne
pop
inc
adc
stos
es
fwait
nop
popa
loopne
mov
stc
mov
sub
jg
cmp
retf
xchg
xchg
(bad)
les
inc
and
fs
mov
enter
mov
sub
jge
in
fcom
je
xor
loope
add
sbb
loop
inc
sbb
les
jecxz
ins
inc
inc
pop
xchg
aad
cld
lds
mov
cmp
dec
int3
loope
dec
xchg
jmp
add
popa
sub
add
pop
daa
lea
mov
mov
adc
sub
dec
and
aam
mov
outs
and
cmp
gs
pusha
push
aaa
arpl
shr
pop
pop
sub
xchg
dec
jg
add
xor
fsubr
fadd
xchg
repz
stos
shl
mov
pop
mov
inc
fldcw
or
push
movs
or
sar
jmp
xchg
iret
icebp
xchg
and
sub
sbb
xchg
pusha
frstor
adc
div
jae
movs
ins
das
test
fwait
movs
fldenv
and
lock
mov
cmc
pop
dec
add
pop
nop
xor
or
sbb
dec
int
arpl
(bad)
lods
xchg
mov
jns
mov
js
cmps
icebp
retf
xor
xchg
push
sbb
iret
push
sbb
inc
push
add
shl
pop
adc
es
inc
jge
jg
int
add
shl
inc
and
push
retf
loopne
xchg
mov
(bad)
pop
lods
jmp
jmp
dec
and
dec
sbb
or
xor
mov
adc
out
mov
add
js
mov
adc
shl
call
div
or
push
mov
dec
fmul
pop
and
cmc
mov
mov
lock
cmp
push
shl
pop
adc
xchg
dec
sbb
ins
std
mov
sbb
ficom
out
stos
scas
mov
call
xor
sbb
pop
gs
fadd
stos
dec
mov
cs
jmp
out
ja
ret
icebp
xchg
aas
pop
adc
mov
sbb
pop
mov
(bad)
fbld
or
stos
(bad)
push
mov
shl
das
daa
out
push
inc
stos
cmps
test
leave
ret
aad
mov
test
cdq
sti
(bad)
mov
shr
mov
push
pop
aas
mov
or
fimul
adc
stos
xor
pop
mov
xchg
cmp
push
or
jmp
in
je
aad
dec
fst
mov
lds
cmp
pushf
pusha
adc
gs
inc
sahf
or
sti
inc
dec
test
(bad)
lods
xchg
sbb
pushf
or
adc
sub
jecxz
loope
jecxz
add
movs
test
int3
dec
pop
pop
mov
push
lahf
mov
adc
push
shr
inc
fstp
jl
ret
push
cmc
mov
cmp
loop
outs
fidiv
stc
jo
xor
xchg
loopne
pop
mov
mov
jb
or
inc
(bad)
jecxz
dec
cmp
dec
xchg
mov
dec
dec
lods
pop
sbb
aam
mov
int3
inc
das
mov
jl
sub
adc
test
jmp
inc
enter
jo
cwde
mov
into
loopne
lea
leave
enter
sub
sbb
rol
popa
mov
jmp
loopne
xchg
and
sub
push
in
adc
pop
ins
scas
mov
sbb
and
les
into
mov
mov
mov
dec
das
inc
cmp
(bad)
imul
pushf
pop
cwde
cld
(bad)
jp
add
imul
daa
loopne
sub
dec
popf
or
xchg
adc
clc
int3
inc
and
mov
push
add
jge
sub
or
shr
pop
inc
test
dec
mov
popf
rcl
sub
sahf
jo
movs
sub
mov
dec
push
inc
xlat
hlt
xchg
es
jae
and
pop
mov
dec
pushf
in
(bad)
test
lahf
aaa
ja
push
into
cmp
jno
in
js
ret
mov
loope
lods
fwait
sti
adc
out
iret
imul
lock
(bad)
mov
inc
add
cmp
jecxz
and
mov
xchg
fnsave
sbb
sar
mov
push
fldcw
in
jnp
retf
mov
pusha
ins
jo
ins
adc
xchg
test
jge
jb
(bad)
cs
add
loope
inc
ret
addr16
adc
push
int3
mov
call
adc
into
cmp
aaa
xor
and
(bad)
addr16
push
in
dec
or
or
and
(bad)
push
push
and
fadd
bndldx
dec
out
cmp
loopne
and
cli
or
pop
nop
rcl
mov
mov
xchg
pop
mov
sahf
adc
iret
and
in
adc
aaa
lods
data16
std
pop
push
jb
adc
xchg
int3
adc
and
inc
jecxz
mov
pop
jecxz
mov
ds
sbb
adc
xchg
xor
dec
mov
les
stos
dec
mov
bound
mov
rcl
jmp
retf
jecxz
int
sbb
psubd
das
xchg
adc
popaw
pcmpeqw
aas
jecxz
lods
mov
jnp
es
xor
mov
mov
(bad)
outs
add
xchg
cld
jp
inc
fs
into
gs
mov
lock
mov
xchg
pop
jnp
das
jmp
mov
add
fnstsw
test
call
int
mov
fs
call
add
cmp
xchg
push
scas
inc
out
jnp
sbb
mov
stos
adc
adc
jecxz
out
repnz
and
mov
add
out
add
sub
xchg
ror
shl
loopne
(bad)
shl
mov
outs
test
push
and
and
pop
adc
pop
pop
add
add
stos
add
mov
lock
out
mov
cwde
push
retf
out
or
fsub
ins
jbe
call
mov
movs
and
(bad)
mov
cwde
sub
scas
jg
pop
mov
cmps
sahf
jecxz
sub
push
xchg
out
or
and
add
xchg
cmp
pop
aam
sbb
add
add
sbb
pop
cmps
pop
cmp
cld
mov
mov
fwait
adc
cld
dec
out
out
push
mov
pusha
mov
jecxz
xchg
add
mov
xor
iret
cmp
pop
dec
cmps
and
aad
sbb
ss
ins
popf
inc
adc
push
jmp
sub
retf
mov
jo
dec
out
hlt
xchg
or
inc
push
(bad)
mov
in
push
fldz
cmp
lds
fidivr
cmps
adc
and
ss
xchg
shl
jns
push
pop
aas
pop
daa
inc
mov
sbb
sbb
mov
and
ret
or
add
cmc
ret
push
cmp
bound
push
popa
aam
(bad)
hlt
mov
shl
or
out
adc
jns
daa
fiadd
add
lds
dec
in
sbb
fcom
pop
out
sbb
inc
ins
aad
push
movs
stos
mov
cli
repz
xchg
stos
push
cmp
mov
(bad)
into
mov
and
inc
stos
jo
test
jne
cwde
dec
fwait
or
int
cmp
cmps
test
mov
loopne
mov
fld
mov
add
add
int3
cmc
cmp
cmps
arpl
inc
and
in
mov
lods
mov
jg
pop
imul
mov
cmp
sub
shl
lds
adc
rcl
dec
test
pop
test
les
push
bnd
enter
popa
call
xchg
add
or
jae
xchg
jge
sbb
stos
es
push
loop
jns
or
jmp
test
and
out
into
(bad)
mov
pop
push
inc
and
sub
pop
push
stc
fdivp
push
sub
push
sbb
cdq
cld
mov
lahf
inc
jmp
mov
in
xchg
movs
call
movs
and
xor
xor
sub
pop
inc
sbb
inc
retf
xchg
test
ret
(bad)
and
mov
fcomp
int3
jge
mov
dec
inc
stc
call
fist
test
cmp
dec
adc
push
int3
ds
mov
jl
or
sub
and
scas
stc
cmp
lea
mov
jno
jl
div
jge
ret
nop
fistp
shr
retf
jg
stos
pop
mov
and
mov
and
jl
sub
sar
or
mov
dec
jbe
cmc
add
cmps
cdq
mov
ret
sar
jne
jb
scas
jle
jbe
mov
shr
sbb
cmp
sub
xchg
hlt
jne
xchg
sub
mov
push
loopne
in
mov
ret
sbb
inc
xor
sbb
int
adc
lock
clc
shl
mov
shl
int3
scas
mov
or
and
ss
scas
cmp
ins
lea
push
jne
mov
add
mov
pop
(bad)
in
pop
out
inc
or
sar
push
mov
ret
out
push
pop
scas
and
xchg
mov
aaa
sbb
push
mov
mov
sub
lahf
inc
mov
push
dec
sbb
fidiv
ds
jp
sub
fidiv
jns
sub
push
mov
and
inc
loop
das
in
xchg
fst
loop
mov
adc
mov
and
mov
aam
add
xchg
(bad)
retf
movs
cmp
inc
inc
xor
clc
sbb
pop
push
or
lahf
push
inc
aas
push
push
test
(bad)
push
mov
adc
int
jae
inc
test
test
sar
out
cmc
xchg
and
lods
(bad)
push
arpl
mov
push
lods
ins
cmps
pusha
mov
inc
test
daa
cmc
jl
and
mov
add
xchg
ds
sbb
jge
aad
mov
xchg
inc
jecxz
sub
push
lds
(bad)
push
ret
(bad)
mul
mov
loope
mov
enter
and
mov
repnz
adc
lods
cmp
ins
loop
iret
or
retf
fistp
mov
fstp
add
pop
(bad)
fwait
not
adc
aas
mov
adc
ror
inc
xlat
add
mov
jo
(bad)
jne
xor
and
aaa
sub
xchg
mov
inc
into
push
dec
(bad)
repz
jge
pop
mov
jle
or
inc
jg
or
or
jae
or
or
bound
mov
in
nop
dec
in
sub
mul
cmp
repz
mov
call
aad
shl
mov
sbb
jno
or
imul
xchg
cmp
cmp
scas
adc
loope
mov
xor
pop
xor
fadd
aas
sub
and
inc
push
inc
sbb
inc
loope
or
push
mov
sbb
lahf
mov
ret
add
pop
sbb
inc
xchg
push
es
and
inc
sbb
ror
cmp
push
div
add
dec
sbb
das
cmps
in
ret
(bad)
mov
stos
push
scas
dec
jne
push
xor
mov
outs
popa
out
add
jnp
xchg
mov
ins
mov
xchg
cmp
les
arpl
aas
sub
sar
stos
mov
mov
test
or
int
nop
mov
adc
jbe
jae
imul
mov
test
pop
adc
leave
nop
mov
shl
adc
mov
mov
mov
bound
mov
or
rol
test
jns
cld
pop
outs
popf
mov
int3
adc
leave
stos
push
js
inc
pop
dec
fucomip
call
iret
sbb
pushf
sub
mov
ss
out
mov
sti
and
inc
jg
repnz
jo
(bad)
mov
push
inc
and
je
pusha
outs
mov
int
xlat
dec
mov
nop
fdiv
cmp
push
mov
movs
fs
cmps
mov
shl
sar
sbb
xchg
cli
out
loop
adc
mov
pushf
adc
or
dec
mov
mov
outs
test
pop
rcr
dec
adc
dec
enter
lods
adc
add
pushf
aad
sub
adc
pop
adc
mov
pop
sbb
scas
cwde
mov
cmp
xchg
and
imul
fadd
stos
xchg
(bad)
push
mov
js
mov
dec
xchg
and
or
mov
bound
sub
mov
mov
mov
xchg
jmp
cmc
sbb
cmps
das
dec
rcl
mov
enter
jge
outs
xchg
lock
pop
int3
or
fist
cwde
xchg
push
aaa
inc
inc
mov
jo
fidivr
mov
inc
add
mov
outs
jl
inc
das
and
retf
mov
cmp
not
xchg
sbb
popf
inc
fdivr
(bad)
call
push
mov
or
(bad)
cmp
icebp
ds
inc
xchg
test
lods
ss
bound
push
rcl
(bad)
cmps
aam
mov
jmp
movs
ss
pop
cmp
fcmovne
cld
shl
test
dec
add
xchg
repnz
lods
dec
test
les
pop
adc
cdq
and
jnp
and
rcr
jb
push
or
sub
clc
icebp
in
cdq
cdq
jb
xlat
or
(bad)
sbb
icebp
jmp
movs
mov
sbb
sbb
sbb
(bad)
jbe
(bad)
or
mov
mov
dec
lods
imul
bnd
dec
dec
sub
sti
jg
sti
mov
lahf
mov
repz
and
test
ret
les
mul
(bad)
call
(bad)
sub
xchg
clc
or
jnp
leave
in
pop
cdq
shl
mov
ret
mov
in
ins
mov
les
sbb
icebp
xchg
bound
push
dec
fcomp
and
movs
ret
stos
bound
mov
mov
and
ja
dec
xchg
lds
mov
add
test
and
nop
mov
das
inc
popa
xchg
dec
clc
call
mov
cmps
sub
mov
fldcw
test
mov
jne
sti
int3
add
adc
xchg
sub
jp
mov
xor
ror
pop
jnp
push
pop
xchg
lea
push
daa
inc
pushf
mov
fadd
push
lods
xor
pop
push
adc
or
scas
in
dec
(bad)
jb
std
test
bound
xor
and
mov
jl
mov
cmp
push
repnz
push
push
(bad)
scas
sbb
daa
pop
outs
xchg
aaa
fsub
cmps
shr
sbb
add
jle
and
iret
inc
shr
call
rol
test
inc
mov
outs
ror
and
jp
in
movs
dec
push
push
jge
jnp
lock
pminsw
add
daa
pop
mov
in
fs
xchg
inc
loope
out
arpl
ins
lea
sub
xlat
pop
dec
jl
xchg
sbb
in
mov
out
ins
jne
mov
mov
adc
mov
aad
fdiv
sub
xchg
and
add
dec
cwde
scas
jmp
stos
ret
xchg
inc
xchg
inc
xor
and
repnz
sbb
movs
out
ins
dec
cmp
mov
mov
jmp
out
rcr
out
lods
out
out
into
jne
push
push
pop
cs
pop
retf
mov
loop
sub
pop
jnp
loope
cmp
out
add
fnstenv
mov
push
(bad)
push
(bad)
pop
idiv
push
adc
sub
cmp
shr
fild
inc
nop
out
ficom
hlt
jmp
add
mul
call
cmp
jecxz
push
mov
loope
push
add
dec
das
mov
into
and
loope
fcmovu
movs
fisttp
add
push
ins
jmp
aas
loope
ss
and
bound
dec
popf
movs
out
(bad)
addr16
xchg
les
shl
cmp
out
xlat
test
sar
adc
test
gs
push
push
sbb
cmp
sahf
repz
xchg
call
pop
test
lock
cmp
mov
mov
add
or
mov
enter
nop
cmp
repz
mov
scas
add
xor
loop
enter
mov
add
jmp
test
sbb
xchg
arpl
mov
fnstcw
js
inc
(bad)
call
popf
xchg
test
lds
and
loopne
ficomp
loope
ret
pop
mov
mov
fsub
or
test
fstp
sahf
fmul
ins
xlat
retf
shl
mov
imul
ficomp
inc
(bad)
es
xor
and
push
ss
or
mov
xor
les
jmp
and
mov
mov
or
mov
int
jns
call
dec
and
sar
xchg
inc
enter
xchg
cld
mov
les
shr
push
inc
mov
or
ins
xchg
enter
call
jno
mov
adc
aam
or
ins
and
cs
sbb
movs
inc
and
jno
push
xor
push
cli
fsubr
mov
pop
dec
daa
pop
adc
pop
cmp
add
iret
jne
arpl
pop
jmp
xlat
mov
sub
mov
inc
adc
mov
cli
push
jp
jmp
jbe
mov
or
fnstsw
sbb
fdiv
mov
mov
cld
xchg
pop
pop
cdq
dec
jns
loope
jns
or
ins
in
dec
push
xor
or
retf
fldenv
adc
mov
and
push
arpl
mov
pop
fwait
push
add
int
out
test
adc
inc
mul
xchg
mov
clc
in
cmps
(bad)
sbb
jb
push
push
pop
xchg
or
vfrczps
and
ja
xlat
xchg
leave
xchg
in
sub
push
(bad)
loope
push
adc
in
mov
dec
hlt
hlt
popf
stos
xchg
cmp
out
adc
cmp
leave
stos
lock
cmps
pushf
push
add
inc
push
cwde
sub
lods
pop
push
mov
arpl
sub
repz
and
push
ins
cwde
cmp
pop
iret
xor
movs
add
scas
sti
sbb
dec
sbb
cmps
mov
jecxz
test
sti
xchg
adc
add
out
int3
loopne
dec
xchg
stc
outs
movs
or
out
sub
mov
ss
push
cli
mov
hlt
mov
sub
outs
sub
jae
aad
mov
pop
jno
push
fstp
mov
enter
aaa
push
mov
cmc
pop
outs
lock
sbb
mov
xchg
mov
lods
(bad)
mov
sub
movs
test
test
mov
test
mov
test
dec
pop
jg
sbb
add
aaa
inc
xchg
cli
push
xor
movs
mov
iret
stc
neg
sbb
dec
inc
in
shl
clc
mov
shl
or
movs
pop
dec
lds
ror
fbstp
inc
jmp
int
aas
and
or
adc
xchg
jns
xor
fwait
and
in
inc
or
fisubr
test
cdq
les
jb
mov
in
mov
leave
lods
mov
test
inc
rcl
jo
popf
les
push
jp
sub
nop
call
jnp
lods
jbe
scas
test
dec
jp
hlt
cwde
mov
aaa
outs
adc
jmp
or
dec
imul
pop
dec
xchg
or
lods
jo
int
popa
aaa
xor
pusha
inc
push
cmc
pop
jbe
in
das
xchg
add
jae
push
mov
xchg
mov
dec
mov
pusha
jmp
push
aaa
cdq
adc
sub
es
pop
les
adc
and
dec
and
or
imul
xchg
push
xchg
mov
icebp
cmp
inc
push
nop
push
pop
fdivr
out
or
jp
sbb
out
rcr
call
inc
mov
mov
mov
gs
shr
cs
jge
add
dec
clc
add
mov
int3
mov
or
lds
and
pop
xchg
shl
ror
in
push
mov
fiadd
inc
push
or
out
xchg
mov
xchg
(bad)
out
(bad)
in
cmp
sahf
int
xchg
sar
or
int
ret
add
inc
mov
sbb
add
lock
pop
int
push
ret
inc
pop
stc
fldenv
jle
popa
add
pop
jmp
ds
and
mov
fild
cli
retf
test
or
inc
out
push
cdq
repnz
inc
mov
popf
dec
icebp
xchg
rcr
jmp
mov
xor
call
mov
ret
stos
jae
mov
daa
loope
cmp
jns
inc
aad
loopne
add
call
push
inc
sbb
sub
dec
leave
ror
call
ret
and
sub
ret
pop
sub
jle
ret
dec
cmp
bswap
cmp
adc
jg
std
pop
aas
xor
mov
aad
sahf
nop
sbb
sbb
adc
mov
mov
adc
movs
ins
dec
mov
add
push
iret
lahf
mov
leave
data16
xchg
sub
into
cwde
xchg
xchg
mov
push
hlt
or
(bad)
fs
adc
jns
ja
aam
scas
push
enter
xchg
jbe
test
adc
xor
cmp
inc
shl
or
ja
ins
imul
xchg
test
nop
shr
jge
mov
push
arpl
fisubr
xchg
xor
imul
dec
sbb
sahf
retf
jns
cli
mov
jbe
pop
test
jbe
js
mov
inc
sbb
arpl
xchg
push
(bad)
idiv
imul
inc
adc
out
xor
or
test
jo
xchg
pop
mov
xchg
pop
mov
mov
sbb
add
std
sub
retf
or
aam
cmp
xor
repz
test
movs
push
inc
mov
fdiv
sub
div
jg
sub
add
lea
jmp
sti
clc
pop
xor
ret
(bad)
bnd
pop
push
jmp
and
loopne
sub
jg
push
pop
shr
and
leave
cmp
ret
mov
mov
adc
jmp
ds
push
push
fnstenv
jo
xor
dec
ret
shl
adc
cmps
loope
pop
hlt
mov
pushf
outs
cmps
xchg
iret
loop
loope
loop
fwait
cmps
mov
push
dec
sub
test
test
and
into
mov
xlat
stc
imul
lods
ja
ret
loope
xchg
sub
clc
es
fisttp
adc
mov
xor
and
mov
lds
jmp
cmps
adc
push
push
daa
push
not
mov
xchg
mov
dec
repnz
push
and
pop
movs
inc
cli
inc
pop
pop
xchg
mov
xor
fstp
cld
push
daa
sbb
ret
retf
sub
xchg
push
and
cmp
leave
dec
(bad)
push
shr
std
mov
repnz
inc
pop
jmp
(bad)
(bad)
add
and
mov
sti
mov
rcl
xchg
xlat
and
mov
rep
das
shl
xor
sub
loop
adc
movs
pop
mov
jp
test
xchg
push
mov
rcl
jnp
rol
xchg
lods
pusha
mov
(bad)
in
jne
lock
push
push
cld
xchg
hlt
mov
jle
add
ror
xchg
dec
inc
fisubr
imul
jge
call
in
xchg
push
and
loope
and
stc
pusha
lods
push
dec
and
and
dec
fisub
jno
lds
sbb
mov
mov
cmp
out
or
push
mov
adc
inc
ds
out
xor
dec
cmp
jb
mov
inc
jne
and
test
inc
fmul
cmc
(bad)
dec
jge
mov
sub
cld
adc
mov
(bad)
cdq
pop
sub
jbe
pop
repnz
push
mov
xchg
pop
mov
jl
xor
push
jmp
sbb
mov
inc
or
std
loope
movs
xchg
(bad)
mov
cmp
(bad)
pushf
mov
movs
or
mov
cmp
(bad)
pop
push
push
adc
adc
push
jmp
je
push
in
push
push
cmp
mov
add
xchg
jb
cli
push
cmps
xchg
loopne
add
pop
std
dec
or
out
cmp
xchg
fcmovu
mov
imul
mov
add
and
jge
pop
xor
mov
push
pop
int
in
or
fld
or
or
or
ret
or
pop
outs
cmp
clc
aam
aas
(bad)
js
rol
mov
xor
cmp
outs
and
mov
inc
mov
pop
aas
adc
xor
mov
arpl
fwait
test
or
dec
pushf
and
imul
outs
cmp
dec
mov
call
mov
daa
xlat
nop
jmp
add
ins
xchg
mov
inc
pop
adc
ins
pop
adc
mov
sub
pop
jp
ja
cli
dec
sbb
(bad)
hlt
shl
sbb
dec
mov
mov
pop
xor
mov
pop
jnp
mul
or
adc
xchg
jl
pop
pop
push
push
sub
mov
aad
imul
push
fimul
sub
adc
fs
dec
sbb
pop
jne
adc
movs
adc
jb
inc
pop
out
xchg
fs
inc
jecxz
jb
mov
retf
add
sub
jg
or
fs
fdivr
dec
rcl
shl
mov
sub
jmp
jecxz
cmp
jge
jbe
xchg
pop
shl
and
adc
inc
shl
fs
add
jne
in
mov
in
pop
mov
out
jne
jl
pop
jmp
popa
imul
or
add
iret
movs
jmp
push
push
or
xchg
pop
imul
test
mov
mov
sahf
call
inc
sbb
(bad)
ins
sbb
jmp
sub
popa
add
movs
in
jmp
ja
or
call
jmp
jp
loopne
xchg
mov
sub
loopne
inc
fwait
sub
xor
pop
sbb
aas
cmp
sti
hlt
(bad)
fst
ret
fld
ror
daa
push
(bad)
push
lahf
std
jb
(bad)
sahf
push
adc
or
jno
call
fs
jns
or
pop
push
mov
or
lods
int3
adc
ins
(bad)
mov
dec
mov
or
pushf
jmp
imul
inc
(bad)
xlat
into
add
js
sti
ins
outs
sbb
jecxz
cwde
sbb
add
push
add
mov
(bad)
add
jbe
inc
fstp
or
(bad)
iret
data16
rol
dec
call
push
and
ins
cmps
stos
jp
cmps
test
jnp
pop
pop
pusha
push
inc
nop
jno
or
outs
jmp
jg
outs
or
pop
js
test
xor
cmp
mov
jb
mov
lods
in
out
popa
loop
xchg
popf
mov
addr16
fsubr
mov
push
jo
mov
adc
xor
pop
rcr
retf
mov
rcr
imul
fs
in
iret
sbb
add
xor
test
jge
inc
stos
lock
fist
pop
cdq
(bad)
aad
push
mov
sahf
cld
and
ror
or
pop
pop
jno
lahf
jae
inc
cmp
xchg
cs
pop
pop
pushf
sahf
sub
and
in
ret
test
or
les
jno
aas
ins
ins
test
sbb
cmps
cmps
mov
mov
cdq
movs
xlat
shr
cdq
cs
fcomp
jle
int
lahf
push
fldpi
mov
pop
ss
adc
(bad)
xor
push
sub
(bad)
out
shl
inc
mov
push
sahf
aam
mov
test
scas
and
arpl
mov
jl
pop
mul
pop
mov
stos
enter
ja
outs
inc
out
add
or
dec
cmp
pop
movs
packuswb
mov
loope
mov
call
and
scas
xor
xchg
movs
sub
les
jmp
fnsave
mov
sub
(bad)
mov
push
retf
xor
je
cdq
rcl
push
jmp
push
cdq
scas
sub
test
cmp
int3
xor
mov
adc
mov
push
(bad)
call
clc
pop
push
addr16
sub
adc
push
clc
xor
cmp
xchg
mov
out
ror
inc
jno
mov
push
mov
out
inc
add
mov
retf
jns
in
(bad)
fbld
sbb
ret
sahf
ja
mov
rcl
mov
imul
fild
movs
int
lock
call
call
xchg
out
call
mov
xor
xchg
(bad)
xchg
not
xor
add
dec
lods
pop
iret
addr16
pop
sbb
fild
sbb
and
sbb
in
jno
cmps
cmp
int
pop
jno
pop
dec
and
adc
mov
sbb
icebp
jns
jg
test
addr16
int3
fisttp
mov
dec
push
lea
ror
jle
ret
xchg
mov
js
les
das
rcr
out
dec
sahf
les
mov
jmp
xchg
mov
pushf
lahf
jmp
cmc
dec
sbb
out
inc
es
jp
icebp
ds
pop
push
sbb
ins
not
pop
xchg
pop
cwde
push
dec
xchg
(bad)
jg
bound
retf
in
andnps
scas
inc
les
fld
in
js
push
sbb
movs
scas
js
cmp
pop
dec
je
(bad)
and
inc
mov
retf
js
push
loop
movs
jecxz
add
movs
out
lds
cld
(bad)
es
and
sub
add
mov
xlat
sub
cwde
stos
cwde
sbb
pop
mov
or
aad
cmc
inc
int
jns
lock
ret
bnd
fdiv
inc
rsm
mov
mov
scas
imul
repnz
or
mov
(bad)
(bad)
mov
dec
pop
test
jno
stos
in
repz
cwde
xchg
retf
test
cmp
xor
shl
xor
stc
movs
(bad)
jmp
add
mov
dec
push
jle
or
mov
aad
mov
dec
lock
xor
xchg
mov
mov
mov
mov
inc
aam
cmp
test
xor
adc
jge
and
hlt
int3
push
clc
jbe
pop
in
jmp
das
jnp
test
add
jecxz
inc
ret
aaa
(bad)
mov
outs
sbb
nop
push
inc
add
out
dec
repz
into
xchg
pushf
cmc
mov
pop
cmps
mov
lock
mov
jge
dec
imul
jecxz
mov
js
jo
lahf
mov
xor
pusha
and
sub
inc
lods
sub
add
jmp
fldcw
fld
mov
hlt
in
push
(bad)
and
popf
mov
cmc
stos
xor
mov
mov
sub
dec
pop
push
jmp
repnz
in
xor
mov
imul
jge
inc
shl
neg
loop
sbb
sbb
aad
shl
lea
out
mov
bound
sar
not
into
popf
jne
cmps
push
adc
lds
inc
aad
dec
xchg
mov
mov
jne
aad
pushf
cmps
sub
xor
mov
inc
mov
(bad)
xor
jns
mov
push
pop
(bad)
ficom
and
xor
jmp
jno
xlat
add
call
push
fs
imul
push
mov
bnd
stc
(bad)
(bad)
int
mov
jmp
lods
xchg
movs
scas
xchg
cmp
jae
or
pop
and
pop
jl
sbb
(bad)
outs
mov
iret
aas
arpl
ins
dec
mov
push
push
daa
push
fs
xchg
cmp
dec
gs
lods
iret
dec
call
or
scas
sbb
mov
fwait
inc
pop
(bad)
(bad)
rol
xlat
fwait
rcr
add
mov
cmps
mov
sub
or
jp
loope
arpl
dec
sub
jle
ja
pop
pop
inc
pop
in
scas
fist
adc
jecxz
add
repz
ret
mov
out
mov
cmp
ins
adc
xchg
jecxz
cmps
pop
out
cmp
arpl
sub
out
xlat
add
gs
cmp
pop
mov
xchg
gs
add
and
cmp
sbb
pushf
ins
sbb
jge
xor
sar
mov
(bad)
mov
xor
mov
xchg
push
(bad)
sbb
xlat
ins
cdq
in
into
into
inc
dec
or
(bad)
outs
jnp
sbb
jns
pop
int
mov
sbb
(bad)
mov
mov
iret
aad
js
dec
mov
xor
sbb
cmps
jecxz
mov
inc
iret
dec
icebp
mov
cmp
lods
push
(bad)
retf
fwait
jecxz
fs
sub
xchg
div
loop
mov
mov
jmp
mov
jnp
xchg
ins
les
xor
psubsb
add
xchg
mov
jo
xchg
int3
or
mov
lahf
pushf
pop
add
mov
fisubr
dec
fstp
int
das
push
mov
inc
cmps
add
loopne
mov
sar
mov
movs
cmps
sub
shl
xor
scas
repnz
repnz
or
mov
fwait
mov
cmp
mov
mov
repnz
fnsave
fadd
fstp
pop
add
setle
xchg
jle
jmp
in
nop
aaa
inc
repnz
outs
and
mov
ret
mov
outs
jg
ins
mov
cmc
fild
scas
retf
out
sbb
sahf
add
ret
push
ficomp
stos
or
push
inc
mov
movs
dec
ins
outs
aad
add
rcl
jmp
fsub
mov
dec
jecxz
out
les
xchg
mov
lods
mov
xchg
jnp
sbb
xchg
mov
pusha
mov
push
icebp
dec
stc
and
or
push
jb
in
idiv
sub
in
imul
push
pop
adc
sbb
adc
mov
(bad)
stos
cmp
imul
xor
(bad)
sub
ror
dec
out
xchg
cld
jo
aam
repz
pop
retf
xor
jae
sar
(bad)
rcl
jo
js
loope
(bad)
sbb
repnz
ja
cdq
jg
jae
add
adc
xchg
es
test
adc
(bad)
je
inc
xor
frstor
fiadd
xchg
data16
or
pop
leave
mov
sub
cmp
ror
retf
push
(bad)
dec
mov
cmc
sbb
dec
or
in
sub
xchg
(bad)
loop
aas
repnz
and
imul
pop
movs
adc
mov
mov
xor
test
arpl
out
inc
rol
shr
test
movs
jo
add
jnp
mov
int3
mov
aaa
mov
xchg
lea
cld
shr
in
dec
pop
xor
cmc
les
cdq
add
or
and
jg
imul
icebp
loop
adc
and
out
retf
(bad)
aad
sub
rcr
sbb
or
add
cli
dec
in
fwait
add
(bad)
cmp
out
xor
aaa
sub
call
jns
xor
addr16
loop
aaa
inc
dec
xor
mov
inc
mov
cmp
mov
push
mov
retf
cmp
rcl
sahf
ror
sbb
and
or
jge
in
add
idiv
xlat
sbb
dec
adc
or
jmp
pop
test
mov
pop
repz
adc
into
jbe
mov
xor
dec
popa
out
adc
mov
scas
fimul
cwde
ret
adc
cmps
sub
mov
ds
cmp
sbb
test
jmp
fsub
mov
pop
xchg
ja
adc
jg
popa
cdq
dec
xor
cld
fdivr
pop
adc
push
int
repz
push
shr
cmp
xor
or
sbb
xchg
xor
cld
push
pop
jle
sub
adc
pushf
or
out
cmps
clc
sbb
repz
fwait
xchg
xor
xor
pop
mov
pop
(bad)
jb
jle
lds
pop
into
sbb
call
xchg
mov
out
jae
jmp
dec
jno
(bad)
jle
mov
adc
jmp
sub
inc
and
sub
popf
ss
mov
gs
dec
test
sbb
push
push
xor
iret
mov
lahf
push
xchg
mov
or
loopne
aas
rcr
(bad)
and
xchg
icebp
mov
push
push
mov
sub
sub
stc
int
mov
scas
int
sub
add
fiadd
int3
add
mov
xchg
xchg
enter
sub
in
sbb
or
loope
aaa
popf
(bad)
out
pop
mov
aas
sub
jl
cmp
mov
pop
sbb
pop
inc
mov
jl
loop
(bad)
cwde
lock
xor
div
xchg
inc
lock
jbe
sbb
pop
jle
jo
jg
(bad)
jo
add
jge
pusha
(bad)
push
sub
rcr
add
inc
pop
retf
ins
jmp
inc
bound
das
and
fcomp
sbb
fwait
push
cmp
jnp
jmp
das
fcom
sub
push
cld
inc
fbstp
mul
push
addr16
repnz
mov
inc
mov
push
mov
xor
xor
xchg
daa
push
ins
into
xchg
loopne
and
xor
sbb
and
xchg
fisubr
xchg
pusha
inc
or
cmp
inc
add
lahf
je
test
mov
in
adc
jo
popa
and
jmp
mov
add
jge
pcmpgtw
add
adc
(bad)
jae
cwde
adc
sbb
xlat
stos
sbb
and
pop
popf
fdivr
mov
scas
mov
rol
in
push
pop
inc
cli
(bad)
pop
loopne
jle
mov
repz
mov
xor
outs
call
jns
sub
sahf
xor
ds
call
jbe
scas
adc
jb
dec
(bad)
xchg
lods
retf
pop
pushf
jg
ficomp
loope
mov
mov
out
adc
out
loope
(bad)
sti
cli
es
sbb
jle
sbb
push
bound
mov
cmps
fnsave
adc
dec
push
jbe
je
lock
dec
stos
idiv
test
inc
push
das
xor
cmp
mov
mov
pop
mov
mov
and
clc
jno
push
das
sub
xlat
rol
sub
xor
fdivrp
pushf
mov
icebp
mov
or
sbb
inc
xchg
and
mov
cwde
fdiv
cmc
(bad)
cwde
jle
scas
push
jg
pop
cmp
(bad)
test
sub
(bad)
xor
lock
xor
mov
hlt
push
inc
clc
dec
adc
xchg
push
call
call
aas
nop
shl
sub
aaa
(bad)
fdiv
movs
and
int3
sub
add
mov
movups
in
jne
shl
dec
push
xor
bound
dec
fild
mov
mov
imul
xor
pop
add
mov
push
imul
mov
or
(bad)
setnp
push
retf
push
mov
int3
dec
in
test
cmc
mov
xlat
inc
adc
in
add
je
adc
test
cmps
fwait
je
les
ror
mov
xlat
js
push
ret
mov
test
sbb
sub
retf
lods
mov
inc
fild
movs
sub
push
out
fidiv
movs
mul
bound
mov
jl
inc
adc
sbb
mov
add
mov
mov
jae
sub
xchg
jmp
jmp
cmp
out
jbe
(bad)
xor
rol
dec
xor
dec
stos
inc
mov
std
into
loope
test
aam
sbb
rcr
sbb
repnz
and
pop
jg
pop
xchg
cli
shl
mov
jmp
bound
cmp
loopne
jmp
mov
or
shl
cmps
repz
fnstsw
or
repz
std
fld
arpl
pop
stc
into
xchg
dec
dec
(bad)
fsub
sub
mov
outs
imul
stc
std
push
add
mov
cmp
pop
sub
outs
jp
std
xchg
sub
out
lea
dec
xrelease
test
mov
inc
in
fimul
adc
mov
jle
repz
dec
test
mov
cld
push
outs
aam
lods
dec
mov
rcl
shr
sub
mov
xor
add
call
mov
inc
mov
or
xchg
dec
repnz
and
pop
call
jne
lea
test
test
pop
das
cld
(bad)
dec
les
test
cmp
and
mov
sub
mov
call
inc
sub
mov
shl
xchg
mov
mov
in
inc
test
pmaxub
sbb
and
mov
ss
jmp
mov
push
gs
mov
js
xchg
test
fld
inc
ss
lods
ret
shl
ins
in
mov
adc
xor
in
inc
jnp
iret
ja
xchg
shl
add
cmp
xchg
in
mov
lea
cli
mov
cwde
cmp
mov
mov
call
imul
scas
jge
sbb
(bad)
pushf
loope
and
stc
sub
or
xlat
inc
outs
jae
or
push
es
xchg
mov
sub
add
push
inc
mov
dec
aam
shl
(bad)
pop
mov
xchg
jne
xchg
in
call
inc
cli
not
or
nop
in
cld
mov
std
test
xchg
sbb
push
icebp
push
popa
inc
das
lahf
scas
sbb
rol
xor
sub
push
push
fldenv
shld
pusha
sub
and
rcl
adc
sbb
adc
clc
pusha
fstp
je
ja
bound
test
int3
push
mov
bound
shl
mov
xor
lods
push
iret
aaa
je
arpl
mov
and
xchg
mov
or
jecxz
popa
fcmovnu
mov
fdiv
nop
dec
outs
xor
fldcw
(bad)
clc
int3
lahf
(bad)
cli
outs
dec
add
out
out
ja
lock
in
aam
jg
popf
leave
sahf
adc
jmp
pop
cmc
rcl
fiadd
mov
jne
dec
inc
push
pushf
mov
std
mov
or
scas
push
dec
push
adc
ret
les
cld
in
mov
cdq
shl
pushf
or
and
pop
mov
retf
mov
pop
push
jge
xor
sbb
scas
or
scas
mov
jbe
fild
out
pop
in
jl
test
adc
mov
ja
gs
clc
add
ins
movs
clc
ror
aaa
hlt
bound
xchg
ds
test
das
test
fistp
inc
retf
push
xchg
jnp
and
xchg
or
sar
icebp
(bad)
push
imul
jne
jo
jae
rcl
push
and
ss
cmp
ja
ss
sbb
xor
pop
movs
or
lock
and
(bad)
rcl
scas
pop
cmp
mov
xchg
pop
pop
ja
mov
push
fist
pop
int3
xchg
adc
adc
xlat
push
cld
(bad)
adc
cli
xor
pop
mov
dec
jae
or
jl
push
scas
adc
xchg
sbb
stos
sub
pop
ja
push
xor
jg
cld
xor
rol
jp
daa
mov
mov
fs
mov
cmps
mov
cwde
pop
xlat
inc
(bad)
push
ror
jmp
cmp
lds
push
into
cdq
dec
lock
scas
push
or
loop
test
aaa
mov
sbb
cmp
out
pop
or
adc
jle
add
jg
ret
adc
mov
cld
push
dec
sub
inc
imul
js
xlat
jmp
dec
inc
push
addr16
push
push
cmp
xor
jb
and
leave
dec
jl
pop
loopne
pop
out
es
push
cmp
arpl
rol
shl
sar
imul
sub
int3
push
jbe
push
(bad)
test
ret
pop
pop
xchg
mov
mov
cdq
fsub
pop
mov
jnp
push
dec
push
shr
hlt
sub
xor
jbe
ds
js
sbb
mov
adc
out
jmp
movs
sub
cmps
mov
into
cmp
out
push
jo
jae
test
inc
(bad)
out
(bad)
fnstenv
sbb
mov
loope
sbb
bound
sbb
sub
push
icebp
add
imul
rcr
mov
cmp
mov
and
sti
push
add
out
aad
dec
cwde
push
dec
mov
and
shr
jmp
sbb
pop
dec
sub
mov
(bad)
lods
fisub
repz
out
mov
jae
outs
mov
sti
xchg
push
aam
fs
imul
sbb
adc
faddp
sbb
mov
mov
fst
sbb
je
les
or
sahf
idiv
fwait
das
sub
mov
mov
jl
and
stos
cmps
fdivr
ret
into
add
leave
les
cmp
and
mov
shufps
in
xchg
cmp
dec
loope
push
inc
mov
dec
data16
loopne
sbb
jle
add
pop
rcr
jno
mov
stc
mov
mov
sub
stos
mov
mov
pop
in
cmps
xor
aam
mov
frstor
sbb
(bad)
mov
cs
retf
in
mov
je
daa
mov
stc
mov
lods
js
mov
pop
inc
(bad)
mov
outs
jg
lds
sub
lea
repz
repnz
mov
dec
sub
dec
pop
mov
idiv
cmp
aas
cwde
mov
outs
cs
jg
push
and
dec
dec
push
mov
daa
pop
ja
push
stos
pop
enter
stos
les
pop
push
jl
dec
in
pop
xchg
imul
ja
jg
mov
add
mov
pop
mov
sbb
fld
mov
sbb
jmp
dec
shl
ss
sbb
ss
mov
adc
jge
int
enter
adc
mov
out
cdq
pop
inc
mov
cli
sub
or
imul
repnz
test
adc
sahf
in
sbb
mov
(bad)
hlt
shl
push
jmp
and
cwde
mov
mov
sbb
pop
fsubp
test
push
enter
(bad)
push
int
cmp
inc
stc
add
jae
and
mov
outs
sbb
stc
mov
mov
test
add
sbb
in
or
mov
mov
jae
loope
outs
lock
and
mov
xor
dec
ret
(bad)
mov
popa
iret
cmp
enter
js
sub
inc
ja
test
(bad)
fdiv
sbb
outs
rcl
enter
into
in
mov
stc
push
add
xor
or
lock
outs
cld
mov
jbe
test
repz
mov
test
data16
xchg
(bad)
ins
(bad)
mov
ja
dec
add
inc
pop
mov
cmp
into
pop
gs
mov
scas
and
jne
adc
push
enter
xchg
or
push
add
xchg
jo
out
stos
jmp
sbb
test
pop
int3
and
in
call
les
sbb
pop
loope
push
sub
fwait
loope
(bad)
fstp
sbb
ret
stos
sbb
push
gs
inc
xchg
mov
sti
gs
push
fld
jg
pop
cld
mov
dec
aad
or
inc
ja
mov
mov
dec
aaa
mov
inc
xor
dec
in
lods
in
adc
outs
xor
mov
mov
shr
cmc
inc
cmp
push
outs
jge
fs
mov
inc
int
ins
call
mov
jle
xor
or
mov
adc
sub
adc
pop
ror
(bad)
jge
jecxz
or
in
outs
sub
sbb
cmp
lods
jno
pop
xchg
xchg
adc
mov
push
mov
cwde
cli
push
daa
or
push
xor
or
sbb
mov
in
fdiv
cmps
sub
clc
lock
arpl
movs
mov
pop
imul
pop
xor
test
int
mov
enter
iret
je
popf
icebp
les
pop
jnp
inc
mov
mov
dec
repz
cmp
pop
(bad)
xchg
mov
sbb
sbb
bnd
cmp
bound
call
sbb
in
repz
pop
inc
mov
xlat
out
call
enter
icebp
sbb
shl
dec
or
xor
xchg
add
dec
mov
stc
repz
mov
in
addr16
rol
pushf
adc
sar
push
inc
add
or
neg
cwde
jp
sbb
cmp
cli
jnp
inc
add
mov
cmps
les
test
adc
shl
stos
ja
sub
sub
clc
jb
lock
jb
jge
out
(bad)
dec
fwait
cmp
add
adc
cmps
out
jb
mov
pop
(bad)
hlt
test
pop
jmp
jae
ja
xor
bound
xor
pop
inc
adc
es
xchg
mov
adc
ror
sti
xor
xor
sbb
sub
mov
bound
repnz
sbb
jecxz
add
sbb
adc
add
push
jbe
mov
mov
adc
push
cmp
cmp
jl
mov
dec
leave
rcl
or
xor
push
jecxz
push
push
lods
ret
mov
dec
mov
mov
cmp
dec
xchg
sbb
xor
xor
dec
repz
mov
fsubr
dec
push
inc
pop
das
test
mov
ror
popaw
je
mov
enter
mov
das
pusha
or
pop
mov
cs
sub
jb
jae
push
jecxz
inc
mov
xchg
imul
push
mov
jmp
xchg
pop
addr16
scas
xchg
lods
outs
mov
ins
leave
aas
neg
jne
jp
sub
nop
or
mov
pop
addr16
push
dec
sub
les
retf
frstor
mov
adc
lods
(bad)
fiadd
pop
call
adc
jle
xchg
fstp
inc
(bad)
pop
fs
adc
loopne
je
push
pop
aas
ret
mov
ret
js
out
into
ins
jae
arpl
or
mov
popf
jae
imul
xchg
sbb
or
pop
jne
mov
jecxz
cmp
add
sahf
sar
xchg
jo
xchg
jge
dec
ret
std
or
pop
lahf
push
xor
mov
inc
xor
test
mov
fst
out
aam
jge
xor
push
pop
sub
cmp
stos
fwait
push
fs
xlat
ret
(bad)
fld
leave
fcom
push
fcomp
retf
mov
ins
pop
hlt
sub
out
ror
xchg
int3
cld
pop
dec
retf
popf
clc
cmp
fstp
mov
sbb
mov
pop
loopne
add
or
leave
outs
rcr
and
popf
sar
out
mov
fs
cmps
ficom
(bad)
fisttp
jbe
add
add
aam
mov
ins
xor
jne
dec
mov
sub
or
add
xchg
jno
imul
out
cmps
push
rcr
dec
adc
dec
mov
xlat
jo
test
cmpps
jle
dec
mov
xor
add
jbe
mov
cdq
dec
shr
dec
and
mov
lods
mov
daa
data16
add
cmp
(bad)
das
xchg
jae
pop
data16
mov
out
pop
adc
pop
scas
outs
xchg
fild
ins
dec
jp
pop
mov
jns
xor
xor
ret
fisub
hlt
adc
cmps
shl
sub
fs
cmp
cmp
es
jae
jmp
not
add
rol
stos
jmp
adc
xchg
mov
(bad)
sub
and
shl
int
shl
xor
and
ss
clc
add
cmp
loopne
arpl
cmps
leave
mov
imul
test
jecxz
xor
jg
or
push
sbb
sbb
dec
and
fdiv
out
(bad)
lea
mov
sub
test
nop
arpl
add
jnp
push
pop
and
std
lea
ror
xor
xchg
push
xchg
push
das
ret
arpl
leave
mov
test
sti
sub
je
pushf
pushf
fcomp
sub
mov
in
stc
jns
(bad)
mov
test
dec
mov
div
jecxz
ds
stos
sar
inc
cmp
pop
xchg
push
inc
daa
add
mov
call
out
call
sahf
movs
and
ins
out
jb
xchg
repnz
int3
loopne
or
enter
mov
fwait
call
mov
ins
sub
mov
sbb
icebp
sub
or
fcmove
inc
imul
mov
cs
push
dec
jmp
scas
movs
push
stos
or
loopne
pop
das
jne
push
call
ja
std
pop
cmc
out
adc
cmp
xor
es
das
lea
jl
cmp
fst
cmp
int3
cmp
loopne
adc
les
inc
adc
xchg
sub
imul
hlt
mov
repz
add
arpl
cmps
push
ja
les
push
neg
in
jne
mov
adc
mov
les
xchg
into
cdq
xchg
adc
xor
inc
xchg
sbb
sbb
xchg
or
jmp
ss
cmp
add
xor
fisub
cmc
mov
mov
pop
xor
call
je
cmp
les
(bad)
sub
mov
xchg
cs
sbb
repnz
das
test
inc
in
sub
adc
movs
sbb
mov
add
in
cmps
call
dec
sahf
mov
leave
stos
jmp
pop
scas
adc
dec
cmp
lahf
movs
xor
push
in
pushf
test
mov
test
cmp
test
cmp
push
sahf
out
out
loope
repz
or
xor
mov
and
aad
fistp
sub
push
das
cwde
out
in
jns
push
mov
dec
(bad)
pop
jae
and
pop
nop
stos
popf
mov
(bad)
xor
lea
cmovae
cwde
dec
fcomp
inc
adc
out
mov
dec
push
cli
mov
lock
test
cwde
test
mov
in
sub
add
push
pop
fs
stc
les
pop
stos
inc
out
xlat
mov
repnz
mul
xor
sbb
(bad)
or
cmp
fmul
xor
sahf
jp
sbb
enter
mov
jb
mov
pop
or
xchg
pop
sub
mov
fisttp
inc
pop
mov
dec
jo
jns
nop
and
cmp
stos
cmp
por
rcl
scas
arpl
mov
cmp
je
scas
out
pusha
add
or
shr
mov
enter
xor
jns
ror
dec
mov
mov
jmp
out
mov
mov
sub
xor
in
inc
xchg
cmp
mov
iret
sti
xchg
mov
jp
shr
frstor
pop
(bad)
fisttp
imul
inc
and
mov
(bad)
pop
(bad)
(bad)
pop
or
sub
loop
cmp
aad
in
(bad)
pop
ror
out
add
cmp
add
pushf
and
sti
xor
scas
mov
mov
sub
mov
cmp
adc
stos
dec
dec
adc
mov
sub
arpl
sub
adc
mov
pop
lock
aas
and
fldcw
or
cli
imul
retf
or
mov
shl
es
icebp
or
jp
cld
jge
and
js
jl
test
leave
mov
xor
or
lahf
sub
jge
mov
xor
or
in
lods
push
lods
pop
outs
mov
clc
ds
test
adc
fwait
dec
cwde
retf
mov
loopne
mov
arpl
retf
outs
dec
mov
mov
out
outs
pushf
test
dec
inc
and
push
inc
pop
inc
inc
std
ja
cmp
dec
sub
cmp
xor
test
out
adc
adc
sti
nop
xchg
pop
dec
aas
mov
fisttp
std
fsub
popa
jns
lods
aaa
adc
mov
mov
add
sbb
repz
imul
adc
lock
inc
in
mov
cmps
xchg
test
lahf
push
dec
mov
push
adc
sbb
in
inc
jb
sub
popf
das
cmp
fsubr
and
cmp
fisub
fst
mov
les
imul
cmp
daa
mov
iret
jmp
inc
push
les
cli
mov
or
repnz
inc
dec
int3
or
imul
mov
or
idiv
xchg
cmc
pop
rcl
inc
ins
outs
lds
mov
dec
fdivr
or
pop
pop
mov
push
mov
mov
mov
outs
in
pusha
mov
shl
and
das
jbe
or
xchg
inc
mov
ja
or
daa
pop
pusha
pop
pushf
mov
cmps
retf
sahf
aam
sbb
jno
js
push
imul
js
out
inc
ins
imul
repz
pop
inc
jmp
xchg
jle
sub
movs
mul
cmp
repnz
pusha
jbe
jl
ja
lock
movs
add
dec
aam
push
dec
cdq
mov
add
push
and
int
shl
mov
cmp
adc
jno
sti
jmp
and
cmp
inc
pusha
pushf
jg
pop
jmp
fs
push
mov
pop
cbw
das
jmp
in
aad
lods
les
mov
sbb
out
lods
rcl
push
sbb
mov
fwait
pop
fld
add
ret
movs
int
pop
(bad)
ror
scas
inc
push
xor
sub
test
inc
sbb
leave
test
lds
inc
stos
xor
mov
push
(bad)
mov
pop
mov
loopne
mov
iret
sub
xchg
sub
ret
pop
pop
sar
scas
adc
cmc
test
loopne
xor
shr
add
lods
and
sbb
dec
inc
xchg
push
aam
pop
sbb
add
ror
add
cmc
xchg
pop
jge
push
dec
sbb
fbld
xchg
int
sbb
adc
icebp
ret
shl
push
les
add
out
mov
inc
(bad)
adc
mov
pop
mov
jb
lea
or
and
stos
sahf
inc
rol
out
cmp
int3
pop
cmps
and
maskmovq
div
out
adc
mov
and
sub
fs
stos
sti
xchg
dec
stos
fcom
(bad)
sar
cmp
push
dec
dec
and
mov
mov
mov
fcom
and
imul
xchg
cdq
sbb
pop
pop
cmc
cmps
sbb
bound
push
iret
xor
ins
pop
jae
idiv
mov
xchg
dec
add
jl
push
mov
or
or
lds
mov
daa
icebp
push
ret
mov
scas
inc
leave
imul
aam
jecxz
mov
mov
rcr
es
pop
sub
(bad)
cmc
inc
fidiv
out
jb
mov
cmp
or
sbb
jmp
iret
mov
shl
inc
test
das
sbb
inc
xor
sub
loope
clc
mov
(bad)
fidivr
cmp
mov
ror
pop
stos
jecxz
and
xlat
mov
fdiv
cmp
retf
sbb
mov
(bad)
fst
jle
push
jp
fist
cmp
stos
shl
ret
and
jne
push
lea
push
lods
cmp
mov
pop
imul
stos
popa
jmp
ins
popf
mov
sahf
sub
jp
aas
lock
mov
rcr
mov
dec
jmp
sti
pop
jmp
add
pop
jg
data16
mov
repnz
and
inc
cmp
mov
adc
imul
push
jb
add
adc
es
jmp
mov
adc
daa
loopne
imul
cmp
cmp
push
out
(bad)
call
push
xor
fidivr
push
pop
xor
popa
pop
sub
mov
out
or
sbb
ins
sub
sbb
ret
cmp
cmps
jl
leave
sbb
pop
popa
stos
push
adc
push
jg
enter
loop
mov
cmp
cmp
loopne
push
push
iret
ds
cmps
xchg
call
stos
js
repz
int
movs
adc
loop
jg
popf
loopne
sbb
pop
add
and
popf
fld
jmp
dec
mov
push
inc
push
or
shl
aas
pop
(bad)
idiv
push
mov
adc
and
ins
mov
leave
mov
aam
dec
xchg
aam
adc
les
and
addr16
call
pop
push
sub
xchg
in
pop
hlt
inc
in
xor
(bad)
ds
dec
cs
fmul
out
loopne
mov
mov
lea
and
cwde
ror
sub
mov
sbb
pop
addr16
(bad)
dec
jmp
(bad)
iret
xchg
lods
cmp
sti
icebp
push
lock
nop
mov
jbe
mov
test
sub
icebp
jbe
push
dec
aaa
jo
or
jle
and
sbb
(bad)
pop
push
movs
std
mov
inc
shl
jnp
sbb
mov
jb
sub
js
xchg
mov
mov
push
push
imul
sub
push
addr16
mov
and
pop
push
pop
loop
push
test
hlt
cmp
bnd
ds
scas
enter
int
sti
loop
push
imul
xchg
sbb
push
xchg
mov
test
je
adc
outs
out
pop
cmps
xchg
jg
es
push
sub
dec
jecxz
and
fcomp
mov
ret
jmp
shr
fdivr
push
push
xor
outs
dec
or
call
sub
jnp
fwait
in
les
inc
fstp
adc
sub
ror
adc
movs
mov
loope
pop
(bad)
dec
push
mov
je
xor
bound
pop
sub
(bad)
fwait
test
fdivr
retf
cwde
sbb
mov
cmp
cmp
cmc
mov
sub
or
sub
add
in
fmul
pop
dec
adc
mov
ret
xchg
aaa
jbe
sub
loope
jmp
cdq
xchg
cwde
push
scas
inc
sar
and
sbb
movs
iret
fsubr
shl
cmp
jne
pop
data16
mov
mov
pop
and
xor
xchg
fcom
fistp
mov
popa
lods
and
jle
push
out
push
out
xor
push
mov
push
cmp
cmp
adc
fldcw
mov
push
jb
(bad)
fild
xor
fwait
adc
pushf
add
jmp
(bad)
scas
dec
cmp
mov
outs
arpl
imul
pop
enter
out
jb
rol
cmc
popa
loop
adc
ror
pop
sbb
stos
fimul
xchg
xchg
sbb
pop
int
jo
adc
les
daa
sub
shl
push
xor
lds
cli
pop
dec
cli
out
test
aad
test
rol
ins
in
lock
jno
(bad)
push
xchg
mov
sub
stos
jecxz
loop
adc
out
dec
mov
push
das
pop
popf
mov
xchg
inc
mov
pushf
std
mov
daa
or
fstp
jge
hlt
add
and
push
loopne
mov
cmp
mov
xchg
shl
push
adc
test
(bad)
mov
(bad)
jae
mov
addr16
neg
cwde
add
mov
mov
add
xor
je
sub
jno
sub
or
bound
mul
mov
loop
rcl
mov
mov
dec
ret
pop
adc
mov
add
movs
xor
out
or
les
or
mov
out
lods
ja
sub
(bad)
and
jbe
sbb
sub
mov
pop
mov
jo
fwait
ds
aam
dec
stc
movs
adc
out
inc
jmp
repz
jg
repz
and
and
push
xor
cmp
jno
pop
or
add
imul
or
bound
fnstcw
mov
gs
or
loop
cmp
movs
mov
jne
add
or
dec
mov
out
and
add
sub
stos
inc
(bad)
retf
fdiv
xor
xchg
outs
sub
adc
mov
jle
cmc
sbb
xor
push
call
sbb
xor
xor
ins
(bad)
outs
cmps
mov
lds
sbb
push
push
sahf
fld
mov
in
bnd
pop
test
push
inc
sbb
inc
add
daa
adc
pop
sub
pop
data16
std
add
mov
add
loopne
pop
(bad)
imul
push
inc
out
and
jnp
test
aaa
sahf
lds
stos
sub
push
cmc
sbb
mov
sahf
popf
fiadd
(bad)
fcmovne
ficom
or
mov
pushw
jo
mov
mov
cmp
lea
mov
cs
cmp
mov
aaa
sub
in
mov
in
mov
movlps
sbb
fsubr
stos
push
sub
push
mov
xlat
pusha
(bad)
(bad)
fldenv
popf
rcr
xor
fnsave
jne
mov
and
fadd
(bad)
imul
sub
add
ins
xor
aad
xor
xor
repnz
int
ret
mov
dec
(bad)
stos
shl
add
jl
sbb
ds
faddp
jbe
leave
inc
mov
leave
cmp
fild
clc
jb
cmp
mov
mov
mov
cmp
sub
sbb
test
lods
idiv
ja
mov
inc
(bad)
mov
or
cmp
fsubp
pop
adc
and
rcr
push
cmp
cmp
sbb
mov
cmp
xchg
in
cwde
adc
mov
in
or
inc
jmp
adc
ja
and
adc
loopne
rcl
scas
mov
int
inc
push
imul
dec
jae
bound
push
mov
cmp
mov
or
imul
clc
mov
lods
ins
and
dec
popa
adc
pop
mov
adc
sub
xor
dec
fist
mov
call
mov
mov
mov
stos
rcl
in
(bad)
hlt
sti
add
cmp
xchg
or
shl
call
ret
mov
cmp
jle
inc
pop
mov
jae
lock
pushf
cmp
(bad)
cmp
add
jp
sahf
jmp
mov
push
in
or
fs
int3
cmp
out
es
loope
mov
mov
jmp
inc
xchg
sbb
rcl
jno
addr16
cdq
dec
or
pop
inc
sub
cli
xor
pop
dec
sub
dec
inc
xchg
xlat
icebp
loopne
paddusw
enter
cmps
repz
cmps
pushf
xor
test
shr
jns
and
or
jbe
push
ds
push
and
(bad)
cli
jne
pop
idiv
jns
xor
ret
aam
cmp
(bad)
mov
push
mov
cwde
js
std
out
hlt
dec
and
xor
scas
xchg
cwde
and
std
aas
jbe
sbb
push
es
sub
fwait
mov
sbb
dec
or
jmp
inc
mov
cdq
mov
push
mov
push
dec
fs
push
adc
shl
fisubr
int
gs
rcr
ins
pop
cmc
xchg
jl
pop
push
(bad)
mov
jl
xchg
(bad)
mov
cmp
fwait
and
jno
fstp
xchg
lods
xor
aam
neg
mov
(bad)
repz
test
cdq
lahf
pop
clc
mov
and
jno
add
inc
inc
mov
mov
mov
mov
pop
sub
mov
pusha
and
mov
idiv
mov
mov
push
in
sub
inc
mov
fwait
test
outs
clc
jle
pop
mov
ret
mov
xor
sahf
imul
enter
mov
scas
daa
pusha
jmp
mov
inc
stos
lods
ja
sub
or
icebp
icebp
push
add
mov
imul
jb
or
and
imul
popf
pop
jns
aam
imul
mov
lods
fucompp
dec
pop
add
test
leave
sub
add
sbb
ins
jns
lahf
lods
add
mov
stos
retf
mov
push
in
xor
call
cmp
push
jno
lods
dec
jno
push
sub
push
ins
call
test
dec
push
pop
dec
cmc
ins
cwde
add
inc
out
inc
sbb
dec
nop
in
cdq
and
push
not
psadbw
inc
or
scas
push
(bad)
and
into
ja
jbe
rol
les
xchg
jae
shr
jno
add
int3
mov
bound
pop
fwait
scas
dec
addr16
xor
add
test
repnz
sar
mov
lock
inc
in
xor
movs
imul
sbb
outs
(bad)
pushf
imul
xchg
xchg
cmp
test
ret
movs
out
jle
(bad)
dec
cdq
push
sbb
nop
mov
push
or
arpl
xor
(bad)
loope
dec
in
out
mov
loopne
loope
mov
mov
ss
xor
stc
(bad)
call
pop
mov
jp
sbb
stos
je
shr
cmps
movs
push
pop
aad
fcomp
inc
lahf
mov
dec
sub
hlt
ins
mov
movs
pop
mov
mov
icebp
mov
mov
into
outs
jp
loopne
hlt
call
in
mov
cld
inc
gs
jb
fisubr
outs
jbe
pop
dec
adc
scas
ret
jl
clc
pop
add
mov
jno
fnsave
jns
data16
pushf
enter
shl
mov
xchg
iret
add
js
mov
adc
cmc
dec
ins
add
or
mov
cmp
inc
adc
mov
mov
dec
not
lods
out
jg
scas
dec
dec
shr
jbe
pop
enter
jbe
inc
(bad)
out
dec
int3
stos
or
xchg
and
push
retf
jle
mov
adc
inc
xchg
fild
ss
sbb
jge
ds
daa
cdq
pusha
sti
or
jecxz
mov
int3
shl
lahf
dec
mov
mov
imul
inc
push
jne
mov
sbb
sha256msg1
clc
shl
lods
mov
stos
iret
cmps
inc
cmp
dec
dec
ins
scas
shr
cmps
xchg
dec
mov
pushf
jns
(bad)
mov
jno
test
sbb
loope
push
pop
xchg
cmp
scas
lods
scas
test
dec
test
adc
add
jl
lods
call
jnp
ret
pop
iret
dec
jnp
pop
mov
adc
in
call
aad
jo
jae
cmp
xlat
xchg
xor
sub
push
cmp
xchg
jecxz
(bad)
into
leave
pusha
rcl
xor
sub
xchg
pop
cdq
xor
mov
xchg
xor
xchg
pop
imul
add
lods
inc
push
pop
ss
rcr
adc
xor
xor
jo
ret
mov
dec
cmp
(bad)
jg
test
rcl
or
scas
xor
fmulp
xor
in
fadd
sahf
push
or
jb
mov
(bad)
(bad)
jl
idiv
cld
and
inc
sub
jo
pavgw
xor
xor
rcl
cmp
push
or
mov
in
mov
xorps
sub
add
fisttp
add
movs
pop
and
mov
sbb
in
cmc
pop
mov
push
ret
inc
das
inc
xchg
mov
sti
je
adc
repnz
call
ror
cld
cs
push
enter
movs
xchg
sub
and
pop
xor
adc
(bad)
mov
inc
ret
sahf
push
cmp
aas
cmc
pop
cmp
imul
push
or
xchg
std
(bad)
jle
push
(bad)
cld
mov
aad
xor
idiv
ins
xor
and
test
mov
mov
xchg
cdq
mov
mov
or
jp
jmp
aas
lds
or
jae
ror
es
sbb
loope
dec
mov
cmp
mov
pop
xor
ret
int
cld
push
popa
das
xor
xchg
cwde
push
ds
jle
sbb
lahf
jnp
xlat
movs
add
adc
adc
lock
jmp
repnz
test
push
jmp
movs
jns
mov
xor
push
add
push
call
loop
leave
mov
mov
cmp
jb
aad
js
dec
scas
sbb
and
bound
std
sbb
shl
test
hlt
or
cwde
dec
xchg
or
scas
jae
sbb
or
aad
ins
mov
sbb
aas
xchg
xchg
lods
scas
mov
sahf
imul
xlat
retf
aad
sbb
fwait
jnp
or
in
push
adc
dec
jno
add
inc
gs
cli
in
adc
imul
mov
aam
sahf
icebp
aam
sub
es
out
ja
push
mov
in
jecxz
aad
les
mov
in
test
mov
push
push
iret
scas
jne
add
jmp
ins
hlt
stc
out
shl
jecxz
inc
ret
test
adc
mov
dec
jae
sub
iret
test
jo
sub
repnz
mov
inc
push
pop
or
push
push
xor
enter
aas
je
(bad)
jg
lds
enter
js
cmp
jg
dec
mul
fs
cmp
cmp
(bad)
or
xchg
push
scas
test
ins
dec
mov
pop
(bad)
jne
adc
fcomp
clc
pop
xor
mov
pop
ret
ja
shl
inc
nop
aam
iret
push
inc
adc
push
out
loopne
add
inc
cmp
dec
push
sbb
jno
dec
rcr
cmp
loopne
jb
das
lods
jle
loope
mov
mov
mov
sahf
das
imul
ins
out
lahf
pop
mov
mov
jo
inc
les
jl
call
mov
cmp
adc
sub
into
stos
push
xchg
loopne
add
bound
adc
mov
icebp
jne
cld
leave
lahf
cdq
pusha
mov
js
xor
retf
or
lds
and
rcl
add
fstp
rcr
xchg
mov
sbb
adc
test
in
mov
in
clc
cmp
rcl
(bad)
cmc
adc
xchg
sti
pusha
lods
pop
jmp
(bad)
mov
cdq
xchg
pop
and
xchg
fs
pusha
push
sub
imul
lods
mov
idiv
mov
(bad)
mov
xchg
pop
jge
fwait
loop
push
xor
inc
test
xor
or
call
jnp
rcl
dec
mov
inc
stos
lahf
sbb
jne
sub
stc
shl
mov
cmc
and
imul
aaa
scas
cmp
leave
sbb
lods
fstp
adc
repz
int3
jle
add
cmp
jl
sbb
jno
mov
icebp
jae
ret
push
sar
mov
xchg
mov
(bad)
(bad)
sub
fs
push
push
mov
and
mov
mov
ror
xchg
xchg
mul
push
push
fs
jmp
jle
das
cmc
gs
into
dec
adc
or
(bad)
dec
mov
mov
loope
dec
xchg
mov
arpl
rcr
inc
repz
(bad)
scas
or
inc
mov
cs
inc
test
sub
sub
adc
jecxz
mov
(bad)
mov
jae
mov
adc
add
adc
pop
jl
mov
and
lock
jecxz
jb
or
aad
push
xchg
sub
xchg
and
mov
stc
dec
arpl
mov
push
jbe
inc
lods
inc
cmp
pusha
push
sub
(bad)
pop
in
stos
jge
push
mov
push
xchg
mov
xchg
adc
push
or
xchg
inc
pop
dec
inc
out
sbb
pop
es
jmp
lods
retf
imul
retw
(bad)
out
addr16
adc
mov
(bad)
data16
jae
xor
fcom
(bad)
test
xchg
ret
or
cmp
lahf
xchg
test
jl
push
inc
push
mov
fidiv
pop
(bad)
rcl
push
jo
dec
mov
(bad)
pop
jns
mov
dec
add
jne
ret
dec
mov
xchg
outs
xor
ret
cs
xor
iret
stos
pop
in
popa
fs
inc
fwait
cmps
int
lahf
(bad)
int3
shld
pushf
dec
mov
sar
leave
xor
test
xchg
lds
(bad)
push
std
movs
ins
mov
inc
jg
add
(bad)
sbb
cmp
(bad)
sbb
shl
mov
adc
inc
mov
jns
add
mov
adc
lods
pop
outs
fidiv
xor
out
dec
in
sahf
out
dec
push
movs
mov
cwde
adc
add
mov
pop
(bad)
mov
xchg
scas
aas
ds
ret
sub
jne
dec
dec
js
shl
and
movd
ins
loope
retf
cmp
call
lock
mov
repz
retf
or
test
xor
neg
pop
push
pop
or
lds
mov
xchg
scas
int3
push
pop
(bad)
adc
and
test
mov
cld
and
jbe
push
xor
clc
fwait
enter
or
xchg
adc
je
fs
add
dec
cmp
jb
and
in
or
adc
lahf
call
inc
jne
pop
movs
mov
stos
movs
clc
mov
ja
popf
inc
sub
xchg
lahf
mov
sbb
test
outs
idiv
(bad)
sub
inc
(bad)
pop
into
loope
pop
std
push
mov
inc
xor
pop
ret
push
cmp
jle
lea
mov
ret
mov
jno
jmp
cmps
mov
(bad)
pop
mov
hlt
xlat
mov
clc
push
pop
dec
dec
movs
mov
mov
inc
out
xor
imul
mov
xor
leave
mov
je
sub
push
sbb
daa
push
je
mov
imul
ins
mov
mov
dec
sbb
push
div
cmp
lahf
cmp
pop
add
pop
das
fnstenv
mov
mov
inc
push
cwde
push
inc
out
sbb
das
mov
inc
jo
bound
call
fmul
loop
or
xchg
jb
cmp
lahf
ds
mov
xchg
inc
mov
jno
push
and
cmp
fadd
loop
xchg
mov
jns
fidivr
add
sub
adc
(bad)
leave
popf
jp
lock
mov
sbb
sub
jge
mov
es
push
cmps
rcr
inc
(bad)
fist
mov
shr
out
mov
inc
jns
adc
fnstenv
pop
aad
mov
arpl
ins
fld
cld
fabs
imul
xchg
and
add
cwde
jb
lods
pop
sahf
or
jo
(bad)
nop
cmp
mov
add
adc
xor
lods
imul
dec
scas
imul
pop
sub
(bad)
jge
ins
sub
das
in
lods
movs
pop
adc
js
mov
dec
mov
xchg
outs
dec
mov
push
add
and
out
cmp
shl
hlt
xchg
sub
cmp
stos
sbb
xor
cmp
mov
test
int
in
fsubr
stos
mov
popf
sbb
push
dec
inc
or
sti
(bad)
out
push
cmp
(bad)
pop
jmp
jmp
imul
cmp
movs
sbb
outs
cmp
ja
or
push
cmps
add
mov
mov
(bad)
pop
out
(bad)
std
pusha
outs
adc
mov
mov
jne
and
mov
add
lahf
push
ja
int3
out
jb
test
popf
ins
fiadd
cld
cmp
mov
add
inc
addr16
out
cs
pushf
sahf
fist
test
jg
fs
popf
stos
and
aam
(bad)
pop
shr
mov
aad
imul
push
sahf
mov
js
ret
push
(bad)
js
jp
jmp
mov
xchg
aad
adc
pop
add
mov
jo
retf
loope
sbb
sub
mov
psubq
retf
sti
rol
mov
mov
std
adc
sbb
inc
dec
or
bound
xor
cli
clc
cdq
(bad)
arpl
sub
loop
sbb
int
xor
fdiv
lods
xchg
data16
cmp
loop
ss
mov
in
jecxz
xchg
inc
lods
pop
sub
pop
mov
xchg
mov
adc
push
call
mov
xor
test
cmps
daa
adc
mov
mov
add
and
push
ds
inc
cs
xchg
iret
inc
xchg
cmc
enter
int
adc
stos
jmp
cmp
in
cs
dec
retf
icebp
fdiv
add
mov
pop
jns
lods
add
stc
sub
test
sbb
mov
xchg
loopne
int
test
jnp
data16
jle
push
sbb
pop
push
repz
stos
clc
nop
ss
iret
das
or
xchg
or
mul
xchg
(bad)
div
sbb
scas
cld
out
movs
lahf
aad
fistp
(bad)
pop
ins
in
ds
xchg
dec
inc
cmp
mov
fwait
dec
fmul
mov
xchg
es
or
std
dec
cmp
cdq
adc
push
(bad)
jnp
pop
fild
pop
and
sub
xchg
inc
cmp
and
xchg
jge
push
test
iret
mov
mov
xchg
xor
retf
test
in
xor
jmp
loope
lahf
adc
adc
neg
jmp
xchg
ds
sbb
jmp
cli
jns
xchg
or
xlat
ret
loop
mov
xchg
inc
adc
jmp
mov
stos
fbld
sub
cli
paddd
lahf
dec
sahf
cmp
movs
(bad)
sbb
icebp
out
add
out
mov
pop
fmulp
jmp
in
cmp
adc
dec
pop
scas
sbb
lock
cld
cmp
pop
lock
sub
cmc
sub
scas
scas
clc
add
loopne
cld
xchg
idiv
icebp
and
popf
xchg
cmp
repnz
adc
pop
cmc
xchg
inc
mov
or
imul
sbb
cwde
jo
mov
div
inc
or
push
xor
fst
outs
call
gs
sbb
mov
nop
pop
and
fucom
lea
ret
push
cmps
xchg
ins
int
cmc
jb
sub
movs
clc
dec
xchg
fidiv
pop
mov
fsubrp
ret
lock
mov
xchg
popf
jno
shl
push
and
imul
fldcw
(bad)
cmc
(bad)
daa
fst
pop
mov
push
pop
mov
jns
jno
into
je
test
outs
inc
inc
mov
into
inc
cmp
jne
fild
rcr
push
arpl
push
mov
sub
idiv
push
cs
adc
xchg
ss
js
nop
sahf
xchg
mov
popa
adc
mov
cmp
stos
shl
shr
adc
pushfw
clc
cmp
mov
fnop
push
ins
in
adc
xchg
mov
adc
adc
xor
jmp
or
pop
cmc
popa
xchg
test
addr16
into
(bad)
sbb
cmc
sub
das
rcl
adc
lahf
xchg
dec
dec
and
mov
xchg
mov
add
lahf
fs
add
or
mov
test
mov
ins
faddp
aad
xchg
mov
inc
and
mov
adc
int3
mov
in
push
data16
mov
test
xor
add
fs
dec
sar
xchg
sub
push
xor
xor
jg
push
js
test
std
xchg
jae
(bad)
loop
push
xor
mov
cmp
addr16
mov
pusha
out
popa
test
fidiv
and
inc
mov
idiv
mov
fs
neg
cmp
cmp
cli
push
cmps
push
cmc
mul
and
repnz
out
es
sti
jge
adc
add
ficomp
jbe
hlt
jae
pop
sub
mov
mov
aad
dec
sbb
add
mov
mov
fcmovnu
mov
ja
adc
cpuid
cmp
mov
or
into
icebp
test
cs
mov
out
xlat
fidiv
nop
adc
push
inc
and
out
mov
mov
mov
cwde
call
xchg
mov
mov
aam
mov
cmp
sub
jmp
hlt
mov
loop
dec
jp
vminps
xor
enter
lods
push
push
out
ret
out
sub
jnp
sbb
out
and
jnp
dec
pop
jne
loopne
mov
mov
sbb
sub
push
icebp
sahf
sub
cmp
xchg
adc
sbb
(bad)
xchg
aam
pop
adc
sbb
push
int
fmul
stos
lods
jbe
aam
cld
dec
idiv
das
mov
cmp
aas
rdrand
in
sar
or
add
pusha
mov
pop
nop
ror
sub
into
pop
dec
movq
dec
jb
inc
in
popf
mov
jae
ins
inc
cmp
movs
add
inc
scas
sbb
popa
fcmovbe
(bad)
loope
js
mov
xor
and
rcl
sub
xchg
outs
and
cmp
jae
lods
pop
ins
cmp
mov
mov
push
add
push
or
jnp
jle
popa
cmp
push
push
shl
xchg
mov
cwde
movs
(bad)
scas
scas
(bad)
fsub
push
jnp
sub
push
out
jmp
or
mov
cld
sbb
jbe
sbb
shl
adc
sub
je
inc
rol
call
fsubr
or
xchg
cld
jmp
and
add
outs
dec
mov
mov
jo
mov
jle
push
ins
repz
aas
daa
and
sub
shr
hlt
pop
inc
add
in
sbb
call
pop
pop
leave
sbb
retf
push
bound
cmps
inc
adc
cmp
in
loopne
mov
adc
test
retf
out
aam
mov
mov
sub
jae
pop
jne
mov
std
fmul
cmps
test
push
mov
jo
mov
xor
dec
outs
aas
or
fmul
js
add
(bad)
mov
dec
or
jae
dec
sub
add
call
and
mov
stos
repz
int
int
xor
(bad)
dec
ss
xchg
xlat
add
das
mov
mov
jmp
cmps
cwde
or
scas
xor
daa
or
(bad)
scas
add
sub
shl
gs
adc
xchg
iret
or
xchg
xor
push
cli
ret
xchg
fsubrp
xlat
mov
and
(bad)
fcom
jnp
mov
es
cdq
xor
and
ret
in
lods
daa
and
dec
mov
repnz
dec
scas
pop
inc
cs
xor
jb
sbb
pop
int
in
mov
call
push
aad
push
test
dec
mov
pop
pop
dec
mov
xor
add
aam
sub
mov
lea
mov
or
sbb
cmp
sub
sbb
in
sar
add
cmp
out
fisttp
ret
jno
je
push
out
sbb
pop
cmp
dec
sbb
mov
cmp
mov
dec
rcr
retf
add
add
lea
leave
dec
arpl
cdq
and
push
adc
movs
sub
add
xchg
inc
fidivr
xchg
(bad)
or
les
aad
fisubr
mov
xchg
or
leave
xchg
fsub
push
or
sar
cmp
(bad)
ss
xor
and
int
jb
inc
popf
pop
test
pop
push
loopne
dec
mov
add
push
repz
pmulhw
cmp
and
stos
dec
mov
lods
sar
(bad)
lods
test
xchg
pop
jg
or
outs
mov
(bad)
cmp
pop
push
cmps
jns
inc
fimul
int3
iret
jmp
or
pop
(bad)
push
xor
pop
dec
push
and
out
test
into
xlat
xor
rol
rcr
sbb
cmp
shl
mov
adc
test
push
(bad)
ins
scas
ins
xor
stc
dec
pop
sbb
pop
stos
xor
cs
add
retf
pop
and
push
call
cli
sub
mov
out
and
xchg
retf
ror
jmp
cmp
push
lock
jmp
inc
scas
jb
add
add
lock
jmp
inc
ins
cwde
dec
jmp
cmc
add
pushf
cmp
ror
push
loope
sbb
inc
rol
aam
js
(bad)
loopne
inc
and
pop
jbe
pusha
pop
lods
scas
add
fadd
xor
ss
push
fistp
adc
ror
dec
imul
xchg
imul
and
cmp
(bad)
fadd
jl
(bad)
push
adc
adc
iret
jnp
mov
xlat
sbb
into
jb
xor
loop
lods
test
pusha
int3
and
or
stos
mov
ins
dec
xchg
call
pusha
mov
fwait
imul
rcl
dec
lea
mov
push
ficom
push
push
cdq
shl
mov
push
sar
dec
sbb
sar
je
dec
push
dec
push
(bad)
(bad)
mov
loop
xchg
aas
cmps
repz
iret
ins
push
imul
sbb
ins
sub
test
jecxz
cmps
push
and
mov
in
das
add
sbb
stos
sti
jg
imul
push
fcmovb
fdiv
push
icebp
pusha
xchg
fadd
push
imul
ss
retf
clc
std
cmp
cmps
jne
jns
sub
ror
scas
mov
or
mov
sub
popa
dec
jl
cmp
adc
or
jle
loopne
sub
rcl
xchg
push
add
xor
push
lahf
push
ins
ja
sbb
cli
push
lods
pusha
jae
jg
mov
mov
add
(bad)
xor
sub
xor
test
cmp
cmp
xchg
(bad)
dec
pop
leave
ret
xor
jo
test
cmp
jle
je
sti
fdivr
xchg
gs
retf
ds
add
rcr
xor
imul
inc
out
xchg
xchg
xchg
cwde
outs
dec
scas
(bad)
inc
jo
sbb
or
mov
shr
pusha
fidiv
cld
inc
mov
jae
das
cmp
pop
lea
icebp
cmp
les
popf
pop
xchg
int
sbb
(bad)
imul
iret
loop
icebp
mov
bound
and
clc
or
in
jb
out
and
fistp
popf
push
(bad)
and
icebp
or
stos
pop
pushf
ss
btc
lods
loope
arpl
fsub
and
fucom
call
movs
adc
addr16
xchg
jg
cli
div
std
mov
sub
jns
icebp
lock
mov
and
pop
call
test
xor
add
mov
test
outs
mov
loopne
into
sahf
adc
stc
lock
push
push
ins
(bad)
rol
add
sti
sub
ret
sar
push
dec
frstpm(287
mov
in
mov
mov
(bad)
ror
inc
sub
adc
das
push
frstor
or
mov
mov
or
xchg
mov
fstp
mov
stc
je
outs
xor
js
or
adc
dec
jmp
and
data16
or
push
add
pop
cmp
test
movs
and
mov
xor
sahf
mov
and
sub
mov
jo
cmp
fisttp
mov
dec
fsub
adc
pop
ret
rcr
lods
xlat
leave
xchg
rcr
add
sub
movs
xor
mov
add
mov
arpl
sub
jno
xchg
jo
sub
adc
inc
fst
ficomp
inc
sahf
push
leave
push
loopne
add
cdq
and
inc
jne
shr
cli
fcom
add
xchg
push
adc
in
xor
or
(bad)
mov
push
and
jmp
push
mov
rcr
dec
xor
mov
mov
repz
shr
and
fisub
ins
inc
xchg
out
pop
fistp
into
out
push
jge
(bad)
lods
push
jecxz
in
xchg
loopne
pop
add
je
loopne
out
sbb
xchg
test
arpl
adc
inc
int
mov
mov
and
jmp
loopne
sbb
sbb
jae
sar
push
in
push
out
jae
xchg
inc
data16
nop
sar
jge
push
inc
fld
add
mov
add
jge
rcr
mov
scas
xchg
mov
sub
push
test
scas
mov
jp
in
push
pop
sub
mov
and
and
xchg
ret
clc
mov
jmp
sbb
jmp
ror
inc
and
sti
test
movs
adc
retf
pop
jl
pop
adc
mov
xchg
mov
xchg
fdiv
or
xchg
cmp
xor
(bad)
nop
pop
leave
or
or
xor
xor
hlt
test
adc
jl
or
push
cmp
dec
adc
xlat
ror
ja
pushf
dec
stos
in
mov
jle
mov
out
adc
in
dec
jg
sbb
xor
jmp
mov
ret
out
inc
or
in
aam
cmps
mov
xor
jbe
loope
pop
(bad)
repz
shl
jae
loopne
repz
(bad)
enter
mov
mov
fs
ins
ja
cmp
mov
in
push
pushf
pop
mov
cmps
push
adc
dec
mov
popf
push
cmc
adc
test
ins
jo
dec
(bad)
mov
icebp
and
inc
xor
scas
(bad)
into
loopne
add
push
in
sbb
cmp
mov
sbb
sbb
push
push
(bad)
fxch
adc
ror
leave
lods
jmp
cli
and
or
mov
cmp
sbb
ins
call
push
fstp
(bad)
or
shl
dec
mov
cmp
mov
cmp
addr16
sahf
add
push
int
sbb
loop
add
aaa
pop
repz
sbb
adc
daa
push
aad
cmp
ja
daa
inc
out
mov
ret
adc
movs
stos
xchg
shl
(bad)
sbb
push
mov
clc
data16
(bad)
push
(bad)
add
sahf
es
nop
fistp
dec
xchg
dec
pusha
jl
jbe
mov
xchg
out
pop
xor
jmp
push
dec
mov
in
fbld
js
movaps
leave
std
jp
ficom
pushf
rol
pop
cmovns
(bad)
ins
jle
sub
lock
gs
aas
test
dec
or
xor
fdivr
cwde
cmps
xchg
cdq
ficom
mov
jmp
fistp
cli
ret
mov
iret
push
aaa
stos
in
inc
cmc
add
mov
retf
pushf
ins
lods
cmp
repz
sub
mov
idiv
and
mov
sub
cmps
xor
icebp
adc
push
ja
jnp
mov
mov
mov
and
mov
add
push
jmp
jb
jle
inc
and
lea
fwait
rol
xor
shl
bound
stc
(bad)
ins
les
mov
jecxz
mov
sahf
inc
mov
push
pop
imul
mov
pinsrw
jnp
inc
pop
xchg
mov
cwde
push
xlat
nop
js
pop
xor
retf
dec
jb
sbb
popf
mov
xor
popf
loope
jo
int
and
lock
rcr
test
xor
and
stc
fsubr
xor
mov
sub
test
in
fwait
loope
movs
adc
jecxz
push
dec
mov
mov
cmp
push
xchg
into
jb
stc
leave
ja
stos
pop
cli
lea
bound
adc
jnp
pop
cmp
mov
pop
cs
mov
idiv
pop
pop
js
dec
iret
cmps
jmp
push
outs
sar
cmp
scas
mov
xchg
sub
add
pop
pop
add
inc
fst
xor
and
pop
rcr
add
push
cld
test
hlt
push
rcl
xchg
movs
pop
mov
inc
mov
movs
push
and
sub
clc
and
dec
mov
and
add
dec
stos
lock
in
sub
jo
test
xchg
movs
xor
pop
jno
jle
and
shl
jle
cmc
out
adc
sar
mov
fldenv
or
stos
stos
adc
sbb
cmc
add
push
clc
sbb
cld
or
lahf
loop
test
inc
cs
or
dec
pusha
sti
push
mov
(bad)
sub
arpl
out
jo
mov
daa
pop
test
(bad)
xor
ins
les
das
sbb
add
jg
mov
fs
adc
lock
ror
jmp
or
cmp
mov
(bad)
pop
out
sbb
pop
jbe
call
adc
imul
mov
inc
add
ins
xlat
adc
or
add
push
add
push
cmps
mov
pop
int
sar
out
push
jp
jne
int
scas
fs
add
sub
mov
cli
mov
pop
mov
sbb
inc
adc
aad
xchg
add
jl
dec
add
jb
idiv
sbb
sar
push
stc
adc
mov
pop
(bad)
retf
cmp
scas
mov
or
jg
mov
and
js
mov
mov
pushf
stc
cmp
cmp
pop
outs
aaa
lods
inc
inc
std
daa
jno
cmp
push
jo
fidiv
or
xchg
sahf
xchg
xlat
mov
adc
scas
add
mov
rcr
retf
cmp
cmp
imul
pop
(bad)
or
(bad)
sub
hlt
scas
out
pusha
xchg
repz
nop
cmc
outs
repz
(bad)
adc
dec
jl
and
and
inc
mov
push
sub
ja
js
fidiv
aad
call
pop
and
jb
shr
xor
outs
cmp
imul
out
jno
jmp
jns
inc
mov
dec
sbb
xchg
enter
and
pop
add
imul
shr
jge
dec
cmp
and
or
xchg
popf
outs
and
or
cmps
test
mov
pop
pop
imul
jecxz
gs
xchg
data16
xor
int3
in
sub
cs
aaa
add
jl
(bad)
rcl
cmp
outs
sahf
xchg
xchg
pop
cmp
stos
add
mov
or
addr16
adc
jns
ret
mov
mov
arpl
jno
cmp
jmp
mov
mov
test
mov
cmp
enter
inc
pop
jle
mov
inc
repz
push
pop
popf
jge
push
mov
push
jnp
push
mov
dec
jb
bound
mov
sbb
and
mov
stos
les
and
dec
sbb
xchg
pop
(bad)
xchg
pop
mov
int
mov
loop
xchg
lods
xchg
mov
ret
stos
jbe
sub
push
sbb
cmc
cmp
(bad)
adc
add
jmp
out
or
repz
fisttp
inc
imul
arpl
xor
fs
dec
pop
mov
sub
shl
xor
and
repnz
push
ror
stos
mov
cmp
mov
pop
pushf
add
inc
mov
mov
repz
ins
sbb
int
add
inc
mov
inc
ret
scas
pusha
jecxz
in
or
fld
fwait
or
repnz
stos
xor
push
rcr
push
mov
ret
test
std
jg
jnp
pop
test
div
adc
cdq
cmp
repnz
xchg
add
push
stos
jae
or
push
call
cdq
clc
and
movs
cs
mov
test
dec
ins
jae
fadd
ret
and
sub
inc
imul
scas
ss
inc
xchg
ret
mov
jbe
mov
push
daa
scas
xchg
lahf
inc
ins
mov
or
or
add
out
(bad)
pop
xchg
loope
aam
mov
adc
jmp
add
leave
repz
adc
jnp
dec
call
and
fucom
mov
ss
push
loope
jmp
pop
jns
ds
fcom
pop
and
es
popf
lea
jmp
bound
push
mov
jl
cdq
movs
jmp
and
shl
aaa
add
ins
adc
das
or
jmp
push
jmp
arpl
pop
xor
fwait
imul
jmp
retf
mov
(bad)
fild
xchg
pop
add
cmp
call
repnz
aas
xor
imul
and
in
dec
jae
pop
nop
inc
adc
add
push
xor
lods
pushf
(bad)
cs
pop
movs
mov
inc
xchg
neg
push
call
je
sbb
aas
das
out
mov
push
(bad)
(bad)
sbb
outs
or
xor
cmp
dec
arpl
out
inc
jle
jns
push
dec
aaa
ss
or
pop
push
aas
inc
jns
push
mov
lds
scas
outs
xchg
and
push
or
push
test
or
inc
sub
mov
mov
fidivr
push
(bad)
xlat
xchg
sbb
popf
daa
mov
ds
sbb
xchg
rcr
inc
jg
inc
js
adc
in
add
push
hlt
adc
push
lea
loop
inc
mov
rol
cli
ins
hlt
cmp
fs
jno
cmp
dec
js
pop
fsubrp
(bad)
pop
in
jecxz
dec
xchg
sbb
call
pop
inc
and
add
stos
retf
enter
ret
call
div
push
add
pop
call
xchg
sbb
test
lods
dec
mov
cwde
mov
mov
loopne
lods
inc
std
(bad)
sub
xchg
push
out
test
pop
popa
adc
fwait
xchg
xor
mov
or
pop
sbb
jle
mov
popa
xchg
test
inc
mov
push
push
clc
pusha
jmp
sub
sbb
sub
iret
mov
push
imul
or
hlt
xor
pop
or
dec
shl
push
shr
repz
xor
in
jo
cmps
(bad)
sbb
repnz
dec
and
jo
(bad)
std
mov
outs
dec
mov
ret
pop
cmps
mov
add
dec
adc
sbb
xor
jmp
or
xor
xchg
ins
cmp
iret
das
into
adc
data16
lahf
xor
je
sti
mov
test
nop
outs
in
hlt
mov
sbb
loopne
mov
adc
mov
fisttp
test
pusha
(bad)
ror
push
xor
retf
cmp
and
int
jo
or
test
mov
ins
sbb
scas
or
stos
add
call
clc
jae
fdiv
ss
jno
jge
(bad)
adc
mov
mov
or
stos
adc
mov
sub
fadd
cmp
aaa
test
mov
push
mov
ins
jo
push
enter
jno
inc
jb
pusha
(bad)
mov
mov
mov
out
into
xlat
pop
test
sar
push
inc
das
mov
adc
sbb
push
fild
and
or
sub
jge
mov
jp
in
lods
ret
es
aaa
inc
sti
enter
popf
push
bound
cmp
ja
mov
in
test
fs
test
xor
(bad)
enter
mov
test
loop
test
jbe
fiadd
xchg
fdiv
sbb
dec
mov
(bad)
imul
mov
adc
nop
pop
jecxz
cmp
jbe
repz
rcr
sar
daa
int
sbb
xor
imul
jp
jmp
xor
fidivr
test
dec
daa
clc
inc
int
std
push
mov
cmp
pop
mov
fs
or
pop
inc
(bad)
repnz
fstp
mov
push
jge
mov
sub
out
ret
loop
jns
daa
lods
inc
xchg
or
pop
out
scas
or
bts
dec
scas
sbb
imul
sbb
xchg
xor
ds
test
call
shl
fldenv
test
hlt
pop
mov
dec
sbb
xor
inc
adc
jnp
not
or
fisubr
push
stc
xor
movs
nop
pop
mov
add
mov
add
lods
cmc
stos
sbb
iret
hlt
bound
xor
sahf
popf
cmps
test
hlt
cmp
jo
pop
cli
les
push
jns
jne
test
out
shl
pop
sub
xchg
dec
les
test
loop
dec
es
in
sar
outs
jmp
jne
sbb
(bad)
jne
repnz
cmps
call
mov
adc
dec
and
fcmovnb
push
loopne
stos
(bad)
js
imul
mov
ret
jp
mov
mov
dec
mul
call
fcmovu
dec
scas
outs
pop
lds
out
aaa
inc
jb
je
mul
aas
rcr
rol
cmp
jbe
jmp
in
adc
repnz
fst
daa
lods
inc
aam
xchg
inc
aaa
sbb
lods
into
add
xchg
fmul
add
call
or
stos
lds
xor
adc
or
shr
jp
adc
jecxz
mov
test
xchg
popf
(bad)
mov
dec
out
xor
add
sbb
stos
icebp
mov
ins
cmps
out
js
jle
xchg
jecxz
push
sbb
leave
cmps
mov
push
adc
outs
sub
lds
jns
popf
add
mov
or
aam
xchg
pop
mov
das
enter
leave
mov
or
fptan
shl
outs
sbb
xor
cmp
jge
repnz
inc
push
pushf
js
add
stc
sub
inc
xlat
push
test
aas
mov
jle
push
push
mov
movs
inc
adc
mov
push
imul
jmp
xlat
call
push
or
or
dec
hlt
or
mov
mov
xchg
scas
xor
and
mov
and
sub
jecxz
dec
adc
aaa
inc
ror
aam
pop
adc
sub
repnz
clc
fwait
push
push
movs
push
cli
push
xchg
and
sub
jbe
stos
mov
repnz
daa
pop
retf
mov
xchg
push
adc
inc
mov
lods
sbb
shr
xor
in
lahf
push
jo
or
clc
rol
fldcw
fist
adc
mov
int
xlat
in
adc
fnstsw
sub
in
ss
sub
xchg
push
sub
add
sbb
lods
dec
jb
inc
and
in
ins
add
mov
ss
cmp
cmp
(bad)
das
iret
mov
test
dec
js
retf
fsubr
sub
push
sub
mov
inc
dec
jecxz
mov
stc
xchg
xchg
(bad)
imul
dec
jbe
push
in
adc
mov
cmc
sbb
stos
or
adc
add
popf
mov
dec
push
rcl
cld
ja
jp
cdq
aaa
xchg
jbe
cmp
aad
out
les
aaa
repz
pop
ror
pop
and
mov
cld
aad
xor
popa
fwait
retf
sbb
iret
loope
mov
and
sub
int3
cmc
and
fsubr
add
fwait
call
cmp
jnp
mov
aaa
(bad)
(bad)
mov
ins
lock
mov
adc
aaa
mov
inc
addr16
inc
jns
dec
(bad)
call
aam
mov
push
add
sbb
push
gs
loopne
bound
inc
outs
lahf
lods
sub
daa
inc
xor
xlat
inc
mov
lds
or
arpl
xor
pushf
loope
push
cmp
xchg
mov
leave
call
test
rcl
lock
sub
add
xor
cmp
test
or
jo
js
mov
xchg
inc
das
arpl
add
lea
jmp
sar
popf
push
add
jp
scas
(bad)
mov
mov
mov
or
jb
ret
push
xchg
mov
sbb
(bad)
cli
fimul
nop
mov
std
cmc
imul
pop
sbb
mov
fdivr
scas
sub
ins
cmp
out
xchg
inc
daa
into
jnp
mov
pusha
ror
shl
and
rol
add
sbb
or
and
or
push
and
test
jae
cli
adc
retf
jmp
and
adc
jne
and
sbb
push
push
push
jl
jg
sbb
imul
jmp
mov
sbb
rcr
test
push
fwait
dec
mov
pop
push
mov
sbb
mov
dec
and
outs
push
xor
pusha
inc
xor
int
push
dec
mov
(bad)
dec
lahf
shl
lods
dec
lds
push
mov
sbb
stos
xor
imul
imul
jmp
fnsave
sbb
fisttp
lods
nop
and
push
loope
jae
mov
dec
stc
pusha
mov
mov
add
movsx
inc
mov
shl
ins
push
cmp
cmp
imul
dec
sub
js
mov
xor
ret
xchg
mov
(bad)
push
cs
push
mov
inc
mov
sub
(bad)
dec
mov
dec
xchg
cmp
xor
xor
add
push
imul
mov
mov
in
fbstp
sub
pop
inc
jge
mov
xchg
jg
(bad)
mov
rol
cmp
fcmovb
stc
shl
push
mov
movs
loop
les
dec
add
movs
cmp
pop
mov
add
sub
xchg
mov
pop
cmps
cdq
out
mov
adc
das
xor
popa
jecxz
sti
push
adc
imul
test
xchg
in
xchg
mov
add
or
outs
ds
fld
mov
adc
inc
fcom
sub
push
xchg
pop
mov
add
ret
(bad)
sbb
sub
movs
addr16
shl
movs
dec
cs
lahf
inc
jge
cdq
bound
ja
adc
arpl
or
and
sahf
fldenv
sbb
je
xchg
sahf
int3
xchg
fwait
add
sub
sbb
jo
dec
or
movs
mov
sti
xchg
mov
sub
push
push
out
jne
xchg
dec
inc
scas
je
mov
sbb
fcomp
arpl
jp
xchg
inc
lahf
cld
sbb
adc
mov
add
cmps
clc
cvttps2pi
fcom
inc
ror
sub
mov
popf
xchg
call
xchg
cdq
pop
jmp
pop
outs
fs
and
or
jo
imul
hlt
sub
xchg
sbb
imul
mov
jp
es
cli
jb
sub
push
push
sub
add
push
pop
fs
mov
sub
loope
mov
sub
pop
add
fidivr
push
push
arpl
mov
jno
test
fbld
mov
jp
cld
xor
dec
pop
test
mov
pop
adc
inc
fadd
js
xchg
test
jg
xchg
or
popf
push
in
xchg
pop
call
retf
xchg
out
and
mov
dec
push
lock
jb
repz
mov
ds
test
adc
cmps
sub
ror
lods
ja
fild
and
outs
data16
aaa
imul
arpl
test
repz
jge
xor
mov
xor
mov
sbb
outs
fsubr
mov
jb
ins
stc
dec
(bad)
addr16
test
ret
lods
clc
sbb
pmaxsw
adc
into
and
push
mov
jae
int3
ins
(bad)
jp
dec
mov
mov
sbb
sub
sub
aam
js
mov
stc
jle
push
or
push
jb
xlat
mov
sahf
bound
add
xor
push
dec
and
xchg
and
fld
shl
xchg
sbb
and
pop
pusha
shr
add
out
inc
pop
cli
lahf
push
in
cld
nop
mov
retf
pop
mov
xor
dec
jl
mov
int
push
push
fxch
inc
jns
scas
jp
loop
inc
fs
sbb
inc
mov
xchg
cmp
fidivr
mov
mov
push
cmps
dec
mov
mov
mov
inc
lods
cmp
inc
jno
or
xchg
ss
clc
mov
adc
out
xor
jne
sub
mov
inc
test
dec
aaa
add
and
imul
daa
arpl
add
and
xor
scas
int3
push
or
fild
jbe
cmc
or
sahf
jmp
pop
xor
fimul
xlat
gs
cmp
dec
loope
cmp
xor
cs
pop
sub
mov
ss
out
ficom
sbb
jne
jl
mov
test
jmp
ret
das
mov
sub
clc
xchg
sbb
push
push
das
inc
or
jnp
push
mov
stos
cmp
jbe
loop
test
add
mov
lea
ret
out
push
xor
loop
pop
jnp
xchg
sub
mov
or
bound
loope
sub
and
cdq
cmc
aaa
sbb
das
cld
push
ss
jnp
fs
js
mov
xchg
push
mov
repnz
cmp
stos
lds
bnd
stc
int
(bad)
mov
lods
ja
or
push
dec
stos
jns
pop
mov
shl
imul
inc
fadd
cwde
ins
jno
(bad)
jg
neg
mov
es
mov
ret
jmp
ror
jmp
cmp
fstp
inc
sbb
add
jl
stc
lock
mul
jbe
pop
test
cmp
xchg
dec
xchg
push
fdivr
xor
jmp
int3
cmps
retf
enter
xchg
cs
sti
cmp
iret
rol
fidivr
jl
rdmsr
call
cli
xchg
or
push
leave
in
mov
ror
fistp
cmp
imul
loop
lea
add
inc
mov
stc
dec
push
push
test
popf
pop
sbb
cmp
inc
adc
sbb
cmp
ss
lea
inc
adc
or
mov
jmp
cli
add
mov
retf
call
in
jge
mov
fldcw
ret
out
xor
cmp
aaa
fs
mov
scas
xchg
pop
inc
sub
hlt
loopne
or
pop
nop
aas
xor
push
dec
lock
mov
mov
dec
das
jns
cwde
sub
push
jmp
jmp
cld
shr
mov
repnz
or
sub
dec
jl
es
cdq
in
dec
and
or
mov
push
je
push
pushf
push
mov
mov
mov
cmc
xor
out
or
addr16
adc
mov
retf
push
scas
xchg
(bad)
(bad)
jne
xor
cmps
add
or
ins
mov
sbb
and
imul
and
mov
out
sub
push
mov
ror
sti
sbb
xchg
aam
inc
sbb
out
mov
mov
cmc
js
or
pop
mov
fstp
ret
jl
ins
std
sub
adc
pop
aad
pop
jle
test
in
cs
inc
mov
mul
xchg
dec
cld
mov
xchg
inc
cmc
ins
(bad)
(bad)
shl
inc
xchg
adc
dec
cmp
inc
cli
jb
pop
and
loop
sbb
shl
rcl
fsub
or
cwde
xor
inc
sbb
dec
add
or
xchg
call
cli
mov
(bad)
mov
fwait
scas
and
mov
mov
mov
lea
cwde
ds
add
ficom
fild
xor
cmp
mov
mov
push
add
in
mov
rcl
ins
adc
cmc
retf
lahf
adc
jecxz
sub
inc
jo
addr16
sub
sub
sub
movs
shl
js
sbb
jb
cli
retf
das
jge
push
cwde
cmp
cmp
lock
cmc
mov
ins
dec
adc
and
inc
push
xchg
lock
sbb
cld
push
push
add
pop
aam
(bad)
cmps
add
and
cmp
sbb
mov
dec
fwait
out
dec
test
das
rcl
pushf
std
jne
mov
cmp
pop
bnd
cmc
pop
test
jp
fcomp
stos
sahf
xor
dec
not
cmps
das
loope
jp
shr
mov
mov
mov
lods
cld
mov
loope
stos
hlt
jno
int3
cli
mov
sti
loop
lea
(bad)
in
leave
scas
push
dec
arpl
xchg
popf
push
ficomp
fs
jmp
add
enter
add
jle
stos
test
stos
mov
pop
aam
(bad)
aas
cmp
push
imul
gs
popa
sar
in
fmul
in
mov
dec
ja
inc
pop
mov
(bad)
std
jp
pop
int
sub
xchg
cmps
mov
test
sub
sbb
sbb
push
push
cmp
ror
push
bound
push
ds
pop
xchg
test
retf
into
push
cmp
push
mov
push
inc
or
(bad)
xlat
aas
arpl
inc
jbe
jo
dec
jle
push
or
repz
xchg
pop
jge
lahf
test
mov
leave
adc
aas
lds
cmp
or
sahf
(bad)
pop
pusha
pop
in
inc
sbb
jg
cld
mov
cmp
out
aaa
jb
mov
call
es
push
out
in
mov
push
lahf
mov
aad
shl
das
out
dec
jecxz
push
sbb
aad
cli
fstp
fidiv
in
retf
fs
addps
adc
sub
cwde
mov
add
push
hlt
or
sahf
popf
(bad)
icebp
mov
xor
jae
or
xor
inc
fiadd
dec
shr
mov
ror
cmp
imul
and
je
std
pop
xchg
aam
and
pop
mov
adc
sbb
jp
and
pushf
out
dec
mov
icebp
mov
and
push
sbb
in
add
in
call
push
test
jb
test
rcl
cdq
mov
fcmovu
jmp
movs
repz
pop
fdiv
inc
and
stos
xlat
addr16
test
pop
pop
mov
jg
fild
cmp
or
sbb
sub
test
sbb
ret
jecxz
and
jne
arpl
xchg
mov
scas
scas
js
mov
icebp
fucomp
call
inc
loopne
jl
stos
scas
dec
test
and
cmps
cmps
push
xchg
jno
and
pop
repz
sub
sub
push
adc
sbb
js
mov
test
mov
rcr
inc
mov
repz
repz
imul
sbb
idiv
inc
in
xchg
sahf
out
outs
(bad)
pop
add
dec
in
add
sbb
out
scas
add
lahf
test
int3
stos
jno
aam
inc
scas
or
call
je
inc
nop
and
or
mov
arpl
das
cmp
xor
cmp
icebp
das
dec
jo
xor
mov
bound
xor
lods
pop
out
lea
adc
jne
add
sbb
mov
dec
loope
jmp
inc
dec
out
popa
shr
sar
shl
add
(bad)
push
std
pop
sub
mov
test
ja
inc
sub
js
sub
add
gs
enter
cmp
jp
jnp
jecxz
mov
inc
add
adc
fistp
in
push
fnstenv
xor
pop
jae
xor
out
push
sub
or
mov
push
rcl
push
or
jp
ins
sub
mov
push
sbb
mov
mov
xchg
sahf
mov
cmps
(bad)
out
xchg
dec
mov
cmps
push
sbb
test
jg
push
sub
xor
dec
pushf
push
ret
repz
imul
lods
or
jb
cmp
push
cmp
fwait
dec
sbb
repz
mov
bound
js
fwait
movs
xchg
or
and
pop
scas
das
xlat
sar
dec
cmp
retf
retf
pop
ins
lahf
ins
push
add
add
jmp
in
mov
mov
retf
push
mov
shr
fstp
sub
cdq
push
mov
push
mov
adc
and
cmps
push
sub
das
mov
dec
jl
in
mov
sub
pop
in
jns
fucomip
xor
xchg
cmp
push
sub
mov
adc
mov
mov
mov
enter
adc
test
mov
add
(bad)
scas
(bad)
and
cmp
pushf
mov
or
mov
jo
stos
in
mov
popf
mov
push
xor
cmp
data16
aaa
jne
inc
(bad)
add
dec
cmp
test
data16
ins
pop
imul
(bad)
aam
outs
test
sbb
add
ficom
jmp
aaa
jg
xor
shr
pop
test
lods
aad
push
mov
test
icebp
push
lock
int
fst
pop
add
sub
cmps
sbb
and
ret
sub
lock
movs
push
gs
inc
add
invd
mov
pop
jmp
jb
jb
popf
in
and
stos
add
fcomp
in
test
jle
dec
push
test
outs
fcomi
outs
shr
and
stc
xchg
loopne
add
xlat
daa
in
cmp
scas
sbb
fsub
lods
pop
fwait
inc
rcr
dec
rol
jmp
movs
aad
and
or
cmp
and
inc
loope
or
pop
andps
ret
(bad)
pop
outs
adc
mov
ins
sbb
test
in
sbb
int3
enter
jecxz
mov
cwde
mov
cmp
push
adc
int3
push
(bad)
push
stos
cmps
scas
pop
jno
test
fimul
mov
leave
std
(bad)
sub
mov
jo
loopne
call
mov
sub
inc
inc
sahf
add
inc
loop
sub
loop
mov
aad
and
inc
stc
cmp
jo
repz
imul
xor
add
jb
sbb
pop
inc
lds
jne
ins
aaa
mov
add
sbb
xchg
jae
inc
inc
xor
jnp
(bad)
sti
sbb
dec
dec
and
mov
and
mov
and
push
leave
push
pop
inc
ret
dec
inc
test
cwde
jnp
iret
sbb
(bad)
cmp
sub
scas
xor
push
sub
ficomp
pop
(bad)
into
push
outs
sbb
jne
ret
dec
iret
ror
std
shl
jmp
shl
mov
loope
pop
ja
xchg
mov
jae
sbb
add
xchg
mov
retf
(bad)
fld
test
jae
rol
jmp
pusha
xlat
into
popa
and
cmp
add
enter
cmc
repnz
pushf
mov
ret
les
shl
call
sbb
cs
cmp
dec
or
aas
ret
cld
cmp
ret
movs
fcom
sbb
add
mov
in
rol
cmp
sub
add
ss
xor
fild
test
stos
xchg
inc
cmc
adc
or
xchg
sbb
repz
mov
inc
jge
arpl
rol
and
and
lock
mov
(bad)
retf
inc
lods
arpl
jbe
hlt
sub
pop
xchg
pop
in
xor
fdivr
sbb
test
out
or
jnp
pop
mov
lds
jg
jge
jno
cli
mov
dec
xor
lahf
xor
aam
aaa
ins
jg
and
push
pop
sbb
cli
call
cmp
sub
jmp
(bad)
pop
ror
mov
add
add
xlat
je
stos
or
rcl
xchg
sub
inc
xchg
rcl
sub
daa
mov
or
scas
call
sbb
or
mov
pop
cdq
ins
mul
aad
movs
fld
gs
inc
into
in
push
cmp
icebp
push
jp
cld
in
int3
mov
fiadd
pop
sar
fld
ins
mov
mov
imul
mov
inc
sub
jg
mov
mov
jp
mov
dec
outs
cmc
loop
clc
ins
mov
or
or
or
cdq
mov
sub
jne
sbb
and
and
inc
mov
fs
mov
pusha
hlt
pop
mov
movs
push
jp
in
inc
call
(bad)
repnz
rcl
adc
sub
xchg
inc
test
push
or
lahf
sbb
add
movs
cmps
jg
inc
add
inc
push
rcl
(bad)
cmp
retf
push
ja
(bad)
outs
fs
dec
xchg
inc
stos
xchg
mov
xlat
push
sbb
dec
mov
dec
cli
je
push
leave
arpl
in
pop
call
add
dec
cmp
mov
mov
jno
lock
test
jo
cmps
jmp
out
add
mov
fcomp
sub
jne
dec
test
movs
sbb
(bad)
cmp
shl
aas
push
loop
fisubr
(bad)
pop
xchg
scas
stos
out
sbb
ins
add
add
aam
scas
pop
ja
pusha
daa
stos
scas
or
retf
jmp
shr
icebp
and
(bad)
stos
test
rep
add
push
jae
dec
dec
or
mov
dec
(bad)
jge
scas
sub
sahf
push
daa
scas
or
movs
fcmovnu
jae
jle
out
pop
mov
push
sbb
sahf
or
jae
cvtdq2ps
arpl
cmc
pop
or
nop
sbb
ret
fs
in
fcomp
mov
sbb
jmp
xor
js
out
sub
je
outs
fimul
mov
pop
xor
mov
xlat
add
inc
or
sbb
imul
cld
fcom
das
jg
cdq
and
cmps
(bad)
hlt
cmc
stc
xchg
inc
jne
fdiv
mov
mov
rcr
mov
outs
inc
push
enter
and
mov
inc
sub
(bad)
in
mov
dec
inc
mov
sub
(bad)
mov
mov
pop
xchg
cdq
or
out
ds
lds
ds
es
cwde
dec
sbb
int
sbb
daa
ins
sbb
push
loop
push
inc
or
add
jbe
jno
scas
into
out
sub
mov
jo
ins
pop
jmp
push
idiv
mov
pop
ret
nop
cmp
sbb
push
mov
sbb
cmps
sti
mov
(bad)
mov
adc
into
xchg
xchg
sub
inc
jae
movs
retf
sbb
mov
jmp
sub
cmp
add
xchg
xchg
jmp
mov
rcr
jmp
mov
sbb
popa
fld
mul
int3
std
test
popa
sub
test
std
es
jle
push
push
mov
inc
scas
pop
jne
(bad)
xor
sbb
inc
sbb
cwde
in
mov
xor
lahf
hlt
mov
push
mov
jmp
(bad)
ja
fstp
test
into
add
sbb
ss
sub
fist
adc
js
push
fidiv
mov
pop
ror
out
xchg
xchg
retf
or
dec
pop
or
jg
inc
mov
ins
jp
xor
jnp
icebp
lods
xor
js
xchg
lock
and
pop
push
push
mov
out
in
je
mov
and
addr16
cmp
cld
jle
fsub
jbe
stos
cs
and
fisub
adc
aas
add
inc
sub
pop
xchg
adc
scas
mov
repz
fcmovnb
mov
ja
ins
lock
lds
mov
lock
mov
js
xor
add
jle
mov
fneni(8087
lahf
cli
cdq
out
pusha
popf
ficomp
lahf
push
iret
mov
or
mov
fcmovb
inc
mov
pop
add
pusha
pushf
mov
xor
pop
push
cmp
dec
inc
cmp
or
je
shl
sub
dec
into
jecxz
jnp
and
dec
test
fwait
shr
hlt
js
por
cmps
mov
adc
xor
into
and
mov
cmp
sbb
rol
je
push
(bad)
fisttp
jecxz
movs
imul
xor
xor
popa
imul
pop
(bad)
mov
pop
xchg
add
int
lods
mov
in
xchg
mov
add
mov
ins
inc
mov
jg
xchg
(bad)
adc
xchg
lds
sbb
xchg
pinsrw
inc
dec
icebp
cld
daa
xor
xchg
sar
adc
and
mov
call
mov
das
sub
bound
stos
sub
pop
mov
mov
(bad)
js
int
pusha
fs
clc
scas
xchg
adc
stc
ds
in
test
out
pop
mov
repz
pop
fwait
dec
(bad)
int
sub
hlt
push
sub
pop
arpl
push
out
in
fcom
pop
push
adc
div
pop
ins
cdq
jnp
xchg
pop
xchg
out
pop
xor
mov
mov
xor
sbb
adc
xchg
xchg
inc
lods
push
jne
sub
xor
jmp
mov
shr
dec
jo
mov
pop
jmp
sub
mov
inc
push
dec
mov
mov
adc
(bad)
bound
cmp
in
mov
or
or
jg
jge
mov
dec
aad
and
stos
or
bound
(bad)
call
jns
cmp
in
retf
gs
cmp
js
mov
cmc
hlt
sbb
rcl
iret
dec
adc
int
clc
or
or
xor
pop
in
pop
mov
(bad)
mov
shl
(bad)
push
pop
fistp
or
repz
push
cld
cmp
imul
mov
sbb
call
cmps
xchg
or
pop
test
mov
dec
cdq
pop
(bad)
imul
lahf
and
add
sub
scas
loop
mov
repnz
and
cld
and
add
enter
mov
sbb
mov
add
dec
imul
or
mul
scas
test
inc
sti
test
pop
jae
xchg
icebp
(bad)
xchg
xchg
sbb
mov
ja
loopne
ret
enter
push
and
push
mov
jmp
xlat
jle
fistp
adc
add
sub
and
and
stos
shr
(bad)
repz
call
aam
sub
in
mov
inc
jnp
pop
push
stos
xchg
dec
jae
sbb
xchg
fld
fwait
nop
sbb
icebp
jmp
dec
push
or
movs
in
mov
lods
jo
pop
pop
or
mov
sub
and
pop
push
ret
shl
sahf
shl
repz
leave
bound
popf
fstp
sahf
mov
sub
ret
rol
push
das
inc
bound
loopne
inc
std
in
mov
dec
arpl
ret
bound
jne
mov
cli
jno
sbb
push
and
out
xor
(bad)
pop
sub
cmp
mov
mov
(bad)
das
(bad)
lods
inc
cwde
pop
in
mov
ret
push
mov
fldenv
pop
(bad)
int3
jge
mov
(bad)
movs
mov
(bad)
(bad)
(bad)
icebp
jne
aam
pop
jp
inc
adc
mov
xor
in
shl
ret
bswap
and
mov
jl
and
mov
sbb
add
mov
dec
dec
push
xor
push
sub
pop
inc
aad
outs
arpl
stos
cwde
imul
imul
in
dec
xor
jno
adc
xchg
adc
in
inc
loope
pop
pop
cmp
ret
inc
add
xchg
inc
jne
mov
inc
ret
fs
stos
arpl
add
(bad)
xor
and
mov
pop
dec
mov
and
push
add
cmp
inc
lods
sub
movs
or
mov
or
aaa
pop
stos
das
sar
inc
pop
jmp
sub
repnz
xor
pop
call
mov
adc
push
scas
and
(bad)
xor
xor
pusha
adc
add
shl
xor
stos
ja
jmp
or
dec
shl
sub
pushfw
push
rcl
xchg
clc
jg
popa
mov
(bad)
lods
lahf
inc
fsubp
std
jecxz
fmul
and
push
inc
xor
je
and
rep
jno
xchg
mov
pushf
inc
pop
and
and
pushf
test
iret
rcr
out
and
cmp
push
out
aam
push
pop
mov
ret
call
into
cmp
fwait
repnz
pop
imul
and
jbe
ret
mov
ror
and
adc
inc
fstp
arpl
retf
xchg
lock
ins
jnp
pop
test
xor
ins
popa
mov
and
shr
sub
xchg
sar
stc
xor
mov
mov
jne
lods
xlat
pop
es
shl
mov
xchg
mov
sbb
fild
arpl
cwde
xchg
ds
jmp
js
pushf
jno
pop
adc
jmp
jmp
neg
adc
not
popf
adc
pop
cwde
cmp
push
cmp
(bad)
rcl
mov
cwde
inc
xchg
jns
xchg
sub
xchg
and
test
test
mov
stos
(bad)
sbb
cmp
xchg
xor
jmp
test
aaa
cdq
retf
ins
pop
and
xchg
jnp
cwde
mov
xchg
arpl
adc
lahf
rol
or
in
mov
jns
xchg
mov
and
and
mov
sub
(bad)
arpl
and
imul
iret
in
fidiv
cs
fcomi
arpl
jae
dec
mov
sub
or
ret
pop
adc
xor
pop
mov
xor
xor
iret
or
push
shl
pop
jbe
mov
and
icebp
xor
mov
inc
jnp
les
repz
xor
das
rol
mov
xchg
lea
leave
imul
xor
pushf
sbb
jne
xchg
inc
add
lock
jno
test
daa
dec
jmp
(bad)
sbb
(bad)
cmp
pusha
imul
sti
imul
icebp
sbb
xor
pop
push
xor
ss
fcom
fldcw
stc
cld
cdq
test
lea
clc
jge
or
pusha
sbb
pop
jae
cmp
xor
std
sbb
add
and
stc
outs
scas
push
mov
adc
clc
adc
mov
loop
dec
in
mov
popa
mov
ror
jle
(bad)
bound
aas
cld
mov
or
push
mov
xchg
xchg
inc
aaa
or
out
pop
mov
push
pop
dec
das
jae
sub
sub
add
ror
out
pop
fcom
shl
push
mov
pop
imul
icebp
outs
shr
xchg
js
adc
rol
gs
sbb
scas
in
fwait
ret
jno
rol
retf
loopne
js
in
fmul
icebp
xchg
adc
mov
or
arpl
or
sub
fwait
popf
addr16
jb
sub
jmp
cmc
mov
adc
mov
or
dec
add
xor
xchg
inc
and
in
outs
xchg
add
mov
pop
pop
fldenv
lea
repnz
rcr
ins
movs
cmps
sbb
mov
std
enter
mov
mov
cli
pop
push
pop
xor
mov
gs
push
adc
sbb
cmp
outs
cmp
stc
mov
pop
adc
fs
adc
mov
jae
and
mov
mov
loope
jl
call
lock
mov
shr
mov
pop
lods
and
jns
loop
xor
mov
movs
outs
jp
xchg
sbb
ret
mov
in
rcl
std
sub
vunpckhps
jns
push
or
inc
rcr
inc
cwde
or
mov
and
add
xchg
xchg
gs
mov
repz
sub
mov
jne
sar
jecxz
imul
push
pop
mov
sub
lds
mov
popa
fadd
or
mov
and
dec
outs
icebp
xchg
mov
dec
pusha
push
imul
scas
idiv
and
aad
pop
push
addr16
inc
mov
adc
faddp
and
jns
scas
in
movs
jp
mov
mov
push
pusha
aas
dec
lock
(bad)
jno
dec
or
xchg
loopne
push
stos
push
mov
lock
je
pushf
pop
cmp
xor
jl
pop
not
jp
je
dec
test
push
cmc
icebp
cmps
(bad)
ja
addr16
shr
xchg
push
push
xchg
je
int3
jp
(bad)
xor
mov
jecxz
js
jl
scas
test
loop
lds
mov
dec
push
mov
mov
mov
ja
jmp
retf
aaa
xchg
rcl
mov
jecxz
dec
push
mov
cmp
inc
out
out
mov
ins
in
xor
int
sub
inc
fist
aas
cmps
sbb
mov
inc
retf
pop
data16
cmp
call
jl
dec
lods
mov
lds
lds
je
mov
into
movs
add
cmps
popa
and
lea
jl
fadd
push
mov
inc
icebp
cmp
mov
pop
cld
push
test
out
popa
xor
jle
and
and
xchg
repz
inc
jbe
dec
ret
fs
push
cmp
repnz
imul
fisttp
mov
int3
loope
lea
(bad)
xor
out
dec
fimul
add
adc
mov
ins
arpl
retf
push
sub
in
xchg
xor
in
pop
lods
mov
cmp
stc
xchg
dec
or
sahf
mov
jge
adc
xchg
fwait
inc
cmp
int
mov
jnp
dec
outs
push
cmp
and
mov
jle
retf
xchg
or
popf
cmp
inc
out
imul
shr
push
xchg
cdq
mov
xlat
sbb
adc
test
lock
push
sub
call
into
push
or
or
pop
jecxz
call
stos
repz
bound
dec
cmc
scas
inc
mov
sbb
fmul
cdq
dec
ds
pop
xor
jmp
loopne
or
in
daa
pop
stos
outs
mov
imul
sbb
lock
repz
jbe
cmp
mov
push
imul
int3
arpl
mov
cmc
retf
loope
test
and
inc
jecxz
jecxz
push
sub
in
daa
pop
fldcw
jno
cli
mov
addr16
fs
sbb
(bad)
jmp
fcomp
rcl
setns
in
push
mov
std
rol
mov
and
in
les
js
sub
cmc
clc
(bad)
popf
push
sbb
call
es
aad
mov
loope
mov
adc
jnp
dec
lea
jge
ret
dec
lahf
shr
(bad)
xor
lahf
xchg
(bad)
aaa
mov
dec
jecxz
sub
jno
imul
xchg
out
and
jbe
out
mov
jmp
outs
rcr
mov
mov
push
sub
push
add
ret
retf
jecxz
jge
sbb
and
neg
dec
mov
or
(bad)
hlt
xor
or
in
add
push
dec
mov
shl
pop
imul
dec
lods
cmp
dec
inc
mov
mov
div
test
iret
cmp
icebp
sti
xchg
out
scas
cmps
fwait
popw
pop
mov
outs
(bad)
mov
pusha
and
inc
ror
out
ficomp
and
out
dec
xor
cmps
rol
test
xchg
or
inc
add
inc
scas
adc
dec
cmp
mov
xchg
inc
scas
imul
push
in
push
div
shl
jmp
(bad)
outs
popf
cmp
gs
es
call
jns
call
pop
ins
int
loop
mov
ss
ss
lahf
cmps
aam
add
jge
loopne
mov
fmul
int3
cmp
jmp
leave
pop
test
leave
sbb
push
dec
jge
dec
out
jbe
dec
mov
adc
call
push
sub
jb
xchg
shr
sbb
cmp
push
mov
mov
pop
jo
sub
mov
mov
dec
dec
inc
jmp
mov
lods
(bad)
fcmovb
push
add
inc
fdivr
into
xchg
pop
icebp
jmp
pop
cmc
pusha
daa
scas
mov
in
lock
cmp
jno
aad
or
cs
stos
sub
push
mov
icebp
data16
daa
sar
ror
frstor
mov
push
cli
jbe
dec
jl
cmp
push
pop
pop
push
jl
ds
xchg
pop
push
les
ret
xor
ret
or
je
jecxz
xor
sbb
mov
and
mov
lea
sbb
or
or
xor
ja
iret
mov
cmp
pop
lea
jno
mov
mov
adc
push
imul
es
pop
xchg
call
adc
dec
pop
cmp
add
xor
push
arpl
jl
(bad)
hlt
sub
or
jmp
stc
std
dec
adc
or
in
dec
test
or
(bad)
std
hlt
sub
scas
test
adc
inc
mul
adc
add
dec
mov
retf
sbb
push
and
or
mov
mov
into
xchg
push
aam
jp
cmps
adc
pop
jnp
lea
test
add
aad
leave
or
mov
ins
pop
loope
clc
adc
lahf
inc
sbb
cmc
cld
movs
push
xchg
je
adc
(bad)
push
dec
rol
movs
dec
sub
les
test
and
in
inc
mov
xchg
mov
dec
fs
xchg
and
cmp
ss
imul
push
in
ret
lds
push
pop
loope
lahf
stos
add
fwait
repz
sbb
sub
ds
xchg
sbb
push
fbld
pop
add
pop
jmp
mov
dec
sbb
sbb
push
cdq
fdiv
lods
xchg
mov
repz
or
movs
aad
push
mov
js
pop
and
jne
cmp
ins
mov
pop
jle
dec
lock
push
rcl
ins
sub
sahf
fmul
sar
dec
out
and
dec
loop
retf
not
daa
mov
arpl
mov
stos
push
lahf
fsub
int
rcl
inc
imul
cmp
inc
out
daa
add
idiv
xor
xor
mov
mov
xchg
je
and
adc
scas
sub
cli
mov
test
test
mov
or
js
adc
aaa
jge
adc
dec
shl
cmps
push
sub
stos
ss
retf
iret
push
pop
or
fcmovu
mov
or
popa
pop
sub
arpl
jmp
stos
shl
out
sub
add
sbb
pop
mov
and
inc
mov
jl
ja
ja
stos
loope
xor
mov
or
cmc
and
ds
into
inc
(bad)
xchg
jecxz
cmp
and
push
pusha
jae
fld
or
push
js
push
mov
mov
ror
ret
xchg
push
sahf
cmp
jne
dec
push
push
or
pop
test
ret
jno
test
mul
fistp
xor
out
cmp
and
clc
scas
das
fidiv
mov
lahf
iret
jmp
cmp
(bad)
push
dec
push
es
jne
dec
jmp
mov
std
inc
mov
add
int
push
mov
push
mov
or
push
xchg
mov
mov
cdq
xlat
mov
adc
mov
jl
je
jae
nop
test
jmp
inc
inc
mov
push
sub
out
in
jno
jl
push
outs
(bad)
jns
test
adc
sbb
lods
dec
in
imul
test
fist
call
jb
cmp
mov
jle
pop
adc
cs
in
jo
cdq
call
cmps
xchg
sbb
mov
jns
aas
pop
sbb
lea
pop
or
and
mov
clc
out
enter
out
cdq
sar
cmp
sub
dec
jo
in
pop
inc
fsubr
jmp
sub
cwde
xchg
inc
mov
fstp
pop
xchg
ss
jg
pop
cs
outs
sbb
push
push
sub
and
add
jmp
sbb
les
repnz
mov
add
add
fisttp
call
sahf
sbb
sub
and
jns
aaa
push
aaa
iret
int
loopne
jmp
xchg
add
and
jns
push
xor
rcl
inc
jg
ret
dec
pushw
mov
inc
sar
dec
jge
adc
lds
fwait
xlat
cdq
sub
sbb
popa
mov
jle
push
jge
scas
sub
pop
clc
dec
ret
dec
jge
repnz
fistp
lds
shl
xchg
adc
or
jp
and
in
mov
call
add
sbb
mov
or
xor
xlat
rcr
sub
cli
inc
fcomi
jne
sbb
mov
fs
outs
nop
xchg
jmp
jno
mov
aas
sbb
mov
mov
mov
push
and
or
add
jecxz
inc
and
sti
jmp
cmp
(bad)
cmp
popa
outs
cwde
sub
push
ds
jmp
xor
adc
jo
test
outs
in
push
cmp
cmp
(bad)
mov
mov
pop
shl
ins
jae
outs
shl
cmp
scas
ret
or
adc
dec
jmp
jns
sbb
shr
pop
sbb
sbb
xchg
gs
in
call
inc
ins
bound
sub
test
jne
into
ffree
test
adc
in
inc
sub
jo
xchg
gs
rcr
test
cmps
jl
fcmove
jne
cmp
pop
and
ins
adc
add
test
lahf
cli
inc
aas
ins
lds
push
stc
mov
xchg
repz
ds
xor
add
jbe
shl
push
js
(bad)
sbb
inc
call
rol
inc
mov
pop
xchg
ins
dec
add
addr16
jp
lds
xlat
push
fwait
sbb
pop
or
cmp
sub
sbb
or
cli
les
clc
stc
retf
fmul
mov
inc
and
test
loope
dec
loopne
jnp
push
icebp
push
mov
mov
int
jne
inc
mov
inc
enter
adc
les
and
mov
sbb
loopne
sbb
inc
idiv
test
mov
jne
clc
scas
dec
jne
inc
lea
pop
xchg
inc
test
outs
pop
aad
ja
sbb
movs
out
pop
mov
dec
mov
pusha
stos
aad
cld
pop
mov
fadd
add
sahf
inc
lea
mov
int3
fiadd
retf
sti
sub
push
xchg
dec
sbb
or
aad
sub
push
pushf
retf
adc
adc
sub
out
dec
inc
pop
jo
jno
das
inc
inc
dec
dec
sub
inc
xor
adc
enter
sbb
clc
mov
test
pop
in
icebp
fild
in
cmc
adc
sbb
sub
jmp
cmc
out
mov
ins
push
test
jno
cmps
push
add
pushf
add
sub
jg
cdq
aaa
push
pop
gs
sub
jecxz
ins
mov
adc
jg
and
and
mov
dec
ficomp
ret
push
or
and
fstp
jmp
rol
cwde
add
rol
jle
add
adc
pushf
aad
xor
or
push
cmp
pop
clc
sbb
sbb
lds
ja
pop
test
push
leave
pusha
jge
mov
adc
js
aaa
or
aad
mov
ins
and
dec
retf
fnclex
cmp
aas
icebp
push
fyl2x
js
fcom
xlat
inc
dec
add
lods
loopne
mov
shr
jmp
rol
and
inc
mul
lods
cmp
sahf
cmp
retf
cli
fstp
mov
ret
sub
jne
fs
sbb
test
aad
mov
in
neg
call
sti
or
ret
dec
popf
pop
test
xor
sub
mov
in
lea
jae
hlt
outs
out
mov
aas
(bad)
les
cmp
jmp
pop
popa
dec
test
retf
loop
pop
sar
lods
out
jle
pusha
xlat
int3
cdq
retf
ret
cli
mov
pop
cmp
call
inc
cli
rep
loope
mov
neg
mov
cld
dec
call
iret
or
pop
and
jmp
sti
push
retf
or
sub
daa
aad
pop
ret
sub
daa
cwde
cmc
push
or
push
sub
xchg
xor
ins
pop
sub
and
mov
aad
xchg
dec
inc
movs
movs
pop
arpl
dec
and
mov
je
dec
pop
pop
imul
mov
sub
and
enter
imul
xchg
pop
lea
pop
js
fadd
in
shr
in
mov
and
mov
sbb
pop
pop
cmps
leave
xlat
jmp
in
test
cld
pop
test
inc
mov
sub
in
or
cmc
call
push
dec
jae
cwde
xor
test
xchg
iret
in
(bad)
jnp
dec
ficomp
push
(bad)
iret
imul
xchg
fmul
mov
xchg
bound
push
push
repz
pop
test
and
pop
(bad)
dec
popf
int3
out
jg
(bad)
xor
test
(bad)
std
loope
jg
sahf
mov
mov
nop
ret
dec
sti
adc
cmp
hlt
loop
dec
mov
jecxz
pusha
js
scas
lea
dec
cmp
push
cmp
repnz
xchg
test
mov
sbb
ret
sbb
sub
xchg
leave
in
retf
pop
pusha
or
imul
ret
inc
sbb
mov
cmp
mov
scas
cld
jno
jmp
clc
fild
shl
call
pop
jg
in
cwde
xor
aaa
inc
cmp
push
xlat
add
jo
inc
popa
pop
mov
jmp
pop
daa
daa
sar
cmp
xor
mov
xor
or
les
addr16
cwde
mov
inc
in
pop
xor
in
xor
or
ja
mul
les
pop
sub
cld
int3
pop
jae
xchg
dec
jl
sti
mov
popa
(bad)
mov
sbb
xor
call
repnz
in
add
rcr
xor
xchg
and
in
jg
adc
nop
add
pop
xlat
imul
ror
dec
sub
inc
pop
mov
repnz
fnstcw
mov
hlt
data16
pop
and
sbb
lds
pop
enter
fcomp
repz
or
push
arpl
aas
mov
inc
and
fadd
ret
stos
data16
mov
nop
push
or
push
add
adc
loopne
je
sbb
xchg
enter
pop
and
and
jae
lds
mov
or
cmps
test
(bad)
stc
cmp
add
mov
mov
jo
push
jmp
popf
add
scas
mov
adc
mov
pop
cli
lods
cmp
push
cwde
icebp
sub
fcom
fist
inc
mov
mov
aas
aas
dec
and
add
push
cli
(bad)
ja
imul
je
inc
mov
xchg
sbb
xchg
sbb
leave
jg
lea
arpl
sbb
(bad)
stc
ds
jae
fwait
daa
add
inc
test
mov
and
cmp
xor
lods
xchg
xor
mov
ret
das
xchg
sbb
rcl
rcr
push
pop
jmp
iret
imul
jbe
sub
inc
in
and
stc
mov
sar
fmul
sub
data16
ds
dec
out
lahf
lods
dec
mov
xchg
sbb
mov
clc
call
xchg
xchg
mov
test
mov
js
adc
add
out
mov
jle
mov
in
psubw
js
aam
fbstp
xchg
push
jle
ins
mov
add
mov
mov
rcl
mov
data16
aaa
cli
xchg
mov
outs
pop
sbb
pop
pop
rol
retf
push
mov
inc
cmps
mov
ins
fisttp
inc
or
jne
jbe
dec
mov
inc
sub
add
loop
stc
sbb
int3
jno
lock
ret
xlat
jecxz
sub
add
fs
pop
ds
cli
cdq
pop
shl
lahf
retf
add
retf
push
dec
add
out
stos
mov
in
ins
mov
adc
or
fucomip
outs
or
int3
jne
(bad)
xor
scas
mov
cwde
mov
jp
or
inc
mov
and
leave
dec
xchg
xchg
or
aam
push
pop
cmp
pop
je
rcl
dec
mov
xchg
imul
mov
xchg
cmp
push
push
mov
cmp
add
aam
ret
movs
jl
ins
(bad)
mov
xor
or
add
dec
push
jmp
popa
inc
cmp
lahf
adc
cmp
sets
(bad)
or
out
aas
push
inc
shl
fdiv
and
or
sete
dec
dec
popa
ins
sbb
jp
dec
jmp
neg
dec
ins
xchg
in
xchg
nop
mov
dec
adc
jmp
fmul
push
jnp
shl
xor
shr
movs
jle
add
push
push
sbb
xchg
in
mov
lahf
pop
sub
(bad)
mov
dec
mov
sub
arpl
in
push
jmp
push
ror
mov
xchg
aam
sbb
push
ffreep
outs
call
jp
and
call
(bad)
test
inc
mov
cli
or
jbe
jmp
push
scas
ss
rcl
sbb
mov
xchg
daa
rcl
call
mov
lods
or
push
fst
in
(bad)
ret
loope
(bad)
popa
xor
fild
cld
mov
dec
out
pop
mov
xchg
ins
cmps
lods
mov
sbb
adc
popa
leave
jo
leave
xchg
add
mov
mov
sbb
and
addr16
je
dec
push
dec
loop
in
pop
lds
mov
xor
sbb
sub
(bad)
icebp
push
and
and
sbb
std
in
cmp
sub
cld
mov
ret
jns
cmp
pop
leave
adc
sub
mov
jno
stos
scas
hlt
sti
aam
in
mov
outs
cdq
jb
(bad)
hlt
jne
adc
sbb
pop
dec
dec
xor
jl
add
or
and
jle
out
mov
jno
mov
inc
jnp
dec
test
jnp
shr
ds
sar
fcom
xor
ins
cmps
pop
loopne
xchg
ins
sbb
jle
mov
aam
cmp
loopne
lea
in
inc
aas
retf
lods
fidivr
pop
stos
out
mov
sub
ret
push
es
push
stos
aas
mov
mov
inc
add
pusha
sahf
jmp
and
aaa
in
jmp
pop
iret
adc
inc
pop
jge
jl
sbb
stc
dec
inc
mov
aam
(bad)
fstp
mov
pop
and
stos
lock
mov
repnz
imul
dec
sti
push
adc
fidiv
(bad)
test
xchg
movs
or
and
fdiv
and
xchg
or
outs
sbb
test
scas
push
sbb
lea
mov
xchg
hlt
jne
loopne
ficomp
mov
and
jg
sub
sbb
inc
jo
cmp
scas
in
jge
jp
cmp
outs
jmp
mov
outs
ja
imul
mov
xor
pop
test
xlat
pop
sbb
lock
das
lock
jmp
call
js
push
popa
dec
outs
fcmovne
neg
scas
cmc
or
mov
jmp
lods
leave
jmp
adc
(bad)
loopne
and
and
je
and
ror
sahf
test
imul
outs
push
daa
pop
cli
cmp
pop
mov
call
int3
loopne
stos
jnp
ins
out
mov
jbe
push
push
push
mov
inc
mov
sbb
xchg
xor
dec
push
mov
into
pop
movs
mov
dec
js
cmp
dec
call
push
cmp
jne
inc
retf
pop
add
xchg
sbb
xor
into
aad
gs
jecxz
aam
mov
push
xchg
jle
mov
mov
dec
pop
sbb
neg
pop
scas
pop
cmp
push
hlt
sahf
dec
cs
mov
and
xchg
lea
in
inc
cmps
jp
addr16
xchg
rcr
jmp
or
out
lods
ror
or
xchg
mov
in
and
sbb
lds
mov
lods
loopne
xchg
push
inc
stos
mov
(bad)
test
and
xor
enter
aam
loope
pop
popf
add
ror
retf
mov
clc
rcr
xchg
jle
and
aas
push
stos
pop
xchg
call
cmps
sub
xor
fild
gs
jp
(bad)
cmp
ret
aam
shl
dec
pop
xor
hlt
daa
ret
pop
daa
dec
ret
xchg
popa
in
rcr
mov
ja
mov
add
inc
mov
pop
sub
(bad)
push
cmp
loop
leave
push
sub
mov
push
add
cmp
enter
stc
mov
lods
enter
and
data16
dec
retf
inc
(bad)
ds
add
jbe
(bad)
jp
cmp
adc
mov
popa
bound
(bad)
daa
adc
jnp
out
and
jecxz
cs
out
jp
adc
cmp
cmp
sti
xchg
mov
push
inc
dec
pop
jmp
mov
scas
push
sbb
mov
sub
in
sub
inc
add
stos
sbb
jp
out
dec
lea
and
imul
cmp
enter
sbb
icebp
push
fcomp
mov
inc
stos
mul
xor
push
mov
jbe
std
sbb
add
js
fistp
rcr
adc
mov
outs
aaa
nop
call
addr16
dec
mov
push
sbb
mov
sbb
mov
bswap
jnp
cmc
dec
loope
popf
mov
xor
lock
fwait
retf
xchg
xor
fstp
aas
push
out
xchg
shr
sub
pop
adc
xor
jns
dec
fmul
dec
outs
push
pop
mov
pop
daa
fistp
pop
jge
and
movs
mov
test
and
scas
xor
xor
mov
int
sbb
and
out
xor
jl
lock
ret
cmps
pusha
jbe
(bad)
(bad)
push
retf
mov
dec
cmp
loopne
xchg
ins
pop
fnstcw
sbb
ins
cld
mov
dec
xchg
adc
or
jmp
push
ja
mov
sbb
mov
adc
scas
xchg
mov
sub
add
lahf
ret
xchg
add
call
mov
sub
dec
sub
sub
mov
sub
or
sub
sub
and
push
jo
scas
loope
adc
cs
cmp
xor
add
jo
or
cmp
imul
movs
or
ins
stos
shl
hlt
lea
cmc
jns
push
cmp
ret
mov
dec
mov
mov
dec
cmp
ins
fst
(bad)
lahf
mov
aas
inc
cli
or
or
aaa
adc
je
sub
pop
aaa
clc
sub
mov
cmp
mov
loopne
push
inc
ret
or
xchg
xchg
bound
fsub
xchg
outs
(bad)
pop
fnsave
mov
or
sub
imul
jg
push
mov
jnp
shl
sbb
pop
dec
xor
mov
or
aam
push
addr16
inc
jns
shr
jns
cmps
test
sbb
bound
jl
(bad)
stos
xchg
xlat
cmc
push
in
mov
out
or
cmps
ficomp
mov
(bad)
mov
cmp
sti
jle
cmps
pop
(bad)
xor
(bad)
hlt
cli
js
or
mov
xor
cmps
movntps
mov
adc
pop
ja
or
out
(bad)
clc
mov
pop
ret
inc
or
or
cs
ins
sbb
jne
shr
inc
imul
mov
and
loopne
and
rcl
shr
into
mul
ja
lahf
xlat
sub
retf
jo
mov
mov
push
mov
mov
jecxz
cmp
shl
xchg
leave
neg
and
pop
pop
cmp
dec
jnp
sbb
lock
sub
mov
sub
jno
mov
jns
mov
shl
mov
movs
cli
mov
and
sar
bound
out
add
test
xor
and
mov
add
mov
lods
cmp
add
adc
jmp
(bad)
lods
cmp
lahf
mov
(bad)
ret
inc
es
dec
retf
jge
push
out
or
jo
outs
mov
cmps
retf
movs
test
mov
adc
mov
data16
cwde
push
ret
lea
cdq
inc
ret
jle
pop
mov
mov
(bad)
jg
xchg
ret
sub
jmp
mov
and
or
retf
mov
pop
jl
(bad)
scas
cmp
clc
push
mov
into
stos
mov
mov
mov
dec
lods
rcr
retf
mov
sub
es
mov
test
ins
sbb
push
sbb
sbb
push
push
aam
mov
pop
(bad)
xor
cmp
or
ficom
mov
into
xchg
test
or
into
pop
push
ins
dec
dec
pop
mov
mov
pop
dec
dec
xor
xchg
pop
data16
gs
(bad)
or
popf
pop
lods
aas
leave
ins
vmovaps
push
mov
sbb
sar
push
push
jne
scas
mov
xchg
retf
cwde
call
dec
fld
dec
adc
cmp
jnp
cmc
test
stos
(bad)
xor
lods
or
ins
mov
cmps
das
add
imul
inc
rcr
test
adc
stos
(bad)
stos
dec
xlat
dec
sub
bound
daa
cmp
scas
sbb
jecxz
lahf
mov
mov
jb
push
add
fadd
xchg
ds
xor
movs
nop
ret
bnd
push
(bad)
pop
sub
int
inc
fs
sub
jo
in
retf
gs
popa
(bad)
stos
dec
scas
push
lods
mov
dec
clc
shl
push
test
das
mov
adc
xchg
mov
cmc
mov
cdq
inc
ins
push
inc
mov
add
imul
out
inc
add
xchg
inc
xchg
inc
test
(bad)
sub
sbb
sub
xchg
(bad)
ficomp
mov
lods
mov
sub
loope
js
call
leave
retf
mov
loope
test
fs
cmps
lds
(bad)
icebp
pop
into
pop
or
and
and
mov
mov
nop
jmp
retf
add
jge
jbe
fnstcw
(bad)
mov
xchg
shl
jnp
or
les
cdq
xor
or
jg
shl
add
js
sbb
adc
adc
mov
pop
cmp
and
xor
es
push
popa
in
es
in
sbb
inc
jmp
cmps
adc
sub
mov
dec
out
adc
cmp
sbb
jae
cmps
ja
cmovo
in
push
test
add
mov
mov
push
shr
sti
jg
pop
jg
mov
sar
cmps
push
xor
retf
cwde
mov
xor
out
or
inc
add
lods
icebp
xchg
mov
adc
gs
cmps
and
mov
pushf
ds
jp
adc
push
dec
cld
cld
in
push
loop
mov
mov
movs
mov
rcl
les
out
sbb
pop
loopne
(bad)
fcomip
int
gs
jge
adc
push
push
lahf
pop
or
and
add
adc
mov
stc
jp
in
enter
push
adc
loop
rcr
dec
mov
jmp
dec
cmc
fst
sahf
jl
das
or
call
pop
sbb
push
pop
stos
xor
and
jns
jno
loopne
mov
imul
ret
mov
cmps
cmp
dec
mov
imul
popf
movs
mov
push
sub
shl
call
lock
test
add
mov
xor
retf
or
out
cli
test
jle
or
aam
in
call
call
jno
and
or
rcr
in
jp
nop
rol
mov
xor
jo
scas
pop
or
mov
fadd
mov
xlat
in
push
outs
jns
(bad)
clc
push
push
icebp
aad
sub
inc
push
lods
clc
xor
cmp
call
repnz
xchg
or
push
gs
aas
nop
fnstcw
ret
adc
xor
jae
sub
cld
xor
xor
int3
jg
jo
sub
mov
cmps
and
or
(bad)
or
mov
or
dec
stc
(bad)
cmp
push
mov
popa
ins
mov
aam
scas
inc
mov
jle
stos
test
lahf
jmp
pop
mov
sti
leave
push
je
mov
pop
out
out
not
ficom
jg
dec
cmp
xchg
jmp
mov
mov
jge
sti
call
enter
push
leave
into
pop
lods
popf
in
nop
inc
data16
shr
jecxz
pop
enter
les
dec
add
cwde
retf
pop
adc
mov
popf
in
cdq
dec
dec
adc
popa
lock
mov
frstor
lock
fistp
and
mov
adc
stos
leave
aam
(bad)
nop
mov
shl
dec
xchg
jbe
pop
rol
mov
pop
and
and
cmp
repz
sbb
hlt
leave
xor
mov
adc
jmp
loopne
arpl
popf
rcr
cwde
out
aaa
clc
mov
push
and
pop
aaa
push
mov
push
daa
fcomp
pop
mov
add
imul
mov
xor
adc
and
adc
popa
movs
push
outs
rcl
adc
pop
fs
cmp
sub
and
iret
fs
push
sbb
adc
mov
jecxz
fs
icebp
into
test
jp
test
sub
xor
jmp
pop
imul
cwde
rol
je
iret
loope
mov
cmp
mov
in
fs
adc
dec
test
stos
inc
xchg
add
fdiv
mov
mov
call
imul
sar
sub
sub
pop
xchg
adc
jnp
fnstcw
mov
mov
aam
test
jo
cmp
inc
add
or
jmp
rcr
int3
mov
call
test
push
icebp
dec
mov
or
xchg
pop
es
in
push
push
imul
pop
mov
je
mov
inc
(bad)
and
jo
dec
iret
fbstp
jmp
mov
movs
pop
lods
(bad)
mov
cwde
pop
pop
iret
es
push
fcomp
jmp
aam
lods
sub
(bad)
push
jb
jnp
ins
inc
cmc
iret
mov
mov
lock
(bad)
dec
adc
popf
xchg
aad
and
pop
push
inc
mov
loopne
or
outs
test
or
xor
rcr
jecxz
mov
add
cmp
daa
xchg
pop
xchg
adc
add
push
repnz
mov
push
xchg
js
dec
pop
inc
adc
cmp
mov
lds
jg
sub
arpl
aad
les
gs
mov
inc
out
xchg
in
sbb
push
daa
test
or
push
cmp
mov
adc
scas
jle
pushf
adc
jno
sbb
xor
jae
dec
inc
aad
sar
xor
mov
aaa
mov
mov
fimul
les
push
repz
and
cmp
out
jl
dec
mov
cmp
push
adc
push
push
xor
mov
inc
sbb
inc
cdq
dec
repz
lock
jg
je
xor
fcom
sbb
or
icebp
xchg
jge
call
mov
loopne
or
mov
or
adc
int3
cmp
sbb
add
loop
lds
pushf
js
(bad)
mov
js
mov
cmp
aas
push
in
pop
lds
scas
test
sbb
lods
sar
add
repz
das
movs
(bad)
test
popf
das
ins
shr
push
mov
pop
cmp
push
cmps
loope
data16
xor
stos
push
sub
jle
xor
js
pop
pop
fsub
jl
mov
sar
aas
sub
mov
adc
jl
pop
in
clc
dec
xchg
enter
int
int3
push
and
sub
cmc
mov
pop
(bad)
popa
cmp
(bad)
fst
mov
dec
and
loopne
sbb
push
mov
add
xchg
push
and
mov
jl
add
pop
daa
scas
fwait
pop
fs
xor
sar
cli
mov
push
jmp
pop
adc
fstp
sub
(bad)
std
pop
dec
fucomp
xor
bound
imul
(bad)
inc
outs
icebp
movs
xchg
xchg
daa
int3
jmp
push
sub
pop
pusha
sub
mov
inc
lods
shl
das
cli
wbinvd
mov
(bad)
or
ret
pop
inc
lods
fwait
jecxz
adc
push
push
cli
movups
movs
push
sbb
lahf
and
cmp
ret
mov
adc
test
push
mov
dec
mov
lods
xor
mov
test
rol
inc
xchg
dec
push
rcl
jb
cmp
not
jmp
arpl
cmp
add
dec
ss
xchg
push
pushf
inc
sbb
je
pop
jp
mov
neg
and
cdq
shr
push
test
ficom
cmps
arpl
ret
xchg
fldenv
xor
cmc
add
dec
mov
loopne
(bad)
cdq
push
or
cwde
mov
sbb
push
test
push
data16
mov
adc
fidivr
adc
fwait
sbb
mov
dec
sbb
shl
(bad)
repnz
cmp
stc
push
loope
push
inc
inc
push
dec
cs
and
lock
jmp
daa
mov
addr16
and
dec
fmul
ins
clc
cs
dec
and
sbb
aad
pop
stc
jge
js
lds
out
aam
iret
xchg
cmp
xor
fdivr
cmp
xchg
mov
jns
popf
and
lahf
cmp
inc
fwait
fwait
sar
pop
sbb
rcr
jl
mov
xor
xor
into
dec
iret
xchg
inc
push
jecxz
mov
popf
div
outs
push
xlat
es
xor
mov
mov
dec
mov
jo
xchg
mov
(bad)
in
test
ins
inc
sbb
or
push
loop
pop
fistp
cmp
and
stos
jecxz
(bad)
and
lock
cwde
retf
pop
sti
jl
and
push
or
jae
icebp
cmp
jns
data16
mov
cli
xor
and
sahf
add
stc
jl
les
ficom
call
fisttp
mov
xor
icebp
adc
push
outs
add
cmp
cwde
adc
shl
fisub
mov
stos
push
and
jecxz
cld
(bad)
sbb
ret
add
inc
pushf
loope
pop
aaa
es
mov
xor
(bad)
sbb
jb
adc
mov
cmps
or
push
clc
mul
pop
and
adc
xchg
fld
mov
xchg
adc
outs
fild
and
test
jge
fld
inc
pop
test
fs
mov
iret
fwait
push
sbb
out
in
pop
push
mov
pop
adc
adc
jbe
jae
push
enter
loop
push
sub
out
sahf
and
idiv
movs
repz
push
xlat
sti
push
pop
dec
jns
lods
into
js
(bad)
sar
loop
stos
mov
dec
mov
fdivrp
jg
and
mov
pop
sbb
mov
idiv
or
xchg
inc
repz
rcl
mov
push
std
xchg
ret
scas
inc
nop
jge
pop
(bad)
mov
or
jbe
jnp
mov
out
ja
(bad)
mov
jnp
repz
icebp
add
jmp
mov
sbb
je
out
jmp
int
outs
ins
push
ins
push
loope
mov
and
ds
push
pusha
scas
sar
xchg
popf
loop
inc
adc
xchg
push
ins
iret
xor
pop
not
outs
movs
into
mov
sub
lods
xchg
fsubr
push
mov
leave
shl
es
js
imul
mov
mov
jmp
and
(bad)
mov
js
clc
cli
ja
mov
cs
dec
test
cmp
dec
inc
push
shr
mov
cmps
jmp
xor
cmp
fst
test
or
into
mov
lods
out
mov
dec
sbb
add
out
jno
xchg
inc
lea
cmp
push
jle
retf
ror
movs
(bad)
xchg
mov
lock
pop
lea
outs
xchg
sbb
jl
icebp
xchg
adc
leave
cmp
mov
push
leave
iret
pop
add
lock
mov
out
mov
cs
fisttp
cmps
xrelease
call
cmp
or
popf
sub
je
retf
ins
jmp
push
jb
scas
test
mov
pop
aaa
enter
paddd
les
leave
mov
mov
aaa
jp
pop
or
loopne
push
das
ret
add
dec
test
mov
mov
clc
call
ins
pop
adc
jmp
mov
rcl
clc
loop
adc
or
fbstp
add
xor
add
xchg
popf
rcr
inc
mov
and
(bad)
push
ficom
inc
cmps
popf
sbb
lods
outs
sbb
cmp
outs
repz
iret
cmp
adc
push
mov
cs
mov
mov
je
mov
cli
mov
or
fnsave
and
xor
sbb
hlt
mov
(bad)
int
and
pop
int
mov
aaa
add
mov
adc
pop
inc
or
dec
out
pop
pop
std
popf
sahf
(bad)
je
or
ret
or
jne
mov
dec
push
add
push
movs
pushf
out
das
test
mov
adc
aas
add
lods
fiadd
and
pop
(bad)
dec
sti
mov
sbb
in
stc
movs
in
jno
into
pop
mov
push
xchg
in
inc
pop
and
(bad)
cld
loope
mov
or
sahf
(bad)
aam
loopne
push
bound
add
inc
cmp
lahf
cli
jne
test
das
and
mov
loope
pusha
push
or
mov
(bad)
fs
shr
dec
pop
push
mov
jae
dec
mov
inc
cld
pop
pop
or
lock
in
fild
inc
jl
fst
or
retf
nop
popa
out
mov
in
or
lds
cmp
fmul
pop
lods
xchg
adc
lds
push
aam
popa
pop
jle
pop
ins
jge
jecxz
imul
btr
dec
jmp
lahf
imul
test
test
leave
gs
jg
ins
aam
sub
aaa
inc
jmp
scas
adc
outs
add
mov
xor
push
out
fcom
pushf
sub
mov
std
jl
dec
dec
or
je
xor
rcl
stos
sti
push
xor
xor
rol
data16
xor
mov
and
xchg
push
rol
jb
icebp
xchg
push
sub
test
dec
fsubr
inc
repnz
add
push
mov
xor
inc
stos
ret
add
and
out
mov
dec
xor
or
scas
cmp
xchg
fldenv
dec
mov
ficom
std
cmp
lds
or
ror
xor
ins
sbb
addr16
cmps
mul
retf
je
cmp
loopne
loop
repz
pop
mov
and
mov
cmp
and
jae
pusha
cmp
inc
mov
std
xor
ror
xchg
loopne
sbb
das
gs
push
repnz
stos
pop
loope
pop
in
mov
call
mov
cmc
or
shl
mov
int
xchg
jae
xor
into
rcl
cmp
pop
sbb
in
push
jno
pusha
mov
pop
xor
lahf
imul
inc
inc
mov
test
or
sub
adc
mov
sar
mov
test
imul
std
movs
sub
jne
mov
leave
shl
xchg
pop
sbb
(bad)
mov
xchg
lds
mov
jbe
dec
mov
jb
popf
push
icebp
push
paddq
pop
movs
arpl
jns
rol
daa
inc
in
push
push
dec
sub
and
out
adc
cmp
sti
jg
jbe
jp
cli
jle
xchg
jmp
xchg
(bad)
stc
or
jno
stos
retf
dec
mov
(bad)
imul
les
fnstenv
leave
iret
das
mov
lock
loopne
push
clc
cmps
dec
enter
js
add
test
sub
aad
mov
shr
xor
into
test
and
fwait
and
inc
inc
push
xor
or
xlat
jp
add
js
dec
cwde
pop
cmp
sti
int3
lahf
and
lods
jb
movs
repz
jnp
jecxz
out
fst
iret
push
out
test
jmp
(bad)
adc
sub
xor
or
jo
adc
mov
test
or
cmp
in
(bad)
and
jg
fbstp
cmc
(bad)
cdq
or
icebp
jno
mov
mov
(bad)
push
jae
scas
mov
retf
sub
mov
out
jbe
add
and
push
jmp
mov
(bad)
in
retf
pop
inc
inc
shr
mov
mov
icebp
int
(bad)
jmp
pop
sub
mov
outs
sbb
pop
mov
or
ss
je
cmp
adc
ins
mov
jns
jae
and
enter
adc
push
push
inc
push
inc
inc
pushf
es
movs
sar
scas
ss
cmp
je
ss
ja
shr
iret
cmp
jns
in
add
(bad)
(bad)
push
scas
movlps
pop
mov
in
jns
sti
nop
jo
mov
inc
das
jne
lahf
xor
inc
test
in
rcr
adc
xchg
fistp
shl
neg
mov
xor
outs
ins
jecxz
stos
pop
ja
scas
and
movs
mov
les
rcr
fist
sbb
fsubr
iret
bound
push
adc
push
pop
cwde
pop
push
push
loop
inc
jmp
dec
inc
or
in
pop
frstor
push
dec
pushf
jge
dec
rol
inc
iret
movs
push
fld
rcr
outs
repnz
fdiv
aaa
xor
push
pop
out
cmps
nop
push
ret
xor
imul
jp
jecxz
push
sub
sbb
or
out
push
adc
pop
ins
pop
pop
ja
(bad)
cmp
(bad)
rol
ds
sub
rol
adc
shl
test
sahf
pop
sub
leave
js
leave
aam
mov
sbb
xor
adc
pushf
add
xlat
pop
xor
mov
cmp
aam
fdiv
xlat
jp
jne
(bad)
cmc
pop
dec
inc
mov
stos
out
and
stc
cmc
repz
sbb
inc
pop
jbe
dec
pop
dec
out
pop
cmp
jb
sub
jno
pop
fist
adc
jg
nop
mov
add
or
pop
enter
mov
dec
pushf
sub
in
inc
or
dec
fs
cmp
jl
sbb
shl
inc
jmp
(bad)
repnz
mov
aad
shl
outs
paddw
jne
pop
xlat
push
fxch
xor
fldenv
mov
inc
push
das
xchg
inc
push
add
or
pop
adc
sub
mov
test
xchg
ss
aad
mov
jmp
mov
sub
gs
ret
xchg
mov
ss
stos
sti
call
loope
aam
stos
jle
(bad)
gs
outs
fld
cmp
push
ins
in
mul
cwde
xor
out
loop
fld
mov
in
shl
shr
and
cmp
add
js
jne
xor
clc
lods
stos
adc
pop
int3
jo
and
jno
and
out
sbb
data16
add
aaa
inc
add
push
inc
push
push
inc
inc
dec
or
sbb
xchg
inc
add
mov
xchg
mov
stc
js
loop
in
imul
mov
push
xchg
in
dec
mov
ss
push
mov
je
inc
(bad)
fstp
or
mov
imul
lea
lahf
mov
cld
sub
loope
inc
cmps
hlt
fist
xchg
popf
movs
int3
push
pop
mov
jbe
dec
(bad)
and
jmp
dec
ficom
mov
rcr
dec
cs
js
adc
xchg
or
call
cmp
push
ja
mov
leave
sub
pop
out
jbe
pop
movs
jecxz
shr
inc
mov
sub
out
xchg
stc
cwde
cmps
dec
enter
mov
das
xor
mov
cmp
cmps
retf
adc
pop
neg
stos
xor
call
aaa
and
arpl
and
push
fdiv
cmp
hlt
out
push
jnp
xor
in
test
(bad)
loopne
cs
mov
(bad)
test
ret
cli
add
push
shl
addr16
xchg
ss
jb
push
icebp
stc
and
jmp
aas
dec
push
dec
mov
retf
ja
mov
cwde
pop
add
adc
adc
mov
fstp
loopne
xchg
push
xor
sbb
fcomp
fs
pop
test
out
adc
push
mov
sub
or
jl
inc
and
sub
xor
xchg
mov
pop
rcr
ret
jmp
cs
dec
scas
pushf
mov
inc
call
add
ss
pop
xor
cmp
iret
jl
rcl
sbb
xor
test
pmaxub
fld
ja
movs
movs
scas
rol
js
ins
jmp
retf
fadd
fsincos
jle
xchg
jo
fs
adc
mov
mov
sub
xor
mov
pop
retf
mov
mov
add
lods
mov
fcom
or
iret
sbb
lods
push
mov
sub
inc
loope
and
or
mov
sub
ss
mov
dec
mov
ins
in
loop
mov
or
inc
xor
adc
jle
mov
aaa
xchg
cmp
jae
fucomi
jb
mov
jmp
sti
fwait
mov
outs
fcom
cmp
and
push
sbb
in
mov
cli
loop
dec
mov
retf
fldenv
mov
push
add
add
push
cli
mov
mov
jle
sub
out
push
(bad)
fwait
lahf
pop
sbb
mov
mov
ins
adc
mov
xchg
sub
sbb
push
xor
sub
das
add
mov
or
xlat
sbb
pop
adc
fwait
sub
loop
test
and
leave
mov
ds
pop
mov
pop
(bad)
clc
nop
sub
pop
sbb
add
mov
enter
gs
push
jmp
push
pop
gs
push
cmp
cld
add
pop
xchg
or
ins
or
mov
pop
aas
loope
in
and
push
mov
push
and
popa
aam
mov
mov
mov
push
sbb
(bad)
fistp
adc
ror
ja
xor
and
push
jmp
sub
push
or
scas
imul
addr16
add
adc
fstp
push
daa
pop
mov
jle
dec
jmp
push
jmp
mov
jns
xchg
jae
popf
xchg
das
xchg
jnp
(bad)
loope
pop
shr
out
push
(bad)
sbb
arpl
mov
stos
imul
gs
ret
call
add
out
mov
nop
mov
jp
js
(bad)
gs
xor
call
push
ins
ja
bound
lods
jb
push
push
and
gs
hlt
xchg
mov
in
push
sbb
aas
mov
mov
pop
cmc
enter
mov
repz
or
add
adc
jmp
add
xchg
mov
aaa
and
enter
sub
jbe
mov
adc
cld
mov
out
(bad)
movs
das
rcl
xor
xchg
dec
xor
nop
mov
add
inc
or
push
jnp
cmps
and
js
push
push
mov
mov
push
push
adc
(bad)
xchg
xchg
jb
xchg
fwait
push
(bad)
imul
xor
out
inc
pop
loop
adc
stos
lea
sub
jae
adc
imul
xlat
push
outs
imul
imul
rcr
and
test
jno
jne
inc
mov
stos
pusha
jo
adc
into
mov
xchg
div
pop
ret
pop
iret
mov
fwait
shr
inc
fdivr
lods
lock
jne
ficom
(bad)
lock
aas
nop
fcom
mov
or
pop
inc
mov
xor
stos
dec
add
nop
inc
add
pop
mov
in
mov
inc
push
daa
(bad)
in
sub
lea
cmp
scas
or
and
pop
(bad)
loopne
loope
mov
xchg
xor
push
imul
or
ret
jne
inc
cmps
stos
imul
aam
xor
imul
mov
inc
push
jle
call
jb
sti
call
mov
je
mov
lahf
add
inc
mov
mov
jmp
sbb
fimul
jns
iret
stos
xchg
cmp
mov
mov
sub
ss
je
xor
repnz
ficom
mov
xor
hlt
dec
adc
cmp
cmp
cdq
(bad)
call
push
xchg
not
(bad)
aas
es
cs
aaa
je
out
sbb
mov
add
xor
jle
or
add
retf
leave
adc
das
dec
pop
sbb
cmp
add
rcl
in
test
dec
fucomip
dec
inc
jmp
cmc
fimul
pop
jnp
dec
fist
scas
dec
push
mov
xor
xor
mov
xchg
or
pop
dec
hlt
retf
sahf
cmp
outs
add
inc
iret
retf
sub
test
fnstsw
mov
mov
xchg
fimul
(bad)
sub
sar
out
mov
or
cmp
dec
xchg
data16
mov
pop
aam
xchg
bound
sbb
mov
push
dec
test
fist
xor
sbb
pop
(bad)
in
jmp
dec
xor
fcmovb
fstp
mov
in
sbb
adc
out
out
nop
dec
dec
mov
or
sub
(bad)
pop
dec
sbb
add
sbb
push
int3
outs
add
push
xor
rcl
aas
xor
mov
or
mov
mov
repnz
add
shl
mov
call
jecxz
mov
xchg
sar
dec
pop
adc
mov
inc
out
out
jmp
jnp
sar
mov
mov
fidivr
ror
imul
xor
dec
push
(bad)
rcl
outs
mov
mov
adc
push
sub
add
jmp
int
dec
xchg
arpl
mov
add
jno
adc
dec
and
pop
mov
cli
xor
leave
out
or
xlat
stc
dec
shr
xor
pop
xchg
xor
push
xchg
gs
jle
add
movs
mov
adc
fcmovne
and
repnz
xor
sar
push
add
xor
jae
pop
call
es
pop
daa
pusha
pop
adc
or
pop
cmp
jl
nop
jp
cmc
popf
(bad)
rcr
mov
add
and
add
stos
xor
std
adc
mov
fsub
imul
(bad)
int3
mov
mov
jbe
adc
pop
stos
gs
ja
cmps
out
loopne
jo
(bad)
mov
test
and
push
jmp
xchg
dec
push
pushf
push
scas
push
pop
push
sub
lods
sub
pop
sbb
mov
adc
int3
mov
add
inc
repz
mov
movs
and
push
add
cmp
xlat
or
adc
aad
repnz
mov
push
fs
dec
jo
or
les
je
popf
and
inc
pop
mov
xchg
loope
js
cmp
mov
sub
ficom
arpl
scas
das
mov
ret
add
adc
fcomp
push
sbb
mov
sub
pop
ja
and
adc
loope
inc
or
inc
or
xchg
rcl
idiv
jge
dec
mov
mov
xchg
jecxz
fldcw
pop
xchg
(bad)
cld
mov
xchg
cmps
js
cmp
and
xor
int3
add
mov
enter
mov
and
dec
cld
movs
and
popf
cmp
add
adc
inc
mov
jae
movs
jecxz
sbb
fwait
jg
in
pusha
loope
enter
mov
(bad)
imul
push
cmp
mov
cli
xor
or
or
cs
mov
fwait
retf
inc
popa
rol
add
sbb
int
sub
dec
fldenv
cmc
test
gs
enter
xor
stos
push
out
icebp
push
jl
mov
mov
sbb
out
nop
retf
ins
xchg
push
movs
dec
push
xor
pop
(bad)
leave
movs
frstor
and
sbb
push
jl
dec
cmp
jge
push
lods
lods
mov
pop
ret
test
enter
or
movs
jb
loope
mov
jno
adc
jmp
ret
mov
pop
cmp
lahf
mov
popf
or
adc
icebp
push
inc
add
or
push
addr16
imul
jnp
movs
cmp
sub
xchg
popf
adc
call
add
sub
pop
cli
div
dec
mov
and
push
pop
xchg
cmp
add
jae
je
cli
inc
inc
dec
loopne
(bad)
push
loop
cmc
pop
mov
dec
daa
push
sub
add
aas
mov
pop
lods
cmp
push
add
jl
inc
cmp
scas
push
scas
mov
dec
xchg
loope
mov
xor
rcr
jecxz
push
and
ds
inc
xchg
mov
xchg
stos
mov
jle
ss
and
pop
or
mov
stos
out
fs
jl
mov
sub
fs
pop
popw
pop
pop
jmp
mov
out
lahf
mov
mov
inc
mov
jmp
pop
cmps
stc
outs
cmc
fs
cld
cmp
jg
cli
arpl
dec
add
mov
xchg
lea
push
ins
sbb
enter
test
enter
fcom
push
adc
mov
mov
jp
push
in
out
stos
in
inc
fstp
dec
ficom
rcr
retf
mov
push
cld
xchg
outs
push
pop
loop
adc
shr
out
push
or
add
imul
shr
pop
lods
adc
jno
and
and
test
ss
pop
sub
in
(bad)
loope
lea
jb
mov
clc
pop
xor
mov
mov
test
or
popf
pushf
or
mov
dec
sbb
add
jmp
adc
ret
in
or
test
pop
(bad)
pop
hlt
test
jbe
(bad)
mov
outs
adc
cld
mov
sbb
into
ja
adc
popa
daa
mov
mov
bound
inc
inc
xchg
psubsb
call
inc
cmp
mov
jp
movs
loopne
icebp
test
mov
in
ins
lods
push
outs
bound
std
icebp
out
out
inc
stos
call
add
xor
push
shr
bound
cmp
shl
dec
(bad)
fbstp
clc
scas
inc
xchg
mov
inc
outs
ja
stc
inc
movs
or
jge
mov
push
mov
fsubr
xchg
mov
and
xor
mov
xor
mov
stos
pop
movs
or
mov
daa
pop
pusha
push
sbb
fnstenv
and
add
aaa
es
stos
or
out
imul
inc
addr16
fs
ja
cdq
retf
pop
ret
add
cwde
movs
sub
mov
xchg
jmp
ret
sub
pushf
inc
hlt
retf
mov
(bad)
jne
daa
clc
outs
dec
push
das
inc
in
mov
jb
mov
imul
ins
push
adc
pop
shr
mov
ror
sub
mov
cmp
movs
pop
and
(bad)
jno
pop
xlat
xor
jecxz
adc
mov
xchg
sub
lods
jb
pop
clc
(bad)
jno
(bad)
dec
fst
clc
dec
mov
in
mov
sbb
sub
pop
or
ror
mov
xchg
adc
jnp
stos
fild
xchg
jb
and
xchg
mov
imul
jnp
mov
clc
push
push
sub
sub
lods
das
xor
jp
lods
mov
dec
nop
push
mov
bswap
lahf
inc
(bad)
out
shl
data16
jne
inc
retf
xor
popf
xchg
jle
sbb
cmps
rol
cli
cmp
jae
cmp
mov
and
adc
sbb
data16
out
jns
aas
rol
outs
xor
sub
adc
and
rol
xlat
mov
inc
sub
mov
jmp
inc
minps
xchg
ja
pop
popf
and
sub
or
xor
sbb
(bad)
call
enter
xor
dec
scas
jbe
stos
adc
dec
jno
stos
cmp
(bad)
dec
cld
aam
xor
mov
vcomisd
jmp
jno
arpl
push
push
push
mov
dec
rcl
mov
sub
adc
shl
jmp
pop
mov
idiv
mov
cmp
shl
mov
jmp
jno
cmc
and
xchg
mov
into
pop
retf
(bad)
in
or
call
lahf
repz
cli
push
cli
sbb
adc
outs
sub
mov
mov
(bad)
cmp
gs
ja
inc
inc
repz
aaa
lods
push
scas
enter
mov
repnz
and
pop
es
jmp
retf
imul
and
sbb
dec
mov
pop
adc
enter
push
add
push
jnp
xor
call
cmp
addr16
fiadd
jge
ins
push
and
(bad)
mov
(bad)
jmp
and
cli
inc
das
shl
mov
ret
test
sbb
cwde
inc
neg
out
cmps
cs
or
mov
xor
leave
(bad)
pop
cmps
and
or
int
sbb
sbb
mov
sub
cmp
in
cmp
fs
sti
mov
and
mov
shl
loopne
icebp
shl
adc
xrelease
fwait
mov
ret
std
xchg
dec
cmc
inc
fwait
mov
inc
adc
inc
xor
ret
and
sbb
sti
pop
dec
and
test
adc
jmp
cmp
daa
adc
fnsave
mov
in
idiv
retf
neg
xor
jbe
mov
scas
je
pushf
test
pusha
pop
repz
inc
cmc
inc
xchg
icebp
or
aaa
add
adc
repnz
fldenv
mov
inc
jge
sub
add
or
mov
out
mov
int
mov
jg
aad
xchg
jno
dec
aaa
xchg
imul
mov
push
mov
jns
xchg
sar
(bad)
out
add
sbb
push
mov
out
cmp
cs
cmp
mov
dec
pop
or
mov
xchg
add
dec
pusha
jmp
cmp
loopne
shr
jns
in
lds
xchg
jbe
jb
rcr
sub
mov
(bad)
xor
out
(bad)
ds
addr16
sbb
loopne
or
push
into
retf
int
pop
bound
and
int
push
hlt
sbb
adc
out
jecxz
pop
push
lds
mov
fdivrp
es
mov
jmp
lods
retf
jge
outs
add
lock
mov
jne
pop
hlt
fs
out
cwde
xor
mov
arpl
(bad)
pop
ss
pushf
pop
add
cmp
add
or
outs
addr16
sbb
pop
scas
das
and
test
dec
stos
add
xor
cld
mov
or
mov
xor
xchg
dec
xchg
fldcw
pop
and
push
ret
inc
mov
stc
imul
jp
cmp
pop
adc
ds
jae
stc
sub
or
dec
xor
mov
je
cli
push
mov
clc
dec
cld
loopne
jae
enter
pushf
inc
mov
retf
xor
repz
mov
fistp
cmp
push
pop
jb
cmp
(bad)
push
xor
(bad)
pop
cmp
jle
bound
push
arpl
jns
shl
shl
mov
lods
jne
or
cmp
aaa
call
pusha
xlat
call
dec
add
aam
sub
xchg
xchg
mov
fsub
fwait
lock
jp
int
scas
push
int
call
fwait
stc
ja
int3
inc
push
jecxz
xchg
dec
adc
dec
add
sub
lea
push
jns
int3
mov
dec
repz
scas
outs
movs
cmp
lds
and
and
mov
imul
cs
lods
adc
mov
popa
jnp
int
sbb
jmp
rcr
push
fld
xor
enter
push
in
mov
div
dec
jecxz
mov
cmp
aas
sbb
addr16
add
sbb
jecxz
stos
retf
or
and
rcr
(bad)
in
jg
sub
int3
shl
jle
dec
and
(bad)
(bad)
in
call
in
push
xor
into
xchg
(bad)
adc
mov
jle
sahf
movs
xchg
retf
jge
lahf
retf
(bad)
std
enter
lea
sub
adc
std
sbb
retf
dec
jecxz
(bad)
dec
loop
cmp
movs
dec
xchg
daa
int
ins
nop
cmp
and
pop
(bad)
sbb
stos
xchg
mov
rcr
in
add
gs
aam
(bad)
mov
popa
ins
arpl
pusha
repz
ror
out
das
cmp
xchg
fwait
shr
icebp
in
jecxz
scas
cmp
out
dec
inc
push
dec
mov
call
jecxz
data16
and
ror
(bad)
addr16
and
ret
enter
dec
mov
hlt
pop
jo
mov
stc
or
sub
add
fistp
push
pop
dec
sahf
push
add
fisubr
mov
pop
cld
bound
sbb
lock
lds
inc
cmp
and
hlt
fist
movs
pop
pop
stos
adc
andnps
cmp
adc
dec
push
dec
or
in
ror
mov
inc
inc
lahf
jb
fld
mov
lds
xchg
rol
and
dec
fcomp
mul
sbb
lods
mov
cmc
inc
mov
outs
adc
out
xor
(bad)
xchg
fisub
jp
aam
test
mov
jl
stc
aaa
mov
fild
pop
pop
out
pop
adc
iret
jge
cmp
test
aam
imul
and
hlt
cmp
gs
cmp
xor
push
fs
pop
popa
cmp
pop
mov
inc
or
mov
shl
xor
bound
sti
and
lahf
lds
aad
fidivr
xchg
dec
xchg
inc
popf
nop
xlat
scas
push
sub
sbb
ins
outs
pop
inc
sub
cmps
bound
cmc
cmps
cmp
and
stos
inc
jno
cmp
test
sti
loope
(bad)
jecxz
cld
mov
sti
mov
out
add
adc
jmp
pop
loope
jno
push
jns
jle
xchg
bound
and
pop
pop
leave
pop
das
pop
add
inc
jmp
cmp
in
in
jnp
ffreep
bound
pop
add
sub
ret
fistp
mov
xchg
lahf
lods
loope
test
jb
inc
int3
push
jnp
mov
leave
push
mov
lods
shl
pop
pop
sub
in
out
aaa
pushf
xchg
cmp
frstor
pushf
inc
gs
or
pop
popf
js
xchg
(bad)
popa
addr16
xchg
in
jg
sub
mov
cli
popf
jo
pop
add
add
xchg
jbe
fsub
xor
sbb
aad
xchg
pop
inc
sub
inc
popa
fstp
add
xchg
out
imul
inc
push
xchg
xchg
lods
inc
dec
mov
aam
ins
cli
lahf
stos
cld
cmp
fwait
in
in
lods
dec
aaa
jmp
daa
xchg
cld
xchg
inc
and
ins
cmps
jle
leave
adc
cld
sub
jecxz
imul
dec
shl
adc
and
xor
shl
cmc
push
(bad)
cmc
push
arpl
xor
adc
icebp
lock
sub
das
jae
jbe
in
pusha
adc
mov
inc
jg
daa
sub
sahf
push
push
ins
xor
cmc
mov
jns
mov
adc
enter
push
mov
ffree
cmc
dec
scas
and
push
push
fcmovnbe
sbb
pop
dec
into
ret
std
fdivr
scas
jmp
jno
mov
aas
mov
fdivr
inc
imul
(bad)
cmp
sub
imul
pusha
mov
mov
cld
jne
scas
ss
pusha
loope
and
lahf
adc
fisttp
sub
mov
xor
xchg
jp
ins
ja
call
pop
pop
mov
mov
cli
rcr
pop
test
and
shr
cmp
dec
test
pop
jmp
jne
test
pop
ret
imul
jne
pop
fwait
mov
(bad)
ror
jg
data16
nop
sub
sbb
add
pop
les
hlt
and
addr16
sbb
bound
add
jge
cmp
mov
jne
add
(bad)
lock
data16
xchg
outs
adc
aad
mov
add
data16
sbb
pop
repnz
jb
ds
inc
imul
pop
fld
pop
shl
mov
xchg
jns
inc
(bad)
xchg
xlat
call
dec
xor
lods
jo
std
enter
xchg
popf
pop
ss
fcomi
ds
ret
movs
or
xchg
inc
pusha
cmp
mov
in
push
ficomp
(bad)
aad
push
cld
and
movs
fbld
xchg
pop
dec
xchg
int3
bound
outs
fidiv
iret
into
nop
and
fisub
cmc
loope
sbb
and
std
(bad)
jbe
pop
push
shl
into
enter
cs
or
gs
xchg
mov
pusha
fadd
fsub
scas
jns
or
test
cli
dec
xor
lahf
mov
push
inc
fistp
inc
jo
mov
mov
cwde
and
pop
es
or
xchg
xchg
push
cmp
xor
cmp
inc
int
pop
and
jle
mov
pop
test
jo
pop
push
shl
sub
adc
mov
jbe
test
int3
call
xor
mov
lds
lods
cmp
xor
sahf
and
ss
add
les
xchg
outs
sahf
xor
fisttp
ins
std
mov
scas
xor
push
mov
scas
push
(bad)
clc
jp
xchg
sahf
out
js
lea
push
enter
and
inc
popf
ins
mov
push
push
(bad)
and
xchg
or
aad
mov
dec
(bad)
movs
nop
test
add
push
lock
in
jmp
sbb
adc
and
pop
mov
ins
sub
xchg
push
pop
push
test
fnstenv
adc
test
sub
and
xlat
int3
mov
xor
mov
stc
into
mov
mov
ss
inc
cdq
das
mov
mov
shl
xchg
cmc
dec
sub
mov
cmp
mov
dec
dec
mov
sub
dec
inc
inc
shr
cmp
das
xor
add
in
add
adc
int
mov
mov
lahf
sub
lods
mov
push
gs
outs
cmp
in
jmp
or
mov
jge
js
daa
and
jbe
sub
call
xchg
rcl
(bad)
lock
clc
js
in
sub
pop
ss
pusha
das
movs
push
dec
sahf
scas
movs
outs
out
jns
mov
xor
aad
js
and
div
stos
sub
pop
xchg
ror
push
lods
lods
cmovne
fisub
fwait
mov
adc
sti
(bad)
enter
or
pop
and
jbe
aam
stos
jmp
push
fwait
sub
test
call
xor
addr16
cmp
add
lods
retf
inc
mov
std
xor
sub
adc
shl
movs
cmp
in
cmps
scas
es
enter
and
(bad)
sbb
retf
aam
push
mov
gs
push
stc
loop
ret
pop
xchg
pop
out
popf
pop
or
cld
or
imul
hlt
dec
inc
xchg
push
pushf
xor
cld
sbb
retf
add
addr16
(bad)
xchg
test
inc
into
mov
cmps
cli
lods
sahf
ins
jno
jb
loopne
idiv
or
or
in
push
jmp
jecxz
inc
(bad)
cmp
repnz
push
ror
cld
jle
imul
pop
imul
das
push
adc
fdiv
mov
clc
daa
call
jnp
int3
fnstenv
mov
mov
cwde
mov
dec
cmp
scas
fst
pop
push
jno
jae
mov
sahf
or
bound
pusha
leave
push
mov
and
mov
(bad)
inc
pop
arpl
inc
dec
ins
popa
jp
sbb
jge
mov
js
inc
ja
push
and
gs
or
sbb
inc
daa
nop
frstor
pushf
repnz
dec
cli
(bad)
jl
mov
jmp
xor
jg
mov
cmp
out
rcr
shl
pusha
push
add
sbb
mov
pop
scas
(bad)
jmp
inc
out
fisubr
jge
xchg
dec
cmp
mov
inc
imul
hlt
mov
and
mov
test
mov
(bad)
ror
push
mov
jle
pop
sar
mov
fst
test
fild
fwait
fs
and
aad
loopne
lahf
test
xchg
in
dec
jmp
mov
out
and
pop
rcl
pop
or
push
mov
lahf
imul
imul
fstp
xchg
sahf
leave
lahf
xor
inc
les
add
mov
sub
add
mov
daa
shl
inc
push
dec
jmp
jmp
and
call
add
pop
clc
leave
cmps
fisttp
xchg
jae
leave
sub
nop
test
scas
fwait
push
xchg
lods
add
fisubr
xchg
sbb
jne
popa
rol
out
dec
xchg
mov
jecxz
xchg
jne
ins
out
dec
jmp
pop
js
mov
rol
jp
sahf
mov
cli
cmp
adc
mov
xchg
mov
mov
int
mov
add
scas
add
inc
aad
setl
pop
mov
adc
mov
lods
shl
scas
mov
xchg
sub
call
mov
repz
add
and
adc
add
mov
adc
das
and
dec
out
addr16
lods
gs
jge
popa
or
das
(bad)
out
out
int
fmul
mov
repnz
or
call
es
mov
(bad)
es
stc
mov
pop
xor
popf
mov
retf
cs
push
jmp
add
dec
xlat
sbb
pop
xor
imul
xor
dec
not
cmp
lea
fidivr
mov
cld
or
xchg
stc
lahf
ret
mov
(bad)
in
lods
hlt
push
add
mov
jns
lods
scas
je
pop
dec
push
add
sbb
xchg
sub
call
push
int3
sub
icebp
scas
xchg
mul
ins
outs
ficomp
fnstcw
cmovle
or
ja
int3
lds
mov
outs
ins
push
bound
push
mov
pusha
mov
adc
(bad)
repnz
jno
das
sub
mov
add
mov
call
mov
add
inc
dec
push
xchg
mov
mov
sub
scas
push
in
aaa
mov
xchg
aas
and
adc
xor
and
js
xchg
je
push
adc
jecxz
mov
pop
pop
fdivr
cs
and
(bad)
xor
dec
call
stos
xchg
mov
mov
xchg
repz
push
inc
aaa
mov
dec
and
adc
fdivp
ret
lods
mov
out
into
fnstsw
mov
scas
movs
sub
in
push
stos
xor
push
test
(bad)
cmp
mov
mov
or
xlat
cwde
mov
loope
sbb
cwde
jmp
or
add
xor
psubusb
shl
mov
adc
data16
push
jg
push
mov
mov
dec
inc
add
fst
and
dec
cmp
aas
stos
or
mov
add
mov
sub
enter
iret
push
out
leave
dec
pop
cmp
inc
pop
or
lock
aas
sbb
cli
fistp
mov
dec
inc
jge
in
dec
sbb
push
sbb
jl
call
fmul
cld
fcomp
(bad)
aas
cmp
or
(bad)
jmp
push
dec
and
leave
scas
sti
test
imul
imul
mov
jo
sub
mov
ficom
and
pop
pop
mov
mov
je
in
inc
push
cli
push
mov
sub
inc
(bad)
xor
scas
js
(bad)
fldenv
sbb
inc
mov
popa
mov
int3
mov
cwde
fwait
or
or
cmps
rcr
and
mov
fistp
gs
xchg
add
rcl
loope
and
lahf
jbe
mov
imul
(bad)
loop
add
(bad)
sub
mov
mov
fisttp
and
mov
sbb
jge
sti
mov
mov
jp
addr16
outs
mov
mov
cmp
pop
jns
jnp
popf
inc
jle
ror
fsubr
(bad)
ja
jmp
(bad)
xchg
(bad)
fisub
push
dec
rcr
call
ds
pusha
xor
adc
(bad)
fadd
mov
and
or
cmp
sub
je
or
fsub
(bad)
fs
ins
sbb
xchg
cmp
adc
cmp
sbb
jnp
retf
int
inc
rcl
test
xor
(bad)
call
and
dec
mov
mov
loope
mov
add
test
xchg
out
xchg
cmp
into
pop
adc
dec
cmp
cld
xor
ins
dec
test
add
out
mov
ret
add
into
ja
imul
lds
sbb
in
mov
mov
loopne
int3
jecxz
das
shr
adc
and
add
push
movs
jnp
aaa
in
jl
mov
pop
push
call
cmp
mov
lods
mov
popa
push
xchg
(bad)
scas
add
pop
pop
jns
fnsave
xor
push
pop
ror
cmps
repz
lahf
in
push
movs
scas
mov
imul
in
gs
mov
std
or
ror
push
test
(bad)
mov
lods
ret
loopne
fstp
ds
and
pop
int
push
(bad)
out
js
inc
adc
out
in
arpl
aas
nop
in
dec
inc
sub
es
aam
ins
sbb
adc
and
paddq
pop
pop
jb
movs
fst
or
adc
fs
or
gs
push
or
mov
aam
movs
(bad)
es
popa
popf
push
std
xchg
pusha
adc
dec
arpl
inc
add
out
in
dec
ja
inc
cli
js
lea
aam
xchg
push
inc
ffree
mov
jns
jp
ins
addr16
das
(bad)
jp
in
pop
sbb
shl
mov
inc
push
push
xor
sbb
jmp
aas
mov
out
dec
sar
and
fcom
xchg
js
movs
mov
mov
add
mov
jge
enter
cmp
mov
(bad)
mov
cmps
xlat
pop
sbb
inc
xor
addr16
popa
cld
and
mov
add
add
outs
add
add
out
adc
jmp
pop
push
xchg
in
or
jmp
mov
cmps
mov
adc
movs
or
inc
sub
mov
loop
sahf
push
pop
out
cmp
in
aas
ins
sub
jge
mov
inc
arpl
fist
jge
add
movs
nop
lea
stos
mov
push
jmp
lods
dec
(bad)
push
add
and
jmp
cmp
js
lahf
inc
sbb
lds
or
inc
sbb
test
adc
mov
rcr
or
lea
cmp
fwait
dec
sbb
je
dec
aam
popf
sbb
xchg
xchg
mov
pop
cdq
pop
fstp
mov
(bad)
clc
jmp
xchg
pop
hlt
imul
scas
mov
ins
ror
mov
ror
jl
scas
fild
nop
aaa
mov
mov
out
outs
xor
mov
arpl
push
inc
add
jb
rcl
retf
sbb
cmp
or
mov
adc
jl
push
popa
xor
mov
lods
inc
mov
adc
jge
jbe
fldcw
lock
add
pop
sar
or
jo
dec
jnp
xchg
push
cmps
(bad)
cmc
xor
sub
sbb
retf
xchg
cmp
adc
das
inc
push
arpl
xchg
pusha
push
push
call
(bad)
push
aam
push
mov
(bad)
sbb
mov
scas
ins
adc
adc
mov
mov
jne
jo
in
repnz
in
enter
lock
cmp
push
call
test
jmp
fiadd
push
in
imul
dec
fild
sbb
adc
mov
dec
je
(bad)
ds
push
jecxz
mov
dec
dec
adc
mov
push
pop
scas
out
mov
jle
sbb
cdq
jmp
push
cmc
or
mov
ds
cs
rcl
mov
js
inc
fs
xchg
sbb
call
cmp
test
cmc
or
jl
xor
dec
gs
fnstenv
pushf
or
addr16
mov
pushf
xchg
sub
and
bound
pop
jmp
pop
pop
jne
ret
pop
cmp
(bad)
repnz
in
jns
js
inc
pop
sbb
fidiv
add
xchg
jp
cmp
rol
dec
inc
add
pop
clc
ret
int3
bound
xor
and
leave
mov
adc
int
mov
sbb
dec
push
jmp
add
stos
popf
xchg
test
test
(bad)
cmp
into
icebp
jnp
jno
xchg
push
jg
mov
cld
add
in
call
js
mov
arpl
jae
push
dec
mov
out
cld
mov
mov
push
out
cmp
push
stc
movs
cdq
mov
dec
fdivr
retf
push
dec
mov
aam
arpl
iret
mov
movs
sahf
mov
div
add
mov
mov
mov
fs
in
(bad)
in
mov
push
cmps
imul
es
mov
mov
mov
bound
call
xchg
jp
mov
add
stc
mov
sti
scas
lea
fwait
push
mov
call
lods
jae
int
loopne
and
sbb
pusha
(bad)
sbb
push
pop
sbb
inc
fidivr
cmc
push
xor
push
into
cs
mov
and
scas
push
pop
cmps
ret
mov
cs
jb
imul
xor
xchg
push
shl
cmp
pop
aam
and
cmp
inc
imul
adc
es
add
test
and
push
sar
sub
stos
pop
pop
sbb
and
mov
out
out
pop
adc
popf
cs
pop
mov
mov
lods
dec
mov
cmp
sub
hlt
adc
daa
push
call
mov
jp
xor
pushf
rcr
mov
cmovo
sbb
(bad)
fucomp
push
or
pushfw
xor
and
mov
bound
pop
cmps
fstp
xchg
lea
jns
xchg
pop
jg
sbb
add
mov
(bad)
arpl
retf
inc
cmp
and
push
fld
adc
jne
dec
sub
push
daa
mov
and
mov
test
mov
cmp
clc
(bad)
xor
scas
cmp
outs
sbb
dec
fwait
mov
xchg
lahf
vpshab
push
xor
dec
sahf
sub
imul
push
stos
adc
fisttp
clc
mov
adc
aam
and
sub
mov
xchg
imul
inc
test
cdq
push
sub
movs
cmp
aam
pop
push
(bad)
repz
or
and
adc
aaa
call
jmp
pop
lods
xchg
retf
div
and
outs
push
xchg
adc
cmps
lods
mov
lods
sbb
in
sti
jp
and
int3
mov
arpl
or
push
(bad)
xor
call
mov
loope
add
pop
sbb
push
loop
jl
mov
fmul
cld
out
mov
pop
cli
sub
or
cli
mov
push
mov
imul
mov
js
in
and
repnz
pop
adc
gs
adc
sbb
pop
mov
adc
(bad)
or
adc
xchg
and
pop
xchg
mov
inc
rcl
out
sub
add
ja
pop
sub
dec
xchg
arpl
bound
leave
jb
pop
adc
add
lods
ror
jp
lahf
(bad)
outs
or
mov
mov
xor
inc
cmps
xchg
push
dec
push
cmp
lods
add
retf
cld
add
cmps
push
lea
mov
shl
or
out
cmp
rol
mov
and
pushf
cs
sub
je
cmp
cmp
out
leave
in
repnz
lea
and
dec
rol
xor
sub
ins
mov
in
lods
sub
jl
movs
arpl
int3
xchg
mov
dec
dec
add
adc
sub
test
push
int3
adc
push
shl
data16
out
pop
and
adc
(bad)
fs
pop
ret
in
dec
jns
xchg
mov
jge
jmp
scas
call
(bad)
xchg
out
mov
cmp
in
adc
adc
push
jo
jmp
rcl
mov
sbb
sar
loop
mov
dec
and
(bad)
or
test
fs
(bad)
sub
shr
ja
jno
sti
xchg
push
push
sub
(bad)
push
pop
loope
xor
mov
movs
sbb
gs
xor
(bad)
bound
out
push
outs
pop
mov
out
or
push
inc
mov
lods
repnz
rol
adc
shr
sub
xor
lods
mov
and
fs
pop
mov
sti
ins
inc
mov
iret
ret
xchg
inc
popf
mov
loopne
pop
sub
push
sbb
mov
jno
stc
sub
cmp
mov
shl
mov
inc
rcr
fmul
ret
out
xor
sub
push
ss
sar
retf
pop
cli
out
push
test
cs
out
mov
cmp
fst
mov
cmp
xchg
neg
push
mov
pop
mov
(bad)
inc
mov
popf
leave
or
cmp
add
mov
ss
inc
cmps
sub
stos
mov
leave
push
fsubrp
inc
mov
cmps
sbb
das
cmc
test
test
jbe
mov
ret
outs
retf
and
test
jmp
inc
mov
cmp
mov
jne
push
jle
scas
inc
jae
out
js
ja
hlt
std
xchg
xchg
in
push
sahf
xchg
pop
dec
xor
pop
pop
jge
pop
dec
mov
xchg
mov
fld
push
mov
xchg
sub
out
call
aam
call
sahf
add
fistp
jns
ins
jle
mov
outs
cwde
(bad)
push
cmc
stos
push
pop
jle
mov
jecxz
arpl
xchg
call
cmp
in
js
xor
mov
jge
(bad)
and
sbb
adc
cmps
jp
loopne
fwait
into
push
imul
jno
gs
(bad)
imul
fwait
test
push
cwde
push
or
sbb
inc
dec
ja
push
push
rcl
lahf
test
cmc
pop
test
je
rol
hlt
fsubrp
pop
cld
ins
mov
mov
popa
push
retf
mov
push
or
push
test
imul
or
push
xchg
jl
pop
movs
retf
cs
pop
in
lfs
mov
inc
sub
adc
sub
jmp
mov
mov
push
movs
pop
sbb
cs
nop
jmp
sti
mov
and
jnp
(bad)
retf
dec
cli
js
or
loop
ret
daa
call
out
retf
xor
xlat
xor
cmc
cdq
and
repz
cwde
icebp
sbb
or
jg
test
and
and
dec
bnd
aam
fdiv
pop
lods
add
(bad)
xchg
bnd
(bad)
jmp
fs
shl
or
cmp
dec
call
sbb
sti
xchg
or
xchg
jo
mov
push
sbb
and
ins
fcmovb
inc
or
or
inc
inc
es
push
loop
bnd
(bad)
pop
call
ror
mov
pop
je
push
mov
inc
retf
icebp
mov
sbb
pop
pop
retf
lahf
aad
mov
sbb
add
sub
stos
(bad)
mov
je
xlat
bound
pop
push
stos
ds
jl
push
mov
dec
scas
(bad)
sar
bound
push
jb
fsub
mov
sub
repz
movs
add
xchg
and
fcom
jge
dec
loopne
div
loop
lods
pop
jg
pusha
jecxz
mov
and
inc
dec
sub
pop
aam
bound
in
push
fisttp
dec
enter
je
fsubr
jbe
dec
(bad)
out
push
(bad)
in
dec
adc
iret
call
ficom
push
xor
jnp
sti
inc
leave
lds
jle
retf
repnz
outs
into
pop
imul
xlat
hlt
mov
inc
int
in
pop
sub
push
repnz
rcr
push
adc
inc
adc
and
fdiv
int
xchg
loope
cmp
mov
xor
aas
enter
cs
cmp
adc
jns
outs
in
out
scas
pushf
ret
or
inc
loope
push
adc
loope
fs
ror
xlat
mov
retf
push
xchg
jb
push
pop
jb
arpl
inc
nop
mov
mov
fadd
mov
call
or
mov
sbb
jns
out
call
in
idiv
mov
dec
stc
lock
stos
xchg
sbb
inc
mov
push
and
jb
idiv
adc
fdiv
push
add
rcl
mov
sbb
retf
mov
ret
out
stc
jns
call
addr16
fwait
popa
jno
xlat
cmps
mov
dec
xor
jecxz
push
add
hlt
inc
idiv
mov
enter
dec
fwait
iret
out
mov
xchg
and
add
pop
sbb
mov
call
cmp
sub
push
sub
bound
xor
dec
cdq
fst
xor
and
sti
inc
(bad)
and
mov
jmp
movs
xchg
popa
sbb
or
xchg
cmc
inc
jns
mov
and
(bad)
shl
inc
mov
rcr
push
shl
in
jns
jbe
sub
mov
fcomi
das
xor
pop
les
push
pop
push
dec
mov
icebp
mov
jmp
ins
jmp
mov
mov
push
imul
pop
mov
xchg
xor
test
sub
imul
xor
movs
aas
out
jbe
cdq
mov
xchg
ror
mov
mov
cmc
popa
dec
and
stos
mov
bound
adc
or
call
gs
xor
sbb
push
jb
sbb
jo
xor
sbb
es
cmp
js
pop
dec
adc
push
cmp
cli
push
shr
and
pop
btc
jmp
sbb
cmp
fsubp
mov
mov
cmps
es
imul
outs
mov
nop
xor
lock
xchg
add
(bad)
pop
xor
mov
aas
daa
sti
sbb
out
das
adc
in
push
inc
call
sub
jbe
inc
retf
or
push
add
push
jl
adc
xor
xchg
out
jg
rcl
add
jmp
fwait
pop
retf
sahf
mov
lea
(bad)
inc
xchg
xchg
dec
xchg
(bad)
and
inc
popa
jmp
(bad)
pop
sub
loopne
adc
int3
and
in
out
loopne
add
and
popf
mov
in
in
or
out
call
pop
fbstp
and
popa
xchg
cmps
cmp
pop
cmps
or
pushf
ja
leave
push
fild
pop
mov
jl
jmp
(bad)
jne
pop
jmp
aam
mov
lods
add
adc
mov
mov
fiadd
rcr
or
sub
xchg
lods
aam
enter
fidiv
dec
pop
push
jp
imul
and
and
mov
jge
cvtps2pd
adc
mov
pop
jne
lock
sbb
ss
hlt
jo
lods
adc
mov
mov
aad
pop
add
cmps
aam
inc
mov
repnz
mov
pop
jo
push
mov
sub
dec
cdq
repz
das
sbb
pop
jo
xchg
(bad)
ins
xchg
int
xor
sahf
fbstp
fsubr
xchg
(bad)
or
out
mov
out
mov
pushf
shr
and
adc
mov
mov
fimul
cwde
sub
idiv
sti
inc
iret
repnz
and
push
jo
push
loopne
cld
arpl
inc
jo
lods
pop
sbb
jg
es
dec
mov
mov
mov
retf
test
fwait
adc
pop
mov
add
jmp
inc
jecxz
and
jnp
movs
cdq
mov
dec
jmp
jb
cmp
movs
and
push
inc
mov
js
aad
mov
xchg
enter
imul
xor
or
sub
xor
pop
daa
les
adc
shl
push
push
cwde
inc
lods
dec
loop
aam
std
aam
mov
and
sbb
icebp
xchg
mov
dec
xchg
cmp
int
aas
in
inc
jle
(bad)
xchg
and
jle
jb
jecxz
lock
not
retf
and
hlt
add
in
int
push
icebp
and
xchg
cmps
pop
imul
(bad)
mov
mov
mov
outs
(bad)
cli
xchg
sub
jae
add
cmc
scas
pop
(bad)
leave
daa
ss
pop
dec
sbb
test
add
pop
aaa
push
dec
push
in
retf
jl
sub
repnz
mov
xchg
data16
xor
sbb
dec
int
sub
(bad)
xor
sub
hlt
cmc
dec
ds
jo
bound
jle
inc
gs
mov
xchg
xchg
cmp
pop
sub
movs
loope
clc
dec
and
pop
pop
adc
outs
pop
and
mov
push
ins
xchg
mov
adc
push
mov
ret
packssdw
stos
lea
fwait
xlat
ds
test
mov
out
in
cmp
pushf
bound
push
loop
cwde
bound
je
inc
dec
or
xlat
lds
adc
jae
shl
mov
call
aam
stos
xchg
and
mov
test
or
xchg
mov
add
sbb
enter
mov
xlat
dec
(bad)
test
mov
ds
or
mov
mov
arpl
jb
std
push
push
aas
jge
cwde
pop
mov
pop
retf
ror
popf
jp
mov
mov
jne
call
push
rcl
loop
inc
push
jbe
sbb
icebp
sbb
data16
pop
lock
repnz
daa
and
imul
cmps
sti
leave
inc
rcl
hlt
mov
jno
push
shr
adc
dec
in
sbb
retf
push
adc
je
out
leave
jmp
mov
mov
sti
in
add
adc
loope
mov
inc
mov
push
sbb
pop
fld
out
nop
jg
dec
adc
mov
pop
mov
xchg
add
gs
sbb
mov
xchg
outs
and
push
jae
aam
cs
sbb
add
sti
in
lahf
leave
dec
iret
cwde
loope
inc
and
jns
(bad)
loopne
mov
inc
retf
jmp
push
sbb
add
popa
scas
and
jecxz
inc
stc
cld
or
ror
enter
xchg
mov
sub
dec
dec
pop
jb
jbe
enter
push
xor
imul
in
les
rol
lock
jae
adc
cli
sbb
retf
inc
and
sub
cs
cld
mov
test
jno
fsubr
fidivr
inc
pop
jnp
pop
icebp
les
sub
addr16
(bad)
cmp
ins
or
xchg
imul
add
inc
loop
jmp
dec
dec
mov
shr
loopne
sub
and
xchg
jbe
sbb
test
arpl
jl
jb
bound
cdq
scas
sub
je
ins
or
call
retf
push
cwde
addr16
test
sub
xchg
adc
(bad)
repz
sub
ds
sbb
frstor
inc
outs
push
movs
outs
sti
add
mov
ss
pop
dec
leave
out
int
pop
push
fstp
mov
jmp
jne
cs
mov
push
cmp
mov
mov
mov
jnp
adc
aaa
xchg
lods
push
pop
cmp
ss
dec
pop
mov
push
push
pop
dec
popa
(bad)
jmp
mov
aas
add
or
push
daa
enter
add
in
cmps
sbb
mov
xchg
sub
mov
or
fdiv
cmps
cmc
push
xchg
pop
dec
push
jnp
sbb
retf
mov
imul
fcmovnbe
mov
lahf
das
mov
data16
icebp
rol
aad
gs
add
pop
xchg
cmp
loop
test
cmp
aaa
inc
xchg
inc
dec
shl
adc
or
dec
mov
enter
ds
sub
in
into
jl
ds
scas
adc
inc
and
xchg
cmps
inc
int3
sahf
cmp
fdiv
daa
adc
out
clc
sbb
dec
ret
mov
fmul
test
inc
mov
xor
cmp
icebp
imul
aam
jp
popf
loope
mov
mov
xchg
jg
xor
shr
lahf
mov
jbe
call
hlt
push
lods
loop
call
fsub
mov
movs
pop
fld
sar
inc
icebp
jl
into
inc
clc
xchg
das
mov
sbb
in
ss
movs
push
mov
lea
and
pop
push
out
gs
mov
push
mov
mov
aas
(bad)
test
imul
aad
imul
inc
test
ss
lea
fnstenv
push
scas
and
mov
jecxz
inc
jnp
fwait
mov
ret
mov
adc
movs
clc
scas
test
add
pop
and
mov
icebp
and
fadd
sar
(bad)
sbb
mov
fdivr
add
mov
mov
stc
or
jge
push
sub
dec
ror
xchg
in
test
call
call
mov
push
mov
or
xchg
sbb
in
jge
or
pop
push
cld
and
adc
dec
cmp
call
sub
push
sti
rcr
pusha
(bad)
retf
in
pop
enter
arpl
lds
push
mov
dec
or
sub
or
jb
lods
retf
cwde
popf
pop
repz
sub
and
outs
ret
fsub
outs
jmp
outs
inc
fwait
je
jmp
jg
retf
mov
lods
std
iret
pop
xor
add
addr16
mov
xor
aam
inc
popa
add
cwde
pop
ss
push
jle
mov
mov
pop
fwait
out
(bad)
xchg
(bad)
fstp
or
daa
cs
lahf
pop
dec
push
sbb
dec
sbb
cdq
retf
xor
mov
cmp
inc
int3
sub
sti
mov
jecxz
add
(bad)
out
sub
jne
call
cs
les
mov
cli
mov
ret
je
dec
lahf
daa
and
bnd
cmps
fcmovnbe
mov
lods
xor
lock
ffreep
mov
shl
lods
cs
sub
rcl
push
cmp
push
cmp
hlt
popf
inc
sbb
mov
jbe
sahf
xor
repnz
mov
xchg
pop
adc
adc
imul
fimul
xlat
and
test
or
mov
xchg
leave
add
lds
jle
add
mov
mov
inc
aad
jb
push
mov
mov
inc
pop
fcom
or
mov
jle
and
repz
xchg
out
or
ret
movs
pop
aad
loop
inc
pop
popa
mov
sub
in
and
push
add
sub
call
pop
pop
ss
ss
jp
sub
xor
mov
lea
out
mov
fdiv
pop
mov
sbb
dec
icebp
stos
mov
pop
fdiv
push
jp
in
stc
lahf
call
repnz
jmp
hlt
push
and
imul
rcl
mov
push
lods
sub
pop
loope
call
xchg
jp
mov
gs
loope
cmp
and
loope
dec
pop
bound
ds
mov
pop
lea
jne
dec
cmps
and
stc
sbb
push
cli
cmp
stos
mov
arpl
xchg
jnp
fwait
outs
hlt
aas
xchg
repz
mov
jecxz
ret
mov
leave
sub
mov
ficom
sahf
sub
gs
mov
dec
rol
mov
outs
clc
out
mov
into
popa
jno
shr
scas
mov
dec
jae
xor
sub
mov
repz
retf
fwait
sbb
sahf
pop
leave
mov
cmp
jecxz
mov
std
ja
dec
add
sbb
inc
(bad)
xchg
aaa
in
mov
in
xchg
popa
add
push
sar
(bad)
fldcw
xor
fnstsw
dec
mov
dec
lock
xchg
sbb
ja
dec
pop
rcl
mov
mov
ds
test
ins
dec
ins
pop
pop
cmp
mov
sub
dec
int3
cdq
call
sub
push
dec
arpl
inc
lahf
sub
shr
jbe
test
adc
lods
mov
sbb
addr16
cmp
sbb
xchg
sbb
sub
ss
nop
push
ja
mov
stos
cmp
or
adc
cmp
mov
jp
hlt
ins
mov
in
mov
jp
xor
fbld
and
mov
aad
neg
stos
push
imul
mov
movs
jg
pushf
or
pop
lds
sbb
dec
or
jno
inc
sub
dec
mov
jg
idiv
sub
aam
jno
xchg
mov
mov
ds
not
sbb
in
fistp
rol
xor
fistp
jecxz
out
and
and
xor
std
icebp
(bad)
test
scas
rsqrtps
imul
pop
jmp
aam
int3
mov
sub
and
repnz
cli
int3
sahf
dec
shl
sub
mov
sbb
sbb
jbe
jle
mov
mov
jnp
add
ins
scas
and
mov
or
inc
mov
inc
pop
and
adc
lea
lock
and
cmp
in
add
push
outs
and
jmp
xchg
or
jmp
jmp
shr
jmp
jecxz
add
cmps
fstp
inc
xchg
dec
xchg
jo
ins
shl
cmps
dec
xor
add
push
retf
pop
movs
mov
cli
pmaxsw
fst
push
(bad)
dec
cli
jnp
dec
scas
movs
inc
add
push
out
mov
push
jp
inc
mov
fcom
ss
add
adc
in
lods
mov
sbb
adc
not
cmp
into
mov
(bad)
jne
push
adc
jl
pop
imul
ret
mov
dec
and
cmp
sar
add
jp
je
or
jae
scas
ins
sbb
xchg
ds
cmps
mov
push
sbb
popa
retf
dec
mov
stc
mov
and
out
mov
and
shl
sbb
mov
das
test
ja
scas
and
daa
sub
in
retf
aad
xor
imul
lock
into
shl
or
pusha
xchg
jmp
aas
adc
pop
lods
xor
jns
and
mov
lahf
hlt
and
out
test
(bad)
icebp
test
sbb
cmps
test
inc
cs
pop
test
and
jmp
push
int3
fild
neg
(bad)
dec
loope
movs
sbb
out
or
xchg
jnp
inc
dec
test
ds
popa
xchg
or
inc
rcl
jmp
fwait
popf
movd
test
popa
call
loope
pop
inc
or
xchg
pop
lea
cdq
pop
fucom
repz
not
lods
jge
lock
mov
dec
xchg
pop
pop
clc
test
ds
enter
fxch
jbe
ds
stos
inc
dec
cmp
pop
jo
jge
mov
push
add
fisttp
das
pop
xor
rcl
cdq
adc
out
sahf
imul
and
add
push
add
icebp
mov
jle
sub
pop
lock
xchg
(bad)
sbb
ror
mov
mov
cmp
sub
jle
xor
inc
loope
pop
dec
push
in
xor
pop
jmp
mov
shr
mov
add
dec
push
les
dec
out
in
pop
xor
dec
cwde
movs
in
push
sub
sub
inc
in
mul
mov
addr16
push
call
push
mov
test
fwait
cmps
pop
xor
ins
leave
and
cmp
mov
mov
aaa
dec
jge
mov
sbb
or
sub
lea
pop
mov
bound
cmp
jmp
clc
mov
into
cs
(bad)
jecxz
iret
mov
mov
jbe
dec
fadd
cwde
adc
mov
xchg
loope
mov
dec
mov
pop
fidiv
mov
mov
adc
stos
hlt
repnz
inc
int
sub
dec
loop
std
cmp
push
mov
inc
mov
mov
repz
in
inc
cwde
sbb
sub
xor
lods
stc
(bad)
loop
pop
in
leave
inc
aas
push
xchg
shl
add
sub
dec
push
inc
fyl2x
xchg
or
je
push
dec
lods
cmc
mov
(bad)
mov
dec
add
and
aad
sub
mov
(bad)
mov
fild
push
rol
fimul
adc
add
fistp
mov
in
out
push
pop
inc
jge
test
clc
push
clc
sub
jnp
xchg
enter
fistp
push
jg
lds
xchg
cmp
add
fst
inc
and
aad
aaa
outs
xchg
mov
mov
push
cs
dec
fwait
mov
jmp
bound
scas
scas
mov
and
xchg
mov
add
push
or
sbb
jno
mov
inc
inc
sub
jns
js
jl
xchg
(bad)
sub
sub
sbb
jp
pop
sub
ret
mov
cmp
xchg
out
(bad)
sub
pop
(bad)
clc
or
cmc
inc
repnz
ret
sub
jg
call
cmp
xor
push
scas
popa
ds
adc
xor
pusha
xchg
dec
push
pop
mov
mov
push
inc
and
lock
cmp
lock
shr
xor
fst
cmp
leave
fmul
je
into
dec
std
lods
dec
imul
inc
fld
mov
push
pop
ret
lahf
xlat
fisubr
dec
pop
pop
inc
mov
push
cmp
dec
mov
add
mov
es
jns
mov
aam
or
imul
xlat
xchg
lock
enter
sub
dec
add
or
je
test
cmp
bound
jno
lods
push
popa
retf
dec
(bad)
and
xchg
xor
jb
pop
mov
xchg
loope
leave
adc
mov
mov
int
iret
or
dec
sub
mov
(bad)
lods
sahf
xchg
add
(bad)
jp
or
call
dec
imul
out
into
add
xchg
(bad)
jmp
push
dec
mov
sbb
pop
push
xor
or
ins
push
add
adc
in
repz
or
(bad)
and
and
xchg
hlt
shr
(bad)
stc
mov
cmp
mov
(bad)
sbb
jb
add
mov
mov
(bad)
push
ds
push
fadd
(bad)
xor
and
inc
nop
enter
adc
pop
mov
xor
adc
out
mov
cld
ret
jl
icebp
or
xchg
je
test
jmp
or
hlt
test
sub
push
rcl
push
jb
mov
cld
lea
add
pop
adc
lods
loop
pop
in
sub
loope
jge
in
fs
lock
xor
add
adc
sbb
xor
xor
cmps
and
mov
int3
push
add
inc
cmp
mov
sub
hlt
pusha
jle
jnp
aam
or
lods
xchg
dec
xchg
jnp
mov
call
hlt
outs
sub
xchg
dec
in
inc
xor
mov
and
sahf
repz
mov
fsubr
pop
add
adc
mov
icebp
jge
mov
cmp
or
mov
div
push
jmp
sub
dec
pop
adc
push
or
addr16
(bad)
cli
sbb
stos
sbb
fistp
and
int
cmp
jno
sbb
jge
(bad)
fucomi
cld
mov
inc
daa
ins
cld
popf
push
dec
retf
pop
xor
mov
(bad)
outs
add
xor
or
sub
or
cmp
lods
inc
push
dec
cld
(bad)
int
cmp
adc
adc
test
adc
push
popfw
(bad)
jg
stc
mov
xchg
mov
fs
inc
mov
adc
sbb
and
aam
sub
mov
ins
scas
out
xchg
bound
xor
sbb
hlt
sar
lock
dec
stos
mov
cmp
mov
aaa
popf
push
mov
in
bound
push
push
outs
inc
arpl
xchg
adc
or
mov
push
sub
sar
cmp
repz
cmp
into
cmp
xchg
mov
jno
xchg
mov
clc
fidivr
mov
std
ins
or
push
ds
ins
out
inc
mov
fistp
loopne
movs
or
pop
push
lea
daa
loopne
mov
call
shl
enter
fild
out
pop
fadd
xor
loop
xchg
test
movs
dec
add
nop
pusha
fstp
push
pop
jmp
iret
adc
mov
std
movs
call
scas
cmp
push
push
fimul
cwde
daa
sub
or
sub
mov
dec
lods
mov
into
mov
cmp
mov
jnp
add
fimul
dec
sub
loopne
mov
and
cli
xchg
imul
(bad)
inc
scas
gs
pop
push
fsub
pop
mov
pop
cmp
dec
add
pop
loope
es
xchg
xchg
xor
(bad)
mov
push
lea
clc
jp
in
and
push
dec
enter
inc
stos
sbb
push
out
xchg
pop
adc
xor
xor
pop
scas
repz
sub
test
repnz
test
call
daa
out
lea
adc
add
push
xchg
repz
add
aam
pop
inc
push
movs
jno
movs
test
xchg
push
pop
push
push
or
jbe
and
shl
inc
into
jnp
imul
aas
cld
lods
cdq
jbe
jo
ret
inc
mov
aaa
push
(bad)
icebp
lahf
scas
cs
scas
and
cmp
push
fdiv
mov
pop
rcr
inc
(bad)
or
adc
jb
xchg
cmc
fsub
jbe
(bad)
push
das
les
sti
push
and
aad
repz
out
das
add
jge
push
or
push
out
inc
jle
popa
push
fimul
je
lock
sub
xor
cmp
sub
in
adc
repnz
jmp
lds
out
hlt
js
std
(bad)
call
push
sbb
and
push
jle
cmp
movs
(bad)
xor
inc
inc
aaa
nop
or
ret
cli
fs
ja
xor
cmp
ds
pop
call
retf
movs
mov
inc
push
ja
push
cmp
sti
scas
clc
movs
lahf
clc
and
loopne
jp
push
(bad)
pop
in
sub
sti
pushf
pop
and
ins
adc
push
outs
sub
cmc
clc
retf
and
ins
aaa
cs
or
sbb
sub
xor
inc
pop
inc
out
push
neg
das
jmp
int
dec
or
lods
pop
not
fcomp
outs
dec
or
push
sbb
fisub
mov
mov
imul
jae
je
pop
dec
loop
pop
in
fcom
or
rol
cmc
cmp
xchg
inc
lods
int3
cmps
cwde
jp
sbb
call
loope
jne
mov
cdq
loopne
js
dec
add
fnstsw
fdiv
jo
pop
ja
push
dec
add
outs
gs
cmp
push
push
or
stc
lods
inc
jge
mov
pop
test
ret
xchg
dec
push
frstor
pop
lea
adc
mov
sub
inc
mov
sbb
or
pop
inc
dec
lods
shl
mov
mov
adc
stos
aam
pop
or
xor
push
xchg
mov
lahf
xchg
dec
jbe
fsubr
sub
bound
test
and
inc
arpl
mov
fdivr
push
xchg
dec
cli
in
mov
pop
add
xchg
sbb
and
and
fisttp
dec
inc
or
repz
movs
es
sbb
and
adc
jmp
out
pop
jns
push
xor
out
or
arpl
xchg
mov
in
clc
int
unpcklps
inc
mov
xchg
retf
or
adc
adc
mov
pop
cmp
jle
xor
les
add
inc
cmp
add
repnz
outs
scas
movs
sub
adc
aaa
jns
jg
or
xchg
sahf
sbb
and
mov
mov
(bad)
repnz
mov
mov
(bad)
mov
call
int
out
pop
cmp
jp
pop
(bad)
popf
retf
test
fistp
xchg
rol
jp
and
or
xor
dec
call
adc
jnp
push
inc
mov
mov
fs
add
ja
mov
enter
mov
frstor
aas
clc
ins
dec
adc
stc
test
mov
outs
or
pop
dec
xor
sub
xor
or
fldenv
xor
fdivr
pop
jmp
mov
(bad)
cmps
test
or
test
iret
sbb
rcr
enter
cld
cmps
adc
retf
xchg
dec
adc
mov
test
cmc
mov
ret
jo
or
leave
repz
addr16
scas
add
inc
lods
lods
push
dec
out
imul
rcr
fnstcw
test
out
nop
fsubr
push
xchg
(bad)
mov
jno
fmul
(bad)
dec
cmp
inc
push
adc
xor
add
mov
loopne
cwde
retf
jecxz
jns
push
cdq
cmps
push
push
scas
in
jmp
(bad)
lock
les
ss
push
xor
xchg
mov
ret
push
sub
pop
inc
cmc
js
imul
daa
push
movs
sbb
jl
cld
mov
ret
and
jbe
test
sub
dec
int
popf
adc
mov
pusha
mov
adc
mov
gs
sti
ss
push
sti
aam
sbb
or
and
mov
neg
push
(bad)
cmovno
outs
shl
nop
xchg
mov
pop
popf
and
cli
pop
aaa
push
js
shr
inc
mov
push
call
adc
push
not
or
lea
jae
jnp
sbb
cmp
push
sub
jae
cmps
fimul
stos
shl
adc
jnp
ds
fdiv
in
dec
fisub
jbe
push
cld
or
jmp
xchg
mov
pop
daa
es
(bad)
pop
mov
imul
inc
xor
or
sbb
and
fistp
test
pop
frstor
sahf
mov
repnz
and
ja
adc
test
cdq
lock
ror
test
(bad)
xchg
fwait
lock
int3
(bad)
push
sbb
enter
lds
outs
jbe
enter
arpl
addr16
xchg
push
outs
aas
jge
and
jge
sahf
or
outs
movs
iret
and
out
cwde
shr
adc
or
dec
mov
test
pop
sbb
sub
jecxz
xchg
jbe
repz
inc
ins
das
pop
xlat
adc
fdivr
xlat
pop
sub
outs
repnz
mov
push
push
inc
inc
xchg
xchg
and
mov
test
xchg
inc
in
mov
fstp
int3
lods
xor
ret
sub
mov
(bad)
popf
daa
push
push
ret
push
iret
mov
push
not
imul
add
stc
sahf
push
sub
das
movs
in
inc
inc
hlt
mov
ss
in
je
fisttp
lods
stos
sbb
arpl
mov
jg
xor
out
mov
aas
retf
cld
lahf
or
outs
pop
in
pop
scas
and
call
xchg
lock
adc
outs
cmp
jmp
inc
sahf
jmp
mov
repz
dec
sbb
sbb
sub
jmp
adc
cld
sbb
sbb
test
ret
mov
and
push
popf
pop
sbb
pushf
out
in
loope
and
add
scas
out
sub
sbb
jnp
jmp
xor
mov
retf
mov
pop
cdq
mov
sahf
adc
into
(bad)
les
mov
ins
es
and
mov
mov
xchg
cmovne
pop
mov
sub
(bad)
test
inc
shl
into
xchg
les
sub
mov
mov
jp
and
xchg
das
in
(bad)
ins
lea
and
sub
in
and
out
xchg
xor
arpl
stos
(bad)
fdivr
rol
stos
je
call
xchg
push
(bad)
sub
xor
stos
mul
pusha
adc
clc
out
jmp
mov
pop
fnsave
scas
int
scas
xor
daa
popa
cli
rcr
inc
test
into
fdivrp
test
ja
mov
(bad)
retf
xor
rcr
mov
ss
or
cmp
leave
jp
retf
mov
fistp
and
shr
les
fisub
loope
es
out
pop
retf
ja
jg
out
jae
out
add
and
mov
in
(bad)
adc
loop
xor
push
jg
div
and
scas
inc
mov
je
push
(bad)
outs
adc
xor
push
jecxz
shl
sub
leave
mov
fwait
sub
pushf
adc
pop
jmp
ins
(bad)
(bad)
xchg
bswap
sbb
dec
mov
mov
xlat
mov
lods
outs
add
pushf
outs
cmps
inc
and
mov
push
sbb
mov
add
mov
outs
and
sbb
rcl
lock
and
mov
lods
mov
jge
vpunpckhwd
(bad)
enter
jg
ins
pop
out
jmp
cmp
sbb
je
xchg
jl
adc
dec
mov
xchg
es
fimul
mov
aad
mov
inc
cdq
scas
(bad)
(bad)
dec
ja
hlt
push
sub
push
push
inc
and
nop
lahf
mov
ror
jmp
mov
mov
iret
xchg
div
jecxz
sbb
fistp
jle
xor
fst
pop
fdiv
adc
je
test
sub
movs
cmc
iret
pop
sbb
mov
adc
push
shl
pusha
cld
xchg
movs
mov
sti
push
mov
loope
out
adc
mov
stos
jae
or
pop
sbb
cmp
mov
movs
xor
(bad)
movs
cdq
mov
scas
(bad)
dec
lock
(bad)
push
retf
sbb
jg
inc
shl
cld
cmp
add
push
jg
sub
add
sub
xchg
scas
addr16
inc
ins
leave
add
adc
mov
xchg
ins
mov
mov
jbe
jo
aad
in
bound
adc
cmp
imul
imul
pop
arpl
call
jge
retf
jecxz
jecxz
ror
inc
in
ds
or
test
fimul
xor
lods
sub
cmp
mov
std
or
push
test
in
sbb
test
or
or
sub
push
clc
pushf
(bad)
jmp
jo
jne
jg
cmp
sub
adc
cmps
xor
jp
call
call
sub
iret
mov
jo
sar
push
dec
add
add
adc
xchg
test
push
inc
sar
stos
add
inc
cmp
lahf
pop
inc
aaa
mov
mov
sub
mov
rol
sbb
pop
clc
xor
push
push
lock
or
int
imul
add
pop
jge
retf
shl
rol
je
scas
enter
sbb
shl
or
mov
iret
movs
fs
add
adc
add
loopne
mov
jns
sub
xlat
shl
xor
mov
pop
xchg
push
ins
repz
push
cdq
jne
push
addr16
cmp
in
(bad)
push
outs
ja
sub
std
retf
mov
mov
fild
add
loope
out
fs
shr
and
in
push
sub
mov
jg
(bad)
push
dec
out
test
sub
mov
stc
add
mov
test
into
jp
dec
retf
sbb
sub
jbe
cs
jbe
inc
jle
hlt
and
mov
mov
lahf
lahf
inc
mov
ret
adc
or
dec
rcl
jns
add
and
mov
jo
out
rol
pop
rol
pop
inc
punpckldq
lds
pop
out
and
and
and
daa
add
repnz
mov
das
mov
loop
into
out
fsub
push
sub
xchg
fidivr
push
pop
out
cmp
jp
stos
jae
mov
and
sub
or
mov
hlt
dec
mov
inc
mov
or
loope
scas
jmp
push
leave
call
ror
cmps
push
pop
popf
fwait
push
ret
dec
imul
mov
add
dec
inc
aaa
dec
dec
in
and
xchg
leave
mov
js
shl
call
lds
adc
lea
or
inc
sbb
shl
ret
adc
jle
je
ins
in
xchg
mov
and
stos
fwait
test
jae
xchg
inc
and
sub
(bad)
fild
ds
mov
scas
repnz
sbb
and
jp
xchg
add
sahf
mov
lods
sub
ja
inc
(bad)
test
fldenv
fstp
mov
scas
add
int
mov
cmp
ret
sbb
mov
lds
ror
jo
sub
test
sub
or
xchg
add
pushf
cmp
and
xor
xor
bnd
and
xor
sbb
xor
int
(bad)
jnp
or
mov
stos
mov
xchg
jg
push
xchg
popf
lea
mov
mov
ins
xchg
aaa
call
cld
pop
ja
sub
ret
loope
add
sbb
rcr
(bad)
js
sbb
and
ins
ins
(bad)
out
mov
je
fisub
lods
and
rcl
stos
fdiv
out
pop
movs
lahf
jle
xor
lds
in
in
adc
dec
and
cmp
dec
ds
jns
jle
fwait
cmc
ret
push
mov
(bad)
and
xchg
test
xor
popa
cmp
mov
das
mov
into
adc
sbb
add
xchg
lods
mov
imul
cwde
fldcw
out
adc
rol
jno
push
mov
outs
fisttp
fnstsw
inc
pop
in
fld
sahf
in
xchg
in
fwait
loope
cmp
mov
sbb
data16
pop
or
in
movs
jne
xor
add
xchg
add
retf
jmp
stos
or
or
mov
inc
into
sub
and
push
stos
mov
pop
jge
mov
push
xchg
sbb
lock
ror
rcl
jns
push
shl
and
add
cdq
jae
pop
mov
out
push
out
loopne
cwde
(bad)
jmp
ret
or
enter
jb
dec
jecxz
lahf
or
fmul
cmp
call
cmp
push
xchg
lahf
loope
push
sar
fsub
mov
mov
fdivr
push
jmp
cwde
jae
pushf
andnps
mov
or
add
or
add
fcom
pop
repnz
adc
cmp
scas
outs
popa
lea
push
dec
in
adc
and
movs
xchg
xor
retf
sub
fcomp
xor
shl
pop
inc
push
mov
mov
pop
add
dec
xchg
rcr
xchg
dec
pop
and
push
ret
sub
xor
push
out
and
adc
neg
stos
mov
xor
aad
mov
xor
rsqrtps
cmp
lods
scas
stos
pop
clc
je
mov
cmp
mov
mov
std
add
out
mov
(bad)
stos
xor
nop
in
and
rcl
fdiv
adc
push
(bad)
ins
cs
jbe
into
jo
cmps
mov
rol
imul
add
jmp
cmps
movs
popf
mov
out
push
(bad)
stc
je
aam
shr
dec
sbb
mov
jne
gs
leave
or
loopne
jb
jg
ins
xchg
push
mov
icebp
cwde
fs
pop
xchg
lds
(bad)
adc
add
je
jno
int
rcl
inc
mov
push
sub
fs
leave
xor
sub
mov
clc
(bad)
rcr
and
ret
push
je
mov
xor
int3
scas
sbb
dec
push
mov
and
aaa
and
jno
push
cmp
into
(bad)
mov
mov
xrelease
iret
aas
in
add
and
push
nop
stc
scas
inc
repz
or
adc
sahf
aam
dec
call
repnz
in
jmp
dec
sti
scas
jbe
xor
sbb
mov
xchg
ror
cmps
and
pop
mov
jge
shl
inc
in
mov
cli
cmp
mov
gs
mov
mov
mov
outs
stc
sbb
sbb
(bad)
mov
mov
enter
fidivr
add
retf
dec
fadd
xchg
dec
loope
fxtract
sub
iret
rol
(bad)
mov
xor
sub
and
mov
cmps
push
ret
leave
adc
loopne
push
out
cmps
pop
cwde
mov
jnp
or
(bad)
cmc
and
sbb
push
repz
shl
xor
inc
jg
ins
cmp
jnp
retf
fmul
fstp
jge
mov
sub
retf
pop
add
inc
das
mov
mov
aad
ss
or
cwde
adc
jb
cli
mov
push
push
popa
mov
shl
push
or
popf
xlat
imul
sbb
repnz
test
pop
iret
pop
mov
fnstenv
jae
add
fimul
add
scas
movs
jo
scas
fdiv
adc
movs
add
push
inc
cmp
dec
sub
repz
daa
stos
jmp
cmps
lea
sub
test
sahf
sub
bound
shr
pushf
bound
icebp
js
and
(bad)
lods
imul
test
ins
cmp
out
jle
(bad)
jmp
dec
inc
sahf
leave
adc
xor
pop
test
adc
hlt
retf
and
cmp
aaa
jge
stos
push
sbb
push
outs
mov
ficom
xor
ds
call
or
aas
stos
and
repz
xchg
and
mov
xor
adc
mov
cli
arpl
pop
cwde
sbb
lea
cmps
pop
jns
sub
(bad)
mov
popa
mov
mov
mov
ja
movs
add
sbb
(bad)
fnsave
pop
stos
push
push
and
jmp
or
cmp
mov
add
sbb
sbb
xchg
imul
iret
inc
mov
out
rol
sbb
jp
mov
or
and
xlat
push
sub
mov
sar
dec
addr16
js
sti
imul
movs
iret
ss
jle
into
sub
mov
sub
ret
pop
test
pop
(bad)
sti
cmp
dec
sbb
cmp
mov
sub
add
xor
mov
dec
(bad)
enter
cmp
or
test
push
cmps
and
cmp
rep
lods
jmp
(bad)
jp
sub
add
pop
out
fimul
addr16
repz
pop
jl
jle
(bad)
(bad)
rcr
dec
xchg
mov
push
push
nop
mov
ja
push
and
scas
movs
mov
xor
mov
mov
dec
push
outs
mov
xchg
cld
cs
out
fwait
mov
jmp
inc
fbld
mov
popa
aad
push
jno
in
lods
(bad)
or
hlt
mov
cmc
pop
in
enter
mov
jno
cld
sar
xor
mov
jle
jl
push
mov
pop
mov
push
test
or
xor
mov
inc
sbb
pop
loopne
ss
scas
adc
inc
or
mov
ja
jl
sub
inc
(bad)
repz
pop
jb
inc
dec
out
fs
je
cmp
ins
jp
dec
or
jge
imul
loopne
into
shl
outs
xor
pop
into
jo
js
rcl
mov
add
or
mov
cmp
aaa
mov
mov
cmc
jae
pop
mov
call
jecxz
fsubr
inc
fidiv
mov
nop
pop
inc
xor
jle
push
ficomp
popf
ror
dec
pop
ja
cmp
(bad)
clc
shl
fwait
mov
jge
mov
retf
ret
cld
mov
hlt
dec
lods
pop
push
mov
adc
pop
dec
sbb
mov
fisubr
push
pop
ja
push
sbb
jb
stos
sahf
xor
clc
dec
sub
int
push
mov
dec
pop
(bad)
repnz
into
pop
mov
jge
out
pusha
add
repnz
out
push
shl
das
pop
mov
call
scas
jno
mov
mov
xor
ins
(bad)
retf
jne
or
cdq
pop
jecxz
fsub
call
out
aam
jbe
or
or
and
test
inc
add
jae
mov
ret
jecxz
cmp
cmp
in
jg
(bad)
sar
inc
dec
jl
mov
rcr
push
iret
cld
sar
es
mov
mov
fisubr
nop
cmp
fiadd
scas
cmp
inc
(bad)
aas
mov
iret
ud0
xor
and
(bad)
jb
hlt
imul
popf
into
pushf
sbb
sub
mov
cmp
outs
jmp
mov
ror
fadd
and
mov
push
js
sub
or
les
adc
cmp
add
xor
int3
pop
pop
pusha
shr
dec
les
(bad)
cmp
add
hlt
es
loope
adc
push
mov
ds
sub
push
pusha
lods
leave
jo
sbb
scas
dec
xchg
cmp
aad
and
push
push
pop
out
test
(bad)
mov
jb
dec
fsubr
lock
sub
cmp
and
mov
jl
adc
push
mov
jnp
and
test
inc
cmp
in
xor
push
mov
sbb
ret
imul
or
shl
cli
inc
xor
pop
test
mov
pusha
mov
aad
sub
and
and
sub
ins
mov
jae
jp
ret
jb
outs
pop
mov
shl
mov
sub
pop
(bad)
xor
mov
mov
jne
sub
mov
adc
xor
stos
xchg
xor
mov
sub
and
mov
(bad)
cwde
mov
icebp
fmul
jmp
call
lods
xor
fsubrp
adc
leave
pop
clc
mov
sbb
jb
jg
mov
addr16
inc
pop
stc
aam
inc
jno
test
mov
std
sbb
pop
call
or
sti
mov
sub
stos
jno
push
ret
cmp
sbb
iret
push
jbe
mov
cs
jb
mov
jns
loope
pusha
mov
sub
jecxz
vpunpcklqdq
jecxz
mov
loope
dec
icebp
in
cld
aas
dec
and
loopne
mov
int
and
jge
pop
out
addr16
and
jecxz
das
jge
mul
clc
and
cmp
repnz
jne
lea
mov
das
retf
cmp
mov
test
jg
jae
mov
xchg
outs
dec
lods
jne
(bad)
jo
mov
outs
or
adc
mov
(bad)
mov
out
or
ret
imul
aaa
das
mov
mov
pop
fld
mov
adc
and
in
addr16
xor
lock
and
add
sub
cmps
push
dec
into
int3
pushf
xlat
xchg
jbe
cmp
jecxz
fsubr
shr
arpl
jmp
shl
xchg
and
stos
out
pop
aas
es
cmps
sub
mov
add
data16
jge
es
rcl
jge
xor
sbb
mov
test
push
loop
and
mov
out
jo
pminsw
push
fs
jnp
scas
mov
mov
pop
mov
xor
dec
(bad)
je
add
ds
out
popf
outs
sbb
ror
bound
outs
aas
and
and
adc
dec
mov
mov
xchg
pop
and
dec
mov
(bad)
js
push
xor
scas
int3
and
xor
dec
(bad)
mov
mov
inc
lds
or
ficom
ret
dec
inc
cmp
aad
sbb
iret
(bad)
in
inc
call
or
cdq
fwait
jl
jle
lods
aas
adc
sub
mov
in
aam
add
xor
sub
and
shl
iret
mov
sar
inc
addr16
mov
mov
sbb
push
sub
fs
xlat
xlat
ins
pop
call
rcr
stos
ficom
fcmove
movs
aas
or
pop
hlt
cmovns
jb
jne
sub
jle
xchg
mov
push
(bad)
sub
cmp
mov
xor
or
dec
sahf
ins
push
pop
mov
cwde
push
mov
mov
test
shr
push
or
ins
push
sbb
les
cmps
mov
aaa
sbb
inc
and
mov
pop
(bad)
cmps
mov
cmp
jmp
cmp
xchg
or
stos
retf
icebp
je
das
and
ret
inc
pop
sti
xor
scas
adc
sub
fadd
fs
or
sub
jno
push
mov
xor
xor
sbb
scas
fsub
add
xor
mov
add
sub
je
dec
or
mov
(bad)
fisub
push
adc
jge
movs
pushf
test
(bad)
(bad)
mov
adc
int3
ins
inc
idiv
int
dec
xchg
test
mov
loopne
dec
movs
nop
shl
sub
sbb
idiv
push
add
adc
test
retf
js
or
out
push
enter
jns
and
fistp
(bad)
cmc
push
dec
mov
xchg
out
cmp
mov
imul
xor
xchg
fs
sub
daa
xor
or
es
inc
sub
call
sub
icebp
bound
icebp
out
lock
cmp
xor
enter
push
lods
mov
cmps
nop
lahf
xchg
fmul
popf
pushf
repz
(bad)
pop
and
ret
pop
out
inc
popf
outs
adc
out
xchg
call
jmp
popf
dec
add
aaa
push
repnz
mov
push
aaa
adc
jmp
enter
adc
daa
jb
hlt
movs
push
pop
pop
fst
add
sub
or
mov
jno
outs
mov
jb
out
add
or
sub
das
pop
adc
jbe
std
jecxz
xchg
sub
mov
inc
cmp
sbb
mov
xlat
jle
fimul
jmp
cdq
pop
hlt
jno
xchg
ret
mov
adc
mov
(bad)
in
out
pop
mov
mov
icebp
sub
add
sub
out
sbb
test
sub
sbb
mov
popa
call
dec
or
cmps
mov
cdq
enter
xchg
pop
cmps
pop
sub
nop
rcl
cmp
mov
fldenv
loop
mov
or
push
retf
jge
mov
sbb
and
ror
call
xchg
popa
xor
fdivr
jb
xor
fbstp
sub
outs
adc
cmps
mov
(bad)
hlt
jp
adc
idiv
fdiv
mov
sub
pushf
imul
push
or
sub
sbb
pusha
sub
ins
pop
xor
sub
mov
ds
stos
(bad)
out
mov
sbb
or
push
test
push
int3
xchg
pop
add
stc
dec
cmp
ins
jmp
addr16
xor
dec
loope
pop
xor
aam
shl
add
pop
add
(bad)
in
fisttp
jo
adc
imul
push
ss
fsub
(bad)
xchg
cdq
lods
inc
sub
sub
xchg
popa
jp
(bad)
mov
add
or
stc
lock
rcl
pop
add
mov
addr16
mov
fbld
ss
adc
iret
pop
in
fwait
add
xchg
xor
xor
loope
and
int3
scas
adc
mov
dec
nop
movs
inc
ins
add
dec
aaa
sbb
jns
xor
imul
xor
mov
lea
fnclex
outs
mov
mov
cmp
aam
jmp
lds
ins
int3
pop
sbb
pusha
push
pop
je
dec
fidiv
or
dec
and
cs
shl
(bad)
in
sbb
cld
mov
dec
ds
sub
push
ds
pop
aad
or
shr
stos
inc
std
add
(bad)
mov
push
retf
shr
pusha
inc
loope
rcr
xchg
inc
push
popa
bound
xchg
xor
push
stos
sti
sbb
lea
frstor
mov
hlt
push
cmp
into
js
je
sub
(bad)
cmp
out
imul
rol
outs
stos
mov
aas
mov
cdq
inc
xor
addr16
mov
xor
mov
push
dec
shr
gs
pop
mov
jb
mov
jge
dec
movs
sub
ja
push
mov
pop
sub
aaa
enter
xlat
and
jge
adc
and
movs
rcr
aas
and
sbb
movups
pusha
adc
add
mov
push
adc
xchg
in
cmp
jns
or
sbb
push
test
mov
or
std
dec
or
dec
add
retf
call
leave
and
scas
dec
data16
scas
xor
test
xor
dec
retf
fwait
inc
xor
mov
xchg
xor
add
jno
aam
jbe
inc
out
mov
stc
lahf
ficom
sahf
adc
jo
xor
pop
sub
in
mov
sub
sbb
jae
shr
cmp
data16
ds
rol
fnstsw
jae
mov
xor
cmc
sbb
dec
sar
or
sti
mov
loopne
mov
aam
fcmovnbe
xchg
aaa
xchg
pop
jnp
jp
xor
and
mov
mov
(bad)
push
clc
cmp
sub
inc
mov
loop
xchg
sub
mov
jg
mov
addr16
or
mov
les
push
lods
out
in
clc
push
sahf
or
dec
inc
push
and
mov
popa
push
mov
repnz
es
mov
pop
push
xchg
inc
inc
cmc
push
jmp
sar
add
out
jno
jp
add
add
xchg
and
add
sar
mov
hlt
les
push
cmp
xchg
loopne
jo
pop
xor
lods
mov
imul
dec
cld
(bad)
jmp
mov
mov
out
cli
jecxz
aas
jmp
arpl
sub
cli
cmp
popf
je
jmp
jmp
data16
scas
sub
in
and
xchg
pop
fadd
ret
(bad)
cmps
sbb
sub
(bad)
xor
mov
mov
outs
mul
xchg
fcomp
xchg
hlt
out
jnp
dec
ds
daa
mov
dec
jb
add
cmp
pop
or
cmp
mov
and
sbb
sub
jecxz
movs
push
addr16
sbb
movs
fdivr
movs
enter
pop
mov
enter
pop
mov
test
lock
lds
nop
xor
ss
popf
cmps
or
popf
mov
add
bound
sbb
ins
retf
in
hlt
lahf
out
sbb
or
or
popa
mov
inc
out
mov
mul
push
adc
mov
sub
dec
pop
lahf
push
shr
mov
movs
(bad)
adc
cmp
sar
je
bnd
out
cdq
test
push
clc
mov
es
jle
pop
retf
push
dec
inc
adc
popf
lea
loope
pop
push
mov
jo
nop
jp
mov
mov
shl
xlat
sbb
and
push
shl
sub
add
adc
dec
outs
dec
push
fdivr
dec
xor
mov
mov
in
js
data16
aas
jmp
and
daa
bound
int
sbb
mov
xor
cmp
hlt
std
xor
leave
adc
jns
je
pop
cs
or
pop
mov
neg
cmps
adc
sbb
outs
addr16
sub
stc
ins
mov
es
sti
out
jno
inc
loope
sbb
xchg
mov
adc
or
cwde
mov
mov
(bad)
fisttp
inc
inc
cmc
(bad)
and
jmp
mov
pop
(bad)
jl
pop
adc
and
icebp
(bad)
fisttp
movs
int3
adc
xchg
sti
or
dec
popa
lods
addr16
adc
stos
cmps
push
pop
test
std
sub
and
(bad)
inc
xor
(bad)
lea
mov
mov
test
mov
aas
es
enter
and
mov
test
test
jecxz
jb
out
and
pop
test
inc
inc
scas
(bad)
and
pop
cld
push
fstp
jb
cwde
push
xchg
jmp
gs
inc
pop
adc
xor
(bad)
cmp
jne
add
cmp
out
jmp
sbb
sbb
outs
imul
ror
inc
(bad)
out
mov
(bad)
mul
js
hlt
xor
mov
push
popf
in
sbb
pop
cld
js
sbb
xchg
jno
fwait
push
out
call
push
dec
sbb
mov
movs
daa
mov
add
fisttp
ins
xchg
sub
push
and
xor
mov
mov
jge
sbb
cmps
and
sbb
xchg
push
cmp
jge
sub
test
jo
xor
sub
cmp
mov
arpl
out
mov
es
push
and
push
sbb
loope
outs
xlat
pop
sti
push
xor
mov
scas
ret
inc
dec
cmp
xchg
sub
cmp
(bad)
jnp
test
dec
or
out
out
gs
nop
push
lds
sub
rol
std
mov
mov
cmp
or
pop
or
xchg
xor
fcomp
mov
test
mov
jmp
out
cdq
xor
xor
and
adc
shl
jns
stc
pop
scas
inc
sbb
or
jp
pop
xor
popa
stos
cmp
adc
add
push
add
std
data16
sbb
ds
cmps
mov
dec
(bad)
mov
sub
mov
call
cmp
(bad)
shr
and
and
pop
and
mov
xchg
imul
xchg
addr16
aas
pop
dec
outs
or
cmp
cmps
and
(bad)
out
fidivr
mov
jg
in
jge
popa
jge
jnp
xor
lahf
lock
pop
sbb
ss
mov
inc
call
inc
sbb
neg
outs
mov
movs
or
mov
stc
sbb
sub
sbb
(bad)
push
or
clc
cmp
adc
pmaddwd
or
jo
push
js
in
(bad)
jg
in
mov
push
mov
cli
inc
lods
clc
push
cmp
movs
jmp
push
xchg
mov
aam
scas
movs
dec
out
cmp
lods
ret
outs
std
loopne
scas
into
jbe
jle
shr
in
inc
cmc
out
loopne
mov
iret
mov
pop
add
in
xchg
jle
aad
cwde
and
jmp
mov
xchg
jle
pop
fadd
add
dec
pop
fnstsw
loop
pop
lods
xor
push
inc
iret
sub
and
cs
jne
xlat
test
xchg
out
aas
jno
pop
cmp
mov
cld
xchg
or
push
stos
aad
mov
popf
je
stos
pop
(bad)
js
inc
adc
pop
push
push
fidivr
mov
stc
fstp
or
fisttp
enter
ins
xchg
or
in
leave
cmp
inc
js
inc
and
sbb
and
je
bound
icebp
mov
and
out
dec
(bad)
aas
push
pop
int3
push
(bad)
jecxz
call
dec
jb
imul
push
retf
adc
js
jns
or
xchg
stos
out
call
ret
(bad)
jmp
mov
jbe
jp
pop
(bad)
pop
das
mov
bswap
and
cli
push
sti
mov
inc
ret
and
or
fld
inc
iret
xor
fisubr
mov
mov
push
inc
mov
adc
add
cmp
and
xchg
cmps
test
hlt
inc
test
dec
test
ja
and
test
dec
jo
leave
je
ret
(bad)
sbb
ret
cmps
adc
cmc
xchg
inc
jo
loope
dec
fwait
jno
shr
outs
mov
cmp
or
mov
push
jp
push
add
retf
repnz
jmp
cdq
int3
sti
xor
jne
ins
push
int3
fstp
jo
mov
ret
pop
xor
jl
or
mov
jp
or
mov
jno
push
fwait
jmp
les
outs
es
sub
mov
rol
xchg
xchg
retf
dec
xchg
outs
pushf
mov
dec
pop
imul
sti
lock
mov
push
sbb
movs
(bad)
and
sub
rol
add
lds
cmp
test
pop
dec
xchg
add
xor
jnp
mov
add
dec
adc
in
add
cmp
in
call
jecxz
mov
or
and
pop
in
loop
jb
into
shl
fucomip
push
xchg
sub
mov
in
jbe
inc
xchg
push
cmp
inc
mov
call
mov
imul
xor
push
repnz
(bad)
in
and
mov
push
inc
in
mov
inc
leave
gs
sbb
jecxz
cli
push
pop
sub
(bad)
loope
or
cmps
push
(bad)
iret
push
xor
add
bound
xor
fstp
test
cwde
mov
pushf
pusha
push
push
inc
push
pop
xchg
popf
aam
retf
add
imul
mov
lock
jecxz
cmp
pop
in
adc
or
in
clc
stc
mov
add
in
daa
inc
scas
je
mov
sub
lock
rcl
jb
in
retf
inc
(bad)
inc
fcomp
call
sbb
dec
movs
mov
bound
push
pop
mov
push
out
(bad)
dec
jecxz
push
jl
mov
push
sub
push
rcl
lods
int
aad
dec
sub
call
pop
push
xchg
mov
sbb
mov
jge
pushf
(bad)
push
push
mov
sbb
fld
clc
inc
adc
sub
cld
xor
or
xchg
mov
inc
test
out
mov
popf
hlt
mov
cwde
ins
fild
rep
cld
fs
out
xor
push
xor
cwde
daa
add
in
jae
rcr
push
mov
ins
outs
xlat
popf
lds
sbb
dec
push
addr16
fwait
mov
jg
dec
sti
xchg
push
mov
pop
mov
push
inc
out
daa
leave
mov
push
(bad)
out
fwait
pushf
mov
mov
inc
sbb
and
xchg
cld
cwde
mov
xor
sti
hlt
cdq
pop
inc
pop
outs
stos
add
mov
and
mov
xchg
movs
retf
jno
out
dec
std
and
mov
pop
push
pop
(bad)
sbb
and
sub
pop
push
cmp
sub
push
pop
mov
mov
inc
enter
ret
cmp
or
mov
js
inc
mov
stos
or
rcr
mov
shl
jmp
lods
mov
into
add
iret
das
adc
add
fstp
xor
push
and
js
mov
enter
cmp
push
gs
adc
dec
push
push
adc
push
movs
dec
gs
aaa
in
lods
add
and
iret
imul
sar
test
jae
retf
call
sbb
jp
xchg
mov
add
int
clc
stos
movs
pop
xor
lock
loope
add
cwde
retf
push
sub
out
fnsave
pop
rcr
aad
sub
js
shl
aas
fidivr
cmp
mov
(bad)
fdivr
push
sti
movs
stos
push
jb
mov
or
bound
into
inc
jmp
xor
and
sbb
and
jg
js
adc
jnp
scas
cmp
int
clc
sti
(bad)
push
fcom
mov
sub
mov
push
arpl
popa
jg
in
mov
inc
ds
cmp
cdq
lahf
outs
loopne
mov
retf
test
stc
mov
adc
xchg
out
test
push
rcl
ss
aad
call
stos
and
lds
lds
add
fdivr
xchg
mov
push
mov
jne
fsub
enter
dec
loope
ins
jmp
add
xchg
cmp
call
sbb
inc
xchg
inc
add
(bad)
popf
xor
das
smsw
add
lea
loop
hlt
mov
int
in
in
mov
rcr
(bad)
cld
jp
xchg
and
je
les
cmps
arpl
mov
pop
xchg
sbb
popf
shl
jmp
sbb
jge
and
loope
inc
or
pop
ja
repz
xchg
ficom
jne
inc
sahf
xchg
mov
push
stc
add
addr16
(bad)
sbb
stos
mov
add
(bad)
adc
mov
sahf
fwait
cmp
mov
and
stc
out
inc
adc
xor
pop
mov
inc
mov
repnz
and
and
mov
aad
xchg
in
dec
aaa
adc
adc
or
out
cmp
retf
cld
mov
es
adc
jg
fwait
sti
movs
sub
outs
mov
ffreep
xor
and
push
gs
push
mov
rcr
out
xor
dec
mov
retf
adc
movs
out
(bad)
fidivr
pop
and
pop
jno
inc
jmp
ret
imul
adc
ins
or
jne
pop
mov
mov
pop
inc
cdq
int3
jb
scas
push
cdq
pop
bound
mov
stc
test
cld
dec
in
aad
xor
cmp
xchg
test
mov
mov
loope
xor
jp
cmp
and
pop
inc
fstp
int3
mov
add
adc
dec
test
mov
out
pop
adc
sub
popa
add
push
mov
inc
xchg
add
jae
cmp
shr
inc
stos
scas
push
xchg
cs
pusha
push
sbb
mov
pusha
jae
jmp
mov
push
shr
add
xor
xchg
pop
inc
jnp
fucompp
rcl
or
scas
in
xchg
shl
push
cmps
add
mul
stos
out
and
push
dec
test
lea
lds
and
aaa
pop
xchg
and
pop
lods
xor
push
xchg
ins
cmp
rol
cmp
lods
mov
stc
mov
jmp
cmc
cli
xchg
xchg
adc
fisubr
fnstcw
push
int3
jecxz
jle
fnsave
outs
repz
adc
fist
fsub
xor
sti
cmp
ffree
pop
cmc
neg
aam
dec
out
pusha
int
call
add
fdivr
call
lods
adc
test
cdq
mov
dec
lahf
xchg
ret
dec
xor
out
mov
xchg
sahf
je
or
data16
ror
fld
push
push
mov
sar
imul
mov
dec
retf
lea
jmp
sub
cli
add
scas
and
and
mov
cdq
push
pop
(bad)
std
xor
add
std
push
std
mov
or
pusha
mov
xor
out
lds
(bad)
push
retf
aam
mov
imul
or
push
dec
jmp
dec
sbb
ja
lock
xor
neg
ret
movs
call
sbb
loopne
xor
dec
sub
mov
hlt
xor
sti
lods
loopne
cdq
hlt
dec
nop
pop
fbstp
xor
push
hlt
cs
addr16
and
data16
ins
movs
or
push
ja
push
jge
test
xchg
movs
popf
mov
adc
or
js
and
mov
jns
jae
repz
or
icebp
lods
and
shr
fwait
pop
cs
in
push
mov
scas
mov
or
push
sbb
call
dec
mov
mov
(bad)
sqrtps
and
jbe
aad
push
sub
in
fisub
sbb
sbb
movs
push
jge
jb
nop
adc
daa
sar
mov
out
xchg
xor
test
call
push
sbb
mov
out
rcr
xor
adc
or
into
xchg
push
fistp
jmp
enter
push
pop
loope
jno
inc
jmp
loope
dec
lea
adc
pop
fisttp
and
ins
(bad)
iret
inc
(bad)
outs
cs
repnz
sbb
lods
mov
or
dec
nop
rcr
mov
cwde
in
fmul
rcl
nop
xor
sub
lods
outs
mov
xor
das
push
cmc
xor
out
fstp
cmps
sbb
or
mov
jmp
rol
test
dec
cmp
das
xchg
call
push
mov
or
dec
jns
mov
sbb
in
push
sti
into
xor
ja
jp
or
push
xchg
dec
inc
mov
jne
and
jg
mov
bound
inc
jnp
imul
shl
mov
mov
stc
imul
adc
jae
dec
mov
and
aaa
xor
adc
xchg
push
les
movs
inc
scas
inc
addr16
sbb
int
add
push
mov
rcl
pop
or
fs
or
retf
dec
jmp
inc
xchg
dec
adc
mov
dec
xchg
push
pop
mov
xor
shr
jno
int
out
push
jb
pop
retf
js
jl
mov
add
(bad)
shl
xor
xchg
loop
sub
push
xchg
repz
data16
mov
jp
dec
stos
mov
fdivr
dec
ret
xor
out
mov
arpl
dec
cmps
movs
push
stos
dec
bound
ins
sar
out
push
fcom
pop
test
fst
outs
jecxz
and
cld
pusha
imul
fcmovne
iret
ds
mov
pushf
retf
pop
pop
add
or
mov
sub
cmp
out
xor
(bad)
lahf
mov
jecxz
popa
sbb
ins
push
inc
sub
push
outs
pop
adc
pop
and
js
sbb
and
mov
mov
in
jle
mov
mov
(bad)
adc
out
dec
out
retf
mov
fld
das
lods
or
nop
sbb
xor
ja
pushf
mov
jno
inc
inc
sub
pop
mov
pop
ins
jnp
mov
mov
sub
cmp
sahf
test
push
ror
or
push
(bad)
es
hlt
retf
mov
fwait
aas
xchg
cmps
cmp
sbb
mov
sub
add
add
call
scas
call
inc
frstor
dec
les
lea
xchg
vmptrst
push
pop
push
mov
out
mov
loop
std
ret
push
scas
and
and
cli
ja
adc
sbb
cmps
das
fdivr
adc
xchg
jg
jge
lods
mov
lods
mov
mov
mov
out
xor
aaa
push
pop
mov
scas
push
adc
push
out
je
dec
int3
add
xor
cmp
mov
sub
loop
icebp
fwait
cmp
xchg
cmova
or
sub
into
in
imul
and
pusha
stos
out
inc
dec
pop
shr
mov
dec
mov
jl
fsubr
and
(bad)
sub
je
cli
cdq
loop
je
pop
xchg
std
mov
test
adc
outs
pop
cld
or
test
xor
pop
mov
sbb
xchg
add
fisubr
mov
jl
add
xor
nop
data16
push
jge
(bad)
int
sbb
xchg
sbb
mov
sub
test
mov
stc
adc
ja
loopne
sbb
xchg
mov
fnop
call
sub
gs
adc
mov
lock
fwait
popf
test
mov
or
mov
xchg
or
fld
push
xchg
xchg
mov
push
cmp
fild
jne
stos
mov
nop
mov
add
inc
iret
mov
mov
lods
cmc
and
fdivr
pop
mov
fs
daa
jno
inc
(bad)
test
xchg
add
es
adc
ret
mov
jnp
loopne
fimul
cmp
lock
les
ffree
mov
gs
inc
int
inc
fild
loop
xor
push
jne
js
retf
jbe
retf
sub
sbb
sahf
(bad)
fistp
iret
mov
adc
mov
int3
pop
sub
in
dec
pop
(bad)
cmp
ins
and
cmp
ins
ffreep
and
add
test
and
push
adc
aad
jb
pop
xor
dec
xor
in
mov
push
je
xor
pop
mov
inc
popf
in
lods
ins
mov
(bad)
aaa
inc
mov
sbb
nop
xchg
xchg
dec
addr16
sub
sahf
cld
(bad)
(bad)
pop
push
(bad)
cmp
mov
cmp
or
test
aas
add
fs
push
adc
push
cmp
scas
cmp
add
out
cmp
(bad)
and
nop
sti
jmp
and
jg
sbb
aad
pop
xor
or
adc
inc
sti
xchg
xchg
popf
push
mov
jle
in
xchg
add
popa
cmp
jmp
(bad)
movs
xchg
test
jg
dec
cmps
push
pop
ffree
sub
jb
in
movs
mov
outs
shl
and
ficomp
add
xchg
int
rcr
or
sar
dec
das
add
sbb
mov
pop
out
mov
mov
stc
jecxz
or
call
mov
or
add
sbb
lods
sbb
call
mov
ret
xchg
mov
pop
aam
stc
sbb
pushf
sbb
mov
inc
outs
jge
sub
out
sbb
cmc
test
(bad)
pop
out
shl
arpl
std
xor
loop
daa
cdq
xor
(bad)
inc
mov
test
aam
and
cmp
je
push
lea
jo
sbb
push
out
ds
loopne
jnp
fsubr
push
ffree
adc
xchg
int3
scas
stc
xor
add
(bad)
push
in
dec
sub
test
push
jp
cmp
xor
mov
add
into
clc
sti
sar
shr
das
cld
pop
repnz
pop
div
sbb
out
mov
gs
ds
sub
dec
and
dec
inc
pop
push
fisttp
inc
jmp
test
xlat
jnp
stos
xchg
addr16
jp
sbb
cli
dec
cmp
jmp
and
sbb
mov
mov
add
mov
push
jae
push
arpl
jmp
jae
mov
push
ins
xchg
add
popa
out
pop
add
sub
out
mov
xchg
mov
retf
pop
fcom
or
lahf
pop
js
jecxz
movs
pop
xchg
add
mov
cmc
inc
je
mul
ret
(bad)
mov
jmp
retf
fnstenv
inc
mov
xor
scas
data16
sub
fmul
loope
jb
imul
jnp
movs
sbb
in
pop
loope
dec
xor
nop
pop
repnz
lods
sbb
test
jge
clc
cmp
scas
cli
leave
or
dec
mov
mov
rep
enter
cmp
retf
or
out
mov
sti
xor
jne
push
out
push
and
into
push
mov
cmps
sbb
xchg
test
fisub
sub
jg
inc
daa
dec
jbe
dec
add
pushf
mov
mov
retf
retf
je
mov
shr
loopne
xchg
mov
mov
retf
stos
xchg
mov
fadd
(bad)
mov
clc
cs
dec
in
xchg
dec
jmp
inc
cmc
adc
add
mov
adc
fbld
rcr
call
test
xor
mov
hlt
sbb
mov
sbb
fwait
xchg
ins
mov
push
jns
sbb
add
cdq
dec
adc
fiadd
addr16
sub
lods
ror
pop
pop
xchg
retf
call
lea
push
div
adc
movs
shl
mov
lahf
fimul
rcr
add
xchg
clc
nop
nop
pop
mov
xchg
fcomp
lahf
in
cld
cmp
lds
sbb
outs
sbb
cld
(bad)
bnd
shr
inc
clc
(bad)
gs
add
shl
test
fnsave
cmps
fistp
jae
ins
cmp
fdiv
mov
(bad)
pop
outs
inc
and
push
fsincos
adc
push
pop
call
aas
jb
jp
fs
sub
fstp
adc
pushf
add
fdivrp
and
or
loop
cmp
dec
dec
gs
ficomp
jno
or
dec
rcr
mov
inc
push
cmps
xor
inc
ins
push
xor
xchg
ins
fild
loope
jnp
retf
add
cmc
pop
adc
nop
fadd
and
ja
mov
push
and
fs
gs
sub
ret
xor
ds
xor
pop
repz
pop
push
sti
or
fucompp
or
fsubr
mov
std
mov
in
push
popa
dec
dec
in
bound
jns
lods
rcr
mov
push
js
and
pop
test
cmps
and
push
loope
pop
mov
iret
xchg
call
adc
push
(bad)
adc
add
cmp
push
fwait
adc
movs
lock
sub
not
aam
nop
loope
nop
mov
jbe
xchg
in
push
sbb
cdq
ret
iret
out
jb
imul
loopne
test
cld
(bad)
xchg
call
stc
dec
dec
retf
fisubr
lods
cmps
ins
adc
push
sub
enter
daa
ins
int
and
rcr
daa
cmps
pushf
pop
js
imul
repnz
out
ret
call
clc
cld
add
inc
movs
jbe
dec
xchg
hlt
fwait
lock
xor
nop
lock
xchg
xor
nop
inc
(bad)
js
dec
add
scas
fisubr
cmp
dec
shl
in
das
(bad)
popa
or
jb
or
sbb
mov
mov
mov
pushf
push
xchg
in
das
adc
shl
in
int
push
icebp
adc
fisubr
es
shl
xchg
adc
cdq
dec
or
sbb
dec
das
mov
pop
xchg
jle
push
call
mov
fs
and
ret
ins
mov
mov
mov
sub
(bad)
shr
add
xchg
repz
sub
inc
retf
aad
pop
fdivr
sub
and
cmp
jne
jo
fsubr
cmc
arpl
add
sub
push
test
push
mov
imul
jp
mov
jmp
ror
sub
jbe
push
scas
enter
gs
jns
sub
xlat
sub
jle
inc
jge
in
mov
test
and
mov
inc
cwde
loope
mov
mov
and
mov
movs
cli
push
out
ins
pop
stos
add
fadd
sub
shr
hlt
push
jmp
(bad)
sti
pop
push
jl
jbe
cli
xor
jno
jp
or
cdq
push
sub
out
and
push
div
push
mov
inc
js
ja
shl
xor
sar
and
push
mov
test
aas
add
adc
dec
xor
cmc
mov
pop
adc
hlt
loop
inc
movs
std
loope
xchg
push
enter
outs
(bad)
rcr
mov
xchg
jae
shl
rol
add
jbe
out
rcl
jno
(bad)
adc
mov
(bad)
(bad)
sub
push
lds
mov
sbb
adc
fist
or
sbb
je
mov
pop
mov
enter
es
div
cmp
outs
das
cs
mov
pushf
in
push
add
xlat
and
cwde
in
jp
adc
daa
xchg
add
jl
sub
ret
cmp
xchg
(bad)
shr
pop
test
dec
lock
xchg
pop
mov
mov
and
les
mov
xchg
jmp
pop
bound
jo
adc
loopne
mov
inc
daa
jle
pop
stos
ret
adc
or
pop
loope
or
and
mov
loop
lock
sub
das
mov
and
fs
dec
fnsave
add
cwde
aas
dec
adc
jns
ss
(bad)
mov
and
inc
aam
sbb
mov
push
rol
pusha
aad
jl
and
cmp
xor
(bad)
xor
mov
inc
mov
loopne
cmp
je
scas
adc
mov
push
in
repnz
xchg
stos
(bad)
jb
cmps
cmp
push
ins
pushf
cmp
das
inc
sbb
dec
dec
cmp
push
mov
or
fst
std
out
(bad)
neg
mov
or
lds
adc
dec
retf
dec
std
inc
or
sub
push
in
mov
outs
sub
clc
pop
inc
jns
sbb
inc
inc
mov
cmp
repz
ins
in
sbb
push
dec
jbe
and
out
shr
fwait
jmp
push
scas
call
jmp
push
inc
aaa
mov
mov
jp
pop
add
and
mov
dec
sub
dec
adc
mov
cmp
add
popf
das
cmps
push
out
pop
xor
data16
imul
pop
sbb
movs
test
es
lds
lods
push
cs
add
push
je
push
lea
les
pop
pusha
and
pop
ins
lock
fucomp
lods
or
inc
sub
stc
inc
stc
inc
sub
adc
sub
adc
test
scas
iret
aaa
sahf
add
sub
push
daa
jne
ds
gs
inc
clc
mov
jno
and
mov
xchg
sbb
inc
adc
les
call
jns
mov
jae
or
or
dec
aas
sbb
sbb
mov
and
mov
(bad)
xor
in
ss
test
sbb
cmp
push
push
scas
scas
sbb
ret
xor
rol
jae
sbb
not
push
mov
xor
sti
pop
mov
cli
repz
test
jb
and
mov
and
xlat
inc
cmp
mov
xlat
jae
add
xor
aam
call
repnz
dec
rcr
and
push
push
(bad)
int
pop
jle
fnstenv
pop
and
cs
movs
fmul
cs
lds
sbb
jg
mov
mov
retf
mov
or
jnp
ficom
xor
xchg
sahf
or
jecxz
fisubr
not
clc
dec
adc
adc
mov
js
dec
inc
enter
push
(bad)
cdq
push
pop
or
pop
sbb
sub
or
shr
xor
in
jmp
inc
icebp
jmp
out
mov
mov
les
push
leave
mov
mov
int3
scas
sbb
push
icebp
push
or
and
inc
mov
jo
pop
xchg
or
sub
push
es
lock
mov
shl
xor
pop
push
cmc
or
mov
pop
in
stc
scas
ja
popf
and
cmp
xlat
cwde
int
mov
sub
pop
fistp
xchg
cdq
repz
or
and
cs
je
jle
imul
mov
fisubr
clc
iret
lock
sbb
or
dec
adc
mov
mov
imul
out
fsubr
mov
mov
std
mov
loopne
inc
pop
iret
xor
pop
push
sbb
xor
sbb
jge
and
into
stc
cmps
icebp
mov
loop
mov
iret
mov
add
mov
mov
dec
adc
out
mov
cmp
lds
loope
repz
imul
ror
retf
dec
or
fisttp
xor
or
cvtpi2ps
mov
mov
les
(bad)
mov
daa
xchg
inc
mov
daa
dec
fld
div
and
adc
test
jg
lods
je
cmp
fwait
jecxz
pop
mov
mov
les
imul
mov
mov
mov
sahf
push
cmp
push
idiv
xor
sbb
ja
inc
cmp
cmp
dec
jmp
xchg
push
mov
add
scas
and
(bad)
retf
mov
call
jmp
dec
dec
cmp
push
xchg
push
loope
mov
mov
dec
dec
mov
hlt
and
iret
pop
nop
fmulp
imul
inc
pop
in
mov
jg
sbb
mov
inc
xchg
div
xor
dec
inc
fidiv
or
dec
adc
push
aad
mov
leave
retf
(bad)
sbb
out
mov
or
out
clc
fs
jecxz
idiv
retf
popf
std
aaa
dec
repz
lods
shr
pop
sahf
dec
lods
or
jmp
push
test
fldcw
mov
out
ficom
fs
test
std
mov
(bad)
retf
mov
das
mov
mov
popa
or
jl
sbb
fmul
addr16
and
scas
rol
sbb
lods
xor
xchg
push
push
mov
jl
and
test
ds
scas
and
xor
dec
xchg
dec
out
push
add
retf
mov
mov
int3
sbb
retf
mov
stos
hlt
(bad)
inc
(bad)
fcmovnb
rsm
mov
ins
ins
mov
sbb
icebp
clc
push
fwait
aad
sbb
push
adc
and
jae
fistp
shr
fnstsw
sbb
loope
mov
sti
icebp
loopne
pop
inc
xchg
aaa
and
outs
call
retf
jge
nop
and
clc
jle
in
sbb
mul
or
nop
xchg
arpl
push
add
mov
out
mov
push
and
mov
mov
lahf
fldcw
mov
pop
pop
add
hlt
fistp
enter
scas
pop
imul
dec
ins
fsubp
in
jg
retf
xchg
std
jp
mov
mov
ficomp
cmp
hlt
jmp
jmp
inc
psignb
dec
add
xchg
jno
mov
cmp
dec
test
cdq
lds
jp
sub
mov
sub
aaa
mov
mov
mov
lds
sbb
add
push
or
jns
mov
xor
push
mov
mov
inc
scas
or
retf
inc
sub
data16
(bad)
into
les
hlt
mov
fs
bound
mov
pop
dec
in
ss
iret
pop
cli
push
repnz
mov
imul
add
fadd
fcomp
cli
xchg
jb
push
adc
ins
cmc
(bad)
sbb
repnz
jns
jp
inc
mov
jmp
xor
fidivr
cdq
pop
int3
pop
xchg
push
xchg
cwde
push
push
adc
fistp
cmp
into
pop
into
add
pushf
sub
sahf
idiv
xchg
inc
mov
pop
or
into
dec
in
dec
sti
xlat
mov
mov
mov
pop
movs
movs
inc
into
sub
sahf
jnp
push
sti
jbe
adc
jo
iret
bound
int3
jnp
add
mov
cld
mov
inc
mov
inc
sti
add
je
cli
jp
sbb
in
test
and
cmc
sub
test
(bad)
and
pop
mov
pusha
les
sbb
jecxz
jns
jecxz
jae
jmp
mov
xor
or
mov
sub
inc
xor
push
jg
dec
mov
je
sbb
ror
aaa
inc
out
mov
push
shr
dec
ret
addr16
das
xor
sbb
stos
xor
cmp
pop
push
outs
pop
pop
stos
sbb
out
lds
daa
retf
lods
ss
in
lds
dec
mov
stos
xchg
pop
jl
mov
out
add
jecxz
dec
pop
xchg
sbb
std
jecxz
in
ror
push
repnz
inc
pop
fsubr
js
xchg
aad
fwait
retf
mov
in
jns
(bad)
aad
inc
xor
or
jg
rol
loope
or
outs
out
or
neg
sub
mov
adc
adc
daa
stos
fwait
pusha
bound
fstp
rcl
mov
hlt
inc
repz
test
bound
lods
pusha
mov
scas
fcmove
int
dec
or
cmp
mov
jmp
xor
out
add
jmp
mov
lods
jg
push
shl
pop
push
aas
out
push
xor
fimul
jb
fwait
jmp
cmps
or
jbe
add
inc
mov
cmp
xor
(bad)
shl
iret
adc
out
jns
add
mov
mov
fs
or
jnp
aas
pusha
fdivr
jmp
jge
mov
add
or
int
retf
sbb
dec
sbb
dec
push
xchg
add
fild
jle
dec
ja
fs
or
or
mov
cmps
sbb
jecxz
xor
test
(bad)
(bad)
sbb
stos
cmp
adc
fbstp
iret
psubq
jmp
jl
xchg
mov
mov
mov
mov
inc
jae
js
jne
sbb
rcl
or
xchg
sub
mov
cs
xchg
inc
pop
out
push
pop
sbb
pop
pusha
mov
sub
mov
pop
mov
mov
clc
ret
push
dec
mov
cdq
xchg
stc
aaa
cld
outs
xchg
pop
inc
fild
addr16
jp
add
ror
sbb
neg
daa
inc
aaa
xor
mov
mov
mov
dec
dec
loope
xlat
mov
mov
sub
push
test
push
das
in
or
jle
push
mov
cmp
in
int3
lods
in
xchg
mov
sub
cmps
mov
dec
dec
das
in
sub
ret
stc
sub
jge
sbb
movs
dec
aas
mov
daa
loope
cld
scas
int3
ror
call
sbb
mov
mov
dec
push
bound
jecxz
mov
enter
test
jne
sub
fsubr
mov
push
call
adc
xchg
push
mov
out
push
call
ins
inc
cmps
push
add
cmp
mov
xor
stos
repnz
inc
out
xor
test
push
stos
pop
sub
dec
test
xchg
ds
lock
loope
movs
aam
int3
pop
fbstp
cmp
lods
cmp
jmp
ficomp
and
adc
sub
popf
test
jo
xchg
inc
es
pop
mov
outs
push
cmp
rol
sbb
movs
call
(bad)
das
jecxz
dec
loopne
rol
adc
inc
in
pushf
hlt
xchg
pop
loop
enter
fst
sub
jns
fstp
push
mov
xor
cmc
(bad)
pusha
xor
add
cmp
fwait
(bad)
(bad)
xchg
adc
pop
gs
leave
shl
sub
xchg
push
gs
lods
retf
out
inc
ins
lods
das
mov
aam
xor
or
test
or
pop
cmp
mov
dec
cmps
mov
test
or
mov
jecxz
cmps
mov
jno
je
int3
cmps
and
lds
hlt
shr
hlt
mov
test
or
(bad)
fistp
sub
dec
aad
dec
push
leave
ret
pop
imul
and
ja
clc
push
or
adc
mov
push
mov
pop
jno
adc
fsub
push
loop
leave
and
xor
js
retf
jmp
cdq
sub
sub
xor
dec
cmp
pop
mov
jmp
lea
stos
out
jp
add
mov
mov
in
and
dec
aas
mov
add
pop
and
loopne
inc
lea
mov
inc
rcl
iret
inc
cmp
in
lahf
xlat
xlat
ja
out
and
aas
bound
shl
jmp
pusha
dec
sbb
sub
out
iret
int3
add
cld
and
add
ss
push
cmp
ins
mov
jbe
pop
mov
call
adc
inc
or
push
loopne
push
jnp
bnd
xchg
dec
imul
mov
mov
loop
xchg
xor
xchg
push
aam
lods
mov
in
mov
nop
inc
and
lods
or
sub
xchg
or
mov
shr
adc
(bad)
xor
retf
(bad)
pop
aas
cmps
in
outs
cmp
out
mov
jge
in
jg
lds
cdq
not
push
cmp
fbld
sbb
(bad)
hlt
enter
sbb
push
(bad)
xchg
pop
xor
mov
enter
bound
xor
inc
inc
cmp
clc
cmp
fsubr
int3
cmp
jge
jo
or
jg
adc
sub
mov
fistp
push
or
sti
dec
xlat
(bad)
repnz
(bad)
xor
cmp
ds
sbb
shr
ds
icebp
adc
jmp
ds
push
pop
jle
pop
hlt
pop
into
adc
mov
sbb
sub
lahf
call
pop
push
sub
lock
sub
aam
dec
out
add
data16
jl
sbb
jecxz
sti
js
add
pusha
test
dec
ret
and
fld
jmp
movs
ins
jmp
rcr
push
adc
pop
mov
in
fsubr
fstp
mov
(bad)
aad
mov
or
mov
push
stos
cs
add
ins
xor
add
addr16
push
mov
jb
cld
ss
scas
sub
test
xchg
(bad)
fdivrp
into
add
jp
out
sub
mov
xchg
xor
push
and
dec
xchg
inc
int
out
xchg
sbb
jge
je
les
inc
sbb
int
pop
jns
xchg
je
setbe
lock
imul
and
cld
ret
or
mov
or
add
mov
xchg
jle
cmps
fmul
push
cmp
pop
and
inc
adc
inc
lds
ins
stos
int3
push
(bad)
icebp
jge
das
outs
cmps
mov
(bad)
retf
loop
jge
push
inc
mov
mov
fldenv
pop
xor
xchg
sub
xor
fsub
mov
shl
scas
sub
add
add
push
mov
xlat
pop
adc
add
sti
mov
rcr
jle
pop
test
mov
inc
cdq
xor
jbe
es
fild
push
fadd
adc
aaa
sbb
xor
or
sub
mov
mov
inc
lock
test
fwait
xor
pop
add
js
sub
int3
lahf
clc
cmps
add
push
xchg
sar
bound
xor
sub
out
nop
xchg
daa
cwde
adc
out
xchg
lea
adc
sbb
gs
repz
dec
mov
inc
aas
(bad)
lods
dec
adc
mov
retf
das
mov
mov
cmp
movs
lods
adc
ret
xor
add
call
and
adc
xlat
in
pop
leave
lods
(bad)
test
inc
mov
push
sbb
dec
popf
push
add
sbb
push
pusha
or
sub
push
arpl
pop
jge
push
push
cmp
(bad)
std
scas
xchg
ror
cdq
inc
add
jmp
pop
(bad)
cwde
and
stos
mov
jmp
mov
cmps
cmp
scas
jae
xlat
sbb
fdiv
test
jmp
or
data16
int3
les
pop
xlat
inc
imul
xor
mov
sbb
retf
test
aas
(bad)
cmp
in
clc
mov
aad
xor
jnp
cmp
dec
in
mov
mov
sbb
adc
cli
adc
add
and
lahf
ret
test
fiadd
push
je
adc
mov
fs
imul
lods
or
hlt
arpl
je
adc
out
inc
dec
inc
fcomp
es
dec
lods
cmp
dec
mov
inc
add
icebp
xchg
addr16
or
xor
int
(bad)
sbb
sub
fisttp
cld
push
ss
sub
xchg
inc
mov
push
cs
push
pop
repz
adc
retf
fwait
jae
popf
loopne
xchg
xchg
mov
xor
xor
push
add
ins
fadd
jecxz
enter
sub
or
jbe
jge
lods
cmps
test
hlt
adc
rcl
pushf
mov
cmps
out
push
add
sbb
(bad)
addr16
push
pop
loopne
or
ss
imul
add
mov
push
mov
dec
(bad)
sbb
fs
outs
xchg
sahf
jmp
xor
inc
add
mov
pop
enter
xor
ret
les
adc
xor
sbb
jne
sar
sar
dec
push
pmuludq
test
iret
and
xor
in
xchg
xor
movs
mov
push
ins
loope
cmp
inc
cmp
fild
jmp
test
xor
or
data16
fidiv
dec
jp
test
ja
in
jge
dec
mov
and
pminub
(bad)
scas
loop
ror
aad
push
sbb
or
icebp
cmc
ja
mov
movs
pushf
push
add
pop
leave
adc
push
pop
ret
out
xlat
sbb
xchg
mov
test
jmp
pop
bound
nop
arpl
and
and
sub
in
jae
pop
test
or
fnsave
pop
xchg
mov
xor
pop
cdq
ins
or
rcl
push
mov
scas
mov
sub
in
dec
ret
mov
shr
add
and
cmc
ror
sbb
xor
ss
mov
mov
mov
retf
ret
dec
jmp
or
inc
pop
sub
add
ins
or
adc
sub
pop
mov
add
xchg
mov
popa
test
jle
fcomp
mov
jl
lods
(bad)
pop
xlat
and
icebp
popf
sub
pop
pop
mov
jb
adc
rol
ret
inc
xchg
sbb
sub
test
mov
dec
lods
xor
jnp
retf
scas
jno
push
jmp
outs
or
test
in
inc
push
fldenv
pushf
scas
push
hlt
jmp
inc
pop
mov
xchg
clc
mov
imul
or
and
sub
ficomp
iret
inc
jp
lods
lods
fs
das
push
fdiv
test
mov
(bad)
loope
inc
xor
addr16
hlt
add
cli
mov
pusha
sar
sub
fbld
outs
stc
jl
mov
lock
mov
xchg
int
push
sub
add
sbb
mov
mov
bound
pusha
cwde
stos
add
pop
inc
outs
fadd
das
rcr
fisttp
mov
lods
or
or
bound
(bad)
pop
mov
and
dec
test
in
shr
aas
add
or
mov
sbb
lock
(bad)
(bad)
cdq
std
jl
pop
mov
jl
imul
sar
dec
das
bound
adc
test
call
mov
aas
mov
ret
sbb
inc
cmp
adc
jmp
pusha
add
inc
(bad)
mov
shl
push
sahf
(bad)
pop
xor
sub
jmp
out
jl
adc
mov
jge
call
pop
aad
fdiv
into
mov
jge
(bad)
cmc
fimul
xor
nop
test
xor
neg
icebp
mov
fisttp
inc
mov
nop
mov
xchg
in
cmp
addr16
idiv
push
jmp
dec
pop
fist
dec
lea
test
test
xlat
ins
sbb
cld
push
fstp
xlat
dec
push
mov
inc
aas
sub
loopne
adc
fdiv
test
jnp
imul
gs
ins
pop
sbb
add
in
cdq
imul
and
and
jecxz
dec
mov
fistp
push
mov
mov
dec
dec
push
xor
xor
aad
fwait
aam
xor
push
enter
mov
push
pop
push
test
mov
sti
stc
inc
xor
test
into
pop
dec
xchg
aaa
stos
or
or
dec
movs
jl
loopne
repnz
mov
cwde
dec
fs
jg
dec
repnz
das
push
add
cmc
inc
lods
cmps
lea
or
cmp
test
(bad)
dec
popf
repz
aad
adc
ds
call
stc
sti
add
xchg
mov
and
stos
icebp
cld
fdiv
iret
imul
mov
or
call
add
jmp
popa
loop
xchg
test
jge
imul
sub
mov
stos
popf
test
stos
fbstp
sbb
imul
into
leave
push
sar
mov
or
adc
mov
int3
push
push
pop
fist
rcr
je
cmps
mov
or
loop
repz
into
cmc
aad
sub
in
out
push
inc
aaa
xlat
into
push
sbb
aam
rcl
adc
add
(bad)
push
sbb
push
stos
push
stc
mov
cmp
and
pop
sub
adc
imul
inc
mov
or
adc
mov
add
sbb
sub
arpl
mov
fcmovnbe
and
cwde
fisttp
(bad)
std
or
mov
sbb
lods
add
aad
push
jge
ret
into
test
ret
outs
push
mov
sub
pop
xor
jbe
fistp
adc
iret
mov
dec
rcr
mov
sbb
mov
cmp
sub
cwde
mov
or
mov
mov
jge
add
sahf
xor
mov
jmp
ds
retf
test
cmps
dec
or
int3
inc
cmp
cdq
rol
(bad)
(bad)
fcom
(bad)
popa
sbb
xchg
dec
xchg
call
aaa
data16
int3
and
ret
cld
ds
mov
jne
cmc
in
dec
(bad)
pop
loopne
shl
mov
pop
loop
pop
adc
in
test
in
mov
fmul
icebp
inc
cld
add
jb
xor
sbb
retf
cmp
xor
ror
retf
pushf
mov
enter
or
imul
loope
mov
mov
mov
mov
adc
inc
je
cmp
mov
mov
cmc
loop
dec
mov
or
push
enter
mov
popa
in
mov
lods
frstor
sub
loope
mov
fs
stos
outs
(bad)
xor
pop
mov
inc
inc
cmp
inc
addr16
ds
add
xor
xchg
out
rcr
xor
jg
popa
jp
push
les
imul
cmp
jecxz
sti
adc
sub
mov
pop
or
fst
je
into
xor
stos
test
outs
mov
cmp
test
inc
sbb
shl
cdq
daa
popa
test
adc
faddp
and
mov
(bad)
das
lock
std
pop
jbe
and
pop
pop
cmp
ins
ins
mov
fs
mov
push
jae
jmp
cs
xor
dec
(bad)
cli
gs
stos
and
pop
xchg
ins
mov
pusha
mov
and
mov
imul
add
or
push
js
mov
fiadd
lea
adc
sub
mov
inc
sub
jmp
sti
mov
stos
mov
ins
lds
or
dec
lock
xchg
aas
je
popa
rol
jno
sbb
popa
imul
retf
cli
add
inc
out
popf
(bad)
cmp
ja
adc
(bad)
out
mov
js
or
dec
cli
aad
push
inc
jno
popf
mov
push
movs
(bad)
retf
shr
xchg
aam
jmp
pop
pop
shl
stos
pop
and
mov
fwait
daa
add
pop
cld
sti
div
push
mov
mov
mov
into
cwde
jle
mov
cmp
mov
imul
enter
ja
das
jp
xor
jmp
pop
(bad)
fst
jge
xor
movs
adc
jecxz
int3
shl
hlt
pop
sbb
nop
popf
shl
mov
push
out
test
dec
mov
cwde
test
sub
pusha
pushf
rcl
push
out
mov
adc
cmp
daa
cmps
push
mov
inc
pop
xor
(bad)
movs
pop
mov
inc
mov
push
cmp
mov
pop
push
mov
ds
jno
or
lahf
aas
mov
out
int3
aas
xchg
arpl
add
add
(bad)
mov
inc
mov
push
ret
xchg
repnz
jno
(bad)
fldenv
leave
mov
icebp
test
add
popa
shl
fmul
push
push
addr16
pop
shl
dec
sbb
cmc
(bad)
(bad)
cmp
mov
adc
cmp
xchg
lods
lods
int
out
inc
sub
mov
pop
sar
out
mov
xor
ins
adc
iret
jmp
jo
clc
fdiv
aaa
mov
fmul
push
adc
mov
mov
pop
lods
ret
push
int
mov
mov
int3
xchg
mov
xor
lock
(bad)
fdecstp
adc
dec
mov
popa
shl
jle
dec
inc
jae
repz
inc
mov
cwde
into
shr
jge
sar
cmp
push
out
cmp
mov
repz
(bad)
pop
adc
jp
or
jb
leave
jbe
sbb
mov
rol
ds
repnz
ret
push
pop
mov
mov
scas
fs
adc
test
sbb
sbb
mov
pop
mov
mov
or
inc
sbb
arpl
jo
and
fdiv
jnp
xor
mov
sbb
mov
pop
aas
outs
mov
push
jnp
jo
add
(bad)
fiadd
xor
sbb
or
ficomp
rcr
adc
xor
daa
lds
cs
or
scas
and
gs
mov
ficomp
retf
nop
xor
sub
mov
stc
mov
imul
(bad)
mov
or
fs
and
(bad)
mov
mov
out
je
lahf
ror
sbb
popf
bound
jecxz
pop
inc
imul
pop
adc
dec
mov
dec
inc
pushf
sbb
and
int3
nop
(bad)
push
imul
push
cwde
leave
inc
pop
imul
sub
aaa
shr
stos
or
(bad)
bound
shl
fistp
xchg
jns
jo
loope
sbb
ins
mov
add
outs
jl
mov
and
mov
nop
lea
sbb
or
jo
mul
(bad)
scas
(bad)
call
cmp
sar
adc
push
sbb
xchg
and
in
std
pop
(bad)
fld
cmp
ret
adc
mov
mov
fwait
push
rol
mov
test
mov
imul
sbb
js
fnstenv
inc
fwait
cwde
fldcw
add
xor
and
adc
fidivr
mov
cmp
je
dec
repnz
dec
in
xchg
retf
jns
sbb
test
fbld
sbb
gs
lods
cmp
scas
sti
mov
and
xchg
test
ror
xchg
leave
ret
xor
test
les
push
loop
or
das
inc
icebp
and
push
inc
retf
mov
ja
mov
cmp
pop
outs
cmp
cdq
cmp
and
sbb
repz
ret
xor
nop
push
pop
and
pop
add
add
stos
retf
jmp
pop
add
jg
fwait
in
lea
stos
mov
sub
jmp
cdq
mov
outs
into
repnz
ret
ret
in
add
aaa
fld
das
retf
push
sub
inc
dec
popf
adc
adc
data16
iret
ja
mov
sbb
pop
lea
xchg
(bad)
and
addr16
inc
stc
and
pusha
mov
dec
mov
js
xchg
movs
(bad)
sub
int
and
jmp
adc
pusha
inc
and
cmp
and
in
xchg
or
jmp
fsubr
arpl
inc
add
test
loop
outs
repz
xlat
or
les
out
push
lea
stos
rcl
std
ins
mov
dec
les
add
xor
mov
lahf
sbb
in
adc
xor
leave
ins
jg
jl
sbb
stc
jg
sub
jnp
mov
sbb
xor
out
fldenv
inc
mov
and
fadd
push
cmp
and
sbb
cmps
fidiv
fild
xchg
push
sub
dec
or
xor
sbb
nop
fptan
mov
sub
js
add
push
leave
add
mov
popa
ror
(bad)
out
add
mov
push
mov
xor
pop
aaa
pushf
sbb
leave
arpl
imul
ins
add
je
loop
adc
cs
cmps
jno
pop
add
or
jp
mov
daa
jle
jge
xchg
dec
adc
std
sti
add
jmp
mov
dec
jne
mov
sti
outs
cmp
stc
adc
cmp
ror
sub
or
push
jae
xchg
pop
xor
(bad)
sub
lods
sub
icebp
and
call
aas
inc
scas
fild
sub
rol
ja
pop
stos
test
pop
ins
add
jnp
push
sahf
jno
in
lds
jns
gs
lods
cli
scas
out
xchg
mov
dec
xchg
(bad)
rcr
mov
jecxz
mov
add
test
push
imul
aas
sbb
cmp
stc
out
or
mul
mov
sub
inc
int3
repnz
div
adc
xchg
in
xor
cld
cmp
rol
fs
das
jecxz
sbb
cmps
mov
jmp
and
outs
pop
bound
sbb
push
adc
inc
(bad)
daa
sbb
push
daa
push
dec
cmp
inc
pop
nop
sbb
mov
and
dec
and
sub
or
pushf
fchs
loop
pop
es
mov
add
xor
jle
les
sti
or
sub
dec
out
js
sub
push
jbe
imul
int
cmp
jp
sub
push
in
pop
inc
jnp
add
(bad)
mov
sbb
mov
dec
in
xor
ret
cmp
jl
pop
ret
sbb
sbb
inc
push
cmps
lods
mov
data16
jnp
shl
sahf
jns
stos
scas
sbb
scas
in
jbe
sbb
adc
(bad)
shl
lods
pop
popf
push
jns
or
and
int
adc
cmp
test
cmp
jecxz
mov
movs
int
pusha
jae
xor
outs
jbe
xchg
and
mov
(bad)
adc
inc
xchg
stos
pop
and
clc
lods
xor
fwait
dec
test
nop
mov
inc
pop
sbb
retf
cmps
cmp
outs
(bad)
jmp
out
push
push
out
test
pop
pop
or
cmp
dec
test
outs
test
adc
sub
dec
lea
pushf
leave
test
rcl
fwait
add
fstp
add
dec
xor
jbe
mov
mov
jmp
pop
stos
push
sbb
lds
or
sub
cmp
and
push
pop
mov
(bad)
lock
(bad)
mov
mov
outs
pop
push
aas
leave
out
sbb
mov
movs
pop
sbb
mov
in
repz
nop
imul
pusha
xchg
js
adc
fwait
std
pop
sub
jle
(bad)
mov
or
outs
scas
lods
xor
into
cmc
jmp
pop
(bad)
dec
icebp
mov
jmp
movs
inc
ret
sbb
inc
ror
pop
mov
cmps
and
movs
hlt
mov
sar
hlt
cmp
add
ret
mov
sbb
ds
nop
je
add
mov
adc
arpl
in
fstp
dec
test
jno
les
adc
sbb
cdq
mov
jg
push
aad
dec
test
xchg
ret
adc
push
(bad)
ja
jp
addr16
bound
(bad)
lds
mov
enter
test
adc
out
add
cmp
mov
mov
out
(bad)
shl
fadd
push
adc
pop
sti
out
repnz
or
pop
popa
test
sbb
shl
aad
sti
cwde
xlat
pop
xchg
add
enter
mov
pop
mov
fsub
ficomp
xor
adc
xor
(bad)
int
dec
jmp
div
das
imul
mov
and
dec
cmp
pop
xor
mov
fcom
dec
mov
shld
aam
(bad)
push
jbe
xchg
mov
movs
jg
out
mov
xor
retf
enter
call
sar
popf
inc
pushw
adc
aam
call
das
push
cmps
mov
push
test
pop
push
daa
std
push
sti
popf
push
js
pop
sbb
mov
dec
mov
sbb
test
mov
mov
mov
or
cmps
bound
out
cmp
and
xchg
cmp
add
push
fisubr
mov
lea
push
xor
outs
ret
mov
std
addr16
mov
jae
and
cmps
sbb
cs
mov
xchg
in
rcl
gs
xchg
out
outs
inc
js
fwait
sbb
lock
jae
adc
mov
push
shl
ins
xchg
push
sar
sub
shr
cs
in
cmp
sahf
test
icebp
mov
ja
sub
mov
cdq
call
test
cmp
jle
inc
in
adc
shr
daa
or
test
(bad)
and
rcl
out
call
mov
add
xchg
ins
mov
and
jl
pop
popa
xchg
xor
xchg
bound
jmp
bound
inc
xchg
lods
xchg
out
and
les
sti
aas
lds
addr16
mov
stos
push
aas
out
mov
sar
arpl
push
arpl
jno
sub
jl
mov
sub
jbe
aas
ffree
pop
aas
arpl
imul
(bad)
add
mov
mov
dec
stc
inc
call
std
ss
adc
jbe
jg
push
mov
cmp
and
sub
cld
movs
adc
mov
mov
pop
cmps
xchg
push
sar
xchg
fild
fistp
dec
mov
inc
test
mov
adc
js
push
fild
xchg
enter
ds
pop
and
jg
js
or
xchg
hlt
mov
xchg
out
inc
push
dec
icebp
mov
(bad)
lahf
arpl
mov
mov
inc
aad
pop
fadd
ins
pop
enter
mov
pop
fldcw
adc
inc
cmp
cmp
add
sub
inc
add
jo
pusha
mov
retf
cmp
loope
scas
(bad)
das
(bad)
bound
shr
pop
jmp
ror
fwait
jbe
aad
mov
lods
push
mov
jnp
mov
pusha
repz
xor
mov
aaa
xchg
xor
mov
jle
jp
push
lea
retf
cld
ret
sahf
mov
div
push
cmps
test
repz
jecxz
cmp
push
fcmovne
lds
xchg
sub
mov
cmp
xor
adc
mov
adc
jns
cmp
pushf
jg
(bad)
mov
adc
rcr
aam
mov
and
add
(bad)
daa
inc
pushf
jb
dec
das
jmp
(bad)
fdiv
pop
mov
aaa
test
mov
xlat
or
lock
xor
lods
movs
jae
pop
sbb
in
leave
dec
repz
inc
sbb
mov
mov
mov
jge
or
cmp
aas
pop
dec
xchg
(bad)
adc
cld
sub
pop
ins
jle
sbb
aas
jle
outs
add
mov
fsub
xchg
rcl
pusha
jno
ds
push
mov
nop
jmp
mov
(bad)
sbb
sub
push
(bad)
shr
aam
mov
sub
add
xor
push
push
jle
pop
ss
dec
daa
int
out
(bad)
popa
jmp
std
mov
dec
jl
nop
push
in
loop
add
das
cmp
(bad)
xlat
add
cld
(bad)
and
out
aam
mov
jno
out
lock
jl
mov
mov
jno
cs
loopne
bound
sbb
cmp
jle
hlt
pop
dec
fldcw
xor
push
and
jb
shl
xor
repz
stc
in
stos
outs
fidiv
xchg
sbb
push
mov
xchg
maskmovq
mov
das
lahf
push
sub
add
xchg
xchg
stos
test
shl
call
sub
aam
int3
sub
jmp
jo
outs
pop
iret
ins
mov
fwait
jmp
push
jns
mov
call
sar
add
fst
adc
mov
mov
out
mov
mov
rcr
cmp
nop
out
dec
stos
pop
mov
cmps
push
mov
(bad)
call
out
int3
adc
jae
xchg
sbb
fstp
push
inc
(bad)
inc
fsub
add
xor
add
ins
mov
mov
movs
xchg
(bad)
les
inc
das
lock
push
lods
push
adc
(bad)
jnp
in
adc
pop
dec
sbb
mov
std
adc
aam
jp
(bad)
jle
mov
dec
shr
ret
sbb
push
mov
jge
es
ror
or
hlt
push
ins
movs
jb
test
pop
cmps
jns
ja
xchg
mov
cld
gs
popa
outs
pusha
ficomp
js
repnz
arpl
icebp
rcr
mov
jp
xchg
sub
outs
adc
fs
mov
push
mov
test
bnd
nop
jo
cmp
add
fstp
cmps
mov
outs
sub
dec
fs
xor
jecxz
inc
add
scas
ret
pop
adc
adc
imul
and
mov
pop
mov
xor
xchg
test
pop
dec
jg
(bad)
loopne
div
stos
push
sub
mov
cmp
imul
cdq
xchg
cdq
in
sbb
sub
xor
daa
or
sbb
cld
mov
mov
push
sbb
adc
call
cmps
push
and
sbb
repnz
xor
push
xlat
add
mov
mov
push
retf
xchg
sbb
cmp
outs
retf
add
cli
pusha
sbb
test
jmp
out
out
or
test
cmps
push
es
xor
cmp
int3
sbb
lods
xchg
aas
pusha
in
xchg
les
and
mov
aad
addr16
dec
ja
daa
retf
repz
push
jnp
not
out
and
or
loop
mov
mov
scas
std
je
movs
data16
movs
pop
lock
or
dec
mov
jnp
xchg
add
pop
out
imul
mov
jne
dec
add
ins
std
(bad)
mov
push
jle
retf
pop
jns
and
fs
out
adc
sbb
cmps
jge
pushf
sub
in
xor
cmc
xchg
sub
movs
loopne
cli
add
xlat
jnp
dec
aaa
movs
dec
mov
shl
add
mov
inc
push
add
cmc
adc
xchg
add
test
je
mov
push
sbb
aas
sub
pop
sbb
loop
pop
sbb
cmp
repz
xor
xchg
leave
xchg
xchg
inc
add
inc
cdq
add
dec
xchg
mov
push
jmp
sub
xchg
les
push
imul
and
and
ret
or
enter
mov
and
xchg
(bad)
cmp
mov
dec
jmp
and
mov
pop
cli
cwde
pop
inc
xchg
aam
lods
in
(bad)
out
mov
jecxz
mov
js
xor
pop
in
mov
mov
aad
das
cmp
(bad)
pop
sbb
clc
pop
xor
and
jp
ins
jmp
xlat
adc
aaa
adc
xor
addr16
inc
or
movs
call
pop
pop
mov
sbb
aaa
dec
push
loope
ret
xchg
inc
rcr
gs
adc
fbld
xlat
sbb
cmp
stc
fcmovnbe
(bad)
jg
outs
sbb
sbb
jle
ror
in
inc
mul
push
int3
loopne
mov
dec
pop
sub
(bad)
rcr
adc
(bad)
push
dec
xchg
outs
push
jp
sahf
sub
mov
adc
cs
pop
loopne
push
and
xchg
mov
jb
pop
pop
inc
xchg
xor
adc
adc
and
repz
iret
pop
xchg
add
mov
test
xchg
or
add
bswap
out
inc
push
sbb
cmp
lods
fisttp
cwde
add
jnp
out
mov
es
and
mov
sahf
push
popa
inc
fisub
out
cmp
mov
adc
push
cmps
adc
push
loope
pop
xchg
(bad)
mov
push
xchg
add
pushf
cwde
xchg
fmul
rcr
iret
call
scas
mov
fimul
pop
dec
mov
pushf
fidiv
adc
sub
pop
pop
rcr
mov
mov
bound
dec
lods
mov
das
aas
lahf
adc
inc
ins
in
mov
add
or
add
sub
dec
xor
jbe
cli
mov
mov
mov
imul
test
jb
shl
test
push
sub
hlt
mov
(bad)
aad
stc
inc
int3
pop
ins
adc
mov
xor
or
imul
into
cmp
pop
adc
xor
(bad)
mov
push
mov
adc
mov
nop
add
rcr
data16
hlt
mov
fdivr
sub
inc
out
xor
fisttp
neg
mov
push
not
lds
xchg
(bad)
cli
(bad)
stos
push
stc
fcomp
jmp
adc
cmps
movs
dec
mov
sub
adc
sbb
cli
int3
mov
out
shl
movs
dec
and
fwait
pop
push
pop
test
fild
sbb
popf
or
fistp
sub
dec
jl
out
arpl
xchg
in
(bad)
test
cmp
xor
jg
outs
sub
data16
sub
cmc
aam
cmc
fadd
dec
or
adc
sti
pop
mov
nop
push
popf
xchg
fisubr
out
xchg
jl
xor
dec
or
mov
and
pop
push
jp
cmp
and
iretw
xor
loopne
scas
sbb
push
int
idiv
adc
xor
ja
jl
int
scas
cmps
std
in
xchg
and
movs
push
sbb
loop
or
jb
push
xor
je
pop
and
lea
xlat
(bad)
bound
xchg
mov
pop
cs
cld
(bad)
int
mov
mov
push
(bad)
and
test
and
and
mov
cld
cmp
retf
out
jp
les
mov
adc
and
fld
(bad)
leave
lea
jne
push
sbb
jecxz
mov
enter
add
push
fldcw
mov
fwait
call
jmp
or
int
pop
scas
push
mov
iret
rcl
inc
adc
or
mov
and
mov
or
mov
or
test
dec
je
push
lods
out
add
sub
push
rol
cli
sbb
std
jae
ret
stos
push
leave
scas
cdq
(bad)
(bad)
out
fwait
scas
adc
fistp
(bad)
test
(bad)
jns
push
mov
xchg
out
leave
shl
ret
movs
push
pop
xor
ror
shl
pop
mov
push
or
idiv
fist
inc
adc
push
xor
xor
jl
loop
xchg
push
lahf
mov
data16
pop
add
dec
ret
sbb
stc
pop
cld
xchg
test
or
and
mov
lahf
mov
sahf
std
fild
mov
sbb
clc
leave
pop
imul
test
stc
sbb
adc
jns
push
jae
and
mov
add
popf
push
cmp
push
sbb
aas
and
mov
dec
mov
and
retf
test
retf
mul
gs
pop
fcom
or
lea
jno
sbb
hlt
scas
dec
adc
inc
xor
dec
aas
cs
leave
pop
jno
sub
pushf
xor
mov
mov
push
std
push
inc
add
inc
jbe
mov
cdq
dec
stc
xchg
pop
leave
mov
outs
loope
xchg
rcl
test
imul
call
cmp
outs
pop
pop
leave
movs
out
movs
xor
and
mov
ins
sbb
call
fisttp
push
(bad)
mov
inc
adc
sbb
cmc
int3
test
repnz
inc
das
add
lds
rol
dec
xchg
sti
dec
sbb
js
gs
fucomi
push
sub
aad
xor
adc
push
mov
and
pop
xchg
mov
xchg
jp
lahf
or
push
push
shl
push
ficom
add
jo
mov
pop
sub
sbb
repz
mov
dec
xchg
int3
mov
clc
iret
scas
sbb
sbb
ss
fcmovnbe
int
mov
in
mov
xchg
push
ins
sbb
dec
dec
in
mov
lock
inc
mov
jno
and
imul
adc
pop
int3
jg
cwde
push
inc
(bad)
push
mov
cmp
and
mov
fucomp
push
pop
outs
fistp
(bad)
jne
aaa
mov
jmp
sar
das
popf
mov
pop
aam
or
xchg
(bad)
out
adc
mov
mov
retf
pop
test
aad
out
xchg
(bad)
cmp
not
add
mov
mul
xor
movaps
lock
sbb
sub
loop
out
push
add
mov
xor
and
or
(bad)
scas
jl
jmp
jmp
sub
fnstenv
(bad)
mov
sar
or
mov
div
out
add
mov
fcomp
aaa
jb
mov
cmp
fs
sar
dec
push
es
add
pop
lahf
mov
add
jmp
inc
sub
mov
cmc
imul
cdq
jecxz
lods
sbb
daa
jns
cmp
(bad)
lods
js
ret
xchg
lods
pop
hlt
mov
(bad)
out
out
add
ds
adc
cmp
mov
mov
and
and
gs
push
mov
add
xor
scas
shl
test
add
stc
sahf
rcl
dec
loopne
push
xor
jne
ins
push
xchg
inc
jp
jp
pop
(bad)
sbb
and
xchg
stc
inc
jl
or
jg
mov
and
mov
loope
and
imul
xor
or
inc
ret
test
mov
and
ret
addr16
cmp
cs
jmp
xchg
mov
xor
mov
pop
hlt
test
idiv
and
mov
cmps
and
fdiv
mov
inc
push
inc
mov
mov
xchg
movs
sub
cli
adc
dec
js
push
int3
punpckldq
lahf
push
jg
xlat
sahf
out
or
xchg
mov
in
arpl
xor
es
dec
lahf
sbb
lahf
inc
sbb
jb
(bad)
pop
enter
mov
cmc
lds
enter
mov
or
cmps
hlt
pop
pop
pushf
ror
fwait
mov
in
sbb
add
jle
adc
add
mov
cmps
adc
and
sahf
inc
mov
in
jbe
pop
das
data16
add
xchg
test
add
cmc
repz
call
addr16
enter
std
mov
push
(bad)
fdiv
lods
mov
psrad
shr
test
test
push
xchg
lds
mov
jge
adc
in
xchg
push
dec
pop
mov
xchg
mov
inc
into
cmp
sbb
adc
sbb
rcr
mov
inc
retf
cli
or
pop
adc
and
into
into
stc
and
mov
sbb
cmc
jg
push
cdq
ret
pop
mov
imul
imul
dec
icebp
outs
sahf
fmul
push
fwait
inc
call
adc
adc
fnstsw
cdq
mov
push
add
push
pop
xchg
jle
xchg
xchg
jbe
push
cmp
or
adc
or
inc
jecxz
pop
push
push
pushf
xchg
call
dec
cmp
iret
sub
adc
inc
jns
add
icebp
jns
iret
push
jb
mov
pop
(bad)
sub
xchg
ficomp
mov
cmc
stos
mov
fimul
push
test
cmp
xor
pop
mov
pop
loope
xchg
aas
aaa
test
adc
cmp
pop
add
movs
movs
movs
and
jb
xchg
mov
add
pop
and
pop
int3
fnstenv
and
xor
retf
xlat
(bad)
adc
popf
xchg
mov
adc
sub
push
sub
dec
xchg
sar
add
add
stos
jne
fcom
mov
push
add
add
aaa
fwait
or
lods
mov
dec
mov
xchg
pop
or
mov
cmc
(bad)
lock
js
and
fs
mov
adc
fsubp
jnp
out
add
xchg
pusha
popa
sti
mov
adc
(bad)
mov
pop
mov
in
adc
stc
lahf
std
jbe
lea
lods
adc
fs
xchg
add
cs
sub
cld
jge
xchg
dec
pop
xchg
retf
mov
push
int3
and
or
loopne
mov
sub
loope
push
jl
lock
lahf
in
push
pop
mov
push
les
loopne
mov
je
inc
and
push
xor
sub
das
mov
push
mov
xor
and
xchg
cmp
in
retf
loop
icebp
lahf
out
mov
aam
(bad)
adc
stos
test
je
into
sub
(bad)
movs
lods
addr16
mov
sbb
out
lahf
mov
outs
and
xchg
aaa
aaa
xchg
jmp
cmp
(bad)
in
stos
inc
push
adc
mov
bound
and
adc
cmp
or
pop
lock
ja
imul
xchg
loopne
loopne
cmp
(bad)
xchg
jno
call
xchg
mov
pop
jmp
adc
outs
pop
cmp
mov
shr
xchg
gs
in
jle
fdiv
xlat
pop
and
pop
mov
inc
mov
shl
dec
das
aas
(bad)
xor
loopne
cs
mov
pop
inc
cmp
push
movs
inc
sahf
fisttp
ret
jb
jno
sbb
mov
(bad)
retf
ffree
add
xchg
push
cmp
scas
(bad)
sub
xchg
shr
sbb
add
(bad)
out
rcl
push
push
aad
dec
retf
or
ja
cs
push
movs
push
repnz
dec
pop
lahf
and
xchg
dec
out
loop
addr16
jne
pusha
inc
mov
xchg
js
mov
jge
fistp
leave
fld
add
outs
or
in
movs
lock
cmp
dec
retf
mov
push
nop
push
les
and
(bad)
sbb
or
jp
xlat
adc
lds
push
xchg
add
push
jns
ret
sbb
mov
movs
inc
add
bound
aaa
mov
imul
aam
and
sbb
mov
sub
cmps
push
retf
mov
in
sub
je
sbb
mov
mov
frstor
and
(bad)
mov
and
cmp
adc
pushf
xor
cmp
push
call
cmps
outs
cdq
test
test
mov
mov
mov
pavgb
pop
ins
push
repz
in
pop
mov
in
xor
retf
sbb
push
out
outs
fs
lock
jmp
push
sbb
bound
or
das
repnz
cld
dec
das
xchg
adc
into
cmp
add
mov
mov
popf
aam
adc
aas
sub
dec
add
leave
or
mov
xor
icebp
xlat
gs
imul
jno
jbe
rcr
or
rcr
cmp
(bad)
shr
or
add
int
sti
out
jbe
nop
push
test
popa
retf
loop
div
in
add
cmp
inc
and
(bad)
xchg
test
cmp
imul
xchg
test
sbb
ins
pop
icebp
inc
(bad)
cmp
dec
inc
inc
jo
mov
sbb
stos
cli
xor
fbstp
xlat
pop
cdq
test
dec
mov
pop
imul
repnz
lods
mov
ret
sar
outs
xchg
in
push
pop
push
jb
lea
movs
mov
sar
pop
cwde
mov
(bad)
stc
mov
(bad)
icebp
pushf
and
jb
(bad)
cmp
mov
push
xlat
sti
push
(bad)
cmp
loopne
adc
add
pop
pop
add
adc
stos
pop
ins
jecxz
xchg
mov
not
push
outs
inc
xor
mov
das
mov
sub
cs
(bad)
cmp
cmp
test
jne
ror
cli
int
rcr
mov
js
arpl
shl
inc
test
push
pop
xlat
arpl
xor
lods
jnp
push
xor
jmp
push
pop
cmp
nop
imul
mov
xchg
lea
jle
jle
push
mov
js
sub
xchg
fs
(bad)
aad
sbb
xor
mov
jo
pushf
cmp
xchg
xor
push
ja
retf
cmp
neg
(bad)
jb
(bad)
cwde
jb
sbb
cld
inc
push
outs
test
ja
and
in
out
fs
push
jns
and
inc
pushf
fcom
mov
push
xchg
add
sbb
mov
jmp
out
sub
test
test
sbb
stc
mov
cld
pop
xor
inc
out
(bad)
mov
push
ins
ds
outs
bnd
xchg
loop
test
mov
xchg
xchg
out
or
mov
push
into
xchg
and
push
push
add
push
adc
jb
stos
outs
jno
adc
fwait
xchg
cld
std
fcmovnb
or
mov
cmc
and
cmps
jb
mov
add
cdq
std
xor
mov
cmp
les
add
sar
inc
mov
out
dec
jae
mov
dec
repz
push
jmp
std
pop
fist
mov
mov
jecxz
in
scas
out
push
(bad)
ror
ja
ins
scas
in
cmp
push
adc
sbb
mov
in
fcomp
sub
mov
lods
mov
sbb
push
inc
imul
sti
inc
std
push
xchg
mov
push
xor
dec
out
movs
xlat
in
jmp
fdiv
js
or
pusha
pop
adc
ds
into
push
shl
adc
popf
inc
sar
xchg
int
(bad)
jno
sar
ja
les
mov
and
pop
into
push
or
sbb
cld
jae
repnz
ret
stos
adc
adc
aaa
aas
shl
shl
push
imul
cmp
stos
push
sti
jae
dec
xchg
lds
pushf
mov
cwde
mov
enter
push
fdivr
in
and
mov
imul
xchg
(bad)
push
inc
ja
mov
mov
push
outs
ret
arpl
mov
call
mov
mov
add
and
lods
and
mov
cmp
xor
leave
and
adc
inc
pusha
test
pop
or
popf
xor
daa
sbb
jo
sahf
mov
push
add
xor
mov
call
push
add
xchg
fs
mov
mov
xchg
cmp
gs
jno
pop
call
jo
push
cmp
cmp
sub
add
mov
call
inc
cmp
cmp
pop
test
test
imul
sti
scas
cs
lods
push
sti
leave
(bad)
test
inc
jp
pop
addr16
cmp
cmp
jl
cmps
repnz
jbe
ret
inc
mov
stos
imul
lahf
(bad)
push
xor
movs
fistp
cmc
lea
fcomp
icebp
in
sub
jbe
call
stc
in
add
push
icebp
pushf
iret
mov
mov
jbe
ins
aam
addr16
pop
stc
pop
out
and
cld
mov
adc
inc
sub
and
fsubrp
gs
push
test
jmp
and
dec
xchg
xlat
ins
fdivp
sahf
jle
pop
sub
xchg
pop
cmp
pop
mov
xchg
in
fbld
mov
loop
mov
add
popa
(bad)
dec
push
mov
movs
adc
jne
repnz
fdivr
adc
mov
imul
ins
ins
stc
jle
or
popa
jp
sub
div
adc
mov
outs
div
dec
jg
add
cld
pcmpeqd
loopne
pop
fcom
aam
and
jmp
les
mov
test
imul
push
out
aas
and
cmp
and
mov
sar
outs
inc
add
iret
dec
push
(bad)
mov
jb
inc
ss
outs
out
cdq
jnp
out
sbb
pop
mov
pop
jbe
(bad)
(bad)
in
(bad)
xor
jecxz
minps
pop
dec
ss
test
and
inc
out
xchg
dec
leave
stc
dec
add
retf
cmp
ret
dec
loope
addr16
cld
mov
aam
sbb
fidivr
dec
fdivp
sub
inc
scas
cmps
xchg
xchg
lahf
or
pop
shr
adc
inc
mov
ss
xchg
out
je
lea
xchg
sub
shl
out
lock
mov
cmp
fistp
jecxz
dec
add
pop
push
stos
dec
fmul
popa
or
fistp
push
pop
push
inc
inc
mov
rep
scas
pop
dec
pusha
aaa
out
dec
repz
inc
mov
ss
mov
jmp
add
bnd
or
mov
hlt
cs
push
call
test
lock
and
imul
xchg
mov
push
pop
scas
das
cmc
out
pop
and
and
xchg
fnstcw
les
nop
sbb
loopne
mov
outs
xor
shl
sub
push
popf
xchg
call
iret
rcl
lods
sbb
ja
hlt
fs
cmp
(bad)
adc
pop
or
ret
dec
test
hlt
add
stos
jns
movs
fldcw
mov
jbe
inc
xchg
sbb
mov
mov
in
cmps
mov
lds
inc
(bad)
out
jns
cmps
pusha
out
aaa
dec
movs
inc
sub
ja
and
leave
in
lea
in
inc
jnp
div
rcr
stos
(bad)
inc
mov
xor
call
loopne
clc
ror
imul
sbb
scas
mov
(bad)
iret
cli
mov
push
sbb
shl
and
outs
sub
and
les
hlt
push
out
imul
dec
aam
push
adc
dec
ret
mov
pop
out
sub
lock
fstp
jp
add
jmp
jnp
mov
leave
(bad)
ror
movs
add
cmps
data16
pusha
fwait
mov
repnz
xor
stos
aad
sbb
in
jne
pop
xchg
xor
mov
int3
mov
in
or
cmp
mov
pop
minps
jne
push
dec
cmps
pop
hlt
test
jecxz
adc
xor
test
neg
sbb
ss
jae
sbb
shr
inc
les
in
sbb
or
movs
cs
inc
rol
ret
xchg
or
fdiv
arpl
data16
mov
shr
je
mov
jl
push
and
or
cdq
out
cmp
cdq
mov
aaa
ins
fsub
inc
xchg
xor
mov
popf
pop
push
imul
mov
sahf
adc
xchg
cli
loopne
leave
call
inc
lahf
outs
shl
and
jle
jp
inc
je
and
sbb
popa
aam
sub
jge
in
adc
mov
pop
cmp
scas
cmp
mov
out
neg
sub
test
add
cli
push
sub
jmp
(bad)
sbb
add
xor
rcr
loope
stos
lock
sub
inc
jg
xlat
mov
pop
test
push
movs
(bad)
call
or
xchg
mov
das
xchg
jae
nop
scas
ds
cmp
xor
mov
cmp
stos
lock
dec
xor
lahf
idiv
jg
push
add
xchg
retf
jns
xchg
inc
inc
mov
ret
sub
inc
pop
arpl
or
xchg
rcl
xor
pushf
xchg
repz
test
mov
sbb
js
hlt
test
imul
(bad)
icebp
dec
or
cdq
mov
adc
sbb
div
outs
add
inc
and
sub
or
cwde
bound
lea
std
out
in
add
sub
sub
xlat
popa
add
rol
les
mov
mov
das
xor
cmps
ret
push
adc
call
jmp
inc
mov
sar
adc
ds
sub
xchg
inc
inc
scas
push
adc
pop
mov
xchg
(bad)
fdivr
sbb
fistp
jmp
mov
test
movs
xchg
mov
daa
cld
repnz
push
int3
neg
pop
mov
in
cld
fwait
push
fbld
enter
call
shl
pop
jmp
std
add
call
sahf
enter
pop
mov
hlt
int
cmps
inc
sbb
xchg
add
cs
sbb
dec
xchg
push
mov
in
push
mov
loop
mov
call
cmps
xor
call
out
retf
mov
popa
test
out
push
dec
xchg
daa
dec
pop
jbe
mov
push
dec
retfw
jg
daa
movs
dec
scas
xor
pop
pop
or
fcmovu
fisubr
in
cld
mov
scas
popf
adc
loop
adc
outs
or
ss
test
and
cmps
(bad)
int3
push
imul
push
test
pop
and
cs
cmp
dec
cmp
es
and
pop
fld
into
out
xchg
jno
jle
and
in
xchg
and
inc
inc
cmp
sar
sub
loop
out
and
cmp
mov
push
and
mov
or
mov
adc
push
adc
aas
jbe
cmps
in
in
jno
or
adc
mov
pusha
add
adc
ins
out
retf
loop
lods
cmp
cmp
stos
std
scas
mov
leavew
push
jmp
sbb
push
hlt
cmp
popf
lock
push
dec
inc
sbb
add
sbb
mov
lods
dec
or
stc
retf
jp
mov
ds
sbb
sbb
xor
stc
adc
je
es
sub
and
add
aam
int
out
sub
lods
jmp
sub
mov
pop
pop
jp
retf
test
adc
gs
stc
adc
add
push
jg
adc
ins
(bad)
in
cmp
xor
shl
in
rcl
jae
test
jecxz
push
or
mov
add
cmps
sub
imul
lds
pop
cs
and
dec
pop
scas
or
ret
xchg
out
imul
add
push
retf
sahf
adc
xchg
sub
pop
lahf
cdq
shr
xchg
pop
push
dec
add
xor
ss
out
sbb
sar
popa
stc
pop
xchg
jmp
xor
fnstcw
in
scas
loopne
push
cmp
enter
mov
dec
int
mov
inc
test
out
adc
clc
ret
xlat
dec
mov
cdq
jb
out
sub
cmp
xchg
lds
xor
push
jmp
jnp
icebp
xchg
jne
xchg
sbb
popa
sbb
mov
dec
dec
imul
ins
xchg
aad
jb
xlat
(bad)
(bad)
bound
cmp
rol
enter
std
push
jnp
ret
mov
xchg
xchg
xchg
mov
hlt
inc
aam
mov
outs
rol
ss
lods
push
inc
out
push
push
loop
fdiv
or
lock
mov
std
ss
xchg
aam
lock
pop
push
cs
rcl
fidivr
rcr
out
loope
mul
pop
clc
and
lea
call
fdiv
in
aam
xor
out
add
add
(bad)
sahf
adc
xchg
or
push
les
adc
sbb
dec
and
pmullw
adc
popf
outs
and
test
nop
dec
mov
sahf
mov
inc
lods
mov
mov
xchg
mov
or
sbb
loop
adc
out
jns
inc
sti
push
sbb
lods
jl
clc
iret
xchg
fld
dec
sbb
cmc
lock
std
jbe
call
(bad)
inc
xor
dec
sbb
fwait
push
sub
loop
xor
imul
jmp
pop
sbb
push
xlat
(bad)
out
stc
les
lods
aas
sub
(bad)
fld
lahf
(bad)
fisttp
add
jmp
test
or
jno
and
inc
and
mov
daa
inc
int
jecxz
cmp
pop
loop
(bad)
sbb
ror
popf
xor
call
push
aam
dec
inc
mul
push
mov
call
or
aad
addr16
xchg
fadd
mov
scas
stc
mov
push
push
xchg
or
rol
in
sar
int
outs
add
dec
push
adc
(bad)
mov
stc
pop
xchg
loopne
sub
xchg
adc
rol
push
cmp
outs
pushf
jmp
xchg
pop
call
bound
push
addr16
sub
push
bound
pop
or
push
xchg
shl
jge
pop
mov
(bad)
mov
push
add
nop
jmp
iret
xor
add
iret
xor
aas
xchg
and
scas
lea
out
mov
ins
(bad)
repnz
ror
sahf
out
retf
mov
(bad)
aam
or
cmps
sbb
pushf
bound
popf
out
imul
push
sbb
jl
in
retf
dec
out
jmp
push
fs
adc
sbb
sti
dec
mov
lods
jp
int3
inc
(bad)
mov
dec
cmp
shl
repz
retf
jmp
adc
movs
sti
pop
fld
mov
pop
cmps
pop
pop
pop
cmps
sub
push
jnp
mov
test
push
popw
int
fadd
xor
pop
(bad)
push
push
lahf
or
fwait
add
cmp
mov
mov
sub
lods
ror
sub
and
mov
mov
aad
mov
mov
mov
adc
iret
cmc
sbb
inc
or
mov
push
cdq
jg
cmp
jnp
stos
sbb
xchg
sbb
add
not
iret
jb
lea
xor
cld
(bad)
mov
les
xor
mov
sbb
mov
xor
jo
mov
mov
fnstsw
mov
push
iret
sbb
test
mov
repnz
sti
xchg
(bad)
fdiv
cwde
icebp
mov
sub
fst
sub
cmp
sub
dec
xchg
int3
push
sbb
cwde
aam
scas
outs
fsubp
add
sahf
add
inc
push
loop
add
sub
fsub
cmp
scas
and
stos
fcmovnbe
sbb
sbb
xor
pop
push
push
pop
into
retf
ret
clc
adc
mov
aas
cld
xor
push
adc
ja
mov
xor
inc
adc
(bad)
fld
sbb
aad
(bad)
fbstp
retf
cmp
mov
test
mov
cmp
out
cmovae
sbb
lahf
xchg
fwait
jae
sbb
movs
inc
or
sar
xor
jbe
call
int3
xchg
lock
sti
loope
mov
cli
xchg
xor
jp
push
clc
sbb
(bad)
sti
push
xor
adc
mov
inc
mov
jno
push
jp
mov
in
inc
out
add
jbe
jl
dec
rcr
pop
fisttp
mov
lods
jno
and
stc
or
aas
dec
jbe
and
sub
(bad)
jmp
ja
call
cmp
aam
mov
iret
xor
stos
loop
aad
xchg
pop
js
jg
sbb
sub
jg
mov
leave
popa
push
pop
jns
aaa
loope
addr16
mov
mov
sbb
lock
int
mov
outs
leave
sub
shl
cmp
xor
(bad)
jp
dec
inc
jp
bound
jge
cmp
cdq
inc
ja
inc
jl
aad
cmp
mov
in
mov
inc
pushf
nop
inc
data16
inc
in
das
jbe
je
shl
cmc
fistp
jno
imul
pop
add
icebp
mov
fsincos
jmp
push
cmp
add
sti
das
xchg
ss
cld
sbb
rol
mov
lock
daa
out
ins
pop
mov
jae
and
loop
outs
out
cdq
aas
dec
push
sbb
push
pcmpeqd
mov
or
addr16
movs
(bad)
mov
add
inc
dec
lock
movs
mov
add
mov
mov
dec
sbb
adc
push
or
fwait
fs
int3
jl
mov
cs
and
sbb
sub
mov
ins
mov
icebp
icebp
sbb
jae
jle
fisttp
push
xchg
mov
mov
stos
cmps
sahf
xor
cmp
mov
sti
cmps
scas
data16
and
stos
add
jl
(bad)
mov
or
mov
loop
xor
test
mov
and
mov
lds
ret
dec
mov
mov
dec
pop
popa
xlat
in
fadd
xor
jno
xchg
sbb
ja
mov
add
shl
xchg
sub
dec
or
imul
mov
cmc
imul
xor
mov
js
repz
inc
loope
sahf
fs
mov
loopne
mov
rcr
xchg
pop
sbb
enter
xor
leave
(bad)
stc
scas
mov
mov
xchg
hlt
sub
cmp
cmp
punpckldq
lock
ror
inc
mov
lds
jmp
out
pop
push
or
sub
mov
mov
add
pop
pop
sbb
dec
jno
repnz
dec
hlt
mov
pop
popf
push
aad
jnp
cmp
fucom
test
movlps
test
fucomp
je
add
xor
and
mov
scas
clc
sub
imul
pop
in
xchg
mov
daa
inc
popf
adc
add
fdivr
inc
xchg
mov
sbb
xor
(bad)
pop
inc
pop
cmp
push
sub
lods
pop
jmp
and
maskmovq
sbb
fadd
sti
or
dec
jl
out
mov
jnp
movs
xchg
or
sbb
sar
adc
call
xchg
push
dec
xchg
movs
dec
sbb
movs
cmp
movs
dec
adc
outs
dec
cmp
mov
xchg
inc
xor
mov
mov
mov
inc
aas
push
gs
adc
popw
ret
into
push
cld
mov
sub
ficom
dec
add
outs
ins
cmp
daa
pusha
sbb
mov
stos
pop
dec
std
test
pushf
stos
scas
add
inc
push
sub
mov
pusha
mov
(bad)
pop
xchg
mov
add
cdq
mov
mov
jp
and
inc
out
mov
dec
shufps
sbb
mov
cmps
out
test
mov
pop
bound
inc
aad
add
test
fwait
call
dec
xchg
inc
retf
pop
mov
push
sbb
adc
js
(bad)
out
push
push
scas
out
pop
fisttp
sbb
cmc
mov
sti
iret
ds
call
inc
lea
into
cmc
(bad)
div
lods
data16
retf
fdiv
adc
add
and
or
jl
cs
shl
mov
and
cmp
jae
jae
sub
ds
ds
and
jo
cmc
loopne
icebp
jg
jp
or
sbb
mov
cmp
push
pop
(bad)
clc
inc
rol
(bad)
loop
push
sar
out
rcl
cli
aaa
imul
pop
pop
loop
jge
pop
imul
daa
jmp
dec
clc
inc
push
das
add
fisub
sub
std
repnz
pop
popa
icebp
pop
ins
aam
mov
mov
das
shr
or
clc
mov
jns
ja
cmp
add
and
jo
mov
stos
sub
lods
aad
jnp
jno
retf
jmp
adc
cmp
pop
ins
xor
sub
mov
mov
or
mov
adc
gs
imul
sub
fldz
mov
xchg
and
pop
pusha
popa
sub
xor
je
dec
inc
popa
xchg
sti
inc
lods
ss
fs
mov
test
jle
push
push
lahf
and
xor
nop
stc
not
stc
retf
stos
inc
pop
jbe
and
fs
mov
and
lods
jg
inc
cwde
repnz
add
stos
jge
leave
ds
sub
jmp
and
repnz
(bad)
stos
into
sbb
pop
push
jb
adc
dec
or
ins
pop
pop
jge
xchg
arpl
(bad)
fcomp
fadd
sti
pop
daa
mov
mov
hlt
(bad)
sar
jmp
fwait
cli
test
mov
mov
cmp
dec
fistp
add
cmp
push
lahf
into
xor
lock
stc
idiv
das
sbb
xor
mov
push
je
inc
mov
mov
out
mov
cmp
gs
xchg
push
pop
in
xor
outs
jecxz
not
(bad)
call
movs
mov
push
inc
loope
icebp
outs
cmp
or
lock
jmp
dec
jl
lds
in
adc
jmp
pop
xchg
fimul
mov
fxtract
sub
mov
inc
mov
dec
in
pop
pop
daa
mov
dec
and
sub
stos
out
arpl
and
push
adc
outs
ss
push
ficom
lods
std
divps
sub
cmp
push
call
nop
js
gs
popa
ins
in
ins
adc
ret
cmp
cmp
and
mov
repnz
mov
mov
jb
test
sub
and
cs
not
in
xchg
bswap
pop
dec
daa
sub
adc
rcr
scas
pop
xchg
enter
stos
ja
in
pop
jmp
mov
ins
int3
jnp
fwait
push
jge
out
inc
mov
mov
or
data16
mov
or
sub
xor
cmps
je
jae
mov
out
leave
push
sub
ret
adc
bound
sbb
mov
cmp
popa
(bad)
aam
add
inc
out
stos
aaa
jle
sbb
fild
arpl
repz
xor
mov
cmp
push
cmp
enter
sbb
dec
lea
(bad)
sar
jbe
js
mov
pop
or
int3
jae
add
mov
xor
bound
fmul
adc
test
jl
fcmovbe
sbb
mov
adc
mov
or
mov
sub
(bad)
jmp
inc
lods
lock
ss
jmp
cmc
fwait
pop
xchg
pop
test
aad
or
pusha
mov
push
iret
jnp
rcr
jge
cmp
jne
inc
call
mov
mov
icebp
iret
mov
outs
test
sahf
(bad)
push
mov
cld
cdq
pop
inc
jp
call
int3
and
jmp
mov
jl
rcr
mov
add
cmp
xlat
js
lods
mov
int
iret
sar
add
dec
jg
mov
cmc
lea
test
fsub
dec
stos
stos
mov
ror
into
leave
pop
inc
enter
cmp
ret
shl
mov
xchg
sahf
xchg
mov
pop
jl
outs
test
cmp
out
in
sub
outs
cmps
mov
hlt
call
push
call
je
je
out
(bad)
dec
xchg
ror
(bad)
push
lock
mov
jo
sbb
xor
gs
mov
into
out
or
ds
jb
inc
pop
xor
popa
add
jbe
pop
sub
cmp
dec
inc
es
int3
xor
inc
cmps
popa
ficomp
xchg
jge
add
add
ret
and
in
int
sbb
fisttp
pop
ss
cmp
fcomp
vmovaps
enter
jle
push
xchg
lahf
arpl
arpl
int3
sub
outs
and
dec
ret
dec
mov
and
dec
cmc
fwait
mov
movs
cmp
sti
mov
pop
arpl
cmps
sti
xchg
dec
js
or
(bad)
mov
repnz
adc
pop
fbstp
ret
push
mov
ficomp
xchg
fstp
arpl
enter
movs
adc
inc
gs
cmp
js
sbb
xchg
and
mov
repnz
push
fwait
dec
(bad)
cmp
sar
(bad)
mov
es
cmps
icebp
fidivr
or
xor
fwait
jne
(bad)
xchg
pop
xchg
imul
xlat
clc
xor
imul
arpl
std
icebp
psubb
dec
adc
sub
pop
push
call
xlat
out
pop
cs
(bad)
call
adc
int3
sub
inc
ror
inc
mov
test
ret
fsub
xlat
sbb
aam
pop
lds
add
daa
mov
mov
(bad)
cmp
aaa
sar
xor
stos
data16
push
xchg
mov
enter
adc
xchg
and
inc
lea
fsub
xchg
test
dec
les
in
repz
dec
(bad)
xor
jecxz
scas
mov
imul
test
int
addr16
push
push
mov
sbb
add
popa
jb
sbb
dec
call
out
cwde
jns
inc
in
dec
or
push
imul
cli
inc
push
sbb
jmp
push
jmp
sbb
cdq
inc
mov
xacquire
add
jae
push
(bad)
xchg
jmp
mov
mov
shl
les
rol
dec
pop
loope
jle
mov
lods
shr
sub
fcomp
dec
cs
pop
cmps
mov
or
inc
sub
push
ret
add
cmp
sbb
and
arpl
outs
out
sbb
sub
dec
add
lea
js
ret
lea
sub
sbb
sbb
and
pop
jmp
lds
setb
retf
dec
xchg
test
xchg
push
clc
cdq
call
cdq
push
and
cmps
jp
rcr
repnz
fstp
(bad)
dec
add
xor
push
cmp
and
retf
sti
lods
jmp
std
cmp
ss
and
das
jge
add
inc
or
stos
sbb
push
push
out
(bad)
xlat
out
pop
xchg
xchg
in
daa
in
ja
push
movs
cmp
fwait
push
jl
cmps
mov
test
jnp
hlt
xchg
push
xor
cmc
push
pop
neg
shr
inc
add
add
mov
loope
test
mov
pop
adc
jmp
add
pop
xchg
icebp
stc
mov
call
in
inc
jb
aad
cmp
and
cmp
pop
and
sbb
mov
in
xchg
in
inc
cmp
out
inc
dec
adc
cmps
jmp
pop
mov
rcr
lods
sbb
cmp
jg
mov
mov
mov
cli
pop
or
ror
test
scas
push
jecxz
lods
fdiv
mov
pop
xchg
cmp
(bad)
mov
cmp
cld
inc
push
retf
(bad)
cld
leave
push
bound
xchg
lods
gs
fild
fwait
imul
dec
xchg
movs
adc
mov
xor
jbe
in
mov
mov
xchg
cmps
fld
sub
shr
inc
rcl
imul
aad
jmp
or
mov
out
xchg
push
jns
and
sub
test
mov
scas
xchg
ss
jmp
icebp
fdiv
loop
pusha
ret
ins
inc
inc
cli
mov
xchg
dec
mov
fld
rol
gs
loop
lods
push
(bad)
jns
stos
shl
sub
or
dec
in
je
mov
push
jns
ss
pushf
rol
xchg
add
enter
push
loop
arpl
js
inc
inc
mov
dec
jecxz
outs
adc
and
movs
pop
repz
xor
out
nop
jmp
fstp
pop
lea
std
fnsave
data16
retf
sahf
cmps
sbb
repz
iret
inc
inc
fst
ins
mov
loope
sub
or
mov
pop
mov
jmp
sbb
stos
shr
mov
mov
call
mov
sbb
stc
xchg
test
or
jecxz
retf
xchg
add
mov
pop
lea
nop
test
repz
xlat
rcl
and
add
sub
and
fsubr
xor
shl
mov
cld
(bad)
jnp
jg
frstor
popf
push
sbb
lods
sbb
sbb
mov
icebp
fsub
les
or
enter
loope
xcrypt-ctr
cmps
sbb
mov
mov
push
aam
mov
mov
mov
add
(bad)
stc
jg
xor
xor
ja
xor
mov
adc
add
fwait
dec
xchg
mov
pop
sub
cmp
adc
pop
test
xchg
lock
jg
mov
ficomp
sbb
adc
and
and
push
ret
mov
retf
stos
out
adc
pop
or
mov
in
adc
fmul
not
scas
mov
popa
scas
push
std
pushf
pop
outs
sbb
out
rol
push
inc
sub
mov
out
into
and
push
setno
xor
cmps
std
mov
bound
inc
inc
add
ss
mov
jle
int
push
mov
cmp
lea
sub
test
jmp
(bad)
mov
sbb
dec
add
mov
and
es
loop
jno
dec
inc
lds
jmp
(bad)
push
enter
cwde
mov
adc
add
sti
dec
(bad)
call
cmps
(bad)
lds
or
jmp
adc
aad
mov
hlt
adc
das
dec
add
add
dec
inc
pop
ret
(bad)
das
mov
scas
or
inc
(bad)
xchg
sbb
mov
imul
adc
int3
push
dec
jbe
dec
pop
pavgw
xor
cwde
cli
pop
jb
cdq
cmp
adc
test
mov
cmp
enter
cdq
clc
(bad)
cs
mov
and
icebp
xchg
cmp
cmp
mov
pop
out
rol
int
pop
(bad)
mov
aas
fild
out
mov
popf
lods
jae
mov
mov
lea
or
mov
or
cmp
repz
inc
xlat
inc
mov
inc
(bad)
ins
lock
and
add
sbb
cmp
movq
pop
popf
mov
xor
out
mov
in
dec
inc
mov
pop
jo
sub
mov
and
in
jge
dec
jbe
mov
fcmovu
push
push
pop
(bad)
cmp
sbb
es
movs
lods
std
aas
or
cs
inc
test
(bad)
mov
mov
outs
mov
dec
(bad)
in
and
or
sbb
int
out
xlat
xor
lea
shl
mov
pop
lea
shl
mov
cmps
mov
jge
jno
add
or
loop
add
iret
cmc
inc
add
mov
add
cmp
dec
add
shl
(bad)
and
jmp
adc
dec
jecxz
and
div
pop
sub
jge
mov
in
int
popf
xchg
push
int
inc
mov
xchg
imul
pop
in
shl
adc
push
mov
in
push
xchg
ins
mov
(bad)
lods
(bad)
xor
pop
and
sahf
nop
adc
inc
jmp
xchg
(bad)
(bad)
sbb
or
mov
jno
test
push
les
jmp
es
mov
dec
xchg
outs
dec
daa
loopne
mov
into
jge
jle
xchg
fyl2x
stos
jp
add
add
popa
xchg
pop
lock
push
icebp
cmp
es
cmps
inc
cmp
dec
pushf
leave
add
pop
movs
xchg
mov
shr
fs
fwait
add
sub
daa
(bad)
sbb
js
sti
mov
sub
cmps
enter
out
and
jno
aaa
cmc
and
popf
inc
mov
xchg
jp
jo
inc
fbstp
mov
xchg
jo
cmp
xchg
imul
pushf
push
fwait
sub
jmp
cmc
dec
sti
lock
mov
xor
jmp
jns
push
mov
inc
sbb
sbb
arpl
xchg
mov
cmp
(bad)
(bad)
aad
sub
ret
(bad)
xor
daa
xchg
imul
xor
lods
mov
imul
out
mov
arpl
and
push
adc
mov
mov
push
pusha
inc
packuswb
aam
loopne
repnz
movs
dec
inc
mov
inc
mov
cmps
ins
xlat
xor
fcmovnu
dec
inc
cli
push
(bad)
mov
ds
cs
outs
pop
mov
sbb
es
inc
retf
cmp
retf
popa
mov
inc
sub
cmc
mov
test
xor
fadd
addr16
or
les
or
sti
dec
rol
lds
lea
rcr
and
push
xchg
pusha
je
adc
sbb
aaa
xchg
jne
rcr
jg
aam
and
sar
out
arpl
push
jne
jmp
sbb
into
add
and
imul
stos
pop
jmp
leave
popf
enter
mov
fwait
add
sbb
xor
add
adc
shl
dec
xchg
dec
out
xchg
clc
pop
push
or
xchg
dec
push
lock
inc
pop
cmp
in
cmp
adc
lock
fcom
imul
(bad)
mov
dec
int
push
sub
mov
inc
adc
ja
xor
lock
ins
jge
mov
jecxz
xor
fdiv
push
dec
jnp
outs
add
xchg
dec
retf
mov
sub
xor
dec
pop
mov
mov
inc
mov
aam
add
out
test
test
adc
aam
inc
out
push
xor
pop
mov
push
and
inc
aad
adc
ror
dec
fstp
cdq
cmc
pushf
xchg
into
pop
inc
daa
repnz
adc
imul
xchg
mov
shl
sbb
dec
mov
icebp
imul
xor
cmp
dec
test
int
rcr
sub
cmp
xor
mov
gs
test
jae
xlat
mov
sub
xor
lds
push
dec
mov
shl
div
fcomip
cmp
xor
cmp
push
sbb
or
push
push
movs
and
das
mov
out
xchg
push
dec
or
xchg
sbb
(bad)
cmp
cli
xchg
outs
push
sbb
mov
int
(bad)
retf
push
sub
imul
inc
retf
dec
loop
mov
lds
mov
push
push
push
sbb
or
arpl
xchg
cmps
std
dec
arpl
aaa
xchg
stos
popa
(bad)
jmp
movs
shl
sbb
cmp
aad
xchg
add
cmp
cdq
popa
mov
inc
mov
xchg
sbb
or
pop
movs
jg
adc
scas
push
pop
mov
xchg
iret
les
neg
inc
xchg
nop
and
ror
xchg
push
cmp
es
inc
and
fdiv
xor
addr16
(bad)
push
jg
test
push
xor
aam
ins
mov
pop
and
jmp
xor
push
loope
int
mov
push
out
jp
sub
outs
and
jge
dec
in
ja
ss
push
xchg
stc
(bad)
add
divps
jp
or
sub
xchg
(bad)
cmp
or
icebp
movs
lods
mov
aad
outs
lods
and
cmp
imul
je
ss
in
add
call
add
repz
cli
and
jmp
dec
div
call
in
mov
fcom
pop
cs
pop
add
dec
cmp
jmp
test
dec
jg
mov
movs
fcom
ret
(bad)
out
cmp
faddp
popf
jge
(bad)
(bad)
inc
mov
mov
ins
add
mov
std
loope
adc
pop
out
jle
ins
in
sub
adc
push
mov
retf
mov
jnp
mov
out
or
inc
rcr
icebp
or
adc
mov
or
push
fcomp
(bad)
out
and
arpl
jg
ja
enter
push
mul
push
inc
scas
pop
dec
xor
mov
jecxz
clc
mov
ss
push
pop
cmps
jmp
scas
pop
mov
add
shl
in
loope
in
inc
stc
adc
cmp
mov
pop
sar
cmp
das
cwde
xchg
mov
push
or
mov
pushfw
sub
nop
div
xchg
jecxz
cmp
cmp
hlt
cmp
sub
mov
cwde
jnp
cdq
in
pusha
stos
rcr
xchg
mov
cmc
pop
nop
dec
outs
mov
div
adc
jmp
adc
pop
cmp
adc
cmp
or
out
pop
clc
xchg
pop
jecxz
enter
(bad)
xor
sub
inc
inc
mov
xchg
ror
pop
mov
ja
int
(bad)
mov
sub
stos
ins
nop
add
mov
es
and
movs
ror
dec
fdivr
inc
(bad)
cmps
shr
jb
pusha
popa
and
fadd
xchg
mov
outs
dec
mov
cwde
shl
dec
dec
cld
(bad)
ret
lds
dec
cmp
int3
loopne
cmp
mov
cmp
xchg
ins
and
pop
out
out
aas
sub
cs
out
mov
xchg
arpl
add
pop
(bad)
in
xchg
xchg
push
cmp
int
idiv
cli
(bad)
sbb
out
repz
jmp
dec
sar
cmp
mov
sub
fdivrp
lock
test
pusha
clc
and
add
leave
xor
ror
inc
pop
popa
pop
adc
or
push
mov
movs
dec
lods
movs
mov
cmp
mov
sbb
push
lods
dec
dec
(bad)
movs
out
sub
test
cmp
cmp
lock
cmp
pop
and
fndisi(8087
jecxz
cmp
(bad)
ins
lahf
fcmovnu
xlat
sub
cmp
cmps
sub
(bad)
cdq
outs
lods
ror
xchg
aad
xor
dec
mov
push
xor
cmc
push
hlt
rcl
imul
mov
xor
or
es
or
mov
(bad)
out
mov
mov
cmp
out
jbe
js
movs
enter
and
stc
xor
mov
pushf
xor
sahf
jo
jns
adc
repnz
xchg
inc
sbb
popf
lods
cmps
in
fisttp
test
and
mov
retf
sub
ins
aam
fdiv
mov
stos
xchg
xor
cwde
mov
push
mov
sbb
xchg
dec
mov
es
jmp
inc
cld
sar
xchg
mov
xor
int3
cmp
add
and
iret
pop
int
adc
out
addr16
jge
or
cmps
sub
sub
stc
ja
inc
scas
es
lds
cdq
and
xlat
fs
push
sub
sbb
xor
scas
scas
movs
jl
lock
ret
ret
repz
push
xchg
cwde
and
scas
xchg
add
add
sbb
mov
movs
push
repnz
ja
mov
int
add
rcl
sbb
jmp
xchg
xlat
push
xchg
inc
jne
sbb
jae
fbstp
fmul
shr
imul
fcom
ficom
xchg
inc
daa
(bad)
sti
mov
sahf
hlt
movs
movs
iret
cdq
cmc
inc
mov
add
sbb
dec
sub
jg
push
faddp
fild
pop
out
mov
popf
pop
mov
dec
dec
cmps
cs
xchg
xor
mov
rol
or
mul
sti
or
dec
(bad)
xchg
inc
cmps
inc
mov
mov
pop
sahf
sbb
or
dec
mov
dec
dec
(bad)
and
retf
(bad)
rol
add
add
nop
push
loopne
mov
sahf
or
lahf
ins
pop
stos
add
push
gs
inc
xchg
mov
scas
dec
inc
jmp
jmp
cmp
je
xchg
sub
mov
sahf
sub
(bad)
stc
push
(bad)
mov
or
jecxz
dec
cwde
dec
mov
cmp
(bad)
lods
xchg
lds
cmp
jno
mov
cmp
add
push
xchg
inc
mov
cwde
mov
pop
and
jecxz
dec
out
fcom
xor
mov
mov
sar
mov
pop
jb
sti
adc
iret
repz
paddw
inc
mov
outs
addr16
(bad)
in
jb
and
mov
jp
cmp
jl
in
inc
adc
loopne
aaa
or
nop
inc
xchg
push
mov
loope
inc
mov
stos
movs
inc
dec
mov
outs
cwde
int3
dec
jp
mov
jmp
mov
xlat
dec
or
or
xor
int3
adc
and
shr
es
and
es
push
int
out
dec
enter
int
arpl
ror
xor
mov
iret
retf
xchg
dec
pop
dec
test
push
add
retf
mov
adc
mov
cmps
mov
pop
cmp
push
sub
push
and
hlt
jp
jno
jecxz
jp
loope
sbb
and
test
and
ds
add
mov
pop
neg
cmps
add
or
adc
sbb
fprem
test
lods
pusha
(bad)
out
sub
fadd
lock
mov
lea
shr
xlat
inc
lahf
mov
sti
aam
or
mov
rcr
loope
call
xor
push
and
pop
leave
add
cmp
lods
lock
clc
(bad)
xchg
pop
mov
leave
enter
inc
sbb
adc
(bad)
adc
clc
fcomp
jmp
jnp
jge
rcr
jge
stos
cmp
mov
pop
ret
jmp
das
(bad)
mov
or
icebp
into
cmp
movs
and
push
dec
mov
sub
aam
pop
dec
pop
pop
mov
push
adc
mov
sbb
jp
jb
lock
test
cwde
fwait
hlt
int
pop
xor
cmp
sbb
fwait
out
loopne
inc
push
mov
jg
lods
into
and
lea
push
cli
xor
mov
nop
sbb
inc
cmp
(bad)
push
add
sub
add
cmp
iret
mov
mov
sub
push
dec
jecxz
nop
sbb
into
mov
mov
aas
add
xor
ja
lods
pop
sti
adc
adc
jmp
arpl
xchg
or
mov
cs
fucomp
mov
sbb
cmp
push
jae
add
jo
jno
into
into
cmp
stos
mov
cmp
pushf
shl
cmps
and
jb
retf
(bad)
js
or
mov
imul
js
aaa
lahf
cs
jno
mov
jns
mov
dec
into
jmp
xor
aad
cmp
fnsave
push
scas
imul
dec
xchg
xchg
cmc
dec
test
loopne
push
mov
fwait
push
cs
or
pop
xchg
jmp
scas
(bad)
sub
retf
data16
mov
ret
repnz
mov
nop
inc
shr
into
les
sub
sub
cmc
sbb
ins
and
arpl
adc
in
xchg
fsubr
int3
jmp
daa
push
lods
pop
mov
mov
add
aaa
call
push
test
fsubr
ja
nop
outs
inc
jno
sbb
adc
xchg
push
movs
and
mov
inc
popa
sub
ffree
xor
into
ins
shl
bound
mov
lahf
jbe
rcr
dec
imul
push
mov
in
push
or
mov
das
inc
mov
push
adc
or
add
sbb
sub
push
cmp
loopne
sbb
jmp
mov
pusha
sub
sub
pop
add
out
jbe
sub
dec
ss
pop
mov
int3
cmp
or
cmp
daa
and
clc
sahf
add
enter
push
fidiv
pusha
add
out
push
or
jl
aaa
mov
dec
add
ja
(bad)
arpl
lss
adc
(bad)
xchg
(bad)
in
aam
imul
mov
xchg
push
add
jg
add
xor
in
jne
in
shl
retf
xchg
mov
jle
pop
jp
out
fsub
and
push
adc
cmp
leave
push
adc
popa
ss
cmp
push
sahf
push
jge
test
pusha
jno
fld
(bad)
in
loope
inc
inc
imul
iret
out
sbb
sbb
mov
cmps
inc
and
xor
xrelease
movs
add
cmp
adc
sti
sub
cmp
in
mov
mov
inc
rcr
stos
adc
push
cli
std
mov
dec
shl
(bad)
push
sub
inc
xor
out
jns
push
adc
pop
xchg
adc
add
pop
push
cdq
loopne
jl
in
pop
ror
sub
mov
cmps
ret
stc
add
std
xor
jmp
fs
jle
int
fsubr
pusha
mov
cmps
fwait
aaa
mov
mov
or
mov
fcmovbe
inc
mov
sub
pusha
or
loope
push
lea
test
nop
test
cmp
cmps
sub
es
lds
out
jp
dec
jae
or
scas
retf
aam
push
jo
out
das
scas
fstp
and
push
icebp
mov
stos
xchg
and
test
xchg
or
nop
inc
push
pop
xchg
and
idiv
adc
jbe
push
rol
cdq
fsubr
stos
or
outs
or
pop
mov
(bad)
and
clc
mov
dec
pop
das
(bad)
into
pop
xchg
out
xchg
xchg
pop
sub
pushf
xchg
dec
repnz
dec
out
ins
cmps
cmp
adc
popa
retf
popa
sbb
inc
repz
ret
adc
push
jp
xchg
mov
cmc
or
mov
rol
mov
add
add
(bad)
call
xor
mov
mov
mul
cmps
popa
mov
jl
shr
rol
aad
ss
cmp
sub
mov
fidivr
test
adc
clc
cmp
or
jge
imul
jle
fnsave
scas
jb
mov
in
scas
into
out
(bad)
std
dec
jbe
daa
jne
sub
dec
ins
sub
cld
nop
popa
mov
xlat
mov
sbb
push
fs
loop
jle
fsub
rcl
dec
sbb
call
repnz
dec
jo
or
mov
clc
pusha
dec
cmps
gs
leave
popf
sar
xlat
pop
shl
and
pop
call
mov
rcr
inc
xor
fimul
int3
mov
outs
mov
add
iret
jns
pop
lock
jne
lock
cdq
mov
(bad)
pop
adc
frstor
out
cmc
and
inc
adc
push
push
das
pop
pop
adc
cmps
xchg
add
ret
sahf
jecxz
lods
pop
(bad)
retf
addr16
jb
test
sub
jge
rcl
or
bound
popa
iret
push
pop
and
add
add
call
es
int
sub
outs
mov
cmp
cld
xor
or
jno
aam
nop
adc
call
push
out
shr
sbb
mov
scas
mov
fimul
outs
jg
sahf
cmp
sub
fcmovne
push
scas
mov
out
ret
fistp
in
push
clc
mov
xor
sub
out
jo
xchg
scas
mov
(bad)
cld
or
les
jl
stos
mov
push
out
scas
push
ret
mov
adc
adc
fidivr
test
mov
call
jae
in
mov
sahf
lea
movs
inc
fst
ror
fdivr
inc
lds
call
jle
xchg
sub
stos
or
xchg
or
fimul
gs
fistp
scas
mov
push
int
dec
clc
dec
lods
or
jbe
outs
mov
or
iret
jo
aam
fnstsw
std
je
ins
cmc
inc
and
outs
pushf
pop
(bad)
pop
or
inc
dec
fnstsw
adc
icebp
xchg
cdq
inc
shl
lods
inc
pop
mov
cmp
or
clc
pop
sbb
pop
inc
xchg
repnz
inc
test
adc
cli
movs
mov
add
and
and
inc
icebp
adc
out
(bad)
popa
pop
movs
xor
or
aad
lock
loopne
xchg
(bad)
jg
pop
pop
and
mov
push
iret
lahf
mov
ss
or
iret
loopne
jmp
out
call
in
inc
mov
popa
es
or
out
test
in
repz
and
inc
sub
fwait
push
xchg
mov
add
push
xchg
cdq
cwde
inc
je
fsub
repz
mov
adc
iret
xor
push
call
adc
fsub
rcr
cmp
adc
iret
jnp
ds
cwde
cmp
xchg
push
data16
or
mov
xchg
(bad)
mov
div
jge
inc
mov
inc
dec
mov
push
out
xchg
cmp
enter
aad
in
or
xchg
aas
jb
jbe
sub
gs
mov
xor
dec
loop
mul
and
mov
or
inc
cld
test
rcr
push
(bad)
jmp
std
mov
pop
jne
mov
into
inc
leave
(bad)
in
mov
retf
shl
into
inc
sub
sub
cmp
jg
mov
xchg
add
ret
xor
cmp
dec
xchg
mov
jo
dec
pop
ror
mov
sub
jle
jbe
push
call
sbb
movs
sbb
sar
dec
mov
and
pop
shl
fsubr
mov
xchg
(bad)
jb
cmps
pop
mov
mov
dec
dec
(bad)
test
fild
fwait
push
cmp
cdq
pop
add
dec
or
aaa
fsub
and
clc
mov
scas
outs
into
push
mov
gs
cmp
in
je
push
inc
xor
cmp
cmp
out
arpl
mov
push
and
lds
jg
or
or
arpl
mov
cmp
cmp
xchg
loop
inc
push
cli
sub
mov
test
mov
lahf
inc
in
mov
push
xchg
mov
out
jae
dec
mov
xor
mov
fidivr
bound
scas
xchg
fnstenv
sbb
inc
push
(bad)
jecxz
cmps
xchg
inc
sub
and
push
mov
movs
mov
cmps
mov
loope
les
jecxz
mov
test
add
sbb
sbb
loopne
icebp
pop
out
adc
mov
aaa
scas
cmp
inc
inc
sahf
and
mov
dec
jno
push
cmc
sub
(bad)
push
inc
fsubr
mov
mov
ds
jno
test
mov
das
(bad)
push
int3
inc
fisttp
inc
xchg
adc
(bad)
mov
les
into
mov
aam
sub
sbb
inc
sahf
rol
out
inc
retf
or
mov
or
mov
out
inc
bound
lods
add
sub
adc
and
and
xchg
jo
daa
std
in
inc
cmp
ficom
jbe
push
hlt
mov
mov
push
in
sub
and
xor
dec
adc
mov
xchg
add
es
cmp
rol
clc
call
jp
push
es
adc
fwait
sub
jg
call
aam
popa
or
add
(bad)
pushf
pop
scas
xlat
loop
in
fidivr
xchg
fs
aaa
frstor
pop
push
adc
xor
cmp
mov
adc
jmp
pop
out
jmp
ret
mov
xchg
mov
and
ret
rcr
bound
xor
std
jne
xchg
or
adc
js
jb
cmc
ins
cmp
or
mov
xor
jmp
repz
aas
and
aad
dec
frstor
out
dec
ins
clc
aaa
(bad)
hlt
leave
sar
jne
jae
mov
lods
arpl
mov
mov
cmp
push
popa
int
adc
push
inc
stc
aam
cmp
loop
jl
jecxz
xor
cmp
imul
jnp
sub
pop
add
sbb
sub
cdq
cmp
push
cmp
fdivr
dec
or
enter
sbb
adc
(bad)
movs
sbb
and
push
and
iret
sbb
out
cmp
sbb
std
mov
loopne
sbb
clc
js
jmp
or
mov
rcl
jb
xchg
and
xchg
(bad)
push
test
imul
or
mov
add
lock
xor
ins
outs
mov
mov
rol
aas
dec
fidivr
sub
shl
dec
dec
lahf
fs
fst
dec
fiadd
popf
mov
jge
mul
imul
cld
dec
push
pop
and
js
push
(bad)
stc
pop
push
out
adc
aad
adc
ds
(bad)
out
pop
dec
mov
es
adc
arpl
mov
sbb
rcr
add
mov
fst
ja
ret
sub
clc
inc
cs
lahf
jne
jl
dec
mov
pushf
sub
adc
or
add
cmps
shl
and
mov
and
sub
and
into
sbb
sar
mov
shl
sub
imul
lea
xor
pop
mov
popa
retf
dec
retf
(bad)
mov
mov
cwde
dec
fist
test
ins
add
mov
add
mov
adc
(bad)
cmp
dec
xor
jne
adc
cmp
sti
jl
adc
add
jns
scas
inc
aad
xor
cmp
add
mov
icebp
mov
fisub
(bad)
fst
dec
mov
in
pop
push
sbb
cmps
call
pusha
retf
xchg
adc
retf
retf
in
mov
fnsave
add
jbe
dec
pop
jge
call
or
shr
or
pop
dec
inc
js
ss
(bad)
xchg
or
jl
jbe
push
sub
mov
cdq
stc
sub
ss
inc
sub
push
xor
cmp
xchg
aad
jbe
sub
push
shl
sub
pop
mov
jns
inc
fwait
pop
stc
lds
xor
fidiv
repz
jl
popa
mov
fisub
inc
call
mov
xor
loop
mov
enter
nop
mov
repnz
mov
pop
jmp
xor
daa
and
mov
in
pop
adc
mov
lock
or
ins
xchg
inc
fist
pop
ret
gs
push
or
(bad)
cmps
outs
imul
scas
das
push
adc
xor
pop
add
pop
mov
leave
iret
nop
jl
aaa
mov
xchg
mov
lea
pop
adc
inc
sbb
in
test
test
add
ds
and
mov
sbb
xlat
xor
fcomp
pop
mov
xor
push
sub
pusha
aas
pop
cmp
sub
movs
sub
lock
pop
or
movs
sar
in
push
adc
(bad)
mov
icebp
ins
push
mov
(bad)
cmc
jp
xor
jge
mov
ret
jns
sub
and
mov
outs
or
loop
push
js
gs
daa
jge
dec
je
jo
mov
gs
daa
cmc
push
ins
je
scas
or
jg
das
neg
adc
jmp
fiadd
std
ror
rcl
movs
pop
jne
out
out
push
sbb
test
lahf
(bad)
in
cmp
sbb
xchg
shr
xchg
adc
sub
sbb
fdiv
ret
not
jne
jp
test
or
rcl
mov
pop
inc
xor
fisub
xor
cmp
mov
repnz
sub
xlat
xor
retf
std
lods
in
sub
aas
pushf
aaa
sub
aad
push
lock
jge
fwait
sub
or
mov
je
popf
and
jp
clc
dec
lds
or
add
pop
fucom
fcom
ret
xchg
and
test
mov
pop
pop
pop
mov
sub
mov
scas
and
pop
inc
xchg
mov
aas
adc
xor
cli
mov
inc
jno
movs
fidivr
lods
xchg
sbb
and
test
jecxz
shr
xchg
or
dec
xchg
cdq
jnp
bound
fsubp
dec
nop
std
ins
rcl
lods
and
lahf
int
cmps
ja
pop
aas
shl
dec
data16
or
popf
out
bound
mov
mov
loope
xchg
call
inc
dec
or
sbb
ret
int
jns
push
dec
and
xor
mov
lds
jne
out
push
and
leave
loop
popa
(bad)
out
jmp
pop
push
xchg
loop
(bad)
adc
pop
mov
cmp
cld
es
inc
xchg
or
add
mov
call
fnstsw
xchg
adc
(bad)
mov
hlt
fisubr
fild
sbb
cmp
jns
retf
mov
or
sub
js
sbb
aaa
cmp
test
pop
test
(bad)
pop
popf
fist
retf
mov
xor
push
(bad)
fs
mov
adc
popf
sahf
scas
inc
pusha
shl
daa
add
enter
xor
push
lea
(bad)
mov
repnz
mov
aaa
data16
jecxz
mov
and
add
pop
sbb
imul
pop
ins
xor
shr
vpshlq
inc
imul
add
dec
leave
dec
push
sbb
mov
xor
imul
push
mov
sbb
pop
pop
and
or
inc
xchg
sti
shl
push
sub
loop
xor
outs
rol
test
call
push
fsub
ret
int3
cmp
sub
or
or
sbb
cmp
sub
not
jb
std
shl
outs
popa
adc
inc
sbb
in
test
add
into
cmp
mov
jmp
or
sbb
stc
sub
sar
lods
cld
and
or
rol
adc
cmp
cwde
fldenv
mov
cmp
in
sti
fld
dec
mov
push
nop
jge
shr
or
jbe
inc
test
push
stos
xchg
std
rcr
dec
iret
mov
mov
cmp
jno
xchg
lock
inc
fwait
lds
ret
aaa
mov
bnd
sbb
xchg
pop
cmp
dec
aam
ja
push
test
fldlg2
dec
sbb
jb
int3
inc
push
mov
gs
xchg
push
je
frstor
fist
ret
sbb
jns
inc
sahf
(bad)
push
dec
std
cmp
dec
(bad)
pop
lock
inc
push
lea
imul
popa
or
call
rcl
scas
jne
jmp
sar
test
sbb
xchg
mov
std
jl
test
es
push
push
xor
shl
js
cmp
mov
mov
stos
out
cmps
(bad)
imul
pop
push
int
xchg
popf
out
repnz
int
push
add
std
xor
sahf
xor
push
xchg
stos
jmp
scas
pop
inc
out
jmp
mov
mov
imul
mov
mov
fdiv
xchg
fsub
fstp
mov
es
sbb
inc
sbb
stos
test
leave
sbb
xor
xor
loop
(bad)
xchg
mov
cmp
mov
inc
add
dec
add
aaa
push
push
out
cmc
xchg
in
add
imul
push
sbb
xchg
rol
leave
mov
inc
es
in
movs
idiv
fsub
cmp
popa
leave
sti
fs
ss
sub
push
mov
inc
xchg
or
cmc
jno
cmp
int3
test
inc
add
sub
scas
push
xlat
aam
ret
mov
out
iret
js
push
dec
xor
ins
push
or
xor
mov
mov
aad
cs
mov
and
ret
into
lods
dec
ja
pop
fstp
outs
stos
or
xor
lahf
fldenv
sti
int
loop
cmps
in
popa
shr
es
aad
jge
call
inc
cmp
mov
add
mov
out
adc
nop
jb
pop
cli
sti
lock
fcmovnb
(bad)
push
fwait
push
pop
sbb
push
or
scas
stos
add
int
and
cmp
pop
or
jecxz
imul
adc
ja
or
daa
sub
xor
test
inc
inc
add
ror
xchg
rol
iret
xchg
ins
push
jae
pop
sub
or
pop
mov
dec
pop
movs
sub
outs
std
xchg
xchg
int
cli
dec
add
cmp
mov
ret
or
push
jmp
mov
scas
es
xor
lock
jmp
push
and
clc
aaa
mov
push
mov
sbb
(bad)
fiadd
out
pusha
adc
jbe
mov
es
aad
inc
retf
sub
andps
jae
jo
jnp
out
icebp
sti
sub
stc
push
(bad)
or
xchg
add
repz
ficomp
mov
push
adc
mov
clc
and
nop
clc
inc
mov
sar
pop
push
fwait
ins
jp
icebp
jae
adc
sub
ja
in
pop
daa
jbe
shl
mul
sub
stos
sbb
call
or
mov
fiadd
push
add
cmp
xchg
xor
jnp
ret
mov
dec
dec
pop
adc
adc
inc
lods
bound
dec
xchg
retf
mul
inc
loop
pushf
pop
in
ja
imul
jns
lods
push
icebp
jp
inc
mov
and
and
and
(bad)
cmc
(bad)
mov
adc
and
out
xlat
sub
stos
sub
sbb
push
push
pop
ret
xor
cwde
mov
leave
sub
xor
mov
push
lds
jne
shr
ins
sbb
gs
loope
inc
inc
lahf
sbb
(bad)
xor
jnp
js
loopne
mov
sub
cmps
stc
jnp
sub
jnp
call
inc
clc
cli
addr16
cdq
call
inc
lods
and
(bad)
adc
out
mov
sub
in
repz
rol
(bad)
mov
inc
mov
xlat
pop
jecxz
jno
data16
fwait
dec
mov
push
call
push
push
push
aad
into
jge
and
bound
cmp
repz
and
into
jae
pop
sahf
inc
xchg
xchg
rcr
fnstenv
or
mov
int3
adc
cmps
jb
jno
clc
div
pop
cs
fild
call
mov
push
pop
mov
sbb
mov
mov
push
push
pinsrw
and
xchg
daa
adc
pmulhw
sub
or
cmp
push
mov
xchg
jno
popa
es
or
pop
in
retf
mov
pop
dec
xchg
in
imul
aaa
bsf
pop
arpl
cli
dec
push
add
fisttp
pop
jae
test
pop
pop
movs
and
not
test
mov
sub
xor
(bad)
cmp
cdq
js
lods
enter
cmp
mov
cmc
mov
jo
scas
jae
mov
sub
mov
mov
mov
cld
inc
ss
jo
pop
(bad)
ret
cmps
in
mov
fimul
xchg
bound
push
psubd
mov
test
sbb
and
in
sar
mov
push
aas
lods
fs
xor
stos
(bad)
and
pop
xchg
std
repz
and
cwde
rol
sub
mov
xchg
fsub
repnz
mov
or
jmp
add
pop
cmc
xchg
retf
adc
or
jp
fldenvw
into
mov
jae
fidivr
mov
aad
setno
data16
sub
fsub
sti
fst
jne
ret
arpl
pop
xchg
in
jno
enter
and
fnsave
dec
push
iret
shr
sub
jb
add
sub
nop
(bad)
adc
cmp
out
sub
aaa
push
mov
ins
push
scas
clc
fmul
mov
neg
sub
adc
bound
popa
push
repz
mov
test
scas
dec
adc
aad
push
cmp
or
popa
enter
(bad)
in
sti
je
dec
rcr
add
lock
push
loopne
push
into
enter
mov
mov
push
pop
fst
loope
fidivr
sti
repnz
push
sbb
rcr
arpl
leave
imul
pop
shr
in
cld
sbb
fucom
loop
js
das
pop
and
mov
imul
jl
xor
push
js
inc
mov
stos
bound
scas
cmp
daa
std
inc
js
mov
std
mov
aad
fnstsw
and
jecxz
in
dec
mov
pop
ins
test
daa
imul
add
(bad)
jecxz
add
cmps
mov
js
movs
mov
mov
daa
ret
lods
aaa
mov
push
outs
stos
xor
or
mov
and
scas
(bad)
push
or
lods
mov
jle
rcr
push
call
sar
mov
(bad)
out
lock
sbb
mov
push
retf
shr
shr
xchg
mov
mov
sar
mov
and
mov
not
sbb
inc
hlt
xchg
in
sbb
movs
xchg
or
mov
dec
test
fcomp
mov
call
and
dec
idiv
jecxz
xchg
stos
pop
jl
outs
cmp
jle
fmul
shl
jbe
push
push
xor
sub
fsubr
sbb
int3
mov
jmp
jg
pop
out
call
(bad)
and
sbb
xor
movs
mov
je
sub
ja
adc
mov
mov
pop
add
outs
imul
scas
out
fistp
outs
jle
fldcw
in
int
jle
mul
mov
and
jns
mov
dec
add
iret
pop
mov
fsub
dec
xchg
jbe
inc
mov
mov
inc
ficom
mov
movs
sahf
cmp
sbb
mov
push
sub
loopne
loopne
xchg
mov
in
fcmovnb
cli
clc
js
test
and
xchg
arpl
lods
ins
cmps
push
sub
fcomp
adc
shl
cmp
xor
xor
mov
popa
sbb
ret
pop
and
clc
movs
inc
ror
jmp
mov
add
adc
sbb
jge
hlt
fbstp
hlt
sub
mov
mov
mov
add
mov
scas
and
icebp
xchg
xchg
and
std
pop
jmp
mov
in
dec
inc
jle
push
mov
sub
add
fs
push
data16
jae
mov
fabs
jmp
mov
loopne
outs
pop
cmps
in
jae
jbe
(bad)
cld
dec
xchg
sbb
adc
fwait
dec
jno
ins
cmc
lahf
in
xor
sub
pop
push
ins
xor
or
outs
sub
sbb
test
sub
ja
int
stos
repz
xor
cld
adc
scas
and
pusha
inc
fs
jmp
gs
(bad)
ds
sbb
sbb
(bad)
cmc
(bad)
mov
fbstp
sbb
nop
rcr
lahf
push
out
or
call
xchg
call
lea
sbb
scas
aaa
or
xor
pop
and
cld
pop
movs
dec
jge
jge
push
lock
fcomi
(bad)
jno
pop
push
inc
hlt
xlat
stos
sbb
mov
ror
mov
mov
lahf
add
mov
das
sbb
stos
xor
pop
dec
das
adc
mov
push
sbb
stc
iret
call
adc
imul
loope
cld
mov
cld
inc
push
jmp
mov
retf
adc
das
mov
xchg
mov
pop
sub
leave
out
cmp
inc
push
test
clc
ins
push
xchg
sub
cmp
pop
js
mov
test
leave
pop
pop
jns
push
pop
mov
sti
mov
pop
mov
pop
and
pop
pop
inc
lahf
push
scas
dec
movs
pop
outs
mov
stc
out
inc
add
inc
push
mov
arpl
add
sub
sub
jbe
add
call
aad
add
adc
clc
xchg
add
lods
cmps
adc
out
or
gs
sub
sbb
xchg
aaa
cmp
mov
shr
sub
mov
adc
mov
sbb
std
jge
aad
mov
outs
into
sub
push
adc
pop
mov
outs
push
test
into
(bad)
iret
test
cld
jae
jp
mov
add
jne
pusha
and
scas
mov
xchg
pop
jle
cmp
jmp
(bad)
dec
test
sahf
cmp
and
out
fidivr
adc
mov
fwait
inc
xchg
mov
(bad)
sbb
jb
adc
mov
mov
jb
xchg
mov
pop
inc
push
sbb
mov
je
sbb
or
add
imul
cmc
jns
(bad)
mov
in
lds
push
sub
fistp
mov
jecxz
dec
sub
inc
mov
movs
sbb
and
popf
sbb
jmp
(bad)
fcmove
inc
sahf
adc
mov
push
adc
test
xchg
imul
cs
jo
push
pusha
aad
lds
test
mov
(bad)
jmp
aam
and
std
jecxz
push
mov
lahf
xor
cmp
sahf
les
and
mov
mov
fcom
pop
les
or
and
push
arpl
lds
test
stos
and
fmul
inc
rcl
or
inc
push
mov
and
sar
push
inc
test
aas
fiadd
scas
mov
pop
clc
ins
stc
ja
dec
and
jmp
push
push
in
repz
sbb
jp
xlat
and
mov
bound
push
mov
mov
repnz
pop
mov
sbb
stos
sub
ret
mov
je
fstp
mov
mov
test
mov
mov
mov
inc
xor
out
icebp
call
in
jb
inc
les
scas
xlat
xor
sub
mov
(bad)
cwde
stos
push
jmp
mov
inc
nop
ins
dec
mov
fmul
push
cmc
sub
xor
push
and
dec
out
push
icebp
xlat
inc
in
jp
test
imul
stos
loope
loopne
dec
aas
(bad)
or
and
cmp
(bad)
xchg
pop
outs
shr
iret
dec
add
dec
daa
dec
and
xchg
(bad)
lods
ds
jo
leave
cmp
cmps
in
sub
push
inc
cmp
stc
test
or
std
sbb
sub
iret
(bad)
sti
pusha
loop
jae
push
add
add
xchg
xchg
je
cmp
aas
mov
or
ret
cmp
cmc
pop
adc
push
addr16
mov
xchg
jg
inc
cdq
and
out
mov
xlat
ins
bound
addr16
push
arpl
ss
mov
sar
jne
ret
dec
adc
add
ds
leave
fmul
outs
mov
pop
push
dec
jns
add
xor
add
or
cmps
xchg
inc
push
or
mov
icebp
pop
add
sbb
out
ss
or
xchg
xor
add
ds
mov
lahf
sbb
mov
fsub
leave
add
and
popf
test
and
jns
xchg
xor
sub
xchg
shl
nop
mov
inc
pop
dec
in
and
push
sar
cmps
test
push
repz
mov
mov
gs
xchg
lock
fsubr
iret
jmp
fs
mov
scas
cmp
shl
mov
fdiv
adc
jg
sub
mov
cmp
imul
stos
ss
adc
xor
movs
mov
jmp
mov
sub
xor
outs
jmp
jge
dec
gs
sti
mov
mov
aas
adc
cmp
pop
test
mov
aas
jmp
adc
xlat
in
sbb
push
(bad)
xor
pop
cmps
nop
dec
data16
sub
mov
jecxz
test
repz
jmp
pop
test
sub
popf
scas
cmp
cmps
push
popf
(bad)
cmp
iret
scas
aas
xchg
outs
pusha
inc
xchg
jnp
push
push
lods
or
mov
mov
sub
pop
lock
jo
in
push
mov
jnp
cli
sahf
xchg
dec
push
pop
cmp
mov
sbb
jle
cmp
mov
adc
add
sahf
push
sbb
sbb
ret
(bad)
pop
mov
lahf
in
sub
mov
popa
inc
pop
data16
arpl
push
shl
push
pop
and
sti
cmp
push
sub
adc
fs
xlat
not
daa
jno
test
dec
sub
mov
out
js
cli
mov
cld
ins
cmp
hlt
dec
mov
dec
push
retf
sbb
popa
test
jg
les
pop
adc
aas
mov
xor
sti
scas
xor
cmp
xor
dec
ret
cmp
iret
xchg
imul
clc
lds
(bad)
stos
pop
mov
mov
sbb
mov
nop
dec
jnp
mov
and
pushf
(bad)
out
fnsave
sbb
shl
shr
xor
sbb
push
data16
and
push
push
clc
and
sub
add
dec
stos
call
sbb
mov
push
sub
aam
dec
fstp
(bad)
(bad)
mov
clc
xlat
sar
aad
pop
jmp
stos
cmps
mov
in
in
dec
repnz
hlt
xchg
in
test
push
je
pop
sahf
jg
jecxz
dec
cwde
and
jmp
push
data16
sbb
ja
pop
dec
popf
mov
aam
mov
jns
ror
fmul
push
cmp
xchg
repz
aas
mov
fs
pop
xor
pop
data16
outs
cmp
pop
ret
rol
sub
cmp
and
cmp
mov
in
xor
ja
imul
scas
arpl
(bad)
push
sub
in
xchg
pop
push
jne
out
popf
cdq
or
pop
je
mov
push
mov
jnp
(bad)
adc
loope
and
mov
shl
push
mov
sub
daa
adc
add
sub
aas
jbe
jns
jl
adc
aad
hlt
sbb
jge
in
std
adc
ficom
imul
loope
ins
or
pop
mov
mov
lds
cld
imul
enter
outs
inc
test
sahf
push
cmps
mov
or
push
data16
mov
fwait
push
sahf
or
(bad)
jmp
inc
imul
mov
out
or
mov
mov
and
stos
addr16
or
sub
dec
cld
pop
jl
mov
sbb
into
daa
sbb
(bad)
mov
dec
sub
shl
mov
fidiv
clc
nop
call
mov
das
inc
adc
push
mov
arpl
dec
sbb
mov
nop
mov
pop
(bad)
addr16
mov
or
push
dec
shl
jno
add
fidivr
jo
mov
lds
retf
shl
aad
mov
pop
push
add
pop
jmp
outs
sbb
icebp
ins
inc
pop
ds
stc
and
adc
mov
mov
mov
cld
dec
xchg
ja
inc
xchg
jb
popa
test
cmp
jbe
or
leave
aam
fsubr
aam
push
test
lods
mov
cld
lods
popa
and
add
stos
inc
pushf
push
addr16
add
push
xlat
cmp
stc
inc
mov
outs
or
mov
das
shl
push
aam
xor
add
rcl
cwde
dec
push
ret
jmp
dec
xor
dec
and
jns
int3
shl
jno
movs
repz
jg
aam
fld
sbb
pop
shl
call
adc
push
jno
test
jns
mov
mov
adc
outs
push
test
xor
pop
(bad)
cli
adc
ds
cmc
movs
add
ins
xor
out
mov
xchg
adc
std
mov
push
jb
mov
sub
sbb
fsub
ss
mov
test
std
mov
sbb
icebp
xor
dec
cmp
in
inc
xor
aas
data16
cmp
lahf
jnp
push
iret
sahf
or
xor
lock
add
mov
dec
push
mov
shl
add
je
data16
cmps
add
out
clc
push
add
test
lock
jmp
xchg
stc
leave
push
mov
loop
imul
dec
mov
aam
xchg
shl
dec
adc
xchg
int
inc
out
call
pop
int
cmp
in
pusha
mov
or
sbb
shl
fsub
popa
cmps
sbb
in
test
jle
xchg
cs
scas
(bad)
movs
rcl
jmp
fist
pop
cmp
stos
xchg
mov
sbb
test
dec
movs
jmp
popa
ins
inc
out
sbb
repnz
repnz
xchg
xchg
dec
fisub
xor
imul
stos
sub
jmp
inc
(bad)
cdq
mov
xchg
add
mov
leave
lock
adc
push
repz
mov
cli
ret
outs
mov
sub
xchg
div
push
(bad)
aaa
out
movs
popa
push
jnp
mov
lahf
repz
fwait
mov
mov
mov
clc
xchg
int3
(bad)
pop
cmp
jae
jne
fbstp
mov
repnz
loope
rol
sahf
mov
mov
mov
dec
clc
push
push
mov
pop
pop
and
inc
jo
xchg
ja
sbb
mov
mov
mov
inc
dec
add
pop
dec
push
sub
inc
mov
xchg
pop
adc
icebp
jle
enter
test
ins
jns
ins
(bad)
stc
(bad)
jo
es
mov
add
loopne
in
loope
pushf
fnstcw
mov
movs
(bad)
xlat
test
les
add
outs
clc
cli
jecxz
sahf
jb
add
ins
mov
push
mov
xchg
sub
mov
in
shl
stos
outs
addr16
adc
mov
pop
pushf
push
adc
or
mov
jecxz
jecxz
lods
shl
test
push
add
xchg
aad
imul
pop
xor
pusha
(bad)
fisub
adc
mov
sub
push
adc
sbb
in
icebp
(bad)
out
or
into
push
cwde
outs
lahf
push
test
scas
mov
mov
mov
adc
retf
adc
or
ins
push
inc
xor
mov
pop
sub
sub
push
adc
add
mov
daa
xor
aaa
out
paddb
add
xlat
ret
fidivr
mov
leave
cmps
outs
mov
xor
lahf
push
xchg
mov
fs
mov
adc
pushf
dec
scas
jmp
push
mul
mov
sub
retf
mov
inc
lock
xchg
imul
movs
repz
sbb
test
add
jle
shl
cmp
rol
mov
or
in
xor
cmp
cmps
lds
cmp
mov
call
mov
or
fisub
xor
mov
or
jbe
xchg
pop
mov
int
mov
push
scas
div
push
repnz
xor
sbb
popf
lea
lock
aas
add
and
stos
in
rol
ss
cmps
in
xor
mov
mov
xor
and
mov
cs
into
inc
std
int
cs
data16
adc
test
stc
mov
sub
pop
gs
sbb
js
inc
pop
nop
js
sub
sbb
popa
out
sub
test
and
inc
push
push
xor
pop
inc
pop
sub
pop
clc
retf
addr16
xlat
xor
sub
ja
aaa
mov
sete
fild
hlt
aam
dec
jp
pushf
lea
test
add
pop
loopne
sahf
sub
pop
test
in
jp
dec
xchg
mov
add
add
imul
or
xor
(bad)
aas
dec
pop
mov
push
add
mov
mov
push
lods
pop
push
mov
fst
push
not
add
and
(bad)
mov
jae
out
pop
call
nop
adc
nop
mov
mov
jmp
fsub
nop
dec
test
mov
mov
mov
push
push
pop
inc
call
movs
lods
loope
iret
out
add
test
sub
leave
test
cmc
add
pop
ror
inc
mov
jb
hlt
or
xchg
mov
sub
ins
mov
add
(bad)
mov
xchg
call
cwde
xor
std
inc
aad
jo
call
out
das
std
jnp
pop
pushf
stos
mov
pop
xor
jecxz
stos
sbb
iret
mov
mov
cmps
out
sahf
fiadd
jge
shr
test
inc
sbb
popf
in
push
pusha
and
ins
(bad)
lods
push
addr16
clc
mov
cli
clc
stos
mov
(bad)
sti
aas
outs
and
dec
popf
sub
out
aaa
(bad)
in
bound
push
adc
out
fadd
stos
das
lea
mov
add
mov
pushf
mov
fiadd
es
(bad)
ss
sahf
jg
push
outs
xchg
cmps
and
mov
xor
aam
lahf
loope
fs
and
sbb
pop
call
addr16
ds
fsubr
or
les
retf
mov
jmp
push
mov
(bad)
and
mov
dec
and
es
cmps
xor
jge
loope
(bad)
mov
pushf
pop
movs
out
mov
loopne
adc
pop
push
mov
js
in
xor
inc
dec
mov
mov
adc
pusha
(bad)
leave
inc
and
ins
loope
add
out
jnp
or
pop
rcl
adc
xchg
mov
stos
push
inc
fmul
pop
pop
retf
lods
loopne
pop
dec
lock
mov
cmp
jbe
push
out
or
leave
push
cdq
and
xchg
dec
jb
push
or
inc
fisttp
fstp
jo
cmp
call
sub
je
sbb
shr
and
ds
aaa
cmp
pop
mov
in
sbb
lods
mov
movnti
(bad)
imul
daa
pusha
movs
adc
cmp
pop
mov
xlat
sbb
inc
(bad)
xor
shr
sbb
cs
jae
ss
add
int3
loop
inc
stos
outs
jns
mov
(bad)
stc
dec
test
arpl
xor
adc
(bad)
inc
scas
sbb
pop
stos
popf
sbb
sahf
or
mov
mov
push
and
fist
data16
jbe
sti
push
push
pop
xchg
pop
lahf
xchg
add
xchg
mov
push
mov
inc
jb
or
xchg
cli
mov
sub
rcr
arpl
ds
sti
jne
fmul
retf
ins
jne
inc
aam
cmps
push
xlat
sub
cmp
data16
dec
arpl
or
stos
push
pop
sub
mov
inc
xor
fcomp
adc
out
pop
es
out
add
add
icebp
sub
aas
xchg
jp
xor
(bad)
lods
mov
add
daa
imul
mov
push
(bad)
aam
sahf
and
aaa
fild
test
fcom
dec
pmullw
outs
pop
(bad)
xchg
call
add
pop
jle
shl
push
pop
dec
imul
and
add
dec
mov
pop
lds
add
xchg
mov
inc
idiv
add
popa
test
ret
pop
jl
or
jmp
xor
and
jp
(bad)
xchg
lock
scas
or
push
add
femms
jecxz
inc
push
sub
and
cld
pop
inc
mov
scas
cmps
test
leave
xchg
out
jb
push
and
jp
lea
sub
adc
rcr
dec
dec
mov
mov
ss
pop
mov
mov
mov
push
scas
clc
pop
mov
xlat
or
jl
xchg
lea
jmp
pop
jnp
outs
sbb
adc
shr
pop
clc
nop
mov
push
ret
sti
stc
out
pop
rcr
inc
inc
retf
int
imul
jge
test
lea
test
jb
retf
xchg
adc
mov
jnp
in
(bad)
sbb
cmp
sar
aad
int3
or
xchg
inc
test
(bad)
mov
sub
idiv
mov
addr16
loop
xor
repz
ret
jb
pushf
push
sbb
xchg
cdq
jmp
outs
data16
mov
fs
sti
out
mov
mov
adc
or
outs
mov
jl
loopne
mov
dec
out
add
jg
addr16
lahf
adc
cli
pop
stos
mov
cmp
sub
sbb
xor
arpl
sub
adc
popf
pop
xor
push
jp
int
sub
mov
cmc
(bad)
js
mov
cmp
inc
and
ss
call
sbb
pop
sahf
out
sub
xlat
pushf
xchg
rcr
fs
push
xchg
scas
xor
loopne
cmp
mov
push
jne
push
data16
js
sub
sahf
sbb
popf
test
cmp
and
xchg
jb
cmp
jmp
ins
sti
in
int
pop
popf
fstp
popa
pop
stc
xor
dec
scas
sbb
push
call
push
shl
movs
iret
ss
mov
mov
sub
leave
(bad)
mov
jnp
mov
xchg
pop
lea
add
stos
jo
mov
lods
mov
sub
int
mov
add
call
sub
adc
push
mov
mov
ja
xor
sti
jb
das
dec
adc
pop
shr
pop
sub
mov
mov
and
(bad)
xlat
out
jp
mov
push
xor
cmps
push
mov
in
jp
ret
clc
xchg
mov
out
sbb
add
js
cmp
or
mov
imul
xchg
sub
sbb
mov
sub
and
(bad)
jle
fisubr
fisttp
or
dec
in
jl
xchg
scas
add
or
lahf
pop
mov
push
push
mov
aad
xchg
sub
mov
fnsave
es
push
xchg
int3
pop
outs
lahf
pushw
xchg
sbb
mov
add
and
mov
pop
inc
ins
pop
test
jp
dec
and
sbb
icebp
adc
scas
xchg
and
push
mov
les
out
and
and
pop
ror
cwde
jge
inc
push
popf
push
jmp
les
movs
inc
das
or
mov
out
sub
dec
std
xchg
jne
mov
sub
imul
xchg
sbb
loopne
clc
sbb
loope
imul
xchg
int3
mov
mov
leave
jo
push
push
mov
and
jmp
mov
ins
int
jl
sub
pop
sub
frstor
rcl
aaa
sub
sub
add
sbb
sbb
lock
add
sbb
push
mov
mov
fstp
push
pop
jl
mov
or
mov
test
test
fwait
inc
xchg
cmp
retf
jmp
fcmove
fwait
in
ficom
mov
outs
fst
cmc
cmp
inc
jmp
push
cmp
test
push
mov
mov
(bad)
sar
inc
mov
fdiv
iret
scas
xchg
add
push
fsubr
fcom
sub
push
mov
scas
mov
out
lods
dec
sub
pop
mov
mov
push
dec
push
sar
rol
cmp
inc
dec
mov
push
sbb
sbb
inc
mov
mov
hlt
mov
adc
aaa
mov
imul
sbb
sub
bound
mov
popf
nop
fcom
mov
jo
sbb
xor
xchg
leave
xchg
dec
ins
inc
mov
retf
iret
mov
bound
addr16
fild
push
push
xchg
ja
xor
pop
cld
inc
mov
mov
xchg
in
sub
(bad)
pop
xor
lods
and
inc
xlat
mov
xchg
adc
push
mov
sub
push
inc
xchg
mov
add
push
mov
in
mov
xor
ja
adc
loop
ds
cmp
cmps
jge
pop
sar
sti
(bad)
das
les
lea
shl
aam
cmp
sub
or
cmp
sbb
push
inc
data16
inc
fwait
jmp
pop
fs
outs
cmps
cli
clc
shr
outs
sbb
mov
(bad)
icebp
and
and
repz
or
push
xor
sub
xor
aam
in
dec
mov
push
fpatan
int3
inc
icebp
in
fist
jl
mov
or
call
adc
adc
sbb
jle
pop
cmp
sar
retf
mov
pusha
(bad)
dec
not
aad
sbb
ins
jmp
push
add
inc
add
add
xchg
popf
mov
mov
xchg
repnz
lods
nop
inc
mov
popa
jne
mov
nop
in
cmp
gs
icebp
cmp
mov
(bad)
imul
lock
cmp
(bad)
xor
outs
cld
mov
jle
in
push
cdq
ret
mov
dec
rol
shrd
je
in
ja
lods
ins
pop
xchg
adc
cmp
xor
sar
sub
(bad)
into
aas
mov
shr
sub
aas
inc
jb
frstor
dec
xor
cs
test
jnp
out
(bad)
lods
test
(bad)
ins
es
mov
mov
out
mov
jge
xchg
outs
push
and
loop
lahf
test
ins
in
xor
mov
inc
sub
(bad)
aam
pop
sahf
adc
xchg
aaa
sti
nop
shl
cld
ret
jge
pop
imul
dec
and
sub
mov
cwde
aad
(bad)
push
mov
inc
mov
inc
ja
inc
outs
dec
fst
aad
out
mov
adc
jns
xchg
fsubr
in
xchg
fadd
imul
cmps
pusha
lahf
cmp
jne
stos
push
movs
stos
(bad)
pop
sub
bound
mov
xchg
mov
iret
(bad)
mov
pop
lods
jo
adc
jno
sub
pop
push
data16
(bad)
jb
lahf
sub
mov
xchg
sub
ins
push
and
sbb
je
(bad)
rcl
push
mov
out
xor
mov
and
repnz
lods
gs
test
(bad)
cmp
in
inc
sub
add
sub
jmp
jg
cdq
iret
jno
or
add
addr16
stc
pop
(bad)
sbb
cmp
enter
add
lods
mov
adc
add
jns
sub
jp
pusha
dec
outs
je
es
pop
mov
xchg
inc
rol
sub
or
push
repz
inc
jo
fidivr
test
inc
pop
leave
mov
sub
stos
push
xor
cwde
aad
(bad)
jecxz
std
scas
out
inc
fcomp
shl
mov
sub
shr
inc
add
adc
pop
jl
inc
adc
mov
sbb
cwde
mov
cdq
fwait
dec
mov
sbb
fidivr
int
lods
pop
add
jmp
cdq
and
or
push
ins
cdq
pop
cdq
adc
inc
mov
inc
gs
rcr
int
fdiv
add
xchg
movs
pop
jnp
pop
hlt
xchg
lods
(bad)
ins
fidivr
cwde
mov
jle
fst
int3
xchg
retf
mov
ins
mov
xchg
pop
outs
mov
bound
mov
mov
cdq
popa
push
inc
push
nop
add
xchg
mov
dec
daa
and
dec
scas
jae
xchg
ds
xor
clc
icebp
rol
mov
push
dec
das
push
cmp
dec
mov
push
add
or
add
popf
sub
pop
bound
mov
sar
push
mov
in
mov
sbb
ror
scas
and
jp
arpl
cmc
imul
test
adc
mov
mov
test
mov
xor
aas
into
cli
(bad)
mov
shl
xchg
mov
cmp
cwde
lahf
jmp
adc
sti
jecxz
add
retf
dec
sbb
jae
mov
pop
cs
xlat
shl
loope
test
frstor
sbb
and
jp
mov
shl
dec
sbb
mov
adc
inc
push
cmp
sub
popf
imul
push
aam
daa
loop
dec
in
lea
ja
jmp
aam
fst
(bad)
push
shl
push
sbb
imul
pop
aam
sbb
push
jg
sub
inc
call
jb
jp
cmp
cmc
add
xor
and
iret
lahf
xor
jl
pop
mov
movs
call
dec
icebp
lock
call
fnstsw
xchg
(bad)
sub
pop
pop
out
jge
mov
call
push
rol
cmp
ret
xchg
or
fs
ss
push
(bad)
adc
std
mov
dec
xor
cmp
adc
add
(bad)
xchg
sbb
call
and
ja
outs
ja
sbb
sbb
dec
sub
mov
add
lock
gs
mov
cld
leave
pop
pop
add
arpl
sahf
ins
stc
jae
xchg
call
fcom
inc
ss
jg
loope
xor
sub
das
jmp
pop
push
mov
xlat
push
arpl
mov
shr
out
dec
xchg
mov
repnz
or
dec
jg
pop
call
stos
mov
add
retf
mov
mov
push
dec
and
cmp
imul
push
pusha
lahf
inc
mov
mov
cdq
sub
fild
mov
jnp
out
or
stos
pop
call
outs
in
cmp
mov
enter
rcr
ss
imul
mov
inc
clc
out
or
ret
loope
push
pop
jmp
leave
xchg
jmp
pop
in
movs
scas
cmps
jno
xchg
mov
mov
pop
scas
lock
(bad)
lds
mov
lods
jno
xchg
pop
in
stos
or
out
xor
ss
jno
stos
bnd
sub
je
mov
ficom
xor
mov
call
add
fld
or
scas
call
mov
sahf
enter
lds
inc
pop
pop
pop
aad
popa
aaa
push
or
test
cmovle
push
fild
cld
or
fstp
ror
and
(bad)
sar
lods
dec
test
pop
mov
cli
mov
out
ins
loope
bound
mov
mov
or
mov
xlat
mov
and
and
sub
xor
cmp
inc
pop
sub
add
xchg
mov
mov
arpl
cld
inc
cs
hlt
cmp
xor
sub
mov
fisub
and
fwait
or
inc
cmps
in
out
xchg
inc
inc
jg
sbb
imul
mov
fild
out
xchg
and
retf
out
comiss
jnp
mov
dec
scas
jne
stc
and
stc
jb
mov
fnsave
push
cmp
push
fistp
mov
dec
out
jg
jbe
scas
or
popa
out
jne
add
push
push
and
push
push
outs
fs
cmp
inc
out
xor
mov
jbe
adc
sbb
adc
fadd
outs
lock
jg
test
adc
out
mov
dec
cwde
loop
mov
cld
sub
das
mov
and
cli
stos
not
in
imul
push
mov
not
push
loopne
push
push
test
xchg
pop
sub
xchg
mov
(bad)
leave
(bad)
mov
loope
xchg
lahf
loopne
jg
push
ja
adc
in
xor
sbb
jmp
enter
fwait
and
pop
xor
out
mov
js
leave
adc
mov
pop
xchg
mov
pop
jmp
popf
or
add
xor
fs
push
test
pop
je
cs
sbb
into
adc
or
push
stos
push
loope
in
add
daa
cld
hlt
xchg
jbe
sbb
jbe
test
push
sbb
inc
add
fidiv
cli
push
fisttp
loop
or
stc
add
scas
xchg
jno
push
mov
arpl
ja
cmp
jae
int3
dec
jno
in
xchg
adc
jmp
sub
sub
aas
mov
jnp
inc
loop
neg
cs
push
shl
mov
adc
test
pop
inc
paddb
fstp
sar
imul
sub
pop
adc
lea
gs
lahf
icebp
mov
sti
js
retf
cmc
xchg
enter
pop
inc
fadd
jno
in
dec
sub
not
sbb
mov
ins
test
sbb
cli
inc
mov
cmps
aas
xchg
dec
sbb
icebp
push
imul
arpl
xchg
dec
movs
push
jae
jne
mov
inc
repz
pop
into
add
sbb
add
movs
xchg
mov
add
push
mov
sbb
jo
out
out
sbb
xchg
pop
push
enter
pop
mov
mov
repz
lods
inc
cmp
ds
jge
mov
jae
xchg
test
ret
mov
test
rol
mov
mov
jmp
pop
test
sub
cmc
xchg
aad
sahf
lds
leave
or
js
inc
repnz
add
pop
mov
cld
stc
fdivr
sbb
xchg
pop
test
xchg
adc
in
mov
rep
pop
mov
lods
xchg
enter
sbb
loop
(bad)
std
inc
dec
(bad)
es
es
adc
(bad)
mov
je
sbb
sar
(bad)
adc
adc
or
les
dec
jno
lahf
or
inc
xor
aam
not
xlat
daa
mov
adc
fcom
pop
enter
and
in
or
push
mov
push
(bad)
sti
(bad)
xchg
retf
idiv
fs
dec
inc
fistp
pusha
ds
aad
int
das
or
(bad)
mov
retf
bound
ja
adc
ss
test
scas
dec
aaa
lock
(bad)
lea
cdq
and
mov
xor
add
jne
loop
or
lahf
ja
mov
pop
xchg
mov
shl
das
movs
jg
shr
in
sub
repnz
test
shl
pop
jmp
adc
sub
add
icebp
and
rcl
pop
pusha
mov
xchg
icebp
sbb
fisttp
xor
fcomi
(bad)
and
movs
sub
push
add
call
mov
ret
pop
cdq
fnstenv
inc
jb
into
loope
movs
(bad)
and
cmc
push
xlat
iret
out
dec
jbe
into
adc
inc
shl
xor
pop
nop
ret
push
jmp
int
hlt
int3
push
jbe
imul
jl
test
in
push
leave
ficom
xchg
jbe
mov
dec
inc
pop
mov
ins
mov
jmp
mov
fldcw
push
cld
mov
stc
fwait
pop
mov
sar
and
test
call
adc
hlt
lds
xchg
push
mov
hlt
sub
ins
add
mov
inc
ficomp
out
fsub
xlat
cs
mov
mov
xor
cmc
aad
idiv
fst
inc
cmp
mov
xor
jecxz
push
adc
ins
mov
and
xchg
adc
pop
and
jns
aaa
xchg
jmp
cwde
push
xor
lock
xlat
test
jne
mov
outs
mov
xor
dec
repz
aaa
jp
mov
mov
push
ins
mov
bt
jl
cmc
push
arpl
mov
jnp
stos
imul
repz
xor
jg
mov
(bad)
inc
fisubr
inc
test
mov
test
(bad)
outs
ins
int3
pop
push
mov
mov
push
inc
jecxz
dec
pop
push
dec
stos
mov
arpl
xchg
dec
aaa
into
seta
ds
test
outs
mov
cdq
xchg
jmp
sbb
cwde
mov
sub
clc
pop
lds
adc
jb
mov
in
xor
mov
aad
(bad)
sub
xor
adc
(bad)
(bad)
jg
or
cwde
aaa
cwde
sub
xor
push
movs
call
out
xor
fistp
mov
jp
js
add
or
ss
fimul
sbb
loopne
push
pop
in
inc
push
sub
jbe
nop
xchg
adc
mov
fnstcw
rcl
xchg
mul
mov
push
movs
outs
adc
stc
lods
add
xor
mov
adc
inc
jl
sub
add
test
mov
adc
int
add
jmp
jno
pop
sub
sub
lds
cli
cdq
int
push
cmp
ss
nop
gs
int3
jl
xor
sub
aam
jp
mov
cmp
(bad)
aad
xor
cmp
hlt
xor
paddusb
sbb
lahf
mov
fwait
jo
adc
mov
add
or
mov
loopne
imul
enter
shr
mov
loopne
ret
add
(bad)
cmp
inc
sub
cs
das
hlt
fadd
mov
or
cmc
dec
adc
sub
fdivr
in
call
out
pop
push
push
push
out
dec
mov
sti
xchg
mov
cwde
push
and
addr16
mov
cli
jmp
push
inc
inc
jnp
sub
js
cdq
jg
je
movs
call
adc
jns
(bad)
sbb
pop
(bad)
adc
pop
inc
outs
xlat
popa
stc
mov
jle
loopne
imul
xsaves
rcr
inc
lahf
pushf
mov
and
ja
outs
push
std
inc
jmp
inc
cmp
and
or
dec
dec
pop
dec
inc
out
xchg
call
push
nop
enter
lock
mov
dec
push
std
out
stos
mov
dec
cwde
sub
aad
mov
test
inc
in
push
hlt
out
mov
push
repnz
pushf
pop
adc
int
inc
xchg
ret
xor
inc
sbb
adc
cwde
inc
dec
mov
call
movs
out
jns
cmp
inc
das
ror
mov
fbld
into
out
sub
mov
gs
mov
scas
retf
or
loop
in
sub
or
gs
pop
inc
mov
inc
inc
aam
repz
mov
pop
repz
xchg
call
fs
mov
fcom
mov
(bad)
gs
jne
call
arpl
cmp
test
ja
dec
stos
dec
bound
or
mov
mov
ja
jecxz
loop
xor
aad
scas
and
dec
jge
sub
mov
fmul
xor
ret
inc
jecxz
jae
ret
or
sar
fild
stos
cmp
xor
lods
mov
bound
sbb
repz
js
xchg
into
inc
gs
jmp
int3
mov
adc
mov
xchg
fs
pop
addr16
jno
lahf
pop
dec
in
mov
mov
mov
retf
test
aaa
add
mov
add
outs
mov
imul
test
cmp
inc
xchg
test
call
jmp
int3
jp
stos
and
pop
adc
adc
push
cmps
jmp
dec
add
cmps
cdq
xchg
arpl
repz
not
stos
pop
sub
retf
and
into
jno
daa
stc
adc
into
pushf
push
mov
je
cmps
jmp
(bad)
mov
push
push
adc
cmp
xchg
aad
fadd
into
movs
adc
and
sbb
push
sub
mov
xchg
push
ret
test
adc
test
cli
xor
inc
push
leave
add
test
inc
bound
xor
aam
cmc
leave
sar
aas
test
(bad)
in
pop
sahf
in
pop
xor
push
gs
adc
fs
cli
enter
dec
push
ss
mov
pop
out
mov
in
sub
shl
push
cwde
cli
mov
les
xor
inc
add
cmp
xchg
xchg
jl
cmp
rol
jge
pop
cmc
jp
inc
out
inc
lea
addr16
test
loopne
mov
loopne
or
fdivrp
fs
mov
pop
ficom
out
scas
cld
and
sbb
cli
xchg
or
sahf
mov
pusha
mov
outs
cld
pop
inc
call
cwde
out
pop
dec
inc
lock
test
stc
das
popf
xor
jl
jb
ins
in
sub
push
sub
pop
or
sbb
sbb
daa
ret
sub
jmp
ret
fnstenv
iret
adc
adc
movs
iret
sbb
ss
fwait
pop
into
inc
cmp
cmp
psrad
lods
cld
pop
arpl
mov
push
add
push
inc
and
scas
shl
js
and
int
jp
sbb
mov
fnstcw
add
xor
push
pop
and
push
add
push
jecxz
push
or
dec
cmp
movs
ds
mov
orps
nop
cmp
push
push
aam
pop
mov
add
je
je
mov
xor
loope
dec
mov
mov
cmp
dec
jb
sar
sbb
dec
not
xchg
add
jge
pushf
jnp
loopne
sub
pop
bound
mov
inc
aad
lock
adc
xchg
sti
ins
iret
jmp
sub
je
jbe
add
mov
xchg
cmp
pop
imul
scas
rcr
mov
ja
and
adc
dec
push
into
adc
mov
xchg
js
xchg
out
ss
cmps
adc
adc
ret
ins
sub
push
lds
inc
and
push
(bad)
mov
cdq
out
retf
adc
push
xchg
and
scas
int
push
stos
idiv
nop
jo
adc
jo
and
in
jne
mov
call
das
aam
sbb
into
jns
xlat
outs
aaa
dec
fmul
and
and
sbb
mov
jle
fsubr
pop
shl
(bad)
jmp
inc
push
xchg
add
fsubp
mov
mov
out
mov
sub
inc
dec
leave
sub
xor
mov
(bad)
xlat
ins
mov
mov
iret
aad
push
mov
adc
mov
sti
push
cmps
aam
loop
mov
ja
push
adc
or
cld
loopne
cmp
inc
test
data16
cmp
ja
ret
gs
ret
cmps
dec
or
jecxz
push
pop
call
call
fadd
xor
setno
shl
mov
hlt
fwait
jae
mov
les
bound
jge
int
rcr
sti
gs
div
mov
mov
repz
js
test
xchg
mov
dec
xor
mov
out
xchg
push
inc
ror
outs
jmp
rol
(bad)
inc
adc
xor
push
fwait
xchg
iret
mov
lea
xchg
jne
pushf
enter
ficomp
das
xor
xchg
jmp
hlt
pop
not
pushw
pop
jae
pop
test
lea
mov
test
fnstenv
and
mov
movs
pop
movd
ficom
mov
or
out
pushf
lods
leave
dec
xchg
sub
sub
pusha
hlt
test
xor
iret
pop
fdivr
inc
xor
in
(bad)
fld
fbstp
xchg
lds
bound
loop
adc
out
call
or
(bad)
dec
and
int
lahf
ins
push
les
push
sub
int
xchg
mov
jmp
xlat
ret
mov
sub
retf
mov
hlt
and
dec
pop
cdq
sub
imul
ins
dec
mov
inc
imul
xor
push
xchg
pop
xchg
push
dec
(bad)
nop
rcr
ja
es
and
xchg
(bad)
mov
or
and
xchg
(bad)
pop
mov
inc
mov
sub
fdiv
cmp
push
jns
sbb
push
jb
aas
add
aam
daa
pop
inc
rcl
pusha
and
test
add
(bad)
out
retf
cmp
push
in
repz
inc
adc
push
imul
imul
pop
pop
cmp
movs
fnstenv
adc
cmp
packssdw
(bad)
push
mov
cs
(bad)
and
push
mov
sbb
shr
pop
div
popa
adc
out
in
test
mov
sub
pop
popa
das
es
ss
xchg
je
ja
jnp
into
shl
cmp
mov
out
jecxz
mov
push
sub
dec
cmp
shl
jnp
xor
ss
mov
mov
or
and
xchg
mov
adc
ret
lea
xchg
data16
ins
retf
and
push
push
popf
pop
pop
leave
cmp
gs
mov
adc
jecxz
pop
fild
test
or
loopne
fild
jecxz
and
adc
sbb
jl
and
cmc
add
idiv
push
cmp
imul
addr16
rcr
out
ja
pushf
(bad)
in
push
xchg
or
call
pushf
mov
jae
mov
call
mov
mov
bound
mov
retf
(bad)
jg
fld
inc
rcr
xor
xchg
ja
push
loope
pusha
ficomp
aas
adc
loop
mov
daa
inc
ret
cmp
mov
rcr
imul
adc
mov
mov
push
push
and
iret
imul
xchg
inc
pop
adc
cmc
(bad)
scas
(bad)
jo
fcomi
sub
cmp
inc
add
push
movs
sar
test
push
sbb
mov
loope
fild
lods
jne
(bad)
out
hlt
sar
movs
fistp
sub
mov
push
or
inc
ins
int3
out
ja
lods
xchg
inc
adc
dec
dec
(bad)
pop
add
xchg
loope
jl
addr16
mov
inc
xor
sub
test
in
outs
cmc
mov
add
push
cmp
cmp
adc
add
ja
sbb
xchg
leave
cmp
xor
outs
setno
cs
(bad)
sub
ror
ins
iret
cdq
push
xchg
test
sbb
int3
push
enter
call
mov
clc
ins
in
mov
fdiv
leave
cdq
jp
mov
or
mov
out
jno
mov
push
sbb
arpl
std
add
lock
scas
xchg
lods
cwde
or
push
cwde
sahf
xchg
dec
push
jae
(bad)
out
in
mov
outs
out
jae
adc
xor
hlt
sbb
sbb
inc
test
cmp
cmps
pop
fsubrp
dec
push
add
jne
or
adc
hlt
adc
cmps
enter
or
pop
xor
test
aam
daa
xor
pop
pop
leave
cmp
pop
test
pop
je
out
fs
push
test
outs
jp
aaa
cmps
sbb
fs
popf
jge
fidiv
rol
mov
dec
fadd
lods
adc
push
sub
mov
sub
and
ds
(bad)
push
push
xchg
mov
cli
pop
int3
xchg
shr
or
and
fisttp
imul
cld
adc
dec
dec
mov
jge
push
push
cmp
mov
and
outs
stos
in
hlt
cmps
dec
xchg
cmp
pop
std
popa
add
or
lods
test
xor
aam
jmp
inc
add
pop
fwait
dec
(bad)
(bad)
inc
bound
push
ss
cmp
jge
cmp
scas
xchg
cmp
ins
adc
arpl
in
pop
push
mov
sub
sbb
mov
fcmovnb
jmp
jge
xchg
(bad)
(bad)
sub
push
(bad)
in
jecxz
jecxz
and
push
sub
dec
ds
into
cmp
pop
or
shr
dec
repnz
test
movs
or
les
inc
dec
cld
xor
xchg
(bad)
ins
pop
xchg
pushf
cmps
(bad)
out
lea
mov
stc
imul
add
jns
pop
outs
idiv
mov
lods
enter
inc
sbb
mov
in
cdq
ss
out
pushf
xchg
jecxz
jecxz
or
cmp
xchg
fnsave
int3
test
int3
push
movs
stos
sub
and
mov
outs
jo
adc
jge
pop
cli
push
jne
add
test
leave
fs
fcomp
xor
dec
ret
add
test
gs
pusha
fs
jl
inc
int
es
test
xor
pop
fld
jmp
js
push
jg
ja
gs
mov
ins
cdq
sbb
ss
scas
gs
arpl
push
xchg
call
add
jbe
rcr
jno
ud0
push
out
call
mov
sbb
or
retf
daa
out
imul
jmp
and
data16
inc
(bad)
dec
jmp
mov
iret
std
lock
(bad)
pop
sub
xlat
lds
dec
int3
sbb
shl
fadd
and
pop
and
dec
xchg
push
popf
(bad)
and
loope
lds
fwait
aas
push
ins
sub
repz
xor
mov
xchg
test
mov
pop
cld
jmp
push
sub
push
lock
or
pop
and
mov
jns
out
xchg
cmp
test
ret
outs
jne
sub
inc
jle
call
loope
mov
jns
push
mov
mov
out
and
add
jmp
xchg
dec
add
sbb
jo
mov
test
push
mov
pop
stos
cdq
adc
or
gs
in
cmp
or
stc
outs
mov
add
in
nop
jne
lods
pop
icebp
mov
outs
pop
mov
mov
add
cmp
dec
cmc
sub
push
jle
loopne
jg
adc
test
adc
xchg
adc
ds
jns
movs
cmp
ss
lock
test
mov
pop
stos
test
mov
not
arpl
frstpm(287
mov
jne
jg
and
inc
xor
std
mul
mov
cdq
pop
xor
out
sbb
aas
repz
call
jno
pop
and
or
cmc
mov
mov
je
dec
cmp
(bad)
sbb
(bad)
test
and
sti
js
adc
inc
mov
inc
sub
ds
dec
and
cmp
imul
cmp
adc
or
or
popf
es
dec
(bad)
xor
aam
jmp
inc
retf
cmp
jg
xchg
jecxz
pop
(bad)
fidivr
pop
(bad)
xchg
jmp
mov
and
pop
mov
sub
mov
out
cmc
retf
sub
stos
xchg
mov
and
mov
fcom
movs
scas
mov
mov
test
ja
mov
adc
and
fwait
std
mov
mov
adc
add
push
adc
add
push
inc
mov
pop
fisttp
adc
fs
aas
or
hlt
test
js
mov
pop
cmp
pop
mov
sbb
mov
xchg
inc
mov
xor
repz
cdq
test
out
mov
sub
addr16
test
hlt
or
mov
dec
push
sub
(bad)
in
add
or
xchg
dec
pusha
ret
add
xchg
fiadd
(bad)
sti
cmp
rcl
dec
(bad)
loope
cli
int3
jne
mov
in
stc
hlt
push
retf
jns
mov
arpl
adc
arpl
mov
inc
rcr
and
xchg
pop
out
xlat
stos
or
inc
test
xchg
data16
xor
cmp
or
jg
in
fild
(bad)
jne
enter
mov
dec
pop
imul
and
sbb
and
mov
movs
xchg
push
xchg
ja
cmc
xchg
pop
cmp
sbb
neg
mov
dec
retf
test
(bad)
out
jmp
in
xor
ret
or
rep
iret
mov
cmps
xchg
hlt
mov
cmp
rcr
add
clc
jns
jne
dec
loopne
pop
in
repnz
leave
lods
(bad)
push
and
inc
aad
lock
(bad)
scas
sahf
cmp
xchg
push
popa
inc
or
pop
and
pop
retf
push
rcr
mov
mov
push
push
push
adc
aaa
adc
sub
aam
retf
cmc
adc
mov
cmp
push
cwde
or
xor
push
test
mov
xlat
jmp
xchg
mov
rcr
cmp
dec
pop
lods
mov
and
cwde
inc
adc
cmp
jae
jae
pop
arpl
add
jne
xchg
pop
in
jno
sub
and
fs
icebp
stc
and
lahf
aad
mov
add
mov
fmul
pusha
sbb
gs
dec
adc
push
outs
std
scas
test
add
movs
and
xlat
test
sahf
shl
jmp
ret
cmps
cmps
enter
scas
cmps
sahf
sub
pop
test
nop
repz
popf
jo
inc
dec
and
bound
jbe
xor
pop
xlat
daa
xor
mov
push
ss
rcl
fimul
push
je
call
xchg
or
sub
xchg
mov
jns
sar
jmp
sub
cmps
call
push
(bad)
punpckhbw
mov
pop
sbb
mov
and
add
sbb
mov
sbb
mov
fsubrp
cmc
mov
or
stos
imul
bnd
xchg
xchg
adc
push
mov
nop
out
fwait
in
std
add
dec
mov
cmc
movs
xchg
daa
imul
sbb
scas
xor
popa
xchg
hlt
dec
jns
push
test
xor
imul
mov
push
div
and
fcmove
mov
push
xor
jne
clc
jl
pop
inc
jle
out
mov
jmp
sub
lahf
pop
jno
inc
sub
out
cwde
shl
mov
push
lahf
loope
imul
fadd
xchg
in
mov
xchg
xor
inc
outs
jae
test
sub
repz
repz
iret
and
inc
add
mov
pusha
int
sub
sbb
(bad)
jbe
add
lds
lock
jmp
test
out
fs
cmp
pusha
mov
lahf
shr
outs
dec
aas
jle
mov
mov
inc
icebp
icebp
bound
rcr
and
jmp
or
jae
ret
cmp
sbb
mov
pop
lods
or
outs
mov
and
outs
mov
add
stc
push
mov
rcr
cmp
popa
mov
xor
adc
ins
dec
add
lds
out
rcr
rcl
stos
mov
iret
pop
js
aas
outs
mov
idiv
das
repnz
sub
jnp
outs
mov
xchg
inc
cmp
scas
or
lea
sbb
push
(bad)
dec
mov
jns
call
mov
and
inc
les
pop
sahf
jnp
xor
pop
sub
add
sbb
add
inc
sbb
dec
jl
jne
lahf
loope
sbb
loop
sub
push
or
adc
mov
(bad)
in
xchg
mov
fwait
jmp
mov
sub
sahf
dec
ds
mov
sub
add
cmps
aad
xor
in
sbb
cmp
pop
sbb
xor
and
sbb
mov
and
fs
inc
adc
jne
shl
add
inc
dec
ret
inc
gs
sub
jmp
movs
sbb
mov
xchg
sub
in
jle
arpl
leave
cmp
push
(bad)
retf
xor
mov
cmps
mov
(bad)
and
jns
or
ret
ds
or
idiv
xor
pop
jg
lods
cmps
mov
mov
mov
push
ror
inc
lahf
fistp
mov
jne
aam
das
or
scas
mov
inc
pusha
or
icebp
js
and
sbb
cmp
mov
and
adc
sub
shl
loope
add
xor
dec
fistp
pop
fld
dec
sub
jno
(bad)
hlt
std
cmps
in
or
outs
jg
or
mov
jno
inc
(bad)
push
dec
stos
mov
je
xchg
arpl
scas
cmp
push
loope
idiv
outs
jbe
sahf
adc
or
sbb
pavgb
jle
pop
add
xor
test
pop
add
inc
mov
xchg
arpl
xor
loop
scas
xor
adc
inc
icebp
dec
dec
cli
sbb
jns
dec
cmps
mov
cmp
lds
lock
cdq
dec
imul
outs
xchg
in
js
inc
add
or
push
imul
movs
cmc
mov
jge
adc
in
mov
in
mov
add
jo
pop
je
xor
jne
cmp
lahf
add
xchg
idiv
movs
lods
sbb
call
push
cmps
mov
popa
icebp
or
pop
mov
inc
mov
xor
stos
mov
rcr
push
jns
imul
lods
fdivp
cmp
outs
mov
or
sub
cmp
dec
out
stos
imul
pop
xchg
mov
adc
cwde
jo
test
pop
push
int
and
leave
mov
daa
in
mov
add
std
xor
stos
cmp
or
jo
jmp
aas
std
jle
data16
adc
push
inc
ss
pavgb
inc
push
mov
dec
fmul
in
test
mov
push
cdq
jmp
pop
mov
fnstsw
pop
xchg
repz
mov
mov
lock
xor
out
dec
movs
(bad)
adc
shl
inc
jmp
retf
aam
pop
sub
push
imul
aas
into
test
lods
add
inc
sbb
mov
sbb
and
push
int3
jmp
cdq
leave
pop
aad
sub
and
jge
sbb
cmp
jne
test
and
cmp
ja
je
sahf
outs
inc
repz
mov
jbe
mov
dec
cs
fs
inc
sub
mov
push
push
cwde
nop
cmps
or
hlt
jno
scas
std
call
pushf
pop
xlat
ret
xchg
lea
mov
pop
stc
xchg
jp
mov
lock
mov
push
sbb
es
je
daa
retf
or
inc
dec
pusha
je
sub
jmp
stos
cli
pop
mov
mov
inc
jecxz
out
fcomp
xchg
mov
pop
ficom
pop
stc
stos
pusha
gs
xor
adc
and
fisub
jnp
test
fild
out
icebp
sub
xor
pop
push
sbb
sbb
ins
sub
sbb
xchg
fwait
dec
adc
nop
shr
fcom
adc
adc
push
jb
scas
push
loope
ret
mov
sub
jnp
jb
jb
dec
sub
xor
sub
nop
cmp
mov
cld
repz
mov
push
pop
sub
jp
push
das
push
leave
dec
adc
add
or
pop
ds
(bad)
ret
adc
and
loop
cmp
mov
cmp
pop
sbb
ror
jp
fimul
call
lods
das
stc
xchg
ror
cmp
push
call
mov
mov
jp
dec
into
fisub
sub
sbb
out
test
mov
mov
sub
retf
push
rol
(bad)
sbb
pop
pusha
xchg
mov
mov
jp
out
inc
imul
mov
xchg
pop
push
sbb
repnz
pop
(bad)
jg
or
pop
in
push
cmp
dec
xlat
jae
xchg
cld
clc
rol
js
in
and
xchg
leave
jmp
push
lods
jp
jecxz
ret
push
jbe
int3
es
scas
int
dec
test
nop
repnz
mov
repz
lea
xor
mov
sbb
cli
adc
test
push
ins
or
gs
push
ja
mov
data16
dec
jecxz
aad
movs
dec
mov
lahf
retf
int3
xchg
push
inc
inc
push
dec
ror
adc
inc
(bad)
sub
test
pop
pusha
aas
mov
cmp
sbb
mov
bound
mov
mov
call
sbb
sbb
or
iret
inc
cmp
js
ret
sub
movs
sbb
retf
in
jl
and
jno
xchg
or
sbb
loope
and
setbe
ret
neg
or
(bad)
fsub
fstp
enter
cmps
mov
sub
popf
sahf
cmp
xor
and
lea
call
lahf
mov
retf
add
iret
ret
inc
or
aas
jle
in
jmp
out
dec
push
aaa
jo
fcom
fbstp
call
or
retf
cmp
mov
push
xor
push
sbb
mov
mov
and
or
mov
in
shl
shl
cdq
push
or
push
shr
sbb
cmps
aad
jns
mov
sub
mov
inc
cli
movs
in
aad
mov
cmp
stc
sub
mov
adc
cmp
or
push
pop
sahf
in
mov
mov
cmp
les
and
stos
arpl
popw
lods
dec
xor
jno
cmp
adc
add
fcomp
scas
and
xchg
ins
xchg
push
dec
jmp
das
out
xor
mov
xchg
test
xor
jbe
in
cmp
inc
add
inc
sub
cmp
jns
fwait
loope
adc
mov
lds
sub
cmp
inc
outs
sub
shl
repz
outs
aad
call
add
inc
jne
stc
imul
lock
retf
lods
jae
sub
out
ins
mov
xor
cwde
lock
pop
retf
ret
mov
jmp
cmp
mov
sub
jecxz
jge
ja
mov
lds
call
repz
push
cmps
jmp
fcmovb
sbb
mov
sub
outs
mov
and
sbb
hlt
add
fwait
test
out
test
jge
data16
xchg
popf
shr
dec
mov
ss
aaa
jnp
and
xor
push
test
fidiv
xor
stc
mov
add
(bad)
in
push
push
rol
lods
shl
repnz
push
movs
fdiv
and
xchg
out
rcl
(bad)
jg
push
cmp
rol
lea
fsub
pop
dec
(bad)
shl
push
xchg
cmp
add
sbb
mov
mov
mov
and
cmp
fdiv
xchg
stc
inc
dec
mov
lods
fadd
push
sbb
pop
iret
and
loop
aaa
or
movs
pop
and
pop
add
retf
add
sahf
sub
sahf
outs
scas
lods
push
sub
les
xor
or
pop
inc
or
je
out
rcr
and
jmp
mov
adc
sbb
loope
dec
mov
inc
dec
mov
mov
hlt
push
push
push
or
div
test
xchg
inc
push
inc
fadd
cmp
jle
ret
inc
mov
adc
out
aam
pop
jge
call
adc
push
jg
data16
mov
xchg
clc
imul
iret
cs
cwde
push
pop
(bad)
pop
cmp
out
stc
(bad)
xor
int
cmp
mov
leave
shl
out
cdq
out
iret
mov
fsubr
mov
push
les
jbe
(bad)
clc
xchg
pop
gs
push
arpl
mov
jnp
and
mov
das
loopne
push
ret
test
loopne
push
call
mov
js
xlat
jg
(bad)
push
dec
movs
js
inc
in
bswap
and
scas
cmps
sbb
adc
sbb
push
pop
imul
sar
sbb
jge
push
push
lock
sub
lds
scas
lods
sbb
jae
repnz
and
outs
jbe
pop
and
jnp
or
call
rep
data16
dec
lahf
mov
jno
add
jp
mov
xor
sbb
mov
cmc
je
or
xchg
cwde
mov
arpl
popa
mov
outs
xchg
(bad)
mov
neg
xor
xor
fst
dec
sar
mov
fcomp
loope
add
dec
push
(bad)
mov
fcom
dec
adc
and
mov
pop
push
loopne
int
ds
pop
(bad)
in
int3
pusha
jmp
int
inc
mov
push
mov
or
adc
push
add
mov
mov
nop
test
mov
adc
out
pop
int
cmp
ret
imul
pop
imul
push
outs
sub
call
aaa
test
pop
mov
sub
sbb
mov
pop
aaa
loopne
stc
por
test
mov
icebp
clc
dec
lods
(bad)
rol
dec
inc
jg
not
sti
mov
or
repz
fnstsw
push
mul
mov
mov
(bad)
sti
pop
arpl
gs
cmps
ret
ret
pop
fisttp
add
jns
dec
cmps
push
cmp
lock
fldenv
(bad)
adc
call
push
out
mov
add
std
lods
ds
aaa
mov
jmp
lods
repnz
data16
inc
movs
push
jecxz
(bad)
ins
xchg
js
adc
scas
xor
loop
loopne
mov
xchg
cmp
dec
into
sub
fist
dec
mov
dec
mov
ret
cmps
aaa
jge
push
mov
push
aam
mov
xchg
sub
push
adc
in
(bad)
aam
add
mov
lods
cdq
int3
or
imul
ror
mov
(bad)
ins
sub
dec
jmp
jge
xchg
push
xchg
or
and
call
adc
jb
mov
test
add
and
test
ret
mov
in
push
fmul
aad
(bad)
push
sar
xor
push
jbe
xchg
in
mov
xchg
mov
fimul
in
pushf
or
sub
cmp
mov
dec
mov
outs
repnz
mov
call
out
dec
mov
cdq
aas
xor
mov
xchg
or
mov
push
dec
fs
in
mov
ins
call
adc
adc
pop
and
cmp
push
push
mov
cld
jg
mov
mov
adc
push
jg
push
pop
mov
loop
dec
sub
push
sub
push
cmp
xchg
adc
bound
and
dec
lods
(bad)
add
pop
jno
ds
push
(bad)
cli
mov
lock
ror
pop
ja
push
inc
adc
sub
push
pop
xchg
or
ss
xor
push
fiadd
xchg
les
sar
or
inc
jo
fild
bound
or
daa
inc
out
sub
stos
push
inc
shl
shl
jmp
cmp
stos
scas
inc
sbb
mov
aam
adc
loope
aaa
cmp
ror
cmc
mov
mov
out
and
pcmpeqw
je
mov
movs
cdq
xchg
cwde
or
xchg
xchg
retf
pop
hlt
pop
or
lock
xor
jmp
mov
repz
stos
(bad)
leave
shr
div
jge
push
pushf
jnp
(bad)
(bad)
adc
(bad)
popf
data16
sub
pop
push
or
push
sbb
hlt
mov
xor
inc
dec
lahf
popa
cmp
icebp
shl
movs
test
je
pop
sbb
xor
fidivr
mov
and
and
dec
jne
xor
clc
cld
cmp
std
pushf
data16
dec
fcomi
test
loopne
mov
lea
push
test
sti
push
out
jne
jg
push
or
retf
add
push
mov
lods
mov
inc
xchg
aas
mov
mov
lahf
sti
repnz
or
and
mov
cmp
in
std
aad
nop
jge
mov
and
fstp
lods
lea
fiadd
xchg
addr16
sbb
clc
popa
push
jmp
add
imul
dec
dec
xor
mov
jae
or
imul
adc
rcr
gs
jp
or
ret
xchg
push
sub
bound
dec
and
jnp
punpckhwd
sub
sti
inc
xchg
adc
cmp
sti
jnp
add
je
push
movs
sub
(bad)
(bad)
sti
cmp
fwait
call
fistp
mov
fucom
test
mov
nop
xlat
scas
bound
fadd
(bad)
hlt
arpl
jmp
adc
jo
pop
cmp
ret
lods
mov
push
clc
mov
sub
out
imul
jne
xor
rcl
mov
ds
jmp
mov
es
sub
loopne
mov
cld
xchg
lds
dec
dec
test
xchg
movs
jl
mov
adc
int3
jmp
dec
cs
stos
xor
sbb
sbb
or
rcl
out
adc
adc
loope
aam
popa
and
jle
inc
test
das
cdq
xor
sbb
clc
add
mov
or
cs
jbe
movs
icebp
pop
add
jg
jbe
pop
popa
jb
(bad)
pop
sbb
int3
pop
cmp
dec
bound
pop
icebp
fmul
test
pop
sti
fidiv
dec
mov
pop
les
iret
push
inc
jbe
adc
add
fwait
out
jle
pushf
mov
iret
mov
(bad)
rcr
mov
cs
dec
mov
ret
sub
out
mov
jmp
mov
retf
jbe
sub
ror
push
fldcw
shr
xchg
in
out
jmp
outs
sbb
jne
mov
pop
mov
test
aad
daa
mov
mov
popa
pop
cli
jae
inc
cmc
in
push
jg
enter
pop
mov
push
adc
pop
push
lods
sub
rcr
aaa
loope
imul
add
mov
shl
(bad)
sbb
ins
push
pop
sub
pop
cdq
mov
nop
add
and
xor
cmc
pop
arpl
sbb
and
mov
and
mov
test
inc
jecxz
out
vzeroupper
test
loop
cld
and
jae
or
jecxz
push
add
sbb
lock
fiadd
lds
in
pop
cmp
and
add
mov
aad
lahf
js
mov
jb
cli
pop
es
outs
shl
dec
ja
ja
mov
stos
push
test
stos
jmp
cdq
xor
shr
(bad)
je
add
div
rcl
in
jno
cli
enter
cwde
xor
jne
adc
(bad)
(bad)
outs
pop
or
xchg
les
je
mov
push
dec
cmp
jb
in
(bad)
leave
sub
arpl
add
in
xor
aas
pop
or
loopne
mov
idiv
lock
into
aad
lea
adc
test
aas
ja
test
dec
(bad)
enter
cmp
pop
jb
sbb
push
sbb
mov
push
call
mov
pop
in
bound
(bad)
das
ins
xor
cmp
imul
aam
sub
lds
fnstcw
mov
xchg
mov
adc
xor
das
enter
dec
test
mov
or
out
sbb
xchg
(bad)
mov
bound
xor
pop
jp
mov
sub
sbb
out
push
xlat
add
add
dec
shl
jnp
mov
(bad)
xor
leave
sbb
adc
dec
cwde
jbe
push
jo
jno
das
add
(bad)
in
dec
inc
sahf
dec
add
data16
mov
mov
and
and
and
mov
mov
test
pop
sbb
gs
cmp
mov
ja
ins
sub
fwait
loop
xchg
xor
push
add
std
mov
add
add
xchg
lea
daa
jmp
fucomip
shl
dec
fwait
xchg
jae
fsubr
jae
movs
dec
push
lea
fs
cmp
movups
sbb
add
cmp
ins
sub
(bad)
adc
sub
(bad)
mov
sub
jmp
mov
retf
push
outs
nop
cvtps2pd
mov
ins
rcl
das
pop
and
cmps
jmp
outs
out
hlt
lea
xor
(bad)
cmp
adc
dec
mov
out
(bad)
push
xor
nop
xchg
out
adc
movs
imul
inc
mov
es
cmps
jp
pop
int
sub
cwde
shl
inc
aad
jmp
movs
ret
imul
pusha
ret
mov
out
sbb
mov
sti
arpl
sbb
sub
loop
adc
mov
cli
dec
mov
add
popa
rcl
scas
inc
or
fild
sub
fdiv
ss
cmp
push
sub
xor
sub
sbb
es
mov
push
jmp
or
lods
loop
mov
add
stc
repnz
sub
jae
mov
imul
sbb
jnp
popa
add
ja
xchg
mov
mov
mov
in
adc
(bad)
js
cmps
cmp
push
clc
push
test
ret
push
bnd
enter
mov
jnp
cmps
es
fidivr
jmp
xchg
dec
retf
push
out
pop
or
sbb
ins
loopne
sub
rcl
fstp
aad
ss
daa
mov
adc
pop
pop
scas
sbb
daa
mov
cmp
ds
cmp
xor
mov
xchg
repnz
jns
sub
adc
jo
cmp
std
jmp
sbb
in
bound
xchg
(bad)
sar
xchg
inc
cld
iret
psubd
push
ins
push
in
retf
pop
sub
pop
sti
(bad)
retf
dec
inc
pop
sbb
test
arpl
loope
push
nop
fptan
movs
std
(bad)
cmps
stos
imul
into
test
not
inc
bound
and
js
sti
cmp
adc
push
or
push
xor
jmp
mov
sbb
daa
mov
dec
sbb
popf
fsubr
add
push
leave
adc
shl
jmp
adc
xor
add
add
jno
(bad)
dec
mov
push
dec
inc
outs
mov
adc
adc
jmp
push
shl
stos
pop
jnp
push
mov
rcl
push
sbb
push
ret
and
nop
push
repz
and
movs
movs
popa
pop
add
and
xchg
(bad)
lahf
sub
cs
enter
imul
jns
pop
xchg
ror
(bad)
mov
(bad)
pop
loopne
pop
and
aas
sub
lock
mov
push
or
pop
sub
and
mov
sub
mov
sbb
adc
fistp
mov
cmp
push
call
int3
dec
loope
cmp
push
ds
pop
mov
jmp
mov
cmp
cmc
mov
fs
sbb
pop
scas
in
add
sbb
add
rol
mov
mov
fld
and
xchg
in
push
test
(bad)
xchg
and
cwde
sub
add
daa
push
movs
ja
mov
shl
mov
xor
xor
shl
jmp
pop
xchg
ret
sbb
ficom
jmp
out
rcr
push
jae
sbb
iret
or
ins
lahf
mov
cld
sbb
adc
pop
mov
push
jg
push
aad
fild
pop
mov
cwde
sbb
das
add
test
sub
mov
test
cwde
psllw
aaa
cmp
add
xchg
cmp
or
xchg
(bad)
and
je
cmp
dec
stos
mov
pop
cmp
ficomp
sub
mov
fdiv
outs
retf
scas
nop
fnstcw
ins
adc
mov
stos
ret
and
xor
and
jmp
out
inc
mov
push
or
(bad)
hlt
push
xor
jmp
add
and
pop
push
out
(bad)
pop
sub
pop
imul
hlt
jge
das
aam
push
dec
ret
inc
inc
jmp
stos
scas
inc
imul
(bad)
push
cmp
sbb
icebp
sub
cmps
and
out
xchg
cs
jb
mov
mov
adc
rol
cwde
adc
xor
jl
ret
xchg
retf
sbb
push
ror
gs
daa
fwait
cmps
xor
sub
mov
xor
push
and
popa
pop
cmps
jb
inc
adc
loop
(bad)
mov
data16
arpl
inc
loop
push
xchg
jb
adc
pop
in
lahf
call
xor
jl
or
and
sub
ds
add
jns
(bad)
sbb
dec
dec
inc
lods
push
out
inc
pop
iret
iret
psrad
das
add
aad
xchg
daa
mov
std
jp
je
repz
outs
mov
push
dec
loope
or
fimul
imul
pop
test
inc
aam
mov
(bad)
mov
aas
pop
mov
data16
and
jg
aam
out
fadd
jo
jns
mov
jae
aam
pop
stos
dec
(bad)
aaa
das
mov
daa
or
push
adc
(bad)
pop
lods
cmps
adc
pusha
push
ror
xchg
push
mov
(bad)
sbb
adc
push
pusha
pop
in
or
inc
fcmovu
out
and
aad
ror
hlt
out
mov
fs
sub
repz
xchg
push
push
fiadd
mov
cmp
es
mov
outs
sbb
pop
cmp
jle
call
or
loopne
mov
pushf
cmc
fwait
sub
aam
xor
test
xchg
loop
loopne
mov
imul
and
add
dec
mov
loop
retf
dec
mov
pop
pop
ret
stos
cld
pop
iret
stos
xchg
aas
xchg
movs
push
push
and
repnz
punpckhbw
lea
xor
inc
add
sub
and
mov
xor
pop
pop
cmp
inc
and
fisubr
pop
mov
je
add
push
mov
push
neg
mov
sub
stc
xchg
(bad)
dec
pop
inc
lods
shr
and
sub
(bad)
mov
mov
int3
lahf
push
adc
xchg
pop
or
(bad)
popa
mov
sbb
add
push
lea
leave
mov
sbb
aad
mov
cmps
inc
mov
fadd
sti
rcr
add
das
cmps
jno
push
xchg
mov
adc
jmp
retf
out
mov
jge
loopne
movs
cmps
add
add
dec
pop
ror
cmc
lods
adc
gs
stc
inc
inc
mov
push
fisttp
test
movs
fdiv
stos
outs
test
out
inc
jo
cdq
jbe
push
or
ins
jg
sbb
repnz
pop
xchg
in
mov
sub
mov
mov
and
stos
je
cmp
addr16
push
fnstcw
popf
sbb
leave
in
in
mov
shl
inc
sub
pop
clc
cmp
sbb
std
je
mov
sbb
iret
cmp
(bad)
repnz
outs
xchg
js
lods
cmps
cdq
add
jbe
stos
outs
in
ret
jle
shl
pop
jns
add
nop
mov
imul
push
or
fstp
xor
es
push
sub
addr16
push
rcr
(bad)
fimul
fldcw
mov
add
retf
pusha
mov
das
jnp
outs
mov
sbb
push
push
cmc
les
xchg
jmp
movs
aam
fwait
lock
mov
cmc
add
out
cld
(bad)
loopne
adc
cmc
mov
in
cmp
aas
mov
mov
cld
aas
neg
push
loopne
lock
xchg
in
es
aas
adc
test
jo
aam
jae
or
pusha
pop
cmp
in
push
je
jne
jbe
inc
mov
shl
cmp
inc
adc
push
jno
or
loop
stos
pop
(bad)
sub
(bad)
inc
div
pop
or
and
push
adc
jge
call
mov
inc
int
adc
psrad
jns
fbld
cld
xchg
out
xchg
fcom
adc
cmp
mov
cmps
lods
mov
(bad)
and
xchg
cmp
inc
pop
dec
or
mov
or
cmp
outs
nop
sbb
icebp
ds
xchg
add
mov
in
bound
push
dec
and
jb
xchg
loope
outs
ss
popf
out
pop
sbb
xor
test
add
scas
movs
scas
jl
fs
call
lahf
xlat
pop
call
mov
cli
add
test
jg
stc
in
and
mov
mov
cmp
pop
sti
or
pusha
xchg
loopne
pop
adc
pop
fisttp
sbb
(bad)
out
cmp
inc
mov
das
stc
popa
push
ss
(bad)
pop
stos
ds
daa
xor
addr16
cmp
out
out
rol
popa
fnstcw
mov
xor
mov
int
mov
ret
rep
xchg
cs
xor
jmp
push
clc
lahf
scas
mov
pop
lods
iret
mov
sti
pop
dec
mov
mov
mov
out
xchg
pusha
sub
adc
mov
push
sub
ss
xchg
push
sar
stos
iret
lock
mov
jmp
(bad)
retf
int3
jl
outs
mov
hlt
sub
lods
test
inc
xor
sbb
dec
mov
movs
or
adc
test
cmc
sti
or
add
popf
sub
jnp
push
sbb
xchg
xor
fcom
scas
fwait
sub
rol
cmps
sub
adc
sub
mov
rol
and
mov
jecxz
mov
test
inc
mov
mov
not
add
mov
push
cdq
outs
push
daa
aas
stos
cmp
loopne
cmp
inc
mov
sbb
mov
ficomp
aad
push
add
mov
xchg
xchg
push
out
call
dec
pusha
fmul
retf
mov
push
fild
mov
enter
jp
stos
add
pop
cmps
mov
inc
inc
stc
data16
and
mov
and
in
outs
pushf
imul
jns
bound
les
inc
jmp
adc
jg
pop
ficomp
mov
aas
pop
add
movs
(bad)
hlt
add
xor
repnz
ds
sub
pushf
lds
xor
into
jae
dec
shl
loop
add
loop
push
mov
and
and
addr16
repz
mov
xchg
(bad)
xchg
add
test
(bad)
lock
retf
inc
repnz
mov
mov
call
in
pop
mov
cmps
out
push
dec
es
psllw
ficomp
jmp
sub
jl
adc
idiv
lds
push
sbb
mov
lock
push
adc
jecxz
jmp
out
cmp
inc
cmc
xor
repnz
push
sub
push
aam
dec
jle
add
or
out
shl
mov
ss
jo
repz
or
mov
popa
add
fs
retf
test
jae
je
ret
jecxz
imul
retf
pop
jecxz
inc
sub
sbb
xor
push
mov
xchg
jns
icebp
js
xchg
pop
retf
les
dec
jle
retf
(bad)
scas
cmps
cwde
xor
adc
add
push
adc
jg
(bad)
(bad)
jg
cli
xchg
inc
ja
mov
aas
jp
pop
rol
add
pop
fwait
xchg
xchg
lea
hlt
ffreep
jno
retf
icebp
out
je
jl
shl
movs
inc
out
jg
addr16
push
or
stc
call
mov
jmp
fadd
adc
cmp
or
test
mov
shl
int3
and
cwde
cli
nop
mov
xor
lea
add
pushf
pop
fld
xor
dec
fdivr
out
test
sbb
mov
shl
aam
pusha
adc
out
jbe
out
cwde
js
stos
mov
js
inc
dec
sti
jo
pop
xor
jmp
fidivr
add
lds
dec
xor
ret
in
push
mov
dec
add
or
mov
lea
shl
jne
sbb
loopne
cwde
call
or
cmp
lods
push
push
mov
es
add
rcr
and
mov
fucomip
fadd
fild
das
cmps
xlat
inc
not
cmp
xor
inc
or
jno
cli
cmps
gs
js
ins
mov
add
loope
sbb
rol
in
mov
dec
(bad)
mov
outs
retf
lods
sar
jecxz
xchg
div
dec
jmp
cmp
rol
push
jne
pop
mov
pop
or
jno
cld
test
push
mov
pop
pop
stos
mov
or
pushf
sar
lock
xchg
shl
rol
pop
xor
pop
outs
pop
clc
xchg
jmp
retf
pop
lds
lds
jae
loop
sbb
lods
sub
push
adc
retf
aas
fbstp
adc
dec
xor
and
aam
daa
pop
sbb
mov
push
xor
jne
fdivr
cmp
je
or
adc
stos
push
bound
test
(bad)
pop
ds
pop
rol
adc
dec
xchg
mov
imul
mov
xchg
fld
sbb
jae
loope
jo
std
and
mov
cmp
pop
fs
push
ss
mov
imul
sub
call
push
xchg
and
lods
ss
xor
xchg
in
or
mov
dec
out
js
pop
mov
jno
cdq
adc
adc
aas
push
bound
mov
jno
push
js
inc
movs
jne
xor
and
jp
dec
add
fcmovnbe
jbe
sub
retf
push
push
xor
jp
mov
fcomp
adc
ss
pop
fdivr
mov
push
ins
dec
mov
out
aaa
sbb
aam
push
mov
xchg
inc
dec
ja
xlat
inc
retf
sar
jmp
mov
popa
das
inc
pop
xchg
rcl
push
retf
mov
mov
sbb
out
pushf
xchg
mov
popa
push
dec
(bad)
cmp
test
ins
mov
xor
sahf
mov
sub
adc
dec
xor
popw
mov
add
stos
jmp
mov
lods
mov
aam
(bad)
sar
sbb
dec
push
cmc
push
inc
jg
sbb
outs
clc
nop
pusha
mov
(bad)
and
rol
aas
pop
repnz
jbe
jno
push
sbb
ins
or
sub
addr16
xchg
fmul
scas
rcr
mov
rcr
mov
mov
mov
mov
movs
jnp
icebp
(bad)
call
shl
xor
cmp
(bad)
shl
pop
sub
mov
scas
imul
pop
xor
(bad)
xor
pop
jp
sub
mov
outs
data16
sbb
pop
xor
lods
mov
retf
jmp
xor
push
mov
idiv
call
and
jns
xor
ds
pop
leave
stos
ins
leave
data16
gs
adc
push
bound
add
(bad)
dec
push
jne
jmp
lea
mov
mov
movs
dec
sub
and
out
xor
mov
adc
ret
sub
test
adc
aaa
mov
cmova
xor
sub
mov
jo
aam
jmp
inc
mov
add
push
jle
jno
icebp
int3
cld
push
jmp
lods
jne
test
inc
or
aaa
jecxz
movs
popf
sub
fnstsw
sbb
ror
cmp
cmc
outs
gs
mov
adc
cmp
and
nop
add
js
push
push
adc
jnp
lea
cmp
sub
xchg
iret
mov
or
cld
push
enter
push
arpl
inc
inc
fst
mov
sub
mov
popa
fst
stos
nop
cdq
cmps
cmps
mov
fstp
xchg
jbe
aas
mov
add
out
jbe
sub
jmp
mov
jnp
cld
iret
xchg
xchg
inc
(bad)
adc
(bad)
or
jge
jmp
ins
push
sbb
cdq
jae
cmp
loope
pop
(bad)
outs
and
inc
rcr
inc
shl
push
jne
jle
pop
push
(bad)
add
push
into
push
jmp
add
in
retf
lahf
lea
jo
fsubr
xor
cmp
fnstenv
pop
retf
cmp
xlat
jo
addr16
shr
stos
pop
mov
loopne
gs
sbb
sub
mov
clc
outs
(bad)
test
enter
push
jmp
loop
or
(bad)
jno
cmps
(bad)
jge
push
movs
das
ror
cmp
jmp
daa
dec
ds
popf
xor
dec
clc
sub
repz
adc
pop
sub
shl
icebp
repz
clc
jp
lock
push
ss
movs
mov
mov
fild
xchg
add
js
or
retf
push
(bad)
(bad)
and
adc
and
clc
int3
jmp
test
js
sub
in
cmc
xchg
jne
fwait
adc
inc
mov
(bad)
fild
mov
retf
inc
lea
jle
mov
push
and
int3
and
xchg
sub
neg
popf
jo
mov
cmovge
and
jp
stos
mov
stc
push
jnp
in
push
xchg
leave
bound
xchg
xchg
rol
inc
mov
(bad)
rol
bound
jno
add
repnz
not
cdq
push
outs
retf
call
lds
mov
arpl
xchg
hlt
stc
lods
ins
jmp
mov
stc
shl
(bad)
loopne
adc
mov
loop
mov
pop
sbb
fadd
mov
xor
cmc
or
cmp
sbb
jb
in
fisubr
call
xchg
and
xchg
aas
fbld
mov
les
out
sub
xchg
mov
rcr
(bad)
sti
jmp
mov
(bad)
or
fwait
inc
cmp
mov
adc
addr16
mov
out
arpl
stc
add
jmp
icebp
sbb
mov
cld
push
push
cmp
xchg
add
push
add
mov
cmc
sub
cmp
pop
scas
popa
sbb
sbb
cmp
cmp
xor
fidiv
icebp
inc
hlt
jmp
pop
add
lods
call
das
jg
mov
mov
jp
mov
push
enter
push
inc
int
mov
mov
stos
sub
in
jns
mov
push
and
mov
add
mov
les
sub
sbb
cmp
clc
icebp
fcmovu
sbb
cs
sbb
pop
rcr
jecxz
out
(bad)
bound
sbb
adc
pop
scas
add
(bad)
cmp
jno
cdq
inc
pop
pushf
adc
(bad)
xlat
pop
pop
ret
xchg
dec
xchg
xor
dec
into
push
jg
jle
ins
mov
test
mov
pop
fwait
mov
(bad)
sub
ds
xor
sub
lock
dec
mov
pop
mov
sub
dec
js
xor
mov
cmp
(bad)
xor
outs
xor
mov
pop
sbb
mov
pop
fst
sar
push
ror
mov
adc
jmp
ss
dec
adc
mov
retf
int
add
or
inc
pusha
in
jmp
add
mov
xor
sbb
out
ins
cmp
outs
fdecstp
mov
sar
clc
xor
iret
push
add
mov
pop
retf
cmp
jp
out
(bad)
aad
js
and
mov
adc
pop
test
mov
add
adc
fcomp
lds
shl
mov
cdq
dec
jo
cmp
popf
aaa
add
push
jnp
jo
xacquire
and
dec
sbb
cwde
dec
aad
popf
dec
daa
sahf
pop
mov
sbb
mov
inc
stos
or
call
xor
jae
ja
clc
cs
inc
sti
je
pop
xor
and
outs
dec
daa
lea
div
push
js
fsub
stos
adc
aam
xchg
mov
jl
test
mov
or
cmp
mov
inc
sbb
ds
sub
add
arpl
cmp
push
in
push
sbb
fadd
and
test
xor
xor
imul
push
aas
inc
mov
dec
mov
clc
fldcw
mov
ins
cmps
shl
(bad)
in
aas
jp
cmp
sub
(bad)
dec
dec
sub
and
sbb
into
mov
shr
jmp
xchg
or
push
sbb
jb
call
or
sbb
push
jno
adc
aaa
std
or
sbb
dec
xchg
pop
xlat
mov
scas
jp
xchg
fadd
jae
inc
mov
ret
mov
xchg
loop
xchg
(bad)
mov
and
dec
hlt
inc
sub
xchg
mov
push
popa
xor
inc
mov
xor
sub
xchg
sub
dec
pop
ins
dec
mov
xlat
pop
lea
mov
lods
int
fidiv
cmps
sub
pop
xor
sti
sbb
mov
(bad)
or
daa
enter
mov
pop
adc
popa
add
leave
cmp
xor
aas
pushf
mov
hlt
repz
ins
mov
mov
loop
xor
dec
mov
(bad)
push
aas
xor
inc
or
sub
daa
lea
stos
jae
adc
cmps
je
pop
mov
inc
sbb
fisttp
sbb
push
ds
ror
bound
or
div
push
xchg
outs
cs
cwde
loop
(bad)
ins
adc
xlat
outs
mov
data16
xlat
mov
call
xor
and
fadd
in
push
cmp
sbb
push
leave
pop
sub
pop
xor
or
cmp
cmc
rcr
lock
aas
cmc
mov
pop
out
aaa
inc
stc
in
test
sti
and
fwait
pusha
jecxz
inc
jp
ja
pop
add
sub
mov
sbb
and
mov
jp
cwde
xor
or
dec
(bad)
gs
jae
or
xchg
mov
outs
in
std
sub
das
jne
sbb
movs
lahf
mov
jge
add
test
mov
sub
inc
rol
clc
cmp
cmp
out
sbb
pop
mov
add
out
clc
mul
lahf
retf
popf
fs
in
xchg
pop
push
enter
xchg
test
(bad)
std
pop
jle
pop
mov
fld
cmp
fmul
inc
and
sbb
imul
test
jbe
in
cwde
or
adc
cmp
jge
fcom
sar
movs
fnstcw
dec
lods
adc
rcr
int
ins
nop
mov
mov
dec
inc
js
add
mov
jnp
xchg
xchg
xor
pop
test
mov
lahf
fsubr
dec
push
ret
jbe
rcr
lods
fcom
jmp
jnp
loope
mov
push
cmps
fstp
je
mov
mov
inc
mov
or
leave
popf
sar
fcmovu
pop
cmp
jnp
in
in
inc
arpl
ins
dec
sbb
mov
add
jmp
jmp
add
sub
shl
iret
fidiv
cmp
sub
xchg
and
std
xchg
movs
jmp
cmps
xchg
adc
adc
int
jae
hlt
test
xor
push
xchg
cmps
sbb
hlt
jl
rcpps
add
inc
push
ret
pop
mov
pushf
cmp
loope
push
mov
xchg
mov
pop
pushf
pushf
xor
imul
sbb
cmp
iret
pusha
inc
adc
mul
cmp
inc
cmp
dec
outs
lock
or
mov
sbb
out
sti
push
enter
push
movs
xchg
and
in
pop
dec
add
(bad)
movs
icebp
fisttp
dec
sbb
fidivr
push
inc
ds
adc
sub
ret
jle
lock
imul
mov
cmps
push
sahf
in
mov
dec
inc
rcl
jg
es
daa
push
mov
or
(bad)
cmc
test
data16
mov
pop
xor
outs
rol
mov
add
lods
jp
jbe
(bad)
cli
inc
and
fcom
inc
gs
push
pusha
minps
mov
arpl
test
aaa
pop
pusha
pop
pop
dec
xor
inc
jge
dec
test
add
and
cmp
mov
inc
sub
jecxz
pop
out
enter
mov
mov
out
ret
push
sub
cwde
imul
scas
enter
push
mov
div
inc
imul
mov
cli
adc
cmp
mov
push
mov
sub
ror
xchg
sbb
(bad)
idiv
outs
mov
inc
sbb
repnz
sbb
adc
popf
(bad)
xor
push
xor
and
jne
xchg
shr
mov
dec
shl
inc
retf
std
add
arpl
es
pop
hlt
imul
jle
push
clc
into
ja
int
dec
ds
mov
cmp
test
dec
push
je
into
inc
fdivr
mov
or
ins
or
repnz
add
push
sbb
pop
pushf
mov
scas
sub
dec
shl
inc
sbb
xchg
pushf
ret
arpl
pop
imul
shl
xor
adc
pop
hlt
jle
cmp
sbb
pop
sub
xlat
retf
mul
dec
push
adc
repnz
mov
push
sub
and
jecxz
gs
movs
xchg
out
cmp
pop
sbb
cdq
scas
repnz
or
cmps
xchg
bound
xchg
mov
lea
push
cmps
xchg
push
pop
neg
adc
sti
mov
mov
jl
or
(bad)
add
xchg
ja
jns
aad
mov
nop
shr
mov
mov
inc
test
lods
push
and
push
cmp
or
fwait
xchg
mov
imul
push
aam
lods
fst
xchg
popa
aaa
repz
outs
sub
pop
fs
add
gs
in
xchg
(bad)
xchg
or
callw
test
mov
rcl
retf
repz
out
mov
popa
and
inc
stos
jo
ss
mov
push
ret
jnp
div
ins
or
jp
lods
test
rcr
das
jbe
icebp
add
xor
mov
mov
push
pop
inc
leave
push
dec
repz
jo
ins
xor
cdq
shr
push
gs
and
xchg
cli
loope
mov
inc
xchg
add
(bad)
out
dec
jae
adc
push
push
js
jmp
js
mov
push
add
sub
pop
sti
inc
or
setbe
jg
push
jg
(bad)
jno
(bad)
xor
fimul
dec
pusha
cmp
in
pop
sub
sbb
ja
frstor
jo
(bad)
scas
xor
(bad)
fild
mov
out
sub
aad
shl
cs
jle
movs
cli
jmp
leave
cld
fcmovnb
scas
push
std
fild
mov
dec
adc
shl
mov
(bad)
adc
push
adc
jle
add
ret
pushf
jg
in
(bad)
out
loop
in
in
mov
lea
sbb
mov
shl
inc
mov
add
mov
push
mov
push
xchg
pop
in
fcmovbe
stos
cmps
dec
add
jbe
retf
mov
push
lock
push
icebp
inc
test
pop
mov
adc
outs
ds
mov
mov
dec
retf
cmp
aas
cdq
and
sub
mov
lahf
pop
retf
pop
fist
push
dec
jmp
in
loop
pop
xchg
repnz
(bad)
push
es
ret
jmp
or
adc
mov
mov
jo
lahf
mov
rol
xor
push
push
adc
mov
jmp
stc
or
cwde
test
jecxz
aam
push
popa
add
scas
jg
xchg
push
lods
dec
xchg
in
sar
iret
gs
in
mov
clc
(bad)
dec
in
fdiv
rcl
sbb
adc
push
scas
mov
sar
outs
je
das
jno
clc
and
inc
xor
sti
push
or
cmc
test
sbb
mov
loope
fisub
xchg
popf
fst
call
popa
scas
adc
mov
dec
icebp
rol
lods
sbb
mov
jge
push
stos
sub
aam
test
pusha
repnz
or
aad
das
jmp
push
outs
jp
movs
and
inc
jne
vmovdqa64
loope
aas
jg
dec
mov
hlt
push
jb
dec
sbb
int3
xchg
icebp
call
cld
xchg
fs
push
cs
retf
aad
clc
xor
mov
or
push
aam
ins
cld
(bad)
addr16
mov
cs
in
mov
(bad)
and
jp
mov
add
inc
popa
push
xchg
pusha
jb
(bad)
cli
fld
pop
push
adc
and
cwde
adc
jmp
out
adc
jmp
das
sub
leave
xor
sub
(bad)
sahf
imul
icebp
out
je
les
sub
sub
xchg
pop
(bad)
mov
sbb
pop
(bad)
pop
push
clc
aas
mov
mov
fisubr
stos
retf
retf
out
and
push
pop
mov
ret
inc
(bad)
aas
lahf
sbb
lods
mov
movs
xor
les
stos
mov
inc
cwde
sbb
(bad)
popa
sbb
mov
enter
fidivr
jl
pop
sub
jmp
arpl
daa
pop
xchg
push
std
aad
(bad)
sbb
or
dec
hlt
cmp
mov
push
inc
cmp
inc
jle
cmp
stos
pop
retf
test
fs
sub
mov
mov
loopne
pushf
fs
aad
scas
jle
sbb
rcl
int3
or
test
pop
xchg
mov
cmp
idiv
arpl
cdq
and
fcmovu
clc
dec
dec
push
loop
sub
loope
add
loopne
add
out
(bad)
ins
adc
push
dec
lea
adc
test
xor
jno
mov
cmp
sbb
pusha
pop
add
inc
adc
daa
adc
std
mov
pop
xor
stos
jne
jl
mov
(bad)
jle
pop
push
add
add
movs
add
jne
inc
imul
mov
dec
les
ins
rcl
sub
loop
leave
aam
addr16
push
fnsavew
xchg
sub
ss
xlat
xor
mov
movs
jbe
sub
icebp
sbb
push
jmp
mov
mov
xor
(bad)
lods
sbb
inc
mov
pop
sbb
sbb
(bad)
jmp
test
push
sub
fist
fsubr
in
sub
ins
inc
push
arpl
outs
cmp
fimul
jl
mov
call
int3
xchg
std
loopne
sub
cld
xchg
es
add
out
(bad)
xchg
in
mov
imul
pop
xlat
jnp
in
sti
mov
pushf
imul
cmc
pusha
stos
cmp
pcmpeqd
push
xor
jo
mov
das
stc
sub
or
es
popf
pop
movs
out
jbe
(bad)
push
fwait
popf
jmp
fpatan
out
fidivr
lods
sub
fwait
dec
cs
sahf
mov
or
sub
or
and
sub
add
inc
push
add
or
and
mov
outs
jnp
mov
or
(bad)
push
into
and
mov
lods
push
or
loope
pop
jno
ja
jb
jb
adc
inc
lods
dec
lods
xchg
fdiv
movs
add
mov
cdq
xchg
mov
outs
cmp
rcr
push
cwde
jmp
cwde
mov
in
mov
(bad)
xchg
outs
mov
nop
or
dec
and
xchg
jg
psraw
sbb
(bad)
xor
pop
dec
lahf
or
(bad)
int3
sub
adc
retf
aas
fdivr
xchg
or
jbe
outs
add
or
pop
xlat
aam
lahf
lahf
cmp
(bad)
sub
fld
dec
fcomp
fstp
stos
clc
sub
mov
repnz
outs
mov
lds
(bad)
(bad)
pop
aad
add
xor
mov
inc
out
add
dec
dec
ss
hlt
gs
mov
pop
adc
dec
mov
dec
int3
pop
or
fistp
dec
mov
xor
sbb
cmp
cmp
mov
stos
sbb
lock
repnz
(bad)
test
ss
out
sub
lods
stos
push
sub
push
out
(bad)
stc
pop
dec
mov
cdq
(bad)
push
(bad)
call
pop
out
dec
cmp
sub
neg
lds
lahf
ror
cmp
ja
(bad)
pop
inc
mov
and
cmp
(bad)
fldcw
lahf
fsub
mov
lods
dec
and
sahf
jns
jge
jns
not
sahf
idiv
mov
inc
mov
aaa
gs
aam
xchg
scas
xor
out
mov
push
sahf
mov
imul
inc
jb
dec
ror
mov
neg
sahf
fwait
enter
or
inc
cmp
mov
push
cli
pop
adc
cmp
leave
leave
jmp
rol
stc
(bad)
fistp
inc
and
jae
rcl
lea
scas
add
sar
xchg
call
jl
pop
mov
ret
clc
iret
out
or
repnz
rcl
adc
aaa
fisubr
inc
jbe
in
adc
sti
mov
std
adc
mov
push
retf
xabort
repz
js
add
adc
imul
and
xchg
push
xchg
xlat
and
popa
(bad)
mov
mov
les
ror
mov
mov
dec
push
clc
fs
xor
mov
in
scas
jae
mov
pop
inc
test
xchg
push
dec
xor
mov
add
dec
pop
inc
hlt
add
lock
mov
out
in
adc
xor
push
mov
jb
sub
jmp
sar
mov
xchg
jnp
dec
push
jbe
call
mov
and
jp
clc
cwde
or
out
mov
dec
cdq
xchg
add
dec
shr
nop
sbb
jmp
or
inc
ins
or
mov
sub
push
(bad)
pop
sti
(bad)
ins
sub
xchg
adc
les
aad
into
loop
or
inc
ffreep
cmps
xchg
cmp
push
pushf
adc
xchg
mov
(bad)
outs
fiadd
cmp
or
push
xor
cmp
bnd
jmp
sub
dec
add
mov
pop
push
push
push
clc
inc
push
cdq
call
(bad)
mov
lods
jmp
push
mov
push
and
(bad)
dec
mov
imul
and
xchg
dec
ins
mov
lahf
xor
pop
mov
push
leave
ja
mov
pop
mov
mov
push
jl
xchg
sbb
jns
xor
xor
push
pop
adc
mov
sbb
repnz
scas
adc
inc
lods
xchg
icebp
stos
xchg
jno
adc
shl
out
gs
mov
mov
mov
xchg
mov
loope
pop
bound
mov
sbb
jno
add
xor
cmp
mov
mov
and
jp
ins
and
out
jno
lods
xchg
ja
sub
in
and
icebp
fadd
dec
push
lods
xchg
xchg
or
mov
cmp
xchg
fild
push
push
mov
mov
lea
fsub
cmp
(bad)
and
inc
call
jb
sahf
or
mov
pop
in
adc
icebp
pusha
sbb
dec
pop
sar
lds
dec
xchg
je
mov
pop
sbb
cmp
mov
push
stos
push
xchg
stos
pop
mov
not
jmp
call
mov
mov
push
lock
push
pushf
xchg
xchg
jae
jo
sbb
div
xchg
fdiv
pop
scas
xchg
call
aas
aas
(bad)
adc
not
push
ja
adc
dec
cmp
(bad)
sub
cs
mov
xchg
loop
and
xor
xchg
mov
aas
addr16
adc
mul
jns
aas
pop
mov
add
cwde
sbb
popf
pop
mov
and
out
jo
int3
retf
(bad)
sbb
in
outs
jns
add
adc
sbb
fsubr
addr16
mov
ret
aam
mov
icebp
popa
gs
xor
sub
cdq
fs
push
jne
scas
(bad)
cmp
mov
pusha
mov
push
stc
xchg
xchg
add
or
jno
adc
ror
mov
movs
adc
mov
mov
into
or
frstor
mov
jb
adc
jns
loop
jns
adc
push
lds
cmc
jmp
sbb
scas
fstp
inc
scas
dec
in
fiadd
mov
sub
out
ds
lock
and
je
loope
cli
and
cmp
(bad)
jg
inc
add
adc
ins
pop
dec
lock
sub
pop
add
fidiv
sbb
fs
cmc
in
mov
fs
adc
adc
jne
sub
pop
bound
(bad)
mov
xor
push
into
data16
cmp
sahf
inc
push
loop
add
mov
dec
cmps
dec
jl
xor
enter
mov
std
jle
push
xor
fucom
sub
push
mov
out
or
mov
and
int3
xor
nop
and
mov
fadd
movs
es
ins
adc
out
pop
jmp
push
inc
jbe
mov
(bad)
xor
cmp
mov
ss
iret
mov
ja
hlt
sar
stos
loope
jge
sub
or
dec
enter
ficom
aam
outs
sbb
test
jo
pop
jmp
lods
dec
cmps
test
adc
mov
push
sub
adc
dec
add
xchg
push
push
mov
jg
sar
sub
test
push
(bad)
xor
enter
sub
mov
mov
arpl
dec
clc
in
mov
int
push
jp
cwde
out
fs
outs
dec
mov
inc
ret
jge
data16
sub
pop
cwde
ret
(bad)
mov
mov
add
jo
fcom
sbb
sub
adc
dec
test
jae
clc
or
test
inc
pop
adc
add
adc
push
aam
shl
fcmovnu
lds
and
(bad)
dec
mov
inc
fcom
xchg
inc
mov
or
shl
pop
lea
sbb
pop
jns
mov
ss
push
xchg
mov
and
imul
pop
jne
or
das
cs
cli
add
jmp
and
dec
je
cli
pop
mov
repnz
sbb
mov
xor
je
cmp
test
out
stos
cmc
outs
pop
mov
mov
cmp
adc
jo
(bad)
dec
jg
cmps
cdq
jle
mov
les
pop
xchg
mov
movs
push
and
and
les
inc
lahf
(bad)
cmp
rcl
mov
mov
mov
adc
sbb
or
xchg
xchg
imul
add
mov
lahf
mov
pop
push
adc
dec
and
xchg
mov
adc
mov
xor
inc
push
adc
in
dec
stos
popf
test
cwde
add
mov
int
and
push
and
dec
jb
pop
loope
sar
popa
inc
xor
pusha
inc
ja
das
mov
pop
add
mov
sbb
cmp
sbb
xchg
test
hlt
repz
cmp
mov
ins
pop
push
aad
dec
xlat
call
cwde
das
and
mov
fdivr
push
inc
lds
push
sub
mov
pop
retf
or
test
push
mov
aas
in
push
mov
or
jmp
jmp
pop
dec
and
fstp
rcl
xor
jl
hlt
js
loopne
out
or
mov
cmp
mov
sbb
push
ret
imul
mov
(bad)
in
outs
test
inc
inc
(bad)
mov
test
mov
mov
sub
daa
dec
icebp
test
inc
movs
shl
mov
jge
jmp
or
cmps
pop
dec
cwde
push
inc
fdiv
es
(bad)
push
sbb
or
dec
pushf
sub
mov
xchg
cmp
xchg
pop
cmp
cmp
retf
mov
in
cmp
je
add
(bad)
jmp
mov
mov
loope
out
dec
or
gs
gs
sti
sbb
inc
dec
sub
ja
ja
push
test
jb
rol
jl
jno
ins
call
popf
jp
mov
cmp
inc
xchg
(bad)
sbb
pop
shl
popa
mov
jg
and
xchg
(bad)
into
sub
pop
dec
mov
shr
sub
sub
aam
sub
into
js
out
inc
adc
stos
jg
shl
dec
jae
pop
pop
push
dec
mov
cli
jg
sbb
(bad)
jge
stos
stos
in
loope
cmc
lods
mov
call
daa
and
jb
and
sub
sahf
lods
fcom
out
push
and
or
fisubr
xchg
adc
inc
sbb
retf
in
lea
fdiv
or
pop
inc
cmp
sub
iret
(bad)
mov
gs
push
(bad)
clc
ret
jmp
ror
aad
pop
sbb
pop
not
mov
inc
movs
xor
dec
jnp
mov
jmp
sub
jo
aaa
cli
inc
mov
mov
out
out
jmp
add
jnp
mov
xor
sbb
mov
(bad)
push
add
(bad)
fwait
data16
out
mov
sub
retf
dec
cmp
mov
out
jg
outs
xor
sub
lock
rcl
mov
cmp
fwait
retf
mov
jbe
imul
sub
inc
das
es
pop
jmp
les
add
stos
retf
outs
ds
in
shl
lahf
xor
out
xchg
cmp
fidivr
add
jno
mov
or
sub
push
push
loope
add
mov
push
in
scas
mov
ja
mov
xchg
scas
movs
adc
stos
mov
and
push
mov
paddsw
lahf
cmc
fucomip
loopne
jne
adc
inc
or
fwait
xor
stc
xchg
adc
arpl
or
cmp
ins
fist
jp
sahf
loop
loopne
or
jmp
les
and
movs
lahf
clc
out
mov
rol
jp
mov
xchg
jg
push
jge
lahf
scas
jbe
add
or
dec
rcr
leave
or
pop
and
mov
ins
pop
adc
scas
or
mov
imul
jb
data16
jg
leave
pop
bound
pop
push
stos
retf
or
mov
into
cmp
in
lea
fsubrp
dec
fwait
shl
xchg
cmps
cld
mov
push
call
push
push
jb
clc
sti
test
xchg
hlt
bound
sbb
pop
add
mov
inc
xchg
dec
scas
in
in
mov
sub
adc
fnstenv
in
test
xchg
inc
cdq
sub
mov
cmc
jecxz
mov
mov
or
cmps
scas
pop
popf
sbb
or
std
push
sub
popa
or
xor
inc
ret
in
test
lock
es
imul
stos
fldcw
cwde
fsubr
sub
stos
adc
cmp
aam
test
xchg
popa
xchg
sub
(bad)
dec
sub
iret
or
ja
dec
ins
jle
jno
pop
fnsave
cmps
std
adc
fstp
inc
jle
test
push
jle
(bad)
scas
iret
lds
adc
jle
into
sbb
push
fucompp
dec
jb
imul
sbb
pop
mov
gs
pop
sub
mov
inc
clc
ins
xchg
pop
bnd
adc
out
shr
js
movs
or
(bad)
push
inc
inc
mov
cmps
add
sbb
outs
arpl
adc
mov
ds
push
xchg
call
cmp
jp
pop
or
push
loope
cmp
sub
aaa
cmp
jb
inc
dec
fsubr
inc
jae
and
inc
(bad)
xchg
shr
or
movs
rcr
mov
add
les
ds
ins
addr16
fist
je
lahf
and
aad
add
mov
dec
iret
movs
mov
push
sbb
or
xchg
cld
add
cmp
mov
mov
and
addr16
or
outs
dec
aaa
ja
dec
data16
pop
jmp
xchg
cdq
fist
dec
xchg
pushf
(bad)
cmps
movs
add
add
fwait
test
mov
not
test
push
mov
mov
add
push
lods
in
test
and
sbb
cmp
fcomp
push
and
or
or
fsub
es
mov
in
mov
call
dec
sbb
pop
(bad)
repz
outs
frstor
push
rcl
fwait
test
int3
jb
sub
popa
pop
cmps
div
lahf
or
xchg
mov
inc
ds
xchg
xor
leave
popa
adc
mov
js
movs
adc
das
inc
arpl
push
imul
cmp
mov
mov
and
mov
add
dec
mov
xor
mov
xchg
mov
fisubr
loop
xor
or
bound
mov
mov
mov
cmp
test
stc
dec
(bad)
jp
dec
push
std
outs
das
popa
mov
(bad)
lock
not
adc
mov
ret
in
fmul
xlat
or
dec
rcr
xchg
jl
fs
stos
leave
pop
jns
fstp
pop
movs
(bad)
jg
xor
sahf
loope
pushf
pop
sbb
sti
mov
xchg
jl
ror
push
inc
ds
aas
cmp
mov
add
push
ja
adc
ins
mov
movs
jl
das
xchg
repnz
dec
mov
inc
adc
mov
loopne
fsubp
test
outs
xchg
dec
xor
loope
ret
(bad)
ins
mov
cmp
or
call
sbb
loopne
xor
pushf
xchg
mov
int
das
or
xchg
adc
pop
mov
fadd
imul
dec
mov
sub
out
mov
mov
(bad)
shl
out
push
arpl
out
add
push
lds
xchg
and
sub
shl
sbb
add
dec
push
mov
lods
xchg
imul
pushf
fbld
outs
push
ins
and
cli
inc
xor
or
ins
pop
popa
in
adc
(bad)
mov
mov
inc
movs
das
std
test
push
push
shl
jp
dec
bound
in
and
and
out
fs
movs
bswap
fs
ins
outs
(bad)
mov
fdivr
xchg
daa
cmp
dec
jnp
xor
or
ds
push
fsubr
inc
mov
cmps
dec
dec
inc
(bad)
sbb
test
adc
push
mov
shl
and
mov
mov
fimul
add
aaa
jno
xchg
ds
cld
add
adc
jnp
out
out
sbb
repnz
dec
in
sar
outs
inc
mov
ins
and
xor
adc
and
das
cmp
cmp
pop
ret
popf
mov
jmp
loope
adc
mov
mov
inc
push
loopne
in
inc
jl
lods
dec
dec
out
sahf
iret
out
daa
adc
jne
or
adc
test
and
mov
ror
js
mov
or
add
fs
call
xor
test
jbe
movs
jmp
and
lea
loopne
ds
(bad)
jb
in
xor
(bad)
fwait
mov
icebp
iret
or
imul
xchg
sub
enter
lahf
int
rcl
cmp
xchg
call
div
push
cmp
or
xor
lock
jp
jno
cld
and
mov
shr
jae
pop
mov
neg
lds
jo
adc
nop
xor
cs
sbb
aaa
mov
icebp
dec
mov
add
nop
cmps
mov
sbb
fwait
scas
inc
sub
jp
(bad)
wrmsr
in
outs
outs
xchg
inc
dec
mov
and
into
(bad)
ins
sub
ja
xor
test
sti
fild
sbb
aaa
xchg
cdq
mov
cmp
mov
adc
push
cld
xor
loopne
sub
neg
mov
cdq
hlt
push
inc
repnz
add
retf
call
les
push
push
cwde
mov
adc
lock
cdq
xor
push
ja
popa
in
xlat
xchg
mov
sbb
mov
dec
movs
sub
and
or
test
into
sbb
cmp
ss
push
dec
pusha
or
dec
mov
inc
or
clc
scas
sbb
or
js
jle
arpl
lods
aaa
(bad)
arpl
mov
xchg
leave
in
(bad)
out
xor
jo
lods
movs
inc
xchg
loope
inc
or
jg
cmps
bound
mov
bound
lea
(bad)
out
mov
dec
xor
retf
sub
and
fwait
repnz
in
outs
pop
jmp
out
cdq
jne
int
push
pop
gs
inc
retf
stos
wrmsr
das
out
fstp
cdq
and
xchg
mov
sahf
ret
mov
sar
cwde
cmp
add
jl
shr
sub
fbstp
xchg
fisubr
dec
xchg
cli
add
and
lods
sbb
or
xor
push
mov
and
arpl
adc
adc
fldz
push
xchg
adc
xchg
arpl
movs
sub
addr16
mov
and
out
mov
or
repnz
test
push
fsubr
bnd
cmps
and
jbe
jnp
sub
cmp
je
mov
movs
popa
aaa
push
rcl
int3
push
das
lds
mov
pop
pop
mov
xchg
(bad)
out
test
dec
add
pop
not
dec
mov
ror
mov
stos
out
(bad)
popaw
ret
int3
inc
mov
es
mov
xor
pop
xor
ja
mov
out
int
push
adc
mov
shl
lods
call
and
fucomi
mov
das
les
fwait
imul
inc
(bad)
cmps
test
popa
fnstcw
(bad)
pop
ja
and
adc
into
leave
fs
push
mov
and
scas
mov
xor
adc
lahf
or
cmc
sub
cmp
fdiv
xor
(bad)
je
cmps
or
leave
outs
out
ins
dec
out
jnp
inc
push
movs
cdq
out
bound
add
jmp
inc
sub
stos
enter
mov
idiv
in
int3
test
or
retf
adc
ins
jno
or
lahf
sbb
rol
dec
cwde
xchg
cmp
jmp
push
test
dec
rol
test
sub
push
or
mov
mov
call
cmp
cmp
clc
loop
adc
and
xchg
inc
retf
mov
jmp
hlt
mov
outs
fwait
std
and
lds
nop
or
pusha
mov
aaa
lahf
sub
jb
mov
pop
cld
jo
or
stos
mov
sbb
xlat
mov
call
jno
sub
aam
sub
mov
aad
cmp
dec
sub
adc
std
mov
pop
(bad)
retf
push
or
gs
xchg
inc
pop
xor
cli
mov
sub
call
xchg
ins
cmp
movs
movs
mov
sbb
xchg
cmc
pop
call
adc
mov
nop
inc
push
gs
aam
ret
mov
sub
xchg
lods
retf
and
add
and
std
jmp
sub
in
and
movups
xor
add
add
(bad)
retf
mov
sub
xor
xchg
int3
inc
add
and
(bad)
shl
push
and
repnz
dec
xor
mov
xor
xor
push
ror
and
bts
pop
shr
jno
add
mov
pop
inc
and
int
mov
pop
or
and
xor
std
pop
jns
adc
inc
jmp
mov
sbb
jb
push
lods
mov
fisttp
sar
or
in
xchg
mov
movs
push
push
arpl
int
pop
fnstenv
dec
dec
cli
xlat
and
fwait
xchg
jmp
aad
pop
push
aam
jp
xor
hlt
in
pop
or
scas
ret
push
mov
sbb
push
gs
jge
test
pop
retf
nop
and
mov
outs
aam
out
xor
jae
xor
jp
sub
imul
aam
fild
popf
mov
out
(bad)
fild
xchg
add
scas
push
mov
xor
mov
mov
cmp
test
rol
mov
es
imul
aaa
in
rcl
xchg
lock
mov
lea
(bad)
jmp
cmp
pop
imul
inc
add
rol
or
sbb
or
test
or
sbb
adc
sub
cmps
jl
das
pusha
addr16
rcr
data16
xchg
push
dec
mov
or
es
push
dec
icebp
cli
stos
adc
fcomp
mov
xlat
movs
jmp
loope
scas
or
bound
pop
imul
std
jno
mov
inc
jmp
dec
sahf
and
xchg
lahf
icebp
out
or
mov
sbb
es
hlt
(bad)
cld
aam
fimul
in
mov
loopne
cmp
mov
add
sub
test
pop
(bad)
data16
dec
cmc
mov
sub
sbb
ret
loope
push
xor
mov
mov
pop
and
adc
and
mov
and
les
or
(bad)
(bad)
adc
hlt
ds
pop
popf
(bad)
cbw
js
pop
cmc
mov
pop
shl
and
sbb
jne
xor
push
inc
adc
mov
xchg
inc
ss
imul
call
mov
xchg
ins
xor
stc
mov
sub
call
shl
xchg
ret
jl
ja
push
rcr
retf
cmp
xchg
cmps
pop
or
arpl
jecxz
movs
mov
or
test
out
sub
outs
bound
test
cmps
(bad)
arpl
sub
call
movs
out
add
rol
or
(bad)
icebp
jmp
ret
les
leave
mov
ja
aaa
or
rcr
mov
inc
(bad)
pop
push
es
xchg
fnstsw
ins
shl
fisttp
cmc
mov
fs
lahf
lods
inc
jmp
inc
mov
pop
in
ret
xor
cmp
cdq
mov
mov
jmp
test
clc
xor
data16
push
jnp
mov
scas
sbb
mov
xor
push
inc
imul
test
pop
test
daa
lock
aam
out
add
cld
aaa
push
mov
pop
sbb
jae
das
in
retf
sub
and
mov
loop
sub
cmp
push
outs
mov
pop
mov
inc
into
cdq
sar
mov
fnstenv
cmps
ficomp
inc
test
cdq
push
sub
xor
out
ins
hlt
movs
mov
mov
or
jge
stc
mov
jne
sbb
cmp
mov
xchg
(bad)
arpl
call
aad
xchg
xor
sub
sbb
loope
mov
retf
sbb
clc
fidiv
cdq
sub
retf
push
mov
mov
not
push
enter
repz
cmp
comiss
mov
outs
cmps
mov
rcr
cmp
add
popa
scas
pop
fcmove
test
add
(bad)
fwait
inc
dec
mov
test
xor
into
push
pop
mov
jle
pop
jle
push
ins
repnz
sbb
push
dec
enter
ror
test
xchg
sub
dec
cmp
push
lods
cmp
js
mov
jae
push
sbb
mov
scas
mov
pop
pop
and
adc
inc
add
retf
push
sbb
sar
test
loop
adc
outs
out
outs
adc
mov
addr16
clc
lods
mov
scas
add
inc
pop
mov
push
inc
lea
sahf
cmc
push
or
movs
call
js
ror
jae
jmp
xor
push
lds
in
int3
(bad)
mov
test
inc
push
stos
fst
enter
shl
or
clc
mov
push
jl
jns
ja
arpl
push
and
push
test
out
adc
mov
into
lock
outs
add
xchg
pusha
sub
push
addr16
icebp
xchg
sahf
or
hlt
into
lock
fidiv
add
data16
mov
mov
shl
or
push
push
lea
aam
pushf
push
fcom
(bad)
(bad)
test
mov
int3
pop
(bad)
adc
xchg
rol
pop
xchg
ss
rcr
push
push
cmp
adc
or
and
stc
ficomp
test
jae
call
aam
lds
aaa
jnp
sbb
jno
adc
or
(bad)
stos
cmp
adc
iret
pop
or
dec
stos
outs
inc
jmp
mov
in
or
jp
not
xlat
popa
or
aam
push
or
jno
in
popf
or
in
mov
js
gs
add
ja
adc
mov
xchg
ret
nop
pop
in
aad
push
pop
sbb
xchg
pop
fldcw
xor
mov
scas
push
xchg
xchg
outs
push
pop
push
ins
inc
(bad)
mov
dec
out
jb
rcl
bound
xchg
push
jl
add
push
nop
mov
pop
xchg
and
(bad)
jge
sub
add
jmp
fimul
das
out
(bad)
mov
push
div
mov
pushf
cmp
pop
jno
sub
stc
or
fdivr
(bad)
outs
xor
add
jno
cmps
mov
cdq
and
sub
call
stc
(bad)
and
cmps
add
mov
ja
or
scas
jmp
test
dec
sbb
dec
fist
fisub
mov
push
cmp
addr16
add
sbb
sub
adc
add
fbld
xor
xchg
mov
movs
or
cmp
lahf
popf
jnp
mov
out
push
push
call
xchg
mov
into
sub
or
and
add
sbb
shl
ss
sti
bound
dec
add
pushf
pop
pop
mov
retf
or
dec
mov
outs
mov
mov
mov
inc
sub
aas
mov
divps
mov
out
shr
ficom
xchg
(bad)
fidivr
xchg
cmp
out
fld
movs
sbb
jo
push
aam
pop
push
iret
data16
add
add
mov
stc
push
adc
pop
xor
rol
mov
test
enter
lahf
and
call
xlat
jns
jmp
repnz
fstp
outs
xlat
inc
outs
movs
or
or
push
pop
(bad)
sub
mov
xchg
push
lss
mov
not
fmul
sbb
push
sub
jne
pop
inc
jnp
add
ins
xchg
mov
stc
and
leave
adc
adc
push
(bad)
push
stos
aam
enter
pop
push
jne
jns
stos
xor
push
repz
shr
sub
lods
int3
mov
in
mov
xchg
shl
pop
ins
sub
sub
(bad)
sbb
out
sub
fild
fwait
xchg
mov
enter
push
aaa
in
fisttp
fwait
mov
scas
mov
jge
mov
jno
jg
es
out
xor
cld
outs
add
mov
test
pop
cs
lea
jle
repnz
cs
je
call
sahf
mov
push
rol
and
or
sbb
mov
sub
sub
cs
jbe
call
sub
mov
fs
loopne
jecxz
mov
cdq
aad
sbb
jmp
dec
movs
arpl
adc
mov
lods
mov
popa
cs
push
idiv
retf
retf
repnz
rcl
lods
xchg
pusha
push
mov
lds
push
push
and
cdq
sahf
iret
pop
cmp
jo
and
pop
aad
xor
jo
pop
dec
ins
mov
lods
pop
xchg
inc
mov
xlat
mov
mov
aam
push
pop
mov
aam
ja
push
add
(bad)
xor
stos
mov
loop
or
fwait
iret
aas
mov
loopne
or
aam
cmp
arpl
push
rcl
add
add
mov
push
push
icebp
mov
(bad)
cdq
icebp
shl
pop
sbb
pop
sub
scas
adc
mov
int3
jb
mov
sub
enter
add
cmc
adc
ret
test
test
int
call
fiadd
sbb
lds
cli
mov
cld
lds
xchg
pandn
mov
xlat
out
mov
mov
push
or
std
and
in
scas
dec
mov
push
cmps
push
sub
inc
out
cwde
xor
and
cmp
mov
jp
fmul
inc
popf
dec
push
loopne
or
idiv
jne
call
repnz
xchg
mov
out
js
dec
inc
push
retf
cmp
call
das
mov
mov
mov
sbb
or
push
or
cmpxchg
sub
in
jg
cmp
sbb
mov
lea
stos
data16
popf
(bad)
push
xchg
add
push
pushf
rcr
sub
imul
cmps
mov
pop
mov
retf
repnz
pop
inc
xchg
sti
pop
or
outs
jmp
sub
cmps
cdq
mov
fst
mov
sub
mov
aam
das
div
enter
add
(bad)
xor
jno
leave
stos
fisubr
xchg
or
in
test
pop
aas
mov
retf
stc
sub
mov
je
mov
push
mov
stos
lahf
out
sbb
(bad)
faddp
test
icebp
add
sahf
frstor
mov
lea
mov
pushf
lock
jge
in
dec
das
push
hlt
repz
and
test
adc
mov
sbb
jl
push
sbb
cld
int
and
dec
(bad)
aas
xchg
and
pop
jo
mov
stos
mov
test
add
push
xor
int
mov
test
mov
adc
push
xchg
add
fild
mov
loop
test
aaa
add
shr
push
mov
cmc
daa
(bad)
es
mov
mov
stos
dec
sub
jge
cmps
stc
jns
es
sub
pop
loop
in
sub
pop
test
fwait
test
dec
sti
pop
hlt
sub
xchg
mov
jl
stos
push
aad
ret
jg
push
data16
ins
stc
jo
xchg
xchg
jbe
shl
movs
xlat
mov
and
cmp
(bad)
or
xor
sub
inc
dec
popf
push
pop
dec
push
cmps
xor
pop
mov
das
fs
fnsave
aas
mov
and
sub
mov
push
add
rcl
cmp
push
mov
cli
mov
push
adc
mov
neg
sub
pop
or
test
enter
jg
lods
scas
xchg
(bad)
or
test
dec
mov
cmp
scas
cli
dec
xor
jge
add
mov
pusha
and
bound
fsub
lods
add
js
sub
inc
push
push
jecxz
sub
xchg
js
scas
ins
sub
cwde
pop
mov
cmc
xchg
xchg
aas
mul
add
add
gs
mov
das
jb
adc
mov
nop
leave
pop
les
pop
mov
push
sbb
scas
hlt
or
in
adc
jbe
outs
arpl
inc
inc
cld
dec
mov
jbe
sbb
sub
mov
pop
loope
mov
mov
imul
rol
sahf
or
and
adc
lods
stos
sbb
popf
(bad)
mov
xchg
enter
inc
arpl
mov
sub
dec
sub
mov
mov
ds
jo
sbb
js
xchg
jae
retf
scas
fstp
jnp
lock
ins
inc
mov
pushf
imul
es
mov
ins
mov
dec
xor
dec
mov
cld
call
(bad)
pop
stos
(bad)
cli
test
inc
retf
loope
into
fdiv
cmp
cmp
xchg
lods
xchg
push
ds
out
sbb
or
dec
add
enter
cmp
scas
xlat
xor
fsin
or
bound
jnp
mov
sub
cdq
sbb
pop
cmc
cs
dec
jge
jp
in
dec
pushw
adc
add
or
xlat
mov
sub
and
add
loopne
jae
or
add
dec
inc
pop
in
cmps
popf
and
fistp
fimul
sbb
or
push
mov
pop
int3
outs
hlt
pop
shl
fwait
or
xlat
sub
add
jge
cmovp
or
popa
fistp
jmp
push
cmp
daa
mov
xchg
and
ins
dec
movs
or
pop
mov
cmp
test
imul
icebp
out
pop
or
cmp
lahf
cmp
pusha
mul
mov
(bad)
cmp
adc
jmp
sbb
push
mov
sub
daa
bound
inc
lods
ja
cdq
test
loopne
xor
test
mov
pop
pop
mov
add
iret
aas
in
loope
pusha
or
push
aad
jnp
je
xchg
push
das
ja
bound
xchg
xor
or
shr
call
push
sub
mov
inc
(bad)
cmps
jne
xlat
pop
sub
push
les
data16
and
jle
dec
fs
dec
bound
clc
dec
retf
into
add
movs
push
cdq
sub
or
fld
cld
push
xchg
xchg
push
pop
jae
jge
je
std
sar
mov
mov
sbb
adc
and
lods
mov
pusha
popa
aaa
pop
(bad)
bound
jno
or
inc
test
sub
hlt
jne
loope
repz
mov
sub
fdecstp
dec
aad
pop
sbb
ficomp
nop
mov
test
imul
popa
cmp
test
adc
mov
jmp
and
fist
pop
stos
pusha
push
or
push
mov
data16
fld
scas
jne
das
fistp
rol
aam
repz
add
cmp
cmp
lahf
add
push
retf
aas
mov
cmp
or
(bad)
imul
xlat
adc
sub
sbb
mov
test
push
cwde
mov
sub
sub
or
test
jbe
in
sbb
test
sti
cmp
mov
out
imul
push
mov
repnz
jge
mov
xchg
int
(bad)
mov
test
mov
in
inc
lods
rcl
xlat
jp
xor
in
in
xchg
inc
aam
mov
in
stc
lahf
es
pop
add
clc
dec
mov
call
push
add
js
sub
rcr
repnz
movs
push
adc
outs
sbb
jle
gs
mov
ins
push
pop
or
xchg
stos
dec
pusha
pop
mov
or
xchg
je
adc
cmp
sbb
dec
jo
mov
cld
and
cmp
fld
pop
enter
push
jae
iret
ss
add
pop
adc
pushf
mov
lock
push
scas
jns
outs
push
and
sub
scas
ror
add
inc
mov
pop
adc
nop
xchg
lds
sti
adc
sub
sbb
repnz
in
xchg
pop
ss
adc
shr
imul
adc
xchg
(bad)
shr
pop
les
sbb
jb
mov
arpl
jnp
iret
pop
sbb
xor
enter
dec
loop
jno
sbb
or
push
popf
mov
out
or
push
js
(bad)
out
int
xchg
pop
xchg
cmps
mov
or
retf
add
jmp
cmp
sahf
xor
dec
nop
jae
push
push
out
dec
lea
mov
mov
mov
dec
mov
jne
dec
pop
adc
mov
in
pop
lock
test
mov
mov
pushf
jle
ins
mov
mov
mov
jmp
sub
mov
loopne
ds
loop
scas
popf
sbb
call
jmp
pushf
mov
daa
sub
xchg
mov
dec
pop
and
out
push
cdq
jno
mov
xor
fwait
cmp
jmp
sar
and
ja
or
imul
push
repnz
sub
xchg
lock
js
ja
cmps
int3
pop
or
fwait
add
add
inc
jmp
pop
mov
in
pop
loopne
lds
sar
xor
clc
mov
mov
pusha
xor
and
test
fwait
clc
cdq
cdq
add
jmp
jae
pushf
ds
test
inc
inc
dec
inc
jnp
jno
push
test
fisttp
mov
dec
xor
jns
cs
jae
or
loop
jmp
bswap
jb
mov
test
jg
dec
into
scas
inc
mov
and
clc
dec
xchg
cmp
stos
cwde
jne
add
int
mov
and
jge
(bad)
loop
mov
xchg
stos
push
imul
test
push
cs
fstp
cmp
pushf
addr16
cmp
int3
adc
pop
cmp
jmp
sahf
retf
and
push
mov
push
mov
fwait
jno
pmulhuw
mov
xchg
and
div
and
movs
ins
adc
pop
sbb
xor
test
dec
sbb
fsub
pop
retf
cdq
loop
xchg
mov
inc
xor
retf
push
lods
xchg
or
ins
cld
mov
pop
push
addr16
lock
dec
adc
mov
xchg
mov
xchg
jns
jne
mov
jecxz
in
xor
and
jg
loop
fild
outs
neg
dec
aas
sub
push
and
jmp
sub
cmp
and
ficom
pop
fdivr
(bad)
jle
or
add
jle
ror
ja
jecxz
or
shr
sbb
stos
stc
mov
push
xlat
movs
stos
fisttp
or
and
xchg
inc
and
adc
xchg
pop
sbb
loop
xchg
cmp
jno
out
fdivr
adc
jne
xor
pop
(bad)
sub
dec
xor
cwde
jb
in
inc
cmc
add
les
fisttp
cld
aad
ins
add
ds
jo
pop
dec
jo
icebp
and
je
imul
jb
jge
fldenv
ja
xchg
leave
lods
cmp
push
and
aad
dec
add
fld
pop
test
ss
sahf
jnp
adc
lods
in
ds
shr
mov
push
or
ins
push
pushf
iret
sbb
push
outs
rol
dec
xchg
lea
movs
push
aaa
push
mov
inc
sub
xor
inc
jmp
dec
ja
data16
mov
cwde
aam
xchg
fist
test
sbb
add
add
mul
mov
mov
cld
mov
hlt
(bad)
psubq
ror
add
aaa
add
adc
icebp
or
(bad)
cmp
jecxz
jle
xor
sub
mov
imul
(bad)
aas
sar
push
mov
dec
setb
aas
push
sbb
fisttp
sub
jge
imul
imul
and
jmp
icebp
pop
movs
sub
retf
outs
out
popa
add
mov
jmp
cmp
fs
in
jmp
and
xchg
arpl
pushf
bound
test
add
std
push
retf
mov
daa
push
idiv
push
hlt
xor
sub
repnz
(bad)
jbe
inc
dec
pop
in
dec
mov
inc
pushf
mov
dec
mov
dec
dec
xchg
xchg
lods
push
ss
xchg
retf
xor
xchg
ins
or
into
(bad)
cmc
push
push
arpl
mov
rol
and
aad
push
leave
mov
xor
stc
imul
add
mov
cmps
inc
add
mul
retf
lahf
shr
sub
mov
int3
adc
addr16
aad
aas
and
sub
sbb
pop
loope
aas
sahf
xchg
enter
in
test
jmp
imul
ret
jecxz
cmps
int
adc
js
cmps
clc
dec
fmul
xchg
fcmovnbe
inc
into
and
test
inc
cmp
in
jno
mov
cmp
xor
ror
inc
test
(bad)
lods
or
and
xchg
push
int
push
mov
fsub
out
movs
lods
pop
out
idiv
test
mov
test
ret
dec
or
shl
cmc
sub
cmps
jmp
lock
retf
in
sbb
push
sub
jle
mov
adc
jmp
aam
daa
xchg
xchg
inc
pop
xor
mov
aaa
arpl
jae
dec
mov
sbb
mov
out
jl
loopne
jb
sub
pop
ins
mov
mov
cmp
mov
mov
aam
ja
icebp
jbe
jae
add
cmp
dec
add
xchg
or
cdq
ror
sub
mov
add
sti
test
ror
pop
fild
pop
cmp
out
rol
out
push
rcr
and
pop
cwde
ds
fs
mov
ss
mov
ss
adc
jns
and
push
loop
mov
mov
lea
loop
nop
or
inc
(bad)
cli
gs
in
or
sub
dec
arpl
cmp
sub
dec
(bad)
cmps
mov
push
jg
xor
pusha
out
sub
jb
icebp
push
out
and
cmp
and
sar
test
fld
mov
add
repnz
loop
xchg
fisttp
mov
out
mov
dec
mov
dec
loop
das
pop
add
xchg
out
scas
xlat
cwde
addr16
sub
jo
inc
xor
fcom
popf
mov
adc
lds
cwde
loop
pop
enter
sbb
ins
add
jge
mov
inc
pop
jns
mov
jbe
ins
cwde
outs
push
inc
xor
pop
addr16
(bad)
cmps
stos
sbb
jns
jecxz
lods
jmp
cmp
fcomp
cmps
mov
imul
sar
jle
inc
cmp
push
and
stos
cmc
and
xor
lods
add
(bad)
imul
int3
mov
daa
jnp
mov
fwait
add
lods
std
inc
mov
and
cmps
and
xchg
push
gs
shr
shl
jecxz
sahf
pushf
and
adc
out
push
sti
and
retf
sub
pop
adc
daa
sub
mov
and
adc
pop
xor
cmp
int
fldcw
enter
loope
mov
ja
dec
imul
mov
cdq
jmp
push
lods
xor
xchg
cmp
inc
into
movs
xchg
push
jl
pop
scas
retf
mov
mov
aam
ficom
jg
cdq
hlt
dec
aam
inc
pop
jmp
js
les
mov
loop
push
mov
jge
loope
(bad)
hlt
pop
pop
cmps
(bad)
retf
stc
xchg
push
mov
mov
ret
pop
pop
adc
sbb
jmp
xor
push
inc
jnp
inc
or
int
sbb
enter
xlat
int
xchg
mov
nop
mov
clc
enter
pop
call
cmps
in
jg
jmp
into
(bad)
mov
movs
leave
addr16
adc
push
es
pop
popa
jmp
in
pop
xor
aas
cmp
data16
inc
or
ret
push
or
in
movs
sbb
jns
fistp
(bad)
or
xchg
popf
shl
mov
push
test
jl
enter
push
(bad)
int3
and
in
std
cmp
or
das
or
sbb
out
paddw
cs
lods
fild
or
jp
mov
push
jo
xchg
out
and
cs
push
mov
addr16
mov
adc
push
sti
and
mov
gs
mov
sti
les
or
sub
popf
cli
sub
fistp
adc
push
mov
das
ins
dec
stc
test
sub
adc
(bad)
mov
inc
loop
push
cmp
lods
clc
fptan
mov
in
add
xor
add
sbb
sub
shr
jecxz
popa
(bad)
and
fdivr
outs
(bad)
jge
retf
xchg
xchg
and
jb
xor
lock
adc
mov
pushf
jcxz
mov
jns
push
shl
pop
cld
ja
push
or
cld
mul
jp
push
adc
retf
xchg
mov
hlt
mov
cdq
movs
lods
xchg
sub
fs
lods
fs
push
mov
int3
and
mov
cmc
(bad)
hlt
push
mov
sub
xchg
jge
lds
inc
pop
imul
adc
sahf
repnz
mov
mov
pop
(bad)
outs
sbb
or
mov
aas
shl
push
test
mov
sub
add
dec
ret
das
jmp
xor
xchg
mov
dec
mov
fs
sahf
daa
stc
dec
shl
ret
push
push
inc
std
dec
sbb
adc
(bad)
stos
add
and
enter
mov
pop
in
mov
stc
scas
jne
inc
jl
cmp
pop
dec
xor
call
add
mov
or
push
out
add
les
cmc
pop
cmps
dec
not
push
inc
xor
aas
inc
cdq
and
add
lds
jne
xor
mov
jecxz
inc
pop
stc
addr16
cmp
stc
xor
push
mov
jns
and
shr
or
in
call
pop
adc
push
imul
cld
jb
xor
jg
adc
jl
push
scas
jne
js
cdq
adc
push
imul
retf
pop
or
cs
cmp
fstp
jo
aad
lock
xor
cs
fneni(8087
xchg
mov
or
mov
jle
add
(bad)
je
das
adc
jmp
xor
loop
sub
push
jecxz
ficomp
popa
jno
sbb
inc
fdivr
mov
icebp
jmp
push
jle
scas
mov
das
cdq
pop
xor
xlat
fwait
jmp
or
inc
pop
movs
aaa
xchg
adc
call
jmp
mov
adc
pop
lahf
xor
jge
loope
in
inc
ins
push
push
mov
dec
in
jmp
inc
js
add
inc
sbb
repnz
ins
mov
imul
outs
daa
sti
js
test
adc
xor
shl
ror
inc
and
movs
cmp
imul
pop
in
or
and
out
cld
hlt
icebp
and
mov
push
(bad)
ins
jb
sbb
fnstenv
push
cwde
ins
pushf
stos
mov
sti
xchg
push
mov
call
pushf
loopne
cmp
(bad)
cmp
inc
cmp
dec
mov
pop
sahf
test
fs
retf
mov
xor
std
mov
cmp
arpl
and
pushf
in
xor
cmp
out
cdq
sub
mov
sub
push
mov
xchg
mov
arpl
add
cmp
mov
xor
cmps
dec
pop
jle
push
in
test
(bad)
shr
add
cmp
(bad)
and
pop
inc
mov
leave
mov
jecxz
cmp
and
sub
fsubr
mov
loope
mov
pop
popf
imul
xchg
ss
inc
xor
sbb
lods
in
rol
fld
inc
shl
sub
idiv
aas
iret
js
movs
cdq
fwait
cdq
mov
xchg
dec
and
cmc
out
mov
out
shl
mov
cmp
mov
lds
add
xchg
xchg
movs
pop
imul
aam
(bad)
adc
cmp
out
mov
sub
and
xor
popa
test
cmp
clc
out
add
(bad)
pop
shl
es
movs
loop
fisttp
fwait
in
les
outs
sar
mov
test
ins
in
xchg
frstor
or
xchg
jle
movs
adc
(bad)
out
mov
sbb
mov
loope
mov
loope
xor
pop
outs
aam
dec
dec
mov
push
mov
pop
add
in
jbe
sbb
cld
push
ss
jne
adc
or
and
push
mov
push
sbb
dec
movs
(bad)
cli
imul
sbb
add
test
ret
out
add
xor
inc
repnz
sbb
cli
sahf
ficom
mov
dec
lahf
and
cmp
ret
push
test
ins
sub
mov
cmp
jmp
adc
fwait
sub
cmps
(bad)
mov
add
cwde
aad
inc
pop
(bad)
mov
or
mov
ja
imul
mov
sti
shl
retf
push
gs
test
repz
(bad)
cmp
cmp
data16
mov
jle
jb
cmp
jo
repnz
out
push
mov
adc
test
rcr
popa
test
hlt
mov
dec
scas
fadd
push
addr16
das
mov
sahf
and
aas
mov
mov
ss
retf
cli
push
mov
push
cmc
dec
adc
ja
mov
inc
mov
and
(bad)
sub
cmp
push
pop
mov
push
rcl
mov
popf
jmp
stc
and
ret
add
out
push
jne
jge
out
call
jnp
adc
movs
stc
xor
push
(bad)
inc
push
mov
xlat
dec
xchg
repnz
(bad)
shl
data16
xchg
jb
or
loopne
and
xchg
movs
add
or
push
mov
adc
ficomp
and
mov
mov
in
popf
mov
pop
(bad)
stos
and
sbb
(bad)
inc
std
ficom
shr
scas
add
mov
cs
fimul
cmp
lds
xor
es
outs
test
popf
test
jnp
(bad)
int
addr16
ror
nop
out
sub
jl
jmp
mov
adc
sbb
aas
cmp
sbb
xchg
sbb
test
pushf
shl
(bad)
scas
xlat
outs
fwait
dec
xchg
jmp
lds
sub
fmul
pop
dec
(bad)
sbb
hlt
popa
jg
ds
int3
and
jno
push
outs
lds
and
jo
mov
cld
mov
mov
je
or
dec
outs
lock
pop
fst
cs
sbb
or
mov
add
sub
retf
inc
jno
std
enter
leave
movs
pop
nop
jnp
mov
stos
sub
xchg
add
push
ins
lahf
lods
mov
inc
or
add
add
jl
mov
push
call
push
loopne
or
add
gs
xchg
fidiv
jnp
loop
push
je
out
xchg
and
xchg
popa
or
xchg
cmp
jbe
fcomp
daa
xchg
scas
push
mov
shl
mov
cmp
retf
jbe
hlt
or
mul
lahf
jp
aas
enter
push
stos
out
movs
cmp
std
jo
mov
jle
jnp
fs
mov
loope
jnp
or
mov
inc
sti
dec
mov
xor
test
ret
adc
icebp
addr16
xor
pop
(bad)
and
in
and
shr
or
adc
stc
inc
sar
das
(bad)
(bad)
jl
mov
push
pusha
sbb
lods
rcr
mov
fmul
adc
mov
sub
out
aas
aaa
ja
in
mov
jmp
dec
push
dec
not
sbb
das
popa
mov
mov
(bad)
mov
cld
outs
scas
int
and
ss
jb
push
(bad)
jns
push
ret
jbe
hlt
and
arpl
(bad)
lock
jo
mov
mov
pusha
jo
sub
cmp
and
aaa
push
test
inc
xor
or
stos
daa
test
inc
jmp
das
mov
loopne
int
pop
bound
jmp
jbe
lods
mov
jo
cdq
pop
xchg
jmp
pop
add
cmps
or
ror
je
jmp
push
loop
xchg
(bad)
mov
(bad)
cmps
pop
push
jecxz
adc
mov
cs
adc
add
data16
jge
das
jb
and
call
jae
in
jns
dec
out
and
vaddss
in
jo
jno
es
test
cs
dec
test
xor
jge
sbb
dec
lea
or
ss
stc
lds
daa
mov
(bad)
pop
push
int
push
test
out
ss
dec
jno
jmp
imul
sti
gs
or
repnz
stos
mov
movs
imul
sbb
adc
fiadd
jne
cmp
cmc
ds
adc
xor
mov
dec
dec
or
leave
call
ins
xor
nop
repz
jmp
in
ins
mov
pop
or
or
out
xor
fist
jge
push
cmps
mov
or
or
sbb
xor
dec
dec
xchg
outs
ss
lods
xchg
scas
stos
(bad)
shl
addr16
jns
pop
fldenv
cmp
pusha
and
xor
xchg
sbb
inc
pop
stos
(bad)
or
inc
sahf
enter
sub
call
in
call
ror
lock
loop
gs
(bad)
inc
neg
jo
(bad)
mov
adc
sbb
mov
jge
imul
mov
std
add
(bad)
retf
xchg
out
push
cmp
(bad)
outs
fst
xchg
jle
mov
lock
aam
xor
aaa
icebp
xlat
cwde
out
gs
cmp
mov
xchg
mov
or
test
rol
dec
cli
call
movs
push
pop
sub
mov
sub
outs
sbb
inc
and
pop
scas
adc
sbb
adc
pop
xchg
cmps
adc
bound
jae
inc
sar
gs
cmp
or
std
loop
lea
dec
xor
cmc
xchg
inc
call
stc
ja
xchg
sti
ins
pop
je
sbb
jmp
pop
cmp
cmp
(bad)
mov
test
fisttp
inc
mov
loope
dec
adc
sahf
and
push
jle
pop
push
ja
xor
or
inc
rcl
or
xor
mov
ja
test
retf
arpl
adc
sbb
mov
loope
jmp
mov
dec
mov
dec
ins
adc
sub
cmp
mov
mov
sub
sahf
xor
daa
pop
adc
mov
pop
pop
mov
js
shl
xlat
push
out
cmp
scas
push
(bad)
dec
aam
pop
xor
mov
add
rcr
xchg
lods
out
inc
hlt
jo
pop
jne
sbb
dec
add
(bad)
out
int3
cmps
test
jge
dec
and
cld
call
js
cmp
mov
and
and
mov
rol
aaa
mov
sub
mov
mov
test
sbb
ret
cmp
sbb
inc
push
retf
mov
mov
out
ins
mov
pushf
pushf
(bad)
test
mov
jg
iret
sbb
rcr
(bad)
sbb
xchg
daa
addr16
xchg
xchg
jle
mov
push
xchg
jae
xchg
dec
arpl
adc
retf
ins
int
pop
iret
sub
cmp
fsubrp
add
or
ins
out
test
pop
call
int
dec
xchg
push
(bad)
xor
mov
sbb
les
test
mov
out
ret
nop
xchg
inc
dec
cmp
test
inc
mov
fucompp
mov
popf
dec
test
mov
retf
(bad)
js
pop
sub
and
pop
and
inc
ss
loop
addr16
push
inc
lock
lods
push
test
mov
cmp
addr16
gs
call
cwde
push
add
movs
sub
bnd
mov
inc
dec
mov
imul
sub
add
loopne
rcr
or
xor
dec
lds
adc
add
cmps
inc
das
pop
in
mov
cmp
xchg
add
scas
iret
pop
ficomp
hlt
push
mov
mov
ror
popa
sub
jle
and
cmps
xor
int3
and
fcomi
imul
das
mov
add
outs
or
fwait
stos
pop
pop
pop
into
int3
push
or
xchg
data16
and
or
mov
in
jmp
fcmovbe
dec
mov
fs
inc
push
ret
idiv
inc
scas
test
popf
jno
push
xor
cmc
push
fdivr
hlt
xlat
fst
bnd
push
jle
jmp
mov
push
loope
sbb
out
add
xchg
addr16
int
cld
xchg
jb
xor
sbb
dec
dec
jne
pop
gs
clc
ss
out
cld
mov
mov
and
(bad)
xchg
ret
mov
pop
(bad)
jb
jmp
and
fwait
cmp
addr16
xchg
xchg
xchg
sbb
add
push
pop
arpl
jmp
cs
pop
je
and
add
dec
mov
into
out
ja
dec
dec
call
aad
iret
add
pop
xor
xchg
cmp
add
fidiv
retf
scas
in
inc
sub
leave
dec
data16
xchg
jnp
repz
and
ins
xchg
iret
and
mov
imul
push
rcr
shl
rcr
fbld
imul
and
js
xchg
into
ds
leave
jmp
stc
mov
sbb
push
iret
out
mov
push
pop
aaa
dec
test
in
mov
in
in
mov
ret
cmps
repnz
jae
jge
arpl
cmp
xchg
clc
jne
popa
mov
icebp
mov
mov
lock
sbb
out
pop
mov
mov
fs
sub
cmp
into
stos
cmp
int3
fcom
mov
pop
jns
cmps
outs
das
out
bnd
adc
pop
or
jg
push
inc
pop
cmp
pop
aad
fisubr
adc
mov
shl
sub
dec
movs
mov
sub
cs
fwait
cmp
jne
cmp
xor
xchg
hlt
(bad)
je
imul
adc
mov
cli
stc
rcl
pop
lds
dec
in
dec
iret
arpl
mov
sar
les
and
test
pop
popf
sub
sub
enter
sub
or
pop
inc
cmp
retf
es
fcomi
or
cld
int3
cmp
push
test
mov
(bad)
pop
in
push
adc
dec
and
ror
in
mov
push
adc
mov
xchg
popf
iret
fmul
(bad)
dec
push
sub
ds
retf
mov
in
mov
jmp
xchg
lahf
outs
jne
pop
inc
pop
inc
out
sti
jae
mov
test
retf
sbb
sub
push
test
loopne
jno
sub
leave
pusha
mov
inc
rol
push
dec
xlat
retf
pop
fisubr
repnz
mov
pop
inc
sub
cwde
xchg
push
cmp
fbld
adc
cs
fnstcw
and
xor
mov
jnp
cmp
mov
sbb
out
sub
inc
call
in
les
fst
jo
cmp
sub
lds
xchg
aad
out
dec
adc
xchg
jne
mov
(bad)
scas
pop
cwde
aas
enter
mov
xlat
ds
shl
or
js
inc
xchg
adc
push
jmp
jg
mov
enter
mov
mov
in
inc
scas
aas
enter
or
movs
dec
stc
mov
push
lds
inc
icebp
and
js
test
test
inc
loope
test
pop
ret
scas
dec
int
mov
(bad)
mov
sbb
mov
div
cmp
jb
or
scas
sub
push
ss
jne
cwde
sbb
outs
in
sbb
into
shr
or
hlt
repz
repnz
cmp
ss
adc
jge
or
mov
or
dec
call
pop
lahf
sub
test
repz
sbb
les
in
or
mov
retf
mov
add
sar
add
ins
pushf
jmp
pop
je
ds
int
pop
bound
jge
ror
add
sbb
mov
pop
or
sub
mov
mov
xchg
mov
repz
adc
pusha
and
and
mov
repz
fincstp
sbb
or
in
pop
mov
retf
dec
inc
pop
outs
xchg
in
mov
dec
ret
push
adc
cmp
mov
ret
adc
jmp
dec
xchg
add
sub
out
xchg
mov
adc
int
jmp
push
push
retf
xchg
jp
or
scas
popa
sub
sub
and
push
out
mov
cwde
ss
imul
sub
sub
jle
jg
sub
call
inc
fisub
inc
scas
adc
jno
push
push
xchg
adc
(bad)
push
mov
or
jmp
repnz
jp
or
outs
fild
ret
pop
mov
dec
and
sbb
pusha
jmp
jmp
push
pop
mov
or
lahf
js
out
inc
and
js
es
dec
mov
mov
enter
adc
and
test
mov
mov
sbb
int3
into
dec
xor
add
(bad)
mov
(bad)
aam
dec
jns
scas
ficomp
jle
mov
mov
xchg
xchg
out
add
and
mov
ss
out
jmp
mov
in
xor
rol
jo
sub
pop
pop
add
pop
lock
dec
ror
cmps
pop
xor
mov
sti
sbb
(bad)
jle
push
cmps
push
cmps
xchg
dec
shr
es
adc
data16
dec
repnz
sahf
and
mov
aaa
cmp
rcl
mov
test
fldenv
mov
add
or
xchg
mov
mov
retf
mov
std
(bad)
(bad)
leave
or
(bad)
lock
lods
pusha
mov
and
xor
push
aam
mov
arpl
adc
test
sahf
mov
inc
xlat
sub
in
mov
call
es
fadd
(bad)
pop
adc
(bad)
sub
or
adc
adc
pop
mov
mov
sub
mov
lods
mov
push
loopne
lea
shr
js
jmp
adc
pop
mov
aad
mov
inc
adc
sbb
call
cld
mov
sub
inc
rcr
fst
pop
xor
ficomp
arpl
mov
mov
mov
stos
push
push
xchg
and
mov
xchg
pop
shl
out
cmp
mov
xchg
mov
scas
inc
inc
nop
sbb
std
ret
mov
dec
sbb
aam
push
and
das
fcom
(bad)
dec
mov
nop
icebp
cmp
retf
xlat
inc
jne
dec
mov
out
pop
imul
(bad)
icebp
push
dec
movs
pushf
fwait
mov
xchg
mov
lock
pop
add
jmp
pop
add
aam
ins
adc
mov
loope
mov
mov
push
std
dec
jle
adc
mov
test
cmp
(bad)
mov
inc
inc
pop
or
ret
clc
jo
or
in
ror
sub
(bad)
js
ret
add
pusha
mov
jecxz
inc
int3
cmps
(bad)
mov
adc
out
call
mov
pusha
or
test
pop
call
jno
or
ins
aaa
icebp
(bad)
leave
push
mul
push
pop
sub
hlt
dec
(bad)
hlt
push
(bad)
mov
add
jl
mov
or
repnz
sbb
cmp
pop
retf
push
icebp
fadd
push
xchg
adc
out
push
jmp
nop
push
sub
sbb
add
pushf
outs
mov
leave
add
gs
mov
movs
pop
div
mov
ss
xor
mov
push
dec
and
jo
popf
sub
cmp
enter
pushf
js
sub
adc
add
sti
hlt
dec
mov
in
jg
pop
push
mov
adc
pmuludq
(bad)
xchg
das
or
push
es
inc
xchg
js
hlt
test
pushf
add
rol
push
inc
jl
sub
pop
repnz
xchg
scas
aam
adc
into
xor
mov
and
popf
popf
(bad)
mov
mov
hlt
sub
(bad)
push
adc
mov
cmc
or
lods
and
(bad)
pop
aam
pop
fldenv
cmp
mov
leave
sbb
pop
push
mov
and
inc
add
mov
in
adc
repz
call
mov
dec
add
cmps
jae
pop
enter
jns
fcomp
std
mov
push
or
push
mov
cmps
push
cmps
xor
(bad)
into
adc
cmp
cmps
dec
int3
or
loop
popf
push
mov
mov
(bad)
pop
hlt
(bad)
fnstcw
pop
push
fstp
jmp
cli
stos
mov
aaa
mov
fimul
mov
add
into
xor
mov
jo
or
jno
popa
lds
mov
arpl
push
arpl
sub
addr16
or
pop
and
popa
iret
(bad)
pop
inc
mov
lahf
hlt
std
in
(bad)
xchg
dec
xor
scas
sub
fsub
mov
inc
sub
jbe
sub
add
ret
icebp
jne
adc
lgs
and
mov
push
popf
inc
xchg
mov
stc
push
push
imul
inc
mov
fstp
push
ret
mov
lock
sub
jno
dec
and
xchg
sbb
out
cmp
pop
aad
add
stos
imul
bound
push
fild
inc
call
aam
xchg
ror
sub
test
jmp
cld
js
lea
fcom
xor
stos
test
sub
aas
xor
test
mov
cld
cmp
xlat
xchg
xchg
adc
pop
sub
shr
push
adc
cmps
fwait
iret
nop
scas
dec
mov
sub
sahf
mov
dec
pop
sub
jo
cs
xor
fs
jo
jecxz
data16
in
lock
sub
cmp
fsubr
mov
mov
mov
std
sar
sbb
data16
pop
retf
mov
or
sub
or
add
jnp
popa
mov
cmps
sahf
or
cmp
sbb
fdiv
inc
arpl
cwde
retf
xor
sbb
sbb
mul
mov
push
jecxz
outs
jle
or
outs
and
test
out
in
in
lods
stos
(bad)
stc
jae
mov
mov
xor
ret
dec
push
mov
cli
mov
pop
xor
add
in
(bad)
std
std
je
inc
fnsave
and
mov
loope
xor
xchg
mov
data16
or
test
add
inc
jne
fsub
scas
push
sbb
add
(bad)
stc
lahf
leave
sub
jb
fld
mov
sbb
mov
cdq
sar
outs
aad
jp
aaa
and
outs
push
fisubr
push
dec
daa
fisubr
imul
scas
pusha
(bad)
hlt
jge
add
dec
and
pop
push
inc
movs
fnsave
fwait
mov
shl
nop
ins
stc
bound
fwait
mov
cwde
ins
lds
add
add
imul
popf
jae
push
aad
out
push
fcmovnu
retf
mov
ror
push
adc
int
jmp
add
(bad)
stc
loopne
dec
test
ins
mov
push
fwait
mov
push
daa
xchg
repnz
inc
push
mov
xchg
adc
inc
lea
dec
add
jle
fdivr
fwait
sub
sbb
push
cmp
push
pop
cmp
std
cmps
in
push
mov
push
mov
jecxz
xor
retf
into
pop
out
or
sbb
mov
cmp
sub
mov
popf
mov
cld
icebp
lea
push
mov
inc
mov
les
push
mov
fiadd
(bad)
ins
in
sub
fisub
or
(bad)
xor
push
dec
pop
(bad)
xchg
push
xor
rol
xchg
jnp
repz
test
xchg
and
xchg
daa
(bad)
shr
sub
pop
add
test
test
xchg
mov
pop
pop
nop
inc
mov
push
test
or
xor
add
cli
push
pop
sub
sub
enter
dec
les
ret
loop
xlat
sbb
cs
(bad)
movs
mov
mov
idiv
jnp
hlt
add
fisttp
mov
jmp
inc
aam
sub
add
repz
lods
mov
lea
mov
mov
push
stos
lock
clc
mov
fisub
xchg
gs
in
hlt
xchg
mov
jmp
movs
lahf
sub
jns
fsub
fidivr
cmp
lods
repnz
or
jno
mov
test
jge
or
repnz
cmp
scas
push
fdiv
sbb
cwde
pop
and
jl
out
shr
lods
in
imul
in
into
or
jmp
add
pop
jp
and
push
pop
and
xor
idiv
repnz
mov
(bad)
xor
pop
cli
ins
ja
rcr
bound
cmps
sub
xchg
add
mov
aam
retf
adc
add
xchg
cmps
fbstp
adc
cmp
jg
sbb
jecxz
jns
xor
cmp
and
stos
lds
pop
jbe
pop
stc
jns
hlt
push
and
arpl
push
cmp
enter
xchg
pop
xchg
mov
sbb
mov
sub
dec
mov
jg
lock
in
pop
cmp
jbe
push
xlat
stc
ror
(bad)
cmps
int3
ins
push
popf
popf
sahf
xor
arpl
push
adc
and
add
mov
hlt
into
mov
and
jmp
leave
lods
fs
add
arpl
jo
rcl
retf
sbb
dec
sub
(bad)
scas
sub
hlt
sbb
jecxz
out
aam
xor
inc
stc
pop
scas
stc
loopne
outs
push
shl
gs
mov
arpl
push
rcl
sub
sar
idiv
popf
dec
arpl
test
outs
(bad)
sub
push
and
ja
mov
mov
dec
inc
adc
shr
ret
ins
mov
sub
clc
and
aas
cmp
push
loop
fnstcw
cwde
(bad)
out
and
jge
sub
and
dec
test
fisttp
push
pop
sub
rol
retf
(bad)
jle
(bad)
pusha
fistp
into
mov
cld
dec
aam
pusha
pushaw
retf
inc
retf
je
fs
sbb
cli
outs
xchg
fcom
popa
jmp
adc
cmps
mov
jno
sbb
shl
popa
or
movs
les
lods
in
jge
sub
xlat
xor
(bad)
addr16
inc
jne
mov
rol
stos
cs
cmp
in
inc
sbb
sbb
mov
lods
mov
dec
mov
icebp
mov
adc
cs
mov
loope
mov
mov
rcr
das
lea
mov
cmp
pop
cld
ror
sbb
loopne
push
add
dec
add
mov
xor
jp
fst
(bad)
sahf
sub
movs
in
js
mov
dec
push
iret
fdivrp
lahf
int
mov
(bad)
mov
mov
es
inc
outs
loop
dec
jecxz
iret
push
cmp
inc
xchg
ror
mov
out
pop
std
dec
scas
cdq
ja
lods
jae
dec
addr16
adc
mov
aas
ja
aam
mov
push
xchg
pop
dec
popa
jmp
test
dec
fadd
xchg
lods
in
int
pop
jge
ss
jg
and
add
push
dec
scas
pusha
mov
jmp
lea
mov
outs
sub
retf
xlat
jnp
mov
inc
inc
test
(bad)
nop
and
out
and
mov
(bad)
loopne
(bad)
add
fcmovbe
sub
ret
loope
pop
or
add
pop
stos
or
pushf
data16
pop
js
stos
or
jl
mov
lods
out
js
fprem
int3
and
adc
jecxz
adc
movs
hlt
ror
in
push
or
adc
adc
mov
jbe
ficomp
fcmovu
mov
and
push
ret
movs
and
or
test
or
mov
(bad)
out
sbb
je
jns
mov
std
push
mov
frstor
test
inc
sahf
inc
jp
ins
xchg
sub
bound
inc
sub
pop
clc
imul
sub
int3
not
call
jmp
test
jae
inc
cmp
lock
push
jbe
sar
test
inc
jmp
mov
sub
xchg
sbb
loope
nop
sbb
adc
gs
les
xchg
pop
xor
ins
fs
loope
xchg
pop
xor
sbb
loopne
or
jnp
into
icebp
dec
cmc
clc
xchg
xchg
adc
ficomp
icebp
sbb
sbb
xchg
jp
mov
leave
in
fmul
jl
cmp
js
xor
inc
pop
dec
and
push
dec
jo
xor
std
shl
inc
in
scas
outs
lods
add
imul
icebp
sub
mov
int
pop
xor
push
shr
xchg
and
and
in
push
push
into
retf
and
jl
mov
lahf
pop
xchg
into
sub
int
ins
pop
out
jbe
and
fdivr
sub
mov
and
or
cmc
fst
sbb
jl
jmp
rol
test
daa
loope
or
fstp
call
push
pop
movs
inc
mov
ins
xchg
add
jle
sub
fsub
jns
push
dec
hlt
cmp
stos
ds
adc
inc
dec
push
or
jmp
dec
mov
pop
mov
sbb
popa
test
ret
rcr
mov
jmp
pushf
repnz
inc
retf
jmp
dec
mov
retf
push
(bad)
lock
jle
push
sub
mov
ins
inc
jns
push
jnp
mov
mov
(bad)
mov
xor
mov
inc
and
cmps
stos
push
dec
cmp
int
xor
dec
cld
cmps
pop
sub
call
ins
sub
(bad)
test
ffree
(bad)
js
call
inc
push
frstor
inc
call
call
sbb
sub
mov
loope
sahf
push
jno
inc
or
jecxz
or
aas
cmp
inc
mov
xchg
pushf
jp
pop
mov
inc
add
xor
in
add
stos
inc
push
fcmovnb
inc
test
rcl
pusha
sub
mov
movs
stos
add
bound
addr16
or
xchg
es
or
add
mov
int3
mov
push
loope
pushf
jg
jae
lods
pop
jle
push
das
call
out
ss
jne
stc
sar
and
arpl
frstor
push
sbb
xor
outs
arpl
sub
add
mov
jb
leave
or
cmp
mov
xor
in
js
stos
or
pusha
add
jle
int
pusha
adc
stos
(bad)
mov
movs
fcomp
fucomip
sar
pop
out
inc
push
test
or
sar
mov
cli
stc
mov
xor
and
iret
pop
push
jle
(bad)
in
out
sar
and
mov
(bad)
mov
out
cmp
xchg
xchg
das
mov
push
push
and
and
fiadd
and
ja
dec
xor
push
push
dec
xor
jge
mov
cmp
mov
mov
adc
sbb
adc
sub
scas
sub
mov
das
in
lock
scas
std
hlt
les
test
outs
gs
xchg
push
jno
jl
test
mov
imul
ss
add
xchg
sub
and
mov
int3
pop
sub
icebp
in
mul
sbb
push
les
push
mov
push
or
mov
(bad)
xor
and
jno
sbb
sti
xchg
imul
pop
xchg
add
sbb
loope
or
int3
and
and
cmp
inc
data16
in
mov
shl
jmp
fpatan
sbb
xchg
cmp
test
aas
cmp
push
and
shl
mov
rol
cmps
jae
push
bound
jbe
jae
cmp
jp
mov
sbb
cmp
inc
sub
js
je
mov
mov
jl
xchg
push
dec
les
repz
push
dec
mov
dec
jp
xor
hlt
sub
pop
int
pop
sub
adc
mov
arpl
add
iret
shr
mov
jb
push
loope
xchg
sar
and
sub
cmp
dec
jo
xchg
in
lds
int
in
repz
inc
push
inc
jle
lahf
cmp
cmps
mov
adc
ins
(bad)
out
hlt
and
ror
sub
in
mov
cwde
es
xor
xchg
popf
test
loopne
es
and
xor
lahf
daa
push
or
sub
mov
mov
jl
(bad)
rcl
hlt
call
add
rcl
sbb
sub
adc
jne
or
cmp
push
mov
pop
out
pop
push
popa
rcl
je
lods
in
or
mov
mov
popf
xor
or
pop
jo
xor
dec
jns
add
fwait
int3
cld
mov
mov
retf
es
mov
sub
(bad)
and
(bad)
xor
push
inc
jbe
jne
mov
cmp
mov
les
mov
outs
add
stos
push
jnp
test
and
mov
xchg
stc
cmp
jp
or
sub
adc
mov
sahf
jle
out
out
test
mov
jle
mov
add
adc
dec
add
adc
aas
repz
mov
mov
mov
ret
cmp
sti
dec
push
ret
fstp
fwait
push
pop
fisttp
rcl
mov
ss
cmps
mov
jno
cmps
fadd
push
in
add
iret
pusha
popa
push
sub
popa
push
add
mov
(bad)
aam
xrelease
and
(bad)
xchg
cdq
mov
xor
xor
call
es
cwde
shl
xchg
or
xchg
in
jne
xchg
repnz
sbb
lahf
imul
dec
push
adc
inc
cmp
ret
in
int3
cs
enter
mov
mov
dec
call
add
call
or
aad
dec
jae
push
stos
mov
xor
aad
xchg
jg
cmp
xchg
pop
and
dec
loopne
adc
int3
inc
xor
push
or
inc
push
lods
sbb
fcmovu
cwde
mov
mov
inc
push
dec
dec
pop
out
in
rcr
xchg
mov
jecxz
inc
push
dec
push
or
sub
movs
push
lock
sbb
push
in
inc
sbb
popf
shl
je
xor
and
retf
mov
mov
ins
add
jmp
cmp
out
lds
aad
mov
les
xchg
in
push
add
or
sbb
or
pop
xchg
cmp
repnz
xor
add
mov
jp
pop
and
mov
sub
ss
pop
sbb
push
repz
push
sub
mov
aaa
in
mov
add
scas
aaa
fwait
pop
dec
mov
lds
add
xchg
inc
sub
aaa
or
mov
xor
xor
push
pusha
mov
push
cmp
jno
xchg
(bad)
in
pusha
adc
fs
cmp
adc
test
inc
test
mov
xor
loope
mov
cmp
sbb
std
ins
sub
jg
call
jmp
xlat
mov
in
nop
movs
dec
xchg
inc
add
call
mov
jmp
cmc
stc
dec
xor
sar
out
mov
das
sub
xchg
jle
mov
adc
pop
and
push
mov
xor
mov
pop
cmp
mov
push
loope
jbe
in
jmp
add
stos
ja
(bad)
fisttp
iret
sbb
(bad)
cli
aas
add
aad
jae
sub
push
frstor
ds
sahf
cdq
sub
loopne
mov
sbb
or
sub
xchg
and
lds
cmp
xchg
jmp
add
push
fidiv
push
jmp
mov
in
mov
push
mov
xchg
sti
sar
pop
fs
mov
mov
jge
and
xchg
or
test
outs
lahf
je
dec
fs
or
shr
fadd
and
aad
adc
lods
aaa
cli
xchg
js
or
cmps
fcmovnbe
xor
int3
arpl
and
cmp
dec
sbb
retf
and
sahf
jae
mov
or
repnz
mov
ds
push
(bad)
mov
outs
jo
mov
test
das
icebp
mov
out
dec
or
dec
mov
sbb
xchg
loope
jno
in
data16
lods
sub
adc
cmp
inc
outs
and
or
jb
std
pop
test
sub
jbe
pop
stos
(bad)
sbb
add
mov
enter
push
jg
sbb
jne
or
mov
hlt
addr16
xchg
fisttp
cdq
mov
rcr
xchg
adc
(bad)
aad
sbb
mov
xchg
(bad)
pop
jno
and
pop
xchg
or
mov
int
ja
or
out
xor
xchg
mov
in
pop
ss
cmc
inc
loope
inc
xor
mov
add
jo
std
and
mov
iret
jno
imul
popa
jno
fsub
data16
mov
ficom
jmp
mov
cs
pop
or
mov
dec
(bad)
into
jmp
push
xchg
fsub
dec
ss
push
or
mov
pop
push
and
arpl
cmp
mov
pop
shl
ss
(bad)
mov
mov
ret
shl
push
push
cdq
adc
sub
mov
dec
add
inc
mov
xchg
mov
cmp
inc
cmc
div
inc
cmp
arpl
inc
cmp
pushf
clc
sub
into
movs
add
int
inc
cmp
cld
mov
sub
stos
mov
jmp
sbb
and
inc
xor
mov
sub
mov
sbb
fsub
jecxz
mov
aas
vminsd
in
and
ds
lahf
sbb
mov
add
cli
and
jp
cmps
cmp
lods
or
loopne
clc
das
jbe
rcl
pop
or
or
sub
jp
scas
dec
in
idiv
aas
mov
push
(bad)
mov
jns
cmps
dec
or
ss
sub
jbe
cmps
or
stc
mov
xchg
out
sbb
adc
in
idiv
pop
test
sbb
shr
mov
aas
cmc
mov
pop
test
or
aas
sub
mov
push
push
(bad)
hlt
mov
mov
adc
sub
dec
test
ret
mov
dec
pop
nop
aad
aad
and
repnz
lds
pop
add
xor
push
jbe
dec
mov
and
es
add
je
xchg
sahf
fucomi
ins
out
call
cli
bound
mov
hlt
inc
inc
mov
das
shl
(bad)
pop
outs
shl
repz
mov
in
call
and
push
fistp
mov
loope
stos
test
and
shr
lods
cli
popf
cmp
mov
or
push
sbb
daa
cmp
les
lahf
xchg
adc
xchg
sbb
push
dec
mov
xor
mov
xor
mov
es
xlat
xchg
mov
mov
inc
outs
adc
lahf
adc
xor
jl
imul
popf
into
adc
xor
xor
jae
jb
jbe
imul
retf
pop
cwde
jl
sub
xchg
dec
jl
push
adc
xor
cmp
mov
movs
lods
mov
aaa
add
fnsave
stc
std
stc
scas
sub
push
jp
ja
adc
push
adc
mov
xor
jmp
loope
das
ret
sub
mov
scas
inc
sub
lods
push
mov
je
push
(bad)
jae
or
mov
jl
ja
mov
push
(bad)
fild
aas
jg
fwait
movs
ins
cmovns
sahf
mov
xchg
add
sbb
xchg
or
daa
adc
stc
popa
dec
or
mov
adc
loope
enter
icebp
pop
lea
jb
or
(bad)
aam
inc
jmp
or
dec
rcl
in
je
jmp
mov
push
das
std
and
mov
push
mov
in
sbb
imul
mov
mov
pop
repnz
push
int3
addr16
cld
pop
lock
add
daa
bound
and
ficom
cmp
cs
repnz
lock
add
xchg
hlt
retf
bound
fcmovnbe
pop
call
aaa
enter
dec
loope
in
popf
icebp
ja
scas
mov
mov
push
(bad)
test
inc
pop
fisubr
and
mov
xor
in
mov
or
ror
and
loopne
jp
xor
jle
xchg
sysret
sar
(bad)
jo
adc
sub
xchg
xlat
dec
inc
and
stos
sbb
mov
adc
sbb
sub
jmp
cmp
fldcw
dec
dec
rcl
bound
sahf
pop
vpxor
(bad)
and
into
ja
xchg
push
lea
cmp
or
retf
and
lea
dec
or
sbb
test
fidivr
add
jae
pop
bound
cs
or
xor
lahf
push
jbe
mov
pmulhuw
imul
xor
pop
mov
mov
loopne
mov
dec
mov
mov
pop
loopne
test
jno
push
mov
jle
adc
fild
aad
psrad
int
mov
mov
dec
scas
nop
lods
push
and
sub
in
xor
shl
icebp
in
xor
adc
xor
stos
push
inc
sti
into
dec
mov
popf
mov
sbb
xor
loop
sar
mov
(bad)
enter
ret
fnstcw
inc
mov
das
cmp
jb
xchg
jmp
inc
ins
mov
cld
retf
mov
sub
mov
jo
xor
jg
mov
adc
arpl
push
mov
js
push
cmp
enter
mov
jecxz
xor
repz
add
out
in
and
repnz
(bad)
mov
jl
adc
mov
cmp
jnp
shl
div
mov
sub
cmps
fdisi(8087
out
ins
and
or
adc
xor
retf
sub
leave
sub
mov
push
add
pusha
mov
fs
sub
jno
push
mov
push
ins
test
mov
loopne
or
mov
ja
adc
sbb
mov
ja
jmp
xor
or
push
adc
shl
and
in
pop
icebp
and
cmp
lds
jnp
arpl
iret
push
or
pushf
sub
fisttp
mov
dec
xor
add
loop
dec
imul
pop
fnsave
ins
xchg
mov
rcr
cdq
dec
and
mov
test
fimul
jge
cli
imul
fs
sbb
add
sbb
inc
sub
mov
in
movs
repz
das
mov
sbb
icebp
pop
sbb
lea
adc
lods
adc
adc
std
fisub
call
lea
rcr
sbb
add
sub
fdiv
jmp
mov
loop
push
in
lahf
inc
mov
jne
push
mov
mov
xor
and
call
loopne
mov
aam
jecxz
push
or
inc
rcr
das
stos
inc
push
push
ins
push
jnp
or
xor
jmp
fcmovne
mov
ret
fld
sub
mov
mov
ins
sti
fistp
sub
fmul
rcr
ds
popf
loopne
cmps
and
lock
add
push
int3
lock
rcl
xchg
mov
popa
inc
das
dec
imul
jmp
jno
dec
and
inc
fcomp
cli
(bad)
(bad)
cs
mov
mov
sub
rcl
loopne
push
add
mov
xchg
loope
(bad)
ficomp
inc
add
sbb
or
adc
retf
xor
sbb
cdq
xchg
mov
fsub
dec
xor
dec
pop
(bad)
jecxz
sqrtps
xor
rcr
push
lock
mov
cmp
and
xchg
daa
(bad)
jmp
jne
xchg
and
and
sbb
gs
ins
xor
mov
mov
dec
mov
jmp
cmp
dec
fsubr
push
mov
shl
cmp
xchg
aas
sub
adc
or
das
pop
call
cmp
in
xor
cmp
gs
fldcw
cli
cmp
imul
lock
add
push
xchg
sbb
fwait
xchg
mov
movs
pop
mov
aas
add
ja
cmp
push
xchg
clc
cmp
inc
aam
inc
push
movs
sub
test
mov
xchg
jae
and
jmp
xchg
ins
cwde
ret
push
loopne
sbb
mov
stos
fidivr
ins
popa
test
pop
shl
push
js
lods
inc
adc
xchg
dec
push
icebp
cdq
inc
push
inc
repz
cmp
ret
sbb
add
add
xchg
repz
mov
cmp
fwait
sti
repz
jle
cmp
sub
movs
inc
inc
into
sbb
dec
daa
push
adc
cmp
repnz
jbe
fbld
ficom
lds
sbb
ins
cmp
ins
jmp
dec
in
add
out
inc
sbb
outs
jno
dec
das
inc
sub
jle
and
mov
sbb
mov
blsic
xchg
dec
mov
mov
outs
iret
in
out
dec
pop
repnz
push
outs
repz
add
cmps
xchg
mov
inc
icebp
or
movs
mov
je
fmul
les
adc
sbb
mov
mov
adc
loope
(bad)
mov
loopne
call
inc
mov
and
test
(bad)
nop
stos
xchg
clc
mov
xchg
push
lds
inc
lock
jo
jno
shl
mov
cmp
dec
aaa
in
pop
aaa
push
inc
ret
das
jg
enter
mov
arpl
and
push
jns
mov
stos
imul
push
es
xor
pop
aad
and
dec
cli
fimul
js
nop
sub
add
nop
(bad)
cdq
mov
mov
mov
add
loop
inc
or
mov
(bad)
(bad)
ret
gs
aam
daa
scas
repnz
jns
sbb
jecxz
sbb
sub
pop
add
cld
enter
xchg
and
mov
xchg
jecxz
or
dec
push
jae
push
xchg
inc
sbb
sub
sbb
jb
or
cmp
cld
dec
cmps
and
sub
aas
sub
and
wbinvd
scas
xchg
es
inc
std
xlat
mov
std
fisub
imul
into
and
test
mov
adc
xor
leave
add
clc
jl
cli
mov
dec
movs
xchg
sub
mov
push
mov
clc
mov
mov
test
or
inc
push
ss
jno
mov
enter
fist
push
or
hlt
sbb
or
push
mul
fisttp
add
pushf
outs
rcr
add
and
aad
movs
mov
push
adc
ins
add
push
(bad)
hlt
xchg
jb
mov
and
inc
and
mov
mov
cld
push
mov
aaa
daa
aaa
sbb
mov
aad
pop
movs
mov
scas
inc
lods
les
sti
mov
(bad)
lock
fs
sub
mov
inc
cmp
arpl
mov
xchg
clc
mov
cld
ret
adc
sub
push
fnop
jns
lahf
sbb
xchg
sbb
stc
popf
ds
sti
sbb
inc
sub
je
xor
pop
mov
jl
in
aaa
repz
sub
pop
or
mov
popa
aam
xchg
mov
xor
push
jmp
xchg
mov
pop
cmp
arpl
xchg
xor
mov
neg
xchg
out
mov
ss
sub
and
iret
retf
add
out
push
jnp
jnp
sub
jns
test
push
cmp
push
or
gs
push
into
sbb
inc
ret
cmc
jne
movs
sub
cmps
int
or
xor
xchg
cmps
mov
add
sub
xor
push
ss
(bad)
lock
dec
(bad)
cmp
mov
push
pop
mov
cmp
and
clc
ds
jb
aaa
data16
push
inc
test
ret
xchg
push
inc
jl
fimul
jnp
sbb
adc
in
das
nop
scas
add
test
ins
cld
retf
pop
mov
sbb
xchg
xor
lods
cmp
cmps
loopne
outs
fisttp
push
inc
fwait
jnp
push
loope
inc
lods
xor
loopne
adc
add
jp
xor
dec
stc
fwait
xor
mov
or
inc
or
cdq
cmp
pusha
ror
dec
fld
sub
xor
movs
pop
test
jae
mov
sbb
or
sbb
not
inc
in
repnz
or
movs
shl
cmp
ror
scas
dec
jbe
mov
dec
mov
adc
out
sub
mov
icebp
sbb
dec
mov
inc
jg
mov
imul
ins
les
push
lahf
hlt
jo
fnstcw
dec
xchg
ror
xchg
mov
inc
inc
jp
adc
dec
cwde
ja
jecxz
cmp
dec
iret
jns
adc
out
xchg
rep
shr
inc
inc
add
fld
cwde
rcr
fstp
test
jge
test
mov
cmp
jo
mov
xlat
cmps
sbb
addr16
shr
fwait
xlat
or
cmps
in
xchg
mov
adc
or
xor
ret
mov
pop
rol
hlt
push
mov
push
sbb
adc
inc
cdq
mov
sbb
(bad)
push
loop
sub
(bad)
mov
(bad)
jmp
in
lahf
arpl
int
out
popa
fcom
popf
jbe
mov
and
inc
js
and
nop
(bad)
ss
jl
out
xchg
pop
fs
repnz
ret
jl
jnp
sbb
jb
out
sbb
hlt
(bad)
push
out
adc
cmps
mov
jb
dec
ret
scas
adc
aam
xchg
je
dec
mov
mov
jb
pop
pop
stos
ror
sub
mov
push
add
xchg
retf
shr
dec
test
fdivr
or
(bad)
mov
xchg
mov
sub
cmp
push
add
pop
push
sti
inc
test
aaa
fcomp
stos
pop
cdq
imul
div
sbb
jns
pop
arpl
mov
jmp
cmps
mov
xchg
ins
xor
lods
(bad)
push
mov
int3
retf
or
mov
cli
dec
pop
in
pop
(bad)
dec
test
inc
sbb
je
xchg
call
lds
repz
cwde
jbe
fst
enter
xor
daa
jmp
lahf
int3
scas
xchg
imul
std
retf
mov
ret
dec
sub
cld
ins
retf
xor
sbb
cld
(bad)
mov
fwait
int3
shr
js
shr
xchg
leave
dec
fld
(bad)
sub
gs
sub
mov
cmp
mov
mov
shl
xor
ror
(bad)
cmc
xor
sti
sub
into
adc
inc
push
rol
push
mov
xor
sub
xor
xor
inc
or
xor
adc
dec
add
je
(bad)
sbb
pop
fild
push
cmp
(bad)
ins
cmp
jns
push
adc
mov
push
dec
xor
jmp
xchg
jne
stc
loop
lahf
sbb
push
aad
into
cmps
and
fimul
retf
shr
test
(bad)
add
out
repz
imul
cmp
sahf
daa
push
out
fild
(bad)
mov
mov
push
icebp
ret
sti
xchg
test
add
push
add
cmc
pop
add
xchg
sub
jo
push
sbb
pminsw
jl
adc
gs
test
mov
xchg
add
test
xchg
(bad)
mov
sub
push
cli
cmc
mov
movs
sbb
daa
cld
jp
jl
imul
cmp
cmp
movs
mov
xor
shl
push
rcl
adc
fnstenv
outs
add
add
jp
mov
pop
out
jl
cmc
in
cmp
or
pop
or
inc
out
std
stc
jns
jmp
or
pop
dec
fs
add
bound
sbb
out
dec
hlt
jle
sub
ins
aad
cmp
xchg
(bad)
xor
jge
lods
lahf
add
(bad)
jb
out
movs
and
(bad)
cmp
push
daa
dec
pop
sti
push
mov
push
aaa
test
das
mov
mov
or
jmp
jge
inc
add
cmp
xchg
mov
push
xor
jg
cdq
ss
dec
movs
retf
dec
fsub
and
fbstp
inc
jb
popf
lock
mov
pop
sbb
fadd
inc
mov
retf
lea
enter
and
sub
neg
cmps
inc
aas
ds
push
js
xchg
xchg
fcomp
mov
mov
cmps
imul
adc
add
sub
out
mov
iret
cmp
mov
sbb
dec
lods
dec
xor
lea
mov
iret
add
daa
jns
sbb
lds
push
iret
das
(bad)
int
aas
push
rcl
std
les
rcr
mov
and
dec
push
inc
mov
fcmovnb
call
stos
pop
mov
push
or
cwde
xor
push
jmp
loopne
lahf
mov
idiv
xor
imul
add
xor
scas
dec
loop
mov
mov
jmp
aam
sub
mov
ror
sbb
mov
imul
leave
test
cmp
mov
and
int3
rcr
loope
or
push
sbb
aaa
dec
lahf
jmp
stc
or
mov
pop
xchg
jmp
or
js
mov
cs
sahf
es
loop
xor
(bad)
push
push
aad
outs
inc
leave
cli
pop
les
sbb
mov
fs
jo
aaa
inc
mov
repz
icebp
jmp
dec
movs
je
and
movs
daa
adc
(bad)
jmp
nop
std
inc
ss
pop
xor
xor
leave
inc
int3
cli
xchg
outs
ret
test
mov
pop
xchg
sbb
popf
adc
fstp
dec
test
repnz
lods
js
jmp
sub
ds
(bad)
or
cmp
fist
bound
sub
fcmovnu
out
and
cli
scas
add
mov
es
ds
add
or
adc
sbb
ss
push
lock
sbb
adc
pop
gs
dec
or
pop
jmp
jmp
push
ds
cdq
jmp
test
pop
inc
xor
in
fist
xchg
into
or
mov
jl
es
shl
out
push
cmp
jmp
inc
inc
pusha
sub
popf
retf
dec
clc
loop
test
(bad)
rol
jmp
psllw
xchg
push
in
(bad)
dec
test
fs
pop
jno
jbe
arpl
sbb
xchg
ret
inc
into
shr
aam
lahf
pop
jne
popf
adc
xchg
mov
adc
inc
xlat
pusha
outs
sbb
cs
frstor
cmp
jno
pop
fmul
mov
ja
ins
pushf
out
add
mov
and
xchg
repz
shl
call
ja
ins
sub
dec
lock
ficom
imul
xchg
(bad)
jbe
mov
hlt
sub
cmp
in
sbb
jb
dec
mov
sub
xor
and
dec
inc
inc
inc
div
xchg
les
call
test
cmp
scas
retf
mov
jmp
mov
dec
xchg
out
sbb
es
cwde
fwait
ss
movs
nop
push
push
jmp
movs
in
pusha
xlat
repnz
push
int
or
mov
or
aad
pop
ja
sbb
fld
cld
movs
ins
in
jne
mov
jecxz
mov
mov
lea
sbb
fisttp
pop
dec
cld
add
jne
aad
int
push
rcr
out
shl
xor
lea
fcom
pop
xor
or
sub
and
rcl
ss
jmp
lahf
sar
jg
sar
mov
jns
dec
pop
cs
cwde
fld
inc
push
mov
mov
cmp
lods
sub
push
sub
mov
fistp
push
add
in
int
aas
mov
fs
adc
mov
jmp
adc
out
push
mov
stc
mov
xchg
and
jne
test
jns
ret
jg
push
ret
dec
sub
adc
dec
mov
add
xchg
jmp
ret
pusha
stc
dec
stc
sub
add
sbb
jg
pop
mov
rcr
repnz
daa
int3
clc
jno
mov
lea
lock
push
sub
rcr
call
pop
sar
cmp
push
and
fmul
xchg
add
pop
push
mov
pop
les
xor
jl
jns
add
xchg
adc
add
ja
movs
xor
mov
and
jo
cmps
mov
and
pop
jo
iret
sti
retf
stc
ins
or
adc
jl
and
xor
dec
or
push
mov
inc
and
mov
imul
jae
mov
adc
pop
dec
div
mov
icebp
loope
sahf
pop
(bad)
scas
mov
pop
pop
sbb
dec
push
sar
mov
lods
add
cmc
or
sbb
jo
retf
add
adc
das
jbe
leave
mov
(bad)
lock
and
repnz
add
ds
mov
push
or
or
push
lds
idiv
or
imul
inc
fdiv
lock
inc
rol
dec
cmp
jmp
lods
out
xchg
rcl
jo
pop
fdiv
pop
sub
mov
bnd
shl
sub
test
mov
add
add
inc
push
or
mul
sub
sub
outs
js
sbb
jae
push
or
neg
(bad)
mov
popf
jae
mov
call
stos
mov
pcmpgtd
mov
push
int3
inc
in
dec
cmc
cdq
jmp
nop
cmp
inc
bound
sub
mov
retf
or
adc
jmp
or
sti
xchg
into
rcr
mov
pop
outs
cld
sbb
push
lods
inc
mov
and
enter
int
pop
(bad)
jae
fwait
push
push
out
and
fcomp
jge
push
xor
lods
jecxz
sbb
mov
dec
test
movs
pop
mov
dec
imul
aam
dec
mov
aad
rcl
ins
sbb
icebp
pop
xchg
adc
sbb
sub
fistp
add
or
mov
das
adc
arpl
push
test
dec
push
fwait
sub
add
add
mov
psrad
sbb
rcl
lods
ds
fucom
scas
mov
dec
cmp
and
mov
es
bound
and
ins
xchg
sbb
add
addr16
cmp
gs
mov
rcr
push
adc
and
inc
ds
jp
cmp
cmp
or
mov
iret
sub
imul
push
push
and
(bad)
out
shl
cmp
ins
movs
mov
pop
cdq
es
popa
push
shl
fld
sahf
jbe
dec
iret
mov
inc
cmp
hlt
push
pop
cmps
mov
dec
xchg
push
jmp
fsub
fdivrp
test
aam
xchg
sub
add
mov
jecxz
adc
mov
xchg
in
inc
jae
aam
sub
pushf
xchg
iret
dec
mov
(bad)
jns
cwde
mov
into
dec
test
and
loopne
(bad)
psubb
xlat
lahf
add
lahf
cmp
xchg
xlat
mov
stos
pusha
lock
nop
cmp
sub
inc
sub
mov
push
mov
out
and
add
mov
in
sar
lea
mov
mov
jge
cwde
arpl
rol
sahf
mov
js
and
xor
aaa
cmps
mov
aaa
stc
leave
mov
mov
gs
(bad)
call
pop
xor
push
icebp
movs
push
mov
ror
add
rcr
xchg
dec
loope
or
mov
aad
jbe
fwait
in
pop
aam
in
or
sbb
sbb
and
shr
scas
mov
fist
pop
and
leave
imul
mov
in
xor
sub
ins
pushf
retf
outs
inc
aas
(bad)
sub
xor
adc
scas
or
xchg
adc
xor
into
pop
sbb
cmp
add
das
cmc
jmp
adc
mov
and
in
jmp
sbb
adc
dec
inc
(bad)
cmc
and
ins
imul
jmp
push
cmc
(bad)
hlt
sub
shl
jp
or
lods
mov
outs
aaa
sub
xor
cmp
jo
ret
cmps
inc
popa
jmp
cld
loope
ffreep
jb
sub
cmp
mov
sbb
cs
xor
je
cs
outs
les
sub
mov
inc
repz
cmp
cld
add
add
xchg
jle
push
mov
test
sti
xchg
cmp
gs
xor
add
ret
and
mov
aam
mov
and
jbe
pop
inc
jl
cmp
cwde
inc
test
rol
mov
add
test
lods
jl
repz
in
or
stc
cmps
sbb
(bad)
cli
fadd
cmc
mov
cli
retf
sub
addr16
enter
pop
dec
hlt
xlat
push
sbb
outs
stos
pop
dec
adc
(bad)
cmp
test
ins
loope
aas
mov
adc
xor
mov
mov
outs
sub
repz
sahf
out
add
addr16
xor
pop
mov
std
xchg
dec
inc
push
and
xor
jl
into
stos
dec
fidivr
into
push
loop
out
xchg
push
push
and
rcl
dec
fsqrt
sub
imul
jecxz
pop
pushf
cli
inc
xor
cdq
mov
aaa
cmps
pop
jecxz
push
sbb
loopne
sub
fldl2e
inc
das
dec
retf
cmp
icebp
mov
outs
xor
repnz
js
sbb
hlt
cdq
imul
add
and
movs
ret
ror
add
adc
aad
jg
push
add
mov
leave
jp
cmp
fst
sub
nop
ja
adc
out
dec
inc
popa
(bad)
ds
nop
jecxz
sub
mov
jno
lock
popf
mov
push
stos
sar
and
cli
loop
xor
xor
test
arpl
fadd
dec
frstor
add
in
push
in
in
ret
push
xchg
adc
call
ins
mov
mov
dec
cli
pushf
inc
jecxz
and
movs
add
push
iret
inc
sti
add
add
jb
(bad)
and
or
xchg
or
fcom
xchg
ss
aas
dec
movs
push
inc
test
xchg
pop
or
aam
add
jle
xbegin
out
add
xlat
jae
and
rcl
cmc
outs
lock
pop
mov
test
rcl
push
test
mov
test
mov
loope
push
or
push
or
lods
xchg
jns
loope
scas
and
outs
dec
sbb
cmp
pop
ins
popa
dec
cs
push
mov
mov
data16
xor
jmp
jl
sbb
add
adc
mov
add
ret
repz
mov
retf
shl
pop
(bad)
fisubr
xlat
jbe
sub
inc
ins
xchg
int3
dec
inc
sbb
fisubr
loop
push
sub
xor
cwde
repnz
int
add
dec
sub
xor
jg
sar
out
neg
mov
fs
add
in
ss
push
mov
outs
fbld
and
and
push
push
push
cmp
dec
pusha
inc
(bad)
mov
mov
jae
jle
add
jne
xchg
lods
shl
mov
hlt
ret
add
pusha
xchg
test
xchg
adc
in
sub
dec
pop
stos
lock
or
and
retf
out
xchg
mov
add
jmp
mov
jnp
std
add
push
pop
ja
pop
das
or
imul
lods
mov
inc
sbb
loop
and
test
jmp
shr
xchg
dec
call
mov
stos
ds
cmovge
lods
lds
jbe
clc
call
push
jg
sub
retf
push
xchg
retf
adc
not
pop
int
loop
mov
sub
shl
push
or
inc
jo
daa
mov
ja
hlt
mov
cmp
fst
stos
jl
mov
nop
mov
aad
mov
adc
into
ja
fisub
adc
add
xchg
jcxz
cmp
inc
mov
xchg
xor
xchg
icebp
stos
test
cmc
in
inc
mov
shr
add
je
(bad)
dec
stos
imul
and
aam
jns
push
lods
mov
fcmovnbe
out
inc
xchg
imul
cmp
mov
xchg
xchg
mov
jl
loope
loopne
and
dec
mov
ror
rcr
inc
imul
call
retf
js
mov
out
and
mov
out
lock
retf
push
inc
bound
out
and
adc
mov
mov
aad
cdq
cdq
addr16
or
or
jbe
fst
jbe
sub
shl
mov
inc
out
dec
repz
scas
pop
add
lds
test
inc
or
push
pop
cmp
call
push
mov
dec
jl
scas
sub
inc
jmp
or
clc
lds
xor
jle
cmp
lock
adc
cmps
(bad)
js
mov
scas
out
mov
aam
(bad)
movs
jns
cmp
xchg
loopne
add
push
lods
cmc
and
adc
xchg
jne
dec
mov
les
aaa
xor
scas
dec
cmp
inc
mov
ja
iret
retf
mov
mov
inc
dec
mov
stos
fsubr
xor
jl
stc
jnp
outs
loop
outs
sahf
xor
sub
inc
hlt
clc
lock
repnz
std
cwde
cmp
ja
sbb
mov
lods
mov
es
in
gs
jmp
bound
into
movs
mov
bound
push
cmp
into
jo
daa
mov
mov
pop
mov
jne
rol
aam
pop
add
fisttp
jo
scas
add
in
out
stos
and
mov
and
ins
xchg
idiv
adc
mov
fbld
mov
mov
xchg
loope
dec
stos
cmp
data16
inc
jp
mov
aaa
mov
dec
test
shl
dec
fwait
or
jno
dec
jecxz
or
les
pop
xchg
mov
fdivp
mov
mov
push
mov
mov
pop
pop
push
fld
dec
js
cdq
xchg
ins
jp
bswap
sbb
and
mov
in
test
fwait
mov
xchg
in
call
rcl
aaa
sub
in
sbb
jg
xchg
mov
push
shl
int3
mov
inc
jo
out
cld
jg
cwde
imul
xor
cmp
dec
ss
add
push
and
hlt
or
lds
jnp
jnp
bound
fidiv
jno
data16
mov
mov
pop
enter
jne
stos
mov
loope
push
int
cmp
inc
test
adc
adc
shld
popa
aad
add
adc
ret
inc
addr16
(bad)
fld
out
mov
outs
pop
xor
pop
or
xchg
cmp
cmc
mov
sbb
push
repnz
adc
push
xchg
jl
pushf
inc
mov
adc
push
mov
adc
sub
mov
out
ins
jge
loope
push
xor
sub
js
push
lds
xchg
add
rol
aam
ffreep
sub
mov
cmp
mov
xor
fmul
je
xor
retf
rcl
cmc
push
pop
ins
into
dec
sub
xchg
add
adc
inc
xor
mov
xor
and
enter
pop
stos
cld
mov
xchg
fwait
outs
dec
xchg
dec
(bad)
jmp
sub
xchg
daa
arpl
push
(bad)
push
bound
lock
and
jmp
retf
test
xor
mov
and
mov
push
inc
jne
cdq
cmp
pop
(bad)
mov
add
cmp
and
das
mov
cmp
ret
fldcw
mov
call
dec
add
push
pop
xor
pushf
stos
ins
sub
add
das
popf
jmp
push
and
xchg
xchg
neg
test
lock
(bad)
movs
mov
or
jg
retf
ret
mov
bswap
jo
ins
mov
push
out
clc
dec
jle
add
cs
and
push
mov
jp
fsub
push
inc
jmp
test
xor
adc
rcr
push
nop
sub
or
jmp
sub
pop
cld
mov
cmps
fstp
jg
cmc
loopne
push
cwde
jl
xor
int
fwait
pushf
or
jle
pop
push
jmp
cli
out
mov
and
sub
lods
ss
les
pop
inc
imul
add
push
loop
pop
das
lock
stos
jb
cwde
outs
and
mov
mov
aad
aas
hlt
push
push
push
movs
outs
sahf
pushf
sbb
sbb
imul
fwait
movs
loop
inc
and
jne
ret
mov
push
push
repz
repz
stos
sub
stos
mov
mov
inc
push
fs
out
fld
in
cmp
lods
cmp
lahf
xor
jno
adc
push
xor
cs
in
daa
jmp
imul
sub
ss
stc
pop
hlt
sbb
out
ins
js
inc
jmp
add
dec
sub
adc
lds
sar
js
not
neg
inc
mov
cmp
mov
shl
jmp
fcmovne
imul
dec
or
pop
xchg
mov
xchg
loope
adc
popa
mov
or
push
mov
dec
pop
cld
pop
xchg
xchg
add
es
arpl
ss
mov
sbb
adc
mov
movs
jbe
xlat
sti
movs
nop
psubq
loope
mov
dec
and
sub
int
cmp
arpl
shl
lds
sahf
mov
mov
cmp
rcl
add
cmp
sbb
ja
sbb
fiadd
fstp
adc
mov
inc
fdivr
pop
lods
xchg
or
jmp
aad
and
dec
loope
lods
ins
xor
jmp
and
rcl
sti
lock
xor
ja
daa
cdq
pop
xchg
mov
pop
stc
clc
pop
dec
xor
cdq
push
iret
mov
fdivr
and
push
ret
imul
push
vpunpckhwd
xchg
inc
aam
pop
pusha
or
ds
cs
leave
(bad)
jbe
out
cmp
xor
add
sub
jg
jae
add
mov
loope
ja
fisub
in
xor
cmp
xchg
xlat
mov
pop
sbb
das
mov
xchg
retf
stos
ret
retf
jb
xchg
stos
xchg
xchg
jmp
lds
(bad)
(bad)
sar
adc
hlt
xor
das
cmp
sbb
xchg
cli
push
outs
fwait
int
sub
mov
pushf
add
sub
push
add
(bad)
(bad)
xchg
lods
push
jbe
inc
or
mov
mov
fcmovb
(bad)
ins
and
and
ja
pop
push
les
inc
mov
fnstcw
mov
mov
dec
not
in
or
repnz
and
pusha
int3
jno
setne
dec
in
cwde
nop
fwait
les
sbb
adc
fiadd
int3
ror
out
imul
add
sar
(bad)
and
mov
frstor
fdivr
jmp
pop
and
neg
jns
ficom
mov
out
xchg
scas
adc
pop
or
rol
mov
fcomip
jle
and
cmp
xchg
ds
mov
(bad)
in
int
loopne
inc
loope
sahf
pop
push
arpl
retf
xchg
xchg
repnz
mov
xchg
retf
push
scas
test
adc
mov
movs
add
cmp
push
pop
fidiv
jmp
inc
jbe
or
pop
loope
fidiv
shl
xor
in
mov
mov
or
cli
movs
and
adc
inc
enter
jbe
ds
cmp
add
lahf
in
pushf
and
mov
movs
arpl
fnstcw
pop
ret
(bad)
fnsave
push
push
cmc
stos
jno
pop
retf
and
(bad)
mov
icebp
add
inc
(bad)
imul
cmp
ss
and
add
cwde
lahf
repnz
mov
jae
inc
xchg
mov
push
add
ss
fdivr
arpl
out
fnsave
enter
jecxz
sti
inc
(bad)
jo
xchg
leavew
pop
and
popf
call
ss
add
push
test
fimul
adc
inc
push
fld
xor
inc
cmp
mov
test
lock
cmp
inc
pop
repz
inc
int3
int3
jmp
mov
ret
data16
movs
repnz
sahf
popa
push
bound
retf
sub
mov
mov
dec
not
call
ret
in
aaa
aaa
or
inc
push
add
jmp
ja
adc
popf
cmc
popf
outs
push
inc
ret
add
xor
popa
cmp
sbb
or
and
cmp
lock
test
mov
ja
sub
jae
sbb
jo
and
cmp
pusha
xchg
out
and
sbb
jbe
add
lock
pop
inc
inc
add
push
inc
pop
outs
push
sbb
cmps
shl
outs
sub
mov
or
dec
mov
leave
test
xor
cmp
fdiv
cld
popf
arpl
add
and
pushf
sbb
xchg
mov
(bad)
mov
sar
xor
sub
xor
mov
mov
inc
cmp
icebp
lods
leave
jge
pop
inc
and
mov
icebp
mov
add
xor
mov
or
daa
push
hlt
xchg
jle
xor
xchg
mov
or
xchg
dec
sbb
lahf
loope
inc
xor
xchg
call
repz
jmp
outs
and
fld
sbb
(bad)
call
pop
pop
clc
or
or
mov
dec
loop
jne
clc
pop
sbb
xchg
rol
test
add
jb
or
aas
sbb
loope
neg
mov
pop
repz
call
in
add
call
pusha
mov
or
mov
jg
fmul
lods
pop
push
add
xor
xchg
xchg
or
mov
es
push
mov
jmp
aad
fstp
add
(bad)
mov
stos
cmp
imul
ror
jae
mov
mov
aas
mov
push
lods
shr
mov
mov
dec
jb
lds
sub
cdq
push
mov
cmp
call
cli
rol
mov
cmp
cs
sti
dec
lock
(bad)
aas
push
imul
cmc
mov
daa
daa
jecxz
add
rol
lods
clc
adc
cmp
sub
sahf
out
pop
cld
jmp
ret
pop
jb
push
xchg
or
test
movs
pop
pop
cmp
push
xor
cmps
and
popa
mov
xor
aas
add
sbb
movs
or
ja
mov
sbb
sbb
ret
aaa
or
or
jge
sbb
lds
xchg
sub
scas
push
xor
in
cmps
(bad)
gs
fs
adc
mov
int
dec
je
mov
sub
pop
in
mov
out
pusha
pop
pusha
sub
sbb
mov
in
sbb
dec
pop
mov
push
popa
or
lahf
les
mov
test
add
data16
mov
jno
adc
mov
aaa
sbb
jmp
push
js
fisub
cmps
and
pop
outs
(bad)
(bad)
idiv
hlt
loop
mov
xchg
das
jae
popa
jmp
inc
dec
dec
arpl
and
xor
das
mov
jns
mov
int
frstor
shl
data16
xchg
dec
shl
jmp
gs
sbb
sar
inc
xchg
mov
push
mov
outs
int
jg
pop
shl
gs
jl
push
rcl
sub
pop
cli
imul
cmp
sbb
jp
pop
sbb
adc
add
and
mov
stc
jecxz
and
sbb
mov
pop
fcmovnbe
jmp
adc
sahf
scas
xchg
jecxz
jne
push
and
cmp
jge
cmp
mov
or
(bad)
and
les
sbb
ret
adc
dec
jge
mov
push
push
xchg
xchg
jmp
in
cmps
jp
mov
jae
and
clc
test
cmp
mov
dec
cmp
and
add
cdq
loopne
ins
mov
lea
jp
addr16
shr
ss
cmp
scas
pop
(bad)
mov
xchg
clc
inc
sub
xor
addr16
push
xchg
adc
mov
xor
inc
aas
mov
mov
arpl
sub
xor
and
stos
(bad)
fxch
retf
pushf
lds
neg
jbe
jo
push
imul
or
mov
dec
mov
int
xchg
pusha
sub
xchg
mov
pop
out
cmp
cmp
mov
mov
cwde
xor
lods
sbb
and
pop
sbb
mov
mov
xor
call
and
scas
dec
addr16
xor
add
fmul
mov
cmp
iret
les
push
add
outs
fistp
push
mov
sbb
add
dec
xchg
xchg
sbb
and
out
cmps
push
mov
sub
push
shl
xchg
stc
scas
call
gs
repnz
mov
and
scas
pop
pop
adc
adc
and
pushf
js
mul
add
imul
mov
jne
jge
js
test
mov
imul
fwait
mov
mov
ja
adc
jne
xchg
fxch
ret
lahf
test
mov
or
xchg
inc
rcl
mov
daa
pop
mov
mov
adc
sub
push
dec
inc
dec
pushf
out
loope
pusha
jns
loop
add
jbe
xor
cdq
lods
jle
fisttp
jns
jge
sbb
xor
popa
nop
cmp
imul
in
(bad)
out
xchg
ins
imul
mov
shl
stos
mov
pop
and
sub
js
lea
add
cli
mov
mov
push
inc
sbb
or
call
and
sub
enter
sbb
cmp
sub
add
or
mov
enter
popf
add
sbb
dec
jle
sbb
mov
mov
inc
popf
jmp
pop
push
push
cmp
push
mov
nop
aad
fld
dec
xchg
mov
push
jmp
and
arpl
sub
dec
pusha
jmp
mov
(bad)
sar
int
pop
push
cmps
cwde
(bad)
(bad)
jbe
adc
jo
(bad)
cmp
sahf
adc
or
jp
xchg
mov
test
jecxz
pop
or
stc
fwait
xchg
pusha
push
mov
sbb
add
mov
in
jl
jo
push
dec
bound
xchg
(bad)
pop
arpl
and
pushf
mov
adc
or
push
aaa
fst
and
inc
mov
add
mul
jne
mov
pop
mov
das
mov
stos
popa
(bad)
cmc
int
jo
das
dec
lds
add
js
test
jg
mov
add
aad
and
jmp
xchg
sahf
enter
push
or
xchg
mov
or
hlt
(bad)
pop
call
movs
add
cmc
cwde
mov
cwde
inc
mov
sbb
mov
scas
loope
or
pop
movs
or
int3
imul
push
sbb
or
mov
daa
mov
daa
jbe
cmc
test
and
xor
div
pop
pop
gs
daa
sbb
repz
push
in
inc
cmp
or
pop
cwde
mov
lea
hlt
push
fisubr
nop
lods
dec
cld
pop
mov
pop
push
add
js
and
and
and
popa
test
loope
test
cld
push
ins
inc
enter
loopne
push
mov
xchg
mov
xor
jae
fwait
push
push
mov
(bad)
ss
jo
les
mov
sbb
out
xor
cmp
inc
push
out
mov
inc
hlt
in
(bad)
or
pop
in
jne
mov
push
mov
mov
sbb
mov
mov
inc
outs
xor
cmp
push
icebp
add
retf
jmp
into
nop
int
test
jnp
mov
lds
adc
push
daa
je
push
mov
fcom
mov
sti
pop
or
popf
jmp
pop
dec
arpl
push
inc
call
mov
jno
(bad)
imul
add
inc
cmp
add
aad
out
sbb
in
mov
and
sbb
and
mov
sub
cdq
mov
xor
mov
jns
jae
mov
mov
sub
ror
inc
xchg
pop
xor
in
xchg
inc
fisubr
cli
scas
adc
dec
mov
jge
mov
inc
lods
push
add
jecxz
fwait
push
mov
retf
jmp
cmp
rcl
in
imul
mov
xchg
mov
aas
iret
jecxz
add
scas
shl
mov
push
jmp
rol
repnz
pusha
movs
out
cmp
pop
shl
(bad)
xor
hlt
adc
sub
push
xchg
cld
jne
and
pop
push
mov
enter
mov
xor
and
adc
sbb
push
and
xchg
scas
mov
es
xor
stos
cmp
ins
inc
mov
mov
mov
or
ins
fiadd
mov
cli
pop
ins
xchg
pop
add
wrmsr
mov
(bad)
mov
ror
cdq
test
jbe
shl
jne
mov
mov
inc
shl
test
(bad)
int3
leave
(bad)
lock
pop
pop
retf
sub
cdq
bound
inc
cwde
cmc
ins
das
mov
adc
adc
js
call
and
popf
dec
jecxz
fwait
cmp
in
cli
mov
jp
fcom
not
pcmpgtw
repz
mov
(bad)
mov
dec
sti
cdq
inc
sub
sbb
stc
fiadd
inc
push
sub
test
loopne
fmulp
arpl
inc
sbb
icebp
push
xchg
xchg
add
call
dec
sbb
shr
mov
mov
sbb
cmp
mov
xchg
cmp
pop
les
dec
pop
call
mov
scas
mov
test
dec
xor
jns
lods
and
nop
push
scas
iret
xchg
and
cmp
aad
mov
sahf
mov
ja
xchg
push
sbb
sub
nop
test
adc
shr
ret
ret
xor
dec
inc
push
inc
mov
or
dec
sbb
(bad)
cdq
outs
lods
pop
into
or
sahf
mov
jg
dec
push
xchg
mov
or
bound
add
mov
mov
bound
xchg
jp
xor
inc
sub
popa
into
add
repnz
and
xchg
jmp
xchg
aad
ror
jge
dec
xlat
sbb
push
cmc
into
push
adc
cs
xor
addr16
lods
sahf
lods
push
int
icebp
sub
mov
xor
or
mov
jno
and
call
mov
in
and
pop
jb
out
ds
shl
aam
arpl
xor
mov
xchg
call
mov
inc
mov
mov
mov
rcl
xchg
mov
mov
xor
outs
and
or
pop
test
xor
push
in
scas
icebp
movs
pop
stos
inc
fwait
push
or
es
fadd
mov
sbb
push
shl
jnp
ds
xchg
addr16
xchg
jae
ds
jmp
xchg
data16
scas
lods
dec
xchg
ror
push
out
push
je
sbb
jmp
pop
out
push
icebp
stc
retf
adc
leave
fisttp
cmps
jmp
push
and
adc
push
inc
xchg
mov
push
pop
dec
addr16
xchg
add
xchg
aaa
and
inc
aad
ret
mov
imul
or
xchg
inc
mov
cmp
shl
test
into
jmp
xchg
mov
mov
push
into
(bad)
add
mov
add
sbb
push
mov
sub
mov
cmps
jns
adc
dec
les
rcr
dec
test
rcl
lods
daa
or
stos
cmp
pusha
(bad)
scas
push
add
push
(bad)
std
ins
dec
pop
retf
lahf
push
in
div
shl
mov
or
dec
lds
outs
into
jbe
ss
fmul
loope
or
scas
push
sub
sub
and
sbb
int3
push
xchg
addr16
jo
inc
pop
sbb
faddp
icebp
jne
js
add
lock
pop
jp
push
xchg
adc
mov
fs
sti
pushf
std
pop
sbb
rcr
pop
repnz
pop
pusha
aaa
or
jo
cmp
xchg
push
or
and
cmps
frstor
xchg
pop
cmp
sbb
(bad)
adc
test
leave
dec
leave
inc
ret
cmp
pop
iret
scas
add
outs
mov
ins
das
mov
jns
pop
xor
push
adc
jle
loop
push
xchg
test
(bad)
jmp
rol
sti
(bad)
jbe
lds
test
pushf
jmp
sub
adc
adc
nop
and
sahf
fild
cmp
rol
adc
lea
bt
pop
outs
ds
xor
jl
pop
add
jb
call
das
dec
push
sub
pslld
add
adc
add
adc
inc
pop
pushfw
pop
push
mov
in
jno
mov
mov
mov
fs
fsub
loope
sub
scas
pop
mov
ins
push
out
mov
test
xchg
inc
loopne
push
sbb
outs
ret
xor
inc
mov
mov
cmp
adc
push
retf
sbb
jle
dec
xchg
jnp
mov
xchg
xor
jno
sbb
sub
xchg
icebp
dec
bound
lea
int3
movs
pop
aam
jb
lods
xchg
popa
add
out
inc
adc
in
stc
test
sub
pop
stos
out
adc
fimul
outs
pop
sub
inc
retf
fmul
mov
mov
jae
js
push
pop
pop
xchg
out
call
mov
mov
adc
test
fwait
push
imul
(bad)
cmps
in
ins
loope
psrld
bound
push
popa
sbb
sar
mov
add
ret
mov
fild
loop
(bad)
adc
or
stos
mov
ins
in
pop
fimul
scas
cmps
or
and
push
mov
out
lock
int
(bad)
sbb
sar
and
jae
push
call
hlt
jbe
fcmove
sbb
sbb
cmps
xchg
fsub
into
sar
xlat
cli
adc
jmp
xchg
ja
inc
add
ret
fist
cmps
retf
aas
dec
pmaddwd
pop
xor
mov
mov
rol
mov
and
jmp
mov
call
mov
mov
jns
clc
sti
cmp
jge
mov
outs
stos
arpl
sbb
imul
sbb
jne
add
xchg
adc
dec
sbb
movs
test
mov
push
xchg
shl
jge
ins
sahf
lods
inc
popf
es
pop
out
repz
popa
lods
cmp
rcr
repnz
mov
stos
pop
fstp
ss
daa
sub
jge
outs
das
int3
mov
xchg
lods
mov
shl
add
test
pop
dec
addr16
sbb
cmp
imul
push
adc
mov
xchg
inc
aas
ja
ss
and
inc
dec
jecxz
aam
add
cld
jl
outs
pop
jae
mov
xor
add
in
lahf
test
(bad)
cmp
inc
xchg
ret
jo
retf
sti
sbb
pop
(bad)
hlt
or
sbb
push
rcr
jge
sub
jmp
dec
mov
add
fnsave
stos
and
xlat
jb
adc
pop
push
(bad)
xor
xor
in
into
into
in
hlt
sub
test
mov
cmp
call
lds
mov
scas
fs
cmp
shr
push
fstp
jmp
xor
mov
or
rcr
pop
ss
jge
xchg
xchg
jge
sahf
(bad)
test
adc
cmp
sbb
mov
movs
xchg
mov
arpl
test
mov
repz
mov
mov
(bad)
cld
ror
mov
pop
dec
sbb
or
inc
jg
mov
imul
jbe
cmp
sar
xlat
xor
or
dec
movs
mov
fwait
outs
push
cmp
push
or
jae
mov
lea
and
sbb
pop
leave
jne
mov
pop
xchg
test
inc
cmps
daa
mov
xchg
test
jle
mov
call
ror
mov
mov
pop
hlt
mov
pop
ss
adc
xchg
xor
sub
cmp
(bad)
cmp
setle
sbb
inc
mov
out
push
push
cdq
cmp
(bad)
mov
adc
cs
popf
xlat
ror
das
(bad)
mov
and
ret
cmps
shr
cwde
push
(bad)
or
arpl
mov
call
add
xor
icebp
in
(bad)
push
inc
and
ret
mov
jae
mov
not
push
imul
mov
ins
inc
imul
cld
daa
cmp
mov
mov
nop
stc
sub
dec
pop
mov
daa
sahf
stc
hlt
mov
jb
fwait
sub
out
push
sub
jbe
(bad)
cmp
pusha
fcmovne
push
out
(bad)
push
dec
jl
mov
mov
icebp
hlt
jbe
push
jecxz
pop
ds
mov
(bad)
hlt
or
loop
test
popa
sar
pop
jg
popa
shl
fdivp
mov
xor
enter
sbb
adc
jge
arpl
push
jne
jo
inc
sbb
int
xchg
test
cli
sar
fild
call
repz
loope
and
dec
jbe
push
adc
lds
dec
pop
test
(bad)
lods
xchg
mov
mov
inc
mov
sub
jmp
lock
addr16
mov
mov
or
mov
mov
push
add
stos
xchg
ja
rcr
jmp
ins
push
enter
xlat
retf
retf
mov
call
mov
sar
dec
dec
fwait
jg
out
cmp
pop
retf
xchg
sbb
(bad)
rcr
das
cmp
xchg
cmp
scas
shl
dec
and
mov
dec
jno
inc
sbb
cwde
mov
(bad)
out
pop
dec
or
mov
mov
cld
pop
out
in
sub
xchg
mov
jno
stos
cmp
outs
mov
xchg
cdq
aad
mov
mov
mov
xchg
xchg
xchg
adc
inc
mov
jg
cmps
and
loopne
fs
(bad)
dec
aad
fistp
xlat
inc
sbb
mov
test
nop
and
jnp
ins
mov
dec
out
mov
or
ror
jns
cs
xlat
loope
cwde
aam
sub
(bad)
mov
dec
xchg
add
les
pusha
ds
dec
imul
mov
mov
ror
mov
pusha
jno
(bad)
jmp
or
push
xchg
jle
dec
les
dec
cwde
icebp
add
pop
inc
mov
pop
dec
pop
(bad)
push
test
ins
mov
and
(bad)
das
sbb
pop
mov
retf
adc
xchg
in
stos
sbb
pop
fcmovnbe
cdq
mov
or
stos
cmp
push
ss
sub
(bad)
pop
mov
bound
icebp
dec
outs
loope
sbb
xchg
xlat
leave
(bad)
bound
das
jb
retf
jecxz
add
add
popa
jb
mov
stos
lock
mov
and
retf
sbb
retf
outs
retf
hlt
scas
xlat
sub
mov
jle
adc
sub
or
(bad)
xor
and
and
addr16
sbb
xor
or
adc
jae
sbb
cmp
inc
xor
mov
or
mov
inc
or
xor
sbb
in
into
push
dec
mov
(bad)
or
sahf
sbb
adc
cmp
fld
mov
dec
call
pop
jnp
lods
and
inc
std
stos
(bad)
fs
mov
or
jno
inc
sbb
jbe
fcmovnbe
inc
ret
push
les
nop
fwait
xor
cs
pop
rcl
icebp
and
cmc
pop
and
xchg
loopne
mov
dec
push
pop
dec
and
mov
sti
and
cmp
les
test
movs
push
xchg
in
int
iret
call
push
xchg
les
add
push
inc
sbb
mov
sub
xchg
aam
jp
outs
repz
push
and
es
push
std
shl
jbe
scas
adc
in
push
test
add
mov
in
xor
cmc
and
stos
fisub
or
iret
pusha
jnp
mov
sub
inc
movs
sub
cmp
pop
adc
or
pop
ror
(bad)
jge
jns
jg
fwait
pop
ss
mov
dec
inc
lahf
xor
fs
js
fstp
add
enter
sar
retf
push
out
fisttp
(bad)
into
shl
mov
mov
add
mov
(bad)
mov
mov
sub
mov
outs
mov
jmp
jge
push
sbb
xor
inc
add
sbb
mov
mov
mov
add
clc
cmc
pop
mov
jne
inc
repnz
or
inc
xlat
or
dec
(bad)
mov
ret
jecxz
or
scas
retf
push
push
xor
cmp
mov
push
jbe
fcom
clc
cdq
jle
pushf
fimul
into
sbb
test
(bad)
fimul
(bad)
jmp
into
(bad)
sahf
out
imul
js
mov
jo
(bad)
inc
fmul
rcr
loop
push
mov
arpl
sub
cmp
fmul
aad
mov
rcr
out
mov
or
jl
and
repz
mov
call
add
mov
jns
bound
cmp
xchg
inc
sbb
xchg
inc
call
cmp
aad
inc
test
movs
dec
pop
adc
mov
je
mov
cdq
inc
cmp
pop
mov
mov
jmp
in
ss
jmp
xchg
push
fist
pop
sti
aam
(bad)
(bad)
mov
mov
mov
cmp
retf
sub
ror
test
(bad)
int3
xchg
addr16
fmul
and
mov
rcl
push
loopne
mov
cmp
xchg
pop
fadd
(bad)
jp
loopne
mov
mov
enter
xor
add
je
add
fsubp
dec
aas
fcom
mov
ficomp
sub
fwait
and
push
mov
dec
dec
test
sbb
xor
arpl
inc
jns
fchs
pop
mov
imul
gs
jg
(bad)
(bad)
xchg
ins
and
lods
sub
mov
pop
jecxz
mov
jnp
dec
mov
or
mov
adc
fistp
jbe
jg
jno
mov
int3
cmps
ins
(bad)
mov
jae
sub
sahf
imul
sti
(bad)
jne
cli
push
cs
inc
mov
jmp
push
into
push
in
mov
test
ret
jne
or
inc
mov
jmp
loop
add
lods
lods
jle
add
cmps
cmp
mov
clc
mov
cmp
sub
(bad)
jmp
in
popf
inc
adc
mov
es
in
inc
push
ret
movs
mov
push
pop
enter
es
or
enter
jp
ror
or
call
outs
(bad)
cmp
scas
push
pop
loopne
inc
imul
push
in
leave
lods
push
mov
mov
mov
sub
loop
loope
aaa
inc
(bad)
fnstcw
js
icebp
xchg
lods
and
ret
in
mov
lds
fcomi
jae
arpl
or
adc
pop
mov
pusha
adc
add
call
arpl
je
(bad)
cs
daa
adc
jmp
sti
mov
jg
push
clc
imul
push
test
dec
xchg
add
int
(bad)
ror
retf
aaa
mov
fsub
mov
shl
xchg
adc
pushf
in
push
les
(bad)
jae
aaa
sbb
push
fs
iret
mov
sub
push
dec
mov
call
dec
sahf
push
inc
lods
mov
dec
ss
scas
pop
mov
imul
stos
in
fdivr
sahf
(bad)
ins
push
ror
mov
das
xchg
stos
jle
in
dec
pop
ret
std
loopne
dec
and
test
or
adc
add
mov
xor
imul
lods
(bad)
(bad)
push
and
jle
push
mov
not
mov
pop
cmps
not
loopne
out
inc
int3
outs
pop
push
test
dec
pusha
lods
sub
and
push
cmps
loope
xchg
fs
ret
push
in
or
pop
jno
cmp
movs
mov
xor
adc
sbb
adc
dec
add
outs
(bad)
stos
outs
dec
push
dec
jl
dec
outs
pcmpgtw
jno
mov
add
repz
sar
pop
ret
movs
ss
cmp
out
push
add
std
jns
inc
pop
cs
ja
mov
sbb
fstp
movs
test
inc
(bad)
push
test
xchg
push
les
int
aad
jbe
ror
add
adc
data16
mov
repnz
imul
inc
icebp
add
in
dec
mov
xor
xchg
xchg
and
dec
iret
dec
sbb
das
aam
jns
cmp
sti
or
cmp
xchg
mov
cmp
pushf
jge
pop
pop
sub
sbb
xchg
mov
fist
add
cmp
js
out
aam
inc
rol
stc
je
fmul
add
pop
sbb
lds
adc
gs
mov
pop
popa
loopne
push
dec
fs
les
ror
sbb
cmp
std
stc
fsubr
sub
mov
hlt
add
addr16
enter
xchg
cmc
push
inc
mov
pop
jb
pop
cmps
nop
inc
pop
popf
adc
pop
test
add
adc
and
jecxz
in
add
lods
mov
loope
jge
sub
mov
pusha
mov
cmps
inc
add
lods
cwde
jmp
and
into
dec
lds
adc
jne
aad
add
out
jg
ret
cdq
xlat
stos
mov
stos
mov
sbb
push
adc
adc
push
in
sub
jns
mov
pop
inc
sbb
aad
sub
push
rol
int3
mul
loop
out
inc
sbb
and
in
adc
hlt
jl
cld
jmp
add
mov
adc
aad
sti
sar
and
add
enter
xchg
mov
icebp
gs
in
sub
aas
dec
pusha
loope
push
popf
repz
dec
sub
fsubr
dec
adc
mov
add
jmp
cmp
mov
ds
fwait
xor
push
inc
loop
out
iret
pop
retf
sub
pop
mov
mov
scas
xchg
test
cmc
(bad)
cli
fisub
dec
mov
sub
adc
ins
je
xor
sti
cmp
push
jno
lock
fsub
in
fld
xor
icebp
sbb
(bad)
dec
int
mov
and
frstor
lock
leave
(bad)
loop
adc
imul
scas
inc
mov
out
dec
pushf
mov
(bad)
and
jae
aam
fadd
faddp
cs
xor
je
clc
inc
stc
test
arpl
mov
pop
pop
clc
adc
xor
int
lock
fcomip
and
jo
shl
lock
add
push
add
ja
stc
xchg
sub
int
add
jmp
cld
push
pop
jno
scas
out
movs
nop
dec
push
push
clc
pop
in
les
mov
les
mov
mov
int
enter
arpl
add
les
mov
fadd
and
pop
mov
sbb
in
dec
push
seta
and
sbb
or
aad
adc
jp
lock
mov
lock
jo
xor
mov
add
out
mov
jmp
rol
mov
pusha
call
push
int
(bad)
lods
push
cmps
cmc
sbb
pop
cld
test
dec
enter
xor
sbb
jns
jnp
es
mov
cld
stos
dec
clc
dec
xchg
and
xchg
jbe
int
adc
sbb
or
div
les
les
in
mov
mov
stc
rol
jp
lods
call
adc
mov
ins
or
fnstcw
fidiv
adc
div
xchg
xor
push
adc
xchg
arpl
mov
cmp
inc
sub
shr
int
enter
jl
in
gs
jae
cwde
xchg
scas
sbb
mov
add
xor
lea
retf
push
(bad)
sbb
sbb
jmp
outs
add
pop
xchg
std
inc
ret
jno
pusha
aas
(bad)
in
dec
dec
lahf
mov
leave
jns
fnstenv
xor
add
push
pop
in
xchg
cli
fdivp
mov
aam
loope
pop
and
lahf
inc
sub
lods
and
mov
cmps
std
mov
loope
lds
pop
retf
xor
ror
or
nop
inc
sbb
fst
push
rcl
mov
fisubr
js
clc
xor
add
push
xchg
inc
xor
(bad)
dec
xchg
loope
add
(bad)
into
addr16
sbb
les
cmp
out
popf
lahf
push
aad
in
jnp
and
mov
adc
hlt
fcom
cmp
fs
push
cld
lds
out
pop
xor
or
xchg
(bad)
lea
mov
hlt
cwde
push
inc
xchg
addr16
jl
lods
ss
add
jns
inc
mov
pop
sti
fsubrp
mov
sbb
sub
and
xor
add
fcom
lea
adc
mov
movs
ss
jne
push
fsubp
ror
test
xchg
cmp
dec
jmp
mov
(bad)
clc
jno
stc
xchg
repnz
pop
imul
mov
loope
mov
loope
jmp
in
mov
arpl
inc
call
push
loope
rcl
xor
imul
or
scas
outs
push
sbb
rcl
cmp
mov
cmps
in
ret
mov
mov
rcl
call
popa
adc
and
aad
add
push
mov
push
and
fldenv
xor
(bad)
movs
jge
dec
retf
cwde
inc
adc
push
jl
and
mov
jno
lahf
call
jmp
mov
loope
ret
jns
fistp
pushf
adc
movs
mov
or
gs
sbb
popf
stc
mov
dec
xchg
retf
xchg
jg
adc
xor
push
sbb
out
cmp
dec
and
xchg
dec
cmp
and
add
das
outs
inc
mov
xor
cmps
ds
ja
sub
cdq
out
cmp
mov
push
cmp
and
xchg
int
xor
out
in
and
ja
idiv
adc
mov
ret
stos
es
dec
mov
adc
dec
sbb
imul
mov
jle
sub
arpl
fcmovbe
xchg
cld
push
jbe
in
retf
mov
sub
dec
stc
ins
sub
xchg
aas
dec
arpl
sub
sub
lods
push
sbb
and
leave
cmp
dec
jl
pop
vorps
imul
sti
and
fcom
mov
mov
mov
in
cwde
jecxz
sbb
pop
or
fldcw
mov
out
cdq
sbb
rcl
add
les
push
push
push
cs
mov
imul
fsubr
mov
xchg
fld
and
xor
icebp
and
inc
sbb
les
mov
and
xchg
pop
fldcw
jle
mov
xchg
outs
or
adc
mov
inc
dec
xor
jbe
jl
jnp
js
(bad)
add
add
xchg
sbb
pop
lahf
mov
gs
xchg
push
pop
nop
movs
add
push
or
pop
out
mov
xor
fmul
ret
mov
mov
icebp
std
js
shl
jle
cmps
adc
jle
test
pop
popf
js
mov
cli
or
push
icebp
mov
sub
(bad)
out
outs
repnz
ja
jb
cmp
mov
fwait
(bad)
add
sub
hlt
and
shl
dec
lods
and
lahf
(bad)
cs
popa
movs
jge
stos
movs
in
scas
jle
add
pop
jo
scas
dec
mov
lds
jmp
mov
add
xor
ja
jmp
out
push
push
stc
pop
cmps
mov
retf
and
jge
mov
sub
jns
jnp
xchg
les
adc
adc
adc
ds
and
sbb
mov
dec
in
jnp
sub
bound
movs
inc
xchg
jb
bound
scas
idiv
dec
inc
mov
in
mov
sub
imul
adc
pop
adc
push
mov
test
in
inc
mov
push
jnp
std
jp
ja
test
stos
xor
mov
bound
stos
pop
shl
ins
pop
out
enter
push
clc
xchg
mov
out
pop
push
mov
jae
add
xchg
mov
mov
push
add
loopne
ins
and
retf
inc
retf
sbb
jno
or
push
xchg
sbb
bound
push
mov
dec
enter
mov
fnstcw
mov
sahf
fisttp
popf
fcmovne
pushf
data16
pushf
pop
enter
ja
jns
or
sub
push
data16
add
mov
jae
sub
cwde
push
test
div
jmp
dec
scas
into
(bad)
movs
das
test
test
xor
push
mov
arpl
mov
test
or
and
pusha
xchg
dec
int
xchg
mov
ds
gs
shl
or
pop
cdq
and
loop
rcr
xchg
imul
call
pop
jecxz
mov
cmp
test
pop
push
xor
mov
retf
mov
jmp
push
xchg
lds
je
inc
and
fucomi
inc
and
cmp
adc
shr
xor
or
xlat
xchg
mov
sbb
outs
fld
repz
jmp
aaa
mov
pop
mov
jmp
call
push
fstp
mov
push
ret
mov
cld
movs
sub
(bad)
leave
xor
sets
add
pop
or
call
pop
push
sub
movs
add
icebp
jecxz
mov
pusha
and
xchg
aad
retf
push
retf
sub
xor
bsr
in
sbb
xlat
adc
add
xchg
adc
jp
mov
adc
arpl
mov
push
nop
mov
dec
sbb
lock
imul
std
fwait
jecxz
stos
stos
push
or
push
and
pop
jnp
movs
sti
fbstp
cmp
sub
mov
dec
mov
push
jns
sbb
sbb
inc
add
push
pop
scas
pop
imul
pusha
repz
jae
push
jmp
mov
ret
jns
ror
push
push
aad
ror
mov
dec
add
jle
dec
lock
push
add
add
stos
in
add
sbb
mov
cmp
ficom
sbb
retf
jns
pushf
xchg
add
pop
cld
fstp
pop
xchg
pop
and
xor
push
arpl
add
clc
and
gs
dec
mov
mov
and
out
sbb
or
dec
test
xchg
ja
jae
push
clc
es
xchg
fsubr
aam
push
stos
push
xchg
jp
inc
dec
dec
push
cld
test
loope
mov
in
dec
cs
cmc
xchg
scas
pop
and
and
stc
ret
dec
(bad)
loop
fild
repnz
call
jae
gs
cmp
sub
cld
stos
rcr
pop
push
xor
xchg
jecxz
xor
cwde
push
dec
mov
push
sbb
xor
in
test
inc
xchg
ror
stos
neg
int
cs
xor
and
inc
cmp
mov
cmp
lock
int
dec
imul
pop
jbe
lock
imul
push
jns
(bad)
rcr
loop
ror
test
cmps
pop
fidivr
fs
lahf
outs
lock
dec
fwait
adc
loope
inc
shr
xchg
inc
add
push
mov
shl
movs
mov
ins
push
ret
fnsave
inc
xor
popf
les
dec
mov
adc
mov
dec
mov
cmp
nop
inc
mov
fstp
jns
test
aad
stos
das
ret
jmp
lods
test
gs
sahf
imul
mov
(bad)
mov
mov
mov
lods
add
arpl
push
retf
fstp
add
mov
dec
bound
and
retf
and
(bad)
in
loopne
jecxz
addr16
cmp
lock
and
mov
cwde
mov
movs
and
hlt
jmp
fs
fild
adc
and
mov
popa
js
xlat
vhaddps
movs
sbb
dec
inc
outs
loope
test
movs
ds
das
dec
push
enter
or
sub
cmp
data16
retf
scas
inc
jge
dec
call
div
shl
adc
pop
inc
call
pop
mov
mov
xor
cvttps2pi
mov
(bad)
jne
dec
scas
jae
xor
dec
daa
ja
in
mov
xchg
dec
mov
mov
lock
xor
stos
dec
dec
fbstp
ret
imul
pop
cli
push
ins
aam
loope
sti
mov
scas
add
xor
sub
adc
out
fcomp
ret
jge
mov
dec
out
cmp
jmp
mov
inc
rcl
cmp
mov
pop
out
sub
dec
or
pop
xchg
out
mov
mov
movs
cli
dec
imul
mov
add
in
in
xor
fsubr
loopne
mov
scas
xor
adc
mov
jbe
mov
imul
dec
inc
pop
(bad)
jbe
inc
jb
les
ss
jne
out
push
test
mov
and
add
dec
and
jb
pop
out
fld
lahf
inc
imul
(bad)
pop
xor
jecxz
add
aad
out
mov
jg
je
scas
xchg
lds
ins
sub
es
lds
jecxz
fld
jmp
adc
and
xor
sub
shl
inc
ret
icebp
into
mov
pushf
mov
and
jl
sub
into
add
sbb
es
xchg
jle
ret
and
mov
mov
pushf
inc
lods
jno
cdq
cmp
sar
add
cmps
cmp
jnp
daa
sar
arpl
scas
dec
cdq
loope
and
aad
imul
leave
cmp
push
or
mov
add
iret
es
sbb
out
rcr
adc
push
arpl
jmp
call
pcmpgtw
(bad)
iret
pop
rcr
sbb
imul
push
loop
add
popa
add
out
xor
or
jmp
fdivr
cld
mov
cmp
das
push
rol
mov
repz
jno
mov
sbb
(bad)
test
sahf
push
add
test
dec
jbe
rcr
push
cli
jle
and
inc
les
pop
std
push
fcom
dec
jnp
pop
pusha
cmp
fwait
or
mov
scas
jnp
je
call
imul
mov
(bad)
call
mov
xor
adc
xchg
cld
arpl
cmps
retf
icebp
and
push
call
mov
pop
adc
outs
sub
das
inc
mov
outs
fidiv
bound
iret
int3
aaa
nop
jge
mov
pop
out
jmp
out
mov
jmp
jp
inc
jle
movs
jns
leave
xchg
xor
ret
ds
mov
dec
push
xchg
push
mov
mov
outs
or
adc
jge
stc
and
cmp
adc
in
mov
inc
push
icebp
sbb
fs
mov
lahf
sub
xchg
pop
push
in
lahf
fsubr
mov
in
sub
xlat
mov
fwait
mov
movs
mov
ja
and
dec
xchg
mov
out
jp
cs
pop
(bad)
fisttp
inc
dec
mov
push
jp
sub
data16
jnp
lock
mov
lahf
jae
cmp
pop
fidiv
xchg
xchg
cmp
fdiv
xchg
rcl
add
inc
inc
rol
(bad)
xor
push
and
in
ins
cdq
jnp
int3
push
and
stc
ret
push
lahf
rcl
push
les
imul
mov
cmp
test
cwde
mov
sbb
bound
pop
add
push
jb
in
mov
stos
outs
push
sub
sbb
sbb
sti
and
(bad)
hlt
in
fbstp
mov
cwde
retf
and
(bad)
jnp
pop
and
add
in
ss
outs
xor
cmps
sub
je
push
mov
xchg
mov
pop
and
or
or
outs
inc
mov
mov
push
lock
lea
push
jbe
fs
cli
adc
pop
mov
sbb
xchg
pop
or
and
xor
fimul
jecxz
popa
loope
pushf
iret
mov
or
jo
rcr
xor
shl
jge
ja
sbb
scas
cwde
pop
call
mov
les
xlat
cmp
std
(bad)
repz
mov
mov
dec
sbb
xor
scas
dec
cmp
lods
cmps
dec
sbb
cwde
mov
jp
sbb
repz
jl
cwde
inc
jecxz
adc
jmp
mov
push
test
pop
ja
fcomp
arpl
push
rcl
mov
adc
call
ja
cmp
push
push
mul
cmps
or
or
dec
into
xlat
xchg
mov
ja
mov
outs
adc
cli
mov
div
rol
popa
xchg
xchg
fsub
dec
fwait
pop
or
sbb
mov
sub
and
test
lods
mov
pop
mov
dec
cmp
cmp
jns
imul
and
les
out
cmp
mul
(bad)
mul
and
ins
push
mov
dec
lahf
mov
stos
push
push
dec
aam
or
mov
sbb
sbb
cmps
ins
and
add
(bad)
ins
add
and
callw
inc
(bad)
jl
js
inc
xor
push
mov
and
outs
and
call
dec
mov
add
ret
mov
lock
shl
fwait
xor
leave
jmp
popa
xchg
fisub
fs
gs
jmp
jp
push
outs
push
or
sbb
xchg
sub
outs
out
(bad)
imul
outs
into
ja
mov
mov
sbb
iret
sbb
mov
aam
gs
inc
jnp
push
outs
es
jmp
jmp
lds
sub
ss
mov
pop
movs
or
inc
cmps
(bad)
pop
shl
pop
aam
mov
cli
sbb
sbb
lods
rcl
sbb
in
es
mov
gs
cmps
pop
rcr
rcr
ret
arpl
xchg
loope
sub
dec
sbb
fidivr
sbb
and
sti
sti
jg
and
sub
sahf
mov
jne
mov
stos
rol
mov
cmp
pop
stos
adc
dec
cmps
mov
(bad)
mov
inc
xchg
mov
mov
cmps
adc
jmp
xchg
nop
cmp
nop
imul
mov
mov
mov
loopne
out
or
pandn
jo
movs
mov
into
mov
fnsave
scas
fwait
sbb
fistp
push
jg
pop
xor
gs
mov
out
inc
ss
xchg
(bad)
rol
hlt
popa
mov
hlt
pusha
push
aad
push
xchg
inc
inc
mov
xor
mov
repnz
xor
cmp
push
fisttp
fmul
mul
lods
dec
sbb
fst
(bad)
mov
inc
bound
sbb
(bad)
sub
mov
movs
sbb
and
or
add
out
add
fwait
pop
aas
mov
setl
xlat
mov
mov
sbb
les
sbb
jl
dec
sub
xchg
out
mov
popa
sbb
int
fisttp
or
xor
cwde
pop
cmp
jp
in
jae
and
cmp
mov
movs
mov
mov
ret
into
je
pop
xchg
mov
call
pop
sbb
or
(bad)
pop
xchg
les
sbb
movs
jo
ret
jge
adc
mov
sub
mov
add
jbe
cmp
shr
mov
imul
out
int3
or
(bad)
repnz
adc
loope
cld
mov
or
or
lods
jmp
into
push
les
inc
js
mov
add
je
jl
sti
fidiv
adc
test
ret
add
out
int3
mov
xchg
add
pop
dec
movs
retf
call
push
and
jo
dec
int
sbb
adc
loope
ins
dec
push
ror
and
mov
mov
xor
push
mov
push
outs
add
lods
retf
push
and
dec
(bad)
or
(bad)
or
pop
outs
jmp
sbb
retf
test
fdiv
sbb
dec
push
cmp
jb
ror
sub
mov
mov
pop
jno
jae
arpl
inc
sete
(bad)
rcl
int3
in
sbb
and
sbb
sahf
into
cdq
fdivr
scas
pop
sub
xor
daa
clc
ins
xchg
stos
clc
sbb
xchg
sub
outs
out
bound
repnz
inc
pop
cld
ja
je
int
xlat
pop
cmp
int3
popf
pop
xlat
rol
mov
mov
(bad)
out
xchg
imul
adc
imul
pushf
dec
out
jp
in
adc
sub
mov
jecxz
ds
mov
daa
mov
mov
(bad)
test
int3
push
mov
inc
add
sbb
push
out
(bad)
cmc
rcl
and
jae
xchg
(bad)
mov
cmp
and
jl
xor
xchg
stos
inc
fdiv
mov
xchg
mov
outs
sbb
inc
mov
lock
iret
stos
int3
ins
ret
inc
sbb
add
xor
fild
(bad)
fistp
jle
inc
add
clc
inc
shl
clc
and
push
iretw
(bad)
mov
mov
push
in
rcl
add
stos
mov
cmc
test
cmp
pop
call
cmp
jle
rol
sbb
outs
adc
ins
pushf
retf
inc
push
lods
jl
retf
leave
stc
mov
jp
dec
loop
popa
pusha
test
sti
or
dec
cmps
int3
ds
xor
mov
mov
ss
or
sbb
xor
je
or
(bad)
mov
add
repnz
sub
sbb
mov
sbb
cmc
jmp
xchg
pop
aaa
dec
in
mov
jne
dec
mov
(bad)
mov
xor
sbb
test
mov
sbb
jmp
clc
repnz
mov
call
das
sub
call
movs
into
or
daa
adc
push
dec
jmp
repz
sub
mov
test
inc
daa
js
loope
call
xchg
xchg
cmp
sub
test
lods
sub
sbb
popf
hlt
sti
lods
mov
mov
retf
js
movs
inc
lods
cwde
mov
pop
(bad)
mov
in
jns
sbb
imul
clc
push
fwait
mov
gs
aad
cmp
mov
push
in
jmp
cs
mov
pusha
sbb
(bad)
out
push
and
aas
xchg
popa
fidivr
repz
mov
call
pop
mov
add
repz
or
sub
pop
sub
push
stos
push
xchg
cld
clc
test
xchg
movs
xchg
cmp
inc
push
push
mul
arpl
and
cs
aam
adc
fwait
mov
std
mov
and
jmp
ja
rol
push
pop
aad
pop
retf
add
(bad)
mov
jmp
adc
fs
sbb
xor
or
(bad)
fisub
stos
lods
dec
enter
(bad)
mov
jmp
es
xchg
fisttp
push
stc
xchg
xchg
cs
fadd
dec
sub
ror
das
mov
sub
imul
push
dec
nop
daa
shr
outs
xchg
add
inc
pop
je
or
and
or
mov
xor
xchg
imul
fisttp
inc
mov
movs
add
imul
int
ins
retf
pop
aad
retf
push
cmp
cdq
cmp
enter
lods
xchg
lods
test
xor
enter
adc
dec
les
jg
or
sub
inc
test
sub
xchg
arpl
adc
dec
fs
lahf
lea
inc
cmp
movs
repnz
stos
stos
mov
mov
sbb
into
jmp
pushw
lahf
xchg
xchg
ret
and
nop
push
hlt
jae
test
lods
xchg
ins
adc
dec
and
lods
or
sub
sbb
shl
sbb
mov
mov
xor
mov
outs
sbb
out
mov
outs
pop
fcomp
or
mov
cmp
sub
inc
cmp
shl
scas
ja
fisttp
inc
je
or
sub
test
add
sbb
cmp
and
xor
call
xchg
xlat
mov
aaa
inc
jge
xor
mov
(bad)
nop
and
add
and
jae
push
mov
push
mov
xor
fstp
repnz
or
es
or
push
sar
mov
pop
push
in
dec
fwait
dec
sahf
mov
cmps
jmp
icebp
je
xor
mov
push
movs
pop
xchg
es
mov
out
cwde
and
mov
xor
jge
rep
mov
test
in
dec
scas
es
and
clc
adc
imul
sti
add
sti
cli
mov
add
mov
lods
popa
int
mov
aad
add
pop
gs
call
fmul
or
test
loop
adc
mov
xor
cli
xlat
arpl
repz
xlat
lds
dec
fmul
mov
pusha
fistp
xchg
inc
loopne
pop
(bad)
sbb
push
xor
jb
sub
mov
into
shl
test
rcl
retf
jecxz
pop
aad
jo
call
and
(bad)
scas
(bad)
hlt
mov
rcr
mov
xchg
int
xchg
xchg
popa
add
push
or
mov
repnz
mov
sub
sub
cmps
xchg
int3
push
pop
jmp
into
xchg
sub
(bad)
xchg
or
dec
mov
call
mov
mov
cmp
and
cmps
sub
add
pop
scas
in
or
mov
add
or
xchg
fisubr
shl
out
adc
sbb
(bad)
fimul
rol
mov
mov
dec
retf
sbb
std
fdiv
popf
cmp
adc
add
iret
pushf
sub
or
push
sahf
push
jg
lahf
xchg
xchg
(bad)
and
int
cmc
jns
retf
ds
es
mov
neg
jne
or
stos
imul
fs
sub
mov
mov
jl
cmp
sbb
mov
mov
movs
loop
cmp
lock
loope
scas
cld
shl
retf
test
cmp
es
mov
push
ins
pop
and
(bad)
jno
push
repz
cmp
inc
dec
cmp
push
mov
jmp
add
add
push
fist
or
sbb
inc
call
push
js
jmp
gs
and
pusha
inc
popa
and
jle
in
pop
fstp
add
in
push
xchg
mov
addr16
dec
lock
std
cs
sub
dec
and
jecxz
inc
popa
push
repnz
pushf
shr
push
xchg
adc
(bad)
xchg
cmps
sbb
test
in
pop
mov
int3
sti
enter
loope
mov
xchg
push
add
idiv
cmps
dec
mov
push
mov
mov
sbb
push
test
cmc
add
sub
jg
push
adc
push
mov
sbb
sub
div
out
popa
push
jnp
cwde
add
leave
popa
push
enter
fimul
data16
mov
sbb
sub
jmp
nop
push
(bad)
push
fcomp
sar
mov
xor
and
inc
cmp
pushf
mov
cwde
aam
pop
int3
xlat
scas
imul
fadd
mov
cmp
xor
jg
or
xchg
pop
aaa
aam
mov
loope
or
aas
xchg
pop
push
mov
cmp
sub
cdq
in
in
xchg
dec
sbb
xchg
adc
sti
xchg
not
push
icebp
sbb
xor
lock
jmp
pop
push
jns
cld
fwait
add
(bad)
mov
test
mov
test
outs
scas
adc
mov
ret
cli
adc
inc
push
in
xor
out
push
ds
push
scas
test
and
repnz
ret
xchg
sbb
add
jns
fiadd
and
mov
sub
jmp
arpl
mov
shl
xchg
xchg
jno
mov
and
dec
push
dec
clc
push
dec
loopne
test
sub
stos
(bad)
fcomp
xchg
movs
mov
xchg
jg
movs
sar
mov
(bad)
or
sbb
lods
mov
icebp
dec
imul
icebp
outs
mov
clc
jecxz
xchg
inc
push
lea
hlt
sub
cmp
adc
rcr
(bad)
ins
sar
jo
rcr
push
ret
push
jne
addr16
in
ins
jl
pop
sub
clc
mov
jbe
lds
js
shl
clc
dec
fincstp
pop
in
xchg
je
or
rol
mov
sub
lods
mov
cmp
out
daa
shl
iret
add
sti
cmp
out
or
jmp
iret
fdiv
fidivr
or
ins
dec
sub
imul
daa
ss
sub
inc
mov
mov
mov
sub
enter
mov
mov
adc
fsub
or
test
jbe
std
fist
mov
inc
xchg
stos
daa
sub
dec
xchg
mov
(bad)
pop
icebp
adc
and
bswap
mov
xchg
mov
test
push
popa
in
mov
shl
dec
and
sub
add
std
add
scas
push
xchg
aad
xchg
sub
xchg
test
scas
movs
call
scas
mul
pop
ins
add
xchg
addr16
jge
adc
sbb
sahf
jg
ja
push
lds
dec
inc
sub
int
push
mov
mov
adc
push
lods
xor
pop
pop
pop
jle
adc
(bad)
je
js
sbb
(bad)
ds
pop
div
jp
dec
dec
pushf
(bad)
sbb
mov
ins
in
clc
ret
call
aad
adc
push
fs
xor
cmps
mov
xor
mov
mov
jo
add
sti
arpl
scas
fisub
fcompp
inc
aaa
push
xor
fsub
(bad)
cld
mov
xchg
cmps
mov
data16
push
pop
mov
and
pop
adc
sbb
bound
test
adc
data16
and
(bad)
xchg
ins
xchg
dec
pop
aaa
sbb
add
inc
mov
inc
cmps
jle
scas
and
mov
inc
add
jmp
fwait
xchg
add
mov
in
xor
lds
xor
lahf
shr
sbb
daa
(bad)
sbb
dec
(bad)
and
add
cmc
add
mov
aad
sub
xor
bnd
loope
lock
push
mov
gs
sub
or
push
add
or
(bad)
and
pushf
cmps
sub
pop
movzx
mov
out
cmp
xchg
or
mov
adc
xor
add
loop
arpl
iret
aad
mov
fadd
cmp
mov
xor
adc
cmps
xchg
sub
call
xor
jecxz
(bad)
repz
xchg
mov
cmp
xchg
fdivr
sahf
cmp
cmp
cmp
repnz
inc
cmps
cmps
clc
pop
popf
(bad)
stos
imul
lods
push
xchg
cmp
mov
xor
dec
stos
(bad)
movs
jno
out
mov
pop
or
and
rol
aad
push
mul
or
nop
mov
xor
xchg
sub
daa
jle
out
test
push
test
lahf
dec
adc
xchg
inc
(bad)
jne
mov
jne
pop
pusha
sahf
loope
neg
inc
lods
ficomp
mov
movs
leave
mov
mov
outs
pop
cmp
pusha
ret
fcom
int3
cs
push
adc
add
jae
shl
scas
or
jb
(bad)
mov
movs
ret
movs
pop
fmul
and
retf
push
mov
dec
fstp
popf
pop
ja
pushf
int3
test
mov
scas
mov
imul
out
jg
xchg
sbb
fdiv
add
mov
fstp
jae
movs
dec
in
mov
mov
xchg
mov
add
xchg
fs
or
fist
mov
adc
aas
cmp
mov
xchg
fcom
cdq
ret
sbb
aaa
iret
jns
sub
or
ja
xchg
loop
adc
ins
mov
jmp
not
cdq
iret
sbb
sbb
inc
mov
jo
mov
icebp
lea
and
dec
pop
inc
cmp
jmp
push
call
int3
dec
sbb
(bad)
sbb
sahf
inc
mov
pop
fdiv
push
xor
xchg
and
dec
repnz
mov
sar
retf
xchg
sub
fs
adc
rcl
or
jle
jge
imul
jnp
push
stos
sbb
mov
ficomp
cmc
(bad)
into
cwde
xchg
mov
ja
loope
inc
pop
cmp
cmp
loope
out
dec
jnp
lea
loop
adc
lods
das
mov
(bad)
mov
stc
(bad)
cdq
xchg
inc
pop
mov
mov
sub
adc
fcomi
pop
fidiv
jecxz
xor
ss
dec
inc
loope
adc
xlat
in
loop
push
push
cmp
call
neg
pop
mov
pop
call
jge
das
(bad)
xor
aaa
add
push
jl
daa
or
mov
int
cmps
aaa
mov
jmp
in
dec
(bad)
rol
cmps
loop
jbe
scas
xor
sub
sti
fcomp
(bad)
es
sub
(bad)
and
dec
pop
cli
jnp
(bad)
cld
stos
mov
xchg
mov
scas
fsubrp
mov
adc
jo
jnp
(bad)
jb
ja
lods
add
fwait
add
ja
les
jno
clc
in
xchg
or
xchg
mov
ret
stc
pop
pop
clc
add
or
f2xm1
inc
daa
cld
fisttp
push
in
jne
mov
movs
fld
(bad)
rol
fldenv
and
dec
cmps
add
xchg
and
dec
in
je
adc
ins
js
mov
not
fsubr
inc
ficom
lds
arpl
mov
int3
test
imul
jne
pusha
jmp
sbb
pop
sbb
es
ins
int
and
xchg
mov
pop
cwde
fmulp
mov
mov
xchg
jbe
test
cwde
lahf
cmp
sub
mov
sub
out
jmp
xor
iret
sahf
pop
std
repz
retf
clc
cmps
or
cwde
into
aam
pop
repz
div
fcmovbe
pmulhw
inc
and
xchg
sub
add
inc
and
ror
push
ror
lds
and
out
mov
xor
lock
jae
mov
adc
sbb
arpl
ficom
and
push
xor
cmp
add
inc
cmp
jl
call
(bad)
lods
jo
adc
data16
push
fiadd
sbb
adc
rcl
in
into
popa
fimul
push
dec
das
inc
arpl
sbb
sbb
xor
outs
add
fidiv
lds
inc
xlat
xor
les
xchg
arpl
retf
xchg
enter
jo
push
arpl
out
test
test
sahf
cs
cmp
mov
mov
jmp
xor
loopne
movs
hlt
mov
scas
int
fcmovbe
icebp
retf
xchg
(bad)
call
(bad)
mov
add
cmc
out
cmps
movs
sub
cmp
(bad)
mov
aas
(bad)
adc
add
push
sub
add
and
cdq
sub
int
xchg
ds
add
loopne
call
out
sar
jns
and
xor
jb
cmp
es
or
adc
sub
cmc
in
retf
sub
loope
mov
sbb
add
push
mov
pop
mov
push
add
enter
dec
push
pop
add
mov
adc
hlt
push
sub
or
mov
loopne
ja
or
scas
mov
sti
xor
repnz
xchg
arpl
xchg
clc
push
push
sbb
push
sub
xchg
aaa
in
xchg
inc
into
cmp
cdq
ins
push
ins
push
clc
icebp
dec
and
ds
je
outs
dec
or
cmps
and
(bad)
clc
and
pop
xor
in
and
sbb
dec
outs
ins
inc
add
loop
in
outs
xor
mov
loop
test
outs
ins
fbld
outs
in
cli
jns
cmp
and
mov
inc
mov
imul
mov
inc
and
cmps
add
inc
xor
jl
repnz
in
test
mov
xor
hlt
adc
in
jp
imul
adc
lahf
fsincos
xchg
xchg
(bad)
sbb
or
mov
mov
mov
xchg
add
push
mov
call
mov
call
scas
leave
ss
cdq
and
in
out
dec
pop
adc
cld
jb
add
push
cmp
or
fs
push
mov
movs
sbb
clc
idiv
or
test
test
sbb
dec
cmps
mov
rcr
pop
ins
or
je
lds
hlt
pop
call
inc
es
pop
leave
lahf
mov
or
adc
aam
repz
test
cmp
call
inc
sub
push
out
inc
fidivr
adc
jmp
inc
xchg
cmp
xchg
les
push
inc
aaa
fs
cwde
aad
gs
gs
mov
mov
push
xchg
cmps
mov
mov
pusha
sbb
sbb
xchg
leave
dec
lods
and
repz
mov
movs
jno
dec
arpl
int
rcr
mov
cwde
adc
xchg
jmp
hlt
xor
and
push
mov
ja
mov
lods
lods
clc
add
adc
in
(bad)
jo
fsub
mov
jo
mov
push
cmp
dec
cli
ret
adc
shl
add
loopne
int3
(bad)
xchg
sub
outs
jb
push
js
aam
fstp
(bad)
jb
int3
sub
mov
iret
cdq
(bad)
(bad)
fstp
and
loop
hlt
daa
inc
mov
sbb
add
mov
or
jns
ror
call
arpl
push
iret
push
popa
enter
fld
pushf
cmp
(bad)
aas
in
stos
fcomp
out
adc
jecxz
sbb
into
popf
jp
aas
xchg
sar
mov
sti
xor
ret
dec
jmp
sbb
pop
or
in
pop
or
fdiv
xor
imul
xchg
mov
fcmovb
pop
or
mov
or
pop
push
movs
imul
out
push
jecxz
das
call
xor
pop
adc
xchg
adc
sub
sahf
mov
add
xchg
push
sub
dec
lods
out
or
mov
mov
ret
cld
dec
pop
jbe
cmp
jbe
iret
push
ja
stc
neg
xor
jg
mov
dec
pop
stos
and
sub
xchg
cmps
xchg
jge
aam
popa
xchg
adc
push
in
outs
sbb
pop
sub
shl
dec
cld
sub
test
(bad)
mov
ja
mov
mov
lds
or
push
inc
cmp
mov
rcr
mov
dec
ja
xor
in
ret
pop
into
pop
in
retf
pop
test
lahf
pop
inc
inc
sbb
mov
lods
gs
dec
leave
mov
imul
out
sbb
mov
rcr
jne
jno
sub
popa
(bad)
and
sub
das
jbe
dec
pusha
mov
or
cdq
call
pop
out
inc
aas
push
push
push
mov
mov
aam
aaa
stc
inc
cmp
mov
sub
sub
sub
movs
shr
xor
jl
inc
xchg
xor
adc
(bad)
ins
call
xchg
fcomp
adc
aam
sbb
jmp
cmp
or
test
call
ins
jne
push
inc
std
add
movs
pop
sub
cmps
push
push
adc
int3
gs
add
psrlw
jo
xor
daa
xor
add
test
enter
mov
push
or
push
inc
and
sbb
cli
jmp
arpl
xlat
inc
ja
sub
pop
sub
pop
xchg
int
cmp
jg
daa
or
fcmovb
aaa
repz
jns
clc
out
adc
rcl
mov
jmp
lea
mov
and
pop
clc
test
add
out
aas
pusha
clc
ja
fucomip
pop
mov
jp
in
and
inc
loope
sar
xor
adc
fcom
pop
cmp
lods
adc
jl
push
sbb
adc
movs
sbb
in
(bad)
stc
mov
and
cdq
mov
xchg
xor
(bad)
sub
jbe
aad
sbb
ja
clc
test
or
mov
mov
pop
push
arpl
retf
or
enter
mov
ds
dec
add
stos
mov
jb
imul
dec
fcom
in
xchg
pop
mov
mov
int
inc
fist
ds
inc
push
mov
inc
rol
inc
(bad)
sti
mov
sbb
jne
jp
sbb
lock
outs
dec
cwde
xlat
mov
test
add
mov
jmp
fst
retf
xor
push
sbb
leave
cmp
dec
adc
int3
push
mov
(bad)
lds
cwde
mov
and
xchg
jmp
push
cmc
push
es
jo
jno
fcmovb
or
sahf
pop
push
(bad)
aas
mov
(bad)
push
add
xor
outs
mov
cmp
push
push
mov
je
push
es
cmp
mov
into
sub
add
aas
mov
fwait
xor
pop
sti
jp
ja
add
mov
jp
add
pushf
dec
jnp
loop
xor
pop
in
es
addr16
out
pop
mov
or
push
(bad)
sub
add
inc
cmp
pop
cmp
mov
out
loopne
dec
outs
and
fwait
popa
add
mov
scas
sub
cwde
jno
rcl
jle
xor
ja
(bad)
sti
jl
xor
or
add
out
pop
dec
inc
out
or
call
scas
push
outs
out
jecxz
and
enter
xor
pop
addr16
mov
in
jae
push
dec
sub
mov
dec
jecxz
jle
mov
inc
ss
cmp
adc
ret
out
lods
imul
push
jno
(bad)
aaa
in
or
xor
push
fisubr
jge
pop
sub
xchg
pop
mov
push
enter
sub
scas
cmp
cmp
pop
dec
aad
adc
lock
das
fs
les
dec
(bad)
jne
ins
push
mov
xchg
jle
mov
(bad)
pop
inc
test
test
jg
inc
in
mov
mov
or
mov
pop
cmp
mov
jb
mov
test
push
bound
addr16
std
leave
scas
xor
les
push
sbb
ret
xchg
xor
push
pop
test
add
int
stc
imul
mov
sahf
inc
frstor
ds
rcl
dec
add
pop
fldcw
sub
dec
xor
pop
iret
daa
fstp
push
arpl
push
(bad)
and
jle
outs
inc
scas
and
sti
out
mov
fwait
js
push
and
mov
jge
cwde
dec
add
add
test
sahf
xor
cs
mov
test
xlat
pusha
iret
in
hlt
test
scas
jne
ins
or
xor
jne
inc
std
daa
cmp
imul
and
and
fcomp
push
pop
loopne
or
enter
leave
cmc
loopne
push
mov
push
mov
pop
push
arpl
shl
add
pop
shr
scas
and
add
jmp
mov
inc
jb
sub
(bad)
clc
fcom
pop
lea
in
fs
xor
pushf
pop
sbb
sub
xchg
jmp
xor
xchg
dec
xchg
mov
hlt
int
movs
movs
jle
adc
std
push
push
fdivr
clc
or
and
retf
(bad)
mov
cdq
jmp
mov
add
and
sub
push
paddw
or
aam
fld
rcl
xor
test
sub
and
into
xor
sub
mov
push
cli
add
add
js
sbb
add
push
jg
cmp
cmp
mov
push
xchg
iret
jp
icebp
add
leave
jmp
(bad)
fist
mov
out
mov
dec
sub
stos
mov
and
xchg
jmp
xor
and
mov
jb
or
push
(bad)
in
or
sahf
cmps
int
rcr
adc
retf
icebp
or
push
ins
cwde
pop
xor
call
loop
sbb
ins
fsubr
cdq
lods
mov
fmul
mov
lods
jg
cmp
test
(bad)
dec
(bad)
lahf
and
fild
or
jmp
pop
jne
out
aad
test
mov
mov
mov
sub
adc
or
xchg
pop
in
sar
mov
inc
push
clc
cmp
ja
addr16
and
scas
pushf
data16
dec
imul
add
das
jp
ret
jne
call
stc
xor
xor
pushf
xchg
or
rol
test
mov
dec
adc
jmp
stos
icebp
jmp
add
sbb
loopne
(bad)
icebp
into
pop
xor
in
and
inc
addr16
pop
fld
ss
add
mov
dec
adc
ins
pop
cld
push
pop
push
ins
adc
aaa
fcmove
les
mov
pmovmskb
lea
sub
popf
or
mov
mov
fcmovnbe
sub
jle
push
pop
iret
and
xor
aas
mov
retf
sti
cmp
fninit
fcom
outs
call
scas
cs
lahf
mov
push
imul
leave
xor
adc
xor
jmp
jl
xor
jno
fisttp
jo
dec
jo
repz
cmp
adc
pushf
mov
xchg
mov
mov
add
fcmovnu
xor
les
jo
pop
mov
mov
inc
jl
cli
je
test
jl
lahf
xor
daa
mov
enter
rdpmc
sahf
lods
in
sub
imul
mov
xchg
aad
les
push
xor
fdivr
xor
inc
xchg
fiadd
mov
shl
movs
jl
mov
lds
(bad)
loop
mov
xchg
xchg
adc
nop
fidiv
xchg
inc
popf
xlat
test
fist
pop
mov
ds
sub
rol
or
dec
cdq
or
xor
push
sbb
lods
push
aaa
bound
test
jbe
inc
popa
cmps
cmp
jl
add
add
dec
pop
or
push
adc
sub
stos
mov
push
jecxz
pop
(bad)
pop
inc
enter
adc
sti
enter
(bad)
pcmpeqw
jae
dec
lods
ss
and
call
call
out
adc
xchg
sbb
jb
(bad)
dec
push
add
or
popf
repz
xlat
jp
mov
jnp
sbb
inc
adc
dec
dec
arpl
test
xor
scas
mov
cmps
je
xor
push
push
adc
push
push
push
adc
jp
mov
gs
push
mov
xlat
(bad)
shl
out
pop
xor
sar
jle
xor
cmps
retf
xchg
sub
into
fimul
or
rol
push
mov
push
fdiv
dec
cmp
xlat
in
or
test
ja
imul
mov
or
fadd
ror
not
adc
pop
mov
stos
nop
cmps
test
sub
(bad)
fimul
loope
repnz
(bad)
pop
jbe
and
rcr
in
sub
ror
mov
jbe
or
mov
(bad)
sbb
fild
(bad)
adc
jge
les
imul
xchg
jecxz
(bad)
xor
adc
imul
pop
fmul
cmp
xor
cld
retf
gs
xor
ret
dec
hlt
and
js
gs
sbb
push
icebp
and
test
pop
xchg
fmul
mov
push
mov
inc
sahf
(bad)
popf
mov
sub
xor
push
aaa
mov
cmp
jg
mov
sub
lds
jbe
xor
(bad)
call
xchg
pop
ja
fdiv
and
js
inc
and
xchg
mov
dec
sub
inc
leave
or
xchg
fisub
xor
xchg
sub
popf
sti
(bad)
and
ss
pop
xor
push
mov
dec
imul
rcr
push
test
iret
test
xor
xchg
ficom
in
adc
or
mov
int3
cmp
add
jge
lea
ror
addr16
pop
mov
push
jmp
retf
lds
aam
mov
imul
ins
(bad)
or
lock
movs
xchg
int
in
jae
repnz
fnstenv
push
mov
bound
(bad)
cld
ins
scas
(bad)
and
je
mov
in
gs
xchg
imul
es
adc
stc
ss
pop
dec
push
mov
push
adc
push
cli
pushf
addr16
push
push
out
push
xchg
js
in
repz
aas
mov
cdq
lods
(bad)
leave
outs
cmps
mov
mov
adc
mov
movs
jmp
jge
jp
jb
enter
or
xlat
jns
adc
arpl
mov
das
sbb
xchg
ja
mov
imul
and
adc
inc
inc
cmp
iret
not
mov
test
mov
add
jmp
jecxz
cmp
mov
aam
push
xchg
cld
std
sbb
mov
in
xor
stos
mov
bound
and
mov
cmp
fsub
fadd
(bad)
push
mov
dec
cmp
fwait
cmps
add
inc
dec
jg
shl
ret
add
cmps
cwde
xor
add
cmp
cmp
lea
fs
(bad)
push
idiv
es
lods
sub
sub
pop
mov
cdq
mov
jbe
jnp
mov
stc
jno
pop
ss
mov
or
pop
call
mov
rol
js
add
pop
adc
jns
sub
fdiv
jg
call
fmul
jns
rol
adc
xchg
sub
push
ficom
fisub
mov
add
cmp
repz
fsub
std
cmps
scas
js
imul
dec
lds
and
rcl
inc
sti
xchg
pushf
pop
int3
in
ins
jl
ins
fwait
arpl
retf
sub
jb
xor
lds
mov
popa
out
sbb
lock
jmp
mov
cmps
movs
mov
in
mov
jo
adc
mov
imul
sahf
mov
lahf
data16
loopne
lock
mov
(bad)
and
push
mov
inc
dec
or
mov
fistp
ret
adc
cmp
push
sub
xor
fidiv
mov
mov
fwait
pop
cmp
pop
pop
mov
xor
fcomp
mov
(bad)
xor
jb
mov
std
jno
ret
gs
or
adc
test
push
lods
xor
cmp
mov
cld
lds
scas
loop
cmp
(bad)
cmps
std
in
inc
mov
adc
dec
data16
sbb
popa
outs
clc
fisttp
cld
call
pop
xor
or
jecxz
pop
mov
aas
cmp
test
ret
add
movs
sbb
mov
adc
enter
cmp
pop
hlt
inc
(bad)
jg
xor
ss
adc
iret
stos
cmp
outs
es
leave
and
mov
pop
test
repnz
add
dec
xor
nop
cmp
inc
push
adc
xchg
jl
scas
into
cwde
inc
ins
mov
add
or
scas
sub
inc
inc
out
outs
and
push
xlat
jo
add
pop
cmp
imul
jnp
xchg
mov
sahf
jne
movs
out
push
jge
push
xor
sub
mov
push
(bad)
pop
inc
in
xchg
or
pop
aam
push
inc
sub
shl
and
aam
test
pushf
jmp
inc
lahf
(bad)
jbe
fidiv
popf
repz
dec
imul
fld
outs
(bad)
jge
movs
sub
and
ret
or
scas
clc
ret
enter
mov
adc
rcl
mov
mov
jnp
mov
outs
pop
inc
rol
and
cmp
lods
ret
jmp
sbb
mov
push
xchg
xchg
cmp
addr16
mov
rcl
enter
xchg
xor
and
icebp
mov
sbb
adc
mov
xlat
adc
push
out
cmpxchg
faddp
pop
stos
in
pop
(bad)
sbb
xchg
push
sbb
mov
repz
sbb
add
push
mov
mov
imul
rcl
fyl2x
cmp
fs
pop
pop
add
adc
cmp
das
ins
dec
je
icebp
mov
add
aaa
inc
dec
add
lock
shr
cdq
mov
popa
add
push
imul
inc
addr16
pop
pop
cdq
movs
mov
leave
inc
outs
fstp
add
jae
lock
stos
xor
jne
sub
loopne
mov
dec
hlt
in
cmp
or
test
gs
jns
lock
push
dec
mov
push
je
lds
stc
test
pop
aaa
dec
pusha
in
or
movs
sbb
dec
mov
aad
int
mov
popf
fmul
sti
cmp
adc
mov
mov
cld
ins
fdivr
adc
or
mov
arpl
retf
pop
imul
xor
sbb
cmp
mov
adc
or
pop
js
mov
movs
outs
xchg
xchg
inc
cwde
jge
mov
dec
or
add
or
test
xchg
or
out
mov
sbb
mov
push
push
jg
add
and
sub
in
mov
xor
jb
or
jecxz
jle
cdq
rcr
fild
movs
out
js
in
ficom
jbe
pop
inc
loope
mov
push
push
mov
or
mov
mov
hlt
add
and
mov
xchg
mov
(bad)
neg
sbb
adc
hlt
ja
or
adc
cmps
jbe
dec
mov
sbb
dec
pop
cmps
mov
cs
jbe
fwait
je
daa
pushf
xchg
into
cmps
pop
add
daa
mov
mov
pusha
imul
xor
inc
push
cmp
pop
pushf
dec
push
jmp
fs
(bad)
jbe
jns
mov
mov
(bad)
ss
(bad)
frstor
es
nop
adc
arpl
repnz
enter
sbb
pop
subps
nop
aad
(bad)
xchg
jmp
xor
repz
dec
jmp
mov
cmc
fisttp
mov
movs
mov
outs
pop
rcr
mov
rcr
hlt
nop
shl
ficom
dec
outs
test
adc
mov
cmc
popa
loope
adc
imul
cwde
cmp
cmp
jmp
xor
fidiv
sub
push
int3
and
or
popa
cli
mov
or
adc
push
pushf
imul
ret
cld
mov
cmp
adc
cmp
mov
jmp
addr16
pop
int3
ins
bound
cmp
push
xor
push
ror
idiv
xor
adc
jmp
mov
sbb
daa
xchg
push
js
ss
je
nop
sub
scas
lock
mov
mov
into
adc
movs
mov
sub
mov
inc
add
push
lock
sbb
push
and
cmps
jle
fld
test
rcl
fdivr
ret
adc
inc
fisttp
cmps
mov
pop
jne
cld
into
pop
fnstcw
clc
mov
mov
out
shl
nop
pop
neg
icebp
push
jge
(bad)
pop
dec
dec
mov
rcr
mov
add
xor
add
mov
lahf
add
push
(bad)
push
sub
dec
sub
mov
cmps
imul
add
icebp
push
sub
in
jge
cmps
jns
sbb
push
sbb
fild
jmp
shl
or
icebp
fld
sbb
cmp
lods
leave
retf
sti
ror
push
lea
movs
push
pop
loope
mov
in
mov
push
ja
shl
repnz
pushf
mov
aad
iret
jno
out
js
and
sbb
mov
add
mov
xchg
int3
clc
std
cmps
out
mov
shl
(bad)
ja
stos
mov
je
xor
js
pop
sbb
mov
pop
xchg
mov
aad
mov
rol
aas
jae
fistp
shl
aaa
jo
test
mov
sbb
inc
or
pop
clc
(bad)
stos
cdq
dec
xor
mov
lods
aaa
adc
ins
daa
xor
and
out
push
cmc
jns
sbb
call
mov
retw
xor
int3
test
fsubr
iret
sbb
xchg
and
xor
push
push
mul
movs
loopne
xchg
hlt
arpl
and
dec
sub
sbb
inc
icebp
mov
sbb
ins
mov
sbb
test
pop
jae
mov
not
or
xor
jmp
xor
cdq
adc
cmp
and
enter
cmc
inc
aam
mov
or
sahf
aam
jae
jle
inc
out
mov
mov
push
dec
std
js
loop
and
fcomp
in
ds
push
fidiv
aam
xchg
in
push
xor
iret
dec
jmp
(bad)
sahf
shr
shl
cmp
inc
xchg
xchg
xor
stos
adc
aam
or
lea
aas
aam
in
movs
pop
pop
nop
pop
dec
dec
pop
push
xchg
mov
ret
dec
pop
stos
mov
sub
cmp
push
cmp
aam
out
cmp
inc
adc
sbb
push
mov
pop
mov
das
mov
pusha
pop
sub
push
pop
xor
push
xchg
xor
push
mov
and
add
mov
sub
call
fbstp
lock
jmp
dec
add
movs
and
fs
push
mov
push
aaa
and
push
es
push
pop
add
inc
inc
sbb
push
jae
(bad)
jge
add
out
fild
xchg
and
or
std
lods
or
and
scas
mov
xchg
cmps
jl
fistp
xchg
xor
and
inc
test
xor
test
test
ds
inc
je
push
hlt
test
jg
les
and
jg
sub
fucom
xchg
dec
stos
into
cdq
dec
mov
dec
pop
test
sub
inc
or
xchg
jmp
mov
cs
mov
xor
mov
inc
jp
out
or
mov
and
inc
ficomp
jecxz
or
in
push
add
ins
pushf
(bad)
daa
stc
int
mov
aaa
mov
mov
sub
xchg
outs
mov
mov
mov
adc
out
sbb
shr
dec
das
imul
out
sahf
jl
aam
aaa
(bad)
call
mov
(bad)
cmp
ins
aaa
mov
push
and
data16
sahf
(bad)
dec
mov
jle
mov
xor
push
call
add
ins
mov
jo
bound
jge
xor
mov
jge
pushf
inc
mov
mov
push
movs
cmps
ja
aaa
test
xlat
test
iret
stos
pop
ins
inc
push
pop
imul
jbe
mov
cmp
lods
outs
int3
out
lods
fwait
movs
in
pop
push
out
inc
sbb
mov
push
(bad)
out
or
ret
das
cmp
mov
or
std
outs
xchg
pop
rcl
rol
push
xor
adc
sbb
div
mov
ins
pop
cli
mov
movs
dec
(bad)
adc
int
pusha
and
fwait
(bad)
lea
jp
jmp
scas
adc
outs
sub
push
mov
push
sub
ret
imul
rcl
(bad)
jge
mov
mov
add
repnz
and
pop
sub
mov
sub
test
test
imul
jl
hlt
out
push
jo
retf
add
cmp
dec
pop
cmp
dec
mov
mov
cs
arpl
jge
mov
repz
jnp
xor
ds
inc
(bad)
call
pop
push
test
div
into
in
mov
pop
in
aam
sub
dec
inc
stc
jg
cmovnp
sahf
jae
jbe
fs
add
popa
int
jo
into
rol
ins
ficom
out
clc
lods
xchg
mov
cmp
dec
pusha
mov
ja
rcr
cmps
mov
in
or
mov
mov
imul
or
dec
xor
mov
imul
or
fs
dec
imul
push
xor
xor
cwde
pop
jecxz
and
mov
mov
lahf
call
retf
movs
fidivr
es
inc
xchg
rcl
out
sbb
push
and
aad
mov
sub
fcmovnu
xchg
test
or
enter
or
call
jne
pop
push
dec
sub
or
fisub
adc
inc
dec
adc
mov
adc
daa
jmp
cmps
(bad)
push
pop
ror
jbe
push
idiv
popa
sbb
pop
jne
fnstenv
(bad)
cs
cdq
xchg
inc
jae
inc
fsubr
push
retf
mov
sub
shl
mov
push
mov
fmul
push
xchg
xlat
jno
mov
sub
ss
xchg
or
push
xchg
out
inc
ret
mov
(bad)
out
imul
bnd
loope
dec
xchg
das
ss
aam
test
stos
jge
add
and
adc
dec
ds
cmp
shl
out
push
mov
jne
call
fs
jl
cmps
imul
mov
mov
je
push
push
out
in
dec
rcl
jp
aaa
mov
xchg
lock
mov
inc
pop
push
jp
call
fnstenv
push
out
inc
shr
loope
or
pop
jmp
or
outs
cmp
push
out
jp
xor
dec
cmp
and
fnstsw
sbb
xor
mov
jge
mov
aam
(bad)
xor
sub
js
xor
test
in
ins
push
add
mov
in
mov
add
mov
xor
mov
dec
inc
jne
dec
ficomp
mov
inc
mov
ret
fwait
dec
retf
retf
adc
mov
shl
mov
cmp
in
andnps
nop
test
pop
cmc
dec
loopne
dec
std
xor
mov
test
ret
lock
mov
push
fstp
push
add
xor
lock
mov
sahf
mov
out
js
jge
and
mov
cli
scas
test
mov
loope
sbb
sub
cmp
or
sbb
push
push
jl
(bad)
loope
ds
or
xor
sti
jne
or
scas
enter
xor
ins
bnd
retf
addr16
inc
push
(bad)
pop
inc
adc
test
jecxz
ror
inc
pop
sbb
xchg
pushf
repz
sub
mov
das
dec
xchg
jb
mov
mov
stos
neg
addr16
call
cmp
rol
into
les
mov
inc
or
shl
aaa
movs
stos
int
push
cmps
xchg
cmp
cs
sub
cmc
cli
popa
ds
test
inc
cmc
movs
jbe
jbe
xlat
sar
xchg
mov
push
int3
enter
stos
mov
mov
je
scas
xor
bound
(bad)
fild
jg
fs
jecxz
pop
dec
test
dec
arpl
cmc
mov
jne
jle
mov
mov
xlat
xor
mov
pop
movs
mov
cmps
retf
mov
add
sub
scas
inc
mov
xchg
adc
rcl
pushf
je
cmps
hlt
push
mov
lea
js
cmp
adc
arpl
hlt
fwait
cmp
mov
(bad)
jmp
call
out
dec
pcmpeqb
retf
ins
sbb
xchg
jge
or
in
int3
xchg
mov
aaa
or
xchg
sub
push
ror
mov
mov
jb
retf
cmp
ret
dec
jae
fst
or
outs
sar
xchg
stos
sbb
sbb
mov
xor
imul
push
pop
mov
jns
loopne
jns
xor
ficom
or
shl
xor
gs
pop
adc
mov
aad
inc
cmp
mov
mov
push
push
jne
cld
in
retf
test
xor
out
lock
pop
pop
arpl
idiv
scas
jge
mov
mov
add
adc
cmp
sub
sbb
mov
ins
cli
in
fdivr
jmp
add
xchg
ret
jae
pop
std
ins
or
mov
xchg
fimul
inc
stos
push
adc
push
cmp
fs
das
jmp
xchg
jo
pushf
sub
mov
ja
(bad)
sar
scas
push
add
adc
dec
ja
or
xchg
out
or
int
mov
pop
jae
xor
scas
jmp
out
bound
push
mov
pop
inc
push
rol
add
jg
xor
push
leave
stc
pop
push
cmp
sbb
push
sub
mov
push
(bad)
push
ins
and
in
mov
pushf
or
cmp
pop
mov
mov
or
mov
repz
retf
adc
clc
pop
push
jb
jmp
(bad)
mov
cmps
out
outs
aaa
(bad)
repz
jno
mov
push
xor
xchg
dec
lahf
dec
cmp
mov
imul
xor
pop
adc
or
and
or
mov
idiv
popa
push
dec
xor
xstore-rng
cmps
ret
nop
popa
push
pop
xchg
push
scas
or
js
mov
add
call
cmc
inc
ss
mov
adc
and
in
(bad)
enter
adc
xor
jno
xchg
imul
jo
jp
div
cwde
sti
mov
push
xlat
mov
rcr
pop
mov
pop
sbb
dec
dec
inc
pushf
int
cmps
je
push
out
std
dec
adc
imul
push
mov
mov
cmp
xchg
ror
scas
sahf
aaa
mov
leave
sub
inc
jmp
xor
jl
xor
jbe
pop
xchg
xchg
xchg
ficomp
mov
jo
(bad)
call
int
shl
dec
add
cmp
dec
test
adc
stos
add
repz
retf
sbb
mov
and
icebp
dec
lahf
dec
fs
pusha
mov
mov
cmp
xor
cmpxchg
mov
iret
pop
ret
push
bound
mov
xor
pushf
fs
mov
cmc
sti
cmps
rcl
push
cmp
mov
jl
pop
pop
inc
inc
sub
scas
push
(bad)
cmp
fadd
mov
xchg
(bad)
out
ins
hlt
sub
shl
cmp
cmp
xlat
aam
je
mov
mov
inc
jbe
jg
in
push
inc
jmp
or
and
outs
out
cmp
pop
jp
aam
sar
ds
lods
or
push
int3
je
add
fsubr
jmp
jp
mov
jmp
(bad)
repz
aaa
inc
loop
iret
push
jl
jmp
loopne
rep
xchg
icebp
pop
outs
and
xlat
dec
adc
cmps
shl
aaa
jg
mov
xchg
push
mov
cmp
inc
inc
sar
inc
cmps
(bad)
or
(bad)
and
dec
out
ficom
add
loope
mov
movs
fwait
shl
sub
aaa
push
mov
test
mov
ins
or
sbb
aaa
jmp
call
sub
test
sub
rcr
movs
xchg
in
iret
inc
ss
cwde
or
add
ins
fsubrp
adc
jp
test
cld
mov
mov
and
out
iret
shl
dec
jno
nop
adc
mov
fdivr
or
pop
aam
aaa
jnp
in
xchg
icebp
outs
lods
dec
push
jnp
rcr
push
gs
mov
pop
mov
outs
retf
(bad)
xlat
inc
and
inc
push
and
sub
(bad)
cmc
xchg
in
and
out
scas
push
cwde
scas
test
mov
fs
cmp
icebp
iret
dec
jmp
mov
sbb
jne
sbb
mov
and
adc
fstp
and
sub
lock
or
xchg
inc
mov
add
ret
out
test
push
push
or
pop
call
in
lea
gs
inc
or
pop
daa
pushf
ds
mov
aam
fldcw
dec
pushf
(bad)
xor
sbb
mov
mov
fcmovu
aad
jae
jmp
cs
call
push
xchg
lods
imul
rol
pop
cmp
push
int
mov
jmp
imul
push
shr
mov
call
cs
sbb
(bad)
sbb
xchg
sti
mov
js
jge
inc
inc
jnp
shl
repz
pop
mov
ret
call
xor
mov
sub
jg
das
adc
lods
sub
movs
fmul
or
or
pop
cdq
xlat
ret
adc
ins
jns
leave
jb
sbb
jb
jae
pop
adc
fistp
outs
xchg
stos
mov
xchg
shl
int
adc
mov
lock
call
dec
push
mov
aad
and
in
adc
push
or
jnp
(bad)
xchg
fist
mov
lods
jle
push
(bad)
mov
xchg
inc
push
sar
inc
pop
add
pusha
xor
cwde
jecxz
enter
jbe
mov
push
xor
rcr
ss
aaa
ss
mov
push
push
and
(bad)
mov
cmp
je
xchg
mov
hlt
jp
jne
cdq
(bad)
adc
popf
mov
jne
ja
(bad)
and
imul
mov
imul
loop
xor
sub
sub
movs
pop
into
lods
sub
stos
cs
inc
icebp
in
push
sbb
mov
mov
push
xlat
add
jmp
jmp
arpl
push
cld
mov
push
dec
cs
jns
or
and
add
out
jno
enter
or
push
sub
sti
dec
les
xchg
or
inc
outs
fdiv
push
cmps
mov
push
leave
sbb
dec
pushf
je
and
mov
xor
fwait
add
scas
adc
xchg
ins
mov
pusha
sbb
dec
push
push
(bad)
pop
fnsave
add
loope
(bad)
call
add
(bad)
push
les
sub
(bad)
mov
xchg
sbb
ret
dec
jle
scas
test
mov
loope
ja
jne
ds
sub
push
lock
shr
das
in
pop
shr
int
jl
ja
jge
iret
xchg
into
shl
pop
xchg
pop
daa
and
and
jecxz
inc
inc
pop
sbb
add
xchg
mov
imul
push
es
push
fistp
ror
sbb
inc
pop
jmp
mov
add
adc
push
outs
mov
jle
pushf
or
es
mov
inc
les
sbb
mov
xchg
call
aas
mov
retf
cmps
nop
arpl
inc
pop
call
and
push
adc
mov
leave
inc
pop
cmp
cmps
dec
mov
mov
lds
sbb
mov
mov
add
mov
push
sbb
add
sub
mov
cld
cmp
(bad)
pushf
and
call
xchg
cli
or
mov
inc
ds
sbb
je
test
int
sub
pop
push
pop
cmp
aaa
push
or
in
or
lods
mov
out
lahf
mov
add
cli
cmp
and
int
(bad)
test
jo
leave
pushf
ret
(bad)
(bad)
and
push
dec
xchg
xor
sti
dec
dec
push
push
sahf
cmp
arpl
dec
xchg
pop
sub
adc
fsubr
sbb
inc
sti
cwde
arpl
cmps
test
push
mov
mov
pop
mov
dec
dec
call
push
mov
lea
aad
repnz
pop
mov
and
push
dec
jae
xchg
(bad)
lahf
pop
dec
fistp
in
mov
(bad)
out
xor
aaa
xchg
stc
xchg
jae
push
ja
pop
xchg
pop
push
es
sbb
scas
jl
out
inc
jmp
(bad)
wrmsr
outs
test
sbb
ins
inc
cmp
xor
or
pop
ret
push
jge
addr16
mov
mov
stos
mov
retf
pop
add
ror
push
cmps
jmp
pop
push
repnz
mov
les
jmp
(bad)
pop
adc
pop
popa
(bad)
daa
fld
sahf
cmp
push
daa
add
and
cmp
adc
sbb
adc
add
into
sub
mov
(bad)
xor
sbb
retf
mov
cdq
sti
inc
sbb
aam
dec
scas
sbb
pop
xchg
sbb
adc
cmp
(bad)
ds
stc
adc
or
imul
les
inc
call
cmp
dec
rol
push
lods
aaa
aad
sbb
jg
mov
or
sbb
imul
mov
fsub
imul
not
nop
daa
mov
jno
popa
or
jb
outs
xchg
out
mov
ss
sbb
outs
(bad)
pop
mov
dec
jo
pop
jmp
std
mov
pop
mov
dec
call
shl
mov
mov
cmps
adc
push
or
enter
adc
jns
test
pushf
mov
cmp
mov
inc
adc
imul
fs
mov
and
in
std
dec
ja
xchg
jns
jne
or
sbb
or
or
shl
cld
or
mul
xor
lods
jmp
cs
test
cs
sbb
daa
ja
sbb
push
pushf
or
dec
xchg
fwait
xchg
clc
test
add
adc
cmp
mov
mov
sub
test
lea
mov
mov
test
inc
dec
cmps
rcr
push
sbb
xor
pop
push
fmul
push
mov
retf
hlt
jl
lods
int
cmps
clc
xchg
adc
shl
jmp
push
mov
imul
loope
sbb
bound
jmp
js
sub
jae
cmps
test
fdiv
or
mov
retf
test
loopne
or
sar
sub
mov
adc
push
mov
and
or
cwde
mov
add
cmc
outs
outs
fwait
in
test
xlat
adc
shl
and
jns
add
(bad)
(bad)
xor
add
pop
iret
shl
idiv
fsubp
and
xor
outs
test
std
inc
cmps
dec
mov
push
jp
cmps
fabs
push
cmps
xor
adc
leave
lahf
dec
dec
lea
sbb
sub
imul
dec
jle
imul
sti
cs
pop
fadd
outs
or
cmc
sub
xchg
(bad)
cli
outs
sbb
jmp
xchg
mov
push
xor
xchg
iret
xlat
xchg
call
cmp
pop
cmp
mov
push
ins
cmp
into
mov
pop
mov
test
xchg
not
or
outs
sub
ds
retf
xor
adc
mov
jb
pop
mov
shr
pop
shr
retf
adc
test
sub
dec
ds
shl
out
sub
jbe
mov
cmp
add
jo
push
pop
inc
mov
mov
adc
jne
lahf
retf
shl
popf
or
mov
cmp
ret
or
(bad)
mov
or
mov
outs
hlt
cmc
xchg
pop
add
and
or
cmps
arpl
push
jns
clc
and
lods
cmp
imul
lahf
add
lahf
inc
shl
ret
scas
mov
jle
lods
add
push
dec
adc
push
sti
nop
push
add
push
push
xchg
cmp
cwde
call
sbb
cmp
std
bound
cmp
pushf
jae
push
adc
inc
sub
popf
into
ja
mov
sub
mov
(bad)
lds
clc
pop
sbb
outs
and
lea
hlt
out
imul
dec
inc
push
jg
retf
jno
or
adc
jmp
pop
ds
je
div
clc
les
mov
sub
mov
out
push
mov
icebp
mov
and
pop
mov
xor
outs
test
add
scas
inc
ret
or
pop
leave
fs
shl
mov
repnz
pop
(bad)
push
fiadd
mov
std
or
stc
(bad)
xlat
push
inc
rcl
(bad)
dec
mov
inc
loop
ins
leave
inc
dec
sub
or
lods
scas
int
push
jb
cs
fcomp
nop
call
jl
pop
and
addr16
and
ficom
cmp
ins
ret
inc
jle
and
xor
adc
shr
jnp
xchg
adc
hlt
loope
out
loope
sysexit
out
mov
jne
clc
pop
adc
mov
and
cwde
or
mov
retf
dec
mov
rcl
iret
inc
and
gs
pop
mov
pop
inc
bound
sbb
data16
loop
fidiv
mov
(bad)
cmp
faddp
adc
xchg
jne
push
lods
and
(bad)
js
cmc
jo
test
push
push
mul
addr16
mov
or
jnp
mov
dec
jmp
fild
sbb
in
inc
jbe
movs
mov
xchg
ror
and
rcl
inc
adc
cmp
cmps
loop
cmp
mov
(bad)
sar
stos
pop
std
retf
(bad)
scas
push
retf
rol
in
aas
jl
adc
adc
cld
adc
ja
lahf
add
aas
xchg
add
jne
cwde
mov
not
imul
pop
inc
or
lods
xchg
repnz
adc
mov
mov
popf
jmp
cmps
into
dec
bound
xor
ins
lock
cmp
jp
shr
push
dec
mov
add
mov
mov
mov
and
sti
push
adc
adc
push
stos
ins
cmp
jmp
push
mov
into
or
pop
cmc
add
jmp
(bad)
fdiv
xchg
jge
(bad)
pop
dec
sbb
int
(bad)
mov
fwait
stos
mov
loope
sub
mov
lods
inc
xlat
js
xor
pusha
jno
sar
loop
into
test
pop
leave
cli
add
jg
push
jmp
sbb
fxam
aas
pop
mov
mov
mov
mov
js
mov
ret
(bad)
pushf
push
sbb
das
jg
(bad)
xor
in
call
mov
pop
test
popf
mov
retf
mov
pushaw
push
fimul
xor
(bad)
sbb
jno
ins
push
xor
sub
xchg
loopne
jg
ja
sub
call
fiadd
jns
cwde
(bad)
in
stc
xchg
cmc
jmp
outs
xchg
mov
dec
std
cmps
test
fistp
mov
push
mov
lods
ins
les
xchg
adc
leave
inc
(bad)
push
and
cwde
ror
pop
shr
in
pop
add
mov
sbb
nop
xchg
cmp
lods
lods
sbb
lds
mov
push
pop
add
add
mov
loopne
je
fild
jl
sti
fwait
sub
or
cmp
popf
nop
pop
sbb
mov
addr16
mov
(bad)
out
inc
mov
jno
stc
jns
iret
leave
lods
shl
inc
cmp
push
scas
mov
jmp
imul
pushf
push
mov
cmp
add
stc
(bad)
in
pop
sbb
inc
or
repz
mov
imul
and
pop
sub
cld
jne
adc
jl
xchg
cmp
mov
cli
in
repz
add
mov
xchg
push
dec
and
pop
pop
imul
mov
gs
mov
adc
(bad)
jmp
icebp
pop
cmp
or
test
pop
shl
movs
iret
inc
dec
push
mov
or
xor
inc
dec
nop
mov
stos
imul
lods
dec
adc
popa
mov
rol
pop
mov
xbegin
mov
pop
push
stos
pop
aas
scas
movs
fimul
movs
push
push
shl
bound
popf
adc
pop
into
xchg
push
movs
imul
jmp
push
and
out
sbb
or
xchg
sar
inc
cmps
loopne
mov
jg
mov
push
pop
test
(bad)
pop
not
popa
ror
imul
push
das
sbb
jne
mov
fnstenv
(bad)
imul
call
shl
mov
mov
and
mov
jp
mov
dec
push
jo
daa
jp
fidiv
shl
cwde
sbb
popf
xor
jg
aam
js
xchg
fisub
xchg
add
mov
ficom
dec
idiv
nop
or
mov
cmp
inc
xor
mov
lea
xor
jecxz
neg
mov
sbb
paddd
inc
jp
jmp
ins
jle
stc
mov
adc
cmps
retf
repnz
sahf
jnp
dec
loopne
and
inc
add
shr
aam
mov
adc
and
nop
sub
out
leave
sar
jp
ret
inc
jb
or
ficom
fisttp
lahf
in
dec
jb
test
xchg
ret
fnstenv
js
aaa
jno
outs
aad
and
stos
or
sbb
mov
shl
push
push
in
or
addr16
lock
pop
icebp
jp
stos
stos
retf
call
icebp
mov
push
sub
jne
xchg
(bad)
mov
mov
mov
inc
aam
in
es
icebp
push
popa
cmp
xor
test
mov
or
mov
test
push
cmp
mov
inc
addr16
ja
movs
sub
and
or
(bad)
test
(bad)
lods
pop
hlt
das
dec
(bad)
fnstenv
jne
clc
test
mov
lea
xchg
movs
pop
into
sub
dec
loopne
retf
add
(bad)
cmp
stos
sub
ja
push
imul
in
or
out
cmps
xchg
pop
push
pusha
adc
dec
add
push
js
mov
push
in
add
pop
and
sbb
outs
sbb
xor
dec
data16
inc
ins
mov
fcmovnb
jle
sti
(bad)
rcr
mov
(bad)
push
cld
xor
cmp
nop
ins
in
gs
popa
push
aam
popa
pop
jl
fwait
and
loope
push
sub
sbb
push
dec
not
inc
mov
push
out
mov
out
mov
inc
mov
pop
add
aaa
push
jnp
cmp
or
pop
mov
or
add
repz
das
fisttp
adc
sub
cmp
iret
or
xor
outs
scas
mov
imul
add
or
cmps
mov
ret
(bad)
leave
das
push
les
test
xor
or
rcl
push
xor
jge
cmp
mov
sub
jo
ds
or
mov
mov
or
jne
sar
int3
cmp
add
test
mov
and
xor
cmps
or
out
bound
inc
je
add
inc
xchg
and
and
lahf
cwde
dec
lods
repz
dec
scas
dec
jb
repnz
movs
dec
mov
or
xor
mov
xor
retf
jecxz
ins
jne
shr
gs
lods
out
jbe
cwde
sub
inc
xchg
cmp
or
mov
add
jmp
sub
mov
mov
add
push
inc
lods
fwait
sbb
dec
hlt
aam
mov
lock
ror
loopne
bound
jmp
jns
loope
push
js
lock
jp
pop
ret
jae
sub
sbb
mov
dec
sbb
or
and
add
dec
and
add
jne
adc
and
jbe
call
push
jle
pop
ffree
mov
jbe
ret
jbe
imul
iret
adc
cmp
xor
cmp
les
cmp
rol
imul
pop
pop
pusha
sbb
call
mov
cs
pop
and
add
jl
adc
and
push
repnz
lods
xchg
jo
add
push
das
daa
pop
add
xchg
xor
add
popf
xchg
loope
(bad)
adc
js
jae
push
mov
mov
mov
jo
daa
int
cmp
mov
cmp
aas
inc
jne
cmp
push
sahf
cmps
(bad)
stos
mov
inc
aaa
push
xor
or
dec
mov
imul
mov
xor
call
cmp
ins
das
dec
movs
sar
retf
jns
mov
sahf
stos
(bad)
lock
mov
jge
inc
xchg
mov
das
leave
lea
sub
stos
jnp
add
lahf
arpl
or
dec
and
adc
stc
js
inc
arpl
loopne
clc
sub
cmc
pop
enter
ret
(bad)
icebp
jl
stos
rol
jg
push
fist
mov
out
xchg
test
cmps
sahf
sub
(bad)
mov
sbb
dec
adc
jb
dec
jmp
cmp
stos
xor
in
pop
push
adc
jno
add
je
and
clc
cli
mov
pop
or
mov
data16
fstp
scas
xor
pop
adc
(bad)
mov
call
sub
xchg
sub
aad
dec
or
inc
adc
pusha
pop
mov
add
popa
jmp
je
mul
pop
jbe
xlat
mov
cmps
pusha
or
dec
inc
and
pusha
mov
cmp
and
retf
icebp
push
not
lods
mov
xor
stos
add
cmp
sub
shl
or
rcl
or
lds
or
jbe
fadd
je
aaa
mov
jno
iret
xchg
xchg
popf
sub
jmp
sbb
aaa
dec
jmp
ins
mov
sub
data16
lock
sbb
arpl
mov
xchg
sti
xchg
popa
xchg
aad
dec
iret
sub
sbb
(bad)
in
fadd
add
push
jp
sub
mov
fwait
dec
inc
mov
jmp
not
adc
cli
add
xchg
sub
xchg
icebp
arpl
xchg
lods
sub
push
(bad)
nop
add
iret
ins
xchg
pop
loope
sti
cmp
sub
add
xchg
adc
and
push
sub
les
dec
mov
add
mul
or
mov
(bad)
mov
enter
xor
or
out
push
movs
sbb
add
xor
jg
push
pop
hlt
nop
xchg
xor
and
and
jbe
jle
shl
cmps
out
clc
xor
fcomi
push
popf
into
ds
mov
outs
fwait
jmp
mov
pop
ins
call
ret
into
cli
stos
or
push
or
cmps
mov
sti
cli
mov
inc
into
adc
outs
test
cmc
dec
xchg
xor
test
hlt
movs
xchg
mov
fnstsw
int3
sub
push
xchg
inc
mov
mov
leave
mov
push
mul
jmp
fmul
movs
cmp
les
and
movs
fild
xchg
loope
jge
push
push
(bad)
fistp
xor
push
sub
sahf
push
sahf
movs
push
test
lahf
mov
pop
adc
dec
lahf
cdq
sub
cs
je
mov
les
popf
jg
mov
inc
fwait
inc
stos
mov
cmc
fs
inc
jmp
imul
xor
jmp
(bad)
jle
mov
fdiv
mov
mov
adc
(bad)
fidivr
inc
push
ins
adc
call
in
fistp
dec
stos
inc
inc
xor
hlt
fld
push
sbb
add
sbb
mov
test
push
jnp
sub
repnz
ror
inc
icebp
or
sub
mov
and
aad
push
mov
stc
ss
repnz
mov
xchg
mov
rcl
adc
mov
add
sar
scas
aaa
mov
and
dec
les
pop
mov
cld
or
cmp
add
xlat
sub
push
sti
adc
fwait
and
test
xchg
and
mov
dec
push
or
mov
(bad)
rcl
pusha
xlat
jmp
pop
mov
mov
or
cmps
sbb
pop
retf
pop
xlat
fld
out
test
bound
lods
jp
fiadd
hlt
push
movs
sub
fcmovbe
cmc
inc
jns
out
mov
hlt
jg
aad
mov
or
adc
dec
(bad)
cmp
push
push
jecxz
mov
daa
sbb
jae
xchg
xchg
and
sbb
pop
les
daa
fldpi
jge
loop
or
ja
(bad)
retf
call
sahf
cld
test
cmp
inc
xlat
sahf
xchg
push
cmp
shr
fist
(bad)
aam
cdq
jno
and
push
xchg
lods
jmp
fcmovb
push
ins
ins
popa
stc
push
test
shr
xchg
and
in
test
jmp
popa
dec
xchg
sbb
mov
or
cs
jnp
clc
xor
sub
in
sub
sub
pushf
jmp
xchg
jb
jge
pop
push
bnd
jns
cmp
movs
out
and
addr16
jge
sbb
loopne
jo
daa
lods
scas
movs
in
neg
jg
cs
add
in
mov
(bad)
jae
inc
jb
clc
add
jl
cmc
sbb
pop
icebp
sub
ja
pop
adc
mov
push
sub
adc
neg
fidivr
pop
fsub
outs
sub
mov
cmps
push
mov
(bad)
dec
out
push
nop
shl
pop
push
ror
(bad)
and
clc
outs
call
jmp
dec
(bad)
mov
push
xor
jg
sar
or
push
sti
jne
dec
scas
clc
dec
mov
jg
aaa
push
retf
scas
sti
mov
pop
cld
sbb
xchg
hlt
sti
test
mov
mov
mov
pop
fisubr
test
mov
dec
jecxz
dec
and
pop
cmp
fisub
inc
(bad)
cmps
sub
call
xchg
sahf
mov
loop
fsubr
repnz
fcom
xchg
push
stos
lock
jmp
pusha
inc
push
ss
gs
or
push
data16
test
add
inc
ds
cmp
fistp
inc
or
cs
movs
stc
and
mov
pop
imul
sub
sbb
cmp
dec
lock
ins
not
mov
add
or
xchg
out
pop
popa
loopne
cmp
repz
outs
jbe
icebp
rol
retf
cmp
or
cmp
cmp
ins
fadd
sub
or
xor
sub
mov
mov
ins
cwde
sub
leave
and
jno
jmp
xchg
xchg
lods
jo
sbb
cli
or
sub
in
jge
sbb
xor
xchg
das
push
xlat
sub
fwait
or
stos
xlat
inc
push
push
mov
sub
push
mov
or
sbb
lods
push
loope
jb
les
fadd
fadd
test
shl
mov
inc
out
call
xchg
(bad)
fst
dec
adc
xor
xchg
outs
gs
(bad)
mov
mov
xor
mov
dec
mov
enter
cmp
scas
cmps
aaa
clc
ja
retf
hlt
or
ss
add
fs
outs
vmovaps
dec
jp
xchg
sbb
sahf
iret
jmp
into
inc
adc
adc
ins
(bad)
pop
pop
dec
popa
adc
sahf
loopne
pop
fdivr
mov
call
lods
adc
cmp
add
adc
movs
xchg
icebp
push
hlt
ins
lea
movs
push
mov
mov
jns
inc
inc
(bad)
in
dec
loope
push
xchg
xor
and
fldenv
xor
mov
mov
std
in
dec
(bad)
retf
mov
mov
imul
addr16
xor
dec
test
cmp
adc
adc
pop
jmp
inc
enter
cdq
clc
cmp
jl
add
int
push
test
push
cmp
mov
mov
push
cs
push
out
call
call
push
not
shl
or
push
icebp
cld
xor
mov
hlt
lahf
fld
mov
icebp
xor
in
push
mov
imul
and
xchg
rcl
inc
hlt
xchg
movs
ins
ror
jecxz
sub
push
fst
in
cmp
lahf
xchg
jns
mov
xor
int
push
loopne
jbe
inc
ins
loope
div
mov
mov
les
(bad)
ja
dec
cmps
sbb
sub
and
sbb
cmps
xor
es
pusha
or
fs
cli
les
repnz
mov
or
movs
cmp
test
div
dec
adc
data16
imul
sub
dec
cmp
sbb
cmp
sbb
jge
mov
jl
enter
xor
adc
dec
call
and
test
sbb
ror
aad
xchg
hlt
shr
iret
xchg
out
inc
cmp
(bad)
xor
dec
or
std
and
push
jmp
retf
and
mov
test
jp
out
dec
mov
or
jl
loop
jae
adc
popa
pushf
out
add
test
and
jle
push
mov
cld
leave
outs
mov
call
adc
dec
js
dec
inc
pop
into
ficomp
inc
dec
shl
pop
xchg
push
pop
arpl
xor
push
mov
inc
icebp
xor
xchg
retf
loop
pop
push
mov
ds
mov
pusha
loop
data16
sub
jmp
cwde
jmp
(bad)
scas
jmp
sub
test
out
out
xchg
jo
out
pop
mov
sub
gs
add
fst
inc
inc
(bad)
pop
lahf
jmp
pop
pushf
mov
xor
push
mov
int3
sti
hlt
push
leave
lea
add
mov
jg
cmps
(bad)
ds
cmp
sub
mov
xor
push
clc
mov
sbb
cmp
sub
pop
int3
pop
test
pusha
pop
inc
lahf
inc
add
retf
or
jl
addr16
mov
into
xchg
adc
and
jg
ss
push
push
cdq
rol
cmp
sbb
jmp
or
mov
in
or
icebp
and
fxch
clc
loope
out
mov
movs
or
push
mov
pop
hlt
adc
stc
mov
imul
mov
cld
pop
fcmovnu
xor
aaa
sub
(bad)
sub
add
ficomp
jmp
clc
mov
inc
or
xchg
push
sar
mov
jl
aas
cmp
push
dec
imul
mov
pop
popf
test
aaa
sbb
lock
leave
adc
jo
cmp
xchg
inc
push
inc
out
adc
out
and
repz
int3
aad
daa
aas
sar
cs
gs
and
scas
xchg
(bad)
out
add
push
or
push
loope
and
or
pop
cli
ins
ffree
outs
pop
pop
and
add
xor
add
das
adc
push
sub
push
stc
xchg
imul
sub
cmc
jg
jl
(bad)
stos
neg
xchg
or
pop
sbb
fwait
pop
les
sbb
dec
push
iret
xchg
xor
(bad)
ins
aas
or
dec
pop
pop
sub
mov
aaa
inc
cld
retf
aas
pushf
xlat
bound
stos
add
cwde
(bad)
jmp
push
mov
inc
xor
sbb
jno
and
fadd
sahf
pop
cdq
fwait
pop
jmp
lock
inc
call
and
push
cmp
lods
dec
mov
or
aas
inc
fs
imul
inc
sbb
ror
cmc
bound
sub
retf
pop
mov
push
clc
fwait
push
mov
or
call
call
int3
xor
sub
mov
mov
popa
cmp
xor
xchg
vcvttps2dq
test
in
push
and
ror
sti
mov
inc
outs
outs
xor
gs
cmps
xchg
push
mov
push
dec
sbb
mov
jo
add
stos
xor
jnp
xchg
scas
cdq
jno
jnp
add
adc
or
sbb
push
dec
(bad)
loopne
mov
jne
mov
add
sbb
jnp
or
cmp
popa
ins
mov
cdq
xor
xor
test
call
(bad)
shl
mov
xchg
and
jmp
data16
(bad)
out
inc
mov
add
xor
sub
lea
lods
pop
xchg
pop
ja
and
push
cmp
pop
add
cmp
inc
adc
repnz
xchg
frstor
push
test
(bad)
std
stos
iret
jo
inc
dec
call
rol
and
mov
shl
and
push
mov
popf
and
data16
mov
mov
ss
ret
loope
jmp
lea
lea
pop
div
xchg
into
popf
mov
jl
cmp
jecxz
pop
es
retf
push
(bad)
pop
mov
sub
in
es
inc
ror
adc
call
stc
daa
cmc
pop
pop
add
mov
call
dec
mov
ins
cmp
jg
addr16
push
clc
jmp
mov
sahf
cmp
div
hlt
mov
mov
xchg
jnp
arpl
and
jg
sub
xor
or
push
es
sbb
aad
push
or
jbe
sbb
aam
add
icebp
adc
mov
pop
ss
and
push
jmp
inc
stos
shl
fst
movs
imul
out
imul
push
jns
mov
adc
lds
or
(bad)
xor
(bad)
adc
out
adc
inc
sub
out
xchg
jo
cld
dec
cmp
sub
(bad)
adc
repz
xchg
sar
xchg
pop
xchg
jae
xchg
adc
add
mov
out
add
mov
inc
int
pop
dec
adc
pop
jp
xor
in
das
sub
sbb
mov
fs
fidivr
or
dec
jbe
adc
pop
dec
in
or
out
dec
ss
outs
data16
xchg
mov
xor
jo
and
mov
add
outs
retf
sub
cmps
mov
or
mov
push
inc
shl
das
jae
push
add
dec
sub
out
ins
imul
sbb
out
scas
and
dec
or
(bad)
shl
and
mov
in
add
leave
fistp
and
adc
repz
push
gs
jecxz
jge
shr
iret
push
popf
cmp
xchg
in
inc
sbb
mov
or
mov
es
jg
pushf
inc
out
fsub
mov
test
addr16
push
sub
iret
or
jns
xor
inc
dec
push
push
jb
int3
inc
mov
mov
lea
push
adc
and
pop
pop
jmp
jge
jl
xor
lea
ror
out
(bad)
adc
or
add
sbb
xchg
pop
mov
push
pusha
ret
or
mov
inc
jmp
xor
(bad)
test
cmps
mov
sub
out
xchg
enter
(bad)
sti
add
mov
enter
inc
rcr
push
in
add
ret
out
sbb
mov
pop
shr
test
ret
sbb
jle
data16
xchg
pop
retf
pop
in
popf
scas
(bad)
fstp
and
iret
xor
push
xchg
(bad)
cmp
imul
ret
ret
mov
jle
sbb
in
rcr
dec
mov
pop
jbe
lods
push
mov
cmc
jge
sbb
push
cld
clc
cmp
loop
fwait
idiv
push
movs
cmps
gs
sbb
and
pop
aaa
xor
fmul
inc
cmps
or
std
ss
adc
fs
cdq
mov
add
and
aad
hlt
mov
ja
(bad)
xor
mov
or
dec
mov
(bad)
jmp
je
dec
enter
pop
push
mov
dec
jb
imul
xchg
inc
xlat
pusha
gs
scas
ret
or
(bad)
pusha
cdq
jle
dec
test
gs
repnz
imul
and
and
jmp
mov
mov
leave
out
mov
xor
sbb
es
mov
dec
movs
mov
xor
xchg
xor
or
in
or
adc
adc
adc
sub
jae
loopne
scas
leave
out
js
test
ins
sbb
xor
inc
xor
loope
jmp
sbb
dec
mov
jo
frstor
mov
test
lods
not
scas
jno
lahf
into
retf
pop
ins
mov
jb
mov
call
push
test
mov
pop
call
mov
ret
int
xchg
repz
stc
xor
jmp
sbb
pop
pop
call
movs
in
(bad)
and
push
inc
ror
scas
mov
xchg
mov
ret
ror
mov
fsubr
dec
mov
dec
ror
mov
cmps
(bad)
into
mov
cmp
xor
hlt
mov
or
aas
out
jg
test
jbe
push
outs
xor
ret
stos
mov
add
les
mov
or
push
mov
jecxz
add
or
pop
xor
cmps
pop
popf
jp
dec
inc
movs
test
jno
mov
loope
and
or
arpl
adc
cmp
inc
cld
adc
jl
push
mov
movs
and
adc
sub
stc
in
cmp
test
cdq
mov
int
mov
sti
mov
imul
movs
fcomp
pusha
adc
pushf
mov
sub
mov
cwde
test
ror
out
xchg
lea
aad
sub
xchg
call
(bad)
mov
jns
std
sahf
add
int
xchg
out
fsub
pop
add
xchg
ss
mov
dec
add
pop
test
xchg
imul
mov
enter
retf
xchg
jg
push
das
aam
or
and
cmp
sub
in
call
fidiv
lea
(bad)
sub
add
jp
pop
pop
ret
adc
push
bound
js
in
int
ins
push
movs
cmp
xchg
pop
iret
outs
(bad)
iret
daa
arpl
mov
dec
adc
sahf
aad
out
pop
in
cmc
dec
ret
test
mov
or
jp
push
mov
fwait
(bad)
mov
dec
dec
add
scas
ss
les
mov
pop
pop
adc
test
pop
mov
mov
cld
repz
xor
int
cmp
out
jge
adc
(bad)
(bad)
jl
or
and
leave
test
fcomp
mov
(bad)
fisub
cmp
or
test
adc
fcmovu
shr
jmp
js
bound
sbb
inc
mov
add
das
or
push
pop
xor
pop
and
in
sbb
xchg
sbb
cmc
xchg
inc
and
in
or
jne
pop
hlt
leave
xchg
xchg
and
jmp
add
xor
js
and
mov
in
mov
inc
xchg
mov
test
push
adc
and
and
rol
iret
xlat
aad
mov
addr16
pop
test
and
imul
push
sub
or
lods
mov
xor
pop
pop
sub
and
adc
cwde
gs
sbb
adc
(bad)
(bad)
loopne
jl
dec
test
in
inc
cmps
push
leave
test
js
not
push
leave
fldenv
(bad)
mov
lock
in
addr16
mov
mov
mov
and
js
scas
sar
mov
shr
fcmovne
jo
movs
out
icebp
sbb
push
inc
aam
movs
aam
jns
xor
ficomp
dec
or
ins
and
inc
pop
out
mov
js
cs
aaa
test
cmp
fstp
and
and
cwde
fmul
lds
(bad)
div
push
pop
jl
in
jg
xor
push
(bad)
mov
call
mov
mov
cmps
(bad)
(bad)
fsub
aam
(bad)
mov
aaa
sbb
jns
sub
and
outs
jo
mov
fistp
iret
mov
sar
add
xchg
and
inc
(bad)
cld
pop
pusha
es
mov
xor
pop
adc
aaa
sub
loop
test
ret
pop
sar
nop
add
cs
jmp
js
pop
(bad)
push
sbb
out
mov
jns
lods
rcr
jne
inc
inc
(bad)
stc
popf
movs
and
mov
jo
bound
xor
sti
push
mov
dec
push
jbe
pop
daa
xchg
jns
xor
sbb
scas
jae
ret
fmul
mov
daa
cs
icebp
and
lahf
jecxz
xchg
mov
dec
imul
imul
jg
jb
add
jb
mov
cmps
mov
mov
leave
xchg
inc
fdiv
mov
out
out
fisubr
mov
iret
aaa
out
ret
inc
dec
xchg
xor
push
ja
add
pop
je
aam
sbb
xlat
out
out
jmp
mov
pop
mov
adc
es
mov
xchg
aaa
(bad)
dec
pop
fist
jae
leave
xor
add
jo
push
xor
pushf
lock
pop
popf
mov
fsubr
mov
mov
and
pop
retf
in
retf
jge
cmp
inc
es
movd
addr16
xchg
pop
mov
cld
movs
add
jae
xchg
fxtract
pop
and
repnz
pop
rcl
fwait
aad
fdivr
bound
ror
jns
sbb
push
addr16
and
out
jne
cwde
gs
movs
(bad)
(bad)
arpl
jns
test
or
call
pop
mov
daa
fidivr
add
or
mov
sbb
out
out
lea
mov
sub
lea
ins
inc
mov
loopne
movs
fmul
jno
ret
out
and
sub
and
or
jmp
gs
sbb
add
mov
fldenv
push
and
or
push
imul
jl
jp
out
outs
xchg
inc
jecxz
(bad)
xchg
or
out
inc
cs
mov
push
test
and
pop
sub
mov
jo
ds
jns
bound
or
sbb
or
xor
retf
aad
test
jmp
push
scas
or
sub
mov
and
jmp
xor
outs
or
cmp
mov
in
xor
xor
repnz
push
push
shr
out
into
jo
loop
inc
xor
sbb
imul
cmp
scas
jmp
cld
xor
neg
int
bound
jl
sti
call
std
sub
(bad)
cmc
add
enter
and
add
push
popf
cmp
sahf
jmp
bound
std
scas
or
xlat
sub
push
mov
push
pop
mov
shr
cdq
lds
fcmovbe
xchg
sbb
and
test
mov
loope
es
popf
pop
inc
or
repz
jo
add
and
inc
pushf
repnz
sahf
adc
xor
xchg
cmp
xchg
cmps
jecxz
call
std
xchg
push
mov
mov
cmp
mov
sbb
push
aad
lahf
sbb
or
and
(bad)
cmovle
cmp
add
push
push
mov
jl
cmp
push
(bad)
mov
adc
test
sqrtps
pop
dec
sahf
pop
push
sbb
mov
mov
xchg
pushf
in
or
out
int3
inc
or
mov
pop
pushf
jbe
mov
fidiv
in
or
popa
fidiv
js
pop
loop
lods
or
out
jno
pop
or
lods
push
clc
call
jge
cmp
cmp
nop
mov
sub
dec
(bad)
stc
add
lds
xchg
pusha
add
inc
int
fidivr
test
rol
and
pushf
sub
cmp
mov
lods
imul
mov
mov
xchg
or
rol
rol
lods
pop
jno
mov
pushf
and
mov
cld
adc
outs
mov
scas
and
fdiv
(bad)
mov
inc
(bad)
xchg
push
outs
jle
sbb
mov
call
cli
mov
dec
xchg
or
pop
cmp
call
shr
scas
scas
inc
jno
cmps
dec
xchg
cmp
les
xchg
idiv
ret
sbb
hlt
jl
in
test
dec
pop
and
mov
push
xchg
pop
push
and
mov
mov
test
js
ror
popf
cdq
hlt
jb
mov
ins
adc
xchg
cmps
push
lea
xchg
jmp
lods
movs
and
adc
jle
mov
push
add
mov
test
cmp
les
jmp
push
imul
push
out
push
cs
rcl
or
and
lock
cmp
push
test
in
adc
mov
jp
sbb
dec
mov
push
bound
out
push
dec
mov
push
xchg
dec
aaa
xor
dec
sub
repnz
test
int
outs
dec
or
into
push
cmp
cmp
es
mov
xor
mov
add
scas
inc
lock
push
sbb
in
imul
stos
push
xchg
push
push
push
xor
or
rcl
cmp
test
cmp
out
jb
out
addr16
fst
pop
lds
cmps
xchg
lds
out
push
pop
in
movs
jo
sub
add
mov
dec
leave
or
cs
push
jmp
aaa
outs
idiv
mov
mov
mov
in
enter
ficomp
sub
jmp
sbb
jnp
test
xor
lahf
jmp
sub
icebp
and
sub
leave
xor
adc
jp
push
jns
cld
mov
mov
arpl
and
loope
jge
icebp
and
fwait
mov
outs
sub
icebp
cli
fbld
pop
mov
ror
cmp
in
fcmove
cmp
mov
test
scas
lds
pop
aas
sub
mov
sbb
push
mov
xchg
cli
pop
js
adc
sti
and
or
adc
inc
adc
mov
adc
mov
ins
mov
jle
jae
and
dec
sahf
(bad)
nop
les
out
or
sbb
clc
test
mov
adc
pop
inc
cmp
cmp
xor
repz
ja
mov
cmp
adc
cmps
mov
jle
stc
stc
adc
sbb
lea
adc
dec
dec
xchg
xchg
jnp
mov
xchg
adc
sub
mov
sub
jae
cmps
cli
xor
aaa
push
jg
retf
(bad)
js
xor
sbb
xor
ret
xchg
movs
repz
fcomi
xor
jb
and
or
arpl
adc
sbb
push
cmps
mov
icebp
shl
out
clc
adc
mov
add
pop
or
jecxz
sub
and
mov
and
das
xor
ds
inc
fst
es
daa
adc
mov
jmp
sar
out
add
nop
daa
adc
(bad)
(bad)
lods
fisttp
cli
cmps
outs
test
pushf
jnp
and
or
fistp
ror
jge
mov
adc
cld
rcl
xchg
or
mov
sub
jmp
add
sub
dec
push
mov
aas
inc
or
jns
loopne
or
cmps
test
inc
xor
outs
popa
das
push
imul
fidiv
mov
into
mov
mov
sub
add
cmp
mov
into
xor
push
out
popa
cwde
shl
dec
sbb
dec
lgs
cmp
retf
cwde
jno
sbb
jo
jbe
nop
out
xor
outs
inc
and
add
mov
test
(bad)
out
loope
ror
mov
test
aad
sbb
sub
inc
sub
add
dec
cmps
mov
rcr
pop
xchg
in
les
test
jnp
mov
jg
stc
and
pop
stc
outs
adc
lock
stos
ins
mov
jecxz
or
inc
jbe
(bad)
mov
jnp
jmp
jno
popa
mov
pop
or
out
scas
data16
bound
daa
mov
div
and
inc
int3
lods
push
repnz
xchg
or
aaa
pop
mov
inc
das
scas
mov
mov
pusha
(bad)
je
shl
xchg
lock
stos
adc
xor
pop
les
ret
addr16
cmc
inc
or
dec
pop
xor
in
mov
add
mov
test
imul
cmp
push
stos
or
movs
movs
push
mov
fdivr
mov
xor
cmp
stos
inc
fwait
sbb
and
dec
cmps
lock
pushf
or
enter
sub
pop
push
cmp
pop
mov
inc
jmp
dec
mov
movs
out
aaa
cli
mov
mov
push
lods
mov
xlat
adc
inc
ffreep
pop
pop
ss
xchg
xor
push
je
pushf
xor
cld
xchg
popf
cmps
jns
sbb
out
adc
mov
in
test
dec
sahf
mov
imul
daa
cmps
cmp
arpl
lds
or
sub
sbb
aad
push
mov
or
aam
inc
push
mov
rcl
mov
fistp
mov
jecxz
test
mov
enter
sbb
shl
cmp
push
mov
pop
mov
neg
(bad)
imul
cmp
mov
popa
mov
mov
jge
aas
cmps
mov
cmps
and
call
add
in
das
ds
mov
mov
cmps
xchg
add
or
push
push
push
mov
dec
jle
rcl
test
mov
fldenv
xchg
lds
je
pop
movs
pop
mov
gs
jae
pop
addr16
pop
jl
faddp
ret
test
pop
stos
sbb
sbb
sti
mov
mov
out
inc
mov
jp
inc
ins
adc
sti
imul
pop
cmp
push
call
pushf
outs
sbb
mov
dec
clc
(bad)
adc
inc
hlt
mov
test
scas
xor
loope
rcl
mov
sub
call
jo
jg
mov
(bad)
mov
icebp
cmc
mov
rol
cmps
hlt
mov
daa
cmp
or
adc
outs
xchg
jmp
fcmovb
lds
fistp
mov
ins
les
mov
sahf
adc
mov
xchg
and
cmps
repnz
sbb
add
pop
mov
out
hlt
scas
mov
fcom
frstor
in
cmp
(bad)
shr
inc
in
lods
(bad)
mov
xor
test
hlt
fld
adc
pop
cs
cmp
repz
mov
and
iret
jae
mov
test
xor
add
movs
and
sub
push
xchg
pushf
xlat
inc
mov
pushf
fsubr
cwde
ins
retf
scas
push
dec
or
shr
mov
mov
retf
jmp
or
scas
dec
xchg
inc
dec
jge
retf
pop
daa
movs
sub
fs
adc
(bad)
es
or
cld
sar
int3
mov
xchg
test
ins
mov
cmp
das
and
(bad)
mov
mov
outs
pop
imul
mov
jle
mov
cmp
pop
xor
mov
and
pusha
add
outs
call
pop
and
(bad)
xchg
jnp
aam
test
test
and
int3
or
pop
mov
lock
sub
(bad)
jo
mov
scas
dec
and
icebp
adc
cld
adc
xchg
pushf
sbb
loop
inc
(bad)
lea
mov
mov
sub
loopne
loop
(bad)
pop
pop
std
out
mov
mov
movhps
mov
push
inc
sbb
cmp
or
push
leave
dec
or
push
dec
outs
repz
or
int
pop
shr
call
adc
xchg
gs
in
out
push
add
gs
(bad)
pop
and
movs
dec
pop
xchg
outs
aaa
fcom
push
jle
sub
jg
push
dec
rol
(bad)
inc
dec
add
jmp
bound
(bad)
ret
sub
mov
lods
mov
pop
mov
mov
mov
pushf
mov
xchg
enter
pop
sub
stos
xchg
loopne
into
rcl
repnz
inc
cmp
push
mov
rcr
lock
or
jns
mov
lahf
ins
mov
and
cmps
mov
ret
bound
or
xchg
int
or
movs
ins
xor
sti
addr16
mov
dec
inc
inc
dec
call
mov
outs
dec
xor
imul
loope
ja
dec
cmp
xchg
mov
and
adc
cwde
push
call
fidivr
pop
inc
inc
xor
arpl
xchg
dec
pop
xor
in
std
xchg
js
icebp
sbb
daa
aas
cmp
lock
std
xchg
xor
inc
pop
(bad)
mov
retf
cmp
mov
mov
xor
adc
xlat
cmp
sbb
out
cmp
mov
mov
int
nop
icebp
sti
push
nop
dec
cmc
mov
mov
pop
jmp
ins
push
push
fisub
jmp
loop
cs
outs
test
stos
xor
dec
jl
push
lea
or
out
scas
fucomp
lods
inc
aam
push
mov
jb
out
aaa
retf
sbb
jmp
xor
test
sub
pop
pusha
mov
loope
test
push
jg
das
xchg
jmp
fistp
push
or
das
imul
mov
(bad)
mov
add
push
or
xor
mov
hlt
sbb
mov
mov
stos
fdiv
cmc
push
int3
addr16
mov
cli
fwait
int3
mov
mov
(bad)
clc
pop
xchg
inc
mov
inc
das
ror
jb
jb
jo
(bad)
(bad)
xchg
test
fidiv
push
pop
pop
lods
fild
add
iret
movs
cmp
nop
push
and
xchg
jge
movs
mov
rol
icebp
rcr
ret
shl
cmp
push
(bad)
jmp
sub
out
dec
xchg
or
arpl
inc
sub
ss
lods
loope
jo
mov
test
push
sub
sbb
sub
sub
push
outs
stos
dec
aaa
xor
mov
adc
xor
(bad)
(bad)
call
fadd
mov
mov
daa
retf
sbb
fwait
iret
data16
or
iret
lahf
popf
push
ins
dec
(bad)
sahf
and
add
outs
in
push
jb
lods
aaa
add
punpckhwd
mov
fwait
les
fisttp
mov
popa
enter
xor
aam
frstor
pop
icebp
xchg
cmp
jne
js
dec
and
adc
adc
xlat
jo
adc
into
clc
inc
ss
popf
adc
mov
xor
enter
dec
cmps
ror
mov
add
addr16
inc
pop
mul
add
mov
imul
xor
(bad)
data16
pop
(bad)
dec
inc
outs
jl
push
jne
mov
aad
stos
rcr
jo
pop
adc
ja
mov
push
mov
push
test
fimul
fs
add
ss
xor
lea
add
ficomp
mov
adc
into
out
jg
adc
mov
cli
jg
shl
mov
test
int3
pop
fisttp
imul
fld
(bad)
inc
fld
test
cwde
test
lock
xor
arpl
fidivr
xor
adc
rcr
mov
sbb
js
fs
jge
dec
jl
outs
into
mov
mov
add
xor
arpl
push
dec
xchg
and
xor
mov
inc
push
xor
and
imul
sub
mov
enter
mov
fs
imul
repz
or
or
jo
mul
pushf
loope
fwait
xchg
inc
sahf
cmp
xor
push
leave
cmp
push
sbb
loop
mov
push
cmp
sub
push
int
(bad)
ins
sbb
xchg
or
gs
sbb
ficom
imul
ret
pop
mov
mov
cmp
aas
outs
or
daa
std
inc
xlat
aas
pop
inc
cs
push
int3
out
out
stc
xlat
bound
outs
retf
fsub
or
pop
add
rcl
mov
mov
pushf
loope
call
stc
mov
fcomp
dec
and
add
popf
mov
xor
cwde
addr16
es
or
xor
lods
jle
sti
sub
cmp
adc
mov
std
cmps
mov
sbb
fs
mov
call
xchg
add
and
sub
inc
adc
push
ja
mov
mov
push
or
mov
xchg
sub
neg
xchg
pop
mov
and
dec
cwde
jnp
xchg
xlat
cmps
push
call
ror
cli
lea
stos
cmps
in
bound
cmc
rcl
movs
dec
addr16
fidiv
and
inc
cmp
ds
cmp
(bad)
push
push
retf
pop
iret
sub
repnz
pop
pop
xchg
ds
add
dec
test
fisubr
es
cmp
sbb
cwde
out
ret
push
pop
push
xlat
mov
and
pusha
(bad)
sub
popf
adc
pop
ds
ret
mov
jo
(bad)
imul
adc
test
or
jmp
gs
das
mov
neg
jg
in
jge
xor
and
bnd
icebp
(bad)
inc
sub
push
inc
dec
aad
push
mov
leave
inc
cmp
dec
idiv
sahf
or
or
or
add
test
out
push
or
sub
inc
jmp
pop
jge
cmps
adc
in
sub
dec
nop
retf
addr16
repnz
push
xlat
in
mov
lods
push
xor
mov
xor
pop
push
or
dec
or
or
movs
xchg
xor
rcl
inc
stc
mov
xchg
jmp
or
les
test
test
popf
lods
cmp
jmp
xchg
sbb
mov
adc
sar
push
jnp
loop
pop
push
mov
jo
popa
or
call
in
xchg
lock
popf
push
sub
jbe
add
ret
(bad)
shl
jns
mov
jl
inc
push
xchg
lahf
xchg
not
sbb
mov
and
push
or
pop
das
sbb
cld
inc
inc
int3
aas
jecxz
je
scas
jb
push
and
sub
leave
jmp
inc
jae
jmp
xchg
arpl
mov
mov
aaa
gs
imul
(bad)
fisub
aad
sbb
mov
cmps
retf
adc
mov
inc
and
sub
add
cli
hlt
lahf
ds
xlat
outs
jl
dec
lahf
dec
call
call
retf
push
cmp
sbb
aam
jbe
sub
aaa
pop
push
ja
imul
into
addr16
jae
xor
scas
mov
cmp
iret
popa
test
xor
adc
loop
nop
push
inc
pop
jl
mov
lea
fwait
movs
call
dec
popa
push
ret
mov
jle
rcr
iret
mov
and
fild
and
or
pop
lods
xchg
and
pop
movs
lods
mov
push
xor
ins
rcl
test
(bad)
cmps
sar
retf
mov
xor
stos
mov
(bad)
xor
add
into
sbb
cmp
mov
jp
jp
cmps
push
mov
in
or
out
outs
daa
arpl
sbb
lds
scas
mov
xchg
les
or
test
cmp
bound
xlat
movs
jno
cld
mov
cli
cmp
adc
lods
fld
ja
mov
mov
jecxz
mov
xor
pop
or
shr
and
push
mov
jmp
mov
xchg
ret
and
push
push
(bad)
dec
sbb
repnz
mov
jge
and
dec
das
daa
shr
add
leave
retf
sti
adc
call
mov
mov
sbb
pop
ret
jno
add
jl
jle
sar
mov
mov
(bad)
cmps
xor
call
push
out
dec
outs
mov
je
sub
cmp
mov
sar
call
sub
sahf
or
jnp
mov
pop
stos
sti
lahf
sbb
mov
hlt
mov
add
jbe
pop
std
and
push
dec
mov
xlat
mov
mov
cld
test
sahf
jo
(bad)
test
in
lock
pop
pop
jo
or
xor
add
pushf
xchg
inc
xor
jo
xchg
ror
test
ds
push
add
dec
js
sbb
test
(bad)
cmc
retf
arpl
mov
lea
and
ret
shl
xlat
xchg
pop
mov
mov
xor
or
outs
mov
cmp
fidivr
and
inc
jbe
dec
shl
or
ins
cmp
xchg
repnz
mov
adc
or
icebp
retf
jno
data16
pop
jp
mov
inc
jns
inc
shr
mov
mov
inc
enter
cmp
add
cmc
mov
push
xor
aaa
push
imul
mov
ins
shl
or
or
pushf
stos
add
out
sbb
mov
sub
(bad)
ss
loope
loopne
sub
or
sub
cmp
push
mov
cmp
xchg
cmp
add
ins
fwait
int
ss
mov
jmp
cwde
(bad)
stc
mov
dec
dec
cmp
mov
das
mov
add
mov
push
out
pop
popa
aam
inc
into
dec
mov
mov
ret
outs
imul
push
in
mov
dec
cmp
sti
in
jnp
or
or
cmps
iret
bound
into
cmp
adc
inc
fld
or
retf
push
cs
repnz
stc
mov
je
shr
ds
mov
or
inc
xor
push
sub
fdiv
jns
xor
out
mov
cmps
out
das
loope
jl
mov
cmp
ret
or
jmp
cmp
inc
push
jecxz
and
lods
in
sub
cwde
inc
mov
mov
sti
and
data16
sub
push
bound
cmp
or
xlat
inc
ins
ins
cmps
mov
outs
retf
ss
mov
xchg
cmp
leave
pop
xchg
and
je
lock
xor
mov
retf
lds
(bad)
mov
fimul
lods
popa
or
xchg
mov
jp
test
xor
in
retf
adc
inc
sbb
outs
and
fstp
ret
cmp
sbb
jae
(bad)
or
inc
sar
fisubr
push
pop
inc
adc
lock
mov
rcl
pop
bound
pop
xor
xor
out
xchg
sar
ins
aaa
popf
xor
repz
test
sbb
push
div
aaa
repnz
pushf
cmp
push
cld
or
xchg
and
in
das
call
sti
sar
lods
lea
mov
mov
shr
ds
in
fdiv
push
and
or
fidiv
fbld
pop
dec
pop
mov
stos
mov
adc
xchg
shr
xchg
icebp
aaa
mov
xchg
sub
(bad)
lahf
in
mov
jno
dec
test
mov
sub
inc
inc
cmp
(bad)
xchg
fwait
(bad)
data16
popf
add
je
xor
jno
push
(bad)
pop
inc
ja
pop
int
lea
dec
xor
lods
and
rol
cmp
test
retf
leave
test
mov
pop
ret
jle
jg
push
hlt
(bad)
in
hlt
popf
aam
adc
jl
xchg
arpl
or
push
push
and
fwait
or
not
mov
idiv
ror
pop
sahf
xchg
addr16
sbb
ja
leave
test
mov
in
cld
ja
in
or
mov
inc
(bad)
bound
sbb
xchg
int3
xchg
popa
push
xchg
pop
pop
fcomp
scas
jecxz
jle
mov
lods
(bad)
sbb
(bad)
popf
lds
push
adc
test
(bad)
enter
or
ins
sub
lea
ficom
jp
inc
mov
movs
xor
inc
fld
shr
sahf
or
dec
inc
mov
xchg
dec
test
inc
and
cld
loope
lods
xchg
cdq
xchg
out
data16
out
faddp
jmp
(bad)
jb
loope
add
in
push
ja
ds
sbb
rcr
cmps
movs
xchg
or
sbb
push
jecxz
push
sbb
je
(bad)
rcl
push
xchg
mov
hlt
test
add
xlat
and
dec
in
scas
test
inc
sbb
(bad)
mov
cmps
cmp
jne
cmp
add
int3
out
ret
js
jb
movs
jae
push
nop
jle
rcr
mov
or
adc
xchg
fwait
cmp
lea
ds
push
bound
adc
push
fs
std
imul
and
ret
xchg
aaa
(bad)
sbb
pushf
mov
shl
imul
je
xchg
pop
jmp
bswap
mul
cmc
jecxz
push
dec
mov
jmp
or
int3
movs
ficom
sub
inc
(bad)
mov
jbe
pop
(bad)
in
ret
xchg
pop
jmp
or
jo
and
cmp
mov
ror
inc
sub
add
fdiv
enter
cmps
aaa
or
jge
jae
loop
xchg
repnz
jmp
or
call
les
push
test
test
inc
jns
aad
pop
call
clc
in
test
scas
mov
das
mov
mov
jbe
dec
and
fwait
and
sub
fnstcw
stc
popf
mov
js
jmp
aas
mov
or
adc
pusha
fidiv
mov
loope
xchg
or
fwait
cmp
and
out
addr16
jp
lds
sti
cmp
jnp
and
in
pop
sar
sbb
dec
sbb
pop
sub
dec
in
mov
repz
out
sub
inc
sti
rcr
movs
fiadd
(bad)
mov
inc
cmc
mov
fcomp
lods
mov
cmc
push
mov
xchg
pop
pop
shr
mov
pop
sub
xor
cmp
push
add
mov
pop
inc
dec
pop
in
cs
mov
xor
push
stos
repz
mov
out
retf
xchg
push
cmp
fidiv
nop
add
ret
les
jnp
in
push
add
fdiv
iret
std
outs
mov
add
shl
js
mov
clc
shl
iret
les
push
fadd
icebp
fsub
popa
imul
mov
and
cli
pop
in
(bad)
out
add
sub
sbb
mov
and
and
imul
dec
inc
jmp
jb
jmp
xchg
sub
fcomp
nop
push
push
into
jp
add
cwde
inc
mov
push
adc
push
xor
not
adc
fs
icebp
inc
pop
cwde
jno
outs
push
lea
jne
and
add
and
xor
aas
mov
sub
lock
or
shr
popf
ror
sub
jl
jp
cdq
inc
mov
mov
enter
pop
shl
cmp
push
dec
pop
enter
aam
in
stos
retf
mov
test
push
ror
pop
iret
sub
mov
or
in
cmp
mov
daa
jl
cld
sbb
pop
sbb
mov
inc
cmp
cli
pop
xchg
dec
mov
pop
pop
cmp
cmp
adc
sbb
mov
xor
bound
int3
pop
push
call
jno
and
data16
and
jmp
fiadd
div
cmp
adc
mov
push
loope
xchg
xchg
cmp
aas
xor
dec
dec
inc
fldenv
fnsave
sbb
aad
lods
arpl
jle
lock
(bad)
rcr
jg
xor
aam
inc
(bad)
xor
scas
jp
inc
and
fcomp
pop
jno
scas
mov
cmp
sti
loopne
sbb
scas
outs
aad
shl
test
pop
rcl
sti
cli
mul
sub
fild
pop
jmp
mov
adc
pop
cmps
sahf
shr
pushf
pop
bound
push
ds
xor
mov
ss
xor
add
(bad)
repz
sub
loope
xchg
fld
inc
fst
loopne
cdq
jp
mov
sub
add
cmp
dec
cmp
iret
cmp
inc
cmc
fstp
sahf
mov
mov
ds
call
jae
dec
mov
enter
iret
mov
ret
push
inc
inc
mov
mov
stc
jge
mov
mov
shr
and
(bad)
jle
sbb
pop
mov
pushf
jecxz
sbb
inc
lea
popf
pop
and
jae
jmp
adc
(bad)
xchg
movs
dec
shl
enter
and
in
sti
add
movs
movs
push
jge
or
addr16
xchg
mov
mov
push
retf
xchg
jmp
(bad)
pusha
retf
xchg
sar
inc
loop
xchg
pop
push
movs
loope
stos
test
push
or
cld
mov
push
push
add
push
aad
xor
mov
in
fnstcw
ret
push
jnp
xchg
ins
repnz
mov
mov
jmp
test
iret
hlt
xor
jmp
mov
xchg
inc
(bad)
cwde
push
loop
ror
inc
aaa
int3
in
inc
push
push
add
imul
jmp
out
push
dec
adc
xchg
jb
xchg
call
movs
pop
pop
popf
cmp
lahf
lods
dec
dec
push
and
inc
pop
push
aaa
cmp
mov
jo
mov
stos
xchg
repnz
enter
cs
adc
sbb
(bad)
pop
js
inc
adc
pop
fcom
add
pushf
je
pop
push
xsavec
adc
les
sub
xor
cmp
(bad)
out
push
xor
push
ret
jno
out
lock
mov
movs
aad
sar
adc
fwait
movs
(bad)
pop
or
es
test
daa
or
enter
push
xchg
jmp
fabs
jge
mov
ins
mov
loope
add
int
push
sub
add
fisttp
daa
jmp
dec
push
jp
xchg
jmp
sbb
xchg
fadd
sti
ja
addr16
jno
jecxz
out
in
pop
sti
pop
je
dec
leave
popa
cdq
sbb
loop
adc
jle
in
test
jmp
xor
and
xchg
and
xlat
inc
(bad)
(bad)
js
jp
in
xor
cdq
mov
cmp
call
xor
push
inc
cdq
xor
mov
fld
enter
je
pusha
add
movs
retf
xor
in
sub
or
mov
ins
cmp
fs
and
or
sti
into
cld
and
and
xchg
ins
ds
ret
ds
scas
jmp
mov
sar
pop
inc
ins
cmp
lods
push
loop
inc
and
xchg
ss
hlt
loope
xchg
mov
test
xchg
dec
bnd
icebp
lods
test
scas
cld
inc
add
xor
adc
repz
jmp
jbe
sti
mov
fmul
(bad)
cdq
jmp
mov
test
pop
add
outs
test
inc
push
xchg
das
mov
call
adc
out
xor
outs
fwait
or
popa
or
in
or
or
add
xchg
adc
pop
ja
in
sbb
scas
mov
xlat
cs
cmp
mov
lahf
scas
and
sub
inc
scas
(bad)
mov
xchg
imul
push
jle
cmp
les
es
add
ins
or
cmp
nop
mov
jo
inc
ins
je
mov
jg
jns
add
push
iret
cmp
mov
std
mov
add
sahf
jge
inc
aam
js
int
rcr
clc
xchg
cmc
jns
dec
push
xor
add
fild
or
sub
push
test
mov
or
gs
push
lea
pop
add
xlat
hlt
ins
xor
daa
jp
sub
pop
cmps
ja
xchg
pop
fidiv
(bad)
jmp
add
fmul
fcmove
retf
test
push
clc
push
lods
loope
cmp
cmp
jecxz
xlat
fadd
cmp
mov
jne
mov
fdivr
pop
pop
cmp
adc
xor
shl
loopne
jb
shl
loop
shl
jnp
int3
leave
pop
loopne
and
push
mov
mov
out
add
and
sti
fldenv
daa
loope
xlat
lods
fsub
fs
push
adc
pusha
sar
enter
mov
xor
call
inc
mov
enter
dec
call
lods
mov
ror
test
mov
sub
fsubr
jle
xchg
enter
adc
sbb
dec
or
cmp
ficom
pop
pop
sahf
ja
pushf
cmp
and
in
mov
or
push
das
into
loop
xchg
or
fldpi
jmp
push
push
enter
fwait
test
idiv
out
movs
ds
inc
mov
sbb
outs
mov
pop
xchg
xchg
dec
std
mov
sub
int3
ret
iret
ficomp
iret
jae
xchg
xchg
mov
cmp
mov
icebp
stos
inc
adc
add
push
or
popf
jge
pop
pop
rcr
xchg
call
and
in
jns
push
mov
fimul
test
repnz
lds
in
add
sub
and
lahf
xchg
xchg
push
add
adc
mov
inc
jne
mov
fbld
lds
mov
adc
jne
add
inc
push
in
jno
cli
mov
repnz
clc
or
inc
loop
xor
inc
nop
test
xor
aam
aaa
sub
push
test
pop
jge
ins
cld
and
or
pop
mov
stos
cs
jbe
or
loopne
enter
mov
outs
gs
cmps
or
pop
jl
lock
jmp
fwait
rcl
mov
neg
fisubr
or
push
arpl
in
push
ds
out
pushf
shl
das
push
and
xchg
xor
cmp
cmc
enter
(bad)
mov
icebp
adc
rcl
dec
out
data16
add
mov
jbe
popf
mov
push
ins
inc
or
mov
outs
jle
fmul
cmp
aas
sbb
xchg
add
dec
xor
mov
sbb
xor
push
cdq
cmps
rcr
pop
mov
xor
div
xchg
gs
in
push
push
xchg
sbb
pop
push
mov
sub
rcl
shl
mov
and
jb
jl
cld
and
add
into
retf
adc
dec
jecxz
rcr
mov
ins
jne
push
pop
cmp
call
adc
jne
mov
inc
xchg
add
jge
sub
sub
leave
cmp
push
ror
mov
pop
adc
mov
mov
dec
jo
cmps
retf
aaa
ss
mov
jb
(bad)
rcr
pusha
repz
dec
test
cwde
mov
xor
mov
or
xchg
call
mov
and
adc
mov
push
and
cmp
stos
repz
in
mov
loope
sub
out
ja
retf
add
shl
stos
push
outs
jne
scas
(bad)
cmp
ins
out
jg
pusha
pop
dec
scas
out
int
(bad)
sbb
arpl
(bad)
bound
lock
xchg
xchg
mov
out
xor
sub
xchg
repz
pop
lahf
xlat
retf
loopne
ret
retf
and
stos
fsub
jb
and
out
cmp
push
fisub
pushf
inc
cmp
dec
inc
xchg
mov
adc
sub
cmp
adc
sar
xchg
push
sbb
ret
adc
push
pop
jp
sub
sub
retf
neg
stos
pop
(bad)
outs
loope
mov
in
stc
jge
sbb
call
popf
movs
gs
fs
inc
out
arpl
adc
sbb
xchg
orps
aad
loopne
dec
icebp
mov
lea
mov
sbb
hlt
dec
fwait
jno
xor
sahf
shr
int3
(bad)
sbb
pop
pop
iret
jp
pusha
jmp
cmp
sub
push
ret
or
sbb
mov
xchg
xor
adc
inc
xor
pop
fsubr
sbb
sbb
or
pop
jno
or
and
mov
and
pop
rcl
hlt
sbb
loope
push
imul
rol
xchg
aad
lahf
sub
adc
cmp
ror
jp
xchg
push
add
or
or
xchg
sar
add
les
in
push
dec
pop
fwait
icebp
std
cwde
pop
add
sbb
(bad)
(bad)
mov
adc
inc
ss
aam
sbb
dec
js
cmp
or
addr16
aaa
fnstcw
fidivr
mov
shr
ds
pop
dec
fdivrp
pop
ja
test
(bad)
add
into
(bad)
das
pusha
call
or
outs
mov
jecxz
test
jmp
cmc
cmp
push
(bad)
pop
push
sbb
(bad)
(bad)
sahf
test
mov
add
mov
xchg
and
into
xchg
sbb
jne
and
xchg
xchg
stc
sub
cwde
aam
in
jge
mov
push
add
push
pop
in
xchg
sub
lds
or
or
popa
mov
cmp
push
mov
mov
push
pop
mov
lods
mov
cmp
mov
lahf
out
push
sub
pop
mov
mov
fistp
sbb
mov
out
retf
loopne
(bad)
adc
sbb
outs
iret
fst
jno
xchg
out
pop
or
sti
or
mov
push
mov
imul
leave
push
ret
cwde
push
and
jo
sbb
mov
test
sbb
cmp
pushf
ja
or
jo
xor
loop
jne
dec
ss
cmp
jg
sti
(bad)
lock
add
or
adc
mov
add
loop
dec
jb
adc
pop
ss
int
inc
and
push
js
in
aam
or
movs
mov
and
push
call
adc
xchg
in
mov
cmc
mov
sbb
fs
jl
data16
test
aas
dec
not
psrad
scas
mov
mov
aaa
xchg
aam
pop
push
push
dec
mov
mov
leave
out
scas
out
mov
leave
call
push
jmp
in
(bad)
mov
nop
xchg
outs
(bad)
lahf
inc
dec
pop
push
loope
lock
jle
sahf
push
aad
add
cmc
jne
mov
idiv
pop
fprem
or
jae
mov
cwde
jmp
retf
lods
xor
repnz
and
(bad)
xor
sti
addr16
stos
and
xor
fs
and
leave
adc
imul
out
push
xor
mov
inc
xor
clc
outs
jo
fcomp
test
add
retf
jns
xchg
and
mov
mov
dec
out
in
retf
cmc
aas
ds
out
cmp
adc
shl
repnz
and
rol
in
aas
pop
and
dec
pop
scas
icebp
and
add
sub
and
xlat
shl
into
call
lock
bound
stos
push
xor
mov
sar
out
sbb
pop
sbb
ret
push
aaa
les
and
je
mov
imul
mov
outs
xchg
jmp
inc
adc
or
loopne
int
icebp
sbb
cmp
xor
mov
int
push
fiadd
outs
fscale
dec
mov
and
outs
daa
pop
sbb
pop
stos
mov
cdq
test
(bad)
fist
cmp
ins
sbb
cmp
or
fld
test
aad
inc
ds
cmps
inc
mov
sbb
lods
test
and
cs
mov
mov
sub
inc
lahf
xor
mov
push
std
(bad)
fadd
mov
leave
fs
mov
shr
mov
hlt
mov
sar
inc
dec
mov
inc
pop
rol
cmps
mov
popf
dec
out
out
mov
not
adc
push
loope
cld
and
cmp
adc
jno
fsub
sbb
xchg
addr16
mov
or
jmp
add
js
jp
stc
imul
sub
cmps
add
mov
cmc
pop
pusha
sub
rcl
mov
mov
into
push
inc
in
jb
inc
add
add
fwait
xchg
iret
in
pop
inc
aaa
retf
js
pop
inc
mov
push
adc
pop
int3
bnd
lahf
mov
and
cli
mov
xchg
fs
js
cmps
sbb
adc
dec
repnz
daa
pop
sbb
fild
adc
mov
mov
dec
push
sub
data16
cdq
pusha
xor
ret
stos
loop
mov
adc
xor
sti
int3
sub
leave
fsubrp
and
jmp
stos
stos
push
dec
sti
sbb
ror
or
mov
cld
inc
fwait
loope
je
in
push
scas
add
push
movs
mov
pushf
jmp
add
sahf
neg
cmp
fistp
add
(bad)
cs
jmp
push
cwde
jne
fst
xchg
loope
mov
cmps
or
fisttp
jle
jmp
jp
jg
mov
push
ret
loope
lods
jp
jp
push
arpl
rcl
mov
push
add
fxch
lods
jp
sbb
js
mov
jmp
and
push
dec
addr16
jg
sbb
out
dec
mov
inc
cmps
loopne
inc
(bad)
out
cmps
shl
addr16
pop
jo
fidiv
pop
sbb
mov
test
adc
daa
stos
das
fcmovnbe
or
mov
mov
or
call
xchg
inc
cdq
sbb
pop
mov
cwde
pushf
out
push
mov
pop
push
(bad)
adc
scas
es
or
cmp
pop
fmul
aas
pop
xor
or
imul
cmp
adc
fdivr
rol
mov
imul
cli
pop
sub
push
mov
pop
imul
test
and
mov
sub
ficomp
sub
add
pusha
outs
(bad)
jno
mov
push
rcr
jecxz
pushf
inc
test
jl
pop
mov
and
mov
push
adc
push
jns
sahf
dec
inc
add
(bad)
loopne
and
sahf
mov
sti
mov
add
in
jb
rcr
xor
dec
inc
in
fs
stos
stc
and
pop
xor
add
inc
js
ja
sub
jns
sbb
imul
(bad)
mov
lea
cmp
fwait
bt
aas
fild
popf
adc
mov
outs
adc
and
jg
cmps
cwde
mov
push
cmp
pop
or
xchg
fmul
sbb
mov
cmp
sub
in
dec
enter
xor
inc
pop
aaa
pop
pop
imul
ret
xor
sub
call
(bad)
(bad)
enter
fimul
pop
inc
in
jmp
aad
jp
push
mov
js
mov
ficomp
push
adc
fdiv
js
mov
mov
fld
aad
in
xor
leave
sbb
push
adc
or
dec
jb
loopne
enter
jnp
test
or
or
jo
leave
inc
lods
movs
mov
scas
mov
scas
jecxz
ror
lock
jae
push
shr
mov
jmp
imul
cmp
adc
jns
enter
sar
push
or
mov
test
sbb
repnz
ss
stos
cmp
adc
mov
dec
and
sbb
not
dec
dec
int3
repnz
jno
aad
aaa
cmp
shl
imul
push
lds
in
(bad)
mov
in
push
xchg
mov
pop
stos
push
sub
loopne
add
mov
adc
mov
push
inc
and
dec
mov
sbb
pop
lahf
xor
stos
movs
sub
add
inc
xchg
and
fwait
cli
imul
xor
jbe
pusha
mov
jns
jb
aam
or
mov
and
and
or
es
retf
and
loop
nop
enter
mov
pop
inc
jge
or
jmp
mov
ds
mov
push
add
xor
sti
mov
dec
fnstcw
xor
leave
lods
hlt
lahf
sbb
pop
mov
and
jg
mov
hlt
stos
and
(bad)
jp
popf
cs
ret
dec
or
int
or
and
mov
mov
cdq
cmp
lds
sets
jl
fs
rol
mov
ja
mov
out
or
sbb
loop
(bad)
push
mov
pop
mov
sub
ficomp
mov
aam
xchg
and
inc
mov
inc
pop
jb
lahf
pop
in
mov
mov
stos
leave
xlat
or
mov
dec
loope
sbb
jle
addr16
mov
fimul
add
pop
cmp
fdiv
repnz
push
test
(bad)
ror
xor
mov
xchg
lods
adc
and
cmp
jge
test
sub
popa
enter
sub
es
jge
call
sub
or
repz
pop
outs
int3
xchg
(bad)
ins
nop
push
xlat
mov
sar
int3
int3
pop
lock
dec
inc
stos
sbb
call
mov
(bad)
jne
or
push
out
and
pop
mov
sahf
dec
test
pop
sbb
fcomp
jmp
mov
or
leave
sub
and
test
es
jg
xor
cmps
imul
icebp
push
push
cld
pop
scas
jge
nop
aaa
mov
loop
jbe
mov
pop
dec
mov
mov
inc
mov
outs
or
and
xchg
(bad)
retf
cmp
sub
xchg
push
test
lea
in
sub
inc
and
push
rcl
sub
test
sub
push
xor
fimul
sub
sahf
outs
xchg
jae
xchg
jns
stos
mov
fild
out
inc
jmp
sar
jle
lods
sub
sbb
adc
stc
xchg
leave
push
(bad)
fiadd
sub
and
loope
and
add
pop
jl
in
or
(bad)
cwde
xor
cmps
dec
mov
mov
sub
push
movs
pop
add
(bad)
bswap
dec
(bad)
sbb
dec
aaa
pop
mov
inc
das
sbb
dec
inc
adc
jo
mov
mov
xchg
lods
ins
fisubr
out
fcom
inc
clc
(bad)
sbb
cs
mov
add
fcmovb
jg
and
into
mov
jne
sub
imul
adc
mov
add
xchg
sbb
call
ds
lods
adc
aaa
add
test
xchg
mov
xchg
imul
jmp
xchg
clc
jecxz
out
cmp
dec
add
adc
hlt
or
(bad)
push
in
arpl
je
mov
xor
sbb
int3
(bad)
jns
cdq
movs
jecxz
jmp
cmp
lds
stc
xchg
(bad)
mov
sub
daa
test
mov
mov
stos
and
ja
sbb
outs
push
jbe
pop
fwait
(bad)
cmp
fistp
stos
mov
cmp
in
mov
mov
scas
das
fmulp
push
out
mov
jle
loopne
mov
pop
jae
dec
fld
stos
sbb
mul
in
xchg
inc
xchg
(bad)
hlt
pop
lods
mov
enter
das
(bad)
imul
scas
sbb
inc
sub
out
xor
(bad)
jmp
pop
inc
ja
mov
sbb
sub
bound
movs
or
js
add
cmp
das
ror
gs
pop
test
push
retf
push
inc
push
imul
lahf
pusha
mov
js
adc
xlat
and
mov
(bad)
fadd
aad
xor
clc
add
xchg
or
test
mov
loop
shl
iret
cmc
sbb
push
test
pop
ja
xor
cdq
push
mov
pusha
sub
xchg
sbb
push
pop
pop
inc
dec
scas
add
das
imul
cmp
jecxz
sub
lods
loope
jo
repz
rcr
dec
cld
xchg
mov
(bad)
mul
sub
(bad)
(bad)
jb
mov
dec
test
and
cmp
shr
daa
or
cs
push
out
mov
test
or
shl
std
aas
movs
outs
mov
shr
push
mov
mov
fcomp
mov
ins
adc
jns
es
out
lahf
ds
inc
cdq
mov
mov
pop
jmp
pushf
xchg
xchg
push
rcl
jb
dec
or
jg
pop
popf
movs
nop
mov
dec
pop
sub
(bad)
mov
jne
and
push
push
jecxz
fsubr
xchg
mov
pop
inc
xchg
imul
outs
xor
push
ins
add
sar
(bad)
push
into
lahf
xor
sbb
sub
lahf
cmp
add
in
push
mov
cmps
pop
inc
cwde
addr16
pop
sbb
xchg
sar
pop
jg
push
stos
jne
mov
ror
loope
xchg
jno
jp
pop
test
shr
pop
outs
retf
daa
arpl
stos
mov
dec
or
pop
lock
icebp
retf
xchg
popf
cmp
aad
loope
add
imul
out
shl
mov
or
cld
aam
adc
xor
add
dec
mov
sahf
adc
add
pop
push
pop
aas
imul
inc
addr16
ja
in
mov
pop
cli
jmp
sbb
(bad)
data16
imul
cli
or
mov
dec
or
dec
cmp
or
xchg
add
or
dec
lods
cdq
mul
dec
cwde
push
retf
jb
or
out
jmp
cmp
push
fstp
dec
(bad)
add
jne
es
data16
push
inc
inc
or
pop
shl
sub
pop
push
enter
fs
fwait
pop
and
pop
or
mov
je
rcl
shr
jo
in
ror
cmp
mov
fisub
push
int
in
inc
cmps
iret
push
(bad)
scas
add
daa
mov
cmp
sub
(bad)
mov
int3
in
aam
xchg
dec
test
test
xor
jle
or
inc
shl
outs
test
ins
mov
dec
stc
xchg
lods
mov
add
push
xchg
pusha
mov
and
(bad)
jl
icebp
sub
mov
es
(bad)
push
add
(bad)
fcom
pop
jg
mov
inc
popf
or
xchg
imul
sbb
movs
outs
in
jae
loop
pusha
idiv
bound
ins
test
inc
fbld
nop
ret
add
(bad)
fsubr
push
mov
cmp
lahf
sbb
xchg
pop
pop
sub
out
mov
mov
in
aad
push
fwait
cs
inc
mov
and
mov
xchg
inc
repnz
pop
rcr
push
add
frstor
in
inc
lds
and
shl
and
ds
jl
ins
add
outs
xor
jecxz
aad
fdiv
pop
sti
sbb
xchg
xor
stos
cwde
cld
stos
icebp
pop
cmp
in
fisubr
adc
popf
inc
clc
call
pop
or
mov
inc
xchg
jecxz
xchg
fst
movs
out
fistp
jge
mov
pop
mov
std
push
(bad)
fst
test
sub
and
xchg
mov
ins
lock
movs
push
jo
(bad)
push
ja
and
add
or
jns
les
fldenv
push
xchg
in
(bad)
jns
cmc
pop
and
call
mov
ret
mov
mov
hlt
sub
sbb
cmp
js
xor
xchg
mov
dec
and
shr
nop
add
xchg
adc
mov
and
mov
push
mov
call
push
mov
xchg
fscale
cmp
out
and
repnz
int
mov
cs
scas
adc
jae
(bad)
mov
hlt
dec
fisttp
xor
mov
push
mov
aad
(bad)
int3
jle
mov
and
and
cmp
xor
push
add
adc
sahf
sbb
push
xchg
xchg
loop
dec
sbb
imul
dec
pop
test
popa
xor
add
es
movs
mov
lock
retf
adc
fwait
inc
ss
ins
xor
neg
add
retf
int
neg
(bad)
fwait
daa
ds
adc
jnp
mov
les
xchg
call
and
je
loope
mov
movs
int
add
push
sub
jb
xor
lahf
adc
cmp
xor
in
mov
mov
sbb
clc
test
loopne
ins
xchg
sub
loop
xlat
dec
bound
cdq
jl
les
hlt
push
dec
mov
and
outs
aad
pusha
sahf
sbb
pop
js
xchg
xor
pop
sti
push
ins
pop
cmps
test
add
inc
stc
aaa
inc
mov
enter
test
pop
rcl
aam
or
cmp
xchg
adc
xlat
or
inc
mov
fmul
ins
sub
or
cmp
stos
mov
jo
fisttp
cs
mov
mov
push
sbb
add
push
shr
and
sbb
call
sub
sub
pushf
fsubr
sub
popa
aas
adc
arpl
movs
cmp
(bad)
leave
addr16
xchg
(bad)
add
and
(bad)
mov
sbb
ret
xor
lahf
or
iret
cmps
sar
sbb
dec
fstp
push
mov
mov
pop
test
xchg
gs
js
or
mov
sar
jbe
adc
les
pop
stos
rol
cmps
and
xchg
pop
popf
lahf
mov
sub
dec
pop
cmps
dec
movs
xor
mov
inc
gs
add
jl
cmp
add
retf
cmps
sub
out
and
cmp
imul
xchg
jne
mov
das
mov
fsub
pop
pop
mov
in
xor
jle
adc
jb
sbb
test
sbb
sar
js
xchg
or
jp
pop
and
(bad)
pop
mov
sub
pop
js
push
push
sub
mov
add
mov
movs
test
std
pop
mov
mov
inc
in
cwde
xor
stos
scas
lock
xlat
mov
call
(bad)
xor
xor
and
mov
pop
inc
jns
xor
loope
sub
pop
xchg
lahf
iret
mov
inc
imul
mov
jle
aad
sbb
jne
or
xchg
push
arpl
test
push
push
push
out
(bad)
jg
xor
push
xchg
lea
jle
cdq
pop
sub
xor
mov
push
mov
rcl
sub
pop
test
in
outs
add
add
loope
(bad)
jmp
imul
pop
jmp
cmc
mov
bswap
xor
jg
cmp
push
and
or
fnstcw
loop
dec
out
add
repz
or
iret
pop
sbb
es
aaa
cmp
pop
cmc
sti
jmp
cmps
pop
dec
pop
pop
xor
xor
pop
xor
cmp
outs
dec
pop
jle
mov
rcl
mov
into
(bad)
xchg
or
es
or
add
int
outs
push
idiv
cmp
popa
jbe
leave
add
mul
popa
sub
or
mov
or
(bad)
lock
(bad)
xchg
cmp
test
push
scas
xor
dec
clc
popf
dec
cmp
stc
mov
adc
in
out
mov
das
pop
neg
out
(bad)
cmc
loopne
ds
leave
or
fwait
sub
lds
push
and
out
mov
inc
out
fwait
adc
ret
mov
inc
jg
cmps
stos
sbb
mul
mov
mov
adc
pushf
and
xlat
jle
not
xchg
mov
pop
data16
mov
outs
call
pop
into
mov
pop
je
lock
push
scas
scas
mov
pop
sub
out
jmp
inc
fsub
cmps
addr16
jg
jg
mov
dec
js
and
sbb
out
inc
add
repz
iret
jae
outs
mov
pusha
movs
inc
arpl
mov
cld
jmp
sar
sub
pop
mov
push
dec
or
xchg
out
push
fucomp
mov
xchg
retf
adc
ins
fisttp
xor
out
xor
ss
fwait
sbb
jmp
imul
loopne
push
sbb
mov
daa
lods
(bad)
and
repz
adc
sub
add
cmps
std
sub
(bad)
mov
(bad)
std
pop
sbb
mov
xor
call
jne
sbb
shl
addr16
test
stos
pop
dec
in
mov
sahf
mov
pop
mov
(bad)
sbb
mov
xor
sbb
add
add
pop
mov
outs
movs
iret
jmp
lds
outs
pop
sbb
jmp
sub
pop
push
icebp
rcl
test
aam
pop
inc
mov
loopne
adc
aas
mov
mov
push
cmp
sbb
adc
retf
xor
(bad)
mov
es
xchg
ja
ret
jae
jb
leave
sub
sahf
aas
clc
sbb
xor
mov
mov
dec
xchg
scas
int
lahf
push
jmp
cdq
idiv
add
out
sub
pop
and
movs
pop
out
push
lahf
push
loopne
jno
adc
(bad)
mov
repz
or
cli
imul
idiv
shl
(bad)
cli
mov
sub
mov
adc
sbb
push
imul
push
jge
ret
xchg
add
or
push
inc
jb
or
jnp
mov
lahf
add
sub
imul
outs
imul
cmp
add
stc
pop
(bad)
es
(bad)
je
loop
ds
sbb
pop
movs
fidivr
sub
sar
push
sub
jmp
cs
int3
daa
clc
mov
movs
(bad)
xor
jbe
fld
ret
jle
out
inc
sub
push
arpl
retf
xchg
xor
loopne
pop
retf
nop
sbb
sub
mov
(bad)
fsub
ins
adc
mov
sub
push
ins
imul
arpl
xor
xchg
(bad)
neg
ins
jae
test
add
repnz
rcl
sbb
jne
fs
clc
mov
xor
call
xchg
pop
dec
ja
repz
sahf
xchg
out
or
or
mov
and
push
add
in
mov
push
xor
push
lods
mov
int
inc
push
adc
pop
mov
sbb
(bad)
std
push
stos
clc
clc
xchg
dec
pop
or
pop
and
ret
push
fnsave
bound
xchg
xlat
repz
inc
mov
cld
data16
adc
mov
ss
test
test
(bad)
je
out
movs
in
test
add
loop
adc
and
cmc
xchg
pushf
xor
int
call
pop
stos
cmps
mov
sbb
cmp
scas
inc
stos
cmp
(bad)
pop
jl
(bad)
movs
loopne
sub
and
dec
jp
mov
adc
stc
jecxz
add
pop
adc
arpl
fcom
xchg
xchg
inc
add
mov
stos
lods
adc
sbb
xor
add
xor
clc
das
test
mov
retf
or
pop
mov
add
or
icebp
iret
dec
jle
cwde
fcom
mov
stc
cli
pop
out
neg
hlt
sbb
ror
hlt
mov
retf
into
push
xchg
jmp
hlt
sar
cmp
sub
inc
jae
or
mov
outs
push
cmp
pusha
push
loope
sbb
xchg
pop
test
movs
xchg
pusha
mov
fidiv
fldenv
(bad)
jmp
push
dec
mov
jmp
ins
sbb
outs
mov
jne
adc
or
cdq
or
cld
cdq
push
push
pop
push
outs
cmp
rol
hlt
push
outs
pusha
xchg
loopne
inc
test
aad
sbb
rcr
(bad)
and
inc
xchg
pop
call
push
pop
jnp
sti
jnp
stos
gs
lods
cmp
mov
adc
xchg
dec
mov
dec
outs
fidiv
movs
xchg
mov
clc
int
lods
(bad)
rcr
inc
fucomp
push
xor
mov
add
sub
mov
inc
xlat
ins
mov
outs
mov
sbb
cld
mov
movs
sbb
js
or
xor
in
leave
dec
jbe
and
xchg
cmp
mov
lea
fadd
and
mov
scas
push
ins
movs
xor
pop
and
ins
ds
cmp
and
cmp
pop
ficom
sub
es
les
jl
push
fild
dec
sub
bnd
push
push
cld
inc
cmp
inc
or
jne
inc
mov
data16
lds
lock
pop
sub
lods
and
scas
jbe
sti
and
shl
add
bound
jl
jne
icebp
inc
mov
sbb
je
js
fmul
xor
ret
ins
xchg
or
es
and
cmps
pop
xor
cmp
out
fidivr
pop
out
inc
bt
test
xor
jb
(bad)
ret
ds
xchg
lods
cwde
push
xor
pop
and
xlat
jmp
inc
mov
aas
or
sub
rcl
ins
pop
xor
ret
sub
mov
pop
ins
adc
push
aas
push
mov
pop
in
pop
cmc
pop
(bad)
sub
cmp
cmp
sbb
rcr
dec
jb
arpl
jo
inc
sbb
imul
out
push
add
aad
sub
dec
das
pop
movs
cmps
sub
iret
out
xor
sbb
push
push
inc
adc
cmp
xor
fsub
or
pushf
outs
or
and
outs
jo
pop
aaa
mov
mov
hlt
scas
and
cmp
in
or
mov
push
pop
call
sbb
add
out
adc
cwde
nop
in
dec
add
add
shl
sub
fisttp
lods
xor
dec
ret
jne
xor
icebp
mov
bound
loopne
popf
xchg
mov
xor
pop
mov
inc
cwde
data16
ror
loop
cs
jmp
mov
enter
cmp
gs
mov
xor
sti
(bad)
ror
test
repz
jae
cmp
outs
je
movs
rcl
xchg
jecxz
stos
in
(bad)
test
loope
pop
cs
push
sub
mov
test
repnz
out
jo
mov
and
pop
or
cmc
sbb
test
push
sar
mov
or
xchg
or
shl
aaa
out
ins
enter
daa
cmp
and
xor
jecxz
outs
loop
sub
into
test
cmp
push
cmp
gs
in
nop
mov
mov
mov
lods
icebp
mov
jbe
mov
loope
aas
xor
xlat
sub
fnstcw
shl
and
inc
lods
fild
std
xor
sub
test
push
jmp
dec
fwait
sbb
imul
dec
ss
mov
and
cli
jnp
ds
cmp
sub
ja
std
mov
mov
xchg
add
repz
into
sub
jbe
int3
fsubrp
cmp
xchg
ins
ss
out
xchg
mov
dec
sub
ret
inc
inc
mov
jg
(bad)
out
cmp
stc
push
icebp
cld
sub
mov
popf
ret
mov
push
cmp
push
inc
fnsave
mov
jo
jg
cs
sbb
std
xor
cdq
jle
sbb
xchg
lods
sub
push
mov
mov
(bad)
aad
int
jp
aad
lds
add
jmp
add
mov
call
sub
add
ret
sbb
mov
jmp
sar
mov
inc
ror
sub
fs
fisubr
or
xchg
add
popf
mov
test
dec
ins
pusha
mov
mov
das
sahf
adc
xlat
movs
icebp
or
(bad)
mov
jno
fild
inc
mov
nop
je
jl
or
bound
inc
ficom
es
in
fdivr
pop
fldcw
movs
arpl
je
xor
test
repz
sbb
ins
sbb
pop
clc
pop
inc
dec
xor
xor
inc
push
dec
ja
add
xor
cmc
mov
push
js
inc
jecxz
in
mov
cmp
leave
push
inc
outs
test
cmp
test
shl
jne
sti
mov
xchg
inc
ret
out
aas
mov
dec
jnp
mov
arpl
lahf
fnstsw
cmp
loope
mov
fdivr
cmp
div
in
retf
xchg
add
or
scas
sub
imul
ins
pop
fbld
fimul
inc
fbstp
and
jg
sbb
fiadd
adc
leavew
aas
mov
repnz
dec
cwde
or
stos
pop
(bad)
adc
push
dec
fnsave
loopne
jmp
cmp
xor
inc
and
mov
or
jmp
xor
test
cld
jecxz
fiadd
xchg
dec
fbld
enter
in
mov
mov
pop
sub
popf
adc
push
(bad)
in
outs
push
adc
pop
push
add
inc
call
xchg
aas
sbb
push
add
icebp
xchg
xor
mov
or
sub
push
sbb
js
dec
lock
jae
adc
xchg
mov
movs
jmp
push
fst
pop
fdivr
test
pop
stc
jecxz
push
cmps
push
sbb
out
cs
jne
mov
cdq
loopne
mov
sbb
adc
(bad)
(bad)
daa
(bad)
adc
adc
inc
rcr
es
out
je
add
push
les
aad
xor
test
aad
and
jno
pop
arpl
mov
dec
lahf
ins
and
cmc
pop
jo
cmps
jnp
ret
(bad)
vcomisd
and
gs
test
(bad)
inc
cli
cmp
pushf
or
fld
mov
es
pop
and
and
add
inc
sub
sub
test
lock
fld
dec
enter
or
outs
mov
push
push
(bad)
jmp
ficom
ja
(bad)
retf
not
loop
sub
repz
pop
retf
inc
lods
dec
push
bound
push
mov
mov
fcom
shl
mov
scas
push
push
or
test
shl
push
cmp
out
(bad)
pop
out
pusha
or
xchg
retf
cmp
jbe
test
jmp
jmp
mov
dec
or
sbb
and
xor
dec
inc
sbb
jmp
int3
ins
xor
adc
ins
test
call
jns
xchg
loop
clc
push
pop
cmps
cdq
or
lods
jbe
adc
mov
xchg
jmp
inc
in
test
push
cmc
pop
jecxz
in
fst
or
(bad)
mov
enter
loopne
push
fadd
cwde
xchg
(bad)
out
cld
jmp
test
in
call
mov
loopne
in
and
xor
mov
inc
mov
call
aaa
jl
retw
push
add
push
sbb
mov
rol
fcomip
fnstenv
push
add
mov
sub
dec
pop
jne
nop
mov
dec
mov
mov
mov
xchg
xor
and
test
add
in
gs
and
repz
dec
ret
inc
mov
sar
pop
mov
out
and
xor
gs
jae
push
mov
pusha
je
dec
push
sub
mov
and
ret
sub
xchg
jae
xor
call
mov
xor
movs
push
mov
hlt
or
xchg
adc
and
mov
imul
dec
out
in
pusha
movs
ret
sbb
adc
mov
adc
push
and
sbb
inc
add
dec
addr16
adc
cmp
cmp
lock
cmps
pop
add
repz
cmp
pop
pop
xor
icebp
or
clc
inc
mov
fld
div
ret
icebp
add
and
sub
fwait
add
bound
mov
push
adc
mov
jmp
jmp
jo
xchg
sub
aaa
(bad)
xchg
std
stos
(bad)
popa
pop
mov
into
pop
mov
out
sbb
test
or
mov
sub
ja
imul
fcomi
sub
stos
sahf
cmp
xor
pop
sbb
(bad)
retf
mov
icebp
sub
ret
je
sub
test
lods
sti
jmp
xchg
pop
ret
xchg
sub
add
aas
push
push
or
dec
lock
sbb
cdq
pop
sbb
dec
and
inc
les
xchg
out
call
pop
push
int
pop
in
(bad)
jmp
mov
addr16
mov
mov
cmp
add
cmp
aaa
movs
and
xlat
push
adc
add
cmc
jmp
adc
sbb
xchg
mov
cmp
xor
jmp
imul
pop
xor
cs
xchg
fdivr
cmps
inc
mov
pop
jmp
(bad)
adc
stos
xchg
das
mov
ins
sahf
repnz
(bad)
cli
(bad)
movs
lahf
sbb
push
ret
jb
test
call
xor
pop
aas
(bad)
scas
mov
sub
jmp
sbb
mov
mov
cmps
xor
inc
pusha
in
bound
inc
inc
(bad)
clc
inc
sub
sub
adc
loop
jg
fs
ds
mov
jmp
sahf
mov
jno
fwait
mov
test
scas
mov
xchg
xor
shl
dec
ret
rol
xchg
stos
int
fidiv
mov
dec
jle
dec
adc
retf
pusha
mov
xor
inc
adc
add
leave
mov
lea
test
leave
or
inc
test
(bad)
mov
mov
scas
aam
add
jae
push
ror
sbb
push
retf
and
loop
sbb
scas
xchg
repz
shl
aad
jmp
mov
mov
je
call
lock
and
mov
cmps
xchg
xlat
scas
les
mov
inc
xor
pop
retf
in
loope
fs
jb
push
cdq
dec
xor
sub
cmp
icebp
cmp
xchg
and
mov
mov
mov
ja
outs
sbb
sbb
and
loop
mov
mov
xchg
sub
adc
dec
push
dec
sbb
sbb
rcl
cmc
(bad)
aad
retf
xchg
loope
leave
jl
mov
xchg
cmps
xor
cmp
jb
dec
add
pop
push
ficomp
dec
mov
out
or
aas
cmp
push
(bad)
out
ret
xor
lea
mov
inc
imul
nop
(bad)
jae
add
push
xlat
in
cmp
xor
retf
cmp
jmp
inc
pop
imul
cdq
stos
sbb
not
push
add
das
cmp
mov
or
cmp
in
cmp
shl
xchg
inc
ss
jne
lea
or
cmp
repnz
repz
dec
bound
imul
sub
pop
pop
mov
lods
mov
push
(bad)
mov
fcom
and
sbb
sbb
fiadd
push
call
jge
or
test
not
sbb
jno
add
xchg
mov
pop
shr
cmps
and
out
push
mov
(bad)
out
jecxz
outs
pop
lea
inc
out
dec
fldenv
sub
loop
fistp
inc
idiv
ja
stc
push
test
test
in
ins
aaa
jecxz
cmps
stos
push
sti
sub
cli
inc
(bad)
std
mov
out
cmc
push
cmp
stc
pop
sahf
fimul
add
(bad)
push
jns
xchg
and
xchg
(bad)
dec
(bad)
(bad)
jg
jle
pusha
and
lock
or
sbb
push
pusha
sahf
fsubr
into
jge
retf
push
arpl
and
stc
sub
push
sub
loop
aaa
lea
imul
jl
jnp
ror
test
adc
gs
pop
(bad)
push
idiv
(bad)
repnz
fsubr
fldenv
enter
sbb
retf
(bad)
dec
fcmovbe
(bad)
icebp
xchg
iret
sbb
and
mov
les
cld
xchg
mov
sub
xchg
cmp
ror
adc
jp
pop
scas
sbb
sub
adc
loopne
push
or
test
shl
mov
cwde
hlt
leave
add
les
ss
retf
fimul
sbb
ret
push
into
jno
dec
dec
stc
lea
out
adc
mov
mov
dec
int
adc
fsub
pop
lahf
das
sub
retf
jne
daa
loopne
pop
mov
ds
mov
push
cld
imul
fisubr
call
add
stos
push
jo
test
in
xor
mov
inc
nop
or
out
mov
mov
xchg
retf
mov
xchg
cmp
sub
leave
pop
jb
sbb
sbb
or
or
(bad)
jnp
int3
pop
mov
loopne
fnstenv
sub
push
retf
scas
or
xchg
cmp
push
jmp
or
fwait
and
sub
imul
mov
jne
push
mov
mov
mov
fst
mov
cmps
outs
mov
pop
cmp
push
call
cwde
sbb
lock
mov
retf
and
fwait
ins
cmp
adc
pop
mov
and
shl
add
data16
mov
mov
es
imul
jecxz
mov
test
jne
loop
inc
sti
enter
imul
mov
(bad)
inc
xchg
jmp
ret
add
fild
cli
xchg
dec
adc
push
mov
loop
lods
fisttp
call
cwde
ja
mov
mov
cmp
in
mov
addr16
int3
xchg
xor
shr
sahf
in
mov
pop
push
mov
sub
rcr
call
mov
aad
mov
pop
fcmovb
stos
push
cdq
ds
ins
(bad)
jmp
add
mov
jl
fidivr
mov
adc
adc
pop
ds
mov
mov
dec
dec
nop
into
sahf
add
stos
or
cmp
paddd
punpckhwd
mov
fisub
(bad)
mov
xor
das
clc
(bad)
(bad)
xchg
sar
iret
mov
daa
jno
sbb
sbb
cmps
imul
pop
mov
sbb
int3
(bad)
hlt
push
jmp
daa
pop
test
test
iret
fisttp
call
int
pop
cmps
inc
lock
ins
mov
fwait
call
retf
inc
xor
mov
push
scas
add
pop
shr
test
add
(bad)
jge
push
add
pop
mov
outs
dec
push
mov
into
xchg
sub
dec
cmps
push
add
cmp
and
sub
stos
inc
jle
xor
or
inc
xor
in
in
mov
outs
int
sub
sub
mov
ins
jne
add
dec
out
cmps
jnp
icebp
in
ins
pusha
adc
test
gs
outs
pop
retf
mov
jl
iret
lods
pusha
jmp
aad
rcl
xchg
daa
dec
stos
jecxz
retf
pop
dec
call
inc
mov
jp
in
arpl
loope
dec
lea
mov
sub
jne
sub
ret
push
add
pop
in
push
mov
jg
or
mov
in
xchg
inc
jg
mov
adc
inc
sbb
inc
ins
cld
xor
icebp
push
inc
xchg
xchg
jmp
mov
add
jne
mov
xor
imul
jns
sbb
popa
stos
je
sbb
or
jne
stc
adc
jle
repnz
pop
std
sbb
sub
jne
sar
addr16
dec
xor
dec
repnz
push
push
jge
bound
jns
(bad)
enter
test
aaa
push
dec
(bad)
pop
mov
repnz
jmp
cmp
lea
mov
ret
cmp
lock
jnp
or
and
je
(bad)
push
dec
dec
dec
mov
pop
push
xor
sbb
mov
out
test
retf
or
outs
fwait
lea
xchg
jne
es
sub
lods
dec
sahf
and
sbb
jae
fild
ret
inc
in
nop
out
add
arpl
cmp
fs
ss
add
std
div
rcr
icebp
cmp
cmc
adc
fadd
mov
dec
jbe
test
std
cmp
push
push
cmp
lods
aam
les
or
int3
(bad)
in
push
push
scas
in
push
and
mov
dec
bound
jae
repnz
div
mov
add
pcmpeqd
adc
jno
xor
in
(bad)
xor
mov
mov
in
mov
lock
add
push
mov
dec
or
aaa
es
inc
shl
mov
test
imul
jno
inc
xor
xchg
and
(bad)
push
call
mov
call
inc
xor
adc
xchg
iret
idiv
(bad)
adc
xchg
pop
clc
sti
mov
mov
cmps
mov
aad
movs
fsubr
pop
fdiv
push
outs
ja
pop
or
sbb
cmps
push
in
inc
test
push
hlt
popf
dec
jnp
std
(bad)
int
pop
dec
popa
mov
add
sbb
push
sbb
iret
xlat
je
and
pop
and
mov
aas
addr16
daa
ss
fstp
pop
mov
scas
adc
xor
mov
leave
xchg
(bad)
jge
ins
les
dec
jbe
xor
pop
xchg
xor
scas
pop
clc
sbb
cmp
push
movs
in
jns
fmul
ja
ins
xor
out
stos
fsubr
pop
out
dec
repz
push
jmp
sub
pop
jne
cmp
sub
lahf
lea
jmp
div
dec
xchg
sub
(bad)
jmp
mov
cmps
stos
bt
sbb
jnp
push
add
push
ret
push
loope
adc
outs
sub
stos
jecxz
test
in
(bad)
mov
adc
pop
push
aas
outs
mov
fs
mov
push
mov
sub
xor
cmp
fsubr
add
pop
mov
inc
jae
inc
sub
cmp
adc
ret
jno
outs
or
aaa
loop
push
les
sub
sar
add
daa
iret
sub
mov
mov
fisttp
sub
dec
scas
sbb
add
cs
into
add
gs
add
cwde
xchg
div
inc
(bad)
shl
imul
sbb
mov
out
dec
int3
add
mov
mov
adc
out
pop
mov
movs
rcr
int3
inc
mov
add
pop
loopne
xchg
out
shl
mov
cmp
scas
adc
or
sti
ins
cmps
cs
cdq
rcr
xlat
inc
mov
jmp
push
or
loope
push
push
int
mov
ret
icebp
xchg
jecxz
stos
push
adc
iret
and
push
adc
fld
les
rcr
mov
sub
add
sbb
nop
fdiv
sub
or
rol
xor
(bad)
jb
and
or
dec
adc
aad
mov
or
mov
ret
add
cmc
je
and
clc
cmp
mov
mov
ins
(bad)
push
mov
push
dec
sub
das
jno
jne
data16
push
jmp
cmc
inc
jle
mov
mov
mov
(bad)
gs
pop
inc
add
lock
retf
mov
dec
setns
mov
outs
lea
ja
arpl
mov
sbb
sbb
popa
pop
bnd
call
sub
repnz
mov
aaa
jecxz
dec
mov
aaa
mov
xchg
inc
mov
push
into
adc
clc
xchg
lock
test
adc
inc
dec
scas
pop
(bad)
pusha
sbb
mul
in
add
inc
aas
arpl
test
sbb
xchg
push
push
je
inc
cld
shr
push
daa
fisttp
pop
xchg
inc
lock
mov
sbb
cmps
out
cmps
xor
or
inc
pushf
xlat
push
lds
hlt
sar
dec
ja
ja
out
sbb
outs
cmp
sub
scas
pop
and
div
scas
loope
icebp
jg
adc
or
fwait
and
stos
lods
fimul
repz
out
adc
dec
fidivr
std
mov
pop
into
mov
mov
bound
lahf
aam
push
arpl
push
aad
imul
fisttp
xor
(bad)
mov
aaa
sbb
pushf
(bad)
in
push
js
cmp
js
mov
rcr
dec
jmp
cmps
fist
lods
out
test
mov
mov
dec
xor
in
test
or
dec
adc
shr
or
inc
mov
inc
push
loope
dec
sub
mov
lods
fidivr
rcr
retf
fsub
mov
adc
ins
movs
mov
clc
cmp
test
xchg
stos
mov
pop
call
call
sar
out
mov
sbb
cmps
cmp
(bad)
jmp
dec
inc
popa
sbb
sub
adc
and
pushf
rcl
dec
test
adc
pop
pop
push
in
mov
into
ins
arpl
aam
call
inc
xchg
push
(bad)
in
mov
jge
imul
lods
arpl
js
aam
out
std
jns
ja
inc
psubsb
mov
iret
ds
jge
lods
mov
or
push
addr16
add
xchg
pusha
mov
push
bound
xor
pop
add
mov
adc
add
push
jg
pop
or
mov
arpl
mov
ret
sub
adc
hlt
add
push
inc
scas
mov
sbb
and
push
shl
pop
call
repz
jns
aas
jg
push
mov
sub
sub
mov
sbb
dec
int
push
dec
cmps
pushf
stos
ins
push
in
adc
sub
add
sub
add
and
pop
xchg
(bad)
nop
pop
fld
fild
(bad)
and
xchg
in
jg
(bad)
cmp
popf
popf
sbb
jecxz
nop
push
(bad)
jecxz
mov
retf
hlt
mov
enter
aam
fstp
out
jg
inc
dec
pop
mov
add
cmp
dec
int
imul
icebp
mov
pop
jp
xchg
adc
daa
movs
shr
ror
call
icebp
push
mov
sub
mov
ja
lahf
adc
jbe
fidivr
or
or
push
push
cmp
inc
leave
outs
adc
scas
sub
imul
mov
jecxz
fwait
inc
or
mov
inc
shr
pop
stos
xchg
pop
loop
icebp
mov
jb
hlt
dec
in
mov
jmp
mov
xchg
pop
push
loope
mov
retf
push
pop
movs
add
mov
sbb
pop
movs
repz
into
xchg
stc
mov
rcl
popf
scas
jae
call
fidiv
adc
jno
inc
retf
xchg
dec
ja
dec
hlt
mov
ret
xchg
aam
lock
in
mov
mov
jns
cdq
bound
int
adc
retf
sub
sti
daa
popf
mov
xor
cmc
fs
retf
ins
lock
mov
xchg
inc
jp
lods
inc
dec
retf
in
aas
test
leave
or
mov
ss
fistp
std
arpl
mov
sar
clc
fs
mov
pop
jg
jbe
aad
pop
movs
or
arpl
(bad)
mov
fld
aas
sub
push
call
sbb
and
fimul
rol
adc
cmp
(bad)
mov
lods
ret
fld
ret
(bad)
aas
dec
ret
add
sub
jne
and
dec
es
mov
fild
nop
cmp
gs
stc
mov
cld
jp
sub
pushf
imul
fnstcw
mov
xchg
xor
cmps
movs
adc
aas
xor
in
mov
sub
jnp
push
mov
sub
(bad)
lock
es
jmp
aas
and
mov
xchg
or
arpl
stos
aaa
push
sti
test
retf
or
mov
add
and
mov
imul
mov
sbb
shl
lods
add
mov
into
rol
popa
xchg
ins
and
pop
dec
test
mov
sbb
enter
gs
retf
push
pop
jbe
and
mov
add
mov
out
jmp
inc
scas
add
dec
into
call
(bad)
mov
pusha
mov
inc
inc
hlt
inc
cmps
dec
jmp
mov
fnstsw
scas
dec
fwait
lahf
inc
mov
cli
stc
out
push
fnstenv
imul
lds
mov
xchg
push
and
sbb
push
movs
mov
mov
test
es
stos
jo
adc
jmp
push
mov
das
test
mov
dec
pop
test
push
and
add
adc
dec
or
cmp
sbb
and
xor
lods
sti
test
enter
aaa
in
mov
mov
adc
jp
in
(bad)
ins
sahf
adc
jb
ins
dec
scas
xor
push
mov
in
xchg
mov
jo
(bad)
push
pop
and
retf
out
call
idiv
xchg
add
mov
or
ins
lods
lods
pop
jp
les
or
push
push
popf
imul
in
jns
das
leave
adc
adc
mov
dec
push
scas
add
inc
or
adc
loopne
call
and
(bad)
push
sub
xchg
mov
cmp
lea
clc
jnp
cwde
or
mov
add
aad
retf
outs
lea
xchg
pop
push
scas
sub
sub
pop
add
xchg
mov
push
add
push
fst
mov
lods
ds
das
call
stc
fldcw
repnz
cld
mov
lods
test
push
adc
mov
push
dec
xchg
cmp
and
xor
stos
dec
xor
push
rcl
cmp
mov
pop
mov
mov
cmc
jno
lock
clc
mov
sub
movs
dec
and
push
bswap
xor
xor
sti
imul
das
xor
and
and
and
lea
mov
adc
push
popa
into
das
rcr
lods
mov
jg
repz
gs
rcl
inc
rcl
loopne
stos
out
sub
jbe
enter
mov
loopne
pop
pop
and
(bad)
or
xchg
out
shl
jne
fstp
mov
sub
mov
jle
retf
and
(bad)
ret
xchg
dec
push
adc
sub
pop
pop
pop
(bad)
pop
mov
push
outs
mov
xor
mov
jle
dec
mov
in
int
ffree
add
fistp
test
movs
pop
es
mov
addr16
mov
cmp
jp
inc
adc
xchg
pusha
pop
shl
sbb
dec
xchg
inc
fxch
pop
pop
xchg
and
fwait
imul
add
inc
and
xlat
ret
pop
mov
jb
sub
aam
pop
push
test
icebp
dec
push
jmp
sub
outs
repnz
sub
and
ret
mov
or
imul
rcl
cmp
std
xchg
sbb
inc
popa
push
das
or
lock
sbb
adc
test
sub
and
push
int
sub
and
and
icebp
mov
and
and
push
add
push
fbstp
mov
cwde
arpl
ins
scas
mov
add
mov
pop
cmp
repnz
mov
into
pop
mov
test
ret
jecxz
out
aas
shl
sahf
push
xchg
mov
and
jb
xchg
hlt
jmp
push
xchg
xor
imul
pop
cdq
mov
inc
(bad)
xchg
sahf
jno
nop
jne
xor
mov
arpl
push
push
iret
sbb
popf
in
push
mov
xchg
jmp
and
jne
cmp
mov
jmp
xchg
xor
mov
outs
clc
fcmove
fs
sub
xor
bound
jge
inc
xor
mov
das
jbe
gs
retf
mov
test
les
sbb
jne
jae
fimul
cmp
push
jle
inc
movs
jo
push
mov
sbb
rcr
in
mov
shr
movs
xchg
adc
punpckhdq
cmp
sub
stc
sub
imul
iret
rcr
fadd
into
jg
repnz
dec
jmp
sub
pop
dec
cmps
mov
retf
xchg
cmp
ret
pop
inc
fisttp
in
cdq
loope
push
xor
ret
add
loopne
call
icebp
push
call
push
mov
dec
sar
add
push
cwde
xchg
pop
lods
cmp
nop
aam
sub
das
xor
push
sub
cmc
std
ss
jl
mov
and
push
dec
cmp
sti
ret
xor
cmc
retf
jl
(bad)
data16
leave
and
and
popf
(bad)
fdivr
and
xchg
test
xor
sub
add
push
stc
mov
fld
jl
and
adc
mov
add
inc
dec
adc
in
xchg
lahf
and
shr
dec
pop
idiv
lds
aad
xor
adc
push
xlat
aaa
out
movs
sub
ret
scas
mov
out
scas
fdivrp
jns
push
dec
retf
jl
xchg
cmp
push
out
mov
into
dec
jmp
out
popa
rol
cmp
lahf
xor
bound
add
mov
out
jb
test
pop
movs
lock
out
adc
jnp
jno
inc
lea
jae
xor
out
inc
mov
std
es
and
cmp
(bad)
out
cmps
popf
pop
sbb
sub
jb
and
mov
ins
add
sub
sbb
mov
push
int
imul
ja
sahf
sub
push
loop
or
xchg
je
es
es
or
xor
mov
fst
je
iret
(bad)
push
pop
sbb
jmp
int
sbb
outs
adc
cmp
jno
mov
int
pop
push
add
aaa
int3
sbb
pop
xchg
or
ins
in
jge
push
mov
ds
aas
add
mul
mov
sub
ins
xor
lds
adc
xor
into
cmps
inc
add
sub
(bad)
scas
int3
int3
dec
dec
add
push
jb
dec
jb
pusha
(bad)
cld
out
dec
sbb
pop
mov
movs
sbb
out
or
imul
xor
jg
pop
dec
xchg
xor
sbb
lods
mov
ins
and
jg
test
cmps
add
movs
scas
jg
xchg
arpl
pop
leave
pushf
leave
mov
xor
sahf
mov
outs
dec
cmp
jmp
and
add
scas
jl
sbb
xchg
push
dec
in
add
sahf
pop
ret
sbb
sub
loope
inc
int3
jmp
and
xchg
and
and
push
pop
cmps
pop
jnp
mov
jl
push
or
popa
jae
push
push
pop
jo
mov
ror
(bad)
push
jge
pop
sbb
push
imul
cdq
push
cmp
cwde
mov
es
aad
or
sub
in
jg
ret
dec
push
movs
(bad)
cbw
push
push
adc
inc
add
sub
mov
test
stos
repnz
push
sub
mov
pop
scas
fs
jne
popf
xor
push
sbb
and
and
mov
mov
or
imul
jne
sbb
mov
adc
mov
mov
lds
add
add
aaa
lods
lods
sti
xchg
das
mov
sbb
jns
push
jp
and
xchg
mov
test
jmp
inc
stc
mov
push
jo
out
fsubp
mov
pop
jmp
add
push
sub
jge
xchg
clc
movs
mov
fwait
inc
test
pop
fidivr
(bad)
shr
jmp
adc
retf
loope
cmps
sbb
mov
sub
mov
or
mov
out
call
sbb
push
sbb
pop
push
mov
repz
mov
retf
sbb
enter
xchg
xlat
push
cmp
cmp
adc
sub
test
adc
mov
int3
push
fs
daa
lds
ins
jl
je
mov
sbb
or
mov
xchg
pop
call
fistp
aad
cs
mov
icebp
sub
or
mov
jo
sbb
xchg
aaa
aas
call
sbb
pop
cmps
cmp
mov
pop
aas
fs
add
int3
adc
mov
(bad)
cmp
ret
sbb
add
sub
les
sbb
or
and
xchg
xchg
push
stos
xor
sar
repz
push
push
cli
in
popa
pop
push
or
retf
sar
leave
(bad)
lods
int
mov
add
xor
cmp
mov
leave
jle
jns
dec
sbb
jae
inc
and
gs
xor
in
into
pop
adc
xchg
push
test
fwait
push
nop
add
into
inc
test
(bad)
repnz
inc
xchg
adc
loop
or
ins
add
xor
sub
xor
into
es
fst
scas
mov
pushf
mov
outs
jbe
(bad)
mov
repz
jmp
out
fs
xchg
in
add
cmp
test
mov
dec
push
mov
mov
cmc
js
xchg
add
xor
into
or
push
jae
sbb
out
push
loopne
outs
cwde
stos
mov
nop
mov
xchg
fsub
and
retf
and
mov
add
dec
fld
jmp
movs
inc
mov
int
jmp
addr16
sub
sub
inc
aas
fucomi
sti
call
call
popa
pop
add
out
add
jbe
sti
aam
add
(bad)
aaa
stos
mov
push
cmc
pushf
das
loopne
fbstp
mov
pop
mov
adc
dec
jo
je
cwde
repz
stos
sub
and
mov
cmps
xor
cmp
sbb
xor
int3
in
or
or
dec
inc
jge
movs
mov
ret
dec
call
arpl
(bad)
(bad)
sbb
push
adc
adc
aaa
adc
jecxz
std
js
clc
jo
push
out
push
mov
cli
cmp
popa
jle
cmp
fcomp
and
mov
gs
mov
daa
jae
sar
adc
jo
jp
daa
frstor
inc
inc
inc
ins
call
dec
and
mov
mov
sbb
pop
sbb
int
test
mov
(bad)
fbld
movs
jge
xchg
adc
movs
push
pop
add
cmp
xchg
fwait
dec
popf
or
jbe
push
sbb
jbe
nop
mov
inc
repnz
sar
lods
pop
jbe
cs
outs
movs
sub
shl
nop
addr16
stc
outs
into
mov
cmp
stc
jmp
mov
sbb
adc
mov
outs
pusha
push
push
in
enter
sub
hlt
dec
lea
xchg
hlt
add
jb
sub
stos
(bad)
shl
lea
adc
jae
pusha
pop
adc
mov
or
xchg
test
jns
mov
pop
imul
sbb
pop
cmp
adc
fstp
jmp
sub
inc
push
and
or
fbld
enter
push
push
loope
xor
mov
mov
arpl
into
pop
retf
mov
jmp
in
xlat
dec
jae
jne
mov
xor
push
mov
nop
rcr
xor
data16
pop
sbb
fdiv
cmc
pxor
add
jo
or
add
das
inc
push
push
jmp
in
jg
ins
dec
fistp
cli
pop
mov
and
iret
and
pop
fild
dec
mov
fwait
mov
arpl
pop
cmp
pop
into
pop
cs
and
cmp
mov
dec
fnop
movs
xor
adc
sbb
fs
cmps
xlat
sub
push
add
sbb
ret
fucom
ja
stc
gs
dec
(bad)
xor
adc
xor
mov
icebp
and
ficomp
xchg
inc
stos
js
dec
int3
pop
sbb
dec
imul
xor
xor
add
and
enter
addr16
xor
ret
lds
cmp
(bad)
(bad)
adc
dec
mov
sti
pushf
ins
inc
sbb
std
pop
add
icebp
jno
repz
fdiv
pop
call
lea
mov
or
shr
nop
cmp
jmp
test
push
je
(bad)
fst
sbb
xor
scas
js
jbe
cmp
xchg
mov
dec
xchg
jno
sar
lds
jmp
pusha
in
jnp
or
sub
(bad)
into
jle
rcl
and
mov
lahf
mov
jmp
dec
cmp
mov
adc
mov
iret
lods
loopne
cld
sbb
mov
push
sti
and
scas
pop
ficomp
jle
hlt
fst
xchg
push
jno
cmp
and
int
dec
add
bnd
cmp
cmps
repz
mov
and
pop
push
iret
sbb
pop
mov
pop
rcr
jmp
test
(bad)
adc
mov
movs
hlt
push
dec
(bad)
shr
pop
pop
dec
and
stc
inc
mov
and
fdivr
pop
dec
pop
data16
loop
xchg
stc
xor
iret
push
adc
mov
xchg
pop
jp
in
(bad)
push
mov
cmp
add
mov
fild
outs
cwde
push
jo
icebp
adc
pop
jmp
ins
ja
jne
dec
and
pop
popa
inc
inc
and
lods
inc
dec
add
and
dec
aad
sbb
movs
push
inc
jmp
mov
pop
loope
loope
int3
mov
in
inc
fisttp
sub
jge
jnp
push
pop
sbb
pop
retf
mov
sbb
mov
pop
xor
pushf
lahf
sahf
nop
cmp
sbb
sbb
sbb
lahf
fsub
aas
ja
jecxz
shl
scas
cmc
xchg
add
jg
cmp
mov
add
sub
jbe
mov
pop
iret
jnp
dec
pop
cli
jl
bound
xor
aas
jbe
rcl
mov
sbb
inc
push
xor
sub
dec
mov
ja
lods
addr16
inc
xor
mov
add
mov
ds
mov
mov
mov
imul
int3
xchg
xchg
leave
jl
imul
dec
and
or
jl
jns
repz
(bad)
out
out
cmp
push
push
loope
fwait
jbe
scas
adc
inc
mov
xor
mov
mov
jl
xchg
rol
sub
in
mov
ror
mov
sub
idiv
aaa
push
int3
cdq
cs
shl
or
cld
leave
xchg
test
add
inc
ror
sbb
aaa
mov
inc
mov
push
lds
adc
pop
bound
loopne
sub
out
jmp
pop
cmp
clc
or
lods
mov
pop
test
dec
sbb
or
pop
jnp
adc
out
dec
rcr
daa
frstor
cli
inc
sbb
ins
dec
pusha
iret
and
lock
or
sub
pop
jno
fwait
cmp
test
shl
xor
bound
xor
hlt
push
mov
call
mov
sbb
ss
gs
xlat
retf
pop
cmp
xchg
and
loop
xchg
bound
loopne
xchg
inc
add
retf
inc
loopne
cmp
in
int3
jmp
stos
mov
jb
not
neg
mov
loope
dec
lea
stc
inc
jnp
or
lods
mov
jbe
call
movs
pop
pop
(bad)
and
in
mov
xchg
mov
mov
imul
inc
aam
dec
jg
gs
in
adc
fimul
test
ss
sub
jge
neg
mov
pop
dec
xchg
add
xchg
pop
popa
mov
les
xor
jns
cmp
jmp
stc
out
jbe
push
fs
or
mov
inc
scas
sbb
push
xor
clc
repnz
sbb
adc
loope
arpl
loope
adc
cmp
push
call
lock
ret
add
(bad)
fs
xor
popf
mov
push
and
pop
jb
pusha
inc
dec
sub
stos
adc
sub
dec
cld
push
sbb
pop
jmp
ins
fisubr
cmps
push
int3
xchg
das
js
std
add
fsub
sti
ds
inc
mov
(bad)
stos
push
cwde
push
aas
lods
push
cmp
add
repz
push
push
sar
push
inc
inc
mov
mov
and
mov
dec
stos
clc
sub
shl
mov
ficom
jne
xchg
ins
cmp
push
cwde
push
out
out
fs
(bad)
call
and
xor
aaa
(bad)
sbb
cmps
mov
inc
ret
xchg
jecxz
add
in
pop
out
mov
and
int3
dec
jecxz
xlat
push
push
repnz
bound
inc
es
pop
repz
sub
outs
xor
mov
xor
mov
mov
cmps
rcr
out
movs
xchg
dec
ret
bound
mov
add
cmp
call
cmc
sbb
imul
and
(bad)
arpl
mov
mov
out
mov
aas
dec
cmp
dec
in
scas
or
bnd
lea
movs
inc
bswap
inc
cmp
test
cmp
(bad)
(bad)
(bad)
addr16
inc
es
test
aaa
add
xor
mov
(bad)
cmp
pop
out
loope
dec
add
stos
cmp
mov
aam
mov
ret
es
call
aas
mov
js
vcvttpd2dq
jl
mov
jae
pusha
inc
repnz
dec
iret
dec
inc
inc
leave
sub
xor
pop
jae
out
lea
daa
dec
mov
popa
out
cwde
dec
loop
mov
xor
xchg
into
cmp
jns
nop
data16
enter
xchg
push
inc
jbe
bound
fscale
bound
outs
pop
in
in
pop
jle
inc
jno
ins
cmps
mov
xlat
pusha
or
sub
cmps
(bad)
loope
pop
pop
jp
cmp
les
cmc
pushf
or
push
repnz
push
push
add
xchg
inc
sub
jge
or
fistp
iret
xor
pop
add
es
jmp
xor
cmps
call
jg
cmc
xor
scas
inc
fs
sahf
movs
xlat
mov
mov
movs
sub
mov
loopne
adc
xchg
cs
fdiv
adc
cmp
mov
fidiv
jecxz
or
mov
sbb
ds
mov
sbb
retf
call
sbb
xchg
mov
retf
inc
in
cmp
mov
ret
adc
icebp
popa
ret
and
movs
xchg
ins
enter
addr16
sub
imul
aaa
ss
inc
cmp
push
movs
(bad)
adc
rcr
sub
jg
pop
test
xchg
jecxz
or
or
imul
shl
dec
mov
in
adc
neg
cmp
adc
and
mov
inc
mov
mov
pop
mov
or
call
cmp
jmp
cmc
call
jbe
imul
out
or
sbb
cmp
cmp
inc
or
or
pop
dec
xor
addr16
dec
test
lods
sbb
ins
push
push
add
lods
cld
popa
pop
nop
jge
jo
jno
cmp
(bad)
dec
mov
jg
sub
inc
int3
jbe
fidivr
jne
push
jge
cmc
adc
je
rcl
cmp
add
or
cdq
jnp
and
icebp
push
xor
repz
sbb
dec
mov
mov
inc
mov
popa
ss
xchg
xchg
(bad)
movs
jmp
fs
or
fistp
stos
ret
lahf
pop
xor
ret
test
cmps
pop
xor
mov
pop
popa
gs
mov
cmp
leave
(bad)
retf
iret
int
xlat
sub
mov
retf
stos
pop
fwait
outs
sub
pop
pusha
add
(bad)
in
cmp
daa
sahf
icebp
jmp
stc
push
cmps
push
pop
aam
inc
adc
cdq
loop
fld
dec
int3
retf
xchg
fcomp
push
push
dec
adc
sub
sbb
xchg
out
xor
mov
adc
mov
cmp
cmps
xor
cmp
xor
inc
mov
(bad)
sub
sub
fcomi
push
inc
fdiv
adc
inc
or
lods
dec
mov
(bad)
js
add
out
jb
fmul
jecxz
ins
fnsave
movs
pop
stos
mov
pop
ins
mov
dec
xor
mov
iret
ret
sbb
enter
push
pop
jecxz
push
(bad)
not
hlt
adc
xor
(bad)
jns
inc
adc
and
ins
mov
fisub
or
xlat
pop
cmp
not
dec
mov
mov
push
xlat
add
sbb
cmp
ins
xchg
out
ss
daa
and
dec
cmove
test
out
dec
sub
test
mov
mov
repz
mov
xchg
adc
push
hlt
jl
fnstcw
xchg
adc
aad
repnz
ins
push
and
mov
lods
js
jo
pop
lds
jno
ja
pusha
jp
mov
in
sbb
iret
call
(bad)
sub
pop
cmps
mov
jp
sub
icebp
gs
fst
mov
ret
hlt
popa
(bad)
gs
xchg
mov
and
jecxz
xchg
mov
js
das
pop
scas
lahf
and
push
ja
stc
push
fs
inc
stos
adc
mov
xor
sbb
push
outs
daa
sbb
push
outs
pop
cmp
scas
sub
xchg
inc
jmp
mov
pop
ret
or
or
xchg
fidiv
push
stos
push
jns
sbb
inc
pop
test
sub
jne
inc
das
dec
cwde
xchg
sub
retf
add
dec
jmp
sar
mov
(bad)
sub
dec
sbb
stos
jle
pushf
mov
aas
xor
popf
aaa
push
cmc
adc
jb
and
xchg
xor
or
ja
pop
cld
ins
or
scas
push
cdq
loop
push
jnp
xor
lahf
lock
ret
mov
xlat
mov
xor
sbb
xchg
jmp
adc
sbb
sub
(bad)
arpl
jg
sub
in
and
popa
push
jae
ds
mov
rcl
push
mov
popa
pop
sbb
rcr
imul
je
or
mov
xchg
cdq
push
inc
dec
outs
mov
(bad)
or
lahf
push
pusha
loopne
stos
push
inc
dec
pop
jne
sub
cmp
leave
(bad)
pop
push
mov
ret
call
inc
dec
pop
pop
mov
mov
adc
scas
fbld
sbb
jne
in
adc
sbb
pop
inc
mov
cs
dec
adc
and
push
xchg
sub
push
xlat
xchg
repz
outs
mov
jo
sbb
adc
lea
je
cmp
stos
fild
shl
int3
call
jl
cmc
inc
bound
sti
ss
jnp
xor
arpl
es
movs
popf
push
ds
out
ret
inc
pushf
sbb
mov
mov
hlt
or
ins
jmp
pusha
movs
xchg
push
lods
xchg
fstp
inc
int
push
or
lahf
cmc
push
cmps
stos
xchg
sar
lahf
mov
cmp
sub
adc
mov
xlat
enter
pop
repnz
push
jl
and
add
xor
xor
jb
aaa
andps
mov
sti
push
rdmsr
pusha
sub
pop
add
dec
test
dec
scas
icebp
cdq
adc
push
dec
cmp
inc
or
cmp
lock
loop
mov
bound
xor
xchg
(bad)
(bad)
sti
xchg
adc
or
mov
js
xchg
dec
mov
dec
pop
(bad)
mov
test
inc
xlat
add
sub
lds
pusha
repz
(bad)
mov
jno
inc
in
adc
cmps
outs
test
mov
out
out
sub
(bad)
out
mov
or
and
cli
pop
pop
outs
dec
sub
ficom
dec
cmc
or
jne
rcr
int
je
(bad)
sub
jmp
jb
stc
push
xor
fistp
xchg
aaa
cmp
adc
jns
test
jl
mov
ss
and
ret
imul
mov
pop
sub
jbe
pushf
in
xchg
sub
out
mov
jmp
hlt
cmps
mov
fcmovne
mul
aas
outs
inc
jmp
cdq
or
add
add
imul
aas
mov
push
add
inc
jns
(bad)
mov
xor
and
imul
popa
mov
inc
ja
sahf
iret
test
mov
jnp
and
xchg
xchg
xor
mov
add
pop
in
cmp
ret
cmp
xlat
out
adc
test
movs
cmps
mov
sar
jne
jno
cmp
xchg
mov
jp
mov
mov
dec
add
sbb
stos
add
sub
pop
sbb
mov
in
rcr
cwde
and
jge
xchg
cmc
lock
and
shl
mov
test
and
lods
repnz
data16
push
jmp
add
fisttp
sbb
ud1
and
fwait
adc
jno
or
movs
and
sbb
ja
lods
in
es
dec
(bad)
dec
push
cmps
push
call
xchg
adc
enter
or
mov
call
sbb
add
cmp
pushf
xchg
xchg
pop
xor
sbb
mov
loope
addr16
xor
xor
mov
fwait
xlat
fdiv
and
jl
outs
lods
sar
hlt
lods
or
or
jg
xchg
fwait
nop
stos
push
retf
dec
inc
in
arpl
cmp
call
cmps
or
jno
pop
dec
and
sbb
out
cmp
fsub
cmp
ins
push
or
sub
mov
jg
test
sub
(bad)
stc
imul
jle
xor
call
ret
sub
sti
repz
ja
push
and
retf
aas
pushf
test
out
ds
jg
loope
call
or
(bad)
ja
jns
mov
pop
mov
add
fldenv
xor
sti
pop
and
ror
in
xor
push
rcr
(bad)
pop
cmp
jo
add
(bad)
in
cwde
repz
mov
xchg
cmps
cmp
mov
int
fadd
sub
lods
push
sahf
pop
stc
out
or
mov
sub
out
xor
daa
data16
xor
and
pop
into
or
stos
jmp
inc
xchg
ja
and
clc
mov
fsubr
push
rol
push
aad
ins
push
pop
push
add
dec
jmp
cmp
inc
popf
mov
dec
pop
fisubr
js
call
push
push
jmp
scas
ins
test
xchg
push
stos
push
xchg
xchg
push
call
fimul
test
int3
adc
pop
pop
cmp
xchg
cdq
xor
adc
push
push
(bad)
call
and
ins
inc
push
ret
and
mov
cdq
jae
ret
fs
pop
arpl
sbb
out
imul
jnp
cs
or
and
xchg
(bad)
int
in
jge
xor
int
aaa
and
jnp
xchg
aaa
add
xor
inc
xchg
call
shl
jge
sub
loope
or
cs
dec
idiv
mov
retf
jg
push
jns
jb
(bad)
jle
sub
(bad)
into
lock
dec
cwde
mov
add
sub
sbb
out
fnstenv
daa
js
test
(bad)
mov
jecxz
dec
fiadd
(bad)
repz
aad
dec
je
cwde
sub
cmp
mov
stos
pop
adc
aas
mov
repz
inc
test
aam
js
fmul
xlat
xor
clc
scas
ret
into
pop
test
in
jl
add
ins
in
push
cwde
fdivr
repnz
repz
sahf
xor
das
stc
hlt
jecxz
mov
add
mov
outs
inc
sahf
pusha
push
jl
popa
mov
sub
test
mov
movs
mov
adc
inc
xchg
or
fld
mov
pop
and
pop
mov
fadd
dec
js
loop
data16
sbb
push
(bad)
(bad)
xor
or
xor
push
sahf
test
jmp
jl
or
pop
cmp
xor
ret
int3
cli
cmp
enter
mov
adc
xchg
push
cwde
inc
hlt
cmp
pop
test
jmp
movs
jmp
mov
cmp
sub
mov
sti
pop
mov
cmp
in
popa
repz
pop
and
sbb
into
fwait
sub
jmp
push
push
cs
xor
xchg
test
vpcmpgtw
xor
retf
fist
dec
jns
fiadd
xchg
cmp
popa
sahf
outs
dec
mov
or
pop
rol
jae
pop
mov
movs
cld
dec
xor
xchg
pop
sub
dec
jle
mov
xchg
cmp
neg
(bad)
sub
adc
movs
fstp
pop
cwde
cdq
xchg
lods
out
clc
jecxz
sbb
jns
adc
lea
loop
or
adc
sti
cmc
inc
sbb
adc
aam
xchg
xor
cmps
sbb
lods
outs
mov
mov
ss
out
pop
jmp
ins
adc
adc
mov
and
sub
cmp
fwait
push
add
in
adc
and
fsub
std
pop
cmps
jne
icebp
and
adc
test
mov
or
cmp
mov
leave
jp
cs
sub
test
xchg
scas
sub
into
outs
lods
dec
outs
mov
fsubr
cmp
sub
sbb
mov
jl
inc
fadd
loopne
xor
das
push
pop
mov
pop
xchg
dec
add
xchg
jmp
mov
test
aad
loope
cmp
and
ret
push
mov
movs
ror
jle
mov
lahf
mov
les
lahf
push
enter
test
mov
lods
repnz
int3
movs
in
pusha
xor
fld
ds
fcomp
stos
xlat
sub
sbb
test
push
daa
enter
out
lds
in
add
sub
loopne
push
psllw
arpl
xchg
ja
adc
stos
js
stos
xor
and
cld
jp
inc
pop
sbb
cmp
cmp
loop
mov
add
mov
into
xor
int3
lods
mov
sbb
stc
sub
xor
sub
or
lods
pop
mov
imul
sub
xchg
(bad)
in
popf
adc
mov
cmps
ins
call
iret
mov
cmp
push
mov
pop
mov
push
add
shr
ret
psubb
imul
adc
add
mov
and
sbb
push
sbb
cmp
in
loopne
ret
stos
icebp
imul
outs
push
(bad)
inc
push
xor
pusha
jae
or
(bad)
(bad)
mov
mov
or
jns
xchg
cdq
gs
loop
test
ror
mov
sbb
aad
mov
push
inc
and
fist
pop
cmp
add
daa
pop
inc
xor
nop
lods
inc
popf
ret
adc
dec
rol
hlt
retf
jb
es
jb
pop
(bad)
jmp
jnp
clc
lahf
and
(bad)
out
xor
xlat
push
mov
jp
jl
cmp
dec
add
lock
mov
lea
pop
(bad)
aaa
xor
sub
arpl
addr16
adc
rcl
mov
sbb
push
(bad)
nop
mul
pop
pop
jne
test
ret
xor
cld
push
add
dec
repnz
jmp
inc
ret
mov
icebp
mov
inc
inc
dec
repz
ins
stos
pop
xor
mov
ror
sbb
jge
cli
rcl
mov
fs
dec
jbe
shl
js
(bad)
lods
sub
int
jmp
test
js
pusha
std
in
add
mov
xor
int
int3
jmp
outs
mov
or
jg
mov
cmp
xchg
(bad)
fdiv
aaa
xchg
sub
popa
test
jb
rol
sub
aad
out
out
add
mov
adc
mov
sbb
and
mov
mov
push
iret
ins
sub
mov
inc
jmp
scas
push
pop
loope
cmp
or
(bad)
adc
push
pop
jp
sub
lock
add
and
ret
add
iret
xlat
ins
mov
xor
test
push
stos
dec
pop
sbb
xchg
(bad)
xchg
imul
xchg
fmulp
xor
(bad)
mov
or
loopne
push
pop
sub
mov
lahf
loopne
mov
leave
nop
mov
clc
push
sbb
in
mov
addr16
xor
retf
aas
sub
imul
mov
es
jns
mov
outs
fnstcw
and
xchg
in
cmp
ret
imul
(bad)
mov
ror
aam
icebp
jo
inc
xor
test
dec
mov
int
cmp
dec
out
rcr
dec
leave
cmp
cmp
lock
bound
lods
mov
mov
sbb
stos
dec
cwde
fbstp
in
xor
(bad)
lods
repnz
cmc
pop
ins
xchg
mov
cmps
dec
out
mov
into
call
cmps
in
ins
jmp
mov
in
jge
cwde
scas
iret
scas
jbe
in
mov
mov
sub
clc
mov
mov
fwait
mov
xor
sbb
push
or
shl
mov
int
outs
mov
ds
inc
and
call
xlat
movlps
inc
mov
xlat
pop
aaa
jbe
push
xchg
or
or
dec
repnz
lods
(bad)
ja
fwait
bound
repnz
sub
rcl
jno
mov
lds
push
add
fwait
push
adc
inc
fcomp
mov
xchg
xchg
sub
mov
push
mov
push
int3
test
loop
mov
inc
mov
dec
xor
add
adc
and
mov
in
dec
push
push
push
out
and
in
xchg
clc
mov
(bad)
cmps
pop
rcl
fbstp
stc
jecxz
inc
scas
aaa
jge
push
xchg
test
pop
das
sahf
pop
test
(bad)
jl
sbb
inc
fstp
xor
aas
sbb
xor
inc
xor
fild
test
or
int3
sub
js
inc
mov
arpl
jp
xor
in
imul
pop
js
lods
xor
mov
(bad)
push
push
ror
pop
popf
fld
mov
adc
sub
rcl
retf
pop
push
loope
fist
retf
rol
pop
pop
inc
call
xlat
mov
sbb
mov
js
repnz
mov
mov
movlps
test
cld
adc
and
push
mov
mov
mov
ret
outs
sbb
jle
cmps
push
test
scas
in
xor
jle
fcmovu
bswap
xor
sub
fldln2
cmps
sbb
inc
jmp
add
loope
(bad)
jns
push
inc
push
fwait
pop
push
mov
and
jecxz
adc
and
mov
data16
lds
push
sub
xchg
and
mov
popf
dec
pop
jecxz
pop
arpl
mov
and
mov
add
ins
out
movs
fsubrp
scas
fwait
xchg
int3
(bad)
imul
cdq
sub
hlt
aaa
ins
pop
ins
push
inc
xchg
mov
loopne
jns
(bad)
sub
retf
adc
mov
jmp
jecxz
repnz
xchg
cmps
dec
stc
aas
daa
bound
xchg
mov
xchg
xor
jbe
in
xchg
fcompp
rcr
xor
lock
movs
mov
mov
push
out
(bad)
mov
xchg
mov
mov
or
inc
jmp
setle
loope
enter
rcl
out
stc
lea
add
aas
sar
mov
xchg
mov
sub
xor
test
adc
aad
dec
push
jno
and
loop
ficomp
jno
inc
or
sub
inc
lds
shl
daa
lea
in
and
retf
out
retf
pop
hlt
xchg
ret
shl
sub
and
(bad)
adc
(bad)
and
adc
repnz
push
sbb
adc
xor
mov
lahf
inc
cmc
xchg
nop
inc
xor
lea
xlat
sbb
mov
ficom
inc
movs
cmp
and
sub
jmp
push
and
push
nop
pop
in
call
dec
cwde
loop
icebp
in
je
dec
rcr
div
jg
pop
(bad)
ins
mov
and
call
push
jns
or
mov
adc
repz
mov
rol
sbb
or
(bad)
mov
mov
daa
xor
not
fdivr
retf
adc
xchg
fadd
jecxz
sbb
mov
jb
data16
xchg
add
mov
sbb
inc
in
ja
enterw
sbb
dec
sbb
jno
movs
sar
imul
aam
jmp
ja
adc
test
addr16
in
sar
inc
rep
hlt
lds
bound
mov
push
push
add
jmp
ror
push
movs
jg
inc
pop
sub
arpl
rol
test
mov
fs
rol
ret
jl
cmp
jmp
pushf
or
jo
xchg
push
daa
dec
mov
js
xor
mov
fisubr
shl
ret
in
std
cli
std
sbb
(bad)
gs
loope
jbe
mov
js
pop
jmp
les
icebp
jl
mov
mov
call
mov
cmps
int
mov
and
out
push
in
shl
ins
dec
aad
add
and
xor
cmc
sub
(bad)
nop
popf
push
test
pop
out
pop
cmps
dec
fwait
or
movs
or
mov
in
js
loopne
push
add
shr
loopne
dec
push
or
mov
dec
mov
or
xor
lods
das
jne
(bad)
rol
jecxz
dec
icebp
mov
cdq
push
shr
rol
add
gs
je
leave
jb
jecxz
inc
lea
sbb
(bad)
mov
cmp
sub
mov
rol
pop
imul
mov
xor
mov
or
dec
inc
in
sahf
adc
inc
dec
or
mov
jnp
es
aad
pop
add
or
daa
sub
imul
aas
imul
add
sub
outs
dec
and
hlt
inc
(bad)
mov
(bad)
cmp
jo
retf
mov
outs
std
pop
xor
gs
add
adc
cmp
add
mov
sbb
arpl
xor
out
push
mov
ficomp
repz
dec
int3
in
ss
sti
lods
adc
sbb
out
loop
jb
or
out
sub
xchg
pop
xor
popw
data16
stos
test
lock
mov
cld
xlat
xchg
addr16
mov
and
jmp
jns
daa
loopne
mov
ss
call
inc
sub
in
and
(bad)
mov
xabort
mov
inc
popf
in
mov
dec
pusha
push
fstp
cmp
fs
(bad)
outs
mov
inc
sbb
pop
std
das
cmp
fld
call
sub
sub
dec
push
rol
iret
retf
pop
nop
inc
jmp
inc
mov
inc
adc
lods
pop
dec
(bad)
mov
int
inc
pop
fwait
jno
push
mov
rol
je
inc
adc
inc
lahf
fimul
test
add
pop
adc
sar
xor
jp
push
in
xlat
cvtdq2ps
test
(bad)
mov
clc
mov
imul
ret
es
out
das
mov
inc
repz
sbb
es
xor
xchg
pop
push
xchg
lock
loope
pop
mov
inc
xor
or
dec
xor
push
sar
sti
xchg
neg
retf
lods
inc
jb
(bad)
jmp
adc
push
adc
scas
and
jmp
inc
add
pushw
test
or
push
out
fbstp
push
add
pop
das
jns
inc
adc
add
fld
push
leave
mov
xor
push
stos
and
sub
or
xchg
retf
ja
(bad)
(bad)
pop
vpavgb
jnp
and
adc
mov
cmc
push
lds
mov
pop
in
adc
out
in
sub
xchg
pushf
daa
push
jge
les
(bad)
push
(bad)
fst
out
test
and
inc
dec
mov
lods
sub
test
std
outs
pop
xchg
je
retf
jmp
in
in
int3
aad
inc
inc
sahf
add
enter
pop
pop
pop
cmp
xor
adc
(bad)
clc
lods
pop
mov
xor
enter
inc
or
mov
cmp
stos
inc
and
fild
or
enter
retf
sbb
xor
dec
loope
pop
rol
xchg
sahf
nop
mov
mov
dec
push
pop
mov
xchg
leave
mov
lods
mov
xor
jne
push
jge
jne
inc
cmps
mov
add
mov
dec
fcomp
fidiv
mov
push
mov
out
sti
mov
lods
in
sbb
or
pop
les
xlat
inc
mov
ins
ss
sbb
push
or
cmps
daa
mov
lahf
dec
es
jle
dec
jmp
clc
sub
inc
ins
rcr
cli
sub
and
pop
xlat
test
lods
sbb
clc
enter
dec
imul
or
(bad)
lds
mov
mov
gs
mov
out
mov
data16
push
jmp
pop
jne
shl
mov
retf
xchg
imul
adc
dec
mov
push
aad
fcmovb
gs
xchg
push
xchg
push
inc
in
add
aad
iret
xchg
shl
dec
pop
fld
or
mov
push
cmp
aad
bound
outs
mov
test
add
push
mov
aam
push
jns
add
cmps
ins
in
pop
retf
pop
or
mov
sahf
(bad)
cmp
ss
dec
fstp
dec
xchg
out
pop
test
sbb
aad
or
sub
pusha
cdq
or
rcr
popa
ror
cmp
sub
xchg
sbb
jmp
std
popaw
es
sub
ror
clc
pop
xchg
loope
pop
pop
sub
add
mov
(bad)
std
scas
inc
xor
adc
call
shl
or
push
push
mov
lods
out
pop
inc
xchg
ret
jmp
jle
fnstsw
adc
scas
addr16
and
bound
jbe
and
sar
mov
stos
icebp
add
outs
dec
retf
ss
xchg
jnp
imul
mov
pop
std
jne
cld
dec
pop
leave
aam
mov
sbb
leave
cli
ffree
mov
pop
or
sbb
jmp
clc
jmp
push
fiadd
adc
inc
shl
push
pushf
popa
mov
test
adc
out
and
push
lds
push
cmc
dec
outs
outs
js
or
outs
cmp
int
test
push
and
xor
add
sub
cmp
cmc
mov
cmp
bnd
cmp
mov
xchg
rcr
retf
std
aas
or
arpl
arpl
shl
cmp
xor
xchg
cmps
cdq
sbb
stos
sbb
adc
adc
les
test
mov
imul
loopne
pop
push
push
push
lods
pop
or
jle
dec
in
lea
stos
pop
or
sub
test
jb
aam
push
add
(bad)
adc
int3
pusha
pop
inc
ins
cld
push
adc
test
pop
dec
push
inc
add
mov
jne
add
cmp
or
sar
and
sub
and
clc
bound
or
out
adc
int3
push
fiadd
sti
out
adc
sub
push
add
retf
jns
add
mov
call
cmps
pop
(bad)
cmps
(bad)
and
xchg
test
aas
cmp
addr16
ds
jge
pop
inc
push
cmp
jae
addr16
jmp
neg
icebp
inc
xor
dec
sbb
lds
retf
cmp
mov
mov
pop
fidivr
sbb
mov
dec
sbb
fstp
sub
outs
cmps
lahf
shl
fimul
push
add
loope
xchg
pop
adc
fst
sub
push
test
adc
pop
rol
ds
mov
and
cmps
mov
loopne
mov
inc
dec
jne
lds
xor
mov
sti
movs
add
sub
mov
adc
mov
(bad)
cli
and
movs
jo
in
xor
sbb
hlt
lods
pop
mov
cmps
fisubr
add
retf
fstp
or
jmp
dec
or
shl
xchg
mov
jmp
sub
sti
ins
fdivr
xchg
test
test
loopne
inc
mov
outs
ja
and
sbb
outs
ds
cwde
jbe
pop
outs
inc
fistp
mov
loope
xor
and
test
fs
ins
into
cmp
mov
movs
mov
sub
(bad)
imul
lods
fidivr
xor
inc
leave
imul
fmulp
aaa
push
and
push
(bad)
shl
lock
jl
jne
adc
mov
out
sub
add
faddp
jge
call
xchg
jb
imul
sub
push
and
mov
cmc
test
and
xor
push
in
jmp
retf
mov
push
xchg
and
data16
or
clc
ret
imul
jmp
les
addr16
sti
sar
imul
mov
lahf
dec
inc
arpl
mov
or
push
aad
xlat
leave
out
mov
outs
add
push
les
cmp
mov
xchg
adc
lds
adc
jne
dec
imul
jmp
sbb
jmp
jmp
jmp
arpl
adc
es
fisub
lahf
repz
add
neg
dec
jmp
in
cmp
fstp
mov
fcmovb
dec
jge
mov
xlat
js
push
add
mov
push
sbb
scas
mov
cs
lea
xor
stos
jecxz
(bad)
xor
lahf
push
cdq
pop
cmp
fisttp
cdq
ror
mov
push
es
push
mov
fild
fs
sbb
adc
cmps
pop
jl
(bad)
shr
mov
or
cdq
inc
dec
xor
je
les
mov
imul
mov
jb
jg
jnp
push
aam
push
jne
mov
aam
ret
loop
push
movs
movs
inc
lea
inc
ror
sub
mov
test
cmp
test
sbb
rol
mov
pop
shl
cld
sbb
jno
sbb
pop
call
movs
retf
fnstenv
in
ficomp
ss
loope
or
pop
cmc
mov
and
addr16
shl
add
stos
or
fadd
mov
mov
int
outs
xchg
das
rcr
jbe
nop
fsub
mov
nop
out
mov
outs
mov
inc
jne
and
sub
mov
fs
test
movs
push
pop
rol
shl
les
jmp
or
in
lea
daa
stos
call
push
(bad)
mov
stos
aam
xor
shl
mov
xchg
and
or
ds
lock
jl
(bad)
nop
rcr
sbb
push
sti
mov
bound
dec
call
mov
sar
aam
sub
nop
xor
call
cmp
ret
xor
sbb
aad
or
mov
jmp
fs
stos
int
adc
inc
int
jecxz
or
scas
xor
shr
mov
rcl
inc
cli
icebp
cmps
hlt
sbb
mov
call
sub
pcmpeqd
mov
inc
mov
mov
push
(bad)
sbb
das
aam
outs
mov
jge
inc
mov
inc
pop
push
mov
jnp
jno
mov
ret
jle
(bad)
jne
adc
mov
fsub
call
xchg
xchg
xchg
xor
call
das
inc
pop
retf
mov
mov
adc
lds
pop
jge
scas
stos
cmps
push
fiadd
cmp
in
ins
add
lods
xchg
imul
nop
retf
or
enter
or
mov
push
sub
arpl
mov
shl
dec
jmp
adc
out
mov
hlt
jnp
xor
lods
dec
pop
cmp
jle
dec
call
out
add
int3
mov
pop
push
pop
fadd
xchg
jno
sbb
add
sbb
mov
fwait
push
cld
ror
push
jge
xor
mov
ins
add
jp
pusha
sbb
sbb
fwait
das
mov
fwait
outs
cmp
call
dec
(bad)
js
dec
xchg
lods
clc
or
fadd
mov
push
push
test
lods
xor
into
mov
(bad)
inc
mov
imul
int
popf
xchg
std
add
pop
mov
pop
xor
popa
xchg
out
arpl
std
or
pop
into
mov
push
inc
pop
bound
scas
in
daa
and
xchg
imul
jno
push
push
sbb
cmp
and
test
push
repz
mov
cli
addr16
mov
pop
mov
xchg
pop
cmp
sub
ret
push
dec
or
sahf
gs
fnsave
mov
cdq
push
push
mov
rcr
push
mov
sub
push
push
ds
cdq
adc
into
mov
mov
cmp
jne
int
push
(bad)
in
in
jo
test
sti
mov
mov
xchg
xor
adc
inc
mov
sbb
pop
call
lods
fwait
std
add
mov
push
xchg
push
rcl
lods
push
mov
xchg
(bad)
fcomp
jbe
mov
or
jg
sub
leave
iret
imul
int3
sbb
outs
xchg
nop
popa
dec
jno
jp
fmul
and
dec
aas
adc
inc
add
xor
or
(bad)
outs
lahf
or
fist
inc
mov
push
in
mov
pop
xchg
xchg
ret
inc
xchg
loope
inc
and
stos
rcl
xchg
shl
in
pop
or
sub
in
(bad)
stc
call
es
adc
mov
scas
retf
lock
mov
xor
jnp
loop
jmp
fdivr
sbb
xchg
cmp
in
push
cmp
ins
mov
push
and
addr16
lahf
cdq
sub
pop
movs
out
imul
inc
pop
cwde
icebp
jns
ror
test
dec
xchg
xchg
push
jnp
cmp
movs
pop
xchg
sbb
mov
push
xor
call
push
sahf
dec
fst
test
adc
shl
cmp
mov
jne
addr16
mov
jp
into
dec
cmp
or
test
stos
imul
lods
pop
test
outs
icebp
in
or
pop
xadd
adc
mov
mov
jecxz
jle
mov
clc
pop
push
inc
lds
lods
int3
adc
mov
mov
ret
sub
sub
sub
shl
fmul
and
sub
push
(bad)
retf
cmp
mov
repz
(bad)
xchg
rcl
ins
retf
mov
add
sti
adc
pop
push
mov
fidivr
inc
mov
inc
dec
arpl
in
mov
nop
ins
cmp
mov
adc
sub
and
cmp
add
stos
cmps
out
jae
fdivr
cs
xor
(bad)
fsubr
push
imul
test
pop
movs
adc
dec
sub
push
and
mov
ins
cdq
fsub
into
lods
int3
lds
add
xchg
adc
inc
xchg
into
xchg
jle
push
in
aad
mov
or
cmp
scas
push
mov
hlt
leave
push
push
fsub
push
in
(bad)
push
xchg
mov
or
mov
int3
dec
leave
ja
lods
in
ins
pushf
pop
dec
push
jne
mov
arpl
cmp
int3
repz
ficom
jo
leave
cdq
dec
sbb
jne
or
(bad)
push
sub
ror
pop
dec
test
jae
lock
(bad)
scas
in
sbb
in
add
adc
out
icebp
test
cmp
xchg
sbb
jo
cli
stos
sub
sub
in
jno
push
imul
scas
aas
sbb
(bad)
cwde
shr
gs
repz
xor
pop
add
hlt
sbb
scas
loopne
add
ret
mov
imul
xchg
sub
cmp
je
dec
mov
(bad)
jns
pop
mov
push
repnz
and
mov
mov
jmp
rcr
ins
and
pop
mov
sti
retf
sti
movs
mov
hlt
mov
mov
scas
mov
mov
fwait
iret
mov
mov
gs
das
dec
out
mov
jg
sbb
mov
inc
call
stos
(bad)
shr
fild
sub
out
push
fwait
push
fsubr
pop
xchg
lods
fadd
ror
mov
sub
loope
stos
arpl
and
inc
mov
jg
jl
push
stos
clc
das
ja
xor
cmps
pop
or
and
dec
or
leave
aad
movs
dec
js
ret
movs
iret
xor
(bad)
xor
xchg
ja
stos
jo
add
stos
mov
xor
popa
push
mov
jmp
and
add
mov
push
add
mov
cmp
adc
inc
sbb
rcl
int3
add
fstp
popf
adc
push
out
sbb
sbb
push
jb
mov
out
repnz
jo
outs
or
jae
sub
jbe
sahf
or
scas
in
pop
sub
mov
jge
push
adc
mov
pop
sub
inc
xchg
cli
pushf
stos
add
imul
push
loop
into
and
inc
adc
cmp
es
sub
(bad)
mov
mov
dec
xchg
adc
xor
xchg
add
lea
test
xchg
sub
xchg
cld
hlt
pop
out
lea
add
xchg
jle
(bad)
push
movs
popa
inc
mov
jmp
sahf
cli
xor
pop
and
cmc
xchg
int3
dec
pop
outs
pop
ins
lods
add
xor
mov
pop
(bad)
std
mov
movs
or
mov
xor
int
mov
repz
mov
inc
addr16
adc
mov
arpl
popf
and
xor
aas
ret
stos
lock
or
jle
loope
sbb
and
mov
outs
mov
jne
cdq
xor
inc
cmp
jecxz
mov
fwait
sar
or
inc
add
sub
data16
scas
xor
cwde
into
loope
jb
xchg
cli
movs
mov
jae
pop
loope
int3
pushf
sub
shl
add
push
cdq
jbe
js
dec
push
sbb
or
mov
cmc
ins
dec
loop
xlat
cmc
jbe
push
mov
loopne
fidivr
or
cmps
in
inc
inc
gs
cmp
mov
fxch
hlt
cmp
or
push
(bad)
scas
je
ds
xor
lods
pop
pop
das
fsub
mov
in
add
into
cmps
dec
cmp
inc
add
pop
into
dec
test
das
out
movs
out
jp
inc
inc
push
out
aad
fisubr
leave
mov
in
rol
neg
aad
jne
xor
repnz
sub
pshufw
repz
or
fcomp
stos
out
js
xor
xor
fdivr
mov
jo
mov
lds
mov
dec
enter
jl
(bad)
mov
rcl
mov
sbb
jnp
test
out
dec
sub
or
sti
out
add
push
push
lea
mov
arpl
daa
into
mov
pop
xor
movs
add
fsubr
adc
fiadd
rcl
xor
arpl
gs
in
aad
sti
mov
pop
jo
fnsave
mov
stc
test
jmp
mov
ret
sbb
cmp
mov
mov
js
sbb
add
mov
mov
sub
pop
je
jnp
pop
cli
je
xchg
push
xchg
or
push
(bad)
mov
adc
into
push
lds
adc
and
loop
pop
mov
xchg
sar
adc
mov
pop
imul
popa
cmp
into
pop
push
cli
(bad)
sub
movs
out
add
int3
leave
out
out
repnz
fnstenv
push
fild
mov
push
push
inc
mov
pop
je
or
popa
movs
mov
mov
sbb
push
xchg
pop
out
xor
test
and
pushf
push
xor
xor
iret
sub
xchg
sbb
bound
and
stos
scas
ins
cmc
ret
rol
test
pop
leave
add
in
call
int
cmp
imul
inc
outs
in
mov
das
pop
or
cmp
mov
in
add
out
std
ins
cmp
jl
sbb
movs
jmp
and
(bad)
xchg
add
stc
add
dec
retf
inc
clc
in
push
inc
xor
push
shl
mov
push
and
fst
jg
es
cmp
jbe
arpl
fsub
inc
ins
popa
cs
ins
out
in
cs
xchg
sbb
pop
push
stc
hlt
push
imul
out
mov
lods
int
pop
xchg
jo
es
(bad)
ins
cmp
xor
leave
sbb
mov
jbe
and
mov
or
xor
ja
dec
xor
dec
add
rcr
mov
(bad)
jge
sbb
jecxz
jbe
scas
dec
fisub
xchg
outs
ins
jno
enter
jne
sbb
stos
sub
sahf
mov
enter
cmp
dec
scas
mov
mov
mov
inc
call
retf
adc
in
jmp
out
pop
(bad)
int
xor
out
pop
mul
pop
pop
push
outs
mov
pop
lds
(bad)
in
out
mov
mov
sbb
fs
cwde
aam
push
stos
or
icebp
mov
sbb
mov
test
sub
inc
jo
ins
mov
jecxz
jecxz
sbb
and
in
cmp
or
mov
stc
mov
mov
aaa
rcl
lock
repnz
leave
pop
mov
cmp
loop
mov
ror
cmps
push
popa
mov
xchg
pop
dec
sub
xor
and
outs
std
sbb
xchg
mov
jno
inc
mov
inc
jecxz
shl
ja
nop
mov
xchg
std
cli
jne
shr
fild
and
push
das
mov
sub
jo
stos
sbb
mov
(bad)
pop
dec
out
dec
inc
inc
pop
push
jp
sbb
cld
movs
in
ins
repz
cmps
mov
pop
fcom
ror
xchg
cmc
les
ficom
jbe
fdiv
cmc
jne
cmp
(bad)
pop
sub
push
retf
lds
in
dec
push
mov
es
nop
dec
adc
mov
aas
out
add
std
stc
test
test
sub
nop
jb
inc
or
loope
or
imul
sub
jmp
push
loop
jmp
pushf
mov
(bad)
aas
xchg
popa
cmps
push
hlt
lea
push
mov
or
adc
pop
lahf
loop
out
mov
jp
in
add
(bad)
jae
cmp
add
ja
mov
stos
and
adc
sub
lea
aam
hlt
in
cvtpi2ps
pushf
dec
mov
data16
or
mov
sbb
push
enter
enter
(bad)
cmp
mov
and
jns
(bad)
jmp
push
mov
xchg
out
ds
cs
nop
cmps
fidivr
inc
ins
in
or
cwde
sbb
dec
cli
mov
mov
test
mov
mov
cmp
or
mov
fcomp
pop
cmps
cmp
lea
stc
cmp
jmp
jae
dec
push
cwd
pop
lds
test
jmp
ret
into
pusha
sub
push
mov
inc
mov
les
jno
dec
inc
dec
out
xchg
outs
fidiv
ret
xchg
or
ins
ja
jno
or
inc
jne
sub
enter
sbb
jp
lds
sbb
arpl
stos
add
jp
stos
cdq
jp
rcr
scas
mov
(bad)
sbb
jp
enter
push
jmp
loope
shl
adc
ins
in
mov
loop
add
je
addr16
xchg
mov
scas
inc
jbe
jge
in
mov
rol
xchg
ds
xor
or
xor
jl
pop
imul
sbb
jge
xor
fsub
dec
ud2
dec
mov
repnz
sub
add
xchg
aam
jno
fwait
les
jmp
jmp
imul
popa
rcl
cdq
mov
or
adc
mov
fist
les
dec
ret
mov
loope
arpl
jmp
fprem1
jne
cmp
call
ret
outs
jmp
pop
xor
mov
hlt
or
dec
jle
cmps
lds
adc
fs
repz
test
lds
jle
adc
dec
sbb
mov
call
and
popf
pusha
aas
sti
lahf
pop
fist
nop
fiadd
(bad)
cmc
test
jo
stc
mov
out
enter
scas
outs
push
or
loopne
cmc
mov
jl
cmp
pop
pop
out
sti
nop
mov
ins
cs
aam
movs
adc
cmp
outs
mov
into
inc
repnz
cmc
(bad)
cmp
pop
inc
ins
fnsave
pop
aam
cli
push
cld
mov
dec
add
cmp
jmp
mov
sub
imul
(bad)
adc
lods
outs
lock
mov
push
dec
sub
mov
xchg
cs
or
outs
test
mov
push
pop
out
les
jmp
and
addr16
fcmovnb
jmp
mov
jb
leave
adc
in
add
xor
jg
(bad)
fsub
or
mov
or
(bad)
cmp
lds
inc
jl
mov
mov
jp
loope
add
lods
inc
jo
mov
pusha
(bad)
sub
(bad)
adc
cmp
mov
les
sub
and
cmc
mov
cmp
(bad)
fs
shl
fstp
push
push
mov
psubusb
lahf
nop
loope
mov
push
sub
xor
xor
cmp
test
test
cmp
pop
add
outs
repz
sub
cmp
test
mov
xchg
add
out
in
fwait
out
je
das
adc
mov
sar
jmp
xchg
lods
std
mov
or
cmp
jmp
jb
(bad)
sbb
mov
add
hlt
xchg
out
xor
jbe
and
or
xchg
test
cli
or
fist
outs
mov
and
xor
(bad)
lods
xchg
(bad)
cld
mov
jmp
ret
inc
sub
pop
dec
and
(bad)
sub
pop
adc
mov
mov
es
push
mov
mov
cdq
and
sbb
sbb
icebp
imul
int3
and
cmp
lahf
pop
into
inc
add
leave
mov
add
into
rcr
arpl
test
mov
arpl
into
sbb
aaa
movs
out
retf
out
mov
xor
sbb
stos
cmp
fdiv
push
xlat
imul
pushf
pop
inc
jae
xchg
data16
fdivr
push
(bad)
call
cmp
rcl
jg
mov
js
out
dec
adc
mov
out
cmps
(bad)
std
push
addr16
lds
inc
je
test
nop
xor
in
out
push
cmp
cmps
jle
std
sub
js
sub
pop
stos
add
repz
pop
repnz
test
(bad)
or
aam
(bad)
clc
add
ja
mov
push
cmp
ins
mov
xor
jl
xor
in
add
movs
sbb
mov
xchg
imul
jns
push
icebp
pop
in
mov
pop
adc
hlt
jnp
clc
and
pop
test
ss
stc
in
imul
imul
sub
and
mov
aaa
sub
and
push
gs
and
jp
shl
mov
push
int
or
js
stc
push
repz
sbb
(bad)
or
add
jo
cdq
outs
loopne
loopne
in
cdq
pop
or
sbb
setle
or
cdq
sub
xchg
add
js
into
das
jecxz
dec
and
jno
ins
mov
mov
aaa
lock
xchg
xor
adc
add
mov
sbb
daa
dec
dec
jnp
ficom
es
pop
cmp
mov
fild
ret
loop
ds
xchg
lds
xlat
fld
cmp
fwait
jle
xor
sti
xor
sbb
inc
or
or
fucomp
inc
aas
inc
paddusw
push
xor
dec
(bad)
fnstcw
push
mov
gs
mov
(bad)
or
inc
inc
and
fdivr
and
inc
stos
adc
mov
add
pop
movs
pop
in
(bad)
sbb
mov
mov
shl
clc
fwait
sub
(bad)
fs
dec
mov
sub
(bad)
push
bound
and
cmp
mov
jecxz
cdq
test
js
cli
cmp
pushf
jb
push
stos
jo
jbe
lods
cmc
hlt
mov
(bad)
into
jae
enter
or
loop
sub
jg
cmp
pop
mov
dec
lahf
das
mov
shl
xlat
sbb
out
daa
pusha
lock
xlat
iret
inc
clc
dec
sbb
or
into
or
xchg
cld
cmp
pop
add
mov
stc
push
std
sbb
fstp
enter
movs
enter
add
push
loopne
neg
pop
movs
call
add
cmps
pop
js
mov
das
or
inc
ins
lods
xchg
dec
sbb
lahf
lods
ficomp
sub
(bad)
iret
loope
lea
and
gs
(bad)
cmp
push
mov
inc
ret
xor
mov
loopne
mov
fadd
pop
jno
sub
ror
sti
loopne
std
mov
lock
sbb
movs
add
out
xchg
mov
inc
or
iret
adc
addr16
xor
in
lods
xor
test
pop
or
mov
xor
imul
sub
sahf
cmps
mov
mov
movs
sbb
out
cmp
dec
in
xchg
sub
adc
pop
add
sub
fadd
je
(bad)
push
ss
repnz
add
mov
mov
outs
mov
mov
cs
data16
dec
lods
pop
rol
call
shr
jae
jb
(bad)
cmp
xchg
jmp
jecxz
mov
or
lds
loopne
xor
neg
or
rcl
pop
les
sub
rol
push
or
mov
cmp
mov
in
sub
inc
xchg
sbb
xchg
xchg
int
sbb
rol
pop
gs
out
loopne
xchg
fidivr
les
stos
cdq
inc
sbb
out
das
in
sub
cmp
cmp
fwait
outs
cmp
mov
sbb
call
xor
(bad)
loopne
xor
or
ss
sbb
sar
dec
ror
or
lea
lock
outs
add
adc
call
add
sub
es
sar
imul
mov
cmp
(bad)
push
ret
cwde
ja
dec
fsub
mov
frstor
ins
ds
int
jecxz
push
(bad)
fistp
and
cwde
sbb
hlt
cld
pushf
icebp
mov
sub
dec
and
pop
sbb
cmp
add
adc
cmp
mov
xor
mov
adc
push
mov
xor
fnsave
repz
cmp
jecxz
jle
test
xchg
cmp
adc
add
leave
sub
imul
addr16
mov
add
sahf
cmc
xor
mul
inc
mov
xor
std
retf
xchg
push
shl
idiv
in
inc
xor
inc
push
inc
data16
jne
stc
dec
jl
pop
fwait
adc
repnz
scas
cmc
push
in
add
daa
sub
cmp
jb
sub
push
and
cmps
ret
popf
lock
js
lods
pop
lds
idiv
dec
mov
jo
pop
shl
jl
jbe
aam
jne
and
sub
sbb
(bad)
out
cmp
jl
dec
xchg
pop
imul
dec
mov
outs
jle
repnz
xor
call
loop
xor
adc
push
fs
mov
sub
arpl
sbb
mov
clc
inc
pushf
push
or
jg
ds
xor
aam
adc
sub
outs
mov
cwde
dec
inc
daa
xchg
push
lods
xor
inc
lds
dec
or
mov
jae
and
jne
fsubr
and
or
mov
add
jmp
dec
ret
test
and
push
xor
jne
xchg
ins
std
sub
adc
sbb
or
mov
jo
pop
clc
and
outs
pop
rcr
sbb
into
aad
imul
cmp
in
scas
mov
pop
mov
sbb
pushf
push
mov
push
cdq
aaa
pushf
dec
adc
pop
repz
cwde
jae
idiv
ins
into
out
or
mov
shl
sub
fidiv
hlt
pop
in
repz
aam
bound
xchg
pop
gs
retf
mov
sub
mov
xchg
inc
fwait
stos
mov
sub
pop
mov
popf
xchg
inc
nop
sahf
mov
pop
xchg
fdiv
pop
movs
xor
fiadd
retf
dec
test
arpl
inc
bound
ds
push
push
(bad)
call
popa
addr16
and
and
pop
xchg
xor
pushf
pop
clc
(bad)
stc
out
mov
movs
or
mul
push
xor
jle
sar
out
lahf
daa
(bad)
cmps
pop
or
imul
or
push
mov
into
mov
jno
inc
xlat
fsub
jecxz
shr
scas
mov
or
loopne
aam
xor
add
and
and
and
icebp
data16
arpl
fcomp
sbb
cmps
pop
dec
repnz
mov
lods
sub
jae
fsub
hlt
stos
hlt
call
add
lods
pop
retf
jo
jmp
jmp
int3
or
cmc
cmps
and
rol
mov
mov
push
aaa
int
mov
mov
std
jge
popf
cmp
ins
or
clc
stos
lods
adc
or
dec
jns
out
sti
mov
lods
sar
sub
adc
adc
stos
out
loop
pop
jmp
mov
adc
or
inc
cmps
xchg
push
add
jo
xchg
je
lea
ret
sti
add
sbb
aas
lds
movs
ret
push
sub
nop
mov
test
adc
adc
mov
ret
mov
or
pop
sub
pop
aas
sub
sahf
push
or
jge
fs
jecxz
mov
loope
mov
xchg
inc
retw
jl
xchg
(bad)
out
aad
adc
adc
in
enter
or
adc
test
test
mov
sbb
pop
pop
add
ret
and
jge
daa
pop
nop
sub
in
leave
int
xlat
add
das
add
js
outs
inc
sub
mov
mov
repnz
jbe
push
fsubr
(bad)
pop
dec
mov
outs
stc
lahf
dec
adc
sar
aam
or
sub
xchg
inc
xor
jmp
fst
(bad)
(bad)
push
(bad)
dec
jno
add
nop
jecxz
mov
mov
mov
jmp
sub
inc
pop
popa
rcr
js
mov
pop
xchg
jne
push
sub
inc
cmp
fstp
clc
sbb
aad
dec
pushf
int
jno
mov
ss
sub
cmp
xchg
xchg
outs
inc
cmp
ret
xchg
inc
pop
xor
xor
add
test
jno
or
int
mov
out
push
in
or
jnp
or
iret
jno
xchg
cmps
and
cld
lods
cli
test
daa
lods
leave
push
icebp
dec
lock
mov
les
jmp
inc
imul
mov
xchg
cmp
jecxz
xchg
inc
scas
fs
mov
cmp
cmp
add
add
aaa
ror
pop
repnz
retf
aaa
enter
dec
cmps
xchg
push
mov
cmc
sbb
jl
shr
dec
fild
shl
xor
inc
dec
sahf
daa
shl
test
scas
push
mov
nop
pop
push
repnz
(bad)
dec
lahf
jmp
adc
mov
jle
test
shl
cmps
and
je
ja
loope
inc
and
div
ja
cdq
mov
cld
out
push
add
test
cmps
mov
lods
test
xor
ins
repnz
mov
adc
mov
cmc
cmp
pop
mov
test
dec
imul
dec
mov
jmp
xchg
clc
push
jmp
add
inc
stc
out
and
movs
add
jb
std
jmp
push
or
(bad)
fsubrp
call
dec
out
xchg
cmp
ss
pop
xor
cmp
or
adc
xchg
and
dec
popf
jge
push
xor
sbb
loopne
gs
dec
mov
nop
daa
outs
fwait
sbb
sbb
loopne
jp
xchg
adc
js
in
cmc
in
lods
lods
jle
aaa
sub
shl
popf
retf
in
mov
pop
xchg
and
jmp
jno
and
(bad)
rcr
fsubr
(bad)
shl
neg
inc
les
adc
jb
not
mov
ret
test
aas
je
retf
pop
ret
fwait
dec
cld
adc
fnstsw
and
or
xor
inc
aad
popf
lods
mov
jecxz
retfw
jg
cmp
dec
sbb
das
sbb
cwde
stc
sub
xor
inc
aas
pop
jne
out
data16
addr16
push
ss
scas
mov
pushf
mov
fnstenv
rcr
stos
ror
and
xor
inc
data16
ret
fwait
adc
mov
lahf
mov
(bad)
std
adc
pop
addr16
xor
fistp
mov
mov
rcr
popa
jl
add
mov
mov
(bad)
cmp
pop
sub
pop
sub
jg
jle
pop
popf
mov
into
push
shr
xchg
cmp
jge
repnz
cmps
cld
(bad)
add
and
dec
xchg
add
sub
sub
dec
inc
inc
cmps
ret
dec
retf
add
(bad)
cmc
ror
retf
jne
mov
les
mov
aaa
mov
inc
mov
rol
fimul
ss
push
adc
mov
mov
movs
nop
or
call
or
push
jno
cdq
mov
jecxz
fwait
pusha
inc
sbb
push
ins
mov
mov
add
or
dec
xchg
push
outs
xchg
dec
adc
push
(bad)
imul
shl
push
push
popa
xchg
xor
sbb
popf
arpl
fdivr
out
scas
cmp
cmps
or
outs
shr
xlat
inc
enter
jo
push
cmp
lahf
cli
popa
cmp
push
ins
dec
jb
daa
stc
xchg
inc
sbb
and
jl
sbb
aad
enter
jg
pop
adc
ret
(bad)
fdiv
aam
sub
(bad)
sti
mov
mov
(bad)
stc
test
inc
adc
inc
jns
shl
sub
dec
fisub
xchg
and
xchg
or
mov
xchg
or
xor
fsub
jno
sub
mov
sub
jp
xchg
in
inc
popa
(bad)
dec
cmp
mov
imul
stc
adc
test
pop
test
test
adc
push
mov
xchg
xor
xchg
aam
dec
sbb
loopne
jbe
mov
ret
push
jl
push
imul
(bad)
adc
push
or
sub
add
icebp
mov
leave
std
jno
add
shl
es
(bad)
ret
mov
dec
cmps
mov
or
pop
and
loope
xor
cmp
fistp
or
lock
mov
xor
mov
ret
(bad)
jmp
xor
mov
arpl
push
call
rcl
xlat
call
scas
addr16
int
cmp
shl
mov
cmp
inc
sub
cdq
clc
and
rol
sti
or
setge
cli
aad
push
sbb
push
pop
jmp
loope
pop
gs
data16
shl
fwait
cmp
mov
push
pushf
outs
cs
inc
ror
adc
sub
pusha
xor
aas
stos
xchg
std
shl
xchg
aaa
out
lea
add
inc
fbld
xor
cmp
std
dec
mov
movs
repnz
pop
aad
sub
rcr
sub
mov
pop
data16
int3
(bad)
loop
and
daa
push
adc
leave
bnd
adc
movs
add
sar
add
mov
nop
inc
(bad)
(bad)
es
popa
mov
cli
or
idiv
or
cs
jmp
mov
mov
add
and
fstp
daa
sbb
js
addr16
imul
cmps
enter
inc
hlt
and
inc
movs
jns
mov
pop
(bad)
aam
pop
and
xor
sbb
sub
fisubr
xor
mov
mov
dec
shl
ins
int3
sar
add
cmp
pop
xor
or
jle
lea
popa
int3
int3
fmul
in
adc
(bad)
or
test
shl
cmp
mov
mov
jae
ror
jb
stos
out
bound
mov
inc
dec
lock
pop
in
push
push
push
sub
xlat
cld
sub
(bad)
cmp
sub
jo
push
rcl
in
add
and
dec
fucomp
xchg
mov
inc
pushf
add
ds
xor
int3
ss
push
int3
jl
(bad)
arpl
loope
scas
(bad)
loopne
sbb
jnp
and
aad
test
mov
sub
inc
mov
xchg
shl
mov
popa
jge
daa
xor
jae
cmps
not
sub
das
xlat
test
sti
aam
repz
div
call
push
cmp
push
dec
dec
enter
xchg
in
adc
(bad)
mov
xor
mov
push
in
outs
ffreep
mov
cmp
lds
repz
inc
xor
pop
pop
add
xchg
pop
movs
mov
mov
repz
inc
add
int3
int3
cbw
fadd
arpl
das
cmp
mov
mov
imul
pop
in
push
movs
scas
aad
out
or
dec
and
mov
jbe
popa
sahf
inc
leave
xlat
dec
push
or
repz
and
mov
cmp
data16
and
test
fidiv
in
or
mov
shr
test
and
cli
inc
test
int
out
ss
or
ret
push
mov
out
dec
and
push
cmps
pop
sub
and
sbb
cmps
lahf
xor
xchg
jmp
xchg
fnstsw
pop
aas
fiadd
sub
lea
mov
push
adc
pop
ja
mov
lahf
call
loop
xchg
shl
ror
sahf
mov
in
iret
int3
iret
aaa
je
push
inc
and
jne
mov
hlt
sub
xchg
mov
add
movs
scas
iret
ret
jle
jmp
jne
out
das
test
scas
sub
jo
push
mov
xchg
pushf
out
xchg
xor
in
xor
xor
arpl
xchg
and
pop
repnz
repz
mov
ja
xchg
fcom
sbb
inc
ss
sbb
xchg
dec
cmps
nop
or
xor
scas
pop
push
add
mov
mov
fiadd
pop
cs
cmp
push
out
call
and
rcr
test
dec
ins
lea
mov
sbb
aas
pop
dec
adc
outs
test
(bad)
out
inc
mov
pop
jl
and
push
daa
xor
test
push
sub
and
or
lock
nop
pop
sub
or
mov
mov
sbb
rcr
imul
push
add
call
inc
inc
stc
fisttp
pop
jno
(bad)
outs
push
div
mov
jle
daa
jmp
iret
int3
ins
femms
rcr
xchg
add
sbb
jb
jp
out
xchg
pop
xchg
movs
pop
mov
push
clc
push
movs
out
call
adc
stos
push
or
bnd
imul
cli
fs
mov
ret
and
sub
or
outs
leave
gs
retf
popf
sbb
add
rep
sbb
push
jge
push
add
xor
cmps
sbb
out
push
out
nop
popf
retf
cmp
ins
imul
add
xchg
mov
lock
add
mov
lds
addr16
push
loop
jle
pop
bound
sub
cdq
jae
sar
clc
sbb
jae
nop
into
in
sub
popf
ins
xchg
out
add
fidivr
mov
cdq
cmp
in
out
mov
addr16
inc
xor
xchg
pusha
repz
in
ret
inc
repz
mov
mov
xor
mov
idiv
sbb
jl
cmps
xchg
mov
xor
inc
pop
add
rcr
cwde
lods
enter
adc
arpl
aaa
jmp
cdq
mov
xchg
pop
xor
push
push
gs
call
jb
fild
lahf
xchg
jo
xor
add
aas
fsubp
push
xchg
es
or
cmp
retf
sbb
fucomp
fnstsw
mov
ss
mov
pop
(bad)
outs
mov
pop
fwait
in
cmp
test
xchg
xchg
stc
ret
dec
adc
adc
das
enter
fs
leave
arpl
lods
mov
and
arpl
rcr
jo
lea
xchg
mov
repnz
je
pop
hlt
cmp
fistp
jnp
ins
fs
das
pop
jo
push
pop
out
test
add
ret
push
sti
xchg
mov
mov
cmp
pushf
mov
push
pop
call
rol
inc
xchg
(bad)
(bad)
or
push
retf
jns
cwde
sbb
rcl
and
lock
sub
aaa
sbb
jnp
call
lea
bound
jb
cmps
or
leave
dec
cmp
(bad)
pop
jne
ins
sub
push
test
dec
fcmovb
mov
jge
sbb
out
test
xchg
hlt
fist
lock
cmp
mov
mov
leave
cmp
pop
push
popa
fistp
mov
and
popf
pop
sub
jle
mov
mov
sub
cmp
add
das
fisttp
cmp
retf
mov
ret
ret
cmp
call
pop
shl
cwde
xor
add
test
cmp
mov
(bad)
fs
int3
fs
dec
inc
(bad)
clc
jo
cmps
pushf
mov
push
inc
outs
push
pop
add
nop
sub
loop
aam
inc
rcr
sub
in
pop
fidivr
aaa
pop
push
rol
or
scas
mov
jo
movs
out
push
in
call
cmp
shr
(bad)
and
leave
pop
into
cmps
or
cld
mov
adc
inc
pop
jbe
ins
dec
out
cld
push
repnz
add
push
push
mov
sbb
lods
push
call
aam
test
xchg
imul
mov
xchg
leave
sub
into
test
add
push
push
stc
imul
pushf
push
pop
dec
cmp
retf
mov
dec
mov
push
test
mov
lea
imul
fldenv
add
repz
rol
or
popf
popa
mov
and
jb
sti
mov
in
sub
test
fdivp
or
mov
dec
xor
adc
popf
loope
cmc
fcomip
adc
xchg
pop
add
mov
ficom
xchg
data16
imul
jmp
sbb
sar
mov
mov
dec
clc
inc
std
jmp
adc
mov
std
cmp
xor
push
imul
call
adc
and
jg
pusha
or
pusha
xor
rcl
cmp
xchg
adc
jno
inc
movs
add
and
xor
(bad)
mov
imul
cs
sbb
les
xchg
mov
push
sbb
inc
jge
mov
lods
fmul
mov
or
popf
adc
add
out
imul
aas
sbb
xor
sbb
xchg
int
test
push
int3
jne
stc
xor
adc
sbb
pop
nop
adc
pop
adc
ficom
imul
push
jns
nop
mov
loopne
push
fild
adc
or
xchg
and
add
mov
xor
ss
dec
xchg
bound
ficom
push
bound
ins
or
mov
and
xchg
(bad)
jmp
and
xchg
lds
sbb
movs
and
cmp
mov
in
mov
fwait
cmp
ins
in
adc
pop
cmc
jp
cmps
stos
xchg
jnp
push
hlt
jo
call
jb
iret
sub
call
add
js
inc
push
test
or
ds
sbb
mov
sti
inc
jnp
aaa
pop
inc
jecxz
test
cmp
dec
int3
(bad)
pop
sbb
push
lods
test
xchg
mov
inc
dec
out
in
mov
js
fwait
out
cmc
jno
dec
or
jbe
popf
(bad)
mov
jecxz
sbb
ds
add
outs
dec
in
cmp
std
sbb
stos
sbb
lea
sar
and
cmps
js
movs
es
mov
and
pop
inc
or
pop
sti
xchg
push
sahf
cmp
sub
(bad)
mov
jbe
xchg
cli
mov
jae
lods
es
or
ret
and
jge
xlat
mov
retf
in
(bad)
mov
test
cmps
fmul
push
cwde
xchg
jmp
outs
push
cmp
or
int3
cmp
pop
fidiv
(bad)
out
add
push
sub
xchg
cmp
cmp
mov
jecxz
xchg
popa
mov
pop
jp
xchg
lea
add
push
fldz
fisubr
ret
cli
mov
mov
je
sbb
inc
mov
scas
arpl
in
xor
fwait
sbb
imul
and
int3
xchg
shl
cvtpi2ps
sbb
dec
push
push
fisttp
or
add
fs
adc
adc
mov
xor
push
cwde
or
push
(bad)
dec
push
mov
mov
mov
sbb
hlt
les
pusha
pop
ficomp
mov
ins
mov
mov
jl
ja
scas
dec
out
xchg
fldenv
and
xchg
stos
popf
pop
adc
fisub
add
or
test
jb
pusha
leave
sub
dec
cmps
mov
mov
cli
or
mov
push
mov
mov
out
add
arpl
and
arpl
sbb
ret
fild
push
test
lea
xchg
sub
and
stc
ret
cmp
das
ror
cmp
sbb
adc
inc
add
popa
out
fstp
cli
mov
push
not
loope
pop
fisubr
mov
and
daa
mov
or
gs
or
mov
repz
movs
push
dec
fimul
test
or
inc
add
jl
std
and
xchg
sub
add
call
fcomi
adc
push
popa
inc
dec
mov
push
xor
fisubr
mov
lods
xchg
mov
cmp
jne
sbb
mov
jecxz
scas
les
add
arpl
mov
lds
mov
cmp
stc
test
inc
push
call
inc
shl
xchg
sahf
scas
nop
dec
dec
fcom
ret
les
ret
pop
add
ins
(bad)
stc
pop
jmp
xchg
cmp
lds
loop
outs
push
(bad)
outs
test
dec
inc
mov
neg
cmps
lods
pushf
fcom
faddp
adc
imul
pop
push
pop
out
(bad)
push
dec
jp
jbe
pop
fiadd
sub
push
mov
out
ss
in
jae
pop
add
mov
push
and
push
loop
retf
mov
fldcw
test
sbb
push
bound
repz
sub
pop
cli
pop
jns
jne
(bad)
ds
(bad)
fld
inc
or
ins
jbe
dec
pop
(bad)
jmp
popa
retf
test
clc
xchg
scas
mov
out
push
dec
fs
mov
je
jno
sahf
dec
pop
mov
sbb
mul
and
into
cmps
loope
fisttp
imul
lds
arpl
jne
pop
xor
mov
jnp
div
je
loopne
pop
js
mov
xchg
inc
cmp
xchg
(bad)
daa
in
xor
pop
mov
xchg
sub
sbb
mov
dec
push
or
daa
stc
in
call
xor
ds
dec
inc
push
aam
cmp
mov
cmp
mov
ret
mov
xor
push
and
mov
lea
and
pop
iret
xor
out
movs
push
xchg
xor
test
cmps
jnp
xor
pop
jle
push
jae
xor
cld
adc
xor
les
out
and
cmps
loop
sbb
imul
outs
mov
jecxz
imul
(bad)
push
inc
es
loop
scas
mov
mov
aaa
test
cdq
xchg
cmp
loope
pop
out
cld
pop
lock
mov
(bad)
or
arpl
ds
inc
sti
ficomp
push
aaa
scas
outs
adc
dec
dec
leave
or
cmp
retw
jmp
push
retf
aaa
sub
(bad)
jne
xor
mov
adc
pusha
pushf
stos
dec
loop
shl
gs
int
xchg
aaa
into
call
pop
pop
xchg
jno
scas
mov
repnz
adc
cmps
js
out
xchg
cs
push
popf
xchg
lea
aaa
push
inc
dec
jns
dec
ins
xor
and
sbb
or
std
sar
mov
xchg
xchg
je
inc
xchg
(bad)
or
jbe
dec
gs
mov
sbb
and
sbb
mov
cld
pop
jp
lahf
adc
push
lock
popa
sbb
xor
add
lahf
aam
mov
jp
inc
and
pop
xlat
pop
sbb
daa
pop
xchg
mov
jmp
outs
das
xchg
aam
cmp
aas
retf
ds
and
inc
push
inc
stos
test
test
hlt
inc
or
test
pop
jno
push
jmp
outs
mov
enter
mov
out
push
xor
or
arpl
js
sbb
dec
add
sbb
jmp
hlt
jmp
test
pop
mov
inc
xchg
sbb
call
or
jmp
mov
cmps
and
sbb
inc
dec
scas
jae
push
out
leave
in
add
mov
jae
out
inc
push
jb
jb
mov
xchg
jmp
sub
jb
cld
sub
sbb
fcomp
rcl
stos
push
mov
add
mov
div
lods
outs
jno
dec
mov
in
mov
dec
mov
pop
inc
jae
das
mov
mov
mov
mov
adc
arpl
(bad)
jl
push
in
or
enter
iret
sub
retf
mov
mov
arpl
loopne
cs
test
fadd
popa
mov
and
test
inc
or
lea
add
push
add
cdq
inc
push
pusha
mov
cwde
inc
jb
mov
and
in
add
or
add
xlat
sub
not
jbe
outs
int3
aam
cmp
mov
shl
pop
retf
mov
pop
jge
inc
sahf
sahf
push
mov
xor
sub
push
mov
sbb
ret
(bad)
out
and
int3
cmp
or
sub
lahf
pusha
or
xlat
daa
shl
bound
nop
sti
js
or
test
jb
pop
cmp
repz
fsubr
and
adc
and
nop
push
sub
pop
fcomp
shr
int3
into
add
ss
pushf
sub
bnd
mov
sbb
fs
mov
xchg
(bad)
neg
(bad)
(bad)
add
mov
(bad)
rcr
inc
in
inc
or
mov
mov
adc
(bad)
mov
cmps
cmp
mov
dec
icebp
jne
out
daa
mov
out
into
cmp
cmove
add
(bad)
out
clc
fld
mov
imul
lea
scas
sub
mov
lods
int3
scas
xor
rcl
xchg
movs
or
dec
sub
mov
fisub
dec
test
xor
call
push
or
xchg
aad
xchg
dec
xchg
test
adc
movs
and
add
push
mov
stos
pop
cmps
mov
sub
movs
sub
gs
arpl
int3
fdiv
dec
fisttp
shl
cmps
pop
add
imul
arpl
mov
je
cdq
arpl
xor
push
push
in
loopne
mov
or
test
shl
xchg
jno
loop
mov
rol
xchg
sar
(bad)
daa
sbb
loop
add
push
cmp
mov
mov
adc
cmp
mov
scas
les
xchg
xor
rcr
and
fiadd
sub
lods
or
mov
or
mov
push
jmp
mov
cmp
or
pop
or
sbb
shr
xor
je
addr16
or
xchg
and
call
jmp
loope
push
jno
(bad)
out
out
shl
mov
or
add
(bad)
ret
loope
or
or
jp
loopne
add
ins
nop
cmps
(bad)
movs
faddp
dec
jb
stc
das
pop
cmp
xor
(bad)
xchg
push
push
lods
outs
mov
xlat
cmp
mov
push
xchg
mov
sbb
gs
hlt
sar
out
mov
test
cmp
daa
cmp
sbb
out
imul
pop
pusha
lahf
out
popa
or
pslld
mov
addr16
push
sbb
mov
sti
pushf
sbb
inc
aam
pop
dec
jl
enter
cli
scas
add
or
xchg
(bad)
xor
test
shl
popf
dec
ins
and
xchg
jbe
enter
pop
and
arpl
mov
retf
mov
mov
cwde
cli
call
lea
loopne
add
jo
xchg
lds
loop
mov
mov
xchg
pop
sbb
mov
xor
mov
mov
data16
ficomp
dec
mov
push
push
jno
test
push
daa
and
aas
into
cmps
push
mov
in
add
adc
sbb
jb
cld
cmps
jae
aad
iret
mov
push
fcmovnu
inc
imul
(bad)
adc
sahf
jbe
adc
ja
adc
cmp
out
outs
inc
loop
int3
(bad)
int3
inc
xor
dec
sbb
(bad)
push
xchg
inc
nop
add
shr
popa
dec
dec
aas
dec
inc
dec
frstor
push
jne
cmp
cmp
pop
retf
in
xchg
jae
inc
cmp
test
out
push
aad
xchg
cmps
lahf
mov
ds
stc
ret
int
add
inc
jae
mov
push
push
cmp
adc
sbb
rcl
jbe
loop
vcvtss2si
dec
pop
out
test
or
out
add
xchg
sti
repnz
mov
sub
out
aam
rol
shr
cmp
inc
cdq
cmc
pop
mov
add
ja
lock
(bad)
dec
inc
pop
dec
or
xor
pop
mov
add
sub
lods
sub
ja
shl
ds
sbb
jecxz
xchg
es
lods
outs
stos
sbb
mov
push
inc
add
mov
xchg
cmp
das
dec
jns
cdq
int
enter
jne
js
mov
mov
fucomi
sti
inc
dec
mov
xchg
out
dec
fcom
sbb
mov
ficom
jno
cwde
lahf
lahf
and
arpl
fcomp
push
jp
sub
aaa
cdq
mov
inc
test
and
dec
mov
retf
pushf
mov
loop
(bad)
adc
ss
mov
jo
out
pop
jne
and
push
rcl
test
push
push
data16
popf
jmp
xor
cmp
dec
call
push
jno
xchg
mov
jno
into
test
cld
mov
call
mov
jb
mov
cmp
pop
mov
inc
push
sbb
dec
push
daa
retf
js
mov
popf
jmp
mov
enter
fwait
sub
test
popa
mov
and
pop
sbb
mov
jmp
iret
cmp
inc
lods
xor
lods
add
sbb
pop
lds
icebp
dec
mov
rcr
test
addr16
mov
mov
cmp
lds
mov
sbb
test
mov
jbe
dec
sbb
jge
jle
mov
cmp
pop
test
movs
addr16
pop
sbb
and
and
out
mov
fcom
mov
scas
inc
mov
inc
jae
loopne
in
add
scas
push
daa
push
scas
dec
loope
cmp
out
adc
popf
out
or
dec
fwait
rcl
pop
xchg
adc
dec
jnp
mov
and
test
push
cmp
nop
jno
xchg
add
cmp
push
xor
or
jbe
mov
iret
(bad)
es
push
xchg
ins
(bad)
jl
mov
push
dec
inc
and
aad
rcr
adc
nop
shr
and
mov
mov
xchg
pop
dec
xor
push
mov
sar
cmc
inc
jbe
xchg
jns
(bad)
add
in
xchg
loop
xchg
mov
ds
and
xlat
in
pop
dec
les
sbb
lahf
mov
cld
lea
xchg
jae
dec
pop
add
push
jle
or
scas
cs
inc
outs
jb
nop
ret
jno
pop
inc
jl
push
lahf
adc
mov
xchg
int3
mov
std
sub
pop
js
dec
push
out
or
sbb
mov
or
sbb
dec
(bad)
fsubr
clc
mov
xchg
cmp
sub
fs
outs
jmp
data16
aad
(bad)
push
popa
lods
mov
mov
fisttp
lock
movs
adc
inc
enter
jbe
and
sub
mov
or
sbb
arpl
sub
(bad)
stos
scas
ror
in
push
inc
dec
test
push
inc
xlat
sub
outs
outs
pop
mov
cs
adc
or
adc
push
fiadd
int
lahf
call
and
leave
sub
xor
mov
imul
jbe
push
dec
jmp
aad
cwde
ss
in
inc
fsub
test
(bad)
cmp
icebp
das
fnstenv
retf
test
push
ss
mov
sub
cmps
sub
mov
adc
popf
lods
mov
ror
sbb
jbe
out
std
xchg
ins
cdq
xor
mov
mov
jns
cmp
enter
jmp
xchg
mov
push
sub
ins
pushf
push
jecxz
or
xor
sti
mov
jo
rcl
push
or
xor
hlt
and
mov
pop
int
dec
repnz
retf
inc
and
aaa
sbb
cmp
ins
movs
loopne
popa
xchg
jmp
dec
mov
adc
fdiv
jb
xchg
mov
div
mov
and
push
imul
pop
mov
outs
ret
sbb
ja
repnz
mov
rol
call
ins
cmps
std
xchg
icebp
push
lea
out
mov
add
dec
inc
mov
inc
nop
jecxz
sti
addr16
mov
div
lea
mov
mov
dec
fimul
jmp
je
clc
add
call
push
jmp
je
mov
inc
mov
mov
jg
mov
mov
lahf
push
add
hlt
add
test
outs
jge
(bad)
xchg
pop
sbb
mov
out
pop
sbb
and
lahf
mov
ret
mov
mov
adc
pop
adc
jmp
lahf
clc
cmp
or
adc
adc
mov
jg
sbb
dec
xchg
ja
and
(bad)
adc
push
arpl
mov
inc
nop
dec
ret
adc
jge
add
add
rol
inc
mov
rol
or
int
mov
fcmovnb
jae
pushf
sbb
call
(bad)
cld
fucomp
iret
inc
xlat
test
addr16
inc
jmp
xchg
loop
retf
pop
out
pop
stos
int
sbb
sub
cld
mov
jp
inc
inc
lahf
ins
jo
test
xchg
leave
xchg
cmp
pushf
lods
enter
mov
mov
test
or
dec
mov
repnz
sti
pop
(bad)
cmp
inc
aaa
(bad)
pop
es
retf
jp
xchg
hlt
push
cwde
xor
mov
adc
in
out
and
shr
push
sbb
aas
push
ror
xchg
adc
inc
(bad)
push
jb
clc
dec
mov
jle
clc
sub
fisubr
out
(bad)
mov
cmc
sub
push
int3
mov
inc
mov
pushf
test
mov
xor
dec
sub
popa
xor
mov
adc
lods
imul
pop
clc
jb
mov
aam
sti
or
lea
inc
ins
iret
cld
xor
ja
stc
bound
pop
neg
and
(bad)
mov
xor
addr16
std
mov
test
mov
jge
daa
sbb
or
and
xor
xchg
push
test
push
sbb
lods
cmp
int3
dec
inc
xchg
push
arpl
xchg
mov
xchg
cmps
cmp
int3
jp
into
scas
sar
xor
sbb
or
xlat
lock
fcomip
jmp
fwait
(bad)
dec
scas
push
movs
(bad)
mov
nop
cmps
pop
ret
shl
jmp
xor
cdq
outs
sbb
mov
gs
push
mov
in
cdq
pop
stc
push
mov
cdq
push
ret
pusha
mov
add
push
test
sub
add
mov
xor
sbb
and
out
mov
inc
ret
fs
or
lds
sbb
jno
mov
das
push
or
les
imul
mov
scas
and
pop
or
and
and
pop
aam
jb
sub
imul
cmps
push
daa
dec
adc
cwde
repz
daa
mov
or
and
retf
cli
aaa
mov
push
sub
out
popf
cmps
sar
enter
jp
cmp
sbb
ror
or
cmps
push
pusha
or
scas
mov
jl
cmp
fwait
aas
aad
pop
imul
cmc
ret
imul
repnz
pusha
mov
cmp
jle
xchg
popa
push
ins
adc
outs
xchg
and
pop
push
xchg
(bad)
cmp
into
pushf
xchg
push
or
scas
jecxz
cli
cmp
nop
(bad)
je
lds
dec
lock
call
es
mov
loope
mov
inc
jne
(bad)
jae
cmp
xchg
lea
stos
retf
jg
push
mov
lea
cmovl
imul
fdiv
or
outs
fnstcw
adc
sbb
icebp
imul
pop
xchg
mov
pop
mul
aas
cmp
or
movs
jl
(bad)
push
loop
mov
sahf
mov
mov
add
sbb
rcr
cmp
les
push
push
pop
xrelease
dec
test
dec
mov
and
call
outs
arpl
(bad)
or
movsx
mov
ja
push
sub
pop
ds
out
mov
push
sbb
fmul
push
int
or
lods
cmp
adc
adc
sbb
jns
js
pop
sbb
das
stos
cmps
sbb
sub
js
xchg
dec
push
push
mov
and
xchg
pop
push
bound
clc
mov
call
into
jp
fld
mov
test
iret
adc
fadd
jb
xchg
test
sbb
pop
ret
adc
inc
add
push
adc
clc
scas
iret
call
pusha
mov
xchg
rcl
mov
xchg
push
sbb
dec
mov
and
inc
xchg
push
mov
and
add
jne
mov
lea
xor
test
idiv
inc
cmps
sbb
push
lock
pop
dec
add
lahf
fs
mov
and
idiv
dec
cmps
pop
jmp
dec
out
fistp
lea
ror
clc
push
jbe
mov
xor
test
leave
stos
mov
addr16
dec
dec
(bad)
xchg
ss
pusha
into
test
push
fcomip
push
mov
dec
rcr
cwde
mov
sub
adc
imul
pop
sub
aaa
data16
loop
stos
inc
retf
sbb
aad
sbb
lahf
or
and
sub
inc
adc
add
lahf
inc
add
movs
js
outs
out
pop
int3
repz
or
mov
out
loopne
xor
cmp
sub
mov
call
sbb
adc
loopne
idiv
sub
int
mov
std
pusha
int
pop
lods
iret
mov
mov
and
test
ret
cmps
hlt
mov
enter
jns
xor
dec
ret
sbb
fs
inc
rcl
push
xor
push
movs
jb
enter
pop
jmp
jp
stos
shr
xchg
rcr
call
sbb
bound
or
sub
pop
pop
sub
test
and
jl
(bad)
pusha
or
xchg
push
xchg
cld
push
in
mov
hlt
pushf
sub
mov
pop
push
repz
or
out
pusha
inc
jno
scas
pop
adc
and
push
push
sub
cmp
aam
cmps
jge
lods
pop
dec
cmp
(bad)
pushf
and
test
xor
inc
add
out
aam
fsubr
jl
xor
je
jae
and
aad
leave
push
cdq
sbb
mov
jle
lds
aam
xor
in
push
mov
add
mov
cmp
jns
adc
shl
mov
sahf
add
or
mov
cmp
into
sbb
add
jge
js
push
inc
pop
dec
fild
int
jecxz
aam
xor
xor
push
xchg
(bad)
xor
inc
cmp
xchg
mov
or
push
mov
mov
(bad)
out
jmp
adc
push
and
fwait
dec
dec
adc
not
repz
loope
(bad)
repz
mov
sbb
xlat
push
loop
and
in
mov
and
loop
jo
fldenv
cld
mov
inc
and
test
inc
shl
sbb
mov
ds
push
pop
imul
jb
ret
inc
addr16
sbb
pop
and
add
xchg
xor
mov
or
pusha
jbe
jnp
xor
sbb
std
xchg
jecxz
popf
loop
xchg
loop
or
loope
outs
movs
add
push
into
out
jmp
and
movs
std
js
push
leave
movs
add
loop
dec
xchg
imul
xchg
fcomp
fidivr
rol
setle
ja
pop
cmp
rcl
popf
xchg
pop
scas
pop
lods
push
dec
(bad)
pop
addr16
dec
icebp
call
ins
outs
cmc
jns
inc
repnz
push
push
jae
xor
lods
mov
pushf
(bad)
cmp
icebp
mov
test
sub
push
pop
jo
in
push
xor
aad
dec
repnz
inc
pushf
push
inc
adc
loope
mov
out
dec
xchg
cmp
adc
and
xor
in
add
sar
add
sbb
rcl
push
stos
aaa
into
fistp
sbb
mov
jns
xchg
xor
mov
xchg
cmp
aaa
jno
push
mov
popa
adc
xchg
retf
mov
adc
jmp
(bad)
cmp
clc
in
ins
ds
pop
das
(bad)
xor
js
cmp
fcmove
or
xchg
pop
add
push
pop
lahf
or
cmp
fstp
dec
mov
mov
jl
stos
call
dec
inc
scas
lea
xchg
sub
sbb
ror
xor
loop
push
push
push
pop
out
push
xchg
pop
sbb
adc
push
or
sbb
in
pop
pop
retf
fs
test
add
je
retf
cdq
outs
and
inc
ins
aad
xchg
hlt
out
ret
cs
gs
and
lea
(bad)
std
sbb
pop
xchg
(bad)
loopne
lahf
loopne
data16
test
(bad)
mov
xlat
int
out
push
and
jp
jle
retf
sub
and
movs
daa
and
enter
je
pop
inc
das
es
jnp
cli
push
es
test
pop
jns
cld
jecxz
dec
mov
int
fimul
xor
ins
add
jmp
stos
test
cmp
push
sbb
sbb
out
jo
jl
mov
xor
not
pop
lods
ins
and
adc
test
xor
stos
push
dec
jns
out
push
mov
push
sub
xlat
add
cmp
out
aam
cmp
or
loope
imul
mov
ret
std
fs
(bad)
les
das
jle
cmpps
add
inc
adc
inc
and
lock
cmp
mov
and
or
jl
les
sub
mov
xor
mov
dec
enter
lock
fiadd
sub
call
mov
int3
push
push
push
push
mov
ffree
xchg
retf
pop
mov
adc
add
push
sbb
mov
aaa
push
std
call
fsub
inc
enter
add
push
bound
fld
mov
(bad)
dec
in
jnp
cmp
es
add
dec
shr
int3
xchg
xchg
push
cmp
pop
xor
and
lea
xchg
(bad)
mov
or
fwait
clc
movaps
xor
hlt
sub
daa
jns
xchg
pop
cli
test
stc
scas
pop
jnp
mov
test
push
cmc
pop
add
adc
(bad)
jg
adc
sub
dec
imul
cmp
scas
mov
xlat
push
in
es
(bad)
loop
push
movs
xor
in
mov
push
sbb
mov
inc
sub
dec
sbb
or
mov
int
inc
sahf
jae
cmp
cmp
add
icebp
lock
in
push
aam
cmp
into
pop
pop
sar
sbb
mov
sub
dec
aaa
imul
inc
mov
mov
ins
sub
push
jg
jo
or
push
mov
retf
xchg
or
adc
add
mov
(bad)
aam
scas
(bad)
dec
mov
retf
loop
jns
vmovlpd
mov
dec
js
dec
jmp
fistp
mov
(bad)
cmp
add
or
dec
dec
call
arpl
sti
out
popf
or
and
sti
or
loop
mov
ins
inc
add
pinsrw
inc
adc
mov
cmp
adc
outs
push
les
shl
mov
dec
idiv
push
xchg
iret
xor
add
cld
mov
xchg
or
xchg
inc
jmp
mov
adc
les
mov
aas
les
pop
mov
cmps
xchg
push
dec
addr16
fisttp
cmps
mov
pop
sub
or
mov
and
daa
inc
push
jp
push
xchg
jmp
dec
movs
dec
mov
and
cmp
stos
pop
xchg
inc
repz
and
out
(bad)
arpl
push
xor
popf
dec
shl
jecxz
cwde
nop
xchg
das
fldpi
add
jmp
add
dec
mov
push
dec
sahf
int3
(bad)
sbb
jbe
add
inc
imul
sub
aad
inc
xchg
adc
sbb
xor
ret
(bad)
imul
cmp
push
(bad)
lods
mov
xor
and
add
aaa
movs
enter
mov
push
shr
fs
sub
jge
adc
into
and
mov
cmp
mov
inc
mov
out
lods
shl
mov
mov
sbb
inc
ret
adc
xor
sbb
leave
cmc
jge
xchg
pop
pusha
lds
cmp
pop
mov
jnp
cld
xor
(bad)
jg
or
sahf
stos
cmp
clc
xchg
fmul
dec
pop
addr16
imul
xlat
mov
movs
jmp
jnp
addr16
xchg
enter
shl
fst
mov
xor
icebp
xor
and
stos
sbb
movs
rcr
add
mov
fld
add
push
adc
stos
std
pop
shr
add
call
fwait
jp
mov
add
and
lock
mov
into
jg
inc
jp
outs
jg
mov
push
push
mov
inc
cmp
sub
fdivr
push
dec
jg
popa
xchg
iret
sub
inc
pop
sahf
ja
fcom
arpl
jnp
sub
and
je
dec
xor
push
ficom
inc
ins
or
cmp
pop
cdq
inc
(bad)
jmp
test
inc
into
xor
mov
adc
aam
inc
aad
and
or
jmp
push
cmp
rcr
dec
inc
stc
mov
adc
sahf
mov
jbe
mov
dec
arpl
push
and
mov
ret
sub
scas
sahf
mov
push
pushf
or
pop
mov
je
ss
lea
fcomp
pcmpeqb
sar
jmp
jge
or
out
arpl
fnsave
(bad)
arpl
into
push
jmp
mov
jnp
cmps
icebp
out
outs
pop
sub
(bad)
stc
je
in
and
jb
sar
test
inc
dec
sub
xor
fdiv
(bad)
scas
lods
xchg
jo
cmps
and
xor
addr16
ret
cmp
inc
pop
(bad)
in
inc
pop
movs
pop
(bad)
out
add
test
push
pop
shl
std
in
stc
in
sub
jmp
fwait
(bad)
loop
xchg
sbb
lahf
xchg
mov
movs
in
int3
mov
jo
jns
dec
clc
imul
retf
dec
daa
aad
sbb
stos
and
pop
not
xchg
push
les
les
movs
pop
popa
or
in
dec
cmp
cld
or
mov
scas
cld
popf
test
ficom
add
push
bound
rcl
sub
je
sub
popa
dec
shl
(bad)
push
xchg
adc
push
iret
mov
mov
lds
outs
push
dec
shr
popf
or
gs
cs
out
idiv
repz
mov
jmp
int3
sbb
call
or
in
mov
dec
xor
lock
adc
fisub
pop
int3
cmp
mov
adc
sbb
stc
scas
pop
xchg
pop
jae
pop
inc
movhps
rol
adc
mov
js
in
pop
mov
mov
call
clc
mov
out
stos
mov
lds
mov
out
mov
push
jae
add
mov
and
dec
rcl
ds
jbe
icebp
pop
add
pop
inc
pop
jb
pop
(bad)
pop
stos
aas
inc
call
rcl
cli
rol
jecxz
aas
cdq
pop
cmp
test
jo
fadd
cmp
and
icebp
and
ss
cmp
add
test
(bad)
(bad)
fisub
adc
sti
pushf
inc
sbb
xor
inc
in
sbb
xchg
sub
movs
or
jge
in
mov
push
jne
jp
in
int3
mov
test
adc
outs
stc
out
dec
push
(bad)
jnp
adc
dec
int
retf
fistp
lahf
hlt
adc
in
ror
gs
mov
fnstcw
out
loopne
nop
ins
test
fs
sti
inc
adc
imul
mov
mov
fisubr
pop
adc
jmp
imul
dec
cmp
xor
ret
sub
xchg
stos
pushf
int
popf
or
movs
jge
jno
jg
int
inc
dec
or
or
and
and
mov
retf
jae
jb
in
aad
outs
es
mov
cmp
cmp
dec
fcmovnb
ror
or
inc
push
mov
shl
bound
adc
rol
cdq
repnz
sub
adc
cmp
loopne
stos
dec
mov
xor
mov
mov
xchg
movs
std
cmp
aam
rcl
xor
mov
add
and
jo
in
pop
aad
sbb
aas
mov
stc
jmp
call
xchg
ror
(bad)
adc
cmp
je
sar
push
xor
xor
push
add
xor
(bad)
std
push
xor
mov
jnp
mov
xchg
rcl
pop
into
pushf
shl
sbb
lods
push
mov
shl
fldenv
adc
xchg
pop
(bad)
dec
xor
adc
dec
hlt
iret
cmps
jp
rcl
cld
fdiv
aad
cmc
xchg
adc
mov
dec
push
or
cmp
cmp
jecxz
xor
clc
outs
jecxz
loope
rcl
test
inc
sbb
fmul
cdq
dec
mov
push
jge
push
jl
add
imul
pushf
(bad)
cmp
test
or
xchg
stos
out
jmp
lea
movs
cmps
arpl
fwait
mov
mov
dec
xor
aas
std
or
push
jmp
mov
and
aad
xor
jp
(bad)
js
or
push
adc
outs
icebp
mov
push
mov
int
int3
pop
fld
aas
mov
loopne
dec
daa
bound
xchg
fs
fsub
mov
jne
or
xlat
arpl
xchg
xchg
mov
mov
and
xor
sub
(bad)
(bad)
data16
push
out
inc
scas
sbb
cmp
or
and
push
icebp
shr
stos
mov
inc
stc
icebp
repnz
pop
stos
xor
das
movs
loopne
mov
or
or
push
jae
loop
cs
out
xor
loope
into
js
push
pop
mov
jne
jns
mov
lds
idiv
mov
push
sub
sbb
mov
and
xlat
cmp
fwait
or
rep
jno
ret
jbe
(bad)
jg
(bad)
sbb
ss
call
sbb
or
ror
(bad)
fucomp
push
mov
cmp
data16
pop
(bad)
fadd
push
(bad)
out
ds
xchg
pop
shr
shr
les
jns
cwde
add
jbe
mov
(bad)
mov
pop
add
mov
inc
cmp
in
call
and
sub
push
adc
outs
sub
loop
mov
and
pop
sub
in
dec
jp
jmp
push
mov
leave
jno
das
sahf
pop
ins
fnstenv
inc
sbb
mov
sbb
retf
(bad)
(bad)
rcr
jb
call
aas
loop
mov
and
call
mov
inc
sub
aas
jg
jnp
daa
ja
push
and
inc
mov
lahf
mov
pushf
and
dec
xchg
gs
mov
sbb
jmp
mov
push
stos
in
cmp
adc
lods
lods
and
jle
icebp
push
les
popa
int3
cmp
movs
sub
fcmovu
inc
pop
mov
jecxz
lods
cmp
repnz
cli
bound
jmp
loope
popf
or
or
mov
not
jecxz
push
and
into
dec
mov
xchg
sti
jmp
jge
fild
mov
inc
sti
fisttp
and
sbb
aad
scas
dec
in
js
cmp
jmp
mov
push
sub
(bad)
fistp
fist
mov
rcr
icebp
call
inc
sahf
pop
bound
adc
pop
push
mov
or
std
push
pop
and
pop
mov
lods
xchg
xor
and
inc
es
loopne
test
leave
pop
jnp
imul
mov
or
es
jnp
js
add
dec
jno
rol
lock
pop
aaa
jnp
jmp
xchg
popf
jmp
dec
push
adc
ins
pop
ret
mov
(bad)
dec
mov
shl
jno
cmps
(bad)
jl
and
ret
jmp
gs
js
outs
cmps
xchg
adc
fdiv
mov
xor
movs
xchg
mov
jp
sub
fsubr
fisttp
mov
sub
push
sbb
mov
and
out
loop
mov
push
mov
or
xchg
stos
cld
sbb
out
les
dec
int
push
test
inc
movs
shl
test
mov
and
pop
cmp
dec
iret
mov
add
push
leave
jns
push
xchg
fnsave
jb
stos
mov
mov
or
add
cmp
mov
(bad)
mov
into
mov
xor
sahf
clc
inc
xlat
mov
aad
lods
and
jmp
int
shl
mov
add
in
imul
mov
pop
sbb
cmp
mov
and
and
lock
mov
or
cdq
aas
xor
adc
jecxz
xchg
or
or
sbb
mov
sub
dec
jge
sbb
test
jnp
jmp
push
or
loop
xchg
pop
pop
(bad)
xchg
into
add
cmp
mov
add
add
dec
sub
push
rcl
icebp
sub
mov
lock
adc
push
inc
mov
adc
adc
push
(bad)
aad
sbb
sti
mov
retf
movs
fadd
and
daa
jo
arpl
test
or
add
and
adc
jns
xchg
adc
imul
rcr
lock
mov
or
inc
imul
jb
(bad)
xor
jo
jg
push
in
stos
in
retf
mov
pop
mov
je
hlt
neg
push
sbb
jecxz
and
ret
cdq
test
scas
popa
or
mov
(bad)
push
gs
ins
dec
fs
gs
ret
ret
test
loope
in
xchg
lea
cwde
mov
or
dec
mov
mov
push
sub
or
out
outs
cmp
es
mov
xor
in
mov
xchg
pop
jnp
inc
in
cmp
mov
into
or
into
jl
or
cmc
mul
mov
inc
loopne
pushf
fist
loopne
mov
jb
nop
jge
jns
xchg
(bad)
cld
xor
add
push
sub
ja
and
(bad)
cmps
data16
lods
xchg
cmp
cmp
out
or
repnz
sar
sub
cwde
jae
or
sub
mov
stos
sti
xor
dec
push
in
pop
vpcomb
mov
sbb
xor
inc
push
mov
cmps
xchg
jl
mov
pop
xor
and
ror
push
sub
mov
outs
adc
das
int
cmp
sar
sar
push
mov
mov
clc
(bad)
push
adc
jg
and
xchg
out
fdivr
xor
lock
test
dec
es
sub
or
(bad)
mov
push
stc
or
jmp
pop
sub
jg
mov
and
inc
int
loope
cmps
lahf
shl
into
add
nop
or
mov
or
cmp
adc
dec
sub
push
dec
or
(bad)
sbb
dec
mov
movs
adc
or
ret
stc
xchg
dec
test
ret
mov
xor
(bad)
and
call
mov
fidiv
cmp
arpl
ret
data16
int
test
sub
dec
sub
ins
popa
mov
sub
aad
(bad)
fmul
dec
pusha
add
dec
inc
or
cmp
mov
pushf
or
gs
inc
(bad)
div
std
aad
push
in
xrelease
in
or
jecxz
popf
stc
repz
sbb
dec
in
or
stos
fs
in
adc
retf
mov
ss
inc
test
push
into
xchg
xor
mov
push
scas
push
fadd
outs
in
lods
jg
ins
mov
inc
and
xor
pop
cmp
lds
jmp
push
ds
test
in
jns
xor
and
lods
jbe
sar
nop
cmp
xor
xor
ret
xchg
inc
shl
repz
inc
fcmovnbe
xor
clc
movs
shl
jmp
das
mov
out
mov
cdq
pop
jmp
push
loope
adc
jecxz
cmp
fiadd
adc
push
xchg
push
push
xchg
push
shl
inc
and
imul
popf
adc
cmp
in
and
dec
movs
ss
mov
jo
inc
xor
jge
ss
and
add
jmp
xchg
pop
sub
fbld
mov
nop
gs
fisttp
dec
loopne
repnz
test
pop
test
rcr
mov
cwde
sub
sbb
jmp
mov
cwde
fs
mov
jge
daa
ins
ror
mov
adc
xchg
jb
cmp
pushf
cmp
jno
mov
mov
cmp
mov
lahf
test
dec
pop
popa
push
sbb
clc
and
int
sub
jp
sub
scas
push
pop
cmp
cwde
call
xchg
mov
mov
add
dec
out
fcmovu
movs
jmp
jae
leave
inc
add
clc
add
push
js
sub
(bad)
sbb
xlat
push
sub
cs
rcr
adc
mov
retf
aas
xor
cmp
jmp
lods
cmp
into
cld
sub
jmp
fcomp
cmps
sub
inc
les
pop
stos
push
jno
adc
pop
out
and
sbb
push
mov
jnp
and
imul
cmp
sub
mov
icebp
jb
mov
cld
and
retf
pop
sub
fdiv
call
pop
es
movs
mov
in
xchg
or
xor
pop
xlat
into
cmp
imul
test
test
jmp
mov
test
mov
xchg
inc
xor
loope
xchg
cs
pushw
jmp
sbb
fucomip
cmp
std
fcom
mov
lahf
icebp
xor
xchg
sub
sahf
adc
int3
dec
fcomp
inc
dec
push
xlat
loope
jo
cmp
les
imul
into
fsubp
pop
push
or
or
sub
jge
sar
(bad)
(bad)
(bad)
outs
xor
jbe
add
xchg
cmps
pop
stos
dec
cs
(bad)
add
cmp
adc
test
pop
adc
dec
or
pop
fucomip
pop
xchg
xchg
push
mov
jmp
dec
sub
sbb
inc
jae
sub
int3
adc
push
aas
call
jmp
das
and
sbb
fild
inc
jne
mov
call
mov
and
test
sti
push
pusha
cmp
cwde
test
ins
push
mov
adc
out
jmp
push
cdq
sbb
xor
jae
dec
sub
jmp
cmps
in
sbb
ss
addr16
stc
lods
sahf
test
das
mov
sbb
fdiv
jo
in
sub
mov
iret
mov
in
(bad)
xor
mov
adc
in
inc
jl
sbb
in
leave
jl
nop
push
jb
jnp
rol
mov
scas
fsubp
adc
sbb
xor
mov
sbb
mov
cld
or
mov
cld
jno
jbe
cmp
cmp
aam
cmps
xor
xlat
aam
sub
ins
aad
pop
retf
mov
sub
xor
outs
test
or
shl
and
in
hlt
mov
dec
cmp
push
neg
push
fst
and
inc
imul
gs
repnz
outs
push
adc
leavew
and
and
dec
arpl
inc
je
push
ds
or
test
pop
xor
pop
shr
adc
cmp
retf
ror
jbe
sbb
lods
push
pop
icebp
sbb
shl
stos
inc
jb
(bad)
xchg
icebp
xor
movs
loopne
(bad)
sar
cld
inc
test
retf
push
sbb
ficomp
mov
pop
mov
imul
stc
jmp
jp
mov
sub
cmps
sbb
push
dec
push
daa
(bad)
mov
mov
mov
(bad)
mov
movs
cmp
push
pop
loope
xchg
add
scas
cmp
daa
xor
jo
(bad)
int3
int
addr16
mov
cmp
in
cmp
test
cld
cld
nop
pop
int
mov
ret
and
cmp
jmp
ror
pushf
cmp
sbb
dec
push
fiadd
sar
inc
cld
aad
ret
sub
or
sbb
aas
sub
and
popa
into
aad
je
movs
out
mov
loopne
dec
out
xchg
mov
sbb
xor
ins
(bad)
aaa
pop
cmp
arpl
pop
std
mov
pushf
pop
(bad)
jmp
nop
pop
adc
icebp
xchg
adc
shl
neg
and
pop
xchg
ret
sbb
test
aam
ret
das
loop
xchg
(bad)
and
cmp
shr
xor
mov
sub
test
inc
inc
cmps
xchg
(bad)
ror
int
cmp
je
mov
sbb
xchg
ret
ins
popa
inc
cmc
push
adc
push
adc
dec
jno
sub
unpcklps
lods
test
push
mov
sbb
push
adc
push
pop
jecxz
fbstp
ins
shl
push
lock
jne
mov
mov
push
rcr
mov
add
mov
xchg
inc
xchg
aas
or
aam
and
inc
sahf
dec
add
aam
jmp
ins
mov
xchg
xchg
mov
out
retf
dec
pop
call
cmp
xor
cmp
sbb
test
inc
imul
inc
aad
xlat
sbb
stos
call
(bad)
std
test
add
xor
loop
in
xchg
data16
push
push
lods
jmp
jbe
test
cmp
and
jnp
push
xor
cmp
push
jnp
in
ficom
jmp
mov
inc
cmp
mov
cmp
cmp
sbb
xchg
pop
sti
(bad)
dec
mov
(bad)
cmp
test
aas
fptan
xlat
(bad)
lods
stos
sti
xlat
push
pop
ret
add
int3
pop
ins
sbb
pop
ins
push
mov
xchg
(bad)
jmp
push
test
frstor
imul
mov
rol
sbb
sub
in
or
in
push
sub
pop
jne
inc
call
or
enter
rcl
outs
dec
xchg
retf
mul
adc
sbb
dec
loope
xor
in
das
pusha
frstor
cli
rcl
jae
movs
out
xchg
aaa
pushf
test
out
or
ss
mov
sub
adc
push
add
fs
es
arpl
loope
sub
pop
shl
mov
aad
lods
(bad)
xchg
xchg
popf
adc
jecxz
(bad)
test
or
dec
gs
xchg
pop
div
mov
pop
inc
adc
mov
mov
inc
outs
fs
jecxz
mov
popa
cli
repnz
fistp
retf
xchg
ins
into
into
into
push
and
je
ficom
sub
shl
xchg
jns
mov
inc
jl
arpl
ins
jl
icebp
or
inc
inc
jns
pop
push
scas
icebp
jbe
mov
mov
outs
ret
cwde
ins
punpckhwd
add
dec
ficomp
add
cmps
mov
add
cld
(bad)
adc
pop
shl
mov
leave
sub
retf
lock
or
jno
mov
out
sub
add
in
loope
pop
fnsave
pop
scas
int
cmp
lds
xor
push
fs
or
pop
aaa
popa
cmps
pop
jmp
ins
xchg
hlt
inc
fsubr
push
bound
sbb
repz
in
sub
cs
cmp
out
mov
js
cwde
imul
add
jb
cmps
popf
(bad)
ror
ja
out
call
cmp
es
sbb
ds
push
pop
jo
sub
out
ss
ins
(bad)
cli
xor
mov
or
mov
mov
ss
or
inc
xchg
div
movs
cmp
ret
push
dec
sub
mov
jmp
lahf
sbb
dec
jecxz
push
xor
inc
jl
ret
and
out
jl
ss
das
out
int3
xchg
inc
popf
adc
push
popf
jmp
lods
pusha
mov
popa
jns
push
mov
jmp
or
js
dec
xor
stc
aam
rol
test
push
mov
std
loope
rcl
jp
cdq
popf
jns
sbb
inc
lock
repnz
push
mov
xchg
jns
dec
retf
inc
mov
cmp
les
and
and
push
pop
(bad)
sub
jecxz
ins
movs
pop
rcr
adc
mov
inc
sahf
iret
xchg
push
or
retf
aas
add
in
out
scas
inc
div
test
aas
stos
xchg
push
movs
push
neg
dec
add
pop
mov
les
push
and
xchg
xchg
hlt
push
inc
and
ja
pop
add
mov
pop
sahf
sub
inc
dec
and
addr16
sti
push
in
push
mov
push
dec
inc
jmp
sub
frstor
push
arpl
push
daa
and
pop
and
adc
and
mov
ficom
inc
dec
push
lea
adc
sbb
sbb
jb
xlat
and
add
dec
or
(bad)
add
jl
cmps
push
inc
(bad)
xor
je
stos
mov
jecxz
mov
pop
test
movs
mov
dec
jae
xchg
mul
dec
lods
lods
mov
pop
push
inc
mov
jb
jl
popf
push
pop
mov
aad
loop
sbb
repnz
adc
inc
(bad)
bound
std
shl
pop
retf
add
jnp
jb
shl
inc
dec
ret
jo
pushf
ds
(bad)
xor
inc
lea
btr
call
jns
(bad)
test
adc
jg
jmp
xor
mov
aam
imul
cmc
sahf
jb
dec
push
out
in
pop
addr16
rcl
xchg
push
inc
mov
sbb
push
inc
imul
xchg
bound
pop
add
inc
sub
xchg
dec
rcr
clc
jge
ins
ror
fsub
(bad)
cwde
jmp
or
bound
pop
jp
sar
test
xchg
xlat
test
cmps
and
adc
xor
mov
scas
test
sbb
retf
mov
inc
call
call
push
xor
ins
or
out
lea
mov
cmp
inc
cdq
ja
sbb
dec
lds
or
and
dec
shl
mov
vphaddbq
push
jns
pop
aaa
cld
mov
xor
and
mov
es
fld
aaa
push
pop
pop
stos
push
ins
cmp
cmc
cmp
stos
add
push
or
arpl
push
push
cmp
loopne
mov
repz
rcr
mov
mov
ror
fwait
mov
xchg
jb
or
shl
aas
dec
dec
push
dec
lods
sub
icebp
mov
enter
push
into
out
adc
icebp
mov
jl
shl
leave
inc
dec
sub
sbb
xchg
ss
or
cdq
jecxz
test
xchg
xchg
push
paddw
pop
cmp
sbb
rep
sbb
xor
mov
mov
fndisi(8087
sub
pop
push
jp
clc
test
inc
pop
mov
gs
ins
xor
fstp
inc
cmps
clc
mov
push
call
ins
push
cs
fdiv
push
sbb
xchg
and
ds
sub
ins
gs
adc
and
xchg
(bad)
sahf
test
ror
sub
jmp
inc
das
pop
bound
mov
sub
mov
dec
xor
sub
test
das
mov
xor
lods
mov
mov
mov
mov
pop
sahf
push
(bad)
lahf
or
cs
sti
fs
mov
pop
neg
jnp
fcomi
ss
int
lahf
clc
pop
(bad)
mov
dec
(bad)
and
or
xchg
push
inc
xor
jp
lds
in
jl
stc
(bad)
dec
popf
add
jne
sbb
mov
ja
push
and
loope
or
bound
fidiv
popa
inc
in
(bad)
cdq
sbb
adc
pop
sbb
stos
shl
lods
(bad)
adc
jne
pop
jnp
lods
sbb
cld
sar
lea
inc
ret
inc
adc
(bad)
mov
add
ss
test
push
cmp
je
aam
adc
aas
ja
ror
jb
aad
scas
adc
mov
mov
sbb
push
(bad)
imul
sti
xchg
imul
sub
int3
enter
cmp
push
pop
shl
pop
es
mov
mov
fcom
xchg
jne
push
and
xor
stos
repz
gs
cmp
bound
mov
jb
movs
sti
mov
sub
popa
pop
xor
ds
test
repz
and
or
mov
rcl
das
add
out
adc
cmps
jmp
xchg
xchg
jnp
(bad)
mov
adc
inc
div
ja
sbb
cld
outs
xor
push
(bad)
out
xchg
retf
clc
and
sbb
fiadd
pusha
pushf
sbb
push
lea
sahf
rcl
mov
push
retf
iret
mov
ficom
push
xchg
ja
popf
jg
cld
or
dec
push
lahf
mov
lock
mov
sub
ja
in
ds
je
repnz
loop
push
icebp
cmp
or
inc
psrld
mov
push
sbb
cwde
and
adc
and
iret
and
cmps
and
xor
adc
jae
mov
xor
adc
mov
loop
fwait
std
(bad)
imul
cmps
and
push
and
dec
xchg
aas
clc
adc
aaa
xor
(bad)
int
ret
add
jl
cs
sti
clc
dec
pop
std
mov
(bad)
adc
adc
jno
mov
jmp
push
js
add
cmps
push
jp
sbb
pop
rcr
js
bts
dec
stos
loop
mov
pusha
sub
rol
dec
push
push
mov
pop
cmp
ja
lods
mov
ret
mov
stos
fstp
adc
shl
dec
mov
jg
mul
fs
mov
inc
push
out
cdq
imul
mov
xor
leave
dec
jl
or
dec
sub
xchg
jae
shl
or
dec
out
neg
jecxz
pop
xchg
and
not
das
ret
xor
jge
jecxz
push
mov
mov
dec
mov
movs
aam
repz
xchg
pop
test
ror
jmp
lods
ins
pop
sbb
cmp
imul
pop
add
mov
iret
adc
sar
into
xor
dec
scas
jg
cwde
aas
rcl
push
mov
sar
add
pushf
std
(bad)
(bad)
int3
(bad)
mov
movs
jns
leave
xchg
add
sub
sbb
ror
movs
add
mov
idiv
aas
outs
cmp
out
(bad)
fld
inc
mov
mov
scas
test
pop
ja
sbb
mov
popa
pop
test
in
pop
adc
jecxz
xchg
pop
dec
dec
xor
out
push
sub
je
adc
ficom
test
dec
mov
aad
stos
and
sar
mov
dec
scas
bound
push
push
dec
mov
xor
jmp
push
popf
lods
xlat
xor
(bad)
pop
mov
popa
inc
push
outs
dec
cmp
pop
and
ja
mov
cmp
aaa
push
pop
adc
rol
cmc
leave
cmp
pop
int3
cmp
pop
test
mov
hlt
adc
mov
xor
aas
mov
cmp
adc
xor
das
into
xor
mov
gs
pusha
fwait
ja
outs
ins
rcr
push
sar
jno
push
pusha
pop
mov
pop
mov
bound
pop
pushf
push
adc
pop
xchg
sub
push
retf
adc
out
push
push
cmp
shl
push
jle
gs
ins
addr16
out
gs
or
adc
fwait
or
neg
pop
sbb
fdiv
lock
leave
mov
lods
enter
(bad)
div
cmp
jbe
xor
xchg
lock
jg
pop
or
ret
hlt
pop
lea
xor
jmp
jnp
jbe
mov
mov
lahf
xchg
cmp
stc
jnp
or
jecxz
mov
mov
dec
mov
lods
mov
push
stos
jl
xchg
dec
adc
and
add
sbb
es
ficomp
push
mov
sbb
pop
push
loopne
mov
cwde
nop
(bad)
fcomp
and
sbb
sub
(bad)
push
mov
pop
lahf
lock
aam
and
outs
xlat
cmp
std
pop
loopne
sub
mov
lods
aas
call
das
and
mov
lods
or
add
dec
xor
xor
or
pop
mov
push
rol
movs
rcl
add
dec
fs
inc
(bad)
fldcw
lahf
jnp
dec
sbb
sbb
jb
push
ins
jl
fs
pop
fbstp
xchg
es
movs
mov
in
dec
ffreep
dec
mov
retf
ret
dec
enter
imul
jns
mov
loopne
dec
mov
das
(bad)
bound
sbb
jnp
or
inc
jecxz
sub
cmp
ret
push
push
xchg
repnz
mov
mov
test
fnstsw
js
not
sub
jge
pop
rcr
push
imul
movs
repz
pop
pop
out
in
xor
gs
mov
xchg
out
adc
ins
add
clc
jnp
mov
movs
fadd
(bad)
pop
pushf
ds
jbe
sub
mov
sbb
mov
pop
dec
and
sbb
nop
sbb
pop
adc
add
add
mov
push
or
sub
push
inc
enter
imul
cwde
je
test
scas
daa
sbb
jae
mov
mov
repz
dec
pop
push
(bad)
sti
lock
push
shl
cmps
test
lds
sbb
xchg
in
es
idiv
dec
push
scas
test
add
push
and
and
fnstenv
sbb
scas
sub
adc
enter
ror
cmps
ror
mov
push
std
jmp
test
inc
xor
lods
jp
idiv
lea
jb
mov
js
addr16
or
ss
dec
cmp
mov
mov
mov
daa
clc
out
les
sub
call
stos
inc
xchg
sub
cmp
movs
pop
stc
test
imul
mov
pop
xchg
sub
push
add
rol
mov
adc
lock
repnz
mov
add
and
(bad)
cld
jmp
fmul
rol
lods
and
arpl
ret
pop
ret
aam
xor
cmp
cmc
fwait
xor
xchg
inc
xchg
fidiv
lahf
pusha
lds
clc
cmps
mov
inc
pop
arpl
mov
jbe
div
jmp
adc
jecxz
jnp
arpl
jge
clc
or
cmp
mov
out
mov
add
pop
xor
arpl
hlt
push
inc
dec
push
inc
cmp
mov
cmps
jmp
adc
hlt
loopne
mov
push
ins
dec
fsub
xchg
fist
nop
sub
loop
ins
jp
mov
mov
mov
cmp
add
mov
and
cld
lahf
rcl
mov
and
in
jmp
loop
sbb
jmp
cmp
add
and
jno
in
pop
mov
jbe
or
into
push
inc
sar
jge
stos
jp
mov
imul
cs
cmp
leave
mov
(bad)
retf
out
mov
jo
dec
adc
and
xlat
in
and
cld
xchg
jns
out
ret
fist
sub
jbe
repnz
mov
test
xor
sub
ror
or
pop
push
fmul
inc
clc
andps
xor
ret
cmps
add
adc
push
and
adc
jne
popa
jl
and
and
jmp
into
dec
mov
addr16
sbb
inc
je
out
(bad)
sbb
xor
jns
or
xchg
popf
xor
(bad)
cld
or
sar
or
jae
mov
sahf
sub
loopne
cli
nop
and
scas
inc
jae
cld
push
adc
push
jns
dec
pop
push
sub
hlt
dec
mov
inc
dec
cdq
test
or
fs
inc
cmc
push
nop
in
ins
out
pop
jno
inc
xchg
out
ret
sub
and
fs
dec
stos
dec
cwde
dec
js
mov
(bad)
es
mov
xor
xchg
out
ret
ins
nop
mov
mov
stc
pusha
(bad)
cmc
push
push
mov
push
sbb
cmps
mov
jl
in
shl
inc
ins
cmp
dec
mov
mov
pop
lea
pop
rol
pusha
pop
sub
dec
pop
inc
pop
add
jb
loop
dec
out
into
(bad)
sbb
pop
xchg
call
out
cmp
jmp
push
xchg
xchg
xlat
mov
dec
ds
loop
adc
mov
call
mov
das
jp
inc
lds
inc
inc
push
dec
push
leave
push
aaa
push
lods
arpl
mov
xor
inc
sub
movs
arpl
aam
mov
mov
xchg
push
inc
fwait
jg
push
imul
pop
les
ins
test
popa
mov
sbb
inc
or
pop
cmp
add
xor
arpl
outs
clc
and
jle
sahf
mov
dec
sbb
adc
cmp
cmp
scas
mov
or
pop
xchg
jge
fld
ror
dec
pusha
pop
jne
mov
mov
lahf
addr16
adc
test
iret
pop
loopne
(bad)
fstp
mov
test
pop
sub
mov
leave
bound
pop
xchg
mov
dec
mov
or
and
push
or
stc
xchg
test
sar
fdiv
dec
mov
mov
adc
pop
(bad)
cmp
jecxz
add
adc
ds
jo
fucomp
jmp
dec
fiadd
fst
and
inc
call
jge
push
inc
(bad)
fnstenv
iret
je
mov
stos
je
sub
test
mov
outs
sbb
fsubrp
xchg
sub
in
add
add
jge
inc
mov
and
or
fwait
call
push
sub
jl
loopne
push
neg
sub
addr16
std
sbb
xchg
cmp
shl
cmps
popa
sub
loopne
cmp
ror
adc
mov
pusha
and
and
mov
jo
test
pop
not
mov
adc
push
rcl
loope
mov
out
in
test
push
lods
xchg
dec
push
sub
sub
ret
and
jae
mov
dec
mov
cld
lds
jl
mov
data16
call
in
adc
imul
adc
mov
sbb
sub
sub
jae
xchg
mov
stos
dec
test
hlt
sub
or
cs
inc
inc
add
test
retf
mov
arpl
dec
sub
fstp
fistp
or
loop
arpl
push
mov
call
outs
loope
sahf
cmp
inc
stos
mov
or
int
and
shl
call
add
mov
sub
outs
sbb
xchg
mov
test
inc
jo
push
dec
pop
add
cli
jge
mov
mov
movs
cwde
xchg
mov
ss
jecxz
daa
push
jmp
gs
mov
sub
jg
dec
mov
sub
mov
repz
add
bnd
jle
jle
push
jbe
fs
shl
xchg
dec
test
pop
push
pop
lea
cmc
pop
jg
cmp
xchg
stos
or
add
or
fild
cmp
cmps
loope
pop
push
and
pusha
cmp
out
xor
sub
ins
sbb
or
push
push
mov
ss
cmc
ja
mov
sub
loope
inc
and
push
aaa
mov
or
dec
sbb
add
cmp
(bad)
xor
jle
in
aam
or
aam
movs
iret
sub
adc
clc
adc
push
stc
mov
je
call
jl
cmp
xchg
fdivr
push
adc
sub
pop
cmps
jae
dec
or
xchg
(bad)
stc
aas
repnz
pop
adc
lods
in
lods
fcomp
(bad)
pop
xor
lods
aaa
sbb
retf
ins
lahf
push
data16
adc
jg
add
test
push
lock
out
call
pop
sub
jns
sbb
lods
sbb
jp
movs
arpl
or
lds
out
push
jo
retf
and
(bad)
out
mov
mov
jnp
add
(bad)
ja
cmps
and
dec
and
adc
shl
xchg
mov
fisttp
cmp
hlt
and
clc
mov
aaa
fwait
mov
fs
out
rol
sub
stc
sbb
sbb
retf
std
clc
sbb
sbb
adc
jg
movs
or
repz
cwde
jb
sar
lock
sbb
addr16
sbb
jecxz
aas
jmp
cmp
addr16
ins
sahf
test
mov
jmp
mov
mov
dec
stos
aad
push
fsub
mov
adc
cmp
or
iret
or
xchg
jle
push
sub
dec
mov
gs
dec
hlt
mov
mov
int3
imul
not
pop
sar
add
sbb
and
cs
jae
jmp
cmps
pop
hlt
enter
sub
aad
aas
push
in
mov
adc
jle
test
jl
out
int
or
movs
jne
sbb
and
adc
mov
push
out
jne
jmp
jl
mov
mov
dec
or
lds
retf
mov
push
repz
cwde
push
fmul
mov
adc
or
rcr
rcl
xor
xchg
(bad)
mov
inc
push
xor
add
pop
outs
stc
xchg
aaa
sub
mov
inc
cmc
cmp
fdiv
ret
or
call
retf
test
pushf
dec
(bad)
shr
jg
xchg
adc
mov
and
add
dec
inc
add
cmps
adc
cdq
jno
loopne
mov
stos
or
xor
repz
fisub
call
test
outs
adc
cmps
retf
mov
shl
dec
xor
mov
sti
ins
mov
and
jae
push
or
or
bound
mov
add
push
loope
adc
call
cli
pop
iret
loop
ficomp
xchg
fdiv
stos
push
shl
cld
mov
ds
xchg
or
sbb
push
(bad)
clc
xor
xor
add
out
mov
in
call
xchg
mov
cmp
aaa
inc
sub
dec
fcom
cmps
lods
jl
mov
in
vpsllq
sbb
das
cli
cmp
shr
sbb
es
mov
in
scas
enter
aam
sub
mov
cmc
add
movs
(bad)
sub
sub
adc
jmp
jp
repnz
es
xchg
in
rdpmc
pop
out
pop
fsub
out
ins
inc
pushf
icebp
cmp
mov
icebp
mov
call
cli
mov
(bad)
outs
adc
movs
fild
popa
adc
and
pop
popa
cli
nop
cwde
dec
add
sbb
push
push
std
je
sbb
add
lods
inc
sti
les
push
mov
icebp
xchg
sub
mov
cmp
jno
frstor
lea
cmp
sbb
jbe
out
cdq
adc
scas
movs
sbb
adc
jmp
icebp
xor
das
ja
adc
(bad)
mov
out
loop
or
or
sbb
add
pop
jb
xchg
sub
jae
std
popa
(bad)
pop
js
sbb
jne
sti
into
ds
jne
call
or
jp
outs
cs
cmp
cwde
(bad)
adc
call
imul
cmp
ror
das
xchg
in
in
jmp
and
adc
mul
out
inc
pop
sbb
enter
icebp
mov
call
jmp
jnp
push
scas
mov
out
mov
push
xchg
cmp
mov
pop
out
std
sbb
ret
lods
or
aam
mov
push
push
leave
in
imul
movs
int3
pop
xor
inc
jmp
mov
retf
or
fdivr
in
xor
cmc
fldenv
lods
pusha
int3
imul
sub
repz
outs
ins
rcr
inc
sbb
add
add
in
loop
mov
ins
jge
cmp
pop
adc
and
dec
(bad)
mov
jo
daa
pop
(bad)
vcvtdq2ps
pop
retf
inc
jbe
adc
test
pop
in
sub
test
mov
fwait
in
stc
pop
cmp
nop
(bad)
das
rcr
and
out
sar
shr
ror
inc
mov
or
daa
dec
push
and
and
out
lods
stos
and
dec
mov
pop
shr
push
adc
dec
or
pop
sbb
sbb
mov
pop
cmps
adc
call
fldenv
in
std
mov
or
repz
xchg
xor
aad
ret
aas
enter
cwde
inc
imul
cmp
pop
jl
hlt
inc
push
fmul
add
aam
dec
adc
pop
sbb
mov
lahf
mov
xchg
add
lock
jno
inc
test
aaa
loop
shl
into
pop
and
test
lods
arpl
jno
push
jle
dec
mov
cmps
les
or
ret
repnz
(bad)
mov
mov
mov
imul
xchg
cmp
sub
push
loop
pop
dec
adc
(bad)
mov
pop
clc
(bad)
adc
sbb
dec
cmp
cli
out
pop
sub
add
cli
cmps
xchg
sub
dec
xchg
adc
clc
xor
sbb
sti
pop
jp
aad
es
(bad)
outs
or
adc
cli
cs
and
fcmovnb
ds
mov
sbb
adc
xchg
xlat
jo
ficomp
adc
and
adc
and
pop
out
push
adc
pushf
outs
mov
cmc
or
cmp
fs
iret
jecxz
inc
lahf
mov
int3
or
cmp
push
xor
sub
xchg
push
or
mov
mov
fisttp
jmp
aam
aad
mov
dec
inc
mov
xor
cmp
lods
xchg
add
dec
idiv
lods
dec
fldcw
fistp
std
(bad)
xchg
lods
push
push
jbe
inc
dec
lahf
adc
or
in
xchg
and
jl
sub
pop
mov
enter
xor
mov
mov
sbb
or
sbb
mov
pop
rcr
sub
ins
out
inc
and
(bad)
mov
push
xor
popa
retf
inc
loope
jmp
mov
dec
loope
ficom
adc
mov
lds
or
push
ss
(bad)
sub
ror
invd
pop
xchg
scas
sbb
push
ss
xor
arpl
imul
loop
xchg
push
adc
fisub
push
xchg
jns
pushf
leave
xor
push
fs
mov
rol
enter
(bad)
lods
jmp
cmp
ins
xchg
fs
xor
jg
adc
mov
jmp
sub
outs
inc
xor
push
mov
or
or
mov
mov
pop
mov
cs
in
fdivr
mov
mov
enter
mov
(bad)
mov
and
xor
inc
add
mov
sub
jl
inc
inc
stos
mov
sub
dec
pusha
mov
mov
out
dec
imul
lea
dec
mov
adc
push
dec
in
test
into
sub
inc
push
cmp
in
xor
jmp
inc
dec
nop
sub
mov
movsx
addr16
add
lock
loop
retf
sub
call
out
pop
lods
push
dec
mov
mov
fadd
pop
adc
adc
sub
cwde
retf
push
lods
ins
dec
inc
(bad)
dec
loopne
ror
mov
add
dec
push
sti
lea
adc
mov
fs
xchg
jb
mov
cmps
cmp
mov
popa
retf
mov
es
cmp
sub
out
mov
mov
mov
cmp
hlt
pusha
jne
and
test
mov
lahf
xchg
jg
lds
loope
ins
or
mov
add
ja
adc
xor
adc
popa
mov
sbb
inc
cld
je
xchg
inc
arpl
cmp
mov
(bad)
dec
inc
mov
fadd
mov
ins
ja
xchg
xor
push
jb
lds
inc
cmp
cmp
pop
cmp
add
bound
xchg
sub
aam
pop
mov
dec
fmul
stos
jns
cmp
jns
call
adc
ret
add
stc
scas
lds
push
inc
jns
cmps
pop
pop
scas
and
(bad)
cmps
jne
inc
ror
jg
ja
mov
add
retf
lods
push
mov
shl
retf
push
repz
sub
adc
adc
popa
dec
cmp
cmp
xlat
push
and
mov
shl
lea
(bad)
(bad)
adc
repz
or
cmp
inc
pop
adc
sub
repnz
shr
inc
cmc
imul
fadd
retf
in
or
inc
and
push
or
pop
and
xor
das
dec
add
push
and
cld
imul
gs
cdq
and
add
mov
test
jp
dec
mov
fs
jns
cmp
rcr
sub
xor
xchg
loope
div
add
fwait
cmp
push
imul
stos
popa
and
adc
movs
lahf
and
xor
mov
xchg
ss
jmp
or
shr
cmps
jne
or
sti
aad
loop
outs
ds
(bad)
sub
cmc
in
cmc
jecxz
xor
cmp
lock
add
jno
pop
mov
adc
cmp
aad
cdq
push
push
xor
mov
sbb
ficom
jo
int
add
jno
mov
xchg
(bad)
xchg
scas
scas
ret
je
xor
xchg
xchg
jle
jb
test
int3
push
jl
lahf
ins
jle
scas
js
addr16
(bad)
cli
xlat
ret
pop
push
pop
jbe
jmp
inc
sbb
test
clc
dec
into
and
test
add
leave
sahf
(bad)
test
or
xchg
test
popa
lea
xchg
jb
xchg
dec
in
mov
daa
jne
mov
dec
pop
xchg
sbb
in
xchg
(bad)
cmc
ret
dec
movs
(bad)
cld
cwde
sbb
fnsave
push
ds
xchg
test
(bad)
sbb
cli
into
scas
cmp
jmp
pop
imul
sub
jecxz
mov
push
js
mov
ror
inc
jo
xor
sti
jnp
sbb
push
mov
add
shl
add
clc
hlt
sub
shl
loop
cdq
sub
mov
loope
mov
xchg
xchg
sbb
enter
ret
(bad)
mov
xchg
call
mov
pop
mov
mov
and
js
push
dec
ins
add
das
cmp
jmp
pop
pop
add
out
add
clc
mov
push
xchg
daa
cs
loop
clc
in
mov
imul
and
mov
bsf
sbb
sbb
push
mov
fld
out
shl
lea
scas
jo
jmp
pop
cdq
lahf
lods
jmp
mov
mov
std
js
lods
(bad)
stos
xor
xor
imul
add
arpl
es
aad
ins
out
fadd
inc
lds
add
pushf
mov
mov
sbb
scas
(bad)
mov
mov
clc
loop
jmp
push
outs
and
pop
aad
loop
jmp
(bad)
push
or
dec
aaa
mov
xchg
fmul
pop
int3
call
sti
dec
mov
jmp
icebp
lea
or
iret
fwait
pop
jae
mov
sbb
lods
(bad)
mov
fldenv
gs
test
ins
dec
inc
test
fmulp
xor
daa
xchg
mov
jecxz
cs
(bad)
lods
mov
rol
jge
stc
or
mov
test
mov
adc
sub
stc
cmp
outs
jb
adc
js
cmp
dec
jnp
jl
adc
cs
mov
cmps
cmp
(bad)
fcomp
pop
cli
fiadd
mov
(bad)
mov
test
or
sbb
adc
push
mov
mov
aaa
dec
iret
addr16
or
jg
(bad)
loop
bswap
ins
mov
inc
nop
jp
add
mov
cmp
push
jns
movs
xchg
shl
rcr
jo
scas
adc
pop
sahf
dec
clc
out
cmps
not
mov
int3
aad
xchg
std
adc
inc
ret
adc
mov
push
xchg
repz
test
jl
das
mov
push
add
sbb
inc
(bad)
cdq
rol
push
mul
aas
xchg
lahf
push
pop
std
lea
in
fistp
adc
sbb
dec
or
mov
rol
outs
cdq
sub
out
or
test
push
sbb
ins
adc
data16
mov
fwait
push
loope
ins
retf
int
push
xor
and
dec
bound
cmp
loope
add
mov
fcmove
jmp
jg
jbe
sub
shl
je
mov
mov
sub
push
gs
movs
mov
push
adc
(bad)
sti
call
jae
imul
(bad)
ror
push
adc
inc
clc
icebp
and
inc
leave
dec
daa
aas
sub
pop
cmc
gs
push
push
cdq
aas
stos
xchg
stc
into
mov
sbb
pop
popa
xor
sahf
daa
dec
sbb
gs
dec
dec
or
pop
push
nop
pop
inc
pop
mov
mov
scas
fs
jle
in
mov
(bad)
and
sar
fimul
mov
pop
pop
mov
pop
mov
pop
or
das
pop
(bad)
outs
push
fstp
mov
movs
mov
aas
cmp
sti
mov
ds
push
mov
inc
dec
sub
sti
es
pop
dec
pop
mov
pop
stos
xor
(bad)
pop
loop
and
pop
aam
popa
push
stos
imul
inc
dec
adc
cwde
xchg
cs
repnz
push
ja
sub
(bad)
inc
ss
(bad)
mov
mov
test
popa
pop
lds
mov
in
xchg
pusha
(bad)
mov
and
or
push
mov
das
icebp
jns
inc
lods
dec
cmc
push
rol
cmps
je
icebp
in
add
or
adc
outs
pop
pop
and
and
add
dec
loopne
t1mskc
lahf
pop
sbb
sub
fsub
ret
cdq
cs
dec
mov
sbb
pop
retf
inc
pop
inc
icebp
xor
mov
in
jl
cmps
dec
push
cmp
imul
inc
push
push
pop
(bad)
jmp
adc
push
cmp
fstp
sub
stc
mov
push
sub
addr16
cld
into
mov
jp
mov
push
or
inc
push
ins
push
shl
bound
mov
ja
jl
and
xrelease
es
mov
loopne
ins
mov
and
(bad)
lods
pop
pop
add
sub
das
or
scas
idiv
leave
(bad)
pop
push
inc
sbb
push
jmp
sar
jmp
mov
je
jl
cmp
jnp
pop
sti
sub
xchg
adc
retf
fsub
in
mov
pop
std
lahf
and
xor
sub
out
aam
xchg
enter
cmp
fst
jge
fcmovbe
push
pop
cmp
or
and
mov
xor
(bad)
pop
add
popa
cdq
outs
or
mov
jge
cmps
lods
xor
sub
xchg
cs
mov
lahf
pop
cmp
cmc
dec
mul
in
test
jae
popa
xchg
mul
cmp
mov
add
jecxz
mov
add
push
loope
push
stos
scas
push
or
adc
mov
dec
hlt
add
clc
inc
mov
push
or
in
pop
mov
pop
mov
shl
ficom
mov
push
mov
call
xor
jnp
lods
lds
ret
jae
cs
jbe
ja
imul
out
iret
mov
sub
pop
leave
add
mov
adc
mov
stc
stos
xchg
nop
xor
jecxz
push
xchg
push
mov
sbb
sbb
push
pushf
scas
(bad)
adc
jne
ins
jnp
push
sbb
push
cmp
shl
loope
cs
add
pop
sub
or
add
cmp
push
push
jg
xor
mov
test
retf
pop
(bad)
cmp
das
xchg
jno
stos
jmp
add
add
sti
sub
outs
je
js
out
xchg
aam
jbe
sub
pop
add
dec
arpl
ja
or
cwde
retf
add
fidivr
cwde
inc
mov
mul
jmp
dec
mov
pushf
push
out
mov
and
daa
xchg
push
adc
pop
mov
jg
sbb
sti
aaa
push
lock
ds
adc
inc
(bad)
cmp
(bad)
cwde
pop
sub
shl
add
aas
jae
mov
lea
add
jbe
adc
fucomi
in
lods
xor
adc
cmc
fmul
test
ins
cmp
xor
daa
push
mov
jmp
stc
push
(bad)
lahf
and
je
mov
inc
xchg
jo
jnp
jl
dec
sub
jl
repnz
aaa
fwait
popf
ret
or
dec
shl
ss
push
cmp
aad
test
mov
(bad)
pusha
dec
push
movs
test
jns
data16
jmp
cdq
xor
fadd
repnz
mov
jmp
fadd
dec
xchg
mov
or
xchg
sahf
pop
std
inc
inc
and
inc
leave
and
cmp
es
and
jge
test
mov
shl
rol
and
in
cmp
stc
fs
and
xor
and
fsub
jnp
daa
or
push
enter
hlt
loopne
or
mov
adc
movs
xor
hlt
cmp
xchg
inc
xor
inc
retf
cdq
pop
push
jp
jnp
in
jl
sbb
push
xchg
mov
sub
je
test
loopne
mov
xchg
xchg
push
fucomip
inc
imul
in
add
and
cmps
mov
push
or
or
lds
pop
cmp
push
lods
js
(bad)
out
mov
xor
jno
cmp
ret
sub
pop
lods
mov
retf
mov
xor
or
repz
pop
push
sbb
fbstp
push
sub
cs
jp
jl
fcomp
mov
inc
les
(bad)
adc
stos
dec
imul
popa
fidiv
xchg
and
pop
or
push
call
lods
jl
sbb
mul
pushf
dec
sbb
dec
popa
ror
loope
aam
inc
mov
add
xchg
ret
push
push
je
push
cld
mov
(bad)
push
sub
xchg
sub
pop
mov
push
sub
sub
outs
sbb
or
adc
adc
rol
jecxz
xchg
and
fidivr
add
add
push
(bad)
test
mov
push
bound
(bad)
sar
dec
cmps
daa
addr16
adc
push
fwait
and
(bad)
mov
data16
ret
scas
adc
lea
sub
pop
push
in
cmp
scas
dec
outs
and
mov
xchg
retf
push
test
repz
hlt
push
dec
cli
push
jbe
fnsave
int3
and
inc
shl
inc
add
lds
movs
mov
shl
inc
int
and
lahf
cmp
sbb
sub
jle
popf
pop
xor
out
aad
cmp
jbe
mov
or
jecxz
loopne
or
aam
mov
xor
or
xchg
das
push
shl
xchg
pusha
lock
in
inc
iret
inc
xchg
mov
loope
add
mov
dec
jns
jmp
div
adc
in
stc
ins
ror
aad
(bad)
imul
push
fisttp
int3
dec
mov
sar
fadd
push
lock
int
cmps
pushf
test
pop
inc
lea
addr16
(bad)
maxps
cld
xchg
ins
out
bound
jns
push
mov
cmp
cmc
and
add
leave
jecxz
popf
in
daa
mov
dec
pop
xlat
sub
mov
ss
push
into
push
or
inc
xor
repz
retf
(bad)
stos
pop
jae
fidivr
sbb
jns
loop
mov
nop
aaa
xchg
ret
adc
repz
sbb
sub
sar
sar
fsubp
shl
test
aas
sbb
shl
pop
fisttp
popa
popa
inc
adc
jns
cmps
mov
sub
mov
mov
in
je
jg
test
lods
aad
push
cmps
cld
clc
sbb
mov
sub
sbb
call
adc
sbb
adc
inc
icebp
xchg
push
and
dec
(bad)
sbb
lods
dec
js
gs
popf
dec
adc
test
out
dec
jo
enter
out
pop
dec
push
out
cld
pop
and
test
push
push
inc
arpl
pop
shr
(bad)
push
xor
jns
xchg
pop
inc
fldlg2
mov
call
pop
or
add
call
fdivr
movs
and
or
xlat
enter
ins
adc
icebp
call
push
mov
jge
xchg
aad
fcom
nop
rcl
xlat
shl
push
cmp
dec
sub
sbb
or
enter
dec
jb
test
dec
repnz
cmp
aad
nop
les
pop
xchg
sbb
aam
mov
and
repz
mov
pop
out
dec
and
xchg
not
push
sbb
ret
mov
fiadd
aaa
(bad)
fsubr
and
int
pop
adc
mov
icebp
dec
loopne
dec
or
fwait
and
aaa
ss
test
sbb
xlat
cs
aas
sub
pop
cmp
dec
mov
push
mov
or
mov
pop
xchg
pop
jmp
mov
mul
inc
inc
aam
adc
std
stos
maxps
pop
jo
shl
or
push
cmp
mov
dec
in
scas
mov
dec
jg
xchg
sahf
or
mov
mov
aad
xor
pop
mov
retf
retf
fs
addr16
rcl
sub
call
lock
or
push
out
(bad)
pop
imul
cdq
add
test
cli
xchg
cmp
dec
in
cld
cmp
ds
popf
or
sbb
sub
out
adc
fadd
aaa
xchg
cld
aaa
popf
and
pop
inc
mov
fld
fs
(bad)
jns
push
lock
dec
dec
sub
cmp
fwait
cmps
adc
mov
sbb
cld
scas
fs
or
ins
sub
call
movs
enter
outs
das
in
repz
jno
test
xchg
in
int
inc
sub
fnstenv
mov
sub
xlat
push
cmc
mov
stos
test
add
adc
inc
(bad)
cmps
leave
add
mov
arpl
fiadd
jge
add
retf
fistp
ret
xchg
pop
shl
lock
sahf
std
shr
retf
push
pop
popf
dec
sub
push
pusha
ficom
xchg
lea
out
jo
bound
out
sub
cmp
xor
xchg
mov
sbb
jbe
jmp
neg
out
and
push
jo
push
outs
loope
cs
pop
das
and
ret
aaa
cmp
and
inc
jae
les
add
sub
cmps
sar
iret
push
push
sahf
cmp
imul
test
pop
lock
sbb
test
mov
xchg
mov
leave
or
adc
stos
hlt
adc
repz
xchg
xor
ss
iret
push
std
adc
xchg
pusha
loopne
and
test
cli
pop
and
sub
lea
or
ret
add
in
ret
xchg
rcr
sahf
out
xor
and
bound
lods
jo
pop
data16
and
loopne
sub
push
or
inc
in
imul
mov
mov
test
cmp
xor
ss
nop
dec
add
xchg
xor
ja
inc
ret
sub
outs
xchg
out
cmp
ss
(bad)
and
add
ds
xor
lods
push
pop
retf
adc
in
ss
cli
mov
div
sahf
popa
mov
xchg
sub
xchg
ret
ja
jnp
inc
mov
jl
push
xor
(bad)
or
out
dec
jl
pop
and
mov
push
mov
add
xchg
test
and
pop
loop
mov
or
cmp
inc
pop
pop
push
sbb
cmp
jno
(bad)
call
dec
sbb
pop
movs
fild
dec
std
cmps
cmp
nop
inc
dec
aad
cmp
jnp
in
jne
ss
pop
clc
outs
sub
dec
test
cmp
mov
lahf
aam
adc
jb
je
push
out
not
jecxz
mov
adc
pop
push
sbb
push
add
pushf
test
test
xor
adc
(bad)
fisttp
mov
stc
xor
shr
lea
ret
jg
ds
dec
jecxz
daa
pushf
sbb
mov
dec
lods
xchg
cmp
pop
push
add
mov
jbe
mov
lahf
or
cmc
cmp
fld
outs
imul
cmp
dec
(bad)
daa
or
mov
pop
shl
aas
and
pop
fist
push
fsub
loop
add
xor
icebp
sbb
leave
pop
cmps
sbb
mov
bound
push
scas
and
(bad)
ror
jecxz
mov
fadd
scas
retf
into
add
ret
ins
loopne
add
cli
idiv
cli
arpl
test
fsubr
sti
sub
ja
xchg
sahf
cmps
repz
clc
lds
(bad)
rcr
(bad)
out
inc
aad
mov
cmp
nop
sar
gs
jl
fwait
loopne
xor
test
or
mov
inc
out
ins
cmps
scas
inc
mov
sub
xchg
fst
aaa
push
dec
ins
sub
scas
jmp
dec
(bad)
ret
sbb
ficom
je
or
ja
stc
test
aam
xchg
pop
or
mov
or
push
xor
inc
in
dec
mov
mov
addr16
inc
pusha
iret
mov
sub
loope
dec
jb
mov
xchg
popa
in
in
pop
in
test
push
shl
lods
adc
aam
cmp
in
and
mov
mov
js
out
scas
addr16
imul
jb
scas
inc
je
lods
mov
inc
cmp
cmps
das
xchg
sub
sub
dec
xor
add
mov
push
or
les
pop
ror
sbb
mov
(bad)
dec
ror
movs
xor
fsub
in
add
add
or
bnd
mov
lea
cmps
movs
xchg
or
or
xchg
sbb
mov
adc
retf
(bad)
bound
sbb
mov
mov
jle
cmp
push
aam
jns
mov
sub
mov
ins
adc
ja
jns
scas
ficomp
icebp
lock
sub
stc
jg
pop
sar
mov
jmp
push
or
mov
mov
(bad)
in
loope
jl
xchg
inc
out
adc
adc
aaa
out
dec
shl
imul
cmp
jecxz
cmp
xor
mov
add
mov
push
out
rcl
test
jg
aaa
xor
pop
inc
in
test
and
pop
loop
jb
adc
push
std
out
lods
imul
aas
dec
mov
add
push
jne
add
pop
pop
movs
or
ins
int
xor
out
cwde
mov
fwait
dec
mov
shl
jbe
pop
xchg
jle
pop
outs
inc
jmp
mov
movs
pop
idiv
popa
fldlg2
xchg
or
ja
aaa
cwde
rcl
mov
aas
call
pop
mov
arpl
mov
dec
adc
add
test
adc
cmp
out
fst
imul
aas
movs
into
push
mov
out
aad
test
sbb
arpl
sub
cmc
jnp
push
into
sbb
inc
jp
arpl
mov
nop
sub
cmc
into
push
(bad)
pop
fisub
jmp
jmp
and
mov
ret
mov
iret
xchg
mov
dec
imul
dec
pop
xchg
fwait
push
jbe
ret
fsubr
outs
cld
mov
mov
sbb
test
scas
mov
xor
ret
adc
icebp
enter
sbb
ins
pop
xchg
pop
cmp
pushf
sbb
stos
int
sub
or
ficom
int
pop
jae
es
adc
sbb
cmp
inc
adc
inc
cwde
dec
sub
xchg
dec
retw
sbb
clc
jle
les
pop
xlat
scas
sbb
jmp
addr16
test
push
pusha
(bad)
hlt
rol
add
mov
scas
inc
xlat
mov
adc
repnz
pop
dec
or
mov
repz
imul
push
adc
cmps
ret
dec
popa
add
out
inc
sbb
pop
cmp
stos
leave
or
xor
ins
add
sub
fst
pandn
jmp
inc
add
shr
ror
cmp
dec
(bad)
jmp
push
cld
dec
lds
int
push
sub
push
dec
ficomp
rol
(bad)
sbb
lods
(bad)
lea
ja
xor
movs
lock
and
lds
push
imul
jl
push
shl
mov
outs
inc
adc
sub
mov
call
pop
mov
sti
push
add
and
scas
fadd
jg
and
mov
cmp
sub
test
lea
(bad)
jbe
addr16
in
jb
xchg
imul
les
daa
into
(bad)
in
nop
push
mov
xchg
add
(bad)
jne
mov
fistp
mov
jo
cmc
sub
stc
cmp
sbb
jp
inc
and
cmps
mov
cmp
fnstsw
add
push
jp
stos
pop
dec
inc
in
lahf
add
ret
mov
es
and
mov
add
mov
loop
data16
stc
add
push
loopne
mov
mov
fwait
dec
(bad)
movs
test
icebp
out
adc
xor
mov
inc
lods
sbb
ffree
jns
pop
dec
xacquire
rol
xchg
fldcw
inc
fdiv
out
push
ret
jecxz
push
rcl
enter
shr
jmp
sub
xchg
out
jge
jle
jg
dec
idiv
jmp
dec
pop
aam
rol
mov
cmp
ss
mul
jge
jno
mov
dec
dec
test
mov
sub
cmps
mov
daa
jb
hlt
cmp
js
stc
pop
imul
retf
hlt
dec
dec
dec
jl
mov
je
inc
dec
inc
pop
lods
dec
jecxz
add
mov
inc
adc
std
out
ins
mov
adc
add
cld
sar
push
les
es
lock
rol
mov
scas
cmp
div
jb
and
nop
in
push
mov
sbb
(bad)
ror
fisubr
pusha
jl
sbb
inc
pop
iret
jge
jge
cmc
mov
mov
and
das
cmps
or
jge
push
popf
and
add
push
lds
ins
pop
push
je
mov
into
out
(bad)
dec
pushf
pop
mov
sub
xor
mov
add
pushf
sahf
mov
pop
jno
in
iret
sbb
xlat
arpl
and
sbb
adc
fld
xor
fstp
ficomp
pop
jp
enter
and
cmp
push
pop
mov
dec
push
outs
out
jb
sbb
fwait
pushf
pusha
fldenv
clc
inc
adc
arpl
xor
xor
push
push
add
jl
mov
and
sub
repz
call
pop
push
sbb
adc
and
cwde
fisubr
push
ins
out
cmp
pop
pop
ror
mov
push
test
icebp
ins
int3
ret
dec
push
in
sub
mov
pop
inc
shl
or
test
loopne
push
mov
inc
and
mul
inc
fsubr
sub
fist
iret
in
fimul
mov
in
push
xor
sbb
cwde
jbe
cmp
daa
push
sub
call
hlt
pop
inc
dec
add
icebp
dec
mov
or
mov
pop
push
jg
mov
das
sbb
cwde
inc
das
ficomp
cdq
js
sub
stc
mov
mov
push
fist
lods
dec
movs
in
and
and
add
sub
or
xor
xchg
and
addr16
xchg
fisub
cmovnp
mov
mov
sub
xchg
mov
cwde
in
call
jne
shl
xor
ror
lods
cmp
aaa
jle
hlt
cs
fdivrp
(bad)
fwait
mov
out
clc
movups
mov
stos
add
jp
mov
nop
jnp
iret
push
stc
mov
jle
hlt
ror
and
sbb
fadd
xchg
pop
push
dec
ds
lods
mov
jo
js
dec
cmps
cmps
inc
inc
push
xchg
xor
mov
or
(bad)
cmp
xor
sbb
imul
push
(bad)
out
ins
rcr
cmps
mov
(bad)
jle
mov
adc
rcl
adc
mov
or
adc
gs
cli
sbb
mov
fisub
push
shl
inc
clc
std
add
adc
mov
ins
arpl
(bad)
push
js
mov
data16
mov
dec
sub
ds
lds
sbb
dec
pop
outs
(bad)
mov
inc
and
pop
cmc
test
adc
xor
mov
dec
mov
inc
and
xor
aas
xchg
jle
call
ds
jg
sub
sbb
jne
dec
dec
std
dec
ret
xchg
xchg
xchg
jle
int
dec
xor
xchg
dec
mov
hlt
lock
xchg
push
adc
cmp
adc
scas
mov
jmp
shl
dec
or
int3
jns
mov
pop
imul
in
inc
jno
pop
push
aad
ja
jo
leave
xor
mov
inc
out
fbld
lea
inc
adc
outs
int
push
mov
movs
imul
cwde
outs
push
sub
xchg
cmp
stc
xor
adc
cs
(bad)
mov
dec
pop
shr
je
cmp
pop
sub
bound
xchg
fmul
push
push
fldenv
fcomp
push
out
mov
adc
loop
idiv
cmps
fstp
out
stos
ds
inc
out
sahf
ret
fwait
int3
adc
cwde
or
(bad)
cli
jne
push
fidivr
imul
pushf
dec
test
add
and
sub
add
int
mov
into
inc
push
lods
mov
ret
(bad)
cdq
out
add
arpl
movs
lds
icebp
mov
jns
imul
(bad)
fistp
aam
push
daa
loop
mov
pop
jo
mov
ror
jo
mov
jmp
or
cmp
xchg
lods
lea
push
mov
xchg
push
test
nop
push
test
sahf
fcom
and
loope
mov
scas
loop
inc
iret
dec
jl
fcmove
rcl
ret
(bad)
cmp
(bad)
mov
daa
cmp
lods
retf
push
sub
pop
or
mov
frstor
xchg
sbb
fdivrp
and
sbb
hlt
xor
jbe
jnp
xchg
mov
push
push
or
mov
jg
(bad)
ins
fiadd
dec
out
sub
xchg
lods
fisubr
push
jbe
clc
enter
sub
push
push
jns
jno
shr
pop
test
push
ds
add
mov
(bad)
sbb
inc
into
les
xchg
outs
mov
dec
cmp
cmp
retf
xor
xor
enter
fcomip
(bad)
in
cmp
scas
pop
and
jmp
mov
jne
ja
sbb
push
mov
lods
aas
jbe
rcl
adc
and
in
mov
xor
mov
dec
movs
add
jae
sti
pusha
in
push
inc
jge
adc
push
nop
push
mov
xchg
aad
push
mov
ds
icebp
jp
cld
push
addr16
ins
mov
sbb
std
loop
and
pushf
fild
push
or
adc
mov
retf
in
inc
retf
mov
je
fadd
dec
cmp
ds
shr
inc
popf
clc
enter
jmp
and
mov
aaa
repnz
in
lods
fdivr
hlt
aaa
iret
movs
push
scas
lds
mov
pop
and
inc
add
outs
add
sub
push
call
ja
ret
pusha
jl
mov
retf
fild
or
push
and
in
movs
sti
pusha
pusha
mov
xchg
xchg
pop
push
leave
dec
das
repz
aaa
scas
ret
mov
add
cmps
add
outs
mov
adc
fwait
(bad)
pop
pop
pop
mov
iret
push
ins
cs
imul
int3
mov
mov
out
ficomp
jmp
addr16
lahf
dec
sub
mov
push
inc
fdiv
stc
mov
retf
pop
sub
push
push
and
scas
les
clc
(bad)
(bad)
push
add
cmc
gs
inc
jecxz
mov
(bad)
jns
fidiv
push
xor
movs
mov
data16
add
test
int3
sub
mov
and
stos
sub
jb
das
adc
ins
cmp
loopne
sahf
retf
shr
pop
repnz
std
dec
leave
out
inc
push
mov
fsubr
push
pop
adc
pop
les
fmulp
pop
sbb
icebp
or
loop
lahf
(bad)
xlat
bound
xadd
xor
aam
xor
sbb
clc
jmp
call
ror
cmp
ins
xchg
or
jmp
fwait
adc
out
cld
fdivr
out
dec
and
jne
or
xor
inc
add
scas
sti
call
(bad)
(bad)
pushf
cmp
add
stos
push
mov
mov
dec
sahf
(bad)
pop
fadd
in
adc
cmp
inc
ror
icebp
dec
push
or
pop
xchg
fdivr
jae
int3
(bad)
jnp
bound
jg
add
dec
jge
xor
mov
imul
cmp
(bad)
rcl
cwde
test
int3
lds
rep
cs
push
cmp
gs
pop
(bad)
mov
sbb
dec
xchg
mov
lock
pop
mov
sbb
jl
popa
lea
adc
adc
cld
pop
dec
stos
dec
fwait
ja
mov
push
xchg
pop
inc
mov
cmps
cmp
rol
cld
shr
xchg
mov
or
add
ja
pop
sbb
lds
adc
fcom
mov
inc
cmc
dec
daa
cmp
or
cmp
fcom
inc
xchg
repz
test
mov
jp
(bad)
xlat
sub
sub
sub
les
ficom
xchg
sbb
sub
loopne
push
mov
aaa
inc
test
loope
arpl
ficom
mov
fs
or
xor
leave
mov
daa
mov
cmp
(bad)
push
cli
mov
gs
lea
jne
xchg
aas
dec
sahf
sti
push
pop
mov
je
inc
push
cmp
pop
inc
xlat
mov
mov
inc
nop
in
mov
mov
dec
rcl
lods
adc
fdivrp
pop
push
cwde
jo
fild
movs
or
jmp
aaa
and
or
test
sub
sub
jo
and
mov
scas
clc
xchg
push
xchg
fstp
or
mov
pop
fild
cmp
jmp
dec
or
sub
mov
mov
push
ja
push
dec
sbb
sbb
sbb
xor
shl
mov
and
or
mov
fldenv
and
mov
mov
out
pop
ins
sbb
push
push
mov
inc
bnd
addr16
adc
jg
mov
mov
jl
sub
sub
lds
fldenv
cwde
test
or
je
sub
aas
inc
sub
ror
lahf
dec
mov
push
sti
mov
jmp
sbb
jmp
scas
addr16
cs
dec
pop
out
icebp
sub
ret
jmp
cwde
into
or
sti
xchg
mov
xor
dec
ror
cmp
mov
movhps
adc
inc
cmc
rol
lods
cmp
in
shl
das
mov
out
imul
ja
in
out
or
cmc
loope
mov
int
mov
xor
mov
jnp
pop
ins
xchg
test
mov
jbe
mov
into
pusha
inc
(bad)
cmp
cmp
pop
popf
(bad)
sub
xor
xchg
ins
mov
lock
fwait
jns
inc
popf
xchg
push
aad
sti
mov
sub
outs
outs
push
loopne
push
push
test
shl
mov
jmp
in
inc
adc
push
xor
push
icebp
or
fimul
call
ror
dec
inc
popf
fnsave
cs
jne
imul
sub
push
psraw
(bad)
cmp
xrelease
cmp
js
mov
daa
scas
lods
gs
dec
sbb
jb
dec
and
push
ficomp
mov
inc
outs
stc
in
dec
bound
xchg
ins
and
(bad)
mov
int
aad
ins
xor
or
popf
icebp
pop
mov
lahf
popf
and
mov
xchg
sub
adc
shl
mov
retf
scas
inc
and
mov
adc
and
pop
outs
loopne
or
sbb
cmp
pop
add
retf
fidivr
shr
xor
(bad)
pop
adc
inc
inc
loope
sbb
add
adc
inc
addr16
call
mov
out
test
in
icebp
add
adc
retf
jmp
in
movs
(bad)
or
fnstcw
stos
pop
ins
jg
adc
add
out
and
ins
out
xchg
or
retf
pop
cmp
popf
pop
sub
mov
outs
aam
sbb
cdq
adc
mov
mov
cmp
ins
xor
adc
cmp
sar
sahf
jae
add
pop
push
aas
out
mov
xchg
ret
adc
out
test
(bad)
mov
dec
xchg
lds
mov
or
mov
ret
test
shl
and
outs
push
enter
dec
out
cmps
scas
cld
push
jle
mov
xchg
add
adc
push
adc
mov
(bad)
push
pop
in
ins
scas
jbe
bound
in
push
or
dec
pop
inc
sti
inc
adc
repz
push
xchg
and
gs
jo
ds
in
iret
lock
mov
mul
shl
inc
adc
adc
and
push
pop
sbb
pop
jae
or
sbb
or
int3
mov
push
jg
ror
push
or
stos
inc
inc
jo
xor
mov
loop
movs
xchg
in
test
inc
cmp
sub
jno
outs
inc
pusha
pop
gs
(bad)
jb
pop
mov
pop
fcomip
xchg
call
outs
mov
stos
scas
lds
fdivr
pop
dec
dec
pop
cmp
and
jbe
xchg
cmp
aaa
add
mov
inc
ins
mov
mov
mov
test
push
or
xchg
nop
and
mov
into
and
lock
cmp
mov
dec
cwde
(bad)
stc
rol
inc
cmp
mov
sub
retf
or
les
add
or
ja
(bad)
dec
das
dec
mov
hlt
xor
mov
das
add
jecxz
push
push
adc
mov
out
cli
xchg
(bad)
int
jl
mov
ret
aad
mov
push
jb
out
rcr
leave
shl
aaa
mov
into
ja
sub
mov
pop
(bad)
jne
mov
jne
jle
sbb
jl
fs
std
fwait
lock
xchg
push
ret
inc
(bad)
retf
or
push
push
jb
pop
cmp
jecxz
add
adc
std
and
mov
mov
lock
repz
inc
fidiv
add
sub
into
mul
jle
shr
push
mov
adc
jmp
in
cld
call
stos
(bad)
mov
xor
ins
sar
aas
mov
imul
push
es
aaa
stos
test
and
xchg
sub
mov
add
fisub
pop
xchg
and
shl
sub
and
pop
ins
aad
jbe
es
jmp
push
jbe
inc
or
mov
and
xor
call
pop
ret
xchg
mov
cmp
push
inc
shr
push
adc
repnz
cli
test
and
cdq
jbe
jp
inc
mov
cmp
lods
xchg
adc
mov
and
(bad)
cwde
data16
out
or
xor
jns
xchg
pusha
int3
mov
sbb
xchg
inc
jb
lods
mov
test
test
fstp
iret
cmp
jne
pop
in
pop
shl
add
lea
arpl
add
lds
test
sub
jge
out
scas
xor
xor
inc
je
jle
xor
mov
aam
cmps
lock
sub
jne
dec
or
push
ud2
call
loop
out
sub
fidiv
pop
pusha
fadd
xchg
fdivr
pop
mov
shl
xor
lods
push
lock
xchg
ds
leave
aaa
or
xor
je
xor
out
fisubr
movs
jno
shl
in
into
pop
push
enter
sbb
aam
mov
add
movs
push
dec
sbb
cmc
in
das
call
and
idiv
jmp
sbb
jno
pop
ins
mov
lea
cmp
jno
mov
xor
jmp
ja
aam
jb
xlat
jle
pop
fdivr
fisttp
push
push
rol
push
cmp
push
mov
jp
shl
out
xor
pusha
(bad)
mov
sub
in
fwait
iret
xor
pushf
cmp
fild
repnz
or
dec
and
add
ret
mov
mov
dec
call
retf
inc
mov
sahf
(bad)
cld
loopne
sub
sbb
fnsave
adc
enter
mov
xchg
cmps
mov
out
out
jno
test
and
xor
imul
pop
(bad)
scas
jmp
and
jle
mov
imul
push
mov
pop
sahf
in
and
mov
lahf
cwde
dec
dec
add
xor
(bad)
sar
dec
rcr
loopne
test
(bad)
mov
jns
or
jge
hlt
and
(bad)
lods
mov
and
cmp
adc
xlat
in
adc
dec
and
fwait
mov
dec
inc
pushf
cwde
fsubp
pop
aaa
adc
sub
(bad)
push
pop
arpl
mov
iret
push
sar
xchg
test
jns
das
psrlq
sub
pop
outs
es
in
es
aad
repnz
lea
jnp
test
cmps
mov
icebp
popf
imul
or
outs
pop
or
pop
push
xchg
jmp
jecxz
lods
xchg
js
and
and
repz
mov
nop
lahf
arpl
(bad)
aam
sbb
and
pop
xchg
loope
test
inc
xor
sbb
mov
jbe
push
aam
pop
or
aam
aad
mov
aaa
ins
sub
js
mov
es
cli
ret
hlt
aas
arpl
mov
fst
pop
or
pop
dec
lods
test
jbe
(bad)
mov
mov
mov
xchg
daa
mov
das
cmps
scas
popa
and
fnsave
(bad)
inc
or
out
sub
ja
ret
add
ins
rcl
test
xor
repz
test
into
out
jle
fwait
das
fnstenv
mov
lods
and
jno
xlat
popf
aaa
stos
loopne
dec
das
xchg
pop
cdq
xchg
out
or
or
sub
fs
test
xchg
lods
(bad)
ins
std
xchg
mov
retf
in
addr16
dec
fbstp
push
outs
mov
(bad)
jb
aas
ror
bound
js
dec
sbb
in
data16
ins
lds
inc
cmc
inc
add
js
mov
dec
(bad)
cmp
imul
jns
mov
and
ret
xchg
xor
test
repnz
fs
add
add
jb
push
jae
or
xchg
lock
aaa
adc
das
std
sbb
xchg
sub
sbb
fldenv
fwait
adc
pop
nop
in
loopne
mov
imul
(bad)
icebp
sbb
test
in
inc
ja
and
xor
xchg
mov
idiv
cmp
shl
push
cmps
rol
sub
je
add
out
mov
xor
jecxz
xor
aaa
push
xor
pop
(bad)
push
loopne
adc
sub
mov
dec
and
cmp
not
clc
imul
jno
dec
xchg
mov
jecxz
push
into
and
push
pop
sub
out
int
mov
xchg
or
sbb
(bad)
lgs
xchg
pop
outs
and
mov
jl
aad
cmp
adc
push
jecxz
icebp
std
mov
add
dec
out
or
rol
rcl
lea
mov
frstor
ds
pushf
loope
push
jae
xchg
out
sbb
call
push
repnz
cmps
lea
cmp
and
add
sub
mov
dec
and
mov
dec
pop
sub
pop
in
adc
gs
fistp
xchg
es
mov
outs
jbe
mov
aad
push
jle
addr16
xchg
xchg
xor
fwait
mov
pop
js
ret
pop
sub
cwde
xchg
(bad)
pop
out
mov
aad
icebp
stos
das
rcl
movs
mov
sub
mov
xchg
xor
sub
mov
inc
(bad)
xchg
xlat
ja
pop
mov
cmp
or
xchg
sahf
add
scas
loope
ins
psubsb
int3
or
sub
cmp
mul
push
mov
outs
jnp
imul
jno
fadd
adc
mul
mov
push
push
or
dec
jo
jbe
aaa
and
or
out
out
pushf
rcr
rol
xchg
and
mov
int
xchg
and
cmp
pop
sti
jnp
test
jno
pop
add
sti
movs
dec
enter
add
or
pop
cld
cli
mov
fs
dec
enter
test
cwde
sar
out
jp
push
lock
leave
xchg
sub
jle
xchg
inc
pop
pop
daa
fidivr
sbb
add
inc
loop
add
js
out
xor
sbb
push
aas
mov
fwait
mov
push
out
call
xchg
xchg
adc
mov
inc
cli
lea
js
nop
rol
fstp
dec
add
sbb
cmp
(bad)
dec
inc
stos
(bad)
(bad)
push
dec
cmp
call
inc
mov
inc
xor
out
stc
cmp
xor
xor
ja
push
int
test
cdq
dec
xor
xor
popa
xchg
in
mov
pop
enter
lock
out
adc
into
ins
inc
fdiv
ds
cmp
shr
pop
push
push
cdq
ins
pushf
and
push
jno
mov
(bad)
mov
loopne
repz
dec
retw
test
fcomp
scas
cli
aas
ins
dec
aad
cmp
xor
fwait
pop
sub
jmp
std
scas
mov
inc
add
mov
les
rcl
movs
push
addr16
pop
pop
fcmovnu
inc
jne
mov
mov
enter
jge
inc
sbb
mov
fwait
mov
jns
cmp
rcr
(bad)
retf
jge
or
lds
vphaddubw
sahf
lea
sbb
(bad)
in
inc
mov
inc
xchg
mov
xor
push
inc
xor
dec
dec
mov
xchg
push
in
hlt
push
sahf
into
xchg
mov
jmp
aam
jle
pop
dec
push
pop
call
clc
rol
adc
cmps
push
mov
cld
cld
xchg
xchg
mov
mov
inc
clc
lea
in
ins
jp
jnp
mov
xor
jle
maxps
mov
jle
sub
pop
or
loopne
sub
test
pop
jge
rcl
dec
cs
add
mov
dec
mov
scas
in
and
xor
xor
cmp
xor
add
push
outs
jns
ins
imul
lahf
adc
jbe
push
mov
cmc
adc
test
push
push
repz
stos
popa
add
adc
push
not
mov
mov
cmp
stos
cmp
push
jecxz
mov
inc
cmc
fsubr
cmp
or
pusha
jl
les
ins
dec
stos
xchg
outs
adc
daa
psubq
imul
imul
aam
jbe
sbb
cmps
dec
inc
mov
push
pop
mov
imul
jmp
iret
lock
test
shl
pop
sub
ss
jg
xchg
lods
xor
xor
jae
retf
dec
and
out
xchg
adc
mov
jp
jmp
mov
retf
imul
jmp
mov
ror
and
push
(bad)
sbb
rol
and
es
hlt
fadd
sbb
push
fld
jg
mov
mov
aad
out
jbe
lock
cmp
je
loopne
cmp
cmps
inc
lea
(bad)
cld
(bad)
mov
inc
sbb
push
int3
clc
sbb
ret
(bad)
push
push
sbb
or
inc
(bad)
cmp
rcl
lea
pop
out
fisttp
enter
call
mov
hlt
xor
pop
std
push
imul
xlat
jge
cmc
cmc
xchg
es
mov
pop
pusha
in
imul
lods
iret
mov
inc
lahf
std
xchg
inc
(bad)
stc
in
(bad)
push
jmp
aam
call
jp
lock
mov
mul
cld
ss
aaa
and
shr
ds
jne
mov
repz
scas
mov
push
push
shl
icebp
or
fwait
movs
outs
test
mov
pop
inc
aam
call
test
ja
xor
mov
sbb
js
shl
push
ret
popa
ss
or
mov
lods
jb
cmp
push
mov
std
pusha
inc
repz
push
in
add
loopne
sub
mov
mov
cld
cmps
(bad)
cld
out
aad
dec
xchg
or
and
dec
mov
retf
jae
dec
and
jb
xchg
pusha
add
dec
xchg
inc
mov
call
pop
sub
adc
retf
jo
imul
or
hlt
or
sub
jnp
loopne
fs
popa
mov
lock
popa
cmp
das
mov
rol
xchg
bound
scas
lea
outs
add
mov
cmp
enter
inc
push
pop
call
(bad)
mov
xchg
mov
cmc
ins
mov
adc
cld
test
in
pop
mov
lds
dec
call
xor
nop
data16
sub
data16
cmp
cmc
daa
and
imul
mov
pusha
(bad)
inc
mov
xchg
(bad)
mov
pop
mov
ins
fs
mov
mov
shr
ret
jno
outs
popa
out
mov
sar
and
add
and
push
loopne
sub
xchg
pusha
cs
sbb
loop
pop
stc
popa
repz
imul
repnz
jmp
pop
push
retf
daa
mov
ret
popf
cmp
scas
adc
add
loopne
mov
jl
pusha
aas
int3
sbb
pop
cmc
jle
fs
std
cmps
leave
and
clc
mov
push
add
out
fisttp
bound
dec
ret
inc
mov
adc
ds
frstor
cmps
mov
out
and
into
dec
pop
dec
cld
ror
loope
dec
adc
or
sahf
ret
leave
sub
adc
pop
add
adc
addr16
fwait
das
push
ins
jnp
mov
imul
cmp
mov
cmps
lahf
retf
sub
scas
outs
mov
imul
movs
hlt
cmps
aaa
mov
daa
sbb
mov
lea
aam
push
add
add
sub
dec
fxch
fstp
fdivr
daa
sbb
dec
daa
mov
push
cdq
aaa
fwait
xchg
sub
mov
adc
ins
sub
sub
dec
imul
ins
daa
adc
push
loopne
and
dec
cmp
icebp
les
hlt
call
test
sbb
lods
stos
cmp
sub
pop
hlt
add
iret
in
cmp
jg
call
stc
xchg
dec
lea
icebp
mov
leave
dec
add
int
mov
scas
inc
pop
leave
test
clc
ins
xchg
xor
mov
rcl
call
jg
dec
jge
xor
dec
test
fild
sbb
imul
jge
add
pop
mov
sbb
int
inc
inc
jle
sub
mov
or
arpl
xchg
sub
jle
fmul
xor
fcomp
pop
push
loop
mov
leave
push
sbb
outs
xchg
jmp
fstp
lock
test
retf
push
iret
js
out
lea
ret
sbb
pop
lods
in
and
fmul
pop
push
xchg
adc
inc
into
out
(bad)
pushf
retf
push
adc
movs
lds
jb
adc
jne
test
shl
mov
retf
jmp
and
ret
cmp
pusha
dec
out
test
or
pop
div
mov
add
dec
cmp
aas
les
jmp
dec
aaa
sbb
cld
aas
ins
and
adc
ss
int3
mov
or
(bad)
mov
cmp
(bad)
mov
mov
in
xor
aas
lea
jo
(bad)
in
fcom
rol
pop
fwait
mov
sub
loop
lock
and
in
push
and
leave
ror
popa
(bad)
bound
and
push
pop
addr16
test
add
sbb
into
jg
mov
movs
out
pushf
jo
icebp
ja
retf
sahf
ss
dec
or
popa
in
ds
jmp
pop
mov
out
cwde
add
pop
call
cmp
fild
mov
xor
push
sbb
jle
lods
icebp
pop
shl
fwait
lea
dec
xlat
jae
and
je
lock
js
xchg
jl
mov
das
shr
je
sub
(bad)
xchg
mov
or
loope
js
xor
es
jno
cld
and
mov
ja
inc
sbb
ficom
push
icebp
(bad)
cli
into
mov
rcr
dec
dec
sbb
fild
(bad)
syscall
loop
test
jo
jne
sub
cld
imul
ds
not
out
in
mul
xor
aas
push
call
fld
pop
push
stos
xor
int
das
or
rcl
sub
mov
into
xor
in
stos
cmps
(bad)
fs
jnp
fwait
cwde
daa
lahf
pop
les
imul
pop
enter
mov
add
and
or
pop
pop
sbb
mov
shr
fild
outs
or
dec
mov
pop
adc
out
ins
mov
jmp
or
mov
repz
xor
jns
stos
sahf
icebp
and
xor
lea
dec
shr
cli
dec
cmp
inc
test
(bad)
jo
inc
int3
bound
pop
push
sbb
add
or
fwait
out
sahf
call
push
call
iret
mov
jns
xchg
sbb
test
in
dec
dec
test
lahf
arpl
test
les
or
cmps
ins
cmc
movs
push
ins
in
mov
pop
pop
mov
call
mov
enter
ret
call
adc
lahf
dec
inc
push
pop
pop
sub
shl
push
mov
add
xchg
adc
jo
out
pop
mov
add
sub
ret
push
jp
jb
push
sub
out
xor
pop
xchg
pop
sub
push
(bad)
and
clc
nop
mov
xchg
jp
(bad)
bnd
and
frstor
loop
or
mov
adc
cmc
cwde
jb
push
adc
mov
or
in
(bad)
mov
addr16
leave
das
adc
rol
fs
mov
dec
push
mov
ds
mov
mov
aaa
clc
jb
mov
ins
pop
xchg
dec
in
lock
dec
xchg
cli
xchg
sbb
lods
mov
out
sub
mov
mov
iret
call
adc
imul
int
cmp
sbb
pusha
(bad)
stos
xchg
mov
lods
loopne
fwait
sar
dec
xchg
mov
jae
jne
add
cmps
cwde
pop
and
mul
movs
ds
cmp
cmp
lock
mov
repz
sub
popf
(bad)
loopne
rol
inc
cmp
and
sbb
je
cwde
xchg
jmp
jnp
addr16
pop
add
pop
sbb
dec
iret
pop
sub
jg
in
ficom
shl
jecxz
mov
jp
dec
inc
push
mov
adc
mov
ss
add
cmp
ror
in
aas
outs
(bad)
stos
xchg
aad
mov
icebp
sti
mov
and
push
xor
mov
clc
add
sbb
fisubr
test
hlt
test
ret
adc
addr16
imul
imul
pop
sub
or
ds
test
outs
xor
scas
add
pop
fwait
dec
jp
mov
ja
jno
sar
sub
sar
push
cmps
rcr
fcomp
or
push
adc
xor
retf
inc
aas
jl
cmp
jno
stc
push
ins
sbb
mov
mov
mov
mov
std
fnstcw
or
xchg
leave
(bad)
xchg
test
xlat
scas
mov
cld
pop
add
fiadd
bnd
inc
test
dec
inc
sbb
inc
pop
ss
push
pushf
jns
data16
fwait
xor
mov
(bad)
jne
jnp
and
jle
push
pop
(bad)
retf
stos
inc
sbb
add
arpl
and
jp
sti
xlat
loop
xchg
xor
cld
sbb
into
dec
adc
out
sbb
(bad)
retf
xor
mov
mov
std
jge
add
adc
rcr
cmp
into
cld
in
movs
lahf
test
rcl
fisttp
lahf
(bad)
sbb
add
mov
inc
cmp
adc
push
dec
mov
sbb
pop
ret
fdiv
sub
jb
jbe
lds
fistp
dec
cmc
call
pop
shl
icebp
into
push
mov
jp
pop
mov
in
fild
popa
and
dec
retf
inc
cmc
xor
fld
cli
or
push
out
dec
pusha
add
push
jne
add
fwait
push
jp
dec
ror
and
mov
cdq
add
arpl
dec
arpl
push
sbb
fadd
ret
mov
cvtpi2ps
push
sti
popa
or
sub
inc
add
fucomi
adc
mov
jb
pop
leave
aaa
jnp
test
jnp
push
out
adc
mov
push
mov
ror
jl
aam
push
loopne
sub
lds
sahf
pushf
xchg
push
mov
stos
mov
or
scas
call
xor
sbb
jecxz
or
leave
aad
or
in
sub
mov
mov
clc
shl
cdq
push
mov
inc
out
popf
dec
sub
stc
push
call
xor
inc
jle
rol
adc
arpl
add
sahf
popa
and
fild
mov
sti
xchg
dec
or
(bad)
adc
aad
leave
xchg
imul
ret
push
xchg
imul
push
jo
push
or
pop
add
dec
mov
aad
push
pop
mov
lahf
jo
cmp
jmp
iret
sbb
mov
(bad)
mov
pop
imul
inc
mov
(bad)
sbb
mov
int
mov
mov
mov
jo
cwde
(bad)
div
pop
mov
adc
or
loope
jo
movs
out
call
inc
das
jmp
std
adc
sbb
mov
xchg
inc
xor
arpl
inc
(bad)
cmovbe
ror
je
loop
rcr
fwait
add
or
repnz
data16
sbb
stos
lds
ss
imul
cmp
jns
xchg
push
and
pop
es
lods
out
movs
or
cs
jae
xchg
push
push
dec
sub
xor
rcr
popa
push
push
mov
push
(bad)
sbb
ins
jno
inc
jb
or
lds
xor
push
gs
sub
cmp
and
ins
arpl
outs
xlat
leave
outs
outs
or
jns
jmp
in
sbb
or
cmps
xchg
add
mov
pop
jg
mov
jg
and
xchg
jne
sub
and
mov
outs
pop
xchg
movs
pushf
fsubr
cmps
mov
ja
shr
pop
jb
mov
add
or
fbld
and
out
or
dec
dec
xchg
xchg
addr16
es
test
jns
jb
ins
adc
xor
inc
mul
push
xchg
push
or
mov
call
xlat
loope
mov
sbb
xor
jge
ins
aas
jbe
lahf
jno
bound
scas
ds
push
push
push
add
jle
aad
mov
(bad)
loopne
je
bound
rcr
add
lock
sbb
(bad)
ins
fidiv
cmc
test
sub
cmps
iret
retf
and
mov
sub
or
(bad)
push
repnz
mov
or
in
aam
loop
into
retf
pop
mov
and
js
pop
adc
inc
xchg
fsubr
cmc
ret
not
stos
sub
mov
push
mov
repz
and
sub
jne
cmp
and
xlat
xor
cmc
call
xchg
mov
pop
jne
inc
in
pop
fldenv
cmp
in
and
repz
xlat
sbb
into
or
(bad)
les
(bad)
cmp
sbb
mov
inc
mov
call
adc
in
loopne
test
mov
jg
das
sub
out
repz
iret
mov
cmps
dec
das
cli
pusha
inc
mov
xchg
in
aam
xchg
imul
jno
call
fisub
jae
pusha
mov
jecxz
aaa
and
mul
and
in
sahf
cdq
and
cmp
or
dec
push
mov
and
inc
sti
pop
mov
loope
mov
cdq
ss
cwde
xchg
adc
mov
fistp
push
jo
cdq
shl
or
sbb
jbe
push
or
push
sti
imul
nop
movs
sbb
inc
adc
xor
xchg
call
jno
ret
mov
mov
jae
cld
int3
jge
or
adc
jecxz
out
mov
inc
imul
inc
mov
es
jle
(bad)
icebp
inc
lds
or
jne
data16
sahf
outs
frstor
inc
pop
je
sbb
(bad)
(bad)
stos
xchg
xor
jne
loope
inc
sub
sbb
ss
sub
add
mov
hlt
iret
out
stos
add
jl
cs
cmp
rol
fst
mov
push
dec
pushf
mov
lods
gs
pop
retf
or
shl
mov
mov
ret
fwait
sub
fcomp
inc
fidivr
adc
in
dec
mov
cmp
(bad)
aam
shl
mov
mov
std
adc
xor
jo
xor
push
aaa
outs
xchg
pop
fimul
fwait
dec
repz
add
ins
into
fldcw
xor
in
jle
dec
pop
in
sbb
dec
pushf
dec
ins
add
dec
fcom
or
ret
outs
(bad)
adc
shl
mov
mov
cmp
xor
out
aad
retf
jb
xchg
movs
jecxz
lods
ds
aad
out
add
push
push
ret
in
(bad)
add
mov
sub
dec
sbb
sub
fild
sbb
aad
mov
mov
push
adc
ret
mov
fld
mov
ds
mov
aaa
xchg
aaa
mov
push
cli
movs
pop
xor
pop
adc
iret
push
xchg
shl
sub
pop
pusha
popa
mov
jge
or
add
and
sbb
gs
inc
jae
sub
pop
cmp
xchg
stc
(bad)
stos
int3
jmp
pop
mul
jo
repnz
out
mov
or
lods
lods
inc
sbb
jp
mov
(bad)
retf
into
push
cmp
pop
inc
cmp
cmp
(bad)
inc
popf
inc
and
in
loope
call
sbb
xor
lahf
dec
mov
stc
fs
push
sti
push
movs
aam
pop
(bad)
mov
dec
dec
pushw
jne
pop
cwde
or
xchg
cmp
dec
and
rcl
sbb
xchg
outs
mov
int3
in
mov
fstp
mov
mov
stc
or
into
or
sar
dec
or
(bad)
lods
adc
and
out
jmp
adc
fs
and
div
dec
enter
jl
or
sub
adc
push
xchg
popf
lods
sub
rcr
push
lock
scas
push
xor
jns
mov
xchg
mov
je
shr
(bad)
xor
pop
(bad)
mov
and
or
mov
jmp
push
fidiv
or
sets
icebp
sbb
inc
adc
fdivr
mov
shr
xchg
mov
inc
loopne
sub
lods
retf
lock
inc
leave
sbb
pop
sbb
mov
mov
pop
cmc
mov
cli
icebp
test
shl
push
mov
inc
push
jge
xor
mov
retf
push
xchg
lods
sti
in
mov
sbb
xchg
xchg
sub
mov
pop
xchg
rcl
mov
data16
test
push
jmp
aas
pop
xchg
fdivr
jl
ficom
pop
add
or
movs
mov
cmp
jl
mov
and
lods
cmp
cld
cld
pop
sbb
in
stos
fwait
mov
push
aam
sbb
xor
movs
scas
outs
fwait
push
int3
xchg
jge
mov
mov
aas
adc
fwait
sub
mov
sub
jno
pop
or
popa
(bad)
cmp
cli
xor
xor
les
call
xchg
add
dec
jmp
jnp
popfw
push
mov
mov
iret
mov
cmps
scas
mov
ss
mov
xor
repnz
mov
mov
xlat
outs
(bad)
clc
leave
and
test
sbb
jb
dec
push
(bad)
mov
or
mov
lea
fld
cwde
xor
jbe
and
fidivr
aas
call
inc
enter
aad
mov
out
les
leave
rcl
mov
jb
es
iret
xchg
shr
lods
test
push
dec
test
mov
dec
xor
hlt
mov
and
xchg
aad
(bad)
pop
daa
test
stc
add
in
xor
cmc
inc
cmps
(bad)
aas
mov
div
fsub
loopne
js
ss
in
cli
dec
pop
cli
cmp
mov
cmp
test
adc
data16
jo
arpl
test
cmp
ins
add
pop
jno
imul
push
jne
lock
push
(bad)
out
dec
enter
and
fild
mov
pusha
je
adc
sub
sub
js
sti
(bad)
lahf
jae
dec
mov
pusha
rcr
or
cdq
cmp
lods
sub
mov
lock
dec
or
jmp
mov
xchg
ret
sti
cmp
test
nop
pop
pop
out
ss
lock
call
cmp
out
out
pop
jne
sub
xchg
inc
sub
hlt
inc
xor
xor
daa
in
fdivr
hlt
loop
mov
shl
cmp
jge
sub
cld
add
pop
imul
scas
mov
scas
sbb
outs
clc
ss
std
lds
xor
sub
imul
mov
adc
push
dec
shl
out
cmp
out
jmp
dec
stos
outs
scas
movs
dec
mov
xchg
retf
mov
sub
dec
mov
sti
test
dec
cmc
push
(bad)
add
loope
cld
mov
popf
cdq
dec
xchg
pop
inc
dec
fld
jp
jle
ins
dec
fst
mov
lea
fisub
mov
adc
inc
jmp
lea
pop
pop
in
push
cmp
add
jb
jp
cmp
imul
mov
stc
push
mov
inc
call
jp
cdq
cli
popa
push
neg
pop
out
mov
pushf
xor
add
out
bound
les
outs
ss
call
push
adc
hlt
retf
aas
fsubr
mov
dec
xchg
adc
sub
mov
sbb
push
(bad)
aad
adc
mov
je
pop
sub
push
or
mov
movs
dec
sbb
jbe
jnp
dec
sbb
cwde
mov
ds
jmp
inc
(bad)
xchg
fistp
loop
sti
dec
cwde
retf
call
push
jge
popa
jbe
cmp
add
inc
pop
test
fwait
jb
adc
jne
mov
inc
dec
outs
aas
jae
shl
sbb
xor
jne
add
test
sti
repz
sub
in
mov
js
sub
(bad)
pop
dec
fbld
test
adc
cli
mov
iret
adc
in
cmps
mov
imul
push
jmp
sti
xchg
addr16
ins
pop
iret
bnd
push
ds
pop
je
test
(bad)
and
pop
and
xchg
addr16
add
in
mov
pop
cld
popa
jnp
pop
pop
stc
push
loopne
outs
scas
push
and
clc
push
addr16
mov
imul
retf
dec
enter
fidivr
sahf
jno
loope
cmp
mov
xchg
xchg
ins
test
cmp
mov
xor
jb
cmp
push
inc
mov
dec
xchg
and
xor
xchg
lock
cdq
sbb
iret
iret
es
imul
retf
shr
jl
repz
scas
inc
pop
neg
mov
xchg
movs
xor
xchg
dec
lock
loope
jb
test
jae
dec
movs
cwde
sbb
sbb
jecxz
cmp
push
push
iret
sbb
sbb
xchg
fisub
sbb
mov
or
sub
sbb
inc
rol
dec
in
cmp
push
add
fnstenv
sti
jmp
adc
mov
hlt
popf
mov
jb
sub
dec
mov
inc
fwait
sbb
jl
les
add
sbb
lods
jbe
cmp
xor
popf
xchg
mov
sbb
jne
xor
rol
dec
adc
fisub
cli
mov
leave
jae
retf
cmps
outs
out
mov
jae
push
or
pop
pop
mov
ficom
dec
mov
push
sahf
inc
adc
pop
test
clc
mov
fidiv
popa
cmp
test
fbstp
inc
inc
test
test
loop
shl
inc
mov
dec
loop
sbb
xchg
inc
mov
fst
dec
scas
ins
or
cmp
mov
movs
push
mov
retf
xchg
add
pop
imul
loope
gs
adc
cmp
clc
inc
out
pop
scas
jmp
xchg
pop
mov
dec
sbb
fisttp
adc
mov
clc
test
or
fdiv
sbb
mov
lea
push
ds
jge
push
in
jnp
lods
and
inc
repz
jne
push
mov
inc
in
dec
xor
add
loop
addr16
and
sub
mov
in
push
jno
cli
shr
pusha
dec
adc
repz
mov
in
cwde
call
dec
mov
push
cmc
cdq
jb
call
and
or
mov
inc
push
cmp
push
pop
pop
and
and
(bad)
pop
push
pop
cmp
das
fdiv
mov
imul
sub
cwde
mov
jns
inc
jmp
imul
call
in
pop
pop
hlt
out
xlat
jnp
xchg
sbb
call
mov
pusha
sub
push
pop
fimul
adc
or
jno
(bad)
dec
leave
push
cmp
mov
and
cdq
(bad)
adc
ja
iret
cmp
pop
in
lods
add
loope
sub
aad
mov
mov
mov
adc
add
imul
pop
sub
mov
(bad)
push
dec
and
pushf
ret
mov
xchg
jecxz
and
ret
mov
(bad)
stc
aad
loope
xchg
fbstp
pop
out
pop
or
(bad)
stos
ins
and
pop
xchg
jp
jl
adc
out
or
mov
and
sahf
dec
pop
mov
fidivr
sti
xor
(bad)
push
pop
dec
pop
imul
rcl
jb
dec
test
xchg
sbb
(bad)
mov
(bad)
imul
aam
xor
jge
or
iret
pop
pop
push
shl
pop
pop
adc
dec
mov
inc
lar
dec
int3
jg
hlt
cmp
cmp
nop
inc
add
sub
cmps
mov
stos
adc
test
inc
jnp
or
cld
mov
idiv
je
jnp
shl
jl
add
mov
or
loopne
out
sbb
mov
out
inc
cld
(bad)
cdq
out
inc
enter
pop
push
push
xlat
call
mov
fadd
jae
xchg
out
ins
outs
fild
test
sbb
push
retf
stc
sar
(bad)
mov
inc
sub
xor
jmp
cdq
jae
jo
cmp
or
rcl
cmp
xchg
(bad)
push
aam
stos
and
jns
jecxz
xchg
int3
add
mov
push
cmp
and
pop
call
pop
sub
imul
out
dec
in
es
xlat
cmp
jecxz
outs
out
xor
push
lods
loop
loopne
lea
mov
pop
sbb
(bad)
mov
mov
outs
movs
pminub
cli
nop
jne
lods
frstor
rol
pop
pop
(bad)
mov
neg
sti
ret
(bad)
into
mov
sub
pushf
xor
lock
lods
sahf
pop
dec
sub
cs
adc
cmp
bound
std
and
pop
mov
mov
add
cli
mov
or
xchg
cwde
pop
icebp
dec
fcomp
pushf
mov
xlat
pop
addr16
push
repnz
out
das
xchg
je
pop
xchg
push
mov
pop
cmp
xchg
movs
(bad)
jb
push
dec
pushf
scas
test
mov
jo
nop
sub
js
push
mov
xor
call
jge
mov
xor
cmps
retf
push
mov
or
icebp
shl
push
bnd
lea
in
call
imul
(bad)
jmp
outs
sub
iret
loope
ror
fwait
adc
and
iret
jmp
dec
ins
daa
cmp
cwde
push
add
sbb
into
xor
imul
shl
dec
mov
inc
mov
iret
rcr
(bad)
nop
inc
and
imul
mov
adc
jecxz
pop
in
retf
loop
jns
retf
sub
aad
xor
rcr
fadd
shl
xchg
loop
mov
test
mov
shr
je
cmp
jmp
mov
adc
add
movs
(bad)
rcr
jne
and
int
test
mov
ins
or
jnp
add
pop
lea
scas
mov
jo
retf
mov
or
pop
jle
mov
inc
inc
or
fwait
inc
dec
cdq
lock
lods
into
dec
ins
jne
dec
xchg
retf
jmp
mov
jbe
or
hlt
pop
call
hlt
fs
fdivr
fisub
(bad)
or
push
xor
pop
mov
mov
sub
mov
xchg
mov
stos
cmps
movs
add
call
imul
xchg
shl
sub
mul
(bad)
sbb
and
sub
xor
xchg
ds
and
xlat
push
mov
loopne
pop
push
addr16
data16
xor
fst
inc
aas
mov
cmp
inc
dec
jge
cmp
ret
sub
add
jmp
loope
pop
push
sbb
ins
push
por
xchg
cwde
(bad)
mov
out
ins
xor
mov
add
ja
adc
ja
popf
pop
push
into
ds
mov
mov
mov
je
in
xchg
fst
pop
mov
fdiv
into
mov
daa
add
(bad)
push
stos
pop
or
out
in
push
or
sub
xchg
mov
(bad)
iret
or
aaa
in
and
jns
or
sub
sbb
ficomp
sbb
nop
nop
jmp
adc
jns
inc
out
mov
bound
movs
cs
scas
sbb
or
xchg
adc
jno
add
jnp
stos
(bad)
and
call
mov
inc
jl
mov
or
dec
ret
test
jl
inc
(bad)
push
es
ret
mov
cdq
xor
mov
fst
arpl
shl
dec
mul
out
popf
fild
mov
ja
pop
xchg
jmp
and
pusha
in
mov
aad
adc
jns
pusha
aam
movs
xchg
shl
dec
mov
stc
rcl
jne
pop
rcl
or
pop
sbb
fidiv
inc
mov
ds
sti
cmp
jb
(bad)
push
out
data16
pop
stc
mov
push
inc
or
pushf
out
jl
push
test
ja
cmp
repz
call
pop
add
aad
call
pop
add
cmp
shr
cmp
pop
adc
xchg
es
out
sar
and
ins
inc
sub
jo
bswap
xchg
xchg
dec
xchg
leave
vmwrite
enter
jmp
push
and
inc
add
test
pop
sbb
xor
cld
cmps
lahf
mov
add
sub
adc
pop
push
pop
pop
xchg
xor
push
es
test
daa
push
repz
fisub
mov
loop
push
pop
popa
sbb
and
pop
jmp
mov
and
cmc
mov
xor
movs
xor
bound
push
jp
pop
out
cmp
lds
js
and
xchg
cwde
inc
xor
xchg
cmp
jg
xchg
pop
mov
and
mov
(bad)
lahf
dec
mov
ret
pushf
scas
or
mov
les
(bad)
or
mov
jmp
inc
cmps
jnp
bound
out
cmp
jb
pop
nop
adc
in
test
in
icebp
div
add
mov
retf
bound
xor
lds
sti
leave
fldcw
stc
(bad)
(bad)
not
nop
sahf
push
inc
retf
add
stos
xor
jo
pop
(bad)
stc
fild
pop
cmp
lock
push
sbb
xor
sbb
(bad)
cmc
cmc
or
cli
(bad)
idiv
mov
cmp
daa
mov
div
aaa
sub
push
inc
mov
(bad)
movs
cmps
mov
push
enter
mov
add
dec
xor
dec
push
lds
ins
dec
aam
sbb
nop
push
cmp
push
in
aad
loop
mov
pop
dec
in
xor
mov
mov
(bad)
fcomip
iret
cli
(bad)
(bad)
push
xchg
fstp
cwde
inc
mov
das
xchg
or
pop
sahf
(bad)
stos
sub
test
in
xor
out
aaa
inc
mov
adc
clc
adc
and
inc
xlat
enter
mov
test
push
pop
retf
cmp
shl
add
or
je
movs
inc
jp
out
loope
sub
pop
arpl
jecxz
mov
and
cmp
jns
pop
pop
push
leave
xchg
and
xchg
sar
adc
mov
cs
cmp
pop
inc
push
xor
test
inc
mov
mov
adc
scas
xchg
add
call
cs
jle
sbb
out
cwde
test
jl
lods
add
cmp
sbb
xchg
aaa
xchg
retf
or
jae
je
dec
or
mov
jge
fldenv
addr16
mov
and
push
movlps
xor
fs
into
jl
lock
jg
sbb
xor
dec
sub
sti
test
fwait
xor
mov
pop
js
lock
lock
pop
call
loope
sbb
add
or
int
mov
(bad)
sbb
push
mov
sbb
add
not
cdq
jns
cmp
pop
(bad)
add
pop
adc
(bad)
pop
je
scas
ss
jo
xchg
xor
push
xlat
mov
movs
fwait
icebp
cli
call
hlt
cld
xor
fisubr
dec
cmp
into
dec
daa
clc
cld
sbb
cdq
pop
sar
aas
add
dec
sbb
add
pusha
jnp
(bad)
sti
or
cmp
mov
int3
mov
dec
dec
inc
sub
nop
aad
xchg
mov
jmp
xchg
pusha
stos
ss
push
aas
push
(bad)
in
aaa
pop
xor
push
add
jno
push
pushf
in
ins
(bad)
fmul
retf
jno
out
pop
retf
imul
mov
jo
pop
xor
and
mov
mov
xchg
jp
sbb
cmp
test
add
es
push
sub
test
div
jmp
ja
(bad)
push
imul
out
jbe
and
clc
(bad)
sahf
shl
stos
das
ficom
sub
inc
ror
loop
movs
xor
jne
out
add
addr16
call
push
adc
outs
popa
rcl
cmp
mov
mov
cmp
gs
add
test
add
xor
cdq
aaa
pop
sub
jno
in
adc
(bad)
out
repnz
neg
(bad)
aas
shl
pop
icebp
push
push
in
xchg
push
pusha
push
shr
icebp
add
fild
adc
cmp
cmp
push
sub
mov
cmp
jnp
cli
call
adc
repz
or
push
jmp
mov
xchg
push
(bad)
leave
sbb
push
scas
pop
xor
movs
js
repz
ins
scas
sbb
mov
mov
cdq
add
cmp
ror
pop
cmp
lods
push
jae
mov
fist
out
and
inc
fdivr
leave
aad
mov
in
cmp
movs
or
mov
(bad)
in
sub
or
mov
(bad)
scas
cmc
mov
mov
inc
cmp
scas
mov
mov
fimul
push
sbb
adc
imul
fld
or
in
add
cld
and
ror
call
adc
addr16
dec
fild
ficom
out
(bad)
mov
imul
pop
xchg
mov
xchg
inc
pop
add
mov
stos
cdq
xor
fiadd
cmps
fs
bound
test
sub
adc
jbe
push
cs
retf
ins
xchg
jge
mov
jb
call
add
adc
dec
int3
aaa
pop
sbb
inc
adc
pop
or
dec
sbb
vaddpd
mov
xchg
xchg
aam
in
leave
mov
gs
inc
inc
xchg
jbe
pop
outs
das
shl
dec
call
inc
or
aas
lods
mov
xchg
rol
inc
adc
addr16
aaa
rcr
pop
outs
and
pop
(bad)
aaa
jae
dec
in
icebp
mov
aas
sbb
push
pop
jns
push
mov
push
dec
sbb
pop
sbb
outs
inc
push
mov
mov
popa
bound
and
popw
mov
pop
jo
push
inc
shl
clc
inc
icebp
sub
lea
(bad)
test
int3
push
cmps
jns
dec
pop
stos
pushf
sub
add
dec
outs
inc
out
out
out
leave
sub
push
sub
std
adc
sub
leave
sbb
daa
std
or
mov
(bad)
(bad)
or
cmps
dec
push
pop
loop
enter
cdq
or
adc
pop
arpl
jle
xor
scas
xor
xor
stos
mov
mov
enter
je
mov
cdq
push
(bad)
sbb
hlt
je
shl
cmps
cmc
mov
mov
stos
jmp
aam
sub
clc
ins
int3
or
mov
jge
ret
sub
lahf
outs
xor
test
adc
sbb
pop
outs
xchg
mov
sub
cmps
xchg
and
stos
push
inc
sub
xchg
adc
cwde
or
sub
pop
or
and
fwait
mov
mov
into
xchg
mov
sbb
cmp
cmps
add
pop
scas
js
out
call
das
repnz
in
sub
fdiv
scas
lods
stc
xchg
fiadd
cmp
lods
dec
leave
cmp
test
pop
pop
pop
in
imul
pop
add
dec
and
nop
push
dec
cmp
push
push
in
cmc
push
mov
out
sbb
add
sti
jl
pop
mov
sub
and
xlat
jl
std
loopne
pop
sbb
neg
js
les
pop
fisub
jp
mov
enter
int3
into
sahf
sbb
(bad)
cs
mov
add
push
mov
xor
stc
into
inc
sub
mov
stc
lods
push
sbb
cld
jp
and
push
cmp
gs
shl
das
lock
data16
loope
pop
ss
into
mov
icebp
mov
sub
(bad)
repnz
jb
gs
dec
mul
xor
shr
cmp
inc
scas
out
les
fisubr
mov
es
add
test
into
mov
add
mov
(bad)
push
push
cli
push
or
jae
ins
sub
cli
inc
(bad)
out
repnz
scas
jp
pop
push
cmp
and
inc
sub
repnz
ret
test
imul
xor
mov
fwait
iret
mov
lahf
push
mov
add
ret
add
cmc
or
ds
daa
sbb
dec
sbb
stos
inc
clc
push
sbb
clc
ret
jl
jecxz
inc
data16
or
fs
and
adc
pop
cld
lods
loope
adc
dec
or
jno
pop
int
loope
in
test
leave
retf
cmc
dec
dec
sbb
imul
adc
call
test
or
or
adc
and
scas
mov
inc
or
xor
dec
dec
popf
or
or
jp
pop
inc
pop
xor
mov
sbb
sbb
aas
ins
lea
shl
xchg
pop
pop
sahf
aam
mov
rcr
test
stos
aad
pop
ror
inc
inc
(bad)
cli
int
dec
cld
add
hlt
imul
sub
dec
inc
mov
es
test
cdq
push
daa
int3
loopne
ins
add
push
dec
out
(bad)
xor
cmps
rcl
outs
cmp
inc
shr
xchg
je
mov
push
sub
adc
adc
push
xor
jnp
repnz
sbb
fs
cmp
cs
xchg
lods
out
push
pop
fwait
data16
scas
sar
rcl
jmp
cmpxchg
aam
(bad)
not
cdq
scas
fs
iret
(bad)
shl
inc
jo
or
sbb
mov
push
cmp
inc
into
cmp
cmp
jmp
leave
push
dec
in
mov
sub
fwait
push
dec
xor
or
rcl
xor
mov
mov
imul
popa
add
mov
mov
popa
cmps
movs
mov
loope
arpl
lock
adc
and
adc
and
pop
sub
hlt
ss
popf
int
js
cmp
stc
call
sar
xchg
ja
aam
xor
mov
mov
pop
jbe
sub
pop
xchg
cmc
and
out
fild
push
clc
nop
xchg
sbb
dec
call
sbb
test
sub
dec
test
pop
sahf
jecxz
adc
in
jae
sbb
sar
lods
mov
movs
ja
stos
mov
cmc
dec
sbb
jno
pop
mov
mov
cmp
xor
in
adc
jl
push
sub
pushf
xchg
fisubr
pop
push
ret
mov
inc
sub
jl
sub
lahf
inc
pusha
or
shl
sbb
sub
mov
cmps
add
out
shl
lahf
arpl
or
ds
mov
dec
mov
bound
inc
nop
sub
je
fadd
enter
adc
adc
or
mov
in
imul
test
xchg
popa
loop
in
fs
jmp
das
dec
dec
fwait
lods
jp
(bad)
in
xchg
mov
mov
stc
pop
mov
das
push
fimul
fs
sub
ins
mov
or
fs
repnz
movs
fiadd
sub
lock
cmp
add
cwd
fst
xchg
fadd
and
xchg
dec
jmp
inc
rol
outs
hlt
inc
sub
fisttp
lods
out
inc
mov
mov
addr16
gs
dec
bound
inc
mov
cmp
pop
test
addr16
fdiv
mov
mov
and
and
jmp
sbb
dec
cmp
push
(bad)
push
movs
in
push
scas
xor
jnp
add
data16
dec
xchg
or
pop
fimul
jecxz
mov
mul
neg
cmps
push
mov
lea
sbb
fiadd
stos
pop
cmp
es
mov
inc
add
mov
scas
cmp
mov
movs
repnz
cdq
cmps
dec
lahf
add
test
adc
jae
std
adc
lea
and
push
adc
int
or
sub
and
cmc
inc
lea
inc
xchg
cld
push
mul
push
mov
dec
cld
jmp
(bad)
sub
jp
or
mov
sub
nop
icebp
lock
cmc
imul
inc
adc
jl
or
fcom
fmul
cmps
mov
adc
(bad)
cmps
jo
lods
movs
mov
mov
call
jnp
pop
jb
jae
repz
xchg
xchg
jno
pop
add
mov
cld
inc
fld
xchg
es
cmps
push
dec
sub
and
test
push
and
xchg
cmp
pop
retf
mov
(bad)
inc
xlat
pop
fisub
movs
call
xor
xor
sub
int3
cdq
add
(bad)
imul
stc
fist
enter
push
(bad)
mov
sub
into
fsubr
jmp
push
push
inc
jl
push
aaa
cmp
lock
sub
cmps
sub
out
int
cs
jne
xlat
inc
sbb
nop
xlat
mov
clc
clc
push
test
pushf
and
add
inc
ror
jne
mov
pushf
inc
sub
mov
mov
cmps
imul
adc
and
push
test
icebp
(bad)
pop
sub
mov
adc
cmp
jno
xor
test
mov
push
call
and
push
imul
cmp
add
pop
pop
lods
add
jns
jmp
mov
push
test
fdiv
adc
jl
nop
int3
lahf
pop
jns
fisttp
int
inc
movs
push
repz
(bad)
out
fprem
fcom
aad
push
call
push
inc
sbb
sti
sub
fimul
pusha
ds
dec
test
pop
rcl
inc
jns
retf
xchg
adc
or
sbb
push
or
pop
lods
jne
xor
out
data16
and
pop
movs
mov
jne
mov
or
bound
xchg
push
pop
pop
and
sbb
es
xchg
jle
test
push
fistp
dec
addr16
rcr
xor
jmp
sub
ins
add
jne
push
adc
ss
inc
mov
xor
hlt
in
inc
cmps
xor
pop
mov
outs
adc
or
sahf
lods
inc
call
add
aad
test
data16
sbb
inc
(bad)
cmp
mov
in
add
(bad)
adc
iret
out
ret
in
mov
push
or
fsubr
cdq
icebp
xor
push
fistp
stos
in
sbb
je
sub
sub
push
and
fidiv
adc
retf
dec
pop
cmp
push
ret
or
mov
jmp
daa
pusha
pop
ja
cmp
sub
jno
and
push
cmps
dec
fsubr
or
pop
add
loopne
jbe
jmp
sub
pop
add
adc
fsubr
cmp
sbb
sub
cmp
popa
aas
jmp
or
ror
cmp
or
mov
mov
jl
out
mov
sbb
dec
pop
push
call
das
ds
jecxz
xchg
push
sbb
ins
pop
mov
js
push
icebp
adc
sti
aaa
cmp
into
call
retf
out
shl
adc
pusha
(bad)
and
add
mov
mov
sub
jle
mov
xor
mov
pop
jb
pushf
pop
dec
or
out
mov
and
cmps
(bad)
and
fwait
sbb
fstp
std
rol
dec
cmps
mov
xor
ja
sub
idiv
mov
mov
sub
sbb
jg
xchg
xchg
call
mov
mov
popf
(bad)
(bad)
std
rol
ss
jmp
or
fucom
push
nop
add
inc
fsubrp
sub
shl
push
inc
or
mov
sub
sub
addr16
cmc
je
call
xchg
ret
lock
cli
shr
(bad)
data16
xor
lea
xchg
mov
cwde
lahf
jae
je
mov
je
xor
xchg
daa
ror
sar
scas
and
push
jb
mov
mov
lea
cs
sbb
je
das
(bad)
aad
cmp
and
into
into
scas
arpl
call
inc
lea
push
jecxz
pop
or
mov
or
sub
neg
lods
test
mov
xor
popf
stos
cmp
aas
jbe
arpl
ins
test
jp
mov
sub
pop
ret
rcr
mov
int
aaa
sti
and
fidivr
pop
pushf
into
iret
nop
into
loope
mov
push
mov
out
sub
test
push
inc
mov
retf
cmc
test
cmps
in
add
sahf
inc
mov
mov
jle
mov
push
or
adc
mov
imul
mov
inc
xchg
scas
leave
test
daa
jp
inc
bound
inc
mov
sar
and
mov
ins
aaa
pusha
dec
imul
xor
ds
fsubr
add
or
sbb
sbb
and
or
xor
mov
pop
pop
sub
xchg
rol
jecxz
inc
mov
mov
inc
ins
fld
cmps
adc
cmp
or
sbb
jbe
das
stos
mov
jbe
(bad)
aas
xor
sub
(bad)
push
or
mov
push
push
sub
jno
inc
mov
xchg
push
div
mov
rcl
sub
mov
add
sar
cmp
adc
arpl
mov
retf
cmp
(bad)
in
sbb
imul
jo
inc
loopne
inc
jnp
inc
sbb
xchg
into
dec
ja
and
mov
adc
int3
cmp
hlt
push
(bad)
cs
xchg
test
add
js
mov
and
outs
pop
xor
and
xchg
sbb
fdecstp
leave
mov
jg
mov
xchg
ins
fiadd
xchg
xchg
cdq
mov
xchg
mov
mov
repnz
fdiv
inc
ret
aas
xchg
daa
xchg
pop
jg
jge
push
sub
dec
cmc
imul
test
rol
add
(bad)
cmp
fldenv
sbb
pushf
icebp
push
out
sar
dec
pop
mov
ret
sbb
nop
sbb
pusha
pop
mov
add
jnp
repnz
xchg
(bad)
lods
in
inc
ss
add
ins
repnz
or
jge
push
lock
sub
cwde
jmp
push
and
ja
js
sub
nop
scas
jge
loopne
add
in
lea
xor
in
mov
neg
mov
or
pop
add
stos
inc
test
not
mov
xor
cmovle
fldenv
fmulp
cmc
pop
int3
mov
push
add
dec
in
or
mov
inc
je
fisub
call
hlt
aaa
sbb
pop
das
(bad)
stc
add
mov
push
jmp
outs
popf
mov
mov
push
xchg
sbb
mov
and
pop
push
jo
mov
adc
mov
test
push
adc
out
div
sbb
dec
inc
dec
retf
jns
pop
or
pop
cmp
repz
scas
ret
jge
and
xchg
or
addr16
cmp
xchg
dec
cmp
add
aam
cmps
mov
fst
jle
push
aaa
jg
and
push
add
push
ja
in
or
jnp
xor
sub
leave
loope
and
xor
in
or
out
(bad)
test
push
dec
aam
push
scas
and
dec
in
cmp
add
frstor
push
push
push
lods
mov
push
sbb
call
into
int
sub
add
mov
jb
test
jl
pop
adc
es
ins
in
push
movs
mov
dec
repz
rcr
xor
call
scas
imul
add
rol
xchg
outs
(bad)
loopne
shl
test
fdiv
pop
mov
pop
repnz
jnp
test
push
pop
iret
ret
pusha
fs
(bad)
or
neg
rol
push
mov
call
mov
int3
push
mov
mov
jne
jl
xchg
jl
fsubp
mov
sar
test
mov
push
mov
jae
imul
jmp
dec
(bad)
inc
jl
arpl
loop
sub
rol
add
ror
fldenv
sbb
and
add
bound
xchg
mov
add
jle
sbb
inc
outs
lds
and
lods
dec
leave
pusha
ret
enter
outs
xchg
repz
dec
pop
daa
pusha
sbb
adc
sar
inc
and
aam
ret
and
stos
mov
lea
pop
inc
cwde
cli
or
jecxz
fmul
ror
in
mov
test
enter
popf
inc
out
xchg
cmc
mov
inc
adc
(bad)
dec
fwait
pushf
(bad)
jmp
dec
pop
out
dec
sahf
mov
push
lea
lods
cmp
in
cwde
xchg
xor
fistp
push
aas
mov
jns
xor
xor
adc
vcvtsi2ss
jne
sub
xchg
jb
xchg
or
xor
loope
cmps
or
loopne
dec
jle
mov
push
mov
lahf
lods
lods
cmp
stc
pop
inc
pop
fidivr
add
push
pop
movs
xchg
pop
xchg
inc
jp
mov
ja
leave
cmp
push
jne
sar
mov
sbb
cwde
inc
pop
mov
inc
je
call
jp
pop
int
jno
or
mov
arpl
mov
jbe
jecxz
jge
in
sahf
dec
aas
out
mov
mov
fnsave
inc
mov
push
shl
jmp
mov
(bad)
fistp
cld
int3
jmp
mov
aad
sub
or
xchg
ins
icebp
out
mov
retf
adc
sub
movs
mov
xchg
call
lock
fstp
int3
sub
jp
dec
inc
out
sbb
ins
add
jnp
inc
push
test
pop
out
(bad)
aad
test
jecxz
lds
fisubr
dec
pop
jne
mov
push
adc
cld
nop
mov
daa
dec
push
fidiv
iret
out
pop
xchg
mov
fiadd
out
jmp
repnz
mov
add
cdq
push
push
sti
repnz
jmp
leave
ret
pop
jae
jg
loope
popa
add
pop
sub
pop
in
pop
mov
lods
imul
imul
pop
mov
popf
xor
adc
jbe
cmc
fimul
int
dec
adc
hlt
fsubr
pop
lds
loop
pop
fld
mov
js
push
popa
cdq
xchg
add
stos
dec
stos
mov
out
mov
xlat
out
dec
sbb
ins
loop
into
sti
pusha
outs
test
jns
jge
xor
cmp
leave
jle
dec
pop
not
imul
jne
outs
rcl
aam
loopne
cdq
xchg
jmp
test
xor
mov
cli
js
pop
add
push
mov
cs
(bad)
xor
div
pushf
div
or
push
loop
cmp
inc
test
adc
imul
iret
mov
pop
sub
cmc
not
push
add
xor
dec
clc
dec
inc
adc
push
push
(bad)
iret
push
add
dec
call
push
(bad)
mov
push
(bad)
xchg
fisubr
mov
loop
out
or
inc
ss
mov
jp
xor
icebp
mov
pop
jmp
into
xchg
pop
cmp
shr
sbb
fistp
jmp
js
hlt
ss
push
cmp
(bad)
enter
sahf
pop
xchg
adc
std
sub
sub
push
pop
ins
cmp
mov
leave
or
and
push
lea
add
inc
leave
sub
cli
or
mov
push
pushf
or
gs
dec
adc
inc
cmp
push
inc
dec
pop
int
jl
and
jle
sbb
stos
cmp
mov
pop
(bad)
lea
outs
pop
cmp
dec
sub
nop
push
ss
stc
les
gs
sbb
and
jns
jl
ret
out
mov
ins
mov
jo
out
sbb
call
int3
mov
adc
mov
xchg
mov
and
jecxz
call
add
pop
mov
jmp
movs
ins
fdivr
scas
sub
xchg
sbb
sar
adc
leave
jae
out
pop
ins
repnz
push
jle
xor
mov
mov
push
imul
je
pusha
push
inc
addr16
cmc
or
pop
mov
xor
pop
dec
push
mov
inc
mov
aam
inc
adc
int
and
add
jae
adc
jae
popf
adc
outs
sub
enter
jbe
test
xchg
or
sti
jns
inc
pop
cmp
sbb
xor
test
pop
outs
sub
jns
int
adc
jp
sbb
lods
xchg
in
popf
popf
sub
scas
test
push
in
mov
and
push
fmul
clc
sbb
lds
sub
popa
sti
pop
movs
pop
dec
out
jno
mov
push
enter
xchg
mov
jno
dec
int3
pop
shr
pushf
push
call
mov
mov
mov
pop
mov
add
shl
stos
pause
in
(bad)
data16
cld
mov
add
sbb
cs
(bad)
jnp
mov
mov
add
aaa
retf
cld
sbb
aad
push
push
dec
repz
xor
clc
pop
xor
in
icebp
es
out
mov
clc
daa
add
and
sub
xchg
out
push
cwde
icebp
pop
ss
(bad)
dec
adc
xor
or
xchg
les
test
inc
psubusb
xor
or
sub
jbe
inc
add
fisttp
adc
dec
out
xlat
test
jge
push
and
inc
mov
dec
int3
loopne
loopne
mov
aaa
adc
in
das
aaa
push
jmp
sahf
sub
inc
nop
pop
or
lds
cmp
mov
jo
call
jnp
retf
cdq
into
(bad)
leave
push
outs
xchg
or
pop
das
inc
mov
push
jns
mov
hlt
and
push
inc
arpl
adc
xchg
pop
inc
jae
add
jge
mov
adc
or
or
fs
pop
jo
inc
inc
out
stos
mov
or
stos
jnp
cmp
pop
xor
mov
mov
inc
mov
xchg
addr16
aad
dec
mov
mov
jge
push
sub
rcl
jecxz
mul
pop
call
pop
pushf
pop
stc
and
out
push
(bad)
push
add
es
iret
mov
pop
mov
add
push
cmps
pop
jecxz
push
dec
add
mov
repnz
mov
adc
fild
icebp
std
xlat
cmp
or
jbe
icebp
das
or
dec
test
cmps
or
pushf
push
ss
gs
mov
push
cwde
xchg
adc
inc
mov
outs
mov
sub
lods
cmp
sub
cdq
(bad)
sbb
loop
in
dec
(bad)
dec
mov
cwde
sbb
adc
enter
mov
test
ja
les
in
(bad)
pop
sub
mov
adc
cli
out
daa
leave
in
xor
jp
cmps
nop
add
add
jae
iret
or
sbb
icebp
scas
scas
enter
loope
(bad)
sub
and
push
push
ins
ffree
imul
pop
push
fimul
lock
js
cmp
jnp
mov
outs
(bad)
sub
xor
iret
iret
push
xor
icebp
inc
loop
jge
int
cld
jmp
aam
repnz
add
pause
cmp
loop
(bad)
fldlg2
push
shl
sbb
int3
mov
cmc
shr
daa
jo
cmps
xchg
xlat
enter
jp
push
or
js
je
(bad)
shr
mov
stc
rcl
sub
adc
fs
outs
push
loopne
les
xchg
push
push
cli
sub
ud2
(bad)
movs
out
test
and
pop
(bad)
push
pushf
cdq
es
xchg
mov
dec
inc
adc
lods
ret
sbb
fmul
push
adc
je
cmps
lds
retf
mov
(bad)
(bad)
stc
fidiv
stc
sbb
xchg
mov
fldenv
sahf
repnz
xchg
mov
add
ror
inc
add
shl
push
or
mul
xchg
sbb
jae
xlat
sub
cmps
shr
movs
mov
dec
les
neg
pop
(bad)
dec
jle
dec
mov
inc
pop
sbb
sub
mul
cld
jmp
sbb
add
pop
pop
cmp
stos
pop
xchg
mov
aas
(bad)
jo
push
int
mov
mov
add
jns
pop
lahf
lock
jae
sbb
ret
dec
jno
movs
add
pushf
stos
mov
enter
test
inc
push
ins
inc
sbb
scas
cs
or
retf
sub
adc
rcl
jns
imul
call
jecxz
lea
inc
mov
sub
sahf
cmp
push
cmps
pop
std
pop
jo
call
les
mov
stos
mov
cmp
icebp
and
sbb
push
sbb
aas
std
jns
lods
push
or
popf
push
inc
icebp
popf
ficom
cmp
mov
cli
lahf
jns
adc
out
sub
popf
or
ret
lods
or
xor
out
ret
jmp
data16
jp
mov
pop
mov
add
mov
or
test
jnp
dec
daa
push
vmovshdup
popf
call
cmp
mov
int
lahf
or
add
mov
and
lock
inc
daa
leave
fisttp
loop
int
leave
xchg
cwde
jg
mov
adc
xchg
loope
enter
loopne
lds
or
push
xchg
das
popf
arpl
adc
sbb
cs
sub
movs
ins
push
adc
sbb
mov
mov
add
int3
inc
push
scas
cmc
or
and
dec
not
adc
or
imul
sbb
adc
mov
out
mov
fabs
dec
push
bnd
jbe
(bad)
shl
inc
outs
add
fwait
jne
mov
nop
xor
jle
sbb
fs
and
and
int
or
push
xchg
lea
or
pop
sbb
stos
sbb
sbb
add
in
aas
inc
inc
ror
cmc
xor
add
push
sbb
nop
or
out
push
sbb
push
ret
out
mov
cwde
inc
cmps
retf
xchg
xchg
(bad)
cli
push
imul
xchg
retf
div
rol
or
sbb
ja
call
je
cli
fs
sbb
iret
sub
add
(bad)
mov
sbb
shl
outs
dec
pop
arpl
and
loop
pop
xchg
out
sbb
jo
call
rcl
call
ror
das
test
sbb
arpl
mov
push
iret
xchg
cmp
loopne
shl
mov
push
lods
xchg
test
xor
ret
add
mov
loope
loop
xchg
loope
jns
sti
lods
div
popa
xlat
mov
xchg
mov
test
and
cmc
ins
jns
xlat
mov
inc
fidivr
cmp
test
add
cmp
mov
mov
cmp
movs
xor
fimul
push
sub
mov
mov
cwde
test
lods
adc
push
mov
je
ins
push
push
sti
dec
adc
mov
enter
cld
mov
pop
xchg
leave
jno
mov
fimul
mov
mov
retf
xchg
fst
imul
fld
inc
ret
mov
cmps
sub
lea
ins
retf
mov
je
das
loope
imul
enter
lock
pop
inc
pop
sub
adc
test
stos
adc
out
adc
(bad)
adc
je
cmp
shl
push
and
mov
call
push
(bad)
out
fmul
les
sbb
sahf
movs
mov
mov
mov
adc
cmps
jp
push
mov
xor
xchg
xchg
aam
and
add
gs
xor
rol
cmp
jg
pop
mov
aad
ss
fstp
leave
int
mov
not
repnz
jae
or
in
out
leave
xor
mov
fcomp
(bad)
cmp
adc
fisub
add
jg
lods
add
clc
retf
test
(bad)
fs
sbb
inc
test
xor
scas
push
and
int3
into
pushf
test
ret
fs
test
cld
jecxz
fs
ja
sub
dec
pop
(bad)
and
test
out
mov
adc
sub
xlat
mov
vpaddq
sbb
inc
add
dec
fs
cmp
and
push
cwde
xor
shr
dec
call
mov
loope
mov
push
cmc
pop
fild
(bad)
or
add
mov
and
lods
imul
imul
call
mov
aas
dec
mov
sub
daa
movs
inc
test
(bad)
jnp
out
pusha
xchg
sub
pop
in
adc
and
sti
mov
pushf
aad
mov
jp
inc
mov
push
into
sbb
jmp
test
mov
or
movs
loope
mov
jno
test
rol
fdiv
or
(bad)
inc
jmp
mov
adc
arpl
cmps
mov
leave
cmp
mov
mov
test
dec
mov
fistp
adc
cmp
mov
(bad)
ins
test
push
mov
adc
pop
sbb
fcmovb
pop
dec
adc
into
les
mov
into
retf
and
push
xor
cmp
pop
xchg
xchg
and
mov
sub
psubd
ret
add
int
push
imul
data16
scas
dec
pusha
std
ror
push
mov
inc
xchg
out
addr16
xchg
xor
add
lea
(bad)
jl
bound
lea
dec
inc
test
xchg
or
lock
ja
sub
in
cwde
mov
mov
mov
scas
loopne
adc
pop
lea
shr
inc
das
dec
inc
inc
test
sub
lods
jo
sbb
cmps
adc
inc
inc
ss
cmps
(bad)
fs
fild
enter
xchg
lock
push
imul
push
out
pushf
aam
fild
mov
or
out
(bad)
xchg
add
dec
jl
fistp
push
cmp
and
add
(bad)
jle
inc
(bad)
loopne
cwde
push
push
js
dec
ret
push
data16
mov
jbe
mov
jns
sbb
push
inc
lock
lahf
cmps
push
fisub
push
sub
inc
lods
pushf
dec
outs
adc
xabort
addr16
repnz
xchg
mov
ds
sahf
or
movs
cmp
movs
add
cmp
into
cmp
inc
jnp
(bad)
(bad)
into
jae
jmp
outs
sbb
and
icebp
cmp
jmp
xchg
cmp
out
cmp
lock
(bad)
jbe
pushf
and
ss
push
xchg
and
leave
jnp
test
jns
cmps
cmps
jecxz
add
sbb
xchg
mov
aad
sbb
jb
cmps
xor
rol
cmp
js
cdq
mov
or
std
ins
cld
sub
call
shl
inc
dec
into
imul
and
pop
or
repnz
loope
pop
ja
addr16
add
add
enter
push
add
push
out
lods
test
test
or
mov
mov
out
repnz
dec
or
jne
mov
(bad)
xchg
or
mov
push
pop
loopne
(bad)
lds
ss
jg
mov
data16
es
push
inc
(bad)
rol
cmps
xchg
pop
or
sbb
or
add
sbb
xchg
push
outs
jp
fldcw
xlat
repnz
adc
inc
adc
and
jo
repnz
xchg
xchg
lds
mov
adc
ins
in
in
dec
push
sbb
push
xor
push
in
or
inc
jb
jmp
fisttp
(bad)
aam
xchg
das
jne
and
mov
fcomp
jmp
cld
cmp
or
and
inc
dec
clc
xor
scas
jp
(bad)
ins
mov
xor
push
int
in
push
leave
sbb
(bad)
jb
cmps
push
mov
xor
nop
inc
rcr
(bad)
imul
inc
icebp
loopne
push
(bad)
sbb
ins
fst
jno
in
cwde
imul
mov
stos
test
mov
pop
test
lods
mov
dec
mul
pop
icebp
shl
ss
daa
mov
retf
stc
mov
pusha
stc
lds
(bad)
cmps
repnz
cdq
cmp
add
(bad)
imul
jmp
and
mov
inc
rcr
dec
test
mov
xchg
neg
add
out
xchg
fiadd
dec
fwait
inc
jnp
xchg
fs
jne
mov
and
movs
mov
repnz
test
sbb
and
int3
inc
aaa
aad
cmps
cmp
mov
mov
addr16
scas
mov
jle
in
dec
push
mov
das
test
push
pop
test
das
retf
repz
mov
xchg
nop
out
xlat
jno
sti
and
pop
pop
jecxz
push
add
push
retf
cmp
retf
fld
ins
out
loope
mov
mov
sar
fcom
mov
aaa
xchg
rol
pop
scas
xor
push
xlat
push
sbb
cmp
or
add
sub
or
retf
les
sub
ins
sub
aas
jp
xchg
test
cmps
pop
ja
loop
out
lods
or
test
push
add
pop
jo
mov
aam
pop
mov
mov
jae
popf
and
xchg
aas
mov
mov
xchg
pop
fdivr
fcom
pop
rcr
xchg
adc
and
sub
mov
mov
call
xor
push
repz
push
add
(bad)
cmps
xchg
sti
out
in
push
inc
dec
adc
call
and
push
loop
jb
dec
pushf
xor
mov
and
and
jmp
jno
mov
mov
cld
loope
sahf
mov
xor
pop
into
cmps
jge
outs
repz
cmp
push
inc
cld
xchg
sbb
(bad)
loopne
push
and
mov
jmp
or
in
sti
psllq
dec
retf
xchg
test
sbb
rol
(bad)
call
inc
xchg
jnp
mov
scas
inc
fstp
mov
xchg
sbb
fistp
xchg
test
or
es
xor
enter
cmp
and
call
ret
xlat
jb
or
out
ficom
sahf
mov
int3
aas
xchg
scas
push
rcr
inc
xchg
ins
(bad)
mov
inc
ja
adc
bound
xchg
add
inc
xchg
sub
dec
lock
push
inc
call
or
lods
imul
xor
out
rcr
lods
test
cmp
fsub
clc
lods
in
xor
push
xor
xor
clc
lods
pop
jmp
mov
loopne
pop
mov
data16
clc
xchg
sahf
inc
das
stc
xchg
ret
jp
sbb
mov
xchg
int
jle
leave
lea
pushf
mov
imul
inc
or
cmps
test
pop
addr16
add
rol
jecxz
(bad)
in
push
push
test
mov
push
cmps
push
imul
cmc
dec
repnz
adc
sub
pushf
xor
mov
(bad)
(bad)
mov
xor
shl
fsubr
(bad)
repz
js
push
fwait
in
mov
pop
retf
xchg
mov
mov
push
mov
scas
mov
shl
(bad)
dec
mov
xchg
dec
(bad)
fs
inc
inc
ds
popa
cwde
cld
cmp
fcomp
imul
cmc
lods
dec
shr
pop
pushf
mov
fimul
push
imul
sti
push
sbb
dec
out
or
and
push
sti
(bad)
nop
bound
mov
inc
ins
or
(bad)
jb
push
fwait
cwde
movs
cwde
xchg
das
mov
jno
jl
dec
les
and
mov
or
or
push
xor
pop
xor
retf
jne
cld
vmptrld
sar
mov
test
add
mov
xchg
jmp
ret
push
out
pop
punpckhdq
push
ds
(bad)
push
xchg
cli
pop
test
push
sahf
dec
push
cli
movs
add
pop
add
outs
js
add
call
lods
mov
in
cmp
ds
icebp
jne
adc
ja
js
sub
sub
mov
or
cmp
mov
add
mov
pop
rol
mov
inc
mov
cmps
push
cmp
cmp
jp
mov
out
test
mov
loopne
mov
es
sub
dec
adc
add
push
arpl
xor
call
mov
dec
sub
int
add
cdq
adc
sbb
mov
and
and
mov
gs
and
daa
xchg
sub
or
pushf
mov
test
mov
adc
xor
pop
fdivr
rol
les
mov
into
out
pop
rcl
in
mov
mov
add
popa
ret
out
sbb
dec
push
in
pop
mov
and
dec
(bad)
test
iret
adc
sub
retf
pop
mov
push
test
jge
xchg
les
mov
popf
stos
xchg
rcl
ss
push
loopne
cwde
mov
jbe
pushf
movs
pop
mov
(bad)
xchg
aam
adc
pop
ja
cmp
adc
xchg
inc
js
lock
jb
jp
dec
and
and
add
adc
xchg
jecxz
daa
into
in
das
mov
pop
aas
sbb
aad
test
aad
push
sbb
fld
gs
sub
or
pop
jge
shr
sbb
cmp
add
movs
fcmovu
push
or
jecxz
mov
in
add
push
iret
and
lds
ret
fwait
retf
push
pop
fwait
stos
push
pop
inc
out
inc
int
and
or
sbb
pop
xchg
in
stos
jle
ret
push
repz
mov
or
repz
repz
aas
cmp
out
push
mov
aad
mov
imul
inc
shl
jnp
into
in
mov
cmp
fs
in
out
loope
ins
fdiv
loope
or
cmc
leave
and
dec
stc
es
out
mov
mov
sbb
loope
mov
xchg
add
adc
call
daa
out
pop
repz
and
xor
div
pop
mov
pop
(bad)
cli
lock
sbb
(bad)
stos
idiv
xchg
test
jnp
fiadd
fiadd
mov
push
(bad)
mov
push
loope
adc
outs
movs
cmp
jl
sbb
or
xor
xlat
add
out
inc
mov
mov
dec
xchg
call
push
mov
out
xchg
xchg
je
in
add
xor
push
rol
lahf
daa
mov
dec
sbb
xchg
add
loope
jmp
dec
push
test
mov
repz
mov
ins
mov
(bad)
es
retf
mov
pusha
pushf
lock
push
lock
jb
xor
cmp
xchg
ret
aad
or
or
test
aad
push
mov
mov
push
test
xchg
dec
cs
outs
jns
iret
inc
mov
or
lods
aaa
int
cmp
sbb
jns
jp
dec
sub
mov
sbb
bound
xor
cmp
sbb
nop
pop
inc
imul
fwait
das
dec
cli
push
add
loopne
fadd
nop
test
in
sub
pop
dec
adc
dec
popf
fwait
jecxz
les
stos
mov
jmp
pop
push
iret
cld
mov
(bad)
mov
(bad)
cld
pushf
sub
cmp
jg
and
xchg
mov
cmp
cmp
mov
adc
or
ja
mov
jo
lock
pop
cmps
(bad)
jmp
je
aaa
call
test
bound
fwait
ins
cmps
dec
cld
test
pushf
sub
mov
in
and
es
and
adc
scas
rcl
call
push
mov
xor
cdq
mov
mov
mov
inc
mov
jg
mov
xchg
jmp
mov
or
jecxz
mov
mov
lods
cmp
push
jb
aad
push
aad
repnz
push
cmps
lods
fisubr
dec
hlt
mov
in
scas
xchg
lock
loop
popa
scas
pop
xchg
sti
fcom
leave
fwait
cmp
scas
fldcw
push
pop
sbb
std
loope
nop
leave
cmp
and
jmp
add
jae
(bad)
push
mov
push
or
into
outs
xchg
loop
rcl
cmp
pop
fadd
and
and
dec
add
jns
and
and
clc
ret
and
data16
test
shl
or
std
ret
push
clc
mov
ret
xchg
test
in
mov
stos
arpl
push
dec
imul
sbb
out
push
push
mov
jge
in
jae
push
cmc
xor
loopne
js
mov
jbe
icebp
scas
addr16
stc
out
mov
mov
xchg
sub
out
xchg
push
jecxz
out
adc
ins
add
pop
fs
test
imul
cmp
cmp
cmp
shr
add
adc
out
mov
jg
aam
jecxz
ret
test
mov
add
aad
or
arpl
ds
fprem1
enter
sbb
loopne
fstp
frstor
xchg
mov
jecxz
outs
mov
mov
jl
enter
mov
retf
stc
rcr
cmp
cmp
ror
or
add
cwde
cmc
dec
pop
leave
push
push
repz
cmp
out
xchg
aam
xor
inc
aad
pop
shr
cdq
dec
add
iret
out
bound
xchg
pop
sub
and
fs
cmp
jmp
jns
les
(bad)
inc
fstp
mov
dec
mov
fcom
rol
test
(bad)
lock
xchg
xor
loop
(bad)
adc
into
mov
pop
and
pusha
arpl
pop
test
dec
nop
xchg
adc
shr
add
(bad)
cwde
or
outs
(bad)
jmp
lahf
jp
(bad)
fsub
xor
inc
inc
and
sbb
mov
mov
ds
retf
mov
mov
mov
add
ret
and
outs
out
scas
outs
mov
mov
sbb
adc
dec
mov
sar
jle
jno
or
mov
retf
xchg
mov
jg
mov
sti
out
imul
dec
dec
movups
sub
cmc
push
dec
mov
call
les
idiv
sbb
mov
rcr
aad
sub
inc
mov
push
add
addr16
pop
rol
pop
aad
and
not
(bad)
pop
adc
ret
jae
mov
jmp
(bad)
and
jmp
call
addr16
pop
jmp
push
into
adc
push
gs
jle
pop
sbb
mov
push
and
das
mov
push
or
mov
cmp
and
inc
test
inc
mov
adc
mov
and
sbb
fs
test
inc
aaa
xlat
push
mov
fucomip
jmp
push
jo
stos
nop
sub
popa
mov
dec
fistp
pop
test
lods
xor
aaa
ja
ret
or
cmp
pop
mov
xor
inc
scas
mov
jge
je
mov
jecxz
mov
ret
ret
call
mov
pop
repz
imul
mov
(bad)
sub
jb
mov
scas
aam
push
(bad)
push
nop
and
stos
mov
(bad)
sub
lds
in
dec
pop
in
xor
xor
jo
cwde
push
or
xchg
mov
cmps
pop
or
sar
repz
repz
test
sub
cmps
(bad)
hlt
rcl
or
pop
fsub
sub
dec
mov
(bad)
mov
adc
out
inc
loope
fild
fist
pop
gs
retf
jne
jle
fcom
add
mov
ror
or
aam
xchg
push
xor
cmps
test
shl
scas
test
sub
push
adc
sub
xchg
push
push
jmp
cmp
sub
inc
xchg
mov
sub
aas
aam
out
or
mov
gs
or
mov
and
xchg
xor
mov
or
popa
leave
jl
test
mov
shl
jb
jmp
nop
xchg
fst
mov
test
repz
jmp
aaa
cmp
js
stos
pushf
scas
pop
aaa
sub
xor
test
popa
push
iret
cmp
jne
add
aam
fidivr
mov
mov
jnp
test
jge
pop
jno
sbb
sbb
fdivr
and
test
mov
fcmovu
loop
and
xchg
cmp
jne
mov
jb
outs
mov
iret
pop
cdq
pop
mov
push
(bad)
test
xchg
call
inc
out
mov
ror
mov
push
mov
mov
adc
gs
cli
sbb
push
in
rcr
pop
cs
or
or
cmps
mov
xchg
ret
dec
lods
dec
lds
fdivr
rcr
lea
xor
mov
ins
mov
pushf
fcomip
mov
dec
xor
sub
sbb
test
hlt
xor
jle
dec
daa
dec
sub
jg
xchg
ds
mov
out
jmp
vpshufd
add
mov
popf
xchg
stos
lds
pushf
pushf
popa
in
iret
push
in
mov
sbb
shr
iret
rep
fs
dec
addr16
xchg
aas
cmps
push
dec
and
stos
je
mov
push
call
sbb
jp
xchg
xchg
or
sub
adc
clc
jmp
add
push
aad
les
adc
push
push
int
je
xchg
push
inc
out
rol
cmp
loope
mov
dec
jl
ret
in
in
stc
mov
sub
mov
xchg
fs
jnp
ret
sub
adc
sahf
jmp
and
jae
mov
jae
sub
dec
jmp
or
out
in
adc
stc
outs
rcr
xchg
sbb
lea
or
lods
fcomp
push
pop
jp
imul
(bad)
mov
adc
sub
lds
dec
xchg
push
or
fist
call
ror
hlt
in
xchg
or
in
mov
mov
int
fbstp
cmps
enter
pushf
retf
sahf
push
sbb
mov
or
fs
cmp
movs
xchg
and
je
jmp
std
mov
inc
je
xchg
ds
mov
add
push
rcr
push
or
pop
lock
sub
icebp
cld
dec
es
inc
retf
imul
out
fisttp
push
dec
lds
push
xlat
xchg
cwde
in
jecxz
(bad)
fisub
jne
xchg
jmp
movs
das
xor
stos
outs
mov
in
js
push
aam
adc
leave
pushf
push
neg
jp
dec
(bad)
dec
mov
pop
lea
lahf
dec
xor
lods
imul
jmp
pop
scas
sbb
adc
jns
sub
push
mov
jle
xchg
adc
pop
mov
enter
sub
stos
pop
ss
lods
adc
test
push
dec
gs
test
push
retf
push
shl
jmp
push
sahf
or
lds
(bad)
retf
mov
dec
cmp
sbb
inc
pop
ins
cs
and
sahf
sub
inc
inc
mov
(bad)
mov
push
fdiv
xchg
push
lods
stos
adc
(bad)
loopne
repnz
(bad)
mov
outs
mov
push
mov
ja
inc
sub
inc
shl
mov
xor
repnz
inc
push
xchg
hlt
jae
add
cmps
jp
out
ror
lods
pop
bound
xchg
jb
jb
xchg
sub
call
ja
sahf
cwde
mov
out
aad
xor
outs
fisttp
cwde
lods
(bad)
xchg
inc
sub
sbb
pop
int
ret
push
mov
adc
xchg
repnz
aad
dec
and
test
enter
inc
cdq
mov
mov
out
ins
add
xor
fidivr
dec
cmp
jbe
xor
mov
loope
dec
stc
dec
(bad)
push
xor
adc
sub
loopne
out
ins
and
aam
fdiv
push
rcl
push
ins
push
sub
jae
dec
inc
push
xchg
xchg
fbld
lods
push
sbb
leave
push
movs
xor
movs
retf
or
xor
cwde
jmp
jno
cmp
ins
xor
cmp
adc
cwde
push
sbb
pop
dec
xor
daa
xchg
bound
(bad)
gs
shl
test
xchg
and
jne
mov
adc
push
fnstenv
mov
push
add
sti
stc
pop
jne
mov
or
sbb
push
adc
ficomp
(bad)
movs
mov
scas
cmps
xor
adc
outs
cmp
pop
add
push
mov
hlt
push
jmp
(bad)
dec
dec
imul
dec
in
repnz
push
imul
cmp
xchg
xchg
lea
dec
pusha
ins
pusha
mov
mov
frstor
iret
pop
repz
hlt
sub
adc
test
test
inc
icebp
cmp
aad
jge
clc
cmp
cmp
and
ds
mov
xchg
push
repz
cmp
mov
(bad)
lock
cld
inc
daa
mov
into
sti
(bad)
mov
xchg
pop
mov
mov
mov
pushf
mov
and
sbb
js
mov
mov
xor
in
stc
loop
pop
outs
outs
sbb
inc
lea
aam
add
leave
jmp
cmp
test
and
mov
(bad)
loope
sbb
(bad)
aaa
dec
mov
mov
jae
push
enter
push
jle
je
pop
ins
outs
int
cmp
inc
cmp
xor
leave
sbb
jae
movs
mov
sub
js
mov
and
xchg
jno
daa
push
or
lods
movs
mov
cld
cmps
inc
mov
and
ins
and
retf
dec
cmp
sar
movaps
popf
dec
inc
and
das
(bad)
retf
sti
push
mov
push
adc
js
mov
in
or
mov
xchg
and
mov
retf
push
jecxz
int3
cmc
cmp
mov
sub
stos
xor
adc
pop
dec
movs
pop
dec
(bad)
lods
aam
lods
sbb
scas
jp
sub
xor
sti
aam
xchg
sub
xor
(bad)
not
aas
mov
and
pop
push
rcl
cmc
and
dec
sti
cmp
mov
dec
add
sahf
or
cmovs
push
xor
div
je
iret
xchg
test
mov
shl
xor
dec
int3
fwait
stos
mov
mov
arpl
cwde
xchg
mov
out
lods
sub
aaa
adc
and
inc
add
pop
and
xchg
cli
adc
pop
loopne
stos
sub
sar
js
shl
imul
ins
idiv
stos
adc
mov
(bad)
adc
mov
pop
mov
jge
inc
jns
clc
(bad)
nop
shl
mov
and
sbb
adc
or
out
mov
push
mov
repz
xor
xchg
ins
sbb
imul
popf
xor
scas
lock
(bad)
or
lods
aad
mov
or
xor
aam
cmp
adc
or
xchg
jne
jno
addr16
mov
outs
sub
mov
ret
cmp
adc
jo
pop
add
(bad)
xchg
stos
jae
inc
data16
fild
sbb
jecxz
fsubr
div
scas
dec
stos
inc
in
push
imul
(bad)
xlat
dec
cmp
mov
jl
outs
ret
and
jl
(bad)
sub
nop
ins
sub
fild
adc
dec
or
cdq
popf
test
sub
jge
dec
add
test
stos
shl
push
out
jbe
ror
iret
enter
aaa
pushf
and
jb
out
adc
repz
lods
inc
jle
sub
outs
xchg
or
mov
mov
pop
retf
xchg
lock
jne
lds
call
data16
aaa
add
add
adc
mov
(bad)
xor
loopne
mov
bound
mov
xor
add
(bad)
cdq
push
adc
mov
xlat
dec
mov
and
jne
cdq
or
hlt
retf
inc
xor
inc
mov
dec
mov
mov
push
pop
std
sbb
gs
cs
sbb
cs
adc
sbb
imul
fs
pop
movs
outs
mov
cld
stos
test
xor
inc
je
jae
sub
adc
icebp
sub
js
xor
xor
sbb
outs
cli
mov
in
int3
fsub
clc
push
js
cld
inc
clc
inc
pop
add
inc
fsubr
mov
mov
or
cmp
jnp
cli
retf
(bad)
jb
repnz
pop
sub
xchg
jmp
jno
and
jle
cdq
test
mov
sbb
sbb
(bad)
call
jne
jge
popa
das
mov
and
loop
cs
outs
mov
scas
sbb
sahf
fsubr
sar
and
and
test
setg
cmp
addr16
mov
fsub
test
call
test
or
dec
and
mov
dec
and
mov
pop
ins
or
ret
pusha
loopne
mov
shl
(bad)
mov
add
outs
fdivr
jmp
adc
sbb
(bad)
dec
(bad)
pop
retf
pop
nop
stc
stos
adc
popf
dec
mov
clc
adc
xor
lods
sahf
jo
cmp
int3
or
push
jnp
mov
cli
add
xchg
pop
mov
add
lods
and
aaa
push
mov
adc
sete
inc
sti
jmp
cmp
popa
lds
xchg
movs
or
pop
fst
mov
cmps
(bad)
stc
cld
cmps
and
or
addr16
bound
fs
ds
or
inc
imul
adc
jo
dec
dec
jecxz
push
mov
sahf
outs
mov
out
inc
ins
push
fwait
outs
mov
or
das
jno
push
jg
inc
jns
jp
mov
clc
and
lods
pop
cwde
stos
xchg
cmp
or
xchg
out
mov
sbb
jbe
cmp
mov
cmps
xchg
test
mov
out
repnz
mov
dec
dec
lock
or
push
enter
movs
fwait
pcmpeqw
jmp
fld
nop
add
dec
push
jbe
xor
dec
aam
int3
mov
fsubr
or
inc
cmp
bound
idiv
movs
movs
int
pop
cs
sbb
nop
(bad)
cmp
mov
pop
lods
sub
in
dec
mov
add
sub
or
test
data16
cmp
cld
dec
gs
push
xor
outs
mov
shl
mov
jnp
sbb
call
call
ret
sub
retf
popa
xor
jmp
xor
stos
jge
sbb
inc
sub
mov
jge
push
iret
out
mov
(bad)
imul
ins
loopne
jns
repz
xor
and
sbb
out
cmp
sbb
mov
cli
mov
inc
je
xchg
push
loop
hlt
and
jecxz
in
xchg
xchg
xchg
inc
xor
push
pusha
ret
mov
test
fcomp
call
mov
repnz
hlt
aad
mov
and
jb
lods
or
pop
jmp
dec
or
cmps
and
jge
(bad)
aas
das
push
fwait
jge
adc
repz
ss
lods
pop
pop
or
(bad)
jle
sbb
retf
inc
push
or
scas
or
cmps
add
popa
(bad)
adc
mov
neg
sar
add
jbe
lea
scas
sbb
loop
dec
in
sub
imul
sbb
adc
jb
mov
pop
fcmove
jg
mov
sbb
add
out
icebp
xchg
mov
repz
push
add
xchg
push
dec
push
in
stos
sar
or
movs
add
dec
pop
xor
enter
inc
shl
or
or
pop
cmp
es
stc
jl
pop
xchg
cld
mov
inc
fmulp
aam
push
xchg
mov
mov
int3
sahf
adc
retf
sbb
inc
cmp
add
arpl
xchg
fnsave
in
pop
push
cmp
in
xchg
mov
imul
and
inc
in
outs
dec
xor
hlt
lock
pop
push
push
add
push
retf
jnp
call
xor
jo
xchg
fadd
out
loopne
retf
mov
mov
(bad)
mov
stos
call
aas
adc
push
mov
mov
in
sbb
outs
jno
cmps
loope
ja
mov
jnp
cmp
inc
imul
dec
ret
add
mov
sbb
neg
and
push
pop
inc
add
ds
add
or
pop
std
push
loop
jb
ret
dec
icebp
xchg
jp
adc
je
cdq
fdiv
xchg
mov
mov
inc
dec
stos
(bad)
xor
mov
fldenv
cld
arpl
fcmovne
repnz
or
inc
lods
out
jmp
pop
lds
fsub
leave
js
(bad)
in
faddp
adc
push
shr
sub
inc
cli
mov
add
xchg
hlt
movs
adc
loop
dec
sti
or
xor
mov
movs
xchg
adc
fld
rol
daa
add
aad
xchg
push
and
cmp
sbb
push
cmp
jecxz
lea
push
mov
ficom
push
lea
das
add
inc
int
pop
dec
ins
out
imul
fimul
jl
retf
push
imul
movs
fwait
ds
cmp
mov
pushf
xchg
fcomip
imul
mov
jne
idiv
ror
push
xor
mov
das
cmp
or
add
ret
xchg
dec
mov
sub
rol
repz
push
les
inc
imul
leave
in
mov
jmp
out
xor
pop
in
(bad)
push
xor
in
lods
mov
test
and
pop
test
addr16
jp
dec
mov
sub
mov
xchg
cmp
jg
mov
das
mov
mov
sub
pop
out
bound
jno
push
in
imul
and
sub
adc
sar
mov
cmps
push
into
movs
mov
jmp
push
call
(bad)
sbb
inc
data16
pushf
call
js
cmps
jmp
and
out
push
mov
adc
or
sbb
mov
dec
into
jmp
cli
jp
(bad)
pop
lds
adc
cmp
mov
out
pop
pusha
loope
sbb
jmp
mov
adc
loop
xor
les
add
je
xor
xchg
xor
out
test
jmp
fidivr
je
sar
jmp
fiadd
mov
sub
data16
jnp
dec
inc
sbb
in
hlt
xchg
push
jb
ja
vmovss
stc
in
scas
and
jg
pop
or
(bad)
jb
add
mov
jp
test
xor
loopne
(bad)
popf
pop
je
idiv
aaa
inc
mov
in
adc
in
addr16
jmp
sbb
push
shl
mov
dec
mov
xchg
inc
jae
push
inc
daa
push
xchg
mov
sub
inc
jmp
xor
mov
clc
mov
arpl
mov
pop
(bad)
pop
jae
imul
aas
movs
addr16
pop
cmc
adc
dec
lods
(bad)
cs
(bad)
mov
sub
jae
dec
iret
xchg
pop
mov
adc
int3
add
es
ins
sbb
sbb
int
pop
mov
ror
inc
xchg
in
nop
test
jmp
retf
dec
jo
mov
je
enter
xchg
xchg
out
mov
movs
add
rcr
ja
pop
loopne
xchg
nop
mov
mov
sub
sahf
outs
cmps
dec
xor
sbb
xor
mov
add
lds
mov
push
clc
test
push
retf
loopne
aaa
popa
cmps
jecxz
stos
inc
popf
mov
dec
xchg
das
stos
loop
or
outs
das
sahf
aam
or
inc
push
pop
stos
cmp
das
xchg
std
jmp
push
call
sub
leave
xchg
pop
xor
pop
push
jp
rol
std
test
cmp
call
or
inc
leave
ret
push
push
dec
(bad)
dec
sbb
lods
xor
rcl
adc
adc
pop
dec
push
inc
inc
fs
pop
cli
out
je
pop
sahf
mov
jbe
push
retf
popa
cmp
scas
mov
push
jecxz
sub
mov
push
ins
(bad)
add
scas
xchg
sub
inc
pop
fimul
fwait
or
jbe
jo
add
add
fwait
mov
pop
cmp
adc
lea
or
mov
inc
inc
fisub
aaa
out
and
jne
push
leave
stos
rol
pop
in
pop
sahf
jns
mov
fcmovne
daa
stos
aaa
ficomp
adc
mov
sahf
test
push
cmp
jae
mov
cmps
inc
inc
inc
pop
in
adc
mov
xchg
xchg
push
mov
daa
or
adc
shl
test
and
test
push
pusha
stos
neg
mov
sbb
jl
mov
xchg
imul
fnstsw
lods
mov
sbb
dec
in
push
cwde
cmc
push
adc
push
addr16
fsubr
out
ret
pop
fisttp
in
fsubr
call
inc
inc
mov
jecxz
stos
xchg
retf
clc
idiv
dec
xchg
sbb
dec
or
lods
pop
rcl
(bad)
or
and
in
dec
jae
in
repnz
or
icebp
jne
or
jnp
out
pop
(bad)
fisttp
scas
in
sar
sub
inc
aad
push
pop
imul
jge
or
(bad)
in
test
and
fild
pop
sub
inc
mov
arpl
push
aaa
call
xchg
movs
jmp
stc
retf
mov
iret
fdivr
wrmsr
add
add
inc
sub
and
sub
add
ja
jmp
xor
ret
call
popa
jecxz
push
pop
cmp
test
jnp
shl
jle
cld
ins
lahf
xor
loopne
adc
out
and
addr16
xchg
(bad)
pop
pusha
daa
fdiv
(bad)
cmp
sbb
and
sub
es
sbb
cmp
std
(bad)
enter
mov
test
sbb
add
mov
scas
push
dec
mov
fdiv
(bad)
push
test
jo
into
cmp
cwde
or
jno
jecxz
int3
lods
cmp
jmp
pop
fld
jle
stc
test
or
iret
je
push
jecxz
add
ja
xchg
mov
pop
sub
sub
dec
movs
jbe
loopne
push
pop
mov
pop
mov
mov
cwde
ins
fild
arpl
or
hlt
mov
dec
lods
mov
scas
test
add
test
dec
fs
jnp
mov
iret
mov
stc
out
mov
addr16
ficom
xchg
mov
mov
gs
sub
test
lods
jae
xor
retf
xchg
xor
push
mov
xchg
lods
cld
popf
das
and
jg
mov
icebp
adc
dec
aas
push
pop
imul
sar
mov
cdq
mov
jle
sbb
jg
push
or
dec
mov
jno
dec
repz
push
jle
movs
sub
dec
inc
mov
popf
add
and
cmps
ret
fwait
mov
pop
jns
xlat
call
pushf
xchg
movs
sahf
es
jp
pop
push
mov
(bad)
jp
cwde
or
bnd
ja
retf
mov
adc
sahf
adc
ret
jle
mov
xchg
jmp
inc
dec
mov
xchg
mov
test
add
push
jne
push
stos
stos
and
push
movs
cmps
add
fild
popf
icebp
inc
mov
sahf
hlt
xchg
test
leave
ins
mov
aaa
jmp
dec
mov
dec
mov
imul
fcomp
adc
xchg
iret
dec
sahf
outs
cmc
int
jp
popf
mov
bound
mov
mov
sbb
mov
sbb
ja
sahf
pop
ins
xchg
and
test
fmul
repnz
mov
out
jo
stos
xchg
not
pop
jbe
iret
frstor
mov
fs
or
and
mov
in
rcl
add
add
dec
or
or
inc
daa
mov
out
add
mov
fxtract
pop
fld
add
test
ret
fdivr
push
mov
jns
push
cmp
in
and
adc
stos
sub
sub
loopne
dec
aas
push
js
hlt
xchg
movs
cdq
stc
inc
cmps
fldcw
jne
outs
add
xchg
pusha
adc
xor
ins
and
jecxz
xchg
loopne
cmp
fadd
in
xchg
ror
cdq
enter
jbe
and
sub
(bad)
dec
xor
nop
idiv
in
xchg
test
push
jb
xchg
mov
inc
mov
mov
ins
dec
lods
dec
cld
mov
cld
add
iret
scas
sahf
mov
loopne
out
into
inc
das
scas
pop
mov
loope
mov
retf
mov
sub
mov
test
sub
adc
dec
jl
and
(bad)
sbb
loope
push
(bad)
xor
add
out
out
stos
rol
aad
cld
js
lods
cld
mov
or
add
jb
std
mov
inc
movs
sbb
into
xchg
(bad)
xor
popf
xchg
fsubr
xor
add
fdivp
scas
sub
jle
cwde
sahf
jo
aas
or
xchg
dec
pop
jg
mov
jns
pop
ins
out
shl
adc
out
mov
fild
cmps
jnp
out
enter
cmp
pusha
call
add
add
xchg
xor
sbb
test
and
jmp
jmp
icebp
adc
(bad)
fdivp
inc
cmps
jle
jno
or
ja
bswap
push
or
pop
movs
pushf
sti
xor
(bad)
cmp
mov
push
mov
mov
mov
inc
cmp
xor
idiv
sbb
stos
mov
sub
(bad)
idiv
jae
shr
push
cmp
xchg
cli
xor
int
cmp
and
aam
sub
push
test
pop
rcr
movs
stos
retf
in
mov
fcmovnb
movs
cmc
sbb
pop
push
call
gs
fdiv
addr16
and
xchg
and
mov
sahf
sub
inc
fstp
pop
pop
repz
outs
sbb
sbb
mov
or
push
std
adc
push
jne
div
daa
into
or
or
and
mov
xchg
adc
mov
mov
mov
mov
sub
xlat
fwait
push
adc
push
icebp
xor
retf
and
in
cli
dec
and
push
mov
jl
loop
ins
push
xor
inc
aaa
jecxz
sbb
mov
jge
jle
push
and
xchg
xchg
pusha
popf
push
das
xchg
mov
out
and
xchg
das
loopne
inc
(bad)
sub
call
jae
jl
adc
data16
je
push
dec
push
lds
push
cmc
int
pop
mov
add
push
sbb
sub
pop
xchg
or
out
pop
dec
xchg
sub
dec
mov
add
call
xor
push
mov
mov
es
(bad)
pop
mov
lods
inc
mov
pop
and
jle
popa
cmp
inc
inc
mov
cmp
imul
mov
push
test
idiv
mov
add
mov
iret
dec
xchg
and
and
jge
bound
enter
and
sti
xor
in
mov
int3
sub
jge
dec
dec
fst
out
add
nop
adc
or
adc
sahf
(bad)
jg
in
sub
cmps
inc
mov
(bad)
jmp
push
mov
repz
sbb
jp
sti
inc
iret
mov
out
dec
xchg
mov
adc
(bad)
push
es
lods
sbb
cmp
add
mov
push
movs
pop
int
rcr
xchg
mov
adc
std
mov
fdiv
add
jmp
test
add
mov
xchg
xor
cs
adc
dec
pop
call
ins
ud1
mov
add
push
les
call
sar
jp
aad
fstp
sub
adc
sar
dec
mov
int
ja
or
push
add
aam
scas
stos
push
je
je
fnstcw
daa
add
pusha
mov
push
and
(bad)
jmp
(bad)
pop
pop
or
aad
cmp
leave
popa
outs
pop
arpl
mov
in
add
dec
mov
cmp
fs
xchg
mov
jle
sub
std
dec
mov
sbb
adc
mov
(bad)
fcomp
dec
ins
dec
push
in
lods
adc
in
fdivr
push
and
inc
mov
xchg
push
ja
xchg
push
imul
clc
xchg
xor
push
repnz
es
dec
in
fst
adc
dec
mov
push
fstp
jno
jg
pop
mov
(bad)
shl
adc
xor
adc
jo
or
loopne
loop
inc
xlat
call
into
imul
xor
(bad)
cmp
mov
cmps
add
iret
and
rcr
pop
push
rol
mov
andnps
mov
je
sub
ins
xor
ss
pop
add
xor
ss
jo
xor
adc
xchg
add
loop
mov
push
les
int
clc
fisttp
sub
ret
jno
jecxz
mov
cli
push
fcomp
mov
xlat
pop
sahf
stos
mov
fnstsw
cmc
sbb
retw
ffree
push
mov
fdivr
pop
sub
adc
cmp
dec
jl
in
adc
sub
push
mov
or
lock
ror
fwait
push
js
jge
add
jp
dec
hlt
mov
dec
test
dec
mov
and
call
sub
sub
add
mov
sub
ret
jnp
div
sbb
mov
icebp
or
add
mov
jmp
scas
mov
push
or
popf
out
lahf
shl
faddp
repnz
jnp
mov
mov
ficom
int3
sub
cmp
jo
push
out
test
jne
mov
mov
mov
mov
imul
retf
xchg
in
push
jl
add
aaa
repnz
jecxz
popa
fisub
sahf
std
add
xchg
repnz
push
pop
xchg
mov
inc
and
lahf
push
imul
ficom
add
pop
inc
mov
xor
sub
shr
aas
jne
mov
test
mov
mov
cmovge
inc
cmps
add
or
and
push
cmp
sbb
repnz
inc
jne
aam
ret
adc
mov
xor
lods
fst
iret
out
jae
(bad)
cmp
scas
jg
pop
cmp
mov
imul
cmp
div
xchg
aad
test
dec
xchg
fst
andps
adc
sbb
add
mov
pop
in
xchg
add
jl
push
add
test
inc
stos
adc
fs
aas
mov
loopne
push
push
inc
pop
and
mov
jae
lods
fisubr
mov
xchg
push
aam
outs
(bad)
xor
push
mov
and
cmps
add
out
call
in
into
sbb
or
mov
mov
cmp
jmp
mov
pop
xor
je
or
add
xchg
ja
add
out
fpatan
out
xor
ja
add
in
push
xor
or
xchg
mov
mov
xchg
mov
mov
shr
test
rcr
mov
std
sub
inc
jecxz
dec
and
xor
iret
or
push
outs
rol
jle
push
retf
loop
mov
fs
in
out
repz
sub
inc
adc
popf
inc
fld
mov
pop
dec
fsub
inc
adc
inc
sbb
sahf
std
xor
mov
js
mov
and
in
cli
xor
stos
cli
sahf
cmc
loope
inc
(bad)
adc
fwait
repnz
and
bound
movs
cmp
test
scas
cmps
and
jno
push
clc
push
mov
mov
xor
ds
ins
mov
pushf
pop
popf
retf
cli
repz
ins
shl
imul
cmps
pop
(bad)
push
pushf
popa
sbb
add
fadd
inc
lahf
xor
sub
xor
gs
mov
inc
movs
lds
icebp
out
or
fdiv
das
push
mov
mov
dec
jae
pop
mov
fcmovnu
test
(bad)
push
adc
lods
imul
movs
loope
inc
(bad)
ret
sub
sahf
cs
out
xor
jecxz
imul
dec
sub
into
or
push
sbb
push
shl
cmc
dec
stc
xchg
sbb
repz
mov
dec
push
in
add
mov
and
mov
(bad)
mov
call
pusha
into
sub
dec
lds
(bad)
icebp
mov
xchg
cmp
dec
cld
jecxz
and
push
xchg
mov
outs
mov
arpl
inc
scas
dec
fwait
int3
nop
jbe
pusha
movs
and
rcl
fisub
gs
or
daa
or
out
inc
sti
mov
stc
cli
imul
mov
xchg
ja
shl
inc
sub
rcl
idiv
inc
xor
adc
scas
shr
mov
sbb
outs
sbb
inc
das
ja
jmp
pop
mov
rol
cld
xor
mov
dec
imul
leave
pop
jmp
push
adc
fdiv
movs
jb
faddp
pushf
gs
fucomi
inc
xor
sub
mul
mov
fcmovbe
sahf
xor
sbb
std
add
pushf
jbe
out
les
or
push
jmp
dec
xchg
fsincos
rcl
pop
leave
leave
movs
dec
imul
sbb
es
adc
adc
cdq
sbb
je
call
repnz
outs
xchg
jmp
jne
iret
mov
jbe
push
(bad)
cmps
cmp
jnp
aas
cs
and
xchg
push
pop
push
addr16
fiadd
jo
jbe
dec
aaa
aad
je
out
mov
and
loopne
jns
mov
mov
dec
pop
test
dec
sub
nop
ds
shl
mov
cwde
pop
lahf
push
dec
cmp
mov
mov
outs
int
xor
bound
push
sti
xor
or
aam
inc
mov
(bad)
push
sub
arpl
ja
mov
ret
cld
out
imul
sub
dec
arpl
xor
cmps
in
fnsetpm(287
addr16
cdq
push
inc
and
inc
fwait
in
sub
pop
cmp
mov
jl
sub
add
das
mov
test
xchg
mov
lds
and
mov
(bad)
into
aaa
retf
pop
popf
stc
mov
iret
(bad)
cmc
mov
xchg
sahf
xor
mov
retf
stos
inc
stos
adc
fiadd
call
or
pop
aam
das
add
lahf
sbb
xchg
fs
fimul
bound
mov
ret
mov
mov
call
mov
bnd
mov
mov
aad
call
nop
test
xchg
sub
sub
arpl
pushf
mov
mov
cs
sahf
fisubr
jmp
dec
inc
push
jl
and
imul
in
div
mov
pop
int
lods
out
aam
jbe
adc
call
cmp
push
(bad)
fcomp
and
daa
cmps
or
into
dec
(bad)
cwde
jle
pop
mov
pop
daa
sub
dec
push
mov
pop
sub
mov
xor
(bad)
mov
xor
stc
scas
cmc
retf
fld
mov
inc
inc
retf
pushf
ss
adc
jecxz
cmp
hlt
sub
inc
jmp
xlat
mov
push
pop
mov
fistp
gs
icebp
lock
and
test
fdivrp
leave
fwait
ins
aaa
fnstenv
bound
jns
jne
outs
xor
test
and
cmp
mov
sub
and
ffreep
sub
sub
aad
sbb
add
mov
popa
or
or
pop
cmc
mov
in
cmp
push
mov
fwait
mov
add
int3
ss
cmps
jo
mov
cwde
scas
sbb
cmp
cmp
aam
xor
lock
xor
into
add
xchg
sbb
mov
mov
and
mov
ss
jmp
test
stos
aaa
xchg
shl
ins
mov
add
fdivr
popa
pop
ret
or
push
fdivr
(bad)
lock
xor
std
sub
sti
loope
aas
or
xor
je
call
inc
adc
ss
cli
test
mov
mov
test
imul
pop
sbb
fild
ins
repnz
or
jbe
xrelease
and
ret
popf
call
inc
sub
cli
stos
fs
xor
xor
and
rol
std
pushf
lahf
lock
sub
(bad)
fmulp
fstp
push
pop
daa
dec
and
cdq
xor
scas
inc
sbb
push
aas
push
ja
and
ffree
fistp
lock
lahf
push
rcr
sub
ror
call
mov
pop
cdq
imul
sbb
pop
and
pop
jge
outs
xchg
xor
jno
mov
out
nop
in
retf
push
mov
lods
push
sub
sti
je
and
mov
inc
jmp
imul
xor
xchg
push
jno
xchg
and
sbb
mov
inc
mov
pop
jmp
fldl2e
add
sub
push
ror
or
sub
test
inc
dec
xor
(bad)
mov
icebp
adc
cmp
adc
imul
ins
movs
stc
inc
inc
cmp
sbb
add
rol
test
sbb
fs
neg
(bad)
cld
xchg
adc
inc
test
inc
mov
push
ret
mov
loope
(bad)
sbb
xchg
fdiv
test
fmulp
js
cmps
iret
ss
outs
push
fs
inc
jne
inc
mov
repz
cmp
sub
fld
xor
jl
aam
pusha
push
sub
js
mov
ret
jp
jbe
xor
int3
push
sub
inc
dec
test
dec
push
pop
lahf
in
fs
jmp
push
js
sahf
out
xor
xor
(bad)
inc
mov
sub
mov
add
xchg
xor
shl
fwait
pop
push
dec
push
xor
fmul
pop
in
loopne
(bad)
lea
cmp
cmp
loope
cmps
sub
ins
push
repz
pop
sbb
mov
in
inc
add
inc
in
inc
push
cdq
xor
dec
push
mov
(bad)
loope
jge
sbb
daa
fist
ret
sbb
dec
das
dec
ds
jecxz
dec
push
jmp
xchg
xchg
stos
pop
out
cmp
xchg
sahf
mov
sub
popf
das
dec
call
adc
add
je
cmps
xchg
jnp
xchg
cs
push
ins
je
mov
xor
sub
aam
and
jnp
mov
adc
xlat
mov
and
dec
leave
dec
fwait
inc
mov
ss
pusha
jmp
ds
aas
dec
daa
inc
ret
inc
cmps
mov
cmps
stos
sub
or
int
add
inc
sub
push
imul
mov
aas
inc
loope
sub
test
js
xchg
jo
mov
mov
cmp
sub
movs
and
nop
ss
lock
clc
fs
mov
xlat
and
mov
inc
stc
dec
pop
cmps
es
scas
push
test
hlt
out
pop
fstp
movs
loope
repz
mov
call
popf
outs
pop
mov
test
mov
mov
add
mov
push
cmp
ror
leave
aam
neg
and
mov
nop
arpl
jg
je
fdivrp
dec
std
or
or
xchg
daa
xchg
(bad)
xor
pop
sub
cli
fwait
dec
scas
mov
dec
push
imul
push
jno
stc
and
aad
enter
push
xchg
pop
cdq
jecxz
imul
mov
inc
mov
(bad)
jbe
test
sub
mov
mov
cmc
mov
add
rcl
sbb
push
sub
or
outs
clc
push
mov
sub
dec
nop
ficom
jnp
in
cwde
adc
xchg
lds
fs
fnstenv
js
movs
xchg
lahf
xchg
or
aam
call
je
fist
or
mov
ss
push
movs
lea
inc
sbb
xor
not
js
mov
mov
dec
add
xchg
sbb
push
xor
ret
sbb
jmp
inc
shr
adc
ja
retf
mov
(bad)
sbb
pop
push
xchg
jl
cmps
(bad)
mov
and
cmp
pop
add
cmp
xchg
or
and
shr
adc
enter
pusha
mov
xchg
xor
addr16
mov
loope
dec
retf
jb
xchg
sub
lahf
mov
xor
adc
cmp
out
and
stos
out
xchg
(bad)
loope
iret
inc
sbb
test
mov
push
xor
in
test
xor
aad
ror
dec
dec
adc
mov
(bad)
xlat
and
bound
pop
pop
jo
imul
shl
(bad)
or
mov
mov
jge
sti
jmp
or
cdq
popf
pushf
jno
sub
dec
imul
out
aas
int3
or
xor
and
mov
in
shl
sbb
jb
inc
or
push
xchg
jge
scas
sbb
and
retf
add
ret
leave
mov
outs
test
(bad)
push
and
sub
retf
repnz
(bad)
lods
out
and
dec
sahf
xor
xchg
jno
ja
inc
inc
js
stos
cmp
add
int3
and
add
and
sbb
add
nop
mov
inc
cmp
fsubr
mov
out
push
mov
clc
cmp
push
iret
push
inc
in
add
jl
sbb
mov
ror
lds
mov
or
push
bound
xor
nop
jnp
xchg
sub
loopne
xchg
jmp
pop
scas
cli
aaa
dec
das
(bad)
out
jl
pop
retf
xchg
mov
(bad)
iret
adc
icebp
dec
nop
test
pop
aam
loope
add
(bad)
add
mov
outs
fist
out
sahf
(bad)
mov
sbb
jb
jle
inc
jns
push
(bad)
out
lods
scas
test
aam
sbb
enter
and
cdq
loopne
idiv
movs
push
or
je
stc
dec
xor
push
fwait
je
adc
pop
retf
jl
xchg
adc
xchg
dec
mov
movs
xor
fs
sar
daa
xor
stos
dec
push
inc
xlat
lea
rcl
add
mov
ret
xor
jnp
adc
outs
sub
push
cdq
mov
fimul
jbe
mov
and
sub
imul
call
outs
fsub
jno
sbb
dec
les
loopne
jle
aam
popa
(bad)
push
push
out
out
shr
retf
push
fnstenv
xor
dec
mov
lods
and
test
out
loope
iret
ret
ja
hlt
outs
imul
aad
retf
adc
adc
cmp
mov
lock
xchg
lods
cmps
or
dec
jg
xchg
inc
xor
adc
mov
jns
repz
xchg
sbb
je
in
jp
xchg
enter
sub
ret
jge
fadd
sahf
jg
sbb
popaw
push
push
es
adc
dec
ficom
sub
xchg
sub
(bad)
and
mov
je
popf
xchg
pushf
and
or
lahf
cld
pop
mov
movs
push
mov
mov
jg
test
pop
ins
ins
mov
outs
jbe
movs
inc
fiadd
pushf
jge
rol
clc
fadd
add
and
xor
shl
xlat
dec
out
rcl
leave
fwait
adc
sub
fdivr
mov
mov
pop
jge
dec
xchg
lods
ret
pop
lods
jp
mov
jnp
pop
mov
scas
jg
xchg
pop
pop
out
nop
mov
xor
mov
das
int3
mov
test
ficomp
(bad)
pusha
inc
pop
push
xor
(bad)
rcl
scas
adc
xchg
frstor
inc
mov
int
xlat
(bad)
or
or
dec
out
fimul
gs
jae
nop
dec
pop
cld
cli
dec
aam
cmp
mov
jno
aaa
sahf
adc
add
in
sub
sbb
push
div
push
dec
repz
push
mov
inc
sbb
adc
repz
push
arpl
pop
jl
aad
adc
or
jae
(bad)
jl
neg
inc
enter
adc
mov
xor
ja
setno
ja
jp
pop
jecxz
lea
call
mul
pop
sub
and
mov
sbb
ins
xor
(bad)
fistp
shl
cmps
enter
pop
xor
(bad)
(bad)
and
sbb
pop
(bad)
mov
mov
mov
and
xchg
xchg
int
fsubr
outs
inc
or
xor
fcmovnb
sbb
shl
test
in
addr16
jnp
lahf
icebp
clc
retf
or
mov
mov
pushf
mov
xchg
push
pushf
outs
cwde
aam
mov
lahf
iret
jl
sub
pop
inc
out
pop
xor
xlat
lods
cmp
in
(bad)
mov
hlt
scas
cdq
sbb
fst
(bad)
push
mov
sar
ins
mov
jge
gs
xlat
jp
xchg
das
jg
or
sahf
xor
push
dec
cmp
mov
sub
xchg
out
push
pop
mov
mov
scas
push
in
cmc
bound
cld
push
push
movs
mov
and
sub
into
fbld
inc
mov
in
clc
lods
bswap
adc
fst
je
cmp
loope
fiadd
fdivr
mov
cmp
add
mov
idiv
add
aaa
addr16
fadd
xchg
dec
mov
enter
mov
or
loope
inc
mov
jae
enter
ja
test
push
aas
fwait
mov
and
ins
pop
aas
xchg
ds
je
xchg
enter
push
jge
jle
test
xlat
(bad)
pop
outs
xor
popf
arpl
xchg
mov
out
pop
aad
mov
sbb
call
and
cmp
mov
xchg
and
call
dec
pop
movs
pushf
mov
pop
arpl
pop
movs
mov
mov
inc
adc
adc
xchg
fwait
mul
fld
retf
push
rcl
inc
mov
pop
add
sub
rcr
inc
test
inc
inc
scas
je
fidivr
and
xchg
fidiv
movs
jns
xor
rol
push
adc
and
(bad)
adc
pop
add
in
retf
mov
cmp
xchg
lock
xchg
enter
cdq
cmp
cwde
or
dec
cwde
adc
xchg
out
fisub
mov
cld
cmp
push
(bad)
push
push
mov
add
cld
lds
cmp
mov
xchg
pushf
(bad)
les
mov
sbb
arpl
outs
push
pop
cmp
clc
push
xchg
pop
mov
cmp
loopne
push
scas
repnz
dec
pushf
xor
cmp
mov
shr
in
nop
dec
fldcw
sahf
movs
inc
shl
fisubr
stc
or
or
jns
dec
sub
sub
mov
pushf
in
dec
and
outs
push
xchg
xor
sar
das
add
jo
out
fistp
mov
aad
imul
mov
lahf
jbe
jne
aaa
jb
jns
gs
jmp
dec
addr16
or
mov
fcmovnbe
push
xor
add
adc
jne
xchg
fld
sahf
aaa
push
cld
xlat
mul
retf
loopne
xor
fbstp
dec
xor
leave
inc
call
xchg
mov
cmp
dec
adc
in
inc
outs
leave
push
(bad)
cmp
add
pop
xchg
scas
out
clc
xor
rcr
jp
fild
in
pop
outs
cmp
mov
mov
leave
bswap
ins
and
(bad)
js
sbb
pop
aad
(bad)
stc
pop
cmp
sub
and
fstp
mov
jmp
mov
test
dec
sbb
inc
and
push
cmps
push
inc
adc
(bad)
sbb
add
sub
ficom
gs
adc
and
fnsave
loopne
sub
or
mul
test
jno
aaa
gs
movs
push
test
jmp
mov
dec
push
icebp
jmp
adc
repz
mov
(bad)
xchg
rcr
xor
inc
in
pop
add
aad
dec
dec
jns
ja
loopne
int
inc
push
pop
fdivr
test
sub
xlat
inc
daa
pop
in
(bad)
inc
scas
mov
aaa
jo
outs
jge
mov
xchg
pop
dec
neg
ss
in
xchg
push
dec
mov
push
mov
jb
pop
dec
mov
in
mov
dec
jle
dec
inc
xchg
pop
xchg
(bad)
call
xchg
cmps
fisttp
push
push
xor
mov
ja
jne
push
(bad)
cmp
push
xor
push
in
repz
iret
in
call
and
jnp
lahf
pop
jp
int
test
shl
inc
lock
push
xor
test
sub
mov
sub
xlat
or
test
cli
or
push
jae
cld
cmp
addr16
xor
retf
out
(bad)
cs
(bad)
dec
js
dec
and
mov
jae
daa
pusha
lea
lods
and
pop
imul
mov
retf
test
daa
fstp
pop
xor
dec
test
(bad)
push
push
(bad)
daa
rcl
add
shl
and
mov
jbe
xor
pop
aam
xchg
ins
push
xchg
clc
retf
xchg
push
pop
nop
mov
jne
mov
aam
fwait
sub
sbb
shl
sbb
jmp
xchg
mov
mul
outs
sub
retf
rcl
or
pop
inc
mov
sbb
jno
inc
sub
adc
arpl
shl
dec
pop
dec
xchg
imul
and
mov
and
test
mov
ret
mov
adc
and
add
dec
sub
adc
dec
dec
push
arpl
call
mov
or
cmp
mov
sub
xor
call
jmp
push
adc
(bad)
scas
xor
inc
jo
pavgw
rcl
call
inc
jmp
jae
xchg
jno
enter
enter
lds
in
dec
ret
push
and
and
daa
mov
aam
lods
ins
pop
xor
adc
cdq
xchg
enter
sbb
inc
in
leavew
fist
in
int
sbb
stos
adc
sbb
iret
or
(bad)
dec
sbb
cs
mov
dec
jb
aaa
lahf
push
(bad)
lods
arpl
cwde
mov
mov
push
xchg
jmp
stc
mov
jecxz
dec
add
addr16
inc
into
add
in
loope
scas
fwait
adc
sbb
int
iret
(bad)
in
and
mov
push
add
add
adc
in
div
aaa
mov
test
xor
jmp
mov
je
add
enter
adc
push
xchg
push
xchg
sbb
cld
sbb
adc
push
dec
ret
jecxz
jmp
pop
or
test
retf
jns
add
rcr
test
or
js
pushf
jno
add
add
cmc
(bad)
shl
cmp
iret
imul
imul
call
loopne
stos
test
pop
add
sub
rol
fmulp
or
les
jae
fs
ret
sbb
push
cmps
cld
(bad)
pop
in
movs
ficomp
push
daa
and
jp
pop
push
jno
pop
jb
mov
in
bnd
ds
rcl
loope
pop
jg
aaa
mov
mov
imul
xlat
cs
cmp
or
cs
mov
and
aas
pushf
scas
jl
fidiv
jae
stos
jp
jl
jbe
push
loopne
pop
addr16
mov
fist
mov
imul
add
jo
test
push
iret
lds
ss
push
xor
sub
ret
push
push
pop
xchg
mul
jle
push
mov
outs
inc
push
ret
sub
mov
mov
daa
and
daa
lds
xor
test
ds
rol
dec
mov
in
push
ds
movs
cld
push
mov
or
sub
push
loope
and
pusha
stos
pop
or
es
retf
push
outs
inc
loopne
test
repz
scas
and
push
mov
mov
jo
loopne
cmps
xor
shl
movs
repnz
call
and
mov
cwde
test
lea
xor
pop
lea
cmp
ins
mov
xor
fmul
mov
cmc
or
mov
cmp
or
fadd
inc
add
test
aad
inc
or
stos
fst
fiadd
jb
or
mov
jmp
jl
push
das
xor
sbb
dec
jmp
dec
lds
int3
lea
cmp
inc
mov
js
mov
xchg
loop
cli
push
fnstcw
les
aad
test
daa
test
jne
inc
mov
fisub
loop
ret
adc
pusha
mov
mov
lahf
inc
cmp
dec
outs
cli
dec
or
mov
stc
add
dec
ret
movs
lods
add
dec
mov
mov
sar
xchg
es
sbb
jp
in
jle
jne
sbb
pop
mov
iret
lahf
mov
inc
or
icebp
popa
sahf
imul
cmps
cdq
xor
ret
sbb
jp
in
or
cmp
out
adc
fs
and
jns
mov
ins
(bad)
adc
and
stos
out
int
mov
cmp
std
or
and
loop
jmp
lahf
not
stos
sub
add
cmp
je
or
pop
call
bound
sbb
dec
icebp
movs
sub
mov
sub
dec
sub
dec
pop
mov
sbb
push
xor
jmp
and
rcl
daa
cmp
cmp
out
xchg
mov
sbb
sti
(bad)
int3
outs
(bad)
popa
enter
lahf
mov
mov
inc
push
lods
cmp
repnz
mov
mov
jecxz
out
inc
push
ret
(bad)
retf
cmpps
xchg
retf
dec
xor
xor
xor
test
adc
fadd
lds
push
cmovo
push
or
inc
xor
pushw
xchg
loope
scas
das
retf
dec
sbb
inc
inc
add
in
xor
push
lahf
jmp
mov
and
jl
xchg
test
sub
mov
xchg
sub
aaa
inc
and
mov
inc
fimul
lds
loopne
xchg
cmc
inc
mov
not
lock
loop
mov
call
ins
aas
sti
inc
xlat
cld
sbb
xchg
lods
stos
pop
retf
cdq
push
dec
sub
sub
pop
daa
movs
or
mov
cmp
push
add
xor
test
and
outs
sub
sbb
mov
(bad)
pop
out
sahf
xor
sub
dec
nop
adc
mov
pop
mov
pop
sbb
fisttp
dec
mov
xchg
cmps
es
ins
stc
or
cmp
bound
inc
sub
ficom
sbb
jmp
pusha
test
rol
enter
bound
mov
test
jg
sub
jecxz
aas
aaa
fninit
add
add
(bad)
test
mov
cmp
mov
cmp
(bad)
stc
jl
lahf
inc
xchg
clc
or
mov
arpl
add
cs
test
cdq
enter
pop
fdivr
xchg
inc
xor
and
ds
shl
jmp
mov
xchg
call
cmps
push
das
adc
sbb
arpl
daa
test
fisttp
xchg
out
jp
mov
leave
lock
xlat
stos
mov
das
jns
hlt
push
shr
fdivr
pushf
shl
sbb
push
fmul
dec
adc
mov
(bad)
shr
in
popf
inc
push
pop
sub
and
loope
adc
xor
das
mov
into
retf
push
cmp
imul
pop
pop
jle
cmps
imul
daa
pop
(bad)
jae
out
(bad)
aam
mov
test
test
cmp
cmp
call
fs
jl
pop
xchg
pop
adc
cwde
jbe
fxch
cmc
push
daa
pop
or
test
mov
mov
pop
ds
sti
pop
dec
mov
xchg
in
out
mov
mov
test
les
inc
out
xchg
imul
sub
and
mov
stos
xchg
add
out
sbb
cmp
out
pushf
xchg
in
add
outs
jo
push
sbb
mov
fwait
out
stos
sbb
sbb
movs
or
bound
xchg
out
mov
or
and
jo
and
cmovbe
nop
in
nop
push
cs
push
xchg
sub
loope
jl
fstp
pusha
add
pop
psrlq
inc
std
inc
xchg
outs
out
retf
sub
mov
sub
scas
fwait
es
out
sbb
stos
retf
ds
jle
pop
enter
mov
retf
movs
dec
push
(bad)
out
mov
sub
das
outs
test
pop
cld
addr16
mov
dec
mov
out
pop
dec
add
fisubr
out
dec
loop
inc
or
mov
mov
sti
out
loopne
push
mov
out
ret
stos
ficomp
inc
mov
adc
mov
lahf
push
pop
jl
xor
jo
mov
push
mov
cwde
sbb
add
mov
sub
mov
jmp
xchg
pop
movs
push
test
pop
sub
jecxz
add
retf
aam
mov
cdq
call
cwde
push
inc
xor
shl
push
jo
lods
js
aaa
cmp
fmul
pop
addr16
xor
cmp
xchg
mov
dec
inc
inc
jge
lds
inc
and
sub
dec
and
xchg
(bad)
sbb
cld
int
and
nop
push
es
or
out
push
aas
sbb
call
dec
or
jecxz
mov
cwde
or
ss
inc
sbb
clc
retf
cmp
sbb
cmps
movs
cmp
enter
xor
sbb
mov
leave
shr
mov
and
or
pop
xor
push
adc
xor
es
test
xor
mov
loope
mov
xor
nop
jno
mov
pop
and
imul
test
in
xor
sub
ds
xor
gs
loopne
pop
jg
mov
scas
mov
dec
adc
retf
cmp
push
mov
shl
in
jmp
sub
and
pop
xor
or
and
xchg
imul
push
inc
add
mov
ins
mov
fisttp
neg
out
mov
jo
push
inc
dec
jb
and
dec
pop
sbb
sar
lahf
xlat
sbb
push
and
xor
jae
into
mov
pop
mov
push
call
add
gs
mov
inc
test
rcr
xlat
popf
adc
xchg
jl
in
mov
add
inc
test
into
xor
outs
mov
adc
or
jns
fnstsw
cmc
dec
pop
daa
aaa
push
sbb
stc
mov
not
mov
and
xor
sbb
ffreep
pop
stos
adc
inc
mov
inc
js
rol
jnp
lods
mov
fcom
push
add
mov
mov
adc
das
pushf
mov
push
aad
dec
or
(bad)
pushf
and
jle
sub
scas
ss
push
or
fs
int3
(bad)
dec
or
push
cwde
cmp
das
mov
xchg
retf
or
add
(bad)
call
into
scas
mov
(bad)
aaa
push
mov
mov
outs
lahf
jge
arpl
(bad)
or
jmp
aad
mov
not
test
mov
cmp
movs
xchg
cmp
xchg
pop
es
pop
test
jmp
jge
jae
out
xchg
pop
aaa
adc
push
popf
push
xchg
retf
js
mov
lods
inc
jge
mov
fadd
call
das
jg
repnz
rcr
inc
sub
fild
jb
push
pop
cs
mov
imul
add
jb
imul
sub
cwde
pop
mov
std
pop
xchg
fist
pop
ja
jecxz
xor
xchg
imul
jmp
jg
ss
xor
(bad)
call
xor
cli
add
cmp
dec
mov
jmp
loopne
push
ins
inc
ror
sub
(bad)
not
mov
push
mov
inc
jmp
out
out
pushf
mov
mov
pusha
pop
mov
pop
arpl
mov
dec
mov
loopne
mov
mov
mov
mov
int
jb
dec
pop
sbb
add
mov
push
pop
inc
xor
test
adc
fimul
call
sub
call
leave
push
sbb
dec
pop
pop
jg
stos
cmp
int3
mov
sub
xchg
jae
cmc
or
into
or
or
popa
test
pop
aas
test
jmp
ins
scas
test
adc
pop
cdq
sbb
bnd
leave
xor
xchg
xor
call
jmp
mov
jmp
int
cmp
fild
inc
imul
lahf
ds
and
jmp
out
mov
xchg
out
lahf
scas
cmp
cwde
ds
nop
push
dec
mov
aam
or
sbb
call
mov
sbb
push
ins
jg
sar
(bad)
imul
retf
xor
mov
pushf
aam
push
inc
fisttp
or
and
cmp
rcl
in
das
adc
lea
mov
mov
mov
inc
sbb
push
add
test
push
cmp
xor
dec
shufps
cdq
and
cs
adc
jmp
fdiv
lock
jl
jno
enter
pop
movs
adc
and
mov
cmp
out
and
inc
stos
adc
les
mov
mov
mov
sub
jnp
and
aam
enter
mov
or
out
xchg
and
sbb
jp
mov
sahf
mov
or
out
push
bound
rcr
jge
mov
ror
pop
xchg
pop
addr16
ins
push
sub
push
(bad)
mov
xor
push
mov
hlt
jbe
inc
and
stos
mov
scas
retf
mov
cmp
daa
adc
mov
leave
and
ret
aas
xor
dec
sub
add
mov
loopne
mov
adc
sbb
(bad)
cmc
in
jbe
mov
sbb
js
pop
sbb
dec
fst
int3
and
mov
adc
call
mov
repnz
pop
xchg
ins
xchg
loop
adc
inc
aam
and
lds
jno
xor
jle
adc
adc
inc
dec
rcl
and
and
test
cmp
mov
data16
into
(bad)
shrd
je
jle
jp
stc
test
xchg
dec
jne
add
sbb
xchg
enter
mov
and
jmp
hlt
cmp
fmul
inc
pop
mov
push
and
jmp
clc
das
inc
inc
ss
or
jbe
mov
pop
xchg
dec
xlat
sbb
dec
add
push
repnz
adc
and
cmc
add
inc
cmp
pop
movs
fiadd
and
push
hlt
pop
mov
pop
aam
ret
mov
loopne
add
(bad)
jae
pop
mov
mov
mov
int
and
ins
out
jbe
mov
popa
inc
ret
mov
nop
cdq
sbb
out
lahf
pop
icebp
stc
inc
push
sub
push
jp
(bad)
mov
sub
scas
xor
dec
inc
inc
and
arpl
or
add
xchg
pop
jne
mov
mov
ja
add
mov
mov
lods
jnp
daa
inc
mov
xor
outs
ret
xor
sub
xchg
mov
cmp
in
fdiv
push
dec
daa
pop
sub
pop
cmp
push
hlt
mov
test
pop
sub
rcr
sub
jns
repz
cmp
rcr
movs
cmc
jmp
ds
sub
dec
popf
(bad)
mov
data16
scas
mov
adc
loop
(bad)
xchg
mov
sbb
mov
sbb
stc
stos
sub
xor
std
pusha
popa
pop
pop
cmp
in
inc
in
adc
jae
(bad)
sub
push
fs
gs
pop
jbe
bound
je
sub
in
sti
add
mov
mov
loop
retf
ins
push
jae
nop
mov
xor
or
out
clc
xchg
ins
nop
jns
in
jns
cmp
popf
mov
dec
mov
push
xchg
int3
xor
pop
pop
test
sti
xlat
mov
shl
jmp
mov
inc
xor
push
sar
test
mov
cmps
inc
ror
lods
add
sar
jle
add
in
and
bound
mov
dec
loop
add
movs
mov
or
test
sbb
xor
int
ins
enterw
cs
movs
(bad)
cld
punpcklbw
shl
outs
and
cmp
shl
cmc
fwait
movs
mov
pop
loop
mov
pop
retf
(bad)
ins
aam
push
iret
mov
jmp
in
adc
xchg
sbb
cmp
xor
push
xchg
mov
add
bound
scas
or
ret
dec
xor
jae
loope
push
xor
push
cmc
mov
lods
aaa
push
pop
and
imul
lea
mov
cdq
(bad)
push
hlt
test
jno
loop
mov
cmp
lock
outs
mov
push
mov
jae
out
mov
imul
stc
dec
xor
fcmovnu
fisttp
int
in
retf
fisubr
or
dec
iret
fs
jg
dec
dec
std
out
add
das
cdq
ds
push
jns
int
mov
mov
ror
push
sbb
stos
lock
mov
scas
dec
jge
adc
jbe
pop
inc
enter
mov
mov
shr
xor
cbw
in
mov
or
test
dec
sbb
or
(bad)
sub
cmp
jnp
sbb
movs
mov
rcr
ins
push
in
stos
push
(bad)
mov
cmps
ret
lea
pop
pushf
dec
scas
push
fadd
jnp
ja
int
pop
hlt
test
daa
xor
outs
dec
aam
cdq
cmp
adc
cld
sti
jnp
inc
push
sub
jo
repz
push
inc
xchg
jg
addr16
jno
adc
xor
jecxz
dec
cmps
xchg
cs
aam
nop
jns
inc
xchg
movs
ds
add
cld
add
dec
cwde
jmp
call
rol
inc
push
fwait
pop
pushw
outs
stc
inc
mov
or
call
push
in
retf
pop
adc
add
or
push
rol
nop
arpl
push
je
xor
sbb
das
ins
mov
jno
mov
cmc
xchg
or
ret
jmp
(bad)
inc
outs
jge
sbb
push
cli
sbb
test
or
and
cmps
sub
(bad)
out
inc
jge
adc
add
xchg
int3
retf
sub
(bad)
dec
xor
daa
fisttp
or
cli
rcl
jge
mov
(bad)
jbe
cmp
scas
arpl
sub
imul
cli
test
movs
sbb
jmp
or
dec
adc
jb
xchg
mov
sub
add
pop
in
daa
cmp
add
out
xchg
mov
xchg
bound
and
mov
imul
xchg
imul
pop
or
mov
jae
(bad)
xchg
sahf
dec
fild
frstor
pop
stos
pop
imul
mov
mov
pop
bndldx
jae
pop
aad
retf
adc
cmps
int3
dec
mov
sub
in
fs
add
data16
sub
push
and
aaa
and
addr16
pop
ja
fisubr
rol
in
or
add
jecxz
jp
and
xor
cmp
mov
in
cmps
int
mul
ret
enter
cdq
retf
add
movs
cs
shr
mov
fimul
in
call
mov
mov
pop
mov
adc
mov
mov
out
sub
sbb
mov
or
jmp
inc
stc
xchg
mov
xor
pop
lods
retf
xchg
jecxz
xor
push
dec
inc
ret
push
dec
arpl
neg
out
mov
mov
es
cwde
add
lods
pop
sbb
or
adc
sar
push
mov
dec
int
mov
mov
push
pop
outs
ins
stos
neg
idiv
xchg
jae
xor
stc
push
dec
js
(bad)
retf
push
jns
pusha
sub
clc
fisttp
jo
inc
xor
cld
rol
(bad)
push
push
mov
mov
sahf
pop
ss
pop
es
sbb
sahf
fiadd
inc
or
ja
sub
lods
pop
adc
mov
(bad)
icebp
sbb
call
inc
jb
stc
xchg
and
out
and
jg
fild
sbb
(bad)
scas
in
es
pushf
mov
pop
(bad)
pop
int3
outs
push
and
ror
clc
xor
push
cld
mov
pop
jg
jb
in
out
mov
xchg
cmps
scas
arpl
fcomp
xchg
out
mov
cmp
lods
adc
stos
imul
and
fadd
and
push
stos
dec
push
jecxz
or
ins
cmp
inc
xchg
loopne
inc
mov
test
dec
mov
jle
movs
dec
push
aaa
cwde
sbb
fisttp
aas
add
inc
xchg
mov
mov
dec
cli
add
fldenv
mov
cmc
mov
lods
push
ins
retf
call
mov
sub
push
jmp
fsubr
mov
movs
jl
jmp
sti
adc
mov
adc
xlat
push
call
xor
inc
xchg
jae
test
adc
jecxz
or
cld
repnz
and
aas
(bad)
sbb
mov
enter
scas
xchg
movs
sub
sub
push
je
sub
inc
sbb
pop
lock
or
(bad)
xlat
mov
test
mov
xor
popf
out
pop
cli
cwde
xor
inc
cmc
sub
pop
das
mov
jnp
mov
enter
int3
popf
aaa
je
sub
test
loope
cmp
std
pop
pusha
jbe
cld
loop
and
jns
dec
call
repz
ins
(bad)
outs
sub
out
xor
lahf
inc
mov
(bad)
pushf
outs
cmp
aas
(bad)
mov
sub
(bad)
movs
inc
stc
je
jp
xor
push
xlat
stos
lahf
(bad)
add
push
retf
mov
fwait
out
fchs
loope
ret
imul
fstp
add
push
imul
or
mov
sub
arpl
movs
(bad)
loop
pop
pop
mov
or
(bad)
mov
getsec
mov
mov
mov
(bad)
mul
dec
ins
add
cdq
sahf
or
fild
sub
loop
jge
push
xchg
xchg
out
fnsave
ins
cld
sbb
xor
pop
lock
enter
push
mov
hlt
or
jle
inc
ins
and
cmp
and
cs
repnz
mov
out
sahf
(bad)
jns
fwait
push
jno
lock
or
sbb
or
clc
stos
sub
hlt
or
ss
jmp
inc
xor
outs
cs
dec
fstp
movs
cmp
(bad)
in
xor
pop
push
loop
arpl
sub
not
mov
not
shl
scas
sahf
add
pop
cmc
loop
xor
dec
in
cwde
dec
shl
hlt
push
jmp
lds
xor
(bad)
fstp
(bad)
int
das
aaa
mov
add
push
in
add
call
outs
fisttp
jae
add
xabort
and
popf
xor
jnp
movs
test
retf
push
pusha
jo
shl
jle
sub
cmp
ds
cli
gs
das
je
inc
std
mov
mov
int
jnp
ins
inc
cmc
cld
mov
sub
and
into
not
cs
jns
lods
push
into
aas
inc
pop
jmp
or
sbb
mov
ins
mov
push
out
xchg
jl
ja
std
fild
xchg
pop
int
mov
in
mov
cmp
or
imul
daa
mov
sar
(bad)
rcr
sbb
mov
or
jo
jge
mov
mov
inc
cmps
inc
daa
cwde
push
mov
cwde
pop
mov
pop
or
mov
ror
popf
push
mov
push
pop
lds
mov
aad
sbb
lahf
pop
push
stos
xchg
push
test
inc
pop
outs
lods
and
retf
repz
test
jns
mov
and
and
(bad)
push
fidivr
cwde
fxam
cmp
mov
(bad)
rcl
cs
jo
adc
push
rcl
lds
rol
jge
xchg
pop
jl
jle
cmc
sbb
sub
inc
xor
js
xchg
arpl
aas
adc
(bad)
sti
hlt
sub
stos
push
sbb
mov
ins
repnz
(bad)
repz
sub
add
cs
xchg
xchg
lods
jecxz
ds
sbb
jnp
fnstcw
pop
pushf
lods
mov
xchg
scas
movs
mov
pop
sbb
sub
jge
cdq
das
mov
(bad)
rol
mov
inc
imul
sub
scas
frstor
into
scas
mov
push
inc
push
jmp
jnp
xor
test
jge
xor
repnz
or
push
test
in
add
add
cmp
jl
je
push
or
xor
mov
dec
sub
scas
js
xchg
fadd
inc
scas
mov
ss
sub
icebp
stos
jb
add
fs
stos
mov
and
in
cmps
xchg
dec
int3
sahf
xchg
mov
outs
pop
es
int3
retf
sbb
into
stos
out
popa
xor
jle
inc
sub
mov
arpl
arpl
pusha
rol
dec
xchg
popf
add
imul
xor
pop
sub
das
sahf
pop
jmp
push
dec
out
pop
inc
pop
js
rcl
rcl
mov
jp
jmp
out
call
stos
mov
imul
retf
(bad)
sbb
ins
push
or
cmps
ror
out
lods
aas
xor
mov
adc
hlt
ins
shl
adc
jmp
fisttp
jmp
mov
aaa
test
popf
xlat
ds
rcr
into
adc
pop
inc
out
cmp
xor
jnp
mov
and
add
adc
sar
jle
iret
inc
cmc
cmp
data16
pushf
cmp
dec
or
or
jg
sbb
xchg
mov
lods
mov
mov
call
les
pop
sbb
retf
mov
(bad)
enter
nop
pop
into
int3
jne
call
add
call
out
mov
lock
mov
cmc
leave
repnz
mov
aad
push
cmp
push
dec
mov
fs
mov
dec
scas
pop
push
push
enter
push
rol
lods
xchg
dec
int
ins
push
pop
lea
inc
mov
add
jecxz
ror
(bad)
fisub
je
test
lods
jecxz
sbb
push
std
pop
push
push
mov
cmps
pop
add
adc
in
sub
sbb
xchg
lock
fcom
xchg
mov
scas
out
mov
cmp
or
sub
xchg
dec
pop
mov
data16
movs
out
stos
and
sar
addr16
test
cmps
fdivr
icebp
ins
jo
mov
or
pop
add
mov
clc
lahf
sub
das
nop
mov
shl
fiadd
xor
bound
ins
jge
dec
cmps
add
shr
mov
aam
push
fidivr
mov
loop
imul
push
lods
cmp
xchg
adc
in
shr
mov
inc
sub
add
rcl
push
jns
retf
ins
xchg
jmp
push
cli
add
std
and
sub
inc
inc
add
dec
pop
movs
scas
je
in
rcr
push
sbb
dec
int3
call
stos
push
mov
test
pop
popf
xchg
xor
adc
add
mov
shl
adc
mov
ja
xor
inc
test
mov
mov
jnp
lahf
sbb
and
sub
cdq
fst
sahf
push
jns
or
idiv
cld
or
jmp
add
push
add
adc
add
in
adc
xchg
pushf
inc
push
mov
aas
pop
mov
in
mov
enter
bound
fld
ss
or
and
(bad)
fwait
stos
adc
sub
lods
cmp
imul
idiv
add
and
xor
sbb
sbb
inc
fs
call
xchg
xor
sub
ja
and
ins
jp
mov
mov
xchg
xlat
enter
shl
cmp
dec
push
jle
(bad)
sahf
sub
inc
call
mov
into
outs
inc
or
ror
xchg
int
(bad)
(bad)
ja
pop
or
shl
test
or
sbb
sar
pop
movs
addr16
cmp
les
pusha
mov
ins
xchg
add
jl
loopne
jae
inc
add
push
call
sub
(bad)
pop
outs
out
movs
test
pop
sbb
call
popa
ja
pop
jmp
and
mov
sub
out
idiv
in
mov
scas
xabort
sbb
cs
mov
fidivr
js
jno
hlt
mov
xchg
pop
adc
dec
imul
in
xchg
stos
xor
enter
jns
pop
leave
iret
enter
xchg
leave
mov
into
cmps
aaa
mov
data16
push
repnz
fldenv
jne
sub
mov
pop
push
xor
out
hlt
outs
fsubr
rol
dec
mov
mov
out
scas
xchg
bound
sbb
sbb
pop
retf
inc
lahf
fs
dec
push
xchg
mov
fistp
cmp
jmp
retf
push
jle
inc
fs
(bad)
sbb
xchg
mov
lock
sbb
out
lods
xchg
test
push
or
pop
mov
into
xchg
stc
and
cdq
cmp
or
mov
cmp
cmp
mov
(bad)
imul
xor
cmp
mov
std
and
cmp
push
xchg
fidiv
fucomi
xchg
jo
repz
xor
jae
mov
mov
outs
fdivr
retf
push
loopne
sbb
lods
jmp
adc
mov
jle
rol
call
xor
es
and
sti
arpl
or
pop
jns
movs
lea
retf
fsubr
xor
xchg
sub
pop
aam
mov
pop
fmul
fdiv
cmp
ret
arpl
xor
mov
sti
sub
mov
or
push
(bad)
clc
pop
push
xchg
sub
aad
xor
ins
jmp
lock
sbb
sbb
dec
aas
inc
adc
popa
dec
stos
or
pusha
cmp
movs
push
and
mov
out
call
push
jae
add
ret
mov
and
dec
dec
test
add
shr
xchg
out
pop
adc
retf
cmp
mov
movs
adc
xlat
push
cmp
push
or
icebp
push
or
mov
or
push
push
outs
jnp
mov
sub
enter
bound
xchg
add
jmp
int3
ins
xor
rcr
imul
jo
push
push
sbb
fmul
push
inc
xor
iret
xchg
mov
sub
cmps
std
mov
iret
je
lods
call
fild
mov
xorps
int3
pop
push
and
into
leave
mov
call
push
or
js
and
mov
jmp
hlt
in
loope
test
pop
lods
sbb
es
push
pop
xchg
jmp
push
int3
add
cmps
xor
cs
jo
ficom
pop
mov
call
jb
out
imul
push
sti
add
and
ret
ret
loop
ins
sahf
sbb
cmps
icebp
cmp
sahf
or
add
ss
call
dec
dec
pop
and
test
mov
repz
pop
(bad)
std
mov
loope
int
pop
std
test
push
sti
push
xor
mov
in
pop
push
shl
mov
rcr
and
push
add
js
cmp
xor
cdq
jmp
lods
mov
mov
mov
mov
sti
dec
jle
movs
dec
aaa
or
test
and
mov
push
pop
ins
stc
mov
sti
sar
push
test
ss
ds
xchg
imul
push
jae
test
stos
mov
fmul
mov
stos
inc
push
dec
not
ret
mov
test
int3
sub
pop
inc
dec
cdq
xchg
sub
data16
xchg
lahf
pop
outs
sbb
stos
mov
popf
xor
push
add
sub
or
dec
and
mov
inc
mov
into
xchg
out
pop
xor
sbb
sub
and
cmp
fisttp
dec
xchg
jb
cmp
pusha
cmp
pop
ror
push
loop
test
shr
pushf
xlat
call
sub
xchg
dec
jmp
adc
pop
add
adc
or
or
jo
mov
sahf
xchg
rcr
int
daa
movs
mov
or
movs
mov
mov
jle
push
inc
pop
push
les
idiv
fnsave
sub
jl
call
jns
out
mov
fadd
scas
push
cmp
dec
push
mov
clc
in
sub
add
pop
test
nop
sbb
out
pop
mov
cmps
xor
or
push
jecxz
sbb
cmp
int
xlat
lds
daa
pop
or
xchg
add
sbb
mov
(bad)
xlat
mov
push
ja
jo
shl
mov
retf
xor
jns
lods
shl
std
mov
mov
xchg
pop
xor
movs
push
sub
out
add
mov
retf
arpl
push
stc
mov
in
add
dec
dec
cmp
popa
push
lock
xchg
push
push
(bad)
sbb
imul
daa
mov
sub
xchg
rol
sbb
cmp
cmp
ins
data16
shl
(bad)
cli
cwde
jb
pop
(bad)
jmp
call
push
imul
pop
loope
push
(bad)
xchg
addr16
daa
cs
mov
in
nop
ret
mov
sub
jo
test
dec
jmp
(bad)
pop
(bad)
xchg
sub
imul
aam
outs
retf
or
in
jp
mov
mov
es
cdq
cmp
mov
ret
in
cmp
lock
retf
pop
pop
add
add
pandn
jae
xchg
movups
add
out
stos
xor
pop
push
les
mov
xchg
(bad)
mov
push
ss
nop
xor
enter
add
sub
and
aaa
imul
inc
adc
div
inc
xor
rcl
and
mov
fs
push
dec
push
xor
clc
pop
nop
xor
in
sbb
lods
cmp
xor
cmp
dec
jecxz
xchg
rep
(bad)
rcl
xlat
cli
pop
xchg
aam
int
jne
xchg
add
pop
loope
inc
clc
mov
adc
je
or
cmps
arpl
addr16
sub
mov
xchg
in
loopne
sub
ss
iret
add
psubusw
push
and
clc
xchg
(bad)
adc
push
data16
fidivr
out
out
xchg
stos
outs
or
daa
hlt
add
sbb
movs
push
jne
fild
sbb
mov
cwde
adc
popa
(bad)
jns
push
pop
push
dec
cmp
push
inc
jp
shl
mov
and
rcl
mov
dec
xor
mov
or
fwait
xor
sub
jg
mov
fcomp
mov
adc
aad
loopne
sar
add
jo
add
push
aas
pop
sbb
lahf
repz
push
push
in
push
inc
cmp
and
test
loop
cmp
icebp
fsubp
cli
cmp
cli
and
push
mov
adc
xor
loope
sbb
add
(bad)
loopne
repnz
sar
or
xor
cmc
sub
xchg
xchg
and
mov
hlt
jp
loopne
ss
stos
cmp
aam
push
and
cmp
push
(bad)
outs
and
addr16
pop
pop
aaa
pop
addr16
pushf
push
jns
hlt
arpl
push
dec
test
dec
mov
mov
sti
jb
xchg
addr16
sub
loop
into
sub
and
jecxz
mov
cmp
repnz
imul
ret
nop
push
jp
ja
adc
imul
ins
jmp
das
ret
fisub
push
inc
idiv
sahf
or
stc
ror
pop
pop
sbb
in
and
fiadd
push
fnstenv
cmp
xchg
stc
enter
test
dec
outs
out
sub
loopne
jge
and
xchg
sub
ficom
jbe
adc
dec
out
inc
retf
mov
xchg
pushf
xchg
(bad)
shl
ret
or
rol
or
cmp
je
(bad)
ret
test
mov
aaa
ins
addr16
dec
mov
inc
cmp
push
repnz
mov
pusha
test
ret
setb
out
cmp
and
fwait
mov
sub
pusha
repz
xchg
aam
daa
cmp
mov
add
jl
ja
in
pop
xchg
pop
or
lock
xchg
xchg
mov
sbb
sbb
sub
sbb
or
xor
adc
inc
pop
scas
cmp
mov
out
sbb
and
pop
sbb
push
push
push
xchg
push
lea
mov
add
mov
adc
ja
lods
mov
bound
mov
mov
adc
cmp
pop
mov
jbe
jo
lea
adc
cdq
mov
les
mul
mov
clc
ins
jnp
xchg
pop
imul
ins
sub
scas
push
je
mov
pop
dec
or
cs
ja
popa
out
sub
sbb
popa
xchg
gs
bound
push
cmc
(bad)
pop
dec
in
adc
rcl
fisubr
and
add
mov
or
fsub
not
sub
and
xor
inc
rcr
stos
inc
dec
sar
mov
aas
int
dec
sub
inc
ror
pop
jmp
outs
inc
cli
test
loop
inc
mov
fwait
daa
test
mov
jnp
xchg
xor
mov
cmps
cs
mov
in
xor
popf
aad
test
popa
sub
std
inc
xor
lock
stos
je
xor
mov
iret
int3
rol
retf
vmovdqu
aaa
jne
cmps
mov
in
fs
outs
or
mov
mov
xor
cdq
mov
ror
xor
xchg
movs
cmp
inc
aas
rol
xchg
sub
clc
mov
xchg
cdq
repz
sub
into
xchg
inc
call
iret
inc
dec
mov
add
push
stc
fsubr
call
cwde
pop
cli
out
fsubr
add
mov
scas
mov
lahf
scas
cli
sar
mov
rcr
pop
les
xor
ds
jb
clc
mov
cmp
ds
sbb
jne
inc
xor
xchg
and
gs
push
cmp
sar
inc
sbb
fimul
mov
inc
mov
mov
xchg
inc
test
ficomp
aaa
sar
je
add
or
and
ret
mov
leave
imul
xchg
mov
out
cwde
cmp
xor
fdivr
push
call
xor
cmp
cdq
xchg
loope
jmp
push
mov
sbb
iret
and
ret
arpl
mov
fist
adc
hlt
inc
cld
mov
rcr
push
and
call
push
sub
inc
cdq
(bad)
and
or
shr
stc
xchg
jb
in
push
pop
in
adc
sub
or
xchg
sbb
mov
jecxz
loop
out
jne
pop
es
leave
lds
ss
out
stc
(bad)
frstor
out
gs
or
inc
lods
pop
ss
adc
outs
adc
fwait
cmp
test
mov
bound
and
xor
push
sahf
sahf
pop
sub
mov
std
arpl
js
ins
es
lds
pop
dec
aad
mov
mov
lods
bnd
cs
xchg
inc
add
mov
or
sbb
and
pop
aaa
mov
sub
addr16
call
cld
mov
repz
sahf
mov
fidivr
leave
loope
in
cwde
div
push
rol
lods
inc
(bad)
adc
outs
mov
js
mov
pop
or
xchg
mov
ins
iret
xchg
sub
and
pop
in
push
add
jl
sbb
dec
ret
pop
lahf
ds
xchg
mov
jmp
jecxz
lods
mov
mov
enter
lods
push
sbb
xor
cmp
sbb
jmp
add
dec
push
cmp
mov
push
cmps
mov
mov
hlt
stc
lods
mov
sbb
mov
cmc
aam
or
stos
jl
sbb
outs
add
cld
dec
mov
xchg
mov
cwde
mov
inc
xchg
push
sub
rcl
loope
es
nop
fs
in
jnp
and
mov
push
sbb
(bad)
movs
mov
xor
fst
mov
jns
inc
pop
or
adc
jl
in
rcl
(bad)
mov
jecxz
cmp
mov
hlt
push
sbb
jae
popf
cmp
cmps
push
mov
or
movs
iret
iret
daa
cwde
sar
fsubr
jo
inc
mov
movs
(bad)
not
sbb
into
jecxz
cmp
sar
call
inc
xchg
ins
test
cdq
(bad)
into
sbb
or
add
fdiv
clc
aaa
jno
add
jle
repnz
aaa
addr16
add
push
jmp
adc
and
xchg
jp
push
pop
mov
dec
repnz
push
popa
and
and
and
xchg
je
cmp
psubq
dec
mov
iret
add
mov
sysexit
les
dec
and
pop
push
movs
je
push
push
frstor
fcmovnu
or
adc
push
popf
sub
out
mov
dec
jmp
xor
xchg
enter
jecxz
jge
lea
icebp
scas
inc
xlat
movs
xchg
idiv
jg
pop
ss
es
aas
jne
pop
ret
mov
scas
movsx
movs
int
(bad)
xchg
cmc
pop
outs
sub
bound
add
out
push
je
push
out
pushf
gs
mov
test
dec
stc
xchg
and
adc
stos
(bad)
scas
ss
dec
sub
mov
mov
call
adc
fidiv
jb
mov
lods
mov
lods
adc
xor
or
sub
push
(bad)
fstp
mov
icebp
add
retf
stos
sbb
shr
rcl
inc
push
call
inc
cld
call
leave
loopne
hlt
push
fwait
mov
xchg
inc
and
sahf
push
in
jmp
std
out
dec
mov
xchg
xchg
enter
sbb
mov
xlat
push
(bad)
push
dec
cmc
mov
pop
dec
jg
sbb
jle
pop
mov
cli
or
gs
sbb
rcr
mov
pop
xchg
loope
sub
loopne
in
or
sbb
push
sbb
pop
outs
sub
movs
in
sbb
or
rcl
rol
sub
stos
mov
jo
and
pop
test
(bad)
shr
call
addr16
push
add
(bad)
mov
cmps
sbb
xlat
dec
pop
mov
or
dec
test
aas
dec
mov
fcom
push
cmps
lods
xchg
pmulhw
adc
sbb
dec
ret
arpl
inc
cmp
adc
push
fs
out
inc
or
push
data16
aas
cli
xchg
rcl
fstp
mov
dec
sub
mov
pop
mov
push
jo
callw
sub
imul
cli
ficomp
and
fmul
lahf
add
xchg
stos
mov
mov
mov
ror
fwait
cmp
sub
pop
add
in
adc
adc
add
push
mov
je
xchg
add
in
mov
adc
sbb
outs
out
dec
imul
jnp
lods
cmp
mov
lods
push
fwait
mov
xchg
fld
sbb
and
bound
(bad)
iret
jge
mov
adc
mov
xor
ins
sti
push
sub
sub
int3
(bad)
xchg
mov
popa
gs
jae
pusha
je
jmp
stos
mov
mov
test
fsub
adc
shl
fidivr
and
push
dec
xchg
ds
xchg
and
mov
test
cmps
cmp
push
test
mov
cwde
stos
movs
add
out
sub
mov
sub
in
lock
and
arpl
adc
push
jecxz
scas
imul
cdq
std
fisub
push
js
jle
fistp
push
cli
shl
push
lea
pop
(bad)
(bad)
icebp
fisttp
inc
jmp
cdq
adc
mov
or
inc
jg
bound
cmp
sbb
sub
pop
sbb
rol
pop
inc
or
cmp
mov
test
and
and
sbb
ds
push
test
sub
push
or
xchg
test
mov
test
ror
push
push
pusha
repz
push
push
xor
add
iret
ret
inc
xlat
push
inc
in
jl
mov
shl
mov
mov
or
cmps
mov
je
sbb
xor
jmp
adc
sub
aaa
rol
push
into
cmp
es
inc
scas
retf
clc
push
aaa
fcmovnb
out
jno
out
xchg
(bad)
adc
dec
out
sub
ds
scas
dec
and
clc
ret
lock
fnstsw
push
fld
mov
or
rol
xor
mov
sahf
add
mov
jne
scas
mov
xchg
sub
add
je
enter
popf
out
in
bnd
mov
sahf
xor
xor
(bad)
fwait
dec
add
pop
xor
cmp
pop
add
pop
ins
push
xchg
clc
xor
sub
inc
fnstenv
sbb
dec
cwde
jmp
bound
je
mov
std
sbb
mov
add
popw
xchg
jbe
xor
mov
xchg
mov
ds
(bad)
int
jno
stos
xlat
pop
xor
pop
pop
fmul
jb
pop
(bad)
dec
jge
cmp
mov
popf
stc
ss
fsubr
scas
sbb
hlt
or
in
mov
icebp
push
jmp
push
out
sbb
sbb
jge
cmp
cdq
clc
ja
imul
jae
fld
cmp
xchg
pop
mov
enter
add
push
jmp
nop
sti
ret
mov
fcomp
sahf
icebp
mov
sti
xlat
icebp
and
jecxz
mov
addr16
mov
ds
push
sub
jo
cmp
ror
retf
mov
sbb
movs
test
inc
test
push
ffree
pop
in
out
fwait
pusha
mov
inc
(bad)
sub
adc
mov
pop
out
or
fcmovne
shr
call
(bad)
ds
push
not
shr
xor
aam
xor
aam
cmp
pop
shl
rcr
mov
mov
sub
jo
xchg
in
pop
shl
fild
popf
pop
loopne
add
mov
nop
or
push
pushf
repnz
pop
xchg
inc
mov
sbb
retf
arpl
mov
push
into
frstor
adc
mov
and
std
lahf
ret
push
call
pusha
sub
sbb
rol
or
pop
and
jle
xchg
add
iret
sbb
push
ds
out
loope
jmp
and
add
add
sahf
ror
(bad)
sar
es
lock
ror
jae
ja
pop
sbb
test
inc
lock
arpl
pop
mov
neg
es
out
test
sub
iret
ret
cmp
stos
sbb
rcl
jle
inc
cmc
je
mov
into
loopne
nop
cs
lods
jbe
add
sub
mov
mov
inc
imul
sub
adc
xchg
cmp
push
adc
aam
mov
sbb
data16
sub
jo
ins
lock
out
test
shl
popf
inc
inc
frstor
loop
pop
push
shl
mov
ret
cmp
test
dec
shr
bound
push
pusha
mov
xchg
pop
cmps
(bad)
js
mov
sbb
jnp
or
ret
mov
sbb
cmp
xor
loop
sub
cmp
out
mov
out
add
scas
movs
jl
sub
fidiv
or
frstor
das
xchg
movs
xchg
push
les
lea
pop
les
aam
lods
dec
push
out
push
pop
jnp
retf
outs
mov
in
daa
pop
sbb
pop
cmp
push
adc
stos
jnp
sahf
mov
nop
xor
jae
or
sbb
shr
xchg
push
ins
cmp
aam
and
inc
(bad)
(bad)
ins
fidiv
pop
test
ss
cmp
pop
mov
enter
mov
adc
gs
xchg
icebp
cld
ja
ins
cwde
loopne
pop
fdiv
mov
dec
das
test
inc
mov
ret
das
outs
sbb
dec
retf
xchg
scas
cmp
and
out
pop
ja
jecxz
outs
mov
push
sbb
xchg
and
push
in
sbb
adc
xor
inc
xor
and
xchg
in
fnstcw
push
sahf
xor
stos
sbb
mov
dec
cld
(bad)
push
inc
mov
int3
mov
in
popa
test
and
out
test
sti
outs
mov
in
repz
test
test
scas
sub
xchg
adc
ja
je
and
xchg
int3
aam
and
pop
pop
daa
adc
ins
in
enter
push
rcl
(bad)
daa
popa
jle
push
xor
xchg
cmc
(bad)
int
call
xchg
jge
std
loope
shr
lock
aaa
mov
stos
push
call
jbe
aam
mov
mov
push
xchg
sahf
retf
daa
arpl
mov
push
dec
iret
mov
sahf
lods
iret
dec
(bad)
cli
adc
es
std
fmul
pop
pop
test
mov
cmps
lock
in
les
mov
mov
pop
jl
cmovno
dec
sub
mov
cs
lods
mov
lods
movs
std
add
mov
sub
(bad)
xor
cmp
sbb
bound
adc
icebp
push
daa
sti
iret
xchg
sbb
jmp
ins
jg
pop
outs
xor
mov
pop
into
inc
call
clc
mov
mov
sbb
std
stos
sub
jmp
call
in
je
push
adc
dec
xchg
retf
(bad)
in
add
jmp
fwait
lahf
and
icebp
scas
std
mov
push
xchg
lds
sub
fwait
cmps
xor
in
ror
mov
loopne
in
(bad)
push
pop
cdq
dec
not
cli
out
mov
in
inc
in
lods
out
jb
xchg
ins
icebp
popa
xor
or
push
jl
inc
jle
in
mov
xchg
jg
mov
mov
adc
or
ret
mov
mov
cmp
xchg
ins
adc
mov
adc
mov
add
fadd
lahf
ds
push
(bad)
(bad)
adc
cld
shl
xor
inc
aad
test
aaa
jl
out
pop
cmp
xchg
rcl
cld
add
xchg
cmp
jmp
stc
dec
xor
clc
aam
inc
push
sub
pushf
in
rol
int
push
aaa
jl
ss
sti
outs
retf
and
movs
add
sahf
or
bound
outs
fimul
loopne
in
push
inc
je
jg
sti
(bad)
ficomp
call
mov
cmp
call
dec
jne
mov
push
adc
cli
les
add
ret
imul
sub
adc
inc
push
lods
adc
bound
mov
push
mov
pop
ss
mov
jmp
inc
cwde
push
mov
je
mov
sub
scas
aas
sbb
adc
lods
inc
pop
pusha
movs
adc
mov
xlat
fwait
call
and
cmp
jns
into
jmp
jl
cmp
cmp
dec
inc
jne
es
out
pop
mov
mov
sahf
icebp
mov
loope
xor
push
jg
mov
pusha
das
or
cmp
cs
add
sbb
pop
in
inc
and
add
inc
daa
xchg
dec
jg
push
into
mov
sbb
mov
nop
nop
adc
cmp
scas
std
out
cmc
aad
add
test
and
mov
cmp
ret
lods
and
pop
mov
sbb
cmps
retf
into
shl
jo
mul
in
mov
out
jno
push
add
or
int
cmc
bnd
mov
and
inc
enter
out
cmp
mov
dec
sar
popf
jmp
or
sbb
hlt
mov
xchg
shl
into
into
adc
adc
arpl
rol
das
out
adc
(bad)
mov
add
pop
das
push
sub
xchg
xlat
sub
xchg
mov
leave
cwde
cwde
shr
mov
mov
mov
or
aaa
fisubr
retf
shr
push
shl
mov
mov
add
retf
xor
sbb
int
cdq
bound
retf
pusha
adc
add
push
mov
popa
sbb
retf
mov
sbb
inc
aas
into
cwde
je
aas
jmp
repnz
int
add
jb
(bad)
mov
test
xchg
mov
sti
mov
push
xlat
nop
push
test
xor
outs
pop
mov
pop
push
sti
retf
movs
das
(bad)
fisttp
lock
enter
jle
cwde
int3
call
mov
sahf
mov
jge
lds
in
je
stos
mov
sub
stos
xchg
dec
dec
ds
ret
inc
les
mov
fld
or
xchg
scas
mov
jns
mov
inc
jl
sbb
push
jo
mov
mov
mov
xchg
mov
enter
push
pop
adc
mov
pushf
das
and
(bad)
call
push
push
call
sub
adc
out
push
adc
inc
aas
arpl
mov
popf
inc
adc
jnp
mov
cmp
loop
add
mov
mov
xor
mov
out
inc
add
movs
mov
jp
adc
sti
inc
sbb
xor
js
outs
jno
and
jno
out
unpcklps
movs
jae
enter
and
and
rcr
ds
scas
repz
jae
pop
mov
pushf
call
push
mov
xor
mov
pop
mov
mov
push
or
pop
push
js
push
bound
cmp
xor
arpl
push
rol
push
xchg
dec
int3
inc
(bad)
cmp
inc
dec
ins
xchg
mov
cmp
jmp
lods
add
rep
xchg
enter
adc
call
loop
out
mov
out
mov
aad
test
add
nop
jns
rol
aaa
ror
dec
inc
jmp
mov
jns
cdq
add
push
xchg
xchg
imul
inc
mov
pop
loope
stos
adc
jmp
jg
jne
call
loop
mov
dec
mov
push
enter
pop
ins
cmp
push
add
ficom
jecxz
jmp
mov
stc
(bad)
xchg
mov
xchg
add
mov
gs
lods
icebp
adc
sub
sub
js
mov
fbld
call
push
(bad)
sub
and
mov
push
mov
push
sbb
inc
fistp
pop
stos
pushf
mov
cdq
loopne
jle
or
jmp
retf
sub
in
or
push
xchg
cs
push
aad
adc
add
mov
xor
pusha
(bad)
fistp
pop
inc
mov
jb
ss
and
cli
pop
movs
test
add
sub
dec
jl
jne
bound
sahf
sti
mov
and
inc
cmp
mov
and
div
daa
fbstp
sub
out
pop
add
imul
jae
jae
iret
push
out
add
aas
loope
mov
pop
sbb
push
push
jge
std
sbb
adc
test
hlt
out
pop
je
vxorps
dec
sbb
adc
mov
in
in
push
xchg
mov
stos
push
add
push
jnp
dec
test
adc
movs
in
movs
add
pop
nop
sbb
cld
outs
cdq
add
mov
inc
sbb
movs
ins
aad
inc
movs
loopne
mov
push
push
out
sub
aas
add
fstp
sub
cmp
cmp
cmp
imul
ret
xor
dec
shl
dec
jno
(bad)
loopne
mov
push
aad
or
das
xchg
ja
ror
sbb
mov
jns
arpl
xor
mov
test
mov
mov
nop
jg
popa
mov
jno
sub
pop
(bad)
loop
aas
add
mov
mov
pop
dec
xchg
add
clc
cmc
data16
mov
mov
push
lock
mov
adc
and
sbb
inc
fsub
leave
pop
push
outs
int
std
rcl
in
push
loop
repz
push
nop
xchg
test
or
pop
sub
fbstp
retf
cmp
div
popf
mov
int3
je
mov
mov
pop
mov
mov
popf
mov
push
rol
mov
retfw
je
ret
mov
jecxz
cld
mov
cli
iret
hlt
cmps
and
mov
sub
add
pusha
dec
jl
xor
les
sar
pusha
add
and
mov
in
xor
jne
mov
sti
dec
stos
popa
jg
cmps
aaa
retf
mov
jnp
push
pop
stos
pop
jnp
add
push
aam
jl
loop
mov
ficomp
or
jle
pop
xor
add
(bad)
push
cmps
stos
sar
or
add
mov
sub
jb
movs
fisttp
(bad)
repnz
popf
jbe
and
mov
and
add
jae
ja
inc
aad
das
sbb
pop
jg
pop
js
sar
cmp
cmp
imul
in
pop
and
xor
mov
stos
sbb
xchg
outs
cwde
loope
cmp
inc
movs
add
outs
lock
rcr
in
adc
xor
sar
call
jo
xchg
mov
mov
mov
mov
mov
xor
vmread
in
push
data16
imul
add
mov
leave
pop
cwde
push
adc
pop
imul
mov
bound
cwde
cmp
push
mov
ret
xor
sbb
pop
xor
in
rol
add
or
or
lods
pop
adc
jo
out
stc
pop
or
mov
inc
pop
cli
sub
in
inc
loopne
aad
dec
inc
adc
jo
inc
test
mov
arpl
shl
leave
shl
jp
xchg
popf
add
scas
cmp
push
cmp
inc
or
add
xor
int
gs
pop
rcr
fwait
mov
rcl
iret
add
add
ins
out
push
pop
aad
inc
aas
and
ins
gs
pop
adc
push
sub
pop
mov
js
pop
lods
ficomp
sti
mov
pop
push
cmp
jle
sahf
dec
repz
push
iret
mov
adc
stos
out
lock
stos
je
mov
retf
mov
sub
getsec
daa
mov
mov
ss
sbb
in
sti
xchg
jnp
(bad)
sub
test
dec
dec
inc
pop
jecxz
xchg
xchg
jmp
jae
mov
pop
add
fs
lock
les
xchg
mov
loopne
jne
in
dec
push
push
add
scas
mov
dec
mov
(bad)
iret
cmps
aaa
mov
xor
loop
fsub
icebp
ds
push
jp
das
dec
(bad)
ins
or
jge
push
ficomp
int3
fsubrp
xor
lds
ss
lock
stos
imul
jbe
xchg
fiadd
imul
fild
or
inc
fpatan
pop
popa
in
js
or
mov
mov
scas
call
or
push
pop
add
xor
adc
push
mov
cmps
shl
add
xlat
mov
jnp
in
lahf
push
push
lods
push
xchg
mov
out
imul
push
xor
and
movs
or
pop
rcr
mov
pop
(bad)
xlat
mov
push
in
mov
pop
inc
ficomp
mov
fstp
out
retf
adc
xor
add
ins
pop
mov
push
retf
or
aas
int3
rcl
bound
cli
es
pusha
inc
adc
mov
push
mov
shr
pushf
(bad)
sub
nop
lods
pop
cmp
mov
xchg
inc
ds
dec
bound
mov
fisub
mov
mov
out
dec
jecxz
xchg
(bad)
pop
and
(bad)
out
cmp
jp
nop
retf
push
xchg
cmp
sbb
xchg
(bad)
paddd
or
dec
xchg
inc
inc
out
sub
xor
mov
addr16
mov
xchg
push
mov
into
cmp
stos
and
jnp
push
loop
mov
lods
outs
retf
fwait
cmp
jle
mov
dec
sub
fnstenv
mov
pushf
enter
out
adc
sbb
mov
ds
sbb
int
cmp
and
cmp
xor
repnz
jle
outs
fnsetpm(287
inc
xchg
in
xchg
mov
addr16
bound
ss
in
fdivr
in
pop
jecxz
into
loope
sub
sar
fs
popa
mov
mov
(bad)
cli
int3
dec
fldenv
adc
push
daa
mov
fld
loopne
cs
mov
or
xor
inc
adc
adc
mov
or
into
ror
dec
leave
mov
out
or
push
mov
sbb
fbstp
es
add
imul
dec
mov
dec
xor
push
(bad)
rcl
cdq
pop
dec
sbb
jmp
mov
jl
xor
stos
mov
sbb
out
mov
repz
mov
das
scas
pop
xchg
sbb
mov
cmp
mov
mov
scas
cmp
clc
pop
sti
pop
adc
jmp
and
or
and
sub
pop
push
std
pop
nop
cdq
repnz
daa
sub
dec
daa
push
push
xor
pop
dec
dec
(bad)
loopne
ja
out
adc
sub
mov
(bad)
mov
das
sub
test
cmp
out
jo
fmulp
mov
jne
xor
cld
fisub
ins
and
popf
(bad)
jl
mov
dec
inc
jne
or
jne
adc
jns
xchg
jmp
mov
push
xor
jle
pop
mov
pop
sbb
fnstsw
test
sbb
jne
nop
int3
dec
jo
cmc
or
or
or
addr16
and
js
inc
aam
ss
stos
dec
jne
sub
pop
stos
or
mov
push
cmp
mov
pushf
cli
jmp
pop
sub
or
(bad)
fld
movs
aad
fwait
xchg
dec
xchg
shr
int
pop
imul
xchg
into
cld
xor
lds
add
rol
(bad)
cmps
adc
xor
mov
mov
jne
xlat
add
movs
sbb
jne
sub
ja
retf
pop
adc
jle
push
xor
test
fcomp
stos
aam
or
jnp
mov
push
cmp
cmp
pop
sub
mov
pushf
or
movs
push
iret
lea
pop
cli
push
inc
lods
es
out
aam
in
add
inc
mov
fisttp
retf
sub
adc
adc
loop
fmul
push
in
or
push
popa
fist
(bad)
cmc
mov
cmp
dec
inc
ins
jnp
pop
aad
mov
fsubr
inc
outs
pop
cmp
data16
outs
lds
fwait
(bad)
push
dec
test
pusha
dec
mov
stos
or
in
mov
or
cld
inc
add
xchg
mov
ja
xchg
add
rcl
xchg
mov
jge
adc
pusha
mov
ja
pop
bound
bnd
mov
pop
jne
sbb
push
sbb
aam
mov
(bad)
std
iret
mov
cld
clc
ins
jge
dec
(bad)
out
push
jb
sahf
mov
push
loop
xchg
lds
(bad)
and
jo
stos
arpl
inc
or
or
pop
rol
sbb
mov
mov
movs
lods
mov
and
sbb
movs
sbb
jae
push
sbb
enter
xor
push
or
push
and
imul
ss
dec
add
push
in
idiv
ja
frstor
add
addr16
in
pushf
sub
enter
sub
ja
inc
push
test
inc
(bad)
dec
sbb
inc
fmul
xchg
shr
jbe
pop
inc
imul
icebp
test
(bad)
dec
addr16
mov
je
push
cmp
(bad)
dec
or
cwde
test
in
call
aaa
dec
mov
not
(bad)
pop
(bad)
adc
mov
jl
xchg
sbb
loop
add
in
out
jmp
dec
out
leave
push
cmp
mov
jge
ins
ins
push
inc
call
jmp
sub
push
xor
xchg
or
push
call
fidiv
ret
leave
and
dec
and
pusha
aad
ja
adc
or
aaa
fild
outs
mov
neg
lea
or
in
es
jl
xor
pop
stc
les
in
pop
in
fidivr
mov
xor
dec
cmc
cmc
add
pop
mov
adc
test
stos
pop
popf
mov
xchg
fneni(8087
jge
sub
in
and
mov
mov
sub
mov
test
or
or
jle
fwait
test
in
iret
mov
in
or
test
jge
(bad)
in
rol
adc
rcl
iret
adc
(bad)
mov
mov
xchg
or
dec
cmp
inc
xchg
scas
mov
sbb
pop
inc
xchg
jg
adc
popf
in
xchg
xlat
jbe
mov
mov
mov
mov
cdq
sub
popa
mov
loopne
push
int
mov
std
scas
add
mul
pusha
sub
js
sahf
loop
in
pop
hlt
mov
push
ins
pop
adc
pusha
inc
sbb
mov
cdq
out
fsub
inc
pop
push
xchg
jb
scas
jns
jb
mov
jmp
push
push
test
xchg
or
loopne
daa
neg
js
sbb
or
ret
jge
mov
shl
fwait
pushf
(bad)
gs
into
cmc
icebp
rol
sbb
mov
int
jle
(bad)
sbb
call
nop
rol
ret
sahf
cmp
test
sbb
mov
sub
lea
jae
pop
push
js
retf
fist
out
into
cmp
test
lds
sbb
clc
sti
add
sti
fsub
xchg
cmp
adc
loopne
or
lahf
mov
dec
cmp
push
push
sub
stos
outs
out
jns
test
pop
xchg
imul
inc
jmp
es
xor
add
xor
and
pop
les
add
out
in
test
cmp
and
dec
arpl
mov
and
fdivr
retf
dec
lea
data16
adc
jecxz
cmp
jns
in
aam
neg
fcomp
cs
sbb
jg
mov
push
mov
pop
fcomp
dec
je
xor
icebp
leave
inc
push
into
cmps
add
retf
imul
aas
jg
sub
xor
mov
out
in
push
and
cmp
xchg
pop
jle
popf
xchg
jle
clc
ins
xor
in
cmp
sub
rcr
pop
add
(bad)
mov
retf
fs
sahf
adc
mov
cli
push
push
push
mov
jnp
ins
pop
add
adc
nop
je
in
or
xor
xchg
pushf
aad
stos
bound
mov
int3
mov
mul
jle
pop
dec
sbb
inc
jne
fimul
out
cld
jns
xchg
pop
or
outs
inc
jmp
in
icebp
jl
cmp
sbb
and
aad
inc
mov
or
mov
adc
inc
pop
sub
or
fs
aas
ins
push
pop
jb
popa
sbb
adc
iret
mov
jge
test
cwde
xchg
jb
jns
push
mov
fiadd
ja
xor
adc
rol
jp
or
sub
in
add
inc
sar
sahf
push
fdivr
xor
mov
in
ret
lock
hlt
dec
jge
mov
dec
mov
xchg
jg
icebp
ret
inc
inc
aam
inc
mov
ffree
push
in
ins
push
mov
cmp
psubq
push
mov
cmp
add
mov
test
int
dec
mov
stos
mov
out
mov
add
pop
rol
shr
mov
cmps
cdq
mov
in
sub
sub
ror
xchg
lahf
xchg
pusha
gs
iret
sti
pop
cmps
nop
mov
dec
shr
scas
inc
fisubr
adc
mov
or
push
mov
outs
cwde
inc
movs
xchg
js
stc
sbb
add
ror
fld
push
add
cmps
sti
test
ins
jg
sbb
imul
xlat
or
je
add
add
mov
fnstcw
sub
fldln2
cmc
(bad)
sbb
dec
stc
out
(bad)
in
scas
sub
imul
aam
inc
aad
jmp
xchg
and
push
leave
test
ds
loop
xchg
push
cmp
sti
test
ins
mov
call
movs
int3
add
push
movs
out
sbb
mov
mov
cli
pop
(bad)
gs
loop
imul
stos
cmp
cs
cli
int
pop
lahf
ss
ins
out
data16
push
push
cmps
retf
dec
ret
mov
std
stc
sub
outs
push
adc
jnp
mov
mov
ret
pusha
mov
or
mov
inc
dec
jnp
xchg
mov
into
add
sbb
popa
rol
stc
scas
or
call
pop
es
call
popf
les
xor
pop
cld
mov
cs
fs
enter
cld
ss
xchg
cmp
mov
mov
movs
pop
jp
inc
push
jb
ret
pop
aam
mov
adc
dec
jl
and
(bad)
repnz
sbb
pop
cdq
out
shl
mov
imul
aas
push
adc
cmp
cmp
lea
mov
pop
xor
stos
scas
leave
xlat
rol
stc
sub
aam
dec
ror
dec
call
test
(bad)
or
fiadd
dec
mov
push
ja
mov
dec
bound
and
push
sbb
retf
jbe
test
stos
or
push
mov
arpl
or
(bad)
sbb
mov
in
jmp
xchg
adc
cmp
cmp
cli
pop
push
in
mov
mov
(bad)
pop
push
push
frstor
mov
mov
test
or
cwde
aam
sar
dec
pop
dec
icebp
imul
mov
sahf
dec
fisub
arpl
loope
jg
loop
rcl
xchg
adc
mov
and
ror
adc
mov
lods
and
outs
xor
fldenv
idiv
mov
cmp
icebp
les
imul
inc
std
adc
mov
fisub
les
xchg
xor
(bad)
mov
cmp
adc
sbb
aad
cmp
ja
mov
(bad)
push
ss
sub
cmp
loop
in
(bad)
out
jns
aas
sbb
push
and
loope
retf
jnp
xchg
rcl
int
and
pop
loop
outs
cmps
sahf
and
inc
lock
xchg
out
jl
stc
repz
add
cmp
mov
jmp
xchg
leave
sahf
(bad)
mov
dec
icebp
ret
push
cmp
retf
mov
test
sahf
jb
push
loop
dec
push
fadd
(bad)
lahf
lock
cli
rcr
movs
mov
mov
mov
mov
cmp
daa
pop
pusha
lea
push
dec
test
mov
fs
repz
or
xchg
push
faddp
pop
mov
sub
es
push
out
or
sub
repz
xor
js
push
arpl
hlt
jne
inc
stos
hlt
jecxz
cmp
and
ins
mov
fwait
xor
inc
xor
mov
leave
stc
cmp
ins
(bad)
or
add
adc
xchg
add
(bad)
imul
sub
aaa
mov
add
ror
or
pop
push
inc
inc
jnp
cmc
sub
inc
(bad)
lea
mov
mov
pop
mov
mov
sbb
or
and
jle
dec
xchg
ficom
in
pop
fidivr
call
pop
add
nop
cdq
push
(bad)
dec
jbe
xchg
fs
ror
test
or
aam
dec
inc
mov
test
(bad)
adc
ds
lea
push
stos
sub
pop
imul
scas
pcmpeqd
jmp
and
xchg
stos
sti
cli
push
adc
rcr
pop
pop
pop
sub
xor
pop
loope
cmp
mov
ss
push
cwde
mov
outs
add
cwde
imul
push
add
pop
cmp
adc
mov
out
xchg
imul
pushf
lods
sbb
jmp
cmps
stc
ret
mov
jp
call
icebp
mov
clc
bound
pop
jg
in
push
mov
es
xor
xor
js
cmps
xlat
sub
mov
dec
add
jns
mov
call
test
loopne
test
nop
dec
add
cs
push
repnz
or
in
and
pop
sub
push
dec
fidivr
jnp
push
lock
aaa
pop
pusha
pop
sub
inc
sub
int
jl
mov
(bad)
sbb
movs
xor
fdiv
push
push
mov
aaa
inc
fsubr
scas
inc
pop
or
jg
sub
ret
es
push
jl
mov
xchg
cmp
(bad)
mov
dec
je
das
loop
out
outs
fld
jbe
dec
fwait
pop
inc
and
sub
into
jge
inc
fiadd
leave
imul
nop
das
mov
(bad)
jns
cs
lods
cmp
pop
mov
xor
mov
cmps
sub
and
jne
mov
cwde
(bad)
jmp
(bad)
jae
data16
lahf
cmp
int3
cli
xor
inc
xor
mov
aas
jne
xor
cvtps2pi
bound
push
dec
sahf
call
arpl
xor
mov
pop
stos
pop
rol
mov
test
dec
div
test
jbe
or
pop
mov
test
jns
pop
mov
retf
mov
loope
movs
rcr
mov
push
lds
pop
imul
jne
mov
pop
popa
imul
pop
add
cmp
xchg
out
icebp
push
jge
mov
jmp
pop
outs
adc
dec
pop
push
scas
sbb
pop
or
sub
fstp
fnstenv
push
sbb
cmps
mov
jnp
jae
data16
inc
int3
es
rcl
test
jp
into
lods
push
scas
lods
dec
pusha
ins
add
mov
ret
mov
sbb
or
ds
popa
movs
push
mov
iret
dec
fcom
int
fdiv
cmps
clc
cwde
iret
push
sbb
ret
lods
mov
mov
xor
mov
repnz
fadd
jae
cmp
dec
pusha
cwde
inc
xchg
shr
and
ss
(bad)
movs
push
cwde
mov
cmp
clc
aas
(bad)
mov
out
fsub
rol
and
mov
dec
or
adc
cmp
inc
int
rol
sahf
icebp
ins
pop
inc
jmp
aam
jp
xchg
lahf
ja
adc
sub
cmps
or
push
in
ins
xor
mov
and
lds
push
ss
jmp
xchg
mov
pop
and
sub
aaa
mov
inc
movs
lock
jmp
inc
and
and
mov
mov
mov
stos
push
(bad)
sub
xchg
sbb
pop
stos
outs
mov
fs
adc
shl
pop
sub
inc
push
pop
cdq
jp
and
xchg
xchg
jecxz
out
mov
add
stc
add
imul
fisttp
fwait
push
mov
fdiv
and
(bad)
xchg
mov
add
test
sub
popf
out
imul
arpl
mov
leave
pusha
mov
das
les
pushf
aam
cmp
mov
popa
fbld
out
mov
retf
xor
sar
push
or
dec
mov
(bad)
jecxz
loope
sub
jo
adc
mov
out
es
mov
and
mov
jb
mov
es
rcr
les
sub
push
in
(bad)
neg
cwde
sahf
push
js
adc
int3
(bad)
sub
mov
fcomp
cmp
repnz
xchg
inc
jecxz
push
cmp
daa
movhps
lea
push
daa
ss
mov
jecxz
inc
jo
test
sbb
test
enter
test
push
xchg
cdq
cmp
sysexit
aad
and
mov
ja
loopne
call
or
fwait
rcl
and
in
test
movs
jae
loope
mov
outs
push
mov
in
fisubr
xchg
cs
ins
ins
add
je
aas
cmps
rcr
int
(bad)
cli
test
nop
xchg
out
dec
cmp
cmps
mov
(bad)
cmp
mov
imul
xchg
(bad)
mov
arpl
jne
and
sub
jl
jecxz
sbb
sub
mov
movs
xchg
call
cdq
jmp
repz
sbb
mov
or
(bad)
call
(bad)
mov
hlt
mov
inc
je
push
enter
imul
dec
fcom
jecxz
enter
dec
inc
or
leave
pop
add
jg
inc
dec
hlt
test
hlt
xchg
mov
fadd
xchg
loope
retf
imul
shl
and
cmp
popa
cs
test
dec
faddp
sbb
add
es
and
out
call
loope
mov
(bad)
je
jge
jae
mov
xor
mov
movs
xchg
mov
test
jno
ret
mov
clc
cmps
imul
imul
lods
sbb
add
cs
movs
xor
(bad)
or
retf
lock
clc
add
mov
je
hlt
std
mov
xchg
in
or
jmp
repz
lods
movs
sbb
(bad)
in
idiv
jbe
popa
stos
jno
jecxz
and
test
inc
test
int
fnstcw
add
jmp
fidivr
imul
arpl
rsm
sbb
mov
pop
xchg
aaa
jg
adc
aad
pop
jbe
inc
dec
ja
inc
inc
scas
enter
mov
bnd
mov
(bad)
mov
cmp
mov
leave
and
sbb
lock
iret
in
jno
cmp
cmp
fwait
xlat
aas
mov
shl
jmp
pop
daa
call
stos
sbb
push
sbb
or
idiv
mov
add
nop
jbe
dec
popa
and
in
test
and
scas
ss
jno
cld
nop
repnz
jae
sub
(bad)
pop
sbb
js
and
adc
fmul
psrad
xor
push
sbb
dec
dec
add
rcl
inc
js
xor
sub
int
ficom
push
xchg
inc
bound
out
inc
(bad)
cmp
ror
mov
add
movs
fisttp
leave
ret
(bad)
xor
push
pop
push
sbb
lds
mov
dec
retf
xor
xor
ret
sbb
shl
out
cmps
mul
mov
sar
out
popa
inc
xchg
cmps
sbb
shl
adc
jno
and
push
lea
jmp
ror
cmp
mov
jmp
aaa
mov
cmp
fwait
and
xor
xor
push
test
sar
push
in
mov
movs
int3
lods
xor
push
stos
out
mov
sub
es
xor
push
rcl
xchg
ficom
xor
lds
in
mov
fidivr
lahf
dec
and
rol
mov
sub
mov
xlat
jmp
add
cmp
mov
add
sub
mov
mov
fcom
sbb
xor
fcom
gs
mov
mov
das
and
test
nop
pop
daa
int3
adc
in
pop
shl
sbb
imul
enter
(bad)
enter
sub
lea
and
or
mov
xor
mov
mov
add
jo
jno
adc
pusha
das
cmps
mov
es
sbb
cwde
sti
shr
fcom
xlat
fiadd
test
aad
push
inc
outs
pop
jmp
inc
(bad)
repnz
mov
sbb
sub
dec
lods
call
pusha
retf
push
icebp
xor
xchg
pop
sbb
clc
xor
and
daa
jle
add
cmps
(bad)
aad
adc
push
ret
or
mov
out
call
icebp
dec
mov
std
sub
into
pop
outs
mov
ror
pop
in
cli
(bad)
sar
mov
pop
push
mov
sub
in
clc
push
cmp
pushf
scas
cs
push
dec
shr
cmp
jmp
cmps
cli
sahf
mov
xor
stos
and
lods
call
aam
cmps
pop
jle
int
fcmovbe
dec
mov
pop
mov
xchg
lds
test
(bad)
je
sub
add
fadd
mov
clc
ret
fwait
jb
fsubr
sub
data16
jecxz
push
xchg
cmp
push
fs
sub
lods
mov
(bad)
inc
xor
cmp
in
mov
fwait
mov
dec
imul
jp
inc
xchg
out
sbb
sahf
repz
test
mov
call
adc
mov
and
and
xchg
imul
repnz
dec
xchg
push
out
add
fwait
xor
or
cmps
jmp
in
jb
call
or
ret
repz
lods
out
gs
jp
lods
jg
and
popa
sub
fisubr
div
sbb
pop
jbe
(bad)
mov
pop
int
retf
push
xor
and
leave
add
xchg
xchg
pop
dec
in
or
mov
and
or
clc
stos
ins
ret
push
pop
out
jbe
or
lock
xor
(bad)
cmp
lds
repz
dec
test
ja
leave
mov
mov
std
pop
and
sub
iret
push
and
and
or
sub
dec
add
retf
inc
out
or
test
(bad)
sub
add
outs
inc
sbb
xor
inc
(bad)
ds
sti
jne
mov
add
imul
test
push
std
pop
aad
pop
dec
add
push
hlt
jo
jle
dec
scas
je
xchg
ins
xchg
sub
mov
mov
out
pop
mov
mov
push
je
lods
aad
or
mov
leave
jge
sub
stos
mov
push
add
shl
mov
aaa
bound
push
mov
jle
dec
adc
xchg
fcmove
mov
xor
cmps
lods
aas
mov
movs
adc
jns
rdmsr
jns
pop
fs
ja
pop
cmps
mov
aam
repnz
(bad)
mov
test
scas
ror
(bad)
cs
icebp
aad
ficomp
xor
or
add
fist
cmp
dec
out
pop
xchg
(bad)
dec
addr16
lea
mov
push
sbb
addr16
mov
add
cmp
add
mov
mov
and
adc
adc
and
sbb
int
mov
jno
mov
xor
lods
outs
jge
add
in
push
popf
and
(bad)
push
sar
inc
popf
inc
jns
push
popf
(bad)
out
jns
mov
jge
mov
fsubp
push
inc
pop
cld
es
jns
cmp
push
lods
cmp
cld
inc
int
or
and
arpl
sbb
cmp
lock
mov
call
adc
mov
mov
sub
jl
pop
mov
sub
jmp
sub
adc
dec
add
in
mov
int3
lahf
xchg
aam
sub
adc
adc
(bad)
sub
out
pop
or
push
add
ss
sar
std
mov
push
popf
xor
pop
dec
iret
xchg
pushf
jno
pop
push
dec
cs
cwde
dec
and
repnz
inc
in
pop
test
add
dec
and
pop
mov
inc
add
or
(bad)
sub
js
or
retf
les
jmp
retf
(bad)
jmp
push
movs
mov
xchg
adc
div
cmp
jle
xor
in
mov
mov
or
jmp
lods
popf
outs
mov
cli
(bad)
mov
lahf
push
push
into
mov
loope
add
push
fwait
fwait
push
xchg
jae
mov
inc
test
mov
rcl
push
dec
push
out
dec
push
push
pop
jmp
xchg
mov
cmc
or
cmp
xchg
fcomp
jns
jl
and
sbb
cmc
cmp
adc
mov
fcomp
je
pop
shl
jmp
adc
shr
(bad)
adc
cmp
mov
scas
int
mov
loope
jae
mov
push
push
sub
push
aad
ret
mov
aas
and
sti
mov
cld
popa
addr16
jae
mov
cs
je
xchg
inc
sar
pop
cld
shl
add
dec
add
adc
cmp
or
push
in
lds
ja
xor
imul
mov
sub
stos
or
cmp
mov
js
push
mov
or
fcmove
push
in
fld
xchg
mov
int3
outs
fistp
jnp
mov
inc
xor
jp
adc
cmp
pop
hlt
enter
xor
loop
fwait
pop
dec
out
sbb
pop
push
in
mov
sbb
or
xor
addr16
inc
push
aad
test
dec
jle
push
dec
aas
test
inc
push
int3
mov
lods
test
enter
jne
sahf
rcr
sti
addr16
mov
mov
sbb
int
data16
(bad)
fisttp
les
or
loop
aam
stos
add
sub
mov
push
repz
movs
aaa
jnp
push
add
mov
cmc
(bad)
cmps
repz
xlat
icebp
mov
mov
sub
idiv
xor
imul
fsub
lea
cld
in
not
ret
adc
sub
or
xchg
cld
idiv
cwde
outs
jmp
in
xchg
jb
arpl
xlat
cmps
xchg
sub
pusha
stc
das
pop
lock
sub
or
pop
outs
mov
jns
jg
sub
mov
mov
cmc
pop
data16
loope
loopne
mov
not
shl
mov
sub
fsubr
pushf
adc
add
and
xchg
fcmove
xor
cmps
and
inc
pop
xchg
hlt
std
out
popa
or
mov
push
idiv
movs
mov
pop
lods
sub
jle
out
cmps
scas
pusha
inc
sahf
and
and
jbe
dec
and
mov
popa
dec
inc
enter
loop
(bad)
fsub
inc
les
lds
inc
xchg
mov
mov
pop
jmp
add
mov
stc
or
cmp
std
icebp
push
sub
mov
icebp
sub
jg
xor
retf
xor
shl
pop
sbb
lahf
cmp
sbb
and
mul
test
pop
cmp
mov
mov
cs
pop
push
inc
inc
mul
mov
jg
mov
outs
ins
jmp
and
or
mov
outs
jge
add
xor
xor
sbb
xchg
cld
xchg
in
xchg
xor
mov
pusha
fiadd
shl
fsubr
sub
push
lahf
nop
in
xchg
lods
out
push
mov
push
cmps
inc
mov
push
(bad)
dec
je
dec
bound
pop
dec
or
loop
pop
cld
inc
dec
sbb
mov
lds
retf
in
pop
cmp
sub
jo
not
outs
mov
dec
leave
cdq
fisub
cmp
(bad)
sahf
scas
les
push
xchg
mov
icebp
mov
ins
or
xchg
lods
mov
jb
ror
xor
loope
jae
int3
push
inc
push
outs
mov
adc
inc
jae
push
outs
sub
jmp
mov
add
jb
pop
xchg
gs
inc
call
loop
fdiv
jmp
mov
mov
fisub
js
scas
cmps
push
ror
and
mov
cld
scas
sub
dec
push
inc
jns
push
into
ret
fwait
std
dec
jecxz
iret
(bad)
lods
movs
inc
sbb
mov
push
ins
adc
test
xchg
pushf
add
in
movzx
imul
sub
cmp
sub
jno
in
xor
in
sbb
dec
pop
mov
cmps
push
sub
xor
int
push
mov
shl
jmp
test
sub
pop
popf
mov
sbb
rcl
add
ds
rcl
out
mov
mov
test
ret
ins
or
iret
(bad)
jp
xchg
pop
fabs
xchg
test
rcl
xor
ss
into
ss
or
sbb
jne
enter
mov
mov
ret
int
add
and
add
out
sbb
std
jnp
mov
aam
fsubrp
div
fwait
or
mov
sbb
xchg
test
data16
inc
into
mov
rol
ss
clc
rcl
sbb
addr16
pop
or
and
xchg
lds
cs
les
mov
jmp
push
adc
jle
enter
rcr
push
xchg
out
mov
fstp
jns
xlat
mov
(bad)
scas
mov
je
es
or
sbb
dec
pop
mov
sahf
inc
ja
push
xor
pop
(bad)
rol
xor
test
mov
xchg
mov
js
outs
or
imul
inc
jge
in
cmp
stc
out
dec
cmps
jo
jp
push
and
adc
int
xchg
add
shr
out
inc
mov
outs
mov
adc
push
fsub
dec
xchg
leave
es
cmp
push
xlat
das
jp
das
push
mov
or
rcr
add
stc
xchg
std
mov
mov
and
add
mov
sub
cwde
jne
ret
shl
retf
push
fst
lods
outs
cmp
xor
xchg
jmp
bound
jnp
push
addr16
pop
jns
mov
std
xchg
mov
(bad)
cmp
out
pop
int3
or
adc
jp
mov
in
aas
ss
data16
or
out
loop
pushf
mov
fild
cmps
outs
adc
cs
out
adc
mov
mov
test
lea
(bad)
out
into
pop
fadd
clc
in
dec
adc
mov
jecxz
ja
sub
xchg
dec
mov
fs
pushf
vmovd
inc
cmc
mov
sbb
add
adc
add
retfw
call
inc
jg
mov
pop
out
retf
(bad)
dec
(bad)
out
mov
push
pop
jmp
mov
adc
sub
mov
scas
jle
pop
loop
int3
jmp
hlt
jmp
mov
mov
push
shl
sub
jle
xlat
add
sbb
and
sbb
mov
mov
inc
and
nop
or
jb
fimul
jge
into
mov
mov
push
mov
jle
pusha
not
sti
outs
pusha
dec
rol
adc
and
idiv
out
cld
dec
sub
cmp
aad
pop
sbb
jmp
add
aas
adc
sbb
pop
jle
sbb
adc
fdiv
push
rcl
xchg
jne
fst
lahf
push
ret
jmp
retf
(bad)
adc
add
sub
scas
sti
mov
jg
or
aas
data16
fild
mov
or
call
inc
aad
imul
ss
add
movs
sbb
xor
sub
or
cmp
pop
jns
vcvtps2dq
arpl
mov
idiv
lods
out
pop
mov
add
fcmovnbe
fwait
sub
std
cdq
add
sub
loope
ficom
int
ss
mov
pop
inc
arpl
cmp
in
jg
sbb
pop
mov
jb
push
fisttp
popa
loopne
mov
pop
add
jmp
pop
inc
mov
jmp
hlt
mov
cmps
push
in
daa
dec
pop
add
mov
fdivr
push
fwait
cmp
xchg
ins
push
inc
and
loope
stos
aas
xchg
xchg
rcl
out
xor
lods
jbe
sub
pop
push
pop
jbe
shr
push
outs
sbb
hlt
adc
test
cmps
mov
stc
pop
loopne
cs
xor
push
push
imul
dec
xor
or
inc
(bad)
arpl
int
dec
movs
and
sub
repnz
sub
add
out
cwde
and
pop
fwait
cmp
xchg
mov
adc
nop
xor
mov
mov
cmp
jnp
mov
dec
loop
cmp
hlt
into
sub
jge
popa
and
inc
(bad)
adc
ror
dec
loope
push
adc
sbb
mov
aam
xchg
fistp
cmp
xchg
sbb
loop
dec
dec
inc
inc
imul
ror
shl
or
lds
sbb
es
mov
daa
sbb
aas
inc
jecxz
jl
add
out
dec
out
sbb
xchg
and
outs
jmp
jg
mov
inc
jb
ret
sbb
push
mov
mov
int3
inc
ror
scas
pop
int
adc
pop
pusha
add
lahf
fnstsw
push
test
pushf
jb
shl
mov
not
es
add
pop
loope
xchg
xor
mov
mov
or
mov
les
push
das
cmp
mov
pop
adc
vpxor
movs
jne
mov
fnstenv
pop
xlat
cmp
mov
push
sbb
inc
retf
retf
inc
fimul
(bad)
mov
lahf
inc
gs
popf
cmp
sub
adc
xchg
mov
test
into
cmp
ret
dec
leave
mov
dec
ins
imul
xor
push
(bad)
jmp
add
mov
(bad)
pusha
out
sbb
pop
ins
les
std
cmp
pop
mov
mov
repz
les
xchg
sub
cli
mov
aaa
cs
push
iret
addr16
sar
or
mov
loop
mov
mov
and
jge
jo
xchg
inc
and
sar
stos
adc
dec
push
mov
add
add
jb
or
(bad)
push
push
xor
out
inc
or
and
cmps
or
ror
push
xor
repz
jb
sub
sbb
inc
cmp
aas
or
adc
popf
xchg
shl
sub
jge
nop
add
mov
jg
dec
arpl
cmp
push
jmp
retf
call
xlat
ja
sti
jmp
movs
jmp
pop
mov
sub
dec
mov
pusha
retf
ror
cmp
xlat
or
cmps
das
(bad)
in
add
(bad)
cmp
mov
inc
jg
mov
les
outs
sub
xor
push
pop
(bad)
test
jnp
mov
sahf
sahf
xlat
mov
pop
dec
movs
retf
loopne
jmp
cwde
(bad)
lds
inc
adc
inc
jns
das
and
xchg
icebp
sbb
dec
adc
leave
push
fstp
int
pop
mov
fld
imul
shr
fnsave
push
pop
push
movs
inc
pop
dec
gs
retf
fisttp
out
enter
mov
pushf
mov
mov
out
(bad)
cs
int
sbb
sbb
enter
or
jecxz
pop
scas
movs
clc
pop
mov
push
iret
cvtps2pd
in
movs
psubusw
cmp
stos
jb
push
(bad)
cmps
xor
and
xchg
mov
sbb
rcr
jle
fild
mul
or
iret
push
pusha
cmp
stos
pop
sub
adc
fld
add
(bad)
int
jecxz
enter
data16
daa
mov
test
fiadd
cmp
mov
ss
lea
sar
in
lea
push
mov
arpl
jbe
(bad)
xchg
or
or
sbb
jo
and
push
movs
std
push
ins
add
or
leave
add
pop
and
outs
mov
rcr
mov
mov
retf
(bad)
push
idiv
xor
jg
pop
xchg
movs
dec
inc
pop
and
xchg
mov
cmp
mov
ins
sub
xchg
mov
mov
add
dec
xchg
pop
push
xchg
push
dec
dec
push
aaa
sub
(bad)
sbb
sbb
push
ret
jecxz
cli
aam
shl
out
mov
dec
call
mov
dec
xchg
rol
into
pop
xor
mov
inc
lods
xchg
xor
sbb
pop
call
(bad)
es
test
fs
push
rol
loop
mov
(bad)
xchg
push
push
std
mov
mov
fidiv
enter
xor
mov
fdisi(8087
sub
jle
shr
in
mov
cli
push
loope
push
jl
mov
fistp
(bad)
mov
out
inc
jmp
cmp
mov
cdq
adc
(bad)
cmp
aas
pop
inc
fmul
sub
cmps
xor
add
adc
sti
push
sahf
fistp
les
jo
nop
jbe
fidivr
lods
or
in
push
nop
test
daa
dec
out
or
or
out
test
ror
fdiv
mov
inc
sbb
das
popa
cmp
loop
inc
cmps
pop
fsubr
loope
push
lds
mov
dec
(bad)
(bad)
pop
call
shl
into
in
daa
into
bswap
fldenv
pop
in
inc
push
test
mov
jmp
jecxz
mov
cmp
sub
aam
repnz
and
nop
adc
inc
clc
add
xchg
scas
(bad)
cmp
xchg
jmp
fistp
add
das
fiadd
out
cmc
in
xor
into
sub
xchg
xor
test
out
inc
adc
and
xor
(bad)
daa
mov
das
fisub
or
in
mov
and
cmc
adc
pop
jg
test
ja
out
mov
or
add
add
mov
pop
adc
pop
aam
mov
js
mov
js
cmp
and
inc
and
inc
cmps
mov
push
xchg
mov
mov
std
cmc
xchg
js
add
pop
add
loop
sbb
xlat
int3
jo
cld
pushf
aas
jmp
imul
mov
repnz
cmp
xor
sbb
adc
(bad)
jns
div
rcl
in
es
daa
iret
push
push
out
push
sbb
pop
jecxz
cmp
out
jnp
pop
mov
popa
cs
je
add
jmp
inc
into
cs
or
(bad)
fiadd
cmps
cs
fdiv
add
mov
inc
add
nop
(bad)
cmp
xchg
xlat
jmp
add
cmp
mov
popf
pop
aas
jne
arpl
fldenv
dec
adc
cmp
test
jle
addr16
xlat
pop
push
xor
inc
xchg
cmp
cdq
lods
inc
inc
(bad)
pop
(bad)
aas
pop
pop
adc
mov
pusha
mov
repnz
mov
pushf
fist
inc
test
adc
xchg
cdq
add
cdq
mov
stos
aad
das
mov
mov
je
jb
and
cmp
or
(bad)
jecxz
loopne
add
mov
add
daa
sub
cli
adc
scas
jnp
cmp
mov
pop
call
rol
fadd
cld
retf
sub
cmp
cld
out
or
dec
jl
pop
stos
sahf
or
push
sub
sbb
push
pop
loopne
ja
aaa
mov
mov
adc
in
jge
mov
lods
xchg
inc
adc
out
xor
cs
stc
push
test
xor
stc
cmps
pop
test
sbb
jne
mov
adc
mov
in
push
mov
mov
dec
sbb
stos
add
clc
data16
xlat
push
sub
or
add
stos
xchg
cli
cli
pop
jge
add
aaa
es
mov
sub
cld
imul
cmp
addr16
jb
je
in
pop
ss
fwait
mov
push
jbe
jb
mov
int
out
test
push
addr16
push
cmc
ins
mov
lods
jmp
outs
rcl
push
or
(bad)
stos
in
sub
sahf
xchg
bound
push
loopne
add
or
xchg
xchg
mov
xor
jbe
dec
pop
jmp
ins
outs
shr
add
push
sti
xchg
xchg
sbb
imul
cwde
idiv
add
or
scas
pop
push
(bad)
movs
push
adc
fneni(8087
jmp
jns
aad
fisttp
outs
aaa
and
xchg
add
out
add
lock
stos
test
mov
retf
or
ins
dec
cdq
(bad)
jo
aaa
cmp
or
jl
nop
push
and
add
test
neg
rep
and
adc
loop
and
cmp
icebp
or
cmc
cmp
nop
test
ins
pop
jg
aam
sbb
cs
jne
xchg
jnp
dec
arpl
inc
leave
popa
popa
addr16
push
ins
inc
scas
(bad)
push
inc
pop
or
test
pop
push
push
stos
xor
out
ja
rcr
cs
mov
loop
or
aad
es
aaa
lods
in
cmps
aad
clc
outs
jo
movs
sahf
stos
or
stos
xchg
popf
imul
pushf
jbe
dec
jg
jl
sbb
sahf
cmp
arpl
fwait
inc
jbe
push
mov
ins
je
imul
push
push
cs
jmp
pop
or
mov
iret
mov
hlt
push
sbb
xchg
aas
push
into
push
dec
xchg
imul
mov
push
call
inc
cld
bound
jne
xchg
popf
scas
aad
repz
mov
nop
adc
xchg
fstp
xchg
fcom
push
mov
aam
stos
xchg
imul
mov
pop
inc
xor
mov
(bad)
cli
add
cli
sbb
dec
xor
outs
push
lods
and
mov
xor
cmp
dec
mov
pop
les
push
xchg
pop
sbb
jle
pop
dec
(bad)
std
mov
shl
std
lock
frstor
hlt
and
hlt
add
adc
dec
pushf
cmp
das
int
jb
sub
hlt
leave
dec
lods
or
or
dec
(bad)
mov
mov
xor
pop
daa
stos
lods
popa
mov
push
fst
pop
int
jnp
iret
push
shl
sub
repnz
das
ret
lahf
cmp
jb
popa
mov
jae
(bad)
sbb
dec
sbb
outs
fs
pushf
inc
adc
daa
ret
into
or
xchg
mov
lds
jl
adc
sbb
mov
dec
push
jecxz
aad
or
lock
jo
xor
das
cmps
es
ins
popf
outs
(bad)
icebp
cld
loop
retf
(bad)
push
in
lods
ret
ins
and
push
jmp
jmp
sub
pusha
call
fs
lds
inc
dec
cmp
mov
mov
sub
dec
sub
mov
fcomp
leave
xor
pop
mov
or
fld
stc
rcr
mov
fldcw
aaa
add
push
pop
nop
cmp
data16
call
daa
outs
or
add
icebp
stos
ins
mov
xchg
mov
sbb
inc
sbb
or
pop
dec
ret
into
shl
xor
cld
scas
leave
jae
stos
pop
mov
cli
mov
or
out
jge
jmp
stos
dec
sbb
hlt
mov
sbb
add
daa
mov
push
aaa
(bad)
xchg
add
out
mov
xchg
sub
clc
std
push
(bad)
lea
push
leave
sub
sbb
addr16
int
push
inc
or
xor
not
xor
add
xchg
fisubr
jns
hlt
inc
cmp
sub
js
bswap
add
out
and
fucomi
retf
(bad)
sbb
push
jne
push
pop
stc
mov
outs
outs
ins
outs
bound
jns
sub
push
sahf
add
and
out
cmc
iret
dec
enter
imul
out
test
sub
sbb
dec
das
push
xchg
in
cmp
fcmovnbe
inc
sub
stos
cmp
or
sbb
push
aas
push
enter
loopne
xor
cmp
js
lea
or
cmp
gs
push
mov
inc
add
add
(bad)
xor
scas
xor
inc
cdq
pop
movs
and
dec
shl
in
sub
pop
jmp
shr
mov
cmp
arpl
outs
fadd
dec
pop
fiadd
ja
(bad)
call
cmps
mov
sbb
xor
cmp
and
call
fs
frstor
es
hlt
push
dec
(bad)
imul
mov
pop
sub
lahf
out
dec
pop
push
mov
aad
dec
mov
inc
mov
(bad)
icebp
mov
push
out
cmc
xchg
aad
gs
and
dec
js
outs
push
shr
mov
ins
sub
sub
jle
mov
mov
js
pop
in
test
jo
dec
fs
retf
ret
test
cmps
pop
aaa
fwait
aas
(bad)
stc
add
call
pop
je
dec
sbb
pop
xchg
scas
push
mov
sub
iret
mov
bound
rcr
xlat
push
mov
pop
aam
jge
pop
pop
or
(bad)
ror
jae
in
mov
pusha
fisttp
enter
cmp
cmc
fs
mov
int3
xlat
xor
jmp
mov
pop
inc
push
retf
sbb
inc
jo
fdiv
adc
stc
aas
aas
mov
int
jae
sub
add
addr16
aas
push
xchg
mov
adc
pusha
fist
mov
jbe
ins
ss
push
xor
sub
aad
fsubr
push
test
shr
addr16
inc
cmp
xor
jo
adc
pushf
(bad)
loope
mov
mov
push
jo
cmp
adc
sahf
sahf
adc
test
mov
test
jae
jae
sub
test
pop
mov
fld
retf
jno
xchg
mov
dec
and
cmp
pop
sbb
lods
sbb
jnp
test
fcomp
loope
push
mov
ror
div
inc
pushf
mov
pop
mov
sub
adc
dec
mov
push
repz
fsubr
sbb
scas
out
movs
jbe
aad
movs
inc
sub
sub
stc
xor
mov
jge
jecxz
aam
xchg
mov
(bad)
in
mov
pop
xor
imul
outs
xchg
fs
cmp
(bad)
fmul
sub
mov
mov
mov
repnz
mov
out
mov
mov
fsubr
jbe
xchg
mov
jl
(bad)
retf
push
imul
sahf
jl
add
shl
xchg
mov
ds
dec
push
push
push
or
shr
jge
cld
pcmpeqd
imul
xor
pop
lahf
add
add
cmp
mov
cmps
sub
pop
sub
fcmovbe
cmp
jecxz
add
dec
mul
inc
test
retf
and
fadd
clc
movs
sbb
mov
inc
movs
imul
cli
inc
mov
cld
pop
popa
iret
jl
xor
adc
mov
ins
jmp
test
(bad)
mov
push
jle
retf
sub
inc
push
xor
ror
fldcw
sbb
jae
xor
jmp
sub
movs
dec
mov
push
lahf
pop
lea
pop
xor
mov
aas
and
jle
jmp
mov
mov
pop
lea
inc
or
rol
sub
pop
popf
sbb
or
xor
add
xchg
dec
fwait
jmp
ficomp
xchg
sub
push
xchg
sbb
fcom
dec
sbb
(bad)
fstp
add
dec
ds
jge
xor
mov
and
pushf
mov
stc
stc
je
les
jl
cmc
ins
imul
(bad)
jb
dec
inc
mov
push
fucomip
ins
(bad)
(bad)
ins
cs
in
retf
movs
rcr
lods
rcl
cmp
xchg
xchg
out
daa
ret
stos
jecxz
xchg
xor
mov
adc
les
add
inc
xor
fadd
mov
push
ror
pushf
fld
xchg
pop
push
dec
and
pop
or
mov
mov
or
fsubr
jbe
repnz
cmp
push
push
push
pop
cmps
nop
cmp
retf
iret
int
in
cli
popf
cs
jne
xchg
outs
cmp
xlat
add
xchg
dec
js
cmc
ins
and
fldcw
push
lds
inc
mov
xor
loop
das
cwde
cld
pop
and
xor
mov
and
inc
or
leave
lock
out
cli
out
cmps
hlt
dec
cmps
test
in
rol
fnstcw
rol
push
inc
lahf
jg
push
mov
call
xor
pextrw
mov
test
xor
inc
xchg
and
test
push
stc
xlat
outs
push
inc
mov
and
cwde
aad
pop
stos
mov
inc
lods
pop
pop
lea
imul
pop
dec
imul
sar
jae
sbb
mov
or
pop
pusha
bound
cmp
dec
cmp
pop
jge
pop
add
scas
fwait
cmp
fdiv
daa
mov
jne
cmp
inc
mov
add
out
call
pushw
lods
fwait
ins
arpl
mov
dec
test
mov
mov
imul
shr
sbb
in
mov
jmp
dec
(bad)
call
dec
fisubr
shr
lahf
inc
data16
and
sub
mov
push
xor
cmp
fs
jecxz
hlt
repnz
into
mov
movs
loope
sbb
and
mov
sahf
xchg
sbb
movs
push
ins
ror
or
shl
and
leave
fldcw
aad
leave
cmp
cmps
mov
mov
and
sahf
push
cdq
cmp
and
jns
ins
sub
out
icebp
int3
std
push
clc
(bad)
push
out
repz
xchg
xchg
repnz
xchg
xchg
(bad)
dec
inc
sub
sub
xchg
sti
out
in
cmc
push
dec
mov
(bad)
in
jae
in
icebp
pop
(bad)
(bad)
shr
xchg
fld
ds
adc
add
cli
pop
out
xchg
aad
push
(bad)
add
sti
inc
inc
push
mov
xchg
jmp
std
and
jl
adc
sub
jne
movs
sbb
ror
ins
jne
jmp
xchg
rcl
(bad)
dec
mov
test
test
inc
stos
add
inc
jle
pop
and
cmp
(bad)
pop
add
sbb
(bad)
sub
int3
push
pop
mov
iret
pmaxub
fistp
and
mov
inc
or
popf
fidivr
pop
pushf
or
mov
jp
push
adc
popa
mov
fimul
cdq
mov
jl
dec
sub
stos
cmp
test
mov
outs
sub
lods
xchg
pop
jne
out
pop
add
fadd
in
wrmsr
mov
xlat
inc
rcr
mov
push
out
in
or
add
pop
jne
scas
push
dec
adc
out
xor
inc
(bad)
in
jnp
shl
push
into
xchg
and
outs
movs
push
sbb
imul
jae
pop
and
mov
jecxz
cmps
sub
and
mov
pop
sbb
pushf
adc
jo
ja
fld
ins
pop
jo
lock
sbb
dec
movs
pop
repnz
inc
or
jp
push
lds
popf
jp
sub
sbb
lods
add
dec
pop
sub
mov
lahf
(bad)
bound
sbb
sbb
popa
neg
mul
arpl
inc
(bad)
not
fadd
xbegin
test
hlt
icebp
dec
ret
popf
test
inc
or
xchg
cmp
or
repz
dec
dec
repz
fstp
(bad)
xchg
pusha
fnstcw
imul
sahf
sbb
sti
int
fnsave
shl
retf
call
adc
add
outs
neg
cmps
out
cld
into
arpl
or
adc
cmp
scas
push
test
jbe
mov
jnp
pop
(bad)
jns
mov
push
mov
cdq
or
cmp
and
fstp
push
aad
test
stc
xchg
outs
sub
mov
fistp
ins
dec
add
inc
mov
pop
push
mov
cdq
push
movs
js
mov
xor
je
hlt
push
and
and
xchg
push
dec
fimul
xchg
and
inc
scas
mov
cmp
push
call
repz
test
imul
xor
sub
mov
ja
lods
push
rcl
mov
test
js
bound
cmps
lock
dec
cmp
out
retf
add
(bad)
into
inc
and
retf
test
test
pop
dec
lods
(bad)
stos
mov
or
xor
push
js
les
out
fmulp
into
push
fwait
std
lock
xchg
in
js
sbb
sub
inc
mov
ds
and
xchg
scas
lods
out
push
in
adc
mov
mov
mov
movs
push
mov
gs
dec
mov
add
frstor
sub
jmp
mov
ins
in
mov
shr
jns
push
sbb
imul
loope
outs
pusha
lds
loop
loope
xchg
pop
nop
repnz
adc
std
jle
mov
movs
xchg
mov
and
outs
jb
push
fistp
mov
shr
push
leave
rcl
pop
adc
jl
imul
mov
ror
push
jno
sbb
lea
ds
mov
jne
ins
test
sub
or
push
push
jp
ins
aas
jecxz
repnz
add
lahf
push
scas
(bad)
(bad)
cmp
push
cmp
loope
push
push
jne
pushf
xchg
mov
and
setl
xor
xchg
jecxz
add
cdq
adc
sahf
(bad)
cmc
rol
not
sub
jo
dec
pop
jo
int3
cmp
mov
je
sub
retf
push
xchg
out
retf
mov
test
inc
xchg
cmp
pop
jno
shr
aaa
fnstsw
mov
push
sahf
inc
pop
mov
and
clc
inc
or
add
ds
sahf
lock
fwait
ds
push
aaa
push
inc
mov
adc
sbb
mov
mov
(bad)
retf
in
retf
fimul
aaa
push
push
popa
inc
inc
sbb
sbb
and
sbb
scas
pop
xchg
xchg
push
sbb
mov
mov
mov
mov
push
xor
cmps
(bad)
adc
and
std
pop
mov
sub
mov
inc
sub
xchg
inc
sbb
pop
(bad)
shl
push
movs
mov
loope
cwde
lds
arpl
ja
(bad)
in
dec
mov
xor
aad
xchg
push
jb
dec
aad
push
pop
int
mov
fst
xlat
movs
mov
ja
and
or
in
cmc
mov
inc
into
nop
fsubp
loopne
inc
and
sbb
aad
pusha
leave
cdq
add
ja
sub
in
add
inc
dec
ret
(bad)
and
fisubr
jmp
call
pop
jmp
retf
iret
adc
xchg
sub
and
pop
or
and
jmp
xchg
out
retf
inc
pushf
ins
push
sub
inc
inc
cbw
dec
pop
xchg
sbb
add
xor
sbb
jmp
lods
or
popf
(bad)
hlt
cld
repz
call
mov
bound
push
aad
mov
lock
pop
adc
mov
mov
mov
popa
es
ins
scas
cwde
sub
mov
sbb
sbb
inc
adc
cli
fmul
sbb
mov
arpl
mov
fnstcw
and
xlat
ja
dec
cld
adc
push
lods
fnstenv
mov
fiadd
mov
sbb
into
jbe
jae
fisttp
cmp
xchg
gs
aas
pushw
lds
and
cmp
sbb
and
aaa
mov
inc
shl
outs
loopne
arpl
lahf
outs
dec
ins
or
mov
int
cmc
jmp
ss
aad
push
xor
pop
and
jle
xor
popa
xor
add
sbb
stc
push
rep
add
cmp
lods
mov
or
jbe
adc
sti
cli
lahf
ret
and
loop
popa
pop
mov
shr
push
inc
inc
rcr
(bad)
xchg
cmp
lods
test
fadd
mov
jmp
test
movs
inc
lock
je
popf
ins
push
test
rol
out
pop
cdq
das
xor
mov
jmp
enter
fimul
(bad)
fcomp
mov
mov
ins
lods
and
test
mov
fsub
jnp
cdq
cmp
icebp
scas
push
add
xchg
addr16
sub
push
pop
ret
add
ret
iret
bswap
lds
xchg
cdq
cmp
xor
pop
test
pushf
sbb
ja
push
cmp
cmp
mov
cmp
dec
lock
xor
js
xor
add
outs
adc
mov
add
cwde
out
in
fnstsw
in
mov
stos
cmp
dec
in
jo
xlat
test
mov
mov
bound
mov
dec
pop
and
call
pop
xor
jbe
bound
aaa
xor
jbe
pop
mov
mov
jecxz
mov
xor
fsubp
mov
or
cmp
shl
xchg
mov
push
call
and
dec
cmovae
mov
lea
pop
call
xchg
enter
xor
neg
jno
add
push
enter
mov
pop
lds
mov
sbb
fst
bound
ds
inc
dec
mov
sbb
mov
or
ret
loope
jp
add
fsub
ds
lods
and
xor
fidivr
inc
sub
les
ins
bound
mov
aas
push
or
xchg
inc
jae
nop
stos
push
out
dec
push
data16
pop
mov
mov
ror
hlt
add
push
in
cmp
sar
mov
dec
xor
push
icebp
fcomip
enter
xor
push
test
cmps
iret
xor
jmp
jl
std
or
xchg
call
(bad)
jle
shl
lds
jno
mov
push
cmps
and
cmp
xor
(bad)
sbb
or
xor
push
pushf
out
fmul
cmps
mov
ret
lds
add
jo
inc
js
pop
ss
repnz
push
je
jb
popa
popf
adc
push
in
out
jnp
frstor
fnsave
hlt
pop
jecxz
cld
in
mov
retf
neg
mov
loop
inc
bound
rcr
out
pop
mov
mov
xchg
dec
and
aas
sti
or
call
es
xchg
mov
mov
mov
int3
add
pushw
adc
out
push
movs
inc
push
cmp
pusha
jae
scas
and
icebp
mov
bound
mov
xlat
cmp
retf
dec
div
sar
jb
addr16
gs
lea
stos
push
int
aas
stc
xchg
pusha
add
jecxz
and
jo
pop
xlat
pop
ret
mov
or
pop
mov
icebp
shr
xor
pop
mov
inc
fisttp
sti
add
repz
push
nop
sbb
stos
mov
loopne
loop
adc
sar
pop
push
fistp
dec
push
std
jge
int3
rdpmc
data16
xchg
inc
and
repz
fwait
nop
sub
dec
pop
jecxz
frstor
cs
into
das
cmp
into
push
int
sbb
mov
jo
test
leave
adc
cmps
outs
retf
jo
inc
in
retf
xchg
pop
leave
xor
out
mov
test
cwde
xchg
nop
push
jb
ja
sbb
fs
jbe
std
xlat
shl
jg
scas
jne
mov
and
inc
imul
jnp
fdivr
add
daa
fild
repz
ret
pop
leave
mov
lock
sbb
cmp
inc
jge
cwde
sub
call
or
pop
pop
js
js
sbb
call
stos
mov
loopne
hlt
lea
stos
mov
cmp
mov
cld
cwde
sbb
imul
push
sbb
mov
or
push
mov
inc
jg
mov
ror
or
pop
cld
sbb
sbb
xchg
movs
push
stc
add
fstp
lods
mov
ror
call
xchg
in
cmps
loopne
adc
cmps
cwde
int
add
xchg
js
or
jbe
es
and
call
mov
fwait
outs
push
mov
push
inc
xor
inc
dec
test
push
sub
or
ret
aam
hlt
cmp
or
test
dec
icebp
pop
nop
sbb
xchg
nop
push
pop
cdq
push
in
mov
pop
out
aad
mov
movs
sar
in
pop
push
clc
xchg
ret
aaa
into
jmp
aas
push
xor
retf
mov
or
out
leave
push
aad
loop
jg
sbb
inc
mov
out
sahf
sbb
mov
adc
movs
sbb
das
mov
push
sbb
add
mov
pop
imul
inc
mov
popf
scas
outs
jmp
jno
call
add
add
or
(bad)
mov
and
push
add
clc
in
dec
out
mov
daa
pop
push
popf
or
ret
pop
mov
retf
std
add
add
ds
xchg
add
(bad)
stos
push
cmps
les
fld
test
sub
call
cmps
cwde
ds
popf
stc
push
sub
pop
pusha
mov
push
add
addr16
mov
lods
in
repnz
sub
lock
xchg
clc
add
lock
xchg
xchg
mov
cmp
mov
and
push
pop
mov
adc
cs
fmul
jo
out
scas
fistp
push
in
(bad)
movs
outs
cs
into
je
add
jnp
xor
push
cmp
cmp
xchg
push
call
mov
and
dec
push
dec
push
adc
dec
mov
les
mov
sahf
xchg
rol
fstp
and
test
inc
das
dec
jmp
bts
jmp
not
pop
cld
das
and
jae
movs
sbb
test
jae
hlt
or
jl
aaa
mov
push
mov
sub
sahf
sar
(bad)
or
iret
cs
test
outs
mov
or
clc
adc
mov
push
cmps
int
rcl
adc
outs
sbb
call
js
xor
ret
cmp
pop
xor
lds
out
cmps
add
loop
mov
pop
mov
or
cmp
jl
int3
inc
out
jno
cmp
inc
icebp
xor
add
dec
addr16
ffreep
xchg
xchg
xor
xor
pop
mov
das
repz
rol
mov
cmp
out
mov
mov
mov
ins
test
(bad)
jge
xor
(bad)
cmp
inc
test
push
adc
xchg
lea
out
mov
inc
pop
push
test
adc
call
jmp
idiv
shl
sbb
test
fs
mov
inc
cmps
std
shr
jg
(bad)
pop
adc
daa
movs
inc
mov
push
add
fidivr
movs
mov
loop
js
jae
xor
dec
dec
cmp
test
cmp
cmps
addr16
and
(bad)
in
std
add
sbb
dec
(bad)
and
and
mov
and
xchg
les
or
pop
mov
stos
pop
jl
cmp
mov
adc
out
ins
ds
sub
xor
arpl
cmp
add
or
xchg
shl
cmc
push
inc
sbb
jecxz
push
bound
(bad)
xchg
cs
xchg
hlt
inc
pop
daa
push
cld
cwde
xchg
xor
push
and
adc
add
sti
popa
mov
(bad)
push
in
adc
stc
setbe
inc
(bad)
lods
call
cdq
mov
clc
in
leave
mov
mul
cmp
pop
mov
ja
aad
js
ins
lds
cwde
mov
sbb
ins
push
ret
cmp
jg
stos
or
lahf
sub
inc
add
imul
xor
pop
lds
pop
dec
mov
xchg
cmp
and
sub
pop
into
daa
sub
aas
or
loope
popf
cmps
clc
or
movs
popf
dec
jne
popa
mov
repz
add
add
add
mov
dec
pop
or
pop
adc
xchg
pop
sub
das
(bad)
dec
mov
ja
ret
das
loop
into
psubusb
xchg
ja
jmp
cmps
adc
jae
hlt
dec
retf
mov
(bad)
fbld
mov
xchg
jo
ret
push
jle
jecxz
xchg
mov
cmp
pcmpgtd
mov
retf
enter
fld
xchg
out
mov
cli
mov
push
lods
dec
test
mov
out
adc
out
xor
leave
jle
mov
push
jge
mov
out
or
fs
sar
aaa
add
fisttp
push
mov
shr
cmps
(bad)
adc
out
jg
jns
test
mov
ror
jne
inc
shl
gs
fisub
imul
push
inc
lods
inc
mov
sbb
pop
jbe
fistp
xor
pop
aam
fdivr
inc
dec
pop
jno
cmps
mov
test
pop
push
push
int3
add
stc
xor
or
stos
xor
fmul
mov
popa
pop
and
dec
aaa
pop
dec
rol
xchg
je
push
pop
jmp
cmc
stos
inc
mov
mov
or
xchg
(bad)
mov
rol
imul
dec
arpl
pavgw
std
int3
jmp
push
sar
sbb
push
loop
add
scas
adc
mov
mov
cmp
inc
and
cmp
xchg
lea
pop
push
mov
(bad)
data16
xchg
or
addr16
xor
jbe
movs
loope
or
jae
and
sbb
mov
add
lds
rcr
aam
daa
xchg
and
xchg
dec
data16
imul
lea
test
pop
daa
ds
xor
sub
jne
jle
mov
mov
loopne
adc
out
(bad)
xchg
add
mov
aas
inc
mov
aaa
je
sar
pop
fadd
jbe
add
pop
dec
dec
jl
imul
pop
aad
add
popa
lock
popf
int3
xchg
jl
aaa
sbb
push
sbb
fisub
dec
xor
pop
popa
out
clc
data16
cwde
mov
push
pop
into
nop
mov
repz
sbb
inc
jecxz
or
push
je
gs
mov
cmp
or
jbe
(bad)
add
dec
scas
dec
mov
mov
ret
rcl
shr
ins
stos
xchg
cs
sub
push
popf
ins
sub
xchg
mov
std
stos
(bad)
jmp
fxam
repnz
ins
hlt
rcr
mov
sar
inc
fwait
mov
rcr
and
sub
mov
test
jnp
xlat
adc
or
(bad)
fidiv
mov
or
sub
sub
jbe
sbb
in
sub
ret
jg
sub
neg
xchg
jno
iret
mov
cmps
stos
push
push
movs
xchg
adc
push
xor
cmp
dec
cwde
repnz
adc
mul
push
push
popa
xor
fst
dec
rol
xchg
xlat
repz
popa
cwde
nop
inc
jp
sbb
out
out
fwait
sbb
scas
pop
mov
and
js
outs
sbb
movs
xchg
aad
push
pop
ins
rcr
mov
add
xor
stos
pop
pushf
cmp
inc
jmp
movs
shr
pop
scas
jne
mov
xchg
es
sbb
cmovnp
cmp
dec
cmps
popf
and
cmp
shl
push
mov
fbld
mov
test
xchg
push
movs
push
add
daa
bswap
enter
test
sbb
push
lods
(bad)
lds
sub
out
enter
lods
call
pusha
neg
mov
out
cmp
movs
jmp
dec
call
mov
and
ja
and
hlt
push
(bad)
shl
daa
sub
loope
lds
out
cmp
xchg
jmp
out
aam
xchg
dec
aaa
push
jae
jg
sti
xchg
xchg
jne
scas
(bad)
pop
xchg
xor
dec
scas
push
push
adc
pushf
loopne
addr16
pop
mov
ins
dec
jnp
repz
xchg
lock
movs
or
aam
movs
pop
jb
lods
sbb
sub
(bad)
fistp
jp
sub
cmp
jecxz
xor
adc
cmp
jmp
fnsave
dec
jbe
sub
jmp
push
into
sbb
sti
pop
test
iret
jle
aas
xchg
add
inc
scas
cmp
inc
aam
dec
jmp
sub
xor
jne
ret
xor
push
mov
stos
cmps
(bad)
movs
aad
sub
and
add
pop
imul
into
pop
repnz
mov
or
mov
out
mov
sbb
pop
xchg
lods
sbb
ja
or
daa
inc
enter
out
mov
js
sub
lods
ins
fs
xchg
xchg
cmc
ds
fbld
sub
pop
inc
(bad)
adc
push
fld
mov
push
imul
add
jmp
rcr
pop
aad
bound
push
pop
inc
lds
js
mov
cmp
sbb
jae
xlat
sbb
int3
into
or
xor
mov
sti
mov
adc
retf
sbb
push
div
xor
mov
inc
cmp
retf
sbb
adc
adc
sar
mov
cmps
xchg
fcomp
int3
icebp
call
outs
sub
(bad)
stos
out
mov
arpl
mov
xchg
xor
cmp
cmc
mov
fisttp
fisub
cmp
(bad)
enter
in
cmps
cdq
out
jge
push
push
lock
jb
repz
fcom
mov
test
retf
das
pop
mov
int3
xchg
movs
in
fsub
ins
mov
adc
inc
outs
sub
sub
or
test
int
sub
or
push
cli
push
ins
pusha
mov
cvtps2pd
test
out
daa
fnsave
adc
fld
outs
adc
loopne
add
pop
mov
dec
shl
push
add
outs
xchg
mov
push
fst
sbb
out
sub
(bad)
mov
and
dec
fadd
stos
cdq
jl
pop
scas
xchg
sub
sti
mov
mov
xlat
sbb
int
or
sbb
mov
xor
push
movs
push
or
adc
out
jmp
lea
hlt
push
mov
outs
movs
xor
repnz
mov
les
pop
inc
inc
adc
push
scas
and
imul
sbb
sub
xor
xlat
test
xchg
pushf
pop
cmp
stc
pusha
add
sub
stos
test
imul
das
(bad)
jmp
ins
(bad)
js
ficomp
ror
sbb
and
push
add
mov
out
neg
cmp
push
mov
jno
arpl
out
in
cmp
std
and
mov
jge
sub
inc
sti
int
sub
clc
out
das
shl
add
es
cmp
sbb
fimul
xor
mov
mov
out
loopne
aam
and
inc
mov
xor
popf
int
mov
std
mov
mov
and
addr16
push
jnp
add
ror
cwde
nop
outs
iret
push
movs
outs
dec
dec
dec
js
aaa
pop
jl
jle
xor
popf
adc
jecxz
mov
push
or
repz
or
mov
fsubrp
mov
rcr
mov
jne
xor
push
aad
cmps
cmps
jo
xor
sub
les
add
int
and
ins
mov
cld
or
push
leave
jo
cmp
movs
test
fst
jmp
nop
inc
cmc
or
(bad)
cld
pop
(bad)
sub
call
sub
pop
cmps
addr16
jne
stos
cmp
cs
(bad)
fisubr
call
inc
xor
call
jbe
int3
les
xor
add
pop
jnp
sbb
mov
(bad)
sbb
mov
clc
mov
js
jp
cmp
jp
inc
lock
mov
jnp
rol
mov
xor
nop
xchg
push
xchg
cdq
xchg
out
sub
das
adc
mov
xor
pop
push
add
push
and
xor
pop
or
pop
(bad)
fbld
shr
jmp
call
cmp
stos
addr16
int3
push
xor
ins
gs
cmp
mov
or
xor
xor
xor
dec
loope
out
cmps
outs
aam
clc
or
sub
add
std
repnz
stc
paddsb
sub
cmp
(bad)
cmp
push
xchg
es
mov
fs
aad
cld
dec
pop
xchg
test
inc
mov
stc
xchg
stos
stc
jl
repnz
adc
push
adc
fcompp
sub
shl
shl
ja
movs
push
jne
mov
sub
imul
loopne
sbb
lock
push
call
shr
aam
lods
adc
sub
inc
mov
xor
xchg
sub
iret
mov
cmp
push
mov
xor
adc
ins
sbb
pop
test
or
mov
imul
out
sub
(bad)
iret
out
pop
ja
out
scas
mov
mov
mov
int3
aas
and
jmp
sub
pop
(bad)
test
cmp
jno
es
iret
adc
jne
fldcw
mov
fs
repz
je
or
(bad)
mov
jae
into
shr
aam
out
xor
cmp
mov
mov
add
cli
pop
hlt
out
sub
xor
sahf
sti
jmp
addr16
inc
ret
xchg
shr
outs
adc
and
jl
jo
add
dec
cmp
(bad)
clc
fstp
(bad)
jecxz
xchg
ins
jae
pop
xchg
pop
retf
sub
movs
xchg
lods
pop
retf
pop
mov
inc
lea
in
stos
jmp
mov
gs
push
sbb
stos
pop
daa
jmp
sti
push
adc
js
add
clc
pop
shl
xor
stc
sti
out
xor
out
cmps
das
movs
nop
hlt
aaa
mov
and
fbstp
shl
push
or
lods
jb
sahf
test
mov
and
shl
lea
mov
or
aas
and
xchg
popa
dec
push
in
push
(bad)
daa
lahf
xor
xchg
and
jmp
jno
add
lods
dec
rcl
add
test
inc
push
pop
fiadd
rol
mov
mov
mov
ret
and
push
jne
ret
mov
mov
xlat
push
xor
les
push
(bad)
sub
in
push
test
test
(bad)
push
jno
repnz
adc
cmps
adc
cmps
jnp
cmp
inc
test
xor
sbb
sbb
mov
pop
cmp
or
xchg
xchg
xor
std
dec
icebp
int
cmp
test
pop
inc
or
and
stos
ret
pop
mov
(bad)
stos
pushf
mov
cld
sub
(bad)
push
add
jne
fs
cmc
aam
add
shr
inc
sub
pop
pop
inc
sub
sbb
jb
jge
dec
xor
retf
adc
jmp
cmp
add
enter
bound
dec
aad
mov
data16
clc
inc
lock
ja
out
int
mov
aam
cmp
xor
cwde
cs
inc
jg
out
xor
mov
in
in
retf
adc
xor
mov
repz
aas
sub
mov
add
cli
mov
mov
xchg
ret
outs
cmp
inc
adc
mov
pop
push
imul
test
sar
add
pushf
dec
cmp
(bad)
outs
out
mov
out
out
retf
mov
and
setnp
add
adc
pop
ret
push
jns
and
mov
aas
repnz
push
fmulp
in
cmp
mov
mov
shr
mov
test
inc
fist
mov
sti
sub
mov
aam
ss
test
mov
arpl
fisubr
cmp
sbb
push
xchg
fimul
not
out
pop
dec
bound
shl
pop
fsubr
pop
jmp
and
lds
repz
fnsave
outs
cs
cmp
or
sahf
adc
xor
pop
jns
add
shl
lock
test
in
jge
or
movs
xlat
out
mov
dec
fild
adc
sahf
arpl
jns
cmp
int3
xchg
mov
push
sar
stos
add
dec
add
mov
out
nop
inc
mov
(bad)
arpl
aas
call
push
mov
ret
stos
and
dec
push
mov
lock
cli
xor
xchg
xchg
cmps
std
cli
push
xchg
xchg
jg
jns
lahf
push
sub
add
popf
add
jae
sbb
jle
cli
mov
inc
int3
stos
push
mov
das
push
lods
adc
mov
cmps
pop
scas
fisub
sbb
ret
jb
out
mov
xor
inc
clc
pop
loopne
(bad)
pop
cwde
loope
std
sar
pop
inc
jp
(bad)
and
mov
pop
(bad)
jmp
dec
xchg
jle
sbb
xor
push
mov
(bad)
rol
adc
mov
pop
inc
fwait
and
scas
test
push
mov
(bad)
mov
not
scas
lods
pop
cli
test
jbe
ret
clc
xlat
push
xor
and
lds
push
lods
mov
ret
daa
(bad)
ja
push
call
or
or
shl
xchg
dec
mov
jbe
cmp
sar
in
test
aad
movs
push
and
inc
dec
push
mov
pop
aad
out
(bad)
or
jnp
outs
and
arpl
gs
les
mov
and
sbb
xchg
mov
imul
push
sub
pop
movs
cmp
push
ret
sbb
sti
push
dec
and
cmp
fisttp
xchg
xor
shl
jae
add
sbb
call
aaa
retf
dec
pop
sub
and
adc
adc
lods
loop
inc
and
mov
pop
xor
dec
in
mov
mov
cs
dec
jmp
inc
repz
xor
lods
cwde
xor
push
inc
push
lock
call
enter
bound
xchg
xor
outs
imul
cmps
push
xchg
bnd
loop
(bad)
loopne
pop
movs
xchg
pop
adc
inc
rcl
mov
and
dec
sbb
aas
dec
out
push
lahf
mov
xchg
jmp
add
adc
adc
push
icebp
retf
stc
repz
cli
lahf
scas
sbb
gs
pop
jecxz
mov
xchg
mov
loop
add
mov
fiadd
imul
or
loopne
lahf
cmp
lahf
dec
or
in
inc
jne
fwait
test
push
push
cmp
ins
add
aaa
pop
and
pop
(bad)
jae
je
and
and
lods
int3
data16
jecxz
add
rcl
pop
mov
xor
push
jo
ss
lods
lahf
not
mov
xor
xor
outs
adc
sub
data16
cmp
lock
out
cmc
fndisi(8087
scas
mov
out
cmovge
push
mov
jo
aad
gs
jo
test
movs
hlt
add
adc
jo
or
xor
and
movs
out
adc
inc
pop
xor
pop
popf
mov
std
ret
sub
shl
xor
out
mov
cmps
enter
les
push
aas
into
xor
pop
jne
hlt
adc
cmc
inc
mov
imul
pop
cmp
nop
cmp
in
xchg
ja
pusha
fdivr
jns
mov
loopne
push
or
jle
test
push
adc
fidivr
lahf
pop
pop
adc
sub
scas
fisub
dec
(bad)
sbb
aaa
mov
sub
(bad)
cli
(bad)
sub
inc
mov
pop
mov
fwait
dec
popa
push
mov
ror
mov
or
mov
adc
xchg
ins
mov
inc
test
adc
loop
cmp
sbb
xor
clc
daa
loope
addr16
rol
xor
mov
add
xor
fst
rcl
sub
adc
mov
test
fdiv
jo
sbb
dec
and
cdq
add
pop
pop
add
xlat
cmp
and
lods
mov
(bad)
push
test
aam
popa
adc
inc
loope
mov
xchg
lock
outs
popf
arpl
iret
xor
pop
jae
pop
sbb
and
outs
loop
jns
adc
push
fmul
rcl
test
xor
mov
xchg
add
jmp
mov
arpl
sub
xchg
xor
mov
mov
xlat
pop
jmp
out
outs
in
adc
int3
call
retf
xchg
xchg
mov
mov
mov
(bad)
adc
xor
push
add
mov
sar
xchg
ss
ficomp
xchg
das
cmps
ret
jae
int
outs
leave
ror
mov
mov
jbe
inc
and
fsub
ficomp
mov
in
outs
gs
outs
sub
popf
iret
fwait
push
movs
jne
clc
mov
outs
pusha
pop
nop
mov
into
js
sub
arpl
(bad)
test
in
es
jle
ja
fwait
popa
ds
js
xchg
inc
xchg
cmps
and
outs
inc
stos
pop
cmps
icebp
bsf
xor
or
jl
jl
pop
js
test
shl
xor
pop
inc
shl
in
fldcw
sti
sbb
jmp
pop
retf
push
cli
inc
test
out
mov
movs
jno
cli
dec
mov
pop
jmp
add
(bad)
std
jmp
icebp
lods
js
xor
mov
jno
mov
xchg
add
je
leave
popf
jns
scas
mov
(bad)
in
fbld
popa
outs
loopne
xor
jmp
into
addr16
sub
cld
ror
and
scas
xor
shl
stos
shl
lock
rol
fstp
scas
jo
ins
adc
sub
jns
daa
scas
and
mov
mov
push
xor
test
pushf
mov
sub
lods
mov
mov
cmc
cs
movs
stos
test
mov
arpl
fbld
xchg
aas
jge
adc
cld
dec
sbb
imul
shl
out
or
mov
push
pop
jns
pop
pop
dec
jb
xor
ja
mov
adc
jmp
clc
push
jg
icebp
pop
add
jno
gs
sbb
ins
push
jnp
cmc
aas
push
xchg
cs
pop
fsub
mov
cmp
xchg
out
or
fsubr
cmp
jmp
pushf
sub
mov
cmc
push
arpl
dec
push
jge
leave
imul
inc
popa
mov
in
rcl
repz
inc
cs
cmp
bound
xchg
inc
jge
or
movs
cwde
loopne
mov
fsubr
xor
push
sahf
or
arpl
jb
das
cdq
stos
in
add
icebp
imul
mov
data16
(bad)
xchg
ins
(bad)
mov
pop
repnz
inc
xor
sub
cmp
adc
leave
push
xor
dec
dec
jp
ds
adc
add
and
in
xor
aad
sbb
aaa
clc
jp
jl
inc
and
retf
call
movs
and
setg
aas
mov
cmp
aaa
(bad)
es
push
out
sbb
mov
ret
sbb
sub
xlat
sub
cmc
and
shl
sub
inc
retf
sbb
mov
into
hlt
adc
(bad)
jnp
or
pop
daa
jle
cmp
dec
dec
jnp
or
ins
push
lahf
sbb
mov
adc
aas
cmps
add
inc
add
test
retf
in
lods
ins
ins
nop
or
push
jle
add
fmulp
and
mov
mov
out
scas
(bad)
cmp
not
push
es
ror
not
repz
or
aad
pop
popa
js
inc
mov
jmp
mov
mov
xchg
jp
add
adc
push
sbb
nop
add
repz
test
retf
mov
xlat
ret
fwait
push
cmps
test
mov
push
mov
rcl
mov
cmc
jo
add
fist
daa
retf
sbb
jmp
dec
cmp
test
cmps
xlat
popa
or
rcl
fs
cmp
mov
(bad)
sub
test
js
jp
cli
pand
sub
(bad)
imul
sbb
jecxz
leave
xchg
dec
mov
push
cs
(bad)
cmp
fwait
jge
dec
mov
mov
cmp
fst
push
loop
push
jnp
xchg
adc
xchg
and
jle
push
call
loopne
jl
and
imul
jns
aam
shl
lock
add
pop
xchg
cld
or
nop
adc
repnz
cmp
push
mov
imul
popf
xchg
js
sub
add
mov
push
dec
es
push
adc
push
sahf
inc
mov
jbe
mov
mov
mov
pop
in
inc
inc
sbb
mov
fsubr
xchg
adc
out
scas
inc
xchg
out
int3
sbb
jmp
xor
test
test
dec
jbe
and
jp
cwde
aam
dec
pop
pop
pop
lock
or
aam
mov
js
(bad)
imul
jg
mov
idiv
ret
fmul
mov
psubusw
popa
cmc
loopne
sti
jae
inc
push
jo
jl
cmp
sbb
sbb
scas
stos
jp
cmp
push
int3
add
call
mov
jno
add
ficomp
push
adc
jae
xlat
sub
dec
pop
mov
or
loope
into
jns
ret
test
dec
cld
pop
mov
sub
sbb
in
pop
lods
xor
into
mov
push
imul
in
jno
sbb
push
mov
call
xchg
sar
and
adc
sub
inc
stos
xchg
ds
out
out
push
or
add
cmps
mov
sub
push
fdiv
push
sbb
cmps
xchg
mov
push
cmp
int3
xor
mov
sub
fmul
push
fwait
dec
dec
push
popf
or
repz
mov
pop
out
ins
stc
push
xor
jmp
push
shl
fnstsw
pop
push
pop
jno
lock
(bad)
dec
mov
add
inc
push
jmp
mov
xor
addr16
jbe
sub
push
int3
pop
or
call
dec
mov
or
push
add
xchg
jne
mov
cld
jbe
movs
and
movs
inc
adc
mov
push
fidiv
enter
int3
int3
les
(bad)
and
scas
mov
add
mov
add
lahf
fisub
into
js
push
cmp
cmc
jno
sbb
xchg
mov
dec
jns
mov
stos
jnp
lods
dec
add
cmps
sbb
outs
add
jmp
aas
mov
popa
int3
inc
fdiv
push
neg
sbb
shl
retf
mov
and
sbb
mov
retf
mov
mov
pushf
loope
loopne
xchg
ins
icebp
ss
int3
ins
and
sbb
ror
xor
inc
jge
push
push
dec
imul
push
cmp
lods
jp
push
jnp
jmp
jmp
jb
stos
(bad)
test
mov
fadd
mov
mov
out
in
push
xor
clc
in
popf
mov
mov
in
(bad)
shr
mov
rcr
nop
test
cmp
(bad)
call
push
xor
sub
inc
inc
mov
daa
jnp
and
fcom
cmp
sbb
xor
jne
gs
push
repz
retf
loope
mov
mov
sub
and
jl
jge
js
mov
lods
pop
je
cwde
xor
ds
fcomp
add
dec
scas
or
push
std
cmp
cmps
push
ror
out
sub
jb
or
aam
pop
mov
shl
fcmovnbe
loope
popa
sub
ror
mov
mov
loopne
lahf
xlat
(bad)
scas
push
dec
inc
jae
jmp
mov
mov
stos
inc
(bad)
xchg
test
sub
mov
test
(bad)
les
mov
call
push
mov
add
inc
add
mov
imul
mov
out
dec
ficomp
cmps
xchg
popf
adc
dec
mov
adc
lock
jns
adc
cmp
mov
xor
test
gs
fld
pop
fbstp
sub
sub
cmp
xchg
xor
or
jge
xlat
and
cli
and
cmp
xor
mov
mov
cmp
cmc
(bad)
jle
adc
(bad)
repz
jmp
movs
cwde
mov
add
mov
in
repnz
mov
movs
test
sub
ds
xchg
scas
mov
dec
mov
mov
es
mov
jp
xor
out
mov
sbb
add
fiadd
mov
xlat
push
dec
(bad)
test
xor
fld
int3
push
adc
push
push
sub
in
mov
jg
lock
nop
mov
sbb
cdq
popa
sub
sti
outs
push
ja
or
les
in
push
ja
mov
pop
gs
(bad)
cmps
fwait
idiv
aad
xchg
pop
sbb
cmp
or
aaa
mov
sub
or
sbb
sbb
test
sahf
add
les
mov
popa
cmp
dec
adc
in
rol
repnz
imul
(bad)
aad
stc
sub
mov
(bad)
xor
mov
mov
stos
cmc
std
push
or
add
loopne
fwait
and
inc
fcomp
push
(bad)
xchg
sub
inc
fsubp
mov
cld
push
xchg
mov
sub
or
xchg
jl
xlat
lahf
dec
cdq
popa
xor
pop
inc
cmp
fsubr
in
inc
bnd
or
clc
jns
adc
int
xchg
pop
add
sti
add
mov
int
fild
inc
xor
mov
mov
stos
pop
repz
jge
ret
mov
mov
xchg
retf
adc
adc
push
ja
repz
(bad)
repz
push
imul
mov
push
add
mov
test
dec
test
pop
mov
loopne
imul
data16
push
gs
ins
ret
push
shr
dec
mov
pop
std
mov
jl
cmp
dec
and
sub
rol
retf
mov
push
arpl
fiadd
inc
call
sqrtps
xchg
daa
fyl2x
add
add
les
movs
pop
in
mov
call
out
(bad)
sahf
rol
sub
outs
outs
mov
iret
shl
call
inc
inc
les
push
adc
stos
les
mov
leave
mov
pop
jne
sbb
jb
repz
xor
ret
in
mov
mov
xchg
nop
int
cmps
or
ret
dec
or
xchg
push
and
cmc
ins
aam
int
xor
ins
push
aam
(bad)
ins
js
jae
sbb
in
ret
popa
loop
push
inc
mov
adc
sbb
xchg
mov
or
lods
push
push
lods
in
rol
es
pop
inc
mov
imul
retf
jmp
xchg
xor
mov
jmp
js
sbb
ss
or
stc
stos
ret
xchg
loope
enter
adc
or
add
movs
ja
inc
repz
pop
jnp
add
pop
inc
mov
xlat
je
push
dec
xor
mov
stos
push
es
ins
fld
inc
add
inc
jnp
sbb
xchg
fs
jne
xor
xor
adc
dec
lock
repz
ficom
jmp
sub
div
cwde
fs
xchg
xor
out
sub
fst
retf
in
int3
push
sub
(bad)
out
loope
and
mov
inc
or
icebp
std
sahf
fidivr
js
sub
mov
sub
add
ja
dec
call
sbb
jmp
add
neg
das
xor
push
in
lods
inc
daa
mov
xor
cmps
pop
xor
(bad)
or
scas
xor
test
and
ficomp
ss
test
sti
jb
fistp
jle
pop
add
mov
les
cmp
retf
pop
dec
xlat
iret
data16
mov
push
ja
dec
sbb
jmp
push
loop
pop
pop
fsubr
outs
dec
in
mov
xlat
jb
je
push
mov
mov
dec
jno
inc
repnz
and
sbb
addr16
adc
rcl
push
pop
and
inc
in
in
neg
or
inc
sub
mov
push
add
mov
fucom
jmp
je
sub
cwde
jns
dec
inc
adc
retf
mov
lock
ins
in
ss
pop
into
xchg
or
jmp
hlt
jo
mov
mov
push
push
cld
pop
push
pushw
sbb
mov
mov
jl
jmp
arpl
popa
adc
adc
ss
aaa
jecxz
adc
pushf
shl
pop
sahf
scas
adc
stos
icebp
loopne
(bad)
movs
xchg
inc
cmp
enter
test
outs
cld
into
xor
xor
sub
jle
mov
ret
mov
add
outs
ret
dec
jp
scas
cmp
cld
sbb
dec
xchg
mov
aaa
cmp
adc
push
cmp
mov
fxch
sbb
sub
cmp
les
xlat
lods
aad
mov
daa
sub
mov
jge
and
adc
adc
cli
movs
int3
fadd
fs
fs
ins
jge
adc
popf
and
(bad)
jo
in
test
movs
dec
pushf
sub
xor
js
call
stos
mov
and
and
addr16
ins
fcmovnu
sub
sbb
sbb
mov
mov
and
mov
jl
scas
ret
es
mov
pop
jae
pusha
cmp
adc
sub
pushf
mov
arpl
add
mov
mov
ja
movs
jae
mov
dec
cwde
and
jns
mov
and
sub
mov
sti
js
jg
out
sub
mov
mov
mov
das
dec
cmp
pop
xchg
fiadd
lods
xchg
iret
push
les
popa
add
xlat
sub
test
inc
out
and
mov
shl
pop
retf
xor
cli
fiadd
xor
fdivr
jecxz
mov
xchg
or
push
lods
push
cmc
jmp
ins
(bad)
mov
jl
pusha
or
call
sbb
sub
scas
jge
aaa
imul
pop
repz
fst
push
push
je
shr
idiv
pop
xchg
(bad)
pop
test
cmp
test
cmp
push
mov
test
push
sub
mov
imul
stc
jl
fist
mov
test
jno
iret
push
mov
ret
das
adc
outs
ins
int3
cmc
xchg
popf
add
sub
sbb
loop
cmps
sbb
add
mov
inc
sbb
mov
dec
inc
out
jbe
rol
test
(bad)
std
jae
lods
imul
aaa
adc
push
adc
pop
emms
pusha
lods
inc
(bad)
js
cmc
adc
dec
rcl
lea
pop
inc
mov
mov
ss
push
(bad)
jecxz
outs
int3
sub
jnp
(bad)
int3
pop
mov
and
dec
sub
jno
pop
cmc
jecxz
xchg
mov
icebp
pop
adc
hlt
mov
mov
jle
ret
push
inc
fstp
ja
fdivr
jl
stc
je
cld
retf
xchg
daa
xchg
sar
rcr
xchg
jnp
out
dec
mov
lds
loop
retf
popf
pop
imul
jle
out
iret
and
leave
mov
scas
cmp
clc
daa
cmp
rol
jnp
es
jnp
pop
fnstenv
clc
fmul
xor
adc
mov
dec
push
out
loope
dec
(bad)
adc
fcmovbe
ret
add
sbb
popa
xchg
shr
or
mov
fcomp
ja
fst
mov
test
retf
mov
scas
mov
jmp
call
xor
loop
js
lea
pop
mov
aas
mov
jmp
jns
mov
out
xchg
int3
ins
outs
iret
test
pop
or
add
pusha
lock
gs
mov
out
push
push
dec
stos
push
mov
test
xchg
mov
js
into
sbb
and
and
xchg
push
rcr
xchg
ins
xchg
mov
xchg
pop
adc
and
xchg
jo
dec
movs
sub
adc
xor
sub
adc
and
add
xchg
push
cli
push
ins
aad
push
add
pop
dec
dec
int
out
loop
or
dec
cwde
in
rcl
or
pop
push
pusha
cmc
aas
add
seta
push
je
cmps
mov
shl
(bad)
stc
mov
xchg
xchg
mov
cld
test
gs
dec
xor
add
sbb
sbb
push
push
ins
outs
repnz
lea
ja
sbb
cs
mov
and
mov
das
jmp
sbb
mov
xchg
inc
pop
xor
cmps
fist
mov
ins
mov
(bad)
sbb
and
aaa
das
jp
pop
fstp
mov
xchg
xor
(bad)
in
mov
popa
add
ins
cmc
nop
dec
js
mov
lds
(bad)
ficomp
mov
sub
mov
cmps
cdq
stos
sub
cmps
xchg
adc
test
and
xchg
or
mov
pusha
xchg
add
adc
mov
mov
mov
es
pop
ja
xchg
sbb
mov
jg
cs
pop
test
adc
mov
cmc
xchg
xor
jg
test
xor
not
addr16
sub
mov
jne
dec
push
pop
push
in
sti
jp
jle
adc
dec
cdq
lahf
sub
lods
sar
sub
xor
loope
jae
push
pop
call
sbb
push
hlt
add
idiv
aas
loopne
inc
into
clc
xchg
arpl
cs
push
imul
and
or
ret
out
push
mov
fiadd
push
cdq
getsec
fild
aas
fs
pop
jb
lea
call
fisub
xchg
es
das
loope
push
xchg
std
cmps
add
cmps
xchg
push
loop
xor
jecxz
loop
fadd
inc
mov
xchg
xlat
inc
call
mov
pop
xor
dec
xor
mov
and
pop
mul
test
retf
rcl
sub
add
or
xor
hlt
lods
rcr
repnz
mov
pop
cmp
mov
mov
dec
or
or
jbe
pop
xchg
and
sbb
iret
and
pop
outs
cdq
adc
xor
and
inc
(bad)
shr
sub
inc
mov
sti
mov
add
mov
pavgb
pusha
push
scas
push
or
mov
dec
pop
je
add
ror
dec
mov
add
das
stc
lea
dec
std
mov
push
cmps
lahf
jae
xchg
push
pop
add
jmp
inc
xor
pop
adc
ror
or
inc
movs
fsubrp
pop
mov
aam
arpl
ins
call
nop
in
dec
pop
inc
(bad)
arpl
jle
sahf
fsubr
repz
sahf
inc
stc
cmp
ror
mov
adc
loopne
repnz
fisubr
cwde
std
sub
cmps
add
in
push
pop
fidivr
mov
cli
xchg
mov
fisubr
dec
xchg
stos
aas
jae
mov
mov
imul
aaa
outs
sbb
jmp
adc
pop
addr16
pop
jo
jmp
mov
(bad)
ja
mov
out
ss
test
pushf
mov
inc
mov
stos
xchg
adc
jb
stc
xor
cwde
stos
xchg
jo
and
icebp
and
scas
sti
out
daa
call
popa
cmp
scas
or
jmp
xchg
retf
ja
pop
loope
adc
aas
ins
sub
lds
or
bound
cld
mov
enter
jl
mov
mov
jecxz
dec
mov
lahf
push
aas
(bad)
sub
dec
push
out
fnstenv
repz
aaa
inc
dec
pop
or
mov
out
xchg
fistp
inc
aaa
ja
jmp
das
repnz
icebp
(bad)
enter
div
sahf
push
xchg
sub
xchg
mov
in
icebp
xchg
mov
jno
dec
push
scas
dec
out
add
and
addr16
and
xlat
mov
and
popa
movs
sti
sti
mov
addr16
ins
push
loope
jecxz
outs
xchg
jnp
inc
cmp
mov
inc
aad
popf
nop
pop
cmp
adc
push
inc
lods
retf
neg
call
xchg
retf
imul
in
sbb
(bad)
mov
jnp
cmps
cs
pop
sahf
dec
dec
nop
cmp
xor
sbb
arpl
xor
fisubr
add
hlt
pop
std
push
xor
pusha
lods
mov
push
shl
jecxz
mov
call
dec
add
das
mov
xor
xchg
call
mov
imul
cmp
cmc
push
daa
pop
cdq
mov
idiv
add
mov
xchg
xlat
ret
push
jae
adc
lods
fs
mov
and
mov
mov
sub
jecxz
pusha
call
xchg
dec
inc
stos
push
push
cmps
icebp
cmc
pop
or
xor
aaa
mov
adc
cmp
in
shl
imul
int3
out
xchg
mov
cmps
ins
inc
mov
movs
pop
sti
pop
mov
push
jb
jnp
mov
arpl
or
jno
shl
std
cmc
outs
adc
cli
push
imul
add
add
aam
retf
xor
out
fucom
push
mov
pop
lahf
adc
and
sti
pushf
test
and
mov
push
das
dec
hlt
sbb
pop
xchg
adc
(bad)
fimul
and
lahf
dec
fs
sbb
test
cs
sub
dec
pop
lods
into
push
push
in
loope
push
mov
push
dec
cmp
pop
xchg
pop
inc
movs
daa
pop
and
and
cmp
popa
cmps
jnp
leave
dec
sub
les
cmps
add
jae
jbe
aas
mov
adc
and
and
shl
loope
int3
jge
jl
movs
or
adc
ret
mov
int
xchg
test
fsub
cmp
sbb
push
xchg
jmp
(bad)
mov
(bad)
jle
xor
ins
adc
xlat
and
mov
mov
mov
mov
ins
mov
mov
out
in
push
jl
das
(bad)
push
or
pop
push
mov
scas
jp
adc
mov
push
mov
xchg
xchg
icebp
sbb
jmp
(bad)
push
add
jmp
push
sbb
jae
and
lock
ret
loopne
cmps
jbe
inc
ja
mul
sbb
fstp
jnp
inc
add
dec
inc
dec
mov
dec
stc
bound
aam
pop
adc
xor
add
out
cld
mov
sbb
add
xlat
mov
mov
ficom
lds
cmp
sbb
cmp
add
loope
loope
xchg
pop
mov
inc
mov
jmp
ficomp
imul
xchg
adc
or
jge
push
fadd
cmp
pop
call
shr
xor
and
mov
adc
pop
enter
mov
mov
pop
cmps
mov
jl
xor
jecxz
stos
popa
push
shr
lods
push
in
ror
mov
loope
and
pop
cmp
shl
clc
bound
jg
sub
mov
add
std
jg
add
movs
push
mov
jmp
shr
mov
and
(bad)
in
cmp
daa
out
xchg
xchg
js
shl
mov
(bad)
(bad)
jl
inc
neg
xor
int
aaa
sti
loope
add
pushf
gs
ja
scas
sbb
shl
pop
pop
call
jae
sub
sbb
mov
xchg
mov
outs
xchg
xor
push
stos
daa
push
data16
sub
push
cmp
add
in
rol
and
aad
fucomip
test
jbe
mov
xchg
xor
sar
sbb
jg
jmp
imul
fldenv
pop
xchg
pop
enter
add
fimul
push
rcl
in
out
int
js
scas
xor
aas
mov
xchg
jne
outs
pusha
rcl
(bad)
ins
repnz
loopne
ficom
mov
jns
(bad)
or
mov
adc
lea
dec
movs
add
sub
mov
out
(bad)
hlt
jecxz
mov
pop
xor
retf
pop
mov
(bad)
in
fcomp
inc
aad
mov
add
gs
jns
push
es
pop
fwait
nop
dec
ins
push
xchg
mov
pop
and
aas
pop
rcl
add
out
inc
and
pop
and
fcomip
lods
pop
fwait
cmps
rcr
shl
pop
stc
aam
jo
pop
xchg
lods
adc
aad
jae
add
js
imul
pop
(bad)
aad
fidiv
ins
(bad)
pop
rcl
adc
(bad)
mov
test
aas
pushf
sbb
pushf
cmps
inc
pop
mov
inc
and
mov
in
mov
pop
data16
(bad)
sub
imul
xchg
adc
cmp
inc
cmps
jecxz
nop
inc
sbb
sbb
xchg
push
retf
sub
mov
das
rcr
stc
fwait
int3
test
mov
lds
ret
jmp
es
and
sub
ret
jle
jmp
xor
lods
inc
das
push
enter
ss
mov
mov
mov
sub
scas
sub
popa
test
rcl
push
or
adc
js
int
add
dec
sbb
imul
je
cdq
inc
pop
adc
jnp
rcl
xor
push
pop
xchg
sub
clc
cmp
outs
push
xor
pop
mov
push
add
test
loope
rcl
scas
dec
loopne
dec
test
and
lods
xchg
and
sub
daa
jnp
scas
test
outs
and
outs
pop
imul
cmp
and
sub
adc
lock
push
out
cmp
adc
das
aas
popa
repnz
jno
out
mov
imul
movhps
(bad)
mov
test
pop
pop
test
movs
iret
mov
push
mov
pop
movs
inc
cmp
xor
imul
dec
int
ret
fwait
gs
jae
jne
adc
in
pushf
xor
inc
cmp
xor
loop
(bad)
jge
inc
and
mov
pusha
push
scas
xor
mov
jge
cmp
movs
mov
mov
sahf
cmps
mov
lods
and
xor
popa
add
xchg
pop
dec
mov
inc
push
outs
ds
out
(bad)
fist
inc
aaa
xchg
mov
push
sub
into
adc
mov
pop
pop
mov
daa
adc
test
fidiv
push
xchg
or
dec
pop
scas
data16
idiv
popa
mov
mov
cwde
push
inc
push
inc
stc
inc
cmp
mov
aam
sahf
lods
mov
push
sbb
(bad)
cld
ror
ror
pop
out
mov
leave
aaa
aas
jne
aas
fcom
cmc
ror
add
mov
imul
(bad)
sub
into
test
inc
and
mov
or
cmp
das
jmp
mov
lahf
cmp
push
jp
inc
aaa
cmp
pop
mov
push
fstp
arpl
adc
rol
sub
sub
pop
xchg
clc
xor
in
inc
ret
ja
mov
arpl
ret
cmc
inc
sub
jecxz
ror
cmc
push
mov
pop
(bad)
inc
stos
addr16
jnp
jg
add
mov
pop
popf
sar
lods
jmp
in
aad
loope
jb
cmp
cmp
lods
jg
inc
pop
or
rcr
or
jne
out
outs
aad
and
gs
mov
ds
imul
ret
aam
in
inc
dec
pop
rcr
call
repnz
test
push
(bad)
sub
lahf
retf
inc
enter
in
sub
aad
or
pop
adc
sub
loopne
dec
pop
jno
cli
sub
mov
lods
repz
(bad)
jecxz
mov
addr16
not
pop
ret
adc
pop
stos
sbb
pop
scas
in
dec
aaa
sar
push
lahf
test
aas
mov
call
sar
mov
aaa
dec
pop
sbb
fdivr
dec
in
jb
repz
adc
sub
dec
gs
sub
paddusb
cli
popa
pop
inc
out
pop
rol
mov
xlat
adc
int3
mov
sar
jmp
mov
mov
in
cmp
(bad)
(bad)
aam
dec
out
push
pop
scas
ror
hlt
cmp
popa
and
push
imul
addr16
adc
mov
jae
xchg
ret
aaa
pop
retf
jb
fstp
jl
pop
xor
popf
imul
aas
inc
into
test
lock
pop
mov
clc
xchg
repz
sub
popf
gs
test
cld
lahf
or
(bad)
xor
and
repz
adc
cmp
or
aad
adc
push
mov
out
dec
and
clc
push
stos
xchg
cmp
xchg
leave
jle
shr
or
fidiv
in
push
imul
cwde
sub
push
(bad)
jmp
test
and
sbb
xor
jl
dec
xor
and
iret
inc
jle
pop
fcmovnb
mov
test
out
lods
dec
cs
fcomi
add
(bad)
std
cli
push
mov
sub
sti
addr16
push
icebp
ret
or
mov
jecxz
int
mov
sbb
mov
mov
jno
jno
ficom
xchg
mov
bound
mov
rcr
inc
xchg
imul
in
int
jp
jg
cmp
pop
dec
outs
mov
mov
(bad)
pusha
lahf
add
aas
and
ss
adc
mov
mov
jmp
cmps
cmp
in
lock
in
pushf
xchg
je
aaa
jae
rcl
sbb
outs
inc
push
movs
imul
pop
ins
xchg
mov
mov
out
bnd
das
test
out
in
xchg
adc
in
test
loopne
add
ret
cmp
mov
mov
scas
jp
push
push
lea
clc
je
addr16
push
inc
je
enter
and
xor
mov
cmp
imul
mov
adc
sbb
sub
sbb
fcomp
jmp
add
sahf
mov
aas
imul
add
outs
mov
adc
xor
jnp
std
jg
mov
push
std
mov
mov
inc
jmp
loop
mov
adc
in
imul
in
pusha
mov
repnz
dec
cmp
daa
or
xchg
adc
aaa
mov
stos
xor
lahf
xchg
aaa
hlt
dec
hlt
je
neg
lahf
shl
fxch
sub
sbb
add
mov
xchg
mov
jnp
enter
or
adc
ss
ja
int
and
mov
push
sub
mov
mov
mov
lds
loope
add
cwde
xchg
in
jecxz
xchg
jnp
jge
test
cmp
cs
xor
ror
sbb
inc
pusha
sub
scas
pop
into
adc
pop
mov
pop
inc
pop
cwde
sbb
adc
mov
push
mov
fcmovnbe
mov
shr
sbb
jl
sti
es
jmp
dec
cli
inc
iret
xchg
sbb
pop
into
enter
or
xlat
gs
out
jo
mov
test
aas
cmc
movs
mov
scas
cdq
cdq
or
(bad)
std
push
sbb
lods
inc
cmc
jmp
or
push
push
xor
mov
adc
dec
jo
ret
loop
push
inc
inc
push
gs
(bad)
mov
cmp
adc
pop
pop
add
jae
mov
mul
dec
dec
or
add
cmps
sub
push
xchg
cmps
xchg
xchg
cmp
push
mov
pop
xchg
push
movs
ret
push
inc
pop
vandnps
iret
pop
cli
push
test
sbb
int
xchg
jb
je
add
or
out
push
push
icebp
(bad)
ins
mov
sub
inc
jle
push
jnp
test
jmp
(bad)
xor
in
jp
inc
cmp
sbb
mov
push
cmp
bound
lods
add
or
mov
mov
add
dec
jns
adc
lahf
xor
add
(bad)
aad
and
jns
cs
call
aas
fucomip
mov
cdq
lods
outs
nop
sbb
jb
out
mov
enter
mov
or
loope
or
adc
cdq
sahf
xchg
inc
cmp
fs
dec
out
stos
repnz
int3
pop
fld
imul
dec
xor
inc
mov
shl
push
add
mov
int
icebp
nop
jmp
jmp
adc
mov
xchg
sbb
out
cmp
inc
test
loop
popa
and
push
mov
pop
out
inc
adc
xchg
jmp
cmp
dec
jp
and
mov
pushf
daa
and
xchg
hlt
inc
je
das
push
adc
mov
scas
sbb
lods
sub
lea
push
movs
mov
cld
cmps
adc
addr16
int3
push
aaa
or
ins
mov
sbb
repz
and
cdq
or
es
popf
push
pop
and
dec
push
jmp
add
popf
add
ret
ja
adc
ret
jp
mov
cdq
pop
dec
mov
push
addr16
ds
int
sbb
lds
loop
scas
mov
and
dec
mov
loop
imul
movs
mov
mov
(bad)
xor
sub
and
mov
rcr
sub
jb
clc
add
lar
stos
or
lds
jecxz
push
inc
mov
jae
push
rcl
adc
mov
aaa
addr16
jmp
ins
pop
mov
pop
mov
daa
jo
ficom
(bad)
pop
mov
outs
sub
push
sbb
int3
xor
push
fnstsw
inc
in
pop
mov
mov
sub
mov
push
popa
cmps
xchg
inc
mov
movs
dec
jns
mov
inc
pusha
mov
inc
jo
mov
cdq
out
jbe
out
add
std
cld
push
gs
(bad)
mov
add
push
pusha
inc
pop
mov
push
int3
clc
test
inc
and
xchg
xor
mov
fist
inc
push
or
out
out
jl
(bad)
pop
cmp
nop
icebp
test
pop
dec
stos
sub
dec
mov
sbb
pop
xchg
sub
xor
aas
push
push
arpl
neg
mov
pop
imul
sbb
sahf
adc
mov
dec
mov
leave
ficom
inc
call
inc
cmps
and
fst
xlat
xchg
dec
sar
mov
loopne
push
in
jmp
add
push
jmp
(bad)
fstp
jle
loopne
mov
aad
or
cmps
jg
sbb
xor
hlt
ja
mov
or
adc
(bad)
in
fcomp
sbb
out
inc
and
shl
pop
lods
in
cmps
popa
icebp
push
sub
mov
mov
ss
or
jns
sti
mov
sub
jne
lds
push
es
sbb
push
mov
cwde
test
test
mov
cmps
lahf
mov
xchg
or
(bad)
jns
xchg
mov
xchg
mov
mov
or
adc
pop
ja
scas
stos
rol
inc
arpl
inc
xchg
stos
xchg
inc
into
dec
sar
adc
jne
pop
mov
jge
addr16
dec
arpl
call
sbb
xchg
fbstp
jae
outs
dec
shl
cs
inc
(bad)
bound
or
popa
jmp
push
cmc
xchg
daa
test
or
pushf
call
and
inc
mov
cmovl
mov
and
xchg
ss
and
jnp
mov
inc
pop
repnz
xchg
sub
cmp
jmp
ror
pop
adc
mov
sub
xchg
aad
sub
pop
xchg
jb
lahf
lea
repz
loop
sub
pop
mov
data16
push
or
xor
add
sub
cmp
cmp
adc
and
jbe
add
in
inc
inc
add
adc
shr
aam
dec
(bad)
sti
cmp
sbb
pop
xchg
add
std
sbb
jns
jbe
movs
or
xor
dec
inc
inc
mov
cmp
add
movs
(bad)
xchg
rol
not
pop
loope
dec
leave
xor
movs
ins
mov
add
ret
out
and
dec
mov
lods
mov
add
je
ss
es
add
repz
jnp
sbb
leave
and
add
lods
push
stos
xor
jns
cs
in
jnp
inc
xor
sbb
mov
jb
push
xor
fwait
pop
call
scas
loopne
cwde
adc
shr
xor
inc
sub
cwde
mov
imul
ret
dec
pop
(bad)
xchg
add
ret
pop
nop
retf
test
and
pop
sar
push
arpl
pop
mov
fsubr
xor
ret
nop
jge
push
into
fs
test
movs
shl
aam
mov
mov
jge
outs
ins
pop
ins
inc
jns
pop
pop
bndldx
xor
cmp
retf
sub
imul
test
jg
add
imul
fwait
and
bound
enter
pop
(bad)
pop
adc
dec
iret
jle
call
pop
jmp
and
fistp
push
and
add
or
rcr
cs
stc
fld
jne
and
dec
iretw
cwde
enter
or
fwait
pop
pop
and
jbe
jb
call
in
xchg
cmps
je
adc
lods
fwait
sub
fcomp
mov
or
cld
dec
movs
inc
popa
(bad)
fs
mov
jno
fdivr
cmp
jmp
pop
movs
sub
sub
test
sbb
iret
mov
jmp
xor
mov
test
xchg
jno
add
inc
das
push
clc
icebp
cmp
lds
sbb
in
pusha
int3
cld
icebp
ficomp
int3
mov
popf
inc
xchg
sahf
xor
mov
fs
xor
les
popf
imul
mov
in
sbb
jmp
cli
sbb
add
mov
mov
pusha
icebp
das
out
ja
mov
je
sbb
movs
mov
push
dec
dec
sub
and
jl
sub
mov
popf
adc
jle
pop
stos
mov
repz
dec
enter
mov
lds
jge
(bad)
pushf
fmul
lods
lock
stos
int
cmps
mov
retf
fild
dec
imul
and
aaa
xchg
xor
nop
and
frstor
sub
sub
out
push
mov
mov
adc
sub
mov
imul
in
add
sub
ror
push
inc
mov
repz
iret
sub
inc
jp
inc
dec
call
test
mov
inc
xchg
sahf
dec
not
xchg
inc
clc
xchg
aam
fbstp
dec
in
mov
cmps
ins
(bad)
int3
rcr
into
mov
mov
loope
mov
sub
test
mov
or
imul
lahf
ins
sar
push
jmp
dec
nop
fistp
jae
xor
sahf
push
int3
out
(bad)
lock
(bad)
sub
js
xchg
loope
cdq
mov
pop
jp
les
pop
mov
xchg
dec
cs
jns
dec
js
jmp
sbb
(bad)
xor
jnp
sub
mov
ret
cmp
(bad)
jae
aaa
dec
sub
int
je
adc
pop
fwait
jl
pop
xor
add
push
dec
cmp
aaa
das
lds
push
cmps
cmp
dec
sub
sub
add
addr16
and
mov
adc
repz
rol
call
sti
repz
and
icebp
sbb
push
shl
nop
cmp
xchg
pop
add
push
mov
fiadd
fisttp
data16
ja
dec
cld
loop
jo
xchg
pop
shl
push
jecxz
jnp
imul
stc
sti
cmp
outs
aam
outs
sub
adc
test
cmps
in
loop
sti
bound
add
out
jmp
(bad)
mov
sub
jecxz
sub
pop
fimul
in
add
sub
push
cmp
xchg
in
pop
pop
mov
mov
out
clc
adc
(bad)
mov
or
call
outs
rol
stos
jbe
inc
xchg
test
(bad)
fcomp
push
push
iret
imul
cmp
ss
push
aaa
mov
sub
in
loop
pop
push
or
jb
rcl
push
inc
aam
jb
mov
call
icebp
xchg
mov
mov
pop
add
or
pop
adc
push
(bad)
adc
les
push
and
sbb
je
dec
cmp
shl
jge
fstp
out
in
call
dec
ins
add
das
inc
jl
mov
repnz
cmp
fwait
jp
out
sub
xor
enter
ror
rol
out
pusha
jl
pop
out
pushf
pop
sbb
sub
or
pusha
or
mov
adc
div
cmp
or
cmp
jb
add
xor
xor
inc
push
jns
mov
shl
xor
mov
(bad)
(bad)
lods
push
loop
rcl
aam
adc
xchg
popf
loop
pop
push
sub
mov
pop
(bad)
gs
sub
or
scas
mov
mov
repz
fist
fs
loope
les
scas
or
xlat
lea
add
pop
jb
cmps
xchg
or
cld
neg
cmps
mov
dec
mov
dec
or
inc
in
inc
adc
xor
adc
rol
data16
and
sahf
popf
iret
mov
pop
cmp
pop
push
adc
lods
and
adc
leave
pushf
imul
int3
jge
int
stmxcsr
add
aas
(bad)
dec
ds
sub
pop
aam
rol
add
das
push
inc
cdq
not
in
jnp
inc
imul
and
ss
push
popa
xchg
imul
cmp
inc
enter
xlat
adc
inc
jae
xor
xor
xchg
ror
pop
inc
cdq
scas
pop
mov
es
aam
jno
push
mov
add
cmp
(bad)
mov
or
sub
sbb
xchg
stos
xor
scas
test
mov
lahf
mov
sbb
and
add
and
mov
jnp
mov
mov
ficomp
aas
push
mov
out
movs
xchg
xchg
cmp
add
imul
push
adc
je
lahf
mov
xchg
lock
idiv
in
or
push
retf
sub
dec
mov
repnz
movs
push
push
test
loop
jp
adc
icebp
pop
push
movs
ins
cmc
mov
push
repnz
aas
test
daa
imul
jecxz
jg
loop
or
jns
cmp
mov
push
int3
int3
fs
outs
int3
dec
cmps
push
jmp
mov
ret
push
mov
mov
data16
xchg
inc
clc
mov
ins
inc
xor
jnp
icebp
(bad)
mov
fidivr
and
ds
sar
call
aam
push
(bad)
push
pop
add
push
push
push
and
int
call
lods
sar
data16
mov
shl
jnp
ds
and
dec
fcomi
fiadd
jl
cmp
mov
mov
stos
mov
scas
push
push
data16
push
xchg
dec
retf
jg
sar
or
sub
imul
and
adc
in
add
div
retf
ror
xchg
sbb
xchg
push
outs
stos
mov
les
int
retf
push
mov
repz
fwait
mov
mov
pop
hlt
cmp
lea
mov
add
or
cld
inc
mov
and
pusha
fild
mov
push
adc
and
aaa
shl
test
ror
jmp
rol
xor
and
add
aam
icebp
into
test
cmp
loope
fdivr
dec
mov
adc
mov
mov
mov
setns
cwde
call
mov
inc
loopne
daa
mov
repz
imul
shr
xchg
cmps
add
adc
cld
inc
lds
jmp
sub
sub
hlt
in
fld
cmp
xchg
xchg
cmp
push
ins
pop
mov
mov
xchg
stos
(bad)
stc
mov
jmp
xchg
add
lods
mov
(bad)
sbb
sub
jno
rcr
(bad)
and
jbe
xchg
cmp
mov
das
or
scas
inc
pop
fmul
mov
loope
mov
in
mov
pop
cmps
push
clc
mov
cmps
in
xor
iret
jnp
sub
jb
push
ret
cmp
push
adc
das
test
sub
mov
movs
and
es
and
adc
retf
fs
xchg
mov
loope
mov
daa
clc
stc
jle
or
sbb
imul
mov
push
ins
xor
fucomi
xchg
pop
gs
cld
fld
lods
iret
or
jmp
cmps
nop
out
scas
xor
cs
fld
cmp
adc
or
pop
jnp
enter
adc
push
pop
push
mov
mov
fs
xchg
xchg
enter
add
ret
add
xor
into
ins
cmp
js
inc
jecxz
sbb
loope
xlat
mov
sub
push
shl
ret
jg
cwde
or
push
pop
out
sahf
xchg
retf
jne
in
sbb
xchg
push
dec
jbe
jl
cdq
sub
movs
retf
gs
cs
and
pop
leave
movs
jg
jne
fsubp
in
inc
clc
ror
sti
inc
mov
(bad)
mov
ja
pop
pop
mov
xlat
ficom
and
enter
cmps
repnz
sub
adc
mov
mov
jae
(bad)
cmp
jp
xchg
pop
int
mov
outs
xchg
jo
push
dec
sub
push
add
pusha
xor
or
sub
mov
xchg
adc
jmp
and
scas
mov
pop
aaa
ror
fsubr
push
out
jns
or
jmp
dec
mov
test
fnstsw
pop
cwde
mov
pop
dec
sbb
jg
mov
or
out
sbb
inc
jp
outs
(bad)
dec
mov
aas
and
imul
pop
out
movs
xchg
jmp
movs
sbb
sbb
xor
xchg
pop
xor
jo
mov
xor
out
shl
inc
mov
mov
mov
fnstenv
jbe
sub
cmp
int
test
sbb
add
int
out
mov
push
sub
fsubr
and
cmp
(bad)
sbb
imul
xchg
mov
cwde
out
ins
push
loop
xor
enter
pop
mov
and
and
mov
mov
adc
mov
call
bound
pop
mov
xor
daa
rcl
jl
fsub
loopne
dec
push
daa
ret
aad
loop
push
dec
and
add
das
xor
mov
(bad)
jne
xor
push
cmp
xchg
mov
js
dec
jae
mov
ins
les
daa
aam
ins
jle
out
ins
arpl
add
cmc
sbb
jge
mov
clc
sub
sub
test
add
xlat
mov
pop
int
fild
mov
mov
out
(bad)
sar
inc
gs
cmp
add
pop
mov
scas
loop
mov
vpinsrw
(bad)
into
ins
add
dec
jmp
pop
mov
inc
or
mov
xchg
push
mov
cmp
push
ins
xor
ins
repz
cmovae
jp
mov
add
xchg
icebp
inc
mov
pop
sub
dec
dec
(bad)
jg
jg
pushf
and
add
fnstsw
fild
mov
cmps
std
dec
pop
push
xor
sub
pop
mov
rcr
and
and
or
les
adc
sar
int3
aaa
inc
std
push
out
add
(bad)
sbb
adc
shr
cld
out
adc
xor
outs
jb
ret
push
imul
mov
pop
sbb
fmul
or
dec
ds
rol
repnz
shl
mov
cwde
pop
or
retf
hlt
and
paddusw
cmp
adc
push
stc
adc
inc
jmp
test
jb
fdivr
sti
mov
or
fimul
xchg
xchg
xlat
xchg
mov
lods
xor
sbb
mov
sub
jmp
cmc
push
xor
mov
in
push
scas
jne
dec
out
test
pushf
mov
repnz
imul
mov
pop
push
movs
test
hlt
xor
xchg
fmul
scas
and
cli
mov
add
push
movs
ds
mov
push
fcmovnb
ficom
arpl
pop
mov
fwait
xor
mov
jg
push
mov
mov
push
in
xchg
jl
call
jge
cld
cmp
jge
sbb
xor
push
lds
jge
in
mov
inc
or
xchg
shr
or
xchg
sbb
jmp
hlt
xchg
jecxz
std
jb
mov
and
pop
adc
sbb
loopne
jle
hlt
inc
inc
jg
inc
fbstp
jbe
es
inc
mov
sub
jo
fidivr
jmp
cmp
ds
out
int3
not
or
adc
mov
inc
push
mov
jne
or
hlt
ja
loope
or
(bad)
stc
or
hlt
into
dec
jp
jmp
jmp
in
or
shl
(bad)
mov
push
setp
aam
dec
repz
mov
sub
sub
jmp
cmp
xor
mov
cmp
jno
jne
and
mov
xchg
xchg
rcr
retf
mov
inc
aam
shr
call
sti
adc
shr
ja
jno
ins
push
call
or
jns
cmp
push
add
mov
jmp
pop
inc
mov
nop
stos
dec
outs
out
mov
pushf
mov
es
fidiv
push
jmp
es
pop
mov
mov
mov
and
std
xchg
jmp
nop
iret
sbb
(bad)
sub
retf
mov
sub
xchg
stos
ds
mov
jmp
jmp
adc
pusha
int3
pop
popf
mov
mov
pop
add
sbb
xor
push
test
(bad)
add
cld
adc
mov
stos
fstp
mov
enter
test
scas
in
aas
push
inc
in
call
and
push
sub
imul
retf
fbld
mov
arpl
fmul
shr
xchg
mov
jl
cmp
sbb
daa
adc
in
(bad)
jae
stc
mov
into
lock
xor
jae
or
arpl
fwait
xor
adc
dec
sub
or
cmp
sbb
inc
xor
cwde
dec
js
icebp
add
mov
inc
out
adc
push
mov
imul
cmc
dec
xor
mov
fs
out
pop
cld
pop
call
or
cmp
cld
add
dec
rcl
sbb
sbb
inc
in
clc
pop
call
imul
ret
mov
pop
out
das
add
and
gs
pop
int
clc
cmp
retf
cmp
pop
inc
cmp
rcl
inc
jbe
jl
push
pop
sbb
(bad)
jae
stos
mov
jecxz
fwait
and
arpl
push
std
sub
cmp
mov
mov
nop
cmp
sbb
mov
mov
sbb
xchg
out
icebp
mov
pop
in
aam
leave
imul
clc
adc
sub
test
pop
jmp
pop
add
fpatan
cmp
js
nop
cmp
xor
loopne
cmp
out
lods
rcr
adc
dec
mul
jl
cmps
aam
cwde
pop
nop
jl
leave
push
loope
aas
cmps
cld
mov
inc
ja
pop
enter
frstor
mov
cmp
xor
pop
adc
adc
fstp
dec
js
mov
outs
mov
mov
mov
sbb
enter
sub
shl
inc
xor
sbb
popf
dec
push
xchg
fcomp
jmp
sahf
or
xchg
mov
pop
pop
push
add
push
push
jge
imul
ins
rcl
aas
sbb
xor
xor
movs
ins
hlt
sbb
clc
xchg
mov
mov
sbb
xchg
mov
adc
pop
out
xchg
inc
ret
cld
inc
adc
int
xchg
and
(bad)
or
in
jp
aam
stos
pop
xor
pop
stos
ss
test
(bad)
std
dec
scas
jg
push
daa
scas
xor
xchg
ins
mov
test
adc
loopne
adc
push
or
(bad)
jmp
xchg
lock
sbb
loopne
shr
arpl
ret
enter
or
imul
arpl
les
test
(bad)
hlt
popa
cs
cmc
cmp
mov
mov
das
or
ret
mov
add
mov
mov
cmp
jbe
sbb
push
les
out
(bad)
js
fsubp
jge
js
js
bound
add
or
(bad)
retf
xchg
or
(bad)
lahf
mov
(bad)
sbb
mov
push
inc
(bad)
xchg
dec
loop
sub
jg
dec
mov
cmp
fild
(bad)
hlt
sahf
mul
jmp
jb
mov
movs
mov
mov
xchg
lods
xchg
call
pop
stos
cwde
stos
imul
xor
xor
aad
push
bound
mov
xchg
pop
push
add
jmp
push
bound
or
std
mov
push
mov
(bad)
sbb
fild
xlat
jno
scas
xchg
bound
ja
outs
cld
rcr
pop
scas
jb
inc
in
pop
xor
push
dec
xor
inc
adc
push
stos
and
nop
imul
dec
fsub
mov
sti
out
popa
arpl
addr16
dec
fild
sbb
cmp
push
mov
mov
dec
xor
addr16
cmc
nop
(bad)
jae
fwait
dec
push
aas
add
mov
out
jb
jmp
in
ins
movs
lock
xchg
(bad)
std
mov
(bad)
je
pop
out
ja
(bad)
and
inc
out
inc
sbb
outs
jbe
(bad)
xchg
and
or
mov
(bad)
div
mov
push
jle
aad
push
(bad)
and
inc
mov
std
test
jmp
mov
mov
cdq
(bad)
inc
push
loopne
ja
adc
and
jb
fdivr
xor
(bad)
push
das
(bad)
in
leave
into
stos
push
xor
lock
or
dec
inc
int
(bad)
loop
pop
push
pop
jo
stos
ret
les
add
pop
das
into
mov
lahf
push
adc
pop
mov
sbb
push
les
xor
out
test
aam
pop
mov
mov
rcl
mov
mov
jg
cmp
add
popf
(bad)
mov
push
jb
aaa
fisub
mov
jno
push
std
sbb
pop
add
jnp
loope
and
popa
mov
dec
lahf
(bad)
push
ret
pop
jecxz
mov
std
and
outs
gs
(bad)
pop
mov
aas
test
cmp
or
add
inc
mov
mov
sar
mov
mov
adc
and
push
mov
adc
out
sahf
pusha
inc
cli
fdiv
mov
stos
ror
inc
mov
in
xchg
mov
aas
mov
mov
outs
loope
mov
sub
inc
pop
sbb
lods
cmp
ficomp
jb
cdq
or
frstor
mov
shr
and
pop
push
adc
mov
xchg
push
and
jecxz
sub
mov
mov
push
jle
pop
test
dec
pop
and
test
jp
jbe
sub
fisub
enter
xchg
add
loop
sbb
inc
mov
xchg
js
ja
mov
fsub
add
cwde
push
xorps
sub
mov
or
fyl2x
fisttp
addr16
add
or
or
push
push
pop
sub
cmp
mov
popf
pop
or
jle
(bad)
and
inc
jbe
inc
jl
cmps
jno
add
leave
mov
in
pop
mov
leave
(bad)
int3
mov
add
cdq
jno
push
cmp
mov
mov
cmp
or
pop
cmps
jl
test
mov
mov
fndisi(8087
repnz
pop
add
cmps
jle
jg
daa
loopne
xchg
add
jecxz
sar
lods
mov
dec
iret
gs
stos
adc
movs
scas
(bad)
daa
jmp
gs
mov
cld
jmp
xchg
js
mov
scas
leave
xchg
pop
into
fisub
mov
sub
or
or
push
sub
cmp
push
add
sbb
or
enter
push
bound
cmp
lahf
lods
cmps
sahf
jbe
ret
int
pop
loop
push
or
cmc
(bad)
push
je
adc
loope
and
imul
fdivr
sub
adc
stos
(bad)
sbb
mov
mov
addr16
mov
rcl
cs
dec
mov
push
stos
outs
dec
pop
fidiv
imul
cmp
pop
push
(bad)
pop
cmc
push
push
loope
add
inc
sahf
or
into
and
loopne
push
mov
cli
cmp
sar
and
or
retf
or
(bad)
fcmovnb
push
jecxz
mov
movs
xchg
test
mov
cmp
mov
sbb
jp
data16
cmp
cmp
pop
sub
outs
imul
adc
mov
push
(bad)
jge
test
adc
dec
icebp
icebp
inc
push
cmp
mov
and
test
or
mov
add
pop
xor
(bad)
mov
mov
test
lahf
and
mov
retf
movs
push
int
popa
cmps
jecxz
xor
enter
ficom
xchg
sbb
scas
push
hlt
ficom
es
mov
inc
test
jmp
stos
mov
add
or
add
bound
dec
(bad)
xor
std
je
jne
mov
xor
adc
iret
push
cld
leave
aas
movs
pop
out
jg
mov
(bad)
dec
shl
stos
xchg
mov
sar
xchg
sub
sbb
call
xchg
in
mov
pop
jnp
mov
nop
xchg
fstp
cwde
jne
cmp
sbb
in
xor
push
icebp
(bad)
out
dec
stc
pop
addr16
lods
pop
cld
xchg
aam
ja
xor
push
push
movs
pop
jne
xchg
in
mov
std
push
out
ds
sub
sahf
pusha
push
jle
cmps
(bad)
fidivr
jg
xor
or
into
mov
xor
repnz
add
cli
add
adc
xor
retf
ins
pop
outs
xchg
cmp
and
cmp
daa
inc
jo
mov
lea
clc
cmc
pop
jns
mov
stc
scas
cmp
dec
adc
and
cwde
mov
sub
fisttp
not
push
and
xor
and
and
int3
mov
inc
addr16
pop
mov
inc
sbb
mov
jmp
inc
cli
mov
push
cmc
mov
jmp
mov
test
(bad)
dec
push
adc
pop
push
pop
dec
loop
daa
fisubr
ret
xor
stc
clc
cmc
fmul
cmp
mov
adc
mov
inc
push
pop
pop
pushf
mov
push
jecxz
pop
and
std
outs
and
inc
mov
enter
pop
mov
sub
in
outs
xlat
adc
call
cmp
sbb
pop
(bad)
and
movs
clc
fwait
add
inc
sub
pop
loopne
pop
dec
out
pop
adc
js
inc
nop
inc
mov
pop
movs
cs
jmp
push
cmp
and
fnsave
jecxz
fistp
push
daa
push
imul
inc
jae
push
aas
jo
mov
push
loope
jnp
cmps
std
dec
sti
bound
mov
push
ret
out
rcl
push
jge
shl
inc
shr
push
and
push
daa
retf
out
push
add
(bad)
cmp
bound
cmp
sahf
mov
adc
out
jnp
push
xlat
cmp
bound
push
aad
out
inc
cli
inc
dec
lods
imul
mov
mov
std
xor
push
push
call
(bad)
sub
xor
jg
sar
scas
pop
or
test
mov
or
and
inc
mov
pop
push
call
icebp
jp
add
loope
arpl
push
mov
sti
xchg
pop
call
and
mov
pop
cmps
(bad)
sbb
jns
inc
out
aam
and
push
addr16
das
ret
cld
adc
stc
sbb
cmc
xlat
jo
xchg
sub
out
mov
fs
fwait
out
jecxz
jns
inc
mov
out
ins
add
fmul
jb
pop
movs
pusha
int
ins
(bad)
mov
es
repz
(bad)
in
dec
clc
ss
cmp
push
xchg
inc
fstp
inc
out
push
mov
adc
dec
push
inc
aaa
jne
or
loope
and
cmc
call
sub
aaa
cwde
add
scas
(bad)
outs
(bad)
xor
imul
cmp
cmp
jmp
mov
cli
jg
add
adc
scas
out
arpl
test
or
lods
mov
mov
cmp
clc
mov
or
adc
popf
xlat
xchg
sbb
pushw
xchg
cmp
clc
ror
mov
push
jmp
mov
push
mov
shl
xor
mov
lock
sbb
xor
fs
push
lea
pop
pop
and
sub
adc
nop
movs
sub
or
mov
mov
sbb
jo
cmp
mov
daa
mov
or
pop
inc
pop
inc
mov
sti
push
jecxz
xor
jl
pop
adc
cmp
inc
data16
xchg
xor
inc
sub
add
movs
fistp
test
bound
pushf
push
xchg
sbb
fdivr
mov
pop
mov
mov
pop
mov
sub
inc
push
mov
mov
sub
xchg
into
enter
(bad)
fsub
push
jmp
and
cmp
out
mov
aas
mov
hlt
lahf
mov
push
daa
aas
(bad)
popf
nop
mov
mov
jmp
rcr
pop
out
stos
xor
jle
out
add
loop
daa
int
aad
jns
inc
cmc
mov
cmps
ret
push
pop
xor
jmp
jae
outs
sbb
cmp
aam
int3
push
jmp
inc
imul
fnstenv
sbb
sbb
xor
or
aas
push
outs
fisttp
popf
jge
lahf
cmps
jg
shl
out
sbb
loop
int
test
nop
hlt
cmp
cmps
dec
and
xlat
retf
mov
push
repz
mov
xchg
sahf
cli
xor
dec
pop
push
out
lahf
sar
out
mov
scas
sub
retf
lds
fimul
repnz
nop
pusha
jle
dec
dec
jns
dec
xor
ds
fdivrp
jecxz
popa
icebp
push
push
xchg
outs
cmp
mov
or
enter
aas
xor
dec
mov
lods
jmp
xor
cmp
test
sti
mov
mov
hlt
mov
xor
test
jl
(bad)
fadd
ret
lds
sub
xchg
push
movs
inc
lds
xchg
sbb
movs
mov
jnp
xlat
(bad)
nop
mov
fild
sub
sub
(bad)
adc
mov
add
add
repnz
push
and
jmp
mov
xchg
clc
xchg
mov
bound
xlat
fcomp
jge
adc
bound
(bad)
mov
fwait
mov
adc
test
pop
js
fiadd
jge
into
cmp
mov
jmp
neg
movs
imul
mov
das
dec
test
aam
in
and
pop
call
dec
jg
push
push
inc
icebp
sub
adc
into
lahf
inc
push
pop
mov
imul
pop
add
dec
add
movs
dec
clc
cmp
mov
push
clc
sti
retf
pop
xchg
das
inc
popf
shr
clc
pop
test
dec
out
and
scas
push
fcomp
sti
ss
sub
sub
xchg
add
nop
sbb
pusha
mov
rcl
and
mov
repnz
sar
add
daa
mov
retf
inc
ss
lock
adc
or
mov
or
mov
mov
cmps
jbe
jge
shl
inc
jns
push
rcl
push
xlat
xor
(bad)
shr
(bad)
lahf
dec
mov
out
int3
xor
in
mov
leave
jnp
mov
sbb
pop
and
cmc
pop
pushf
stc
xchg
hlt
shr
out
lods
pop
popa
or
bound
xchg
jne
(bad)
and
test
jno
mov
and
outs
(bad)
idiv
push
sahf
cmp
push
pop
mov
mov
xor
pop
jmp
adc
shl
or
lods
sbb
lock
ss
push
push
jae
or
pop
je
je
xor
pusha
dec
fst
shl
sbb
ja
ins
js
das
pop
int3
scas
mov
sub
inc
sub
retf
repnz
push
cdq
jle
aam
xchg
loop
(bad)
and
in
nop
call
pusha
sub
mov
imul
mov
mov
iret
dec
mov
inc
cmc
ret
lahf
aas
gs
xor
shl
scas
loopne
mov
sub
mov
xor
sbb
arpl
mov
adc
pop
push
fsubp
jnp
xor
dec
push
stos
gs
pushf
jae
(bad)
fldenv
retf
fistp
push
sbb
or
cld
xchg
movs
jno
popf
int3
inc
jb
stos
pop
iret
adc
bound
jp
mov
or
aas
push
xchg
ret
in
inc
(bad)
or
in
test
xor
dec
pop
test
xor
(bad)
stos
std
gs
lds
xor
dec
movs
adc
jmp
cmp
adc
mov
cs
and
retf
cmps
mov
js
sbb
jno
cmp
ins
jg
mov
xor
into
xchg
sti
iret
out
adc
shl
mov
cmps
ss
imul
pop
ret
lock
icebp
mov
push
daa
sbb
ins
cld
adc
cmc
or
enter
add
jle
shl
xor
das
dec
es
out
outs
ds
dec
push
stc
add
push
push
pop
stc
in
pop
add
or
inc
sbb
es
ret
out
std
fidivr
cs
mov
mul
shl
es
into
retf
lods
push
(bad)
js
(bad)
out
cs
fs
imul
mov
mov
mov
adc
sbb
pop
and
mov
and
popf
shl
imul
cmp
lock
int
pusha
add
mov
in
pop
ror
out
add
fcomp
idiv
sahf
(bad)
ret
sbb
lods
in
adc
hlt
fwait
push
mov
xor
in
adc
in
imul
test
imul
popa
out
and
adc
sbb
out
sbb
ds
mov
pop
and
sub
fstp
call
test
or
xchg
pop
cld
push
push
aam
cmp
clc
jnp
xchg
jl
jecxz
imul
xchg
mov
mov
stos
inc
dec
shl
and
mov
aam
mov
fwait
mov
xor
cmps
xchg
xor
stc
sbb
push
mov
out
sub
jmp
mov
leave
ror
aaa
fldenv
dec
mov
mov
push
cli
dec
mov
mov
es
sar
push
stc
rep
pop
call
cmp
push
push
int
test
test
sbb
in
sub
outs
inc
jns
mov
pop
sub
fucomip
mov
aas
jecxz
inc
in
adc
jns
pop
sub
sbb
inc
xor
and
cmp
pop
std
lods
ror
sbb
sub
push
lahf
fmul
clc
unpcklps
adc
lods
mov
int3
cmps
cmps
int
cs
dec
pushf
clc
call
cli
dec
ror
fdivr
out
xchg
mov
sub
inc
adc
les
adc
lods
sub
shl
adc
fs
push
push
cli
imul
daa
mov
bound
jne
int
test
nop
push
jne
jmp
test
inc
lock
push
call
or
into
sub
inc
xchg
pop
cmp
lock
or
jno
mov
add
dec
jnp
jge
add
or
adc
jge
cs
xchg
adc
out
sbb
cwde
xor
adc
jne
jle
idiv
fldenv
cmps
arpl
aad
out
mov
(bad)
lds
xchg
jno
pop
xor
jne
pushaw
fprem1
in
jmp
add
loop
inc
sbb
lea
imul
aaa
loope
repnz
pop
dec
inc
jmp
stos
sub
xchg
inc
sub
scas
or
xor
bound
leave
cmp
bound
jmp
fstp
mov
pop
and
mov
mov
retf
xor
inc
pusha
popf
or
pop
push
aad
leave
adc
jo
aad
add
mov
rsm
sbb
pop
xchg
xchg
xchg
pop
pop
mov
xchg
push
lds
loopne
add
cmp
ins
cli
jnp
jecxz
pop
lock
sub
ins
mov
in
iret
push
rcr
jnp
jge
aam
mov
cmp
adc
ss
jmp
sar
loop
pop
xor
pop
or
(bad)
pop
inc
into
lock
std
xor
adc
addr16
jb
mov
ror
ins
rcr
imul
in
ror
jns
stc
pop
sbb
mov
int
hlt
fwait
push
rcr
mov
inc
rcr
xor
popa
jae
popa
dec
dec
cld
cdq
fidiv
cmp
cdq
jo
leave
push
mov
int3
adc
xor
push
test
push
sub
push
jecxz
dec
add
xchg
inc
stos
sahf
pusha
adc
sub
and
cdq
out
xor
add
xchg
jnp
fcomp
sub
lds
(bad)
mov
jnp
ins
jle
xlat
sub
shl
scas
imul
or
xor
add
fcomp
jbe
movs
stos
lock
ds
shl
or
pusha
push
je
mov
in
mov
movs
sbb
loopne
sbb
cmps
inc
(bad)
(bad)
sbb
xlat
xchg
push
cs
push
repnz
jl
xor
push
cmp
pusha
xchg
dec
test
in
dec
sub
xor
addr16
aam
ret
pop
push
ins
dec
repnz
lahf
inc
sbb
es
mov
adc
aas
inc
fs
fstp
mov
dec
sti
and
ins
loop
pop
add
lds
pop
pop
dec
pop
mov
cmps
clc
cmc
in
or
mov
movs
adc
ss
push
dec
xchg
mov
jns
shl
jecxz
fisubr
sub
rcr
sub
and
ins
into
data16
sahf
daa
sbb
xor
cs
push
push
or
add
xlat
or
movs
pop
xchg
sbb
inc
test
adc
ins
sbb
jmp
call
iret
sub
retf
repz
mov
lock
frstpm(287
popa
add
jmp
push
xchg
jecxz
mov
mov
out
jns
aaa
ss
ja
mov
or
es
frstor
jle
das
or
ret
sbb
in
mov
fucom
jo
push
adc
jbe
dec
mov
add
dec
clc
and
dec
dec
jecxz
ret
iret
xor
popa
cmp
sub
mov
cmp
pushf
push
push
lods
popf
(bad)
mov
jo
dec
mov
xchg
jne
add
pop
mov
add
mov
jmp
or
stos
mov
hlt
gs
and
cmp
(bad)
call
movs
mov
in
push
push
(bad)
iret
xor
sub
add
mov
jno
sbb
in
cmp
(bad)
lods
add
push
mov
(bad)
(bad)
jo
rcl
in
in
sbb
in
(bad)
int
adc
sub
jb
jge
mov
aad
lahf
sub
cmps
sahf
iret
dec
jg
cs
fisub
call
out
das
add
es
cmps
ret
xchg
push
into
ret
and
sbb
scas
repz
loopne
push
cmps
fnstenv
dec
sbb
enter
sbb
neg
sbb
loopne
(bad)
push
cmp
mov
ret
mov
and
in
and
dec
outs
sbb
cmp
outs
xor
or
iret
out
xor
mov
or
(bad)
enter
xchg
sbb
dec
loope
xchg
push
sub
xchg
mov
(bad)
imul
(bad)
jmp
sub
stos
fcmovu
scas
fucomi
adc
dec
dec
fnstcw
cmps
aas
inc
mov
test
push
mov
fs
sbb
int
pusha
and
xchg
add
rcr
inc
add
ins
xor
add
test
in
pop
(bad)
mov
int
add
add
mov
ins
daa
int3
inc
bound
pop
shr
jge
rol
jnp
mov
cmps
lods
add
inc
jnp
mov
mov
int3
jbe
sub
pop
adc
(bad)
xchg
push
mov
jmp
in
mov
sti
mul
retf
int3
pop
bound
pop
into
(bad)
rcr
lods
adc
js
add
adc
pop
and
add
jo
jmp
adc
lock
retf
lds
hlt
outs
cli
push
es
jb
lock
cdq
outs
popf
xor
and
jg
js
push
pop
cmp
test
fyl2x
inc
push
clc
imul
push
adc
cvtdq2ps
cld
pop
mov
outs
xchg
xor
ss
pop
(bad)
loopne
or
in
adc
mov
inc
sub
int
jns
mov
cmp
test
xor
lock
das
sbb
xchg
mov
jecxz
pop
xor
inc
and
mov
scas
push
sub
mov
add
jp
adc
movs
adc
jp
and
adc
jmp
and
ficom
jb
pushf
test
or
sbb
fadd
fst
aam
add
adc
jecxz
and
adc
ficom
cmp
iret
pop
cmc
out
es
fld
xor
mov
adc
mov
sub
xchg
fnstcw
loope
adc
ja
lods
push
mov
retf
xchg
jmp
xor
inc
out
push
mov
pop
mov
mov
dec
push
xor
and
mov
and
inc
cdq
mov
loop
cmp
jne
or
nop
dec
jge
mov
cs
and
repz
mul
retf
add
enter
mov
jnp
leave
ins
xchg
std
out
sbb
aas
jae
pop
inc
(bad)
xchg
xchg
inc
repnz
xchg
in
call
pop
rol
add
call
push
out
cmp
mov
xchg
cmp
inc
mov
lock
arpl
call
sbb
mov
int3
ins
inc
adc
repz
in
jno
pop
adc
stos
cmps
add
mov
iret
sbb
jg
push
xlat
je
dec
pop
outs
and
(bad)
test
mov
sbb
das
dec
popf
lds
das
cmp
xchg
ror
(bad)
rcl
test
inc
fsub
lea
imul
mov
adc
stc
and
cmp
jmp
adc
pop
push
das
xchg
cmp
jae
dec
xor
push
jne
leave
mov
jns
mov
xchg
pushf
imul
push
sbb
ja
aaa
dec
pop
sub
cmps
xchg
push
pop
cli
push
les
xchg
jge
mov
mov
retf
sub
addr16
js
hlt
loop
jecxz
ret
sub
xchg
rcr
sti
or
adc
clc
or
aam
ss
or
dec
out
jl
push
movs
pop
xchg
jo
rol
ss
mov
inc
fsub
mov
pop
addr16
push
pmaddwd
aas
jl
mov
outs
fidivr
pop
mov
sub
dec
leave
dec
adc
mov
clc
sub
sti
mov
loop
mov
stos
dec
(bad)
in
jl
repnz
jo
dec
push
adc
out
dec
and
stos
jecxz
out
sub
gs
bound
sub
stc
cli
test
aas
dec
add
test
test
pushf
cmp
mov
inc
lds
js
push
pop
cs
xor
in
mov
std
cmp
ret
and
clc
adc
sub
xor
mov
push
aas
and
jmp
sub
mov
aaa
dec
daa
xor
fucomp
xchg
cmp
test
adc
jmp
push
jg
aam
stos
ror
ficomp
xlat
xor
xchg
arpl
push
xchg
std
dec
in
lahf
xor
movs
add
sbb
call
dec
cs
inc
xor
mov
in
fst
inc
sbb
adc
jmp
(bad)
mov
leave
mov
mov
mov
xchg
scas
pop
jne
cs
dec
mov
pop
sbb
cmps
mov
mov
(bad)
sub
js
imul
mov
scas
into
(bad)
pop
add
ret
mov
lods
and
sub
jne
mov
sub
sub
jo
pop
cmps
push
shr
stc
mov
mov
repnz
sahf
retf
int3
jmp
mov
cmp
xchg
fucomp
sbb
hlt
out
dec
sti
movs
cmc
cwde
out
inc
shr
cmps
rcr
cmp
dec
pop
nop
sti
pop
mov
pop
xor
pop
les
xor
repz
pop
and
push
push
mov
xchg
add
cmp
xchg
lds
inc
outs
test
mov
xchg
cmp
iret
mov
dec
mov
imul
cmp
fdivrp
push
cmp
push
(bad)
mov
dec
repz
xor
pop
add
sub
add
ds
mov
dec
and
fisubr
imul
mov
push
pcmpeqd
mov
jo
inc
outs
in
ins
mov
xor
cmp
popa
mov
sbb
push
push
push
lods
add
xchg
mov
jl
stc
inc
cmp
test
inc
push
pop
and
cmp
lods
sub
stos
fadd
push
pop
inc
dec
jns
pmullw
das
sbb
loope
mov
xchg
jmp
push
push
dec
mov
fmul
iret
push
dec
test
clc
adc
lahf
dec
sbb
pushf
fwait
rcl
pop
mov
popf
push
in
mov
lods
adc
(bad)
out
stos
push
ss
pusha
stos
push
add
dec
add
stos
xor
inc
add
mov
pop
sti
mov
cdq
xchg
xor
dec
sub
adc
outs
add
data16
xor
inc
sbb
mov
push
out
jecxz
inc
pop
aam
shr
cmp
jb
fldl2t
jnp
adc
sbb
data16
mov
jne
ins
daa
arpl
sub
in
or
xor
mov
ss
sti
aam
jle
pop
adc
cmp
jge
fcmovu
jno
dec
stos
psubusw
sbb
xchg
fbstp
shl
pushf
mov
loop
je
xor
sbb
rcr
jnp
inc
cmp
xor
sbb
dec
jge
dec
adc
aam
js
(bad)
or
mov
out
inc
shl
jo
mov
popa
mov
fdiv
(bad)
xchg
xor
xchg
enter
popa
push
jne
pop
xor
bound
popf
fdiv
sub
pop
push
sbb
xor
pop
inc
dec
lock
scas
fsubr
pop
lahf
sub
adc
retf
popa
add
add
lods
daa
scas
adc
arpl
cmp
outs
sub
add
or
stos
loope
icebp
mov
push
mov
iret
(bad)
daa
or
jecxz
jno
dec
mov
fidiv
jmp
call
dec
aad
in
mov
and
out
pop
mov
idiv
lea
ins
cmp
or
cmp
ss
call
sub
movsx
jmp
ins
lods
out
aas
(bad)
xor
cmps
nop
mov
retf
adc
xor
data16
lods
push
adc
hlt
xor
bound
leave
pop
jl
pusha
push
aad
test
or
(bad)
mov
push
adc
xchg
cmc
dec
add
mov
aad
ret
mov
jl
mov
jno
jp
lods
aad
test
retf
or
xchg
or
jns
wbinvd
vpsrld
xchg
mov
sahf
addr16
stos
jne
jae
in
push
inc
ret
shl
es
mov
lods
jb
lods
jle
mov
scas
cmps
cmp
add
mov
sbb
add
xlat
inc
lods
push
sahf
shl
cwde
sbb
mov
jl
xchg
add
enter
ror
lds
stc
repz
ins
push
enter
int3
retf
xchg
aaa
jecxz
test
fs
xor
xchg
and
xchg
in
lea
call
adc
frstor
push
sahf
sbb
jb
pop
test
jbe
not
scas
mov
mov
jl
and
xor
cmp
lods
sub
(bad)
sub
sub
jno
sbb
xchg
cmc
sub
sub
sub
jg
aad
aam
cmps
lea
inc
fcom
enter
int
xor
repz
leave
fisubr
test
xchg
clc
loope
pop
xchg
sbb
outs
fcom
ficom
outs
test
push
mov
ja
repz
adc
or
jg
pop
repnz
rcr
or
aaa
inc
jmp
shl
dec
sbb
jge
sub
dec
pop
bound
cmp
cld
ds
push
mov
push
out
inc
push
cmp
xor
add
in
test
mov
cmps
movs
xor
mov
movntq
gs
inc
call
fidivr
cs
rcl
add
add
mov
fcom
ret
and
sti
xchg
neg
call
or
std
(bad)
or
ret
jp
mov
jg
bound
ror
(bad)
bound
push
jmp
mov
loopne
call
cld
jo
jo
sub
mov
rol
push
out
out
aam
cwde
out
pop
lock
adc
jo
fsub
sar
jl
out
rcl
mov
sbb
sar
mov
adc
mov
sbb
jl
lahf
dec
call
push
push
jecxz
das
pop
dec
das
jmp
aam
jno
push
shl
stos
fwait
cdq
loopne
add
inc
xor
mov
loope
lahf
cmp
jle
lods
daa
fistp
pop
cmp
mov
into
repz
repnz
enter
icebp
call
mov
or
sbb
jmp
test
in
(bad)
(bad)
jecxz
inc
int3
pushf
mov
jno
dec
fldcw
mov
sub
test
push
jp
and
loopne
ficom
ret
pop
popf
retf
loope
lods
les
fstp
rep
stos
ret
clc
jb
mov
ret
aad
test
mov
and
push
mov
inc
rcr
jne
push
gs
xchg
and
sub
aaa
out
rol
into
lock
jno
pop
test
out
fstp
bound
leave
call
stos
mov
call
jno
adc
je
test
repnz
mov
xchg
inc
rcr
mov
mov
fdiv
xor
push
xor
sbb
mov
bswap
loope
clc
xchg
loopne
mov
inc
sub
inc
inc
dec
imul
push
out
(bad)
pop
imul
cmp
stos
scas
cmp
adc
shr
dec
sbb
add
push
rcl
(bad)
je
xchg
idiv
push
or
gs
data16
and
cmp
sub
ret
or
adc
and
icebp
stos
cld
aad
pushf
sbb
test
ds
imul
or
dec
adc
popa
inc
sub
outs
mov
mov
jae
popa
jecxz
stc
mov
jb
push
inc
imul
cmps
mov
add
pop
push
lock
xlat
cmp
ja
test
(bad)
mov
add
(bad)
hlt
mov
pushf
int3
dec
dec
sbb
addr16
push
cld
or
sub
and
fs
cmps
xor
add
aaa
add
dec
sub
inc
cmps
mov
je
dec
imul
call
pop
sbb
jno
scas
xor
ss
jne
push
icebp
sbb
xchg
int
xor
lods
out
into
pushf
sbb
call
mov
stos
lea
int
and
dec
outs
cmp
movs
jae
and
and
fwait
imul
xor
sub
pop
gs
mov
test
sar
jge
sub
aas
mov
clc
mov
out
adc
pop
js
je
push
jge
dec
jge
(bad)
sar
aam
add
ret
sbb
jne
test
pop
add
xchg
mov
or
adc
mov
mov
in
jmp
rcl
jae
(bad)
fcomp
mov
lahf
das
xor
mov
mov
xor
jmp
mov
fs
inc
sub
cmp
shr
sbb
dec
ficomp
mov
(bad)
xchg
clc
mov
iret
add
div
push
in
cmp
mov
push
push
cmovp
dec
dec
(bad)
xlat
int3
add
sbb
inc
dec
movs
mov
(bad)
loopne
sub
(bad)
fnstcw
pop
push
jecxz
cmp
jne
stos
cmp
xor
int3
and
xor
inc
cmp
retf
das
movs
xor
mov
mov
push
xchg
or
jne
cdq
push
pushf
mov
shr
cld
(bad)
pop
and
imul
sbb
movs
ins
mov
es
js
sbb
pop
lods
ss
pop
ja
and
(bad)
retf
dec
idiv
int3
jbe
or
imul
jb
push
jb
pusha
push
or
int3
mov
and
shl
mov
pop
push
and
cmp
pop
fist
inc
mov
test
jg
cld
add
jo
pop
inc
xor
int
(bad)
jl
dec
or
jmp
out
dec
lods
jle
out
cs
xchg
lods
popf
dec
adc
sbb
mov
nop
inc
pop
jb
scas
jecxz
pop
xchg
(bad)
sub
add
sahf
cmp
retf
in
cmp
(bad)
(bad)
xchg
clc
lods
cmp
add
pop
push
sub
push
rol
lods
aaa
push
mov
or
jg
pusha
aaa
bound
mov
pushf
jbe
xor
mov
cwde
repz
mov
jp
nop
imul
jle
(bad)
idiv
cmp
popa
mov
push
pop
push
fstp
jnp
mov
fist
daa
push
jne
cld
cmp
add
js
xchg
cmp
and
out
aad
jge
leave
repnz
shl
pusha
int3
mov
nop
mov
mov
repz
iret
or
and
jbe
fs
pushf
popa
push
add
std
pop
loope
cld
mov
jno
or
leave
fsin
xchg
inc
inc
jo
fcom
dec
cmp
adc
enter
(bad)
dec
outs
imul
clc
add
or
leave
dec
cli
add
sbb
inc
aad
inc
or
jno
xor
jmp
jecxz
add
sti
sub
inc
lahf
lods
(bad)
inc
mov
cmp
retf
add
fsubr
or
or
xchg
dec
xor
shl
jns
fcomp
dec
clc
outs
lea
push
sbb
mov
mov
or
sub
sti
cmp
out
mov
add
imul
jl
mov
je
pop
movs
mov
jge
shr
js
cld
dec
mul
xchg
sub
mov
stos
sub
sub
mov
cs
mov
xor
mov
out
iret
sub
lock
les
ins
test
adc
movs
(bad)
in
icebp
pop
xchg
mov
fisub
jo
ret
jno
push
cld
out
xlat
sub
mov
pcmpgtw
cmp
mov
add
push
popf
bound
outs
jmp
jnp
in
jmp
pop
cs
xor
je
cmp
sbb
dec
mov
dec
lea
fwait
jnp
jg
repnz
sbb
(bad)
adc
into
inc
xor
repz
(bad)
mov
repnz
pop
add
retf
(bad)
cmp
jmp
mov
aam
and
cmp
push
mov
fstp
mov
call
cmps
cdq
imul
ins
popf
fs
xor
mov
arpl
jg
and
inc
sbb
movs
push
adc
mov
mov
dec
in
ds
adc
in
and
sub
clc
or
push
pusha
sub
xor
repnz
mov
adc
stos
sbb
pop
inc
retf
pop
push
sub
nop
int
xor
pop
pusha
push
int3
scas
stos
loope
movs
jb
leave
push
shr
mov
jbe
adc
out
and
scas
adc
cwde
push
fadd
dec
js
jbe
test
xchg
dec
(bad)
shr
push
add
aas
in
(bad)
cmps
sub
scas
jbe
std
jo
in
or
adc
inc
xchg
nop
mov
ret
nop
dec
mov
sub
arpl
adc
or
mov
jno
cmps
xlat
shl
mov
sbb
rcr
rcl
retf
inc
adc
dec
inc
pusha
repz
retf
jae
hlt
inc
mov
mov
rcl
pop
xor
cli
stc
mov
hlt
lea
xchg
jg
cmp
rol
lds
je
and
xchg
(bad)
mov
leave
push
xchg
dec
sbb
je
dec
push
or
fwait
inc
lds
call
dec
mov
sub
pushf
pop
pop
pop
repnz
xchg
mov
sub
push
add
inc
jb
xor
call
pop
mov
inc
enter
pop
arpl
or
pand
rcr
ret
pop
pop
enter
icebp
mov
sbb
add
cmps
xchg
frstor
mov
xchg
push
mov
or
sub
(bad)
push
shl
xchg
rcl
jl
in
xor
and
clc
jecxz
pop
push
xchg
aaa
mov
adc
aaa
and
je
mov
lea
sub
in
dec
cmp
jo
movs
sti
jnp
xchg
sahf
in
jecxz
sub
jecxz
aam
cmp
pop
xchg
call
test
sub
jo
pop
mov
stos
gs
cmps
imul
push
in
aas
hlt
lods
daa
out
pop
mov
sbb
sub
or
mov
cmp
inc
test
add
ss
in
(bad)
lock
icebp
and
inc
jbe
jl
and
jle
mov
(bad)
icebp
fisub
retf
adc
out
inc
inc
imul
pop
enter
(bad)
jne
push
inc
jno
mov
dec
cmp
icebp
std
gs
loop
shl
pop
push
xor
js
pop
dec
dec
daa
mov
mov
ficomp
dec
cwde
mov
js
test
mov
xchg
push
cdq
fcomi
cmp
nop
jmp
dec
cmp
inc
cmp
loopne
inc
jmp
std
cmc
icebp
in
and
out
jg
adc
sar
rcl
(bad)
sub
ret
sub
loopne
or
xchg
lods
cwde
neg
xor
jns
cmp
jmp
retf
loope
mov
out
xor
sub
cwde
dec
(bad)
ret
mov
fwait
les
pop
ins
cmp
mov
jno
ds
pusha
jae
or
jle
adc
loope
test
(bad)
aam
add
adc
xchg
xchg
repz
sbb
clc
xor
ins
lahf
xor
popf
pop
mov
dec
pushf
jo
sar
shl
jne
jecxz
mov
inc
dec
lock
mov
xchg
inc
xor
jne
(bad)
div
or
add
push
in
push
push
and
jecxz
ins
sbb
add
mov
sar
or
lahf
enter
mov
sbb
mov
or
xor
imul
inc
mov
sbb
cmp
out
adc
or
clc
xchg
jnp
out
mov
xor
mov
lahf
push
pop
loopne
xchg
cmps
retf
jb
sub
stos
dec
pop
pop
aam
pop
sub
ins
sbb
sub
xor
hlt
sub
shl
push
mov
loopne
into
mov
(bad)
xchg
xchg
out
xor
jmp
push
push
or
xchg
dec
ins
rcl
stos
xor
(bad)
inc
pop
hlt
and
retf
xor
ins
mov
stos
push
retf
outs
das
sar
pop
or
sub
or
mov
cs
(bad)
jle
inc
out
push
push
jle
sbb
scas
sbb
popf
sbb
aas
icebp
cmps
je
push
(bad)
jae
ja
stos
cdq
jle
push
bnd
stos
sub
xchg
cmps
int3
lahf
cmp
pop
sub
ss
mov
jge
push
sub
hlt
or
aas
jp
mov
and
test
jbe
jne
add
scas
mov
mov
iret
sbb
pushf
ret
cmp
xor
adc
sub
sti
jecxz
int
xchg
call
mov
clc
xor
stos
test
jle
and
inc
stc
stos
(bad)
xchg
pusha
test
adc
mov
inc
stos
mov
arpl
jle
add
pop
xchg
scas
cmp
push
or
mov
push
hlt
pop
test
cmp
sub
sar
jmp
xchg
movs
mov
mov
xchg
jge
mov
sbb
cmp
in
or
retf
pop
and
popa
lods
shl
shr
fild
mov
movs
int3
mov
mov
or
adc
cs
mov
push
and
nop
popa
jg
inc
add
xchg
jmp
rol
or
mov
sbb
xor
std
jbe
cs
mov
sub
inc
push
scas
data16
aas
inc
mov
hlt
pop
retf
sub
pop
mov
add
jno
aas
push
jecxz
jg
cs
adc
cmp
sar
out
and
shl
loope
jno
leave
cmp
fwait
iret
mov
xchg
mov
inc
sub
push
(bad)
fadd
dec
or
mov
inc
push
pop
fidivr
in
and
fbstp
enter
sub
xchg
jae
jb
mov
ret
cmp
cmp
test
std
sub
cmp
push
dec
jl
pop
jno
xor
gs
jbe
cmc
div
in
xor
push
jno
mov
or
std
test
imul
(bad)
outs
into
mov
push
xchg
rol
imul
(bad)
cli
mov
add
xor
nop
pop
mov
xor
xchg
fst
fninit
mov
loope
cwde
je
xor
xor
inc
add
fisttp
retf
add
pusha
add
and
out
and
sbb
push
cmps
cmp
out
int
jl
mov
imul
push
fbld
mov
inc
xchg
dec
inc
rcr
pop
push
sub
add
mov
enter
les
daa
adc
mov
dec
pusha
dec
aas
xor
sub
test
pop
fs
inc
mov
jl
loopne
pop
fistp
lea
out
mov
lds
and
jne
pop
stos
dec
or
mov
call
push
add
je
rcr
add
out
or
ret
stos
cmp
arpl
test
fadd
cmp
dec
mov
xor
cmp
loopne
jmp
push
dec
cmp
pop
or
cmps
xor
mov
push
xor
fwait
call
test
jp
loop
repnz
inc
dec
into
cld
shl
push
xchg
ds
mov
jbe
xchg
cmp
ror
(bad)
xor
ja
sub
test
call
cli
fnstsw
movs
sbb
mov
repz
shl
jp
pop
mov
ins
adc
in
pop
idiv
jmp
pop
leave
dec
xor
or
mov
mov
inc
jle
cmp
icebp
mov
int3
sub
cmp
popa
and
cmp
sti
call
aas
ss
mov
push
(bad)
out
retf
mov
loop
stos
xor
cdq
aad
mov
je
shl
xchg
sub
sbb
dec
adc
fisubr
dec
push
push
clc
mov
xor
stos
ret
adc
call
xor
push
jmp
cs
fcmovu
pop
sahf
fisub
loopne
pop
inc
xchg
adc
lods
lds
xor
(bad)
adc
mov
imul
xor
ror
nop
cmp
mov
arpl
and
fs
cld
leave
push
xchg
jmp
repz
dec
jecxz
outs
mov
inc
out
popf
dec
ja
push
pusha
cmc
out
stc
xchg
call
fwait
xchg
xchg
ss
inc
outs
test
fldpi
retf
sub
jmp
or
lea
das
push
mov
cmc
fsubr
fwait
ds
sub
mul
jg
pop
test
pop
out
fwait
pusha
dec
dec
fisub
lahf
js
push
sar
je
movs
in
repz
xchg
sbb
aam
xor
push
pop
xor
push
cmp
jp
mov
mov
pusha
mov
add
pop
inc
sbb
jge
mov
loopne
or
jmp
cmp
(bad)
iret
mov
xchg
pop
popf
(bad)
push
jle
stos
pushf
xor
in
xchg
mov
sub
arpl
mov
push
and
ret
push
push
push
adc
shr
in
xchg
xchg
sub
aad
dec
pusha
adc
push
push
test
in
mov
sbb
sbb
div
jne
movs
push
push
(bad)
test
test
jmp
fstp
dec
cmp
jae
sub
aam
add
mov
in
push
addr16
test
sbb
add
je
mov
mov
shr
mov
mov
cmp
fisub
sahf
jmp
cmps
add
mov
push
pop
jmp
stc
jmp
cdq
inc
xchg
jmp
jno
hlt
out
or
pop
in
fld
push
cwde
(bad)
jge
fadd
aad
push
sbb
cmp
in
mov
xor
stos
enter
xchg
or
mov
ins
add
jae
jne
jmp
mov
push
pusha
or
cs
mov
pushf
hlt
icebp
and
out
add
push
mov
pmaxsw
retf
lds
std
retf
fcmovne
pop
je
xor
out
and
in
ja
fld
arpl
dec
add
mov
clc
leave
cmp
cmp
add
je
adc
xchg
bound
es
sub
dec
or
call
dec
gs
dec
ins
and
int3
xor
movs
push
mov
test
cmp
test
mov
or
outs
(bad)
nop
(bad)
fcomp
mov
(bad)
imul
push
rcr
das
inc
cmc
sub
in
mov
push
adc
lahf
mov
mov
cmp
out
or
std
adc
xchg
pop
jnp
push
in
inc
jg
or
out
mov
sbb
fld
jge
pop
int
stos
out
(bad)
aas
jb
addr16
dec
mov
lahf
and
xchg
cmps
xor
int3
xchg
cmps
mov
outs
(bad)
iret
cli
lea
push
pop
mov
adc
push
sbb
cmp
mov
std
mov
aas
mov
(bad)
rcl
lock
add
ret
cli
adc
mov
int3
and
jno
out
push
aad
xor
loop
adc
pop
(bad)
das
sbb
nop
pop
adc
arpl
mov
lds
fldcw
xchg
in
aaa
pop
test
push
push
iret
pushf
jbe
jns
test
ja
cmp
fild
mov
adc
mov
inc
neg
addr16
cs
xchg
call
jmp
xor
and
sub
in
das
mov
inc
pop
jecxz
xchg
lods
not
add
jge
xchg
daa
inc
arpl
repz
add
mov
jb
cmp
mov
arpl
dec
mov
xchg
stos
pop
pushf
fimul
repnz
inc
int3
add
in
cdq
mov
enter
shr
test
(bad)
in
adc
and
add
mov
inc
xchg
pop
retf
int
pop
and
inc
sahf
sbb
mov
icebp
adc
pop
push
cmovnp
pop
and
ret
enter
cli
push
jg
div
xchg
push
imul
test
(bad)
push
jno
xchg
jno
pop
nop
xor
icebp
xchg
inc
push
pop
movs
push
test
ds
shl
add
arpl
jl
push
lahf
mov
cli
push
scas
push
int
fwait
outs
jb
mov
mov
push
jge
lods
and
pop
mov
div
mov
jg
inc
call
push
mov
leave
ret
xor
add
xchg
ror
(bad)
ja
out
loope
pop
(bad)
cld
and
xchg
into
xor
adc
dec
jp
aam
xchg
inc
xor
fcmovne
cmc
dec
mov
cmp
fwait
jbe
mov
adc
in
mov
pop
and
adc
push
jno
ret
ret
mov
fs
(bad)
aaa
adc
icebp
mov
and
pop
adc
cmp
adc
in
ret
push
test
add
cli
aaa
cmc
test
inc
cld
stos
adc
in
push
sub
clc
out
(bad)
xlat
jecxz
imul
cmp
scas
dec
fadd
das
xor
inc
hlt
pop
xor
test
fadd
mov
lfs
fidivr
sti
pop
popa
push
cli
mov
xchg
inc
jl
dec
mov
test
push
retf
jge
inc
mov
(bad)
into
lods
dec
mov
add
xchg
shr
xchg
xchg
jg
push
xchg
ficomp
aad
pop
(bad)
ins
xlat
and
adc
cmps
test
jae
aaa
das
rol
ret
fs
mov
enter
ds
mov
inc
inc
adc
dec
push
xor
imul
cmp
inc
in
fiadd
cli
fwait
jno
dec
sub
in
push
and
dec
pop
mov
xor
fdivr
xchg
out
fs
push
or
leave
sub
cmp
inc
lahf
adc
outs
loopne
mov
mov
add
(bad)
mov
cmps
sub
mov
adc
pop
xlat
pop
call
call
or
imul
cmp
inc
xchg
adc
push
cmp
xchg
lahf
sub
mov
rcl
(bad)
xchg
mov
stc
pop
sub
movs
cld
(bad)
ins
repnz
push
outs
mov
lods
sbb
int3
lods
mov
lahf
or
xchg
xchg
cmp
sbb
mov
aam
sub
ins
fdiv
scas
cmc
pop
les
ret
adc
and
xor
(bad)
mov
mov
ret
mov
and
jecxz
popf
jg
push
sbb
xchg
imul
push
add
scas
sbb
mov
adc
stc
pop
mov
loop
lods
popf
out
mov
sub
call
fcomp
loope
jle
or
jae
repz
jo
push
int3
imul
push
(bad)
or
pop
lods
push
in
pop
dec
std
mov
popa
aaa
je
xchg
bound
xor
push
xchg
int
mov
in
addr16
sbb
pop
and
bound
dec
cmp
(bad)
push
adc
xor
adc
ret
push
imul
mov
int
sub
xlat
loope
mov
or
pusha
push
or
adc
push
(bad)
dec
jne
mov
sti
cwde
pushf
cmps
int
and
pop
mov
lods
adc
imul
push
xchg
mov
imul
mov
int
jecxz
mov
popa
cmp
stc
dec
push
pop
popa
inc
fisub
pop
das
cmc
icebp
out
xor
jns
lods
mov
mov
lods
int
xchg
fsubr
pop
or
cmp
(bad)
pop
shl
dec
xor
shr
stc
lock
push
out
clc
lea
and
dec
(bad)
push
js
mov
push
retf
sti
push
inc
or
cmp
test
pop
sbb
jbe
adc
adc
call
pop
aad
inc
sti
and
mov
xchg
sub
xchg
xor
aaa
lods
test
sub
pop
pop
xchg
je
loop
mov
adc
pop
mov
sbb
adc
and
fadd
stos
dec
jl
ins
sub
mov
test
add
adc
pop
mov
xchg
dec
test
cs
jle
test
fadd
or
mov
adc
jbe
xchg
xchg
xchg
lea
jbe
or
mov
es
fstp
ror
test
cmp
pop
mov
sahf
aas
fst
aad
dec
aam
arpl
add
mov
jbe
scas
mov
xchg
dec
test
add
imul
and
jge
dec
aam
(bad)
push
sbb
cmp
data16
mov
clc
push
fwait
retf
pop
or
cmp
mov
push
jecxz
cwde
loop
shl
test
pop
cmp
pop
cmp
xchg
in
(bad)
or
add
mov
(bad)
sub
and
jle
fimul
out
cmp
pop
cld
popf
ins
adc
sti
sbb
ins
dec
stos
push
lahf
jg
loopne
mov
lods
loop
aas
lea
pop
jecxz
lods
add
out
jns
mov
bound
mov
sbb
cmp
pop
jl
mov
mov
dec
adc
leave
cwde
mov
jns
add
jp
rol
ins
outs
xchg
popa
mov
jg
dec
push
arpl
adc
sub
outs
sbb
fdiv
addr16
cs
fidiv
stc
or
outs
imul
cmps
cmps
out
sub
retf
mov
mov
jge
in
cdq
aam
or
sub
repz
mov
in
xchg
add
fs
jecxz
pop
(bad)
arpl
mov
nop
jbe
mov
jmp
xor
aad
push
stos
dec
or
xchg
xchg
mov
(bad)
(bad)
gs
sbb
movs
mov
sahf
fistp
jge
xor
fnstenv
movs
sub
movs
(bad)
ucomiss
movs
push
fldcw
jb
fist
shr
adc
jg
dec
jp
cmp
add
mov
fld
jmp
imul
inc
jle
adc
mov
jns
pop
mov
(bad)
jbe
mov
mov
ret
mov
jo
xor
xor
retf
xchg
mov
mov
fnsave
pop
push
xchg
jle
jb
into
mov
push
jmp
xchg
sbb
test
jle
sahf
jp
aas
pop
(bad)
out
fnstenv
mov
(bad)
in
or
adc
dec
cmp
cmp
cld
arpl
scas
mov
dec
scas
js
mov
xchg
cmc
add
pusha
call
and
or
fdiv
inc
push
pcmpeqd
shl
out
pushf
movs
jecxz
sub
jle
jne
add
jle
pop
mov
mov
sbb
mov
mov
mov
(bad)
mov
or
mov
pushf
test
sti
adc
test
sub
inc
sbb
sub
mov
mov
iret
test
aam
in
mov
rcr
cmps
icebp
or
inc
xor
pushf
dec
and
and
lds
dec
xchg
hlt
sbb
pop
test
popa
pop
push
push
repnz
out
push
sti
xchg
mov
dec
and
dec
in
(bad)
out
retf
in
or
push
cmp
fsub
icebp
sbb
rol
pop
cdq
xlat
mov
jle
sar
or
inc
repnz
mov
cmp
out
xlat
(bad)
cmps
and
cmp
imul
nop
cmc
outs
aaa
inc
push
sbb
cmp
pop
bound
scas
push
pop
inc
xchg
ret
vaddps
push
push
jbe
dec
inc
mov
mov
pop
push
fidiv
mov
sbb
hlt
sbb
test
aad
add
or
or
(bad)
mov
aas
ins
das
adc
mov
shl
mov
inc
(bad)
xor
lea
mov
sub
xor
shr
push
or
cdq
int
pop
aad
mov
loopne
ja
ret
in
mov
dec
mov
add
mov
push
iret
jnp
cmp
mov
mov
dec
dec
loope
push
scas
or
arpl
inc
sub
add
cld
idiv
add
cli
gs
cli
sbb
adc
sti
cmps
stos
lds
mov
into
xor
ficom
out
and
mov
shl
gs
sub
jecxz
sub
inc
rcr
xor
jmp
pop
push
dec
addr16
outs
mov
imul
sti
lods
adc
push
push
sbb
and
into
cmp
imul
in
lsl
add
xchg
sub
sbb
std
sbb
sbb
mov
sub
data16
xor
in
cmp
xchg
je
xor
or
daa
adc
out
push
rcl
sbb
cmps
sub
and
sbb
in
push
push
add
mov
stos
cmp
ja
lods
add
lods
nop
cli
fcom
mov
adc
popa
(bad)
repz
(bad)
fmul
inc
sbb
call
test
in
mov
or
mov
xchg
adc
lock
std
add
ret
shr
fisubr
repz
xchg
stc
lods
ins
aas
push
mov
mov
fdivr
lock
shl
loope
icebp
mov
int
push
inc
(bad)
push
mov
lahf
cmp
stos
mov
pop
lock
add
mov
cmps
pushf
jl
ret
push
mov
call
call
mov
cmps
scas
ds
xor
inc
ja
sub
push
or
or
iret
(bad)
loop
and
adc
pop
fisttp
xor
or
clc
ret
call
pop
inc
fst
(bad)
adc
rol
aad
popa
leave
jbe
jmp
test
adc
jno
cmp
or
cmps
and
loop
jmp
cmp
cwde
pop
cmps
and
push
adc
xchg
push
fdivr
sub
mov
mov
das
xchg
shr
inc
lds
rcl
pop
sub
fisub
mov
mov
lods
ficomp
int
(bad)
add
mov
cmp
jne
mov
ins
into
shr
fwait
je
mov
xor
sar
pop
test
test
push
ja
ret
pop
or
jge
dec
ds
ret
push
test
sbb
jecxz
shr
adc
fnsave
mov
inc
mov
bound
aad
jg
fisttp
fs
dec
cs
pop
mov
cmp
push
push
push
cmp
lea
cmp
out
cmps
call
(bad)
stc
and
mov
mov
or
or
mov
stos
fs
xlat
and
fsub
fsub
imul
ins
mov
data16
fs
mov
cmps
mov
or
jnp
xor
lock
test
fs
dec
inc
lods
cwde
pop
xor
xchg
cli
pop
lods
or
mov
(bad)
fwait
pop
inc
sub
sbb
fsubr
cwde
repnz
ror
mov
cmc
sahf
int3
xchg
rol
mov
dec
stos
movs
pop
cli
popa
add
jae
outs
adc
das
out
fsubr
ss
call
lods
fcom
aad
jne
int3
cmps
mov
repz
mov
sahf
push
cmp
out
clc
int
push
test
gs
out
js
stc
fldenv
iret
push
sbb
loop
push
dec
out
fwait
mov
push
or
(bad)
pop
mov
xor
jg
fisttp
test
std
jmp
xor
popf
ss
jl
test
loope
add
loope
aam
inc
rcl
aaa
jecxz
sub
in
sub
xor
jbe
js
pop
cmp
jne
mov
mov
jbe
xchg
scas
pop
lock
sub
sbb
test
cmp
(bad)
xor
cmp
or
mov
mov
test
push
(bad)
xor
jmp
js
mov
mov
adc
out
jecxz
mov
retf
push
fcom
(bad)
jne
imul
stos
(bad)
repz
xor
push
stc
inc
adc
pop
aas
mov
inc
in
enter
xchg
mov
lods
test
lock
push
popf
call
and
jge
sub
out
sbb
retf
call
and
in
jne
jecxz
test
inc
mov
lahf
call
sbb
xor
mov
dec
clc
das
push
pop
in
test
cmp
add
inc
into
loopne
(bad)
es
scas
js
mov
popf
aad
jl
movs
cmc
mov
mov
push
aad
lds
inc
imul
(bad)
jno
(bad)
ret
scas
in
sbb
jne
inc
mov
push
(bad)
inc
xchg
arpl
dec
cmp
cmp
push
pop
imul
fisub
mov
cli
push
pop
in
outs
add
out
xchg
adc
cld
mov
dec
lahf
mov
inc
jnp
add
mov
cli
cmp
inc
cmps
mov
scas
or
xor
fist
fwait
retf
or
dec
or
mov
clc
jnp
test
mov
fld
pop
jecxz
sbb
sar
xchg
rcl
ret
dec
mov
inc
adc
jl
lea
xchg
(bad)
nop
scas
hlt
(bad)
xor
xchg
push
xchg
push
sbb
pop
cmc
push
sbb
adc
stos
ds
sub
ror
pop
daa
in
sbb
sahf
retf
dec
dec
xchg
push
addr16
(bad)
js
std
jl
pusha
fnstcw
loop
mov
ret
push
jo
add
push
cmp
push
das
sub
not
mov
fadd
adc
xor
aad
dec
sti
clc
es
push
outs
ret
mov
sbb
pop
jne
jmp
cmc
and
pop
enter
in
sub
addr16
lea
mov
scas
xor
sbb
jg
rsqrtps
cmp
cmp
lahf
(bad)
scas
push
sub
lahf
aam
daa
add
pusha
mov
push
mov
fdivr
fldcw
fstp
add
enter
pop
mov
xchg
jnp
lock
inc
mov
movs
je
xlat
mov
adc
inc
xor
push
bound
xchg
xlat
dec
call
inc
(bad)
sar
cmp
mov
enter
pop
stos
inc
xor
sub
cdq
cmp
outs
and
dec
stos
xor
add
dec
cmp
xchg
cwde
adc
ret
ja
ffree
mov
retf
and
scas
pop
hlt
mov
movs
daa
mov
sbb
out
in
inc
cmp
push
mov
and
lods
xor
lods
push
mov
sbb
sbb
jmp
mov
adc
sub
adc
inc
rol
scas
rcl
mov
cmp
in
sub
cmps
jae
sbb
mov
jge
pusha
(bad)
mov
cmps
inc
jg
dec
sub
gs
in
push
and
mov
adc
jno
push
adc
aaa
loopne
adc
inc
xor
jge
(bad)
or
cli
lds
and
mov
pop
pushf
ins
add
bound
add
sbb
and
adc
mov
sti
xchg
icebp
out
ja
xor
lahf
iret
mov
mov
cwde
call
push
retf
test
adc
stos
adc
mov
or
retf
push
ins
loopne
mov
sbb
ror
xchg
(bad)
xchg
xlat
loopne
mov
or
or
cmc
mov
jmp
adc
icebp
loop
mov
loope
push
leave
adc
mov
js
pop
add
push
das
retf
jbe
pop
ss
shl
dec
sar
xchg
adc
xchg
jns
repnz
daa
mov
das
mov
(bad)
fild
xlat
sub
mov
mov
cmp
data16
and
imul
mov
shl
leave
es
retf
xchg
cmps
out
in
jmp
add
call
inc
inc
and
xchg
jns
sub
ror
xor
jns
sbb
ret
aad
stos
popf
mov
jb
fcomp
pop
mov
dec
test
addr16
jne
into
call
retf
pop
push
clc
pop
test
ds
retf
jo
aaa
retf
ret
popf
fwait
cmp
mov
movs
mov
shl
mov
stos
aas
inc
xor
call
mov
xor
test
mov
dec
fdivr
call
loop
mov
arpl
pop
in
fisub
test
dec
pop
adc
jno
ja
xchg
dec
fwait
cmp
fwait
sbb
ja
stos
(bad)
or
push
into
fisubr
jge
movs
lea
sbb
mov
int3
xor
adc
jno
cmp
mov
rcr
mov
call
cs
aas
movs
addr16
cmp
or
outs
dec
retf
jmp
out
cwde
cs
and
and
into
pop
inc
daa
out
sbb
cmp
mov
loop
repz
call
(bad)
adc
cmps
sub
pop
jnp
out
push
add
xlat
ja
clc
add
js
cmps
xchg
cli
lods
pop
push
(bad)
mov
mov
(bad)
adc
out
mov
sbb
jle
data16
fs
cmps
mov
fsubr
aam
cmp
ss
(bad)
jb
idiv
xchg
dec
es
les
(bad)
sub
inc
and
jecxz
lea
pop
jbe
and
je
mov
jl
fisttp
pop
push
js
fdivr
adc
nop
mov
adc
call
sub
lock
call
lea
aam
jp
popa
outs
mov
sub
pop
xor
mov
aaa
mov
jp
lea
loopne
jne
jmp
movs
inc
and
iret
add
int
pushf
sti
dec
ror
jb
ret
test
push
jb
inc
stos
pop
adc
rol
cmps
test
pop
or
inc
loopne
cmp
mov
rcr
mov
cmps
test
mov
popa
dec
cmp
dec
xor
mov
or
std
adc
and
fs
cmp
test
adc
jo
repnz
imul
jecxz
xor
mov
fdiv
js
lods
or
shl
retf
addr16
inc
paddsw
push
push
push
add
addr16
retf
jmp
popa
call
mov
push
enter
repnz
int3
fadd
lahf
repnz
adc
mov
popf
xchg
push
outs
(bad)
scas
test
ins
mov
loopne
push
mov
fist
xchg
add
in
stos
xchg
retf
rcr
ja
or
sbb
xor
ds
or
in
jns
xchg
clc
inc
mov
or
dec
pop
repz
mov
fmul
adc
add
xor
aaa
mov
loopne
pusha
sub
xchg
iret
clc
out
adc
pop
jp
pop
push
mov
dec
xchg
in
pop
sbb
mov
jmp
ficom
mov
mov
movs
or
jae
cmp
test
jbe
cmp
or
mov
mov
test
and
mov
push
retf
dec
in
loop
inc
shr
push
mov
sbb
(bad)
sbb
stos
jmp
push
stos
hlt
stos
dec
ficomp
jb
and
dec
out
mov
dec
es
pop
cmp
repnz
mov
fst
ret
(bad)
push
popf
xchg
popa
imul
test
ret
aas
bound
mov
mov
sbb
in
fisubr
daa
pop
(bad)
mov
add
xor
pop
mov
fisub
dec
ss
shl
mov
inc
xor
leave
jmp
xchg
shr
bound
mov
pop
lods
fsubr
lods
fs
cmp
outs
mov
inc
adc
adc
mov
mov
xchg
lods
fwait
dec
xchg
jae
mov
loope
dec
and
test
cmp
not
fimul
into
push
xchg
icebp
jae
cmp
pop
inc
jae
dec
sbb
clc
arpl
cmp
lea
xchg
sbb
sbb
xchg
loopne
push
adc
cwde
(bad)
shl
test
adc
jae
and
jo
or
pop
test
cmp
mov
in
pop
ror
inc
cmp
pop
fsub
xor
fldcw
fs
sbb
add
lock
cs
mov
jns
lock
std
call
(bad)
rcl
jne
add
cmp
mov
inc
mov
or
xchg
pop
ds
push
retf
adc
es
xchg
aam
push
lods
add
dec
xor
call
add
es
add
test
or
aas
pop
add
lods
adc
xchg
cmp
lds
add
iret
gs
stc
jae
pop
jo
jo
rol
retf
adc
test
cmp
dec
adc
add
cdq
aas
int3
cmp
mov
sub
(bad)
sbb
cwde
mov
mov
jle
fdiv
sbb
rsqrtps
pushf
rol
fnsave
je
and
dec
test
rcl
shl
dec
out
jne
test
push
mov
dec
das
sbb
push
test
(bad)
mov
mov
xor
fdivp
push
fiadd
into
jo
lahf
sar
pop
rcl
inc
iret
sbb
xchg
daa
repz
cld
jne
fstp
xor
mov
dec
mov
push
xlat
and
mov
gs
lods
adc
pop
daa
inc
jp
cmps
sbb
xlat
pop
mov
jge
lods
loop
mov
test
popf
jns
push
test
xchg
add
aam
xchg
jmp
xchg
aam
mov
add
mov
xchg
cld
inc
or
sbb
inc
xor
and
sti
sbb
mov
cmp
adc
mov
cmp
clc
loop
(bad)
mov
sbb
or
cmp
(bad)
or
jbe
mov
(bad)
mov
push
sbb
pop
fld
ins
pop
mov
pushf
push
dec
sbb
(bad)
add
fnsetpm(287
xlat
icebp
xor
aaa
repz
stc
dec
mov
aam
xor
mov
inc
lahf
cmp
packssdw
mov
aam
mov
xlat
mov
mov
test
sti
dec
mov
sub
call
xlat
mov
aad
outs
pop
fiadd
outs
sbb
add
(bad)
jmp
sbb
mov
cmp
jge
dec
out
sub
xchg
data16
gs
inc
test
xchg
imul
or
or
retf
add
xor
mov
mov
pop
sbb
dec
gs
cli
cmps
repz
mov
cmp
adc
lahf
in
adc
test
test
ins
jmp
mov
inc
cmp
or
loopne
int
loop
jg
ret
mov
push
adc
loop
outs
call
sub
xlat
int3
pop
mov
jbe
jecxz
pop
pop
movs
xchg
xor
pushf
cmps
cmp
repz
dec
push
ret
xor
sub
add
in
mov
mov
das
ret
mov
or
push
stos
dec
test
xlat
inc
cmp
mov
cmc
fild
iret
pushf
out
in
add
sub
out
add
inc
jns
xchg
or
fldcw
jbe
loopne
retf
test
jnp
push
lea
mov
cmc
sub
cmp
xchg
xchg
mov
les
fnstcw
inc
ja
jmp
test
pop
repnz
pop
jno
ss
out
push
shr
mov
lahf
js
aas
sbb
pop
imul
push
in
and
inc
outs
loope
movs
out
xchg
cwde
hlt
mov
test
ja
pop
sbb
push
repnz
mov
icebp
ins
call
xchg
clc
jle
push
fidivr
ret
out
fisubr
rcl
dec
pusha
mov
call
retf
mov
aam
mov
xchg
movs
ret
ret
pop
sbb
xor
sub
or
fcomp
outs
cmp
hlt
int3
xlat
sub
out
out
sub
fdivr
nop
sub
wbinvd
lock
repnz
sbb
inc
adc
push
add
(bad)
and
adc
gs
nop
pop
jmp
cli
sub
mov
pop
xor
mov
cld
adc
jmp
mov
retf
adc
in
sbb
fld
jmp
sti
xchg
imul
mov
add
or
add
addr16
or
dec
sbb
jbe
es
mov
enter
pop
in
push
clc
ss
sub
enter
jmp
sbb
dec
ficomp
cmps
dec
jp
shr
out
xor
mov
mov
ins
aas
aaa
jns
xor
adc
cmp
xchg
push
ret
cmp
pop
push
adc
aas
jmp
gs
or
movs
mov
cdq
dec
or
in
fs
pop
pop
mov
test
push
in
push
xor
fwait
mov
xor
xchg
imul
(bad)
ror
fistp
add
mov
div
adc
adc
jmp
fist
shl
ja
pop
mov
hlt
into
bswap
cli
test
cmp
pop
cdq
pop
mov
movs
jbe
sub
loopne
pop
xchg
retf
lods
dec
adc
pop
jmp
lods
in
pop
out
dec
pop
clc
pop
ins
push
jecxz
js
jg
inc
mov
xor
stos
jmp
cmp
or
rcr
cli
shl
xor
fiadd
inc
push
fs
fidiv
fs
int3
test
lea
xchg
mov
cdq
and
jbe
ret
retf
es
call
or
jmp
inc
int3
dec
ins
jno
push
inc
or
int3
push
(bad)
or
xor
into
aad
jmp
inc
xor
or
loope
jns
lahf
mov
call
fcomp
dec
cmp
int
mov
xchg
rol
scas
(bad)
gs
stos
add
mov
lea
shr
lahf
lea
pop
sub
test
les
in
mov
shr
inc
push
gs
jl
mov
mov
into
rcr
or
ds
push
out
jecxz
mov
rcr
adc
jl
lea
pop
outs
jmp
push
push
nop
rcr
sar
xchg
mov
mov
out
and
xor
scas
mov
mov
inc
inc
push
pop
xchg
test
adc
mov
movs
xchg
xchg
pop
outs
push
sbb
inc
rcr
dec
mov
daa
inc
push
add
or
ja
fidivr
jl
aad
pop
arpl
loope
pop
xor
clc
retf
mov
fisubr
push
mov
cmp
add
push
xor
cmp
mov
cld
and
jne
jno
jno
loop
mov
inc
push
pop
ret
imul
aad
add
cmp
xor
into
or
add
dec
inc
shr
mov
test
xor
mov
pop
adc
retf
push
pop
jae
lock
fst
dec
jg
push
cmp
jmp
inc
popa
mov
lods
jbe
int
das
gs
adc
or
lea
stos
mov
ror
(bad)
stos
sbb
push
retf
add
mov
out
adc
scas
inc
dec
sbb
xor
jb
mov
popa
ss
push
mov
cmp
sar
push
lods
sysret
pusha
add
test
fbstp
popa
fbld
in
xchg
call
sub
jae
sbb
mov
rcl
fnclex
or
sub
addr16
add
mov
int3
or
dec
retf
sub
mov
jp
xor
jg
in
add
pushf
(bad)
jns
imul
add
test
cmps
fiadd
cmp
mov
push
and
into
lods
xchg
in
enter
retf
stos
sti
cmps
mov
sbb
fldcw
outs
icebp
pop
fwait
repnz
hlt
pop
mov
mov
int3
mov
push
(bad)
stos
pop
jns
jg
js
mov
pop
into
retf
dec
jmp
xor
mov
lahf
add
mov
add
lahf
(bad)
out
test
jp
cmp
sbb
cdq
jl
mov
aam
stc
int
or
outs
imul
jne
dec
fidiv
mov
daa
dec
call
mov
add
or
xchg
shl
(bad)
cmp
push
mov
enter
mov
arpl
lahf
int3
or
(bad)
fild
sub
mov
test
out
loop
shl
pop
mov
add
nop
cmp
mov
int
push
test
xor
fistp
mov
xor
xor
idiv
lock
pop
sbb
outs
fmul
xor
push
mov
rcr
(bad)
fmul
fistp
or
ds
dec
mov
adc
es
push
xchg
enter
sar
das
cmp
imul
xchg
sub
shr
or
stc
adc
sti
or
js
int
xor
hlt
add
cdq
xchg
inc
pop
lds
adc
sbb
adc
xor
cmp
(bad)
adc
imul
xchg
mov
popf
and
movs
cmp
sbb
push
pop
cmp
lea
jbe
and
icebp
push
mov
xchg
cmp
mov
(bad)
inc
nop
jge
test
adc
push
daa
jmp
outs
mov
into
shr
sub
fpatan
mov
mov
shr
(bad)
fistp
inc
dec
popa
shld
gs
xor
push
or
fnclex
(bad)
fst
cwde
clc
push
inc
add
sub
push
adc
mov
lfs
and
jl
daa
dec
js
not
or
cld
sub
movs
push
cmp
jle
out
cli
jb
(bad)
mov
retf
pop
inc
jecxz
fld
sub
ja
mov
mov
push
xchg
and
and
inc
and
into
jge
cmp
or
xchg
and
add
ss
sbb
add
sub
or
pop
or
out
xor
cmc
pop
stc
or
ds
std
lahf
push
xchg
ins
inc
sbb
fs
fsubr
test
and
push
cwde
push
sbb
or
sbb
aas
mov
bound
sbb
xchg
adc
jb
mov
mov
add
out
loopne
lods
aam
fs
(bad)
pop
xor
jecxz
popa
adc
push
je
mov
mov
cmp
ftst
jl
gs
(bad)
xor
cmp
test
or
mov
mov
xor
pushf
push
inc
xchg
inc
in
adc
adc
adc
jae
dec
ror
aam
sbb
xchg
imul
test
cmc
lock
mov
int3
jl
adc
xor
movs
inc
push
lds
sti
lahf
pushf
jmp
push
pop
(bad)
sub
ds
leave
and
fistp
inc
js
mov
pop
or
dec
loopne
dec
icebp
push
int
add
add
dec
mov
dec
fstp
sub
mov
cld
xor
aam
pop
in
mov
scas
fisubr
ds
test
popa
lods
pop
sbb
pusha
add
fs
ja
enter
xor
mov
xor
mov
adc
and
cmp
push
sub
ins
pop
adc
mov
push
leave
dec
jnp
cmps
jp
adc
int3
push
daa
sub
sti
push
cmp
imul
leave
test
push
loopne
pop
jno
iret
mov
push
jne
sub
fidivr
lock
jns
add
loop
dec
sub
push
xchg
mov
icebp
pusha
or
movs
mov
fdiv
out
and
shl
mov
mov
adc
jo
cs
and
jmp
adc
retf
pusha
mov
test
icebp
sub
push
ins
stos
sbb
add
mov
and
xor
addr16
cmps
sub
mov
push
push
imul
mov
loope
(bad)
dec
adc
ret
test
clc
cmp
mov
scas
sbb
dec
or
xor
sbb
cmp
adc
jne
mov
loope
shl
test
out
pop
shl
fs
adc
inc
pusha
cs
push
int
jne
push
or
jo
scas
cmp
sar
repz
sub
xor
sbb
icebp
push
xchg
stos
adc
mov
xchg
dec
jp
xchg
pop
mov
lock
fwait
movs
cmc
imul
pop
mov
mov
nop
leave
(bad)
clc
call
lock
les
jnp
mov
(bad)
sar
mov
outs
lods
add
mov
mov
jnp
ror
pop
das
out
mov
jb
inc
xchg
mov
adc
jg
daa
or
jno
mov
popf
mov
xor
movs
or
pop
or
jb
pushf
mov
sbb
fwait
js
jecxz
jbe
in
push
test
imul
xchg
inc
cmp
and
cmp
pop
adc
sbb
cdq
mov
inc
cdq
pop
sbb
sbb
imul
pop
mov
cdq
mov
loop
shr
ins
shl
lods
call
mov
or
jge
lods
inc
adc
inc
jl
ds
aaa
pusha
les
mov
sub
and
bound
mov
inc
inc
mov
sar
jae
mov
jne
mov
adc
push
xor
leave
shr
add
loopne
jbe
ret
mov
aaa
sub
bound
push
mov
push
cmp
je
es
push
xor
or
cli
add
cmp
shl
enter
das
imul
mov
jle
add
cmps
sub
(bad)
push
mov
adc
push
(bad)
movs
cmp
stos
fsub
and
mov
mov
das
xchg
gs
loopne
mov
cmp
loop
cmps
stos
mov
(bad)
sub
in
into
cmp
jmp
test
bound
jle
ficomp
inc
inc
loop
mov
push
fcom
push
sbb
inc
fs
icebp
jns
xor
in
fwait
add
fdivr
inc
dec
cmps
jecxz
(bad)
and
cmp
and
adc
xlat
sbb
jne
inc
jbe
js
adc
lock
xor
jle
(bad)
repnz
movs
and
push
pop
call
int3
bound
pop
iret
arpl
into
aaa
add
add
(bad)
cmp
lods
icebp
int
or
xor
adc
adc
hlt
into
ins
sahf
xor
push
nop
mov
jl
arpl
xchg
jo
push
adc
inc
mov
sbb
lods
dec
push
movs
cmp
lds
repnz
pop
aam
mov
or
ds
ds
pop
retf
test
dec
call
add
push
mov
push
lods
imul
movs
cwde
or
test
cli
xchg
ror
inc
sbb
arpl
jmp
xchg
icebp
arpl
fisubr
stos
cmp
fisubr
sahf
repnz
mov
mov
outs
fwait
jns
jp
jo
in
fs
mov
adc
shl
xchg
mov
and
hlt
xchg
jl
pop
leave
js
rol
scas
stos
test
lock
jnp
mov
mov
ins
repnz
inc
inc
sub
aam
mov
(bad)
push
fld
mov
or
pop
xor
fisubr
lods
pop
push
jge
repz
cli
cmp
movs
bound
inc
add
(bad)
push
mov
sbb
cmp
cmp
or
iret
or
jecxz
mov
test
dec
sbb
sbb
call
mov
mov
outs
mov
pusha
imul
mov
and
add
sub
push
into
jmp
lods
dec
in
xor
loope
popf
jno
adc
and
add
sbb
push
xchg
movs
mov
fisttp
mov
ror
rcl
les
and
jae
ret
xor
or
adc
inc
cmp
inc
push
jmp
push
or
scas
or
cmp
jmp
and
rcr
mov
add
xchg
push
xor
or
add
mov
add
inc
(bad)
xor
xchg
adc
jae
call
div
xor
mov
fld
call
mov
push
cmp
dec
sub
adc
sahf
test
movs
es
sbb
fldcw
popa
hlt
fdivr
lods
or
xchg
aaa
mov
mov
leave
clc
and
xchg
add
push
mov
mov
ret
mov
add
xchg
sbb
pop
jecxz
add
das
pop
dec
add
pop
add
dec
loope
mov
loop
pop
shl
test
dec
inc
int
stc
jo
cli
inc
in
idiv
jmp
jmp
out
fisubr
in
or
mov
cdq
push
or
dec
(bad)
adc
mov
out
retf
imul
jge
xchg
inc
inc
adc
popa
jne
dec
arpl
pop
lds
xchg
lock
imul
bound
scas
(bad)
cmps
xchg
movs
ret
xchg
fcmovnb
pop
jl
sub
add
mov
or
addr16
stos
cmps
sub
jecxz
and
lea
fsubr
fadd
mov
mov
pop
jp
xchg
push
pop
retf
dec
and
mov
mov
fidivr
sbb
mov
mov
aam
push
cmp
pop
imul
sar
xchg
sub
xor
pop
std
add
lock
out
lock
out
out
repnz
(bad)
retf
xchg
dec
inc
jno
lods
jmp
jns
ja
call
popa
out
out
movs
jb
out
arpl
push
adc
pop
push
jle
inc
sub
adc
cwde
rcl
int3
push
shr
push
jae
add
arpl
rol
aaa
inc
xor
jno
adc
and
in
cld
sub
test
fidivr
fdiv
adc
mov
xlat
sub
jmp
rol
push
sbb
inc
ins
mov
xchg
mov
adc
std
mov
xor
and
jnp
ins
and
adc
dec
push
or
pop
and
popa
xor
outs
aad
cli
pop
leave
lds
jle
cwde
pop
sub
loope
and
inc
sti
and
jg
(bad)
(bad)
pop
pop
jno
cli
xor
mov
and
sub
movs
jns
inc
(bad)
pop
add
pop
dec
push
jno
push
jne
fiadd
xor
out
sub
mov
jns
lock
stos
popf
fisub
or
inc
sbb
aam
add
add
ins
mov
clc
test
out
push
inc
push
inc
dec
sbb
xchg
xchg
pop
leave
fwait
sbb
(bad)
mov
sbb
retf
out
cmps
jecxz
je
jl
mov
in
in
mov
sahf
lahf
fbld
mov
clc
push
shr
pop
pop
sbb
dec
std
mov
loope
not
and
pop
fwait
push
cmps
add
iret
pushf
pop
lods
dec
xchg
dec
xlat
stc
retf
mov
sbb
jbe
gs
call
fwait
mov
inc
bnd
fistp
mov
xor
nop/reserved
nop
push
lahf
xchg
clc
ficom
sbb
or
inc
leave
(bad)
jl
adc
sbb
mov
mov
mov
add
movs
out
dec
popa
lods
stc
fwait
scas
lds
enter
repz
xlat
mov
mov
add
mov
or
push
cld
outs
cmps
in
mov
imul
push
mov
adc
xor
inc
dec
and
jecxz
sub
mov
sbb
aas
jg
mov
and
mov
je
mov
xchg
vmovdqu
sub
push
imul
sti
lods
mov
aaa
xchg
add
jg
inc
les
and
mov
loop
shl
gs
sub
sub
push
repz
pop
loope
jae
(bad)
pop
out
pop
cwde
xchg
outs
xor
pusha
mov
cdq
push
inc
rol
xor
adc
add
dec
stc
xor
mov
and
push
mov
mov
popa
(bad)
xchg
(bad)
mov
outs
adc
inc
push
add
lods
xchg
out
xchg
popf
inc
stos
(bad)
dec
jp
jo
cmps
nop
sbb
rcr
call
add
and
pusha
push
inc
imul
cmc
mov
mov
jge
xor
mov
test
popf
test
push
mov
fst
scas
ficom
lods
pop
rol
call
(bad)
js
and
stos
push
ja
cmp
push
icebp
add
mov
dec
add
push
xchg
(bad)
retf
out
test
out
ja
xor
and
stos
adc
das
call
std
cli
ret
fisttp
add
mov
cmp
mov
fistp
jb
into
lods
xchg
ja
arpl
fcomip
jbe
shl
sahf
stos
jb
les
dec
ret
inc
fwait
sti
and
pop
test
jb
pop
bound
jle
in
jbe
pushf
dec
test
jle
rcr
popf
mov
and
push
xchg
nop
and
xchg
inc
add
mov
or
xchg
(bad)
movs
pop
pop
pop
sti
(bad)
xchg
call
scas
and
loope
icebp
xor
out
sar
inc
gs
sahf
inc
add
das
rcl
cmp
popa
rcl
jp
cs
in
cmp
iret
or
push
cbw
pop
lods
xchg
popa
repnz
pminsw
sti
inc
in
popa
add
es
js
test
adc
sub
push
and
mov
inc
in
stos
push
repz
jecxz
pop
inc
sub
dec
sbb
or
and
mov
jecxz
iret
jmp
adc
(bad)
and
add
repz
xor
push
test
xor
ficom
add
out
imul
push
ror
cmp
sbb
cmp
sbb
(bad)
ror
inc
push
and
lods
neg
xor
lds
or
mov
xor
cmps
mov
cmp
cmp
pop
sbb
dec
dec
ds
movs
sbb
sbb
mov
ss
dec
xchg
rcr
rcl
(bad)
shr
fxtract
out
es
sar
ins
dec
std
(bad)
xchg
iret
mov
data16
call
pop
mov
dec
pop
mov
push
mov
inc
cmp
push
mov
stos
pop
movs
push
inc
add
cmp
or
stos
mov
stos
mov
ja
sbb
jno
inc
mov
test
into
dec
sbb
jb
sbb
(bad)
push
push
adc
xchg
sub
xor
mov
repz
push
inc
std
mov
sti
push
(bad)
xchg
push
in
inc
jecxz
dec
xor
and
lock
adc
sbb
fld
inc
(bad)
push
sub
jle
push
mov
jb
rcr
bswap
and
xor
pushf
je
shr
hlt
cmps
sbb
mov
jnp
fiadd
pop
test
cmp
imul
std
cmps
jo
dec
push
sbb
ror
arpl
mov
sub
xchg
xor
cld
sub
cmp
ror
gs
les
pushf
dec
push
call
shl
push
out
fs
cmps
outs
inc
push
clc
jmp
aad
ds
outs
jle
dec
push
jnp
je
mov
jmp
cmp
add
int3
push
xchg
fs
pop
cmp
cwde
xlat
fidiv
pop
jmp
add
pusha
or
mov
ror
adc
mov
xchg
shr
mov
stc
not
or
in
add
adc
ret
and
call
xlat
pop
pop
jecxz
(bad)
inc
lea
inc
ror
jmp
mov
daa
in
xor
inc
popf
cmp
out
sub
int
pop
mov
hlt
jns
add
out
das
les
daa
mov
in
sub
repnz
adc
push
ins
int3
fidiv
cmp
cmp
test
mov
cmps
test
inc
mov
fmul
aas
mov
retf
popf
imul
aad
daa
lods
mov
sbb
aas
scas
leave
and
repnz
dec
(bad)
xlat
aas
cdq
inc
cdq
push
les
pop
arpl
cmp
sub
(bad)
ficom
loop
mov
inc
mov
xchg
mov
nop
nop
mov
ficom
(bad)
(bad)
imul
mov
ss
and
and
cmp
cmps
xchg
cmps
jmp
or
pop
mov
sar
or
mov
dec
sbb
sbb
movs
aas
cwde
imul
out
xor
pop
inc
shl
xchg
out
popf
adc
adc
cmps
mov
mov
ja
arpl
sub
xchg
test
jecxz
daa
in
inc
xchg
jns
retf
fs
dec
cmp
dec
neg
mov
aam
imul
cli
pushf
push
jne
in
call
adc
hlt
sbb
mov
xor
dec
jl
iret
mov
aam
int3
clc
dec
das
or
xlat
add
movs
add
adc
adc
pushf
stos
or
or
mov
and
mov
push
jmp
jb
neg
retf
imul
je
mov
ret
out
xlat
int3
or
adc
jge
adc
adc
mov
cdq
fs
mov
mov
cmp
fs
pop
fiadd
jp
je
imul
push
jg
retf
inc
adc
add
jecxz
jne
dec
inc
test
mov
lea
sbb
enter
loopne
mov
stc
scas
popf
add
add
mov
cld
push
mov
rcl
add
xor
stc
sti
loope
aam
add
jnp
or
mov
(bad)
mov
mov
ja
dec
aam
adc
or
xor
pop
out
adc
mul
inc
sbb
mov
cmp
sbb
adc
aaa
mov
and
jae
je
scas
sub
and
loope
xchg
inc
rol
js
pop
daa
idiv
fadd
xor
loope
pop
jge
lods
test
mov
mov
push
add
(bad)
in
cmp
stos
aaa
bound
mov
push
pop
jnp
or
inc
lahf
or
test
(bad)
dec
lea
push
dec
jo
nop
retf
add
pop
dec
mov
mov
xchg
movs
sub
test
mov
out
pop
jo
mov
fnstcw
jmp
jae
xlat
jo
mov
adc
push
scas
xor
mov
dec
test
mov
sbb
or
mov
add
pusha
or
dec
sbb
sbb
es
cmp
js
je
pop
xchg
jle
mov
cmp
por
stos
cmc
call
pop
retf
fidiv
cmp
(bad)
sub
hlt
popf
or
ror
push
icebp
div
and
dec
pop
push
xor
dec
lods
inc
xchg
es
xchg
or
enter
push
in
in
pop
clc
xor
sub
mov
dec
pop
xor
into
pop
mov
loope
sar
push
push
loopne
stc
xor
push
xor
add
adc
mov
dec
xor
ins
xchg
dec
stos
mov
out
jo
(bad)
adc
add
or
call
xor
bswap
fwait
adc
add
cmc
(bad)
jl
add
hlt
xchg
jbe
je
hlt
std
test
xchg
or
dec
iret
or
push
ins
adc
les
psrld
sub
test
stc
cli
out
das
fs
pop
ds
xchg
gs
push
add
lea
inc
ss
sub
add
adc
ficomp
jbe
fnstcw
or
dec
(bad)
aam
adc
js
cdq
daa
xor
sti
xchg
jle
xchg
ror
mov
xor
xchg
sub
cmp
adc
xor
enter
shl
scas
loopne
xchg
push
ficomp
push
test
push
sub
ins
sar
add
pop
inc
jo
inc
in
dec
adc
push
pushf
dec
(bad)
adc
sbb
jne
aaa
(bad)
jbe
bound
xor
cmps
jmp
add
popf
inc
in
aaa
xchg
dec
sub
mov
fucom
gs
mov
shl
mov
mov
xor
movs
loop
inc
inc
inc
pop
inc
shl
mov
(bad)
mov
pop
xor
xchg
jo
in
(bad)
jmp
sbb
inc
dec
push
cmps
mov
lods
les
iret
mov
push
cmovg
push
pusha
loop
jmp
dec
in
xbegin
mov
add
mov
addr16
lea
retf
lea
cmps
push
iret
fisttp
push
xor
ret
or
inc
or
mov
or
xchg
das
sub
xchg
fmul
out
adc
pextrw
xchg
test
mov
in
dec
jns
test
adc
(bad)
push
cs
sti
mov
movs
cli
jnp
jg
ds
popf
sbb
ins
sti
bound
stc
dec
push
inc
mul
jo
out
shr
or
(bad)
pop
stc
cli
dec
mov
ja
cwde
jge
cmp
sub
enter
xchg
sbb
ss
cld
jp
mov
mov
gs
jmp
ins
lods
jne
cli
xchg
int
clc
sti
cmp
inc
ja
xchg
aas
dec
jb
mov
loop
out
xchg
call
es
lods
add
shl
adc
sbb
repnz
push
sub
popf
inc
scas
dec
dec
dec
jmp
pusha
sti
loope
cmps
shl
jg
addr16
ret
sahf
icebp
mov
jecxz
ror
fidivr
rol
sub
inc
(bad)
retf
arpl
outs
test
inc
je
and
mov
cmps
popa
ret
xor
jle
call
int
sahf
stc
stc
push
pop
xlat
mov
jmp
rol
pop
fst
dec
push
gs
mov
mov
fwait
and
sbb
call
(bad)
loop
je
repnz
stos
mov
and
inc
into
mov
gs
xor
cld
push
xchg
loop
stos
mov
ins
cmps
pop
pop
das
add
aaa
xor
xchg
mov
xor
fwait
xchg
mov
pop
(bad)
into
mov
cmp
jmp
aam
rcr
cmp
ret
jnp
outs
sub
mov
mov
hlt
mov
jbe
aam
sub
and
je
cmc
movs
in
mov
or
pop
cmp
xchg
data16
cmp
sbb
cwde
jle
add
inc
sub
xor
mov
lods
mov
mov
jg
mov
mov
pop
stc
sbb
cli
inc
lods
pop
aam
inc
sub
push
outs
or
int
in
dec
ja
pop
cld
popa
push
and
out
clc
cwde
or
fisub
jno
jp
icebp
dec
loope
push
adc
cmp
mov
stos
and
push
lods
lods
aam
add
jo
aaa
int3
dec
mov
and
lea
loopne
or
inc
push
jg
mov
das
adc
sub
jge
ror
inc
sub
into
pop
jle
adc
xor
(bad)
int
loopne
out
test
push
adc
sbb
icebp
cli
je
push
out
mov
dec
out
xchg
cmp
dec
les
das
mov
or
push
(bad)
fs
dec
sahf
stos
int3
loop
lds
pop
jno
retf
inc
inc
push
adc
inc
and
lea
mov
loopne
cmps
adc
mov
mov
or
dec
cli
xchg
pusha
call
mov
or
rol
xchg
iret
rcl
(bad)
jns
mov
and
xchg
mov
dec
retfw
les
pop
or
(bad)
jns
sub
jg
mov
ins
es
or
sbb
push
xor
call
enter
sbb
(bad)
mov
xor
and
jne
mov
loop
enter
(bad)
push
push
lahf
mov
add
sbb
ja
push
pop
sub
test
xlat
add
nop
lahf
test
adc
jge
out
sub
test
bsr
cdq
xchg
hlt
movs
adc
jns
sub
mov
(bad)
jge
push
enter
mov
retf
push
movs
lea
add
xor
add
ret
aas
stos
mov
push
inc
mov
data16
bnd
fnstcw
test
lock
outs
jge
imul
movs
and
movs
pop
xchg
mov
cs
fcom
rcl
gs
mov
mov
pop
xchg
sbb
push
push
pop
xchg
enter
lods
lods
test
or
ret
mov
xor
cdq
ins
loop
imul
mov
sub
repz
addr16
test
stos
ror
out
or
push
mov
push
mov
iret
std
sub
scas
push
and
rcl
push
cdq
stc
xor
pop
aaa
mov
fcomp
ss
xchg
xchg
(bad)
jecxz
fst
repz
retf
lds
cmovbe
adc
xor
mov
dec
test
sahf
ror
fidivr
cmp
jge
jns
je
jno
addr16
adc
lahf
in
cmp
arpl
pushw
rol
pop
mov
xchg
out
sub
sbb
jbe
xlat
dec
sbb
and
mov
(bad)
loope
movs
mov
pop
mov
scas
hlt
sbb
push
std
cli
jbe
sbb
mov
sub
aam
pop
push
jne
pop
dec
push
loop
lahf
add
popa
retf
mov
mov
pop
adc
pusha
mov
inc
call
mov
mov
jno
adc
iret
jns
in
xchg
jle
scas
daa
jbe
mov
hlt
fistp
and
pop
loope
jmp
dec
mov
push
adc
add
or
clc
jbe
test
and
outs
xor
adc
fisub
dec
leave
mov
adc
mov
pop
call
pop
mov
aas
sub
loop
gs
mov
into
add
fidiv
adc
adc
sub
dec
jecxz
lea
sti
in
push
or
das
cli
pop
(bad)
nop
scas
cmp
or
xchg
inc
push
sar
mov
or
imul
je
cdq
gs
cmp
(bad)
iret
push
addr16
clc
ss
pop
movs
inc
sti
pop
and
xchg
sub
add
je
push
es
mov
mov
push
fst
cmp
int3
ds
dec
cld
xor
jbe
repz
mov
xchg
rcr
data16
outs
daa
dec
inc
nop
loope
int3
fcomp
add
repz
cmps
jbe
xchg
push
mov
mov
iret
mov
jecxz
inc
std
xor
push
mov
adc
(bad)
jae
and
(bad)
scas
test
adc
test
mov
push
aaa
jle
jnp
and
dec
push
pushf
or
adc
push
pop
shr
add
jno
gs
xor
xor
lea
dec
ja
hlt
xchg
mov
sbb
inc
fild
sbb
mov
scas
call
shl
jmp
mov
jecxz
out
adc
or
push
jns
outs
movs
aam
cld
dec
mov
mov
sub
in
xor
lahf
pusha
xchg
mov
mov
pop
fcomp
ins
dec
inc
ja
shl
(bad)
xlat
out
pop
push
in
dec
ret
xchg
mov
icebp
or
cmp
mov
cmp
das
shr
aaa
(bad)
push
lea
test
pushf
(bad)
je
fsub
gs
add
mov
es
out
or
jge
int
cmp
mov
mov
adc
jne
sar
imul
cli
in
add
inc
(bad)
cli
jecxz
cld
mov
sar
(bad)
inc
pop
pusha
sbb
(bad)
jp
in
div
sub
mov
mov
iret
pop
clc
push
call
scas
xor
dec
loope
imul
add
movs
inc
sbb
pop
pop
stos
call
dec
sbb
pavgw
jb
clc
cs
fwait
xchg
movs
dec
cs
rcl
xor
ficom
sbb
mov
dec
data16
stc
scas
sti
das
loope
mov
es
and
mov
pop
(bad)
or
xchg
repnz
sub
and
pop
cmp
into
leave
dec
mov
inc
mov
pop
mov
shl
adc
and
pushf
rcr
ja
pop
mov
sub
mov
rcr
xor
ds
mov
jge
fs
add
bsf
int3
sbb
out
aam
inc
jle
mov
js
and
rcr
pop
idiv
sbb
cmc
xlat
mov
fisttp
adc
inc
fisttp
pop
ret
test
cs
call
(bad)
sub
aaa
(bad)
jo
nop
lahf
xor
and
xchg
xor
adc
inc
mov
mov
scas
pop
push
xchg
lahf
mov
xor
(bad)
mov
mov
sbb
pop
out
jo
frstor
(bad)
(bad)
dec
ret
mov
frstor
fimul
leave
add
pop
xor
(bad)
pop
jo
pop
inc
loope
mov
cdq
clc
push
out
pop
or
mov
mov
jo
adc
rol
add
(bad)
aam
popa
int3
mov
pop
movs
mov
add
lock
mov
xchg
mov
adc
inc
ja
repnz
and
fidiv
mov
fdiv
rcl
mov
pop
dec
push
pop
push
daa
shl
sub
scas
mov
push
icebp
mov
push
xchg
jge
das
push
das
cmps
mov
dec
es
ror
dec
ins
icebp
sub
xchg
stc
dec
mov
lods
jmp
sahf
dec
pop
jmp
in
addr16
ss
ins
sub
xor
call
xor
pop
jecxz
or
push
pop
xor
ds
inc
pop
xchg
mov
cmp
lock
scas
sub
enter
xchg
lods
adc
cmp
ss
jnp
ror
pop
gs
add
jp
aas
int
pop
mov
leave
arpl
pop
inc
jecxz
outs
cmp
stc
nop
ret
inc
xor
jb
sub
dec
push
call
mov
imul
jnp
ja
test
pop
xchg
jp
scas
jge
inc
adc
shl
xor
and
fs
mov
addr16
mov
xchg
pop
fisubr
mov
cmps
fcomp
add
cwde
xchg
sub
sti
pop
pop
sbb
xor
(bad)
pop
les
add
and
cmp
jle
movs
xor
repz
mov
add
in
lods
xor
or
adc
push
mov
cmp
idiv
and
rcl
bound
jecxz
not
pop
fwait
addr16
dec
mov
pop
sbb
jb
sub
mov
popa
jno
mov
cs
aam
ins
and
pop
scas
inc
cmp
mov
sbb
mov
inc
lds
stos
enter
xchg
cmps
mov
pop
cmp
inc
xor
push
ins
xor
mov
pop
push
inc
or
mov
xor
mov
test
test
xchg
pop
or
or
cmp
ins
pop
sub
pop
neg
in
sub
ror
xchg
movs
inc
scas
je
test
inc
push
dec
cwde
mov
stos
mov
dec
jmp
cmc
xlat
dec
out
retf
pop
cmp
iret
fstp
or
inc
sub
in
dec
add
mov
sahf
jge
push
arpl
add
cmp
xlat
pop
dec
test
sahf
push
ror
mov
sbb
jecxz
xor
mov
int
mov
fld
stos
loop
xor
push
out
clc
xchg
jge
adc
test
div
sbb
sbb
sub
adc
cmp
inc
ret
sub
xlat
xchg
ins
cmp
ins
and
lock
push
iret
mov
adc
add
sub
icebp
inc
jp
fild
call
jmp
sub
xor
or
dec
aam
js
or
movs
dec
sub
sbb
test
or
imul
xlat
std
add
fcmovbe
in
pop
jle
test
ss
(bad)
leave
out
aam
cmp
in
jmp
cmp
dec
pop
mov
lds
int
inc
call
dec
(bad)
in
loope
or
jne
test
popa
adc
mov
lock
sbb
mov
retf
cwde
push
movs
lock
pop
or
adc
sbb
enter
mov
mov
cmp
mov
mov
test
imul
pop
inc
popa
cmp
jbe
or
jb
pop
xor
mov
std
dec
ret
ss
ja
cld
pusha
inc
jne
xchg
mov
scas
xchg
push
xchg
dec
dec
add
fadd
jecxz
call
loope
push
call
std
xchg
adc
enter
cmp
sub
pop
cmps
pop
stc
mov
sub
std
dec
mov
xchg
add
adc
push
aas
cmp
leave
or
jbe
dec
inc
jg
jmp
add
dec
cs
test
sub
loop
xchg
push
pusha
cmp
mov
cs
popa
dec
jmp
mov
mov
jnp
cmp
lds
cmp
jae
pop
les
pop
movs
pop
push
cmc
sbb
and
fidiv
sub
cmc
lahf
out
mov
in
repz
dec
aas
call
gs
inc
mov
mov
adc
dec
stos
cmp
imul
lods
(bad)
jno
add
jo
std
xchg
int
test
fidivr
push
scas
in
shl
mov
mov
mov
adc
mov
pop
dec
push
xchg
mov
dec
das
dec
or
nop
js
(bad)
dec
ins
outs
(bad)
(bad)
neg
xor
mov
pop
and
in
adc
mov
inc
dec
mov
(bad)
or
cmps
xchg
jl
ss
inc
out
push
retf
mov
xchg
sti
loopne
pop
and
sahf
xor
xor
enter
cs
aam
pop
repnz
daa
ror
loopne
dec
add
and
(bad)
cmp
sahf
in
psubsw
mov
sub
cli
adc
scas
movs
and
jmp
icebp
xchg
push
push
add
(bad)
cmp
push
sub
leave
or
mov
out
in
add
ins
imul
pop
lds
cmp
fcomp
stos
daa
movs
cmc
gs
mov
mov
pushf
inc
sbb
stos
push
and
rcr
jg
push
and
stos
xchg
fsub
nop
iret
and
scas
cmp
push
sbb
fadd
pop
mov
sbb
cdq
lods
and
inc
ror
stos
lock
fucomip
xor
sbb
mov
sub
pushf
aad
ret
mov
xchg
cmps
popf
jns
aad
push
sti
jge
lods
sub
rcr
or
fdivr
outs
into
xor
(bad)
push
movs
push
in
mov
jno
jecxz
and
int
lock
and
xchg
push
imul
outs
add
cld
sub
iret
mov
sbb
popa
or
out
push
out
jbe
pop
aaa
enter
jmp
repnz
aaa
and
es
repnz
lea
pop
and
jl
arpl
leave
mov
adc
js
retf
lods
cmps
out
dec
ss
(bad)
sbb
lea
cli
jp
cs
push
stos
mov
rol
push
(bad)
cmps
or
xchg
add
mov
jae
mov
jecxz
ret
mov
adc
pop
dec
xlat
arpl
loope
xchg
ss
test
inc
jmp
mov
scas
sar
sub
dec
bound
(bad)
int3
or
in
adc
pop
sbb
pop
vpmacsdql
pop
inc
push
push
push
pop
popa
shl
daa
js
mov
and
pop
repz
test
jbe
jne
add
mov
clc
xor
push
cmps
push
dec
mov
push
mov
stc
test
cmp
adc
dec
cmps
loopne
dec
xor
dec
fisubr
je
mov
mov
pop
mov
push
push
out
call
jne
jns
ret
cmp
pop
cmp
add
pop
lds
xchg
dec
loop
xor
sbb
jno
sub
mov
push
test
mov
xchg
clc
std
out
in
or
sar
xor
dec
mov
enter
cli
ret
jecxz
inc
mov
outs
neg
jle
xor
sbb
cmp
cmps
fldenv
ss
ja
jmp
cmp
movs
mov
adc
in
(bad)
mov
and
cmps
or
mov
xor
(bad)
in
jne
xchg
sbb
dec
mov
dec
dec
imul
lahf
mov
dec
mov
repz
dec
inc
xor
fld
mov
aam
mov
mov
lahf
lods
xor
in
adc
jge
mov
sub
inc
stc
push
out
or
popf
inc
sbb
stos
xchg
inc
push
mov
jbe
test
loopne
push
test
(bad)
std
jne
adc
xor
mov
test
cli
lods
jle
aaa
and
mov
pop
mov
pop
adc
add
inc
aaa
outs
mov
rol
bnd
xchg
jne
mov
inc
add
lods
mov
fstp
mov
inc
shl
push
push
loop
inc
cdq
push
rcl
cli
in
out
jmp
rcr
jns
scas
cmp
bound
daa
push
xor
cs
(bad)
out
ins
pop
in
push
cmps
jbe
cmp
movs
mov
clc
cmps
outs
and
fadd
call
lahf
popf
dec
es
(bad)
cli
inc
mov
repnz
call
mov
mov
push
es
gs
inc
mov
leave
shl
mov
hlt
(bad)
imul
scas
push
repz
ret
imul
cmp
sbb
out
push
not
push
pop
loope
(bad)
cmps
jp
out
cmp
mov
pop
data16
retf
loopne
popf
push
jmp
test
ss
add
inc
add
rol
shl
(bad)
pop
lea
retf
xor
pop
mov
sbb
mov
jg
inc
push
jmp
push
imul
add
into
xor
mov
xor
cmp
bound
ins
push
jne
ret
sar
jmp
fdivr
jbe
mov
dec
adc
and
mov
mov
std
and
js
shl
cld
(bad)
xchg
pop
and
arpl
mov
push
inc
or
inc
cmps
(bad)
test
dec
(bad)
xchg
xchg
or
test
gs
push
pop
test
ins
cmp
jp
lock
xchg
test
mov
pop
xor
mov
sbb
xchg
mov
pop
shr
fwait
mov
int
jb
xor
das
gs
pop
(bad)
sub
scas
adc
pop
arpl
mov
fadd
push
imul
sub
outs
aam
(bad)
stc
(bad)
pop
jmp
cmc
sbb
add
jae
popa
mov
adc
jo
sub
pop
sbb
dec
inc
mov
in
add
push
imul
pop
loopne
dec
push
jns
add
sub
jge
and
scas
mov
dec
dec
popa
sub
inc
mov
push
ins
aam
push
mov
jo
mov
test
ret
sbb
mov
push
mov
pushf
jo
jle
lods
mov
add
jo
mov
call
retf
sbb
xor
das
cmp
and
shl
repnz
outs
fs
push
adc
fcom
adc
lods
pop
sbb
(bad)
mov
mov
cmps
push
sbb
or
sub
daa
ror
les
mov
out
mov
push
mov
xor
push
cmps
leave
sbb
test
in
dec
mov
xchg
sub
jle
iret
(bad)
push
xchg
lods
mov
idiv
cmp
pop
xchg
daa
xchg
inc
ret
jns
addr16
inc
das
mov
dec
pop
les
or
add
ret
scas
and
scas
xor
out
lods
and
test
mov
sub
xchg
and
push
push
loopne
(bad)
jmp
pushf
into
mov
and
pop
push
pusha
dec
xchg
mov
aaa
xchg
sub
lods
outs
movs
adc
movs
or
aam
retf
rcr
xchg
fcom
mov
stos
adc
add
jg
out
fs
das
pop
popa
dec
dec
es
enter
(bad)
pushf
rol
(bad)
in
or
or
psrad
mov
cmp
outs
dec
out
dec
ins
mov
jge
inc
aaa
bound
out
or
jecxz
aas
mov
je
and
inc
mov
xlat
test
add
sub
jns
pop
xchg
pop
inc
in
(bad)
enter
das
shl
test
push
sub
ret
in
in
arpl
mov
sbb
jns
sbb
ss
call
aad
sub
dec
out
xor
ins
outs
jmp
xor
inc
icebp
in
mov
not
popa
inc
jmp
ret
mov
adc
jg
mov
and
popa
popf
leave
sar
(bad)
rcl
mov
pop
push
dec
cld
lods
int
xor
cdq
test
stc
outs
xchg
push
daa
popa
daa
add
adc
bound
push
sbb
mov
icebp
test
jbe
mov
loopne
ret
sbb
aam
sub
dec
or
rol
sbb
push
mov
mov
push
pop
or
pushf
js
clc
repnz
es
push
sbb
xchg
or
and
cwde
push
jae
mov
dec
popf
lahf
imul
adc
out
mov
enter
fdiv
int
and
dec
sub
push
cli
mov
or
aaa
icebp
adc
or
push
dec
or
adc
fwait
js
cmp
add
cmc
fisttp
mulps
test
inc
mov
(bad)
inc
imul
js
pop
or
mov
dec
pop
cwde
aad
std
mov
xchg
xor
sbb
addr16
aaa
xlat
loope
addr16
pusha
fs
pop
dec
mov
sbb
les
mov
shr
sbb
xchg
sbb
cli
add
mov
push
ror
lods
fisubr
sahf
hlt
mov
dec
xchg
xchg
test
add
retf
dec
and
pop
(bad)
cmps
push
setg
inc
(bad)
jmp
dec
mov
xchg
ja
cmp
adc
test
jo
jns
add
iret
push
hlt
jg
cmp
iret
add
inc
inc
rol
mov
and
lea
jmp
cmps
adc
retf
(bad)
jb
fistp
daa
out
dec
jmp
retf
add
(bad)
mov
rcl
jbe
cmc
in
jl
inc
test
xchg
lock
xor
sub
inc
push
shl
xchg
std
xor
sub
shr
push
in
ins
in
push
xchg
or
test
or
mov
(bad)
jae
inc
and
test
xchg
(bad)
hlt
push
and
dec
in
pop
mov
dec
jne
push
xor
lea
and
xchg
mov
lods
cs
outs
push
stos
stos
or
outs
lahf
adc
jge
pop
test
mov
xor
dec
daa
xor
in
jo
scas
rcl
jae
test
inc
cwde
loope
and
push
or
lods
mov
ret
push
jmp
inc
sbb
or
ss
shl
imul
sahf
dec
popf
aaa
push
jle
xchg
div
or
mov
fcomip
add
xchg
fisttp
jl
test
mov
fld
pop
sub
mov
adc
cli
inc
out
sub
rcl
and
shl
and
push
cmp
popf
cmc
test
ret
sbb
cdq
inc
ds
mov
and
adc
inc
add
les
ins
in
out
mov
or
jno
xchg
cmps
icebp
jno
xchg
add
std
scas
adc
jmp
leave
push
mov
mov
(bad)
shl
sbb
loope
out
sbb
cmps
adc
arpl
pop
clc
mov
jno
js
jns
loopne
pop
fnstsw
or
mov
test
fst
repnz
mov
call
ret
into
adc
adc
cmps
xchg
iret
test
(bad)
xchg
dec
inc
sbb
addr16
xlat
push
pusha
mov
(bad)
call
sahf
cmp
and
push
mov
add
mov
scas
clc
xor
push
inc
(bad)
movs
xchg
jecxz
adc
mov
push
mov
aaa
into
addr16
and
sub
fist
(bad)
cmp
pushf
(bad)
repz
xor
sbb
scas
sub
or
jmp
adc
push
or
test
pop
ret
adc
(bad)
jbe
sbb
fistp
mov
jp
cmp
jmp
ja
adc
fbld
pop
rcl
sbb
jp
inc
es
fistp
cs
imul
mov
fldcw
aaa
movs
ret
out
jl
xchg
movs
loopne
arpl
rcl
ret
pop
int3
adc
lock
mov
std
pop
xchg
push
dec
and
xchg
dec
imul
shl
adc
dec
or
mov
jle
dec
mov
call
sahf
imul
jp
loop
fistp
dec
cmp
lea
and
stc
jl
sub
out
or
jne
stc
push
lods
lea
(bad)
push
fisub
(bad)
daa
ds
jne
mov
pop
push
ja
loop
mov
fwait
sahf
or
jno
mov
call
repnz
mov
push
xlat
mov
inc
xor
ror
jmp
xor
aam
sahf
xor
cmp
ror
div
mov
jg
dec
pop
add
int
gs
pop
movs
arpl
dec
cli
icebp
fs
std
push
std
popf
addr16
mov
arpl
push
sbb
call
mov
dec
jns
push
sbb
fst
lods
lock
in
add
mov
rcr
xchg
call
hlt
mov
shl
test
adc
jmp
call
mov
dec
cli
outs
loopne
pop
push
bound
pushf
adc
xchg
cmp
imul
out
dec
mov
movs
sbb
je
and
sub
dec
dec
sub
cld
adc
daa
lock
push
int
pushf
ss
or
data16
or
jp
imul
test
pop
leave
iret
(bad)
mov
push
(bad)
add
fnstenv
jg
push
outs
cmp
iret
stos
inc
js
jns
ret
out
mov
pop
jns
outs
outs
aas
aaa
es
or
loop
(bad)
in
mov
gs
addr16
retf
mov
xor
fs
push
test
push
sahf
mov
mov
dec
or
fsub
sub
sub
or
xlat
pusha
cdq
add
cli
inc
mov
cmp
out
pop
(bad)
(bad)
jmp
inc
pop
mov
and
out
pusha
call
cwde
mov
mov
cmp
out
jmp
and
fnstcw
jne
fcmovnbe
popf
daa
mov
popf
push
jmp
fidivr
in
aas
jb
cs
cmc
dec
xor
cmps
test
cli
pop
aam
retf
xlat
rcr
inc
xchg
pop
addr16
lds
clc
call
jae
jno
into
cmps
xchg
add
inc
jmp
rcr
cwde
movs
xchg
sbb
jl
cmps
div
shl
out
and
loopne
cmp
push
add
jbe
adc
cmc
(bad)
pop
add
loope
cdq
inc
cmp
adc
xchg
into
in
ss
xchg
ja
jmp
adc
mov
pop
arpl
jnp
mov
inc
dec
fstp
jo
or
inc
(bad)
dec
(bad)
cdq
dec
out
cmp
adc
sbb
or
xor
out
ins
sub
ss
retf
mov
arpl
mov
jle
jne
out
sbb
inc
int
test
cmps
mov
lds
cmp
mov
mov
fwait
das
(bad)
mov
ficomp
xlat
xchg
icebp
sub
lock
or
jb
nop
jb
arpl
popf
pop
or
push
loop
adc
push
jl
xor
dec
jl
sbb
out
mov
xor
pushf
daa
pop
out
pop
mov
rcl
jle
call
dec
jb
pusha
dec
push
xchg
dec
call
lock
gs
aad
mov
mov
fwait
out
push
arpl
jb
mov
cmps
aas
dec
in
mov
jp
in
out
not
jb
jl
fs
test
mov
addr16
jp
popa
iret
mov
int
dec
add
cmp
jns
loop
ss
je
pop
cdq
repz
jle
loopne
and
dec
retf
and
icebp
jae
call
cmps
jg
add
cmp
add
pop
add
and
out
imul
sahf
or
je
je
xchg
add
cwde
or
adc
mov
jns
fisub
call
add
stos
xchg
mov
mov
push
push
xor
xor
dec
pop
xchg
push
pop
fisubr
test
pop
in
mov
push
mov
ss
sbb
cmps
lahf
jns
add
mov
ins
or
and
cwde
in
jle
js
(bad)
fist
dec
cmp
lods
dec
stc
dec
sub
mov
mov
mov
cmps
pop
lods
push
aaa
add
xlat
cs
pop
loop
or
fs
retf
fisub
xchg
push
sbb
mov
jle
xchg
dec
or
mov
cmp
aad
mov
xchg
ret
dec
push
stos
call
xchg
ss
add
in
and
jl
pop
xchg
fld
inc
iret
(bad)
pop
and
scas
jne
push
call
fimul
cmp
test
imul
out
mov
mov
or
cmp
outs
les
rcr
sub
jo
pusha
loop
lock
popf
hlt
test
mov
cmp
sti
push
and
sub
mov
test
push
fcomp
jb
pop
fld
movs
iret
add
scas
cmp
push
or
add
and
enter
add
test
shl
lds
cmp
mov
xchg
or
add
int
xchg
pop
adc
shr
pop
lods
call
sti
cmp
cdq
popf
int3
stos
aas
in
sbb
add
outs
mov
nop
(bad)
cmps
jp
rol
and
sar
pop
(bad)
pop
pop
std
shl
in
popa
inc
in
jbe
aam
es
and
test
enter
arpl
(bad)
jmp
lods
ret
cmp
jp
cmps
cmp
xor
jns
or
(bad)
cdq
imul
addr16
cli
mov
and
icebp
pop
sbb
sbb
inc
pusha
push
test
push
fimul
cmps
cwde
jl
xor
lea
arpl
jo
aam
test
xor
mov
call
push
or
out
outs
pusha
xchg
js
inc
cmp
jge
je
mov
pop
adc
outs
icebp
ja
mov
jg
mov
or
jecxz
pop
and
(bad)
outs
cmps
loopne
inc
sbb
push
fisub
scas
retf
cmp
push
mov
retf
cmp
jae
std
cmp
outs
test
loope
ret
jge
sub
fsubr
or
nop
in
mov
mov
outs
jmp
sahf
ror
mov
jecxz
sub
add
pop
(bad)
shl
cmc
ins
xchg
cwde
inc
sbb
push
enter
ins
cmp
adc
inc
data16
or
jg
or
je
xor
nop
repz
in
js
sti
mov
xor
jmp
cwde
pop
mov
mov
add
repnz
int
mov
into
inc
inc
jle
fs
out
out
ins
ret
jne
gs
ss
xchg
push
das
frstor
inc
sar
xchg
jmp
popf
in
scas
mov
mov
outs
into
or
add
adc
inc
mov
jge
or
cmp
mov
inc
pxor
(bad)
sub
sbb
aam
mov
cmp
aam
sbb
sar
aam
out
inc
mov
pop
call
lahf
enter
in
les
xchg
xlat
out
pop
mov
std
pop
test
ins
aaa
mov
or
div
push
push
or
mov
fld
xchg
les
or
das
movs
push
mov
mov
cmps
inc
jne
dec
mov
cmp
push
(bad)
fwait
jmp
mov
aaa
sbb
call
(bad)
ja
mov
cmps
push
jo
rcl
pop
jbe
jge
imul
frstor
xor
fnstsw
dec
dec
mov
(bad)
push
push
fst
pop
in
sbb
aad
jo
or
jnp
xchg
mov
int
dec
ret
outs
xchg
add
nop
xchg
(bad)
stc
sub
push
push
clc
sti
(bad)
xchg
into
push
mov
retf
fisubr
lea
out
inc
std
dec
in
lahf
xor
jmp
inc
loope
fwait
mov
rcl
das
inc
test
and
cmp
out
mov
clc
dec
fwait
out
jmp
jbe
(bad)
je
loope
hlt
sub
dec
ficomp
xlat
das
pop
(bad)
inc
int3
lahf
adc
hlt
jmp
arpl
jne
scas
or
(bad)
xor
lea
or
sub
adc
pop
dec
dec
ins
into
push
fdivp
xchg
std
or
mov
push
in
in
sar
movs
shl
mov
fs
rol
mov
mov
shl
push
add
pop
xor
dec
xchg
bound
add
cwde
int
out
dec
imul
test
adc
retf
sahf
sub
fwait
mov
cli
adc
push
cmp
mov
push
sbb
js
icebp
aas
sub
push
popf
daa
mov
(bad)
clc
and
cmp
das
stc
or
push
mov
stc
jge
xchg
xor
mov
xor
add
pusha
movs
lods
call
test
into
in
clc
mov
push
mov
dec
xchg
xor
dec
pop
or
arpl
mov
enter
mov
sbb
pop
movs
mov
jnp
xor
dec
aam
jnp
pop
sahf
daa
fld
int
jno
sub
cmp
cmp
cmp
ret
dec
stos
loopne
lock
pop
push
shl
add
lock
cmp
sbb
movaps
push
popa
sbb
push
shl
ret
adc
push
cmp
pop
inc
mov
test
ja
shl
addr16
in
push
jbe
jecxz
dec
push
cmp
mov
pop
stc
mov
out
and
adc
dec
pusha
adc
dec
mov
sar
shl
int
popa
or
je
xor
pop
mov
xor
jmp
loop
mov
push
(bad)
stc
mov
mov
adc
mov
adc
shl
xor
nop
fwait
(bad)
pushf
xor
cmps
test
mov
dec
pop
in
and
cmp
sbb
jp
ficomp
xor
fsubr
push
add
(bad)
sahf
xchg
icebp
jp
lds
pusha
das
dec
lahf
and
int
push
cmp
xchg
out
test
mov
cmp
jecxz
leave
adc
out
pop
xor
out
shl
push
int
je
ret
aad
inc
sub
(bad)
mov
mov
loop
test
ffree
fcom
fcom
add
sbb
jnp
daa
and
dec
or
or
sbb
dec
ja
push
(bad)
mov
ret
sub
mov
dec
or
push
in
jns
movs
aam
mov
ins
jge
pop
jg
in
or
mov
and
sahf
jnp
adc
bound
cs
stos
aas
push
jbe
and
mov
loopne
adc
icebp
ror
jl
xor
cmp
or
or
push
xor
mov
mov
ret
cmp
icebp
push
dec
gs
leave
scas
sbb
mov
test
loopne
scas
pop
push
(bad)
fcomip
mov
(bad)
push
movs
scas
jnp
ret
iret
mov
inc
mov
ss
(bad)
xor
sbb
ja
add
fst
xchg
push
sahf
push
fisub
xchg
push
das
repz
inc
xchg
sbb
aad
mov
ins
aad
add
ins
xor
push
push
or
xlat
push
mov
lea
inc
sub
arpl
shl
and
xor
push
repz
pop
jl
and
call
xor
add
xlat
sar
fadd
(bad)
sub
stc
push
inc
outs
int
aas
pop
mov
popf
test
sub
je
aam
mov
sbb
inc
add
das
stos
cmp
shr
xchg
lods
out
cmp
loopne
push
and
push
aas
pop
outs
xor
das
mov
test
fs
fwait
add
cmp
sbb
pusha
jp
push
and
pop
dec
cs
lods
dec
add
jae
popa
and
fsubr
mov
xor
cdq
test
scas
xchg
imul
ficom
retf
push
sar
add
mov
sbb
fldenv
sub
push
cmp
gs
jo
leave
leave
add
sar
dec
gs
inc
push
add
xlat
or
jge
ret
jno
aad
shl
xchg
shr
pop
sti
icebp
in
push
push
mov
dec
cmps
fcom
jge
or
mov
or
(bad)
aam
dec
xchg
icebp
or
xor
inc
mov
jmp
mov
(bad)
push
sub
or
or
push
xor
push
push
hlt
xchg
jne
xor
shl
stos
push
jnp
xchg
aam
mov
(bad)
jge
xchg
pusha
out
(bad)
repnz
retf
push
sub
cmp
pop
jp
jns
not
adc
cmps
mov
mov
jl
mov
hlt
push
jmp
aad
mov
into
pop
sbb
stos
scas
sub
or
mov
inc
out
imul
jno
pop
add
sbb
inc
and
pushf
pop
fcmovb
adc
icebp
mov
fisub
les
inc
mov
sub
imul
lods
cmp
(bad)
cmps
div
mov
stos
test
(bad)
lock
and
xchg
stos
clc
aaa
cmp
xor
mov
push
mov
sub
loopne
ss
jo
cwde
fbld
out
cwde
hlt
push
loope
jmp
sub
inc
stos
rcr
inc
push
fcmovnbe
bound
jg
jo
outs
call
les
mov
adc
xchg
sub
pop
icebp
inc
sbb
int3
fdiv
lods
stc
mov
xor
fs
loop
mul
sub
imul
push
or
mov
cmc
or
jl
xchg
lods
fst
hlt
dec
dec
and
and
jae
dec
sbb
sbb
and
pop
jmp
daa
aas
adc
sub
outs
xchg
ret
sbb
adc
mov
jbe
sub
push
jmp
cmp
retf
cmc
aad
mov
iret
push
rol
int3
prefetch
inc
sub
iret
loope
out
into
in
popa
mov
movs
and
add
shr
addr16
(bad)
adc
es
cmp
(bad)
pushf
imul
cmp
cdq
into
cdq
xor
retf
xor
cmp
stc
inc
aam
mov
popa
pop
imul
ror
jp
cmp
jne
jnp
gs
xchg
sbb
mov
inc
adc
gs
imul
pop
loope
pop
push
jle
xchg
das
mov
push
cmc
push
popa
adc
ret
push
loopne
jle
bound
xchg
mov
leave
in
call
pop
jle
neg
in
fst
adc
lahf
fs
mov
pop
jae
fiadd
into
enter
fidivr
scas
jb
hlt
test
in
loop
xor
push
pop
aas
sub
rcr
ret
xchg
or
or
mov
ds
push
adc
jo
and
stc
popa
sub
scas
fwait
imul
js
mov
shr
lahf
jl
gs
(bad)
adc
jmp
mov
mov
mov
pop
xchg
mov
mov
sub
cmp
add
imul
jmp
pop
jns
in
lods
or
arpl
cmp
ja
and
xchg
lea
dec
adc
jo
outs
ficomp
add
test
cmps
inc
jg
call
adc
out
sub
pop
pop
push
push
(bad)
aad
fbld
jnp
loope
aaa
movs
mov
inc
push
push
pop
mov
mov
push
mov
lea
bound
inc
add
mov
sub
das
scas
cmps
pusha
inc
inc
cmp
xchg
mov
mov
(bad)
dec
xchg
popf
jmp
add
icebp
pop
mov
fisubr
xlat
jmp
sub
jge
sbb
lods
mov
loopne
mov
dec
mov
inc
ja
in
(bad)
lods
add
pushf
and
lods
imul
jmp
add
pop
imul
(bad)
test
or
arpl
dec
xlat
imul
movs
cmps
mov
pushf
pushf
add
retf
test
movs
retf
stos
bound
pop
add
idiv
mov
js
retf
(bad)
jge
jo
mov
jge
dec
enter
ret
push
xlat
int3
sbb
cwde
xor
into
pusha
and
push
xchg
out
outs
xchg
(bad)
(bad)
fimul
enter
out
mov
or
and
test
push
or
mov
jae
mov
fisubr
movs
mov
icebp
stos
dec
call
mov
mov
in
fwait
aas
(bad)
jp
xor
loop
aas
dec
push
xor
movs
imul
pop
xor
out
add
sub
(bad)
jo
or
xor
mov
sbb
les
shl
push
cmps
es
pushf
aam
int
mov
xchg
sbb
mov
cmp
pop
ret
jae
out
add
hlt
pop
push
cmp
retf
cmp
add
ja
xchg
loop
ins
xor
rcl
inc
js
ror
fsubr
cmps
mov
movs
ja
mov
jmp
shr
jno
movs
(bad)
push
loop
pop
push
mov
outs
pop
cli
mov
pop
call
scas
fisubr
mov
mov
sub
dec
out
lea
fild
leave
je
cmp
mov
rcr
jae
lahf
mov
mov
xchg
mov
mov
pop
jbe
in
mov
inc
pop
pop
mov
adc
dec
std
pop
xor
movs
push
pop
xchg
jb
sub
or
fs
xchg
js
loop
and
or
jno
push
mov
lods
mov
add
jmp
mov
(bad)
sub
sti
mov
xlat
rcl
mov
inc
iret
fs
or
cmp
sahf
inc
test
fist
inc
pop
xor
push
mov
push
movs
rol
inc
sub
fisttp
mov
xchg
inc
vpcmpgtb
sub
jns
push
adc
mov
inc
adc
cmp
das
inc
mov
hlt
dec
xchg
jge
add
out
sbb
xchg
push
xchg
xor
scas
mov
cmp
stos
ins
add
aaa
or
and
sbb
in
loope
retf
loopne
pop
popf
and
pop
jno
(bad)
or
jne
xor
xor
cld
and
popa
imul
ds
leave
pusha
sub
pushaw
(bad)
imul
pop
cmps
jbe
stc
cmps
add
push
and
push
(bad)
cmps
fwait
mov
add
jae
(bad)
iret
test
xor
pop
xchg
(bad)
push
into
mov
(bad)
retf
retf
inc
jae
fadd
xchg
les
rcl
xchg
mov
mov
adc
loope
daa
lock
fisttp
cmp
test
repz
int
call
outs
mov
xchg
gs
adc
push
pop
addr16
or
push
inc
popa
sub
or
cmp
(bad)
loope
cmps
push
xchg
mov
jl
int
ror
mov
fdivr
ins
xchg
cmp
sbb
jge
cmp
in
push
xor
pop
fst
sbb
mov
or
jo
das
dec
jmp
iret
cmc
or
cmp
inc
lods
cmps
adc
xor
test
sahf
lahf
in
stos
xchg
push
mov
fstp
pop
out
shr
inc
mov
push
and
test
add
jne
fiadd
addr16
push
mov
or
mov
jne
daa
lods
xor
(bad)
cli
push
dec
fmul
popa
fs
sbb
lods
fcom
mov
mov
sbb
add
push
add
(bad)
mov
xchg
adc
dec
daa
hlt
out
retf
sahf
not
jp
dec
pushf
fdivr
mov
adc
sets
push
fwait
aam
mov
rcr
or
jle
cmps
leave
cmp
adc
dec
cmp
pop
pop
dec
fisttp
jp
mov
sbb
jae
stos
cmp
jle
jp
into
lahf
gs
and
fdivr
in
mov
adc
push
stc
ja
inc
mov
xor
sub
jno
xchg
cmps
mov
cdq
movs
cmp
dec
or
psrlq
push
mov
or
out
pop
or
mov
and
rcr
add
adc
mov
cmp
push
es
ret
rcl
leave
push
mov
test
or
call
push
jmp
outs
lea
sub
push
pop
arpl
leave
out
jmp
cmp
outs
jo
cmp
or
sub
sub
call
enter
jno
add
xchg
(bad)
jmp
pop
popf
xchg
(bad)
mov
push
cmp
push
jecxz
sti
cld
sbb
out
pop
frstor
and
ins
repz
(bad)
iret
ds
ds
jg
pusha
lods
pop
mov
call
and
xchg
jge
xlat
xor
in
push
push
stc
push
out
xor
pop
sub
xchg
xor
mov
lock
pop
pop
pusha
sub
retf
mov
pop
pop
sti
gs
in
adc
aas
in
cmp
xchg
fst
imul
mov
imul
(bad)
xchg
or
test
dec
mov
adc
pusha
popf
xchg
pop
das
xchg
lahf
fisub
fadd
add
jge
xchg
inc
xchg
movs
scas
xchg
mov
fsubr
push
xchg
jmp
push
mov
test
ins
xchg
mov
loope
xchg
and
fcomp
fs
adc
jbe
out
je
rol
js
and
mov
call
adc
add
popf
icebp
mov
stos
bound
sub
sbb
test
clc
xchg
hlt
shl
lods
cmp
loope
es
into
ret
movs
jmp
jno
xchg
push
fwait
or
xchg
test
or
adc
mov
jae
imul
mov
cmp
cmp
scas
dec
push
stc
add
xchg
or
mov
mov
inc
in
pop
cld
sub
out
mov
push
xor
mov
ret
std
jp
sub
js
jae
(bad)
dec
push
div
pop
icebp
call
test
daa
cmc
scas
mov
pop
or
cmp
mov
lea
adc
imul
adc
stc
xchg
inc
es
xchg
stos
cmp
retf
jl
push
push
or
mov
(bad)
mov
bound
and
jns
std
and
sbb
push
add
mov
scas
xchg
or
(bad)
sub
ret
dec
sahf
(bad)
sbb
and
cmps
push
js
jl
int3
popf
enter
xchg
sub
movs
cli
ja
dec
fild
cmc
nop
fst
into
jno
pop
test
addr16
sbb
and
add
lods
jns
call
fnstcw
xchg
or
aas
ja
sahf
je
scas
aam
pop
and
lods
xlat
stc
cmp
imul
pop
clc
jg
jb
in
aaa
mov
jmp
and
pop
ins
sub
mov
(bad)
or
sub
pusha
adc
cs
dec
sbb
inc
loope
xor
jecxz
adc
jle
out
add
mov
jno
enter
mov
or
jg
aad
push
movs
jnp
fdiv
or
rcr
or
mov
cmc
xchg
xchg
cs
add
xor
daa
xchg
jo
retf
test
sahf
pusha
js
rcl
sti
mov
ja
fdiv
jae
mov
mov
mov
ins
pop
or
lock
cmp
mov
nop
imul
pop
or
(bad)
nop
mov
movs
stos
pushf
pop
vandnps
fnstenv
pop
out
mov
push
(bad)
(bad)
cmp
sbb
xchg
imul
xor
sbb
iret
inc
push
mov
int3
es
jb
jns
or
pop
pop
popa
iret
cmc
mov
cmp
pop
inc
cmp
adc
aas
or
iret
add
cmp
xor
xor
(bad)
cdq
fcmovnbe
aas
dec
mov
xor
iret
loope
jne
imul
add
cmps
sbb
xor
jecxz
je
push
xor
and
aam
mov
mov
call
mov
push
(bad)
scas
sub
lods
and
test
sbb
in
div
daa
aas
add
cwde
jle
imul
int3
pop
push
lea
ret
mov
inc
dec
xchg
pusha
jmp
fld
sahf
adc
in
neg
inc
dec
xchg
mov
retf
or
or
bound
in
sub
push
stos
mov
mov
retf
or
fmul
push
or
jo
mov
das
mov
mov
pusha
xlat
js
sti
pop
movs
sahf
ficomp
and
sbb
pop
xor
es
add
imul
fst
mov
mov
sbb
test
cmp
add
rol
test
adc
sbb
aad
test
xchg
mov
pop
div
jnp
stc
in
jne
movs
mov
(bad)
mov
(bad)
lea
out
into
or
test
mov
addr16
mov
jg
jo
mov
and
xor
or
mov
mov
xchg
jae
pop
push
sbb
push
test
out
in
and
iret
in
push
and
bound
mov
test
push
mov
cmp
mov
inc
mov
add
mov
ins
cli
test
les
adc
inc
das
xchg
arpl
fmul
ins
je
fsubr
lds
mov
mov
test
or
cs
sahf
(bad)
inc
ja
inc
adc
dec
xchg
adc
adc
push
in
std
(bad)
cld
mov
rol
push
ja
neg
cmc
xchg
mov
arpl
cmp
bound
xchg
inc
xor
sbb
sbb
cs
push
cmp
jb
sub
sub
out
lds
pop
loop
push
jno
cli
add
ss
push
pop
fst
add
push
add
popf
xlat
outs
sub
cmp
imul
movs
stos
pop
loopne
and
dec
push
mov
push
(bad)
xor
inc
or
pop
lock
dec
mov
repz
mov
aam
rcr
cmp
push
pop
cmps
adc
les
in
pop
stos
or
daa
adc
mov
mov
scas
jns
mov
adc
(bad)
rcr
iret
inc
xor
add
pop
inc
repz
ret
push
repz
inc
add
inc
mov
not
ret
outs
(bad)
mov
push
cdq
retf
js
scas
sub
xor
repz
add
push
add
push
xor
pop
or
ret
push
fldcw
fidiv
xchg
dec
push
and
jbe
fistp
rcl
scas
jp
stos
lods
sahf
mov
call
dec
fstp
add
sahf
arpl
jge
mov
cmp
pop
addr16
scas
(bad)
rcr
pop
adc
push
fsub
mov
xor
ret
dec
push
(bad)
(bad)
push
cmp
fcmovne
cmp
adc
or
mov
add
(bad)
leave
cmp
dec
push
lock
aas
xchg
xor
jne
push
iret
push
inc
jb
pushf
pop
outs
mov
hlt
(bad)
fsubr
mov
mov
and
mov
mov
xor
mov
jb
icebp
mov
neg
fsub
xor
in
adc
and
cmp
retf
lock
ret
je
pop
jo
(bad)
ja
(bad)
cld
add
and
jns
or
sbb
jnp
push
mov
shl
sub
push
jg
xchg
sti
mov
icebp
dec
cmp
shl
mov
sti
sub
gs
pushf
dec
jb
xchg
sbb
ror
cmps
xchg
sbb
aam
mov
adc
dec
mov
mov
(bad)
mov
add
or
sub
mov
jg
push
and
adc
sti
or
loope
vpand
(bad)
jbe
sahf
std
dec
sbb
pop
adc
in
imul
push
les
dec
das
sub
mov
mov
enter
repz
jb
out
stc
xchg
mov
imul
stos
push
(bad)
aam
cld
jp
imul
sub
test
es
lods
mov
jp
cmp
pop
in
xchg
mov
call
cli
inc
imul
mul
ins
lds
add
sbb
mov
(bad)
cwde
sub
jp
xor
pop
(bad)
mov
cmp
cmp
sbb
xor
push
lahf
push
add
jge
inc
adc
inc
loope
dec
retf
(bad)
cli
adc
inc
stos
in
push
jmp
xchg
pop
lods
xchg
jae
xchg
inc
sub
rol
push
jns
jecxz
test
in
neg
sbb
mov
hlt
fsub
sbb
popf
je
inc
inc
adc
lea
dec
mov
add
imul
lds
inc
or
lock
push
cld
xor
pop
add
pushf
enter
jne
sub
jb
pop
mov
pusha
mov
or
addr16
pop
mov
mov
lods
cmp
pop
aas
pop
add
loop
aam
sti
mov
xchg
inc
cdq
mov
dec
sbb
push
es
lea
add
mov
addr16
rol
add
fcomp
adc
mov
ds
fwait
mov
out
sbb
and
icebp
push
mov
(bad)
inc
jae
adc
loopne
outs
lea
cs
aas
push
ins
push
cli
mov
pop
mov
mov
aas
sub
std
pop
dec
scas
and
adc
pusha
adc
in
call
push
fisubr
ret
jle
push
arpl
in
les
cmp
addr16
mov
mov
xchg
int
in
inc
push
mov
mov
bound
and
(bad)
enter
je
scas
xor
mov
call
sti
clc
add
nop
rcl
hlt
sbb
cmp
rol
push
movs
jno
jb
mov
retf
fild
xchg
jg
icebp
fistp
pusha
pop
or
or
sbb
sub
nop
mov
add
push
xor
push
push
cmp
loop
and
pop
(bad)
out
outs
imul
ret
jmp
cs
push
mov
and
iret
inc
fs
fdivr
adc
test
pop
sahf
dec
test
clc
xor
inc
ins
inc
out
lods
xor
sub
retf
jnp
lahf
cmp
out
frstor
imul
test
outs
xor
mov
into
in
cmp
xchg
pop
cld
xchg
int3
sbb
mov
lods
cli
inc
add
pop
les
inc
xchg
in
adc
lock
enter
jne
adc
pop
inc
js
xchg
bound
sbb
(bad)
std
push
jb
es
scas
imul
mov
in
lahf
pop
call
mov
cmp
pop
or
mov
or
lea
mov
aaa
fwait
mov
test
jmp
xchg
push
xchg
dec
sub
(bad)
in
(bad)
stos
inc
mov
dec
push
inc
gs
pop
call
mov
dec
sbb
loop
mov
ds
and
test
imul
xchg
cmc
aad
dec
ja
inc
jle
inc
xchg
dec
xor
mov
aam
sub
pop
enter
cmps
gs
jl
scas
jo
or
pop
dec
mov
or
sbb
in
sub
sar
sub
xchg
inc
xor
into
in
dec
xchg
pushf
ret
push
cmp
mov
jb
movs
pop
test
cmp
retf
outs
jecxz
addr16
jnp
stos
jns
sub
xlat
loopne
inc
pop
iret
gs
push
jmp
pop
push
jle
sub
enter
rol
inc
movs
mov
and
inc
jmp
mov
(bad)
cmp
jge
aaa
repz
fnstcw
mov
popf
out
mov
inc
pop
stc
and
(bad)
repz
shl
and
(bad)
mov
xchg
shl
pop
push
shr
push
cmp
jle
(bad)
xchg
mov
sbb
lods
rcl
mov
adc
adc
aas
and
sbb
test
fcmovne
dec
jae
add
mov
jne
daa
jno
daa
add
movhps
daa
icebp
lds
mov
fld
in
in
movs
mov
mov
scas
or
test
loope
jmp
sub
mov
sub
cmps
std
int3
jo
jmp
xchg
cmc
sahf
add
adc
call
sub
rcl
jns
or
sub
mov
in
into
fisttp
mov
push
cmp
xchg
call
mov
pop
les
bound
or
mov
pop
mov
(bad)
mov
jmp
add
or
mov
jmp
cld
hlt
scas
jns
and
fsubr
loopne
cdq
repz
outs
pop
jle
mov
or
jno
dec
cmp
inc
xor
and
xor
or
pop
inc
push
push
dec
aaa
and
(bad)
adc
push
push
jp
push
call
dec
sub
repz
es
mov
ret
or
mov
xchg
jecxz
dec
cmps
pop
fs
lea
lock
call
retf
out
or
dec
xchg
mov
loope
pushf
mov
push
push
xor
mov
int3
in
mov
pop
ror
or
into
imul
scas
push
inc
mov
mov
xor
inc
int3
popa
test
xor
jns
dec
shl
loop
lods
mov
add
fistp
scas
and
icebp
push
je
div
mov
pop
push
retf
sub
mov
int3
mov
mov
repnz
pop
dec
out
cmps
loope
jo
lods
mov
stos
cmp
sti
add
add
out
sbb
fisttp
mov
ss
mov
xor
mul
mov
(bad)
or
cdq
ds
sub
xor
pop
mov
jmp
inc
jno
xor
jge
pop
adc
mov
(bad)
fidiv
dec
inc
inc
shr
inc
mov
sbb
cmps
pusha
mov
fdivr
jp
lds
or
mov
mov
jno
ins
push
push
pusha
mul
cmc
inc
nop
adc
inc
pop
or
xor
sub
mov
xor
cmps
cmp
jecxz
sub
adc
ds
inc
fucomp
sub
or
xlat
dec
xchg
lods
xlat
mov
mov
mov
sub
rcr
inc
lock
arpl
xchg
jle
mov
cmp
xor
mov
mov
push
push
cmp
ficomp
mov
or
cwde
imul
je
jmp
popa
xlat
mov
push
and
or
loopne
call
in
shr
add
into
inc
fldenv
or
mov
cmp
lods
inc
inc
neg
imul
lods
or
test
sbb
mov
fs
fmul
aad
dec
scas
sahf
pop
test
dec
inc
adc
gs
and
mov
pop
ret
sbb
and
js
sbb
add
add
retf
jcxz
lea
stos
pushf
push
mov
not
mov
icebp
ins
pop
add
pop
jle
cdq
cwde
jnp
mov
mov
repz
sti
push
outs
lahf
and
dec
int
and
je
movs
or
test
and
(bad)
mov
xchg
cmp
outs
or
push
div
pop
mov
int
mov
add
bound
in
jbe
xchg
add
pop
add
(bad)
daa
rcl
jp
mov
or
and
loop
pop
xchg
aaa
dec
test
dec
(bad)
or
and
aam
call
mov
pop
je
les
ins
stos
or
mov
in
cmps
aad
xchg
push
mov
fs
outs
in
pop
xor
push
sbb
push
cmp
pop
jmp
add
fstp
dec
jnp
jno
cmc
sbb
xchg
pop
mov
dec
pop
and
mov
inc
dec
fs
jp
sub
jns
xchg
mov
xchg
(bad)
lea
dec
or
rcl
int
loop
lds
adc
rcl
mov
xor
push
mov
and
fsub
adc
mov
and
sub
les
cli
inc
into
xchg
and
imul
push
std
cmp
je
aad
mov
mov
mov
clc
xor
push
jle
fwait
pushf
pop
fwait
cmps
mov
cdq
push
stos
and
inc
outs
jo
cmps
or
fwait
xchg
xchg
xor
les
add
xlat
int
xchg
in
(bad)
mov
xchg
or
hlt
fsub
movs
jp
test
xchg
cmp
(bad)
mov
ja
jno
sub
je
push
adc
adc
int
cwde
xchg
cmp
sbb
xlat
ins
dec
out
or
inc
jne
sar
sahf
idiv
mov
cdq
push
out
sub
pop
xchg
ins
push
scas
cs
push
or
sahf
mov
push
dec
inc
and
inc
imul
mov
cmc
movs
mov
aad
faddp
jg
xor
mov
and
inc
sar
aam
mov
out
loopne
and
xchg
out
fild
xchg
and
int
aaa
(bad)
imul
sbb
inc
retf
mov
mov
pop
xchg
push
pop
aam
add
and
cmp
repz
cli
jmp
adc
xchg
or
adc
bound
dec
dec
jl
icebp
inc
icebp
cmp
inc
xchg
repnz
dec
mov
jne
inc
loope
cs
mov
cwde
and
xor
push
pusha
retf
mov
mov
imul
sub
jmp
fldcw
cmp
inc
ja
mov
pop
xor
data16
sub
dec
aaa
into
pop
jmp
sbb
push
retf
gs
xchg
leave
aas
outs
sbb
mov
inc
repnz
mov
push
ins
or
adc
inc
data16
data16
sub
rol
xor
mov
sub
neg
arpl
ret
xchg
inc
pop
retf
movs
and
pop
jae
das
fwait
xlat
mov
sub
inc
jge
adc
pop
xchg
or
cld
mov
add
inc
pusha
sub
int3
dec
(bad)
and
sbb
mul
xor
xlat
push
(bad)
stc
jnp
jecxz
inc
aam
fucom
aaa
sbb
call
or
push
fst
out
push
cmc
arpl
and
or
lock
(bad)
mov
push
dec
and
fs
ins
inc
inc
test
sar
test
or
jae
not
mov
and
dec
add
adc
xor
repz
je
sub
add
cld
int3
cld
inc
hlt
sahf
push
mov
xchg
or
xor
nop
sub
in
mov
repz
inc
xchg
pop
pop
inc
or
js
or
aad
xchg
das
in
jbe
sub
xchg
or
adc
test
dec
adc
push
pop
push
pop
adc
cmp
add
dec
dec
dec
jp
jne
or
jb
leave
cdq
xchg
cmps
(bad)
dec
sub
mov
pop
pop
rol
or
xchg
rcl
retf
stc
or
add
(bad)
sub
outs
xchg
test
pop
or
adc
ret
cmp
mov
sub
sub
sti
mov
mov
push
mov
mov
mov
ret
jne
enter
in
xchg
push
js
gs
out
mov
dec
stc
lahf
or
add
cmps
push
jno
add
push
movs
cdq
popa
stc
sbb
dec
fisttp
xor
sub
mov
scas
rol
mov
add
nop
push
lock
jecxz
and
mov
push
cmp
mov
push
sbb
and
mov
stc
jo
push
ror
jae
je
in
dec
jbe
dec
and
sub
mov
sbb
repz
jle
aam
jp
mov
xor
adc
xchg
fist
cmp
push
ret
das
cmp
rcl
mov
jp
(bad)
cmc
test
sahf
call
inc
scas
(bad)
adc
and
jl
jmp
push
loopne
adc
pop
inc
jg
xor
inc
push
pushf
scas
xlat
pop
sub
bound
jo
and
in
lock
cs
or
cli
push
sub
jp
cmp
jnp
ror
rcl
cmp
addr16
ins
cld
dec
cmp
pop
adc
cmp
pop
pop
les
call
repnz
sbb
test
sahf
retf
xor
sahf
(bad)
add
sub
lods
sbb
in
add
movs
sbb
xor
push
or
jnp
push
sbb
leave
xchg
jno
movs
or
sahf
movs
xor
cmp
in
clc
xchg
and
rcr
inc
rcl
js
mov
mov
inc
in
cmps
adc
sbb
xchg
push
in
in
out
or
inc
sbb
pop
xor
adc
pop
cmp
jle
mov
push
jp
push
mov
shr
sti
pop
pop
mov
aam
in
out
rol
push
leave
dec
xor
xor
icebp
fisub
daa
jp
mov
test
data16
dec
pop
push
mov
cmp
cmc
sub
xchg
clc
shl
(bad)
stc
pop
sbb
push
lea
jmp
jge
sub
add
cmp
or
mov
inc
pop
add
hlt
jge
enter
add
pop
jnp
fisubr
push
inc
xchg
push
lock
lock
int3
inc
mov
dec
jnp
lahf
sbb
adc
fnstcw
neg
push
and
jp
mov
cmp
aas
push
push
fstp
push
mov
data16
add
out
push
mov
sub
ins
lahf
mov
movs
retf
sbb
push
test
in
inc
jle
inc
sub
or
or
mov
mov
pop
fld
xchg
rcr
mov
sbb
and
inc
scas
in
inc
dec
pop
inc
data16
jo
loopne
or
mov
test
icebp
js
test
iret
mov
into
jo
sub
push
add
or
enter
rcr
int
rol
addr16
push
and
push
cld
mov
xor
int
inc
xor
push
cmp
sbb
pusha
lods
and
ret
mov
movs
pop
bound
rcr
pop
loope
fadd
sub
scas
rdtsc
test
dec
aam
or
cmp
push
pop
test
loope
stos
pop
aas
pop
call
fmul
pop
pop
dec
pop
jo
push
js
jmp
stos
out
push
ins
dec
adc
cwde
stc
pop
das
lea
mov
mov
pushf
test
xchg
scas
stc
add
adc
cmp
push
adc
repz
dec
push
(bad)
sti
mov
out
call
push
loope
(bad)
ficom
jmp
mov
ror
jne
leave
cmp
jno
cmps
jae
xchg
aaa
xlat
dec
cmp
sub
sbb
pop
jmp
dec
enter
mov
or
ret
push
inc
(bad)
test
stos
push
out
or
aaa
test
push
push
scas
push
stos
fwait
mov
mov
outs
clc
addr16
loopne
push
stos
pop
int
pop
clc
(bad)
jmp
stos
xchg
xchg
lea
pop
test
push
int
std
dec
fcomp
mov
ins
addr16
mov
std
fisttp
scas
xchg
and
and
pop
loope
inc
xchg
xor
in
sub
sar
push
ins
inc
xor
or
gs
dec
jmp
mov
in
daa
enter
scas
adc
jg
leave
outs
add
cmps
jmp
lock
mov
adc
int
popf
mov
mov
and
mov
jb
ror
lods
in
inc
ins
stos
jmp
add
mov
in
add
jae
mov
shl
fstp
repz
sbb
mov
pusha
rcl
(bad)
pop
mov
add
xor
popa
push
sbb
cmp
sub
cmc
test
push
sub
mov
xchg
jecxz
mov
lods
inc
pop
adc
sti
push
pop
(bad)
pusha
test
pop
push
dec
outs
push
and
or
add
mov
scas
lds
sbb
lahf
pusha
xor
pop
test
mov
mov
sub
stc
xor
mov
(bad)
lds
pop
sbb
or
pop
and
adc
inc
add
mov
retf
idiv
mov
out
inc
lock
daa
push
shr
xor
loop
lods
out
out
jecxz
fdivrp
mov
cmp
cmp
xchg
add
pop
arpl
sbb
inc
ins
loopne
jecxz
mov
push
cwde
add
idiv
adc
sar
or
nop
inc
mov
mov
dec
adc
mov
jl
xchg
xor
sbb
jbe
outs
test
and
lods
hlt
sub
push
cmps
and
push
lods
xchg
movs
scas
or
sub
mov
daa
mov
pop
std
aas
lock
or
adc
outs
pop
je
inc
fld
and
loopne
xchg
and
push
outs
jae
je
push
and
mov
aas
pop
cmp
addr16
test
add
(bad)
or
xchg
outs
cmp
inc
js
push
mov
mov
xor
imul
and
sub
mov
neg
in
mov
call
(bad)
mov
inc
dec
cmp
mov
add
lea
lods
mov
mov
add
xchg
mov
ja
xchg
adc
in
mov
dec
push
xchg
cmp
inc
jle
mov
std
jge
daa
or
cmp
pop
pop
xor
jp
mov
and
jb
adc
retf
inc
fst
push
(bad)
pop
mov
mov
adc
fs
ror
ds
xor
add
sub
xchg
push
in
jge
aaa
or
into
and
mov
jae
jo
ret
in
jae
sub
stos
or
ins
test
clc
fsubp
mov
outs
test
sahf
les
push
shl
ja
retf
(bad)
inc
test
mov
jl
jle
pop
nop
jl
lea
pop
push
push
lods
inc
jnp
call
cli
ret
imul
inc
sbb
and
lods
push
cmp
stc
and
inc
cdq
adc
push
mov
dec
es
fstp
add
pushf
dec
call
cmp
jle
inc
jbe
dec
jmp
call
sahf
sahf
pop
xor
jne
add
or
jg
retf
push
mov
ja
into
xchg
and
loopne
adc
inc
out
mov
xchg
xor
add
rcl
push
neg
pop
mov
pushf
cmp
and
mov
in
in
dec
into
dec
sbb
cs
pop
ins
jno
test
in
push
cld
imul
call
sti
jmp
push
mov
cdq
les
adc
pop
xor
cs
xchg
sar
cmc
dec
xchg
xchg
outs
ret
cmp
mov
int
ss
sbb
mov
stos
retf
movs
and
js
sbb
mov
push
add
iret
xchg
adc
fbld
fxch
enter
fisttp
std
dec
jg
add
and
sbb
mov
xor
int3
std
(bad)
sbb
test
add
cdq
add
push
mov
ror
fst
repz
push
xchg
outs
jle
leave
xor
xlat
pop
pop
push
stc
push
sbb
jg
popf
cmps
jb
xor
pop
ror
dec
mov
xchg
bnd
xchg
(bad)
movs
mov
leave
or
cmp
sbb
cmp
xchg
cwde
jge
dec
leave
cmp
jb
sub
xor
and
aas
(bad)
movs
sub
hlt
pop
movs
fdivrp
dec
cmovp
test
hlt
jo
jle
cmp
or
retf
pushf
push
addps
lods
aas
cmps
pop
push
mov
stc
jg
icebp
add
sbb
adc
jb
jg
xchg
sub
out
sbb
not
cwde
add
test
into
adc
das
das
add
sub
sbb
les
scas
jb
loop
sbb
inc
sahf
shl
bound
lea
xor
jmp
inc
(bad)
lods
cmc
or
int
mov
jge
adc
xchg
adc
push
das
inc
in
call
add
icebp
sbb
jp
or
inc
mov
ror
mov
jns
mov
pop
pop
jmp
cs
push
mov
mov
cdq
push
inc
retf
sti
es
hlt
push
sub
push
jmp
daa
or
mov
ja
out
or
inc
paddsb
fadd
pop
xchg
int
push
xchg
dec
lock
inc
sti
std
test
and
dec
jmp
fbstp
js
jae
adc
cmp
push
cmp
jg
iret
retf
pop
lods
inc
push
and
sbb
push
xchg
sub
cmp
xchg
lds
sub
pop
std
jnp
(bad)
mov
inc
cmp
loop
dec
pop
adc
shr
cli
sub
pop
imul
daa
sub
push
jns
cmps
call
push
pop
mov
xchg
dec
mov
ins
idiv
cmps
fbld
and
cmp
inc
sub
pop
stos
les
jns
repnz
movs
and
cmps
or
addr16
loop
leave
cwde
test
pop
xor
int3
in
mul
ret
fcom
push
and
stc
mov
sbb
mov
sub
scas
push
in
mov
or
mov
(bad)
rcl
rol
mov
into
xor
inc
xor
xor
aad
push
push
jnp
dec
std
imul
or
lds
jecxz
inc
xor
jl
in
sbb
outs
push
jg
sbb
fbstp
cld
mov
xor
pop
pop
pop
jmp
and
inc
jecxz
pop
imul
vpsubsw
mul
sub
xchg
mov
sub
in
mul
xor
call
jl
inc
dec
mov
int3
into
jle
ret
call
(bad)
jae
ins
xor
pop
ss
jae
fld
jle
addr16
mov
rcl
test
gs
imul
dec
fwait
jne
push
cmp
pop
adc
and
mov
adc
push
mov
bound
adc
jp
pop
movs
fisttp
out
push
inc
repz
cmp
cli
adc
lahf
mov
xchg
(bad)
fdivr
call
imul
xor
loop
add
pop
fadd
int3
leave
repnz
rcr
push
popa
pop
pop
sahf
jmp
enter
hlt
push
fisttp
(bad)
mov
retf
repnz
cmp
or
inc
stos
jo
dec
lods
mov
stos
sub
mov
in
imul
stos
gs
rcl
and
push
std
cmps
sbb
and
adc
pop
ins
test
shl
out
xchg
mov
xor
jmp
xor
or
and
mov
xor
int
mov
dec
mov
push
clc
sub
xchg
addr16
push
sub
jo
xchg
js
test
stos
xchg
repz
aam
clc
icebp
pop
inc
mov
ret
and
sub
cli
jno
xchg
or
mov
inc
adc
mov
or
adc
inc
sub
xor
jo
mov
sahf
retf
sub
call
nop
bound
ins
dec
fwait
mov
popf
and
es
or
xor
lahf
(bad)
push
jecxz
pop
lods
pop
lea
cmp
xor
repnz
test
cdq
sti
fsub
pop
pop
stc
xchg
rcr
jle
xchg
(bad)
mov
push
sbb
sar
retf
inc
xor
inc
pop
mov
sbb
sbb
mov
fisubr
mov
call
mov
or
jo
fbld
push
xor
xor
test
test
loope
sub
xchg
push
retf
fcom
aad
mov
push
or
push
xlat
ins
mov
xchg
dec
imul
ror
xor
mov
lea
aaa
xor
enter
inc
call
fimul
xor
push
lds
retf
pop
push
sbb
es
jb
in
gs
sub
arpl
xor
add
inc
sti
push
cmp
in
xchg
inc
dec
mov
inc
push
loopne
dec
mov
idiv
xchg
shr
mov
retf
jne
dec
bound
stos
icebp
(bad)
in
or
dec
test
rcl
mov
jmp
mov
fadd
and
shr
int
test
or
mov
arpl
js
mov
jp
(bad)
pop
dec
cmp
adc
dec
mov
mov
add
test
sti
cmp
or
jl
mov
lahf
sbb
out
cmp
leave
test
shl
aas
cmp
mov
jp
(bad)
bound
fidiv
shr
ds
arpl
push
mov
popf
stos
in
loop
and
ja
dec
push
sub
call
push
outs
add
xor
jmp
into
pushf
sbb
jbe
push
sbb
jmp
pushf
sbb
or
cmp
mov
dec
scas
stos
mov
(bad)
push
lock
popf
push
xchg
xchg
lods
inc
jo
repz
add
mov
icebp
mov
in
imul
jns
mov
or
pop
les
test
xchg
inc
enter
outs
jae
sub
cwde
inc
sbb
mov
mov
cmp
in
aaa
or
jmp
mov
movs
xchg
ret
mov
in
popf
add
out
ficomp
xor
xlat
mov
jp
mov
js
sahf
aaa
dec
jne
aam
and
cmps
stos
and
test
fnstcw
cmc
dec
and
sbb
jne
pop
out
pop
popa
daa
(bad)
rcl
jge
icebp
and
sub
ds
fild
push
sbb
add
dec
xchg
push
addr16
pop
pusha
sbb
push
cli
arpl
mov
test
rol
mov
out
add
inc
imul
test
dec
sbb
aaa
push
ss
out
mov
jns
bound
daa
mov
pop
cmp
pop
gs
pop
adc
push
stos
jle
scas
xor
adc
lds
call
dec
test
inc
sub
pusha
fs
pop
test
push
inc
jnp
sti
mov
ds
movs
push
clc
stc
lods
add
mov
mov
aas
pop
mov
test
leave
repnz
call
loopne
mov
mov
inc
mov
dec
pop
xor
push
mov
sub
pop
cmc
fwait
aaa
(bad)
push
add
and
int
es
jns
or
nop
iret
std
dec
imul
add
fmul
inc
xor
clc
in
push
push
shl
jne
sub
xor
(bad)
outs
fucom
jmp
push
jmp
rcr
in
ret
int3
enter
xor
add
clc
cmc
test
mov
jl
(bad)
xchg
in
das
repz
shr
inc
push
cwde
repnz
mov
or
and
add
push
nop
inc
or
push
sbb
inc
fcom
add
enter
jns
shl
ret
rol
loopne
dec
mov
mov
out
enter
fisttp
stos
ds
dec
dec
push
xchg
aas
test
(bad)
int3
in
arpl
xor
es
shl
inc
je
mul
dec
adc
sahf
sub
lock
inc
mov
and
ss
(bad)
push
ins
sub
jmp
stos
mov
mov
inc
inc
xor
cmp
cmps
loop
(bad)
fist
xor
inc
leave
std
fmul
test
loopne
in
lea
sbb
jp
inc
mov
loope
dec
cmc
cwde
mov
arpl
mov
dec
frstor
in
test
movs
icebp
popa
icebp
mov
repnz
sub
or
daa
je
iret
mov
enter
or
in
and
repnz
pop
xchg
into
rcr
cld
push
mov
push
mov
(bad)
push
std
mov
je
or
loope
push
test
loopne
cwde
jo
jae
jb
fsub
cmp
mov
inc
call
inc
mov
aam
or
(bad)
push
scas
sbb
inc
and
stos
pop
mov
in
aad
pop
inc
int
mov
jl
int
std
ds
mov
inc
ror
sbb
popf
outs
fcom
mov
jecxz
cmc
xor
xor
mov
cdq
(bad)
int3
jbe
dec
pop
fsub
in
test
add
movs
ja
imul
sbb
ret
fstp
or
sub
xor
leave
pop
inc
cmp
(bad)
fadd
adc
push
xchg
fwait
inc
aad
mov
xchg
sbb
xchg
or
adc
stos
test
retf
inc
imul
movs
pop
test
in
cmp
fldenv
fisub
push
fimul
mov
dec
js
int
scas
mov
or
jne
push
scas
sbb
cmps
stos
and
shr
sbb
xchg
jle
sbb
xchg
idiv
aas
xchg
or
rcr
mov
test
add
adc
test
push
addr16
ins
mov
xchg
xlat
not
in
jmp
or
ins
scas
and
push
or
dec
sbb
cmp
mov
mov
push
dec
rcl
stos
rcr
push
call
adc
movs
push
retf
fidiv
rcr
mov
mov
(bad)
call
xorps
inc
or
iret
stos
(bad)
jecxz
push
push
inc
mov
dec
inc
fistp
pop
push
jne
mov
pop
jae
daa
jno
sub
xchg
push
shl
(bad)
adc
retf
pop
fsubp
mov
rol
push
sub
or
shl
data16
fild
and
xchg
xor
ret
stos
imul
sbb
sbb
rcpps
dec
popf
test
jge
rcr
jo
sbb
(bad)
mov
aas
neg
inc
fs
mov
inc
adc
mov
push
xor
xor
add
jle
pop
pop
mov
out
cmp
push
xchg
gs
in
lods
int
loop
push
mov
jo
fucom
xlat
test
test
cmp
pop
movs
push
xchg
mov
data16
mov
test
sti
nop
iret
and
ror
fs
imul
jle
dec
stos
or
jecxz
movs
inc
or
pop
or
mov
cmp
xchg
inc
xchg
mov
or
adc
cmp
sub
imul
out
test
push
clc
rol
xchg
aad
cli
push
sub
cmp
cmc
(bad)
scas
add
imul
rol
in
outs
push
adc
cmp
imul
out
movs
adc
push
add
js
pop
xor
lahf
sub
cld
jo
test
clc
stc
or
ja
pop
dec
lock
pushf
push
sbb
fwait
test
mov
in
or
jecxz
(bad)
add
mov
aam
and
int3
dec
test
dec
sub
nop
adc
xchg
ss
fist
dec
(bad)
enter
lds
jp
inc
add
push
std
dec
stc
mov
imul
test
data16
add
xor
retw
sbb
clc
idiv
rol
in
fs
outs
mov
mov
jge
out
pop
idiv
test
or
sar
jnp
retf
xor
cmps
ins
ja
mov
sub
(bad)
out
mov
outs
pushf
or
lahf
pop
loopne
and
out
sti
jns
or
lahf
rol
mov
cmps
pop
dec
sub
jmp
inc
adc
shr
cmp
or
add
arpl
sbb
daa
(bad)
adc
cld
jle
scas
out
ja
cdq
dec
iret
and
lods
mov
cmp
ss
fild
sub
jnp
stos
out
test
push
test
cmps
int
sbb
fwait
nop
mov
mov
jo
aad
lea
xor
sbb
ss
or
retf
mov
push
scas
fcomp
popf
mov
xor
mov
in
pop
inc
adc
cli
sbb
leave
pop
mov
out
ins
cs
out
mov
loope
inc
or
dec
aam
pushf
jl
shr
call
cld
and
inc
push
movs
outs
fcmove
inc
push
mov
outs
imul
jo
lds
inc
pop
mov
sub
dec
mov
ror
hlt
and
test
sub
call
sub
lea
or
int3
pop
adc
out
pop
pusha
adc
xchg
inc
push
mov
and
mov
ss
jp
add
retf
pop
(bad)
fyl2x
loop
es
fistp
add
stos
arpl
ret
mov
ins
or
or
add
lods
dec
dec
xchg
add
xchg
push
or
inc
xchg
cmp
clc
fbstp
mov
pusha
fs
mov
fadd
xchg
shr
xor
test
mov
jl
mov
and
jg
jle
add
(bad)
cmp
xchg
and
(bad)
jp
cmc
bound
into
lods
out
das
dec
jno
fsub
movs
int3
dec
adc
sbb
add
arpl
aaa
out
mov
or
sub
push
mov
xchg
leave
mov
test
pop
sub
nop
inc
inc
add
sbb
dec
mov
sbb
lea
popa
shl
dec
test
inc
xchg
mov
push
and
mov
stos
ins
xor
xor
mov
pop
mov
sub
dec
jecxz
mov
sub
adc
rcr
inc
xlat
call
mov
dec
das
int3
aas
xor
mov
or
jno
stc
pop
les
xlat
dec
adc
test
and
gs
mov
lahf
xor
test
jg
fisubr
out
inc
pop
push
jg
jmp
mov
call
mov
lahf
imul
stos
push
sub
arpl
scas
test
jecxz
fsubr
aam
mov
sub
jbe
cs
dec
or
leave
inc
inc
sub
adc
bound
xor
clc
(bad)
retf
scas
pop
push
xor
outs
fwait
xlat
dec
scas
sub
stos
mov
inc
dec
push
jp
cmp
mov
pop
add
jb
(bad)
sub
push
add
xor
fist
sbb
mov
lahf
xor
adc
dec
neg
shl
lods
fs
jmp
cmps
std
mov
mov
pop
cmc
sbb
stos
jmp
mov
xchg
(bad)
adc
lock
mov
arpl
mov
pushf
push
mov
jmp
mov
lods
inc
lock
inc
jecxz
sti
jge
mov
and
loope
inc
jb
les
or
cli
dec
repnz
add
xor
(bad)
xor
pop
inc
xchg
mov
fstp
pop
(bad)
loope
xchg
int3
or
call
add
arpl
push
sub
push
cmp
and
repnz
enter
call
mov
aaa
or
out
xor
clc
xchg
sub
test
add
(bad)
jo
push
jnp
sti
mov
fwait
out
mov
inc
adc
adc
mov
jne
repz
sub
popa
test
xchg
xor
xor
into
cmp
pop
or
bound
(bad)
xor
(bad)
or
push
lods
shl
scas
xor
ja
cmc
call
add
add
cmps
aam
mov
pop
sub
lods
pop
xor
cmps
mov
or
sub
fistp
cs
push
ret
and
iret
(bad)
mov
jl
js
ds
pop
cmc
mov
js
icebp
(bad)
adc
nop
aas
sbb
xchg
xor
inc
sbb
xchg
or
adc
push
dec
and
xchg
ss
repz
mov
push
movs
mov
mov
icebp
jl
or
pop
loope
mov
mov
xchg
pop
mov
idiv
(bad)
or
pop
les
push
pop
jnp
xchg
imul
sbb
push
jge
loope
xlat
fidivr
xchg
push
push
mov
or
(bad)
jnp
mov
sti
sbb
mov
adc
fnstenv
adc
push
pop
push
ja
fist
mov
dec
adc
dec
ret
clc
test
or
push
lock
in
call
sbb
inc
or
pop
mov
mov
jbe
sub
aas
out
and
mov
jno
and
test
cmps
cld
inc
cmp
xor
call
push
push
xchg
fnstenv
inc
aad
rcr
cdq
xor
into
dec
cmps
call
adc
mov
ret
mov
mov
add
ins
lods
out
push
mov
cmp
fwait
bnd
and
mov
or
mov
icebp
int
nop
fist
rcr
xor
mov
xchg
std
mov
ficomp
aad
jmp
mov
test
pop
jle
lahf
faddp
fadd
lock
rcr
out
repz
push
in
in
stos
ins
int
sbb
mov
hlt
loope
into
cmp
ror
call
mov
not
hlt
or
xchg
cwde
mov
xchg
mov
je
xor
xchg
push
pop
cmp
retf
aaa
pop
pop
in
jge
mov
test
xchg
jle
cmc
sti
jmp
arpl
or
pop
push
sub
sub
cdq
cwde
faddp
dec
ja
lahf
mov
icebp
stos
mov
xor
adc
adc
clc
nop
xchg
fdivr
push
out
jle
jbe
idiv
aad
or
adc
jg
loopne
fwait
adc
sahf
pop
cmps
pop
out
sbb
shr
hlt
sub
mov
iret
or
aam
or
mov
inc
stc
pop
sbb
mov
sub
add
adc
in
pusha
ret
or
rcr
adc
xor
stos
into
bound
xchg
xor
cdq
sub
pop
popf
sbb
or
out
enter
pop
out
(bad)
fxch
pop
pop
aam
add
mov
dec
les
mov
test
jmp
mov
(bad)
xchg
xlat
push
fbstp
ins
jo
pop
test
xchg
je
aam
loop
xor
mov
(bad)
add
imul
fld
ret
sbb
popf
jb
mov
sub
scas
stos
fiadd
cmp
aaa
xor
mov
pop
in
sbb
int3
popa
or
inc
out
fdivr
mov
rcr
or
(bad)
out
xor
mov
movs
(bad)
mov
mov
pop
jl
add
inc
cmp
mov
aad
mov
inc
pusha
fild
retf
adc
add
les
out
dec
push
iret
stc
mov
jae
mov
lahf
mov
jge
int
fisub
movs
cmp
cmp
pop
cmp
call
jbe
ret
in
and
adc
das
add
mov
shl
sbb
xor
add
pop
pop
jnp
inc
dec
jp
enter
mov
aad
xor
addr16
cdq
cmps
dec
sbb
push
cld
xchg
icebp
adc
cmps
mov
call
adc
mov
mov
or
loope
and
sbb
pop
sub
push
mov
xlat
adc
mov
mov
push
out
sahf
test
and
push
inc
gs
or
adc
dec
inc
adc
mov
push
mov
and
stos
pop
bound
dec
lods
mov
xor
cmps
daa
inc
sbb
lahf
mov
in
sub
sub
push
popa
movs
(bad)
iret
or
dec
add
pop
data16
ds
sub
scas
(bad)
mov
leave
in
xor
stc
ror
jne
in
xchg
push
outs
aaa
or
imul
and
test
ins
fnstcw
out
cld
push
std
jae
jno
rol
bnd
jg
xor
xlat
arpl
fisub
movs
std
lock
mov
jg
test
lahf
mov
out
fild
cmp
das
sbb
sbb
ret
pop
(bad)
cmps
mov
test
mov
dec
mov
cmps
add
dec
out
int3
test
daa
js
mov
nop
xor
mov
mov
pop
push
sbb
mov
(bad)
stos
test
cmp
cli
add
mov
push
(bad)
push
aas
enter
stc
ret
popa
mov
pop
push
jns
push
inc
mov
push
inc
pop
rcl
pop
cmp
das
popa
repz
mov
lods
out
call
jb
inc
and
sahf
mov
push
pop
sub
adc
dec
pop
arpl
nop
pop
int3
inc
or
pop
xchg
cli
fld
hlt
lea
mov
out
add
(bad)
sbb
xchg
cwde
cs
fwait
jl
mul
sub
mov
test
ret
xor
sub
es
push
pop
nop
push
loopne
cs
add
lock
das
ss
mov
xor
out
shl
sub
push
sub
inc
add
outs
repz
cdq
mov
sbb
neg
fs
icebp
inc
sahf
in
jno
push
test
or
cmp
inc
xor
dec
push
jnp
retf
fisttp
ret
xchg
push
sub
or
push
retf
call
in
mov
cmps
cmps
jne
pop
dec
or
call
mov
lods
xlat
xchg
jmp
and
xchg
xor
stos
cmp
out
stos
test
sbb
pop
jnp
popf
xor
icebp
mov
pop
scas
sbb
pushf
mov
jo
test
idiv
adc
pop
les
pop
dec
dec
out
and
repnz
inc
mov
in
retf
push
icebp
cli
sbb
sub
out
(bad)
imul
enter
(bad)
fmul
cmp
test
pop
sbb
jl
outs
xor
push
in
pop
push
xlat
jecxz
or
ret
mov
fs
popa
adc
inc
xchg
ss
mov
clc
pop
mov
fs
dec
or
mov
clc
aam
jo
mov
dec
fild
jae
aaa
ret
les
pop
aad
inc
cmp
push
sar
and
add
and
ins
ins
jno
and
inc
mov
retf
in
mov
shl
iret
in
hlt
dec
popa
xor
das
add
mov
fnstsw
lock
mov
mov
fst
and
add
int
add
jb
xchg
clc
and
xor
rcr
inc
cld
paddsw
mov
mov
sub
cwde
mov
retf
shl
loop
add
mov
xor
fs
adc
not
pop
jge
lock
push
jmp
push
push
shr
dec
adc
cmp
shl
pop
jmp
retf
(bad)
xchg
ja
call
cmp
(bad)
sub
call
xchg
int
and
sbb
mov
test
pop
mov
sub
cli
aas
clc
mov
in
ja
and
popf
jg
ja
mov
cmps
adc
int3
int3
and
mov
fldcw
jb
cmp
pop
fcom
add
or
xchg
ins
xchg
pop
adc
je
cmp
setae
outs
mov
fadd
es
out
cmp
aad
dec
sub
add
dec
fcomp
out
mov
xchg
fstp
xchg
or
mov
stos
dec
out
(bad)
ret
mov
ds
dec
stos
ds
nop
mov
cmp
push
mov
cmp
xchg
adc
loope
jmp
push
xchg
push
sbb
cmp
into
push
and
fstp
sbb
or
sbb
iret
mov
and
sahf
xchg
sub
ret
xchg
lahf
jl
setbe
stos
fisub
les
fisub
stc
punpcklbw
sbb
mov
adc
or
jle
pop
or
sbb
ds
fsubr
jp
psubw
fldenv
les
(bad)
imul
fild
retf
jns
add
inc
ins
hlt
sar
sbb
and
int
adc
inc
mov
sub
add
ja
mov
into
lds
call
push
stos
iret
xchg
icebp
inc
jp
loopne
fild
sub
add
jg
loopne
push
sub
inc
out
jae
daa
enter
xor
fwait
aas
repz
mov
cli
xor
pop
or
pop
xchg
cmp
lods
repz
xor
push
rcr
add
sub
inc
xor
lahf
(bad)
shl
das
sbb
std
sub
out
cmp
cs
xchg
push
xor
mov
ficomp
fisub
or
jo
or
rol
mov
aas
into
mov
cmp
push
aaa
or
xchg
sub
push
sub
mov
(bad)
push
xor
(bad)
shl
iret
add
and
sbb
xor
cmp
mov
xor
in
sbb
xchg
cmp
in
jmp
jecxz
fld
xchg
hlt
pop
sbb
fs
inc
aam
loopne
mov
(bad)
out
adc
push
cli
or
pcmpgtb
adc
idiv
lds
into
cmp
cld
xchg
adc
xor
std
add
xlat
mov
ds
popf
retf
daa
cmc
inc
push
(bad)
and
fmul
cwde
dec
push
cmp
xchg
push
push
dec
lock
xor
inc
retf
and
sbb
inc
aas
loop
into
inc
jmp
scas
pop
out
rcpps
inc
pushf
aaa
mov
cmc
inc
push
lods
xchg
jl
jg
xchg
iret
xchg
dec
mov
dec
scas
and
test
add
repz
jnp
xor
cmp
add
das
loopne
pop
mov
fs
std
xor
(bad)
mov
mov
push
mov
cdq
fistp
mov
sbb
push
mov
adc
sbb
push
mov
inc
push
inc
repz
mov
sub
out
mov
add
jne
xor
ins
shr
mov
jmp
mov
or
jmp
mov
leave
out
dec
push
adc
dec
push
ror
cmps
movs
xchg
jb
in
cmc
lods
cmp
aas
retf
bound
cmps
push
fs
int
mov
jo
sub
clc
and
ror
scas
push
je
retf
dec
popf
pushf
or
enter
cmc
xchg
(bad)
xchg
jo
mov
dec
jmp
(bad)
lock
movs
mov
jecxz
mov
cmp
sbb
cmp
stos
nop
jns
scas
push
and
add
pop
call
mov
cld
mov
pop
(bad)
(bad)
adc
std
sub
shl
out
jnp
or
xchg
adc
mov
xlat
out
pop
mov
pushf
cmp
cdq
retf
mov
add
loope
cmc
jg
lods
mov
sbb
outs
sbb
jl
(bad)
jle
sub
jle
mov
sbb
dec
adc
cmp
bound
shl
cmp
pushf
jnp
lods
mov
repz
inc
mov
lahf
sbb
ret
push
mov
pop
mov
cld
je
(bad)
jge
repz
xchg
sub
adc
call
adc
cmc
and
retf
in
pushf
popf
call
test
cwde
lds
test
scas
lea
mov
inc
jle
adc
inc
imul
pop
cmp
dec
adc
test
xchg
out
ficom
mov
sbb
aaa
xchg
test
adc
fucom
movs
repz
add
mov
test
(bad)
data16
(bad)
rcl
in
and
dec
mov
mul
outs
mov
fidivr
ds
call
out
add
mov
xchg
movs
push
repz
push
ficomp
stos
and
shl
(bad)
push
mov
adc
jno
mov
jno
pusha
mov
leave
inc
outs
jno
dec
jecxz
add
pop
shr
push
xor
aaa
test
rcr
sahf
mov
pop
sbb
std
aas
mov
pop
test
push
ins
inc
dec
fadd
mov
fwait
gs
adc
fmul
aad
adc
call
mov
aaa
nop
sbb
fcom
hlt
cmp
fisttp
pushf
hlt
je
outs
test
inc
lods
xchg
hlt
adc
data16
dec
add
lea
jmp
xor
or
cmp
jp
inc
xchg
jle
test
retf
push
mov
retf
xchg
mov
push
xchg
add
(bad)
push
outs
cmps
sub
and
test
fdivr
dec
push
cmp
daa
mov
cli
jns
lock
add
pop
jmp
and
mov
lock
jp
fstp
push
imul
xchg
fadd
cmc
mov
sbb
jb
in
lock
adc
sub
inc
and
shr
and
mov
sub
(bad)
sti
clc
mov
push
xor
push
push
cmp
jne
mov
neg
imul
pop
xor
xor
gs
(bad)
pusha
inc
mul
aaa
xchg
cmps
pop
out
ret
jp
push
mov
sbb
adc
push
scas
fnsetpm(287
pop
loopne
adc
push
daa
mov
out
jge
xchg
mov
add
adc
loopne
mov
call
mov
sbb
stos
inc
iret
pop
(bad)
leave
add
sub
(bad)
inc
fsub
or
pop
clc
mov
pop
test
pop
xchg
jp
push
ins
jb
daa
das
inc
adc
mul
inc
adc
inc
cmps
sbb
mov
fdiv
add
push
mov
mov
sbb
cwde
sub
pop
sti
leave
xor
ja
xchg
sub
clc
mov
dec
sub
push
jae
int
inc
lea
xor
or
jmp
adc
push
inc
sbb
sub
pop
dec
outs
outs
jmp
sbb
and
shr
shl
adc
mov
inc
xlat
pop
jae
push
push
rcl
sbb
inc
in
pushf
dec
rcl
(bad)
stc
cwde
dec
aad
outs
push
dec
add
cmc
mov
sti
and
push
sub
xchg
push
fs
or
iret
xor
cmp
sbb
ret
cmp
test
popa
fdiv
pop
push
retf
aad
loopne
push
push
ins
enter
(bad)
cmp
sahf
adc
rcl
aas
loop
xchg
sbb
dec
push
scas
dec
lea
xlat
mov
test
neg
lods
adc
std
mov
jecxz
(bad)
pop
xor
pop
sbb
or
aam
in
imul
jmp
pop
add
test
in
ss
outs
push
(bad)
fisub
out
cmc
enter
aam
mov
stc
cmp
(bad)
fsub
daa
inc
mov
or
cmp
push
xor
add
scas
test
xchg
sub
not
mov
jecxz
xor
cmps
or
xchg
stc
sbb
or
push
popf
cmp
shl
and
out
stc
and
pop
(bad)
mov
cmp
ss
jnp
out
push
xchg
jle
sub
cmp
std
mov
mov
cmps
mov
retf
sbb
icebp
(bad)
nop
push
push
or
ds
or
pop
pusha
jae
icebp
jecxz
lods
sub
sub
xchg
or
sbb
and
jns
inc
pusha
jle
shl
shl
(bad)
jge
jmp
push
add
fmul
add
adc
sbb
xchg
(bad)
repz
add
xor
scas
xchg
neg
test
mov
and
icebp
repnz
ret
(bad)
outs
mov
jle
mov
mov
dec
mov
sub
dec
fdivr
push
fsubr
neg
sub
fwait
outs
popf
inc
adc
mov
sbb
loop
sbb
add
int3
sub
icebp
mov
outs
ror
or
sti
cmp
leave
jns
ins
or
repnz
sbb
adc
push
adc
mov
(bad)
push
test
sub
mov
nop
jmp
stos
xchg
xor
mov
and
ja
add
push
sbb
fdivr
test
add
xor
in
mov
mov
ss
push
retf
cmc
(bad)
int3
stos
push
movs
dec
inc
add
pop
inc
test
cdq
adc
hlt
loopne
cmp
ror
push
push
jle
and
popf
xchg
outs
inc
jnp
mul
xor
xlat
sti
cmp
sti
loope
jge
xor
js
xchg
sbb
(bad)
and
sbb
icebp
sbb
(bad)
popa
cmp
xor
jne
dec
sbb
mov
shl
(bad)
int3
sub
cdq
mov
movs
and
ins
jmp
iret
mul
adc
mov
sub
(bad)
push
dec
xchg
dec
push
jns
aas
dec
in
push
in
into
mov
lahf
mov
(bad)
call
sbb
and
jl
jmp
mov
xchg
(bad)
retf
into
mov
arpl
cdq
jle
fdecstp
scas
neg
sbb
inc
jge
sbb
inc
cmps
fmul
cmp
into
fist
add
mov
call
jge
mov
dec
(bad)
test
frstor
(bad)
and
sub
jp
cld
cmp
jl
cs
mov
inc
call
mov
js
jle
jle
fwait
mov
mov
mov
push
out
(bad)
cmps
popa
jb
mov
adc
xor
(bad)
ins
pusha
adc
cdq
sti
ret
xchg
adc
call
shl
ins
and
mov
out
jnp
sub
mul
add
stos
movs
ret
mov
stc
aad
mov
call
outs
into
mov
sti
push
jp
mov
jp
js
push
das
(bad)
and
jl
lahf
pop
call
add
xlat
xchg
mov
sahf
cld
cmp
pop
cmps
scas
dec
cli
clc
inc
(bad)
gs
mul
add
call
and
sar
push
pop
and
dec
daa
mov
js
add
js
dec
aad
nop
pop
xchg
aaa
es
mov
(bad)
mov
add
sub
aaa
jns
enter
and
stos
and
hlt
pop
cmp
xor
(bad)
out
mov
jb
adc
shl
ja
(bad)
std
pop
push
call
es
dec
push
sbb
mov
rsqrtps
movs
inc
(bad)
pop
pushaw
(bad)
mov
cmps
push
aad
xor
xor
jae
sahf
mov
jl
xor
daa
ficom
mov
jnp
cmp
xor
inc
or
call
pop
mov
in
movs
or
enter
push
popf
(bad)
jge
mov
xchg
fmul
or
fdiv
mov
stc
loopne
or
(bad)
out
xchg
adc
test
stos
xor
jno
jo
std
inc
pushf
mov
sub
jmp
out
push
mov
loop
jp
cmps
jbe
cdq
jmp
shl
sahf
or
faddp
stos
cwde
xchg
xor
lds
rcl
fild
cmp
jge
fstp
add
sub
mov
lock
push
popa
gs
dec
jno
sub
xchg
imul
inc
lock
or
enter
fst
shr
int3
test
fld
mov
iret
xchg
mov
mov
mov
pusha
jns
ret
loopne
imul
and
loop
retf
or
push
into
in
inc
shl
fiadd
arpl
xor
mov
push
sti
inc
aaa
(bad)
jne
mov
pusha
and
sub
pop
fcomp
fs
push
mul
(bad)
and
mov
mov
(bad)
jmp
(bad)
in
int3
xchg
sbb
and
pushf
enter
mov
add
mov
jg
mov
daa
cmp
push
ja
sbb
clc
loop
aaa
and
jmp
xlat
mov
mov
out
(bad)
lock
sahf
mov
push
in
into
and
iret
fs
pop
mov
mov
cmp
mov
addr16
addr16
aaa
adc
movs
adc
out
inc
push
jmp
push
xchg
mov
lock
xchg
aad
neg
pop
mov
movs
sub
loope
push
(bad)
aam
nop
fs
retf
inc
add
ret
inc
cli
jg
mul
nop
and
call
(bad)
mov
dec
addr16
push
push
je
xchg
sbb
imul
push
mov
xchg
sub
adc
std
or
mov
adc
pop
xor
jns
sti
or
movs
sub
out
std
and
lods
push
fcomip
imul
jmp
mov
loop
lahf
dec
mov
nop
and
inc
gs
cmps
out
mov
push
mov
and
xchg
pop
aam
sbb
xchg
lods
(bad)
pop
dec
addr16
std
or
mov
les
pop
out
jecxz
cmp
aad
sbb
test
xor
scas
retf
retf
and
les
jmp
mov
shl
imul
lds
mov
mov
fcomp
inc
lahf
xchg
cmc
or
enter
test
scas
mov
jg
add
shr
(bad)
push
mov
mov
ficomp
aaa
jecxz
mov
enter
push
lahf
es
dec
cmp
(bad)
pop
popf
out
cmps
leave
sbb
mov
xchg
popf
out
dec
cmp
icebp
imul
leave
loop
repnz
add
mov
pop
mov
cmp
inc
nop
cmp
hlt
cmp
dec
add
pop
dec
cmp
mov
(bad)
and
xchg
jge
xchg
mov
jno
nop
outs
inc
or
(bad)
div
xchg
mov
data16
bound
iret
mov
stos
pop
cmp
stos
push
aaa
ror
jg
or
mov
xchg
not
cmp
jnp
call
mov
fidivr
adc
(bad)
shl
out
movs
adc
jmp
icebp
shl
mov
cdq
out
inc
pop
jno
out
sar
outs
cs
add
and
sbb
adc
ss
mov
(bad)
mov
dec
add
mov
pushf
lock
sub
ret
frstor
gs
xchg
fnstcw
(bad)
jge
ja
mov
int
popa
pusha
and
ins
fsub
xlat
or
adc
int
push
adc
dec
test
popf
lahf
aad
loop
fsubr
shl
mov
rcl
movs
popf
or
fidivr
daa
data16
xchg
mov
sub
fwait
cmp
sbb
repnz
fdivr
or
lock
pop
(bad)
sub
and
cmps
retf
sub
mov
movs
push
mov
dec
out
push
das
(bad)
jge
push
xor
jmp
mov
dec
je
mov
mov
and
mov
test
out
fnstsw
adc
arpl
cmp
mov
fbld
gs
push
jmp
mov
dec
call
(bad)
loopne
ffreep
xchg
cmps
add
fsubr
imul
sub
out
lods
das
fwait
adc
fcomp
mov
cmp
and
push
je
das
aad
es
arpl
cmp
cmp
mov
inc
sub
xchg
add
cvttps2pi
inc
sbb
iret
adc
aam
adc
icebp
je
push
mov
mov
sti
into
scas
sbb
imul
jne
data16
xchg
pop
mov
test
xor
out
mov
arpl
js
mov
xchg
add
in
les
add
mov
xor
int
outs
xor
push
sbb
pop
loope
ficomp
ins
cmp
sub
push
jae
jb
shl
es
js
cmc
mov
(bad)
cmp
pop
shl
rcl
ins
repnz
sbb
enter
or
xchg
lods
xchg
imul
mov
sub
adc
push
mov
mov
mov
jb
jp
outs
jge
in
xor
and
out
mov
add
adc
adc
pushf
pop
jo
outs
adc
push
and
mov
pop
scas
or
push
test
das
nop
mov
dec
out
and
dec
cmc
cmps
jmp
pop
pop
pop
cs
inc
pop
jle
loop
fist
call
mov
nop
out
retf
repz
lods
stos
test
sub
shr
hlt
push
div
shl
mov
sub
pushf
push
jmp
cmp
(bad)
int3
jg
lods
mov
cmps
xchg
je
shl
in
lea
mov
out
out
adc
repnz
adc
iret
dec
mov
int3
and
(bad)
jecxz
and
dec
adc
add
stos
fwait
in
mov
fwait
mov
push
sbb
ret
aam
sub
xor
imul
(bad)
push
mov
pop
adc
sub
inc
test
cmp
aas
clc
push
xchg
and
and
sub
test
call
jnp
mov
lahf
retf
or
movs
ds
dec
ret
dec
adc
jmp
pop
in
and
(bad)
mov
ror
inc
lahf
inc
add
and
mov
imul
xor
mov
loop
xchg
pop
(bad)
mov
push
and
push
and
les
lods
xor
mov
and
adc
call
sub
jne
or
es
mov
in
repz
into
je
xlat
xchg
stos
inc
xchg
mov
cdq
sti
fst
inc
add
xchg
fmul
xor
shr
dec
inc
push
jb
stc
xchg
xchg
not
arpl
in
add
and
fs
in
in
nop
popa
xor
cmp
mov
test
mov
xlat
int3
out
cmps
ror
movs
adc
(bad)
cmp
int3
jg
add
(bad)
sbb
test
das
jecxz
js
cld
int3
and
and
mov
push
mov
ret
cdq
sub
sahf
lock
sub
nop
pop
cmp
fwait
push
xor
mov
add
lahf
xor
out
jo
aam
xchg
(bad)
jge
(bad)
popa
mov
imul
cwde
cmc
jae
outs
fimul
loop
(bad)
mov
int3
leave
cmc
fidiv
push
and
fcomp
mov
cmc
cli
push
ja
mov
xchg
xchg
inc
or
ja
gs
or
push
mov
test
gs
sbb
out
add
ins
and
sub
or
sti
out
clc
(bad)
enter
out
xor
ja
mov
jle
mov
movs
jecxz
test
ficomp
add
xchg
mov
das
stos
daa
lock
std
out
add
adc
mov
pop
xor
push
dec
cmp
mov
fidivr
(bad)
pop
xchg
in
into
repnz
dec
or
push
cdq
pop
lahf
(bad)
ins
std
cwde
int
push
pop
fs
into
int3
daa
scas
(bad)
cld
loopne
sbb
adc
and
je
sbb
data16
or
ins
in
in
and
adc
in
(bad)
in
test
inc
mov
jbe
xor
popa
sub
jno
jbe
das
or
les
or
mov
inc
add
fisubr
stos
stc
jecxz
(bad)
or
dec
jb
mov
or
outs
xchg
xor
dec
imul
sub
in
jecxz
ins
jo
(bad)
push
push
dec
(bad)
pop
sar
loope
pop
call
xchg
adc
xchg
mov
cmp
rsqrtps
stos
add
or
jnp
arpl
xor
fimul
fucomip
jbe
jg
stos
jp
in
cld
jl
iret
ds
dec
enter
push
leave
es
shl
fidiv
mov
jne
jmp
sub
retf
(bad)
dec
jecxz
and
inc
stc
jne
(bad)
fdivr
clc
fwait
mov
mov
mov
loopne
cdq
jge
mov
push
cmp
or
outs
call
jbe
adc
test
movs
rcl
mov
add
cmc
imul
dec
retf
xchg
cmp
pop
push
nop
cmp
das
jmp
jg
ins
push
sbb
pusha
stc
lods
(bad)
sahf
xchg
dec
pop
sub
lea
sbb
mov
xor
inc
mov
and
cmp
mov
fst
scas
dec
mov
ds
and
add
(bad)
and
xchg
les
xor
pop
sahf
pop
add
out
sub
popa
mov
mov
mov
mov
sbb
pop
xor
gs
push
(bad)
stc
xchg
jb
mov
addr16
push
jmp
(bad)
movs
add
pop
in
pushf
loopne
jl
pop
lods
sbb
mov
sub
fsubr
adc
movs
push
dec
sbb
cmp
add
icebp
inc
sbb
mov
mov
(bad)
jb
frstor
loopne
es
cmp
jmp
jb
cmp
push
mov
jmp
stos
loop
ins
bound
xor
pop
cmp
add
mov
mov
jno
dec
in
fadd
dec
and
push
in
pop
dec
out
(bad)
push
and
fisubr
scas
dec
mov
fsubr
repnz
xor
adc
jae
ds
and
jle
inc
inc
cld
jl
mov
gs
scas
xchg
lahf
xchg
mov
into
or
icebp
jns
or
jo
mov
add
rcl
enter
push
outs
loop
in
inc
outs
int
mov
mov
fs
pop
push
push
test
mov
adc
outs
retf
popa
jp
fnstenv
mov
retf
and
push
shr
cmp
xchg
or
stc
das
xor
cmp
movs
mov
cli
shrd
int3
add
xchg
int3
mov
ja
xor
neg
cmc
cmp
fistp
fwait
mov
inc
mov
inc
lds
lock
ror
daa
jnp
jmp
outs
test
jbe
mov
cmps
aas
cmp
adc
cmp
inc
gs
scas
in
inc
ret
idiv
pop
xor
pop
inc
xor
retf
xchg
jnp
and
icebp
push
cmp
das
stc
jmp
push
jne
retf
fstp
cdq
loope
shl
int
aaa
xor
fistp
adc
dec
jno
mov
jo
jnp
jnp
xor
or
add
or
inc
fisttp
test
das
ret
mov
jge
cs
mov
stos
push
leave
push
dec
or
je
xchg
inc
xor
inc
xchg
ins
enter
ins
or
mov
rcr
scas
cdq
xor
retf
sbb
(bad)
xor
dec
mov
cdq
inc
es
mov
enter
ja
cmp
xchg
inc
and
outs
push
push
or
leave
dec
push
jnp
dec
adc
outs
je
jg
dec
movs
aaa
adc
mov
add
mov
pop
xor
stos
pop
inc
xchg
mov
jo
jp
mov
jae
push
adc
test
push
cmp
scas
inc
push
push
mov
mov
ret
push
and
and
(bad)
jnp
and
xor
cld
imul
add
imul
fbstp
retf
daa
out
cwde
sbb
movs
arpl
push
lea
rol
ror
xor
jecxz
jmp
adc
les
(bad)
add
pop
test
dec
jnp
and
test
icebp
aad
movs
aad
popa
arpl
jp
jp
scas
xor
sbb
mov
xor
test
sbb
(bad)
cld
or
test
mov
in
movs
repz
add
xchg
je
cld
dec
mov
xchg
clc
jl
daa
pop
xchg
mov
xchg
test
pop
or
scas
adc
test
les
adc
push
jo
mov
int3
scas
bound
dec
lods
push
aas
int3
pop
lahf
pop
loop
call
ret
(bad)
or
dec
(bad)
and
xchg
pop
inc
loop
push
dec
mov
cs
jl
rcl
sbb
and
push
stc
inc
stos
(bad)
outs
in
dec
arpl
jecxz
mov
inc
aas
popa
movs
movs
mov
(bad)
pushf
iret
rcr
in
add
nop
lahf
rcl
and
mov
lahf
adc
xchg
inc
adc
out
(bad)
pop
pop
(bad)
pushf
jecxz
int3
and
push
imul
fistp
(bad)
in
mov
cdq
sahf
repnz
xchg
data16
adc
ds
ror
mov
push
mov
outs
outs
jmp
mov
jle
cmp
lods
movs
fmulp
stc
dec
push
cmp
inc
xchg
adc
(bad)
cmps
sub
mov
fdiv
xchg
cld
or
mov
nop
hlt
not
pusha
xor
enter
xor
mov
adc
sti
mov
in
mov
push
jecxz
inc
xchg
mov
mov
jge
in
sub
xchg
add
fsub
xchg
js
aas
mov
jge
sar
mov
and
cmp
cmp
adc
lahf
cmp
mov
cmp
jns
or
inc
(bad)
ret
cwde
sbb
pop
inc
sbb
fsubrp
pop
daa
addr16
push
ja
and
loopne
in
mov
bsr
(bad)
scas
pop
sbb
jge
or
pop
rol
int
loope
repnz
sbb
fwait
inc
cs
xchg
fwait
in
cli
fistp
stos
xchg
and
dec
sub
push
imul
pushf
push
fs
jbe
or
mov
fstp
and
(bad)
sbb
push
mov
cmps
pop
jl
inc
scas
outs
dec
inc
mov
mov
inc
pop
aam
adc
(bad)
mov
(bad)
movs
inc
jae
pop
loop
pop
rcl
mov
mov
cmps
adc
xor
sub
pop
sub
xor
and
sbb
mov
cmps
sahf
mov
push
ins
jl
loopne
cmp
jmp
fild
cmp
adc
jbe
arpl
add
movs
or
jmp
lahf
inc
ins
xchg
scas
sbb
push
xchg
outs
(bad)
fwait
rcl
pop
cs
sbb
or
and
dec
add
adc
out
test
jge
mov
adc
or
aas
fcmove
xlat
popa
enter
sub
mov
sub
xchg
lea
in
mov
sbb
mov
dec
pop
in
setno
pop
xchg
(bad)
xchg
repz
adc
scas
sub
sbb
adc
out
adc
lds
shl
mov
inc
loope
iret
mov
or
push
inc
enter
xor
and
clc
stos
xchg
or
sub
mov
adc
int3
(bad)
sar
adc
jl
mov
sti
adc
jno
pop
es
adc
test
mov
int3
xor
jno
xlat
popf
call
pop
add
push
jge
xor
arpl
mov
cbw
jmp
push
inc
xor
push
test
lods
das
sub
mov
mov
mov
inc
fmul
sub
lods
pop
fidivr
aad
push
jp
add
cmp
jp
fs
xchg
mov
push
xchg
jo
add
dec
add
popf
stos
stos
arpl
inc
cld
rcl
scas
and
sbb
or
mov
(bad)
and
push
sbb
movs
xor
rcr
out
iret
dec
cmp
xchg
js
int
and
mov
cli
xchg
out
and
mov
hlt
out
stos
mov
sub
xor
cmp
lahf
jno
sub
xor
mov
fiadd
pop
popf
mov
imul
push
in
jae
cmp
std
loop
sbb
mov
outs
or
push
in
es
push
loope
sahf
fist
cmp
and
in
shl
push
lods
lock
or
call
xchg
or
retf
push
mov
xlat
jno
cmp
ins
mov
sub
xchg
jmp
add
clc
or
lods
sbb
cli
mov
or
test
push
cmc
aad
jne
lods
push
push
xor
pop
lahf
and
mov
ins
fldenv
add
lods
mov
jmp
add
pusha
in
sbb
mov
std
loope
jmp
retf
dec
lsl
mov
cmp
sbb
ret
cmc
pushf
sub
mov
mov
or
jecxz
aaa
mov
into
adc
imul
adc
vpmaddwd
lahf
arpl
adc
adc
xchg
mov
test
push
or
out
mov
dec
cmps
ins
lods
neg
inc
dec
xchg
pusha
enter
add
sti
arpl
loopne
ins
mov
cmp
stos
and
xchg
test
xor
mov
js
jnp
aaa
push
std
jns
stos
ret
lods
or
ror
(bad)
xor
push
ss
retf
mov
jmp
icebp
inc
ret
push
daa
cmp
fild
jge
adc
dec
adc
cdq
cmp
adc
xchg
sub
mov
sub
(bad)
push
dec
mov
les
mov
movs
stos
pop
xor
mov
dec
jnp
rcl
lods
cmp
rol
cmp
jb
pop
shl
loope
xchg
call
aad
dec
or
and
jno
popa
and
loopne
outs
loope
push
ins
outs
and
shl
pop
push
xor
mov
mov
xor
add
adc
pop
call
mov
fcomp
adc
pop
shr
mov
imul
in
mov
outs
sbb
lods
js
mov
pop
jnp
int
aad
cmp
adc
sbb
outs
lea
push
fadd
or
and
jecxz
inc
push
(bad)
mov
inc
push
or
stc
cli
jo
cmp
clc
pop
bt
retf
xchg
ror
or
fsubrp
aad
xchg
mov
int
pop
and
sbb
adc
(bad)
idiv
cmp
stos
mov
and
dec
out
jne
or
imul
and
cmp
or
cmp
test
cs
lea
cmc
mov
popa
retf
jmp
fisub
cmp
mov
add
out
jne
es
cli
cmp
(bad)
scas
xlat
es
arpl
inc
jmp
mov
popf
fld
xchg
mov
hlt
and
ds
lahf
enter
imul
or
pop
mov
fistp
rol
je
mov
in
imul
xlat
add
(bad)
out
mov
mov
mul
fidivr
ror
add
popa
in
lods
lods
sub
inc
xor
bound
push
push
xchg
push
dec
stc
cmp
cmp
jge
fisttp
mov
xor
into
mov
clc
xor
jl
fcomp
cmps
es
iret
push
and
mov
aad
jl
popa
xor
gs
push
fwait
push
in
inc
stc
mov
add
rol
add
pop
cmp
dec
xor
and
aad
sbb
dec
out
and
mov
ja
sti
icebp
sbb
aaa
jne
sub
cmp
fdivp
ja
xor
xchg
xchg
in
test
jecxz
pop
jno
mov
sbb
scas
imul
shl
inc
xor
clc
sbb
dec
sub
sbb
add
inc
mov
xchg
into
test
push
jg
lahf
out
push
arpl
retfw
push
mov
add
cmp
std
mov
aas
sbb
repz
int3
sahf
pop
inc
cmp
pop
or
(bad)
nop
es
xchg
pop
xor
pop
pop
outs
dec
ja
mov
shr
out
(bad)
sti
adc
daa
shr
repz
add
std
or
sub
or
adc
test
call
jnp
xor
xor
sub
xor
cmps
jo
pop
mov
xchg
sub
push
push
mov
ret
cmp
pop
icebp
test
push
lock
cmps
add
lahf
jno
lds
mov
shl
push
into
out
data16
xor
movs
test
(bad)
sbb
sahf
repz
mov
inc
and
add
imul
cdq
inc
test
mov
jmp
stc
push
pop
into
mov
mov
stos
enter
aad
sub
mov
mov
mov
or
push
inc
movs
std
popf
push
fistp
test
jecxz
pop
mov
(bad)
nop
inc
sbb
aaa
mov
xor
adc
outs
jmp
ret
pop
(bad)
pop
mov
sbb
mov
es
icebp
and
xchg
sub
call
xor
out
lahf
in
jp
dec
sub
mov
mov
sub
sbb
inc
mov
in
jbe
jmp
mov
bound
movs
jmp
push
fbld
sub
mul
push
fiadd
push
xchg
fs
push
jecxz
scas
ins
push
test
pushf
lods
xchg
sub
sbb
mov
(bad)
(bad)
enter
sub
pop
dec
and
push
mov
fs
and
daa
xchg
cmps
lods
into
mov
arpl
lock
test
lods
mov
sub
xor
movups
push
and
or
arpl
loop
sbb
not
nop
cs
(bad)
mov
jg
cmp
cmp
xor
add
lock
mov
imul
retf
dec
jmp
pop
dec
test
pop
hlt
adc
push
xor
test
inc
xor
ja
inc
mov
aaa
add
ds
mov
mov
jo
jg
mov
rcl
data16
jecxz
or
jo
xor
adc
sub
xchg
pop
into
mov
or
xchg
xlat
push
jl
push
jg
sbb
clc
jecxz
and
gs
push
shl
shl
mov
mov
in
jmp
push
mov
dec
sub
lahf
mov
dec
mov
jne
test
xchg
pop
jecxz
mov
es
sbb
pop
xchg
sbb
or
push
addr16
test
inc
sbb
dec
fld
mov
mov
aam
jp
scas
cdq
fistp
push
popf
sub
sti
cmp
dec
loopne
pop
imul
adc
mov
loope
fsub
add
or
inc
jae
jne
out
imul
inc
mov
push
jl
sub
stos
(bad)
mov
fcmovnb
and
fdivr
inc
imul
dec
repnz
iret
sub
cli
(bad)
enterw
jg
fsubp
test
movntq
mov
(bad)
in
out
nop
cdq
jnp
xlat
push
sbb
icebp
cmps
daa
cmp
xchg
dec
push
ret
pop
ud2
push
in
sbb
movs
add
loop
xchg
push
outs
xchg
test
lea
push
stc
push
xor
std
cmp
pop
jae
dec
sahf
stos
lahf
dec
(bad)
cmp
and
movs
int
or
add
dec
in
jae
sub
jmp
push
add
fild
cs
sbb
out
add
mov
mov
loope
fld
push
sahf
idiv
jl
dec
adc
jae
(bad)
test
mov
and
into
xor
xchg
es
xchg
and
sub
mov
imul
mov
xchg
scas
jp
jb
or
or
and
in
and
frstor
mov
dec
jmp
mov
xchg
loope
sbb
pop
out
sub
inc
or
dec
fistp
add
jmp
neg
push
xlat
mov
xor
jge
sub
xchg
xor
fisubr
xchg
pop
in
cmp
jle
test
test
mov
jg
dec
scas
dec
mov
ror
stc
test
sbb
push
mov
cmp
retf
push
scas
cli
mov
mov
cmp
icebp
movs
push
adc
test
fimul
dec
pop
cmp
ret
add
adc
sti
add
data16
ds
push
sub
jl
lods
sub
call
and
mov
and
jno
adc
bnd
mov
nop
push
mov
aad
dec
shl
or
adc
dec
imul
jo
push
mov
jbe
call
xor
mov
es
inc
shl
adc
and
dec
in
fnsave
xchg
dec
push
fnstcw
sbb
jp
mov
lods
and
popa
leave
mov
or
push
and
ja
test
dec
loop
push
ficomp
inc
pop
and
js
and
clc
xchg
ins
adc
mov
inc
sub
rol
repz
and
cdq
mov
cdq
aas
lods
hlt
test
pop
sub
push
ss
(bad)
fcomip
iret
call
inc
mov
ret
in
sbb
cmc
mov
ins
mov
fidivr
sub
int
sar
fwait
mov
adc
xchg
mov
out
add
dec
or
(bad)
sub
movs
enter
add
xor
and
add
test
jle
call
and
mov
imul
or
lods
push
push
repz
mov
jno
mov
add
inc
pop
ficom
cli
dec
mov
sub
and
push
adc
outs
mov
and
mov
sbb
xor
mov
dec
into
out
daa
mov
addr16
or
lods
bound
pop
test
popa
push
(bad)
int3
rcl
push
add
outs
xchg
dec
sar
fwait
sub
jns
mov
jb
cld
das
fdivr
jl
mov
imul
pop
rol
sub
rol
aam
add
sbb
mov
int3
push
mov
test
xor
jp
fidivr
popf
or
xor
mov
push
ret
or
mov
cmp
aad
lods
xor
push
jg
or
std
mov
mov
sub
push
mov
pop
lods
cmp
fstp
(bad)
in
cld
jae
jle
in
ja
leave
les
pop
xor
(bad)
jne
sub
bndstx
popa
test
test
jmp
jl
test
inc
shl
add
mov
push
pop
and
stos
(bad)
xchg
ins
mov
push
lds
rcl
int
scas
popa
mov
dec
mov
push
pushf
jl
dec
cdq
jno
pavgw
cdq
dec
sbb
mov
adc
dec
nop
mov
imul
sub
in
lods
fnsave
fstp
clc
add
pop
mov
es
sub
loopne
xor
pop
shr
sbb
fnsave
mov
jnp
ret
popa
loopne
aaa
cmp
(bad)
pop
mov
mov
imul
or
xlat
or
inc
cmps
popf
gs
(bad)
int
mov
addr16
lds
or
int3
ins
sti
sbb
mov
sahf
mov
sbb
push
(bad)
pop
iret
das
int3
dec
out
call
out
cmp
loop
push
mov
test
push
pusha
pushf
cmp
sbb
add
xor
mov
retf
pop
je
inc
mov
mov
pop
icebp
jne
push
xchg
inc
jg
mov
mov
adc
or
inc
mov
jo
dec
xor
imul
mov
or
jecxz
loopne
sub
pop
es
neg
cmc
cmps
mov
cli
sub
inc
inc
rcl
jp
iret
and
push
lods
hlt
rcr
xor
dec
stc
and
sub
cmp
push
inc
mov
retf
jb
push
sar
repnz
push
std
jg
nop
fld
lods
je
sbb
and
not
jnp
jl
dec
stos
inc
jp
gs
arpl
mov
pop
mov
mov
add
cmp
jnp
pusha
mov
jl
test
bound
fdivr
sub
cmc
cwde
add
adc
addr16
stos
out
movs
out
jmp
adc
int3
shl
cmp
out
shl
aad
mov
retf
(bad)
stos
out
fidiv
les
shl
mov
or
ret
or
jle
out
mov
je
test
hlt
std
pop
test
or
pop
movs
loop
shr
iret
cmp
push
cmps
mov
repz
jp
lds
pop
jmp
std
ficomp
(bad)
and
xchg
out
cld
xor
mov
mov
fisub
mov
movs
mov
adc
pop
pop
retf
scas
in
out
outs
in
add
cwde
dec
out
and
mov
loopne
and
popa
or
dec
call
jmp
clc
adc
add
pop
int3
and
mov
ja
jnp
outs
lods
outs
mov
sti
fwait
mov
repz
inc
xor
mov
add
adc
hlt
imul
push
mov
sub
test
ret
fistp
sub
and
jno
pop
ficomp
sti
and
inc
xor
aam
push
mov
or
inc
ss
aam
inc
leave
call
cld
lock
cmp
ds
int3
ja
sub
jecxz
dec
es
inc
popa
fld
mov
xlat
inc
popf
lds
add
inc
fistp
aaa
rcr
iret
leave
(bad)
lock
dec
xor
push
mov
fucom
push
jle
dec
das
sbb
fwait
sbb
mov
adc
ret
inc
or
(bad)
cli
dec
push
push
cs
mov
(bad)
pop
lea
popf
jmp
and
xor
loop
fadd
mov
jecxz
sti
es
sbb
jmp
sub
cmp
sahf
sbb
div
adc
cmp
mov
pushf
inc
sbb
or
and
in
xchg
push
mov
aad
cmp
or
int
fs
movs
jmp
or
mov
sbb
mov
inc
jecxz
cmp
inc
add
ss
je
fild
dec
out
in
adc
repz
das
lahf
loop
leave
mov
cmp
(bad)
xor
jmp
pop
push
mov
mov
pop
dec
push
mov
enter
les
inc
and
shr
inc
sub
add
sbb
bound
push
lods
aaa
int
ins
xchg
xchg
or
xor
cmp
add
stos
pop
inc
mov
adc
movs
sub
lea
pop
daa
sbb
in
cmps
in
fldcw
xchg
cmp
das
adc
mov
mov
cmp
in
cmp
das
xchg
pop
loopne
xchg
inc
in
aas
push
jnp
test
ror
xor
mov
or
mov
jno
stos
push
add
push
sti
fmulp
cmp
jge
sbb
test
mov
mov
mov
scas
fwait
mov
jae
addr16
scas
adc
jo
in
cmp
movs
jno
call
cmp
into
xor
adc
mov
inc
pop
pushf
add
jecxz
jbe
arpl
push
jmp
and
mov
mov
xchg
test
inc
jmp
dec
sbb
fwait
dec
ret
in
mov
inc
or
lods
fsub
mov
scas
cs
popf
mov
call
inc
push
sub
inc
ds
sbb
cmps
fwait
and
les
stc
pop
and
adc
ja
popa
pop
pushf
fcom
mov
adc
dec
cmps
rcl
inc
sar
cmp
add
adc
rcl
scas
mov
aaa
(bad)
mov
pop
push
out
push
ret
jb
aad
inc
xor
pop
cwde
lahf
jae
jge
lahf
ret
test
sbb
cmps
les
xchg
xor
sbb
adc
xchg
stc
mov
imul
shr
adc
lods
ficomp
mov
test
ror
dec
inc
dec
dec
std
in
out
ins
adc
test
push
push
jl
(bad)
xor
call
and
stos
or
out
and
jp
push
rcl
nop
ret
lea
ins
mov
mov
push
cmps
sahf
bound
movs
jge
inc
imul
nop
shl
ins
pusha
adc
popf
fcom
adc
(bad)
or
fidiv
add
push
mov
and
mov
inc
(bad)
lods
inc
into
jecxz
or
pop
pushf
adc
lock
mov
jge
bound
in
cmp
cmp
setb
das
mov
xor
cmp
xor
jbe
xchg
jl
mov
jg
pop
xor
popf
cld
xor
pop
cmp
mov
xlat
mov
sbb
cmp
push
add
cmps
push
mov
frstor
push
aad
push
xchg
jmp
lea
ins
ret
jo
movs
fdiv
pop
adc
cmps
xor
sub
cmps
pop
call
add
sub
inc
retf
xor
xchg
xor
mov
add
xor
jle
sub
push
mov
jg
clc
cmp
fst
imul
js
scas
iret
pop
icebp
pop
scas
shr
mov
sub
dec
mov
fld
repnz
or
xor
mov
(bad)
jl
jecxz
loopne
adc
imul
loopne
int3
shl
cmp
popf
ins
push
fsubr
or
call
rcr
mov
pop
out
mov
pop
popa
pop
mov
scas
(bad)
mov
jg
lea
mov
add
movs
test
mov
dec
in
out
call
sbb
sub
push
imul
xor
dec
loope
cmps
pop
xchg
pop
nop
stos
push
(bad)
pop
adc
ret
gs
mov
shr
(bad)
fist
pop
mov
inc
cmp
ins
adc
dec
lahf
mov
and
(bad)
repnz
mov
popf
shl
call
sub
mov
jae
mov
mov
stc
jnp
inc
pop
scas
arpl
shl
jp
jns
or
sub
jbe
and
int
adc
rep
dec
(bad)
xor
das
and
dec
les
movs
xchg
cmps
jno
cmp
out
cld
cmc
mov
nop
jg
and
rcl
inc
mov
repnz
and
or
and
pop
xchg
test
in
je
imul
xchg
in
imul
push
jb
loop
outs
arpl
add
mov
pop
es
jmp
out
pop
js
inc
dec
dec
xor
cmps
jno
cmp
leave
data16
js
mov
pop
push
pop
scas
mov
inc
mov
hlt
or
cli
jns
jno
inc
lods
hlt
jnp
iret
or
mov
ficomp
add
sub
jmp
lahf
jb
jecxz
sar
test
fstp
mov
movs
push
ins
pop
push
cmp
cli
imul
pushf
shl
loope
out
(bad)
jns
gs
xor
mov
ins
xor
inc
test
cmp
or
ficom
mov
inc
int
dec
adc
out
nop
mov
(bad)
dec
sub
sub
leave
pop
jae
cmp
xor
dec
loopne
mov
lods
add
inc
out
clc
add
jo
mov
inc
cmp
imul
stos
cmp
push
add
pusha
jbe
sar
loope
pop
sub
or
sub
push
movs
or
fstp
mov
bound
sbb
fadd
mov
pop
jne
dec
xor
jno
jbe
cmps
repz
int3
sbb
push
mov
or
mov
loop
repz
and
sahf
xchg
mov
ins
and
stc
push
pop
aaa
mov
jbe
test
mov
push
dec
push
stc
mov
outs
mov
rol
in
jns
mov
mov
fwait
retf
jmp
jp
xlat
das
mov
inc
cmp
fstp
push
ret
ins
jmp
retf
addr16
push
addr16
in
sbb
mov
inc
nop
mov
stos
jp
push
(bad)
addr16
and
xor
or
call
call
gs
pushf
js
mov
hlt
jmp
in
or
inc
int3
in
or
add
les
sub
pop
adc
shr
std
lahf
push
mov
icebp
pop
movs
mov
push
sub
div
jge
fimul
mov
add
add
jl
int
jmp
ret
aad
sbb
add
imul
loop
xor
scas
sub
retf
add
sbb
push
or
mov
xchg
mov
cmc
xor
mov
movs
inc
xchg
popf
ss
pop
sub
jecxz
jg
in
mov
add
iret
xrelease
lea
xchg
adc
hlt
icebp
mov
jb
lea
mov
add
fdivr
push
call
add
dec
adc
add
in
mov
mov
hlt
addr16
dec
outs
cdq
mov
jne
and
hlt
cmpxchg
sbb
fsub
or
or
cmp
cmps
dec
jge
or
in
jbe
mov
inc
xchg
adc
es
sbb
imul
test
stc
rol
addr16
or
push
mov
ins
inc
xor
xor
mov
mov
enter
lock
cwde
cmp
fiadd
push
or
cmp
dec
push
scas
ret
lods
sub
push
fstp
add
xor
push
leave
fwait
sti
mov
inc
test
ds
in
jl
xor
mov
test
mov
jmp
adc
enter
dec
xor
loop
lds
push
inc
jne
out
sbb
pusha
jecxz
inc
or
pop
stos
jp
fsubr
push
mov
jbe
pop
xchg
push
ins
dec
imul
and
js
and
adc
add
jecxz
push
sub
in
xlat
cdq
mov
mov
rcl
push
mov
or
mov
sbb
ficomp
cld
dec
adc
jle
scas
aam
jo
call
mov
pop
fstp
pop
inc
les
adc
cmp
mov
cwde
call
xchg
test
mov
mov
pop
inc
add
xor
or
arpl
(bad)
fnstenv
test
inc
adc
cmps
xlat
jle
jp
aaa
out
loope
cmp
inc
and
jno
jae
fstp
mov
sub
inc
in
and
mov
idiv
inc
mov
jne
jo
adc
rcl
fiadd
imul
pop
pop
mov
cmc
jecxz
pop
sub
push
stc
sbb
mov
test
sbb
jg
es
mov
or
add
inc
mov
push
or
popf
jl
adc
or
into
cmp
sar
xchg
cld
xchg
pop
mov
sar
aad
jmp
inc
jns
cmp
int3
ss
mov
scas
jg
pop
jp
dec
fdiv
fisttp
daa
pop
lock
gs
xor
jg
icebp
dec
xor
mov
(bad)
jecxz
mov
sbb
or
clc
xchg
inc
and
push
loopne
xchg
mov
cmp
jno
bound
sbb
jb
mov
xor
dec
(bad)
push
add
jne
xor
xor
ror
sbb
es
xchg
pop
leave
(bad)
fcomi
adc
sub
addr16
int3
call
jp
push
fisubr
sub
jg
mov
jo
cmp
pop
mov
push
inc
inc
fistp
scas
into
and
sub
add
push
and
int3
pop
pop
cmps
dec
cmp
retf
dec
xchg
pop
(bad)
sbb
sub
push
mov
icebp
push
mov
leave
pop
cwde
push
pop
test
or
pop
push
push
pop
inc
in
xchg
out
cmp
div
push
xor
test
cdq
mov
push
mov
sbb
popf
lods
bound
pusha
jp
dec
push
and
ins
or
adc
rcl
pop
jg
in
addr16
retf
adc
cmp
aaa
xor
ins
test
or
iret
cmps
in
xlat
and
dec
cmps
inc
pop
loop
mov
sbb
mov
push
retf
clc
test
sbb
add
fcomp
in
or
xchg
loope
sbb
cwde
ins
dec
inc
fxtract
push
and
call
sbb
in
fcom
cmps
pop
inc
outs
or
pop
inc
xor
or
lock
jbe
pop
xchg
xchg
cdq
adc
fcomp
adc
out
sub
ror
outs
add
dec
outs
cdq
or
xor
(bad)
cwde
std
jbe
add
push
pop
scas
lahf
cmps
cmp
idiv
(bad)
jb
std
pop
push
inc
nop
sub
jne
mov
dec
sbb
or
or
mov
add
xchg
movs
xor
dec
sbb
jnp
jnp
jmp
add
dec
and
jo
es
(bad)
mov
pusha
xchg
rol
(bad)
retf
iret
ss
dec
js
push
pop
sar
mov
dec
or
jp
mov
dec
sbb
in
pop
repnz
xchg
dec
jg
fadd
add
adc
inc
sub
xor
sar
loopne
les
lea
cmp
sar
les
aad
clc
xchg
push
jb
or
gs
int3
xor
inc
pop
aam
aam
ds
cmp
repz
popf
pop
dec
cwde
ret
push
pop
fld
pop
ds
(bad)
aaa
dec
dec
and
in
sbb
mov
xchg
sbb
add
cmp
adc
mov
ins
cmp
mov
sbb
add
dec
pop
ds
gs
add
pusha
fstp
sub
inc
xchg
data16
std
xor
add
xchg
cmp
scas
dec
sub
pushf
arpl
adc
push
xor
cs
add
mov
or
pop
aam
in
sbb
icebp
add
popa
ret
aam
mov
sbb
fwait
xchg
jne
outs
sbb
push
inc
and
push
add
mov
inc
inc
add
aaa
dec
scas
and
or
test
mov
mov
(bad)
adc
ret
jmp
fnstenv
pop
outs
test
aas
nop
out
sbb
push
or
mov
iret
pop
jmp
daa
xor
mov
mov
ret
das
pop
das
mov
(bad)
ins
pop
xchg
pop
out
mov
ret
pusha
add
aaa
call
rcr
aam
add
jmp
pop
mov
ret
inc
jns
or
cmps
cmps
(bad)
cmps
into
outs
xchg
xchg
imul
add
sbb
jno
mov
mov
in
jg
pop
fistp
and
jp
imul
out
add
push
outs
xor
scas
add
cwde
enter
jbe
or
adc
and
jnp
sbb
out
sbb
aas
sub
mov
stc
lahf
movhps
int
in
add
add
dec
aad
iret
sbb
xlat
je
jmp
pop
mov
add
xchg
xchg
sbb
inc
mov
or
jnp
mov
xchg
mov
call
sbb
sbb
arpl
mov
rcl
or
pop
pop
sbb
add
pusha
(bad)
ins
mov
fadd
lahf
xchg
jmp
add
aaa
xchg
sub
int3
cmp
xchg
xchg
mov
cli
adc
adc
mov
adc
jmp
inc
ror
and
push
mov
push
ja
rcl
popf
je
inc
push
adc
pop
pop
test
add
inc
jbe
movs
xchg
or
or
mov
shr
iret
jecxz
mov
cs
jae
and
jae
repnz
je
and
cmp
mov
fist
test
cs
jae
cmps
sbb
test
xchg
add
xor
xlat
add
mov
fs
jl
shr
add
and
mov
cmps
jne
je
clc
data16
dec
nop
push
lods
mov
jg
lods
into
mov
(bad)
das
add
mov
push
or
mov
cmp
push
mov
pop
test
popf
add
dec
add
into
pop
jnp
(bad)
rol
pop
mov
jl
jae
lds
mov
call
sar
aaa
stos
(bad)
scas
xor
adc
jb
cmps
mov
and
sti
and
push
mov
fsubrp
sbb
mov
and
xchg
xlat
dec
stos
fstp
mov
push
sub
adc
add
pop
(bad)
(bad)
into
sahf
int
addr16
adc
icebp
inc
adc
mov
mov
rcr
idiv
icebp
sub
xor
ds
sbb
ror
fiadd
push
push
xor
scas
or
leave
or
arpl
inc
sbb
mov
mov
mov
jns
xchg
mov
addr16
nop
jecxz
cmp
and
xchg
(bad)
idiv
inc
fstp
dec
neg
int
std
in
push
mov
add
sub
in
frstor
dec
ja
das
jnp
mov
mov
shr
mov
fnstsw
xchg
sub
or
rcl
in
pop
push
push
clc
jne
cmps
outs
into
xor
or
push
mov
add
stos
retf
and
sbb
hlt
jmp
cld
xor
jns
push
mov
cmp
pop
xor
stos
add
pop
dec
push
sti
lds
(bad)
jae
int3
mov
adc
sbb
jecxz
dec
xor
int3
pop
jmp
sbb
xchg
shl
fcmovu
dec
or
pop
iret
(bad)
fist
es
pop
clc
and
int
fs
lods
and
mov
or
jmp
aad
cdq
mov
mov
js
xchg
sahf
inc
je
xchg
nop
sub
popa
dec
mov
cmp
jns
mov
in
inc
or
mov
pushf
push
fcmovnb
dec
mov
sub
ss
aas
jbe
xchg
push
out
add
push
jl
adc
out
and
sbb
add
adc
jp
je
cmp
cs
(bad)
pop
xor
jle
int
aas
xor
shl
data16
dec
mov
xlat
xchg
adc
pop
xchg
rdmsr
lea
jl
mov
xor
inc
push
push
dec
dec
mov
fistp
fist
call
mov
sub
jle
push
pop
inc
inc
inc
dec
aam
out
retf
in
xchg
push
std
test
sbb
mov
loope
push
shl
imul
movs
aaa
inc
popa
pop
push
dec
mov
inc
in
adc
pushf
mov
push
les
lahf
xchg
bound
je
lods
(bad)
mov
movs
call
ins
push
cmp
fwait
icebp
push
mov
jne
jns
in
ret
sbb
ret
adc
cmp
cld
stos
pushf
sub
sub
or
jae
and
test
cwde
dec
cmc
xor
mov
sbb
adc
jo
pop
aas
xor
or
inc
xchg
inc
cdq
retf
aad
in
cmps
fisubr
push
sbb
div
les
mov
outs
lock
and
pop
jle
mov
out
jp
out
push
adc
arpl
int
jne
aam
popa
or
pop
hlt
adc
xchg
pop
mov
mov
aaa
cmps
xchg
xchg
popa
test
adc
mov
sbb
fisubr
mov
inc
sbb
leave
sbb
push
call
lahf
jl
adc
pop
mov
sahf
aas
and
sbb
dec
in
push
cmp
int3
mov
stos
add
add
inc
pop
cmps
cmps
jb
les
imul
sub
and
sahf
gs
and
enter
sub
jb
movs
retf
cmps
add
nop
jnp
add
dec
sub
mov
pop
imul
mov
mov
adc
repz
xor
push
stos
fwait
cmp
aaa
outs
push
jecxz
sub
xchg
mov
xor
push
xchg
push
fadd
adc
scas
or
pop
lods
ficom
(bad)
sub
enter
mov
or
cmp
fsub
shl
pusha
sbb
add
not
fsub
aad
sub
into
xor
push
xchg
sub
jb
cmp
cwde
mov
mov
xchg
ins
test
mov
(bad)
dec
xchg
or
test
or
rcl
hlt
jns
or
pusha
cwde
pop
pop
clc
ins
push
mov
in
into
lock
dec
mov
test
gs
inc
popf
call
pop
bound
xchg
shl
jnp
into
jae
mov
daa
xor
mov
daa
inc
sbb
push
arpl
push
rol
pop
stc
fcom
cmp
(bad)
jne
sub
xor
mov
lods
adc
adc
pushf
mov
icebp
cld
jl
and
push
lahf
xchg
adc
dec
and
int
push
pop
push
mov
outs
mov
adc
xchg
pop
out
xchg
add
mov
int3
xlat
js
dec
(bad)
imul
mov
pop
(bad)
jb
pop
imul
or
(bad)
mov
out
outs
mov
mov
popf
retf
xor
fstp
mov
dec
mov
sahf
mov
mov
sbb
xor
pop
sbb
push
pop
mov
shr
pop
retf
popa
and
pop
loop
mov
pop
daa
or
xchg
scas
sbb
sub
dec
(bad)
push
(bad)
xor
hlt
inc
push
pop
sub
push
push
and
loopne
jns
ret
popa
(bad)
mov
cdq
in
mov
xchg
imul
pop
jbe
mov
mov
repz
(bad)
in
sbb
mov
in
sbb
cdq
cmp
loopne
mov
clc
lds
loop
cs
mov
lds
(bad)
test
jo
test
in
add
add
cmp
xor
repnz
sbb
dec
jp
aas
push
pop
test
mov
push
bound
inc
mov
cmps
stos
nop
mov
xchg
ins
in
(bad)
xor
cmp
xor
out
inc
pop
aam
pusha
in
call
imul
adc
jl
cld
test
ins
cmp
out
lock
mov
mov
sar
cdq
push
jle
aas
xchg
mov
fs
(bad)
iret
push
or
xchg
stos
pop
in
(bad)
call
mov
out
es
push
sub
sub
add
arpl
inc
call
xlat
das
hlt
mov
jae
out
test
push
xor
ret
in
xor
mov
mov
mov
and
inc
movs
aaa
neg
clc
jmp
cmp
mov
sahf
mov
cwde
arpl
dec
clc
jbe
cmps
cs
adc
inc
sti
ss
call
pop
inc
inc
psrlq
adc
mov
rcr
xor
mov
or
das
repz
jge
dec
and
xor
pop
jo
or
jae
jno
leave
dec
jae
lea
movntps
cmp
add
lds
call
cmps
or
mov
sub
mov
call
(bad)
sub
repnz
aad
mov
add
sub
pop
shl
mov
dec
push
jo
mov
ins
test
mov
pop
or
ins
xor
gs
rcr
inc
out
pop
imul
(bad)
cs
lods
ja
shr
ret
cmp
sbb
clc
cli
pop
out
fstp
xchg
inc
imul
arpl
jmp
lahf
cmp
adc
sub
add
mov
stos
jle
fst
or
fsub
push
xchg
(bad)
cmp
jl
sbb
fld
daa
pop
mov
out
ror
xor
call
mov
jbe
inc
fidiv
xor
lods
xor
jle
mov
aam
or
int3
aam
mov
push
popf
int3
jmp
or
cs
bound
dec
push
outs
xor
loopne
aaa
mov
xchg
xchg
mov
push
jl
mov
test
(bad)
jmp
inc
add
inc
fs
jecxz
pusha
pop
mov
out
repz
pop
jb
mov
xchg
mov
dec
stc
xchg
les
pusha
aas
shr
xor
in
imul
or
cmps
fistp
not
or
jp
popa
jno
in
pop
in
cmp
call
int
pushf
or
jae
xchg
leave
xchg
jbe
mov
xchg
add
das
inc
inc
daa
ins
cwde
adc
adc
adc
sti
(bad)
pop
inc
mov
push
in
dec
add
out
in
cmp
mov
sbb
inc
push
test
cmc
mov
or
pusha
jmp
in
mov
inc
es
int3
mov
cmc
imul
in
test
outs
ins
mov
xor
jg
cld
cmp
inc
in
hlt
shl
xchg
in
xchg
cli
pinsrw
xlat
mov
cmp
sbb
int3
out
mov
(bad)
dec
xor
mov
pop
cmp
test
jne
lods
xor
(bad)
ds
cmp
mov
iret
outs
dec
je
int3
sbb
xlat
repnz
int3
xor
adc
push
adc
mov
pavgw
or
in
jo
pop
and
inc
dec
inc
xor
jbe
or
and
retf
retf
adc
imul
mov
sub
in
add
mov
out
repnz
cmp
(bad)
and
aaa
enter
out
loopne
jmp
mov
push
sbb
add
cwde
cmp
les
cld
sbb
inc
pop
sbb
cwde
pop
xor
ror
int
jae
push
fwait
ins
xchg
inc
jecxz
cmp
dec
mov
pop
inc
xor
sub
stos
stc
cmp
cdq
mov
mov
gs
jg
jo
adc
mov
repz
aam
dec
mov
in
ja
data16
push
xor
xchg
loope
data16
mov
data16
or
sub
mov
fdivp
int3
popa
sub
out
call
add
xlat
out
ins
ss
cmp
jbe
xor
dec
dec
test
call
mov
push
movs
pop
or
jo
push
xlat
cmp
jno
lods
add
xchg
in
js
mov
xor
add
lea
int3
or
adc
out
cli
out
call
(bad)
and
lods
push
adc
invd
int
mov
lods
xchg
int
inc
iret
push
mov
xlat
loopne
pop
mov
bound
sub
sbb
iret
add
rcl
jnp
mov
fidiv
sbb
ret
xor
xchg
sub
lock
and
dec
xor
pop
test
push
mov
dec
aas
in
mov
fst
js
stos
movs
mov
call
jb
add
cmps
mov
ror
lods
shl
mov
pop
(bad)
dec
shl
pop
test
xor
sub
jmp
mov
dec
mov
xchg
jo
mov
(bad)
in
sub
cmp
retf
popa
cmps
push
pop
lods
mov
cmc
and
cmp
mov
push
add
push
xlat
icebp
stos
inc
clc
pop
cmp
dec
js
mov
cwde
mov
test
call
sti
or
and
js
mov
stos
popf
fistp
pop
fsub
iret
push
mov
xor
scas
push
cmp
ds
push
retf
or
js
push
xlat
inc
not
jge
or
mov
cmps
bound
out
hlt
jl
out
enter
aad
pop
or
daa
je
mov
or
inc
call
cmp
pop
add
loope
push
mov
scas
add
popf
sub
out
adc
callw
fs
ficom
test
inc
cmp
cmps
mov
pop
xchg
push
sub
jae
sub
outs
scas
rol
xchg
inc
push
popa
or
bound
dec
xor
sub
loop
ret
cli
inc
inc
ss
jne
je
add
(bad)
mov
lahf
xor
mov
scas
xchg
test
pop
ss
enter
and
data16
fwait
xor
loop
pop
jg
sbb
cmps
jp
jbe
cwde
sbb
or
into
jl
and
mov
fs
aas
cmp
xor
movs
sbb
and
retf
pop
cmp
movs
(bad)
jns
cmp
mov
cli
push
ins
gs
push
and
inc
sahf
dec
mov
ret
jns
xchg
push
add
cld
iret
popa
xchg
mov
sub
div
jbe
int
jne
push
(bad)
adc
mov
mov
mov
mov
mov
inc
hlt
add
jno
jne
lea
sub
std
jg
fld
daa
test
ds
jge
jne
jg
call
shl
push
cli
add
pop
aas
xchg
pop
mov
leave
retf
sbb
xchg
iret
std
fisub
inc
jmp
cmp
push
push
outs
jecxz
xchg
fidiv
call
out
xchg
outs
fstp
dec
outs
or
cs
push
cwde
dec
add
push
inc
in
pop
in
or
mov
out
das
or
(bad)
or
loop
pop
fld
cmp
fsubp
icebp
cmp
test
(bad)
out
idiv
xchg
push
mov
int3
xchg
pop
cmp
xchg
inc
movs
shr
fidivr
push
jmp
sar
inc
test
dec
cwde
jl
sbb
push
sub
xchg
cld
sbb
mov
mov
cli
sar
inc
bound
push
xchg
cmp
cmps
daa
sub
mov
push
add
jnp
jno
test
or
imul
or
mov
mov
imul
or
nop
push
(bad)
rcl
cmp
mov
ds
dec
mov
xor
xchg
xchg
jmp
mov
pop
adc
in
outs
mov
sahf
cld
inc
xchg
loop
jmp
mov
cld
mov
ss
fwait
mov
dec
dec
repz
add
and
mov
icebp
cmps
int3
pop
pop
fimul
pop
mov
and
aas
sub
scas
push
adc
or
mov
inc
icebp
loop
and
into
mov
inc
pop
mov
sbb
cli
lods
mov
std
or
ja
(bad)
cli
shr
and
push
mov
dec
(bad)
std
hlt
fs
xchg
pop
pushf
xlat
retf
mov
aad
and
aaa
jnp
xor
out
jbe
add
and
mov
movs
xchg
jmp
int3
sub
cdq
ds
jg
add
(bad)
mov
arpl
shr
jmp
inc
out
sbb
js
repnz
and
int
xchg
jnp
xchg
(bad)
pusha
in
(bad)
xor
rol
fidiv
jmp
inc
adc
adc
mov
iret
push
or
retf
add
adc
dec
sar
sbb
cs
adc
hlt
mov
and
hlt
jmp
sub
mov
cwde
mov
inc
pop
and
sbb
cmp
jp
sahf
pop
cmp
sub
pop
mov
jp
push
leave
cmp
and
out
or
rep
jmp
into
push
shr
mov
push
pop
and
mov
dec
(bad)
cmp
xor
mov
push
out
xchg
inc
mov
dec
fnsave
adc
adc
aaa
ret
or
push
mov
jne
pop
mov
xor
pop
mov
pop
mov
ja
cmps
call
ret
test
xchg
or
fwait
mov
push
paddusw
js
test
push
push
push
int3
inc
jg
ins
shl
inc
repnz
pop
adc
adc
or
movs
mov
cmc
jb
in
lods
jmp
shr
je
(bad)
xor
test
mov
xchg
fnstsw
in
mov
cmps
pop
push
aam
mov
xchg
fst
imul
dec
dec
jb
jne
dec
movs
inc
fimul
movs
adc
int
mov
call
(bad)
or
mov
mov
push
inc
test
sahf
or
out
push
cwde
imul
dec
daa
mov
jmp
hlt
test
push
fisubr
mov
add
(bad)
sub
cmp
pop
imul
jle
sbb
lods
in
aaa
mov
add
sub
iret
or
mov
jg
cld
popa
push
sub
mov
sbb
mov
jmp
popa
xchg
test
repnz
mov
arpl
push
ja
cmp
or
inc
loope
mov
mul
add
call
data16
add
inc
arpl
popa
int
add
clc
sub
push
out
leave
push
test
stc
push
aad
bound
leave
mov
call
inc
addr16
mov
sub
mov
adc
jp
dec
les
sahf
inc
jmp
das
add
mov
or
mov
mov
push
jb
cmps
js
hlt
inc
repnz
dec
in
push
rcl
mov
xor
cmovg
out
sbb
inc
mov
push
mov
mov
daa
nop
test
pushf
pandn
mov
mov
jnp
data16
fstp
push
dec
(bad)
scas
cmc
sub
addr16
or
mov
sub
daa
jp
loopne
mov
jecxz
arpl
(bad)
xchg
jae
jns
shr
ss
(bad)
cmp
sub
pop
int
es
sbb
scas
adc
(bad)
sub
(bad)
call
jo
jmp
dec
inc
(bad)
xchg
fdivr
dec
jg
push
dec
popf
bound
and
add
mov
dec
cmps
adc
or
pop
push
repnz
cmp
inc
(bad)
iret
call
add
add
addr16
sbb
inc
sbb
or
inc
das
push
sbb
pmaxub
jmp
add
rcr
adc
hlt
popf
sub
repz
jns
xor
outs
ja
push
add
jecxz
sub
jl
test
aad
add
mov
inc
mov
clc
mov
pushaw
aad
in
jo
inc
rcl
data16
or
jecxz
inc
dec
outs
scas
jns
cmp
call
repnz
inc
stc
dec
xchg
fs
sbb
xor
sar
push
(bad)
int
mov
inc
or
mov
jo
gs
jge
imul
addr16
add
nop
out
rcr
int3
movs
xor
(bad)
fcmovnu
scas
enter
das
push
mov
pop
retf
dec
cmp
(bad)
jge
mov
xor
mov
pop
add
mul
cdq
xor
mov
mov
mov
dec
clc
inc
(bad)
cmp
mov
enter
lea
sub
nop
mov
out
xchg
push
mov
ja
aaa
sub
popf
(bad)
or
pop
loop
fwait
dec
aaa
rol
test
dec
xchg
stos
push
fwait
xchg
pop
(bad)
mov
push
shl
mov
push
(bad)
div
push
into
and
add
xor
mov
js
mov
dec
pop
xchg
push
mov
mov
retf
aam
test
call
dec
ja
adc
scas
aaa
and
dec
jecxz
add
sub
xchg
in
sti
cmp
lahf
cmp
add
rcr
jge
ficom
iret
cmp
not
xor
arpl
sbb
adc
scas
pusha
push
jnp
inc
mov
call
inc
movs
or
sbb
add
add
icebp
fsub
stos
loope
jge
add
dec
fs
dec
mov
cs
fidiv
cmps
xchg
jmp
pop
add
adc
outs
jne
pusha
sub
pop
aam
dec
mov
cmp
pop
(bad)
lahf
data16
xchg
popf
(bad)
shl
dec
jnp
out
ja
fnstcw
movs
push
jnp
std
dec
sbb
mov
into
fsubr
dec
and
imul
std
mov
add
push
push
push
(bad)
sahf
jbe
ss
adc
movs
fld
pop
push
scas
cwde
fadd
add
mov
sar
cdq
clc
mov
jge
in
mov
shr
sub
dec
sbb
dec
adc
xchg
xlat
or
inc
int
rcr
push
jp
sub
popa
pop
test
inc
jp
cmps
daa
jecxz
inc
cmps
mov
lods
test
cs
movs
outs
scas
sub
sti
xor
xchg
mov
test
pop
iret
int
mov
inc
dec
xor
pop
adc
mov
test
dec
divps
lahf
(bad)
cwde
jne
nop
aaa
test
or
or
inc
retf
xor
cmp
shl
(bad)
icebp
fisttp
ja
mov
mov
cmps
push
or
cmps
popa
and
pop
js
fsubr
sub
out
add
mov
(bad)
adc
arpl
inc
popa
int3
pop
jle
inc
fsub
add
sub
retf
pop
int3
call
rcl
pop
mov
push
shl
aaa
fwait
mov
fimul
or
mov
das
jnp
and
xlat
test
repz
shl
push
adc
adc
shr
xchg
fcomp
cmp
inc
(bad)
mov
shl
ds
sbb
and
stc
inc
addr16
sub
pop
mov
push
in
stos
ins
pop
and
mov
jg
and
(bad)
lods
jg
shr
ins
dec
jo
add
stc
mov
cli
ds
mov
std
push
sbb
imul
and
xor
xor
popa
mov
mov
cs
push
and
mov
cld
icebp
mov
retf
jns
lock
mov
stc
imul
lds
cdq
stc
out
out
loopne
(bad)
cmp
xchg
mov
xor
sbb
cmc
adc
sub
out
xchg
ins
imul
test
call
(bad)
xchg
mov
outs
(bad)
dec
ja
dec
sahf
jle
cmp
pop
fnsave
add
push
aam
mov
mov
add
xor
fdivr
sbb
clc
jo
sub
sub
cld
fnsave
fcomi
xor
push
jge
stos
jg
stc
les
pop
mov
add
sbb
jmp
gs
ja
sub
mov
inc
push
in
enter
xchg
sbb
mov
jecxz
arpl
mov
sbb
xchg
(bad)
jle
cli
push
jmp
ret
jnp
and
and
mov
call
cmp
jnp
fdiv
mov
outs
es
mov
or
mov
clc
nop
jns
push
inc
mov
jb
sbb
cdq
jae
or
sbb
pop
int3
jg
inc
push
add
xchg
popa
mov
nop
pushf
mov
mov
lods
jnp
pop
loop
arpl
out
sar
jmp
loopne
call
xor
sub
push
call
hlt
inc
pop
mov
ins
xchg
into
je
mov
sub
cmp
mov
out
inc
mov
push
xchg
push
fmul
push
(bad)
mov
addr16
out
(bad)
mov
push
sub
(bad)
repz
or
push
mov
adc
inc
or
pop
cmp
cmp
mov
fild
adc
cwde
sbb
xor
test
xchg
cmp
gs
cmp
cmp
sti
punpcklwd
neg
jmp
dec
retf
sbb
rcr
cmp
pushf
int3
xchg
test
mov
cli
mov
mov
lahf
xchg
xchg
pop
(bad)
popa
add
ins
ins
lods
pushf
idiv
ret
sbb
loopne
icebp
inc
hlt
cmp
ja
call
dec
mov
mov
push
mov
dec
ja
rcr
adc
cmp
sub
shl
push
mov
or
repnz
cmp
les
loope
pushf
fwait
rcr
xor
sbb
ja
mov
leave
jbe
aad
cwde
popf
stos
scas
xchg
outs
test
cmp
adc
xor
push
inc
je
scas
dec
js
sbb
call
xor
jmp
stc
jge
pop
pushf
loop
and
pusha
mov
adc
dec
xchg
mov
jl
sub
lea
sbb
call
mov
or
or
movs
into
scas
mov
rol
pusha
dec
fist
cmp
dec
ret
out
ds
in
leave
sbb
je
cvtps2pi
jns
dec
movs
adc
xchg
in
push
xchg
and
out
and
sar
mov
aam
mov
fistp
(bad)
hlt
cdq
push
push
scas
dec
adc
jmp
push
aam
or
push
sahf
cmp
inc
js
scas
(bad)
xchg
lea
push
add
out
shl
cld
xchg
nop
xor
cmp
mov
and
lea
jae
icebp
push
fstp
call
int3
(bad)
and
mov
mov
jno
inc
mov
ins
retf
cmp
repnz
or
push
and
dec
push
out
dec
inc
shr
pop
shr
sub
sub
push
sub
mov
into
jg
xchg
popf
cmps
jne
lock
sub
add
mov
repnz
fcmovne
sub
pop
clc
in
int3
mov
xor
popf
adc
mov
cmp
ja
jl
movs
rcl
jb
jbe
add
xchg
cmp
xchg
imul
xchg
out
and
pop
mov
xchg
xchg
shl
or
daa
(bad)
adc
pop
xchg
jmp
lds
test
mov
jne
(bad)
repnz
sub
and
aas
mov
or
repnz
sbb
xor
(bad)
popa
ret
mov
in
mov
pop
lock
stos
aad
jmp
add
jecxz
icebp
cmp
sbb
mov
mov
mov
pop
bnd
jb
push
(bad)
popf
xor
jne
je
or
push
unpckhps
mov
dec
and
repz
pop
and
xchg
mov
jmp
pusha
movhps
dec
and
rcl
pop
mov
inc
mov
cmc
xor
fild
imul
lods
mov
fmul
test
sbb
movs
(bad)
rcr
mov
inc
repnz
out
ret
mov
mov
mov
fstp
cmp
aaa
xor
ficom
cmp
jg
(bad)
push
shl
and
xor
loopne
sbb
jns
ja
pop
pushf
sti
sub
js
shl
das
ficomp
sub
push
adc
fs
stc
adc
in
cmp
cli
scas
mov
gs
adc
xchg
cs
xor
fcomip
call
add
mov
ror
xchg
fs
dec
(bad)
stos
pop
mov
test
push
inc
jle
leave
or
div
leave
mov
imul
push
xchg
cmc
(bad)
fcom
jl
(bad)
push
cmp
xchg
cmps
out
or
test
sbb
out
or
in
aad
sbb
popf
add
xor
ret
ret
push
sbb
lea
js
and
jno
pusha
push
push
repz
cmp
inc
mov
push
pop
mov
je
mov
inc
dec
and
jmp
push
mov
xchg
jl
xchg
pop
inc
xor
cmp
dec
jmp
call
sbb
push
es
ss
ins
pop
jecxz
gs
neg
(bad)
and
inc
addr16
(bad)
push
cmp
inc
sub
mov
mov
or
outs
sbb
fidivr
pop
ja
pop
add
jo
outs
push
neg
loopne
pop
or
xchg
add
std
adc
ret
ss
sbb
dec
es
xchg
sbb
call
fadd
jge
mov
fdivr
(bad)
inc
jmp
inc
icebp
xor
hlt
mov
adc
push
add
xchg
frstor
cmp
cmp
jns
cld
xor
pop
jmp
adc
pusha
fmul
(bad)
outs
lock
mov
popa
push
inc
inc
push
in
pop
frstor
pop
fmul
xchg
in
add
add
jg
xor
lods
lods
cmc
ja
sub
xchg
pusha
ffree
mov
loopne
xor
xchg
adc
cdq
aam
add
cld
out
add
cmp
add
fidivr
sbb
out
xor
fst
(bad)
sub
mov
(bad)
retf
fnstcw
xchg
sbb
or
loope
lahf
jb
gs
ficom
rol
jno
sbb
and
push
and
lock
sti
mov
cwde
jmp
push
xchg
rcr
dec
xor
gs
and
jne
cmp
(bad)
add
mov
sub
out
call
out
test
adc
and
mov
add
add
sub
dec
jp
xchg
sar
add
pop
xchg
mov
jbe
mov
bound
lahf
or
neg
out
dec
adc
jmp
or
xor
test
imul
je
push
ins
add
lods
outs
neg
inc
and
jnp
mov
sub
add
cmp
test
mov
outs
outs
jecxz
sub
xchg
icebp
add
pop
add
add
ins
stc
sub
sub
cmps
in
or
jbe
pusha
xor
push
mov
sub
push
sbb
dec
pushf
sub
inc
lods
push
push
add
mov
fwait
test
xchg
aad
es
adc
fimul
sbb
test
aad
pop
lahf
sbb
and
mov
mov
pop
loope
or
cs
adc
adc
pop
and
fistp
lea
out
(bad)
es
stc
movs
movs
mov
jb
out
repnz
dec
call
inc
push
sub
xor
mov
aam
inc
mov
inc
fdiv
inc
push
or
jp
punpcklbw
add
imul
and
imul
mov
test
sbb
jl
movs
in
addr16
and
dec
lods
ins
(bad)
xlat
push
fisttp
cmp
mov
mul
inc
or
cmp
cs
or
enter
pop
xor
mov
dec
call
je
xor
dec
mov
js
add
movs
inc
xchg
mov
outs
cmp
and
hlt
ins
cli
test
push
not
lea
movs
call
inc
pop
xchg
popa
xchg
aas
xchg
lea
in
sar
fs
xchg
pop
inc
xor
or
sbb
cmp
mov
xlat
test
repnz
and
jns
shl
sub
mov
xchg
inc
push
test
cmps
mov
fcmovnb
mov
jns
std
push
jge
(bad)
jle
fcom
jnp
pop
pop
jns
mov
arpl
lock
adc
ror
adc
sub
mov
adc
cmp
hlt
pop
mov
mov
lods
stos
add
jbe
sbb
xor
inc
fcomp
dec
sbb
sub
xchg
sti
jbe
int
or
jg
jle
push
shr
cmp
mov
inc
out
jmp
cmp
xor
mov
jp
daa
mov
xchg
jmp
mov
(bad)
(bad)
sbb
mov
loope
fs
xor
xchg
push
int
add
mov
fisubr
mov
pop
mov
mov
fmul
fwait
push
cmc
cmp
data16
test
sbb
mov
inc
mov
test
outs
cmp
add
arpl
jno
icebp
xchg
xor
test
(bad)
add
push
jb
push
jle
std
fucomip
add
dec
hlt
sub
in
rep
mov
mov
imul
push
pop
adc
int
repnz
dec
mov
xchg
ret
push
cmp
sbb
mov
fldcw
adc
lea
xchg
pop
int3
sahf
je
in
adc
sbb
xor
pop
ins
xchg
jae
popf
nop
ins
xchg
ins
jbe
lods
jge
out
cs
(bad)
jmp
mov
std
mov
lods
call
(bad)
xor
in
cmps
pop
cmps
jge
xor
in
(bad)
mov
mov
leave
push
in
sbb
jns
aaa
test
add
cmps
movs
js
and
and
mov
xor
movs
push
out
test
jmp
mov
mov
loop
loope
dec
mov
movs
push
sbb
xchg
sar
add
lods
mov
rcr
mov
and
cli
movs
pop
cmp
sub
mov
test
ror
cmp
bnd
pop
das
test
loopne
mov
sbb
fs
jno
pusha
rol
adc
add
repnz
gs
ja
test
jg
pushf
bound
test
addr16
jns
push
pop
mov
jmp
iret
cmps
lea
or
adc
sbb
dec
mov
sub
mov
adc
aam
mov
dec
pop
mov
mov
add
jo
and
jns
sbb
mov
cmp
mov
pop
xchg
pop
sbb
js
loopne
sbb
jge
or
adc
popa
jp
xlat
ss
fdiv
mov
idiv
xor
sub
addr16
div
nop
test
push
fld
jge
jp
nop
in
movs
jne
mov
popa
je
cmp
mov
popf
mov
push
sub
cs
mov
mov
inc
fbstp
add
pushf
xlat
dec
and
outs
repnz
sbb
mov
mov
scas
test
dec
ja
js
or
add
popa
push
int
sbb
lods
das
scas
mov
fld
outs
mov
sub
mov
xor
jae
and
pop
add
imul
pop
xchg
and
imul
ins
lea
(bad)
jp
dec
mov
fwait
outs
repnz
add
pop
sbb
loopne
cli
sbb
add
pop
ins
les
xor
jmp
in
dec
mov
mov
pop
hlt
cld
dec
hlt
push
iret
push
mov
pop
lods
das
jb
sub
addr16
jp
cmc
ss
scas
sub
inc
xor
test
and
dec
cmps
call
mov
push
sahf
pop
sub
movs
loope
jge
stos
out
xchg
add
inc
jle
rcr
add
push
lock
fs
cmp
int3
dec
or
test
pop
push
pop
xchg
push
add
xor
bound
jmp
aaa
inc
and
je
cmps
push
mov
mov
dec
sti
call
pop
or
fwait
mov
mov
ret
mov
es
not
cmp
cmps
push
xor
test
dec
push
and
dec
out
push
fwait
mov
lea
or
mov
(bad)
out
dec
xor
rcr
jb
outs
mul
fwait
stos
std
sti
or
or
dec
cmp
xchg
imul
lds
adc
and
lahf
stos
add
add
or
imul
daa
popf
imul
movs
jle
fwait
inc
scas
or
(bad)
mov
push
xor
out
sub
lods
into
sub
sbb
push
mov
popa
adc
aad
pop
rcl
sysenter
mov
jne
mov
xor
call
dec
mov
sub
sti
sub
call
dec
mov
retf
sub
pop
xor
mov
sub
xchg
stos
in
lock
retf
ret
(bad)
xor
inc
mov
jmp
inc
push
push
jecxz
add
dec
jae
pop
push
clc
fsub
(bad)
int
mov
dec
push
push
mov
and
pop
fs
rol
idiv
(bad)
jge
sbb
and
daa
repnz
dec
push
enter
mov
mov
fnsave
add
adc
mov
retf
and
or
leave
inc
ja
in
mov
scas
mov
and
adc
dec
hlt
hlt
scas
jbe
fbstp
jmp
rol
dec
and
mov
outs
addr16
dec
dec
push
and
fnstenv
xchg
out
shr
sub
in
shl
sub
int
jp
dec
dec
pop
jo
adc
out
pop
mov
scas
fwait
mov
jge
mov
ret
pushf
xor
mov
popa
ret
movs
push
outs
jb
inc
sar
mov
mov
stc
into
inc
mov
out
mov
fistp
add
into
rep
push
mov
enter
xchg
jnp
call
push
ret
push
sar
loopne
xchg
je
cmp
cli
repz
pop
add
dec
and
sbb
pop
mov
xor
or
push
push
jp
leave
jnp
sub
add
xor
loop
neg
inc
and
jnp
(bad)
stos
in
data16
js
mov
pop
fwait
sub
mov
fist
or
and
test
xchg
dec
jns
dec
sbb
mov
mov
fdivr
mov
in
movs
mov
push
loop
mul
xor
stc
sbb
xchg
inc
fistp
mov
pop
and
sbb
cmp
jmp
sbb
imul
push
lea
inc
movs
dec
jp
test
(bad)
lahf
push
leave
pop
stos
frstor
call
mov
and
or
or
mov
push
nop
push
fld
add
inc
push
xor
xor
daa
lock
jno
add
sbb
nop
ins
mov
add
dec
push
ins
sub
(bad)
fidiv
pop
repz
cwde
iret
fsubr
in
jae
out
imul
add
xor
and
stos
inc
push
jno
dec
add
add
call
mov
jmp
cmp
fdivr
add
sub
(bad)
push
addr16
fstp
ror
jp
jne
scas
jo
fcomp
rcr
and
inc
mov
cdq
pusha
push
sbb
daa
adc
sbb
push
aad
ficom
cli
out
push
cmp
mov
fcmovne
dec
in
add
xchg
scas
add
or
mov
out
aad
and
add
xor
cwde
loop
jg
sbb
pop
mov
lods
or
mov
call
and
inc
push
mov
inc
sbb
xlat
jb
mov
jl
stos
sub
pop
jecxz
mov
popf
in
test
adc
pop
aam
push
xor
push
adc
inc
psrlw
arpl
xchg
lea
mov
ds
xchg
pop
ds
fwait
in
aas
sub
test
add
xchg
adc
out
ds
xchg
(bad)
pop
nop
adc
fmul
mov
aas
pop
call
sub
in
inc
pushf
xor
addr16
rcr
lar
out
fisubr
dec
mov
sahf
(bad)
ja
xchg
cli
mov
fnstsw
aaa
add
inc
cli
mov
inc
ins
jl
mov
mov
push
pushf
neg
dec
ror
mov
(bad)
mov
fild
sub
dec
stos
popa
sbb
fcomp
mov
xlat
xor
sbb
or
in
scas
and
pop
and
mov
ins
xchg
out
in
jnp
mov
lahf
cmc
cmp
scas
fbstp
retf
aaa
div
aam
mov
adc
sti
dec
pop
sbb
cs
sbb
inc
cli
cmp
mov
enter
pop
cmp
mov
into
adc
inc
aad
push
into
loop
inc
push
or
sub
hlt
adc
call
inc
mov
jecxz
push
xlat
mov
jmp
xchg
mov
ret
or
add
cmps
(bad)
sbb
ins
jae
or
sub
add
in
sahf
sub
(bad)
stos
loop
add
imul
sbb
jge
sub
retf
in
in
pop
mov
mov
add
repz
add
jae
loop
mov
in
mov
aaa
inc
mov
iret
(bad)
lods
or
int3
retf
rcl
call
adc
jl
xor
sub
sbb
(bad)
fcmovne
test
adc
push
(bad)
imul
add
cmp
jne
in
repnz
lahf
sti
ret
mov
cdq
and
jb
iret
push
cmps
jo
jnp
test
leave
les
in
scas
push
pop
push
sbb
xchg
sti
dec
jne
pop
mov
jne
mov
mov
mov
fadd
in
shl
adc
out
retf
iret
mov
push
inc
inc
and
aaa
mov
jge
not
int
nop
inc
shr
in
add
retf
sbb
add
dec
sub
aam
shl
push
mov
cld
adc
(bad)
into
out
idiv
xchg
cld
fisub
out
xchg
pop
daa
iret
loope
pop
f2xm1
jo
sbb
xchg
sbb
push
adc
mov
jns
jo
and
popa
cmp
call
jo
das
gs
add
cmp
or
xor
mov
push
cmp
pop
bound
inc
imul
clc
or
push
cld
add
mov
jp
sub
cmp
jge
pop
mov
xchg
jp
pop
cmp
es
xchg
neg
leave
dec
leave
cmps
icebp
jge
add
sbb
retf
data16
and
aaa
sti
stc
fist
ins
out
push
mov
(bad)
call
sub
out
loope
jge
push
aam
lods
jns
fsubr
ins
pop
fiadd
pop
fidivr
mov
sub
dec
push
xchg
jge
repz
arpl
push
xor
sub
jns
jo
test
out
fs
in
int3
mov
leave
pop
sub
push
mov
inc
(bad)
xor
xor
dec
push
stos
mov
aaa
pop
retf
in
inc
xchg
xor
arpl
addr16
aam
push
sub
lock
or
fdiv
data16
lock
mov
lods
bound
dec
ins
xchg
scas
sbb
(bad)
lods
sub
push
mov
and
std
or
sub
clc
push
je
test
cmp
jge
or
and
(bad)
inc
leave
mov
push
leave
push
imul
mov
adc
pop
ret
pusha
mov
leave
jae
push
ret
out
ins
ret
data16
fadd
pusha
sahf
cwde
mov
aam
popa
mov
mov
adc
jae
push
or
cs
inc
jno
(bad)
movs
pop
pop
mov
call
mov
add
test
and
sub
add
xor
jge
rcr
mov
fsub
mov
mov
push
mov
mov
add
test
xor
pop
push
fldcw
sbb
push
jecxz
lock
cli
add
or
lods
or
nop
cs
adc
pusha
mov
push
or
pop
iret
hlt
aad
fcom
into
push
repnz
xchg
and
dec
jmp
enter
or
aas
scas
xchg
adc
or
mov
push
in
pop
mov
cli
mul
repz
repz
jg
cmc
outs
daa
or
outs
out
add
or
out
rep
arpl
mov
adc
cmp
mov
ins
xchg
jns
cli
mov
rcl
lods
dec
shr
mov
imul
push
pop
hlt
aas
rol
in
dec
add
xor
hlt
test
fistp
mov
fnstcw
cmc
mov
jnp
mov
mov
into
and
test
stos
mov
jmp
ss
mov
or
mov
(bad)
clc
pop
and
dec
out
ret
div
mov
lahf
std
icebp
cld
xor
fwait
(bad)
mov
cmp
add
out
test
leave
pop
cmps
test
loope
jns
add
lock
cmps
adc
jl
fwait
xchg
xchg
mov
test
sub
nop
fwait
lods
pop
inc
sti
ret
jle
jns
mul
inc
inc
out
sub
adc
add
rcr
(bad)
and
in
ins
adc
into
nop
(bad)
xor
xchg
(bad)
fnsave
repnz
jp
leave
xor
es
movs
push
popf
mov
in
popf
xchg
cli
dec
xor
popa
lea
xor
and
push
cmps
icebp
(bad)
cdq
ja
repz
call
mov
cmp
fdivr
fisub
popf
je
xchg
enter
repnz
jo
leave
fwait
adc
clc
ss
test
sbb
cmp
pop
test
js
(bad)
push
hlt
xchg
mov
cmc
scas
add
pop
sbb
mov
nop
xor
daa
rol
and
rcl
div
push
cld
lds
sub
mov
add
dec
push
mov
mov
lea
(bad)
mov
push
sti
dec
fs
xor
js
mov
test
jne
pushf
and
enter
popa
inc
std
push
push
push
add
xor
movs
lock
(bad)
cli
std
call
mov
(bad)
scas
sbb
mov
mov
add
lods
scas
ror
dec
cs
or
xchg
mov
into
test
push
and
xchg
sahf
mov
loope
and
ins
and
lea
pop
sub
adc
shl
push
and
jo
inc
mov
das
xor
jae
dec
outs
jp
leave
mov
shr
enter
shl
cmc
push
retf
push
or
sar
shl
sub
sbb
(bad)
dec
into
dec
or
and
sar
ror
add
jo
jg
in
jg
add
pop
mov
jnp
adc
jb
call
xor
in
push
cwde
add
push
pop
sub
mov
push
dec
arpl
mov
dec
add
pop
sub
xchg
or
dec
cli
mov
rsm
sub
push
enter
cmps
inc
jmp
outs
jno
in
shl
mov
mov
outs
call
and
pop
lods
rol
mov
retf
mov
pop
mov
adc
dec
xor
stos
cwde
jno
jmp
pop
out
add
scas
aam
popa
sbb
cwde
cmps
push
out
adc
push
movs
jns
daa
in
or
pop
lock
ret
loopne
adc
iret
addr16
int
jo
addr16
out
mov
popa
icebp
retf
mov
adc
dec
scas
and
xor
xchg
test
mov
out
jmp
iret
or
xor
cmc
xlat
enter
test
jno
jo
mov
mov
fsub
jb
data16
popa
cmp
enter
test
inc
mov
dec
(bad)
jo
cmps
test
push
icebp
push
enter
cmp
adc
mov
ss
lds
ret
outs
pop
sub
fild
xchg
add
push
std
sahf
cs
mov
jnp
inc
mov
movs
clc
sub
in
inc
jo
adc
popf
cmp
jae
push
ret
mov
sub
sub
(bad)
in
adc
cld
in
call
dec
inc
test
bound
mov
cmp
and
lods
push
pop
xchg
mov
lea
push
fwait
sub
or
cmc
adc
ds
std
cmp
xor
push
std
pop
scas
sti
push
por
push
cmp
sub
mov
xor
mov
movs
fldenv
je
call
cmp
movs
iret
mov
sub
jecxz
out
add
mov
adc
ficomp
in
pop
jmp
lods
int3
js
pop
or
fdiv
les
xchg
stc
sub
xor
lock
sub
mov
fisubr
hlt
mov
push
ins
gs
pushf
pop
xchg
xchg
enter
cli
out
sub
arpl
enter
sbb
xchg
in
jg
fs
popa
push
xchg
lods
loope
popf
es
div
push
sbb
or
dec
loopne
mov
ret
leave
aad
call
jg
dec
inc
inc
adc
pop
inc
sar
xchg
and
scas
call
mov
sub
imul
xchg
dec
xchg
xor
loopne
mov
aaa
out
bnd
or
jl
push
(bad)
or
sub
(bad)
dec
xchg
sar
fisubr
retf
sub
add
sub
mov
dec
and
imul
or
les
cdq
xor
popa
adc
push
in
cmp
sub
cmps
je
gs
and
xchg
adc
daa
test
ss
icebp
inc
pop
or
mov
cld
mov
int3
icebp
xor
bound
out
not
xchg
jmp
shl
sbb
dec
mov
dec
out
fcomp
push
mov
cmp
scas
in
je
sete
fadd
inc
jbe
pop
popf
sahf
mov
test
(bad)
loope
ins
dec
into
sub
jno
ss
xchg
push
adc
xor
js
mov
and
pusha
push
iret
or
cmp
and
dec
js
hlt
push
mov
outs
pop
mov
in
(bad)
adc
ror
neg
lds
fild
push
xchg
outs
stc
lock
call
adc
pop
int
sar
jno
outs
iret
mov
and
cmp
xor
or
push
or
and
dec
iret
or
jmp
mov
pop
fstp
fnstcw
push
loopne
xchg
mov
lods
pop
inc
pop
ret
push
pop
push
and
pop
adc
lock
stos
stos
ja
cmp
dec
and
push
shl
repz
je
inc
and
mov
inc
push
in
cmp
cmc
imul
into
arpl
pushf
rol
mov
ret
dec
add
push
push
lods
out
mov
jo
shr
xor
outs
add
test
push
xchg
movs
adc
inc
mov
fcomp
les
sbb
add
fsub
ss
out
aaa
lock
push
mov
mov
js
aaa
pushf
sub
mov
(bad)
and
inc
add
or
dec
or
adc
outs
imul
lock
xchg
and
add
repnz
rcl
cmp
push
pop
outs
adc
mov
cmp
cs
push
call
pop
cmps
cdq
das
xor
repz
mov
sbb
add
cmps
stc
and
mov
or
sub
mov
je
fnsave
lods
sahf
sub
jle
mov
pop
std
fxch
(bad)
pop
(bad)
mov
dec
adc
js
push
adc
test
sub
add
std
and
mov
jle
out
inc
into
test
xor
jmp
adc
arpl
loopne
pushf
popa
sti
cmp
jno
stos
mov
jne
xchg
outs
adc
xor
daa
ja
jecxz
scas
xor
test
mov
and
sbb
ret
inc
rcl
outs
push
stos
call
sub
mov
scas
mov
test
loop
test
cmp
enter
pop
xlat
ja
or
sbb
or
sar
stc
mov
or
pusha
nop
aaa
out
dec
(bad)
daa
xchg
inc
cli
scas
jecxz
push
pop
sti
rol
xor
inc
(bad)
pop
fistp
jg
and
cmp
mov
retf
mov
into
sbb
mov
sbb
inc
add
add
mov
in
pop
outs
adc
mov
mov
loop
scas
jecxz
push
cld
or
idiv
sub
pop
sti
adc
mov
add
dec
xor
out
jmp
sub
out
loope
imul
lahf
mov
sub
daa
add
cli
add
in
lea
test
jge
test
mov
out
mov
and
push
sti
mov
cmps
jmp
cmps
add
ret
je
sbb
jns
aam
outs
lock
xor
xor
in
ja
in
ins
pop
ret
lods
mov
cwde
push
jle
mov
leave
xchg
mov
add
inc
xor
movs
xor
lods
out
xchg
push
out
inc
sub
or
sbb
test
add
nop
mov
js
or
inc
mov
inc
mov
cld
or
sub
outs
ins
mov
xor
repz
popa
cmp
sbb
push
sub
xor
icebp
retf
ins
fwait
xchg
fild
xor
mov
adc
mov
dec
scas
push
xor
out
sbb
iret
retf
(bad)
and
fdiv
lahf
xor
stos
mov
cld
push
fbstp
push
jbe
sub
js
or
inc
or
cmp
icebp
push
mov
pop
ret
xchg
sub
adc
pop
xor
inc
fcomp
inc
addr16
or
fst
xor
sar
jecxz
xor
adc
fsubp
fst
in
mov
fsubrp
inc
stos
movs
stc
pop
and
sbb
(bad)
push
imul
adc
adc
fidivr
or
jno
jecxz
mov
mov
push
fld
lds
pop
enter
or
jl
push
jns
add
int
cmc
pop
cmp
repnz
or
mov
mov
cmps
inc
push
sar
adc
mov
stc
mov
icebp
sahf
cmps
aas
fmul
ret
(bad)
shl
xchg
dec
sbb
mov
bnd
push
movs
call
pop
outs
push
je
scas
cli
mov
call
sub
retf
push
cmps
pushf
aaa
mov
and
xchg
iret
add
daa
mov
cs
cmps
inc
xor
mov
or
scas
test
push
loopne
push
sbb
repz
ds
jmp
xor
cmps
push
sti
cmp
and
popa
xlat
adc
jecxz
test
outs
outs
dec
ror
inc
call
aad
pop
mov
nop
mov
sbb
popf
and
sahf
add
mov
mov
add
add
sbb
les
lods
gs
dec
jmp
not
leave
outs
cwde
in
(bad)
dec
into
inc
movs
mov
rol
xor
xor
sti
loope
xchg
sub
shr
je
add
ja
jae
retf
sub
push
xchg
jle
imul
mov
pop
sti
jns
jo
stos
leave
xchg
xchg
rcl
aam
popf
in
retf
cmp
inc
rcl
mov
pop
inc
sub
xchg
loope
jmp
push
sbb
cwde
lahf
outs
jp
outs
ins
and
mov
in
mov
xchg
ret
or
and
shl
sbb
shl
jno
aaa
push
pop
inc
cwde
ret
push
or
test
daa
sub
popa
movs
jecxz
jecxz
fcomp
dec
mov
cmp
ds
cdq
push
dec
add
sbb
shr
cmp
dec
pop
shr
test
daa
aas
push
fs
sub
pop
push
inc
and
sahf
adc
int
push
or
outs
fmul
push
adc
add
cs
test
dec
dec
movs
mul
lods
lods
xchg
int3
js
ja
pop
call
inc
sbb
xor
ret
add
cld
shl
mov
fldenv
adc
mov
inc
xchg
inc
sahf
in
lds
sbb
mov
sbb
jl
jl
push
or
aas
loope
jno
adc
mov
movs
or
add
cdq
not
fst
add
pop
scas
cld
clc
fdivrp
xchg
mov
cld
fist
mov
cs
adc
jg
xchg
aad
pop
out
ret
mov
mov
(bad)
or
mov
sub
movs
push
xchg
les
jmp
stc
gs
(bad)
loopne
inc
cmp
add
and
xchg
jle
sbb
(bad)
jge
jp
shl
cmp
mov
das
lds
in
sub
xlat
push
sub
loope
movs
repz
and
adc
retf
in
rcl
jo
aaa
pop
call
out
ret
xchg
ret
mov
mov
and
fild
mov
inc
xchg
mov
pop
js
arpl
dec
push
fstp
mov
pop
ds
aas
adc
xor
push
or
aam
mov
lods
cli
ret
fnstcw
cwde
daa
jge
stos
jns
mov
scas
cwde
xchg
mov
popa
push
pop
mov
mov
mov
mov
dec
inc
cmp
adc
loop
out
movs
rcr
inc
in
cmps
add
idiv
xchg
hlt
pop
clc
xor
cli
cwde
shr
idiv
mov
xor
clc
jmp
hlt
stos
mov
data16
inc
loopne
cmp
sbb
xchg
mov
cld
fisubr
out
inc
stos
sti
mov
jmp
push
mov
rcl
enter
test
fcomp
or
xor
int3
jbe
daa
mov
sbb
xchg
aas
sub
mov
jmp
pop
dec
(bad)
xchg
mov
mov
mov
fnstsw
xor
pop
sub
pop
mov
mov
cmp
jb
jno
cmp
push
je
aas
jns
xchg
push
cmps
(bad)
sbb
mov
mov
push
jbe
push
stos
call
test
in
lea
test
dec
dec
stos
in
jg
and
(bad)
pop
jmp
test
pushf
sbb
jmp
mov
adc
cmp
push
inc
sbb
cmp
rcl
mov
adc
test
ret
or
fimul
jne
(bad)
nop
in
xchg
popfw
adc
pop
in
shl
push
ins
inc
aaa
or
add
outs
adc
mov
cmps
mov
xchg
sub
or
js
in
cmc
cs
jmp
ins
push
in
xlat
xor
xchg
imul
outs
das
enter
and
or
shl
mov
pop
and
mov
push
call
cwde
or
in
retf
cmp
jge
dec
das
sub
sub
adc
xchg
lods
cmp
sti
add
bound
iret
mov
push
sbb
(bad)
gs
fsub
mov
and
mov
add
adc
(bad)
inc
fimul
jb
sbb
loop
ficom
adc
pusha
cmps
xor
mov
repz
dec
in
push
mov
pop
xchg
les
xchg
push
in
lock
fwait
xchg
mov
xor
jp
mov
(bad)
cmp
adc
mov
dec
movs
xor
sub
nop
test
dec
jmp
stc
pushf
or
sbb
mov
mov
in
pop
outs
push
in
in
xor
adc
std
push
lahf
mov
or
fld
or
(bad)
mov
fwait
cwde
and
push
nop
les
(bad)
(bad)
retf
sub
jne
je
(bad)
mov
sbb
loopne
dec
push
mov
inc
adc
fld
sbb
sub
cwde
ds
stos
pop
test
test
cmp
lea
loopne
std
movs
mov
cld
mov
mov
hlt
addr16
daa
stos
or
mov
sahf
or
add
adc
xchg
ffreep
nop
aad
into
std
retf
shr
cmps
and
xor
xchg
loope
xchg
les
mov
push
push
or
jne
loopne
lods
out
into
dec
repnz
paddq
sub
cmp
mov
or
pop
xchg
cs
or
add
test
cs
push
aad
out
out
aaa
sbb
mov
(bad)
(bad)
inc
sub
sub
and
push
cld
test
mov
push
ror
adc
cmps
xchg
dec
shl
inc
pop
jge
mov
jns
sbb
outs
jns
imul
mov
ins
inc
mov
xor
inc
shl
push
out
imul
and
add
sbb
sbb
push
push
fwait
outs
sbb
mov
xchg
cs
dec
and
jmp
shl
popa
repnz
std
push
jl
outs
push
push
je
aad
or
xor
lds
cmps
lods
dec
mov
xchg
(bad)
mov
(bad)
cld
ss
daa
std
mov
mov
stos
lods
or
and
fcom
sar
pop
sbb
push
fst
stc
cmp
int
pop
inc
fld
dec
cmp
(bad)
aad
scas
push
push
pop
aad
adc
mov
sti
sar
add
jne
add
mov
ja
push
inc
retf
jmp
mov
inc
iret
in
dec
mov
mov
pop
mov
xor
frstor
xchg
adc
mov
mov
mov
lea
aad
lahf
icebp
aaa
push
loop
loopne
aaa
mov
mov
adc
outs
dec
push
cld
ffreep
mov
ins
cli
xchg
or
pop
inc
mov
xor
outs
mov
inc
mov
fild
jle
dec
mov
jae
ins
out
in
movs
push
ins
mov
das
je
(bad)
xor
enter
dec
sar
ror
ret
ret
cmp
pop
fnstcw
jmp
pop
and
pop
retf
xor
lahf
dec
outs
xor
mov
mov
shr
inc
xchg
into
adc
pop
and
in
or
xchg
xchg
fdiv
pop
pop
push
(bad)
dec
int
dec
mov
adc
push
pop
sub
sbb
fisub
ds
loope
dec
xchg
sahf
repnz
pop
outs
fdivr
popf
rcr
push
fs
fcomi
imul
cs
fist
and
or
cmp
ror
jg
pop
es
gs
push
xchg
lock
mov
mov
jnp
and
sar
ret
(bad)
mov
movs
int
cmps
xor
popa
sub
and
jmp
cmp
dec
or
mov
mov
mov
pop
dec
cmp
into
sub
sbb
jno
mov
dec
or
jge
jb
adc
sbb
jbe
in
sar
stos
js
sub
add
call
jmp
test
js
repz
pop
sbb
cmp
cmp
cs
mov
push
adc
push
mov
adc
add
push
xchg
and
jg
inc
retf
inc
mov
adc
(bad)
and
add
fcomp
sub
call
data16
pop
mov
cmps
mov
mov
xchg
push
mov
mov
mov
test
push
adc
and
jo
in
mov
xlat
inc
mov
out
pop
or
inc
jb
xor
cmp
(bad)
nop
enter
movs
fild
mov
push
mov
mov
fdivr
adc
repz
cs
pop
jg
sti
jmp
movs
sub
retf
test
inc
stos
in
in
jnp
jmp
inc
std
fst
jbe
and
ret
in
cli
push
dec
retf
push
sub
rcr
ins
and
out
inc
ins
stos
mov
mov
fadd
mov
leave
(bad)
jo
sub
call
shl
sub
ja
lock
(bad)
pop
sbb
push
xlat
dec
arpl
fwait
jmp
xchg
add
push
add
sbb
jge
add
lea
xor
test
call
adc
or
repz
ins
lahf
int
cmp
in
pop
pushf
jecxz
dec
sbb
(bad)
xor
cmp
in
fcmovne
sbb
or
cmp
mov
imul
sbb
jp
stos
stos
shl
clc
shl
pop
test
retf
dec
loope
pop
jns
mov
popa
dec
mov
jo
ins
push
in
inc
faddp
pop
aas
aam
ds
(bad)
jo
push
imul
and
push
bound
je
xlat
lods
mov
and
cli
push
add
push
shr
pop
or
jns
rcl
pop
das
push
pop
adc
push
div
and
leave
scas
(bad)
lods
jmp
fwait
sbb
ficom
or
neg
les
mov
iret
out
call
sbb
xor
fstp
or
fldcw
xchg
pop
jp
fcmovu
jmp
mov
adc
dec
dec
call
xchg
pop
pop
aad
inc
push
stc
repz
jae
pop
mov
jmp
push
movs
inc
dec
pop
in
mov
xchg
loop
jns
cmc
sub
loop
ins
and
adc
cdq
lods
dec
call
push
xchg
or
pop
sahf
xlat
and
sbb
mov
rcr
(bad)
xor
sub
cwde
inc
enter
fisttp
mov
push
push
mov
fwait
or
push
js
push
(bad)
cdq
mov
sub
dec
push
mov
jnp
jp
lds
std
dec
out
aaa
add
orps
popf
js
mov
movs
mov
pop
fsub
inc
cli
out
sbb
mov
xchg
pop
in
jno
mov
xor
in
mov
popa
int
push
cmps
jl
sub
add
push
idiv
jmp
xchg
(bad)
xchg
mov
mov
or
scas
test
call
push
xor
jns
mov
push
adc
add
sbb
or
xchg
mov
ins
adc
xor
movs
sbb
pop
outs
outs
iret
pop
push
shr
jno
stos
mov
push
pop
adc
faddp
int3
outs
fmul
dec
enter
fwait
jmp
call
js
xor
push
push
stos
mov
(bad)
or
adc
popf
popf
iret
sub
repz
xchg
sub
es
mov
push
xor
inc
sub
imul
cwde
pop
pop
ret
iret
adc
jb
pusha
inc
cmp
adc
push
xchg
(bad)
mov
pop
jae
jo
adc
jne
cmp
mov
(bad)
pop
arpl
cs
sbb
sub
ds
loop
dec
dec
mov
fs
cwde
sub
data16
adc
mov
mov
ds
jle
fsub
sub
sub
sti
sbb
scas
jo
inc
es
jp
mov
mov
in
push
es
cmp
sbb
imul
pusha
adc
add
mov
pop
out
mov
jle
mov
push
or
fwait
out
jge
les
add
fwait
mov
mov
ret
rcr
icebp
call
push
adc
call
ds
jg
jo
mov
rol
outs
xor
ret
bound
std
pop
pusha
add
xlat
cmc
mov
das
and
or
imul
push
icebp
push
aas
sub
mov
popf
mov
cli
mov
mov
stos
inc
sbb
push
add
aaa
jmp
xchg
(bad)
adc
and
mov
mov
sub
cmp
sbb
imul
pmulhw
and
pop
stc
sbb
dec
js
cmp
gs
cmp
test
inc
ror
pop
nop
xchg
wbinvd
jl
or
mov
fist
fs
pushf
jne
jbe
js
call
mov
gs
mov
lea
out
les
jle
or
test
fisttp
dec
movs
pop
addr16
fmul
push
sbb
(bad)
hlt
sti
xchg
sbb
mov
pushf
stc
fist
aas
jae
dec
xor
adc
mov
test
adc
cmp
call
mov
adc
pop
xchg
push
add
stos
jb
cli
inc
aaa
or
out
sbb
mov
jl
sysret
cmp
mov
xchg
pusha
and
outs
repz
pushf
test
jl
test
or
dec
imul
ficomp
imul
ret
cmp
or
xchg
lds
ficomp
loop
sub
fidivr
dec
mov
push
shl
shl
inc
arpl
(bad)
fcmovnb
inc
call
inc
push
sbb
pushw
fsubr
pop
loope
ja
test
pop
push
mov
sbb
inc
hlt
lods
cmp
cmp
mov
mov
fiadd
and
popa
mov
dec
mov
or
sub
loopne
mov
lds
cmp
jnp
stc
ins
mov
add
pop
movs
cld
pop
fisub
cmps
fadd
pop
(bad)
mov
xor
sub
pusha
pop
aaa
imul
test
out
ins
push
ds
movs
push
sar
lea
out
jge
hlt
test
sbb
out
cmp
pop
scas
es
mov
add
adc
out
jmp
ret
jno
push
js
xchg
lock
mov
xchg
sub
test
xchg
out
adc
lds
into
jecxz
push
es
enter
dec
fsub
das
dec
adc
sbb
repz
sbb
cmp
in
sbb
sub
cwde
xor
push
jecxz
das
pop
sub
jne
dec
cmp
jmp
inc
inc
mov
and
cwde
shl
sub
jae
outs
mov
aaa
xor
leave
fwait
gs
call
mov
inc
add
repnz
pop
cld
and
add
movs
jne
add
mov
jb
inc
ins
mov
mov
sbb
jmp
retf
hlt
cli
es
mov
aas
leave
stc
or
xchg
xchg
jns
aad
mov
das
shl
cmp
cld
jmp
mov
inc
(bad)
xor
das
jbe
jecxz
std
add
pop
push
ins
test
retf
mov
jg
ins
icebp
jne
push
or
mov
loopne
jl
loop
sbb
arpl
or
inc
inc
loopne
pop
enter
xor
jbe
loope
mov
in
popf
lea
std
dec
push
xor
jne
stc
pop
adc
leave
mov
in
rcr
mov
fistp
jns
mov
repnz
mov
and
xlat
pop
xor
retf
cmp
jecxz
sbb
in
mov
mov
cli
jnp
cmp
aad
inc
dec
pop
cdq
js
cwde
mov
bound
jns
imul
iret
inc
cmc
adc
cmps
mov
in
mov
push
xor
pop
add
rcl
cmp
(bad)
cld
mov
pop
leave
and
xchg
push
in
leave
stc
mov
mov
cmp
push
xchg
jmp
jmp
cld
and
jg
daa
ficom
cmp
xor
xor
aaa
fwait
retf
sub
loope
cmp
adc
lods
jnp
stos
aaa
icebp
call
push
imul
push
sbb
cwde
push
jbe
shr
pop
mov
mov
and
shl
test
loop
pop
mul
and
or
push
imul
shr
mov
cmp
jg
sbb
cdq
or
push
sti
test
icebp
pop
or
loopne
mov
inc
stos
dec
inc
push
add
jne
loope
lods
shl
hlt
in
imul
pop
test
cld
lods
mov
scas
inc
jb
loopne
dec
adc
enter
xor
jge
sbb
pushf
adc
rcl
addr16
jbe
cmp
push
test
xor
and
xor
mov
inc
xchg
std
imul
mov
pop
(bad)
neg
push
jecxz
jo
pop
or
popf
and
inc
outs
pop
sub
mov
jecxz
adc
xchg
call
mov
loope
push
stos
inc
sahf
cmp
and
loop
pop
iret
enter
or
in
loopne
pop
or
in
shl
mov
or
add
add
jnp
lds
pop
repz
mov
in
adc
inc
lock
sub
cmp
into
repz
cwde
sub
rol
jne
or
(bad)
jbe
lahf
jg
cmp
mul
adc
mov
shr
jmp
int
addr16
and
stc
das
mov
mov
(bad)
xchg
inc
call
inc
sub
xchg
loopne
push
adc
jno
jmp
outs
sti
fbld
pop
mov
fmul
out
gs
daa
cmps
leave
pushf
mov
and
popf
mov
imul
lods
popf
mov
add
in
daa
mov
pop
jnp
fs
or
aam
jecxz
js
xor
pop
pminsw
dec
push
pop
pop
mov
xchg
push
push
sbb
js
sub
cmp
jg
(bad)
hlt
fimul
fst
out
(bad)
aad
xchg
dec
(bad)
out
xchg
ins
(bad)
es
addr16
xchg
mov
mov
cwde
push
mov
fistp
jnp
xchg
mov
(bad)
sbb
sti
mov
jmp
call
push
int
sub
mov
mov
pop
jg
cmp
mov
add
sbb
cs
and
push
cmp
(bad)
xor
loop
repnz
sub
outs
jae
push
xchg
jle
int3
fisubr
inc
mov
inc
jmp
adc
mov
js
cmps
pop
rol
pop
sub
mov
xchg
inc
sub
mov
inc
(bad)
mov
(bad)
sti
leave
fdiv
adc
loop
pop
jl
inc
sbb
sub
ins
in
push
jae
movs
pusha
jge
mov
sub
xchg
sub
out
mov
(bad)
(bad)
cmp
repz
xchg
test
pop
adc
enter
push
scas
loope
nop
mov
jns
(bad)
mov
pusha
scas
iret
inc
xchg
pop
and
add
das
repz
pop
xor
or
dec
ds
push
dec
outs
nop
int3
ja
sbb
test
jle
jb
outs
in
enter
inc
inc
repz
(bad)
test
pushf
cs
sub
add
or
fild
and
out
add
xchg
jo
mov
imul
and
les
aas
clc
cmp
test
scas
pusha
mov
sar
add
add
xor
mov
repnz
pop
test
dec
or
xchg
nop
shl
pop
test
push
cmp
cmps
hlt
jmp
dec
(bad)
mov
(bad)
xchg
cmp
sbb
mov
add
lock
rol
(bad)
(bad)
xlat
fld
sbb
mov
pop
imul
aaa
xor
das
out
jmp
push
mov
mov
jno
cmp
pushf
mov
sbb
cwde
add
cs
cmp
sbb
int3
pop
outs
push
sub
in
or
and
mov
sbb
imul
repz
jl
adc
retf
xor
leave
fnclex
lock
and
lock
ret
pop
jmp
inc
es
shr
fwait
gs
push
ja
inc
ins
jg
rcl
pop
cmp
pusha
out
cmp
stos
mov
xchg
sbb
or
xlat
xchg
mov
fwait
jecxz
lock
movs
xchg
xor
xchg
out
dec
sbb
push
cmps
sub
lods
jmp
inc
(bad)
sbb
seto
inc
ror
scas
adc
add
mov
jle
icebp
mov
dec
ja
into
mov
fcom
popa
add
fld
push
addr16
test
mov
shr
mov
mov
outs
rcr
mov
mov
fdivrp
shl
fwait
enter
jbe
cmps
mov
push
mov
mov
out
ret
xchg
pop
adc
sub
inc
into
and
inc
repnz
fadd
jle
pusha
cdq
push
in
mov
jo
jae
mov
ins
mov
push
push
xbegin
jnp
jne
or
sbb
mov
xlat
leave
test
loopne
lds
inc
mov
addr16
sub
test
adc
add
aaa
mov
push
push
pop
aam
ror
inc
imul
movntq
out
mov
xor
cmp
sub
fwait
cmp
sbb
sub
jns
add
cmp
add
jb
sti
not
dec
out
mov
mov
loope
aas
test
(bad)
mov
mov
in
sub
(bad)
(bad)
aam
cmp
ret
xchg
bound
shl
sbb
push
cmp
pop
je
mov
mov
inc
aad
dec
sub
jg
clc
fbld
jge
push
into
adc
jbe
or
jl
sbb
pusha
shr
outs
push
adc
fcmovu
push
dec
shr
and
or
test
push
aaa
pop
add
mov
enter
popf
push
pop
dec
cmp
in
xor
xchg
add
mov
retf
adc
fist
xor
cmp
mov
sub
lods
fwait
adc
mov
or
mov
mov
jns
jns
test
fwait
and
popa
lds
out
sub
shl
pop
sbb
jl
comiss
mov
retf
lds
pop
pop
add
mov
inc
push
mov
jne
es
imul
jns
aas
mov
addr16
sbb
cs
mov
xor
jmp
dec
or
sub
retf
dec
mov
push
movs
ds
jns
xor
inc
sar
sahf
jecxz
mov
add
scas
test
mov
cli
iret
and
cmp
sbb
adc
inc
aam
sti
ins
aaa
xchg
mov
add
inc
enter
or
cmp
addr16
pop
adc
stos
jnp
push
dec
hlt
loopne
dec
add
push
mov
mov
mov
inc
test
iret
in
push
sub
mov
cmp
and
outs
(bad)
inc
call
jg
adc
pushf
sub
ins
aam
rcl
loope
push
loope
xchg
sbb
push
push
adc
pop
in
inc
inc
mov
push
mov
push
cmp
mov
mov
cmp
inc
gs
fmul
add
and
dec
in
out
sbb
mov
or
dec
in
cmp
xrelease
sub
pop
jnp
sub
and
aaa
add
jbe
daa
jge
loop
aam
and
inc
cmp
pop
dec
mov
dec
jecxz
fidiv
jne
stos
dec
ficomp
mov
jbe
dec
ins
std
or
mov
sti
mov
xchg
das
das
(bad)
lods
mov
push
ficom
jne
in
repz
and
cld
out
cmp
jne
inc
add
mov
imul
mov
fadd
jb
pop
mov
push
jno
cld
mov
jge
mov
ret
ja
inc
inc
pop
sub
dec
mov
(bad)
pop
into
jle
leave
push
clc
add
add
xor
ret
mov
xor
inc
shl
daa
push
sti
sbb
pop
pop
mov
in
imul
xchg
(bad)
retf
icebp
sbb
std
mov
icebp
repz
int
mov
sbb
mov
(bad)
and
cmp
nop
pop
jecxz
pop
int3
call
test
cmp
adc
push
or
sar
pop
cmp
(bad)
xchg
adc
sbb
xor
clc
sahf
dec
jnp
cmp
sti
dec
sahf
(bad)
and
and
inc
jp
(bad)
fld
sbb
mov
fistp
mov
or
imul
adc
sbb
jnp
lods
mov
dec
gs
push
in
mov
mov
inc
(bad)
sti
pop
rcl
clc
cmp
xchg
arpl
(bad)
push
jns
fisubr
mov
dec
lods
ret
ret
mov
ss
popf
cmps
add
adc
stos
pusha
add
cs
ret
scas
scas
and
call
scas
mov
push
xchg
xchg
add
lods
cmp
ror
mov
sub
in
push
outs
mov
pop
out
jmp
xor
(bad)
and
sbb
aaa
rcl
mov
push
daa
mov
int3
pop
sub
push
mov
lahf
fild
adc
jnp
sub
and
(bad)
xor
test
cmp
arpl
nop
icebp
mov
mov
das
cmp
lock
mov
dec
cmc
bound
jp
leave
shr
cmp
adc
push
cmovns
icebp
cmp
retf
jg
inc
sub
sub
bnd
dec
mov
out
mov
jecxz
xchg
mov
cs
in
rcl
dec
gs
outs
push
mov
mov
jbe
cmp
test
or
call
sbb
adc
retf
in
scas
add
xor
je
lods
xchg
xchg
mov
sbb
jp
sahf
nop
scas
jmp
icebp
add
test
ja
pop
or
rcl
jns
mov
retf
mov
retf
sub
ret
xchg
mov
push
sti
xlat
or
sbb
vpcomuw
pop
fwait
test
scas
mov
test
call
pop
retf
cmc
mov
lahf
push
dec
mov
add
cmp
xor
imul
jge
loop
push
ret
std
sub
mov
pop
pop
imul
xchg
xlat
sub
push
or
out
daa
pushf
imul
pop
push
push
shl
and
aaa
call
or
pop
mov
xchg
xchg
shr
mov
jmp
fcmovne
mov
scas
ret
enter
fbstp
sti
ins
mov
sbb
test
mov
push
and
and
cmp
das
pop
test
cmp
mov
and
leave
ins
popa
pop
movs
or
std
fstp
cmovns
test
fcmovne
inc
stos
out
jmp
ins
cdq
xor
mov
mov
inc
movs
je
jge
dec
pop
aad
mov
fcomp
std
add
aas
mov
mov
jae
pop
or
pop
hlt
or
mov
sar
push
dec
sub
push
inc
bnd
and
arpl
sbb
dec
pop
cmp
xor
call
fiadd
mov
arpl
dec
mov
lea
inc
sub
nop
(bad)
mov
push
push
or
ins
xor
mov
jp
pop
mov
pop
repnz
push
jg
lahf
dec
out
inc
ja
test
fisttp
movs
out
pop
int
cwde
lock
fld
imul
(bad)
fdiv
and
or
in
push
or
jl
scas
idiv
or
cdq
add
int
fcomp
cmps
or
xchg
mov
jmp
fld
sbb
fisttp
fnstsw
shl
je
repnz
shr
out
push
sahf
shl
clc
cmp
imul
pop
aad
push
stos
push
loopne
sbb
add
lds
iret
jbe
in
gs
and
aas
sub
imul
mov
cmp
add
adc
lock
(bad)
pushf
out
sub
pusha
cmp
xlat
mov
or
adc
in
mov
cli
adc
jle
inc
je
xchg
cwde
std
push
sub
adc
cmps
aad
sti
push
lahf
add
xchg
call
pushf
add
push
mov
movs
jo
mov
sbb
ror
xchg
ret
loop
daa
and
xchg
add
test
inc
push
jno
mov
shl
cmps
jle
fs
shl
xchg
mov
dec
xchg
loope
and
aad
mov
mov
mul
ins
xor
inc
xor
or
jmp
dec
cmp
lock
dec
inc
loopne
out
sti
xchg
retf
or
mov
xor
dec
dec
lahf
jb
push
pop
mov
mov
mov
sti
aad
fst
push
int3
dec
sbb
mov
cwde
scas
xchg
pop
lods
push
test
fcmovnbe
test
pop
pusha
mov
inc
fisubr
adc
lods
xchg
dec
nop
test
xchg
test
pop
push
cmp
mov
jae
clc
xchg
icebp
push
pop
jg
in
outs
pusha
mov
test
(bad)
jge
test
sub
lock
cs
jbe
pop
movs
push
mov
inc
inc
(bad)
shl
inc
fisttp
daa
jmp
sub
out
mov
or
jp
xor
mov
adc
push
arpl
xor
jb
push
adc
add
fucomi
add
icebp
sar
dec
daa
sub
mov
add
dec
arpl
xchg
cmp
fs
out
out
ror
jp
dec
fcmovnbe
cld
arpl
xor
inc
in
sbb
xchg
mov
cld
push
addr16
adc
push
jbe
xchg
xchg
xchg
dec
je
shr
mov
aad
cmp
fadd
ficom
lea
sub
or
in
xchg
push
or
gs
popf
sar
sbb
call
je
inc
mov
mov
mov
fcomp
sbb
(bad)
repnz
popa
cwde
(bad)
cld
pushf
push
outs
enter
dec
cmc
pop
fnsave
mov
stc
pushf
aas
xchg
call
xchg
mov
push
xchg
pop
lods
in
hlt
add
pop
gs
sbb
cmp
retf
das
jp
mov
pop
cmp
cmp
retf
mov
test
in
daa
ins
xchg
cmc
iret
loopne
add
pushf
and
and
cmp
mov
inc
sysenter
hlt
mov
cdq
mov
cmp
xor
sub
pop
adc
cdq
mov
ror
loop
mov
(bad)
pop
std
adc
push
mov
sbb
or
add
pop
xor
scas
jnp
aas
ret
jmp
bound
mov
(bad)
jmp
push
inc
mov
mov
movs
mov
cmps
lock
pop
dec
fdiv
cld
mov
arpl
fisub
dec
adc
out
and
pop
xor
je
lock
push
mov
repz
jmp
pop
jne
dec
pop
xor
sub
xchg
jo
test
jmp
inc
jbe
shr
scas
jnp
test
ret
sahf
mov
xchg
inc
cmps
mov
and
or
sbb
fwait
in
jo
std
in
push
push
repnz
jbe
cdq
outs
out
pop
adc
cmp
mov
mov
xchg
jbe
add
leave
and
lods
mov
xchg
imul
or
or
test
inc
hlt
ins
and
or
repz
call
daa
outs
test
xchg
test
or
jmp
add
pop
pop
sub
cwde
es
dec
cld
clc
in
and
inc
sar
xor
pop
ret
jp
xchg
div
fcomp
pop
push
arpl
ficom
jns
cmp
xlat
mov
push
mov
xchg
inc
pop
xchg
jmp
jmp
jp
and
sub
pop
lea
cs
xlat
pop
hlt
pop
in
out
adc
cs
xchg
pop
in
inc
sbb
jp
icebp
lds
ds
cmp
stos
pop
xor
xchg
dec
cmp
xor
sub
pop
or
xor
inc
xchg
cmp
scas
in
mov
hlt
enter
fdiv
mov
push
inc
mov
mov
inc
(bad)
cwde
lahf
call
push
ret
(bad)
mov
js
xchg
and
add
mov
add
push
xchg
pop
outs
data16
xor
ret
xchg
ret
push
jle
and
mov
jb
fldenv
(bad)
fcmovb
sahf
pop
cmps
in
jp
jl
clc
cmp
push
outs
mov
inc
pop
dec
adc
xor
aaa
push
cmp
repz
add
repz
data16
ja
stc
inc
push
cmps
cwde
cmps
ds
add
pop
loopne
sbb
push
adc
pop
jp
mov
test
je
mov
adc
fsubr
int3
call
jg
jle
sub
xchg
adc
sub
movs
aas
cmps
and
cmps
push
adc
pusha
call
leave
xchg
xor
push
aad
jnp
in
cld
pmulhuw
shl
xchg
or
xchg
call
mov
jmp
cwde
stos
stc
xchg
daa
xchg
xchg
gs
pop
jp
outs
test
rcl
jg
popa
sub
mov
xchg
mov
fs
fwait
imul
pop
mov
mov
sahf
inc
jp
fs
imul
call
pop
xor
ds
or
fidiv
push
je
gs
inc
es
nop
sub
sub
pop
test
rcr
jne
push
icebp
adc
mov
retf
cmps
xchg
cmp
sbb
cld
fld
push
cmps
sub
popf
xor
sbb
fldcw
(bad)
pop
mul
mov
pop
fwait
stc
dec
aaa
adc
and
push
jmp
jo
es
adc
jle
pop
shl
in
lods
cmp
mov
fild
mov
sbb
aam
outs
fcomi
jge
int
sub
in
fisttp
addr16
enter
cmc
mov
add
nop
xchg
out
xchg
ins
jno
cmps
loope
or
sub
push
and
shl
int
cmp
xor
fwait
ret
dec
and
sbb
push
(bad)
mov
call
mov
add
dec
outs
fdivr
jmp
mov
adc
cmps
mov
jno
xlat
repz
lods
scas
mov
mov
cmp
mov
cmps
(bad)
mov
or
outs
pop
push
adc
or
mov
js
in
adc
mov
imul
or
jne
fcomp
pop
xchg
add
fdiv
xor
fild
adc
mov
daa
adc
pop
rol
in
fldcw
fstp
mov
xchg
mov
popa
cmc
push
pushf
or
dec
ins
sbb
ss
loope
mov
mov
mov
cmp
xor
shl
mov
mov
movs
call
mov
or
and
loop
xchg
rol
ret
jns
mov
in
add
push
sbb
into
xchg
jne
pop
in
dec
mov
pop
dec
mov
and
xchg
jo
out
xchg
arpl
adc
dec
mov
pop
test
xchg
repz
jp
push
call
pop
stc
retf
cli
les
lods
mov
cmp
push
outs
movs
int3
cli
jmp
sbb
push
fwait
inc
xor
push
cli
hlt
mov
in
ret
mov
pop
sub
pop
fdivr
sub
mov
and
mov
jnp
mov
or
jae
or
jb
jbe
jmp
in
stos
sub
rcl
call
push
dec
ret
es
pop
fs
fsub
aam
cmp
sbb
cld
jp
xchg
or
and
call
xchg
pushf
add
pop
xchg
ja
dec
das
mov
out
xor
loopne
mov
pop
inc
call
or
icebp
nop
xor
movs
lea
jns
mov
xchg
xor
sub
rol
dec
or
into
pop
call
mov
dec
(bad)
scas
mov
add
lea
add
lods
add
out
es
cwde
sub
and
push
add
pop
jns
loop
lods
aad
ins
cli
push
xor
je
xchg
sub
xchg
pop
rol
pushf
popa
cs
into
(bad)
lods
clc
add
pop
xchg
jmp
add
mov
mov
cmp
mov
call
xor
inc
inc
xchg
dec
xor
push
call
scas
xor
shl
xor
xchg
mov
sbb
xor
loop
ss
xchg
mov
push
sbb
enter
jle
test
lock
sbb
mov
inc
jb
fld
int
push
sbb
call
ins
dec
scas
ficom
cld
aad
dec
mov
push
ins
mov
pop
pop
xor
(bad)
sbb
sbb
cli
mov
mov
cmp
mov
and
cmp
sbb
loope
(bad)
test
fst
mov
and
xchg
dec
mov
xchg
jne
mov
pop
ficom
cmp
retf
inc
sub
call
ficom
cmps
xchg
cwde
(bad)
stos
cmps
out
in
mov
add
jl
mov
in
mov
test
add
pusha
fwait
cmp
xchg
jo
pop
imul
and
pop
loope
mov
push
aas
push
cmp
cmps
mul
js
sbb
adc
loop
or
mov
mov
cdq
clc
call
in
mov
icebp
jg
sub
fcomp
add
daa
jmp
dec
xor
pop
or
and
std
sub
jge
repnz
sbb
test
mov
cwde
adc
fistp
adc
test
pop
mov
sar
push
loope
dec
add
sti
or
in
lods
fsubr
outs
mov
mov
repnz
ins
inc
fs
int3
int
aaa
inc
rol
jno
adc
cmp
adc
out
add
cvtpi2ps
int
in
movs
xor
mov
cwde
jge
fsubr
dec
push
dec
push
mov
je
pop
mov
xchg
(bad)
jne
or
jl
out
popf
adc
sti
or
and
shl
ins
mov
push
(bad)
data16
addr16
xor
mov
inc
mov
je
jmp
add
movs
idiv
fstp
mov
dec
jns
(bad)
push
xchg
xchg
cwde
ror
jecxz
(bad)
cli
gs
in
shr
aas
repnz
lea
adc
pop
jnp
pop
pop
jl
push
sbb
shl
pushf
cmp
mov
and
js
mov
or
ss
push
aas
push
dec
pop
cmps
dec
adc
sbb
sbb
pushf
add
lock
pop
fadd
std
dec
outs
sbb
ror
add
mov
jg
shl
or
repnz
fsubr
jns
push
frstor
iret
enter
pop
ss
inc
xor
jmp
dec
dec
into
sar
jb
sar
ins
jecxz
cdq
pop
sub
lods
push
test
cmp
loop
je
adc
aaa
mov
inc
inc
mov
aad
sub
test
in
sti
mov
push
in
imul
add
fsubr
test
mov
mov
jae
xchg
loope
push
lods
fxch
mov
rcl
and
mov
call
imul
imul
fwait
das
outs
inc
dec
(bad)
jmp
fiadd
inc
mov
pop
cmps
cmps
sar
leave
or
pop
or
cmp
loopne
cmp
call
fwait
inc
in
sbb
xchg
cli
add
pop
ds
sub
inc
scas
retf
or
xchg
cmc
stos
rcl
lahf
dec
dec
sbb
lds
sbb
cld
xchg
xor
outs
push
sbb
sbb
inc
shl
and
scas
test
fcomp
popf
(bad)
pop
popf
sub
stos
jmp
push
in
jno
mov
push
or
and
and
hlt
mov
inc
cld
in
aam
stos
adc
ss
jns
mov
fs
retf
imul
mov
sub
ins
jecxz
sub
sub
inc
xchg
mov
mov
scas
xchg
fwait
movs
out
mov
jl
lods
dec
mov
out
xchg
xadd
clc
imul
cdq
lea
fucomi
retf
and
fwait
sub
sub
out
mov
mov
sahf
inc
push
lods
mov
and
sbb
and
aad
xchg
push
push
pop
shl
dec
push
fisttp
adc
mov
or
push
push
ret
rcl
or
shl
mov
shr
or
test
sbb
mov
push
fild
jne
push
jp
aam
mov
in
sahf
ficomp
dec
es
adc
inc
inc
mov
xchg
add
iret
mov
cmc
or
lock
or
int
push
or
add
mov
mov
mov
add
mov
sahf
movs
pusha
push
cs
cmp
pushf
jle
add
mov
mov
push
in
pop
enter
jl
jg
mov
cmp
push
mov
push
mov
gs
mov
sub
add
hlt
stos
test
sbb
inc
push
aas
stos
cwde
xor
cmp
and
push
mov
mov
inc
lea
enter
add
mov
aas
test
ror
push
xor
or
ret
cld
xor
and
and
rcl
jg
arpl
cmp
dec
cmp
shl
add
mov
iret
push
jp
out
push
popf
xchg
inc
int
pop
cmp
cdq
mov
cmp
mov
rcr
xchg
mov
std
pop
mov
out
dec
je
ja
mov
mov
cmc
mov
sub
push
call
jp
mov
dec
and
in
push
xchg
cdq
xchg
shl
loopne
sbb
shr
jmp
mov
push
popa
std
test
jmp
push
ja
pushf
jnp
or
jg
and
pop
ins
cld
push
cmc
xchg
sub
xor
mov
jmp
leave
outs
pop
jmp
xor
cli
ds
dec
lea
xchg
or
mov
pop
xchg
xor
cdq
pop
aas
jle
mov
into
push
bound
and
sbb
fstp
push
pop
imul
(bad)
shl
sbb
or
dec
xlat
in
sahf
inc
mov
push
xchg
xlat
pusha
jb
cmp
jge
xor
xchg
stos
imul
cmp
enter
push
sub
xlat
call
dec
sub
mov
int3
mov
and
mov
pop
mov
test
mov
sub
xchg
daa
or
or
out
jmp
or
or
mov
aas
sti
shl
or
mov
cmp
imul
jnp
es
push
lds
cmp
ja
xor
mov
gs
test
xor
add
(bad)
imul
xor
or
dec
xchg
call
sbb
xor
inc
push
cmp
test
ins
mov
jb
mov
ret
in
sub
mov
into
xchg
popf
mov
ja
fs
xor
xchg
fnsave
or
push
call
dec
mov
cmp
stos
mov
push
xor
pop
mov
cwde
(bad)
and
jbe
cwde
adc
inc
push
pop
sub
add
push
stos
cdq
dec
cmp
(bad)
pop
add
loop
inc
sbb
xchg
pop
add
xor
ins
sar
push
jp
fadd
mov
cmp
retf
lahf
ret
fcmovnbe
inc
test
int
stos
add
loopne
inc
xchg
dec
test
xor
sbb
faddp
xor
pop
mov
mov
daa
add
fdiv
repz
test
enter
fisubr
dec
ss
mov
and
dec
jno
dec
pop
cmc
mov
fld
mov
ins
mov
or
das
call
outs
inc
xor
enter
stos
cld
jmp
or
hlt
add
push
dec
cmps
xchg
inc
in
ja
mov
add
mov
fcom
sbb
dec
mov
call
adc
call
sub
mov
add
aas
in
inc
daa
mov
in
mov
xchg
loope
inc
in
movs
jmp
mov
addr16
jns
add
jle
(bad)
clc
adc
gs
jmp
and
call
aad
xchg
rcl
mov
in
xor
push
scas
punpckhwd
ror
xlat
cmp
sub
(bad)
div
lds
push
cdq
cdq
daa
pop
retf
in
cwde
mov
mov
xchg
int
add
adc
inc
(bad)
jl
enter
mov
mov
pop
inc
cdq
shl
sti
(bad)
add
inc
or
jbe
fldz
mov
cwde
or
mov
out
cmp
shl
es
cmp
or
sar
(bad)
ins
mov
dec
icebp
div
dec
repz
out
jbe
or
cld
sub
pop
pop
je
mov
push
(bad)
fidiv
push
jmp
and
inc
pop
add
ja
ins
outs
pop
sti
rcl
adc
and
jb
pop
push
sbb
and
test
pop
cmps
fwait
sti
fstp
mov
call
pop
pshufw
sar
sub
fist
adc
adc
jecxz
add
repnz
call
pop
les
hlt
fidivr
test
(bad)
out
or
xchg
inc
ds
(bad)
xor
repnz
not
push
lahf
push
mov
idiv
pop
and
lods
stos
mov
push
loop
fcomp
jp
inc
xor
dec
js
aam
(bad)
mov
or
pop
out
jmp
addr16
neg
cld
inc
int
in
nop
popa
push
xchg
lods
rcr
int
pop
xor
les
xor
mov
aaa
jmp
loop
and
mov
push
iret
shl
js
or
push
iret
data16
(bad)
cmp
icebp
(bad)
sahf
mov
xchg
ror
cld
idiv
jmp
cli
xchg
cli
out
not
push
clc
aas
aaa
cmps
push
xor
mov
inc
mov
mov
pushf
mov
pop
dec
fsubr
fadd
mov
xchg
mov
leave
sub
cmc
xor
pop
xchg
inc
xchg
stos
xchg
lahf
js
or
add
cwde
adc
xchg
xor
mov
mov
fchs
out
add
dec
shl
scas
ja
mov
in
mov
lahf
dec
call
mov
mov
push
iret
iret
jno
dec
inc
jne
or
in
movs
out
je
jno
fiadd
dec
ret
test
out
xchg
pop
pop
inc
imul
pop
dec
into
dec
mov
mov
mov
retf
lock
mov
adc
or
mov
cmp
jmp
mov
dec
aaa
data16
adc
imul
inc
lds
jo
jnp
aam
fidivr
nop
sub
push
(bad)
fdiv
mov
mov
add
push
mov
push
and
lods
into
sub
int
jae
je
out
xor
stos
imul
adc
out
leave
daa
pop
xor
lock
fcmove
xchg
pop
fcomi
lahf
es
das
inc
fcomip
pop
push
clc
in
imul
jae
test
and
stos
or
fwait
daa
les
add
jg
mov
in
shr
jo
lahf
daa
addr16
jmp
ins
xor
(bad)
cmp
mov
clc
xchg
pop
int
or
add
rcl
push
jl
inc
sti
out
adc
lock
pusha
mov
sbb
add
dec
nop
(bad)
das
push
cld
xchg
mov
sbb
mov
adc
lahf
rol
inc
adc
repz
pop
fldenv
ins
push
adc
xchg
inc
ret
push
and
and
inc
jge
xor
xor
pop
adc
pop
outs
mov
cld
sub
mov
sti
xchg
add
cmc
lods
mov
out
push
or
sbb
bound
add
ja
pop
jo
push
lods
or
dec
jle
fadd
fldcw
hlt
std
mov
mov
pop
push
pop
push
or
repnz
pop
cmps
std
popf
ret
add
cdq
add
fidivr
loop
sub
movs
cmps
mov
sbb
js
dec
clc
mov
in
js
es
jnp
push
push
(bad)
jo
movs
pusha
dec
sahf
jmp
fldenv
fwait
(bad)
push
mov
and
sahf
and
jo
fsubr
inc
cs
ins
mov
leave
std
sar
cmp
mov
popw
xor
xor
xchg
std
cmp
in
or
add
cmps
fst
ret
call
movs
pop
cli
mov
mov
inc
xor
cli
sahf
adc
in
push
mov
outs
pop
es
inc
test
inc
mov
fnstsw
(bad)
mov
sbb
dec
in
retf
dec
sti
xchg
cmps
pop
push
test
xlat
out
xor
out
adc
mov
mov
iret
mov
in
jae
int
int
fcomp
jb
and
jbe
cld
dec
and
xor
retf
pop
jb
es
lods
call
outs
dec
add
addr16
push
and
daa
push
in
cdq
imul
mov
scas
in
lea
arpl
jne
push
test
mov
xchg
mov
jbe
push
push
inc
dec
adc
add
lds
daa
push
sbb
test
add
aaa
mov
adc
cli
dec
out
bound
mov
push
les
dec
xor
icebp
jo
in
test
js
test
or
mov
inc
jne
ins
icebp
ret
mov
add
mov
cdq
aam
jmp
inc
test
cdq
enter
mov
push
ins
ror
xchg
ficomp
inc
mov
or
popa
arpl
fmul
inc
push
add
xor
inc
push
ret
test
je
idiv
or
cmp
jne
ss
jo
xchg
gs
sbb
div
test
or
aas
lods
(bad)
imul
jmp
ret
add
ins
out
test
pop
dec
sar
cmp
sub
adc
call
sub
and
mul
out
mov
int
popf
pop
adc
jecxz
mov
sbb
xor
or
xchg
std
dec
leave
movs
sahf
popa
ja
call
push
pushf
ror
inc
out
call
fidiv
xor
cmp
inc
inc
std
push
pop
loope
mov
lahf
pop
(bad)
jmp
cmp
hlt
pop
jb
mov
enter
push
xchg
stc
arpl
in
pushf
adc
jnp
arpl
mov
lahf
mov
pop
inc
inc
gs
popf
fisub
cmc
mov
ds
fmul
or
lar
mov
stos
imul
imul
push
push
sbb
and
and
shl
sbb
stc
mov
xchg
push
(bad)
hlt
in
cmc
add
retf
push
lods
cmp
(bad)
out
push
dec
add
dec
sahf
jp
add
loopne
mov
(bad)
test
popf
push
sub
mov
fiadd
xchg
pcmpgtw
daa
ja
jmp
mov
mov
inc
inc
aam
imul
mov
sbb
push
in
sbb
cmc
in
sbb
inc
test
lea
cmc
pop
push
pop
mov
xor
cmc
(bad)
loop
cld
push
mov
pop
and
mov
jmp
sbb
pop
jnp
pop
lods
imul
xlat
sbb
int
shr
xor
cdq
xor
gs
cmp
and
sub
dec
sti
inc
in
push
ret
xor
mov
mov
and
ds
pusha
sets
aaa
mov
sbb
movs
pop
mov
pop
lock
cmp
mov
imul
(bad)
xchg
dec
sub
jp
imul
je
sbb
mov
jbe
out
ins
sbb
fwait
adc
popf
pop
shr
push
dec
push
lock
jns
pop
sbb
lock
je
cmp
test
loope
sbb
xchg
cmp
jle
cli
dec
or
xor
aam
(bad)
shl
fwait
mov
xchg
dec
pop
scas
mov
pop
fmul
mov
nop
into
inc
jae
dec
cmps
cmp
scas
fdiv
cmp
add
js
int
xchg
test
or
data16
(bad)
es
pop
or
gs
aam
sbb
loop
lahf
(bad)
js
cdq
sub
xchg
sbb
cwde
xor
ret
aam
das
fcom
inc
popf
cld
imul
xchg
out
cld
adc
push
cs
jmp
add
aas
jo
jae
stos
push
or
mov
cmp
cmp
pop
loopne
pop
sub
loop
arpl
jp
jb
fmul
adc
shr
sti
test
in
xchg
(bad)
jg
outs
pop
mov
jns
aaa
add
mov
loopne
(bad)
cmp
dec
cmc
fist
inc
movaps
dec
rcl
movs
pusha
(bad)
or
in
xchg
mov
cwde
xor
lds
cmp
cmc
xor
jae
or
mov
jmp
out
xchg
sub
cmp
mov
add
dec
out
les
or
cmp
jmp
adc
inc
pusha
cmp
or
shl
cmps
lahf
mov
or
ror
stos
lds
lods
repz
dec
out
pop
in
mov
jbe
jmp
pushf
jl
lds
pop
and
loope
lds
or
out
dec
cmc
xor
ret
scas
jmp
imul
ficomp
xor
or
add
imul
mov
test
mov
add
pusha
rcr
sub
or
lods
xchg
add
add
jb
pop
cmps
pop
push
test
push
(bad)
inc
retf
lahf
mov
or
cmp
iret
(bad)
fldcw
test
jae
jle
js
mov
ret
mov
and
xor
(bad)
dec
push
inc
add
mov
mov
pop
dec
add
sub
push
adc
jl
pushf
imul
out
ins
in
xchg
inc
push
push
inc
dec
jge
cs
sub
call
sbb
fsubr
mov
stos
jo
pop
pop
test
imul
inc
jb
jno
sub
mov
aaa
pop
(bad)
xchg
dec
dec
adc
xor
ins
cwde
sub
pop
xchg
mov
(bad)
pusha
rol
popa
jmp
pop
mov
out
mov
adc
dec
push
pop
inc
xchg
jnp
arpl
add
call
push
pop
mov
push
cmp
fiadd
loopne
add
jo
aam
pop
jl
and
inc
xchg
pop
jae
inc
xchg
aam
sub
pop
dec
test
cmc
and
adc
add
mov
push
jbe
pop
scas
adc
jp
pushf
xchg
xlat
enter
movs
xor
into
mov
xchg
ins
out
xor
aaa
jb
cld
sbb
shl
in
mov
xor
pop
mov
lds
adc
push
push
rol
lods
xlat
cmp
std
stos
(bad)
mov
ss
mov
jge
mov
fs
fstp
fcom
neg
scas
jnp
enter
mov
or
pop
pop
ficomp
or
inc
jb
popf
push
pop
cmc
test
inc
push
aam
(bad)
cmps
add
dec
xor
sbb
out
es
fdivr
push
loopne
cmp
add
and
pop
ins
push
mov
add
cmps
aam
mov
je
sub
fdivr
xchg
neg
sub
retf
jl
imul
adc
xchg
jecxz
out
imul
cld
sbb
pop
fsub
dec
cmps
repnz
(bad)
neg
retf
push
xlat
dec
popa
stc
xor
ror
xor
(bad)
push
xchg
push
(bad)
fsubp
imul
rol
fadd
jb
cdq
into
mov
push
sbb
sbb
(bad)
in
mov
lds
leave
hlt
loope
ss
fsubr
out
lods
xor
add
xchg
or
add
or
ss
push
js
sti
jo
pop
retf
and
push
enter
adc
mov
ret
test
stos
xor
in
adc
fnsave
idiv
outs
movs
fisttp
ja
sub
or
jne
adc
into
jbe
mov
push
lahf
xchg
sar
mov
jo
mov
cmp
push
add
fild
sub
dec
xchg
pop
movs
mov
lods
cmp
out
test
(bad)
(bad)
pop
sti
es
cmps
push
xchg
jb
ins
or
dec
(bad)
and
inc
pop
shr
bound
icebp
or
sar
fbld
sbb
xor
sub
jo
pop
sbb
adc
ret
push
jns
xor
test
pop
stos
or
xor
pop
out
cmp
test
inc
imul
cmpps
cmps
lock
or
ret
loope
fnstenv
icebp
push
inc
mov
gs
repz
pop
stc
cmc
push
jp
test
cmp
dec
push
add
mov
fcom
jle
test
add
in
and
push
dec
mov
pop
or
lods
mov
pushf
sbb
xchg
dec
cs
and
imul
cmp
push
sbb
pop
mov
(bad)
mov
xor
cmp
cmp
mov
pop
add
loope
sbb
add
lea
lea
loop
outs
sub
cmp
sbb
aad
in
jb
fsin
bound
loope
xchg
mov
xchg
ja
lods
das
imul
or
dec
push
aad
test
dec
aad
mov
into
sub
(bad)
push
out
fwait
lds
xchg
xor
add
adc
dec
pop
test
mov
and
cmp
ss
stc
cmp
sbb
mov
dec
jle
fdivr
pop
retf
push
and
xchg
repnz
sub
ins
retf
push
pop
ins
scas
gs
lods
fiadd
nop
and
lds
daa
cmp
inc
repnz
shl
pushf
jle
jnp
enter
aad
mov
out
sar
xchg
test
add
sbb
stc
hlt
leave
aas
mov
leave
cwde
aaa
push
jbe
shr
sub
je
sub
je
into
sar
or
mov
dec
popf
retf
pusha
jecxz
retf
dec
push
aam
xor
mov
lds
aaa
loopne
add
jmp
cmps
and
adc
add
pop
adc
xor
jg
cmp
out
adc
mov
pusha
and
jae
push
xchg
push
sub
cli
call
fld
int
mov
add
sar
dec
std
push
jmp
push
and
mov
outs
sbb
sar
mov
ret
mov
popa
outs
fmul
(bad)
push
pop
dec
dec
test
inc
mov
ins
nop
pop
mov
push
push
mov
cld
or
and
dec
fbld
in
shl
cmps
pop
jbe
and
xchg
mov
pop
push
stos
push
xchg
out
and
dec
xchg
lods
cmp
stos
xchg
xlat
mov
or
jae
neg
icebp
enter
dec
mov
sub
sub
aas
cs
repz
sub
fstp
stc
aaa
adc
stos
fcmovnbe
sahf
cmp
pushf
(bad)
and
sahf
pop
adc
push
scas
and
jbe
sub
mov
jg
je
(bad)
xor
(bad)
jmp
adc
stos
mov
dec
pushf
jecxz
loop
int3
and
mov
sti
mov
fcom
adc
nop
inc
add
iret
(bad)
in
repnz
ret
hlt
or
retf
cs
outs
nop
xchg
sbb
push
test
into
les
icebp
jo
repnz
mov
stos
shl
xchg
stc
std
into
pop
enter
push
sub
push
push
mov
sub
int3
mov
imul
scas
xchg
inc
cwde
pushf
ror
inc
fist
je
popf
mov
push
clc
push
push
in
push
rdmsr
sti
push
jb
je
pop
fst
sbb
mov
sbb
mov
in
std
movs
push
cmp
xchg
daa
repnz
dec
jbe
add
hlt
adc
cmps
xor
jecxz
nop
mov
xchg
mov
in
outs
aad
jae
mov
pop
cmp
daa
pop
aam
push
mov
mov
fbstp
stos
and
movs
adc
xor
or
mov
xchg
imul
add
imul
mov
xor
aad
mov
and
jmp
push
leave
cmp
aas
inc
xchg
jl
stos
dec
push
xchg
ret
pop
jmp
(bad)
loop
lock
push
pop
(bad)
lock
pop
clc
repnz
ds
div
adc
inc
dec
pop
enter
int3
aam
or
movs
hlt
stos
mov
movs
out
inc
shl
or
adc
mov
adc
in
jae
enter
dec
ja
leave
push
frstor
adc
push
mov
mov
nop
cmp
sbb
ja
pop
in
push
test
push
xchg
xchg
shl
mul
ja
jae
add
sbb
mov
pushf
inc
mov
push
cmp
xchg
mov
jbe
push
dec
mov
sahf
adc
retf
aas
iret
cmp
sub
mov
ret
mov
xor
fstp
fadd
xchg
rol
adc
mov
(bad)
sti
xchg
add
lods
bswap
in
xor
cmp
push
inc
shl
or
mov
mov
mov
ret
and
add
cmp
xor
inc
xchg
repz
gs
xchg
xchg
mov
mov
ins
or
adc
xor
loop
xchg
inc
dec
popf
cmp
adc
inc
cmp
shl
lds
pop
movs
mov
lds
stos
push
aas
movs
out
dec
fprem
inc
jge
xor
std
mov
sbb
push
jo
pop
dec
xchg
ret
stc
add
in
jo
adc
xchg
ror
dec
xor
cmps
dec
jb
rep
enter
or
adc
xchg
pushf
outs
or
sbb
mov
pop
aas
add
stc
and
dec
imul
into
push
xchg
stos
pushf
adc
sbb
xchg
loopne
clc
sub
(bad)
(bad)
shl
xor
imul
xlat
mov
cmp
push
pop
mov
and
fdiv
ins
pushf
int3
fwait
or
out
inc
retf
dec
in
cmps
enter
sub
daa
or
lds
hlt
iret
push
inc
rcl
aaa
sub
mov
ret
sbb
test
mov
sbb
ja
pop
lahf
jmp
push
sbb
out
jp
mov
jo
mov
out
out
and
ret
popf
hlt
in
rcr
mov
adc
jg
je
lods
sub
push
lds
sbb
cmp
stc
int3
rcr
push
mov
mov
xor
ins
ret
ret
(bad)
adc
jmp
adc
dec
mov
fwait
and
and
pushf
inc
adc
cld
jae
jbe
dec
movs
aas
jns
xlat
(bad)
jnp
inc
push
sub
in
xor
lea
dec
xchg
lds
mov
mov
movs
mov
cdq
pop
addr16
in
sbb
or
sbb
je
test
lods
jle
mov
pusha
sbb
inc
xchg
and
mov
out
fmul
xor
sbb
push
cli
mov
add
mov
test
inc
out
jge
sbb
sub
mov
pop
mov
mov
js
das
(bad)
out
sub
retf
push
and
fwait
aas
cdq
test
jle
push
jne
xor
inc
jb
pop
test
aam
and
jp
sub
xchg
test
stos
sbb
add
(bad)
push
out
inc
call
add
jle
xlat
xchg
inc
(bad)
std
movs
jo
mov
cwde
test
dec
xchg
xchg
sbb
mov
retf
add
pop
dec
jecxz
lahf
and
test
or
xlat
mov
mov
retf
sahf
js
cmp
push
xchg
and
pop
jge
sub
mov
stos
push
push
dec
data16
sub
ret
push
pushf
xchg
leave
fdiv
aam
adc
in
lods
and
xor
lods
inc
into
fnstcw
pop
sbb
xchg
lds
mov
or
inc
cmp
int3
ds
js
outs
out
mov
popa
mov
mov
cdq
gs
jbe
xor
mov
mov
shl
mov
push
scas
std
push
jge
mov
fs
mov
and
jp
pop
jp
push
or
retf
mov
fist
sub
inc
cmp
push
movs
dec
das
cli
ror
mov
mov
lds
inc
rcr
scas
fistp
ds
stc
or
lods
and
and
inc
lods
inc
cdq
inc
jmp
std
mov
cmp
push
pushf
in
mov
test
push
sbb
iret
aas
cld
mov
cmc
mov
push
inc
es
mov
add
retf
mov
shl
add
fdivr
jo
dec
shr
loope
outs
cmp
xchg
mov
add
inc
xor
mov
mov
sbb
vcmplesd
or
pop
outs
fsubr
push
pop
int3
jl
jmp
cwde
cmps
sti
dec
lock
fadd
clc
mov
nop
cmp
leave
or
inc
cmp
les
imul
fistp
or
int3
cmp
push
(bad)
cmps
xchg
outs
movs
sub
lods
lds
adc
in
cmps
mov
lods
daa
mov
xor
sub
inc
sub
and
mov
popf
ja
mov
push
(bad)
cs
out
pop
sbb
int
add
pusha
pop
adc
pop
add
xchg
xchg
mov
jbe
sub
pusha
es
jns
sbb
push
jmp
add
xchg
arpl
mov
pusha
lds
add
pop
or
push
in
pop
and
dec
push
pop
and
mov
iret
jg
push
int
cmp
jl
cmps
lods
jno
scas
ror
jne
and
push
pop
mov
inc
dec
cmc
and
sahf
inc
adc
xchg
sti
ja
mov
jp
cmps
pusha
push
or
mov
add
xor
add
cmp
loope
fwait
sbb
stos
mov
lods
and
js
out
jmp
in
pop
jnp
mov
cli
inc
cmp
ja
ins
dec
cwde
push
sti
cwde
aaa
add
fmul
fwait
addr16
sub
push
dec
sahf
cmp
push
and
push
mov
jo
mov
xchg
mov
cmp
pop
xlat
push
jmp
jbe
mov
inc
jo
cmp
mov
fnstenv
fiadd
retf
and
fwait
dec
and
aad
mov
pop
test
fcom
psubusb
jp
add
mov
(bad)
cmps
jp
cmp
dec
sar
mov
mov
xchg
cld
call
fucomip
jmp
inc
aaa
jp
jge
or
mov
lds
add
mov
pushf
add
mov
xchg
ins
mov
jne
cmps
jecxz
jmp
retf
(bad)
xor
pop
stc
pop
jmp
pushf
(bad)
sbb
ret
cdq
cwde
test
sbb
icebp
loope
jne
add
sub
cs
cmps
imul
fidiv
sub
stc
shl
jg
xor
rol
cld
int3
sbb
push
ja
es
nop
dec
cmp
jo
push
jg
and
sub
mov
pop
pop
es
imul
je
ret
jno
mov
aam
cmps
sbb
push
adc
xchg
repz
push
cmp
dec
cmp
pop
inc
inc
sbb
sbb
jmp
fbld
cmp
cmp
or
shr
add
test
pop
xchg
je
out
sbb
aam
sub
fcomp
xor
jecxz
add
lock
jp
cmps
sar
jnp
xchg
mov
mov
sub
sbb
fld
push
inc
xor
add
call
pop
mov
aad
inc
icebp
test
aam
shr
lahf
pop
pop
sbb
cmp
into
movs
hlt
add
and
xlat
mov
pop
jl
xchg
test
cmc
sbb
xlat
into
push
dec
jns
jbe
outs
push
jbe
das
xor
add
inc
dec
xor
sbb
pop
cmp
or
stc
leave
or
mov
push
and
cwde
mov
sbb
bound
lea
stos
push
lahf
add
mov
cmp
cmp
lods
fdivp
cmps
popa
stos
add
jbe
into
movs
cmp
in
jmp
pushf
addr16
jb
call
out
cmp
mov
repz
repz
(bad)
sbb
or
push
fnstcw
cmp
loope
retf
xchg
mov
test
mov
test
pop
push
cdq
push
sub
fimul
xor
scas
out
ja
pusha
jmp
outs
sbb
call
nop
xchg
lahf
mov
enter
cmp
cwde
pop
or
mov
pop
int
push
ret
sbb
or
clc
cmp
inc
clc
sub
cdq
xbegin
push
mov
jmp
xchg
sbb
push
xchg
int
gs
adc
fimul
jmp
inc
test
icebp
pop
cld
or
xchg
mov
dec
xor
arpl
mov
adc
dec
fwait
(bad)
sub
add
ins
out
push
lds
mov
nop
mov
or
pop
(bad)
jmp
dec
dec
in
out
inc
or
xor
cld
cmp
repz
call
sti
push
scas
jmp
out
enter
xchg
aaa
sbb
pop
ins
into
xor
mov
jl
push
xor
adc
dec
and
int3
sub
retf
movs
popa
lods
stc
cmp
sub
jns
mov
popa
outs
xlat
ficomp
adc
push
mov
cmp
and
fwait
sub
mov
xchg
xor
cmc
loop
xor
dec
jo
ds
leave
aaa
xor
sub
mov
movs
adc
inc
(bad)
push
cmp
jle
adc
scas
repnz
and
sbb
stos
pop
xor
push
and
mov
loope
mov
idiv
fdiv
add
aad
cli
mov
cmp
int3
push
add
mov
lods
inc
idiv
mov
inc
rol
pop
jne
cmp
cdq
out
movs
retf
add
push
cmp
adc
push
jge
inc
std
cmp
xor
inc
nop
push
aam
mov
call
or
sti
inc
jb
les
add
add
(bad)
shl
cs
cmp
cdq
cld
xor
iret
outs
pop
ja
ror
mov
cmp
inc
mov
movs
inc
adc
ret
repz
inc
outs
or
fsub
push
cmps
add
rcr
ins
sbb
popa
sbb
xor
pop
pop
mov
scas
jns
cli
out
imul
sbb
mov
adc
rol
xor
loopne
fcmovne
test
jb
arpl
mov
push
xor
sbb
jmp
pushf
ins
sbb
pop
pop
aam
retf
cdq
clc
lea
fild
rcr
dec
in
xchg
xchg
and
mov
dec
in
push
xchg
add
js
ret
rol
arpl
push
sbb
cli
ret
test
xchg
pop
jmp
ror
sub
aad
(bad)
pop
inc
pop
es
xchg
inc
inc
sbb
mov
sub
dec
mov
out
arpl
dec
push
popf
add
in
fwait
imul
cmps
sahf
popf
or
cmp
or
adc
hlt
or
xlat
jmp
leave
(bad)
call
sbb
dec
cdq
and
loope
sbb
cli
arpl
outs
aaa
add
sbb
pop
pop
call
(bad)
(bad)
push
cdq
jbe
cmps
loopne
mov
lock
fldln2
call
cmc
push
inc
push
mov
pop
fcomp
jmp
imul
rcr
push
mov
std
bswap
mov
mov
out
dec
jmp
fldcw
sub
or
ror
jle
jecxz
mov
nop
adc
into
jmp
jp
rol
inc
adc
pop
adc
add
mov
xchg
lock
and
mul
mov
fwait
sub
fdivr
jae
xchg
scas
mov
adc
hlt
xor
fistp
data16
fdiv
fwait
inc
retf
and
xchg
repnz
push
arpl
add
js
mov
leave
adc
mov
dec
jne
shr
fsub
and
pop
aas
aas
add
arpl
push
jb
add
mov
leave
clc
xchg
xor
mov
call
lds
call
add
in
std
mov
adc
call
jne
adc
inc
aas
or
les
paddsw
ficomp
pop
adc
adc
js
and
add
mov
sti
and
out
ucomiss
add
cmp
iret
jmp
fucomip
out
cmp
pop
mov
mov
addr16
inc
rol
movs
jmp
xchg
and
retf
cwde
ins
jmp
test
ror
fidivr
add
mov
ror
inc
dec
iret
int
pop
push
sbb
add
outs
fsub
xor
jl
pop
shl
pop
xchg
add
popf
jmp
or
dec
ja
ins
lea
lahf
fstp
xchg
xchg
out
mov
retf
jmp
pop
inc
xor
out
(bad)
leave
rcl
in
and
int3
ja
sbb
fldz
mov
loop
push
and
call
pop
fisubr
leave
cmp
mov
sub
inc
gs
es
xor
pop
dec
ins
mov
adc
sbb
sbb
mov
inc
sub
jmp
mov
adc
mov
int
xor
pusha
or
pusha
out
(bad)
jns
xchg
mov
outs
bound
jns
pop
std
imul
add
adc
inc
out
pop
mov
inc
mov
fimul
dec
call
jle
mov
sbb
fs
cli
call
jge
loopne
cmp
test
sti
or
or
xchg
out
push
pushf
cmp
jnp
mov
icebp
pop
or
test
inc
or
add
leave
xor
mov
das
dec
test
pop
sub
stos
enter
sbb
cdq
adc
shl
test
push
jle
cdq
dec
dec
test
jns
jo
add
ja
mov
add
(bad)
lods
adc
lds
inc
lahf
or
outs
jmp
cmps
mov
mov
call
push
inc
pusha
mov
push
lock
(bad)
(bad)
or
or
jne
mov
inc
add
xor
ins
add
inc
pusha
mov
mov
imul
xchg
scas
push
ret
outs
cmp
mov
push
pushf
or
and
cmp
test
inc
ins
test
pop
and
jae
test
push
jp
or
aas
mov
stc
sub
mov
mov
int3
clc
out
sbb
or
lock
cmps
scas
inc
push
or
or
add
dec
cmps
jecxz
sbb
or
icebp
fcomp
ret
scas
pop
adc
push
mov
sar
hlt
or
in
add
mov
test
dec
cmps
pop
xor
enter
or
jo
or
das
jb
lds
pop
mov
sbb
dec
js
rcr
sbb
scas
imul
inc
jbe
sbb
in
xor
mov
dec
or
cmp
sti
movs
xor
data16
mov
fldcw
sbb
movs
in
xchg
jbe
dec
dec
stos
sub
sbb
inc
xchg
jmp
dec
xor
xor
retf
adc
int3
pop
mov
or
js
fstp
loopne
xchg
clc
ss
xor
mov
aam
sub
mov
icebp
or
ins
call
push
push
mov
ret
cdq
into
out
pop
add
mov
sub
push
jae
and
(bad)
std
stos
daa
push
inc
xor
adc
(bad)
js
aas
cld
(bad)
pusha
int3
outs
in
pop
jmp
add
test
bound
lahf
call
sub
call
add
imul
and
cmp
inc
call
ins
jle
sub
mov
int
out
or
jbe
loop
movnti
sub
add
pop
les
(bad)
int
pop
pop
mov
nop
scas
pushf
scas
sub
or
xchg
pushf
mov
mov
clc
mov
ds
shl
sbb
imul
xchg
out
adc
inc
mov
xlat
push
push
call
jae
or
iret
mov
dec
mov
pop
ins
pusha
jae
push
mov
lea
pop
mov
dec
aaa
xor
add
adc
cmps
lock
and
mov
sbb
xchg
mov
dec
mov
jge
(bad)
or
and
push
jne
xchg
data16
mov
xchg
cmp
jo
loopne
(bad)
rol
jp
bound
pushf
popf
loope
mov
test
dec
rcpps
pshufw
fadd
div
xlat
mov
cmp
pop
sub
sub
outs
add
test
in
into
inc
addr16
add
cmp
outs
sbb
jmp
fist
pop
add
js
and
push
fmul
std
addr16
push
faddp
repz
add
mov
and
sbb
jl
push
mov
into
add
jg
(bad)
and
inc
pop
mov
mov
xchg
pop
adc
(bad)
dec
adc
shl
out
jle
or
xor
xor
shl
lea
pop
aas
(bad)
movq
clc
dec
dec
(bad)
repz
jne
mov
mov
jo
out
sbb
inc
hlt
imul
xchg
inc
fmul
and
sbb
std
retf
jl
xor
cmp
push
pop
lea
jo
or
cmps
push
pop
mov
xchg
xor
(bad)
aas
int
fsubr
imul
js
or
repnz
mov
and
in
retf
or
adc
cmp
pop
and
inc
dec
in
pop
cmovbe
data16
cs
popf
pop
jecxz
repnz
pop
mov
cmps
rol
cmp
test
js
pop
loop
int3
stos
aaa
lahf
mov
dec
and
push
mov
sbb
fidiv
int3
xchg
rcr
jns
stos
mov
push
push
xchg
sub
mov
mov
sub
bound
sub
mov
pop
sub
imul
bound
mov
jmp
jecxz
inc
rol
cmp
fs
dec
dec
and
cmc
push
jecxz
addr16
movs
or
mov
sbb
scas
sbb
pop
mov
shl
fst
gs
dec
movs
cmps
and
xor
imul
jge
and
mov
mul
xchg
mov
cdq
add
out
cmps
mov
sbb
jb
cmc
push
call
jno
mov
sbb
mov
dec
push
out
dec
test
mov
xchg
jmp
stos
in
retf
and
xchg
jmp
rcr
mov
and
xor
dec
mov
cld
enter
mov
push
pushf
and
imul
xor
xchg
and
mov
cmp
adc
add
daa
fiadd
push
pop
mov
ret
push
cmp
test
(bad)
pop
and
out
inc
mov
xchg
sahf
inc
cdq
pop
jge
out
imul
inc
xchg
outs
call
inc
into
push
dec
shl
dec
fstp
inc
xor
idiv
outs
(bad)
and
ds
xchg
(bad)
jl
mov
xchg
retf
call
jbe
movs
in
mov
loope
sbb
js
pop
(bad)
mov
sub
lea
imul
std
cs
lahf
sti
rol
xchg
mov
xor
xor
xor
push
shl
fchs
je
scas
aas
mov
cmp
or
push
cmp
xchg
mov
and
or
mov
test
cmp
sar
mov
shl
or
dec
xchg
repz
cmps
jnp
rcr
ja
mov
fstp
sub
xor
popf
ins
add
inc
stos
jge
mov
mov
lea
retf
push
pop
adc
jge
mov
(bad)
adc
stos
retf
mov
ss
hlt
mov
xor
or
inc
ror
mov
jle
push
adc
call
es
inc
test
sar
dec
add
push
or
push
test
pop
cmp
dec
sbb
or
jbe
scas
popa
movs
int3
cwde
into
movs
out
xchg
mov
sbb
sbb
dec
imul
(bad)
jecxz
fidivr
scas
jge
jns
mov
mov
(bad)
push
movs
sub
dec
mov
jmp
scas
retf
inc
cmp
outs
jmp
mov
std
pop
mov
js
cmps
sbb
and
jmp
sub
shl
rol
into
sbb
or
in
clc
aaa
jmp
push
push
daa
inc
mov
push
adc
pop
ror
fwait
js
mov
jmp
ret
iret
push
hlt
loop
pop
and
sar
xlat
call
inc
cli
fisttp
mov
push
ss
add
cmps
setge
aaa
add
dec
mov
cdq
add
mov
std
xor
and
xchg
shl
shl
cmps
inc
repz
(bad)
mov
test
in
pop
pop
nop
std
aam
cli
movs
pop
loope
retf
(bad)
rcr
or
test
nop
daa
ffree
pop
push
movs
shl
movs
pusha
aas
dec
(bad)
push
mov
push
sbb
dec
mov
mov
jb
mov
and
pop
gs
xor
mov
inc
xchg
aaa
cmp
scas
inc
imul
and
fidiv
aam
bound
add
mov
jb
mov
int
mov
outs
out
adc
je
in
in
xor
mov
in
retf
aaa
iret
and
lock
adc
xchg
mov
xor
and
push
inc
mov
sbb
daa
dec
int
inc
xor
xchg
xor
fwait
dec
dec
xchg
imul
dec
inc
inc
push
stos
pop
cmp
leave
inc
jg
in
cwde
ret
repz
xor
inc
aam
push
mov
xchg
fstp
cmps
mov
dec
ins
xor
cli
gs
or
cmp
or
jae
mov
repnz
xchg
mov
mul
mov
out
imul
and
in
andps
mov
mov
push
fadd
pop
imul
mov
popf
lea
mov
cmp
xor
pop
jge
jecxz
mov
pop
(bad)
mov
mov
test
mov
imul
push
xchg
mov
add
jge
int
xchg
jmp
cs
push
jmp
(bad)
cmp
jmp
or
and
sar
sti
and
outs
jg
pop
pushf
cli
dec
dec
jno
nop
sub
ficom
stos
test
ins
inc
jbe
shl
popa
aas
xor
inc
pop
movs
jno
repnz
not
mov
mov
dec
out
inc
aam
iret
xchg
xchg
xor
icebp
loopne
jns
js
pop
sub
ror
mov
addr16
sub
and
sbb
dec
adc
xchg
sbb
mov
outs
push
fs
and
xchg
adc
loop
jecxz
loop
test
xchg
lock
cmp
adc
inc
push
sti
(bad)
cmps
aaa
pop
loopne
jmp
outs
cmps
(bad)
int
icebp
inc
sub
jg
and
es
push
in
inc
fistp
add
mov
dec
dec
xor
outs
aaa
dec
fbld
xchg
loopne
shr
(bad)
sbb
xchg
jne
dec
mov
cmp
je
fsub
sub
idiv
sub
bound
and
not
cmp
cmps
mov
sbb
mov
cli
pop
dec
popf
xlat
mov
xor
mov
jb
rcr
mov
fisttp
lods
mov
jno
lods
pop
mov
fs
shl
jo
inc
frstor
div
sbb
test
inc
mov
xchg
add
fidiv
lahf
push
push
fiadd
add
enter
scas
mov
data16
dec
cli
(bad)
stos
or
fstp
shr
jl
bound
adc
push
sbb
inc
mov
add
dec
shl
shl
clc
adc
ret
out
mov
mov
jge
pushf
and
sahf
repz
fbld
shr
or
mov
inc
test
mov
cmps
fxam
cmp
or
sbb
iret
add
push
mov
and
nop
test
jg
xor
dec
sbb
lods
stos
dec
jg
dec
and
mov
dec
fidivr
fild
fild
dec
loope
cmc
cwde
add
sub
rol
shr
push
push
outs
icebp
hlt
lods
scas
mov
out
push
sub
int
test
push
ins
imul
dec
and
push
jecxz
call
cmp
and
inc
(bad)
es
stos
inc
mov
and
push
arpl
add
sbb
idiv
cmc
push
cmps
mov
neg
and
cmps
cmp
and
pop
ja
and
add
je
pop
into
cmpxchg
sahf
and
daa
mov
cmp
imul
or
int
push
inc
mov
jmp
pop
and
in
int3
rcr
ja
adc
jge
mov
pop
loope
sahf
sbb
add
out
xor
xlat
loopne
sub
retf
push
lahf
xor
movs
pop
(bad)
dec
out
loop
scas
xchg
jno
enter
pop
jo
cmp
scas
or
popf
cli
and
jp
loop
sbb
sbb
repz
out
hlt
mov
pop
xor
pop
add
xchg
and
shl
js
cmps
sub
jns
popa
jae
sar
inc
gs
and
push
mov
(bad)
stc
inc
xchg
mov
imul
js
fld
sub
pop
into
pop
les
aas
out
sbb
retf
out
and
fwait
jmp
push
shr
je
mov
jge
pop
adc
xor
rcl
sbb
lods
pop
mov
push
(bad)
sub
jbe
lods
into
sbb
shl
ja
outs
stc
les
push
xor
xor
or
rol
shl
mov
xor
add
xor
or
xchg
push
cmp
hlt
(bad)
jns
aad
adc
xor
fdiv
out
inc
mov
push
or
or
mov
test
sbb
jae
int3
jp
xchg
and
jp
adc
inc
adc
sub
push
push
pop
jle
pop
add
add
xchg
fild
jp
and
stos
dec
test
out
or
retf
fdivr
ins
sub
add
add
pop
adc
xor
repnz
sbb
xchg
bound
ret
(bad)
mov
dec
xchg
inc
mov
fmul
int
add
scas
xor
ss
(bad)
mov
sar
jg
or
imul
pop
les
aaa
mov
cmp
dec
pop
(bad)
sub
sbb
les
fistp
stos
ins
fwait
mov
cmc
(bad)
dec
push
or
loop
call
cwde
dec
xchg
es
pop
mov
lock
nop
add
add
inc
push
mov
xchg
xchg
sbb
gs
repz
arpl
aaa
pop
pop
xlat
repz
mov
cmp
pop
daa
sbb
jp
inc
shr
pushf
stos
push
or
xchg
out
push
sti
add
jb
push
outs
mov
pop
cmp
shl
div
push
or
pop
lds
fisubr
movs
fld
and
xor
inc
sbb
xchg
loopne
in
mov
(bad)
gs
push
les
sub
add
(bad)
out
(bad)
or
dec
cmc
ins
lods
inc
cmp
push
retf
mov
inc
cmp
neg
xor
mov
push
mov
add
ins
mov
into
cli
push
gs
cmp
mov
sub
dec
fs
push
outs
(bad)
cld
fld
or
jge
push
jo
push
gs
mov
shl
fmul
sub
cmc
sub
pusha
pop
outs
mov
inc
mov
sbb
dec
push
jmp
fisubr
outs
test
xchg
push
fmul
xor
aad
mov
aaa
sub
xor
inc
gs
or
add
lock
push
fsub
(bad)
sbb
jnp
lods
push
add
sbb
cmp
icebp
adc
clc
mov
ja
int
jmp
jbe
imul
mov
mov
sti
lock
int
clc
shr
data16
sub
bound
inc
dec
sub
fstp
out
jne
push
loop
sub
in
iret
jmp
sbb
add
xchg
jl
cmp
pop
cld
sub
mov
and
out
rcr
mov
pop
xlat
jo
xchg
fwait
shl
mov
mov
movs
dec
test
jecxz
mov
hlt
inc
cmp
test
jae
clc
idiv
lldt
jmp
fnstenv
mov
outs
push
sub
ret
mov
pop
lock
xchg
fs
push
mov
cmp
pop
dec
cld
sbb
and
(bad)
icebp
mov
outs
inc
scas
adc
push
cwde
mov
fisttp
ror
push
or
jle
inc
inc
push
movs
and
popf
push
add
and
sub
sub
imul
jns
mov
fisttp
ss
(bad)
cmp
loopne
enter
mov
leave
inc
(bad)
pop
sub
mov
pop
out
lss
(bad)
push
lock
hlt
push
adc
jns
(bad)
rol
sbb
xor
ds
sar
sbb
adc
imul
mov
enter
retf
pop
push
mov
pop
retf
mov
imul
inc
mov
xlat
adc
movs
pop
xchg
cmp
xor
mov
jne
cs
pop
cmp
(bad)
into
push
add
pushf
rcr
xor
mov
pop
sbb
mov
nop
sar
out
cmps
je
cs
jnp
scas
dec
or
pop
add
(bad)
push
ret
mov
enter
sti
outs
lahf
jae
dec
loop
cmps
adc
stos
(bad)
xchg
inc
inc
adc
pop
lock
es
cmps
mov
ret
push
dec
jp
mov
(bad)
xchg
sbb
test
jbe
lea
xchg
test
sub
sub
aas
fisttp
(bad)
xor
fld
ins
sbb
adc
ins
addr16
pop
and
cld
dec
inc
push
adc
adc
add
pop
sbb
bts
scas
xchg
push
mov
adc
xor
outs
push
pusha
mov
or
xchg
ins
sbb
jecxz
ja
xchg
popf
adc
fnstenv
stos
mov
adc
outs
xchg
mov
je
into
ss
mov
pop
fcom
popa
sbb
mov
ror
jecxz
sub
jecxz
ret
je
adc
pop
sbb
adc
xchg
xchg
scas
fmul
cmps
out
mov
(bad)
(bad)
(bad)
inc
repz
pop
jmp
dec
pop
jne
dec
xor
add
rcl
cmps
sahf
inc
add
or
je
(bad)
or
fnstcw
int3
mov
mov
add
xchg
nop
out
loope
inc
cmp
add
(bad)
(bad)
and
in
aaa
jmp
sub
adc
and
dec
ss
sti
push
scas
das
add
mov
lock
repz
adc
test
dec
dec
xor
outs
sbb
mov
fcomp
push
ffree
outs
dec
inc
jecxz
mov
inc
push
ret
lods
mov
(bad)
in
jb
movs
mov
clc
js
push
inc
pop
aaa
sub
xchg
sbb
xchg
sub
mov
aam
jae
fcomp
sbb
jnp
cli
xor
mov
mov
jne
enter
or
mov
xchg
inc
adc
dec
retf
ss
popf
jno
jno
mov
arpl
cmp
jns
cmp
or
push
xchg
cmp
mov
iret
pop
rcl
ret
pop
mov
jo
imul
push
out
lock
lahf
lock
sub
movs
fadd
(bad)
std
and
sbb
lds
lahf
cmp
jne
in
cdq
xchg
repz
scas
mov
popa
dec
dec
cmp
out
rol
fild
pusha
mov
pop
bnd
jbe
mov
jecxz
xchg
outs
sbb
inc
inc
cmp
mov
dec
add
mov
mov
dec
or
rol
add
movs
test
push
inc
daa
setns
sbb
pop
mov
lods
mov
xor
jnp
dec
call
cmp
inc
xchg
xlat
mov
add
in
and
or
pop
cld
movs
xchg
add
cwde
aad
sub
mov
jmp
mov
sti
test
and
cmps
xchg
or
scas
mov
loopne
cdq
mov
test
fimul
cwde
and
jmp
test
pop
jne
jecxz
or
mov
xchg
sbb
sbb
std
stos
outs
push
add
mov
ss
mov
lds
xlat
js
popa
mov
dec
mov
pushf
imul
imul
pop
dec
ret
adc
ja
(bad)
jno
xor
icebp
cmps
push
pop
rcl
jg
pop
aas
mov
xor
enter
in
sbb
xor
cmp
ds
sahf
out
pop
adc
mov
int3
xlat
inc
aas
shl
aad
dec
icebp
test
xchg
add
cmp
add
mov
adc
lods
and
xchg
movs
cmp
or
out
push
push
push
lock
jns
bound
push
push
sub
in
fld
aad
sbb
lea
out
into
jbe
mov
dec
add
fidivr
sbb
inc
mov
movs
das
bound
pop
fdivr
(bad)
mov
jne
cmp
mov
ins
cli
imul
gs
dec
aaa
adc
ret
mov
mov
stos
repnz
lds
push
push
popa
pop
cmps
sbb
mov
sbb
test
test
xor
push
pop
aam
mov
jne
les
mov
add
pusha
or
lock
nop
cwde
add
aad
bound
jecxz
and
sbb
cmps
add
pop
in
pop
inc
jmp
mov
repnz
cdq
ja
cs
call
push
xor
cdq
push
jo
pop
int
inc
or
movs
ret
outs
pop
ror
clc
lock
xchg
lods
fistp
xor
retf
ins
or
(bad)
cmp
pop
xor
adc
dec
push
lods
mov
sub
fs
mov
leave
sbb
(bad)
in
std
hlt
mov
test
(bad)
sbb
jge
sbb
adc
out
jmp
mov
aaa
or
sbb
pop
data16
cli
dec
call
pop
std
xchg
mov
ret
push
jle
xchg
mov
fucomp
inc
cmps
pop
or
pop
fwait
jno
dec
movs
inc
push
mov
adc
cmp
mov
pop
xchg
nop
popa
jp
dec
push
dec
test
sub
push
mov
rol
xchg
sbb
test
jbe
in
ror
outs
pop
(bad)
jne
in
mov
push
xchg
pusha
xchg
add
cmp
(bad)
lahf
jle
in
mov
xchg
mov
push
inc
neg
dec
shr
sbb
imul
add
fidiv
pop
test
sbb
adc
sub
ror
movs
call
mov
mov
in
push
mov
push
pop
pushf
jmp
jle
inc
in
mov
lock
std
and
mov
and
jmp
call
dec
bound
stos
lods
ja
push
pop
mov
push
in
jb
jg
and
cli
stc
loope
inc
inc
fwait
jecxz
stc
sbb
push
iret
adc
arpl
lock
mov
cs
ja
inc
or
fdivp
enter
cmp
retf
das
mov
fmul
fs
leave
dec
das
sub
adc
dec
std
pop
xor
cwde
(bad)
mov
addr16
xchg
fbstp
cmps
jns
stc
clc
jg
or
sub
int3
aad
sbb
mov
ret
push
sub
and
fdivr
stc
out
xor
mov
fidiv
inc
jmp
arpl
jb
mov
ins
or
stos
dec
in
ficomp
push
adc
add
jbe
fldcw
add
cmp
jnp
mov
adc
scas
and
lods
add
icebp
imul
(bad)
or
or
test
fbld
jns
adc
dec
sbb
sti
das
mov
sub
ds
mov
fist
push
aam
push
cmc
add
push
mov
mov
jmp
jle
jg
xor
and
fsubp
sbb
sub
sbb
mov
sbb
adc
ror
xchg
or
push
dec
(bad)
jmp
pop
xchg
cmps
ja
scas
sbb
or
ins
xchg
js
ficomp
fimul
cmp
pop
repz
mov
adc
retf
cmp
jle
dec
popa
jmp
lds
pushf
out
sub
dec
fstp
xchg
rcr
outs
and
mov
xchg
daa
xor
fld
mov
ss
pop
and
add
je
push
jle
call
lods
and
or
add
in
jmp
xchg
lds
pop
sahf
add
add
js
xchg
mov
sbb
sti
iret
stc
push
retf
adc
cmp
cmc
out
ja
adc
clc
cmp
inc
pop
sbb
push
call
mov
jne
and
mov
das
in
dec
fs
sbb
lahf
psubq
push
jae
shr
xchg
sub
xchg
jmp
fstp
icebp
pop
(bad)
mov
jle
adc
fild
adc
push
cmp
fsubr
or
mov
outs
push
mov
cld
movs
cmp
outs
lods
lods
push
repz
adc
or
mov
push
or
imul
fisttp
jmp
push
sti
jle
out
ins
xor
mov
adc
jp
inc
push
pop
and
stos
addr16
aam
push
or
(bad)
fadd
fld
push
scas
(bad)
xchg
(bad)
mov
and
out
push
int3
add
ficom
xlat
inc
or
sub
shl
dec
rcl
ins
int3
enter
mov
add
cmp
or
jbe
sbb
shl
pop
out
add
pop
add
adc
dec
sub
push
movs
mov
fisttp
mov
iret
imul
cmps
inc
dec
adc
je
mov
lahf
jmp
jp
xor
jmp
loop
jp
sbb
data16
repz
adc
popa
fidiv
aaa
mov
retf
sbb
and
mov
sbb
pop
sub
add
xor
and
mov
out
pop
shr
inc
out
into
bound
leave
lods
pop
fs
dec
fadd
into
scas
stos
push
xor
(bad)
jae
xor
mov
push
fimul
jnp
inc
xchg
cwde
xor
loop
mov
jmp
mov
xchg
dec
movs
inc
loope
mov
test
mov
mov
sub
aas
sbb
jp
shr
add
sbb
mov
(bad)
nop
fs
and
ins
push
or
lds
sub
cmp
add
mov
out
mov
das
add
movs
sbb
inc
or
mov
(bad)
sbb
pop
retf
adc
loopne
pop
ror
mov
and
(bad)
jnp
fwait
push
das
aaa
fwait
adc
or
aaa
gs
pop
jge
outs
rcr
push
icebp
inc
out
add
sub
test
and
fwait
and
and
sahf
push
dec
call
(bad)
sub
push
stos
sub
push
mov
lods
ror
call
jne
sub
pusha
daa
push
inc
mov
dec
std
je
je
push
dec
mov
in
push
rol
pop
into
stos
scas
sar
pop
xor
mov
jl
sbb
sar
sbb
cmps
and
pop
xchg
into
mov
add
js
arpl
and
enter
mov
fistp
inc
mov
xchg
nop
jb
sub
xchg
sub
ins
shr
push
push
xchg
inc
cmp
out
inc
outs
mov
sbb
inc
push
es
push
sar
pusha
and
loopne
xor
sbb
xor
lds
jns
or
dec
sub
pop
mov
adc
inc
mov
mov
popa
add
sbb
mov
or
add
sti
out
neg
ins
bound
scas
mov
es
pop
push
ror
inc
repz
xor
or
fidiv
out
push
loop
sbb
push
rcl
test
bound
sub
mov
je
pop
mov
test
xor
adc
mov
out
and
out
(bad)
cmp
pop
repnz
dec
push
xchg
addr16
popa
mov
leave
adc
imul
les
das
push
ja
repnz
int
pop
and
cmp
stc
xchg
mov
xchg
pop
xor
sub
and
xor
fdivr
inc
or
call
int
movs
div
xchg
sub
push
xchg
xchg
clc
int3
pop
pop
out
stos
jge
jnp
(bad)
fimul
xchg
push
cmp
push
jp
or
lock
in
out
(bad)
int3
or
in
or
loopne
jle
aad
call
ret
adc
xor
pop
jge
mov
pop
adc
push
sbb
test
adc
cmp
pop
js
sbb
int3
jno
mov
sub
scas
or
xlat
inc
(bad)
or
not
mov
test
fnstenv
(bad)
mov
aam
inc
inc
lahf
adc
mov
ss
mov
dec
es
pop
dec
mov
(bad)
push
in
or
jmp
mov
xchg
sbb
dec
inc
sti
pusha
fadd
bound
imul
or
pop
and
hlt
mov
gs
xchg
mov
fsubr
inc
push
stos
adc
arpl
mov
aam
cmc
sbb
pop
xchg
test
jge
cmp
xor
rcl
cmp
fcmovnbe
mov
in
movs
push
push
mov
jne
ds
inc
dec
out
push
fst
or
push
pop
idiv
mov
(bad)
std
mov
adc
xor
outs
js
jge
call
adc
inc
mov
sub
mov
mov
dec
loope
mov
std
adc
inc
jge
outs
add
push
add
inc
mov
gs
es
xchg
lds
ins
xor
jnp
mov
adc
jle
pop
mov
pop
sub
ret
cmp
cmp
imul
push
mov
imul
mov
sahf
jmp
mov
xor
dec
(bad)
(bad)
rcl
std
icebp
jae
xchg
push
cwde
sub
mov
adc
mov
or
xchg
push
popf
add
cmp
test
add
cmp
bound
xchg
idiv
jl
mov
dec
out
pop
(bad)
out
sub
pop
or
ds
xlat
sbb
push
pop
xchg
(bad)
fcmovnbe
les
mov
aad
aas
and
mov
cmp
es
hlt
ins
cli
dec
dec
sbb
clc
cwde
sbb
dec
xchg
pop
jmp
popf
neg
test
push
ret
or
cmp
jl
mov
mul
fnstsw
inc
push
imul
mov
or
stos
nop
jecxz
dec
inc
dec
xchg
sbb
inc
sahf
or
and
pop
(bad)
mov
enter
cmp
push
(bad)
rol
in
sbb
xor
inc
jbe
xchg
mov
xchg
loopne
test
lea
xchg
xchg
or
daa
adc
mov
scas
jnp
pop
cmp
(bad)
jmp
popf
lods
xchg
pushf
pop
(bad)
mov
adc
int3
lds
jl
cmp
sbb
xchg
arpl
scas
(bad)
pop
loop
jg
(bad)
adc
pop
add
cmp
ret
xor
jbe
fwait
pop
lea
outs
sub
cmp
clc
jmp
push
sahf
adc
mov
mov
mov
retf
gs
add
sub
mov
xchg
mov
mov
dec
retf
xor
dec
dec
sub
or
shl
cmp
jb
mov
push
xchg
or
popa
retf
movs
sbb
and
mov
or
mov
es
push
xchg
jmp
cwde
cmps
pop
retf
jge
and
in
and
cmp
pop
push
imul
push
sbb
inc
mov
and
jbe
frstor
call
ja
pusha
inc
imul
repnz
cmp
and
mov
jl
in
in
push
xor
push
push
scas
cs
sub
mov
cmp
mov
cmp
sbb
stos
or
and
lahf
movs
mov
sub
or
stc
out
movs
push
mov
out
jo
add
xchg
mov
fsub
in
rcr
in
(bad)
call
test
adc
cdq
fld
dec
xchg
addr16
(bad)
push
in
stos
stos
in
mov
lods
pop
stos
dec
pop
pop
mov
aas
ja
xor
sub
lea
mov
mov
clc
mov
stos
dec
xor
test
pop
mov
lahf
or
jns
nop
js
mov
xchg
jae
jp
call
sbb
clc
stos
adc
sub
jne
dec
add
enter
(bad)
sbb
test
test
add
adc
(bad)
loop
jmp
xchg
ret
call
inc
daa
out
inc
(bad)
ret
mov
sub
clc
lahf
lock
adc
jmp
mov
mov
int
cmp
adc
mov
test
out
adc
sbb
arpl
shl
ins
and
xor
ret
add
call
or
mov
or
rcl
and
test
cs
inc
in
je
xchg
in
(bad)
in
in
pop
cmp
fs
mov
mov
lods
cmp
outs
shl
inc
in
fbld
and
in
outs
dec
or
shr
push
cmp
imul
fs
xchg
rcl
mov
mov
or
popf
lods
or
mov
shl
push
ss
cdq
cmp
jmp
xchg
scas
rol
cld
or
(bad)
jnp
and
js
sub
push
aaa
pop
cli
das
or
dec
mov
jmp
daa
retf
push
mov
push
pop
nop
dec
mov
cmc
bound
jne
rcr
imul
fsubr
(bad)
push
jnp
push
out
jb
pop
sub
dec
add
(bad)
cld
(bad)
sbb
les
push
gs
ds
dec
or
hlt
xlat
mov
fimul
dec
add
mov
or
cmp
lods
in
cmps
je
mov
in
dec
in
inc
or
test
jo
ds
push
fstp
pop
jns
inc
stos
call
cmps
mov
ss
ss
repz
inc
in
pop
xor
push
popa
pop
jns
(bad)
repnz
jbe
leave
repz
xchg
lds
call
out
outs
mov
sahf
dec
mov
inc
xchg
cmp
and
mov
add
adc
xor
or
mov
test
lea
out
xchg
loop
daa
inc
ins
(bad)
cmps
mov
int
add
jle
pushf
cli
out
lods
lds
or
in
xor
pop
outs
fs
and
loope
mov
jnp
xor
out
scas
std
stos
mov
(bad)
aas
xchg
and
add
(bad)
hlt
xor
push
iret
adc
add
adc
pop
xchg
mul
inc
add
lock
ins
sar
mov
cwde
mov
sbb
xchg
jmp
lea
add
adc
add
call
mov
adc
sbb
aad
bound
les
mov
addr16
sub
or
mov
jnp
daa
popf
pop
sub
add
rcr
sub
icebp
(bad)
cmp
xor
dec
push
xor
(bad)
xor
ins
shl
adc
aas
lods
push
push
xchg
inc
sar
retf
mov
adc
mov
popa
pop
test
int3
in
adc
shl
fwait
jl
lock
popf
pop
and
daa
jne
dec
dec
aad
mov
xchg
daa
repnz
mov
outs
ds
fist
mov
lods
dec
adc
fdivr
cmp
movs
inc
jae
ins
out
xor
nop
push
adc
loopne
clc
into
je
mov
adc
pop
cmp
or
dec
sbb
jg
xor
lds
jno
aas
sub
call
mov
add
aam
pushf
imul
fs
in
xor
ds
sub
sbb
pop
jmp
cmp
push
retf
outs
or
shr
xchg
adc
jb
xchg
cmps
sub
xchg
and
ror
(bad)
xchg
sbb
ja
pop
inc
mov
fwait
jns
(bad)
adc
and
shr
mov
js
mov
lds
clc
or
jecxz
imul
shr
inc
cdq
mov
fstp
lods
push
cmp
ss
ss
cwde
and
sahf
xlat
adc
push
inc
mov
call
sub
adc
pop
cdq
mov
jne
mov
jge
inc
dec
xor
xchg
loopne
push
pop
adc
bound
mov
fmul
aad
pop
(bad)
aad
lock
jle
pop
shl
mov
or
inc
loope
mov
add
retf
and
mov
popa
jge
mov
mov
sbb
or
loope
ret
ss
pop
pop
nop
and
pop
xchg
cmp
dec
mov
xlat
mov
add
pusha
add
je
je
mov
pop
int3
outs
mov
mov
jl
and
sub
dec
adc
cwde
inc
mov
dec
daa
pop
ins
arpl
test
mov
sub
cmp
outs
mov
popa
popa
cli
sbb
mov
sbb
mov
add
sbb
xor
out
push
mov
xchg
push
push
pop
out
lock
xor
(bad)
ror
mov
push
jecxz
push
popf
push
ins
sub
mov
xchg
fidivr
std
and
mov
ret
adc
enter
movs
fbstp
repz
shl
fcmovnb
clc
mov
mov
mov
movs
jmp
movs
pop
mov
cld
mov
pop
mov
xlat
sti
nop
aad
int
pop
xor
xchg
ret
stc
sub
sub
dec
add
or
or
hlt
sub
dec
dec
retf
add
sti
into
mov
je
xchg
popf
xor
out
ds
jmp
fbld
shr
inc
inc
xor
push
and
or
push
sbb
xchg
shl
adc
loopne
mov
pop
jp
mov
or
ret
mov
call
imul
ss
dec
pop
adc
movs
retf
dec
push
push
pop
add
xor
lds
iret
aam
std
in
out
(bad)
in
leave
push
mov
in
loop
mov
je
adc
xor
fistp
movs
fwait
mov
mov
hlt
add
cmp
(bad)
retf
rol
pop
push
xor
and
cld
and
mov
loopne
loopne
aas
rcr
cmp
js
push
or
sbb
test
dec
nop
cmp
adc
cmps
shl
test
test
sbb
xchg
pop
jmp
xor
pop
push
adc
cdq
pop
fcmovnb
or
aad
sbb
clc
jb
jle
or
mov
and
push
xor
outs
add
sbb
cdq
xchg
push
sbb
xor
retf
call
jnp
mov
neg
sub
ss
jp
outs
std
mov
dec
popf
stc
daa
sub
ins
xor
movs
jecxz
inc
and
xor
push
jb
xor
mov
add
fwait
jmp
pop
xchg
(bad)
scas
dec
jno
hlt
xchg
fisttp
sub
push
outs
xlat
in
cs
sub
sub
xchg
cmp
mov
jecxz
jle
fabs
sub
pop
sub
shr
mov
jo
pop
in
jge
sub
aad
mov
mov
stos
mov
lahf
je
mov
stos
add
shl
push
call
add
jbe
rcr
movs
nop
ss
fld
lds
test
xchg
adc
inc
js
mov
jge
cld
push
push
push
mov
outs
mov
sbb
push
pop
jbe
and
jnp
dec
inc
pop
fsub
cmp
or
je
inc
inc
or
push
xor
jns
into
mov
mov
in
pushf
push
xchg
out
and
jmp
jb
leave
shl
cwde
adc
adc
ss
add
rcl
add
addr16
lods
inc
sub
popa
arpl
repz
lahf
cld
std
xchg
adc
loope
mov
and
gs
movs
ret
(bad)
inc
inc
retf
jne
add
add
(bad)
pop
push
pop
xchg
or
adc
jle
push
inc
push
dec
lea
cmps
and
jmp
add
call
xchg
xchg
xlat
xchg
sar
imul
test
fs
dec
pop
test
or
sahf
xor
mov
aas
jae
outs
jae
add
ror
jp
mov
fild
out
mov
cmp
pop
add
cmps
cmp
test
dec
xor
scas
cmp
sub
inc
push
or
adc
mov
adc
mov
inc
arpl
cdq
mov
lock
jae
push
fcmovnu
call
cmp
aaa
int
add
pop
inc
stos
adc
push
cmp
push
dec
mov
jle
adc
xor
dec
imul
add
sub
fpatan
ret
or
(bad)
mov
aaa
jne
mov
sbb
je
mov
cmp
adc
xlat
mov
stc
xchg
xchg
xlat
cli
test
lea
add
inc
fcmovnbe
fdiv
(bad)
sti
outs
cmp
dec
les
movs
cmp
push
test
dec
jne
ins
add
test
ficom
hlt
fstp
mov
dec
mov
ds
outs
movs
and
fs
inc
sbb
rcl
pop
shl
(bad)
and
jnp
jno
jge
mov
fmul
cmp
push
cmp
cdq
lahf
xchg
pushf
(bad)
mov
rol
lods
mov
lods
push
in
cwde
mov
sub
dec
mov
scas
loop
mov
mov
and
cmp
push
sti
(bad)
mov
add
pushf
jp
iret
mov
mov
mov
pop
add
or
fs
push
mov
xchg
in
call
dec
jle
mov
mov
cld
jo
hlt
std
sub
pop
or
mov
adc
xchg
and
in
addr16
xor
es
(bad)
retf
cmp
ja
xor
mov
inc
sbb
(bad)
lea
arpl
test
std
call
int
retf
cmp
call
out
popa
cmp
bswap
enter
rcl
cwde
cwde
bound
test
mov
shr
lods
outs
adc
pop
xchg
retf
xchg
xor
adc
jp
adc
pop
sbb
in
inc
mov
xor
aas
fnstcw
xchg
xchg
nop
(bad)
adc
add
cmp
xchg
imul
pop
std
and
inc
xchg
pushf
jns
pop
jp
scas
mov
stos
push
sub
fmul
ret
mov
mov
test
loopne
movs
fsubp
call
cli
icebp
cli
addr16
cmp
fs
jmp
sbb
enterw
cmc
dec
push
les
(bad)
xor
add
outs
sub
(bad)
mov
mov
mov
or
cmps
lahf
pop
mov
push
xor
mov
push
data16
jnp
movs
mov
cmc
inc
or
mov
sub
js
mov
icebp
dec
pop
pop
or
in
(bad)
mov
sahf
sbb
arpl
inc
js
shl
pop
lock
dec
and
add
popf
adc
cmp
inc
inc
icebp
adc
bound
mov
loope
cmp
and
ror
call
add
jp
push
jno
loop
pop
jo
nop
pop
aaa
in
bound
shr
dec
mov
popf
xchg
adc
jg
jnp
xchg
out
mov
mov
xchg
lea
cdq
ret
jmp
test
cmp
sbb
mov
pusha
fs
dec
cmp
lahf
ror
mov
lods
sti
into
retf
inc
cmp
std
mov
arpl
pop
pop
dec
or
enter
lds
mov
outs
mov
dec
movzx
push
ins
add
adc
stos
out
and
mov
and
ret
add
jo
or
cmp
mov
rcl
and
and
lods
popa
mov
add
sub
or
adc
pop
out
push
xor
bound
ror
push
push
ficomp
mov
ret
mov
loopne
dec
lods
std
rcl
inc
ja
xor
loope
mov
(bad)
es
adc
movs
and
jnp
jns
push
adc
xlat
aas
nop
jmp
jns
test
xchg
jecxz
arpl
jecxz
push
sub
dec
js
cmp
call
test
mov
imul
test
and
retf
adc
push
lahf
pop
imul
inc
inc
retf
popf
(bad)
cmp
loop
push
jmp
push
ins
jne
loopne
popa
lea
enter
fcmovb
cwde
pop
mov
imul
xchg
push
scas
add
xchg
int
or
jp
loope
jnp
pop
(bad)
push
ror
sbb
xor
cmp
test
jmp
outs
add
icebp
sbb
(bad)
scas
xchg
leave
dec
mov
jecxz
push
mov
jl
dec
popf
dec
call
popa
mov
fsubr
add
mov
sbb
ins
push
xor
mov
push
daa
xchg
(bad)
repz
xchg
mov
dec
sbb
dec
sub
dec
xchg
data16
imul
mov
or
iret
not
sub
cmp
push
in
push
jl
imul
je
into
inc
jle
xchg
and
xor
adc
mov
sbb
push
lahf
sub
fsub
rcr
xor
cmp
out
cdq
les
jb
mov
inc
mov
jmp
adc
push
out
fcmovnbe
popf
test
test
shl
out
rcr
ret
pusha
jae
cmp
add
dec
daa
scas
mov
les
imul
or
dec
in
pop
data16
cmp
inc
add
inc
retf
in
pop
mov
out
stc
repz
mov
push
imul
mov
cmp
scas
stos
mov
and
nop
and
int3
xlat
(bad)
sbb
or
fsubr
jmp
fcomp
xor
cmp
cmp
pop
push
jno
cmc
adc
mov
retf
pop
hlt
sbb
ja
(bad)
imul
fnstsw
int3
mov
imul
lea
addr16
mov
push
ds
jecxz
sub
mov
push
scas
icebp
daa
fst
sub
leave
ss
mov
retf
sub
daa
ss
dec
aam
inc
nop
xor
sub
aad
int
lock
nop
stos
movs
xchg
cbw
imul
cli
loopne
xor
scas
jno
imul
clc
and
xlat
jbe
icebp
mov
loope
push
loopne
push
cmps
jnp
add
dec
int
mov
adc
pop
jl
mov
and
xor
(bad)
pop
imul
sahf
mov
scas
add
sbb
adc
add
pop
ficom
gs
xchg
sahf
fwait
dec
jge
inc
ror
inc
outs
bswap
jmp
retf
pop
stos
and
sbb
fiadd
repz
xchg
xchg
rcr
(bad)
xor
aam
fs
stos
rcr
jno
ror
inc
stc
cmp
sub
push
adc
lahf
dec
fcomi
pusha
or
pop
scas
test
aas
mov
shr
dec
in
aas
jnp
sbb
sahf
pop
push
fbld
mov
or
pop
sbb
pop
push
repz
fadd
ds
inc
mov
add
push
dec
cmp
mov
test
or
lods
jmp
and
cmp
shr
test
and
js
inc
and
sub
daa
sar
outs
scas
lock
cmp
dec
ds
mov
into
mov
xchg
cdq
jae
mov
sbb
cmp
addr16
fldcw
xchg
inc
stc
mov
push
sahf
pop
fidiv
mov
or
pop
call
cmp
stos
cmp
push
mov
mov
add
jbe
inc
out
xchg
or
push
pop
in
aam
cmp
inc
sbb
ins
sbb
out
test
push
xor
mov
mov
out
ss
lock
cmp
fs
mov
jecxz
dec
nop
jge
je
sub
shl
mov
jae
add
xor
add
cld
int3
push
aad
jle
out
mov
retf
imul
shl
enter
lods
xor
(bad)
sbb
fsub
rcl
pop
loop
push
and
cld
js
bnd
aas
add
mov
js
cs
jmp
and
and
xchg
jbe
xchg
ror
fs
jle
shr
fwait
pop
sbb
cmps
std
push
xchg
cmps
pop
and
mov
clc
nop
push
iret
dec
shl
call
push
pop
bound
lods
mov
mov
rol
sub
lods
sbb
(bad)
daa
jbe
inc
leave
jp
cld
push
inc
enter
mov
cdq
mov
push
daa
stos
jno
std
xor
ret
push
out
sub
fmul
retf
out
movs
sub
fwait
push
dec
dec
mov
test
and
sahf
movs
cli
adc
fcom
bound
lahf
jmp
rol
aad
jo
test
mov
push
mov
(bad)
js
jno
scas
pop
sti
fild
mov
xchg
ffree
dec
inc
addr16
test
es
xlat
inc
in
inc
and
test
push
scas
mov
add
dec
out
fs
rcr
jle
loope
jae
sub
cmp
leave
(bad)
(bad)
ret
jbe
push
out
not
daa
mov
sbb
aam
jno
leave
bound
cmp
or
xchg
jecxz
es
jge
xor
dec
mov
lods
mov
adc
(bad)
ror
push
jnp
inc
or
lods
push
dec
mov
fs
imul
xchg
js
push
int
mov
sub
call
sub
jge
cmp
cmp
dec
mov
sbb
pop
pop
iret
jge
pop
mov
je
rol
inc
stos
mov
lods
leave
icebp
out
add
aas
jbe
and
mov
(bad)
cmc
into
nop
xlat
jns
(bad)
stc
daa
dec
iret
in
out
lods
xchg
or
es
jecxz
out
jmp
bound
test
mov
adc
cmps
test
or
inc
mov
inc
popf
lahf
jmp
mov
dec
jae
adc
jl
jbe
sub
imul
call
fmul
aad
jb
add
inc
dec
xor
and
nop
call
jb
mov
rcl
mov
and
jb
sbb
(bad)
fdivr
hlt
(bad)
sbb
hlt
(bad)
dec
in
in
and
lea
jb
push
jnp
mov
je
cmp
push
pop
pusha
jg
xchg
mov
popf
mov
or
mov
imul
daa
pop
mov
xor
sahf
jge
jg
sub
add
mov
(bad)
imul
int
daa
and
in
or
jl
dec
jb
imul
movs
mov
(bad)
(bad)
mov
stos
cwde
mov
sti
imul
xor
cmps
pop
inc
pusha
push
aad
(bad)
or
call
ss
out
add
add
nop
mov
or
lock
jecxz
sub
dec
loop
pop
mov
gs
jbe
fndisi(8087
sbb
sub
sub
sub
sbb
dec
adc
imul
out
cmp
sbb
out
jle
data16
dec
pop
je
in
loop
scas
add
jle
in
mov
mov
adc
adc
xlat
and
and
sbb
bound
and
dec
push
hlt
sti
outs
mov
imul
mov
int3
mov
fdivr
xor
div
(bad)
fidivr
mov
push
scas
add
out
and
add
stos
jns
bound
icebp
sbb
(bad)
jp
fidiv
call
fidiv
cmp
addr16
add
xor
test
xor
ret
ret
hlt
dec
xor
xor
pop
leave
int3
sub
pop
das
dec
fisub
jbe
loop
gs
bound
cdq
pop
pusha
mov
add
pop
ret
scas
add
call
repz
repnz
cmc
and
xchg
xor
mov
sbb
repnz
(bad)
retf
mov
jecxz
loopne
(bad)
jmp
cmp
inc
sti
inc
dec
mov
out
sbb
loopne
mov
aaa
xlat
mov
(bad)
xchg
popf
lods
gs
jl
scas
nop
adc
fwait
imul
sbb
inc
out
push
mov
in
push
dec
(bad)
stc
lock
(bad)
mov
fisub
add
sub
pop
jmp
sar
es
or
mov
jecxz
xor
aaa
es
js
cmp
(bad)
mov
mov
inc
scas
fwait
dec
jl
(bad)
sbb
cdq
mov
inc
test
or
cmps
inc
call
push
je
loope
sub
mov
pop
sub
bswap
inc
addr16
mov
sbb
pusha
sbb
adc
mov
lods
pop
int
out
or
adc
jnp
add
push
cdq
mov
sub
in
jecxz
aam
pop
xchg
arpl
pushf
pop
fdiv
inc
cmp
jae
xor
adc
xor
mov
mov
out
push
push
adc
and
cmp
xor
popa
(bad)
pop
lds
pop
pop
stos
mov
cmp
push
sbb
cmp
push
int3
pop
scas
mov
adc
pop
imul
sbb
xchg
adc
cmp
adc
in
add
loop
xchg
fstp
ror
jmp
xchg
pop
das
xchg
dec
pop
mov
mov
imul
rcr
mov
push
mov
push
adc
loop
sub
pop
lds
pop
jns
cmp
rcr
and
push
fsubr
mov
fdiv
adc
sar
xchg
pop
fs
jb
(bad)
mov
dec
retf
inc
pop
push
and
push
and
inc
xor
int
push
xor
aaa
test
xchg
call
gs
sbb
cwde
ins
pop
mov
enter
jge
pop
ins
mov
cmp
scas
mov
sbb
add
mov
mov
bound
xor
loopne
jno
mov
je
loopne
es
sbb
xor
push
add
popa
call
mov
mov
lahf
ror
add
xor
add
jno
test
sar
dec
and
mov
cmc
and
inc
and
jle
popa
mov
test
loopne
outs
sub
icebp
and
or
cdq
popa
aas
sub
jp
das
mov
adc
cmp
mov
push
stos
or
push
pop
cld
cmp
mov
sbb
xchg
lock
push
xchg
inc
sub
lods
xor
mov
mov
push
lock
cli
mov
cmp
adc
jae
dec
loopne
xchg
jae
adc
in
ins
jae
loope
jo
or
jnp
mov
cmc
daa
rol
mov
bound
and
jnp
pop
jle
adc
std
add
aas
inc
clc
push
pop
ss
sbb
ret
pusha
daa
rcl
inc
sbb
inc
mov
in
add
pusha
mov
mov
das
pop
mov
js
adc
pusha
dec
jle
sbb
push
mov
rol
jbe
imul
adc
ret
xor
in
push
adc
sti
int3
movs
sbb
jg
jle
xchg
mov
mov
mov
push
mov
sahf
popf
pop
jg
sbb
jmp
fstp
popa
psubusb
scas
push
not
dec
pop
jbe
aad
ror
daa
adc
pop
scas
cmp
adc
or
sub
pop
mul
int
sub
and
inc
in
(bad)
inc
iret
inc
jb
xchg
loopne
jl
mov
cwde
adc
pushf
out
addr16
addr16
mov
test
mov
mov
xchg
mov
stos
push
cdq
std
sbb
jge
pop
call
int3
mov
and
js
mov
scas
outs
lods
test
mov
sbb
add
dec
fucom
jnp
in
jp
xchg
jmp
sub
dec
pop
jmp
cmp
test
sbb
cs
add
mov
jae
jge
stos
lock
bswap
cmp
and
popa
test
xor
sub
xchg
pop
jb
movs
popa
or
xchg
push
jge
movs
movs
xlat
fcmovbe
push
icebp
cmp
mov
ins
mov
mov
call
lock
and
addr16
mov
add
out
test
and
push
jne
(bad)
out
mov
jl
rol
dec
aad
in
xchg
sbb
and
clc
push
add
pop
push
call
add
or
retf
cmps
pushf
mov
dec
cmp
jl
repnz
cmp
lods
stos
icebp
mov
mov
inc
stc
adc
fist
push
mov
push
jp
mov
pop
loop
jne
adc
pop
daa
mov
or
test
in
les
push
fdiv
cmp
cmp
mov
xchg
dec
mov
sub
mov
sbb
les
push
clc
add
fdiv
or
lods
adc
ret
dec
into
test
mov
sar
push
dec
dec
mov
mov
adc
xor
adc
add
xor
jae
imul
mov
mov
inc
and
les
sub
pushf
xor
push
loopne
imul
retf
mov
lea
sbb
xchg
ja
pop
xchg
xor
outs
outs
inc
mov
mov
mov
int
iret
xchg
sub
leave
or
iret
in
push
into
pop
pop
cmc
push
push
iret
div
addr16
mov
cmc
mov
jae
sub
je
ds
aam
mov
sar
es
dec
jmp
ja
and
push
shl
daa
lock
xor
imul
or
(bad)
fistp
sub
fwait
jle
stos
mov
pop
cmc
push
mov
and
xor
push
mov
push
jae
fcmovnbe
std
jmp
test
mov
dec
sbb
test
xor
repnz
fiadd
in
pop
retf
sbb
push
rcl
fwait
nop
ror
jle
add
aaa
lods
rol
add
gs
std
imul
pop
test
pushf
or
fisub
out
or
adc
test
mov
sbb
inc
jno
xchg
bound
adc
in
and
nop
imul
xchg
xor
xor
mov
and
xor
lahf
push
fbld
out
mov
movs
mov
outs
xor
rcr
fiadd
cwde
repnz
imul
cmc
repnz
pop
mov
xor
mov
pop
xchg
cdq
fcomp
jmp
ror
cmp
fld
and
pop
outs
xchg
(bad)
in
fisttp
stos
test
daa
dec
lods
nop
pop
dec
xchg
inc
push
adc
lds
std
(bad)
shr
jl
sub
xlat
mov
out
ror
fucomi
int
js
push
into
and
jge
inc
pop
test
fnstcw
mov
call
mov
in
jb
arpl
jg
or
sbb
mul
ror
mov
retf
adc
inc
xor
push
mov
pop
js
jecxz
inc
cmp
idiv
daa
fldenv
push
push
cmp
out
and
mov
add
jnp
enter
inc
(bad)
cmp
xor
push
jb
(bad)
outs
mov
fstp
lods
movs
lock
mov
sbb
and
and
sub
jg
cmp
jnp
(bad)
jne
cwde
int3
iret
xor
movs
enter
sbb
push
jl
(bad)
lock
mov
repnz
aas
push
jae
out
movs
loopne
(bad)
xchg
pop
outs
test
rcl
(bad)
leave
inc
cld
sti
jle
sub
addr16
xor
xchg
call
aaa
add
push
sbb
push
bound
mov
jmp
xchg
lods
pop
and
adc
inc
pop
xchg
fwait
popa
bound
xchg
mov
imul
dec
jbe
sub
add
cmp
mov
imul
sub
pop
retf
or
add
fmul
call
rol
and
jge
xchg
lahf
jg
stc
repnz
mov
(bad)
ins
pop
sub
fnstsw
jnp
lahf
addr16
aas
test
push
(bad)
or
mov
jge
mov
mov
hlt
js
adc
mov
shl
inc
nop
or
mov
dec
loop
push
rol
cmp
cmp
nop
fisub
in
aaa
jle
jne
nop
rcl
inc
add
adc
ja
cmp
cmc
add
push
scas
sar
(bad)
je
fnsave
mov
js
xchg
repnz
jns
or
(bad)
lods
outs
in
jp
pop
dec
adc
mov
push
cdq
cmp
xchg
in
mov
sbb
push
pop
adc
mov
dec
fisubr
mov
retf
push
movs
push
sar
or
xor
sbb
cmp
inc
add
and
inc
(bad)
xor
mov
fstp
mov
or
jnp
in
loopne
(bad)
int
ret
xchg
cdq
dec
dec
les
fcom
xor
push
sbb
ins
lea
push
loope
dec
jo
mov
dec
int3
std
pop
add
in
mov
mov
adc
retf
dec
pusha
jmp
call
stc
mov
jecxz
mov
fs
bound
and
fild
dec
xchg
in
lds
jmp
aaa
shl
ds
add
das
repz
iret
or
jb
or
mov
or
mov
lods
lds
je
out
sub
imul
mov
in
(bad)
enter
test
ret
pushf
shl
arpl
(bad)
cmp
dec
mov
dec
mov
mov
nop
pop
fcomp
and
mov
xor
and
fld
mov
jecxz
adc
test
fcomp
mov
repz
mov
fmulp
loop
pop
repnz
in
stc
ins
in
sar
fcomp
ret
hlt
xchg
mov
iret
inc
dec
xlat
or
cmc
gs
(bad)
cwde
or
jno
dec
outs
imul
stos
sbb
ficom
xor
retf
add
mov
fstp
imul
icebp
movs
in
push
push
in
push
pop
int
pop
pop
jle
cmp
loop
adc
fwait
movs
mov
lds
test
ret
inc
(bad)
fsubr
test
mov
cmp
xor
xchg
cs
push
lock
sbb
pop
dec
and
outs
popf
inc
inc
jecxz
mov
inc
jb
js
mov
inc
mov
dec
(bad)
arpl
ins
in
mov
cmp
sti
lods
jp
rol
je
add
sahf
mov
int3
push
addr16
push
enter
cmp
dec
jb
fist
stc
push
paddusw
popa
dec
jae
clc
xor
or
ds
pop
push
arpl
pslld
repz
cmp
adc
mov
mov
mov
shl
cmp
sbb
fs
or
pop
jnp
adc
pop
push
and
stos
into
and
into
jbe
xor
sub
test
pop
mov
retf
mov
push
jg
adc
xor
push
pop
mov
sbb
mov
jle
ja
mov
stos
cld
jae
cmp
lods
icebp
and
in
mov
(bad)
mov
jmp
aaa
add
scas
sbb
fsub
mov
int3
inc
push
mov
sbb
call
pop
inc
cmps
xlat
into
mov
sub
into
cld
sahf
and
xor
div
and
les
jmp
xor
ins
aas
or
xchg
mov
and
sbb
sub
iret
movs
movs
adc
scas
fld
xchg
scas
jmp
adc
pop
inc
xor
mov
cwde
mov
xor
clc
xor
mov
shr
dec
scas
mov
or
adc
cmps
mov
or
mov
mov
cdq
and
xchg
ins
pop
ds
cmp
rol
or
push
fsubrp
dec
iret
imul
mov
add
push
sti
gs
cmps
mov
pop
cwde
rcr
mov
push
fs
gs
(bad)
enter
inc
jae
mov
xchg
out
xor
mov
loope
add
imul
push
mov
pop
imul
mov
lock
inc
sbb
lea
jno
xchg
aad
lock
iret
jge
stos
xchg
test
or
pop
int
outs
test
and
or
or
fimul
or
sbb
inc
and
out
aas
pop
les
loopne
pop
or
adc
fwait
icebp
cmp
das
xchg
add
hlt
stos
leave
xor
push
outs
fisub
xchg
pusha
xchg
repnz
xor
mov
imul
data16
ins
add
mov
mov
std
cmp
call
daa
out
sbb
jmp
ins
(bad)
pop
out
test
push
ins
sahf
idiv
test
and
jmp
pop
jne
sbb
and
in
cli
repnz
jmp
jae
xchg
lock
mov
jno
les
sub
xor
jae
pop
jmp
dec
fucom
or
jns
test
sub
add
mov
push
cld
aas
dec
enter
mov
cli
mov
jbe
repnz
mov
jmp
jbe
pusha
xchg
xchg
leave
cwde
pop
cmps
mov
shl
fwait
stos
aaa
mov
rcl
outs
cdq
or
adc
cmps
adc
(bad)
fxch
push
outs
xlat
dec
aad
jmp
mov
out
fdiv
dec
xor
cmc
push
pop
xchg
pop
in
loopne
sbb
and
pop
imul
aaa
(bad)
cmp
mov
std
ror
in
push
xor
fwait
sub
adc
or
adc
xchg
cmp
test
fwait
sar
sub
cld
test
mov
jmp
and
push
jmp
cwde
add
mov
or
cmp
stc
xchg
lods
shl
jmp
xchg
mov
push
push
jmp
mov
mov
ja
ss
and
call
neg
mov
xchg
das
push
lods
xchg
dec
shl
sahf
sbb
pop
and
and
(bad)
test
and
icebp
aam
call
(bad)
out
cmps
mov
(bad)
and
and
push
pop
dec
mov
scas
aad
add
mov
pop
addr16
cs
ss
push
sub
mov
mov
sysret
adc
push
push
mov
out
loope
ins
icebp
sbb
jbe
jb
pop
bnd
jbe
icebp
bound
and
fdivr
mov
pop
loope
mov
fadd
push
rol
das
push
enter
ss
out
inc
jno
push
pop
lea
sbb
mov
xchg
es
and
sbb
push
and
test
pop
bound
not
pop
rep
mov
jg
jmp
pop
les
mov
jg
rcr
xchg
fist
out
rcl
ret
inc
xchg
ins
mov
enter
popa
pop
mul
xchg
test
jbe
push
loope
jg
stc
lds
popa
push
test
scas
push
data16
jp
(bad)
mov
or
mov
mov
mov
pop
push
nop
or
ss
nop
arpl
jmp
jmp
jecxz
rcr
mov
mov
jg
pop
lods
fist
fnsave
dec
retf
scas
jecxz
pop
mov
mov
push
jmp
jecxz
(bad)
imul
mov
jmp
sbb
mov
test
pop
cs
push
push
jno
pushf
pcmpgtd
mov
fld
test
int
data16
push
mov
lds
dec
sti
push
dec
daa
fnstenv
popf
push
and
push
sbb
in
pop
lds
(bad)
xor
rol
push
cld
or
leave
pop
add
ss
mov
cmp
test
or
sti
or
push
mov
scas
cmp
ja
push
mov
mov
out
fiadd
cmp
pop
rol
xchg
ss
shl
push
aaa
pop
popa
inc
stc
stc
jecxz
(bad)
ffree
js
(bad)
clc
inc
aas
or
xor
mov
arpl
inc
pop
retf
or
cld
adc
add
or
dec
xlat
xor
lods
jp
pop
mov
fs
adc
aad
lea
cmc
enter
adc
mov
jne
push
shl
sbb
lds
pop
sub
cmps
xchg
add
jle
inc
sub
mov
loop
push
out
adc
out
jb
stos
mov
in
pop
xchg
xchg
mov
into
movs
cmc
xor
pushf
cmc
or
mov
adc
push
loop
push
or
data16
push
inc
or
cld
js
push
hlt
mov
aam
ret
mov
inc
inc
pop
popa
push
xchg
cmp
outs
idiv
push
cmp
ss
jge
sbb
loope
fbstp
cdq
sub
push
adc
cmp
int
lods
pop
fs
enter
pop
aaa
mov
clc
hlt
or
out
mov
cmp
pop
sbb
shr
ss
std
mov
stos
cmp
inc
dec
xchg
push
mov
sub
pop
pop
adc
(bad)
int
xchg
push
xor
xor
xchg
pop
cmp
dec
xchg
and
fbld
sbb
fisttp
jae
int
imul
mov
add
mov
xchg
xchg
js
(bad)
jge
icebp
inc
cwde
pop
addr16
jle
mov
xor
enter
xchg
lock
sub
outs
or
xchg
sub
test
xor
ja
test
mov
gs
mov
xchg
sub
sbb
sub
add
pop
aad
cmc
loopne
push
cmp
sub
xor
retf
mov
mov
shl
sbb
dec
stc
test
ret
mov
mov
nop
cmps
sub
jge
je
xchg
sbb
mov
cmp
stos
lahf
xchg
enter
cmps
pushaw
pop
stos
adc
sub
lahf
sti
fcmovnbe
push
pop
ss
(bad)
and
add
(bad)
jno
jg
pop
retf
aas
dec
stc
dec
push
(bad)
dec
int
clc
pop
push
das
sub
mov
dec
lods
jo
pop
inc
sub
sbb
sub
je
std
add
xor
push
push
sub
dec
add
jno
sub
push
in
xchg
mov
jns
push
repnz
cmp
pushf
mov
cs
scas
adc
push
aas
mov
(bad)
pusha
int
sub
enter
dec
jmp
jg
add
out
inc
sbb
imul
jge
jecxz
cli
inc
call
inc
enter
add
mul
outs
push
inc
jns
int
mov
ins
jg
fisubr
mov
push
xchg
arpl
jl
or
push
cmp
mov
ja
out
xor
popf
xor
jp
cmps
inc
and
dec
lods
adc
call
mov
addr16
dec
adc
pop
retf
jle
sahf
loopne
in
dec
sub
out
in
cld
loop
nop
sbb
xchg
jnp
fiadd
xchg
pop
dec
lahf
dec
pop
push
ret
jl
(bad)
gs
cmp
les
popf
cmps
and
adc
pop
adc
scas
fucomp
sub
adc
enter
(bad)
sub
ins
cwde
arpl
in
jb
mov
or
push
stc
mov
pusha
sbb
mov
in
xor
push
pop
mov
xchg
sub
test
cld
jo
jmp
ja
in
movs
dec
call
mov
adc
mov
into
mov
sub
int3
scas
repz
bswap
mov
add
aas
push
sub
sbb
add
jne
sub
cmp
sbb
and
mov
mov
jno
xchg
leave
inc
adc
fcomip
outs
mov
popa
out
fst
xchg
xchg
hlt
inc
mov
push
mov
mov
sbb
mov
adc
retf
(bad)
jl
push
push
adc
ret
ins
test
popf
dec
jae
and
fcomp
lods
xchg
push
xchg
adc
mov
push
in
xchg
dec
(bad)
push
push
jmp
in
xchg
in
popf
imul
stos
mov
cdq
in
push
xor
xchg
(bad)
sub
movs
jmp
xchg
mov
sar
pop
or
shl
pusha
stos
ss
pushf
fdivr
test
cmp
inc
into
fmulp
shl
clc
inc
gs
adc
sub
cmps
jmp
call
in
lods
(bad)
jbe
inc
xlat
dec
dec
jns
or
out
sub
test
or
cmp
rcr
dec
cmps
xor
jnp
mov
cmp
mov
sti
stc
adc
or
sub
out
fisttp
test
sub
std
add
fwait
inc
cwde
aam
jae
mov
sub
mov
repnz
enter
aam
inc
jmp
add
xor
mov
push
sub
dec
in
cld
dec
mov
jg
add
movs
jnp
lods
repz
mov
inc
jb
add
and
lock
xlat
adc
int3
jo
shl
jmp
repnz
call
xor
rol
inc
pop
aad
ds
inc
mov
sbb
outs
cmps
es
ins
cmc
lds
xor
xor
xchg
mov
xchg
push
sub
(bad)
fnstcw
pop
fs
mov
jmp
jecxz
mov
cwde
out
shl
mov
cli
dec
lea
call
ror
cwde
adc
mov
dec
sbb
mov
inc
mov
outs
mov
inc
pop
cmp
repz
jae
dec
sbb
test
mov
pop
(bad)
and
sbb
mov
xor
pusha
push
add
repz
ds
sti
inc
adc
data16
lahf
xchg
in
ror
jae
out
push
in
shl
or
test
cs
mov
push
cmp
fisub
cmp
retf
pusha
ja
pop
sbb
sar
ss
pop
adc
mov
jecxz
pop
push
add
popa
jecxz
test
lock
jp
adc
cmp
adc
jp
jnp
enter
or
xchg
xor
mov
xor
pop
push
mov
mov
lods
adc
call
pushf
call
pop
inc
jne
int3
ds
stc
dec
outs
inc
push
sbb
jo
int3
clc
(bad)
jmp
jmp
inc
jle
sub
fnstenv
ret
mov
cmp
stos
push
lea
sahf
outs
ss
ja
outs
subps
pop
sbb
jns
xchg
push
push
xchg
sbb
call
push
ror
pop
sbb
ret
sbb
dec
mov
test
ret
push
adc
add
cwde
lahf
and
and
lock
or
loop
add
leave
cmp
dec
push
adc
adc
fmul
retf
stos
sbb
cwde
cdq
xchg
cs
ins
or
out
inc
sahf
push
sbb
dec
sub
fwait
inc
daa
xchg
adc
adc
xchg
imul
sub
xchg
jbe
mov
pushf
pop
loopne
and
shl
mov
xchg
fst
inc
gs
jg
lods
fcomp
aam
pop
out
ret
jg
and
fsub
inc
dec
jnp
push
popf
(bad)
push
mov
mov
lea
jae
adc
dec
cmp
or
dec
movs
aad
loop
xor
nop
call
shl
ror
sub
(bad)
adc
pop
mov
int
pop
or
and
add
mov
push
cmp
and
mov
sub
out
xchg
sbb
mov
pop
(bad)
lods
jge
and
test
mov
jle
jge
mov
hlt
xor
push
sbb
mov
pop
pop
es
popa
and
cdq
sahf
inc
pop
adc
mov
push
das
ret
fsub
push
push
xchg
or
jl
dec
(bad)
cli
xchg
mov
sbb
cmp
sub
data16
mov
pop
test
push
ret
cmps
mov
mov
dec
inc
sbb
mov
outs
mov
mov
push
jne
rcr
stos
xlat
jecxz
js
jno
and
gs
jae
or
sub
mov
jle
out
rol
cdq
xor
rol
ins
iret
je
std
jg
mov
xor
dec
adc
aad
mov
cmps
or
fdiv
js
sbb
xchg
addr16
dec
addr16
xchg
stos
ins
pop
loopne
test
inc
cmp
inc
sbb
cli
pop
mov
clc
or
sbb
rcl
(bad)
shl
sti
mov
leave
faddp
inc
dec
mov
lock
cmp
test
call
dec
mov
adc
push
pop
ins
popa
adc
adc
(bad)
jns
jmp
mov
cmps
and
xchg
(bad)
rcl
or
out
pop
ror
shl
dec
pop
dec
popf
rcr
popf
dec
dec
outs
xchg
jp
inc
(bad)
xor
push
cmps
and
push
sti
test
in
mov
mov
push
inc
movs
sbb
rcr
xchg
mov
mov
lea
push
movs
lods
add
jl
xchg
pop
pop
out
(bad)
push
push
shl
xor
sbb
(bad)
dec
xchg
dec
fwait
xchg
sbb
pushf
in
movs
int
fs
int
adc
push
mov
mov
rcr
out
sub
inc
sti
cmps
pusha
add
jnp
scas
sbb
fidiv
xor
test
repnz
mov
lahf
push
adc
leave
aaa
aas
scas
lea
lods
add
inc
or
ins
pop
retf
pop
fiadd
inc
ja
mov
sahf
out
daa
and
add
sub
repnz
loope
mov
xor
daa
cmp
es
rcr
pusha
mov
scas
jecxz
mov
aaa
jbe
out
call
test
rol
adc
call
sbb
int3
clc
mov
repnz
outs
es
fneni(8087
test
out
mov
push
ins
stc
fdivr
stos
pop
ret
or
out
cmps
in
dec
push
pop
jp
je
fldl2t
iret
xchg
sub
in
xchg
rcr
sbb
fdivr
sar
push
add
mov
cmp
xor
push
push
xchg
call
inc
add
call
sub
cmps
xchg
movs
test
pandn
mov
clc
ret
mov
push
out
mov
add
push
loop
push
sbb
dec
inc
test
sbb
addr16
test
jnp
push
out
int3
mov
jmp
jecxz
inc
mov
add
mov
cmp
cmp
jbe
ins
and
mov
jge
shl
xchg
sti
mov
or
push
lds
jo
jle
cmp
cld
mov
ret
sbb
xchg
sub
pop
pop
sahf
add
mov
ret
add
sub
sbb
rcl
aas
xor
icebp
cpuid
cmps
cs
test
das
or
xchg
sub
xchg
sbb
iret
jle
pop
jae
into
cli
dec
test
dec
cdq
fcmovne
or
cdq
repz
jne
mov
or
cmp
mov
mov
enter
sub
cmp
repnz
cwde
and
mov
push
ret
jno
push
xor
adc
pushf
enter
push
enter
out
pop
arpl
(bad)
loop
mov
test
mov
(bad)
sahf
sahf
mov
sbb
and
scas
icebp
rcr
mov
gs
aam
in
loop
in
cmp
in
or
mov
pop
xor
(bad)
mov
pop
bound
ins
movs
shl
addr16
(bad)
(bad)
mov
test
js
mov
pop
xchg
enter
out
jmp
xchg
push
adc
lahf
cli
mov
and
pop
pop
shl
dec
iret
fwait
cmp
cmc
jp
mov
repz
fdiv
cmp
xor
ret
out
sub
sbb
call
imul
pop
mov
out
pop
sub
mov
jo
shl
mov
jge
out
sar
jmp
shl
mov
dec
mov
inc
mov
ud2
xchg
scas
cmp
fnstsw
sbb
stos
xor
rcr
mov
mov
stc
(bad)
sbb
or
sub
cmps
pop
daa
fdiv
push
push
xchg
and
scas
jmp
out
cs
or
or
std
scas
push
mov
dec
imul
clc
jo
inc
(bad)
ret
loope
jmp
and
cmp
mov
rol
and
lods
jns
es
jno
push
xor
(bad)
shl
sub
mov
cmp
pop
mov
popf
dec
js
pop
loope
ret
push
nop
sbb
(bad)
(bad)
fs
pop
in
xchg
xor
jmp
cdq
movs
lds
adc
pop
es
or
arpl
pop
test
ja
js
movs
sub
daa
jmp
test
out
sbb
cmp
push
movs
leave
mov
dec
fstp
jbe
shl
cmp
mov
pop
mov
cmp
or
or
jo
and
loop
add
loopne
mov
div
xchg
outs
aam
aas
ds
inc
mov
daa
mov
mov
out
(bad)
call
cmp
mov
shl
sub
std
rcr
in
stos
mov
retf
outs
fisttp
call
mov
es
dec
mov
shl
arpl
(bad)
xor
jle
pop
les
dec
xor
imul
bound
xor
sbb
pop
xor
mov
xor
rcl
xor
push
xchg
sub
mov
iret
movs
or
sub
dec
imul
xor
inc
into
jge
inc
cmp
pop
xchg
fadd
std
leave
test
mov
adc
xor
adc
std
jle
adc
mov
syscall
dec
mov
dec
xchg
cmps
(bad)
das
js
jge
into
das
sbb
adc
cmp
jne
inc
push
pop
scas
pop
push
pop
das
ror
mov
jmp
dec
mov
outs
adc
and
scas
out
gs
lods
dec
inc
lock
stc
xorps
mov
inc
dec
mov
add
bound
mov
icebp
jo
jo
jmp
push
cmp
(bad)
movs
push
or
xchg
adc
arpl
xor
sub
mov
in
in
jp
in
mov
jecxz
(bad)
retf
clc
push
pusha
cmps
dec
cmp
gs
xchg
cmp
and
lock
cmps
sub
pop
out
xchg
xor
jmp
enter
mov
pop
xchg
xlat
das
es
(bad)
or
(bad)
(bad)
add
test
push
scas
mov
push
sbb
aad
jae
stos
out
or
dec
pop
ret
scas
jg
sbb
pusha
loop
adc
outs
adc
mov
mov
test
mov
sbb
mov
fwait
lds
cli
dec
mov
fidiv
pop
push
(bad)
test
int
xor
dec
xor
in
daa
loope
(bad)
jmp
aaa
jne
sbb
xor
add
and
dec
inc
sub
out
xor
cld
dec
and
adc
push
and
cmp
cli
ja
mov
cmp
and
or
mov
mov
mov
fnsave
arpl
test
push
inc
dec
out
cmc
daa
test
lods
xor
jmp
xchg
(bad)
scas
imul
jp
sbb
ds
dec
add
shl
dec
gs
adc
imul
repnz
cmp
jg
jno
adc
in
cmp
imul
ins
mov
adc
inc
mov
mov
(bad)
iret
mov
add
loop
xchg
xor
mov
mov
cmp
test
cs
cli
hlt
mov
xchg
(bad)
movs
add
stc
and
bound
xchg
aaa
rcl
sub
dec
sub
retf
shl
mov
lds
inc
lds
mov
sbb
push
xchg
inc
dec
(bad)
lds
les
pop
pop
lds
xchg
xchg
mov
dec
cmp
push
call
or
inc
ja
cli
fmul
(bad)
ror
je
fst
sub
or
outs
cmp
enter
or
pop
jbe
aad
into
mov
xlat
pushf
mov
sbb
mov
push
cdq
nop
inc
add
movs
fsubr
aam
or
xor
fnstsw
xor
pop
or
mov
cmp
mov
gs
fwait
jmp
jecxz
out
push
daa
nop
sahf
outs
imul
out
mov
dec
mov
or
mov
fcomi
mov
cli
cmps
sbb
jge
sar
daa
test
push
sub
fcom
in
sub
xor
and
push
push
aam
stos
jns
aad
push
pop
jbe
mov
in
div
xor
rcl
push
mov
push
mov
sbb
daa
mov
inc
xchg
mov
cmp
ja
push
aas
aam
and
xchg
and
sar
xchg
fnstcw
sub
in
cs
push
cmp
xor
jg
jns
jb
jmp
jle
lock
sbb
xchg
mov
out
push
in
jecxz
xchg
sbb
or
js
fdivr
and
pmullw
(bad)
out
xor
hlt
call
adc
push
dec
ret
pop
call
data16
cli
addr16
and
jmp
hlt
out
mov
cdq
and
adc
test
mov
adc
sti
xlat
popa
sub
sbb
mov
pop
xchg
add
push
or
movs
test
sub
sub
sar
ins
mov
inc
pop
inc
daa
mov
sub
add
and
add
iret
call
test
push
mov
mov
sbb
xor
daa
ret
sar
xchg
repnz
popf
ds
lods
cs
sar
nop
je
ins
ret
je
sub
(bad)
jb
nop
sub
mov
inc
push
std
inc
repnz
adc
pop
xor
mov
movs
lds
mov
popf
inc
inc
repnz
out
or
shr
test
aas
dec
aad
popf
(bad)
std
mov
pop
(bad)
push
aam
movs
xor
dec
es
fldcw
pop
and
imul
add
retf
pop
cwde
sub
adc
sbb
dec
retf
stc
jmp
xchg
jae
mov
or
pop
sub
daa
push
neg
cmps
nop
pop
stos
in
ds
and
xlat
push
hlt
sbb
sub
push
into
push
gs
push
ja
sub
in
stos
pushf
xchg
repz
jg
push
mov
push
loop
mov
nop
mov
shl
data16
inc
mov
jo
jp
adc
bound
push
retf
imul
mov
or
jnp
cmp
lahf
push
mov
inc
repnz
and
push
ja
rol
push
xlat
stos
mov
sub
pop
pop
(bad)
fistp
(bad)
sbb
mov
pop
int
ror
retf
cs
movs
add
and
lods
inc
ss
imul
mov
jecxz
xor
sub
rcl
dec
add
inc
xchg
add
stc
mov
sti
xchg
inc
xchg
data16
ins
inc
push
test
adc
fsubrp
sti
out
imul
cmps
push
in
and
jnp
xlat
shl
and
mov
cmc
loop
inc
sub
adc
ss
shr
dec
mov
mov
inc
das
pop
and
and
xor
stos
adc
call
mov
mov
ret
sar
lock
mov
push
mov
int
rol
xor
les
dec
jp
jmp
aad
mov
pop
jo
add
stos
lea
push
push
adc
fucomip
in
dec
imul
xchg
mul
sbb
adc
ret
dec
stos
inc
adc
add
idiv
imul
mov
and
mov
xchg
jne
mov
cmp
and
retf
mov
sub
jle
dec
jp
cs
fmul
cmps
sub
add
xchg
jno
xor
push
or
jle
dec
mov
xchg
jae
add
lahf
stc
mov
pop
(bad)
jmp
jg
nop
sub
scas
jp
cmp
and
fbld
pop
inc
add
imul
sub
pop
sub
dec
push
(bad)
pop
test
pop
icebp
pop
mulps
push
mov
test
sub
and
inc
sub
jnp
(bad)
or
lock
pop
pop
adc
scas
out
mov
ins
jo
in
adc
mov
xchg
cmp
pop
add
push
push
(bad)
retf
in
adc
push
pop
jmp
pop
pop
adc
mov
inc
js
jbe
dec
mov
stc
test
xchg
xchg
push
imul
push
ins
pop
and
add
pop
mov
es
add
rcr
or
xor
adc
div
cld
stc
or
leave
xchg
cdq
(bad)
imul
movs
sub
mov
sbb
ins
rol
lahf
pop
sahf
cmp
or
sub
sbb
add
movs
out
adc
pushf
jno
xlat
test
push
mov
pushf
mov
imul
mov
pop
mov
int3
pushf
(bad)
and
xchg
sub
ja
xor
sub
fild
pop
xchg
(bad)
xchg
add
int3
mov
xchg
jg
adc
in
dec
and
mov
sub
jg
xor
nop
das
mov
mov
fcmovnbe
in
lods
sbb
jl
jae
push
ds
stos
cmp
mov
jmp
imul
sti
mov
mov
push
mov
dec
xor
mov
inc
test
push
cmp
inc
lock
aaa
add
jle
cmp
jecxz
sbb
fild
stc
out
cmp
fmul
(bad)
(bad)
jne
out
fld
repnz
sbb
jne
inc
outs
(bad)
jp
adc
(bad)
outs
repnz
rcr
inc
push
xor
ss
adc
sbb
sti
xchg
cmp
fcom
inc
ror
movs
push
jns
xor
sub
xor
loope
add
fcmovne
js
or
jnp
pusha
or
clc
pop
ins
and
popf
dec
enter
jns
lahf
in
cmps
push
mov
test
std
fsubr
mov
mov
inc
je
iret
adc
aas
and
mov
(bad)
sub
call
not
push
xor
(bad)
push
or
mov
mov
inc
out
dec
js
retf
into
nop
pop
in
lds
dec
push
jb
inc
(bad)
jge
mov
stos
push
sahf
cs
out
jecxz
dec
cli
xchg
and
cld
sbb
loope
dec
rol
popa
push
stos
push
aas
xchg
dec
fwait
pushf
jbe
cmp
(bad)
int
in
add
and
xor
ja
dec
mov
inc
mov
push
pushf
dec
fs
test
fscale
dec
mov
arpl
jl
mov
out
test
sub
outs
(bad)
xor
push
cmps
shl
mov
imul
fnsetpm(287
movs
fsub
and
inc
sub
aam
or
inc
clc
not
addr16
cmp
jne
data16
push
inc
ss
sbb
fnstsw
aad
int3
xchg
iret
cmc
mov
sahf
or
sbb
dec
xor
cmp
es
enter
in
call
shr
inc
lods
stc
push
hlt
cmp
data16
push
call
mov
mov
lock
movs
dec
loopne
fst
js
inc
adc
pushf
push
jbe
sti
test
jl
push
sti
dec
int
xlat
sub
xor
je
push
mov
repz
jo
adc
cmp
nop
popa
mov
mov
cwde
mov
jo
push
aam
scas
sub
jno
dec
sub
test
mov
pop
icebp
pop
adc
mov
mov
cmp
push
(bad)
loop
xor
adc
mov
scas
or
int
pop
ins
rcr
mov
sub
xchg
je
sbb
add
rcl
push
test
cld
jle
jno
inc
and
xor
add
xchg
add
sbb
cs
and
cli
and
and
jb
sub
adc
ins
or
push
cmp
(bad)
dec
dec
xchg
adc
mov
nop
mov
jo
pusha
inc
(bad)
mov
addr16
or
int
ror
sub
ret
pop
pop
stos
ss
mov
(bad)
xchg
ins
mov
jecxz
jno
imul
stos
mov
jecxz
dec
or
sbb
sub
push
sub
sbb
in
ror
mov
lahf
inc
(bad)
aas
stc
into
dec
adc
je
std
push
pusha
jmp
mov
(bad)
je
jmp
cs
aaa
add
fwait
add
stc
pop
pop
mov
clc
ror
sbb
scas
dec
fidiv
sub
ja
aad
daa
inc
cs
sti
mov
jbe
push
lds
pop
fs
movs
adc
arpl
push
push
and
in
pusha
cmc
imul
loope
fisttp
popf
pusha
test
mov
shl
ss
(bad)
push
jp
jecxz
xlat
jb
(bad)
mov
scas
das
in
cmps
retf
xor
ins
mov
dec
jmp
jae
sub
ret
call
test
push
sub
dec
mov
cwde
jbe
pop
mov
fwait
clc
(bad)
mov
inc
ret
fadd
mov
add
push
in
loope
cmps
inc
mov
aad
stos
rol
fldenv
sub
or
lods
jl
mov
les
push
shr
xlat
fwait
scas
mov
cwde
dec
adc
(bad)
push
jae
sar
jmp
push
xchg
lock
call
call
inc
and
(bad)
sbb
jnp
sbb
mov
and
xlat
mov
popa
in
sbb
aam
loopne
mov
sti
out
jge
sub
cmps
addr16
ds
sbb
stc
mov
jg
imul
(bad)
xchg
jmp
div
jnp
ficomp
mov
stos
sbb
pop
or
or
adc
add
sub
dec
scas
add
idiv
inc
jns
ror
rcr
imul
std
cmp
and
ss
lock
(bad)
nop
add
sti
cld
std
mov
push
js
fdivr
jmp
xchg
call
push
mov
pusha
jmp
ja
jo
rcl
ja
ins
dec
adc
lock
call
fisttp
es
jge
adc
or
dec
call
mov
inc
push
dec
sub
mov
adc
mov
dec
outs
push
adc
or
scas
xor
pushf
jb
sub
test
les
fistp
pop
std
mov
in
popa
push
repz
sbb
ret
mov
stos
mov
and
push
jp
pop
xor
sbb
in
inc
cmp
jmp
fnstenv
cdq
inc
xlat
into
mov
pop
pusha
push
jmp
dec
inc
movs
jb
pushf
std
shr
aam
inc
and
(bad)
neg
in
xor
sbb
loop
and
sar
jno
mov
test
mov
mov
inc
mov
jecxz
sub
push
adc
out
push
add
xor
retf
xor
fsub
sbb
mov
xchg
or
out
cwde
hlt
jg
xlat
pop
enter
push
sub
dec
xchg
xchg
addr16
nop
pop
or
xor
(bad)
aas
mov
mov
mov
mov
fidiv
(bad)
pop
shl
cs
fsubr
hlt
mov
retf
dec
xor
jns
cli
sbb
ret
mov
es
lods
adc
repz
sbb
inc
or
jns
inc
lds
cmps
scas
aad
xor
xchg
inc
push
popf
bound
and
loope
sahf
aaa
stos
test
xchg
repz
ret
pop
je
add
mov
mov
call
es
(bad)
out
mov
sub
into
dec
bound
and
into
pushf
vpslld
fsubp
je
aam
mov
add
jl
cmp
mov
ret
lods
ss
push
shr
inc
sbb
(bad)
adc
jne
mov
inc
push
mov
rcr
dec
jo
mov
xchg
mov
sub
mov
ja
sbb
sar
dec
mov
sub
icebp
mov
fxch
xchg
sbb
enter
dec
je
jle
repz
(bad)
in
mov
push
enter
mul
adc
movs
test
repnz
movs
xchg
les
ret
je
ret
dec
lds
movs
mov
push
loopne
arpl
pop
mov
xchg
cmp
jae
mov
(bad)
popf
das
lea
mov
jle
add
sbb
inc
ds
test
loope
dec
mov
and
stos
pushf
inc
cmps
inc
add
lahf
sbb
sbb
adc
jmp
or
out
pop
ret
mov
adc
mov
pusha
pop
add
out
add
outs
ret
mov
inc
sub
xchg
iret
adc
inc
sub
sbb
sbb
test
retf
aas
imul
iret
sub
jae
adc
sbb
popa
(bad)
dec
popf
clc
cmp
cmps
mov
mov
(bad)
aaa
jmp
(bad)
inc
neg
sub
(bad)
xchg
fdivrp
xchg
outs
mov
cmc
fcmovbe
or
mov
adc
and
mov
add
push
sub
mov
movs
sub
add
and
pop
or
cmp
push
cs
push
clc
les
dec
je
popf
cmp
call
idiv
fld
pop
cmp
scas
push
mov
clc
xor
push
dec
sti
fisubr
out
xchg
push
neg
add
mov
bound
xor
sbb
pop
add
xlat
stos
pop
ret
ins
shr
rol
(bad)
scas
mov
aaa
inc
mov
mov
dec
leave
xor
sub
cmps
aaa
lock
inc
mov
(bad)
xchg
lods
je
popa
in
mov
movs
push
mov
push
ins
mov
test
movs
dec
add
and
stc
xor
add
and
add
popa
leave
and
repnz
dec
adc
fsub
add
push
jo
clc
dec
xor
cld
scas
sub
and
jb
je
and
lock
test
xlat
adc
and
mov
add
add
loope
pop
out
xor
sub
sub
test
cmp
lds
dec
mov
bound
ficom
jmp
sahf
lods
mov
inc
push
mov
mov
dec
jp
add
cld
pop
inc
mov
cmps
add
popf
cmc
fild
fimul
stc
imul
call
lods
in
mov
or
push
and
ficom
push
xchg
jbe
pop
das
fmul
mov
int
add
les
jnp
cmp
add
cmp
es
jns
test
and
cmp
pop
imul
(bad)
aam
data16
fldenv
xor
jno
jle
jl
push
sub
mov
mov
mov
mov
add
sub
dec
pop
enter
mov
xor
fcomp
inc
jo
or
mov
popf
sti
dec
sbb
fs
pop
jecxz
jp
test
int
and
push
adc
arpl
icebp
jmp
jne
iret
mov
rcr
into
data16
add
iret
pop
or
into
push
mov
es
sub
adc
jg
icebp
outs
outs
push
inc
sbb
rol
jp
push
push
cdq
and
pop
xchg
mov
aam
push
pop
push
cmp
mov
xchg
dec
sbb
inc
sbb
jmp
rcl
push
(bad)
scas
bound
into
int
pop
jle
cmp
addr16
call
cmp
xor
xor
mov
jnp
push
rol
mov
push
aad
jecxz
fldenv
adc
(bad)
cmp
jmp
ins
sbb
loopne
mov
clc
push
(bad)
mov
jecxz
hlt
outs
outs
pop
dec
fidivr
mov
push
adc
and
sbb
iret
(bad)
test
mov
ja
xchg
mov
lods
push
sbb
stos
jbe
pop
sub
pushf
or
stc
mov
retf
aad
xchg
(bad)
(bad)
jne
mov
cmps
les
xor
push
push
imul
(bad)
pop
les
dec
cmp
adc
mov
push
leave
shl
sbb
lods
sbb
daa
dec
mov
dec
jmp
pop
out
(bad)
daa
adc
cmp
(bad)
mov
sub
and
sbb
add
mov
ror
pop
sahf
sahf
push
mov
mov
pusha
pop
(bad)
stc
mov
mov
mov
movs
daa
mov
je
stc
jnp
jb
push
(bad)
sub
not
mov
adc
gs
cmp
xchg
rol
mov
or
aaa
(bad)
fist
or
mov
gs
(bad)
and
shl
ins
mov
(bad)
mov
mov
scas
sti
cmp
dec
sbb
jnp
xlat
push
dec
cmovbe
pushf
retf
mov
repz
dec
arpl
push
mov
adc
pop
pop
push
shr
xchg
or
adc
cli
or
pop
push
xchg
dec
mov
xor
or
ja
shl
adc
ja
jge
mov
push
imul
lahf
iret
xor
ret
iret
inc
xchg
and
setl
fiadd
sbb
in
mov
sub
ds
cmp
jg
shl
and
and
cmp
ror
popa
mov
inc
in
push
add
mov
push
aaa
or
inc
scas
sub
scas
cs
sub
fisttp
cld
dec
xor
add
fsubr
xchg
mov
pop
jns
sub
loop
js
dec
pop
jmp
cmp
fscale
lds
ja
mov
sub
dec
dec
push
mov
xor
xchg
mov
push
mov
jg
test
push
outs
inc
loope
cmp
inc
neg
mov
cmp
mov
int
pop
mov
jo
adc
stc
cmps
lahf
arpl
std
jns
int
inc
ds
iret
fdivrp
jnp
cmp
test
lds
jle
mov
fnsave
xchg
shl
push
xchg
or
fst
pop
and
xor
and
push
popa
adc
shl
arpl
inc
or
scas
cmc
imul
mov
std
sti
mov
lea
inc
in
(bad)
cmp
add
sub
inc
in
fbstp
fimul
push
ficom
jp
and
iret
dec
xor
and
popa
xchg
(bad)
ror
not
ret
push
enter
add
inc
loope
xor
ins
cmp
stc
mov
add
(bad)
ins
mov
mov
xchg
pushf
xor
cmp
loop
xchg
ret
inc
sbb
cmps
mov
call
loope
jle
lds
adc
xchg
daa
sub
lods
inc
lock
pop
es
lods
sub
repz
cmps
mov
inc
(bad)
jmp
xchg
or
push
test
add
aad
lea
add
mov
mov
jmp
rol
xchg
pop
data16
xchg
fisubr
sub
outs
or
and
aam
cs
rcr
xchg
adc
ret
enter
popf
mov
lahf
or
mov
enter
(bad)
mov
or
mov
aaa
repz
(bad)
loop
stc
xchg
lds
adc
fild
jnp
pop
add
lahf
cmps
mov
xor
and
fnstcw
sbb
cmps
push
pop
movs
and
pop
sbb
push
cmp
cdq
cmp
sub
arpl
cmp
mov
xor
and
out
cdq
aad
mov
fstp
inc
adc
add
mov
cmp
in
add
int
mov
mov
jg
cmc
add
sub
mov
jmp
mov
xlat
fld
imul
xchg
sbb
jl
push
sub
dec
js
pop
hlt
jl
xlat
mov
jge
mov
cli
ret
dec
lods
pop
jo
(bad)
jns
xlat
inc
cmp
ja
sub
dec
push
add
mov
mov
dec
xor
movs
clc
(bad)
test
in
shr
pop
pusha
adc
mov
rep
sub
mov
pushf
aaa
xor
lahf
jge
jo
addr16
cmp
and
clc
icebp
hlt
and
cmp
rol
cli
rol
in
sbb
mov
push
nop
jnp
cmp
loopne
lods
(bad)
cmp
retf
std
ret
shufps
push
ret
fcomp
outs
inc
je
loop
icebp
xor
loop
push
data16
inc
sbb
repnz
sti
ret
and
cwde
aad
cmp
fwait
add
xchg
mov
pop
adc
retf
lods
pop
cmc
jmp
and
popa
xbegin
fwait
sbb
inc
mov
mov
push
add
mov
pop
(bad)
cmp
gs
(bad)
sub
hlt
add
mov
adc
movs
cdq
cmp
mov
xor
ss
scas
call
popa
push
test
push
push
div
imul
and
stc
mov
in
stos
cmps
inc
sbb
xchg
inc
int3
push
rol
shr
sub
in
push
in
imul
pop
mov
push
jnp
mov
jg
std
out
in
dec
pusha
xchg
add
inc
bound
add
push
icebp
shl
push
add
mov
xor
adc
jb
mov
movs
fnstcw
int3
stos
loope
out
mov
sbb
ror
jo
xlat
jle
mov
ja
(bad)
fisttp
sbb
hlt
sub
adc
adc
and
push
les
mov
dec
and
arpl
jmp
sbb
dec
cmps
sbb
aaa
inc
loop
mov
fld
arpl
and
ret
mov
inc
push
gs
inc
xchg
lahf
cmp
stc
shl
jmp
jecxz
mov
lods
jo
add
mov
scas
adc
push
pop
pop
vprotw
or
int
fisttp
push
ret
xor
inc
int
adc
mov
mov
(bad)
push
clc
ret
push
jbe
daa
popa
xchg
imul
dec
dec
jecxz
mov
dec
add
cld
clc
pop
bound
xlat
(bad)
fisubr
jle
inc
les
sbb
stos
mov
xchg
xchg
retf
cmps
bound
jg
aas
dec
sub
inc
cs
cmp
scas
les
push
or
jb
and
pop
cmp
push
mov
imul
xchg
mov
(bad)
enter
fimul
sahf
call
shl
dec
inc
aaa
cdq
arpl
dec
add
dec
jmp
out
push
lock
dec
jp
push
out
or
pop
add
push
(bad)
mov
inc
out
xor
pop
mov
add
sbb
push
repz
xchg
rol
or
jp
lods
mov
mov
adc
cmps
rol
pop
pop
les
inc
mov
adc
and
pop
push
push
sbb
mov
in
in
pop
test
or
push
xchg
mov
in
imul
push
test
aas
ret
mov
mov
iret
jb
scas
in
out
xchg
fist
sbb
rol
leave
mov
add
jbe
popa
adc
xchg
xor
pop
pop
ror
cdq
fsub
mov
aad
dec
pop
jmp
bound
inc
push
jno
neg
add
fcmovnu
std
aas
out
push
lods
repz
lock
popf
scas
dec
seto
loop
(bad)
and
cld
shl
pusha
call
xchg
call
lods
sub
xchg
scas
lahf
repz
pop
pop
sbb
xchg
push
imul
or
rcl
sar
xchg
mov
xchg
call
(bad)
pop
outs
mov
lods
inc
out
outs
(bad)
setg
jnp
or
frstpm(287
fadd
aam
and
adc
or
imul
dec
je
mov
xor
outs
jl
xchg
push
ret
jle
xchg
xchg
es
js
cli
out
mov
or
pop
fimul
aaa
pop
ins
cmp
lods
ds
stos
or
or
mov
mov
fs
inc
mov
and
or
daa
push
xlat
clc
dec
dec
inc
or
add
xchg
stos
gs
mov
mov
pop
jne
shr
ds
dec
dec
scas
lods
cdq
jmp
xchg
adc
mov
into
xchg
out
adc
or
adc
sub
inc
test
sub
add
jmp
aaa
adc
push
mov
fisttp
inc
adc
dec
add
jnp
iret
inc
shl
dec
or
inc
sbb
ins
add
cmp
imul
xor
call
daa
mov
push
add
or
mov
sbb
jmp
mov
push
jno
mov
aad
mov
jle
xor
out
jo
stos
adc
ja
add
cdq
loop
xor
adc
shr
aad
mov
cmp
lods
dec
(bad)
jne
push
outs
rcr
dec
shl
dec
add
(bad)
cld
fcmovu
sar
in
cmps
repnz
dec
std
call
mov
enter
dec
test
loopne
call
ds
mov
xchg
je
(bad)
sti
xchg
mov
sbb
fadd
pop
cmp
mov
in
xchg
mov
leave
es
and
dec
arpl
repz
sti
std
test
ins
adc
pop
adc
mov
cmp
jmp
repz
push
push
leave
inc
ins
and
dec
sbb
movs
push
call
cmp
mov
in
sahf
or
out
add
add
in
mov
daa
push
imul
xchg
jl
test
mov
add
push
arpl
jle
mov
xchg
je
stc
lock
dec
sbb
mov
adc
cmp
xor
imul
mul
cs
or
out
pop
mov
mov
jge
inc
or
mov
adc
cmp
mov
mov
cmp
and
sahf
pop
(bad)
jmp
cmp
loope
adc
jmp
jle
pop
adc
sti
mov
pushf
cli
inc
(bad)
mov
stc
cmp
push
outs
pop
or
pop
inc
adc
fwait
shl
xchg
cmp
mov
ficom
adc
mov
adc
lea
dec
pop
sar
add
mov
push
iret
(bad)
pop
jbe
out
and
sbb
dec
imul
out
mov
push
xchg
test
shr
xchg
xlat
push
cmps
rol
lea
sbb
sub
or
pushf
mov
cmp
nop
out
aaa
mov
fcmovnb
mov
out
in
or
cmp
cmp
movs
(bad)
lods
dec
dec
inc
adc
call
mov
fwait
mov
jnp
push
or
aam
je
out
push
iret
ret
clc
lods
inc
(bad)
adc
adc
xchg
scas
lds
xchg
imul
dec
mov
fild
in
ss
sbb
xchg
mov
or
mov
(bad)
xchg
cmp
dec
and
fisubr
out
jae
or
and
inc
stc
xchg
test
adc
int3
sbb
dec
dec
mov
popa
test
xchg
mov
test
cmp
mov
imul
sahf
mov
ja
jp
repz
pop
ret
repz
lock
mov
cmp
and
bound
(bad)
mov
(bad)
mov
(bad)
push
add
cmps
jge
iret
(bad)
out
inc
xor
and
mov
ss
dec
mov
(bad)
stc
aad
je
add
xor
fist
gs
push
lock
add
or
popf
stos
and
pop
daa
push
sbb
js
and
mov
sbb
pusha
push
hlt
jg
xor
dec
push
mov
inc
jle
icebp
out
cmps
sti
xor
push
xor
sti
xchg
sbb
jb
fnstsw
ret
push
retf
dec
jae
or
mov
imul
retf
(bad)
lahf
jecxz
jbe
aaa
retf
pop
ss
dec
cmc
mov
daa
sbb
pop
and
jmp
in
or
inc
mov
sbb
in
sub
jnp
and
das
push
xor
mov
mov
and
sahf
ins
push
mul
or
push
pop
inc
sahf
sub
mov
in
pop
lahf
inc
sbb
cdq
xchg
xor
or
adc
dec
fdivr
dec
sahf
xchg
movs
pop
mov
add
and
push
mov
jbe
mov
add
cmp
dec
xor
push
movs
ins
adc
inc
and
cwde
ret
iret
cs
pop
hlt
cs
mov
or
movs
xsetbv
shr
leave
pop
xor
mov
xor
dec
aad
dec
jmp
pop
push
add
ins
jecxz
lea
hlt
ret
cdq
test
xor
and
(bad)
and
add
mov
xchg
rcl
rcl
and
mov
fdivr
jg
pop
jns
inc
shl
gs
sbb
and
dec
sbb
and
add
xchg
sbb
std
lds
loopne
jmp
jp
je
leave
enter
retf
sub
xchg
lea
rol
(bad)
jmp
xchg
mov
clc
retf
into
sbb
call
popf
jbe
inc
inc
dec
lahf
pop
pop
adc
push
ficom
cwde
imul
test
add
out
ins
pop
stos
jle
add
pusha
bnd
add
test
adc
or
and
push
sbb
jo
or
lock
daa
movs
sti
add
cmps
lea
or
push
shl
push
cld
or
scas
pushf
xchg
stc
lock
out
pop
cmp
lahf
cmps
jp
adc
mov
aam
xchg
lock
sbb
rcr
fadd
jmp
inc
dec
mov
cmp
sub
cmps
mov
scas
ret
add
mov
in
inc
loope
imul
xor
xchg
adc
outs
xchg
push
or
je
neg
xchg
mov
push
fld
inc
test
cld
imul
(bad)
dec
stos
into
in
in
add
jmp
push
jns
enter
pop
push
inc
(bad)
(bad)
adc
inc
and
xor
add
fist
sbb
out
add
fimul
sbb
inc
dec
mov
stc
ss
dec
in
int3
jl
pop
jmp
and
push
jle
lahf
shl
inc
fild
pop
int
push
ret
sub
sub
cmps
lahf
mov
movs
xchg
xlat
cmps
mov
lea
xchg
jbe
add
xor
(bad)
ds
hlt
cmc
scas
push
inc
outs
movs
pop
mov
hlt
cmp
inc
jnp
sub
dec
mov
rcr
aaa
nop
inc
pop
push
sbb
cmp
loop
das
fist
loopne
sbb
mov
adc
push
mov
xchg
jecxz
push
stc
call
movs
adc
mov
cmp
ret
in
fist
sub
add
adc
popf
xor
mov
or
scas
int3
mov
(bad)
cmp
lahf
jmp
mov
shl
xor
mov
push
and
cld
aas
ins
mov
cmps
jo
jmp
and
rol
fmul
inc
mov
add
ja
sbb
xchg
stos
fcomi
sbb
lods
repnz
cmps
mov
out
or
in
iret
add
jmp
cwde
or
lea
dec
les
popa
cmp
(bad)
sub
scas
cmp
(bad)
pop
adc
jl
(bad)
xchg
dec
mov
fisubr
and
lods
test
shl
inc
inc
jle
ins
fs
push
cmp
and
and
sbb
mov
cmp
bnd
xchg
jo
aaa
mov
into
sbb
in
sub
dec
jmp
clc
dec
test
adc
aad
call
test
jns
adc
fdiv
dec
in
pushf
fwait
jbe
aam
jp
adc
call
mul
adc
jnp
adc
or
test
call
or
mov
ins
inc
cmc
fs
or
mov
ins
movs
push
or
addr16
adc
neg
mov
ins
pushf
pop
imul
dec
lods
sbb
cmp
leave
adc
arpl
xor
outs
in
aas
push
adc
test
jmp
sub
pop
fsub
out
movs
jge
iret
stc
lahf
loopne
mov
jl
jnp
in
add
xchg
cld
sbb
mov
mov
push
and
adc
mov
jae
add
fwait
rcr
push
sar
ds
inc
loope
cmps
mov
adc
add
mov
xchg
aas
test
sub
test
inc
loop
mov
lods
jbe
fcomp
sar
inc
iret
jmp
(bad)
cmps
mov
xchg
pop
fnsave
stos
cmc
fucompp
mov
pusha
enter
cmps
clc
xchg
jno
push
int
imul
adc
pop
sub
movs
cwde
mov
movs
loopne
and
xor
inc
daa
out
je
mov
inc
fimul
cmps
jl
xchg
push
lock
add
xchg
mov
sti
adc
xor
pop
adc
push
lock
sub
fdivr
mov
jbe
scas
lods
sub
xor
scas
push
sar
psubd
mov
sub
sbb
pushf
dec
and
mov
scas
ss
aam
ficom
sbb
xor
mov
in
int3
fs
mov
pop
aad
data16
call
out
shl
pop
and
inc
pop
shr
push
test
cmp
and
mov
mov
stos
popf
xchg
push
aad
or
rol
bound
add
sahf
mov
pop
ror
cmps
out
cmps
cmps
cmp
jmp
push
call
mov
rol
jnp
sub
lock
dec
in
jecxz
adc
push
lds
out
outs
dec
addr16
add
inc
sub
jbe
xor
xor
test
sub
push
pop
xor
dec
ror
ins
add
cmp
mov
loop
sbb
xchg
jb
fadd
sahf
retf
mov
jo
mov
fisttp
lahf
in
push
add
xchg
jbe
mov
add
sbb
stc
inc
jmp
push
jle
call
and
dec
outs
test
mov
xchg
dec
cmc
pop
aam
push
or
cmp
imul
xor
mov
push
push
(bad)
cli
fcom
lods
xchg
jns
fld
nop
and
push
pop
dec
jne
xchg
test
mov
mov
call
dec
sbb
cli
pop
outs
movs
call
lea
test
jae
rcl
pushf
lea
jl
test
cwde
dec
loopne
xchg
jo
inc
and
pop
sub
mov
pop
pop
push
ins
fs
repz
repz
ds
rol
mov
xor
jecxz
nop
das
daa
mov
mov
pop
fs
iret
and
push
jns
je
into
inc
daa
and
js
fisttp
cmp
in
xchg
push
push
jnp
adc
mov
pop
pushf
ins
or
fbld
ja
xor
iret
xlat
push
stos
aas
push
jl
(bad)
out
or
ins
dec
sbb
inc
call
pop
rcr
aas
fs
sti
sub
cmc
cmp
mov
sbb
ja
js
sbb
data16
aam
clc
(bad)
xchg
inc
mov
jecxz
loope
rcr
daa
xchg
aaa
mov
or
in
cld
push
fld
adc
xchg
xchg
icebp
mov
sub
pop
cmp
fs
test
or
test
fild
aas
fwait
add
outs
jbe
or
cmps
add
mov
xchg
jno
jb
dec
es
lea
and
push
out
mov
inc
xchg
push
loope
test
sti
es
or
sub
jb
sub
jmp
jne
pop
mov
add
(bad)
iret
mov
jno
nop
cmp
pop
cmp
retf
jg
inc
and
add
sub
adc
xor
mov
imul
add
sub
xchg
fadd
gs
xor
movs
sub
cmps
call
or
arpl
(bad)
or
jge
inc
mov
repz
dec
in
test
mov
xor
rcl
fist
sub
clc
and
mov
scas
loopne
adc
mov
and
xchg
stos
push
mov
add
add
mov
call
push
retf
rcr
pop
dec
sbb
in
lods
add
sub
xchg
shl
fs
popa
int3
push
call
cmp
fild
jg
test
jb
mov
jle
add
ror
clc
mov
xlat
mov
call
xor
jns
cmp
lahf
inc
xor
scas
aaa
push
inc
jp
sub
icebp
sub
imul
xor
cmc
(bad)
xor
lahf
add
inc
jge
mov
cmps
sbb
sub
in
movs
mov
fidiv
ret
mov
stos
or
enter
sar
xchg
imul
movs
or
imul
pusha
mov
mov
cmp
push
mov
cmp
jg
into
fcom
push
popf
sbb
xor
aam
repnz
jo
inc
rcr
scas
push
adc
loope
add
movs
ret
dec
inc
mov
shl
sbb
loope
cmp
and
jmp
stc
push
enter
jno
cmp
jmp
dec
xor
stos
cmps
or
sub
jp
in
stos
in
sub
in
adc
push
mov
data16
mov
mov
cmp
ins
push
test
or
push
icebp
xchg
aam
imul
jle
xchg
inc
(bad)
xor
js
adc
mov
and
retf
xor
sysret
jmp
cmp
(bad)
stc
pop
in
sub
cli
movs
add
out
sub
mov
push
jne
push
push
test
in
and
sbb
xchg
loop
and
sahf
pop
or
jecxz
push
push
xchg
icebp
cmc
mov
sbb
mov
ja
in
ja
ror
mov
scas
ficom
jmp
jne
pushf
push
dec
sub
and
test
stos
cdq
adc
aaa
xor
(bad)
mov
xchg
lea
das
and
in
adc
in
retf
(bad)
cmc
ins
mov
jbe
mov
rcr
mov
ds
xor
jo
in
cs
aas
pop
cld
dec
jle
adc
retf
rcl
iret
scas
and
hlt
jb
rol
popf
add
(bad)
xor
xor
les
cmps
xor
loopne
int
sbb
jae
dec
mul
(bad)
stos
mov
cmps
xchg
jns
das
cmps
movs
enter
icebp
test
or
pop
inc
add
imul
adc
mov
fstp
adc
or
push
mov
mov
adc
lock
(bad)
pusha
loopne
(bad)
loope
scas
out
sbb
lock
pop
xor
mov
cld
xchg
sub
jmp
mov
(bad)
jle
dec
stc
data16
cld
je
test
ins
sbb
lock
sub
(bad)
rcl
movs
fcomp
xchg
xchg
xor
jg
xchg
test
stos
rol
pop
fcmovnbe
icebp
xchg
xlat
mov
jmp
mov
mov
and
or
jmp
scas
add
call
inc
adc
mov
ret
mov
js
mov
aam
xor
stos
add
and
cmp
jbe
fadd
sahf
(bad)
and
stc
cli
or
xor
frstor
mov
out
test
rcl
xor
or
inc
mov
xchg
popf
ja
popa
push
xor
fistp
pushf
mov
retf
int
and
leave
sub
jb
stc
cmp
mov
mov
fcomp
imul
aam
dec
or
push
pop
dec
scas
clc
ss
cwde
js
sahf
nop
push
mov
lods
xor
jbe
and
stos
push
push
push
mov
jl
sbb
aas
push
adc
inc
add
pusha
fcomp
jbe
das
pop
repnz
xor
mov
sbb
dec
mov
leave
and
cli
inc
out
push
xchg
jp
sahf
and
jmp
loopne
jns
push
pop
adc
add
(bad)
pop
jmp
push
je
scas
mov
xchg
jnp
test
test
sbb
push
repz
cwde
jmp
sbb
js
shl
dec
adc
xchg
jnp
xchg
es
ret
test
nop
(bad)
ss
movs
xchg
sub
pop
add
sbb
dec
cmps
and
retf
(bad)
and
xchg
push
lahf
ds
retf
jno
and
push
dec
mov
dec
cs
fdivr
mov
shl
fmul
daa
cmp
mov
stos
(bad)
mov
jge
pop
cli
lods
mov
mov
xor
jg
mov
or
xchg
(bad)
cmp
cmp
shl
leave
popf
stos
ins
or
xor
inc
mov
add
mov
add
pop
movs
in
aas
imul
push
lds
xor
sbb
sbb
shr
xchg
rcl
rcr
outs
inc
mov
pusha
into
push
xchg
repz
pop
movs
lods
stos
bound
mov
mov
sub
aad
adc
test
mov
fcmovnb
pop
aaa
pop
inc
ret
adc
mov
cmp
test
mov
(bad)
sub
std
sub
pop
mov
in
or
push
loopne
push
mov
mov
xor
inc
jno
or
cmp
fs
pop
mov
sub
sub
or
cmps
lds
jmp
mov
sub
shr
aam
in
dec
cdq
movs
inc
mov
ss
push
imul
das
sbb
pop
push
call
fmul
cli
mov
sbb
push
or
je
jmp
push
jae
mov
js
icebp
sahf
stos
jcxz
fld
jo
add
sub
gs
cdq
mov
cmp
addr16
pop
sbb
test
and
pop
cmp
jecxz
pushf
dec
enter
mov
dec
sbb
clc
mov
sub
pop
xchg
nop
(bad)
cmp
das
mov
push
pop
(bad)
imul
add
lods
push
push
es
adc
dec
stc
icebp
xchg
mov
push
repz
(bad)
loop
sub
jbe
xchg
out
ins
mov
push
push
cmc
sbb
mov
gs
push
add
js
lods
js
lods
sbb
push
scas
push
adc
cdq
jmp
out
push
ins
fsubp
imul
jno
fsub
or
cmp
cmps
ror
xchg
bound
xor
mov
jmp
cmp
adc
test
or
pop
inc
xlat
cwde
add
mov
imul
aad
sub
add
jns
js
loopne
push
stc
(bad)
inc
scas
movs
add
jae
das
vsubps
jmp
mov
pop
mov
cmp
mov
and
sbb
mov
push
jp
call
neg
cmp
ss
mov
fwait
jle
movs
lea
mov
add
adc
mov
bswap
dec
sbb
sar
and
in
mov
or
xor
mov
sar
(bad)
cmp
add
mov
pusha
(bad)
jmp
cdq
push
sbb
mov
jg
sbb
int3
aaa
test
jge
xchg
cld
imul
ret
jecxz
lock
hlt
sub
push
mov
call
sbb
retf
push
cmp
(bad)
leave
icebp
xor
xchg
repnz
jbe
mov
div
aad
movs
sub
pop
mov
mov
or
mov
out
inc
fwait
popf
out
icebp
frstor
nop
push
and
xchg
or
fisttp
repz
xlat
mov
fcom
sbb
push
add
das
jne
shr
jmp
das
popf
in
cli
in
jp
mov
movs
mov
pop
and
stos
sub
data16
push
xchg
fild
xor
call
jns
mov
stos
sub
or
xchg
mov
clc
push
repnz
sbb
test
outs
push
(bad)
xchg
fld
sub
retf
mov
enter
bound
aas
push
jno
push
out
mov
sbb
inc
test
mov
fwait
mov
call
lods
int3
outs
test
xor
into
add
pop
adc
or
lea
pop
lahf
dec
dec
jnp
mov
jne
mov
sub
push
scas
mov
or
cmp
cwde
movs
jmp
lea
pop
push
mov
push
dec
pop
dec
dec
mov
push
adc
sbb
dec
cmps
lock
and
ret
xor
push
aam
and
cmp
fldenv
popa
shl
jae
fs
jae
adc
int
sbb
jecxz
(bad)
mov
pop
test
pushfw
push
jle
pop
mov
fild
add
cmp
or
xabort
sbb
scas
xchg
in
and
cmp
addr16
and
jp
sbb
nop
and
test
lods
sub
mov
sti
or
sbb
pop
or
std
dec
add
add
cmp
mov
cs
xchg
mov
out
rcr
loopne
jl
mov
inc
mov
inc
loopne
mov
mov
mov
xchg
out
cwde
inc
out
jge
cmp
cmp
mov
xchg
adc
dec
jp
adc
sbb
sbb
rcr
call
stos
cmp
ins
push
add
inc
jne
cwde
std
mov
jg
cs
cmps
shl
icebp
ins
or
pop
mov
in
or
mov
dec
scas
scas
popa
inc
push
in
mov
xor
ins
xchg
outs
and
jecxz
pop
xor
cwde
xchg
and
xchg
pop
sub
mov
loope
xchg
jmp
imul
cmp
xchg
jmp
daa
mov
mov
cs
cmp
push
ins
imul
mov
enter
or
out
mov
push
int
ja
sub
outs
cmp
loop
daa
mov
in
dec
push
jo
aaa
loopne
xor
stos
xor
in
je
dec
mov
(bad)
mov
xor
xor
mov
(bad)
(bad)
pop
push
mov
ins
fisub
mov
mov
mov
pop
enter
retf
ret
movs
gs
rol
or
fadd
mov
(bad)
xor
test
lahf
div
cmp
int3
std
test
add
test
sub
adc
adc
sub
(bad)
jl
inc
std
test
je
xor
push
sar
clc
fstp
pmaxub
push
sbb
icebp
mov
ins
call
mov
xchg
jb
rcr
xchg
dec
addr16
sbb
mov
pop
aam
pop
add
into
mov
aam
sub
in
inc
jnp
sbb
out
sub
mov
movs
mov
sti
mov
lods
sub
pop
xor
mov
jge
mov
sahf
xor
jl
or
cdq
call
cmp
loop
sbb
test
popa
mov
cli
std
and
mov
cmp
xchg
xchg
sti
dec
retf
cmp
mov
jmp
mov
cmp
pop
clc
ja
sub
stos
arpl
add
mov
xor
iret
mov
rol
jbe
adc
or
fimul
popa
not
push
sbb
outs
cmc
scas
add
inc
sbb
push
pop
shr
(bad)
fld
cmp
iret
add
sub
add
es
pop
in
inc
loope
dec
add
jno
in
xor
test
(bad)
mov
daa
out
push
scas
cmp
(bad)
xchg
pop
shl
and
fwait
loopne
pop
out
shr
push
stos
outs
cmp
inc
fcom
out
push
scas
cwde
and
push
sar
dec
(bad)
and
mov
sbb
cmp
popf
out
fs
or
inc
outs
imul
movzx
sub
sub
sub
jae
add
dec
sub
aam
jmp
rcl
shr
mov
cmp
enter
(bad)
mov
rol
mov
cmps
ins
dec
mov
pop
jbe
add
adc
data16
in
adc
rol
loope
pop
in
iret
adc
aam
fsub
test
es
add
ja
inc
xchg
mov
inc
popf
mov
push
push
push
gs
scas
push
pusha
fmul
xor
lea
loope
xchg
mov
mov
ss
aaa
stos
push
mov
retf
inc
jno
sbb
inc
push
mov
sar
jecxz
cdq
test
pop
push
mov
aas
cmp
jl
ret
jg
(bad)
imul
movs
push
les
ins
jno
and
loopne
adc
xor
mov
lahf
pop
mov
fidiv
ja
xor
sahf
add
aad
scas
aam
add
jne
mov
push
xchg
adc
ret
mov
pop
repz
dec
loopne
stos
xor
test
sahf
cmp
in
inc
jo
frstor
mov
pop
or
aam
add
dec
movs
mov
mov
sbb
mov
fistp
std
sub
daa
add
mov
out
ja
js
ins
adc
pop
daa
push
fst
ins
xchg
inc
cmps
mov
ror
rcr
dec
fst
push
pop
test
aad
ret
inc
or
push
call
call
add
dec
aaa
jl
add
ficom
sub
into
fdiv
fwait
scas
outs
out
or
xor
pop
jne
xor
push
mov
out
sbb
arpl
dec
dec
mov
add
bound
xchg
xor
cmc
adc
or
stc
stos
dec
lods
add
ret
imul
jmp
xchg
mov
xor
lods
add
dec
push
(bad)
sbb
push
lods
lea
mov
xchg
inc
sub
shr
jno
scas
inc
adc
jl
pop
fs
adc
mov
in
mov
(bad)
push
add
adc
ficomp
xchg
sub
arpl
cmp
add
adc
arpl
ror
icebp
push
pop
dec
(bad)
bound
xchg
mov
inc
pop
adc
and
int
jle
jmp
rcl
(bad)
or
dec
mov
xor
ins
jmp
stos
and
movs
scas
retf
test
out
mov
dec
jb
fisub
fs
imul
ret
bound
imul
dec
push
sbb
(bad)
xchg
out
mul
jne
mov
mov
cmp
fisub
pcmpgtw
push
adc
pop
or
call
inc
icebp
push
sub
mov
xor
fcmovbe
stos
in
mov
xchg
and
adc
cmps
movs
pop
xor
std
pop
sti
or
cli
retf
cmps
mov
das
js
add
(bad)
xor
out
cdq
in
out
jnp
mov
into
mov
call
xchg
jp
inc
test
aad
call
jns
cmp
shr
pop
mov
xchg
push
into
dec
imul
shl
pop
clc
xor
xor
add
mov
(bad)
(bad)
dec
mov
inc
inc
add
mov
mov
pop
push
mov
mov
cmp
jecxz
add
scas
xor
pushf
mov
(bad)
sti
fwait
mov
das
mov
xor
xlat
adc
popf
cmc
adc
ret
push
cmp
ret
cs
sub
addr16
push
or
jl
jecxz
stos
mov
(bad)
jae
dec
loop
in
mov
mov
push
cmps
test
sub
mov
sbb
std
dec
fiadd
shl
or
retf
dec
lds
xchg
inc
pop
hlt
bound
cmps
pop
out
xor
dec
in
(bad)
pop
mov
leave
scas
push
or
daa
adc
pusha
sahf
mov
lea
out
popa
lods
not
repz
xchg
aam
arpl
sbb
lea
or
js
xchg
cwde
push
pop
call
mov
shr
xchg
adc
scas
mov
cmps
lods
lds
retf
loop
cmc
(bad)
and
xor
mov
sbb
stos
cmp
pop
hlt
xchg
mov
mov
outs
scas
shl
ins
xor
cmps
jl
loop
sub
jge
out
(bad)
fild
pop
xchg
xchg
or
adc
dec
or
pop
dec
sbb
mov
mov
cld
fwait
inc
cmps
movs
jecxz
scas
pop
inc
mov
mov
mov
(bad)
xor
cmp
push
ins
mov
addr16
lahf
(bad)
mov
iret
lods
mov
icebp
lods
mov
inc
mov
push
daa
rcr
mov
jne
lds
movs
inc
stos
aas
sahf
cmp
in
cmp
iret
aaa
fild
and
xor
enter
fs
jne
inc
fild
jge
test
pop
rcl
fist
push
mov
or
mov
xchg
pusha
dec
(bad)
clc
mov
dec
sub
lock
push
cld
xor
xor
push
popa
adc
pop
into
mov
mov
mov
push
sbb
push
and
(bad)
jg
adc
pushw
cmc
test
xchg
add
xchg
movs
iret
cmps
loop
sub
(bad)
sbb
fiadd
mov
frstor
mov
or
mov
sub
shr
and
lods
xchg
xchg
jp
xchg
stos
loope
fwait
xchg
or
push
cmp
in
fdivr
jae
test
out
in
in
fcmovnbe
ret
xor
or
bound
add
ror
xchg
dec
or
ja
(bad)
adc
jp
push
mov
sub
jnp
jp
add
sahf
out
push
ror
pop
not
ja
pop
dec
inc
inc
loope
mov
dec
out
push
sub
pop
push
xchg
fild
repz
pextrw
jne
inc
push
fsub
lea
outs
test
xor
push
jb
sub
push
mov
or
(bad)
xlat
pop
gs
pop
add
add
xor
jg
mov
ins
pop
jecxz
sbb
and
cmps
fucomi
jecxz
xor
or
adc
test
ins
sbb
mov
les
sti
jg
and
jmp
ja
jae
data16
inc
cmp
dec
stc
xlat
cmps
pop
mov
xlat
mov
jb
stos
cmp
out
pop
and
ret
cli
loope
mov
clc
mov
(bad)
lea
jno
mov
into
ret
or
daa
lds
pop
jb
ss
mov
fdivr
jmp
stos
int
movs
ror
out
cmp
call
cli
xchg
fdivr
ud1
push
mov
retf
jl
into
jg
ret
push
xchg
and
call
mov
mov
sub
(bad)
cli
mov
adc
leave
xchg
retf
jo
fmul
dec
adc
mov
in
push
stos
sahf
into
push
push
mov
popf
xchg
mov
mov
dec
xor
test
scas
adc
stos
cli
jne
push
dec
sbb
add
leave
jno
sbb
out
(bad)
out
and
cmp
mov
int
jno
pop
rcr
xor
sbb
xchg
mov
in
into
mov
popf
call
(bad)
aad
push
jecxz
add
movs
or
pop
pop
mov
loop
xor
xor
jo
fwait
sub
data16
xchg
fcom
popa
xchg
test
cs
lock
test
mov
ins
adc
inc
sbb
push
movs
jne
rcl
adc
mov
popa
xor
jl
sub
sub
jmp
popa
cdq
dec
adc
fwait
cmps
cmp
enter
cmp
neg
adc
xchg
cmp
nop
sub
mov
jno
arpl
mov
cmp
ins
lods
ja
pop
daa
shr
daa
push
pop
ds
xor
scas
cmc
xchg
hlt
(bad)
push
adc
mov
cmp
mov
out
mov
fnstsw
push
ins
aam
les
enter
push
pop
mov
outs
or
xchg
xlat
les
cs
shr
imul
xchg
cdq
fmul
retf
mov
mov
jns
lods
push
fs
and
lea
jmp
jmp
loop
add
out
jmp
aas
test
or
rcr
pop
mov
adc
(bad)
out
outs
adc
push
push
aad
lea
jb
and
jae
outs
into
cmc
stos
cmp
or
add
ins
xor
(bad)
pop
jbe
or
in
shr
(bad)
lahf
icebp
sbb
dec
psubd
and
sub
push
push
xchg
stos
enter
inc
xchg
ja
cmp
and
or
fs
loop
jno
mov
xchg
or
push
mov
xchg
addr16
ss
mov
cmps
leave
(bad)
fwait
mov
scas
mov
push
and
fcomp
xlat
cmp
daa
jbe
mov
pop
fucom
fcomi
jmp
mov
jge
(bad)
mov
cmp
inc
nop
adc
jl
out
lods
adc
add
cmp
movs
and
std
push
hlt
jae
add
scas
xchg
or
add
cmp
add
adc
outs
push
xchg
addr16
sub
lock
int
cmps
cld
je
shl
(bad)
mov
inc
out
adc
lock
add
push
dec
add
pop
pop
int3
inc
push
pop
outs
mov
inc
adc
mov
outs
add
cmp
addr16
sub
lahf
dec
fs
pop
leave
fxtract
in
stos
je
pusha
and
push
push
xchg
in
out
adc
dec
add
mov
sub
cmc
imul
jb
xchg
pop
adc
push
add
data16
ins
inc
pop
xchg
sar
inc
das
inc
in
(bad)
add
mov
not
addr16
(bad)
mov
pop
bound
into
mov
call
pop
sbb
add
pop
enter
or
retf
sub
ret
sbb
je
mov
jbe
fstp
mov
lods
ins
iret
aas
cmps
jge
or
push
mov
shr
inc
sub
movs
(bad)
jecxz
sub
xchg
stos
pop
in
neg
mov
mov
xchg
dec
jle
xor
aaa
jecxz
pop
jnp
cmp
mov
mov
mov
sar
push
nop
mov
mov
hlt
xor
lods
outs
sbb
rcl
inc
les
jmp
jmp
inc
mov
popa
jge
dec
sbb
and
ins
mov
jmp
jbe
xlat
pop
(bad)
aam
jle
repz
(bad)
shl
add
sub
cmc
and
sbb
dec
cmps
mov
jg
adc
jp
movs
sbb
lahf
daa
jo
lea
xor
pop
adc
inc
mov
aaa
mov
xor
scas
add
dec
sub
dec
data16
int3
je
les
int
aas
xor
hlt
ret
and
mov
es
sbb
xchg
xchg
movs
cld
aam
jno
dec
fcmovnbe
int3
shr
mov
or
xchg
jns
retf
dec
sbb
mov
push
lods
retf
dec
in
jecxz
pop
xor
mov
xchg
jbe
mov
into
mov
pop
stc
xchg
add
out
xchg
out
sub
inc
nop
adc
dec
daa
icebp
add
cmp
inc
pop
jl
(bad)
pop
in
cmp
xchg
push
sbb
ror
arpl
int
push
dec
aad
mov
cmp
(bad)
fiadd
hlt
cmp
rcl
cdq
jmp
pusha
dec
lock
call
pop
or
loop
sbb
test
sahf
stc
xlat
retf
adc
or
nop
popf
jmp
xor
push
out
xor
cmp
dec
mov
fcmovb
sar
add
sti
pop
(bad)
out
mov
mov
mov
push
add
dec
cdq
dec
rol
out
push
xor
bound
iret
pop
aad
or
pop
cli
xchg
daa
xor
sub
cmps
in
xchg
(bad)
jp
movs
mov
sbb
in
jg
loopne
xchg
nop
push
enter
ins
call
mov
ffree
pop
jp
inc
gs
push
int
popa
mov
sub
jl
repz
mov
ror
lock
mov
sub
inc
imul
mov
sahf
or
mov
retf
jnp
cmp
nop
sbb
test
jmp
jb
loope
ss
in
clc
jge
mov
jns
es
cmp
leave
(bad)
fdivr
dec
into
xchg
mov
mov
ds
frstor
in
inc
rcl
push
xchg
aaa
push
jle
rcr
jnp
scas
jbe
ret
fistp
xchg
sbb
inc
fld
sub
inc
mov
mov
std
mov
mov
push
gs
sub
cld
enter
mov
pop
test
test
(bad)
dec
arpl
xor
jg
cmp
sahf
pop
mov
repz
xor
xor
push
cli
push
imul
jae
inc
xor
int3
mov
sbb
into
das
lea
add
dec
sbb
pop
add
push
push
or
(bad)
sub
frstor
ins
cmp
retf
(bad)
(bad)
nop
xchg
xchg
dec
xor
sub
pop
inc
push
add
inc
ins
ror
popa
int3
(bad)
sbb
dec
lods
mov
push
dec
pop
dec
mov
jmp
xor
push
loopne
popa
lods
inc
lds
sbb
jge
test
jg
mov
loope
push
mul
pop
ss
fnstcw
xchg
imul
cmps
mov
popa
fisub
repnz
loope
push
mov
shr
aam
std
adc
add
enter
push
stc
push
or
fnstsw
adc
or
shl
pop
push
bound
fsubrp
jbe
fld
push
cmp
jl
mov
cmp
jae
dec
dec
test
dec
cmc
scas
clc
sub
add
ins
and
sub
std
mov
jg
push
(bad)
xor
pop
clc
jge
xor
add
loope
fdiv
add
adc
inc
cwde
sub
ja
inc
mov
pop
xchg
sbb
mov
jp
cdq
not
stc
int
bound
xor
mov
push
clc
repz
xlat
int3
jne
add
jge
pop
sub
leave
das
sbb
fldcw
ror
out
mov
inc
mov
or
loopne
xchg
push
nop
inc
mov
push
adc
pop
adc
sub
movs
cmp
fst
movs
xor
push
cmp
pop
mov
mov
lea
dec
fsubr
cmp
add
shr
ss
pop
repnz
fs
mov
pop
push
lods
aam
sub
scas
sub
jmp
imul
xor
jmp
into
xchg
dec
out
or
out
pop
mov
hlt
(bad)
fbld
dec
or
mov
aas
adc
sar
(bad)
out
adc
btc
sbb
cmp
mov
sbb
es
cmc
mov
retf
loopne
aam
add
xchg
arpl
arpl
daa
cld
jg
dec
(bad)
fxch
cmps
cmp
xchg
jne
sub
push
shl
cmp
jge
aad
or
adc
mov
or
cli
mov
icebp
test
mov
sar
es
sub
push
cmp
cmp
ret
cmp
push
(bad)
mov
xor
adc
and
xor
aas
shr
in
inc
mov
aas
pop
pop
xor
and
or
rol
movs
dec
inc
push
test
icebp
push
push
pushf
xchg
push
ins
imul
ja
sub
bound
sbb
je
in
cmp
ffree
push
jle
shl
(bad)
loop
retf
outs
xor
les
in
jno
or
ret
sbb
sahf
test
inc
jbe
push
jp
or
retf
test
dec
or
mov
fwait
arpl
ds
fiadd
imul
ds
clc
pop
repnz
sbb
bound
ins
and
outs
scas
jl
mov
mov
stc
jb
movs
cmp
dec
out
inc
int
push
cmp
je
jp
retf
ss
test
scas
push
push
cmp
jmp
jo
fwait
cmp
jo
inc
inc
cld
xchg
dec
inc
loopne
jg
xor
fyl2xp1
xor
ret
hlt
cmp
sub
mov
jmp
jns
adc
cmp
or
adc
pop
ins
out
mov
sti
pop
add
adc
enter
inc
in
in
pop
or
mov
adc
fistp
(bad)
stc
inc
pusha
add
in
dec
mov
push
loop
stc
cld
inc
test
jae
mov
xchg
push
test
pop
fidiv
jno
adc
push
inc
(bad)
cmp
and
xchg
mov
cmp
push
adc
push
adc
nop
mov
push
mov
outs
mov
mov
add
add
bound
pusha
rcr
je
fdivr
ss
mov
and
or
nop
retfw
sbb
ret
mov
inc
adc
inc
fdivr
popa
sbb
mov
retf
stos
xchg
xchg
lods
mov
mov
aad
fbstp
jecxz
std
(bad)
jns
sub
and
adc
add
or
pmulhw
or
sbb
aaa
nop
sub
cwde
and
imul
add
shl
sub
ins
je
jle
cmp
scas
test
lods
in
jne
sbb
sub
pushf
pop
mov
sub
imul
add
mov
mov
out
int3
aad
mov
stos
movs
test
(bad)
mov
int3
inc
cs
push
lock
aaa
cmp
jbe
pop
data16
mov
xchg
inc
mov
inc
int3
dec
jnp
mov
mov
outs
retf
mov
mov
sub
(bad)
and
iret
xchg
test
mov
or
sar
xchg
sti
or
jp
pushf
pop
std
je
mov
cmp
jae
sub
(bad)
xor
mov
mov
rcl
mov
pminsw
push
fnstcw
nop
xchg
push
(bad)
jl
cmps
and
jg
jmp
add
push
add
pusha
retf
lods
ins
stos
clc
lods
sub
jno
fiadd
adc
ror
mov
data16
mov
aas
je
inc
mov
add
adc
cmps
fisub
int
push
mov
add
push
das
dec
cmp
(bad)
out
cli
xchg
mov
mov
(bad)
and
scas
inc
je
or
sub
out
lods
and
xor
push
and
in
loope
inc
stos
ss
push
pop
xchg
loop
outs
das
mov
mov
jns
into
and
mov
imul
mov
pop
mov
dec
jecxz
sbb
mov
inc
mov
xchg
hlt
cdq
mov
fstp
popf
and
fisub
fs
push
jae
jge
repnz
push
xchg
mov
adc
sub
push
pop
test
xchg
imul
pop
inc
movs
aad
in
cs
call
add
inc
sbb
sbb
ds
jl
fdiv
leave
mov
sub
call
sahf
cmp
xor
jns
and
aad
sub
sub
dec
scas
or
stos
cld
test
ret
fimul
mov
pop
xchg
adc
dec
cli
dec
xor
adc
add
push
(bad)
adc
xchg
rcr
cmps
dec
(bad)
jg
out
imul
cld
(bad)
(bad)
jnp
and
inc
scas
fsubr
dec
or
imul
or
cdq
adc
pop
mov
xchg
hlt
std
outs
mov
pop
shl
add
mov
idiv
getsec
mov
int
fcomp
inc
mov
imul
jle
retf
push
scas
lods
sbb
cdq
adc
es
xchg
nop
pop
movs
fdiv
sbb
sbb
mov
or
sub
push
fisttp
fnstsw
pop
mov
fsub
inc
sbb
pushf
fidivr
dec
fsubr
xor
movs
or
sbb
or
xchg
pop
(bad)
pxor
sbb
xchg
xchg
adc
pop
and
into
test
inc
xchg
xchg
adc
add
add
in
(bad)
pop
cmp
nop
das
push
dec
add
jnp
shl
cmc
stos
pop
inc
or
dec
test
xchg
movs
cwde
loop
arpl
inc
add
dec
or
jecxz
mov
pop
jge
sbb
fist
mov
loope
lahf
inc
arpl
bound
and
pop
and
sub
mov
pop
xchg
jl
pop
hlt
test
xor
push
clc
clc
mov
or
icebp
jle
int
push
leave
or
xor
mov
dec
jbe
xchg
clc
pop
sub
shl
adc
add
jmp
aas
fwait
(bad)
gs
call
mov
jbe
xchg
push
and
push
int
or
fsub
shr
je
in
xor
jae
mov
lods
jno
and
jbe
mov
or
fimul
add
call
dec
adc
jmp
stos
jmp
sub
sub
movs
jmp
push
cmp
leave
mov
sahf
adc
and
pop
sbb
push
and
push
push
repnz
loop
mov
mov
(bad)
sbb
inc
or
pop
mov
mov
inc
clc
xchg
and
aad
lock
lahf
jb
adc
jo
test
push
pop
add
out
push
loopne
lds
mov
ds
sub
(bad)
loopne
ja
shl
add
arpl
push
fistp
push
out
stos
inc
das
leave
cmp
jbe
xchg
sub
fmul
out
outs
sub
push
pop
repnz
lods
or
fimul
bound
adc
xor
dec
cmc
push
lods
mov
mov
fcmovbe
or
or
cmp
cld
les
push
ss
pop
adc
repnz
arpl
movhps
mov
push
cmps
adc
fstp
adc
push
adc
cmp
ins
mov
sbb
repnz
dec
mov
xor
leave
call
xchg
mov
sbb
xor
inc
xor
xor
and
jecxz
in
and
sbb
jg
in
xor
add
sete
pop
pop
inc
mov
(bad)
ins
xor
(bad)
cli
adc
xor
xchg
int3
sub
jle
(bad)
adc
pop
ds
mov
add
push
jle
out
adc
mov
loopne
mov
(bad)
adc
ins
xchg
loop
out
jg
cli
(bad)
mov
jno
stc
fiadd
mov
mov
aaa
adc
xchg
or
or
dec
repnz
(bad)
sti
adc
and
mov
outs
ds
je
mov
int3
(bad)
jae
sub
xor
mov
mov
and
pop
inc
(bad)
fisttp
movs
call
loopne
(bad)
lahf
lods
jae
pop
addr16
inc
fsubr
jp
dec
ins
icebp
call
arpl
test
fnstenv
sbb
xlat
dec
jns
xor
call
lods
int
cmps
int3
dec
sbb
adc
lahf
test
pop
jae
shl
stc
loop
xchg
mov
lods
popf
jmp
or
ret
call
scas
loop
pop
movs
jo
cmp
ins
fs
sbb
push
repnz
sub
sub
jl
add
sbb
mov
add
push
xor
lods
pop
loope
ins
out
and
and
xchg
fistp
test
push
mov
imul
inc
and
mov
in
add
mov
push
or
sbb
sub
aad
in
dec
jg
add
imul
pop
(bad)
cwde
mov
mov
stos
mov
in
ins
(bad)
pop
daa
loop
sub
jb
jnp
sbb
gs
data16
(bad)
pop
xchg
pop
sub
pusha
lods
add
out
fidiv
pop
mov
(bad)
fs
sub
mov
sbb
and
adc
xlat
fistp
add
cmps
call
jmp
push
shr
or
nop
fidivr
(bad)
std
mov
jmp
aam
lds
mov
cdq
mov
je
repnz
shl
out
inc
pop
jae
call
data16
movs
out
loop
xchg
stos
jg
jecxz
sub
xor
mov
cmp
in
push
dec
je
inc
inc
mov
test
inc
stos
cmps
and
repnz
test
and
sbb
push
popa
and
jbe
cdq
js
cmp
in
jne
or
add
clc
xchg
movs
cmp
push
stc
hlt
mov
std
mov
stc
fcom
sbb
and
ds
jge
lea
jle
xchg
(bad)
(bad)
ins
in
push
jbe
dec
or
rcl
xchg
inc
adc
mov
pop
add
sub
sub
das
lea
pop
xchg
push
add
movs
je
push
not
mov
out
sbb
or
jecxz
sub
adc
test
add
or
lods
ins
xchg
jle
mov
inc
cmp
outs
mov
pavgb
pusha
jae
clc
ficom
popf
add
cmp
enter
scas
stc
dec
repnz
add
sahf
mov
mov
or
xor
aam
sar
(bad)
ret
xor
nop
es
pop
push
push
fild
scas
cmp
sub
clc
enter
mov
adc
pop
mov
rol
push
repnz
call
xchg
pop
les
rol
inc
not
call
das
fcomp
mov
mov
xchg
popa
push
jmp
cmp
(bad)
xlat
adc
leave
loop
cli
or
cmp
sbb
pop
dec
retf
lea
mov
pmaxsw
adc
jo
stos
mov
mov
mov
int3
or
jnp
inc
jp
enter
fadd
pop
icebp
fld
ret
mov
dec
xchg
adc
test
sub
lods
call
sub
loop
sub
outs
xchg
push
sub
aad
push
push
jae
imul
rol
in
push
and
xor
push
dec
repz
dec
sub
test
scas
or
hlt
jge
popa
sub
mov
cmp
call
retf
in
outs
cld
enter
pop
jmp
mov
adc
xor
or
mov
mov
and
jle
inc
lods
pop
push
cmp
push
jg
jg
push
xor
mov
pop
dec
cmp
inc
and
pop
clc
jecxz
sub
xchg
xchg
movs
sbb
lahf
ror
xchg
dec
sub
ds
push
mov
cwde
jl
push
lods
pop
test
xor
cmp
sbb
add
push
jbe
popf
outs
mov
dec
push
cmc
push
cwde
dec
adc
jns
cmp
sbb
cmp
and
sub
jle
enter
das
dec
movs
mov
test
dec
dec
cdq
lds
inc
hlt
adc
sub
test
mov
ror
cmp
loope
cmp
rcr
or
aaa
push
jae
mov
xchg
mov
loop
xchg
hlt
adc
add
enter
int
movs
loopne
push
cs
add
cmp
jnp
mov
and
lods
ja
(bad)
push
xor
loop
ins
pop
ret
xchg
inc
imul
(bad)
jae
sbb
push
and
sub
push
pop
addr16
outs
rol
push
ret
cmp
cmp
pushf
pop
retf
xchg
cmps
inc
popa
out
ficomp
jmp
mov
mov
dec
call
aaa
fwait
dec
popa
ss
jmpw
(bad)
sti
popa
fwait
adc
leave
push
adc
sub
inc
mov
(bad)
inc
movs
test
or
add
add
adc
mov
sbb
sti
sar
inc
dec
test
(bad)
xchg
cmp
pop
sub
shl
arpl
enter
les
daa
jbe
gs
mov
test
jmp
and
aas
in
fist
and
adc
int
(bad)
cmps
gs
jne
cs
ror
or
pop
sub
into
cmps
xchg
into
into
rcr
mov
icebp
mov
and
movs
leave
xchg
sbb
popa
push
stc
adc
sar
inc
dec
fadd
mov
jno
sbb
jae
xor
rcl
test
jmp
ss
push
xchg
rol
sub
(bad)
movs
add
call
push
iret
jmp
mov
retf
leave
(bad)
retf
(bad)
out
mov
push
mov
mov
rol
bswap
jp
and
outs
fucomi
xlat
dec
push
fdivr
mov
jb
imul
pop
sbb
xor
scas
or
jge
jl
inc
(bad)
lds
enter
sub
or
xchg
mov
adc
inc
aam
test
inc
inc
ror
inc
imul
add
dec
ror
jbe
popa
mov
or
mov
mov
pop
push
aas
mov
ret
sbb
xlat
mov
bound
sub
pop
mov
frstor
xor
ret
mov
loope
retf
fnstsw
add
push
movs
out
pop
fldcw
xchg
jge
ss
and
stos
cmp
mov
arpl
xchg
fcomp
add
sbb
add
imul
or
pop
cmp
inc
inc
bound
fisubr
les
je
ja
bound
pop
psrlw
in
outs
xchg
jmp
cmps
(bad)
fidiv
imul
xor
dec
cli
dec
adc
adc
stos
retf
cdq
fs
mov
stos
or
mov
scas
pop
xchg
xor
cli
rcl
inc
(bad)
daa
dec
sbb
pop
aam
add
adc
sbb
sbb
lods
jne
rcl
sub
sub
and
repz
dec
pop
mov
or
(bad)
xchg
icebp
jno
out
in
cmp
outs
jne
mov
pop
or
jle
data16
and
addr16
dec
movd
push
push
rol
dec
push
ins
ins
mov
in
sahf
or
fdiv
aas
cmp
push
or
sub
mov
jmp
and
xor
lods
sub
pop
mov
arpl
mov
xor
jae
jg
push
adc
call
outs
ja
xchg
xor
or
cmp
outs
lods
nop
cmp
jg
retf
out
jnp
jle
int3
pop
aaa
inc
sbb
adc
mov
sub
sar
xchg
hlt
xchg
inc
pop
movs
(bad)
jb
rcr
dec
cmps
jmp
xchg
shl
cmp
mov
xchg
fsubrp
sub
(bad)
loopne
jmp
shr
movs
cmps
inc
shr
sbb
cli
adc
adc
fs
pop
mov
arpl
push
ret
push
sub
outs
xchg
jl
pop
or
adc
jns
aaa
xlat
cdq
adc
scas
jne
mov
shl
inc
mov
int3
xor
sbb
jo
xor
jecxz
aaa
pop
fiadd
ja
test
cmc
mov
sbb
sti
inc
xchg
adc
or
xchg
adc
add
cmp
cmp
sub
jge
xor
daa
push
aad
push
mov
movs
les
fstp
xlat
adc
xor
pusha
lods
pop
inc
adc
in
xor
xor
push
mov
imul
add
pop
sbb
mov
shl
nop
pop
test
cmp
test
mov
aad
inc
(bad)
push
sbb
xchg
jmp
dec
sbb
int3
push
jb
test
leave
ins
out
lock
fisubr
sbb
sahf
sar
inc
or
es
mov
aam
push
xchg
ss
lock
inc
sub
(bad)
cli
push
jns
out
jmp
test
sub
mov
movs
sti
scas
cmc
sub
in
ret
pop
or
scas
mov
push
cmp
repz
pop
mov
adc
mov
jp
ret
jl
aaa
adc
les
movs
sbb
dec
push
(bad)
int3
loope
gs
mov
sbb
fidiv
and
iret
mov
jg
ins
stos
sbb
xchg
inc
les
shl
xchg
(bad)
fcmove
fs
in
push
xor
retf
and
ss
popa
lods
(bad)
push
xor
pop
or
mov
pop
rcl
inc
push
adc
dec
lods
stos
cld
loope
push
repnz
mov
jbe
iret
cli
(bad)
jge
sahf
jp
loopne
scas
jne
dec
daa
and
mov
and
sar
xchg
out
popa
call
test
aad
and
pop
push
and
adc
(bad)
xchg
data16
retf
lea
gs
dec
es
daa
repz
pop
sub
and
shl
js
cs
xor
retf
mov
(bad)
mov
ret
(bad)
and
push
push
sbb
mov
mov
outs
and
or
into
out
es
cmp
fcomp
fwait
push
push
inc
push
add
push
mov
mov
ins
xchg
push
mov
aas
lahf
div
in
mov
pop
ficom
xchg
sahf
adc
ror
jmp
add
jns
cmps
data16
or
ret
push
popf
cdq
lds
pop
inc
sub
fwait
inc
cs
cmp
(bad)
jne
lea
xchg
mov
mov
xor
or
(bad)
cld
dec
cli
jle
(bad)
push
mov
xor
mov
mov
and
adc
inc
repz
pushf
(bad)
ins
xor
fild
xchg
mov
dec
jbe
addr16
dec
mov
and
movs
mov
icebp
adc
loop
scas
xchg
push
dec
mov
xchg
sbb
test
sbb
jl
or
enter
imul
sbb
daa
mov
shr
(bad)
lods
mov
out
es
push
add
les
xor
stos
and
leave
xor
fnstcw
xor
pop
pop
out
and
mov
push
les
lea
jp
xchg
test
add
lahf
popa
test
sub
push
iret
jle
jmp
loope
out
cli
cmp
fidivr
pop
jae
xchg
lds
mov
lahf
call
or
jmp
popa
scas
cdq
das
cmp
xchg
jmp
xchg
ret
xchg
pop
outs
(bad)
sub
loope
mov
push
and
cmp
loopne
hlt
dec
push
adc
cmp
stos
(bad)
cli
inc
or
cmp
sub
mov
jmp
jle
lea
pusha
jge
mov
xchg
adc
sahf
mov
imul
sbb
retf
pop
stc
adc
outs
int3
pop
ds
cmc
mov
ret
movs
add
push
scas
aaa
mov
xor
loop
sbb
lds
push
mov
jp
arpl
test
push
imul
(bad)
out
add
cmp
cli
stc
das
or
repnz
and
cmp
(bad)
and
mov
fdiv
add
xchg
mov
pop
mov
mov
xchg
cmp
clc
imul
pop
in
mov
jg
ffree
outs
sar
cld
dec
mov
test
xor
xchg
dec
adc
pop
inc
mov
ja
pop
ins
movs
mov
push
sub
jmp
retw
mul
and
std
cmps
gs
cwde
(bad)
xchg
ins
fldenv
seto
cmp
aad
aaa
sar
pushf
mov
jle
out
rcl
pop
(bad)
inc
jl
lods
add
jo
push
stc
in
cmp
dec
scas
push
std
dec
jnp
in
mov
and
hlt
or
out
xchg
inc
jnp
dec
cmp
dec
cmc
cmp
xchg
movs
sbb
movs
mov
lea
add
jl
outs
lahf
adc
adc
lods
or
cmc
xor
popa
push
call
or
lock
jmp
push
jo
push
jge
sti
jmp
loop
xor
js
pop
test
sub
mov
fld
adc
mov
loopne
push
gs
jecxz
aam
mov
push
adc
xchg
cmps
adc
xchg
icebp
pop
rcr
popf
jmp
je
icebp
xchg
add
rcl
ret
nop
inc
dec
cmc
ss
or
mov
dec
xchg
lock
call
pop
push
xor
mul
sub
sub
hlt
and
xor
in
jp
retf
xchg
lea
ret
mov
sub
adc
cmps
mov
ret
xchg
nop
ret
test
sahf
cwde
dec
gs
xchg
clc
jns
push
mov
ins
xor
adc
jmp
sub
hlt
cwde
pop
inc
sub
lds
js
adc
popa
in
sub
mov
pop
out
add
jae
inc
push
lea
jmp
sub
jnp
loop
lock
xchg
shl
mov
js
sub
xchg
adc
add
hlt
fdecstp
cmc
ins
pop
test
pop
push
ret
add
mov
sbb
or
(bad)
and
sar
push
cmc
cmp
mov
pop
addr16
cmc
inc
sahf
test
pop
sub
xchg
test
neg
clc
pop
jbe
inc
sub
mov
stos
jae
js
mov
add
mov
inc
into
push
inc
mov
mov
loop
mov
aaa
push
xchg
(bad)
enter
lea
or
test
xor
mov
mov
cdq
xchg
pop
add
mov
sbb
rcl
lock
sub
cmp
outs
pop
mov
adc
xchg
daa
data16
inc
test
and
sub
adc
push
test
mov
test
and
(bad)
add
int3
push
lock
pusha
mov
(bad)
pop
stos
xchg
adc
cmp
test
push
stos
mov
sub
scas
add
xchg
mov
push
push
sar
jg
test
push
or
add
pusha
retf
xor
mov
(bad)
xchg
jecxz
fwait
jmp
into
lock
popf
or
inc
mov
popa
mov
pop
inc
add
jb
sub
xor
push
sub
mov
addr16
outs
movs
mov
and
mov
sub
mov
scas
mov
mov
icebp
movs
dec
push
retf
leave
xor
scas
shl
(bad)
lea
push
stos
sahf
ret
cmp
mov
inc
leave
mov
test
push
jp
ret
xor
cli
aam
and
mov
inc
dec
cmp
(bad)
rcl
retf
sbb
jle
adc
cmp
mov
adc
or
cmp
mov
push
mul
pop
lods
push
sub
mov
es
push
imul
mov
aad
mov
inc
scas
xchg
fnstcw
mov
xor
lods
in
jne
push
sbb
ret
inc
leave
cmp
int3
sbb
test
mov
jbe
cmps
pop
jb
xor
stos
ss
repz
sbb
(bad)
ret
aad
push
push
ret
retf
je
aas
jae
or
sbb
adc
out
add
movs
jae
xchg
cmovl
sub
rcr
jmp
int3
movs
das
imul
push
popf
fs
test
repz
mov
add
dec
or
push
sub
and
or
lahf
mov
sbb
out
sbb
push
cmc
xchg
clc
enter
loop
call
popa
scas
add
jnp
mov
inc
and
xor
movs
xchg
pop
sub
cmp
or
jnp
pop
in
pop
xlat
jl
out
mov
gs
ds
or
jecxz
adc
icebp
and
(bad)
stc
fs
js
imul
cmps
jp
dec
pop
push
jno
xor
xchg
or
aam
pop
mov
stc
and
cmp
sahf
jp
cmp
loope
xchg
mov
sbb
movs
dec
mov
bnd
js
repnz
sbb
lahf
jmp
push
or
(bad)
retf
daa
push
movs
mov
xchg
cld
(bad)
pop
add
lods
and
shl
in
jb
lahf
fs
sbb
out
mov
and
loope
imul
dec
int
jl
test
and
xchg
shl
inc
xchg
mov
or
imul
cdq
push
mov
dec
adc
add
loopne
movs
imul
stos
or
loope
pop
mov
cmc
int3
iret
outs
aas
pop
adc
sub
inc
sbb
shr
push
dec
ja
psrld
sbb
or
pop
sar
xor
push
push
in
sbb
xor
call
jbe
cwde
(bad)
pop
loope
adc
xchg
nop
(bad)
mov
movs
aam
dec
dec
inc
out
mov
retf
lds
cmp
rcr
jmp
rcr
xor
push
or
push
or
dec
sahf
mov
inc
es
mov
jle
outs
pushf
(bad)
int
call
add
stos
add
frstor
popa
outs
into
daa
pop
cmp
sti
xor
inc
mov
dec
mov
popa
ret
push
jae
cmp
in
push
inc
lods
sub
cmps
sub
ja
push
or
fst
rcl
icebp
sahf
push
inc
ret
stc
push
adc
jne
movs
mov
xchg
jb
or
xchg
mov
(bad)
dec
sub
and
subps
cmc
stos
out
xchg
ss
popa
retf
scas
sahf
mov
and
in
outs
mov
or
lock
enter
call
aad
cwde
dec
sub
jecxz
add
dec
mul
in
cmp
push
cmp
loopne
addr16
lods
add
push
push
pusha
push
mov
sbb
xchg
into
sahf
rol
mov
mov
dec
loop
ds
enter
ds
pushf
dec
cmp
pop
sub
jbe
into
add
not
adc
into
jl
adc
stos
dec
iret
pop
shr
icebp
push
bound
pop
push
mov
mov
or
pop
sub
ds
cli
jae
js
aaa
std
addr16
data16
or
in
or
ja
jmp
sub
sbb
inc
and
rcl
add
ins
sar
dec
(bad)
fmul
mov
cmp
jns
pop
les
int3
xchg
fnstcw
cmp
cdq
and
push
idiv
fadd
neg
dec
add
pop
js
sbb
es
es
xlat
push
stos
int3
mov
add
ins
pop
push
mov
fst
cmc
adc
retf
es
push
test
test
mov
pushf
repz
jno
js
ja
mov
jb
mov
test
je
mov
pop
inc
sbb
bnd
xor
les
out
xchg
arpl
xor
push
jmp
ins
fcmovnu
outs
clc
bound
sbb
mov
adc
inc
adc
sbb
sbb
mov
cmp
pop
(bad)
push
xor
xor
xchg
cmc
mov
jno
in
pop
cmc
add
sti
in
mov
xchg
cld
movs
dec
adc
sbb
jecxz
jecxz
ret
shl
(bad)
push
retf
loopne
cmps
xchg
int3
mov
call
ins
dec
push
add
fs
add
and
xor
jb
enter
lea
mov
dec
cmp
imul
addr16
les
into
std
in
pop
movs
pushf
pop
and
xchg
(bad)
cmps
sbb
sbb
int3
push
in
mov
mov
pop
ja
sbb
cs
cdq
and
xchg
icebp
jge
inc
imul
shr
cs
jo
xchg
inc
push
jno
inc
fnsave
cld
call
addr16
ins
mov
leave
popa
clc
push
je
cld
or
xor
gs
popf
adc
in
or
xlat
xor
fwait
data16
sbb
je
sar
pop
fistp
mov
cmps
retf
mov
dec
popf
hlt
call
test
pop
mov
jecxz
ret
ds
out
mov
arpl
hlt
inc
cli
jno
adc
mov
adc
sub
jne
dec
add
inc
mov
and
dec
push
in
xor
inc
inc
adc
add
jmp
xor
xor
ins
sub
push
jecxz
ja
jp
out
push
push
or
fwait
(bad)
xchg
cmp
inc
sbb
or
cs
cmp
imul
fnstenv
or
xchg
movs
mov
xchg
mov
xor
das
push
push
ds
jae
aaa
mov
pop
in
fadd
mov
push
lahf
jns
lock
daa
outs
test
sbb
or
mov
ins
cmp
test
sbb
jne
push
sub
aad
outs
pop
xchg
sbb
and
loope
cdq
aaa
aam
jns
add
add
mov
(bad)
or
aas
sbb
in
push
mov
sbb
xchg
lea
lods
hlt
popa
add
dec
(bad)
sbb
pop
arpl
jnp
push
jne
xchg
(bad)
not
les
repz
es
adc
ds
mov
icebp
add
icebp
dec
xchg
mov
div
adc
cmps
sub
ficomp
repz
cli
mov
pop
pop
rcl
inc
or
push
jp
adc
push
push
je
or
and
inc
cmc
mov
loopne
inc
dec
inc
rcr
mov
push
adc
sbb
mov
add
jb
ss
hlt
xchg
repz
cld
pop
icebp
pop
out
clc
jg
in
mov
jl
call
out
(bad)
lahf
jle
add
dec
push
(bad)
pop
sbb
test
in
mov
call
fst
mov
sub
pop
push
or
xchg
mov
sbb
mov
stc
mov
dec
add
inc
adc
pop
(bad)
lahf
add
ins
enter
sub
cmps
mov
ret
fsubr
add
cmp
xchg
xor
call
pop
loope
inc
pusha
mov
retf
and
aam
sbb
cmp
mov
adc
aad
arpl
jecxz
call
icebp
or
sbb
mov
ds
jmp
push
ds
lods
cmc
push
mov
mov
in
add
and
sti
das
repnz
sbb
push
mov
fimul
and
push
int3
cmp
inc
pop
mov
add
jnp
ins
test
repnz
jg
inc
and
xchg
movs
jmp
push
retf
movs
push
ret
outs
dec
mov
(bad)
jns
iret
out
iret
or
cmp
push
push
popa
jmp
call
dec
ja
xchg
out
mov
push
test
sahf
push
jecxz
mov
mov
std
mov
loopne
push
jb
jnp
or
adc
sbb
jmp
mov
jo
adc
repz
outs
mov
ror
retf
adc
cs
add
das
clc
(bad)
or
add
mov
jbe
and
test
loopne
mov
pushf
and
ret
stos
retf
int3
fisttp
data16
repz
push
(bad)
xchg
fmul
popf
mov
mov
cmp
je
mov
hlt
cwde
mov
cwde
add
hlt
mov
pop
dec
in
mov
adc
cwde
jae
adc
das
(bad)
test
add
pop
xor
xor
jle
mov
pusha
xchg
or
jns
or
std
fwait
ror
cmc
xchg
push
inc
in
xchg
xor
or
loopne
fcmove
test
jno
add
ja
les
aam
xor
test
adc
xchg
test
xchg
jae
pop
dec
adc
mov
ds
enter
jge
adc
enter
adc
stc
movs
clc
retf
cmps
xor
icebp
imul
popf
in
xor
(bad)
fs
(bad)
push
das
add
jl
pop
outs
and
inc
les
test
push
(bad)
loopne
adc
jno
lods
dec
pushf
push
std
mov
imul
and
popf
push
and
or
cdq
test
test
inc
outs
add
xchg
(bad)
push
or
(bad)
pop
shl
xor
sti
sbb
into
out
retf
jb
pop
sub
inc
mov
pop
hlt
dec
int
sar
adc
or
sub
mov
dec
repz
mov
jecxz
frstor
lods
pop
mov
dec
loope
xchg
mov
adc
jnp
adc
cmps
inc
mov
outs
mov
jmp
adc
nop
inc
push
movs
mov
dec
int
in
pop
dec
retf
inc
adc
add
popf
in
pushf
in
mov
mov
out
loope
mov
push
retf
outs
jecxz
inc
pop
lods
cmp
mov
repz
push
pop
add
adc
stos
rcr
js
sbb
ja
fimul
mov
xchg
loope
mov
xor
mov
or
adc
mov
(bad)
clc
inc
jne
adc
pop
dec
jns
sub
and
in
sbb
bnd
js
pop
cwde
aas
bound
cmp
cmps
movs
leave
cld
mov
xchg
lahf
mov
mov
cli
lods
les
or
(bad)
fnstsw
inc
xor
mov
fistp
fstp
or
jge
dec
sbb
sub
sbb
aaa
dec
bound
test
pop
mov
dec
mov
jns
addr16
cdq
je
sahf
imul
cmp
fcmovbe
sti
xor
pop
jnp
ret
mov
jge
clc
fldcw
inc
xchg
in
pop
mov
jnp
mov
and
inc
pusha
jmp
inc
sub
lods
dec
pushf
and
popa
mov
mov
loope
push
push
pop
push
popf
mov
push
in
popf
mov
ret
mov
rcl
inc
pop
jl
dec
jle
(bad)
int3
out
mov
(bad)
dec
jno
inc
sbb
lahf
cmp
sar
aad
int
jno
pop
frstor
es
aad
push
cmps
push
(bad)
pop
retf
xchg
sbb
sti
or
in
jns
cmp
es
xchg
pop
and
xchg
(bad)
cmp
(bad)
adc
bound
in
sub
dec
neg
mov
js
fcmovnb
inc
test
inc
(bad)
cld
or
mov
daa
stc
pop
outs
xchg
test
and
add
mov
(bad)
mov
xor
jns
mov
mov
pop
imul
je
push
cmp
xlat
pop
or
cli
or
dec
shl
ret
shr
adc
xchg
sub
inc
or
xor
cmp
add
dec
fdiv
jle
fsub
mov
pop
adc
mov
loopne
cmc
adc
hlt
je
shr
lock
sbb
xchg
das
pop
mov
sub
mov
fs
adc
push
imul
and
add
jge
pop
cld
add
push
pop
pop
pushf
sti
fcomp
shl
lds
fstp
out
dec
or
in
and
fcom
mov
jae
jno
mov
sub
shl
xchg
gs
icebp
and
mov
pop
adc
clts
pop
std
sbb
sahf
test
not
cmp
movs
dec
(bad)
(bad)
mov
fild
rcl
dec
fyl2x
das
mov
fisub
sbb
mov
jbe
aad
and
imul
stos
clc
jmp
call
dec
mov
enter
jb
sbb
push
inc
or
or
shl
daa
fidivr
sar
adc
jg
adc
pop
xor
pop
jmp
icebp
mov
xor
fst
dec
mov
push
mov
sub
xchg
sbb
xchg
inc
jmp
shl
xchg
mul
adc
mov
outs
loop
jmp
push
push
cmp
cs
mov
mov
leave
aam
(bad)
jae
out
inc
add
hlt
test
aaa
sub
mov
cld
ss
fldenv
loop
and
sbb
fdivr
mov
scas
push
repz
inc
daa
call
xchg
retf
sahf
inc
es
inc
outs
mov
out
push
(bad)
pop
cmp
mov
inc
test
xor
mov
jp
imul
outs
xor
xchg
int3
jmp
inc
sahf
bound
push
mov
outs
push
sbb
cmp
push
inc
sbb
mov
mov
std
movs
fwait
xchg
fcom
popf
test
pop
jae
repz
stos
imul
leave
ret
mov
fdivr
shl
idiv
add
mov
jmp
or
les
inc
and
sar
gs
or
push
jbe
sbb
or
and
shl
mov
stc
shr
jo
scas
loop
ret
xor
add
sbb
hlt
ror
dec
mov
push
mov
sub
xchg
mov
dec
test
pop
cmp
shr
pop
adc
inc
imul
(bad)
adc
movs
jb
inc
mov
jmp
lods
aam
enter
vpshlq
mov
call
int
inc
and
cmps
out
mov
call
pop
xor
jg
inc
inc
sub
adc
sahf
icebp
stos
dec
fnstenv
sbb
int3
ins
ret
push
stos
cli
pop
in
stos
xor
pop
cwde
lock
push
ins
addr16
mov
mov
adc
ror
int
xlat
rol
cld
pop
ds
jns
iret
cli
cli
retf
xchg
pop
adc
cwde
nop
or
push
lea
xchg
mov
outs
mov
or
out
add
popa
add
cli
sbb
xor
fdivr
sbb
cmps
(bad)
ret
mov
nop
adc
push
ret
cmp
dec
call
pushaw
cmps
mov
mov
fld
mov
mov
mov
daa
in
or
test
pop
jne
cwde
psubsb
les
xor
cmp
or
addr16
(bad)
sub
enter
les
and
mov
rol
dec
push
(bad)
iret
cmp
push
push
push
aad
sbb
cmp
xor
clc
dec
ins
in
push
lahf
addps
inc
lahf
scas
leave
movs
test
fistp
push
dec
pop
cmp
and
rol
test
mov
clc
inc
push
jecxz
and
jo
xchg
hlt
push
jo
push
xchg
outs
sar
add
test
add
mov
xchg
add
jle
dec
mov
test
(bad)
in
inc
inc
cmp
arpl
iret
mov
sbb
ins
rcr
repz
repz
retf
xchg
(bad)
ret
inc
lods
ins
and
mov
pop
sbb
jnp
sar
jbe
loope
adc
out
pop
mov
pop
outs
mov
cmp
test
inc
scas
sbb
dec
out
fisttp
mov
call
adc
and
xchg
imul
jne
add
and
dec
cmp
sbb
lea
sbb
iret
in
pop
out
int
push
push
push
add
push
inc
ins
inc
mov
std
(bad)
jb
and
ss
sbb
mov
mov
rol
sub
ja
sbb
pusha
jo
fbld
mov
mov
clc
ja
imul
retf
dec
fild
stc
retf
add
fcmovnu
cs
xchg
aam
cdq
or
pop
stc
pop
cdq
push
scas
mov
xchg
fs
js
retf
cmp
leave
std
mov
imul
adc
gs
mov
sub
sti
gs
mov
sbb
sub
mov
cmp
inc
cmc
inc
scas
inc
ret
sahf
mov
dec
adc
int3
sti
or
test
out
cmc
rcr
dec
push
jno
dec
and
stos
jo
mov
cli
jg
aad
cs
icebp
inc
data16
push
and
pop
rol
movs
(bad)
idiv
movs
les
lods
std
sbb
adc
and
sbb
not
and
test
push
mov
xor
push
sbb
arpl
test
mov
stos
inc
mov
pop
std
int
cmp
xor
cmp
(bad)
mov
cmc
repz
add
mov
mov
pop
icebp
sbb
test
jno
pop
pop
test
mov
or
pop
cli
inc
fadd
in
stos
movs
pushf
pop
les
push
aaa
sbb
inc
jmp
pop
pop
adc
(bad)
pushf
stos
mov
xchg
sbb
lahf
pop
scas
fcom
mov
fmul
adc
sbb
ins
inc
rol
cwde
mov
addr16
jp
push
and
or
mov
inc
call
and
ror
add
sbb
add
lock
out
xor
sub
and
enter
pop
movs
mov
and
jns
push
sub
mov
mov
outs
ins
sbb
nop
sbb
lods
ja
retf
outs
jnp
mov
aam
jmp
or
xchg
gs
les
fcom
inc
cmp
sbb
and
mov
shl
xor
sbb
sub
fsubr
xchg
scas
cmc
inc
add
ret
daa
mov
shl
shr
mov
mov
cmp
fdivr
mov
dec
cmp
push
out
mov
push
fmul
fabs
and
addr16
xchg
loope
test
sub
and
popa
pop
sbb
add
stc
or
sbb
adc
jecxz
sbb
call
push
in
xchg
dec
std
cmps
adc
mov
mov
pushf
aam
addr16
into
cdq
fmul
ds
and
repnz
pop
adc
sbb
(bad)
addr16
or
jl
call
(bad)
shl
(bad)
pop
clc
mov
mov
stc
pop
ja
or
push
xchg
cmps
mov
sub
in
and
jp
fmul
ror
rcr
stos
xor
cmps
dec
adc
je
jne
retf
mov
outs
add
jae
ret
cdq
sub
or
fld
and
out
and
pop
(bad)
imul
mov
pop
outs
push
ss
sbb
lds
and
jge
pushf
sbb
add
push
inc
xchg
inc
mul
add
mov
dec
fnstenv
jmp
test
or
aam
jo
stos
fidivr
(bad)
inc
add
lahf
xchg
ret
test
out
sbb
xchg
sub
inc
xchg
jae
mov
add
jb
cmps
dec
mov
mov
cmp
add
movs
scas
fwait
mov
xor
jnp
test
add
mov
add
pop
popf
jnp
jae
jo
stc
sbb
je
cmp
jbe
adc
dec
daa
repnz
mov
xchg
enter
pop
sub
mov
pop
icebp
daa
popf
mul
rcl
push
pop
adc
(bad)
aam
es
test
push
pop
xlat
(bad)
jecxz
ficom
xor
sbb
or
ins
jge
mov
in
cmp
add
in
mov
mov
sub
lods
ins
jns
add
inc
iret
pop
fdiv
or
sub
mov
out
push
shr
cs
add
in
std
and
popf
add
sbb
xchg
push
clts
stos
aad
mov
call
push
shr
mov
ret
fisub
mov
jg
test
xor
and
test
imul
jecxz
jne
mov
dec
mov
cs
iret
fnstenv
adc
or
clc
ret
push
pop
and
out
push
mov
dec
test
jbe
pop
icebp
xchg
cmp
mov
fwait
and
inc
pop
jle
out
movs
add
(bad)
aam
inc
cld
jno
sub
add
(bad)
pop
dec
in
aam
cld
mov
pop
cmp
dec
or
mov
cmp
imul
test
xchg
out
sub
sti
aas
push
fdivp
push
(bad)
sti
sub
push
jb
cmovbe
in
ds
iret
sub
pop
or
pop
daa
dec
mov
out
mov
dec
inc
bound
push
outs
outs
or
cmp
pop
dec
inc
in
sahf
ins
xchg
mov
mov
lods
sbb
sbb
loop
xchg
imul
retf
(bad)
arpl
jno
pop
lahf
add
pop
cmp
jno
movs
pop
mov
add
icebp
pushf
imul
mov
jmp
mov
out
adc
test
imul
pop
pop
mov
and
xchg
xchg
mov
inc
test
enter
mov
sub
sbb
jns
data16
test
xlat
fmul
inc
mov
and
cmp
cmps
and
cld
inc
jecxz
jmp
popa
mov
xchg
inc
xchg
xchg
test
or
sub
push
lods
mov
lds
fdiv
sti
mov
hlt
jnp
lea
in
jb
push
ret
push
mov
xor
and
dec
mov
clc
outs
test
or
(bad)
xchg
cs
imul
xor
sub
or
std
rcr
push
cdq
sub
ret
dec
jne
and
icebp
xor
sub
(bad)
je
xchg
xchg
shl
out
mov
pop
loope
pop
scas
mov
push
rol
data16
loop
dec
mov
inc
lods
xor
jg
data16
ins
popf
cwde
mov
addr16
test
mov
mov
add
or
jne
add
mov
out
jnp
adc
and
gs
(bad)
cmp
shl
dec
xor
xchg
adc
lahf
or
cmp
jge
jg
xor
shr
and
or
cwde
ret
inc
pop
adc
adc
test
sbb
(bad)
mov
cmp
sub
cmps
cmp
shl
inc
mov
xchg
cwde
inc
test
mov
les
push
inc
sbb
lock
jmp
pop
push
inc
addr16
lods
scas
mov
cmc
into
jp
mov
dec
or
mov
sti
xor
sub
out
mov
lods
mov
out
cwde
das
xchg
push
push
cmp
ins
dec
icebp
mov
push
shl
inc
jne
add
fidiv
add
push
(bad)
push
aam
mov
cmp
push
jnp
imul
fwait
and
jns
(bad)
(bad)
int3
stos
xor
popf
ret
out
xchg
lods
pop
fdivr
add
pop
repz
cmps
lds
or
(bad)
ficomp
jg
sbb
ret
call
xchg
ins
in
push
pop
pop
inc
push
popa
jecxz
mov
mov
movs
pop
fcom
int
rcr
cmp
aam
dec
jmp
sbb
ss
push
out
mov
or
jp
std
or
jle
adc
repnz
bswap
pop
cmc
or
dec
xchg
leave
ins
push
popa
sub
je
and
lds
ins
jecxz
nop
add
stos
shl
loope
icebp
cmps
cmp
mov
pop
jl
mov
mov
std
test
mov
jnp
int
push
scas
aam
fmul
arpl
dec
and
sub
and
push
xor
jne
mov
cli
cmps
cmps
ds
jge
out
pop
dec
mov
inc
mov
push
sub
adc
inc
xchg
push
in
outs
sub
sbb
bound
mov
jae
aas
stos
test
xor
jae
addr16
shl
mov
loope
cmps
xchg
ds
popa
mov
sbb
loop
(bad)
adc
fild
and
inc
pop
push
stos
add
and
aam
in
mov
pop
and
push
mov
cmp
fdiv
xchg
out
int3
popf
out
push
cs
push
repnz
and
cmp
sar
test
(bad)
mov
cld
clc
sub
arpl
das
lahf
std
mov
jp
loope
sbb
inc
hlt
jae
jge
fxch
push
push
mov
cmp
shl
ins
imul
jmp
dec
xchg
sbb
adc
in
fsub
pop
push
loopne
cmp
(bad)
or
dec
aaa
std
mov
in
adc
fmul
inc
scas
sar
push
rcr
pop
add
dec
add
dec
imul
test
stos
mov
rcl
shl
cmp
(bad)
mov
xor
push
call
mov
inc
adc
xor
pop
test
mov
sbb
adc
push
scas
retf
scas
add
xchg
je
cli
add
scas
stc
test
or
addr16
cmc
mov
or
and
sti
jle
or
mov
cmc
mov
fimul
dec
enter
in
jg
xchg
sbb
ret
stos
xchg
mov
mov
stos
retf
ficom
shr
fs
jbe
xor
fdivp
pop
mov
mov
mov
xor
int3
pop
rep
jbe
stos
fwait
cmps
mov
test
or
mov
rol
ficomp
or
mov
popf
icebp
push
push
dec
push
repz
push
xor
inc
rcr
push
inc
lds
repz
repnz
cmp
mov
shr
fdivr
adc
sbb
jle
pop
pop
repz
xchg
xor
mov
mov
sbb
sbb
adc
stos
stc
pushf
daa
pushf
push
jno
dec
dec
call
fldcw
push
ss
pop
fcomp
adc
test
inc
xor
sub
pusha
jle
push
push
movs
sbb
fcom
scas
gs
pop
ds
mov
mov
xchg
sub
cmp
ss
mov
pop
call
fs
imul
ds
cmc
js
cli
xchg
add
push
push
mov
call
shr
dec
dec
popf
(bad)
sub
and
ds
push
jbe
pop
repnz
cmp
and
and
push
stos
sbb
push
xor
xor
adc
pop
add
test
fs
push
xchg
mov
jo
ss
out
hlt
in
nop
and
and
cmp
ins
daa
mov
leave
fwait
sbb
lahf
pop
(bad)
sbb
mov
mov
aas
or
pop
add
popf
pop
inc
stc
(bad)
xor
jmp
sub
pop
xchg
mov
pop
repnz
ds
pop
test
jle
pop
xchg
or
enter
pop
adc
adc
pop
imul
sbb
pop
inc
stos
cwde
iret
cmps
imul
test
repz
jns
fbstp
xor
in
sbb
add
mov
mov
ja
mov
pusha
push
xchg
out
pop
fcmovne
sbb
lds
mov
(bad)
mov
add
fcom
add
jns
test
cmc
xor
push
lea
pop
loopne
mov
(bad)
lea
add
loopne
bound
int
mov
iret
ror
sbb
clc
test
ss
pop
mov
fcmovnu
popa
bound
mov
test
xchg
scas
repz
sti
add
ret
mov
pusha
pusha
push
sbb
(bad)
push
lods
leave
das
mov
xchg
adc
popf
lods
add
push
adc
std
and
mov
sub
mov
cmc
das
adc
enter
into
fcomp
inc
mov
(bad)
add
push
or
call
rol
sub
je
adc
outs
sbb
stos
in
xchg
ins
outs
popf
sub
jle
inc
in
xchg
aaa
icebp
je
jae
adc
sub
jmp
sub
das
js
les
sbb
xor
(bad)
cmp
push
and
rcr
pop
in
mov
repnz
movs
xchg
repnz
cmp
out
jl
pop
pop
in
test
sbb
jae
test
xchg
pop
fisttp
xchg
js
jge
outs
push
mov
mov
imul
push
pop
leave
push
xchg
stc
cdq
fs
xchg
pop
xor
data16
push
mov
and
push
push
dec
or
mov
idiv
repnz
cmp
and
add
sti
mov
es
push
pop
adc
push
ficom
mov
pop
js
push
push
inc
pop
sub
xor
jmp
cld
inc
mov
test
loope
inc
stos
lahf
lds
cdq
fsub
inc
nop
ret
adc
pop
(bad)
inc
pushf
xor
icebp
dec
jnp
jle
nop
data16
mov
fs
mov
sub
ins
lahf
adc
std
add
jmp
imul
sub
test
ror
(bad)
pop
aaa
cdq
mov
(bad)
(bad)
pop
pop
ror
(bad)
(bad)
dec
mov
ss
fldcw
jp
loopne
call
dec
lea
mov
sbb
xchg
scas
scas
int
test
xchg
mov
bound
mov
xchg
fimul
add
or
xor
lock
inc
push
scas
and
aas
push
adc
cdq
stos
mov
scas
test
inc
mov
frstor
daa
mov
or
inc
aam
lahf
fistp
call
sub
pop
sbb
cld
mov
test
mov
ja
arpl
jae
scas
jmp
push
push
inc
jmp
and
les
inc
out
popf
pop
xchg
es
gs
out
pop
add
js
movs
or
in
imul
mov
out
jp
in
in
rcl
mov
ins
fwait
mov
aam
dec
cmp
or
fs
loope
mov
sbb
cdq
dec
repnz
clc
test
sbb
scas
sbb
lahf
sub
loopne
les
js
mov
push
lock
mov
mov
lock
mov
enter
popf
loope
cmp
retf
ins
inc
and
sbb
js
mov
xor
pop
in
in
mov
(bad)
mov
dec
arpl
pop
and
repz
adc
outs
xchg
ja
mov
pop
push
inc
sbb
pop
sbb
out
hlt
ss
sti
shl
adc
(bad)
fs
xchg
fsubr
cmp
(bad)
mov
stos
hlt
or
xchg
or
mov
dec
adc
mov
std
daa
fild
aaa
or
loop
adc
ins
jp
or
pusha
cs
ins
xor
add
xchg
mov
pusha
call
jnp
es
mov
xchg
inc
ds
ins
adc
mov
outs
and
cmp
jp
xchg
pusha
dec
scas
arpl
jmp
mov
imul
mov
mov
jne
sbb
jae
jb
jge
or
scas
xor
(bad)
pushf
and
daa
stos
mov
imul
xlat
dec
rcl
mov
rcr
pop
call
inc
test
shr
neg
adc
int3
mov
shl
sbb
inc
pop
and
dec
jecxz
cs
cmps
out
mov
out
inc
neg
xlat
inc
or
stos
jmp
jne
xchg
cmp
in
hlt
xchg
mov
push
cld
cdq
fcomp
movs
inc
add
xor
lods
ror
outs
adc
inc
adc
jbe
mov
pop
mov
push
pop
aas
pushfw
jmp
scas
cld
add
dec
loopne
(bad)
lock
sti
or
push
inc
clc
push
or
xor
(bad)
jo
daa
mov
call
dec
in
fcmovu
and
rol
int
addr16
add
retf
cmp
add
inc
loopne
cmp
les
test
mov
stos
test
(bad)
mov
jmp
or
xchg
or
inc
repnz
aad
fisub
test
pusha
adc
fld
cmp
cld
mov
jl
ss
sub
gs
das
push
in
push
jecxz
jne
adc
clc
sbb
pop
popa
push
fwait
bound
adc
(bad)
push
cmp
adc
ret
jnp
push
add
mov
and
mov
mov
adc
imul
or
mov
or
pop
adc
popf
retf
mov
mov
in
inc
aad
fmul
cmp
push
outs
cmp
retf
or
add
xor
push
jge
retf
push
cmp
(bad)
xor
add
sub
push
cmp
mov
inc
pusha
fdivr
sbb
xchg
sti
gs
hlt
dec
xor
inc
jle
jmp
inc
mov
in
out
dec
cmp
push
sbb
xor
inc
(bad)
mov
xchg
xchg
jp
dec
add
dec
xchg
mov
lods
mov
push
call
pop
sub
pusha
mov
mov
dec
xor
fs
jl
mov
arpl
xor
push
push
fdiv
xor
(bad)
mov
test
ret
loop
imul
xor
or
in
sbb
xor
and
jb
icebp
rol
fcomp
pop
jns
xchg
inc
test
fiadd
jmp
jns
loopne
in
or
test
inc
pop
(bad)
imul
mov
dec
movs
push
cwde
xor
pushf
hlt
mov
add
fidiv
inc
add
aaa
test
xor
(bad)
mov
pand
mov
pop
xor
xchg
sahf
sub
scas
std
lods
retf
xor
push
inc
mov
(bad)
scas
mov
popa
xor
loopne
(bad)
(bad)
leave
push
rcr
fld
mov
fld
nop
jp
fldcw
call
jg
pop
inc
test
imul
(bad)
xor
mov
add
push
lea
and
(bad)
dec
repz
and
fistp
frstpm(287
iret
adc
sbb
add
pushf
and
call
out
js
ins
cmp
loop
retf
clc
or
mov
push
retf
sub
mov
or
inc
pop
pop
loopne
js
stos
xchg
push
and
rcr
xor
repnz
aam
call
std
adc
add
adc
rcl
push
add
in
test
stos
(bad)
nop
mov
outs
pop
gs
div
add
and
push
(bad)
hlt
std
mov
jmp
cwde
sbb
shl
xchg
stos
inc
lds
(bad)
rcl
xchg
stos
push
adc
dec
jns
fmul
adc
mov
and
sub
ret
dec
jae
dec
xor
repz
jp
mov
cdq
jns
in
enter
pushf
and
push
loopne
push
in
call
pop
shr
lahf
jmp
mov
retf
mov
push
cld
aad
mul
lds
mov
xchg
jmp
push
dec
jo
loope
jo
je
pop
mul
cmp
adc
mov
lods
xlat
jnp
pop
(bad)
jbe
js
mov
ins
repz
add
pushf
add
data16
movs
dec
add
ret
mov
push
fmul
pop
neg
xor
test
or
mov
in
dec
add
dec
and
and
imul
sahf
mov
inc
xchg
test
stc
lods
push
lods
push
scas
out
jmp
adc
dec
jp
lea
scas
push
cmp
jecxz
jmp
mov
adc
in
dec
imul
rcl
scas
dec
popf
sbb
add
mov
or
mov
test
sbb
fadd
je
mov
lea
cdq
out
in
sbb
xchg
stc
movs
addr16
cmp
bound
add
mov
call
retf
in
sahf
pop
xor
cs
movs
mov
rcr
adc
xchg
lods
jmp
push
cs
lahf
ja
xor
sti
adc
mov
mov
sbb
stos
xchg
push
xchg
call
sbb
das
xor
cmc
mov
repnz
add
push
sar
outs
jmp
sub
out
or
mov
popa
inc
jnp
in
push
imul
push
out
aas
cmp
shl
repz
push
into
mov
movs
or
adc
es
rcl
sbb
icebp
(bad)
or
outs
fldenv
ror
jmp
std
test
sbb
lods
jmp
scas
or
xor
js
or
dec
or
imul
cmc
and
fadd
out
in
add
cmp
push
out
inc
jnp
push
fcmovb
mov
lods
mov
enter
pop
xlat
sbb
inc
xor
fnsave
add
and
push
xor
or
enter
push
imul
pop
sub
mov
push
out
jp
mov
lods
sub
imul
xchg
mov
(bad)
out
sub
or
jns
loop
adc
inc
add
pop
push
mov
fnstcw
popf
loop
xchg
hlt
pop
sbb
dec
dec
adc
mov
in
and
cmp
ds
out
idiv
jmp
mov
int3
dec
add
xchg
test
ret
shr
cmp
out
scas
lods
mov
(bad)
in
xchg
mov
cmp
lods
mov
dec
ficomp
cmps
xchg
retw
retf
lahf
or
mov
jo
retf
lds
cmp
mov
sbb
int
xlat
sbb
sti
mov
jmp
fyl2x
imul
sbb
mov
div
pop
inc
imul
lods
sahf
cmc
jmp
stos
mov
loope
scas
clc
dec
sahf
rol
fwait
ins
fdivp
cwde
xchg
pop
into
fwait
adc
je
int
and
into
lds
loop
sbb
sub
rcr
aas
xor
mov
aaa
mov
mov
jg
sub
cmc
bound
js
call
xchg
jb
(bad)
es
stc
movs
push
retf
scas
cmp
fstp
ret
arpl
mov
stc
clc
lods
push
cmps
test
adc
dec
pop
push
data16
cld
xchg
sbb
stos
les
mov
movs
ins
inc
or
sbb
inc
ins
inc
jmp
sbb
popf
cmps
add
or
aas
xchg
mov
xchg
sbb
fs
xlat
call
or
pop
sbb
mov
arpl
cmp
push
sbb
out
dec
enter
push
aad
(bad)
nop
inc
mov
sbb
movs
ror
xchg
retf
sbb
add
lahf
fwait
mov
(bad)
shl
pop
das
sub
adc
jno
fmul
imul
jne
pushf
xchg
shr
xor
lods
mov
add
nop
cdq
lods
sbb
and
adc
stc
pop
ret
fnstcw
mov
(bad)
stc
popaw
or
adc
sbb
mov
or
xor
jnp
daa
mov
adc
int
mov
cmc
fstp
push
test
lea
jne
clc
(bad)
cmp
(bad)
outs
stos
jp
les
and
mov
loopne
inc
js
adc
jmp
aas
pop
sar
retf
xchg
jne
test
xchg
cmp
xchg
mov
js
add
sub
jnp
stos
call
adc
cld
inc
xchg
inc
jbe
movs
xor
inc
cmp
dec
pop
fild
test
test
mov
adc
pop
gs
pop
cli
out
arpl
mov
and
into
dec
inc
inc
cmps
push
mov
sbb
xchg
xor
sbb
mov
jo
fistp
push
jnp
ror
add
push
and
outs
(bad)
pavgb
stos
xor
push
sbb
leave
mov
pop
mov
jle
ret
xchg
pusha
xchg
and
dec
call
mov
jae
jnp
test
cmps
pop
ja
mov
inc
xchg
loopne
fisttp
lea
(bad)
ds
sbb
in
xor
das
loope
lock
lea
xchg
retf
mov
xchg
xchg
int3
add
inc
aas
or
faddp
xchg
mov
pop
and
or
pop
xor
jecxz
or
cmp
clc
jle
cmp
mov
mov
sub
aas
bnd
inc
aam
jl
xor
dec
xchg
mov
mov
dec
std
nop
xchg
fistp
sbb
retf
dec
rcr
repnz
cmc
out
cmp
cmp
imul
adc
add
std
popa
or
mov
arpl
mov
jmp
or
ja
scas
jl
adc
(bad)
lahf
pop
outs
icebp
xor
mov
stos
jns
and
cmc
pop
inc
xchg
sub
pop
push
test
jge
ins
inc
or
in
in
mov
push
data16
mov
test
mov
out
or
or
xchg
jl
test
scas
cmp
adc
test
mov
cwde
sbb
sub
mov
out
sahf
dec
inc
xchg
push
(bad)
jns
(bad)
xor
(bad)
mov
mov
push
ja
jmp
mov
mov
ss
adc
push
push
cmp
ds
xchg
into
sub
mov
pop
int3
lock
jnp
(bad)
jmp
fimul
cwde
(bad)
sti
enter
mov
cmps
inc
pop
cmps
jo
mov
mov
xor
adc
dec
dec
out
pop
and
push
cdq
or
hlt
and
cli
pop
clc
mov
fsubr
jmp
mov
mov
fiadd
and
test
cmp
fsubr
cs
repz
sbb
cmps
mov
jg
and
jo
xchg
adc
jmp
sub
loopne
repz
cmp
adc
sbb
je
inc
adc
bound
cli
lods
test
bound
dec
cwde
add
mov
adc
inc
jg
loop
(bad)
loopne
sbb
inc
sahf
addr16
xchg
or
std
je
push
jne
pushf
jl
cs
rcr
pop
or
jbe
les
inc
loope
addr16
lahf
fstp
push
sub
outs
(bad)
outs
push
adc
aas
jo
pop
cmp
xor
popa
gs
mov
aaa
mov
push
add
jle
ret
(bad)
jge
adc
loope
inc
dec
shl
dec
stos
imul
test
sbb
xor
scas
stos
xor
mov
push
fs
fistp
adc
sbb
popa
pusha
xlat
add
repnz
mov
pop
xchg
pop
mov
aas
sti
sbb
or
xor
cmp
adc
es
loopne
xchg
lods
cmc
es
ja
(bad)
sti
std
mov
mov
jmp
jnp
cmp
pop
loope
jbe
fdivr
fistp
rol
cdq
inc
(bad)
(bad)
je
bound
pusha
ret
dec
mov
loop
add
aas
cmc
push
dec
arpl
mov
pop
cdq
ins
jg
scas
and
adc
icebp
lahf
mov
and
push
lods
pop
xchg
cld
xchg
cmps
pop
or
hlt
inc
xor
call
idiv
frstor
adc
inc
cmp
nop
aas
or
cdq
jg
sbb
adc
pop
jge
push
dec
lods
shr
inc
mov
mov
fbld
push
rcl
lds
and
mov
mov
ds
jmp
adc
push
out
(bad)
jns
pop
dec
cmps
pushf
mov
stos
movs
xchg
pop
leave
ficom
(bad)
in
or
lods
xchg
jnp
sbb
add
pop
or
loope
dec
iret
clc
and
fnstcw
(bad)
stc
add
sahf
outs
push
movs
(bad)
loope
mov
mov
loopne
fidiv
loope
and
push
sub
test
popf
loopne
aaa
jo
loopne
pop
leave
std
enter
fld
sbb
xchg
aaa
stos
mov
xor
adc
mov
sbb
movs
mov
dec
rcl
sub
pop
cmc
push
(bad)
cmps
pop
std
mov
sub
xor
ja
sub
fsub
adc
std
jne
add
frstor
in
(bad)
inc
bound
fld
mov
mov
xrelease
je
mov
rcl
push
xchg
test
and
and
mov
int
mov
ss
std
movs
icebp
jecxz
test
cmc
frstor
jecxz
pop
mov
push
jnp
scas
inc
inc
sub
mov
es
xor
loope
dec
xor
movs
outs
std
push
dec
(bad)
and
test
call
sub
cwde
sub
out
xor
or
jo
push
repz
xor
(bad)
repz
sahf
adc
fnsave
inc
mov
test
xchg
outs
outs
fdivr
adc
pop
jo
sub
int3
push
add
push
popa
clc
dec
push
mov
jnp
out
mov
add
push
sub
xchg
(bad)
fs
ins
inc
ret
cmp
sbb
pop
and
mov
fstp
sbb
cdq
imul
pop
mov
(bad)
jno
cmc
mov
xor
movs
outs
jl
sub
es
sti
xchg
daa
mov
shl
sbb
sti
in
(bad)
fsubr
sub
call
push
shr
pop
mov
rol
and
jmp
dec
xlat
inc
or
(bad)
enter
lahf
xchg
or
jmp
adc
stos
push
mov
ins
pushf
mov
add
(bad)
retf
(bad)
push
inc
mov
push
nop
into
inc
fstp
adc
dec
pop
lahf
jb
mov
push
test
(bad)
ss
jbe
mov
fdivr
add
xor
repnz
in
loope
mov
jns
push
adc
add
xlat
xchg
sahf
mov
xchg
dec
and
xor
rcr
mov
cs
cmp
xchg
repnz
hlt
jmp
out
cld
mov
out
imul
inc
fidiv
into
rol
fnsave
(bad)
(bad)
dec
test
movs
pop
dec
dec
mov
sbb
pop
and
push
push
adc
xchg
jp
push
xor
loop
mov
xlat
fimul
fimul
sub
out
inc
jmp
loopne
xchg
mov
shl
call
jle
fwait
sbb
cmp
shl
pop
and
xchg
mov
xchg
push
sub
add
jl
xor
or
jl
(bad)
mov
ins
add
push
out
movs
shr
sub
int
pop
gs
sbb
inc
pop
dec
ja
pop
test
shr
out
mov
lahf
leave
sub
pop
jmp
pop
std
jnp
cmp
pop
mov
and
scas
aaa
pop
out
dec
pop
dec
add
mov
inc
xor
mov
ins
inc
cmp
lds
repnz
dec
push
mov
(bad)
mov
dec
xor
cdq
jbe
mov
mov
jne
adc
push
or
cmc
and
dec
repz
ss
mov
les
call
fadd
sbb
push
enter
adc
xor
xor
dec
ficomp
mov
lds
sbb
into
dec
std
jmp
cmp
call
pop
pusha
cmp
inc
ss
xchg
daa
fimul
test
adc
adc
cdq
mov
repnz
push
mov
jg
mov
nop
sbb
ret
dec
mov
xchg
cli
pop
js
pop
jno
popa
repnz
js
movs
and
int
iret
sbb
cdq
jbe
inc
fst
jb
retf
ret
gs
push
add
jns
test
sti
shr
inc
cdq
jl
pusha
test
lods
idiv
cmp
inc
mov
jge
add
(bad)
loopne
inc
xchg
outs
loop
dec
aas
mov
dec
arpl
call
mov
cmps
jle
cmp
shr
rcr
xchg
or
pop
sub
inc
hlt
leave
sbb
pop
pop
cmp
and
in
add
push
aam
je
jne
cs
loopne
shl
cdq
push
sbb
js
xchg
stos
fs
mov
or
adc
out
icebp
adc
add
sub
push
sub
aad
mov
add
sub
and
pop
rcl
cmp
fwait
fwait
imul
cmp
sub
(bad)
mov
in
(bad)
leave
inc
adc
loope
fsubr
lods
xchg
(bad)
pop
xor
hlt
mov
dec
rcr
xchg
(bad)
retf
cwde
inc
fistp
add
pop
or
cmps
in
cld
cmp
ins
mov
mov
push
call
das
cwde
push
sbb
sub
mov
in
dec
xchg
fcmovu
retf
pop
test
fcomp
cli
inc
jnp
test
dec
nop
lds
push
fsub
sbb
fiadd
(bad)
je
jmp
push
and
cs
pop
push
dec
ficomp
pop
sar
xor
call
dec
mov
mov
fwait
push
popa
jb
lods
xor
xor
adc
test
mov
dec
pop
add
jnp
xchg
inc
push
pop
and
or
mov
mov
arpl
dec
sub
and
pop
in
dec
test
paddusb
jne
ret
xchg
push
ins
xchg
inc
sub
jmp
repz
push
out
cmp
inc
mov
pop
mov
shr
push
jge
ins
cmp
push
cmp
bound
enter
pusha
sub
fsub
pop
imul
mov
xor
(bad)
adc
cs
sub
mov
push
xchg
int3
or
xchg
and
mov
cs
pushf
push
data16
loop
daa
fidiv
mov
(bad)
adc
or
mov
ret
dec
sbb
loope
call
sub
into
push
aam
pop
retf
arpl
sub
adc
jge
arpl
in
jmp
inc
mov
pusha
std
push
int
sbb
fistp
push
xchg
xchg
and
das
outs
arpl
stc
adc
xor
int
inc
xor
fimul
imul
loop
sar
xchg
scas
ss
xchg
arpl
xchg
pushf
mov
movs
repnz
fmul
lock
xchg
ret
push
sbb
xchg
mov
push
test
out
mov
xchg
push
lds
neg
je
add
jbe
jbe
je
mov
mov
cmps
add
xchg
cmps
ja
inc
fld
loope
dec
(bad)
mov
out
pop
sub
mov
ror
or
popf
std
in
cdq
xor
pop
or
pushf
(bad)
out
lods
xchg
movs
shl
nop
mov
outs
mov
lahf
push
dec
xlat
add
push
scas
ins
sbb
popf
loop
mov
and
and
sub
arpl
ret
aam
or
xor
int
push
imul
mov
loope
inc
lock
(bad)
imul
sbb
ficom
scas
mov
je
cmc
ret
add
adc
ss
xchg
adc
mov
jne
cmps
cdq
mov
sbb
add
arpl
ds
push
adc
cmp
jmp
xchg
pop
mov
xchg
fsubr
or
jno
stc
aad
adc
xor
into
fnsave
popa
jns
adc
stos
push
cmp
or
mov
push
push
in
add
pop
and
inc
not
adc
inc
std
cmc
lock
push
inc
dec
lods
out
sub
fucomi
jmp
dec
cmc
xchg
or
jne
xchg
inc
cmp
ins
and
jb
pop
pop
pop
lea
daa
pushf
dec
sbb
mov
lods
jmp
mov
and
fbstp
inc
inc
add
sbb
mov
stc
push
xor
xchg
dec
movs
add
dec
xor
xchg
imul
stc
scas
lods
arpl
sub
out
loopne
cwde
mov
mov
(bad)
xchg
in
add
repz
icebp
fld
jmp
out
std
(bad)
push
and
push
push
daa
ret
mov
dec
and
jg
test
sub
mov
sub
dec
addr16
pop
xor
or
and
outs
cmp
(bad)
pusha
mov
jb
dec
jae
into
sar
and
xchg
push
cli
aaa
xchg
jnp
cmp
mov
jno
pusha
sub
rcr
nop
jno
xchg
xor
cmps
add
pushf
sbb
test
dec
lahf
xor
aad
mov
mov
daa
outs
cld
fld
iret
or
push
push
pushf
test
mov
xor
mov
loop
imul
repz
push
fs
fadd
mov
test
push
mov
fstp
mov
daa
cmp
or
xor
out
in
inc
pop
add
enter
push
rcr
push
jns
iret
and
in
icebp
and
mov
add
ins
add
inc
jno
or
mov
push
xor
dec
(bad)
iret
dec
iret
push
enter
sub
sub
bound
stos
lods
cli
mov
and
pop
shl
or
fisub
pop
and
and
and
mov
je
sub
mov
mov
(bad)
outs
pop
mov
stos
lds
stc
enter
outs
out
mov
aam
idiv
xor
enter
sbb
lods
xchg
xchg
lahf
ins
retf
imul
add
in
cmp
jne
cmp
(bad)
fsub
pop
dec
pop
mov
cmp
dec
sbb
in
test
mov
cmp
cmp
xor
aas
sub
pop
cmp
ret
lock
fstp
dec
pusha
xchg
int
(bad)
retf
xor
pop
loope
lods
pop
xchg
adc
mov
add
push
dec
xor
test
cmc
pop
jp
cmps
(bad)
mov
rcr
shr
cmp
idiv
dec
pop
mov
mov
xchg
jo
mov
push
ins
xchg
ror
repnz
jp
add
cmp
cmp
cmp
lahf
shl
imul
out
clc
dec
jle
test
stos
fwait
push
adc
loop
jno
stos
cmp
adc
or
mov
ss
xchg
mov
mov
jle
test
int
add
inc
movs
and
sub
cs
inc
hlt
ret
sti
dec
retf
dec
hlt
lods
inc
ss
mov
jbe
call
inc
push
icebp
sbb
mov
test
out
ss
clc
loop
imul
clc
lods
mov
push
xor
aam
sub
out
retf
std
fs
sahf
dec
(bad)
mov
xchg
cmc
movs
popa
movs
addr16
fdivr
and
xchg
push
sub
jmp
loopne
cdq
loop
shl
pop
aam
cld
(bad)
mov
lea
aas
jns
or
dec
unpckhps
sahf
mov
dec
dec
jmp
adc
test
mov
out
push
dec
xor
or
xor
adc
mov
mov
push
jmp
cs
add
or
fwait
mov
shl
shl
enter
ja
dec
sbb
call
popf
lock
xchg
(bad)
add
gs
call
jg
sub
icebp
sub
rcl
pop
je
fsub
cdq
rcr
loop
push
in
jb
loope
cdq
movs
xchg
mov
imul
ds
sbb
ret
mov
cmp
sub
lods
inc
pushf
ret
daa
mov
sub
and
jg
stos
iret
xchg
adc
imul
and
or
hlt
loopne
sti
sub
push
fld
xchg
add
xor
pop
repz
(bad)
mov
je
sti
push
scas
iret
ins
and
ja
int3
hlt
xchg
mov
dec
jge
add
nop
mov
jbe
pop
out
sub
xor
sbb
add
fucomi
psubb
adc
mov
pop
xor
js
lock
aam
jl
jg
mov
in
xchg
jbe
xchg
inc
popf
sbb
or
jg
aaa
cmp
retf
js
movs
ds
jns
pop
jbe
lods
jg
and
fadd
leave
jno
leave
pop
xor
push
leave
ret
inc
mov
mov
(bad)
into
jno
dec
inc
nop
shl
clc
push
call
mov
bound
sbb
sbb
retf
xor
in
fild
xchg
pop
add
add
dec
cmps
stos
pop
das
leave
mov
mov
xchg
mov
rol
out
rol
ins
aam
mov
sbb
call
sbb
jl
mov
movs
jnp
xchg
push
cmp
jecxz
or
or
inc
and
mov
mov
out
cmc
fwait
push
enter
and
push
cmp
sub
mov
pop
xorps
sub
outs
adc
xchg
sahf
pop
mov
aaa
add
shr
enter
aad
pusha
mov
shl
push
mov
add
sbb
cmp
sbb
pop
pop
je
out
xchg
add
mov
cmp
sti
mov
pop
movs
push
adc
inc
jo
xor
push
fwait
add
jae
cmp
dec
loope
hlt
push
inc
cmp
adc
mov
ret
pop
stos
sbb
jne
test
sbb
stos
(bad)
loopne
xchg
rol
cs
in
mov
in
mov
test
test
fdivr
call
in
test
rcl
lahf
add
lods
out
pop
jno
sub
repnz
imul
ror
sar
mov
mov
xchg
pop
mov
sub
pop
dec
out
fcmovbe
pop
das
jle
push
clc
pop
xchg
in
and
std
mov
sbb
das
push
pop
xchg
sbb
fadd
dec
jns
jns
push
pop
retf
test
dec
cwde
push
test
js
fstp
fistp
jl
add
add
int3
sub
add
test
cmp
(bad)
stos
adc
stos
test
inc
icebp
bound
jmp
sub
add
inc
or
or
scas
inc
loopne
pop
sub
cmps
clc
dec
push
xor
cld
jecxz
pop
dec
mov
adc
cs
iret
fstp
movs
nop
mov
js
imul
aaa
scas
inc
mov
fs
xchg
dec
push
shr
push
sbb
test
sbb
pop
pop
dec
fiadd
pushf
push
shr
fsubrp
movs
and
(bad)
lds
cmp
fistp
pop
xor
pop
lock
bound
adc
xor
movs
inc
cmc
sub
movs
fadd
std
test
xor
and
call
inc
(bad)
js
mov
add
jecxz
les
mov
jle
fdivr
pop
mov
sub
outs
jle
cdq
lea
in
sbb
lock
dec
call
sub
imul
rcl
pop
or
fild
mov
push
shr
es
mov
mov
fld
mul
setge
mov
pop
add
(bad)
cmp
ins
and
mov
sahf
mov
retf
or
inc
cmp
je
(bad)
pop
movs
je
pop
daa
add
or
pop
pop
fld
repnz
push
scas
dec
adc
push
shl
sbb
(bad)
enter
rol
jne
(bad)
fiadd
add
jmp
bound
in
outs
aaa
js
or
inc
(bad)
ret
sbb
ds
xchg
mov
xlat
mov
test
sub
inc
pusha
(bad)
test
aam
js
jmp
dec
inc
out
xor
pop
sar
xor
sbb
stos
out
dec
mov
je
sar
les
jge
mov
das
adc
sbb
gs
or
cmp
nop
mov
js
xchg
jae
jns
(bad)
call
or
inc
clc
or
cdq
adc
ss
xor
add
imul
les
fs
mov
ins
cmps
mov
popa
mov
gs
fdivp
mov
pop
icebp
mov
imul
push
push
push
adc
mov
jnp
ins
xor
lock
push
fnstsw
out
das
into
sub
leave
jge
pop
xor
xchg
pop
ja
cmp
(bad)
xlat
pop
retf
pop
cmps
mov
sbb
test
addr16
cmp
faddp
sbb
pop
pop
test
repz
cmp
stc
ror
mov
ret
rcr
cmp
and
fnstenv
sbb
add
(bad)
xor
mov
or
in
xor
inc
std
stos
(bad)
xor
call
ret
loope
(bad)
xor
fidivr
call
test
or
jge
push
sub
push
jp
test
lds
das
test
adc
push
sbb
fsubr
jae
push
xchg
je
clc
pop
aaa
mov
mov
int3
mov
and
shl
loope
and
std
add
stc
push
pop
inc
loop
test
xchg
ds
iret
ins
dec
mov
fcomi
(bad)
jp
pop
add
inc
in
mov
(bad)
(bad)
sbb
and
cld
pusha
push
dec
les
add
cmps
das
or
cmps
inc
mov
inc
dec
push
je
sbb
ret
and
add
jmp
dec
sbb
loopne
aas
lock
add
shl
mov
arpl
repz
inc
pop
(bad)
cmps
sbb
pop
mov
bound
mov
dec
jecxz
data16
sub
mov
sbb
pop
mov
cmp
imul
(bad)
or
shr
cmps
inc
cs
pop
xor
mov
or
cwde
mov
mov
cmp
stos
cdq
out
add
fwait
int
std
adc
cmp
pop
cmp
call
out
and
or
cmp
mov
jp
ds
addr16
mov
xchg
loope
sub
jne
pop
cmp
cmp
and
pop
jg
mov
push
sub
jl
retf
mov
dec
push
cld
and
(bad)
mov
hlt
cwde
dec
test
mov
mov
dec
cwde
cmp
gs
xor
aaa
xchg
sub
push
add
daa
xchg
xlat
push
dec
fistp
scas
ret
loope
(bad)
fisubr
call
mov
sti
xchg
jo
dec
cwde
lds
ins
jge
out
loop
pop
jae
scas
pop
dec
mov
push
fidiv
popa
imul
in
or
pop
rol
(bad)
jmp
xchg
into
inc
mov
jne
popa
pop
(bad)
popf
inc
js
loopne
sub
mov
xchg
not
mov
xchg
jne
stos
ror
popf
into
test
dec
fs
mov
inc
(bad)
xor
into
gs
mov
nop
inc
outs
ret
ins
rcr
test
test
push
call
pop
es
mov
xchg
mov
lahf
mov
xor
cmp
pop
push
add
cs
mov
push
add
push
jmp
mov
pop
test
push
cmp
jmp
pop
pop
xchg
mov
inc
imul
std
jnp
adc
leave
sub
gs
jae
cwde
mov
imul
es
add
adc
mov
push
test
inc
cmp
ror
push
mov
ins
mov
and
arpl
mov
call
inc
mov
xchg
jbe
cmp
ins
sbb
ret
shl
cmp
test
adc
inc
sub
xchg
push
push
adc
push
addr16
es
jo
sbb
je
mov
xor
jmp
sar
mov
mov
call
test
(bad)
mov
xchg
lock
scas
cld
jmp
push
ror
fwait
cs
pusha
ins
dec
and
std
fs
jp
and
push
mov
fldcw
xchg
jb
js
inc
sbb
sbb
std
out
ins
adc
pop
sub
mov
jno
mov
mov
cwde
pop
(bad)
out
push
sub
adc
inc
xor
imul
jo
jmp
hlt
adc
data16
lahf
xchg
cmp
call
push
push
push
popf
mov
adc
cmps
push
ins
or
fs
xor
movs
xor
int
sbb
cmova
cmc
dec
ffreep
aam
cmps
sti
or
leave
mov
ret
dec
mov
js
jbe
mov
pop
mov
out
pop
adc
push
scas
and
pop
jg
cmp
fcomp
retf
rcl
mov
push
jl
push
in
push
fwait
xor
push
shr
cwde
dec
aaa
es
ja
xor
fist
(bad)
cmp
pop
or
cmp
xor
(bad)
or
ret
sti
lea
jae
in
lock
aaa
jmp
call
mov
ins
push
jbe
mov
bound
addr16
in
jecxz
mov
mov
popf
mov
repz
ror
dec
xchg
xor
pop
jb
pop
lds
push
movs
push
call
aad
sahf
dec
xor
out
movs
dec
ror
cmp
in
pop
(bad)
fistp
daa
fadd
imul
es
cwde
jmp
mov
rep
add
call
test
fs
daa
mov
mov
call
dec
test
mov
popf
adc
pop
push
mov
nop
sub
sub
mov
stos
pop
jae
cdq
adc
(bad)
fmul
mov
add
adc
pop
push
mov
xchg
sbb
stos
inc
jecxz
jne
and
cli
push
jle
(bad)
das
repz
cmc
jl
in
js
jp
or
repz
or
xor
and
add
jecxz
and
dec
jbe
mov
daa
dec
xchg
dec
or
mov
xchg
call
pop
add
inc
lods
jns
and
lock
sbb
outs
jbe
jmp
push
retf
inc
mov
(bad)
push
test
or
pop
aam
mov
xchg
xchg
scas
push
idiv
dec
sub
loopne
inc
push
xchg
jl
or
xchg
ftst
outs
pop
in
cmps
outs
mov
cmp
or
and
xor
and
jne
shl
call
inc
dec
stos
inc
stc
in
xor
inc
ror
loope
cld
test
xchg
mov
fwait
mov
push
ret
sbb
adc
push
or
adc
lods
dec
push
fs
push
inc
pushf
or
xchg
(bad)
mov
jbe
sbb
jne
iret
outs
not
xchg
mov
mov
sub
or
cmp
adc
inc
pusha
not
out
pinsrw
jmp
add
pop
add
inc
mov
jp
bound
or
call
push
enter
repz
rol
lea
fidivr
adc
aaa
jmp
sub
add
cs
mul
xchg
cmp
add
add
(bad)
mov
sbb
data16
lods
aad
add
arpl
movs
sub
and
addr16
adc
xchg
iret
lods
aad
cmp
pop
xchg
pop
cdq
push
mov
adc
sub
ret
lahf
pushf
push
dec
xchg
js
rcl
jge
call
enter
ror
cmp
push
aas
test
hlt
jb
jmp
adc
je
jae
or
mov
cmp
imul
inc
adc
jecxz
adc
imul
xchg
scas
adc
icebp
or
xchg
inc
pop
repnz
or
fcom
aaa
pop
(bad)
(bad)
arpl
sbb
shl
movs
shld
push
push
icebp
sar
jno
loope
cli
mov
mov
cmp
pusha
or
out
fstp
data16
daa
fwait
xchg
xchg
or
(bad)
xchg
xor
push
call
popa
retf
jno
push
outs
adc
jo
dec
pop
les
out
setle
mov
int3
jbe
iret
adc
jge
pop
pop
cwde
in
pop
and
and
es
leave
mov
outs
pop
xchg
test
dec
mov
pop
xor
call
xchg
adc
jge
mov
(bad)
cli
jne
jbe
sbb
test
ret
movs
mov
jecxz
jp
xor
mov
shl
dec
add
jne
dec
inc
leave
aam
adc
mov
push
pop
xor
ss
pop
mov
outs
add
xor
mov
cmp
gs
sbb
scas
jmp
mov
sub
aas
push
test
cmp
push
mov
call
add
lea
jecxz
ret
push
lahf
cmps
iret
js
inc
dec
push
xor
xchg
push
data16
adc
imul
jge
outs
in
imul
xchg
or
movs
lods
push
cld
push
add
aaa
cwde
xor
push
xor
lods
push
fcomp
sar
fiadd
push
test
xchg
test
pushf
scas
xor
push
sub
xadd
inc
popa
and
pop
sar
cs
fisttp
repz
cli
or
cmc
fsqrt
mov
mov
cmp
adc
mov
xchg
xor
mov
xchg
sbb
mov
in
or
adc
lods
and
lea
jbe
sti
jle
inc
inc
mov
inc
jge
xor
sub
jg
xchg
leave
mov
loope
xlat
or
sub
push
pushf
(bad)
std
pop
mov
pop
mov
idiv
cmp
in
repnz
gs
dec
lods
pop
stos
dec
test
pop
dec
(bad)
cmp
shl
mov
out
rol
pop
inc
adc
jecxz
xchg
fdiv
aam
aas
sub
cmp
pop
imul
jmp
xor
or
scas
push
out
in
jne
add
hlt
and
mov
mov
lahf
mov
loopne
aas
je
imul
lods
or
fbstp
mov
dec
movs
inc
je
xchg
movs
sbb
stos
das
pop
xor
mov
mov
push
adc
(bad)
daa
arpl
popa
xor
popa
mov
fdivr
shl
test
or
pop
mov
and
outs
xor
aad
ret
xor
push
imul
leave
jbe
xchg
adc
cmp
adc
sub
loopne
fcmovu
sbb
fadd
mov
repz
das
add
enter
xchg
add
aad
mov
jnp
xchg
or
(bad)
out
jp
mov
xchg
pop
sub
and
inc
cmp
jle
push
add
jg
xor
stc
ud2
or
cli
pop
ins
movs
arpl
leave
aas
add
and
inc
iret
scas
adc
mov
inc
pop
nop
inc
loopne
call
push
dec
or
in
xor
fist
mov
jl
sahf
popf
dec
dec
lea
inc
daa
pop
jge
ret
add
xor
inc
pusha
es
mov
loope
adc
clc
test
pop
ins
mov
sub
xchg
mov
jg
mov
hlt
std
shr
movs
ins
fcom
push
pop
loope
adc
push
adc
sub
fild
fcmovbe
icebp
pop
mov
mov
imul
mov
jbe
sar
push
es
pop
dec
push
sbb
and
into
add
and
push
xchg
push
sahf
cmp
cli
xchg
pop
(bad)
loopne
in
(bad)
and
inc
push
inc
xchg
xchg
sub
fsubr
add
pop
shl
ins
inc
or
shr
sub
sub
push
ins
stc
or
or
sbb
cmp
jle
sub
or
mov
xchg
add
pop
or
test
xor
inc
(bad)
push
cmp
mov
pop
sti
cmp
xlat
pop
push
icebp
mov
into
adc
mov
popa
inc
and
mov
out
xchg
scas
xor
test
push
data16
or
sti
je
mov
mov
sbb
jp
cmp
sub
mov
sbb
xchg
cli
mov
inc
push
jne
push
inc
fidiv
mov
or
hlt
xor
fldl2e
and
push
jbe
lods
xor
push
sub
push
lock
lods
or
pop
not
jne
mov
imul
jno
leave
hlt
jb
loope
xchg
loope
dec
in
loope
xor
pop
pop
add
xchg
push
jno
test
out
or
out
push
and
ins
sub
cmc
daa
cmc
fld
test
inc
out
lods
fisttp
jmp
mov
addr16
push
xor
icebp
test
pusha
or
pop
in
push
mov
and
mov
jnp
dec
enter
sbb
pminub
sbb
int3
rcl
ins
cs
popf
cmp
jmp
jne
jmp
(bad)
pop
or
mov
adc
retf
jbe
add
pop
sub
xchg
push
mov
cli
add
push
or
jl
mov
sbb
mov
mov
sub
sub
mov
ret
inc
add
mov
inc
xor
ficom
xor
pop
outs
push
add
nop
jnp
int
data16
or
mov
mov
dec
ins
mov
or
ret
out
cld
addr16
popf
(bad)
out
push
add
inc
add
xchg
cli
mov
dec
pop
(bad)
pushf
popa
ins
inc
and
repnz
add
and
das
dec
mov
icebp
test
mov
jmp
adc
push
xchg
fnstcw
in
out
pop
add
dec
sbb
stos
arpl
mov
inc
add
push
loope
jno
sub
cmp
popf
(bad)
into
cmp
jge
sbb
ficom
nop
popa
xor
inc
cmp
in
stc
mov
sbb
inc
ja
jg
call
aad
in
jg
pop
push
stos
gs
sbb
xor
test
bound
mov
mov
xlat
mov
sti
xchg
(bad)
mov
xchg
jg
adc
xchg
xchg
cli
push
pop
rcr
cmp
inc
adc
(bad)
or
push
(bad)
in
sub
and
es
pop
(bad)
adc
cmp
loopne
cmp
adc
push
mov
pusha
inc
pop
fadd
jmp
arpl
jnp
das
shl
xor
stos
dec
xor
sbb
out
adc
add
into
repnz
pushf
mov
push
cdq
repz
ret
inc
lock
add
mov
push
cmp
cdq
jno
jmp
cmp
dec
ja
(bad)
xor
sti
xchg
jmp
jl
cmps
push
cld
retf
add
ror
addr16
or
pop
pop
xchg
es
xor
xor
imul
out
int3
movs
xchg
cdq
rcl
sub
mov
xor
mov
pop
ja
push
ficom
loop
lods
add
das
jmp
xor
int3
and
dec
mov
shl
pop
cmps
inc
mov
loopne
outs
or
cmp
cmp
popf
out
jns
mov
sub
rcr
loop
out
pop
daa
dec
dec
jl
sahf
aad
mov
out
mov
fisubr
outs
gs
(bad)
lds
stc
mov
cmp
inc
or
stc
repnz
add
out
cmp
aas
xchg
push
xchg
stos
out
push
jns
push
jae
or
enter
ja
scas
ins
or
mov
pop
xchg
out
sub
int3
pop
push
ret
jecxz
sbb
mov
push
cmps
add
cmp
std
or
jle
push
push
jge
dec
call
lock
dec
mov
mov
add
jno
inc
pop
xchg
pop
ficom
jbe
pop
shl
jecxz
push
xor
adc
sub
lods
sub
hlt
cdq
ss
dec
dec
(bad)
push
cmp
fimul
les
or
repnz
pop
xor
xchg
add
mov
jmp
loop
retf
(bad)
adc
and
or
or
inc
xchg
cmp
dec
out
mov
push
or
xlat
int
sahf
dec
sbb
pop
gs
jle
add
sbb
pusha
add
fldenv
cmps
stos
fstp
jno
dec
les
iret
fwait
inc
repz
sbb
popf
cmp
jmp
jae
lods
mul
cmps
call
xor
test
xchg
or
mov
outs
aam
sbb
stos
push
repz
sar
fs
dec
sbb
mov
fisubr
mov
jb
push
sbb
mov
in
push
add
(bad)
lock
push
inc
mov
or
adc
pop
dec
and
and
pop
sar
in
xchg
dec
mov
jno
hlt
retf
cmc
call
inc
bound
retf
adc
(bad)
xor
mov
std
(bad)
push
jp
or
stos
jo
sub
sbb
cdq
sub
sub
in
adc
pop
jnp
cmp
inc
retf
jmp
movs
jl
mov
out
push
push
push
cmp
and
inc
adc
sub
push
push
pop
movs
xchg
and
mov
cmp
outs
mov
or
add
jmp
cmp
lea
test
xor
not
sub
(bad)
loope
push
pop
ret
push
sbb
dec
outs
sub
stc
mov
ins
jmp
adc
mov
sub
lods
xchg
iret
outs
jo
mov
in
push
imul
adc
das
dec
inc
enter
hlt
stos
shr
mov
leave
retf
mov
shl
lea
jo
mov
jo
and
dec
shl
and
das
imul
adc
xor
(bad)
imul
sbb
or
mov
das
cmps
in
pop
pop
lds
mov
loope
xchg
xor
sub
rcl
out
retf
sub
dec
jle
cmp
fwait
sbb
icebp
push
push
es
jp
(bad)
jle
xchg
pop
cmps
loope
cdq
mov
mov
repnz
mov
ins
sahf
pusha
data16
bound
in
xor
add
mov
ja
cmps
cmp
inc
sub
add
lock
loop
stos
adc
mov
xor
das
mov
sub
aas
adc
or
out
out
mul
adc
cs
cdq
jg
mov
xor
out
jb
das
and
ret
mov
test
pushf
cmp
sub
add
inc
movs
push
cmp
mov
fnstsw
sbb
sbb
ret
push
loop
jecxz
and
add
xor
pop
fs
cmp
push
xchg
retf
and
xor
jno
idiv
out
les
or
std
(bad)
lahf
cmps
imul
inc
jne
and
movs
fnstcw
lea
mov
sub
popf
add
mov
(bad)
fwait
stos
pop
mov
jp
add
ja
fisub
cmp
fistp
mov
mov
and
cmp
nop
xchg
xchg
sbb
cmps
stos
mov
aam
test
push
adc
iret
jns
cmp
pop
or
push
push
data16
dec
fmul
inc
out
cmp
push
push
clc
sub
frstor
pusha
mov
pop
push
je
mov
daa
pop
or
sub
enter
cmc
mov
(bad)
push
xor
jns
loop
sub
xor
test
adc
add
scas
mov
out
pop
cmp
mov
mov
mov
in
outs
fucomi
ret
std
in
std
movs
popa
fild
jle
or
movs
jp
loopne
add
push
or
sbb
imul
mov
jae
int3
sub
sbb
fcom
xchg
xchg
sbb
mov
data16
jmp
outs
enter
hlt
mov
dec
jmp
(bad)
std
push
ja
xchg
rcr
rcr
mov
jo
mov
test
pop
out
retf
popf
mov
cmp
pop
or
push
in
fistp
retf
fimul
push
dec
jge
or
les
aaa
(bad)
adc
or
jae
mov
xchg
mov
div
mov
test
sub
icebp
jae
lods
and
jb
jnp
aas
add
jno
mov
fwait
out
mov
daa
cmp
push
nop
ins
and
mov
out
sub
xchg
jecxz
adc
mov
ins
xor
or
ss
cmp
adc
aam
inc
mov
rol
lods
or
and
sub
mov
xor
xor
jmp
mov
or
pop
jae
sbb
and
adc
and
data16
jecxz
mov
clc
jmp
mov
(bad)
shl
mov
std
add
push
cmc
add
mov
enter
sbb
or
adc
xchg
sbb
xor
jmp
mov
push
or
adc
or
or
(bad)
fs
sub
movs
push
rol
sbb
les
mov
push
gs
adc
inc
imul
sub
inc
les
(bad)
mov
mov
(bad)
aam
pop
iret
mov
push
xor
and
shl
pop
and
dec
lock
adc
inc
stos
add
push
lahf
sbb
push
mov
mov
into
cmp
nop
rol
int
pop
xor
dec
mov
movs
cmp
jae
xor
popa
fild
cld
xor
std
(bad)
mov
lods
(bad)
shr
sub
pusha
ds
into
pop
retf
adc
out
pop
cmp
dec
rcr
or
rcl
dec
shl
ja
ds
cmp
sub
adc
add
mov
and
div
pop
sbb
push
popf
inc
(bad)
cld
jmp
cdq
scas
loopne
add
adc
shl
adc
xchg
xchg
scas
pop
sub
xor
pop
or
push
std
push
adc
fidiv
push
outs
(bad)
push
and
mov
push
jbe
xor
fsubr
sahf
je
adc
or
iret
(bad)
out
cmps
xor
lods
mov
add
int3
(bad)
sbb
fadd
adc
push
xlat
clc
(bad)
sbb
aas
rol
aaa
mov
test
mov
shl
pop
dec
mov
push
sbb
and
mov
mov
cmc
jbe
xchg
adc
xlat
or
ins
(bad)
retf
hlt
sub
es
dec
bound
enter
sub
dec
push
push
push
adc
aas
sar
inc
ins
adc
cs
dec
push
jb
cmps
call
int
rcl
add
xchg
mov
pop
inc
imul
adc
jge
jmp
retf
jg
pop
adc
outs
fcom
xor
cmp
push
jp
cmp
and
mov
adc
into
fcom
or
dec
jns
pop
imul
and
and
mov
loopne
test
mov
lods
jl
sbb
and
jmp
add
test
xor
add
jmp
popf
sub
sub
mov
adc
sub
es
mov
mov
jae
cld
cld
mov
ret
cmps
dec
out
and
dec
nop
addr16
pop
xchg
ds
xchg
xchg
xor
out
or
mov
sub
pusha
pop
dec
pop
daa
sbb
(bad)
mov
push
mov
and
mov
jbe
xchg
ret
push
test
mov
lock
outs
repz
push
fild
imul
cmp
push
ja
mov
cmps
hlt
jge
movs
mov
jmp
pushf
push
jl
mov
dec
xor
sbb
sbb
jb
mov
(bad)
cmps
xchg
fist
cmc
iret
push
pop
rcl
sbb
xor
cmp
out
imul
jae
fdivr
in
add
cld
sbb
ss
mov
push
and
hlt
out
pop
push
jns
jp
pop
mov
ja
xchg
lock
cmp
and
or
aad
out
dec
lea
out
fcomp
jo
mov
loopne
jbe
xchg
(bad)
daa
ins
fnstsw
fld
sub
xchg
pop
(bad)
rol
xchg
lods
sbb
pop
jae
mov
jae
fcmovnb
shl
xchg
mov
pop
pop
adc
cmps
adc
push
movs
or
sub
rcl
retf
std
fld
rol
test
and
loop
push
aam
xchg
xor
test
loop
cmp
gs
jmp
repnz
xchg
movs
out
inc
pop
mov
int
popf
push
adc
(bad)
(bad)
cmps
or
sub
push
les
sbb
cmps
or
push
inc
ficom
sub
lock
xchg
jl
xlat
outs
fs
mov
fcmove
sub
imul
fld
mov
or
iret
nop
xrelease
(bad)
(bad)
movs
mov
xchg
xor
pop
xchg
dec
pop
pusha
mov
icebp
or
sbb
jmp
adc
cmp
push
inc
scas
or
loope
jbe
movs
jbe
ret
jnp
cdq
inc
cmp
test
cmp
int3
xor
movs
loop
jg
push
hlt
out
adc
adc
rcr
and
mov
pop
adc
iret
cs
sbb
(bad)
fidivr
cld
jge
ret
lahf
sbb
cmc
jne
jae
bnd
dec
imul
sbb
ret
retf
pushf
jno
icebp
retf
test
movs
movs
hlt
std
loop
aaa
pop
xor
es
call
or
std
jmp
out
or
sbb
push
jbe
dec
ret
xchg
add
cli
push
pop
push
jns
mov
inc
shl
mov
js
push
xlat
lds
xchg
mov
aam
int3
sub
mov
mov
rcr
cmp
fistp
push
lock
mov
xor
sbb
sti
sbb
test
fsubr
daa
std
sbb
shl
scas
out
cmp
push
dec
push
das
push
ds
jmp
(bad)
fsubr
mov
cmps
aad
in
int
ja
nop
retf
retf
dec
cmp
mov
ss
pop
lahf
pop
jae
jo
jmp
ret
push
lds
test
lock
addr16
loope
fs
leave
mov
mov
fmul
mov
shr
mov
fnstsw
xchg
sub
inc
xchg
out
aas
or
xor
dec
nop
xchg
pop
xchg
iret
lahf
cdq
pop
mov
outs
test
pop
sti
xor
xlat
push
rcl
cs
out
push
xlat
mov
sbb
pop
(bad)
faddp
mov
push
retf
jo
sub
cmp
jns
fs
fistp
mov
loope
arpl
aad
mov
mov
xchg
pop
cli
xor
int3
mov
out
push
(bad)
or
scas
and
push
xor
popa
bound
clc
pop
sub
loope
or
lds
iret
fs
push
fistp
icebp
sbb
icebp
lods
sbb
cmc
xchg
fs
(bad)
dec
jg
jmp
sub
popa
pop
into
xchg
or
push
mov
mov
mov
mov
xchg
dec
fcomip
and
inc
xor
add
mov
ret
gs
sub
xor
pop
sub
dec
add
int
in
pop
es
jae
or
outs
test
call
cmp
adc
addr16
sub
cmp
mov
xchg
sub
mov
test
push
jp
data16
or
push
outs
popf
in
retf
movs
add
test
add
into
in
bound
jns
lahf
mov
mov
sbb
cmp
xchg
xor
mov
mov
adc
popa
lds
sbb
in
adc
pusha
jl
jae
retf
test
adc
sub
mov
adc
cmp
sahf
jno
scas
ret
adc
cwde
cmps
shl
dec
dec
pop
movs
nop
and
jge
sbb
call
push
adc
(bad)
fild
movs
or
jge
or
jne
jecxz
mov
mov
pop
and
daa
and
jecxz
out
cmp
out
ret
jne
inc
sub
clc
(bad)
dec
ins
ja
fwait
mov
repnz
dec
cmp
jno
aas
(bad)
mov
pushf
adc
sahf
jno
mov
cdq
faddp
test
es
enter
mov
aaa
push
test
sub
xor
outs
daa
mov
xor
jns
sbb
les
rol
mov
fisubr
call
cmc
mov
push
ret
sbb
adc
lock
or
lahf
and
adc
pop
loopne
daa
inc
xor
and
mov
inc
aas
and
sar
sti
jmp
or
mov
mov
sar
pop
jecxz
cmp
pop
sets
adc
cmp
icebp
popf
jge
popa
or
pop
ss
fimul
add
and
nop
pushf
inc
nop
adc
push
in
mov
data16
mov
adc
sub
cmp
arpl
pop
test
cmp
repz
test
aad
push
add
aad
(bad)
icebp
stc
les
xor
mov
fisubr
repz
je
(bad)
(bad)
in
mov
sbb
mov
arpl
pop
sub
inc
iret
mov
cdq
jae
sub
jne
test
mov
sbb
mov
cmps
mov
aam
xchg
and
or
call
ds
pop
inc
(bad)
es
(bad)
(bad)
mov
imul
sbb
and
dec
aas
imul
inc
cmp
and
mov
mov
mov
sub
jle
push
inc
dec
call
inc
pop
cmp
fwait
jo
mov
out
xchg
xor
icebp
or
shl
dec
sub
or
ja
adc
xor
dec
mov
cli
xor
mov
icebp
mov
call
rcr
pushf
xor
ret
aad
sbb
jae
add
or
mov
hlt
or
push
mov
mov
mov
add
popw
pop
mov
enter
dec
jge
jnp
cwde
mov
mov
shr
addr16
mov
out
test
inc
outs
addr16
pop
push
xchg
(bad)
push
push
jle
outs
cmp
cmps
scas
or
inc
out
sbb
je
imul
(bad)
enter
mov
dec
call
inc
ror
lds
jecxz
pop
aam
sahf
dec
stos
retf
push
sbb
push
int3
mov
cmps
outs
(bad)
mov
xchg
mov
outs
push
int3
(bad)
xor
pop
pushf
cdq
jbe
es
retf
inc
fsubr
ins
test
rcr
mov
pop
sbb
pop
loopne
sbb
das
adc
pop
sub
leave
cmp
lock
out
cs
mov
dec
and
in
ror
stos
enter
mov
jbe
sbb
xchg
cmp
out
lods
sub
out
sub
adc
call
ds
dec
xchg
std
add
mov
mov
(bad)
pop
aam
fstp
jl
fsubr
mov
std
and
mov
popa
(bad)
fisub
jge
call
dec
fnstenv
nop
(bad)
pop
adc
push
test
jno
js
inc
int
int3
xchg
mov
xchg
xor
jmp
xchg
sub
loope
mov
in
or
ret
(bad)
ins
sub
sub
rcr
enter
adc
xor
jmp
sbb
mov
loopne
mov
addr16
sub
or
sbb
cld
stc
in
rcl
pop
dec
mov
sbb
scas
ja
cmp
dec
out
and
xor
jp
ret
xor
jno
je
add
shr
rol
cmp
mov
push
jmp
gs
mov
adc
jmp
out
ja
mov
pop
jl
pop
and
xor
fisttp
lods
cwde
jno
(bad)
xchg
les
xlat
mov
(bad)
pop
or
mov
pop
ret
mov
inc
mov
jns
add
ds
ins
out
xor
fsub
sbb
cmps
and
jg
cmp
sar
xor
in
loop
sub
imul
aaa
adc
cdq
mov
sub
addr16
cwde
add
icebp
test
repnz
mov
inc
loopne
mov
bound
leave
or
ds
cli
xor
jle
cmps
cli
je
dec
jns
pop
push
dec
mov
ins
push
test
enter
popa
xchg
adc
dec
fdiv
pop
outs
inc
ficom
mov
jg
mov
jmp
mov
aaa
stos
or
xchg
jp
push
jb
push
test
jge
sub
cmp
sahf
push
push
int
ins
xchg
mov
inc
pop
pop
dec
sbb
push
and
sbb
xchg
adc
lods
out
mov
std
add
das
pop
mov
data16
xchg
(bad)
stc
dec
loope
cs
test
outs
imul
repnz
out
mov
sbb
icebp
add
mov
push
add
cmc
pop
mov
or
hlt
in
jp
les
ret
dec
test
push
xchg
nop
dec
stos
shl
shr
push
jecxz
dec
rcr
(bad)
gs
scas
sub
sbb
mov
ss
stc
shl
xchg
cmp
adc
dec
out
dec
icebp
xchg
mov
jmp
sti
ret
cmps
sbb
jb
int
add
push
jb
push
push
jg
imul
sbb
push
idiv
add
xchg
pop
mov
outs
fs
(bad)
test
vrangess
fmul
sub
sub
cs
mov
mov
jno
retf
ja
ins
loope
push
test
fldenv
mov
pop
xchg
std
and
std
mov
mov
mov
cmp
clc
inc
leave
or
jmp
sub
inc
ins
mov
mov
fimul
in
daa
sub
dec
sbb
push
sar
dec
(bad)
clc
je
neg
lods
jbe
sub
jge
popa
mov
xchg
out
push
ficomp
jo
push
bound
sbb
pop
adc
push
(bad)
iret
cmp
xchg
xchg
dec
sbb
xchg
sbb
push
or
(bad)
lock
cdq
test
pop
dec
leave
cmp
fcomp
mov
xor
or
imul
out
aaa
dec
adc
lea
xchg
ja
cmp
rcr
mov
jae
and
loope
stos
dec
xor
push
and
xchg
ret
pop
sub
cmp
retf
out
inc
scas
in
nop
or
fs
test
stos
ror
mov
out
adc
pop
adc
enter
mov
jno
loop
out
xor
mov
xchg
dec
xchg
push
sub
push
(bad)
stos
test
or
in
mov
ret
mov
push
daa
adc
inc
pop
es
jmp
clc
pop
mov
int3
push
fild
sbb
call
add
rol
add
push
mov
dec
je
imul
cdq
push
in
out
in
cmp
out
pop
jb
cwde
sti
(bad)
ds
imul
pop
inc
mov
leave
mov
adc
push
test
push
in
sub
adc
loop
or
add
jecxz
pop
icebp
xchg
dec
stc
mov
cmps
mov
stos
sub
sub
sbb
inc
retf
jns
ret
pop
leave
repnz
(bad)
xchg
lods
mov
push
lods
arpl
nop
retf
mov
call
pusha
mov
push
shr
push
retf
mov
and
ins
repnz
push
jmp
or
stos
jl
sar
nop
dec
or
xchg
sar
or
push
adc
in
retf
xchg
repnz
out
je
iret
jp
shr
mul
fs
mov
and
or
mov
fstp
push
test
sahf
sbb
push
loopne
mov
leave
cli
dec
cwde
push
clc
pop
mov
adc
add
les
in
push
stc
jmp
mov
into
push
adc
xchg
inc
jo
jp
daa
add
pop
xor
dec
add
jno
repnz
cmc
xchg
out
fstp
leave
lds
or
dec
stos
and
test
mov
xchg
and
sbb
out
gs
cmp
add
es
mov
cmc
xor
pop
or
xchg
jne
mov
into
aad
std
(bad)
mov
xchg
dec
jle
mov
rcl
out
pop
pop
loop
ds
or
xor
call
loopne
stc
out
cmp
in
sar
sbb
jne
test
sub
inc
fidiv
repnz
cmp
pop
mov
jmp
cmp
and
retf
sti
data16
mov
outs
inc
inc
(bad)
enter
imul
ins
test
fs
add
ret
jp
or
in
pop
jmp
mov
les
or
push
out
repz
fs
movs
imul
mov
xor
jmp
stos
pop
cs
lods
dec
stc
lods
and
loope
cmc
cmp
mov
inc
mov
retf
xor
push
(bad)
out
dec
ds
push
push
dec
ss
dec
bound
repz
pusha
jge
retf
mov
rol
jbe
aad
jecxz
in
jle
stc
dec
inc
loop
outs
sbb
ficom
(bad)
or
dec
nop
clc
leave
jge
or
shl
mov
push
int3
rol
pop
push
test
adc
sahf
(bad)
out
add
loop
xchg
icebp
add
shr
js
add
add
mov
stc
xor
bound
out
sbb
test
mov
stos
mov
pop
rcl
push
add
fisttp
dec
psrad
xchg
pusha
cmp
adc
and
jg
sub
inc
adc
sbb
xlat
es
inc
push
out
pop
mov
pop
cli
shl
cmps
std
sbb
mov
es
push
sbb
call
inc
mov
cli
jne
in
bts
adc
and
aam
(bad)
repz
test
retf
neg
je
lea
cld
cmp
fwait
out
movs
mov
jo
int3
shl
fs
push
out
xor
inc
or
test
nop
mov
sbb
sub
ja
cmp
scas
jge
ficom
lea
ret
(bad)
loop
fld
out
shl
call
and
jecxz
das
jl
sub
mov
jb
xor
mov
cmp
ret
sub
int
pusha
xchg
dec
dec
je
imul
outs
call
push
inc
or
(bad)
xchg
in
arpl
outs
push
scas
mov
pop
popa
pop
pushf
(bad)
mov
in
lea
inc
fbld
shr
in
mov
loope
cmp
bound
inc
dec
repz
mov
and
pop
fistp
inc
cmp
or
stc
adc
or
jae
or
push
fs
pop
(bad)
mov
push
fsubp
fadd
test
loope
push
mov
ret
mov
scas
out
aas
ja
sub
xchg
jns
cli
mov
dec
aam
(bad)
retf
(bad)
adc
sbb
shl
sub
xchg
cmps
mov
jl
sbb
jb
mov
xchg
int
mov
push
push
mov
addr16
ss
push
popf
mov
outs
sbb
jl
imul
mov
or
rcr
int
test
push
mov
add
cmps
sub
sbb
movs
fisttp
(bad)
repnz
jge
jns
sub
xchg
mov
or
hlt
sub
clc
mov
mov
add
sub
test
xor
scas
mov
sbb
mov
lock
imul
mov
mov
cmp
cli
mov
ja
and
lods
adc
push
mov
xchg
les
rcl
fwait
cmp
aam
mov
into
sub
mov
in
push
shl
pop
test
push
inc
cmps
test
mov
int3
sub
dec
fdiv
add
ror
lods
mov
mov
les
jae
xor
inc
jns
scas
aas
scas
(bad)
scas
int3
int
dec
push
and
sub
icebp
dec
or
(bad)
test
adc
cmp
sti
xchg
ret
sti
push
test
repnz
sub
cli
bound
pop
test
ja
aam
dec
push
ficomp
xchg
or
das
jge
cld
scas
mov
dec
scas
mov
repz
xor
ja
inc
push
and
sti
cmp
or
add
pushf
ins
cmp
xor
push
repz
mov
push
xchg
loopne
push
outs
mov
sbb
push
inc
mov
adc
xor
iret
xchg
sbb
jnp
fmul
sub
cmp
jmp
popf
stos
mov
adc
ret
and
jno
jmp
add
rcr
inc
in
loopne
(bad)
push
adc
inc
pop
dec
cmp
jmp
in
or
sub
or
inc
aam
loopne
fisubr
pop
ins
std
mov
enter
pop
xor
pop
sti
shr
imul
test
retf
sub
sti
iret
add
ss
arpl
test
aas
in
int3
push
xchg
ret
jno
or
pop
bound
outs
in
push
sbb
mov
loope
repz
ins
or
jo
mov
pop
lea
adc
ror
sub
xchg
pop
mov
bound
add
imul
cli
das
in
sar
inc
test
pop
adc
ret
sub
xor
mov
pop
sar
cwde
xchg
movs
push
retf
sub
lock
and
ss
jmp
(bad)
sub
ja
pop
sbb
push
scas
int3
push
mov
cld
push
inc
pop
pop
loope
retf
mov
cmps
adc
(bad)
mov
stc
fcom
dec
bound
pushf
pop
int3
xchg
imul
xor
neg
sbb
xor
call
stc
pop
cmp
mov
std
mov
or
xchg
stc
pop
div
adc
mov
and
int
mov
jge
inc
imul
icebp
mov
sub
ror
xchg
pop
xor
add
inc
xchg
pushf
sub
jmp
mov
cmp
jge
sbb
je
in
and
pop
cmp
inc
lds
mov
popf
shl
scas
push
inc
ins
loope
mov
fdivp
push
bound
aas
or
pop
or
fs
inc
jp
test
arpl
ins
mov
retf
jmp
lock
pop
cdq
add
jbe
ret
mov
clc
sbb
sbb
sbb
push
ds
test
loope
call
aam
(bad)
jmp
add
test
sub
xor
adc
repnz
jne
call
cmp
jle
lds
lock
sub
ds
sbb
iret
push
mov
loop
lods
mov
cmp
and
outs
movs
and
jmp
mov
std
mov
fcmovnu
jl
cmp
out
sbb
push
jp
pop
in
jb
jae
and
jne
cwde
dec
fsubr
push
bt
cmps
xor
inc
lds
ror
iret
gs
push
push
ret
fadd
movs
sahf
aas
push
or
push
mov
xor
and
pop
mov
inc
js
cmp
ds
pusha
in
dec
nop
adc
add
mul
and
jmp
push
imul
ins
dec
fndisi(8087
cld
pop
or
or
pop
and
cmp
pop
call
mov
popa
xchg
ret
mul
mov
jne
push
xchg
rol
mov
div
cmp
int3
add
sub
or
lods
mov
pop
and
outs
sti
push
shl
call
xchg
jg
test
repnz
ret
lods
inc
(bad)
xor
push
(bad)
jge
(bad)
in
js
ror
inc
lahf
add
mov
inc
std
mov
fldcw
cmc
mov
pop
imul
xor
pop
pop
loop
push
(bad)
pop
adc
and
outs
add
dec
in
cmc
push
push
inc
jno
adc
loope
iret
mov
cs
and
fisub
dec
shl
retf
cmps
mov
and
add
push
mov
jg
lds
jl
or
call
mov
sbb
pop
push
cmp
es
popf
push
add
xchg
pop
mov
dec
out
sbb
shl
add
test
and
fidiv
shl
dec
lods
push
cmps
sub
test
xchg
sub
ror
in
adc
mov
in
aas
or
xchg
mov
mov
arpl
xchg
jbe
into
cmp
bound
dec
lock
cmc
stos
jnp
int
mov
nop
xor
push
mov
add
sub
dec
push
call
daa
xchg
repz
iret
lock
fnop
scas
or
inc
add
cs
lods
dec
stos
adc
sbb
sbb
inc
push
sub
push
adc
or
pop
push
test
pop
(bad)
(bad)
daa
sbb
push
push
int
or
int3
(bad)
fisttp
lock
outs
popf
imul
ss
movs
repnz
push
xchg
push
xor
pop
and
add
inc
(bad)
stc
and
cwde
call
and
mov
popa
jne
hlt
data16
add
push
or
add
xor
movs
dec
pop
outs
xchg
shr
mov
(bad)
adc
fbld
dec
mov
pop
dec
test
retf
cmp
aad
hlt
xlat
push
mov
leave
dec
cs
idiv
pusha
or
mov
cdq
fstp
ret
bnd
mov
xor
hlt
out
mov
dec
pop
mov
cvtpi2ps
in
dec
test
mov
mov
sbb
in
pop
cld
mov
mov
lods
stc
and
mov
sar
and
cmp
rcr
jns
stos
aas
retf
and
sahf
retf
jns
(bad)
imul
data16
xor
inc
jns
mov
rcr
movs
pop
jge
xor
out
and
sbb
xchg
in
das
pop
leave
ss
pushf
or
push
mov
repnz
gs
fnstsw
pop
retf
(bad)
sti
test
aad
sbb
stc
out
es
jmp
ret
stos
mov
jle
int
pushf
sub
sbb
cmc
not
out
adc
jmp
ja
addr16
iret
push
add
pop
mov
shl
icebp
daa
outs
fimul
bound
cld
cmovb
mov
out
lea
leave
push
call
mov
ds
mov
xchg
cli
das
jecxz
pop
test
or
cmc
sbb
push
mov
xor
push
test
xor
xlat
fiadd
mov
fld
xor
push
mov
cmp
nop
push
push
cld
add
(bad)
mov
and
xor
fnsave
inc
dec
pop
add
sub
stos
add
jmp
data16
gs
add
popf
cmps
imul
sbb
adc
out
loope
mov
xor
mov
push
cli
cmp
lea
mov
pushf
add
sbb
mov
gs
loopne
mov
inc
fwait
or
sub
test
xchg
xchg
(bad)
dec
mov
lods
inc
add
sbb
add
mov
push
or
mov
mov
fisubr
cld
and
cmc
jns
in
in
sar
cmp
arpl
mov
jo
(bad)
call
lock
cs
add
fs
leave
cmp
test
shl
repz
dec
sbb
iret
mov
push
dec
add
mul
fwait
iret
(bad)
jns
sub
cmp
xchg
int
inc
hlt
push
mov
scas
retf
mov
fadd
and
dec
inc
pop
sbb
enter
pushf
hlt
lea
(bad)
xchg
jl
pop
jbe
in
mov
je
mov
xor
loope
sub
ret
push
mov
dec
mov
push
inc
je
mov
repz
cwde
mov
sbb
mov
fwait
mov
iret
lods
call
mov
out
add
add
popa
sub
scas
mov
xchg
(bad)
iret
xor
jmp
sub
bound
or
lds
(bad)
(bad)
in
ret
add
pop
cmp
fstp
dec
jo
cmp
jmp
lahf
pop
pop
fwait
xor
sahf
leave
xor
popf
pusha
xchg
into
imul
pop
sub
mov
imul
nop
pop
and
add
sub
mov
retf
mov
cmp
add
inc
inc
adc
xchg
mov
stos
outs
pop
shl
ins
imul
pop
cli
mov
cmp
je
sub
xor
or
mov
or
fild
inc
mov
pusha
sbb
push
popa
cmp
mov
pop
sbb
mov
adc
aaa
sbb
adc
shl
(bad)
xor
ret
(bad)
fst
pushf
fild
(bad)
push
call
push
dec
dec
or
ja
into
jbe
icebp
out
call
pop
out
mov
test
idiv
jns
sti
icebp
jmp
test
lahf
(bad)
(bad)
(bad)
mov
jmp
push
outs
pop
data16
jmp
cld
cmps
into
gs
test
sbb
ror
mov
aam
dec
inc
je
mov
imul
retf
daa
loop
cmps
jecxz
les
push
adc
xchg
mov
fist
or
xor
sub
add
sub
sub
jb
mov
movs
int
hlt
mov
mov
aaa
iret
xchg
push
clc
gs
jae
adc
inc
scas
iret
clc
or
pop
xor
aad
outs
xchg
nop
(bad)
in
nop
jmp
jmp
mov
inc
and
fisub
clc
aam
mov
sub
imul
test
mov
push
imul
adc
aam
mov
cmc
lahf
push
inc
fwait
arpl
push
cwde
int
lods
mov
jg
pop
outs
(bad)
outs
test
in
daa
pop
cmp
hlt
dec
daa
pop
dec
or
inc
ficomp
fnsave
pushf
into
sbb
arpl
xchg
lock
int
scas
repz
mov
loope
cmp
js
push
ds
add
sbb
push
aaa
dec
std
adc
ja
test
pop
xor
pusha
mul
imul
sbb
cmp
push
jge
push
in
mov
push
in
and
test
stos
jecxz
and
push
test
frstor
hlt
cld
xor
xchg
xor
popf
call
dec
pop
pop
popa
(bad)
pop
inc
pop
cmps
pop
xchg
(bad)
jns
out
pop
mov
cmp
xlat
loop
neg
adc
leave
dec
mov
cli
shl
stos
sub
cmp
mov
pop
aam
jge
xchg
mov
push
and
mov
add
(bad)
xchg
sti
ret
dec
inc
cmp
adc
inc
aas
xchg
push
inc
inc
dec
(bad)
xchg
sti
xor
xchg
repnz
push
and
cmp
jno
pop
repnz
mov
loop
ins
push
and
xor
mov
out
dec
idiv
test
jo
sbb
xchg
mov
inc
dec
stc
jle
iret
pop
mov
std
mov
jmp
jbe
xchg
mov
imul
repz
je
xor
popf
stos
add
mov
(bad)
xor
mov
mov
mov
movs
sbb
dec
xchg
push
neg
xchg
pop
xchg
out
dec
push
idiv
test
iret
(bad)
fild
aad
inc
dec
lds
lahf
shl
pop
mov
sbb
cs
adc
cmp
pop
ins
les
adc
inc
cwde
pop
test
pop
push
mov
arpl
and
jne
xchg
loope
and
sbb
loope
inc
adc
fst
les
fstp
gs
dec
ret
les
gs
rcl
ja
shl
nop
dec
movs
in
xchg
mov
mov
shr
cli
xchg
jle
dec
cmp
aaa
popa
xchg
cmp
test
popf
pop
pop
in
sbb
imul
cld
sub
mov
xchg
in
ret
es
mov
adc
xor
sub
cli
cwde
or
(bad)
or
or
and
mov
sub
pop
xor
pop
into
xlat
add
fiadd
mov
or
jno
icebp
das
loope
sbb
scas
pushf
in
inc
pop
or
mov
adc
add
(bad)
cmp
sbb
sbb
mov
add
aad
inc
lods
push
sar
data16
and
(bad)
mov
mov
mov
(bad)
movs
push
outs
xor
xor
xlat
scas
in
fldcw
mov
call
push
loop
inc
add
imul
dec
cmp
movs
test
jmp
(bad)
call
mov
jle
sub
ret
inc
rcr
jle
cdq
cwde
iret
pop
cli
mov
push
jb
cmp
jmp
loopne
cmp
leave
add
adc
jnp
mov
sub
loop
addr16
and
pop
push
sbb
out
xchg
and
das
xchg
mov
mov
cmp
xor
jp
(bad)
cmp
enter
or
sub
dec
xor
nop
jne
test
adc
repz
sub
enter
inc
sbb
(bad)
xlat
mov
xchg
shr
and
sbb
imul
push
lds
js
call
inc
loop
xchg
sub
cmp
pop
mov
cdq
mov
mov
adc
xchg
jmp
fwait
lds
arpl
cmp
mov
fld
out
adc
std
or
lds
ffree
xor
sub
add
movs
and
inc
xchg
mov
cmp
not
xor
call
dec
cld
jl
jb
push
inc
jae
jecxz
and
cld
mov
push
loope
pop
mov
or
dec
dec
xor
in
popa
adc
call
lods
xor
(bad)
sbb
out
in
inc
das
cmps
adc
pop
sub
xor
fs
stos
mov
jp
sbb
xor
div
sub
add
sbb
popf
lock
xchg
and
adc
dec
mov
clc
pop
lea
test
add
pop
sbb
int
ret
mov
cwde
dec
stc
xor
pop
outs
scas
(bad)
out
sub
outs
fs
sub
pop
shr
xlat
mov
in
test
mov
or
xor
scas
add
xchg
and
cwde
lds
mov
mov
inc
jmp
and
mov
mov
sub
xchg
sbb
cmp
push
inc
add
in
mov
jecxz
xlat
sbb
sub
mov
add
loope
mov
movs
sbb
mov
ret
loope
xlat
das
cwde
aaa
imul
push
inc
(bad)
push
bswap
ret
out
adc
add
int3
xchg
and
fscale
mov
out
push
adc
sti
es
xor
xchg
jne
jno
into
add
fwait
xchg
add
xor
(bad)
call
fwait
jmp
scas
rcr
mov
sub
inc
movs
jo
inc
mov
cdq
sbb
outs
jns
ss
idiv
jbe
cld
mov
and
or
inc
mov
clc
jae
pop
int3
jl
push
fsub
jnp
adc
adc
xchg
cmp
adc
scas
in
into
jp
xchg
ins
repnz
or
add
add
scas
pop
test
sbb
lds
clc
into
mov
jl
int3
test
cmps
arpl
das
inc
jp
cmp
dec
dec
and
fild
lea
push
and
stos
inc
xor
push
or
mov
mov
inc
aaa
mov
pop
ret
fdiv
popf
dec
out
mov
adc
mov
aam
jmp
test
pop
fstp
(bad)
lods
cld
pushw
stos
xor
jae
xchg
push
inc
(bad)
call
and
arpl
mov
daa
std
xchg
std
nop
in
cdq
mov
jle
(bad)
mov
lods
jne
jmp
lods
push
loop
push
in
fcmovu
and
pop
add
xcrypt-cbc
cmps
adc
jo
mov
mov
sbb
xor
outs
pop
aam
mov
mov
fs
mov
ret
fs
fidiv
or
push
xor
xor
jp
outs
jge
pop
stos
mov
(bad)
jmp
aas
jb
popf
dec
cmps
(bad)
mov
fisttp
mov
call
xor
xchg
imul
test
push
jmp
loope
imul
xor
inc
push
test
imul
stos
std
lods
adc
adc
jmp
stos
int3
icebp
into
scas
or
jp
mov
or
push
add
or
push
or
jg
jmp
xchg
and
mov
sbb
sbb
mov
lods
xor
jmp
test
iret
mov
loopne
in
push
je
arpl
cmp
ins
cmp
outs
sbb
(bad)
das
xsha256
cmps
adc
ficom
fs
cmp
je
mov
loope
fist
pop
adc
rsm
sub
int
ret
lea
lock
out
push
dec
frstor
jns
adc
retf
into
pop
rol
in
pop
fbstp
iret
and
dec
sahf
call
iret
fsubr
xor
out
rcl
js
xor
dec
outs
jg
rol
jns
cmc
mov
inc
nop
mov
mov
faddp
add
push
nop
pop
into
rcl
pop
jae
adc
das
cmps
dec
mov
or
and
cwde
(bad)
dec
ss
inc
sti
ins
jnp
cmp
outs
cmp
mov
popa
sub
jb
ds
mov
jp
sub
or
push
pushf
jge
pop
mov
fld
jg
mov
fsubrp
mov
fdiv
call
pop
and
(bad)
fdivp
push
call
sub
sar
popa
fpatan
in
lods
sbb
xor
dec
jns
and
lock
or
mov
dec
mov
xchg
inc
cli
push
sbb
pop
cmc
mov
xor
adc
sub
push
clc
fwait
xor
or
cs
test
lds
jnp
inc
push
pusha
dec
xchg
dec
push
dec
push
pop
inc
xor
fild
imul
ret
push
and
push
inc
ins
pop
mov
jbe
mov
pop
div
stc
aaa
adc
jbe
inc
out
(bad)
je
and
adc
mov
int3
jecxz
xchg
jmp
cmp
fsubr
inc
mov
push
out
push
xchg
mov
push
in
cmp
add
push
ins
push
mov
aad
ss
lsl
xchg
pop
add
gs
popa
icebp
push
ret
cld
mov
and
xchg
xchg
enter
jmp
(bad)
(bad)
and
add
rcr
daa
lea
popf
push
adc
dec
mov
out
mov
ja
sub
shr
(bad)
mov
pop
shl
add
cmp
mov
fwait
outs
push
mov
test
xor
pop
clc
sub
nop
push
xchg
(bad)
jns
and
jmp
push
rol
fist
arpl
and
lock
imul
inc
pop
ficomp
icebp
daa
sub
xchg
addr16
loopne
js
jmp
inc
clc
inc
test
cld
les
xor
jecxz
sti
fxch
sub
sub
mov
mov
out
push
jp
cmp
(bad)
std
jae
retf
pushf
cs
popf
mov
and
xor
mov
lods
(bad)
out
mov
addr16
(bad)
push
test
mov
inc
jns
jb
mov
mov
rcr
outs
dec
dec
add
rcr
outs
retf
sti
ret
dec
fwait
sahf
inc
scas
sbb
jns
mov
cmps
xor
add
mov
sahf
outs
push
adc
add
pop
xor
dec
inc
pop
sar
sub
adc
scas
sbb
xchg
pop
(bad)
cmp
in
jp
jne
js
push
sub
addr16
gs
mov
das
fs
sahf
cmps
stc
(bad)
pushf
add
sti
outs
and
dec
hlt
mov
jg
imul
add
jl
cmp
sub
fdivr
sar
sbb
test
cs
sub
test
int3
enter
cmps
sahf
popa
xchg
sub
lods
mov
cmc
sahf
push
mov
jo
push
adc
mov
xchg
jb
call
retf
pop
fsub
push
sub
sahf
xchg
inc
loope
(bad)
outs
cmc
push
jno
popf
dec
mov
gs
pop
dec
pop
and
push
mov
test
and
hlt
and
bnd
(bad)
xor
adc
sub
stos
xchg
xchg
adc
(bad)
pop
data16
lods
cmps
aam
lods
xor
cs
test
cmp
int3
shr
stc
mov
adc
pop
inc
or
sbb
stos
imul
sbb
ja
pusha
add
mov
jp
add
xor
add
mov
sbb
loope
sub
cmp
mov
aas
rol
adc
aaa
retf
cmp
icebp
xchg
ret
mov
xor
(bad)
sahf
sub
fisttp
call
or
imul
xchg
dec
pop
addr16
mov
call
pop
inc
fs
dec
ret
mov
fwait
lea
dec
and
mov
jecxz
fisub
(bad)
lds
lea
fisttp
sub
repz
add
xchg
repz
je
cli
fbstp
push
sbb
or
cld
lds
inc
inc
std
pop
add
add
in
cs
xchg
shl
arpl
out
xor
add
push
cld
ret
dec
ror
inc
mov
sbb
les
jmp
ror
(bad)
outs
sbb
mov
lock
mov
jmp
or
cld
mov
pop
addr16
or
push
jns
jmp
adc
addr16
arpl
cmp
xchg
loopne
mov
test
dec
test
les
xchg
and
test
mov
mov
sbb
call
in
lock
stc
std
dec
adc
jbe
lock
jmp
stc
xchg
xchg
pop
jnp
xor
jge
mov
add
mov
lods
sbb
or
sub
mov
(bad)
popa
retf
adc
out
pop
or
hlt
push
(bad)
std
sub
adc
outs
jmp
ins
sti
inc
push
cmps
outs
mov
add
xchg
imul
and
xor
sub
stos
hlt
dec
jmp
ins
shl
inc
xchg
xlat
movs
xchg
out
jle
fistp
cmp
mov
push
xchg
xchg
and
out
cdq
(bad)
(bad)
mov
add
mov
call
mov
outs
cdq
test
hlt
jmp
xor
inc
outs
das
icebp
enter
mov
jne
lods
xor
inc
mov
neg
dec
xchg
std
adc
and
add
pop
(bad)
sbb
xchg
push
sbb
add
arpl
jbe
ins
xlat
push
or
sbb
retf
div
push
dec
inc
sahf
test
xor
mov
cld
ficom
sar
cmp
mov
push
mov
xor
out
cmps
fisttp
add
in
in
cmp
mov
mov
inc
adc
les
mov
fcom
mov
clc
test
xchg
out
fsub
jnp
(bad)
jmp
mov
dec
enter
ret
sar
cmps
cli
popf
jmp
je
pop
jge
and
inc
mov
out
jmp
push
add
mov
popa
cmp
cmp
jno
xor
adc
jns
int
cmp
out
(bad)
cmp
loop
sti
dec
sbb
lds
inc
xlat
imul
imul
cld
jnp
sub
and
mov
(bad)
sbb
lods
add
add
mov
movs
fidivr
popf
mov
test
add
pextrw
and
movs
push
inc
aam
repz
add
pop
mov
jb
call
js
add
aaa
out
aas
lods
(bad)
int3
cmps
and
cmp
dec
outs
test
inc
xchg
ja
pop
cdq
pop
fwait
mov
test
pop
xchg
and
retf
inc
ins
int3
loopne
test
inc
scas
aam
and
stos
lds
xchg
mul
or
adc
sbb
push
pop
ins
jns
xchg
inc
aam
fs
out
out
mov
xor
adc
outs
lods
pop
cmp
test
xchg
inc
fucomi
inc
lods
rol
mov
jno
addr16
and
fwait
loope
cmp
out
mov
and
sub
dec
pop
pop
test
stos
sub
idiv
jle
jge
pop
arpl
les
pop
mov
mov
jg
das
adc
inc
inc
(bad)
out
test
cdq
addr16
loop
shr
xchg
jo
icebp
and
sbb
push
ins
and
jmp
dec
in
stos
imul
add
ror
jbe
int
jne
stc
ins
fmul
call
jb
fdiv
mov
pop
ror
mov
dec
cs
(bad)
loopne
jg
jmp
push
add
or
xor
dec
les
fsub
lock
push
repnz
mov
aas
sar
retf
(bad)
hlt
lds
push
push
adc
xor
out
lods
scas
aaa
or
add
jmp
mov
sti
movs
icebp
jge
pop
xchg
xor
or
mov
dec
out
cld
mov
movs
in
xor
cmp
mov
mov
repnz
psrlw
adc
adc
inc
aaa
or
pushf
test
pusha
push
inc
add
xchg
mov
xchg
sbb
xlat
out
in
fst
inc
xchg
mov
out
daa
xor
addr16
test
lods
xchg
push
or
call
(bad)
hlt
pop
jo
fild
shl
daa
fwait
mov
mov
pop
sub
les
inc
das
mov
cmps
inc
mov
out
sbb
push
push
call
xchg
pop
in
call
cdq
xor
dec
call
push
mov
scas
aas
in
jge
inc
(bad)
xchg
push
cmp
push
sar
cmp
jmp
dec
lds
scas
add
cmp
add
outs
jmp
mov
mov
inc
lds
out
fstp
jmp
sbb
out
mov
and
loop
pop
sub
shr
jo
fldcw
sub
sub
retf
adc
mov
pop
cmp
loopne
sub
jmp
jmp
addr16
lds
outs
sub
inc
mov
ret
xchg
imul
inc
ret
push
cs
test
je
mov
lahf
push
mov
icebp
cmp
and
or
and
sar
cli
mov
loopne
ins
lds
into
mov
add
dec
adc
pop
xchg
mov
aaa
cmp
mov
jecxz
pop
test
add
fist
div
call
mov
neg
je
xchg
(bad)
or
fld
and
sub
or
rol
test
dec
xor
xchg
test
stos
stc
fadd
xchg
xchg
push
adc
mov
xchg
loop
loope
repnz
or
mov
jo
xchg
xchg
int3
push
shl
sar
sahf
jnp
les
ret
fild
dec
jle
lock
out
xchg
xchg
or
adc
push
fisttp
pop
cdq
mov
out
dec
fsubr
dec
scas
imul
push
ss
cmp
and
jno
or
outs
pop
dec
mov
in
icebp
cmp
mov
xchg
mov
pop
(bad)
in
imul
sahf
es
mov
mov
fpatan
sub
repz
mov
push
cmp
mov
fstp
mov
push
sub
ror
add
stc
icebp
jmp
xchg
mov
mov
es
fnstsw
mov
mov
inc
jae
in
dec
nop
mov
and
sub
fstp
mov
jns
mov
sti
cwde
or
das
(bad)
cld
div
rcr
mov
imul
xchg
std
(bad)
cmp
stos
push
mov
inc
dec
jb
popf
jle
sti
int
rcr
jbe
dec
cmp
xchg
xchg
lahf
inc
dec
pop
or
jnp
sahf
int
movs
xlat
lods
jmp
dec
push
cmp
popa
out
jmp
sar
fnsave
clc
shl
in
xchg
mov
mov
aad
pop
xchg
add
or
test
ret
scas
cmp
je
mov
aam
pop
cmc
mov
mov
nop
mov
and
loope
popa
cmp
iret
cli
xchg
inc
fwait
test
fisttp
xchg
xchg
xchg
enter
mov
(bad)
and
rcl
and
xor
fstp
adc
je
push
jl
mov
aas
push
mov
jbe
push
jmp
cs
or
push
nop
stc
js
cmps
out
movs
or
aas
jnp
dec
and
ds
lahf
cs
cmp
call
push
adc
push
pop
scas
scas
pop
inc
or
push
fstp
shr
jg
pop
push
enter
add
add
test
add
enter
push
ss
xor
cmp
cmc
push
jno
jae
shr
pmaxsw
std
div
mov
fcomip
cmp
dec
jne
mov
xor
or
xchg
daa
jmp
(bad)
int3
mov
loopne
push
push
add
scas
retf
adc
cmp
call
adc
pop
mov
add
call
mov
pop
cmp
mov
adc
push
xor
cmc
and
mov
jae
dec
xchg
pushf
lea
icebp
xor
sahf
ins
pop
imul
mov
repnz
inc
pop
cmp
add
xor
jle
and
or
xchg
mov
sub
fldcw
jnp
sbb
jno
fidivr
lods
retf
cs
xor
push
inc
jmp
ror
cld
and
pop
jmp
sti
aas
jle
pop
push
inc
inc
push
pop
sahf
and
fwait
dec
out
and
mov
fild
add
mov
mov
cmp
mov
xor
lahf
ss
push
bound
dec
sti
and
mov
sbb
sbb
adc
add
sahf
lock
jo
sti
mov
xor
cmp
ret
xor
lahf
adc
sbb
retf
std
mov
mov
add
jne
in
mov
mov
mov
into
jb
outs
xor
(bad)
add
aaa
cdq
cli
ds
test
push
arpl
sahf
cmp
pop
and
sbb
fistp
out
push
(bad)
out
(bad)
or
cmp
scas
bound
fadd
stos
bound
sbb
rcr
mov
test
mov
cmp
std
push
aas
shr
xchg
adc
jmp
(bad)
out
aaa
pop
cmps
and
sub
pop
imul
bound
mov
stos
ja
xchg
lods
popa
xor
mov
into
add
test
xchg
je
in
in
bound
push
mov
js
and
les
pop
(bad)
jns
or
sbb
into
imul
pop
into
std
cs
movs
mov
push
pusha
jb
js
mov
mov
loop
and
sar
pop
fistp
mov
(bad)
cwde
lahf
mov
loope
pop
(bad)
cmp
sbb
cmps
mov
fcmovnu
cmp
test
mov
fs
test
jg
dec
lahf
xchg
mov
rcl
fstp
adc
and
inc
push
daa
ins
std
add
pop
jae
mov
xchg
in
test
out
add
pusha
jae
cld
rcl
call
retf
mov
mov
and
loope
jl
jl
out
jae
mov
popa
jp
popa
aam
(bad)
sub
mov
imul
ins
push
or
add
push
rcl
cdq
push
repnz
mov
repnz
clc
inc
inc
inc
js
les
mov
movs
arpl
loope
icebp
dec
push
ret
xchg
adc
enter
cmp
add
ja
lds
fwait
popf
fs
inc
leave
adc
mov
add
loope
data16
in
cmc
loopne
cld
jmp
scas
call
push
stc
sbb
clc
pop
ds
sub
popf
xor
sbb
inc
fcomp
pop
cdq
inc
sub
jo
or
lahf
sbb
(bad)
pop
test
popf
int
sub
(bad)
in
movs
jmp
dec
clc
push
mov
cmp
jns
push
dec
xchg
adc
lock
lods
retf
scas
add
dec
mov
aas
mov
test
jb
xchg
jp
push
mov
and
adc
std
fwait
or
gs
data16
xlat
gs
repz
test
in
cmc
ins
or
enter
fwait
out
or
dec
jg
mov
push
push
add
mov
adc
dec
jp
int
xchg
sbb
imul
lds
jmp
push
hlt
repz
pop
cld
mov
xor
rcr
xchg
sub
test
shl
mov
and
repz
mov
scas
push
jp
ins
pop
std
mov
mov
test
and
int3
jns
rcr
xlat
xor
and
sbb
outs
aaa
jnp
xor
push
jecxz
xchg
mov
test
mov
cmp
add
cmp
sbb
sbb
fwait
mov
test
add
jecxz
add
rcr
fwait
or
icebp
jmp
out
add
add
aas
inc
ss
das
fld
xchg
push
iret
cmp
xchg
fstp
push
xchg
fldenv
retf
ins
mov
mov
mov
shr
cmps
cli
inc
jg
fdivr
pop
adc
sar
pusha
sub
jmp
dec
test
and
sbb
push
xor
adc
int
xchg
jle
xchg
lahf
xor
pop
mov
push
hlt
je
jb
cmp
dec
adc
fadd
(bad)
call
and
mov
and
mov
lahf
mov
cmc
popf
push
punpcklwd
adc
inc
mov
push
sbb
mov
xor
je
sub
mov
and
sar
sahf
sub
pop
fwait
neg
xor
sbb
sub
or
dec
sahf
ds
repnz
mov
int
fwait
pop
mov
sbb
push
push
xchg
loope
rcl
dec
push
xor
dec
jbe
mov
retf
pop
iret
shl
les
adc
(bad)
mov
jp
movs
retf
pop
enter
xor
rcr
add
xor
scas
mov
and
sub
mov
jbe
(bad)
adc
repz
stc
add
sti
dec
jb
mov
iret
mov
mov
nop
(bad)
loopne
(bad)
aad
pop
xor
stc
(bad)
out
xor
add
call
test
das
ins
enter
pusha
in
hlt
pop
ret
or
lahf
(bad)
jp
shl
daa
imul
xchg
mov
iret
push
fcom
sbb
jp
std
xor
cmc
jg
xor
daa
sbb
and
pop
xchg
mov
mov
pop
cld
hlt
sub
rcr
lea
popf
or
jae
arpl
add
push
pop
add
and
not
iret
sub
shr
outs
adc
cmp
arpl
ja
scas
in
xor
sbb
(bad)
in
cs
jl
add
mov
out
mov
push
adc
mov
arpl
test
pop
jle
mov
call
mulps
and
in
fs
mov
add
sar
push
inc
in
mov
js
movs
adc
push
mov
xchg
movs
xor
sbb
fild
std
mov
adc
xchg
dec
aas
mov
mov
ficomp
loop
call
fbstp
sbb
aam
inc
mov
jmp
lea
movs
jmp
push
xor
mov
lds
mov
das
(bad)
push
pop
aas
into
xor
data16
loop
ds
ja
pop
pop
cmp
jo
jmp
lods
mov
jo
gs
adc
jle
xchg
inc
mov
sub
sub
dec
xor
pop
mov
sub
push
dec
retf
sub
and
add
pop
sbb
out
stc
xor
xchg
je
loop
add
mov
dec
jmp
pop
xor
pop
jb
cdq
neg
dec
iret
sub
fadd
dec
cmc
rcl
jge
call
nop
add
xor
mov
jmp
add
mov
adc
dec
xchg
sbb
aad
cmc
inc
adc
gs
bound
(bad)
cmp
popa
sbb
inc
inc
push
inc
mov
leave
or
test
outs
add
mov
mov
mov
adc
mov
cmps
mov
(bad)
frstor
jno
jmp
mov
pop
jmp
push
adc
sti
pop
inc
sub
fwait
inc
mov
data16
xchg
add
ins
arpl
enter
mov
clc
adc
xchg
or
shl
and
es
cmp
pop
jnp
and
pop
sbb
dec
jp
(bad)
lahf
cmp
jne
lods
cli
shl
xchg
jge
fwait
lds
pop
sub
repnz
std
mov
ins
pop
cmp
adc
pushf
dec
sub
(bad)
gs
push
arpl
push
call
sub
aam
pop
nop
jg
mov
mov
and
xor
and
and
fxch
test
popf
ds
sbb
xor
sbb
in
std
sti
xchg
imul
std
imul
jmp
xor
dec
dec
addr16
in
push
stos
mov
or
outs
sub
mov
in
xlat
dec
xor
call
adc
ds
std
adc
jnp
(bad)
dec
pop
fst
leave
mov
sbb
into
ror
add
cmp
int3
je
mov
jl
jb
dec
and
mov
ror
das
mov
out
dec
popf
cwde
mov
push
lds
jmp
mov
das
cmp
std
mov
sub
je
pop
ret
dec
xchg
ret
(bad)
jbe
jae
ss
add
adc
test
lock
test
shl
enter
stos
and
xchg
mov
loope
push
(bad)
adc
push
aaa
(bad)
sbb
dec
imul
cmp
sub
call
loope
xchg
xor
add
push
sahf
inc
(bad)
pop
fwait
push
iret
cdq
sbb
dec
and
call
or
inc
idiv
pop
nop
mov
and
cmp
inc
adc
inc
ds
fwait
pusha
inc
inc
not
sbb
repnz
cmp
xchg
jae
sbb
dec
gs
int
adc
pop
pusha
mov
lahf
fs
jb
adc
(bad)
fs
retf
movs
call
test
fiadd
fcom
scas
or
mov
mov
lahf
mov
retf
adc
mov
icebp
mov
push
inc
or
xchg
xor
fidivr
mov
es
push
shrd
jmp
stc
aad
mov
mov
sub
out
mov
xchg
inc
or
sub
dec
je
or
leave
sbb
mov
pop
in
int
add
add
not
lea
lods
fmulp
les
jno
cmp
sar
jmp
jbe
ds
popf
mov
sbb
popf
mov
jl
daa
add
cmp
rol
push
xchg
adc
cmps
lods
icebp
into
jo
fbstp
pop
repz
jne
(bad)
pop
pop
xor
push
arpl
jns
sbb
or
xchg
xor
scas
xor
adc
xor
in
scas
das
inc
fstp
jp
aam
stos
aas
inc
(bad)
jno
scas
fbld
out
ins
leave
or
cli
cwde
sbb
mov
imul
xchg
xor
jnp
xchg
es
int
inc
loope
dec
cdq
or
push
or
add
retf
jmp
fistp
hlt
ret
sub
dec
es
(bad)
pop
mov
clc
movs
push
(bad)
xor
pop
fsubr
xchg
int
mov
pop
ret
xchg
push
(bad)
icebp
adc
rcl
sbb
xor
and
push
inc
or
push
adc
aaa
in
sub
jnp
push
addr16
neg
rcl
popf
add
push
loopne
or
nop
xor
pop
cmp
je
sub
cmc
sub
and
sahf
sbb
jo
dec
in
lahf
ja
inc
sbb
xor
movs
sub
jp
sbb
je
adc
inc
sub
add
jno
repz
loopne
movs
scas
in
test
clc
xchg
jecxz
or
addr16
das
jl
xor
sbb
fsub
test
test
add
lahf
sub
hlt
mov
cwd
fmul
jb
cld
sub
xor
icebp
sub
inc
ins
call
xor
or
sbb
mov
jns
shl
xchg
jae
jns
xor
test
push
pop
xchg
fdivr
outs
sahf
dec
fidiv
xchg
inc
stos
dec
out
add
(bad)
loopne
adc
mov
ja
sub
fiadd
push
lea
repz
loope
jo
xchg
cmp
xor
(bad)
(bad)
rcl
pop
dec
mov
xor
outs
mov
jmp
push
or
add
aam
cs
sbb
aaa
jecxz
jno
cld
mov
dec
or
rcr
cmps
test
ins
fsubrp
outs
je
ins
push
mov
dec
jne
dec
mov
aaa
(bad)
xor
jmp
xchg
(bad)
shl
push
aaa
add
push
fsubr
push
int
inc
and
call
mov
xchg
mov
xor
gs
aad
es
sbb
push
inc
stos
imul
ret
jl
xor
fimul
jnp
and
dec
jbe
xchg
xor
sub
sbb
xchg
mov
adc
lock
aad
pop
sub
ins
pop
jle
imul
sbb
or
push
jno
jno
sbb
cmps
out
push
out
sub
cmp
das
jp
pop
adc
inc
imul
rcl
in
call
jo
mov
test
stc
int3
pop
mov
popf
jns
(bad)
or
inc
inc
inc
repz
lea
imul
push
pop
push
inc
scas
sub
pop
mov
and
cli
es
sti
sub
sti
aam
push
adc
xchg
in
faddp
jmp
or
popa
imul
sub
sub
xchg
mov
mov
mov
daa
std
pop
jmp
es
mov
ficom
or
jns
xor
mov
inc
rol
test
push
cs
adc
retf
cli
leave
mov
fnstenv
mov
fwait
sti
pop
scas
call
pop
ror
mov
xor
dec
imul
and
in
or
cdq
sbb
gs
sub
fidiv
add
dec
jae
xor
into
rcr
fild
fsubr
cmps
pop
xor
push
pop
retf
daa
jp
adc
push
sub
sbb
adc
xlat
sbb
not
push
dec
push
pusha
xor
int3
(bad)
jmp
pushf
fsubr
and
jg
jg
xchg
ins
and
xor
mov
iret
(bad)
ins
mov
aas
fs
dec
jle
mov
mov
sub
cmp
lea
mov
out
jmp
sub
or
fldcw
pop
sbb
cmp
stos
cmps
mov
and
stos
mov
movs
leave
fs
or
sbb
pop
loopne
jmp
(bad)
adc
sar
mov
push
shr
and
arpl
pop
jmp
xchg
shl
dec
int
xchg
repnz
sbb
shl
push
std
jmp
sbb
pop
sbb
out
imul
data16
bnd
cmp
inc
and
fadd
dec
ret
mov
cld
jb
sub
call
and
xchg
in
or
dec
(bad)
pop
xchg
jno
fst
and
cmp
aaa
sub
dec
jecxz
inc
repnz
pop
js
dec
pop
pop
mov
pop
mov
pop
ins
out
dec
enter
cmp
loope
das
(bad)
push
ds
and
stos
add
push
sbb
adc
mov
xlat
popa
(bad)
push
repz
out
push
retf
sbb
stc
scas
lahf
cmp
dec
inc
cmps
pop
mov
loop
push
leave
bound
cmc
retf
daa
mov
lods
xor
inc
pushw
aam
cmp
jmp
pop
xchg
gs
jb
call
jne
sbb
ror
jg
xor
xchg
and
std
sar
aam
jl
mov
pop
in
shr
dec
push
mov
sti
xchg
out
jnp
fst
loopne
icebp
xchg
push
mov
jae
xor
push
loopne
in
push
cmp
add
div
push
jo
pushf
jmp
fisubr
add
push
je
xchg
test
es
fdivr
sub
pushf
dec
inc
sub
sbb
pop
scas
and
inc
add
push
mov
(bad)
fmul
xchg
lahf
xor
mov
cmps
rcr
int3
inc
ffree
fsubr
inc
push
aam
ror
scas
aaa
or
xchg
fcmovu
mov
addr16
cmps
outs
pop
popf
jecxz
inc
fcom
popf
std
adc
sub
sar
and
int
repnz
adc
xor
stc
cmps
push
ss
(bad)
clc
dec
add
inc
je
call
push
out
es
xchg
repz
push
push
sahf
stc
sbb
out
xchg
sub
mov
adc
cmp
and
jmp
pop
retf
cmp
ja
mov
push
adc
cli
in
jo
xor
(bad)
sbb
ds
stos
cld
mov
mov
and
mov
sub
pop
lea
sub
pop
sbb
sbb
push
xor
cmp
arpl
adc
fwait
leave
adc
rcl
aad
call
mov
lds
or
mov
loope
add
push
inc
mov
movs
dec
add
mov
jle
cli
xor
les
retf
jmp
iret
inc
xchg
sbb
pushf
dec
fstp
gs
sti
or
dec
push
xchg
add
aas
aas
sbb
jae
outs
pop
out
jl
cwde
pop
mov
dec
neg
adc
xor
inc
mov
leave
add
push
lods
sub
and
and
sbb
leave
sub
(bad)
sub
jns
sbb
mov
or
ja
(bad)
push
fbld
cmp
rol
stc
adc
mov
div
shr
sub
cdq
jp
adc
sub
dec
sub
and
add
push
dec
(bad)
add
cmovs
stos
jno
sub
jle
ror
ret
push
iret
mov
jo
add
arpl
fucomi
mul
and
xchg
in
jp
mov
pop
cwde
or
mov
(bad)
in
mov
pop
add
mov
or
sub
nop
sub
mov
das
mov
scas
mov
test
xchg
and
popf
fs
out
dec
sbb
pop
push
sub
ds
sub
cwde
js
dec
or
sbb
stc
and
in
xor
icebp
nop
and
cmp
(bad)
pop
adc
dec
mov
in
enter
rcr
inc
bound
cmc
add
test
or
inc
outs
jbe
jae
shl
js
inc
enter
adc
jmp
out
jmp
test
xchg
pop
ins
cmp
mov
psubsw
and
test
(bad)
mov
cmp
xor
in
out
clc
lds
pop
ffree
jns
inc
pop
fisub
xor
push
fdivr
xor
sbb
inc
xchg
aas
push
stos
imul
pusha
add
scas
push
pop
or
jl
jmp
popf
adc
push
rcr
fadd
loop
pop
stos
fiadd
outs
pop
outs
push
or
ins
test
adc
int3
icebp
xchg
lods
add
adc
push
cmc
and
(bad)
push
jno
jl
outs
xchg
dec
push
sbb
(bad)
mov
call
jge
test
icebp
xchg
ret
cmp
aas
push
cli
addr16
jecxz
leave
loopne
lods
call
jae
pop
sub
xor
cwde
or
in
mov
or
rol
push
call
add
xchg
ror
xor
mov
sub
(bad)
or
dec
jp
vcvttps2dq
mov
lods
cmps
sbb
cmp
out
xchg
mov
cmp
push
dec
sar
ja
inc
and
sbb
cld
pop
pop
out
(bad)
fnstenv
leave
mov
nop
shl
pop
(bad)
fnstenv
fnstenv
sbb
sub
add
test
adc
add
or
iret
dec
cmps
ins
js
std
push
mov
push
call
dec
dec
jbe
ins
imul
xlat
mov
jmp
inc
popf
into
cmps
mov
std
dec
pop
dec
(bad)
jp
fwait
push
loope
sbb
add
cmps
and
pop
add
mov
shr
sub
mov
aad
retf
push
icebp
aaa
mov
xor
or
in
fisttp
mov
mov
and
cmp
mov
xchg
dec
rcr
push
sub
mov
add
int
int
adc
stos
xor
push
mov
mov
mov
jae
adc
popf
std
dec
adc
jp
pushf
inc
mov
repz
fs
cmp
fbstp
dec
dec
es
fdivr
xchg
call
in
and
stc
std
push
inc
add
or
daa
push
cmps
jb
xor
add
push
jmp
pop
adc
lahf
inc
push
xchg
cdq
repnz
js
jo
popf
cld
add
ins
xchg
(bad)
push
add
sbb
cmp
test
aas
push
stc
std
int3
add
int3
and
mov
out
fmul
clc
inc
push
fucomip
test
jno
je
push
hlt
lods
std
xor
push
and
neg
test
cmc
(bad)
jo
dec
and
repnz
mov
jno
xchg
sub
and
test
fst
adc
sub
push
jmp
push
inc
cdq
int
nop
(bad)
jl
jb
push
ss
gs
js
or
inc
xor
bound
ror
je
out
dec
ficomp
in
movs
mov
mov
push
mov
imul
in
sub
push
jmp
dec
and
out
lods
sbb
iret
pop
push
mov
mov
jge
je
jno
adc
aam
ss
(bad)
push
xchg
dec
add
movs
out
shl
cld
cwde
cmp
movs
xor
and
fild
mov
cmp
std
imul
mov
retf
pop
aad
in
cmp
or
mov
add
mov
adc
lock
(bad)
pusha
jae
scas
sbb
dec
ret
pop
dec
aaa
es
adc
xor
pop
je
pop
sahf
jg
sbb
shl
out
int3
sbb
push
add
ins
daa
sub
retf
xor
sahf
icebp
rcl
mov
jnp
test
and
dec
icebp
lahf
in
shr
sti
stc
pop
outs
imul
push
(bad)
push
jle
ret
call
sub
ss
xchg
pop
cmc
dec
cld
leave
push
cmp
mov
mov
sub
fidiv
and
(bad)
jmp
and
rol
or
fs
push
adc
les
das
ret
xchg
jle
push
in
pusha
push
xchg
in
sahf
int
adc
iret
push
fwait
cmp
ins
stos
clc
jmp
dec
idiv
repnz
mov
scas
arpl
retf
loopne
pushf
in
dec
ins
ftst
sub
stos
loope
jmp
lds
bound
mov
inc
pop
jbe
(bad)
push
adc
and
jge
mov
adc
sbb
cmp
mov
in
mov
(bad)
bound
outs
retf
pushf
(bad)
mov
jnp
test
inc
xchg
aas
jb
out
add
pop
fadd
mov
daa
ds
and
xchg
and
and
nop
es
mov
daa
push
lds
scas
jge
and
push
and
pusha
pop
dec
and
out
inc
cmp
sti
pop
and
mov
push
sbb
push
jae
push
repz
dec
cs
jmp
xor
call
fisubr
ret
pop
dec
shr
aam
outs
xchg
mov
xchg
cmps
frstor
gs
mov
addr16
dec
inc
and
sbb
lods
loope
xchg
dec
dec
xchg
into
ins
loopne
sub
dec
mov
out
stos
sub
adc
enter
xlat
mov
ffreep
jns
inc
in
jp
xchg
xchg
adc
call
fild
push
mov
pop
cmp
push
cmps
daa
add
jnp
push
or
xchg
mov
aam
pop
lods
push
movs
sti
sub
fisttp
fdivr
or
add
dec
imul
call
xor
and
sub
leave
adc
push
js
fist
xor
xor
cmp
xor
les
leave
aam
gs
xor
xchg
dec
fldenv
pop
jl
or
cdq
call
cmc
cmps
mov
mov
inc
xchg
dec
nop
lods
ds
adc
jb
sti
sbb
loope
jbe
mov
or
sbb
test
jne
pop
dec
mov
add
js
sub
cmp
xchg
xor
dec
cmps
jbe
inc
stc
in
dec
cmp
mov
jmp
(bad)
outs
inc
mov
xchg
sbb
jge
xchg
pop
pop
xor
retf
jns
imul
pusha
push
addr16
push
inc
xor
adc
fs
lock
sti
cmc
cmc
bound
mov
out
jmp
xor
mov
jp
mov
xchg
lods
pop
mov
mov
xchg
push
out
jl
lds
mov
inc
or
jmp
dec
jge
stc
in
add
mov
push
sub
dec
mov
mov
adc
pop
je
data16
bnd
fmul
mov
cdq
jns
mov
loope
push
mov
leave
movs
xchg
inc
adc
jbe
bound
pop
mov
xchg
movs
inc
cmc
jae
jnp
out
scas
jmp
sbb
cli
ins
fnstsw
aam
sti
xor
and
mov
and
movs
pop
data16
call
adc
outs
les
cmp
ret
ror
mov
call
add
lock
sub
icebp
and
arpl
ins
push
cmp
aas
push
or
neg
mov
jg
add
or
cdq
mov
mov
mov
pushf
sbb
(bad)
mov
(bad)
gs
in
add
mul
xchg
push
lds
push
xlat
xchg
fnstsw
xor
sub
dec
and
aad
addr16
(bad)
xchg
das
dec
stos
test
outs
sbb
nop
dec
add
out
icebp
jae
mov
add
sub
repnz
adc
jbe
push
lods
ins
cmp
cmp
cmp
push
dec
sbb
jg
aaa
mov
inc
push
mov
test
and
ret
and
in
ss
lock
loopne
or
mov
fcom
adc
je
das
mov
popf
cmp
push
or
out
xor
pop
in
xchg
stos
daa
ror
xor
cmp
(bad)
nop
mov
je
cmp
dec
fcom
sub
sbb
xchg
fcom
sbb
mov
mov
xchg
icebp
mov
push
loop
cmp
test
adc
fstp
aaa
mov
inc
loopne
cld
or
cld
shr
(bad)
(bad)
out
adc
cmps
dec
test
xlat
jns
in
pop
fcomp
inc
xlat
sbb
aas
sar
jb
push
ret
pop
aad
dec
call
cli
fwait
ror
stc
sub
sbb
cmc
xlat
test
test
mov
pop
push
clc
dec
jmp
pop
push
das
pop
aad
scas
scas
movzx
mov
ret
xchg
xor
fisubr
(bad)
fsubr
mov
jns
lods
jmp
int
in
sub
xchg
mov
push
test
lds
int3
inc
cdq
gs
cwde
jge
neg
dec
retf
cmps
or
pop
add
add
stos
jns
inc
(bad)
fadd
adc
fstp
pop
dec
mov
inc
aaa
stos
imul
push
and
fwait
(bad)
iret
adc
test
adc
push
mov
xor
stc
inc
push
sub
sar
or
add
xchg
mov
mov
pop
xchg
push
loopne
sbb
ds
imul
aad
inc
cmp
fnstcw
adc
enter
inc
pop
sbb
add
dec
push
ins
lods
addr16
mov
xchg
push
fwait
mov
stos
mov
into
pop
gs
icebp
movs
std
sub
arpl
hlt
test
sbb
retf
dec
stc
das
out
jb
xchg
out
aad
mov
sbb
cdq
sbb
inc
or
xor
inc
xchg
arpl
ret
out
push
inc
cli
xchg
test
imul
loop
shr
xor
out
push
call
pop
add
sub
jge
pushf
pop
xchg
and
idiv
xchg
inc
push
xor
cmps
(bad)
(bad)
or
ret
dec
pop
adc
out
jne
fwait
in
mov
(bad)
inc
movs
dec
ins
adc
jp
movs
jae
jb
int
call
mov
je
pop
xor
pop
cmp
sbb
mov
or
push
push
sub
out
vdivps
out
adc
pusha
aad
scas
cmp
les
adc
and
hlt
pop
fsub
not
add
lock
mov
shl
adc
test
dec
jbe
dec
in
or
scas
cwde
test
aaa
cmp
sbb
and
lods
or
sbb
mov
mov
pop
movs
nop
add
mov
repnz
imul
cmps
lods
(bad)
neg
push
mov
dec
mov
mov
xchg
cmp
sbb
ds
xchg
imul
neg
fmul
(bad)
(bad)
jb
adc
repz
mov
(bad)
into
sbb
add
and
test
xchg
xchg
ins
das
enter
inc
add
rol
cmp
enter
in
xlat
dec
sbb
outs
inc
mov
mov
add
mov
mov
and
mov
je
fild
test
adc
int
add
push
add
out
clc
popa
test
xor
pop
jbe
jecxz
ins
cdq
not
out
xchg
sbb
scas
mov
xchg
inc
mov
xor
nop
mov
arpl
pop
outs
sub
jno
add
push
cld
push
jl
xor
add
jb
mov
inc
inc
arpl
inc
push
ins
sub
jae
sub
sub
aas
pushf
sti
cs
mov
sbb
dec
movs
icebp
js
jl
sahf
pop
lods
sbb
xor
adc
push
cld
scas
mov
add
pxor
or
fstp
aad
xor
sti
fisub
dec
mov
sub
adc
inc
fwait
jge
pop
mov
movs
push
data16
adc
aad
popf
dec
or
sbb
xor
loope
add
and
lds
add
jg
xchg
out
xor
scas
sub
fmul
mov
clc
out
jnp
push
div
pop
add
or
in
ins
fist
jns
imul
jg
push
dec
xchg
and
nop
adc
push
push
out
or
outs
mov
and
adc
repz
mov
add
push
and
cmc
adc
or
ds
aad
call
and
cli
xchg
add
adc
sub
shr
je
dec
mov
push
mov
mov
sub
lahf
mov
stos
inc
outs
xor
add
or
xchg
pop
xchg
mov
pop
jmp
out
dec
cmp
xchg
aas
(bad)
push
int
cmps
jno
mov
push
cs
push
inc
cmp
lds
mov
fisttp
xchg
push
(bad)
or
shl
dec
sub
mov
std
or
dec
stc
movs
(bad)
mov
jmp
or
lds
loopne
jb
sbb
inc
xor
loope
and
mov
hlt
jg
xchg
mov
pop
and
arpl
stos
sbb
push
pop
sub
(bad)
push
adc
gs
hlt
or
int
sbb
adc
into
jl
mov
jmp
out
jmp
imul
push
inc
idiv
test
jns
cmp
mov
jmp
push
jl
sub
into
iret
add
sub
mov
mov
mov
xchg
(bad)
sbb
and
in
fld
cmp
cmp
(bad)
movs
lods
rol
les
jp
sbb
push
jb
add
mov
(bad)
sbb
mov
ds
adc
fsub
mov
mov
sbb
stc
mov
in
nop
ret
mov
aaa
aas
cmp
and
fsub
mov
test
push
out
jo
add
fld
daa
lds
or
add
and
ss
sub
lahf
test
cdq
sti
dec
movs
iret
inc
jmp
dec
mov
pop
repz
push
mov
pop
adc
pop
fs
sbb
fsub
xchg
dec
inc
and
outs
lahf
emms
or
out
push
mov
or
aas
not
(bad)
(bad)
jecxz
mov
xchg
xchg
pop
jo
dec
and
sbb
cwde
pushf
(bad)
es
add
mov
mov
xor
mov
pop
ja
pop
cmp
xchg
fisub
dec
fldcw
inc
sbb
test
retf
mov
int3
jne
pop
add
out
imul
in
sbb
in
ret
pop
xor
jle
or
push
push
div
pop
mov
inc
cmp
mov
movs
cmovne
jnp
push
push
retf
retf
mov
in
or
pop
repnz
bound
jge
add
inc
add
lods
call
and
icebp
rol
(bad)
xchg
popf
loopne
out
sbb
mov
sbb
and
jecxz
stos
mov
loope
push
out
sub
jl
in
push
les
mov
xchg
dec
sub
aas
call
sbb
scas
addr16
mov
and
xchg
enter
sub
cli
add
inc
loop
inc
(bad)
(bad)
push
fldenv
add
dec
das
pop
push
cmps
jne
test
push
or
push
les
iret
or
imul
sub
or
retf
xchg
movs
stos
sub
jecxz
push
push
iret
hlt
std
aad
movsx
jl
mov
mov
js
pop
lds
add
cmps
sub
rcl
jmp
inc
lahf
je
cld
into
push
jmp
popf
xor
std
inc
mov
cwde
push
in
bound
rol
and
sbb
movs
inc
lods
data16
imul
pop
sbb
sub
adc
jge
in
jno
aam
inc
mov
cli
jns
sub
sub
add
and
xor
fdiv
shr
jge
ss
cmps
pop
(bad)
popa
js
xor
jmp
and
cdq
leave
ds
dec
or
sbb
popf
push
in
or
dec
lock
shr
js
jmp
repnz
sub
pop
cmp
sbb
repnz
(bad)
leave
dec
pop
in
and
xchg
test
xor
ja
cmp
push
or
sub
or
out
jne
jnp
repz
jnp
clc
sub
loop
pop
xchg
cmps
sbb
add
push
dec
nop
dec
push
pop
rcr
jge
xchg
shl
cmp
loopne
or
iret
push
mov
lock
xlat
mov
pop
sbb
add
jle
mov
jg
mov
fwait
(bad)
sti
or
pop
sub
enter
dec
fisttp
popa
and
ret
iret
les
test
pop
nop
inc
push
mov
sahf
imul
push
dec
sbb
xor
xlat
or
sbb
shr
sub
or
fcom
gs
jns
and
or
cs
loop
push
shl
bound
imul
hlt
jnp
add
(bad)
push
popa
sti
outs
scas
jecxz
pop
and
cmps
out
push
xchg
or
sub
loope
sub
cmp
(bad)
cmp
rol
enter
adc
mov
xchg
pop
jno
fist
outs
pop
js
pop
retf
(bad)
pop
cwde
mov
cmps
aam
not
or
mov
mov
add
mov
lahf
and
stos
int3
inc
iret
sub
push
add
loopne
dec
add
outs
int3
mov
xchg
or
lods
cmp
mov
pusha
aad
adc
dec
ficom
xor
cmp
mov
dec
cmp
pusha
jns
add
and
push
in
cmp
test
sub
dec
cmp
add
lea
xchg
adc
inc
pop
in
xor
fidivr
je
sbb
xchg
jmp
jbe
cmps
fistp
cmps
addr16
xchg
cmps
mov
push
and
xor
pop
js
outs
arpl
or
out
je
das
clc
push
dec
jne
adc
or
push
addr16
inc
jg
jmp
adc
or
mov
ins
je
int3
(bad)
jns
pop
out
dec
mov
cmp
jb
dec
jno
cs
out
push
nop
pop
in
jg
aaa
mov
cmp
sub
int3
mov
jle
arpl
jmp
push
sub
mov
clc
rol
xchg
or
outs
adc
jmp
mov
jne
xchg
test
dec
movs
xchg
inc
movs
mov
pop
sar
pop
mov
fst
jbe
daa
rcl
mov
(bad)
dec
dec
sbb
aam
cmp
pushf
popa
mov
inc
popf
adc
sbb
xchg
sub
ficomp
adc
sbb
cmp
or
mov
call
ins
cwde
cmps
stos
inc
mov
test
fsub
ins
or
inc
popa
ret
xchg
and
adc
pop
cmps
jae
mov
lds
popa
jecxz
jo
and
out
aas
stc
ror
jo
mov
fisub
mov
dec
nop
es
movs
mov
jno
inc
scas
dec
mov
inc
mov
iret
adc
std
pop
push
push
xor
xchg
sahf
or
sbb
arpl
popa
stc
jmp
sub
cmp
inc
loopne
cmp
in
mov
xchg
aas
cmps
xchg
dec
retf
mov
ins
imul
push
lock
outs
jnp
push
jmp
ror
sub
jnp
push
addr16
pop
rep
int
mov
test
add
pop
loope
push
js
mov
or
cmp
inc
loope
aad
inc
out
out
retf
mov
leave
dec
shl
movs
int
cmp
and
stos
cmp
mov
imul
jns
jns
cmc
icebp
mov
push
rol
jmp
sahf
jns
int3
fbstp
add
imul
jmp
fs
lds
test
add
cmp
mov
ret
xchg
and
mov
sbb
sub
call
(bad)
jns
mov
xor
push
dec
xor
pop
int3
ror
call
into
les
into
(bad)
sar
mov
(bad)
mov
mov
in
rcl
mov
or
xor
sar
icebp
dec
rcl
loop
and
lods
in
sti
or
and
jnp
mov
dec
push
pop
ror
es
scas
sti
(bad)
dec
and
dec
jle
cs
dec
lea
lock
dec
lods
ret
cmps
push
movs
fist
out
mov
and
mov
mov
mov
mov
adc
or
repnz
popa
push
sahf
pop
cwde
mov
xchg
sbb
inc
add
sbb
adc
sbb
ins
je
and
retf
add
jo
mov
hlt
mov
out
sub
stos
rcl
arpl
pop
push
cdq
lods
xchg
(bad)
xchg
jbe
outs
add
mov
icebp
pop
xchg
aad
clc
xor
and
sbb
popa
ret
lods
fnstcw
jp
mov
or
imul
icebp
or
lods
xor
enter
dec
dec
arpl
cdq
sbb
cmp
jmp
and
or
pop
in
xor
xor
fbld
fst
cmc
add
ins
scas
lds
adc
push
mov
sbb
add
push
mov
out
aas
pop
nop
cmp
jg
push
(bad)
jmp
loopne
sub
mov
pop
fimul
xchg
out
out
arpl
retf
in
daa
inc
sbb
push
cmps
xchg
xchg
jb
not
adc
fild
stc
cmp
mov
stos
icebp
or
push
cmp
push
femms
xchg
aam
jg
jl
ret
ins
test
dec
lods
inc
or
adc
mov
sub
int
sub
out
jns
into
mov
jl
(bad)
call
adc
(bad)
sbb
xor
cmps
lahf
popf
xchg
jge
dec
and
in
mov
sahf
mov
sbb
and
xchg
xchg
and
inc
aam
shr
lock
cmps
(bad)
clc
xchg
lods
mov
cli
mov
test
ins
pop
mov
or
jo
jp
jg
adc
xchg
and
(bad)
leave
lahf
mov
mov
jg
xor
push
pop
dec
or
enter
in
repnz
sar
mov
leave
ror
int
and
adc
cmp
daa
out
mov
adc
gs
fldenv
(bad)
xchg
inc
test
push
adc
hlt
fiadd
add
jle
popf
jl
leave
jl
aas
ffree
and
mov
sbb
inc
(bad)
enter
ds
xchg
adc
nop
and
lds
and
adc
popf
not
mov
nop
inc
movs
jmp
add
xor
js
int
(bad)
shl
test
fisttp
test
scas
lock
dec
daa
push
dec
cli
add
in
jge
jnp
add
push
xor
cmp
adc
bound
sbb
mov
rcr
enter
or
sbb
sahf
xor
bound
data16
push
rcr
movs
push
xchg
xchg
add
in
in
dec
ret
xlat
retf
jns
fidivr
imul
enter
(bad)
xor
dec
push
mov
test
sub
inc
sti
iret
or
mov
ret
mov
dec
fldcw
es
scas
jmp
das
lods
mov
sub
retf
lods
and
outs
sbb
(bad)
and
arpl
fwait
add
push
cmp
je
mov
sti
pop
pusha
test
sub
lea
loope
ja
adc
mov
lock
bnd
aas
cld
jge
test
int
jo
mov
sbb
div
aas
sbb
iret
cmp
xchg
jno
jmp
movs
mov
sub
aas
and
xchg
mov
mov
adc
imul
dec
(bad)
fmul
push
bound
stos
sbb
lahf
aas
in
cmp
mov
sub
cmps
test
mov
loopne
xor
xchg
pop
mov
loopne
pop
fnstsw
mov
jmp
xchg
mov
sub
add
pushf
fmul
imul
and
add
push
inc
mov
(bad)
sbb
aam
ds
sub
add
fisttp
adc
(bad)
jecxz
jmp
out
mov
ins
inc
aam
in
int
jmp
xchg
mov
es
dec
push
into
cs
adc
dec
adc
xchg
push
sbb
xor
jge
inc
mov
cmp
jp
idiv
call
xchg
and
leave
sbb
ror
dec
push
lods
lods
push
pop
cmc
xchg
and
mov
stc
neg
sub
xor
frstor
(bad)
imul
push
je
add
fwait
jg
mov
jecxz
shl
and
mov
cmps
mov
gs
mov
sub
hlt
mov
cld
cmp
js
mov
data16
jl
call
into
jns
mov
mov
add
sbb
xchg
pusha
lds
mov
cmp
stos
outs
mov
jmp
dec
push
inc
mov
xor
xor
add
movs
pop
outs
(bad)
cmps
aam
dec
mov
mov
int3
(bad)
icebp
pop
or
push
xor
in
xlat
and
(bad)
jno
fwait
pop
push
repnz
stos
rol
xchg
(bad)
imul
jg
xchg
adc
sahf
jae
fnstenv
cdq
rol
jle
or
iret
push
cmp
dec
shl
pop
dec
and
call
aam
cmp
mov
mov
pop
adc
pop
mov
test
pusha
mov
jge
out
iret
pusha
jg
out
lock
and
push
shl
call
mov
nop
in
or
push
fist
pop
push
pop
xchg
pop
bound
fdivr
rol
out
shl
scas
imul
mov
jae
fcomp
fdivr
addr16
push
jp
movs
out
cdq
mov
popf
and
push
push
or
fwait
into
outs
ja
inc
ja
rol
xor
fild
outs
popf
call
xor
and
push
bound
pop
lods
xchg
(bad)
cmps
lock
mov
cmp
ss
fs
push
mov
(bad)
or
stc
movs
adc
rep
adc
clc
or
xchg
sbb
jns
fs
lock
leave
pop
out
lahf
ret
xor
mov
pop
fcom
out
inc
push
pop
cld
les
adc
not
rcl
sbb
push
mov
sub
cli
xchg
stos
cmps
cmps
adc
fld
loope
mov
jae
pop
mov
sqrtps
aad
imul
add
test
dec
xor
ret
pop
dec
scas
jmp
add
jno
push
mov
scas
push
cs
and
test
out
(bad)
or
out
mov
xor
pop
sub
gs
retf
xchg
int3
fcmovne
mov
hlt
dec
mov
nop
and
in
jl
mov
jmp
xor
pop
cli
lahf
mov
dec
inc
push
mov
adc
push
xor
cmp
xchg
adc
stos
and
pop
xchg
mov
sbb
das
int
jle
and
imul
xchg
jmp
inc
mov
gs
inc
cmps
dec
test
mov
mov
or
fdivr
add
jns
frstor
jmp
icebp
out
dec
lods
adc
inc
mov
xor
cmps
stos
inc
mov
repz
mov
xchg
inc
push
stos
loope
ja
cdq
(bad)
mov
aad
(bad)
sub
and
std
repz
and
in
es
int
jno
pop
shr
push
repnz
das
xchg
xor
in
dec
adc
retf
cmp
mov
dec
jns
jae
sub
sub
cdq
or
leave
loopne
or
icebp
popa
loope
enter
xor
test
stos
das
pop
not
in
leave
xchg
jmp
loop
add
je
movntps
sub
pop
or
or
jnp
add
push
push
iret
push
jecxz
fstp
xor
sti
push
and
lea
xchg
nop
fxam
xor
mov
ret
mov
push
loope
arpl
mov
push
fld
adc
lods
outs
cmp
push
mov
fst
pushf
xor
dec
mov
mov
mov
add
in
shl
int
sub
jle
sub
arpl
ror
out
dec
jecxz
jmp
push
sbb
loop
xor
lahf
and
idiv
mov
daa
ins
mov
leave
mov
mov
pop
inc
jmp
nop
adc
outs
pop
xlat
inc
dec
pop
(bad)
fcmovu
adc
sub
dec
mov
cvtps2pd
sbb
xor
(bad)
sbb
jg
push
xor
leave
push
xchg
xor
jecxz
and
mov
sbb
les
jmp
movs
int
adc
jmp
fadd
push
stc
mov
scas
mov
jns
inc
add
pop
mov
test
call
out
mov
dec
out
xor
pop
(bad)
mov
pop
xchg
faddp
sar
push
sti
ret
cmc
sbb
pop
sahf
sbb
lds
push
lock
popf
cmp
mov
push
xchg
pop
xchg
jne
and
add
(bad)
lea
mov
pushf
ins
mov
(bad)
push
push
sub
sbb
aaa
add
push
sbb
into
addr16
cmps
mov
cmc
dec
mov
push
fild
lahf
add
aaa
loopne
ret
inc
inc
ret
mov
pop
xchg
push
inc
mov
push
in
xor
mov
enter
rcl
aad
mov
mov
pop
push
daa
dec
adc
es
js
je
jnp
das
push
(bad)
and
retf
lock
lods
or
mov
mov
jo
dec
add
repz
shl
mul
add
pop
mov
xor
jb
xchg
movs
sbb
leave
out
and
mov
adc
lea
int3
add
dec
xor
dec
fdivr
ret
push
pop
jp
fs
scas
(bad)
cli
cs
daa
xor
push
push
cmps
mov
dec
push
add
xor
out
test
pop
push
xor
jbe
push
fsub
dec
add
adc
fdivr
cmps
mov
jle
pop
stos
add
dec
stc
arpl
movs
cs
or
cli
out
daa
cmp
mov
pop
je
in
shr
jne
xchg
jno
and
les
mov
aas
adc
cmp
ret
mov
loop
(bad)
sub
and
sahf
lock
cmp
push
sub
lea
xchg
jge
outs
cmps
push
in
mov
cmps
adc
adc
stc
jbe
mov
xor
gs
scas
pop
cli
cmp
mov
aaa
outs
arpl
in
pop
cli
mov
xchg
addr16
and
jmp
and
ins
sbb
call
mov
or
xor
xlat
ret
out
or
jmp
fwait
dec
inc
hlt
adc
xchg
ret
movs
jns
shr
frstor
in
js
jo
into
or
mov
jne
test
shl
rcl
fiadd
shl
imul
jno
aam
mov
pop
jmp
pushf
mov
mov
or
ret
(bad)
movs
(bad)
jp
into
lods
and
(bad)
loopne
ins
sbb
dec
test
add
jb
jno
mov
add
test
or
inc
sub
adc
push
dec
and
movs
addr16
xchg
mov
ja
imul
movs
aaa
cmp
mov
fcmovu
mov
inc
sbb
sbb
mov
test
shl
add
xor
enter
sar
and
push
sahf
adc
add
dec
and
pop
push
(bad)
pop
xchg
ficomp
push
xchg
add
xor
pop
fdivr
nop
mov
cmp
jge
pop
mov
mov
stos
push
xchg
std
mov
add
gs
push
or
shr
ret
xlat
sbb
mov
mov
mov
and
jns
mov
leave
lods
shr
shl
imul
mov
retf
add
or
dec
fs
sbb
imul
jbe
or
lahf
inc
pusha
dec
xor
arpl
retf
push
repnz
stos
push
imul
or
loopne
aam
jae
test
mov
lds
pushf
xor
add
add
dec
cmp
or
imul
ficomp
sub
imul
inc
in
jae
dec
mov
gs
and
adc
(bad)
inc
sahf
call
out
jnp
fbld
movs
test
push
lock
dec
retf
pop
xchg
call
shr
xchg
loopne
jecxz
test
mov
rol
ja
shld
inc
test
jnp
(bad)
int
xchg
std
and
mov
or
mov
mov
lds
sub
aaa
in
rol
xor
or
imul
jb
lods
or
paddb
bound
out
inc
adc
mov
mov
out
inc
mov
ss
dec
and
loop
loopne
mov
push
add
test
outs
lods
mov
dec
push
push
jb
lods
jmp
rcl
push
mov
stos
and
jnp
jns
and
inc
mov
fwait
shr
xlat
pop
pushf
dec
pop
sbb
mov
(bad)
fistp
jge
sbb
out
adc
mov
aam
jbe
jmp
inc
outs
(bad)
mov
in
or
fld
inc
outs
xchg
xor
imul
mov
test
mov
ins
xchg
xor
std
pop
cwde
int
mov
jp
mov
xor
les
in
call
je
or
dec
sub
mov
and
mov
xchg
imul
into
mov
or
and
inc
pop
dec
fst
inc
jns
mov
sub
in
in
jle
cmp
jo
xchg
mov
call
lock
jmp
mov
mov
call
dec
push
popf
pop
and
mov
jl
push
mov
dec
sahf
or
xchg
movs
inc
cld
cmp
clc
push
mov
dec
push
ja
je
aam
sub
mov
sti
mov
test
adc
sar
in
push
sbb
in
jmp
int
pop
sahf
repz
mov
xor
shl
push
push
loopne
sbb
pop
mov
inc
and
movs
add
mov
mov
sbb
in
fisttp
enter
das
inc
int
dec
xchg
push
jmp
xchg
arpl
loop
fadd
test
jmp
xchg
fld
cmc
out
dec
fistp
or
loop
mov
lahf
pop
dec
dec
es
(bad)
mov
xchg
rol
sahf
xchg
int3
sbb
stos
cwde
in
cwde
mov
xchg
faddp
lea
push
ja
mov
jns
pusha
add
neg
xchg
mov
pop
mov
bnd
cmc
mov
inc
pusha
cmp
(bad)
mov
repnz
jb
mov
dec
popa
stos
out
cld
fistp
xlat
and
xchg
inc
push
cwde
push
xor
add
addr16
into
cld
retf
cmps
mov
and
arpl
jmp
add
xor
fisubr
and
bound
sub
cmps
xchg
sbb
mov
adc
xlat
pop
jmp
pop
cmp
jmpw
aam
cli
add
and
out
pop
call
sti
aas
cmp
cli
dec
or
in
push
test
xchg
xlat
push
cmp
add
out
test
or
stc
pop
cli
sub
sahf
ss
lods
mov
sbb
in
or
jl
fwait
mov
dec
(bad)
into
out
mov
pop
mov
fisub
data16
fist
(bad)
jecxz
arpl
call
inc
or
jno
(bad)
imul
lods
lock
and
pop
inc
sbb
xor
in
or
int
repz
sub
popf
mov
stc
cdq
jl
scas
sti
rcl
pop
jnp
test
int
in
sbb
cmp
mov
fsub
and
add
and
sub
jb
cwde
xchg
mov
(bad)
push
int
sub
pop
out
add
cmp
into
push
dec
jne
movs
adc
sahf
js
sbb
jnp
imul
push
dec
inc
inc
lods
cmp
je
pusha
jns
out
out
jmp
sub
fisttp
daa
fild
adc
sub
fnsave
test
push
jo
int
cmp
test
call
and
cmp
mov
rol
fsub
hlt
mov
jl
jmp
dec
add
push
mov
add
and
inc
xchg
call
loope
dec
bound
add
jnp
shl
mov
xchg
inc
add
add
dec
jne
loopne
inc
dec
xor
pop
xor
imul
arpl
aam
cmp
in
pop
inc
test
jno
in
test
sbb
xchg
jl
ret
in
fist
sbb
scas
ror
add
adc
out
jle
cdq
pop
loop
sub
daa
xor
sahf
dec
pop
xor
jno
push
xor
ins
je
cmp
out
xchg
jbe
loope
and
out
scas
inc
sub
or
dec
pop
sbb
cmp
sbb
and
sbb
mov
call
jmp
movs
xchg
push
mov
sbb
inc
and
into
mov
jmp
mov
cwde
mov
es
outs
sub
rcl
bound
cwde
or
rcl
int
hlt
cwde
jmp
adc
adc
pop
mov
sbb
ins
out
xchg
loop
jbe
dec
dec
push
sar
or
(bad)
push
push
xor
xchg
(bad)
jae
in
adc
(bad)
pop
fadd
jae
(bad)
les
rol
add
ret
fidivr
int3
sbb
adc
jle
and
in
inc
sti
push
icebp
push
data16
inc
xor
mov
mov
scas
jmp
les
add
xchg
test
and
fdivrp
pop
icebp
jae
and
scas
imul
pop
retf
dec
jbe
retf
cli
pop
jp
test
fcomp
push
inc
inc
dec
add
sbb
xor
jg
jmp
pop
mov
xor
xor
hlt
sub
mov
data16
shl
dec
mov
das
mov
xor
mov
adc
sahf
daa
ds
inc
sbb
xchg
lds
sbb
jg
pop
repz
lods
je
and
push
repz
ins
das
mov
hlt
leave
dec
nop
dec
div
movs
mov
(bad)
fst
fucomp
test
movs
(bad)
jg
and
bound
xchg
cmp
push
scas
mov
sar
jl
or
sbb
fnstsw
xchg
xchg
sbb
je
xchg
imul
or
cmp
mov
dec
add
sbb
add
inc
inc
fsubr
jmp
cld
and
je
pushf
fucomi
sub
loop
jge
retf
and
out
push
adc
in
adc
pusha
fwait
iret
dec
mov
push
adc
aad
leave
outs
add
jle
iret
fadd
ds
in
xor
add
mov
jo
mov
aam
rol
je
fst
iret
pusha
ja
call
cmp
jecxz
lods
push
mov
lods
jmp
or
push
in
repz
push
cmc
div
pushf
sub
sbb
outs
mov
leave
pop
xchg
sbb
nop
add
lods
jmp
int
test
adc
pop
js
inc
mov
mov
jmp
push
test
add
shl
xchg
lock
pushf
test
(bad)
push
mov
cli
dec
xchg
adc
push
or
ins
pop
jne
pop
test
mov
sub
arpl
(bad)
es
mov
xchg
stos
and
lea
je
dec
mov
scas
lahf
fld
mov
pop
psllw
push
addr16
loop
gs
clc
loopne
sbb
or
lea
jmp
and
inc
bound
dec
push
(bad)
ficom
xor
pop
pusha
pop
mov
mov
aam
push
xor
add
jmp
(bad)
(bad)
pand
pop
sub
pop
ds
sub
rol
xchg
adc
add
push
es
add
adc
lock
shl
int
mov
mov
or
dec
cli
mul
sub
mov
rol
(bad)
jns
fdivr
sub
imul
xchg
fsubr
pop
adc
shr
inc
cmp
sbb
sbb
(bad)
xchg
bound
sbb
iret
and
adc
inc
(bad)
movs
cmp
xor
dec
or
add
mov
sub
sbb
jmp
jg
mov
mov
loope
lea
adc
bound
inc
cwde
dec
loope
or
(bad)
jmp
js
iret
lods
xchg
cmp
and
and
repnz
push
(bad)
cmp
bound
cmp
push
loop
aaa
enter
xor
jl
loop
dec
adc
(bad)
lahf
pop
mov
push
cmp
in
ss
dec
mov
rol
mov
out
(bad)
call
jnp
mov
retf
js
hlt
test
add
dec
xchg
xchg
xchg
in
in
cmp
mov
xlat
fidivr
inc
cdq
imul
aaa
pusha
clc
xlat
out
cmp
adc
ret
pop
clc
cld
jb
popa
add
shl
jg
dec
pusha
shr
cmc
push
xor
inc
movs
mov
xor
bnd
pop
test
mov
enter
jnp
xchg
out
fist
mov
jmp
sub
inc
and
push
push
jmp
ins
scas
adc
mov
inc
std
lods
dec
cli
lods
leave
in
out
mov
in
shr
es
inc
jo
(bad)
loope
or
aaa
inc
fadd
or
retf
addr16
pop
xor
xor
stc
int
scas
pop
popf
lea
xchg
fld
or
xor
inc
jecxz
ins
pop
sbb
out
mov
daa
and
push
outs
mov
add
jno
push
sub
inc
int
imul
dec
inc
push
adc
movs
jno
aaa
out
and
nop
and
push
loop
sbb
lods
aad
popa
push
jae
mov
adc
push
pop
inc
cli
pop
adc
pop
loopne
es
pusha
push
dec
test
rcl
fisubr
add
mov
xor
cmps
dec
sub
pop
xchg
or
fidivr
fcom
or
add
mov
aas
or
data16
mov
xor
cld
xchg
sti
mov
movs
inc
pop
jne
inc
adc
mov
pop
add
loopne
fsubr
outs
ror
xchg
lahf
adc
add
or
xlat
mov
mov
pop
xor
out
inc
or
int3
sbb
aaa
dec
xor
in
jb
call
aaa
sub
adc
sub
pusha
jge
es
pop
ja
clc
mov
shl
ret
mov
add
sbb
loopne
cmp
xor
sbb
adc
push
aas
fldl2t
dec
into
icebp
arpl
shl
mov
mov
das
mov
mov
sahf
push
jne
pop
push
fisubr
call
or
inc
out
ins
ss
adc
inc
(bad)
fcom
popa
inc
dec
jp
stos
data16
dec
xchg
and
xchg
push
pop
out
pop
and
(bad)
mov
in
jne
iret
and
sbb
icebp
stos
das
or
or
es
add
sub
adc
push
ins
pop
scas
outs
fnstsw
in
cmp
aad
push
int3
lahf
xlat
nop
rol
je
dec
push
or
inc
mov
jb
retf
sbb
ror
out
pop
(bad)
xor
pop
inc
push
(bad)
add
imul
mov
shl
in
(bad)
add
cmp
inc
add
or
xor
pop
out
inc
cmc
aas
or
jle
in
cmp
push
mov
xor
add
packsswb
mov
push
(bad)
dec
or
inc
or
mov
pop
not
xlat
jno
jnp
addr16
xor
push
ss
out
push
mov
aad
dec
call
mov
mov
fadd
sub
xchg
js
xchg
xchg
dec
adc
mov
sar
adc
pop
push
call
gs
pop
jp
out
mov
add
mov
pusha
jmp
scas
jp
mov
fcmovbe
push
mov
into
xchg
fsubp
xor
adc
fstp
and
(bad)
stc
sub
cmc
rcr
cmp
es
jne
and
xchg
sub
pop
(bad)
dec
cwde
adc
jae
mov
lods
mov
jns
adc
ds
xor
xchg
gs
jecxz
std
cmp
loopne
inc
jb
lods
leave
push
push
dec
push
stos
jge
lods
dec
test
sbb
fisttp
pop
mov
push
jno
mov
inc
aam
mov
ret
nop
xor
cmp
push
sub
hlt
data16
inc
fisttp
sbb
inc
mov
sub
sbb
rol
mov
push
inc
test
mov
icebp
test
jae
adc
mov
mov
call
push
jge
mov
ffreep
lahf
pop
pop
adc
int3
popf
jbe
cmp
adc
xchg
xchg
test
xor
sub
pop
jb
int3
sub
loope
cwde
cmps
push
test
inc
stos
outs
inc
leave
mov
sahf
loopne
cmps
nop
daa
mov
jo
cmp
xchg
add
nop
lods
test
adc
dec
push
inc
jecxz
mov
add
sbb
pop
cli
dec
sti
push
je
push
test
into
pop
sub
or
(bad)
mov
jae
(bad)
movs
retf
adc
push
lock
(bad)
call
and
pop
ins
xchg
retf
rcr
sar
movs
test
inc
fs
xlat
sbb
jmp
nop
mov
add
mov
xchg
jmp
push
out
ins
nop
lods
cli
rcr
dec
inc
xor
inc
or
sbb
cli
fild
push
adc
popf
stos
ret
mov
push
sti
adc
sbb
and
cmps
rcr
mov
sti
jp
jne
ds
std
cli
test
in
imul
adc
mov
jne
lahf
pop
dec
mov
or
adc
mov
push
add
cmp
push
or
jae
mov
sti
pop
mov
scas
mov
das
pushf
popa
stc
out
addr16
dec
push
fcomi
aas
push
data16
or
(bad)
out
or
jmp
(bad)
pop
xchg
sub
movq
lods
out
xor
lock
mov
outs
dec
retf
or
add
inc
int3
aaa
sbb
popf
adc
mov
fadd
jle
das
xchg
scas
xchg
rcl
aaa
imul
jno
mov
in
mov
mov
call
mov
xor
push
and
and
cdq
push
mov
gs
inc
not
mov
cmp
out
xor
pop
mov
push
(bad)
xchg
and
and
retf
push
cmp
mov
inc
add
inc
jmp
mov
inc
nop
xchg
inc
mov
cwde
push
xor
push
mov
adc
call
xor
mov
adc
add
push
pop
dec
mov
xchg
push
inc
pop
cmp
pop
xchg
scas
and
test
outs
das
loope
test
sbb
outs
loope
and
pop
iret
mov
mov
or
stos
enter
add
push
cmp
fcomp
lods
sar
and
pop
jbe
retf
sti
loopne
cmp
dec
sbb
(bad)
aad
out
pop
or
mov
jmp
std
movs
mov
(bad)
sub
mov
pop
sub
mov
imul
repnz
or
xchg
imul
sbb
adc
jmp
jae
hlt
adc
ins
retf
xchg
mov
add
dec
retf
(bad)
fisubr
mov
dec
adc
stos
or
sbb
xlat
mov
add
lock
mov
sub
daa
cmps
movs
lods
call
sub
in
out
push
ss
call
cli
and
cmp
test
out
dec
aam
out
out
mov
ds
inc
test
mov
mov
js
aaa
adc
add
inc
ja
hlt
pusha
hlt
stos
jp
push
lock
jmp
adc
jns
add
mov
jp
xchg
in
mov
jmp
push
lods
add
sti
fsub
or
retf
ins
shl
mov
adc
ficomp
dec
jne
outs
adc
jecxz
out
outs
push
addr16
dec
test
test
fcom
movs
lock
sbb
gs
(bad)
push
jo
dec
fidivr
hlt
rol
rcl
sbb
dec
bound
xchg
test
movs
fdivr
mov
mov
xchg
cmps
mov
push
xchg
xor
dec
pop
or
dec
inc
jb
or
shl
bound
into
pop
sub
in
xor
popf
repnz
or
(bad)
clc
adc
mov
inc
stc
sbb
lods
mov
jp
sub
sub
sbb
xor
xchg
test
cld
imul
sbb
scas
je
xor
movs
jno
arpl
int3
mov
cmps
xor
xor
enter
enter
xor
fstp
jnp
daa
ds
xchg
mov
cmp
jmp
aad
in
mov
fisttp
lock
jl
out
sbb
ds
popf
mov
mov
adc
(bad)
fiadd
and
in
mov
adc
fsubr
movs
test
push
inc
cmp
cmp
or
ins
sahf
les
cwde
sbb
call
dec
loopne
adc
mov
jno
add
xchg
out
adc
push
lahf
pop
pop
inc
cmc
mov
cmc
and
sub
cmps
and
es
outs
popf
add
dec
fsub
out
fwait
pop
adc
jns
loopne
stos
mov
rcl
and
jae
test
add
dec
fsub
sbb
inc
add
add
pop
xor
(bad)
arpl
xchg
mov
and
sub
cmp
sbb
out
ret
add
fidivr
or
sbb
test
jmp
into
inc
cdq
cmps
out
or
sub
pop
pop
cmp
sbb
outs
pop
shl
sar
(bad)
std
fld
mov
(bad)
stc
pop
cmp
pop
or
fcom
jne
jmp
jg
lea
pop
ret
jl
(bad)
fidiv
cmp
xchg
pop
(bad)
scas
and
sub
mov
xchg
mov
add
sub
call
add
repz
mov
xor
mov
or
inc
int
jnp
cmp
inc
cmp
push
pop
sub
dec
ror
add
pop
and
jmp
aaa
xchg
cmp
mov
(bad)
js
mov
dec
and
jl
xchg
outs
das
jmp
push
ins
adc
fprem
jns
push
inc
xchg
jae
push
aad
retf
stc
push
mov
mov
xor
std
ror
mov
adc
adc
test
ins
in
dec
ss
enter
ss
sub
push
neg
in
cld
enter
std
int3
mov
mov
jne
ins
xor
xor
and
and
adc
push
sub
pop
mov
aas
bound
push
sbb
nop
sbb
lock
cwde
push
ss
sahf
mov
jmp
gs
hlt
jg
push
or
rol
jmp
push
lahf
sbb
ss
push
xchg
cdq
(bad)
out
or
test
and
inc
mov
sub
stos
or
daa
or
mov
data16
std
in
sbb
sahf
cld
xchg
jmp
jbe
sub
mov
adc
dec
xlat
push
jmp
mov
pop
stos
data16
sti
xor
add
scas
int3
cmp
outs
shl
mov
jns
mov
adc
add
hlt
pop
jno
add
xlat
arpl
sbb
mov
ss
out
(bad)
jmp
xlat
jmp
mov
add
jecxz
repnz
test
push
jno
jl
sub
div
jl
push
xchg
popa
sahf
out
jg
dec
sti
mov
jecxz
out
push
pop
inc
sub
fs
fist
ds
and
dec
jns
jbe
fdiv
jge
lea
jmp
ret
mov
lds
mov
mov
jmp
loop
inc
call
(bad)
push
jno
popa
pop
ror
adc
lea
pop
jmp
mov
shl
push
mov
loopne
jns
(bad)
scas
rcr
sbb
test
adc
out
or
(bad)
not
or
mov
inc
ror
inc
and
jnp
and
movs
jmp
test
lea
retf
dec
aaa
jl
mov
xchg
pop
cmc
mov
sub
inc
or
outs
jmp
sub
fld
inc
lea
inc
mov
push
inc
fwait
pop
std
stc
mov
les
sub
add
inc
sub
xchg
cmp
icebp
test
mov
jg
pop
imul
or
stc
mov
mov
loope
retf
sub
mov
sbb
imul
scas
pop
mov
cmp
rcl
and
imul
or
add
push
ja
ss
ja
sbb
and
neg
in
inc
repnz
jecxz
out
pop
push
adc
mov
inc
outs
lahf
cmp
jne
push
hlt
jg
push
jp
fsub
and
call
cmps
into
lds
pop
mov
popa
js
cmp
int3
leave
pop
pop
ja
dec
dec
or
xor
mov
out
cld
daa
scas
adc
in
pop
dec
stos
or
jl
movs
xlat
mov
add
xchg
xchg
cmp
imul
xchg
das
nop
push
fcomp
pop
dec
fwait
jmp
inc
xchg
bound
add
aas
stos
fwait
leave
data16
loopne
mov
mov
jbe
outs
jle
imul
and
das
adc
pop
xor
ja
call
jp
sub
int
inc
mov
ja
xor
jl
sbb
inc
xchg
mov
shr
jmp
sahf
sbb
add
mov
loope
cmp
push
neg
add
sub
push
or
xor
xchg
out
mov
int
lahf
shl
into
add
dec
ja
inc
scas
test
je
loop
mov
icebp
(bad)
mov
inc
mov
pusha
or
mov
idiv
push
mov
aam
lds
into
addr16
push
add
sub
push
stos
mov
es
pop
pop
loope
mov
cmps
js
dec
nop
push
pop
out
(bad)
sbb
not
dec
or
aad
push
mov
daa
cdq
(bad)
ds
push
push
stos
mov
imul
rcr
sbb
clc
mov
push
xor
jns
loop
mov
loopne
xor
jl
xor
mov
adc
pop
sahf
lods
dec
jnp
sub
adc
sbb
int
adc
int
xor
and
rcl
mov
test
imul
out
pop
cmp
sub
and
(bad)
aaa
or
push
imul
in
sbb
out
push
movs
push
mov
sti
(bad)
xchg
xchg
movs
int3
mov
cwde
movs
dec
mov
adc
adc
xor
addr16
jbe
jno
xor
pop
push
mov
addr16
adc
aaa
xchg
cs
and
scas
xchg
cmp
cli
push
inc
out
inc
ds
in
shl
movs
mov
mov
dec
mov
add
mov
pop
nop
sbb
adc
sbb
inc
pop
addr16
in
cmp
cmps
pop
sar
retf
inc
pop
cli
sub
xor
mov
jae
xlat
shr
std
loopne
and
das
mov
mov
xchg
mov
push
add
ret
imul
add
and
(bad)
stc
js
aad
out
int3
dec
leave
pop
pop
daa
in
fwait
push
das
push
shl
jmp
aam
add
xor
pop
and
sub
scas
jp
or
jns
jmp
dec
lea
scas
int3
mov
movs
ins
scas
dec
inc
sti
mov
and
cli
xor
repz
pop
sbb
movs
loopne
push
dec
sub
sub
and
mov
dec
mul
pusha
test
or
dec
imul
cdq
push
inc
xor
jmp
test
inc
and
cmp
or
push
jne
and
bound
mov
jg
sbb
cmovs
push
lods
xchg
xchg
jmp
popf
imul
or
push
jnp
test
push
pop
fnstsw
repz
fild
call
popa
das
out
rol
adc
retf
jae
pop
movs
ins
lods
mov
call
and
in
into
push
hlt
cmp
imul
ror
test
mov
xlat
push
inc
ins
pop
aaa
jno
retf
dec
mov
adc
xor
stc
adc
or
mov
lods
cli
setnp
mov
or
mov
fisub
inc
and
adc
pop
or
out
retf
out
sbb
std
fistp
mov
pop
add
int
retf
getsec
add
sub
mov
jnp
mov
inc
xchg
pop
sbb
jmp
push
sti
xchg
and
or
mov
sbb
(bad)
sti
repnz
cmp
jge
scas
and
ret
cmp
loop
(bad)
mov
adc
sbb
pop
(bad)
stos
push
(bad)
std
pop
ins
xchg
(bad)
cmp
pushf
mov
sub
lahf
popa
fisttp
ficom
fwait
das
push
adc
aad
(bad)
and
inc
or
pop
mov
sbb
mov
popf
inc
gs
sbb
int
and
loop
push
aad
push
cld
rcr
fild
outs
ret
add
or
enter
xchg
sti
out
std
hlt
cmc
mov
dec
adc
cmc
jmp
rcl
add
cmp
and
dec
sbb
ja
xlat
pop
(bad)
jmp
mov
shl
ror
pop
mov
fsubr
or
retf
ja
add
imul
imul
call
push
(bad)
push
call
sub
das
jmp
popf
mov
fs
lods
ja
ins
out
cmps
inc
in
in
sub
and
and
and
dec
fs
xor
orps
sub
xchg
ss
pcmpeqb
push
cwde
add
cld
mov
test
xlat
cmp
xor
pop
pop
ja
xchg
retf
stc
aaa
shl
fld
jbe
test
jmp
and
xlat
jbe
jge
pop
into
mov
mov
mov
add
dec
(bad)
ds
jo
(bad)
mov
xchg
xor
jl
lds
ror
movs
and
pop
pop
and
out
loop
xor
call
jbe
xchg
aas
arpl
cwde
movs
xchg
xor
fidivr
xchg
xor
movs
retf
mov
or
(bad)
int
add
or
call
jae
mov
sbb
icebp
stc
xchg
jnp
sbb
ror
movd
and
pop
loopne
sub
loop
retf
pop
mov
xchg
mov
mov
cwde
pop
adc
push
cdq
sar
mov
push
scas
enter
jno
sbb
cs
inc
or
and
dec
(bad)
dec
lea
std
mov
and
add
jne
adc
and
hlt
mov
pusha
pop
and
mov
outs
jno
int3
pop
retf
imul
es
dec
dec
rcr
fs
dec
loop
les
mov
repnz
cld
add
aam
mov
jmp
iret
cmps
cli
aam
mov
ins
shr
inc
push
sub
popf
push
add
or
jg
jl
test
(bad)
mov
jb
push
sbb
pop
jb
dec
in
sbb
test
mov
push
aaa
xchg
push
loope
or
push
pop
mov
inc
pop
jg
cli
fwait
and
dec
(bad)
sbb
js
add
and
cmp
adc
mov
inc
sbb
loope
rcr
rol
int3
fcomi
inc
inc
inc
sub
(bad)
xlat
mov
jno
loopne
sti
movs
scas
popa
test
fistp
(bad)
jmp
add
js
cli
push
out
pop
clc
xor
push
loopne
add
jbe
xor
mov
sub
sub
jmp
pop
ret
neg
sub
iret
rcl
sbb
pop
push
pop
movs
lods
sahf
clc
pop
jge
xchg
push
fidivr
lock
cmc
jle
aas
(bad)
or
xchg
cdq
and
es
pop
mov
in
idiv
in
lods
int
push
cs
in
popf
pop
int
pop
pusha
test
xlat
lds
cwde
sbb
stc
push
movs
jo
movs
cli
adc
mov
das
mov
dec
imul
dec
jl
imul
sar
call
cmp
xchg
out
lods
adc
hlt
pop
xor
pop
into
jl
pushf
mov
sub
pusha
xor
xor
xchg
idiv
xchg
in
or
adc
xor
and
lods
pop
or
mov
loope
push
(bad)
or
repnz
xor
lods
sub
add
sar
push
call
xor
xor
and
mov
ds
fistp
sub
cmp
jecxz
adc
dec
add
sub
adc
and
pop
sub
pop
imul
das
and
loopne
fistp
sbb
mov
mov
(bad)
pop
aaa
imul
xchg
or
(bad)
fiadd
mov
pop
mov
in
mov
inc
outs
adc
add
and
std
out
leave
adc
inc
stc
and
and
push
jmp
loope
popf
dec
scas
dec
dec
sar
mov
arpl
shl
mov
out
jle
pop
hlt
or
sub
lods
stc
cmc
inc
ja
jns
adc
mov
xchg
sbb
jo
jo
out
imul
in
xchg
inc
(bad)
or
mov
aam
inc
adc
jne
aaa
jae
jns
sbb
jmp
and
lods
dec
push
adc
push
lahf
fcmovb
lahf
shr
(bad)
add
lahf
outs
addr16
jno
neg
push
addr16
jg
push
sti
cs
rol
sahf
aas
push
mov
and
out
ret
aad
push
push
inc
je
sar
push
jo
pop
jle
fnsave
xor
pushf
sbb
sbb
inc
daa
pop
(bad)
out
retf
cmp
sbb
and
mov
cmps
loopne
mov
adc
xchg
sub
cmp
ret
sar
cs
rol
pop
mov
mov
arpl
popf
daa
inc
into
test
sub
xor
jb
mov
push
push
push
int
cmc
les
cdq
adc
retf
pop
in
mov
aas
mov
ficom
push
or
mov
sbb
jecxz
mov
iret
(bad)
cmp
jno
shr
icebp
add
fcomip
push
sub
sbb
push
gs
inc
push
push
mov
mov
aas
xor
movs
mov
inc
fistp
jg
add
push
(bad)
bound
in
or
call
cmp
fsubp
xor
cmps
lea
mul
mov
jnp
test
cmp
jmp
mov
jns
jnp
push
push
push
pop
add
jl
xchg
fwait
repz
jno
shl
rcr
sub
neg
shl
jb
enter
jge
shr
sub
in
ja
in
cmp
mov
int
sahf
fst
imul
or
(bad)
fist
jae
jns
out
pop
mov
cmp
or
inc
mov
and
jae
inc
aad
push
jmp
in
cwde
(bad)
push
sbb
xchg
shl
inc
inc
adc
retf
mov
out
nop
cmc
mov
push
into
mov
fidivr
and
mov
aas
fwait
jb
cmp
(bad)
aam
jb
outs
inc
xchg
push
xor
ror
add
mov
jae
mov
mov
in
push
pop
test
mov
or
adc
mov
test
add
mov
cli
scas
inc
nop
cwde
inc
mov
add
dec
push
imul
jae
or
stc
or
inc
mov
imul
inc
dec
retf
dec
icebp
jg
xor
int
and
pushf
xor
mov
lea
lock
mov
pop
xor
xchg
sub
sub
ins
pop
mov
and
xchg
lds
out
inc
aam
xchg
int3
xchg
test
frstor
jg
rcr
mov
mov
jbe
retf
push
daa
sbb
lds
out
(bad)
iret
out
and
push
push
std
sub
add
dec
cmp
loope
or
aam
icebp
pop
je
and
pop
mov
stos
mov
pop
jne
(bad)
sbb
cmp
imul
cmp
mov
pusha
pop
jle
movs
pop
les
inc
adc
or
lods
adc
cs
sahf
in
add
sbb
fnstenv
lea
fwait
adc
lock
mov
push
inc
dec
stos
cld
or
jp
cmp
test
adc
aas
icebp
xor
dec
ror
fld
mov
pop
jmp
ja
fwait
repz
mov
cmp
cmp
icebp
in
jbe
into
sbb
push
push
cld
push
dec
nop
adc
mov
cmps
mov
mov
je
jmp
adc
cmps
sbb
mov
out
push
in
mov
xor
adc
push
jbe
mov
lahf
mov
sti
or
mov
dec
mov
jno
sbb
jbe
adc
cli
imul
jmp
cmc
jg
xor
(bad)
out
push
rcr
(bad)
outs
sub
int3
pop
mov
sub
out
stos
mov
mov
mov
mov
xchg
pop
jg
fs
leave
stos
rol
sbb
jnp
in
movs
jmp
jmp
imul
mov
jo
adc
imul
and
cld
test
mov
add
push
dec
xor
cmp
shl
push
mov
xlat
in
lods
push
sar
inc
xor
adc
xchg
sbb
pushf
imul
mov
xor
dec
dec
inc
je
xchg
add
stos
add
pop
cmp
sbb
call
jecxz
inc
adc
cli
mov
sbb
scas
ret
xchg
lds
xor
cmp
movs
js
pop
es
iret
in
(bad)
xchg
shl
test
sub
div
jno
pop
add
sbb
test
std
dec
inc
and
xchg
jo
cwde
push
loope
jp
mov
jg
dec
or
jmp
mov
sahf
(bad)
js
xor
inc
test
push
sbb
(bad)
icebp
je
mov
or
les
jp
lods
jmp
retf
sti
out
sub
aaa
les
pop
leave
jg
fwait
mov
int
mov
ss
pop
ror
in
ret
das
push
in
(bad)
mov
in
fcmovne
inc
(bad)
mov
in
ins
or
in
or
lods
jno
xlat
jne
aad
scas
cli
inc
cmp
mov
jae
jno
sub
mov
cmp
test
mov
nop
outs
adc
mov
jge
cmps
pop
sbb
or
mov
into
jno
aad
jle
jo
popf
fldcw
mov
aas
mov
retf
lea
fld
push
in
mul
mov
sti
pop
outs
ret
or
in
jbe
mov
(bad)
aad
sti
sub
call
inc
fild
or
retf
add
adc
xor
inc
shl
adc
inc
stos
shl
push
out
mov
jle
clc
cmp
xchg
push
daa
leave
jg
jno
dec
xor
or
mov
dec
jecxz
stos
ja
and
mov
add
adc
lock
lods
std
pop
call
enter
aam
arpl
fdiv
or
lahf
jmp
mov
adc
xor
cmp
and
call
adc
shl
into
leave
je
jmp
js
jbe
pop
loope
or
sub
sbb
xor
inc
loopne
jne
ins
cld
cmc
jno
mov
adc
push
cmp
lods
mov
mov
adc
fucomip
sbb
lea
mov
inc
mov
inc
iret
push
cs
sti
add
stos
out
fdivr
sahf
pop
mul
sbb
icebp
aaa
sahf
mov
cld
xchg
test
pop
lds
fistp
shr
dec
lds
jmp
int3
or
gs
ja
bound
cmp
(bad)
inc
(bad)
ja
(bad)
fcmovb
stc
push
les
or
jbe
outs
push
aad
loopne
add
test
out
sbb
and
jae
and
sub
pushf
add
sub
mov
cmp
bswap
xchg
pop
lods
mov
pusha
sub
sub
or
jl
or
sbb
and
ja
pusha
and
(bad)
cmp
xchg
cmps
inc
div
add
fistp
cld
pop
(bad)
sub
xchg
(bad)
imul
jg
inc
call
mov
mov
fldl2e
xlat
dec
push
mov
arpl
fisubr
jae
dec
pop
out
lahf
jp
mov
sbb
ret
xchg
mov
cld
inc
push
jns
cmp
sbb
inc
mov
push
adc
pop
xor
mov
xchg
pop
xchg
(bad)
not
lods
xchg
jae
pusha
xchg
or
adc
loop
and
mov
inc
push
and
imul
pop
jae
les
into
in
inc
pop
add
jnp
or
ret
fadd
outs
mov
shl
sub
add
mov
test
retf
and
push
repz
lahf
xchg
adc
movs
xchg
mov
dec
and
fisubr
mov
dec
scas
test
pop
fsub
in
jnp
movs
fiadd
jp
pop
out
jbe
jl
push
loope
dec
xchg
push
push
fisttp
lock
ret
jnp
adc
jb
mov
out
mov
fsub
jecxz
iret
sbb
jae
push
xchg
out
cmps
or
pop
mov
or
js
test
aas
popf
inc
xor
jmp
sbb
loop
fst
ds
movs
mov
pop
and
(bad)
jle
sbb
repnz
(bad)
fwait
stos
add
cli
aam
adc
rcr
pop
nop
adc
jmp
add
jne
dec
ss
nop
lods
add
sub
and
mov
push
dec
xor
mov
fimul
std
sub
fsub
outs
scas
pop
outs
arpl
inc
int
dec
and
inc
push
popa
lea
repnz
(bad)
or
and
xor
jmp
inc
jns
jl
pop
int
aas
cmps
rcr
stos
mov
test
and
inc
jb
ins
leave
iret
into
or
test
push
fist
jns
popf
adc
call
mov
loop
cmc
pop
std
rol
mov
xchg
movs
xor
push
and
xor
pop
push
mov
popf
data16
aad
mov
je
mov
cmp
mov
inc
add
mov
aaa
ja
test
and
fimul
(bad)
enter
out
jae
xchg
(bad)
enter
outs
dec
or
adc
ins
dec
dec
cmp
les
push
aad
push
xchg
inc
pop
inc
adc
out
nop
push
mov
mov
sub
cmp
loopne
cs
jnp
pop
pop
xchg
lods
adc
xor
gs
sbb
jae
(bad)
rcr
in
and
in
lock
xchg
dec
retf
lods
call
ret
xchg
push
das
mov
sbb
call
aam
and
and
rcl
cmp
or
sbb
add
pop
adc
mov
push
lds
adc
mov
dec
push
ins
dec
in
or
jb
and
lds
add
or
add
mov
pop
xor
jns
mov
sbb
mov
xchg
dec
xchg
pop
adc
jno
sub
gs
and
xchg
and
mov
and
pop
retf
jle
(bad)
retf
sbb
(bad)
dec
adc
xchg
fwait
push
hlt
les
add
ret
aad
nop
inc
push
pop
adc
mov
cmc
jp
pop
dec
sub
test
or
inc
inc
movs
fwait
sti
jnp
div
xor
fadd
pop
jne
push
shl
xchg
and
adc
pop
sbb
jmp
je
lds
xor
inc
ret
data16
inc
shl
jmp
fisub
xor
aam
mov
cmc
cdq
lods
inc
add
adc
inc
pop
jnp
adc
call
jo
int
jp
xlat
pop
jmp
jecxz
mov
fdivr
mov
leave
fist
rcl
fist
mov
dec
pop
xchg
push
mov
push
mov
jno
jg
jnp
mov
cld
cmc
xor
jno
xchg
movs
cmp
repnz
cmp
push
loope
stc
test
mov
shr
in
not
in
cmp
ficom
sub
jo
cli
data16
(bad)
or
adc
movs
sub
dec
add
(bad)
lahf
movs
xchg
push
and
pop
pop
sahf
(bad)
mov
and
sahf
int3
or
mov
mov
xor
mov
or
movs
inc
lock
jne
adc
cmp
(bad)
pushf
or
das
into
mov
pop
pop
rol
add
std
mov
add
mov
jmp
bound
xor
loop
mov
call
and
push
idiv
push
inc
mov
dec
xor
xchg
and
cwde
xchg
cwde
pop
test
shl
pop
movs
and
ja
mov
and
in
add
sbb
pop
outs
sbb
cdq
rcr
imul
sub
pop
inc
mov
ins
test
mov
rcl
mov
in
lods
adc
mov
sub
arpl
mov
mov
adc
imul
push
adc
jg
mov
out
push
fsub
cli
jno
cdq
or
mov
push
(bad)
sub
add
sbb
retf
retf
push
(bad)
mov
mov
(bad)
pop
xor
(bad)
pop
shr
arpl
cmp
cmp
add
xor
cmps
sub
loope
xor
push
push
inc
into
and
and
push
ret
inc
dec
rcl
cld
call
adc
mov
cmp
add
or
inc
cli
int
leave
adc
pop
xchg
add
or
lods
es
dec
int3
cmp
iret
(bad)
nop
cli
xchg
idiv
(bad)
push
push
mov
and
es
out
adc
ret
jg
cmp
fcomi
cmp
mov
jp
adc
push
movs
cmps
loopne
mov
mov
sbb
in
js
dec
(bad)
sar
ss
ret
das
stos
cmp
sub
jnp
in
aas
pop
mov
mov
out
mov
jne
(bad)
iret
jmp
lea
rol
lods
cli
(bad)
shl
les
push
scas
xchg
das
ror
bound
ins
int
sti
jmp
jmp
add
rcr
and
jp
mov
mov
adc
sub
xchg
mov
ins
push
sahf
and
sbb
je
bts
inc
xor
xor
dec
jnp
(bad)
jp
into
lds
jl
pop
jle
xor
clc
and
or
and
mov
dec
xor
ds
mov
cmp
fidiv
(bad)
add
inc
daa
fucomi
push
mov
clc
mov
pushf
xor
popf
jo
shr
test
lods
add
sub
es
jae
xor
sbb
(bad)
dec
call
sbb
sub
inc
xor
add
retf
push
imul
pop
add
jmp
daa
faddp
test
add
fstp
mov
jo
push
sub
xchg
dec
pop
clc
jge
gs
xor
(bad)
fcmovne
lock
fisttp
outs
cvtps2pi
jne
(bad)
adc
les
pop
pop
sbb
cmp
xchg
jp
jmp
out
sub
ror
xchg
and
dec
loope
dec
dec
dec
push
mov
frstor
retf
pop
dec
push
out
push
push
adc
and
mov
bnd
adc
push
xor
jg
xor
jmp
lea
lds
test
dec
jg
mov
retf
ret
shl
mov
jmp
dec
sub
scas
sbb
push
mov
mov
mov
cmps
shl
shl
repnz
push
lds
and
icebp
loopne
mov
push
pop
dec
pop
ins
push
smsw
cld
leave
cli
pusha
fs
mov
rol
fwait
(bad)
or
inc
into
add
lods
mov
adc
or
xor
call
fs
cmps
rcl
(bad)
cs
xchg
in
xor
mul
loope
shl
mov
mov
into
add
js
lea
movs
add
mov
sbb
scas
gs
push
or
sub
mov
fisub
jle
in
dec
cmps
mov
xor
mov
xlat
mov
sbb
jbe
sub
rcl
push
dec
inc
dec
loopne
es
(bad)
lods
rcr
hlt
push
jo
sti
(bad)
test
(bad)
cdq
jno
mov
and
mov
sub
push
shr
jmp
inc
xor
movs
and
das
jge
in
xchg
push
mov
and
add
xchg
rcl
dec
inc
stos
fisttp
and
retf
bnd
adc
xor
mov
pop
push
mov
inc
test
cli
inc
call
push
xchg
les
pslld
inc
stos
dec
(bad)
retf
lds
imul
mov
arpl
cld
and
mov
jno
(bad)
mov
es
rcl
ds
lea
pop
fdiv
mov
jmp
retf
xor
add
(bad)
jmp
in
xchg
icebp
jns
retf
add
out
stos
shl
adc
or
out
(bad)
cs
jecxz
cld
mov
fist
jl
repz
neg
daa
inc
repnz
adc
js
mov
xor
push
jl
call
retf
jns
xchg
leave
mov
or
aaa
hlt
sub
xor
loop
mov
sbb
mov
in
or
(bad)
in
cmps
inc
mov
push
pusha
mov
jmp
retf
sbb
sar
dec
sub
pop
push
xchg
fdiv
push
add
imul
mov
sbb
xor
bound
out
mov
shl
mov
in
sahf
jbe
ins
mov
cmps
mov
in
daa
xor
dec
push
and
lods
cmp
fdiv
iret
stc
gs
into
xchg
dec
sbb
sbb
jle
push
or
pop
pop
jmp
test
call
icebp
sub
xchg
jbe
or
inc
(bad)
gs
lea
ins
mov
mov
clc
sbb
xor
idiv
inc
popf
push
jns
test
data16
lock
mov
outs
add
add
push
pop
add
movs
jecxz
jo
sar
xchg
xor
push
imul
mov
push
pushf
fistp
fbld
mov
xor
int
test
enter
mov
mov
add
mov
es
scas
xlat
xchg
ss
out
sbb
leave
aas
cmps
adc
add
out
mov
sub
fldenv
outs
icebp
jl
fsubr
jg
inc
loop
popf
lahf
cmc
jle
lods
pop
dec
repnz
jge
push
sub
mov
and
jle
fld
cmp
nop
stos
sahf
jmp
jge
xor
aad
adc
mov
xchg
out
push
popa
xchg
and
and
mov
xor
xor
fistp
pop
clc
pop
jp
mov
(bad)
sbb
jecxz
mov
mul
lods
xacquire
aaa
xor
dec
test
or
and
mov
push
(bad)
leave
mov
inc
shl
adc
(bad)
scas
dec
stos
xchg
fsubr
push
in
sti
mov
mov
test
xor
adc
rcl
idiv
outs
les
fsub
sbb
lock
cmp
mov
scas
sub
adc
test
xor
ret
out
jo
xor
push
add
inc
xor
or
and
div
sub
xor
push
in
jg
push
mov
pop
loopne
mov
sub
in
rol
fstp
loop
push
fs
out
(bad)
fisub
cld
in
iret
cmp
pop
inc
out
cmp
(bad)
call
jmp
inc
(bad)
movs
mov
cmp
sbb
outs
mov
jmp
outs
pop
dec
mov
cld
push
mov
and
push
sub
cdq
inc
mov
lahf
ror
cmp
dec
(bad)
ins
jne
mov
addr16
jmp
jnp
cmps
ins
xor
cmp
mov
lods
in
xor
(bad)
fisttp
dec
scas
sbb
sub
outs
mov
jbe
pop
push
loopne
cmp
out
sbb
mov
xlat
bound
leave
xchg
adc
cld
cmc
or
ja
push
leave
lea
lds
jb
xchg
push
pop
jne
or
sub
les
xor
jbe
push
je
mov
sub
(bad)
jne
clc
mov
iret
sub
and
xchg
hlt
scas
fisubr
xlat
mov
daa
xchg
push
pop
cmp
stos
in
imul
scas
cmp
fimul
mov
dec
xadd
inc
loop
es
mov
sbb
lock
mov
xchg
pop
pop
push
adc
mov
sbb
shl
sbb
jl
gs
icebp
xor
mov
inc
adc
shl
mov
cmp
leave
lods
xchg
push
push
jle
mov
mov
cmp
and
movs
push
add
mov
inc
popa
aas
xor
xchg
push
xchg
es
and
dec
shl
jne
jbe
test
push
sub
mov
or
xchg
rol
sbb
mov
or
mov
clc
xchg
or
loopne
cmps
cmp
sub
cwde
repnz
cmp
xlat
pop
fisubr
push
iret
push
add
std
mov
inc
call
add
sar
pop
sbb
jne
fcomp
cmovno
imul
mov
stos
lock
adc
nop
adc
mov
(bad)
or
push
pushw
js
mov
popf
xchg
imul
push
rcl
jae
pop
out
dec
sub
adc
and
or
js
cmp
dec
mov
push
cmp
outs
mov
adc
popa
cmp
sbb
mov
jl
sbb
out
cmp
fwait
mov
mov
jae
or
cmps
pop
lods
fwait
adc
push
jge
and
out
sub
sbb
cld
stos
mov
outs
fist
xor
mov
aam
imul
xchg
push
rcr
and
adc
mov
pop
call
add
movs
nop
popf
arpl
and
sub
movs
mov
mul
mov
dec
or
mov
out
repz
adc
dec
cmps
movs
pusha
sub
push
aam
(bad)
arpl
sub
inc
xchg
cmp
fs
jmp
outs
jnp
loope
inc
sti
push
xchg
and
repz
sti
xor
push
adc
jecxz
stos
or
cmp
mov
xor
call
das
gs
jge
dec
or
adc
pushf
loope
in
mov
hlt
mov
cmp
ins
sub
fcom
dec
cmp
dec
xchg
add
test
imul
lods
mov
rol
and
jae
pop
pop
or
mov
mov
dec
sahf
push
fidivr
out
sub
cmp
add
fdivr
sub
jo
fnstsw
ret
fistp
aas
cmp
scas
or
bound
push
outs
dec
mov
pop
sahf
mov
cdq
xor
pop
sbb
or
fdivr
pushf
cmp
sbb
in
mov
pop
sahf
push
test
das
imul
add
jmp
out
fidiv
mov
mov
es
ss
sbb
repz
inc
push
icebp
jne
ret
loop
(bad)
push
shl
add
dec
outs
cli
push
fsubr
clc
push
lock
adc
jmp
xchg
xor
jns
sahf
push
pop
movs
sbb
pop
mov
in
sahf
popf
aaa
cld
xor
lds
scas
push
cmps
popa
cli
pop
pop
sbb
aaa
mov
adc
mov
inc
js
dec
cmp
stc
sbb
lods
retf
in
lods
leave
mov
push
jmp
call
dec
imul
adc
xor
dec
imul
or
adc
stc
jmp
dec
out
in
inc
mov
(bad)
jns
je
push
stos
xchg
js
aad
loopne
inc
aas
not
lods
push
or
lock
xor
dec
pop
ss
ins
mov
xor
sub
stos
call
retf
idiv
cmp
pop
xor
in
gs
cmp
je
sbb
hlt
jnp
scas
push
xchg
lahf
jmp
mov
mov
cmp
fsubr
lahf
xchg
xor
mov
retf
mov
cli
test
sub
xchg
inc
mov
in
jnp
nop
shl
retf
xor
loop
iret
inc
pop
mov
out
lock
into
inc
push
das
xchg
gs
or
jns
cmp
fisub
xor
retf
ds
cwde
sub
mov
sub
loop
jmp
jmp
lea
adc
adc
sbb
shl
add
(bad)
sbb
aam
push
sub
push
arpl
xor
dec
sahf
xchg
pop
or
stos
add
(bad)
loop
sub
loopne
es
push
inc
jae
sub
cmp
cdq
push
int
or
push
cmp
xchg
mov
dec
out
mov
xchg
repz
jo
xor
mov
and
mov
(bad)
xchg
jbe
repnz
xchg
and
add
cdq
fdivrp
(bad)
cmps
adc
pop
(bad)
mov
jae
cld
jp
xchg
les
sub
ret
sbb
add
arpl
scas
popa
in
push
icebp
iret
cmp
push
ja
outs
aaa
(bad)
mov
sbb
and
mov
cld
iret
jno
sub
(bad)
sahf
(bad)
fnstcw
mov
mov
push
xor
fadd
add
or
pop
mov
mov
lea
(bad)
std
ins
sub
shr
and
stc
out
pop
mov
pop
jb
mov
xchg
and
out
je
push
in
or
hlt
test
scas
aam
std
jbe
div
dec
popf
push
ret
and
sbb
sub
pop
push
outs
add
lock
pop
(bad)
fidiv
pop
fsub
pop
test
fld
xchg
sahf
stos
stos
fstp
push
jne
push
mov
sub
cmp
pop
(bad)
mov
lock
sbb
add
sub
movs
jecxz
popa
xchg
jge
nop
sti
or
mov
sti
pop
movs
test
imul
mov
in
in
jne
in
data16
mov
dec
xchg
dec
cdq
or
sti
cli
xchg
outs
mov
lods
jb
cmp
xor
ss
fsub
and
jecxz
in
jmp
pop
aaa
retf
mov
cmp
jnp
adc
mov
sbb
dec
or
and
iret
adc
(bad)
push
xchg
jno
mov
cmp
push
in
call
dec
push
inc
out
sbb
jno
loope
dec
xor
fisub
bnd
outs
add
adc
mov
outs
prefetcht1
retf
in
xchg
cmp
mov
cmps
loop
arpl
fcmovnb
mov
lods
cmp
data16
dec
in
inc
push
sub
in
jl
mov
sub
inc
pop
inc
pop
mov
sub
sbb
xlat
fwait
clc
in
in
mov
scas
pusha
clc
enter
aam
fisubr
in
pusha
add
or
lock
popf
xchg
jmp
mov
scas
cmps
mov
dec
test
inc
jo
mov
out
mov
mov
std
sub
inc
shl
jle
(bad)
repnz
xlat
pop
mov
and
add
loope
sub
inc
outs
ret
jg
jmp
jmp
pop
(bad)
mov
test
(bad)
fscale
sbb
cli
jmp
push
daa
rol
hlt
jo
aam
mov
in
mov
or
mov
push
adc
and
outs
stc
dec
cld
jbe
ret
jo
xchg
and
xchg
sub
inc
add
ja
shl
add
dec
lahf
jne
pop
cmps
andps
xor
leave
(bad)
(bad)
jnp
push
and
jl
sbb
xlat
mov
push
das
outs
xor
add
imul
out
pop
add
fsubr
add
rcr
cmp
data16
sbb
and
in
dec
cmp
mov
movs
enter
scas
imul
out
enter
fimul
out
sbb
mov
scas
and
in
pop
test
mov
cdq
fnstenv
adc
fwait
je
xor
ss
rol
xor
pop
push
or
js
lock
mov
icebp
mov
and
iret
push
lods
or
cmc
adc
jne
inc
std
xchg
cmc
pusha
out
sub
dec
cdq
jl
aaa
mov
and
fisttp
retf
push
(bad)
jne
push
(bad)
imul
shr
mov
mov
jp
call
mov
(bad)
iret
add
pop
jb
mov
push
mov
repz
(bad)
inc
jno
add
test
test
inc
in
loop
test
sbb
mov
sub
ins
add
mov
cmp
sub
push
call
push
mov
je
aaa
push
pop
ret
adc
int3
add
leave
std
jl
dec
sbb
mov
loope
mov
jge
add
mov
xchg
dec
pop
or
push
and
fistp
mov
ret
retf
dec
ficomp
data16
jbe
pop
push
jle
hlt
stos
cmp
ret
clc
mov
add
sub
sbb
xor
sbb
sbb
and
mov
hlt
push
inc
jns
test
rcl
stos
xchg
mov
pushf
push
fs
repz
sbb
push
xchg
(bad)
(bad)
jp
push
leave
dec
out
aas
jmp
(bad)
pusha
pop
xor
dec
jb
ins
shl
fisubr
cmp
ficom
call
ror
mov
sub
jne
cmps
out
imul
dec
pusha
cmps
in
call
xlat
and
cs
pop
popa
pop
in
fstp
lea
mov
xchg
push
mov
jge
call
cmp
movs
dec
mov
push
xor
cmp
xor
sub
fist
adc
out
sar
jle
xor
arpl
imul
loope
icebp
inc
es
pop
arpl
iret
out
mov
aam
test
nop
jmp
imul
sbb
or
sti
enter
inc
pop
cmp
sbb
imul
adc
jno
mov
(bad)
loopne
xchg
xchg
(bad)
cdq
mov
sbb
dec
aad
xchg
inc
scas
cld
lea
sub
iret
xchg
cmc
inc
loop
dec
add
push
inc
ss
mov
pop
ffreep
sbb
xchg
in
fistp
pop
pusha
dec
inc
xor
inc
mov
dec
scas
and
xor
(bad)
xor
xor
xor
cli
cli
call
dec
imul
jne
mov
das
mov
mov
pop
push
mov
push
in
jl
jns
clc
adc
pop
xchg
jle
push
push
out
aad
pop
mov
js
jo
rol
test
es
xchg
mov
push
fist
jge
and
mov
add
shl
dec
jnp
in
sub
pop
jle
jecxz
hlt
ds
and
inc
mov
lock
push
cld
inc
fisttp
sub
jmp
pusha
in
dec
scas
add
add
xlat
loopne
cmc
mov
mov
into
jb
pop
jae
das
in
xor
mov
add
xchg
sub
les
mov
push
jns
mov
xchg
popa
pop
daa
dec
xchg
test
jmp
cmc
mov
adc
inc
adc
(bad)
jne
and
(bad)
js
lock
pop
jb
pop
sub
ja
daa
jo
popf
(bad)
test
xchg
sar
pop
xor
iret
sbb
repnz
arpl
xor
scas
ins
cmp
xor
add
push
cmp
push
inc
not
and
mov
jl
push
adc
mov
jecxz
maxps
mov
sub
push
jns
fist
neg
or
popf
push
addr16
mov
ret
or
and
int3
inc
loope
test
ja
pushf
mov
adc
push
sub
aas
dec
mov
jae
es
imul
inc
shl
cmp
test
inc
mov
push
and
inc
xchg
push
mov
arpl
or
xchg
adc
es
out
mov
jb
adc
and
idiv
jb
mov
scas
jl
test
pop
loop
sbb
pop
data16
inc
leave
nop
fidiv
test
dec
xchg
into
movs
cli
jp
mov
jae
and
lahf
stc
fild
mov
jg
enter
push
into
jle
ins
ret
or
and
shr
or
retf
cmp
test
pop
mov
sub
imul
inc
push
fs
bound
jmp
repz
shr
add
cdq
jnp
fsub
aad
pop
(bad)
cmps
push
or
push
fadd
jb
cmp
pop
jne
dec
into
mov
xlat
jno
leave
push
pop
cli
or
or
xchg
jmp
xchg
adc
mov
mov
pop
lea
xor
push
sbb
(bad)
xor
mov
je
imul
jbe
add
data16
sub
and
inc
push
adc
inc
call
(bad)
fstp
mov
jnp
cwde
gs
cmc
jl
adc
gs
xor
(bad)
iret
aad
cwde
xchg
sub
into
mov
loopne
xor
dec
cmp
outs
pop
ins
push
sub
rcr
div
cli
push
inc
mov
sti
pop
dec
dec
or
scas
les
push
jbe
mov
adc
xor
sub
aam
sub
ins
sub
fnsave
adc
or
dec
popf
or
fisttp
adc
mov
xor
cmp
inc
aaa
clc
call
xor
scas
sahf
out
test
add
movs
mov
outs
push
cmps
cmp
jl
or
mov
jns
or
mov
xlat
sub
mov
add
es
jno
push
jbe
and
hlt
fldenv
xor
mov
cmp
arpl
add
xor
cmps
imul
jno
cmp
call
push
pop
jae
test
loope
xchg
add
mov
xor
sbb
dec
pop
sub
imul
je
push
jne
cmp
sbb
in
add
pop
mov
je
je
cld
xor
jb
mov
jnp
imul
push
dec
sbb
and
hlt
bound
cdq
pop
dec
jp
pop
fcom
cwde
sbb
inc
ja
test
mov
or
movs
call
and
cld
test
mov
(bad)
in
sbb
hlt
mov
jmp
sbb
gs
jl
xor
xor
fwait
(bad)
jmp
aaa
je
lds
or
dec
jns
xor
cmp
xlat
out
and
mov
cmp
or
xlat
imul
sub
cmp
cld
outs
push
xchg
jbe
sahf
jbe
aad
ss
mov
mov
pop
inc
lods
cs
test
cmp
into
mov
arpl
sahf
repz
push
lods
adc
out
dec
or
or
imul
jno
inc
push
inc
popf
daa
ja
adc
pushf
or
and
fwait
pop
outs
and
out
(bad)
je
retf
mov
inc
pushf
les
adc
movs
or
inc
es
mov
lds
adc
mov
mov
dec
pusha
inc
rcl
xchg
dec
jbe
adc
out
ins
adc
cmps
mov
mov
add
js
or
inc
not
jmp
mov
cmp
stos
pop
sub
sub
cmps
inc
push
sbb
inc
fcomp
leave
in
and
mov
out
call
push
test
jp
sbb
jmp
ds
pop
in
lods
xchg
dec
xchg
ja
inc
dec
adc
pop
dec
xchg
or
adc
jmp
data16
and
lods
inc
add
jbe
movs
cmps
mov
stos
cmovns
call
sub
or
dec
jmp
popf
(bad)
out
fnstcw
sar
rep
stc
dec
jmp
int3
jnp
jne
mov
or
xchg
xchg
sub
inc
mov
fmul
add
xor
push
retf
cdq
outs
mov
add
or
xchg
cmp
push
shl
ss
sbb
mov
cli
cdq
xchg
push
scas
sub
icebp
jns
inc
imul
dec
cmp
scas
push
shl
adc
rol
test
lahf
shr
inc
push
test
movs
retf
jno
inc
jge
test
jmp
out
inc
psrlw
adc
das
or
push
add
jl
sbb
jge
out
fadd
mov
(bad)
mov
and
xor
sub
cld
xchg
std
iret
add
jno
sbb
sub
out
ds
(bad)
cld
cmp
mov
xchg
inc
or
mov
iret
adc
add
lea
call
cmp
aaa
movs
sahf
js
aaa
jae
inc
hlt
outs
pop
stos
jnp
xchg
pushf
cmps
loope
xchg
lods
mov
sti
mov
adc
daa
les
xchg
mov
push
jne
jb
sbb
nop
in
ja
fldenv
jmp
add
xor
sbb
fistp
pop
pop
rol
icebp
xlat
or
sbb
fmul
inc
dec
and
bound
mov
iret
pusha
and
and
or
cmp
xchg
jl
fcmove
(bad)
jne
in
cmp
das
cmp
or
xor
imul
retf
and
in
or
pushf
mov
ficomp
repnz
push
repnz
out
jp
fs
(bad)
in
mov
add
and
les
(bad)
ds
pushf
mov
jle
inc
call
and
inc
fwait
jnp
jne
pop
sub
inc
nop
out
push
test
ss
mov
das
outs
in
int3
jp
xor
push
inc
ret
scas
push
(bad)
xchg
ds
push
js
push
jmp
inc
mov
cdq
jmp
test
pop
mov
sbb
push
fsub
sub
mov
mov
sub
mov
retf
add
inc
pushf
inc
sub
addr16
dec
bound
pop
dec
adc
cld
pop
sti
inc
pop
adc
cmp
mov
mov
or
sbb
femms
push
xor
js
or
xchg
jne
gs
push
xchg
inc
inc
push
std
jmp
add
mov
retf
mul
mov
push
out
inc
mov
in
(bad)
push
jl
(bad)
nop
std
(bad)
mov
dec
xlat
adc
dec
arpl
sti
call
test
pop
jle
mov
loopne
aas
push
push
mov
(bad)
dec
sbb
mov
dec
pushf
jge
jae
fistp
shl
jmp
sub
jecxz
test
jae
add
repnz
cmp
test
pop
adc
inc
ret
sbb
ins
ins
pop
js
pop
xchg
lods
(bad)
(bad)
in
fwait
cs
sbb
sti
fsub
loop
shl
out
(bad)
jmp
push
pusha
jmp
sahf
dec
pop
movs
fstp
clc
adc
(bad)
push
push
add
cmp
repnz
es
enter
fldcw
aas
sbb
push
jp
out
test
clc
mov
shl
sbb
dec
aam
jg
mov
retf
ror
repz
mov
or
bound
push
push
jp
cli
dec
jp
mov
sbb
(bad)
fidiv
dec
or
adc
nop
pusha
push
mov
xor
imul
push
clc
fld
pop
mov
lods
fs
(bad)
int
adc
bswap
jl
lahf
xor
shl
shr
sub
jge
xor
mov
push
and
arpl
aaa
bound
stc
mov
enter
sub
mov
pop
imul
(bad)
test
inc
push
dec
push
inc
rol
test
test
adc
mov
sbb
jge
packuswb
mov
mov
hlt
pop
ja
push
(bad)
inc
pop
xchg
rol
cld
mov
inc
dec
imul
push
(bad)
scas
movs
call
popf
imul
xchg
fsubp
ja
xchg
rcr
or
sar
movs
int
ins
imul
ret
sbb
cld
or
inc
push
inc
xchg
mov
and
jo
cmp
lock
xor
mov
dec
inc
dec
popa
xchg
pop
and
sbb
movs
sbb
retf
push
or
(bad)
call
xchg
mov
pop
ret
and
mov
fisttp
xchg
pusha
xor
dec
(bad)
push
mov
arpl
vpaddw
adc
add
push
fcom
cwde
sti
dec
scas
sub
push
add
ror
cli
(bad)
sub
jno
mov
or
ror
in
inc
test
push
rcr
mov
iret
test
jo
and
scas
movs
inc
cwde
xchg
push
inc
out
fcmovu
sar
add
pop
icebp
ficomp
xlat
scas
data16
movhps
repnz
iret
iret
lea
ss
pop
mov
(bad)
lock
push
out
int
div
push
jp
mov
mov
and
sbb
add
stos
xor
dec
dec
(bad)
pusha
or
xchg
iret
in
call
pop
iret
add
and
mov
push
and
aaa
pop
jo
xchg
repz
test
cmps
push
(bad)
jge
xchg
jb
lds
sub
mov
sub
xchg
dec
jne
mov
xor
cmp
jle
ret
out
jg
mov
pushf
pop
rcl
mov
inc
aad
fs
add
mov
sti
xchg
xchg
movs
gs
jnp
cmp
lds
jg
push
mul
cmp
push
sub
mov
sbb
pop
cmp
movs
pop
pop
pop
jne
lahf
(bad)
cmps
adc
push
lods
fwait
(bad)
les
push
mov
cmps
jmp
sub
xchg
test
adc
adc
scas
pop
mov
ret
fst
xchg
fnsave
sar
sub
jbe
adc
xchg
adc
(bad)
lahf
loope
mov
mov
jle
jo
dec
retf
jp
mov
loop
rcl
dec
jmp
adc
or
nop
mov
add
cmps
inc
stos
stos
inc
inc
pop
jno
vcvttps2dq
std
lods
and
iret
fcmovnb
iret
xor
stos
add
ins
jp
jnp
push
pop
mov
rcl
lods
mov
icebp
xchg
arpl
push
sahf
sar
mov
push
pop
test
and
sbb
stos
pop
jbe
sub
push
cwde
mov
xchg
fsub
xchg
ins
hlt
sar
loopne
add
int
retf
mov
add
cmps
retf
test
(bad)
sbb
push
test
adc
cs
sbb
ins
add
aad
popa
lods
xchg
jmp
aas
adc
jmp
cmp
jo
fisttp
rol
xchg
(bad)
jo
dec
sub
or
in
mov
sti
shl
cmp
adc
xchg
imul
adc
xchg
and
inc
inc
inc
push
dec
sub
aad
add
stos
xchg
pop
and
ss
add
lods
bound
out
jmp
dec
stos
mov
sahf
in
or
or
ins
or
push
repnz
mov
fidiv
cmps
push
mov
mov
adc
or
mov
push
cli
(bad)
rol
stc
ret
cli
popa
adc
out
jae
jns
jg
pop
mov
lea
xor
and
or
aam
mov
int3
(bad)
add
loopne
out
xchg
dec
xchg
xor
into
(bad)
mov
lods
add
pop
call
or
lods
cdq
add
or
mov
ret
bound
fisttp
pop
jb
jmp
(bad)
jae
aaa
arpl
call
ss
dec
add
in
out
add
jle
movs
mov
cmc
nop
sub
sbb
push
xchg
retf
(bad)
mov
adc
jno
dec
jmp
inc
rol
stc
clc
or
sbb
mov
test
imul
adc
ins
rcr
jmp
add
jo
icebp
loopne
dec
mov
(bad)
retf
and
retf
xor
daa
add
int
sbb
adc
sbb
fadd
ret
cmp
sahf
in
xchg
jmp
cmps
xor
adc
mov
inc
dec
mov
pop
fs
call
pop
fbstp
sub
mov
iret
fwait
sub
xchg
pop
inc
pop
ins
mov
hlt
fwait
std
out
(bad)
stc
inc
fcom
xor
dec
adc
setl
(bad)
shl
nop
test
inc
arpl
out
or
repnz
fisub
push
dec
aas
dec
mov
cmc
test
pop
int
je
mov
sbb
cmp
and
pop
jmp
leave
jge
cmp
cmps
jo
push
pusha
mov
mov
imul
inc
test
cmp
fld
shl
movs
pop
stos
push
es
xchg
test
call
xchg
in
(bad)
nop
cs
mov
push
cld
sub
push
push
(bad)
add
and
div
int3
or
add
popf
pop
jne
or
mov
xor
xor
mov
stos
cld
dec
xor
sbb
lock
mov
inc
retf
and
nop
retf
inc
xchg
adc
xor
adc
dec
sub
inc
test
loope
sub
loopne
pop
sbb
mov
rol
sub
xor
mov
fistp
mov
pushf
test
(bad)
cmp
aas
sub
inc
xchg
nop
jbe
jns
or
fisub
push
shr
xor
jae
and
test
popa
dec
mov
push
enter
ja
(bad)
sub
out
mov
fwait
push
sub
and
pop
pop
out
out
cmc
(bad)
out
pop
popa
jb
and
outs
mov
add
and
xchg
mov
xchg
cwde
(bad)
mov
sbb
xor
mov
push
jnp
add
cmp
sub
cmps
jecxz
or
ret
sub
sub
test
add
jb
sar
sbb
xor
push
add
mov
lahf
stos
movs
hlt
cmp
loopne
(bad)
ins
pop
ins
fld
push
pop
daa
xchg
and
shl
and
jmp
sbb
(bad)
pop
push
sahf
pushf
mov
das
or
or
frstor
jecxz
xor
adc
dec
daa
out
jle
repnz
aas
ret
cmp
xor
xor
xlat
push
jbe
inc
jne
sbb
je
sbb
sbb
and
sbb
pusha
(bad)
push
setp
clc
mov
sub
fcomp
add
loop
mov
xchg
pop
push
cmps
and
sar
jns
xchg
xchg
xor
mov
jp
data16
or
xor
pusha
pop
mov
(bad)
popa
sbb
outs
enter
mov
addr16
inc
add
sbb
mov
aas
mov
out
mov
push
lahf
mov
cmps
mov
jmp
int3
mov
inc
(bad)
mov
xchg
call
(bad)
xchg
rcr
leave
jns
push
data16
pop
out
in
inc
cdq
ja
push
adc
or
mov
jecxz
add
push
popf
fidiv
lea
push
xor
shr
iret
sub
and
dec
aad
(bad)
out
mov
adc
psrlq
enter
sbb
addr16
call
push
fwait
push
mov
sbb
sbb
mov
pop
out
pop
lds
aas
xlat
adc
mov
lds
sbb
in
test
rep
cmp
scas
inc
dec
jmp
inc
jp
enter
pop
pop
xchg
ret
jmp
je
jge
repz
push
mov
and
pop
sub
xor
xchg
aaa
daa
dec
mov
adc
mov
pushf
xchg
mov
gs
xlat
retf
jle
aad
vpmacswd
std
and
xor
pop
and
lods
mov
int
mov
retf
xor
sbb
xchg
in
fiadd
hlt
xchg
pop
xor
mov
fnsave
pop
(bad)
sub
std
pop
xchg
loope
mov
mov
push
repnz
or
push
jmp
out
out
xor
lock
adc
(bad)
retf
sbb
sub
movs
test
test
call
pop
xchg
xor
pop
mov
sub
push
cwde
dec
icebp
and
ret
cmp
mov
and
sar
mov
sbb
jmp
(bad)
stc
call
and
ja
jp
xchg
push
dec
pop
cmp
mov
push
adc
push
sti
cli
cmp
ds
jne
mov
pop
arpl
shr
push
mov
test
dec
cmp
repz
rcr
jmp
cmp
adc
out
mov
or
stos
iret
sub
mov
pusha
jge
pop
cdq
pop
xor
clc
fiadd
xchg
jno
sbb
shl
add
and
pop
mov
xlat
push
iret
out
mov
ret
push
or
movs
into
xor
cld
jnp
jecxz
retf
dec
pop
hlt
std
mov
mov
pushf
dec
mov
sti
loop
and
pop
arpl
or
shl
inc
mov
sbb
cmp
mov
clc
loopne
addr16
pushf
aaa
push
test
xchg
sub
mov
mov
jo
aam
nop
xor
test
ficomp
mov
add
int
ins
push
inc
xchg
js
mov
pop
out
ins
shr
push
xor
ins
or
cli
nop
cmp
push
xor
fisub
mov
or
loopne
mov
(bad)
push
jae
aad
xchg
push
(bad)
jle
adc
adc
ret
clc
add
mov
mov
adc
mov
lahf
dec
in
ret
leave
(bad)
sub
dec
xor
fwait
int
lahf
mov
jno
mov
jb
jp
xor
cld
mov
in
or
imul
jl
push
dec
stc
mov
or
or
add
xchg
fsubr
sub
xchg
dec
loope
and
dec
cwde
inc
jge
jmp
je
jo
add
lods
push
or
data16
mov
mov
pop
mov
cwde
pushf
test
or
pop
into
fisubr
fbld
dec
add
daa
fbstp
and
mov
mov
(bad)
sbb
dec
jl
and
ins
(bad)
xlat
in
shl
(bad)
ins
sub
mov
js
ins
mov
xor
pop
sti
stos
inc
jae
mov
(bad)
shl
and
retf
in
sar
push
push
xor
mov
jns
daa
cwde
pop
and
add
popa
outs
jg
sbb
les
sar
call
pop
icebp
out
pushf
and
mov
outs
iret
push
cwde
imul
stos
sub
jmp
rol
je
call
call
add
mov
mov
fs
rcr
(bad)
ins
stos
push
jb
fisttp
pop
sbb
cmp
icebp
in
or
ins
cmp
push
sub
push
frstor
or
scas
(bad)
fidiv
sub
pushf
sbb
mov
loopne
aam
add
push
sar
cdq
inc
pop
mov
cwde
pop
fbld
(bad)
push
jg
mov
sahf
aam
les
pop
jp
jl
fisttp
and
cmp
mov
loope
push
nop
adc
pop
dec
sbb
and
ret
jb
sar
and
push
popa
jb
imul
pop
sahf
push
mov
mov
dec
cmp
pop
enter
aas
jne
mov
imul
shr
mov
pop
in
jae
inc
adc
ja
stc
add
es
int3
rcr
or
into
xchg
xor
popa
imul
in
sbb
jle
add
push
loop
adc
ins
dec
btc
movs
imul
or
lahf
iret
xor
jle
and
inc
and
xor
push
lds
and
in
cli
adc
lea
test
jge
xrelease
xchg
add
fisub
(bad)
cmps
adc
add
lods
push
jb
aas
pop
cmp
add
push
(bad)
jnp
(bad)
sbb
cmp
or
xor
aad
push
mov
in
(bad)
xchg
lods
je
add
xor
push
adc
pop
adc
(bad)
mov
sub
clc
mov
inc
int3
and
or
ja
pop
repz
mov
push
jnp
int3
jns
je
pop
push
outs
and
mov
or
aad
push
test
mov
push
cmp
sbb
sub
rcr
mov
ss
dec
inc
sub
xor
or
or
iret
cmp
js
jmp
or
test
pop
lea
and
dec
push
cmps
ret
arpl
inc
das
jne
sub
outs
pop
jle
retf
outs
ins
pop
or
pop
loope
cmps
(bad)
aaa
movs
std
inc
rol
popa
add
xchg
jge
pop
mov
fbld
pop
push
mov
jmp
icebp
inc
jl
clc
fxch
push
mov
add
push
rol
mov
xor
test
mov
mov
xchg
pop
sahf
cmps
call
inc
mov
(bad)
lock
fcmovnu
inc
loopne
repnz
or
mov
shr
xor
push
js
les
inc
jb
mov
sbb
mul
jg
pop
push
pop
std
mov
add
xor
sub
mov
scas
xchg
retf
cs
adc
pop
xchg
push
js
out
xor
inc
sahf
popa
loopne
cli
in
imul
xor
out
sbb
(bad)
(bad)
aas
jmp
sti
ret
(bad)
lea
js
mov
or
mov
out
leave
sub
sub
mov
cs
loopne
imul
jecxz
lock
(bad)
ds
out
das
fs
push
push
shl
imul
pop
mov
mov
jecxz
ja
dec
repnz
movs
in
add
out
add
mov
cmp
in
mov
or
jl
out
mov
inc
add
fs
add
jmp
dec
adc
jns
jnp
jmp
mov
cmps
mov
sbb
ins
or
push
jbe
neg
or
jmp
loope
sti
scas
mov
and
mov
jmp
lods
push
cmp
dec
push
adc
in
shr
stos
cmps
(bad)
mov
repnz
mov
xchg
mov
sub
add
mov
mov
pop
test
sbb
mov
in
mov
mov
dec
nop
xor
(bad)
cwde
pusha
fild
sub
icebp
xor
pop
loope
jecxz
test
jnp
cs
pusha
dec
aas
imul
test
mov
mov
call
or
jmp
add
inc
stos
push
jge
sub
mov
jae
dec
loop
out
mov
test
inc
loope
cmp
pop
aam
mov
in
mov
adc
cmp
icebp
out
enter
mov
pop
dec
mov
fcomp
sar
retf
int3
mov
jo
outs
xchg
ja
jge
shl
xchg
js
pop
stc
pop
sub
sti
xor
add
das
dec
xchg
cmp
jge
xor
push
xchg
add
or
out
mov
loopne
xchg
adc
or
jns
ss
scas
bound
mov
pop
jmp
repnz
sti
add
and
mov
cmps
rcr
sti
std
inc
adc
ja
jle
dec
fwait
inc
in
mov
call
and
mov
sbb
sbb
inc
out
jno
cmc
hlt
and
data16
add
xchg
xor
mov
add
iret
mov
jmp
mov
call
inc
xchg
pop
xor
mov
stc
adc
(bad)
push
jnp
dec
sbb
sbb
push
fsubr
push
xchg
sbb
jp
push
push
popa
jne
mov
into
xchg
sub
lock
frstor
ror
sbb
rcl
loop
mov
jg
mov
es
or
xchg
sti
ficomp
imul
xor
retf
jnp
ja
mov
rol
data16
in
dec
jo
xor
ins
scas
cwde
jmp
mov
call
movs
outs
aaa
and
sti
test
lea
sahf
add
adc
xor
jge
sbb
jecxz
mov
push
fsub
sbb
pop
add
(bad)
popa
shl
xchg
cmp
add
fnsave
lea
xchg
pop
inc
les
push
rcl
out
inc
and
data16
das
cmc
pop
je
in
dec
push
inc
test
ret
test
inc
fstp
push
push
cmps
mul
test
(bad)
push
addr16
jmp
icebp
adc
and
pop
xchg
cdq
mov
add
ret
mov
xor
inc
sub
addr16
dec
push
push
sbb
ds
test
int
sbb
add
pop
dec
retf
ss
loop
dec
popf
mov
pop
dec
dec
cdq
cmps
inc
in
(bad)
fadd
mov
mov
in
ins
push
xchg
push
inc
fdiv
and
(bad)
sub
or
stos
aas
imul
sbb
or
mov
nop
mov
test
stos
inc
mov
iret
cmp
sub
clc
pushf
push
jp
aaa
sbb
jecxz
jmp
mov
xor
jp
(bad)
fcom
fisttp
adc
mov
pop
mov
pushf
inc
sbb
sub
dec
(bad)
addr16
push
fnsave
sti
mov
sub
cwde
shl
cmp
lock
dec
dec
and
jo
gs
sub
inc
scas
sub
in
ret
fcom
test
lods
loopne
sbb
lds
mov
mov
jmp
fdivr
fwait
or
dec
sub
jg
ins
jmp
je
mov
sbb
push
xor
(bad)
loope
cmp
sub
or
sar
push
xlat
add
std
inc
and
sub
js
sub
jmp
(bad)
mov
rol
inc
call
pop
and
test
lea
xor
xchg
cs
ja
stos
pusha
or
popf
push
mov
imul
popa
cdq
je
xchg
arpl
mov
sbb
call
dec
ret
mov
out
(bad)
adc
mov
retf
ja
fstp
push
lea
or
jmp
outs
adc
test
pop
fdiv
mov
xchg
pop
cmp
and
lods
or
push
xchg
sbb
push
or
sub
sub
jnp
mov
int
pop
xlat
nop
mov
xor
mov
and
stos
stc
lea
aaa
cmp
pop
inc
popf
inc
xor
push
pop
test
adc
push
push
dec
fs
dec
imul
into
xor
sub
xor
cmps
xor
lahf
push
push
add
pop
jmp
xchg
pop
add
mov
movs
mov
sub
int
test
fisub
cmp
cs
fld
and
and
in
or
fwait
pushf
repz
(bad)
scas
mov
mov
stos
leave
(bad)
cmc
jg
out
mov
mov
sbb
dec
or
rol
sbb
jg
mov
scas
sbb
(bad)
rol
lea
adc
int3
and
push
xchg
sbb
cli
jno
mov
js
fldenv
iret
sub
es
ins
popa
mov
push
lea
in
or
loope
rcr
jmp
jb
or
xchg
imul
or
popa
das
cmp
scas
(bad)
loope
int3
in
cmps
push
(bad)
fdiv
jb
retf
mov
das
std
xchg
gs
dec
jl
cdq
lods
cmp
mov
mov
xlat
retf
and
push
mov
int
xor
cld
ss
pop
mov
outs
xchg
sbb
adc
adc
push
loopne
mov
(bad)
jmp
mov
inc
jle
movs
mov
xchg
pusha
and
mov
sbb
mov
jge
mov
pusha
push
scas
mov
lds
jp
fisttp
xor
in
or
jne
xor
sbb
adc
les
xor
adc
fwait
mov
mov
push
inc
fisttp
ror
lds
test
mov
mov
ror
and
push
test
add
(bad)
xor
into
xchg
stc
push
xor
mov
addr16
call
mov
fidiv
jmp
sbb
mov
(bad)
xchg
or
hlt
in
iret
mov
mov
inc
sub
mov
xchg
sub
aam
outs
cmp
cdq
ins
push
pusha
inc
loopne
sar
push
jmp
aad
fisttp
adc
fs
xor
mov
or
test
adc
add
inc
dec
in
xchg
ins
sahf
xor
fnstenv
lods
jl
std
fucomi
mov
mov
stc
jge
xchg
(bad)
cli
sbb
or
out
mov
fs
retf
xchg
and
push
push
je
mov
xchg
xor
mov
pop
das
jmp
sbb
cwde
mul
and
dec
lock
retf
imul
xor
jecxz
mov
icebp
xchg
mov
imul
mov
pop
pusha
rol
hlt
sub
jb
xchg
mov
hlt
cli
or
fstp
into
clc
jp
in
test
fisub
jns
hlt
popa
in
pop
call
xchg
aam
sbb
lds
aam
(bad)
ffreep
lock
pop
js
aas
jp
popa
pop
repz
int
gs
cmps
stos
or
call
outs
dec
sbb
cld
mov
mov
sub
cwde
jo
push
mov
dec
shr
(bad)
sub
enter
adc
inc
mov
push
or
sbb
pop
xor
jbe
and
fist
data16
test
xor
in
pop
xchg
mov
mov
das
stc
(bad)
mov
jo
popf
or
add
stos
xor
mov
xchg
mov
int3
or
imul
aad
js
pop
or
aad
fs
xchg
aas
idiv
mov
and
xor
bnd
(bad)
ss
mov
pusha
inc
or
ss
cmc
mov
mov
test
pop
popa
mov
das
pop
loope
cmp
es
cmp
add
add
mov
pushf
xchg
dec
or
jne
inc
sbb
sbb
push
stc
add
add
pop
ss
add
push
jg
push
xor
push
aam
out
cmc
xchg
cmp
add
out
xor
push
adc
or
xor
pop
xor
sub
adc
fs
dec
xor
lahf
pop
dec
cmp
xor
mov
pop
jge
adc
pushf
fstp
cmp
mov
mov
into
lea
aam
jp
dec
or
jp
or
and
dec
mov
(bad)
sbb
out
push
mov
aaa
and
adc
add
push
retf
pop
pop
stc
mov
(bad)
sbb
push
(bad)
and
(bad)
ins
fidivr
xchg
pop
es
push
shr
sub
inc
add
push
into
xchg
cwde
adc
scas
cli
cli
cli
add
in
data16
inc
dec
cmps
cmp
loopne
adc
dec
xchg
and
adc
pop
push
aam
test
(bad)
lods
ins
int
jb
mov
sub
stos
mov
ja
xchg
inc
push
add
and
mov
pop
push
and
sub
aaa
nop
pushf
dec
in
mov
push
dec
jae
add
dec
idiv
jecxz
push
fwait
mov
cs
shl
mov
in
sbb
std
daa
stc
mov
retf
cmp
mov
arpl
out
xchg
or
pop
cmp
loop
repnz
lahf
sahf
add
and
cdq
jbe
mov
dec
xor
jbe
call
jp
sbb
loopne
aas
arpl
xchg
mov
xor
inc
loope
ret
repz
add
ret
pop
jnp
mov
pop
pop
retf
mov
and
mov
inc
fwait
loop
bound
sub
cmc
cmc
(bad)
(bad)
jns
pushf
sti
or
popa
inc
and
push
lods
fidivr
aam
ficom
test
cmps
dec
mov
outs
in
iret
add
push
iret
pop
pop
dec
idiv
push
mov
test
push
hlt
fs
pop
pop
test
aaa
jae
mov
retf
dec
mov
xor
test
(bad)
popw
inc
dec
cmp
mov
dec
xchg
in
into
cmc
repnz
ja
mov
pushf
(bad)
clc
shr
mov
repnz
adc
jnp
xor
dec
sub
cmp
xor
add
into
dec
push
pop
mov
or
rcl
test
xchg
loopne
dec
hlt
scas
jge
inc
jg
hlt
add
and
lds
fs
aad
adc
(bad)
cmps
xor
cmp
jl
stos
mov
lock
shl
in
push
hlt
stc
ret
sub
fsub
pop
shr
jno
cmp
xor
loopne
lock
iret
jge
jns
je
dec
jmp
les
sbb
mov
cmc
pop
clc
pop
jecxz
les
push
int
call
cmp
fxam
jno
and
push
fmul
stos
push
sub
push
jns
xor
in
cmp
pop
scas
daa
pop
sub
push
repz
out
ret
mov
outs
sub
xchg
retf
xchg
pop
shr
popf
mov
mov
inc
sbb
mov
aam
xor
dec
jecxz
sub
push
inc
xor
lahf
js
aam
add
js
mov
ret
push
inc
mov
test
sub
(bad)
(bad)
push
hlt
push
fwait
and
stos
cdq
aas
mov
idiv
sti
xchg
aam
std
pushf
dec
shl
retf
inc
and
add
pushf
lock
cmc
cld
cmp
jmp
mov
jmp
mov
adc
push
hlt
xor
jbe
out
idiv
sbb
mov
mov
gs
mov
add
or
addr16
ror
test
loopne
inc
bound
es
mov
cmpps
outs
scas
sub
or
and
sub
cli
xor
leave
outs
dec
and
or
int3
mov
cmp
xor
jb
movs
add
xchg
retf
dec
and
stos
mov
movs
push
test
pop
stc
(bad)
icebp
leave
or
stos
test
scas
sub
iret
sub
adc
add
dec
cmps
xchg
mov
out
and
fwait
mov
and
loope
aas
and
retf
xor
lods
call
lea
adc
inc
mov
aad
cmp
out
mov
mov
dec
daa
push
jb
lea
jb
jmp
pop
mov
jge
push
movs
imul
push
add
ret
das
dec
scas
retf
xchg
mov
hlt
scas
arpl
cli
ss
mov
stos
pop
rcr
and
lods
rol
jnp
push
dec
pop
loop
xchg
retf
leave
mov
adc
sbb
nop
clc
in
cmovp
js
fwait
lock
adc
adc
movs
adc
cdq
add
mov
mov
out
mov
imul
ins
jmp
sub
(bad)
jl
loope
sbb
retf
mov
je
retf
pop
push
sti
pusha
sub
add
jmp
xchg
iret
jmp
(bad)
cmp
(bad)
fnstsw
push
jl
sbb
cmp
jp
sbb
sbb
cmps
mov
mov
pop
cwde
dec
jnp
leave
adc
(bad)
fnstcw
pop
mov
fidiv
jp
je
inc
mov
rol
popf
rol
jge
mov
mov
repnz
call
lea
les
mov
xlat
pop
and
or
mov
mov
ja
or
and
sub
sar
dec
xchg
push
test
xchg
mov
dec
xor
push
sbb
jl
inc
dec
pushf
aaa
loop
inc
mov
and
dec
sbb
loop
xchg
hlt
std
cmp
inc
cmps
inc
xchg
jle
add
mov
les
icebp
inc
sub
lea
and
push
jb
outs
std
repz
mov
jl
push
and
cmps
hlt
stos
push
loope
or
test
jmp
retf
mov
aad
into
or
ss
ret
xor
mov
sti
dec
stos
sbb
push
in
(bad)
lods
test
mov
imul
retf
je
leave
mov
and
repz
push
arpl
int3
hlt
cmp
icebp
leave
dec
std
test
adc
daa
fbld
ficomp
das
inc
cmp
mov
jno
shl
js
addr16
jns
iret
in
jmp
loope
enter
mov
push
cmps
dec
jmp
adc
pushf
mov
retf
xor
mov
mov
arpl
or
xchg
dec
xlat
jle
aaa
inc
pop
mov
(bad)
iret
pop
inc
fidivr
or
loop
outs
cmps
push
pop
fs
push
sub
fsub
mov
pop
mov
pop
imul
cmp
pop
push
sub
sbb
pop
cmp
jae
out
ins
inc
lss
std
mov
in
add
sbb
cmps
mov
push
cmp
test
or
aad
add
aaa
fwait
adc
out
icebp
fbld
jo
jle
rcr
and
test
push
sub
sahf
inc
sahf
fdivr
nop
loope
inc
(bad)
clc
in
test
jmp
call
lods
pop
inc
mov
in
xchg
arpl
cld
push
and
ja
pop
sbb
clc
pop
fs
stos
and
in
adc
add
fwait
cmp
call
daa
xchg
sub
adc
cmps
into
in
mov
enter
mov
data16
ret
add
adc
jns
call
xchg
pop
aaa
or
fadd
xlat
repnz
cdq
add
xor
sti
adc
ret
int
mov
lock
xchg
lods
or
out
xchg
push
lds
(bad)
mov
ins
ins
and
dec
aad
dec
dec
mov
pop
ret
pop
inc
cmp
movs
or
push
xchg
rol
or
(bad)
xchg
or
adc
adc
jl
xor
inc
xchg
cwde
fs
sbb
icebp
cmp
aam
adc
popf
les
mov
movs
test
(bad)
in
in
and
inc
sbb
iret
les
ins
mov
repnz
bsr
out
addr16
fld
push
or
xchg
repnz
in
call
mov
sti
pusha
inc
lea
inc
pusha
mov
push
mov
stc
lds
ret
cmp
pushf
push
arpl
inc
xchg
xchg
loopne
leave
frstor
cmps
mov
fld
sbb
test
mov
add
or
int3
sub
mov
jl
mov
es
inc
push
push
xlat
xchg
or
cmp
and
in
out
fsub
sbb
out
retf
sbb
add
movs
xor
pop
push
je
sahf
xchg
push
add
and
mov
dec
imul
mov
xchg
jo
(bad)
adc
jns
mov
jle
mov
sbb
xchg
push
pop
std
in
pop
mov
in
add
or
add
push
shr
test
lock
jb
adc
mov
mov
aaa
jmp
popf
add
add
mov
popa
fdiv
mov
fdiv
in
je
pop
xchg
mov
js
ins
cmps
retf
retf
inc
xchg
int3
sbb
dec
jg
outs
jg
lea
(bad)
ret
movs
pop
(bad)
stos
pop
inc
push
fwait
in
jbe
lds
shr
dec
jns
xor
out
cmps
pop
jb
pop
mov
jae
repnz
out
in
loop
stc
inc
bound
mov
loopne
and
pop
(bad)
dec
fnstcw
mov
sbb
out
fimul
mov
inc
ins
test
in
cmc
fbld
sbb
cs
cmps
mov
sub
push
jnp
ins
js
dec
add
xor
add
mov
pusha
adc
cs
mov
inc
pop
mov
cli
sub
push
lock
int3
jl
call
pop
push
stc
ss
and
inc
or
je
les
push
push
xor
add
sbb
adc
push
or
inc
mov
sbb
mov
cmp
pop
mov
mov
cmp
nop
fimul
jle
xor
mov
shl
sbb
xchg
aad
cmp
mov
sbb
test
jmp
mov
pop
pop
mov
inc
xchg
xchg
repnz
arpl
mov
out
dec
addr16
jo
mov
in
mov
sub
cmp
mov
shl
jp
pop
push
push
jl
jbe
inc
and
aaa
ret
shl
fwait
jbe
or
mov
jmp
xor
fdivr
shl
test
aaa
out
mov
mov
into
test
je
xchg
mov
push
jbe
(bad)
jno
jnp
add
mov
(bad)
(bad)
mov
(bad)
test
xor
adc
(bad)
sub
sub
dec
cmp
push
pusha
std
in
cld
sbb
lock
in
fnsave
in
mov
sahf
stos
aaa
inc
inc
pop
sub
dec
fisub
sar
das
cmp
sbb
sub
xchg
push
repz
ja
adc
add
scas
repnz
inc
inc
jmp
sti
mov
adc
je
test
ins
sub
xor
movs
xchg
push
loopne
mov
inc
push
cmps
shl
sbb
push
pusha
sbb
jecxz
xor
cli
jmp
in
nop
push
sbb
and
jbe
popa
sub
mov
jmp
adc
inc
xchg
push
loopne
stos
cs
das
adc
pop
mov
repz
aad
ss
add
icebp
fadd
ss
call
(bad)
mov
mov
adc
das
and
call
(bad)
hlt
stc
or
(bad)
push
adc
ret
pop
inc
cmp
call
or
dec
les
ja
push
fstp
stos
test
data16
addr16
in
jecxz
test
xchg
out
sbb
mov
mov
push
push
push
mov
add
mov
jb
fnstsw
pop
add
jg
push
xchg
pop
and
(bad)
or
icebp
push
(bad)
into
jge
or
ffreep
xchg
sbb
lods
clc
dec
cli
jmp
std
int3
and
push
call
shl
sbb
fs
push
inc
(bad)
jg
scas
jno
mov
fcmovb
and
loop
iret
mov
movs
retf
in
sbb
sbb
int
adc
push
aas
lea
(bad)
test
push
push
mov
ja
repz
push
add
stos
dec
sub
out
in
cmp
mov
loope
push
cmp
pop
and
mov
xchg
sahf
dec
daa
sbb
neg
pop
mov
xor
jno
rcl
add
ret
and
and
adc
int3
sti
cmp
ins
push
(bad)
xor
inc
sbb
je
sbb
and
dec
push
mov
(bad)
jp
xchg
mov
(bad)
cmp
mov
push
xor
bound
dec
push
or
ins
adc
cld
lock
rol
mov
bound
pop
push
call
fstp
pop
je
xlat
in
push
fnstcw
mov
imul
or
ret
push
neg
out
fistp
fidiv
pop
add
mov
icebp
mov
xchg
and
js
mov
aam
arpl
cmc
call
adc
imul
rol
arpl
xor
and
ins
xor
push
fild
gs
out
cmps
cmp
dec
bound
fdivr
sub
fnstcw
and
mov
fistp
push
add
ds
add
xor
cmp
loope
out
pop
push
cmps
dec
add
xchg
mov
loop
sub
jae
test
in
push
imul
xor
iret
pop
dec
xchg
inc
mov
or
sysexit
gs
inc
sub
ss
and
or
jne
mov
push
icebp
pop
xchg
xchg
dec
les
dec
push
rcl
and
ret
jle
add
std
mov
mov
test
das
out
sbb
popa
popa
inc
jmp
ins
loope
inc
push
aaa
outs
sbb
sub
jno
retf
jae
dec
dec
jns
stos
mov
and
out
fild
leave
out
or
mov
dec
dec
test
cmp
imul
fcomip
sub
dec
fst
fild
iret
and
cmp
lahf
mov
outs
push
dec
sbb
inc
fsub
mov
cmp
(bad)
xchg
das
arpl
into
sti
lock
(bad)
sbb
mov
or
pop
dec
xcrypt-ctr
cmps
fwait
push
mov
pop
jne
fucomip
lods
outs
cmc
xchg
das
jp
sbb
ds
div
jle
movs
nop
test
pusha
add
xor
sub
fdivr
push
mul
test
jmp
cli
mov
arpl
or
cmp
(bad)
mov
std
out
sub
fmul
adc
stc
ds
mov
fdivrp
rcr
in
pop
in
or
xor
leave
jae
nop
push
mov
cmp
cmps
sar
mov
into
or
inc
ds
leave
xchg
sub
cmp
fcmovb
je
pop
std
jae
cmp
xor
pop
jmp
or
inc
aad
addr16
jno
jge
xchg
nop
xchg
cmp
bound
inc
cmp
sbb
inc
jns
addr16
add
cmps
cld
push
dec
mov
inc
hlt
xor
mov
xchg
retf
push
data16
test
jae
cs
push
in
jno
dec
(bad)
and
lds
(bad)
xchg
ds
je
push
loope
sbb
sbb
pusha
sub
(bad)
lock
or
inc
add
mov
inc
inc
outs
ss
out
and
inc
stos
dec
jl
pop
in
rol
xchg
or
daa
outs
js
xor
int3
(bad)
jnp
pusha
pop
jge
cmps
and
dec
cld
movs
or
jo
xchg
sti
je
push
jo
fisub
mov
or
dec
inc
les
sbb
mov
mov
cdq
jp
sbb
mov
nop
in
nop
outs
sbb
icebp
pop
lds
rcr
pop
(bad)
loopne
inc
frstpm(287
shr
in
fistp
stos
(bad)
mov
ins
ret
xchg
mov
into
or
daa
push
xor
inc
adc
jmp
cmp
dec
rol
xchg
sbb
jmp
outs
out
cmp
out
mov
mov
mov
dec
sub
jmp
pop
dec
xchg
jg
or
in
js
iret
int
repz
jl
sub
push
stc
and
dec
das
sahf
stos
inc
retf
or
inc
mov
scas
jecxz
dec
jno
sbb
cld
fisub
repnz
imul
dec
aad
pop
push
xchg
lahf
out
fwait
and
xchg
ret
dec
mov
mov
jno
dec
js
shl
out
fwait
or
or
and
sbb
popf
and
cmp
inc
jnp
and
and
xchg
lods
push
adc
sbb
stc
aam
pushf
inc
leave
cdq
jl
(bad)
push
(bad)
pop
test
cdq
nop
(bad)
adc
add
fnsave
push
cmp
idiv
inc
aaa
jmp
test
dec
mov
add
mov
xchg
adc
dec
pop
jle
add
and
add
ror
lahf
sbb
mov
das
push
xor
outs
jmp
in
pop
mov
sbb
das
(bad)
ja
repnz
std
js
cld
je
pop
leave
xchg
or
imul
push
test
adc
push
pop
mov
sub
inc
int3
push
pop
inc
xchg
or
and
das
ret
sbb
adc
stc
daa
test
(bad)
push
add
mov
mov
mov
cmp
cmp
jns
out
imul
(bad)
jno
or
cli
pop
fwait
repz
out
iret
mov
cmp
(bad)
enter
jmp
(bad)
and
push
stos
aad
scas
xor
push
add
push
rcr
repz
inc
cld
in
jg
sub
and
hlt
mov
cmp
mov
or
fcmovnbe
add
popa
ret
add
jg
and
in
mov
clc
xchg
mov
sbb
hlt
cmp
(bad)
mov
sbb
xchg
jmp
minps
xor
pop
les
cmps
imul
outs
and
mov
jo
push
dec
sbb
jp
inc
xchg
adc
xor
(bad)
mov
es
ret
cdq
xor
loope
nop
add
xchg
sub
or
xchg
push
icebp
mov
ret
outs
mov
and
dec
lea
push
dec
mov
popa
sbb
inc
mov
sbb
sub
and
dec
int
cld
paddb
cwde
mov
xor
int3
cmp
cs
cmp
push
scas
xor
vphsubwd
inc
rcr
pop
adc
ja
push
jp
psrlw
and
ficomp
or
ins
in
stc
es
in
pop
pop
xchg
ds
add
push
fnstenv
adc
loope
nop
cli
pop
pusha
mov
and
sbb
std
into
fadd
mov
out
pop
cmp
(bad)
movs
aas
mov
fs
sub
jo
shl
mov
sbb
mov
gs
sbb
mov
fmul
popa
mov
jl
dec
ds
mov
icebp
and
jg
adc
jo
fldcw
popa
mov
pop
inc
jl
shr
ror
imul
sub
nop
jl
lods
aaa
push
pop
mov
lock
push
iret
adc
bound
lea
int3
and
test
dec
jg
jmp
fs
push
loope
pop
sub
daa
and
fs
mov
outs
pop
mov
cmp
mov
das
in
jo
repnz
cld
ret
push
push
daa
jae
push
retf
aad
call
jns
popf
pop
mov
icebp
cmp
sbb
add
inc
jle
test
je
fld
shl
dec
int3
mov
push
add
adc
mov
or
stos
jne
sahf
lock
(bad)
std
(bad)
arpl
push
in
call
mov
das
xor
add
jae
aam
and
xor
dec
jg
add
iret
jns
push
out
gs
or
jmp
push
scas
xchg
nop
add
loopne
mov
cmp
inc
pop
mov
es
punpckhdq
push
repnz
ror
jb
and
jl
adc
sbb
and
xchg
fsubr
lods
nop
addr16
fdiv
adc
push
xor
scas
jne
popa
ret
cmp
pop
inc
cs
add
mov
add
xor
dec
pusha
cli
xor
mov
push
mov
js
inc
in
mov
sub
aam
retf
dec
int3
push
sbb
outs
mul
ficom
(bad)
or
dec
pop
je
repz
test
or
xchg
out
adc
mov
sahf
pop
sub
loopne
mov
adc
stos
hlt
push
or
mov
and
cmps
in
ss
mov
xchg
add
jge
(bad)
dec
loop
icebp
into
movs
es
sub
sti
in
fild
pop
sbb
jmp
sub
mov
ins
out
fwait
pop
push
arpl
mov
xchg
sbb
imul
in
xchg
sub
fld
push
movs
fadd
cmp
or
push
cmp
add
movs
xchg
sub
xchg
add
inc
out
sbb
push
pop
lods
fstp
xor
jno
stc
xchg
xor
inc
mov
add
adc
das
outs
push
ss
jae
mov
or
imul
adc
sbb
pop
lods
or
xchg
div
and
sar
and
(bad)
mov
inc
sahf
inc
add
aam
inc
ja
or
pop
xchg
ret
xchg
cmp
jo
popa
pop
mov
or
xchg
pop
(bad)
mov
xchg
sar
adc
data16
ret
mov
icebp
test
and
cmps
fnstsw
push
bound
fcomp
jmp
test
bound
(bad)
sbb
mov
xchg
movs
sbb
mov
and
(bad)
pop
sub
sbb
leave
inc
daa
add
push
xor
(bad)
sub
push
jbe
neg
ret
cmp
dec
(bad)
mov
leave
push
call
sub
js
mov
or
mov
popa
xchg
loopne
push
loope
imul
(bad)
js
mov
test
adc
cmp
jg
scas
mov
repz
dec
inc
inc
mov
scas
dec
(bad)
mov
and
out
dec
jmp
adc
rol
movs
sbb
call
pop
imul
mov
out
test
adc
mov
mov
add
iret
jge
rcr
sub
inc
jb
xchg
imul
xchg
dec
jmp
bound
adc
xor
mov
popf
push
jae
cs
hlt
inc
inc
test
cs
push
sbb
outs
das
adc
daa
pop
in
adc
xchg
push
mov
push
rcl
(bad)
inc
mov
rol
cmp
loopne
xchg
dec
iret
jge
fnstsw
jge
lods
cli
iret
(bad)
cmp
and
ja
rol
icebp
mov
retf
arpl
dec
xor
and
inc
je
push
mul
pop
in
cmp
(bad)
cmps
fimul
shl
hlt
xor
xchg
stos
inc
cdq
push
jl
scas
popa
les
pop
jb
gs
pop
ret
scas
pop
mov
js
cmp
js
popa
xchg
inc
leave
mov
cli
dec
addr16
xor
pushf
cmps
jbe
jl
je
pop
xchg
jmp
cmps
push
test
fisttp
mov
es
and
or
push
cdq
pop
dec
stos
scas
xchg
ret
jp
jl
data16
out
push
movs
fldcw
shr
je
dec
(bad)
xor
sub
xchg
call
mov
sub
sub
mov
push
ja
icebp
or
jbe
or
ret
fistp
jo
dec
iret
fwait
xor
push
mov
xor
das
cmp
imul
fwait
ja
adc
adc
inc
es
nop
mov
retf
into
(bad)
fadd
mov
fwait
pop
and
stc
in
dec
je
stc
rol
mov
and
jae
repnz
enter
aaa
push
cmp
push
das
imul
clc
mov
aad
push
jb
dec
sub
movs
add
aam
xchg
pop
sub
sub
mov
aas
bound
lock
outs
jecxz
outs
in
ret
icebp
xchg
test
inc
jp
jl
pushf
aad
sbb
mov
xchg
add
loop
(bad)
rcr
mov
jg
dec
popf
mov
sbb
adc
lods
call
leave
mov
and
mov
jg
mov
outs
sbb
add
les
inc
call
leave
mov
xchg
scas
out
mov
fdiv
test
icebp
cmp
sbb
xchg
jnp
mov
dec
mov
add
cmp
(bad)
adc
jp
clc
fadd
js
mov
xor
sbb
add
(bad)
adc
hlt
enter
add
gs
popa
push
in
rcl
out
push
sbb
push
mov
dec
(bad)
ins
push
add
pop
xchg
leave
imul
pop
aad
jbe
rol
dec
push
dec
fist
scas
xchg
jnp
push
and
sbb
sub
mov
jno
xor
mov
dec
int3
loopne
mov
jbe
inc
rol
mov
push
ror
and
loope
stos
xchg
pop
popa
sbb
cwde
sub
repz
and
dec
dec
(bad)
je
xor
in
jmp
movs
xlat
enter
mov
or
mov
push
mov
out
mov
outs
xchg
push
sbb
jmp
pop
fistp
mov
mov
out
pushf
in
repz
xor
out
pop
dec
inc
test
mov
jle
lock
ja
pop
mov
sar
mov
xchg
pop
cmp
xchg
retf
sub
push
aaa
imul
test
pop
pop
jmp
mov
js
lods
inc
mov
push
jo
mov
movs
ret
pop
xchg
fcomp
sub
sub
pop
pop
or
or
aaa
sbb
in
sub
push
sbb
rol
inc
pop
ret
pop
adc
adc
mov
and
and
mov
(bad)
cmp
xor
aas
xchg
mov
adc
pop
push
and
adc
imul
ss
cmp
sub
and
xor
sub
xchg
daa
add
lock
ins
lahf
jmp
fdivr
cld
pop
mov
sbb
sub
in
pushf
push
popa
sahf
xchg
cmps
test
and
adc
call
call
jmp
aaa
test
pop
inc
jge
gs
pop
jecxz
inc
out
push
lods
stos
add
loop
xor
nop
sbb
dec
xor
data16
sub
pusha
pop
adc
(bad)
mov
pop
mov
xor
out
jbe
lods
dec
dec
cmps
loopne
dec
mov
or
fsubrp
mov
pop
jbe
shl
dec
cwde
sti
sbb
fcom
mov
ror
loope
xor
ds
stc
or
cmp
out
mov
push
cwde
into
in
cmp
push
lea
jne
lea
sbb
stos
jb
inc
mov
lahf
mov
push
adc
jge
cmp
movs
jae
gs
push
leave
pusha
(bad)
cmp
pop
add
sbb
pop
and
test
adc
lea
in
cmp
jmp
retf
jge
and
mov
jne
push
ja
bound
cmps
cmp
dec
arpl
imul
sbb
es
pop
pushf
sub
xchg
xor
stc
xor
shr
push
and
lock
sub
xchg
sub
imul
enter
shl
pop
sbb
cmps
jae
cmps
mov
mov
retf
or
adc
xchg
fcomi
stc
jbe
xchg
jecxz
(bad)
mov
inc
inc
enter
pop
repz
or
pusha
mov
inc
lea
mov
xor
mov
test
int
inc
pop
and
add
sbb
sbb
inc
sbb
pop
and
popa
push
adc
adc
scas
or
push
sub
push
inc
xchg
rcr
dec
sar
mov
mov
or
mov
ret
push
mov
fisub
push
in
(bad)
mov
xchg
mov
cmp
hlt
cmp
dec
push
nop
inc
mov
xchg
add
xchg
icebp
mov
sbb
arpl
sar
or
xor
xor
push
lds
cmps
sub
data16
mov
mov
cmps
lods
ins
inc
outs
xchg
fcomp
in
lods
push
xor
loop
and
lea
ror
in
jb
push
cmp
mov
mov
add
pushf
pop
(bad)
xchg
imul
jne
xchg
mov
es
inc
(bad)
or
cs
mov
stc
mov
loope
xchg
out
mov
cmp
je
dec
in
pop
rcr
mov
(bad)
in
lods
mov
mov
cwde
out
pop
sbb
out
mov
enter
ret
mov
fbld
mov
mov
add
fs
hlt
jecxz
test
fs
pop
jg
jge
or
stos
test
pusha
aad
outs
out
mov
mov
dec
mov
xor
or
mov
shl
sbb
push
mov
cmc
or
and
nop
jbe
push
jg
inc
inc
or
mov
outs
mov
adc
push
pop
stc
in
sbb
stos
pop
fidivr
les
sub
add
fsubr
inc
dec
aaa
pop
or
pop
cmps
push
sub
in
gs
add
xchg
xchg
mov
pushf
xor
scas
xor
dec
ret
dec
cmp
(bad)
ds
fisttp
in
ins
jl
push
icebp
jbe
inc
xchg
adc
ja
test
jbe
mov
(bad)
(bad)
gs
mov
and
xchg
or
call
jcxz
xchg
jge
push
stos
add
mov
test
test
mov
leave
jno
mov
push
ins
xchg
ret
lahf
fs
cwde
outs
adc
jp
lock
das
sti
adc
cmp
and
jmp
xchg
ss
inc
cdq
retf
cmp
jecxz
or
retf
jne
(bad)
sub
dec
imul
aam
inc
jnp
(bad)
sar
es
and
jl
dec
mov
mov
jno
fs
push
jge
push
add
mov
stos
or
lds
mov
movs
(bad)
mov
outs
add
and
cwde
mov
loope
mov
pop
cmp
bswap
sar
je
mov
cli
retf
setp
mov
jno
repnz
fnstenv
push
xor
xor
cwde
push
sti
mov
aad
ret
shl
or
mov
pop
inc
imul
cmps
aas
push
jne
loopne
jns
and
mov
daa
sub
pusha
in
aaa
rcr
jl
aad
js
pinsrw
outs
inc
cmp
cmp
js
and
push
xchg
cmp
int3
pushf
out
xor
in
cmp
mov
lods
out
inc
mov
sub
in
addr16
loopne
aas
fstp
jo
jecxz
push
push
fcom
push
ins
mov
call
neg
sbb
push
xor
mov
test
enter
retf
movs
xchg
mov
jo
inc
xor
retf
(bad)
sub
xor
mov
pop
shl
mov
arpl
popf
test
add
(bad)
shl
bound
pop
xor
add
shr
sbb
lock
test
and
aas
dec
inc
or
fsubr
sti
mov
pusha
push
das
jb
jmp
xchg
xchg
test
fwait
pop
cwde
lods
xchg
cmp
rcr
sub
dec
cwde
data16
or
dec
mov
push
pop
cmps
and
out
mov
ss
imul
mov
ins
mov
movs
push
cmp
les
mov
sub
xchg
shl
inc
mov
and
in
adc
fistp
repz
jmp
cmps
sti
jp
mov
cmc
jp
xchg
inc
mov
lock
loop
loope
std
stc
(bad)
or
jl
in
and
sub
cmps
mov
mov
data16
push
sar
dec
popf
dec
out
ins
jecxz
jae
xlat
in
push
lods
xchg
shl
(bad)
mov
pop
push
lahf
imul
std
add
cmp
xchg
mov
movs
sti
push
fcmove
push
or
aad
push
or
push
add
shl
aas
gs
xchg
dec
inc
sub
cmp
leave
outs
rcl
adc
pop
fisub
jns
out
int3
ja
inc
(bad)
pop
not
repnz
jle
fisub
fild
jae
fidiv
mov
imul
ror
bound
lds
mov
stos
mov
xchg
bound
outs
pop
adc
int
push
loope
rcl
dec
push
(bad)
mov
das
xor
sub
xchg
jo
ret
ja
xchg
imul
inc
sbb
inc
xlat
repz
mov
mov
jge
hlt
mul
(bad)
movs
sbb
xor
cmp
mov
data16
ret
pop
cdq
(bad)
xchg
push
mov
loope
out
mov
gs
cmp
add
dec
sub
(bad)
fisubr
xor
sub
pop
enter
mov
aaa
push
mov
test
add
xor
pop
fwait
xchg
jmp
leave
leave
mov
ret
sahf
sbb
mov
int
jp
jl
addr16
push
xchg
pop
scas
mov
js
icebp
add
test
lods
push
imul
mov
adc
cs
sbb
ret
mov
mov
fcmovnbe
pushf
dec
dec
or
adc
mov
retf
mov
(bad)
loopne
adc
inc
xor
push
adc
or
fst
mov
or
jb
pop
rol
xor
dec
data16
leave
icebp
fnstcw
pop
fistp
cmp
cmps
jne
pop
lods
or
ins
fs
in
movs
cli
callw
xor
mov
xchg
sar
ror
push
mov
cmps
mov
sbb
ret
test
cmp
repz
jge
mov
ror
fcomp
xchg
dec
dec
xor
ins
jo
jmp
f2xm1
or
(bad)
adc
ds
xchg
pop
cld
rcr
jbe
jmp
test
fisub
pop
xchg
mov
dec
fdivr
mov
sub
sbb
inc
jne
cmp
sbb
ss
aad
fadd
jg
pop
rol
and
pop
xchg
(bad)
push
adc
sub
adc
xchg
mov
cwde
mov
mov
test
push
shr
shl
adc
mov
int3
pop
pop
mov
push
xor
mov
jnp
call
sahf
xchg
ins
pop
sub
add
icebp
imul
loopne
mov
aaa
rol
in
ret
jns
jo
xor
cmps
retf
inc
lods
fdivr
sbb
sub
jle
in
jg
fnsave
jg
pop
pop
test
cmp
or
or
add
push
bound
cdq
jecxz
push
loop
fwait
fs
gs
les
mov
aaa
sahf
ja
push
rcl
pusha
push
fldenv
popf
push
scas
jmp
push
jne
xor
dec
cmp
in
xchg
xor
stos
out
scas
cmp
scas
jns
mov
(bad)
mov
aas
fwait
mov
and
jnp
retf
stc
scas
mov
inc
in
les
inc
repnz
xor
inc
dec
or
push
mov
dec
mov
pop
nop
push
aaa
xor
push
into
mov
and
sti
sub
popf
outs
xor
add
jecxz
pop
xor
pop
xor
pop
xchg
outs
js
mov
shr
mov
jle
ds
mov
mov
sub
ss
sar
or
push
xor
adc
std
in
popf
(bad)
fwait
and
jg
enter
pop
adc
mov
loop
sub
jmp
pop
in
ins
cmp
sti
shr
ret
(bad)
xchg
jle
mov
mov
movs
adc
(bad)
repnz
aad
or
imul
sub
clc
add
mov
pop
lods
mov
cwde
int3
jmp
mov
int
sub
mov
stos
mov
push
push
arpl
out
fild
rol
loopne
mov
mov
adc
les
stos
shr
arpl
push
gs
in
jge
sbb
push
out
shl
cli
cmp
in
add
adc
div
js
or
or
iret
push
jmp
lahf
xchg
cmp
dec
dec
repnz
sub
or
cmp
lea
jle
icebp
shr
xchg
sbb
ret
adc
mov
ds
add
mov
jl
mov
test
inc
(bad)
and
xchg
mov
xor
(bad)
cmp
sbb
ds
push
or
out
xchg
rcl
mov
jmp
xchg
(bad)
retf
fcmove
sahf
shl
sahf
jecxz
fidiv
lea
adc
stos
lahf
cmp
(bad)
outs
or
dec
mov
xchg
je
xor
scas
jecxz
jbe
popa
imul
inc
cwde
mov
popa
jmp
and
test
(bad)
mov
sbb
ins
push
push
jns
sbb
sub
lods
adc
xchg
jge
pop
pop
mov
mov
test
pop
pop
mov
test
retf
rcl
aam
leave
cmps
push
out
stc
cs
sub
pop
jbe
mov
inc
or
or
sbb
sbb
cli
jae
repnz
hlt
shr
push
or
pop
mul
sub
mov
mov
shl
mov
sub
push
test
push
adc
jbe
jl
mov
dec
xchg
(bad)
int3
es
adc
call
ror
das
xchg
fadd
xchg
cmp
or
mov
mov
stos
(bad)
pop
adc
rcr
or
mov
push
cwde
call
pop
jb
cdq
push
push
add
cmp
jl
add
dec
rep
adc
ins
(bad)
fisttp
loop
inc
mov
outs
rcl
arpl
xchg
(bad)
dec
sub
int3
xchg
xchg
(bad)
ds
or
(bad)
sub
inc
imul
mov
or
mov
ss
sub
in
push
or
jae
cwde
mov
inc
xor
enter
fmul
stos
pushf
push
sub
cdq
std
sbb
outs
pop
sub
and
adc
mov
xchg
xor
test
mov
sub
sub
(bad)
mov
fmul
pop
popf
mov
mov
xchg
sub
adc
test
pop
xchg
leave
xchg
pop
cwde
test
pop
mov
mov
ror
je
push
fdivr
icebp
aad
enter
cmp
xor
inc
add
xchg
push
sub
cs
jmp
rcl
repz
sub
sbb
inc
ins
imul
jl
inc
loopne
inc
test
ja
pop
mov
mov
jecxz
dec
jge
fisub
xchg
jae
mov
xchg
data16
shl
xchg
mov
(bad)
adc
out
gs
dec
and
dec
sub
call
and
data16
jg
xlat
xchg
sar
jae
pusha
lods
dec
inc
xor
xchg
sub
icebp
cld
push
and
mov
or
shr
push
nop
sbb
push
inc
mov
imul
(bad)
mov
or
lahf
dec
outs
sub
cmp
dec
repnz
pop
xor
mov
mov
call
xor
xchg
and
push
sbb
cmp
clc
push
dec
(bad)
lods
sbb
jo
into
ds
mov
lea
sbb
dec
fcomip
pop
sub
and
push
jno
adc
repz
cmp
lock
sbb
pop
xchg
push
ss
push
inc
fiadd
jns
enter
(bad)
pop
dec
(bad)
int3
mov
clc
call
mov
sbb
iret
jne
dec
pop
xchg
aas
or
(bad)
(bad)
fwait
stos
mov
mov
push
enter
cmp
xor
loope
fild
mov
les
aam
ret
lahf
or
into
in
cmp
sub
push
inc
cld
inc
mov
loopne
or
ret
sbb
jmp
jl
stos
inc
push
cld
pop
pop
mov
into
xchg
xor
lea
adc
neg
cmp
and
and
add
sbb
test
fisubr
inc
retf
sbb
popa
pop
aas
pop
shl
std
inc
adc
addr16
loopne
inc
clc
pop
sahf
jge
push
in
or
xor
jmp
pusha
mov
shr
jne
in
xchg
cli
and
mov
(bad)
lahf
rol
inc
ret
mov
and
lods
cmp
inc
call
jg
test
lahf
pusha
jmp
pop
div
fsub
icebp
xchg
adc
and
test
bound
jns
cmp
pop
sbb
mov
aad
lea
(bad)
xor
bound
sar
leave
aas
es
jle
dec
mov
mov
cmp
add
stos
xchg
xor
mov
mov
jne
pop
in
inc
pop
jo
xchg
jp
jno
lock
cmp
pop
pushf
jne
dec
mov
lods
fiadd
into
or
stos
mov
push
shr
int
ds
shr
out
outs
out
sub
adc
jne
jp
xchg
mov
mov
and
lahf
ret
add
jne
add
sbb
inc
or
inc
jnp
shl
aad
mov
sub
jp
fcom
mov
adc
cdq
or
cdq
popf
jns
jmp
es
xor
or
fsubr
mov
and
and
aad
mov
fwait
adc
adc
mov
out
dec
retf
outs
dec
jge
add
pusha
and
shr
jge
(bad)
xor
inc
adc
mov
jge
(bad)
mov
xchg
pop
dec
cmps
jne
in
push
mov
rcl
jae
arpl
into
push
out
push
mov
pop
jns
pusha
stos
dec
bound
iret
xor
xlat
sbb
cld
out
cdq
ret
cmp
inc
(bad)
into
lock
inc
add
pusha
shl
retf
add
push
(bad)
sub
call
imul
shr
add
int3
cld
les
adc
mov
test
cmp
xchg
addr16
pop
div
shr
mov
sahf
push
cdq
mov
dec
neg
cmp
push
fld
retf
push
mov
scas
rol
mov
in
fisttp
aad
xchg
or
inc
jbe
jbe
jle
fmul
cmc
inc
sbb
xor
sub
cli
jne
xchg
pop
adc
cs
xlat
mov
les
xlat
or
pop
aam
sbb
leave
out
retf
rcr
inc
pop
cmps
mov
lea
jns
mov
fild
call
(bad)
add
shr
cwde
pop
xchg
loope
mov
or
inc
jnp
xor
pushf
mov
lods
sbb
movs
test
dec
out
mov
mov
in
popa
pop
jb
aad
pop
lahf
addr16
into
mov
fcomp
cmp
xor
mov
dec
sub
loopne
call
mov
add
retf
stos
ret
lea
enter
mov
enter
ss
cmp
int
ffreep
(bad)
psubd
and
xchg
sub
mov
dec
push
jmp
sbb
sbb
push
dec
cmp
dec
ja
scas
push
enter
repnz
cmc
cld
fwait
fwait
jno
std
fcomip
adc
mov
push
(bad)
pop
xor
jne
hlt
(bad)
add
lods
hlt
std
ds
cs
popa
mov
(bad)
adc
inc
mov
loop
test
inc
repz
jl
jo
test
test
and
xchg
es
adc
mov
and
add
test
rcr
dec
adc
cdq
or
cli
xchg
mov
mov
adc
fisubr
mov
js
imul
je
vphadduwd
jo
imul
arpl
aas
pop
mov
movs
sbb
in
test
cmp
mul
inc
cs
jbe
pcmpgtb
das
adc
xchg
out
push
mov
mov
(bad)
jo
pop
xor
fstp
sbb
xor
mov
icebp
pop
mov
inc
and
cmp
int3
cmp
xchg
std
loop
xlat
mov
movs
pusha
sub
sar
popa
sub
sbb
outs
push
xchg
or
pop
imul
pop
push
sub
(bad)
fisttp
xchg
cld
movs
std
push
pop
ins
lea
fsubr
sub
pop
push
pop
adc
ss
out
mov
jbe
in
jo
adc
ds
fmul
pop
add
sahf
cmc
fcom
jge
mov
pop
test
inc
add
sub
xchg
cmp
push
outs
lods
scas
(bad)
xchg
js
sahf
cmp
xor
cmp
sub
neg
xchg
ret
lock
mov
aam
xchg
ret
cld
cmovns
leave
mov
(bad)
mov
mov
cwde
sti
xchg
lock
stos
push
stc
jb
mov
or
inc
or
jnp
data16
out
pop
push
and
jge
fwait
enter
xor
sbb
inc
xlat
mov
dec
call
inc
push
(bad)
cmp
add
and
cdq
inc
out
ret
push
add
adc
fwait
xor
std
jmp
dec
xor
mov
les
jle
or
int
jbe
sbb
cdq
jge
cli
in
mov
daa
fdiv
popa
fnstsw
outs
data16
repz
lea
out
and
das
lea
dec
add
stos
sub
ins
jbe
adc
cmp
cld
out
aam
ret
mov
mov
add
mov
in
cmp
rcl
lea
lahf
dec
mov
in
jp
pop
icebp
jnp
cli
xor
std
outs
mov
mov
loope
ffree
xlat
mov
inc
push
in
shl
dec
ins
in
and
and
loopne
and
icebp
add
jge
pop
pop
jmp
mov
fild
dec
adc
scas
mov
stos
push
xchg
and
cs
ss
mov
mov
imul
or
jle
or
loopne
retf
jge
pop
rcl
ja
mov
loopne
fidiv
mov
outs
popa
ds
ja
shr
xchg
retf
jns
cmps
xor
add
(bad)
das
sub
inc
and
pop
aad
mov
ins
pop
jne
push
xor
enter
adc
adc
lahf
adc
fdivr
and
into
mov
dec
or
xchg
fcmovnb
scas
leave
jge
int
(bad)
jg
ret
adc
sub
hlt
mov
dec
or
add
xchg
xor
fdivr
(bad)
push
xor
jge
test
mov
and
out
ss
movs
nop
mov
cdq
addr16
sbb
dec
sbb
jne
sbb
xor
ds
test
xlat
push
lds
or
pusha
and
push
std
jb
inc
fdivp
xchg
daa
inc
(bad)
pop
mul
dec
sbb
ins
in
addr16
sub
jge
into
into
adc
push
inc
sub
mov
pop
xchg
push
das
push
jl
jb
jl
in
cmp
dec
add
xchg
xchg
rol
sahf
lahf
dec
daa
and
dec
test
sahf
movs
jle
sub
adc
xor
inc
pop
aad
push
pop
ret
bound
mov
cmps
cmp
fdiv
push
stos
fs
stos
push
mov
sbb
add
mov
adc
sub
(bad)
imul
jne
sbb
out
aas
mov
das
retf
stos
call
push
ja
mov
test
mov
in
je
mov
(bad)
fnstenv
add
cli
pusha
sbb
xlat
mov
mov
fdiv
cmp
idiv
popf
inc
vmovlhps
mov
jmp
pop
fistp
ret
add
lock
stc
and
ins
ja
sub
rol
loope
call
inc
dec
sbb
or
xchg
sub
shl
repz
sub
sbb
xor
and
aam
je
retf
push
jns
ficom
pop
sbb
pop
jl
mov
fnsave
sub
bound
clc
sbb
out
fdiv
pushf
inc
mov
(bad)
(bad)
ins
sub
push
push
into
out
cmp
lods
ins
or
and
mov
push
xchg
sbb
mov
jecxz
jo
(bad)
nop
aaa
lea
inc
shl
xchg
(bad)
das
js
daa
sbb
hlt
sub
in
lods
gs
cmp
sbb
sbb
dec
iret
test
xchg
sti
(bad)
addr16
or
adc
loop
and
int3
add
dec
sub
fmulp
shr
shl
out
xchg
adc
jbe
lock
scas
add
cmp
int3
dec
push
mov
imul
lods
adc
and
loopne
lahf
cmps
jb
inc
xor
call
inc
push
shr
or
and
push
cmp
pop
mov
add
mov
adc
out
or
rcl
out
popf
and
add
dec
pop
mov
sti
push
jmp
dec
sbb
jmp
std
stc
xchg
jp
or
popf
aad
xchg
and
mov
ror
(bad)
mov
xchg
mov
mov
or
add
push
stos
lock
inc
ret
lods
scas
test
mov
cli
repnz
pop
push
jmp
int
push
jmp
fs
push
rcl
mov
jae
inc
or
jmp
rcr
cli
and
mov
into
xchg
data16
add
adc
in
jge
xchg
add
stos
(bad)
jle
cmp
jno
sbb
mul
cmp
sar
sbb
(bad)
icebp
xchg
pop
adc
jp
jecxz
and
scas
mov
jge
dec
mul
cmp
add
xor
out
stos
pop
(bad)
stos
(bad)
and
and
ficomp
daa
mov
sbb
push
fs
inc
stos
xor
cmp
push
mov
jnp
and
mov
xchg
clc
sub
jle
xor
test
adc
lods
push
jg
sbb
pop
mov
pop
retf
xor
cmp
ret
popa
add
cwde
clc
cmp
dec
cld
or
mov
push
les
call
mov
mov
add
cld
pop
lods
adc
push
std
bound
add
clc
into
scas
xchg
mov
je
dec
ficomp
mov
scas
addr16
movs
pop
gs
or
pop
sbb
(bad)
(bad)
(bad)
sbb
push
and
xchg
cmp
imul
test
jno
xor
cwde
adc
gs
dec
pop
daa
cld
dec
loopne
sbb
add
cli
cdq
xor
push
movs
xor
xor
sti
sbb
xor
push
xor
fild
cmps
mov
cmps
or
loope
push
bound
add
or
hlt
stos
cld
aam
or
fsubp
mov
(bad)
jae
push
outs
pop
ins
sub
retf
outs
outs
xchg
cld
iret
jecxz
cmp
ss
stos
ins
jae
std
je
sub
(bad)
lods
xchg
adc
popf
lea
fisttp
or
fwait
mov
mov
sbb
mov
jg
or
pop
pop
out
cmp
ins
retf
rcl
adc
xchg
arpl
xor
and
ins
das
dec
lahf
mov
add
xchg
aam
rol
movs
retf
scas
out
into
lods
das
lea
sbb
fcom
dec
loop
clc
cwde
add
dec
pop
scas
jo
sub
mov
cmp
(bad)
pop
mov
xchg
adc
lods
stc
and
cmps
jecxz
jp
or
pop
idiv
shl
popa
jne
adc
add
cmp
fist
jecxz
push
xor
in
mov
fs
in
and
mov
daa
xor
je
dec
adc
fisttp
fldcw
jbe
aam
lds
out
push
xchg
js
push
inc
xchg
out
xchg
iret
or
inc
inc
jne
test
or
mov
mov
push
ret
cli
shl
pop
and
in
mov
(bad)
sub
cmp
adc
hlt
ins
or
test
cld
or
ss
dec
xchg
sti
dec
lds
adc
add
jge
stos
aad
(bad)
pusha
mov
cmps
std
inc
hlt
and
ss
xor
fwait
sbb
dec
mov
nop
sub
sub
enter
mov
jmp
int
je
xlat
in
xlat
mov
add
jnp
xor
sub
mov
in
push
not
(bad)
and
test
not
xlat
xchg
fidiv
push
push
arpl
imul
out
sbb
adc
pop
shl
into
jp
cmp
lea
movs
test
xchg
popa
pop
jmp
jmp
inc
addr16
push
mov
jbe
hlt
sbb
loope
pop
aaa
adc
hlt
pop
sub
loop
sub
cs
clc
ins
sbb
data16
jbe
imul
push
pop
sti
retf
jmp
xor
or
cmp
dec
and
xor
jmp
(bad)
pop
(bad)
push
and
arpl
scas
out
dec
clc
pop
ret
ja
aas
fidiv
cmps
sbb
daa
dec
lock
dec
mov
sti
stos
mov
sub
and
(bad)
xchg
leave
xor
lahf
int3
adc
movs
retf
pop
loope
pop
xchg
inc
push
mov
repz
dec
xchg
lock
ds
add
test
int3
or
adc
retf
pop
cmp
fs
jns
mov
dec
outs
fs
push
add
test
push
jle
xchg
lock
jae
sahf
leave
add
aam
addr16
xor
jnp
mov
loopne
add
xchg
mov
xchg
not
cmps
cwde
dec
sub
leave
lods
cmps
and
fidivr
dec
shr
jne
and
and
inc
adc
sbb
sbb
push
push
cmp
mov
pushf
cld
test
(bad)
cld
xor
(bad)
dec
add
sub
inc
retf
mov
mov
jnp
scas
es
sbb
(bad)
dec
xor
and
add
ret
in
loop
dec
cmc
sbb
and
inc
ja
jmp
stos
jmp
jp
jb
mov
mov
fmul
sub
mov
jnp
not
sub
jnp
lods
mov
jbe
or
jp
dec
sahf
stos
mov
sti
mov
or
mov
lods
ffreep
fiadd
jmp
test
out
call
mov
shl
sbb
mov
popa
adc
adc
push
push
dec
scas
add
rol
add
fdiv
sub
sbb
je
(bad)
(bad)
jmp
dec
ret
loopne
das
push
fnstsw
dec
mov
mov
out
aam
(bad)
or
(bad)
jp
xor
mov
jmp
jno
cmp
pop
jns
out
hlt
out
cmps
dec
test
scas
or
lods
add
inc
inc
mov
cmp
sub
hlt
xor
mov
je
test
pop
test
or
fmulp
sbb
popa
sti
push
ins
or
push
test
cmp
pop
(bad)
out
inc
call
jge
push
test
inc
or
(bad)
xor
fimul
outs
ret
pop
ins
rol
aad
ror
mov
mov
stc
in
add
mov
xor
fdivr
retf
jnp
xor
mov
cdq
iret
and
fst
inc
dec
es
adc
jge
sahf
mov
pop
ret
mov
jo
sub
and
inc
aaa
push
repnz
jg
sbb
outs
rol
pop
outs
adc
push
mov
cmps
arpl
push
aas
mov
or
mov
push
and
bound
cdq
and
cmp
(bad)
ja
out
pop
cmps
(bad)
sub
imul
sbb
lods
fisub
xlat
xchg
stos
mov
in
pop
mov
sti
adc
test
movs
shr
push
add
adc
cmps
push
jle
fmulp
lods
pop
adc
mov
sub
push
call
cmp
push
cmp
sar
outs
test
je
xchg
cmp
cs
cmp
and
(bad)
movs
mov
repnz
pop
stc
clc
jbe
sub
jge
bound
cmps
add
mov
stos
jge
sbb
or
outs
(bad)
xchg
xchg
sub
in
ror
je
and
mov
in
(bad)
test
nop
mov
dec
ffree
mov
dec
push
popf
mov
cmc
aaa
daa
ins
add
xchg
out
cmp
mov
inc
cmp
fwait
sbb
call
movs
dec
dec
enter
push
aam
int
push
pop
lods
pop
mov
sbb
cmp
je
mov
xor
cmp
xor
mov
loopne
dec
stos
and
and
dec
fst
inc
mov
sbb
iret
push
pop
fwait
inc
stos
clc
mov
(bad)
aaa
push
outs
inc
std
cmps
or
gs
mov
pop
aam
mov
test
inc
sub
sbb
ja
push
pop
in
mov
xor
jbe
sub
stos
retf
mov
pop
loop
push
sar
or
cld
sti
fnstsw
stos
shr
loopne
int3
add
test
push
mov
xchg
(bad)
sahf
xor
cmps
scas
lods
add
js
call
dec
cmp
pop
icebp
je
pop
pop
pop
fmul
icebp
ficomp
mov
pop
jnp
jmp
mov
adc
cmp
add
(bad)
cmp
loop
mov
(bad)
pop
sbb
ret
and
faddp
inc
sub
pop
dec
and
sbb
cmps
jne
sbb
enter
mov
add
adc
mov
repz
aas
add
fxtract
ret
push
jae
dec
leave
jae
and
add
mov
jmp
adc
mov
push
mov
arpl
mov
mov
sbb
pop
cmp
lods
adc
lea
(bad)
jp
retf
scas
push
mov
dec
stos
push
xchg
cmp
cmp
pop
scas
mov
je
mov
fs
and
repz
pop
ss
pop
add
dec
sbb
jmp
xchg
or
adc
les
pop
call
pop
lock
sub
outs
push
dec
or
aas
aam
call
mov
push
enter
ss
cmps
jno
call
push
jg
fnstcw
call
sahf
cmp
ins
mov
pop
cs
mov
scas
cmp
sar
sub
cmp
icebp
adc
jmp
fwait
pop
retf
scas
jbe
cmp
leave
fsubr
lods
addr16
cli
mov
in
imul
hlt
jbe
mov
cmp
and
sar
mov
sbb
mov
adc
cli
inc
int
add
in
in
in
mov
mov
push
cmp
sub
ss
mov
mov
aas
sub
in
cmp
sub
jl
pop
xor
in
lahf
sub
shr
test
sub
cli
pusha
mov
mov
nop
jbe
shl
lock
and
sub
jbe
inc
sbb
ret
and
ins
test
dec
ret
sahf
les
loopne
movs
pushf
push
ret
or
push
scas
mov
sub
out
call
test
(bad)
sub
dec
icebp
cmp
fstp
dec
je
mov
fbstp
dec
jo
push
adc
jns
rcl
mov
rol
pop
xchg
mov
mov
adc
push
lahf
xor
mov
or
dec
out
(bad)
cmp
hlt
lahf
loopne
cmps
mov
psrlq
xchg
les
or
xor
mov
sub
movs
xchg
mov
and
test
sbb
cli
aam
fsub
mov
imul
mov
out
test
ss
and
aaa
pop
pop
pop
push
pop
xchg
mov
in
xchg
in
cmp
fistp
shl
cdq
iret
out
mov
aas
test
in
cmp
aaa
and
inc
mov
aaa
fwait
jns
clc
leave
das
mov
mov
hlt
(bad)
dec
out
int3
mov
sbb
ret
xlat
shl
pop
pop
xor
mov
fisttp
ret
gs
(bad)
neg
push
ret
or
rol
add
pop
icebp
fnstenv
sbb
dec
sbb
rcl
mov
aad
inc
cmc
imul
sub
sbb
iret
retf
xchg
or
fstp
sub
xor
dec
xor
push
das
inc
jge
add
sbb
retf
pop
adc
jmp
lds
outs
xor
daa
or
add
test
fnstsw
push
jbe
imul
repnz
pop
jo
out
mov
pop
lea
es
and
test
jno
push
das
sub
fstp
or
int3
push
mov
pushf
pop
add
sbb
outs
(bad)
(bad)
cli
push
test
mov
mov
lds
aaa
sub
out
xor
push
mov
pop
jge
mov
leave
push
mov
sub
cmp
loop
sbb
xor
xchg
cwde
icebp
adc
cmps
mov
jmp
cmps
fs
pop
xor
adc
cmp
push
xor
cmp
loopne
mov
popf
push
push
in
fwait
es
daa
adc
mov
mov
mov
sar
mov
neg
inc
fimul
push
adc
push
jg
xchg
or
fimul
push
jno
call
mov
push
lods
ret
adc
jae
psllw
into
gs
add
call
inc
and
push
sub
repz
fistp
dec
jl
cmp
push
icebp
jl
aam
jb
dec
xlat
ins
mov
mov
push
repz
or
pop
push
or
icebp
sbb
(bad)
cwde
sub
xor
xor
push
push
pop
pop
xchg
loop
fldcw
sub
call
aaa
mov
dec
adc
jg
push
pop
adc
or
or
pusha
push
pop
jb
and
and
aas
int
xchg
add
jne
pop
mov
lahf
mov
push
cmp
push
shl
xchg
test
cld
dec
ins
ja
push
int3
push
dec
shr
es
in
mov
adc
push
pushf
std
or
(bad)
sub
enter
shr
adc
(bad)
jmp
in
nop
(bad)
pop
jae
imul
xchg
push
mov
cs
sub
(bad)
jbe
mov
adc
dec
adc
ins
pop
add
xchg
jg
in
imul
add
jge
xor
push
sahf
mov
retf
push
(bad)
jb
jge
pop
jmp
jge
icebp
and
jnp
cmps
jle
dec
int3
inc
aaa
imul
xchg
jmp
out
adc
mov
cmp
scas
xchg
cmp
cdq
popf
mov
fldenv
jp
mov
sub
loopne
test
test
xchg
stos
cld
push
jg
fsub
jo
or
fdivr
dec
cmp
mov
jnp
mov
inc
dec
fsubr
pop
push
inc
xor
sbb
push
mov
mov
mov
retf
retf
stc
dec
mov
stos
cmp
shl
mov
mov
dec
lods
mov
inc
test
int3
mov
sub
pop
loopne
dec
mov
fsubr
cs
cmps
movs
push
push
sbb
mov
mov
stos
fcom
sub
mov
inc
push
pushf
sub
pushf
popa
pop
imul
or
dec
hlt
push
call
inc
je
int
das
dec
adc
(bad)
leave
add
xor
lods
add
push
cs
sub
in
int3
pop
pop
dec
mov
daa
mov
test
out
movs
mov
mov
mov
in
push
in
lock
hlt
rol
pop
mov
inc
and
enter
or
cmp
cs
xchg
mov
xchg
enter
cmp
xor
adc
nop
push
or
call
stc
or
rcl
fsubr
in
clc
out
out
into
aaa
dec
sbb
xor
lods
push
jge
mov
xchg
lods
loopne
arpl
adc
pcmpeqb
hlt
jecxz
ins
loop
test
sbb
pusha
push
mov
xlat
jl
jge
retf
aam
loope
mov
stos
add
cmc
ficomp
jecxz
inc
xchg
es
sub
xor
adc
in
(bad)
inc
cwde
cmp
stos
xchg
mov
clc
out
lods
mov
scas
sbb
fst
enter
call
xchg
xor
mov
fild
pop
ds
fld
push
retf
jge
hlt
jae
imul
std
lods
es
and
shl
jg
test
lds
clc
xor
add
mov
mov
lods
push
sahf
and
jle
pop
jmp
rcl
loopne
(bad)
std
adc
xor
enter
xor
sub
jne
imul
add
cs
test
mov
push
inc
mov
dec
dec
dec
int
inc
push
movlps
(bad)
inc
mov
sbb
fild
scas
push
stc
std
xchg
inc
das
jmp
ret
pop
fidiv
arpl
mov
xchg
jnp
pop
test
out
test
mov
sbb
dec
and
cmp
inc
push
cdq
and
jmp
push
pop
mov
pop
mov
add
adc
xchg
rcr
nop
ins
and
(bad)
fwait
movs
or
adc
nop
mov
dec
mov
jmp
div
inc
push
add
sub
cmp
nop
ror
pavgb
inc
push
imul
das
sti
lds
sahf
sbb
repnz
fs
test
add
fidiv
push
mov
aam
inc
arpl
sub
leave
push
jg
aas
shl
cwde
mov
div
fcmovbe
xchg
push
jge
cmp
retf
pop
dec
and
mov
adc
cmc
fwait
add
jg
cmp
ss
mov
or
fs
jnp
ds
adc
xchg
mov
or
adc
loopne
ins
rcl
icebp
jns
sub
out
inc
mov
jno
inc
in
imul
jmp
out
(bad)
pop
push
jmp
jb
jl
xor
mov
daa
jecxz
shl
(bad)
in
dec
and
jp
and
bound
in
retf
cs
enter
mov
push
pop
mov
dec
adc
sbb
outs
test
data16
adc
int
cmp
mov
jmp
(bad)
loop
mov
in
sub
pushf
jbe
mov
mov
repnz
lds
rcr
mov
xor
inc
mov
ins
push
loopne
sbb
sbb
pop
inc
jecxz
add
fwait
cld
xor
mov
mov
(bad)
cmp
(bad)
aaa
ficomp
hlt
out
mov
(bad)
popa
lahf
cdq
mov
push
cwde
pop
ins
stos
out
nop
lods
int3
ret
mov
sub
mov
mov
(bad)
sbb
adc
xor
fisubr
and
sbb
cmp
stc
cmc
adc
ss
imul
ins
push
jge
icebp
mov
ret
out
jmp
fs
lds
std
jno
ds
push
mov
adc
popa
test
sar
pop
in
mov
pop
imul
arpl
pop
push
(bad)
inc
xor
scas
ror
jge
sub
or
ins
mov
aam
inc
dec
mov
sbb
inc
or
(bad)
aad
cmps
adc
mov
pop
pop
jge
cmp
inc
lods
pop
add
inc
into
jle
jbe
mov
test
aas
je
inc
mov
sbb
and
pop
stos
lods
add
inc
adc
pop
imul
and
jle
movs
out
cmp
sub
dec
fs
iret
pop
ja
mov
mov
in
mov
pop
aad
cmp
mov
sbb
sbb
pushf
sbb
fst
ficom
inc
andnps
(bad)
das
dec
sbb
and
xchg
push
fwait
push
mov
push
hlt
xchg
dec
es
cmps
inc
xchg
test
in
xor
nop
jmp
daa
in
pop
pop
pop
push
mov
cmc
push
popf
into
pop
pop
popa
mov
inc
imul
adc
sub
ins
or
shr
lods
jae
fsub
repz
cs
add
fisub
mov
xchg
and
sub
mov
mov
xor
sbb
jle
push
imul
fwait
clc
mov
cmps
mov
repz
adc
jl
shl
sti
jbe
sbb
and
mov
stc
jae
call
cmp
xchg
ret
mov
in
das
dec
imul
in
cmp
adc
mov
sbb
not
pop
mov
fild
sahf
pop
mov
sti
xchg
adc
test
mov
jb
sub
push
imul
pop
jbe
dec
pop
and
jmp
mov
aas
scas
retf
int3
loop
push
xchg
push
cmps
lods
or
xchg
push
in
fiadd
fdivp
pop
icebp
mov
mov
pushf
mov
mov
aad
xor
xchg
sub
inc
mov
frstor
pop
mov
divps
jecxz
xchg
xchg
or
aad
cdq
int3
xchg
inc
mov
dec
inc
pop
xor
mov
and
(bad)
cmps
push
bound
adc
add
xchg
xchg
inc
jle
jne
push
aas
mov
xchg
xor
sub
xchg
dec
mov
jae
in
fadd
pop
push
cmp
pop
cmp
cmc
and
mov
or
out
stos
ins
xchg
shl
mov
push
dec
jmp
adc
cmp
pop
pop
jo
add
fwait
and
mov
or
sbb
xchg
movs
ins
shl
cld
inc
inc
sahf
xor
adc
data16
and
aad
inc
aam
rcr
nop
test
cmp
xor
jbe
mov
push
lock
xor
daa
xchg
sbb
mov
push
dec
xor
(bad)
mov
pop
jno
arpl
imul
cmp
cmovp
fnsave
mov
cmp
xchg
movs
add
in
push
and
fwait
jmp
push
sahf
cmp
fwait
movs
push
push
hlt
cmp
sbb
jne
rol
mov
adc
mov
xor
(bad)
sub
mov
push
xchg
adc
push
bound
and
out
aaa
in
daa
js
jg
dec
and
cmp
daa
add
mov
ins
bts
dec
arpl
or
int
(bad)
xchg
xchg
fadd
enter
add
or
push
xchg
popa
fs
add
adc
neg
mov
test
xchg
push
test
shl
inc
cmp
dec
pop
sub
jnp
sbb
sbb
aas
es
out
(bad)
repz
inc
add
out
inc
jle
mov
adc
dec
scas
shr
xchg
mov
add
and
jecxz
adc
push
pop
xchg
ja
xlat
mov
jecxz
mov
inc
out
mov
fld
arpl
adc
mov
das
lea
dec
inc
xor
sbb
bound
xor
xchg
add
sbb
dec
push
pop
imul
push
mov
icebp
add
shl
ret
lods
and
jbe
mov
mov
out
es
mov
sub
in
inc
jg
cli
cmps
mov
lods
inc
xchg
add
pop
xchg
rcl
test
jmp
das
cmp
leave
dec
mov
xchg
pusha
cmp
ds
pop
lea
xchg
sti
cmp
sub
xor
jb
int3
lds
push
push
sbb
dec
mov
test
pop
adc
or
cmp
test
stos
ss
or
and
mov
sar
lock
mov
cmp
xchg
mov
popf
movs
push
dec
lods
cmp
jae
leave
inc
cmp
push
mov
sub
push
xchg
lea
loop
jmp
nop
rcr
mov
jle
xchg
xor
(bad)
in
push
loopne
nop
add
stos
neg
inc
jno
jl
or
pop
mov
mov
shl
gs
les
sbb
push
fwait
add
cmp
ins
not
movs
jmp
xchg
sub
(bad)
scas
retf
and
fdivr
lods
adc
ins
dec
outs
rcr
movs
xchg
cs
mov
mov
pop
call
mov
jne
push
scas
ror
int3
xchg
retf
sbb
loopne
and
sub
jbe
hlt
(bad)
sub
or
or
nop
xchg
(bad)
or
out
push
dec
push
xchg
call
neg
adc
or
loopne
add
sbb
push
call
push
test
idiv
sbb
push
movs
dec
iret
and
mul
ret
bound
out
pop
jae
stc
aaa
adc
cli
jnp
cld
inc
fs
adc
sbb
cmc
movs
ret
iret
pop
icebp
outs
sahf
or
mov
pop
shl
sbb
mov
int
jecxz
push
and
add
jno
add
sub
add
inc
xor
xchg
ret
(bad)
adc
jns
ins
scas
frstpm(287
sahf
out
mov
add
cdq
pop
jnp
into
mov
jmp
jnp
push
or
xor
cmp
adc
mov
in
aad
(bad)
mov
lods
ds
bound
jo
push
mov
and
mov
stc
enter
xor
jne
out
push
xlat
mov
sbb
(bad)
jg
movs
inc
ins
xchg
and
ror
lods
cmp
jmp
mov
jge
mov
popa
cmc
mov
and
sti
sub
mov
sub
add
sub
mov
jmp
xchg
sub
and
lea
into
sub
mov
mov
mov
jb
sub
gs
or
loope
in
rol
push
(bad)
mov
(bad)
test
lea
cmc
cld
sub
mov
test
lahf
pop
mov
ins
push
dec
xchg
mov
cmc
cmps
cmps
cld
out
add
xor
(bad)
inc
or
iret
and
add
jmp
jg
cmc
jns
pause
xchg
into
sbb
inc
or
or
mov
mov
or
adc
adc
mov
inc
xchg
sub
pusha
outs
pop
test
mov
adc
mov
lds
mov
hlt
add
jns
cwde
in
push
shl
mov
(bad)
pop
std
xor
push
mov
xchg
jecxz
in
inc
ss
ins
xchg
pushf
repnz
cmp
sbb
push
jns
mov
pushf
fwait
dec
mov
retf
jmp
stos
dec
(bad)
mov
pop
inc
sbb
jecxz
mov
ds
fucomp
jnp
mov
ret
jns
ror
mov
outs
mov
jp
ins
pop
jno
push
jmp
pop
sahf
mov
inc
fstp
fs
mov
sbb
cmps
jmp
sbb
int
pop
inc
clc
jnp
inc
pop
add
mov
or
daa
in
iret
mov
stos
pop
aam
cli
int3
fild
dec
mov
jo
dec
lods
xchg
push
popf
movs
adc
inc
xchg
sub
mov
sub
data16
jmp
arpl
ja
lods
add
inc
loope
pushf
out
mov
mov
fild
inc
mov
popf
ja
aam
lock
mov
push
sbb
xlat
cld
movs
(bad)
xchg
lock
sbb
push
loop
(bad)
and
fnsave
inc
jns
mov
or
aaa
mov
in
push
in
mov
push
ret
sub
sub
mov
in
mov
ss
cld
gs
mov
sbb
pop
add
out
and
mov
aam
hlt
(bad)
int3
sbb
inc
sbb
mov
xor
and
retf
test
jmp
hlt
int
adc
push
addr16
das
cmp
pop
cmp
cmp
mov
mov
mov
cmp
jg
mov
dec
pop
loope
popa
sub
add
jno
sbb
adc
xchg
sub
imul
sbb
cld
jno
dec
sahf
imul
adc
loope
xlat
lahf
dec
fs
lds
sbb
dec
fmul
cmp
lds
push
fwait
test
jg
xchg
push
inc
ds
test
jmp
clc
cmps
add
push
(bad)
(bad)
stos
sbb
daa
es
xchg
repz
pop
call
dec
ret
addr16
mov
out
stos
popa
fdivr
adc
popa
(bad)
leave
xchg
pop
or
pop
arpl
jb
lea
cmp
scas
enter
jecxz
pusha
test
cld
mov
movs
jg
mov
adc
cmp
call
cmps
jmp
push
add
bound
dec
mov
add
mov
xchg
pop
pusha
es
sbb
jmp
mov
mov
sub
or
(bad)
addr16
rcl
mov
xor
jns
ret
or
pop
pop
dec
pop
sub
ja
scas
test
mov
out
dec
add
in
rol
int
std
adc
mov
cmp
and
gs
and
sbb
scas
and
jns
in
fsubr
pop
(bad)
cmp
sbb
cmp
jge
cmps
xchg
cli
mov
mov
movs
add
jno
test
lods
add
xchg
sub
test
dec
pop
or
imul
mov
into
adc
mov
xor
(bad)
push
and
rol
xor
retf
dec
mov
jp
aad
inc
dec
enter
xor
pop
lods
cli
pop
xlat
xor
sub
cmp
sbb
mov
push
jbe
mov
dec
gs
and
es
adc
mov
xchg
sahf
pop
mov
stc
xor
jge
adc
stos
pop
mov
pop
ja
cmp
outs
pusha
cmp
cmp
fwait
or
xchg
mov
xchg
inc
mov
push
mov
xchg
int3
cmp
xlat
pop
test
or
xor
xchg
push
add
jg
add
aam
cs
push
cmp
jecxz
mov
jmp
mov
pop
mov
mov
adc
(bad)
fsub
push
lea
outs
xchg
sub
pusha
hlt
scas
mov
mov
cmp
popa
ja
in
jp
fs
pop
jmp
adc
mov
mov
and
xor
push
rcr
and
mov
fwait
lods
and
push
pop
aam
dec
loope
mov
add
cmp
cmp
cmp
add
push
ins
inc
mov
push
dec
push
jbe
test
cmp
or
add
mov
xchg
and
cs
mov
jmp
xchg
xchg
gs
leave
lds
sti
test
call
cwde
in
sbb
push
xor
pop
add
adc
cmp
ret
adc
rcl
sti
jmp
in
jbe
retf
dec
retf
xchg
(bad)
mov
arpl
lea
add
pop
mov
or
sahf
mov
out
clc
in
cdq
push
outs
nop
pop
lods
outs
aas
mov
outs
sub
push
and
cwde
jns
sub
lea
mov
add
rcl
mov
jg
xor
sbb
xchg
lahf
mov
rcl
or
and
rcl
popa
ins
in
dec
inc
fndisi(8087
ins
icebp
push
pop
daa
dec
or
repz
jbe
outs
daa
dec
stos
hlt
jno
call
cmp
sbb
dec
pop
rcr
nop
adc
sahf
fs
fidiv
and
push
xchg
and
mov
add
jl
adc
mov
gs
pop
jecxz
add
pop
arpl
jns
pop
push
mov
call
xchg
arpl
dec
(bad)
aas
xchg
xor
cmp
push
out
iret
loopne
sbb
mov
sub
push
mov
dec
sbb
adc
add
push
retf
push
sbb
shl
in
adc
ins
xchg
or
ds
retf
jg
xchg
push
loop
cdq
mov
xor
inc
les
mov
jg
mov
retf
dec
mov
add
push
xchg
imul
mov
jno
ins
aas
mov
rcl
bound
xor
xor
mov
daa
mov
cmc
push
add
push
(bad)
jle
mov
or
xchg
data16
and
mov
into
mov
scas
dec
sbb
rol
iret
jp
inc
shr
mov
jmp
push
in
jg
imul
add
enter
push
outs
ja
jg
inc
pop
stos
jge
dec
xchg
int3
jbe
adc
test
mov
shl
jnp
dec
add
sub
scas
cmp
enter
int3
and
push
loope
cli
pusha
push
fidiv
fisttp
sub
push
into
imul
fsubr
imul
sbb
inc
(bad)
inc
dec
repnz
sub
icebp
mov
push
and
push
fisub
ror
add
jae
jns
sahf
out
fcmovu
sar
pop
push
stos
adc
into
arpl
sub
ret
or
int3
mov
adc
and
xchg
cmp
mov
fidiv
xlat
pop
cld
xchg
xor
call
sti
or
jo
into
bswap
lea
pusha
dec
mov
jmp
xor
out
jecxz
xor
mov
and
lahf
dec
sub
repnz
in
jns
and
sbb
scas
pusha
bswap
mov
mov
xchg
jmp
dec
jmp
int
add
or
pop
pop
inc
inc
ja
out
sbb
cmp
pusha
mov
retf
push
aam
aad
loope
xchg
imul
movs
(bad)
in
cmp
scas
or
ins
scas
je
rol
jl
and
ins
(bad)
(bad)
es
sbb
cmp
ret
jb
lods
and
or
sub
dec
xor
aas
pop
pop
cmp
daa
xor
cld
ffreep
in
test
cs
ss
aam
sub
pop
pmullw
sub
or
popa
sar
sahf
jp
xchg
loope
xlat
mov
fs
int3
sbb
fld
icebp
xchg
pop
adc
pusha
xchg
nop
pop
push
pop
cmc
jp
les
je
addr16
push
(bad)
xchg
or
xchg
mov
(bad)
jl
je
ja
jmp
pop
pop
xchg
jl
sub
jae
mov
addr16
ds
mov
imul
add
add
or
or
mov
fdivr
push
inc
and
mov
xlat
mov
jae
and
sbb
dec
and
ds
arpl
jae
rcl
leave
dec
in
fdivr
in
xchg
(bad)
push
movs
mov
fsub
cmps
dec
int3
(bad)
jmp
rcr
in
lods
lods
dec
daa
cmp
inc
pop
rol
cdq
xchg
xor
rcl
jp
lds
add
xchg
dec
ss
daa
add
daa
add
test
fwait
arpl
(bad)
jg
in
int
addr16
popf
push
stos
mov
sbb
out
cmp
pusha
int
jp
xchg
cmc
pushf
stc
xor
jmp
shl
add
sbb
loope
pusha
and
arpl
stos
shr
fcomp
dec
stos
dec
pop
adc
lahf
mov
push
pushf
fnstsw
shrd
test
cwde
adc
xor
bound
jbe
sub
std
xor
add
mov
cli
jo
das
fcom
sbb
cmp
js
cmp
stos
mov
jmp
arpl
stos
sbb
push
xchg
adc
js
movs
pop
or
loopne
arpl
popf
sbb
sti
pop
adc
mul
mov
mov
aam
(bad)
in
cmp
mov
xchg
mov
rcr
das
fmul
mov
imul
pop
sub
jo
jmp
or
add
gs
and
dec
mov
test
pop
dec
stc
mov
cmp
das
mov
sbb
retf
push
ins
and
js
jmp
inc
jecxz
ja
cli
push
inc
cmp
inc
add
jmp
int3
push
push
retf
cmp
(bad)
or
outs
clc
lods
test
jns
sub
out
aaa
jmp
mov
clc
pop
sar
sahf
sub
int3
dec
mov
ret
popa
sbb
in
loopne
repz
arpl
ror
aaa
or
stc
int3
jge
cld
das
clc
shl
mov
sbb
dec
leave
xchg
ins
and
and
scas
(bad)
and
cld
(bad)
jge
adc
movs
lods
mov
ror
pop
mov
xchg
cli
mov
pop
stos
dec
and
out
sub
les
sti
or
rcr
sbb
(bad)
sbb
loop
int
inc
scas
mov
push
pop
xchg
dec
dec
mov
mov
mov
xchg
mov
sbb
rcl
mov
test
mov
jl
dec
inc
shr
mov
jge
xor
or
cmps
pop
lahf
ficom
mov
call
repz
mov
mov
or
les
sub
mov
jmp
xchg
aam
out
in
xchg
pop
dec
mov
pop
add
cmp
retf
(bad)
adc
fmul
sahf
sub
(bad)
outs
cmp
mov
enter
loop
aaa
out
add
daa
outs
jle
mov
mov
(bad)
ror
outs
sti
cmp
fadd
test
mov
mov
inc
call
out
movs
sub
fdiv
push
dec
iret
or
or
(bad)
repz
lods
repz
mov
jge
mov
xchg
pop
xchg
popa
mov
ret
dec
enter
rcr
call
test
mov
adc
cmp
push
imul
mul
enter
pop
loop
jnp
sub
mov
clc
dec
in
dec
lods
jnp
cmp
push
mov
xlat
xlat
adc
bound
outs
leave
dec
stos
jnp
pop
mov
(bad)
mov
fstp
adc
xor
enter
push
ss
es
dec
jl
xchg
add
add
test
movs
daa
imul
mov
pop
test
xchg
sbb
dec
test
mov
xor
fbstp
pop
push
imul
lods
xchg
(bad)
std
pop
out
mov
aaa
in
add
pusha
jg
loopne
fdivr
inc
stc
mov
push
std
scas
ret
ss
add
pusha
(bad)
fdiv
daa
jp
or
jecxz
pop
cmp
(bad)
sbb
int
mov
(bad)
and
aam
push
push
pop
push
xor
sbb
rcl
jmp
lods
or
mov
dec
ret
add
inc
cmp
lds
adc
cmp
fsubr
mov
add
and
call
mov
jp
sbb
pop
push
daa
sub
in
lea
sbb
adc
cli
cwde
(bad)
aam
pop
jp
into
(bad)
(bad)
jb
cmp
or
xchg
xor
ret
add
mov
xor
aad
and
in
test
cmp
(bad)
mov
jns
outs
(bad)
push
(bad)
repz
mov
jb
or
shl
and
adc
ins
mov
lods
out
xchg
or
mov
cmp
mov
mov
lock
adc
retf
pop
repnz
in
dec
inc
push
repnz
xor
mov
mov
cmp
sbb
sbb
cmp
push
dec
and
imul
arpl
cvttps2pi
fs
jge
xchg
in
loop
adc
fimul
mov
inc
jge
gs
add
(bad)
fmul
out
in
dec
iret
lahf
sub
pusha
or
ret
jmp
dec
aas
sub
pushf
data16
push
pop
jb
mov
jno
ins
out
jmp
jne
dec
add
in
clc
out
inc
mov
push
dec
pop
addr16
stos
pop
imul
cld
adc
xlat
ds
mov
mov
cmp
sub
arpl
int
and
outs
mov
pop
stos
bts
fisttp
push
cmp
mov
push
js
jnp
je
dec
sbb
mov
(bad)
mov
pushf
lock
test
pop
jb
out
jne
mov
sub
pop
jge
sahf
pop
xlat
cmp
je
adc
in
(bad)
fistp
push
cmp
or
int
stos
int3
popf
jnp
xor
pop
xchg
bound
push
movs
and
cmp
and
imul
add
mov
push
scas
jge
(bad)
inc
and
pop
cs
sbb
mov
cmp
(bad)
cs
(bad)
mov
inc
es
adc
cmps
mov
ja
mov
aaa
jmp
adc
clc
push
call
mov
pop
stos
mov
(bad)
call
or
popa
rol
out
mov
jns
sub
out
call
mov
lods
push
stos
call
bound
mov
mov
outs
and
lods
frstor
aaa
test
pop
fdivr
cmp
(bad)
xchg
mov
lods
xor
jbe
adc
and
mov
call
inc
mov
and
ret
fild
jl
mov
adc
add
cmp
lea
les
arpl
mov
fisttp
and
xchg
nop
sbb
adc
cli
fldcw
cdq
stc
push
pop
addr16
stc
add
inc
imul
jp
mov
or
and
fxch
gs
jo
mov
cmp
and
es
call
mov
mov
stos
pop
iret
js
mov
ja
not
push
stos
gs
hlt
mov
repnz
js
mov
or
mov
mov
stos
add
into
or
shl
ss
in
adc
fnsave
pusha
adc
xchg
adc
cmp
loop
add
aas
inc
rcl
(bad)
ja
mov
mov
in
xor
test
ins
add
inc
out
stc
mov
mov
mov
add
dec
xor
pop
and
out
and
xchg
dec
pop
xor
and
ins
cdq
jbe
mov
sahf
add
stc
jnp
sbb
(bad)
xchg
xchg
das
jno
xchg
loopne
pop
cld
push
jns
ja
and
fisub
push
ret
inc
es
cwde
jne
mov
jg
xchg
out
cmp
xchg
mov
xor
rcr
add
test
arpl
stos
and
lods
scas
(bad)
out
imul
jmp
test
loop
mov
add
(bad)
imul
movs
jl
ret
in
pop
xlat
test
or
mov
neg
jge
dec
xchg
xchg
dec
jmp
push
jae
pop
mov
dec
loop
mov
fstp
repnz
(bad)
lock
lods
sub
jl
cmp
lds
fistp
dec
dec
(bad)
cmp
pop
rcr
push
adc
cmp
pop
aad
pop
into
inc
pop
adc
push
and
fsub
dec
bound
rcl
dec
mov
test
in
push
push
pop
xchg
add
ret
inc
into
xor
sub
xchg
xchg
jle
or
push
arpl
pop
jns
dec
jno
and
inc
xchg
add
inc
and
outs
push
das
or
shr
test
mov
cmp
test
mov
push
and
cmp
enter
pusha
jno
and
les
in
pop
aas
ds
adc
add
icebp
repz
mov
je
inc
fsubr
inc
adc
pop
or
sub
inc
sbb
ja
pop
xor
push
call
scas
jge
mov
inc
jecxz
xchg
pushf
(bad)
hlt
lahf
pusha
test
sbb
loop
push
retf
add
jb
fwait
xchg
inc
mov
call
jl
push
mov
fsub
and
xor
ds
aam
cmp
rcr
imul
jmp
cmp
xor
jnp
fimul
cwde
dec
out
cmps
cld
mov
cwde
adc
inc
pop
in
sbb
pusha
mov
xchg
out
idiv
cdq
retf
ins
push
jae
or
mov
fcom
sbb
fwait
stos
sahf
lods
xchg
cld
mov
addr16
int
xor
and
test
cmp
mov
addr16
adc
push
fidiv
and
push
lea
push
or
jge
call
mov
inc
dec
cmps
stos
iret
add
xchg
cmp
mov
cmp
dec
pop
dec
in
int
mov
adc
jge
call
sub
and
or
stos
cld
and
fidivr
(bad)
fwait
sbb
jne
inc
jnp
aad
add
(bad)
shl
ja
aaa
jbe
out
add
retf
outs
xor
dec
icebp
shr
stos
cmps
ja
pop
add
xor
ficomp
mov
cmp
add
xor
dec
push
xchg
jmp
(bad)
into
and
idiv
lds
mov
inc
jp
pop
jmp
adc
mov
jmp
out
ret
xlat
adc
inc
inc
jge
imul
or
inc
lds
icebp
adc
jae
call
cmp
loope
sbb
adc
mov
dec
adc
jmp
fisttp
push
test
std
pop
pop
loope
es
and
sti
and
sbb
das
add
inc
add
sysexit
cld
mov
ret
into
into
inc
sub
imul
hlt
jns
ss
sub
retf
or
lods
pop
cmps
adc
arpl
mov
movs
mov
xor
mov
test
and
nop
jg
mov
sbb
daa
scas
js
and
pop
(bad)
repz
dec
sar
test
cli
(bad)
push
mov
(bad)
leave
rep
push
mov
jb
mov
adc
arpl
pop
sub
sahf
mov
popa
fimul
and
xor
fwait
dec
jl
(bad)
lock
fsub
pop
adc
sbb
nop
push
mov
fsubr
loop
sbb
adc
pop
jb
test
sbb
mov
add
jae
(bad)
jg
dec
jmp
mov
push
mov
dec
mov
scas
fstp
cmp
xchg
test
mov
pop
or
mov
shr
xor
(bad)
mov
xor
mov
dec
fistp
jle
adc
(bad)
in
stos
jmp
push
aam
inc
push
cmp
test
das
xchg
ror
pop
outs
cmp
sub
cmp
shl
mov
inc
dec
cs
(bad)
loope
mov
add
sub
jne
mov
inc
jle
je
mov
lahf
xchg
mov
adc
fild
cmp
es
mov
popf
out
mov
add
adc
mov
dec
nop
xchg
add
mov
retf
push
inc
jmp
push
jmp
cmps
imul
cmps
push
sbb
lea
outs
mov
jmp
scas
retf
enter
ret
jmp
sbb
mov
cmp
ins
fwait
and
pop
pop
adc
dec
out
xchg
jbe
push
out
imul
shl
cmps
dec
jmp
cmp
retf
mov
pop
mov
mov
mov
test
or
inc
add
scas
xor
pop
out
das
jnp
push
or
pop
fiadd
mov
jns
mov
outs
adc
dec
add
push
jmp
jmp
mov
movs
pushf
shl
mov
pop
bound
dec
xor
call
in
dec
out
ret
pop
test
mov
loope
mov
pop
out
gs
or
psubb
cwde
int
fsubr
gs
mov
out
ss
pop
push
inc
sub
adc
jns
cmp
(bad)
push
mov
push
mov
cwde
add
cs
in
add
dec
or
sbb
pop
mov
pushf
das
mov
push
pusha
push
imul
cmps
cmp
nop
cwde
ins
ins
xor
mov
mov
fldenv
xchg
adc
je
mov
add
fistp
mov
mov
call
xchg
icebp
lods
jg
push
hlt
adc
cmp
cmp
adc
popf
movs
ror
pop
in
push
ret
je
pop
inc
inc
jp
in
mov
inc
mov
mov
inc
in
sub
jle
daa
sbb
xchg
jb
mov
dec
dec
test
sbb
test
mov
(bad)
pop
pop
or
jle
fadd
sti
sub
popf
cmp
ret
sub
mov
ret
pop
test
idiv
push
add
adc
scas
mov
xor
cmp
xchg
inc
jge
mov
xor
xor
push
dec
fwait
mov
cmp
push
xor
cld
out
cmp
sub
dec
adc
push
mov
imul
popf
jecxz
jecxz
sub
inc
dec
mov
pop
(bad)
(bad)
fs
movs
cmp
mov
xchg
pop
jecxz
inc
add
add
jl
iret
or
pop
adc
mov
inc
cs
dec
dec
sti
dec
fisub
cmp
sbb
adc
inc
rol
or
adc
hlt
out
cli
add
stos
xchg
add
and
mov
(bad)
cdq
popaw
imul
int3
mov
popf
mov
sbb
or
mov
inc
je
div
push
leave
push
test
ja
fstp
dec
aam
sub
xchg
mov
cmp
and
mov
aam
jg
iret
jnp
add
add
test
dec
inc
push
mov
loope
pop
and
pop
iret
frstor
push
nop
das
push
cli
in
push
adc
in
lock
dec
pop
(bad)
sar
ror
sub
(bad)
mov
popa
inc
lods
inc
lea
inc
inc
sbb
(bad)
dec
shr
pusha
cmp
and
mov
outs
mov
adc
sar
mov
or
pop
fistp
cmp
pop
push
es
jne
jmp
shr
out
int3
loope
outs
mov
and
scas
jmp
stc
in
dec
push
dec
scas
inc
pop
sbb
pop
jno
dec
pop
imul
stos
stos
es
mov
or
neg
dec
push
inc
sti
push
gs
lds
cmp
cli
jmp
add
adc
xchg
mov
push
nop
jb
add
ins
call
pop
pop
mov
ror
popa
loope
ins
stc
faddp
inc
jne
xchg
das
xchg
rol
jge
mov
mov
mov
sti
inc
xchg
inc
clc
pop
movs
xor
cmp
push
clc
fcom
imul
not
popf
xchg
adc
push
lock
jo
mov
xchg
cld
icebp
ret
ins
retf
mov
jno
aam
push
inc
xor
jg
or
outs
add
lods
mov
push
jge
dec
inc
sub
rol
sbb
adc
cwde
cmp
mov
mov
push
cld
outs
sbb
cmp
jno
or
(bad)
repz
mov
sub
cld
in
or
stos
call
mov
lock
xchg
sub
adc
(bad)
xor
xor
ds
or
inc
dec
jae
scas
pusha
in
pop
ret
mov
ins
je
or
lock
out
out
ss
dec
inc
(bad)
adc
dec
stos
ins
inc
enter
mov
mov
vhsubpd
in
(bad)
or
add
inc
mov
jno
out
jp
mov
inc
addr16
add
fsub
or
pop
adc
outs
or
add
push
push
out
push
fst
add
cmc
or
cdq
fdiv
pushf
adc
sahf
push
div
stc
pop
mov
stc
cmp
xchg
data16
sub
jp
das
inc
cmps
cmp
push
adc
mov
jo
and
daa
mul
popa
retf
adc
inc
sbb
fidiv
add
jp
cmps
and
jmp
cld
js
adc
push
out
icebp
jno
scas
ja
jns
push
add
shl
aam
pusha
retf
inc
mov
pop
movs
xor
fimul
push
popa
pusha
xor
outs
xchg
and
add
fstp
jo
pop
stc
add
ins
xchg
dec
pop
sbb
fist
mov
movs
add
adc
aas
fs
xor
and
fisub
shl
adc
out
fstp
(bad)
arpl
pop
cmp
mov
xor
loopne
mov
jmp
or
mov
mov
mov
and
aad
(bad)
outs
js
movs
mov
and
outs
shr
inc
test
nop
aam
sbb
pop
or
jmp
imul
out
sub
movs
sbb
js
cmp
jmp
and
jne
pop
je
nop
sbb
imul
jno
repnz
push
jb
aaa
cmp
jno
iret
cmp
mov
(bad)
movs
aaa
xchg
pushf
pop
adc
dec
xlat
inc
mov
repz
mov
add
mov
adc
outs
test
or
xchg
gs
imul
xchg
mov
test
xchg
xchg
aam
push
mov
mov
dec
aam
cwde
test
cmp
mov
push
pop
fs
shl
cdq
mov
icebp
jb
sti
into
popf
xchg
scas
push
mov
dec
dec
sub
int
(bad)
stc
jb
and
sbb
pop
imul
mov
loope
(bad)
outs
dec
xor
gs
sbb
scas
jb
mov
inc
retf
jecxz
das
test
add
or
(bad)
nop
xchg
sbb
dec
cmps
das
rcr
push
push
sar
push
push
pop
(bad)
in
inc
jge
imul
pop
pusha
dec
cs
enter
cmp
fcom
mov
(bad)
sbb
dec
leave
xchg
sbb
add
sbb
mov
popf
and
jp
adc
std
es
jl
jne
cmp
xchg
shl
sub
ins
jns
push
aam
addr16
addr16
jge
jo
inc
aas
cmp
jns
(bad)
fsubr
add
and
inc
mov
jp
add
cmp
xor
aaa
pop
ret
cld
stos
jge
mov
imul
mov
xchg
cmp
cmps
adc
adc
div
add
push
cmp
pop
add
in
add
cmp
ins
dec
jb
nop
jb
enter
je
xchg
rcl
or
fstp
clc
stc
inc
pop
push
xor
cs
sar
jle
in
sbb
into
dec
jbe
sbb
sbb
and
rcr
fdiv
ret
mov
jg
push
aam
xchg
fistp
xlat
adc
mov
jge
shl
clc
mov
loope
pop
push
pushf
fstp
mov
mov
push
ret
mov
lods
mov
repnz
hlt
xor
mov
shr
mov
pushf
aas
pop
repnz
push
xor
mov
xor
dec
pop
jecxz
add
imul
daa
xor
pop
dec
mov
xor
pop
cmp
(bad)
sub
and
xchg
nop
stos
sub
or
jp
inc
cmps
push
cmp
out
mov
bound
pop
adc
adc
scas
adc
div
jnp
jb
fistp
inc
sub
rcr
into
call
imul
push
lods
inc
jne
push
jmp
mov
in
sbb
adc
fadd
jae
lock
mov
xlat
xor
push
fldenv
mov
sar
and
(bad)
imul
xor
retf
sbb
jnp
add
loope
cmp
pop
lods
xor
cli
mov
jae
jecxz
inc
fisubr
sub
and
cmps
fucomi
ds
add
fs
jl
adc
sar
xor
lock
xchg
in
jg
mov
push
jo
aad
retf
mov
mov
test
inc
(bad)
shl
scas
sti
mov
sub
xchg
sub
pushf
inc
jl
out
jge
clc
xchg
jne
test
mov
pushf
fmul
hlt
xor
add
sbb
popa
je
mov
xchg
daa
cdq
push
nop
call
ja
sub
clc
or
aaa
mov
fldpi
bound
sbb
mov
sub
je
inc
pop
sahf
jp
(bad)
dec
lds
js
(bad)
and
adc
mov
je
scas
daa
push
lock
cmp
rcl
or
loop
pop
retf
sbb
cmp
mov
jle
dec
jmp
test
lock
(bad)
and
cli
movs
ins
dec
mov
mov
adc
add
outs
sub
push
ret
popf
rol
mov
mov
popf
jmp
into
sbb
push
rol
jae
push
inc
or
fsub
or
lahf
dec
cmps
ins
cwde
pop
mov
jnp
repz
ret
xchg
inc
sar
retf
push
push
test
or
retf
test
dec
and
pop
sub
adc
je
sbb
mov
ins
mov
cs
ds
inc
xor
dec
adc
outs
loopne
in
cmps
cs
aam
jecxz
int
xchg
inc
ja
inc
mov
mov
xchg
aam
dec
std
outs
jg
xor
rol
test
dec
xor
scas
in
sub
cmp
icebp
jp
bound
cmp
stos
mov
inc
jg
in
push
iret
sub
leave
dec
push
xchg
jge
imul
sub
rcl
daa
dec
adc
test
mov
adc
xchg
fidiv
(bad)
mov
loope
ret
xor
xchg
pop
xchg
dec
fiadd
bound
lea
xchg
test
daa
aam
push
xchg
retf
mov
in
cli
sahf
leave
mov
in
js
sbb
std
pop
xchg
push
mov
jl
test
mov
call
cld
jecxz
add
and
mov
xchg
pop
mov
lea
rcr
dec
arpl
sub
xchg
fld
cld
aam
fcmovnbe
jg
inc
(bad)
lods
inc
js
xor
xlat
cmp
inc
push
adc
fisubr
push
neg
stos
sub
and
push
push
lds
js
outs
inc
icebp
pushf
(bad)
leave
dec
adc
add
js
hlt
and
stc
or
sbb
adc
sahf
sahf
pop
mul
out
cmp
and
cmc
xchg
movs
pushf
mov
jle
mov
hlt
ss
into
jecxz
movs
push
movzx
jl
sbb
mov
fldenv
ss
mov
jnp
adc
dec
iret
loope
in
sbb
jp
scas
dec
outs
dec
stos
sub
push
or
add
or
cmp
or
cmps
movs
mov
stos
pop
test
push
xor
mov
jp
in
mov
shl
outs
(bad)
push
repnz
mov
ja
or
jb
imul
ret
fs
in
loope
rcl
xchg
mov
or
iret
nop
cli
shl
(bad)
int3
lods
aas
cmps
or
loope
hlt
ret
sti
push
cmp
je
rcr
sub
nop
in
sub
bound
(bad)
jge
fs
fwait
pushf
das
sub
sub
push
dec
adc
sbb
add
adc
xchg
or
nop
popf
fistp
xchg
jne
and
lahf
xchg
ds
jge
shl
std
mov
add
aaa
mov
mov
es
fwait
stos
mov
nop
cdq
movs
lea
mov
xor
sbb
jnp
xchg
cmp
stos
adc
fld
cmp
cmps
inc
mov
inc
mov
hlt
jg
cmp
pushf
retf
pop
add
aad
xor
das
test
add
push
repz
jmp
pop
xor
cmp
in
xlat
push
inc
xchg
or
inc
shl
mov
and
and
push
inc
iret
into
loopne
shl
repnz
aad
retf
and
add
push
push
xchg
dec
xlat
pop
cmc
add
cs
gs
aad
paddd
retf
pop
mov
sub
movs
pop
push
dec
loopne
sub
mov
sub
popa
pop
loop
seta
mov
xchg
xor
(bad)
cmp
ret
stc
cwde
and
or
fsub
dec
adc
mov
xlat
das
jl
outs
cmp
mov
mov
mov
loop
fld
xrelease
or
les
sub
mov
arpl
dec
pop
in
not
(bad)
lds
mov
add
cld
push
push
xor
lods
push
in
xchg
(bad)
mov
ds
stos
rep
fwait
mov
pop
ret
and
adc
sub
into
loopne
and
and
sti
mov
jl
mov
push
ja
pop
enter
xlat
loope
push
shl
jmp
mov
nop
mov
cmc
jmp
sti
test
(bad)
aad
xchg
inc
arpl
aas
jp
idiv
inc
nop
pop
xchg
js
mov
cld
shl
jle
rol
adc
mov
sbb
mov
jmp
push
popa
shr
inc
xchg
jl
xchg
sub
call
into
adc
and
xor
cmp
popf
fld
loope
data16
adc
loop
push
(bad)
sbb
scas
nop
adc
xchg
mov
clc
inc
add
data16
fwait
sbb
mov
lods
sub
rol
movs
loop
mov
mov
and
add
fistp
popa
inc
retf
rcr
dec
pop
sbb
sbb
sbb
pop
pcmpeqb
or
adc
sub
push
js
push
addr16
movs
loop
jo
mov
pop
sub
inc
dec
movs
stos
out
push
inc
or
pop
mov
mov
shl
jo
arpl
jb
popf
mov
jg
pop
add
sub
aaa
push
ficomp
push
lea
mov
out
test
popf
(bad)
sbb
add
jne
cli
loop
adc
cmp
mov
xor
loopne
repz
push
das
mov
sar
aad
shl
call
and
jo
out
lods
dec
pop
push
mov
or
xchg
test
lods
mov
sti
mov
pop
(bad)
ins
pop
add
inc
clc
mov
add
out
pop
(bad)
dec
cmps
mov
movs
push
cld
scas
mov
sub
lds
stos
jbe
dec
sbb
loopne
icebp
or
fistp
sbb
xor
mov
jle
jne
sub
loop
mov
dec
mov
adc
or
mov
je
push
dec
xchg
(bad)
or
ins
mov
(bad)
adc
add
jb
ins
mov
sbb
mov
or
into
in
shl
ret
ja
inc
sbb
sbb
and
stos
add
cld
bound
dec
xor
inc
cwde
adc
xchg
imul
fwait
es
pop
xchg
sbb
mov
ins
aad
fidiv
fisttp
int
mov
cmc
scas
xchg
xlat
fucomip
(bad)
retf
push
and
ja
xor
and
loope
lss
xchg
cmp
test
lea
mov
and
xchg
jns
mov
shl
das
rcl
(bad)
out
or
es
mov
inc
or
outs
fiadd
push
add
push
and
cwde
cmc
test
shr
cli
scas
push
and
dec
cmp
cmps
aam
retf
enter
into
jns
scas
push
dec
dec
fs
xchg
cdq
xchg
cld
repnz
retf
rol
in
test
into
sub
pop
pop
sar
mov
fimul
adc
xor
add
icebp
xchg
xor
sti
add
ret
call
xchg
ins
cmp
dec
in
int
popf
inc
mov
push
mov
ja
repz
fistp
sbb
cmps
das
jne
out
or
dec
mov
addr16
aas
mov
pop
dec
mov
sub
mov
push
call
mov
add
jge
sub
xchg
int3
inc
inc
xchg
or
scas
adc
xor
das
(bad)
aam
pop
fs
mov
cmc
mov
mov
in
add
das
pop
sub
mov
and
scas
add
es
retf
mov
mov
jns
add
sub
fimul
stos
dec
fidivr
mov
xor
dec
jbe
retf
jmp
into
lea
enter
mov
into
xchg
adc
jg
aam
xchg
and
dec
rol
and
outs
xor
cmp
pop
stos
rcl
inc
and
scas
or
jmp
jl
stc
cmp
stc
popa
int3
push
ds
push
cmp
mov
gs
sub
mov
out
nop
add
lods
pop
lods
add
fucomp
test
js
lahf
ret
add
retf
das
mov
dec
sti
call
cld
mov
lds
add
loopne
or
xchg
pop
int
imul
ss
inc
sbb
adc
inc
or
rcl
cli
xor
(bad)
dec
adc
mov
push
or
add
add
mov
sub
ins
mov
add
sub
repnz
jl
fwait
sti
mov
shl
loop
je
leave
cli
cs
fwait
or
dec
and
aas
xchg
xchg
rcr
or
repz
stc
xchg
sar
rol
mov
xor
jmp
imul
mov
jle
mov
rcl
pop
cs
fs
pop
adc
dec
dec
inc
xchg
sbb
and
bound
addr16
mov
push
inc
lods
adc
aas
mov
jge
fwait
(bad)
push
aas
inc
push
inc
cmc
aaa
jns
or
dec
push
les
sbb
jbe
lods
mov
xor
leave
cdq
pop
mov
adc
sbb
mov
leave
pop
sbb
hlt
enter
dec
ret
inc
popa
push
popf
xor
outs
inc
call
out
fisub
retf
das
aas
icebp
inc
jecxz
aam
push
sub
adc
sar
xchg
(bad)
in
ins
js
adc
jno
shl
pop
mov
sbb
dec
mov
outs
mov
sub
lock
jbe
cmp
mov
leave
data16
lock
add
mov
mov
sti
lods
outs
aad
repnz
icebp
(bad)
test
or
imul
daa
enter
pop
mov
and
pop
hlt
cmps
dec
adc
adc
cmp
addr16
fwait
lds
(bad)
stos
mov
add
clc
lods
pop
cmc
adc
les
xchg
sub
hlt
repnz
cmp
sub
push
addr16
dec
cmp
sub
cmp
ins
adc
sar
xor
data16
push
(bad)
pop
xchg
div
cld
mov
stos
inc
mov
inc
sbb
fnstsw
shr
push
sub
popa
fmulp
mov
aaa
test
mov
gs
pop
adc
ret
rcl
push
dec
mov
jb
in
jle
shl
jb
inc
popa
test
rol
mov
mov
vphaddubq
mov
push
cdq
mov
addr16
cld
push
xlat
rcr
in
out
sub
or
fs
pop
aam
sub
mov
es
lds
loope
ja
pop
pop
push
lods
push
dec
add
fsubr
sbb
nop
sti
and
dec
iret
shr
aad
inc
xchg
jnp
js
aas
xor
or
mov
ficom
cmps
add
fcmovb
xchg
pop
xor
out
or
adc
inc
(bad)
pop
inc
sti
xor
mov
test
mov
je
push
test
into
mov
stos
(bad)
sbb
iret
rol
mov
mov
je
push
jnp
inc
into
jbe
add
pop
mov
mov
mov
sbb
inc
aad
xchg
aas
dec
jmp
mov
cwde
cld
mov
pop
adc
ins
pop
jns
and
int
pusha
jo
mov
js
jo
jecxz
jo
popa
out
inc
mov
data16
xchg
or
icebp
sbb
(bad)
mov
push
cmp
mov
aaa
rol
sar
cwde
sub
push
or
ret
mov
gs
mov
inc
fimul
or
out
ds
addr16
add
dec
out
pop
mov
stos
retf
xbegin
sar
loope
hlt
ins
push
inc
div
cld
or
sbb
sbb
push
sub
in
push
movs
aad
push
jno
or
rcr
rol
pop
loop
repnz
enter
mov
lods
inc
pop
shl
mov
leave
sbb
or
in
mov
lods
mov
dec
or
and
std
xor
dec
retf
xor
sbb
mov
jne
bound
cmp
js
(bad)
or
movs
xchg
jl
xor
push
jmp
inc
pop
ficom
inc
out
cmp
imul
inc
fidiv
and
pop
dec
add
out
pop
int3
xor
call
in
out
inc
add
xor
pop
jo
xchg
lods
iret
sti
xlat
std
lds
hlt
mov
lods
int
fimul
xchg
lds
jecxz
inc
mov
mov
pop
push
cmps
cwde
popa
cmp
lea
stc
push
das
(bad)
adc
or
paddd
xchg
push
push
jmp
pop
inc
outs
push
mov
shr
lods
pop
sbb
out
sub
mov
test
fidivr
xchg
push
(bad)
xchg
cmc
add
or
or
lods
jnp
or
ins
pop
mov
jmp
push
xor
jno
std
aas
dec
test
pop
xchg
sbb
xor
xlat
xor
jae
or
push
sub
fiadd
add
sbb
xchg
test
adc
inc
xchg
arpl
adc
jecxz
and
and
cld
std
jle
addr16
out
outs
(bad)
dec
out
mov
mov
sti
and
nop
dec
jnp
dec
(bad)
xchg
dec
cld
jb
dec
push
movs
arpl
jns
lahf
pusha
add
xor
mov
jns
lods
(bad)
dec
push
inc
jecxz
push
and
mov
add
xchg
repz
jns
sbb
sub
pop
mov
pop
cmp
imul
jecxz
mov
add
jae
ins
jnp
(bad)
dec
sub
in
xchg
lods
sbb
and
(bad)
pop
arpl
sub
gs
clc
jns
(bad)
in
pushf
jmp
mov
out
fisttp
sub
cmp
mov
fidiv
xlat
mov
std
sbb
mov
and
sbb
cli
fimul
ja
cmp
mov
pop
fwait
jo
or
sub
fistp
bnd
shr
mov
mov
mov
inc
inc
ja
sub
mov
(bad)
ins
push
and
xor
inc
jnp
add
xor
lock
ror
or
test
inc
arpl
dec
xchg
mov
nop
and
push
mov
mul
push
xchg
and
mov
lods
aaa
xor
xor
mov
fiadd
lock
vpsubq
inc
jmp
sbb
cld
repz
in
cld
pop
ror
xchg
jle
jbe
rcl
dec
fsubr
mov
sti
and
xor
mov
sbb
inc
and
mov
loope
mov
(bad)
cmc
mov
sahf
xchg
ss
icebp
mov
stos
pushf
imul
mov
fist
mov
movs
scas
add
call
adc
rcr
test
mov
in
leave
xor
or
sub
push
pusha
ds
adc
sub
jecxz
and
jae
fdivr
xchg
cmp
shr
mov
in
sahf
or
sub
or
push
in
out
mov
jl
ds
cwde
sbb
mov
retf
ret
leave
mov
pop
mov
lods
sbb
and
jecxz
scas
or
and
cmps
daa
or
out
and
mov
lods
xor
enter
add
fsubr
rcl
jb
int
and
data16
jmp
std
push
test
jmp
repnz
(bad)
out
ret
(bad)
jb
jp
mov
jle
loopne
movs
test
stos
aaa
fcomp
ja
sahf
push
dec
clc
je
xor
add
aaa
and
daa
mov
(bad)
int3
lods
in
mov
sbb
adc
aaa
push
lds
(bad)
mul
pop
cld
pop
sbb
mov
mov
xchg
enter
cwde
dec
adc
cmp
into
sar
addr16
mov
aam
stc
inc
jmp
test
sbb
jmp
shl
and
inc
outs
rcr
cmp
adc
jp
dec
and
jmp
stos
(bad)
push
aam
pushf
xchg
pop
inc
push
shl
add
push
add
mov
repz
xor
out
push
lock
out
mov
mov
xchg
adc
xor
jl
mov
sub
sbb
mov
mov
cmps
test
and
(bad)
loop
pop
mov
xchg
push
or
aad
fcom
xchg
sar
mov
jbe
mov
arpl
adc
mov
fs
jecxz
ret
aas
les
(bad)
aaa
or
mov
outs
cmp
iret
aaa
movs
enter
push
mov
cmp
aaa
rcr
aam
push
stos
adc
jae
pop
push
jmp
jno
xor
es
movs
rcl
cmc
imul
sub
ds
jl
mov
outs
stc
or
scas
or
addr16
xchg
sub
stc
mov
or
movs
and
call
fstp
int
shl
inc
jl
icebp
mov
inc
dec
rcr
cdq
stos
adc
adc
nop
jbe
sar
lea
xchg
movsx
push
xchg
pop
sar
push
cmc
aad
call
data16
xor
xchg
fisttp
or
or
dec
int3
shr
in
push
sub
sub
mov
lock
xchg
in
leave
xor
xchg
fs
push
jae
out
mov
pop
ins
mov
movs
xor
pusha
xor
imul
mov
aaa
pop
add
mov
clc
push
xchg
in
scas
xchg
adc
push
clc
cdq
mov
sub
rcl
jp
sar
mov
or
mov
cwde
push
das
vmaxss
in
in
dec
rol
lods
or
or
scas
add
add
aaa
and
cmp
cmp
aas
jnp
lods
jae
adc
and
outs
out
mov
ins
jg
sbb
imul
in
icebp
push
push
jo
pop
lods
mov
or
sbb
or
not
dec
fmul
mov
int3
pop
les
loope
add
dec
out
sub
xlat
rcr
add
mov
ds
mov
cmc
aaa
test
imul
or
leave
sbb
push
xlat
scas
and
fcmovu
and
dec
mov
cmps
jns
pop
and
bnd
pushf
test
les
fbld
cmp
test
cs
mov
gs
mov
sub
xor
cmp
cmp
fsub
mov
sub
not
or
movups
dec
adc
test
and
xchg
xchg
shl
(bad)
outs
clc
ret
jb
pop
sbb
cdq
inc
jb
push
push
ds
shl
test
lods
mov
xchg
dec
fidiv
idiv
mov
outs
loopne
enter
inc
push
cwde
int3
sar
push
push
jae
cmp
adc
mul
retf
dec
ins
call
lea
test
push
test
arpl
push
in
mov
sub
inc
test
pop
and
pop
test
inc
or
retf
xchg
je
mov
adc
cs
jp
mov
cmp
int3
mov
retf
jge
mov
ror
inc
push
out
or
jmp
aaa
adc
mov
inc
clc
add
out
cmps
mov
pop
retf
gs
shr
cmp
shr
pop
mov
xlat
sbb
mov
pop
inc
out
pop
sub
das
push
jb
dec
hlt
mov
dec
popa
leave
jp
hlt
add
mov
or
cmp
mov
push
rcr
push
add
clc
int3
jnp
loope
push
sbb
cmp
push
adc
mov
lds
xchg
adc
(bad)
xchg
dec
push
cs
or
jnp
popf
jae
adc
mov
add
mov
cmp
adc
dec
mov
jmp
push
jnp
inc
push
dec
push
std
cmc
fwait
dec
aam
cmps
(bad)
jle
add
mov
mov
mov
xchg
jl
and
ins
stos
xchg
inc
ret
pop
cmps
scas
mov
(bad)
rcr
scas
iret
jbe
and
sbb
call
mov
mov
sbb
mov
pop
push
daa
out
add
icebp
jmp
inc
mov
addr16
or
hlt
jns
inc
(bad)
xor
xchg
outs
pop
pop
fs
push
or
scas
pop
int3
mov
jle
cmp
mov
sbb
fist
pop
scas
test
and
mov
cmp
sub
adc
fiadd
aam
cdq
mov
sar
fisubr
or
lods
xor
clc
in
adc
sub
js
into
inc
push
push
cmp
xchg
or
fldenv
inc
push
sbb
ss
sbb
dec
mul
cmp
lahf
xchg
jb
and
pop
scas
xchg
lods
ins
jne
adc
ja
cmp
jl
xchg
cmp
push
nop
into
sub
jmp
ja
pop
popa
add
or
fdivr
xor
mov
dec
out
pop
and
inc
and
sbb
jmp
cli
push
iret
aad
outs
sub
idiv
dec
into
lds
push
retf
bound
sub
pop
and
jmp
inc
and
push
push
push
adc
xchg
bound
jg
pop
xor
mov
inc
mov
lods
xchg
push
pop
shl
dec
mov
mov
adc
fsubr
hlt
jmp
mov
jb
popa
xchg
(bad)
jne
mov
push
sbb
cmp
sub
cmp
xchg
mov
cdq
pop
or
(bad)
lods
cmp
sbb
xor
ins
or
mov
leave
mov
jmp
aaa
pop
loop
push
xor
dec
sub
pop
dec
sub
lods
inc
stc
mov
sub
shl
jbe
adc
mov
adc
les
xchg
xchg
jp
cdq
or
(bad)
adc
xor
jno
outs
pop
adc
std
cmp
(bad)
cli
add
aas
push
cwde
inc
fld
enter
lock
daa
mov
pop
pop
mov
outs
mov
or
in
xchg
or
leave
dec
imul
cmp
lods
data16
mov
inc
xchg
and
retf
int
adc
into
in
les
(bad)
mov
in
dec
mov
mov
test
or
or
lods
xlat
sti
add
and
sub
(bad)
jge
pop
sti
loopne
pop
pop
jp
test
and
sbb
inc
xchg
push
out
pusha
xchg
enter
scas
int3
push
movs
push
pop
ret
nop
push
xor
mov
ins
sbb
push
and
shr
je
cmp
lea
in
jae
dec
imul
fadd
in
(bad)
adc
and
cmc
scas
daa
jmp
jg
ret
pop
xor
stos
clc
cmc
push
(bad)
sub
mov
jnp
movs
pop
shl
xor
les
js
pop
xlat
mov
adc
cdq
popf
pop
mov
mov
pop
outs
aas
mov
fcomp
adc
or
push
mov
fnstcw
jno
movs
lea
adc
xchg
pop
jge
sub
stos
push
lea
loope
pop
or
jae
mov
xor
call
ds
test
outs
mov
inc
and
pop
xchg
inc
imul
add
std
mov
sub
or
in
ret
lods
frstor
sbb
sub
ss
pop
enter
pop
movs
fdiv
cmp
ins
dec
mov
(bad)
test
adc
popa
lods
not
inc
jecxz
cmp
stc
in
mov
test
(bad)
xchg
jo
adc
iret
mov
push
das
pop
xchg
mov
jle
or
mov
data16
mov
hlt
repnz
xor
int
retf
bound
jge
cwde
xor
mov
mov
mov
sti
xchg
xchg
bnd
in
fiadd
push
push
mov
sub
std
scas
or
movs
clc
leave
mov
daa
popa
ret
je
sahf
ret
push
jl
inc
outs
fild
sbb
cmp
jmp
ret
popa
pop
dec
or
xor
pop
ins
loop
les
or
xor
jne
xchg
fild
xchg
xor
cmps
int3
sti
scas
dec
inc
popa
out
sbb
push
sub
outs
pop
xor
pop
adc
or
cmp
in
aaa
push
retf
sbb
aaa
data16
call
std
jg
xor
jp
sar
fdiv
stos
lods
lahf
(bad)
icebp
dec
mov
and
push
addr16
out
hlt
out
out
cs
jmp
add
pop
ja
mov
mov
test
push
inc
mov
pop
push
adc
push
sub
aad
jmp
lock
leave
popa
mov
sbb
dec
call
outs
and
nop
adc
out
fs
cmp
sbb
sub
mov
loope
aas
jae
mov
arpl
or
sub
sbb
cli
pop
outs
xor
test
inc
dec
xchg
mov
xchg
call
outs
fadd
cmp
jmp
adc
push
xor
rol
cmc
add
retf
les
gs
adc
xor
addr16
aas
mov
ins
inc
shl
inc
push
mov
loope
dec
xor
push
mov
out
and
mov
mov
mov
mov
inc
retf
sbb
xchg
add
push
sub
movs
repnz
jbe
mov
add
jle
lea
cmp
rcr
jecxz
mov
xor
enter
cmps
add
rcr
cmp
leave
xor
outs
inc
rol
and
push
out
cmps
inc
sbb
jno
aaa
pop
mov
in
mov
pusha
mov
aas
and
xor
and
sbb
jg
pop
ja
into
push
div
mov
sub
jge
ss
mov
pop
mov
cdq
dec
div
xchg
and
call
xor
push
popa
sub
or
outs
aas
inc
fidivr
mov
or
jo
inc
mov
cli
push
ror
cmp
add
pop
mov
push
xchg
mov
add
jno
mov
scas
int3
in
jno
mov
xchg
mov
pop
and
sub
sbb
fs
ror
inc
cmp
and
repz
jecxz
pop
js
js
or
adc
(bad)
shl
retf
jge
vpandn
pop
mov
inc
ds
int
mov
pop
add
jmp
loop
daa
(bad)
pushf
stos
inc
mov
out
movs
sbb
movs
jp
inc
je
loope
cmps
xchg
fbstp
shl
inc
mov
aad
xchg
push
in
fs
sbb
xlat
push
int
das
int
jg
js
mov
sahf
pop
jne
mov
adc
lods
das
cwde
pop
push
test
retf
cmp
xlat
adc
jae
sub
mov
jbe
inc
in
pop
dec
xor
ret
push
mov
jp
push
inc
sbb
arpl
fsubr
cmp
dec
adc
lock
ror
sub
or
xlat
adc
or
xor
popa
(bad)
imul
mov
mov
pop
sub
sbb
retf
mov
sub
push
inc
xor
pop
or
in
jp
das
test
stc
mov
repnz
out
cwde
cmps
nop
pop
sahf
or
adc
ds
cmp
push
repz
mov
mov
xor
xor
sub
clc
(bad)
xchg
scas
call
ror
jp
into
mov
cmps
cli
(bad)
sbb
xchg
inc
(bad)
mov
mov
jno
rol
lea
int3
imul
pop
push
dec
mov
xchg
movzx
and
pop
push
jle
rcr
push
(bad)
sbb
repz
and
push
dec
int3
sbb
mov
ss
ins
sar
pop
pop
dec
movs
lds
mov
xlat
test
ret
xlat
inc
call
mov
dec
jmp
popf
or
dec
push
movs
cdq
sar
popf
aas
mov
xor
(bad)
jae
popf
int3
xlat
and
rcr
lahf
sbb
pop
ins
dec
fidiv
movs
in
sub
ret
dec
popa
mov
cmps
lock
sahf
xchg
mov
aam
sub
xchg
cld
loope
mov
cdq
(bad)
push
js
xlat
add
addr16
cmps
jmp
jnp
xchg
cli
xor
out
(bad)
lods
test
xchg
sbb
in
inc
(bad)
in
xor
pushf
xchg
mov
std
adc
mov
in
idiv
fwait
imul
fwait
jg
pop
cdq
dec
aam
jae
iret
outs
pop
call
pop
cli
or
jecxz
bound
fs
stos
mov
leave
mov
jne
cs
jae
add
dec
mov
popf
(bad)
ret
push
(bad)
leave
idiv
ins
call
lea
mov
inc
and
mov
call
imul
cmc
add
jns
inc
mov
push
out
and
xor
inc
rcl
lods
sbb
dec
(bad)
push
push
mov
enter
jnp
mov
sbb
push
daa
call
xor
pop
stc
jno
scas
xchg
cmc
lahf
fwait
mov
dec
xor
test
std
es
mov
cld
sbb
repnz
(bad)
add
loope
jg
inc
push
push
sti
(bad)
sbb
cmps
stos
hlt
aaa
clc
and
jb
sbb
mov
inc
mov
inc
je
out
or
(bad)
sti
pop
sub
out
add
movd
inc
or
jle
dec
dec
jne
je
push
fimul
sbb
xchg
shr
cmp
(bad)
cmp
ja
bound
inc
sub
push
rcr
jmp
or
ja
inc
lock
mov
cs
adc
mov
in
add
js
xor
mov
mov
sub
dec
imul
cli
pushf
cmp
int
fwait
adc
dec
add
cmp
fidivr
in
push
xchg
cmp
movs
jl
rcr
adc
add
mov
push
add
mov
push
(bad)
lock
sub
xchg
mov
in
xor
aaa
adc
pop
(bad)
test
push
mov
push
push
stos
cmp
push
call
add
pusha
fmul
imul
jnp
lds
xchg
jp
ficom
sbb
out
test
and
jge
push
loope
loop
movs
nop
jnp
jecxz
sub
mov
inc
cmp
sbb
dec
out
add
enter
push
repnz
enter
push
push
push
enter
aas
jp
push
loopne
dec
les
sub
mov
sbb
jno
mov
sub
sti
popf
pop
cmp
bound
(bad)
dec
jo
mov
jmp
stos
lods
les
add
fdiv
je
xchg
cld
sbb
or
int3
es
add
call
mov
test
clc
mov
repnz
aad
push
ins
sbb
and
jp
cmc
ds
mov
push
cmc
mov
pop
cmp
inc
dec
das
mov
and
and
fsubr
sub
outs
jmp
mov
popf
inc
into
xor
xor
call
push
xor
jge
mov
lock
dec
pop
cmp
sub
dec
adc
xchg
addr16
lds
sub
lea
lods
sbb
pop
sub
sub
mov
sbb
sub
in
xchg
(bad)
(bad)
(bad)
push
out
pop
(bad)
xchg
mov
lds
inc
xchg
mov
dec
addr16
mov
iret
add
xchg
repz
jle
data16
mov
movsx
in
fstp
add
stos
inc
ins
hlt
out
sub
fs
popf
mov
inc
sub
in
aaa
pop
lds
mov
std
jne
or
out
sbb
dec
pop
xor
and
pop
pop
cli
lods
pop
lods
mov
pusha
lods
sbb
mov
fnsave
sub
push
movd
dec
dec
sbb
sbb
idiv
push
stos
jp
add
mov
outs
cmp
shl
jnp
(bad)
aas
shl
jmp
hlt
nop
mov
and
push
adc
mov
cmp
dec
std
int
in
xor
sub
and
pop
or
lea
test
(bad)
mov
mov
mov
retf
or
dec
mov
je
shl
fnstcw
sbb
mov
adc
xor
pop
aas
cmp
out
fidivr
cmp
popf
lahf
mov
cli
sub
sbb
mov
adc
addr16
jnp
jecxz
jb
jbe
cwde
inc
dec
lds
xor
ror
push
inc
pop
or
dec
push
xor
ins
or
push
xor
mov
cdq
imul
and
cmp
push
movs
pop
leave
mov
mov
pop
adc
and
aam
loope
mov
das
pop
hlt
in
and
pop
mov
or
mov
jge
and
sub
xlat
movs
inc
and
cmp
jmp
das
sahf
add
xchg
pop
xchg
xor
mov
adc
mov
cs
ins
inc
fistp
iret
jns
sti
pop
movs
jp
and
mov
sar
push
aad
stos
mov
leave
inc
xchg
push
and
xor
xchg
lea
cmc
bound
sub
jae
cmp
in
test
push
push
pop
jb
pop
mov
das
ss
stos
cmp
stc
sub
inc
sahf
outs
cpuid
xchg
mul
mov
stos
mov
scas
jge
(bad)
push
aad
inc
cs
cli
imul
pushf
aaa
shl
aad
lods
movntps
idiv
mov
mov
pop
icebp
or
sbb
and
fs
or
jne
lea
movs
mov
test
leave
outs
add
mov
push
sbb
ds
mov
in
dec
ja
push
sub
repnz
(bad)
test
retf
sub
xor
lods
movs
arpl
ins
(bad)
in
outs
scas
push
xlat
sub
push
fisttp
out
test
cmc
sti
and
ins
pop
jmp
and
mov
aas
test
movs
ins
je
inc
aaa
xchg
cli
mov
call
and
add
lods
and
fdiv
dec
stc
and
cmp
xor
fwait
shl
mul
mov
xor
dec
xchg
add
test
add
xor
mov
xor
or
xchg
lods
inc
movs
retf
sbb
push
lahf
ja
inc
cmp
dec
stc
test
fwait
push
jnp
fcmovnb
jns
push
out
mov
ret
adc
mov
xchg
push
and
fild
xchg
pop
xor
push
cmp
jb
mov
loopne
mov
inc
push
mov
int
and
call
outs
push
inc
xchg
outs
add
ins
scas
xchg
pusha
add
push
out
mov
xor
aam
fstp
cli
pop
sbb
xor
dec
out
inc
into
pusha
dec
mov
xor
bound
mov
inc
popf
xor
pop
iret
cs
daa
jmp
push
fidiv
adc
mov
jbe
(bad)
jg
xchg
jae
loopne
and
jg
stos
pop
pop
mov
cmp
xor
cli
imul
dec
adc
sub
out
in
cmp
or
jg
push
dec
mov
(bad)
lahf
xor
aaa
xor
xchg
mov
call
gs
cmc
inc
cli
aaa
gs
or
xchg
adc
and
(bad)
and
stos
cli
pop
bound
in
ret
cmp
xchg
mov
inc
and
push
and
sbb
cmp
mov
mul
pop
daa
inc
mov
sub
lock
pop
out
xchg
cmp
out
push
lea
inc
xor
sbb
(bad)
mov
dec
scas
inc
retf
mov
cmps
sbb
imul
repz
mov
mov
push
push
cs
fdecstp
cmc
add
ds
push
les
neg
lods
or
inc
lods
lods
push
and
adc
mov
lock
push
into
test
mov
shl
xchg
mov
int3
or
idiv
or
mov
dec
adc
inc
out
in
and
sub
push
ds
repz
addr16
aam
cs
repz
pop
mov
sub
add
xchg
daa
mov
js
cmc
mov
dec
push
inc
(bad)
pop
dec
xchg
mov
mov
fdivp
lsl
adc
ror
inc
fld
cmp
push
scas
dec
and
fld
mov
mov
xchg
dec
and
sbb
pop
mov
adc
retf
pop
dec
jle
rcr
sbb
std
call
sbb
and
pop
inc
(bad)
shl
jg
dec
inc
jo
inc
int
and
cmp
nop
and
cwde
fxch
pusha
fwait
xchg
fmul
ret
stos
nop
mov
mov
sbb
loopne
sbb
ficom
jmp
out
idiv
push
ss
fld
mov
fdiv
lods
dec
dec
mov
daa
(bad)
cmp
mov
cmp
fcmovnu
add
mov
sahf
lock
jmp
mov
inc
cmps
sbb
not
loope
fmul
jl
gs
inc
daa
stos
and
jge
xchg
push
sub
stos
out
ret
cmps
and
aaa
pusha
or
xor
ret
dec
jnp
(bad)
loop
int
dec
mov
mov
dec
aam
cmp
pushf
sub
jbe
jbe
fnsave
std
push
fs
outs
or
or
add
adc
or
es
or
xchg
xor
cmp
and
jmp
sbb
test
push
sub
imul
movs
inc
xor
movups
call
sbb
xor
xchg
enter
sub
test
inc
retf
cs
cmps
inc
scas
in
xchg
sbb
push
fs
mov
xlat
cmp
jnp
fucomp
sti
add
fidiv
out
xchg
mov
js
fild
jae
cli
fldenv
xchg
push
pop
xchg
sti
xchg
adc
es
jne
mov
inc
js
popa
in
jecxz
fsub
shr
and
xor
mov
movsx
inc
scas
ins
dec
fwait
mov
cld
out
push
mov
out
jns
loope
or
xchg
push
iret
scas
dec
neg
pop
pop
pop
mov
xor
(bad)
cmp
cmc
dec
and
mov
test
fdiv
inc
pushf
add
(bad)
das
in
mov
lock
jecxz
loope
inc
push
mov
or
call
sub
lds
jne
stos
lds
sar
inc
test
add
add
or
cmp
call
popa
cs
sub
fidiv
inc
imul
mov
mov
into
mov
test
mov
or
bnd
inc
(bad)
add
jl
xlat
scas
gs
aad
js
push
in
cmp
retf
lahf
daa
fidiv
(bad)
je
jg
and
addr16
outs
(bad)
add
pop
lea
cmp
mov
(bad)
mov
pop
xchg
scas
pop
mov
jae
jo
cwde
jno
xchg
xchg
fs
inc
jle
jnp
cmp
cmp
cld
push
and
xor
add
mov
mov
dec
into
adc
sub
popf
cmp
les
dec
sub
mov
aam
in
ret
cmp
jmp
mov
jbe
push
inc
sub
add
push
loop
pop
sti
cmp
adc
adc
mov
dec
sbb
dec
xor
gs
dec
(bad)
daa
add
test
sub
icebp
test
dec
sbb
xor
dec
xor
pop
jp
cmps
ficomp
into
xor
mov
add
call
rcr
xor
rcl
clc
jae
enter
xor
bound
retf
rcl
mov
lds
fisub
call
fs
aaa
(bad)
pusha
sbb
sub
popf
(bad)
cli
adc
pop
fs
and
stos
fwait
jae
aaa
xor
retf
and
dec
scas
repz
cli
fisubr
mov
hlt
repnz
inc
mov
cmps
call
cmp
or
sub
daa
or
jnp
mov
ret
fdiv
loope
mov
xor
enter
fcmovbe
(bad)
mul
(bad)
cmp
pop
sar
inc
rcr
cs
mov
call
push
test
mov
shr
cwde
inc
xchg
or
and
outs
div
jmp
das
push
jo
shl
xchg
add
imul
mov
fstp
jecxz
and
movs
pop
mov
fidiv
and
test
push
stc
inc
inc
pop
add
fsubr
fiadd
mov
mov
pop
or
pop
nop
outs
xor
(bad)
dec
push
pop
jnp
rcr
mov
test
movs
sub
xchg
movq
ins
test
rcl
in
lds
xchg
in
(bad)
push
mov
xor
out
aam
jo
test
mov
pop
ds
push
inc
in
bound
and
mov
int
ficom
push
adc
imul
sub
xor
jmp
add
(bad)
push
sub
shr
enter
arpl
lock
mov
or
adc
iret
mov
xlat
or
and
aad
loope
and
or
mov
aam
pop
or
fdivr
cs
jae
scas
loopne
mov
js
popa
xlat
inc
push
jl
iret
adc
inc
fs
push
inc
dec
mov
jmp
mov
repnz
in
adc
ins
(bad)
fild
and
sti
sub
fcomp
inc
lahf
retf
sbb
mov
lock
nop
push
shl
rcl
scas
push
mov
rcl
mov
repz
jae
inc
imul
leave
mov
mov
int3
arpl
dec
add
mov
and
cmp
push
cdq
inc
je
lds
mov
mov
ret
fidiv
or
sbb
test
lods
test
jbe
loopne
pop
(bad)
add
xchg
xchg
call
das
jb
push
mov
pop
iret
clc
repnz
cmc
call
ret
bound
xchg
test
pop
lahf
shl
mov
lea
fwait
jmp
xchg
fbld
loop
out
push
int3
jg
(bad)
fs
idiv
ret
arpl
into
dec
sbb
stos
mov
cmp
test
fwait
or
rcr
and
test
cmps
sbb
scas
inc
jl
das
add
mov
pop
call
xchg
push
nop
adc
sub
cmp
ja
sbb
adc
scas
pusha
repz
(bad)
stos
in
mov
cs
mov
jns
mov
lods
ror
sbb
pop
sbb
call
sub
or
xchg
cmc
or
xchg
xchg
je
enter
cs
int3
sub
fdivr
mov
nop
ins
sbb
mov
pop
xor
inc
stc
sar
pop
adc
lahf
fsubr
frstpm(287
cmp
retf
loopne
and
add
adc
and
fimul
in
dec
dec
outs
mov
das
ficom
mov
inc
dec
mov
mov
icebp
inc
sub
fwait
lahf
bound
je
dec
daa
or
inc
aaa
dec
mov
xchg
clc
push
dec
push
xchg
and
sbb
sub
push
movs
jl
dec
mov
gs
or
xchg
xchg
les
jns
inc
inc
pop
fs
cs
pop
call
lods
movs
mov
call
retf
inc
dec
xor
vaddsubpd
pop
push
and
movs
shl
in
jns
or
aaa
pop
push
add
jnp
cmp
adc
push
inc
call
cmovb
shl
sahf
inc
lds
sub
cmc
jbe
xchg
and
push
mov
sbb
inc
mov
int3
shl
pusha
sbb
iret
jnp
stos
fcomip
addr16
push
cmp
cmp
dec
and
loopne
(bad)
imul
je
leave
jne
pushf
adc
dec
das
cmps
mov
scas
xchg
arpl
sbb
or
scas
jp
sahf
inc
xlat
xchg
jle
xlat
popa
lods
mov
sbb
pop
pop
test
les
mov
sbb
ror
data16
movs
in
sbb
add
pop
retf
cmp
mov
ss
push
fdivr
popa
outs
push
mov
fidiv
jg
cmp
push
jge
push
push
sar
jmp
lock
leave
mov
les
aas
movs
mov
cwde
inc
adc
ins
mov
pop
js
je
nop
movs
in
popf
outs
aam
sbb
inc
pop
repz
mov
xor
jecxz
test
int
in
dec
popa
cmp
cmps
call
nop
cmp
and
mov
rcr
fsubr
les
mov
fmul
cmp
int3
pop
push
nop
jb
lds
fwait
pop
cmp
jmp
and
xor
add
fisub
jmp
(bad)
mov
xlat
mov
jmp
mov
push
nop
push
addr16
ds
fdivr
push
adc
push
gs
or
jg
push
cmp
dec
mov
aas
popa
cld
xchg
mov
push
(bad)
dec
mov
pop
ret
jmp
sub
retf
jnp
les
clc
mov
(bad)
(bad)
lahf
shr
sbb
out
mov
inc
sbb
(bad)
loope
push
ins
dec
cmp
adc
sub
repnz
sbb
cs
test
add
pop
ja
sbb
std
cmp
jmp
(bad)
(bad)
sti
xor
int
xor
cmp
sub
cli
push
push
cmp
jp
sbb
push
les
pop
push
xchg
mov
inc
psubusb
clc
xor
rcr
hlt
push
fst
retf
or
push
mov
inc
xchg
outs
je
sub
pop
int3
les
je
sbb
icebp
pop
or
sbb
arpl
in
push
mov
and
xor
ret
mov
mov
jbe
ds
ins
xchg
jo
mov
mov
add
mov
or
cmps
mov
(bad)
mov
xchg
pop
push
hlt
pop
das
push
adc
mov
inc
cli
test
or
mov
mov
xchg
push
add
loop
lock
inc
cmc
clc
ret
cmc
test
sub
clc
sub
dec
icebp
ds
pop
sbb
lahf
push
lods
test
inc
ds
(bad)
nop
fwait
clc
xor
sbb
in
mov
pop
sbb
inc
jp
pop
adc
inc
mov
push
nop
sub
loop
pop
loopne
sti
pop
add
dec
mov
jmp
mov
jl
adc
stos
popf
pop
out
rol
shr
adc
das
arpl
and
add
xor
test
mov
and
xchg
xor
mov
pop
pop
pop
(bad)
jle
jp
in
add
sbb
stc
stc
es
data16
mov
fst
(bad)
hlt
aam
shl
sub
push
test
inc
sar
lds
adc
inc
sub
cld
addr16
outs
mov
shr
mov
cmp
popf
mov
adc
xlat
jae
push
add
jnp
shl
arpl
lods
lock
stc
add
mov
dec
pop
cmc
jnp
xor
leave
in
inc
(bad)
call
adc
cs
adc
je
leave
mov
pop
mov
(bad)
out
inc
pop
cmps
(bad)
lock
pop
pop
icebp
xlat
jmp
std
ins
and
xor
mov
cmp
sbb
xchg
mov
mov
sub
lahf
fimul
mov
ja
pop
mov
(bad)
das
cmp
icebp
stos
fisubr
dec
mov
pop
xchg
cmp
sbb
ss
mov
(bad)
scas
cwde
sbb
push
or
outs
xlat
push
dec
add
clc
shr
mov
mov
xchg
popf
xchg
outs
jo
adc
push
mov
scas
std
call
mov
xchg
xor
in
shl
jnp
js
out
outs
das
mov
shl
mov
je
iret
popa
div
cwde
mov
cmc
pushf
(bad)
movs
leave
push
push
in
push
stos
jnp
lods
icebp
addr16
fwait
lea
mov
xor
out
add
test
inc
xchg
fld
jb
lock
loope
push
jo
leave
(bad)
mov
or
adc
(bad)
int
sbb
jge
jmp
push
loope
or
mov
repz
jb
jns
ret
and
stos
add
or
out
push
(bad)
addr16
test
jo
inc
dec
fld
sub
dec
popa
or
jmp
adc
mov
stos
sub
adc
dec
dec
pop
cmp
lods
pop
and
xchg
and
retf
cdq
popf
adc
sub
mov
aas
cmp
test
push
mov
(bad)
jg
cld
xchg
and
mov
and
cmps
fwait
pushf
push
xor
mov
push
cmp
and
ror
es
jne
pushf
mov
push
fsubrp
mov
push
push
pushf
pop
jge
xor
cld
adc
ins
mov
and
add
js
inc
test
jne
das
or
mov
push
xchg
lahf
test
lahf
jp
retf
and
aad
sbb
or
inc
stos
xor
ret
je
cmp
mov
push
jnp
xchg
retf
jb
adc
jmp
jo
pop
mov
cli
lahf
inc
jbe
call
inc
fwait
ror
stos
mov
pop
mov
mov
inc
inc
clc
pop
sub
std
pop
push
sub
sub
xor
jge
jno
xchg
hlt
jae
add
cmp
addr16
shl
and
icebp
mov
retf
popf
push
les
mov
cs
mov
loopne
mov
sub
add
stos
repnz
dec
lahf
dec
mov
mov
mov
movs
push
pop
inc
cs
sti
lods
rol
xor
into
jle
dec
dec
cmp
or
dec
std
mov
push
mov
mov
ds
jne
and
ins
(bad)
inc
fcmovb
adc
jp
call
push
popf
add
add
push
add
(bad)
out
push
pop
lods
and
xchg
xor
bnd
les
stos
sbb
inc
pop
sub
inc
pop
mov
xchg
gs
bound
pop
mov
inc
ja
ja
mov
xor
mov
dec
xchg
xor
and
sbb
sub
mov
adc
call
ror
scas
jnp
adc
arpl
not
nop
inc
fild
enter
(bad)
movs
repnz
jbe
and
(bad)
(bad)
les
out
(bad)
addr16
or
mov
mov
(bad)
in
ret
inc
sahf
push
mov
imul
mov
(bad)
ds
bound
mov
push
std
jmp
xchg
sbb
xchg
jmp
push
pop
test
int
cmp
je
and
in
bound
loope
adc
sbb
push
fidivr
sbb
jecxz
nop
mov
push
xor
cmp
daa
mov
xor
pushf
imul
push
(bad)
clc
dec
sbb
out
sbb
movs
popf
xchg
sub
pusha
sbb
mov
dec
xchg
ins
adc
mov
push
sub
mov
mov
jae
cld
fs
and
fwait
pop
xor
or
or
(bad)
sub
sub
xor
pop
aad
in
fcom
or
pop
iret
pop
sti
cmp
push
mov
ficom
or
mov
sti
fistp
pop
sbb
and
fcomi
adc
ins
jbe
dec
cmp
shl
pop
dec
jge
pop
sub
xchg
test
sbb
out
aam
and
lea
xchg
cdq
push
mov
sbb
mov
xchg
xor
mov
fucomip
adc
jp
gs
shr
lock
into
mov
inc
and
leave
fs
sub
(bad)
std
jae
fsub
cmp
fsubr
(bad)
xchg
adc
push
in
jnp
imul
mov
inc
stos
mov
mov
pop
ins
mov
mov
xor
jb
jge
mov
jmp
adc
sbb
jg
ret
leave
xchg
lods
outs
sbb
jb
mov
sbb
cmps
daa
mov
jne
aas
mov
pop
aaa
push
mov
ds
das
xchg
mov
and
rol
adc
jo
pop
aaa
add
out
pop
movs
dec
or
fsubr
jmp
sub
lods
add
add
pop
shl
fwait
push
dec
or
leave
movsx
clc
pop
lods
mov
lock
dec
mov
cs
into
pop
inc
fbstp
jmp
inc
(bad)
lahf
fnsave
popf
or
and
popf
popf
adc
mov
mov
js
cmp
stc
in
jne
sbb
pop
push
xchg
sbb
fld
sub
mov
stc
sub
not
mov
jns
jmp
push
stos
add
adc
jg
outs
int3
and
cmc
jg
or
mov
test
rcr
adc
into
cmp
inc
jmp
shl
add
fstp
loop
sti
loop
xor
cs
int
jbe
push
push
dec
mov
push
cmp
fmul
nop
mov
aaa
mov
int
dec
adc
es
(bad)
bound
or
xlat
adc
push
js
mov
aas
inc
cmps
jne
shl
fwait
mov
xor
cmp
or
rol
rcr
dec
mov
inc
xchg
(bad)
xchg
mov
mov
rcr
stc
icebp
fisttp
jecxz
sti
add
jo
(bad)
and
pushf
pop
adc
adc
(bad)
mov
mov
clc
add
dec
pop
pop
rol
shl
adc
jne
dec
fnstsw
inc
or
pop
and
aaa
cmp
popf
lods
clc
cmp
retf
popa
sbb
mov
cmp
mov
sbb
and
mov
add
lods
sub
xor
nop
jbe
and
jae
cli
adc
repz
pop
xor
out
push
jns
mov
inc
sti
das
movs
xor
xchg
test
pop
xchg
sar
out
ins
into
sub
or
(bad)
fsubp
lods
test
cmp
jbe
(bad)
retf
dec
sti
int3
stos
dec
push
les
pop
cmp
fdiv
sub
jne
xor
sbb
cwde
not
js
bound
sub
je
or
push
push
addr16
sub
inc
mov
in
sbb
dec
xor
sahf
daa
pop
int
sub
xchg
or
dec
pop
xchg
jle
inc
mov
test
jmp
adc
jb
and
mov
inc
push
mov
or
retf
aaa
cwde
push
mov
push
fimul
out
je
dec
pop
xor
addr16
cmp
jl
stos
lahf
inc
and
sbb
out
inc
dec
dec
loopne
rcl
jge
(bad)
movs
mov
pop
lock
ret
test
and
pop
and
stc
xacquire
movs
and
mov
and
xchg
loope
shr
dec
into
loop
cmps
scas
test
pushf
imul
xchg
jb
int3
in
out
pop
cmp
xchg
dec
mov
call
cwd
bound
es
xchg
pushf
ja
call
push
fiadd
cmp
lds
fidivr
and
push
mov
add
leave
js
or
scas
in
xor
cs
call
dec
sbb
iret
inc
mov
adc
pop
sub
pop
adc
mov
add
xor
sub
aam
inc
inc
arpl
push
ficom
cmps
mov
cmp
mov
pop
inc
push
lahf
dec
mov
(bad)
push
jnp
dec
pop
mov
add
lahf
es
popf
fstp
inc
push
enter
jbe
jecxz
xchg
ins
xchg
call
out
jg
xor
dec
scas
loop
or
mov
jecxz
mov
movs
aam
stos
and
xchg
fwait
adc
mov
push
out
fisub
push
call
mov
clc
dec
iret
jns
jb
shr
sub
pushaw
call
mov
inc
dec
nop
ds
push
(bad)
jne
xchg
and
neg
push
js
sar
jnp
fs
push
adc
pop
inc
in
(bad)
jne
mov
ja
add
push
iret
xor
repz
jns
inc
sub
xchg
cli
gs
adc
dec
clc
or
les
dec
or
call
cwde
data16
or
cs
mov
push
out
sahf
xchg
out
sub
mov
and
leave
nop
dec
jb
cld
mov
pop
out
loopne
dec
xchg
bound
pop
jns
mov
jp
cwde
adc
inc
sub
shr
push
xchg
or
(bad)
jl
add
bound
and
movs
stos
push
scas
jl
xor
and
je
add
push
popa
push
ins
xor
add
dec
ret
ret
fmul
stc
dec
push
xor
cmp
inc
jmp
lahf
ror
cmp
mov
push
aaa
xchg
adc
les
retf
imul
out
ret
add
add
sbb
adc
mov
and
fstp
xchg
pop
cli
adc
icebp
xor
out
aad
mov
sub
push
aas
mov
push
pop
sti
setnp
fld
in
pop
jae
retf
adc
fs
pusha
mov
frstor
(bad)
jno
dec
aad
int
stc
pushf
movs
xchg
dec
xchg
rol
dec
leavew
and
(bad)
xor
mov
cmp
mov
or
adc
pop
test
inc
sub
ror
outs
lds
add
(bad)
push
dec
push
sbb
xor
sub
bound
lahf
mov
and
loop
pop
mov
dec
xchg
mov
sbb
mov
pop
adc
xchg
mov
lea
push
cli
jae
jp
mov
sub
(bad)
xchg
xchg
adc
dec
ret
ss
push
(bad)
cmps
mov
imul
and
xchg
jl
or
in
mov
enter
mov
xor
inc
stc
push
std
or
cmps
push
ins
adc
mov
gs
sub
mov
es
push
add
jle
xlat
ja
scas
sub
in
daa
pop
inc
mov
pop
rol
nop
pusha
je
mov
gs
(bad)
push
mov
push
and
xlat
and
mov
loop
test
xchg
mov
mov
jns
or
scas
stc
push
retf
ret
cmp
in
rol
xchg
pop
(bad)
fst
es
jnp
mov
(bad)
xchg
out
push
sar
jno
sahf
movs
ffreep
ret
cmp
mov
jne
xchg
ror
out
lock
mov
outs
popa
mov
sbb
and
xlat
add
(bad)
cwde
dec
int
ror
cmc
pop
sub
cmp
not
cwde
in
mov
fcom
push
out
mov
cmp
sti
retf
add
jge
or
push
loope
dec
cld
mov
es
popa
popf
add
sahf
push
cmp
fwait
adc
jle
das
mov
arpl
xor
ins
xchg
rol
test
inc
int
sub
or
cmp
in
cmps
inc
movs
gs
push
movs
movs
jg
hlt
popa
push
div
clc
fcmovnb
popa
xor
addr16
push
ret
call
movs
ss
push
adc
xchg
test
retf
sbb
xor
les
pop
adc
cmps
aam
(bad)
stos
push
jg
scas
mov
mov
jb
call
mov
pop
mov
icebp
shr
sar
stos
xchg
pop
scas
jne
clc
mov
sub
fst
lea
sub
sub
pop
ss
mov
scas
inc
gs
rcr
xchg
gs
dec
dec
jp
enter
sti
pop
mov
repz
and
data16
jecxz
mov
out
idiv
jge
jno
(bad)
fld
or
clc
adc
or
cmp
clc
cmp
fsubr
scas
out
ss
loope
pop
pop
addr16
addr16
fbld
sub
cmp
adc
(bad)
lods
mov
mov
adc
cli
pop
jb
stos
jno
mov
adc
xor
scas
retf
mov
or
and
fnstsw
sar
mov
adc
jmp
jne
dec
inc
pop
leave
xchg
xchg
in
inc
fistp
out
adc
jg
cmp
push
outs
stos
sbb
in
int
push
dec
push
cmp
repnz
and
xchg
push
lock
loopne
pop
and
movs
daa
out
cmps
loopne
cmp
xor
mov
es
outs
frstor
repz
mov
push
je
mov
mov
xlat
xchg
movs
jge
sub
push
adc
add
cmp
and
mov
xor
and
in
jp
retf
sub
stos
imul
adc
mov
and
xchg
bound
or
es
cmp
and
shl
xor
cmc
dec
(bad)
pop
sbb
fbstp
daa
jno
xchg
aam
fimul
xchg
js
mov
mov
jmp
scas
mov
(bad)
mov
ja
cmc
mov
out
dec
fadd
inc
popa
stc
aad
mov
add
cmp
xor
daa
sbb
push
fisttp
mov
test
inc
stc
ins
icebp
mov
jno
arpl
mov
inc
xlat
(bad)
pusha
push
repz
mov
test
or
loop
jle
add
arpl
test
jecxz
rol
hlt
jmp
mov
xor
in
jp
jno
leave
int
fld
cmp
jg
dec
seto
loope
sub
push
inc
push
mov
mov
inc
inc
xor
test
data16
xchg
mov
cmps
sahf
into
ins
cmp
and
cmp
cmp
add
mov
mov
nop
repz
dec
pop
jns
mov
jmp
das
into
ins
ret
mov
out
xchg
push
cld
stos
xlat
jge
sub
mov
pusha
jecxz
mov
and
test
inc
xchg
xor
sub
push
xchg
jmp
dec
ja
mov
add
mov
ins
outs
repnz
mov
movs
sbb
jno
stc
cmps
shl
jecxz
test
xor
out
iret
push
and
push
and
movs
je
sub
inc
mov
push
push
mov
frstor
imul
scas
cdq
push
arpl
mov
inc
dec
add
xchg
xor
push
adc
loop
scas
cdq
push
pop
and
sub
mov
dec
jnp
push
xchg
add
jg
xlat
jmp
or
aaa
fnstenv
into
test
fisubr
jle
add
and
adc
test
and
adc
sbb
fldenv
add
push
pop
sahf
or
scas
cld
sub
cmps
sar
push
add
repz
test
(bad)
(bad)
xlat
jns
mov
add
pop
mov
xlat
pop
xchg
nop
cwde
add
push
sub
ins
retf
iret
mov
repz
hlt
mov
mov
fldenv
adc
mov
lea
and
loope
in
cmp
push
dec
aad
add
inc
retf
sbb
ldmxcsr
mov
fst
ja
inc
je
jg
push
lds
and
cmp
stos
add
pushf
sub
push
fsubr
aam
outs
repz
(bad)
xlat
std
test
fst
inc
sbb
mov
adc
scas
fs
xor
(bad)
popa
xlat
sub
adc
lahf
sub
les
or
mov
add
inc
pushf
inc
pop
in
jae
stos
sub
stc
shr
mov
push
jb
xchg
inc
rcl
jno
fcom
xor
js
jae
sti
cli
jns
ins
mov
jge
mov
aad
cdq
sbb
mov
ret
mov
sub
mov
loop
cmp
lock
push
push
adc
mov
je
dec
jmp
mov
in
adc
loope
inc
mov
xlat
daa
xchg
(bad)
daa
retf
dec
bound
(bad)
fcomp
aad
lods
xchg
in
out
and
xchg
mov
xchg
xor
cmps
popf
repnz
push
adc
test
mov
xchg
(bad)
sbb
adc
cmp
enter
movs
inc
nop
movs
aam
call
xor
mov
not
test
and
lods
push
mov
jb
jmp
adc
movs
and
setno
in
into
movs
adc
xchg
pop
pop
test
inc
adc
xchg
or
mov
or
shr
pop
repz
push
retf
jnp
or
add
in
sub
add
jmp
in
cs
mov
sbb
sub
mov
jb
jle
(bad)
mov
scas
es
mov
repz
dec
rcl
rol
mov
sahf
daa
inc
sub
lds
mov
sub
jge
xchg
xchg
test
fcmovne
xchg
push
pop
in
stc
mov
fisttp
mov
pop
or
loop
cs
enter
(bad)
nop
ret
outs
jp
xor
pop
enter
cmps
jae
fwait
push
test
dec
adc
nop
call
cmp
mov
cmp
inc
das
xor
into
pop
adc
and
adc
cmc
and
retf
xor
push
in
jb
daa
test
movs
test
iret
fbld
pop
inc
outs
pop
loopne
repz
shr
sar
jmp
lahf
arpl
ret
sub
das
or
dec
inc
sub
adc
test
sbb
cmp
sub
stc
cmps
fsubr
adc
pop
mov
mov
sbb
xlat
cs
test
sub
out
and
mov
arpl
loop
in
ror
mov
fdiv
(bad)
mov
sti
data16
inc
cmp
cmp
fwait
sub
mov
test
dec
mov
mov
inc
push
and
lds
sub
(bad)
leave
push
mov
push
jns
aas
mov
xchg
sar
fld
call
das
cmp
add
inc
jg
rcl
cmc
sahf
or
xor
push
lods
sbb
call
adc
ror
pop
jnp
repz
movs
test
aas
lods
lods
and
adc
dec
jne
stc
mov
fucomp
sbb
je
mov
inc
xchg
xchg
cmps
stos
(bad)
call
into
xchg
fmul
lahf
mov
mov
inc
cli
sbb
jecxz
fsubr
ret
fsub
into
push
fnstsw
enter
xor
addr16
les
and
cmc
jl
jns
neg
push
push
cmc
pusha
mov
lahf
cmp
ss
pop
mov
xchg
xchg
not
lock
xor
push
add
js
adc
sub
(bad)
jne
push
add
xchg
jnp
clc
fimul
lds
pop
sub
sbb
sbb
aaa
test
push
retf
sbb
or
stos
aaa
pop
or
mov
sub
loopne
and
inc
pusha
mov
add
gs
inc
jae
movs
mov
dec
mov
cdq
imul
xor
pop
push
push
stos
and
jl
push
sub
push
(bad)
imul
das
jp
cmp
sbb
rcr
mov
sub
and
sub
ret
mov
push
mov
leave
pop
push
pushf
pop
(bad)
lds
in
cdq
dec
sbb
(bad)
push
outs
or
adc
cwde
cmp
push
add
xchg
(bad)
mov
fidivr
jmp
inc
mov
repnz
jl
loop
dec
or
pop
push
call
(bad)
cmps
iret
cld
xor
mov
outs
cmc
dec
in
mov
jns
xchg
xor
pop
jmp
call
pop
inc
xor
xchg
vpcmpgtd
(bad)
jmp
fistp
sti
test
out
mov
and
and
pop
inc
push
ds
add
jns
outs
sbb
sbb
push
jns
fs
jp
mov
inc
push
mov
jae
mov
cli
or
(bad)
mov
or
push
mov
mov
stos
call
hlt
movs
sub
xchg
push
sbb
or
sub
add
ret
ror
clc
retf
cli
(bad)
push
adc
stos
xchg
mov
es
mov
ss
mov
into
xchg
lds
mov
mov
adc
dec
aam
int
shl
mov
hlt
shl
or
mov
pop
jle
and
jne
sbb
mov
ins
daa
pop
dec
ins
les
lea
icebp
jp
in
mov
popf
out
data16
mov
cmps
arpl
mov
mov
pop
out
fstp
in
cwde
jle
mov
pop
adc
inc
xor
xor
mov
ret
mov
cwde
mov
and
shl
mov
pop
mov
and
inc
mov
outs
scas
daa
and
adc
shr
and
das
pop
stos
mov
fstp
mov
lock
mov
or
call
fucom
inc
inc
push
(bad)
stc
push
and
mov
popf
addr16
cmps
xor
and
sub
movs
aas
inc
xor
(bad)
push
sbb
add
cmp
cwde
or
fwait
xchg
lock
(bad)
jecxz
mov
adc
push
lds
cwde
xchg
sti
arpl
or
dec
iret
loopne
push
fnstenv
jb
mov
in
jmp
sbb
test
mov
mov
pop
jne
or
jns
cmps
in
call
adc
sub
cli
sbb
and
les
sub
out
dec
daa
cdq
cli
adc
inc
sub
sahf
inc
and
xor
mov
sbb
mov
mov
stc
sbb
mov
dec
ss
test
xor
push
mov
push
mov
jbe
push
hlt
ficomp
cmp
add
push
and
mov
fwait
das
or
adc
add
test
inc
sub
mov
sbb
or
mov
push
or
cmp
stos
push
pop
aas
xchg
lahf
es
es
dec
and
pop
sub
xchg
pop
movs
aaa
les
and
iret
cli
cmc
sti
mov
jo
or
cld
in
sub
lock
mov
xchg
adc
cs
enter
bound
lods
cld
mov
and
(bad)
call
or
add
(bad)
clc
mov
xor
sbb
(bad)
repnz
inc
cmp
div
ins
jge
inc
xor
pushf
outs
or
ins
push
mov
les
cmc
adc
inc
xlat
sbb
xlat
jle
addr16
lea
adc
test
(bad)
jbe
xchg
retf
das
stc
mov
repnz
mov
push
in
mov
(bad)
jmp
xchg
jle
or
enter
jb
gs
push
(bad)
jg
test
inc
(bad)
mov
add
add
clc
aad
inc
add
retf
dec
fisub
retf
frstor
out
rcr
xor
test
xor
mov
adc
iret
sub
adc
mov
cmp
aam
out
cmp
mov
shl
and
fs
jle
mov
pop
jb
jb
nop
shr
dec
xor
dec
stos
cmp
in
dec
or
sub
(bad)
or
ret
push
add
fidivr
stos
jmp
push
retf
and
jmp
test
inc
inc
push
add
in
fisub
sbb
cmps
jne
mov
add
push
sahf
jp
in
adc
sub
cwde
mov
cmp
xor
dec
inc
(bad)
fldenv
nop
scas
sub
leave
stos
pop
test
(bad)
shl
pop
inc
cdq
mov
cld
mov
jne
(bad)
repnz
and
in
call
adc
xchg
xchg
out
xchg
jg
js
mov
std
mov
jo
les
dec
int3
inc
dec
gs
sub
mov
cmp
push
pop
fsub
jg
aas
jns
adc
jnp
push
ret
sbb
rcl
dec
add
jb
mov
mov
xchg
into
cli
mov
jbe
lods
mov
loopne
jb
add
xchg
or
adc
dec
test
pushf
sbb
ins
ins
aaa
dec
pop
int3
aas
out
push
adc
sti
bound
outs
push
out
mov
mov
cwde
adc
lahf
nop
cli
inc
sahf
shr
ror
xor
lea
add
add
dec
arpl
lods
(bad)
clc
(bad)
clc
push
mov
in
lods
jecxz
pop
inc
lea
cld
pop
dec
rcl
sahf
scas
aad
scas
push
test
aam
add
fwait
adc
or
jno
iret
and
jmp
es
cdq
stos
cmp
mov
jae
sub
xchg
mov
addr16
div
push
out
mov
mov
sti
mov
mov
(bad)
jg
sti
dec
inc
arpl
pop
aaa
or
or
add
sbb
test
aaa
fs
pop
mov
dec
vpmulhuw
add
cmp
cmp
adc
jge
pop
mov
sahf
or
inc
cli
push
mov
stos
sbb
lods
(bad)
nop
(bad)
xor
or
jo
(bad)
into
jns
pop
pop
sar
and
aas
(bad)
push
xchg
sub
daa
jnp
cmc
sbb
iret
jb
fbstp
mov
pop
aaa
sub
repz
xchg
jle
ret
dec
nop
in
inc
out
sub
xor
out
pop
mov
out
pop
mov
pop
out
adc
mov
pop
or
dec
sbb
xor
iret
popf
inc
sub
mov
(bad)
aad
outs
sbb
lds
mov
jns
add
sbb
call
mov
push
push
enter
fs
movs
imul
fs
and
nop
xchg
outs
iret
mov
stos
jmp
rcr
cmp
movs
test
in
xchg
imul
test
sbb
or
xlat
mov
jb
and
ret
jmp
outs
retf
test
cmp
daa
jmp
mov
lds
test
cmp
les
and
pop
lea
arpl
adc
scas
mov
push
or
inc
adc
mov
repz
xchg
leave
dec
jnp
dec
jge
sub
stos
cmc
ret
(bad)
push
jmp
add
xlat
mov
leave
cmp
jae
lock
ffree
fnstsw
mov
daa
div
jae
xor
into
mov
or
fisubr
das
fstp
inc
aam
lods
fisttp
mov
mov
popa
outs
pusha
daa
jo
xlat
or
nop
iret
sub
fmul
mov
mov
(bad)
dec
mov
mov
leave
aaa
enter
inc
stos
adc
mov
add
mov
jae
adc
inc
enter
(bad)
jge
jae
retfw
into
mov
xchg
movs
in
sbb
fcom
or
scas
inc
and
jge
mov
out
mov
data16
cmps
popa
inc
rol
repz
pop
in
sbb
jg
loopne
(bad)
jo
push
mov
inc
call
sub
xor
ret
mov
mov
xchg
jg
push
cmp
inc
fisttp
jmp
rcl
jo
(bad)
sbb
in
cmp
dec
sub
pop
loope
inc
ret
repz
outs
and
mov
cmp
xlat
push
cmp
lods
push
mov
and
pop
repz
sub
lahf
sub
and
jge
add
rcl
aaa
mov
test
push
mul
push
je
(bad)
jb
out
push
sti
test
push
push
xor
mov
rol
push
adc
cdq
leave
les
cmc
xchg
test
adc
dec
sahf
sbb
cli
dec
out
mov
push
ins
std
inc
out
push
jns
daa
imul
fldcw
sti
dec
and
test
sub
loop
sbb
sub
das
loop
cdq
ins
mov
xchg
or
mov
and
iret
mov
hlt
pop
popf
lods
rcl
pushf
in
(bad)
push
mov
sbb
sub
popa
test
pop
ja
xor
xor
fs
lods
lahf
jp
movs
rol
mov
ja
push
sbb
dec
xchg
stos
aam
dec
cmc
cmp
test
idiv
mov
imul
cmc
mov
pusha
xchg
ror
(bad)
or
scas
cmp
in
push
inc
xchg
lods
fst
mov
pop
sub
xchg
js
lock
push
pop
and
xchg
clc
adc
jnp
adc
ins
inc
inc
pop
rol
adc
cmp
outs
mov
lds
stc
mov
sbb
imul
sub
adc
and
imul
pusha
cwde
mov
or
push
adc
adc
add
int3
adc
pop
pop
jnp
inc
mov
or
out
xchg
loope
pushf
jb
(bad)
pop
js
mov
jge
mov
cmp
rol
out
or
and
test
add
cmps
push
cmps
add
in
adc
mov
div
enter
(bad)
ja
xor
fstp
and
cmp
(bad)
mov
mov
retf
or
ffreep
jp
push
xchg
and
xor
test
push
push
mov
leave
mov
fild
mov
outs
dec
aas
inc
adc
loop
mov
mov
add
sbb
loop
pop
stc
fimul
and
sbb
mov
sub
outs
pop
and
jmp
cmp
mov
pop
cdq
adc
(bad)
aad
mov
fnstsw
hlt
data16
pop
std
cmp
sbb
adc
xor
xchg
pop
jecxz
int
or
mov
mov
jle
cdq
lods
lahf
rcl
in
lock
jnp
lock
inc
sub
inc
and
mov
retf
mov
jb
imul
mov
push
mov
pop
sub
mov
pop
popf
jge
outs
mov
sbb
sbb
mov
fld
dec
(bad)
popa
call
out
xchg
dec
push
push
scas
mov
sub
pop
inc
xor
cmp
inc
fistp
sbb
imul
xchg
call
xchg
or
add
ss
ins
pushf
adc
fs
adc
and
or
(bad)
push
pop
sub
pop
in
sub
and
into
imul
xchg
neg
add
add
adc
xchg
cld
sar
xchg
pusha
mov
addr16
pop
dec
sbb
cli
stos
xor
mov
cli
dec
setae
sahf
std
cmps
jo
inc
add
and
sbb
adc
inc
cmp
push
mov
inc
inc
push
int
fsub
jmp
jnp
add
cmp
or
idiv
test
push
imul
jmp
aam
sar
cmp
in
add
inc
lahf
mov
les
pop
pop
pop
adc
lods
fdiv
xchg
ins
xor
test
jp
adc
cmp
ja
fsub
push
cmp
lds
sti
aas
popa
sbb
pop
aam
stos
adc
mov
push
mov
pop
sbb
scas
imul
dec
loop
mov
mov
or
retf
or
and
push
sbb
rcr
jbe
inc
es
inc
adc
dec
mov
aas
jecxz
out
retf
(bad)
xchg
xchg
sub
dec
dec
add
adc
cdq
and
sub
jl
jns
dec
fs
lods
sub
sub
outs
neg
add
addr16
or
xor
enter
fwait
mov
dec
inc
mov
jg
pushf
cdq
movs
or
pop
xchg
scas
mov
(bad)
(bad)
hlt
rol
adc
mov
imul
push
or
into
jne
jle
ins
xchg
or
call
mov
dec
push
rcr
push
test
das
push
leave
push
or
inc
cmp
or
les
mov
or
mov
lock
xchg
repnz
mov
jecxz
pop
fs
scas
inc
pop
mov
inc
aas
ss
pop
out
popa
inc
cmp
fdivr
lods
ss
cmp
sti
lds
lods
sub
dec
cmp
scas
sbb
pop
pop
inc
fstp
cs
xor
(bad)
or
movs
sbb
jo
fisttp
push
jb
or
mov
ret
cli
loope
inc
or
pushf
mov
mov
cli
push
or
adc
pop
dec
add
ficomp
jp
inc
mov
dec
ret
retf
jge
dec
ja
stc
cmp
xor
xchg
mov
mov
(bad)
imul
mov
lahf
add
test
push
js
iret
mov
fwait
add
and
icebp
mov
mov
in
dec
ror
mov
pushf
add
pop
sub
pop
xlat
out
ficomp
dec
aad
mov
push
adc
xor
mov
int3
icebp
jae
sub
fistp
jl
stos
retf
jb
dec
or
sbb
dec
pop
adc
hlt
iret
cmp
js
push
stos
xchg
pop
add
sbb
repz
sub
mov
into
push
fadd
(bad)
push
cmp
js
or
pusha
jmp
jbe
mov
adc
cmps
mov
test
loope
repz
dec
retf
jns
mov
jno
test
cdq
sahf
sbb
call
dec
jg
lods
xchg
xchg
mov
loopne
test
data16
mov
xor
call
sub
hlt
iret
scas
daa
icebp
xor
pop
clc
jne
mov
add
ret
sbb
mov
loope
adc
fucom
push
ror
outs
orps
inc
push
(bad)
pop
xchg
cli
mov
mov
fcom
mov
test
imul
test
pop
scas
and
sahf
dec
mov
jmp
jle
mov
mov
push
dec
mov
or
imul
mov
mov
outs
push
cli
or
pushf
pusha
imul
xor
mov
sub
xchg
pop
cld
lock
add
adc
mov
dec
mov
push
movs
sub
jb
adc
call
or
jmp
ret
popa
xor
sub
xor
out
sub
je
idiv
mov
dec
cwde
vmovapd
or
test
push
and
xlat
pusha
push
xor
mov
fld
push
jge
and
cmps
fstp
(bad)
sbb
sub
sahf
dec
sbb
out
nop
xchg
ss
jg
xor
and
das
add
cmps
ss
jmp
xor
pop
push
nop
cmp
cmp
(bad)
stc
mov
xchg
(bad)
xor
lock
ins
xchg
mov
and
xchg
cdq
dec
cld
pop
inc
fisub
js
aad
fwait
popf
pop
push
xchg
scas
jns
xor
repz
out
cmp
mov
inc
cmp
or
(bad)
js
xchg
lods
jle
sbb
aad
dec
fwait
out
pop
cmc
in
icebp
pop
(bad)
pavgw
adc
inc
pop
mov
iret
bound
xor
aaa
or
sar
cmps
rol
xor
mov
pop
aaa
outs
in
xchg
loopne
movs
aad
push
nop
xor
adc
sbb
push
stos
adc
jmp
or
inc
jge
gs
aam
or
or
mul
dec
lahf
sub
mov
cmp
mov
adc
add
in
jle
lea
sub
sub
stos
movs
ds
or
push
test
aaa
jg
dec
adc
mov
jge
pusha
stos
popa
push
imul
repnz
inc
sbb
test
cmc
xchg
add
movs
jo
cmp
cmps
popa
sbb
cmp
mov
in
dec
ds
cs
xchg
mov
pop
(bad)
sbb
jae
lock
pushw
icebp
inc
jmp
jbe
sbb
xor
sbb
loop
jnp
or
stos
vpaddw
movs
push
pushf
cmps
adc
mov
mov
and
scas
call
(bad)
aas
cli
inc
or
dec
ror
sub
push
mov
cmp
cmp
loop
in
pushf
jecxz
(bad)
push
xchg
ins
movs
mov
(bad)
jecxz
retf
test
data16
jbe
add
xchg
out
mov
out
push
sti
xor
jge
or
test
xlat
xor
push
es
test
jg
cmp
popa
out
fs
sub
add
and
outs
push
mov
cmp
inc
(bad)
sub
ja
lds
mov
mov
ds
ds
push
icebp
aaa
icebp
(bad)
mov
pop
gs
rol
enter
mov
xor
jb
mov
shl
fld
mov
pop
jmp
xor
xor
clc
inc
jae
dec
jge
pop
fcomp
out
lahf
dec
mov
arpl
dec
jle
rcr
jb
leave
jae
cld
add
inc
or
xchg
retf
mov
xor
pop
mov
jmp
dec
push
icebp
jae
les
sub
or
outs
xor
sahf
retf
xchg
and
xor
inc
arpl
dec
adc
mov
mov
xchg
ins
les
push
mov
les
adc
in
int
adc
imul
pop
cmps
int3
(bad)
div
pop
mov
cmp
push
call
or
cmps
and
pushf
sub
inc
pop
out
pop
jne
push
mov
jl
cmp
xchg
push
adc
jmp
cmp
pop
clc
cmps
cmp
fnstsw
lahf
push
in
call
cmp
leave
xor
jb
in
js
inc
rcl
lods
mov
push
loope
in
sbb
push
mov
fmul
mov
ss
fmul
adc
jae
(bad)
sub
(bad)
mov
push
xor
popa
xchg
pop
call
cmp
xor
gs
mov
test
cdq
pop
aaa
(bad)
ins
cmp
and
add
jbe
mov
sub
cmp
pop
pop
test
ins
jo
stos
test
mov
mov
mov
daa
(bad)
js
inc
adc
jns
fisub
scas
dec
mov
retf
cmc
lea
stos
add
cmc
mov
or
sbb
pop
adc
ins
pushf
adc
leave
leave
inc
push
mov
xchg
daa
mov
cmc
icebp
cmp
xchg
lock
shl
mov
retf
add
add
sbb
lahf
std
jmp
ss
and
inc
inc
mov
mov
xor
mov
aam
sub
jno
jg
xlat
int3
sbb
stc
xchg
pop
xor
in
and
pop
fst
movs
fdivr
dec
jl
out
dec
mov
xlat
dec
inc
mov
stos
outs
clc
xor
pop
dec
stos
dec
fnstsw
stc
das
push
aad
mov
in
lods
xchg
sub
not
stos
mov
and
ret
test
add
test
jne
xor
and
cld
pop
fwait
shl
inc
mov
ficom
or
or
scas
scas
popa
popf
ja
fcmovnb
add
addr16
adc
cwde
(bad)
fild
add
idiv
jbe
inc
fcmove
inc
shl
call
scas
add
out
xor
and
(bad)
ror
dec
enter
fstp
aad
pop
mov
pop
inc
mov
and
xchg
ret
cmp
dec
dec
inc
aam
push
add
cmp
ss
mov
inc
cdq
sbb
xchg
iret
sti
dec
mov
jp
(bad)
sbb
push
sub
cmp
in
adc
je
add
mov
cmp
adc
out
fild
jp
pop
std
jb
retf
adc
sbb
vunpckhps
fistp
icebp
je
test
adc
jmp
cmps
adc
rol
jl
movs
pop
adc
mov
int3
push
pushf
push
mov
add
pop
jne
ins
aas
jne
scas
pop
std
bound
pop
das
cmp
fnsave
test
aaa
sahf
test
cmc
sbb
push
ret
mov
bound
inc
fimul
inc
push
add
mov
xor
mov
leave
ret
push
xor
outs
mov
and
hlt
ins
mov
neg
fimul
xchg
es
ja
adc
mov
cs
mov
and
aaa
or
test
aaa
aas
stc
scas
cli
loope
or
fdivr
sbb
dec
inc
sti
fdiv
jae
retf
add
outs
add
pop
fld
dec
dec
ss
addr16
es
xor
lea
es
stos
ds
push
xchg
push
dec
fwait
outs
mov
stos
or
or
stc
or
xor
test
or
inc
dec
sar
push
inc
repz
dec
ret
xchg
repz
ret
mov
cdq
jecxz
sub
outs
mov
jge
test
cmp
xor
add
jmp
xchg
mov
pusha
or
shr
adc
mov
mov
imul
imul
xchg
jmp
daa
dec
ror
outs
das
mov
mov
xor
mov
into
add
pop
fsubr
or
(bad)
(bad)
adc
or
std
int3
sbb
jnp
jge
xchg
call
or
fst
cwde
mov
aam
mov
fldcw
mov
out
jnp
in
pop
icebp
xor
(bad)
aaa
je
pop
hlt
in
hlt
jnp
call
leave
out
das
xor
jbe
ins
adc
aas
mov
pop
adc
in
push
xor
fadd
dec
jmp
inc
xchg
loope
xor
out
data16
fstp
dec
fsub
xor
popa
mov
or
pop
add
adc
cmp
adc
ret
fwait
mov
cld
leave
test
ds
and
inc
sub
push
fld
xor
daa
xor
addr16
jo
and
lock
shl
addr16
imul
scas
push
cld
nop
stos
stc
(bad)
fucomip
repnz
dec
dec
mov
inc
sbb
sti
or
(bad)
mov
xchg
outs
adc
daa
push
push
dec
cmp
inc
std
hlt
les
jl
push
jns
(bad)
pop
mov
mov
pop
shr
cmp
mov
call
pop
sub
inc
in
jmp
and
sub
inc
push
cmpps
arpl
xchg
xor
lea
mov
lock
faddp
loope
mov
pop
fbstp
mov
ds
cmp
loopne
push
pextrw
pop
icebp
sbb
ffree
push
dec
inc
or
iret
cmp
in
sub
mov
pusha
cmp
and
and
jg
fstp
sbb
dec
cld
imul
mov
jnp
sub
mov
leave
mov
cdq
test
jns
xchg
ficomp
aas
mov
repnz
fadd
ret
jnp
jb
int3
mov
inc
out
stc
js
fisub
mov
adc
ins
push
xor
out
enter
lahf
sar
fdiv
pop
shl
mov
test
dec
cdq
jmp
inc
fild
cld
addr16
pushf
xchg
xor
jl
or
mov
adc
test
adc
mov
call
xchg
cmp
jo
icebp
into
stos
jp
and
jns
iret
mov
adc
mov
cmps
in
and
jo
dec
int
or
mov
dec
test
add
add
pusha
push
lock
hlt
stc
loope
inc
int3
add
js
add
inc
test
data16
push
outs
ret
repnz
dec
mov
out
fisttp
push
outs
cld
cdq
mov
jl
sbb
cmp
cmps
pop
mov
dec
(bad)
out
dec
leave
test
mov
scas
pop
inc
cmps
enter
call
sbb
pop
inc
push
lock
mov
sbb
(bad)
daa
sub
pushf
js
mov
mov
xor
or
sub
shr
and
out
mov
push
test
push
lock
pop
mov
jnp
scas
adc
in
push
stos
and
add
jle
mov
arpl
cmp
jo
mov
pop
xchg
call
xor
std
cdq
jle
not
stos
repz
sbb
fs
(bad)
shr
push
movs
or
mov
adc
mov
mov
call
retf
lahf
xchg
mov
sti
mov
loope
in
mov
in
push
(bad)
dec
out
fwait
sub
repz
nop
int
repz
jmp
pop
mov
inc
pop
jl
dec
fwait
imul
ja
pop
imul
ins
pop
fidivr
pop
jmp
ins
xor
out
imul
pop
and
adc
popf
mov
icebp
xchg
mov
add
inc
retf
in
out
shl
mov
cmps
pop
adc
jae
nop
mov
lods
xor
mov
lods
sahf
leave
or
mov
cdq
in
inc
imul
fbld
push
dec
sar
aad
inc
stos
mov
mov
jo
das
test
out
cmp
jmp
push
mov
pop
das
mov
data16
pop
mov
jcxz
adc
and
ret
jl
xor
pop
cli
and
mov
out
(bad)
jl
fild
push
and
mov
enter
int3
jecxz
pop
xchg
cmp
in
xchg
or
dec
cmp
out
xor
mov
out
aas
pushf
int
inc
(bad)
cli
push
sbb
je
mov
inc
mov
xor
idiv
mov
mov
inc
pushf
repnz
xor
jo
pop
mov
jge
push
leave
sar
mov
out
dec
dec
or
aas
scas
adc
dec
add
lahf
mov
(bad)
std
stos
stos
jle
ss
add
gs
ror
mov
cmc
add
jmp
xchg
or
push
in
sbb
push
call
mul
repnz
shl
adc
sbb
movs
loop
jnp
sti
mov
(bad)
add
sbb
aaa
arpl
stos
jns
dec
sar
scas
jne
pop
nop
jge
sti
repnz
mov
or
sub
sub
push
xchg
call
(bad)
setno
js
mov
repz
retf
sahf
xor
aad
push
ss
adc
pusha
popf
jp
stos
movs
jmp
outs
repz
out
jecxz
inc
jmp
jmp
adc
sbb
or
fisubr
lahf
(bad)
bound
enter
xchg
dec
js
les
shr
xor
inc
sub
mov
loope
test
ds
outs
out
mov
mov
test
pop
(bad)
pop
cld
fbstp
repz
push
mov
movs
mov
push
mov
xchg
dec
mov
pop
popa
ret
mov
mov
xchg
inc
add
and
push
bound
mov
loopne
arpl
xor
enter
in
ins
fyl2x
inc
push
jecxz
mov
mov
in
pop
das
dec
cmps
jnp
dec
and
jge
test
fstp
jg
nop
movs
fstp
div
jno
or
clc
cld
jmp
lahf
push
test
ins
ret
xor
sub
ficom
les
jmp
or
lea
int3
lods
fild
jmp
mov
in
pop
call
sub
pop
(bad)
ffree
rcl
rol
addr16
pop
adc
or
shl
dec
sub
jae
gs
cmp
outs
cld
rcl
dec
inc
jae
add
push
add
enter
pop
(bad)
arpl
scas
adc
mov
dec
cmp
(bad)
pop
lds
sti
mov
mov
add
not
pushf
int3
mov
xchg
inc
retf
jg
cli
ds
in
jo
pusha
push
lds
pop
cwde
xor
pslld
test
test
out
lock
dec
aad
mov
test
cwde
dec
je
adc
xor
pop
jl
mov
cmps
in
outs
sbb
dec
test
js
daa
mov
sti
pop
scas
bound
ins
aaa
stc
jle
mov
cmp
xor
hlt
rcl
xchg
mov
lods
ret
addr16
mov
mov
mov
jle
shl
xchg
and
dec
lea
jbe
hlt
es
je
fdivr
push
cdq
adc
push
je
jmp
mov
fsub
mov
ret
inc
mov
xor
sub
and
mov
xchg
call
addr16
inc
mov
sbb
cli
ja
pusha
(bad)
inc
pop
xor
repz
push
add
daa
or
inc
xor
fdiv
ss
and
sub
pushf
outs
adc
or
xchg
leave
add
jge
int
add
or
(bad)
(bad)
dec
sub
test
xchg
shl
sub
sbb
mov
fs
dec
push
rcr
popa
cmp
cmp
rol
jne
push
mov
out
scas
lods
fld
scas
xor
cld
mov
xor
add
push
cmp
add
dec
and
movs
ja
fld
out
daa
and
adc
pop
xor
xor
jmp
or
imul
and
scas
push
cmps
mov
loopne
not
adc
mov
test
adc
adc
or
ja
mov
ins
inc
jmp
xchg
mov
sub
mov
adc
xor
lea
jmp
imul
mov
loope
fstp
in
adc
into
and
and
adc
out
gs
and
or
adc
inc
fcom
jo
ins
and
add
pushf
inc
je
adc
out
cwde
cmc
add
mov
push
out
jae
popf
lgs
movs
icebp
ret
pinsrw
ins
mov
xor
nop
push
pop
or
mov
inc
mov
rcr
icebp
jmp
push
pop
out
mov
fadd
adc
retf
(bad)
outs
jae
popf
aaa
pop
mov
das
inc
sahf
push
(bad)
aam
sbb
outs
cld
sti
mov
movs
out
les
add
lahf
(bad)
or
mov
or
(bad)
xor
push
dec
mov
lods
cmp
aaa
mov
je
push
jne
inc
mov
jp
hlt
enter
sahf
daa
mov
push
cli
push
mov
cmps
add
cmp
push
je
and
rcr
mov
pop
jmp
repnz
cld
dec
popf
pusha
xor
inc
mov
and
call
test
in
out
ss
and
dec
mov
fs
jno
icebp
rcr
cmp
test
call
pop
cs
add
push
gs
and
pushf
push
jne
cmps
sahf
loop
xchg
xor
les
push
dec
out
movs
jns
mov
add
dec
push
cmp
push
push
and
mov
fwait
adc
iret
iret
add
lods
xchg
sub
into
push
mov
aas
inc
or
xchg
(bad)
dec
mov
push
adc
out
push
lods
out
aam
xchg
ss
pop
pop
loopne
push
xchg
pop
nop
push
test
neg
sbb
mov
into
cmc
fpatan
jle
ror
xor
popf
std
leave
cmp
rcr
push
jle
mov
(bad)
xor
pushf
mov
push
xchg
add
cmp
(bad)
and
lahf
div
test
ins
(bad)
rcl
sub
xor
fstp
fiadd
pop
ins
cmp
in
mov
sub
stc
iret
add
out
pop
push
and
(bad)
es
cs
pop
dec
ja
into
add
xor
jecxz
cmps
sbb
and
shr
push
jo
mov
mov
into
aas
scas
cmps
fs
sub
cmp
gs
cmc
pop
mov
mov
std
loopne
je
mov
loop
outs
jbe
mov
mov
jge
pop
call
push
pop
fnsave
ins
cli
push
mov
or
maxps
cmc
cmp
mov
je
loope
and
dec
mov
cmp
adc
and
and
jl
xchg
dec
repz
sub
xchg
push
cmp
xor
mov
lock
call
adc
mov
inc
jmp
scas
mov
xor
shl
popf
push
sbb
cdq
mov
adc
sub
xor
int
(bad)
dec
imul
mov
je
and
or
jp
test
aas
test
ror
ds
push
inc
jmp
sub
cmp
dec
xor
fs
cmp
rcr
test
dec
mov
mov
and
cli
xor
inc
xchg
mov
push
add
or
pop
inc
cld
stos
mov
mov
(bad)
dec
in
rol
push
pusha
jge
pop
and
fbld
push
popf
inc
xchg
fsub
dec
pop
ror
inc
mov
lods
in
cmp
mov
stc
inc
cmps
cmp
adc
dec
or
mov
rol
aad
or
popf
mov
(bad)
rcr
addr16
sbb
icebp
loope
lods
xchg
cmp
in
in
les
lds
mov
retf
dec
push
std
fcomp
sti
cmc
pushf
in
add
add
ss
cdq
xor
push
mov
retf
jle
inc
fst
xor
mov
push
imul
out
test
adc
mov
and
jbe
cli
inc
je
(bad)
push
bound
test
mov
stos
call
or
and
push
movs
mov
les
pop
js
pusha
jnp
cld
cdq
mov
outs
shl
loope
push
loope
sbb
cdq
sub
cmp
jno
inc
aas
je
mov
std
shl
pop
cmp
push
pop
and
aas
inc
sbb
gs
xor
js
sub
data16
in
int3
or
lods
imul
pop
jecxz
dec
jg
push
jmp
bound
leave
sbb
xchg
adc
in
mov
add
push
mov
cmc
cmp
add
shl
cmps
push
jae
(bad)
cli
ficomp
jbe
xor
push
inc
cmps
pop
aaa
push
addr16
xchg
inc
(bad)
cld
ret
cmp
sub
or
jmp
inc
sub
pop
push
inc
cmp
jecxz
cmp
rol
mov
mov
leave
cmp
lds
nop
test
dec
nop
inc
sbb
loope
jl
test
lea
sub
jnp
stos
pop
mov
push
loopne
push
xchg
sar
push
push
mov
lock
pushf
mov
movs
mov
call
imul
cmp
add
xchg
push
ins
ja
fwait
mov
mov
xor
inc
(bad)
xchg
cmps
xchg
pop
inc
pop
xlat
fwait
pop
test
mov
pop
cwde
aaa
gs
pop
loop
movs
test
ja
cmp
xchg
mov
push
sbb
push
xchg
xor
cmps
xor
pop
stc
arpl
mov
jb
lods
test
(bad)
scas
sbb
add
adc
add
cwde
jb
jne
dec
cmp
outs
xchg
push
loopne
ins
je
dec
mov
xchg
cmp
sbb
rcr
mov
arpl
icebp
int3
push
or
out
xor
mov
cmc
cmc
xchg
adc
or
ds
adc
in
out
cmp
dec
movs
out
sub
int3
fstp
int
popf
push
add
jmp
(bad)
cmc
loopne
push
dec
push
jl
pop
xor
adc
mov
xor
xlat
push
xor
lea
and
inc
out
ret
fst
jl
pop
or
xchg
out
jmp
std
cmp
cdq
or
sub
xchg
cmps
push
mov
pop
fcomp
test
(bad)
xchg
push
cli
out
faddp
and
sub
and
lods
mov
cmovp
fwait
jl
aad
call
mov
fdiv
or
aaa
lods
repz
jle
mov
pusha
popa
dec
cmp
xor
scas
sub
pop
mov
test
dec
ret
xchg
cmp
adc
push
jl
cmp
imul
mov
fbld
mov
mov
sbb
(bad)
out
(bad)
mov
mov
out
mov
mov
outs
gs
rol
xor
or
inc
les
inc
cld
shl
test
push
std
inc
je
cmp
xor
pop
inc
sahf
or
mov
cmp
add
lds
dec
xchg
mov
shl
aaa
mov
rol
ins
ins
push
inc
push
push
pop
xchg
xor
pop
push
ret
repnz
inc
adc
cmp
je
fbstp
dec
and
sar
int3
in
test
int
leave
dec
(bad)
(bad)
(bad)
mov
inc
push
jmp
jp
fstp
jae
test
push
inc
icebp
mov
sub
neg
mov
movs
add
sub
cmp
(bad)
mov
sub
clc
adc
dec
jmp
cwde
and
sub
dec
(bad)
and
test
push
jne
outs
mov
test
adc
fldenv
xor
and
sub
and
scas
data16
and
mov
push
xor
retf
cmps
mov
xchg
xor
push
retf
mov
js
aas
mov
jno
jle
cmp
pop
mov
stos
cmp
cmp
aam
gs
inc
push
loope
mov
jo
or
xor
lahf
mov
lahf
dec
mov
bound
push
or
jb
ss
jmp
pop
sti
sub
(bad)
neg
xor
xor
in
lods
mov
sub
imul
ja
mov
and
pop
or
adc
inc
mov
and
mov
dec
push
jae
pusha
add
inc
stos
out
xchg
out
pusha
ret
add
loopne
stc
pop
sbb
mov
(bad)
xchg
aas
cmps
int
sub
shl
es
loop
addr16
jp
lahf
mov
clc
out
call
adc
jecxz
add
(bad)
mov
dec
xchg
sti
sbb
xchg
mov
shl
push
(bad)
lods
in
movs
fldcw
dec
sub
or
lahf
cmps
cs
nop
(bad)
xor
xlat
ret
push
ins
jnp
adc
dec
out
cld
cmp
ficom
fdivr
mov
movs
mov
pop
hlt
je
hlt
call
mov
ror
enter
pop
mov
test
js
dec
push
(bad)
sahf
lods
mov
mov
push
push
addr16
xchg
pusha
lods
or
adc
push
mov
push
mov
div
mov
and
aam
pop
dec
cmp
xor
sub
cdq
jbe
adc
jno
sbb
mov
loop
sbb
mov
or
fisub
gs
dec
rcl
ins
xor
mov
(bad)
stc
icebp
mov
xor
scas
in
cmc
cmp
xor
sub
sub
push
push
ficomp
mov
mov
gs
sub
lods
or
ffree
sub
dec
push
js
xchg
jno
sbb
inc
xor
xchg
jns
dec
repnz
and
push
cmps
test
push
icebp
bound
lock
push
cmps
sbb
jno
mov
mov
jmp
add
aam
enter
clc
xor
fsubr
or
shl
mov
xchg
xor
xchg
cmp
jae
jmp
push
clc
xchg
pop
mov
push
jne
dec
fldenv
enter
inc
test
mov
mov
jmp
js
xor
sbb
cmp
xchg
push
xor
jo
pop
cmps
out
fcom
or
ins
inc
(bad)
mov
mov
dec
ret
push
inc
or
and
push
mov
cmp
fstp
mov
mov
repz
outs
loopne
inc
ins
(bad)
mov
cmp
(bad)
mov
leave
shr
cmovne
mov
push
in
inc
addr16
je
(bad)
call
dec
push
jp
call
xchg
and
test
inc
xchg
ret
mov
call
lock
push
pop
pop
push
adc
or
mov
repz
jmp
fcmovb
xor
js
xor
xor
scas
je
inc
mov
mov
leave
je
mov
cmp
fldenv
dec
nop
cmp
(bad)
mov
in
fst
sbb
jbe
cmp
out
jne
cs
test
lock
fs
adc
and
xor
and
mov
movs
cmp
cdq
div
xor
push
ss
jne
and
pushf
mov
fdivr
and
jns
clc
sub
or
mov
dec
inc
mov
stc
test
xchg
ret
dec
test
popa
or
int
xchg
icebp
mov
fisttp
sahf
xchg
push
inc
(bad)
fidiv
cmc
lahf
repz
sbb
ja
scas
fsubr
int3
je
or
aam
mov
daa
xor
leave
jo
sub
mov
and
lods
retf
ds
sti
cwde
lock
push
ret
jo
div
add
loopne
(bad)
mov
dec
pop
and
pop
jecxz
inc
or
(bad)
xor
sar
and
int
add
(bad)
pop
in
sub
sbb
(bad)
jo
add
aad
add
loop
xchg
out
sbb
mov
pop
jmp
cmp
scas
and
adc
ror
loopne
add
mov
ins
mov
mov
inc
xchg
inc
ds
jno
hlt
int
fs
les
mov
jns
scas
es
xchg
or
sub
and
ror
pushf
test
in
movs
xchg
js
outs
ins
mov
xchg
pop
push
and
das
int
mov
jmp
add
sub
cmp
push
jno
ret
ds
cmps
inc
outs
scas
pushf
and
or
test
int
sub
ds
sbb
adc
fistp
push
out
xor
ja
aas
cmp
pop
ret
out
pop
sub
sub
ret
mov
out
ret
pushf
or
jo
pop
stos
rcr
movs
jns
in
dec
xchg
outs
lods
jl
mov
and
iret
xlat
pop
cdq
mov
adc
popa
fs
call
push
dec
or
sbb
outs
jmp
(bad)
mov
fsubrp
xchg
nop
inc
imul
jbe
imul
jle
pop
movs
aaa
xor
mov
shl
adc
push
ror
lods
mov
adc
mov
cmc
scas
cld
es
int3
or
(bad)
mov
in
or
lea
(bad)
rcl
clc
mov
sbb
push
mov
pop
xor
dec
jnp
sti
nop
mov
mov
movs
mov
loope
add
sbb
(bad)
cmp
movs
out
xchg
imul
mov
imul
xlat
xchg
mov
xchg
jmp
jl
pop
mov
sub
inc
xchg
mov
jne
out
push
mov
jae
out
mov
(bad)
xor
icebp
mov
stc
imul
loope
pushf
cmp
cwde
mov
lods
aas
pop
fwait
ins
shl
jmp
cmp
jp
pop
sbb
sub
fbstp
es
fadd
ficom
cmp
movs
int
cdq
sub
enter
ror
ret
arpl
jecxz
jo
xchg
push
mov
mov
sti
adc
push
std
sub
test
xchg
fcom
stos
ja
es
inc
iret
xchg
std
sub
adc
push
out
push
cmp
and
outs
dec
mov
out
movs
fs
(bad)
loope
xlat
das
icebp
out
cmp
xor
xor
sbb
dec
not
repnz
ds
sbb
mov
jge
into
loopne
mov
cli
gs
rcl
or
jb
clc
or
mov
mov
lods
inc
cmc
push
ja
out
mov
test
push
push
and
mov
pushf
scas
push
dec
xlat
jle
cs
fisttp
push
inc
sbb
jo
popa
push
dec
adc
add
ss
cmp
lods
aam
out
retf
das
aas
add
xchg
(bad)
and
cmps
xor
ins
scas
dec
jge
jns
popf
jns
sbb
clc
xor
sbb
jl
pop
and
sbb
push
test
sahf
adc
stc
std
ins
push
pop
pop
pop
movs
push
xor
mov
(bad)
xor
ror
aaa
movs
push
push
inc
iret
outs
stc
and
or
xchg
ret
dec
xor
(bad)
out
or
mov
aaa
push
or
push
jbe
sbb
daa
inc
sbb
push
and
xchg
aaa
mov
or
jmp
push
fdiv
jnp
jecxz
pop
outs
and
jae
inc
cmc
test
fistp
sub
out
mov
mov
fmulp
out
ja
fld
xor
data16
icebp
dec
out
jno
mov
sub
lds
pop
loopne
dec
cs
loope
mov
adc
nop
fs
mov
test
or
add
sbb
hlt
loopne
aam
xchg
aaa
imul
push
cs
jb
or
dec
cmp
add
in
and
xor
and
rep
jne
adc
hlt
and
out
or
pop
add
add
mov
out
cli
pop
mov
add
ins
jle
jp
repz
adc
pop
call
mov
imul
mov
test
xchg
mov
vpaddsb
outs
add
ins
mov
popa
out
dec
adc
and
inc
jmp
fadd
iret
sub
in
scas
jnp
and
push
nop
(bad)
cdq
std
sub
adc
or
int
inc
outs
jle
lea
dec
xor
cwde
push
arpl
or
(bad)
loope
shl
sar
and
or
mov
fwait
dec
mov
test
xchg
adc
push
aas
add
xchg
(bad)
int3
int
fild
(bad)
fadd
dec
mov
sbb
xchg
int3
das
int
out
or
test
mov
sub
inc
lea
and
push
jnp
push
push
push
xchg
xchg
loop
rol
pop
mov
jl
push
add
into
psubq
mov
not
and
(bad)
xchg
push
ins
inc
or
ror
(bad)
pop
ins
push
cmp
push
mov
add
mov
cmp
jl
jb
pop
ror
mov
jecxz
fisub
mov
mov
xchg
sahf
out
daa
pop
fidiv
adc
pop
xchg
(bad)
push
mov
(bad)
fcom
cld
das
lea
fdiv
jp
add
outs
add
cs
adc
outs
lahf
or
jmp
sub
inc
push
dec
pop
add
or
stc
mov
and
add
out
lods
xor
sub
jne
es
movs
pop
pop
(bad)
xchg
arpl
repz
cmp
inc
or
sbb
scas
cmp
inc
sub
mov
xor
push
pop
xor
leave
cwde
lods
cmps
(bad)
stc
cmc
test
pop
pop
mov
test
test
rcl
add
sub
not
push
repz
cmp
dec
mov
loopne
mov
jmp
fsub
mov
jnp
fistp
jae
es
pop
mov
inc
jae
mov
loope
or
and
imul
or
or
mov
push
dec
add
mov
fwait
sbb
in
sub
cdq
ins
in
call
lods
out
dec
and
adc
fdivr
lea
out
mov
xor
mov
rol
dec
bound
rol
pop
adc
(bad)
(bad)
lock
movs
adc
test
mov
mov
ficomp
js
jb
mov
setg
xor
xchg
retf
movs
mov
xchg
fsubr
mov
(bad)
fild
ror
dec
fbstp
dec
add
dec
push
mov
push
daa
jnp
icebp
xor
(bad)
lock
(bad)
pop
xor
ins
mov
imul
mov
lods
push
xchg
mov
cdq
inc
jle
push
jl
mov
inc
mov
sub
jbe
mov
mov
shl
dec
sub
xor
not
stos
cmc
push
pop
jb
les
jae
dec
push
jbe
push
push
aas
mov
inc
push
pmuludq
idiv
or
mov
fisub
loop
or
sahf
ds
add
cwde
mov
add
jo
xor
xchg
mov
mov
(bad)
into
ret
hlt
daa
adc
out
popa
jge
mov
repz
pusha
mov
daa
push
ja
fs
mov
lods
mov
sub
loopne
pop
cwde
cdq
mov
sub
dec
push
pusha
pop
mov
in
mov
and
aad
jb
retf
shr
mov
xchg
or
mov
push
out
scas
or
in
mov
imul
sub
stos
in
rcl
push
sahf
rcr
jb
jo
pop
stos
mov
lock
cs
adc
jle
shr
inc
dec
in
sub
cmp
out
xchg
into
sub
test
xor
scas
xor
inc
pop
jle
out
mov
mov
fwait
push
push
sbb
or
retf
in
cdq
pop
lock
iret
outs
dec
mov
jne
xchg
push
and
dec
cmp
je
js
out
push
jns
inc
mov
xadd
pop
add
pop
stos
jecxz
xchg
in
ret
(bad)
mov
std
push
xchg
push
test
clc
fstp
cld
cmp
aad
inc
dec
push
fcomp
scas
mov
cli
pop
loop
fldenv
fsub
out
mov
adc
stc
cmp
setb
fldcw
shl
(bad)
fmul
mov
or
call
pop
cmps
frstor
cmp
sub
std
aas
fbstp
mov
js
dec
iret
fcom
scas
aas
ja
sbb
out
ins
push
mov
pop
sbb
or
inc
clc
mov
mov
mov
call
or
retf
cmp
cmp
mov
sub
stos
or
pop
mov
jo
scas
cmp
cmp
adc
xchg
aad
je
and
bswap
cmp
call
out
xchg
les
jp
lods
aam
ror
pop
pop
push
dec
in
or
sbb
cmp
ins
add
out
sti
pop
add
(bad)
shl
pop
dec
mov
call
ss
inc
lods
mov
pop
jns
mov
push
inc
movs
test
xlat
(bad)
repnz
int3
add
mov
cmp
test
sub
stos
and
fmul
mov
add
mov
in
and
rol
push
mov
mov
repnz
rcr
ins
in
fisttp
(bad)
int
mov
lods
mov
gs
pusha
pop
(bad)
fild
sbb
xchg
push
jo
scas
mov
(bad)
jg
in
push
out
mov
outs
inc
xchg
cmp
sbb
aam
ficom
aas
dec
sahf
fwait
cmp
mov
out
inc
test
mov
push
fdiv
(bad)
out
data16
popf
popa
jl
das
and
fbld
mov
retf
pop
clc
mov
jmp
dec
pop
stos
les
cmp
mov
pop
movs
fs
and
outs
mov
jl
cmp
and
sar
cwde
repz
adc
dec
shl
shl
lds
pop
test
adc
arpl
dec
ins
cmp
ret
cs
jl
movs
and
pusha
add
dec
stos
(bad)
xchg
mov
mov
cmp
push
je
pop
ja
sub
or
in
in
outs
cwde
pop
xor
adc
movs
dec
or
je
xchg
push
cli
add
stos
xchg
sbb
je
sbb
cmp
nop
cli
jle
hlt
stos
jbe
jg
and
cmp
pop
jmp
mov
pop
sbb
mov
xor
pop
lock
ret
and
pop
or
push
mov
std
test
faddp
shl
in
push
sbb
adc
xchg
mov
or
mov
push
pop
xchg
test
ins
xchg
xchg
lods
adc
leave
mov
jnp
call
pop
clc
retf
sub
outs
jns
out
and
and
ret
dec
out
xor
push
xchg
or
imul
inc
dec
cli
sar
popf
inc
push
jmp
loopne
inc
data16
(bad)
mov
rcr
and
neg
stc
aaa
jne
imul
push
jbe
push
fild
pop
not
mov
fnstenv
dec
jb
(bad)
adc
xor
clc
(bad)
call
xor
xchg
inc
in
add
mov
mov
adc
aad
pop
popa
cmp
sub
sbb
in
mov
(bad)
push
movs
cmc
xor
dec
jl
sub
bound
cdq
popa
pop
pop
pop
fnsave
sub
das
mov
cmp
jb
dec
xchg
shr
cmps
xor
cwde
and
daa
popa
cmp
aas
pop
out
dec
movs
nop
punpcklbw
cmp
sbb
(bad)
cdq
mov
imul
adc
pop
sub
stos
jg
add
push
xchg
rol
push
or
push
pop
dec
and
ret
into
dec
lds
mov
sar
mov
add
push
stc
(bad)
test
mov
push
xor
fistp
mov
jo
je
enter
cmovl
mov
sbb
int
fidivr
popf
lahf
in
or
push
jae
aas
adc
or
sbb
into
push
sbb
popa
mov
aaa
push
shr
dec
pop
outs
inc
lock
sub
(bad)
fadd
mov
mov
xchg
ja
mov
test
mov
sti
add
adc
sub
retf
js
sar
mov
ss
jae
or
ret
mov
lahf
cs
inc
cmps
hlt
(bad)
jbe
out
aad
in
aaa
dec
ret
test
(bad)
retf
adc
sub
and
je
stc
ror
pop
repz
test
xor
pushw
test
popf
fisttp
stc
pop
mov
xor
(bad)
cmc
xor
lds
sub
mov
push
xlat
push
pop
scas
movs
lds
fiadd
or
loope
mov
movs
cdq
fdiv
std
call
iret
mov
dec
and
ja
jbe
fimul
push
xchg
inc
(bad)
int
fwait
cdq
icebp
clc
adc
pop
sbb
adc
mov
lods
and
sti
les
jp
test
call
cwde
imul
add
add
shr
xchg
push
mov
in
arpl
mov
jo
push
retf
repz
adc
fist
movs
adc
xchg
enter
adc
leave
xchg
shr
mov
sub
hlt
into
scas
popa
cmp
cmp
stc
cdq
and
mov
inc
scas
sub
cmp
pop
sahf
popa
push
cmp
xor
popa
iret
sub
gs
mov
xchg
and
repnz
mov
das
xlat
stos
in
(bad)
cld
imul
mov
ficom
fcom
ret
retf
pop
xchg
pavgb
mov
addr16
and
push
pop
sbb
(bad)
in
push
mov
pop
ds
sub
and
push
cmp
add
and
les
adc
test
js
test
scas
sub
push
mov
jg
pusha
dec
arpl
push
shl
or
out
pusha
mov
ins
loope
or
lahf
test
lahf
movs
or
data16
xor
xchg
rsm
sub
jno
sub
(bad)
sub
add
pop
std
fwait
sbb
adc
jno
mov
outs
pop
lea
mov
mov
push
xor
adc
add
cmp
or
fiadd
and
mov
cld
int
call
pop
retf
neg
mov
popf
popf
test
fld
push
jmp
and
cld
pop
xor
inc
xchg
cmp
adc
(bad)
push
movs
jle
in
mov
icebp
sbb
into
cmp
lahf
dec
stc
(bad)
inc
vmovlps
and
adc
or
push
ss
std
je
sub
(bad)
ror
xchg
sbb
lods
inc
pop
dec
test
js
lahf
idiv
xchg
aam
mov
xchg
inc
cmp
add
pop
mov
(bad)
outs
jl
in
push
je
cmp
aam
arpl
js
dec
mov
dec
push
stos
push
sahf
mov
add
or
leave
(bad)
mul
inc
push
add
ins
fmul
int
jmp
in
iret
out
cmc
push
mov
push
mov
jnp
jp
cwde
xor
icebp
adc
xor
jmp
loopne
jle
cs
dec
loop
stos
inc
imul
ret
inc
xchg
fsubr
scas
inc
xchg
jne
mov
jecxz
cmp
test
arpl
(bad)
pop
sub
data16
or
push
test
cmp
push
dec
lods
xor
jo
mov
pop
xor
ja
retf
jg
in
movs
sbb
and
mov
mov
jge
movs
pop
shl
(bad)
mov
popf
cmp
lahf
xchg
xchg
adc
(bad)
out
push
imul
adc
mov
sbb
sub
pslld
jne
pop
inc
xor
cmps
add
jo
cld
out
sbb
je
mov
add
dec
iret
mov
data16
sub
mov
aas
ret
xor
clc
hlt
fisub
mov
xchg
cld
out
out
cmp
add
jecxz
and
xchg
push
xlat
xchg
mov
sub
inc
(bad)
or
movs
inc
(bad)
enter
out
and
in
lods
pushf
xchg
or
ins
outs
pop
mov
push
mov
add
rcl
popaw
out
cmps
cmp
mov
mov
shl
(bad)
in
aam
popa
xor
xchg
dec
mov
fcomp
lea
xor
(bad)
fcmove
(bad)
xchg
mov
xor
mov
mov
jno
dec
ins
ja
mov
mov
dec
mov
rcr
add
cmp
xchg
xchg
ret
scas
mov
xor
jno
mov
adc
add
shl
shl
daa
mov
mov
mov
push
push
sti
inc
mov
mov
out
cmp
sub
cmps
push
outs
stc
pop
cmc
xlat
sti
mov
xor
aad
cmp
pop
(bad)
stos
cdq
or
lods
arpl
js
jmp
pop
cs
or
mov
pop
mov
dec
in
add
jo
sbb
int3
loope
gs
shr
fild
mov
lods
cld
and
xchg
push
add
test
outs
retf
and
mov
fyl2x
sbb
(bad)
adc
add
xor
lods
jo
xchg
mov
std
inc
xchg
rcl
push
xchg
mov
repnz
fistp
or
add
call
sti
(bad)
nop
test
daa
in
iret
xchg
ja
std
test
sbb
jmp
pop
cwde
call
cmp
or
jle
test
imul
pop
mov
cwde
jnp
jg
fstp
pushf
sbb
dec
inc
jp
arpl
test
vmaxpd
jae
pop
pop
hlt
mov
cmp
adc
ja
pop
movs
xor
mov
mov
int3
push
cmps
cmp
dec
add
jmp
imul
ins
fsubp
mov
sub
int3
shl
add
loop
pop
adc
daa
bound
mov
retf
jmp
xchg
stos
adc
mov
scas
xchg
xor
outs
inc
fdiv
aaa
inc
add
das
pop
outs
pushf
ficomp
and
sbb
pop
pop
mov
inc
dec
aas
test
jne
test
bound
dec
int3
aad
mov
inc
outs
fwait
push
cmp
adc
pop
jle
mov
hlt
test
add
(bad)
fwait
mov
jl
sub
movs
test
mov
cs
dec
jl
div
imul
add
cwde
popf
bound
dec
shl
inc
(bad)
daa
push
push
xor
call
xchg
or
jle
outs
data16
outs
mov
dec
inc
cmp
jo
xchg
add
inc
in
in
stos
pusha
mov
call
out
push
jo
or
adc
mov
sub
mov
stc
xor
aam
rcr
xlat
mov
and
lods
scas
cmp
pop
rcl
jecxz
push
mov
xor
sbb
je
jo
aad
outs
dec
test
ficomp
cmp
and
call
push
pop
or
(bad)
gs
xchg
sahf
(bad)
pop
into
fild
mov
outs
mov
ret
push
sti
ret
nop
std
push
jmp
xchg
stc
not
push
sti
and
popa
std
adc
in
mov
movs
fwait
pop
cmp
ret
sbb
sub
sbb
pop
ins
mov
dec
push
sub
xchg
mov
inc
cmps
call
clc
fiadd
lods
into
call
enter
mov
cmc
cdq
enter
call
loop
adc
imul
in
imul
sub
std
arpl
int
inc
fs
dec
rcr
bound
cmp
push
popa
inc
pusha
sub
or
sahf
or
enter
sub
ins
les
inc
jne
or
push
jl
icebp
adc
sub
fcomp
cmp
ret
cli
add
sub
jne
inc
xchg
add
pop
arpl
lods
fxtract
(bad)
mov
xor
xor
sahf
imul
imul
mov
nop
adc
fidivr
inc
call
cmc
sub
xchg
pushf
cmp
fld1
push
inc
xchg
mov
imul
out
imul
je
push
(bad)
int3
in
jae
pop
data16
inc
stos
dec
push
sbb
xchg
mov
enter
xor
icebp
dec
sti
adc
cwde
xchg
dec
sbb
push
adc
js
retf
mov
scas
mov
repz
(bad)
jmp
sti
inc
pop
mov
movs
popa
fcomip
lods
mov
mov
add
jecxz
mov
push
dec
adc
cmps
sbb
adc
and
call
sub
pop
xor
je
dec
dec
push
popf
mov
pop
xchg
push
dec
fist
(bad)
jbe
pop
icebp
sbb
movs
cwde
or
shr
xchg
jle
stos
dec
scas
xchg
(bad)
push
push
sahf
dec
test
cmp
out
mov
jge
xor
jnp
pusha
out
(bad)
sbb
sti
les
sbb
jmp
sbb
sar
(bad)
pop
mov
push
mov
(bad)
loopne
push
shr
fwait
ins
xor
bound
cmp
cmps
enter
xor
fwait
mov
movs
cmp
sub
inc
xor
cdq
sub
fwait
inc
cmp
in
and
inc
mov
adc
xor
das
leave
xchg
xchg
sub
bound
xor
mov
add
in
in
in
mov
les
ret
mov
clc
shl
ror
sbb
or
push
rcr
nop
dec
cmc
sar
cmp
div
mov
jp
push
xor
add
mov
add
test
out
or
and
add
das
push
push
push
cmp
cli
xchg
cwde
add
mov
jl
inc
in
out
jge
test
pop
or
jle
mov
mov
dec
ret
inc
xor
fst
dec
pop
inc
movs
scas
outs
sahf
adc
add
xchg
cs
cmps
scas
jmp
(bad)
pop
scas
call
aas
dec
(bad)
int
mov
vmulps
mov
jne
xor
rcl
int
or
mov
jge
pop
mov
push
in
mov
or
sbb
out
and
xor
in
ror
push
inc
div
push
fild
ja
mov
jge
dec
rcr
call
scas
leave
xor
cmps
inc
jmp
fnstcw
push
jge
xchg
xchg
push
xchg
nop
scas
jg
and
mov
jnp
std
sub
ret
jmp
in
mov
sub
jbe
add
scas
arpl
arpl
adc
in
sbb
ja
or
lods
sbb
xor
jae
sbb
inc
fld
xchg
push
jne
lods
lods
pop
rol
rol
xchg
inc
push
(bad)
lock
aam
out
mov
inc
outs
pop
test
mov
popf
xrelease
fdiv
not
cmp
out
dec
push
call
(bad)
mov
xchg
xchg
xor
or
push
repnz
and
push
aad
scas
or
add
or
and
mov
inc
push
aad
pop
jb
addr16
inc
and
push
cmp
adc
ins
xchg
rcl
push
movs
pop
je
adc
cmp
aaa
mov
pop
and
bound
cmp
and
jp
int3
int
std
mov
or
stc
push
push
mov
iret
ja
mov
sub
sub
cmp
into
(bad)
(bad)
lods
or
jl
jae
mov
iret
jl
or
jno
push
sbb
mov
mov
mov
xchg
(bad)
mov
stos
in
sub
xor
push
loop
cmps
and
mov
(bad)
fisubr
movs
hlt
push
or
push
int
nop
int3
or
(bad)
out
xchg
adc
dec
jno
popa
add
mov
lea
cmp
shl
xchg
fyl2x
mov
xor
add
xchg
scas
sub
jnp
xor
push
push
leave
push
cld
(bad)
fs
or
fwait
mov
mov
adc
push
xchg
cs
cmp
(bad)
sbb
push
outs
sar
jmp
push
(bad)
js
jle
in
jle
mov
add
push
mov
pop
fsubr
xchg
xor
scas
cld
shl
lods
inc
jle
push
jb
inc
lods
fdiv
repz
push
out
shl
push
mov
inc
retf
std
sub
push
lods
pop
neg
sub
mov
push
push
mov
loop
push
fst
xchg
clc
mov
ficom
cmps
sub
outs
iret
mov
jae
jns
gs
mov
call
lahf
sti
and
retf
test
pop
xor
and
jmp
inc
jae
jae
jecxz
inc
retf
sti
and
pop
(bad)
jmp
sbb
ror
add
aaa
lods
adc
jg
jo
cwde
pop
pop
outs
add
icebp
(bad)
cmp
mov
out
out
sbb
xchg
es
js
xchg
or
sub
mov
jmp
cmp
sub
xor
pop
cmp
das
imul
idiv
inc
in
push
in
cmp
add
cmps
sub
mov
jb
push
retf
jge
push
cmps
icebp
iret
push
ds
mov
inc
outs
and
ficom
neg
adc
and
(bad)
mov
stos
test
dec
test
addr16
sti
xchg
lods
lea
into
fist
and
outs
inc
je
(bad)
pop
add
ds
aad
xor
popf
mov
call
fcom
inc
or
ret
pop
xlat
inc
sub
ss
mov
ds
push
sbb
in
mov
push
mov
xor
test
ss
jbe
and
push
ror
paddusb
mov
or
inc
repnz
mov
inc
pop
and
or
je
data16
dec
fst
sbb
mov
or
jmp
test
mov
xchg
jbe
call
mov
shr
xor
jno
xor
leave
aas
dec
shr
lds
test
hlt
adc
test
add
inc
mov
add
lods
jbe
xchg
add
out
mov
leave
lahf
or
ss
cmps
das
pop
mov
rcr
xchg
and
test
call
dec
ficom
cmp
into
jmp
push
enter
fbstp
mov
mov
push
and
mov
ins
dec
jg
inc
pop
scas
pushf
mov
inc
xor
fadd
or
dec
repnz
xor
iret
ret
dec
mov
inc
imul
sbb
or
or
push
imul
(bad)
sub
pop
mov
and
sub
ret
mov
dec
or
lahf
lods
adc
retf
scas
shl
inc
imul
or
fs
lods
dec
cwde
ret
inc
or
test
(bad)
scas
(bad)
lods
mov
(bad)
hlt
mov
xchg
test
sub
jo
leave
out
push
push
or
ret
pop
jmp
neg
test
test
iret
mov
sub
jmp
jae
pop
jg
dec
out
pop
fld
adc
(bad)
push
sar
adc
xor
test
bound
dec
cdq
dec
mov
sbb
pop
jmp
or
or
sbb
jbe
std
rcr
rol
out
mov
addr16
mov
shl
mov
jo
pop
and
outs
mov
popa
mov
mov
jo
xchg
scas
push
call
in
lods
sbb
cmps
dec
shl
jnp
xor
hlt
loope
and
mov
and
outs
mov
idiv
or
push
jne
ds
mov
pop
repz
pop
in
mov
rcr
sub
mov
jle
add
push
jno
jnp
out
and
out
outs
pop
mov
dec
mov
fmul
jmp
adc
iret
adc
ja
fwait
arpl
les
pop
out
pop
and
dec
(bad)
(bad)
push
mov
mov
ins
ja
dec
hlt
pop
jb
and
fdivp
shl
pop
cdq
jns
lods
mov
inc
sbb
jecxz
sub
vpsubq
mov
inc
xor
and
cld
jns
push
or
mov
aad
inc
cmp
js
jb
xsaveopt
pavgw
pop
imul
in
cld
or
or
iret
add
cmp
jb
and
call
xor
leave
icebp
mov
sbb
xchg
pushf
stos
xor
jmp
jo
das
out
jo
cdq
jg
pop
cdq
dec
mov
xchg
lock
in
ds
test
hlt
mov
shl
(bad)
push
inc
imul
(bad)
cmps
fwait
cmc
jle
mov
jge
out
sub
pop
mov
xlat
and
adc
int3
cmp
pop
push
in
dec
into
mov
sti
in
jne
cwde
pop
mov
cmp
ds
fist
das
and
xchg
dec
inc
popa
aaa
cmp
leave
jmp
pushf
ds
loopne
sar
movs
fld
not
loope
and
pop
add
shl
push
cmc
loopne
and
pop
push
leave
inc
lods
add
sbb
cmc
out
add
sub
and
inc
arpl
mov
jae
retf
imul
int3
into
fadd
mov
mov
and
mov
cmp
pop
add
sbb
xchg
push
aas
mov
jle
into
(bad)
mov
mov
inc
(bad)
cdq
js
std
adc
push
xor
sub
loop
fcom
inc
idiv
std
imul
inc
cmps
(bad)
push
push
inc
lods
ret
call
add
movs
sub
push
push
cmps
xchg
jmp
clc
xchg
jne
clc
in
add
hlt
and
sbb
(bad)
lods
outs
sbb
into
and
inc
push
sbb
add
and
repnz
out
mov
outs
addr16
fisttp
mov
pop
dec
dec
adc
and
jno
or
into
pop
scas
jns
inc
lock
lds
inc
into
push
mov
sub
pusha
fisubr
push
ss
mov
mov
rcl
sbb
xchg
ds
mov
out
mov
and
xor
fnstcw
mov
imul
cmp
push
mov
cli
xchg
mov
mov
(bad)
pop
push
lahf
xor
icebp
jl
(bad)
xor
jmp
mov
ins
fst
dec
sub
ret
das
push
out
add
push
inc
and
add
jl
sub
(bad)
push
mov
adc
enter
dec
(bad)
nop
shr
imul
inc
xchg
fwait
bound
test
add
xchg
mov
mov
jbe
ins
or
jle
jns
in
leave
push
cmps
add
sbb
out
mov
cwde
cwde
lds
data16
mov
int
cmp
mov
pushf
aam
pop
test
sbb
jb
push
pop
call
xor
mov
retf
cmp
sub
mov
scas
pop
mov
les
xchg
pushf
xchg
pop
ret
add
enter
push
pop
sbb
inc
inc
cmp
jo
add
sub
dec
lock
xor
jno
in
rcr
xchg
cli
aas
mov
jecxz
out
dec
sbb
fwait
sub
pop
or
pop
pop
add
push
iret
inc
cmp
push
call
mov
mov
imul
push
and
mov
ret
icebp
dec
dec
das
call
ret
fpatan
repz
or
aas
push
retf
mov
in
outs
lods
add
out
fld
push
mov
cmp
imul
ds
push
repnz
jbe
mov
lock
retf
(bad)
(bad)
push
jbe
cmp
cmps
stc
retf
inc
icebp
xchg
stc
xchg
and
lock
ds
fbstp
sar
push
test
dec
in
loope
inc
or
xor
xchg
cdq
sbb
dec
jno
repz
jo
pop
(bad)
test
out
mov
imul
mov
xchg
push
pop
cmp
cmp
mov
(bad)
jg
pop
sub
push
sbb
mov
lds
popf
(bad)
push
mov
jl
rcr
jmp
cmc
adc
imul
jne
mov
(bad)
ins
or
out
push
iret
ja
mov
xchg
or
or
push
cmc
popa
aaa
push
jo
loopne
aad
(bad)
(bad)
jecxz
push
dec
sub
sbb
int
fxch
aas
repnz
aaa
(bad)
aaa
(bad)
mov
fcom
and
outs
fdiv
sub
ja
push
mov
push
push
push
out
mov
lods
dec
inc
jae
dec
jge
xor
mov
sub
movs
int
bound
inc
xor
cmps
push
pop
outs
add
adc
lods
xchg
cmp
ss
xchg
ret
jecxz
push
cmp
mov
jne
adc
ficomp
xchg
add
mov
imul
mov
(bad)
outs
fsub
fwait
std
xor
int3
and
add
shr
jg
jno
xchg
sub
sub
ret
stc
jmp
dec
in
ins
jne
leave
mov
xor
mov
cmp
stos
addr16
ja
xchg
mov
shr
sbb
xchg
mov
sbb
test
jne
popf
sti
movs
icebp
outs
nop
inc
and
add
mov
xchg
or
mov
push
add
xlat
pusha
(bad)
xchg
imul
mov
mov
sbb
xchg
aam
cmp
ja
fldl2t
inc
mov
or
pop
adc
addr16
or
mov
cmp
or
xor
cmp
out
paddw
pop
sti
das
jbe
arpl
call
sbb
cdq
mov
call
retf
xor
repz
push
pop
les
or
pop
in
adc
fisttp
sar
aad
add
and
jecxz
mov
push
add
loop
test
cmps
jp
lea
stc
xor
sub
xchg
dec
shr
scas
cwde
ret
fstp
iret
retf
inc
(bad)
jge
jbe
arpl
add
mov
ficom
orps
sti
leave
add
aam
sub
jnp
add
in
mov
jae
cmc
push
data16
push
xchg
fcom
xlat
es
aaa
push
mov
mov
pop
push
mov
sbb
mov
fadd
les
mov
xchg
or
inc
out
cmp
or
sbb
and
cs
dec
push
cs
xchg
sub
fbld
mov
(bad)
push
bound
daa
mov
dec
mov
adc
outs
pop
int
(bad)
sub
xor
and
push
aam
cwde
mov
jmp
ret
pop
seto
pop
inc
jmp
pop
dec
jbe
in
hlt
fimul
jl
mov
cs
shl
sbb
nop
cli
fadd
loope
idiv
add
inc
stos
es
push
ds
or
sbb
xchg
cdq
add
jbe
fisubr
sar
call
inc
mov
dec
stos
adc
imul
lods
lea
dec
xchg
add
dec
add
mov
sub
mov
mov
sbb
dec
dec
jmp
or
cmp
ds
jmp
fcmovnb
lahf
dec
mov
pop
mov
aam
ja
mov
mov
ja
mov
adc
jae
pop
dec
inc
sbb
cs
push
and
add
test
cli
xor
sbb
add
sbb
jae
mov
rol
dec
leave
mov
loopne
cmp
dec
sbb
push
dec
sub
push
stos
lods
clc
fwait
lds
jl
aad
outs
repz
jg
sub
lock
jge
or
ss
xchg
fdivr
leave
movs
add
sahf
mov
ss
test
mov
mov
pop
mov
push
movs
lahf
dec
test
out
(bad)
pop
sub
bound
jmp
popa
sub
ret
cmp
pop
rcl
retf
sub
mov
inc
enter
pop
in
aam
in
loope
sar
in
inc
xor
jg
push
and
adc
adc
in
sub
mov
test
fwait
ror
dec
jl
push
sti
cmc
add
lods
pop
inc
rcr
ins
sbb
dec
dec
pop
inc
push
imul
mov
and
test
ret
sub
xor
dec
int
lock
repnz
rol
cli
(bad)
popf
mov
xor
mov
loope
xor
jp
jne
push
sbb
daa
mov
or
(bad)
xor
xchg
sti
dec
xchg
mov
(bad)
sbb
arpl
mov
or
outs
xchg
push
scas
mov
sub
ret
shr
fidivr
inc
dec
aaa
loope
mov
push
(bad)
mov
pop
adc
dec
cmp
pop
sbb
imul
(bad)
scas
js
stc
ficom
jo
les
mov
sbb
in
pop
loopne
cld
loope
aam
or
inc
cmp
cmp
sbb
dec
fadd
cmp
imul
jbe
and
shl
in
test
shr
sbb
leave
ins
lods
mov
enter
ret
or
lahf
push
xor
xor
push
push
ret
adc
mov
pushf
push
mov
(bad)
cmps
adc
adc
and
push
call
jl
adc
inc
fistp
scas
das
pop
mov
scas
adc
xor
in
int3
xchg
add
adc
mov
aaa
fs
mov
stc
jmp
cs
and
adc
jo
jmp
ins
xor
mov
and
popa
or
ss
mov
das
dec
xchg
std
adc
mov
retf
lahf
(bad)
int3
jecxz
mov
ret
ins
inc
jo
cld
or
jnp
nop
test
std
ja
xor
cmp
ficom
or
sub
mov
and
pop
adc
ja
frstor
xchg
cmp
bound
add
pop
hlt
js
fs
inc
push
int
fscale
or
dec
mov
mov
sbb
iret
pop
(bad)
mov
ja
call
jg
mov
xchg
addr16
jl
mov
mov
mov
dec
jbe
inc
or
loop
ror
ror
data16
inc
or
sbb
add
push
mov
arpl
adc
sub
out
icebp
mov
xchg
(bad)
retf
scas
neg
test
jae
and
fs
jle
dec
daa
pop
or
(bad)
fistp
aad
jecxz
shl
out
mov
mov
mov
jae
mov
xchg
sub
jbe
sbb
bound
aaa
mov
sar
sub
xor
mov
jp
daa
mov
call
ret
add
push
xchg
dec
test
mov
(bad)
in
pop
ret
ds
mov
or
icebp
fisttp
cli
stc
test
gs
mov
inc
cwde
jae
jae
stc
outs
pop
jns
or
xchg
add
cdq
fwait
ins
gs
xchg
push
cmc
les
lea
cmp
adc
arpl
push
loopne
imul
cmps
mov
push
cmp
or
shr
ja
clc
in
xor
sbb
xchg
or
push
jg
adc
call
test
cmp
test
cmps
shl
pusha
call
iret
fdivr
inc
fucomi
and
push
das
mov
push
pushf
cwde
push
xchg
jbe
js
xchg
jmp
push
loope
sti
jno
push
ret
loop
push
fwait
out
and
test
in
stos
and
shl
mov
sub
(bad)
dec
ficom
add
push
shl
iret
ror
dec
div
push
mov
mov
jg
xor
out
cmp
cs
xchg
(bad)
xchg
cmp
int
out
mov
mov
jo
push
(bad)
xlat
ret
pop
push
fwait
adc
stos
sti
in
cli
(bad)
push
outs
ror
das
loope
inc
mov
ins
pop
repz
sbb
fcmovb
(bad)
loope
sar
in
sbb
xlat
and
(bad)
std
sub
sar
js
and
or
ret
cmp
pop
sbb
push
jmp
test
xchg
imul
mov
and
push
xchg
scas
jns
fdivr
xchg
out
inc
fwait
nop
mov
xor
cmp
mov
sub
add
inc
int3
mov
and
into
jmp
mov
xor
ret
sbb
pop
aaa
add
pop
bound
jno
xchg
je
loop
fsub
add
mov
pop
outs
sti
pop
test
and
dec
pop
cld
inc
jae
lods
aaa
push
add
push
clc
sahf
fdivr
daa
inc
out
push
cmc
jl
lods
mov
mov
stos
mov
aad
mov
and
(bad)
mov
xchg
or
inc
dec
xor
add
and
(bad)
sar
inc
popa
ja
fbstp
cmp
lds
sbb
(bad)
ins
or
jne
sbb
and
mov
pop
and
imul
jno
push
mov
sahf
pushf
cli
(bad)
stc
cdq
cmps
push
pop
mov
inc
fs
pop
popa
lds
(bad)
hlt
shl
jmp
xchg
mov
and
test
xchg
aam
push
jbe
xchg
fwait
dec
loopne
movntps
ror
sub
lea
fld
pusha
pop
and
inc
call
dec
(bad)
jg
inc
(bad)
sub
xchg
inc
push
sub
add
imul
mov
jbe
sbb
add
jg
jmp
push
mov
jle
mov
pushf
sbb
mov
iret
xor
or
xor
icebp
xchg
inc
and
and
mov
mov
jb
(bad)
xor
inc
lahf
jmp
inc
cmc
ja
aad
sahf
daa
out
xchg
sub
lock
push
cmp
pushf
dec
fidivr
sbb
push
inc
mov
fs
shl
xchg
scas
and
mov
pop
pop
pop
mov
mov
or
sbb
xchg
xchg
out
jl
es
add
aaa
jae
mov
mov
push
ss
adc
hlt
dec
and
mov
scas
cmp
jnp
loop
push
inc
and
jge
dec
movs
pop
sub
dec
jg
sbb
arpl
mov
fisttp
or
push
adc
mov
and
add
stc
inc
jmp
sub
adc
cmps
in
ss
mov
xor
les
mov
dec
pop
test
ret
adc
scas
add
js
push
mov
imul
hlt
push
cld
es
push
pop
ds
xchg
xlat
ins
and
dec
sar
and
cmp
and
es
adc
mov
sti
push
adc
test
aas
in
mov
lods
sbb
popf
lods
(bad)
repnz
mov
fs
cs
in
adc
cwde
mov
cs
test
movs
iret
stos
loop
mov
imul
mov
loope
inc
pop
outs
aam
in
push
pop
(bad)
in
scas
mov
arpl
push
push
fsubr
cmp
mov
cdq
xchg
fsubp
adc
retf
add
sahf
mul
xlat
mov
inc
push
sbb
and
test
outs
xchg
mov
stos
xchg
xchg
test
cmp
imul
jnp
stc
and
stos
mov
into
gs
das
loopne
adc
repnz
and
mov
mov
push
xor
(bad)
(bad)
repz
cmp
mul
je
push
fstp
test
mov
cmps
shl
inc
cmps
and
adc
ret
sar
push
jmp
mov
xchg
and
dec
stc
mov
out
adc
lahf
nop
stos
mov
jl
cmp
imul
js
rol
sti
xor
aad
sahf
inc
xchg
les
and
xchg
inc
xchg
push
iret
sub
iret
mov
jne
mov
adc
mov
inc
out
push
ins
cwde
cmp
cld
add
ficom
fwait
cmp
pop
mov
xchg
shl
or
cs
cmps
icebp
jno
and
push
mov
add
cdq
cmp
in
out
push
cmp
out
cmp
pop
jle
xchg
int
imul
bound
out
push
je
lock
xchg
retf
push
mov
pop
in
dec
xchg
or
adc
push
mov
xchg
imul
mov
mov
or
add
sahf
cmp
and
dec
push
test
mov
add
dec
jmp
or
pop
(bad)
sti
iret
popa
xlat
cmp
lods
jbe
xchg
and
pop
outs
adc
add
mov
fwait
cld
inc
and
sbb
in
xor
pop
xor
adc
stos
std
push
ds
dec
jge
xor
dec
push
inc
rcr
call
out
add
arpl
add
mov
jle
xor
sti
and
mov
aad
dec
jecxz
cmps
inc
sub
add
loopne
pop
sub
push
add
sub
pop
loopne
pop
mov
mov
psubsw
cwde
jg
xor
gs
fbstp
dec
retf
add
push
les
sbb
jp
fist
je
jge
dec
push
sti
xchg
push
icebp
rcl
jo
movs
sbb
cld
(bad)
loopne
mov
cmp
jbe
mov
sub
or
bnd
(bad)
lock
pop
mov
mov
fidiv
mov
call
ret
bound
in
adc
cmp
inc
imul
pop
inc
shl
test
dec
xchg
or
inc
jmp
xchg
xchg
enter
push
xor
cdq
xor
fidivr
cmps
mov
sar
push
add
push
mov
sahf
cmps
dec
aas
lea
push
retf
in
mov
mov
and
hlt
sub
xor
inc
mov
xor
and
sub
and
xor
mov
or
fmul
ret
mov
cmps
mov
ror
xor
loopne
hlt
push
cli
mov
mov
rcl
clc
adc
cmp
push
ds
push
inc
xchg
mov
(bad)
jle
fwait
add
call
mov
fstp
jno
or
mov
cmp
into
jmp
iret
pop
push
js
leave
sbb
mov
scas
sbb
jl
xor
test
repz
cli
sbb
xor
popa
and
cs
inc
fldcw
mov
fmul
and
xchg
cmp
pop
retf
mov
pop
mov
stos
adc
shl
dec
sti
sub
jno
test
xchg
loop
pop
push
inc
fucomp
inc
mov
shl
test
inc
or
mov
xor
imul
xchg
pop
mov
mov
xor
out
dec
int3
and
rcl
stos
popf
repnz
ins
out
jns
int
(bad)
sub
pop
js
xchg
outs
jmp
aam
ss
cmps
rcl
aam
push
or
adc
or
repz
lods
psllq
adc
movs
pop
cmp
sar
jae
cs
inc
and
mov
fwait
xor
not
push
cmps
xor
sub
or
adc
outs
jmp
fstp
sbb
fcomp
ret
or
cld
push
rcr
dec
xor
adc
ja
pop
jge
movs
cs
loopne
lahf
sar
ins
mov
adc
mov
scas
jns
es
pushw
ret
and
out
xor
ficomp
inc
push
cwde
cmp
cmp
movs
mov
rcr
sar
and
xchg
sbb
inc
adc
and
fdiv
gs
sar
sbb
sub
push
clc
ja
call
cmp
push
repnz
mov
int
addr16
mov
inc
in
fist
retf
mov
imul
xchg
xchg
les
xchg
sub
pusha
icebp
push
(bad)
or
int3
cwde
(bad)
arpl
mov
adc
ins
pop
jmp
dec
cmp
mov
fistp
xchg
shl
dec
add
mov
push
mov
xchg
aam
jnp
cmp
shr
fiadd
jge
lds
loop
mov
add
dec
imul
inc
fs
(bad)
out
and
mov
out
imul
je
bound
ja
test
sbb
fdiv
cmp
loop
push
stos
fst
lods
xchg
outs
out
or
repz
mov
imul
xlat
pushf
movs
mov
je
scas
jle
push
lahf
mov
inc
shr
sub
cmps
fwait
popa
pop
ja
mov
xor
sbb
loop
in
mov
or
pop
shrd
popf
pop
sbb
pop
cli
gs
hlt
mov
mov
mov
scas
mov
leave
mov
dec
jmp
popa
enter
ds
mov
jmp
xchg
mov
sbb
rcl
cwde
adc
inc
mov
mov
jns
xchg
inc
mov
pop
push
mov
test
loopne
xor
jbe
pop
fsubr
cmp
mov
pop
pop
pop
bound
lods
movs
add
pop
pop
sbb
lds
popf
sahf
les
jmp
ja
jae
call
call
push
imul
cmps
test
inc
outs
sti
mov
(bad)
jo
iret
push
sbb
xchg
mov
fisub
aad
loope
adc
hlt
call
fnsave
cmp
jo
outs
daa
mov
outs
adc
mov
in
pop
inc
push
outs
ss
aas
push
or
je
mov
in
scas
cmp
xchg
push
and
stos
ss
icebp
fld
mov
dec
lods
adc
xchg
fstp
inc
ffreep
arpl
push
mov
ret
mov
sti
daa
loopne
movs
or
mov
mov
iret
out
sub
shl
mov
cdq
call
dec
and
icebp
addr16
fcomi
dec
aas
(bad)
not
xor
jmp
data16
jecxz
ja
cmp
push
jb
loope
lahf
aad
in
lahf
hlt
jae
and
add
ja
mov
popa
and
mov
imul
aaa
jmp
daa
stos
test
sbb
std
jp
xchg
mov
in
fwait
jmp
sbb
fwait
lock
mov
mov
ret
push
cmps
icebp
nop
xor
jo
cwde
mov
inc
mov
mov
ins
push
adc
and
loopne
ret
ins
lahf
mov
sub
dec
xlat
adc
stos
es
cmp
xchg
adc
inc
mov
pop
cmp
or
mov
mul
cli
jge
pusha
or
mov
retf
xor
mov
aam
fnstenv
popa
popa
loopne
aad
ins
pusha
cmp
call
pop
in
pop
xor
mov
sub
push
or
cmp
push
mov
(bad)
cmp
fdivr
pop
test
adc
mov
jecxz
mov
mov
arpl
ins
das
dec
mov
pushf
and
test
mov
adc
or
mov
call
inc
sbb
pop
fsubr
and
mov
hlt
ins
push
mov
call
xor
sti
jns
xchg
sar
dec
jb
stc
test
stc
sar
loop
dec
jno
je
enter
sti
sbb
cdq
neg
xor
sub
and
and
push
std
cmc
pop
pop
(bad)
outs
sahf
(bad)
pushf
dec
mov
pop
xor
jo
sahf
mov
rol
mov
ret
jnp
mov
outs
je
mov
frstor
mov
jp
sti
push
ror
push
clc
inc
and
sub
pusha
shl
stc
not
sub
call
fwait
mov
add
aaa
arpl
jbe
pop
push
adc
in
rol
add
inc
movs
add
jecxz
add
and
pop
mul
mov
xlat
clc
aaa
xlat
clc
aam
fdiv
or
mov
sub
std
xchg
ret
mov
arpl
leave
movs
xchg
xchg
pop
push
pusha
cmps
rol
push
mov
inc
jno
shl
ss
adc
ficomp
push
scas
dec
dec
xlat
xor
mov
sub
xchg
mov
enter
ret
cmp
scas
dec
or
add
mov
adc
cmp
push
inc
retf
fbld
sbb
scas
aam
add
inc
stc
call
mov
mov
mov
adc
inc
and
cmp
int
pop
(bad)
mov
inc
mov
cmps
xor
mov
lea
xchg
mov
inc
push
fstp
mov
mov
jbe
pop
repnz
dec
test
es
inc
fimul
push
mov
bound
lods
inc
cmp
(bad)
jg
mov
mov
test
rol
out
(bad)
pop
sbb
dec
jnp
jg
adc
lods
pop
xor
and
shr
hlt
inc
out
pop
rcr
pop
in
jmp
lea
jecxz
pusha
push
(bad)
sub
jge
sub
jb
movs
mov
daa
dec
xchg
shl
push
aam
pusha
out
push
mov
mov
or
dec
std
dec
and
xchg
test
pop
test
cmp
movs
into
in
jbe
xchg
add
adc
into
call
sub
nop
jp
cmp
rol
sub
retf
push
enter
gs
add
into
jns
sbb
sub
mov
push
jmp
push
int
out
or
xchg
in
jns
or
fs
int3
jne
je
push
scas
xchg
stc
ins
xor
or
fadd
mov
mov
nop
mov
(bad)
sbb
dec
inc
mov
mov
xlat
push
and
rol
add
push
mov
push
pop
call
inc
es
push
stos
cmps
cmps
fwait
mov
sub
out
fidivr
or
shl
out
int3
inc
xchg
enter
retf
add
jne
mov
xor
in
ds
popa
in
push
scas
jae
int
(bad)
sub
cld
lahf
xor
leave
mov
inc
gs
add
jmp
mov
test
push
lea
not
xor
ror
pop
push
ret
outs
(bad)
pop
lods
cmp
jle
mov
pushf
dec
mov
push
loope
cmp
adc
out
cmp
or
retf
or
pop
sub
pushf
dec
(bad)
ins
ins
(bad)
jb
arpl
imul
mov
sub
add
sbb
cmps
cdq
not
fild
inc
jns
or
scas
sbb
bound
ins
xor
sahf
mov
or
push
dec
jmp
cli
nop
push
jmp
xchg
gs
inc
fs
push
shl
jmp
in
pushf
lahf
xchg
jne
sti
icebp
mov
mov
(bad)
pop
cmp
cwde
sub
shr
not
iret
adc
mov
out
xchg
mov
mov
mov
or
mov
mov
leave
sbb
pop
shl
or
adc
xor
inc
sbb
pminub
add
mov
sti
mov
daa
das
mov
je
dec
ss
push
jns
lea
std
fdivp
jae
js
sub
sbb
jmp
aas
enter
ds
jo
inc
imul
or
add
lea
jecxz
out
xchg
push
or
dec
adc
cmps
retf
fimul
inc
xchg
stos
gs
inc
pop
xor
rol
mov
xchg
std
push
aaa
repnz
lods
cmp
bound
sbb
hlt
or
sub
test
jge
in
dec
in
jo
loop
xchg
jl
adc
test
aaa
pushf
je
push
mov
ret
inc
mov
movlps
sbb
xchg
add
data16
ret
inc
out
adc
int3
ror
repnz
pushf
imul
std
addr16
dec
xor
fidiv
sbb
iret
scas
xor
in
push
jbe
test
es
fsub
mov
daa
pusha
jmp
dec
cmps
cmp
push
(bad)
loopne
mov
xor
test
test
jecxz
adc
jg
stos
pop
pop
push
mov
push
(bad)
jno
ins
and
push
ins
jle
pushf
std
adc
call
adc
pop
retf
mov
push
pop
aam
push
mov
cmp
retf
jnp
(bad)
push
pop
imul
or
and
popf
xor
adc
stos
push
mov
int
js
lods
push
xchg
idiv
call
and
movs
in
hlt
(bad)
js
inc
cmp
add
cmp
adc
or
mov
xchg
inc
lahf
ss
aaa
pop
scas
inc
or
add
ss
pop
enter
in
out
mov
(bad)
mov
pop
sub
xchg
ret
dec
popa
fwait
cmps
icebp
mov
cmp
and
out
rcl
jl
leave
daa
ror
int3
ja
xor
and
icebp
das
repnz
mov
cmp
xor
sar
sbb
inc
popa
icebp
xchg
(bad)
ins
mov
cdq
mov
retf
loope
loop
push
dec
(bad)
int
sub
jns
mov
ins
rcr
(bad)
clc
mov
rol
xchg
jl
sbb
test
inc
sub
ret
inc
jbe
ja
or
ja
ins
fimul
stos
gs
js
mov
sub
dec
dec
imul
cmp
cmp
imul
sbb
mov
xor
inc
xchg
fiadd
or
xlat
add
cwde
test
xchg
ds
push
mov
lahf
mov
or
(bad)
jnp
fwait
push
test
and
das
add
in
jecxz
and
cmps
out
aas
cli
dec
xchg
or
fcomp
cmp
pop
add
cdq
jmp
xchg
outs
mov
sub
sbb
inc
shr
push
jbe
push
ins
add
jae
sbb
or
push
ficom
cmp
leave
adc
dec
sti
push
arpl
arpl
mov
xor
sub
and
(bad)
pop
ret
aaa
xchg
push
aas
or
scas
shr
cmp
jge
cmpxchg
je
les
cwde
pop
cdq
pop
(bad)
jb
out
jmp
cmps
stc
xchg
xchg
mov
xchg
or
sub
(bad)
lea
cmp
aaa
das
cmp
inc
pop
and
add
or
jmp
push
or
cwde
scas
mov
inc
xchg
mov
ds
or
or
not
mov
xor
scas
(bad)
push
dec
dec
ds
fisub
mov
dec
lahf
adc
aam
or
push
mov
add
mul
call
into
adc
push
cmps
mov
push
cmp
js
xor
sbb
bound
jno
scas
add
ins
test
dec
je
test
loope
mov
xchg
sbb
mov
jmp
add
and
mov
cmp
add
sbb
(bad)
add
icebp
push
push
out
adc
or
sub
cld
mov
nop
and
scas
cmp
mov
rcl
(bad)
xchg
stos
iret
ror
test
inc
out
fidivr
add
frstor
xchg
jno
and
fsubr
pop
jb
ss
test
sub
popa
inc
and
push
jg
push
call
fwait
(bad)
and
mov
int3
dec
push
cmp
mov
test
hlt
jne
pop
iret
adc
movs
and
sbb
push
outs
int3
jbe
pop
daa
sub
jecxz
xchg
movs
rcr
jne
sti
pmuludq
xchg
pop
push
inc
test
mov
call
adc
jne
ret
jns
test
mov
xchg
xor
sub
inc
out
pop
mov
adc
ins
jne
out
mov
stos
shl
mov
inc
outs
jns
xchg
pop
or
leave
jo
fmul
pop
es
cmp
inc
push
add
fidivr
xchg
daa
repnz
xchg
mov
div
fimul
je
pushf
inc
repnz
dec
lahf
mov
sti
sub
or
int
cmp
and
push
mov
std
addr16
jnp
sbb
cmps
mov
imul
or
pop
pop
and
cmp
loop
push
or
jne
imul
mov
add
lahf
mov
mov
dec
xor
dec
ins
or
xor
mov
sbb
ja
sub
clc
xchg
sub
sti
ins
mov
pop
add
jp
into
out
and
repz
pop
push
and
cmps
sbb
ja
add
repnz
fnstcw
cmps
rcl
ror
bound
pop
lods
xor
inc
xor
mov
and
push
or
retfw
pop
cwde
enter
cmp
inc
sub
jmp
fucomip
out
out
xor
outs
sahf
test
jg
mov
jb
and
dec
ds
cmp
cmp
scas
and
rol
mov
dec
sub
mov
rcl
lds
aas
je
cwde
push
or
test
mov
sbb
jg
and
aam
dec
imul
retf
dec
or
sub
js
cmp
fidiv
loopne
popf
pop
es
xor
and
popf
jae
adc
test
xchg
loope
jl
inc
bound
(bad)
lahf
icebp
sub
outs
stos
loopne
mov
outs
and
js
push
std
cmp
rcr
icebp
outs
stos
fwait
dec
inc
dec
and
inc
leave
stos
jns
dec
or
mov
popf
fimul
push
loopne
inc
(bad)
dec
and
das
int3
cmps
mov
xchg
mov
dec
bound
(bad)
dec
fidiv
or
pop
sbb
mov
popf
add
outs
pushf
pop
cmps
mov
mov
pop
mov
nop
pop
add
mov
cmp
add
mov
xor
xlat
push
(bad)
fld
pop
aas
fdiv
fwait
popf
inc
jbe
jle
inc
inc
sbb
std
add
dec
test
daa
hlt
pop
mov
push
xchg
outs
or
movs
cdq
jp
mov
pop
scas
pop
sub
mov
inc
push
mov
add
(bad)
push
test
mov
retf
xchg
xlat
rcl
lahf
fmul
and
jmp
inc
mov
push
and
(bad)
imul
push
dec
or
fsubr
mov
div
mov
popf
jnp
sbb
jb
mov
loop
sahf
mov
or
cmp
hlt
es
push
into
fiadd
mov
or
std
mov
clc
sbb
shl
and
ret
xor
call
outs
ins
cli
test
jmp
push
movs
cli
adc
cmps
push
push
bound
outs
jmp
mov
je
xchg
rcl
cld
lahf
and
scas
add
mov
mov
pusha
and
stc
xchg
aam
enter
lahf
daa
ret
sub
xchg
retf
repnz
in
stos
(bad)
mov
cld
mov
sbb
dec
push
push
in
sub
adc
fld
adc
clc
cmp
inc
bound
ret
pop
jo
pop
xchg
iret
jne
and
jmp
jno
pop
dec
xor
jo
lea
dec
retf
add
dec
sbb
mov
jmp
cmp
pop
mul
or
cld
pop
(bad)
adc
daa
push
daa
mov
nop
outs
aam
or
es
cld
pop
or
pop
nop
adc
mov
or
mov
sahf
mov
jl
mov
mov
push
ss
push
cmps
std
lods
mov
inc
push
adc
pushf
loop
loopne
cmps
sub
pop
or
xchg
js
cmp
arpl
push
cmc
test
in
cmp
mov
sub
xor
jle
xlat
out
ins
xor
add
cs
loopne
xchg
xchg
aam
add
retf
mov
cwde
dec
fld
mov
sbb
or
push
cld
imul
fnstenv
ds
mov
cmps
jbe
(bad)
test
(bad)
fcmove
mov
mov
jge
inc
out
or
xor
and
aam
fdivp
fstp
pop
pop
xchg
in
or
js
pop
mov
daa
jnp
jo
adc
test
fdiv
in
and
push
jmp
iret
adc
mov
es
push
cdq
rcr
(bad)
cs
sar
cwde
add
mov
jo
dec
lahf
inc
push
imul
push
cmp
mov
lock
jo
mov
jle
jp
pop
movs
cmps
xor
sub
xchg
inc
ins
shl
cmp
mov
jmp
adc
pop
lds
and
(bad)
mov
std
pop
pop
xchg
mov
mov
cdq
popf
xchg
pop
aam
popf
xor
jp
or
(bad)
test
sub
dec
adc
pop
sub
inc
out
push
push
mov
out
or
int3
sar
push
fimul
dec
hlt
jecxz
mov
addr16
jge
cs
mov
xor
fisub
scas
and
inc
mov
les
aas
jecxz
add
test
inc
imul
and
dec
fs
xlat
aam
outs
cmp
frstor
push
addr16
sbb
jne
mov
out
(bad)
xor
inc
mov
cmc
hlt
outs
xchg
sub
scas
je
sbb
or
sub
and
and
outs
int3
int3
fdivr
jne
jmp
retf
pop
cmp
int
cmp
ret
mov
sbb
loopne
push
lods
ret
cmc
inc
mov
ds
ds
nop
scas
jns
outs
cmp
pop
sbb
inc
stos
nop
cdq
and
or
adc
jge
hlt
xchg
arpl
inc
out
out
(bad)
mov
mov
(bad)
cli
sub
pop
and
dec
cmp
sub
adc
inc
(bad)
call
xchg
inc
pop
sahf
sbb
xlat
and
dec
adc
imul
retf
retf
mov
popf
sahf
fwait
jns
cld
js
cdq
lods
sbb
inc
pop
enter
sub
xchg
fisttp
and
fadd
fmulp
cdq
loopne
cmp
fdiv
fistp
test
loope
xchg
pop
addr16
das
and
and
sub
fld
fisub
loop
adc
arpl
or
jb
shl
imul
mov
jmp
cdq
fst
idiv
add
imul
jbe
gs
test
addr16
fisttp
push
lock
mov
sar
mov
xchg
ds
add
pop
icebp
push
and
jg
and
push
movs
xchg
out
loope
push
es
add
mov
std
loop
dec
and
jmp
add
add
loopne
inc
mov
sub
cmp
cld
xchg
mov
push
dec
(bad)
(bad)
fsubr
aam
daa
into
inc
and
and
clc
popf
(bad)
cmp
sub
pop
iret
repz
je
cwde
out
mov
mov
mov
mul
cmp
inc
call
lahf
shl
pop
daa
sub
shl
jo
loop
ret
xchg
(bad)
push
cmp
cmp
outs
jmp
lea
pop
sar
mov
sti
or
pop
mov
leave
mov
inc
jnp
fdiv
jge
sub
repnz
aaa
pop
lods
jae
or
xchg
mov
lock
fcmovnu
inc
push
xlat
cld
fnstcw
sar
pushf
jle
sbb
movs
outs
cld
cmp
pop
scas
add
xor
add
sub
mov
pop
ins
xchg
jae
add
mov
clc
xchg
pop
or
push
cmp
imul
call
sar
dec
das
mov
pop
push
jg
mov
imul
mov
aam
test
push
in
leave
out
jle
sub
(bad)
jg
inc
adc
mov
(bad)
fstp
aas
xchg
adc
pushf
add
add
push
daa
mov
shl
push
jae
out
scas
xor
outs
cs
push
cmps
xchg
inc
shr
push
repz
ffreep
mov
gs
lahf
(bad)
fistp
sbb
movs
repnz
loop
xlat
mov
sbb
xchg
add
ficomp
es
lds
dec
popf
dec
jne
cmp
aam
cdq
or
cmp
xchg
jo
add
aam
aad
pop
xchg
jmp
cmps
in
inc
pop
sbb
mov
es
sbb
cs
scas
daa
shl
icebp
in
stos
jg
(bad)
push
clc
das
pop
jno
jmp
das
fild
dec
xchg
repnz
add
push
popf
sub
test
in
sub
scas
cmp
push
adc
popa
jne
fsubr
mov
adc
mov
jne
push
not
scas
out
cmp
loope
push
mov
mov
dec
push
(bad)
aaa
and
ror
cmc
(bad)
in
sti
cmp
ficom
div
pop
call
in
xlat
stos
ja
in
inc
movs
test
sub
call
jno
test
sbb
mov
push
(bad)
in
imul
mov
adc
adc
popa
sub
fwait
jns
mov
aam
fdiv
rol
xchg
mov
inc
data16
cmp
fisubr
je
jp
xchg
mov
mov
leave
xor
dec
inc
or
(bad)
mov
sahf
xchg
mov
retf
fdiv
adc
cld
stc
or
dec
pop
inc
dec
inc
gs
inc
push
jle
jns
mov
dec
test
or
out
xchg
in
mov
add
das
jmp
xor
aaa
cs
fwait
cmps
jmp
adc
sbb
mov
in
jg
scas
xchg
push
retf
test
or
je
(bad)
out
and
sar
xchg
mov
ins
pushf
mov
lock
int
not
(bad)
call
pushf
inc
and
rol
mov
outs
cmp
sbb
(bad)
jmp
ja
in
xchg
sbb
push
and
retf
fs
adc
cmp
jb
data16
imul
xor
mov
test
jne
cs
pop
xchg
in
push
aaa
scas
jecxz
(bad)
push
loop
test
adc
inc
(bad)
xchg
in
pop
arpl
ins
jge
push
push
ja
outs
add
xchg
add
xchg
pop
push
ja
jg
dec
aad
ret
cmp
lods
fmul
pop
loopne
mov
kandw
cmps
add
adc
inc
inc
mov
clc
inc
call
xchg
int
es
outs
aam
mov
mov
pop
add
inc
add
cmc
out
cmp
repnz
jae
adc
int3
imul
loope
mov
mov
mov
push
mov
stos
cmp
inc
add
sti
xchg
test
mov
or
call
les
(bad)
(bad)
mov
ja
mov
popa
inc
movs
push
push
xchg
fadd
push
pop
mov
add
cmp
jno
jg
jo
jmp
add
cdq
fwait
or
movs
jl
ror
xchg
(bad)
mov
daa
test
inc
cmp
adc
jle
push
add
cdq
jmp
(bad)
mov
mov
sub
test
mov
mov
fmul
pushf
add
push
out
dec
jo
mov
ins
pop
ret
(bad)
or
xchg
mov
mov
sub
sbb
movs
mov
push
add
mov
or
dec
repnz
and
das
scas
sbb
and
popa
sbb
(bad)
or
loope
jl
loope
push
lahf
mov
inc
mov
out
pusha
jno
xchg
pop
popf
dec
cs
fcmovu
push
pop
dec
in
xchg
dec
pop
xchg
pop
ficomp
stos
lds
jno
movs
retf
mov
ret
je
aad
add
and
mul
push
dec
inc
and
inc
cmp
mov
push
(bad)
in
mov
jl
aad
or
push
jl
mov
data16
mov
out
out
pop
sar
jge
imul
imul
ret
cmp
jno
sbb
cld
lahf
test
sar
or
mov
add
mov
popa
lods
mov
sbb
jae
pushf
fsubr
cli
fldenv
pop
add
adc
test
jae
adc
push
lods
sub
inc
in
mov
test
loop
push
out
pop
les
std
push
mov
adc
push
sbb
push
pusha
out
jnp
inc
xchg
pop
or
shr
dec
iret
loope
shl
int
repnz
ins
daa
scas
cmp
movs
fwait
or
or
aad
sub
and
bound
std
fistp
(bad)
jecxz
mov
xchg
dec
jg
add
push
cmp
mov
pop
pop
repnz
xor
(bad)
mov
shl
ds
or
sub
mov
test
cmp
ret
jg
push
and
gs
cmp
imul
jno
jmp
test
popf
dec
inc
and
int3
fdivr
sbb
test
test
jo
xchg
sahf
je
adc
js
(bad)
cmps
fs
ror
sahf
add
and
ins
ficom
pop
xor
fadd
mov
fisttp
push
and
imul
dec
out
jmp
adc
xchg
mov
scas
in
sub
xor
inc
cmps
fstp
out
sbb
inc
or
(bad)
sub
hlt
shl
jb
push
mov
sbb
or
out
arpl
inc
dec
sbb
int
int
cli
xor
jae
jle
dec
xchg
mov
daa
js
ret
fild
jmp
jmp
loopne
pop
or
in
fcomp
push
xchg
sar
xchg
jae
cmp
dec
mov
jg
lea
adc
test
aam
out
aam
cmp
test
outs
push
push
dec
popf
daa
mov
fcomp
or
ss
sub
pop
iret
scas
and
in
jmp
mov
adc
dec
xchg
mov
lahf
jle
mov
xchg
push
dec
jmp
mov
fisttp
(bad)
cs
rol
pop
ins
retf
mov
add
sbb
in
jge
xchg
or
push
push
movs
mov
mov
and
adc
inc
push
mov
cmc
leave
sub
push
pusha
xor
int
sbb
xor
in
push
pop
jl
out
jmp
rcl
rcr
aaa
ss
cmp
je
hlt
in
jg
mov
es
repnz
xor
and
sub
into
fwait
push
ins
pop
jmp
push
mov
retf
xor
lock
jmp
imul
sti
mov
mov
ret
xchg
les
(bad)
pop
js
xchg
cmp
lods
retf
sar
outs
mov
mov
out
pop
iret
mov
loopne
fst
jmp
jo
enter
nop
ret
sub
loop
loop
(bad)
into
dec
add
hlt
and
or
cmp
mov
movs
addr16
das
cli
mov
dec
leave
ffree
or
cdq
mul
inc
dec
mov
jo
not
pop
xor
mov
push
pusha
scas
test
and
aam
mov
ds
ss
xor
pop
lods
popf
mov
inc
aad
pop
pop
inc
sub
or
and
inc
fist
scas
test
dec
and
mov
jg
push
mov
aaa
mov
sbb
push
push
fimul
push
adc
cmp
and
sbb
bnd
push
mov
push
loopne
dec
jmp
mov
inc
(bad)
sbb
ss
out
inc
xchg
cdq
adc
or
dec
adc
push
mov
retf
movs
jns
pop
mov
cmp
inc
aam
push
retf
fdivr
sub
xchg
cmp
or
mov
lds
sbb
call
and
fsubr
shl
ret
adc
sub
inc
sahf
xchg
sbb
call
mov
add
push
and
and
neg
fcomp
loop
inc
xor
ret
test
dec
push
daa
popf
retf
inc
sub
pusha
rol
or
mov
push
mov
scas
adc
inc
dec
pop
in
xlat
xor
or
mov
mov
mov
xchg
mov
push
lods
push
push
xchg
aaa
es
jmp
sbb
push
jb
cmc
inc
cmp
lahf
inc
inc
xchg
add
test
in
hlt
das
jp
ins
mov
xor
loope
xchg
jb
std
push
jns
mov
or
xor
cmc
mov
ret
mov
cwde
xchg
mov
adc
jg
test
aaa
push
xchg
fimul
out
cmp
xchg
in
leave
cmp
fisub
xchg
out
aaa
push
push
lea
mov
fmul
inc
out
inc
imul
cmp
mov
push
dec
push
aam
out
fild
jnp
icebp
ss
xchg
inc
dec
sbb
mov
stos
push
mov
shl
mov
push
int
std
fild
loope
jecxz
ss
test
xor
mov
aad
nop
mov
sub
adc
sbb
fsubp
pop
cmp
xor
cs
xor
mov
xor
imul
cdq
cmp
xchg
push
rol
fst
sub
push
scas
(bad)
je
ror
dec
sub
adc
ds
mov
fs
inc
in
shl
pop
or
(bad)
cmp
call
push
jns
cmp
outs
(bad)
mov
xchg
cld
pop
mov
xchg
movs
std
fldpi
sub
mov
in
mov
inc
jns
sti
lock
call
pop
and
aaa
push
movs
leave
xor
mov
adc
add
or
inc
xchg
adc
jle
stos
and
sbb
scas
jmp
pop
xor
and
sub
(bad)
mov
(bad)
cmp
gs
jmp
shl
push
icebp
int
pop
and
retf
add
xchg
push
add
adc
and
mov
sub
mov
inc
je
stos
fidiv
call
jg
sub
dec
sub
inc
cmc
mov
push
xchg
lds
or
or
fnsave
test
jmp
cmps
retf
sub
lods
retf
stos
imul
or
fistp
adc
dec
sbb
cdq
ja
jno
jns
fnstcw
lods
mov
push
xor
jle
cmp
sbb
loope
mov
jge
dec
or
push
cmp
mov
and
in
xor
sub
(bad)
fcomp
cmps
gs
(bad)
dec
xor
mov
cmps
inc
adc
fwait
ja
jge
repnz
lds
xor
jo
push
sbb
out
retf
ficomp
ins
popa
inc
jns
sbb
add
xor
inc
inc
push
push
loop
cmp
test
push
enter
fild
pusha
rcl
imul
cmps
jmp
adc
xchg
jmp
mov
inc
lds
out
test
sbb
sti
retf
adc
aad
dec
xchg
xchg
(bad)
fld
leave
xchg
sub
add
outs
push
in
and
xlat
int3
das
sbb
fsubr
ins
int
aaa
push
add
movntq
rcl
fbld
mov
xchg
dec
stc
add
fidiv
rcr
out
adc
dec
jmp
cmp
inc
mov
jne
adc
xchg
mov
das
retf
icebp
cmps
mov
mov
sub
fld
push
outs
push
dec
jb
xchg
leave
fcomp
xchg
dec
rol
mov
ficomp
outs
lods
fldenv
xor
cmp
popa
dec
dec
aad
es
jb
or
jp
and
push
inc
lahf
test
mov
jmp
mov
xor
outs
sahf
fnstsw
pop
inc
fwait
pop
pop
sti
mov
pop
xor
add
addr16
test
mov
or
or
test
mov
push
push
mov
xchg
cmp
inc
mov
or
or
xor
jne
xor
mov
mov
(bad)
daa
fldcw
push
push
and
fldenv
stc
hlt
shl
pop
sub
pop
sbb
cmps
mov
sub
test
add
or
movs
fdivr
movs
lahf
ja
stos
inc
(bad)
mov
rcl
sbb
lock
cwde
jae
es
daa
or
push
mov
mov
scas
cmc
pop
cld
mov
and
sbb
loopne
jge
imul
mov
or
and
fmul
mov
out
ret
mov
pop
leave
xchg
jge
not
iret
mov
test
inc
dec
sbb
push
inc
pop
in
or
out
ret
or
(bad)
xor
fwait
inc
retf
imul
sar
add
mov
lods
pusha
pop
fimul
cmp
call
jp
mov
sub
outs
call
sar
loop
mov
lahf
mov
stos
aas
aas
jle
cmc
sbb
mov
loop
pop
push
sub
sbb
invd
ss
icebp
jmp
jge
shr
out
push
cmp
das
mov
xlat
cmp
sbb
cwde
cmp
mov
xor
pmaxub
sbb
add
call
adc
dec
stos
(bad)
push
sub
xchg
pop
mov
imul
ret
scas
ins
mov
(bad)
cmp
push
int3
fscale
movs
dec
mov
hlt
in
leave
aam
daa
mov
or
fimul
sub
dec
bound
mov
dec
xlat
or
mov
fimul
retf
iret
mov
lea
add
outs
mov
sar
bound
imul
jp
xor
shl
aas
push
or
daa
jmp
bound
pop
retf
cld
cmps
es
xchg
jae
mov
adc
inc
enter
out
call
xor
mov
and
push
jl
mov
pop
add
inc
sahf
(bad)
or
into
mov
sub
repz
jle
in
aas
(bad)
mov
mov
out
inc
aad
hlt
xor
cmp
cmps
stos
hlt
adc
sti
adc
bound
xchg
jo
ins
stos
adc
xchg
pop
push
sahf
xor
sbb
mov
mov
mov
fs
mov
mov
ds
int3
loope
inc
icebp
loop
int3
cmc
sub
adc
shl
sbb
shl
xchg
out
out
xchg
dec
ja
icebp
inc
cmc
pop
mov
call
aaa
pop
lods
jp
push
scas
jmp
xchg
xchg
pop
idiv
(bad)
shl
fimul
sbb
add
adc
pop
in
add
xor
jle
scas
adc
stos
xchg
dec
or
loop
xchg
and
retf
in
fs
cmp
and
sub
scas
sbb
inc
rcr
inc
push
scas
pop
xchg
mov
test
hlt
mov
rcl
jle
add
mov
sbb
push
test
pop
adc
ins
mov
dec
pushf
(bad)
dec
out
sti
cmp
pop
and
cld
popa
iret
sub
jle
(bad)
shl
jmp
jno
sbb
push
cmps
push
push
pop
push
inc
mov
repz
sub
add
pop
test
sbb
dec
rcr
cmp
call
mov
ds
dec
jmp
mov
mov
add
pop
jl
(bad)
in
rcl
icebp
fnstcw
out
mov
xor
in
or
xor
pop
cmps
shl
retf
rcl
cmc
fwait
ror
cmc
movntps
imul
sub
mov
bound
std
fimul
xchg
fwait
imul
sbb
mov
mov
add
mov
(bad)
lahf
clc
and
inc
mov
(bad)
sbb
ret
loope
xchg
neg
in
loope
aaa
loope
pop
or
mov
int
test
inc
aam
es
sub
loope
adc
repnz
add
in
cmps
push
or
adc
data16
adc
inc
xor
mov
jl
iret
sub
mov
mov
xor
pop
sub
cmps
push
call
or
out
mov
pop
xlat
shl
inc
jge
es
sbb
fcom
inc
movs
rol
outs
dec
fist
and
dec
xchg
dec
adc
dec
popf
push
cmp
lea
sbb
xchg
xchg
mov
mov
mov
push
retf
(bad)
es
loopne
fstp
shl
sub
mov
scas
sub
popa
dec
mov
sbb
idiv
dec
fs
add
cmp
stos
and
in
hlt
pop
dec
jae
jmp
pop
pop
push
and
and
mov
adc
imul
popa
jmp
cs
je
and
pop
xchg
push
and
mov
adc
jmp
fdiv
movs
add
push
push
or
clc
push
fist
push
lds
inc
lock
xchg
adc
jge
push
je
(bad)
loopne
push
scas
xchg
sbb
push
lods
fdivr
les
enter
ss
mov
fist
shl
pop
(bad)
mov
mov
push
inc
jecxz
pop
cli
pop
mov
or
jg
xchg
mov
test
sbb
mov
and
push
push
inc
out
and
jae
popf
fucomip
add
fsub
jae
xchg
and
aaa
outs
push
mov
and
outs
jnp
sbb
mov
add
outs
outs
xchg
adc
xor
pop
in
mov
cmp
jo
sub
push
xor
jae
cmp
jne
xchg
outs
cmp
pop
cmp
mov
ins
mov
pop
(bad)
cmp
popa
and
pop
pop
xor
pop
dec
pop
add
loopne
mov
aaa
mov
jno
(bad)
sbb
adc
cmp
jno
movntq
pop
mov
xor
inc
cmp
adc
cmp
mov
mov
dec
or
es
cs
arpl
cmp
push
out
out
mov
push
shl
inc
loop
adc
ficom
sbb
ds
(bad)
loop
add
add
add
call
push
scas
mov
imul
xor
mov
arpl
(bad)
setp
jne
dec
sub
xor
adc
les
push
cmp
mov
jmp
jle
popa
adc
fadd
std
lds
dec
loopne
inc
xor
inc
add
pop
(bad)
(bad)
xchg
pop
xchg
pop
push
jae
dec
xor
clc
in
mov
xor
sub
call
repnz
xor
mov
ins
retf
or
leave
call
movs
aaa
cmp
sbb
pop
(bad)
or
push
or
xchg
pop
sub
cmp
inc
xchg
pusha
push
xchg
dec
xor
aam
add
add
mov
mov
dec
push
pop
bound
pusha
cmp
xor
push
mov
test
pop
push
cwde
push
sub
add
clc
inc
adc
jbe
rol
xlat
xlat
movs
int3
(bad)
(bad)
or
loop
adc
inc
es
mov
pop
or
adc
sbb
inc
ss
xor
inc
hlt
movs
pop
sub
dec
add
dec
inc
add
cmp
addr16
xchg
test
mov
and
pop
sub
mov
das
test
inc
xchg
push
data16
mov
and
add
mov
cmp
xchg
dec
test
add
test
aam
sbb
and
and
shl
sub
mov
lahf
dec
data16
int
fisub
adc
sub
add
(bad)
fcmovnu
ss
aaa
jne
dec
fimul
pop
inc
fsub
dec
sbb
shl
sub
outs
shl
sub
mov
dec
jbe
leave
add
xor
or
and
cmp
and
enter
cmps
aaa
or
dec
mov
xchg
sbb
jmp
add
xchg
sub
popf
jmp
xchg
add
je
fisubr
pusha
pop
fwait
in
mov
mov
icebp
pop
or
test
ds
call
pop
fs
mov
mov
fimul
sub
xchg
jbe
jg
push
mov
push
icebp
pop
fnstenv
push
(bad)
mov
pop
lahf
leave
sbb
int
pop
sub
daa
adc
mov
sub
mov
inc
and
mov
sbb
repz
cmp
call
imul
xchg
mov
jmp
jnp
mov
enter
push
sub
sbb
xchg
cmps
xchg
into
xchg
daa
int
lds
call
xchg
imul
leave
lea
fist
pop
sub
xor
fidiv
xchg
stos
mov
(bad)
sar
ficomp
bound
dec
scas
push
pop
dec
aad
mov
xor
shl
out
ja
xor
lahf
jns
jge
xor
adc
adc
in
add
adc
ds
and
cmps
xchg
add
lock
jne
cmps
dec
cmc
mov
add
xor
pushf
or
leave
out
mov
push
in
cmp
and
adc
xlat
sti
lahf
push
out
pop
push
cmp
aas
push
adc
test
and
(bad)
outs
sub
xor
mov
sahf
dec
or
jmp
(bad)
sub
or
lahf
clc
nop
call
mov
jo
dec
push
jnp
mov
dec
js
mov
aaa
add
jnp
arpl
cmps
clc
popf
and
mov
out
dec
sbb
ins
mov
icebp
outs
imul
dec
ss
retf
inc
mov
sahf
inc
ficomp
push
loope
leave
cmp
and
mov
jg
cdq
enter
iret
cli
test
mov
sar
mov
sahf
push
rol
push
mov
call
mov
jbe
push
jnp
jo
sub
cmp
sbb
jb
xor
retf
nop
movs
and
push
lods
in
adc
scas
cmps
and
inc
idiv
aaa
adc
retf
mov
add
mov
inc
imul
out
add
mov
sar
fild
ins
mov
sub
out
pop
add
xor
(bad)
out
jge
ins
mov
dec
push
sub
fdivp
sub
nop
bound
in
dec
rol
xor
and
gs
mov
and
xchg
mov
pop
pop
ja
outs
adc
pusha
dec
setge
stos
int
in
xor
repz
pop
das
jne
dec
add
and
xchg
mov
push
movs
mov
js
scas
pushf
nop
cmp
xchg
dec
std
lea
out
sub
pop
add
mov
cld
dec
pop
data16
pop
xchg
and
or
adc
sub
mov
mov
xor
out
jne
cmp
retf
sbb
mov
loop
and
in
jmp
inc
sub
xchg
out
lock
add
or
pop
sub
out
test
xlat
add
mov
cmp
inc
xchg
test
jge
cmp
(bad)
dec
pop
fild
outs
mov
imul
out
sub
cmps
aas
repz
add
sbb
jns
and
and
mov
lods
push
push
mov
dec
dec
add
data16
arpl
and
pop
loop
adc
add
mov
mov
mov
outs
out
rcl
push
mov
ret
inc
pop
push
sub
add
shr
inc
jmp
stos
out
pop
mov
add
jnp
outs
dec
fistp
mov
mov
mov
lea
ds
lahf
dec
imul
jnp
lods
ins
(bad)
out
(bad)
and
sub
pop
in
repnz
or
inc
enter
dec
(bad)
out
sbb
jecxz
inc
imul
leave
add
retf
ins
pop
pop
jns
dec
sub
xchg
jmp
dec
inc
shr
inc
arpl
das
out
xchg
fwait
bound
push
xchg
xor
add
mov
imul
cmps
inc
xchg
rcr
mov
ins
hlt
daa
outs
xor
and
add
xor
idiv
xchg
call
push
sahf
movs
inc
scas
out
mov
or
cmp
jge
adc
mov
iret
outs
cld
pushf
inc
mov
fdivr
add
dec
ret
pop
xchg
inc
popa
mov
xor
push
cmp
not
(bad)
loopne
inc
add
pop
call
test
adc
add
dec
psrlq
jle
pushf
cmp
enter
adc
es
and
out
fistp
mov
pop
and
stos
cmp
jae
xor
mov
call
or
stos
or
jge
mov
inc
cmp
in
mov
jbe
in
or
jns
cmp
jge
in
into
inc
scas
loope
sbb
push
jb
jle
and
mov
enter
mov
xor
or
xchg
les
mov
push
xchg
aam
or
pop
cwde
push
aas
push
mov
dec
push
jg
dec
mov
jmp
test
rcl
push
sub
(bad)
xor
xchg
inc
into
sub
hlt
and
in
hlt
dec
(bad)
scas
mov
(bad)
mov
xchg
clc
add
je
adc
jp
in
jnp
sub
mov
imul
leave
jmp
sub
aas
adc
sub
lods
ret
mov
sub
or
jecxz
pop
sub
pop
mov
jl
cmps
push
jg
inc
imul
dec
sahf
inc
cmp
outs
mov
in
sub
inc
jmp
xchg
sub
dec
popa
out
jge
stos
(bad)
fistp
nop
pushf
push
data16
mov
push
cwde
cmp
out
dec
cmp
and
xor
retf
xor
xor
cs
add
aam
xor
cdq
mov
ja
mov
outs
add
jl
pop
cmp
mov
jmp
cwde
fxch
push
inc
out
cmps
inc
push
sub
test
sub
lahf
adc
das
sahf
mov
(bad)
push
push
and
mov
fwait
mov
jmp
fisubr
dec
icebp
inc
push
ror
int3
shr
dec
stc
push
test
in
push
inc
neg
adc
sub
push
leave
sub
into
out
pushf
mov
bound
rol
cld
(bad)
jno
add
inc
pop
enter
or
xchg
shl
aaa
dec
cmp
lea
or
movs
cs
bound
test
mov
js
pop
adc
push
mov
and
or
adc
js
jge
leave
dec
fs
iret
xchg
jp
jg
sar
or
jg
ja
dec
cwde
adc
xchg
cmp
test
xlat
dec
in
xchg
test
ds
sar
cmp
fadd
cmp
test
jmp
out
mov
jp
aas
leave
fxch
lahf
dec
mov
mov
dec
sub
xchg
popf
pop
adc
mov
int3
inc
sbb
shl
and
sub
jecxz
push
popa
(bad)
enter
call
or
xchg
imul
jecxz
inc
mov
call
mov
mov
mov
loop
imul
mov
cli
ret
mov
(bad)
imul
adc
pop
mov
mov
mov
fist
and
pop
mov
add
retf
add
cmp
adc
and
out
(bad)
and
push
add
sub
int3
or
push
iret
(bad)
pop
(bad)
stc
dec
mov
aam
(bad)
pop
pop
add
test
mov
mov
sbb
adc
loopne
mov
cwde
not
pop
and
(bad)
call
test
leave
out
ja
pop
fs
loope
adc
adc
pop
jbe
or
sbb
push
mov
and
imul
ins
mov
nop
ret
imul
cli
lahf
sar
mov
add
jecxz
inc
fcmovnb
mov
or
xchg
aas
aam
dec
push
pop
jmp
sub
sahf
dec
fsubr
jg
sbb
cmp
mov
mov
aad
mov
dec
addr16
cmp
loopne
outs
shl
pop
mov
cmp
cld
mov
sub
in
(bad)
scas
shr
fwait
movs
popf
sar
les
mov
mov
sbb
push
psllw
cdq
iret
xor
pop
inc
cs
(bad)
jo
dec
sub
mov
imul
push
dec
push
mov
cld
xchg
pop
stos
inc
in
push
xchg
pusha
dec
push
push
sbb
and
xchg
inc
push
xor
in
in
dec
cmps
sub
cmp
and
push
xor
mov
adc
jge
pop
das
push
out
fs
jno
dec
jmp
inc
pmulhw
inc
ficom
mov
jnp
cld
jae
fwait
xchg
mov
mov
mov
ror
mov
in
retf
push
add
mov
pusha
xlat
add
fsub
aad
jo
push
xor
pop
aad
inc
and
add
cmps
cmp
sub
fistp
adc
xchg
push
sub
jmp
jmp
aam
and
fs
or
cld
in
sbb
or
jmp
sbb
das
test
(bad)
mov
aas
add
jne
mov
jmp
cs
test
leave
fsubr
into
cld
jb
inc
mov
cld
xchg
(bad)
sub
and
cld
jns
cmps
test
mov
push
retf
popf
xor
inc
movs
mov
or
add
call
mov
sub
mov
into
adc
adc
outs
jno
xchg
(bad)
arpl
arpl
and
jb
and
scas
into
shl
sbb
cmp
shl
push
add
clc
mov
mov
icebp
das
xor
int
or
movs
scas
(bad)
enter
imul
inc
cmp
mov
das
jo
adc
pop
icebp
mov
or
mov
or
xchg
push
lock
stos
shl
push
cdq
fs
cmp
leave
sbb
adc
xor
ins
stos
and
fbld
mov
xor
and
add
imul
loope
cmp
xchg
mov
jno
adc
(bad)
sbb
and
cmps
fstp
xor
xchg
xchg
dec
pop
pop
fcomp
not
and
xchg
ret
lahf
cmp
or
cmp
loop
adc
fst
xor
mov
xor
out
ror
push
test
(bad)
fcomi
mov
dec
outs
xchg
inc
test
fist
mov
mov
mov
push
pop
ds
rcl
push
cmps
sbb
cmps
dec
(bad)
std
out
and
xor
test
fistp
xchg
fstp
stos
(bad)
xor
ds
daa
add
adc
mov
xchg
fnstsw
rcl
cmps
popa
(bad)
adc
(bad)
call
xchg
std
ret
jge
test
add
jns
(bad)
xor
mov
popa
scas
lahf
push
push
inc
int
outs
sub
cmc
fidivr
sub
leave
mov
in
pop
cli
fbld
or
fcmovbe
xchg
jb
mov
loop
adc
sub
lods
out
or
xchg
mov
iret
fistp
adc
adc
in
adc
lods
outs
rcr
pop
xchg
pop
in
arpl
push
std
(bad)
push
outs
mov
or
scas
(bad)
dec
mov
or
push
sbb
push
mov
pop
mov
aam
push
inc
pushf
dec
fdiv
xchg
fild
imul
loop
pop
and
dec
nop
das
mov
dec
sbb
mov
shr
jg
mov
add
xor
and
push
mov
or
fcomp
out
movs
add
sbb
(bad)
iret
popf
or
fild
xor
adc
daa
xlat
aas
popf
mov
xor
popf
bound
outs
and
jns
mov
das
mov
push
and
fsub
push
or
fisubr
push
aad
out
sbb
fwait
sub
mul
in
add
hlt
rcr
xchg
jle
jmp
push
(bad)
ret
sub
mov
lds
les
aam
sub
push
cmps
mov
ror
push
dec
fld
(bad)
cs
clc
cmp
pop
sub
xor
repnz
ins
cwde
add
mov
and
inc
mov
push
cwde
push
inc
gs
in
fs
nop
dec
adc
aam
inc
test
adc
sbb
fstp
inc
add
jae
fimul
ret
(bad)
sub
adc
lahf
pop
ss
xor
mov
add
push
jno
jno
jb
mov
mov
sub
xchg
mov
ins
ds
dec
inc
inc
ret
mov
imul
jno
scas
or
(bad)
adc
sbb
loope
cmp
call
rol
mov
mov
sub
jmp
mov
cli
dec
cmp
cmp
ror
in
push
popa
pop
dec
jb
lock
(bad)
sti
inc
jl
pop
dec
pop
enter
jo
cmp
pop
add
cmp
(bad)
or
push
jnp
dec
es
out
(bad)
aam
test
mov
adc
pop
jo
fmul
call
xchg
cmps
je
dec
icebp
rcl
ss
inc
push
int3
dec
mov
cmps
out
jmp
movs
jbe
cwde
outs
mov
jns
push
cs
jge
inc
xor
loop
push
into
ss
inc
scas
adc
pop
nop
mov
icebp
scas
test
dec
imul
nop
rol
(bad)
or
icebp
pop
shl
mov
jl
outs
inc
call
lods
cmps
xor
repz
aad
sub
mov
add
enter
lock
jmp
out
and
xchg
xor
sub
add
pop
shr
lea
out
imul
or
fnstenv
jmp
and
pop
jne
jo
sbb
mov
std
or
mov
cld
mov
shl
test
fsub
pop
pop
jge
mov
sbb
lods
jne
call
sub
arpl
pop
nop
xor
mov
in
pop
int
cmps
adc
cmp
fisttp
pop
popf
adc
test
mov
fldenv
or
xor
movs
scas
repnz
cdq
iret
or
and
and
jb
jne
inc
mov
pop
mov
mul
fwait
outs
in
push
rcl
fisubr
adc
fwait
repnz
cs
mov
pop
(bad)
mov
pop
mov
inc
add
jmp
in
retf
enter
push
push
lea
int
push
retf
jg
adc
and
sub
rol
xchg
cmp
popa
sub
cmp
cmc
(bad)
fnstenv
sti
adc
xchg
(bad)
push
(bad)
pop
push
adc
pop
sub
push
out
xchg
or
mov
pop
bound
aad
pusha
addr16
and
cmp
lock
retf
xchg
xchg
mov
(bad)
in
iret
push
pop
rcr
xchg
jecxz
movs
fnstcw
lock
ins
cli
jb
cli
cmp
mov
sub
push
cmp
jecxz
push
int
adc
sbb
int
pop
fld
and
(bad)
(bad)
jmp
push
imul
pop
pop
jne
push
sti
and
pop
xlat
popf
mov
lahf
je
fldcw
mov
lea
xchg
test
mov
pop
adc
repnz
cmp
rcr
jb
shr
int
sub
shl
loopne
jne
in
test
mov
int
jecxz
jae
push
pop
push
dec
rol
mov
cmps
jae
dec
jno
out
and
iret
sub
mov
(bad)
shr
or
rcl
mov
rcr
cmp
(bad)
adc
mov
out
xchg
lock
dec
cmps
arpl
xor
fild
mov
mov
popf
in
aaa
cmp
bsf
das
push
mov
xor
loope
dec
pop
mov
and
or
sti
not
xchg
bnd
arpl
adc
test
inc
adc
xor
fwait
inc
mov
test
dec
xlat
pop
out
pop
fld
dec
pop
pand
movs
fld
fdiv
push
cmp
fwait
pop
pop
sahf
mov
or
rcr
xchg
test
xchg
inc
jns
outs
mov
cmps
addr16
outs
pusha
cli
mov
lods
jmp
mov
adc
aas
repz
jo
pop
clc
xor
pop
inc
test
or
lods
and
popa
(bad)
sbb
inc
fucom
add
add
and
push
repnz
inc
cmps
push
xchg
in
out
pop
sub
push
pop
(bad)
aas
adc
mov
in
pop
or
xor
aam
mov
icebp
arpl
xor
(bad)
test
xchg
(bad)
clc
lds
sbb
jns
sub
shr
aad
fsub
call
mov
sub
mov
call
data16
fwait
(bad)
ins
pop
push
mov
xchg
push
cmp
das
cmc
mov
nop
call
inc
inc
fnstenv
jns
add
test
pop
movs
and
cmp
stos
sbb
pop
shl
loop
fist
das
je
mov
pop
das
fistp
rcl
movs
or
(bad)
sbb
and
js
popf
mov
xchg
loopne
inc
add
inc
and
or
(bad)
loope
jae
pop
add
aaa
frstor
scas
mov
pop
cmp
pop
dec
add
mov
and
ficomp
arpl
int
push
cmp
push
adc
das
sti
daa
ror
pushf
stos
jmp
fwait
and
cmc
popf
xchg
ja
xchg
das
sti
ficomp
nop
sbb
(bad)
sbb
ror
out
jmp
addr16
jp
loopne
xchg
jp
or
jbe
pop
inc
lods
mov
mov
inc
xor
dec
mov
call
fcomp
popa
or
call
jg
mov
push
cli
popf
fisub
adc
call
jp
das
cmp
or
push
nop
inc
mov
add
xor
push
shl
aaa
jne
out
repz
aaa
pop
jmp
sbb
shr
push
push
xor
fiadd
add
aaa
mov
and
and
cli
aam
movs
mov
adc
mov
dec
adc
cmp
fild
(bad)
jmp
mov
mov
mov
lahf
push
sub
bound
out
bt
push
test
movs
push
push
shl
div
dec
xchg
popa
add
je
arpl
lock
enter
or
ror
test
mov
hlt
ficomp
adc
out
xor
mov
(bad)
scas
int
adc
cs
inc
jbe
rol
add
add
and
xchg
pop
dec
inc
(bad)
pop
pushf
daa
push
into
mov
idiv
push
push
retf
mov
loopne
sar
xchg
xchg
call
out
add
mov
jae
movs
scas
leave
push
addr16
hlt
mov
dec
dec
mov
and
push
or
push
nop
cmp
lods
dec
test
repz
fdiv
push
retf
xchg
sub
movs
xchg
sub
addr16
sahf
addr16
pop
pop
or
gs
jmp
inc
xlat
xchg
das
in
ja
push
xor
mov
imul
pusha
out
stos
add
xor
mov
test
mov
cmps
adc
ss
mov
add
ret
je
or
inc
inc
xchg
les
test
jne
inc
inc
ins
jns
in
icebp
clc
(bad)
dec
not
outs
adc
mov
jnp
push
add
paddq
pop
das
aam
or
mov
and
ins
add
mov
cmps
ficomp
mov
(bad)
push
ds
push
inc
mov
jecxz
push
or
xchg
jne
(bad)
ret
mov
popf
sbb
lea
adc
ret
repnz
xchg
dec
add
push
sub
icebp
dec
mov
gs
sub
push
xor
test
mov
aad
jge
cld
add
fld
jbe
sub
mov
sbb
jns
sbb
test
aam
fisubr
in
es
cld
ror
pop
sbb
add
(bad)
js
add
cdq
(bad)
into
retf
cmp
cs
and
call
movs
in
push
test
jmp
ja
mov
test
dec
data16
push
out
sbb
enter
push
shl
(bad)
mul
sahf
test
ja
pusha
fnstcw
imul
xor
imul
js
je
je
mov
sbb
or
mov
xor
cmps
push
test
out
(bad)
or
(bad)
xor
hlt
iret
mov
ins
mov
or
(bad)
das
push
stc
add
fs
dec
xchg
fs
inc
loopne
call
sbb
pusha
ins
lahf
ins
std
clc
out
aam
sbb
cmp
mov
cwde
mov
mov
or
mov
ficomp
add
inc
popf
jge
push
sahf
ja
add
fs
lods
xchg
(bad)
dec
enter
popa
fisub
cmp
ins
scas
sbb
and
jg
call
add
xor
push
enter
or
leave
clc
jp
iret
jbe
pop
clc
jl
scas
out
mov
mov
loop
sub
push
sbb
or
mov
mov
mov
scas
sbb
mov
lahf
es
mov
add
int
rcl
pop
mov
jnp
shl
xchg
mov
push
sbb
repnz
jmp
adc
(bad)
mov
stc
es
add
popa
clc
pop
xor
or
popf
jmp
(bad)
repz
cmp
fs
add
mov
xchg
fisubr
ficom
xchg
sbb
ins
or
data16
dec
push
jno
jmp
inc
ror
add
jns
dec
mov
lds
movs
imul
lahf
aam
clc
ins
out
push
mov
cld
jl
int3
xchg
ja
sbb
xor
or
ffree
div
cs
xchg
fnsave
ja
jle
fwait
dec
(bad)
pop
aam
sub
add
xchg
lds
ds
mov
shl
or
std
stos
and
sbb
or
aaa
fsub
(bad)
sbb
out
call
xlat
fcomip
test
or
inc
push
ja
mov
vpmulhuw
mov
ret
mov
loop
call
add
or
cmp
es
mov
pop
push
adc
fisubr
jecxz
cdq
and
loopne
test
(bad)
and
loop
xchg
pop
jle
hlt
out
rcr
adc
pop
xchg
adc
jg
cmp
pop
mov
retf
dec
shl
fiadd
mov
dec
xchg
stos
(bad)
sub
add
ja
or
jns
mov
ss
pop
stc
xor
sub
mov
scas
in
jle
cwde
inc
aam
imul
mov
in
stos
loop
inc
pop
sub
or
cdq
push
xchg
push
sti
mov
mov
rol
jns
movs
cmp
(bad)
std
lahf
ss
xchg
aad
fnstsw
lock
shl
ins
pop
lods
call
(bad)
mov
jmp
clc
and
dec
push
(bad)
std
sub
sub
hlt
xchg
push
retf
push
loop
lods
mov
(bad)
(bad)
(bad)
jmp
div
rcl
sub
mov
push
cmp
rcr
sub
adc
in
scas
mov
mov
fidivr
dec
add
(bad)
xchg
fimul
ret
add
jae
rcr
push
adc
and
inc
retf
jns
shl
popf
xchg
and
push
jmp
arpl
mov
jge
mov
push
pop
and
mov
sub
xchg
jg
mov
(bad)
call
jge
addr16
arpl
scas
and
mov
pop
rcr
pop
push
loop
xchg
dec
inc
ror
addr16
ins
sbb
or
mov
icebp
cmp
mov
loopne
and
scas
sub
jecxz
mov
push
mov
repnz
jmp
jbe
xor
sbb
push
jl
mov
sahf
mov
cmp
xlat
loop
adc
add
mov
lahf
call
popf
popa
add
sub
imul
scas
cmps
or
ins
cmp
or
aaa
and
les
cdq
fidiv
fadd
jo
inc
lods
add
and
lahf
ja
out
mov
nop
push
mov
in
loopne
cmps
lea
or
or
cmp
push
movs
xlat
xor
sbb
nop
sahf
call
lods
(bad)
inc
inc
frstor
(bad)
imul
or
mov
shl
push
lock
retf
adc
ins
xchg
int3
stc
call
mov
inc
dec
ins
mov
(bad)
cmp
cmp
jecxz
scas
mov
dec
loop
push
mov
jae
inc
dec
stos
xlat
les
movs
aam
pop
xor
and
ins
jns
pop
dec
add
inc
cmp
dec
call
xor
in
shl
retf
shl
test
push
rcl
cdq
dec
mov
pop
xchg
jbe
cmp
pop
retf
add
cmp
dec
cwde
and
jne
cmps
repnz
jae
inc
mov
dec
and
scas
pop
leave
hlt
sub
(bad)
repz
jo
nop
and
(bad)
retf
adc
and
pop
mov
popf
fs
inc
mov
(bad)
dec
mov
int3
movs
scas
or
sub
add
jecxz
daa
jnp
addr16
mov
ds
dec
xor
and
repnz
mov
xchg
imul
jmp
inc
movs
cwde
push
ins
(bad)
mov
jnp
dec
adc
mov
sbb
push
mov
push
fsub
stos
and
sub
inc
arpl
adc
sub
xchg
cli
psubusb
test
mov
jge
out
pop
jae
mov
adc
int3
(bad)
icebp
pop
pop
arpl
sub
icebp
sahf
xchg
js
xor
lock
mov
es
gs
add
xchg
mov
ins
mov
popf
adc
loop
xchg
jl
pop
jp
icebp
xor
lea
(bad)
mov
push
jg
push
ins
xor
aaa
jle
test
or
mov
shr
out
jmp
test
popf
rep
sbb
pop
lock
or
sbb
mul
sti
in
cmp
xor
or
das
aas
mov
popa
lock
or
ins
push
mov
(bad)
retf
stos
int3
mov
or
cmp
add
mov
(bad)
or
lds
xor
mov
jno
xor
jmp
outs
shr
or
jmp
push
adc
sub
aas
setne
xchg
into
xchg
adc
and
or
in
mov
mov
in
sub
arpl
(bad)
pushf
sub
xchg
inc
cmp
inc
adc
mov
cmps
sahf
retf
mov
div
inc
sub
inc
pop
xchg
xchg
nop
adc
icebp
rcl
add
les
mov
or
cld
cs
jae
cli
scas
dec
sub
cwde
add
add
fmul
popf
mov
dec
sbb
lods
xor
sub
and
faddp
xchg
mov
movs
dec
mov
in
sahf
mov
jae
inc
push
mov
ret
aas
mov
pusha
pop
cld
xchg
pop
dec
popf
or
cld
repnz
sub
and
mov
adc
pop
push
xchg
mov
imul
retf
imul
hlt
pop
pop
imul
push
mov
and
(bad)
stc
das
setp
test
sahf
and
movs
dec
inc
cmp
ins
xchg
lock
retf
push
pusha
lods
mov
and
mov
cld
dec
fs
shl
(bad)
fst
icebp
pextrw
rcr
scas
cmp
cdq
dec
and
mov
cli
mov
inc
loope
xchg
jne
mov
jp
imul
or
mov
ins
ins
sahf
add
inc
push
rol
cdq
dec
inc
int
sbb
(bad)
stc
push
pop
jmp
sbb
sub
mov
xchg
ja
mov
push
retw
aam
mov
push
sub
daa
cmp
les
inc
shr
mov
sbb
ds
(bad)
fcom
mov
pushf
or
xchg
mov
pop
mov
test
daa
jnp
sar
adc
adc
or
cld
push
call
scas
lds
push
dec
fdivr
mov
loopne
sub
and
aas
aad
xchg
adc
sbb
shl
pop
bound
push
push
or
ret
xlat
push
sub
mov
mov
lock
pop
ret
je
lock
xchg
and
loope
add
sbb
xchg
imul
pop
fwait
add
sbb
mov
sahf
adc
lahf
cmps
push
xchg
sub
jl
retf
push
test
xchg
out
aad
mov
inc
fldcw
test
xor
jle
fs
call
xor
push
fs
aaa
mov
mov
movs
ficom
jb
sti
repnz
fidivr
test
aad
or
jmp
xor
imul
inc
fwait
outs
add
(bad)
int
xchg
adc
fstp
pop
sbb
or
sbb
mov
and
xor
call
enter
adc
test
and
out
ficomp
test
sbb
mov
add
mov
cmp
sbb
int
pusha
dec
mov
jle
je
test
sub
and
jl
enter
cmp
dec
push
mov
hlt
fiadd
shl
out
dec
or
outs
pusha
lea
repnz
mov
or
sbb
addr16
nop
cmp
into
in
mov
in
jb
jne
(bad)
movs
sub
mov
sub
pop
outs
call
test
cmc
fs
or
cmp
pcmpgtb
jnp
and
pop
pop
test
and
push
scas
inc
jg
mov
adc
xchg
cmps
aaa
sub
rcr
inc
movs
loop
retf
imul
sysret
(bad)
cdq
fidiv
mov
(bad)
cmp
lea
sbb
or
jge
inc
stc
out
mov
fdiv
jmp
es
test
daa
rcl
fst
scas
out
xchg
mov
les
cmc
inc
pop
outs
in
test
pop
pop
jg
push
aam
adc
das
shl
mov
or
xchg
lahf
dec
daa
mov
stos
popa
mov
repz
clc
in
xor
pop
sbb
mov
and
loopne
push
xlat
dec
mov
neg
mov
mov
push
popf
dec
push
addr16
mov
push
pop
imul
lods
jle
xor
sbb
test
jns
(bad)
jae
jmp
ins
add
inc
repnz
lock
sub
xor
fcmovne
(bad)
xor
jecxz
push
and
mov
mov
leave
xchg
cmps
retf
add
cli
iret
jnp
sbb
mov
bound
dec
int
out
cmp
mov
push
in
adc
out
test
in
cmp
add
or
fst
jmp
add
sbb
daa
aam
jle
nop
ins
frstor
movs
jb
cmp
inc
add
mov
outs
(bad)
jne
pop
mov
inc
mov
std
movs
mov
xchg
mov
dec
jne
pop
add
pop
push
js
pandn
mov
retf
cmp
xchg
or
fwait
ja
int
pop
mov
rcl
scas
jbe
mov
cmp
lahf
ret
and
mov
xchg
dec
sbb
cmp
mov
pop
sub
(bad)
mov
mov
in
and
retf
dec
adc
cmp
sbb
jmp
dec
aam
push
jecxz
xor
mov
repnz
aad
adc
cmp
or
cmp
gs
add
ret
mov
movs
xlat
mov
xlat
sahf
je
jle
pop
cmp
clc
dec
jg
loopne
dec
sbb
and
(bad)
(bad)
shl
js
inc
mov
sbb
mov
jo
sahf
cmp
scas
hlt
test
xchg
xchg
mov
dec
add
sub
xor
leave
xor
(bad)
adc
jno
push
sub
sahf
repnz
jle
push
mov
enter
sbb
fwait
cmp
popa
xchg
in
xlat
cmp
cs
jp
sbb
int
pop
scas
(bad)
addr16
and
sub
mov
add
sub
fst
test
push
out
jb
dec
bound
out
(bad)
retf
imul
mov
xor
cld
push
imul
inc
lods
out
ss
push
ficom
adc
mov
addr16
test
jp
test
in
pop
pop
mov
xchg
and
inc
fcom
push
mov
adc
test
mov
pop
xchg
xchg
sti
fs
out
rcr
cmp
lods
cmp
sti
pop
fwait
shl
sbb
data16
or
dec
loope
in
jbe
or
jmp
inc
(bad)
ins
mov
mov
data16
shl
xchg
and
fadd
cld
or
ins
and
jo
aas
jmp
add
imul
dec
or
cli
imul
(bad)
les
loopne
je
leave
jnp
mov
jno
ret
mov
pop
or
add
out
inc
aaa
pop
sti
rcr
sub
dec
xchg
mov
push
sar
mov
pop
dec
or
push
out
mov
push
pop
or
shr
cmp
lods
icebp
lea
es
(bad)
adc
rcr
ins
pushf
data16
aas
js
xor
xchg
adc
lahf
push
cs
popf
(bad)
fild
dec
dec
cmc
bndldx
ret
push
cmp
mov
lock
and
dec
imul
imul
scas
cmp
adc
fs
dec
cdq
and
push
xor
sub
mov
(bad)
or
mov
fstp
jp
shl
jns
sub
adc
jmp
cwde
inc
(bad)
pop
mov
outs
cdq
out
cs
in
sub
je
fscale
pop
cld
call
sub
mov
aas
adc
cld
mov
adc
add
(bad)
push
sub
call
or
adc
xchg
mov
(bad)
rcl
and
cmp
jecxz
retf
dec
sahf
stos
cmp
mov
arpl
push
sbb
sbb
and
pmaxsw
xchg
adc
jl
xor
mov
inc
into
cmp
ss
sbb
fcomp
retf
test
sub
(bad)
ins
or
mov
fadd
out
ss
ins
jmp
pop
aas
xor
int3
aad
inc
push
inc
ins
add
fidivr
push
push
cmp
les
add
sbb
mov
inc
daa
pop
add
(bad)
std
pop
test
xchg
call
mov
int
push
push
add
sub
pop
nop
fmul
push
or
push
adc
ror
into
and
and
sub
loopne
dec
sbb
aaa
push
sbb
fwait
repnz
add
fidivr
xchg
out
cmps
(bad)
in
repnz
inc
xchg
push
sbb
in
cmc
push
int
dec
pusha
dec
repz
aam
sub
sbb
shrd
xlat
xor
cs
ror
xchg
repnz
test
inc
xchg
push
loop
jl
xchg
ja
(bad)
mov
dec
cmp
sar
jnp
loopne
or
sbb
aam
fs
pop
(bad)
mov
xor
data16
and
in
fsubrp
call
or
add
retf
test
cmp
jne
push
pop
daa
jmp
setle
xor
stc
into
hlt
pop
clc
imul
xchg
xchg
outs
loope
jo
mov
ins
mov
mov
(bad)
fs
imul
adc
scas
dec
std
or
inc
or
lods
jl
adc
and
jmp
mov
and
inc
ja
daa
jg
pop
cmps
call
or
sahf
mov
mov
jne
jle
push
xor
push
jns
movs
xchg
rol
test
shr
push
ret
pop
xchg
movs
xlat
sub
xchg
out
xchg
mov
jg
cdq
bound
iret
mov
dec
or
retf
push
xor
sbb
(bad)
push
adc
xchg
in
fbstp
int
outs
sub
push
test
jmp
int3
ret
js
pusha
xchg
push
push
stos
pushf
je
jb
fcomi
push
inc
loop
dec
jge
test
scas
or
sti
ja
jae
cmp
test
mov
or
aas
fnstcw
sbb
xor
inc
popf
adc
cs
pop
arpl
jecxz
cdq
lds
mov
(bad)
mov
push
cmps
mov
nop
inc
imul
into
and
outs
push
movs
xor
sbb
cmps
cli
icebp
jmp
in
push
(bad)
xor
lods
into
aaa
sub
movs
fld
je
mov
jl
jae
js
push
adc
push
sub
sub
sub
sub
adc
mov
js
mul
push
xchg
and
or
imul
ins
fstp
outs
dec
int
cmp
dec
outs
mov
sub
fsubrp
mov
scas
hlt
push
ror
ror
nop
xor
sar
aas
mov
in
shr
pop
(bad)
cmp
das
sbb
or
mov
pop
jmp
xchg
lods
scas
inc
lods
mov
push
mov
xchg
jno
jmp
arpl
add
mov
adc
fidiv
mov
out
mov
loopne
xchg
fisubr
sahf
loop
jno
xchg
pop
lods
lods
out
xlat
call
div
sahf
cmps
cwde
(bad)
xlat
mov
lds
rcr
mov
pop
sahf
pusha
lods
fimul
icebp
in
ins
cmp
xor
cmp
adc
push
mov
sbb
xlat
xchg
adc
mov
mov
and
sbb
mov
jo
test
fist
cmp
push
push
sahf
mov
push
scas
sbb
in
pop
cwde
xchg
icebp
mov
pop
xchg
mov
adc
jnp
cmp
pop
xchg
fsubr
or
test
mov
mov
push
xchg
in
ja
mov
outs
outs
jmp
push
mov
es
dec
bound
std
test
int3
adc
xchg
cmp
test
cld
(bad)
mov
loope
jns
dec
mul
mov
iret
mov
pop
(bad)
call
xchg
fisttp
pop
add
xchg
aaa
pop
pop
xor
iret
push
xor
gs
popf
out
fmul
std
ins
add
adc
(bad)
pop
fidivr
mov
dec
repnz
ror
push
mov
mov
adc
xchg
xchg
jecxz
retf
gs
(bad)
push
enter
dec
out
fmul
and
xchg
(bad)
das
div
mov
or
lea
popf
daa
pop
ins
repz
mov
int3
and
push
cli
mov
push
movs
mov
cli
pop
stos
neg
ins
mov
sub
xor
pop
inc
push
pop
iret
mov
dec
adc
and
pop
pop
ja
es
imul
xchg
test
inc
push
inc
jge
inc
shl
cmps
mov
fisubr
mov
xchg
pop
sbb
mov
push
mov
pop
rcr
enter
sti
rcr
shr
in
jns
or
imul
scas
push
and
or
cdq
btr
loope
jge
sub
mov
push
inc
dec
jge
sub
xchg
fdiv
jl
mov
xchg
lds
leave
add
jnp
int
leave
and
push
neg
push
add
call
stos
push
mov
push
jg
clc
push
lods
push
loope
dec
mov
xlat
in
or
enter
pop
pop
fild
std
test
stc
xor
adc
dec
(bad)
sar
fs
adc
xor
sub
pop
or
sub
int
jge
add
xchg
shl
stos
jmp
push
add
ins
jae
scas
fsub
popf
sbb
jl
in
push
test
xor
pushf
add
mov
jp
repz
and
dec
mov
xchg
push
test
xchg
cld
out
aas
inc
sbb
mov
xlat
lods
sub
sub
pop
push
test
xchg
mov
movs
add
fidivr
aas
out
fdivr
xchg
repnz
fnstenv
or
push
pop
push
ds
sub
das
hlt
pop
xchg
pop
out
jo
ds
stos
test
pop
inc
pop
cmp
add
loopne
and
and
push
xchg
stc
lods
jnp
lock
je
inc
ror
scas
mov
mov
test
add
loop
dec
dec
pushf
sub
jne
mov
(bad)
mov
mov
or
stos
dec
adc
fsubr
mov
push
enter
xchg
mov
out
pop
call
and
out
loop
mov
add
add
test
mov
jne
imul
aas
sar
imul
int3
dec
rol
retf
loope
daa
or
fcom
scas
test
xchg
loop
cmp
bound
pop
mov
xor
sbb
pop
sar
xor
xchg
dec
in
adc
sti
inc
out
push
test
or
push
pop
mov
jmp
push
stos
adc
lods
add
ja
(bad)
pop
or
hlt
arpl
mov
jnp
cwde
ret
lea
ja
sub
shr
or
enter
inc
pop
cs
int3
sub
ficom
in
shl
xchg
retf
jmp
add
ss
sti
gs
fiadd
std
out
xor
popf
jl
fnstsw
mov
mov
and
cmps
pusha
or
daa
pusha
pop
mov
in
pop
cmp
mov
sub
jmp
das
jle
add
xor
test
mov
mov
mov
test
dec
mov
or
loope
sub
inc
mov
ret
(bad)
cs
inc
fisubr
mov
cmps
jae
xchg
jle
xor
cdq
stc
mov
arpl
xchg
jmp
aam
std
jnp
dec
mov
es
scas
xor
and
mov
packuswb
aad
sar
push
or
or
mov
clc
fsubr
mov
pop
daa
inc
mov
mov
push
sbb
(bad)
and
inc
push
(bad)
je
daa
cs
jmp
xor
pop
outs
nop
inc
mov
mov
pop
push
xchg
ret
adc
jmp
dec
push
imul
clc
cld
mov
jns
adc
dec
add
test
xor
pop
loop
aam
xchg
aas
ja
mov
lods
and
stc
adc
shl
cmps
push
adc
mov
cli
cmp
sub
enter
outs
(bad)
js
pop
xor
sub
call
jne
gs
movs
mov
push
mov
xor
xor
cmp
sahf
adc
mov
jno
dec
mov
mov
cmp
shl
fcomp
sub
cmp
jge
xchg
push
cwde
and
les
lods
jmp
call
jns
cmc
mov
arpl
call
fadd
mov
push
jno
mov
xor
mov
mov
jge
cmp
stc
mov
mov
fadd
inc
push
scas
xchg
xchg
jp
mov
pop
inc
jecxz
int3
pop
push
push
invd
or
fdivr
push
adc
(bad)
(bad)
lods
pop
(bad)
daa
icebp
ret
stos
jae
pop
sti
(bad)
and
bound
lea
push
pop
leave
xchg
or
and
xchg
rcl
cmc
aaa
out
inc
pop
(bad)
call
mov
in
ffreep
or
pop
and
adc
(bad)
sbb
cmc
add
inc
mov
ins
inc
cmp
push
mulps
int
push
or
add
pop
lods
cmp
lock
dec
push
cmp
pop
out
arpl
and
and
sbb
sahf
std
les
dec
jo
imul
add
inc
pop
jnp
mov
jno
xor
push
dec
hlt
push
xchg
je
pop
add
jns
xchg
mov
loopne
(bad)
pop
stos
fwait
popa
sub
mov
push
push
cmc
fs
inc
cmps
sahf
sub
dec
push
inc
jb
in
jae
lods
push
aaa
push
ins
fs
int
popa
sbb
jmp
jnp
sub
push
dec
aad
jmp
jbe
sahf
push
mov
dec
cwde
push
push
dec
push
xchg
mov
in
imul
mov
xchg
fldpi
dec
push
sbb
hlt
add
xchg
retf
movs
repz
fs
daa
jmp
mov
movs
jmp
xor
mov
std
shl
imul
fmul
cmp
(bad)
xchg
jb
in
test
push
rol
and
mov
and
cmp
loop
dec
and
sub
call
push
sbb
jg
pop
mov
jae
mul
cwde
imul
fsubr
push
mov
cdq
std
or
fsubr
mov
out
icebp
jmp
test
xchg
inc
cmp
fimul
hlt
(bad)
shl
xlat
idiv
outs
(bad)
cmp
push
jmp
out
push
in
ds
scas
xlat
(bad)
mov
ror
inc
jbe
scas
lock
xchg
sbb
fcomp
pop
popf
push
xchg
ds
ret
cmp
jo
sbb
dec
jle
mov
jno
sbb
xchg
retf
cmps
pop
mul
clc
add
dec
push
mov
push
push
and
jne
jb
jmp
jmp
out
cmps
jl
cmps
push
xor
std
sar
or
adc
clc
mov
(bad)
jle
mov
inc
cmp
and
mov
xchg
ret
test
inc
aad
addr16
mov
pop
pop
(bad)
sbb
add
bnd
test
pusha
mov
fisttp
loope
loopne
into
out
dec
icebp
jp
mov
int3
pop
fild
ror
dec
push
pop
fst
jp
cmp
mov
lea
ds
or
dec
push
add
mov
xor
enter
fld
xchg
fcomp
pop
stos
repnz
dec
ja
sahf
aaa
adc
js
adc
lods
pop
rcr
idiv
dec
push
fist
iret
ss
sbb
mov
test
mov
cld
mov
inc
cwde
push
adc
xor
pop
stos
in
inc
adc
in
adc
mov
popa
pop
mov
xor
into
and
lods
jb
test
leave
mov
and
push
push
mov
mov
xor
cmps
adc
mov
jg
sub
dec
mov
std
daa
xchg
jb
push
cmc
call
jge
fstp
idiv
mov
rcl
retf
or
xchg
aad
sbb
mov
mov
and
imul
ja
mov
sbb
repnz
test
sbb
fldenv
loop
dec
push
mov
test
cmp
xchg
stos
sbb
inc
add
or
aam
shr
jg
adc
jmp
jbe
jae
loopne
call
mov
and
mov
lods
and
adc
js
mov
movs
das
rcl
imul
xchg
ret
sub
mov
data16
mov
pop
mov
pop
cmp
div
pop
dec
sbb
js
sbb
(bad)
xlat
sbb
js
push
into
imul
lea
lods
or
fcmovne
mov
push
imul
retf
xor
pop
(bad)
(bad)
out
add
mov
pop
sahf
adc
bound
sar
sub
sub
out
inc
jnp
adc
pop
jo
je
aad
(bad)
sub
cmp
xor
inc
(bad)
xor
stc
(bad)
adc
fild
outs
cmps
icebp
scas
and
outs
sbb
adc
pop
cs
call
inc
popf
imul
sub
test
cmp
dec
lods
inc
cmps
iret
pop
and
mov
imul
sbb
cwde
in
inc
and
gs
out
sbb
and
adc
jp
dec
sbb
mov
pop
jnp
cwde
push
push
add
movs
fmul
xor
(bad)
push
int3
rcl
div
jns
add
jo
imul
sbb
lds
or
mov
or
sub
loopne
jno
into
cmc
jne
shr
fsub
fist
test
in
jecxz
sbb
xchg
pusha
int
push
mov
sub
adc
lods
fmul
scas
loop
ja
dec
xor
enter
jmp
sub
into
push
inc
pop
xchg
and
pop
addr16
cmp
out
xchg
mul
and
dec
bound
or
repnz
add
push
je
test
clc
push
xchg
xchg
sbb
mov
jl
loop
jns
loop
in
dec
test
movs
jle
inc
mov
inc
push
ror
mov
xchg
enter
and
(bad)
jo
mov
mov
shl
jmp
dec
outs
sbb
les
dec
dec
push
pop
pop
and
ins
ret
ficomp
(bad)
fidiv
or
aas
cwde
in
icebp
and
mov
sub
rcr
loope
xor
add
or
fimul
inc
mov
xchg
sbb
push
dec
jmp
out
or
xor
push
inc
mov
mov
std
dec
aam
clc
and
xor
retf
shr
fsub
scas
pop
jge
(bad)
sub
dec
xchg
stos
mov
pop
xchg
sub
fs
jmp
adc
std
mov
pop
icebp
xor
sbb
pop
movnti
jp
test
cld
pop
push
inc
icebp
shl
test
in
xchg
add
add
fbstp
sub
loopne
cmps
call
inc
cmps
mov
cs
jp
movs
aad
repz
xor
xor
repnz
or
add
test
xchg
inc
(bad)
and
mov
push
xchg
clc
pusha
jp
sbb
in
push
nop
pop
mov
cmp
repnz
neg
out
add
dec
sub
jge
loope
xchg
ret
in
imul
sbb
push
repnz
push
popf
xchg
stc
jge
push
adc
mov
loope
cmps
pop
dec
data16
idiv
mov
sub
sbb
jp
push
mov
jmp
add
xchg
mov
test
xlat
or
mov
popa
test
ja
add
lods
outs
xchg
xor
and
popf
(bad)
loope
int
sub
mov
test
sub
into
jo
cli
mov
push
pushf
sbb
fsub
in
repz
or
push
jmp
add
imul
pop
sbb
push
pop
dec
jmp
out
loopne
loopne
cli
adc
mov
test
sti
popf
fstp
cmp
add
push
xor
adc
dec
cmps
jae
xchg
test
push
mov
push
xchg
test
mov
(bad)
sti
mov
loop
fsubr
aaa
fldcw
stos
sub
lds
inc
outs
call
loope
inc
xlat
push
out
jmp
push
sbb
scas
xor
adc
mov
xchg
mov
inc
mov
test
mov
pop
(bad)
xor
icebp
mov
out
scas
xchg
aad
jo
fild
xchg
or
push
xchg
jge
fisub
cld
jmp
add
fwait
push
in
lahf
sbb
out
test
ss
add
mov
jmp
mov
icebp
iret
lock
clc
mov
sub
jmp
and
pop
out
cs
int3
xlat
mov
lods
adc
pop
xchg
push
sub
shr
popa
fmul
out
(bad)
frstor
jmp
(bad)
sub
enter
sbb
movzx
mov
lods
sbb
dec
xor
cmp
jg
and
xchg
sub
scas
pop
adc
sahf
out
add
adc
movs
loop
jl
nop
mov
mov
mov
mov
loopne
ficom
mov
das
inc
xor
data16
jae
(bad)
cli
adc
sbb
mov
jno
sbb
arpl
ret
stc
xchg
imul
fist
(bad)
mov
cmp
adc
aad
sub
push
inc
push
jo
pop
lahf
add
mov
adc
push
je
mov
inc
xchg
rcr
jo
xor
aad
cmp
jmp
inc
xor
pop
mov
pushf
cmp
jl
jle
call
scas
jl
inc
adc
and
std
imul
cmc
loopne
push
loope
lock
inc
ja
out
xchg
mov
mov
mov
test
adc
xor
jno
mov
and
mov
sub
add
push
sub
xor
add
push
and
rcr
mov
mov
cmp
dec
pop
cmp
push
sub
push
xor
or
cwde
xor
movs
or
jp
aas
xchg
(bad)
fmul
call
fst
sub
retf
fldcw
bound
aad
pusha
mov
dec
dec
hlt
add
and
dec
pop
scas
xchg
sar
push
call
cmp
jb
std
aad
je
xchg
pop
xchg
sbb
cmp
icebp
cmps
pop
jecxz
xor
stos
xor
and
pushf
xchg
push
dec
sub
pop
or
fmul
call
push
call
xchg
iret
sub
call
sub
sbb
sbb
and
xchg
inc
scas
stos
inc
(bad)
xchg
cmc
xor
sbb
xor
in
push
mov
test
out
cld
stos
mov
pop
bound
(bad)
shl
mov
dec
ds
lods
jae
push
xchg
rol
ficom
and
sti
push
sub
jmp
xchg
aas
sahf
daa
repnz
adc
popa
inc
push
mov
mov
out
push
movs
(bad)
out
test
and
movs
sahf
xchg
daa
mov
mov
add
retf
(bad)
test
hlt
xchg
ret
xor
add
mov
sahf
xchg
jmp
jle
jnp
fidivr
sti
js
cmps
cwde
sub
cmp
and
data16
(bad)
cmp
mov
cdq
daa
adc
fst
jae
fisttp
repz
les
inc
jge
std
lea
pop
fwait
imul
adc
rcr
jno
clc
(bad)
cmps
sahf
out
and
inc
push
sbb
push
cmps
sub
sub
out
mov
test
outs
mov
sbb
jecxz
inc
push
sub
add
fdiv
or
jecxz
in
inc
iret
push
cmp
outs
pop
inc
and
ins
or
add
lock
(bad)
data16
push
sti
cmp
and
push
div
pop
pop
sti
(bad)
aam
(bad)
xor
cld
cmps
xor
ja
pop
js
out
imul
mov
call
test
mov
fwait
add
or
and
outs
movs
mov
inc
xchg
sub
add
cs
pop
push
adc
push
add
add
xchg
cmp
cmps
dec
aas
lods
lahf
popa
ss
sbb
sbb
in
(bad)
cwde
lds
dec
cli
jcxz
fsubr
pusha
lea
push
test
adc
sub
xor
shl
call
and
test
xchg
leave
push
and
pop
pop
cmps
arpl
inc
loop
push
je
popf
or
and
lods
setno
fsub
cld
pop
(bad)
movs
in
ret
dec
xchg
mov
ja
aaa
je
imul
xor
or
cmps
add
imul
repnz
pop
je
sbb
shl
je
popf
mov
pop
adc
repz
not
ret
jno
mov
sub
ss
fdivr
adc
mul
lahf
inc
xchg
push
and
pop
icebp
push
push
sub
cmc
pop
mov
bound
mov
xchg
or
jns
loopne
sar
enter
xchg
cmp
clc
not
sar
jp
xor
jge
inc
stos
das
push
jno
jl
(bad)
in
imul
mov
ds
adc
jo
or
mov
ret
dec
jno
dec
bound
mov
lods
scas
movs
pop
outs
and
or
mov
jmp
dec
nop
or
int3
adc
idiv
iret
mov
mov
pop
or
pop
xor
push
mov
fnstenv
xchg
add
jbe
cmp
fsubr
xlat
(bad)
int3
mov
ja
sbb
inc
retf
pushf
fstp
jnp
jmp
xor
xor
inc
cld
loope
push
int
xchg
and
(bad)
out
dec
inc
xor
call
add
ror
mov
or
iret
add
push
jge
push
sub
push
push
shr
pushf
cmc
lea
fwait
out
es
sahf
mov
int
jo
jg
lock
out
mov
leave
or
les
(bad)
(bad)
xchg
shl
dec
dec
add
push
or
pop
loopne
lahf
xor
cmp
clc
retf
cmp
jge
adc
dec
fst
cmp
out
or
mov
xchg
in
xor
xor
mov
mov
dec
scas
add
inc
push
mov
test
jmp
test
loop
mov
push
es
scas
lods
jbe
mov
movs
cdq
ja
push
int
pop
out
jno
repnz
jp
es
cmp
jns
fiadd
add
mov
push
jecxz
and
or
dec
test
nop
jge
clc
mov
mov
inc
push
loope
sub
sbb
lds
cli
jg
mov
inc
sub
xchg
push
mov
jne
pop
fild
sbb
into
jns
mov
retf
or
xchg
pop
retf
ror
sbb
xchg
sbb
adc
icebp
mov
mov
enter
ficom
mov
pop
lock
jns
mov
jbe
std
mov
std
popa
mov
mov
sub
dec
mov
xchg
in
nop
push
out
stos
xchg
dec
ret
shr
cld
sar
shr
or
nop
pop
pop
mul
or
xchg
mul
or
das
mov
mov
outs
ret
pop
and
mov
add
int3
aas
loope
mov
aaa
out
push
jns
out
pop
sub
cdq
mov
es
icebp
mov
(bad)
leave
pop
int
sahf
mov
mov
xchg
dec
call
inc
ins
pop
das
lahf
leave
adc
push
jb
inc
std
fist
mov
movs
in
cdq
bound
sbb
mov
sub
sbb
lods
xchg
out
in
dec
mov
and
mov
aam
mov
std
cli
ja
stos
aas
jae
or
inc
clc
inc
pop
mov
icebp
mov
mov
xor
mov
bound
pop
pop
sub
cmp
sbb
push
fild
inc
retf
into
sbb
pop
jnp
pop
add
xor
cmps
cmp
xor
or
push
jnp
xchg
adc
pop
ja
pop
je
retf
mov
and
add
adc
test
dec
mov
adc
mov
icebp
or
aam
xor
or
adc
jbe
add
nop
jne
mov
xor
in
pop
cmp
(bad)
push
movs
push
lahf
xchg
and
mov
mov
in
push
jmp
call
imul
mov
(bad)
add
dec
retf
inc
inc
mov
aaa
sub
dec
pop
cmp
outs
sbb
call
outs
lods
push
mov
(bad)
ins
jno
mov
nop
and
ret
xchg
mov
fistp
into
dec
lahf
jo
into
lods
inc
add
out
fistp
dec
lds
add
pushf
scas
cli
mov
mov
dec
or
mov
cdq
mov
and
js
(bad)
movs
pop
imul
cli
adc
push
jge
inc
outs
les
add
xor
or
fnstenv
daa
cmp
sub
add
jge
out
and
jae
shr
leave
adc
nop
mov
mov
inc
mov
shl
or
int3
mov
dec
rcl
test
mov
fmul
jecxz
mov
rcr
in
fs
fst
ins
push
xor
dec
rcl
out
and
ret
outs
cmp
adc
and
aaa
sbb
and
loope
fld
sahf
arpl
cmp
mov
lds
ins
jg
inc
adc
mov
sub
scas
sar
lds
lods
rcr
jae
jnp
sbb
mov
sbb
jne
dec
dec
jle
nop
ins
in
sbb
or
cmovnp
mov
jmp
pop
add
xor
jo
adc
jns
lods
call
pop
dec
stos
(bad)
dec
pop
mov
dec
shl
sub
cdq
(bad)
jmp
sbb
sbb
pop
es
sahf
repnz
in
and
mov
cmp
out
dec
fimul
adc
jmp
in
xor
mov
clc
(bad)
(bad)
sbb
in
ja
js
shl
or
sub
aaa
jnp
movs
retf
movs
sbb
jmp
mov
movs
xchg
popa
retf
pop
hlt
shl
push
mov
ror
je
in
jmp
call
sub
test
icebp
in
cmp
push
test
inc
bound
int
cmps
cmp
or
ret
dec
js
mov
fisttp
sar
dec
adc
inc
pop
pop
dec
test
ss
out
outs
lds
cmp
sub
aam
mov
cmp
cmp
call
mov
mov
mov
and
jbe
shl
jnp
(bad)
jmp
in
gs
data16
sub
mov
xchg
aad
xchg
inc
inc
push
je
add
call
add
pop
cmps
mov
jmp
xchg
adc
pop
and
icebp
push
mul
mov
mov
pop
dec
or
icebp
cmp
dec
bound
pop
xchg
adc
jne
jae
repz
fwait
inc
push
jecxz
movs
cld
xchg
sub
push
repnz
mul
out
mov
dec
and
std
mov
sbb
jmp
enter
aad
mov
pop
neg
mov
mov
and
das
push
sti
out
jb
mov
jge
popa
test
and
or
cli
rol
movq
jae
frstor
mov
push
pop
cmp
ins
inc
(bad)
popa
pop
jno
jle
stos
jb
arpl
xor
(bad)
jp
imul
out
fisttp
pop
leave
out
std
aam
int
adc
test
xchg
push
xor
in
adc
mov
sahf
mov
mov
jmp
(bad)
fsubr
sbb
cmp
sbb
pop
push
aam
stos
xchg
fisttp
jmp
jmp
loopne
rol
pop
xor
ja
xchg
and
pop
std
xchg
add
mov
outs
test
sahf
ins
loop
lods
stc
add
lods
or
jmp
daa
sub
jge
fisubr
inc
out
icebp
xor
jnp
xchg
ret
dec
(bad)
out
dec
pop
std
lock
mov
and
cld
das
jge
dec
adc
shl
jmp
das
js
lds
(bad)
shl
into
push
bound
dec
mov
xor
nop
popa
jne
test
aas
fdivr
dec
add
cmp
xchg
shl
and
mov
and
mov
shr
fbstp
cmps
loop
sbb
test
aam
mov
pop
mov
sub
pushf
mov
jl
add
outs
mov
jno
out
loope
shl
mov
(bad)
pop
stos
inc
retf
mov
ja
add
out
out
push
sbb
int
sbb
xchg
or
sti
(bad)
popf
out
jne
add
adc
daa
(bad)
jl
(bad)
xchg
fist
mov
mov
and
xchg
inc
(bad)
stc
add
xchg
jg
adc
ja
ret
add
inc
fwait
int3
lods
push
adc
cdq
fld
rol
dec
out
in
mov
xor
popf
in
mov
xchg
xor
mov
ins
in
arpl
cmps
stc
jge
fscale
dec
jbe
mov
xchg
mov
fst
or
pop
jl
or
sbb
push
ins
jne
and
mov
leave
neg
daa
push
and
call
sbb
imul
jl
stc
xchg
inc
fcmovne
push
scas
xor
push
xor
pushf
aas
mov
xchg
xchg
pop
arpl
push
mov
fldln2
div
sahf
daa
cmp
cmp
pop
aaa
retf
cld
jns
mov
js
jge
arpl
xlat
sbb
out
fadd
outs
mov
xor
jmp
add
jno
mov
pop
dec
icebp
inc
inc
aad
outs
jnp
or
ins
inc
sbb
push
inc
fild
fst
stos
mov
into
inc
fstp
mov
add
jne
icebp
in
add
sbb
(bad)
sub
jae
mov
dec
es
fisttp
jmp
cmc
inc
aas
mov
call
fcmovu
and
push
sti
call
aaa
pushf
imul
cmp
arpl
dec
pushf
mov
pop
jecxz
xchg
out
lock
pop
arpl
push
mov
lock
movs
or
jecxz
shl
push
in
or
cmc
lods
jne
aaa
ins
push
add
ret
in
stos
lock
aas
(bad)
stc
and
sbb
dec
aam
or
mov
mov
adc
in
mov
cmp
int
jbe
add
cmp
sbb
pushf
aam
inc
mov
push
push
and
jp
pop
outs
pusha
sbb
push
neg
aaa
jmp
add
push
rol
add
pop
nop
jg
cmps
push
mov
jle
shl
lea
and
push
loope
aam
push
push
test
out
pop
sub
or
sbb
mov
retf
add
add
jle
ret
sbb
in
cmp
or
pop
nop
fnstsw
ror
shl
add
adc
or
xor
and
sar
out
sbb
push
mov
push
mov
inc
mov
xor
mov
cmp
mov
test
mov
loope
jns
jl
loopne
xor
ja
sti
sbb
xchg
push
pop
sti
sub
in
(bad)
push
ficom
cli
gs
mov
xchg
jne
fwait
push
es
or
mov
xor
fadd
ret
daa
lds
mov
mov
fdiv
inc
xchg
ja
jmp
jge
add
mov
call
stos
gs
jmp
data16
hlt
mov
cld
sahf
add
jnp
jge
imul
ins
mov
push
xor
loope
mov
mov
cmp
push
mov
ret
cli
rcl
jmp
inc
mov
inc
or
stos
push
shr
fwait
(bad)
fsubr
(bad)
sub
rol
mov
inc
not
stc
dec
inc
imul
or
fbstp
stos
js
add
leave
sub
or
dec
and
loop
fimul
repnz
addr16
sub
and
sub
jo
add
in
pop
xchg
sbb
loope
mov
inc
cli
in
jge
mov
push
test
add
mov
call
jno
fidivr
lea
cs
stos
inc
sub
in
push
xor
and
jmp
push
sbb
repz
lock
or
and
adc
sub
jp
dec
adc
arpl
mov
pop
fsub
in
jle
lahf
aam
cmp
in
push
jecxz
sbb
fs
in
add
push
fwait
pop
and
int
jnp
ror
cwde
lea
mov
sub
movs
lock
xlat
fcomp
mov
cmp
(bad)
(bad)
sbb
add
sub
cs
sbb
dec
jmp
sbb
push
jmp
mov
retf
movs
cmp
adc
fs
out
or
test
mov
dec
pushf
dec
pop
in
push
cmovs
in
sti
out
jae
sbb
sar
mov
jmp
jmp
adc
sub
popa
xor
hlt
jl
xchg
mov
fadd
push
(bad)
adc
outs
jo
scas
in
mov
out
pop
pop
adc
pop
mov
das
repnz
sbb
inc
cmps
popf
pop
in
mov
inc
(bad)
mov
mov
lods
cmp
xchg
pop
js
pop
jno
neg
les
mov
rcl
sbb
ret
in
add
int
ds
sub
(bad)
fcomi
dec
sub
add
retf
and
mov
or
(bad)
lock
pusha
ret
cmps
add
and
jmp
mov
fsub
cld
popa
icebp
jp
adc
mov
mov
int3
das
ins
xor
mov
out
adc
cmp
(bad)
jle
xchg
push
ret
inc
int
sbb
test
out
and
mov
pusha
jmp
and
inc
or
cdq
loope
loop
pop
jmp
sti
movs
mov
xor
xor
dec
cld
push
push
enter
in
movs
pushf
das
and
add
shl
leave
inc
outs
inc
mov
psubsb
jge
nop
pop
xchg
data16
mov
stos
xor
pusha
and
mov
ror
js
xchg
test
mov
sub
adc
(bad)
mov
into
mov
ror
test
call
in
inc
push
mov
pop
and
aaa
inc
cmp
push
sbb
xor
cmp
xor
test
push
push
out
jmp
inc
(bad)
(bad)
lods
pop
es
(bad)
into
(bad)
cli
ret
or
cmps
add
or
icebp
sub
sub
les
lods
or
pop
adc
xchg
mov
cld
mov
popa
push
push
mov
sbb
add
nop
pop
fst
xchg
mov
int3
hlt
sub
mov
sbb
shr
push
ficomp
fsubr
retf
addr16
xor
jl
mov
and
pop
out
xor
lods
mov
inc
imul
or
cmp
add
cmp
sub
dec
push
stos
adc
jle
out
xlat
jl
mov
pop
pop
lock
cmp
ja
adc
cmp
or
sar
cmp
jb
arpl
cmp
mov
leave
lock
lahf
pop
mov
neg
iret
fidiv
mov
aam
add
or
push
loop
cmps
test
repz
jl
sar
loop
int3
mov
test
or
dec
xlat
pop
mov
icebp
test
ror
sbb
or
dec
mov
cld
push
dec
jae
mov
push
xlat
add
pop
repz
repnz
gs
in
lods
outs
mov
lock
test
xor
mov
movs
ja
je
xchg
mov
scas
fistp
test
sub
jl
in
fld
clc
inc
ja
aaa
adc
das
mov
xchg
sbb
into
loopne
and
imul
call
fidiv
(bad)
rcr
into
popf
push
fstp
aam
sahf
pop
in
jecxz
xor
and
out
push
push
jnp
(bad)
icebp
aaa
lea
cmps
ss
and
loope
push
aaa
popa
xor
gs
fsubr
test
ficomp
fmul
lock
je
pop
loop
je
cmc
jp
xchg
fcmovnu
or
(bad)
add
dec
push
cmps
jne
sar
icebp
sar
pop
inc
mov
pop
(bad)
cdq
repnz
and
cmps
pop
jge
(bad)
ins
inc
adc
je
fs
dec
lock
dec
fld1
call
add
movs
in
nop
xchg
sub
jne
fidivr
sbb
bound
loop
movs
xchg
jp
inc
dec
ins
mov
jns
dec
push
adc
xchg
cld
push
adc
mov
icebp
lds
dec
(bad)
sbb
jge
mov
jb
scas
xor
fwait
std
push
mov
mov
mov
std
fcom
pop
inc
xchg
mov
sbb
pop
iret
pop
mov
ror
mov
lsl
gs
pop
movs
dec
lock
xor
ss
loopne
bound
clc
rcr
xor
iret
cmp
xchg
ret
imul
xor
cmp
pop
test
add
cdq
cmps
outs
dec
or
pop
adc
js
sub
xor
cmp
je
xchg
jo
leave
dec
ret
(bad)
ins
(bad)
sub
imul
push
cs
shl
pop
(bad)
jns
push
(bad)
sub
or
(bad)
aam
cli
push
(bad)
inc
fsub
movs
xor
enter
pause
shl
outs
sbb
push
jnp
pop
icebp
adc
xchg
xchg
and
sar
jg
sbb
push
jl
cmps
test
sub
push
iret
popf
and
adc
adc
arpl
or
aam
sub
fld
jle
fld
test
or
push
cdq
enter
fstp
cmp
fdivr
(bad)
je
sar
xor
stos
jb
dec
(bad)
pop
in
push
mov
pusha
faddp
mov
mov
std
xor
add
sub
(bad)
sbb
fild
stos
popa
jns
jmp
rol
bound
ins
loop
inc
cmp
sub
xor
and
test
jno
add
ret
out
dec
popa
adc
jns
pusha
sbb
mov
sbb
pop
adc
test
into
bswap
jl
loope
test
sbb
(bad)
xchg
jg
clc
ror
call
outs
inc
leave
pop
cdq
test
inc
cmc
shl
cmps
iret
mov
cmp
stos
adc
sbb
or
add
pop
jno
or
fsubr
fild
push
inc
gs
push
and
outs
sbb
push
jnp
div
or
and
and
mov
mov
into
lock
push
xor
jecxz
xchg
je
and
pop
xchg
sbb
iret
add
ror
out
call
add
(bad)
mov
or
xor
aas
fild
jg
dec
(bad)
ss
add
clc
jmp
xor
push
push
mov
out
test
(bad)
rcl
jle
ins
push
xlat
or
push
lods
xchg
arpl
mov
test
jge
lock
lods
jno
mov
fiadd
cs
jecxz
ds
jne
iret
sti
je
in
lods
scas
pop
adc
jne
imul
or
inc
add
and
test
jb
(bad)
cmp
jmp
pop
call
ins
pusha
or
hlt
cdq
push
scas
xchg
fidiv
in
mov
enter
test
inc
ja
jnp
imul
push
movs
addr16
or
adc
push
leave
sub
mov
movs
xchg
push
jo
mov
pushf
jg
clc
rcr
sub
loopne
cmp
push
xchg
pop
pop
dec
ja
cmp
dec
addr16
jnp
cmp
cmp
int3
xchg
stos
push
test
int3
or
loopne
dec
xchg
adc
mov
mov
xchg
retf
fsub
ret
xchg
dec
scas
rcr
loop
mov
mov
icebp
shl
xchg
jmp
adc
lock
mulps
sbb
cwde
mov
(bad)
mov
aam
push
adc
xchg
jns
call
xchg
lahf
in
cmp
mov
and
call
sbb
mov
pop
lea
dec
jns
xchg
loopne
std
cmp
dec
test
frstor
push
add
rol
push
cmp
dec
call
xchg
mov
mov
loopne
add
int
repz
cwde
push
jo
cli
retf
xchg
cdq
lea
jo
mov
jo
xchg
push
adc
jg
adc
(bad)
mov
sbb
test
inc
scas
shld
pop
jmp
ret
jbe
jmp
or
(bad)
mov
pop
pop
sar
inc
outs
pop
push
rol
ins
jmp
xlat
out
icebp
mov
cdq
cmp
push
dec
fisttp
lods
mov
sub
push
dec
inc
pop
jbe
es
jle
jmp
cmp
ja
das
pop
and
jmp
inc
sub
add
mov
lock
inc
in
sbb
push
cli
neg
cmp
fisttp
cdq
dec
mov
mov
jl
or
test
fs
jmp
dec
lods
cmps
pop
cmp
ror
cs
imul
xor
sub
scas
xchg
sti
in
jo
mov
imul
scas
in
test
pusha
and
add
mov
pop
inc
or
cmp
mov
fimul
lds
adc
stos
mov
cmp
(bad)
fdivr
dec
inc
out
mov
ftst
hlt
stc
mov
mov
rcl
pop
cwde
mov
lds
loope
test
xlat
cdq
sub
aas
enter
fidivr
xor
je
(bad)
lds
not
cmp
push
test
test
hlt
sbb
cli
fst
je
daa
mov
mov
jge
push
inc
pop
push
adc
ret
jg
ins
iret
inc
cmp
hlt
mov
ret
lods
or
out
cmp
add
cmp
inc
xor
pop
nop
icebp
jnp
imul
(bad)
pop
in
ja
bound
xor
mov
and
pop
adc
xchg
popa
pusha
lods
lds
leave
gs
mov
fwait
not
dec
inc
sbb
mov
aaa
adc
les
xchg
sar
nop
push
add
xor
adc
mov
sub
int3
mov
dec
outs
jl
push
call
aad
mov
pop
int3
ficomp
xchg
xchg
mov
leave
mov
mov
mov
mov
in
loop
inc
or
loopne
movs
ds
add
push
cwde
adc
test
dec
jmp
inc
mov
mov
ret
pop
pop
arpl
pcmpgtb
hlt
or
xchg
aaa
in
and
cmps
fwait
ins
ins
stc
aas
push
call
call
add
xor
xchg
js
nop
jl
adc
pop
test
xchg
ins
mov
in
enter
fild
and
int3
(bad)
jge
jl
xor
shl
es
and
jae
imul
inc
adc
mov
idiv
or
push
jns
mov
movs
fistp
jb
mov
jl
aaa
mov
dec
shl
or
test
sub
dec
pop
inc
es
mov
mov
adc
add
cmp
loope
dec
inc
fbld
or
inc
popa
fs
cwde
stc
loopne
(bad)
(bad)
jmp
fisttp
xor
mov
out
inc
not
js
jl
fbld
adc
fstp
inc
mov
cmp
jne
lea
bound
add
cmc
mov
xchg
push
mov
aaa
mov
xchg
dec
fadd
sbb
dec
mov
out
cmp
mov
pusha
repnz
sub
inc
bound
imul
add
neg
popf
sbb
cmps
dec
sbb
aad
pop
mov
and
sub
push
inc
or
retf
cmp
sub
loop
in
fld
xchg
fwait
push
imul
sbb
adc
ror
fsubp
retf
jnp
pop
cmps
cmp
push
xchg
fstp
mov
push
jmp
imul
into
adc
jns
out
out
jmp
retf
xor
popf
xchg
dec
dec
jl
cmps
xor
jae
xor
sub
cld
jg
xor
cmps
pop
push
pop
sahf
adc
mov
enter
lea
ds
jno
test
adc
push
lods
lods
xchg
jbe
ja
sbb
test
sub
cmp
or
icebp
jne
mov
(bad)
fistp
shl
jno
in
and
push
jno
sub
pop
mov
loope
xchg
shl
adc
xchg
pop
repz
das
inc
or
sbb
les
in
cdq
imul
lahf
pop
lock
fwait
movs
pop
dec
xlat
sub
pop
mov
cmps
ins
sub
push
cmp
sbb
push
iret
mul
xchg
mov
mov
mov
push
stc
sub
dec
pop
repnz
push
adc
shr
hlt
pop
xchg
hlt
jns
enter
test
fldcw
std
jmp
mov
cli
inc
inc
xor
xor
sahf
int
std
push
mov
scas
mov
sub
imul
jb
dec
adc
pop
loope
(bad)
pop
push
scas
push
(bad)
loope
inc
movs
and
jns
aaa
dec
add
addr16
mov
ds
sahf
cmp
test
push
inc
mov
inc
call
inc
cmp
push
jnp
xchg
cmc
js
cmps
cwde
mov
div
cmp
bound
mov
push
sbb
mov
cld
popa
les
lahf
ficom
xor
stos
retf
push
pop
xchg
and
dec
out
or
sbb
in
pop
je
lods
inc
lds
jecxz
adc
outs
jge
dec
jns
mov
leave
xor
sbb
cs
xchg
adc
gs
and
loop
xor
neg
clc
sub
repz
or
fs
ds
mov
ror
adc
lds
popf
in
adc
push
inc
movs
jns
into
arpl
mov
inc
jmp
loope
pop
sbb
aas
imul
fld
ja
sbb
(bad)
mov
or
mov
mov
jmp
ja
and
inc
xchg
(bad)
xchg
cwde
xor
or
push
mov
dec
not
mov
xchg
ss
mov
or
pop
(bad)
fisub
inc
mov
jnp
test
imul
stos
fnstenv
cmp
stos
std
hlt
cs
in
mov
dec
ins
gs
nop
icebp
mov
cwde
gs
aam
clc
xchg
jb
mov
xor
mov
cmp
sub
rcl
ds
and
aas
out
dec
mov
pop
js
jnp
sbb
add
or
push
das
dec
mov
loopne
fimul
enter
cmp
mov
bound
sub
mov
rol
cmp
retf
push
in
fisubr
jmp
or
clc
stc
mov
stos
mov
mov
sbb
inc
popa
hlt
mov
push
mov
sti
dec
or
call
arpl
in
adc
push
test
mov
test
sub
inc
add
enter
in
adc
not
jne
xor
out
mov
jmp
fs
enter
fldenv
inc
push
jg
add
jmp
jne
jno
fild
push
(bad)
outs
out
mov
jbe
push
lds
dec
sbb
stos
daa
nop
in
clc
scas
jbe
ret
or
mov
add
loope
and
inc
add
cmps
daa
sub
int3
dec
loope
pop
mov
ins
call
(bad)
shl
(bad)
and
mov
or
or
cmp
test
fnsave
adc
sub
push
arpl
xchg
xchg
stc
lods
push
nop
lods
repz
je
cdq
loopne
mov
cmc
(bad)
dec
ret
sub
mov
inc
fimul
jo
ja
or
neg
xor
sub
and
push
and
ja
mov
adc
movs
sub
movs
mov
mov
stos
(bad)
push
mov
cli
cwde
sub
pop
loop
fist
xor
fisubr
or
jecxz
push
pop
loop
out
bound
mov
add
push
sbb
cmc
clc
inc
sub
jo
outs
adc
jl
jnp
mov
cmp
arpl
push
mov
push
shl
cmp
es
movs
std
jne
jae
lods
jno
test
push
out
cwde
jge
mov
mov
xor
mov
and
enterw
retf
xchg
rol
jae
movs
xlat
(bad)
xlat
jnp
adc
js
hlt
mov
mov
or
sbb
into
fdivr
test
stc
outs
mov
or
push
xchg
jl
mov
scas
jbe
xor
inc
xchg
mov
ror
adc
(bad)
and
sub
or
in
jge
vmovaps
fild
dec
cmp
mov
sub
fcos
pop
add
(bad)
sti
and
stos
fwait
cmp
pop
jmp
fdiv
sub
sub
cld
dec
fcmovb
push
fcomp
and
inc
icebp
push
scas
cmp
ins
jp
ror
sub
dec
fdivr
adc
fs
xchg
sub
xchg
jnp
cmp
jns
mov
dec
xchg
and
nop
xchg
sahf
jl
pop
push
adc
scas
mov
js
xchg
mov
pop
xchg
fmul
lods
lea
int3
arpl
xchg
aad
iret
stos
inc
cli
or
sub
push
loopne
out
lahf
mov
in
lahf
jae
fiadd
cmp
faddp
jl
mov
jmp
xchg
or
test
outs
and
push
cmp
fist
pop
outs
xchg
and
(bad)
and
sbb
cmp
xchg
dec
cld
hlt
div
out
jnp
sahf
jge
push
leave
adc
popf
sub
cld
movs
imul
push
sbb
push
lods
test
mov
scas
stos
jb
add
popf
or
and
push
rcl
and
mov
gs
cmp
xchg
jno
lea
dec
add
dec
test
dec
mov
mov
out
and
or
dec
inc
push
mov
mov
ror
sbb
and
lods
(bad)
out
mov
or
cmp
or
addr16
enter
and
mul
push
outs
cmp
(bad)
in
loope
and
je
enter
push
pop
jmp
mov
jp
jmp
push
repz
xor
lock
test
add
add
les
xlat
xchg
xor
dec
or
mov
out
dec
dec
add
test
outs
push
xor
or
stc
mov
sahf
xor
mov
and
out
sub
ins
pop
xor
outs
ss
push
sbb
mov
bound
lods
clc
xchg
or
ret
ror
jnp
dec
mov
adc
xor
in
sub
imul
inc
dec
cwde
adc
lods
sahf
leave
jmp
jne
call
push
test
aad
pushf
sbb
and
and
mov
scas
mov
jmp
xchg
push
cmp
adc
ret
ins
fisttp
inc
imul
cmps
push
mov
popa
adc
pop
sub
iret
dec
push
sbb
dec
mov
push
push
mov
pop
jecxz
inc
cmp
mov
mov
mov
pop
fcom
push
add
shl
xchg
adc
(bad)
and
stc
test
xor
(bad)
hlt
int3
aad
jmp
xchg
xor
es
cli
lds
or
push
lea
push
sub
es
fsub
and
not
jmp
mov
push
mov
xchg
cmc
mov
nop
aaa
sub
outs
lea
pop
aad
retf
enter
out
out
add
mov
je
push
fmul
(bad)
in
(bad)
adc
test
cmp
push
movs
aam
imul
add
iret
mov
mov
push
mov
lods
imul
jp
cmps
push
rcr
nop
fstp
push
scas
repz
dec
retf
and
fisub
in
clc
mov
inc
xlat
div
xchg
mov
test
mov
push
xchg
fsubr
and
pop
(bad)
adc
bound
push
pop
cmp
mov
cmp
or
js
xchg
adc
aam
aaa
jns
xor
push
add
lds
xchg
lods
add
pop
(bad)
test
retf
inc
mov
mov
pusha
stos
lahf
dec
mov
mov
sahf
aad
lods
arpl
fs
pusha
adc
lods
inc
or
std
inc
es
cld
rcr
xor
test
lds
cld
add
sub
sbb
cs
and
leave
sub
pop
mov
ret
imul
pop
std
cmp
cmp
imul
xlat
in
bound
es
jle
jp
adc
jmp
outs
add
inc
mov
mov
sbb
hlt
push
xor
cmps
xchg
xor
movs
jecxz
stos
xor
retf
xor
lock
pop
add
push
shufps
xchg
push
test
sub
mov
stc
dec
call
fs
adc
mov
push
in
pop
fidivr
sahf
rol
pop
push
sub
inc
pop
hlt
xor
mov
(bad)
push
cmp
nop
jno
mov
out
mov
jecxz
test
xchg
imul
loop
stos
and
or
mov
cmp
xchg
mov
iret
and
inc
mov
fcomip
mov
jne
addr16
test
sub
inc
mov
outs
pop
dec
fldcw
and
or
xlat
loopne
mov
xchg
test
shl
sbb
dec
add
sahf
adc
sub
shr
ffreep
hlt
fs
outs
and
test
pop
fmul
push
xchg
dec
jecxz
mov
mov
in
mov
and
frstor
jmp
addr16
ret
mov
cwde
inc
mov
or
inc
adc
pop
pop
nop
mov
sub
dec
out
pushf
jge
or
outs
repz
sbb
shl
jg
inc
js
stos
aas
push
add
pushf
clc
or
js
or
loopne
sub
scas
inc
scas
adc
call
(bad)
ror
ret
add
jbe
ret
or
iret
adc
adc
push
xchg
jb
(bad)
and
dec
fwait
imul
add
fild
enter
sbb
int3
out
jecxz
int3
sbb
sbb
and
(bad)
ins
cmps
xor
pause
pop
es
rcr
push
enter
push
xor
push
add
(bad)
hlt
loope
inc
mov
leave
mov
inc
add
jp
jmp
ret
sbb
int3
sbb
xchg
or
mov
pop
lock
mov
inc
xchg
(bad)
sbb
cmp
cmp
and
and
xchg
lahf
out
fwait
pop
xchg
ss
fld
push
or
loope
add
jmp
jnp
cmp
mov
inc
mov
sub
test
mov
mov
js
and
and
jle
jecxz
movs
push
aas
ror
or
retf
jns
(bad)
xlat
add
cmp
push
mov
je
jo
test
cmp
aad
or
adc
push
mov
hlt
jge
push
into
fcmovbe
cs
(bad)
fld
not
data16
(bad)
fdiv
lds
aas
test
ret
push
popf
ss
sbb
mov
enter
sbb
cmps
mov
test
scas
xchg
push
mov
stos
or
xor
push
mov
fs
stc
je
enter
sub
mov
scas
iret
sti
xlat
lahf
mov
dec
sub
fstp
popa
add
sbb
pushf
imul
js
xchg
ins
pushf
retf
movs
push
or
test
repz
fsubrp
icebp
retf
push
pop
cmp
cdq
mov
adc
sbb
mov
in
push
call
and
sub
in
fwait
and
xor
xor
adc
adc
push
bound
mov
jae
cld
and
jae
cmp
stos
cmp
pop
shl
or
cmps
xchg
inc
imul
and
add
cmp
sbb
arpl
and
arpl
sbb
addr16
mov
mov
call
dec
mov
xchg
or
dec
jbe
sub
cmps
sub
xchg
push
jnp
push
or
lods
cdq
enter
movs
lahf
pop
loop
sub
das
cmps
inc
inc
cs
sub
and
fcmovbe
push
(bad)
push
pushf
int3
adc
push
adc
push
out
rcl
sbb
adc
shl
enter
push
xor
xchg
inc
mov
inc
int
xchg
ret
in
(bad)
jp
add
mov
ret
int
in
or
pop
jno
push
pusha
sti
adc
das
fbld
adc
push
in
in
mov
lock
jmp
dec
mov
dec
or
(bad)
aad
rcl
adc
xchg
aad
dec
mov
mov
sbb
pop
sub
mov
sub
aas
repz
jb
rcr
push
xchg
gs
mov
jb
pop
arpl
jl
xor
aad
movs
imul
outs
pushf
js
add
sahf
outs
mov
pop
pop
stos
jno
movs
adc
out
adc
dec
mov
xor
(bad)
test
xor
or
jle
add
mov
fldenv
bnd
lods
nop
es
repz
and
mov
mov
std
ret
mov
mov
inc
xor
xchg
adc
sbb
mov
out
pop
bound
pop
or
scas
mov
mov
or
call
repnz
lahf
pop
jecxz
mov
out
sar
sub
dec
loopne
fcom
ins
push
jge
icebp
scas
punpckhdq
xchg
cmc
add
pop
rol
lahf
mov
in
lods
lds
imul
or
aaa
jb
call
test
out
shl
cmps
mov
xchg
pop
fsin
cwde
mov
cmp
ror
int
and
(bad)
sti
mov
sub
call
out
cmp
cmp
mov
cs
adc
mov
arpl
gs
push
or
adc
les
sbb
ror
cmp
outs
jb
les
icebp
(bad)
adc
inc
sti
xor
inc
push
jmp
bound
out
jbe
or
sub
inc
sub
inc
fidiv
xor
xchg
out
out
inc
es
pop
imul
test
mov
pop
retf
imul
xchg
xor
sub
fist
cmp
in
jno
enter
xchg
(bad)
stc
or
ins
pop
stos
xchg
jbe
inc
mov
pop
sti
pop
pop
out
sub
pop
add
sub
xlat
mov
pop
aaa
push
push
pop
movs
or
pop
mov
lock
add
inc
xchg
call
fstp
adc
repnz
dec
ins
add
push
mov
xchg
and
out
xor
sbb
cmps
je
ins
ret
ss
std
cld
jl
dec
imul
xor
pop
and
inc
push
invd
imul
mov
inc
pop
jmp
xlat
call
arpl
int
jg
in
pop
ret
push
ins
pop
test
add
push
jmp
mov
xchg
pushf
adc
xchg
mov
shr
push
test
adc
jne
aad
or
xlat
cwde
sti
scas
sub
hlt
pusha
xor
and
lods
sub
cwde
ror
(bad)
sbb
outs
clc
popf
pop
mov
retf
add
(bad)
add
jp
xor
sbb
dec
imul
(bad)
pop
adc
xchg
std
xchg
sar
mov
mov
mov
and
inc
push
fsubr
sub
cmps
xchg
jge
test
fwait
sub
movs
fsubr
sub
dec
mov
pop
push
rcr
mov
mov
mov
xor
add
xor
xor
sti
cwde
test
stos
fninit
push
inc
mov
xchg
xor
sbb
dec
mov
xchg
lock
retf
nop
ds
cmps
push
mov
adc
push
stos
xchg
in
jbe
stc
sbb
dec
movs
fs
call
loopne
push
sbb
dec
jmp
es
cmp
sub
(bad)
xchg
imul
push
xchg
test
push
movs
test
pushf
and
mov
jecxz
les
xchg
cwde
fadd
pop
in
stos
jne
sub
dec
jno
adc
jle
mov
outs
sbb
pop
and
loop
in
xchg
lods
out
aad
xchg
inc
mov
jmp
jbe
pop
test
mov
pop
mov
mov
sbb
mov
in
(bad)
in
in
ins
adc
sbb
sbb
xlat
xchg
jnp
pop
adc
repnz
lock
std
nop
ins
or
lds
push
push
and
or
mov
xchg
sbb
lahf
out
adc
jno
push
dec
jne
fld
ss
inc
sbb
sahf
call
ror
dec
fwait
or
cmp
push
jnp
pop
or
add
pop
pop
push
in
xchg
cld
retf
mov
cmp
test
inc
push
outs
cmp
and
dec
inc
mov
jno
loope
pop
jns
inc
push
xor
mov
repz
inc
loopne
cmps
jns
adc
pop
es
jmp
leave
mov
test
dec
aam
aas
mov
imul
jo
(bad)
push
pop
dec
jne
fmul
jb
div
or
movzx
imul
ins
test
sub
dec
or
cmp
xchg
push
pushf
test
(bad)
mov
adc
out
shl
push
das
xor
xor
cwd
cmps
push
bound
mov
stc
mov
sub
sbb
frndint
ins
add
xor
std
jae
cmc
mov
dec
or
shl
push
adc
ins
or
cmc
inc
js
pop
mov
pop
mov
pusha
in
jg
xor
cmc
xor
and
ins
jge
mov
lock
mov
mov
addr16
test
jb
ins
adc
pop
stc
mov
bound
cmc
pop
push
lahf
aam
jg
js
mov
push
inc
sbb
leave
loopne
sahf
scas
sub
jge
push
add
sub
dec
(bad)
bnd
ror
int3
or
push
inc
das
test
mov
arpl
dec
or
dec
loopne
push
fst
cmp
ins
test
cmp
xor
pop
jns
cmps
outs
xor
sub
sti
xchg
outs
jecxz
mov
inc
jl
js
sub
and
popf
(bad)
bound
repz
jge
pop
add
add
(bad)
sub
out
aad
sahf
aam
xchg
fdivr
push
stc
sbb
mov
rcr
xor
cs
pusha
pop
dec
jmp
mov
mov
loop
bound
sub
test
lods
lea
(bad)
ds
dec
imul
lods
pop
push
pusha
cmp
jns
inc
cld
push
movs
push
or
cs
or
mov
inc
jnp
jle
xor
push
sub
arpl
cmp
inc
xchg
std
xchg
xchg
(bad)
inc
ja
fimul
jo
call
mov
dec
mov
nop
es
sbb
push
fdiv
pop
out
xlat
cmp
arpl
stc
xchg
adc
jne
sbb
mul
lahf
xchg
clc
mov
sub
add
nop
fwait
imul
jle
mov
cs
mov
pop
cmp
aam
xchg
sbb
adc
lds
push
xor
ins
xchg
inc
pop
and
pushf
sbb
les
and
clc
cmp
stc
sahf
xchg
pop
dec
loop
test
push
ds
inc
dec
scas
or
dec
or
xchg
ins
cli
scas
mov
push
xor
xchg
jno
mov
adc
and
add
xchg
inc
push
popa
fidiv
loopne
movs
cmps
mov
or
cmps
fadd
mov
shr
cmp
shl
dec
in
adc
adc
mov
les
pop
cld
pusha
stos
cdq
ja
fadd
fwait
pop
daa
rcr
fisttp
add
pop
fnstenv
icebp
adc
and
mov
push
sub
sbb
jbe
jmp
adc
scas
movs
mov
retf
cmp
jl
mov
jbe
clc
rol
test
push
xchg
sbb
jmp
jg
int
ins
cmps
ret
xchg
stos
mov
mov
or
retf
mov
jmp
inc
or
adc
pop
pop
pop
add
cmp
out
or
sti
(bad)
or
cmp
mov
sbb
xor
cmp
mov
cmp
or
add
pop
nop
aam
adc
xchg
cmp
add
and
nop
pop
in
imul
ds
push
mov
cmc
dec
sub
cld
sub
lock
or
jg
jecxz
cld
xchg
xchg
mov
xlat
mov
xchg
jle
hlt
in
gs
mov
lahf
scas
in
inc
add
imul
sub
out
fnstenv
xor
sbb
dec
iret
pusha
cdq
lock
loopne
hlt
movs
nop
jmp
aaa
lea
pop
jbe
lea
aam
sbb
xor
pop
mov
cmp
jne
rcr
adc
fst
es
arpl
scas
pop
mov
test
mov
fisttp
xor
mov
mov
fiadd
mov
aam
jl
pop
push
mov
xchg
dec
aas
push
loopne
std
scas
push
mov
adc
dec
fmul
sbb
(bad)
imul
jge
sbb
rol
cmps
sub
shl
gs
sbb
lds
int3
test
dec
xor
xchg
les
push
dec
jmp
aad
mov
dec
jne
(bad)
cmp
mov
mov
mov
imul
lods
add
sbb
addr16
mov
or
sbb
sahf
aam
imul
les
mov
ss
and
xor
aas
fs
mov
pop
out
mov
mov
cld
xor
hlt
fs
push
mov
inc
inc
loopne
push
cmps
fcomi
in
in
dec
fild
mov
jno
xchg
push
cmp
mov
ror
mov
pop
mov
(bad)
mov
fdivrp
jmp
retf
sub
mov
sub
fisttp
retf
hlt
out
xchg
pushw
xchg
retf
clc
xchg
dec
mov
add
jecxz
jae
push
and
dec
jno
in
cmp
int3
(bad)
jns
pop
mov
adc
(bad)
cmp
jecxz
sub
cmp
add
dec
jmp
loope
(bad)
mov
or
push
retf
ins
jae
lods
sub
inc
and
stos
arpl
jp
ficomp
or
mov
add
adc
adc
cmp
idiv
mov
pushf
sbb
test
es
dec
sub
xchg
mov
ror
push
push
inc
retf
and
xor
mov
adc
iret
(bad)
jno
int3
or
lock
xor
mov
test
mov
dec
dec
(bad)
xchg
dec
cmp
rcl
pop
loop
jp
sbb
call
retf
inc
push
clc
mov
pushf
lea
je
jmpw
cmps
cmp
loope
push
dec
mov
(bad)
nop
mov
inc
arpl
xchg
hlt
sbb
aaa
mov
ror
adc
mov
cmp
jmp
mov
rol
xchg
adc
lea
pop
xchg
leave
sbb
pop
mov
shr
rol
push
in
enter
repnz
inc
pop
mov
aam
repnz
mov
jmp
xor
fidiv
xchg
aad
sbb
adc
push
aad
dec
pop
push
inc
in
retf
mov
(bad)
not
xor
jbe
push
jo
fs
(bad)
inc
jb
cmp
pop
ss
mov
ds
iret
add
jae
xor
cmp
(bad)
push
idiv
jno
dec
jle
sbb
fld
pushf
push
adc
or
dec
bound
cmp
mov
jo
and
nop
shr
movs
into
jge
add
adc
jmp
add
or
sub
daa
fidiv
retf
imul
cdq
int
loope
cmp
idiv
iret
mov
mov
cmps
in
lods
adc
cmp
into
adc
dec
add
push
shl
jb
bound
mov
jae
jg
test
add
xchg
cmps
aaa
or
arpl
lods
shl
repnz
(bad)
inc
cmps
mov
mov
or
lods
pop
sbb
jge
jmp
dec
xor
jmp
(bad)
inc
mov
pop
mov
mov
mov
push
shr
dec
cld
xlat
test
sub
ins
loopne
jne
mov
jle
jge
cld
stos
lds
lods
popa
cdq
lock
pop
mov
add
xor
in
jmp
loop
out
ja
dec
jae
sub
jg
sbb
jmp
push
or
fmul
movs
cmp
arpl
jno
test
mov
daa
imul
jbe
neg
ret
cmp
inc
scas
mov
dec
push
dec
or
add
and
add
out
xor
mov
xor
lahf
inc
and
pop
test
call
idiv
aam
mov
add
ss
ins
test
xchg
lock
and
test
xchg
in
push
xchg
call
and
and
jge
xchg
dec
dec
sahf
push
adc
mov
rcr
out
call
nop
daa
fcomp
or
dec
lock
sub
jmp
ja
sub
fnstenv
pop
pop
cli
ja
repnz
or
shl
icebp
outs
jno
xchg
mov
repnz
call
push
pop
jb
sub
inc
mov
inc
and
inc
cld
mov
fdivr
jp
gs
xchg
or
mov
popa
mov
adc
cli
xchg
inc
shr
fwait
ror
cmp
pusha
bound
mov
sbb
sbb
ficomp
mov
repnz
adc
shr
dec
test
push
pushf
add
add
imul
push
les
and
inc
xor
lods
push
push
add
(bad)
fistp
les
push
inc
rcl
fstp
fwait
cmps
xchg
xchg
push
lods
icebp
jne
sub
ret
xor
cs
(bad)
shl
call
movs
loope
mov
push
pushf
loope
out
das
push
out
pop
mov
dec
cmp
cmp
fwait
lods
inc
jl
xlat
xchg
(bad)
cmp
iret
xor
or
mov
pusha
pop
inc
mov
pop
mov
test
jbe
fsubp
inc
xchg
fiadd
in
jmp
push
push
cld
inc
jl
add
push
lea
addr16
push
sub
inc
loope
jp
test
test
xor
notrack
daa
xchg
(bad)
rcr
dec
pop
sub
push
push
jg
push
sub
jp
mov
int3
daa
loopne
push
jno
out
aas
or
cdq
pusha
out
mov
mov
stc
mov
imul
sub
in
push
and
dec
pop
fucom
push
add
mov
push
jg
lods
imul
sar
(bad)
jno
push
jmp
and
or
cld
mov
mov
retf
jle
fwait
mov
mov
inc
pop
aam
inc
mov
adc
xor
xchg
pop
mov
adc
push
pusha
test
out
in
in
mov
mov
(bad)
sub
(bad)
push
repz
jae
xor
mov
mov
cmp
push
adc
xchg
outs
fidiv
push
dec
or
gs
mov
sbb
mov
cmps
push
mov
icebp
and
dec
rcr
mov
inc
sbb
jle
inc
int3
jge
fwait
pop
and
out
pop
mov
push
pop
push
and
sbb
jl
arpl
xchg
adc
les
xchg
or
cmps
mov
cld
scas
push
in
pop
es
ror
cld
ss
loope
retf
(bad)
push
das
imul
test
(bad)
fucomip
adc
aam
push
push
adc
ficomp
in
mov
cmp
call
aas
pop
mov
inc
add
and
cmps
and
sbb
jp
dec
imul
shufps
cmp
repz
cwde
pop
rol
mov
scas
cmp
jns
aad
pop
popa
sub
ss
mov
jle
int
out
test
sub
sub
in
stc
dec
mov
xchg
jp
stc
adc
ret
icebp
jmp
int
and
aam
stc
and
ds
cs
mov
cs
pop
fwait
inc
sub
test
push
gs
mov
cmp
cmp
inc
popf
push
jns
adc
jge
mov
inc
stos
js
mov
loop
es
pop
je
add
aam
pusha
ss
(bad)
hlt
xor
bound
sti
psubsb
ret
std
xor
sbb
or
mov
dec
jnp
xor
pop
out
test
frstpm(287
sub
cmp
test
int
out
lds
mov
pop
jns
bound
mov
jmp
push
mov
jle
lds
push
outs
cmp
sbb
ficom
cmp
add
inc
jecxz
jne
pushf
cwde
mov
jmp
repnz
push
pop
(bad)
(bad)
jne
sub
push
cmp
ins
fdivr
in
or
loope
sbb
jb
and
cmp
xor
dec
adc
out
aam
push
in
push
iret
in
(bad)
xlat
mov
add
out
aas
mov
push
push
fmul
xor
rep
and
pop
ins
mov
fs
mov
cmc
mov
xor
data16
cdq
stos
adc
sbb
add
push
and
retf
sub
jg
cli
xchg
adc
mov
ins
dec
js
nop
cmps
sub
(bad)
jecxz
in
mov
xchg
or
mov
adc
mov
ror
in
and
cmp
cli
cmps
sub
addr16
push
aad
xor
call
jg
xor
dec
sub
cdq
in
adc
test
movs
add
or
mov
add
ret
push
jbe
stos
aam
cmp
xchg
sbb
aam
movmskps
and
push
adc
pop
inc
pop
sbb
cmps
xchg
das
pop
adc
xchg
fst
aam
ins
ins
sbb
pop
add
in
and
ins
xor
or
cwde
fsub
in
fsub
mov
jle
lea
popf
adc
sar
mov
hlt
sar
dec
int
test
mov
stos
xor
iret
pop
gs
pusha
sub
aas
fcom
jg
xor
add
sbb
sub
pop
cwde
mov
(bad)
fimul
ins
xchg
fisttp
int3
lods
mov
in
fld
(bad)
icebp
stc
inc
jmp
cmp
xor
call
jle
repnz
sar
add
imul
push
xchg
and
lea
aad
mov
sti
int
leave
cmp
cwde
popa
cmc
shl
sbb
push
pusha
sbb
movs
shl
cld
or
inc
rcl
sub
mov
add
push
ret
xchg
and
fistp
call
mov
fdivr
popf
push
cmp
xor
iret
jp
sub
pop
jo
jecxz
ins
mov
repz
dec
mov
ds
out
not
(bad)
mov
add
dec
retf
pop
sub
inc
mov
in
or
jb
jb
pop
fwait
(bad)
fsub
and
pop
add
push
mov
or
lods
mov
cwde
sub
dec
cmc
jbe
out
fisub
xlat
aaa
mov
out
sbb
mov
sub
jmp
aaa
fs
push
inc
xchg
jmp
mov
ins
in
pop
lods
cmp
xlat
outs
hlt
(bad)
ret
mov
cdq
cs
pop
test
push
adc
es
(bad)
sbb
fsub
(bad)
or
xchg
cmp
xchg
lea
sub
jmp
sub
clc
dec
scas
repnz
(bad)
or
cdq
out
sbb
xlat
mov
aad
dec
inc
cdq
push
rcr
xchg
pop
mov
inc
mov
add
mov
sbb
ret
sbb
jns
js
hlt
repz
add
pop
cmp
cmps
ins
sub
je
or
jl
std
xor
sbb
div
retf
mov
push
outs
sbb
push
cli
sbb
cmps
push
jmp
pop
jo
adc
nop
and
mov
jbe
add
jns
cs
mov
pop
push
(bad)
jno
lods
leave
out
loope
in
fwait
pushf
cmp
mov
stc
add
lods
xchg
outs
cmps
sahf
jle
pop
push
and
lahf
(bad)
and
pop
push
push
pop
jge
stos
pop
das
das
ror
retf
mov
not
inc
sub
dec
inc
pusha
test
inc
mov
call
fld
fistp
inc
cmps
test
movs
jbe
sti
and
sbb
xchg
sub
sbb
mov
dec
shl
stos
in
test
or
jl
in
sbb
mov
repnz
mov
js
jge
push
stc
jl
aam
std
fild
add
(bad)
sub
icebp
shr
lods
push
xchg
shr
mov
push
mov
push
das
jg
adc
js
inc
fnstsw
cld
inc
adc
outs
(bad)
cmp
lds
icebp
loope
rcl
fcmovbe
movs
sbb
popf
sbb
loop
and
cmc
jl
fdivr
jecxz
imul
mov
outs
jns
fcomp
or
dec
rcr
adc
imul
ins
dec
add
push
sub
push
jno
out
int
dec
xlat
loop
lds
std
call
sub
cmps
ret
rol
cmps
mov
icebp
dec
push
mov
in
xchg
add
cmp
jnp
ds
out
dec
xor
and
push
inc
dec
fwait
mov
or
mov
ins
psubw
outs
test
jno
mov
ins
dec
jge
stos
mov
mov
add
cld
push
mov
popf
das
xor
std
sahf
hlt
xor
jmp
ja
xchg
shl
adc
inc
mov
int
lods
dec
les
or
pop
bswap
inc
xchg
jno
sar
cmp
dec
fisub
lods
(bad)
ins
stos
add
adc
pop
loopne
and
pop
cmp
mov
pop
mov
mov
xor
movs
mov
adc
lds
push
rol
int3
jns
lahf
dec
xchg
stos
imul
fwait
xor
sub
je
push
rcr
int3
imul
cmp
add
pop
fisttp
xchg
or
cmp
in
cmp
mov
jmp
aad
xlat
cmp
pop
pop
loopne
push
sub
js
mov
and
lods
cmp
xor
aad
outs
out
arpl
and
mov
aam
jmp
jge
sbb
mov
mov
sub
sub
mov
inc
aas
rol
and
push
mov
out
inc
dec
mov
icebp
mov
push
cwde
mov
fucomip
xor
jl
std
sbb
scas
repz
adc
add
mov
add
pop
jp
test
imul
xor
(bad)
mov
and
jecxz
mov
leave
in
out
xchg
fiadd
and
es
ds
je
(bad)
xchg
push
pop
fisubr
std
xchg
pop
mov
test
jge
pop
cmp
stc
add
inc
ret
pop
cwde
aam
mov
pop
pushf
add
mov
aad
ins
xor
xor
int
inc
xor
clc
call
mov
(bad)
adc
pop
mov
into
repnz
mov
jbe
jne
push
das
push
adc
xchg
mov
stos
bound
cmp
imul
das
inc
xchg
into
dec
or
mov
sub
pop
addr16
or
push
jb
pop
adc
sbb
ss
jmp
and
xchg
pushf
retf
mov
pop
push
xor
pop
push
add
xor
out
fdivr
iret
inc
imul
mov
shl
call
cmp
cmp
jle
jno
cmp
xor
push
sub
cmp
pop
sub
jge
dec
cmp
xlat
cli
ret
mov
ret
ja
xlat
mov
mov
cwde
mov
(bad)
nop
mov
xchg
repz
(bad)
ror
mov
add
stos
ss
push
call
xor
lods
mov
sub
pop
add
sahf
jmp
arpl
test
cli
in
imul
shl
mov
mov
fcmovne
sbb
pop
mov
mov
loop
aas
mov
mov
pop
xchg
push
xor
push
mov
test
cdq
inc
movs
mov
ror
add
fisub
out
das
push
test
lds
lods
nop
ins
scas
mov
std
or
adc
test
pop
adc
jp
lds
dec
add
adc
pop
jecxz
jae
pop
mov
popa
pop
lock
xor
sbb
xchg
add
adc
jb
in
or
inc
loop
inc
aas
and
aaa
dec
jnp
jmp
aaa
(bad)
or
and
xor
or
test
xchg
pop
fld
dec
shr
and
jg
out
mov
imul
or
hlt
pop
cmc
push
cmps
push
mov
call
push
inc
in
push
movs
dec
shl
popf
xchg
sub
cmp
pinsrw
or
xor
cmp
xchg
lock
xchg
out
test
mov
push
shr
sub
mov
jns
aas
xor
pop
lea
iret
jl
xlat
mov
cli
loope
mov
jnp
leave
stos
ss
adc
rol
dec
cli
push
sbb
repz
xor
shl
(bad)
or
mov
retf
std
mov
mov
pop
scas
cld
mov
ds
push
dec
sar
mov
sub
and
popa
cdq
arpl
test
bound
cmp
mov
jg
bound
jns
rcl
inc
fist
ins
pop
sar
push
sar
popf
and
icebp
push
fnsave
xlat
imul
clc
or
outs
mov
adc
cli
imul
pop
pop
jbe
sbb
jmp
ja
(bad)
addr16
cmps
or
sub
xchg
xchg
ja
xlat
scas
lds
add
cmps
scas
jge
inc
out
cli
test
sbb
mov
or
mov
or
adc
jg
clc
stc
lds
popf
dec
fcomp
jmp
adc
mov
push
pusha
jl
dec
nop
ins
fs
xchg
lock
xor
inc
and
int
push
or
cmc
add
jmp
xor
push
aam
jle
addr16
jle
jns
mov
sub
(bad)
retf
into
sub
mov
fs
pop
inc
ins
aaa
out
bswap
dec
sbb
ret
in
es
aam
fadd
and
aad
es
mov
cmp
and
pop
sub
jo
cld
fidiv
inc
test
or
sub
clc
push
dec
dec
jnp
cmp
push
out
or
pop
mov
push
sbb
sub
cmp
xchg
gs
and
fdivr
jle
arpl
fldenv
push
mov
add
int3
call
cwde
pop
jl
das
es
jo
daa
and
jbe
push
inc
xchg
jb
clc
push
add
lea
hlt
xchg
sub
outs
or
mov
out
das
mov
xor
push
mov
mov
or
loopne
xor
sub
jl
cmp
popa
sub
jno
push
arpl
sbb
cmps
cdq
mov
jnp
cmp
xlat
mov
lods
dec
inc
stos
outs
adc
add
pushf
(bad)
xlat
jbe
mov
into
ins
and
in
mov
xchg
jg
push
or
xchg
jmp
stc
shr
or
jb
sub
stos
std
repz
xor
fcmovne
(bad)
retf
sbb
sub
idiv
(bad)
sar
xchg
(bad)
test
fmul
mov
fsub
popa
into
mov
mov
jle
inc
push
fsub
stos
sbb
out
pop
jae
(bad)
arpl
mov
psadbw
shl
and
xchg
dec
(bad)
lahf
sub
cld
pushf
movs
(bad)
inc
sti
imul
pop
dec
pop
mov
xchg
int3
dec
dec
pop
xchg
dec
cld
fwait
mov
gs
dec
fild
pop
cmp
enter
mov
xchg
fisttp
jae
xor
ret
in
xchg
aam
xchg
jmp
je
retf
adc
fst
enter
pop
repnz
jnp
jmp
xor
push
(bad)
rcr
adc
mov
push
pop
leave
repnz
xor
jg
inc
mov
imul
cmps
jno
xchg
ja
jle
aaa
div
fcomp
adc
add
adc
loope
jmp
aaa
loopne
mov
sbb
push
call
repz
jnp
sbb
inc
daa
in
add
push
fistp
mov
xchg
mov
adc
mov
frstor
lds
fs
pop
fistp
inc
sub
retf
fs
in
out
lock
or
fcomp
or
mov
in
fstp
stos
rol
test
mov
rol
or
or
aas
sub
jge
jle
sbb
fdivr
xchg
dec
ss
or
loope
push
pusha
xor
loope
mov
push
fcmovne
in
xchg
mov
mov
fstp
mov
jo
xor
clc
adc
dec
mov
jmp
sar
mov
pop
daa
ins
inc
dec
cmp
mov
mov
cmp
pop
scas
add
es
addr16
into
jmp
and
cli
mov
(bad)
jge
mov
mov
pop
popf
mov
inc
adc
pop
jbe
xchg
sahf
std
jns
jno
jl
cs
mov
lds
rol
sub
test
inc
cs
movs
xchg
dec
xchg
jp
pop
popa
movs
jg
mov
ror
pop
ins
out
nop
xchg
fidivr
outs
push
and
fisttp
call
mov
mov
int3
xchg
add
xchg
lds
retf
jnp
add
jae
push
clc
ret
icebp
mov
jle
mov
mov
fwait
dec
hlt
inc
sti
pop
aad
add
adc
lahf
inc
retf
hlt
pop
or
xor
jno
sahf
test
push
repnz
ret
xor
push
stos
lahf
sub
std
or
dec
or
jae
dec
jecxz
push
push
push
icebp
jmp
mov
xor
sub
adc
bound
movs
add
hlt
fidiv
pop
push
addr16
and
ficomp
adc
jecxz
mov
push
aad
push
mov
mov
mov
nop
mov
ins
les
cmps
mov
push
cmps
or
out
xor
and
out
jmp
into
mov
xchg
inc
mov
pop
and
(bad)
sti
xor
mov
fs
aas
push
xor
test
mov
dec
enter
retf
and
call
mov
push
push
lock
jnp
pop
and
sub
loop
fisttp
cmc
fwait
ins
mov
sbb
inc
push
stos
pushf
dec
mov
mov
jp
mov
xchg
leave
jmp
dec
out
stc
test
movs
mov
xchg
xchg
rcl
sub
or
and
xchg
fmulp
in
test
into
outs
cmc
pop
retf
jle
push
mov
cmps
xchg
in
gs
xchg
test
inc
sbb
in
loopne
mov
imul
cmc
(bad)
or
pop
out
xchg
jl
and
leave
mov
call
inc
or
mov
dec
pop
jnp
add
xchg
jbe
cmp
fld
lods
fcmovnbe
mov
xchg
sbb
or
sbb
aad
clc
dec
mov
cld
in
in
cmps
jbe
jmp
cmp
(bad)
lock
outs
out
hlt
inc
popf
(bad)
scas
jo
xchg
icebp
push
cdq
fwait
jbe
push
and
popa
dec
shr
jnp
fsub
ins
sti
jecxz
(bad)
idiv
mov
inc
push
cld
xchg
outs
loope
ins
movs
repnz
cmp
cmp
daa
pop
jbe
push
cmps
fld
jecxz
jno
xchg
aad
mov
and
mov
imul
dec
mov
or
div
jmp
sub
sbb
(bad)
repz
push
add
dec
mov
stos
adc
pop
push
cmp
or
daa
push
(bad)
aaa
cmp
inc
ss
retf
xlat
dec
or
sbb
rcl
call
inc
cs
retf
xchg
sub
sbb
inc
add
or
and
push
out
int
sbb
mov
xor
mov
cmp
cmp
cs
inc
xlat
or
and
frstor
jg
mov
adc
rcl
adc
sbb
push
sbb
mov
pop
sbb
mov
nop
neg
pop
icebp
dec
sbb
xchg
xor
adc
clc
and
push
mov
adc
xor
inc
ror
ins
popf
push
jnp
sub
jmp
push
mov
add
int
xor
jb
stc
jp
add
jecxz
and
adc
dec
sti
pop
sub
clc
add
bound
in
into
dec
mov
stc
(bad)
aad
je
imul
cli
pop
daa
aas
js
mov
mov
xchg
and
(bad)
sub
fisubr
jae
adc
jnp
sub
fidiv
stos
test
adc
ret
popa
pop
(bad)
or
es
push
loopne
push
ret
clc
xor
in
sbb
fidiv
add
(bad)
or
cmps
clc
and
aaa
call
add
xchg
jns
jmp
(bad)
jbe
inc
(bad)
jecxz
xor
inc
jmp
mov
std
bound
stc
mov
xchg
movs
sub
cmp
es
loop
gs
je
mov
mov
sub
test
mov
je
jno
jnp
push
mov
jmp
enter
fcomp
xor
xchg
iret
ficom
push
inc
cmps
xchg
ret
push
push
or
lods
dec
adc
in
push
pop
sahf
inc
sar
outs
mov
call
test
push
dec
aaa
fdivr
test
icebp
jecxz
aad
fwait
popf
cmp
popa
lock
js
(bad)
std
das
adc
mov
cmp
cmp
xchg
rol
push
fwait
pusha
retf
popa
mov
inc
lds
call
push
mov
adc
xchg
push
cdq
sub
dec
add
fcomp
sub
call
sbb
or
repnz
add
and
mov
rol
mov
sbb
loope
adc
cmps
mov
in
inc
cdq
pop
push
ror
push
push
addr16
aam
cs
lahf
mov
xor
out
or
hlt
out
push
outs
call
sahf
lods
xor
and
and
push
sbb
fidivr
ins
cmp
sar
fcmovnu
shl
or
mov
xchg
mov
mov
push
nop
shl
pop
aad
adc
test
adc
out
fmulp
aaa
pop
or
das
dec
cwde
cmp
(bad)
mov
jne
dec
call
repz
jecxz
sub
test
mov
mov
xchg
out
add
and
add
inc
dec
mov
mov
dec
cmps
stc
jg
dec
ror
call
es
dec
aaa
ja
pop
mov
fldpi
pusha
xor
inc
inc
or
test
ins
ds
xchg
inc
fcom
xchg
bswap
repnz
or
dec
jnp
xchg
inc
nop
xchg
xchg
inc
ror
in
pop
mov
sbb
je
mov
adc
loope
xlat
stos
sbb
stos
mov
mov
fs
mov
(bad)
scas
rcr
(bad)
leave
(bad)
jecxz
bound
bound
daa
dec
lods
pop
jge
mov
mov
push
popa
mov
(bad)
mov
loopne
aam
stos
pop
arpl
pop
or
cmps
je
push
mov
mov
(bad)
in
xor
in
or
xchg
je
cmp
mov
add
dec
cmps
xor
in
cdq
fmulp
dec
mov
rol
adc
in
shl
(bad)
cs
inc
push
imul
jl
daa
bound
stc
jle
and
mul
inc
cmp
xchg
and
jmp
mov
repnz
mov
aam
loop
sub
dec
call
out
fistp
and
mov
jae
(bad)
sti
xchg
push
inc
sti
mov
adc
mov
mov
cmp
leave
shl
mov
add
fistp
sbb
xlat
xor
mov
in
fistp
push
aad
add
pusha
adc
jno
pop
dec
inc
paddusw
mov
div
mov
sub
push
outs
mov
add
mov
loopne
rcl
outs
ins
lods
jge
jl
xchg
pop
mov
cmps
inc
repnz
(bad)
jp
pushf
out
xchg
rol
call
mov
jmp
popa
daa
(bad)
mov
mov
dec
(bad)
mov
jnp
add
cwde
xchg
outs
pop
fwait
loopne
stos
stos
xchg
sbb
sub
ror
fdivr
mov
mov
repz
(bad)
shl
xchg
fdivr
aaa
add
adc
inc
test
push
or
push
dec
xor
xchg
adc
scas
jne
sbb
pop
mov
jne
xchg
push
adc
fst
pop
push
push
sub
movs
push
mov
fmul
movs
ret
in
cmp
adc
mov
xor
xor
cli
cmp
std
xor
add
out
mov
xchg
mov
lods
popf
push
out
cdq
pusha
inc
scas
push
lds
ja
dec
je
into
shr
xchg
es
outs
pusha
or
and
jecxz
mov
and
fist
cmps
and
sub
inc
retf
fbstp
ds
push
test
mov
js
mov
das
aaa
out
cmp
sub
in
call
fwait
add
fist
pop
pop
sub
ret
dec
jg
jge
mov
pop
xor
int3
sub
ror
aad
and
repnz
add
data16
mov
pop
imul
or
mov
cmps
cmps
in
adc
push
pop
add
jmp
scas
call
out
sar
sbb
mov
sub
mov
xor
pop
aaa
sub
mov
pop
mov
sub
cdq
fs
xor
sub
aas
mov
xor
lods
ins
add
icebp
jmp
inc
test
mov
jo
xor
inc
pop
sub
jbe
jl
out
adc
mov
(bad)
repz
(bad)
mov
iret
pop
test
mov
aam
or
sub
jmp
jl
ds
call
mov
outs
into
fxch
idiv
mov
loopne
iret
inc
and
clc
push
xchg
imul
outs
push
cdq
jne
(bad)
mov
jecxz
in
push
cmps
fiadd
test
fbld
cmps
mov
das
div
mov
iret
xchg
inc
rol
imul
inc
shr
cmp
lods
outs
xchg
sub
pop
dec
out
pop
popw
pop
out
nop
data16
test
imul
push
retf
cmps
imul
jle
mov
data16
mov
add
test
sbb
(bad)
dec
loop
cs
fs
mov
mov
mov
bound
mov
dec
arpl
call
mov
das
jl
jmp
mov
daa
arpl
xchg
xor
cld
call
xor
ret
xor
mov
scas
mov
in
xchg
das
fnstenv
cld
ins
adc
call
xchg
inc
pop
(bad)
adc
mov
inc
mov
jle
push
jmp
ficom
aad
fcomip
add
in
std
mov
fsubr
push
nop
mov
xor
mov
mov
add
jl
(bad)
mov
or
mov
loop
inc
cmp
add
pop
aaa
adc
inc
out
dec
push
(bad)
sub
push
rcl
cmp
xor
cld
lahf
adc
nop
movs
mov
and
clc
out
lods
inc
cld
add
push
pop
js
cld
jns
jmp
in
sub
fs
movs
dec
call
mov
push
aas
cmps
mov
in
data16
jg
dec
out
and
(bad)
ficom
sbb
in
cmp
test
mov
cmp
dec
retf
sub
sub
cmp
jp
mov
loop
inc
les
outs
inc
add
loopne
jmp
test
sbb
test
in
pop
int
arpl
sbb
push
adc
cmp
mov
cmps
(bad)
jb
xor
mov
arpl
push
sbb
ins
out
(bad)
cmc
jae
mov
in
ja
(bad)
dec
in
pusha
fisttp
push
jecxz
mov
scas
daa
add
aad
adc
xor
mov
cli
mov
push
jo
aaa
gs
out
and
clc
adc
pop
icebp
ret
in
cmovge
scas
mov
in
enter
pusha
or
sahf
js
dec
lahf
dec
xor
hlt
lds
push
jl
mov
xchg
push
lods
pop
sub
outs
inc
add
repz
and
loopne
out
xchg
mov
call
xor
or
or
test
mov
call
dec
or
pusha
mov
pushf
adc
les
ins
jo
adc
enter
cmp
jg
push
cmp
js
or
mov
ds
popa
adc
mov
xor
jmp
or
dec
ins
mov
fistp
sbb
mov
pushf
out
xor
jmp
xor
jp
std
fsub
mov
or
sbb
pop
cdq
mov
add
xchg
push
imul
add
adc
inc
call
enter
aaa
shl
cmp
fld
inc
mov
repnz
fldenv
dec
addr16
cwde
push
push
outs
popa
frstor
push
gs
dec
mov
inc
sub
or
ss
ret
out
jbe
icebp
icebp
jae
aas
mov
mov
lea
fnstsw
int3
and
inc
dec
inc
push
es
cmc
pop
jl
push
enter
out
shr
mov
cmps
(bad)
mov
ja
mov
icebp
sbb
cdq
repz
push
or
sub
scas
jmp
mov
inc
xor
pop
loop
test
mov
stos
imul
lods
pop
pop
xchg
push
ror
in
fstp
adc
cs
imul
imul
sti
mov
sbb
mov
fsub
cmc
pop
hlt
or
loopne
xor
inc
xchg
movs
not
jnp
sbb
push
mov
push
dec
inc
loope
mov
inc
fwait
jns
add
ret
fbstp
jmp
cdq
dec
mov
mov
jecxz
lahf
ins
xor
adc
movs
mov
mov
lea
les
xor
das
fild
or
outs
scas
dec
push
int3
das
inc
mov
inc
out
les
movs
jg
dec
pop
cs
push
or
add
(bad)
shl
sub
or
fcom
ror
dec
test
pop
adc
div
in
sti
jo
add
jne
shl
fcom
int
mov
rcl
inc
sub
lds
movs
jae
sahf
mov
ficom
xor
cmc
mov
jg
or
inc
dec
ror
shl
dec
or
sbb
imul
inc
push
adc
cvtps2pi
jnp
mov
cmp
inc
add
rol
mov
(bad)
jge
call
push
pop
xor
and
ror
push
pop
xchg
test
mov
lea
inc
push
or
(bad)
stos
cmps
inc
xor
pop
cmc
and
(bad)
aaa
sub
fimul
scas
leave
and
push
jbe
sub
dec
jns
and
gs
cmp
cmp
inc
pusha
push
in
xchg
and
xchg
ret
jbe
sub
adc
and
or
inc
adc
inc
and
or
movs
mov
xchg
test
adc
mov
sbb
dec
sub
mov
repz
sbb
sub
push
xchg
lods
fsubr
xchg
sbb
cs
mov
retf
and
inc
mov
rol
in
add
and
sti
inc
pop
call
xor
pop
pop
xor
adc
into
out
pop
fsub
sub
and
inc
inc
movs
aaa
cmp
dec
add
pop
dec
cmps
mov
sbb
or
pushf
aaa
test
out
aas
fst
mov
push
sub
in
and
push
aam
sbb
inc
xor
es
sub
inc
lods
pop
mov
loopne
push
mov
in
call
fisub
test
cmp
lahf
xor
jecxz
fwait
inc
add
fcomi
mov
test
into
mov
imul
ret
pop
mov
clc
or
mov
loopne
xchg
out
leave
loop
jmp
je
xor
sub
pop
mov
push
dec
cmp
pushf
bound
popf
fwait
mov
stc
(bad)
stos
arpl
jecxz
(bad)
shl
fldln2
not
(bad)
movs
pushf
xchg
gs
aas
sub
jl
hlt
pop
ss
jge
pop
ror
mov
mov
and
leave
pusha
xchg
sub
pusha
jmp
js
pop
sbb
push
enter
sub
and
outs
fild
ins
push
pop
push
jle
movs
push
add
stos
add
dec
neg
xchg
mov
call
sbb
xchg
adc
mov
call
and
mov
dec
ds
fcom
loopne
lahf
pop
xchg
dec
mov
stos
mov
out
sbb
cs
dec
inc
retf
sub
aas
cmps
leave
jne
push
jp
gs
xchg
retf
and
lahf
dec
(bad)
push
stos
test
sbb
outs
mov
sbb
fs
sub
pop
(bad)
in
jmp
pop
fist
mov
jmp
dec
les
bnd
add
cmps
movs
aas
std
sub
jno
sbb
pop
hlt
jle
lods
(bad)
out
jmp
sub
mov
sbb
push
popf
in
scas
or
(bad)
sbb
jl
add
cld
pop
and
xchg
jg
pushf
popf
and
retf
push
repz
retf
xchg
(bad)
cmc
or
jo
inc
mov
dec
aad
adc
sbb
std
fs
sbb
in
div
cmp
sbb
jecxz
sub
je
icebp
arpl
lea
pop
test
(bad)
cli
div
mov
loop
and
popf
in
sahf
pop
jb
or
or
xchg
pop
les
enter
mov
loop
mov
call
jae
sbb
add
mov
ja
jg
push
outs
xlat
imul
cmp
mov
dec
fwait
jno
ins
cmp
sub
cmps
scas
add
mov
and
mov
or
dec
xor
in
idiv
stc
adc
cmp
iret
mov
sub
neg
fiadd
arpl
rol
dec
int3
daa
test
les
adc
(bad)
mov
xor
or
shr
test
int
(bad)
loop
fmulp
fldenv
mov
fwait
or
mov
sbb
in
cmp
dec
pusha
add
call
lahf
fwait
jg
push
mov
and
xor
cld
and
in
fidiv
pop
in
into
add
push
bound
or
out
adc
sbb
xor
pop
dec
aas
sar
cmc
outs
pop
gs
push
xor
mov
mov
and
fcomp
hlt
jb
loope
jecxz
in
sub
jmp
push
lods
test
xchg
in
adc
mov
pop
call
pop
and
jp
cmp
cmp
mov
and
sti
push
ins
aaa
pop
xchg
mov
ret
gs
aad
iret
mov
retf
das
icebp
into
ror
fwait
mov
mov
mov
test
jno
cs
mov
repz
dec
sub
mov
jle
cs
mov
xor
mov
(bad)
inc
add
inc
(bad)
sbb
mov
lods
adc
test
(bad)
out
repz
arpl
mov
sub
ins
mov
xchg
sub
and
pushf
mov
clc
ins
pop
adc
bound
and
movs
inc
lds
mov
out
ficom
xlat
mov
(bad)
mov
ds
out
je
mov
(bad)
ror
push
mov
pushf
les
mov
stos
or
jl
adc
scas
mov
pop
jmp
adc
inc
das
mov
xor
aaa
cs
jge
add
stos
cmp
pop
xchg
(bad)
and
xor
xchg
sbb
nop
jnp
js
xchg
push
push
rol
mov
enter
mov
push
cli
jle
jo
inc
int
bound
sbb
sub
mov
leave
jl
mov
aam
push
mov
es
adc
push
jbe
cdq
sbb
inc
shl
lock
call
or
fucomip
(bad)
xchg
jmp
ret
inc
enter
xor
int
or
sbb
rol
(bad)
(bad)
xchg
xor
call
pop
out
push
out
ss
ret
icebp
adc
mov
mov
dec
cld
pusha
dec
push
fnstsw
movs
inc
xchg
add
imul
test
enter
dec
inc
leave
or
push
push
or
mov
aam
sub
sub
cmps
sbb
les
(bad)
retf
movs
in
adc
add
sub
loope
push
es
jne
mov
mov
out
pushf
mov
dec
xchg
es
sbb
cmp
dec
pop
and
or
repnz
cdq
add
ins
inc
cdq
cld
mov
xchg
loop
sub
and
xchg
fst
call
fs
mov
adc
mov
or
inc
pop
ret
mov
test
mov
xor
pop
js
ficom
in
cmp
repz
and
ss
lock
push
mov
dec
sbb
shr
js
adc
mov
lods
pop
pop
pusha
push
jnp
jno
cmps
add
jmp
and
xchg
sar
cld
add
retf
imul
mov
mov
fwait
rol
xchg
add
dec
cs
mov
ss
fadd
scas
cmp
and
add
(bad)
fld
pop
inc
movs
das
in
add
cmp
mov
std
xchg
or
(bad)
sbb
sub
dec
ins
jno
xchg
js
mov
out
pop
mov
ins
pop
add
aaa
ss
in
push
dec
retf
js
ins
sbb
xchg
add
jecxz
xor
or
dec
mov
daa
xchg
pop
xchg
mov
shl
xchg
pop
dec
cmps
je
outs
pop
mov
int3
push
lahf
xor
fcom
pop
ins
push
mov
mov
scas
outs
fist
cmp
pop
add
jecxz
lods
jmp
pop
(bad)
pop
test
sub
retf
je
mov
movs
mov
pop
mov
dec
lods
test
mov
test
stos
xor
jnp
cmp
jmp
push
(bad)
mov
(bad)
stos
push
sahf
sub
mov
mov
jnp
pop
or
pop
sbb
sub
xchg
push
pop
fstp
or
outs
xchg
popa
icebp
sub
fcmovnu
push
ret
lods
and
mov
mov
(bad)
outs
mov
jo
icebp
xlat
stc
adc
aaa
mov
popa
(bad)
jae
jl
sub
sahf
cmps
loope
push
jbe
repz
add
imul
into
rcl
sti
mov
pusha
adc
ret
xor
je
ins
cmps
sub
hlt
fmul
lods
add
out
(bad)
xchg
mov
paddsb
xor
hlt
cdq
call
cmc
addr16
cli
push
std
jp
lods
add
sar
aaa
ret
jno
jbe
mov
jb
mov
cmp
mov
(bad)
xchg
mov
jo
stc
shl
add
stos
ins
push
rol
or
add
pusha
push
xor
mov
cs
nop
popa
je
loope
int
push
sub
cwde
loop
add
pushf
fnsave
imul
cmp
in
outs
sbb
push
or
stos
xchg
xchg
int3
cwde
push
mov
sub
shl
xor
into
xor
jp
shl
mov
sbb
xchg
add
leave
mov
cli
push
fwait
adc
aaa
sub
mov
or
fist
pusha
dec
adc
dec
(bad)
out
call
pop
mov
push
cmp
call
bound
adc
inc
js
fadd
daa
cmc
push
les
cmp
xchg
push
imul
inc
mov
fld
sub
cmp
adc
xchg
sbb
pop
(bad)
outs
mov
mov
stos
add
std
jle
pop
in
add
bound
hlt
cld
pusha
aaa
int
outs
sub
xchg
push
out
pop
xchg
aaa
sbb
cwde
push
inc
in
cs
aad
into
mov
sbb
mov
xchg
cmp
or
cmc
pop
in
jle
pop
mov
loope
inc
inc
mov
adc
pop
iret
aaa
inc
fwait
aaa
jg
mov
dec
inc
pop
xchg
pop
ficom
dec
mov
rol
cmp
fmul
sti
in
sti
scas
mov
mov
jg
and
xchg
ret
mov
ins
outs
push
fcomp
cmp
sbb
xor
xchg
and
outs
mov
jp
in
jae
fs
(bad)
frstor
in
inc
dec
sub
sub
ficomp
pop
push
jae
cmp
stos
jmp
rol
pop
push
popf
inc
dec
fst
ds
shl
cmps
lock
mov
aas
mov
mov
movs
xchg
out
test
sbb
or
mov
(bad)
jge
lods
xchg
popa
mov
je
xor
push
mov
adc
outs
ss
mov
loop
pop
inc
dec
outs
ror
cmps
pop
mov
and
test
push
loop
fs
cli
sub
(bad)
mov
lods
cmp
inc
cmp
mov
add
int3
daa
xchg
dec
shl
test
fstp
mov
jo
xchg
test
jo
and
or
inc
jmp
pop
test
imul
pop
jnp
push
xor
je
jo
cmp
movs
and
out
mov
dec
xor
push
push
jo
xchg
(bad)
pop
cmp
dec
aad
lds
jne
push
or
push
mov
cmp
mov
fwait
push
sub
dec
jmp
adc
imul
cdq
mov
jo
imul
mov
mov
js
test
pushf
xor
pop
(bad)
ds
outs
mov
xor
add
test
in
xor
ror
push
js
jns
mov
fmul
xor
mov
lea
mov
mov
mov
(bad)
aaa
push
nop
test
cwde
cmps
sub
xchg
aam
and
cld
sbb
addr16
inc
jne
mov
sti
lock
push
in
cmp
xchg
inc
sbb
cmp
jmp
shl
cmp
pop
sbb
adc
mov
in
call
loope
xchg
ret
in
cli
and
arpl
add
icebp
xchg
in
scas
unpckhps
jecxz
aas
sahf
sub
or
mov
and
nop
cmp
mov
outs
dec
movs
sub
mov
mov
pop
or
loope
int
enter
fwait
push
pop
imul
push
xor
scas
pop
mov
loop
jne
test
sub
adc
out
retf
jle
pop
xor
ror
mov
into
xchg
sbb
ficomp
dec
int3
cmps
mov
push
xor
popf
sub
mov
jecxz
inc
jnp
cmc
imul
pop
xchg
fwait
adc
jle
movs
and
or
stos
sub
jecxz
mov
pop
(bad)
and
xor
mov
mov
and
push
rol
pop
inc
xchg
clc
imul
inc
cs
test
sbb
sub
or
sub
pop
fild
jne
mov
jge
cmp
sub
jnp
push
cmp
movs
dec
inc
enter
mov
jle
sbb
mov
call
neg
es
pop
or
xor
adc
loopne
push
and
fisubr
push
inc
sbb
adc
(bad)
xor
popa
popf
push
scas
mov
(bad)
lahf
or
jmp
mov
in
jns
push
adc
xor
cli
adc
sub
sub
cli
dec
pop
movs
xor
sbb
ins
in
pop
movs
mul
fs
xor
push
mov
pextrw
push
(bad)
xor
mov
call
inc
(bad)
outs
je
push
sti
add
mov
outs
pop
pop
mov
jl
xor
mov
es
mov
fs
sbb
jns
mov
pop
mov
cmc
mov
cmp
push
sub
pop
xchg
rcl
inc
cmps
or
(bad)
in
test
inc
ins
(bad)
bound
pop
ins
push
stos
imul
fcmovu
je
and
sbb
loopne
xlat
mov
cmps
or
and
mov
pop
movs
jbe
jl
mov
jno
adc
mov
add
leave
cwde
pop
pop
jp
nop
sti
dec
cmp
jecxz
pop
call
mov
sbb
enter
popa
sub
mov
pop
and
in
xor
add
jle
or
addr16
mov
out
sbb
imul
mov
pop
inc
mov
pusha
jno
xchg
sub
inc
out
in
cmp
lahf
mov
mov
sahf
sbb
xor
inc
cmp
ret
leave
mov
inc
xchg
cli
jg
iret
push
adc
out
push
add
outs
push
mov
push
clc
pop
pop
push
and
popf
xor
fdivr
out
pusha
dec
xchg
xor
daa
xchg
lock
lea
aam
sti
cs
mov
or
enter
das
push
add
fdiv
clc
repnz
xor
mov
inc
mov
scas
adc
mov
sbb
cld
inc
sar
ins
idiv
int3
repz
test
not
mov
jl
nop
xchg
pop
and
mov
sbb
test
cmps
out
sub
pop
jo
shl
dec
sahf
popa
xchg
fsub
(bad)
jno
xchg
les
mov
mov
test
cdq
rcl
pushf
mov
loop
int
rol
pop
jnp
push
repz
in
xchg
xor
jge
add
inc
pop
(bad)
call
scas
pop
sar
ret
lods
call
ins
cmps
jo
mov
popf
xor
ja
xchg
sbb
xchg
es
int
loope
mov
mov
jbe
lock
xor
sar
or
clc
jnp
push
cmp
out
ret
mov
sahf
lods
cmp
in
pop
out
cmp
push
sbb
(bad)
jbe
jnp
sbb
pushf
cmp
push
pop
inc
dec
test
inc
js
ret
sar
scas
or
scas
and
(bad)
fdivr
xchg
or
mov
lock
movs
ds
or
mov
xor
in
arpl
(bad)
lea
push
pop
xchg
movs
mov
jmp
cmps
ret
(bad)
dec
bnd
jge
sbb
out
jge
or
call
push
jle
adc
ins
test
mov
sbb
pop
xchg
arpl
push
pop
and
add
dec
cmp
std
movs
sbb
dec
shl
push
jne
pop
and
push
enter
push
fisub
jg
repnz
jmp
push
add
inc
mov
sub
lock
sub
push
je
or
into
dec
cmp
adc
push
fbld
(bad)
mov
pop
sub
scas
push
retf
jle
jns
xor
cmp
leave
pop
add
cmps
sbb
mov
ins
xchg
repnz
stc
scas
lock
loope
add
dec
stos
xchg
push
lea
mov
mov
into
adc
cmp
adc
push
mov
mov
mov
sti
xlat
bound
push
inc
enter
dec
(bad)
mov
mov
lahf
pop
lds
adc
ret
sbb
dec
push
mov
shl
std
(bad)
movs
ins
inc
shr
lock
adc
sub
jecxz
fdivr
movs
and
int3
(bad)
fucomi
cmp
push
cmp
imul
mov
xor
inc
inc
add
fistp
cmp
mov
dec
sbb
outs
inc
xchg
sub
out
or
cdq
push
xchg
or
jge
lods
ss
dec
imul
xor
dec
mov
js
rcr
mov
and
rcr
pop
test
cmps
cdq
jmp
jge
js
loopne
push
mov
jb
and
add
or
nop
(bad)
jo
clc
test
out
fisubr
xlat
xor
out
inc
and
xor
aam
or
push
fistp
cmp
add
mov
popf
shl
ror
mov
or
test
inc
inc
push
in
repnz
mov
cmps
xor
leave
adc
addr16
ret
jb
lock
lods
add
inc
pop
lea
fcom
cld
outs
mov
mov
in
stos
sub
fdiv
mov
nop
aas
in
rol
push
xchg
pop
pop
mov
mov
rcl
lods
loopne
and
push
rol
mov
(bad)
mov
cmps
jnp
hlt
jg
jno
fistp
out
fsubp
or
test
fnstenv
or
xchg
pop
repz
in
je
popa
daa
test
mov
and
gs
or
call
dec
(bad)
xor
mov
cmc
mov
pushf
adc
(bad)
mov
leave
xor
shld
repz
ja
ins
jmp
push
(bad)
mov
leave
ret
ins
push
push
out
adc
(bad)
mov
cs
in
pop
push
loop
je
ret
cwde
ds
ror
int
cmp
gs
int
sbb
xchg
cwde
sbb
idiv
mov
or
adc
stos
outs
xor
mov
jg
mov
or
imul
(bad)
scas
pop
jne
and
sbb
ins
xchg
and
cld
rol
icebp
and
das
sbb
sbb
jae
(bad)
xor
inc
sbb
dec
jg
fs
jecxz
(bad)
dec
mov
sahf
sub
inc
stos
dec
jo
in
movs
stos
hlt
mov
push
pop
iret
sbb
(bad)
popa
(bad)
shl
push
xor
pop
jg
add
sbb
mov
inc
daa
sub
jne
and
add
mov
lahf
(bad)
cs
pop
pushf
cmp
mov
and
mov
iret
mov
mov
jge
retf
retf
inc
test
xchg
out
int
sub
test
pop
cs
push
imul
mov
mov
fnstcw
jne
or
(bad)
int
mov
movs
mov
je
add
sbb
xchg
mov
jae
aam
imul
add
dec
jnp
pop
mov
mov
gs
call
(bad)
gs
jge
mov
popa
push
sbb
xor
rcl
lods
fld
cmp
add
inc
mov
xchg
sti
in
fisttp
adc
and
adc
jmp
int
cmp
ins
leave
cmp
sub
adc
push
xchg
gs
jg
pop
mov
pop
and
jl
aas
pusha
rol
stc
mov
inc
pop
test
xchg
repz
sbb
fs
mov
push
dec
xor
mov
cwd
lds
jge
add
or
test
or
cmp
popa
mov
mov
loope
pop
sti
(bad)
xor
jp
jbe
xor
(bad)
push
jmp
(bad)
fnstsw
pop
or
data16
add
sbb
movs
pop
inc
imul
push
adc
mov
in
mov
push
lock
mov
fld
call
jno
movs
stc
jp
xor
out
ret
stos
pop
daa
mov
push
push
mov
(bad)
clc
std
add
mov
dec
xlat
and
mov
cmp
out
xor
push
dec
sub
mov
add
cmp
sub
leave
push
mov
rcr
xor
xchg
test
xchg
mov
aaa
leave
xor
fld
inc
test
aam
xor
pushf
out
mov
sub
mov
lahf
mov
jp
cmovbe
cmp
out
aaa
addr16
mov
out
daa
mov
ret
or
pop
or
ficomp
into
retf
sti
out
lods
sbb
repnz
cdq
cdq
aaa
stos
idiv
movs
sbb
clc
jle
xor
jmp
xchg
shr
sbb
mov
mov
mov
cmp
xor
imul
stos
dec
into
nop
sub
mov
mov
bound
aam
jle
add
popa
inc
and
jecxz
ficom
sub
sbb
and
dec
cmp
ret
dec
sub
mov
adc
xchg
ja
jnp
pop
aam
push
jg
fbld
aam
loope
sub
fmul
cmp
fild
sar
mov
adc
cdq
inc
rcl
xor
xlat
stos
jl
call
and
mov
(bad)
int
push
daa
sbb
sub
pusha
mov
sbb
dec
loope
imul
xchg
jmp
mov
pop
jl
jl
pop
cwde
sbb
int
or
cmp
int
lods
loop
inc
sub
in
pop
mov
addr16
std
jg
jbe
push
fnstsw
xchg
cmps
enter
(bad)
jle
fs
dec
jo
lods
mov
push
push
call
aaa
fadd
or
in
mov
out
sub
arpl
mov
dec
mov
loope
inc
jecxz
and
int3
xchg
jmp
outs
push
push
dec
dec
mov
and
lods
pop
dec
adc
(bad)
bound
(bad)
loope
push
sbb
pop
cmp
dec
icebp
pop
cmp
adc
sbb
dec
dec
mov
or
push
add
je
cmps
(bad)
sbb
and
ficom
ret
mov
outs
adc
rcl
int3
aam
mov
ss
int3
pusha
push
(bad)
int3
mov
mov
and
adc
add
jo
xlat
stos
cmps
cmc
and
adc
and
inc
fidiv
fisttp
cld
push
sbb
fs
cmp
xchg
lds
fnstcw
jne
pop
test
or
mov
nop
jmp
inc
pop
ja
es
lahf
hlt
int3
xchg
jmp
mov
sub
clc
jge
mul
shl
movs
sahf
stos
arpl
jmp
push
fisttp
push
std
add
inc
push
mov
mov
fadd
dec
jo
push
pop
inc
loope
jae
mov
(bad)
arpl
stc
add
jb
dec
mov
pop
and
push
retf
pop
jg
push
and
mov
add
cdq
push
ss
jmp
cmc
add
jg
pextrw
cdq
and
or
aaa
shl
int
jmp
inc
cdq
daa
lods
cwde
popf
inc
int3
call
xlat
push
ret
retw
push
pushf
rcl
xchg
iret
jge
jbe
aas
pop
jle
dec
mov
xchg
cmps
xchg
sub
jne
jne
scas
lods
sbb
sbb
data16
mov
and
sahf
ins
push
fld
push
repz
pop
inc
scas
mov
xchg
in
pop
sub
lods
pushf
sbb
xchg
rcl
pop
cmp
outs
push
out
daa
inc
loope
or
loope
in
push
cmp
ins
sbb
mov
push
movs
mov
(bad)
jecxz
(bad)
icebp
mov
aas
mov
or
and
push
mov
(bad)
addr16
sar
xor
jecxz
cs
push
jae
and
mov
out
pusha
nop
mov
scas
fstp
repnz
and
and
sbb
xor
xchg
cmp
push
ret
(bad)
leave
icebp
cmp
dec
jno
test
(bad)
push
hlt
in
arpl
js
repnz
add
and
imul
push
pusha
pop
pop
scas
add
test
popf
in
xchg
les
mov
push
sar
js
retf
rcl
push
inc
sub
pop
xor
cmp
push
sahf
push
retf
lods
out
outs
jns
pop
push
push
out
push
sbb
in
jne
aas
xor
popf
and
mov
push
loop
add
stos
jne
jmp
xor
sub
ja
mov
leave
ss
ds
dec
ins
rol
scas
rol
rcr
mov
push
inc
mov
cmp
std
call
mov
push
retf
adc
mov
pop
push
mov
shl
mov
dec
mov
push
(bad)
dec
mov
or
cmp
cmps
xor
push
dec
bound
dec
xor
sbb
mov
mov
pop
jae
sub
pop
push
imul
pop
cmp
push
adc
sub
sub
fidivr
adc
stos
sub
xor
(bad)
mov
das
jg
lods
inc
fadd
out
adc
push
mov
gs
inc
shl
aaa
outs
(bad)
jmp
cli
outs
jcxz
jecxz
dec
call
scas
cdq
xchg
iret
loopne
mov
mov
sbb
stos
call
fisubr
mov
add
jg
cld
pop
sar
mov
cld
mov
stc
out
je
xchg
jnp
cmps
xor
mov
cmp
push
or
or
cs
out
cmp
ins
ds
dec
mov
shr
jp
jp
ret
ss
dec
bound
daa
jae
imul
sub
jb
enter
cs
gs
jae
and
cmp
out
pop
clc
push
and
stos
xchg
push
pop
jns
jecxz
and
pop
mov
jp
movs
test
movs
and
in
mov
pusha
lds
adc
jmp
outs
test
xchg
sbb
pusha
mov
mov
sbb
lock
repnz
mov
jno
aaa
cmp
cwde
cmp
rcl
ret
popa
pop
shl
int
outs
dec
push
pop
cmp
cmc
movs
ins
test
cmp
and
jmp
hlt
cmp
cmp
add
dec
int
cwde
push
cmp
retf
dec
bound
cld
dec
xor
jmp
jg
data16
int3
mul
ror
cdq
and
adc
popf
xchg
je
and
icebp
push
arpl
mov
iret
ds
(bad)
jl
jecxz
add
(bad)
adc
ret
inc
xchg
xor
mov
adc
loopne
sbb
dec
ret
cmps
sahf
or
mul
dec
fwait
ret
test
xor
xchg
push
mov
pop
and
xor
sbb
imul
dec
repnz
dec
mov
mov
cmp
lods
adc
mov
or
jecxz
xlat
inc
ret
movs
cmc
in
ror
xor
xchg
ds
sbb
mov
mov
(bad)
or
jb
mov
ins
or
sub
sbb
jne
mov
inc
mov
and
adc
mov
push
loop
xchg
dec
lock
outs
(bad)
enter
mov
idiv
jmp
mov
loopne
dec
mov
sbb
repz
aam
push
lods
sbb
mov
fimul
fisubr
mov
push
stc
js
dec
mov
(bad)
test
fiadd
arpl
or
imul
mov
push
js
jo
sub
cmps
popf
jge
pop
xlat
(bad)
push
test
jmp
xchg
outs
sub
retf
inc
jne
stos
fucomip
fst
sar
and
(bad)
adc
fstp
add
aas
mov
push
ret
pop
jnp
jle
sbb
push
les
push
push
pop
xchg
jmp
xchg
bswap
arpl
dec
push
and
rcr
ret
jmp
cs
sub
enter
push
out
xor
push
into
sbb
cdq
adc
lods
movs
mov
pushf
test
jb
add
and
retf
cdq
add
imul
pusha
rcl
aaa
test
imul
stos
movs
sub
fs
div
enter
jl
and
std
dec
or
push
in
sub
nop
jb
ds
mov
fsubr
repnz
test
sbb
loopne
mov
or
retf
push
into
aam
rol
push
push
and
add
std
add
shl
les
div
in
lock
mov
jmp
fidiv
sbb
shl
pop
dec
ss
xlat
or
iret
outs
mov
dec
push
add
inc
(bad)
pop
pop
cmp
in
mov
push
addr16
cmp
popf
ins
clc
jnp
call
loope
or
xchg
cmp
xchg
xor
enter
sub
pop
mov
pushw
cmps
retf
fld
inc
mov
stos
dec
cmc
in
mov
sub
iret
scas
jmp
or
retf
pop
sbb
jge
(bad)
rol
call
cmp
jbe
and
xchg
aam
inc
adc
gs
push
sbb
adc
inc
and
or
stos
cmc
mov
pop
push
ds
les
idiv
pop
push
cmp
pop
pushf
dec
mov
mov
adc
(bad)
and
mov
jl
shl
das
push
(bad)
push
stc
imul
cli
mov
jns
pusha
cli
sbb
mov
out
mov
in
data16
dec
push
mov
cmp
or
dec
(bad)
adc
sbb
repz
adc
jmp
inc
push
scas
xchg
cmp
cmp
sub
lods
fiadd
xchg
aam
xchg
xchg
retf
add
pop
retf
push
int3
jl
xchg
fidivr
inc
movs
int3
inc
pop
or
loope
and
and
rol
push
into
ret
sahf
ins
mov
ins
xor
gs
(bad)
pop
dec
iret
add
push
push
aaa
sub
adc
(bad)
icebp
jl
loop
aad
pushf
xor
aaa
dec
out
test
jo
jns
jnp
jo
int3
pop
mov
test
lahf
jae
ins
sbb
dec
fsub
lahf
dec
or
mov
cmps
pusha
cli
push
inc
std
xchg
int3
(bad)
or
cmp
scas
pop
out
lea
std
cdq
fs
lds
into
in
adc
inc
ds
and
ja
js
lods
xor
(bad)
aas
out
(bad)
out
popa
stos
(bad)
(bad)
or
and
mov
inc
ja
cmp
les
or
dec
sti
fwait
push
push
xor
push
add
call
test
xlat
push
push
out
ret
imul
aaa
fisttp
lock
mov
cmp
mov
push
and
mov
pop
inc
push
mov
(bad)
retf
shl
push
mov
jnp
sar
push
and
lods
push
gs
sub
dec
les
jne
jae
add
inc
imul
cmovnp
or
dec
cld
out
ja
sbb
jo
dec
mov
fs
sub
mov
in
sbb
xchg
or
mov
(bad)
pop
lahf
popa
cmc
scas
pop
push
mov
inc
pop
je
sbb
pushaw
fwait
dec
pop
in
xor
xor
push
call
leave
fcom
mov
jmp
mov
fstp
pop
ret
or
fld
pop
cmp
mov
retf
add
push
popa
nop
and
push
ja
es
sti
xchg
ins
pop
dec
ja
stos
mov
pop
lahf
mov
loop
lea
test
arpl
or
pushf
adc
dec
bound
arpl
in
dec
mov
out
fnstcw
movs
mov
aam
xchg
adc
xor
iretw
adc
out
mov
in
xor
xor
rol
sub
int3
sbb
dec
shr
(bad)
ds
xchg
fsub
jno
add
in
in
outs
sar
es
xchg
data16
mov
lock
push
mov
cmp
dec
adc
test
ret
mov
mov
xor
(bad)
popf
sub
jg
hlt
lods
inc
jmp
sbb
test
enter
jno
add
int
fadd
sub
cs
and
sub
fs
xchg
aam
mov
sub
or
sbb
mov
mov
in
inc
lock
ret
(bad)
in
fstp
jmp
xor
dec
xchg
xor
pop
scas
sbb
jle
fdiv
lods
(bad)
mov
inc
ret
repnz
cmps
rcr
jb
and
dec
pop
aas
test
shr
or
fwait
cwde
xlat
arpl
sub
cmc
sbb
sbb
cmc
data16
and
mov
pop
and
mov
das
mov
imul
jl
mov
fistp
mov
add
ins
pop
jmp
mov
dec
mov
mov
aad
ss
mov
cmp
fldenv
fsub
mov
sub
rcl
sahf
aad
mov
sub
aas
add
loop
enter
retf
ds
adc
ds
movs
mov
add
dec
and
sbb
mov
fwait
xor
sub
sbb
cwde
sbb
cmps
sbb
inc
dec
jp
call
ja
adc
pop
dec
in
sbb
imul
jae
scas
mov
das
push
nop
pop
mov
adc
jl
pop
aam
cmps
jno
mov
cmps
ins
shl
jl
int
ret
pop
fld
xor
repnz
(bad)
pop
stos
pusha
jbe
or
lock
mov
mov
(bad)
das
cwde
or
cmc
jecxz
xchg
int
in
dec
repnz
lods
movs
bound
shl
pop
retf
(bad)
push
loope
and
mov
dec
jmp
stc
stc
add
ds
popf
enter
ins
xor
cmp
and
and
pop
cmp
xchg
je
add
cmp
mov
sub
or
mov
mov
inc
mov
aam
cld
add
and
sub
mov
xchg
mov
jno
xchg
pop
sbb
dec
pop
sub
into
pop
inc
mov
xor
rcr
fscale
pop
dec
push
sub
push
out
pop
call
loop
xlat
sti
fstp
loop
scas
out
mov
push
pop
aaa
daa
call
sbb
mov
retf
add
push
ror
push
into
lahf
sbb
stos
shr
std
btr
cmp
sub
and
sub
pop
push
add
enter
jae
(bad)
fwait
and
bound
(bad)
cs
and
push
sub
clc
and
mov
pop
pop
sbb
lods
adc
lahf
in
inc
pop
xchg
sti
mov
or
sub
jnp
(bad)
adc
jnp
mov
and
mov
mov
(bad)
imul
(bad)
fs
xchg
shr
in
mov
dec
fadd
int3
jge
lds
dec
inc
dec
aas
pop
inc
xor
mov
push
fdiv
movs
jns
dec
push
aas
gs
dec
mov
scas
xor
cdq
inc
pop
inc
mov
fs
cmp
js
loope
retf
das
jo
sub
xor
test
pop
call
jo
dec
mov
adc
jo
xlat
pop
cdq
xchg
mov
addr16
movs
ror
push
or
jae
cmp
stos
or
pushf
inc
mov
cmp
sub
jbe
jnp
aad
mov
loop
push
jge
adc
arpl
in
test
in
lahf
imul
and
test
pop
test
cmp
xchg
push
mov
sbb
pop
push
stos
mov
xchg
push
mov
or
test
xor
pusha
repz
js
mov
jecxz
cmps
xchg
cdq
es
in
pop
cld
push
sub
cmp
mov
cmp
cli
jge
outs
and
mov
int3
jle
push
adc
xor
ret
mov
xor
(bad)
(bad)
movs
push
push
popf
cmps
sbb
jns
fcmovne
jl
je
jge
sbb
xor
push
mov
iret
or
rcl
scas
mov
jnp
retf
inc
or
inc
shr
cld
nop
scas
test
mov
ins
rcr
pusha
and
mov
gs
icebp
call
sar
pop
icebp
push
xchg
(bad)
repnz
outs
sahf
push
js
lock
daa
cdq
nop
jb
lahf
(bad)
fisttp
nop
cmps
mov
dec
sbb
adc
adc
in
sub
jns
xchg
paddb
int3
aas
ret
add
pushf
push
sbb
retf
fs
jmp
or
ss
mov
mov
mov
or
add
sahf
inc
das
or
dec
aad
cmp
scas
in
jb
sub
retf
adc
jo
ds
pop
xor
ret
mov
inc
repnz
call
mov
not
or
xchg
push
adc
lahf
xchg
adc
pop
das
sbb
lods
sbb
and
and
adc
repz
cld
add
(bad)
add
xchg
cmc
fidivr
iret
cmps
or
jmp
xlat
pop
push
pop
test
and
cmp
cmp
pop
fbld
fwait
mov
adc
fwait
cmc
lods
retf
pushf
jne
cmp
lds
pop
fwait
xchg
push
dec
pop
cmp
jmp
push
sub
xor
(bad)
dec
sti
dec
push
xlat
int
out
push
mov
pop
mov
inc
cld
pop
pop
jl
std
nop
pop
rcl
push
test
(bad)
add
pusha
inc
mov
and
jge
mov
cli
or
loope
pop
lods
clc
mov
arpl
adc
jne
leave
dec
repnz
cwde
xchg
cmc
xor
mov
aam
mov
lods
sub
rcl
mov
dec
neg
arpl
and
rcr
imul
addr16
mov
ja
xor
sub
(bad)
ret
in
sub
push
jno
(bad)
xor
dec
cmp
sub
push
ins
into
stos
and
shl
cs
inc
cld
not
jge
xchg
arpl
hlt
ins
movs
cmp
dec
mov
js
dec
xchg
cmp
jb
ds
mov
enter
fwait
mov
(bad)
sbb
mov
ret
jl
lods
pusha
popa
lds
xlat
popf
push
in
add
sahf
loope
cmps
shr
sar
loop
pop
jmp
(bad)
shl
dec
jo
inc
mov
mov
dec
ds
push
loop
or
sub
fwait
in
aas
int
out
repz
inc
jle
jg
stos
imul
and
cdq
mov
leave
jo
mov
inc
icebp
pop
xchg
add
addr16
dec
into
mov
xor
call
aas
add
fisttp
pop
(bad)
xlat
mov
cmps
je
bound
std
in
cmc
idiv
push
dec
cli
sbb
bound
mov
mov
jmp
pop
out
mov
popw
xchg
(bad)
cmc
inc
arpl
stos
cmps
sbb
popf
mov
jg
lea
ja
sbb
jo
loope
jl
stos
pop
repz
fs
and
xchg
inc
ret
pop
in
xchg
icebp
fwait
or
sub
ror
and
mov
inc
sub
bound
mov
icebp
test
cmp
pop
dec
paddb
fabs
and
xchg
retf
inc
test
xchg
mov
js
or
mov
(bad)
lods
sar
jecxz
jmp
mov
sti
sbb
cmps
sti
psubd
dec
mov
and
popf
mov
jg
and
inc
sbb
shr
aam
das
jle
and
jae
aam
jbe
jo
and
adc
sti
outs
mov
movs
mov
mov
lods
sbb
pusha
rcl
ja
js
xlat
repz
dec
push
sub
dec
xchg
sbb
mov
ins
aas
push
call
scas
aad
push
shl
sub
enter
inc
sbb
and
adc
xor
in
rol
xchg
in
pop
xchg
(bad)
movs
(bad)
rcr
cmp
push
(bad)
mov
xchg
cmp
leave
pushf
mov
xchg
in
sbb
jmp
add
rol
cmp
(bad)
sbb
nop
mov
stos
das
jge
sub
add
iret
add
mov
adc
jno
push
xchg
cmp
(bad)
outs
mov
ret
and
loope
inc
leave
lods
(bad)
jg
jle
add
and
lahf
and
jb
jno
xchg
mov
add
aam
adc
mov
shl
inc
(bad)
cdq
test
mov
ds
jne
outs
cs
jae
push
loop
mov
jg
out
cli
mov
je
arpl
fstp
push
and
ffreep
add
lods
mov
(bad)
rcr
xchg
imul
sub
shr
xor
in
fdivr
icebp
pop
mov
setp
repnz
(bad)
push
xchg
push
and
xor
pushf
mov
sbb
jo
out
(bad)
call
das
repnz
shl
stos
sbb
aas
ret
push
lock
jbe
add
inc
(bad)
jle
mov
or
aas
mov
je
cmp
push
xor
mov
out
adc
test
call
sbb
jb
rcl
stos
daa
sbb
fisttp
jg
call
shr
xor
xchg
jo
iret
fcomi
pmulhw
int
adc
mov
jge
fst
ret
inc
xor
jnp
mul
repz
jo
push
(bad)
loopne
retf
dec
mov
dec
xchg
mov
dec
aaa
mov
sub
xor
pop
jne
popa
std
and
pop
aad
mov
cld
xchg
lods
cmp
add
and
mov
push
sub
dec
push
pusha
jp
sbb
ret
pop
es
sub
sbb
inc
ds
mov
retf
sbb
mov
ret
xchg
rcl
mov
loop
fs
sbb
xchg
stos
pop
pop
sub
mov
iret
or
addr16
and
les
cmp
cwde
leave
daa
mov
movs
sar
and
es
(bad)
fidivr
adc
mov
dec
cdq
mov
in
or
daa
push
int
sbb
mov
test
hlt
mov
cld
fldenv
push
mov
sub
(bad)
retf
mov
dec
mov
loopne
adc
pop
and
mov
shl
cmps
repnz
and
retf
jne
loope
xor
(bad)
dec
data16
mov
cmp
fwait
sahf
xchg
jecxz
ja
pop
sbb
jo
xor
data16
xchg
fld
aam
mov
(bad)
stc
rcl
pop
dec
dec
pop
mov
(bad)
mov
call
rol
pusha
lods
out
out
call
jmp
jo
add
sbb
stos
js
ret
mov
jp
pop
dec
push
cmc
nop
dec
mov
adc
and
xor
test
js
(bad)
leave
mov
pop
lahf
xor
cmp
pop
mov
dec
sub
dec
inc
neg
jae
pop
(bad)
xchg
jb
sub
add
add
int3
pop
ins
aad
dec
add
mov
sbb
leave
jp
push
jl
popa
(bad)
push
pop
outs
ds
jns
push
pushf
mov
xchg
pop
jl
push
dec
pop
pop
push
das
gs
in
mov
div
test
bound
outs
lods
popa
aad
mov
add
(bad)
fcomp
xchg
ss
ror
ins
out
pusha
jecxz
jno
xchg
lods
xchg
fistp
repnz
jl
lods
sub
jns
pop
dec
lea
imul
or
ret
dec
call
stc
jmp
lods
dec
out
sti
adc
scas
fild
xor
loope
test
in
or
cmps
(bad)
in
and
cdq
jl
xchg
test
sub
add
push
inc
mov
cmp
sbb
add
push
rcr
ja
or
cmp
xchg
js
daa
mov
scas
rol
aaa
cmc
in
out
pop
pop
fldcw
(bad)
scas
fcmovb
mov
out
clc
fwait
push
data16
pusha
mov
retf
outs
jno
les
mov
mov
dec
repnz
mov
mov
pop
jge
xchg
and
test
adc
mov
xchg
stos
sbb
mov
pop
dec
pop
(bad)
jae
aas
popa
xchg
in
add
jns
cmp
mov
dec
mov
jmp
push
mov
adc
cmp
dec
xor
dec
test
mov
cmc
jnp
and
lods
or
xor
xchg
(bad)
aam
lods
jle
dec
loop
ins
clc
sub
rol
jecxz
inc
pop
pop
cmp
add
xchg
jge
stos
int
movntps
cmp
arpl
and
mov
loopne
retf
jle
mov
add
call
sbb
in
hlt
add
pop
or
add
sub
das
popa
fs
mov
push
stc
dec
or
mov
inc
dec
push
mov
mov
sub
shl
outs
and
jl
scas
mov
inc
mov
xor
xor
pop
mov
icebp
mov
xchg
stos
fsub
test
mov
fwait
mov
data16
int3
xchg
stc
add
(bad)
pusha
and
call
pop
scas
or
sub
fimul
clc
jno
bound
bound
inc
push
mov
pop
idiv
test
sub
mov
add
stos
dec
cmp
pop
ret
mov
shr
sub
(bad)
aas
inc
ret
pusha
mov
xchg
jno
sbb
push
cmc
xor
(bad)
iret
sub
or
(bad)
cmp
test
les
xor
mov
xchg
cmp
push
out
ds
(bad)
dec
nop
call
mov
pop
adc
mov
addr16
mov
jne
cmps
out
xchg
mov
nop
xchg
and
call
pop
std
in
and
cmp
adc
mul
add
xchg
cs
inc
fisub
jg
cmp
mov
test
mov
xchg
and
sbb
dec
shr
inc
aad
push
lock
pop
stos
xor
fwait
jge
push
(bad)
mov
and
mov
push
mov
ins
sahf
adc
xchg
or
js
sbb
add
inc
sahf
retf
sub
(bad)
das
scas
fcom
(bad)
mov
nop
adc
push
pop
pop
inc
jmp
sub
xlat
popf
mov
ins
and
push
rcr
push
(bad)
popf
dec
xchg
bound
jmp
dec
jbe
ret
jmp
adc
loopne
ror
mov
lods
test
mov
leave
xor
push
sahf
cs
xor
mov
test
mov
call
repz
aad
cmp
push
arpl
sub
nop
push
fdivr
xchg
in
ficomp
pop
mov
dec
and
mov
cmp
je
test
mov
cmc
inc
jmp
xchg
sti
(bad)
dec
dec
aam
or
sbb
push
sbb
jl
mov
imul
pushf
push
push
mov
sahf
inc
pop
ficomp
xor
adc
add
movs
stos
stos
repz
mov
mov
clc
imul
jge
or
fcmovu
out
gs
mov
pop
std
gs
and
scas
push
mov
ja
(bad)
pop
movs
(bad)
cmp
(bad)
scas
cli
leave
ins
outs
or
mov
jp
add
jo
sub
sub
in
and
ror
movs
gs
add
loopne
cmp
sbb
loope
test
(bad)
jge
push
mov
in
nop
rol
push
(bad)
lods
mov
fisttp
(bad)
imul
pop
lock
cmps
test
add
popf
mov
das
pushf
or
aam
sahf
push
jg
jmp
cdq
pop
sub
nop
push
and
lahf
fld
cmp
jb
inc
mov
(bad)
ja
shl
and
pop
or
cmp
shr
xlat
push
mov
lds
mov
rcl
enter
or
sub
dec
add
adc
jmp
popa
xor
je
out
jne
or
retf
fist
mov
xor
in
pop
outs
in
dec
xchg
or
jle
jecxz
pop
(bad)
fwait
in
aas
and
dec
cmp
cld
pop
mov
lea
enter
aam
out
call
int3
add
or
xchg
and
std
stos
adc
int
imul
xor
call
add
retf
sti
ins
inc
jnp
cmp
fs
xor
xchg
xlat
adc
dec
mov
xchg
cdq
push
iret
jo
jg
stos
cmp
push
jl
divps
mov
in
ins
xor
ins
xchg
mov
jge
jb
fdivr
mov
xor
dec
push
pop
nop
dec
or
jl
aas
xchg
retf
out
push
gs
xchg
push
scas
and
jmp
inc
xor
push
adc
jb
lock
test
loop
push
pop
pop
(bad)
aam
out
scas
in
movs
mov
hlt
adc
mov
sbb
jbe
es
and
cs
sar
aas
xchg
jp
adc
cmc
in
mov
push
test
vpcmpeqw
adc
ins
cmp
sub
add
stos
adc
jecxz
cmc
mov
dec
mov
mov
xchg
sbb
aas
jbe
and
inc
ds
sub
sub
out
mov
out
jmp
adc
call
hlt
mov
lock
in
xchg
addr16
fnstsw
dec
mov
test
clts
shr
mov
fidiv
mov
mov
mov
pop
cmp
imul
mov
lods
fs
xchg
jb
xor
mov
pop
mov
jae
ret
lea
cmp
test
(bad)
out
pop
and
mov
or
repz
adc
mul
mov
mov
inc
sbb
push
inc
xor
shl
adc
mov
push
stc
inc
push
mov
dec
xchg
inc
mov
push
adc
mov
fistp
sub
cmps
jnp
inc
pop
cmp
mov
inc
pop
mov
or
sahf
mov
xor
(bad)
jo
adc
movs
lods
mov
outs
and
(bad)
and
or
shr
sbb
or
mov
inc
dec
pop
fstp
test
xchg
repz
sbb
pop
sub
xor
retf
icebp
xor
pushf
ffreep
jno
mov
je
aaa
jecxz
cdq
jl
push
xchg
push
pushf
push
sahf
cs
push
nop
inc
pop
movs
and
sbb
xchg
pop
jbe
mov
cmc
adc
rol
xor
add
das
cld
inc
sbb
lahf
movs
adc
test
jg
inc
cmp
das
sub
dec
into
dec
retf
loopne
aas
and
daa
push
sar
stc
fcmovnb
sub
rcl
sub
je
xchg
dec
sar
adc
test
out
pop
cmp
into
lahf
jmp
out
jg
xor
and
adc
cmp
in
cs
mov
je
(bad)
popa
scas
sbb
push
ret
sbb
jge
dec
and
dec
pushf
add
lods
mov
fcompp
in
fs
dec
scas
or
ret
lds
repnz
fstp
push
jns
movs
fs
add
leave
adc
and
ja
push
call
add
nop
push
inc
or
fimul
es
pop
imul
std
pop
(bad)
dec
retf
xchg
jb
ret
jmp
mov
scas
inc
add
repnz
test
sub
aam
sbb
push
cs
leave
push
fcomp
outs
popf
stc
jle
(bad)
dec
mov
add
inc
sub
xchg
dec
push
test
pop
push
lods
les
or
fild
repz
push
nop
gs
or
push
lods
int3
or
jmp
loop
mov
sahf
pop
stos
cmps
pop
cmp
and
test
or
ror
out
jne
or
jmp
dec
test
lods
push
add
and
sub
lea
sti
inc
mov
jecxz
cmps
mov
jb
mov
jecxz
stos
jne
mov
(bad)
adc
gs
xchg
hlt
jl
and
clc
test
fild
push
push
mov
std
push
mov
int3
and
add
adc
fiadd
push
add
add
push
push
mov
mov
adc
lahf
inc
daa
xchg
lahf
mov
ss
(bad)
(bad)
cmp
mov
xchg
ds
not
std
dec
movs
push
pop
push
add
cwde
cmp
cmp
pop
shr
cld
sub
call
xor
sbb
std
inc
pop
push
mov
and
jnp
hlt
mov
pop
stos
sub
push
stos
mov
cwde
dec
repz
xor
or
xchg
cli
loop
rcl
dec
push
cld
mov
inc
mov
jne
lock
aam
push
inc
shr
in
jns
lock
iret
ret
add
add
xchg
sbb
sbb
mov
(bad)
push
jge
sub
retf
xchg
repz
mov
div
ds
mov
(bad)
adc
inc
sbb
push
imul
out
in
ret
lds
push
pop
dec
mov
inc
dec
mov
mov
mov
test
sbb
and
and
cdq
cmp
inc
mov
adc
and
mov
cmp
stc
and
mul
daa
je
dec
test
cmp
xchg
or
pop
and
mov
fnstenv
movs
outs
in
mov
fisubr
mov
mov
push
fucomp
push
retf
sub
add
(bad)
mov
(bad)
inc
lahf
push
pushw
pop
jns
call
sub
call
pushf
int3
xor
cmp
jle
movs
xchg
sub
dec
push
fs
sbb
add
pop
pop
add
pop
stos
dec
jg
add
or
(bad)
pop
sbb
mov
xchg
mov
sub
or
sbb
(bad)
pushf
lahf
push
data16
xor
mov
sub
xor
add
(bad)
ss
jmp
fisub
push
push
jp
aam
sub
xchg
push
stc
jmp
lock
and
adc
xchg
addr16
cmp
aaa
hlt
lods
mov
dec
in
sbb
mov
xor
imul
dec
aas
aad
fdiv
loopne
dec
or
fbstp
add
or
sbb
dec
hlt
dec
pop
mov
popf
jp
or
out
fist
xor
aaa
adc
inc
out
and
or
cmp
jns
scas
sbb
jns
mov
rcl
mov
out
ficom
shr
enter
movs
aaa
inc
arpl
pop
cli
inc
arpl
xor
loop
aad
out
test
xor
out
dec
loopne
fld
ins
and
pop
inc
xchg
popf
mov
xchg
jno
fimul
or
int3
je
mov
fisubr
xchg
xchg
repnz
mov
repz
mov
xor
idiv
lock
xchg
pop
enter
and
movs
int
sub
xchg
and
and
movs
add
aaa
inc
sbb
sub
mov
stos
stos
mov
idiv
stos
mov
fdiv
(bad)
imul
arpl
inc
into
dec
test
ret
mov
test
or
jo
push
repz
cmovae
mov
sbb
jecxz
rcr
and
mov
adc
icebp
jae
push
xchg
mov
dec
push
sahf
popa
(bad)
pusha
nop
sub
test
adc
xor
(bad)
fwait
inc
or
ret
(bad)
mov
mov
xor
int3
jnp
leave
push
fisubr
lock
adc
cmp
adc
xchg
pop
dec
out
mov
or
mov
adc
xlat
sub
add
mov
jne
pop
out
ret
dec
repz
stc
(bad)
aam
rcr
adc
out
dec
cmp
inc
mov
test
iret
sub
inc
push
inc
sub
fsubr
mov
(bad)
je
sbb
nop
outs
lods
aaa
pusha
mov
adc
mov
or
add
jns
sti
xor
icebp
jmp
sbb
sub
push
hlt
hlt
add
rcl
cmc
jl
mov
jno
repz
ins
fidivr
test
loope
jo
ret
test
in
lods
repz
fwait
cwde
xor
mov
iret
arpl
xchg
sub
ins
outs
mov
cmp
aad
pop
dec
js
sahf
push
xor
cmp
sub
pop
jge
cmp
mov
jns
xor
(bad)
addr16
mov
fwait
mov
sbb
xor
rcl
jae
xchg
mov
leave
outs
stos
enter
or
je
fwait
dec
xchg
fcomip
sbb
adc
jg
adc
adc
repz
pop
cmp
loope
pop
add
vpshab
pop
sbb
dec
sub
popa
lock
xlat
rol
int
stos
push
mov
mov
scas
add
dec
mov
sbb
mov
ja
xor
sub
dec
and
sbb
jl
jle
repz
xor
pop
jp
stos
push
cmp
jmp
sbb
call
je
pop
or
inc
mov
cmp
cmps
data16
arpl
dec
or
push
fs
out
sahf
and
dec
psubusb
loope
xchg
push
jl
mov
jo
or
rcl
adc
call
jmp
push
enter
ins
dec
push
cmp
pop
inc
inc
cmps
jmp
mov
fwait
add
push
push
inc
aad
(bad)
push
jmp
sub
cmps
jge
loope
xchg
retf
cmp
lods
test
sub
arpl
sahf
cwde
fidiv
rol
movs
add
(bad)
jle
fisttp
in
test
mov
stos
cmp
mov
cmps
mov
cmp
add
jmp
mov
xor
pusha
out
repnz
jmp
loope
dec
mov
jne
and
fisttp
mov
and
dec
fidivr
dec
shl
jge
mov
adc
inc
xor
inc
jge
rcl
(bad)
xchg
stos
push
xchg
add
push
push
ins
popa
stos
jno
sbb
cmps
cdq
mov
fwait
cmps
pop
dec
or
xchg
fsubr
push
jl
mov
daa
rcl
xchg
lds
and
mov
jmp
xchg
es
add
push
test
es
lahf
xchg
dec
loope
pop
mov
gs
imul
cdq
nop
cmp
mov
mov
sbb
push
pop
bswap
ins
or
ins
inc
dec
cmps
loopne
loopne
fs
mov
test
xchg
jne
inc
stos
push
imul
cmp
dec
loopne
in
popa
aad
xchg
mov
lea
pop
sbb
dec
cmc
inc
mov
adc
loope
dec
mov
test
jl
aas
cmc
mov
or
mov
dec
es
sbb
and
aam
out
and
push
or
xlat
mov
add
out
popa
mov
mov
push
mov
sar
xchg
cwde
sti
jle
ss
call
daa
cmp
sub
push
xchg
into
cmc
xchg
adc
int
in
xchg
pop
ds
repnz
in
bound
(bad)
sbb
dec
retf
pop
stos
test
pop
sub
jl
and
shr
call
cmp
lahf
and
int3
and
mov
sbb
leave
cmp
in
cmp
pop
dec
loopne
icebp
out
dec
rcl
jbe
mov
hlt
loope
loopne
add
sbb
push
xlat
sbb
and
jmp
mov
fwait
adc
or
pop
inc
mov
xor
xchg
pop
fcmovbe
loope
pop
movs
sti
add
push
mov
loopne
inc
nop
jo
movs
pop
test
(bad)
jns
sbb
jmp
in
sbb
in
mov
hlt
imul
out
push
test
mov
jp
mov
cmp
xchg
push
mov
cmps
cmp
test
mov
pop
out
clc
outs
mov
inc
lock
cmp
gs
ret
lock
div
dec
retf
mov
fmul
in
fild
enter
das
popf
sbb
mov
xchg
inc
retf
push
repz
test
fcom
dec
sbb
(bad)
pop
sahf
mov
ret
(bad)
jae
pop
adc
jmp
out
(bad)
or
xchg
es
adc
add
loope
inc
loop
(bad)
push
sub
test
mov
jns
pop
mov
fcmovnbe
and
pop
stos
ja
shl
add
rcr
clc
push
inc
mov
jmp
stos
std
pop
and
hlt
popf
sub
cmp
cmp
repz
in
icebp
sahf
mov
mov
pop
ficom
xchg
in
jmp
sbb
scas
sub
outs
push
stos
jmp
fistp
push
cmps
sti
cmp
adc
std
inc
int3
outs
and
cmp
loope
mov
ret
out
icebp
mov
mov
(bad)
jmp
mov
and
mov
or
mov
mov
loope
xchg
mov
loop
js
daa
or
into
cld
dec
(bad)
sahf
cmps
pop
je
int
sbb
mov
stos
ds
popa
add
cmp
test
or
fstp
test
mov
push
mov
push
arpl
cmp
imul
and
xor
xor
sahf
popa
int
lods
mov
shl
int3
dec
ret
mov
fnstsw
pop
(bad)
xor
jle
mov
loop
jae
rol
ret
add
cmp
mov
xor
call
test
push
sbb
jo
push
xor
in
data16
jno
xchg
hlt
inc
push
inc
jecxz
jnp
dec
push
ror
mov
andnps
and
adc
sub
mov
fistp
popa
dec
mov
xchg
add
adc
cli
outs
pop
or
rcr
outs
in
mov
lods
xor
push
sub
sbb
dec
rol
std
mul
jl
sub
and
in
mov
jle
and
pop
pop
pop
into
dec
rcl
dec
cld
sub
stc
pop
outs
scas
mov
adc
(bad)
fidiv
mov
mov
mov
fs
dec
jae
mov
adc
xchg
mov
rol
popf
test
sbb
pusha
movs
test
retf
shl
mov
or
and
xor
das
xor
idiv
ror
mov
jne
call
push
cdq
sti
mov
ror
inc
jns
sbb
and
gs
out
sub
lds
sbb
(bad)
jmp
add
cmp
sub
sbb
sub
in
pop
push
pop
xor
or
mov
xor
cmovge
fldcw
jae
jge
fcomp
sub
mov
(bad)
xor
or
cmps
fnstenv
mov
xchg
pop
cmp
ja
enter
leave
mov
or
inc
fst
loopne
fmul
xchg
add
mov
sbb
push
or
sub
out
inc
data16
int
hlt
adc
mov
mov
cmp
aaa
cwde
xchg
jmp
bound
call
sbb
aad
mov
mov
pop
or
inc
adc
mov
push
inc
ret
cmp
or
repz
test
dec
loopne
(bad)
scas
mov
iret
or
loope
jecxz
push
popf
push
popf
mov
popf
cmps
pmaxsw
retf
xor
cmp
mov
cld
pop
loopne
xor
pusha
xchg
cdq
jae
in
adc
inc
stc
jo
aas
inc
inc
hlt
int
dec
movs
adc
mov
adc
jg
adc
test
in
xchg
pusha
xchg
ret
inc
ret
pop
jnp
adc
dec
dec
outs
push
gs
push
pop
sub
iret
jne
dec
movs
or
ret
mov
sbb
mov
and
adc
jl
stos
and
jmp
out
cdq
push
div
adc
into
or
rol
push
add
jl
pop
les
mov
ret
mov
xor
xchg
retf
pushf
push
sub
mov
mov
or
cdq
jle
fcmovu
ja
test
xchg
cmps
jg
push
xor
ret
push
inc
or
ins
mov
popa
icebp
les
test
xchg
mov
pop
push
int
ret
inc
lods
or
sub
(bad)
outs
or
loope
(bad)
es
lods
leave
add
scas
mov
lods
gs
and
pop
xchg
arpl
adc
test
test
sub
sub
icebp
mov
mov
xor
gs
sbb
push
adc
ss
push
icebp
idiv
jp
adc
xlat
fbld
ret
dec
mov
das
cmp
push
(bad)
push
push
stos
(bad)
jno
jl
xchg
push
mov
xor
pop
cmp
aas
mov
test
cld
cmp
shl
pop
xchg
pop
and
mov
gs
sbb
and
mov
jg
pop
idiv
mov
sti
mov
loop
sub
cmp
and
inc
and
les
mov
aaa
and
mov
jle
fmul
ret
fst
cdq
inc
clc
out
mov
test
sbb
sub
jnp
imul
fidiv
lea
leave
cwde
mov
(bad)
jp
scas
pusha
mov
jl
fst
ss
add
bound
inc
sbb
push
dec
jne
fist
ret
push
mov
push
push
call
imul
dec
cmp
(bad)
and
add
mov
sub
mov
sbb
mov
jge
mov
pop
mov
jmp
test
iret
inc
push
icebp
shl
ja
aaa
cwde
and
add
nop
mov
cmp
pop
sbb
cmp
jmp
cwde
pop
loopne
jl
bound
aad
sub
pop
shl
in
or
push
and
adc
push
cs
pop
int
and
sub
pop
xor
shl
mov
cdq
das
cs
mov
les
ret
mov
jecxz
call
pushf
pop
mov
sub
lods
mov
push
and
out
add
sbb
cdq
cli
sbb
pushf
push
fwait
leave
ja
inc
lahf
xor
fld
mov
arpl
sub
hlt
cmps
pop
movs
ins
and
leave
iret
sbb
jmp
or
or
xchg
inc
ror
push
gs
jp
in
xchg
hlt
fs
adc
jns
fbstp
movs
es
sbb
jl
inc
cmp
in
std
mov
cld
sub
pop
xor
pop
push
daa
movs
(bad)
in
jne
pusha
pavgb
mov
xor
jbe
pusha
push
pop
lds
xor
xor
icebp
popa
xor
imul
add
adc
repnz
or
lock
add
fst
in
nop
cmps
sbb
add
(bad)
lds
retf
cmp
jmp
sbb
pop
sbb
jl
jbe
bound
int
xchg
add
push
mov
out
push
mov
lds
daa
idiv
or
or
pusha
je
sub
test
aad
shl
in
mov
add
mov
inc
in
imul
mov
call
add
inc
fnsave
mov
pop
push
xor
pop
test
push
int
mov
out
mov
xlat
call
loope
adc
jle
jmp
cdq
(bad)
mov
int3
pop
test
retf
mov
addr16
js
or
mov
stc
lahf
repnz
cmp
icebp
pop
div
sbb
imul
mov
test
loopne
mov
lahf
loop
and
(bad)
movs
mov
inc
mov
inc
ins
pop
dec
xchg
or
dec
retf
hlt
fstp
cmp
dec
xchg
add
pushf
add
mov
sbb
call
mov
jl
push
int3
stos
dec
pop
imul
jae
test
xor
adc
xor
js
retf
movs
lods
lods
sub
sbb
or
sbb
jmp
aas
into
or
imul
adc
pop
hlt
loop
sub
cs
sbb
shl
out
bound
adc
repnz
sbb
jle
faddp
ja
mov
jno
sub
pop
add
and
and
adc
or
and
adc
push
lds
adc
inc
nop
jg
and
push
or
jnp
gs
nop
cmps
sub
movs
pop
out
mov
out
repz
inc
ja
dec
cmc
arpl
lea
cld
dec
inc
sbb
int
sbb
jle
adc
sub
fnsave
sbb
(bad)
dec
mov
xchg
icebp
mov
cmp
xlat
fs
pop
jno
push
aas
dec
fnstcw
or
push
lods
out
outs
cmp
jmp
jg
dec
xchg
xchg
fistp
popf
scas
pop
call
scas
xchg
aam
int
aam
test
sahf
inc
xorps
xchg
push
movs
xor
test
in
xchg
iret
neg
inc
add
pushf
rcl
push
and
sbb
iret
xor
adc
and
or
mov
call
lock
stc
adc
mov
add
lock
inc
add
es
loope
addr16
lahf
repz
xor
iret
out
call
lods
push
sub
inc
inc
jns
es
loopne
pop
mov
xchg
add
mov
xor
or
cmp
loopne
sbb
retf
push
int3
mov
push
outs
imul
aaa
pop
aaa
dec
fsub
fisttp
cmp
pop
fsub
(bad)
and
pushf
scas
jno
leave
pushf
imul
jge
jle
and
fld
cdq
xchg
push
mov
ds
dec
dec
fild
stos
ds
jno
xchg
imul
xor
push
push
stc
mov
ret
cwde
in
sub
out
adc
or
retf
int
sub
dec
xor
add
and
cwde
test
outs
movs
fild
cmp
sbb
neg
ror
dec
lods
cmps
addr16
aaa
lds
inc
clc
rcl
sub
outs
inc
xor
sbb
cmp
fiadd
cmps
and
cmp
inc
sub
imul
icebp
stc
sti
jmp
xlat
push
leave
in
xchg
nop
jge
add
cs
jp
ins
cld
lahf
repz
dec
fsubr
lods
outs
es
scas
push
adc
pop
push
jp
fdiv
lock
shl
cli
stc
jp
sti
jle
jnp
jle
gs
xchg
imul
cwde
aam
inc
bswap
pop
mov
shl
add
cs
pop
shl
pcmpeqb
dec
pushf
inc
and
inc
mov
adc
and
inc
call
or
not
out
jo
or
mov
jo
fbstp
sti
fs
movs
cmp
ret
imul
lods
and
int
pop
sbb
ss
cmps
lahf
xor
(bad)
imul
mov
inc
test
sbb
lock
stc
dec
jnp
jge
movs
mov
retf
dec
jp
stc
retf
xor
inc
dec
inc
mov
xchg
in
js
gs
leave
push
mov
push
push
push
ins
stos
mov
mov
push
sub
adc
dec
xchg
cmp
inc
faddp
or
inc
mov
and
test
add
fbstp
mov
clc
sub
jnp
cmp
or
mov
pop
inc
and
jmp
push
into
xrelease
add
ins
repz
pop
add
and
adc
popf
test
xor
mov
out
ins
sar
test
jecxz
adc
inc
pusha
xchg
mov
rcr
hlt
or
enter
out
ja
fild
push
repz
or
or
cmp
sub
ret
out
mov
lock
rol
in
retf
popa
inc
mov
push
pop
add
jle
popa
or
cwde
pop
cli
scas
mov
sub
xchg
pop
jg
jmp
retf
mov
jbe
loopne
in
and
push
daa
in
xor
dec
test
jne
(bad)
mov
push
add
mov
pusha
push
inc
data16
jno
pop
inc
out
dec
pop
pusha
bnd
xor
mov
sti
aad
mov
adc
jl
and
cmps
jne
adc
push
call
xor
xchg
and
or
aas
mov
cmps
cdq
dec
lock
mov
and
cmp
ror
shl
add
xor
movs
xlat
int
jg
in
pop
or
jne
dec
pop
pop
xor
jecxz
push
xor
mov
mov
stos
fldcw
cwde
xchg
lahf
aaa
ins
mov
ror
stc
jb
pop
loop
fld
sub
rcl
nop
int3
sub
dec
neg
add
or
push
test
jp
xchg
pop
in
sti
test
repnz
aad
cmp
shr
pop
cmp
adc
jmp
sub
shl
cli
scas
sti
add
frstor
and
xchg
xchg
sub
dec
lahf
pop
aad
mul
fcomp
sbb
xchg
(bad)
adc
inc
add
adc
mov
shl
mov
lods
cmps
mov
dec
test
fwait
sar
mov
or
and
int
scas
adc
clc
mov
out
jecxz
lods
neg
shl
leave
cmps
cmp
push
ficomp
push
jae
stos
sbb
add
ret
or
adc
sub
xor
xchg
(bad)
push
loope
loop
xchg
push
cmp
xor
(bad)
mov
dec
bound
xchg
test
sub
ds
rcl
arpl
sbb
jns
and
xor
iret
push
fdivr
or
(bad)
adc
mov
pushf
cmps
outs
or
leave
inc
xor
jecxz
jle
sub
ds
gs
(bad)
or
sbb
into
dec
add
cmp
ja
push
jb
xchg
or
or
aad
mov
sbb
sub
pusha
jecxz
pop
and
test
test
mov
lods
pop
int3
sub
popf
add
sar
sar
dec
cwde
pushf
int3
and
aad
bound
hlt
xchg
jne
mov
and
out
movs
mov
mov
fist
or
pop
sub
mov
sbb
jno
sbb
inc
jo
push
mov
fld
ficomp
xor
adc
out
sbb
push
cmp
mov
xchg
cld
out
(bad)
mov
into
mov
push
dec
pop
adc
fs
adc
in
mov
xor
add
pop
pop
pop
and
cmp
fidivr
clc
(bad)
in
or
adc
push
or
xor
test
scas
in
cmc
sbb
das
lock
lea
mov
xor
mov
jb
mov
fild
cmp
cdq
xrelease
(bad)
loopne
dec
je
int
push
int3
(bad)
jge
sub
xor
push
push
jo
cmc
mov
imul
pop
fld
mov
test
pop
cwde
mov
pop
clc
loopne
gs
cld
pop
jmp
mov
retf
rcl
or
call
push
sahf
test
(bad)
pop
adc
push
pop
add
or
push
jecxz
loop
(bad)
movs
cwde
mov
dec
repnz
and
das
cs
int
out
and
jge
ror
clc
lods
or
stos
jbe
icebp
dec
mov
popa
mov
adc
push
aas
sbb
jg
sti
nop
jns
lds
and
push
popf
inc
(bad)
xchg
(bad)
jnp
std
gs
pop
push
es
sub
div
xor
mov
jae
push
int3
jge
fiadd
pop
and
xor
std
int
daa
sbb
mov
loope
mov
cli
mov
adc
je
inc
clc
sbb
fwait
sub
mov
adc
jg
cmp
cmp
ret
jmp
inc
dec
xchg
pop
jl
adc
jo
adc
scas
add
sbb
adc
push
mov
cmp
inc
pop
out
fsubr
add
pop
mov
mov
(bad)
and
and
cmps
jecxz
or
cmc
stc
jmp
loopne
ss
cmp
hlt
lods
test
xchg
loop
pop
out
aad
leave
mov
pop
sub
add
push
jmp
jbe
xchg
mov
dec
(bad)
jne
or
cmc
int
es
cmps
jge
in
jl
in
stos
stos
dec
adc
pop
xor
(bad)
ja
gs
jns
cmps
or
out
retf
gs
mov
pop
je
cs
mov
cld
pusha
sub
int3
xor
add
pop
mov
addr16
jns
pop
sbb
mov
and
mov
xlat
lock
in
inc
mov
xchg
push
push
js
add
mov
or
sub
lods
or
fistp
inc
ret
shl
cmp
or
sbb
or
cli
push
mov
pushf
jmp
into
jl
pop
sub
arpl
das
cmp
iret
pop
nop
jae
and
out
mov
in
adc
xchg
rol
repz
dec
dec
ror
int
mov
leave
jnp
xchg
mov
sbb
jns
push
xchg
out
lea
ds
dec
(bad)
cmp
out
shl
mov
mov
pop
fild
pop
mov
sahf
ret
mov
fs
rol
sti
pusha
stos
cs
aad
cmps
or
sbb
adc
stos
jnp
imul
jl
fdiv
cmp
bound
sub
in
lock
or
in
int
stos
fadd
aam
in
cdq
push
mov
ins
inc
inc
sub
call
ficom
dec
rcl
out
jb
call
jnp
sub
xor
mov
sti
pop
cmp
ins
jmp
lock
pop
sub
fimul
arpl
xchg
iret
movs
rol
mov
mov
js
adc
jge
in
loopne
inc
push
movs
mov
in
ins
(bad)
(bad)
jo
inc
jno
pop
or
push
ss
or
loop
mov
(bad)
ficomp
xor
mov
aad
sbb
stc
or
ret
je
sub
fimul
arpl
or
xchg
xchg
ror
push
test
jg
cmp
fild
popf
push
mov
pop
rcr
sbb
add
sub
es
sub
inc
xchg
inc
mov
push
sub
fsubr
hlt
repnz
js
cmp
sub
int
(bad)
mov
xchg
popf
(bad)
aas
(bad)
ret
leave
out
xlat
lds
and
icebp
neg
add
loope
mov
test
mov
mov
enter
push
xchg
sub
jg
jl
mov
or
mov
pusha
jecxz
xor
adc
hlt
inc
inc
es
adc
add
imul
xor
mov
push
int3
aad
ror
pop
fldenv
mov
mov
and
popa
jo
sbb
outs
or
cmps
xchg
sub
mov
popa
dec
pop
jns
(bad)
push
sub
dec
or
mov
pop
clc
mov
in
mov
dec
fsub
pop
jecxz
loop
pop
(bad)
inc
(bad)
retf
iret
icebp
lods
jae
jg
sbb
mov
stos
xchg
inc
or
ins
xchg
cmp
and
mov
int
imul
xchg
das
xchg
(bad)
jp
dec
rol
shr
pop
(bad)
rcl
adc
retf
shr
out
push
sahf
lods
pop
ret
cmp
lods
mov
pop
or
ret
dec
jns
dec
jno
mov
inc
cmp
adc
fidivr
out
inc
push
test
lods
fild
test
bound
fadd
mov
push
mov
jnp
fs
and
pop
or
ds
xchg
dec
xchg
imul
cdq
adc
ret
retf
dec
mov
sbb
les
push
or
xor
inc
cmc
and
(bad)
in
in
loopne
jmp
mov
shr
push
fistp
test
xchg
sub
fwait
sbb
mov
in
test
xchg
retf
aam
jnp
fild
iret
mov
outs
cli
dec
xor
lds
push
jns
or
arpl
int
into
mov
cli
stos
cmp
cwde
or
call
out
xchg
xlat
scas
adc
xchg
pop
push
pusha
gs
pop
adc
test
and
scas
jbe
adc
(bad)
retf
movs
daa
int3
mov
mov
jbe
mov
push
jno
mov
aam
sbb
les
ret
push
call
add
fwait
inc
loop
push
and
fincstp
push
scas
test
test
add
jmp
sub
je
push
mov
xchg
jo
fwait
outs
cld
mov
cmovge
js
dec
imul
sbb
inc
inc
dec
sbb
adc
shl
and
sbb
popa
dec
mov
(bad)
xor
fidiv
dec
cwde
pop
and
nop
adc
outs
adc
aad
xchg
or
outs
fst
jg
inc
push
push
in
mov
js
rcl
or
xchg
lods
push
mov
scas
retf
lods
dec
jae
dec
push
call
cmc
adc
jbe
icebp
jb
push
lds
adc
push
jle
add
mov
in
mov
dec
inc
pop
cmp
or
push
icebp
jb
push
jmp
dec
xchg
mov
dec
clc
pop
rol
mov
dec
sub
repnz
adc
nop
imul
stos
dec
sbb
retf
test
dec
fistp
mov
scas
in
fmul
push
sbb
xchg
dec
test
adc
push
adc
add
mov
xor
js
pop
out
push
cmp
mov
adc
or
jnp
cmc
scas
call
gs
aas
add
fcomp
(bad)
clc
jmp
jns
sub
fmul
lea
(bad)
cmp
inc
in
xor
retf
dec
mov
pop
ficomp
das
mov
out
adc
loope
push
push
hlt
mov
push
mov
inc
pop
xchg
pop
mov
mov
jmp
jns
pop
adc
adc
pop
into
imul
daa
mov
sub
jmp
or
ret
cmps
ret
xchg
repz
icebp
call
mov
mov
adc
sub
pop
push
cmps
ds
sbb
mov
mov
aas
movs
mov
mov
mov
inc
std
xchg
addr16
adc
sub
mov
fisub
jbe
lods
push
or
add
add
pop
cs
cdq
cmp
mov
mov
inc
sub
ja
imul
push
lods
inc
pop
outs
(bad)
jb
push
fmul
fwait
inc
pop
jl
enter
adc
or
push
ret
pusha
dec
pop
mov
sar
push
imul
repnz
sbb
jb
add
inc
or
out
lock
xchg
pop
movs
xchg
push
cmp
lea
cmp
imul
retf
dec
or
jbe
jbe
movs
movs
mov
sti
add
push
jp
and
mov
fld
mov
cld
and
rol
jnp
cdq
js
cwde
dec
dec
sti
fs
mov
sub
hlt
mov
sub
cmpxchg
or
lahf
out
shl
xor
dec
jbe
inc
or
dec
(bad)
sbb
out
out
adc
out
dec
cmp
hlt
or
push
push
retf
jmp
xchg
and
fwait
or
test
out
outs
repz
and
jg
xor
call
stos
dec
cmps
mov
(bad)
repnz
in
and
mov
and
mov
sbb
push
add
fidivr
pop
add
jbe
aas
mov
cs
pushf
cdq
jp
sub
jmp
cmp
add
out
sub
das
jmp
and
xor
inc
test
aaa
xor
xor
mov
pop
mov
xor
ds
arpl
xor
(bad)
ins
sahf
sub
xlat
pop
sar
mov
jl
outs
frstpm(287
cmp
push
lea
pushf
cmp
addr16
mov
mov
inc
xchg
mov
rdpmc
out
xchg
bound
lods
jb
adc
xchg
xor
inc
adc
mov
ror
repnz
jecxz
call
mov
mov
xrelease
les
mov
dec
jmp
out
pop
gs
jnp
lods
xchg
sub
icebp
push
dec
imul
xchg
pop
arpl
adc
jg
js
jmp
and
movs
push
imul
ds
ins
and
mov
mov
(bad)
xor
sbb
add
nop
dec
add
pop
xchg
push
ret
push
int3
fld
mov
adc
out
add
mov
cmp
add
sbb
adc
arpl
inc
sub
xchg
loop
loopne
push
jns
(bad)
jnp
xchg
repnz
inc
sahf
cmp
mov
mov
loop
stos
pusha
xor
ins
mov
cwde
movs
(bad)
jp
adc
cmp
(bad)
ins
fimul
and
mov
cwde
xor
add
enter
js
scas
pop
out
push
(bad)
add
sub
mov
mov
mov
xchg
scas
inc
xor
add
loop
nop
jg
int3
rcr
cmps
cmp
out
aam
fsubr
retf
xlat
fldenv
jne
dec
jo
pop
neg
mov
adc
lea
dec
sbb
sbb
fmul
je
into
cmp
mov
scas
jg
sub
dec
push
cmps
and
(bad)
ja
xor
sar
or
enter
cli
out
stos
sub
cmp
test
jbe
jae
add
cmps
sti
pop
pusha
mov
inc
add
jne
xor
cmp
sbb
jecxz
add
in
pop
icebp
lahf
adc
pop
jge
add
push
mov
outs
ins
movs
test
and
lods
in
mov
stc
xor
stc
retf
or
mov
popa
gs
ficom
loope
and
fidiv
stc
popa
(bad)
lods
in
outs
cmp
inc
nop
push
es
xchg
mov
ins
cmp
pop
ret
ss
sub
mov
aam
cli
les
mov
pop
rcl
cmp
fs
mov
mov
xor
cmp
and
mov
mov
lahf
in
sar
sbb
adc
out
inc
dec
and
jno
xor
jge
sub
cli
es
daa
pop
mov
xchg
cs
out
shl
in
sbb
mov
cmps
ret
lods
sub
pop
pop
xor
out
fstp
xchg
or
and
les
pop
aad
cmp
int
pop
push
pushf
jge
in
repnz
ds
jnp
movs
call
xchg
add
rol
popa
test
inc
ins
sti
das
dec
mov
cmp
mov
retf
pop
shr
and
fsub
jo
pop
in
xor
arpl
into
js
mov
loopne
test
mov
dec
pop
bound
cmp
pushf
call
push
push
and
and
imul
leave
retf
pop
aad
shr
fnstenv
add
sub
push
add
aad
pop
inc
mov
in
or
jmp
pop
pop
ror
xchg
aam
retf
mov
mov
push
mov
pop
sti
loopne
or
gs
push
dec
jg
loop
push
movs
pop
inc
and
xchg
fldenv
or
iret
sub
popa
cmp
sub
cld
data16
push
mov
out
int3
adc
test
xor
mov
push
ins
push
daa
jecxz
mov
daa
repnz
jns
leave
das
stos
jne
dec
jmp
loope
pusha
sub
dec
int
pop
dec
inc
aas
popa
in
xlat
mov
ror
je
pushf
inc
movs
movs
pop
dec
rol
fimul
cmp
cmp
push
or
jbe
jns
mov
sub
mov
add
(bad)
xor
sub
mov
sub
repz
sbb
data16
jl
dec
mov
call
lods
retf
pusha
jmp
cmp
push
adc
xor
push
int
sahf
jae
pop
dec
in
stc
fwait
int
xor
fild
cli
shl
(bad)
cmps
add
int3
aaa
xor
cwde
add
inc
mov
jbe
lods
loope
pop
imul
jne
aas
outs
test
dec
xor
mov
pop
mov
test
xor
int
sub
pop
repz
add
sbb
cwd
mov
mov
sbb
imul
data16
inc
or
repnz
push
ja
jmp
push
nop
popf
enterw
mov
imul
pop
fcom
ins
stos
sub
jecxz
pop
fst
push
and
neg
sahf
sub
div
mov
or
loope
(bad)
outs
sar
dec
unpcklps
fidivr
mov
cwde
clc
cmp
or
cmps
jmp
je
pop
mov
cmp
ret
out
mov
add
inc
js
in
sbb
es
test
dec
rcl
and
int3
std
repnz
test
xchg
cmp
xor
xor
xor
fst
xchg
stos
out
in
ds
out
or
repz
and
call
retf
leave
mov
iret
pop
jmp
icebp
xchg
xchg
sub
xchg
sub
add
dec
dec
inc
dec
cmp
jns
fdiv
mov
cmp
icebp
cdq
pop
mov
cs
cmp
je
sub
je
loope
test
aam
push
popf
push
pop
leave
into
ss
inc
push
mov
out
mov
push
outs
movs
add
adc
aas
or
pop
sti
and
xor
gs
sub
retf
dec
rol
adc
aad
shl
retf
fst
rcr
mov
mov
dec
clc
pop
and
sbb
cmp
push
jo
or
pop
mov
inc
frstor
jmp
xchg
out
xchg
outs
push
cmp
xor
out
lods
mov
jne
sahf
xchg
imul
fxch
add
sbb
xor
scas
xchg
inc
push
in
mov
inc
jmp
aaa
push
popf
sbb
dec
lods
je
test
mov
add
mov
xchg
cmps
das
movs
xchg
js
mov
arpl
adc
add
mov
into
cs
fistp
cmps
ss
sub
sbb
pop
mov
push
sub
or
dec
loope
inc
icebp
and
int3
pop
cmps
aas
sub
ds
dec
sub
(bad)
fcomp
test
inc
imul
ja
sub
and
sub
(bad)
xor
js
sbb
fistp
mov
outs
dec
dec
scas
and
cmps
xchg
adc
pop
in
mov
mov
(bad)
cmp
push
sbb
fstsw
cmp
(bad)
(bad)
xchg
or
loop
out
xlat
icebp
scas
push
or
(bad)
cmp
add
sub
adc
cmp
push
cmp
leave
fisubr
cmp
jmp
mov
in
mov
stc
out
mov
fsub
and
jle
push
scas
jne
sub
adc
enter
xchg
sbb
outs
daa
mov
ins
xchg
stc
xchg
stc
(bad)
fs
retf
(bad)
pushf
jle
inc
push
pop
(bad)
cmp
ffreep
stos
dec
fs
loope
push
int3
add
inc
int3
jmp
jae
push
sahf
loopne
jnp
or
fwait
dec
mov
es
fist
sub
mov
sub
imul
mov
lahf
sbb
out
fcomp
mov
pusha
xchg
push
data16
scas
mov
leave
iret
daa
aad
inc
daa
push
sbb
xchg
mov
xlat
ss
fwait
int
js
adc
inc
or
dec
retf
push
mov
add
sahf
stos
fwait
cli
cmps
xchg
mov
mov
into
movs
int3
adc
sub
fs
jg
xor
out
or
cmps
jmp
cmp
fs
dec
jnp
aad
jno
xor
in
jns
fcmovnbe
ficomp
stos
jns
xchg
test
push
pop
dec
cs
(bad)
adc
xor
rcl
mov
shl
xchg
and
(bad)
or
jo
xlat
push
jl
data16
or
outs
repz
dec
pop
popa
mov
in
je
or
sti
sub
bnd
sub
jg
jne
mov
stos
push
enter
out
or
int3
out
mov
jns
lods
pop
fsub
fwait
(bad)
add
aad
and
mov
add
mov
daa
stos
or
mov
xchg
call
inc
inc
(bad)
xchg
iret
mov
not
hlt
xor
imul
test
popa
rcr
xor
leave
into
mov
cmp
sub
mov
xor
mov
pop
or
fcmovnu
jns
add
loope
sar
not
push
pop
cld
pop
stc
in
adc
bound
adc
call
jb
cmp
mov
xchg
call
cmps
das
mov
pop
adc
clc
mov
sahf
popf
mov
nop
cmp
pop
(bad)
cmp
pop
mov
daa
xchg
das
xchg
sub
pop
pop
cmps
xor
add
ficom
xchg
xchg
push
enter
test
sub
cmp
mov
add
sub
dec
jg
outs
fadd
in
jle
mov
movs
adc
imul
inc
and
push
sbb
fild
retf
sub
push
mov
jns
sub
xchg
mov
shl
mov
daa
jne
mov
xchg
fidivr
or
adc
fnstsw
sbb
stos
mov
and
mov
push
imul
imul
and
push
repz
jb
imul
sbb
aam
xor
or
sub
add
xchg
sbb
in
std
pusha
mov
jb
mov
pop
pop
outs
add
mov
out
mov
ret
jo
mov
cwde
sar
pop
or
je
int
xchg
fild
xor
adc
cdq
lods
call
loop
sbb
inc
inc
in
sti
push
ret
pop
in
dec
int3
(bad)
cmp
adc
loope
mov
mov
cmp
push
sbb
pop
lock
out
gs
ret
mov
not
adc
movs
sbb
ficom
in
pop
mov
jnp
jno
lods
mov
pop
inc
arpl
retf
fcomp
arpl
mov
movs
and
inc
(bad)
jg
sub
mov
retf
test
std
fsubr
sti
sub
cs
sub
jbe
movs
test
mov
cld
imul
fidiv
stos
lea
stc
(bad)
jmp
rcl
imul
sbb
call
daa
call
loope
cmp
mov
mov
add
dec
arpl
xor
enter
inc
push
(bad)
xchg
(bad)
out
loopne
js
cmp
xchg
test
loopne
push
in
(bad)
leave
dec
mov
rcr
and
in
or
mov
mov
fild
lds
cmp
cli
dec
push
aad
dec
add
cs
dec
mov
mov
psadbw
mov
in
cmps
loopne
xchg
into
cmp
popf
mov
ins
in
mov
sub
mov
dec
shl
push
xor
xchg
cwde
lock
fsubrp
inc
(bad)
or
movs
dec
xor
gs
and
adc
sub
dec
lods
jnp
xor
inc
and
js
cmps
sbb
xor
jmp
psrad
mov
(bad)
es
mov
(bad)
cmp
aad
sbb
in
cmc
xchg
jmp
jmp
cmps
jl
int3
rcl
aaa
(bad)
out
aad
outs
hlt
int3
and
das
ins
xchg
xlat
in
xlat
(bad)
dec
aaa
cmp
mov
rcl
clc
cmc
pop
cmp
out
mov
jae
jnp
xor
xor
int3
mov
mov
mov
lods
mov
sub
outs
dec
mov
sub
sbb
pop
outs
cli
jae
inc
test
popa
(bad)
sbb
ins
daa
jnp
mov
xchg
pop
add
lods
add
adc
int3
xor
xchg
pushf
stos
enter
pop
add
xor
xchg
inc
rol
icebp
cs
in
je
pop
icebp
hlt
scas
push
test
cli
adc
and
or
add
adc
inc
inc
ficomp
int3
(bad)
ja
jl
gs
daa
xor
test
outs
les
lock
dec
adc
cmp
and
inc
pushf
call
adc
(bad)
fwait
pop
and
dec
add
sub
inc
jbe
or
lods
jne
sub
mov
out
cmp
xchg
mov
stc
pusha
sub
cs
das
out
mov
jp
lods
jmp
scas
sub
shl
sti
ins
jae
daa
aaa
pop
es
test
xchg
fadd
aaa
movs
lock
or
loop
lods
pop
bound
xor
aam
aaa
sti
dec
in
xchg
mov
shl
(bad)
dec
push
mov
xchg
in
(bad)
pop
adc
sbb
rcr
dec
or
adc
or
mov
xchg
in
aas
sub
jnp
push
inc
jne
push
inc
pop
fnstenv
adc
pop
push
call
test
outs
pop
mov
test
jnp
les
xchg
movs
mov
jp
add
dec
xor
dec
mov
cli
rol
sub
dec
xchg
mov
xchg
popa
jbe
xlat
mov
jno
fbstp
sbb
xchg
xlat
cmc
mov
mov
pop
es
lock
(bad)
jecxz
push
mov
jle
mov
xor
fidiv
inc
(bad)
retf
bound
pop
jl
add
pop
xor
(bad)
ret
add
xrelease
sub
sbb
pop
sbb
push
mov
push
or
fldcw
push
xchg
ds
std
clc
aas
and
add
lea
mov
iret
movs
mov
push
cmp
pop
inc
mov
sbb
xor
push
jecxz
dec
push
push
or
or
push
repz
mov
dec
sub
js
pop
push
test
outs
pop
push
jbe
jb
dec
push
lahf
repnz
xchg
je
icebp
lock
scas
pop
adc
shl
jns
jge
jae
push
jle
mov
pusha
je
lea
fsub
xor
add
iret
sbb
mov
sbb
add
stos
mov
jne
fmulp
out
mov
pop
jl
sahf
and
xor
adc
xor
das
dec
ja
out
leave
loopne
out
xchg
pushf
stos
shr
daa
jnp
jne
xor
cmp
cmps
mov
mov
jno
push
test
cmp
sbb
sbb
cdq
call
sti
fs
push
add
std
mov
push
jmp
test
bound
sahf
cld
adc
fdiv
add
inc
mov
cli
cmp
int3
loope
push
lods
int
mov
push
lahf
ds
xor
mov
add
mov
ret
jp
xor
dec
arpl
std
movs
out
adc
cmps
cmc
pop
retf
out
out
fistp
or
test
inc
call
out
dec
cmp
les
fdiv
mov
mov
sbb
out
das
cld
add
pushf
mov
ins
mov
push
add
mov
hlt
int
dec
pop
stc
es
inc
jae
or
add
out
cmp
pop
xor
test
ds
nop
jl
mov
cmp
out
mov
jne
popf
sub
push
out
in
pop
retf
and
jmp
cmp
add
push
mov
mov
cmps
and
pop
scas
push
(bad)
mov
mov
add
(bad)
in
cld
mov
jmp
test
xchg
cwde
in
mov
mov
(bad)
fsub
mov
pop
in
fwait
push
add
cmp
and
inc
adc
jb
sar
sub
jg
mov
mov
(bad)
mov
adc
xchg
inc
mov
sub
retf
mov
xor
cmp
jp
xlat
cmps
sbb
xor
test
dec
stos
in
jns
push
push
push
gs
dec
stos
sbb
fsubr
std
je
pop
jmp
out
fisttp
xor
push
xchg
scas
xor
mov
mul
aas
cmps
daa
out
aas
mov
mov
and
call
lods
push
mov
xchg
jnp
dec
jmp
test
mov
pop
int
fbld
mov
push
in
not
stos
cmp
stos
xchg
nop
sti
movs
cmp
cmc
dec
in
out
cs
mov
es
repnz
int
jmp
pop
sub
push
xor
popa
add
jmp
ins
push
push
mov
cmp
or
aad
xchg
mov
pop
xor
pop
pusha
and
clc
inc
push
cmp
(bad)
pop
out
xor
fcomip
add
push
mov
shl
jle
cdq
cdq
or
mov
jge
mov
hlt
aaa
push
jle
(bad)
cmp
outs
jle
in
cmp
packssdw
cs
outs
and
sub
pop
xchg
test
cld
movs
inc
fsub
adc
add
fwait
movs
mov
stos
ins
push
test
mov
into
loopne
jmp
mov
push
xor
xor
mov
jnp
out
mov
movs
outs
pop
dec
fmul
bswap
int
mov
mov
iret
push
and
pusha
sahf
cdq
sar
mov
lods
mov
pop
xor
jp
rol
add
push
dec
mov
mov
or
push
pop
clc
xor
jp
pop
std
xchg
jl
push
cli
retf
dec
push
jg
(bad)
(bad)
adc
pop
pop
sbb
fisub
and
xor
mov
xor
xchg
lods
inc
mov
int
xor
in
sub
add
(bad)
adc
call
inc
mov
jmp
jne
xchg
das
movs
sbb
and
xor
adc
jnp
je
and
sub
push
popf
or
test
stos
and
mov
inc
ror
clc
enter
cli
les
or
jno
sub
mov
in
test
jmp
add
inc
or
sbb
push
jp
stos
sbb
dec
ds
aad
mov
cmp
int3
adc
or
pop
pop
sub
sub
sub
(bad)
(bad)
daa
imul
mov
xchg
(bad)
push
outs
xchg
xchg
lods
adc
xchg
stos
add
dec
adc
fs
rcl
xchg
int3
inc
popf
cld
or
fchs
pop
pop
iret
inc
mov
fmul
add
and
jmp
push
jecxz
push
cmp
or
cmc
mov
daa
pop
xor
jmp
adc
cwde
jnp
dec
push
inc
mov
dec
add
and
sahf
sub
aad
std
mov
jns
jecxz
test
in
pop
sub
push
inc
jnp
pushf
jmp
mov
push
xor
push
in
jb
add
pushf
jnp
out
push
cmp
sbb
das
mov
adc
mov
int
xchg
push
mov
addr16
repz
inc
scas
jne
outs
dec
nop
ja
test
(bad)
and
in
dec
push
xchg
mov
mov
rcl
mov
xchg
je
jle
pop
mov
lods
popf
out
jg
pop
cmps
mov
xchg
mov
sbb
jb
push
hlt
gs
mov
push
loope
cmp
enter
pop
dec
in
jo
mov
xchg
add
sub
mov
mov
inc
dec
push
scas
pop
jns
dec
xchg
sbb
inc
xchg
dec
cmp
imul
into
xchg
fbld
lods
add
scas
xor
inc
inc
jns
add
push
push
lahf
mov
mov
jecxz
js
bound
xchg
jge
pop
ror
inc
xor
adc
mov
ja
in
push
loope
lds
dec
dec
in
ins
sub
xchg
pop
fpatan
retf
xor
jb
shl
mov
inc
lods
and
lds
jecxz
sti
imul
stos
and
in
shr
dec
hlt
out
or
fadd
and
mov
inc
jae
jle
(bad)
(bad)
(bad)
stc
gs
jne
dec
cld
cwde
nop
add
mov
jmp
sub
ds
loop
test
sbb
add
or
enter
mov
inc
jge
mov
cmp
fwait
mov
(bad)
adc
inc
cmp
cli
push
cdq
arpl
mov
dec
test
aaa
dec
or
lea
and
inc
sub
push
lock
shr
cmp
or
or
cmp
inc
add
sub
jl
push
ds
and
fs
and
in
mov
pop
mov
std
or
ret
pop
cwde
cli
aas
ja
add
retf
add
(bad)
add
inc
jg
jmp
xchg
push
dec
mov
out
test
loope
loopne
call
mov
mov
xchg
adc
jg
(bad)
dec
cwde
(bad)
sbb
(bad)
mov
xchg
into
addr16
sbb
arpl
jmp
adc
mov
mov
loop
fs
xchg
sub
sahf
stc
mov
stc
test
shl
xchg
mov
jns
pop
or
push
inc
lfs
xchg
push
jb
adc
push
addr16
dec
bnd
inc
int3
jne
xchg
sti
pop
mov
adc
mov
dec
xchg
fld
jo
mov
ss
lock
(bad)
sub
xchg
ja
dec
xor
xchg
mov
ins
jae
cmp
mov
fisubr
jl
add
sbb
cwde
jne
mov
sar
mov
pop
iret
cmc
and
dec
jae
shl
out
sar
inc
loopne
mov
ret
cmp
xor
jno
push
inc
out
push
mov
rcl
lock
lods
pusha
in
and
aam
mov
cmps
shl
xchg
out
test
shr
cmp
pop
aaa
cmc
scas
mov
std
and
call
inc
xor
(bad)
in
cs
enter
test
es
scas
dec
adc
into
xor
xchg
sahf
stos
ss
daa
mov
dec
jae
sti
sbb
dec
xchg
mov
call
adc
mov
pusha
fstp
dec
and
pop
scas
jg
and
cmc
mov
(bad)
aam
scas
xor
aas
xchg
shl
jmp
retf
add
int3
pop
mov
(bad)
pop
(bad)
lock
int
pop
push
mov
push
or
js
fist
fs
stc
adc
scas
pop
push
sti
gs
inc
leave
inc
and
dec
mov
in
xchg
mov
mov
aaa
stos
add
xchg
xor
xor
mov
ins
call
xlat
lods
pop
dec
and
nop
imul
retf
push
mov
scas
aad
xchg
sbb
sub
lahf
jmp
ja
and
(bad)
rcl
jg
inc
lods
into
xchg
movs
iret
mov
daa
sbb
data16
div
fimul
and
movs
data16
fistp
dec
push
push
cli
js
jnp
sbb
or
sub
pop
mov
push
out
fimul
mov
xor
jmp
loopne
dec
push
loop
pusha
jno
dec
je
mov
mov
sbb
aad
and
fs
scas
xlat
adc
push
loopne
movs
adc
icebp
push
daa
xlat
dec
mov
pop
fs
sahf
call
mov
fsub
aad
aas
cs
push
or
inc
inc
jnp
and
jne
jge
dec
clc
dec
loope
scas
push
out
jmp
(bad)
aad
ins
xchg
stos
sub
mov
retf
and
push
jl
sub
call
push
sti
aaa
add
cmps
ret
es
pushf
outs
fisub
pushf
push
inc
inc
and
addr16
adc
pushf
jge
shl
ss
in
jne
and
or
fisub
or
mov
pusha
fldenv
fst
sub
cmps
fisttp
and
push
ror
rcl
push
jmp
mov
mov
xor
dec
pop
sti
jmp
or
lds
fwait
cld
stos
or
call
adc
mov
arpl
adc
adc
out
mov
enter
aad
aam
pop
imul
and
fcom
aas
pop
call
jbe
mov
xor
jbe
std
lock
daa
cmp
ja
dec
cmp
mov
add
cmp
ins
ror
loopne
test
jge
aaa
dec
std
cdq
(bad)
sbb
in
test
and
rcl
aaa
and
stc
(bad)
lock
dec
add
rcr
cmp
adc
xchg
sbb
test
or
ds
cdq
(bad)
jnp
pop
cwde
call
fidivr
cmc
inc
dec
(bad)
mov
jno
jne
repnz
ret
sti
cmp
lahf
mov
leave
enter
scas
movs
outs
and
ret
mov
(bad)
mov
cwde
outs
push
jmp
test
adc
add
sub
jae
xchg
movs
shr
ss
inc
pop
push
cs
cmps
icebp
int3
cmp
popa
sbb
cli
xchg
mov
sub
lea
mov
xchg
dec
inc
mov
ins
mov
inc
and
xchg
out
idiv
mov
or
enter
cmp
inc
nop
cmps
shr
lahf
add
add
ret
inc
push
inc
xlat
sbb
fdiv
fwait
scas
cmp
xlat
shl
cmp
and
jmp
rcl
mov
jno
stc
jp
and
loop
cli
jbe
clc
adc
dec
sbb
pop
cli
adc
nop
lods
sub
jnp
inc
lds
xor
jne
xchg
movs
mov
sbb
jle
retf
cwde
mov
xchg
sbb
test
in
aam
gs
ins
and
sub
mov
mov
in
push
es
push
aad
out
cwde
xor
mov
xor
test
daa
sub
mov
mov
cmp
stos
sar
jecxz
ds
test
adc
in
or
mov
aad
and
(bad)
mov
scas
ds
dec
xor
or
enter
add
cmp
cmps
xor
sub
in
repnz
cmp
inc
mov
cmp
pop
(bad)
fld
out
add
pop
jecxz
mov
jae
cmps
sar
out
inc
call
fs
ret
pop
test
int3
pusha
repz
retf
and
sub
adc
push
cs
sbb
xor
ss
add
sub
adc
mov
ret
add
sbb
mov
lods
(bad)
adc
sub
imul
dec
lods
inc
push
rcl
dec
jmp
jecxz
(bad)
test
xor
fcomi
inc
xchg
cld
cmps
ds
sbb
addr16
cmp
xlat
(bad)
imul
test
pop
lods
jno
mov
in
xor
jnp
push
loopne
nop
ror
and
jne
fwait
push
test
push
pop
jmp
xchg
cld
retf
sti
inc
ss
xchg
mov
xor
pop
adc
cmps
sub
(bad)
add
jl
jg
stos
and
popf
mov
jb
test
aam
sub
adc
inc
adc
push
scas
dec
dec
movs
jp
scas
and
ss
(bad)
bnd
jne
popa
out
mov
jmp
jns
jo
arpl
sti
add
fcom
fwait
xchg
fwait
pop
pop
xchg
inc
lods
cmp
imul
lds
outs
xlat
stc
jb
inc
ds
cwde
repnz
data16
jmp
inc
(bad)
aaa
xor
mov
jle
and
or
cmc
rol
(bad)
or
inc
mov
dec
movs
jo
inc
ret
push
and
push
int
repnz
inc
ins
jg
(bad)
lods
add
inc
jo
test
xchg
leave
mov
pop
fistp
leave
xor
shr
ficomp
pop
push
mov
adc
sbb
or
pop
xor
jle
mov
sub
iret
cld
arpl
push
stos
jnp
popa
(bad)
jns
inc
mov
sub
sub
inc
inc
(bad)
enter
clc
inc
scas
push
push
jmp
sbb
xor
push
lea
sbb
(bad)
mov
push
(bad)
xchg
cmp
into
into
test
ror
dec
adc
xchg
aad
into
xchg
data16
inc
ret
mov
jle
jbe
xchg
enter
push
out
or
and
push
jbe
imul
sub
lock
sysexit
clc
add
or
retf
mov
cdq
pop
mov
add
stos
pop
mov
mov
fwait
sub
jns
jecxz
data16
sub
cmp
add
cmp
nop
cmp
add
cmp
adc
or
lea
ins
loope
je
and
push
ins
pushf
dec
jge
inc
jbe
push
cmps
cs
inc
inc
or
push
ja
popa
cmp
in
std
hlt
sub
pop
jbe
mov
lahf
dec
cli
xor
jbe
mov
(bad)
jo
jo
in
fnstenv
sbb
adc
js
mov
fldcw
dec
cmp
int3
or
loopne
(bad)
int
dec
xor
push
cmc
cmp
inc
adc
add
fs
es
(bad)
fstp
push
cli
mov
push
push
aad
mov
and
test
jae
ret
fisttp
aam
ins
clc
cld
sbb
dec
cmp
xor
xor
shl
fcomip
es
and
xlat
ret
cld
pusha
and
dec
inc
test
les
neg
and
retf
ja
jno
lea
icebp
repnz
ficomp
xchg
jmp
adc
in
mov
(bad)
jnp
cmp
xchg
into
push
fwait
or
jno
rcl
mov
dec
xchg
popa
sbb
ror
dec
dec
pop
pushf
xor
fsubr
je
fisub
in
outs
stc
xchg
or
mov
pop
add
inc
clc
sub
and
jb
and
lods
aaa
xchg
dec
pmullw
fdivr
(bad)
lods
cmps
jge
mov
int
xchg
mov
or
repnz
das
shr
fist
xchg
std
into
push
out
sti
aad
js
dec
sub
adc
pop
repnz
fnstsw
mov
jl
xchg
mov
lea
cli
cdq
loopne
mov
mov
inc
int3
jg
add
cmp
dec
cmp
rol
push
cmps
dec
cmps
mov
push
jg
jl
aad
fidiv
stos
mov
div
push
test
ror
mov
or
jb
jns
and
ds
popa
fstp
shl
dec
clc
(bad)
mov
sub
inc
sbb
(bad)
(bad)
pusha
popf
xlat
sbb
call
ins
gs
jnp
iret
jmp
push
push
dec
mov
(bad)
xor
out
dec
jmp
mov
lods
pop
psrld
iret
loope
mov
idiv
outs
sbb
bound
push
shl
das
loope
add
mov
into
or
shr
fwait
adc
push
mov
std
cmp
outs
retf
je
sbb
aaa
mov
test
push
lods
xchg
sub
mov
sbb
inc
test
xor
inc
mov
pop
sbb
stos
pop
clc
and
add
adc
cmp
out
xchg
call
xor
outs
sub
inc
adc
sbb
push
mov
jnp
mul
stos
jmp
push
xchg
movs
into
repz
pop
shl
shl
(bad)
popf
outs
ja
jle
neg
inc
sub
push
push
into
out
xlat
fld
ror
ret
shr
jg
scas
stos
dec
dec
(bad)
mov
push
rcr
es
pop
mov
pmuludq
out
inc
sub
and
mov
add
inc
pop
ffree
add
sbb
adc
add
je
inc
jo
push
les
mov
test
aam
add
cmp
jbe
mov
sbb
leave
in
sti
xchg
mov
inc
push
shl
sbb
les
fnstcw
sub
mov
sub
aam
out
mov
stos
fwait
jbe
push
dec
fdiv
shl
in
outs
add
xchg
mov
test
ja
jae
cmc
nop
aaa
pop
push
fucom
sbb
loope
xchg
sbb
jle
out
icebp
xchg
les
jp
mov
mov
mov
jl
cld
lods
fstp
cmps
xchg
mov
sbb
gs
mov
mov
imul
in
dec
fild
sub
rol
cmps
dec
mov
rcr
in
or
imul
xor
call
mov
sub
mov
out
push
or
inc
mov
(bad)
cmp
dec
dec
fwait
stc
popf
gs
sbb
cwde
fcmovu
push
cmp
pusha
sbb
sbb
push
mov
or
sti
call
mov
or
xor
mov
or
mov
xchg
xor
mov
ror
cwde
sbb
js
pop
xchg
fwait
cmp
fcom
stos
test
and
ja
aas
push
mov
shr
and
pop
frstor
fwait
jge
out
add
mov
rcl
pop
inc
in
mov
cmps
fdiv
pop
jmp
mov
add
sbb
loop
inc
sbb
mov
fstp
arpl
mov
retf
and
and
das
aas
pop
mov
movs
out
addr16
mov
iret
cdq
arpl
dec
fmul
mov
push
lods
(bad)
int3
ds
clc
dec
popa
nop
sub
cmp
call
mov
(bad)
leave
cmp
or
ror
sub
ds
shl
adc
int3
xchg
inc
nop
pop
push
imul
mul
cmps
out
or
data16
hlt
push
xor
loop
fsub
arpl
mov
popf
ins
scas
xchg
dec
icebp
dec
addr16
les
push
lods
in
xchg
xchg
out
adc
fistp
inc
(bad)
jmp
mov
inc
mov
test
clc
test
stos
pop
adc
ds
jecxz
jmp
ds
iret
push
dec
daa
dec
pop
out
lea
mov
shr
jne
jmp
mov
inc
jge
stos
cld
fs
ss
or
inc
mov
mov
ficomp
adc
push
ins
std
sbb
jp
add
int
inc
pop
sbb
loopne
fcmovne
jle
or
sub
mov
aaa
ror
cld
add
push
xchg
repz
in
lods
aam
sub
xchg
add
nop
jle
cli
fisubr
mov
cmp
push
stos
sbb
jae
inc
inc
push
js
rol
fdivr
cmp
mov
movs
pop
cmp
cdq
mov
mov
movs
std
scas
sbb
stc
fsub
adc
sbb
xchg
mov
cmp
inc
xchg
inc
jp
add
pop
cmps
aam
cmp
xor
inc
xor
pop
xchg
dec
add
mov
loope
push
movs
popa
jmp
cld
lods
fidiv
into
(bad)
xchg
out
xchg
test
and
xchg
sbb
(bad)
add
test
jp
mov
cmp
sub
add
daa
jo
sub
test
stos
lds
pusha
jmp
pop
push
cmp
xchg
imul
ins
pop
mov
(bad)
and
or
fdivr
add
push
(bad)
mov
sbb
neg
das
dec
fdiv
pop
jo
adc
sbb
push
stos
jns
popf
cmp
jns
xchg
popf
je
pop
push
adc
fcom
nop
xor
(bad)
fisttp
dec
jnp
push
out
sub
adc
xor
jg
iret
pop
add
pop
in
out
jnp
add
jmp
cmp
or
into
adc
repz
retf
add
push
push
xchg
and
jp
sti
adc
push
ss
add
retf
mov
sub
mov
test
das
sbb
in
push
push
push
imul
or
lea
dec
mov
ror
ja
ins
adc
jmp
out
sar
repz
jl
add
aas
retf
jmp
or
mov
hlt
out
fmul
leave
ret
in
xlat
out
scas
jo
push
push
fcmove
xlat
mov
dec
in
push
loop
cmp
cmp
in
cmp
sbb
bound
imul
pop
or
pusha
dec
popa
jge
jmp
pop
push
data16
inc
jo
fwait
lock
jle
nop
imul
pop
ror
cmp
js
out
mov
xor
mov
(bad)
sub
inc
cmps
mov
sub
pop
pop
sti
arpl
ror
jmp
xor
in
inc
arpl
jno
aad
and
or
dec
fyl2xp1
daa
jae
daa
sub
push
mov
jmp
loope
imul
push
test
sbb
pop
mov
std
stos
aam
inc
sub
imul
xchg
jmp
mov
jbe
ins
cmps
outs
xor
(bad)
sbb
or
sub
fwait
xchg
mov
inc
dec
test
mov
pop
inc
cmp
inc
push
mov
iret
cmp
dec
in
jae
ds
fbstp
scas
inc
sub
cmp
loopne
and
push
jbe
xchg
jb
pop
rcr
hlt
or
mov
imul
jg
mov
push
jmp
adc
iret
sbb
push
fbstp
fwait
sbb
addr16
mov
lea
sub
jge
fwait
paddw
inc
ror
loope
imul
ficomp
mov
out
mov
mov
daa
fcom
cld
sub
stos
add
and
adc
jae
push
pop
mov
lahf
jnp
sbb
call
or
sbb
sbb
sub
sbb
cmc
fld
test
cdq
mov
call
jne
adc
repz
push
push
mov
test
jp
outs
sbb
daa
push
jo
in
dec
sar
mov
lock
out
faddp
pop
call
push
sbb
scas
lea
aad
clc
sbb
cmp
mov
aam
xchg
fld
nop
adc
sahf
in
lahf
mov
js
push
stos
out
sub
ffreep
sub
ins
mov
(bad)
xchg
mov
mov
sar
sbb
(bad)
mov
icebp
movs
adc
mov
loope
sbb
or
jns
sub
sbb
or
sub
mov
es
pop
shl
(bad)
out
in
dec
test
pusha
xchg
in
(bad)
sbb
mov
push
push
push
dec
sub
sti
jns
test
in
mov
mov
dec
sbb
xchg
mov
pushf
shr
icebp
pop
retf
mov
pop
push
inc
nop
jecxz
inc
rol
(bad)
retf
cmp
out
imul
(bad)
xchg
dec
cmp
and
push
and
dec
pop
and
mov
out
mov
repnz
mov
or
mov
stos
dec
aad
cmp
lods
(bad)
jecxz
dec
rcl
sbb
inc
fstp
cmp
xchg
cmp
dec
lods
fucomi
ins
mov
add
mov
xor
adc
cs
add
fs
popa
jmp
push
mov
stos
sbb
pop
xchg
out
push
dec
jb
imul
xchg
jmp
jge
mov
mov
ja
fst
loopne
enter
xchg
xchg
adc
sub
sbb
cmps
ror
jns
gs
not
sbb
sbb
mov
mov
xchg
mov
in
pop
sbb
fsub
ins
cmc
mov
push
jns
data16
das
(bad)
aad
adc
sub
imul
aad
mov
aam
pop
pmulhuw
out
out
add
ins
adc
mov
in
sar
leave
inc
push
jge
gs
aaa
mov
add
div
repnz
and
or
retf
jmp
pop
xor
pop
cmp
and
div
jne
add
and
rcr
(bad)
jne
pop
or
cmc
or
retf
xor
xchg
jnp
jno
in
mov
(bad)
or
ret
mov
sub
xchg
adc
gs
das
scas
fs
adc
call
cmp
mov
in
arpl
jg
ja
fisttp
inc
mov
nop
cmp
dec
fs
fiadd
fdiv
pop
pop
ss
cmc
xor
test
dec
gs
adc
lahf
cmp
fcmovnu
push
cs
imul
(bad)
mov
mov
repz
mov
pop
dec
loope
addr16
mov
dec
pop
xor
jg
cmp
rcr
xchg
mov
test
nop
inc
and
inc
xchg
push
dec
aam
and
retf
leave
(bad)
jb
(bad)
aas
adc
ret
push
cmps
jae
loopne
sub
or
js
scas
xor
xchg
imul
inc
bnd
iret
inc
shl
movs
mov
jno
xchg
pop
test
inc
repz
jb
sbb
inc
inc
mov
cld
mov
mov
daa
and
lahf
mov
imul
in
sar
push
lods
jmp
or
mov
inc
jae
adc
popf
out
(bad)
out
(bad)
(bad)
mov
enter
xchg
add
adc
jns
push
test
(bad)
cmp
std
je
int3
jmp
test
adc
mov
xlat
dec
ret
jl
sub
dec
or
test
cmps
and
repnz
xchg
mov
jns
pop
lods
jg
xor
arpl
xchg
mov
call
call
mov
jo
fcom
push
pop
test
inc
aad
mov
(bad)
cld
push
shl
add
jg
dec
pop
aam
das
lds
cmp
popf
(bad)
cmps
sub
(bad)
inc
icebp
popf
gs
mov
test
pop
xchg
bound
fst
lea
adc
test
das
fstp
sub
hlt
fdivp
jns
and
mov
jmp
mov
add
xor
push
les
out
rol
in
into
lods
je
arpl
aam
sbb
hlt
push
adc
shl
mov
and
outs
into
dec
adc
xlat
jnp
pop
mov
mov
mov
push
sbb
xchg
pop
into
scas
ficomp
pusha
cmp
inc
or
aam
and
hlt
jb
pop
jge
xor
hlt
sub
aam
stos
inc
cdq
push
inc
jl
sub
fadd
ret
sub
push
enter
outs
mov
lahf
dec
outs
fs
cmp
shl
fistp
dec
lea
es
add
xchg
xor
out
dec
jb
addr16
(bad)
nop
push
clc
rcl
add
clc
sub
inc
jne
sbb
(bad)
cwde
fdiv
mov
fmul
pop
mov
mov
cmp
mov
cs
(bad)
fsubr
mov
sbb
call
out
mov
cld
loop
ret
cld
jmp
movs
jmp
scas
push
or
pop
imul
scas
sub
ret
dec
adc
mov
aaa
outs
xlat
scas
imul
fidivr
jbe
push
mov
mov
cmp
cmp
push
jle
sbb
inc
(bad)
mov
add
pop
scas
rol
inc
xchg
(bad)
mov
jbe
test
pusha
mov
pop
dec
test
mov
xor
mov
mov
fsub
add
iret
(bad)
jl
cmc
pop
jo
jne
adc
mov
jmp
dec
movs
stos
mov
jl
adc
imul
cld
cmp
inc
sbb
jnp
mov
jmp
add
mov
pop
lock
pop
xchg
mov
mov
shr
mov
inc
test
mov
jo
pop
lahf
cmp
sbb
int
push
or
lahf
push
adc
pop
xchg
pusha
js
sub
pop
adc
ror
push
cmc
xor
js
(bad)
xchg
jle
dec
movs
or
mov
mov
xchg
loopne
loope
mov
call
dec
ins
jo
inc
adc
pop
jne
jo
push
xchg
jl
or
push
jne
sub
ja
lods
bound
inc
pusha
bswap
inc
adc
dec
mov
test
pop
hlt
and
cwde
mov
inc
cs
movs
addr16
or
and
cdq
dec
jle
js
add
lea
push
add
bnd
in
iret
std
lods
cmp
ror
cmp
dec
jle
lahf
(bad)
cmp
xchg
test
jns
push
(bad)
xor
inc
add
fsubr
sub
cmp
call
in
pop
dec
(bad)
push
sub
or
mov
aad
cmp
xor
add
enter
or
lds
inc
mov
jae
imul
aad
mov
leave
(bad)
jge
das
jns
jecxz
jl
mov
test
fisub
nop
int
xor
movs
lods
xchg
xchg
loop
or
push
sub
mov
outs
pop
rdtsc
sbb
mov
add
adc
add
retf
cld
push
push
clc
arpl
dec
mov
cmp
fs
mov
movs
mov
daa
mov
std
or
iret
pop
test
or
pop
xor
iret
retf
shr
pop
dec
imul
stos
mov
pop
push
clc
xor
jne
cmp
xor
adc
aad
cdq
sub
pop
push
adc
and
(bad)
mov
jle
jbe
je
push
pop
das
xor
mov
add
ficom
mov
pop
inc
es
inc
mov
mov
(bad)
jecxz
sub
push
je
xlat
movs
mov
or
in
xor
sub
es
shr
pop
mov
(bad)
std
dec
xchg
dec
popa
cmp
push
das
cwde
inc
dec
push
frstor
dec
enter
pop
jnp
rcr
pop
push
pusha
int3
sub
or
xor
jmp
aaa
pop
and
cld
mov
dec
jge
data16
inc
cmc
cmc
adc
push
in
std
sahf
loope
test
or
shl
sbb
fild
pop
nop
ret
adc
or
inc
mov
out
mov
in
mov
mov
xchg
add
sahf
scas
je
pop
stos
imul
in
bt
lahf
xchg
sub
movs
or
(bad)
out
lods
xchg
mov
ins
(bad)
lds
push
data16
lds
repnz
into
pushf
push
sbb
ja
ins
adc
or
aas
jg
xchg
repnz
push
jo
lods
mov
ret
stos
popa
loop
fst
(bad)
ins
push
xchg
stos
pop
pop
add
mov
ins
xchg
adc
in
scas
xor
jmp
mov
lahf
cld
and
mov
and
dec
dec
fwait
xchg
repnz
push
cdq
inc
scas
push
add
cmovge
xor
and
sbb
ror
sbb
call
out
mov
mov
fcmovnbe
push
test
ins
xor
pop
lods
dec
stc
lods
in
inc
dec
jae
loop
jl
jbe
xor
mov
sub
js
imul
pop
sub
out
scas
mov
sbb
test
sti
dec
pop
shl
xor
les
es
in
mov
add
inc
xchg
xor
inc
cmp
cmps
mov
aaa
shr
add
jp
nop
clc
cmp
ins
ins
xchg
xchg
ret
xor
xor
or
jl
idiv
aas
imul
mov
mov
mov
mov
and
xchg
pop
mov
ficomp
xchg
(bad)
call
pop
cwde
pop
fsubr
repz
lock
add
call
and
(bad)
loope
or
fcom
inc
push
cmp
xchg
inc
std
div
push
pop
aam
mov
fwait
mov
mov
jno
sub
in
xor
pop
push
add
int
pop
(bad)
fnsave
repnz
retf
out
sbb
pushf
in
pusha
add
sti
mov
ja
mov
xchg
loope
sar
push
and
das
repz
mov
xchg
jno
mov
pop
ret
push
sbb
cmc
arpl
repz
pushf
mov
mov
(bad)
lods
push
test
ss
cwde
push
push
out
mov
add
inc
fs
les
push
mov
add
lahf
aad
inc
mov
sbb
mov
jnp
stc
in
mov
cli
stc
ret
repnz
push
loopne
enter
popa
or
pushf
jl
jmp
dec
pop
out
sbb
cwde
pop
cdq
dec
out
sub
cmps
and
aas
push
dec
xlat
jmp
pop
scas
jnp
add
dec
movs
and
stos
and
jae
daa
movs
sar
add
(bad)
jge
xchg
ja
mov
rol
mov
into
ror
cmps
sar
mov
movs
mov
data16
lds
cli
hlt
and
popa
xor
add
cwde
cmp
sub
jb
or
and
fs
loope
add
jno
addr16
xor
test
push
and
je
adc
aam
test
test
mov
push
push
popa
int
(bad)
in
push
xchg
mov
sub
sub
pop
adc
sar
cmc
add
pop
push
mov
inc
fisttp
in
mov
mov
dec
adc
pop
push
sub
xor
mov
jbe
xchg
pop
pop
xchg
retf
jae
call
movs
mov
movs
(bad)
dec
stos
cmps
jge
sub
aad
nop
pusha
xor
lds
push
gs
nop
icebp
int3
fsubp
aam
pop
call
shr
mov
icebp
or
cmp
clc
inc
dec
sbb
std
out
nop
jg
jns
jl
retf
int
cdq
xchg
enter
idiv
imul
adc
push
loopne
cmc
test
and
jecxz
and
push
jne
xor
dec
push
scas
aas
xchg
xlat
pop
js
rol
bsf
scas
push
jbe
std
(bad)
push
rol
imul
push
clc
call
pop
add
call
push
test
and
movs
es
push
xor
pop
and
dec
jo
push
xchg
jmp
lds
push
dec
scas
pop
mov
cmp
xor
cld
fucomi
mov
mov
inc
dec
cs
lods
jp
repz
rcl
dec
and
or
push
jp
scas
xor
in
fdivr
mov
aaa
sbb
fscale
inc
fild
push
js
pop
in
pushf
mov
cmp
loopne
test
cmp
sbb
inc
(bad)
fist
push
(bad)
xchg
adc
add
rol
popf
jmp
xlat
mov
jle
mov
enter
xchg
sbb
or
jb
or
xor
mov
popf
push
push
mov
icebp
lods
add
rcl
xor
pusha
sbb
es
call
jns
test
mov
add
adc
push
cmc
jns
mov
xor
imul
(bad)
out
or
test
aas
cld
(bad)
fbstp
xor
lea
mov
retf
mov
cmc
(bad)
and
pop
in
adc
(bad)
lods
cwde
push
(bad)
loopne
retf
dec
jno
test
push
pop
dec
adc
push
cmp
aad
mov
es
hlt
pop
pop
ret
daa
jae
dec
pop
and
inc
sub
ds
add
push
stc
and
gs
inc
dec
lods
pop
cmp
mov
xor
jae
ds
pop
mov
push
inc
jecxz
fisub
shr
push
in
or
sti
pop
mov
in
iret
out
cwde
je
lea
enter
and
icebp
in
loop
and
jne
sti
mov
xlat
je
mov
sub
dec
cmc
xor
adc
add
xchg
aad
sbb
ror
add
jecxz
sub
pop
jns
mov
xlat
fisubr
sub
ss
jle
pop
pop
jae
ja
(bad)
adc
sar
xchg
cdq
in
lock
pop
imul
jmp
jle
sbb
scas
aas
add
adc
loopne
lods
fwait
add
les
push
ret
mov
iret
xor
sub
xor
mov
je
sub
cmp
dec
nop
(bad)
and
ffree
mov
addr16
ret
(bad)
dec
mov
dec
xchg
stos
and
mov
mov
sub
into
(bad)
sbb
push
mov
hlt
adc
sbb
push
add
sub
cmp
xchg
and
pop
inc
retf
in
pop
jmp
fistp
mov
jnp
jno
mov
dec
jbe
xchg
mov
push
xlat
pop
cmps
imul
shl
ds
mov
add
repnz
jae
and
push
aad
mov
adc
icebp
jno
push
xchg
pop
xchg
int
sbb
or
jo
mov
dec
push
scas
jne
cmps
push
pop
mov
jb
push
imul
inc
mov
arpl
inc
inc
mov
adc
jb
test
xchg
cdq
or
jle
fild
jb
cmp
xchg
ins
sbb
mov
mov
jne
out
mov
sar
fisubr
cs
mov
push
inc
inc
mov
xchg
ffree
xchg
ds
les
mov
es
mov
call
xchg
xchg
rol
fnstenv
das
jl
test
mov
or
sbb
out
out
test
push
out
push
data16
sbb
sbb
je
add
or
adc
mov
iret
sbb
adc
out
pop
or
das
ins
mov
pop
daa
add
(bad)
jo
jb
mov
cs
cmps
inc
cmc
mov
hlt
pop
push
inc
hlt
sub
ss
cli
sti
xor
mov
call
je
adc
add
xor
rcr
sub
inc
push
ret
cli
hlt
xchg
into
cmp
dec
mov
in
adc
aad
stos
mov
scas
dec
dec
sbb
fld
inc
loope
test
xor
adc
xchg
pop
push
arpl
sub
sbb
loopne
outs
ret
mov
data16
or
les
xchg
sub
(bad)
inc
in
pop
pop
jmp
cmp
xchg
out
pop
cmp
jmp
cli
lahf
cmc
stc
pop
mov
test
mov
adc
add
inc
stos
iret
push
int
adc
push
test
jo
repnz
pop
cli
bound
dec
js
inc
imul
inc
mov
xchg
stos
or
stc
push
(bad)
xchg
pop
sbb
movs
jae
test
inc
test
mov
rcr
mov
nop
adc
test
mov
mov
push
adc
fcomp
je
cmps
jb
adc
push
cmp
cdq
cmp
mov
(bad)
ja
push
out
mov
xchg
test
pop
test
inc
gs
xor
call
fmul
and
leave
adc
push
js
test
pop
aas
add
fmul
pop
call
jl
xor
cs
aaa
addr16
lahf
mov
jmp
jno
xor
mov
psadbw
clc
fadd
mov
into
cld
(bad)
jne
mov
and
cmp
iret
jno
jbe
arpl
sub
xor
mov
stos
inc
(bad)
fistp
cld
add
ss
ror
lock
pusha
fistp
add
jae
cmp
add
mul
retf
nop
fistp
clc
sub
out
arpl
js
push
repnz
mov
push
xchg
adc
add
clc
aas
mov
int3
push
iret
shl
hlt
jo
jge
jns
mov
mov
outs
pusha
scas
es
or
dec
jle
popf
sbb
mov
or
sbb
mov
jne
ret
xchg
add
mov
sahf
cmc
pop
xlat
int3
jb
sub
push
mov
js
gs
jp
call
movs
ret
leave
call
(bad)
in
adc
adc
sub
into
cli
rcl
inc
lds
std
aaa
inc
adc
inc
mov
lds
aas
mov
int
inc
push
mov
es
bndstx
inc
std
(bad)
fsubr
cs
test
cmp
jle
js
es
out
aas
push
pusha
pop
jmp
push
push
scas
int
daa
xchg
pop
retf
mov
and
out
xchg
jecxz
mov
mov
shl
pop
jle
rcr
push
mov
int3
sub
ja
repnz
xor
popa
xchg
ins
ins
inc
(bad)
sub
sbb
and
sub
inc
cmp
jb
pop
cmc
or
cwde
(bad)
push
fldenv
and
fwait
pop
mov
cdq
mov
js
stos
ror
mov
(bad)
mov
push
lahf
xchg
cmps
or
enter
sub
jno
mov
jle
mov
add
inc
test
inc
das
pushf
into
sbb
scas
xor
imul
jmp
sbb
test
mov
fistp
sbb
xlat
xchg
pop
and
and
test
jmp
icebp
pop
push
call
shl
jb
outs
mov
out
adc
shl
ins
cwde
lock
xchg
fstp
or
xchg
or
iret
out
idiv
push
(bad)
lds
cwde
(bad)
adc
adc
das
out
retf
or
cmp
ins
fdivr
lock
jge
jnp
mov
jnp
movs
imul
fmul
xchg
pop
jg
mov
(bad)
push
cli
or
jp
mov
push
jbe
lahf
shl
sub
mov
in
xlat
ja
stos
jae
ins
stos
sub
jg
cmc
cmp
call
jecxz
cdq
dec
ds
sbb
aaa
idiv
imul
ds
cld
out
push
pop
xchg
pop
mov
and
dec
in
in
jmp
jl
mov
retf
aad
cli
jmp
xchg
dec
xchg
mov
mov
out
repz
xor
ss
aad
sub
sub
inc
or
sbb
mov
jmpw
inc
call
inc
mov
out
lock
xchg
out
arpl
shr
push
movs
repnz
out
and
jae
mov
dec
cmp
loope
mov
fnsave
in
mov
push
and
stos
sar
xor
xor
jmp
xchg
mov
popa
adc
fcom
push
mov
fldcw
dec
cmc
and
or
push
jae
inc
pop
jmp
jmp
cmp
fldenv
jge
or
inc
je
daa
gs
jg
loopne
mov
jae
mov
xchg
mov
jp
sbb
mov
and
sbb
xor
fistp
imul
push
ds
mov
pop
ds
call
mov
shr
xchg
daa
test
daa
dec
cmp
bound
retf
mov
push
out
xlat
cmp
not
test
push
test
retf
dec
mov
mov
sahf
(bad)
(bad)
push
mov
fnstcw
add
adc
dec
mov
idiv
xchg
jmp
sub
retf
je
mov
daa
das
call
icebp
cmp
push
cld
push
cmps
aam
ins
bswap
mov
jns
adc
fisubr
mov
and
in
inc
pop
inc
cmp
xchg
fisubr
jns
mov
pop
inc
das
icebp
ret
cmp
push
aaa
mov
and
movs
fs
int
sbb
les
mov
mov
jmp
jge
jb
lods
sbb
call
and
popa
dec
cli
dec
xor
enter
adc
(bad)
movs
sub
push
retf
xchg
not
adc
sub
adc
dec
sub
sbb
shl
pop
in
mov
cmove
arpl
lahf
sbb
ror
lods
rcr
and
adc
xor
add
jp
jo
push
fwait
in
mov
adc
fwait
sbb
iret
adc
and
mov
sbb
int3
jmp
loope
shl
and
jmp
or
in
call
int
xchg
lea
out
frstor
sub
xor
mov
ret
movnti
xor
jl
or
and
fs
outs
(bad)
in
ror
add
sar
mov
test
imul
xchg
dec
inc
sbb
clc
push
sub
bound
jnp
ss
pop
fmul
pop
jmp
out
sbb
es
adc
push
out
push
or
test
sub
movs
lahf
dec
icebp
jecxz
les
pop
mov
fs
or
pop
adc
sar
daa
icebp
ins
call
mov
mov
mov
push
mov
sub
push
xor
aaa
fsub
dec
mov
js
pushf
inc
cmp
mov
add
adc
ins
xchg
inc
dec
stos
cmc
dec
shl
bound
imul
add
retf
addr16
jbe
add
mov
jbe
outs
inc
out
vmwrite
(bad)
mov
iret
ror
sbb
mov
call
outs
in
daa
sbb
push
(bad)
mov
sbb
push
sbb
mov
gs
mov
mov
into
mov
adc
mov
in
fstp
mov
popf
and
or
(bad)
js
jb
ds
pop
xor
add
push
mov
dec
push
xchg
cmc
out
pop
and
or
fimul
mov
or
scas
popf
int3
mov
and
leave
mov
mov
pop
and
imul
mov
mov
outs
push
inc
repz
cld
call
mov
das
and
imul
adc
and
push
movs
jns
mov
jge
jo
push
out
fst
and
stc
mov
mov
outs
sbb
or
sbb
out
pusha
add
pop
sub
rcr
lea
lfs
sbb
in
jg
fstp
jbe
inc
dec
mov
xor
mov
aaa
dec
int3
mov
loopne
mov
sub
fistp
and
pop
clc
mov
pop
and
stos
sti
dec
and
cmp
push
mov
test
sahf
pop
push
jne
sbb
and
mov
daa
outs
dec
outs
mov
(bad)
fstp
ja
sbb
xchg
jae
mov
fisub
cld
mov
and
push
push
push
bound
icebp
loop
xchg
shl
mov
sbb
loop
cmps
pop
jo
add
outs
sbb
aaa
dec
jl
or
xchg
push
inc
xchg
test
addr16
lock
out
rcr
sbb
mov
hlt
xor
and
sub
push
repnz
test
push
add
pop
arpl
fdivrp
arpl
leave
mov
lock
fiadd
pop
mov
mov
push
popf
or
sub
ret
pop
add
aad
xchg
push
mov
cmp
cdq
push
xor
pop
or
mov
cs
push
scas
daa
xchg
inc
cmc
push
add
gs
jno
sahf
cmp
sub
mov
les
loopne
push
(bad)
sbb
mov
and
xchg
sbb
neg
repz
inc
sub
repnz
push
out
jo
je
add
inc
fcomp
jmp
movs
es
or
call
mov
inc
or
aaa
push
(bad)
int
imul
mov
movs
mov
or
mov
ins
aad
retf
sahf
push
and
retf
mov
mov
mov
sub
jle
pop
leave
add
fild
add
cmp
sub
test
adc
pop
inc
pusha
jnp
iret
inc
nop
cs
je
mov
lods
mov
mov
mov
into
gs
xchg
fs
xor
(bad)
jl
add
sar
dec
lea
scas
add
daa
outs
pop
fs
xor
mov
ins
not
aas
mov
sahf
sub
or
stc
call
inc
pop
mov
xchg
daa
or
pop
sub
aad
push
jl
loope
(bad)
inc
sti
ins
pop
mov
into
push
xchg
daa
mov
out
test
jb
jge
dec
call
ja
mov
nop
scas
pop
jge
push
dec
fisubr
push
shr
(bad)
mov
xor
jbe
enter
and
stc
cmps
xor
and
cmp
xor
loope
movs
adc
rcr
scas
push
frstor
xchg
adc
cli
popa
arpl
sub
enter
fcmovnu
inc
sbb
and
jo
pop
push
enter
mov
pushw
mov
lahf
fsub
iret
inc
test
dec
js
imul
stos
mov
mov
in
jmp
int3
aaa
clc
daa
div
fimul
sti
jnp
nop
clc
loope
into
cmc
sub
pop
mov
cmc
out
mov
adc
shr
push
add
sbb
repz
sub
in
cli
in
(bad)
cli
movs
enter
loopne
shr
pop
xor
mov
frstor
lock
mov
jp
sub
repnz
fwait
inc
in
push
sbb
sbb
jns
(bad)
cmp
and
xlat
push
sub
(bad)
mov
imul
and
push
fcmovnbe
test
aam
popa
adc
sbb
push
movs
jecxz
ja
jbe
aas
jp
xor
in
sub
out
sbb
out
cmc
mov
jmp
loope
aaa
sub
or
mov
inc
jae
xchg
jg
imul
mov
mul
scas
ja
ss
mov
pop
pop
sar
dec
xchg
push
push
das
cmp
sahf
inc
xor
mov
imul
icebp
sahf
push
sbb
xor
mov
or
ins
lds
jne
fst
or
mov
(bad)
push
cmp
enter
jl
jnp
psrlw
push
leave
repnz
push
cli
ret
pusha
jae
test
ss
inc
add
jmpw
push
push
pop
cld
shl
inc
movs
xor
add
inc
pop
ror
inc
xor
outs
sbb
mov
lods
(bad)
pusha
test
in
call
pop
arpl
sub
jns
ret
xchg
ror
push
mov
push
sti
(bad)
mov
rcl
rdmsr
repnz
mov
mov
call
into
test
jbe
jp
pop
(bad)
and
call
mov
(bad)
fistp
adc
sub
push
mov
outs
xchg
add
sub
mov
mov
shr
ror
push
mov
ror
call
pop
cmp
(bad)
or
and
std
add
test
movs
mov
jmp
xchg
mov
cmp
and
loope
arpl
cmp
sbb
push
mov
inc
lock
xor
jne
cmps
push
adc
jmp
popa
and
mov
push
and
jno
into
add
nop
push
iret
push
mov
(bad)
(bad)
sub
or
pop
shl
mov
pop
fild
dec
scas
xchg
xor
sbb
leave
sub
inc
jecxz
add
je
adc
and
out
ds
ja
fmul
mov
pop
cdq
inc
cli
adc
push
jecxz
and
jmp
dec
or
jp
imul
(bad)
stc
(bad)
into
fadd
rcl
addr16
(bad)
cmp
jmp
adc
ins
sub
ss
push
jne
mov
(bad)
mov
mov
loop
dec
cmps
jp
fcmove
ins
add
lods
sbb
in
and
out
sbb
sub
ins
push
fs
adc
ds
fucomi
sbb
adc
lea
xor
pop
pusha
(bad)
and
fild
fild
shl
mov
adc
jae
iret
and
inc
movs
scas
xlat
cdq
mov
cmp
retf
xor
iret
push
xchg
pop
sbb
pop
mov
jg
repz
cdq
scas
xlat
push
push
mov
xchg
or
and
pop
(bad)
dec
shl
push
arpl
mov
stos
jo
(bad)
jne
shl
adc
imul
mov
dec
mov
idiv
sti
pop
mul
sbb
int
and
jmp
nop
test
mov
daa
out
ror
sbb
pop
faddp
mov
test
rcr
test
fdiv
test
ds
ss
add
fs
out
out
mov
inc
xchg
dec
pop
push
cli
adc
jb
sbb
rcr
push
push
mul
lock
pop
inc
mov
sbb
push
je
jnp
add
repz
add
popa
push
in
std
loop
dec
enter
mov
pop
in
mov
mov
out
jle
fnstsw
aad
ror
or
stc
fdivr
cmps
xchg
retf
mov
imul
or
dec
push
leave
retf
das
add
imul
inc
lock
mov
push
jp
adc
data16
jns
push
jmp
(bad)
push
js
fs
mov
jg
addr16
pusha
(bad)
(bad)
sbb
inc
in
gs
(bad)
popf
mov
pop
pop
fsubrp
fistp
mov
mov
and
cdq
(bad)
es
push
fiadd
cwde
mov
out
fistp
nop
pop
and
movs
test
dec
push
outs
push
cdq
inc
sub
jbe
stc
jle
mov
or
mov
ins
retf
cmp
lds
hlt
mov
(bad)
xchg
retf
imul
repz
sub
aas
packsswb
pusha
adc
inc
and
jl
cli
rcr
push
jae
lahf
mov
xchg
xchg
cmc
cmp
jo
int3
sub
mov
sub
inc
ds
repnz
sbb
shr
mov
or
hlt
push
jb
jge
pop
lahf
or
arpl
push
pop
fstp
fisubr
popf
xchg
scas
mov
adc
mov
dec
imul
shr
jmp
imul
pop
pop
mov
sub
add
pop
mov
and
imul
jmp
fcomp
stos
jns
sbb
pop
out
fcmovu
sub
inc
cli
pop
dec
mov
hlt
jae
sbb
daa
xor
jbe
loop
sti
nop
mov
jne
mov
sbb
sbb
mov
jnp
cmp
cld
sub
or
mov
repz
fwait
int
mov
pop
movs
mov
xchg
sub
stos
std
loop
movs
inc
and
loopne
sbb
mov
dec
jb
gs
adc
aas
popf
push
scas
push
xor
add
cmp
addr16
rcr
xchg
das
cwde
scas
push
or
les
xchg
sbb
xchg
stos
mov
push
ins
push
jl
jbe
and
test
mov
popa
or
xor
std
bsf
imul
or
rcr
fwait
mov
xchg
xor
xchg
fimul
pop
loope
xchg
ret
jl
icebp
jge
fldcw
sub
push
enter
sbb
mov
pop
xchg
cs
or
mov
adc
jo
mov
inc
add
xchg
not
cmp
xchg
dec
inc
xchg
lds
or
dec
add
out
movs
jg
jmp
rcl
sbb
es
push
mov
data16
scas
pop
call
fcomp
jno
bound
dec
dec
ja
or
jecxz
adc
mov
fld
jae
hlt
das
cli
retf
lock
sub
cmc
(bad)
lds
cmp
inc
mov
cmc
pop
adc
std
push
cmps
jecxz
fadd
push
and
jno
xchg
xchg
cli
dec
jl
lds
mov
add
or
sub
hlt
mov
stos
xchg
and
or
clc
push
adc
(bad)
in
pop
adc
leave
xchg
xchg
inc
push
cmp
call
and
mov
in
mov
dec
and
mov
pop
mov
(bad)
push
inc
(bad)
nop
xor
in
es
cmp
push
out
rcl
pop
xchg
add
mov
inc
pop
cmps
test
ins
loope
mov
movs
out
pop
into
sbb
fisubr
ss
das
pop
cmp
cmp
cli
adc
push
in
mov
mov
and
cmps
in
push
imul
cmp
mov
dec
test
dec
jl
leave
stc
inc
ins
pop
sahf
loop
mov
mov
mov
sbb
in
pop
or
or
in
sahf
xor
dec
test
shr
ins
pop
dec
mov
xor
call
dec
xor
jns
add
pop
loope
cli
xchg
jmp
leave
and
test
dec
jmp
fadd
(bad)
cli
mov
out
cdq
add
push
inc
inc
xor
sbb
cmp
addr16
xchg
fcmove
dec
outs
ins
jbe
popa
and
xchg
or
mov
mov
mov
ja
stos
lock
pop
out
push
xor
jno
scas
mov
iret
sub
lahf
dec
(bad)
out
pop
mov
jecxz
icebp
imul
xchg
and
sbb
xchg
mov
sub
add
xor
inc
jmp
leave
in
cmc
sub
sbb
lahf
int
mul
mov
add
cmps
enter
data16
ja
or
jne
test
sbb
push
in
dec
sbb
mov
loop
and
popf
mov
cmp
jns
fwait
out
or
sar
(bad)
(bad)
sbb
mov
mov
loop
xchg
int
xchg
jb
fiadd
sub
out
mov
mov
and
xchg
pop
mov
pop
aam
cwde
mov
sub
xchg
xor
shl
pusha
shl
pop
imul
mov
je
mov
frstor
jmp
adc
inc
pop
ins
idiv
repz
outs
scas
in
jecxz
imul
gs
div
rcl
mov
ret
inc
sub
push
add
fs
cld
into
mov
in
cmp
jnp
jl
int3
movs
cwde
mov
dec
xchg
jmp
xchg
push
call
mov
data16
jns
test
mov
jbe
retf
das
mov
jae
ja
out
mov
pop
out
sub
arpl
push
push
jno
pop
(bad)
cmps
push
in
push
ficomp
cmc
pop
mov
jmp
test
outs
in
pusha
outs
imul
lea
jmp
ss
aas
aas
mov
inc
pop
in
pop
sar
movs
sbb
cmp
jns
and
int3
ficomp
jmp
xchg
imul
call
stos
or
jl
das
sysret
jp
push
cmps
pushf
xor
dec
xchg
push
es
aaa
lds
cdq
jne
lods
mov
pop
sub
js
xchg
mov
cmps
jno
cmp
mov
lahf
add
xor
fsubr
out
adc
out
or
sbb
js
push
mov
xor
imul
fbld
and
push
fcom
in
test
lahf
sar
mov
mov
sub
dec
lea
inc
inc
and
pop
shl
xor
jp
test
ror
sub
push
add
pusha
pop
cwde
inc
arpl
and
inc
les
shr
rol
dec
xor
out
or
data16
in
repz
stos
xchg
xchg
mov
pop
xchg
ret
(bad)
cmp
pop
outs
xlat
repnz
daa
icebp
pushf
pop
sar
inc
mov
std
div
push
leave
test
mov
sahf
mov
aam
in
fisubr
call
repz
icebp
je
or
sub
retf
jo
leave
stos
adc
repnz
inc
fild
jge
xor
mov
pusha
(bad)
push
xchg
ret
xor
add
in
clc
jmp
mov
outs
xor
push
xchg
bound
(bad)
imul
mov
add
inc
jns
dec
xor
and
cwd
xchg
xlat
mov
in
and
add
outs
adc
cld
xchg
xchg
ds
movs
call
jb
sbb
xchg
and
shl
or
jne
(bad)
jmp
jmp
and
and
mov
xchg
inc
aam
hlt
push
sub
ret
push
adc
test
std
xor
inc
sar
xchg
mov
mul
fist
xchg
in
mov
xor
inc
mov
mov
hlt
gs
aad
fistp
icebp
mov
xor
xor
pushf
fild
clc
imul
add
inc
icebp
ds
cmps
sub
cwde
cmp
sub
mov
push
data16
out
cmp
jmp
je
sbb
ret
ret
test
inc
jnp
dec
push
jmp
mov
xchg
add
sti
xchg
push
adc
das
xchg
movs
cmp
inc
add
xor
dec
mov
jg
ficomp
std
pop
push
pause
jbe
popf
retf
push
inc
in
fist
and
pop
push
sub
int3
fwait
jp
mov
xchg
sahf
lods
pop
test
std
int
scas
push
add
test
fs
cmp
fimul
jge
ds
clc
sbb
cmps
jecxz
adc
mov
fst
(bad)
xor
dec
cmps
(bad)
ss
cwde
inc
icebp
mov
sbb
push
test
int
mov
mov
push
sbb
cmp
cmp
jae
jbe
or
out
inc
(bad)
enter
rcr
je
mov
fld
xchg
dec
pop
int
lds
ja
mov
popf
out
xor
mul
jmp
pushf
mul
not
mov
aam
xor
vmptrst
test
lods
dec
sti
push
cmps
gs
jle
stc
shl
jp
outs
or
into
out
mov
cmp
(bad)
sbb
aas
sbb
jb
mov
mov
dec
and
xor
add
mov
das
dec
fs
mov
mov
out
pop
inc
mov
test
xor
(bad)
xchg
ret
les
data16
or
cdq
xlat
stos
cmp
sbb
pop
jmp
cmc
rdmsr
(bad)
xchg
xchg
adc
cmp
push
inc
push
inc
(bad)
int3
pop
cmps
hlt
movs
mov
push
ja
or
ret
(bad)
ds
outs
call
sub
imul
jecxz
sbb
mov
add
sub
and
(bad)
mov
jge
mov
add
das
xchg
call
das
aas
adc
mov
sti
dec
shl
jmp
mov
in
or
ret
push
adc
in
in
xchg
mov
ins
rcr
mov
mov
add
retf
jge
arpl
leave
test
shr
frstor
popa
mov
sar
scas
stos
pop
xor
xchg
(bad)
out
popw
push
fist
enter
into
test
xor
aas
mov
out
jns
jne
push
jmp
pop
xor
outs
dec
aaa
jg
aad
add
push
into
mov
push
lock
push
pop
xchg
mov
xchg
or
and
add
aam
or
sbb
jno
dec
xlat
or
gs
lahf
push
dec
sbb
jp
js
leave
push
(bad)
push
push
aam
pusha
imul
sti
jb
leave
outs
ins
jbe
movs
inc
outs
sub
retf
mov
int3
(bad)
icebp
(bad)
es
enterw
dec
xchg
mov
jnp
sub
retf
add
push
sbb
inc
pop
sbb
test
mov
push
mov
cli
adc
addr16
mov
xlat
vpmulhw
scas
inc
sbb
hlt
arpl
adc
sbb
popf
jmp
outs
mov
std
add
fiadd
dec
sub
hlt
push
push
fdiv
outs
push
in
mov
jmp
mov
push
fnstenv
fs
cmps
adc
mov
fdiv
std
cmc
aaa
adc
ds
jmp
xchg
sub
outs
popf
rcl
fdiv
and
or
lock
out
push
pop
jno
jle
stc
(bad)
cs
mov
retf
inc
enter
xchg
xchg
addr16
xchg
mul
inc
fadd
enter
lock
call
cmp
adc
push
ins
xchg
and
push
jmp
das
and
sub
(bad)
in
mov
dec
mov
jno
xor
jae
mov
xchg
add
pushf
fdivr
and
jnp
cmc
mov
cld
mov
test
pusha
div
sbb
inc
xchg
ja
xor
xor
inc
mul
jbe
repnz
inc
mov
jb
pextrw
jecxz
mov
loopne
push
mov
gs
cwde
movs
push
dec
out
ret
sbb
in
cs
xor
inc
fwait
sub
ds
xor
inc
icebp
in
sub
inc
cmp
(bad)
push
icebp
add
xchg
ror
mov
jl
jmp
xchg
fnsave
pop
and
popa
pop
push
jno
cmp
xor
lahf
jmp
inc
mov
cmp
sbb
inc
mov
dec
scas
add
ins
ret
pop
push
cmps
call
(bad)
das
pop
hlt
stc
sub
loopne
sbb
call
repz
mov
push
cs
(bad)
int3
adc
dec
or
faddp
into
xchg
(bad)
fild
ds
mov
adc
daa
push
or
cld
mov
lock
sub
add
mov
mov
fnstsw
jmp
add
xor
push
add
mov
retf
lea
inc
xor
add
mov
in
or
mov
mov
pop
or
sar
aaa
adc
mov
js
pop
cmps
mov
xchg
pop
mov
inc
sub
cmps
repz
in
push
jns
aaa
dec
push
or
sahf
xor
dec
cmp
xor
sbb
clc
dec
xor
sbb
inc
push
iret
mov
rcl
fisub
out
mov
lahf
or
push
dec
adc
lods
push
mov
or
nop
lock
mov
stc
cmps
xchg
fstp
add
jmp
push
shl
ins
mov
in
out
jg
cdq
sub
mov
pop
xchg
mov
dec
adc
sbb
int
adc
das
out
scas
and
cmc
mov
cld
mov
sahf
(bad)
xor
out
sub
imul
test
ja
xchg
repz
sti
and
mov
push
sti
xchg
mov
clc
sti
adc
cmps
jle
and
push
lods
pop
mov
jns
addr16
xor
and
jle
push
pop
cmps
jecxz
cwde
xchg
ss
pop
jg
adc
dec
sub
sbb
jae
iret
jge
fidivr
lea
and
lahf
adc
mov
jle
push
(bad)
pop
neg
push
pop
dec
outs
push
or
xchg
iret
scas
popa
js
xchg
inc
je
pop
cmp
bts
rol
das
ret
das
push
dec
lods
dec
inc
mov
jmp
data16
or
leave
jae
push
push
and
mov
push
test
data16
or
or
ja
mov
test
adc
xchg
jecxz
out
cmp
movs
shl
pop
clts
push
std
and
retf
mov
call
cmc
inc
lods
in
sbb
les
call
pop
push
jle
jl
cli
test
xor
nop
data16
sub
adc
jl
fisttp
or
lahf
in
xor
cld
and
cmp
jmp
jmp
or
loop
iret
jg
add
cwde
fwait
lahf
dec
cwde
push
mov
stos
arpl
ins
int3
mov
stos
and
mov
push
pop
mov
test
cwde
push
xchg
loop
mov
cli
retf
jno
lds
mov
stc
hlt
sbb
cmp
jp
and
popf
or
sbb
jecxz
mov
xlat
loop
fld
cmps
dec
push
mov
inc
sub
add
dec
sbb
ins
mov
ds
icebp
cs
sbb
push
test
sar
shl
js
lods
mov
loopne
mov
dec
pop
fstp
and
std
mov
inc
into
scas
loopne
aas
lods
add
mov
scas
nop
(bad)
ret
and
and
nop
push
repnz
repz
mov
push
push
fs
vpminub
xor
push
sub
sti
stos
adc
(bad)
or
xchg
mul
ins
mov
or
daa
(bad)
enter
pop
sbb
push
add
jnp
mov
lea
fld
fs
mov
out
nop
mov
push
int
mov
stc
(bad)
(bad)
or
call
pop
cwde
jg
in
add
clc
fiadd
dec
xchg
les
mov
xchg
xlat
add
or
(bad)
sbb
rcr
cmpps
mov
sub
mov
push
inc
jmp
pushf
push
add
idiv
lods
popa
xchg
push
and
inc
sbb
psubsw
fs
stos
scas
mov
fnstsw
cdq
mov
jne
adc
leave
or
inc
das
rol
cmp
hlt
xor
xchg
cmp
xchg
ja
push
(bad)
call
(bad)
ret
jnp
or
pop
or
jecxz
mov
std
push
and
xchg
cmp
pop
aaa
fisubr
jns
pop
adc
or
add
int
xchg
dec
inc
pop
repnz
mov
pop
(bad)
mov
das
cmp
jecxz
enter
mov
mov
(bad)
enter
hlt
pop
cwde
mov
ror
mov
loop
inc
lahf
sbb
jno
adc
int3
mov
aam
fild
xor
cdq
push
movs
in
rcl
jp
inc
repnz
outs
dec
scas
shl
pop
cmp
jnp
xchg
push
and
in
mov
xchg
ficomp
dec
sbb
or
stos
ret
jl
ret
jo
das
adc
sub
(bad)
test
out
test
inc
fstp
aaa
mov
cld
push
fwait
push
dec
adc
mov
je
pop
fadd
add
mov
and
mov
sbb
push
int
sbb
(bad)
pop
jl
out
imul
fadd
shl
fs
xor
pusha
pop
dec
ja
scas
dec
xor
fsubr
cld
cmp
jae
ins
dec
into
xlat
repnz
test
xor
(bad)
out
mov
xchg
rcr
add
xor
jmp
mov
gs
lods
jno
cmp
and
adc
test
mov
sbb
sbb
test
addr16
xchg
mov
pusha
fld
repz
cmp
xchg
les
test
sti
test
repnz
pop
imul
aas
hlt
loope
out
dec
ss
xlat
in
jge
mov
push
(bad)
mov
adc
mov
sub
stos
sahf
mov
(bad)
outs
add
mov
into
mov
push
jns
(bad)
push
xchg
xchg
mov
and
(bad)
idiv
imul
inc
aam
inc
cmp
push
inc
mov
sbb
out
xchg
xchg
pushf
inc
mov
dec
cmp
cld
dec
mov
xlat
add
push
movs
jecxz
and
push
push
loop
push
sub
add
mov
pushf
mov
idiv
or
mov
push
imul
loope
cmp
mov
jb
mov
stos
add
mov
cdq
mov
loope
fsubr
lock
pop
jmp
xlat
xchg
mov
inc
push
mov
pushf
(bad)
xchg
test
pop
mov
jmp
mov
scas
aaa
and
cwde
xor
and
jno
(bad)
out
mov
cmps
repz
dec
xlat
jb
inc
and
cmp
(bad)
out
jg
aaa
arpl
and
mov
jne
jle
test
out
dec
adc
sbb
retf
mov
(bad)
test
mov
inc
pop
pop
mov
or
fmul
push
sar
test
dec
test
cmp
arpl
ficom
inc
sysexit
arpl
pusha
xchg
int3
push
sti
(bad)
in
ret
jns
rcr
xchg
aas
out
inc
das
addr16
rcr
repz
test
xchg
xor
jl
adc
idiv
inc
mov
(bad)
jp
into
fiadd
mov
cmp
test
scas
aam
inc
inc
out
cwde
push
leave
push
jle
inc
les
xor
add
push
repnz
sub
jle
ret
pop
sub
and
and
sbb
pop
and
sbb
xor
ins
loope
fmulp
push
outs
in
mov
mov
(bad)
and
cwde
enter
sub
inc
ss
lock
test
popf
cmps
mov
inc
mov
xor
inc
or
mov
stos
mov
mov
push
popf
lock
or
mov
je
push
xor
not
imul
cmp
ret
ret
jmp
cmp
fimul
(bad)
icebp
sub
(bad)
pop
dec
jo
cli
loope
xor
ss
mov
jb
sub
push
lea
movs
mov
xchg
and
clc
cld
dec
xchg
movq
jo
xchg
push
fiadd
mov
mov
adc
mov
add
pop
cmp
push
push
int
je
push
push
sub
loope
cmp
sub
popa
xor
push
les
xchg
dec
popa
gs
sbb
push
add
pop
jl
inc
adc
mov
dec
adc
rcr
les
fdiv
xor
addr16
xor
movs
mov
dec
jecxz
xchg
lock
cmp
and
jmp
pop
ss
imul
gs
outs
stc
xchg
in
inc
mov
sti
sbb
xchg
pop
enter
push
pusha
retf
or
jns
clc
mov
jge
dec
imul
out
jg
jmp
cmp
adc
mov
ret
not
push
(bad)
cmc
mov
(bad)
into
or
(bad)
repnz
cld
jb
popa
xor
xor
sbb
(bad)
mov
cmp
dec
cmps
(bad)
nop
or
or
hlt
cwde
inc
cld
sub
and
sub
and
sbb
(bad)
pop
inc
dec
sbb
add
sbb
jp
fwait
sbb
in
and
scas
popa
repz
sbb
push
mov
cmc
sbb
jmp
popf
in
pop
fwait
mov
out
stos
stos
(bad)
call
mov
jne
xchg
ret
cmp
jns
(bad)
das
mov
adc
sti
rcr
mov
(bad)
dec
jp
shr
popa
adc
sbb
xor
fwait
in
ds
pusha
(bad)
inc
mov
ins
adc
xor
aam
dec
test
push
mov
pop
stos
adc
mov
not
add
inc
mov
(bad)
sub
lods
jecxz
fcmovnb
adc
in
call
pop
mov
mov
mov
ins
add
iret
hlt
mov
dec
xor
dec
(bad)
loopne
fptan
adc
rcr
arpl
mov
aaa
and
and
loopne
call
sub
pop
xor
loope
lea
mov
cmps
js
(bad)
mov
mov
inc
sti
lods
imul
xor
sub
jmp
int
cwde
imul
jecxz
mov
(bad)
cmc
and
jne
mov
movhlps
mov
ror
mov
stos
fsub
mov
outs
push
push
imul
in
into
xchg
ss
jne
or
dec
sub
jl
cmp
imul
fistp
sbb
cmp
push
xor
fwait
in
repz
push
push
inc
nop
loope
mov
loopne
iret
add
sub
test
mov
dec
mov
andnps
jmp
loop
popf
jnp
or
cmp
xchg
cmc
cmp
imul
mov
das
test
sbb
mov
or
jnp
jb
mov
mov
mov
pop
movs
sbb
sbb
mov
shl
les
or
pusha
xor
(bad)
xchg
xchg
sbb
cmp
mov
arpl
das
cwde
inc
pop
mov
xor
add
sub
push
cli
movs
js
rcl
sub
repz
add
es
inc
shl
jo
mov
mov
clc
mov
lahf
pop
outs
xchg
xchg
je
(bad)
push
jl
test
idiv
xlat
pop
or
xchg
jge
jp
fist
adc
xchg
jge
mov
retf
push
pushf
pop
test
pop
mov
cld
mov
into
pop
(bad)
sub
adc
mov
xor
fnstenv
pop
cmps
cmps
ret
mov
or
in
inc
mov
inc
movs
jb
xchg
loopne
aas
add
push
sbb
sbb
rcl
daa
cmp
or
sbb
mov
sub
je
leave
sub
ins
push
xor
xchg
int3
sub
arpl
retf
vmread
jmp
mov
sbb
jl
aas
mov
fstp
mov
sbb
cmps
out
mov
cli
fild
xor
fcomp
mov
cmps
cmps
mov
and
dec
jnp
call
ja
pop
mov
sub
sbb
call
mov
mov
stos
popa
mov
mov
mov
mov
cmps
sub
inc
push
mov
lahf
sub
test
inc
clc
sub
aaa
ins
inc
stos
pop
xor
std
pop
aas
mov
dec
cdq
clc
dec
outs
jge
data16
test
call
add
pop
scas
push
das
push
loopne
je
js
xchg
inc
je
pop
push
pop
repnz
sahf
sti
aad
dec
dec
cmps
xor
je
repnz
out
dec
add
add
lea
sub
(bad)
sahf
test
xchg
mov
inc
cmp
hlt
xchg
adc
je
jle
xor
push
sub
sbb
ret
xor
sahf
inc
daa
push
pop
test
lock
sbb
jno
sub
or
mov
(bad)
out
sub
mov
cmp
clc
push
cwde
pop
loopne
leave
xchg
mov
lahf
push
pop
adc
and
rcr
or
push
out
test
leave
sti
and
pop
adc
dec
sbb
lock
mov
inc
push
dec
ds
pop
or
or
out
dec
mov
std
dec
sbb
std
jno
mov
or
xlat
enter
jbe
and
push
cmp
and
(bad)
in
push
xor
test
in
pop
push
jno
sub
dec
jmp
push
jno
push
adc
sbb
nop
in
test
xchg
dec
pop
sahf
inc
jno
adc
pop
dec
and
repnz
retf
push
outs
sub
in
pop
in
lods
cmps
cmp
sub
mov
call
or
mov
fld
dec
cmc
fwait
add
sub
aas
ss
leave
or
cmp
pop
out
sub
sub
adc
or
sub
je
jge
inc
lods
outs
test
inc
push
js
dec
or
(bad)
and
loopne
or
test
push
test
cmp
mov
adc
fwait
inc
sbb
ret
pushf
push
in
mov
mov
hlt
in
test
xchg
jle
mov
cdq
push
jo
ja
iret
rol
out
aas
or
sbb
ror
add
add
ret
push
mov
into
jmp
push
cmps
ins
mov
pop
push
cmp
jmp
fbld
push
mov
jae
dec
pop
jg
inc
pop
pop
das
jmp
ss
int3
icebp
test
mov
js
jle
dec
ret
test
jmp
test
xlat
inc
pop
nop
sbb
adc
adc
cmps
int3
sbb
mov
bound
mov
lds
shl
cs
pop
ds
push
pop
mov
cmp
add
mov
xchg
jbe
mov
int3
icebp
pop
popf
jns
(bad)
mov
sbb
cwde
push
repz
fld
inc
aas
(bad)
cs
add
and
dec
lods
or
cmp
dec
es
sbb
mov
and
repz
jecxz
push
ds
ret
pop
ficom
fadd
mov
sahf
ins
cmp
popa
adc
(bad)
adc
add
js
(bad)
xor
movs
(bad)
icebp
push
shr
ins
clc
jle
mov
call
daa
nop
xor
mov
gs
add
outs
div
xchg
dec
mov
fnstenv
or
cmc
aad
sub
jmp
adc
lock
dec
mov
cmp
push
inc
push
repz
shl
aaa
call
mov
jbe
clc
or
mov
mov
adc
fnstenv
ins
and
shl
mov
pushf
and
packuswb
jmp
add
push
xchg
gs
jnp
push
sub
jae
dec
pop
(bad)
call
stc
xchg
imul
rol
sub
or
jge
test
jp
cmps
dec
and
bound
dec
es
repz
in
cmp
mov
push
jge
or
dec
jne
(bad)
aas
ret
mov
pop
jb
bound
in
hlt
lods
sahf
mov
call
out
jle
jle
dec
adc
fsub
ror
mov
ror
or
or
inc
cmp
rol
xchg
es
cli
test
fdivr
lock
out
imul
scas
xchg
mov
dec
cmps
and
dec
or
gs
mov
cmp
(bad)
movq
call
xchg
adc
jg
inc
push
adc
jo
je
inc
xor
fisttp
sbb
sbb
add
movs
daa
cmp
mov
movs
out
(bad)
in
cmp
xor
les
cmp
pusha
in
jecxz
xor
inc
xchg
xchg
les
in
push
dec
test
enter
pop
pop
loope
mov
lahf
cmp
retf
mov
jp
movs
popa
push
cwde
shl
and
(bad)
jmp
ja
push
fisttp
inc
add
inc
jmp
sbb
rcl
out
out
dec
or
and
stc
shl
pushf
lock
popa
mov
(bad)
(bad)
ret
adc
movs
cmp
arpl
clc
lahf
add
lods
fmul
adc
inc
mov
push
cmc
or
iret
pop
sub
mov
mov
pusha
ds
test
dec
(bad)
test
pop
repz
ss
retf
aas
pop
jmp
outs
and
leave
push
xor
sbb
ror
sub
xor
iret
int3
inc
mov
aad
push
or
in
push
stos
pusha
jecxz
and
pandn
dec
sbb
sti
adc
mov
outs
or
xor
mov
or
cmp
mov
int3
push
and
and
aas
push
cmp
mov
push
pop
aad
aas
push
sub
jl
and
loope
push
std
loope
push
xor
cmc
outs
es
pop
fcomi
and
rcl
xchg
pop
fadd
out
scas
mov
out
mov
xor
pop
(bad)
cwde
inc
or
cs
mov
inc
cwde
mov
cwde
sti
std
jno
loop
int
mov
aam
dec
outs
icebp
dec
pop
and
push
cli
jae
fcom
push
xchg
imul
pusha
hlt
sub
adc
nop
mov
cdq
lea
add
in
adc
ret
(bad)
(bad)
sti
test
dec
(bad)
scas
(bad)
adc
pop
sti
inc
enter
dec
xchg
sub
mov
bnd
add
add
aas
jae
mov
inc
leave
mov
pushf
into
out
jbe
les
aaa
add
inc
cmp
jge
inc
data16
pop
dec
cmp
mov
sub
push
retf
mov
sahf
add
in
push
jmp
out
xor
loope
mov
or
das
dec
cli
pop
aam
nop
mov
sahf
std
pusha
cwde
mov
(bad)
mov
cmp
fwait
(bad)
in
pop
movs
mov
into
ds
sahf
jmp
or
lods
ins
into
mov
mov
jg
add
enter
fimul
stc
adc
loop
stos
jb
leave
ret
adc
mov
mov
jl
inc
sub
gs
jle
and
(bad)
cwde
mov
or
jnp
movs
mov
adc
jmp
mov
lods
aad
xchg
cld
hlt
dec
cmp
stc
neg
push
stos
out
outs
jbe
add
cs
xor
inc
es
ds
mov
mov
out
jne
les
leave
shl
bound
mov
loopne
lods
mov
inc
int
push
xor
mov
dec
sbb
sub
cdq
cdq
scas
jmp
adc
idiv
rol
jmp
fisubr
mov
add
je
into
repz
sbb
(bad)
cmps
inc
mov
push
in
mov
ja
pop
test
shr
test
sbb
daa
loop
cmp
or
push
mov
or
mov
ins
xchg
add
sub
dec
and
inc
dec
mov
test
loop
sub
fdiv
push
adc
or
and
mov
pop
sub
ds
adc
dec
dec
pop
imul
jns
pop
repz
cmp
inc
out
ss
(bad)
js
scas
jo
mov
jae
call
es
jae
push
inc
(bad)
loopne
(bad)
out
xchg
sbb
and
scas
and
ins
arpl
enter
sbb
mov
adc
xor
push
pop
xchg
mov
jmp
bound
and
mov
rol
fs
ret
push
jne
rol
xor
sub
push
fnstsw
retf
lods
and
ja
lds
bound
sub
mov
or
loopne
test
sub
cmp
fadd
call
int
pop
and
sti
dec
jge
inc
push
pcmpgtd
mov
jg
jge
fdivr
jmp
push
adc
outs
std
sbb
movs
fild
lahf
dec
cli
pop
stc
addr16
mov
cmp
cdq
jg
add
ins
inc
jo
xchg
mov
clc
or
test
outs
ret
inc
(bad)
xlat
add
dec
pusha
mov
inc
inc
fcos
shl
imul
dec
dec
jmp
je
fadd
and
dec
repnz
out
xlat
add
fild
jmp
rol
movs
pop
sahf
sub
dec
je
and
pop
xchg
sub
popa
lods
mov
xor
cmp
test
add
cli
dec
pop
ror
fst
imul
inc
lds
gs
sar
dec
dec
mov
sub
lahf
gs
xor
pusha
iret
fs
sbb
xor
jno
cdq
dec
or
daa
adc
(bad)
retf
xor
test
aam
lods
outs
bnd
xor
or
sbb
sbb
pop
scas
xchg
dec
sbb
mov
rol
sbb
adc
ret
jecxz
fcomp
outs
sub
mov
jne
popa
arpl
inc
clc
fist
xchg
(bad)
push
cmc
or
test
add
enter
test
call
test
mov
int
mov
mov
(bad)
mul
shl
xchg
popa
cmc
sbb
bnd
jns
repnz
jo
mov
out
lods
popa
cwde
mov
pop
jmp
push
cmps
sbb
call
aad
push
fild
lea
or
fs
sub
ds
out
cld
mov
jo
jge
jge
inc
pmuludq
mov
pop
pop
xchg
dec
xchg
rol
push
ret
cmps
jnp
aas
aaa
fs
mov
fs
push
mov
lods
sub
cmp
jecxz
dec
adc
bound
gs
js
aas
sub
fwait
in
das
movs
dec
retf
mov
aas
shl
xchg
cmp
xchg
shl
push
adc
out
mov
push
pop
repnz
neg
pop
sub
loop
dec
adc
pop
int3
les
push
imul
loope
mov
sbb
inc
jecxz
loopne
aam
mov
cdq
jmp
retf
inc
or
sub
test
dec
jl
es
ins
mov
retf
jae
(bad)
and
inc
enter
lea
mov
sar
xor
adc
xor
stos
pop
dec
dec
setnp
call
pop
pop
fsub
inc
cmp
pop
mov
hlt
(bad)
iret
mul
push
sub
into
xor
pop
cmp
ficomp
cmp
or
enter
imul
jge
mov
bound
aad
and
fisttp
xor
mov
std
int3
lahf
into
int3
gs
clc
adc
adc
gs
mov
fwait
daa
rcr
adc
cmp
pusha
stc
pop
stc
xor
pop
mov
fimul
add
mov
(bad)
sbb
jbe
xor
(bad)
lahf
bound
push
add
jo
loop
xlat
ret
data16
test
fist
mov
xchg
stc
icebp
pop
push
add
jae
jno
js
adc
mov
jp
mov
cmp
test
sbb
mov
in
or
aam
shl
lods
mov
mov
dec
js
in
add
stc
cmps
mov
stc
xchg
cmp
test
dec
movs
in
(bad)
pop
push
jo
out
pop
and
push
aad
pop
sbb
inc
xor
sub
sbb
mov
scas
fiadd
in
jmp
push
jo
in
inc
daa
stos
(bad)
mov
repz
add
mov
aaa
out
cmps
cwde
je
mov
lock
mov
mov
mov
call
jmp
mov
sbb
inc
sub
pop
cmp
in
dec
jb
fistp
cmp
dec
into
popf
inc
and
(bad)
lds
cmp
popa
pushf
pusha
pop
or
aam
loope
out
cs
inc
stc
cs
mov
mov
out
cdq
pusha
add
dec
mov
cwde
cmp
or
(bad)
pop
cwde
iret
(bad)
mov
in
xchg
mov
cmps
xor
push
les
push
adc
or
sar
ja
inc
xor
pop
mov
sub
mov
xor
fisub
inc
adc
(bad)
and
mov
sbb
mov
and
inc
imul
(bad)
push
push
xor
jmp
cmp
scas
pop
in
dec
mov
sbb
push
popa
ins
pop
aad
add
call
cs
fcomp
test
jl
adc
jbe
ficom
cli
dec
pop
gs
jle
or
fadd
xchg
mov
dec
ds
lock
dec
mov
xlat
stos
sbb
imul
cmp
ins
and
retf
cmps
or
jne
add
and
fidiv
imul
gs
or
adc
imul
jno
mov
mov
adc
out
es
push
std
xor
xchg
mov
cmovns
pop
stc
add
mov
jne
scas
mov
jb
pop
fistp
mov
repnz
mov
out
mov
inc
jnp
xor
dec
ja
in
nop
loop
inc
stos
push
fs
add
repnz
es
xor
adc
mov
mov
mov
xchg
dec
in
ins
mov
push
shl
dec
addr16
cld
popf
nop
jmp
mov
xchg
xchg
mov
scas
test
or
mov
fst
xlat
fsubr
dec
sub
and
ins
adc
mov
jp
push
sub
sbb
rcl
pop
icebp
inc
push
ins
dec
push
and
in
sbb
iret
pop
movs
fcomp
aad
inc
std
inc
pusha
outs
pop
(bad)
pop
add
lods
scas
push
jne
cmps
into
test
mov
inc
dec
xor
out
or
xchg
mov
push
retf
xchg
outs
fwait
out
jne
inc
push
rol
mov
int
sahf
mov
jmp
push
lea
int
sub
cmp
jecxz
cmp
mov
push
les
stc
pusha
xchg
es
movs
std
scas
std
and
jmp
mov
pop
scas
icebp
cmp
mov
call
fucom
scas
ins
aaa
shr
sbb
lea
imul
and
sbb
std
outs
inc
outs
mov
or
cmp
xor
add
xchg
stc
push
das
jle
inc
xor
int
shr
jp
out
fisttp
imul
retf
ror
sub
push
add
inc
mov
adc
sbb
sahf
gs
fsub
stos
mov
xor
mov
lds
xchg
lods
jb
xchg
ficomp
or
pop
lahf
xor
outs
adc
add
bnd
mov
jmp
ins
sub
ffree
cs
mov
xchg
shr
cs
fldenv
ja
mov
loopne
adc
sahf
and
sbb
imul
pop
and
pop
push
ficomp
cli
inc
jae
ja
xlat
das
inc
sub
int
sbb
jo
mov
pop
pop
jmp
sahf
push
repz
jb
mov
outs
mov
add
dec
imul
and
inc
imul
mov
scas
in
mov
adc
push
cmp
jmp
cmps
ins
adc
sub
sbb
jl
jnp
call
loope
or
cmp
sahf
adc
xchg
jnp
call
and
daa
(bad)
(bad)
xor
push
xlat
fnsave
sar
cmp
cli
(bad)
mov
loope
mov
cmps
out
iret
xor
lea
mov
mov
cvtps2pd
out
ja
out
aas
ret
ins
imul
xor
lds
call
add
mov
mov
into
shr
pusha
mov
xchg
cwde
and
lods
jle
scas
jmp
aad
xchg
nop
xchg
add
pop
ins
dec
pop
sti
sub
sar
cmps
dec
test
sub
mov
pushf
sub
push
push
xchg
jno
xchg
fcom
dec
out
mov
outs
stos
enter
mov
mov
mov
sbb
pop
or
cmps
pushf
and
repnz
and
or
mov
inc
out
pop
mov
cmp
mov
push
dec
in
out
arpl
(bad)
jnp
xor
inc
xor
inc
adc
mov
mov
sub
popa
cmp
movs
xchg
jp
jno
inc
sbb
jmp
shr
xchg
jecxz
or
mov
mov
add
out
jge
rol
cmp
mov
fucomi
jmp
pop
addr16
mov
popf
int3
aaa
enter
push
xchg
push
pop
mov
fisttp
adc
ins
or
div
out
dec
mov
or
mov
mov
jbe
xchg
inc
outs
jmp
sub
(bad)
fcmovbe
arpl
xchg
push
cmp
mov
inc
pop
imul
nop
repnz
xor
sti
dec
mov
dec
xchg
movs
cwde
xor
das
pop
push
pop
ret
xor
imul
xor
push
(bad)
test
(bad)
sbb
loopne
xchg
ret
and
jb
shl
and
add
fmul
call
xchg
push
or
sbb
lods
xchg
bnd
popa
sub
imul
or
sbb
dec
daa
pop
ret
pop
jnp
xor
aaa
sbb
inc
jns
dec
or
clc
mov
cmps
cmp
lods
fild
std
test
jne
test
ffree
inc
and
in
nop
(bad)
cmp
nop
inc
push
test
mov
retf
or
dec
into
sub
(bad)
mov
jp
fist
jno
stos
lods
push
sbb
lds
mov
xchg
cmp
adc
and
or
(bad)
repnz
ins
frstor
or
push
mov
sti
(bad)
ds
xor
data16
pusha
dec
xor
cmp
fistp
xchg
mov
jbe
std
call
dec
cmove
es
loopne
(bad)
out
daa
sub
test
push
cs
and
mov
inc
int3
adc
dec
js
fsubrp
push
sti
in
movd
mov
mov
(bad)
dec
addr16
sub
ret
push
in
popf
add
icebp
stos
add
bound
rcl
pop
inc
(bad)
(bad)
shl
xor
rcl
pusha
add
add
popf
push
add
movs
lods
test
sbb
ja
in
(bad)
in
jnp
out
test
daa
mov
mov
inc
pop
inc
je
jno
jo
in
or
add
sbb
mov
sub
or
push
ja
push
scas
xor
and
call
dec
push
loop
pushf
jnp
add
lods
lea
fisttp
mov
xchg
icebp
pop
inc
mov
icebp
push
cmp
pop
and
and
aad
mov
imul
push
sbb
retf
loopne
fstp
in
loopne
cmp
jb
gs
xchg
shl
imul
out
sbb
scas
adc
xor
scas
repz
jge
and
(bad)
loopne
xchg
and
xchg
pop
(bad)
shr
test
test
lds
sbb
xchg
mov
jno
xor
add
xor
and
mov
(bad)
adc
imul
and
cdq
sbb
movs
xor
ret
xchg
fsubr
les
daa
jmp
mov
mov
in
into
or
adc
sbb
repz
mov
(bad)
sub
addr16
mov
aas
or
push
call
inc
xchg
jne
ins
(bad)
mov
out
mov
add
mov
(bad)
sbb
stc
mov
outs
test
add
pop
pop
xchg
popa
aaa
loope
jge
arpl
cmc
fs
cmps
dec
xor
fwait
adc
cmp
lods
xchg
cs
or
cmps
retf
cmps
xchg
bound
or
call
push
and
pop
iret
mov
mov
enter
xchg
inc
ret
xchg
cs
add
xchg
pop
cdq
enter
cmp
push
aad
lods
(bad)
outs
hlt
or
adc
hlt
ret
fnsavew
sub
add
fcomp
sbb
fnstsw
enter
outs
mov
jl
movs
test
dec
or
int3
dec
cli
sbb
leave
cdq
inc
jmp
pop
push
add
jb
sub
mov
imul
in
fild
daa
in
(bad)
mov
mov
cmp
xor
and
call
clc
inc
mov
loop
mov
cmp
mov
mov
gs
loopne
fs
mov
xchg
dec
jg
sbb
stos
mov
xor
ret
int3
loop
retf
popf
xor
xchg
mov
std
push
data16
add
push
popa
test
ror
mov
mov
out
push
aaa
push
in
out
aad
mov
fld
sbb
rol
mov
fidivr
repnz
xchg
xlat
hlt
jae
adc
adc
xor
bnd
dec
push
lea
(bad)
stos
test
dec
sub
mov
in
sub
std
shl
dec
xor
sub
stos
push
pop
sub
fs
and
inc
sbb
jg
dec
ret
jmp
pop
inc
into
mov
xchg
add
xor
xor
xchg
jne
push
jno
loopne
fstp
sti
fstp
hlt
shl
mov
test
fild
or
out
scas
ret
ret
sbb
das
xor
fdivr
jmp
scas
push
cmp
mov
and
jbe
push
mov
pop
mov
cmp
test
xlat
xchg
in
imul
mov
cmps
scas
lods
(bad)
out
push
push
icebp
sti
dec
dec
call
lahf
dec
mov
mov
lods
or
inc
mov
jns
xor
lahf
pop
mov
fucom
int
xchg
stc
ror
pop
out
aad
hlt
cmp
rcl
add
push
mov
push
scas
dec
ror
sub
pop
pop
jnp
int3
xlat
mov
retf
loope
gs
inc
push
adc
add
and
pop
int
push
ds
nop
fidiv
rol
cmp
fisubr
adc
jmp
in
and
(bad)
rcl
cli
js
gs
cmp
enter
and
popf
arpl
(bad)
repz
mov
jae
push
cs
(bad)
into
cmp
xchg
xor
cmps
inc
sti
and
not
push
hlt
in
mov
and
xor
ins
shl
mov
xchg
fadd
sbb
sbb
loopne
rcl
loope
inc
in
lods
and
(bad)
out
call
mov
adc
aaa
cmp
outs
push
pop
arpl
je
enter
sti
fild
xchg
mov
nop
and
push
adc
cmp
cwde
cmp
adc
frstor
push
mov
dec
and
cmp
inc
push
movs
sub
push
cmps
dec
(bad)
aad
fisub
stos
test
mov
inc
movs
mov
xchg
(bad)
daa
inc
jne
pop
push
dec
es
push
rcl
dec
retf
jae
(bad)
je
mov
ds
int
mov
add
push
out
jl
in
icebp
sbb
adc
mov
(bad)
cmp
mov
iret
ins
aaa
iret
xchg
pushf
lods
jno
sbb
lods
stc
sub
mov
(bad)
adc
pop
retf
sbb
out
lock
push
inc
inc
jle
jo
lock
popf
mov
or
inc
rol
movs
inc
xchg
adc
popa
sar
jl
cmp
test
inc
cmc
(bad)
stos
retf
lahf
dec
dec
jns
call
push
cmp
aad
or
xor
test
adc
xor
sbb
xchg
adc
fdivr
mov
sti
dec
popa
mov
sub
hlt
icebp
mov
sub
inc
mov
ins
jmp
mov
lock
jle
rol
sahf
mov
cdq
pop
(bad)
int3
pop
push
aad
mov
pop
mov
(bad)
xor
adc
cmp
inc
mov
and
mov
mov
cmp
and
scas
sbb
scas
retf
jns
imul
icebp
mov
repz
movs
push
aam
out
mov
mov
fmul
xor
rol
jns
and
mov
jnp
inc
in
sub
jne
and
dec
pop
cmp
fnsave
sub
mov
mov
xchg
inc
test
and
ds
aas
shl
ret
pop
xchg
enter
mov
fld
pop
add
aad
stos
adc
push
inc
sbb
(bad)
or
xchg
xchg
out
cmps
add
mov
ja
addr16
xchg
sbb
arpl
gs
jb
loop
ins
scas
xchg
pop
nop
test
daa
pop
push
dec
mov
sbb
fcmovu
fs
xor
ss
inc
int
mov
pop
addr16
mov
in
in
ja
push
add
outs
push
les
mov
mov
js
add
test
cmp
ins
cmp
ds
int
shl
mov
adc
adc
mov
dec
adc
aas
pop
in
jecxz
xchg
mov
lahf
xchg
les
outs
pop
jmp
fst
cmp
xchg
movs
and
xchg
int3
movs
cli
push
mov
xor
ror
inc
test
add
mov
add
add
fild
and
or
lock
nop
addr16
dec
push
je
xchg
jns
ja
push
jmp
ss
jecxz
jl
pop
mov
or
jbe
dec
jns
hlt
or
sbb
cwde
nop
sub
and
push
xchg
mov
mov
mov
in
into
mov
fwait
pop
jne
sbb
push
out
mov
and
mov
mov
js
push
mov
rol
cmp
hlt
mov
call
xor
test
mov
xchg
or
jnp
sbb
push
nop
popf
push
outs
inc
stos
cmp
hlt
inc
jg
push
gs
push
movs
loopne
mov
rol
(bad)
push
pop
fld
sub
js
sub
sub
ja
dec
loop
jo
pop
ret
mov
xor
push
cmp
push
inc
cmp
sar
add
dec
mov
not
jno
pop
inc
jle
mov
dec
sub
lods
loope
mov
jmp
ins
or
cmc
out
cs
inc
pop
add
and
not
mov
dec
mov
popa
mov
sbb
cwde
ret
int3
pop
jmp
xchg
jl
out
shl
jl
mov
fcmovnbe
adc
jmp
mov
enter
xchg
dec
inc
aas
mov
or
mov
ja
jge
jmp
cs
mov
fisub
mov
jmp
cmp
call
ds
js
xlat
inc
retf
pop
xchg
lds
xchg
mov
leave
(bad)
popa
jnp
test
or
(bad)
retf
(bad)
sbb
imul
shr
jns
jnp
add
repz
push
push
imul
mov
jns
ds
jp
rep
ficom
out
hlt
push
pop
adc
xor
sti
add
ds
xchg
jns
test
cmps
scas
outs
sbb
pop
push
mov
push
sbb
test
dec
nop
test
sub
cmp
out
dec
sub
jl
sbb
mov
lods
add
push
jo
mov
xchg
retf
cmp
jl
pop
hlt
into
xor
xor
sbb
movs
fcomp
dec
inc
jo
(bad)
stc
aaa
lea
and
cmp
push
dec
cli
fdiv
sti
xor
ret
movs
sub
loop
pushf
or
mul
aaa
push
adc
pop
lfs
ret
arpl
sbb
repnz
xlat
fnsave
xor
pop
pop
xchg
push
sbb
jo
xchg
jbe
dec
inc
retf
stos
mov
mov
lods
into
ret
scas
sahf
std
arpl
xchg
sti
pop
sub
pop
jne
sub
cmp
movs
hlt
xchg
loop
in
pop
call
lock
dec
jg
gs
adc
stos
div
push
sar
pop
inc
mov
push
and
mov
call
pop
cmps
lods
fld
sbb
ss
mov
cmp
or
scas
in
cmps
frstor
les
cmp
and
mov
jmp
push
(bad)
shl
out
(bad)
cmps
dec
and
dec
inc
into
push
jns
jmp
mov
pop
std
hlt
bound
fist
adc
iret
rol
ja
jb
xor
test
xchg
int3
push
mov
ret
fisub
out
in
test
push
add
(bad)
mov
jl
daa
pop
pop
pop
popf
rcl
mov
(bad)
hlt
test
aam
mov
je
jmp
xchg
jo
cmp
data16
jb
mov
scas
lock
ds
aad
mov
pop
cmp
out
adc
punpcklbw
inc
pushf
dec
stos
cld
js
add
sub
popa
enter
test
in
ja
int3
or
cmps
fld
in
stos
lods
cmc
ret
stos
mov
sbb
ror
lahf
test
add
aas
add
pop
stos
pop
sbb
and
enter
cmps
push
sbb
sub
pushf
cmps
mov
jge
stos
cmc
inc
mov
xor
and
pop
call
test
sbb
leave
cwde
or
add
lahf
inc
sbb
push
les
out
sar
imul
mov
mov
adc
or
call
mov
push
and
xor
add
mov
rcl
sbb
and
(bad)
nop
jo
test
adc
mov
mov
sbb
mov
xor
and
sub
fild
xor
adc
scas
aas
lods
arpl
es
cmp
and
lods
or
or
cwde
push
pop
js
mov
mov
cmc
push
push
xchg
xor
mov
jae
ds
xor
mov
es
mov
dec
inc
iret
mov
das
inc
scas
leave
mov
jmp
sub
dec
fstp
jg
lds
mov
jbe
enter
mov
sub
repnz
push
push
xlat
rol
pushf
push
in
and
(bad)
les
jne
outs
jo
jecxz
push
lods
xlat
icebp
sbb
std
and
mov
cmps
cwde
lods
mov
call
and
iret
fbld
jae
ins
test
ins
test
jl
mov
jns
aad
xor
sub
xor
push
mov
shr
mov
push
inc
inc
xor
cmp
add
lods
jo
in
mov
inc
sub
test
rcl
and
lods
mov
xchg
mov
ja
call
inc
push
les
fisub
aam
jmp
cli
pop
outs
enter
leave
lock
pop
daa
inc
push
scas
test
and
in
lea
ins
test
shr
cs
and
mov
outs
cmp
or
movs
adc
pop
arpl
out
sub
and
jle
adc
inc
mov
or
inc
aas
jo
lock
adc
dec
shl
pop
mov
adc
mov
xor
pusha
sub
adc
inc
add
mov
jns
rcr
or
daa
movs
movs
mov
(bad)
cmp
dec
jg
or
gs
mov
cli
aas
and
dec
push
loope
lods
dec
xor
in
add
aas
outs
push
test
das
add
cmc
ja
xor
rol
and
jne
inc
mov
cmc
aad
movs
mov
mov
stos
jne
inc
inc
xor
in
inc
popa
cmps
je
add
inc
mov
xor
cmps
fbstp
dec
add
or
icebp
sbb
addr16
jg
inc
lods
js
not
jl
mov
call
stos
inc
lods
imul
shr
push
lock
outs
in
retf
call
retf
mov
lods
fmul
jmp
or
stc
outs
ja
inc
sbb
or
mov
push
xor
dec
call
jmp
jbe
dec
rcr
(bad)
stc
das
sbb
adc
scas
push
xor
outs
repz
es
inc
push
pop
sahf
ins
(bad)
imul
aad
mov
addr16
xchg
xchg
dec
ins
inc
int3
cmp
imul
cs
lods
out
inc
ret
test
xor
cmp
xchg
scas
pushf
shl
or
jb
int3
popa
xchg
fld
fld
js
ds
push
sbb
sub
(bad)
pop
aas
or
mov
xchg
(bad)
mov
mov
sbb
daa
adc
daa
mov
aad
add
or
push
retf
inc
and
inc
int3
lea
movs
and
leave
dec
(bad)
call
pop
jae
loope
sahf
mov
xchg
std
enter
mov
out
inc
mov
jl
jb
inc
or
jecxz
es
call
pop
call
cmc
xchg
dec
sub
dec
add
jmp
cmc
push
out
repnz
ins
fcmovbe
fadd
cmp
out
inc
sub
fisttp
ret
dec
push
dec
adc
cli
mov
add
and
rcl
cmc
cmps
nop
ins
icebp
xor
xor
and
add
push
call
daa
ror
test
xchg
jb
and
adc
inc
cli
xor
dec
pop
jbe
adc
cwde
fidiv
in
mov
retf
jnp
jle
in
and
push
pop
push
outs
and
mov
bound
lods
sti
mov
jns
cwde
sbb
pop
mov
push
push
es
retf
sbb
ss
xchg
mov
push
mov
repz
movs
popa
xchg
sahf
cdq
xchg
or
push
cmp
jmp
outs
push
popa
mov
outs
call
pop
xchg
stos
push
arpl
and
push
mov
add
outs
or
adc
mov
ret
xchg
pop
mov
(bad)
in
sbb
inc
pop
mov
test
aaa
push
xchg
clc
mov
cmp
push
call
bnd
outs
jl
in
int
es
outs
xchg
pusha
xlat
or
and
adc
mov
mov
inc
mov
xor
mov
mov
mov
jo
adc
lods
xor
mov
daa
add
out
lahf
int3
mov
cmps
jb
jae
xchg
xchg
cmp
jb
pop
rol
xchg
idiv
sub
outs
jge
cmc
cld
jle
sahf
mov
imul
push
or
sub
int3
dec
out
push
mov
and
or
ret
xor
inc
call
rol
std
in
xor
mov
in
jb
adc
aas
mov
pop
sub
xchg
outs
jo
adc
jb
in
jns
push
or
das
pop
shr
test
dec
xchg
js
cmps
fucompp
pop
inc
adc
mov
add
cld
das
adc
add
mov
push
(bad)
fdivp
mov
imul
enter
jno
sahf
ret
xchg
imul
not
mov
or
mov
mov
in
xor
lods
in
add
loopne
movs
pop
sbb
inc
and
cmps
lahf
and
add
jb
push
out
cmp
inc
or
pop
sti
mov
stos
xor
out
sti
mov
pusha
das
cmp
sub
adc
and
adc
xor
dec
cld
cs
adc
les
sbb
push
xchg
ja
dec
mov
or
out
mov
sub
push
pop
mov
sbb
jb
sahf
pop
sti
and
pop
movs
dec
xor
pop
push
cmc
ss
(bad)
push
fwait
sub
mov
jle
std
adc
cmp
lods
cmp
inc
retf
sbb
sbb
mov
sub
(bad)
fist
and
repz
jl
and
imul
jl
jae
popf
pop
xor
fcom
push
xchg
jno
mov
adc
dec
sahf
(bad)
jle
add
out
popa
push
cmps
xchg
cli
mov
icebp
lahf
test
pusha
(bad)
pushf
add
sub
jne
dec
sub
adc
xchg
cmp
cdq
fnstcw
pop
aam
mov
sbb
mov
pop
retf
mov
ja
sbb
sbb
cmp
leave
add
xchg
bound
shl
or
ffreep
fwait
xor
jnp
cli
(bad)
mov
pop
sti
inc
or
jg
jmp
jmp
sbb
xchg
jl
nop
les
movs
out
iret
je
dec
cmc
popa
mov
out
mov
(bad)
int
popf
and
mov
cmc
mov
aaa
or
push
push
or
lods
mov
pushf
arpl
push
add
and
cmp
scas
bound
ret
or
push
xor
adc
add
leave
mov
xchg
xor
mov
inc
stos
dec
mov
aad
inc
aas
ror
repnz
xchg
xor
cli
sbb
inc
sub
out
sbb
cmp
stos
gs
sahf
(bad)
fucom
jg
inc
pop
call
lods
fs
es
cmp
sbb
push
mov
fwait
int
js
les
fisub
mov
cmp
fisttp
adc
sbb
push
fs
push
sbb
movs
xchg
pop
or
fcom
pop
fdivp
cmps
arpl
into
bound
pop
div
(bad)
(bad)
lea
mov
jp
movs
std
(bad)
cs
pop
dec
sub
mov
adc
ins
js
xchg
cdq
jo
emms
jp
pusha
loop
push
mov
retf
wrmsr
inc
adc
cmp
push
in
dec
xchg
fs
iret
clc
scas
xchg
add
push
popa
and
jns
outs
outs
pop
inc
mov
mov
js
lods
mov
mov
cmp
mov
aad
std
mul
mov
mov
in
stos
mov
and
jne
sub
mov
(bad)
dec
ds
daa
mov
ror
or
jg
(bad)
(bad)
lock
in
je
push
daa
dec
inc
loope
sub
call
mov
jecxz
imul
pop
and
loope
ret
dec
push
jno
adc
in
pop
cwde
loope
sub
cwde
out
popa
mov
not
push
or
sub
jns
cmp
adc
lods
sbb
cmp
shr
sbb
fwait
sbb
mov
sub
add
hlt
inc
and
mov
xchg
jmp
sub
scas
and
adc
neg
dec
popf
movs
in
lock
mov
push
cld
pop
mov
fbld
jp
popf
stc
push
mov
sbb
xor
leave
and
adc
jle
or
shl
ret
and
(bad)
in
jnp
in
or
push
(bad)
loope
test
test
pop
dec
mov
push
push
dec
pop
mov
outs
push
pop
mov
imul
stos
leave
pop
inc
jg
sbb
xchg
mov
jnp
scas
into
pop
je
sbb
popf
jae
or
psrld
outs
pop
cwde
js
bound
shl
out
aad
fndisi(8087
mov
push
aad
jp
inc
xchg
push
inc
xchg
mov
xor
inc
iret
icebp
stos
or
jge
(bad)
push
leave
sub
aaa
dec
push
cs
xchg
xchg
outs
inc
mov
xchg
daa
(bad)
mov
sub
nop
pop
or
(bad)
sbb
xchg
push
lahf
mov
jo
gs
fisttp
sbb
mov
push
inc
mov
loope
imul
push
movlps
out
push
mov
popf
pop
rol
pop
xchg
sahf
xor
mov
mov
pusha
pop
adc
sbb
(bad)
daa
imul
sbb
or
add
neg
dec
or
mov
aad
pushf
out
inc
gs
inc
xor
pop
sub
mov
or
bnd
and
lods
addr16
cmp
dec
jle
lock
repz
xchg
cmp
aad
out
xchg
xchg
aad
jbe
inc
call
inc
and
pop
cmp
imul
add
jno
mov
js
sbb
and
pop
int3
push
ss
jl
xchg
call
sbb
in
pop
xchg
mov
and
xor
mov
in
into
or
bound
jno
ss
jno
es
xchg
out
jb
(bad)
loopne
in
cwde
mov
dec
sbb
cmp
and
jno
lods
cwde
test
jg
cmp
inc
shl
shr
aam
pop
les
push
into
popf
cmps
or
ss
mov
or
ins
bound
ins
fs
mov
dec
icebp
jns
clc
lahf
mov
fstp
xor
es
mov
push
mov
mov
and
mov
sub
or
jo
fldenv
mov
sbb
push
(bad)
push
pushf
fnsave
aas
push
dec
xchg
inc
dec
add
sbb
fdiv
nop
out
cmp
mov
inc
cmp
stos
call
shl
cdq
inc
xchg
mov
cmp
in
dec
mov
cmp
mov
out
mov
iret
int
ret
sub
inc
mov
cmp
mov
inc
ret
daa
call
test
aam
sahf
icebp
sar
push
dec
clc
lods
cdq
dec
imul
xlat
(bad)
fist
stos
test
sbb
sahf
mov
add
test
fadd
mov
dec
push
movs
sar
addr16
xor
ret
out
adc
and
pop
pushf
push
sbb
xchg
xor
jmp
idiv
inc
neg
in
fild
loopne
loope
cli
rcl
xor
sbb
push
adc
xor
jp
and
or
rcl
sar
stos
into
pop
push
popa
sub
sub
jae
mov
add
push
ins
mov
xor
aaa
xor
mov
dec
fdiv
or
mov
vpmulhuw
jmp
push
adc
adc
inc
add
jp
xor
data16
or
or
sub
dec
pop
fld
xchg
add
out
jg
sbb
cmps
es
or
sub
xor
ret
outs
xchg
mov
xchg
mov
loop
jae
aad
jle
fstp
sbb
mov
jb
dec
outs
mov
in
jecxz
pop
(bad)
cmps
aaa
adc
ja
call
jmp
jp
lods
add
xor
xor
adc
jl
inc
push
mov
push
pusha
push
int
and
push
repnz
popf
or
aam
daa
push
hlt
test
jp
jbe
lods
test
test
out
repz
ret
in
or
cmp
(bad)
jmp
mov
xchg
mov
dec
cmp
inc
mov
inc
sub
setp
dec
and
aas
mov
jge
aas
xor
fwait
inc
pop
rol
pop
in
jg
add
shl
mov
es
(bad)
aaa
push
scas
or
xor
daa
lds
rcr
push
mov
or
jge
repnz
sbb
(bad)
loopne
popf
popf
outs
jg
jge
fyl2x
shl
movs
pop
sbb
dec
pop
push
bound
sbb
lahf
cmps
lahf
push
or
inc
fild
mov
mov
movs
sub
shl
pop
adc
mov
(bad)
mov
xchg
xchg
repnz
inc
sub
frstor
xlat
pop
jbe
cmp
and
push
fcomi
mov
xchg
lock
movs
sbb
fist
sbb
les
jl
jnp
push
out
sub
sahf
xor
xor
or
sub
gs
inc
jne
lds
jb
mov
aas
and
mov
push
dec
mov
out
or
ds
js
aaa
sti
inc
or
mov
mov
imul
inc
or
sbb
std
jmp
retf
mov
ror
push
outs
nop
jmp
out
mov
pop
push
lods
xlat
retf
shl
fnstenv
idiv
jg
aad
(bad)
push
cmp
iret
in
pop
jge
xor
adc
pop
xor
test
mul
sub
pop
push
lods
arpl
fidivr
(bad)
rcl
clc
fisttp
mov
in
mov
and
out
loope
pop
into
xchg
push
cmps
cmp
mov
dec
inc
ja
scas
fcmove
sub
and
or
adc
dec
add
or
inc
cmp
inc
stos
movs
xchg
xor
or
fld
cmps
rcr
sbb
jge
pop
adc
jb
stos
es
leave
or
xor
cmc
lods
inc
div
dec
cmp
loope
jns
mov
and
(bad)
jle
pop
mov
enter
shl
std
enter
mov
xor
mov
xchg
dec
cld
(bad)
stos
ins
xchg
mov
(bad)
gs
sbb
cmps
add
xor
int3
call
pop
mov
gs
ds
int
push
mov
adc
push
jno
cmp
clc
cmc
out
aad
stos
outs
or
xor
push
bound
mov
push
sbb
or
and
out
retf
jno
test
scas
mov
sub
loope
clc
int3
mov
ins
mov
test
xchg
setno
push
dec
lods
popa
sbb
(bad)
adc
inc
pop
repz
ds
dec
mov
jo
mov
adc
fadd
sbb
(bad)
mov
mov
push
jb
lahf
mov
jmp
test
arpl
add
call
inc
xlat
sahf
jg
or
adc
xor
and
in
jnp
xor
jbe
mov
or
sti
outs
add
dec
imul
inc
jne
jne
cmps
push
test
lea
and
out
shl
push
mov
jns
addr16
int
xor
or
jge
sbb
sbb
xlat
mov
pop
push
sahf
push
jbe
stos
xchg
fcomp
nop
jns
aas
lods
and
dec
adc
adc
fs
das
pop
aam
add
bnd
sub
mov
fwait
shl
stc
mov
mov
adc
rcr
dec
cmp
jmp
stos
cmp
xor
cmp
ins
xor
icebp
imul
add
and
popa
mul
daa
fwait
push
sub
or
pop
push
adc
lds
or
sub
mov
and
fcomp
inc
shl
cmps
ficom
and
arpl
neg
cmp
dec
push
mov
aad
std
cli
dec
push
loop
scas
jns
lods
enter
adc
or
mov
cmp
mov
mov
call
bound
adc
out
(bad)
les
adc
in
es
aas
cmps
nop
lods
gs
ds
nop
xchg
cs
push
mov
fcmovb
pushf
pushf
and
push
outs
popf
clc
in
outs
pop
fild
pop
or
jo
add
pop
and
movs
repnz
cli
and
inc
mov
(bad)
arpl
inc
scas
js
mov
mov
jg
mov
int3
shl
outs
cmp
or
mov
inc
imul
adc
mov
fldenv
adc
inc
(bad)
sbb
xlat
jae
adc
push
stc
repz
jmp
loope
mov
xchg
les
(bad)
ficom
mov
or
ss
test
imul
dec
loope
xor
lods
add
push
outs
dec
sub
sub
call
lahf
retf
outs
push
or
add
retf
aad
inc
sub
out
inc
imul
adc
add
popf
mov
pop
pop
adc
xor
xor
sbb
out
xor
inc
mov
mov
int3
mov
daa
and
jo
cli
push
es
aaa
inc
mov
adc
fbstp
push
sub
cmc
inc
or
sub
jp
xchg
dec
mov
push
xchg
fcom
and
or
pop
dec
and
mov
out
clc
adc
loope
out
pushf
mov
stos
test
in
cld
pushf
or
cmp
mov
in
call
scas
mov
xlat
jl
push
xchg
ins
pop
add
cli
inc
xchg
add
aam
sbb
cmps
or
ins
cmp
jne
mov
(bad)
adc
(bad)
lock
dec
arpl
jg
adc
lods
or
aas
iret
je
cld
xchg
retf
test
mov
inc
aas
stos
push
inc
inc
mov
and
movs
push
dec
mov
pop
lea
lods
adc
jg
jmp
int
sbb
mov
mov
scas
mov
lds
xchg
jecxz
and
push
sub
jmp
inc
push
ficomp
ins
mov
mov
add
sub
sbb
or
mov
repnz
adc
inc
mov
dec
cmp
adc
cmc
out
push
(bad)
xlat
cmps
out
sbb
shl
frstor
inc
add
adc
std
mov
adc
retf
jge
retf
xchg
(bad)
les
jl
mov
mov
lock
popa
rcl
inc
in
arpl
div
add
fsubr
aas
aam
rcr
aas
out
jp
add
mov
out
lahf
mov
xor
mov
push
out
dec
test
sbb
retf
sub
xor
pop
dec
mov
or
cld
out
aas
push
ins
jae
pusha
sub
jne
inc
stc
pusha
cmc
jo
pop
sub
shl
nop
sbb
push
sub
shl
jg
in
out
push
jnp
cmp
in
repz
rcr
mov
lahf
js
fidiv
inc
and
inc
std
ja
sbb
int3
lods
mov
das
jns
sbb
fidiv
cmp
mov
inc
mov
xchg
mov
inc
fst
je
hlt
lahf
mov
mov
lods
dec
cs
int
std
xor
mov
jecxz
in
sbb
inc
daa
cmp
and
mov
icebp
adc
sti
bound
ins
(bad)
cld
test
pop
arpl
dec
ja
cwde
cmp
mov
retf
adc
jb
psadbw
pop
jmp
ins
jmp
sub
test
xchg
mov
mov
mov
data16
pushf
cmp
sbb
mov
ret
mov
test
data16
in
jnp
pop
(bad)
xchg
sbb
in
fstp
mov
cld
loope
xchg
lea
pop
test
cwde
nop
and
mov
test
test
outs
mov
jmp
(bad)
pop
ror
mov
mov
movs
int3
cmp
adc
scas
test
stc
fiadd
or
scas
outs
mov
mov
mov
(bad)
icebp
jecxz
mov
push
call
ds
cdq
mov
loopne
mov
mov
and
fnstsw
retf
leave
stc
mov
ret
push
aas
adc
push
mov
loop
scas
sub
es
ror
out
push
inc
scas
sbb
mov
repz
xlat
nop
inc
inc
outs
mov
pop
xor
xlat
or
test
and
xchg
adc
cmps
adc
repnz
mov
add
fiadd
aaa
dec
int3
pop
mov
dec
sub
movs
sti
cmp
mov
cwde
add
cmp
(bad)
cmc
rol
pop
push
imul
pop
cmps
dec
push
iret
or
cmp
xor
aad
xor
stos
push
fistp
xchg
jnp
jb
pop
mov
ins
rcl
xchg
mov
push
xor
jl
cmp
out
es
jmp
mov
jbe
stos
pop
das
mov
movs
mov
push
jp
push
dec
in
rol
movs
es
leave
mov
cli
arpl
test
movs
(bad)
rcr
xchg
push
addr16
mov
mov
push
jbe
push
icebp
adc
out
jb
xchg
push
lods
dec
call
inc
rcr
xchg
or
outs
xor
inc
js
arpl
and
xor
fwait
dec
inc
popaw
pushf
xor
push
out
int3
mov
clc
add
out
mov
ret
sub
bound
jae
dec
fldenv
inc
shr
aaa
retf
push
inc
int3
(bad)
aad
jl
retf
cwde
pop
scas
je
adc
push
cmp
in
xor
je
cdq
popf
inc
imul
mov
(bad)
sub
xlat
fcom
ja
inc
mov
sti
in
les
inc
adc
mov
and
pop
push
cmp
movs
fisttp
repz
dec
mov
xor
(bad)
or
fld
lods
in
mov
or
stos
js
or
out
retf
enter
cmc
inc
push
ins
out
sub
mov
movs
cli
inc
jl
sbb
pop
or
fist
sub
mov
(bad)
pop
and
adc
(bad)
xchg
out
data16
or
cmps
inc
pop
xlat
repz
mov
sub
shr
leave
and
xor
leave
(bad)
out
and
add
test
sub
push
cmc
add
stos
std
lods
mov
test
icebp
jns
std
add
call
adc
push
xor
cmp
push
(bad)
idiv
pop
loopne
sub
sbb
std
mov
mov
aam
ficomp
sbb
and
mov
clc
out
jbe
repnz
or
out
pop
and
es
in
ror
data16
popa
push
push
pop
push
add
arpl
fnstenv
cmps
in
jle
icebp
push
mov
es
sbb
repz
mov
push
not
and
mov
and
dec
daa
push
xchg
outs
out
push
jp
lods
add
ins
add
mov
(bad)
into
adc
std
jl
push
sbb
push
(bad)
bound
pop
mov
add
and
jns
movs
push
cld
adc
mov
call
mov
addr16
cmp
std
inc
jo
dec
push
dec
aam
mov
out
push
mov
mov
mov
int3
mov
mov
cmps
dec
cmp
dec
push
mov
mov
mov
test
mov
shl
jb
lahf
lea
setne
dec
out
mov
mov
imul
repnz
xor
or
xor
data16
cld
mov
shl
pop
divps
in
and
pop
mov
imul
pop
or
je
and
mov
movs
sub
inc
retf
int3
jne
imul
dec
fld
imul
sbb
bound
push
push
mov
shl
ds
jb
xchg
pop
and
xchg
jecxz
push
mov
cmc
or
mov
scas
cmp
jns
jnp
add
mov
repnz
sbb
xor
xchg
xor
sbb
inc
ret
xchg
push
cmp
or
shr
sbb
cmp
xchg
xor
sub
sbb
repz
leave
inc
ins
lods
imul
dec
cmp
add
xchg
jb
(bad)
cmc
popf
movs
xchg
cli
repnz
xchg
jnp
adc
dec
or
inc
mov
pushf
(bad)
int3
mov
sbb
dec
xor
adc
fs
push
and
dec
jmp
stos
add
(bad)
aad
pushf
aam
jg
add
enter
scas
pxor
int3
fild
cmp
push
pop
repnz
stos
mov
cmp
pop
outs
mov
ror
inc
lds
push
sar
add
out
jge
and
not
mov
mov
nop
adc
jmp
push
mov
enter
adc
clc
add
repnz
addr16
mov
mov
movs
sbb
fld
jle
mov
pop
pop
mov
cli
stos
adc
mov
cmp
xchg
int3
imul
xor
xor
retf
jge
mov
push
xchg
ins
ss
xor
call
add
sahf
mov
rol
pop
(bad)
mov
movs
jno
outs
inc
shr
dec
outs
(bad)
mov
sbb
fadd
leave
jne
xor
jno
mov
jne
dec
mov
stos
and
in
pusha
les
int
mov
or
add
loopne
mov
pushf
out
dec
dec
mov
pop
push
lods
dec
fild
push
cmp
mov
add
mov
mov
pop
pop
sbb
loopne
adc
clc
enter
popf
scas
or
sub
or
pop
rcl
and
lods
push
loopne
call
mov
jnp
push
mov
and
xor
ja
mov
mov
shl
dec
push
call
sub
sub
fsub
cmp
(bad)
fidivr
and
mov
push
mov
jp
pop
inc
dec
aad
jbe
add
iret
xlat
aad
cli
ds
sbb
mov
cli
jle
mov
out
mov
hlt
xlat
leave
or
mov
and
loop
add
jp
lahf
ror
jmp
pop
hlt
jns
aam
fsub
jecxz
xchg
lds
test
shl
aam
pusha
sub
mov
add
test
movs
add
mul
jp
pusha
xchg
add
jecxz
sahf
lahf
jno
or
jb
mov
xchg
mov
add
int
mov
mov
ss
dec
pusha
mov
fwait
addr16
mov
mov
mov
scas
hlt
jne
mov
jp
xchg
aaa
mov
gs
scas
lods
push
mov
fsubr
pop
and
inc
jge
repz
bndstx
mov
cli
fbstp
push
push
movs
adc
xor
xchg
div
jae
jmp
aad
outs
js
push
cwde
enter
into
les
jnp
std
mov
outs
mov
js
adc
inc
or
arpl
jg
adc
mov
mov
loope
pop
jle
mov
int3
dec
and
pop
ja
mov
pop
xlat
jp
push
out
push
mov
aaa
xor
cmp
lods
push
add
xor
push
movs
mov
jne
cs
out
push
inc
aas
push
out
jbe
loop
sbb
pop
push
inc
sbb
or
add
daa
mov
popf
sbb
enter
push
add
pop
aaa
mov
fld
cli
mov
fadd
ficom
lods
fmul
cli
int
sub
cld
fisubr
cwde
cmp
sub
inc
dec
pop
fnstenv
sbb
push
bound
push
in
test
bound
and
mov
adc
popa
mov
xchg
cmp
push
sbb
inc
mov
out
jle
aas
in
adc
mov
mov
aad
cmp
in
inc
imul
movs
mov
mov
loope
and
test
xor
cmps
loop
dec
imul
cmps
fsubr
mov
sub
repnz
into
xchg
sbb
pop
cmp
push
fcmovnb
icebp
out
add
mov
mov
jns
pop
mov
out
fs
les
aam
pop
jns
dec
jmp
sub
mov
push
add
push
movs
and
mov
push
mov
xchg
jno
fidivr
push
test
sbb
xchg
or
imul
out
push
retf
ins
fcompp
dec
or
push
sar
push
js
test
call
xchg
fild
ds
sub
mov
outs
call
sbb
movs
mov
fwait
add
out
(bad)
scas
aas
cdq
dec
pop
cmp
lock
dec
ja
xor
mov
and
(bad)
mov
xor
xor
mov
leave
jns
lods
imul
dec
mov
add
call
fimul
addr16
jno
cmp
stos
jno
jp
mov
rcr
dec
mov
add
sbb
add
outs
dec
je
je
dec
jle
pusha
jg
mov
int
neg
ficom
push
mov
inc
fwait
push
shl
cmp
jo
icebp
mov
mov
pushf
test
mov
daa
mov
test
call
mov
push
jmp
adc
or
fisub
sbb
push
add
scas
adc
add
jnp
dec
pop
loopne
das
add
(bad)
mov
ins
jle
add
jecxz
(bad)
jecxz
jle
jmp
xor
data16
dec
shl
push
imul
aam
bound
not
mov
fisub
jbe
into
fist
inc
dec
inc
ins
dec
adc
and
push
pusha
repnz
lea
sbb
data16
xchg
push
sbb
enter
dec
inc
xlat
mov
(bad)
jmp
or
mov
xchg
in
popa
sub
out
lahf
dec
push
rcl
xchg
sbb
popf
cmp
fisttp
jmp
sbb
sub
enter
pop
lock
push
mov
arpl
adc
cmp
xchg
sub
repnz
mov
sub
pop
dec
cmp
adc
push
jbe
fcom
cli
push
adc
adc
cld
fimul
sub
jecxz
shl
cmp
push
enter
les
fild
add
in
mov
pop
hlt
in
push
cmps
retf
jmp
adc
jb
mov
adc
sbb
or
in
jb
inc
loopne
fwait
shl
int
xor
cmp
and
push
repz
sub
sti
xchg
sub
jg
enter
sub
mov
push
adc
mov
ss
rcr
add
xor
add
psrlw
dec
jl
jmp
pop
daa
add
popf
lock
lods
cmp
jae
inc
frstor
inc
xchg
add
sub
lahf
inc
or
arpl
cli
pop
push
add
sbb
jmp
xchg
pop
jp
push
pop
add
sbb
cdq
mov
and
xchg
ret
cld
imul
mov
jo
sbb
dec
fsin
out
xor
inc
adc
add
stc
cmc
sbb
in
(bad)
cdq
lock
mov
mov
addr16
push
cmp
dec
popa
popa
imul
pop
fisubr
inc
sbb
call
mov
cmp
repz
out
sbb
stos
xchg
into
jmp
movs
push
jmp
fdivr
jl
mov
into
fadd
loopne
out
iret
ret
sub
and
mov
xchg
cli
xchg
scas
int
scas
cmp
stc
mov
jecxz
repz
cdq
leave
mov
inc
movs
das
stos
scas
sub
repnz
lock
call
mov
nop
in
xchg
mov
(bad)
ficomp
pop
add
push
(bad)
sbb
dec
sbb
stc
push
mov
out
add
push
lds
push
or
dec
imul
and
aaa
jmp
or
scas
pop
icebp
dec
xor
addr16
pushf
and
pushf
dec
mov
movs
mov
inc
pop
add
popf
xor
es
mov
imul
dec
(bad)
clc
push
retf
out
adc
aad
scas
jmp
das
retf
retf
inc
pop
cld
ret
adc
ds
xchg
sbb
mov
fmul
(bad)
(bad)
lahf
pop
imul
inc
xchg
cwde
pop
xor
shl
in
add
jmp
int
test
sbb
xor
movs
(bad)
cmp
mov
mov
retf
dec
movs
pop
mov
fnstcw
add
iret
mov
xor
mov
push
(bad)
stos
ror
push
sub
lods
sar
shl
test
mov
rcl
in
sbb
(bad)
loopne
cmp
and
repz
jb
jp
mov
dec
sub
sub
stc
add
xchg
sub
std
int3
stos
or
mov
mov
(bad)
mov
pop
out
retf
adc
popf
inc
jmp
mov
mov
mov
jmp
pop
bound
inc
adc
inc
push
mov
aaa
add
dec
pop
out
pop
mov
sub
jmp
lds
xor
dec
aas
dec
sar
aam
cmp
mov
(bad)
lods
xchg
and
leave
add
ficomp
mov
into
js
pusha
inc
pop
stos
lock
loopne
call
push
mov
rol
lea
xor
sub
cs
cdq
mov
int
and
lods
cld
xchg
push
(bad)
lock
test
pop
aad
jne
bound
dec
jmp
ror
jns
xchg
out
bound
hlt
mov
adc
inc
inc
sub
clc
sbb
jmp
loope
call
xchg
and
xchg
adc
aaa
cmp
scas
cli
test
xchg
cmp
push
mov
inc
clc
dec
fcomp
xchg
mov
mov
movs
es
(bad)
pop
push
arpl
dec
add
xor
pop
pop
pusha
stos
xor
pop
mov
arpl
jno
jne
or
xor
pop
retf
add
imul
mov
retf
add
sub
lds
inc
not
out
icebp
adc
aas
or
adc
xchg
mov
mov
stos
mov
icebp
cmp
and
test
xchg
cmps
pop
cmp
in
jb
add
jge
loop
mov
sbb
xor
repnz
loopne
mov
mov
adc
ins
in
cmps
sbb
xchg
rcr
(bad)
imul
pop
shr
jp
jecxz
pop
sbb
mov
push
imul
xchg
in
and
or
sub
sbb
sbb
test
loopne
dec
cmc
out
bound
nop
add
bound
std
mov
push
pop
mov
test
and
dec
jbe
sub
and
cmps
es
pop
add
cmc
add
mov
int
dec
inc
cmp
dec
outs
inc
mov
shr
(bad)
fisub
test
nop
xchg
jo
mov
repnz
mov
pop
mov
and
mov
fninit
outs
dec
cli
add
dec
retf
retf
int
and
sbb
or
aam
leave
jb
sbb
xor
std
(bad)
xor
jg
psraw
push
scas
mov
or
xor
mov
pop
dec
sbb
mov
fwait
lock
cmps
cmp
sbb
dec
cmps
pop
test
add
xchg
daa
mov
aaa
sub
push
nop
xor
jge
clc
cmc
enter
(bad)
cmc
pmulhuw
mov
es
mov
push
retf
xor
ja
mov
and
or
push
xchg
push
scas
adc
push
sub
pop
scas
ror
movs
cmps
mov
sbb
jne
retf
out
jl
cmp
movs
push
iret
and
or
cmp
add
je
fcmovnbe
mov
add
cmp
sbb
cmp
ds
or
es
out
add
(bad)
out
mov
imul
repnz
cdq
push
sub
ja
repz
jle
pop
jle
icebp
mov
je
mov
pop
inc
addr16
out
mov
dec
aaa
fistp
rcr
pop
test
jmp
retf
lods
or
inc
(bad)
pop
push
xor
hlt
jmp
push
push
jp
movs
mov
pop
jno
pop
fwait
pop
cmp
mov
rcl
aam
cmps
ret
(bad)
and
outs
fcomip
adc
inc
or
inc
add
push
xchg
cs
inc
mov
jno
mov
call
mov
xor
inc
(bad)
ss
push
add
adc
push
xor
int3
sbb
and
add
cs
arpl
aad
push
cmps
test
or
aad
frstor
fs
adc
lahf
(bad)
sar
mov
sahf
icebp
leave
fild
mov
fdivr
push
(bad)
iret
std
(bad)
mov
inc
inc
retf
push
repz
xor
mov
push
jl
(bad)
and
mov
mov
in
sub
mov
mov
push
mul
cli
lea
or
or
mov
les
xchg
add
outs
loopne
fwait
out
or
pop
ror
xchg
sub
ss
pop
or
mov
pushf
mov
retf
jge
push
adc
xor
test
(bad)
in
scas
and
push
out
push
jge
sub
xchg
adc
sub
and
outs
xlat
movs
xchg
and
data16
or
mov
movs
inc
loope
inc
sahf
jmp
adc
pusha
and
mov
xor
iret
jmp
add
ja
sbb
iret
aaa
fs
jg
dec
inc
imul
cmc
sub
push
xchg
mov
xchg
and
mov
popf
xchg
xchg
mov
imul
jae
sub
mov
sbb
cli
and
(bad)
xlat
add
nop
cwde
aas
in
fs
mov
jno
and
or
adc
ds
sbb
mov
mov
dec
push
fs
icebp
pushf
int
gs
mov
call
pop
sbb
(bad)
lock
loope
cmps
pop
and
cwde
cmps
retf
test
rcr
cmp
pop
(bad)
pop
loopne
sti
xchg
add
rcl
fwait
movs
pop
inc
xchg
and
dec
pushf
call
jno
scas
ss
test
test
push
out
int
in
mov
or
add
sbb
mov
jmp
ja
add
mov
adc
fsub
mov
js
or
shl
push
call
mov
xchg
push
or
ret
cmc
mov
cmp
push
outs
loop
rol
sub
ja
repnz
push
fild
sub
cmp
int3
out
pop
xchg
les
fwait
nop
push
or
pop
or
jno
adc
mov
arpl
fsub
mul
push
mov
add
mov
sbb
dec
fdiv
or
mov
jl
in
(bad)
popa
and
into
call
jmp
cs
retf
cs
int3
in
and
push
mov
xlat
push
inc
fiadd
push
gs
int
pusha
add
mov
cmps
clc
iret
or
sub
(bad)
outs
push
js
mov
leave
(bad)
icebp
jne
xor
movs
sbb
repnz
pop
add
sub
mov
sub
cmp
mov
xchg
sbb
mov
call
fldcw
pop
sub
add
mov
cmps
push
sub
jg
stos
in
mov
push
loopne
jns
and
adc
inc
fadd
sti
xor
lods
fadd
mul
adc
and
imul
ins
jmp
int
hlt
data16
cmp
cmc
popa
cmp
aas
call
xor
inc
ficomp
add
inc
xchg
xor
add
jbe
mov
pop
minps
shr
outs
pop
cdq
mov
icebp
lea
xchg
or
shr
iret
add
xor
xchg
or
lahf
lods
lahf
xchg
cmp
hlt
in
push
inc
ins
mov
sub
pop
xor
mov
cmps
jns
out
sbb
or
sub
out
je
sbb
xor
int
and
dec
rcl
xor
movs
(bad)
cmp
popa
lods
push
push
inc
cmp
out
cmp
add
sti
rol
jns
in
mov
add
clc
jg
pushf
pop
aam
dec
sub
jns
and
cwde
mov
movs
jnp
call
cmp
mov
out
cmp
adc
adc
inc
scas
pop
xchg
(bad)
loopne
scas
cmp
fisttp
imul
mov
adc
ss
xor
cmp
cli
adc
adc
jge
out
test
jg
xor
sub
sbb
push
xchg
push
scas
ja
inc
ret
outs
jmp
xchg
push
fistp
aaa
lds
ds
(bad)
fisubr
repz
cdq
stos
and
add
pop
cmp
xor
rol
mov
mov
inc
sub
and
lods
xlat
push
mov
cwde
and
sbb
xchg
push
xor
int
outs
push
cli
stos
or
dec
repnz
or
lock
jmp
mov
cmps
jmp
fdiv
dec
xchg
data16
mov
fisubr
cdq
fimul
mov
sbb
mov
mul
inc
and
sbb
std
mov
ss
aas
push
cmp
loop
add
imul
or
ds
xchg
sbb
por
imul
sti
or
pop
inc
shl
dec
push
ret
sbb
ror
sub
imul
mov
test
cmps
cmps
jns
fimul
xchg
push
or
xchg
cdq
mov
test
inc
dec
icebp
jo
cmp
and
cld
cmp
push
push
adc
mov
mov
mov
shl
inc
mov
into
cmc
gs
loop
in
fnstsw
movs
inc
adc
cmp
push
cmc
iret
retf
mov
push
inc
adc
jle
pop
jg
sub
pop
adc
lds
in
or
mov
aad
and
adc
pop
add
mov
add
call
xchg
sub
outs
sbb
cmp
push
retf
sbb
mov
ffree
inc
cmp
mov
(bad)
mov
sub
and
js
fldcw
or
push
pop
cwde
pusha
call
pushf
(bad)
and
jae
scas
xor
or
mov
cs
mov
and
enter
jle
xor
push
jb
les
stos
dec
mov
ja
arpl
jns
cdq
cdq
mov
or
jge
add
push
push
clc
jp
push
clc
das
add
dec
call
in
mov
cli
mov
mov
bound
dec
loope
pop
ds
mov
jmp
xchg
les
int
cmp
sbb
adc
mov
out
fwait
popf
jno
loopne
hlt
push
xor
les
mov
cmp
pop
(bad)
push
and
xchg
addr16
cmp
pushf
dec
jb
enter
jae
arpl
push
and
ss
xchg
xor
jae
popa
or
popf
and
jl
inc
mov
fnsave
push
into
add
in
mov
and
cmps
push
mov
mov
add
jb
mov
ins
shl
icebp
add
add
aad
sub
(bad)
jne
rol
adc
or
cmps
sbb
das
or
dec
js
jnp
push
cmp
int3
imul
mov
neg
xchg
daa
and
shl
jle
sbb
xchg
fisttp
push
jo
lods
jb
mov
dec
lahf
je
dec
repnz
cmp
mov
popf
imul
ret
popf
stos
out
fadd
shl
pop
je
(bad)
jns
xchg
mov
popf
push
pop
sbb
in
imul
iret
inc
push
pop
xchg
or
scas
popa
or
cmp
sti
gs
je
loopne
cs
inc
sti
movs
(bad)
dec
iret
outs
mov
stos
test
arpl
aam
mov
jecxz
out
pop
dec
in
jns
(bad)
pop
dec
ret
ins
mov
in
hlt
fwait
repnz
shl
hlt
shl
and
mov
into
sub
cmp
sbb
mov
xor
jmp
sub
movs
cmp
push
xor
(bad)
ins
mov
push
jecxz
ins
push
fild
mov
push
mov
out
dec
loop
les
repz
ds
js
jge
shl
mov
mov
mov
mov
fwait
push
aam
mov
int
pusha
nop
rol
jne
mov
inc
and
cmp
xor
or
xchg
es
push
jo
call
std
inc
mov
push
dec
xor
jmp
inc
jnp
or
ret
aad
jmp
fisttp
or
loope
jmp
stc
bound
test
or
xabort
mov
adc
pusha
push
mov
ret
aad
into
pop
cmps
sub
cdq
call
ret
xor
(bad)
cmps
sbb
imul
sub
call
xor
cmps
int
dec
mov
sub
jle
call
adc
sbb
xchg
mov
and
dec
inc
mov
xor
xchg
test
adc
not
mov
or
shr
ss
gs
xchg
call
pushf
repz
mov
int
push
test
pop
adc
mov
and
jmp
mov
pop
sti
adc
rcl
shl
inc
adc
xor
test
ss
sub
cmp
test
cmp
adc
es
pop
sub
je
fwait
sbb
mov
mov
ror
pop
jl
retf
movs
sub
fild
cmp
repz
(bad)
popf
jne
outs
out
shl
sbb
out
loop
retf
(bad)
jo
sbb
push
xchg
add
es
add
cwde
sub
js
xchg
jp
jno
ret
daa
fs
and
outs
mov
sbb
popa
(bad)
fsubp
std
rol
ret
sbb
clc
pop
daa
fadd
mov
xchg
inc
pop
ja
cwde
stos
in
cmp
(bad)
push
inc
sub
jae
and
mov
fwait
sbb
rol
inc
xchg
jl
xchg
addr16
fs
dec
adc
cmps
and
movs
jp
xor
mov
jmp
adc
inc
mov
movs
adc
cmp
push
(bad)
add
inc
add
mov
sub
jno
fisttp
mov
dec
pop
fist
jb
mov
mov
repnz
dec
or
lds
int3
adc
jnp
in
xor
xor
and
movs
ror
ret
mov
arpl
xchg
in
stc
inc
test
sahf
call
cdq
gs
imul
cmp
sub
push
mov
lahf
and
dec
push
mov
push
outs
push
xchg
or
xchg
mov
aam
xor
inc
retf
je
or
pop
and
shr
inc
dec
push
dec
push
xor
push
ss
add
dec
aad
mov
das
bound
mul
jge
rcr
cmp
bound
jp
std
pop
pop
cmp
data16
mov
loopne
aam
and
mov
loopne
adc
cmc
imul
jecxz
pusha
inc
sbb
and
arpl
shr
cmp
sub
or
xor
loopne
xor
js
add
icebp
les
int3
and
xchg
dec
adc
popf
xchg
mov
test
js
popf
push
mov
mov
push
xchg
loopne
test
mov
cmps
xor
adc
dec
sub
(bad)
cmc
into
mov
inc
je
xchg
mov
(bad)
jno
inc
mov
lock
imul
cmp
jle
loop
cld
sub
push
pop
inc
mov
(bad)
push
das
(bad)
test
inc
sub
loopne
cmp
dec
cmps
aas
xchg
push
aad
pop
mov
nop
pop
inc
shr
test
loop
cld
ds
loopne
sub
jg
ret
aaa
(bad)
push
loop
add
mov
pushf
mov
jae
mov
mov
and
les
cli
int3
aas
mov
cmc
mov
popa
cmc
and
push
dec
mov
in
add
cdq
lea
or
mov
cld
dec
fs
fdiv
push
leave
push
sti
sbb
push
add
xor
xchg
inc
bound
fistp
cmp
jecxz
adc
push
xor
jle
hlt
and
jnp
or
sub
xchg
dec
dec
(bad)
dec
in
out
add
test
jb
icebp
jmp
je
data16
retf
or
mov
out
mov
dec
call
cld
cmp
enter
or
data16
loope
jne
push
into
mov
popf
pop
and
je
jp
sub
in
andps
cmps
sahf
(bad)
adc
inc
xchg
sub
cmp
out
push
xchg
jno
jns
adc
add
mov
loope
shl
pushf
(bad)
sbb
cld
jns
sub
jo
inc
in
adc
repnz
loope
bound
cmps
push
lock
jbe
xor
inc
sub
jl
ficom
out
out
jbe
(bad)
pushf
mov
idiv
nop
cmp
inc
pusha
not
outs
(bad)
ins
and
(bad)
ja
xlat
add
jp
ins
fidiv
sbb
call
xor
mov
jecxz
(bad)
(bad)
int
push
adc
jb
sub
xchg
xchg
dec
xchg
mov
rcl
pop
jbe
les
leave
mov
loope
pushf
mov
hlt
fld
icebp
xor
xor
cdq
(bad)
popa
mov
repz
aam
fwait
or
or
add
mov
mov
cs
std
inc
outs
inc
fmul
icebp
movs
mov
xchg
mov
(bad)
mov
or
inc
jmp
mov
hlt
xchg
stos
fmul
daa
or
outs
jo
mov
sub
std
loop
(bad)
call
loope
sti
repnz
mov
and
and
mov
bound
push
movs
dec
int
jno
mov
jl
int3
add
arpl
bound
cmp
fisttp
sbb
(bad)
mov
sub
pop
not
pushf
lea
ret
ja
stos
inc
ja
je
xchg
cli
iret
add
inc
std
shr
cmp
iret
(bad)
nop
cmp
jo
jo
lods
sub
xchg
mul
or
jns
ret
cli
or
jmp
sub
or
int
dec
sbb
fimul
js
cmps
(bad)
add
fiadd
or
fwait
lock
sbb
popfw
jmp
pop
pop
popa
pop
dec
les
push
sbb
int
loop
pusha
mov
fidivr
inc
fimul
out
mov
rol
fiadd
cmp
stos
cli
rcl
test
movs
xchg
xor
aam
push
jg
inc
stos
hlt
aaa
inc
(bad)
xor
or
loopne
xlat
jle
stos
adc
les
lea
lods
push
mov
or
jb
lahf
ins
add
shl
(bad)
cmp
jp
sub
pop
inc
or
lds
icebp
(bad)
adc
pushf
test
cmp
jns
out
cmp
scas
cli
dec
adc
or
mov
jae
in
or
jae
jno
mov
bound
mov
lock
and
call
push
nop
leave
rcr
mov
popa
mov
shr
push
shr
jb
rcl
(bad)
and
pop
add
jns
cdq
iret
push
hlt
test
cli
pushf
push
(bad)
jmp
push
sub
cwde
sbb
ins
sub
aad
add
mov
push
xor
and
cmps
inc
dec
lea
in
lahf
xchg
addr16
mov
sbb
scas
sub
sbb
arpl
mov
shl
outs
mov
pushf
pop
sub
mov
call
stc
test
mov
mov
outs
add
jne
mov
pusha
call
jle
jecxz
mov
dec
cmc
sar
cmc
sub
sbb
test
jo
push
cmp
mov
pop
mov
(bad)
int
add
fnstsw
lea
inc
leave
adc
ins
sahf
cs
aad
xor
sar
out
cmp
es
mov
stos
scas
rcl
rcr
cmp
loopne
sub
xor
cmp
je
pusha
jae
rcr
xchg
addr16
dec
push
loop
adc
dec
jmp
outs
adc
push
pop
mov
or
pushf
stc
and
or
inc
in
mov
mov
xchg
mov
sbb
lds
outs
xchg
sbb
dec
ins
mov
shl
mov
pop
mov
sub
lds
and
mov
dec
xchg
ret
icebp
cdq
pop
std
hlt
mov
dec
xor
dec
sub
push
inc
xor
inc
fnstcw
adc
fistp
loope
jl
(bad)
jmp
dec
sub
movs
jle
rcr
jl
repz
aad
jne
xchg
adc
and
sar
call
outs
rcl
and
cmps
xchg
out
push
int3
lds
and
(bad)
movs
sub
pop
popf
icebp
push
aaa
ret
sbb
cwde
jnp
nop
bound
data16
pop
cmp
fld
adc
ds
shr
inc
ror
inc
sub
adc
push
mov
mov
lods
pusha
repz
add
cmc
sbb
sub
movs
out
mov
ins
jnp
sub
std
pop
div
loopne
push
xor
push
enter
pop
mov
out
xor
inc
and
in
cmp
mov
add
mov
in
mov
mov
(bad)
scas
xchg
fadd
and
sbb
inc
sar
(bad)
in
pop
jno
cmp
jge
loop
xlat
sub
je
psubw
pop
lea
nop
stos
pop
and
ins
push
aam
dec
pop
repnz
je
push
movlps
mov
cld
lods
in
pop
jb
and
xchg
sbb
call
nop
xor
retf
cwde
sti
xor
(bad)
mov
jmp
daa
bound
or
(bad)
into
jb
adc
pop
fwait
or
mov
lds
jno
neg
adc
pushf
fidiv
push
inc
dec
inc
jnp
mov
jb
cdq
cmc
mov
int3
call
mov
cmp
add
hlt
sub
ror
(bad)
repz
or
mov
outs
jb
pop
jnp
or
sub
movsx
pop
imul
sbb
push
ret
mov
sub
or
cmc
or
sbb
pop
es
clc
adc
pop
lds
mov
lds
loopne
xor
or
in
mov
mov
or
push
xchg
adc
xor
xor
or
dec
jmp
dec
leave
push
ret
mov
cmp
test
jnp
(bad)
shr
cmps
stos
fcom
(bad)
ja
dec
loop
fdiv
jmp
mov
add
pushf
es
pop
push
test
add
mov
scas
imul
push
aam
imul
push
xchg
jmp
and
and
ret
mov
adc
in
mov
js
arpl
addr16
push
jp
sbb
pop
sub
retf
xchg
std
dec
and
mul
xchg
inc
jmp
daa
jb
nop
pop
test
mov
nop
(bad)
call
jns
je
pushf
xor
jl
cmp
dec
lahf
loope
aas
aad
fwait
or
shr
addr16
ss
jl
push
xor
scas
pop
add
movs
dec
ss
data16
xlat
lea
sub
in
adc
adc
jno
mov
pop
movs
ss
sbb
bound
(bad)
outs
mov
fcom
jo
mov
cwde
xor
outs
out
cmp
int3
pop
fst
scas
cmp
xor
pop
fisttp
push
mov
fldcw
fidivr
sti
xchg
inc
cmc
les
push
lds
imul
test
leave
popf
das
mov
and
mov
retf
and
cmp
sbb
push
fstp
mov
fidivr
fwait
and
ins
xlat
aas
xor
push
fistp
outs
xor
dec
mov
sbb
sub
push
idiv
std
popf
mov
adc
pusha
sub
adc
imul
or
ja
push
sbb
cmp
out
pop
xchg
push
fwait
push
dec
sub
mov
dec
xchg
or
cli
lods
stos
jno
cmp
mov
cmp
mov
(bad)
aas
test
rep
mov
repnz
sub
in
loope
psubd
push
rol
jmp
gs
popa
push
xchg
ds
jae
add
mov
rcr
movs
pop
aad
(bad)
retf
ficomp
add
push
push
xchg
(bad)
dec
lock
pushf
or
add
retf
aas
stos
sub
out
scas
lea
adc
or
test
fwait
neg
xchg
or
lods
mov
sub
in
loop
or
into
cwde
and
call
xchg
mov
shl
sub
sbb
test
sbb
out
pop
(bad)
pop
pusha
dec
mov
into
adc
fsub
(bad)
push
jle
mov
pop
cmp
mov
xor
xchg
jno
aad
test
aad
test
es
mov
cmp
xchg
jmp
jnp
mov
push
push
clc
iret
cld
call
jno
out
cmp
cwde
aas
jo
pop
out
gs
imul
js
sahf
dec
pop
jnp
jl
jge
xor
mov
mov
inc
and
inc
or
cmps
popa
jmp
into
adc
sbb
jns
adc
pusha
xlat
add
aam
cmps
fld
mov
pop
push
rol
xchg
push
fldenv
popf
xor
jo
cmps
cmp
and
and
dec
xor
jo
cmc
xor
push
add
scas
mov
aaa
mov
leave
add
push
data16
push
mov
pop
pop
nop
ror
fimul
mov
mov
(bad)
out
movs
sbb
and
inc
push
aad
clc
repnz
mov
js
(bad)
test
popf
inc
jg
mov
int
pop
ret
xchg
fisttp
cmps
imul
xor
xchg
hlt
ds
sub
mov
and
mov
add
lods
jne
xor
mov
ror
lahf
sbb
jb
addr16
dec
jae
push
inc
jle
sub
ins
cmp
in
ss
pop
ret
or
iret
pop
test
push
xchg
or
add
jmp
push
xor
stos
fdiv
daa
shr
(bad)
dec
aaa
in
sub
retf
sar
scas
push
ror
ss
imul
pop
retf
leave
test
add
test
cdq
aam
fldcw
sub
sti
sbb
sub
test
mov
sti
add
or
(bad)
ja
jl
enter
xchg
ds
aam
mov
mov
push
icebp
fld
sahf
xchg
test
outs
cli
and
and
(bad)
dec
ret
mov
leave
adc
(bad)
out
out
pop
fidivr
pushf
lds
mov
and
jecxz
pop
jne
adc
xchg
add
mov
sbb
je
sar
jbe
xor
jle
jle
add
retf
adc
cwde
repnz
retf
cmp
dec
jmp
dec
std
cmp
jmp
popf
push
add
shl
mov
sbb
fisubr
cmp
js
mov
inc
scas
cli
leave
inc
xchg
xchg
mov
push
jmp
mov
dec
(bad)
ror
and
hlt
call
push
(bad)
shl
and
jg
retf
popf
loopne
jae
add
mov
pop
dec
jle
push
leave
in
push
or
lahf
mov
inc
mov
sahf
jo
ret
mov
out
neg
jp
icebp
in
es
in
jge
test
daa
(bad)
jnp
retf
cmps
jg
jns
push
inc
xchg
dec
push
in
fwait
or
add
mov
push
shl
test
push
pop
into
pop
jg
aas
or
mov
cli
js
fs
adc
daa
sti
jno
inc
sub
push
jo
inc
xor
aaa
loope
cmps
sbb
sahf
(bad)
call
cld
stos
bound
xchg
dec
test
nop
inc
pop
shl
shl
mov
push
jae
mov
jg
dec
(bad)
mov
xchg
inc
mov
sub
jns
(bad)
pop
inc
test
mov
cmp
stc
or
hlt
adc
pop
and
add
mov
jb
data16
jae
imul
pop
push
and
aad
out
addr16
fld
mov
gs
popf
push
push
pop
fcmovb
mov
sbb
dec
enter
xchg
(bad)
xchg
push
jno
mov
cwde
scas
je
mov
leave
dec
nop
jno
push
push
pop
xchg
mov
aad
inc
loopne
and
adc
int3
mov
push
jo
outs
mov
sbb
pop
jmp
ret
mov
xchg
inc
cmp
cmp
cmps
fisttp
rcl
iret
xchg
jbe
jmp
test
fdivr
mov
jmp
lods
adc
or
shl
sub
lea
enter
mov
add
dec
xor
imul
mov
xor
cmp
sub
mov
std
pusha
jmp
cmp
or
or
sbb
xlat
push
mov
jnp
pop
cmps
out
std
push
adc
sbb
sbb
out
fistp
push
lahf
aaa
test
cmp
add
addr16
add
les
inc
mov
mov
cdq
sbb
lods
mov
and
scas
fucom
fcom
mov
les
inc
in
leave
add
fistp
ss
test
fsubrp
retf
aas
dec
xchg
cmps
cmp
jge
pop
push
sbb
sub
cmp
mov
lahf
enter
xchg
xor
xchg
sub
into
aam
hlt
inc
dec
xchg
xchg
(bad)
std
and
dec
fld
inc
lods
cmc
mov
xchg
jb
cmps
xchg
adc
jmp
push
(bad)
stc
xchg
je
mov
jns
shr
cmp
dec
sub
not
sbb
or
stos
mov
add
aad
popf
inc
lahf
add
jp
es
push
cmp
jo
(bad)
std
(bad)
fbstp
call
loopne
cmp
aad
jo
dec
and
out
mov
jne
xchg
push
sbb
in
mov
xor
aaa
clc
jle
cld
(bad)
cmp
sub
mov
addr16
outs
ins
outs
and
pop
xchg
cmp
xacquire
test
(bad)
xchg
adc
mov
stc
rcr
pop
test
nop
cmps
push
cmps
cld
lock
fisub
and
xchg
mov
inc
ja
repnz
mov
jg
push
mov
out
dec
ret
add
test
ins
and
xor
pop
int3
lods
xlat
sti
or
(bad)
cdq
xchg
aam
xchg
loopne
xchg
sub
das
dec
xchg
sti
sub
or
sbb
mov
movs
fwait
push
test
sub
push
cmp
sbb
ins
sub
pop
xor
mov
jl
or
inc
aam
daa
ja
(bad)
xchg
mov
cmps
jg
mov
enter
rol
inc
jbe
mov
shl
adc
pop
sbb
outs
std
and
mov
mov
(bad)
test
call
adc
in
fisttp
scas
or
cmp
(bad)
mov
jbe
iret
xchg
dec
jl
sbb
test
push
push
mov
jbe
inc
into
pushf
and
sub
out
xchg
outs
pop
(bad)
scas
push
lock
sar
xor
adc
inc
fs
ret
mov
cmp
mov
mov
aas
out
cmp
jl
adc
adc
test
outs
adc
(bad)
fwait
inc
xlat
loopne
mov
pushf
mov
daa
jecxz
or
es
stos
pop
or
cmp
push
into
pop
in
inc
lods
mov
loope
dec
mov
ds
jnp
shr
dec
xchg
mov
jno
cli
sub
jne
sub
lahf
mov
push
xlat
jo
mov
pop
and
xchg
bound
pop
aad
sbb
adc
fld
pop
adc
sub
xor
test
lods
adc
sbb
xchg
fsubr
xchg
stos
sbb
xor
pop
dec
mov
pop
mov
loop
pop
movs
pop
pop
jl
jae
inc
jno
(bad)
cmps
mov
push
push
push
in
or
xor
dec
mov
dec
mov
imul
or
jle
stos
push
neg
loope
rol
outs
xchg
sub
(bad)
std
lock
push
mov
fisubr
inc
push
xchg
jns
in
xor
or
mov
cmp
xor
rol
push
aam
imul
mov
ins
push
test
or
in
push
rcr
cli
cli
or
sbb
into
cmp
push
hlt
mov
aad
inc
addr16
sbb
add
or
inc
loop
mov
dec
push
inc
in
push
rcl
(bad)
ficomp
(bad)
push
mov
ins
inc
jns
loopne
test
jno
shr
arpl
into
in
and
ins
add
cmp
das
iret
es
sub
push
inc
mov
cmp
test
imul
jmp
jp
sub
sbb
xchg
mov
add
mov
push
out
test
imul
arpl
scas
and
sub
push
out
test
inc
ins
mov
xor
imul
xchg
mov
retf
sub
xchg
or
(bad)
shl
std
dec
clc
loopne
mov
sub
pop
imul
ror
cs
bound
sbb
test
cmp
dec
loop
cmp
push
xor
jne
or
clc
sbb
aas
jp
jb
sbb
xor
sbb
inc
lahf
mov
icebp
retf
mov
push
sbb
jae
cli
sahf
sub
fcom
mov
mov
inc
imul
in
ja
iret
xchg
and
mov
jne
mov
test
inc
jnp
jbe
popa
lea
mov
sub
push
out
mov
nop
sub
mov
nop
rcr
mov
int3
es
das
inc
xor
and
sbb
call
pop
sub
loope
fdivr
cmps
push
mov
add
and
mov
aaa
fwait
into
js
stos
push
jl
(bad)
pop
pop
inc
retf
in
push
mov
adc
aaa
add
xchg
cdq
inc
repnz
loope
pop
pop
adc
jnp
pop
cmp
mov
mov
fs
popa
je
in
xor
or
pop
jge
mov
int3
nop
push
jmp
out
xor
lea
fsubr
leave
fs
shr
sub
adc
mov
nop
jns
push
or
(bad)
dec
(bad)
or
pushf
push
pop
outs
adc
out
clc
push
(bad)
jp
adc
fwait
stc
mov
loopne
or
jo
dec
shl
in
mov
arpl
jno
mov
loopne
push
mov
sbb
out
pop
div
leave
cmp
dec
out
retf
xor
popa
shl
mov
cmp
jge
cmp
fwait
mov
xlat
sbb
jmp
jne
gs
sub
icebp
adc
stos
rcr
push
sbb
cwde
hlt
fistp
cmp
sbb
cmc
dec
or
or
or
push
aad
leave
mov
dec
mov
aaa
dec
jno
sub
out
xchg
add
cmp
cmp
xor
mov
xchg
lahf
enter
jl
dec
mov
jae
jl
shl
add
or
fwait
out
adc
cmps
jns
cwde
mov
mov
retf
leave
mov
sub
cmp
push
sbb
mov
xchg
dec
bound
jmp
sti
cs
out
jno
xchg
es
mov
cs
sbb
xchg
xchg
mov
std
or
jnp
ds
dec
rcr
or
cmp
lds
retf
cli
scas
sti
mov
jb
jno
xchg
add
push
mov
pop
popf
loopne
loopne
and
xchg
inc
mov
out
ins
xchg
jns
outs
shr
fsubr
lea
cmp
and
adc
subps
dec
into
and
ret
cmp
cwde
clc
cwde
xor
and
lea
fcomp
pop
mov
pop
das
les
pop
in
xlat
xchg
idiv
or
pop
add
out
mov
dec
jg
adc
not
or
push
ja
out
push
jns
cli
daa
inc
push
inc
fwait
xchg
fst
dec
adc
xor
mov
out
sti
xchg
inc
inc
mov
mov
(bad)
hlt
mov
pop
dec
shl
(bad)
xor
cmp
push
push
loope
fisubr
dec
idiv
addr16
ret
lea
mov
push
lock
push
sbb
jns
call
mov
mov
daa
stc
retf
repnz
adc
sbb
test
add
add
dec
push
mov
imul
and
add
dec
(bad)
jmp
jg
and
bound
sub
lea
aad
fs
pushf
jg
dec
out
sbb
call
nop
dec
adc
adc
pop
and
mov
cmp
jmp
push
pop
mov
ret
cmp
ss
push
ins
fist
mov
sahf
dec
push
pop
jno
xchg
jae
push
lods
lds
mov
in
and
loop
and
mov
pop
sbb
and
fiadd
add
add
out
les
lahf
dec
fisub
pushf
retf
aaa
mov
sahf
iret
mov
cmps
in
stc
adc
jbe
and
jb
jmp
sbb
fild
cmp
xor
les
mov
adc
jbe
dec
jmp
jns
inc
lahf
adc
pop
outs
inc
jbe
test
arpl
pop
je
push
str
(bad)
jns
jbe
inc
cmp
pop
sbb
pop
jmp
sti
add
out
sbb
fsub
dec
out
push
call
scas
movs
out
inc
mov
test
or
lock
inc
(bad)
bsf
sbb
stos
pop
inc
and
jmp
mov
stos
xor
xor
inc
mov
mov
out
jle
mov
add
cmp
popf
adc
(bad)
(bad)
jmp
inc
and
not
shl
inc
inc
bound
mov
xor
cdq
cmp
gs
and
cwde
adc
int3
and
cld
fsub
add
jp
imul
mov
stos
cmps
mov
daa
test
rol
jnp
test
out
mov
or
push
xchg
stc
ficom
rol
jb
sub
mov
jmp
push
inc
cld
and
pop
scas
popf
sbb
push
cmp
mov
xor
jno
bnd
sti
sahf
mov
jg
cs
sub
outs
fdivr
inc
cld
xchg
retf
jns
pop
cmp
add
push
sbb
repz
mov
nop
jle
pop
je
fldenv
xchg
scas
add
sub
xchg
loopne
dec
push
mov
push
mov
lahf
cld
add
call
jle
dec
xchg
jae
and
std
and
js
mov
lock
daa
mov
das
or
sbb
push
dec
loopne
mov
cmp
jmp
je
test
loop
xchg
sbb
in
dec
add
fldcw
sbb
sar
std
cmp
fldcw
xchg
cmps
jmp
sbb
mov
int3
repz
mov
mov
jnp
leave
(bad)
jmp
pushf
jo
pop
ds
sbb
xlat
test
stc
test
fucomi
dec
fs
ja
inc
sti
dec
in
outs
sub
jno
cld
cli
(bad)
jae
setne
pop
cmp
stos
outs
hlt
push
cmp
sti
popf
fisttp
fadd
shl
sbb
pop
mov
and
inc
fbstp
enter
pop
xor
stos
arpl
cli
adc
cmp
sub
xchg
pusha
mov
sbb
movs
test
inc
scas
sbb
or
lds
mov
outs
sahf
stc
dec
int
push
xrelease
cmp
in
pop
std
and
xor
pop
clc
imul
push
inc
jle
dec
test
adc
or
add
push
adc
push
fisttp
(bad)
cld
jmp
adc
jmp
std
mov
inc
fiadd
clc
mov
jmp
mov
add
sub
mov
fstp
fild
sar
fild
fcom
lods
gs
cld
stos
cwde
dec
imul
mov
inc
xchg
in
or
jae
inc
call
or
nop
daa
jo
test
sub
jge
or
repnz
pop
mov
jne
bound
pop
add
sub
xchg
cmp
and
loope
jns
add
xchg
push
inc
sub
sub
lock
push
mov
jns
mov
in
sahf
jmp
pop
xor
sub
cmp
mov
retf
add
and
xchg
dec
mov
dec
dec
cmp
fidivr
adc
cmp
xor
ins
jno
call
rol
cwde
xor
rcl
nop
out
push
sub
test
add
mov
add
sti
add
call
cdq
jns
push
inc
adc
xchg
push
data16
in
cmps
daa
sub
xor
test
mov
adc
pop
lds
shl
push
pop
push
cmp
xchg
add
sub
scas
mov
xor
mov
adc
sbb
sbb
jmp
repnz
sbb
dec
(bad)
popa
retf
in
cmps
in
push
adc
add
in
sahf
out
arpl
cdq
push
dec
out
dec
mov
jmp
jb
xor
jmp
jnp
jbe
aad
(bad)
into
out
sbb
adc
out
xor
or
inc
in
fld
or
and
icebp
into
dec
xor
push
movs
dec
mov
into
sub
je
or
(bad)
push
pusha
jae
ja
or
mov
clc
sbb
repz
push
add
mov
cmp
ror
push
xor
dec
sub
ds
fld
push
shl
in
stos
xor
loopne
and
sbb
je
(bad)
es
bnd
inc
mov
cmp
jo
xlat
jns
lods
jnp
mov
mov
lock
lods
jecxz
push
cmp
jmp
pusha
lea
lds
xor
cmp
jae
fmul
adc
push
scas
mov
sar
(bad)
inc
int3
mov
cmp
repz
push
loope
cs
lahf
mov
xchg
fiadd
cmc
pop
jp
jmp
lds
push
(bad)
cld
mov
(bad)
xchg
push
dec
call
std
xchg
add
and
dec
jmp
mov
xchg
adc
retf
fist
jne
retf
lods
and
outs
dec
inc
inc
div
js
stos
cmp
add
fistp
jae
push
test
push
push
pop
dec
pop
mov
cmc
xor
mov
fistp
cmp
jbe
jo
leave
cmp
jns
or
pop
push
leave
xchg
mov
sbb
cdq
mov
mov
pop
mov
inc
cmp
push
inc
ja
pop
in
inc
std
pop
push
sbb
ret
and
push
retf
(bad)
or
add
and
sub
pop
test
or
mov
lahf
or
aas
dec
or
loop
pop
pop
call
test
fdivr
mov
fmul
xor
mov
push
test
sbb
add
(bad)
xchg
shl
cmp
jge
fsubr
xchg
ss
sbb
mov
jge
mov
inc
jb
ret
xchg
or
popf
popa
inc
fdiv
mov
xor
test
fs
or
push
fdiv
jecxz
mov
(bad)
push
shl
xchg
mov
inc
xor
jmp
in
mov
xchg
mov
pop
jp
sbb
aas
mov
adc
(bad)
mov
das
push
and
add
popa
out
in
jae
sbb
jbe
jno
lar
mov
aad
ror
jno
mov
cmp
js
je
repnz
pop
call
les
and
icebp
cmp
inc
mov
xchg
add
ins
pop
mov
fisubr
mov
mov
lds
inc
adc
call
add
mov
push
or
aam
into
jns
ins
int3
shl
push
push
in
mov
jge
xor
jns
cmp
pop
mov
jns
mov
(bad)
rol
jle
clc
stos
xchg
inc
movs
fwait
sbb
mov
jmp
loopne
cli
xchg
dec
sahf
mov
jbe
fcomp
jo
mov
ja
push
jbe
xchg
xor
test
mov
cmc
daa
clc
cmp
int
in
push
mov
cwde
dec
icebp
(bad)
aad
cmp
imul
out
outs
das
repnz
js
lods
fs
(bad)
mov
leave
sub
xchg
rcl
pop
test
or
es
cwde
xor
mov
rcl
dec
dec
push
jno
push
in
mov
lea
loope
xor
push
(bad)
push
ins
(bad)
jmp
dec
xchg
pop
stos
sbb
into
xlat
add
sub
aad
and
mov
mov
pusha
cdq
test
outs
fsub
lea
movs
add
enter
ror
outs
in
mov
call
cmp
jge
sub
pop
rol
push
jns
add
retf
push
sbb
(bad)
and
pop
mov
push
stc
lods
scas
cmp
stc
sbb
movs
jmp
loope
xor
ret
imul
mov
add
jl
or
xchg
pop
int3
lods
mov
aas
loop
push
ins
pminub
ror
jmp
mov
sub
sub
or
mov
dec
in
int3
imul
xlat
sub
xor
sar
and
stos
stc
add
cmp
mov
pop
push
dec
mov
stos
sbb
mov
mov
sbb
les
and
push
jmp
ins
jl
xor
mov
mov
push
in
dec
shl
jbe
xchg
(bad)
mov
aam
sahf
and
(bad)
mov
jge
jne
aam
daa
dec
adc
dec
or
leave
cmp
inc
iret
xchg
es
mov
fsub
pop
push
shr
hlt
daa
lahf
sahf
fsubrp
jecxz
mov
push
jge
inc
adc
adc
push
add
mov
mov
jb
xchg
cmp
add
je
jb
push
cli
shl
add
add
fcomp
pop
dec
aam
sbb
xchg
test
into
test
xchg
push
add
sub
ins
mov
icebp
add
in
jo
dec
leave
aaa
nop
xchg
sbb
cmp
dec
inc
xchg
in
out
mov
push
test
sti
push
sbb
out
mov
pushf
ret
daa
movs
jb
or
loope
jle
gs
(bad)
xor
mov
fs
cmp
in
mov
or
mov
js
dec
(bad)
div
and
repz
arpl
add
les
je
imul
pop
xor
inc
or
sar
loop
fwait
jnp
rcl
test
shr
in
push
mov
cli
jmp
xchg
sahf
movs
xchg
leave
sub
clc
mov
repz
push
sub
mov
retf
ret
das
mov
sub
lock
mov
xchg
add
sbb
popa
nop
and
adc
pop
test
xchg
retf
push
sub
inc
add
pop
add
test
dec
retf
clc
loope
xchg
mov
pop
push
arpl
sub
jecxz
jg
jge
gs
aaa
cli
inc
test
jnp
or
retf
idiv
sti
sahf
cmp
rcl
call
popf
mov
lea
out
and
push
ror
push
outs
loop
outs
loope
pop
pop
jge
movs
jae
xchg
pop
xchg
das
scas
idiv
clc
shl
and
enter
movs
xor
shl
inc
(bad)
in
(bad)
mov
sub
lds
iret
xor
retf
ins
and
inc
push
fs
outs
sbb
cmc
in
and
push
pop
ins
pop
and
jecxz
jp
pop
jmp
dec
hlt
int
(bad)
std
(bad)
(bad)
cld
leave
out
xchg
out
test
icebp
cmp
jmp
inc
ret
icebp
loopne
mov
in
adc
lock
mov
rcl
daa
(bad)
imul
xchg
pop
inc
sub
cs
dec
xchg
mov
imul
mov
lock
ins
lahf
popf
sbb
push
sub
(bad)
dec
pop
dec
je
jnp
scas
imul
sub
out
(bad)
sbb
ret
in
xor
stos
scas
fcom
sub
and
lds
mov
sbb
xor
mov
push
add
and
sahf
iret
xor
stos
push
push
mov
or
fdivrp
xchg
and
test
cmc
arpl
loopne
cdq
inc
pop
mov
hlt
jg
out
or
cmp
add
mov
xor
and
(bad)
ins
and
cmp
aas
xor
xchg
pushf
sets
mov
pop
cmc
dec
in
cmps
popa
out
dec
call
lods
inc
and
cmp
aas
loope
mov
cmp
je
cmp
sbb
es
mov
(bad)
adc
imul
inc
ror
xchg
adc
ds
xlat
and
movs
jae
xor
mov
dec
ret
sub
loope
mov
cmp
inc
inc
test
push
or
outs
je
xchg
mov
pop
repz
nop
jp
push
push
js
addr16
pop
cmp
xor
aad
iret
mov
or
retf
mov
add
dec
retf
mov
repnz
gs
mov
xchg
cdq
je
fidiv
or
cwde
addr16
je
rcl
popf
loopne
cmp
cmp
add
ins
xchg
xor
adc
jae
mov
cmp
and
or
pop
and
movs
enter
dec
pushf
data16
mov
lea
push
mov
add
test
xchg
xlat
push
xchg
push
in
ja
push
fnsave
jp
daa
dec
sub
pop
test
jmp
movs
int
jge
pushf
push
xchg
aas
inc
adc
mul
stc
or
leave
(bad)
test
sbb
(bad)
out
push
push
out
jp
sub
push
scas
cmp
scas
aam
mov
dec
sub
push
mov
push
push
dec
sub
adc
ds
scas
sub
jb
je
or
lock
and
paddq
cmp
(bad)
mov
mov
lods
movs
call
mov
stos
sbb
int3
imul
jbe
ins
push
xchg
aad
fidivr
icebp
push
mov
retf
loop
xor
fimul
cmp
jle
(bad)
pop
inc
push
(bad)
jmp
cli
into
dec
mov
xchg
sub
addr16
les
out
cmp
gs
adc
mov
sbb
xlat
aaa
push
xchg
jp
sar
or
js
lods
dec
jmp
loop
push
sbb
mov
or
adc
ret
mov
lods
and
lock
jmp
fdivr
js
cli
xor
movs
shl
dec
sub
jae
sar
imul
test
(bad)
sub
mov
shl
push
xchg
adc
inc
xchg
inc
ins
fiadd
clc
cli
ss
ret
xchg
jno
sbb
movs
fisub
xor
pop
mov
jne
jge
shr
pop
in
mov
stc
retf
push
adc
sbb
or
sub
hlt
mov
iret
sbb
mov
dec
jae
xchg
sub
jo
jecxz
sbb
xchg
aam
dec
leave
jno
inc
jae
dec
sar
ins
shl
nop
das
stc
fwait
movs
cmc
xor
xchg
push
mov
inc
cli
sbb
add
cdq
fwait
fwait
je
lock
adc
sahf
imul
ins
dec
adc
popa
xchg
mov
sar
popa
popa
push
pop
je
sub
xchg
lods
push
les
or
mov
outs
pop
(bad)
(bad)
adc
push
fisttp
clc
cmp
lahf
(bad)
sbb
loopne
call
pop
jne
sub
sbb
xchg
jbe
test
mov
push
cs
enter
cs
in
ret
out
pop
mov
scas
sub
clc
push
mov
xchg
cmp
sar
and
js
or
jb
std
mov
arpl
adc
jmp
add
movs
add
sub
jp
lods
inc
add
cmp
sub
fiadd
adc
lahf
rol
mov
xor
in
sbb
jnp
mov
jle
mov
loope
out
pop
add
jne
mov
in
cmps
ret
xchg
pusha
sub
aam
call
xor
mov
mov
cmps
fsub
sub
in
fdivr
mov
and
jb
aad
add
add
aaa
mov
movs
gs
les
shr
push
cmp
popf
punpckhwd
add
xor
push
sbb
loope
or
faddp
mov
sub
inc
es
inc
int3
gs
in
scas
push
inc
shr
jo
fcomi
into
in
cmp
stos
cdq
je
push
leave
inc
call
fisubr
push
stc
bound
and
adc
int3
lahf
sbb
sub
sbb
sbb
push
(bad)
rol
pusha
clc
ret
mov
mov
xlat
xor
xor
sbb
push
mov
cmp
mov
mul
mov
movs
shl
sbb
xchg
mov
adc
movs
cmp
je
dec
add
fwait
ret
push
(bad)
pop
cmp
(bad)
out
mov
in
add
xor
stc
fnstcw
adc
mov
or
je
mov
jns
or
les
inc
rol
jge
xchg
test
jle
cmp
gs
or
or
mov
sub
in
push
fs
(bad)
ins
pop
jnp
cmc
push
xchg
es
cdq
pop
and
rep
fabs
cmps
sahf
jbe
xchg
cmp
inc
adc
imul
retf
add
jbe
add
neg
jnp
mov
out
mov
push
fisub
inc
test
jae
cmp
fild
shr
repz
xor
imul
test
push
xlat
sbb
or
cmps
out
icebp
out
push
jle
jg
mov
retf
cli
or
add
pop
mov
inc
out
outs
out
mov
in
imul
pop
movs
mov
rol
ror
sub
adc
push
(bad)
and
pop
lods
in
xchg
sbb
xor
mov
add
adc
add
or
dec
jecxz
out
ja
jmp
pavgb
stos
mov
jnp
ds
add
pop
pop
arpl
ja
aad
cmp
sub
or
mov
imul
sub
adc
sub
sbb
movs
retf
xchg
ficomp
or
sub
cmp
jns
sbb
in
call
test
mov
xchg
stos
mov
ret
imul
sub
xchg
pusha
pushf
enter
push
dec
sub
daa
inc
mov
pop
stos
jge
fsubr
test
pop
cwde
test
or
shl
pushf
xchg
jo
push
sahf
fisub
jbe
hlt
push
add
jne
les
adc
rol
inc
sbb
jns
fnstenv
mov
sbb
adc
adc
adc
xor
dec
cmp
es
pop
in
xor
stos
inc
(bad)
(bad)
in
xchg
in
fist
inc
inc
es
in
jmp
imul
data16
jle
fld
rol
and
fist
int3
xchg
stc
xchg
stos
inc
mov
pop
(bad)
(bad)
cli
fnsave
movs
(bad)
xor
mov
into
fld
sub
add
sub
test
int3
and
xor
ret
jbe
xchg
movs
cmp
jo
or
jne
cmp
pop
sbb
jb
add
shl
in
xor
rcl
js
add
in
sub
(bad)
nop
cdq
(bad)
jmp
test
xlat
test
dec
xchg
sbb
cmps
les
pop
cmp
das
in
dec
dec
fsubr
cmp
(bad)
push
pushf
jle
sbb
sti
mov
scas
dec
pop
lea
ss
outs
stos
fimul
add
imul
stos
jo
leave
mov
gs
daa
jae
pop
adc
jae
fdiv
xchg
test
inc
out
push
push
jp
push
inc
or
les
ins
aam
and
dec
dec
addr16
or
call
push
and
mov
push
push
mov
imul
push
loop
sti
(bad)
adc
push
or
mov
push
and
arpl
jle
out
lods
aam
into
dec
arpl
lods
cdq
outs
add
mov
dec
push
sub
lods
(bad)
jo
(bad)
xchg
add
cmp
aam
test
pushf
das
and
popf
cmps
push
sub
push
cmp
pop
adc
popa
sub
dec
xor
aaa
or
xlat
jo
popf
call
push
dec
cdq
jge
sub
push
retf
loope
mov
nop
inc
mov
mov
add
test
(bad)
sbb
add
inc
sti
arpl
das
inc
adc
xor
cld
call
sub
pop
jnp
dec
int
cmps
in
push
lea
imul
outs
xor
dec
pop
lods
cli
push
push
dec
and
sbb
lock
repz
push
les
fidiv
pop
cmps
add
mov
dec
inc
xchg
cmps
mov
sub
xchg
and
(bad)
pop
xor
imul
repz
cmp
nop
rol
jo
mov
sub
mov
int3
xchg
out
nop
inc
mov
mov
and
and
out
sahf
fdivr
push
sub
cmc
iret
and
clc
cmp
(bad)
(bad)
icebp
xlat
mov
cmovnp
adc
movzx
pandn
xor
mov
jl
xor
inc
jmp
mov
sahf
mov
sub
push
cmps
ret
mov
xor
test
cli
add
adc
sbb
xchg
sub
imul
arpl
ror
and
lods
mov
jne
sbb
push
and
mov
out
ja
(bad)
xchg
or
leave
and
outs
cmp
lahf
test
data16
push
mul
xchg
out
and
mov
mov
repnz
out
mov
and
add
cld
fisttp
(bad)
test
xchg
push
hlt
cmps
xchg
cmp
mov
push
xchg
js
jge
mov
loopne
and
sbb
dec
fbstp
add
and
leave
jecxz
push
xor
sub
dec
inc
pop
fidivr
popa
push
push
jns
pop
movs
dec
cmps
call
imul
jae
aam
mov
jno
clc
div
cmp
in
adc
mov
outs
mov
cs
pusha
dec
xor
xchg
lods
es
mov
mov
dec
jo
cmps
and
pop
repz
std
lods
cmp
imul
fld
jle
mov
ret
cli
call
pop
daa
jg
ja
pop
sbb
enter
push
cwde
jae
loopne
data16
add
fadd
sub
jl
sub
in
cs
pop
daa
dec
ins
mov
mov
rcr
adc
mov
loopne
jmp
cld
scas
lods
jl
push
dec
seta
movs
and
outs
lods
pop
or
mov
into
or
fnstenv
popf
inc
pop
dec
popf
ja
xchg
imul
and
cld
cmp
xor
mov
fdivp
mov
xlat
add
xchg
jg
js
cmps
sbb
mov
js
loop
sub
aas
push
xchg
repnz
inc
hlt
adc
dec
mov
popa
ja
loope
cmp
sub
fdiv
dec
or
or
ror
jge
mov
(bad)
enter
je
mov
cmp
mov
inc
sub
ss
mov
sub
shl
inc
mov
cwde
xchg
adc
mov
cmp
mov
jecxz
add
test
xchg
dec
cwde
sub
mov
inc
je
mov
lea
pop
dec
xor
fwait
mov
add
pop
fsub
jl
dec
pop
shl
pop
mov
outs
or
jmp
xor
(bad)
push
mov
mov
(bad)
jmp
adc
jbe
ror
mov
mov
jl
mov
retf
xchg
repz
outs
and
call
div
mov
xlat
mov
mov
pop
jmp
jns
imul
call
sbb
mov
add
scas
mov
pop
sar
and
sub
add
aam
ficom
hlt
pop
js
dec
bnd
sub
pop
xor
fnstcw
pop
jle
repz
popa
lea
sbb
add
ja
fbld
xor
iret
loope
iret
xlat
rcl
add
fild
mov
push
cmp
xor
add
inc
(bad)
call
and
inc
push
jmp
push
lock
ins
cmp
push
cmp
mov
movs
push
mov
xor
sbb
lods
or
stos
loopne
ret
addr16
adc
scas
sbb
mov
xchg
mov
popf
test
test
shl
xchg
jge
std
cmc
add
or
dec
jb
js
mov
mov
xchg
jmp
cmc
push
cdq
fnclex
cmp
dec
pop
or
out
adc
cmp
mov
sub
std
aam
sub
test
je
push
aad
out
fisttp
les
fadd
fxch
scas
fwait
adc
dec
and
clc
sti
cmp
xchg
adc
fst
aam
xchg
mov
sahf
inc
xchg
cmp
adc
ret
nop
xor
call
aad
(bad)
and
pop
jnp
pop
popf
sti
js
mov
xchg
imul
lods
mov
clc
pop
pop
xchg
push
xchg
mov
xchg
int
cmp
outs
mov
aaa
cmp
nop
cmps
test
aaa
mov
inc
test
mov
mov
test
sub
lahf
adc
pop
sbb
push
(bad)
xchg
sub
sub
mov
add
out
fs
data16
shr
sub
lods
addr16
stos
xchg
xor
inc
add
js
add
int3
stos
inc
inc
sub
adc
jno
mov
int3
mov
es
loop
shl
xchg
mov
ins
ins
repz
cmp
jle
iret
xor
cmp
inc
outs
sbb
popf
shl
fsub
leave
pusha
aas
xor
jp
mov
lea
mov
cmp
jae
and
jae
retf
xor
iret
cmc
(bad)
ret
call
mov
jno
add
shr
loopne
loop
dec
ins
add
scas
call
xor
xor
scas
arpl
(bad)
pop
adc
pop
movs
push
mov
lods
(bad)
mov
stos
mov
jmp
repz
mov
cmp
in
imul
xlat
fild
adc
leave
push
mov
leave
loopne
cli
push
or
or
pop
and
inc
sti
sub
or
ret
dec
repnz
loopne
mov
mov
inc
add
pop
inc
pop
dec
repz
dec
std
out
cli
or
or
or
add
push
ins
ins
std
push
adc
mov
mov
xor
and
push
and
cmp
and
dec
adc
fdiv
pop
mov
sbb
outs
arpl
in
lods
int
es
pop
mov
in
push
mov
leave
xor
mov
je
or
inc
outs
push
jnp
dec
mov
mov
cmp
lahf
sub
in
movs
call
push
xchg
dec
pop
xor
sub
push
(bad)
cmps
nop
pop
(bad)
mov
cmp
ret
in
(bad)
push
test
jmp
and
nop
vsubps
(bad)
lahf
xor
movs
popa
mov
push
out
jb
mov
push
mov
dec
retf
push
jmp
mov
xchg
shl
xchg
sti
push
dec
mov
and
mov
pop
fcomip
sbb
xchg
cmp
jns
ds
mov
test
nop
mov
sbb
cs
cs
mov
aad
adc
or
xchg
fisub
retf
iret
cmc
sbb
outs
cmp
div
test
or
movs
mov
scas
jne
push
sub
mov
xchg
xor
jns
sub
pop
add
call
cmp
xchg
imul
sub
push
push
pop
lock
mov
fstp
lods
das
(bad)
cld
std
add
outs
jmp
sbb
cmc
in
sbb
sub
dec
mov
cmp
fs
cmps
or
(bad)
xchg
pop
jl
stos
xchg
and
aad
popf
stc
repz
aam
mov
and
mov
test
sbb
in
enter
xor
jmp
aam
jg
stos
jg
or
ficomp
clc
fidiv
aaa
sub
xchg
aas
push
je
aam
pop
retf
lahf
inc
test
xchg
in
repz
clc
(bad)
cmp
push
out
mov
in
loope
push
mov
sub
int3
aaa
push
dec
mov
jb
loopne
lods
xchg
movs
xchg
pop
dec
shr
fwait
and
and
inc
xor
push
dec
add
call
cmp
into
int
push
sar
std
in
push
in
or
xor
nop
rol
push
xor
adc
mov
(bad)
push
mov
retf
dec
test
aas
mov
mov
rcl
add
sub
jo
inc
push
repz
dec
outs
inc
icebp
retf
shr
jmp
movs
mov
pop
mov
leave
cdq
ds
sbb
jo
cwde
xor
sahf
pusha
fsubr
sub
push
movs
sub
lods
inc
mov
nop
in
add
mov
in
into
sbb
pushf
in
mov
push
sbb
jp
and
jg
jo
js
push
pop
xor
dec
cmp
push
xlat
outs
outs
aaa
xchg
adc
stc
adc
loop
sub
jl
rcl
cwde
xor
lahf
xor
push
test
sub
(bad)
mov
push
out
sbb
add
xor
test
push
shl
mov
mov
xor
cli
adc
sti
add
cmp
push
movs
add
pop
test
or
ss
sbb
pop
mov
xor
push
sti
pushf
mul
sahf
cmps
repnz
les
jns
dec
sbb
cwde
iret
adc
sbb
aam
mov
mov
mov
aam
cmp
(bad)
xor
jmp
test
retf
das
fcomp
test
adc
pop
fidiv
mov
sub
xchg
popf
outs
xor
int
inc
mov
das
aas
mov
pxor
daa
lods
lds
ins
xor
or
push
gs
mov
sahf
in
cmp
cdq
clc
sub
push
pop
pop
fcom
test
loopne
or
mov
adc
push
icebp
push
mov
sbb
sbb
push
arpl
sbb
add
and
push
in
call
cld
add
or
cld
int3
mov
pop
icebp
xchg
inc
jne
enter
hlt
daa
aas
out
ret
cwde
adc
or
in
test
add
leave
ror
out
int3
ret
inc
into
cmp
push
cmp
in
sbb
(bad)
pop
out
fst
cli
(bad)
imul
dec
cmp
lds
add
jae
pop
jo
and
mov
pop
stos
pusha
dec
and
iret
and
or
clc
add
call
mov
div
pop
mov
pop
cli
or
pop
pop
test
ror
test
add
hlt
or
and
and
add
xor
pusha
dec
fisub
add
pop
adc
mov
add
pop
repnz
cmps
test
ss
mov
pop
jle
or
in
sub
ja
jmp
jp
or
cld
mov
daa
mov
xchg
repz
sti
(bad)
popf
sbb
daa
inc
aad
loop
imul
jecxz
mov
aad
inc
push
(bad)
sbb
push
mov
jle
mov
mov
jp
dec
es
jo
inc
aam
out
xor
ss
push
mov
jb
dec
inc
addr16
fdiv
jno
adc
push
gs
inc
lea
xor
sub
aaa
inc
xchg
aaa
add
daa
icebp
fiadd
cwde
pop
push
push
fdivr
std
shr
outs
loop
jno
mov
inc
pop
sahf
test
adc
enter
bound
scas
lock
sbb
mov
sub
ins
(bad)
sub
int3
pushf
add
aas
cwde
leave
or
sub
mov
popf
mov
lods
lea
ins
mov
push
cdq
sbb
xchg
pop
add
cmp
cmc
sbb
aas
dec
sub
dec
test
movs
loop
(bad)
pop
mov
cmps
push
rol
(bad)
scas
test
loopne
cmp
fwait
repnz
stos
mov
cld
test
popf
lahf
out
mov
fxch
and
test
fmulp
mov
shl
xor
xchg
jae
xor
bound
mov
push
repz
sub
mov
sbb
dec
xor
and
mov
out
(bad)
xor
leave
test
outs
push
into
inc
mov
pusha
mov
jne
shl
inc
pop
repnz
and
outs
les
xchg
jne
arpl
popf
xor
sub
cmp
shr
dec
push
xchg
jno
and
jae
fst
fwait
stos
xor
(bad)
sbb
mov
les
frstor
dec
dec
and
mov
dec
in
aam
or
retf
adc
mov
xchg
sub
jl
(bad)
pop
fisub
cdq
jmp
or
jno
shl
ror
inc
test
push
push
adc
test
push
sbb
dec
inc
neg
das
xor
xchg
xlat
frstor
sub
cmp
jp
jmp
imul
in
aaa
xor
fld
dec
fist
int3
xor
mov
xor
das
sti
xchg
loopne
mov
pop
lahf
push
shl
push
mov
jae
xor
push
sub
loopne
ret
cwde
out
sub
pusha
mov
sbb
mov
xor
adc
add
pop
popa
xchg
test
mov
xlat
neg
js
pop
add
inc
sbb
pushf
addr16
xor
mov
xlat
outs
arpl
cmps
(bad)
push
lods
jne
add
aas
mov
shl
jge
cld
xor
(bad)
mov
or
lods
ret
test
loopne
xor
pop
add
and
hlt
mov
ror
push
jecxz
mov
ret
dec
aam
call
and
pcmpeqb
dec
mov
pop
add
add
mov
leave
in
add
or
pop
enter
mov
dec
xor
(bad)
jmp
jl
mov
pop
aam
sub
(bad)
xlat
loop
fwait
xchg
jnp
xor
ret
or
mov
shl
repnz
sbb
xlat
retf
sbb
sub
adc
stos
clc
xchg
lea
pusha
push
mov
and
mov
mov
js
push
rcl
mov
xchg
in
retf
cmps
sub
adc
aas
jne
mov
xchg
add
std
pop
mov
add
and
sbb
fild
stos
add
mov
mov
(bad)
cld
out
scas
push
(bad)
jmp
int3
mov
test
out
sar
cs
adc
jnp
icebp
loop
jae
ds
sub
test
shr
lods
mov
or
xor
fwait
fwait
mov
inc
lock
add
push
pop
jnp
ror
cmps
outs
cmps
adc
lods
sub
repnz
pop
cdq
pop
push
mov
pop
adc
das
cmp
mov
cmp
imul
inc
sub
adc
aaa
mov
lea
jmp
adc
cmp
mov
dec
jns
cmp
sahf
faddp
les
loopne
mov
cdq
xchg
add
xchg
inc
imul
mov
xor
jo
retf
fbld
pop
in
syscall
push
(bad)
shr
test
mov
jl
add
mov
(bad)
jmp
or
es
pushf
(bad)
(bad)
mov
sub
push
aaa
lods
movs
in
int3
test
mov
dec
lock
jno
sahf
mov
sar
cmps
in
xchg
dec
mov
jg
(bad)
mov
jo
cmps
adc
inc
jne
jno
mov
dec
out
pop
lea
dec
sub
stos
daa
imul
popf
pop
arpl
movs
push
xor
imul
int3
add
inc
retf
ret
(bad)
pop
in
test
ror
cmp
popf
push
shl
sbb
call
add
dec
daa
es
push
mov
hlt
cmp
jo
mov
jmp
mov
mov
push
add
hlt
and
(bad)
stc
xchg
in
mov
xchg
sub
push
xlat
ins
and
fs
mov
(bad)
gs
lods
add
out
repnz
inc
cmp
or
js
or
dec
inc
sbb
cmp
jmp
icebp
stc
mov
pop
in
mov
(bad)
lods
mov
rcr
int3
frstor
jle
lds
(bad)
or
retf
add
add
stos
xor
retf
gs
xchg
call
je
mov
sub
ins
lea
mov
cmc
or
push
cmp
sbb
inc
aad
rcr
xchg
iret
ror
inc
cmp
or
out
mov
sar
test
ds
sti
mov
stos
retf
mov
push
mov
adc
pop
mov
add
push
aaa
nop
jp
out
dec
and
jbe
dec
mov
test
imul
push
imul
mov
in
xchg
scas
inc
sub
fild
pop
pop
imul
(bad)
jge
mov
fs
std
jbe
jp
pop
jmp
clc
cmps
or
lods
gs
and
mov
dec
cmp
push
outs
mov
das
inc
out
sub
bound
repz
stos
xchg
push
stc
jp
sbb
mov
ss
sub
leave
jge
adc
repz
push
in
mov
add
sbb
imul
movs
dec
shl
popf
sti
mov
push
xor
fwait
xor
mov
stc
out
push
aas
push
mov
fimul
jbe
add
icebp
sub
stos
xchg
fdiv
sahf
icebp
in
sbb
push
fucomi
xchg
inc
mov
mov
sub
stc
loopne
sbb
mov
bnd
test
xor
fcomp
outs
aad
push
aam
mov
test
mov
cs
pusha
pop
shl
movs
outs
inc
dec
mov
or
mov
inc
jg
scas
mov
pusha
or
jne
mov
cmps
dec
dec
jno
int
pop
rcr
sar
cmp
cmp
ret
in
mov
dec
xchg
test
or
dec
jmp
test
jmp
sbb
loop
push
and
into
mov
js
adc
mov
cs
mov
sbb
cmp
xor
scas
imul
cmp
add
(bad)
mov
push
push
adc
mov
shl
daa
ror
cmp
and
sub
adc
jl
xor
test
dec
cmp
sbb
pop
mov
xor
and
or
cmps
jno
or
enter
cmp
mov
cmp
cmp
or
push
xlat
dec
out
xchg
xlat
enter
xchg
xor
pop
repnz
add
(bad)
jg
fsub
or
ds
mov
(bad)
push
popf
mov
jnp
sub
pushf
ds
rol
mov
or
loop
jge
sti
adc
xor
lods
push
pop
sbb
xchg
pop
mov
retf
mov
and
es
pop
mov
mov
jo
outs
repnz
fwait
cmps
cdq
call
cmc
sbb
aaa
push
mov
mov
xchg
mov
sbb
dec
sbb
xchg
mov
and
cwde
pop
push
idiv
sbb
ds
imul
bound
dec
and
adc
mov
mov
int3
in
push
push
mov
stos
lahf
push
and
cmp
push
test
mov
sub
rcr
cli
cs
pushf
outs
mov
retf
ror
(bad)
sub
mov
inc
xchg
mov
push
idiv
inc
mov
lock
mov
inc
hlt
addr16
inc
dec
xor
add
mov
xor
sub
repnz
psrlq
xchg
ja
outs
jg
mov
cmp
aaa
jl
inc
inc
(bad)
(bad)
test
add
loope
or
(bad)
ins
and
addr16
mov
and
mov
pop
xchg
mov
scas
dec
dec
jmp
cli
(bad)
retf
inc
jno
cmp
dec
in
out
pop
rol
jae
dec
mov
ja
ret
addr16
ins
stc
adc
xchg
pop
mov
lods
adc
rol
lahf
stc
cmp
mov
leave
jg
daa
mov
sahf
stos
xchg
and
xor
add
mov
(bad)
(bad)
sti
lahf
push
cli
xlat
add
sub
out
jmp
aas
inc
push
or
mov
adc
add
cmp
or
jcxz
fimul
xchg
scas
mov
les
dec
inc
mov
(bad)
imul
jnp
dec
sar
popf
cmp
jle
mov
out
mov
outs
add
neg
je
lods
lock
es
cmps
ja
sbb
sbb
loope
pop
mov
or
cs
popf
popf
in
push
sbb
jg
int3
mov
jo
mov
fadd
je
call
shl
sar
dec
push
enter
mov
call
adc
add
or
sti
pushf
mov
fs
and
arpl
xor
fisubr
rol
mov
and
test
mov
aas
daa
xchg
hlt
push
call
call
mov
xchg
or
in
sub
scas
daa
daa
jecxz
add
movs
int3
addr16
std
inc
adc
(bad)
sahf
aad
ins
in
sbb
dec
sbb
retf
inc
cmps
nop
test
sbb
lods
lods
jae
test
push
dec
rcl
inc
les
cmps
xchg
cmp
lods
daa
cmp
adc
push
aas
and
mov
push
xchg
push
popf
adc
lahf
add
and
cmps
mov
fwait
in
ror
sar
jle
dec
xor
xor
jmp
jmp
cdq
pusha
xchg
jmp
add
or
sub
pop
(bad)
mov
mov
repz
and
adc
xchg
pop
mov
inc
cwde
in
inc
push
call
or
sbb
sar
ror
pop
jmp
mov
gs
repz
fst
mov
jb
lock
sub
jmp
sub
pop
push
xchg
xchg
mov
pop
mov
mov
sub
xlat
out
xchg
mov
mov
xor
and
mov
cmp
ins
mov
in
fild
pushf
pop
adc
pop
daa
mov
inc
mov
test
in
pusha
jle
jecxz
jmp
aas
jmp
inc
cmp
bound
pushf
pop
inc
mov
adc
popf
xchg
cmp
out
mov
mov
sbb
cmps
ins
lea
std
clc
ficom
and
ret
mov
sub
pushf
int3
(bad)
push
jb
cld
jl
fisttp
test
sub
xor
rol
ds
inc
cli
fidivr
data16
fist
cmp
inc
sub
or
adc
xor
push
aam
push
add
das
shl
mov
add
inc
mov
loopne
sbb
aas
xor
jge
mov
xchg
jmp
cmp
cdq
fstp
jge
(bad)
mov
push
fild
aad
cmp
(bad)
mov
stos
hlt
add
cli
pop
cmps
popw
dec
mov
jmp
mov
xchg
pushf
sbb
lock
jp
shl
add
fstp
sub
iret
xchg
mov
cs
and
fistp
push
adc
shr
add
sub
xchg
out
in
adc
sahf
jo
aas
adc
dec
jmp
or
mov
inc
xchg
mov
dec
jno
mov
pop
push
ror
mov
push
lea
sahf
mov
mov
mov
out
add
mov
clc
push
xor
cs
test
enter
ror
fsubp
inc
loopne
cs
jne
cmp
vmread
icebp
mov
std
or
add
pop
pop
push
cmp
ins
bound
jbe
add
ret
lock
pushf
dec
movs
pop
fwait
sbb
ror
aaa
stos
aam
dec
xchg
sbb
adc
push
xor
lds
daa
stc
lods
imul
cmps
cdq
and
loope
sub
fisttp
lds
lods
das
mov
adc
inc
mov
and
push
sub
dec
sub
lock
add
dec
add
jmp
mov
aam
retf
cwde
or
xor
fs
dec
mov
icebp
in
mov
push
and
inc
mov
call
rcl
jge
or
ds
loope
int
call
push
scas
mov
arpl
adc
mov
push
retf
xchg
aas
adc
imul
mov
push
lods
mov
dec
sahf
lds
xlat
push
lahf
mov
jp
(bad)
pop
and
jns
mov
fs
mov
ret
aas
inc
xchg
push
pop
xor
pop
cs
or
pop
cmp
clc
xchg
fist
jecxz
(bad)
ja
fistp
shr
add
pop
imul
es
out
add
mov
mov
test
jp
sub
push
add
call
rol
popa
ret
bound
mov
cli
xor
mov
out
or
sbb
cld
pusha
gs
mov
je
push
xor
call
mov
lds
sub
sub
sub
loop
mov
retf
inc
lock
sbb
rcr
movs
sbb
out
jb
out
push
jb
in
sub
mov
lds
retf
call
loop
fdiv
test
pushf
adc
jno
cwde
dec
pop
(bad)
pushf
adc
adc
data16
bound
mov
fcmovu
js
mov
jmp
fdiv
stos
rol
arpl
xlat
mov
cmp
inc
jns
gs
xchg
mov
or
xor
jle
(bad)
loope
push
inc
cdq
pop
fidivr
and
stc
pop
fisub
mov
call
xchg
or
(bad)
call
sub
pop
pop
clc
cs
sti
xchg
mov
in
push
inc
mov
adc
dec
scas
jp
xchg
xor
data16
and
and
out
push
jne
jae
imul
cdq
gs
ja
iret
mov
or
out
mov
or
loopne
adc
pop
sbb
sbb
mov
fwait
or
pop
jmp
scas
fucom
mov
xchg
and
pop
test
jmp
mov
call
idiv
lds
movs
retf
push
mov
aas
and
and
xor
sbb
xor
jle
iret
mov
loopne
push
out
enter
mov
retf
enter
repz
mov
lods
popa
clc
out
(bad)
push
push
and
lods
sahf
push
call
fist
loope
(bad)
mov
retf
fs
(bad)
fdivr
xor
out
imul
arpl
imul
sub
adc
mov
jb
mov
mul
xchg
es
scas
icebp
je
str
or
dec
fwait
pusha
mov
adc
xchg
movlps
jg
mov
repz
push
icebp
cmp
xor
dec
fdivr
push
inc
inc
sar
or
jge
xchg
add
scas
enter
cmps
inc
rcr
mov
inc
xchg
daa
mov
in
jmp
or
mov
(bad)
in
ins
xor
jp
cwde
test
aaa
hlt
pop
rcr
mov
inc
sub
xor
movs
cmp
int
jecxz
fisub
push
sub
inc
mov
pop
in
fcmovnu
cdq
pop
push
std
xlat
xlat
sahf
call
jl
or
popa
stos
mov
jno
cmp
mov
cmp
(bad)
bound
push
cmc
lahf
add
sub
mov
xchg
cmps
movs
push
sahf
inc
jmp
sbb
mov
into
add
out
js
dec
loope
outs
inc
popf
sub
ins
push
rcr
cmc
dec
out
sbb
pushf
(bad)
in
jmp
and
jge
shl
add
inc
fld
ja
adc
push
popa
pop
inc
or
and
mov
js
jo
lods
push
jno
sbb
mov
jbe
xchg
and
sbb
adc
dec
and
mov
cmp
pop
mov
pop
ins
sbb
shl
in
mov
cmc
in
jmp
imul
mov
xor
clc
(bad)
cmps
inc
mov
mov
sub
push
mov
aam
test
(bad)
shl
daa
test
dec
add
mov
xor
pushf
pop
and
aad
adc
ds
and
mov
(bad)
pop
cmp
lock
cmp
sub
inc
sub
les
inc
cmp
out
pop
in
out
fs
sbb
xchg
xor
inc
retf
pop
jecxz
xor
retf
jb
shl
dec
mov
movs
das
sub
mov
sbb
push
or
scas
std
outs
ret
jmp
inc
or
jg
pop
sahf
imul
adc
and
mov
mov
and
mov
adc
pop
cmp
cmps
pop
lods
fdiv
push
imul
stc
ss
loope
fdiv
dec
hlt
repz
mov
into
xchg
sahf
aaa
retf
pop
(bad)
mov
fcmovb
sbb
int3
cs
sbb
clc
icebp
push
push
cdq
outs
in
cmp
sub
retf
int3
cmps
and
push
inc
mov
mov
cmp
xchg
jbe
fsub
mov
and
mov
sub
cmp
ins
push
mov
or
loop
cmps
adc
adc
fwait
sbb
shl
sbb
jns
imul
ret
xor
aas
mov
cs
rol
push
test
cs
sbb
fwait
ud1
adc
std
mov
xchg
xlat
push
in
mov
xlat
stos
mov
inc
sub
mov
mov
shl
in
inc
ja
pop
retf
push
jmp
pop
cmp
loope
add
lods
cli
inc
add
xchg
leave
push
mov
in
cmps
sub
fistp
xchg
mov
xchg
lea
mov
test
mov
sbb
jo
xchg
mov
aas
xchg
hlt
out
mov
jmp
(bad)
hlt
arpl
pushf
cld
mov
adc
test
loop
jns
fucomi
syscall
mov
xor
in
push
(bad)
daa
cmp
mov
cmp
pop
stc
cmp
add
cmp
aad
push
scas
imul
sbb
repnz
xchg
movs
cmp
arpl
das
in
ret
xchg
add
xchg
imul
movs
pop
add
retf
cmp
int
dec
push
inc
jnp
inc
popa
mov
inc
pop
into
mov
(bad)
sbb
cmp
out
jmp
inc
jbe
and
call
inc
xchg
push
inc
icebp
add
pop
into
xor
mov
test
outs
arpl
push
ror
call
fmul
out
pop
test
pop
pop
fwait
outs
mov
es
stos
sbb
jge
inc
loopne
repnz
inc
stos
push
pop
mov
arpl
sub
mov
mov
addr16
pop
or
daa
jno
sub
stos
sbb
push
sar
inc
inc
pop
cmps
(bad)
mov
shl
cdq
xchg
pop
sar
jne
movs
pop
cli
sbb
cmp
mov
jle
push
pop
les
dec
jb
push
sahf
ss
outs
stos
loope
xor
lea
push
xor
call
in
mov
or
jmp
push
dec
mov
cmp
cmp
fadd
mov
aaa
inc
pop
fisub
rcl
mov
jl
daa
push
int3
test
add
xlat
add
shr
vprotb
ret
and
pop
out
mov
ror
mov
cwde
retf
lahf
loop
sbb
mov
idiv
and
repnz
and
dec
aas
and
aam
push
into
pop
pop
mov
inc
movs
mov
int
adc
pop
or
scas
iret
sti
icebp
dec
jmp
xor
(bad)
lahf
and
(bad)
repz
adc
mov
pop
fwait
xor
xchg
pop
or
pop
jmp
inc
xlat
fistp
int3
xor
jmp
cmp
xor
lods
mov
dec
pushf
movs
pop
in
cwde
jg
std
cmp
out
jmp
or
mov
adc
pop
mov
(bad)
outs
jbe
dec
add
pushf
add
test
ss
loop
sti
retf
lock
ds
inc
mov
rol
fisttp
pusha
cmps
xor
mov
inc
call
jge
xor
xor
fadd
adc
or
and
add
jbe
inc
lea
jo
or
push
mov
call
push
mov
das
test
dec
lods
jp
movs
mov
or
cld
stc
mov
add
jo
int3
pop
mov
xor
pop
xchg
aaa
push
sub
ins
movs
into
daa
jmp
push
loopne
popa
sbb
mov
push
dec
ret
fwait
xchg
sbb
daa
add
dec
stos
shl
pop
and
ins
and
aaa
mov
pop
inc
ins
xchg
scas
sbb
fwait
cs
jmp
ins
call
test
cli
sahf
int3
cmc
push
inc
(bad)
and
cmp
or
call
adc
not
mov
je
or
rcr
mov
mov
daa
pop
sub
pcmpeqd
pushf
lahf
fnstcw
jmp
enter
push
push
xchg
in
repz
cwde
popf
int
mov
les
jno
pop
add
add
sbb
pop
leave
out
ja
jo
or
mov
dec
jp
call
in
xchg
xor
mov
(bad)
push
into
inc
ror
push
dec
je
adc
jl
mov
lods
std
aaa
fmul
pop
stos
or
push
out
mov
inc
mov
pop
lods
cmps
push
inc
jg
cmp
cmp
arpl
sub
push
into
cwde
pop
cmps
sbb
or
cmp
imul
sub
das
or
fnstsw
ret
jg
pop
clc
pop
dec
daa
cmp
call
push
lds
inc
sub
ror
pop
shr
xor
enter
fdiv
iret
mov
dec
movs
dec
dec
das
jle
and
fimul
mov
push
xchg
dec
outs
in
xor
outs
xor
lods
pop
push
xor
fdivr
or
xor
fbld
fdiv
scas
xor
lahf
push
inc
idiv
cwde
stos
jmp
mov
cmp
outs
and
dec
mov
outs
pop
jo
mov
inc
stos
sub
pop
neg
mov
icebp
jge
cmp
push
mov
idiv
aaa
mov
sahf
push
movs
inc
pusha
jl
ds
xchg
mov
pop
mov
in
and
sub
aad
setae
loope
xchg
cmp
pop
lods
jno
enter
shr
in
sbb
shl
pop
out
inc
movs
dec
(bad)
jns
xchg
rcr
cs
repz
sub
aas
aad
dec
and
jge
or
mov
ret
outs
gs
sar
inc
stos
scas
xor
pop
(bad)
mov
rcl
jae
xor
js
ret
sbb
shl
sbb
cmp
jg
add
and
xchg
pop
leave
test
adc
dec
sar
jmp
mov
fnstcw
xor
ror
ds
cwde
sbb
mov
dec
mov
dec
mov
fwait
daa
pop
bswap
iret
mov
inc
int3
jg
movs
iretw
and
mov
jp
xchg
push
mov
mov
mov
add
sbb
ss
clc
cmp
aaa
call
(bad)
hlt
hlt
cmp
out
xchg
jb
xor
mov
and
and
movsx
push
cmp
mov
mov
dec
cmp
jb
add
into
in
int
dec
jae
loop
push
xchg
fdivr
mov
mov
rol
push
gs
push
outs
stos
sub
sub
jg
mov
jl
mov
sbb
mov
jge
mov
fnstcw
imul
stos
push
dec
push
mov
push
push
nop
lahf
repnz
outs
mov
sub
shl
cmp
mov
inc
icebp
aam
and
or
cmp
xor
adc
popf
lods
mov
jbe
stos
push
sbb
and
cmp
add
pusha
test
retf
rcl
rol
or
inc
cmc
xor
add
iret
(bad)
enter
femms
dec
leave
mov
movs
bnd
cmp
cmps
mov
push
pop
loopne
loope
add
pusha
call
jg
inc
aas
mov
push
add
sub
dec
std
sbb
cli
outs
push
push
xchg
or
push
add
repnz
mov
cmps
xchg
xchg
pop
jns
inc
(bad)
adc
into
repnz
sub
rcr
sti
fadd
adc
sar
mov
popa
hlt
pop
jecxz
push
or
ret
movs
(bad)
sub
xchg
sbb
pop
repnz
dec
les
xchg
add
xchg
aam
dec
ja
adc
out
xchg
(bad)
faddp
push
mov
sbb
popf
in
jmp
stc
scas
inc
push
mov
jnp
cmps
add
push
dec
test
adc
pop
pusha
test
or
or
pop
and
fild
movs
jnp
mov
pop
push
adc
in
or
xor
lods
les
jnp
pop
pop
repz
mov
xor
sub
xor
sbb
jmp
push
dec
jnp
jne
in
cmps
mov
sbb
lods
push
dec
test
aam
cld
mov
mov
es
lods
test
popf
sub
xchg
daa
leave
lods
cmp
movs
mov
mov
icebp
jmp
clc
bound
xchg
clc
xor
jl
(bad)
xchg
jmp
sbb
sbb
xor
pop
out
sub
jmp
cmps
sbb
push
push
and
mov
sahf
(bad)
fist
adc
rcr
dec
adc
mov
xchg
pop
in
jbe
or
push
push
dec
add
mov
cs
pop
loopne
rcl
sub
jb
xor
push
fild
pop
adc
imul
xchg
add
push
(bad)
daa
dec
cmp
add
xchg
nop
popa
mov
mov
dec
jo
sbb
in
fcmovnbe
xchg
fistp
mov
out
push
jg
pop
fnstcw
inc
clc
pop
out
bound
mov
dec
mov
push
push
popa
cli
aas
mov
mov
pop
cmp
loopne
jp
enter
aas
gs
jmp
push
jg
dec
and
ja
xchg
or
mov
fiadd
in
stc
or
sar
jle
add
iret
das
or
(bad)
or
ins
xchg
iret
lds
push
retf
jbe
add
movs
dec
idiv
jno
push
adc
or
icebp
or
movs
in
dec
dec
push
mov
test
dec
std
dec
outs
cmps
out
sub
shl
add
rcr
ret
xchg
jge
addr16
retf
adc
pop
mov
mov
test
in
lock
call
test
mov
add
loop
mov
pop
and
fld
pop
outs
into
add
pop
inc
bound
pusha
cwde
scas
adc
les
mov
jmp
mov
xchg
adc
aas
adc
xchg
das
dec
ss
stos
mov
mov
ins
scas
sahf
sti
pop
int3
outs
dec
fmul
or
push
xlat
retf
(bad)
cmp
mov
add
and
inc
dec
mov
inc
dec
mov
stos
es
nop
add
xchg
dec
fidivr
sub
mov
add
not
repz
pop
mov
sahf
pop
inc
sbb
push
sbb
shl
or
in
sbb
sub
mov
jmp
adc
push
mov
enter
mov
xor
or
ins
pop
das
mov
shr
shr
call
retf
bound
pop
sub
sbb
idiv
test
or
in
sbb
cmp
dec
std
jb
inc
test
test
ins
dec
(bad)
ins
dec
jo
adc
(bad)
int3
cdq
cwde
lahf
lds
dec
into
cmp
sub
mov
loop
mov
nop
retf
cs
popa
int3
push
leave
cmps
cmp
xchg
mov
adc
adc
mov
xor
jno
sbb
jmp
out
imul
(bad)
fisttp
push
out
cs
data16
test
add
pop
std
ins
std
and
pop
mov
xchg
scas
cli
add
retf
or
push
hlt
mov
or
js
inc
cdq
fld
dec
and
mov
arpl
jb
loop
sahf
and
jo
cmp
sbb
xchg
inc
arpl
inc
add
add
retf
shl
pusha
xor
xchg
xchg
xchg
xor
(bad)
mov
bound
sbb
mov
out
ret
or
push
or
shr
add
and
adc
adc
repz
mov
mov
out
mov
push
cmp
mov
pop
dec
push
mov
push
sub
out
lods
xor
push
push
mov
cmp
xor
fiadd
outs
loopne
in
xchg
dec
push
mov
jmp
mov
stc
pop
xchg
xchg
popf
mov
shl
in
and
mov
jmp
test
cmc
add
cli
ror
scas
(bad)
xor
xor
adc
lea
retf
jmp
or
jmp
xor
pop
test
cmps
jp
je
or
shl
jg
jl
sub
mov
loope
add
test
mov
in
xchg
mov
shl
sub
sar
nop
jmp
pop
pop
sub
arpl
mov
arpl
add
mov
inc
push
rol
setbe
jg
mov
retf
pop
dec
xchg
aaa
mov
sbb
std
iret
ror
dec
hlt
into
or
sub
pusha
sahf
fbld
jns
enter
jmp
fstp
ds
retf
inc
push
out
or
popa
test
ror
mov
mov
xor
ins
mov
pop
adc
scas
mov
mov
(bad)
(bad)
les
pop
xchg
xchg
jo
xor
inc
xlat
push
sar
and
jnp
adc
dec
push
jnp
or
test
fidivr
cmps
push
test
shl
jg
pop
and
and
xchg
repnz
int3
push
push
dec
pop
xor
and
cmp
call
cwde
xchg
mov
inc
mov
loop
in
sub
ss
sti
jecxz
jl
push
or
or
cmp
inc
les
lds
add
mov
fsubr
xchg
xchg
mov
addr16
(bad)
or
std
int3
xchg
clc
inc
cmp
push
sbb
dec
xor
rol
gs
and
add
sbb
xor
sub
mov
xlat
mov
movs
push
scas
and
dec
aam
xchg
add
loop
adc
outs
jmp
adc
cmp
and
cmp
mov
cmc
mov
adc
(bad)
mov
sub
xchg
and
push
ss
push
jnp
push
les
or
or
jnp
fadd
addr16
push
in
les
out
out
bound
mov
pop
retf
retf
frstor
scas
cmp
scas
daa
cmps
fiadd
dec
sbb
fidiv
cld
mov
or
push
pop
leave
pop
into
sbb
add
mov
pushf
sub
push
push
xor
pop
pop
jb
aaa
mov
push
jno
jnp
inc
sub
outs
clc
sbb
nop
dec
xor
jmp
stc
sub
arpl
bound
jecxz
mov
outs
(bad)
sar
hlt
pop
jecxz
out
ss
movs
inc
xchg
lods
pop
add
add
push
fdivrp
jmp
shl
pop
or
mul
movs
or
xchg
cmp
rcr
inc
jle
jmp
in
adc
inc
psrld
sbb
mov
je
fisttp
adc
mov
aas
imul
mov
out
cmp
ds
not
mov
jp
xchg
ror
icebp
pop
jecxz
lock
jbe
push
iret
and
lock
int
push
mov
aaa
(bad)
jmp
pop
and
lds
or
mov
cmp
mov
xor
push
ds
and
xor
into
ins
adc
xor
jge
imul
(bad)
sbb
fisttp
adc
xor
loopne
push
mov
inc
test
ss
sbb
add
dec
adc
aas
add
xchg
ins
push
xor
adc
ins
push
add
xor
dec
add
jae
aam
pop
loopne
inc
icebp
int
ja
push
fsubr
sbb
aad
push
popf
jbe
mov
mov
xchg
aas
adc
call
stos
imul
cmps
sbb
dec
mov
out
jle
cmp
mov
popa
mov
out
push
jp
cmp
pop
and
add
out
mov
stos
and
adc
add
adc
mov
outs
out
pop
jnp
(bad)
xor
test
adc
and
std
mov
jno
imul
mov
xor
mov
(bad)
hlt
sub
out
stos
cmps
in
outs
in
cmp
jno
stos
dec
xor
movs
mov
cmp
mov
jnp
jae
or
xor
mov
push
xchg
cli
push
mov
es
adc
leave
or
push
retf
out
pop
(bad)
dec
repnz
pop
int
repz
jge
stos
xchg
push
jge
outs
leave
mov
loope
adc
fwait
mov
(bad)
iret
mov
sub
pop
lock
mov
dec
pop
outs
ins
ret
pop
sahf
sbb
xchg
cwde
je
xor
rcr
jl
call
dec
loope
imul
sub
das
pop
xor
lds
jp
add
jns
mov
pusha
ret
scas
lds
push
jge
or
jno
sub
pop
(bad)
or
out
cli
mov
mov
sub
jo
(bad)
push
pop
je
mov
xor
sub
mov
add
movs
and
ret
mov
outs
mov
pop
sub
push
dec
cs
or
sbb
pushf
sbb
xor
and
in
nop
pop
pop
call
cli
jle
cli
sub
jno
lock
enter
pop
mov
mov
(bad)
push
pusha
stc
outs
arpl
mov
mov
test
dec
stos
in
dec
mov
add
or
xchg
aam
in
jns
cmps
and
xchg
adc
jmp
ret
add
push
arpl
xchg
xor
pop
or
sub
push
test
mov
adc
push
jno
inc
lds
mov
sbb
xor
jae
stc
nop
mov
jne
add
dec
aaa
js
inc
xchg
add
sbb
jecxz
jle
enter
pop
pop
jge
nop
adc
dec
clc
pop
xchg
adc
repz
mov
cwde
adc
jge
push
test
ins
jno
jl
push
mov
cli
pop
das
(bad)
in
sahf
nop
ins
shl
out
pop
lods
aas
dec
sti
pusha
arpl
push
push
aad
mov
retf
repz
pop
sub
cmp
dec
mov
and
hlt
mov
and
mov
stc
call
loope
pop
and
pop
push
push
(bad)
mov
loopne
aam
inc
cmp
push
jno
test
out
pop
cmps
cmps
cwde
loopne
test
ins
inc
lock
rcl
idiv
dec
jmp
dec
stc
int3
add
or
and
xchg
fidiv
(bad)
push
test
pop
jecxz
sti
stos
cmp
cmps
cmp
fst
(bad)
mov
les
adc
fwait
push
pop
lahf
jecxz
cmp
lods
dec
inc
add
add
sbb
cmp
fcomp
xchg
jp
xchg
es
inc
sub
sub
call
and
movs
xchg
dec
test
push
cdq
add
movs
adc
xchg
sahf
out
jmp
push
scas
ror
sub
sbb
ds
inc
stos
(bad)
mov
lods
data16
add
dec
push
xchg
mov
daa
cmp
jmp
(bad)
rcl
jmp
not
sahf
jb
cmp
pop
retf
pop
fmul
push
fadd
mov
ins
dec
stos
jl
lds
push
data16
adc
cmp
push
cs
cmp
pop
enter
mov
data16
xchg
sub
dec
inc
cmp
loope
enter
loop
xchg
pop
inc
push
aam
(bad)
cli
cmp
(bad)
(bad)
daa
ret
in
rcl
sub
(bad)
(bad)
sbb
add
or
adc
xchg
mov
pusha
mov
mov
loopne
stos
inc
mov
pop
mov
xchg
iret
mov
(bad)
cs
jbe
inc
out
cmp
out
ins
loop
ins
test
mov
dec
(bad)
jae
sar
xchg
out
leave
jae
adc
movs
fcom
jo
xor
js
(bad)
xchg
fidivr
jno
cmp
popf
lock
sub
sbb
mov
test
mov
loope
push
mov
xchg
mov
or
mov
and
mov
es
(bad)
push
jmp
ins
and
fsub
sbb
jmp
(bad)
pop
adc
jle
mov
sbb
je
sub
sbb
mov
aam
push
gs
push
into
mov
inc
repz
mov
xchg
xor
sbb
stc
sub
mov
mov
test
and
adc
enter
pop
adc
mov
mov
mov
jne
scas
fcomip
aas
jns
sub
in
aaa
mov
scas
xor
adc
pop
inc
jne
push
shr
icebp
(bad)
retf
stos
ja
xchg
sub
test
pop
scas
dec
and
ins
call
adc
repnz
fidivr
adc
mov
mov
lods
sbb
cs
sub
sbb
push
imul
push
mov
adc
cmp
loope
xchg
or
ss
xor
mov
and
xor
outs
mov
or
fist
ss
jnp
les
push
fsub
inc
lods
je
ins
cmp
push
ja
out
mov
and
mov
xchg
jne
(bad)
mov
jmp
shl
push
jmp
sbb
shl
xor
or
gs
shl
mov
cmps
ret
loopne
xor
out
pop
jle
mov
add
sbb
mov
sub
sub
sbb
dec
inc
shl
fcmovnbe
outs
pop
cmp
mov
xor
adc
push
(bad)
(bad)
fsub
test
xlat
jnp
fwait
push
cmp
popa
(bad)
cli
jae
mov
ja
rep
retf
mov
dec
dec
sub
sti
jge
hlt
icebp
mov
inc
shl
mov
xchg
bound
dec
adc
aaa
ins
cmp
cmp
inc
jmp
sub
sbb
xchg
mov
shl
out
aad
movs
lahf
fcmovne
fstp
jo
jnp
ja
mov
add
pop
dec
jae
lahf
fistp
pop
sti
into
xor
fld
retf
dec
cmp
jmp
call
hlt
mov
xor
sub
or
jmp
call
out
xor
(bad)
cmc
ins
iret
push
mov
ins
fstp
pushf
jg
push
jecxz
shl
dec
enter
stc
es
sub
lea
xchg
pop
sti
dec
mov
add
push
pop
inc
mov
scas
mov
and
aaa
adc
mov
rcl
cli
mov
call
pop
ss
repnz
adc
fidiv
movs
sbb
in
dec
pop
loop
lea
inc
test
mov
add
pop
(bad)
mov
push
sub
or
mov
out
and
adc
jb
cmp
cmps
pop
sub
xlat
pop
xchg
cmp
je
pop
push
lods
cmp
pop
ss
mov
stos
jle
fs
stos
in
unpcklps
xor
xchg
xchg
inc
pop
inc
jmp
dec
call
jge
movs
test
xchg
(bad)
sbb
mov
sbb
repnz
faddp
push
out
cwde
xchg
aaa
mov
sub
add
jp
bound
(bad)
mov
lods
xchg
mov
xor
pushf
fs
adc
pop
rep
push
cmp
sub
cmp
mov
gs
das
aad
mov
xor
add
ret
pusha
push
mov
fstp
jmp
in
inc
(bad)
lock
push
std
ds
(bad)
das
push
mov
xor
div
aaa
ss
cmps
shr
mov
mov
add
xchg
test
xor
or
dec
mov
push
popa
and
in
cmp
adc
or
xchg
cs
aas
adc
mov
dec
sti
je
fst
movs
dec
out
jp
adc
ret
and
mov
mov
iret
add
int3
jmp
loope
hlt
aas
cld
xchg
mov
lock
int3
mov
dec
pusha
inc
pop
pop
cmps
scas
jno
hlt
dec
mov
and
cmps
fs
sub
popf
and
mov
test
or
xchg
xchg
jmp
pusha
xor
xchg
stos
mov
test
in
nop
adc
popf
and
mov
pusha
jnp
push
lahf
retf
xchg
push
call
das
mov
int3
mov
popf
inc
xor
mov
outs
inc
scas
sbb
popf
loopne
icebp
jmp
pop
dec
fwait
pop
js
and
(bad)
mov
jne
add
jg
xchg
retf
or
push
dec
cmp
sub
shl
adc
popf
imul
test
xchg
cmc
push
and
iret
iret
stc
push
adc
and
jmp
iret
adc
inc
ret
push
cmp
inc
sub
jmp
sub
jae
ja
pop
xlat
sar
mov
je
jle
inc
mov
jne
mov
fcom
rol
ja
retf
jl
xchg
in
pushf
cmc
cld
jb
(bad)
repz
cmp
inc
xor
push
movs
(bad)
sbb
test
mov
pop
push
xchg
and
into
push
mov
cwde
xchg
(bad)
push
add
add
and
imul
ror
stc
movs
add
hlt
dec
cmova
inc
xor
adc
loope
push
inc
or
push
cmp
xlat
mov
push
rcr
inc
test
repnz
sub
std
pop
jp
push
les
sbb
js
cmp
dec
movs
sbb
(bad)
push
arpl
cs
pop
or
iret
dec
and
ret
xor
mov
outs
out
jne
(bad)
dec
cmp
(bad)
or
push
jns
push
push
mov
sti
mov
adc
scas
ins
xchg
jmp
sbb
cmp
sbb
adc
cmp
movs
and
bound
jbe
xor
sub
scas
shr
cmp
lods
ja
cmp
ret
adc
(bad)
jecxz
push
data16
jp
hlt
(bad)
jae
sbb
mov
out
jnp
xor
test
mov
retf
jg
sub
ret
stc
js
clc
je
jecxz
hlt
in
dec
sti
(bad)
cmp
cmp
(bad)
hlt
inc
xor
(bad)
sub
test
sub
mov
adc
ret
iret
push
lea
lock
fs
fcmovbe
jg
jmp
mov
in
cdq
les
outs
loopne
daa
sub
sti
xor
rcl
push
and
es
push
rcr
cwde
mul
xchg
xor
stos
iret
lods
(bad)
imul
sar
stos
mov
jne
sub
lock
sub
out
(bad)
in
push
pop
fidivr
clc
movs
mov
cmp
leave
or
aam
cs
xchg
cmp
shl
push
pop
jmp
pusha
push
inc
(bad)
gs
(bad)
fistp
addr16
sbb
inc
mov
add
sbb
xor
xchg
scas
and
push
popa
popa
loope
mov
daa
mov
imul
sub
add
mov
iret
into
pop
xor
or
sub
cli
(bad)
(bad)
cdq
dec
xchg
sub
sahf
es
push
mov
(bad)
mov
out
outs
sub
sbb
je
and
addr16
(bad)
test
mov
jbe
aam
push
jmp
xor
jae
sbb
jne
leave
fcomip
jmp
mov
popf
fisttp
sbb
fisub
pop
inc
aam
popa
fldenv
iret
xor
mov
(bad)
mov
lahf
dec
xchg
arpl
sbb
mov
cwde
mov
sbb
in
inc
inc
(bad)
(bad)
ja
push
mov
rcr
mov
mov
mov
lock
dec
addr16
call
movs
sar
push
js
lahf
jge
inc
xchg
stc
mov
icebp
xchg
and
mov
(bad)
loop
enter
xchg
cdq
xchg
sub
xchg
pop
mov
cmp
jecxz
in
imul
push
lods
sahf
pop
inc
pusha
or
in
and
into
nop
and
retf
stc
imul
and
cli
jb
inc
mov
rol
mov
lock
jp
dec
mov
push
sbb
sub
cwde
sub
lods
adc
rcr
xor
sahf
and
cmp
xor
sub
sub
push
stc
dec
loopne
sub
cmp
test
pop
nop
bound
scas
mov
jle
cdq
aam
xor
loope
scas
call
add
mov
psubd
int3
mov
retf
in
repz
xor
add
out
inc
xchg
fsubr
ret
dec
push
(bad)
push
sub
xlat
cmp
inc
xor
test
cmp
sub
xor
pop
pop
out
(bad)
popf
dec
rol
in
add
dec
in
lds
add
adc
test
jge
pusha
and
movs
test
ret
lods
jl
packssdw
jns
loope
imul
mov
in
push
push
pop
outs
loope
nop
retf
js
arpl
(bad)
cmps
mov
jge
or
pushf
sbb
xchg
imul
jns
jle
adc
dec
hlt
sub
mov
fiadd
fadd
loopne
repz
movs
pop
jne
mov
xchg
dec
push
fimul
add
loopne
into
push
stos
or
out
jbe
push
pop
cmp
ja
out
mov
fnstsw
xchg
pop
fld
add
push
inc
fisttp
jnp
push
leave
jmp
enter
sbb
pop
xchg
jmp
push
rcl
xchg
sub
cmp
xor
retf
shl
jnp
xchg
dec
push
sub
sbb
dec
inc
mov
test
popa
popa
lds
dec
jecxz
and
adc
test
popa
jne
xor
jne
mov
int
rcr
or
xchg
fsubr
xor
or
fs
push
jo
or
push
xchg
jg
imul
movs
(bad)
mov
ja
ins
adc
js
out
call
arpl
(bad)
adc
(bad)
sub
sub
xor
add
aaa
mov
shl
push
call
push
fld
add
sub
jno
pop
ins
sbb
dec
popaw
inc
ja
add
dec
jmp
or
leave
mov
inc
jns
mov
in
mov
imul
and
dec
jno
inc
or
push
mov
pop
inc
(bad)
sub
test
or
les
aas
fsub
xchg
fdivp
or
dec
push
shl
adc
repnz
add
arpl
push
dec
add
fild
hlt
pop
jecxz
test
cs
mov
pusha
add
sahf
mov
cdq
aad
mov
bound
xchg
pusha
dec
pushf
pusha
jg
and
add
mov
mov
in
xchg
and
xchg
xchg
sbb
xchg
or
fwait
xor
add
inc
(bad)
test
jae
cli
mov
out
out
rol
out
mov
stos
pop
cmp
int
xchg
sbb
push
xor
jns
out
fcmovne
and
mov
in
pushf
add
test
in
fmul
push
jnp
cmp
xchg
adc
int
repz
inc
cmps
mov
ja
(bad)
scas
fisub
imul
and
scas
push
sbb
dec
les
js
or
mov
int
adc
jecxz
rcl
daa
ins
cwde
xor
shl
cmp
stos
pop
fwait
push
test
mov
mov
fdiv
push
mov
addr16
outs
ficomp
pop
fadd
nop
push
aas
push
pop
mov
aas
retf
nop
ret
push
stos
pop
mov
loopne
fprem
push
fwait
les
lea
pop
in
and
fs
jo
cmp
in
mov
outs
mov
jo
mov
retf
sbb
cmp
and
mov
(bad)
pop
fst
sbb
sbb
movups
sbb
push
add
dec
and
jle
fidiv
jle
sbb
adc
adc
pusha
push
in
jmp
mov
mov
mov
mov
dec
in
and
fs
or
adc
sar
dec
jns
cmc
xchg
add
arpl
and
nop
enter
push
sbb
push
pop
pop
outs
jo
call
xchg
push
sub
call
pop
xor
sbb
sar
mov
aam
mov
sub
sub
add
or
xchg
mov
cld
inc
emms
sub
lock
retf
aaa
push
in
ins
mov
and
test
or
sti
mov
jmp
xchg
inc
xor
sub
mov
in
add
xor
enter
int
enter
sti
adc
adc
and
mov
dec
pusha
(bad)
fsubp
imul
adc
sub
sbb
(bad)
jmp
jo
add
aam
dec
pusha
cmp
cmc
lods
adc
mov
ret
xchg
pop
test
jle
inc
es
adc
pop
inc
cmp
add
jecxz
cmp
add
mov
shl
jmp
movs
mov
ja
iret
sub
and
loop
cmp
test
push
mov
mul
lock
sbb
pop
iret
iret
popf
test
test
add
pop
aad
test
jl
mov
sbb
mov
mov
mov
fcomp
sbb
cmp
push
int
mov
in
lock
push
in
mov
mov
movs
daa
call
stos
pusha
iret
push
jmp
mov
jmp
outs
aad
mov
outs
mov
int3
mov
mov
xlat
fld
inc
rcl
mov
xor
add
xchg
push
pushf
fst
pop
push
pop
not
sbb
loope
lods
pop
xchg
and
outs
jns
sar
(bad)
mov
leave
mov
xor
pop
adc
adc
lock
ror
bound
add
mov
lods
dec
pop
retf
jne
dec
pop
sbb
stos
pop
mov
out
out
fstp
xchg
or
xlat
and
xchg
sahf
pop
mov
mov
mov
jns
inc
pop
push
dec
ins
mov
sub
xchg
sbb
jecxz
mov
and
jmp
pop
mov
stos
inc
lods
mov
jecxz
cmp
xchg
jmp
sub
sbb
inc
aam
mov
or
stc
or
hlt
sub
pop
xchg
adc
scas
test
adc
clc
sahf
inc
retf
add
add
or
sub
push
outs
pop
in
fnstenv
sub
call
jno
popf
adc
mov
push
nop
or
lds
mov
xor
mov
push
mov
in
(bad)
call
jge
pop
into
xchg
mov
rcl
sbb
mov
or
or
xchg
sub
mov
cmp
aaa
in
and
cmps
and
jmp
sub
mov
cwde
outs
push
push
pop
cli
aaa
sti
(bad)
mov
imul
scas
push
push
mov
mov
lods
fst
jo
adc
adc
mov
mov
js
or
pop
(bad)
aaa
mov
add
dec
jecxz
adc
lea
mov
loope
jmp
call
in
jnp
pop
sbb
arpl
lds
push
cmp
cwde
shl
xor
mov
ret
icebp
mov
mov
cmps
adc
aas
xor
out
or
adc
or
sbb
retf
xchg
cmp
xor
loopne
int3
mov
out
lea
mov
inc
(bad)
cmp
xchg
mov
paddsb
jg
sub
nop
jbe
jbe
stos
jg
retf
ja
and
int3
mov
sbb
pop
cmp
outs
je
or
movs
mov
xor
jne
xchg
movs
push
popf
jns
retf
sbb
outs
fcmovb
jae
jb
fidiv
popf
into
add
jns
movs
adc
in
xchg
iret
mov
xchg
mov
cmp
push
call
mov
pop
fmul
jmp
and
and
ss
add
push
arpl
jnp
adc
dec
rol
data16
js
jb
scas
in
cmp
test
pushf
imul
into
movs
aas
cdq
jo
int
pop
pop
mov
sbb
mov
or
cmp
pop
and
jecxz
add
adc
sbb
jge
push
dec
test
and
std
bound
mov
push
push
xchg
inc
xor
pop
dec
add
or
fldz
xchg
add
stc
push
push
mov
fwait
inc
jle
imul
imul
xchg
fsubp
clc
mov
hlt
outs
sub
and
mov
jnp
mul
jmp
test
rcr
bswap
shl
add
dec
in
jl
test
lods
push
(bad)
mov
add
into
mov
cdq
outs
paddusb
xor
outs
lods
(bad)
jae
jcxz
mov
fst
add
cdq
mov
fisubr
ss
pop
aam
inc
je
sub
jl
jo
xchg
xor
mov
fisubr
int3
data16
mov
jne
mov
das
and
int
arpl
mov
sbb
das
fwait
jmp
or
in
inc
add
cmp
pop
pop
sbb
xchg
(bad)
jns
xchg
pop
inc
or
fist
dec
jae
test
daa
out
mov
mov
sbb
mov
xchg
addr16
ins
ret
mov
div
push
cli
or
sub
push
sbb
adc
sub
dec
push
mov
add
cmps
lock
push
in
cld
and
int3
sbb
div
lahf
xor
mov
mov
and
clc
ds
fidiv
stos
sub
enter
mov
add
(bad)
or
scas
fwait
mov
popa
adc
(bad)
mul
push
imul
sbb
repz
pop
sahf
inc
lahf
jmp
inc
sub
jnp
mov
xchg
aaa
inc
add
mov
call
inc
xor
fldenv
adc
mov
add
fld
sub
xlat
inc
daa
jl
shr
fs
mov
lds
mov
sbb
mov
xchg
lahf
movs
mov
jmp
popa
test
adc
fidiv
add
dec
loope
pop
shl
in
repz
popa
pop
sub
sub
push
adc
and
fs
aam
pop
int3
dec
test
mov
add
jnp
mov
repnz
mov
call
sbb
xor
(bad)
sbb
cmps
retf
pop
add
arpl
enter
jns
sub
pop
(bad)
jg
jg
cld
add
jmp
sbb
sub
iret
dec
adc
push
test
mov
sahf
push
dec
mov
shr
pop
mov
or
stos
or
sub
adc
xchg
cwde
jnp
inc
mov
push
push
adc
mov
or
stc
fbstp
outs
cwde
lock
out
jmp
or
xor
aam
and
lods
fbstp
sbb
loope
mov
rcl
movs
retf
inc
pop
das
out
cld
xchg
cmp
pushw
xor
retf
pop
inc
mul
jo
cmp
push
dec
js
or
ins
pop
cmp
and
mov
mov
sbb
mov
mov
cld
(bad)
jae
daa
or
adc
mov
cli
mov
(bad)
clc
dec
(bad)
xlat
mov
cdq
clc
jmp
in
push
push
xor
bound
jns
retf
call
mov
xchg
push
dec
fistp
jp
nop
push
lods
shl
arpl
mul
es
dec
lods
cwde
sub
add
repnz
adc
pop
push
out
inc
lods
mov
xchg
shr
sbb
iret
mov
sub
mov
xor
push
(bad)
or
push
cwde
mov
es
sbb
or
ja
sub
mov
retf
clc
mov
or
popa
mov
cmp
call
addr16
pusha
movs
lahf
mov
jge
cmps
push
gs
sub
push
pusha
xchg
pop
push
cmp
and
xchg
mov
inc
add
rcl
sub
dec
sahf
jne
cmp
cmp
xchg
add
nop
out
shl
into
out
cld
ficomp
shr
sub
test
call
sub
out
mov
xor
jle
pop
sbb
add
inc
xchg
es
add
pop
dec
in
cmp
push
adc
test
pop
mov
or
push
pushf
xchg
stos
retf
movs
ins
push
mov
push
add
fstp
cmps
fstp
data16
pusha
in
ret
add
or
enter
aam
jle
data16
mov
mov
mov
pushf
int
sub
lods
pop
or
popa
outs
or
adc
add
inc
repz
adc
or
cmp
or
out
sbb
push
in
mov
mov
test
int
mov
pop
leave
js
push
mov
fadd
std
add
addr16
mov
mov
lock
or
jg
js
inc
push
dec
jl
cwde
ins
adc
(bad)
outs
into
pop
hlt
dec
jne
mov
jl
stos
popa
sbb
xchg
scas
(bad)
adc
mov
xchg
cmp
sub
stos
daa
xlat
sbb
mov
jp
xor
aaa
mov
xchg
into
inc
xor
gs
retf
lds
js
mov
add
(bad)
ds
sub
add
imul
aad
jecxz
xchg
fisttp
lods
mov
fucomi
(bad)
fstp
gs
sbb
mov
sbb
ret
js
mov
mov
data16
xchg
add
retf
inc
mov
add
and
sub
test
dec
loope
mov
adc
sar
call
cmp
mov
rcl
inc
out
dec
pop
mov
jl
mov
arpl
loopne
inc
int3
dec
jb
sub
sbb
cmp
pop
adc
mov
pushf
stos
arpl
aam
pop
xchg
mov
mov
inc
iret
aad
push
xor
js
pushf
into
ds
xchg
sub
pop
sbb
lods
jg
(bad)
sub
cs
and
lods
sahf
pop
cmps
ja
daa
fiadd
shl
mov
mov
ret
imul
push
xchg
imul
out
jge
add
cmp
mul
mov
test
aam
loop
popa
jge
out
outs
xor
and
mov
add
ja
(bad)
add
xchg
push
sub
loope
adc
xor
adc
test
jo
je
add
sar
jmp
lods
xchg
xor
xchg
fcmovne
sub
cmp
int
add
aaa
lahf
imul
aam
sub
inc
pop
les
gs
cld
dec
mov
outs
les
mov
adc
loope
or
icebp
push
sbb
fld
xlat
iret
pushf
test
jle
sahf
sub
ds
jecxz
add
(bad)
and
push
pop
xlat
aad
sbb
add
fpatan
push
adc
pop
inc
push
adc
jno
adc
pop
nop
shl
mov
pusha
cwde
arpl
cmps
cmc
cmc
pop
fild
mov
xor
das
xlat
popa
cdq
cwde
push
loope
int3
pop
or
repnz
jmp
fisub
aas
and
mov
dec
out
lock
cmp
fcomp
(bad)
mov
adc
outs
cmp
mov
punpcklwd
sar
mov
in
jle
fisttp
sbb
and
test
pop
std
adc
jo
adc
mov
mov
lods
adc
ret
mov
fs
pop
out
add
inc
(bad)
into
les
sbb
jg
push
adc
popf
mov
retf
dec
dec
std
sub
sub
pop
(bad)
push
adc
jp
fstp
jbe
jmp
sbb
mov
mov
dec
or
repz
rcl
in
mov
dec
dec
mov
mov
lods
xor
icebp
pushf
mov
movs
or
jg
stos
cmp
(bad)
fsubrp
adc
mov
ins
test
pop
mov
inc
adc
xchg
xchg
and
xor
xchg
pop
mov
adc
inc
mov
aaa
test
push
mov
call
inc
push
mov
dec
mov
fcmove
inc
scas
jge
jno
and
stos
out
mov
mov
and
arpl
pop
fstp
mov
and
sbb
sub
inc
sahf
aad
xor
outs
sbb
cs
push
mov
push
pop
ret
jae
xlat
add
cmp
test
pusha
push
or
call
push
sahf
mov
or
lea
retf
ret
pop
loop
repnz
mov
xchg
mov
xchg
fimul
sub
in
xor
ss
mov
add
jl
mov
fild
dec
test
shl
(bad)
xor
sbb
ja
pop
lds
push
out
inc
cmps
mov
and
fucomip
mov
or
cmp
pop
push
mov
cmp
or
(bad)
ret
mov
xor
mov
cmp
xor
stc
and
push
dec
xchg
lods
std
ret
call
(bad)
jp
retf
and
sub
sbb
dec
sbb
test
nop
retf
mov
test
pop
call
cmp
sbb
nop
jecxz
repz
inc
fdiv
or
fs
js
or
add
sub
xor
mov
pop
mov
sbb
loop
mov
addr16
push
mov
inc
jo
cmp
sub
rcr
inc
cmp
repz
(bad)
fnstenv
sbb
cmp
mov
fcmovbe
lahf
jo
pop
inc
sbb
mov
dec
push
xor
in
or
int3
pushf
stos
mov
fld
jmp
sbb
popa
ins
push
pop
ficom
pop
jle
sub
push
sbb
rcr
cmp
mov
sti
add
fld
push
inc
int
sub
push
and
nop
inc
xor
ins
or
pop
pop
push
jnp
mov
outs
test
cmp
and
jge
in
fcom
mov
mov
jecxz
jmp
popa
popf
mov
jge
dec
mov
mov
movs
loope
bound
pop
adc
ds
lock
sar
inc
cmp
or
and
dec
cmp
test
test
mov
cmp
and
ret
xchg
sub
call
xchg
arpl
add
sahf
test
lods
jp
adc
xchg
in
mov
xor
xchg
movs
mov
cmps
or
or
mov
out
dec
shl
push
push
shr
pop
les
jnp
cld
int
jle
sbb
shl
adc
mov
imul
xor
push
arpl
(bad)
out
test
nop
add
mov
push
test
push
fldenv
ins
data16
movs
xchg
call
ins
cmps
dec
adc
shr
(bad)
scas
jno
fnstsw
popa
test
out
aam
xchg
icebp
aam
dec
aam
lods
and
test
into
jecxz
(bad)
jnp
cmp
inc
sbb
dec
ins
repz
inc
cmp
xchg
shl
dec
xor
dec
sahf
ins
test
add
and
cld
xchg
sub
scas
xor
mov
repnz
cld
sub
dec
and
mov
sub
jl
enter
aaa
jae
mov
dec
mov
jae
jns
mov
lock
adc
addr16
mov
xor
lods
shr
xchg
sub
aam
out
test
arpl
(bad)
and
push
fcom
cmc
in
mov
mov
fistp
pop
hlt
and
dec
(bad)
jg
mov
or
push
test
and
sbb
mov
jecxz
int3
pop
add
pop
xchg
cmp
xchg
loop
or
xchg
call
dec
test
xlat
jnp
ss
shl
out
iret
cmp
pop
hlt
aaa
and
and
jo
and
xchg
mov
dec
adc
std
sub
and
js
pop
je
pop
pop
add
dec
inc
into
leave
lock
js
mov
push
dec
pop
sbb
pop
shr
popf
into
les
mov
ds
pop
add
ins
(bad)
pop
xchg
mov
out
add
test
inc
aas
sbb
mov
out
jecxz
leave
lahf
les
aam
sub
stc
sub
inc
jmp
mov
call
mov
adc
pop
arpl
(bad)
mov
test
jbe
aam
sub
out
xchg
stc
and
aam
arpl
pop
stc
enter
push
jp
imul
pop
outs
ins
mov
mov
or
mov
adc
jle
sub
ja
pop
clc
in
into
clc
fdivr
retf
outs
lahf
xor
outs
and
dec
or
or
mov
mov
(bad)
ds
lods
xlat
bound
push
sar
mov
push
hlt
sub
sub
adc
lahf
cmp
cmp
xor
dec
sbb
push
jle
or
frstor
pop
push
nop
shr
loop
in
pop
ds
daa
int
call
mov
out
mov
rcr
push
sub
and
dec
lds
cs
jbe
dec
push
mov
repz
fwait
test
sub
ins
push
mov
popa
mov
mov
das
(bad)
mov
das
and
xor
loope
inc
call
mov
lods
in
out
xchg
movs
mov
cmp
dec
jae
push
ds
cdq
repz
ss
lea
das
xchg
dec
sbb
dec
mov
mov
popa
or
pop
sub
rcl
sub
(bad)
xor
push
shl
or
jmp
pop
lock
loop
mov
bnd
and
aad
inc
mov
dec
pop
(bad)
and
pop
mov
mov
adc
pop
stos
push
loope
aaa
stos
add
pop
inc
cmp
ror
mov
ins
add
cmp
pop
jbe
popa
mov
pop
int
cmp
cmps
stos
aad
stos
mov
retf
outs
mov
pushf
push
in
dec
push
push
(bad)
iret
and
aas
sbb
dec
sub
stos
shl
jp
and
das
fisubr
(bad)
aam
xchg
xor
mov
xor
fld
mov
sub
xor
jmp
push
sahf
push
sbb
push
and
das
out
dec
add
dec
inc
leave
sub
adc
dec
outs
repz
les
jbe
sahf
mov
into
(bad)
ins
cmp
jmp
or
in
rcr
mov
and
mov
out
fidiv
scas
iret
shl
je
mov
jnp
inc
xchg
add
dec
mov
dec
call
ret
adc
lea
cmp
sub
sbb
ja
fwait
dec
test
sbb
das
sub
xchg
sbb
repnz
and
mov
sbb
add
dec
add
and
jb
fs
aad
cs
inc
fmul
int
into
or
popa
out
xor
inc
xchg
outs
sti
sahf
pop
rol
adc
inc
add
scas
inc
enter
inc
push
mov
add
ret
call
shl
fcmovnbe
cld
aad
jnp
and
mov
imul
call
lea
mov
bound
push
sub
retf
pop
xor
xchg
shr
mov
mov
inc
rcl
inc
test
fsubr
mov
in
mov
sub
jle
or
test
inc
mov
into
push
(bad)
pop
mov
jns
and
out
lock
lods
fwait
mov
into
or
or
shl
fisttp
cmp
call
dec
or
std
push
out
ret
sar
push
add
mov
sti
mov
jecxz
je
nop
pop
neg
les
adc
mov
movs
enter
call
ds
jl
ss
xor
sbb
dec
mov
movs
sub
(bad)
fmul
sbb
xchg
imul
xchg
(bad)
add
jecxz
stc
int3
arpl
ins
jmp
pop
cs
mov
or
test
sub
or
xor
pop
add
xchg
pop
popf
pop
sti
mov
mov
cmp
lods
mov
js
inc
outs
mov
mov
pop
or
cdq
scas
in
(bad)
mov
scas
adc
jnp
sbb
cmp
push
push
in
call
stc
les
mov
and
mov
jae
mov
lahf
pop
mov
stos
inc
scas
jo
push
lods
test
sbb
mov
adc
mov
pop
inc
mov
fisubr
push
push
adc
fs
shl
fld
inc
lahf
je
out
dec
aad
mov
jb
inc
sub
cli
xchg
xchg
fs
push
sub
pop
ins
icebp
inc
push
dec
(bad)
adc
dec
xlat
mov
popf
imul
in
cmps
es
push
out
mov
scas
pop
pop
out
and
cdq
retf
xchg
push
mov
sahf
popa
mov
cmc
pop
nop
or
cmc
push
add
mov
call
jb
xor
daa
sub
je
cli
pop
jg
dec
push
push
xchg
sti
ret
movs
popf
add
inc
push
shr
loop
(bad)
cmp
or
jl
(bad)
out
int
pop
xchg
mov
and
outs
out
iret
mov
ins
push
stos
movs
movs
aam
rcr
xchg
dec
lock
jmp
push
pop
and
jo
rcl
jne
es
inc
rol
leave
push
mov
jge
cmp
sub
jno
shl
pop
cmps
je
add
push
lock
fneni(8087
sahf
mov
icebp
stc
out
das
jmp
sti
repz
xor
mov
dec
pop
xor
es
bound
fst
iret
enter
aaa
or
test
movs
div
aas
cmp
das
ins
cmps
dec
sub
je
sub
fucomip
cmps
mov
xor
shl
adc
js
dec
fs
and
adc
das
(bad)
mov
retf
jl
push
mov
pop
in
jo
rcr
add
retf
push
mov
push
push
ffree
jbe
jge
pop
sub
mov
or
cld
dec
out
push
add
cld
ret
jmp
imul
(bad)
ror
jecxz
jecxz
xor
jmp
(bad)
sbb
icebp
sahf
push
or
fs
mov
dec
test
das
aam
push
dec
repnz
mov
or
push
cs
and
jbe
imul
test
mov
cmp
dec
sbb
stos
add
mov
jne
fistp
cwde
es
or
mov
sbb
pusha
cwde
cmps
or
fcmovnbe
pop
cmc
dec
jae
pushf
jmp
cmp
repz
push
gs
in
imul
test
xor
push
mov
aaa
jp
mov
pop
aam
int
xchg
sub
rcl
arpl
pushf
jecxz
mov
(bad)
repnz
mov
fscale
fnclex
stos
nop
jp
test
mov
dec
(bad)
sub
(bad)
fcmovbe
pop
jle
mov
jmp
ins
sub
jo
outs
adc
rol
je
jae
mov
(bad)
int3
(bad)
push
int
and
aas
jp
outs
std
add
sti
mov
adc
repnz
mov
lods
mov
cmps
inc
pop
add
test
icebp
jnp
xchg
jae
(bad)
mov
pop
add
mov
or
mov
mov
rcr
cmp
enter
mov
ins
jge
clc
xchg
icebp
popf
or
(bad)
and
fcomp
mov
add
add
not
das
pop
sub
jecxz
call
jb
dec
fstp
push
jge
popa
mov
xchg
jo
pop
retf
in
cdq
and
sbb
icebp
add
cmps
sbb
arpl
jecxz
and
je
scas
inc
jae
mov
fmul
or
mov
mov
test
jge
mov
and
dec
xor
pop
in
xor
adc
lods
mov
outs
jae
ret
in
icebp
popa
and
cmp
mov
jecxz
ret
hlt
out
out
inc
cmp
pushf
shl
or
adc
test
pop
pushf
je
mov
cwde
lods
cmp
and
sbb
jns
adc
lahf
fst
mov
(bad)
(bad)
jl
mov
ror
inc
aaa
cmc
dec
sahf
inc
(bad)
add
cmc
adc
fwait
inc
test
out
in
push
push
hlt
fdivr
xchg
xchg
(bad)
or
push
mov
and
or
adc
(bad)
jl
push
mov
sahf
jne
sahf
mov
push
push
aam
adc
rcl
jnp
pop
inc
aaa
mov
outs
push
dec
xor
aad
sahf
xchg
jne
add
lods
jo
or
iret
aad
retf
pop
and
fld
push
ss
popf
frstor
xchg
mov
push
mov
inc
or
fwait
test
ret
add
sub
xor
in
fcmovu
mov
mov
inc
or
sbb
jg
test
add
test
data16
hlt
mov
pop
in
sbb
add
sub
jmp
jns
(bad)
addr16
lea
outs
mov
sar
xchg
popf
adc
test
dec
movs
rol
cmps
ror
es
ret
shl
nop
addr16
dec
cli
jae
pop
(bad)
add
retf
ins
pushf
retf
jae
(bad)
ja
and
aas
imul
push
test
add
data16
xchg
mov
jp
cmp
mov
jb
pop
xchg
push
mov
jmp
loope
and
push
(bad)
xor
xor
mov
sbb
mov
jmp
mov
scas
sar
add
jle
mov
jp
enter
test
sti
mov
lods
(bad)
call
cmc
push
dec
xlat
jo
pop
adc
test
dec
imul
jmp
mov
xchg
in
sbb
cmp
and
out
pop
push
inc
or
int
ret
outs
and
and
push
rcl
add
mov
je
out
pop
pop
mov
push
jae
dec
mov
jbe
(bad)
and
aas
rol
in
daa
mov
add
jne
ins
(bad)
cmp
jbe
inc
sbb
in
test
shr
or
xchg
(bad)
fistp
or
retf
repz
mov
jb
daa
or
ja
mov
mov
mov
lods
icebp
and
xchg
es
ret
repz
inc
inc
movlhps
cmp
xchg
mov
aam
add
clc
daa
fild
cwde
and
inc
adc
ds
mov
(bad)
scas
jecxz
xor
sbb
test
loopne
stos
fst
xor
dec
test
icebp
bound
neg
dec
jmp
fstp
add
(bad)
popf
and
out
movntq
out
dec
rcr
mov
pop
jo
pop
xor
mov
xor
mov
mov
idiv
scas
adc
inc
and
enter
fimul
sbb
cmps
ss
movs
test
pop
test
xor
inc
push
adc
push
fidiv
hlt
cmp
adc
test
(bad)
pop
push
ror
lods
jmp
mov
mov
out
push
push
dec
pop
aas
xor
ins
jno
adc
call
pop
add
test
call
fst
(bad)
lods
enter
lods
or
retf
test
jl
pop
dec
cld
push
xchg
test
fwait
inc
inc
fidivr
xchg
fimul
aaa
je
scas
jae
fisttp
call
dec
cmp
jle
mov
sub
push
call
xchg
repz
adc
mov
pop
push
jl
xor
dec
imul
sbb
ds
cwde
out
push
jp
movs
rcl
push
imul
xchg
loop
mov
xor
cmps
jle
mov
fnsave
in
jne
data16
push
(bad)
mov
jmp
push
movs
sub
add
add
pop
add
movs
div
dec
shl
cmp
aam
add
jge
imul
inc
pop
int
inc
jbe
and
retf
ins
in
inc
call
jle
inc
jb
(bad)
jnp
mov
call
popf
cmp
leave
add
gs
xchg
push
dec
in
sub
cs
sti
dec
imul
push
retf
pop
shr
daa
adc
retf
in
pop
loopne
mov
inc
jl
mov
(bad)
mov
ja
sub
mov
fstp
inc
in
jmp
sbb
inc
seto
add
mov
xor
dec
lock
movs
cwde
jbe
test
xchg
mov
test
std
rcr
stos
fiadd
jp
fwait
pop
sub
mov
sub
mov
push
cmp
dec
sub
enter
sub
mov
shl
cmps
test
aam
shl
xchg
or
fcmovnb
aam
inc
pusha
mov
imul
movs
inc
sbb
inc
dec
cmp
stos
hlt
jne
dec
and
push
sbb
mov
push
dec
test
xchg
xor
and
mov
mov
mov
adc
out
or
xchg
jno
xor
in
sub
ret
pop
mov
sub
std
mov
aad
mov
push
scas
loop
adc
add
stos
int
pop
nop
or
push
or
lea
loop
cmp
imul
js
push
cvtdq2ps
cwde
dec
ins
aaa
add
int
cld
stc
cmp
or
pushf
add
loopne
xchg
sub
mov
test
push
aas
repnz
out
icebp
scas
in
dec
or
push
xor
dec
fld
aam
loopne
and
xor
js
push
aas
out
sti
sbb
push
ret
and
jle
cmp
rcr
jle
jl
loop
mov
cmp
jle
jecxz
in
xchg
mov
mov
repnz
loopne
pop
cs
icebp
mov
push
fcmovbe
or
scas
mov
and
inc
inc
idiv
stos
jne
pop
jge
mov
pop
outs
sbb
loop
mov
(bad)
ds
add
(bad)
mov
ins
dec
out
mov
bound
and
jp
jp
nop
test
js
sahf
jmp
xchg
mov
pusha
mov
aas
loop
jne
mov
xchg
pop
test
movs
mov
pop
fstp
inc
rol
pop
data16
xlat
dec
xchg
sbb
pop
adc
cmp
pop
(bad)
test
lock
push
sbb
xchg
je
mov
sbb
popf
retf
cmps
ficomp
into
sbb
mov
mov
dec
adc
xchg
inc
lea
ins
mov
clc
adc
dec
xor
shl
into
add
sub
xchg
repz
iret
pop
(bad)
jbe
sub
xlat
loop
jno
in
cmp
dec
cmp
cdq
arpl
test
(bad)
sbb
int
repnz
push
jno
gs
mov
mov
jb
xor
push
dec
fidivr
sub
and
stos
mov
movs
jae
or
push
mov
cmps
in
in
enter
sbb
sti
int
mov
into
cdq
pop
aad
fisttp
arpl
or
pop
sbb
in
xlat
push
sti
fdiv
lds
pop
or
add
sbb
push
lahf
enter
mov
push
mov
or
sti
sub
xchg
out
paddb
ss
push
in
sbb
dec
sti
xchg
jbe
inc
cli
adc
(bad)
outs
lods
aaa
dec
inc
jmp
pop
lahf
xor
scas
mov
jb
mov
push
fisubr
lahf
nop
cmp
xchg
ins
sub
sub
clc
sub
lods
hlt
mov
and
add
ficom
mov
xor
dec
jno
add
pushf
sahf
call
add
and
out
fsubrp
push
add
and
(bad)
std
loope
dec
sbb
lahf
mov
cmps
adc
cmps
gs
sub
or
push
add
int3
inc
out
retf
push
inc
xor
(bad)
jmp
inc
xchg
jns
dec
add
xor
xchg
aam
jle
call
in
jns
sbb
outs
lea
mov
out
dec
mov
pop
cld
and
repz
lahf
or
test
dec
add
sbb
clc
jne
inc
add
dec
rcl
(bad)
mov
xchg
pop
fist
std
jno
pop
sub
mov
push
repnz
bound
push
int3
jmp
call
adc
mov
xchg
sbb
int
aam
mov
icebp
inc
call
and
mov
or
mov
pop
call
xor
jno
xchg
mov
add
pop
aaa
dec
js
in
jne
adc
sar
jae
clc
jns
xlat
xchg
push
ins
stc
mov
add
mov
mov
daa
repz
jno
rcl
out
sahf
pop
dec
retf
add
mov
fild
lahf
or
test
sub
data16
fcom
(bad)
jno
lods
not
mov
rcl
aaa
or
pop
jge
dec
sbb
test
out
lds
or
js
retf
gs
inc
mov
xchg
sub
dec
lods
or
loopne
dec
in
add
xchg
lods
add
cmp
dec
xchg
lea
bound
jmp
and
push
cld
adc
xchg
dec
mov
fcomp
pop
mov
lea
in
pop
mov
adc
outs
cmp
out
sbb
mov
shl
or
dec
sti
addr16
lds
sbb
xchg
mov
pop
shl
movs
xchg
pushf
test
sbb
(bad)
adc
push
push
adc
sbb
adc
lea
push
out
call
pop
shl
fnstenv
div
out
retf
fild
imul
pop
xor
loope
sbb
or
adc
in
mov
push
lahf
add
sbb
dec
inc
or
hlt
int
mov
inc
mov
stc
dec
hlt
add
jecxz
or
out
fcom
mov
fbstp
(bad)
sub
ret
xchg
mov
test
jae
int3
jge
jns
scas
xchg
mov
nop
xor
loope
out
jle
loope
retf
dec
pop
jb
and
fild
shl
aam
test
xchg
pop
cmp
sti
je
aas
into
add
dec
jnp
cmp
sub
xchg
clc
xchg
xchg
scas
adc
fistp
sub
jns
bound
js
into
sbb
les
or
adc
jmp
cmp
add
loopne
fimul
sub
jnp
inc
push
jmp
mov
and
xchg
pop
in
(bad)
je
test
cmp
lea
push
add
push
fcmovne
mov
pop
mov
cmp
and
add
mov
cmp
in
out
dec
inc
pop
cmp
ins
mov
jo
aam
bnd
xor
stos
inc
sti
sub
ins
lahf
(bad)
rol
icebp
add
mov
sub
ret
out
mov
aaa
xor
ins
les
lahf
jne
mov
lds
(bad)
mov
sahf
jecxz
or
aas
nop
repnz
and
cwde
pop
fist
pop
iret
sub
retf
pop
jg
rcl
clc
repz
pop
xor
aaa
nop
inc
sahf
or
jno
arpl
jg
sub
fdivr
mov
ss
xchg
test
mov
xor
aam
jo
pop
add
(bad)
cmp
mov
or
cmp
mov
(bad)
and
out
mov
scas
inc
scas
shl
and
cmps
jge
scas
inc
bound
sar
mov
adc
cmp
xor
repnz
(bad)
pop
sub
xor
xchg
sbb
sub
jne
fcmovne
xchg
jnp
lock
or
nop
cs
sahf
inc
add
in
mov
(bad)
cmp
loop
inc
and
xchg
es
adc
and
int
pop
mov
mov
jno
bound
adc
push
jne
pushf
ret
vpunpckldq
or
inc
fs
add
xor
cmp
imul
loop
in
mov
arpl
xor
ins
mov
mov
fwait
nop
cmp
lods
jo
(bad)
(bad)
ffree
cmp
fldenv
pop
movs
shl
xor
out
ins
das
inc
test
lods
push
rcl
inc
or
shr
mov
push
jp
or
or
and
out
or
fucomp
mov
dec
into
adc
push
enter
call
sahf
jno
stos
pop
in
inc
xchg
dec
repz
cs
imul
xor
movs
adc
jae
mov
or
or
pop
sbb
dec
and
jnp
inc
jne
push
and
push
cmp
mov
int
pusha
aaa
lock
cmc
cli
loop
xlat
push
dec
(bad)
sahf
(bad)
fisttp
jmp
cmp
jmp
adc
mov
pop
inc
test
repz
mov
mov
hlt
sub
and
nop
and
dec
cdq
in
pop
in
shr
xchg
daa
adc
push
por
fsub
es
bound
mov
push
sbb
stc
sub
mov
out
loopne
xchg
in
(bad)
xchg
push
mov
loopne
js
and
jbe
mov
(bad)
jge
dec
test
outs
adc
mov
repnz
mov
movs
mov
or
mov
mov
ins
pop
mov
jmp
(bad)
call
adc
stos
cwde
int3
mov
jle
in
push
dec
mov
adc
ds
cmps
and
stos
jle
mov
aaa
add
iret
xor
int3
and
(bad)
adc
mov
mov
lods
mov
jb
es
sbb
movs
inc
push
ficomp
sbb
mov
mov
pop
jns
fwait
push
inc
mov
mov
mov
int3
sub
jae
or
das
repnz
js
jecxz
xchg
pusha
sbb
xchg
push
mov
mov
popa
or
xchg
(bad)
jg
jl
call
jp
ds
dec
lock
sub
shl
cmp
pop
rcr
fidivr
int
pusha
jmp
mov
jno
repnz
leave
js
adc
dec
and
call
sub
adc
dec
aaa
arpl
mov
mov
xor
mov
cld
sbb
inc
push
push
outs
xchg
push
(bad)
fldcw
test
xchg
dec
add
(bad)
fcmovnu
cmps
aas
sbb
cli
daa
es
mov
sub
popa
xor
mov
add
cmps
dec
pop
lahf
jns
ret
loopne
inc
into
sbb
mov
sti
enter
pop
(bad)
fimul
lock
lods
xchg
xchg
mov
pop
xchg
in
pop
push
mov
mov
out
mov
sahf
fiadd
mov
xor
xchg
pop
popa
pop
pop
fdivr
dec
rcl
push
dec
mov
mov
(bad)
mov
pushf
aad
cli
call
jl
jbe
add
in
push
(bad)
fmulp
outs
mov
test
jge
cmp
idiv
fist
ss
mov
jg
push
adc
gs
in
retf
or
loopne
ja
mov
imul
sub
xor
or
lds
inc
stc
adc
mov
and
loopne
ins
mov
imul
loope
movs
dec
das
sbb
aas
sub
mov
pusha
add
js
pop
xor
sub
or
nop
xchg
shl
mov
mov
dec
dec
cmp
jb
gs
(bad)
adc
dec
bound
cmp
mov
jo
rol
cdq
inc
or
aas
push
dec
mov
loopne
cmps
test
inc
pop
int
scas
xchg
push
mov
mov
mov
jo
inc
div
icebp
push
pusha
ins
jns
dec
and
xchg
push
popa
xchg
dec
call
dec
push
push
popf
leave
aad
leave
out
icebp
sbb
push
xchg
or
iret
sub
jne
pop
call
ss
repnz
shl
push
repz
jae
scas
pop
sbb
inc
sub
bound
sbb
pop
fdivr
loop
sbb
adc
and
pushf
mov
inc
in
daa
leave
popa
cmp
movs
(bad)
cdq
xchg
xchg
pushf
adc
add
mov
mov
gs
xor
sbb
stos
icebp
push
iret
xor
sbb
mov
push
pop
test
or
movs
les
lahf
ins
(bad)
jmp
inc
(bad)
fdivp
(bad)
inc
hlt
scas
int
mov
mov
push
cdq
sub
lods
aam
mov
outs
psrlw
xlat
jle
(bad)
push
pop
jmp
jbe
adc
push
add
fimul
test
outs
jns
dec
cs
sub
loop
jp
pop
shl
in
scas
cdq
xchg
scas
mov
shr
inc
jmp
push
jmp
mov
fwait
push
in
or
push
call
mov
sub
loope
dec
or
add
ss
xchg
enter
lods
inc
mov
dec
(bad)
fstp
mov
mov
(bad)
fwait
push
ffreep
mov
addr16
popf
and
pop
xor
or
or
dec
mov
sbb
xchg
xchg
and
pop
mov
inc
sahf
mov
and
mov
jmp
out
or
dec
call
mov
push
inc
or
jge
pop
setl
mov
test
mov
sub
das
mov
fdiv
and
test
dec
fist
adc
xor
cmps
inc
cmp
or
pop
or
push
ficom
mov
cmc
push
jle
pop
loop
fwait
loopne
lods
xchg
js
jle
lods
mov
sbb
xchg
pop
xchg
ins
nop
pop
sbb
pop
scas
repz
sbb
sbb
(bad)
imul
neg
(bad)
jmp
xor
std
pop
pop
imul
std
popa
lock
aam
push
dec
mov
sbb
push
(bad)
clc
xlat
sbb
fstp
jmp
xor
mov
jno
mov
push
or
fimul
shl
cli
pop
ror
fsubr
js
dec
xor
ja
daa
dec
clc
inc
mov
sub
(bad)
and
mov
or
mov
scas
jp
bound
movs
(bad)
repnz
nop
jecxz
mov
stos
adc
and
stos
xlat
nop
stos
lahf
or
inc
aaa
(bad)
stc
inc
mov
in
xchg
ins
int
mov
xchg
pop
xlat
mov
xor
aam
cmp
push
inc
(bad)
xchg
sub
sbb
xchg
pushf
cmp
add
push
fild
out
jmp
fstp
in
cmp
pop
inc
retf
mov
imul
fwait
inc
pop
gs
pop
and
(bad)
adc
or
push
bound
pop
xchg
inc
sbb
mov
xchg
cmp
pop
clc
jne
fistp
in
imul
test
cmc
call
adc
cmp
call
inc
repnz
aas
push
fdivr
xor
sub
retf
ficom
imul
inc
sahf
add
pop
in
ss
aaa
and
jbe
scas
inc
or
jecxz
arpl
mov
xor
pop
popf
and
jns
xor
push
rep
jl
repz
xor
out
aad
sbb
pusha
jbe
xor
mov
(bad)
xchg
loop
imul
sbb
adc
rcl
pop
push
inc
aas
ss
aaa
mov
jns
test
jnp
pop
xchg
(bad)
add
pop
js
stos
fdiv
das
push
pop
sub
cld
or
js
mov
sbb
loop
dec
push
pop
dec
mov
sbb
inc
adc
mov
add
loopne
dec
int3
sub
das
cli
lock
addr16
and
aaa
sub
call
pop
add
sub
jmp
sar
add
jmp
add
inc
aad
adc
push
cmp
sub
push
into
mov
xchg
fwait
lahf
mov
data16
xchg
mov
fdivr
adc
xchg
addr16
jb
retf
add
(bad)
mov
adc
sahf
int
push
movs
nop
jg
push
test
mov
and
mov
mov
dec
mov
mov
lds
fadd
sbb
push
retf
jmp
dec
push
and
iret
dec
pop
inc
(bad)
xchg
mov
ins
and
xchg
mov
repz
fnstenv
movs
sar
jecxz
out
adc
adc
fdiv
inc
ss
sbb
jo
sbb
fmul
nop
es
arpl
inc
(bad)
mov
or
pop
in
rol
call
cli
dec
lds
jne
cmp
out
das
cmp
jnp
mov
ins
fwait
(bad)
fs
xchg
and
inc
dec
nop
push
push
mov
test
scas
cmp
add
ins
imul
and
push
sbb
cmp
sbb
and
push
or
sub
or
push
jmp
mov
adc
shl
idiv
scas
outs
loop
stos
jo
mov
dec
loope
cld
outs
inc
or
add
call
test
and
div
ror
dec
ror
fucomi
imul
mov
push
stc
mov
cmp
repnz
inc
movs
xor
jg
pop
call
fdivp
(bad)
pop
in
js
push
fimul
sahf
mov
popa
fs
pop
and
dec
mov
or
shl
inc
inc
sub
dec
call
ds
fs
sbb
clc
shl
cmp
ins
fstp
ss
jne
or
add
pop
enter
pop
fisub
push
adc
inc
sbb
pop
or
lea
fst
pop
fs
lods
sbb
stc
pushf
push
scas
pop
sbb
pop
daa
in
dec
jge
cdq
ins
and
cwde
loopne
dec
ror
dec
pop
xchg
push
or
adc
out
int
loope
push
push
push
shl
ror
push
or
inc
rcr
mov
dec
das
popf
hlt
outs
push
push
pop
pop
mov
mov
imul
add
retf
fld
mov
loope
and
pop
sub
std
movs
clc
fs
lods
not
cmp
lods
jge
call
call
and
scas
arpl
fcmovnu
ins
add
sub
sbb
imul
xor
xor
add
xor
and
push
inc
xchg
pusha
cmps
retf
stc
lahf
popa
sbb
jae
xor
mov
mov
iret
repnz
repz
push
shl
inc
pop
aam
fwait
pop
push
mov
mov
dec
aaa
sub
push
mov
mov
push
push
mov
push
repnz
addr16
adc
cmp
mov
sub
sub
and
mov
xchg
sub
and
mov
call
adc
dec
je
jg
inc
in
pop
jb
jge
call
aad
bound
std
mov
(bad)
mov
(bad)
cld
nop
movs
cli
ret
mov
int
sar
push
lods
xor
push
inc
dec
imul
push
fdivrp
ds
clc
sahf
imul
lahf
mov
xchg
test
aad
mov
xchg
add
mov
jle
xchg
stos
sub
shl
gs
cmps
mov
arpl
sub
mov
push
push
sub
das
add
pop
(bad)
enter
push
sub
ins
jno
xchg
jl
pcmpgtb
push
push
sti
cwde
arpl
int
into
mov
test
and
jg
xchg
cmp
lahf
lahf
mov
bswap
inc
jecxz
shr
leave
sub
adc
adc
xor
nop
scas
pop
jnp
jmp
and
enter
std
sbb
cdq
cmps
adc
sbb
sbb
or
adc
jns
lods
std
xor
cld
jp
call
cmc
daa
icebp
in
inc
dec
ret
jmp
call
mov
popa
ins
enter
dec
push
xor
ficom
push
add
pushf
fimul
test
daa
or
add
dec
mov
push
and
cld
xchg
hlt
aam
nop
xchg
mov
loopne
je
retf
cmp
xor
cmp
push
rcr
sbb
mov
sbb
adc
adc
xlat
or
mov
inc
ins
mov
lea
or
(bad)
cli
js
jecxz
mov
test
fwait
arpl
lods
mov
ss
sbb
call
jae
mov
mov
inc
add
ins
xchg
or
mov
scas
sahf
int
mov
cmp
and
(bad)
adc
out
mov
fmul
xchg
jp
xor
dec
ret
(bad)
dec
mov
sbb
sbb
dec
or
ror
loope
dec
outs
fs
pusha
and
sar
ss
cmp
cli
and
inc
(bad)
jno
sub
rcl
sbb
sub
xchg
int3
cmps
xor
scas
xor
(bad)
xchg
movs
sbb
cmovbe
dec
cmp
jno
in
test
cmps
loopne
xor
cmp
cmp
mov
mov
retf
mov
hlt
scas
jns
inc
cwde
sbb
out
xchg
shl
pop
inc
inc
test
cwde
and
adc
mov
int
sub
imul
lods
mov
(bad)
retf
aad
mov
repnz
mov
and
idiv
fmul
jl
repnz
and
ffree
dec
jbe
in
cmp
ficom
mov
test
mov
inc
or
mov
pop
or
cmps
xchg
ret
leave
jns
scas
mov
popa
cmp
jno
leave
mov
dec
lods
sub
mov
shr
jno
fmul
stos
push
xor
xor
mov
push
test
mov
ffreep
sub
test
or
loope
fdiv
fst
ret
mov
jp
or
ds
xchg
rep
(bad)
pop
(bad)
xlat
sbb
out
outs
mul
cmp
(bad)
jl
or
int
adc
inc
dec
shl
mov
add
outs
fnstcw
add
and
jecxz
mov
(bad)
dec
push
popa
adc
(bad)
mov
fisubr
xchg
stos
pop
rsqrtps
adc
sti
xor
ftst
retf
bound
mov
sub
xlat
cmp
mov
call
mov
add
sub
mov
or
int
stos
lods
push
xchg
int
mov
fiadd
mov
dec
push
aad
xchg
push
mov
adc
cmps
pusha
adc
out
fsub
add
cmps
xor
cmps
inc
sbb
es
xor
stc
dec
hlt
jnp
dec
mov
imul
js
xchg
(bad)
adc
mov
add
(bad)
in
cs
fld
lods
cmp
popf
xchg
outs
int3
test
jo
ror
test
out
movs
je
popa
xlat
mov
dec
xchg
fs
rol
mov
push
test
xchg
ins
jns
adc
mov
xchg
adc
ja
mov
das
inc
mov
shl
pop
icebp
sub
xchg
(bad)
nop
add
or
in
mov
adc
or
mov
stos
mov
xor
bnd
add
cmps
add
arpl
mov
je
adc
mov
dec
mov
mov
mov
cmp
scas
nop
adc
imul
mov
adc
push
dec
(bad)
jecxz
mov
pop
call
cmp
jmp
push
(bad)
aaa
cli
fucomp
add
div
mov
ss
mov
pop
mov
pop
lahf
push
xor
xchg
dec
jbe
mov
and
popf
mov
fcmove
imul
or
sbb
dec
sub
jle
mov
and
push
ret
test
jne
or
jle
xor
jae
repnz
sbb
es
fiadd
or
popa
pop
pushf
scas
lahf
cmp
adc
stos
ins
mov
shr
xchg
mov
repz
inc
and
(bad)
mov
daa
fstp
das
lahf
xchg
mov
adc
xor
ret
push
fs
lods
cmp
enter
add
cmc
sub
mov
fidivr
push
retf
pop
pusha
sbb
or
(bad)
in
and
mov
ins
enter
into
ins
out
sub
loop
inc
les
je
sahf
je
loope
rcl
loop
push
iret
inc
jmp
ins
push
inc
sar
enter
test
sahf
lods
fld
ret
push
pop
mov
pop
shl
mov
enter
lds
jno
fdivr
fsub
lods
hlt
mov
pushf
in
popa
nop
(bad)
xchg
outs
icebp
mov
dec
pop
into
xchg
(bad)
sbb
push
jge
add
mov
xor
dec
dec
loop
pop
mov
xchg
cmp
test
repnz
cld
mov
mov
pop
dec
test
add
(bad)
adc
arpl
ja
adc
ja
adc
jmp
(bad)
cmp
mov
mov
cld
aad
jbe
sbb
mov
pop
jne
mov
xchg
or
add
xor
scas
mov
fist
pop
adc
mov
pop
mov
or
add
daa
inc
add
scas
mov
xlat
and
imul
push
add
dec
cmp
fwait
test
xlat
iret
aam
cmp
rcr
pusha
push
jecxz
mov
jns
mov
popa
push
cld
pop
ret
sub
mov
nop
mov
jmp
inc
scas
inc
test
arpl
xor
push
ss
leave
lock
push
pop
mov
xchg
cwde
inc
and
out
dec
cmp
test
hlt
cmp
pop
xor
jle
mov
lds
push
cmc
test
mov
inc
nop
loope
retf
jmp
mov
inc
movs
dec
pop
std
mov
sub
jnp
movs
jns
int
jge
mov
fs
mov
les
(bad)
xchg
scas
fnstsw
sbb
pop
fadd
sahf
mov
xchg
cmps
xchg
mov
les
sbb
sbb
inc
jecxz
enter
ss
cmp
xlat
cmc
xlat
mov
nop
xor
or
pop
cwde
push
add
cmps
je
rcl
dec
dec
cli
add
stos
movs
or
into
inc
sbb
stos
add
jecxz
adc
jp
ret
push
inc
cmps
call
movs
rcl
or
xchg
add
and
xor
int3
adc
xchg
(bad)
in
add
mov
add
mov
xor
and
sbb
jo
data16
call
mov
jnp
dec
fbld
dec
gs
xor
cmp
data16
popf
in
pop
out
clc
pop
call
inc
cmp
ds
je
jp
mov
mov
lods
xor
popf
cmp
xchg
and
pop
xchg
sbb
sub
dec
inc
iret
ret
cmp
sbb
clc
int3
and
sbb
mov
fistp
int3
push
pop
stos
stos
popa
ss
lock
sbb
mov
xor
xor
out
xchg
add
jbe
push
pop
xchg
(bad)
sbb
dec
(bad)
outs
ret
dec
or
imul
or
(bad)
adc
add
xchg
test
jmp
(bad)
mov
clc
js
test
in
pop
fisttp
and
cmc
dec
lea
and
shl
mov
dec
bound
leave
fld
sbb
mov
cmp
dec
aad
inc
and
xchg
sub
xor
jp
popf
mov
mov
arpl
xchg
fdiv
add
dec
pop
and
xchg
stos
test
pop
nop
sub
hlt
pop
inc
int
imul
stos
jmp
cs
adc
cmp
cmp
mov
inc
and
retf
cmp
fnstcw
rol
aas
arpl
and
add
sbb
or
repz
loope
dec
aad
neg
shr
and
fild
xchg
inc
test
in
inc
ins
loope
ds
or
clc
dec
addr16
popf
loopne
push
mov
adc
mov
or
xchg
or
ret
sbb
add
jmp
test
and
div
add
push
rol
pop
fadd
push
mov
scas
sbb
cli
enter
push
(bad)
xchg
ror
adc
ds
js
inc
mov
pop
cmp
lods
fidiv
out
and
ret
(bad)
push
push
cdq
in
push
ficom
loope
ins
mov
popa
cmp
loope
pop
mov
clc
or
loope
sbb
jbe
sbb
push
sub
mov
dec
mov
xor
ins
push
jle
push
ja
out
pop
ja
(bad)
das
fstp
dec
outs
xchg
cmp
push
push
sbb
addr16
fst
pusha
mov
addr16
mov
scas
mov
sbb
add
call
ret
lds
sub
aad
xchg
or
movs
loope
adc
pop
fstp
ins
push
fstp
or
add
or
fiadd
jecxz
adc
lods
test
mov
dec
push
jmp
jne
push
pop
jg
cmp
ja
sbb
lahf
jge
mov
addr16
out
push
inc
mov
les
cli
mov
push
je
sbb
ja
jb
mov
rcl
test
cmp
adc
jecxz
jno
xchg
push
push
pop
ret
add
pop
xchg
cmp
lds
loop
mov
jp
inc
mov
sub
push
pop
mov
sub
rol
lahf
and
push
lods
lock
in
mov
mov
jmp
add
push
ret
mov
fadd
ins
mov
push
mov
in
pop
imul
mov
movs
sub
mov
push
rol
pop
lods
mov
loopne
jmp
adc
fs
add
out
or
adc
cmps
sbb
cmps
gs
push
add
inc
xor
pop
int3
gs
sti
fwait
cmp
jmp
xchg
cli
pusha
dec
cdq
jecxz
ss
dec
ret
in
push
or
popf
imul
movs
xchg
inc
gs
jl
es
xchg
cmc
mov
lods
sbb
jl
mov
ret
mov
rol
mov
xor
fmul
push
dec
faddp
test
ret
fs
pusha
cdq
fmulp
shl
int
cmp
(bad)
popa
dec
shr
int
mov
call
addr16
xchg
cmp
pop
(bad)
jmp
fnsave
cmp
das
cdq
stc
into
mov
out
or
add
(bad)
retf
mov
out
add
xchg
xor
fdivr
sbb
jae
outs
mov
mov
mov
movs
in
xchg
fs
inc
cmp
sub
xchg
scas
sar
shr
xchg
adc
arpl
push
dec
or
sbb
inc
xchg
mov
add
ret
enter
sar
inc
mov
pushf
cmp
loopne
push
hlt
test
sub
ins
sbb
in
pop
jmp
sbb
adc
addr16
or
inc
jns
mov
jl
call
in
lods
cwde
and
jo
rcl
dec
pop
sbb
sub
jnp
push
dec
cmp
inc
dec
dec
imul
lds
and
mov
fdivr
mov
mov
gs
inc
dec
dec
or
imul
or
mov
cmp
ins
push
aad
jo
cmp
mov
jno
popf
sub
add
mov
and
push
push
loopne
jp
repnz
or
sar
jae
or
out
popa
xor
or
bound
test
sub
popf
std
xor
and
fidivr
addr16
sub
sti
loopne
sti
ins
enter
test
add
mov
xor
call
jae
inc
jno
arpl
jnp
and
mov
pop
cmps
outs
(bad)
out
pop
aas
sub
cmp
sbb
scas
outs
fidivr
ins
pop
into
xor
add
ja
pop
dec
test
push
push
jno
fs
cdq
sbb
xchg
or
cmp
loope
sbb
inc
cmove
call
add
fidiv
enter
(bad)
mov
add
ret
mov
add
scas
and
in
js
dec
adc
repnz
leave
movs
popa
cmp
std
rol
mov
std
ins
add
push
sti
nop
gs
inc
mov
jg
out
or
es
dec
inc
sub
pop
or
xor
fld
out
push
mov
js
pop
ds
inc
fnstcw
es
jmp
mov
lahf
test
cmp
mov
pop
and
aam
dec
mov
je
push
mov
(bad)
pop
scas
dec
mov
cmp
fadd
loopne
int
outs
ror
div
aam
fisub
xchg
xchg
add
and
jno
xchg
add
stos
icebp
push
jo
jmp
push
jbe
mov
nop
mov
pop
(bad)
in
ja
loopne
dec
leave
add
fdiv
xchg
es
push
and
test
mov
lds
mov
in
out
sub
push
xchg
or
test
pop
and
aas
push
cmp
fnsave
in
adc
dec
mov
ror
add
ror
bound
scas
cmp
add
inc
push
mov
mov
dec
mov
ss
dec
xchg
dec
mov
pop
or
add
movs
add
dec
popa
icebp
outs
mov
ds
(bad)
sar
xchg
(bad)
mov
aaa
aad
xor
inc
or
retf
fisub
fnsave
push
pop
sub
scas
mov
dec
inc
cdq
movs
stos
(bad)
movs
hlt
inc
loope
jmp
das
test
inc
arpl
pop
adc
aaa
add
rcr
pop
jmp
xor
pushf
add
rdpmc
and
outs
and
jbe
fdiv
les
mov
sbb
es
mov
jnp
fs
inc
mov
mov
mov
in
and
jb
mov
int3
add
(bad)
stc
rcr
adc
ss
xor
mov
inc
mov
fcmovbe
lea
ja
mov
sub
lahf
xor
mov
mov
mov
push
xchg
mov
ror
and
repz
push
xlat
mov
sbb
scas
sbb
addr16
xchg
(bad)
loope
stos
jmp
pop
test
ror
cmp
push
xchg
push
pop
aas
fcmovnu
imul
out
ror
mov
fld
adc
or
inc
mov
out
jmp
cwde
mov
xor
inc
push
shr
xlat
mov
aam
push
mov
jge
adc
mov
mul
test
mov
aas
mov
clc
inc
test
inc
sbb
add
retf
imul
sbb
repz
dec
shl
aad
mov
push
in
fs
push
xchg
cli
jmp
xchg
pop
retf
pop
pusha
cwde
out
ret
adc
and
scas
sub
inc
movs
jmp
in
xchg
xchg
outs
(bad)
je
jbe
gs
mov
scas
xor
sbb
psubsw
ret
int
xor
pop
cmp
jo
or
sub
mov
push
cdq
test
jo
sahf
dec
xor
dec
and
dec
dec
push
jb
clc
loope
jecxz
sbb
dec
aam
sahf
cmc
adc
sbb
xlat
jb
mov
push
pop
pop
pop
repnz
dec
sbb
mov
dec
dec
repnz
inc
mov
fwait
or
inc
shl
push
mov
mov
mov
jge
add
test
and
sub
(bad)
sub
jnp
mov
adc
adc
xchg
xor
mov
sbb
push
add
sub
pop
or
scas
clc
xor
call
mov
jmp
dec
loope
cmp
xchg
or
mov
mov
dec
sub
mov
test
sar
hlt
lahf
sub
or
inc
(bad)
inc
sbb
sbb
inc
ja
pop
jns
jb
mov
aas
or
mov
mov
aam
aam
sub
in
imul
sti
pop
ds
(bad)
sti
imul
add
nop
gs
jmp
mov
xchg
or
mov
jmp
or
arpl
sub
mov
imul
mov
add
and
mov
xor
test
push
and
icebp
dec
cmc
jmp
push
jp
mov
sbb
jmp
jb
lahf
addr16
push
inc
pop
pop
adc
outs
(bad)
outs
ja
sbb
ror
mov
mov
push
dec
call
sub
aas
popf
loopne
ja
inc
mov
ret
and
test
cld
jnp
mov
nop
sar
aaa
xchg
sbb
fxch
jg
sub
ror
sub
dec
imul
dec
add
cdq
addr16
imul
or
inc
pop
div
dec
mov
enter
int
mov
inc
or
jne
fistp
cli
inc
ins
pop
jo
push
cmp
loopne
shl
push
cmps
sbb
bound
sbb
sub
mov
push
push
iret
sti
push
or
push
fs
dec
mov
push
adc
mov
dec
and
inc
imul
call
cmp
je
xchg
inc
push
(bad)
mov
in
push
jge
mov
mov
xor
test
fdivr
mov
hlt
repnz
out
jbe
pop
pop
sub
lods
mov
inc
retf
jmp
test
xchg
sub
test
out
loope
or
mov
push
pop
aam
loop
inc
cli
jle
(bad)
mov
dec
lock
ins
push
jmp
add
(bad)
xor
xor
cmp
jo
and
cmps
aas
cmp
mov
sub
fsub
adc
pop
rcr
sub
sbb
test
(bad)
scas
aad
mov
stos
cdq
rcl
pop
mov
or
and
fisttp
retf
add
mov
fnstenv
xchg
rcr
pop
mov
(bad)
mov
loope
and
cwde
dec
xchg
pop
gs
and
fnstcw
jle
aas
cwde
adc
outs
aaa
ins
in
test
dec
mov
jmp
mov
push
cmp
dec
sub
push
outs
mov
out
dec
std
pop
imul
pop
jl
in
mov
lods
loopne
add
bound
jmp
jmp
dec
or
inc
aam
push
and
stos
cmp
mov
jae
mov
call
xor
push
gs
mov
call
shl
lock
and
sahf
ins
push
xor
push
imul
push
or
lahf
mov
push
aad
jge
mov
hlt
inc
or
fwait
imul
xchg
es
cmp
lds
aad
cli
add
cmp
and
aas
ss
hlt
pop
xor
mov
xchg
push
and
pop
test
or
mov
(bad)
and
jnp
pop
mov
pop
pop
sub
enter
ret
dec
mov
out
sub
test
push
stos
icebp
dec
mov
pop
jb
and
or
stos
test
test
mov
mov
sub
cmp
outs
jge
sub
mov
mov
nop
cmp
mov
loope
js
dec
mul
sbb
xor
enter
popa
sbb
xchg
mov
dec
retf
les
jle
(bad)
icebp
mov
fs
repz
jb
mov
and
(bad)
loope
add
pushf
xor
(bad)
push
and
sbb
inc
mov
cli
adc
mov
push
jae
or
sbb
sbb
scas
mov
jne
fstp
pop
xchg
mov
repnz
sub
jbe
sub
nop
xchg
fidivr
add
inc
mov
mov
inc
in
loopne
lahf
or
jg
xchg
and
mov
aad
outs
in
jne
sub
test
fcmovne
sbb
push
repnz
add
repz
or
out
xchg
jb
cmp
inc
in
ret
(bad)
cmps
aaa
mov
push
mov
ror
xlat
add
push
or
pop
mov
in
adc
add
out
dec
mov
jp
neg
cmp
call
(bad)
jno
mov
ins
push
icebp
in
das
call
push
(bad)
neg
movs
retf
imul
dec
ret
xchg
sub
dec
cmp
aaa
pop
ds
retf
mov
(bad)
adc
not
retf
cmc
cdq
mov
push
sbb
bound
mov
stc
mov
adc
or
bound
xchg
xor
jb
cli
mov
or
inc
push
mov
(bad)
std
scas
push
retf
call
adc
fwait
xchg
iret
rcr
and
(bad)
mov
fild
fldenv
rol
pop
cmp
or
sahf
int3
stos
adc
out
fs
push
out
imul
sub
aas
jl
loop
nop
movs
or
ja
popa
addr16
cld
pop
push
pushf
sub
mov
xor
dec
jmp
sbb
adc
and
(bad)
bound
and
in
adc
iret
cmp
popa
xor
add
movs
scas
xchg
jns
push
dec
pop
mov
push
test
push
fimul
clc
(bad)
adc
mov
mov
jns
mov
ja
sub
or
sar
test
out
aam
mov
outs
retf
jns
jno
or
loop
push
jbe
cdq
xor
pop
(bad)
inc
xchg
inc
xor
mov
icebp
cmp
sbb
pusha
push
lock
push
sahf
das
in
sbb
lods
call
push
inc
dec
(bad)
(bad)
dec
pusha
xchg
cmp
mov
or
test
ret
dec
fstp
cmc
into
mov
into
add
xchg
push
inc
mov
shl
cdq
dec
addr16
movlps
and
mov
call
sbb
cmps
aad
rol
shl
call
shl
in
pop
add
jno
imul
aaa
ficom
cs
jb
mov
lea
sub
stos
add
inc
stos
in
mov
int3
add
cmp
stos
sahf
xor
cmp
lea
mov
cmp
xchg
in
scas
or
pushf
and
iret
cmps
adc
icebp
stos
push
xor
stc
lods
and
pop
xchg
sub
mov
pop
ret
mov
jbe
mov
pop
jae
jo
adc
test
or
push
sub
xchg
loopne
imul
or
sbb
inc
dec
js
inc
stc
mov
and
mov
cmp
aam
je
sub
pop
enter
mov
xchg
int3
and
push
sub
cmp
jno
push
cli
sahf
in
xor
and
hlt
push
mov
test
mov
js
cmps
frstor
push
clc
push
cmp
sub
push
lahf
pop
data16
(bad)
fstp
pushf
xchg
ret
push
aad
rcr
sahf
nop
js
test
in
push
cmps
xor
or
add
sahf
mov
jb
pushf
shl
pop
xor
dec
int
es
adc
retf
lea
and
cdq
push
jl
jg
int
jge
push
xchg
addr16
pop
add
test
icebp
mov
pop
call
ins
arpl
inc
adc
add
mov
icebp
sub
inc
mov
jg
mov
sub
(bad)
sahf
fucomp
ja
loope
das
in
leave
and
xchg
test
shl
push
and
addr16
push
lds
cmp
aad
movs
dec
push
pop
add
loop
or
sti
retf
mov
mov
cwde
enter
sub
(bad)
push
cmp
leave
cmp
jmp
dec
fcomp
jle
fsubr
mov
int
sbb
xchg
xchg
sub
adc
xchg
add
or
push
push
adc
cmp
ins
inc
add
bound
fild
(bad)
clc
mov
movs
adc
stc
(bad)
adc
repnz
pop
adc
lods
dec
das
in
scas
xchg
rcr
xchg
stc
push
les
mov
enter
adc
sar
not
add
cmp
mov
jp
xor
push
mov
retf
pop
into
jns
adc
(bad)
push
sub
cmc
cmovnp
sbb
xchg
in
scas
mov
xchg
cwde
sbb
test
mov
push
cmp
mov
lods
sub
ds
in
adc
xchg
ud0
mov
mov
sbb
jne
lods
aaa
popa
outs
fidivr
int
loopne
repz
retf
in
sbb
push
sbb
outs
das
js
(bad)
cmps
pop
pop
cmp
and
arpl
jmp
ficomp
sti
popa
sbb
and
outs
xchg
mov
pop
jae
imul
inc
sub
and
pop
pop
xchg
sub
dec
mov
imul
or
push
aad
cmp
outs
stos
xlat
xlat
jne
pop
xchg
es
popa
mov
adc
sub
jne
into
fmul
sahf
inc
or
pop
jle
fwait
jne
and
ss
(bad)
and
mov
and
or
sub
inc
cmp
es
nop
lahf
imul
and
movs
cli
adc
inc
and
pop
xor
shl
ins
into
pop
and
push
pop
gs
cmp
mov
(bad)
ins
add
icebp
push
lahf
lock
lock
jmp
pop
pushf
push
cmps
data16
mov
fsubr
pushf
loopne
inc
cmp
inc
je
ds
pop
mov
iret
xor
jmp
inc
cli
and
mov
jb
jbe
adc
jmp
fcmovne
mov
ss
or
push
in
jo
xor
mov
sti
cmp
mov
movs
(bad)
pop
outs
push
call
fucom
cmp
push
popa
sahf
pop
call
sbb
add
jle
mov
dec
mov
cmp
pop
pop
xor
scas
dec
call
idiv
jne
push
jb
fsubp
mov
adc
push
cli
cmp
push
push
gs
mov
fucomi
jle
xchg
sti
shl
scas
rcr
(bad)
fcomip
add
cli
mov
in
aas
(bad)
ret
sbb
ret
imul
sahf
aaa
call
(bad)
or
gs
cmp
call
or
cmp
ret
mov
fisubr
xor
jecxz
mov
(bad)
je
and
fs
or
sub
and
sar
and
enter
inc
push
push
or
jge
shr
imul
loop
jl
cmp
mov
or
imul
movs
loopne
or
out
or
push
cmp
fld
dec
fwait
mov
mov
(bad)
mov
mov
imul
popa
xchg
jbe
aas
and
repz
mov
inc
mov
mov
jb
dec
ss
push
shr
mov
push
add
ret
(bad)
cmp
ficomp
pusha
xor
(bad)
cmp
test
jae
(bad)
mov
pushf
sub
loop
xchg
enter
ret
cmps
sbb
dec
lock
xlat
push
movs
cmp
out
and
ins
add
pop
lock
loop
add
mov
or
in
xchg
xchg
test
pop
jno
not
or
aam
test
aam
add
mov
out
ins
lods
xor
out
sbb
lahf
fld
retf
(bad)
jmp
or
mul
(bad)
cmp
int
dec
inc
cld
outs
out
or
xchg
hlt
fmul
mov
and
cmp
inc
or
cdq
icebp
add
scas
dec
out
dec
ins
or
pop
aas
out
push
lods
lods
into
aam
cmc
xor
loop
fmulp
das
and
test
sar
jle
outs
adc
sbb
aad
scas
out
adc
cmp
push
cmp
fcomi
mov
push
mov
retf
inc
mov
mov
stos
adc
repnz
mov
loopne
pop
int3
jecxz
mov
and
rcr
ins
das
es
out
out
sar
aas
gs
test
dec
test
adc
iret
(bad)
leave
xchg
stos
cmp
fstp
inc
adc
movs
aas
or
(bad)
cmp
pop
inc
add
(bad)
push
aam
rol
push
jb
sbb
retf
dec
out
nop
dec
pop
(bad)
frstor
adc
aam
sbb
pop
retf
xor
mov
add
ins
or
pop
cwde
ror
add
jle
jecxz
call
dec
out
and
cmp
and
pop
popa
rol
xor
xchg
jae
pushf
test
repz
aaa
pop
sbb
inc
sar
daa
push
in
shr
test
push
xchg
mov
(bad)
push
mov
jp
add
dec
add
ret
call
mov
and
retf
out
jo
dec
pop
lock
mov
xor
cmps
add
mov
dec
or
enter
adc
out
outs
add
and
test
fwait
test
xchg
enter
dec
icebp
call
int
jb
and
jo
cmp
ins
push
cmps
pop
xor
ror
xchg
cmps
add
outs
inc
jl
(bad)
cmp
in
or
jo
(bad)
stos
out
daa
rcr
inc
jmp
and
outs
into
jmp
or
cmp
push
and
cld
xor
pop
inc
adc
rcr
jbe
sahf
pop
je
jl
xchg
mov
mov
push
jle
test
or
jnp
in
lock
xor
mov
dec
rcr
in
mov
add
mov
pop
mov
add
mov
add
cmc
push
sub
push
js
ret
out
(bad)
or
imul
mov
and
lods
cdq
pop
add
add
or
cdq
pop
pop
or
gs
cmp
cmp
push
cmp
aaa
arpl
scas
push
nop
add
sub
xchg
retf
addr16
mov
adc
jp
mov
dec
movs
jno
sbb
(bad)
jne
add
or
add
hlt
dec
clc
push
test
and
lea
inc
aam
mov
fsub
aaa
pushf
push
popa
adc
(bad)
mul
mov
dec
test
cld
inc
daa
or
arpl
xor
dec
cli
xchg
mov
repz
cmp
call
mov
cmps
push
mov
jle
or
js
clc
cmp
and
(bad)
movs
aaa
cmp
icebp
stos
imul
icebp
std
cdq
or
ja
jmp
cdq
(bad)
icebp
leave
mov
retf
adc
add
scas
fdivr
scas
mov
icebp
addr16
push
pushf
das
je
inc
mov
sbb
or
(bad)
sbb
(bad)
ficomp
sub
lahf
les
push
sub
xchg
push
fcom
jae
push
add
jge
jns
mov
mov
mov
mov
jae
xor
sar
test
sbb
dec
ficom
fldenv
cli
sbb
push
inc
jmp
pop
das
lea
jno
stos
fsubr
leave
sub
ins
hlt
(bad)
cmp
repnz
popf
gs
jne
(bad)
xchg
test
inc
leave
sar
das
outs
adc
push
xor
xchg
idiv
pop
xor
test
mov
stc
push
fs
adc
xor
les
frstor
and
mov
xchg
mov
(bad)
fbld
movups
idiv
jno
iret
inc
sahf
ins
push
push
pop
add
enter
and
inc
cmp
and
stos
cwde
inc
rcl
or
ja
(bad)
jno
jo
mov
inc
cs
mov
dec
pop
in
lods
push
cwde
mov
sub
cli
ret
xor
movs
ins
add
in
repnz
sar
inc
cmp
mov
adc
xchg
sbb
fs
mov
or
mov
add
test
push
inc
icebp
mov
xor
imul
fdivr
(bad)
(bad)
cwde
mov
mov
sub
xchg
(bad)
hlt
jle
or
icebp
out
cmps
and
mov
jmp
xchg
pop
jbe
ins
cmps
cdq
cwde
mov
lock
add
mov
jmp
rcl
popf
pop
test
add
(bad)
xchg
sbb
mov
and
lea
xchg
lods
gs
and
or
or
stc
dec
(bad)
sbb
sbb
xchg
imul
jl
or
neg
fwait
jge
add
mov
or
sub
or
sti
cld
cmp
addr16
and
test
pop
add
retf
ja
push
repz
in
outs
pop
not
outs
sbb
cmp
daa
repnz
popf
loop
push
dec
clc
jmp
aad
movs
fidiv
mov
push
add
mov
ret
dec
mov
lds
sbb
push
jmp
fcom
int3
mov
xlat
dec
clc
gs
cmc
or
aas
std
cmps
adc
popa
retf
in
cmps
(bad)
cwde
int3
push
inc
xor
sbb
pusha
movs
jmp
lea
daa
mov
sbb
(bad)
mov
out
test
jge
sbb
push
repnz
nop
mov
sbb
rcl
call
sar
les
jmp
mov
clc
rcr
xor
add
test
dec
imul
cwde
cmp
pop
sub
mov
or
xor
and
and
and
mov
cmp
inc
adc
data16
mov
xchg
(bad)
ins
sbb
mov
adc
enter
xchg
mov
cmc
nop
push
mov
dec
mov
and
aas
sbb
inc
and
out
data16
(bad)
cld
dec
lds
shr
inc
jne
jge
cmp
xchg
or
sub
cdq
mov
mul
out
cdq
rol
jl
shl
fwait
add
cmps
pop
inc
out
mov
xchg
adc
inc
lds
imul
or
xchg
leave
aad
push
ds
dec
(bad)
sub
sub
ror
idiv
(bad)
fidiv
sbb
movs
rol
out
ret
adc
iret
jae
or
jo
es
inc
xchg
mov
lods
mov
(bad)
cmp
jb
jge
in
jecxz
jecxz
jl
retf
jmp
sub
enter
push
imul
cmp
mov
movs
gs
outs
bnd
cmps
jns
in
hlt
xor
pushf
mov
call
dec
cmp
stos
sti
stc
ds
cmps
xchg
and
repnz
fnsave
jne
adc
push
ss
iret
je
test
add
adc
je
pop
test
mov
jl
(bad)
iret
rol
mov
cld
jle
loop
dec
jp
xor
out
movntps
jne
cmp
add
outs
push
imul
in
sub
fistp
push
add
xor
pushf
fcom
add
ja
mov
iret
inc
adc
pop
push
(bad)
cli
push
icebp
mov
inc
sub
mov
fadd
dec
in
jmp
or
pop
mov
lods
adc
scas
test
fdiv
and
retf
push
push
mov
jecxz
jl
out
mov
xor
mov
mov
ret
ss
cs
jmp
push
movs
ins
cmp
cmp
mov
mov
inc
pusha
cmc
jb
fcmove
mov
dec
jnp
cmc
dec
nop
and
dec
out
or
stos
mov
bound
jne
loope
jns
out
pop
inc
jge
and
and
pop
mov
nop
push
or
scas
add
sbb
std
adc
int3
or
out
or
rcl
push
push
(bad)
ins
dec
pop
xchg
js
imul
lea
popf
popa
in
clc
scas
out
pusha
aas
mov
ins
aaa
sti
mov
mov
push
sub
test
call
outs
je
enter
xchg
in
(bad)
mov
push
in
cmc
adc
scas
jmp
std
xchg
test
push
push
faddp
mov
je
movs
mov
nop
fsubr
jae
and
mov
gs
out
add
mov
dec
xor
push
mov
mov
scas
sahf
movs
jno
fwait
sbb
and
push
clc
dec
hlt
adc
icebp
or
mov
push
aaa
leave
ins
lahf
jo
dec
jnp
dec
mov
mov
adc
nop
into
xchg
mov
cwde
jb
pushf
mov
fdivr
xchg
test
int3
ja
in
dec
sub
adc
dec
xchg
push
lahf
call
cmps
sub
sub
rcr
xchg
sub
jmp
les
test
lods
and
add
cmc
add
fnsave
jmp
cdq
add
jg
outs
sub
cmp
inc
movs
aaa
fidiv
jo
inc
in
or
retf
fcomp
pop
jmp
into
neg
and
adc
pusha
into
mov
fdiv
and
popa
fcmovbe
pushf
fdiv
jmp
mov
fcomp
leave
bnd
jno
clc
push
sub
or
arpl
mov
fild
(bad)
push
and
xor
mov
mov
es
mov
test
jle
out
pop
xchg
and
call
cmp
ds
lea
add
mov
xor
pop
std
add
pop
jp
out
pop
mov
test
lods
jg
or
into
pop
les
add
mov
out
push
hlt
sbb
sbb
and
xchg
push
jmp
xchg
(bad)
out
in
in
jp
rcl
les
mov
fld
out
lods
inc
sbb
jp
fdiv
push
lods
shr
out
adc
fdivr
sub
dec
sub
shl
inc
add
push
je
fnstenv
mov
ret
ja
add
loop
xchg
or
xor
lock
gs
add
lahf
out
es
pop
inc
pop
push
cmp
xchg
cmp
xchg
je
cmc
pop
cmp
fisttp
xchg
sbb
and
retf
xchg
cdq
fnstenv
or
and
std
sub
jp
and
out
es
cmps
pop
(bad)
test
mov
jne
xor
cwde
xor
shl
jl
hlt
inc
fmul
pop
xor
ja
and
or
xor
test
add
jecxz
mov
rcr
pop
push
pop
pop
push
push
rcr
rol
ret
sbb
pop
sub
mov
adc
or
push
test
xor
inc
enter
mov
fnstcw
add
pushf
daa
movs
je
sbb
xchg
and
(bad)
leave
mov
mov
(bad)
ror
dec
xchg
adc
movs
test
rcl
add
xor
imul
retf
ja
jae
and
push
push
lods
mov
fstp
xor
sbb
ins
js
xor
repz
or
pop
xor
stos
fstp
in
fistp
out
ja
dec
mov
call
xchg
ss
push
scas
(bad)
pusha
sub
push
or
or
xchg
icebp
lods
cmps
retf
inc
mov
mov
xchg
out
sub
or
stc
push
or
or
xchg
mov
push
sbb
pop
pop
pop
fadd
nop
addr16
pop
push
lock
sti
nop
sub
push
test
jmp
loopne
push
movs
outs
push
or
and
jmp
dec
arpl
push
ins
adc
sub
push
test
jb
xor
xchg
movs
add
nop
xlat
js
add
fs
mov
fwait
xor
cmp
cs
stos
inc
shr
and
mov
add
fisubr
(bad)
fnsetpm(287
repz
xchg
aad
xlat
cmc
mov
xchg
call
(bad)
fcomp
rol
rol
int3
dec
and
or
mov
push
ret
ds
out
sub
idiv
das
xor
in
repz
jp
ficom
xchg
and
sub
cmp
jmp
push
cmp
jmp
cmp
sub
cdq
es
jnp
xor
or
push
(bad)
fistp
jb
pop
retf
push
push
scas
mov
lods
(bad)
ret
mov
mov
and
jnp
mov
pop
cmps
lods
test
xor
pop
dec
mov
popa
gs
or
das
jl
lds
out
daa
mov
stos
cmp
mov
dec
xchg
pop
add
lods
mov
jecxz
mov
cmp
ret
add
mov
sti
push
pop
cld
imul
sbb
push
xor
cdq
xchg
cmp
dec
xor
adc
jo
ja
or
add
fbstp
mov
leave
mov
inc
pushf
mov
lahf
(bad)
adc
push
jae
fwait
mov
sub
dec
jmp
xchg
push
cmp
(bad)
retf
xor
xor
ret
sub
fwait
movs
mov
push
mov
sub
add
push
(bad)
jmp
jge
cmp
and
xchg
cdq
sbb
and
icebp
mov
or
icebp
add
ret
xchg
dec
push
or
cmp
push
cli
test
arpl
ins
fisttp
pop
mov
adc
mov
rcr
mov
fcmovu
jbe
jb
(bad)
or
inc
in
xchg
ja
pop
dec
jecxz
inc
add
(bad)
sti
jnp
or
sbb
add
mov
imul
sbb
push
sbb
daa
push
pushf
add
push
stos
push
fidiv
cmp
aam
(bad)
mov
ret
in
test
jnp
mov
sti
in
adc
push
loope
in
xor
std
sub
and
push
ins
push
cmp
pop
xchg
push
cmps
call
sahf
shl
mov
or
xor
fisttp
jmp
jge
fisttp
push
push
adc
xchg
not
xchg
pop
xchg
pusha
sti
xor
pop
int3
and
sbb
mul
fadd
loopne
mov
mov
cmps
push
in
xor
sub
je
push
mov
mov
mov
add
mov
cmp
mov
mov
fisubr
dec
movs
mov
loop
fst
inc
add
pop
inc
in
push
jne
sbb
jnp
mov
mov
js
pop
mov
idiv
pushf
dec
test
retf
xchg
es
div
fsubr
fsub
imul
(bad)
popa
cmp
ja
rcl
aas
sti
push
(bad)
xor
inc
mov
nop
popf
int
xor
jno
cld
sar
mov
std
push
and
call
mov
icebp
push
cmps
cmp
daa
out
jne
shl
retf
pop
pop
inc
and
loope
mov
and
repz
or
inc
pop
shr
pusha
js
xor
cdq
dec
push
stc
push
enter
and
dec
addr16
dec
sbb
pushf
sbb
jmp
hlt
cmp
ret
pop
adc
cmps
cmp
sub
dec
cmps
cmp
fmul
push
leave
popa
cmp
mov
scas
movs
dec
xchg
in
sbb
and
iret
xor
mov
repz
jp
test
mov
mov
scas
mov
ds
push
or
jae
ret
sub
rcr
outs
or
xchg
add
int
out
out
hlt
cld
add
icebp
lds
test
xor
retf
cmp
push
xor
mov
dec
(bad)
ins
sub
adc
or
mov
mov
mov
add
aad
or
mov
or
stc
inc
adc
popf
and
xchg
inc
push
outs
mov
sbb
aam
in
sub
test
cs
loopne
mov
adc
fcmovu
paddw
cmc
mov
loop
cmc
call
jmp
xchg
dec
repnz
repz
jg
test
aad
js
add
nop
inc
pop
jmp
outs
outs
(bad)
loopne
in
or
and
xor
pusha
(bad)
jg
in
sbb
push
jno
mov
and
mul
xchg
lods
cs
sbb
adc
int3
fcom
sbb
cmps
or
pusha
mov
das
jo
dec
sub
add
loop
scas
xlat
xchg
add
xchg
int3
imul
outs
sub
pop
in
fadd
dec
cli
add
movs
inc
sub
mov
dec
jb
add
push
push
and
out
and
lea
xor
clc
push
lock
stos
xchg
movs
sahf
nop
xchg
imul
xchg
or
(bad)
sbb
inc
or
pop
inc
inc
push
or
jbe
lods
mov
movntq
out
cmc
cmp
lea
add
push
arpl
xchg
pop
jge
(bad)
pop
dec
mov
xchg
shl
repnz
push
jne
cwde
fmul
test
popa
sub
xor
pop
dec
std
inc
xchg
mov
mov
push
aad
inc
cmp
retf
mov
sbb
int3
ins
mov
pop
inc
cmp
scas
adc
mov
sar
outs
rol
stc
mov
sar
jae
cmp
push
stos
clc
out
imul
mov
push
jl
cli
int3
mov
aam
test
xchg
ret
cbw
and
sbb
scas
sub
cli
sbb
cmp
sub
xchg
xchg
push
mov
pop
push
push
ret
cs
xchg
aaa
xchg
push
jae
bnd
jne
adc
call
sub
pop
stos
lds
add
mov
add
out
retf
pop
sub
mov
fldenv
fmul
ret
xchg
mov
rcr
bound
mov
repz
mov
shl
ds
lds
sbb
mov
imul
jl
aam
push
gs
dec
icebp
scas
fsubr
lock
test
and
mul
sub
inc
mov
pushf
stos
scas
in
loop
xchg
cmps
outs
mov
jbe
pop
test
mov
fcom
sbb
sub
cmp
mov
inc
out
rcr
cmps
adc
jb
dec
icebp
xlat
inc
fisubr
xchg
fadd
add
cmp
outs
out
mov
and
repz
aam
lds
or
mov
(bad)
das
movs
(bad)
sub
ins
adc
jnp
sti
jno
sti
cmp
dec
aad
dec
shl
dec
cdq
test
test
daa
scas
aad
das
adc
stos
test
adc
push
xor
repnz
and
popa
fst
cwde
cs
mov
adc
test
jmp
xor
enter
into
daa
idiv
and
sub
imul
popf
shl
or
test
std
call
shr
adc
dec
mov
jmp
nop
test
sahf
std
sub
inc
in
xchg
xor
cli
or
add
jb
or
cmp
inc
aas
jne
iret
xlat
jb
mov
and
jl
bound
xchg
shr
or
ds
mov
xchg
cld
mov
mov
cdq
sar
sar
cwde
push
adc
outs
das
scas
out
push
stc
daa
daa
fistp
sub
mov
cmp
xchg
popf
std
mov
dec
xor
clc
pusha
pop
mov
sahf
sbb
xor
jl
and
inc
push
jbe
jmp
xor
rcr
imul
pop
push
mov
scas
scas
lea
movs
fbld
retf
test
(bad)
cs
xor
push
retf
push
mov
add
(bad)
ss
and
push
cmp
sub
jmp
inc
xchg
cmps
jecxz
scas
xor
popf
pop
mov
outs
pusha
or
xor
shl
outs
xor
dec
fiadd
jmp
push
sub
adc
pop
ja
out
xor
push
pop
push
add
aas
pop
ins
cs
shl
mov
sbb
pushf
and
inc
xor
out
dec
in
pop
ss
push
mov
or
dec
dec
mov
add
mov
or
movs
fstp
inc
sti
mov
jb
mov
pop
retw
std
mov
fnstenv
mov
jl
loope
sbb
xor
mov
cmps
inc
scas
lahf
mov
inc
loope
mov
xchg
mov
fbstp
adc
je
push
xchg
mov
push
iret
adc
mov
push
lock
mov
stos
in
test
call
sbb
mov
clc
iret
setg
jle
jl
es
bnd
shl
test
sbb
inc
add
inc
sub
popa
mov
mov
add
jae
inc
and
call
cmp
std
inc
sbb
jp
adc
mov
adc
ss
in
pusha
(bad)
in
mov
test
jnp
int3
xor
int3
fcomip
mov
dec
xor
jg
adc
rcr
idiv
cmp
sub
test
sbb
cmp
dec
jp
push
sub
cmp
sub
cmps
and
imul
test
fcomp
xor
(bad)
test
cmc
add
daa
mov
fucomip
mov
push
sub
mov
test
sub
adc
adc
xchg
lea
add
psubusw
pop
scas
lea
mov
sub
std
gs
and
nop
mov
pushf
xchg
xchg
rcr
out
dec
xlat
jecxz
bound
add
ret
imul
pop
mov
(bad)
hlt
js
adc
mov
xor
fwait
and
(bad)
mov
fild
sbb
into
or
enter
push
out
cmp
outs
out
test
pop
dec
mov
add
cmp
shl
in
mov
lahf
cmps
mov
daa
adc
xchg
inc
xchg
or
lahf
into
inc
sbb
adc
push
cmc
sub
shr
ins
mov
push
bound
sar
je
outs
daa
repnz
(bad)
and
cmp
push
or
in
mov
lea
fcom
hlt
test
sbb
cld
inc
inc
xor
sbb
jle
xor
stos
(bad)
out
or
and
aam
fwait
mov
jmp
inc
sbb
shl
fimul
pop
jmp
jl
inc
sub
loopne
bound
sbb
sbb
push
mov
fs
ins
or
enter
fidiv
mov
shl
push
xor
or
inc
outs
dec
scas
dec
push
xor
xchg
or
mov
sub
ror
ror
add
fdiv
aaa
xor
push
sbb
aam
(bad)
cmp
sahf
(bad)
(bad)
dec
inc
dec
push
cmp
and
in
dec
xor
lahf
dec
jb
fstp
aaa
clc
aad
repz
scas
movs
lods
les
push
jmp
and
stos
outs
jl
dec
aaa
xor
ins
call
icebp
jns
mov
xchg
(bad)
mov
sbb
and
mov
add
push
cld
sti
xor
inc
in
dec
std
or
stos
out
cmp
ins
adc
xlat
test
inc
imul
sub
sbb
xor
xchg
arpl
dec
in
or
dec
push
push
sbb
ss
xchg
mov
(bad)
push
push
xor
inc
push
xor
mov
mov
adc
pop
xchg
ret
je
pop
ret
setno
xor
mov
data16
xchg
push
or
scas
jmp
mov
loope
or
inc
inc
movs
rcl
mov
mov
adc
sbb
mov
aam
in
fld
xchg
sub
add
and
cmp
and
add
push
push
push
ret
mov
or
push
das
cli
jmp
imul
fisttp
movs
inc
inc
mov
or
dec
push
aad
mov
mov
sbb
inc
sub
xchg
sub
xchg
lds
punpckhdq
sub
sbb
inc
call
jne
sti
fiadd
ja
pop
mov
aas
mov
outs
mov
(bad)
jns
inc
pop
(bad)
gs
jl
xchg
inc
sbb
adc
shl
ret
fwait
mov
jg
xchg
popf
hlt
cmps
jne
xor
cdq
gs
mov
cwde
ret
xlat
fstp
sbb
out
jns
sub
je
movs
fsubp
inc
icebp
loope
and
out
sbb
test
sub
mov
or
push
dec
push
sub
mov
sub
jmp
add
inc
call
(bad)
aaa
inc
retf
xchg
popa
daa
in
dec
dec
stos
mov
mov
cli
out
ret
pop
push
aaa
ror
inc
movs
xor
adc
ret
in
int3
xchg
cmp
or
inc
clc
retf
sbb
push
mov
or
mov
aam
mov
dec
jl
jno
push
adc
es
cwde
ret
stos
xchg
movs
es
jg
mov
inc
ins
dec
out
dec
mov
adc
push
call
add
cmp
mov
out
pop
pop
imul
in
pop
xor
cmps
dec
mov
dec
jno
mov
fdivr
nop
inc
mov
mov
(bad)
clc
add
sub
jae
dec
ins
xor
imul
pusha
pop
test
aaa
jle
or
popa
xchg
dec
call
mov
in
pop
push
neg
in
add
sbb
loopne
(bad)
dec
mov
push
mov
dec
ss
int3
leave
add
shl
(bad)
push
cwde
repnz
add
movs
dec
int
(bad)
daa
pop
xor
jo
stos
or
ficomp
hlt
in
out
out
imul
sub
jle
int
push
cmc
popf
add
mov
xchg
mov
sub
sti
xor
push
mov
(bad)
fdiv
adc
bound
xchg
sbb
pop
and
sub
sub
data16
mov
lock
(bad)
push
mov
loopne
add
fs
fcomip
movs
fnstsw
repnz
push
adc
stos
mov
cmp
xor
dec
xor
call
stos
xchg
mov
mov
or
mov
cwde
or
mov
inc
and
movs
inc
ret
xchg
jne
dec
clc
out
ds
jle
pop
adc
cmp
icebp
dec
bound
cdq
pop
adc
adc
je
mov
(bad)
mov
sub
dec
push
test
push
lods
jle
rcl
popa
cdq
stos
jo
aas
mov
xor
in
mov
(bad)
cmp
js
adc
ja
ror
mov
cmps
sub
cwde
jmp
retf
push
sti
loopne
push
das
ins
jp
xchg
inc
mul
fsubr
sbb
and
mov
sbb
add
outs
stos
dec
test
inc
gs
push
in
mov
aad
jmp
mov
pop
addr16
cwde
sub
jne
sar
inc
and
ja
std
sub
add
mov
popf
mov
mov
cs
inc
cmp
mov
mov
mov
aaa
call
mov
stos
js
add
push
movs
sub
mov
pop
push
and
dec
cld
or
xor
(bad)
sbb
mov
mov
hlt
add
icebp
xchg
out
pop
lahf
mov
dec
rcr
sub
pop
fmul
and
movs
aas
jmp
sub
lea
or
ror
add
dec
int
addr16
or
es
shr
test
cli
add
js
or
mov
mov
movs
pop
xor
imul
mov
pop
pop
test
xor
mov
inc
or
ret
shl
push
dec
and
or
int3
cmp
xor
push
push
dec
test
sub
adc
push
xchg
xchg
jne
bound
push
(bad)
sbb
out
or
dec
test
inc
push
sti
or
cmp
jg
imul
cmp
jl
jmp
pop
jne
mov
jl
or
and
mov
fsubr
mov
or
inc
sbb
xor
sub
ss
in
mov
pop
iret
pop
lods
inc
cmc
int3
adc
xor
repnz
cs
aad
mov
out
add
call
mov
and
mov
push
add
out
sbb
sbb
fisub
cmp
cli
and
cmp
(bad)
push
mov
dec
bound
mov
shl
or
mov
out
lea
retf
dec
push
push
sub
jecxz
lods
nop
xor
adc
fbstp
call
pop
sti
push
mul
push
inc
test
rcr
sti
in
jl
mov
dec
out
mov
lock
add
(bad)
popa
dec
and
mov
cld
loope
add
add
mov
sub
or
mov
sti
inc
and
dec
pushf
pop
pop
cdq
xor
rol
jecxz
fwait
sub
jb
dec
and
std
sahf
pop
movs
outs
ror
push
(bad)
xchg
fsub
push
inc
mov
adc
inc
cmps
jne
(bad)
cmp
out
mov
inc
add
mov
cmps
mov
xor
adc
test
adc
cmp
je
daa
mov
stos
sub
xlat
or
mov
cmp
movs
mov
das
lds
inc
xor
sbb
popa
and
adc
xor
pop
xchg
mov
adc
xlat
js
adc
mov
bound
retf
dec
xor
(bad)
(bad)
hlt
jecxz
push
add
inc
push
movs
mov
mov
ds
xchg
add
out
push
ja
(bad)
call
in
mov
sbb
repz
fadd
mov
sub
jge
pushf
jno
aad
out
pop
rol
leave
ins
fwait
aas
clc
stos
jbe
icebp
xor
icebp
dec
cmps
fdivr
loop
and
xor
repnz
scas
xor
jge
add
push
daa
popf
pushf
int3
shr
pop
sbb
xchg
icebp
xchg
lea
mov
push
lock
jae
add
xlat
mov
in
jge
jl
xchg
adc
mov
in
add
cmp
mov
add
pop
fcomp
adc
int3
in
xchg
and
push
pop
and
(bad)
sahf
pop
mov
fiadd
push
cmc
inc
mov
dec
out
push
jns
cmp
xchg
js
test
push
jl
mov
dec
movs
ins
fidiv
cdq
shl
(bad)
push
cdq
xchg
mov
sub
addr16
adc
mov
dec
mov
mov
push
cs
adc
sbb
adc
lea
mov
stc
nop
jno
sbb
xlat
push
jl
rcl
stos
xchg
push
sub
mov
push
pop
sbb
lock
inc
retf
adc
mov
fnstsw
mov
add
xor
jmp
mov
mov
das
div
mov
dec
out
xchg
cmp
push
je
and
sahf
neg
(bad)
es
shl
mov
popf
pusha
dec
mov
repnz
enter
les
jae
pop
adc
push
jp
es
shl
push
ror
shl
fimul
call
and
aaa
pop
ins
in
int3
lea
fwait
icebp
jge
or
stc
xchg
fdivr
mov
test
dec
loop
pop
dec
shl
sbb
mov
mov
mov
pop
test
mov
push
jb
les
xchg
pop
das
ror
or
add
mov
fnstsw
jle
cmps
push
sbb
pusha
retf
mov
xchg
cld
imul
out
retf
inc
mov
xor
mov
fcom
cmp
jnp
bound
jl
cmp
mov
pop
push
sub
pop
test
imul
ss
into
adc
out
lods
std
std
mov
enter
(bad)
sahf
sub
aam
in
cld
repnz
jne
cmp
call
adc
sub
mov
stc
jno
addr16
ins
jl
ret
mov
dec
aam
outs
xchg
adc
hlt
int
jo
or
inc
arpl
pinsrw
push
pop
hlt
aaa
jmp
dec
(bad)
sbb
ins
or
outs
mov
repnz
js
or
lds
adc
and
test
lea
inc
mov
ins
sbb
(bad)
mov
xor
cld
pop
(bad)
jmp
xlat
jp
cli
in
pshufw
jns
sbb
inc
xchg
enter
popa
push
and
sub
inc
leave
(bad)
call
dec
push
fcomp
sbb
adc
mov
jbe
adc
nop
mov
add
push
hlt
push
fidiv
sti
imul
jno
js
mov
or
or
gs
neg
xchg
push
setae
je
xchg
aas
mov
idiv
enter
xor
inc
retf
sbb
shl
test
add
xchg
mov
adc
out
jmp
xor
popa
sbb
mov
push
mov
xor
pop
das
push
mov
in
(bad)
mov
push
loope
adc
imul
adc
dec
ficom
daa
adc
jae
call
std
pop
push
jle
and
adc
je
std
and
in
mov
cmps
nop
mov
push
in
sub
repz
test
jle
cmps
imul
adc
loop
add
test
add
nop
leave
or
jmp
cmp
dec
scas
and
movs
mov
out
and
movs
in
in
pop
leave
inc
adc
sti
cdq
xchg
adc
movs
in
dec
add
test
jmp
arpl
and
std
cwde
push
movs
cmp
aad
in
test
mov
inc
in
sbb
(bad)
cmp
adc
lock
nop
pop
fsubr
sub
(bad)
and
pop
into
mov
pop
jmp
or
jnp
mov
ffree
in
push
or
adc
jl
out
clc
in
fist
in
setbe
jmp
adc
js
or
(bad)
test
(bad)
push
fcomp
jns
push
les
imul
add
push
or
pop
adc
clc
ss
pop
fisttp
push
inc
outs
fisub
into
or
xlat
rcl
std
adc
dec
shufps
loop
lods
xlat
jle
icebp
outs
add
mov
and
outs
imul
and
les
inc
sub
add
sub
sub
sbb
dec
mov
dec
(bad)
int3
retf
cmp
rcl
iret
adc
and
add
adc
jg
jo
adc
lods
pop
(bad)
xlat
push
and
xchg
push
adc
mov
sub
fidivr
add
fcmovb
pop
or
out
pop
and
jno
test
std
gs
stos
js
fistp
div
fwait
je
mov
cwde
dec
lock
std
mov
mov
and
ss
neg
call
repnz
arpl
data16
or
imul
cmps
push
retf
out
aas
sbb
movs
jmp
stc
fistp
nop
rol
dec
js
mov
in
mov
mov
outs
call
(bad)
test
cmp
dec
sbb
sbb
fadd
outs
push
out
js
addr16
mov
push
shl
adc
jb
mov
mov
push
cmc
add
or
dec
(bad)
ss
push
mov
xlat
call
bound
fistp
adc
mov
pop
lods
or
sub
in
jle
in
pop
sub
mov
test
ss
dec
fisub
jle
push
inc
mov
cli
(bad)
mov
xchg
rol
iret
stos
adc
je
adc
sub
mov
add
inc
das
mov
cmp
mov
jp
mov
pop
cmp
pop
push
ds
shl
icebp
(bad)
retf
mov
inc
cmps
xchg
xor
aaa
xlat
sub
mov
push
sbb
jo
adc
push
ins
ins
pushf
int
retf
mov
cmp
add
pop
or
dec
xchg
test
cmp
repz
xor
xor
cmp
sahf
cmps
xchg
jecxz
xchg
mov
add
cmp
cmp
and
mov
loope
into
xor
bound
lds
jno
lods
jno
sub
fstp
xor
mov
leave
hlt
loop
clc
adc
mov
call
mov
in
cmp
add
dec
lods
and
lahf
loope
or
cmp
(bad)
mov
jae
xor
xchg
xor
jg
lds
rcl
rcl
enter
enter
pinsrw
cs
hlt
jno
repnz
add
cmc
mov
imul
lds
(bad)
xlat
xchg
xchg
xlat
pop
push
in
retf
pop
mov
push
bound
les
mov
mov
mov
add
xor
mov
or
dec
jp
nop
sahf
inc
add
in
adc
xlat
sbb
je
lods
std
dec
or
xor
fdiv
add
jmp
call
scas
(bad)
xchg
push
xor
daa
les
cmp
dec
pop
stos
mov
xchg
icebp
imul
sbb
retf
sub
xchg
lea
int3
xchg
jg
inc
mov
dec
push
xor
sbb
xchg
jbe
jne
mov
add
fcmovu
dec
test
in
xor
icebp
jne
mov
mov
outs
cdq
xadd
call
mov
inc
inc
in
jnp
bnd
and
clc
and
sub
sbb
aaa
cmp
jecxz
fadd
loopne
in
test
sub
dec
and
inc
cs
bound
mov
(bad)
shl
add
imul
cs
mov
jbe
push
aam
lds
(bad)
imul
jae
gs
shl
sub
push
popf
mov
pop
sbb
inc
test
pop
cld
icebp
shr
and
mov
test
ret
out
ins
fild
pop
inc
call
div
jmp
push
rcr
push
sub
test
jb
push
cmc
fcmovnb
mov
lods
or
and
adc
(bad)
jb
(bad)
push
sbb
pop
or
enter
ret
pminsw
out
call
out
jp
sbb
xor
mov
in
ror
ja
add
fs
pushf
lea
imul
loope
mov
xchg
in
enter
and
push
sbb
mov
leave
add
ins
mov
movs
aas
pop
out
cdq
clc
xchg
dec
movs
enter
add
dec
(bad)
push
ja
pop
iret
mov
shl
pushf
daa
retf
daa
sub
cmp
sbb
dec
dec
push
inc
sbb
and
test
dec
sahf
sahf
enter
add
mov
pusha
pop
loopne
enter
push
dec
pusha
inc
retf
adc
xchg
inc
cmc
fucomip
ret
in
les
push
xchg
and
int3
rol
aam
push
xor
jbe
push
pop
movs
adc
(bad)
fwait
lods
or
fsub
push
mov
jo
fimul
xchg
cli
aam
dec
(bad)
inc
retf
call
in
push
movs
daa
pop
cld
test
xchg
adc
int
fidivr
and
test
and
enter
pop
push
mov
(bad)
imul
adc
add
lods
dec
cmp
iret
dec
xchg
rcr
pop
jg
(bad)
iret
adc
and
or
push
mov
clc
pusha
fwait
outs
cld
pop
hlt
icebp
pop
in
jne
add
push
push
arpl
push
fcom
push
fmul
inc
adc
scas
repz
loopne
fnstsw
xchg
loope
dec
mov
dec
bound
les
enter
push
stos
sbb
pop
dec
aam
dec
(bad)
xchg
pop
mov
jge
and
add
sub
rol
mov
mov
imul
and
push
adc
hlt
xchg
ins
adc
sahf
xor
mov
mov
outs
and
lds
and
arpl
pop
pop
cmp
sub
push
hlt
mov
(bad)
iret
mov
lds
jo
mov
dec
xchg
xor
mov
hlt
daa
pusha
into
pop
mov
(bad)
outs
sbb
idiv
mov
or
cmp
mov
and
xchg
aas
call
add
dec
cmp
jecxz
pop
push
pop
cmps
inc
cmp
pushf
std
jno
jne
cli
mov
pop
fstp
push
mov
jae
addr16
add
fsubr
and
cmp
dec
inc
(bad)
mov
jne
add
dec
xor
and
mov
arpl
fild
adc
pusha
ds
mov
mov
adc
mov
lods
inc
inc
and
push
cmp
mov
mov
jl
adc
stos
fcom
push
add
sbb
xchg
lods
rcr
or
lods
sar
pop
pop
sub
add
push
das
arpl
popf
frstor
mov
or
and
add
pop
outs
das
out
inc
xor
dec
cli
jl
push
add
sbb
jecxz
gs
mov
inc
pusha
shl
push
adc
and
xchg
(bad)
(bad)
xor
pop
and
(bad)
icebp
sti
mov
jecxz
inc
and
sub
jbe
in
xor
stos
arpl
call
enter
pusha
mov
not
jecxz
das
cwde
xor
dec
jge
ins
add
mov
repz
into
cmp
fwait
push
cli
push
push
test
mov
pop
popa
movs
jp
popf
jmp
aam
arpl
dec
push
xchg
out
push
mov
cld
add
sbb
mov
call
popf
adc
(bad)
lea
sub
inc
(bad)
push
std
repz
les
hlt
cs
xor
je
ds
inc
rcl
shr
jns
aam
es
pop
push
sub
lea
push
mov
(bad)
popa
popa
xchg
(bad)
mov
ins
or
mov
adc
xchg
pop
loope
mov
add
repnz
inc
inc
nop
and
xchg
or
sub
cmps
int3
sub
xchg
sar
pop
std
adc
or
or
mov
fmulp
pop
scas
mov
(bad)
movs
idiv
out
sub
retf
loopne
movs
and
xchg
dec
lods
cs
jo
push
stos
adc
mov
in
or
jbe
fiadd
call
fldcw
mov
inc
sub
retf
cmp
clc
shr
shr
cmc
addr16
and
pop
ja
sbb
repz
and
test
xchg
imul
jle
or
fcom
or
popa
sub
add
ins
(bad)
loope
sbb
sub
fidivr
or
test
pusha
inc
cmps
mov
push
xchg
cmp
adc
mov
adc
sub
pop
jne
cmp
cli
popa
stc
fnstsw
movs
mov
xchg
fwait
in
mov
sbb
push
aas
pop
mov
js
and
retf
or
cmp
sbb
fstp
repz
mov
add
fistp
jl
bound
js
mov
xchg
inc
push
lods
fimul
retf
stos
push
mov
jb
pop
dec
or
xchg
xlat
dec
add
xlat
mov
mov
inc
fidiv
xchg
sbb
mov
cdq
or
call
mov
mov
inc
jg
add
mov
outs
test
cmp
rol
xchg
out
jo
fadd
std
gs
and
lods
mov
jmp
sub
fcomp
inc
test
fs
jo
add
or
push
pusha
pop
dec
mov
jne
cmc
jl
jmp
or
inc
inc
iret
in
stos
fs
push
xor
cmp
fcmovb
jne
loope
jmp
pop
scas
push
loop
out
pop
fadd
and
enter
and
std
enter
pop
stos
jns
dec
icebp
(bad)
push
dec
sub
adc
mov
aad
ins
fwait
and
ja
addr16
jmp
and
adc
dec
outs
test
call
sub
popf
ss
pop
aaa
enter
add
stos
sbb
cmc
icebp
inc
test
ret
repnz
mov
and
cwde
push
stos
retf
sub
test
dec
mov
mov
adc
push
cmp
mov
jns
cmp
aas
add
xchg
or
dec
xchg
sub
mov
sub
(bad)
push
(bad)
sbb
push
push
into
dec
xchg
aam
retf
call
out
mov
scas
sub
call
cmp
mov
aam
adc
or
mov
icebp
xchg
lds
dec
xchg
and
cmc
push
pop
lahf
adc
jne
(bad)
mov
test
mov
rcr
xlat
add
arpl
clc
ret
mov
out
and
pop
jge
sub
mov
or
and
mov
jae
fst
inc
pop
jns
js
mov
daa
sbb
jb
inc
adc
fmul
pusha
repnz
jo
or
fdiv
std
sub
inc
push
add
sub
test
push
nop
adc
and
(bad)
pop
mov
rcr
pop
popf
xor
popa
mov
mov
mov
pusha
dec
pushf
(bad)
xchg
push
sub
push
adc
dec
pop
hlt
sbb
shl
or
ja
lock
pop
and
adc
or
xor
jl
mov
mov
mov
pop
jl
mov
mov
dec
(bad)
push
pop
loope
iret
stos
leave
rcl
mov
movs
rcr
aas
push
sahf
adc
mov
pop
cmp
push
mov
test
in
fist
fldcw
outs
add
xchg
cdq
sub
xor
fldcw
sub
lahf
sbb
inc
pop
cmps
imul
aam
sbb
or
and
rcl
(bad)
and
pop
sbb
cmps
dec
jg
xor
add
xor
pop
cmp
ss
pop
push
inc
mov
xlat
and
aaa
scas
ss
pop
retf
arpl
push
test
repnz
lods
jecxz
mov
rcl
cmp
loop
addr16
popf
mov
retf
and
xor
movs
xchg
inc
icebp
in
cmc
mov
dec
mov
dec
test
add
xor
mov
clc
cmps
or
inc
inc
outs
xchg
add
sbb
stc
fwait
cmp
add
(bad)
pop
cli
cmp
mov
arpl
or
sub
mov
pop
out
adc
push
sub
pop
jne
jg
cmps
dec
ins
ror
push
stc
rcl
(bad)
or
call
out
jge
fucomip
mov
je
in
or
fild
pusha
fwait
jae
mov
enter
daa
gs
xchg
js
je
fsub
pop
(bad)
sbb
dec
call
adc
shl
sub
neg
retf
stos
imul
xor
fcmovbe
mov
aaa
push
fabs
adc
mov
cmps
mov
nop
xor
jnp
stc
imul
lea
jp
mov
push
add
scas
clc
push
xchg
mov
push
popa
cmp
aas
arpl
push
mov
jecxz
xor
push
cmp
push
js
iret
cmp
ret
pop
jmp
test
notrack
inc
repnz
jmp
xchg
lea
push
and
mov
lods
sti
xchg
add
sub
inc
and
ds
imul
cwde
jb
add
sbb
adc
jb
popa
cmps
test
rol
pop
fwait
leave
xor
xchg
or
sub
mov
mov
xor
xor
bound
out
inc
mov
add
push
loope
mov
inc
repz
call
mov
cmp
fadd
stos
iret
out
cmp
lds
ficom
mov
cdq
jecxz
add
mov
add
out
loope
das
add
sbb
out
pop
and
nop
xchg
ins
popf
cmp
(bad)
dec
es
pop
ins
push
fidiv
lods
rcr
dec
add
lahf
test
int3
inc
(bad)
mov
ins
ss
inc
sbb
imul
mov
push
js
or
je
movs
sub
xor
in
and
retf
(bad)
fcmovnbe
retf
hlt
xlat
inc
fcom
push
jns
cld
mov
call
xchg
adc
(bad)
js
mov
(bad)
out
(bad)
pop
movs
pop
mov
hlt
mov
cdq
add
or
xor
inc
mov
mov
test
push
jg
in
lds
push
mov
dec
push
ret
(bad)
(bad)
loopne
(bad)
loopne
inc
sbb
inc
out
(bad)
out
mov
jg
ficomp
mov
or
cvtpi2ps
add
mov
dec
es
lods
stos
push
(bad)
cwde
in
inc
or
adc
lock
lods
cmps
les
mov
push
pop
(bad)
popa
aad
or
cmps
jp
or
mov
jne
add
xchg
jo
dec
sub
sbb
xchg
(bad)
popa
add
xchg
sub
and
add
shr
xchg
jmp
imul
das
rcr
(bad)
push
cmp
aad
jmp
nop
ss
inc
jmp
aad
jns
jge
ucomiss
ret
dec
cmp
and
jp
add
lds
popf
(bad)
frstor
add
imul
push
(bad)
fwait
ret
and
out
mov
pop
imul
cmp
aas
xchg
or
out
push
mov
mov
mov
in
jno
mov
clc
adc
or
int3
mov
and
mov
aas
mov
ret
xchg
mov
pop
lock
(bad)
or
lods
mov
jmp
push
jle
push
jno
movs
scas
sub
and
mov
js
add
test
cmc
jbe
jmp
fidiv
cmp
sub
ror
int
jb
cld
push
sub
cmp
jl
ja
xchg
jb
pop
sub
(bad)
in
into
cli
cmp
rol
in
mov
movs
jno
add
scas
xor
push
adc
and
gs
int3
cld
or
and
jle
call
sub
out
and
and
aaa
aad
sub
jl
sub
mov
mov
movs
pop
aas
add
out
(bad)
hlt
jecxz
mov
jae
sbb
xlat
xchg
sbb
ja
icebp
cwde
push
bound
jnp
rcl
adc
jmp
out
xchg
stc
fadd
daa
lahf
xchg
rcr
ins
jle
xchg
test
push
scas
xlat
mov
cmp
dec
popa
movs
je
fwait
or
out
adc
sub
dec
inc
mov
inc
push
push
sub
mov
lea
mov
jbe
dec
(bad)
lea
mov
je
pop
xlat
aas
in
stos
pop
xchg
cld
pop
ret
cmc
pop
leave
(bad)
sahf
rcl
cmp
jle
cmp
mov
adc
xor
pop
mov
not
jnp
das
sbb
pop
adc
nop
out
mov
push
adc
push
adc
push
(bad)
mov
int
aaa
adc
add
add
mov
mov
sbb
pop
imul
and
rcl
mov
and
std
stos
bnd
aas
lods
loop
sbb
sbb
sti
imul
(bad)
fistp
jno
mov
nop
mov
movs
fsubr
cwde
mov
xor
push
push
jns
xchg
or
mov
(bad)
icebp
push
ds
pop
adc
out
daa
push
les
stos
loopne
arpl
xor
stc
cmp
loop
push
stc
pop
aad
sub
adc
inc
lea
pop
adc
ds
cmp
pop
sbb
xor
js
xchg
mov
dec
dec
or
iret
sbb
ins
xor
push
sbb
cmp
pusha
sahf
pusha
xor
sub
mov
jge
xchg
call
icebp
ins
(bad)
out
inc
int3
and
add
movs
fsub
rol
push
mov
xor
or
xor
add
xchg
jle
or
ins
popf
sbb
ds
push
fcmovnb
push
xor
fidiv
fcomip
fwait
mov
sar
lock
iret
imul
popa
test
imul
popf
ins
inc
imul
add
xchg
mov
fcmovb
pop
adc
(bad)
adc
mov
fstp
jge
cs
(bad)
sub
and
leave
out
stc
cli
(bad)
retf
jo
es
adc
adc
xor
dec
xchg
jmp
push
fcom
xor
in
test
aaa
push
ss
stos
out
inc
or
mov
push
dec
mov
es
xchg
in
jnp
or
lea
enter
out
push
jae
mov
sti
loope
rcl
pusha
jb
aam
(bad)
js
gs
xchg
retf
cmp
or
and
fchs
inc
mov
je
pop
xor
js
cmps
mov
ret
cmp
mov
mov
cmps
clc
inc
xor
jg
js
pop
ins
mov
ret
or
inc
pop
inc
push
push
adc
pushf
mov
mov
lea
sahf
or
inc
scas
adc
xor
enter
xor
push
cs
jns
cmp
outs
sti
push
out
pop
fcom
jecxz
fisub
sub
icebp
bnd
sbb
cmps
jp
xor
aam
xlat
sahf
pop
jmp
(bad)
cli
adc
aam
scas
push
sar
dec
mov
(bad)
inc
xchg
push
push
jno
js
fucomp
mov
fdiv
push
js
or
dec
arpl
test
push
and
ds
dec
jp
cld
repnz
and
inc
cmp
mov
sub
and
pushf
inc
fnstsw
shl
scas
aad
cmp
scas
into
sub
mov
jns
dec
out
cmp
bnd
(bad)
in
je
iret
mov
dec
xchg
xchg
xchg
adc
rol
jg
fidiv
pushf
dec
mov
aad
sub
rcr
(bad)
sub
out
add
inc
out
sbb
cwde
div
mov
sbb
sbb
push
into
mov
enter
iret
push
outs
cmp
retf
xlat
pop
dec
arpl
sbb
mov
pop
(bad)
outs
dec
xchg
sahf
inc
pusha
xor
sbb
adc
pop
sbb
inc
rcr
jo
outs
pop
rcl
push
movs
test
popa
call
push
cmp
ror
dec
push
fisubr
dec
cmc
addr16
push
push
mov
(bad)
repz
stos
sub
clc
inc
lock
jo
add
(bad)
(bad)
call
cmp
and
inc
stos
int3
push
inc
mov
stc
jg
sub
imul
mov
inc
imul
xchg
and
outs
or
inc
mov
fbld
test
outs
aam
test
add
xor
jb
xchg
pop
lds
xchg
shl
jl
das
mov
pop
or
aas
mov
inc
fmul
or
cmps
mov
pop
and
imul
call
push
xor
pushf
push
xchg
push
sar
mov
cmc
dec
(bad)
dec
or
xchg
xchg
ret
xchg
lea
test
mov
bnd
pusha
xor
sub
inc
(bad)
cmps
jb
mov
enter
add
ss
std
mov
adc
retf
fs
mov
push
(bad)
inc
fisubr
mov
cmp
(bad)
jo
popa
mov
jmp
adc
out
xor
jg
ret
sbb
aad
inc
jmp
jecxz
add
xor
movs
xchg
fs
mov
sbb
push
aad
popa
imul
and
and
jns
sar
arpl
adc
sub
leave
push
mov
test
int
mov
lods
cli
aaa
idiv
xor
mov
xchg
icebp
fnstsw
jmp
dec
mov
pop
adc
jns
xchg
pop
jnp
push
fild
ss
out
movs
add
dec
outs
ja
test
fwait
add
jbe
jecxz
or
pop
xor
imul
call
stos
jo
cld
jns
push
repz
and
mov
fwait
call
adc
stos
(bad)
adc
or
int
jno
add
mov
enter
cmps
xchg
xor
xchg
xchg
in
add
add
jmp
ds
cmp
inc
push
outs
dec
and
mov
pcmpeqw
dec
dec
cmps
fisttp
mov
or
or
and
jno
add
jmp
add
lods
adc
call
in
xchg
dec
stc
ret
xor
cmps
adc
push
fidiv
int
jl
ror
xchg
and
mov
sub
inc
test
ds
sti
sbb
cmc
add
and
jns
aam
lahf
mov
loope
mov
push
mov
outs
les
lds
mov
(bad)
mov
mov
xlat
mov
pop
arpl
pop
fidiv
imul
daa
out
dec
test
and
scas
mov
cmp
pop
cdq
mov
scas
xlat
xor
rcl
push
movs
and
cmp
mov
in
cmps
adc
push
mov
xchg
mov
retf
in
inc
cmp
stos
push
jns
sbb
movs
lock
imul
push
in
repnz
pop
xor
mov
fcomp
push
inc
dec
mov
or
or
test
pop
push
sbb
pop
iret
xor
pushf
pushf
mov
pop
iret
xor
aaa
fistp
pop
mov
mov
mov
out
imul
cmp
jne
in
outs
or
lods
push
je
cmc
retf
bound
push
pop
cs
cld
xchg
(bad)
fcomp
les
add
mov
ins
push
jle
jl
adc
mov
push
inc
fcmove
sub
pop
stos
mov
icebp
(bad)
jne
cmp
sub
xchg
sub
pusha
shr
ss
movs
push
add
pop
loop
and
(bad)
xchg
iret
pop
lock
sub
outs
sbb
mov
loop
cmp
clc
xor
lods
ins
loopne
cmp
leave
inc
ins
mov
adc
(bad)
mov
xchg
add
stos
jae
adc
lods
xor
mov
mov
sub
and
mov
shl
dec
(bad)
int
outs
mov
outs
rol
pop
js
inc
sbb
inc
dec
es
xchg
push
add
out
xor
mov
xor
je
inc
push
jmp
js
cdq
sbb
sbb
mov
(bad)
(bad)
(bad)
sub
jbe
mov
sahf
cdq
data16
in
mov
sub
imul
jecxz
mov
xor
out
call
(bad)
dec
das
mov
outs
ins
lahf
xlat
iret
xchg
or
cmp
and
mov
out
nop
dec
ins
jbe
dec
shl
pushf
inc
add
xchg
cmp
ja
mov
inc
sbb
ds
clc
sub
mov
(bad)
(bad)
pop
aam
(bad)
dec
xlat
jnp
mov
adc
jp
shl
push
clc
mov
(bad)
(bad)
dec
int3
or
or
out
(bad)
scas
mov
daa
cmp
sub
jle
call
xor
xor
push
fdivrp
mov
shr
push
(bad)
scas
inc
mov
mov
xor
fstp
movs
and
ins
sbb
push
lods
jae
dec
sub
pop
jne
shl
push
cs
and
mov
inc
popa
pop
sar
inc
out
loope
loop
jae
(bad)
push
in
pop
(bad)
imul
jg
sbb
xor
shl
stos
outs
xor
xor
mov
jns
pop
test
call
gs
(bad)
jmp
pop
imul
xor
retf
lods
into
aaa
and
inc
and
aad
sub
inc
sub
pop
xor
and
out
pop
add
fcomp
pslld
outs
dec
or
fistp
inc
and
jae
dec
cmp
pop
jns
or
adc
adc
cmp
icebp
cmp
outs
cmps
movs
or
adc
mov
mov
popa
popf
sti
xchg
test
dec
shr
sub
int
pop
sub
int3
std
xchg
pop
push
push
add
shr
jbe
xor
aad
test
xor
cmp
adc
jecxz
dec
push
push
mov
aad
mov
dec
and
inc
push
jge
loop
(bad)
mov
and
stc
mov
fild
stos
xchg
sbb
fbld
cmp
sbb
test
mov
adc
xchg
cmp
pop
pop
sub
test
sub
cdq
movs
aad
xor
dec
sbb
iret
cmp
mov
add
outs
scas
cmp
push
xlat
lahf
jl
xchg
jnp
cmp
mov
add
in
js
mov
push
stos
xchg
fsubp
xor
mov
xor
push
lea
cli
push
mov
stos
or
cmc
lods
dec
retf
mov
inc
imul
xor
bound
(bad)
pusha
nop
das
pop
push
cld
adc
cmp
mov
int
movs
imul
arpl
dec
push
ss
sub
movs
std
ins
jecxz
cmp
xor
jo
push
loop
mov
xor
jo
jae
push
push
cmp
sub
dec
mov
mov
call
popa
dec
les
cmps
(bad)
icebp
mov
sub
xor
movs
inc
add
shr
test
pop
jne
out
sbb
xchg
bound
out
dec
jge
or
mov
pop
popf
jle
and
add
(bad)
out
clc
pop
add
and
or
mov
pop
xchg
cmp
inc
sbb
out
loop
xchg
cmps
leave
pop
and
pusha
dec
jg
mov
jg
pop
loope
imul
leave
fcomp
xchg
sub
or
rcl
cdq
daa
cmp
movs
pop
jp
imul
retf
sbb
xor
fwait
and
mov
repnz
pop
sub
in
lods
push
fwait
(bad)
outs
shl
push
test
add
xchg
adc
lods
and
mov
mov
out
les
pop
in
jnp
imul
hlt
nop
add
or
and
adc
xchg
int3
jmp
mov
sbb
test
lods
xor
mov
pop
cld
lds
push
dec
ret
dec
das
mov
lods
movs
or
or
xchg
dec
out
dec
ss
pushf
das
mov
mov
add
loopne
sub
mov
jnp
adc
retf
das
push
push
sub
pop
outs
inc
pop
jnp
in
leave
sub
out
sub
aaa
rol
in
cmp
cmps
ins
xchg
ret
and
das
out
cmp
scas
rcl
repnz
fadd
scas
and
xor
outs
jb
xchg
(bad)
in
iret
fcomp
push
(bad)
push
stos
icebp
sti
mov
dec
movs
out
push
rcl
popa
cmp
dec
mov
mov
ins
inc
jae
jne
adc
scas
adc
test
cld
fnstenv
pop
push
jns
popf
out
imul
and
sub
xchg
loop
or
std
cmps
push
out
push
mov
aaa
cld
cmp
jmp
pop
or
sti
xor
cmp
iret
lahf
or
stos
outs
jns
mov
push
xchg
lods
stos
push
test
shr
enter
sub
movs
add
aam
aad
imul
test
enter
ret
std
xchg
and
leave
arpl
(bad)
(bad)
loope
xor
ss
add
(bad)
mul
jbe
add
xor
sbb
sub
cmp
in
outs
out
mov
cmp
(bad)
mov
icebp
in
and
ffree
pop
push
jl
sbb
dec
mov
cmp
push
dec
test
sbb
inc
push
sub
sbb
pop
cmps
vmwrite
iret
jb
xor
aaa
and
loopne
pop
pop
cmp
test
sub
mov
hlt
ins
cmp
mov
cmp
pop
(bad)
cmp
jno
repz
pop
jg
pop
push
mov
inc
push
push
add
push
mov
ja
push
inc
or
data16
jecxz
xor
cmps
stos
test
mov
mov
test
inc
inc
neg
ins
popa
push
movs
cmc
sbb
mov
adc
cmc
fiadd
ja
mov
cmp
inc
jb
mov
push
loop
push
ret
mov
jg
and
mov
bound
pop
imul
nop
jne
clc
fisubr
mov
lods
push
addr16
mov
pop
add
fs
inc
jae
ins
test
fiadd
pop
push
jae
mov
or
repnz
jmp
ss
pop
jecxz
push
and
das
sbb
repnz
je
dec
call
fisttp
stos
lea
lahf
xchg
push
gs
icebp
test
mov
xor
xchg
ret
jnp
pusha
push
(bad)
scas
sbb
and
inc
popf
sbb
test
mov
push
mov
mov
add
mov
fwait
es
outs
inc
dec
sahf
dec
xor
sbb
cmp
call
arpl
out
das
adc
or
sahf
loope
repz
mov
in
and
inc
int
fisubr
(bad)
shl
cwde
retf
adc
jg
cmp
adc
fidiv
clc
push
push
ret
mov
mov
pop
fild
jbe
mov
mov
sbb
fucom
push
push
jle
xor
icebp
inc
loopne
pop
int3
mov
pop
mov
in
mov
retf
mov
mov
in
(bad)
sbb
sahf
mov
xlat
daa
or
jle
or
or
inc
mov
daa
sahf
stos
push
jge
cld
jle
iret
lahf
xlat
lods
in
shl
adc
fbstp
mov
and
adc
cwde
xor
fcomp
dec
xchg
jmp
retf
sbb
or
lods
(bad)
push
ja
sub
aad
or
mov
sahf
sbb
call
xor
movs
fwait
mov
xchg
mov
pop
add
mov
jp
icebp
loopne
jl
popf
fsincos
dec
movs
and
int3
test
hlt
cmc
gs
lds
sbb
jb
retf
cmp
pop
inc
fiadd
mov
jl
(bad)
dec
jl
add
mov
ss
in
sbb
shl
hlt
lods
push
scas
ja
dec
push
push
(bad)
scas
pop
add
and
cld
or
mov
xchg
inc
enter
and
outs
push
push
adc
pop
cmp
imul
loop
cmp
or
pop
sbb
inc
jmp
pushf
ret
jg
pop
or
out
retf
push
mov
jmp
mov
movs
inc
mov
jl
push
movs
lods
test
fbld
push
sbb
call
inc
out
adc
jne
dec
mov
fdivr
out
cld
gs
cs
dec
sbb
or
out
cmp
shr
dec
cmp
scas
sahf
das
dec
add
(bad)
sbb
daa
popf
call
jmp
xor
shl
push
push
mov
fld
fcomp
push
or
ror
cmps
outs
mov
bound
and
cld
cmp
push
or
pop
retf
add
nop
pop
mov
vmovss
enter
xlat
inc
mov
jecxz
jp
stos
and
shl
scas
movs
lock
inc
fnstenv
sti
mov
push
or
xchg
mov
add
retf
sar
add
ds
(bad)
push
(bad)
push
int3
push
lods
pop
jno
inc
sub
add
xor
dec
xchg
repnz
shr
mov
imul
scas
add
pop
xchg
and
jp
cmp
inc
fsub
movs
ins
add
adc
mov
cmp
adc
scas
mov
mov
cmp
or
mov
movs
mov
out
sti
mov
push
(bad)
repz
cmc
jmp
bound
scas
sbb
sub
cli
in
or
ins
cmp
dec
inc
lea
inc
mov
lock
xor
dec
lds
or
test
xchg
mov
sbb
sar
sub
dec
pop
sbb
xchg
mov
lods
rol
test
dec
adc
mov
(bad)
mov
pop
mov
out
ds
repnz
loop
mov
or
xchg
jae
xlat
pop
loopne
mov
inc
inc
sbb
dec
scas
xor
aas
push
jns
push
test
data16
test
jecxz
cmp
mov
push
ja
mov
dec
mov
fstp
jno
jg
je
test
nop
or
cmps
iret
daa
cmc
call
pop
pop
add
outs
dec
leave
inc
in
dec
test
or
es
or
xchg
test
stos
push
fdivr
mov
mov
(bad)
cmp
out
rcr
jle
arpl
dec
sub
push
mov
leave
mov
and
mov
out
xor
jge
mov
xchg
add
mov
ret
in
cld
fwait
mov
js
fisttp
sub
aas
lods
fadd
xchg
int3
sub
popa
sbb
out
mov
pop
adc
imul
mov
pop
dec
sub
mov
out
lds
pop
mov
into
stc
stos
mov
jne
or
mov
cmp
and
xor
ret
push
sbb
aas
lahf
sbb
dec
scas
and
or
int
push
mov
fbstp
xor
dec
mul
xor
rcl
adc
jl
pop
jbe
sub
add
add
ins
(bad)
sbb
cmps
jae
lds
push
adc
lock
out
mov
mov
pop
sbb
dec
cli
stos
aaa
gs
xchg
lock
push
out
xor
cmp
push
mov
or
pop
(bad)
pop
jb
dec
stc
mov
das
(bad)
js
outs
hlt
mov
push
nop
(bad)
fbstp
pop
inc
ret
xor
int
not
pushf
shl
lds
sahf
adc
inc
sub
pop
lock
fst
jmp
mov
nop
push
push
call
ins
in
push
dec
(bad)
and
xor
cmp
fiadd
pop
xlat
jne
jnp
jl
adc
out
ins
pushf
and
dec
sti
cld
sbb
pop
jo
xchg
aam
fistp
outs
push
add
add
data16
mov
aad
loop
es
fwait
in
dec
fst
xchg
and
popf
aas
inc
sub
scas
push
add
or
enter
xchg
and
pop
shl
jg
pop
push
stos
ss
push
outs
sbb
inc
repnz
jae
jb
ss
sub
xor
xchg
iret
mov
fs
enter
mov
sbb
mov
mov
dec
outs
add
in
cmp
gs
fiadd
xchg
aas
repnz
or
or
pop
cmc
dec
jno
das
leave
int3
jb
inc
sub
cmc
fsubr
jo
fdiv
push
sbb
xor
dec
es
loop
popf
jmp
stc
mov
lds
retf
lds
pop
cmps
xchg
jg
js
mov
fst
sbb
bts
xor
sar
mov
retf
std
out
ins
(bad)
mov
pop
xor
aad
jecxz
daa
das
jecxz
mov
retf
pop
into
mov
std
into
ins
jecxz
mov
ror
jno
pop
(bad)
cdq
mov
push
frstor
adc
ja
add
(bad)
fldcw
pushf
pop
ds
das
scas
inc
jbe
pop
sub
jnp
or
inc
jb
mov
cs
mov
push
adc
lods
xchg
push
rol
add
loop
push
dec
xlat
mov
cmps
sti
adc
pop
mov
loop
retf
add
add
xchg
mov
inc
sub
cmp
adc
in
mov
packuswb
sub
dec
pop
push
loope
add
(bad)
sbb
push
das
(bad)
dec
cmp
inc
xor
sti
hlt
xchg
or
cdq
(bad)
ds
daa
cmp
cli
dec
mov
xchg
aas
or
xchg
inc
mov
movs
int
ror
clc
dec
(bad)
and
xor
cmp
mov
iret
dec
in
mov
mov
xor
and
push
fild
adc
rcr
loopne
in
inc
lock
jg
mov
ins
jp
fild
std
in
cdq
pop
fild
gs
mov
fstp
cmp
pop
pop
adc
aad
mov
loope
mov
cmp
out
jg
mov
sbb
repnz
repz
iret
repnz
xor
fwait
out
cmp
jecxz
sbb
cld
fnsave
push
mov
(bad)
stc
stos
push
jbe
repnz
ret
cmps
mul
jmp
jno
add
shl
into
(bad)
push
(bad)
mov
add
adc
aam
jmp
xor
cmp
push
in
inc
cmp
arpl
mov
jge
xlat
sub
(bad)
pop
xchg
movs
nop
mov
pop
pop
dec
xlat
add
inc
add
cmp
xchg
(bad)
sar
push
sti
or
daa
scas
lds
and
leave
xlat
out
popf
cmp
cs
and
pop
xlat
sbb
add
push
xchg
adc
and
inc
fimul
cmp
or
xchg
test
icebp
ds
fs
addr16
fmul
aad
gs
mov
adc
inc
imul
adc
lds
stos
xchg
dec
xchg
fnsave
rol
xlat
outs
fisub
outs
sub
push
mov
add
cmp
jnp
pop
(bad)
fistp
mov
dec
es
dec
neg
xchg
mov
lahf
jno
in
dec
push
scas
cld
fcomp
mov
push
cmps
retf
add
cdq
sbb
out
stc
call
inc
mov
cmp
dec
cdq
jg
lods
adc
sub
push
repnz
ja
aam
adc
or
jle
or
(bad)
cdq
jno
aas
js
ficomp
pop
adc
fdivr
mov
sahf
in
(bad)
xor
xor
mov
sbb
jecxz
xchg
sub
mov
ins
mov
rcr
gs
lods
mov
dec
jno
retf
push
mov
and
outs
push
pop
jne
or
jbe
cmp
jecxz
push
jno
and
lods
cmp
cdq
out
inc
mov
movs
(bad)
sbb
aas
aaa
fmul
out
push
push
mov
jns
bnd
clc
xor
test
leave
jb
ds
add
scas
pushf
mov
lods
dec
loop
jb
out
pop
mov
jp
xchg
lock
or
xchg
cs
js
hlt
mov
mov
sbb
push
inc
out
nop
out
std
pushf
xor
dec
xchg
inc
cwde
pop
pop
xlat
call
pop
mov
cmp
in
mov
mov
mov
aaa
into
lods
pop
mov
lea
hlt
mov
pop
cmp
jg
nop
sbb
adc
aad
nop
push
pop
int
call
imul
jno
xchg
lds
cmp
(bad)
aas
das
inc
lods
push
test
int3
stos
jge
daa
jns
jge
fwait
sbb
call
(bad)
add
or
push
cmp
imul
shl
sti
xor
dec
(bad)
jl
xchg
add
mov
sti
data16
adc
popf
and
int3
cdq
pop
mov
fwait
pop
inc
cmps
clc
je
ds
or
imul
push
sub
jbe
cld
stos
mov
xchg
(bad)
in
cmps
je
mov
mov
mov
adc
dec
inc
sti
(bad)
aam
icebp
fld
fcom
jbe
ds
or
xchg
mov
outs
popf
scas
test
push
push
sub
js
lahf
xchg
icebp
pop
int3
jmp
arpl
pop
jge
mov
ret
dec
sbb
pop
sub
xor
mov
jns
pop
movs
(bad)
cmc
movs
xchg
(bad)
xchg
xchg
(bad)
xor
aad
pushf
cld
pop
scas
out
and
push
nop
fdivr
mov
xor
jb
xor
xchg
fucom
dec
push
sub
out
ret
mov
xor
jns
push
or
push
lahf
xor
mov
sbb
in
outs
or
fs
dec
jns
mov
pushf
rol
adc
jno
icebp
arpl
mov
lock
adc
jl
push
adc
adc
sub
mov
add
sub
add
jne
sub
scas
xlat
mov
out
push
adc
jae
aad
inc
icebp
aaa
loop
xchg
pop
leave
jne
xor
shr
out
jg
call
popf
add
push
ins
hlt
xchg
add
repnz
shr
xchg
and
push
xchg
mov
jae
clc
jp
fldcw
and
sahf
loope
push
push
bound
jb
jmp
sub
push
inc
jne
and
xor
loopne
cmp
fdiv
popf
mov
cwde
fdivr
adc
out
sub
jp
pop
mov
sbb
arpl
sbb
adc
fmul
pop
aaa
and
rol
(bad)
and
aaa
leave
mov
push
retf
xlat
add
mov
imul
out
aas
sbb
inc
mov
sbb
jne
bound
jle
mov
mov
cld
fmul
push
dec
popa
mov
cmp
jg
sbb
pop
xchg
sub
xchg
and
pop
and
pop
push
movs
jg
cli
fwait
into
push
fsub
jnp
cmp
xchg
sub
in
inc
iret
jnp
mov
inc
pop
pop
or
add
call
and
int
mov
and
jp
cld
mov
inc
scas
daa
and
fcom
jo
mov
jmp
fwait
add
shl
inc
mov
in
sub
loop
pusha
in
clc
rcr
push
hlt
push
mov
push
and
loopne
mov
pop
daa
mov
aad
xor
xor
jae
and
add
ret
fstp
lahf
mov
sbb
pop
push
sub
and
ret
cwde
call
dec
ds
sub
in
fstp
mov
imul
sbb
aam
fisubr
xchg
mov
sbb
pop
mov
cmp
sahf
clc
aam
rcr
ds
xor
and
rol
hlt
or
in
push
cmps
mov
jmp
ins
mov
cld
inc
stos
fdiv
in
mov
loopne
fnsave
fldenv
mov
pushf
jle
loop
xchg
add
cdq
enter
js
(bad)
in
int3
ret
dec
add
movs
jnp
fldcw
repnz
and
mov
push
push
jecxz
shl
out
(bad)
jmp
clc
(bad)
jle
mov
mov
cmp
sub
sub
jb
mov
in
mov
mov
xchg
or
xchg
jo
and
jae
aaa
cmc
cmp
add
push
iret
rol
pop
sub
jp
rep
mov
gs
leave
push
inc
pop
sub
adc
cmp
movs
and
push
in
pushf
pusha
dec
mov
push
push
or
or
adc
in
div
and
loope
and
aad
add
aas
add
xchg
movs
jae
sub
cmps
imul
adc
repz
pop
sar
repz
outs
fwait
test
xlat
jmp
or
pop
aad
sti
lds
push
inc
mov
repnz
sub
jmp
dec
xchg
xor
and
mov
sub
mov
outs
bound
push
je
les
push
jne
dec
jae
in
sbb
arpl
sar
jecxz
loopne
arpl
repz
loopne
adc
out
add
xchg
dec
out
mov
test
jo
sbb
pop
movs
scas
inc
mov
xor
add
pop
pop
or
jge
fnsave
jmp
mov
adc
cmp
jnp
mov
out
mov
scas
sub
sbb
popaw
mov
pop
and
sub
into
cmc
sub
jae
test
in
loopne
sahf
cmp
retf
push
inc
outs
push
jmp
inc
nop
bound
cwde
movs
scas
retf
out
icebp
or
mov
mov
or
sahf
test
clc
call
mov
xor
(bad)
fbld
idiv
sbb
enter
shl
xor
sbb
push
adc
xor
rol
cmp
mov
xor
mov
dec
lods
mov
in
out
(bad)
xlat
jle
xlat
aam
jmp
pop
das
xor
(bad)
adc
fbld
mov
(bad)
mov
lods
xor
jle
ror
and
fnstenv
sbb
push
iret
jecxz
fnstenv
scas
xor
dec
push
cs
(bad)
inc
ficom
mov
pop
enter
(bad)
cmp
scas
bound
nop
or
cmps
add
shl
aaa
test
in
and
outs
sub
pop
jne
shl
(bad)
push
test
mov
daa
mov
mov
stc
lods
fwait
mov
pop
or
dec
leave
pop
sbb
aam
jge
or
out
pop
jne
int
xlat
idiv
lea
push
outs
je
inc
std
fsub
inc
js
cmps
test
cmp
mov
and
mov
fs
sub
jne
mov
cmp
ror
rol
aam
stc
and
push
add
std
cmc
cli
xchg
fsubr
inc
dec
scas
push
adc
mov
data16
adc
xlat
jecxz
in
sub
cmp
aaa
adc
inc
or
jbe
jl
or
add
pop
mov
pop
dec
mov
scas
mov
mov
es
addr16
xchg
test
(bad)
or
dec
mov
test
add
jp
add
ins
inc
sahf
xor
mov
aaa
and
sub
inc
lods
es
out
jg
repnz
adc
loopne
jbe
or
out
sar
jp
or
push
xor
out
imul
cmp
mov
imul
mov
outs
(bad)
das
mov
daa
lods
mov
cmp
cli
js
loop
or
(bad)
and
(bad)
sub
and
adc
mov
add
or
jnp
cmp
(bad)
sub
adc
test
rcl
cmps
xchg
addr16
icebp
dec
and
cmp
nop
push
xchg
fwait
xchg
stos
cmps
hlt
add
ins
fs
lds
leave
adc
pushf
jp
mov
adc
fldcw
inc
pop
push
mov
sbb
pop
gs
mov
ror
scas
and
outs
adc
daa
jmp
in
movs
mov
xor
stc
je
mov
test
imul
xor
fisubr
and
in
push
inc
lds
ins
fnstenv
add
(bad)
scas
cdq
mov
ror
out
add
pop
retf
mov
loopne
cs
adc
mov
aaa
jo
cmp
(bad)
retf
cmp
pop
lock
inc
mov
or
adc
and
jmp
pop
popa
sbb
or
sbb
in
jmp
cdq
sub
int
frstor
cs
lahf
leave
inc
aaa
pop
push
mov
nop
js
push
cdq
fcmovu
adc
pusha
nop
jl
pop
mov
loope
sbb
mov
lods
pop
jl
movs
sti
ret
mov
or
fwait
push
adc
xor
xor
jae
cmc
push
or
pop
retf
xor
lock
xchg
pop
shr
adc
mov
and
jb
mov
jmp
inc
sbb
ret
rcl
or
sbb
push
xlat
ror
or
scas
dec
push
inc
xchg
inc
cmp
(bad)
adc
test
ret
cmp
in
mov
pextrw
dec
mov
jae
test
mov
mov
xor
cmps
inc
push
sahf
pop
add
mov
mov
(bad)
je
mov
pushf
popf
dec
inc
iret
jmp
std
loopne
(bad)
jmp
push
into
shr
xor
pop
jo
lock
loopne
and
add
pop
js
xor
(bad)
mov
mov
mov
sar
shl
sub
sub
pusha
pop
movs
mov
test
ret
fcmovu
call
test
pop
cmps
pop
jg
xchg
mov
sub
sub
jae
inc
and
jne
ret
mov
pop
aam
iret
aam
popa
push
retf
mov
mov
or
pushf
mov
stc
sahf
leave
or
shl
mov
and
out
adc
xor
(bad)
pop
pop
fsub
or
js
iret
pop
push
jmp
inc
push
mov
mov
bound
jno
dec
lds
cmps
push
cmc
adc
adc
xchg
jb
(bad)
add
out
pop
jns
mov
and
mov
jg
jp
icebp
icebp
into
(bad)
aas
dec
addr16
adc
fiadd
ins
lea
pop
into
cld
bound
sub
es
sahf
xchg
call
(bad)
repz
inc
lea
ja
into
mov
sbb
xchg
mov
xchg
call
sub
xor
ret
in
fwait
call
pushf
dec
xchg
sbb
mov
xor
in
jp
sub
in
jecxz
mov
adc
adc
cld
mov
(bad)
and
pop
int
cs
adc
icebp
inc
neg
add
repz
retf
out
mov
adc
jp
fild
sahf
sbb
fst
mov
in
mov
mov
pop
push
inc
adc
xlat
dec
jns
push
aam
popf
out
add
pop
jmp
xchg
cwde
stos
adc
shr
neg
jecxz
mov
push
movs
(bad)
jo
xchg
push
pop
push
pop
aas
cmps
imul
cmp
shl
pop
clc
iret
imul
mov
inc
or
into
jne
lahf
int3
scas
mov
dec
stc
ins
push
(bad)
mov
lahf
pop
mov
pushf
dec
sub
dec
or
ret
mov
stos
pop
dec
sbb
cmp
or
data16
jb
xchg
jg
mov
sub
mov
and
sbb
mov
pop
inc
outs
cmp
inc
outs
mov
pop
and
jno
out
(bad)
stc
je
mov
xchg
lock
jne
sbb
sub
push
sahf
div
dec
vphaddbd
mov
rol
xor
add
jo
sbb
xchg
ror
mov
sub
in
pop
shl
aad
std
gs
and
sbb
inc
dec
out
test
cmc
aam
test
pop
add
xchg
(bad)
sar
loop
adc
xor
and
xchg
xchg
adc
xor
int
mov
pop
out
sub
push
(bad)
push
mov
push
and
icebp
mov
mov
dec
mov
push
shr
outs
mov
stos
mov
cmp
dec
xchg
arpl
jne
xor
pop
push
inc
stos
pop
ret
dec
fbld
sbb
xchg
cmps
es
and
jmp
fwait
lea
sub
rcl
outs
mov
sahf
adc
not
jge
dec
push
cli
xchg
push
dec
mov
jb
jbe
dec
aam
dec
stc
test
fmul
adc
ror
mov
inc
xor
stos
outs
(bad)
sub
cdq
out
mov
in
jmp
adc
sub
jae
cmp
addr16
mov
lods
lods
dec
cmp
sub
add
aas
(bad)
mov
rcl
out
cli
mov
push
pop
xlat
lahf
arpl
cwde
pop
adc
push
mov
dec
test
mov
mov
jo
scas
(bad)
jb
push
inc
jb
mov
pop
(bad)
xor
je
push
out
and
div
mov
mov
xor
aam
mov
add
jg
leave
cmps
push
call
pop
test
int3
add
pop
mov
inc
shl
mov
aad
in
xchg
clc
fcomp
add
cmps
add
mov
mov
stc
(bad)
adc
push
push
push
xchg
push
lock
push
xor
cmp
mov
and
nop
loopne
mov
sub
psubq
xchg
fs
iret
mov
push
mov
xchg
pop
pop
xlat
dec
dec
add
fadd
inc
sub
retf
fbld
sub
mov
push
test
in
mov
retf
sbb
mov
xchg
imul
cmp
sub
inc
inc
adc
push
mov
jnp
icebp
into
adc
fucomi
xor
mov
les
daa
in
ffreep
in
mov
pop
les
shl
dec
(bad)
out
call
push
mov
or
leave
std
test
xor
ss
in
js
sbb
sbb
xchg
add
xchg
jmp
mov
xchg
mov
cwde
inc
bound
daa
mov
inc
cmp
jne
push
fld
movs
shl
sub
mov
xor
scas
lea
repz
pop
icebp
mov
adc
outs
jp
cmp
ss
cmp
xchg
and
rcl
lds
lea
test
shl
dec
inc
in
mov
outs
dec
add
(bad)
aam
jecxz
xor
add
movs
enter
push
inc
imul
outs
pop
push
and
shl
pop
xchg
sbb
scas
mul
shr
rcl
jne
add
aas
push
and
ds
rcl
mov
ins
cmps
movs
and
xor
adc
xchg
push
leave
into
test
add
cmc
push
push
push
es
adc
je
mov
test
mov
aad
daa
push
push
add
fbld
dec
ins
jo
inc
loopne
imul
daa
and
loope
push
(bad)
loope
adc
ins
retf
int
inc
inc
scas
jno
push
cld
das
idiv
jge
data16
dec
jnp
imul
retf
sbb
pop
retf
fst
fcomp
ficomp
adc
bound
aaa
add
mov
popa
aas
add
popf
sub
(bad)
cld
inc
cwde
xor
dec
fsubr
jo
mov
enter
push
aam
aam
js
cwde
mov
icebp
stos
loope
loopne
sub
mov
ins
push
xchg
mov
test
popf
push
mov
and
xlat
iret
scas
ins
jle
ss
fimul
(bad)
clc
cld
das
pop
adc
(bad)
js
xchg
xchg
and
xor
(bad)
retf
xlat
inc
pop
sbb
push
int3
cmps
cmp
jmp
and
rol
dec
dec
sbb
cdq
mov
sbb
out
sub
xor
add
jne
mov
add
shl
stc
shl
xor
sub
dec
adc
xor
and
xchg
aaa
inc
add
leave
(bad)
into
push
(bad)
mov
inc
xlat
lahf
add
mov
pop
dec
test
outs
pop
int
sbb
adc
mov
fnstcw
add
xor
test
adc
dec
out
mov
dec
movs
cwde
cmc
cmps
leave
sub
push
retf
in
cmp
xchg
mov
sub
sub
ror
repnz
mov
mov
sub
fst
cmp
ss
iret
mov
mov
dec
mov
(bad)
adc
retf
shl
addr16
jnp
inc
mov
inc
enter
dec
lods
pop
mov
(bad)
aam
rol
xchg
jb
(bad)
les
popf
sbb
pop
fisttp
loop
and
mov
jl
mul
stos
jge
jmp
cmovnp
je
inc
outs
add
jnp
scas
add
xor
or
add
and
ds
pushf
sti
sar
pcmpgtd
push
adc
mov
out
pop
je
std
ja
xor
(bad)
jl
and
iret
and
mov
(bad)
and
sbb
loope
mov
test
gs
add
add
inc
jmp
jmp
push
lock
repnz
jge
xchg
xchg
lock
hlt
stc
fcmovnu
jmp
cs
mov
and
call
movs
into
out
push
cmp
jbe
xchg
popa
sbb
mov
out
add
mov
add
es
arpl
out
stos
xor
fld
(bad)
in
xchg
in
pushf
fld
sahf
mov
xor
add
cmps
and
xor
inc
mov
outs
(bad)
pop
outs
jmp
popf
jmp
sub
pop
ret
dec
jbe
lods
ficomp
jmp
adc
(bad)
lahf
and
xchg
pop
add
inc
stos
jp
scas
js
sbb
in
shl
xor
lahf
mov
xchg
or
lahf
test
ds
int3
leave
lods
jno
mov
repz
or
sub
xchg
retf
push
popa
ja
push
out
in
jl
test
adc
add
pop
nop
or
les
push
sbb
xchg
and
push
cwde
sbb
adc
repnz
pop
repz
test
fistp
jmp
inc
inc
mov
cmp
call
fidivr
test
arpl
scas
je
sbb
gs
in
mov
pop
in
inc
mov
mov
repnz
repnz
cmp
inc
jb
mov
cmp
call
adc
pop
mov
push
imul
sar
jecxz
ja
sahf
jne
je
mov
pop
mov
push
pop
hlt
inc
cmps
mov
jecxz
and
mov
out
jecxz
and
mov
mov
fdivp
idiv
mov
loop
pop
cmp
push
dec
inc
inc
movs
cmp
push
or
and
ds
call
push
dec
cmp
push
ret
popa
cmps
fs
add
xchg
es
jbe
and
or
ror
mov
and
cwde
add
and
cmp
mov
mov
xor
push
dec
inc
xchg
into
push
ss
mov
pusha
icebp
imul
fmul
xor
(bad)
push
cli
mov
ins
dec
loopne
fcom
out
push
pop
ror
dec
clc
or
aaa
test
loope
pushf
push
dec
adc
xchg
inc
frstor
xchg
bound
ins
and
cmp
leave
out
out
mov
xchg
in
loopne
inc
xor
add
mov
pop
pop
xchg
popf
loopne
shl
mov
movs
out
nop
sbb
cmp
loope
ror
mov
push
or
or
mov
sbb
jmp
xor
je
das
ret
mov
ficomp
mov
jo
mov
cmp
jge
inc
loope
rcl
mov
test
jno
cmp
repz
sub
int
mov
sub
cmp
push
cmp
retf
adc
dec
sbb
mov
fistp
fwait
add
xchg
je
mov
sub
test
fistp
sub
xchg
mov
cmp
in
dec
xchg
dec
movs
mov
out
cmp
jb
in
add
add
cmp
sub
dec
xor
jmp
rol
xchg
clc
hlt
popa
ja
pop
arpl
les
retf
gs
test
jl
push
or
or
lods
pop
xor
or
cwde
push
sbb
inc
adc
sti
mov
call
push
pushf
pop
mov
xchg
mov
mov
fsubr
mov
inc
and
cmp
jg
test
in
mov
fdivr
cmp
call
sub
in
outs
pusha
cmps
sbb
xchg
and
ds
fisttp
mov
cmp
pop
xchg
mov
or
mov
add
(bad)
mov
fstp
and
clc
loop
cmp
push
(bad)
icebp
push
jge
adc
pop
fidiv
push
and
aam
jmp
fdiv
int
lds
mov
mov
ja
shr
test
xor
mov
outs
inc
dec
xchg
mov
popf
adc
retf
cmp
jl
mov
call
mov
push
pop
out
mov
mov
inc
and
and
push
push
sbb
mov
and
jb
(bad)
pop
fsub
sbb
ror
call
xchg
jecxz
xchg
popa
in
xlat
xchg
je
retf
stos
movs
sub
inc
outs
in
cld
or
ja
sub
shl
cmps
mov
inc
mov
sbb
sub
call
mov
inc
push
dec
test
int3
fadd
es
lock
cs
fwait
in
inc
icebp
sbb
jmp
jl
xor
cmp
imul
iret
add
inc
fwait
dec
lahf
icebp
cld
lahf
xchg
repz
and
jae
sub
stc
test
mov
fisttp
fcom
punpckhdq
imul
loope
retf
icebp
inc
ins
dec
pusha
(bad)
mov
imul
xchg
fs
(bad)
out
xor
inc
mov
int3
out
sub
(bad)
adc
inc
add
out
adc
sbb
das
xchg
out
and
aaa
add
pusha
adc
jno
mov
add
jecxz
jb
arpl
inc
sub
mov
loop
pop
pop
mov
scas
add
cmp
dec
cwde
xlat
cmp
mov
mov
xor
lds
pop
mov
mov
adc
rcr
mov
mov
or
inc
(bad)
jns
test
pop
mov
out
fld
push
jno
call
xchg
jge
in
sbb
aas
pusha
cmp
(bad)
push
retw
scas
xchg
mov
adc
dec
add
mov
adc
push
mov
test
and
mov
pushf
pushf
imul
xor
retf
shl
lahf
fcomp
cli
das
imul
lea
std
xor
iret
fwait
loop
pop
ja
sub
xlat
xchg
jecxz
add
imul
push
fild
imul
sub
inc
in
and
enter
add
mov
xor
push
jns
adc
mov
test
push
or
scas
ja
sbb
xchg
jbe
inc
inc
push
std
or
mov
xchg
out
fild
xchg
dec
out
pop
lahf
repnz
push
cmps
rcl
rcl
mov
sti
das
movs
jbe
popa
xor
mov
inc
jo
xor
pop
loope
test
inc
inc
jecxz
addr16
ins
inc
pop
cmc
jl
fsubr
adc
adc
push
fsubr
fidiv
jmp
fucomp
sub
xor
fcmovu
sbb
or
fwait
or
and
add
xchg
xchg
movs
aas
test
adc
test
push
adc
in
loope
sub
call
unpcklps
cdq
pusha
(bad)
not
jle
imul
movs
cmc
fldcw
mov
jno
adc
and
and
lods
jg
pop
mov
mov
jle
push
inc
stos
mov
shl
cmp
daa
push
inc
jp
sub
mov
movs
xor
push
int3
fdivr
adc
pusha
fidivr
xchg
or
stc
pushf
int3
out
pop
jmp
cmp
jno
out
jo
cmps
xor
pop
dec
shl
xor
imul
ja
call
lds
push
cli
cmps
bnd
xchg
adc
movs
xchg
mov
or
pop
arpl
xor
and
test
push
jmp
xor
adc
sbb
push
test
jp
stc
push
js
push
cmc
movs
adc
div
inc
imul
call
xor
lahf
mov
fld
outs
xor
in
repz
and
ins
pop
pop
and
pop
rol
mov
mov
inc
and
xchg
inc
outs
add
cmp
ins
xchg
jmp
sub
out
jle
in
jno
js
push
jbe
xlat
xchg
pop
pop
mov
in
push
push
cmp
cwde
fs
and
mov
sub
jne
lods
mov
cmp
jle
loopne
imul
test
(bad)
jmp
push
repz
imul
out
arpl
mov
ret
mov
sub
lock
fwait
or
les
punpckhdq
or
mov
or
jmp
mov
or
mov
fucomp
xor
shl
sub
fstp
das
dec
pop
cs
sahf
push
adc
test
cld
mov
add
mov
aad
sbb
inc
icebp
adc
stos
icebp
and
mov
cdq
in
sbb
sar
daa
in
jge
dec
cmc
jecxz
scas
test
sub
mov
xor
adc
xchg
dec
or
outs
jg
out
sub
pop
sub
sbb
pcmpeqb
mov
sbb
cmp
jb
(bad)
in
aas
jl
mov
push
(bad)
sti
pusha
popa
(bad)
mov
xor
bound
jge
stc
mov
ins
mov
arpl
mov
aam
xchg
cmps
pop
cld
jge
add
cld
jg
sbb
sub
or
and
jae
nop
push
les
pop
xchg
mov
gs
jo
pop
fsubr
(bad)
jnp
jp
xor
into
stc
jmp
nop
out
stos
cld
jmp
or
or
sti
cmps
and
add
sub
fsub
sub
mov
mov
out
lock
mov
pop
mov
movs
xchg
add
sbb
cmp
lock
mov
pop
test
cld
loop
in
push
movs
ins
in
dec
pop
cli
and
jne
nop
jge
jmp
test
mov
jbe
adc
push
sbb
(bad)
imul
leave
jmp
rol
ffreep
dec
in
ds
or
int
xchg
cmp
in
std
jnp
add
pop
ja
nop
out
or
popf
cmc
fst
bound
sub
jnp
sub
push
jnp
fisubr
push
popa
(bad)
dec
pop
mov
pop
push
xchg
clc
xor
mov
push
shr
mov
ss
xor
inc
push
daa
jge
enter
mov
xor
cmp
add
retf
ja
push
dec
imul
repz
loopne
mov
fcmovu
fld
(bad)
mov
sbb
pusha
add
imul
adc
dec
out
add
sub
inc
sahf
or
and
xchg
or
adc
adc
pusha
adc
inc
retf
out
rcr
dec
sub
mov
fiadd
push
ret
or
pop
inc
test
or
dec
sbb
cmp
xor
data16
lods
je
sbb
daa
or
aam
das
mov
leave
mov
(bad)
jmp
cld
mov
sub
test
dec
movs
in
mov
inc
pop
sub
push
or
inc
frstor
shr
xor
test
push
shr
add
xchg
je
(bad)
je
addr16
test
mov
add
out
neg
and
mov
xchg
fdivr
mov
inc
movs
adc
inc
sti
jne
push
shr
inc
(bad)
add
adc
addr16
hlt
add
jle
lods
dec
div
dec
mov
pop
out
repnz
and
sbb
or
add
icebp
push
dec
sub
xor
sub
pop
out
mov
ins
mov
push
out
and
loopne
jnp
or
sub
cmp
bound
jmp
cmps
push
(bad)
in
shl
and
pop
int
inc
mov
cwde
inc
cli
xor
inc
pop
inc
xor
stos
in
lods
and
jmp
div
ja
inc
lock
inc
dec
fwait
and
ds
test
clc
scas
out
push
movs
cmps
das
add
mov
xchg
pop
adc
xor
or
fadd
aaa
ror
xor
inc
iret
mov
adc
add
lahf
fisttp
dec
repnz
rcl
add
xor
enter
push
pop
enter
xchg
sbb
ss
in
test
pop
dec
xchg
mov
jmp
ins
add
jmp
neg
mov
pop
push
popa
(bad)
fcom
shl
sub
jbe
xchg
aam
inc
xor
mov
pop
dec
sub
gs
xor
jecxz
and
xor
(bad)
push
or
(bad)
cmp
pop
gs
and
adc
cmc
jo
int3
ffree
loope
cmp
dec
add
add
retf
add
cmps
mov
(bad)
std
pop
icebp
ins
xor
push
iret
cmps
adc
scas
adc
rol
mov
dec
sub
inc
imul
psubusw
and
test
add
movs
jns
cmps
xor
ret
pop
dec
jmp
mov
pop
mov
popf
jae
xchg
repnz
sti
xchg
pop
aas
inc
in
xor
stc
aaa
sub
gs
fmul
sbb
xchg
push
f2xm1
scas
jmp
mov
dec
(bad)
and
inc
popf
lahf
shl
sti
mov
test
movs
and
inc
ins
enter
in
loop
sti
fdivr
xor
sub
in
adc
jge
cmc
inc
pop
sbb
push
test
sbb
sub
lods
xlat
sahf
repnz
inc
(bad)
push
or
jns
or
shl
mov
inc
imul
push
out
mov
mov
mov
xor
pop
adc
stos
inc
adc
(bad)
sbb
jnp
push
push
outs
xchg
cli
or
push
xcrypt-ctr
cmps
push
ret
sub
ins
jecxz
das
out
push
xchg
push
inc
mov
sar
add
mov
retf
in
mov
cli
dec
sub
sti
(bad)
inc
lea
sub
sub
mov
or
mov
jecxz
(bad)
shr
addr16
inc
shl
outs
loopne
mov
ret
jp
or
mov
sbb
jp
mov
cmp
push
je
pusha
mov
jb
add
inc
add
addr16
mov
inc
cmp
out
or
mov
and
clc
pop
stos
ins
sbb
jns
outs
add
or
cmp
ss
jg
mov
pshufw
sar
xlat
in
sub
mov
movs
xchg
sbb
pop
or
pop
cwde
mul
xchg
fbstp
mov
lods
adc
jnp
cdq
test
mov
sub
pop
xor
daa
(bad)
imul
pop
retf
jmp
adc
sbb
sub
cmp
mov
std
pop
push
cmc
cmp
mov
in
outs
ins
out
aaa
mov
jg
mov
or
daa
pop
les
out
ds
push
ror
icebp
js
or
leave
lods
sub
mov
(bad)
dec
jmp
iret
out
out
test
adc
div
jle
dec
cmp
lea
scas
pop
inc
cli
inc
push
mov
jmp
cli
push
and
lock
enter
cmps
test
out
js
(bad)
mov
xchg
xchg
mov
mov
and
shr
mov
movs
pop
mov
fist
sbb
jbe
fld
xlat
in
ds
sahf
pushf
mov
aad
xchg
xor
cdq
jb
push
repnz
aas
mov
cmps
push
movs
push
fistp
je
jmp
mov
or
adc
stos
adc
inc
loop
enter
ins
mov
jb
fisttp
xor
fstp
icebp
fdiv
fnstcw
lods
ins
mov
add
mov
cwde
mov
push
lahf
xor
dec
je
jb
and
fcom
mov
(bad)
pop
mov
add
fcom
mov
aas
mov
and
sbb
ins
xor
cmc
pop
adc
ins
dec
fstp
xchg
xchg
out
mov
push
out
movs
inc
loopne
(bad)
push
cmps
and
mov
nop
(bad)
cwde
aas
ins
in
mov
je
neg
adc
call
ja
jmp
jp
xor
popf
sbb
push
jb
cmc
push
in
nop
stos
xchg
dec
xchg
test
inc
aaa
adc
jne
out
fwait
dec
xor
popa
int3
clc
lahf
fadd
retf
movs
adc
(bad)
fist
mov
bound
fwait
xchg
sub
jle
xchg
jmp
cmp
jecxz
fmul
and
mov
sbb
mov
cmp
repnz
test
mov
imul
loope
jp
push
aam
fcomp
iret
(bad)
adc
jne
fdivr
push
aas
out
or
or
jle
jmp
pop
aas
daa
jge
fs
push
mov
jmp
aam
cmp
mov
pop
test
mov
stc
cld
adc
(bad)
xor
les
(bad)
mov
adc
jne
leave
and
cld
popa
mov
cmp
int3
sti
jnp
push
mov
lods
aaa
mov
add
push
sbb
lods
call
mov
(bad)
pop
fild
dec
jbe
xchg
lods
push
xchg
icebp
retf
fdecstp
jl
sub
and
jbe
icebp
call
(bad)
(bad)
xchg
outs
cmp
cs
adc
cli
adc
retf
sbb
push
or
lods
shl
inc
mov
xor
outs
add
inc
cmps
outs
into
xor
ja
shl
inc
daa
cmps
cmp
into
or
cmp
dec
fld
and
cmp
ficom
jmp
sub
aaa
push
movs
jecxz
inc
push
aaa
sbb
(bad)
adc
jg
lahf
cmp
add
xor
pop
stc
retf
push
dec
hlt
test
jg
std
and
adc
stc
mov
cdq
scas
mov
repz
dec
(bad)
sub
shl
(bad)
jnp
xchg
mov
dec
or
sbb
inc
div
pop
lds
in
loopne
je
cmc
in
and
pop
inc
sub
mov
enter
xchg
test
or
and
mov
or
outs
pop
mov
in
in
dec
mov
mov
cmps
movs
retf
mov
push
scas
mov
movs
inc
cwde
pop
addr16
setnp
daa
into
stc
test
sbb
cwde
pop
sbb
mov
dec
pusha
es
add
mov
shl
into
xchg
les
sub
dec
inc
test
and
call
push
cmp
push
xor
sub
xor
loopne
scas
movs
xor
add
(bad)
std
xchg
add
(bad)
mov
jae
mov
xlat
(bad)
ins
stc
and
hlt
and
mov
jle
mov
repnz
inc
ror
mov
dec
dec
cld
push
xlat
push
test
mov
sbb
cmp
push
xor
push
and
jns
sub
jo
xor
das
ds
inc
loop
mov
ror
jp
ins
retf
add
pusha
push
stos
sub
push
mov
mov
(bad)
pop
test
std
fwait
arpl
jg
js
fld
out
xchg
sbb
cmp
lock
hlt
data16
int
pop
cwde
lods
mov
push
lahf
aaa
scas
xor
sbb
and
pop
ret
mov
add
movs
cmp
popa
arpl
push
js
add
outs
pushf
aas
mov
mov
push
cmps
mov
and
sub
ins
xor
and
(bad)
lahf
lds
pop
cmp
jle
or
inc
pop
(bad)
je
bound
bnd
xor
shl
xchg
mov
ds
xlat
fs
push
adc
retf
cli
sbb
mov
jecxz
int3
pop
jle
mov
js
add
pop
call
push
ss
repnz
mov
in
mov
(bad)
lods
jle
daa
add
xchg
rcr
das
mov
pop
push
mov
mov
and
enter
inc
(bad)
call
pop
cmp
fdivr
mov
pop
inc
jae
jmp
mov
dec
push
cs
clc
push
loopne
cld
ds
lods
(bad)
int3
sbb
cmp
dec
jmp
and
in
inc
sti
out
push
pop
mov
jne
inc
push
xor
je
les
popa
cmp
gs
adc
in
int
clc
sub
add
out
call
push
mov
(bad)
jo
jge
rcl
jmp
adc
test
mov
rol
xor
push
and
imul
xchg
(bad)
or
mov
loop
mov
xchg
(bad)
pop
pop
in
inc
scas
pushf
jge
adc
cmp
xchg
(bad)
fisubr
pop
mov
pusha
sbb
shl
pop
inc
iret
and
mov
icebp
cmps
cmp
inc
fnsave
sbb
push
inc
ret
xchg
test
sahf
cmp
push
and
aas
adc
ret
outs
jg
pop
outs
xchg
ds
aas
dec
ins
push
xor
jno
cwde
rcr
into
adc
jmp
adc
or
bound
(bad)
and
dec
xlat
movs
fadd
xor
in
xchg
sbb
mov
imul
gs
jmp
sub
sub
js
pop
psrlw
pop
push
jne
or
pushf
sahf
movd
scas
jmp
(bad)
stc
jno
rcr
pop
inc
sbb
jns
ret
jo
jl
aad
xor
fstp
push
mov
xor
push
loopne
cdq
daa
push
jbe
xor
adc
sub
sbb
nop
(bad)
sbb
pop
retf
fcom
or
mov
shl
mov
mov
pop
test
push
xchg
ficom
adc
sub
fwait
outs
fs
bound
and
(bad)
sbb
xchg
pop
add
sti
pop
hlt
into
out
popa
jnp
icebp
cli
int3
ds
ja
adc
pop
arpl
jp
xor
mov
out
pusha
pusha
jp
mov
lods
icebp
stos
push
inc
adc
ss
mov
xchg
in
add
lods
mov
or
pop
gs
ficom
mov
inc
out
and
or
xchg
mov
lods
pop
mov
sub
ret
fs
cwde
adc
and
add
or
mov
mov
call
cmp
jnp
xchg
test
ss
adc
mov
jg
mov
xor
fadd
(bad)
jecxz
pop
inc
pop
mov
in
lock
cmp
jbe
aas
sub
nop
fwait
cmp
xchg
mov
(bad)
add
sub
shr
push
cmps
adc
push
scas
mov
jmp
das
xchg
cmps
popf
lock
les
ret
fist
sar
and
pop
ins
es
lock
inc
sahf
(bad)
aam
daa
jb
inc
stos
adc
icebp
nop
jb
loopne
outs
leave
lea
mov
lods
or
cwde
push
or
xor
push
xchg
lds
(bad)
call
inc
mov
add
stc
xchg
mov
pop
adc
sub
push
loop
ror
cmp
push
nop
adc
scas
cmc
adc
movs
test
mov
faddp
rcr
sbb
repnz
push
xor
fcom
sbb
xchg
jno
add
repnz
loop
in
dec
cdq
sti
pop
cs
lods
in
jbe
movs
in
movs
mov
jns
jnp
shl
dec
fistp
loop
lods
rol
in
leave
fcom
dec
loop
fnstenv
push
push
inc
enter
fs
mov
cmp
push
aaa
dec
and
aas
or
push
popa
jg
ror
and
jnp
adc
push
dec
fisubr
aas
xchg
gs
xchg
fnsave
push
jbe
mov
inc
jmp
add
adc
xchg
add
movs
mov
ins
jae
inc
ds
imul
test
lods
xchg
cs
inc
retf
pushf
push
inc
mov
push
mov
lahf
ret
sub
jae
aam
popa
xchg
out
or
jge
repz
(bad)
xor
and
mov
outs
and
sbb
popa
ficomp
or
ja
sbb
(bad)
xchg
inc
hlt
pop
enter
sti
push
inc
ins
mov
les
xchg
add
enter
fsubr
sbb
adc
xchg
adc
fs
sub
add
mov
add
jmp
into
test
inc
(bad)
and
xor
stc
xor
or
push
pushf
jmp
ficom
int
pop
aas
adc
sbb
jnp
xor
fcmovnbe
fld
jnp
stc
jae
repz
push
dec
aam
out
sbb
int
cmp
inc
loop
adc
mov
sub
and
jmp
imul
sbb
fwait
inc
daa
ds
push
aam
jmp
or
int
call
js
or
jmp
adc
sub
dec
sbb
(bad)
aad
jb
inc
inc
and
lods
movs
push
sub
int
dec
stos
popf
sub
cmp
in
div
sub
outs
je
and
mov
stos
ret
(bad)
arpl
(bad)
jl
dec
adc
cmp
in
imul
stc
movs
into
push
push
fisubr
pop
xchg
xor
outs
jp
lds
popa
adc
popf
pushf
cld
mov
dec
xlat
jne
ret
into
mov
mov
jmp
cmp
sub
in
fdivr
sub
lods
fistp
lods
jne
ror
push
sbb
jne
lea
add
sbb
arpl
sbb
shr
loope
mov
sub
inc
loopne
add
push
mov
mov
gs
mov
push
mov
adc
ret
addr16
into
xchg
pushf
sbb
or
or
das
ret
jmp
retf
call
xor
add
ret
add
push
pop
mov
mov
pop
mov
dec
ds
fidivr
sahf
shl
adc
and
mov
fcmovnb
mov
lock
sub
xor
pop
fstp
imul
xchg
push
xchg
sub
aaa
aad
(bad)
out
adc
stos
and
(bad)
shl
test
sbb
stos
rol
outs
stc
or
adc
leavew
mov
mov
add
mov
mov
cmp
rcr
adc
adc
cmp
cmp
add
jne
enter
movs
ins
stc
test
test
into
cmc
cld
push
xchg
jle
sbb
dec
and
loope
sbb
leave
outs
out
adc
stos
xor
adc
in
push
inc
ret
pop
and
mov
sbb
cmp
iret
dec
(bad)
cmp
stc
ss
imul
shl
cld
mov
xor
pop
fs
mov
(bad)
(bad)
push
hlt
(bad)
daa
outs
push
cmps
and
adc
mov
pop
push
mov
and
push
popa
retf
in
jle
out
stc
cmps
mov
inc
call
into
jge
lahf
rcl
popf
lock
mov
mov
pop
xor
addr16
mov
pop
xor
xchg
xchg
fs
xlat
popa
push
pop
pop
loope
leave
or
xchg
in
pop
add
pop
rcr
mul
pop
shr
imul
les
pusha
fidivr
call
adc
lods
in
dec
inc
cld
adc
outs
stos
scas
or
clc
and
fcomp
scas
cmp
sbb
or
dec
loope
(bad)
xchg
std
outs
mov
lds
out
hlt
dec
push
mov
enter
jg
and
scas
ds
push
in
push
sub
sbb
(bad)
jg
sti
fdiv
sbb
test
xlat
cmp
sbb
dec
xchg
dec
iret
cmp
test
ins
sub
outs
jmp
add
mov
test
enter
pop
imul
das
sbb
pushf
jge
add
shr
sbb
jb
pop
push
call
pand
fmul
ret
loope
dec
test
call
ret
add
not
(bad)
pusha
jo
lea
mov
xlat
lods
pop
(bad)
xchg
movs
pop
mov
inc
enter
in
mov
lock
mov
cs
popf
jbe
lahf
push
mov
imul
xor
xchg
test
loopne
sub
fidiv
mov
ja
imul
pop
sbb
adc
fwait
dec
std
pusha
(bad)
sub
mov
mov
and
ret
int3
dec
sub
imul
(bad)
int
push
pop
sti
dec
ss
mov
loopne
xchg
repz
cmps
dec
and
in
jb
dec
iret
xchg
cdq
pop
mov
loopne
rcl
mov
or
jg
sub
and
push
mov
arpl
arpl
addr16
inc
outs
or
sub
cmps
ds
push
(bad)
(bad)
std
ds
mov
ficom
movs
dec
aas
pop
jmp
dec
pop
sbb
jb
xor
xor
and
mov
je
mov
jb
cmp
or
push
xor
repz
lahf
push
in
outs
mov
mov
xchg
enter
cmp
mov
lea
add
jle
repz
xor
sbb
mov
dec
call
or
add
jge
outs
cmp
(bad)
mul
sub
out
cmp
out
dec
scas
ret
scas
call
out
pusha
add
ins
nop
mov
shr
xlat
and
jbe
dec
adc
ins
in
lods
adc
loop
mov
jbe
push
mov
or
xchg
add
imul
pinsrw
push
test
iret
sbb
jecxz
ins
out
stc
aad
jae
mov
pop
inc
mov
sti
push
aad
sbb
add
add
ins
cdq
or
adc
and
cmps
jg
loop
scas
fcomi
mov
pop
push
sbb
push
cmps
jl
push
lods
int
movs
push
pop
pop
fwait
leave
mov
jne
outs
jge
mov
cld
call
push
pop
jle
xchg
ss
sbb
pusha
lea
lds
jmp
xlat
or
mov
xor
mov
je
push
jns
dec
mov
adc
xlat
movs
pop
dec
(bad)
mov
iret
jp
out
cmps
jecxz
call
add
ret
jno
leave
xchg
jns
jb
xchg
into
loopne
mul
fild
sahf
fld
cmp
push
sub
push
pusha
pop
add
add
add
test
sub
inc
pop
call
mov
add
shl
mov
cmp
mov
(bad)
jbe
mov
loopne
inc
push
inc
imul
scas
icebp
inc
ret
inc
pop
pandn
or
jle
sub
jmp
(bad)
jae
inc
ret
icebp
dec
sbb
lods
and
ror
loop
xor
lods
add
in
ins
add
mov
dec
mov
xor
(bad)
xchg
call
ficomp
mov
push
cmc
fcmovnb
sub
mov
fwait
sti
jno
ins
popf
in
mov
jecxz
div
and
mov
dec
imul
sbb
out
sub
adc
in
cwde
cld
cld
test
cld
jle
je
sbb
add
shr
xchg
jp
pop
mov
pop
mov
scas
js
arpl
dec
imul
mov
lahf
or
pop
push
loopne
inc
mov
and
add
mov
test
mov
pusha
inc
aam
ja
push
imul
adc
ss
dec
cwde
xchg
mov
movs
je
ret
sahf
lods
mov
outs
cmps
mov
xchg
push
out
add
aam
lock
mov
and
add
adc
clc
mov
cmps
sbb
xor
or
call
and
xor
and
mov
adc
dec
daa
sub
mov
inc
mov
sbb
and
shl
mov
adc
enter
push
lods
fiadd
sti
sbb
shr
iret
sbb
out
imul
inc
jmp
bsf
ror
sub
pop
mov
cmp
ss
daa
pusha
into
shr
mov
add
scas
push
out
dec
add
mov
push
sbb
retf
aaa
scas
lods
cmp
xchg
xchg
xor
shr
rol
lds
sti
shl
xchg
(bad)
sahf
lock
in
icebp
adc
dec
jns
mov
inc
push
test
icebp
cli
and
inc
movs
xchg
dec
mov
or
sar
inc
sbb
repnz
pop
or
outs
dec
neg
scas
(bad)
pop
cmps
push
(bad)
(bad)
pop
cmp
sub
dec
cmc
and
mov
fsubr
dec
dec
mov
add
and
dec
pop
xchg
jns
outs
dec
(bad)
movs
jmp
mov
fstp
into
or
faddp
(bad)
sbb
cmp
mul
cmp
imul
xchg
push
ror
test
push
mov
stos
jne
bound
sar
mov
jge
js
mov
or
imul
in
push
or
pop
adc
(bad)
and
push
daa
mov
sbb
ins
retf
popf
cmps
and
imul
shl
xchg
mov
inc
dec
pop
pop
push
movs
adc
xchg
dec
popf
or
int3
push
inc
dec
cs
mov
cmp
dec
sbb
js
and
and
mov
jmp
fcomp
jnp
pop
sti
sar
mov
ret
add
arpl
mov
jmp
clc
inc
loopne
fild
or
mov
(bad)
(bad)
scas
adc
push
mov
int
shl
xchg
pop
in
leave
sar
mov
arpl
in
push
ret
pop
sub
retf
data16
mov
mov
push
mov
int
dec
rol
xor
sub
fld
cmp
popa
std
dec
jecxz
xchg
inc
inc
cmp
mov
outs
sub
inc
lock
cmp
xor
ret
mov
pop
sub
imul
mov
rcr
aam
test
cld
push
jmp
(bad)
addr16
int
ret
ins
fs
jae
sti
inc
jg
add
pop
inc
pop
inc
sub
pop
push
retf
retf
xchg
popf
cmp
fstp
mov
mov
jl
jae
cmps
test
fisubr
ja
xchg
push
jmp
rcl
cmp
mov
pop
jbe
pop
imul
repnz
push
push
jp
pop
lahf
xchg
(bad)
stc
mov
imul
cmp
ins
jl
(bad)
in
in
movs
push
or
shl
fcom
inc
add
loope
sbb
arpl
in
jmp
mov
jbe
add
xor
xchg
test
retf
xchg
leave
or
mov
(bad)
aad
xlat
clc
pop
inc
push
xchg
or
xlat
inc
stc
mov
(bad)
mov
inc
lahf
scas
loop
xor
addr16
inc
out
rol
sbb
aam
push
push
(bad)
stos
xchg
inc
mov
push
xchg
cmp
jp
ret
dec
repz
hlt
push
stc
jg
pop
mov
and
cli
push
sbb
or
hlt
pop
fimul
sbb
(bad)
jle
lods
mov
mov
mov
mov
iret
into
rcl
arpl
jno
mov
enter
cmp
mov
cs
add
mov
call
loopne
loope
inc
test
lea
mov
and
mov
fs
cmp
out
ins
mov
jo
cmp
test
cli
test
in
jno
je
dec
add
ins
push
hlt
mov
popa
xchg
xor
xchg
and
pop
and
in
out
jns
jne
add
xor
sar
jecxz
xchg
mov
inc
shl
and
sbb
inc
mov
sub
push
push
cmp
mov
in
xchg
mov
mov
mov
add
cmp
fs
mov
jbe
in
arpl
int3
dec
sbb
retf
add
(bad)
jecxz
cld
adc
push
lea
mov
jno
in
cmp
lahf
aad
fist
(bad)
idiv
push
dec
push
call
movs
or
iret
push
mov
or
mov
int3
bound
call
sub
bound
jae
xchg
aaa
call
test
(bad)
adc
pusha
cli
hlt
std
stos
inc
mov
and
xchg
outs
jnp
std
shl
(bad)
or
push
imul
bound
repz
cmp
movs
mov
jmp
or
push
mov
jmp
leave
cmc
mov
int
mov
mov
mov
pop
mov
sbb
adc
idiv
ret
mov
pop
pop
imul
adc
mov
jp
pop
add
dec
out
pop
mov
imul
jmp
out
fisubr
arpl
add
repnz
pop
call
inc
popf
adc
push
mov
dec
scas
out
rcr
pop
add
xor
outs
(bad)
and
cmp
in
daa
iret
pop
retf
sub
mov
dec
xor
sar
pop
adc
js
mov
jmp
dec
popf
inc
mov
sar
mov
ret
mov
aad
jnp
fcomp
leave
pop
std
loop
shl
pop
add
lds
pop
mov
cmp
cmp
push
push
ret
addr16
inc
pop
and
sub
aaa
repz
mov
jnp
mov
ror
pop
cmp
pop
or
das
xor
xchg
jae
inc
and
adc
icebp
loope
loopne
jmp
sub
cdq
retf
jbe
sar
pusha
or
cli
mov
or
push
sbb
in
fxch
cmp
mov
cmps
xchg
dec
lock
test
arpl
rol
aaa
pop
xor
data16
cdq
dec
fidivr
adc
and
push
imul
call
ss
push
inc
sub
add
mov
enter
xor
cwde
ins
cmps
jp
cmp
inc
inc
sbb
mov
sbb
and
mov
cmps
jle
inc
aam
gs
push
mov
call
xchg
pop
jmp
sub
shl
jg
mov
sub
out
xchg
pop
mov
call
sbb
movs
add
rcr
mov
lods
ss
sub
and
es
sar
pop
ficom
mov
push
(bad)
cli
jb
in
jmp
test
iret
xchg
cmp
dec
or
imul
pop
call
aas
or
imul
dec
sbb
cmp
mul
mov
nop
push
and
sub
cmc
pop
pop
push
jo
retf
add
pop
push
add
pop
add
mov
popf
icebp
xor
not
popa
shr
mov
mov
test
dec
jle
mov
mov
retf
mov
lea
cld
retf
cmc
mov
popf
dec
dec
or
dec
sub
imul
mov
xchg
or
lods
ins
add
sub
lea
sar
in
jne
bnd
xor
jl
imul
mov
mov
ja
ror
and
jo
xlat
adc
lock
fld
or
mov
adc
dec
loope
dec
xor
ss
jp
icebp
mov
pop
rol
in
and
test
call
stos
outs
cld
loop
or
jp
into
or
cmps
fisub
scas
dec
sub
jb
xchg
out
and
dec
adc
repz
or
pop
retf
sub
cld
scas
(bad)
in
(bad)
(bad)
xlat
cdq
add
mov
fs
push
imul
xchg
in
pop
imul
mov
xchg
test
mov
lahf
int3
mov
test
iret
test
imul
cmp
pop
(bad)
fstp
popf
loope
xchg
jmp
pop
fs
movs
data16
test
cmps
fstp
(bad)
fcmovne
lahf
adc
sbb
ins
arpl
mov
rol
push
xor
bound
daa
mov
imul
adc
jmp
cs
cmps
imul
int
repz
pop
inc
push
xchg
jg
xchg
retf
inc
jbe
cmp
out
push
push
jno
lods
sbb
lea
sbb
fbstp
cwde
movs
retf
mov
sbb
repz
(bad)
fist
xchg
and
inc
push
inc
std
enter
aas
(bad)
rcl
loop
cmps
cmp
mov
popa
aas
cmp
xchg
or
lods
or
adc
dec
pop
mov
pop
pop
ret
icebp
sub
mov
cmp
in
outs
popa
lahf
shr
dec
call
popf
jmp
mov
ficomp
and
repnz
dec
pusha
pop
adc
test
addr16
dec
jnp
sub
loop
aas
movs
mov
repz
leave
daa
xchg
pop
pop
shl
jae
mov
xor
out
mov
ret
pop
push
rcr
fwait
sub
xor
movs
hlt
sbb
js
adc
imul
add
lds
aas
aas
aas
hlt
(bad)
push
lods
push
jp
cmp
scas
cmps
sbb
jmp
push
sbb
sbb
jge
or
and
rol
xchg
and
mov
pop
out
into
mov
sub
loope
cmps
mov
ret
mov
mov
cmp
aas
adc
xor
adc
aad
fldenv
ds
sti
ret
out
push
mul
sub
push
sbb
arpl
cmp
or
xchg
push
add
test
mov
and
sbb
dec
arpl
xchg
sahf
jb
pop
imul
push
sar
jge
test
test
xchg
aam
stos
iret
adc
int3
in
inc
inc
out
fdivr
xchg
push
movs
iret
pop
sbb
sbb
jo
cmp
dec
push
dec
push
push
jo
sbb
jnp
popf
in
cmp
jmp
push
mov
sub
cmp
push
pushf
(bad)
or
loopne
inc
cmp
xor
sub
pop
(bad)
lds
xlat
out
jle
and
sbb
xor
aam
xchg
jle
mov
pop
imul
adc
pause
(bad)
test
dec
xchg
mov
sbb
enter
pop
(bad)
ss
call
adc
push
pop
jl
leave
popa
shl
mov
in
dec
or
and
mov
inc
sub
fwait
out
xor
(bad)
iret
pop
push
data16
pop
loope
mov
mov
xor
jmp
cs
inc
std
push
dec
cmp
and
mov
mov
movs
adc
fwait
and
bound
fimul
jbe
xor
adc
sbb
sbb
stc
and
inc
test
inc
sub
mov
mov
bound
aam
sbb
test
lods
fld
mov
outs
jne
test
lahf
(bad)
loope
cdq
(bad)
sub
aad
sub
retf
xchg
sbb
inc
dec
push
sub
pop
pushf
dec
fucomp
cdq
jo
inc
(bad)
ins
mov
ror
stos
in
popa
xor
ret
fst
mov
jecxz
stos
or
test
fcmovb
push
shr
and
repz
(bad)
enter
test
out
int3
js
(bad)
retf
xor
retf
cli
dec
cmp
cs
fst
pop
and
jo
mov
fimul
mov
pop
mov
jecxz
jl
jecxz
into
loope
add
jmp
call
sub
push
lds
cmp
outs
rcl
rol
out
call
movaps
aad
and
mov
mov
aas
jb
out
js
test
dec
adc
idiv
push
push
mov
mov
push
xchg
cmp
push
gs
push
pop
cmp
push
(bad)
ror
hlt
std
pop
push
pop
lods
sti
sahf
inc
rol
outs
mov
lods
sbb
or
repz
mov
mov
mov
jns
dec
add
int3
mov
sub
and
pop
shl
data16
aam
cmp
adc
sub
xor
mov
jnp
dec
jo
push
in
jmp
sub
or
je
sub
mov
push
inc
inc
in
dec
pop
mov
add
pop
xor
ror
push
lods
dec
pop
mov
push
aam
jnp
in
push
aas
(bad)
fadd
dec
lahf
inc
push
jns
adc
cdq
inc
add
add
ja
imul
sahf
test
dec
jbe
cvtpi2ps
pop
outs
inc
pop
xchg
cmp
adc
fnstsw
and
cmp
sub
xchg
and
dec
xchg
push
add
dec
iret
mov
das
cmp
daa
sub
mov
push
mov
sbb
cdq
int
push
dec
scas
hlt
sbb
adc
push
pushf
fcmove
pop
lock
cmc
jns
sub
enter
inc
clc
cwde
push
cmc
stos
pop
out
inc
xchg
retf
cmp
dec
ja
jno
dec
mov
sbb
dec
inc
ss
retf
mov
push
aaa
aam
xchg
inc
rcr
xchg
rol
cmp
rcl
adc
enter
sub
sbb
xor
cmp
jl
xor
or
out
ret
ja
mov
xor
ja
or
fs
call
sbb
dec
cmp
gs
mov
inc
test
pop
movs
xor
in
loop
pop
addr16
add
ins
iret
adc
jp
std
xchg
div
popf
adc
outs
dec
sbb
mov
pop
(bad)
rcr
jno
inc
(bad)
movs
in
adc
add
xor
xor
scas
push
mov
mov
adc
sbb
pop
clc
call
inc
cmc
sub
cmp
aas
ins
int
test
or
push
inc
xor
sub
je
add
adc
(bad)
fisub
jg
test
push
push
loope
clc
(bad)
pop
mov
push
adc
popf
jecxz
test
mov
cmp
enter
and
int
call
(bad)
dec
fdivr
push
bound
call
std
mov
add
lods
pusha
inc
mov
push
or
pop
jb
out
das
repz
xchg
sub
mov
sbb
hlt
cmps
nop
int
mov
dec
dec
call
or
or
mov
rcr
jo
sbb
add
pop
cmp
stos
pop
mov
fs
dec
test
xor
int3
call
add
aaa
push
or
test
push
xchg
(bad)
cli
mov
fdiv
mov
in
pop
jno
mov
or
inc
or
repz
jmp
out
xchg
mov
loop
inc
hlt
inc
test
aas
jmp
scas
sub
adc
mov
loope
jg
xchg
pop
and
int3
fnsave
jnp
and
dec
outs
fst
ds
imul
adc
and
inc
lahf
pop
cwde
ja
inc
add
mov
add
xor
mov
repz
in
jbe
add
dec
(bad)
mov
xchg
mov
dec
pop
or
or
sub
cmp
in
or
out
fwait
jne
xchg
sbb
pop
xlat
jnp
ja
sub
fadd
sbb
adc
inc
and
sahf
mov
rcl
jae
popf
outs
adc
mov
loope
mov
pop
rol
jb
scas
jmp
ja
dec
ret
mov
int3
mov
xchg
ror
mov
jne
ds
or
jb
push
daa
mov
test
push
pop
test
sbb
push
fnsave
sbb
cmp
fsubr
pop
in
or
cdq
jp
in
fs
das
out
mov
sbb
or
int3
inc
cmps
or
(bad)
je
std
in
mov
adc
repnz
(bad)
mov
adc
mov
scas
push
mov
cwde
bound
mov
pushf
pop
test
fcmovnbe
cmp
sbb
in
jne
loopne
dec
imul
icebp
cli
out
mov
inc
sub
(bad)
out
cmp
or
sub
cli
test
fsub
mov
stos
cli
leave
mov
sub
int
sbb
(bad)
push
test
jl
call
xchg
sbb
cli
repz
(bad)
mov
xor
sbb
add
xor
jmp
(bad)
adc
retf
ins
scas
xor
push
jecxz
pop
jl
xchg
pusha
ret
sbb
sbb
test
ja
sub
inc
div
push
xor
scas
xchg
lea
adc
push
jg
dec
mov
jb
idiv
les
mov
cmp
frndint
outs
mov
dec
out
push
jno
mov
mov
xchg
dec
cli
sahf
arpl
push
push
mov
jno
imul
scas
xchg
and
cdq
stos
sbb
test
daa
aaa
cwde
(bad)
and
and
loop
sub
not
jge
idiv
not
inc
xor
not
or
sar
push
fiadd
and
pop
xchg
imul
fdiv
(bad)
test
mov
sbb
aad
dec
imul
push
(bad)
addr16
mov
mov
mov
xor
mov
les
retf
cmp
repz
jne
fwait
(bad)
iret
retf
ret
or
outs
mov
cmp
adc
cld
add
mov
jge
push
add
inc
pop
mov
das
push
dec
loopne
dec
loope
pop
and
pop
out
into
mov
mov
mov
dec
pop
je
(bad)
mov
mov
pop
fwait
(bad)
aam
adc
dec
loope
or
sub
mov
pushf
pop
add
fsubr
repnz
xchg
retf
inc
push
daa
cmp
cs
inc
adc
inc
sub
pop
cmp
or
test
scas
dec
jne
dec
push
data16
add
cmp
data16
fwait
push
mov
(bad)
int
jmp
dec
jmp
sbb
xchg
dec
stc
cmps
jp
sub
inc
add
add
jb
mov
mov
test
xor
pushf
pop
call
dec
mov
push
dec
ret
jg
out
ins
jg
xor
(bad)
sub
push
dec
nop
rol
xor
popf
inc
push
(bad)
gs
xchg
push
sbb
sub
ins
jmp
mov
(bad)
jmp
sub
or
cmps
dec
mov
jb
aaa
jb
sbb
inc
push
xor
push
sbb
sbb
pop
cmp
icebp
cmp
xor
dec
imul
sub
pop
or
pop
inc
or
lahf
imul
jne
lea
not
inc
mov
add
add
cmps
ins
jmp
inc
jmp
mov
push
in
ds
gs
pop
dec
int
out
icebp
xchg
clc
fs
sti
pop
pop
lock
push
xlat
push
jmp
or
dec
pop
jb
adc
dec
pop
(bad)
cmps
aas
xor
aam
dec
xor
add
in
push
xor
leave
jb
dec
out
push
ins
scas
enter
rcr
or
out
and
ret
xor
idiv
push
(bad)
sti
fcom
(bad)
push
push
ja
stos
call
fsub
fiadd
shr
pop
cmp
popf
jp
jno
adc
movsx
daa
push
xor
rcr
shl
push
adc
push
aad
sbb
daa
pop
adc
pop
adc
jbe
(bad)
fnstenv
jecxz
mov
hlt
mov
aas
lock
push
inc
jnp
stc
loopne
jno
fwait
not
xchg
(bad)
and
aam
sub
xor
shr
enter
data16
push
lahf
add
test
inc
imul
inc
add
pop
pop
jnp
cmp
mov
data16
adc
inc
jecxz
sub
enter
inc
iret
cmc
pop
rcr
mov
sub
jp
fdiv
test
out
or
xchg
ret
sbb
mov
inc
and
adc
pop
lds
mov
mov
jmp
lds
cs
inc
sbb
jle
aam
jle
cmps
xor
xor
es
mov
adc
(bad)
in
mov
jle
xchg
(bad)
cmps
xor
(bad)
push
xchg
repz
outs
daa
data16
mov
push
in
loope
pop
or
jne
inc
gs
in
or
jae
nop
or
je
add
loopne
ins
adc
pop
test
sub
dec
pop
push
sbb
repz
or
jo
mov
pop
cmp
jl
int
fdiv
dec
(bad)
xor
cmp
xor
test
mov
inc
iret
jns
push
push
dec
stos
jp
rol
div
jo
repz
cmp
js
ret
mov
mov
and
adc
sub
inc
jp
dec
aad
(bad)
xor
pop
lods
mov
push
xor
int
sti
push
cwde
(bad)
mov
dec
mov
mov
in
ja
pushf
test
or
enter
repz
mov
jns
dec
jg
xchg
div
xlat
xor
idiv
je
pop
xchg
xchg
loopne
mov
(bad)
or
not
dec
fwait
mov
sub
mov
ja
sbb
push
push
icebp
add
sbb
aaa
int3
pusha
xchg
jmp
jp
jmp
mov
sub
in
repnz
ds
or
and
sbb
loop
cld
pcmpgtd
aaa
xor
test
add
lahf
push
and
rcr
add
les
test
fstp
ret
or
dec
sbb
or
jmp
mov
mov
fwait
mov
popf
das
xchg
push
sar
fisub
xchg
cmps
push
sahf
mov
cmc
and
adc
test
xor
mov
mov
inc
pop
call
lahf
jno
dec
sti
movs
adc
add
xor
push
mov
fs
dec
data16
sbb
mov
push
imul
std
add
sub
xor
fcompp
xor
movs
outs
jge
sbb
xlat
xchg
fistp
xor
jmp
ror
and
cmp
aad
jle
jb
lods
fcompp
mov
ja
loop
and
jg
cmps
outs
add
and
cmp
cmps
mov
jbe
xchg
cmp
mov
and
hlt
fwait
adc
mov
rcl
mov
ds
bound
stos
jg
dec
outs
push
mov
dec
ja
add
mov
nop
mov
jno
and
loope
and
pusha
mov
imul
fdivp
xor
inc
out
mov
out
pop
push
shl
mov
mov
mov
cdq
jnp
xor
mov
push
rol
pop
(bad)
push
and
mov
test
inc
adc
fmul
addr16
ja
push
iret
mov
pop
test
mov
sbb
cmp
push
pop
test
retf
push
pop
sub
inc
jnp
sub
sar
add
enter
cmp
xor
mov
and
(bad)
inc
mov
cwde
mov
mov
test
cmp
jbe
cmp
inc
fdivp
or
clc
leave
inc
enter
jnp
in
xlat
sbb
lods
sbb
dec
jecxz
loope
and
outs
xor
cdq
jb
xor
lds
(bad)
mov
pop
or
or
add
ret
(bad)
retf
push
pop
pop
adc
std
test
ins
loopne
jmp
add
rcl
fist
mov
dec
push
mov
mov
adc
or
mov
lahf
push
pusha
xor
test
test
xchg
shl
xchg
mov
inc
or
dec
jns
sar
add
inc
dec
fsubr
jno
or
in
cmc
xchg
fcomp
add
fisub
mov
inc
adc
mov
mov
movs
sub
jnp
(bad)
pop
cmp
out
pop
push
(bad)
jl
int
cmc
mov
or
mov
addr16
fbld
xlat
jle
push
push
adc
les
ins
mov
sbb
push
icebp
fimul
dec
and
(bad)
push
or
je
and
pusha
mov
xor
push
cdq
mov
jns
ficomp
mov
mov
data16
in
sub
aaa
cmps
pop
test
jg
loopne
mov
test
lahf
and
retf
xchg
pop
sub
sub
inc
repnz
push
pop
cmp
jae
pop
mov
in
es
loop
jmp
mov
jae
xchg
inc
jmp
mov
add
mov
inc
nop
ins
out
fxam
jp
sbb
push
xchg
cs
mov
vunpckhps
cmp
fwait
inc
jnp
rcl
add
adc
sub
jecxz
inc
cmp
ins
pop
ins
test
xchg
(bad)
icebp
mov
pop
ret
push
pop
add
push
iret
mov
pushw
inc
adc
imul
(bad)
pop
or
outs
movs
adc
cld
jnp
(bad)
jmp
enter
repnz
jno
clc
clc
das
lea
add
(bad)
jmp
imul
cmp
mov
push
xchg
out
cmps
jp
pusha
mov
or
mov
xor
push
pushf
ror
fisttp
push
adc
push
adc
sub
shl
dec
popf
out
leave
(bad)
jg
dec
bound
fisttp
push
daa
fsub
sahf
xor
inc
inc
das
jge
mov
cmp
imul
mov
push
jl
retf
xchg
inc
(bad)
loop
pop
xchg
fisubr
or
arpl
pop
adc
mov
sbb
mov
sahf
mov
or
sbb
and
add
push
(bad)
jmp
int3
xchg
dec
jb
inc
jecxz
(bad)
mov
daa
std
(bad)
cmc
unpcklps
pop
call
imul
mov
lods
lea
aaa
enter
leave
dec
jns
(bad)
in
ret
dec
sti
call
mov
(bad)
retf
movs
add
sbb
and
pusha
xchg
mov
xlat
iret
into
aas
cmp
(bad)
push
repz
pmaxsw
lods
or
cmp
icebp
push
cdq
pop
jns
shl
mov
iret
sub
sbb
adc
cld
or
stos
sub
cmp
movaps
fnstsw
or
fild
dec
dec
sbb
xchg
mov
cmp
push
aam
shl
(bad)
cmps
iret
jae
sub
xchg
xchg
(bad)
out
mov
gs
or
cld
stc
xor
lods
pop
sahf
push
mov
popf
mov
aaa
push
in
mov
push
imul
sbb
cmp
loop
stc
(bad)
dec
ins
pop
and
mov
mov
pop
cmps
call
ja
mov
mov
jae
cmc
inc
xchg
movs
inc
push
std
mov
xor
bound
adc
adc
mov
bound
out
and
sahf
mov
ret
xchg
fisubr
js
xchg
cmp
imul
and
(bad)
inc
std
test
mov
aaa
sub
imul
sub
scas
repz
jecxz
jbe
xchg
retf
mov
retf
pop
jnp
movs
pop
(bad)
jp
jae
into
and
inc
ja
add
rcr
arpl
into
add
jp
mov
stc
dec
cmp
add
adc
mov
or
xlat
xchg
push
shl
mov
push
lds
and
cmp
adc
mov
jns
out
and
(bad)
mov
lods
retf
inc
push
push
mov
not
xor
sti
xor
mov
mov
(bad)
hlt
inc
fld
inc
push
push
jl
inc
dec
fwait
popa
mov
push
call
pop
and
cmp
dec
jmp
mov
loop
xor
dec
mov
pop
add
push
fidiv
dec
aam
or
and
fild
scas
inc
pop
mov
sti
push
inc
sar
mov
test
jge
xor
loope
add
mov
push
ds
outs
int
test
mov
mov
popa
imul
mov
in
pop
retf
adc
ins
jg
xor
and
inc
mov
fcom
aaa
push
repnz
mov
in
retf
mov
sbb
push
(bad)
leave
(bad)
lock
repz
cld
push
mov
fcomp
mov
shl
(bad)
jmp
mov
xchg
mov
push
(bad)
jae
jle
std
jmp
mov
repz
ss
xor
(bad)
jmp
jae
sbb
outs
lahf
add
jae
pop
add
(bad)
mov
aam
mov
inc
fstp
add
int
adc
lea
mov
cli
mov
inc
fwait
out
mov
sbb
sbb
mov
nop
push
int
es
into
(bad)
pcmpeqb
fcomp
push
popa
cmc
sahf
popa
sub
mov
cmp
neg
rcr
mov
sbb
sahf
pusha
fsubr
fisubr
into
jge
out
das
gs
ftst
daa
aas
daa
sub
or
cmp
shr
jmp
mov
xchg
icebp
pusha
xor
adc
ja
js
jp
retf
addr16
push
out
ins
sbb
push
int
xchg
cmp
sub
mov
inc
clc
jnp
and
inc
inc
outs
or
sar
mov
xchg
aas
add
sub
pop
adc
cmp
test
and
aaa
jb
rcr
xor
sub
jo
or
add
pushf
(bad)
outs
sub
sbb
out
addr16
jmp
stc
mov
ja
push
mov
mov
pusha
add
push
xor
dec
xor
das
int3
push
movs
dec
xor
mov
and
js
xchg
mov
std
and
fmul
jmp
jo
test
jnp
test
jo
cli
scas
pop
clc
popa
test
dec
fstp
stos
cmps
arpl
cmp
pop
inc
(bad)
hlt
push
add
sub
setbe
or
add
test
xchg
inc
sbb
rcl
push
xor
mov
and
mov
sar
and
push
nop
call
std
xor
ins
jmp
arpl
jle
lea
out
hlt
mov
das
jns
stos
in
data16
add
jge
xor
adc
iret
cs
dec
xchg
aam
xchg
push
icebp
mov
xor
inc
pop
dec
in
(bad)
mov
mov
and
bound
pop
not
in
pop
stc
movs
arpl
bound
pop
xor
sahf
sbb
sbb
test
out
mov
fwait
mov
xchg
cld
imul
xchg
fisttp
and
sbb
in
cmp
cmp
add
or
mov
and
stc
or
mul
and
ja
sbb
inc
movs
ds
vpsrld
mov
or
mov
out
jecxz
ja
cmp
cmp
pop
out
ins
dec
inc
test
sti
ret
retf
popf
sub
add
add
xchg
mov
inc
pop
fist
fs
cdq
mov
pop
cli
movs
inc
xor
mov
mov
xor
pop
mov
sbb
jge
mov
movs
dec
cmp
mov
push
xchg
jecxz
adc
xchg
xchg
push
fs
push
adc
pushf
sahf
int
cmp
inc
mov
xor
sub
sbb
dec
add
mov
das
adc
and
sub
xchg
leave
mov
fst
mov
inc
add
loope
stos
inc
xchg
std
push
pop
ja
lods
int
rcl
push
mov
cmp
mov
lea
mov
dec
inc
or
add
sbb
call
mov
pushf
sbb
(bad)
jnp
push
mov
inc
push
and
mov
mov
scas
pusha
xchg
xor
mov
pop
test
mov
mov
xchg
cmp
adc
mov
sbb
or
jbe
dec
sbb
enter
jmp
je
leave
mov
out
add
push
test
(bad)
fld
jo
mov
out
xchg
mov
fnstcw
sbb
jmp
rcl
mov
dec
xchg
adc
cmp
xor
mov
push
jo
in
xor
push
push
jecxz
dec
rcl
fs
push
fcmove
or
es
mov
add
push
jl
xchg
pushf
std
cmp
int3
test
add
bound
mov
loopne
lods
cs
repz
dec
cli
mov
mov
pop
(bad)
or
mov
jle
pop
fild
mov
ins
sub
jbe
push
je
jge
push
xor
test
or
and
test
lods
fcomp
xor
sbb
adc
in
mov
mov
dec
xchg
aam
jmp
rcr
ret
mov
mov
inc
lds
fldcw
pop
mov
(bad)
push
cdq
stos
mov
pusha
aas
xlat
jmp
xor
jge
sub
ficom
inc
aam
stos
imul
mov
mov
mov
xchg
xchg
jne
leave
call
test
ja
je
xor
adc
xor
ss
stc
(bad)
in
movs
aas
aas
data16
fbstp
scas
dec
add
int
jmp
pop
das
push
inc
div
sub
in
push
(bad)
jmp
call
mov
mov
or
lock
enter
out
lock
cmp
into
xchg
jno
inc
fisttp
inc
pop
xor
int3
ss
push
jb
inc
pushf
lods
movs
jecxz
mov
mov
fisubr
mov
xor
inc
(bad)
fwait
cmp
or
aad
fnstcw
mov
loop
lahf
leave
adc
xchg
scas
loop
mov
mov
lods
jbe
add
sub
fiadd
jl
loop
mov
lds
mov
sub
cli
loopne
ds
mov
sub
pop
dec
push
mov
sub
out
push
mov
(bad)
cld
push
jae
jmp
dec
push
add
jle
inc
jp
dec
xchg
fstp
aas
fadd
outs
and
push
fwait
jae
xor
xchg
sub
inc
cld
jno
dec
push
xchg
aas
lds
in
xor
mov
ds
lock
in
in
push
and
xor
pop
mov
ins
inc
fnsave
(bad)
sub
outs
mov
and
or
and
(bad)
fcomp
add
or
add
sar
out
pop
into
pop
inc
mov
cs
je
mov
sub
ficom
fs
cmp
mov
pop
xlat
movnti
or
inc
ficomp
fdiv
pop
scas
test
xor
nop
ins
mov
cli
retf
clc
or
lock
push
and
add
adc
pop
pop
push
je
jmp
das
inc
pop
inc
and
sub
fmul
out
test
pop
pop
std
jbe
jmp
dec
sahf
and
ja
sub
add
inc
mov
inc
and
in
pop
shl
cmp
fdivr
arpl
xor
mov
test
lds
mov
fld
xchg
loope
into
daa
mov
test
xchg
das
mov
push
adc
stc
cmp
mov
and
fs
sbb
test
add
fnstenv
fst
xor
jno
in
xor
cmp
jg
scas
dec
das
fstp
push
pop
test
dec
scas
cdq
pop
or
xchg
sahf
sahf
xor
jo
test
mov
sbb
sub
in
ror
addr16
aaa
sub
std
call
jmp
cs
jno
inc
popf
dec
repz
push
mov
in
test
push
jnp
es
or
xchg
xchg
fsubr
push
mov
sbb
adc
inc
pop
jmp
push
dec
lods
repnz
loopne
dec
jmp
pop
sub
xchg
jmp
add
lds
fsub
(bad)
mul
xchg
sbb
jmp
cli
(bad)
jl
lods
xchg
mov
sub
pop
dec
inc
stc
out
daa
enter
js
ror
test
outs
or
add
loopne
aaa
cmp
push
scas
sbb
add
cmp
popa
or
(bad)
sub
pop
adc
add
gs
(bad)
mov
out
fst
pop
mov
cmps
sar
cmp
arpl
leave
adc
xchg
popa
out
adc
(bad)
lds
sub
(bad)
outs
jnp
push
pop
sbb
popa
add
sbb
dec
jl
repz
xchg
and
ds
scas
cld
xchg
lea
push
iret
add
faddp
push
push
es
fdivrp
repz
adc
loopne
sub
sahf
jb
push
imul
or
aad
(bad)
cli
fdivrp
or
call
lock
mov
mul
pop
out
or
rcr
adc
in
loop
stos
push
push
out
(bad)
in
stc
ret
mov
div
jae
movs
xor
sub
xchg
pop
or
xchg
adc
cdq
dec
cdq
or
lock
int3
les
push
sbb
into
xor
pop
sub
repnz
xchg
sbb
sbb
fimul
adc
pop
jle
pop
das
mov
je
sar
mov
clc
push
sub
in
lock
jae
in
jno
jmp
gs
sahf
int
pop
sahf
cdq
int3
fbstp
cwde
pop
pop
jl
ficom
pushf
jle
mov
adc
xor
mov
jge
js
and
mov
test
add
push
pop
add
mov
jo
in
popa
lods
bound
sahf
and
ins
cli
push
repnz
mov
call
cmps
inc
loopne
jg
fistp
mov
sub
movs
sti
repz
imul
mov
(bad)
mov
mov
jecxz
aaa
retf
jge
ins
push
cmp
outs
aam
cwde
rol
sub
stc
fcomp
sub
popa
mov
xlat
cld
clc
lds
fcom
xchg
call
pop
fucomip
add
lock
and
je
push
mov
xchg
bound
cmp
stos
ror
ds
xchg
adc
cmp
mov
push
stos
cli
jp
inc
lfs
sbb
out
mov
inc
pushf
sub
cmp
dec
clc
call
bound
sbb
inc
imul
ret
or
xor
jns
mov
lahf
mov
pop
popa
lods
or
fiadd
jg
dec
or
gs
repnz
xchg
jne
jns
adc
sub
rcl
jp
aad
add
fwait
es
pop
xchg
push
xchg
adc
ret
call
cmps
in
jl
mov
aam
fcomp
repz
sbb
int
push
push
xchg
lods
loopne
mov
sub
das
xchg
int
cmp
mov
(bad)
xor
shl
cmp
inc
pop
xchg
inc
test
div
mul
push
cwde
mov
aam
mov
fiadd
or
cmp
sbb
clc
cmp
jmp
outs
sub
iret
mov
test
shl
cmp
hlt
out
loope
mov
dec
lahf
fild
mov
and
cli
jb
dec
mov
dec
and
ret
loopne
jg
mov
sbb
gs
mov
xchg
ins
mov
daa
add
dec
ds
and
fcomp
xor
in
sub
call
aas
dec
cmc
scas
mov
lods
cmps
(bad)
mov
mov
jp
lods
ins
mov
add
mov
inc
cmp
jmp
add
or
inc
mov
pop
pop
cmp
push
retf
mov
test
sbb
xor
shl
mov
jbe
inc
sbb
sbb
(bad)
dec
sbb
cmp
mov
into
clc
jg
xchg
movs
stos
test
mov
sub
aam
mov
ds
mov
mov
ss
and
push
pop
int3
mov
test
mov
aad
adc
lods
fisubr
pop
sub
jge
push
cmp
fisub
sbb
push
jno
popa
loopne
jle
out
aaa
rol
xor
sub
or
add
ss
rcr
ret
call
jmp
(bad)
xchg
sbb
fwait
ror
jp
xchg
jp
int
fmul
mov
inc
gs
icebp
mov
jle
or
xor
cli
aaa
inc
mov
inc
cmp
cmp
xchg
lods
cmp
mov
jbe
jb
push
call
mov
mov
xor
mov
sbb
or
cli
lods
out
push
rcl
sub
lods
and
stos
out
xor
mov
push
mov
and
je
pop
xchg
lods
adc
sbb
sar
xchg
mov
lods
fisubr
adc
inc
pop
jmp
or
popa
mov
dec
pop
sbb
push
lods
ret
push
sar
mov
and
xchg
add
inc
mov
mov
lds
mov
push
mov
adc
cld
mov
loop
sbb
mov
call
sbb
idiv
aam
lods
or
and
push
rcr
outs
add
lahf
and
pop
nop
push
inc
clc
aas
cmp
push
adc
into
sbb
sub
mov
or
xor
enter
cmp
in
mov
push
arpl
mov
mov
bound
jecxz
xor
je
inc
loope
sub
xadd
mov
ret
sti
mov
std
jg
out
aas
and
out
sar
cs
push
ins
mov
dec
outs
sbb
std
dec
dec
sbb
cmp
mov
jl
not
sbb
mov
xlat
loop
add
sbb
retf
or
mov
test
and
jg
jno
xor
xchg
mov
mov
sub
cwde
fdivr
inc
mov
push
inc
dec
nop
sbb
push
int3
mov
mov
fldcw
adc
pop
sub
enter
xchg
xchg
inc
cli
rol
push
pop
mov
mov
pop
(bad)
retf
bound
lods
in
inc
popa
loop
clc
call
xor
mov
icebp
mov
push
ftst
stos
and
jbe
pop
std
mov
(bad)
in
daa
cmp
xlat
inc
add
shl
mov
in
loopne
cmps
pop
or
lock
ss
outs
jb
dec
retf
(bad)
pushf
mov
test
(bad)
inc
mov
jne
ja
or
js
in
(bad)
imul
cmp
gs
movs
into
fdivr
shr
xor
sub
mov
or
push
sub
and
inc
stos
scas
and
test
dec
mov
jnp
outs
ret
sub
test
jae
pop
sub
test
mov
sbb
js
pop
data16
lea
or
adc
or
cld
jne
(bad)
mov
push
xor
or
je
(bad)
inc
pop
push
mov
jmp
mov
out
test
sub
out
add
cmp
push
and
outs
push
sbb
stos
or
push
mov
imul
jl
shr
shl
push
cmp
add
fistp
adc
jp
jae
xchg
mov
shl
(bad)
pop
in
addr16
and
dec
in
mov
loope
jmp
cmp
jp
loopne
inc
in
test
nop
out
cmp
sub
sbb
scas
dec
out
push
jmp
jle
xchg
xor
mov
push
mov
mov
lahf
shl
loopne
rol
inc
sub
not
push
sbb
add
bnd
adc
sbb
in
push
dec
imul
call
sbb
mov
ret
lods
add
xor
test
ja
fsubp
arpl
nop
pusha
add
aam
test
shl
dec
dec
pop
mov
js
pushf
cmps
cdq
scas
imul
mov
jb
movs
out
pop
jae
shr
xchg
data16
xchg
test
bound
jg
or
jle
scas
pop
shl
inc
arpl
(bad)
cld
mov
pop
stos
mov
adc
mov
hlt
or
rcl
(bad)
push
sbb
(bad)
and
push
lods
xchg
test
das
hlt
and
sbb
mov
mov
out
xor
jg
mov
jge
mov
fs
sahf
adc
sub
jge
(bad)
(bad)
and
sub
or
enter
aas
mov
loope
mov
mov
cld
ret
pop
mov
or
lods
les
arpl
push
add
pop
mov
addr16
dec
xor
xor
push
add
jmp
push
dec
and
jbe
clc
fstp
adc
pop
retf
das
push
loopne
sbb
jne
and
cmps
add
out
fld
ret
xlat
jmp
mov
push
mov
sub
mov
(bad)
pop
aas
jecxz
fnsave
popa
sahf
xor
std
sbb
cmp
inc
lea
movs
and
sbb
push
cwde
in
das
ja
loopne
push
fdivr
push
test
mov
test
retf
mov
xor
jbe
or
das
imul
out
sbb
std
movs
inc
sub
ja
xor
scas
jbe
das
cdq
aad
and
popa
shl
fistp
pushf
mov
stc
jno
push
fmul
push
push
mov
in
dec
retf
inc
gs
xor
xchg
mov
mov
and
jnp
jmp
pop
lods
(bad)
aad
sbb
inc
cmps
pop
add
push
jecxz
sub
xchg
lods
loop
mov
push
neg
pop
(bad)
lock
push
jns
repnz
idiv
loope
xchg
mov
fmul
dec
(bad)
in
xor
mov
out
clc
pop
sar
jle
mov
call
fistp
aaa
pushf
mov
pop
mov
daa
call
out
fwait
push
xchg
std
outs
sbb
rcr
loop
xchg
jl
fwait
ret
mov
je
mov
daa
xchg
cmps
les
daa
out
dec
loopne
rol
and
loopne
push
push
xor
cmps
pop
into
sbb
mov
fsub
mov
mov
test
cmc
sahf
arpl
pop
mov
sub
test
cmp
push
pop
cmp
lods
mov
call
repz
mov
les
xchg
ins
sub
cmp
pop
mov
push
cmps
jecxz
jp
aaa
sbb
xor
(bad)
sub
mov
gs
movs
(bad)
lock
mov
mov
movs
push
sbb
dec
cmp
add
popf
adc
mov
retf
test
xor
mov
mov
push
out
mov
shr
popf
in
sar
adc
add
lods
fst
mov
or
into
pop
mov
dec
movs
dec
push
test
sub
je
(bad)
mov
nop
mov
lods
xor
fisubr
sub
adc
arpl
cwde
mov
sbb
mov
sar
jle
lods
add
sub
dec
add
xor
retf
and
mov
je
cdq
adc
sar
(bad)
clc
sbb
sahf
mov
mov
pushf
jo
mov
mov
mov
inc
jnp
mov
add
shl
and
or
mov
dec
sbb
stos
dec
sti
inc
out
xor
adc
push
xor
fimul
pop
sub
pop
gs
ret
enter
mov
sub
rcr
fisttp
mov
xchg
int3
add
cmps
(bad)
mov
out
xor
aad
mov
fiadd
adc
or
cmc
lock
push
fidivr
cld
adc
xor
push
cmp
or
cmp
xchg
inc
adc
xchg
addr16
out
in
mov
lock
in
movs
mov
dec
pushf
push
pop
(bad)
jmp
paddb
jae
pop
jp
dec
in
push
or
mov
lods
inc
and
mov
test
out
xor
add
inc
mov
repz
ins
out
sub
out
sub
call
mov
out
aas
jp
xlat
push
(bad)
daa
adc
push
aad
das
xchg
jae
dec
(bad)
xchg
pop
loop
inc
sbb
fisubr
mov
lea
mov
shl
mov
(bad)
jge
retf
rol
adc
inc
test
or
add
and
fwait
sar
ja
jo
pop
inc
loop
sub
loope
add
jmp
pop
lds
or
xor
lea
aad
test
xchg
xchg
mov
xor
cli
lods
xor
dec
in
mov
mov
or
sub
(bad)
mov
frstor
test
xor
out
xor
add
popf
adc
cs
scas
or
inc
pop
mov
psraw
adc
dec
or
daa
inc
mov
test
sub
xor
cs
iret
add
pop
and
mov
imul
aam
dec
scas
push
or
retf
or
dec
gs
cmps
arpl
(bad)
xchg
xchg
inc
inc
xchg
into
jne
xor
and
jno
mov
adc
mov
dec
sub
aam
outs
(bad)
pushf
and
hlt
xchg
and
pushf
adc
sbb
jnp
add
mov
dec
jmp
in
enter
jge
cmp
test
shr
std
pushf
xor
xlat
xor
push
clc
call
enterw
jecxz
sar
test
cmc
ret
movs
gs
cs
rol
add
xchg
dec
mov
inc
pop
fild
mov
pop
shl
cmps
sbb
inc
push
(bad)
and
jae
or
cmp
cmc
add
and
mov
dec
test
sbb
in
sbb
mov
fdivr
into
jmp
scas
sub
sbb
loopne
push
mov
and
pop
imul
and
and
mov
mov
mov
add
lods
test
jns
inc
sbb
push
fisub
jb
push
push
sar
test
or
retf
fldenv
fxch
sbb
and
cmp
add
mov
xor
pop
test
jae
cmp
sar
mov
invd
xchg
or
or
imul
test
icebp
loop
js
cmp
je
cwde
add
pop
cdq
(bad)
out
aam
mov
sub
movs
imul
leave
xor
jo
(bad)
in
out
jns
cmps
add
fsubp
lods
dec
addr16
pop
dec
fdiv
push
lock
sti
xor
adc
xlat
and
inc
imul
lods
xchg
rcl
dec
mov
imul
sbb
ror
or
or
sub
add
loop
dec
ins
popf
movs
in
jae
lock
ret
jb
mov
in
pop
jno
stos
iret
(bad)
jg
call
pop
mov
cmp
jp
xlat
(bad)
pop
mov
das
jle
mov
pop
ret
jg
pop
test
fstp
jmp
push
xchg
xchg
aad
aaa
cmp
xor
loop
icebp
ins
outs
in
or
add
test
popa
cmps
sub
or
aaa
push
cmp
cdq
les
lds
and
call
cmp
mov
sub
pop
ret
out
out
mov
sbb
sub
gs
daa
repnz
push
xlat
ficom
cmp
ja
xchg
sub
repnz
aad
shl
idiv
push
shr
xchg
sub
arpl
outs
push
dec
movs
mov
xchg
xlat
push
push
retf
push
dec
mov
jb
test
ss
adc
pop
fcomi
and
add
inc
inc
ins
cmp
add
add
ret
sbb
mov
ret
push
lods
xchg
mov
rol
ficom
push
pop
xor
dec
loopne
and
ja
sub
fldcw
(bad)
ja
rol
aad
sbb
gs
xor
inc
in
dec
sbb
imul
leave
aam
jno
in
cdq
and
mov
scas
ds
rcr
aam
mov
adc
and
push
or
add
adc
fsub
fsubr
add
retf
jns
test
shr
imul
pop
in
(bad)
and
in
jge
mov
mov
and
mov
or
add
adc
jmp
pop
retf
mov
(bad)
ins
jno
loop
mov
repnz
cmovp
mov
cmp
jp
mov
retf
mov
movs
jnp
fcom
inc
int3
js
arpl
je
aam
mov
loope
sbb
(bad)
push
cmp
icebp
mov
movs
sbb
push
push
rcl
adc
in
mov
retf
xchg
xchg
out
push
mov
dec
clc
jmp
call
lea
out
pop
jb
inc
clc
repz
mov
jmp
or
cmp
test
stc
pop
xchg
scas
jo
movs
sbb
cdq
mov
pop
push
adc
rol
sbb
cmp
jnp
and
ret
dec
stos
push
ins
fwait
sbb
leave
ins
xor
sahf
outs
cmp
(bad)
jns
imul
js
xchg
cdq
popa
call
push
sar
mov
add
outs
mov
test
dec
dec
aad
jl
dec
adc
push
adc
lahf
or
add
cli
sbb
xchg
jnp
adc
ds
inc
not
adc
nop
aad
mov
pop
inc
test
lock
ja
test
retf
fs
fxch
jg
dec
inc
nop
add
dec
call
inc
or
mov
jo
pop
leave
xchg
jnp
inc
daa
pop
scas
jmp
sub
sub
imul
mov
dec
adc
in
inc
dec
xchg
retf
mov
or
mov
xcrypt-ctr
cmps
pop
aas
inc
mov
mov
ficomp
dec
movs
jmp
or
pop
xor
add
jge
push
cli
shl
mov
stc
imul
jno
jno
jne
pusha
stos
push
test
mov
lds
jns
add
(bad)
call
rcr
mov
jno
int
fst
pop
(bad)
in
pop
ret
mov
test
ins
ret
or
mov
mov
ror
lods
(bad)
jg
loopne
mov
cld
sub
xchg
pop
call
popa
movs
add
data16
sub
mov
(bad)
movs
loope
dec
das
xchg
add
popa
mov
ss
ss
mov
push
push
sub
sbb
pop
mov
and
not
push
iret
rcr
sti
mov
shr
test
cmp
nop
movs
fadd
bound
cmp
or
inc
mov
and
fstp
sbb
ror
test
ss
bound
mov
mov
cmps
test
aad
adc
pop
jbe
pmulhw
loop
xor
adc
adc
int3
imul
ret
mov
jge
fcomp
icebp
hlt
inc
rcr
aad
mov
je
das
push
outs
xor
mov
sub
jnp
push
scas
fidivr
pop
pop
inc
stos
fstp
dec
lods
repnz
div
jle
stc
jbe
xchg
iret
or
pop
gs
inc
outs
add
jmp
mov
mov
xor
jl
fcmovu
int
jmp
repz
cli
dec
shr
lahf
or
push
push
dec
xchg
pop
ror
inc
cmp
test
mov
sub
jge
pop
(bad)
mov
push
cdq
xor
dec
cmp
movs
aaa
je
sbb
mov
imul
jp
shl
mov
push
ds
mov
leave
in
rcr
cmp
in
repnz
mov
sub
retf
push
mov
push
div
cmps
adc
xchg
pop
ret
cmp
fimul
cmp
xor
and
in
shr
pop
jns
nop
in
hlt
inc
jo
jns
sub
cmp
clc
push
mov
dec
cmp
pop
jl
call
mov
pop
movs
test
pop
cld
sbb
and
nop
jo
jno
jecxz
inc
add
dec
(bad)
pop
jb
sub
or
mov
jno
sar
mov
arpl
mov
movs
dec
sbb
xchg
add
pusha
mul
add
test
jge
sar
inc
test
test
xchg
inc
push
inc
mov
dec
jmp
pop
or
(bad)
pop
add
dec
adc
push
pop
pop
out
mov
cli
rol
dec
(bad)
test
or
jmp
and
push
dec
dec
jmp
das
cmp
cmp
jne
sbb
dec
nop
aad
or
inc
xchg
xchg
and
jmp
(bad)
aam
hlt
pop
popa
nop
leave
dec
ror
mov
jecxz
and
pop
jg
loope
push
add
repz
jg
pop
jmp
mov
or
lods
(bad)
sar
pushf
and
sub
and
ret
jno
in
cwde
adc
test
xchg
jecxz
sti
pop
lods
jl
xor
inc
mov
adc
pop
addr16
jge
int
xchg
(bad)
sub
ins
scas
jmp
out
fild
push
fmul
xor
ds
(bad)
aas
shr
cli
jl
sub
dec
sbb
adc
inc
ins
shr
int
fnstenv
jnp
fisttp
std
mov
pop
(bad)
adc
mov
mov
and
push
push
sar
inc
sar
cmp
mov
xor
jnp
sar
std
ds
mov
mov
movs
jp
in
cmc
mov
fwait
pop
data16
hlt
pop
jg
mov
xchg
lds
mov
xor
pop
sub
sub
fild
mov
cwde
add
(bad)
sbb
(bad)
pop
std
push
jle
push
mov
mov
daa
cmc
imul
aas
jne
sbb
idiv
or
into
invd
iret
and
pop
jge
(bad)
adc
inc
mov
dec
jb
sbb
pusha
jbe
and
push
inc
inc
add
ret
xchg
pop
pop
sbb
mov
cdq
inc
(bad)
(bad)
shl
sbb
mov
repz
push
dec
adc
sbb
or
ficom
adc
jmp
pop
shl
div
bound
xchg
xor
fadd
and
mov
ja
or
mov
xor
xchg
int
retf
xchg
(bad)
in
xchg
test
sbb
mov
sub
je
and
idiv
push
or
mov
cmp
popa
sbb
dec
sbb
pop
inc
loop
pop
sub
xchg
je
cmp
push
xlat
test
xchg
xlat
mov
fimul
dec
adc
xor
sbb
mov
push
aaa
lods
inc
fwait
or
repnz
cmp
ins
xor
pushf
inc
ret
pop
jb
dec
imul
and
xchg
movs
shl
xor
add
dec
in
in
mov
div
inc
sbb
mov
fbstp
jno
int
out
jp
fcom
inc
retf
and
stos
jmp
popf
clc
pop
fwait
sahf
(bad)
xchg
xor
lock
call
iret
sub
popf
scas
mov
(bad)
pop
(bad)
adc
jmp
mov
cwde
out
test
push
mov
or
pop
in
xor
lea
mov
clc
ret
push
out
mov
sbb
jge
mov
jmp
mov
push
outs
dec
mov
push
(bad)
arpl
iret
adc
jne
in
cmp
les
xor
dec
xchg
xor
add
sbb
or
mov
icebp
mov
cmp
sub
pop
icebp
sbb
mov
jns
dec
cmc
retf
mov
xor
aad
adc
jmp
mov
(bad)
adc
lods
sbb
push
dec
mov
mov
js
mov
js
adc
xor
iret
pop
rcl
(bad)
xor
jle
or
cmp
(bad)
or
sub
not
movs
fcmovnbe
js
mov
jg
in
xchg
cmps
lahf
and
add
fsubr
xor
mov
int
push
mov
jecxz
push
mov
mov
ror
int3
les
(bad)
xchg
je
pop
and
pop
jle
adc
dec
int3
fdiv
add
out
int
loope
int3
inc
nop
popa
or
add
loopne
cs
pop
rol
test
jne
gs
cwde
dec
ds
or
xchg
mov
sbb
xchg
popa
push
test
outs
pusha
enter
pop
xor
and
mov
xchg
mov
jbe
fbld
sbb
push
rcr
ficom
adc
mov
push
pop
in
add
out
push
mov
inc
jo
sbb
push
mov
adc
xchg
ffreep
cmp
push
jae
push
rcl
dec
dec
rcl
popf
out
pop
pmuludq
mov
jns
test
pop
xchg
cmc
push
shr
mov
cwde
sub
sahf
push
cwde
jno
popa
outs
mov
push
add
cld
mov
and
inc
test
pop
xchg
fbstp
or
stc
cmp
mov
xchg
mov
push
jne
pusha
xor
and
xchg
(bad)
imul
pop
pop
xchg
pop
mov
jns
xor
fldl2e
iret
mov
jo
retf
rol
dec
fcomp
movs
mov
pushf
(bad)
push
inc
dec
jl
dec
jmp
fisubr
inc
xchg
faddp
test
scas
dec
dec
mov
dec
pop
dec
sub
jmp
cdq
mov
mul
sub
sub
xchg
call
jbe
fiadd
pop
or
movs
stos
sbb
(bad)
jle
mov
cs
push
clc
je
ror
shl
jnp
pushf
inc
mov
mov
push
and
ret
out
push
enter
mov
imul
repz
sub
mov
xor
stos
mov
adc
adc
outs
mov
push
das
out
and
sbb
stos
jecxz
lahf
and
pop
rcl
sti
out
xchg
repz
rcl
pop
sbb
scas
loope
clc
dec
int
fsubp
imul
pop
retf
ret
and
jo
cmp
inc
push
imul
test
or
push
int
xor
out
xchg
pusha
push
int
push
in
mov
ret
pop
jl
repz
inc
inc
fwait
adc
add
cdq
adc
shr
test
xor
dec
jno
sub
stc
out
push
xor
pop
jne
mov
cmps
inc
pushf
cmp
push
and
mov
daa
(bad)
cmp
jp
xchg
test
lahf
xor
sbb
std
xchg
aam
jae
sbb
pop
pushf
pop
pop
neg
test
mov
(bad)
cld
jle
imul
lea
cmp
sub
leave
fidiv
cmp
cmp
pop
(bad)
xchg
xor
xor
jnp
lea
imul
loope
out
add
sbb
imul
add
lods
jle
dec
push
jmp
dec
xlat
rcr
mov
imul
mov
in
or
rcr
inc
dec
sub
cld
div
or
pushf
aam
mov
push
faddp
jnp
and
add
inc
sub
or
jns
rcr
mov
push
retf
or
gs
xchg
es
xor
or
xlat
sbb
mov
add
sbb
push
add
sbb
xor
ins
enter
je
or
scas
add
pop
repnz
ror
sbb
cmp
mov
stos
and
jl
sbb
push
call
idiv
push
inc
and
mov
cmp
(bad)
jp
(bad)
loop
mov
xor
cmp
jmp
push
retf
cli
es
ficomp
sub
xor
lahf
lds
cmp
push
push
push
mov
(bad)
pop
sbb
xchg
xchg
and
stos
pop
adc
mov
push
add
cmovl
sbb
xchg
mov
ds
and
movs
push
rol
jo
mov
or
(bad)
mov
(bad)
sub
cmc
cmps
mov
sbb
cwde
pop
hlt
and
xchg
pop
add
fcmovu
bound
out
fst
pop
and
cmp
loope
retf
(bad)
xor
sub
jge
push
mov
in
sti
sbb
aam
pop
cli
(bad)
lods
clc
mov
push
sbb
mov
sub
adc
addr16
and
imul
popf
mov
mov
dec
jb
cmp
xor
mov
outs
or
mov
and
out
(bad)
ds
in
outs
sar
dec
pop
arpl
add
out
mov
mov
inc
sti
out
stos
jg
pusha
and
mov
jmp
mov
outs
retf
pop
push
sub
fsubr
cmp
and
dec
popa
sbb
pop
cmp
and
mov
repz
shr
mov
shl
gs
inc
or
imul
push
sahf
repnz
push
icebp
add
imul
dec
pop
pusha
dec
add
and
(bad)
push
repnz
test
jno
sar
jmp
call
cli
dec
push
lods
std
pop
enter
jno
jns
cmps
aam
test
pop
xor
or
arpl
outs
jecxz
shl
xor
std
ds
mov
push
sbb
ss
xchg
aaa
sbb
je
inc
arpl
mov
add
push
jecxz
enter
cmc
pop
dec
call
and
out
popa
push
mul
xchg
clc
mov
mov
mov
mov
fdivr
push
pop
hlt
pushf
es
add
ins
inc
jae
mov
in
jbe
pop
dec
add
adc
in
adc
xchg
push
sub
xchg
adc
cmp
lds
pop
push
xlat
sbb
loopne
test
cmp
(bad)
out
push
pop
adc
adc
shl
xor
lock
and
push
sbb
sbb
inc
out
jle
xchg
out
dec
out
ret
imul
add
test
into
clc
dec
mov
sbb
add
inc
jecxz
adc
in
xchg
and
scas
inc
mov
fs
pop
jl
push
aad
mov
pop
aas
div
and
cmp
push
xchg
add
loope
ret
mov
(bad)
movs
leave
int3
add
xchg
push
cmp
mov
pop
pop
enter
fmul
fild
mov
enter
sub
bswap
inc
in
add
push
adc
and
test
add
cs
cmp
sbb
inc
mov
dec
mov
xchg
aad
mov
mov
push
sbb
pusha
scas
shl
rol
dec
pop
fdiv
scas
jb
aad
mov
xchg
inc
jmp
or
jo
pop
xor
or
fs
ja
lahf
scas
stc
addr16
jge
fnstenv
ins
mov
dec
cmp
scas
out
add
xchg
push
cmp
or
pop
mov
push
cs
mov
iret
mov
es
dec
inc
xchg
mov
in
sub
rol
add
jmp
int
push
scas
or
ins
scas
test
retf
mov
inc
fadd
and
loop
(bad)
jl
imul
in
repnz
jecxz
out
sbb
mov
out
aas
cmc
push
sbb
imul
xchg
hlt
out
pop
movs
lods
jmp
test
inc
stos
push
movs
into
push
mov
sbb
retf
or
cmp
xlat
scas
sub
pop
mov
mov
mov
scas
or
mov
outs
and
mov
adc
and
inc
mov
xchg
xor
retf
cmps
arpl
leave
imul
or
push
int
and
test
aam
out
mov
and
xor
sub
mov
jp
lahf
jnp
dec
popf
pop
xor
popf
push
out
push
xchg
add
in
repnz
call
pop
fld
pop
rcr
mov
cwde
stos
jo
cmp
(bad)
sar
xchg
sub
add
ret
pop
imul
mul
jae
test
jo
ficomp
outs
jne
inc
fbld
cmp
inc
or
push
push
mov
fld
push
addr16
cdq
cmp
das
pop
aad
arpl
inc
cli
jge
sub
xor
scas
xor
cmps
inc
inc
aaa
xor
(bad)
pand
(bad)
loopne
cdq
sub
ds
sbb
hlt
test
sub
or
xchg
es
test
ror
nop
scas
and
push
or
lea
out
xlat
mov
shl
jbe
and
sub
fsub
mov
stc
jge
mov
or
call
jnp
xchg
(bad)
cmp
sub
cmps
dec
push
push
sti
cli
sub
mov
outs
leave
lahf
out
mov
fwait
adc
sbb
stc
lods
push
sbb
mov
cmc
mov
cmp
dec
mov
not
jno
fstp
repz
and
mov
dec
int3
cmp
(bad)
fidivr
pop
(bad)
fbstp
mov
call
sub
jmp
inc
push
xor
movs
adc
ds
rcr
and
fcomp
iret
test
inc
retf
jnp
push
push
sub
enter
push
and
xor
sbb
lock
shr
push
in
std
retf
jecxz
inc
mov
leave
pop
or
push
ins
(bad)
xchg
and
jp
cdq
aaa
pop
xor
jo
or
fistp
sti
in
inc
iret
jae
mov
xor
mov
pop
mov
les
xchg
shl
jg
fdivr
aad
push
push
lods
iret
icebp
add
gs
sbb
pop
and
jge
xchg
dec
mov
lea
xchg
jnp
adc
stos
xor
mov
(bad)
int
lods
push
mov
sahf
dec
fist
push
xchg
aam
movs
cmp
shr
add
xor
ds
fldenv
and
lock
cmps
retf
rcr
mov
xor
dec
inc
jb
add
fadd
or
out
pop
sbb
(bad)
pop
scas
mov
xlat
data16
mov
jne
and
stos
sub
imul
jl
and
sbb
mov
mov
or
cmp
rcl
icebp
sub
retf
pop
fmul
(bad)
into
loopne
xchg
dec
add
in
xor
inc
jno
in
ds
push
(bad)
inc
fild
dec
repz
jne
aad
fstp
xchg
movs
leave
call
or
outs
dec
sub
lds
lock
in
cmp
ffreep
cmp
fsubr
inc
xchg
addr16
xor
and
and
mov
in
(bad)
cmc
lods
es
mov
mov
cdq
aad
loope
cmp
mov
and
loope
sbb
sahf
dec
add
push
pushfw
cld
pop
jmp
cli
jns
pop
mov
mov
jmp
retf
pop
and
shr
or
xchg
pushf
dec
and
xchg
cmp
mov
xchg
xchg
popf
or
push
adc
mov
sbb
push
out
push
jnp
pop
xchg
xchg
push
xor
jmp
loope
iret
ret
jno
cwde
jo
xchg
push
cmp
push
cmp
adc
jbe
dec
(bad)
hlt
retf
inc
imul
fisubr
or
popa
in
add
add
outs
fwait
and
xchg
push
ficomp
test
outs
inc
lahf
and
aas
mov
mov
and
out
pusha
ret
in
dec
cmp
inc
sub
in
mov
mov
rcl
shl
or
bound
ds
mov
lds
test
mov
ss
push
xchg
fwait
adc
stos
push
ror
cmp
addr16
xchg
popa
ins
cmps
call
movs
in
div
sub
mov
add
cmps
int3
add
cli
cmps
pop
(bad)
loope
adc
data16
clc
mov
push
repz
mov
ins
test
iret
jge
xor
lahf
lahf
shl
push
loope
repz
sar
dec
call
cmp
or
icebp
rcl
ret
shl
ror
mov
or
push
sub
std
test
pop
mov
aas
xor
push
push
push
(bad)
loopne
and
adc
sub
sub
rcl
add
test
shl
lea
enter
mov
jl
pushf
inc
loop
or
xchg
push
inc
shr
cwde
test
or
mov
imul
xchg
mov
call
dec
dec
cmp
sub
jecxz
mov
sub
mov
inc
popf
inc
enter
sub
lea
mov
add
pushf
daa
dec
iret
outs
out
out
ret
xchg
jmp
shr
fistp
aaa
rol
shl
or
in
and
ret
pop
xchg
cli
mov
fistp
stc
mov
out
mov
loope
pop
rcl
fidivr
bound
(bad)
mov
mov
scas
mov
fisttp
jge
cmp
dec
or
mov
fldenv
icebp
mov
push
bound
or
(bad)
(bad)
pop
mov
bound
push
mov
or
rcl
cwde
ins
jmp
fstp
add
jle
icebp
xor
jnp
shufps
std
xchg
leave
cmp
sbb
ret
rcl
jb
(bad)
fdivr
js
(bad)
in
addr16
cld
out
pop
out
nop
and
or
ror
inc
inc
add
test
(bad)
iret
xchg
sbb
jge
je
mov
mov
jl
sbb
xor
adc
mov
mov
mov
arpl
mov
rol
in
ret
pop
jns
mov
mov
and
sbb
push
fwait
adc
pop
inc
push
sub
mov
xchg
imul
xor
push
mov
sub
inc
sbb
xchg
repz
js
aad
(bad)
stos
leave
dec
shr
dec
(bad)
les
sbb
jo
xchg
sub
mov
dec
lods
mov
je
enter
stos
icebp
adc
pusha
add
test
cmp
dec
cld
sub
or
dec
test
test
sbb
ror
jmp
xchg
fistp
add
retf
mov
sar
or
ret
push
out
mov
loop
mov
test
fadd
xchg
mov
popa
push
push
jg
mov
mov
and
or
fs
int
xchg
push
ds
jge
sub
dec
mov
push
add
les
pop
and
xchg
mov
cmc
xor
out
out
ss
lahf
adc
jb
int
fild
mov
or
dec
ins
push
das
addr16
mov
xchg
in
aad
xor
mov
lods
push
daa
sti
cld
nop
inc
xchg
imul
pop
test
repz
xor
popf
call
adc
pop
test
push
mov
xchg
mov
mov
xor
mov
pop
clc
sub
inc
dec
retf
push
pushf
adc
sbb
(bad)
push
scas
mov
sar
cs
les
retf
lea
iret
cdq
xor
mov
mov
inc
jge
and
adc
hlt
sbb
pop
arpl
mov
out
vmovaps
inc
cmp
pop
ins
movs
lods
and
push
fidivr
sub
shl
out
(bad)
in
jp
test
push
ins
jns
cs
xchg
iret
sbb
inc
cmp
cwde
repz
push
cdq
call
inc
int
push
sbb
sub
js
sub
fwait
nop
in
shr
retf
jns
retf
div
test
inc
inc
push
jnp
pop
sub
sbb
mov
or
(bad)
xchg
test
inc
pop
xor
and
fmul
rcr
dec
sbb
sub
loopne
daa
jle
cld
mov
dec
test
fnstenv
push
lds
outs
sbb
xor
inc
xchg
add
lahf
int
stc
test
cmp
sbb
bound
xchg
pushf
push
inc
and
scas
jle
clc
mov
ja
mov
dec
fdivr
sahf
pop
cmp
cmp
iret
cld
pop
daa
cld
adc
mov
add
aaa
mov
jns
sub
jbe
stos
pop
mov
test
xchg
push
mov
es
leave
inc
lahf
aam
and
stc
jmp
ds
mov
dec
stc
xchg
les
mov
pop
cli
mov
mov
ja
int3
aad
cwde
test
int3
fidiv
cmp
out
out
cmp
sbb
cld
or
(bad)
sub
or
scas
popf
mov
mov
and
(bad)
xchg
adc
jmp
jg
icebp
test
inc
int3
dec
adc
mov
fst
pop
imul
sar
(bad)
mov
jle
pop
push
xor
xchg
adc
jnp
jnp
mov
sub
out
in
out
xchg
sahf
pop
rcr
adc
sub
cli
push
xchg
push
bound
add
sbb
add
and
test
sub
jg
or
pop
and
sub
dec
sub
lea
mov
popf
push
lock
xchg
mov
pop
rcr
sbb
into
int
enter
jnp
lds
jp
psubsb
rol
add
aam
and
fsub
adc
adc
adc
xor
fild
ss
jg
inc
enter
scas
jne
pop
cmp
add
fidiv
shl
pop
or
pusha
lahf
cmp
push
pop
adc
sbb
mov
dec
mov
sbb
sub
stos
rcl
cmp
pop
test
jne
scas
cmps
push
outs
or
idiv
push
into
jne
xchg
fsub
push
cmp
mov
arpl
inc
sbb
mov
loopne
pop
xor
cmp
jns
shr
jl
jle
out
repnz
out
xlat
xor
or
add
pop
jno
out
bound
call
pop
jae
loopne
fnsave
popf
sbb
sbb
mov
xchg
into
sub
ror
add
ret
push
jb
pop
push
jne
pop
pusha
mov
lods
pop
fistp
mov
pop
inc
out
imul
rcr
push
daa
dec
cmp
inc
dec
xchg
fwait
jbe
mulps
test
inc
mov
push
leave
icebp
loopne
repz
sbb
mov
into
loopne
sbb
(bad)
fs
fnstenv
xchg
mov
iret
sar
add
dec
xor
adc
addr16
or
out
sti
or
push
mov
jmp
pop
adc
daa
cmp
std
sub
arpl
mov
jne
pop
dec
scas
push
out
sub
icebp
lahf
ret
in
jecxz
xchg
push
xchg
call
push
push
imul
enter
cmps
add
call
lods
imul
xor
retf
(bad)
cmc
xor
pushf
xor
ja
ja
clc
jns
mov
addr16
aaa
es
sub
mov
xor
inc
mov
sub
push
fld
aad
inc
retf
movs
ret
lock
aam
mov
aas
into
lahf
xchg
push
(bad)
loope
and
pop
cwde
inc
shr
(bad)
cld
fcom
mov
fstp
pop
scas
dec
repz
inc
mov
aaa
push
pop
add
stc
xor
mov
rep
sub
lods
not
mov
pop
push
push
(bad)
repz
sub
aas
call
mov
out
cmps
cmp
pop
mov
stc
xor
and
mov
mov
or
sub
cmp
and
xor
ds
push
jne
cmps
fsub
jne
mov
ins
xor
es
xchg
call
int3
mov
jecxz
xor
push
xchg
mov
ret
movs
enter
jcxz
ins
sub
test
data16
bound
cmp
and
cmps
shr
inc
ror
mov
inc
xchg
jb
xchg
mov
xor
mov
mov
repnz
out
xchg
xor
cs
push
jno
add
adc
xor
retf
outs
cwde
cdq
lds
mov
dec
add
std
jb
inc
mov
xchg
test
sar
push
jmp
mov
push
cwde
add
jo
js
mov
adc
dec
movs
jno
jns
lods
dec
sub
mov
push
std
lahf
in
(bad)
xchg
add
scas
into
fwait
(bad)
in
div
jge
cmps
mov
xor
push
adc
mov
jmp
jg
dec
or
mov
vcmpneq_uspd
fnstsw
pop
pop
call
les
jg
scas
addr16
outs
sbb
dec
xchg
test
mov
xchg
xchg
idiv
call
mov
jle
cmp
sub
mov
aad
dec
dec
outs
add
pop
xchg
cdq
jnp
addr16
call
sar
ss
ret
(bad)
out
inc
dec
mov
or
std
sub
int3
inc
in
ret
pop
cmc
jo
outs
inc
popf
enter
sbb
xor
adc
adc
std
fs
pushf
inc
and
sti
mov
push
imul
js
and
int
mov
dec
nop
std
bound
push
inc
sub
mul
mov
fmul
sub
xchg
pop
sbb
and
cmp
sbb
adc
inc
icebp
daa
dec
sar
sahf
xchg
in
daa
mov
pop
push
fs
and
add
setg
sub
adc
pop
gs
test
das
mov
dec
scas
clc
fsubrp
sahf
jne
addr16
fisttp
sahf
jns
imul
add
(bad)
scas
push
or
test
test
sbb
sbb
shl
sbb
push
gs
xchg
mov
cmp
out
sub
ins
cmp
and
xor
(bad)
cmp
mov
test
cmp
movs
push
mov
(bad)
xchg
mov
jmp
lahf
scas
ud2
test
cdq
mov
inc
repnz
leave
sar
jnp
in
adc
jb
sahf
rcr
push
pop
addr16
(bad)
mov
into
enter
fdiv
or
mov
jb
ret
fild
mov
sti
scas
out
push
movs
neg
mov
dec
push
xchg
mov
add
mov
cdq
hlt
or
ss
or
(bad)
sub
push
out
into
mov
out
sub
aad
(bad)
sbb
fsub
mov
dec
jmp
and
test
lea
push
cmp
test
mov
fwait
ss
fiadd
(bad)
sub
call
jo
xlat
cld
sbb
mov
cmp
nop
mov
sub
jmp
out
push
data16
test
sbb
jb
mov
pop
add
lahf
pop
cli
pop
pop
cld
mov
jo
cli
pop
sti
sub
mov
mov
sub
ds
out
cmp
enter
sub
call
cmps
or
sbb
jg
aas
shl
mov
sbb
(bad)
and
inc
push
pop
or
dec
scas
mov
mov
xor
mov
jl
or
lods
mov
pop
fwait
mov
arpl
cmp
dec
inc
ds
xchg
(bad)
mov
(bad)
into
je
mov
and
lahf
gs
in
mov
test
fadd
pushf
add
sub
shl
mov
adc
sbb
enter
or
push
test
fs
les
pop
adc
xchg
idiv
push
push
aaa
xchg
inc
xor
xchg
dec
push
dec
add
pop
test
ja
mov
in
adc
aas
mov
scas
rcl
lea
pop
add
inc
sti
popa
icebp
xchg
bound
mov
loopne
sahf
mov
push
addr16
jl
pop
sti
dec
sub
in
lods
addr16
movs
mov
or
adc
or
sbb
mov
inc
lods
sbb
js
or
sbb
(bad)
jle
push
mov
ss
cmp
call
inc
in
call
dec
xchg
jge
cld
dec
or
les
sbb
fcomp
neg
jnp
inc
iret
xchg
sbb
ret
jo
adc
mov
sub
je
mov
adc
test
mov
fwait
retf
fbld
stc
retf
jae
adc
push
adc
fisubr
scas
push
push
dec
fimul
pop
leave
lods
pusha
lods
xor
aas
adc
out
and
cmp
in
jle
pop
dec
les
test
nop
pop
inc
aaa
mov
adc
mov
js
mov
push
push
sub
out
aas
push
inc
cmc
sbb
inc
pop
ror
div
sub
mov
popf
sbb
pop
std
jge
data16
xchg
cmp
mov
cmp
push
push
(bad)
cmp
je
dec
jno
outs
out
std
jmp
stos
imul
push
pop
add
mov
retf
(bad)
loope
dec
je
ja
pop
enter
sbb
inc
push
test
in
inc
lods
sub
loop
setbe
stc
cmp
jae
pop
je
nop
push
test
mov
js
jne
xor
dec
jl
mov
jmp
mov
pop
shl
fadd
inc
mov
loope
int
icebp
cmp
sub
and
emms
cmps
sbb
lods
and
test
ret
mov
add
jle
sbb
cmp
xor
and
imul
sub
mov
stc
and
loopne
sbb
and
pop
lahf
adc
lods
iret
push
ds
mov
sahf
push
sub
fs
sbb
jo
jmp
fisubr
mov
fcom
out
ss
jmp
retf
add
push
test
pop
fprem
cmp
or
enter
int3
mov
dec
lock
sbb
xchg
mov
adc
nop
stc
inc
ror
or
cmp
aam
stos
dec
lods
retf
rcl
(bad)
push
popf
inc
ins
mov
std
sbb
jbe
push
cmp
mov
and
pop
sbb
fdivp
ficom
mov
out
loopne
push
add
xor
ja
ins
pop
and
out
leave
nop
mov
xchg
fcom
inc
add
mov
loopne
mov
pop
jbe
test
mov
pusha
push
dec
test
clc
shl
(bad)
sti
mov
leave
popa
shl
jns
xchg
test
hlt
jns
es
mov
and
jne
add
mov
jnp
mov
pop
push
and
inc
mov
push
test
lods
sbb
jae
inc
movs
adc
bnd
cmp
jecxz
xlat
into
(bad)
ror
and
js
inc
retf
push
iret
inc
retf
fcomp
inc
xchg
ret
(bad)
jmp
mov
cmp
xchg
in
mov
aam
and
(bad)
repnz
ds
sub
mov
seta
or
call
mov
(bad)
add
(bad)
jmp
enter
lea
ja
adc
xchg
lahf
add
pop
in
sub
je
fcom
sbb
mov
enter
jle
test
es
and
daa
(bad)
mov
jbe
inc
outs
push
mov
out
data16
dec
add
xor
popf
xor
out
jp
nop
push
test
call
mov
push
imul
sbb
mov
inc
or
je
stc
test
shr
and
clc
add
pop
fisttp
scas
loop
pop
pop
and
jmp
jecxz
or
test
fs
out
idiv
mov
sar
pop
popa
test
mov
das
add
and
cs
fisttp
cmp
or
push
icebp
lock
push
fimul
sub
lock
fwait
add
jmp
mov
jbe
test
dec
(bad)
(bad)
icebp
adc
mov
fst
or
ins
xlat
jbe
jnp
sbb
sub
cdq
in
pushf
xchg
outs
sub
je
and
je
ret
sub
push
test
push
(bad)
lahf
or
jne
pop
out
pop
add
cld
mov
stos
push
mov
and
loopne
popf
sbb
pusha
jmp
popa
mov
je
adc
xchg
iret
inc
sahf
mov
fsubr
adc
push
cmp
loope
clc
mov
and
in
popf
lahf
or
jb
or
mov
jns
mov
mov
push
in
fnstsw
jle
sub
das
sahf
push
pop
and
(bad)
xchg
(bad)
aam
pushf
aaa
outs
nop
xor
pop
into
mov
dec
or
xchg
cmp
mov
adc
in
out
sub
ss
sbb
test
cmps
popf
test
fwait
inc
sar
sbb
or
adc
mov
adc
mov
cwde
inc
in
push
dec
and
aas
ret
fadd
xchg
fstp
ss
das
and
sbb
scas
jne
mov
xchg
repnz
mov
(bad)
jae
jne
aam
sbb
mov
aas
out
retf
out
push
jb
ret
push
mov
in
arpl
push
test
pushf
(bad)
cli
aas
push
xor
cmps
cmp
pusha
and
lea
sbb
push
ret
and
(bad)
cs
dec
gs
test
cli
in
and
lods
repnz
call
cdq
movs
jno
imul
mov
and
mov
xchg
outs
jae
and
loop
enter
lods
bound
add
pop
xchg
clc
adc
inc
(bad)
movs
mov
pop
sub
sbb
icebp
cmps
add
sbb
jecxz
mov
test
sahf
sahf
sar
adc
jns
scas
sbb
enter
jge
xchg
and
xor
aam
xchg
(bad)
sbb
mov
rcr
pop
mov
rol
stos
jns
inc
and
aaa
je
push
(bad)
cmp
or
and
cmp
sub
cmp
sub
mov
arpl
jecxz
fidiv
or
fs
loope
cvttps2pi
mov
cmp
cwde
pop
aam
repnz
addr16
jnp
frstor
inc
loop
xchg
sbb
push
mov
pushf
cli
leave
mov
pusha
inc
sbb
mov
or
jnp
pusha
(bad)
fwait
push
bound
xchg
lods
mov
mov
xchg
jg
pop
cmp
std
inc
enter
jmp
pop
loopne
jbe
clc
push
pop
mov
mov
pop
out
arpl
lea
out
in
and
icebp
add
sahf
pop
and
mov
sahf
mov
jecxz
aad
push
stc
outs
lahf
mov
pop
cs
jmp
sahf
test
mov
mov
mov
and
pushf
xchg
sub
push
jb
xor
in
xor
repnz
sub
outs
aad
sub
jp
cmp
lea
jle
sub
popa
dec
or
dec
mov
jb
hlt
jo
push
jmp
ins
add
fisub
ror
mov
fisubr
cli
jne
mov
imul
push
adc
or
out
jge
push
xchg
inc
cmps
push
adc
xchg
stc
jge
xor
add
add
adc
out
mov
pop
ret
or
ja
vcmpps
aad
push
add
add
cmp
aam
jecxz
xor
sub
test
and
pop
xchg
adc
cmp
scas
ja
mov
call
push
push
mov
aam
sbb
xor
(bad)
xor
(bad)
pushf
mov
xor
sbb
leave
sahf
scas
jmp
xchg
movs
sbb
in
inc
js
pop
add
shl
loopne
push
fldenv
aad
mov
mov
xlat
add
cmp
(bad)
jnp
pusha
mov
lock
in
imul
jno
shr
(bad)
repz
outs
imul
sahf
aas
jo
inc
xchg
div
in
mov
push
test
push
pop
add
dec
stos
jle
add
inc
mov
cmps
mov
(bad)
std
(bad)
cmp
(bad)
or
call
inc
fnstsw
pop
sbb
movs
shr
mov
push
pop
clc
je
outs
jne
mov
scas
adc
mov
jg
add
call
jne
or
mov
or
mov
sub
inc
iret
and
sahf
pop
cmp
addr16
call
mov
dec
mov
xlat
add
dec
cmp
rol
addr16
ja
loope
dec
lock
scas
add
cli
mov
mov
adc
outs
or
xor
repz
inc
jmp
sub
das
je
pop
fdivr
aam
inc
fcomp
mov
and
lods
dec
imul
lock
xchg
cld
(bad)
cld
xchg
sahf
dec
add
push
dec
or
dec
(bad)
jge
push
jae
cmp
cwde
xchg
iret
sti
nop
mov
push
clc
pop
xchg
inc
jns
mov
cmps
jno
arpl
mov
dec
pop
lahf
icebp
or
xor
ins
fwait
lock
mov
test
ss
push
push
dec
cmp
jle
inc
dec
dec
mov
jns
cmc
xor
jmp
fstp
xchg
aam
mov
nop
loope
xor
es
cmc
pop
xor
cld
mov
push
cwde
push
mov
in
loop
or
popa
xor
inc
aaa
mov
and
add
push
jns
cmp
and
fdiv
enter
mov
pop
jae
jo
rol
ss
hlt
xor
lods
rcl
jne
aas
push
loope
das
popf
test
iret
test
out
cmc
adc
out
mov
shl
pop
pop
aam
imul
test
xor
movs
jl
xor
imul
call
xor
or
lea
out
sub
and
in
int3
ror
add
mov
jae
mov
mov
adc
dec
mov
out
jge
and
push
mov
ficom
es
adc
cmps
out
xor
imul
lods
rcl
cmp
xchg
ins
cli
outs
movs
aam
add
and
std
push
(bad)
pop
(bad)
hlt
inc
enter
cdq
fcmovu
add
idiv
mov
mov
sub
sbb
ja
pop
(bad)
psrld
mov
mov
mov
ins
cwde
or
mov
mov
daa
cmps
iret
jno
sar
pop
ins
xor
int
lods
or
xor
jns
mov
call
or
or
mov
and
pop
fidiv
hlt
cli
(bad)
fcmovnbe
clc
mov
pop
jle
shl
mov
inc
cmp
xlat
test
ss
mov
cmc
into
dec
hlt
dec
jp
or
stos
stc
pop
clc
xor
jns
sbb
inc
pop
sbb
rcl
cld
xlat
and
or
jg
jb
mov
jp
in
fnsave
xchg
inc
fldln2
jnp
add
aam
and
push
pop
pop
adc
ret
sbb
cld
mov
and
mov
xor
outs
adc
dec
imul
mov
rol
fwait
mov
inc
lahf
rol
scas
pop
or
and
lea
into
call
loopne
inc
or
inc
out
adc
ss
(bad)
aas
or
movs
(bad)
cmps
push
or
inc
or
loop
inc
xor
sbb
das
sti
mov
xlat
and
adc
cmp
mov
test
and
fmul
inc
lods
shr
mov
jecxz
dec
inc
leave
(bad)
sub
out
and
jp
cdq
call
xchg
mov
fnstcw
cmp
ror
inc
cwde
cmc
je
jns
rcr
inc
or
push
mov
mov
mov
jno
sbb
push
jnp
push
lods
mov
lock
in
outs
imul
push
(bad)
push
clc
cmps
mov
jmp
xor
push
dec
fldcw
aaa
test
icebp
mov
cld
pop
push
add
or
cdq
push
sbb
push
jg
pushf
inc
lea
sub
movs
ret
add
ins
jnp
mov
add
pop
movs
inc
mov
cli
xor
add
cmps
out
cli
shl
push
(bad)
cmc
retf
clc
cmp
mov
dec
test
sub
xor
jns
or
push
setbe
jns
aad
jl
jbe
add
mov
jnp
adc
pop
pop
pop
push
fidiv
loopne
jne
stc
dec
jae
adc
or
aas
jbe
add
mov
cmp
sub
mov
fadd
scas
mov
jle
mov
or
jb
xchg
sub
push
jnp
int3
aas
loop
out
xchg
inc
sbb
mov
inc
mov
add
adc
cmps
sub
sub
sahf
test
and
inc
(bad)
(bad)
shr
scas
stos
sbb
in
outs
cli
and
jbe
xor
jl
adc
dec
mov
addr16
fild
outs
xor
jns
mov
xor
and
sbb
pop
adc
cmps
mov
in
or
push
inc
ins
pusha
ficomp
adc
mov
jmp
and
pop
lea
mov
jo
jae
dec
mov
popf
push
ins
pop
sbb
pop
mov
jge
aam
jl
push
jno
pop
cdq
add
dec
fild
movs
out
xchg
cdq
jg
retf
mov
mov
ret
mov
dec
jno
jnp
(bad)
fisttp
int3
inc
call
pop
in
mul
add
sbb
jmp
or
or
daa
push
push
icebp
adc
inc
mov
leave
bound
xchg
or
jae
or
ret
and
push
xchg
dec
inc
rol
mov
fist
shl
sub
inc
loop
sub
inc
test
mov
jnp
sbb
mov
ins
sti
aas
fwait
inc
xlat
or
(bad)
outs
retf
add
jmp
mov
fistp
push
cld
in
jnp
in
mov
int
(bad)
pop
loope
add
mov
xor
sbb
movs
sbb
push
in
loopne
inc
(bad)
aas
jns
sbb
dec
js
bound
in
shr
dec
jnp
push
out
push
out
or
clc
call
or
in
mov
push
pop
imul
inc
popf
or
or
(bad)
arpl
(bad)
push
sub
xor
cli
dec
mov
mov
push
add
sahf
shl
out
and
push
loop
rcl
inc
movs
das
sbb
fs
aad
and
pusha
popa
pop
jno
ins
add
adc
push
test
cmp
push
es
cmp
add
cmps
sub
(bad)
xor
jnp
pop
mov
icebp
adc
cdq
pop
push
retf
lea
cmp
(bad)
retf
xor
and
jnp
ins
add
lods
inc
shl
pop
pop
imul
mov
add
dec
test
mov
out
inc
(bad)
push
jb
mov
push
test
stc
dec
mov
or
mov
int
(bad)
jbe
push
dec
and
add
push
jp
xor
clc
sbb
fadd
repz
(bad)
sub
mov
dec
jmp
out
es
cmp
dec
adc
out
retf
aaa
jnp
or
in
mov
lods
out
or
sbb
pop
sbb
lods
xchg
es
jb
retf
cmp
mov
xor
xchg
movs
sbb
sbb
push
je
mov
mov
pop
push
bound
aam
fdiv
xchg
scas
mov
mov
(bad)
pushf
(bad)
xchg
fs
and
sti
in
popa
adc
loop
fld
in
adc
adc
mov
add
xchg
pop
push
pusha
mov
popf
out
pop
std
ds
nop
fisttp
push
push
mov
retf
add
popf
and
ins
(bad)
aad
fcomp
test
cmp
push
retf
test
into
sbb
cmp
push
popa
xor
jge
cwde
test
pop
mov
add
dec
jmp
dec
neg
sub
les
out
cmc
sbb
inc
mov
popf
sbb
pop
outs
enter
add
xchg
xor
fbstp
mov
arpl
pop
ror
js
test
test
outs
push
adc
jae
cmp
jmp
push
or
(bad)
cmp
mov
hlt
fmul
(bad)
inc
and
adc
scas
adc
and
xlat
fidiv
dec
cmp
test
fucomi
cmp
or
inc
inc
sub
loopne
xchg
imul
ror
cmps
rcl
mov
cwde
(bad)
repz
stos
mov
fldlg2
ja
(bad)
sbb
push
cmp
ret
cli
imul
(bad)
shl
out
ret
push
mov
dec
outs
(bad)
das
retf
or
or
mov
pushf
(bad)
pop
xchg
lods
and
arpl
dec
inc
push
mov
in
jb
pushf
or
mov
and
cmc
sbb
mov
stc
mov
imul
xor
out
add
mov
and
add
sar
sub
cmp
std
adc
mov
jb
push
mov
and
mov
xchg
push
mov
xchg
ret
jb
sbb
jp
fwait
pushf
sbb
dec
(bad)
les
rol
or
xor
mov
(bad)
mov
or
std
stos
(bad)
mov
gs
jp
sbb
in
cmp
or
adc
test
in
scas
std
cmp
pop
andnps
jmp
fwait
xchg
mov
pop
cmps
inc
or
or
aaa
add
xchg
movs
sub
push
idiv
inc
sub
fabs
mov
stos
pop
icebp
dec
xchg
mov
inc
fbstp
scas
or
adc
push
(bad)
int
xor
mov
movs
sbb
or
pop
add
mov
ret
jae
sub
cmp
jmp
(bad)
dec
push
in
mov
out
fnsave
pop
test
cmp
cmps
ins
or
imul
shr
fneni(8087
lahf
jns
ret
pushf
scas
mov
xor
adc
dec
cmp
out
movs
inc
call
mov
cmp
cmp
and
push
pop
pop
shl
dec
jle
ins
pop
inc
ins
fild
jecxz
inc
fnstenv
jae
pop
push
mov
xchg
xor
js
xor
cmp
loopne
xchg
fist
xchg
mov
mov
movs
sahf
test
sbb
push
clc
jmp
push
sub
cmps
imul
sar
mov
push
int3
cdq
inc
add
sbb
and
cld
call
adc
into
mov
cmp
(bad)
pop
movs
ret
jmp
push
loop
lahf
arpl
and
push
js
ins
aam
jbe
aaa
xor
jae
mov
loopne
cmp
enter
div
icebp
sbb
ds
int
inc
xchg
pop
sbb
cmp
xor
shl
dec
inc
xchg
push
stos
adc
aam
mov
sub
mov
fwait
std
fistp
loop
gs
sti
pop
xchg
jmp
mov
daa
xor
xor
and
imul
ins
push
pusha
enter
mov
ret
jp
fwait
cli
mov
std
xor
jecxz
mov
or
mov
xchg
pop
rcr
bound
outs
inc
push
mov
cmps
xor
cdq
mov
mov
xor
movs
scas
xchg
jecxz
mov
or
addr16
cwde
push
aam
shr
inc
push
out
mov
mov
sbb
mov
inc
xchg
and
jbe
nop
shl
mov
stc
hlt
mov
aam
ja
jecxz
inc
adc
rcr
push
dec
cmp
sbb
push
(bad)
pop
fsub
push
cs
jmp
cmp
pop
lea
sbb
jl
xchg
shl
int3
sbb
(bad)
stc
inc
xchg
(bad)
or
mov
push
jae
and
jb
fldcw
test
adc
add
push
(bad)
test
cld
add
and
sub
into
add
and
push
ins
nop
add
inc
xlat
sub
push
scas
dec
xlat
adc
xor
or
xor
and
xchg
add
retf
pop
xor
pop
aas
cdq
cmp
mov
mov
outs
out
idiv
inc
push
(bad)
test
pop
in
scas
outs
loopne
nop
cmp
jle
ss
std
xor
mov
mov
add
jbe
lods
or
cmps
movs
and
mov
sahf
push
enter
cdq
add
add
lds
leave
dec
xor
jne
push
mov
xor
mov
imul
dec
fsub
mov
aad
out
enter
pop
div
mul
je
add
lahf
add
mov
push
addr16
mov
mov
arpl
lds
jo
xor
or
ror
jmp
es
stc
cld
pusha
mov
popa
sti
test
xor
outs
jp
cmp
popf
jbe
dec
push
xor
ror
pushf
push
push
mov
add
push
les
jle
out
cmps
nop
mov
popf
mov
std
out
test
add
push
adc
mov
ins
cmc
or
leave
retf
int3
xchg
jnp
pushf
cmps
int3
iret
dec
pusha
lods
mov
mov
dec
push
sub
cld
into
mov
ret
call
mov
sbb
retf
mov
jo
add
adc
and
aam
sbb
dec
adc
inc
aad
mov
cmp
or
(bad)
enter
ins
jle
leave
imul
into
call
cs
xchg
cmp
fiadd
loopne
(bad)
mov
adc
cmp
ins
mov
nop
lods
bound
(bad)
xlat
pop
pop
sub
cld
xlat
shr
xchg
jb
jg
not
shl
adc
shl
jg
punpckhbw
std
pop
xchg
test
icebp
adc
and
mov
scas
mov
gs
sbb
in
jns
ins
lahf
and
pop
out
jge
cmp
mov
(bad)
loopne
and
and
fmul
ins
mov
fdiv
scas
popa
jg
inc
call
enter
xlat
rcr
adc
mov
(bad)
xor
ss
push
push
add
mov
mov
fwait
ins
gs
aam
add
add
jno
cmp
call
jns
fwait
xor
pusha
jb
add
sbb
adc
int
add
imul
mov
js
hlt
popa
mov
out
xchg
and
movs
mov
mov
jb
cmp
push
add
popf
loopne
add
xchg
arpl
mov
mov
mov
shl
inc
(bad)
ja
aam
jg
rol
aad
(bad)
sbb
retf
sub
jp
das
pop
sub
jo
push
out
cmps
jmp
retf
push
aas
jmp
push
fisub
imul
xor
mov
fcom
mov
loopne
cs
shl
retf
pop
dec
cmp
jae
imul
jbe
jo
(bad)
stc
fild
mov
es
call
fwait
icebp
(bad)
(bad)
loop
or
add
cmc
jae
(bad)
adc
daa
(bad)
adc
xchg
test
pop
cwde
mov
cmp
mov
lahf
call
jne
adc
std
jae
sub
hlt
xchg
je
pop
lods
call
scas
retf
test
aaa
cmp
shr
lahf
nop
mov
loope
(bad)
ror
pop
mov
push
jae
loope
in
push
test
imul
pop
outs
pop
inc
xor
pop
mov
mov
xlat
lods
dec
adc
push
mov
jae
add
dec
mov
xor
int
mov
clc
out
aaa
and
stos
mov
clc
in
mov
push
repz
jae
lds
push
push
or
sub
sar
scas
mov
scas
cdq
push
aam
(bad)
scas
rol
out
(bad)
and
cld
inc
dec
out
mov
push
inc
sbb
shl
in
pop
popa
sub
(bad)
enter
ds
pop
pop
shl
cmp
std
rcr
(bad)
jo
push
sbb
inc
pop
inc
push
(bad)
add
retf
inc
mov
pushf
xchg
push
adc
fcomp
pop
mov
pop
and
and
in
sbb
stos
imul
cld
test
jbe
shl
lods
inc
sbb
stc
jge
inc
pop
loop
out
inc
jae
mov
scas
js
push
mov
ror
test
and
out
add
les
pop
mov
js
sbb
jmp
mov
mov
imul
or
inc
inc
dec
(bad)
xor
xor
scas
aaa
ror
test
movs
jg
std
push
leave
or
cdq
std
sahf
gs
jl
pop
cdq
js
ja
popf
mov
movs
add
jle
repnz
push
loop
inc
push
sbb
out
ds
pushf
mov
out
in
push
mov
push
jmp
sub
retf
stc
push
cwde
push
xor
mov
cmp
outs
mov
mov
push
add
ret
cmps
jae
mov
jp
(bad)
out
in
cs
test
or
or
add
fwait
sbb
in
(bad)
xlat
inc
pop
dec
inc
int3
in
mov
test
add
icebp
jno
jge
inc
add
cmps
call
sahf
dec
mov
jns
cmp
fwait
adc
out
pusha
and
mov
and
into
scas
sbb
push
imul
push
neg
cmp
dec
scas
pop
mov
ret
pop
ins
pop
popa
in
xchg
add
jp
mov
cmc
in
outs
stos
xchg
mov
sbb
mov
lahf
ret
inc
or
add
es
out
dec
adc
mov
je
cmc
inc
or
out
add
jp
in
div
sbb
jmp
gs
shl
and
pop
xchg
test
(bad)
xchg
xor
xchg
loop
mov
jne
xchg
mov
cmp
adc
xor
adc
mov
sbb
adc
dec
scas
(bad)
xchg
mov
inc
jle
adc
in
mov
dec
jb
add
mov
out
mov
xchg
push
mov
mov
cwde
retf
mov
sbb
iret
inc
lods
(bad)
ret
cld
inc
sub
pop
mov
pusha
inc
sbb
and
fdiv
mov
shl
repz
inc
fnstenv
iret
add
push
sub
imul
cdq
pusha
jp
mov
adc
in
mov
xchg
cmps
rcr
pop
inc
mov
or
jnp
test
mov
fidiv
mov
stos
pop
(bad)
push
add
mov
in
cmp
jb
mov
jno
mov
clc
sbb
mov
into
add
pop
jo
popa
lds
sbb
mov
jnp
(bad)
pusha
jge
push
push
add
adc
imul
out
rcl
enter
mov
cmp
in
sahf
xchg
shr
int
push
adc
pop
or
sti
sub
cmp
cwde
sbb
shl
or
cwde
jge
(bad)
pop
pop
mov
mul
inc
xor
nop
xor
call
je
repnz
lds
imul
mov
lods
shl
push
ror
add
clc
cmps
repnz
pop
xchg
call
popa
mov
lods
ret
fidivr
xchg
pop
call
mov
dec
inc
mov
into
mov
shr
dec
jno
xchg
(bad)
xchg
jne
lock
add
je
sub
leave
in
jo
loop
scas
in
pop
sbb
or
clc
cmp
dec
or
out
inc
lahf
sbb
sbb
std
das
sbb
lds
xor
aad
out
jnp
cmp
add
in
imul
movs
arpl
out
dec
les
movs
sar
mov
mov
cwde
and
cs
mov
(bad)
cwde
lea
std
jmp
jge
sub
loope
and
fucompp
sahf
adc
jb
jo
and
loop
inc
add
inc
or
stos
or
mov
add
movs
mov
xchg
jmp
sbb
enter
fisub
xor
mov
leave
and
add
xor
add
xchg
cmps
cmps
and
xchg
lods
xor
fidiv
hlt
inc
push
mov
xchg
inc
jmp
sbb
mov
mov
mov
mov
xchg
inc
lds
and
push
ja
(bad)
ins
pop
pop
or
add
(bad)
scas
ins
or
addr16
stos
xchg
sbb
rcr
dec
push
xor
clc
cmc
lea
and
ins
shl
scas
lods
in
retf
ror
dec
dec
in
sbb
pop
pop
lods
add
and
loope
and
ss
sub
pop
repz
mov
mov
cmp
ja
push
fidivr
mov
sub
mov
cmc
sbb
adc
js
bound
test
sbb
adc
retf
sbb
cli
push
xchg
movs
(bad)
adc
pop
pop
sahf
and
xor
out
mov
ds
loope
or
mov
jbe
fisttp
pusha
add
test
sbb
inc
jmp
out
scas
fst
dec
pop
push
dec
cmp
mov
les
imul
js
push
jnp
pop
cmp
inc
jne
fadd
idiv
jo
dec
stos
xchg
mov
fistp
fstp
or
nop
cdq
std
cmp
or
retf
call
jmp
dec
fadd
xchg
or
ror
pop
stos
xor
sbb
inc
(bad)
sub
and
mov
loopne
dec
neg
adc
sbb
repz
retf
mov
inc
xor
mov
js
cmps
xchg
mov
xlat
icebp
lea
rcl
icebp
sbb
fstp
xor
push
das
or
int
add
in
cmps
out
sbb
nop
loop
ins
fbld
lds
cmp
add
adc
sbb
inc
ins
idiv
or
daa
fwait
pop
sub
test
mov
sbb
ror
retf
fidiv
pop
adc
(bad)
cmps
icebp
leave
inc
push
icebp
mov
sar
cmp
push
mov
xchg
sbb
push
mov
loop
movs
movs
push
xchg
fidivr
lods
sbb
inc
mov
hlt
xor
fmul
ret
xor
rol
and
xor
ja
movs
pop
or
xchg
shr
mov
dec
scas
xchg
int3
mov
push
mov
push
cmp
arpl
test
push
sbb
sbb
cmp
test
cmp
xchg
test
test
dec
or
add
push
ins
gs
aas
push
cmp
sar
mov
nop
test
ins
stc
push
push
cli
das
sub
adc
jle
inc
lods
in
xchg
inc
adc
mov
mov
ins
add
adc
test
fbstp
cs
jbe
(bad)
mov
lods
rcl
mov
inc
sub
jp
mov
lea
ins
mov
cs
fwait
lods
jns
xchg
xor
into
iret
fwait
and
call
fld
push
fcom
mov
or
dec
call
mov
sub
sbb
out
fiadd
call
xchg
or
ret
jb
jno
adc
(bad)
out
scas
(bad)
xor
imul
or
add
push
loop
enter
push
pop
arpl
jmp
dec
inc
xor
xchg
pop
inc
lahf
mov
adc
push
xlat
and
bound
retf
cmp
add
push
push
loop
imul
sub
jno
movhps
outs
mov
out
jge
xchg
push
iret
call
loope
and
mov
inc
je
daa
cwde
adc
xchg
lods
adc
inc
jmp
jmp
fwait
and
retf
xor
jns
je
xchg
ror
outs
mov
std
jb
imul
jecxz
in
scas
mov
or
retf
xor
jg
in
lods
(bad)
mov
inc
jp
dec
or
sar
sbb
es
in
in
sub
fs
in
adc
pop
imul
jnp
cmc
je
mov
mov
push
fwait
mov
daa
or
sub
(bad)
stc
dec
mov
scas
sbb
in
(bad)
fisttp
aaa
(bad)
sbb
push
push
(bad)
loop
adc
popa
nop
imul
neg
push
add
(bad)
ja
and
mov
sahf
movs
ds
clc
sar
jno
add
arpl
std
mov
adc
inc
daa
or
adc
jmp
and
fcom
mov
xor
movs
test
lock
inc
mov
jnp
cmp
lods
in
and
and
pusha
inc
cdq
or
jne
sbb
popf
mov
xchg
repz
or
pop
js
cld
pusha
xchg
sbb
arpl
lods
dec
ja
iret
cs
fsub
jnp
dec
test
out
push
popa
sub
dec
dec
push
or
mov
and
or
push
in
jp
cmp
inc
jnp
mov
retf
push
fidivr
or
add
jge
cmp
mov
out
xchg
xor
and
js
out
lock
sti
hlt
adc
jge
das
pop
jo
mov
cmp
movs
xlat
mov
inc
gs
xor
scas
mov
ins
mov
mov
dec
xor
push
cvtps2pi
and
mov
xor
in
sahf
mov
lahf
add
shl
mov
pop
inc
je
dec
dec
pop
fstp
cli
mov
fisub
std
mov
mov
test
xchg
mov
shl
aaa
xchg
loopne
aas
sti
pop
jl
scas
bound
xor
sbb
imul
mov
scas
inc
jnp
std
addr16
cmc
cld
sbb
ins
(bad)
iret
fistp
ins
fcomip
dec
add
adc
and
(bad)
or
xor
test
imul
es
push
mov
stc
sbb
mov
adc
jnp
in
inc
xchg
and
pop
(bad)
jnp
cmc
xor
sub
sub
iret
xor
enter
ror
mov
push
adc
jno
cmp
sbb
or
outs
cdq
sahf
adc
adc
mov
adc
push
and
imul
fild
ins
test
mov
sbb
xor
pop
pop
aam
rcl
dec
mov
sbb
adc
out
cmp
jle
mov
mov
cs
adc
dec
xchg
dec
cmp
inc
lods
jbe
pop
sbb
adc
mov
loope
movs
push
sbb
ins
fwait
push
dec
call
stos
inc
sti
lods
or
push
or
pop
addps
inc
jmp
lea
out
push
icebp
xchg
or
scas
inc
jecxz
mov
or
xlat
cmp
mov
loope
hlt
lods
mov
in
xor
arpl
and
adc
or
ja
hlt
push
mov
cwde
jl
push
retf
jmp
jno
lds
out
rcr
add
lds
dec
or
or
mov
jo
pop
jne
mov
cli
cld
jns
add
sbb
nop
cs
xchg
inc
jle
ja
fcmovu
xacquire
jno
sbb
push
xchg
test
and
push
adc
xor
xchg
adc
cmp
push
mov
(bad)
push
clc
mov
inc
data16
xor
pop
sbb
and
(bad)
mov
cmp
mov
dec
and
jnp
pop
cs
mov
xchg
scas
mov
sub
dec
inc
in
jae
mov
aas
inc
mov
xchg
add
add
fsubr
cmp
lock
cmc
jns
or
lds
pop
fist
jmp
addr16
nop
push
dec
fxch
pop
add
xor
push
sahf
mov
sbb
cmp
in
into
int
lahf
out
sbb
jle
dec
inc
mov
cmps
mul
inc
add
jns
(bad)
sbb
out
adc
push
sahf
sub
pushf
sti
and
or
xor
sbb
dec
xor
test
out
mov
mov
push
ss
call
pop
jnp
mov
jg
retf
push
adc
ret
shr
daa
jmp
(bad)
out
push
lock
in
lea
call
aam
fs
cdq
sbb
aaa
test
cmps
fwait
int3
adc
retf
out
cmps
mov
mov
xchg
mov
mov
stos
stos
outs
inc
clc
(bad)
test
xor
scas
dec
iret
div
pop
shl
mov
mov
test
je
lea
aas
xlat
mov
push
adc
loopne
sbb
inc
cmps
push
arpl
cmovno
push
mov
dec
retf
jge
retf
mov
dec
mov
cmc
or
pop
(bad)
movs
in
enter
ror
pop
xor
in
adc
cdq
sbb
xchg
dec
les
pop
inc
push
lock
mov
adc
stc
jns
fld
sbb
add
mov
jp
push
adc
inc
addr16
xor
mov
je
push
lds
cmp
stos
inc
ret
xor
add
mov
jl
imul
add
cs
lock
sub
sub
pushf
xchg
xchg
jne
inc
or
and
jnp
cmp
inc
(bad)
mov
add
(bad)
(bad)
inc
in
mov
mov
push
xchg
sub
sti
das
jbe
jp
xchg
aaa
test
jp
mov
cdq
sbb
cwde
mov
xor
adc
mov
cmp
jno
inc
dec
inc
loopne
pusha
clc
jno
add
or
dec
sbb
jcxz
hlt
sub
cmp
mov
xchg
dec
xchg
jbe
ins
jb
iret
dec
jmp
dec
add
ficom
(bad)
aam
sbb
inc
je
ret
dec
inc
xchg
push
(bad)
xchg
push
fisub
dec
sub
popa
jne
mov
(bad)
sub
xchg
movs
push
and
pop
out
push
xchg
sub
scas
iret
cld
repnz
call
inc
cmp
in
mov
mov
popf
outs
adc
pop
bound
ins
ins
(bad)
fiadd
push
sbb
jle
ror
pop
daa
xchg
sub
fdiv
test
or
aaa
daa
(bad)
xor
push
out
mov
jp
inc
test
mov
add
dec
xor
sub
or
stos
mov
arpl
test
add
idiv
into
pop
jns
scas
push
sub
adc
inc
inc
into
mov
mov
add
pop
add
push
stos
aas
fist
pop
ins
outs
es
out
clc
in
nop
add
(bad)
sbb
pop
outs
jne
test
jmp
sbb
cmp
inc
(bad)
fdiv
stos
mov
mov
rol
sbb
inc
push
call
ss
fcom
mov
sub
and
sub
ret
and
mov
inc
jnp
push
pop
das
sub
not
xchg
pop
cmp
je
cmp
fs
sbb
jb
push
jno
cmp
cmp
fs
rol
dec
bound
out
jno
or
cmp
sar
xor
dec
dec
nop
out
and
push
enter
das
enter
push
adc
sbb
mov
mov
inc
(bad)
data16
push
(bad)
out
inc
sbb
adc
imul
repz
clc
pop
in
sar
mov
xor
imul
dec
out
cmps
push
inc
dec
fwait
cmp
int3
ins
mov
cmp
and
repz
add
and
in
mov
dec
mov
push
(bad)
jmp
dec
and
pop
fsubr
jl
mov
arpl
dec
pop
inc
dec
pop
jae
pop
movs
mov
push
ret
sub
or
jl
xchg
mov
rcl
mov
idiv
fild
mov
enter
leave
stc
scas
sbb
hlt
mov
mov
sbb
push
aam
jl
dec
push
inc
stos
fs
fist
fiadd
cmps
push
xchg
push
xor
pop
outs
ja
sahf
test
mov
(bad)
pop
sti
test
stc
push
mov
jnp
sbb
and
jbe
cmp
push
stos
fcom
mov
jp
cld
cmps
and
mov
push
cmp
and
dec
fcom
xchg
jg
imul
or
(bad)
in
cmc
xor
pusha
imul
mov
das
into
ss
mov
stos
int3
push
scas
cmp
jae
retf
sbb
sub
popa
cmp
loop
sbb
test
push
mov
push
retf
scas
movs
fmul
loope
out
pusha
sar
dec
push
(bad)
mov
mov
inc
retf
xor
stc
sbb
push
lods
fadd
pop
or
mov
and
pop
mov
in
dec
dec
stos
inc
jp
dec
inc
push
dec
mov
shl
mov
and
js
mov
mov
fbstp
adc
adc
cwde
inc
imul
cmc
mov
mov
daa
mov
inc
inc
aad
test
inc
shl
movs
inc
add
pushf
pop
ss
xchg
jnp
xchg
retf
xor
push
mov
fnstcw
sub
inc
hlt
pusha
sbb
out
xor
push
gs
leave
in
push
aas
je
inc
fadd
fisub
push
cwde
cs
xor
jbe
mov
jne
add
in
lds
std
mov
mov
aas
leave
test
push
sahf
push
aaa
mov
mov
or
sub
call
call
std
xchg
cmc
bound
div
aam
lahf
push
sti
dec
adc
xchg
mov
int
les
mov
sbb
sbb
sub
xor
ins
cmp
vcmpss
shr
movs
mov
dec
stos
enter
cmps
cmps
aad
inc
imul
inc
dec
adc
pop
xchg
addr16
out
or
push
(bad)
out
in
inc
mov
popf
js
push
daa
mov
dec
and
fdivr
dec
loop
sar
call
mov
out
arpl
out
xchg
les
sbb
sti
jmp
lock
or
fwait
adc
mov
or
adc
xchg
jmp
pusha
pop
popf
dec
ror
lods
inc
imul
movs
mov
mov
jne
fcmovnb
ror
(bad)
(bad)
fwait
pop
sub
sbb
shl
mov
push
ja
retf
adc
loop
mov
sbb
inc
sahf
fcmovnu
xor
outs
shl
add
mov
xchg
mov
add
in
dec
leave
ror
push
sub
push
or
jae
les
push
lock
jnp
mov
cmp
jbe
pop
(bad)
sub
sbb
pushf
adc
aaa
adc
jle
jo
adc
xchg
hlt
xor
mov
sti
pop
push
and
sahf
loopne
shr
adc
push
pop
lea
push
fiadd
pusha
sbb
aad
fsub
lahf
mov
out
cmc
mov
pop
cmovne
ins
and
retf
or
sub
adc
retf
ret
scas
ss
sbb
and
fs
push
cmp
sub
or
mov
mov
inc
jge
aas
mov
out
ficomp
nop
adc
or
in
aad
loopne
cmp
add
or
pop
or
mov
mov
pop
popa
ds
cmps
dec
jae
data16
mov
xchg
ret
sub
sbb
inc
jo
cmc
jp
stos
lods
xor
jb
sub
movs
retf
push
sbb
mov
movs
pop
(bad)
mov
mov
xor
out
push
mov
mov
xor
sub
shl
pop
loop
pop
xchg
scas
cmp
seto
pusha
inc
pusha
mov
adc
retf
fiadd
jno
xor
push
rcl
int3
adc
out
xchg
inc
dec
adc
and
mov
inc
icebp
xor
pop
mov
mov
loopne
lahf
lahf
xor
bound
mov
cld
iret
sub
sbb
dec
aaa
mov
gs
mov
test
test
or
sbb
(bad)
jmp
inc
in
mov
pop
adc
fidiv
int
movs
pusha
adc
repz
xlat
adc
ja
shl
push
sbb
out
pushf
sub
push
adc
or
out
int
call
mov
popf
inc
lds
pop
les
cmps
clc
cli
sub
jle
ret
xor
gs
test
adc
xor
mov
push
jecxz
cmc
mov
scas
cmp
xchg
dec
xchg
retf
arpl
in
in
xor
mov
xchg
cld
bound
test
shl
xchg
mov
and
or
dec
repnz
inc
lahf
push
(bad)
in
shl
arpl
adc
mov
pusha
cwde
xchg
shr
imul
xchg
shl
cwde
and
je
push
or
or
rcl
je
add
jbe
xchg
ss
cmc
in
inc
xor
jmp
popa
cmp
and
outs
mov
push
pop
or
mov
fs
inc
sbb
push
xor
movs
pop
data16
or
and
ss
mov
xchg
fwait
sbb
ror
lods
inc
xor
call
cmc
in
mov
add
jne
clc
adc
pop
aas
or
mov
ror
jle
rcl
pusha
arpl
call
sub
test
stc
push
adc
add
std
and
mov
sbb
pusha
out
and
lock
and
or
xor
push
dec
xchg
adc
adc
push
add
hlt
fs
dec
loop
ins
stc
fbstp
ins
ret
sbb
mov
jo
cld
pop
xlat
xor
addr16
xor
cmp
mov
mov
mov
sub
movs
enter
int3
std
aas
cmp
inc
lds
pop
and
add
adc
xor
inc
jo
pop
movs
jo
fisub
fst
mov
adc
je
jecxz
pusha
jp
cmp
pop
push
cmc
mov
stc
aam
je
icebp
jbe
gs
jmp
ret
dec
lea
push
and
fiadd
call
ins
jae
pop
xchg
out
pop
sbb
pop
fwait
aam
fs
xor
pop
aam
mov
jmp
adc
rcr
push
mov
cld
pop
dec
movs
xchg
test
sub
xor
pop
cmps
cld
jae
das
sbb
ret
add
lock
(bad)
jo
mov
push
mov
scas
ficomp
(bad)
fisub
repnz
cli
(bad)
neg
dec
add
or
popf
adc
pushf
test
jno
int
mov
jl
mov
cmp
jge
xchg
mov
test
out
jo
loope
into
fbld
into
push
popf
cmp
xlat
call
mov
nop
(bad)
inc
arpl
sbb
jle
jmp
sbb
inc
leave
cli
loopne
call
dec
sbb
cld
pop
push
jg
fwait
add
xchg
cmp
xchg
or
int3
mov
repz
nop
out
in
cmp
test
push
fdiv
xor
mov
pop
push
clc
lahf
fsub
sbb
mov
retf
ss
mov
add
jmp
mov
and
ret
ins
or
sub
adc
xchg
push
push
repnz
pop
fisttp
mov
in
retf
pop
jne
adc
es
jge
cwde
rol
mov
mov
pop
xchg
dec
cmp
cmp
clc
lahf
repnz
rep
and
popa
xor
and
inc
add
idiv
mov
push
leave
push
fsub
out
jmp
cld
xchg
adc
ss
sub
mov
out
push
push
retf
neg
pushf
and
dec
or
mov
test
xor
add
jg
mov
out
xor
sbb
jns
sti
int
addr16
inc
inc
pop
cli
jne
cwde
idiv
xchg
cli
mov
stc
fistp
jmp
xor
mov
sbb
sbb
pop
pop
or
xchg
sar
rol
jo
push
mov
push
je
jmp
inc
xchg
scas
fldenv
dec
stos
sbb
pop
sub
xchg
lods
sbb
call
inc
fsubr
jno
loop
fstp
xlat
jle
ss
dec
or
push
xchg
rcr
adc
es
or
and
cmp
int3
ss
xor
or
push
loope
inc
pop
mov
jnp
pop
mov
test
repnz
sub
inc
add
xchg
je
retf
mov
xor
mov
in
call
call
jmp
or
fnstcw
in
gs
(bad)
lahf
mov
mov
cmps
ja
jae
je
jne
sbb
les
fdiv
sar
push
push
mov
jne
addr16
scas
mov
mov
inc
(bad)
hlt
jae
adc
sub
dec
cmps
jg
jle
rcr
mov
hlt
repz
nop
clc
dec
xchg
hlt
add
leave
fsubr
test
or
mov
(bad)
xchg
cmps
push
and
or
lahf
mov
mov
mov
jle
aas
or
sbb
and
cmc
jnp
and
cmp
add
jo
repz
add
sar
cmp
dec
test
fwait
or
or
cld
mov
cld
leave
sbb
sub
cwde
sub
inc
cld
mov
in
mov
retf
push
icebp
pop
xor
pop
inc
in
xor
adc
nop
fisubr
(bad)
retf
(bad)
out
out
cmps
jbe
ss
sub
xchg
not
(bad)
mov
jmp
mov
pop
nop
(bad)
movs
and
lea
xchg
out
repnz
push
xchg
icebp
jnp
adc
rcr
gs
pusha
popa
xor
es
sub
inc
fcmovbe
push
inc
ins
push
sbb
mov
mov
icebp
push
clc
pop
icebp
int
imul
or
xor
(bad)
addr16
neg
iret
dec
push
pop
enter
cmp
mov
loope
lods
or
je
mov
fmul
adc
icebp
cmp
pop
xor
ins
popf
cmp
jge
add
inc
jns
in
icebp
mov
xor
cmp
mov
adc
sub
mov
mov
scas
pop
lea
pop
and
xchg
push
and
ret
aad
loope
sti
cmp
lahf
inc
dec
fcomp
mov
jge
push
retf
and
push
aam
jmp
xlat
outs
push
shl
cmovbe
das
sub
nop
repnz
pop
xchg
inc
mov
or
call
or
out
ret
dec
jl
inc
or
inc
push
mov
dec
scas
loopne
inc
inc
dec
mov
pop
(bad)
jae
dec
and
adc
out
fld
stc
jmp
dec
mov
cmp
dec
mov
jp
push
rcr
jg
ja
outs
ret
jle
mov
sub
aad
out
or
cmp
inc
je
fmulp
cs
pushf
mov
mov
repnz
cmps
sub
retf
xor
cmp
in
jae
xchg
addr16
retf
and
bound
fisub
cmp
xchg
in
jmp
stos
adc
mov
add
dec
add
dec
(bad)
movs
add
inc
mov
imul
push
xor
sti
inc
or
pop
fmul
mov
int
mov
cdq
adc
push
aam
(bad)
(bad)
scas
outs
lea
fsubp
pop
xor
mov
jbe
mov
and
push
pop
rcr
ins
mov
test
loopne
mov
or
pop
out
out
mov
jle
xchg
popa
pop
pop
ja
bound
mov
and
std
xchg
dec
das
jmp
pop
pop
push
rcl
nop
push
ds
test
out
jnp
rcl
pop
pop
inc
push
dec
inc
jmp
xchg
jne
mov
dec
mov
call
and
test
test
xor
pushf
shl
out
pop
std
fdivr
in
cmp
xchg
pop
mov
stos
cmp
or
(bad)
xor
test
loope
(bad)
mov
pop
adc
clc
add
push
sub
outs
fisttp
pop
outs
mov
(bad)
loopne
push
add
jnp
mov
adc
mov
pop
daa
mov
cdq
inc
add
push
cmp
ss
loopne
mov
and
out
repz
scas
push
loopne
mov
adc
push
mov
cli
push
push
fsub
repz
test
int3
aas
pop
pusha
fnstcw
dec
mov
lods
xchg
popa
mov
or
repz
in
sub
add
pop
fs
cmc
cli
pop
cdq
dec
adc
add
jbe
cmp
cs
inc
mov
xor
aas
cld
pop
enter
push
daa
adc
data16
mov
pop
cmp
rol
cmp
icebp
pop
add
jb
mov
add
(bad)
push
sbb
fimul
pop
out
repz
dec
or
dec
xchg
xor
sbb
mov
aaa
jmp
xchg
inc
xor
xchg
or
(bad)
into
ja
dec
(bad)
sub
xor
retf
mov
pop
xor
adc
and
mov
mov
or
lds
fs
jecxz
mov
pop
loope
test
mov
mov
add
lds
xor
mov
pop
jo
cmp
push
pop
xor
add
push
(bad)
jmp
sbb
pop
or
stc
(bad)
mov
loop
fstp
ror
mov
or
mov
xchg
das
fmulp
(bad)
mul
mov
dec
leave
mov
push
sbb
push
jb
shr
jp
xchg
xchg
ins
movs
sub
outs
sbb
and
pop
mov
push
or
shl
dec
or
adc
mov
fsub
popa
out
push
daa
mov
fst
mov
sbb
cmp
rol
pop
dec
push
push
dec
cwde
daa
aad
out
pop
scas
in
push
repz
mov
int3
and
xchg
shl
pop
mov
push
mov
mov
clc
test
test
adc
add
xchg
mov
sub
or
sbb
or
aam
sub
in
add
fcom
fdivr
xchg
mov
xchg
bound
push
lahf
mov
ficomp
adc
mov
ja
loope
and
push
jg
ficomp
jb
mov
fcomp
scas
cld
pop
cdq
in
(bad)
or
rol
out
adc
xlat
neg
jmp
jg
cmc
xchg
inc
adc
std
loope
scas
movs
pusha
cld
lods
dec
push
mov
test
pop
retf
sub
popa
sub
mov
jo
in
mov
jl
add
xor
fisttp
es
push
mov
int3
and
sub
adc
test
mov
mov
sbb
repz
outs
nop
arpl
pop
scas
jge
(bad)
call
or
push
lock
xor
cmp
cmp
and
push
cmp
leave
int
and
loop
xchg
call
stos
xchg
cmps
push
ja
jno
int
retf
mov
scas
loop
adc
js
mov
sub
xchg
ins
sbb
or
cld
cmp
shl
add
mov
mov
lods
pop
mov
push
ss
mov
ficom
out
or
pop
pop
xchg
lahf
push
or
mov
lahf
leave
fsubr
js
enter
aas
push
pop
xchg
push
cmp
mov
stc
xchg
xor
fcomip
stc
leave
shl
cmp
or
jp
adc
test
mov
mov
jg
xor
lods
mov
out
inc
and
enter
leave
sbb
jne
ins
cli
sub
jne
aam
popa
xchg
ret
add
std
dec
mov
or
ffreep
sti
out
xor
mov
adc
rol
inc
shl
ins
and
adc
leave
into
loopne
aas
fs
dec
adc
data16
dec
add
pop
dec
aaa
sbb
cmp
js
or
sbb
inc
inc
aaa
(bad)
out
lock
mov
test
xor
jo
icebp
(bad)
jb
mov
cmp
lods
cli
shr
xchg
pop
shl
imul
adc
setne
leave
outs
push
cmp
inc
lods
jmp
push
xchg
mov
mov
in
aam
je
jl
xchg
mov
mov
inc
jbe
mov
(bad)
out
mov
loop
int
fcomp
aas
addr16
mov
push
pop
mov
pop
mov
sbb
push
(bad)
fbld
fild
out
mov
xchg
iret
mov
(bad)
cmp
adc
adc
pop
shl
(bad)
mov
lock
xor
inc
jg
out
lods
cmps
stos
imul
shr
xor
jnp
cmp
je
sbb
shr
(bad)
popa
push
iret
and
mov
loope
xchg
into
cmps
xor
ds
xor
fwait
(bad)
mov
mov
cdq
xor
mov
add
jp
arpl
mov
cmps
fcomp
xchg
test
and
aad
data16
push
xchg
fstp
xchg
cmps
loop
fstp
shr
dec
add
imul
jne
mov
xlat
dec
out
adc
mov
jl
int
je
and
cmc
aad
test
ficom
or
and
stos
(bad)
xchg
(bad)
and
iret
mov
jne
push
xor
popa
arpl
dec
push
push
jbe
jg
cld
push
inc
or
je
retf
test
add
inc
inc
shr
jnp
jg
sbb
add
call
mov
xchg
push
hlt
lea
retf
pop
mov
mov
les
arpl
mov
cmp
(bad)
jae
(bad)
push
test
sti
sub
inc
mov
push
ins
or
test
cli
in
addr16
fild
cmps
pop
cld
ins
leave
and
dec
or
gs
pop
xchg
jl
push
fcomp
adc
mov
ficomp
bound
push
pop
xchg
pop
lea
push
sbb
nop
mov
inc
test
pop
adc
ss
(bad)
cmp
aaa
xor
je
push
sub
mov
dec
stos
pop
jno
test
push
jns
pop
jo
pop
inc
push
lds
cmp
lock
cmc
inc
test
in
push
adc
adc
pushf
aas
ret
jns
mov
jbe
inc
adc
dec
add
rol
push
mov
adc
dec
push
mov
pushf
mov
push
add
jno
out
xchg
test
test
cmp
add
xor
pop
jb
mov
je
ror
add
xchg
push
add
cwde
and
clc
fisubr
(bad)
mov
mov
add
and
icebp
outs
daa
adc
or
sbb
jecxz
mov
push
popw
mov
addr16
(bad)
sub
push
imul
fwait
scas
jb
cmc
ds
(bad)
std
lea
scas
repnz
adc
jne
(bad)
xor
xchg
imul
mov
test
mov
repnz
cmp
pusha
aad
outs
adc
loope
push
call
int
inc
adc
(bad)
xor
pop
xchg
mov
dec
js
sbb
les
das
ins
cmp
mov
add
sub
sub
cmp
jle
lds
outs
movs
outs
xor
and
ror
repnz
jl
sub
js
out
loope
inc
shr
push
xor
mov
adc
xor
loopne
stc
mov
lods
ins
xor
iret
ret
pop
xchg
call
les
push
sbb
jne
gs
test
ret
and
in
nop
pop
jge
cs
xor
test
push
retf
cmps
xlat
push
add
add
out
push
dec
loop
mov
fidiv
mov
jmp
mov
and
sbb
xchg
cdq
mov
leave
push
mov
ss
mov
push
or
mov
test
dec
pop
xchg
add
jb
jg
jbe
mov
aam
leave
mov
mov
or
sahf
dec
je
out
sbb
lock
lea
mov
or
and
call
scas
sti
mov
pop
cli
jge
adc
mov
inc
outs
add
shl
adc
call
lds
mov
out
sbb
pusha
dec
and
adc
jl
icebp
mov
ss
inc
sub
mov
popa
gs
cli
call
push
inc
mov
repz
aam
je
mov
jge
and
mov
in
and
xor
pop
add
inc
pop
int3
gs
ins
es
jge
ret
push
inc
and
rcl
(bad)
push
cmp
ins
ficom
sbb
bound
xlat
sbb
cmc
and
scas
(bad)
mov
jmp
xor
inc
mov
xchg
jnp
xor
adc
out
jg
pop
jp
jg
inc
ja
pop
mov
shr
cmp
nop
leave
cmp
push
fcom
sub
mov
jge
or
push
stos
and
stos
pop
push
mov
ja
dec
mov
(bad)
add
push
pop
je
xor
xchg
outs
mov
dec
or
xor
shl
aad
mov
clc
out
mov
fistp
scas
mov
pop
sbb
cmps
addr16
int
shr
mov
sar
out
xor
test
mov
pop
imul
(bad)
scas
shr
pop
sar
add
js
retf
inc
inc
retf
and
sbb
loop
(bad)
jmp
mov
jge
mov
push
adc
cmp
dec
push
(bad)
jge
pop
cmp
dec
cmp
xor
out
outs
cmp
dec
lds
dec
clc
xor
addr16
mov
mov
pop
(bad)
cmp
adc
pop
fldz
bnd
xchg
movs
iret
adc
xor
mov
ret
add
das
xor
rcr
mov
loop
mov
cmp
mov
inc
mov
add
xchg
test
or
xchg
ja
fnsave
mov
adc
adc
jmp
inc
add
jp
repnz
pop
cmp
ror
jmp
ja
inc
inc
test
pop
push
add
dec
sbb
movs
push
in
sti
idiv
and
inc
pop
jmp
fdiv
jae
dec
inc
lds
iret
pop
mov
cmp
pop
or
cli
mov
idiv
jno
out
(bad)
ror
shl
add
or
sbb
outs
dec
gs
icebp
cmp
jo
or
dec
aam
xor
test
sub
sub
push
sahf
cmc
pop
adc
inc
and
fld
jle
mov
cmps
icebp
fiadd
btr
pop
push
popf
and
push
jmp
sti
mov
xchg
pop
sub
xor
movs
vmovhpd
push
or
mov
into
test
sbb
adc
shl
outs
ror
call
and
arpl
out
or
lods
addr16
mov
mov
aad
rcr
add
mov
pop
cs
ins
and
call
lahf
ins
ret
sbb
mov
in
pop
popa
cdq
or
jl
sub
into
stos
dec
or
or
repnz
add
ret
xchg
mov
in
mov
mov
ret
sbb
syscall
imul
js
fcmovnu
jo
pop
jl
adc
pop
aad
cs
nop
or
xchg
(bad)
es
stc
sti
xchg
dec
sbb
inc
or
test
sahf
mov
sub
xchg
and
ss
pop
ins
xlat
pop
sahf
fisttp
dec
call
scas
mov
stc
fsubp
jp
sbb
dec
jg
aam
mov
fdiv
cmp
fiadd
int3
test
xor
inc
js
adc
jbe
pop
and
out
rcl
cmp
ror
stc
adc
cmp
fcomp
jp
jle
xchg
or
stos
ss
repnz
push
mov
ins
adc
loopne
mov
ins
fs
pop
loop
mov
je
(bad)
mov
mov
out
cmp
sbb
mov
mov
sub
fs
mov
xchg
xchg
xlat
mov
push
neg
pop
outs
jg
fsubr
push
inc
ins
mov
add
cmp
movs
xchg
jg
sbb
xchg
or
mov
leave
mov
outs
ja
jmp
ja
aaa
in
pop
mov
pop
xchg
(bad)
(bad)
fwait
sar
fwait
sbb
mov
cmp
enter
test
pusha
aad
xor
jae
jecxz
loop
adc
mov
cmp
es
fnstcw
nop
xor
pop
xor
mov
mov
sub
push
loop
sbb
outs
into
sub
xor
jns
je
in
push
hlt
(bad)
and
mov
mov
push
cmovne
mov
loope
cmps
sub
mov
jp
inc
std
adc
js
sbb
pop
iret
pushf
mov
shl
fxch
mov
fild
sub
mov
mov
mov
rcl
nop
js
xlat
rcl
in
ins
popa
push
jp
sub
xchg
out
sub
lahf
nop
add
sbb
jno
push
add
push
fcmove
push
addr16
in
mov
adc
js
(bad)
cmps
aaa
push
push
mov
or
sbb
push
jp
mov
cli
push
hlt
cmps
jl
in
push
add
or
and
cli
shr
(bad)
and
fwait
dec
outs
adc
or
jne
fs
(bad)
daa
mov
xor
push
iret
retf
(bad)
cmp
sar
test
cmp
daa
stc
cli
pushf
push
or
push
out
jnp
popf
mov
cmp
xchg
sar
scas
push
cmps
fdivr
fisttp
in
add
mov
xchg
add
or
push
popa
or
fisttp
psrlw
(bad)
fldcw
shl
cld
ror
in
push
push
xor
mov
(bad)
xor
push
mov
or
dec
repz
imul
pop
lock
jle
or
aaa
mov
cld
pop
ficomp
xor
dec
pusha
cwde
shl
(bad)
pop
imul
jbe
sar
mov
sub
cmp
jg
cwde
pop
jmp
xlat
mov
call
je
lods
jg
inc
outs
jne
and
adc
and
xor
inc
imul
push
xchg
stos
rcr
gs
loopne
xchg
stos
jns
dec
mov
lods
aaa
hlt
ficom
xchg
adc
and
add
xchg
fstp
(bad)
ins
mov
cmp
enter
lea
retf
dec
jmp
dec
aad
mov
cmps
and
mov
pushf
pop
xor
into
jo
fimul
lea
mov
jo
add
cs
repz
lock
push
inc
mov
call
adc
pop
(bad)
lahf
je
ror
or
ja
arpl
adc
xor
daa
test
sbb
cmc
inc
pushf
add
shl
ds
lods
std
cmp
jl
(bad)
cmps
push
dec
jns
add
mov
sub
ret
div
(bad)
dec
imul
(bad)
scas
call
adc
fsubr
mov
(bad)
call
leave
cdq
pop
cmp
pop
sbb
mov
or
cdq
(bad)
jg
or
daa
pop
xchg
xor
fst
and
out
pop
xor
mov
dec
xchg
add
sub
or
push
stos
in
sub
jno
xchg
stos
popf
out
mov
mov
sub
or
inc
test
jmp
cmc
pop
aaa
call
cld
ins
(bad)
int
pop
or
scas
ss
cmp
jnp
cli
nop
cmps
mov
mov
movs
push
ja
cmp
push
mov
ja
out
cs
xor
cmps
sbb
cmp
adc
sub
js
cdq
nop
sbb
pop
(bad)
cdq
inc
push
mov
push
jmp
fbld
cmps
dec
pop
inc
xchg
jge
jae
pop
std
xor
push
xchg
popf
call
mov
mov
ins
mov
daa
(bad)
pop
in
dec
pop
lock
clc
push
cmp
mov
dec
enter
xchg
mov
lods
leave
call
xlat
or
lea
es
or
and
adc
pop
add
add
xchg
jmp
in
dec
push
and
(bad)
in
out
pop
fnsetpm(287
shl
xlat
pop
pushf
sbb
fs
aad
cmp
inc
pop
pop
mov
call
push
shufps
and
and
push
xor
adc
fist
add
in
in
(bad)
jge
fmul
out
sbb
repnz
cmc
sbb
push
into
mov
pop
xchg
fwait
mov
mov
(bad)
enter
or
pop
dec
cmp
loop
stc
mov
mov
or
push
pop
leave
cmc
sbb
sbb
rol
cmps
push
retf
inc
xor
mov
les
lea
lods
sbb
call
inc
in
pop
out
mov
sti
ja
mov
jmp
inc
inc
rcr
repz
stos
enter
cmp
push
repnz
mov
dec
adc
sub
inc
jecxz
jmp
lods
push
cmps
mul
pop
jbe
mov
xor
mov
sahf
sbb
xor
hlt
cmps
fistp
stc
pusha
(bad)
pop
mov
dec
sub
data16
idiv
call
mov
mov
push
push
mov
fisttp
in
imul
mov
or
shl
dec
fistp
loopne
test
icebp
call
ins
fidivr
iret
int
sub
scas
movs
adc
cmps
push
daa
add
fild
ins
fstp
add
outs
mov
je
and
add
pop
popa
mov
aam
icebp
outs
jmp
clc
popf
shl
out
push
mov
or
jo
or
push
nop
mov
dec
ss
iret
icebp
gs
mov
test
mov
fbstp
mul
ins
sbb
xchg
push
and
fwait
push
adc
test
movs
rcr
fsub
add
repz
jge
and
inc
call
push
pusha
ret
loopne
mov
cmps
out
mov
adc
ja
ror
mov
sar
test
stc
add
xchg
push
push
mov
clc
fiadd
adc
pop
pop
scas
ins
adc
stos
(bad)
sbb
shr
dec
ss
das
push
(bad)
adc
adc
add
out
xor
ins
or
mov
mov
xchg
mov
stos
enter
mov
enter
aam
(bad)
mov
mov
mov
mov
daa
js
ins
mov
adc
aaa
je
jp
test
add
dec
enter
loop
(bad)
xlat
mov
pusha
mov
mov
test
ins
sbb
sbb
dec
ret
cmp
scas
dec
outs
fnstcw
mov
stos
out
bnd
or
fstp
(bad)
jmp
cli
pushf
movs
ror
or
mov
jno
fdiv
pop
lea
jle
sar
cmp
nop
jg
dec
dec
inc
jns
shl
xchg
dec
data16
sub
push
push
mov
mov
sbb
xor
test
sub
mov
stos
dec
std
(bad)
scas
add
in
popa
cmovg
jbe
xor
add
lock
mov
add
dec
jne
stos
mov
inc
call
lahf
mov
pop
or
pusha
int3
xchg
xor
xchg
loope
call
fidiv
xchg
jecxz
push
test
or
fucom
jecxz
clc
pop
lea
js
adc
and
(bad)
scas
mov
ret
outs
loopne
inc
test
add
cdq
ja
add
repz
imul
arpl
adc
jns
dec
pop
retf
jnp
cmps
stos
cmp
out
push
ss
pop
sbb
sub
mov
sbb
(bad)
out
test
adc
jle
and
in
dec
ret
pop
push
adc
and
cmc
lea
in
(bad)
push
sbb
jle
sub
push
loopne
and
into
push
call
pop
jl
xchg
mov
pop
mov
fcomp
add
retfw
mov
repz
mov
dec
push
inc
xchg
popf
in
(bad)
stc
mov
or
cmc
aad
cmp
pusha
js
fbstp
mov
jno
add
cmc
addr16
cmp
sti
ins
les
cmps
loopne
dec
enter
iret
jecxz
sub
jecxz
mov
or
push
dec
or
fsubp
add
mov
pop
aad
je
jo
jno
push
stos
fiadd
mov
(bad)
push
xor
push
sar
or
data16
in
mov
xor
jae
mov
jg
loop
mov
js
fwait
test
aaa
loopne
sub
xor
call
dec
ficomp
xor
sub
sub
adc
xchg
loope
xor
sub
jl
pop
popa
daa
scas
cmp
inc
icebp
sbb
(bad)
jbe
sub
leave
mov
out
pop
dec
pop
adc
leave
mul
fsub
arpl
call
mov
enter
jge
mov
push
das
js
jns
add
mov
or
add
xchg
push
jns
dec
jmp
je
popa
fist
movs
push
jmp
hlt
out
jno
in
inc
jl
dec
cmp
add
jg
sbb
call
idiv
scas
sar
test
pandn
stos
jecxz
mov
xchg
or
jle
loop
mov
mov
lods
or
data16
ins
int
sub
cmp
stos
mov
bound
(bad)
outs
sbb
xchg
sub
mov
push
imul
fs
cmp
ror
xchg
mov
mov
iret
sub
fisub
loop
mov
adc
or
pop
jge
dec
test
aaa
pop
jge
dec
mov
add
add
fwait
(bad)
fdiv
sar
dec
or
and
aaa
jno
lods
fadd
(bad)
jecxz
mov
je
mov
jmp
(bad)
imul
cmp
xor
jnp
retf
out
inc
sub
and
mov
cmp
pushf
jmp
push
iret
push
scas
rol
sub
jmp
push
sub
pop
pop
xchg
repnz
mov
popf
nop
ss
iret
hlt
xlat
mov
add
aaa
sbb
rcl
mov
sbb
sub
aam
push
or
inc
or
leave
(bad)
sub
int
sbb
popf
add
push
mov
imul
idiv
cmp
dec
adc
int
scas
cmps
(bad)
repz
jmp
mov
mov
rcl
movs
adc
out
sbb
call
leave
pop
loope
mov
pop
adc
mov
rcl
mov
push
cdq
sbb
cmp
pop
dec
jbe
sub
mov
or
push
xlat
fnstenv
fist
icebp
cmps
sahf
pushf
xor
mov
lods
mov
mov
movs
dec
mov
sar
mov
push
gs
push
cmovs
sbb
mov
stos
cmp
mov
jns
imul
shl
inc
out
sar
xor
jp
mov
or
lds
adc
lds
dec
fst
sub
dec
mov
dec
stc
in
sbb
pop
rcr
and
jmp
mov
push
movs
mov
adc
adc
xchg
out
mov
cmp
or
mov
rol
xor
inc
addr16
sar
dec
cmps
jg
dec
mov
jl
cmp
sti
dec
add
push
sahf
ret
or
add
daa
jne
mov
fs
add
(bad)
lock
pop
jne
xor
mov
jb
jne
xchg
mov
mov
sbb
inc
pushf
les
out
xor
jle
int3
add
pop
push
ja
push
inc
rol
iret
mov
cli
imul
mov
repz
std
retf
cmp
mov
sahf
sbb
lods
(bad)
loopne
pop
jmp
pop
jb
mov
das
lods
in
add
sar
push
je
aam
or
mov
xor
pop
es
(bad)
ja
push
and
mov
adc
loope
cmp
xchg
scas
cmps
enter
mov
push
je
loopne
mov
lahf
and
mov
push
enter
bound
jb
in
enter
aam
aam
out
fild
mov
in
pop
iret
outs
sti
idiv
inc
aam
cwde
add
mov
add
xchg
xor
test
mov
pop
sbb
cmp
push
jno
loopne
out
ret
sbb
ja
inc
lods
ja
add
stos
out
mov
retf
or
sbb
jns
jle
cli
movs
lods
mov
int
and
ret
into
mov
or
loopne
hlt
xchg
loop
in
shr
mov
or
pop
cmp
sti
jle
addr16
mov
repz
rcr
push
adc
mov
js
pop
mov
pusha
push
test
scas
(bad)
mov
push
rol
pop
mov
adc
and
push
mov
jo
cmps
pop
push
or
loope
pop
jmp
ds
mov
cmp
sahf
push
mov
pop
mov
call
jmp
dec
hlt
and
sub
call
not
mov
jl
into
mov
cld
push
leave
loop
dec
shl
jmp
push
add
sahf
retf
call
pop
xor
jbe
movs
sahf
jo
add
lds
xchg
dec
mov
sbb
pop
mov
aas
(bad)
fdiv
mov
push
int3
movs
cmps
mov
sbb
fstp
(bad)
std
xchg
pop
mov
or
sbb
call
add
stc
test
inc
cmps
retf
sub
dec
sti
in
or
out
mov
pop
jne
cmps
into
popa
hlt
lods
xchg
mov
ficomp
cmc
lea
push
xchg
fisubr
das
out
aad
and
test
dec
add
add
jecxz
xor
sbb
xlat
das
mov
mov
mov
or
or
jmp
icebp
xchg
jne
cmp
dec
icebp
out
data16
lods
add
xchg
mov
int3
jbe
and
(bad)
loopne
daa
pop
pop
push
cmps
ret
dec
add
xchg
xchg
mov
xor
inc
adc
dec
daa
inc
scas
push
add
jb
sti
into
or
pop
cmps
add
sahf
je
mov
cld
pop
or
ret
pop
mov
imul
mov
cli
cmp
dec
sahf
add
fisttp
(bad)
pop
mov
cmp
dec
or
add
xchg
sub
scas
adc
sbb
add
inc
mov
jp
loopne
and
dec
popa
push
ret
mov
cli
cmp
xor
pop
mov
jmp
cmps
sub
xchg
cmp
and
mov
ret
push
sti
ficomp
sub
call
sbb
dec
(bad)
(bad)
dec
int3
pop
hlt
cmps
stc
mov
shr
mov
in
cld
mov
stc
nop
cmp
stos
or
mov
xor
test
sub
(bad)
pop
jmp
std
pop
jp
push
aas
pop
push
retf
outs
shl
or
(bad)
idiv
or
xor
ret
or
lods
push
daa
(bad)
fimul
addr16
adc
in
pop
jp
in
mov
les
sbb
pop
and
adc
int
rcl
jnp
out
adc
repz
mov
pop
cdq
out
mov
jbe
in
dec
in
xchg
jg
xchg
mov
xor
mov
je
adc
mov
in
jmp
add
xor
jg
(bad)
das
inc
xchg
inc
push
sbb
push
pop
arpl
stos
(bad)
imul
sub
cmc
xor
scas
je
jbe
ja
or
pop
pop
call
imul
adc
push
mov
call
mov
add
dec
cmp
mov
out
sbb
xor
pop
rcr
push
xchg
stos
or
sti
div
mul
inc
mov
sub
push
jle
call
ret
pop
jge
xor
push
dec
lds
sahf
sub
cdq
adc
dec
movs
push
mov
add
adc
sbb
fmul
popf
aas
xchg
mov
mov
sub
cmp
out
jmp
adc
mov
jg
jbe
add
addr16
dec
mov
inc
push
shl
and
push
jmp
pop
fnsave
neg
enter
lock
dec
jno
test
cli
test
je
mov
cmp
ins
fnstenv
pushf
in
outs
jle
idiv
js
xchg
clc
arpl
inc
push
popa
xchg
inc
dec
test
sti
icebp
das
mov
fs
mov
data16
int
addr16
sub
cmps
lods
fild
and
adc
call
mov
xchg
(bad)
mov
cmps
(bad)
ficomp
cmc
frstor
or
jbe
loopne
or
clc
mov
jg
(bad)
stos
mov
xchg
enter
loop
fchs
xor
loopne
add
push
(bad)
sahf
int
inc
out
jp
push
xor
test
in
je
into
mov
or
jmp
dec
mov
mov
ins
lods
push
es
and
fimul
es
loopne
mov
rcl
call
and
das
cmps
or
push
add
inc
cmp
into
push
and
xchg
lds
pushf
cmps
nop
into
dec
cdq
js
aad
je
xchg
adc
rcl
jae
pop
xchg
mov
mov
rcr
cmps
je
mov
arpl
int3
sti
jp
(bad)
jmp
(bad)
mul
mov
adc
mov
mov
push
sub
(bad)
test
fwait
jg
mov
mov
inc
lea
inc
mov
pushf
je
data16
imul
jns
add
imul
xor
jns
adc
and
jp
sbb
rol
je
pushf
mov
xor
pop
lods
addr16
jnp
mov
push
pop
stc
sti
dec
or
inc
scas
pop
test
jne
ffree
adc
outs
xchg
cmps
in
cmps
xchg
mov
ret
inc
inc
fdivr
in
and
mov
push
adc
fs
mov
push
je
stos
sub
dec
add
mov
nop
outs
stos
es
pop
jbe
shr
jae
dec
cmp
pop
arpl
mov
fild
int3
cmp
add
cdq
into
mov
mov
xchg
dec
xchg
jno
or
pushf
cmp
inc
ret
push
adc
sbb
or
jg
pop
add
test
add
movs
xor
sub
sub
xchg
mov
int3
xor
jle
leave
es
out
dec
mov
xor
ds
xchg
aaa
jne
stos
out
arpl
mov
or
dec
imul
enter
sub
ret
cmps
mov
pop
popa
sub
jmp
cmp
sub
neg
and
sub
jns
xor
mov
jecxz
add
xor
adc
and
cdq
inc
cdq
(bad)
xchg
jmp
inc
je
fstp
sti
and
push
mov
fsubr
or
sub
pop
stos
lods
ss
mov
std
fild
jmp
call
int
mov
dec
lock
cld
jl
cdq
jge
xor
pop
push
and
jecxz
es
and
test
fdivr
xchg
cmps
inc
xchg
mov
sub
cmp
int3
fst
call
sub
pushf
imul
jo
jg
mov
xor
jle
jecxz
jae
pop
ins
test
or
push
sbb
stos
add
iret
add
mov
aas
cli
adc
jge
pop
mov
stos
jb
jne
add
and
mov
pop
je
std
mov
fist
aaa
mov
sbb
std
rcl
data16
(bad)
test
fcomi
shr
imul
push
int
mov
jmp
dec
hlt
cmp
sbb
adc
inc
xor
sub
int
jmp
pop
mov
inc
mov
aad
mov
jecxz
(bad)
sub
les
mov
dec
xor
fst
jecxz
repz
ficomp
xlat
fild
mov
mov
and
sub
mov
(bad)
and
aad
mov
rol
cmps
ins
mov
sbb
cmp
push
(bad)
add
daa
cli
or
outs
bound
add
push
imul
inc
mov
stos
repnz
sub
sbb
fist
stos
inc
lea
ss
push
mov
pop
out
push
dec
aas
inc
pusha
inc
imul
sub
repz
cmp
movs
mov
xchg
sbb
pop
cmp
jo
xor
push
xor
add
xrelease
fidivr
fsub
mov
push
pmaddwd
and
push
sbb
jnp
mov
fmul
pop
fistp
or
fiadd
fs
sub
lahf
jnp
imul
repz
(bad)
in
imul
cdq
popf
fstp
in
clc
rcl
clc
loope
adc
lods
test
ss
xchg
xchg
aaa
jl
imul
mov
inc
inc
ja
mov
push
call
push
add
xor
int
mov
push
pushf
jmp
sub
aaa
call
out
cmp
jnp
jo
retf
lods
jne
hlt
cmp
es
jle
pop
push
cmps
xor
push
in
push
and
fisttp
push
or
jp
inc
ins
fwait
cmp
call
mov
in
jo
push
sbb
lods
sbb
outs
pop
push
xchg
cmc
jmp
fwait
aad
into
mov
enter
cmps
or
loopne
jle
sar
pop
jl
cmp
add
adc
jg
retf
ror
and
add
out
call
(bad)
call
sbb
mov
cmp
cdq
lahf
add
xlat
mov
adc
js
xchg
sbb
popf
inc
outs
inc
cmp
adc
mov
stc
or
test
mov
inc
scas
dec
cmc
mov
dec
out
fnstcw
shl
xchg
mov
xor
aas
shl
hlt
adc
sbb
mov
cdq
add
in
in
retf
xor
inc
fcom
pop
xor
je
mov
aas
mov
test
push
repnz
aas
pop
pop
and
or
mov
movs
xchg
dec
mov
jmp
ins
loopne
jne
scas
movs
jbe
xchg
in
jo
push
es
bound
and
adc
push
cmp
push
inc
inc
or
jne
pop
pop
test
or
mov
cmp
sbb
mov
imul
pop
test
pop
add
adc
xchg
leave
lods
push
jmp
xchg
push
pusha
jne
call
std
dec
in
rcl
dec
inc
mov
mov
fidiv
rcl
mov
in
xor
push
pop
dec
ror
(bad)
push
mov
nop
mov
or
popf
sub
out
sbb
mov
mov
sbb
inc
mov
add
ror
jbe
add
fsub
mov
(bad)
mov
xchg
push
leave
out
xchg
xchg
mov
pop
test
shr
pop
ds
test
ret
sub
int3
lods
mov
fwait
out
(bad)
das
ins
rcl
xchg
leave
mov
leave
mov
pop
sti
cld
retf
call
out
addr16
or
inc
add
push
es
sti
fisub
stc
pop
push
xchg
adc
cmc
out
mov
xor
cwde
psubsw
inc
jmp
neg
push
dec
fwait
or
push
shr
and
xchg
mov
ficomp
xchg
fisttp
cwde
into
cmp
ds
cmp
mov
inc
movs
pop
adc
push
mov
push
mov
sbb
sub
mov
clc
cs
ins
test
das
cmp
or
and
cli
fs
nop
fld
es
popf
inc
cld
jecxz
mov
push
mov
cs
call
lea
loop
stc
(bad)
or
popf
out
fsub
mov
mov
fmul
mov
push
mov
xchg
rcl
call
js
and
xor
cdq
inc
cmp
xchg
jl
in
mov
das
sub
mov
or
je
mov
aas
int
sbb
jb
push
xor
adc
ja
push
aaa
test
data16
xchg
cmc
jae
jbe
and
fstp
xchg
lods
dec
jle
push
fst
iret
fistp
jmp
xchg
mov
test
sbb
cdq
mov
sbb
pop
cmp
in
cdq
push
in
into
dec
sub
add
(bad)
loopne
cli
sbb
iret
popf
jp
sbb
pop
inc
xchg
jmpw
shl
push
cmp
in
add
out
mov
jo
retf
cmp
mov
and
test
enter
call
jbe
inc
fbstp
jmp
xlat
xchg
push
jge
and
mov
dec
push
ja
ss
jmp
xor
pop
pop
or
dec
and
xor
aas
out
mov
out
das
mov
in
aam
xchg
popf
dec
aas
push
adc
mov
pop
jbe
loope
xor
inc
dec
into
cmp
or
sbb
mov
fistp
test
mov
mov
aas
loop
jmp
xor
test
int3
fld
jns
adc
test
inc
ins
(bad)
lahf
mov
fwait
inc
push
adc
mov
inc
mov
and
cmp
(bad)
mov
pop
cwde
(bad)
push
add
jge
jae
fisttp
push
ror
dec
icebp
dec
jmp
repz
inc
retf
mov
pop
shl
or
mov
(bad)
jno
repnz
(bad)
sbb
dec
stos
sbb
stos
bound
popf
cmp
push
xlat
xchg
and
rcl
xor
in
xor
popa
data16
jp
pop
push
fdiv
das
or
adc
int3
pop
outs
test
xchg
ins
push
xchg
push
ins
cmp
dec
adc
out
arpl
out
lods
sub
cmc
jge
mov
mov
and
xchg
loope
mov
xlat
test
xor
ficom
call
push
inc
ins
stos
int
pop
aad
jge
sub
std
push
ss
ficom
rcr
mov
add
push
shl
adc
lods
pop
push
ret
adc
cmp
adc
call
pop
jg
fild
push
in
adc
cmps
hlt
xchg
imul
xor
ins
adc
mov
jl
add
xor
pusha
test
mov
sbb
pop
stos
mov
mov
in
dec
(bad)
xor
std
dec
not
or
je
test
ret
mov
add
popf
adc
out
pop
int
add
xchg
cmp
adc
xor
mov
mov
jge
inc
shr
rcr
arpl
fiadd
and
ficomp
sbb
cld
mov
inc
mov
out
dec
popf
enter
xchg
aam
xchg
aam
dec
mov
cmc
ret
out
push
push
inc
push
loopne
push
mov
sbb
pop
into
fsub
jo
retw
inc
dec
xchg
dec
(bad)
js
cld
(bad)
mov
and
adc
jmp
dec
sbb
adc
out
jle
ror
add
or
(bad)
stos
js
or
xor
out
popf
movs
mov
jb
adc
mov
in
or
xchg
pop
pop
mov
jge
adc
pop
sbb
dec
inc
lock
pusha
xor
ins
cld
mov
inc
ret
mov
sbb
sbb
dec
fmul
addr16
xchg
(bad)
bound
mov
lds
sti
aaa
addr16
and
fucomi
loope
inc
sbb
pop
fsubp
movs
(bad)
cwde
mov
pop
xchg
mov
stc
lock
mov
add
fld
jge
ja
add
shl
cmp
push
retf
loop
and
sub
lds
cli
push
push
cwde
test
cmps
push
push
std
sub
inc
push
mov
adc
mov
jmp
pop
cs
and
push
mov
mov
sbb
jmp
(bad)
cmp
inc
inc
cs
jmp
mov
in
repz
imul
jo
loope
xor
mov
es
mov
or
sub
pop
dec
lods
movs
mov
gs
int
popf
movs
jp
std
lods
aam
enter
shl
rcr
mov
aam
fadd
pop
ror
jo
xchg
push
and
call
pop
mov
clc
xor
jg
pause
push
mov
add
sbb
push
xor
cmp
xor
push
and
enter
and
lods
sub
mov
dec
inc
ins
shl
jle
cli
stc
out
jmp
push
pop
ret
popa
jmp
cmp
sar
xchg
xchg
test
jns
xchg
cmp
mov
dec
mov
cld
fmul
push
shl
xchg
pop
mov
dec
or
imul
and
lods
pusha
retf
jbe
cmp
cmp
(bad)
fidivr
out
mov
outs
int3
test
leave
dec
in
push
addr16
xchg
dec
addr16
jno
(bad)
xor
mov
mov
jecxz
test
push
int
cmps
jno
and
ret
mov
ret
xor
add
jnp
or
xor
aam
retf
push
stos
in
retf
dec
push
mov
sbb
add
scas
nop
(bad)
or
cwde
push
xchg
inc
movs
sbb
call
add
pop
les
out
fsub
add
cmp
mov
add
pop
cmps
ret
jg
fwait
mov
int3
add
xchg
in
stc
xor
into
adc
pushf
dec
jecxz
test
int
outs
imul
fsub
push
push
xlat
inc
and
ja
jecxz
xchg
push
push
(bad)
jge
push
(bad)
pop
jg
xor
push
leave
sub
jnp
pusha
(bad)
ja
loopne
mov
popf
aas
cwde
mov
pop
mov
xchg
iret
mov
retf
in
push
mov
sub
push
xchg
xchg
nop
leave
xchg
push
mov
add
lea
pop
outs
fist
or
aaa
jmp
movlps
push
dec
gs
ror
pop
sub
(bad)
js
in
fcom
push
sub
adc
stos
data16
mov
in
sub
int
repnz
cmp
iret
std
test
fiadd
dec
pop
mov
mov
push
icebp
popf
sub
cdq
sbb
clc
push
repnz
cmc
or
add
iret
imul
outs
les
jns
std
mov
adc
ja
dec
mov
call
test
sbb
add
repnz
sub
ficomp
sbb
mov
cmp
pop
pop
mov
mov
addr16
pop
shl
fs
push
jb
cmp
retf
push
sub
mov
xchg
mov
jecxz
cmp
pop
in
pop
xor
push
loopne
mov
retf
les
or
and
fwait
stos
jge
mov
dec
(bad)
jae
or
push
dec
pop
mov
inc
push
test
fisubr
ss
jne
mov
inc
aaa
sub
mov
and
imul
mov
add
adc
or
mov
arpl
mov
push
xchg
jge
nop
or
loop
xchg
xor
mov
cmp
jb
sbb
push
mov
mov
test
lahf
leave
in
hlt
test
das
(bad)
cmps
pop
mov
push
mov
dec
cli
and
out
jno
dec
loopne
cmp
adc
mov
rcl
push
jb
int
out
cld
mov
pop
add
ja
or
jno
ret
(bad)
xor
xor
jne
cld
mov
sahf
jb
xchg
outs
cmp
out
dec
adc
fistp
pop
into
repnz
outs
jnp
dec
push
adc
fmulp
xor
adc
push
xor
mov
in
mov
ins
push
popa
and
(bad)
or
addr16
rcl
cmp
js
mov
popf
push
inc
xor
xchg
mov
test
xchg
cmc
mov
inc
in
push
pop
cld
movs
push
push
and
cmp
jb
xor
inc
and
adc
scas
je
or
lods
(bad)
mov
and
cmps
repz
or
mov
inc
dec
mov
loopne
dec
addr16
fwait
pop
push
mov
xor
cmp
sbb
adc
mov
lock
cwde
jl
sbb
(bad)
sub
dec
into
jbe
push
lahf
aaa
mov
in
bound
mov
push
mov
jecxz
jle
pop
loope
mov
sbb
int3
sbb
mov
jo
or
addr16
pop
mov
mov
daa
dec
inc
add
jne
push
sub
in
xchg
repz
add
fldcw
jmp
enter
add
out
in
and
mov
jnp
dec
adc
leave
aad
jecxz
push
xchg
(bad)
adc
or
mov
inc
xlat
mov
xor
push
shl
cwde
pop
mov
je
add
xor
add
mov
aas
cmp
ret
push
xlat
call
cs
adc
cld
lock
ret
scas
pop
lods
fimul
mov
sbb
data16
jge
adc
mov
out
cmc
mov
ret
adc
add
ds
jmp
shl
lods
sbb
dec
int
push
and
pop
fwait
sbb
cmp
pop
or
jmp
sub
fst
test
cdq
jb
push
sub
pop
nop
sbb
sti
jp
xlat
shl
repnz
or
stos
inc
mov
add
popa
fbld
outs
sub
inc
add
mov
xlat
pop
dec
inc
pop
(bad)
fnsave
fwait
adc
out
ins
push
je
ret
fld
mov
xor
imul
std
xlat
aad
sub
push
ins
into
mov
test
xor
repz
scas
hlt
pop
rcl
dec
fnsave
mov
mov
xchg
or
jo
fiadd
daa
js
aam
or
xor
ret
xlat
add
ins
test
jns
icebp
ins
push
js
fwait
ins
push
pop
xchg
push
adc
int
dec
or
jae
jl
pushf
xchg
les
adc
scas
shr
loop
rcl
inc
push
(bad)
dec
scas
jbe
adc
cs
lods
xchg
sub
rcr
cwde
mov
jmp
mov
fimul
in
add
mov
aas
xchg
mov
sbb
(bad)
adc
or
(bad)
pusha
push
inc
nop
mov
fdiv
cmp
cwde
inc
lahf
test
xor
push
lds
mov
cmps
loope
lock
cmps
pop
(bad)
vminps
jmp
out
hlt
jle
mov
arpl
test
add
adc
ss
jne
add
fld
jge
js
jle
mov
xchg
in
and
enter
jno
sti
sbb
mov
mov
clc
mov
jo
call
and
push
aam
loop
xor
mov
rcr
xor
jo
rcr
sub
leave
inc
mov
cmp
adc
push
in
mov
cmp
adc
loope
cmc
js
dec
test
jae
push
dec
adc
pusha
lock
(bad)
adc
inc
push
ss
and
jg
loope
xor
xchg
cmps
pop
loope
sub
(bad)
pop
mov
or
aaa
dec
xchg
cs
std
or
scas
(bad)
sar
into
sbb
xchg
rcl
dec
in
cwde
xchg
mov
out
imul
call
inc
cmp
jl
ds
mov
xor
scas
mov
mov
adc
sub
lods
xchg
clc
repnz
sub
dec
push
push
mov
pop
fsub
into
aad
mov
repz
shl
xchg
iret
adc
into
data16
xchg
jge
or
or
jecxz
or
xchg
add
daa
sbb
mov
xor
cmp
or
mov
outs
pusha
and
pop
aad
inc
dec
adc
stos
or
stos
out
iret
stos
iret
cmp
iret
aaa
mov
daa
adc
sbb
mov
or
jae
dec
rol
mov
push
ins
outs
and
jae
cmps
dec
pop
pop
mov
push
mov
shl
loope
jnp
ret
push
and
push
cmps
mov
iret
sub
inc
rcr
lods
movs
ja
pushf
jl
xchg
imul
repnz
mov
sub
dec
sbb
leave
outs
add
xlat
push
dec
xor
(bad)
int
mov
call
pop
jns
mov
jl
mov
aad
sbb
data16
leave
stos
sub
in
push
or
xchg
pop
sub
xchg
ficom
dec
inc
fdiv
js
mov
push
or
inc
xlat
lds
gs
sub
cmp
sbb
xor
dec
sub
push
sbb
cmc
int
push
pop
popf
enter
(bad)
int3
nop
out
in
jae
xchg
ret
pop
pop
fiadd
out
xchg
rol
or
movs
cld
nop
jle
in
lds
repz
outs
xchg
pop
scas
jp
mov
or
sub
inc
jge
mov
in
hlt
mov
outs
fdiv
and
div
xchg
mov
imul
add
test
pushf
and
mov
repz
popa
mov
push
pop
ss
in
test
cmc
cmp
sbb
add
aaa
adc
sub
in
cld
add
mov
pop
or
add
call
pop
gs
mov
in
pusha
rcl
or
jmp
scas
gs
pop
add
push
push
pop
into
aas
and
xchg
shr
pop
int3
and
cmp
aad
enter
lahf
(bad)
repz
sbb
pushf
adc
rcr
or
xor
push
out
and
das
cwde
fimul
leave
fcomp
push
adc
sbb
or
in
out
fiadd
fst
sub
add
dec
and
add
xchg
sahf
aaa
out
in
adc
adc
stc
retf
pop
icebp
ret
mov
xor
jo
stos
outs
outs
setb
push
test
stc
pop
lock
jno
rcr
mov
xlat
jp
test
sbb
and
and
mov
mov
pop
adc
or
push
lods
movs
fadd
xchg
add
xchg
mov
jae
mov
sbb
stos
and
xchg
xchg
push
test
or
pushf
cmp
push
outs
jmp
xor
(bad)
jp
lods
ret
add
or
loopne
nop
xor
in
mov
xchg
push
sbb
ficom
jnp
dec
sub
enter
inc
push
sub
push
and
mov
outs
mov
sbb
or
jmp
fcomp
push
jmp
and
cli
mov
push
pop
cmp
or
in
or
cld
push
dec
push
inc
xor
fwait
mov
push
cmp
stos
or
loope
stos
push
xchg
in
xchg
shl
int
add
into
sbb
std
jbe
scas
sbb
nop
sbb
inc
dec
or
dec
cmps
sub
mov
test
adc
jge
aad
mov
and
int
loopne
inc
movs
fist
retf
add
adc
adc
push
out
es
les
out
sub
and
and
or
mov
out
pop
dec
aas
mov
mov
push
or
retf
sar
data16
sar
and
jl
jno
movs
out
adc
aaa
rcr
popf
xor
call
ds
push
fwait
sbb
jnp
leave
getsec
repz
(bad)
(bad)
in
fs
ret
lea
mov
repnz
outs
or
repz
adc
push
and
jns
or
cwde
jp
cmp
stc
stc
sub
mov
inc
sub
int3
call
jle
fsub
(bad)
cwde
pop
retf
(bad)
aam
push
push
inc
(bad)
nop
mov
pop
push
test
push
push
pushf
cld
sub
sbb
dec
pop
ret
jmp
and
mov
pop
repz
push
repnz
pushf
(bad)
repnz
and
mov
popa
push
push
cmps
or
xor
nop
fnstenv
jno
cli
fsubr
inc
sub
inc
cmps
fdiv
jg
cmp
push
dec
jb
pop
(bad)
pusha
jne
xchg
sub
or
fbstp
push
jnp
sti
cmp
ins
popa
adc
cld
pop
sbb
sbb
jo
xlat
daa
rcl
or
jmp
fdivrp
test
mov
lods
into
or
dec
fmul
clc
iret
in
sti
adc
into
sbb
fisub
or
aaa
and
dec
fldenv
jno
sbb
and
ja
ja
sbb
into
fimul
pop
xor
fdivr
or
ins
or
shl
push
cli
pop
mov
rcl
pop
pop
jnp
movs
scas
(bad)
cmp
mov
cmp
xchg
repnz
outs
retf
pop
fisttp
aaa
mov
sahf
fcmovnu
je
int
xor
fwait
jmp
sub
(bad)
enter
cli
pop
mov
outs
cwde
adc
xchg
das
out
fnstcw
lahf
inc
lock
dec
popf
cmp
es
fcomp
into
mov
addr16
and
adc
or
(bad)
jmp
xchg
sub
jne
aaa
xlat
test
loop
mov
push
jns
mov
cmp
xor
lds
and
xor
xchg
inc
ins
sbb
pmulhuw
jae
loop
fbld
dec
movs
lods
sbb
push
sub
jne
xchg
pop
pop
jecxz
ret
(bad)
xor
mov
add
dec
or
jae
call
and
inc
pop
stos
mov
pop
and
cmps
jl
add
cli
(bad)
mov
popa
cwde
sbb
add
push
dec
into
adc
xor
(bad)
jbe
push
test
ins
xchg
or
mov
mov
cmp
mov
add
(bad)
adc
xor
sti
ror
dec
sub
inc
sub
mov
cmp
gs
into
fdiv
scas
sar
pushf
push
aas
cmc
in
lods
cmp
cs
or
jg
dec
mov
pushf
dec
aaa
sub
mov
popf
mov
mov
das
aam
add
xor
xor
loopne
in
push
ret
mov
int
shr
add
loop
ins
mov
lea
jne
rcr
std
mov
or
cs
xor
fnstcw
xor
or
fs
sbb
or
es
jns
les
mov
xor
xchg
pop
mov
sahf
je
fwait
shl
test
add
addr16
inc
push
xor
imul
ss
daa
jmp
inc
lea
retf
inc
pop
int3
arpl
sahf
pop
mov
int3
adc
push
fisub
sbb
jmp
ret
pop
test
cmc
dec
(bad)
mov
jne
sar
cmp
test
sahf
(bad)
frstor
fwait
stos
lock
imul
pop
mov
mov
xor
data16
cmp
fsubr
js
pop
add
ds
dec
push
mov
call
sbb
mov
fs
inc
cs
jp
ja
daa
aad
test
jno
sti
cmp
xlat
pop
test
push
xchg
mov
pop
jmp
fs
or
jno
ins
inc
push
call
pop
jmp
inc
inc
popa
sbb
dec
inc
test
ins
xchg
mov
push
movs
in
loopne
xor
and
enter
pop
push
pop
mov
push
mov
cmp
hlt
sbb
retf
sbb
or
dec
jmp
add
pop
add
jno
in
inc
jns
dec
pop
and
pop
push
in
ret
pusha
cld
xchg
xchg
(bad)
sub
and
push
cmp
test
frstor
mov
inc
jg
add
xor
aad
mov
lods
mov
sub
call
push
fmul
pop
or
pop
push
stc
cmps
mov
(bad)
std
pop
cmp
mov
addr16
push
or
(bad)
ja
jno
inc
leave
jg
mov
jmp
out
pop
repz
data16
sub
jb
adc
or
inc
js
sub
dec
imul
movs
jnp
sub
mov
adc
mov
or
movs
cwde
stc
fld
(bad)
xor
mov
mov
or
imul
enter
iret
pop
fisttp
cwde
dec
xchg
jge
(bad)
xchg
lds
jo
inc
fist
lea
gs
repz
out
inc
adc
pop
je
or
addr16
push
test
call
adc
jecxz
icebp
scas
outs
test
sub
aaa
xchg
icebp
movs
(bad)
dec
mov
push
or
xchg
push
(bad)
mov
fldenv
xor
mov
cmp
pop
cmc
mov
icebp
leave
mov
in
pop
xor
in
inc
ficom
inc
shl
rcl
jp
push
and
in
ret
add
shl
and
(bad)
inc
xchg
xchg
iret
sahf
sti
and
xor
iret
arpl
retf
nop
mov
js
jae
pop
cwde
sbb
add
mov
xor
out
imul
cmp
mov
xor
push
xchg
movs
push
cs
cwde
ret
xchg
ins
mov
fs
ret
mov
test
icebp
lods
les
pop
iret
cdq
or
imul
lods
into
adc
je
aaa
adc
fimul
sar
je
mov
add
jno
mov
retf
xchg
xor
and
out
int3
cmp
mov
call
xlat
sbb
shl
fwait
dec
sbb
sub
das
mov
loopne
stos
xor
mov
inc
dec
ds
iret
fcom
dec
fwait
dec
push
inc
cmp
je
pop
int
call
fdivr
dec
adc
pop
(bad)
stos
push
sub
add
ds
push
add
(bad)
iret
mov
(bad)
jne
daa
out
mov
jmp
leave
adc
js
mov
pop
and
inc
je
mov
int
jp
jno
xor
repz
shr
out
out
cmc
jg
gs
cli
sub
popf
mov
gs
scas
lahf
push
ja
in
pusha
mov
ret
fstp
mov
pop
cld
jge
popf
pop
mov
lods
jge
adc
ret
(bad)
cli
pop
xor
xchg
mov
int
add
mov
mov
mov
cmp
out
int3
icebp
bound
xchg
cmp
mov
mov
test
or
xor
scas
mov
scas
mov
xchg
movs
or
stos
sbb
(bad)
in
retf
shl
pop
push
ficomp
jp
dec
jle
or
jle
lock
mov
push
aad
xchg
test
stc
pop
pop
mov
push
jb
pusha
fisttp
and
xchg
and
adc
inc
pop
fst
movs
std
mov
adc
inc
jae
sahf
xor
outs
int3
aas
sbb
sbb
into
add
rcr
inc
or
push
mov
mov
imul
fstp
inc
into
leave
int3
jp
iret
jne
std
loopne
(bad)
push
mov
mov
(bad)
cmp
mov
mov
into
mov
xchg
repz
lods
or
sbb
lahf
jg
sbb
sub
mov
cmp
daa
outs
xor
sub
push
mov
xlat
adc
addr16
popa
addr16
(bad)
loopne
pop
jo
mov
fldenv
inc
test
mov
(bad)
imul
or
test
lahf
fsub
and
mov
inc
sub
xlat
sti
pop
dec
push
fcomp
inc
mov
adc
inc
out
sub
cli
mov
cmp
ficom
outs
sbb
cmp
cmps
add
cmp
sub
or
mov
movs
cmovs
ja
mov
pop
movs
dec
retf
outs
fwait
xchg
push
fcmovnb
loopne
bound
out
mov
jae
repnz
xchg
pushf
mov
stos
das
adc
mov
mov
outs
out
xchg
fadd
xchg
push
xor
into
jge
ss
xchg
mov
push
mov
inc
(bad)
mov
ror
mov
(bad)
(bad)
mov
mov
and
ins
ja
mov
and
retf
mov
icebp
(bad)
in
(bad)
xlat
pop
cmp
sbb
mov
loope
jl
ins
jne
jmp
in
aas
xchg
add
or
pusha
imul
leave
popf
inc
pop
dec
(bad)
and
call
adc
mov
test
sbb
jle
rcl
sbb
sbb
push
pushf
pop
ret
mov
add
mov
imul
xor
cmp
sbb
sbb
cdq
cmp
sbb
mov
pop
push
ds
adc
fimul
add
sbb
aaa
xor
ret
loopne
stos
mov
sbb
xchg
jmp
data16
mov
push
daa
lock
cmp
gs
sar
jl
xor
sbb
shl
mov
mov
add
sbb
dec
(bad)
popa
cmp
adc
sub
mov
arpl
repnz
loope
int
lea
fs
sar
inc
and
and
cmp
or
push
sahf
icebp
sub
ss
mov
xchg
neg
xor
setns
mov
outs
fstp
mov
and
jp
cmp
add
xor
shr
popf
(bad)
repz
jns
mov
enter
scas
push
repz
dec
pop
jo
push
push
retf
movs
ja
add
cmps
jp
scas
repnz
fimul
(bad)
sar
mov
mov
rol
data16
std
fst
sahf
pop
jmp
sbb
mov
mov
repz
sbb
cmp
mov
fs
cmp
jb
add
aam
or
(bad)
adc
repnz
pushf
cmc
dec
popf
mov
push
test
mov
push
into
jg
addr16
aad
loope
cmp
adc
fadd
jo
sbb
leave
sbb
push
mov
pop
out
pop
add
mov
xor
call
jl
cli
push
add
icebp
xchg
push
fcmovnb
dec
xchg
cwde
cmp
xchg
popa
and
xchg
pop
xor
sbb
lahf
loope
test
mov
shr
arpl
cmp
test
iret
or
rcpps
or
xor
ds
popf
push
int
ins
dec
outs
shl
mov
cmp
test
xor
dec
adc
std
out
xchg
mov
or
mov
adc
ins
ret
pop
les
or
and
mov
std
add
adc
or
xor
sbb
shl
rol
or
inc
retf
aaa
or
push
jae
adc
xor
aaa
enter
inc
cmp
retf
mov
mov
sbb
jl
ret
hlt
inc
mov
push
dec
jge
clc
imul
dec
push
addr16
ss
push
test
(bad)
mov
aam
push
aad
sbb
retf
bound
jb
sub
jp
inc
mov
pop
aas
(bad)
(bad)
xchg
sbb
fs
retf
fstp
or
in
pop
mov
ror
ja
inc
hlt
rcr
pop
jmp
push
lock
dec
mov
movs
ins
push
push
inc
pop
inc
and
rcr
xor
cli
sub
jmp
sbb
cmc
int
dec
enter
std
sbb
ror
push
(bad)
fistp
out
sub
mov
adc
and
imul
int
pminsw
mov
je
pop
fwait
out
(bad)
aam
jbe
out
sti
dec
add
xor
jno
arpl
pop
push
lods
shl
push
(bad)
xchg
les
ss
or
ja
mov
loop
stos
(bad)
bound
sub
sar
(bad)
aam
mov
jae
and
inc
in
dec
cmc
movs
shl
add
mov
ret
pop
push
inc
cmp
lods
or
into
bound
sub
gs
push
sbb
retf
popf
dec
dec
and
and
call
inc
data16
ret
or
push
fadd
test
sahf
lods
and
mov
and
push
je
cmp
jp
fadd
pop
mov
dec
dec
frstpm(287
aam
std
mov
call
imul
jmp
add
push
xchg
out
mov
adc
mov
enter
dec
push
sahf
add
xchg
xchg
ret
mov
repnz
mov
pop
bound
xchg
xchg
jecxz
addr16
fisubr
aad
inc
test
mov
popf
popf
cwde
mov
mov
mov
adc
push
pop
cs
dec
pop
cs
add
sti
push
(bad)
out
lea
mov
scas
out
push
dec
sub
dec
and
add
mov
mov
daa
and
mov
lahf
mov
dec
xor
adc
inc
cmp
shl
mov
sti
and
das
dec
cli
add
pushf
add
push
mov
xlat
in
fs
sub
sbb
ret
rcl
add
imul
xchg
outs
pop
xlat
pusha
jnp
movs
repnz
pushf
icebp
sub
add
adc
mov
retf
jmp
enter
leave
jg
sbb
xor
pop
je
stc
dec
push
add
fs
stc
pop
cmps
(bad)
dec
and
std
cmp
or
push
je
add
pop
lea
mov
clc
jne
adc
xchg
xlat
mov
fist
and
call
mov
xor
out
retf
daa
pop
pop
dec
mov
btc
enter
jnp
bound
sbb
sub
inc
mov
dec
mov
fstp
scas
jmp
loopne
or
mov
repz
icebp
push
mov
dec
cmp
or
loopne
add
sbb
xchg
fsubrp
std
pop
and
cmps
add
mov
ret
mov
mov
inc
xchg
mov
stos
inc
xchg
inc
pop
jge
add
and
push
imul
repnz
mov
dec
inc
jne
and
xor
push
es
mov
mov
cli
jno
jno
scas
les
xlat
std
mov
icebp
shr
loopne
inc
retf
xor
sub
jge
call
add
push
in
sti
push
iret
movs
fsubrp
inc
adc
lods
or
shl
out
test
jno
je
xchg
xor
add
fwait
shl
test
mov
push
mov
movs
es
jl
jo
add
fdivr
mov
frstor
jp
push
jno
push
outs
jge
or
and
adc
push
(bad)
sahf
fidivr
xchg
cmp
inc
push
pop
es
push
pop
aam
(bad)
out
mov
adc
les
cwde
push
xchg
jbe
pop
(bad)
dec
in
mov
jle
fldenv
sbb
mov
mov
dec
dec
mov
movs
push
frstor
cmp
mov
mov
xchg
dec
arpl
and
jmp
das
mov
and
mov
cmp
sbb
retf
dec
fdiv
dec
fsubr
cmp
xchg
jb
loop
and
jle
dec
sbb
add
cmps
stos
jnp
cmp
jl
dec
sahf
or
pop
push
movs
sti
test
xor
imul
sahf
lahf
jb
retf
jbe
inc
push
stc
pop
cmp
adc
dec
xchg
leave
xor
pop
ds
jne
push
loope
xor
div
pop
mov
ins
and
mov
scas
dec
mov
ss
loope
sbb
in
sti
mov
fst
adc
push
xchg
lea
test
sbb
in
push
and
inc
loopne
or
pop
sahf
(bad)
jmp
mov
lahf
dec
or
adc
dec
adc
cmps
stos
dec
inc
leave
adc
mov
mov
clc
sbb
mov
into
jl
dec
inc
fsub
xor
pop
jns
push
jl
pop
aaa
push
inc
cs
push
push
mov
aas
push
sbb
add
sahf
fdivr
jge
cmp
jmp
sub
and
push
mov
inc
retf
addr16
shl
mov
test
(bad)
retf
lock
loope
dec
in
mov
ja
mov
sub
out
add
add
sub
outs
and
pushf
aas
mov
add
fistp
inc
(bad)
repz
mov
dec
in
fs
pop
(bad)
xor
xchg
pop
sahf
add
xchg
sub
inc
and
mov
inc
fimul
fsub
fsub
mov
hlt
cdq
pop
mov
test
push
pop
mov
mov
jno
dec
mov
cmp
in
or
dec
mov
jp
gs
mov
fiadd
adc
dec
(bad)
cmp
cmp
mov
repnz
push
lods
ss
pusha
mov
stos
pop
fist
in
call
cwde
adc
inc
jmp
inc
xchg
mov
inc
dec
mov
inc
inc
sbb
xchg
push
pop
lods
cwde
ds
or
fisttp
mov
mov
mov
xchg
pop
sbb
shl
or
and
cmp
or
mov
mov
adc
leave
sub
push
mov
push
bound
fild
or
aad
rcl
call
add
test
fs
aad
shl
sub
mov
push
mov
mov
lea
jne
jns
(bad)
call
adc
out
mov
enter
fisubr
inc
adc
add
or
xor
or
std
mov
out
aam
dec
(bad)
dec
js
mov
xor
and
push
sub
mov
dec
or
pop
sub
pop
in
lock
mov
dec
jmp
push
mov
mov
gs
call
enter
in
adc
clc
je
rcl
(bad)
lods
mov
(bad)
cs
clc
repnz
pop
pop
xor
cdq
clc
sub
push
adc
jnp
sbb
jns
gs
lods
cmps
inc
pop
cld
shl
fdiv
pop
sar
push
loopne
int3
sbb
mov
into
sub
movs
addr16
xor
iret
enter
add
push
push
cmps
jnp
xor
jbe
dec
sub
inc
js
xchg
xor
fimul
sub
xchg
retf
mov
mov
sti
ins
repz
dec
pop
(bad)
pop
jbe
imul
pop
ins
pop
mov
xchg
jg
ds
lock
mov
jmp
pop
add
xor
into
dec
mov
sbb
lock
imul
jb
(bad)
in
sar
jl
pop
loop
into
inc
out
in
pop
xchg
adc
adc
sub
into
add
jmp
adc
or
(bad)
dec
enter
add
mov
int3
inc
cmps
adc
and
and
sbb
rcl
nop
sbb
pushf
ss
cmp
sbb
push
(bad)
in
cmp
stos
sbb
sub
imul
mov
cli
sbb
imul
ins
rcr
jmp
gs
xlat
neg
cmp
add
jmp
cmp
and
cmp
or
mov
push
or
sar
mov
cdq
sbb
jp
cmp
mov
cdq
push
inc
fmul
push
push
pop
jmp
jo
dec
pop
dec
xor
stos
iret
fwait
ins
pop
mov
dec
and
xchg
pop
movs
in
aad
cmp
rcl
sub
in
jo
jbe
push
je
lea
idiv
mov
or
pusha
lods
mov
mov
cli
ret
(bad)
out
inc
dec
(bad)
dec
imul
test
and
jbe
mov
(bad)
fst
cmp
sub
stos
inc
(bad)
jmp
xor
pop
and
mov
inc
mov
fcomp
mov
xchg
sbb
mov
add
stos
icebp
xlat
sub
mov
repnz
sbb
push
and
dec
jns
or
jne
xor
dec
sub
neg
mov
sbb
repz
imul
and
mov
retf
pusha
loope
or
add
ja
loop
dec
jl
sub
das
mov
out
mov
jp
jle
sbb
push
lods
arpl
add
out
xchg
adc
cld
and
movs
or
aad
xchg
add
gs
push
push
mov
or
(bad)
push
cmp
mov
add
push
ins
cld
add
dec
cmp
jmp
and
sub
mov
int
xchg
(bad)
push
lock
xor
into
and
test
push
sbb
shl
(bad)
fsubr
xchg
lds
pusha
sbb
mov
pop
jb
cmp
fldcw
pop
mov
cli
pop
and
(bad)
push
mov
push
push
add
push
icebp
(bad)
lock
aad
call
sub
pop
inc
into
jg
sub
jns
push
mov
imul
sti
adc
cdq
hlt
dec
bound
mov
pop
cmp
and
inc
pusha
adc
mov
inc
pop
pop
cmc
cmp
dec
mov
push
pop
dec
movs
or
arpl
xchg
xchg
pop
fcomp
mov
rol
push
leave
popa
enter
jo
ss
cmp
push
and
(bad)
fcomp
ja
pop
push
(bad)
test
cmp
fs
mov
retf
out
sbb
or
inc
imul
sahf
(bad)
fst
inc
repnz
xchg
nop
adc
retf
ja
(bad)
mov
in
xchg
loope
push
loop
xchg
test
sbb
xor
add
sub
inc
sbb
fldenv
jno
mov
enter
ins
inc
imul
xor
dec
inc
ins
sub
aas
inc
inc
ins
fnsave
or
aad
loopne
es
or
sub
aaa
mov
mov
popf
dec
sbb
xor
push
sbb
loope
inc
test
push
pop
mov
test
dec
test
mov
and
aam
ja
lods
push
cmps
cmp
push
jns
fist
cs
xor
(bad)
xlat
outs
mov
fs
add
mov
ja
loope
pop
xchg
jae
inc
mov
fxch
or
jge
jae
(bad)
mov
jmp
ja
or
sub
inc
jne
cmp
hlt
clc
sub
test
(bad)
cmp
mov
retf
sub
nop
pop
test
push
jp
push
sub
dec
(bad)
sub
shl
out
sub
rcr
(bad)
clc
fxch
fsubrp
sbb
adc
adc
adc
je
fsub
or
inc
aas
cmp
push
add
pop
push
xchg
xor
cmps
jecxz
loop
enter
std
mov
xchg
popa
xchg
cmp
mov
mov
xor
pop
in
or
add
xor
fs
pushf
xor
lock
pop
lea
int3
add
adc
ins
sub
dec
push
lock
cmp
push
adc
fcomp
sub
aad
jno
ja
jns
dec
retf
cmp
outs
sbb
pop
stc
mov
enter
xchg
outs
out
xchg
fisub
fbld
jg
add
push
pop
ds
mov
xor
cmc
xlat
leave
push
adc
aad
jno
or
xchg
and
jbe
bound
in
mov
inc
xchg
fdiv
or
add
sbb
loope
call
addr16
sahf
xchg
pop
xchg
inc
(bad)
clc
add
cmps
je
dec
ins
scas
jne
xchg
mov
mov
cmp
pusha
adc
inc
lds
jae
leave
fs
int3
rcl
and
aad
push
loopne
add
sbb
(bad)
shl
sub
imul
mov
sbb
jmp
aad
ret
sub
sahf
mov
sbb
arpl
or
cmc
pop
mov
loopne
ret
xor
popa
and
fcmovnbe
sub
push
fwait
cmps
xor
cmc
pop
dec
mov
lock
xchg
jl
sbb
xor
(bad)
popf
mov
add
pusha
in
sbb
popa
scas
mov
mov
mov
lea
lea
(bad)
jmp
stos
or
push
pop
push
js
into
mov
lea
pop
mov
adc
stos
cmp
mov
fucomi
ins
cmps
hlt
lds
imul
xlat
inc
pop
fsub
jg
mov
call
pop
mov
outs
or
dec
bound
mov
add
stos
pop
jno
aas
inc
xor
stos
pop
inc
lods
and
pop
int
sbb
out
mov
outs
jmp
sbb
sub
mov
jg
leave
leave
and
pop
mov
sbb
es
out
pop
cmp
cli
lahf
push
call
adc
xchg
test
mov
mov
nop
jne
lods
adc
or
adc
icebp
mov
test
loopne
pushf
in
ret
mov
lea
push
push
add
nop
mov
sbb
jb
into
push
rcl
cmps
ins
mov
ds
je
loop
aaa
cmp
inc
pop
inc
lds
jmp
clc
sub
xchg
(bad)
pop
mov
ficomp
inc
pop
pushf
add
std
xchg
mov
inc
jp
loop
pop
retf
inc
cmp
mov
movs
pop
add
dec
popa
sub
mov
cmc
xchg
outs
ins
pop
pop
push
or
pop
push
daa
mov
and
imul
sub
jmp
pusha
add
popf
and
(bad)
pop
fist
mov
inc
xlat
xchg
cmp
pop
cmp
fist
jl
push
out
jmp
or
lea
or
mov
das
sub
(bad)
mov
or
bound
cld
sbb
or
imul
movs
rol
out
cmc
les
pop
int3
adc
pop
inc
or
call
data16
imul
cmps
jmp
fdivr
push
ins
mov
rol
adc
push
rcr
retf
jns
xor
shl
add
arpl
pushf
cmp
pop
test
movs
push
rcr
sub
jl
aam
jecxz
push
inc
push
je
fnstenv
(bad)
test
push
rcr
push
mov
push
or
ret
ror
xlat
and
das
dec
adc
gs
inc
movs
fnsave
or
(bad)
stos
jle
add
mov
jb
or
xchg
and
sbb
not
push
pusha
(bad)
cmp
aas
mov
cmp
mov
repz
movs
pop
push
daa
jle
les
or
dec
push
sub
test
cmp
outs
arpl
mov
xchg
push
xchg
aad
xor
lds
sbb
inc
pop
stos
ret
mov
repz
inc
jo
jge
dec
and
and
mov
data16
push
pop
shr
cld
mov
addr16
icebp
cwde
sbb
adc
das
pop
jmp
jecxz
popf
mov
mov
mov
adc
cli
pop
movs
add
pusha
cmp
arpl
sub
test
aas
dec
ret
cmps
mov
loopne
and
push
xchg
jg
xor
cmc
sbb
pop
xchg
pop
call
iret
les
addr16
jmp
and
mov
mov
mov
mov
adc
sub
fadd
push
mov
(bad)
rcr
iret
xchg
ror
(bad)
fdiv
test
jmp
pop
(bad)
lock
sbb
cld
lods
or
stos
or
gs
jmp
popa
sbb
sbb
cmp
push
lock
pop
cmc
and
cmp
adc
sbb
mov
mov
sbb
or
mov
ds
iret
(bad)
fadd
jb
leave
test
jo
je
adc
(bad)
and
xchg
or
jg
fmul
xchg
dec
rcr
call
cdq
jmp
leave
shl
sub
dec
cli
xor
ds
(bad)
popa
cs
xor
pop
lods
push
inc
xchg
sub
add
sub
retf
ror
dec
clc
aad
push
xchg
fcomi
pop
out
add
dec
in
or
and
ret
or
cmp
push
mov
mov
xchg
dec
cmp
iret
ss
adc
outs
fcmovu
inc
jp
jmp
xchg
movs
test
aaa
les
inc
in
push
adc
pop
popf
stc
xchg
xchg
push
ret
jbe
mov
pop
and
(bad)
into
adc
push
sbb
in
jb
mov
les
sar
mov
and
push
test
(bad)
fsub
xchg
xchg
test
aas
dec
aas
push
xor
push
out
pop
cmp
nop
xor
nop
loopne
pop
xchg
pushf
and
push
lods
outs
jne
sub
jmp
aaa
and
cwde
cmps
xor
sahf
or
pop
xor
cmps
add
std
and
or
and
lds
clc
xor
jmp
sub
dec
jmp
mov
jne
scas
add
leave
neg
and
lock
push
(bad)
aas
push
inc
dec
xchg
and
rcl
shl
cmp
(bad)
cmp
in
mov
xor
shl
or
xchg
pop
or
out
push
pop
push
pushf
int3
cmps
inc
outs
ror
mov
mov
pop
leave
jnp
movs
adc
clc
arpl
movs
sub
mov
ret
test
mov
dec
sub
cmp
es
jno
pop
sbb
adc
push
outs
fcmovu
xor
sbb
xor
xchg
adc
imul
jge
jle
pop
lods
sbb
sar
pop
xchg
fidiv
jecxz
add
or
clc
inc
and
inc
push
xlat
shl
mov
mov
mov
and
out
icebp
mov
mov
js
cmc
inc
scas
jnp
push
cmp
mov
push
xor
or
iret
push
and
rcl
and
mov
dec
mov
sub
inc
stos
retf
jge
or
adc
inc
cmp
(bad)
mov
push
xchg
lock
pop
retf
fs
fstp
je
movs
ret
xchg
mov
mov
xchg
sbb
add
iret
cmp
test
mov
pop
sub
push
add
xchg
fmul
cli
ficomp
retf
sbb
push
mov
mov
(bad)
scas
leave
mov
fcom
test
mov
jne
std
and
lahf
mov
mov
sahf
cld
sti
scas
loop
xchg
fwait
ins
enter
mov
pop
gs
imul
int3
(bad)
mov
pop
add
fbld
ins
popf
push
add
iret
das
mov
xchg
fcmove
daa
xchg
std
fwait
jmp
mov
and
iret
fiadd
and
aam
push
sub
sbb
je
retf
sub
pop
nop
cli
or
neg
xchg
pusha
add
adc
mov
xor
test
xor
xor
pusha
hlt
xor
xor
pop
jp
or
push
mov
add
popf
fistp
cmps
setbe
inc
gs
mov
ds
inc
call
add
xchg
jb
addr16
shl
jge
mov
and
pop
and
adc
in
xchg
cs
punpckhwd
and
stos
repnz
fwait
mov
into
retf
lea
add
and
les
push
xor
sbb
or
jae
xor
mov
sub
dec
leave
pop
rep
jg
(bad)
ss
xor
or
out
mov
mov
xchg
jnp
and
into
mov
dec
ret
dec
push
pop
scas
loope
call
fdiv
or
loope
xchg
dec
push
sbb
dec
jno
cmps
inc
mov
inc
pop
outs
dec
stos
sub
outs
mov
in
xchg
retf
xor
jno
add
ror
push
dec
jecxz
sub
js
dec
fmul
fadd
cmp
jcxz
addr16
fisttp
pusha
jecxz
int
push
and
movs
aaa
repnz
add
hlt
retf
in
jo
push
ss
add
outs
retf
add
fdivr
dec
lds
loop
push
fwait
and
cmp
xor
sbb
loope
dec
es
pop
cdq
xlat
mov
jp
add
pusha
inc
push
lea
add
mov
repz
jb
hlt
sub
ja
cli
stos
mov
dec
xchg
xchg
loopne
and
push
sbb
test
and
and
jmp
xor
cmp
jle
mov
in
div
xchg
or
xor
loopne
xchg
cmc
popf
add
fld
imul
jg
loope
ins
js
inc
out
mov
test
add
out
xchg
push
cmp
shr
into
adc
adc
mov
lds
cld
inc
aas
dec
xor
push
fcom
dec
dec
mov
pop
cld
pop
pop
ror
cmps
loope
dec
or
jbe
cwde
push
loop
inc
xor
fwait
xchg
add
push
inc
loopne
jmp
daa
(bad)
sbb
not
sbb
shr
cmp
lock
mov
and
lods
xor
popf
xchg
add
inc
lock
ds
fucomp
push
jl
aaa
xchg
xchg
imul
es
jecxz
sets
push
idiv
jno
xchg
adc
mov
cmp
cmovg
adc
ds
mov
jo
cmp
(bad)
pop
gs
sar
fisttp
jb
sub
jno
or
push
cmp
repnz
or
xchg
xor
retf
sub
xor
dec
add
call
clc
fdiv
push
dec
fisttp
sbb
aaa
xchg
test
(bad)
cmp
pushf
mov
test
lock
int
js
or
cmp
jne
lods
push
loop
or
xor
pop
mov
cmp
push
loop
outs
xchg
ror
(bad)
in
mov
add
into
xchg
and
jg
or
or
and
mov
or
push
add
loope
into
ret
jo
adc
ret
int3
jb
hlt
mov
shl
push
sti
shr
icebp
mov
cmc
mov
jg
jle
xchg
jge
retf
xor
jbe
cld
cmp
pop
fcomp
jno
push
mov
push
jecxz
mov
ins
mov
mov
inc
dec
mov
xchg
cmp
dec
cmps
(bad)
dec
inc
test
sti
enter
das
push
push
mov
pop
jb
fmul
sbb
shl
pop
add
in
fsubrp
inc
sub
mov
outs
call
pusha
push
add
mov
cli
cwde
pusha
mov
mov
sub
pop
mul
or
out
adc
sub
fist
xor
sub
adc
jp
mov
aaa
sbb
pusha
xchg
imul
push
gs
dec
les
pop
ins
nop
mov
movs
jns
add
outs
jge
jo
jo
loopne
mov
pop
dec
loope
jb
cmp
fstp
xchg
rcl
mov
pop
mov
xchg
jmp
in
popa
push
push
mov
lds
loopne
mov
inc
inc
mov
inc
sub
pop
mov
cli
clc
sub
int3
ins
shl
retf
ret
mov
lahf
xlat
sbb
jmp
add
xchg
daa
shl
adc
in
neg
cli
push
mov
xchg
rcr
fistp
xlat
rol
mov
es
or
push
xor
gs
push
cmova
out
das
cli
push
sahf
dec
ror
adc
pop
dec
jmp
adc
adc
cmp
jo
or
add
xchg
dec
mov
xchg
xchg
ret
scas
ins
ds
(bad)
mov
dec
push
mov
setl
and
lock
mov
jmp
pop
or
jg
xchg
into
ret
cmp
dec
mov
inc
stos
(bad)
pop
xor
ror
sbb
cmp
adc
iret
sar
mov
pop
gs
mov
xor
sub
hlt
stos
das
outs
add
push
lods
outs
imul
pop
push
cwde
popf
popf
lock
sbb
in
fbstp
adc
sbb
lds
lds
ja
jns
es
mov
in
retf
addr16
jge
jecxz
mov
xor
sub
test
or
mov
jns
xor
xor
movs
ret
jns
out
(bad)
xchg
add
scas
icebp
lahf
add
xchg
dec
shl
cmp
inc
pushf
sahf
gs
cmp
imul
ret
in
mov
pop
fidiv
sbb
push
dec
dec
xchg
sbb
shr
mov
jecxz
jne
movs
movs
or
mov
mov
fmul
fld
mov
jge
out
fsubr
test
jo
pop
das
xor
sub
je
stos
sub
sti
or
call
xchg
repnz
push
les
jg
in
lea
cdq
outs
push
js
imul
or
ja
lock
or
shr
mov
xor
adc
scas
fsub
ret
les
mov
adc
stc
aad
sub
cmp
mov
xchg
ss
xchg
stos
push
push
pop
sub
or
xor
jnp
int
pop
ss
mov
mov
push
or
stc
or
adc
mov
mov
scas
xchg
mov
mov
jmp
pop
clc
loop
xchg
clc
inc
dec
dec
xlat
lods
xor
(bad)
ret
ss
mov
dec
xor
adc
sbb
into
je
inc
retf
ins
dec
mov
xchg
in
adc
and
add
push
push
dec
mov
dec
(bad)
call
mov
jns
push
out
repz
test
or
inc
mov
xchg
cli
adc
xchg
pop
pushf
dec
(bad)
loope
ret
(bad)
push
int3
xor
push
neg
inc
fwait
xlat
sub
pop
mov
out
leave
arpl
xor
test
and
add
cmc
sahf
pop
xor
dec
dec
or
inc
imul
and
stos
xor
sub
adc
vmread
or
(bad)
mov
cmp
pop
or
or
jno
scas
or
and
mov
push
ror
js
push
jg
cmp
repnz
ror
stc
imul
sub
ins
enter
dec
into
pop
ds
or
fsubr
jo
retf
jmp
test
test
outs
popa
mov
xor
jle
test
stos
xchg
fisubr
scas
mov
call
push
movs
and
adc
inc
push
cmp
jo
push
cmp
adc
(bad)
mov
pushf
dec
mov
xchg
jle
xor
dec
out
cmps
es
(bad)
in
xchg
mov
shl
ja
push
fst
into
cmp
mov
cmp
aad
or
xor
(bad)
mov
pusha
adc
sti
lock
pusha
stc
cmp
in
cwde
add
(bad)
jge
fdivr
movs
ret
bound
fdiv
cmps
add
cmp
test
sub
xchg
mov
mov
retf
pop
mov
mov
add
ss
and
icebp
nop
cmp
sbb
pop
mov
push
sbb
sti
pushf
cdq
loope
outs
lahf
mov
jmp
sub
test
dec
out
icebp
dec
std
pop
lods
or
cmp
xchg
stos
sbb
jb
ret
sbb
inc
sahf
fcomp
inc
push
pop
ja
(bad)
fisttp
push
enter
pop
dec
push
pushf
rcr
and
jnp
or
scas
mov
cmp
lds
adc
and
sahf
popf
test
sbb
icebp
jo
and
cmp
xor
pop
push
mov
mov
and
mov
or
xchg
outs
stc
add
xchg
sar
int
rol
xchg
cmps
sahf
and
cmp
addr16
pop
(bad)
dec
xor
pusha
push
sub
push
jle
popf
pop
ds
jae
aam
push
mov
out
jg
lahf
nop
ins
adc
mov
mov
arpl
aaa
xchg
nop
or
test
push
daa
inc
jo
xchg
jns
js
jp
adc
sahf
out
fisub
mov
adc
stc
sub
out
push
mul
pop
aam
cli
add
shl
sub
cmp
ins
mov
jmp
xor
jns
aas
aaa
shl
fnstcw
jne
inc
xlat
dec
in
add
aas
js
ret
enter
sub
cmp
out
jp
adc
sub
cmps
or
pushf
mov
out
sub
fneni(8087
add
inc
or
xchg
mov
test
push
out
pop
mov
jge
mov
inc
and
lds
xchg
jmp
fldenv
jae
sub
jle
push
das
adc
sbb
test
xchg
pop
sbb
inc
xchg
or
bound
or
pop
mov
jmp
fisttp
movs
jl
movs
retf
int
jae
fld
push
inc
cmp
ficomp
lock
rol
xchg
pop
mov
jo
mov
mov
mov
pop
add
jnp
out
loope
clc
hlt
xlat
sti
lods
jne
into
lock
add
std
add
inc
imul
pavgb
mov
shl
std
dec
xlat
icebp
mov
gs
xor
xchg
lods
std
jmp
sbb
in
(bad)
idiv
ds
aaa
popa
imul
shl
cmps
xchg
adc
xor
mov
stos
call
and
scas
xchg
push
cmp
push
add
push
mov
mov
std
push
inc
xchg
sub
in
xchg
icebp
pusha
gs
hlt
movs
repnz
bswap
push
lock
test
jno
aas
(bad)
mov
ja
shl
cmps
mov
in
adc
outs
dec
pop
dec
sub
(bad)
inc
daa
xchg
cwde
scas
pop
sbb
mov
pop
sub
add
icebp
and
cmp
inc
shl
push
xor
dec
or
ins
movs
fnsave
pop
aam
adc
out
fs
jge
pop
xchg
or
push
and
pop
add
mov
imul
int3
int
retf
mov
add
je
es
ja
jo
pushf
mov
ins
(bad)
(bad)
je
(bad)
or
cmps
retf
pop
mov
xchg
adc
add
gs
or
movs
(bad)
cmc
push
mov
not
ins
xor
xor
mov
jne
jge
mov
jae
xchg
aas
dec
test
test
mov
pop
inc
push
rcl
fstp
out
rol
xchg
(bad)
int
data16
xchg
push
dec
repnz
pop
pop
out
mov
mov
add
mov
inc
into
in
cs
jge
sub
sub
and
jecxz
pop
popa
mov
lahf
dec
xchg
clc
mov
mov
push
add
mov
inc
jmp
mov
loopne
loop
test
das
(bad)
pusha
not
mov
fcom
inc
movs
cmp
cmps
add
neg
cmp
popa
rol
popa
repz
sub
adc
in
stc
retf
push
fstp
sbb
dec
add
add
stos
xor
inc
push
sbb
sub
push
std
sahf
sbb
cmp
lea
mov
in
int3
sub
pusha
and
or
push
js
in
mov
int
js
enter
xchg
adc
in
sub
pushf
ficom
fmul
imul
jl
xlat
in
adc
push
inc
enter
es
jg
icebp
test
shr
cmp
mov
mov
jbe
xor
aam
rol
sub
cmc
mov
call
(bad)
and
mov
cld
or
call
repz
shl
addps
jle
(bad)
cmps
out
retf
and
pop
pop
fistp
cmps
nop
pop
jnp
sbb
sub
push
inc
or
and
in
mov
shr
mul
push
jg
inc
je
pop
and
push
or
test
pop
sbb
fisttp
cmp
xor
push
xchg
scas
aam
inc
psllq
cmps
mov
or
aaa
push
sbb
inc
push
xor
mov
mov
ror
cli
out
retf
xor
movs
inc
and
ret
sub
mov
cs
mov
push
xchg
pop
sbb
jge
ins
loope
fstp
cmps
dec
cmp
adc
xchg
pushf
(bad)
push
xchg
std
in
in
xchg
cmp
cmp
xchg
inc
ja
jl
adc
sbb
mov
rcr
add
pop
add
dec
das
pop
pop
arpl
pop
inc
fadd
daa
div
push
sbb
push
pop
push
push
rol
push
add
xchg
(bad)
repz
inc
mov
dec
inc
je
dec
imul
inc
pop
mov
idiv
push
rcr
push
xchg
icebp
cmp
fisttp
pop
push
scas
cmps
icebp
(bad)
jl
sub
or
mov
cdq
and
mov
enter
sbb
mov
adc
mov
and
push
test
adc
adc
and
mov
pop
inc
sub
pop
mov
adc
shl
pop
movs
push
(bad)
retf
mov
mov
jmp
test
out
sar
daa
(bad)
pop
fnstenv
jno
inc
ret
hlt
aam
mov
or
cmp
cmp
jmp
mov
push
popf
push
adc
(bad)
jmp
mov
int
movs
(bad)
ja
ret
dec
xor
xchg
shl
ja
cld
jns
mov
(bad)
push
adc
dec
hlt
dec
mov
stos
(bad)
adc
cdq
push
lahf
jne
pop
inc
or
add
push
sahf
inc
xchg
(bad)
fcom
out
sbb
adc
lock
or
push
out
sbb
cmps
jne
shr
mov
imul
fild
push
adc
mov
arpl
outs
sub
sub
push
popa
push
mov
enter
addr16
rcl
ret
mov
lods
xlat
mov
adc
pop
xor
and
mov
dec
pop
loopne
push
scas
ret
ja
push
in
mov
pop
in
add
repz
outs
stos
getsec
jmp
adc
sahf
js
push
xchg
mov
and
aam
rcr
outs
cmp
dec
pop
sub
test
add
xchg
mov
das
out
and
fwait
leave
add
cld
popf
in
add
addr16
inc
push
dec
mov
pop
dec
sub
pop
test
loop
bound
call
cdq
dec
cmp
and
sbb
mov
mov
call
add
in
pop
add
push
mov
imul
and
(bad)
out
mov
dec
xor
ret
ret
js
inc
xchg
imul
nop
xor
jnp
repz
and
shl
retf
inc
jg
pop
call
(bad)
pop
jno
push
inc
mov
inc
jmp
xchg
pop
arpl
mov
jno
lock
dec
adc
pop
push
push
das
push
addr16
mov
cmp
jl
stc
fcomp
and
mov
push
sbb
jecxz
push
sub
imul
aam
aam
stc
sub
(bad)
(bad)
cmc
inc
and
cmp
test
ins
inc
movs
fadd
int3
int3
jae
sbb
jne
push
lea
sbb
mov
jecxz
(bad)
stos
int
xchg
pop
jmp
icebp
push
aas
mov
sub
inc
or
or
scas
sub
stc
fild
pop
and
mov
push
add
clc
pushf
pop
jo
aaa
and
(bad)
cmps
push
aam
inc
sbb
mov
lods
inc
cmp
and
jg
mov
xor
ret
add
lock
sub
in
sbb
test
or
gs
cmp
or
out
fnstsw
rcl
pushf
repnz
repz
xchg
sub
adc
jle
or
pop
xchg
inc
mov
sahf
sar
xchg
out
dec
fwait
(bad)
jg
in
sbb
(bad)
out
xor
cmp
add
data16
es
lods
loope
pop
xchg
xor
xchg
(bad)
lods
cmp
test
lods
rcr
inc
inc
lahf
sub
adc
popa
pop
sbb
fidivr
jmp
mov
mov
ret
add
into
(bad)
das
adc
sub
test
ret
lea
nop
and
mov
mov
ret
leave
cs
inc
jg
(bad)
ins
bound
loop
jae
push
cwde
jns
ror
xor
in
sbb
mov
add
scas
fcom
cld
iretw
into
mov
lods
jae
jp
xchg
lods
mov
sub
cmp
inc
gs
fcomp
sti
cmp
ret
jns
clc
inc
sbb
xor
push
iret
push
xchg
test
retf
mov
mov
sbb
gs
cld
cmp
cld
repnz
sbb
(bad)
rcr
xchg
sbb
and
mov
inc
mov
xchg
mov
xchg
xor
dec
push
jb
xlat
loope
push
pop
push
dec
xor
add
inc
(bad)
mov
cmp
mov
cwde
fidivr
loopne
jmp
lods
int
pop
adc
call
cdq
xchg
test
cs
(bad)
fld
cmps
test
pop
(bad)
(bad)
mov
out
push
inc
out
das
into
push
dec
pop
mov
jb
add
xlat
cmp
adc
sbb
mov
xor
imul
xor
(bad)
jb
leave
adc
imul
fs
(bad)
add
in
cmp
mov
jecxz
fnsave
lahf
push
fsubr
xchg
jns
mov
repnz
lods
pop
jae
fiadd
xor
je
or
fiadd
int3
out
add
xor
cmps
sti
repz
jmp
sbb
jge
ret
int3
leave
daa
(bad)
call
add
clc
dec
sub
jmp
push
enter
add
loopne
jmp
aaa
cmps
sbb
inc
into
jnp
retf
icebp
mov
imul
push
stos
sbb
mov
add
pop
out
ror
arpl
xor
fwait
inc
sbb
or
stos
lock
popa
push
gs
sahf
call
test
mov
daa
test
ins
cmp
cmps
arpl
cmp
test
push
sub
enter
out
pop
xchg
dec
inc
adc
cld
xor
mov
mov
cld
jae
or
int3
ds
sub
jg
xor
ins
(bad)
(bad)
adc
(bad)
fsubrp
xlat
pusha
sbb
pop
sar
sbb
mov
les
pop
loope
and
(bad)
in
pushf
imul
sahf
fs
push
(bad)
dec
and
aaa
push
loop
sub
add
mov
enter
nop
xchg
test
jne
shl
pop
clc
adc
test
pop
inc
fs
cmp
in
inc
test
mov
mov
int
pop
push
jns
mov
xor
sub
or
pop
test
aaa
mov
sbb
fsub
addr16
loop
mov
iret
sbb
or
mov
(bad)
mov
retf
leave
into
inc
shr
sub
sub
or
jns
lea
in
mov
mov
xlat
hlt
push
mov
jbe
and
and
cmps
push
popf
ret
mov
call
inc
add
mov
sub
icebp
lahf
jae
shl
dec
fistp
mov
jl
shr
pop
pushaw
js
cs
data16
das
push
sbb
dec
shl
and
or
movs
pop
add
in
imul
jbe
or
stc
iret
and
dec
retf
adc
stos
adc
mov
mov
sti
or
jnp
sub
adc
inc
sbb
pop
fmul
mov
jb
add
pop
fidivr
test
(bad)
scas
lods
in
xor
push
mov
pop
adc
push
mov
inc
mov
jae
pop
adc
mov
sti
outs
pop
lods
fnstenv
mov
(bad)
pop
stc
je
fwait
inc
jmp
fist
mov
jle
adc
mov
cld
ins
jecxz
fidiv
adc
(bad)
pop
iret
xor
pop
mov
xlat
mov
pop
les
add
aaa
cmp
imul
or
retf
or
fninit
xchg
stc
pushf
hlt
rcl
inc
loopne
dec
imul
xchg
mov
shl
inc
icebp
mov
cmps
xchg
fist
cmp
aaa
mov
sbb
cmp
mov
xor
adc
mov
(bad)
jg
xchg
in
and
cmps
xchg
test
xor
into
or
(bad)
dec
pusha
retf
inc
or
push
jne
(bad)
leave
hlt
sbb
loope
mov
add
jns
jmp
loopne
xchg
scas
pop
and
cwde
xlat
push
aad
pop
dec
jp
cmp
dec
(bad)
int3
sub
clc
sahf
xor
mov
hlt
xchg
bound
in
jnp
arpl
xchg
pop
(bad)
loop
fwait
xchg
sbb
nop
mov
add
xchg
(bad)
test
sbb
sub
es
mov
test
push
sub
mov
aam
stos
ins
mov
sbb
and
dec
sbb
jbe
mov
movs
jp
std
stos
cli
pop
fmul
mov
aam
adc
nop
cld
dec
fsubr
add
out
sbb
pop
std
daa
shl
pop
push
cmp
(bad)
in
adc
fld
ss
adc
or
xchg
mov
loope
mov
mov
sub
sub
loope
xor
(bad)
rol
xor
xchg
pop
adc
add
cwde
xchg
jnp
ins
jb
jne
pop
and
push
stos
mov
xchg
popf
aas
outs
add
int
iret
imul
stos
push
retf
mov
xchg
and
hlt
or
cmp
pop
xchg
mov
cmc
dec
aaa
es
hlt
imul
std
aad
loop
pop
js
sbb
fwait
ja
or
icebp
sbb
loope
das
(bad)
lock
xchg
jnp
pusha
mov
push
pop
jns
dec
mov
pop
jno
aad
mov
cmp
out
xchg
cmc
sti
mov
lock
push
fsubr
add
lea
sub
mov
mov
xor
mov
add
and
enter
sti
xchg
test
add
pop
dec
cmp
mov
imul
fs
cmc
in
push
or
dec
movs
scas
push
call
sbb
cdq
fidivr
inc
les
ds
sub
sub
das
hlt
ins
mov
dec
fldenv
pop
dec
fiadd
sub
cwde
mov
div
leave
fiadd
cmc
xchg
cmp
inc
push
fcmovnu
test
mov
out
cmp
dec
xchg
pop
shl
mov
sbb
jge
fistp
mov
xchg
jo
jnp
int3
jae
lods
mov
sub
jno
dec
jae
out
out
xchg
push
push
leave
mov
push
stos
repz
rol
mov
aam
mov
pop
imul
or
aas
cmps
fcomp
xor
int3
popf
mov
or
cmp
adc
mov
sbb
test
daa
xor
jg
jg
test
jae
dec
aaa
add
dec
and
mov
rcl
fisttp
mov
cli
sahf
stc
in
in
inc
call
sbb
pushf
and
loope
xor
jb
push
jns
imul
pop
pop
xchg
xor
retf
jle
or
mov
add
push
lds
pop
mov
inc
push
fsubr
dec
scas
mov
xor
(bad)
xchg
stc
mov
nop
cmp
fisub
in
jg
sar
sub
mov
or
fnstsw
sbb
mov
gs
xor
xor
int
rol
in
dec
shl
mov
mov
dec
arpl
jp
enter
xor
movs
and
adc
xchg
cmp
dec
loope
scas
stos
push
outs
mov
mov
enter
mov
add
out
inc
mov
(bad)
in
push
outs
popa
imul
addr16
cmp
push
or
mov
(bad)
in
stos
(bad)
test
inc
aad
jge
mul
hlt
repnz
imul
imul
add
(bad)
mov
jp
inc
push
xchg
xchg
or
add
mov
pusha
or
test
push
aaa
call
mov
xchg
dec
jmp
adc
push
(bad)
pusha
in
inc
aam
mov
sbb
scas
xor
out
dec
sub
ja
fs
mov
xor
pushf
mov
add
loopne
sbb
and
ss
sbb
lods
sbb
enter
xchg
and
hlt
dec
push
ds
enter
jb
ins
aas
and
mov
out
sbb
ds
fcomi
mov
cmp
je
aaa
or
adc
out
fld
call
mov
loope
fs
fiadd
xor
lds
cdq
cdq
pop
push
mov
enter
sbb
(bad)
sub
pop
cmp
jne
fcmovu
mov
push
xchg
sbb
inc
in
enter
and
cmp
retf
mov
xchg
dec
mov
jle
in
sbb
xor
test
mov
jge
loope
(bad)
or
pop
iret
dec
dec
dec
frndint
mov
repnz
sbb
pop
ss
pop
push
xchg
xlat
repnz
clc
sahf
mov
or
xor
cmps
mov
arpl
cmc
inc
dec
lds
pop
mov
sub
into
xchg
or
call
test
pop
jmp
push
pop
lock
popa
cwde
stc
adc
inc
lods
sub
cdq
or
xor
pop
std
or
xlat
xchg
push
shl
out
and
mov
(bad)
pop
xchg
jmp
sub
stc
mov
push
out
sub
and
xor
pop
xor
aad
call
mov
cdq
mov
cmp
mov
(bad)
iret
lds
enter
sub
adc
mov
sub
push
mov
cmp
inc
stos
call
(bad)
sub
stos
push
dec
int
adc
ror
sub
fwait
into
retf
fwait
retf
push
test
ss
pushf
in
fdivr
in
inc
(bad)
stos
dec
xchg
rcr
dec
adc
hlt
and
mov
mov
sar
sub
mov
test
add
lahf
pop
outs
int
inc
ret
xor
pushf
scas
sahf
push
dec
pop
lea
(bad)
xor
test
and
jp
xchg
adc
and
sbb
dec
(bad)
cmp
fwait
mov
xor
dec
ds
shl
addr16
fmul
(bad)
xchg
pop
push
xor
jge
shl
out
das
cmp
lea
xor
cmps
pop
loopne
pop
cmp
sub
push
cwde
mov
int
test
scas
sub
or
cmc
lds
inc
push
lea
jno
mov
fcom
in
shl
jno
xchg
xor
mov
retw
inc
loope
mov
mov
outs
sub
gs
cmp
push
nop
mov
mov
and
or
mov
inc
mov
popf
push
mov
out
sahf
xchg
xor
jmp
maskmovq
not
pushf
pusha
jns
or
pop
sub
xchg
push
clc
nop
sub
mov
not
mov
cld
imul
cmc
mov
inc
das
sub
outs
sahf
cdq
in
dec
pusha
(bad)
out
adc
xor
mov
add
mov
std
fbstp
lds
mov
aad
lea
push
xchg
fadd
or
push
dec
ret
stc
mov
fimul
cld
mov
fistp
test
mov
cmps
xor
xchg
xchg
push
or
sbb
inc
sbb
jmp
fld
add
cmp
ins
daa
int3
xor
and
push
mov
push
push
and
mov
retf
adc
popa
ins
fidiv
adc
cmp
add
loopne
into
sub
jno
xor
cmp
jae
addr16
sbb
popf
out
mov
(bad)
push
out
ret
cmc
dec
inc
add
setne
test
adc
in
push
pusha
fstp
add
repnz
xchg
sub
ret
movs
jne
push
(bad)
jne
shr
dec
jne
mov
dec
pop
sub
xchg
pusha
pop
daa
inc
popf
mov
test
aaa
jns
jnp
push
inc
mov
je
lods
jo
mov
mov
cmp
pop
cmp
ins
jecxz
into
and
xchg
loopne
mov
push
or
jg
scas
push
sbb
inc
aaa
mov
sbb
mov
div
je
or
call
cmp
jmp
mov
add
xchg
mov
mov
xlat
xchg
std
jle
sbb
out
aas
es
xchg
rcr
cmp
adc
add
mov
aaa
out
cmp
sbb
icebp
mov
mov
push
dec
loope
xor
sar
ss
in
imul
iret
imul
int
dec
mov
gs
in
sbb
fstp
ret
pop
cmp
jnp
mov
(bad)
cmp
and
(bad)
leave
lahf
pop
ror
dec
mov
in
pop
adc
adc
xchg
cld
js
jge
and
test
hlt
dec
cmp
ror
hlt
inc
fisttp
imul
jmp
(bad)
pop
(bad)
xchg
lods
xchg
shr
push
push
jne
les
dec
adc
cs
sub
push
push
fistp
movs
and
imul
jmp
(bad)
div
bound
pop
addr16
call
sub
fs
mov
icebp
fcomp
outs
xchg
xlat
pop
mov
xchg
lahf
ret
push
in
or
frstor
sub
inc
retf
cmp
lods
cdq
mov
gs
fisttp
xchg
sbb
jge
(bad)
addr16
cmp
and
fdiv
or
push
les
ins
mov
xlat
sbb
jecxz
ss
(bad)
call
inc
enter
div
jbe
loope
mov
push
jp
movs
pop
pop
push
call
pop
xor
xchg
lahf
(bad)
jmp
jb
(bad)
mov
add
inc
mov
xor
fwait
mov
cli
pop
inc
stc
inc
push
xor
add
fwait
lock
arpl
lds
dec
aaa
xor
test
fsubr
(bad)
mov
cmp
jp
mov
popa
mov
fsubrp
out
sbb
scas
or
xor
arpl
mov
int
loopne
fiadd
hlt
(bad)
sahf
adc
pop
mov
sub
xchg
jbe
jae
int
pop
add
dec
shl
mov
sub
sub
mov
mov
icebp
push
or
scas
fcomp
mov
and
nop
outs
sar
adc
push
mov
test
pushf
add
cmp
js
mov
dec
addr16
outs
sub
dec
stc
in
ret
cmp
push
aas
add
stos
dec
xor
jmp
(bad)
jecxz
in
xor
xor
out
jo
push
hlt
test
xlat
(bad)
mov
cmps
jle
and
pop
rcl
shl
add
jnp
push
inc
dec
jae
pusha
fisubr
mov
sahf
imul
retf
pop
and
mov
xor
adc
aas
xchg
push
pop
bound
sbb
push
add
cmp
push
lahf
dec
jmp
push
dec
(bad)
cli
ret
pop
inc
fist
clc
inc
xchg
mov
retf
(bad)
adc
mov
(bad)
lods
mov
rol
and
es
push
(bad)
bound
push
outs
sbb
into
cmp
repnz
cmp
cmps
or
lods
mov
(bad)
in
mov
es
and
xchg
pop
push
push
mul
out
out
or
cli
gs
jge
jp
inc
movs
frstor
pop
xchg
mov
das
mov
jmp
push
cwde
and
pushf
push
push
into
fxch
(bad)
scas
fcom
adc
imul
xor
(bad)
dec
or
add
and
vcvttss2si
test
pushf
test
push
dec
push
pop
mov
lds
stos
aas
xlat
enter
adc
cli
or
fimul
jnp
out
inc
cmp
shl
shr
xchg
jmp
(bad)
lahf
cmps
jg
imul
xor
mov
(bad)
iret
push
xor
repz
inc
pop
sub
pop
pop
addr16
sub
xor
mul
xor
adc
adc
outs
stc
add
pop
push
jmp
adc
nop
mov
fs
mov
lea
je
out
call
dec
mov
pusha
adc
les
cwde
pusha
sub
and
dec
mov
xchg
(bad)
inc
sbb
fdivr
fiadd
hlt
loop
xor
jae
es
xlat
les
inc
mov
mov
push
fisubr
sbb
int
pusha
repnz
and
popa
push
pop
out
push
jmp
test
arpl
aam
sbb
inc
pop
push
xor
je
mov
loopne
push
out
xor
jo
dec
cmp
mov
sub
xchg
adc
in
fsubr
out
push
push
and
mov
repz
inc
jge
rcr
fdiv
inc
mov
sbb
mov
cmp
add
cdq
cmp
out
mov
push
sbb
out
dec
xchg
shl
mov
shl
mov
mov
and
out
jecxz
sar
es
sub
retf
jg
loop
push
retf
stos
(bad)
xor
push
loope
mov
fnstcw
inc
sbb
adc
dec
fcmovne
push
stos
xchg
fwait
inc
test
push
cmps
add
jmp
lahf
jmp
test
cs
fs
imul
sub
enter
les
xchg
(bad)
stc
ror
jnp
sbb
out
add
data16
cmp
dec
imul
and
mov
popa
or
out
dec
out
and
push
div
mov
sub
push
punpcklbw
outs
push
or
jg
mov
sar
movs
enter
cmps
hlt
jmp
pop
add
gs
inc
(bad)
xlat
mov
pusha
adc
push
pop
pop
std
adc
add
out
mov
jecxz
pusha
xchg
aas
xor
mov
sbb
fwait
xor
inc
xchg
jmp
cmps
into
cmps
xor
test
mov
jne
jle
dec
mov
xchg
push
xchg
iret
std
pop
shl
or
in
jnp
adc
int
xor
mov
sub
adc
ins
xchg
cmps
jge
jo
inc
and
scas
mov
in
pop
dec
jne
fwait
mov
icebp
aas
mov
mov
and
ds
or
aam
imul
push
sub
sub
add
add
or
ins
sub
lahf
int
and
xor
jmp
dec
cmp
in
das
pop
lds
cmp
mov
mov
aad
aam
popa
xor
sbb
and
adc
mov
lds
repnz
dec
imul
loopne
add
nop
sub
mov
pop
mov
push
retf
push
aaa
mov
mov
retf
mov
retf
call
leave
or
arpl
sbb
rcl
mov
cmp
mov
xchg
cmp
xor
dec
stos
fst
mov
pop
orps
icebp
loope
or
sbb
xchg
pusha
inc
fimul
mov
mov
add
in
mov
pop
add
xor
mov
push
push
je
jne
xchg
movs
jb
jno
mov
add
mov
jmp
mov
or
loopne
les
add
js
(bad)
repz
jbe
xchg
jmp
jge
or
jno
pop
adc
and
dec
jne
fs
xor
test
shr
and
push
adc
push
adc
mov
lds
arpl
lock
not
jnp
mov
inc
addr16
rol
imul
imul
jge
test
cmp
outs
pusha
mov
mov
es
and
(bad)
mov
repz
test
sbb
(bad)
adc
call
jmp
cmc
popa
inc
xchg
aad
(bad)
movs
popa
popf
and
int3
(bad)
iret
ins
dec
and
sbb
aaa
add
sbb
push
imul
data16
xchg
dec
cmp
push
mov
cmp
xor
jmp
inc
mov
and
xor
push
imul
adc
mov
gs
jge
jo
inc
ins
ds
cmc
xchg
jno
mov
mov
aam
shl
adc
jns
inc
ror
sbb
push
pop
loopne
sbb
sbb
imul
outs
jecxz
daa
push
cmp
aad
adc
adc
pop
adc
inc
cmp
adc
pop
sub
pop
adc
loopne
adc
sbb
loop
clc
mov
mov
or
arpl
pop
(bad)
xor
mov
jl
jb
outs
imul
mov
inc
(bad)
jns
lds
imul
test
jp
pop
into
sub
xlat
stos
pop
cmp
out
sbb
inc
adc
bound
jmp
xchg
(bad)
in
adc
push
xchg
fcom
ret
retf
add
adc
lods
jb
int
ja
jno
adc
push
sub
inc
cmps
scas
mov
xor
xchg
adc
and
mov
test
xchg
shl
imul
loopne
icebp
adc
jno
fst
lods
xor
sub
push
popa
je
jb
retf
xor
jp
mov
repnz
xor
(bad)
jne
push
cmp
in
cmp
cmp
cs
sbb
jnp
sbb
imul
or
iret
mov
and
outs
mov
mov
inc
loopne
sbb
ret
stc
cmp
and
xchg
paddsw
movs
adc
push
cmp
aaa
xor
cmps
sub
sub
adc
dec
xchg
xor
out
(bad)
shl
int3
pop
cld
aam
in
lds
mov
stc
ja
mov
sbb
shr
inc
clc
xlat
stos
xor
and
popf
mov
cmp
or
ins
popf
pop
cwde
je
in
fstp
mov
test
aaa
pop
mov
mov
gs
mov
xor
in
lahf
movs
inc
fyl2x
dec
call
jmp
add
and
gs
jg
cmp
fs
adc
mov
sub
push
adc
push
sub
mov
dec
pop
fnsave
xor
fxtract
mov
arpl
pop
sub
or
push
add
fsubr
(bad)
stos
arpl
xlat
jbe
dec
and
scas
dec
sub
das
or
mov
or
jecxz
and
iret
pop
push
in
adc
in
rcr
push
cmp
mov
sub
(bad)
mov
enter
aaa
sar
xor
js
cmp
in
ret
dec
aas
leavew
stos
pop
xchg
and
mov
es
jmp
sahf
xchg
out
ss
jb
arpl
loop
xchg
cmp
icebp
shl
mov
push
mov
fld
aam
sahf
cmp
xchg
lea
gs
jb
and
(bad)
in
and
and
ss
cli
imul
in
mov
jbe
inc
pop
mov
jmp
(bad)
jmp
cmp
popa
lods
sar
stos
arpl
cmp
out
mov
jmp
mov
xchg
sbb
ja
adc
or
or
fistp
inc
retf
push
mov
pusha
and
dec
out
cmp
cld
mov
mov
sti
in
fisttp
sbb
dec
mov
push
inc
imul
push
xchg
pop
fisubr
xchg
push
jnp
shl
pop
cwde
sbb
ss
xor
adc
mov
aaa
pop
std
sbb
bswap
xchg
xchg
out
xor
mov
mov
pushf
xor
sbb
push
(bad)
cwde
fwait
test
mov
fnsave
mov
dec
lods
mov
repz
pop
pop
adc
cmp
imul
dec
xor
jmp
int
clc
and
jb
mov
jmp
mov
(bad)
ss
pop
dec
sbb
dec
(bad)
pop
pop
sub
pop
not
mov
nop
sub
push
ds
lods
fld
mov
dec
pusha
cmp
ficomp
push
jmp
clc
inc
daa
mov
cdq
jmp
ret
test
mov
xor
inc
inc
xchg
add
ja
xchg
sub
push
retf
inc
addr16
dec
mov
jne
loop
add
mov
(bad)
std
dec
stc
dec
out
daa
fisubr
loopne
inc
push
mov
lods
xchg
loope
lds
xchg
outs
jle
fiadd
arpl
sbb
rol
je
push
mov
pop
sbb
sub
adc
scas
push
fcmovnb
(bad)
jne
rol
imul
mov
fstp
mov
xchg
sub
mov
xchg
or
cmp
cmp
iret
dec
mov
jmp
in
push
fs
(bad)
cld
cmp
loop
pmullw
mov
out
test
mov
fmul
push
xor
call
shl
out
mov
cdq
(bad)
xor
mov
mov
sbb
or
aaa
mov
dec
aas
sbb
jg
ins
pop
stc
mov
repz
sbb
mov
lods
arpl
adc
lods
inc
add
sbb
lahf
cmp
ins
scas
inc
stos
push
scas
and
and
sub
mov
xor
jmp
cmc
stos
sbb
dec
jg
mov
sbb
inc
mov
cmp
inc
adc
movs
mov
mov
adc
sub
idiv
mov
mov
jo
dec
mov
adc
lock
sub
jmp
xchg
pop
loopne
in
pop
and
xor
xchg
pop
das
or
int
mov
out
inc
lods
sub
or
cmp
icebp
lea
lods
(bad)
retf
jge
int3
adc
shl
jle
sbb
or
inc
lock
add
test
stos
and
loopne
inc
mov
test
out
sbb
dec
test
mov
inc
push
jne
dec
pop
(bad)
add
or
push
adc
push
es
add
cdq
int3
sbb
fldenv
xor
or
ds
xchg
push
push
cmc
xchg
jbe
xchg
push
in
ret
test
xlat
and
mov
pop
xchg
leave
inc
sub
icebp
pop
mov
sub
cmc
adc
jp
fild
shl
addr16
dec
mov
dec
mov
test
dec
add
daa
mov
in
and
(bad)
mov
ror
retf
ins
iret
iret
mov
ret
inc
outs
ret
test
jo
mov
xor
and
clc
cmp
pusha
inc
shr
jg
inc
mov
pusha
test
adc
sub
jg
or
inc
sub
xor
movs
bound
mov
add
nop
inc
lods
dec
in
mov
(bad)
and
imul
pop
ret
mov
mov
sbb
dec
add
xchg
add
mov
addr16
ins
(bad)
mov
pop
inc
pop
jmp
and
scas
sub
int
cld
(bad)
(bad)
icebp
ja
mov
es
jecxz
shl
xchg
and
sbb
stos
jle
ror
outs
add
or
xor
fidivr
shr
jo
dec
fimul
sbb
mov
jno
sub
adc
mov
sub
mov
or
jmp
es
aad
call
mov
cmp
outs
gs
shr
rcr
push
push
sbb
push
ror
fucom
bound
pop
jno
sbb
loope
loop
lock
test
add
(bad)
sbb
clc
aaa
ss
loope
pusha
sbb
dec
push
jbe
out
pop
aaa
fadd
in
mov
xor
sti
xor
add
shl
hlt
xor
sbb
nop
shl
(bad)
out
loopne
or
lea
xchg
xor
dec
push
mov
add
jp
sbb
mov
mov
fs
sbb
cmps
xchg
push
arpl
mov
jmp
clc
cmp
sahf
push
sub
int
sbb
xchg
inc
and
repnz
dec
aam
add
cmps
push
addr16
mov
mov
jns
and
or
mov
xchg
add
fs
jne
out
or
add
stos
pusha
addr16
push
sbb
lods
iret
sahf
das
stc
sub
jns
shl
dec
xor
pop
(bad)
cld
mov
(bad)
xchg
mov
icebp
pop
sbb
jg
mov
xchg
fnstenv
cmps
loope
out
pop
adc
les
mov
dec
out
arpl
shr
push
aad
mov
fistp
sbb
xrelease
call
mov
cmp
or
sbb
mov
adc
push
or
jl
xchg
mov
and
imul
add
mov
cmp
jne
ror
shl
hlt
ins
sub
ins
pop
ret
out
jno
retf
inc
dec
xor
fsubp
cmp
mov
xchg
add
add
xor
mov
mov
nop
sub
inc
lods
xor
es
aaa
mov
mov
repz
xor
ror
mov
xchg
sahf
xchg
pop
jae
dec
mov
(bad)
pop
data16
fwait
jge
mov
adc
mov
call
test
dec
pop
call
push
sar
test
loope
xchg
nop
add
and
mov
or
xor
cmps
dec
movs
scas
pop
push
pusha
imul
test
jmp
out
ret
test
xchg
les
and
stc
lods
arpl
(bad)
sbb
imul
xchg
push
and
pop
adc
push
cwde
mov
js
sub
cwde
pop
xor
test
adc
lock
dec
mov
hlt
cmp
stos
mov
sbb
jno
sahf
sahf
sub
out
sub
push
lock
call
jne
outs
mov
ja
out
dec
or
dec
mov
stos
xor
sbb
je
es
jle
or
xchg
sbb
in
dec
cdq
adc
push
in
popa
les
cmp
mov
outs
pop
adc
(bad)
mov
cli
cli
bound
xor
ret
push
mov
ins
sahf
jl
sub
cmp
jmp
push
pop
sti
fs
push
mov
mov
call
pop
adc
add
into
mov
sbb
mov
or
outs
inc
pop
pop
or
push
sti
ds
mov
dec
test
mov
cmp
lods
addr16
sbb
and
sbb
test
fnstcw
xchg
fadd
rcl
aad
call
addr16
pop
in
jge
or
sbb
sahf
and
add
mov
pop
bound
repnz
xchg
test
inc
dec
sbb
dec
mov
imul
jmp
inc
div
sti
fimul
mov
and
cmp
cwde
push
fwait
dec
pop
cs
rcr
scas
mov
xor
pop
loopne
push
or
dec
add
ret
lods
mov
mov
cld
push
mov
cmc
mov
int3
adc
ftst
adc
push
clc
push
fwait
or
inc
fldcw
cmp
and
push
jb
xchg
rcr
loopne
pop
jb
sub
(bad)
shr
out
pop
test
iret
lods
xchg
or
adc
leave
push
fstp
jnp
cmp
pop
jge
jmp
jnp
pop
mov
xchg
outs
and
dec
xchg
movs
push
mov
sbb
scas
mov
add
mov
fisub
iret
sahf
test
xor
loop
fwait
sub
jb
and
xor
fild
ret
lds
mov
call
das
xchg
sub
xchg
out
sub
and
fisub
cmps
test
aas
mov
in
outs
test
loope
pusha
je
mov
retf
aad
xlat
push
mov
push
daa
les
xor
outs
add
xor
xor
in
add
pop
jb
mov
sahf
hlt
mov
into
and
mov
cli
fdivrp
jno
adc
int
test
push
mov
push
mov
push
xchg
xchg
daa
dec
jno
fcomp
mov
or
arpl
gs
sub
push
in
aad
inc
jmp
add
jns
fmulp
push
dec
es
sub
in
in
inc
fiadd
mov
xor
stc
push
ret
retf
mov
ins
dec
cmp
test
jmp
and
xchg
and
imul
push
out
cwde
push
cmp
mov
mov
inc
in
pop
shl
add
imul
mov
mov
loope
mov
das
push
xchg
cmps
(bad)
mov
mov
jp
mov
dec
xor
in
inc
mov
sbb
pop
adc
sbb
repz
scas
sub
sahf
push
mov
inc
mov
leave
jns
or
sbb
ficomp
xchg
lods
or
xor
leave
mov
lahf
mov
cmps
jmp
cwde
add
imul
inc
mov
mov
push
scas
int
jg
cmp
pop
sub
daa
ds
imul
fisttp
cmp
aas
pop
movs
retf
sbb
push
imul
jmp
cwde
imul
bound
xchg
(bad)
in
xchg
cld
sub
popf
in
enter
push
mov
popa
jle
test
mov
jl
inc
mov
sbb
or
mov
leave
push
xchg
add
xor
mov
test
mov
iret
dec
ret
icebp
push
imul
xchg
jns
pusha
sub
stc
repz
add
xor
mov
push
cli
dec
push
push
(bad)
mov
sub
pop
(bad)
repnz
sbb
mov
pop
adc
push
pushf
or
test
adc
ins
mov
push
lock
jp
add
movs
dec
pop
sar
call
outs
mov
push
mov
retf
inc
sub
mov
dec
das
repz
dec
pusha
shr
movs
outs
inc
jecxz
push
stc
xor
bound
mov
sub
out
inc
ret
and
outs
push
or
das
jle
mov
(bad)
out
jbe
xchg
stc
enter
add
bound
jmp
inc
add
mov
div
dec
stos
push
enter
push
out
or
ins
fild
xchg
inc
mov
add
dec
movs
pop
fstp
fwait
mov
les
rcl
imul
pop
jmp
xchg
idiv
jp
popa
cmp
jecxz
xor
xchg
push
mov
(bad)
mov
mov
or
sti
cs
jb
xchg
popf
xor
scas
jae
xchg
sbb
aam
movs
mov
jmp
out
adc
cmp
mov
cvtpi2ps
jo
push
cld
lds
ja
in
jmp
dec
into
fwait
and
lods
ror
inc
pop
int
shl
mov
sub
in
imul
add
je
not
mov
jne
mov
fist
add
push
mov
add
xor
icebp
(bad)
ins
sub
mov
xor
cmp
retf
jbe
mov
test
sbb
aad
add
mov
in
sar
fistp
jbe
sub
ss
(bad)
call
inc
aad
jmp
movs
ins
mov
popa
push
rol
js
mov
(bad)
ror
dec
mov
fld
jle
xchg
sbb
sub
retf
or
or
pop
jne
cmp
adc
rol
inc
clc
and
jmp
clc
gs
push
pop
adc
loope
es
jmp
sub
ds
cmp
ret
inc
mov
scas
push
push
pop
shl
dec
inc
aam
(bad)
lds
mov
mov
cmp
xchg
in
and
mov
arpl
call
ret
pop
or
sbb
js
cmp
aas
xor
jl
(bad)
sahf
clc
xor
in
adc
xchg
jno
inc
or
sub
aad
sbb
repz
mov
add
cmc
repnz
mov
cli
fnsave
sbb
mov
mov
popf
pushf
imul
sti
xor
retf
mov
shl
jbe
pop
vmovntps
cmps
xchg
fstp
mov
push
lds
adc
in
cmp
jae
mov
and
mov
outs
push
out
(bad)
xchg
adc
mov
loopne
enter
push
into
adc
std
mov
mov
and
jmp
add
mov
sbb
xchg
and
dec
mov
jno
retf
lods
fld
dec
mov
jle
mov
mov
cmp
mov
mov
scas
mov
shl
lock
jle
fadd
ss
lods
arpl
push
xchg
pop
jae
jp
pop
pop
sbb
add
push
call
mov
cmps
dec
add
loop
neg
dec
mov
gs
adc
sahf
daa
sbb
cdq
pop
jg
js
cdq
xchg
cmc
xchg
inc
or
pop
jnp
repnz
xchg
int3
adc
mov
xchg
mov
pop
popf
in
retf
ss
and
pop
inc
adc
das
cmps
enter
pusha
scas
sbb
outs
xchg
sbb
mov
lods
sub
imul
les
pop
js
retf
jb
push
push
inc
leave
sbb
enter
cmp
inc
sub
les
jle
cs
lock
test
out
popa
adc
mov
and
mov
cmpxchg
push
dec
mov
sub
sti
out
cwde
cmp
adc
add
js
in
add
ss
mov
dec
fadd
sub
es
fadd
pop
jnp
xor
mov
cmp
(bad)
std
adc
out
and
sbb
cmp
mov
enter
cwde
adc
jmp
fwait
jns
inc
aaa
mov
xlat
popf
gs
sub
jmp
jl
sbb
das
inc
xor
dec
imul
stos
jnp
das
pop
add
push
adc
adc
out
mov
call
hlt
out
jo
cmp
push
mov
jns
leave
or
add
ret
and
std
jmp
movs
aas
or
arpl
mov
mov
je
xchg
fwait
jge
cmp
mov
dec
fs
push
add
outs
jle
sbb
jg
mul
je
pop
scas
jno
dec
cmp
xchg
adc
call
ja
or
cli
aas
iret
sbb
jae
and
fisttp
xchg
xlat
add
and
push
loope
push
repz
fisubr
pop
leave
sub
xchg
bound
ja
xor
mov
jnp
sbb
fcomp
in
pushf
stos
loop
inc
ds
in
fisubr
mov
xor
xchg
and
sub
xlat
or
pop
jmp
ss
xor
inc
pop
cmp
cmp
cdq
pop
mov
mov
cmp
loopne
mov
lahf
loopne
int
pop
mul
imul
enter
jle
movs
mov
add
push
stos
in
jge
cmp
shr
xor
ja
or
adc
add
adc
or
sbb
repz
mov
and
retf
lahf
mov
cwde
xor
inc
mov
or
dec
(bad)
cmps
iret
fld
cmp
popf
mov
aas
icebp
bound
or
(bad)
retf
pop
mov
and
cmps
sahf
fisubr
sbb
test
imul
mov
mov
retf
jmp
push
sar
push
add
cmp
push
add
inc
pop
push
sbb
in
inc
ja
out
push
sahf
hlt
jp
jo
aam
sbb
(bad)
xchg
or
cli
mov
movs
adc
enter
xchg
sbb
add
push
push
xchg
mov
pop
int3
mov
movs
add
idiv
push
jb
scas
(bad)
xlat
mov
jp
jne
stc
rol
mov
pop
(bad)
pop
jo
mov
adc
je
xor
aas
jno
push
mov
rcl
shr
adc
inc
shl
push
dec
loop
clc
sub
popf
(bad)
pop
add
mov
or
inc
(bad)
jp
(bad)
pusha
push
fdivr
dec
frstor
je
pop
and
lea
inc
mov
outs
fnsave
or
and
jbe
es
pop
js
(bad)
loop
jge
test
inc
daa
xchg
inc
mov
xor
sbb
xchg
pop
(bad)
xor
addr16
cmp
dec
jp
pop
cmc
mov
scas
daa
call
pop
retf
mov
jno
mov
xchg
int3
or
shl
mov
mov
je
nop
mov
pop
push
outs
jecxz
daa
xchg
jo
mov
or
or
data16
cmp
xor
es
sar
in
push
aas
call
jl
xor
cmps
hlt
icebp
fiadd
add
ins
fnstenv
add
sub
push
inc
and
pusha
push
sub
push
mov
jnp
loop
mov
in
repz
clc
jmp
and
and
and
inc
push
test
and
push
call
pop
adc
fst
fwait
pop
jo
sahf
cmc
scas
pop
inc
push
lea
aas
jl
sub
xor
inc
cmps
jg
xchg
inc
in
call
xchg
stos
dec
fwait
sub
cmp
mov
gs
mov
fdiv
mov
jg
mov
in
cmp
adc
jno
jo
sub
cwde
inc
mov
xor
jmp
out
jae
je
jmp
sahf
sbb
in
and
pushf
sahf
enter
jle
jb
addr16
sti
into
xchg
out
fbld
scas
paddusw
fnsave
or
or
out
mov
aas
repz
inc
stos
int
sbb
mov
movs
mov
(bad)
adc
cmp
pop
loopne
fnsave
sub
loope
cmp
sub
jl
ins
xor
xchg
sub
fnsave
outs
fs
shl
movs
inc
dec
gs
xchg
lods
cmps
es
(bad)
adc
cli
or
jbe
xor
in
mov
pop
add
imul
mov
paddsb
out
lods
aaa
std
aad
add
xor
mov
push
repnz
aaa
inc
outs
adc
jns
iret
in
addr16
cwde
(bad)
jle
pop
inc
data16
ss
ret
retf
inc
and
ror
add
stos
pop
imul
in
lock
hlt
ins
mov
cmp
mov
sbb
sbb
cmc
push
scas
arpl
fdiv
or
movs
cli
mov
in
or
add
vphsubwd
movs
pop
mov
pop
xor
xchg
int
les
add
jge
dec
mov
in
lea
js
div
rol
cmp
mov
pop
(bad)
xchg
hlt
lods
int
rcl
dec
xor
js
jb
sub
add
add
push
adc
mov
sub
int3
rcl
fwait
xchg
je
mov
xchg
add
outs
jns
cmp
sub
sub
ja
lds
jg
pop
ins
jb
test
sbb
mul
lea
mov
jns
dec
push
mov
sbb
int
shl
dec
sbb
cwde
ror
fbstp
xchg
mov
ror
adc
or
dec
xor
setle
hlt
cs
ss
push
and
add
(bad)
and
loop
into
ret
ficomp
test
aas
or
sub
(bad)
mov
or
enter
shl
inc
xchg
cli
push
add
pop
mov
lock
and
cmps
cmp
pushf
(bad)
jns
(bad)
loopne
adc
loope
push
int
aad
adc
push
or
jmp
jecxz
push
std
adc
mov
jmp
rol
mov
and
mov
es
ror
dec
push
dec
leave
mov
fstp
int3
pop
(bad)
fdecstp
inc
nop
(bad)
stc
daa
mov
pop
push
fidivr
xchg
xor
pushf
xor
(bad)
mov
pushf
dec
xor
gs
fstp
xchg
sbb
mov
mov
sbb
retf
push
push
xor
or
add
lahf
movs
stos
ror
mov
int
and
or
imul
pop
sub
lds
test
cmp
pop
gs
movs
cld
mov
xor
cmp
dec
adc
adc
test
and
or
sbb
ud0
xor
xor
ja
xlat
sar
add
xor
mov
movs
mov
neg
loop
jne
icebp
inc
adc
mov
int
out
mov
xchg
sti
inc
jns
and
jmp
push
or
jne
push
scas
retf
mov
inc
xchg
dec
dec
jge
xchg
pop
jp
xchg
inc
inc
call
adc
xor
push
int
and
cmp
cdq
iret
jo
leave
xchg
jl
lds
repz
ja
sub
(bad)
and
lods
or
or
or
scas
mov
retf
inc
or
inc
sub
mov
inc
pop
in
mov
dec
mov
clc
mov
jge
lods
leave
pop
adc
(bad)
repnz
add
test
mov
sub
pop
sahf
jmp
inc
push
retf
pop
aam
retf
mov
adc
aaa
aad
ror
out
gs
hlt
sub
xchg
out
loopne
imul
or
(bad)
adc
addr16
and
sar
iret
jl
(bad)
retf
outs
xor
aam
pop
mov
cmp
xor
mov
sbb
cmp
rcr
xchg
aam
retf
dec
xor
dec
adc
cmps
ficomp
jecxz
stc
push
mov
mov
cmps
data16
out
mov
push
jg
push
jl
cmc
les
ficomp
cmp
xchg
mov
mov
cmp
out
or
sbb
pusha
and
mov
adc
mov
jns
cld
(bad)
mov
xchg
mov
jo
add
push
or
push
(bad)
out
popa
fild
test
dec
call
dec
cdq
sbb
or
jae
das
dec
ins
cmps
sahf
mov
jmp
jnp
push
jnp
fcomp
jmp
cmp
xor
repnz
int
(bad)
jmp
retf
dec
mov
mov
jle
add
test
push
add
and
retf
or
cld
shr
adc
fdiv
dec
clc
mov
test
out
push
add
ss
les
cmp
jp
js
mov
hlt
daa
repz
mov
mov
jno
fmul
mov
call
pushf
xor
sub
xlat
sbb
adc
imul
sbb
or
mov
pop
jne
xor
jbe
sbb
or
sub
jnp
mov
aas
add
sbb
push
xor
bound
mov
inc
fs
adc
xor
stos
fisub
gs
cmp
pop
in
add
fnsave
imul
stos
ins
xchg
xor
int
out
lahf
sub
mov
inc
sti
lods
mov
mov
lods
mov
cmp
imul
fsubr
push
pop
mov
out
mov
pop
ins
cmps
or
xor
add
gs
in
or
cld
popa
inc
pop
sahf
int
bsf
lock
sub
push
and
mov
lahf
adc
ret
or
ins
int
hlt
adc
loope
dec
xchg
leave
push
jne
inc
push
dec
jecxz
or
push
fcomp
je
retf
cmp
mov
push
call
test
mov
pmaxub
call
mov
mov
cdq
or
cs
(bad)
add
movs
sub
rcr
iret
push
ins
lahf
rol
(bad)
les
sbb
inc
push
scas
jecxz
sbb
fldln2
sub
add
call
int
sahf
jnp
aam
add
xchg
inc
es
enter
pop
shr
repz
push
pop
push
jmp
mov
ins
and
push
mov
lds
fidiv
(bad)
mov
dec
nop
loope
push
and
push
or
(bad)
cs
jbe
das
fwait
cwde
and
xor
popa
outs
jns
mov
fiadd
xchg
lods
sar
mov
dec
cmp
fcom
sub
dec
ret
dec
inc
iret
push
neg
dec
mov
xchg
loop
rcr
outs
retf
popa
pop
sub
adc
or
jmp
mov
les
fisubr
mov
int
aad
icebp
ficom
loop
and
mov
dec
sbb
jae
jge
jle
mov
cmp
loope
sub
cmp
jne
push
mov
jg
inc
add
icebp
sbb
adc
sub
in
out
std
jmp
imul
ds
sub
cmp
sbb
ss
pop
mov
push
shl
lea
les
(bad)
cld
pop
cmovp
fisubr
aam
neg
adc
mov
mov
jo
gs
push
and
je
fs
cwde
(bad)
cmp
je
push
mov
dec
sti
jmp
or
inc
and
sbb
sub
push
add
repz
pop
call
ror
ds
(bad)
and
push
in
push
fcmovb
mov
gs
pop
mov
loopne
cmp
adc
cs
jecxz
sbb
xor
(bad)
or
jnp
(bad)
mov
not
mov
daa
push
pop
sahf
adc
jp
int
inc
xchg
xor
inc
mov
mul
pop
adc
push
fs
std
aad
pop
stc
(bad)
dec
mov
mov
test
loopne
call
jb
lods
stos
std
sub
clc
ss
jo
xchg
push
push
or
xchg
mov
mov
fs
adc
xchg
int3
cdq
jnp
sti
adc
retf
xchg
or
scas
sar
sti
mov
sub
xchg
mov
and
mov
or
inc
js
mul
xchg
cdq
std
push
mov
xchg
jb
mov
sti
push
test
inc
repz
(bad)
cld
fnstenv
sub
mov
xchg
sahf
mov
daa
xor
fsub
inc
lock
mov
add
push
sub
adc
push
pop
repz
jp
xchg
push
push
pusha
lods
xchg
dec
xor
lock
fst
cdq
push
mov
aaa
sub
mov
cld
pop
rcr
xchg
addr16
jmp
push
cmp
push
sub
mov
cmp
nop
test
or
jg
movs
inc
sbb
jge
cmps
imul
gs
out
(bad)
cld
test
and
or
loop
loope
vpmacswd
xor
or
ja
arpl
in
push
jle
sub
sbb
jmp
jp
and
add
(bad)
out
les
(bad)
out
bswap
xchg
push
push
mov
dec
push
dec
test
out
cmps
(bad)
cmp
push
dec
lock
push
push
pop
sub
xchg
mov
loop
mov
int
dec
es
test
xor
jg
mov
mov
cld
inc
add
int3
add
iret
cmc
push
movs
pop
push
out
add
fwait
pop
sub
push
mov
push
std
out
pusha
mov
inc
jp
stos
cmp
stos
mov
scas
add
fwait
int
scas
cmc
ficom
shl
je
or
stos
bound
adc
fsub
pop
push
xchg
loopne
stc
push
sub
and
or
mov
mov
sbb
xor
loopne
fld
adc
sbb
(bad)
mov
rcl
sub
jle
cmp
lea
push
jmp
loopne
sar
xor
repz
sub
(bad)
xchg
call
and
shl
mov
retf
push
call
jae
xor
dec
mov
lock
xchg
cmps
arpl
mov
pop
mov
cli
icebp
idiv
es
sub
push
mov
in
xchg
sub
adc
sbb
pushf
pop
mov
inc
stc
xchg
das
movs
inc
scas
jae
(bad)
xor
aas
adc
enter
mov
aam
mov
sub
out
(bad)
fs
mov
jg
loopne
(bad)
push
cmp
sbb
jecxz
ret
adc
mov
sub
neg
fmul
(bad)
je
iret
inc
bound
shl
pop
mov
retf
ds
retw
push
stos
js
xor
movs
pop
fstp
cmp
retf
sub
aam
xchg
aam
jb
and
mov
or
adc
hlt
popf
xor
cmp
sbb
cli
lahf
dec
cli
out
movs
jb
add
(bad)
jp
push
outs
inc
jno
xor
xor
and
ja
mov
mov
pop
sahf
push
inc
sbb
mov
xor
pushf
(bad)
mov
ret
and
or
cmp
pusha
mov
adc
scas
test
pmaxub
dec
aam
aaa
addr16
mov
cdq
pop
fdivr
mov
shl
daa
pop
cmp
sar
jg
and
mov
stos
pop
xor
add
jae
sbb
cmp
clc
add
dec
push
mov
lock
jmp
cmp
mul
out
dec
into
test
cld
xchg
ret
int
mov
mov
out
imul
inc
hlt
jle
xchg
mov
sbb
cmps
frstor
out
jb
and
popf
and
pop
push
or
int3
add
or
jmp
(bad)
aam
mov
retf
(bad)
jp
jp
jl
jmp
mov
in
popa
imul
cmp
cwde
and
mov
popf
arpl
sbb
push
movs
or
sbb
aad
(bad)
sahf
popa
adc
popf
dec
(bad)
aam
neg
mov
sbb
movs
test
(bad)
(bad)
pop
mov
repz
(bad)
jmp
add
std
add
in
inc
pop
jns
dec
cdq
push
(bad)
jl
mov
sbb
or
mov
dec
mov
jbe
push
mov
inc
(bad)
cmp
xor
stc
(bad)
out
xor
push
nop
ret
jmp
adc
dec
inc
push
add
std
pop
pop
es
hlt
sub
jecxz
xchg
rol
test
daa
ror
ins
add
movs
adc
aad
inc
and
dec
les
mov
push
cmp
adc
add
aam
cmp
cli
add
sub
dec
push
dec
pop
inc
aad
sbb
sbb
das
push
jp
jo
push
div
pop
pop
ret
sbb
or
cmp
stos
jae
or
push
lock
xchg
lods
sub
sbb
jns
mov
sbb
cmp
movs
test
mov
popf
ss
ds
inc
out
lea
dec
inc
cmp
ret
add
push
jbe
scas
and
cmc
enter
les
int
cmps
outs
arpl
cmp
inc
stc
int3
mov
push
mov
mov
jno
and
int3
and
aad
xchg
jp
xlat
lock
mov
in
inc
xor
ja
adc
outs
repz
push
and
jbe
mov
xchg
pop
jmp
imul
sbb
adc
xor
jns
jmp
inc
pop
loop
or
js
add
pop
sbb
lods
test
sahf
icebp
mov
adc
fwait
imul
sar
pop
mov
faddp
push
movs
sub
popa
rcl
cmc
push
xchg
aad
and
xor
push
lds
dec
das
out
or
jb
cmp
inc
lods
leave
je
shr
in
loope
int3
(bad)
mov
mov
imul
mov
fs
pop
xchg
fisttp
mov
sar
mov
add
pop
cmp
cmp
sub
test
lods
xor
xor
retf
sbb
sub
or
add
fld
scas
mov
jmp
popf
xchg
test
mov
lahf
jne
add
or
dec
das
pop
lods
mov
mov
jnp
inc
pop
inc
and
sbb
sahf
call
(bad)
lods
xlat
cmp
adc
push
mov
inc
pop
js
out
xor
or
nop
push
inc
ss
cmp
push
stos
and
jb
pushf
mov
lds
sub
xchg
int3
or
cdq
adc
or
jmp
xlat
sub
pop
es
cwde
push
hlt
jmp
xchg
sbb
pop
mov
mov
aam
hlt
dec
and
ret
dec
test
pop
call
mov
jmp
outs
mov
inc
ror
or
or
add
rcr
icebp
cmps
vpshaw
nop
dec
ja
sub
cwde
cmp
push
loope
es
inc
jo
in
jnp
cwde
lahf
inc
dec
jno
arpl
shl
mov
jmp
sub
stos
cld
xchg
jle
jge
rcl
inc
mov
sbb
or
aad
sub
lock
(bad)
xchg
inc
push
retf
sub
cmps
jbe
xor
cmc
mov
jl
inc
mov
test
jge
mov
rcr
repnz
inc
sub
adc
bound
loope
shr
leave
add
push
or
mov
mov
or
mov
dec
loope
and
es
pop
pop
sub
cmp
mov
jecxz
mov
inc
add
mov
aas
push
popf
aad
out
sahf
lds
or
movs
push
and
and
pop
inc
scas
fisubr
enter
not
jl
push
int
in
repz
add
pop
cdq
and
mov
repnz
pop
outs
leave
mov
icebp
add
jne
ss
mov
sub
les
loop
jge
pop
int3
and
push
pop
pop
and
mov
out
ror
inc
or
sbb
inc
and
inc
xlat
cmc
clc
jno
(bad)
jne
sub
push
cmp
pop
es
push
and
sub
cmps
and
sbb
mov
jle
mov
sbb
mov
pop
jmp
mov
cmp
aad
cwde
icebp
xchg
fadd
xor
sbb
mov
inc
sub
inc
fisttp
test
(bad)
sar
mov
popf
jns
xchg
dec
movs
scas
fst
cwde
jmp
cmp
dec
leave
adc
shl
mov
popa
arpl
push
js
pop
inc
jle
jno
gs
ja
dec
call
inc
cmp
xor
popa
cs
sti
inc
xor
je
jns
into
lea
mov
sub
adc
mov
scas
dec
into
fcmove
pushf
mov
pop
xor
or
cld
push
cmps
cmp
xor
push
idiv
cmp
movs
sbb
clc
sub
jmp
retf
xchg
mov
(bad)
mov
jle
mov
mov
imul
jns
fist
fild
mov
sbb
mov
mov
rol
add
push
inc
mov
mov
mov
cmp
cld
test
jno
movs
cmp
cmp
add
cmps
xor
pop
or
jo
cmps
xchg
repz
pop
mov
out
fisttp
or
or
int3
adc
out
bound
scas
scas
retf
idiv
ret
repnz
sub
test
push
aam
test
mov
(bad)
pusha
daa
popf
cld
jmp
xlat
pusha
aam
push
push
or
mov
xchg
stos
je
test
sbb
jmp
jp
imul
sbb
mov
sbb
jnp
mov
sub
cmps
xchg
mov
mov
pop
mov
inc
jle
mov
push
push
fwait
inc
sub
outs
xor
aad
jns
fadd
dec
idiv
adc
xlat
adc
cld
sbb
push
lahf
jns
mov
jb
outs
stos
push
dec
jmp
push
xchg
cdq
and
ss
icebp
and
mov
shl
pop
mov
cmp
rcl
or
in
mov
push
jae
ins
adc
jl
arpl
or
xor
push
jmp
or
inc
retf
and
dec
sbb
ret
mov
fnsave
js
sti
mov
mov
aaa
rcl
mov
movs
add
adc
ss
sbb
test
int
and
mov
movs
imul
sbb
jb
sbb
fnstcw
xor
adc
cdq
(bad)
cmp
imul
popa
sub
gs
inc
mov
repnz
outs
icebp
fmul
xchg
rcl
sub
mov
cwde
int3
mov
cmc
xor
aad
(bad)
adc
cmc
inc
mov
jle
lahf
fcomp
in
mov
in
lea
gs
lock
out
push
(bad)
dec
push
xor
call
mov
aam
xchg
sbb
jecxz
jne
mov
inc
ins
fisttp
fcom
jb
adc
push
xor
adc
imul
es
push
(bad)
cmp
or
sub
add
imul
popf
sti
int3
and
pop
xor
into
adc
loope
push
xchg
movs
cmp
or
mov
enter
inc
add
(bad)
addr16
mov
xchg
loopne
shl
cmp
test
adc
jb
(bad)
call
jmp
scas
nop
imul
adc
cmp
jmp
shl
aaa
xlat
ffreep
fiadd
shl
test
mov
lea
dec
push
xchg
mov
test
outs
mov
pop
rol
ret
pop
shl
outs
ror
xchg
inc
push
ja
scas
ja
and
mov
xor
movs
fsub
mov
rcl
out
jmp
call
test
xchg
ror
inc
fisubr
adc
add
inc
fdivrp
lods
cmp
and
fiadd
pusha
or
dec
sbb
popf
sbb
cli
data16
int3
repz
xchg
jl
sub
and
and
(bad)
mov
out
jg
xchg
push
xor
(bad)
ss
jb
mov
dec
inc
jbe
pop
scas
xor
mov
jns
adc
mov
or
movs
adc
stos
jg
into
and
(bad)
dec
add
scas
sub
imul
std
mov
adc
pop
mov
es
push
data16
jno
cmps
push
sub
cmp
dec
sub
test
iret
or
cdq
push
retf
dec
or
sbb
lock
adc
shl
xchg
out
mov
lahf
rcr
lock
dec
fld
jge
mov
cmp
rol
sub
das
test
add
jns
jne
push
xor
pop
fidivr
daa
sahf
arpl
mov
jnp
lds
dec
mov
enter
lods
sbb
xlat
mov
jmp
loope
dec
push
popa
arpl
cdq
in
out
mov
jp
shr
arpl
and
sub
nop
retf
pushf
pop
loope
(bad)
add
ss
shl
xlat
aad
test
sub
push
in
out
inc
cld
mov
scas
jle
mov
dec
dec
ja
outs
push
stc
movs
xchg
in
sbb
and
icebp
push
sub
mov
int
and
test
inc
and
xlat
add
cli
mov
fidivr
(bad)
xor
or
popf
sti
add
or
inc
inc
mov
inc
mov
dec
add
enter
retf
cld
in
int
sti
mov
add
movs
sbb
and
in
fdivr
leave
jb
test
add
inc
cli
cmp
lahf
cld
ja
enter
inc
fisttp
ss
cmp
test
inc
xor
scas
adc
mov
stos
mov
cs
pop
mov
cmp
iret
sub
test
add
into
jecxz
jnp
add
fnstsw
pop
xor
mov
cmp
in
add
pop
mov
call
mov
out
pop
sbb
inc
leave
xchg
lahf
movs
lds
lods
inc
rcr
mov
xchg
fsub
mov
sbb
aam
jmp
mov
mov
push
scas
xchg
and
sbb
xchg
sbb
mov
ret
dec
jno
xor
and
dec
inc
push
rcl
test
arpl
cwde
sub
xor
dec
sub
int3
dec
out
ins
cmp
dec
pop
movs
xor
pop
scas
xlat
fcmovnbe
aad
xchg
repnz
(bad)
adc
push
packuswb
loopne
stos
jmp
cld
inc
test
sub
lock
or
pop
mov
and
push
push
inc
scas
sub
add
mov
retf
in
adc
rcr
jo
sub
xor
loopne
pop
pop
fstp
mov
jo
aaa
push
ret
xor
pop
sar
pop
int3
mov
packuswb
aam
ror
test
jo
fwait
scas
enter
xchg
push
or
xor
inc
rol
jae
jo
and
hlt
dec
test
bound
add
jbe
or
dec
ins
ins
outs
pop
and
inc
call
repz
or
cmp
jne
in
addr16
pop
xchg
inc
mov
or
sub
add
xchg
xchg
or
cmps
mov
popa
sti
fsubrp
push
gs
lods
xor
mov
sbb
rol
inc
in
push
push
jl
jns
mov
or
sar
popa
sbb
fsubr
mov
idiv
ss
imul
sub
dec
mov
movs
ds
ror
cmp
icebp
sub
fimul
sbb
or
adc
std
add
ss
test
mov
stos
popf
pop
clc
cmp
jl
or
pop
inc
mov
cmc
and
test
and
movs
jns
mov
daa
out
rcr
xor
cmps
pop
xor
push
sahf
les
mov
sub
clc
push
xor
addr16
dec
cmps
sub
paddw
add
mov
or
sbb
jo
call
sbb
jge
adc
hlt
sti
push
outs
mov
push
pop
inc
ret
adc
inc
adc
jge
out
inc
mov
cld
pop
or
mov
push
ret
ss
les
lock
ss
nop
js
dec
jo
fld
repz
push
xor
retf
rol
out
(bad)
or
in
push
mov
push
cmc
adc
cmp
arpl
pushf
jne
lock
aam
or
mov
out
inc
sub
test
aad
and
cmps
out
jle
or
call
call
aaa
sub
push
jp
out
xor
inc
aad
inc
dec
or
push
lds
popa
push
sbb
and
mov
mov
push
sahf
popa
test
lea
int
add
cmps
scas
ret
pop
sbb
daa
jp
mov
mov
sbb
daa
ja
pop
mov
gs
leave
scas
sbb
sub
in
sar
in
mov
push
jp
and
pop
cmc
repz
test
mul
loop
(bad)
lods
pop
xchg
mov
inc
inc
(bad)
arpl
sub
cs
add
pop
xor
push
js
jne
mov
scas
dec
mov
xchg
and
cmp
jbe
sub
stos
jnp
js
ret
dec
jae
pusha
and
mov
into
or
mov
and
add
stos
int
push
or
aam
jne
jbe
push
mov
push
std
int
push
js
fs
call
dec
pushf
add
xchg
xchg
xchg
dec
pop
mov
dec
cmp
aas
push
scas
mov
or
dec
int
ss
mov
(bad)
jno
mov
lods
lds
loopne
nop
pop
fsubr
sub
sbb
fs
mov
fild
ror
pop
push
scas
mov
cmc
ins
test
ins
rcr
jnp
cmps
iret
mov
in
nop
jmp
es
(bad)
mov
and
xchg
hlt
rcr
fldenv
add
lock
into
sub
mov
scas
add
cmp
xchg
sti
fsub
xchg
inc
pushf
shl
movzx
xor
sbb
sub
jno
loope
adc
ds
and
jno
adc
adc
or
inc
push
mov
and
addr16
cmp
push
cmp
out
lods
js
movs
mov
mov
div
mov
test
mov
out
sub
jmp
out
ja
or
pop
scas
inc
repz
push
xor
add
fisub
and
aad
jle
adc
sbb
sti
(bad)
mov
push
sbb
fcomp
je
(bad)
push
sar
sub
lock
fxch
sbb
je
pop
mov
ror
mov
test
and
pop
adc
mov
inc
inc
outs
push
push
mov
push
or
push
jmp
scas
adc
sar
ret
icebp
fwait
inc
cmp
push
push
jmp
(bad)
cmps
push
int3
cdq
idiv
push
mov
dec
aaa
ror
sti
and
lods
std
xchg
jmp
or
(bad)
lods
imul
(bad)
test
mov
xacquire
dec
hlt
mov
int
xchg
xlat
push
and
out
ss
mov
ins
and
inc
push
lahf
je
and
push
cmp
and
hlt
mov
lods
ror
(bad)
lock
popa
cmp
inc
data16
popa
mov
xlat
mov
push
xor
mov
sub
mov
enter
call
xor
shr
pop
add
icebp
in
jmp
cmp
fmul
jno
loop
cmc
ficomp
int3
je
mov
out
dec
and
xchg
xor
stos
ret
fld
cld
xchg
push
test
pop
mov
clc
repz
rcl
inc
and
jno
push
sub
sbb
sbb
jnp
mov
push
jmp
xchg
mov
scas
xchg
pop
popf
les
and
data16
mov
loop
jle
sub
jge
mov
sbb
dec
cmp
sbb
mov
jno
retf
movs
sbb
cdq
jg
dec
ror
shr
mov
retf
mov
arpl
push
inc
inc
fld
cmp
pop
inc
xchg
mov
cmp
outs
mov
mov
ja
push
xchg
sbb
les
jmp
xchg
inc
scas
sahf
imul
fild
in
mov
or
ret
fcom
lds
lods
mov
pop
rcl
int3
and
pop
sub
cmp
mov
leave
movs
stc
add
aad
pop
std
(bad)
pop
mov
sub
xor
(bad)
cmp
or
mov
cmp
mov
push
xchg
xchg
stos
sbb
lods
cwde
adc
dec
xor
jne
enter
stc
jnp
xor
scas
idiv
and
retf
ficomp
mov
in
addr16
in
aaa
or
sbb
sub
inc
mov
pushf
movs
shl
mov
fisttp
stos
mov
ss
push
das
call
fs
mov
mov
stos
call
add
(bad)
ins
lods
sbb
outs
mov
mov
and
ficomp
jnp
scas
test
cmp
or
mov
pop
xchg
cs
add
shl
enter
cdq
mov
or
or
adc
pop
pushf
sub
fcomp
and
aaa
adc
pushf
ds
xor
jg
stc
sar
or
arpl
dec
sahf
and
fwait
in
mov
xchg
mov
ror
leave
push
jbe
sub
xor
fbld
mov
pop
xor
imul
fsub
leave
or
not
xchg
test
nop
mov
add
mov
push
mov
xchg
imul
outs
mov
imul
jl
jge
sub
cmp
jmp
or
leave
popa
retf
mov
xor
imul
jmp
xor
mov
fmul
test
fisttp
retf
stc
sbb
or
jno
add
sbb
push
jnp
imul
scas
shl
imul
jbe
and
dec
sub
repz
add
shr
fdiv
cmp
mov
pop
loopne
call
sub
lds
pop
in
loopne
sub
int
clc
push
scas
mov
les
add
aam
shl
or
mov
push
cmc
push
aaa
jle
sub
ss
push
xchg
out
dec
add
or
in
popa
ss
sub
sbb
fsubr
pop
aad
out
lods
sub
in
mov
leave
add
lea
repz
jno
lds
push
jmp
test
hlt
mov
das
in
jno
enter
xor
jbe
fdiv
cmps
nop
das
clc
dec
int
scas
(bad)
jmp
je
iret
bswap
lahf
xchg
in
cmp
(bad)
fstp
jle
les
fidivr
cwde
je
(bad)
xchg
xor
pusha
xor
gs
loop
idiv
(bad)
mov
outs
cmp
aas
add
pop
add
mov
or
pop
(bad)
outs
bound
adc
out
out
xor
test
jb
xchg
dec
lahf
dec
cmp
aas
rsqrtps
sub
aas
scas
mov
jge
test
cs
adc
jns
inc
hlt
cmp
push
scas
ss
call
mov
gs
and
and
(bad)
cmp
push
mov
or
fiadd
in
inc
mov
push
push
and
adc
pushf
dec
mov
addr16
data16
in
add
int3
fild
xor
xchg
push
jns
inc
push
aaa
pop
pop
arpl
test
test
ds
test
mov
add
mov
xchg
test
push
sbb
add
or
jne
aaa
push
js
dec
add
lds
mov
mov
shl
sbb
aaa
les
mov
and
push
adc
mov
xchg
fsub
clc
sub
(bad)
xor
aaa
push
test
popa
out
dec
std
in
jmp
lahf
jno
fcmovne
out
call
retf
fadd
or
in
jne
ds
jbe
sbb
in
inc
imul
adc
xor
daa
xor
add
repnz
jmp
adc
sbb
repz
mov
ficom
loop
mov
les
sahf
pop
scas
mov
adc
jno
nop
jmp
mov
mov
nop
lods
sbb
addr16
fisttp
lock
mov
fidivr
outs
movs
mov
mov
rol
xor
stos
jne
jg
outs
jecxz
fsubr
adc
and
add
mov
xor
jecxz
dec
iret
out
inc
dec
add
out
cdq
and
adc
cmp
jae
mov
(bad)
shl
bound
(bad)
shl
sbb
ins
jmp
outs
test
push
ss
jns
aas
sahf
fidivr
mov
adc
push
cmps
movs
fwait
stos
push
lea
shl
push
jp
or
push
inc
retf
mov
xchg
inc
mov
xchg
js
arpl
mov
or
sub
call
cli
and
pop
mov
pop
cmp
xchg
in
retf
pop
std
(bad)
repnz
das
loopne
sbb
jg
xchg
out
xchg
pop
jns
sbb
clc
mov
mov
loopne
dec
dec
mov
out
sar
imul
jb
push
inc
mov
aad
popf
fistp
stos
out
scas
inc
jo
jo
imul
jmp
xor
adc
cmc
pushf
(bad)
mov
aam
push
mov
inc
pop
shl
cwde
mov
ja
and
cmp
jg
push
dec
mov
in
mov
es
(bad)
lahf
(bad)
mov
into
imul
outs
add
loopne
fdiv
adc
lods
xchg
pop
mov
dec
ins
inc
push
(bad)
jmp
push
xor
xor
fist
jae
add
in
dec
(bad)
icebp
arpl
adc
fisubr
pop
test
cmps
sub
pop
mov
pop
repnz
cmp
sbb
push
or
mov
hlt
jno
mov
mov
ja
mov
xchg
push
adc
xchg
ins
aad
mov
add
or
cs
xor
(bad)
shl
cmp
enter
mov
cmp
popa
pop
ffreep
sub
cmc
(bad)
das
mov
xchg
or
ds
les
sbb
xlat
icebp
test
pop
add
lock
push
pop
test
cld
sbb
rol
add
call
mov
ins
(bad)
cmp
mov
sub
cmps
sub
add
lods
call
test
sub
mov
je
pop
xchg
cld
push
cmp
das
sbb
test
clc
jb
jmp
jmp
test
into
jne
xchg
fiadd
neg
js
sbb
retf
rcr
mov
xchg
lods
pusha
adc
aam
push
(bad)
lock
mov
mov
retf
(bad)
xchg
out
xchg
mov
or
add
xchg
test
and
sub
loop
in
test
retf
lods
dec
nop
out
push
mov
inc
repz
sti
lea
dec
adc
or
es
and
inc
dec
mov
cwde
mov
sub
not
dec
data16
sbb
popf
dec
and
sti
xchg
pop
mov
scas
not
dec
cdq
jmp
adc
jecxz
les
adc
dec
bound
dec
mov
clc
ret
xor
sub
jnp
sbb
xor
xor
and
fwait
jo
dec
in
daa
cmp
or
adc
jo
das
clc
mov
xchg
xchg
test
pop
lods
std
pop
dec
jp
outs
pop
je
shl
data16
(bad)
paddq
clc
stc
cwde
(bad)
cmp
int3
pop
mov
test
dec
mov
icebp
imul
cmp
xor
xchg
or
xlat
jp
test
aas
sbb
cdq
repz
and
neg
pushf
dec
into
mov
dec
icebp
fs
cmp
leave
in
out
pop
push
add
arpl
xlat
dec
jb
push
xchg
jno
fstp
mov
xor
fisttp
push
hlt
inc
arpl
enter
xchg
jg
nop
inc
(bad)
in
sub
sbb
jno
into
pop
pushf
arpl
and
xlat
clc
fbld
mov
xor
adc
dec
pushf
lahf
pushf
mov
dec
add
leave
stos
adc
sbb
stos
add
sbb
loop
pusha
mov
mov
xchg
retf
(bad)
jl
xchg
fst
mov
mov
xchg
mov
daa
add
in
jbe
cmps
aaa
stos
fisub
nop
scas
retf
das
sbb
jae
pushf
test
sub
imul
out
mov
jb
mov
call
mov
neg
xchg
inc
xor
fimul
(bad)
and
jp
fnstenv
pushf
ret
les
mov
jge
(bad)
not
out
cmp
adc
loope
das
xor
fdivr
jp
dec
pusha
push
push
clc
mov
and
xchg
stos
mov
pop
lods
cmp
scas
push
out
inc
fnstcw
shl
dec
je
loopne
jmp
inc
xor
inc
xchg
push
enter
and
dec
jns
mov
enter
push
xchg
packsswb
inc
cmp
test
cmp
push
test
fnstenv
into
lods
xchg
fadd
ins
arpl
pop
or
lock
retf
jmp
and
push
xchg
test
int3
cmps
xchg
mov
fisttp
mov
and
push
leave
and
jb
cmps
inc
xchg
loope
inc
cwde
mov
push
xor
je
cmps
in
fbstp
and
jnp
pushf
inc
pop
fwait
xlat
jecxz
jecxz
xlat
jns
push
inc
mov
(bad)
sbb
outs
mov
push
push
ja
shl
inc
lods
and
push
push
ins
(bad)
dec
js
xchg
push
xchg
imul
pop
icebp
pop
movs
pop
(bad)
aas
(bad)
test
mov
outs
push
stc
(bad)
aaa
cmp
push
xchg
inc
push
push
les
xchg
sbb
xor
ret
(bad)
js
inc
or
(bad)
(bad)
and
xchg
xor
sbb
push
movs
mov
in
jns
or
iret
fistp
popf
cmp
fstp
bound
ds
dec
pop
rcr
cli
jecxz
or
sbb
inc
xor
(bad)
fnstenv
sub
push
jne
push
jno
and
mov
fisubr
loope
cs
and
mov
lods
lods
ins
cmc
mov
push
dec
cld
push
movd
sar
jno
out
jmp
cmc
scas
jns
add
xor
pop
push
repz
rcr
into
add
mov
mov
mov
sbb
mov
outs
arpl
xlat
push
or
iret
aas
ins
popf
and
es
jecxz
cwde
clc
inc
mov
pusha
mov
or
retf
rcl
cmp
mov
sub
fisubr
in
add
pop
cmps
arpl
xor
or
and
shl
mov
jle
jecxz
and
stos
cdq
sbb
movs
test
cld
and
(bad)
jmp
aas
jmp
stos
cmp
dec
(bad)
jmp
fsub
call
adc
push
cmc
mov
fwait
popf
retf
sbb
sbb
mov
dec
jmp
dec
cmc
xchg
add
mov
iret
sub
add
pop
outs
dec
xchg
add
mov
pop
sub
mov
dec
pop
(bad)
mov
ins
fst
movs
or
repz
(bad)
sub
lods
xchg
add
pop
mov
push
imul
lahf
test
dec
(bad)
cli
scas
mov
ins
and
movs
push
mov
mov
enter
stc
pop
lahf
or
cwde
js
jne
inc
pop
and
std
pop
jecxz
mov
(bad)
mov
cvttps2pi
ins
das
sub
dec
mov
lea
or
retf
mov
outs
ret
lods
xor
les
sub
fdiv
movs
in
ss
jmp
dec
cmps
les
pop
mov
imul
retf
sub
scas
loopne
sbb
xor
jmp
in
rcr
jne
dec
out
je
call
adc
sub
jl
call
sub
add
inc
xor
xchg
sub
cli
test
icebp
int3
(bad)
enter
icebp
popa
jb
jmp
cdq
aas
fld
mov
or
xchg
fidiv
test
jb
cwde
cmp
(bad)
and
imul
inc
xlat
jb
push
mov
jecxz
mov
call
push
push
cmp
xor
cmp
int3
dec
xchg
in
int
fisttp
jns
call
outs
lahf
dec
in
sub
rcr
addr16
push
pop
dec
popf
pusha
dec
(bad)
arpl
cmp
loopne
sahf
pop
(bad)
mov
push
sbb
outs
loopne
jg
mov
pop
pop
shr
pop
mov
cmp
je
fwait
jns
cmp
xor
shl
ret
loopne
inc
in
scas
cmp
jg
jno
packssdw
dec
inc
fucomip
out
ins
push
(bad)
arpl
cwde
fnstsw
add
push
push
sbb
mov
mov
mov
dec
stc
loopne
jmp
xor
mov
aad
ins
mov
(bad)
and
sahf
popa
and
sbb
lods
stc
rcr
mov
int3
cmp
pop
mov
cmps
or
lods
mov
add
cmps
add
inc
add
push
add
sbb
inc
xor
ret
push
mov
jae
repnz
sub
in
les
jle
mov
outs
add
push
mov
lea
fwait
mov
test
xchg
push
dec
call
retf
add
call
cmc
stc
xchg
aad
xchg
adc
out
mov
push
(bad)
jmp
and
jmp
fsubr
mov
and
retf
cli
es
ins
iret
push
or
ror
xor
enter
stc
cdq
in
(bad)
mov
push
xchg
jns
xchg
leave
and
cmp
ins
into
iret
xlat
pop
add
and
cmc
hlt
out
loop
jp
std
mov
inc
int
jmp
mov
aam
pop
push
xor
mov
cmp
adc
test
sbb
inc
(bad)
adc
inc
fstp
call
mov
stc
(bad)
fdivr
and
daa
push
dec
cmp
and
sub
pop
adc
jle
jo
arpl
sbb
(bad)
jle
stos
jle
retf
xchg
test
and
xchg
lea
aaa
fwait
call
push
sub
mov
push
movs
dec
das
xchg
(bad)
xor
aas
hlt
out
xchg
out
cmp
and
shr
mul
jp
cmp
dec
std
lods
fstp
ficom
fild
clc
fiadd
or
cmp
imul
adc
retf
push
cld
jmp
sbb
pop
dec
pop
stos
loope
jo
scas
movs
and
adc
mov
cmp
dec
ret
push
sbb
outs
nop
cmp
xchg
pop
imul
jb
xchg
or
jecxz
cli
ds
js
fs
in
enter
add
out
add
fldcw
jecxz
sub
mov
stos
jae
pop
ret
out
push
push
icebp
cld
fidiv
pop
lods
mov
dec
adc
inc
push
or
xor
pushf
jge
ficomp
ror
jecxz
je
sahf
loop
push
sub
les
cmc
daa
push
ins
pop
cld
das
push
test
add
mov
push
rcr
xchg
and
mov
inc
mov
idiv
xor
jne
enter
pop
cmp
in
mov
mov
jmp
cmp
mov
and
icebp
push
xor
mov
repnz
(bad)
pop
sbb
mov
push
mov
std
out
mov
or
call
push
lods
cmp
es
or
stos
push
xchg
into
push
mov
lock
cwde
add
cmp
lahf
mov
jge
cmp
sbb
sti
xor
add
push
xor
ss
pop
xrelease
push
push
jne
inc
cwde
jmp
and
inc
data16
sbb
xchg
(bad)
mov
pop
adc
dec
xchg
aaa
adc
adc
je
inc
sub
clc
outs
lea
push
movs
xchg
pop
cmp
dec
and
addr16
out
stos
xor
(bad)
pop
lods
shl
inc
sub
jl
sbb
push
push
jb
push
outs
jmp
outs
out
adc
cdq
sbb
loope
pop
or
push
js
sub
dec
mov
lods
iret
mov
addr16
pop
pop
sti
jg
mov
xor
dec
push
fisub
popa
sbb
int3
cmp
sub
mov
stos
stos
outs
sti
push
adc
popf
stc
add
adc
gs
push
out
jb
dec
test
sbb
daa
mov
xor
jecxz
sti
test
(bad)
mov
add
add
fmul
or
jno
push
(bad)
sahf
call
lea
and
dec
add
(bad)
sbb
pop
sub
mov
fld
daa
push
push
add
mov
add
lds
movs
pop
jno
lock
std
mov
cmp
dec
loope
jge
xchg
push
sub
or
aad
jmp
std
gs
fwait
movs
loope
(bad)
sbb
fcom
jae
push
fld
push
cmp
clc
dec
(bad)
jae
sub
sbb
xlat
jb
xchg
popa
clc
lea
(bad)
std
mov
dec
clc
sub
mov
enter
sbb
push
push
push
(bad)
call
int
sbb
dec
sub
je
not
pop
cmps
mov
mov
rcr
retf
jns
fimul
mul
push
das
add
inc
mov
sbb
sbb
xor
sbb
push
scas
test
and
(bad)
loope
and
pop
cli
in
adc
bound
cdq
in
sbb
jbe
push
pop
ret
sti
sub
stos
push
stos
lea
mov
test
mov
lods
das
sbb
or
mov
jg
jbe
xlat
jae
adc
and
movs
push
xchg
sub
mov
push
outs
pop
imul
add
je
xor
pop
call
or
movs
adc
sub
sbb
fdivr
inc
lahf
jmp
jge
mov
fneni(8087
jb
cs
add
sti
(bad)
mov
es
cdq
and
inc
push
cmp
push
mov
cmp
cld
nop
dec
aad
xor
scas
sub
fld
cmps
(bad)
fbld
enter
stc
mov
sbb
adc
xor
call
sahf
jns
dec
inc
rcr
mov
pop
inc
(bad)
cmp
cmp
sub
sub
and
cmp
cmp
jp
rol
mov
out
sub
lods
clc
cdq
out
and
rol
fdivr
add
mov
and
xchg
mov
std
push
enter
push
xchg
scas
xor
and
loopne
in
and
lds
cs
pop
icebp
sub
scas
add
pop
or
bnd
mov
adc
in
(bad)
jl
mov
dec
jp
mov
or
push
icebp
push
shr
push
in
add
adc
xor
cmp
mov
hlt
jo
call
scas
aaa
clc
push
pop
adc
and
aad
repnz
adc
jnp
or
inc
enter
loopne
mov
pop
pop
push
cmp
mov
jle
(bad)
pop
push
sbb
cmps
fs
add
sub
enter
push
fcmovu
std
xchg
xor
xor
mov
mov
mov
cmps
stos
in
adc
push
mov
js
and
and
mov
adc
mov
arpl
mov
xor
retf
push
pop
sub
xor
clc
loopne
in
fisub
mov
cwde
push
bound
(bad)
ins
(bad)
pop
loopne
push
sbb
sbb
scas
mov
dec
aad
ja
or
xchg
ja
inc
mov
push
push
push
push
(bad)
(bad)
jne
aam
leave
in
cmc
pushf
xor
or
pop
xor
adc
and
xchg
fld
cli
mov
xchg
xor
aam
xchg
jl
push
push
sbb
je
test
dec
mov
int
pop
push
mov
call
xlat
ins
movs
jl
and
mov
fs
test
push
sbb
cmp
jae
inc
fnstenv
cmp
push
and
pop
sbb
ja
push
outs
jo
loopne
inc
lds
(bad)
xor
push
mov
lahf
loopne
or
pop
into
les
mov
jl
sahf
xchg
push
mov
cdq
pop
in
and
es
jp
cmp
sbb
ror
out
or
jmp
xor
mov
push
lods
aad
push
daa
icebp
jbe
push
sbb
cmp
jg
pop
lods
mov
mov
or
and
(bad)
cmps
popf
enter
jo
popa
jno
sbb
jecxz
nop
add
mov
mov
push
sbb
stos
add
jnp
sub
dec
mov
xchg
das
mov
lods
sbb
add
xlat
enter
or
push
cmpxchg
imul
sbb
inc
add
fadd
lods
pusha
test
movs
mov
pop
push
cmp
dec
shl
jg
test
leave
mov
mov
ficomp
or
pop
sub
sar
outs
cs
mov
fisubr
rcl
pushw
in
pop
or
push
inc
fisubr
int3
dec
in
sbb
xchg
call
cwde
push
dec
push
dec
push
sbb
(bad)
mov
push
push
pop
ins
fsubr
adc
loop
movaps
sbb
fldenv
bound
adc
jp
jle
inc
icebp
retf
or
(bad)
movs
nop
cmp
shl
data16
sbb
pop
enter
bswap
call
push
movs
and
cld
xor
(bad)
idiv
pop
into
popf
fstp
ss
popf
push
jmp
cmps
shr
in
push
ret
sub
mov
lea
push
test
xchg
dec
loopne
maxps
mov
jl
jmp
inc
sbb
mov
mov
xchg
sbb
mov
rol
loopne
xchg
sbb
sahf
out
loop
imul
mov
(bad)
lea
sub
dec
in
dec
out
mov
push
dec
mov
push
icebp
mov
rol
xor
or
bound
fwait
std
out
mov
jl
inc
sub
xchg
xor
(bad)
mov
cmp
call
shl
pusha
mov
mov
retf
ins
jg
mov
push
cmp
mov
fisubr
jno
es
in
gs
rol
add
(bad)
xchg
mov
xor
outs
mov
sub
lock
lock
cld
pop
sub
scas
adc
pushf
dec
pushf
sbb
or
push
in
lds
push
in
sbb
test
in
adc
mov
retf
add
cwde
test
jmp
clc
std
mov
hlt
shl
mov
addr16
push
mov
mov
jle
std
xchg
sub
mov
xlat
cmp
les
jns
cld
and
dec
cld
cs
mov
adc
fild
or
add
inc
push
and
push
sbb
cmp
js
dec
neg
mov
xor
enter
push
imul
add
pop
sar
and
dec
stos
xchg
push
lock
dec
or
sbb
cmp
push
xor
dec
or
mov
addr16
xchg
mov
ror
cmps
mov
pop
cwde
mov
xchg
sbb
rdmsr
rcl
cmc
pop
mov
xchg
and
add
dec
xchg
bound
cmc
inc
xchg
sub
sbb
mov
push
mov
into
or
dec
xchg
loope
dec
push
jno
rcr
jb
xchg
add
mov
rcr
lds
lds
sbb
cmp
adc
lods
jno
fwait
loope
ins
cli
pop
mov
push
(bad)
mov
adc
imul
daa
lock
push
mov
int
add
loopne
mov
pop
dec
xor
xchg
xor
mov
ror
mov
lods
dec
pop
das
mov
or
inc
adc
ins
call
es
cwde
sub
(bad)
lea
xor
mov
and
push
ficomp
mov
jbe
mov
retf
sub
inc
dec
jb
fwait
jns
mov
pop
and
jmp
in
push
xor
xchg
retf
not
cmps
sub
cs
xor
mov
pop
shl
in
push
rcr
and
sbb
inc
inc
adc
inc
dec
movs
add
sbb
xchg
cdq
shr
cmps
lods
ins
dec
mov
push
shl
sub
push
push
mov
mov
dec
scas
mov
add
xor
or
xchg
mov
sbb
inc
fwait
int
(bad)
rcl
shl
sti
mov
sbb
into
mov
dec
in
mov
xlat
lods
pop
sub
mov
pop
and
outs
mov
shr
clc
into
mov
dec
add
push
dec
or
test
call
ret
cwde
cwde
or
xor
jb
sahf
fnstcw
push
je
xor
aam
add
loop
add
sub
mov
jp
test
xchg
js
lea
imul
cs
push
pop
jge
inc
xlat
test
clc
sub
shl
std
movs
retf
pop
stos
cld
xchg
push
stos
int3
adc
cmps
(bad)
dec
jle
retf
xor
imul
xchg
pop
scas
movs
or
movs
jb
push
adc
fstp
ret
mov
push
mov
dec
and
push
int3
jno
test
push
movs
data16
mov
(bad)
aas
jo
out
xchg
and
push
movs
ret
scas
pop
pop
jbe
jmp
imul
mov
or
(bad)
loope
or
jbe
push
xor
loopne
push
adc
add
cmp
dec
push
jle
outs
into
fldenv
lock
mov
xchg
je
mov
stc
xor
in
es
movs
lahf
push
cmp
in
sbb
pop
and
loopne
dec
xchg
mov
cwde
xor
mov
lahf
add
and
jge
xor
and
addr16
or
cmp
dec
add
inc
repnz
adc
leave
inc
nop
pop
cmp
enter
mov
push
retf
out
add
push
into
mov
or
inc
pop
cmp
adc
movs
cli
or
xor
jae
jo
fsubr
dec
xor
mov
and
dec
cli
cwde
push
mov
shl
sub
aam
adc
mov
cmp
push
and
sub
loope
xchg
je
out
sbb
loope
xchg
ins
add
pop
mov
xchg
add
jg
dec
clc
sar
cld
mov
or
mov
xor
or
cld
hlt
je
retf
adc
jg
outs
cmps
xchg
fsub
je
sahf
nop
jae
sub
inc
imul
mov
imul
mov
retf
in
out
dec
lods
sub
adc
sbb
xor
push
(bad)
(bad)
mov
jne
mov
pop
lods
repz
int
out
fild
test
out
sbb
and
push
jmp
in
lods
loopne
jae
sbb
les
jne
add
adc
lods
ins
enter
cmp
xchg
lds
int
mov
mov
shr
push
out
popa
mov
sahf
dec
xchg
push
ins
(bad)
je
dec
inc
pop
call
adc
lods
sbb
mov
push
outs
mov
mov
sbb
dec
(bad)
adc
xor
aad
mov
fld
xor
call
or
inc
xor
cmp
pop
lea
dec
cmp
fbstp
out
xlat
inc
loopne
sbb
add
jmp
mov
and
sbb
mov
pop
pushf
call
fucomi
lods
clc
jmp
ds
ja
dec
inc
adc
imul
mov
xor
nop
xor
out
shr
dec
ds
jg
call
fdiv
js
dec
das
jnp
pop
sbb
arpl
pop
pop
xchg
mov
add
push
(bad)
out
jns
sbb
inc
rcl
dec
xchg
mov
(bad)
xor
mov
outs
jmp
jl
popa
inc
mov
mov
jg
jecxz
xchg
je
jmp
sub
inc
loop
mov
nop
loope
sbb
add
inc
cmps
adc
mov
fisttp
lods
dec
hlt
mov
inc
mov
sub
out
bound
mov
shl
inc
push
adc
pop
push
jp
mov
std
xchg
daa
js
inc
fs
js
dec
jecxz
adc
pushf
mov
popf
cs
inc
pushf
pusha
sub
rcl
retf
push
les
and
in
fsub
jne
or
stc
(bad)
sub
xrelease
xchg
outs
stos
fsubr
mov
frstor
xlat
pop
pushf
mov
fsubp
sbb
sub
xor
(bad)
cmc
mov
cmp
jae
mov
ret
mov
jmp
xor
push
xlat
jb
xor
push
ds
xchg
mov
add
inc
cmp
jne
push
cmp
rcr
jecxz
push
cmp
mov
mov
lock
or
inc
pop
mov
lods
pop
ja
leave
adc
ret
cmc
pop
cdq
jl
dec
pop
sub
xor
ja
stos
scas
imul
stc
fnstenv
mov
dec
xchg
aam
inc
adc
mov
popa
ins
fcom
push
call
inc
stos
mov
lods
dec
je
xor
xlat
fidivr
and
or
mov
iret
mov
mov
ret
es
clc
xor
push
and
pop
lods
mov
imul
lahf
fidivr
or
cmp
dec
push
mov
inc
cld
adc
out
lds
and
(bad)
(bad)
or
aad
shl
shl
sub
cmp
pop
in
sbb
fwait
pop
push
cmp
into
jecxz
mov
adc
lahf
dec
jle
fistp
fistp
int3
fs
sub
mov
add
outs
test
xor
or
mov
mov
stos
shl
jg
jno
jg
ret
icebp
inc
add
in
jle
fild
shl
ds
cmp
outs
jp
mov
out
or
es
mov
xor
adc
jae
rcl
inc
rcr
mov
fldcw
fnstenv
ret
dec
pop
pop
pop
in
retf
sub
or
xor
push
xchg
or
fdivp
fmulp
arpl
out
fld
or
imul
mov
sbb
call
cmps
scas
stos
inc
data16
sahf
sbb
inc
dec
jp
push
aam
mov
gs
push
xor
xchg
cs
jp
mov
pop
pop
(bad)
in
lods
sub
jno
lock
es
jmp
ja
in
mov
jmp
mov
mov
add
mov
mov
jbe
inc
xor
cli
xchg
std
retf
ss
data16
add
cmp
in
sahf
sbb
push
mov
imul
mov
sti
clc
add
add
ja
xchg
dec
mov
(bad)
pusha
push
mov
adc
pop
in
ret
jbe
arpl
hlt
movs
inc
and
frstor
iret
ds
xchg
jb
push
std
shr
into
jnp
pop
fdivr
pop
inc
(bad)
test
or
cli
sub
mov
xor
lods
ss
adc
lods
not
jmp
mov
adc
ret
mov
cmp
mov
cli
mov
ret
fxtract
fwait
daa
mov
fscale
push
shl
pushf
mov
mov
inc
icebp
test
fisttp
aas
xchg
pop
and
add
ja
nop
adc
lock
xchg
pop
cmp
mov
js
movs
sub
lock
ds
sub
mov
and
jecxz
retf
cmp
mov
pop
lods
mov
and
imul
repz
neg
arpl
hlt
or
movs
pop
xchg
sbb
pop
lods
test
jno
push
push
jg
dec
stc
jmp
aam
cmp
movs
je
xor
movs
fadd
mov
mov
sti
in
inc
dec
dec
(bad)
push
fs
(bad)
cmc
daa
xor
mov
repz
lods
pop
xchg
in
popf
add
dec
cdq
add
out
fstp
inc
sar
xor
jmp
sti
pop
sbb
xor
mov
dec
dec
cs
lods
sbb
stos
adc
inc
cmp
sub
pop
lods
mov
stc
xor
sub
cmp
or
xor
(bad)
in
xchg
mov
sbb
dec
ins
arpl
or
mov
or
rcl
rcl
sar
retf
iret
retf
dec
xor
push
or
jmp
cmp
xchg
cld
or
mov
(bad)
adc
les
pop
aad
and
jne
adc
xor
xor
mov
sub
push
repnz
cmp
adc
scas
xchg
in
retf
xor
cmp
inc
jecxz
retf
test
push
not
lahf
push
movzx
loop
dec
pop
jnp
stc
adc
test
(bad)
nop
lods
mov
inc
jno
pop
into
sbb
and
adc
xchg
xor
sub
je
push
dec
add
cli
add
shr
(bad)
dec
pop
(bad)
jge
(bad)
rol
adc
lahf
or
mov
stc
or
or
xchg
mov
stc
aaa
add
iret
in
xchg
push
outs
xchg
ss
mov
hlt
arpl
push
daa
lea
add
push
sbb
adc
retf
pop
pop
xor
push
int
push
or
ins
xchg
mov
pushf
popa
dec
dec
cld
sub
into
push
xor
std
jb
xchg
xchg
push
ud0
inc
mov
xchg
hlt
imul
aas
cmp
mov
xchg
clc
pusha
xor
test
adc
fld
retf
bnd
lods
or
ss
outs
inc
xchg
jo
ins
push
imul
popf
sahf
xor
mov
icebp
inc
cmps
out
mov
or
mov
sbb
leave
xor
cmp
scas
cs
ss
sbb
xchg
sahf
cmps
leave
stos
mov
pop
xor
adc
sbb
jg
jns
sub
imul
mov
(bad)
aas
push
stos
retf
sub
pop
xchg
dec
mov
je
scas
(bad)
or
cdq
push
packssdw
push
add
bnd
adc
in
push
stc
(bad)
call
lods
xchg
xlat
add
fldcw
rcl
inc
push
ror
push
shl
dec
pop
mov
loop
dec
mov
mov
shr
lds
push
inc
pop
popa
ror
push
pop
push
xchg
push
cdq
jl
add
mov
pop
shr
loope
xor
gs
lods
repnz
loop
sub
pop
jg
out
or
rcl
mov
pop
add
jecxz
ss
jle
sbb
loopne
and
sub
or
cmc
xor
add
enter
or
pop
scas
jns
das
int
or
rcr
pop
ds
fcom
faddp
(bad)
(bad)
cmp
imul
ret
in
pop
rcr
shl
adc
pop
jg
out
loope
shl
jbe
mov
or
and
lods
ror
ror
fnstsw
push
mov
loope
mov
es
pop
retf
retf
mov
sub
test
xor
les
sub
inc
add
push
mov
in
push
push
add
stos
test
lods
mov
in
(bad)
or
iret
add
cdq
pop
inc
mul
in
repnz
js
adc
test
pop
xchg
or
jae
cmp
sti
ins
fwait
jbe
adc
imul
aad
inc
push
lahf
shr
or
sti
dec
xchg
retf
enter
int3
pop
mov
xchg
jne
push
pop
jno
test
scas
in
outs
xor
sbb
jns
xchg
adc
loope
push
movs
or
mov
inc
adc
fst
push
mov
pop
mov
imul
dec
cmp
fwait
lods
jge
or
icebp
or
scas
add
or
fs
repz
rol
sbb
movs
clc
inc
push
jg
push
xchg
cmp
aad
or
aas
je
jnp
and
aam
push
pop
push
push
jmp
jno
xchg
js
in
pop
ror
adc
and
movs
stc
xchg
sub
mov
loope
ins
xor
xchg
jmp
adc
scas
push
movs
push
xchg
adc
mov
pusha
inc
mov
imul
loop
movs
dec
lods
push
and
xchg
add
sub
or
mov
pushf
rcr
enter
push
and
ret
adc
inc
or
dec
cdq
sar
mov
mov
mov
sub
mov
add
inc
cmp
jl
xor
add
sbb
adc
lds
mov
jno
movs
mov
add
repnz
xchg
cmp
(bad)
and
cwde
jecxz
movs
stc
push
push
mov
adc
mov
shr
repnz
pop
in
test
or
imul
ins
ficomp
pop
loope
push
or
push
cmp
out
and
pop
dec
fwait
jno
push
jecxz
sar
(bad)
loope
(bad)
in
test
xor
mov
pop
lods
mov
outs
aam
adc
pop
fdivr
sub
mov
jecxz
dec
jne
dec
daa
pop
sbb
or
test
mov
mov
mov
mov
jnp
data16
test
add
lds
mov
out
popf
push
or
ror
cmp
sbb
iret
inc
pop
jmp
ret
mov
aas
pop
pop
inc
ficom
lods
xor
enter
pop
pop
mov
popf
(bad)
xor
arpl
lds
xor
je
pop
icebp
and
or
jle
add
call
das
das
sbb
rcl
test
adc
push
xchg
rcl
push
aam
adc
fsub
or
mov
dec
inc
dec
adc
in
push
push
(bad)
mov
mov
lahf
add
jne
sbb
sub
retf
leave
add
adc
cmp
fcmovbe
ja
rcr
pop
dec
pop
pop
pop
pop
arpl
dec
std
inc
into
pop
mov
es
mov
mov
pop
xlat
inc
adc
popf
loop
movs
repnz
jg
mov
jnp
sbb
push
jb
enter
mov
add
jno
or
adc
loope
add
jno
jo
sbb
cmp
fldcw
add
hlt
sbb
jp
ins
(bad)
call
jmp
mov
push
add
clc
mov
(bad)
fld
jmp
int
shl
rcr
fwait
adc
call
push
jmp
not
out
scas
out
add
or
pop
pushf
mov
cli
pop
inc
xchg
clc
pushf
movs
mov
inc
rol
sub
in
pop
dec
in
fdivr
jecxz
repnz
test
push
pusha
jge
lods
sub
mov
pop
or
movs
shl
(bad)
cmp
cmps
jb
out
cmp
xchg
hlt
rol
mov
inc
inc
into
std
test
xchg
scas
(bad)
shr
int
mov
adc
adc
(bad)
sbb
aad
jmp
mov
push
mov
cs
pop
cmc
cs
ss
push
aam
cmp
sub
cld
xor
push
push
int3
adc
xor
and
mov
enter
lods
jp
es
sbb
xor
inc
jb
ds
neg
outs
mov
fidiv
dec
sbb
xchg
cmp
sar
add
push
mov
jmp
bound
cmp
fadd
leave
mov
add
loop
lds
clc
sti
mov
scas
(bad)
pop
rcr
ins
pushf
push
pop
mov
push
leave
sub
popa
cmp
inc
aam
adc
rdpmc
mov
test
xor
push
and
push
mov
movs
movs
(bad)
je
mov
mov
jp
mov
or
ficomp
fst
mov
cld
add
jnp
retf
shl
out
jle
sbb
cmp
aad
inc
pop
fwait
in
rol
test
or
dec
mov
into
lahf
adc
mov
neg
xchg
push
(bad)
jne
mov
call
adc
jb
sbb
fsubr
adc
jbe
cdq
lahf
fidiv
add
jnp
mov
mov
pop
addr16
outs
add
ret
sub
pop
lods
push
pop
cmp
push
outs
icebp
cmp
dec
aad
sub
inc
call
inc
and
xlat
push
popa
pop
scas
xchg
popa
rol
jo
cmp
xchg
lds
and
popa
adc
cs
jge
and
inc
add
rol
shl
mov
pop
stos
es
fstp
sbb
in
xor
dec
data16
add
xlat
test
mov
fldenv
pop
adc
neg
popf
jno
int
imul
cmp
(bad)
call
sti
and
xor
push
add
mov
jae
or
inc
stc
in
inc
and
fisub
add
inc
xchg
pop
adc
(bad)
sub
ror
sbb
mov
(bad)
jl
inc
pop
mov
inc
das
aad
jmp
mov
std
inc
xchg
scas
and
and
push
sbb
sbb
and
iret
and
jbe
push
cmp
fst
and
mov
inc
mov
xchg
sub
fs
jle
mov
pop
mov
sub
pop
xchg
add
mov
test
adc
in
std
push
mov
adc
mov
mov
mov
push
jmp
jae
mov
push
mov
pusha
mov
or
and
bound
pop
push
(bad)
xlat
jae
lock
imul
jns
push
aad
jmp
mov
test
cmp
xor
pop
jmp
pop
sahf
xchg
sub
mov
hlt
ret
sbb
adc
loopne
jle
sbb
jb
pop
dec
add
push
jl
add
(bad)
int
xchg
cmps
pusha
test
cmp
xchg
cmp
jno
loop
pop
mov
dec
inc
mov
in
add
inc
mov
adc
xchg
test
shr
push
fild
mov
push
in
js
div
adc
xchg
push
sub
movs
sbb
aaa
pusha
jge
in
push
pop
push
adc
xchg
jp
loope
xchg
pop
dec
inc
(bad)
mov
lahf
mov
aad
jns
fnstsw
xor
jo
loopne
xchg
cs
fs
rcr
mov
xlat
jmp
or
sub
jno
mov
add
jmp
repnz
cdq
(bad)
dec
nop
mov
outs
cmps
mov
mov
inc
mov
sbb
lock
test
stc
pop
pop
(bad)
dec
inc
sti
adc
(bad)
xor
stos
adc
(bad)
mov
(bad)
stos
scas
repnz
in
xchg
aad
lods
inc
mov
add
jp
pop
xchg
and
das
push
fwait
adc
mov
and
adc
mov
aaa
xchg
cmp
std
dec
imul
popa
inc
lods
dec
je
sub
bound
add
jns
shl
test
adc
sub
lods
nop
cmp
push
jmp
adc
mov
or
adc
xchg
mov
call
xchg
ret
imul
mov
call
movs
mov
icebp
vpmulhuw
mov
mov
sahf
lds
int3
in
inc
mov
mov
mov
mov
into
fisub
pushf
xor
cmc
jmp
adc
jne
out
int
add
and
or
inc
fld
cld
fs
pop
imul
sub
xor
mov
mov
jge
mov
enter
es
mov
jecxz
movs
push
dec
in
call
shl
inc
clc
adc
mov
cmp
lods
jb
xchg
mov
ds
mov
pop
inc
xchg
fimul
loope
inc
movs
mov
addr16
xchg
adc
pop
xor
imul
pop
mov
arpl
add
in
inc
mov
push
mov
push
pop
std
add
sub
sub
dec
inc
jecxz
call
push
mov
icebp
jne
lahf
dec
push
fstp
jg
xchg
mov
sub
inc
ss
jns
xor
jnp
dec
test
fsubr
arpl
lods
mov
and
add
cmp
adc
dec
in
retf
ins
cmp
pushf
fistp
call
jno
sub
loopne
pop
and
pop
rcr
sbb
inc
sub
sbb
push
aas
mov
retf
fwait
aaa
(bad)
sbb
arpl
or
pop
mov
cmp
cmp
mov
or
das
shl
dec
cmp
cmp
aad
or
nop
inc
out
jmp
and
cmp
mov
loop
push
inc
out
adc
inc
call
inc
mov
std
repz
ins
add
div
jo
jbe
jo
in
cmc
xor
xchg
pop
(bad)
jbe
or
or
cs
cmp
fistp
jmp
fmul
in
dec
jge
and
push
es
lods
jg
mov
mov
popf
mov
push
test
lods
and
adc
xchg
sti
xchg
repz
rcl
repz
or
push
jae
mov
adc
data16
mov
ins
cdq
or
mov
nop
in
push
repz
test
push
(bad)
rol
fdivr
inc
push
pop
pop
stos
xchg
jae
addr16
pop
clc
je
sub
sub
pop
pop
mov
ins
out
mov
push
call
jmp
dec
inc
dec
mov
cmp
scas
movs
push
jns
inc
cmp
pop
xchg
mov
jmp
inc
test
pop
in
mov
or
movs
cmps
dec
or
sahf
xchg
scas
adc
or
dec
sti
(bad)
mov
dec
sub
fistp
sub
daa
cmp
jbe
sbb
cmp
jmp
or
shl
stos
or
je
icebp
in
jmp
adc
(bad)
test
and
hlt
mov
pushf
pop
fsubr
(bad)
lock
mov
dec
jge
and
repnz
cs
push
fs
jle
inc
push
or
adc
outs
or
call
(bad)
mov
cmps
in
mov
xchg
xchg
es
mov
xchg
pop
sub
cmp
add
shl
cmp
sbb
or
test
ror
pop
mov
xchg
jge
ror
cmc
cmc
xchg
inc
mov
and
movs
xor
cld
add
jb
pop
mov
icebp
fwait
out
es
xor
mov
push
or
sti
adc
neg
cld
add
pop
lahf
inc
in
repnz
pop
jmp
cmps
mov
pop
into
jno
sub
xor
inc
popa
int3
loopne
retf
fs
sbb
mov
out
repz
das
mov
or
repz
mov
lods
cmps
or
lea
sar
aas
xchg
lahf
ror
sub
jmp
push
sub
sbb
sbb
or
mov
or
addps
push
in
call
mul
aaa
scas
jl
pop
mov
pop
ds
(bad)
fbstp
(bad)
mov
push
mov
in
dec
imul
(bad)
xchg
in
dec
inc
or
mov
loop
add
mov
push
dec
sar
xlat
rol
jo
enter
adc
xlat
xchg
cmp
add
and
imul
hlt
dec
mov
xor
nop
sti
cs
scas
jnp
xchg
dec
rcl
or
frstor
add
jb
fdivr
fstp
mov
dec
fcompp
movs
imul
shr
cmp
pop
movs
mov
cmp
push
dec
inc
mov
imul
pop
lods
and
lods
lea
xor
es
pusha
xor
dec
dec
jg
xor
ins
outs
inc
dec
shl
out
jle
jbe
and
sbb
pop
bound
xchg
loopne
call
leave
or
out
add
movs
ror
(bad)
xor
cmp
mov
xchg
repnz
cmp
sar
dec
mov
cli
dec
inc
jl
mov
xor
pop
lods
into
outs
out
bound
push
mov
or
imul
add
mov
mov
mov
lds
mov
jns
jae
add
retf
int
movs
and
xchg
int
sub
sbb
cmc
pop
push
dec
jbe
lds
bound
aaa
stc
nop
add
cmp
shl
sub
push
scas
xor
and
call
lods
mov
sub
xor
call
in
xor
(bad)
cwde
int
stos
mov
stc
jmp
popf
sbb
dec
popa
ss
cmp
adc
mov
fs
xchg
in
xor
inc
test
push
adc
scas
gs
(bad)
jmp
das
aad
inc
and
jge
mov
xchg
sbb
cwde
fucompp
push
pushf
in
adc
les
mov
jge
sub
call
aad
int
cmpxchg
imul
minps
pop
or
jmp
cmp
jmp
shr
sti
ss
cmp
das
das
fs
inc
push
xchg
jae
in
mov
cmp
lock
imul
jne
inc
dec
add
hlt
(bad)
xchg
es
pop
dec
scas
pop
gs
fidiv
nop
mov
xchg
cmp
push
int
mov
lahf
sahf
jae
jo
or
aam
adc
iret
and
ss
enter
js
leave
mov
jle
mov
push
push
mov
out
out
xchg
sub
cmp
out
adc
xchg
push
jae
xchg
push
(bad)
nop
sub
jp
adc
pop
cwde
bnd
add
dec
push
das
mov
fwait
lahf
mov
stos
and
iret
bound
push
xlat
mov
outs
adc
sahf
retf
sub
(bad)
sbb
retf
hlt
inc
stos
cli
push
jmp
pop
cmc
or
sbb
pop
fistp
and
fsubp
out
xor
test
int
or
push
mov
call
dec
sbb
inc
mov
add
sub
mov
ret
pop
xor
ins
and
rol
dec
sar
pop
xor
rcl
stos
push
(bad)
mov
sti
cmp
scas
add
push
cmps
cli
daa
cmp
adc
ins
fist
pop
and
inc
or
je
xor
ja
mov
push
xor
dec
push
and
pop
push
shr
js
dec
jae
cld
sbb
jb
bound
pop
cwde
jnp
cmp
xchg
sar
leave
push
jecxz
xchg
loopne
ja
ret
jl
xchg
mov
and
or
outs
xor
mov
pop
pop
push
dec
es
(bad)
sbb
aam
pop
es
outs
mov
mov
mov
cli
pop
test
inc
imul
xchg
es
add
mov
loope
sub
stc
and
data16
inc
xor
imul
(bad)
jne
iret
or
mov
enter
push
ret
sbb
leave
fdivr
mov
and
ret
aas
or
xchg
dec
inc
pop
std
jnp
dec
call
add
mov
in
mov
mov
outs
ds
cmp
mov
dec
pop
ret
or
loope
sub
scas
jb
xchg
clc
(bad)
mov
iret
jne
inc
xor
retf
xlat
push
or
adc
sub
jl
push
nop
stc
jo
dec
mov
jb
inc
mov
(bad)
cmps
pop
jecxz
fmul
fisttp
test
sbb
mov
xchg
push
mov
mov
jnp
ins
pop
mov
imul
cld
(bad)
inc
dec
xor
ss
adc
cmc
(bad)
mov
lods
cdq
xor
pop
scas
data16
out
stc
inc
fs
es
dec
adc
div
imul
mov
mov
mov
mov
test
clc
jecxz
std
scas
pop
push
sub
xor
pop
ja
jae
or
adc
mov
int
adc
iret
jns
sbb
inc
fsubr
inc
adc
stos
and
loop
bound
test
lods
push
cdq
pop
js
retf
add
aad
fucom
pop
fild
inc
loope
sub
mov
mov
cdq
(bad)
ficomp
mov
bound
dec
popa
and
push
nop
and
fsubr
js
or
push
xchg
cmps
xor
jo
inc
inc
outs
or
pop
inc
popa
(bad)
cmp
add
pandn
sub
push
and
das
mov
dec
cmp
adc
stos
add
out
add
rcr
leave
and
xor
sbb
(bad)
ins
sbb
rol
jge
sbb
mov
lds
retf
out
aaa
pusha
push
shr
mov
pusha
pop
loop
dec
dec
mov
push
outs
ja
jo
enter
push
dec
mov
(bad)
sub
adc
loop
lods
inc
or
lds
into
cmp
lock
push
mov
sub
adc
or
gs
jb
inc
(bad)
imul
(bad)
loop
xchg
sub
call
cmps
retf
shl
cs
loopne
ror
pop
aas
cmp
ds
sub
inc
add
mov
mov
cmp
and
ds
data16
cmp
sbb
ret
das
add
dec
push
stc
loope
aad
cmp
mov
(bad)
retf
adc
fs
xchg
retf
add
loope
cmc
dec
xlat
sbb
fistp
hlt
sbb
sbb
(bad)
mov
jo
mov
mov
pop
pusha
or
aad
dec
aas
aas
in
mul
jns
pop
outs
pushf
inc
and
jns
out
push
jmp
rcl
adc
push
das
lea
jg
into
xchg
enter
gs
adc
cwde
lods
xchg
sub
mov
push
scas
dec
out
cdq
xor
int
in
mov
add
adc
fsub
shl
cld
inc
xor
mov
adc
pop
pop
ror
bound
cdq
sbb
dec
fdivp
xor
test
(bad)
mov
dec
shr
add
in
iret
icebp
loope
pop
aam
popa
mov
mov
sbb
adc
dec
and
mov
call
sbb
mov
imul
imul
scas
js
inc
je
cwde
nop
sti
(bad)
push
mov
dec
jecxz
xchg
or
xor
fwait
movs
sbb
cmp
pop
mov
pop
mov
mov
jno
push
and
adc
sbb
sbb
cmp
sub
sbb
xchg
xor
push
test
es
adc
pop
lahf
pop
mov
xchg
push
add
lods
call
jecxz
arpl
push
adc
or
ret
aam
sbb
add
sar
or
sbb
pop
repnz
xor
lock
sbb
test
jns
aaa
pop
mov
retf
add
out
stc
in
in
es
mov
mov
fucomi
cmp
(bad)
sub
nop
push
imul
inc
(bad)
sar
dec
dec
push
in
push
aad
sbb
dec
ret
push
or
in
ins
fsubr
add
pop
jp
jp
pop
rol
ja
add
leave
mov
popa
adc
jle
sub
mov
sahf
dec
sar
xor
or
dec
cdq
dec
stos
into
mov
jl
imul
sbb
xchg
jo
push
div
push
bound
mov
and
dec
frstor
sub
or
in
xchg
pop
lods
movs
push
call
icebp
ins
and
mov
gs
sahf
daa
out
push
inc
fnstcw
mov
ja
xchg
iret
push
pop
jo
jl
lds
lods
xchg
fs
sub
cdq
adc
outs
xchg
inc
pop
outs
or
xor
push
sub
xor
and
in
ds
iret
call
sbb
or
mov
xlat
mov
add
fiadd
mov
sub
sub
sbb
test
fstp
xchg
sub
jnp
jecxz
inc
icebp
(bad)
xlat
ret
sti
sub
sub
lods
pop
mov
jae
sbb
fistp
js
mov
push
mov
sahf
outs
and
push
fiadd
in
push
sbb
jno
add
sub
(bad)
aad
pop
push
dec
push
cs
xchg
xor
ret
pop
out
mov
inc
push
mov
mov
loope
cmp
ins
xlat
(bad)
adc
mov
fstp
add
xor
outs
or
sbb
(bad)
mov
movs
jnp
jnp
aam
inc
repnz
sti
jecxz
mov
(bad)
out
jne
rcl
mov
and
ret
jbe
push
jmp
xchg
out
adc
arpl
fdiv
push
jmp
xchg
in
cmp
out
clc
loop
je
push
clc
shl
inc
inc
jg
ds
daa
mul
jne
cmp
(bad)
fstp
call
mov
mov
clc
mov
xchg
test
repz
sti
int3
sbb
repnz
mov
daa
or
or
jecxz
rcl
repz
mov
dec
and
stos
or
cmp
jo
cs
adc
pop
xchg
pop
jecxz
sub
sub
loopne
(bad)
and
ret
jne
les
aaa
sbb
repz
inc
ret
imul
xlat
and
call
je
(bad)
sub
jb
pushf
xchg
scas
loop
mov
adc
xchg
mov
mov
inc
imul
cli
test
(bad)
imul
fisttp
(bad)
clc
or
mov
pushf
sbb
adc
ins
enter
fist
dec
les
dec
adc
(bad)
dec
mov
fnstcw
dec
dec
sub
dec
hlt
shl
inc
jae
jbe
jl
sbb
xchg
aam
push
jl
xor
xchg
fsub
inc
shl
outs
mov
mov
sbb
(bad)
test
lds
push
and
popf
push
mov
add
inc
xor
pusha
in
sub
sbb
add
daa
movaps
jecxz
pushf
shl
inc
sub
shr
cmc
loope
dec
into
cmp
push
scas
rcl
outs
adc
das
call
rcr
sub
pop
add
hlt
sub
fstp
xchg
mov
in
add
ja
adc
jns
les
popf
fs
popf
call
fwait
pop
dec
out
ret
cmps
sar
nop
stos
push
mov
cmp
xchg
pmullw
mov
cmp
ins
adc
jo
dec
jno
pop
pop
jle
sbb
push
and
mov
push
ja
xchg
mov
jbe
cmp
fistp
adc
inc
fild
test
push
mov
repnz
aad
pop
into
mov
cmp
jp
or
fstp
sub
ja
adc
cs
add
sbb
xchg
idiv
cmps
(bad)
jl
push
ins
mov
jle
or
lds
jbe
sub
add
cli
pushf
iret
cld
pop
enter
jnp
test
(bad)
(bad)
int3
mov
jge
or
cmp
pop
adc
cmp
aas
adc
pop
in
xlat
sbb
inc
in
jecxz
and
inc
data16
pop
and
xchg
stc
stos
xor
in
imul
jge
leave
mov
xor
fmul
cmps
fldcw
adc
jae
ins
sbb
lahf
outs
cmp
mov
test
jae
mov
mov
sub
or
push
xchg
leave
inc
(bad)
xor
jmp
mov
mov
leave
mov
or
sbb
mov
mov
in
add
cs
mov
jp
inc
mov
inc
ds
xchg
fidiv
jmp
inc
pop
sahf
and
adc
mov
(bad)
add
dec
jae
ins
(bad)
or
sahf
xor
dec
xchg
push
push
repnz
mov
jno
stos
jg
dec
xor
pop
mov
adc
push
pop
mov
ficomp
or
pop
dec
jl
adc
(bad)
ja
and
rcl
push
inc
(bad)
push
mov
lock
out
jo
fwait
xor
push
push
call
lods
lods
icebp
fcmovnu
ja
repnz
mov
or
pusha
shr
retf
test
push
repnz
mov
mov
fucomi
or
sbb
call
and
inc
sub
and
xchg
inc
cmp
mov
js
popf
sti
xchg
dec
rcr
fs
xchg
fcom
pushf
push
sahf
lds
xchg
lock
lahf
shr
ret
mov
les
iret
mov
jno
mov
mov
mov
(bad)
bound
enter
dec
push
sub
or
ror
pop
adc
mov
jp
sub
pop
ins
fwait
mov
in
inc
mov
scas
shl
mov
xor
mov
or
cmps
iretw
lds
aaa
add
lods
mov
fwait
inc
aam
pop
fnstcw
sub
(bad)
pop
xor
pop
cmps
(bad)
jp
hlt
sbb
icebp
cmp
imul
jge
cmps
jecxz
lods
jmp
gs
lock
nop
test
call
and
or
push
mov
cmp
or
pop
into
jns
push
mov
mov
das
shl
scas
push
popa
in
dec
push
ja
mov
nop
xchg
ja
sbb
push
in
pop
cmp
dec
and
addr16
inc
(bad)
fsubr
add
clc
or
ret
call
add
push
jmp
jnp
push
sub
imul
sqrtps
or
sbb
ret
lods
jp
jp
push
stos
rol
jnp
dec
sbb
(bad)
out
stc
nop
push
sbb
xchg
pop
xor
enter
push
pushf
xchg
out
int3
out
retf
dec
inc
pop
jbe
jne
inc
(bad)
push
pop
jae
out
and
stos
and
mov
xchg
retf
int3
mov
cmp
xchg
xchg
sbb
add
add
mov
xchg
add
fdiv
enter
xor
jns
fwait
or
movs
mov
shl
sbb
repnz
mov
pop
scas
lods
test
test
fs
dec
fadd
and
lea
dec
dec
inc
retf
dec
jo
das
adc
(bad)
jo
shl
clc
xchg
mov
ja
out
ret
mov
aas
fs
or
mov
stc
leave
sub
add
les
ja
pop
mov
adc
fisub
je
outs
mov
cli
(bad)
sub
sbb
and
popf
pop
mov
push
stc
pop
pop
add
shl
bswap
adc
in
leave
sbb
clc
cmp
lds
mov
sub
ss
xor
xchg
add
push
movs
and
mov
push
adc
lds
and
out
push
int
xchg
or
xchg
and
jno
pushf
xchg
outs
(bad)
shl
pop
mov
push
(bad)
mov
or
dec
pop
mov
push
repz
adc
in
cli
inc
mov
ins
or
sahf
xlat
sti
xor
sbb
sahf
mov
sub
adc
mov
movs
xor
dec
sbb
(bad)
in
neg
push
data16
cmps
or
mov
and
dec
les
cmp
dec
or
fidivr
rcl
add
mov
lock
dec
jnp
push
mov
movs
icebp
xor
in
adc
ja
cmp
loope
inc
stos
cmp
mov
outs
pop
imul
or
jg
ret
sahf
dec
push
out
in
mov
lock
mov
lock
sub
xchg
push
jg
mov
xchg
and
lea
and
mov
and
nop
lea
lods
push
dec
ret
adc
push
dec
dec
js
adc
pop
and
scas
mov
xchg
lods
lods
shl
fistp
add
and
movs
call
cmp
xchg
rcr
arpl
mov
outs
xchg
(bad)
inc
retf
mov
add
scas
mov
mov
rol
pop
push
push
retf
in
xor
aad
push
sub
mov
pushf
mov
ret
rsqrtps
shl
aam
in
or
data16
xor
repz
sbb
jl
retf
mov
popa
sbb
push
movs
sbb
mov
mov
daa
dec
xchg
idiv
push
or
cld
cmp
stos
icebp
ret
(bad)
ds
int3
in
bound
scas
loopne
imul
cmp
inc
imul
mov
jno
fisttp
cmps
jmp
jo
cmc
int
ins
cdq
push
mov
xor
xchg
mov
xchg
dec
in
std
mov
(bad)
or
xchg
mov
aas
jmp
or
pop
bound
clc
dec
jge
in
imul
jno
pop
pop
enter
xchg
loope
lea
aas
into
cmp
and
mov
cwde
push
movs
mov
(bad)
std
xchg
sub
jno
out
rcl
cmc
pop
xchg
imul
test
sbb
lahf
rcr
mov
inc
rol
push
pop
popf
test
pop
hlt
jle
in
shl
cli
addr16
and
xchg
dec
std
sub
sbb
ret
cmp
js
repnz
xlat
cdq
or
in
jmp
and
in
and
and
addr16
mov
shr
sbb
cmps
fcomp
dec
stos
and
ror
imul
sbb
add
fild
jne
xchg
push
cmp
dec
add
add
scas
jecxz
add
popf
sbb
addr16
xchg
mov
sub
or
popa
fild
cmp
inc
fwait
sbb
push
lahf
pop
mov
nop
adc
sub
test
hlt
ret
loop
jg
jmp
xchg
jb
stos
cs
(bad)
fucomi
mov
lock
aaa
jp
or
push
push
gs
pop
xor
retf
imul
fld
push
call
push
mov
sbb
mov
jae
cmc
fistp
frstor
xchg
loope
addr16
movs
jg
pushf
push
mov
scas
mov
fcom
arpl
test
out
lods
jmp
daa
cmp
in
fs
sbb
test
repnz
pop
mov
dec
pushf
loopne
hlt
mov
ret
push
loopne
push
adc
lea
add
rcl
dec
pop
icebp
sub
in
push
mov
rcr
and
or
jl
ret
iret
pop
xlat
js
aaa
lods
cmp
inc
imul
dec
sub
rol
mov
outs
xchg
je
sub
sub
mov
add
jne
mov
cdq
loope
mov
cmp
inc
pop
push
pusha
ins
mov
mov
xor
cld
push
sahf
add
push
movs
inc
jmp
in
mov
aas
xor
retf
add
xor
inc
mov
mov
popa
pusha
(bad)
xor
movs
lahf
mov
repz
xlat
mov
sub
call
inc
pusha
shl
movs
sbb
cmp
retf
repz
ins
cli
cmp
fimul
stos
scas
dec
mov
pop
inc
scas
out
sbb
push
stc
mov
(bad)
sbb
ss
xchg
cmp
shr
pop
and
push
and
or
stc
mov
and
mov
jecxz
ret
adc
daa
mov
fnstsw
(bad)
sar
push
jp
ret
and
sti
add
es
sub
aad
lea
pop
jns
ss
mov
inc
push
sbb
pop
or
cwde
cmp
xor
push
test
rcl
popf
cdq
adc
mov
mov
cmp
sbb
jns
clc
inc
aas
cdq
fdiv
lea
idiv
mov
es
push
int
test
pusha
jl
push
mov
es
sub
jbe
xchg
les
push
mov
shl
add
mov
aaa
es
cmp
cmps
lock
fwait
es
adc
pop
mov
lahf
popf
and
cs
aaa
test
jmp
gs
lea
and
les
mov
sub
setge
push
mov
nop
ret
int3
rcr
jge
mov
ss
cmc
pop
in
pop
fnstenv
pop
dec
pushf
push
arpl
jmp
sbb
jo
pop
pop
in
leave
hlt
pop
scas
outs
je
xchg
enter
call
das
mov
adc
in
icebp
int3
jle
xchg
cmp
sub
and
inc
test
inc
ret
jmp
push
aas
(bad)
mov
cmp
mov
sbb
dec
in
shl
fwait
retf
add
and
sbb
shl
mov
aam
aad
arpl
retf
jmp
nop
fst
cmps
shl
je
out
(bad)
stc
push
repz
std
cwde
inc
nop
stos
adc
movs
inc
rcr
mov
sti
pop
lods
jg
fwait
push
outs
jge
js
inc
js
mov
sbb
mov
push
mov
jo
dec
leave
or
pop
icebp
stos
xchg
jo
sti
cmp
xor
inc
fnstcw
arpl
xchg
xchg
dec
pop
shl
ror
je
add
cmc
mov
iret
les
lea
out
je
rol
test
push
cs
xchg
jne
dec
jmp
test
outs
push
mov
fucomp
mov
test
sar
aam
aad
add
dec
pop
neg
sub
cld
in
xor
adc
aam
retf
out
mov
(bad)
mov
movs
cmp
aaa
fcmovnu
adc
popa
push
lds
sbb
mov
popf
mov
mov
xchg
mov
xchg
mov
cmp
pusha
clc
ror
push
inc
clc
push
mul
les
dec
dec
xchg
and
test
into
jbe
lock
jbe
sar
retf
mov
lds
jo
icebp
leave
dec
sti
fsubrp
mov
(bad)
sbb
xor
outs
into
iret
and
mov
repnz
cld
rcr
bound
mov
dec
test
daa
cmp
mov
sbb
or
std
xor
ret
sahf
push
xor
dec
mov
mov
dec
sub
cmp
(bad)
push
int3
and
int
add
movs
jmp
jmp
sti
mov
loopne
ret
shr
xchg
into
shl
mov
xor
mov
test
scas
and
xchg
jle
mov
push
pop
(bad)
lods
push
test
jge
mov
mov
test
xor
gs
or
imul
pop
and
rcr
shr
adc
jae
out
mov
inc
adc
mov
in
mov
iret
jbe
in
outs
jge
adc
pop
stos
cld
jne
aam
push
inc
out
sub
xor
push
push
hlt
dec
cmps
mov
sbb
and
sahf
mov
gs
mov
bound
push
call
int3
icebp
jb
cmp
jb
(bad)
mov
add
nop
lea
jl
xchg
or
push
xor
lahf
aas
xor
lods
mov
movs
imul
dec
sbb
rcr
jne
lock
mov
jmp
cmps
dec
scas
mov
cmps
add
or
iret
std
sbb
retf
lods
mov
jbe
in
daa
mov
push
or
xlat
nop
xor
movaps
sbb
test
xchg
js
fwait
push
clc
adc
push
pop
sar
iret
adc
clc
or
dec
mov
(bad)
sbb
imul
(bad)
aas
mov
gs
sbb
mov
(bad)
sbb
(bad)
inc
and
xchg
pop
rcr
retf
add
in
and
pushf
jg
mov
sbb
xchg
movs
xchg
jnp
mov
imul
xor
mov
add
fbld
call
arpl
cwde
sar
sar
adc
fcmove
pop
add
pop
ds
or
add
xor
hlt
mov
inc
mov
sub
mov
call
mov
ja
inc
ret
adc
add
addr16
cmp
das
fbstp
fcom
adc
outs
(bad)
jns
in
fmul
jmp
jb
mov
and
test
je
jmp
shr
push
or
cmc
cmp
pop
jbe
or
fs
hlt
retf
clc
mov
fld
sbb
shl
push
jmp
cli
sbb
fbld
push
cmc
ja
leave
xlat
mov
(bad)
mov
inc
add
ins
pop
dec
cld
dec
dec
inc
call
or
push
cli
mov
inc
push
movs
mov
ins
call
cmp
out
mov
sub
stos
sub
ror
dec
lods
lds
xchg
adc
adc
pop
cli
aam
retf
xor
push
sti
xor
mov
mov
adc
mov
add
mov
mov
cmp
pop
sub
jmp
fst
in
mov
mov
mov
lea
push
xchg
pop
outs
ror
pop
in
adc
sub
mov
mov
mov
popf
call
lods
enter
push
outs
mov
test
jle
setg
sub
and
jbe
iret
mov
jbe
cmc
pop
(bad)
loope
push
adc
les
ficom
mov
clc
mov
mov
in
and
ret
stos
and
addr16
stos
mov
mov
push
lahf
cmp
out
inc
aam
sbb
dec
push
fadd
mov
cmp
stos
loop
int3
and
dec
mov
ss
in
inc
or
xchg
xchg
xchg
push
pop
pop
ins
rcr
mov
fcomp
shr
test
mov
push
or
inc
test
mov
mov
mov
scas
stos
mov
std
xchg
(bad)
jae
sbb
test
ins
inc
inc
test
jmp
test
cs
dec
pusha
movs
and
sub
ror
icebp
je
push
mov
and
push
dec
xchg
iret
sub
ret
cmps
add
cmp
cmp
(bad)
jmp
push
shl
cmp
movs
sti
push
xor
mov
add
cmp
jne
repz
je
jge
sahf
fnsave
aad
jb
fadd
(bad)
add
daa
cmp
jae
and
pop
mov
mov
add
and
or
jbe
loop
popa
leave
ds
xchg
outs
ss
pop
inc
jb
or
in
mov
rcr
inc
jecxz
sbb
in
sub
inc
adc
(bad)
adc
jb
enter
push
or
mov
adc
sbb
sbb
(bad)
push
sbb
test
xchg
and
xor
fisttp
in
pop
or
mov
or
rcl
cmc
push
jnp
pushf
xchg
stos
adc
push
sub
fwait
dec
xchg
enter
mov
xchg
add
push
xor
popa
mov
repnz
cmp
adc
adc
loopne
push
xor
add
shr
pushf
aas
xlat
sub
mov
ds
ins
sub
jbe
mov
enter
pop
enter
nop
and
fsubp
xchg
mov
mov
cmp
sbb
inc
mov
sub
into
lds
lods
out
push
(bad)
stos
sbb
sbb
in
jae
adc
add
(bad)
out
clc
mov
cmp
mov
mov
push
outs
cmp
cli
fwait
add
dec
add
out
xor
imul
(bad)
les
fadd
and
pop
ins
fst
adc
cs
jg
mov
mov
push
retf
adc
sbb
jmp
mov
icebp
int3
add
repz
int
(bad)
sub
aam
lds
push
sahf
sub
adc
pop
mov
ret
adc
push
rcr
loope
xlat
mov
pop
fcom
jle
(bad)
into
pop
bound
or
dec
mov
ja
nop
ss
stos
jmp
lods
ja
inc
cmp
mov
push
out
mov
imul
test
cdq
test
stc
mov
popf
mov
sbb
push
cmp
in
das
lock
outs
lahf
jne
icebp
int
xchg
or
mov
mov
jmp
hlt
pop
fimul
push
dec
sub
aad
lock
addr16
cmc
xor
cmc
mov
(bad)
xchg
add
lods
dec
aas
dec
data16
popf
dec
or
mov
jecxz
mov
clc
into
outs
jmp
cld
adc
test
inc
fld
outs
lea
test
pusha
ficomp
int3
js
mov
push
imul
ret
xor
mov
call
mov
in
sub
dec
test
bound
pop
sbb
test
sti
pop
das
mov
and
sbb
loop
(bad)
jnp
xor
std
push
xchg
sti
cmps
cmps
mov
cmc
add
iret
pop
dec
xlat
aaa
cmp
loop
xchg
push
js
retf
push
mov
imul
mov
mov
xchg
xchg
cmp
jmp
leave
pop
loop
pop
std
pop
or
scas
scas
dec
cmps
ret
loope
add
scas
in
cmp
pop
adc
push
sbb
inc
sub
mov
sub
jnp
clc
jmp
dec
(bad)
mov
je
push
pop
xor
xor
mov
mov
push
inc
stos
jo
stos
call
in
icebp
jg
jo
push
fisttp
ret
push
shl
test
outs
xlat
mov
cmp
fisubr
dec
jecxz
mov
mov
pop
dec
fsub
or
inc
pusha
imul
push
imul
add
ror
cmp
mov
cmp
je
mov
out
xchg
ds
sbb
retf
xlat
cmp
sbb
sub
das
jl
in
idiv
mov
in
iret
dec
out
adc
daa
nop
cwde
imul
bound
or
or
rol
inc
cmp
jb
jno
das
or
sub
(bad)
cmps
sbb
js
in
shl
js
or
dec
(bad)
cli
ret
sbb
test
jo
adc
call
into
add
rcl
in
ret
jae
push
push
xor
mov
xor
cmp
push
sub
mov
lea
push
lea
fwait
adc
mov
rcr
ror
pusha
fstp
mov
sub
pop
(bad)
std
cli
jl
loopne
mov
ja
lock
(bad)
unpcklps
push
mov
pop
sub
mov
xor
loope
ret
data16
in
xor
xchg
pop
ror
into
push
scas
add
mov
(bad)
arpl
jecxz
mov
dec
mov
ss
call
add
mov
add
in
dec
add
subps
sub
sahf
adc
scas
pop
test
mov
mov
xchg
dec
mov
mov
imul
test
push
iret
mov
call
xor
bound
add
mov
addr16
div
add
jle
stos
mov
cmp
sub
ins
sub
xchg
popa
inc
push
das
scas
inc
xchg
jbe
jmp
adc
scas
clc
call
jl
gs
cmc
les
repz
dec
mov
mov
pop
sbb
mov
call
iret
jmp
fsubr
jnp
ret
xor
fdivp
ss
mov
out
jmp
cmp
in
dec
cmp
xor
mov
mov
jp
inc
xchg
mov
adc
cwde
loope
jmp
mov
push
or
imul
push
shl
dec
pop
adc
jmp
pop
or
fimul
adc
shl
dec
xor
icebp
stos
xchg
mov
sbb
inc
ret
fst
lds
mov
cmp
pop
sbb
(bad)
push
outs
xor
mov
mov
inc
mov
out
xchg
adc
and
sub
clc
imul
or
ret
and
or
add
mov
call
mov
loop
je
push
je
fiadd
or
sub
pushf
dec
inc
out
xor
jmp
cdq
jno
enter
xlat
popa
sub
dec
repnz
or
(bad)
cmp
xchg
icebp
(bad)
push
mov
adc
sbb
addr16
cmp
mov
sub
js
aam
es
sub
dec
mov
mov
fwait
clc
std
xlat
and
push
ret
ins
shr
shr
aas
jb
out
adc
fs
test
arpl
test
jo
fcmovb
aam
cs
fnstcw
mov
mov
lds
call
aam
dec
data16
jge
ret
nop
lahf
enter
inc
mov
fimul
inc
push
jp
push
pop
stos
mov
pop
cmc
xor
dec
dec
out
lods
fcom
cmp
push
ja
fisubr
out
and
in
adc
mov
ror
leave
mov
sub
sub
cmps
sub
and
inc
push
pop
xor
cmp
cmps
test
in
cmp
test
jmp
sbb
(bad)
rol
scas
repz
xchg
push
popa
out
(bad)
push
cmp
xlat
and
sbb
cmp
fimul
or
and
js
mov
mov
pop
jb
call
icebp
test
(bad)
std
add
clc
sub
aas
pop
cmp
scas
das
mov
xchg
sub
mov
lods
xor
out
adc
cdq
sub
out
sub
jmp
test
mov
cmp
push
adc
and
rcl
mov
mov
lahf
cmp
push
jbe
(bad)
or
push
cdq
call
cmp
and
in
out
loop
rcr
mov
sbb
jns
lds
mov
jmp
pop
retf
or
dec
lock
inc
pop
int3
xor
xchg
sbb
and
rcr
cmp
daa
sub
jecxz
sub
imul
and
dec
lahf
imul
cli
jg
sbb
js
and
jns
iret
and
pusha
xor
mov
mov
repnz
sbb
or
mov
ret
mov
movs
jbe
xchg
jmp
sbb
jno
push
add
xchg
sub
aad
inc
or
gs
push
jmp
inc
fldcw
shl
int
aad
jne
mov
or
sub
enter
dec
xchg
mov
mov
and
dec
sub
mov
sub
fsubp
lds
stc
push
not
call
es
lea
add
dec
jae
mov
cmp
push
or
pop
jne
outs
cmovb
mov
das
retf
test
adc
pop
in
ds
adc
imul
or
inc
sti
mov
ror
dec
lahf
jecxz
cdq
xchg
jmp
das
mul
scas
ficomp
mov
pop
push
push
sbb
movs
mov
mov
popf
stc
jle
pop
pop
sti
iret
push
jp
mov
in
(bad)
cmp
and
sub
mov
rol
jne
push
xchg
mov
fimul
jo
pop
push
xchg
adc
repnz
ret
clc
sar
clc
out
cmp
jecxz
leave
pushf
cmps
dec
popa
push
rol
jge
dec
mov
sbb
inc
ins
inc
leave
cdq
sbb
(bad)
dec
push
repz
sbb
jnp
stos
xor
sbb
jno
xchg
movs
cmp
in
mov
pop
pusha
sub
shl
sahf
iret
xchg
adc
add
xlat
sub
fimul
arpl
sub
jns
cs
xchg
in
pop
ret
push
jge
popf
daa
cmp
mov
pop
inc
mov
push
aaa
cld
jnp
dec
enter
jo
pop
push
test
out
push
xchg
cdq
out
and
push
ds
not
ds
daa
xchg
in
add
ja
mov
mov
pop
xor
outs
dec
ins
lahf
sahf
xchg
xchg
movs
loopne
mov
inc
fild
clc
std
add
test
loop
xor
cmp
ror
pusha
mov
xor
dec
cmp
and
mov
rcr
push
(bad)
aas
dec
mov
sti
xchg
push
rcr
sar
mov
mov
or
sbb
arpl
jne
or
aas
push
and
jbe
inc
pop
dec
push
cmc
cmps
ss
add
and
stc
jmp
in
loop
dec
push
push
stos
cmp
push
jg
pop
popa
stos
ins
adc
sub
out
stos
push
fidiv
xor
daa
push
jmp
hlt
adc
icebp
mov
push
jae
push
and
xchg
xor
add
pop
adc
sbb
xlat
or
jge
and
jne
mov
sub
mov
push
jle
dec
addr16
loope
push
cmp
jle
(bad)
not
daa
sar
lock
shl
aad
jmp
fsub
aad
cdq
int
or
test
shl
xor
mov
out
pop
shl
in
ins
and
fisttp
xor
adc
fldcw
das
outs
and
dec
movs
xor
shr
mov
inc
mov
clc
inc
push
inc
outs
jmp
dec
pop
mov
adc
les
inc
rcr
in
jle
es
enter
nop
fs
mov
call
mov
pop
sub
retf
hlt
mov
sbb
mov
cmp
fwait
push
loopne
jo
jge
jns
and
jge
enter
test
dec
fisubr
loop
pop
jge
outs
mov
push
lods
push
sub
pop
or
mov
add
mov
mov
in
inc
(bad)
and
pop
push
cmps
mov
lea
ins
jp
in
mov
jecxz
cwde
and
fdiv
mov
push
call
mov
lock
ins
xor
pop
icebp
cmp
popa
or
jae
mov
in
mov
imul
pop
out
aad
pop
pop
lock
shl
imul
sub
cmp
pop
mov
hlt
adc
pop
cmp
idiv
jl
outs
in
jmp
arpl
cmps
ja
pusha
jns
push
aaa
retf
jl
int
stc
stc
and
mov
pop
mov
sar
lods
stc
pusha
lock
push
loop
shl
enter
test
aam
cmps
add
dec
pop
rol
and
push
in
cmp
test
outs
or
out
(bad)
shl
in
mov
punpckhdq
add
into
popa
pop
xor
pop
mov
add
inc
gs
repz
or
or
cdq
(bad)
sub
in
dec
scas
sbb
mov
sar
rol
jns
loope
xor
jg
mov
mov
xchg
cmp
(bad)
out
sub
mov
fs
xchg
mov
aam
mov
xor
pop
adc
hlt
loopne
pop
gs
fmul
mov
inc
jne
xchg
sahf
lahf
mov
add
add
xchg
push
movs
add
jecxz
movs
add
pop
cld
xor
pop
mov
mov
sahf
test
fs
push
ja
pop
lahf
lock
mov
add
jno
xchg
pop
test
movs
mov
sbb
imul
xchg
movs
les
and
stos
sub
and
aas
in
jmp
lock
leave
sub
das
dec
xchg
mov
fisttp
dec
xor
sub
bound
pop
xor
pusha
ret
aas
pop
lahf
jbe
dec
cmp
add
xchg
gs
test
cmps
in
jecxz
loopne
ret
cmp
aam
add
shl
leave
or
jg
inc
jg
in
adc
add
xor
retf
les
outs
(bad)
pop
das
xchg
pop
cmc
clc
frstor
mov
sub
fbstp
push
inc
cmc
pop
in
mov
(bad)
jl
les
mov
xchg
push
cmp
adc
mov
out
mov
das
push
aas
iret
xor
lea
ret
mov
or
jmp
add
ror
push
lods
pop
mov
pusha
sbb
je
jp
adc
jmp
sub
call
cdq
ins
hlt
adc
retfw
xor
out
pop
or
jb
loopne
push
call
ja
cmp
ret
leave
pusha
xor
dec
cmp
adc
gs
clc
mov
fs
xchg
dec
fsubrp
les
xor
loope
and
in
inc
enter
and
daa
jge
stc
mov
mov
add
out
cmc
shl
call
icebp
mov
pop
adc
xchg
push
ds
xor
push
jbe
daa
cdq
xor
xor
in
jmp
cli
pushf
adc
sub
aaa
div
xchg
pop
(bad)
jmp
add
xchg
dec
lahf
add
sbb
push
mov
mov
popf
mov
int3
outs
inc
jmp
cmp
movs
xchg
(bad)
jmp
addr16
xchg
ret
stos
mov
jbe
out
daa
(bad)
into
push
iret
js
jle
adc
sub
cmc
dec
jmp
cmp
aas
mov
cmps
push
out
int
setbe
and
loopne
mov
add
push
cmc
add
std
mov
push
xor
xchg
jecxz
inc
(bad)
lods
jo
adc
out
ror
movs
call
dec
jbe
in
leave
sbb
add
int3
ja
pop
inc
pop
jmp
adc
xchg
lods
jmp
imul
xrelease
in
sbb
(bad)
mov
cmp
fucomp
cmp
pop
mov
mov
pop
mov
(bad)
xchg
mov
inc
xchg
adc
cmps
or
cwde
(bad)
jae
in
push
retf
jecxz
popa
aad
test
movs
dec
iret
imul
jo
push
ficom
outs
ins
fisttp
pop
mov
push
add
sbb
les
jle
inc
in
and
cmp
icebp
(bad)
imul
inc
sahf
jae
fisubr
ins
ins
das
jp
clc
adc
push
daa
mov
add
mov
movs
mov
(bad)
jmp
pushf
lahf
jecxz
fwait
push
lock
dec
outs
add
pop
xor
cmp
sbb
dec
out
dec
xchg
cmp
add
pop
pop
out
mov
sub
jae
repz
push
or
mov
int
cmp
cmps
stc
pusha
push
mov
ds
xchg
mov
iret
ja
in
push
sti
mov
jp
jp
xchg
pop
mov
mov
and
shl
icebp
aad
adc
cmp
cwde
xlat
shl
call
pop
dec
inc
or
adc
mov
out
xchg
and
pop
(bad)
pop
(bad)
cmp
push
and
lahf
sub
ret
and
repnz
xchg
mov
in
aam
jno
and
std
pop
fld
lods
shl
xor
xor
fcom
pop
xchg
cmp
cmp
fnsave
ss
fild
and
mov
or
(bad)
das
add
mov
mov
or
in
loop
jl
add
cmp
lahf
popa
aaa
inc
call
xor
jmp
mov
push
inc
push
and
loop
sub
inc
mov
arpl
imul
ds
imul
xorps
xchg
and
ror
call
fiadd
dec
scas
call
ficom
mov
into
mov
or
(bad)
and
sbb
push
push
mov
xchg
and
js
mov
addr16
das
cli
lahf
pop
sbb
sub
retf
add
add
loope
pop
lods
jle
and
mov
sbb
mov
shl
(bad)
mov
hlt
dec
test
cmp
fs
sti
mov
aam
and
mov
pop
stos
mov
nop
aas
push
or
repnz
add
jmp
dec
mov
mov
lods
aaa
push
push
ror
add
jno
sub
jge
movs
cmps
(bad)
sbb
ret
popf
cli
sahf
or
sbb
mul
and
push
icebp
div
es
retf
mov
push
adc
lds
mov
mov
mov
or
es
ins
aaa
hlt
outs
les
pop
int
div
jg
ja
cmp
stos
pushf
pusha
inc
jg
xor
in
xor
add
fdivr
sar
sbb
in
mov
mov
(bad)
daa
inc
in
push
int
push
mov
cmps
dec
jl
or
add
cmp
pop
ret
sub
sbb
cli
sub
ficom
sbb
mov
mov
sub
adc
add
xor
adc
pop
loopne
and
cmp
push
sbb
rol
sub
or
repz
jo
push
adc
sti
jp
retf
push
pop
aaa
inc
sub
hlt
and
repz
inc
ins
aaa
or
leave
ficom
nop
jb
int3
pop
rol
inc
clc
shl
sbb
xor
jg
jbe
mov
dec
(bad)
xlat
popf
xor
fucomi
fstp
xchg
aaa
and
mov
mov
int3
mov
rcl
xor
into
cli
sbb
fstp
inc
or
cdq
scas
(bad)
mov
imul
shl
nop
es
in
mov
vmovups
cmp
mul
add
lods
xchg
out
adc
jp
rcl
sbb
fimul
ss
mov
pop
mov
mov
popa
pop
loop
jns
inc
jb
pop
xor
cmp
loopne
push
std
fst
xor
imul
mov
sub
inc
mov
jnp
pushf
call
out
push
stc
mov
sbb
das
call
iret
pop
xchg
mov
loop
xchg
fisttp
jl
push
xchg
rol
test
outs
cmp
neg
mov
fs
and
xor
popa
ret
popa
cmp
push
nop
movs
dec
pushf
sbb
sbb
and
pop
xor
jbe
mov
and
dec
fild
xor
adc
test
cwde
retf
and
cmp
and
ss
mov
shl
imul
xor
cwde
inc
lods
repz
pop
ss
add
and
jns
dec
mov
pop
les
(bad)
push
enter
test
mov
inc
jae
(bad)
and
sub
sub
mov
push
pop
jl
pop
push
retf
psrlw
dec
ror
scas
bound
(bad)
fld
xor
jg
mov
sar
sbb
and
es
mov
mov
or
or
aas
(bad)
sub
push
push
jnp
jp
sbb
dec
mov
mov
mov
and
xor
icebp
imul
mov
lea
mov
push
push
xchg
int
dec
cmp
jb
test
std
dec
adc
retf
mov
(bad)
sub
jmp
ror
(bad)
mov
repnz
std
xchg
lods
push
dec
push
xchg
addr16
and
xchg
jle
push
aam
test
inc
sub
xor
ins
dec
test
call
fisttp
and
aas
lea
mov
push
cmp
adc
mov
mov
jmp
inc
test
xchg
add
push
(bad)
xchg
pop
retf
cld
nop
repnz
arpl
jge
mov
push
xchg
pop
(bad)
cmp
lods
mov
dec
push
ins
ja
xor
mov
push
jp
out
jmp
scas
ret
mov
add
pop
mov
xlat
(bad)
sbb
pop
mov
mov
enter
push
push
sbb
scas
call
sbb
std
xor
dec
leave
cmp
rcr
push
in
call
jecxz
aaa
inc
arpl
in
xor
jecxz
scas
xor
leave
add
mov
mov
inc
dec
iret
push
or
pop
mov
shl
mov
jo
sbb
mov
arpl
popf
loope
ror
sbb
mov
xchg
fdiv
dec
pop
cmp
loop
mov
ss
mov
lods
leave
mov
xchg
sbb
sbb
mov
add
bound
test
out
(bad)
mov
in
mov
cmp
push
xchg
(bad)
in
xlat
cmp
fsubrp
cs
dec
sub
out
mov
add
outs
sub
loope
adc
je
and
sub
lock
leave
out
test
jmp
fucomp
mov
cld
mov
mov
nop
push
dec
pop
mov
jmp
not
inc
jae
lock
fdiv
mov
pop
mov
cmp
mov
sar
popa
lahf
sub
push
sbb
mov
or
in
xchg
sbb
pop
inc
mov
mov
mov
sbb
lea
repnz
aas
pop
adc
mov
movs
loope
sub
fwait
shr
mov
cmp
mov
dec
add
stc
movs
adc
int
(bad)
aam
ja
add
or
stos
adc
fcomp
lock
cmp
fistp
call
adc
mov
push
xchg
jg
mov
enter
(bad)
xchg
pusha
sub
mov
lds
test
inc
pop
out
pop
ret
jb
xor
xor
push
shl
push
ja
inc
xchg
push
(bad)
and
pop
aas
rcl
push
(bad)
gs
push
xor
jp
pop
int
(bad)
push
movs
int
(bad)
fnstenv
pcmpeqw
sub
push
add
mov
imul
call
and
mov
push
pop
jecxz
xor
jmp
fwait
xlat
cmp
scas
hlt
xchg
ret
mov
mov
lahf
dec
outs
scas
adc
sub
add
test
repz
mov
mov
xor
sahf
jle
lock
mov
jg
xchg
iret
cmc
pop
push
js
sub
fwait
pushf
push
ins
sub
sbb
xchg
shr
and
mov
cmc
stos
sub
mov
psubb
out
cld
jb
movs
adc
xchg
ins
pop
pop
(bad)
shl
inc
mov
popa
push
pop
jl
adc
mov
add
xchg
push
or
dec
popf
aaa
add
out
mov
mov
inc
mov
sbb
pop
pop
cwde
xchg
cdq
push
retf
mov
mov
imul
xchg
ficom
fs
pop
les
loop
xor
adc
(bad)
fisub
and
icebp
iret
mov
mov
jbe
test
push
mov
(bad)
(bad)
xchg
imul
jle
cld
add
or
cli
js
push
mov
adc
cmp
inc
out
dec
jg
fsub
hlt
test
in
inc
mov
div
loopne
frstor
stc
jnp
or
aad
clc
push
cmp
push
xor
push
(bad)
not
test
xor
daa
xor
cmovne
(bad)
ds
data16
fs
rdtsc
xor
sbb
push
xor
repnz
and
lock
and
dec
inc
and
and
pop
(bad)
push
mov
je
push
xlat
iret
mov
mov
(bad)
lahf
or
int
adc
pushf
inc
int3
iret
jle
mov
(bad)
mov
lds
pop
ficom
scas
arpl
add
mov
mov
addr16
retf
imul
hlt
or
add
add
es
and
(bad)
pop
adc
jge
iret
fcompp
hlt
jns
jmp
aas
int3
pop
jne
jmp
mov
push
jp
rol
xchg
not
hlt
lea
mov
mov
push
(bad)
movs
shl
lahf
inc
mov
inc
(bad)
or
sub
fs
cmp
out
push
imul
cmp
dec
jno
and
push
cmp
loop
cmp
bt
fmul
push
adc
cmp
cmp
inc
mov
das
jnp
xor
out
repnz
vhsubps
inc
cmps
jp
mov
lahf
fistp
cmp
aas
pop
(bad)
and
adc
jbe
lock
adc
sub
and
jns
jle
test
push
and
sbb
enter
inc
movs
iret
(bad)
cmps
mov
dec
push
jmp
fsubr
or
shl
daa
imul
retf
out
fldcw
rcr
jbe
push
jecxz
mov
inc
cs
adc
xchg
sbb
sub
out
cld
inc
push
xor
mov
in
out
sbb
and
out
sbb
jno
ret
mov
arpl
inc
jnp
sbb
int
xchg
push
or
(bad)
dec
adc
ins
pop
and
fs
pop
sbb
aam
jmp
les
test
push
sbb
inc
imul
ja
adc
inc
mov
pop
push
pop
cmps
cli
out
daa
xor
mov
aad
retf
mov
daa
adc
jbe
pop
loop
pop
(bad)
adc
or
jl
mov
sub
jecxz
mov
sahf
neg
retf
mov
sub
adc
fiadd
(bad)
out
sahf
jae
adc
mov
outs
lock
ret
mov
or
(bad)
mov
aas
inc
ins
add
bound
jae
push
mov
mov
cmps
ret
cmp
mov
sbb
xlat
dec
push
jns
or
sbb
pusha
std
repz
scas
stc
js
mov
dec
outs
push
jle
push
sub
retf
ret
hlt
add
pop
sub
or
outs
sbb
adc
and
mov
ins
pushw
je
pushf
mov
out
mov
dec
or
icebp
cwde
cmp
dec
mul
sub
retf
jb
retf
loopne
int
adc
xor
push
adc
stos
popw
(bad)
mov
xor
ja
push
pop
icebp
sbb
lods
iret
daa
icebp
cmp
cmp
mov
(bad)
add
and
jle
adc
lods
add
mov
out
sbb
dec
dec
sub
push
sar
sub
into
sbb
popf
xlat
sbb
aaa
push
arpl
fwait
mov
or
das
(bad)
addr16
inc
test
xchg
mov
sti
pop
adc
repnz
fmul
and
pushf
int
cmps
mov
icebp
cmps
sub
cdq
das
ja
cwde
sar
mov
mov
retf
mov
jg
cmp
out
test
jmp
adc
adc
and
mov
mov
xchg
outs
js
xor
mov
xchg
and
jbe
movs
pop
inc
retf
sar
imul
and
xor
mov
out
add
mov
sti
push
stc
icebp
enter
push
mov
xchg
ret
jle
inc
add
mov
mov
pusha
push
aam
leave
loop
ficom
inc
dec
xchg
adc
xchg
cmps
sbb
dec
cmp
inc
xchg
jmp
jge
cmp
jb
mov
add
add
dec
push
mov
lea
dec
ret
stos
mov
cmps
jg
adc
xchg
inc
dec
mov
jbe
mov
test
push
xchg
xchg
nop
jl
stos
cld
ficom
push
std
sbb
inc
dec
int3
and
dec
sbb
xor
cli
lods
mov
add
mov
inc
arpl
cmp
jl
pop
xor
xlat
or
dec
inc
stos
int3
inc
mov
scas
test
xchg
pusha
dec
in
xchg
hlt
add
ffree
sbb
add
loope
xchg
shr
jge
pop
sbb
add
rcr
mov
or
mov
and
jl
push
retf
movs
jmp
dec
pop
add
fidiv
jecxz
cmp
dec
repnz
loopne
pop
and
loopne
pop
int3
dec
xchg
nop
ja
aas
adc
or
or
fld
push
jmp
call
jmp
test
loopne
les
mov
push
pop
xchg
inc
int3
pushf
imul
in
sbb
sbb
pop
dec
mov
dec
jp
xor
add
call
pop
mov
cmp
ret
mov
dec
mov
pop
es
mov
cmps
pop
fld
(bad)
xchg
fdiv
mov
xchg
mov
push
jbe
scas
add
adc
sub
xor
push
mov
idiv
(bad)
mov
arpl
icebp
xchg
jne
sar
mov
xchg
pop
in
inc
dec
clc
mov
add
push
aas
and
push
mov
or
mov
add
sbb
bound
mov
icebp
scas
cwde
aaa
jo
jle
jge
jbe
adc
aam
test
into
std
inc
ss
add
jb
aam
cdq
xchg
dec
out
pop
add
call
sti
or
aad
add
aas
xchg
pop
or
sbb
inc
cli
leave
or
int
daa
cdq
mov
movs
stos
xchg
mov
pushf
cmps
pop
jmp
loop
sub
jmp
mov
cmp
sbb
inc
cmp
pushf
dec
cmps
scas
int
fwait
loope
iret
sbb
pushf
ins
js
lock
push
test
dec
mov
push
mov
mov
scas
scas
xlat
stc
test
repz
mov
dec
sub
push
xchg
jns
retf
stos
sub
es
daa
lock
mov
gs
mov
jno
sub
pop
jge
sti
mov
mov
loopne
xor
jae
push
adc
test
data16
mov
inc
xchg
int
inc
push
sub
dec
test
mov
les
add
add
push
jmp
jns
aam
mov
xor
hlt
push
adc
or
aas
xlat
stos
out
jb
inc
mov
test
pop
ficomp
mov
int
sub
iret
cli
jnp
push
adc
dec
(bad)
cs
push
mov
pop
ss
xlat
shr
push
sub
fwait
pop
pusha
hlt
jg
push
out
push
and
jecxz
sbb
push
data16
inc
cld
xlat
jnp
mov
fiadd
jg
sub
dec
pusha
mov
mov
int3
cmps
mov
aam
in
hlt
and
nop
cmp
jecxz
daa
popf
(bad)
push
bnd
dec
mov
pop
xchg
std
retf
stc
sub
dec
xlat
bound
push
iret
mov
push
sub
aam
mov
mov
mov
mov
nop
dec
pop
movs
jne
or
sub
jmp
lock
inc
shl
pop
out
ins
mov
dec
jg
sub
mov
cs
mov
jbe
sti
fadd
or
or
pusha
pushf
test
fsub
(bad)
jnp
lock
jg
sub
cmps
or
mov
js
inc
rol
hlt
cdq
adc
mov
movs
lods
outs
adc
jle
jns
dec
sar
rol
push
(bad)
loope
mov
push
jg
and
cmp
inc
mov
movs
inc
add
(bad)
mov
stos
push
xor
xchg
aas
nop
lea
stc
sbb
ins
adc
push
mov
rcl
adc
clc
mov
sub
movs
pop
data16
cmp
mov
sti
or
enter
mov
inc
pop
inc
popa
cmp
xchg
xchg
mov
mov
cmp
cmp
jne
sub
leave
sub
ins
lahf
pop
mov
or
(bad)
xchg
dec
arpl
xor
aad
inc
pop
xor
and
int3
nop
xor
xchg
mov
dec
add
retf
add
mov
cwde
and
sub
pop
cli
or
and
push
popa
mov
or
gs
push
adc
dec
xor
cmp
adc
or
pop
adc
mov
fwait
sbb
cmp
cmp
cwde
pop
mov
mul
jge
cmp
ins
and
xchg
into
adc
addr16
lds
scas
dec
mov
dec
mov
push
mov
sbb
ins
shl
push
and
sub
pop
iret
out
and
jecxz
and
and
pop
pop
xlat
or
mov
or
push
inc
pushf
pushf
loop
mov
loopne
sbb
pusha
pop
push
adc
mov
push
ss
fnstsw
popa
pop
jecxz
cli
mov
mov
and
mov
jmp
in
sti
in
aas
or
sub
movs
push
jns
test
lds
inc
movs
push
and
xor
dec
repz
xlat
xlat
adc
pop
shl
dec
cs
pop
xor
pop
mov
push
gs
push
and
mov
mov
cmp
and
inc
or
out
daa
jge
sub
jnp
je
pop
fst
into
test
and
push
retf
lods
inc
test
ret
(bad)
int
(bad)
std
int3
jb
test
jb
xor
mov
cmp
add
movs
stc
div
xchg
xchg
dec
jno
inc
xchg
add
out
shl
and
out
(bad)
jl
jg
pop
add
ins
cmc
add
int3
mov
sar
inc
and
push
xchg
add
in
pushf
cmp
out
or
mov
test
push
outs
mov
lods
pop
dec
cmps
mov
lods
fs
mov
mov
test
repnz
add
mov
jecxz
jbe
dec
loope
push
inc
sbb
call
adc
data16
sti
daa
nop
clc
or
test
stos
daa
mov
mov
add
mov
repz
js
xchg
add
jno
imul
lods
loop
jb
loop
jae
add
int
cmp
push
in
stos
add
xchg
je
push
inc
xchg
test
pop
sub
sub
(bad)
push
(bad)
div
jmp
inc
xchg
imul
sub
pop
test
(bad)
jp
mov
jne
das
sahf
scas
(bad)
in
cmp
mov
call
ja
jge
push
fsub
add
aas
pop
aam
das
sbb
jno
cdq
mov
(bad)
mov
xchg
xor
xlat
pop
dec
pop
cmp
mov
inc
(bad)
xor
(bad)
pop
push
dec
or
in
cmp
xchg
(bad)
mov
xchg
call
jmp
test
pusha
add
xor
shl
stos
or
fld
cwde
stos
pop
fsubp
inc
dec
lahf
dec
push
(bad)
repz
or
popf
adc
mov
mov
adc
mov
mov
sar
leave
fisttp
push
or
xchg
lods
ds
loope
adc
push
pop
and
add
xchg
icebp
fisub
jecxz
in
inc
lods
mov
mov
inc
mov
scas
data16
movs
xchg
xor
xlat
out
mov
jmp
mov
stos
aad
push
jne
or
aaa
or
pop
adc
lods
rcr
pop
scas
mov
cmp
cwde
(bad)
cmpxchg
mov
popa
xchg
fdiv
mov
jo
cmc
stos
adc
lods
test
mov
fs
mov
cmps
cmp
add
dec
test
pop
jmp
sbb
(bad)
repnz
hlt
push
and
movs
pop
pop
scas
scas
mov
aas
pop
jecxz
mov
arpl
out
pusha
sbb
dec
scas
or
aad
sbb
es
in
les
test
test
xchg
push
xlat
outs
sti
lods
sti
sub
nop
popa
adc
push
xchg
mov
popf
jns
lods
clc
idiv
pop
scas
inc
mov
mov
ret
xor
jmp
xlat
or
out
ins
cmp
mov
cmp
lar
nop
jmp
sub
mov
jecxz
shl
mov
les
lock
dec
(bad)
fsubr
cmp
frstor
jne
pusha
popf
and
mov
jge
adc
push
and
jle
cmp
out
add
loop
not
popf
frstor
mov
push
mov
dec
js
inc
inc
push
imul
push
sbb
jmp
or
dec
dec
aad
and
adc
push
xlat
test
data16
pop
ja
fwait
xchg
inc
sub
and
scas
scas
add
cwde
(bad)
not
inc
in
fs
and
retf
xchg
cmc
jl
cs
inc
das
das
or
sub
cdq
xor
in
add
mov
rcr
inc
in
ins
fadd
mov
pop
nop
jnp
xchg
les
enter
iret
lahf
ss
push
cmp
ret
jl
arpl
and
(bad)
aaa
je
cs
xchg
fldcw
(bad)
repz
lahf
lahf
cmp
jbe
cmp
xchg
fwait
push
nop
(bad)
std
add
mov
fsubr
popf
pinsrw
call
das
lock
arpl
mov
dec
push
push
adc
mov
mov
(bad)
jbe
test
data16
cli
xchg
imul
mov
xor
cmp
push
mov
pop
movs
mov
add
call
lea
add
adc
jp
and
pushf
add
or
and
xchg
lahf
dec
call
in
xchg
in
retf
data16
pop
xchg
pop
jmp
ficom
xchg
inc
imul
mov
jmp
xchg
jo
adc
push
or
xor
jmp
and
mov
in
mov
pop
daa
pop
fisubr
inc
push
cmp
mov
jbe
(bad)
dec
pushf
xchg
cdq
ret
pusha
cmp
mov
jecxz
jmp
inc
(bad)
and
in
pop
das
mov
mul
push
repz
adc
enter
dec
enter
push
jp
and
test
jecxz
les
push
bound
in
mov
inc
mov
mov
call
loop
cli
cmp
mov
add
adc
mov
cmp
cmp
rcl
dec
jecxz
adc
lahf
out
add
stc
xchg
clc
or
dec
jecxz
push
and
dec
fs
cmp
sahf
xor
nop
pop
jns
(bad)
jb
push
jmp
push
xlat
callw
popf
les
push
shr
mov
adc
test
xchg
(bad)
cdq
and
pop
xchg
daa
stos
in
test
test
push
stos
or
mov
sub
loopne
fnsave
hlt
dec
xlat
dec
das
retf
sbb
add
xchg
push
and
sub
ds
cmp
call
sbb
mov
mov
xor
fsubr
int3
mov
mov
imul
shl
xchg
(bad)
out
ficomp
jnp
jp
mov
jl
daa
pop
in
popf
xchg
or
cmp
addr16
movs
test
mov
pushf
or
inc
mov
popa
add
xor
pusha
sub
sbb
mov
mov
aam
mov
les
sbb
xor
ffree
pop
push
dec
push
movs
push
pop
jae
push
mov
les
or
(bad)
in
repnz
cs
mov
mov
or
dec
stc
mov
popf
cmp
push
jae
rcr
mov
sbb
mov
movs
pop
mov
lods
aad
jae
pop
inc
fsub
mov
xchg
pop
or
popa
scas
mov
xchg
lods
repz
pop
aas
stos
mov
dec
pop
retf
sub
pop
or
fsubr
in
and
pop
inc
retf
aad
pop
jle
cmp
add
out
ror
add
cmp
jl
inc
mov
push
add
jge
push
ins
cmp
sub
sbb
mov
mov
inc
rol
fs
and
pop
rcl
movs
jno
lods
push
je
enter
xchg
dec
(bad)
gs
pop
and
or
stc
shr
mov
scas
push
call
inc
dec
(bad)
ret
loop
fcmovnb
cmps
mov
imul
xor
stos
inc
sbb
aas
pop
ins
xchg
cli
cmp
pop
push
inc
jg
pop
out
push
add
test
mov
inc
retf
aaa
test
imul
xchg
ret
jmp
aaa
cli
sbb
mov
push
xor
mov
mov
add
popa
xor
push
or
adc
cmc
push
adc
arpl
sub
(bad)
push
push
dec
sub
push
or
cli
popa
push
mov
ds
(bad)
clc
mov
mov
sub
mov
js
test
mov
imul
xchg
js
test
jb
dec
or
stos
jl
pop
mov
and
ins
push
push
pop
mov
push
aaa
retf
sar
in
(bad)
std
and
lods
mov
mov
je
shl
mov
fstp
pop
xchg
loope
lea
in
pop
mov
sbb
sub
fs
ss
fs
aaa
inc
fisubr
cmc
push
sti
(bad)
xor
into
js
stos
xor
dec
jg
popf
sar
sub
sahf
mov
push
mov
sbb
push
iret
fist
push
pop
lahf
xor
mov
rol
push
sar
out
repz
sub
sbb
cmp
pusha
(bad)
aaa
shr
imul
popa
icebp
inc
sub
in
aas
mov
pop
mov
(bad)
fldcw
(bad)
pushf
push
or
dec
icebp
add
xor
push
cmps
loope
cmp
dec
(bad)
dec
aad
hlt
imul
es
adc
fwait
pop
adc
test
sbb
jg
in
stc
repnz
outs
jge
stos
sbb
sbb
cs
sbb
or
inc
cmp
sbb
movs
lea
sbb
cmp
cmp
imul
xlat
js
out
cdq
xchg
sbb
fnstenv
xchg
dec
out
daa
and
out
into
mov
pop
out
push
add
les
mov
ss
out
xchg
rcl
push
movs
fsubr
inc
outs
adc
sar
ins
cwde
sbb
jp
fcomp
mov
imul
rcl
imul
mov
lock
adc
into
in
pop
add
std
mov
mov
movs
or
nop
mov
retf
xchg
into
fiadd
mov
and
xor
aaa
mov
xchg
fwait
mov
rcl
in
or
mov
push
lea
jno
aas
sub
xchg
cmp
into
cmps
(bad)
xor
fidiv
lods
aaa
or
inc
nop
push
shl
ret
adc
cmp
shl
cdq
dec
test
add
mov
jne
dec
hlt
loop
(bad)
(bad)
jns
sub
mov
movs
pop
jmp
ffree
mov
jne
imul
iret
sub
cli
enterw
daa
push
ret
fwait
mov
adc
fsubr
mov
xchg
jne
and
adc
out
sbb
jge
jecxz
popa
icebp
xor
popa
and
test
retf
sahf
enter
mov
or
inc
loope
sti
int
xchg
fs
out
stos
fwait
shl
sahf
sub
cdq
fist
in
sbb
lahf
fiadd
or
out
and
ds
enter
cbw
and
mov
jo
mov
mov
or
ds
cmp
jl
adc
sub
(bad)
ror
sbb
cmps
jno
xor
stc
adc
pop
call
xor
inc
push
inc
cmp
enter
cmps
mov
dec
leave
pop
mov
cld
push
sbb
daa
bound
cmp
lahf
cdq
imul
add
mov
pop
dec
xlat
pop
mov
enter
xchg
(bad)
ja
(bad)
aad
sbb
mov
in
adc
mov
sbb
iret
jo
adc
adc
push
in
or
lock
cs
xchg
xchg
sar
fidivr
inc
xor
mov
sub
lock
pop
arpl
push
cmps
adc
push
push
cmps
xor
lods
jno
fisub
dec
jo
cli
scas
push
cmp
or
mov
and
imul
ins
out
and
adc
test
in
cmps
adc
retf
enter
xchg
repnz
add
clc
out
xor
out
imul
mov
mov
cmps
mov
dec
sub
mov
push
adc
xor
aaa
pop
test
mov
gs
add
push
stos
mov
push
in
pop
xchg
cli
jmp
pop
call
(bad)
mov
call
sbb
hlt
lahf
dec
inc
outs
jle
dec
out
push
mov
dec
mov
ins
pop
test
sbb
sub
js
sub
nop
push
push
mov
inc
and
out
movs
adc
jb
fisttp
cmp
out
mov
mov
push
(bad)
sti
or
fcom
jno
rol
test
dec
push
pushf
sub
sar
sub
hlt
mov
out
inc
bound
leave
sub
cs
je
leave
inc
dec
add
sbb
aaa
jp
sahf
cdq
adc
int
mov
vxorpd
call
imul
inc
and
adc
dec
cmp
mov
test
pop
dec
mov
movs
cmp
inc
sahf
mov
push
enter
ins
mov
lahf
mov
fbstp
call
sub
leave
dec
(bad)
jle
inc
mov
jle
loopne
je
call
pop
outs
sbb
add
xor
jb
sub
adc
leave
push
rcl
aam
mov
mov
lock
ss
jecxz
bound
add
inc
add
xor
adc
lahf
push
pop
aas
mov
cld
enter
mov
lahf
add
int3
fbld
not
gs
(bad)
(bad)
adc
xchg
in
repz
cmp
stos
lods
fstp
call
cmp
dec
add
or
pop
mov
icebp
mov
sbb
jl
jge
mov
inc
cmp
sbb
xchg
xor
add
in
out
add
dec
mov
fucom
into
fiadd
jne
mov
int3
add
loopne
mov
retf
cmp
jecxz
mov
jecxz
xchg
pop
jmp
in
(bad)
in
jg
mov
mov
ds
or
icebp
jge
mov
cmp
lods
jmp
dec
inc
dec
sbb
pusha
jbe
cwde
xchg
in
inc
(bad)
dec
push
jle
imul
aam
pop
loope
icebp
and
xchg
cli
xchg
test
aas
jno
imul
cmps
repz
pop
lahf
ins
(bad)
rcr
adc
rol
arpl
mov
daa
xchg
jo
sub
test
mov
dec
mov
adc
sbb
ds
lahf
mul
ins
or
mov
loop
js
jmp
pop
pop
(bad)
std
das
adc
push
lds
cmp
clc
inc
popa
push
paddsw
inc
cmp
mov
jg
sbb
inc
jmp
jmp
jecxz
jg
xchg
arpl
mov
jno
imul
lock
sbb
xchg
fcomp
jbe
cmps
jmp
daa
jnp
jb
outs
push
ja
movs
ds
jmp
test
popa
ret
or
inc
scas
mov
jno
outs
adc
scas
mul
jle
add
outs
pop
xchg
mov
iret
fstp
inc
add
cmp
cld
aad
push
dec
cmp
lods
imul
fs
jl
enter
int3
enter
jne
repz
in
imul
sbb
mov
call
pop
lods
popa
dec
shl
sahf
stos
inc
test
jl
sbb
repnz
add
sub
fsubr
mov
pusha
aam
(bad)
in
fdivr
gs
jmp
adc
(bad)
sti
push
mov
dec
idiv
adc
push
retf
mov
lea
adc
in
jecxz
xchg
adc
imul
fwait
add
inc
sbb
cmp
in
call
in
add
dec
scas
aas
ror
push
std
xlat
sar
mov
sub
pop
ds
lods
(bad)
sbb
add
fisub
repz
lds
leave
cli
cmp
xchg
xor
ins
fwait
pop
rcl
xor
repnz
lds
or
dec
mov
add
xchg
ds
retf
sbb
test
mov
jge
and
add
jmp
(bad)
retf
bound
add
adc
sahf
fild
mov
lods
xor
or
xor
cwde
jmp
jmp
in
cli
xor
mov
or
push
addr16
lahf
push
lods
stos
test
push
xor
mov
jmp
in
test
xlat
movzx
pop
clc
(bad)
mov
pushf
xchg
shl
into
jmp
cmc
jl
push
adc
fwait
xor
dec
sub
scas
mov
and
popa
adc
aas
ret
sbb
mov
div
icebp
and
inc
out
int3
call
adc
pop
retf
adc
inc
std
jp
sahf
div
push
sub
jns
xchg
(bad)
xor
pop
in
push
lahf
xor
mov
rol
test
(bad)
arpl
lods
xor
xchg
dec
paddd
lds
scas
lahf
mov
mov
imul
mov
adc
mov
sub
cmp
jns
jg
inc
jle
push
shr
inc
mov
pusha
mov
xchg
cmp
xchg
retf
in
fwait
je
nop
sahf
sub
ins
and
call
mov
stos
bound
mov
push
fnstcw
mov
jp
fild
jnp
rcl
(bad)
jle
daa
add
pushf
or
imul
iret
jno
shl
and
ret
sbb
or
pop
mov
daa
ds
lock
pop
cli
cmp
xchg
mov
(bad)
int
repnz
arpl
lock
adc
mov
rcl
shl
xchg
(bad)
stos
adc
add
xor
xor
cmp
ror
out
xchg
pop
(bad)
stc
dec
sbb
rcr
inc
daa
mov
loope
sbb
mov
lods
or
push
icebp
push
jns
sub
xchg
or
inc
or
and
imul
jae
shl
sub
div
cmp
xor
inc
jge
adc
daa
cmp
fcmovb
xor
push
inc
pop
mov
ds
leave
icebp
test
call
sbb
fwait
icebp
add
push
dec
sub
sub
aam
fild
loope
adc
mov
lea
xchg
lds
sbb
arpl
sti
or
jmp
mov
mov
outs
icebp
aad
mov
jb
xchg
iret
leave
push
and
pop
or
push
aaa
and
fnsave
jae
jp
std
jecxz
mov
icebp
shl
sub
add
sub
push
cli
sbb
add
mov
ret
test
int3
push
call
pop
fcomp
cmp
pushf
or
add
retf
out
clc
cmp
xchg
dec
and
pop
loopne
jp
mov
jp
in
or
mov
sub
pop
add
or
ror
aaa
stos
call
stc
cdq
or
adc
mov
push
lock
shl
ins
and
or
ins
adc
xchg
sahf
jle
test
fisttp
mov
mov
jmp
mov
in
mov
cld
push
jnp
add
mov
sbb
push
data16
mov
or
imul
rcl
pop
outs
out
mov
push
mov
dec
sub
mov
out
scas
bound
movs
pop
shl
sar
leave
push
std
adc
fmul
mov
retf
iret
fbstp
adc
mov
push
sbb
push
enter
xor
mov
mov
sbb
mov
and
ror
sahf
sti
or
(bad)
xor
mov
jle
mov
sbb
mov
mov
mov
imul
mul
cmps
arpl
add
xchg
dec
sub
pcmpgtb
das
scas
shl
test
xchg
xchg
xor
push
dec
iret
stc
out
xor
ror
clc
cld
dec
push
dec
enter
popa
repz
ret
mov
mov
out
adc
(bad)
ds
aad
nop
into
or
call
cld
popa
mov
mov
fwait
mov
cwde
xor
fldenv
inc
mov
push
jne
dec
ret
movs
and
pop
add
pop
adc
pop
and
sub
push
icebp
mov
jmp
and
loopne
and
push
mov
pop
mov
inc
jnp
pop
in
and
(bad)
mov
mov
loop
cmp
je
add
dec
int
pop
adc
push
pop
xchg
popf
aas
test
inc
mov
and
sub
push
sub
test
push
sub
ja
imul
imul
outs
jbe
cmps
pop
popw
dec
cmps
cmp
jg
jmp
loop
data16
mov
cli
cli
or
ins
pop
xor
cmp
sti
sub
jmp
retf
fwait
cwde
movs
and
adc
inc
add
mov
iret
cmc
inc
push
aas
mov
out
sbb
jmp
stos
movs
push
out
pop
scas
xchg
mov
push
pop
in
lock
jmp
cmps
jge
jno
and
sbb
add
dec
jmp
cld
mov
mov
js
dec
fistp
jo
frstor
cdq
mov
cmp
or
xchg
cdq
mov
mov
shr
inc
ins
stos
dec
loop
mov
sbb
sbb
fidiv
and
mov
arpl
inc
mov
out
dec
xchg
cmps
pop
call
push
mov
fadd
outs
ins
fld
xor
and
in
out
cmp
fs
push
jg
xchg
popa
xor
iret
cmp
push
je
add
pop
xchg
ja
mov
jae
das
xchg
push
popf
or
and
adc
in
xchg
fidivr
cmp
pop
xchg
dec
dec
xchg
es
(bad)
xchg
in
jge
ins
imul
cmp
cmp
test
cmp
fisttp
dec
pushf
push
test
mov
outs
push
loop
fmul
pop
xchg
jmp
dec
and
add
dec
mov
push
std
adc
jmp
jo
xor
sub
jl
pop
sti
lods
mov
inc
aad
mov
ds
out
pop
mov
mov
cmp
mov
mov
daa
movs
cmps
and
out
ja
sar
inc
mov
and
jp
mov
ror
jecxz
xchg
pop
fisttp
dec
xor
mov
inc
fld
out
fdiv
pusha
rcr
lahf
je
out
mov
xchg
addr16
and
mov
and
mov
inc
mov
jle
std
retf
lods
or
stc
aam
mov
or
and
mov
pop
or
out
xor
inc
mov
ficom
test
call
and
std
or
or
xor
cmp
dec
(bad)
jnp
dec
push
jb
adc
dec
mov
mov
jnp
(bad)
jecxz
inc
dec
xchg
fdiv
(bad)
loopne
and
je
cmp
cli
scas
retf
push
stos
retf
or
sbb
xchg
pop
fmul
jne
mul
cmp
add
mov
loope
ja
mov
(bad)
ret
imul
ins
fs
clc
arpl
or
mov
in
pop
or
push
stos
xor
std
mov
pop
mov
js
stc
mov
in
and
jns
push
retf
fs
sub
clc
loop
sub
aaa
sahf
jecxz
pop
mov
(bad)
cmp
jmp
adc
(bad)
hlt
leave
fld
mov
push
and
xchg
stos
jns
sbb
into
mov
xchg
call
shr
cmp
mov
inc
cli
iret
jmp
mov
mov
cmps
inc
repz
clc
mov
adc
jle
ss
fdiv
inc
jmp
dec
sub
sub
mov
pusha
mov
movntps
push
lds
ds
sub
test
nop
loop
movs
fabs
push
sub
cmc
or
call
xor
out
xchg
call
add
outs
xor
pusha
pop
iret
test
cld
cli
lahf
ret
test
adc
xor
jmp
fstp
jmp
retf
in
add
gs
mov
cmps
sub
dec
movs
mov
aaa
cmp
dec
call
icebp
push
push
mov
ss
dec
cli
cmp
push
mov
jl
pusha
popf
xchg
and
test
cmp
mov
fistp
repnz
pusha
sahf
inc
or
push
rcr
stos
ds
cmp
cmp
jno
cmp
mov
or
call
mov
into
mul
and
or
xchg
ja
xor
push
out
stc
stos
imul
stc
mov
xor
cmp
inc
imul
cmp
ds
jmp
pushf
mov
lods
cmp
loopne
sbb
jno
jo
adc
and
pop
outs
bnd
in
ins
inc
xor
sbb
xchg
jno
rol
dec
and
stos
mov
mov
repz
jae
aad
push
cmps
pop
enter
pushf
add
jg
ins
mov
cmp
push
jnp
shl
mov
cmps
outs
cmp
in
fld
dec
les
cmps
mov
shl
lds
push
or
test
pop
pusha
xchg
add
cli
ja
push
jmp
aam
gs
and
push
pop
xchg
mov
xchg
jecxz
nop
mov
ds
mov
mov
call
jmp
cmc
test
(bad)
icebp
xchg
sub
add
lds
sub
dec
int
movs
retf
push
popf
jnp
out
xchg
rol
sub
jmp
pop
stos
jle
mov
sbb
leave
call
add
test
in
sbb
or
pop
or
mov
or
xchg
shl
pop
loope
cs
jmp
adc
repz
sbb
jb
and
push
sbb
and
shl
jns
mov
in
cmp
pop
popf
imul
fdivp
dec
jne
jno
adc
sar
cmp
hlt
sub
pop
mov
test
jle
cwde
leave
push
adc
clc
push
sbb
aaa
mov
fcomp
lods
shl
xor
dec
lods
add
or
pop
push
and
ror
xchg
(bad)
jb
xor
imul
push
sbb
xor
stos
rol
xchg
and
cmps
cs
xor
pushf
js
pop
ds
leave
mov
in
mov
loopne
int
lock
pushf
das
or
lea
fstp
pop
mov
(bad)
mov
push
xchg
pop
nop
xchg
leave
jnp
pop
push
jge
xchg
push
mov
lock
and
or
imul
retf
aas
xchg
mov
add
sub
mov
pop
stos
jmp
mov
push
push
nop
imul
mov
loope
sbb
les
iret
in
movs
and
stc
pop
mov
imul
mov
pushf
or
mov
retf
xor
leave
aad
pop
cmp
inc
into
scas
stos
dec
inc
pop
retf
aam
adc
outs
sbb
std
xchg
repnz
ja
retf
cmc
lock
adc
jmp
test
cmps
jle
add
cli
or
into
cmp
shl
mov
add
pop
call
call
retf
jp
fs
or
loope
push
pop
out
push
fwait
pusha
call
inc
mov
mov
and
sbb
pop
repz
fadd
aaa
inc
xchg
cmp
mov
cmp
ss
mov
add
add
mov
mov
adc
std
ins
xchg
(bad)
sbb
fst
std
sbb
mov
imul
pop
sub
mov
jno
popa
mov
pop
leave
push
xchg
jmp
dec
mov
inc
lock
mov
push
mov
sub
mov
jnp
push
mov
(bad)
popa
mov
jae
(bad)
xor
xchg
fst
adc
jb
and
mov
idiv
test
int
pop
xchg
inc
cmc
jae
mov
(bad)
fisttp
xchg
add
mov
mul
rcl
cld
add
xchg
jge
mov
cmc
inc
(bad)
jl
cmp
clc
hlt
iret
cmps
hlt
call
push
std
mov
push
shl
cdq
pushf
pusha
cmp
push
cmc
cmp
add
add
cmp
rcl
push
(bad)
sti
sub
inc
ss
aad
repnz
sbb
mov
fldenv
ins
ss
xor
add
inc
lds
jno
add
mov
xchg
pushf
out
retf
pop
aam
cmp
xor
bound
push
lods
push
mov
cmps
aas
in
or
mov
gs
cmp
ret
xchg
ja
dec
jno
or
cld
dec
pusha
xchg
iret
lea
les
cmp
sub
and
and
lds
xchg
cdq
repnz
sti
inc
lds
xor
mov
mov
jo
mov
pop
retf
test
loopne
cmps
scas
dec
push
mov
enter
(bad)
jmp
adc
rol
cs
(bad)
frstor
frstor
mov
or
cmp
push
xor
cmp
fs
cmp
outs
push
inc
and
xchg
cli
inc
dec
ud1
dec
(bad)
sbb
mov
out
pop
int3
mov
sub
imul
stc
call
aad
retf
mov
xchg
retf
loope
sub
or
push
scas
(bad)
test
inc
xor
push
mov
mov
(bad)
imul
lock
movs
cdq
mov
mov
and
cli
ss
scas
data16
(bad)
repnz
cmp
xchg
in
imul
arpl
or
cmp
or
popf
pop
push
mov
fnstcw
or
pop
cmc
or
add
hlt
loopne
or
pop
add
add
imul
out
sahf
(bad)
mov
or
mov
clc
ins
ret
lods
leave
ret
sub
fcom
fist
test
test
bound
movs
xor
cmps
jbe
sub
mov
das
mov
fadd
fbld
fnstcw
dec
and
in
mov
(bad)
into
stc
push
fs
repz
dec
test
push
arpl
cmps
scas
push
or
daa
sub
jae
adc
out
cmp
ror
stos
cli
clc
inc
adc
sbb
fwait
loopne
sbb
and
or
repnz
and
mov
xor
rcr
or
xchg
pop
enter
and
mov
inc
dec
mov
push
sub
jb
dec
mov
push
mov
test
push
scas
fist
and
clc
push
add
xor
loop
in
shr
scas
jg
mov
xlat
mov
dec
(bad)
stos
push
imul
cmp
sbb
(bad)
nop
push
fstp
cdq
addr16
fs
dec
ret
and
dec
pop
xchg
popf
dec
jne
add
inc
imul
icebp
dec
cld
xchg
or
xchg
inc
rcr
mov
retf
ja
int
pop
pop
sbb
leave
inc
bound
icebp
mov
cdq
in
mov
pusha
out
(bad)
and
icebp
push
mov
enter
in
jle
adc
inc
mov
cmp
(bad)
pop
mov
adc
push
popf
cmps
mov
cdq
int
fldenv
out
inc
pop
sbb
or
dec
cmp
jp
test
ds
lea
xor
mov
das
sbb
fidivr
mov
(bad)
jmp
sar
into
dec
dec
sbb
daa
(bad)
push
stos
ffreep
xchg
pop
mov
ss
sbb
(bad)
sub
call
or
adc
cmp
jne
inc
les
jb
sbb
loope
sti
aaa
sbb
inc
push
cs
xchg
leave
aas
aam
and
ror
sub
and
cdq
adc
ds
push
cmp
add
add
movs
out
dec
pop
mov
sbb
add
rol
ins
ins
scas
push
imul
hlt
inc
mov
(bad)
sar
sbb
pop
cmp
scas
cmc
loopne
scas
(bad)
rcl
add
jb
arpl
sahf
mov
jmp
mov
jno
cmp
imul
inc
movs
hlt
shl
mov
das
add
shl
push
fisttp
pop
icebp
imul
dec
lods
retf
and
int
or
pop
cmps
push
scas
aam
bswap
retf
ficom
popa
mov
push
xor
setb
(bad)
mov
pop
jae
bound
jge
enter
das
jmp
leave
ins
sub
mov
jns
aam
fs
mov
mov
add
dec
mov
push
dec
sbb
test
xor
jmp
inc
lds
aad
mov
add
popf
ins
int3
pop
out
mov
adc
pop
retf
shr
jnp
std
sub
std
rcr
ret
cmp
loope
xchg
in
(bad)
and
mov
daa
push
fsubr
xchg
jae
sahf
dec
out
(bad)
adc
and
shl
scas
addr16
pop
das
pop
scas
sbb
jecxz
sbb
pop
inc
sub
adc
push
xchg
add
jmp
in
cmps
sbb
ja
xor
adc
and
dec
retf
or
and
fisubr
mov
push
loopne
mov
push
xchg
hlt
fs
out
mov
shl
popfw
xchg
fdivr
sub
ret
sub
(bad)
mov
dec
(bad)
jmp
mov
ret
add
jmp
jbe
push
cmc
enter
fwait
out
pop
movs
cld
repnz
jmp
test
sbb
add
leave
pusha
movs
dec
int
sbb
hlt
or
popa
lahf
cmp
repnz
(bad)
pop
jb
loopne
jns
outs
sahf
sbb
ja
cwde
fmul
imul
iret
jg
in
lahf
fnstsw
push
dec
ss
add
mov
aas
inc
mov
fadd
inc
push
dec
jo
adc
mov
pop
cmc
dec
xchg
into
inc
out
push
mov
icebp
mov
ins
xchg
cmp
add
push
aam
and
sti
or
adc
cmc
push
jge
sbb
cmp
pop
or
aaa
fwait
jae
xchg
loopne
(bad)
mov
jmp
push
dec
jg
les
cs
mov
jbe
fnsave
and
test
mov
out
add
inc
fneni(8087
xor
xor
pop
dec
lods
push
mov
or
jae
mov
out
cdq
mov
es
(bad)
clc
aam
arpl
pop
out
lods
mov
dec
clc
cmc
pop
push
pop
jnp
jmp
es
jp
pop
fstp
cmc
pop
mov
loop
ins
movs
ss
fimul
or
mov
and
push
arpl
imul
andps
mov
mov
test
dec
sbb
push
and
loop
mov
loopne
or
lods
cmc
xchg
or
pop
cli
(bad)
movs
(bad)
jmp
push
icebp
inc
fiadd
aaa
stc
inc
test
cli
add
repnz
jbe
mov
inc
push
(bad)
(bad)
enter
shl
adc
ss
arpl
inc
xlat
arpl
xchg
sub
add
fsubrp
dec
cmp
jns
xchg
sbb
jle
into
cmp
push
(bad)
xor
jecxz
mov
imul
cdq
xor
loopne
pop
fmul
fcmove
into
lahf
pushf
pop
mov
lods
cmps
jns
loop
fst
idiv
mov
adc
mov
out
sbb
mov
fwait
lods
inc
ret
mov
pop
mov
gs
inc
(bad)
das
dec
jae
xor
(bad)
jmp
push
cmp
call
es
and
jns
mov
jp
test
adc
repnz
add
call
inc
add
iret
dec
dec
sar
sub
pushf
jg
jmp
pop
leave
and
push
(bad)
sbb
sahf
or
pop
or
jnp
mov
adc
push
jo
pop
jns
sti
dec
pop
or
ins
mov
sub
sbb
sbb
inc
push
repz
mov
add
mov
fwait
jle
or
cmp
(bad)
(bad)
xor
jmp
imul
lods
jns
cwde
je
outs
call
mov
push
imul
push
sub
pop
mov
rcl
rol
pushf
les
sidtd
cmp
lock
push
ja
in
aad
jl
mov
loop
fldcw
push
inc
and
aad
aas
and
ja
dec
ffreep
rep
mov
and
and
out
sbb
stc
jmp
jmp
sub
mul
xor
push
mov
popa
(bad)
jo
fs
loope
xchg
sub
sub
jp
(bad)
(bad)
in
cmp
jge
cmp
ins
dec
icebp
xchg
xchg
xor
ss
inc
adc
sbb
in
jno
ret
imul
scas
sahf
pop
(bad)
sti
jae
loope
cmps
icebp
neg
mov
rol
add
aas
pop
xchg
mov
fisubr
xor
sbb
in
loopne
das
in
stos
out
mov
adc
cwde
push
neg
mov
sti
adc
(bad)
pushf
(bad)
(bad)
sti
movs
pop
(bad)
fsave
fwait
xchg
xchg
popa
jb
push
int
into
dec
xchg
xor
jecxz
jmp
sub
aad
or
mov
daa
pop
cmp
stos
push
or
cmp
xchg
loop
scas
sbb
xor
inc
pop
add
test
(bad)
mov
test
(bad)
mov
sub
push
in
ss
test
adc
push
push
inc
retf
fist
push
cmp
popa
ret
jmp
shl
scas
clc
mov
(bad)
scas
add
int
aas
sub
xchg
sub
movs
rcl
int3
or
inc
enter
or
push
push
int3
mov
out
leave
std
ret
xlat
dec
dec
sbb
ret
xlat
xor
pushf
call
sbb
je
push
lea
loope
jmp
mov
jne
fwait
or
mov
in
xlat
add
(bad)
in
fsubr
mov
mov
pushf
add
loopne
pop
je
lds
xlat
pop
daa
fmul
xor
xchg
out
outs
repnz
das
push
or
cs
xor
test
and
daa
xor
arpl
cmp
mov
jbe
or
push
add
push
arpl
cwde
pop
and
mov
add
inc
mov
cmps
sbb
sbb
gs
or
mov
push
mov
scas
push
jb
jge
sub
jns
mov
jecxz
mov
cs
dec
mov
sub
test
add
mov
lods
cmp
push
and
xor
jo
xor
rcr
pop
je
cmp
mov
ret
in
cdq
adc
loopne
rcl
xor
nop
dec
xor
push
call
sbb
jne
stc
cmp
pop
xchg
mov
loope
out
ret
cli
scas
add
lea
push
test
out
call
jns
cmp
inc
add
inc
xor
inc
test
movs
stc
mov
adc
pop
outs
mov
out
rcr
lock
retf
aad
in
jp
ss
sub
or
(bad)
ds
popa
adc
in
sahf
dec
jbe
xor
push
cmp
cmps
adc
jns
cld
das
out
fsub
mov
sti
dec
mov
and
or
popf
scas
ins
lea
sar
mov
inc
xor
jne
xchg
neg
test
sbb
adc
jg
xor
cs
sbb
or
mov
repnz
or
xor
inc
push
pop
call
add
mov
pusha
xor
arpl
inc
mov
rcr
arpl
push
(bad)
cmp
int
xchg
sbb
mov
ds
pop
or
push
xchg
dec
fsubrp
sub
aaa
rol
ret
pop
fld
mov
push
dec
xchg
push
adc
test
push
pop
add
out
pop
jns
cmc
dec
push
stos
push
fsub
(bad)
lods
push
add
cmp
jo
push
aaa
pusha
xchg
adc
pushf
pop
inc
arpl
inc
jmp
call
les
ja
pop
ins
inc
fdivr
sbb
es
xchg
mov
aaa
movs
(bad)
hlt
lock
cmc
sbb
imul
fucom
sub
gs
adc
add
cmps
jge
loop
push
push
mov
xchg
push
mov
outs
mov
push
int
adc
jmp
push
mov
fidiv
xchg
stc
imul
hlt
cdq
and
xlat
sub
fcomp
jmp
pop
in
xchg
adc
call
dec
sbb
rcl
fisttp
and
dec
pop
into
aam
in
movs
push
fidivr
adc
add
jl
inc
int3
stc
dec
dec
call
xor
sar
leave
dec
xchg
rcl
outs
imul
out
xchg
adc
inc
mov
and
pop
pushf
ss
cmp
or
cmp
loope
xor
inc
xchg
xchg
push
and
leave
pop
rol
cmp
gs
mov
pop
test
mov
xchg
cmp
fiadd
push
adc
jle
rep
call
or
or
loopne
mov
in
ret
xchg
adc
adc
cli
jae
rcl
jl
adc
ds
mov
ficomp
push
jmp
jb
jecxz
popf
mov
xor
xchg
scas
pop
push
(bad)
out
lods
pop
pop
xor
dec
sub
movs
(bad)
xchg
mov
dec
pop
ja
popf
xlat
or
leave
in
out
mov
call
jmp
or
xchg
adc
push
pop
pop
mov
lahf
xchg
int
inc
test
jmp
push
sbb
retf
leave
push
or
mov
push
nop
cwde
mov
hlt
fimul
stos
push
jno
xor
and
or
aam
mov
or
les
push
pushf
aaa
sahf
inc
shr
lods
add
aaa
lahf
(bad)
sbb
jne
int3
xchg
fs
dec
mov
frstor
loope
mov
push
(bad)
mov
sti
(bad)
jl
xor
sahf
sahf
nop
sub
call
dec
lea
repnz
jmp
jbe
out
sahf
mov
imul
add
(bad)
sub
mov
pop
out
jb
inc
adc
add
inc
cdq
sar
and
(bad)
out
lock
ret
mov
mov
jle
push
jns
sub
jg
add
popa
adc
xchg
xchg
sub
jo
clc
xchg
push
cmp
inc
xchg
cwde
mov
jmp
inc
mov
pushf
cli
pop
mov
ret
sbb
push
mov
mov
fisub
rcr
or
push
call
mov
pop
enter
pop
(bad)
xchg
mov
and
xchg
jecxz
pop
daa
adc
aaa
rcl
sar
(bad)
gs
retf
jmp
add
xchg
adc
xchg
add
and
outs
xchg
test
jl
sbb
test
and
jo
hlt
sbb
addr16
stos
sbb
bnd
(bad)
dec
sub
xor
sub
int3
js
(bad)
es
and
push
push
nop
mov
mov
sub
inc
jno
pushf
mov
jo
ds
int3
or
or
repz
shl
add
cmps
xchg
mov
(bad)
cs
fxrstor
pop
jg
outs
jb
int
mov
xlat
or
lock
dec
movs
arpl
jae
mov
adc
ret
inc
pop
mov
cmp
ja
cmc
leave
call
in
dec
xor
call
pop
std
cmc
mov
fcmovne
sub
push
scas
fst
fucomip
fadd
or
cs
int
mov
cdq
dec
dec
rol
mov
lods
lds
pop
cmp
mov
jnp
rol
xor
sbb
pop
push
cdq
xor
jae
call
dec
pop
es
mov
cmps
fwait
pop
je
xchg
stos
jbe
pusha
loope
cwde
loopne
dec
jo
push
mul
mov
sbb
or
cmps
jo
test
loopne
stos
ss
adc
mov
imul
push
int
pop
dec
outs
in
cmc
ins
xor
cmps
pushf
shr
and
ret
imul
cs
nop
sub
add
pop
xchg
push
sbb
adc
out
sub
cmps
inc
rol
mov
xor
xor
adc
or
jl
jo
outs
adc
dec
out
xchg
(bad)
loopne
mov
daa
call
xlat
sahf
imul
repnz
or
pop
mov
or
out
adc
jp
push
push
shr
scas
cs
arpl
jb
or
and
add
xor
dec
cmp
ss
test
mov
dec
pop
add
xor
inc
inc
mov
loopne
mov
rcr
fsubr
icebp
(bad)
(bad)
sub
dec
cdq
(bad)
in
or
idiv
cmp
push
imul
cld
and
adc
sbb
pushf
iret
je
adc
pop
or
xor
mov
sub
lock
imul
rcl
(bad)
out
xchg
inc
jl
and
fsubr
mov
pushf
mov
mov
mov
push
ss
pop
dec
mov
test
dec
retf
lods
cmc
lds
imul
lds
sbb
jp
dec
mov
jl
sbb
icebp
inc
push
sahf
iret
mov
sbb
jle
es
aam
cld
adc
adc
bound
call
ins
pusha
inc
arpl
add
pop
cld
pushf
ds
adc
jne
not
push
cmp
adc
call
sbb
pop
jg
cli
repnz
out
adc
and
or
dec
out
iret
pop
sub
fidivr
xchg
or
adc
repnz
pusha
inc
ret
sub
test
popf
outs
retf
mov
ins
into
inc
test
cmps
xor
data16
paddsw
shl
and
test
sbb
nop
idiv
pushf
gs
scas
dec
mov
sub
mov
(bad)
jp
lahf
sti
mov
push
ss
sbb
push
push
hlt
imul
fs
cmp
inc
mov
jbe
add
imul
pushf
ins
outs
ja
aaa
jbe
cmp
push
and
pop
and
mov
ja
mov
je
mov
cli
scas
mov
push
(bad)
push
push
jge
gs
fsubr
xchg
jmp
push
and
pop
pop
jp
lods
push
inc
les
aaa
inc
dec
mov
ror
mov
stc
ins
aam
cmp
cmp
lods
mov
fiadd
fistp
sahf
popf
xchg
imul
mov
adc
fstp
jecxz
jl
cmc
cld
in
or
push
ja
jmp
dec
nop
xchg
xchg
or
sub
ret
xchg
pop
add
jno
ins
xchg
or
push
xor
mov
mov
or
ret
call
lahf
idiv
out
sub
inc
popa
pop
or
add
das
xchg
mov
clc
retf
out
dec
push
xchg
(bad)
icebp
clc
adc
test
sub
int3
pop
and
bound
xchg
shr
cmp
mov
mov
aad
out
(bad)
fidivr
ret
sbb
pop
or
dec
scas
mov
retf
sti
cs
xor
pop
cmps
adc
mov
hlt
jne
jbe
inc
push
into
rol
xchg
mov
push
push
cmc
fisttp
push
and
mov
iret
mov
sub
ror
adc
stos
test
dec
mov
cmp
jmp
das
fsub
movs
xlat
mov
adc
jmp
or
jns
push
push
mov
imul
out
pop
push
xchg
rol
cmp
add
adc
dec
sahf
cmps
test
inc
sbb
xchg
xchg
stc
jns
out
pop
lds
bound
fcom
xchg
mov
jmp
mov
mov
scas
mov
movs
mov
mov
(bad)
test
cmp
fdivr
leave
inc
repz
clc
push
(bad)
int3
aad
pusha
sbb
mov
clc
xchg
jp
stos
mov
(bad)
adc
jns
dec
rol
pop
dec
cmp
sbb
les
mov
inc
jo
inc
mov
in
push
jns
jmp
ret
mov
jp
adc
aad
inc
cs
(bad)
pop
add
movs
adc
aaa
jns
sbb
jae
or
test
and
(bad)
pop
aad
xchg
xchg
mov
cmp
cli
pop
pop
pop
lahf
push
es
pop
pop
push
test
xchg
push
push
adc
mov
icebp
adc
or
test
in
out
mov
(bad)
jbe
add
into
test
aad
pop
mov
loope
inc
push
xor
test
ret
inc
es
dec
adc
in
les
popa
mov
jne
mov
push
add
adc
cli
sbb
mov
push
push
jo
icebp
jnp
cmp
jb
mov
fld
xor
setno
add
ss
movs
cmps
in
or
pop
pusha
dec
setl
sbb
jg
cmp
add
jecxz
push
and
mov
rol
lahf
(bad)
jl
cs
adc
push
jne
popa
add
icebp
jecxz
ins
jecxz
cmps
iret
mov
and
repnz
pop
jmp
repz
push
push
mul
cmp
fsub
xor
adc
dec
add
xchg
dec
jb
cmp
mov
xchg
retf
sub
data16
push
es
add
mov
shl
jnp
jp
ss
push
jge
ret
inc
fst
les
in
or
jo
ret
out
mov
pop
out
enter
cmp
fidiv
repz
stc
sar
enter
aaa
pop
sbb
scas
sub
cwde
sahf
ficomp
or
mov
xchg
inc
mov
add
mov
arpl
mov
neg
lahf
(bad)
sub
imul
add
lods
xor
mov
pop
pop
xchg
and
rcl
fsub
repz
leave
das
cmp
xchg
out
cs
clc
cmc
pop
add
hlt
mov
bound
xor
daa
push
push
ss
js
fidiv
(bad)
shr
rol
mov
ins
hlt
push
jmp
dec
mov
fstp
gs
sbb
jo
mov
and
out
cmp
fwait
add
ror
ins
ss
mov
sub
jb
ds
stc
jmp
inc
popa
hlt
jbe
mov
or
pinsrw
mov
iret
sub
adc
inc
sti
fsub
mov
sub
cs
leave
aaa
fimul
scas
outs
fiadd
fild
repnz
and
push
stc
jg
dec
shl
in
add
retf
push
es
push
mov
fsub
mov
(bad)
daa
adc
dec
cmp
outs
(bad)
(bad)
sbb
mov
loop
or
xor
das
movs
pop
mov
cmp
cli
and
inc
sbb
mov
fs
mov
dec
int
xchg
jnp
mov
bound
fcomp
into
and
inc
adc
ins
lods
movs
int
and
outs
inc
shl
mov
stos
jne
sar
test
fldcw
fstp
dec
ficomp
inc
adc
push
adc
push
push
retf
xor
aad
sub
imul
dec
sbb
add
leave
push
(bad)
mov
add
adc
call
sbb
xor
pop
out
ins
or
mov
mov
test
add
xchg
cmp
xor
push
mov
pop
rcl
xchg
jns
jno
add
dec
mov
xor
jns
popa
fild
mov
cli
pop
test
mul
js
or
icebp
aad
inc
add
inc
ss
ds
aad
(bad)
mov
scas
fsub
mov
nop
jle
jns
pop
lahf
mov
sub
add
aad
loopne
add
pop
fstp
adc
mov
sti
(bad)
dec
dec
dec
aad
jecxz
es
sub
shl
mov
xchg
shl
push
shr
xchg
jb
xchg
mov
or
aad
jmp
jge
xchg
adc
jo
sbb
ret
stos
gs
shl
fadd
sub
aas
adc
sbb
call
mov
imul
(bad)
pop
imul
lods
ret
retf
fisubr
cmp
pop
sub
cmp
adc
(bad)
cmps
popa
push
scas
ds
or
popa
add
cwde
cmc
inc
and
sar
pop
jae
mov
xchg
xchg
hlt
repnz
cmp
mov
das
mov
test
push
adc
movs
push
sbb
pop
ss
sub
jp
and
pop
ret
not
pop
mov
mov
push
push
xor
call
aam
ret
ins
and
inc
mov
mov
mov
shl
cmps
xor
or
and
es
les
jmp
dec
ja
sbb
mov
adc
cmps
shl
lea
call
and
mov
mov
pop
psubb
fsubr
retf
adc
pushf
dec
loop
shl
imul
and
pop
sub
lea
out
sbb
mov
jmp
cdq
xor
add
in
lahf
push
add
push
aad
(bad)
and
jge
scas
jns
popf
mov
push
and
push
jnp
xchg
sbb
test
push
adc
mov
xor
push
push
test
fld
leave
and
xchg
sub
cmp
or
inc
mov
pop
jmp
dec
stos
add
cmc
inc
pusha
adc
adc
lahf
pusha
movs
cdq
push
pop
(bad)
pop
add
rcr
xchg
test
lock
jbe
loopne
pushf
inc
rep
pop
cmps
in
cmps
inc
loopne
mov
mov
cwde
push
mov
loop
or
vmovdqa
leave
push
sbb
stc
(bad)
not
in
dec
add
push
fidivr
cmp
sbb
fs
in
push
popa
cmp
ret
jnp
mov
jp
or
mov
ficom
mov
cmp
mov
jge
imul
call
mov
int
jmp
mov
pop
ds
std
lods
mov
xchg
(bad)
push
dec
idiv
xlat
push
fmul
inc
call
pop
push
repz
xchg
cwde
pop
bt
rol
xchg
push
xor
dec
cmps
imul
aas
adc
sub
mov
leave
hlt
sbb
xchg
lahf
addr16
rol
retf
cmc
xlat
adc
jmp
add
adc
push
xor
nop
cwde
(bad)
jp
aas
and
mov
jae
test
int
loope
mov
or
jmp
xchg
addr16
movs
xchg
rol
or
mov
aam
sub
cmp
ds
shr
pushf
jnp
jmp
scas
outs
jecxz
inc
loope
sub
in
arpl
xor
rcr
shl
push
paddq
xlat
sahf
inc
cdq
xchg
int3
xor
and
xchg
lods
and
push
and
jae
out
std
adc
pop
sbb
mov
push
jp
inc
dec
mov
sbb
push
(bad)
dec
ret
sub
push
mov
push
les
cmc
ficom
xchg
mov
outs
mov
add
call
push
mov
xchg
xchg
sahf
and
int3
jmp
rcr
mov
dec
addr16
popa
and
dec
pop
mov
mov
cmc
push
cmps
pop
sub
ficomp
fs
or
scas
mov
test
in
pop
add
inc
out
neg
cdq
ror
(bad)
cld
int
aam
mov
loopne
xchg
in
fld
mov
nop
daa
jp
xchg
movs
aaa
call
test
or
movs
lods
arpl
push
cmps
cmp
mov
dec
shl
fcom
push
mov
gs
test
int
jnp
sbb
out
dec
imul
push
(bad)
mov
xor
mov
out
mov
xchg
stc
jb
fmul
cld
nop
rcr
adc
or
(bad)
fdiv
mov
sub
in
inc
ja
pop
mov
in
gs
jne
stos
dec
or
dec
std
(bad)
adc
adc
inc
ins
xchg
pop
inc
push
ss
in
std
scas
rcl
push
xchg
and
pop
shl
adc
dec
call
icebp
cmp
aaa
and
stc
sub
(bad)
lods
in
pop
add
inc
ss
mov
pop
dec
ins
ret
dec
mov
adc
mov
sti
push
test
mov
xor
dec
pop
push
sbb
adc
cmp
in
sar
pop
in
jns
ret
bound
and
fsub
or
jb
arpl
mov
fisttp
cmc
and
stc
jmp
cmp
cmp
mov
cmp
out
in
mov
es
mov
adc
call
inc
cwde
loopne
aad
adc
pop
out
jle
loopne
leave
pop
xchg
xchg
adc
cpuid
add
retf
ds
fdiv
or
sti
add
sahf
push
mov
loopne
pop
aam
(bad)
xor
aaa
movs
call
mov
mov
dec
sub
pop
jnp
nop
cmp
push
hlt
jns
adc
imul
jg
mov
mov
enter
jns
leave
jne
leavew
retf
inc
dec
xchg
fld
xchg
aam
dec
shr
mov
cld
fwait
scas
shl
push
out
xchg
or
js
rol
cmps
sub
cmp
shl
pop
in
test
mov
cmp
(bad)
sbb
outs
clc
ret
dec
pushf
and
push
jl
and
nop
sar
cmp
sub
lahf
je
jecxz
jb
arpl
mov
shl
cwde
mov
xchg
cwde
lea
xchg
cld
cmp
mov
sub
retf
aad
xor
test
xchg
js
xchg
cmp
cld
cmp
outs
pop
sbb
outs
sahf
mov
or
rol
imul
movs
dec
dec
add
ja
xor
icebp
inc
jae
xchg
sub
and
ss
ror
xchg
mov
push
fdivr
xor
jb
scas
push
adc
xor
mov
dec
jmp
mov
sahf
ins
hlt
data16
mov
(bad)
push
mov
arpl
test
push
test
xchg
test
aaa
inc
div
sbb
add
and
mov
jecxz
jae
adc
dec
popf
fs
mov
push
in
retf
int
xor
iret
pop
sbb
mov
push
ror
sub
jae
sub
pop
fidivr
xor
mov
mov
xor
add
icebp
jne
(bad)
jmp
sbb
adc
ins
pop
test
imul
pushw
mov
rol
ins
push
cdq
cwde
jl
retf
imul
push
sbb
jle
push
movs
movs
mov
push
and
je
xor
pusha
ficomp
enter
scas
sbb
inc
lea
sbb
(bad)
dec
call
enter
add
movs
cmc
(bad)
and
nop
push
test
and
sbb
cmps
leave
pushf
xor
pop
adc
jno
add
out
(bad)
int3
pop
inc
dec
or
mov
mov
xchg
pop
xor
test
mov
inc
(bad)
fidivr
jmp
aad
mov
add
sti
stc
xchg
pop
xchg
lgs
adc
int
fcom
or
pop
out
fsubr
mov
(bad)
in
push
cmp
outs
nop
push
fisub
mov
fnstsw
(bad)
push
mov
or
xchg
fs
xchg
out
repz
(bad)
inc
sbb
or
gs
cld
call
fidivr
inc
ret
xor
sbb
mov
shl
push
cmp
repz
and
ins
(bad)
pop
aaa
push
mov
iret
sbb
xchg
call
jne
dec
adc
aam
dec
dec
out
frstor
mov
mov
mov
repz
popf
cmp
movs
leave
icebp
jnp
sbb
les
push
aas
and
test
in
dec
jne
jge
pop
neg
or
cwde
pop
dec
xor
jne
mov
ins
and
ins
push
in
sti
mov
cmps
(bad)
outs
sub
jbe
retf
out
xlat
js
dec
pop
sub
fld
arpl
mov
sub
pop
mov
lahf
popa
nop
or
pop
sbb
leave
push
or
gs
cli
xchg
mov
jno
mov
int3
and
push
push
out
outs
or
popf
mov
loope
(bad)
(bad)
mov
or
inc
xlat
call
ja
cmp
mov
dec
loope
mov
fbld
stc
ss
dec
or
mov
arpl
fadd
shl
and
std
outs
popa
add
popf
cwde
push
dec
add
pop
and
sbb
sbb
push
aaa
fistp
pop
cdq
sbb
outs
mov
fstp
jmp
push
add
mov
(bad)
retf
cld
xchg
cld
retf
shl
in
cmc
or
lods
(bad)
pop
inc
sub
pop
adc
xor
lea
mov
or
pushf
jo
pop
cli
and
adc
jae
pusha
mov
add
out
jns
cmp
xor
jecxz
fst
iret
push
daa
mov
dec
mov
fcom
repz
clc
call
mov
pop
dec
gs
push
mov
sbb
imul
xchg
into
cmp
cld
fisttp
add
dec
mov
stos
call
hlt
cmps
push
aas
and
imul
jecxz
ss
call
xor
and
pop
shl
shr
lahf
jg
sbb
xchg
sub
popa
pop
adc
test
mov
mov
cdq
fcom
rol
or
xor
jae
mov
addr16
test
pop
cmp
sbb
push
sbb
mov
(bad)
sar
aaa
shl
das
int3
lods
dec
jle
shl
add
lods
adc
jo
sub
ins
mov
and
mov
push
daa
(bad)
mov
imul
jle
sbb
xorps
sar
and
adc
push
in
push
sbb
cmps
xchg
pop
stos
mov
jecxz
outs
loopne
sbb
mov
out
in
outs
outs
ins
or
pusha
inc
cmovg
stos
xchg
icebp
add
push
xchg
aam
test
fsub
scas
in
mov
ds
and
cwde
lock
push
cwde
lock
mov
es
pop
push
xchg
push
ret
add
adc
scas
sti
xor
shl
das
pop
loopne
pop
int3
mov
pop
sti
add
retf
mov
adc
test
xchg
ja
sbb
jae
iret
enter
push
sub
cmp
xchg
jnp
test
rep
and
inc
mov
xchg
pop
fdiv
or
and
adc
lea
mov
xor
push
dec
test
ret
(bad)
retf
fwait
jbe
(bad)
mov
sub
cmps
pop
out
enter
lds
cmp
leave
fsubr
jmp
popa
not
into
push
stos
xor
test
das
stc
daa
pop
ret
fdivrp
push
je
loopne
mov
jo
push
lahf
mov
sbb
sub
inc
jbe
sbb
add
out
cmp
fidiv
lods
adc
fs
dec
or
xchg
push
data16
jle
sub
test
in
push
xchg
inc
cmp
sub
or
data16
sahf
jmp
int3
iret
jnp
sar
xchg
sbb
push
sti
ins
push
lea
mov
aaa
data16
icebp
imul
(bad)
and
rol
clc
adc
movs
sbb
add
sti
xchg
adc
xor
rol
hlt
out
mov
add
push
xchg
mov
out
sti
mov
cmp
sub
aas
cmps
mov
arpl
add
sbb
push
xor
mov
mov
or
cmps
(bad)
(bad)
jg
and
push
lods
pop
xchg
push
and
lods
cmp
jns
xor
push
fstp
adc
mov
jle
shrd
and
mov
aas
push
mov
push
push
jmp
sub
int3
ret
xchg
pop
leave
(bad)
jmp
xor
jmp
sub
adc
xor
pop
xchg
outs
cdq
(bad)
jp
ror
cdq
lods
cmps
push
jns
mov
dec
loop
addr16
das
shr
cmp
xor
push
mov
(bad)
movs
mov
add
cmp
cld
mov
mov
cdq
mov
inc
or
jae
std
lods
fadd
and
cmp
jnp
inc
inc
push
and
inc
mov
xor
push
loope
test
inc
mov
jmpw
hlt
xchg
pop
mov
in
in
mov
xchg
fsubr
inc
or
cli
dec
pmaddwd
pop
dec
cld
sahf
inc
test
repz
mov
repnz
(bad)
jo
sub
mov
push
(bad)
imul
inc
pop
cmps
pop
ins
inc
idiv
(bad)
mov
xor
xor
jbe
test
mov
or
lock
sub
jl
sub
add
clc
mov
mov
or
or
popf
inc
xor
sbb
or
call
jmp
mov
dec
xor
int
(bad)
pop
inc
pop
jnp
imul
sbb
jne
ret
fild
push
enter
rol
fwait
lods
test
jp
jne
xor
gs
cli
pop
sti
inc
cmps
adc
scas
mov
out
repnz
xor
cld
and
in
mov
mov
xchg
xchg
push
dec
ja
loopne
loopne
mov
nop
dec
push
push
pop
push
xchg
jne
ja
dec
retf
mov
js
adc
jl
add
repz
retf
inc
xor
repnz
addr16
cdq
adc
push
push
push
data16
dec
lahf
ret
dec
dec
xchg
cmp
in
inc
jno
lods
push
sbb
outs
ds
pop
inc
mov
fs
mov
cld
into
pop
test
sbb
jle
je
stos
jmp
frstor
pop
pop
inc
inc
leave
sub
sar
xchg
dec
cmps
jp
dec
or
jae
lahf
cmp
xchg
dec
pop
ds
bound
xor
adc
sub
repnz
addr16
outs
je
movs
jge
fcomp
add
pop
xchg
cmc
and
push
mov
jmp
sub
push
or
pop
mov
dec
mov
push
fstp
mov
movs
dec
fwait
or
cmp
inc
xchg
lock
(bad)
clc
shr
mov
repz
jmp
(bad)
and
rcr
xor
xor
inc
xor
in
int3
sub
jns
in
sbb
mov
jg
int
xchg
jmp
or
xchg
call
icebp
call
std
fnstenv
imul
mov
das
and
test
jecxz
cwde
or
outs
add
arpl
push
imul
cli
aad
sbb
fst
sbb
lods
inc
xchg
mov
sub
cmps
movs
add
cmp
pop
push
add
and
jg
cmc
pop
sub
test
sbb
in
adc
loope
loop
xlat
outs
inc
fistp
jbe
dec
scas
repnz
add
sub
push
add
fdiv
iret
xchg
out
pop
xor
fcom
int
arpl
test
cs
xchg
out
lahf
xor
jae
mov
jmp
sbb
into
fidivr
cwde
neg
inc
frstor
push
rcl
or
shr
lock
dec
cmc
xchg
int3
fist
ins
aam
stos
int
sub
push
(bad)
cmp
das
(bad)
mov
aad
mov
jmp
into
sub
jle
fidiv
mov
shl
ds
test
stos
sbb
mov
fucomp
mov
jge
pop
sbb
(bad)
cmc
sub
xchg
(bad)
popf
cmps
xor
mov
pop
fcmovnb
xchg
in
add
scas
(bad)
and
xchg
and
js
add
mov
jle
or
enter
mov
aas
mov
mov
movs
sub
pop
ret
inc
ficom
rcr
imul
cmp
(bad)
repz
imul
cmps
xchg
jle
shl
imul
leave
(bad)
lods
fisubr
les
outs
xchg
sub
jb
loop
fs
aam
dec
lock
inc
add
mov
shl
int3
(bad)
repz
je
pop
les
push
ror
sahf
push
frstor
and
fdivrp
jnp
jns
adc
js
xchg
pop
std
add
add
aas
or
es
or
or
fist
mov
xor
inc
clc
stos
jle
sub
xor
mov
daa
xor
pop
jecxz
mov
inc
sub
pop
push
movs
cs
mov
xchg
jae
xchg
loop
shr
xor
jne
or
jle
push
pop
mov
mov
ds
sbb
push
add
mov
(bad)
das
xor
loop
pushaw
icebp
fyl2x
add
mov
retf
popf
mov
sbb
das
or
jmp
cmp
call
mov
and
neg
(bad)
retf
adc
(bad)
jns
inc
mov
fcmovnb
pop
ja
mov
sahf
movs
stos
mov
xor
cmps
adc
iret
fldenv
pusha
aaa
sbb
jge
pop
jp
add
push
mov
(bad)
push
add
jge
adc
imul
mov
gs
mov
mov
les
out
daa
sub
mov
dec
push
out
add
inc
sub
dec
pop
or
aas
adc
xchg
inc
pop
or
add
fld
jnp
(bad)
cmp
sbb
rcr
or
adc
push
mov
sbb
xor
pusha
aad
test
mov
jp
adc
bound
mov
into
xchg
dec
stos
pop
out
push
jmp
repz
leave
push
cmp
mov
xor
fsub
aaa
push
sbb
inc
call
push
adc
push
xor
or
call
movs
dec
jmp
pop
sbb
mov
jno
xor
data16
les
pop
ds
inc
hlt
aaa
ja
out
sub
in
loope
dec
xor
jo
stc
scas
mov
enter
cdq
les
cmp
mov
gs
ja
jo
in
xlat
cmp
rcl
jg
xchg
mov
lds
push
movd
mov
pusha
jg
les
pop
dec
sbb
outs
(bad)
(bad)
xor
xchg
fidivr
cmp
ss
or
push
int3
jno
add
in
ss
(bad)
popf
dec
adc
test
or
repz
sub
int3
scas
cmp
jne
enter
in
sub
sbb
(bad)
xor
cmp
stos
inc
sub
in
mov
sub
test
and
test
loopne
sub
fcomp
sub
mov
pop
int3
sahf
ins
sub
and
(bad)
cmp
movs
push
mov
shl
sub
mov
sbb
sub
test
add
or
test
pop
call
popa
adc
test
retf
or
(bad)
push
test
out
(bad)
cs
cdq
repnz
test
lock
adc
jl
xor
popf
push
push
dec
retf
movs
sbb
jmp
test
xlat
fstp
and
xor
out
ret
pop
fcom
ins
fs
out
adc
outs
enter
xor
sbb
mov
mov
retf
rcl
add
mov
icebp
fs
mov
retf
aaa
cli
mov
stc
pusha
sub
dec
inc
dec
sahf
pop
jae
arpl
jnp
mov
call
mov
or
pop
retf
(bad)
stos
popa
fidiv
js
xchg
xor
rcr
ret
div
es
icebp
xor
ss
jb
sub
sbb
in
std
fimul
xchg
cmps
jge
scas
aas
psubsb
call
jmp
retf
and
cmps
ret
push
enter
pushf
fmul
and
xchg
loopne
call
push
pop
jns
and
xlat
or
pop
jne
(bad)
cmp
cmp
adc
add
outs
adc
pop
cmp
pop
xchg
inc
in
xchg
mov
ds
iret
aad
pop
push
and
gs
pop
repz
adc
xchg
pushf
mov
pop
(bad)
(bad)
fcomp
xlat
neg
cmp
dec
push
movs
mov
lods
sub
stos
xchg
cmp
mov
inc
je
ret
call
punpckhwd
test
and
jmp
inc
xchg
push
test
mov
popf
xor
add
scas
sub
sub
retf
mov
mov
jb
push
std
adc
arpl
lds
neg
xor
test
cmps
sub
addr16
(bad)
jg
sbb
pop
jmp
js
(bad)
repz
repnz
dec
jne
adc
pop
mov
dec
lods
les
xchg
iret
jecxz
xor
(bad)
fadd
out
mov
movs
sbb
or
ins
shl
(bad)
xchg
xchg
gs
xor
shr
stos
inc
jo
xchg
icebp
aad
cmps
bound
add
xor
cmp
sub
aaa
mov
ficom
mov
cwde
jbe
cwde
mov
add
fadd
mov
adc
jb
xchg
xchg
adc
jns
mov
in
pop
sahf
mov
popa
sbb
mov
ss
in
add
std
out
sbb
mov
pop
jecxz
push
pushf
push
sub
and
bswap
stc
and
clc
les
cmc
xor
js
loop
adc
pop
cs
mov
sbb
cmc
mov
aad
add
imul
cmps
(bad)
pop
and
enter
or
popa
mov
leave
aad
cwde
cmp
jg
leave
ret
scas
mov
lds
inc
pop
or
ds
push
and
(bad)
xchg
mov
rcr
lock
(bad)
mov
mov
push
inc
leave
js
cmp
call
cmp
mov
(bad)
icebp
sub
push
scas
ror
jecxz
mov
inc
out
jp
xor
push
movs
fisubr
cmps
push
fistp
xchg
ja
stos
repz
xor
add
jge
loope
leave
jmp
in
add
and
xchg
sub
jae
outs
enter
mov
sbb
push
inc
rcr
mov
add
xchg
cs
ins
ja
inc
stos
jb
or
sbb
aad
push
xor
lods
lods
push
call
push
xchg
in
mov
or
cmps
ret
in
sbb
mov
push
xor
(bad)
outs
xchg
aad
push
xchg
fnsave
dec
test
pop
pop
ret
es
and
scas
call
(bad)
bnd
lahf
mov
ds
fdivrp
js
popf
scas
xor
adc
sbb
scas
mov
lock
aas
(bad)
outs
daa
sub
pop
sbb
pop
mov
sbb
mov
cmp
mov
lods
mov
push
mov
push
out
loop
mov
mov
popf
cmps
xlat
aam
outs
ins
dec
lahf
outs
in
retf
in
inc
sub
imul
ins
push
mov
mov
rep
or
hlt
ins
mov
jae
jl
(bad)
hlt
shl
loop
add
mov
push
int
in
jnp
outs
mov
jmp
test
add
mov
jge
fstp
mov
dec
addr16
pop
outs
popa
inc
stc
sbb
(bad)
inc
push
loopne
xchg
xchg
cwde
pop
push
or
cmp
pop
sbb
pop
or
push
call
bound
stos
xchg
call
add
sub
cmp
popf
lahf
adc
data16
jg
dec
adc
movs
mov
or
xchg
std
cmp
cmp
adc
in
sub
pop
stc
loope
loop
movs
push
inc
dec
jbe
cmc
adc
es
es
je
push
mov
call
mov
nop
xchg
std
sub
out
jmp
mov
and
or
or
test
out
ret
adc
fucomi
mov
xor
jbe
mov
adc
or
xchg
test
xchg
pop
mov
aam
dec
mov
pop
lods
bound
cmps
mov
xchg
mov
cmp
int
sar
dec
pop
pop
xor
mov
push
std
icebp
aam
sbb
iret
lahf
into
push
imul
test
ret
cdq
inc
shl
push
and
stos
inc
mov
in
dec
mov
jle
mov
or
mov
push
mul
xor
mov
out
sbb
cmp
imul
sub
jmp
mov
mov
jmp
fucomp
xchg
sbb
bound
or
(bad)
jl
inc
es
(bad)
add
ds
loope
adc
pop
ss
xchg
jno
les
cmp
pop
pop
mov
push
bound
mov
push
mov
mov
mov
outs
shr
popf
sbb
fisubr
fst
imul
bound
popf
pop
or
movs
adc
lahf
in
out
rol
xchg
and
scas
jnp
add
push
sbb
add
int
retf
ds
push
mov
imul
or
clc
loop
mov
xchg
push
jbe
dec
loope
test
adc
jb
aas
out
(bad)
fsubr
pushf
or
movs
jb
loop
jp
mov
sbb
inc
jo
pop
add
into
(bad)
sbb
dec
lods
shl
and
cmps
push
hlt
loop
push
mov
cmp
rcl
std
adc
imul
gs
cs
fcomi
dec
pushf
outs
outs
retf
dec
div
aas
fs
repz
lds
fisttp
pop
fidivr
xor
pop
and
mov
mov
xor
or
jl
call
imul
mov
outs
jae
mov
arpl
or
inc
dec
jnp
je
aam
cs
inc
cs
dec
jecxz
xchg
clc
mov
mov
push
or
lahf
dec
push
int
popa
pop
sti
add
mov
test
jae
cmps
data16
mov
mov
sub
or
(bad)
and
aas
stos
pop
cdq
mov
sub
rcl
jo
xchg
mov
push
bound
pop
movs
jmp
in
jbe
inc
into
jno
jnp
pop
neg
sub
es
shl
pop
test
sbb
stos
mov
xchg
clc
pop
in
inc
sub
mov
fcomp
gs
push
cmp
retf
or
mov
in
adc
stos
push
sub
sbb
(bad)
retf
in
push
xor
scas
jecxz
push
js
sar
ins
es
add
mov
jae
stos
mov
leave
stos
pop
and
mov
xchg
ins
xor
mov
jmp
movs
les
js
scas
hlt
add
out
ins
cmp
rcl
fdiv
and
pushf
xor
dec
inc
or
fistp
inc
push
xor
stc
and
std
jmp
mov
jne
dec
js
dec
mov
push
adc
popf
jnp
inc
dec
pop
push
adc
rcr
cwde
dec
popa
xor
fmul
ret
pop
cwde
pushf
sub
js
adc
xchg
mov
pop
pusha
cwde
push
jmp
inc
retf
sahf
ins
pop
mov
nop
fwait
mov
and
mov
lds
loop
xor
shl
mov
dec
push
in
(bad)
pop
or
push
clc
sub
cmp
retf
mov
retf
push
outs
cmp
sub
aaa
pusha
les
out
cmp
xor
fiadd
push
cmp
ins
mov
ins
mov
pop
add
lahf
adc
inc
inc
cmp
aas
fnstenv
mov
inc
and
cwde
jmp
mov
cs
fisub
mov
scas
movs
aam
shl
pop
ja
mov
mov
and
cld
mov
mov
test
and
rcr
clc
out
bound
int3
cs
outs
push
mov
stc
pushf
mov
or
rcl
jge
jbe
dec
pop
pushf
mov
sbb
jo
pusha
out
and
mov
and
inc
push
mov
mov
mov
push
push
into
(bad)
pop
repz
adc
inc
push
xor
imul
out
sub
xor
sbb
out
xchg
and
and
xchg
aas
nop
movs
mov
shl
mov
arpl
dec
adc
jle
ret
mov
sbb
pop
shl
popa
fnstsw
and
or
xchg
icebp
add
and
dec
pusha
sbb
idiv
(bad)
and
sbb
dec
call
ds
cmp
cmps
dec
jo
adc
mov
ret
mov
nop
cmp
cmp
movs
mov
mov
ficomp
mov
pop
mov
push
push
repnz
rcr
ins
sti
test
pop
lea
cs
mov
cmps
cwde
xchg
repnz
mov
sbb
ja
or
jbe
sub
mov
mov
dec
and
data16
push
(bad)
cdq
retf
repnz
jne
or
dec
mov
scas
in
mov
mov
rcl
jle
shl
test
and
jl
xor
mov
or
xor
sbb
jl
or
mov
mov
lods
push
adc
movs
xchg
jle
retf
mov
or
stc
out
rol
cmp
mov
or
inc
mov
in
mov
push
dec
jge
or
inc
add
add
xchg
sahf
fnstenv
pop
mov
xor
push
inc
jno
cmp
in
push
enter
lods
xor
pop
lods
sbb
das
daa
push
ss
and
jns
mov
add
cmp
aad
inc
and
mov
push
or
jmp
test
(bad)
dec
push
(bad)
rcr
xor
jb
(bad)
scas
jmp
xchg
push
sub
call
cmps
dec
test
jo
int
enter
mov
mov
mov
ss
push
mov
stos
inc
cs
int
cmps
mov
pop
sbb
cmp
in
and
xchg
imul
aas
sub
jno
xchg
xchg
inc
ins
pusha
push
cmps
cwde
jl
xchg
mov
nop
cmovbe
pop
loop
cld
aam
sub
dec
loop
(bad)
xchg
mov
stos
cmp
xor
dec
iret
movs
sbb
mov
scas
icebp
es
jp
in
fbld
test
retf
and
xor
rep
sbb
push
or
sti
jecxz
mov
mul
jns
cmps
test
cs
lea
sbb
and
mov
out
sbb
xchg
jb
push
iret
popa
gs
js
loope
outs
pop
adc
add
sbb
sbb
lods
cwde
xor
cdq
jl
fisub
push
jge
mov
and
push
mov
inc
cmp
mov
and
add
mov
push
jnp
mov
dec
out
push
mov
mov
sbb
xor
and
loope
popf
fmul
nop
mov
lods
cmp
fadd
sbb
sti
add
mov
pop
sbb
pusha
sbb
sar
push
test
loope
cld
pop
movs
or
das
and
in
shl
adc
jno
ins
dec
adc
hlt
cli
pusha
cmp
rol
push
sbb
call
jb
pop
inc
out
adc
jle
jo
xor
das
mov
inc
push
lahf
xchg
das
inc
mov
mov
sbb
dec
add
dec
mov
ins
movs
or
dec
ffreep
mov
je
pop
clc
add
pop
fxch
icebp
dec
and
dec
jmp
mov
ds
ja
std
mov
std
iret
adc
out
loopne
repz
sbb
lods
mov
inc
pop
fmulp
jmp
cmp
mov
call
jne
sbb
and
pop
sbb
adc
sub
cdq
es
movs
or
mov
sahf
adc
mov
jl
icebp
jg
xchg
(bad)
idiv
vsqrtpd
es
js
and
xchg
sbb
aam
sti
mov
dec
xor
mov
dec
pop
mov
inc
popa
jg
cmc
pop
mov
into
jmp
es
or
cld
outs
mov
sti
out
or
pop
test
push
out
scas
mov
repz
(bad)
pop
aam
rol
(bad)
cmp
mov
call
sub
push
std
aad
out
mov
pop
sub
mov
jecxz
and
sub
mov
xor
imul
xchg
out
cmc
inc
mov
test
add
mov
xor
into
cmp
test
out
or
dec
mov
add
test
mov
rol
jle
add
bound
fmul
shl
test
push
pop
fnstenv
fistp
std
cmp
leave
aas
fistp
push
jae
retf
cdq
ss
in
rol
aas
add
(bad)
clc
jo
mov
test
test
iret
pop
lods
imul
into
pusha
sub
les
sub
hlt
addr16
mov
int3
pop
or
mov
scas
xor
mov
mov
ins
xor
xchg
pushf
mov
popf
aad
jne
jo
or
iret
or
push
stos
and
pop
cmp
and
das
loopne
popf
adc
pop
mov
ret
(bad)
sub
pop
pop
ret
sbb
es
iret
popa
retf
sbb
in
adc
sbb
or
mov
push
rcl
cmp
mov
or
cmp
push
or
scas
addr16
pop
loopne
test
jl
and
jo
cli
test
inc
dec
add
sar
push
outs
push
cmp
push
in
in
pop
mov
mov
ja
or
fsub
sub
push
cmp
data16
xchg
jne
and
pop
aas
imul
imul
ret
mov
cmp
push
das
js
mov
xchg
xchg
add
inc
shl
fidivr
sub
mov
inc
sti
pop
jge
adc
loopne
enter
add
das
sbb
(bad)
xlat
inc
inc
mov
pushf
push
xor
jns
sub
hlt
pop
les
fwait
xor
push
cmp
call
inc
inc
sub
push
in
aaa
mov
xchg
jnp
fadd
mov
mov
fmul
inc
sub
inc
mov
push
or
adc
(bad)
jge
rcl
xor
adc
lds
and
daa
push
adc
iret
inc
jge
push
push
pop
call
nop
pop
aaa
or
sbb
xor
mov
fadd
aaa
(bad)
fnsave
sub
pop
mov
pop
(bad)
pusha
fistp
cmc
jmp
fcmovu
adc
add
xchg
loop
add
jnp
lahf
pop
add
ja
inc
frstor
sub
and
pop
and
jns
ror
loope
jle
mov
xlat
xor
mov
xchg
xchg
das
es
xor
adc
mov
popa
sbb
rol
sahf
cld
mov
pop
scas
mov
jae
out
sbb
xor
and
jecxz
std
push
mov
jae
xchg
sbb
lods
inc
loopne
mov
cli
sbb
xor
pop
sar
sbb
repnz
lds
shl
push
add
xchg
jmp
aas
cmp
sti
cmps
or
and
mov
pushf
sbb
xchg
mov
push
jbe
or
test
and
fistp
mov
out
movs
adc
jo
xor
dec
xchg
sub
push
arpl
xor
in
loope
gs
push
mov
mov
loope
mov
lahf
sahf
jns
push
dec
add
(bad)
pop
test
test
cmp
lds
std
bound
bound
fild
xchg
aaa
cmp
adc
bound
lahf
vmwrite
rcl
push
pop
dec
dec
mov
enter
and
imul
ja
pop
(bad)
fild
adc
leave
xor
repnz
dec
cmc
xor
jb
aas
xor
inc
sbb
sbb
inc
mov
dec
dec
push
jl
push
dec
pop
outs
loopne
movs
sbb
fild
jg
div
fwait
xor
out
clc
ret
rcr
sub
out
dec
popa
fiadd
sbb
jmp
fcmove
scas
scas
xlat
fld
dec
mov
or
pop
(bad)
aas
repz
jge
push
xchg
daa
mov
mov
pushf
inc
in
(bad)
cmp
inc
xor
inc
imul
jbe
cmp
addr16
push
out
add
or
imul
popa
call
cmps
sub
in
mov
push
sbb
stc
(bad)
icebp
scas
jmp
(bad)
mov
and
and
addr16
adc
(bad)
std
xor
(bad)
cmps
cwde
cdq
aam
imul
add
(bad)
sub
mov
es
cdq
rcr
mov
(bad)
scas
mov
mov
adc
jns
pop
pop
cwde
clc
sbb
rol
cmps
jmp
inc
retf
add
push
push
mov
sub
mov
inc
jbe
out
sub
ror
xor
pop
dec
inc
mov
inc
mov
retf
std
pop
adc
xchg
inc
je
(bad)
sbb
pop
shl
cmp
in
daa
mov
in
std
out
popf
and
pop
push
pushf
mov
sti
inc
or
mov
jp
cmp
mov
test
aam
leave
inc
xlat
push
push
sahf
mov
mov
retf
add
cmps
add
xor
jle
push
repnz
adc
cmc
xor
fisubr
sub
ret
xor
jo
psubusw
adc
cmp
lock
mov
pop
aam
loop
mov
(bad)
lock
adc
bound
imul
ds
mov
or
push
push
add
sbb
push
retf
jnp
pushf
adc
iret
aad
ja
push
cmp
popf
fsqrt
enter
mov
mov
fdiv
jecxz
popa
adc
outs
inc
push
jno
push
cmp
inc
neg
ja
push
aaa
mov
add
push
loopne
rcr
jecxz
les
pop
fidiv
sub
(bad)
jle
xor
fwait
test
push
adc
jle
test
imul
je
add
int3
jne
data16
push
pop
jle
inc
push
cmp
aad
xor
pop
adc
or
sub
ins
fmul
cmp
inc
mov
lea
pextrw
push
cmc
mov
lahf
xchg
loope
ja
clc
out
sub
outs
in
sar
leave
popf
shr
cmps
mov
mov
fsubr
popf
out
pop
inc
les
(bad)
call
jmp
stos
stos
push
rol
ins
mov
cld
xchg
scas
or
mov
push
cli
test
mov
pop
pop
jmp
add
add
lock
pop
cmps
pop
fisttp
sbb
sahf
stc
fstp
ja
lock
sub
sbb
inc
mov
in
imul
cmps
popa
mov
cmps
dec
in
and
movs
cmp
add
and
mov
jle
push
xchg
ret
scas
shl
test
mov
jmp
jge
push
xor
xlat
es
(bad)
gs
pusha
shl
sti
js
sbb
xor
cmp
dec
int3
adc
cld
sub
cs
dec
test
fwait
je
mov
jecxz
stos
mov
aam
mov
adc
push
lods
leave
pusha
add
xchg
aad
push
jae
jne
jmp
sub
jmp
xchg
add
or
loope
pop
add
pop
mov
pop
movs
lahf
adc
xchg
ror
movs
mov
cmp
je
inc
and
cmp
call
cmp
push
lods
jmp
jnp
pop
(bad)
aam
adc
sbb
bound
mov
add
cmp
jmp
setg
xchg
inc
adc
arpl
mov
shr
pop
jge
fisubr
mov
mov
sub
fs
inc
movs
jle
fdiv
inc
call
xor
(bad)
sbb
sub
inc
and
repz
pop
rcr
call
or
test
stc
dec
cmp
fidiv
and
ret
retf
sub
ins
cli
and
add
fimul
pop
jmp
cs
or
outs
push
dec
mov
mov
std
(bad)
jb
jecxz
ins
call
(bad)
imul
sbb
or
pop
mov
div
or
mov
jns
bound
in
retf
xchg
les
gs
test
in
imul
cmp
sub
(bad)
jmp
adc
jle
adc
mov
adc
pop
enter
sbb
jnp
dec
mov
ror
int3
jmp
in
jle
pop
into
stos
mov
push
aad
loopne
jge
sbb
inc
dec
and
add
mov
bound
lds
mov
jnp
les
mov
adc
push
push
scas
bound
sbb
retf
or
xlat
xor
mov
xor
pop
pop
push
and
sub
inc
adc
or
rcl
or
vorps
fst
mov
pop
pop
ds
sub
je
in
mov
sub
mov
pop
ror
ror
sub
test
xchg
outs
arpl
cli
pop
stc
pop
dec
out
test
cld
lods
ss
neg
bound
stos
pop
aas
test
dec
ins
lods
mov
les
and
test
dec
rol
or
jbe
cmp
imul
std
mov
sbb
cdq
pop
iret
cmc
add
cmps
or
pusha
xchg
fidivr
(bad)
cmc
xlat
mov
test
xchg
jmp
mov
scas
in
xor
pop
dec
pop
pop
push
cmc
xor
test
dec
cmp
xchg
push
dec
enter
in
xlat
sar
into
ss
mov
movs
mov
int3
mov
xor
pop
push
(bad)
mov
dec
xor
fs
and
mov
xor
ds
movs
int
movs
sbb
es
pop
push
cld
sar
add
int
add
ret
mov
adc
jmp
std
mov
sti
mov
out
(bad)
jae
neg
jb
and
movs
xchg
dec
cmp
mov
inc
in
rcl
lahf
xor
push
push
imul
jmp
mov
sub
xor
dec
lods
pop
xadd
dec
lock
mov
mov
loope
add
scas
mov
or
xchg
xchg
lds
xor
loopne
in
mov
mov
and
fs
scas
jg
stos
test
sar
ret
scas
xchg
sub
rcl
retf
and
push
loop
push
jne
iret
out
dec
cmp
add
jg
push
adc
adc
outs
xchg
mov
test
push
add
mov
add
cmp
adc
mov
mov
test
jp
cmps
jecxz
mov
inc
out
or
push
mov
pop
hlt
pop
pop
addr16
lods
fwait
cmp
dec
fsub
std
popa
fistp
shr
in
loop
mov
pusha
iret
add
repz
int3
mov
push
popa
jp
stos
jnp
push
xor
jnp
imul
stc
xchg
push
out
mov
daa
fdiv
rcr
stos
jo
ficom
out
stos
sbb
jae
ja
outs
movs
pop
xor
popf
cmc
sbb
call
loopne
mov
xchg
pop
xchg
fcos
mov
xor
push
mov
xchg
ins
xor
scas
test
cwde
inc
xchg
push
sbb
sub
adc
sub
mov
call
pop
or
aam
dec
adc
push
cwde
sub
fnsave
lds
and
sub
lods
pop
pop
jle
aas
std
mov
mov
add
call
(bad)
sub
idiv
loopne
retf
in
pushf
fucomi
loope
mov
in
shr
adc
repz
stos
or
stos
dec
jg
adc
pusha
jmp
and
fwait
pop
inc
push
(bad)
imul
jp
fisubr
jno
dec
add
call
pop
sahf
or
fwait
mov
test
or
iret
jne
dec
sbb
aas
xor
push
sub
out
xchg
cmp
mov
mov
outs
xchg
int3
inc
adc
jmp
sbb
das
sbb
sbb
nop
sub
mov
and
push
out
das
scas
adc
jge
aad
or
cli
pusha
int3
ror
sbb
pop
push
push
leave
jne
xor
jne
pop
mov
mov
push
ret
cmc
out
cmc
push
inc
dec
es
adc
inc
test
das
and
cmp
mov
or
neg
mov
inc
adc
mov
pop
adc
inc
jg
xchg
aaa
push
xor
xchg
call
xchg
fisttp
push
lods
test
ret
and
and
mov
cmc
xor
push
jne
fcom
pop
xchg
inc
test
mov
out
fsubr
and
aaa
push
daa
sbb
pusha
lea
leave
popa
in
xor
and
mov
xchg
xchg
cmp
cwde
idiv
lock
adc
sbb
dec
lock
mov
sbb
(bad)
mov
repnz
pop
jle
jno
cmps
xchg
mov
movs
ss
mov
push
pusha
mov
sub
mov
outs
in
cmp
pop
test
xchg
rsqrtps
push
push
ss
sub
retf
sar
push
xor
cmp
shl
std
(bad)
adc
rcr
repnz
test
in
cmp
cmp
enter
fs
push
xchg
stos
mov
loopne
or
test
sub
out
cmp
mov
out
pop
call
pop
dec
sub
(bad)
mov
sub
inc
scas
call
adc
gs
mov
repnz
or
retf
int3
in
xor
daa
jle
jmp
iret
(bad)
ss
das
movs
mov
clc
add
imul
jb
cmp
push
out
add
repz
mov
shl
ds
mov
jle
sub
movs
mov
shl
jo
sahf
jnp
inc
lods
mov
mov
ss
adc
mov
xchg
mov
pusha
scas
xchg
sub
imul
int3
popa
dec
(bad)
sub
add
ins
les
int3
lds
je
pop
popf
mov
fnsetpm(287
push
cld
fbld
or
pop
pop
imul
aaa
sti
or
push
mov
inc
repz
outs
xchg
push
test
mov
xchg
cmp
cmp
test
or
jnp
bound
lahf
leave
or
aaa
nop
cli
xor
jl
pop
repnz
inc
or
add
xor
or
dec
push
cdq
jnp
dec
inc
in
xlat
pushf
stos
xchg
ror
ins
mov
mov
shr
(bad)
add
push
cwde
retf
inc
dec
mov
or
jmp
loop
and
loope
in
adc
sbb
outs
and
das
xor
seto
sbb
mov
add
aas
ja
or
mov
sbb
pop
inc
push
mov
pop
cwde
aad
dec
mov
sub
fcom
in
ins
push
mov
push
mov
mov
or
pop
cmp
adc
cmp
ss
imul
scas
cld
push
cmps
movs
test
cwde
push
push
cmp
vpshaq
lds
or
ins
pushf
and
les
inc
into
mov
(bad)
mov
fmul
xor
adc
test
stos
outs
add
add
push
shl
push
sbb
mov
xor
ins
cmp
test
fnsave
xlat
and
imul
(bad)
ss
fldcw
sub
retf
and
or
sub
mov
pop
shl
dec
or
lds
cmp
xchg
push
xchg
repnz
test
lea
rol
mov
cmc
stc
inc
inc
dec
dec
sbb
mov
std
pop
shl
jne
loopne
out
and
push
lock
cli
push
inc
sub
inc
push
adc
push
in
das
cwde
or
push
hlt
mov
mov
mov
cdq
call
iret
sti
popa
jbe
shr
add
imul
add
mov
and
(bad)
mov
xchg
xchg
and
and
add
xchg
or
in
mov
cwde
inc
and
lods
push
push
push
in
xor
pop
out
lods
jmp
ret
scas
mov
loopne
fiadd
pop
les
ins
mov
pop
cmp
std
push
addr16
je
xor
ss
dec
adc
fisubr
push
cmp
xor
daa
jbe
lods
mov
lea
in
fadd
stos
les
pushf
outs
adc
xchg
rcr
mov
jnp
mov
lds
addr16
jmp
push
outs
adc
aas
mov
xchg
fcomp
mov
test
sub
add
repz
(bad)
pushf
mov
repnz
mov
sub
inc
pushf
cmp
lods
call
pop
lods
enter
loope
ja
(bad)
repnz
mov
xor
sbb
(bad)
mov
sahf
fidivr
xlat
sub
inc
and
pop
call
adc
sub
xchg
stos
fdivr
outs
mov
rol
pusha
adc
add
clc
pop
sub
call
dec
pop
pandn
das
imul
aad
je
and
push
lds
pop
stos
mov
jge
shr
call
nop
fidiv
ds
xchg
and
or
xor
lods
sub
dec
sub
adc
and
popf
pop
pop
ss
les
shl
ins
ja
cmp
stos
loopne
ds
cmc
xchg
lahf
sub
fchs
xchg
push
and
pop
pop
aad
in
or
sbb
and
xor
mov
xchg
sub
mov
daa
xor
inc
push
cs
adc
pop
or
(bad)
jmp
stos
rcr
and
push
cmps
or
outs
pop
inc
xor
imul
cmp
jb
adc
shr
inc
enter
xchg
pop
test
dec
sub
scas
xchg
movs
mov
rcl
add
adc
mov
inc
test
test
fwait
jp
add
adc
ins
mov
or
dec
scas
pushf
xor
dec
cmps
neg
fisttp
in
jle
mov
sub
jne
scas
inc
xchg
repnz
or
dec
(bad)
mov
mov
xor
test
mov
pop
push
sub
dec
retf
fbstp
gs
adc
push
xor
(bad)
cmps
cmc
(bad)
nop
or
push
xchg
imul
sahf
sar
test
cmp
fidivr
bound
or
sbb
xchg
jno
in
or
(bad)
mov
ret
mov
pushf
and
cmps
cmp
mov
mov
test
add
jmp
sbb
pop
cmps
jl
mov
(bad)
gs
add
mov
jne
cmc
inc
stc
xchg
(bad)
adc
jp
sbb
fwait
cli
inc
push
add
dec
imul
add
test
mov
push
arpl
xchg
dec
add
inc
jo
pop
popa
or
pop
mov
xchg
lock
mov
or
and
xchg
retf
sbb
sbb
or
das
mov
inc
add
push
retf
add
pop
add
in
and
stos
sub
xlat
jmp
or
sbb
scas
dec
cdq
mov
jge
rcl
or
mov
mov
mov
jl
xor
call
dec
pop
dec
jnp
imul
ja
enter
in
stos
push
imul
(bad)
cmc
mov
mov
ds
pop
mov
(bad)
call
iret
dec
ret
jno
int3
dec
outs
push
and
sbb
adc
push
loopne
cmp
stos
(bad)
pop
xlat
push
lods
lfs
inc
cdq
call
sar
imul
push
cmp
loope
fs
and
test
add
dec
or
pop
out
aaa
outs
(bad)
jg
jnp
test
out
arpl
add
jmp
frstor
lods
and
arpl
mov
jl
fsub
repnz
sub
(bad)
pop
(bad)
mov
cmps
inc
xor
les
outs
cli
xor
xor
pusha
out
push
cmp
sub
pop
sub
and
scas
das
cwde
xor
dec
aaa
push
lods
dec
int3
xchg
push
cwde
add
pop
add
or
jnp
xor
hlt
pusha
xchg
out
mov
int3
and
add
cmp
scas
mov
fisubr
pop
or
jle
int3
xor
stc
add
adc
dec
xchg
lahf
fstp
aad
adc
dec
jl
sub
nop
jns
jnp
dec
out
adc
ror
lods
and
test
inc
or
fsincos
xchg
sub
push
es
sub
pop
mov
jns
mov
cdq
in
mov
int3
jae
pop
add
retf
neg
in
xchg
stos
cwde
scas
in
sahf
loopne
(bad)
retf
mov
fdivp
lds
and
sbb
dec
es
inc
ins
iret
lock
inc
mov
sar
retf
push
cwde
sbb
pop
out
outs
ds
mov
inc
xchg
mov
mov
test
inc
je
pop
pop
mov
cmp
adc
and
pop
aad
mov
and
add
push
mov
cmp
out
ds
or
lods
test
outs
xchg
push
cdq
jmp
sbb
xor
sub
xor
mov
stos
cmp
mov
out
int3
std
sar
in
jge
fld
repz
mov
pop
retf
jmp
icebp
xlat
jge
adc
(bad)
xor
mov
mov
cmp
shl
mov
jbe
xchg
movs
arpl
xor
pop
sbb
pusha
scas
gs
cmovp
push
data16
out
xchg
pop
pop
loope
fsub
sbb
xor
jmp
xlat
fimul
out
fwait
gs
icebp
aam
in
shr
push
pop
sbb
test
fld
mov
xchg
jnp
xchg
(bad)
xchg
sbb
sahf
test
add
test
cld
mov
arpl
push
push
fisttp
adc
enter
push
cmp
inc
out
cwde
movs
cmp
mov
push
loopne
cmp
mov
mov
add
jmp
arpl
mov
or
sbb
pop
test
scas
out
not
jl
call
retf
rcl
mov
(bad)
aaa
dec
call
test
cs
and
sbb
lahf
cmps
push
push
push
cmp
push
in
jp
(bad)
push
dec
daa
or
add
out
rcl
popa
jecxz
jne
cwde
pop
(bad)
pop
push
add
and
scas
nop
inc
in
outs
pop
adc
dec
fdivr
mov
movs
pop
mov
jmp
jno
fist
mov
push
push
jns
lods
dec
sti
dec
icebp
iret
jb
lods
add
jmp
push
sub
pushf
mov
cld
dec
bound
fild
inc
outs
push
nop
test
(bad)
imul
xor
popa
mov
lock
ror
push
(bad)
(bad)
mov
inc
das
je
xchg
xor
lds
cld
(bad)
repz
dec
mov
jbe
fstp
das
xchg
or
mov
repz
loopne
or
and
in
(bad)
out
push
(bad)
imul
dec
or
cmp
in
cmc
mov
jmp
ja
adc
xor
push
adc
cli
mov
inc
rcr
mov
xchg
adc
jle
inc
test
(bad)
adc
cmp
pop
movs
inc
pop
xchg
mov
sti
push
(bad)
int3
dec
jb
fidiv
mov
(bad)
popf
add
stos
aam
call
outs
mov
retf
push
pop
ja
dec
dec
xor
add
stc
test
sub
jbe
je
aam
cli
jl
arpl
mov
fsubr
pop
jns
xchg
sbb
xchg
lahf
mov
mov
ss
sub
xchg
sbb
mov
inc
loope
aas
cmp
adc
daa
test
leave
mov
sub
pop
imul
inc
cli
push
cmps
cmp
dec
(bad)
ja
repz
loopne
loopne
mov
retf
loopne
bound
mov
mov
inc
push
mov
and
call
es
outs
les
push
pop
hlt
push
cmp
push
mov
pusha
jle
and
lock
cmp
popa
sar
cmp
bnd
add
pop
dec
xor
test
pop
adc
xchg
pop
cmp
shrd
mov
mov
in
out
inc
dec
shl
xor
enter
jbe
sbb
push
jb
sbb
jae
jnp
scas
jbe
(bad)
aaa
xor
test
pushf
iret
adc
arpl
mov
pop
imul
movs
gs
cmc
loop
xor
add
in
pop
ins
mov
mov
jne
outs
xchg
mov
sub
or
fisub
xor
sub
push
dec
cmps
push
sub
pusha
or
ins
cmp
enter
jns
stos
xchg
mov
mov
jecxz
test
sub
jnp
dec
inc
adc
sti
cwde
xor
and
adc
and
mov
cwde
adc
and
xor
push
xchg
add
icebp
mov
int
dec
sub
int3
call
jae
adc
sbb
adc
idiv
or
jae
ret
dec
mov
inc
mov
jp
movs
add
push
jmp
push
cmps
dec
out
sub
adc
sbb
mov
xchg
push
cld
cmp
adc
inc
mov
mov
jl
data16
out
sub
(bad)
sbb
jg
mov
mov
sti
push
xor
ficom
sbb
mov
es
xchg
push
leave
jbe
pop
test
sub
(bad)
jl
sbb
pmuludq
sti
(bad)
xlat
jns
sbb
add
pusha
in
xchg
adc
and
ins
pop
adc
cmps
scas
sub
(bad)
mov
por
and
pop
mov
cmc
sub
pop
dec
or
add
in
outs
mov
and
aas
shl
call
shl
loop
imul
mov
xchg
or
lahf
adc
inc
mov
mov
inc
fwait
adc
jecxz
and
das
in
sbb
inc
cmps
ficom
fisttp
cmp
xchg
cmps
cdq
lods
nop
xchg
aam
xchg
or
pop
test
les
lods
push
or
fmul
cmp
fimul
add
sar
pop
nop
loope
loope
mov
mov
lea
pop
mov
and
mov
lea
adc
or
and
or
mov
mov
int3
ret
loope
not
cmp
xor
fdiv
cmps
fadd
sti
add
test
shl
ror
sbb
scas
mov
daa
fld
mov
cwde
aas
cmp
pop
dec
js
jmp
(bad)
cs
dec
neg
stc
pop
xchg
or
sti
cld
popa
sbb
mov
jge
pop
or
xor
lea
ins
int
mov
push
or
sub
xor
pop
dec
je
xchg
rcr
fdivrp
inc
fwait
outs
cmps
lock
jnp
sub
mov
out
pushf
pop
ins
add
popf
xchg
mov
xchg
jbe
adc
mov
and
out
sti
push
iret
jecxz
mov
mov
xor
adc
push
sub
fucomip
sti
adc
shl
(bad)
pop
or
test
and
dec
pop
dec
stos
out
cdq
fmul
or
stos
retf
pop
sbb
adc
nop
sbb
leave
adc
iret
int
push
mov
and
mov
in
xchg
fwait
mov
and
xchg
in
push
sub
test
fadd
sbb
sub
movs
inc
and
push
push
cwde
inc
ror
test
adc
push
mov
xchg
or
pop
cmp
jo
xchg
call
daa
pop
xor
xchg
lods
es
in
sahf
rep
pusha
fmul
pop
push
xchg
ret
retf
out
or
xchg
pop
mov
inc
xchg
add
retf
aas
in
es
or
xor
xchg
mov
lods
pop
or
in
aaa
mov
inc
cmp
pop
outs
jns
sti
xchg
pop
adc
inc
xchg
ins
pop
mov
cmc
mov
sbb
jne
lock
fadd
mov
outs
(bad)
fisubr
jl
push
test
pop
mov
out
cmps
rol
int3
aam
sub
dec
or
jb
das
inc
mov
je
mov
mov
sti
jge
jp
add
test
sub
xor
ja
push
sub
mov
inc
dec
inc
add
dec
popa
pop
(bad)
in
fisttp
cli
ret
dec
les
aaa
adc
mov
(bad)
leave
cmp
fs
sub
ja
xor
xchg
and
add
push
cmp
neg
or
aaa
jbe
std
test
imul
jmp
fldcw
lods
test
inc
or
xchg
out
das
bound
dec
leave
mov
movs
or
in
jmp
cmps
jo
or
sbb
mov
push
dec
push
jno
sbb
std
xlat
push
pop
out
jl
mov
aad
sbb
push
sub
sbb
mov
lahf
(bad)
enter
inc
call
fwait
inc
push
xor
retf
ss
adc
pop
pop
das
ret
xchg
movs
stc
push
rol
and
inc
xchg
lahf
or
push
iret
scas
nop
(bad)
jmp
scas
shr
pop
mov
xchg
or
xchg
std
jecxz
mov
sbb
and
mov
cmp
sti
enter
rcr
and
mov
fldlg2
mov
jbe
in
icebp
daa
repz
rcl
and
int3
mov
jns
sbb
xchg
fadd
cld
jg
xchg
jmp
fimul
jb
sar
push
ins
es
hlt
mov
dec
pushf
push
adc
push
mov
mov
hlt
xor
jo
xchg
les
mov
loop
ret
push
jge
jne
daa
mov
retf
xchg
push
sbb
(bad)
or
stos
xchg
push
in
mov
inc
in
and
xor
aam
mov
fucomp
stos
fild
push
sbb
or
sub
(bad)
mov
jp
adc
imul
sbb
jl
and
or
sub
out
jae
(bad)
mov
push
inc
mov
out
and
aas
mov
and
add
in
or
add
pop
aad
lds
mov
out
pop
sbb
je
push
xchg
pop
and
mov
jmp
loop
sub
popf
push
pop
push
and
aam
dec
jo
icebp
and
mov
mov
cwde
scas
hlt
loop
add
xchg
add
popf
rol
shr
rol
inc
lods
mov
jmp
xabort
jb
out
stos
js
jp
inc
mov
inc
test
push
(bad)
or
jno
jl
dec
rol
mov
retf
stos
jne
mov
sub
cli
aam
cmp
xor
jp
outs
jb
inc
shl
mov
jne
mov
mov
inc
pushf
adc
xor
and
push
fs
xor
(bad)
in
ss
xor
outs
jmp
cdq
xchg
out
sub
dec
ret
mov
inc
and
into
fistp
xchg
mov
and
jae
mov
fldcw
or
xor
fs
xchg
int3
sti
cs
push
cmc
lds
cmp
das
out
call
and
push
movs
mov
inc
imul
fidivr
(bad)
shl
addr16
aam
mov
aas
mov
in
xchg
in
xor
xor
enter
les
or
dec
movs
push
cmp
ret
xor
mul
cmp
mov
pop
aad
movs
sbb
push
push
sbb
sahf
add
and
iret
stc
les
cmp
jne
sub
adc
outs
and
sti
bound
mov
and
sti
dec
out
stos
(bad)
cmps
mov
mov
or
retf
sbb
and
cld
mov
daa
repz
mov
out
in
repnz
out
fld
or
mov
dec
call
std
hlt
mov
mov
out
add
xor
(bad)
retf
jno
push
fs
call
cld
push
aam
(bad)
out
pop
mov
test
daa
lea
sbb
movs
adc
cmps
ret
or
sub
test
dec
inc
push
jmp
push
and
push
mov
jbe
ficom
in
pop
loope
lock
pop
jmp
les
push
sti
sub
mov
push
imul
mov
sbb
fwait
jne
ins
push
ds
or
xor
mov
xor
in
xor
adc
aad
xchg
xchg
mov
sbb
jge
ror
mov
fwait
rol
xchg
pop
xchg
lods
inc
or
shr
push
sbb
cmp
mov
arpl
ret
sub
jmp
mov
xor
pushf
jle
cmps
or
jmp
setae
mov
cmp
mov
and
mov
mov
inc
add
xchg
add
fldcw
lea
retf
fst
push
add
pop
int3
sub
jmp
mov
ret
rcl
popf
and
pop
jno
fiadd
push
add
inc
push
addr16
add
fcomip
sub
xor
pop
sub
movs
(bad)
iret
stos
loop
pop
outs
pushf
bound
mov
or
ja
outs
cld
sti
lods
xor
lea
fs
mov
sub
xlat
hlt
pop
and
adc
mov
push
mov
push
in
retf
xchg
fdivr
inc
sbb
not
aas
das
mov
cmp
clc
mov
xor
xor
adc
pop
movs
out
or
in
push
ficom
(bad)
push
mov
sbb
ja
arpl
jns
or
mov
outs
loopne
test
ficom
ds
and
lods
xor
repnz
idiv
dec
retf
aaa
xchg
pop
or
pop
(bad)
xor
int
adc
xor
add
pop
mov
and
mov
mov
(bad)
not
adc
lea
fs
std
mov
pop
pushf
or
adc
sahf
pop
movs
test
cmp
jmp
aas
ja
and
call
imul
inc
adc
lock
cmps
repz
sahf
pop
mov
stc
cli
xor
mov
aad
out
pop
lds
or
and
into
adc
pop
jae
mul
test
je
cmp
rcl
cld
pop
lahf
xor
fbstp
adc
sub
cli
lods
mov
iret
mov
push
sbb
xchg
stos
jle
mov
inc
pop
inc
sbb
cmc
dec
jmp
and
mov
add
test
mov
mov
and
in
pop
jmp
jecxz
adc
mov
inc
aam
pop
imul
scas
mov
mov
sbb
icebp
mov
adc
mov
xchg
sub
cmps
popa
sti
sub
scas
fs
and
or
outs
add
arpl
adc
mov
lds
xor
pusha
fs
mov
pop
xchg
xor
fild
sahf
sbb
mov
popf
mov
dec
jg
mov
or
push
mov
in
dec
pop
jle
pushf
loope
leave
and
popf
fdivr
test
push
and
daa
add
xchg
pop
stos
push
pushf
push
call
or
xchg
fdivr
mov
fisubr
movs
add
mov
sbb
loopne
arpl
mov
iret
cdq
shl
mov
sub
jae
xchg
pop
test
aas
clc
inc
fnstsw
retf
mov
xor
jl
fsubr
mov
pushf
retf
mov
mov
mov
mul
mov
or
jge
out
lds
inc
jmp
mov
cwde
xor
jl
mov
in
out
xchg
ror
mov
or
dec
sub
iret
mov
adc
push
ins
mov
and
cwde
adc
(bad)
(bad)
xchg
shr
mov
mov
nop
pop
xlat
mov
mov
xchg
clc
lahf
pop
je
adc
mov
out
adc
shl
mov
mov
cs
es
sub
push
jg
lods
jmp
gs
dec
cli
push
pop
test
fadd
ins
mov
int
popf
pop
push
pop
sub
add
mov
pop
xlat
mov
jmp
retf
mul
stc
adc
inc
jle
add
or
cmp
pop
(bad)
in
jne
dec
outs
pop
pop
mov
sbb
push
call
fsubr
mov
and
jge
sbb
cmp
jno
retf
pop
mov
retf
hlt
cmp
push
mov
outs
cmp
push
sub
pushf
stos
xor
mov
js
cmovs
xchg
loopne
dec
scas
(bad)
jae
sbb
xchg
sub
addr16
test
jnp
in
or
dec
(bad)
xor
xor
inc
imul
jnp
stos
rcl
addr16
push
sub
mov
(bad)
ror
cmp
cmp
(bad)
cld
loope
xchg
out
mov
fidiv
or
(bad)
inc
push
iret
popa
jmp
or
fcom
mov
jle
xchg
push
ret
lods
popf
sub
es
inc
js
es
aaa
jnp
daa
sbb
scas
arpl
add
(bad)
ss
sbb
mov
loop
xor
pusha
scas
loope
cmp
outs
cli
push
retf
imul
out
jb
in
cdq
test
ror
xchg
and
stc
adc
and
push
repnz
mov
xor
mov
or
mov
js
aam
sub
mov
ss
adc
jbe
add
mov
sub
loope
push
mov
sub
sub
imul
rol
cmp
dec
pushf
and
in
xchg
in
jp
aam
sbb
cli
inc
sbb
push
xchg
movs
out
push
jne
(bad)
add
fwait
cmp
call
rcr
xchg
inc
bound
sub
xchg
sbb
cmc
mov
mov
jnp
and
(bad)
or
aaa
jae
or
scas
scas
mov
call
jb
imul
push
cmps
(bad)
mov
or
inc
mov
ins
call
jo
shl
neg
addr16
scas
jne
es
sbb
dec
sbb
jmp
xor
add
sbb
loop
pop
in
mov
ret
daa
ret
lods
sub
mov
add
in
cmp
cmp
std
sub
push
out
dec
mov
int3
popf
(bad)
cmp
stos
or
aad
shr
aad
aam
fisttp
cmc
leave
jb
inc
xor
movs
inc
push
push
shl
movs
or
mov
mov
jb
out
pop
fwait
cwde
ins
mov
xchg
jmp
xchg
fwait
arpl
adc
jmp
shl
scas
mov
fsubr
push
push
pop
into
cdq
dec
jmp
call
pusha
push
mov
stos
jo
and
sbb
gs
loop
int3
xchg
push
out
sub
(bad)
mov
enter
das
or
pop
retf
jge
mov
dec
sbb
test
cmps
xchg
mov
(bad)
int3
cmp
pop
xor
jmp
pop
ficomp
pop
je
sbb
xchg
xor
loope
dec
int
cmp
jbe
daa
rcl
repnz
mov
mov
xchg
cmp
gs
sbb
mov
mov
out
call
mov
pop
fisttp
dec
in
mov
sub
add
or
les
sbb
ret
cwde
lea
imul
lea
aad
lds
and
gs
xlat
lahf
push
pop
mov
(bad)
mov
add
cmp
xchg
in
jno
inc
dec
xchg
pop
daa
add
and
daa
cmc
ja
xchg
xor
sbb
mov
sar
lock
(bad)
(bad)
loop
mov
int3
jne
mov
fwait
xor
fldenv
mov
xchg
sar
push
aad
cmp
mov
xchg
jecxz
add
pusha
jmp
loopne
data16
pop
inc
clts
add
sbb
stos
pop
dec
sti
in
add
sub
retf
fs
cmps
sar
clc
push
arpl
fimul
push
mov
pop
xchg
sbb
sbb
aaa
or
xchg
push
out
stos
add
inc
push
push
jno
push
xor
pop
xchg
ret
std
xchg
pop
push
in
mov
in
in
je
xor
sbb
std
shr
in
div
stos
inc
popf
mov
repz
sbb
mov
je
lods
xchg
xchg
outs
mov
lahf
jg
pushf
das
inc
xchg
or
icebp
or
mov
add
pop
dec
cdq
pop
sbb
adc
or
push
inc
pop
test
pop
js
ret
inc
inc
push
inc
rcl
inc
sub
jne
std
mov
test
(bad)
ret
xchg
xchg
sbb
adc
add
sbb
mov
rol
ins
adc
ins
loop
retf
repz
xchg
imul
lods
xchg
call
cmp
jne
adc
sub
outs
ret
jo
(bad)
clc
mov
lds
in
sub
fisttp
sbb
aam
in
es
sub
add
dec
mov
push
xchg
icebp
data16
lock
mov
push
adc
and
bound
ror
idiv
lea
cmp
test
ins
je
jmp
mov
jl
adc
dec
xor
cmp
jbe
sub
adc
cmp
jp
jmp
(bad)
add
cmp
(bad)
jne
or
add
dec
in
cmc
push
inc
mov
icebp
aad
cmp
test
fist
ret
dec
jmp
pusha
mov
sbb
or
and
sbb
ins
mov
mov
jecxz
loope
or
or
mov
add
lock
pop
or
ror
loopne
in
inc
or
mov
xor
popf
mov
dec
or
cmc
popf
or
mov
pop
ja
inc
cdq
or
push
cdq
ja
repz
iret
mov
or
dec
and
xchg
lahf
mov
rcr
aam
xor
cld
test
(bad)
rcr
add
mov
xor
pop
or
icebp
xchg
jg
mov
jle
sbb
pop
xor
loop
and
adc
mov
iret
sbb
outs
xchg
es
aaa
lahf
sbb
ja
js
cs
adc
sub
or
call
cmps
les
fild
clc
pop
sub
test
xchg
lods
test
or
dec
inc
add
pop
js
inc
stc
cmp
call
and
push
mov
sub
int
(bad)
lahf
leave
test
fidivr
call
mov
(bad)
fnstsw
imul
pop
and
gs
popf
mov
imul
or
pop
sbb
ins
(bad)
aad
les
ja
adc
or
dec
pop
mov
sbb
les
pop
int3
mov
mov
pop
dec
ja
xor
into
outs
jl
shr
nop
aas
in
sub
stos
inc
std
dec
or
jae
icebp
aam
pop
mov
jne
ret
jns
mov
scas
xchg
xchg
and
mov
ins
and
daa
sub
and
xor
adc
mov
lock
jmp
sbb
sahf
retf
shl
test
xor
inc
sti
jl
and
add
pop
bound
in
ss
in
cld
or
les
push
ret
aas
idiv
inc
fcmovnu
ficom
(bad)
adc
adc
inc
or
retf
adc
mov
jmp
or
(bad)
mov
daa
repnz
mov
bound
adc
inc
pop
fstp
dec
push
or
dec
mov
push
iret
(bad)
mov
stc
stc
xor
or
stos
ds
pop
aad
enter
mov
enter
fidivr
clc
idiv
xor
cdq
mov
lock
dec
mov
or
fs
dec
rol
mov
xor
fisttp
cmp
ja
stos
pop
stos
movs
cmp
(bad)
mov
push
dec
ins
mov
iret
movs
mov
xchg
and
and
mov
in
pop
mov
sbb
int
movs
pop
or
pop
scas
jge
adc
xlat
sti
sub
ss
das
jb
retf
fild
ret
cmc
sbb
mov
test
inc
cwde
mov
and
push
div
icebp
ss
icebp
(bad)
fnstcw
inc
sub
ins
mov
shl
int
leave
push
(bad)
xor
jg
pop
shr
push
fadd
in
outs
out
jo
sub
jb
adc
scas
icebp
xchg
mov
mov
pushf
or
adc
es
fidiv
mov
cs
mov
pop
sar
mov
pop
add
ret
mov
fmul
mov
add
shl
sub
inc
retf
ret
lds
shld
mov
adc
xlat
and
mul
out
sub
mov
ret
std
ss
sbb
adc
out
mov
jae
inc
ss
pushf
lahf
jmp
js
sbb
jns
mov
aas
loop
lods
mov
ds
cli
icebp
popa
mov
fsubp
std
sbb
cmp
fisubr
cs
or
adc
cmp
fistp
sub
and
pop
es
pushf
sub
pop
test
jle
fndisi(8087
sub
aam
pusha
xchg
pusha
inc
or
mov
loopne
xor
loopne
ins
rcl
inc
es
loopne
xchg
sub
daa
xlat
int3
sar
aad
lahf
sbb
sbb
xchg
outs
pushf
arpl
imul
add
cmp
add
pushf
add
mov
mov
or
out
or
mov
push
xchg
or
shl
jns
cs
cli
(bad)
das
add
fbstp
ss
sub
pop
add
les
pop
mov
inc
inc
ds
xor
adc
mov
inc
fstp
outs
cmp
in
jns
inc
push
test
dec
pop
xlat
mov
imul
es
sbb
jle
loop
mov
aam
stos
in
cmp
mov
inc
or
pop
sar
inc
mov
jle
clc
mov
xor
aad
data16
mov
in
mov
adc
sub
shl
jo
push
inc
pop
lods
pop
xchg
lods
call
lods
push
(bad)
movs
pop
adc
(bad)
fadd
lods
cmp
aas
push
adc
adc
ror
dec
test
jmp
xchg
jo
mov
or
sub
mov
cld
std
aad
and
xchg
jmp
and
cmc
in
enter
xor
loopne
imul
mov
pop
xchg
sbb
cs
jne
fwait
(bad)
push
test
xor
mov
sar
inc
test
mov
and
xchg
cmp
loope
ret
pop
sahf
aam
sub
cmps
fisttp
dec
pop
retf
mov
(bad)
mov
dec
arpl
dec
pusha
cmp
pop
xor
push
lods
stc
jg
mov
(bad)
dec
in
lock
call
dec
jo
inc
jmp
sub
packuswb
and
sub
pop
xchg
inc
(bad)
fiadd
cmp
ja
pop
sub
pop
outs
cld
xchg
in
js
push
stc
xchg
in
push
jmp
mov
fwait
jnp
inc
(bad)
mov
push
push
sbb
lea
jmp
ret
adc
mov
mov
cmp
mov
cmp
hlt
(bad)
jo
fst
div
sub
loope
pop
mov
add
adc
xor
mov
add
and
sub
stc
test
sbb
test
ins
in
cmps
or
add
xor
ds
cli
jle
jle
fmul
scas
cld
imul
mov
push
adc
adc
xchg
adc
ror
stos
jecxz
inc
cs
leave
sbb
call
pop
cmps
loopne
fcomp
mov
or
push
xor
imul
dec
push
scas
add
arpl
mov
xor
and
dec
ja
mov
push
add
lods
mov
sti
arpl
sbb
jp
movs
or
jp
mov
xchg
das
lods
pop
dec
in
jmp
jl
sahf
xchg
es
imul
out
sub
daa
pop
scas
mov
daa
add
push
or
std
push
movs
xchg
jmp
mov
xchg
inc
adc
stc
(bad)
popa
cmp
adc
(bad)
enter
xor
(bad)
jle
xchg
pop
daa
sbb
xor
clc
pop
or
dec
inc
jne
arpl
adc
(bad)
rol
add
test
ds
mov
ds
fs
cmp
clc
in
adc
fst
xchg
pop
aaa
xor
xor
jmp
stc
xchg
dec
pushf
pop
pop
inc
mov
in
retf
and
jnp
addr16
sbb
xchg
cwde
sbb
push
loopne
test
nop
lahf
(bad)
cmp
repnz
pop
inc
pop
fldcw
adc
xchg
xchg
push
(bad)
xor
div
jmp
push
inc
rcr
pushf
mov
add
fbstp
repnz
cmp
retf
push
(bad)
js
xchg
movs
or
adc
lds
jb
mov
scas
lock
fdivr
sbb
aad
sub
in
pop
enter
or
fs
sbb
pushf
inc
add
add
sbb
cli
sar
cmp
xchg
xchg
sub
into
(bad)
cld
les
std
out
mov
test
retf
add
dec
cdq
and
sbb
mov
dec
sub
out
lds
fwait
and
mov
lock
mov
repz
and
dec
push
push
jbe
ds
add
push
cli
adc
repnz
xor
or
mov
adc
repnz
sbb
mov
pop
push
not
inc
(bad)
sub
loopne
dec
(bad)
loopne
dec
stos
push
inc
hlt
lahf
jbe
sti
pop
dec
inc
push
loope
xor
test
mov
cli
adc
mov
fidiv
sub
jb
dec
data16
pop
adc
or
add
loope
pusha
imul
cmp
xchg
stc
jo
mov
scas
arpl
test
mov
sub
adc
in
(bad)
es
add
iret
fsub
jae
jp
imul
jecxz
xlat
jmp
movs
jge
or
mov
ja
push
shr
xor
sbb
bound
sub
(bad)
adc
std
mov
mov
mov
clc
jl
pop
mov
xor
cmc
outs
lods
add
sbb
sahf
(bad)
ds
stc
fadd
leave
mov
pop
xchg
mov
fstp
sub
out
mov
aaa
scas
push
pop
cmp
xchg
daa
test
dec
push
mov
in
jg
sub
rol
loopne
test
ins
dec
(bad)
test
adc
mov
mov
stos
(bad)
std
and
repnz
es
es
cli
out
clc
sbb
test
and
mov
shl
xchg
pushf
imul
shr
pop
cmp
jle
dec
mov
dec
sbb
(bad)
(bad)
mov
ja
dec
call
gs
mov
sbb
or
clc
imul
aam
shr
(bad)
cmp
mov
lods
hlt
hlt
gs
inc
lock
fwait
mov
push
shl
dec
adc
cmp
aas
xor
ins
and
cmp
rsm
inc
(bad)
sar
adc
pop
js
xchg
add
and
jmp
push
js
mul
and
dec
repz
or
add
lods
mov
popa
adc
mov
clc
mov
mov
shr
cmps
lods
jns
pop
jne
dec
mov
push
and
sub
jns
push
sub
sar
movs
stos
and
lods
xor
and
jns
pop
cmp
and
aaa
dec
out
bound
lock
outs
jbe
and
int
add
add
fiadd
ror
call
popa
ret
fst
cmps
lods
cmp
enter
aad
add
test
hlt
cmp
push
call
cmp
push
popa
xchg
out
(bad)
aad
cmps
mov
sub
ins
adc
add
fld
pop
or
add
(bad)
xlat
jecxz
xlat
or
mov
pop
in
aas
add
clc
sub
ins
pop
adc
xchg
mov
jl
outs
jp
mov
pop
inc
jb
dec
and
push
mov
xchg
loop
push
(bad)
outs
lahf
jne
dec
fst
push
push
cmp
dec
(bad)
call
xor
jae
sub
dec
sub
or
in
inc
cmp
add
mov
leave
std
mov
sahf
mov
repz
es
loope
sbb
mov
fwait
bound
mov
push
push
cld
and
mov
shl
aam
repz
cli
cld
sbb
jmp
push
stc
ficomp
push
sbb
sbb
int
mov
add
mov
and
sub
int3
aad
sahf
call
cmp
cmps
and
dec
inc
xchg
popf
push
jecxz
in
cmp
add
aad
or
cmps
xor
arpl
mov
inc
call
mov
push
jae
sbb
ficom
push
leave
pop
mov
ror
and
push
sbb
cli
and
in
mov
in
cmp
loop
push
inc
stos
push
mov
aam
ret
mov
ins
clc
loop
mov
pop
push
cdq
add
xlat
lods
mov
push
or
bound
pusha
(bad)
std
cdq
(bad)
push
ror
in
pushf
movs
nop
sbb
add
mov
pop
dec
js
clc
push
pop
aas
ret
stos
mov
jo
fiadd
cmps
rol
dec
mov
(bad)
fsubr
adc
push
adc
add
movs
dec
cdq
mov
(bad)
iret
test
cs
(bad)
push
push
xor
push
mov
xlat
mov
pop
ds
dec
popa
dec
das
movs
int3
(bad)
in
dec
xchg
leave
(bad)
pop
(bad)
push
dec
jl
bound
cmp
rcl
push
stos
test
sbb
mov
pushf
scas
mov
xor
(bad)
xor
xlat
in
adc
sub
(bad)
rol
cmps
pushf
adc
pop
icebp
pop
cmps
imul
jo
adc
jmp
not
mov
lock
fcom
xor
(bad)
retf
mov
jge
shl
je
adc
sbb
sbb
or
inc
and
sbb
add
pushf
mov
fs
mov
call
clc
jmp
sub
pop
pop
dec
pop
in
mov
dec
stc
popf
push
mov
xor
push
push
scas
push
lahf
xor
jo
and
loopne
push
popa
or
jg
xlat
or
das
enter
adc
and
imul
xor
stos
pop
xor
sbb
pop
imul
cmp
in
retf
ficomp
fsub
out
aad
ins
mov
or
repz
bound
jge
loop
test
mov
inc
aas
sbb
jbe
jecxz
xchg
es
pop
push
mov
sbb
adc
push
out
sti
pop
xor
pop
lods
outs
xchg
pop
(bad)
aam
adc
sbb
cli
push
inc
test
cmp
jl
inc
cmp
cmp
pop
scas
(bad)
sbb
movs
pop
and
rcr
movs
push
outs
es
aas
cmps
mov
sub
xchg
add
xor
jl
cmp
int
or
imul
jle
cmp
fs
xchg
and
xor
adc
sbb
movs
pop
lds
lods
js
rcr
rcr
(bad)
in
lock
sbb
and
pop
mov
push
ss
xor
xor
dec
mov
dec
and
call
test
(bad)
js
cli
push
int
les
add
add
adc
out
xchg
adc
retf
adc
xor
xor
nop
nop
leave
mov
enter
ss
ror
retf
push
sbb
lods
mov
sbb
add
inc
push
cmp
or
mov
fldcw
pop
loope
push
jg
mov
mov
call
dec
(bad)
xor
push
mov
jo
jne
or
or
pop
and
shl
add
ret
in
pop
test
aaa
out
repz
mov
test
imul
xchg
or
cmp
pop
jb
loope
neg
mov
xor
mov
jo
fsubrp
sbb
fimul
or
xor
mov
or
daa
dec
xor
jb
iret
mov
pop
pop
js
sub
fistp
mul
inc
xchg
ret
mov
add
aad
mov
ret
jmp
add
stc
cmp
jle
ror
test
sbb
movs
cmc
xchg
push
loop
test
and
pop
mov
aad
or
pop
out
test
add
mov
cld
sub
xor
in
xchg
stc
cmp
and
and
cmp
iret
push
or
fst
push
jecxz
dec
dec
jbe
sub
adc
add
mov
fisttp
in
adc
mov
cwde
ror
or
lea
inc
jg
jns
pop
cmps
jb
call
imul
aas
push
and
xor
loop
call
dec
xchg
ja
cdq
pop
out
ins
fidivr
jbe
cmp
push
adc
sub
pop
dec
and
pop
ret
sbb
cmps
jno
ja
outs
or
std
pop
ins
xchg
mov
dec
mov
sub
popf
call
cli
test
and
xlat
fist
push
pop
daa
aad
jmp
arpl
mov
mov
xlat
(bad)
ret
test
icebp
sub
pop
int3
les
mov
mov
or
retf
lock
mov
rcr
lea
outs
or
cmp
aad
pop
std
mov
into
sbb
mov
rol
mov
loop
outs
adc
repz
cmps
jo
cwde
mov
jge
(bad)
imul
jo
bound
clc
sbb
pop
sbb
into
inc
sbb
push
(bad)
push
in
addr16
and
sbb
pop
in
ror
push
xor
mov
popf
jl
inc
pop
repnz
ret
xchg
jno
loopne
ret
sub
mov
sbb
aas
pop
addr16
push
or
fimul
dec
mov
adc
mov
adc
cmp
rep
mov
mov
inc
out
and
mov
fidiv
jne
sbb
hlt
hlt
in
jae
push
xchg
in
mov
addr16
adc
cmp
pop
out
in
sub
jge
inc
stos
(bad)
js
not
jg
jp
or
js
inc
sub
shl
mov
inc
ror
adc
mov
js
nop
jne
adc
cdq
out
xlat
es
stos
pop
rcr
daa
inc
or
in
aas
xor
push
adc
mov
dec
retf
pop
lds
or
cmp
push
mov
mov
jle
xchg
inc
daa
movs
jo
ret
ins
popa
(bad)
icebp
xlat
in
popa
jecxz
jecxz
ss
stc
adc
loope
xchg
dec
ins
in
test
push
(bad)
call
add
dec
dec
test
inc
pop
add
add
fidiv
cs
sub
aam
lods
sub
daa
daa
pop
aam
adc
(bad)
rcl
push
sbb
push
jg
pop
lahf
popf
aad
rcr
stos
pop
addr16
add
and
adc
jne
xchg
call
in
pushf
loopne
mov
cwde
xchg
or
dec
jno
cmp
js
add
dec
push
fild
scas
or
xchg
mov
aam
outs
enter
(bad)
adc
out
fild
xor
sbb
xchg
clc
retf
mov
adc
test
sahf
iret
jecxz
js
jne
imul
sbb
mov
jmp
aad
inc
inc
lahf
mov
jmp
sub
loope
int3
in
(bad)
pop
ret
xor
mov
test
adc
add
out
mov
dec
es
lods
call
or
lock
(bad)
loope
std
(bad)
js
dec
pop
outs
and
or
jo
pop
dec
push
pop
add
outs
pop
movs
loop
inc
or
mov
sub
mov
dec
clc
shl
jle
pop
loopne
(bad)
clc
pop
mov
and
imul
mov
ins
push
stc
loopne
faddp
xor
imul
xchg
jnp
daa
jl
cmp
stos
(bad)
aaa
fistp
inc
cmps
push
jg
outs
jb
mov
xchg
popf
mov
pusha
in
inc
push
mov
ret
or
or
cmp
jmp
and
ret
loop
in
call
enter
js
test
pusha
pop
loop
cmp
jae
mov
sub
and
push
add
les
das
xchg
shl
arpl
sbb
cmp
push
and
jg
xchg
lahf
cmps
mov
add
adc
pop
repnz
pop
mov
out
inc
adc
fisttp
sub
jb
jl
sub
pop
in
push
or
test
and
adc
stos
enter
inc
xor
in
shr
shl
fimul
retf
cmp
aaa
xchg
adc
sub
clc
fistp
mov
inc
cmps
enter
push
pop
xchg
in
out
cs
retf
xchg
dec
mov
leave
inc
call
cmp
jb
fmul
mov
js
pop
(bad)
jnp
loopne
mov
iret
mov
dec
stc
push
es
leave
inc
shr
int3
test
out
rol
and
xchg
or
es
gs
adc
cvttps2pi
in
dec
mov
pop
push
mov
adc
sub
pop
les
push
pop
mov
dec
cmc
shr
movs
ja
stos
inc
pop
mov
bound
sbb
sub
out
rcl
jecxz
test
repz
in
inc
or
or
xor
das
xchg
out
sub
push
sub
jno
aad
leave
enter
(bad)
fldcw
mov
sub
pop
add
ds
push
in
xchg
clc
xchg
xor
sub
ins
(bad)
loope
in
imul
adc
jmp
lea
sbb
xor
jne
or
push
xchg
inc
unpckhps
mov
xchg
mov
adc
jbe
add
fs
inc
xchg
fwait
mov
jmp
sbb
iret
adc
lods
test
in
test
push
jge
mov
xchg
fnstcw
sub
loopne
xchg
jg
pop
adc
pop
imul
and
dec
iret
mov
loope
stos
push
mov
lea
and
pusha
enter
sub
xor
inc
sar
push
sub
shl
xor
cld
rol
nop
xchg
hlt
ja
sbb
ins
push
dec
fnsetpm(287
inc
dec
inc
and
or
mov
rcl
jp
xchg
fiadd
lahf
inc
retf
mov
popa
es
adc
movs
cmp
cdq
mov
mov
or
dec
stos
mov
movs
adc
mov
(bad)
jb
fst
pop
(bad)
mov
jl
mov
lea
in
xor
or
les
and
mov
jmp
or
sbb
pop
mov
pop
jge
les
xchg
pop
loope
add
or
popa
stc
jle
mov
pop
or
movs
add
iret
push
(bad)
jb
fbld
std
xchg
out
pop
mov
stos
or
sbb
inc
adc
xor
in
fimul
imul
ficomp
push
sub
mov
xchg
add
(bad)
push
mov
jg
sub
inc
mov
fdiv
leave
push
in
push
aas
inc
lock
inc
rcl
add
loope
and
or
inc
cli
out
in
fcom
push
call
mov
mov
into
(bad)
cli
neg
ss
adc
jmp
dec
mul
jp
popf
xchg
je
jbe
inc
sbb
inc
and
mov
mov
pop
dec
in
dec
shl
sub
or
mov
cmp
fwait
ret
test
mov
push
retf
movs
mul
call
push
pop
fsubr
sub
enter
repnz
xchg
mov
in
sub
and
push
push
mov
test
pushf
stos
sub
cmp
retf
test
(bad)
rcpps
nop
or
inc
inc
lods
sbb
test
cmp
inc
enter
lods
push
ja
dec
es
sub
outs
xor
adc
pushf
xor
scas
push
rcl
movs
popf
fld
punpckhbw
sub
cmp
fisttp
inc
rol
fabs
mul
ret
xchg
out
xlat
repz
je
and
rol
or
or
loopne
iret
gs
cdq
sub
cmp
shr
test
(bad)
jmp
popa
rdtsc
aam
pop
pop
sub
jo
jae
rcr
pop
jnp
push
or
add
ret
test
rol
mov
repnz
cmp
jmp
test
movs
cmp
fst
shr
(bad)
jmp
inc
jne
inc
rcl
mov
dec
inc
mov
ss
cmp
fidiv
cmc
xchg
nop
cdq
mov
test
jmp
ds
add
inc
mov
xchg
mov
pop
dec
adc
(bad)
dec
test
sub
mov
jecxz
es
or
(bad)
jmp
outs
pop
int
je
aaa
mov
mov
push
or
and
or
jle
mov
lds
inc
push
test
cdq
cli
mov
std
sbb
dec
jg
jns
aas
pop
mov
inc
fst
(bad)
stos
pop
ret
shr
scas
sbb
inc
mov
sub
push
ret
lea
mov
jae
jmp
xor
cmp
mov
dec
push
clc
ss
lods
cs
jge
mov
ins
pushf
adc
mov
mov
das
shl
ins
jl
retf
ins
xor
rcr
xchg
sub
nop
jne
inc
dec
push
push
cmc
or
push
lahf
mov
jmp
das
push
push
les
in
mov
(bad)
std
jecxz
or
xor
xor
or
popf
fadd
je
xchg
idiv
pop
inc
mov
mov
out
xor
arpl
push
push
movs
scas
mov
scas
jp
push
and
sti
mov
js
jno
je
pop
(bad)
dec
xchg
icebp
inc
in
and
sti
jge
mov
inc
pushf
cld
inc
test
pop
ds
pop
jle
out
clc
out
jmp
mov
jecxz
aaa
das
les
mov
test
mov
jg
aad
pop
cmp
test
dec
mov
fld
push
in
sub
mov
data16
dec
fistp
lahf
sbb
and
call
outs
mov
add
jmp
push
xor
movs
jp
leave
movs
push
inc
rol
dec
jle
enter
dec
push
sar
ret
pop
cmp
jb
loope
pop
jno
nop
in
rol
jnp
fstp
xchg
fucomi
jg
push
xor
or
push
push
retf
dec
aam
ds
stos
or
icebp
mov
xchg
pop
adc
mov
cmp
in
mov
add
push
es
push
cmp
xchg
push
mov
inc
aam
push
jb
inc
sbb
pop
mov
int3
retf
(bad)
mov
lock
stc
cmp
jno
movs
mov
sbb
imul
mov
cli
test
inc
scas
sbb
dec
xchg
pop
shr
js
(bad)
sub
push
test
or
inc
pushf
push
mov
fbstp
sub
sbb
inc
jg
cmp
sahf
gs
xchg
dec
sub
pop
cli
lea
fdivp
rcr
popf
mov
loop
add
nop
xchg
das
adc
mov
scas
or
aam
call
xchg
icebp
jp
ins
push
push
push
cmp
xor
cld
add
inc
mov
neg
in
(bad)
out
not
cmp
sub
inc
pusha
js
mov
das
xor
mov
test
xchg
pop
dec
aaa
or
jge
adc
mov
xchg
add
outs
add
cwde
add
addr16
shr
hlt
jns
(bad)
and
and
(bad)
(bad)
mov
xchg
mov
gs
loopne
xchg
rol
out
cmp
jp
xchg
mov
les
and
and
xor
fstp
out
and
aam
out
les
in
out
pop
adc
cld
adc
(bad)
pop
add
adc
jecxz
call
in
je
cmps
jbe
push
test
jmp
pushf
es
mov
xchg
cdq
jmp
cld
jp
mov
push
(bad)
cmp
jmp
mov
stc
ror
jae
and
push
inc
sbb
and
mov
in
sahf
mov
in
and
pop
inc
fisubr
sbb
mov
mov
psrad
push
pop
mov
into
cwde
add
mov
jecxz
mov
(bad)
mov
ret
push
mov
lods
ins
js
xor
sti
retf
jne
fldcw
dec
(bad)
sub
mov
pop
aas
pop
xor
dec
not
test
lea
scas
dec
mov
outs
in
adc
and
shr
xchg
mov
fs
loope
mov
lds
test
scas
aad
neg
iret
mov
cmps
call
shr
mov
jle
mov
movs
sub
mov
pop
fist
jmp
sbb
add
sbb
nop
sbb
cmp
sti
xor
and
dec
lds
adc
jl
pop
or
sti
or
sbb
and
jne
and
fwait
xchg
or
enter
mov
adc
jp
test
fidivr
sahf
mov
jecxz
mov
popf
cmp
mov
movs
fcomp
inc
(bad)
test
retf
jbe
sub
pop
in
jb
adc
retf
mov
imul
cwde
pusha
pop
mov
xor
cmp
gs
jbe
jge
je
adc
add
enter
and
pop
sti
or
lahf
add
inc
sbb
scas
hlt
adc
hlt
outs
fmul
imul
xor
dec
in
aam
inc
inc
lods
out
imul
push
mov
mov
js
fstp
add
inc
imul
fidiv
sub
push
jnp
loop
dec
xor
repnz
iret
pop
div
lods
repnz
pop
rcl
repnz
push
dec
loope
sub
xchg
pop
or
xor
pop
daa
div
ror
lock
jne
fwait
add
in
loop
xor
xchg
mov
in
inc
sub
(bad)
leave
test
jb
sbb
out
jecxz
fild
mov
js
pop
add
stos
push
sahf
sbb
jmp
ins
add
adc
popa
adc
adc
pop
sub
ja
stos
and
xchg
add
pop
in
dec
xchg
mov
xor
pop
sub
or
push
inc
imul
fisub
std
shl
push
and
movs
out
add
enter
xchg
nop
adc
push
mov
test
div
inc
iret
mov
repnz
aad
rol
push
fsubr
popa
mov
cmp
stos
inc
repz
fwait
(bad)
psubq
push
sub
push
and
mov
popf
add
sub
dec
mov
xor
shl
mov
mov
outs
mov
ds
arpl
outs
xor
icebp
cwde
neg
mov
pop
clc
scas
push
or
jle
mov
cmc
sbb
push
jnp
aad
push
xor
cmps
xchg
xor
xchg
sahf
ins
push
and
jne
test
sbb
ret
add
stos
mov
cld
adc
sbb
in
iret
xor
and
xlat
jae
sbb
cmp
in
sar
mov
push
out
mov
cmp
int3
iret
inc
(bad)
pop
mov
es
or
pop
aaa
sbb
stos
inc
pop
add
xor
stos
dec
dec
sbb
hlt
(bad)
and
cld
xor
call
cmp
jnp
rcr
mov
movs
rol
dec
cmp
retf
cmps
inc
inc
pop
mov
sti
pop
(bad)
sub
add
mov
mov
sub
je
ja
jns
add
into
adc
mov
xor
mov
lds
jg
push
fsub
adc
fstp
mov
std
push
les
adc
add
or
pushf
ss
ret
xchg
lods
(bad)
sub
and
mov
addr16
jo
(bad)
cld
iret
or
imul
call
aaa
mov
ror
mov
aaa
inc
mov
fimul
out
sbb
or
or
rcr
shl
movs
pushf
sub
dec
aad
sbb
pushf
popw
fdivrp
pop
xchg
call
lods
push
adc
add
mov
pop
xchg
ret
cmp
xor
pusha
or
add
into
adc
movs
leave
pop
fwait
retf
ds
movs
add
(bad)
sub
push
mov
lock
mov
das
sub
mov
push
sub
ret
pushf
loope
fistp
bound
xchg
jl
jg
inc
add
sub
rcr
xchg
(bad)
mov
cmc
scas
mov
inc
shl
inc
loop
lods
pop
out
movs
shl
ret
lds
fmul
fcomp
pop
mov
sahf
out
or
sub
jmp
enter
sbb
mov
jmp
pop
inc
sub
dec
add
xchg
jmp
cli
mov
and
mov
test
sub
sbb
(bad)
rcr
test
nop
in
jmp
(bad)
cmp
xor
push
mov
cmps
movs
icebp
inc
rol
mov
pop
cmps
(bad)
sub
sub
and
adc
test
mov
xchg
hlt
(bad)
add
push
aaa
cmp
sbb
add
pop
sbb
stos
xchg
test
mov
push
fwait
and
int3
dec
out
jmp
aaa
mov
xor
in
push
test
nop
in
adc
iret
mov
and
push
out
sbb
dec
add
lahf
cmp
test
dec
hlt
pushf
hlt
hlt
push
fld
jp
in
movs
fwait
mov
sub
std
mov
mov
outs
push
sub
sahf
shr
fsubr
mov
sub
outs
out
addr16
mov
test
dec
int
sub
add
gs
xchg
jno
das
cmp
dec
push
rcl
inc
dec
jecxz
(bad)
push
fwait
rcl
outs
mov
sbb
mov
mov
adc
xchg
pop
inc
jo
cdq
or
add
dec
add
movs
and
jmp
mov
mov
cdq
dec
sub
jb
cmp
daa
(bad)
sbb
fstp
clc
pop
add
test
stos
sbb
xchg
add
xor
xor
or
in
icebp
call
xor
push
push
pop
mov
xchg
mov
mov
aaa
(bad)
adc
jle
cmp
ja
pop
dec
push
test
rol
sbb
test
or
pop
jp
xchg
movs
or
and
push
and
xor
icebp
movs
sub
sbb
push
iret
inc
call
mov
add
mov
(bad)
cdq
add
sub
cli
mov
outs
xor
sbb
mov
fld
xor
cmp
push
mov
jmp
push
push
xor
loop
das
mov
rcr
int
call
or
mov
mov
data16
xchg
test
xchg
pop
mov
in
jecxz
retf
cwde
add
int
xor
adc
test
jl
lods
jo
ins
xor
(bad)
popa
push
sbb
jo
(bad)
xchg
inc
imul
push
lods
jmp
jp
add
push
fwait
mov
push
sbb
test
(bad)
dec
add
pop
int3
xor
mov
mov
mov
addr16
ror
pop
cli
adc
shr
retf
(bad)
in
imul
jbe
out
test
fnsave
sbb
jl
mul
add
ins
xchg
sub
addr16
and
aad
leave
push
(bad)
jbe
imul
test
inc
ss
cmps
dec
xor
test
jecxz
dec
inc
or
addr16
mov
ins
xchg
test
xchg
mov
cmp
cmp
add
stc
cdq
push
mov
out
(bad)
repnz
sar
mov
fist
push
mov
jl
lds
std
push
pop
inc
or
xchg
inc
int
daa
xchg
cmp
jmp
jg
inc
add
ds
jae
mov
mov
lock
int
cmp
aam
adc
inc
xor
push
sar
xor
or
xor
in
fst
sub
jo
mov
mov
or
mov
xchg
xor
cmp
sub
mov
fadd
sub
add
jg
into
loopne
and
jne
rcl
sub
ud0
imul
call
ret
add
cwde
xlat
in
loope
xchg
ret
lods
xor
(bad)
movs
hlt
test
or
jns
dec
sbb
mov
ss
int
mov
jl
(bad)
in
inc
dec
jns
mov
pushf
lahf
adc
outs
inc
in
in
outs
mov
push
sub
pushf
adc
sbb
and
mov
add
xchg
add
scas
fild
scas
iret
(bad)
les
rcl
call
dec
pop
ret
pop
test
sub
inc
xor
xchg
repnz
mov
mov
ds
fmul
(bad)
stc
xlat
jae
mov
mov
lea
(bad)
(bad)
int
outs
out
aam
cmp
xor
aad
shl
xor
cmps
and
mov
adc
les
xor
add
dec
and
inc
pushf
and
data16
test
sub
test
shl
mov
jp
(bad)
push
lahf
loop
mov
or
lock
(bad)
aaa
retf
sbb
rol
cmps
sbb
test
es
outs
inc
movs
or
and
adc
jb
ficomp
fadd
rcr
mov
rcl
jbe
mov
xor
retf
idiv
js
dec
jp
push
pusha
test
cmp
cld
lock
(bad)
stos
mov
scas
cmps
aaa
and
mov
setns
mov
cmps
ss
in
push
(bad)
das
lods
sub
inc
mov
lea
movzx
stos
fstp
mov
dec
in
data16
push
add
sub
push
in
cmc
xchg
xchg
cmp
and
jmp
mov
inc
jbe
repz
fs
mov
sbb
sub
jg
dec
in
retf
push
add
jns
(bad)
jb
int3
inc
inc
xchg
dec
fadd
cmp
ja
mov
test
xor
dec
or
ret
outs
aad
or
cmps
cmp
pusha
jb
jmp
adc
and
fs
mov
adc
in
popa
and
pop
push
cmps
xor
test
sub
jle
outs
xor
mov
lods
lods
imul
dec
cmp
or
push
mov
sbb
push
cli
add
mov
pusha
adc
xor
pop
cmps
inc
sub
or
shl
jge
fcmovnbe
pop
fisttp
pop
inc
scas
jns
xchg
mov
mov
pop
push
ret
push
stos
cdq
pop
sbb
jns
xchg
cmp
sub
stc
inc
dec
push
sti
dec
cmps
pop
or
out
and
pop
outs
push
leave
inc
nop
cmc
lahf
xor
push
adc
bound
fldenv
ffreep
push
pushf
cwde
cmp
push
cdq
inc
mov
mov
test
mov
or
(bad)
in
mov
cmps
mov
rol
sub
scas
mov
push
xor
imul
pop
xchg
mov
jmp
cmc
lds
or
repnz
fnstsw
clc
jo
jo
dec
mov
loopne
and
in
in
push
test
rol
loope
cmp
leave
xchg
xchg
shr
mov
int
mov
aas
jns
sar
out
(bad)
std
retf
jg
mov
popf
mov
xchg
mov
jno
sub
(bad)
in
jno
adc
xchg
or
clc
mov
cmp
xor
push
pop
fbld
test
add
xchg
add
test
cmp
add
jmp
dec
or
ds
xor
or
mov
push
out
xor
pop
inc
lds
cdq
pop
outs
std
inc
in
imul
(bad)
pop
loopne
inc
push
push
sbb
out
shr
add
pop
mov
leave
outs
or
jg
dec
movs
mov
mov
shl
mov
ret
push
cmp
shr
fidivr
inc
cmp
pop
ins
fistp
fld
or
mov
call
mov
fsubr
(bad)
xchg
dec
pop
fwait
xchg
fwait
rcr
aad
arpl
sub
lods
int
push
mov
push
cmp
cmp
dec
mov
nop
mov
or
fs
xchg
bound
push
sbb
xchg
and
inc
jb
xor
push
movs
movs
pop
push
sub
jecxz
mov
lea
and
fstp
pop
cli
(bad)
cmp
mov
adc
call
jmp
or
sub
loope
mov
adc
mov
sbb
jge
daa
inc
and
retf
cli
stc
mov
mov
lds
pushf
dec
mov
push
mov
mov
jl
and
push
or
ins
(bad)
mov
call
aas
push
sub
pop
push
test
sbb
dec
(bad)
push
mov
leave
scas
cwde
in
mov
dec
aas
(bad)
cmp
and
mov
fnstsw
lods
xchg
mov
iret
repnz
jmp
movs
jmp
xor
push
ja
iret
cli
mov
sub
mov
cmp
push
and
jbe
stc
cmp
call
loopne
and
ds
movs
jmp
loope
shl
xchg
pop
int3
inc
sbb
mov
ins
in
push
mov
push
dec
push
xor
fcomi
jecxz
inc
and
sahf
jmp
imul
cld
pop
dec
mov
and
scas
shr
imul
ins
test
mov
jp
jno
sbb
mov
pusha
inc
sub
jl
mov
fimul
push
or
in
lds
in
mov
nop
xchg
pushf
sbb
sbb
cdq
into
movs
out
bound
fnstcw
jg
repnz
neg
sub
or
jp
xor
xor
mov
or
mov
mov
mov
aad
fsub
sub
inc
jp
mov
(bad)
lods
pop
sbb
xchg
ja
fnstcw
retf
lods
sbb
sahf
fidiv
add
push
sub
add
sbb
loop
xchg
call
mov
pop
sub
inc
jp
push
cmp
adc
xchg
ins
je
add
cmp
or
sbb
adc
outs
nop
bound
cmp
pop
pop
add
xchg
int
out
mov
in
jmp
(bad)
out
xchg
mov
sub
mov
cmp
ror
in
rol
mov
rcr
sar
jg
popf
bswap
or
xor
mov
mov
or
add
sub
push
aam
(bad)
push
int
inc
inc
test
cmp
jmp
xchg
jl
sub
sti
in
pop
clc
mov
int3
mov
inc
jge
neg
dec
ds
mov
(bad)
sub
out
pop
sbb
mov
jl
dec
sbb
mov
fcmovbe
scas
add
mov
test
and
sub
aas
or
xchg
mov
dec
add
push
pop
mov
outs
call
adc
jmp
bound
imul
iret
and
fmul
daa
inc
jns
in
ja
imul
aam
popa
sub
shl
enter
pop
mov
mov
push
ss
mov
sbb
sub
or
sbb
call
dec
mov
or
inc
dec
xlat
sub
mov
(bad)
pop
bound
xchg
lock
movs
idiv
sub
and
cmp
dec
loopne
fwait
sbb
mov
fsub
jo
cli
adc
fnsave
call
cwde
loope
repz
sbb
mov
mov
jmp
call
add
test
mov
xchg
aam
nop
ret
sub
inc
jg
sub
xor
daa
push
sbb
xor
xlat
cli
pushf
ja
lods
xor
data16
xor
scas
dec
xchg
inc
fistp
mov
cmp
sbb
mov
pop
(bad)
dec
and
sub
cmps
xchg
(bad)
stc
dec
imul
fldenv
mov
pop
out
cdq
jecxz
or
cmp
mov
push
push
inc
ret
test
mov
lods
neg
clc
ret
add
sub
inc
(bad)
jo
dec
mov
fmul
loopne
daa
cdq
mov
sbb
sbb
fstp
loop
outs
cwde
in
stos
ss
aam
(bad)
jge
fwait
mov
add
mul
add
dec
pop
sbb
cmp
std
aam
xor
jo
lock
fistp
(bad)
mov
pop
pop
pusha
mov
add
ror
pop
sub
inc
push
fsub
fnstsw
mov
push
in
jmp
mov
jbe
jo
add
mov
jno
enter
push
daa
sub
jp
mov
mov
arpl
cwde
sub
lahf
push
ret
add
xor
les
add
cmp
aad
ins
inc
ins
out
or
xor
cmp
fisttp
xchg
adc
pand
mov
clc
pop
mov
cmc
cmp
sbb
sbb
xor
js
xchg
es
push
xor
pop
imul
repnz
cmp
fst
mov
mov
ins
mov
mov
(bad)
(bad)
call
fadd
test
dec
mov
ins
(bad)
int3
nop
or
mov
stos
mov
cwde
pop
jp
pop
jle
aam
inc
jge
into
sub
stc
mov
ins
sub
loope
pop
sbb
fmul
stos
ret
adc
cs
sub
xchg
mov
cld
inc
and
rol
push
dec
lods
lock
xor
cdq
sub
retf
jle
dec
push
xchg
leave
mov
scas
inc
adc
xchg
loop
jl
fidivr
mov
out
push
dec
sbb
mov
pop
pop
test
mov
dec
movs
and
cs
pop
shl
movs
adc
dec
cmp
mov
mov
outs
int3
pop
jl
loope
js
mov
jg
adc
out
in
mov
sbb
or
test
jl
fbstp
ror
xchg
loopne
or
inc
cmp
mov
enter
adc
mov
fstp
stc
movs
xor
cmp
aas
pusha
push
cmp
retf
mov
jmp
repnz
aaa
push
ss
movq
loop
adc
out
fst
adc
mov
jns
(bad)
sub
fdiv
xor
jecxz
push
stc
(bad)
pop
(bad)
fwait
out
dec
in
jge
repnz
gs
push
and
push
stc
and
rcr
xchg
jne
(bad)
sbb
pushf
inc
ds
inc
dec
clc
fld
aam
sar
mov
xor
push
inc
fwait
inc
sahf
lea
pop
jl
jno
sbb
mov
sub
std
rcl
xor
push
adc
push
outs
pop
inc
or
pusha
sbb
and
pop
dec
movs
fcomp
out
cmps
add
test
xchg
adc
add
xor
xlat
or
add
inc
adc
push
es
shr
or
inc
jnp
lock
in
push
ins
pushf
(bad)
xchg
cmps
lock
sub
and
sub
mov
jle
leave
push
lods
mov
add
xchg
adc
adc
cmc
mov
aad
sti
xchg
cli
(bad)
and
aas
imul
sbb
out
scas
jbe
sub
inc
mov
cmps
add
inc
das
xchg
pop
pop
mov
or
imul
mov
jo
mov
mov
(bad)
ficom
leave
aas
loop
xchg
aas
or
inc
(bad)
cld
sbb
imul
rcr
pop
in
pop
xchg
ds
mov
retf
or
shl
inc
fdivr
jmp
ror
jmp
inc
stos
and
call
(bad)
dec
xor
sub
stos
and
movs
rcr
mov
adc
jg
add
out
add
cs
mov
(bad)
add
ins
push
and
ss
add
cmp
jmp
inc
movs
mov
and
out
jnp
or
fiadd
dec
xchg
and
rol
icebp
test
dec
aad
push
icebp
push
dec
and
cdq
xchg
ins
inc
mov
cmps
rcl
stos
mov
repz
push
sbb
std
mov
add
ins
cmp
xor
sbb
jge
push
jecxz
sbb
push
push
sub
add
mov
mov
push
addr16
loopne
or
xchg
(bad)
ffreep
mov
repnz
inc
add
shl
mov
loopne
cmc
xor
outs
pushf
(bad)
fmulp
(bad)
fiadd
paddq
inc
test
mov
aaa
pop
mov
xchg
fisub
fild
jmp
shr
mov
jge
rol
sub
lds
and
aaa
imul
mov
inc
xchg
fcomp
pop
fist
repz
and
add
stos
dec
outs
(bad)
push
lods
lods
and
jg
xchg
inc
rcr
daa
jecxz
(bad)
js
out
cmp
js
mov
in
jg
add
cs
nop
sub
inc
es
adc
push
loop
call
adc
sbb
lods
and
scas
xchg
scas
js
and
scas
pop
dec
push
jnp
clc
lahf
add
mov
lea
xor
je
lea
fbld
mov
inc
cmp
inc
in
add
(bad)
fidiv
xchg
fcomip
fld
(bad)
jno
(bad)
pushf
cmp
or
mov
movs
sub
(bad)
pop
sub
pop
pop
inc
stc
pop
ds
(bad)
jno
cmp
ss
xor
movs
cmp
xor
out
jl
mov
cwde
std
fabs
pushf
ds
test
dec
retf
clc
cmp
arpl
lock
or
mov
scas
repnz
xlat
or
mov
ja
jl
mov
mov
lahf
mov
into
imul
arpl
dec
xchg
retf
inc
push
(bad)
xlat
out
and
dec
xchg
fadd
mov
xchg
lock
fistp
imul
(bad)
(bad)
lock
push
repz
jno
(bad)
mov
jl
repz
ret
xchg
push
xchg
jecxz
pop
lods
ja
loop
popa
repz
adc
mov
(bad)
or
sbb
rcl
or
mov
jg
xchg
out
add
(bad)
and
xor
add
xlat
mov
xor
jmp
lds
ds
pop
mov
pop
ror
(bad)
pop
outs
mov
(bad)
cmps
mov
cs
add
jne
aad
mov
mov
repz
pop
adc
mov
jae
aam
mov
or
cmp
(bad)
cwde
retf
hlt
sbb
movs
fadd
fwait
mov
jne
jb
sub
dec
imul
push
pop
out
jno
enter
int
mov
inc
mov
or
xchg
and
repz
jns
cmp
push
push
mov
push
out
into
aad
xor
push
scas
into
outs
sub
mov
test
(bad)
inc
mov
pop
sar
sbb
(bad)
push
adc
stos
jmp
imul
push
std
(bad)
cmp
outs
sub
inc
sub
mov
sbb
sbb
mov
push
ret
mov
scas
in
and
out
mov
cmp
mov
stos
jge
lahf
sub
xor
push
out
in
mov
lods
es
sub
xor
ins
push
add
fcomp
outs
or
int
cld
and
das
cvtps2pi
pop
repz
cmp
inc
adc
dec
dec
pop
add
add
dec
inc
mov
js
std
(bad)
out
pop
fld
sbb
lahf
rcr
pop
repnz
pusha
push
adc
jno
push
cmps
jmp
pop
fisttp
mov
ss
ss
test
test
or
pop
pop
fs
daa
add
cmp
sahf
hlt
inc
mov
(bad)
out
(bad)
fidivr
mov
dec
mov
(bad)
rol
pusha
test
loope
mov
ins
(bad)
out
inc
mov
add
jnp
push
call
jno
sar
(bad)
fsubrp
ins
stos
retf
fild
(bad)
adc
mov
fs
adc
out
lods
inc
movs
jge
mov
aam
in
ja
rcr
fisttp
pop
ins
lods
pop
jo
mov
les
push
and
xchg
or
movs
jle
adc
sub
push
call
xchg
loope
xchg
loope
int3
fidivr
ja
inc
cmc
repnz
jge
rcr
pop
popf
pushf
mov
and
xor
out
xchg
sahf
dec
imul
arpl
xchg
push
dec
pop
wbinvd
xchg
jo
jl
sahf
jp
cmc
xor
shl
in
mov
lods
rol
imul
(bad)
sbb
imul
adc
dec
int3
mov
add
imul
cdq
fstp
adc
not
xor
push
cli
or
push
std
out
(bad)
in
mov
pop
mov
and
sub
int
fimul
lock
or
imul
loop
sub
fiadd
pop
repnz
not
add
sti
pop
jnp
add
jnp
setae
pop
sbb
jle
(bad)
xchg
shl
fist
inc
ss
sbb
inc
leave
sbb
sub
dec
test
fwait
call
les
pop
fsubr
pop
(bad)
xchg
dec
ror
repz
jne
and
jecxz
adc
call
and
out
xchg
fisttp
cwde
mov
sbb
std
(bad)
cdq
loop
out
movq
leave
sti
xchg
out
xor
xor
(bad)
dec
das
jbe
push
js
and
test
inc
push
inc
mov
mov
jb
inc
dec
sbb
jle
add
sbb
mov
xchg
jg
dec
sub
js
mov
sub
ins
pop
rcl
fistp
jmp
ds
push
test
aam
inc
and
sti
xor
jmp
adc
mov
imul
add
mov
fisub
xchg
sbb
adc
cmp
icebp
cmps
cmp
js
dec
loopne
push
cmp
mov
outs
cld
mov
push
dec
les
and
ja
pop
inc
inc
cmp
jae
int3
jns
pop
mov
sub
ja
push
mov
mov
fsubr
mov
and
aaa
jbe
xor
imul
pop
pop
or
jmp
dec
aam
add
int
imul
mov
enter
sbb
pop
cmp
sub
sub
add
fiadd
cmp
(bad)
and
fcom
xchg
out
lea
inc
push
mov
cmps
into
cmp
and
jno
add
dec
es
ret
sbb
xchg
adc
dec
aas
cld
adc
mov
les
adc
sbb
mov
or
dec
or
mov
inc
jp
pop
cmp
adc
pop
jne
jbe
mov
sub
add
bound
fucomi
pop
imul
outs
ds
jp
bound
(bad)
pusha
adc
adc
or
js
cmc
retf
cmp
and
dec
or
jg
push
cmc
imul
lock
dec
push
leave
cld
or
int
out
push
das
ret
xor
aaa
push
outs
inc
pop
aam
add
push
add
call
loop
mov
inc
cmp
mov
mov
outs
out
adc
shl
jecxz
not
push
scas
mov
clc
pop
sbb
not
jg
fild
or
stos
xor
jo
mov
std
adc
loopne
rcr
xor
or
xlat
test
not
pushf
xchg
add
mov
xor
mov
cmp
jecxz
or
pop
dec
push
ret
mov
pop
fucomip
rcl
data16
les
push
aaa
push
push
mul
or
and
ret
pop
lea
dec
aam
inc
xchg
in
mov
call
pop
push
xor
repnz
pop
sbb
mov
and
or
mov
fistp
pusha
mov
xlat
aas
iret
or
xor
sbb
xchg
xchg
mov
cmps
sahf
pop
test
int3
inc
les
cdq
push
ss
mov
jle
bound
fnsave
aad
cdq
and
xchg
or
div
mov
mov
movs
dec
shr
xor
mov
lods
or
or
fldcw
xor
call
xor
icebp
dec
mov
(bad)
out
cmp
xchg
mov
fisub
enter
sub
push
mov
xor
lea
movs
stos
add
call
iret
cdq
aam
es
shr
mov
and
sub
jl
clc
cmp
cwde
inc
in
pop
jbe
mov
push
cli
pop
push
fbstp
out
push
jno
xor
bound
jne
aad
ss
inc
(bad)
push
loopne
scas
adc
cdq
sahf
pop
or
pop
scas
div
add
pop
mov
repnz
jp
jg
xor
call
mov
xor
ret
cmps
cs
adc
push
xor
scas
cmp
adc
mov
push
ins
repz
popf
cwde
pop
sbb
cli
leave
xchg
inc
ret
push
(bad)
mov
clc
xchg
cli
sub
clc
jg
push
jl
pop
mov
jge
cmps
aad
arpl
pop
cs
xchg
fsub
lds
mov
outs
xor
push
pop
xor
sbb
push
das
sub
pushf
xchg
sub
jmp
loop
call
ja
(bad)
dec
outs
rcl
in
les
mov
outs
(bad)
loopne
in
mov
cmp
pop
sbb
cpuid
dec
mov
retf
bound
adc
mov
(bad)
(bad)
xlat
and
xchg
or
push
jmp
cmp
cmp
int
shr
lods
repz
or
cmp
loope
(bad)
ds
xor
push
mov
dec
lods
inc
ret
push
dec
pop
dec
das
pop
loop
imul
cmp
mov
mov
jbe
ja
push
lods
icebp
xchg
movs
jl
dec
jo
and
and
or
dec
outs
daa
fwait
test
out
sbb
sbb
das
xor
push
mov
(bad)
fcomi
popf
mov
arpl
je
std
xchg
xchg
xchg
(bad)
adc
fistp
test
push
and
adc
pop
sub
sbb
mov
xor
addr16
add
addr16
inc
es
jle
in
cld
push
cmp
cmp
mov
stos
pop
inc
mov
cmp
and
rol
inc
sbb
pop
xchg
mov
(bad)
retf
arpl
adc
inc
push
pop
inc
aad
ret
mov
inc
sbb
(bad)
mov
out
push
js
inc
add
movs
leave
xor
cmps
lea
popf
iret
fs
push
pop
cmps
mov
bnd
and
sbb
test
or
sub
std
(bad)
cwde
sbb
shl
mov
(bad)
sub
push
push
imul
out
sar
dec
not
pop
xor
cmc
ins
push
ins
dec
cli
mov
loope
dec
stc
retf
xor
jo
iret
dec
adc
pushf
out
sbb
mov
retf
jae
retf
cmp
cmp
(bad)
push
sbb
pop
xchg
clc
pushf
xchg
arpl
retf
(bad)
mov
gs
jae
jbe
jp
(bad)
not
cmp
mov
(bad)
rol
mov
push
inc
pop
or
pop
jge
js
lods
cmovne
mov
xchg
mov
enter
neg
or
adc
xchg
arpl
rcl
enter
adc
and
xor
mov
repz
aam
xchg
inc
inc
stos
push
test
pop
or
add
xchg
ja
ror
and
test
outs
ret
sbb
lahf
out
lods
rcr
jne
call
in
nop
jne
mov
cmp
sti
and
imul
scas
mov
adc
mov
xor
mov
jmp
ss
and
sbb
fstp
mov
mov
pop
push
mov
inc
xor
cmps
dec
(bad)
mov
xchg
test
mov
cli
scas
in
add
jle
(bad)
stos
push
pop
jne
push
cwde
rol
or
sub
(bad)
dec
sub
pop
fsub
sar
mov
imul
imul
pop
and
sub
xchg
or
sub
dec
fs
xchg
inc
xor
ret
loopne
lods
dec
aad
jle
cmp
test
dec
or
dec
pop
aaa
xchg
pop
sar
cld
dec
sbb
and
loop
fucom
push
xlat
test
adc
aam
xor
js
in
sub
shl
shl
mov
push
mov
pop
(bad)
mov
int
inc
jo
push
mov
or
inc
add
fisub
mov
jp
sbb
jl
ret
(bad)
xor
cmp
dec
pop
and
lds
or
add
mov
ret
push
adc
ds
jl
push
sub
icebp
ja
jmp
inc
sbb
adc
movs
fucomi
and
xchg
pop
lods
push
cmp
jmp
call
push
loopne
test
cmp
mov
pop
jne
sar
add
retf
inc
mov
pop
cmp
sbb
cmp
mov
jmp
lods
xchg
sbb
push
adc
test
call
dec
pop
fldcw
mov
jb
adc
fidivr
cmps
test
leave
and
adc
or
inc
cmp
xor
data16
jmp
clc
cmc
sahf
sbb
or
xor
je
pop
cmps
xor
fst
dec
fdiv
sahf
push
cmp
in
in
movs
nop
push
sub
fwait
aad
xchg
mov
dec
mov
push
mov
inc
scas
jno
mov
xlat
add
aad
jmp
add
add
lods
xor
mov
or
jno
adc
jno
sbb
aas
movs
ds
push
sbb
outs
mov
pop
jmp
cs
stc
xchg
repnz
xor
sbb
adc
xor
clc
retf
xor
aad
fmulp
cmp
les
push
jge
mov
aas
jge
jmp
and
ficom
push
sub
jl
out
adc
lock
call
enter
push
pusha
in
jge
push
jge
push
jmp
mov
test
ret
push
and
cmps
in
mov
cmps
scas
jg
sub
jbe
test
stos
call
(bad)
cmc
pop
fiadd
mov
pop
loope
adc
into
and
add
(bad)
mov
int3
ins
out
sub
(bad)
out
lds
cmps
popa
sub
add
jecxz
add
retf
movs
(bad)
jp
retf
in
shl
rcl
adc
or
(bad)
sets
push
mov
rcl
int3
fadd
or
or
or
jae
sti
imul
pop
int
enter
push
int3
xor
xchg
jbe
mov
pop
cmp
mov
jg
mov
rcl
cmp
mov
xor
imul
rol
xchg
pop
gs
sub
ds
xchg
add
pop
cmp
adc
stos
dec
icebp
fild
xchg
jl
push
stos
lds
loopne
jb
and
stos
dec
retf
sbb
mov
add
pop
aas
retf
jns
outs
out
test
test
or
push
cmp
es
adc
movs
clc
(bad)
je
mov
sti
jp
scas
push
dec
shl
cmps
enter
popf
test
jbe
stos
outs
aaa
(bad)
and
add
inc
imul
in
pop
fist
fldcw
stos
imul
(bad)
dec
ror
mov
rol
sub
jmp
dec
fidivr
add
inc
js
sbb
stos
xlat
call
sub
sub
pop
(bad)
pop
lahf
mul
es
jb
dec
scas
sub
fadd
stc
call
in
pop
fstp
jp
fadd
and
rcr
dec
imul
mov
sub
cmp
out
push
cmp
scas
fnstcw
in
cmp
add
sbb
sbb
mov
movs
fadd
push
xchg
jg
push
add
xchg
xchg
cmp
aaa
adc
inc
arpl
mov
jg
mov
aaa
and
arpl
push
popf
ins
xor
cwde
fwait
xor
add
xchg
outs
out
dec
cmps
adc
jo
jecxz
push
outs
lea
leave
call
push
int3
cs
sub
mov
into
mov
ja
int
cmps
call
push
jae
ins
inc
or
cli
jge
inc
xchg
outs
in
movs
adc
(bad)
movs
push
and
lahf
das
dec
push
or
inc
sbb
mov
(bad)
out
fwait
cmp
jp
push
push
dec
movs
in
mov
inc
jmp
(bad)
mov
mov
bound
scas
cmp
xchg
jno
pop
or
sbb
test
sub
mov
adc
rcr
lock
out
xchg
bound
xlat
cmc
es
and
push
sub
xchg
cmp
test
mov
push
fnstenv
cs
repnz
mov
or
mov
add
in
push
push
adc
jno
and
ret
mov
mov
xchg
xor
lds
pop
mov
sbb
(bad)
mov
inc
cdq
or
repz
call
stos
lahf
ror
and
daa
ret
xchg
xchg
test
pop
sbb
fcomp
int
adc
sub
adc
test
xchg
pop
lock
pop
xchg
out
push
xor
call
jno
and
adc
popf
lock
push
mov
ret
jmp
mov
fiadd
push
mov
cs
dec
mov
cmp
fs
and
movs
inc
inc
loope
jmp
or
cmps
sbb
aaa
pusha
and
(bad)
iret
jns
stc
(bad)
daa
push
mov
das
pop
push
lea
inc
call
push
jg
(bad)
repnz
out
repnz
cmc
sub
call
jmp
cmp
cmps
mov
mov
dec
adc
xchg
cmp
aam
dec
mov
push
jmp
mov
sub
xchg
hlt
or
in
jno
movs
inc
(bad)
mov
pop
daa
xchg
cmp
add
rcr
inc
inc
push
mov
das
xchg
cld
inc
repz
popf
pop
adc
cmp
mov
mov
sbb
xor
mov
mov
leave
jg
mov
neg
push
jmp
jmp
mov
mov
aam
mov
mov
aad
sbb
xchg
mov
xor
out
shl
movs
mov
inc
fninit
enter
ins
shr
cmp
sub
aaa
adc
icebp
xchg
lods
loop
mov
neg
jns
mov
dec
les
ss
xchg
cmp
inc
pop
enter
inc
out
push
retf
jae
inc
adc
fst
test
push
dec
jecxz
mov
xchg
inc
cmp
inc
jg
or
sbb
cmp
jge
cmps
js
retf
xor
(bad)
adc
cmc
adc
stos
stos
les
int
out
ins
pop
out
and
jae
pushf
xchg
(bad)
nop
jns
cld
mov
pop
cs
push
xlat
jnp
adc
fsubrp
jecxz
cdq
mov
out
push
(bad)
cmp
dec
cmp
sbb
jp
out
arpl
sub
in
mov
xor
cs
scas
ret
push
mov
push
mov
movs
mov
retf
pop
dec
cwde
or
mov
pop
stc
std
jae
neg
push
inc
and
sbb
mov
ins
ja
ins
push
mov
pusha
push
test
(bad)
nop
jmp
xor
xlat
ret
stos
add
sub
lods
lods
mov
jmp
mov
outs
mov
ins
pop
cmps
xlat
xchg
test
(bad)
popf
xchg
add
dec
and
push
ds
adc
aaa
jmp
xor
cmps
leave
push
iret
cld
sbb
xor
push
out
and
pushf
test
mov
fild
dec
fs
icebp
sar
inc
fyl2x
leave
ins
adc
shl
stos
popf
push
jge
test
dec
xchg
xlat
mov
pop
repnz
into
stc
in
inc
cmp
adc
popf
test
(bad)
mov
fwait
and
std
dec
dec
and
pop
inc
dec
data16
out
mov
jno
call
neg
aaa
shl
test
push
in
(bad)
mov
adc
sub
or
popa
call
leave
mov
jb
fs
retf
jecxz
sub
mov
test
imul
xchg
sub
neg
mov
jno
and
je
sbb
xor
pop
pop
push
iret
pusha
in
lds
aaa
arpl
xchg
adc
loope
ins
sahf
xchg
cmp
gs
jmp
leave
stc
imul
adc
add
cs
cmp
mov
xchg
mov
mov
lea
inc
lock
jecxz
and
dec
sbb
inc
jge
mov
cmp
mov
push
ficomp
test
out
iret
rol
jae
and
and
xor
jne
inc
push
cmp
sbb
mov
lock
sub
js
pop
(bad)
jmp
sbb
push
daa
or
and
dec
fcomip
xor
fsubr
call
pop
add
les
les
xchg
or
mov
test
inc
lods
ficomp
retf
(bad)
lahf
retf
fstp
push
add
fist
xor
push
fcmovne
pop
mov
sub
or
mov
mov
stos
retf
mov
retf
push
jle
jno
cmp
add
cmp
xchg
(bad)
stos
loop
dec
adc
pop
pop
aas
rcr
test
sbb
and
sub
in
pop
add
es
sub
fld
jge
lods
adc
mov
call
scas
push
test
sub
pop
xchg
jp
cmp
jp
mov
jns
movs
pop
gs
imul
adc
mov
cmps
sbb
jmp
imul
shr
push
cmps
shl
(bad)
cld
lea
ss
xchg
daa
dec
stos
sbb
xchg
sbb
sub
ret
rcl
sub
jns
lahf
inc
mov
add
test
xchg
cmps
jae
jns
or
jecxz
dec
addr16
mov
mov
je
sub
add
mov
inc
pop
fsubr
cmc
add
ret
call
xchg
pusha
and
push
adc
test
cmps
dec
fisubr
inc
mov
sbb
sbb
sti
sub
out
jae
inc
add
dec
pusha
dec
call
es
cmp
lds
mov
sbb
call
mov
pop
daa
in
int
ins
inc
out
cmp
jns
xchg
fisub
and
lods
jecxz
es
jbe
cmp
add
popf
fiadd
cmp
arpl
jge
shl
fcmovnb
popf
inc
cmp
push
lock
test
xlat
rol
les
cmps
jmp
in
inc
mov
sbb
adc
sbb
shl
mov
(bad)
ds
aad
stc
xchg
push
pop
retf
cmc
jge
and
or
add
sub
cli
out
pop
in
push
mov
out
push
jp
ret
fidivr
pop
inc
push
push
aaa
je
jecxz
xchg
pop
ror
push
sub
pop
lods
movs
loop
mov
stos
inc
push
test
loope
mov
xor
cmp
mov
out
add
ss
xor
adc
mov
or
xlat
sbb
lods
popa
out
xor
inc
ins
aaa
pop
test
xor
std
test
or
inc
mov
ret
std
retf
mov
ins
inc
lods
push
dec
mov
xor
dec
xor
cli
or
popa
mov
scas
sar
lea
pop
mov
pop
fsub
push
icebp
stos
dec
shl
out
pop
push
jno
xchg
or
lea
(bad)
mov
cmp
push
addr16
adc
in
jnp
stos
mov
stc
inc
retf
(bad)
pop
add
mov
cdq
hlt
enter
pop
enter
mov
popf
mov
mov
gs
mov
cmp
test
sbb
add
mov
mov
bound
inc
fmul
fdivp
inc
loop
jge
sbb
fdivr
popa
adc
xchg
es
jno
bound
mov
xor
shl
mov
jo
fisub
test
mov
add
cmp
adc
or
fidivr
shr
cs
mul
fcmove
aad
sub
(bad)
aas
std
inc
cmc
mov
mov
icebp
mov
(bad)
sub
out
sub
or
ins
ss
retf
mov
inc
cmp
mov
and
movs
aad
nop
inc
fisubr
es
cmc
push
push
hlt
imul
frstor
push
mov
inc
(bad)
xor
mov
repz
in
pop
sub
sbb
fcmovbe
fdiv
out
dec
jle
ficomp
jmp
dec
aam
popf
lods
mov
cs
and
pop
rcr
shl
or
adc
seta
add
jo
aas
rol
mov
lea
or
pop
nop
mov
cmp
in
arpl
mov
or
ins
and
outs
ja
fistp
stos
add
fmul
fbld
mov
mov
shr
mov
xchg
sub
aaa
into
sub
inc
sub
lea
dec
pop
add
mov
and
or
and
or
and
pushw
xchg
push
inc
das
pop
bound
ins
cmc
mov
stc
or
cmp
or
dec
and
fwait
mov
sub
jne
(bad)
jge
ins
mov
cmps
sbb
xchg
jle
jae
fadd
xor
sbb
or
mov
fbld
loopne
fld
xor
ret
jbe
test
scas
hlt
mov
mov
mov
les
and
je
xor
xchg
mov
push
mov
or
pop
daa
mov
fdiv
das
and
retf
inc
push
(bad)
mov
adc
aas
jbe
inc
repnz
jg
inc
lock
and
call
loop
or
sar
adc
rcl
mov
cs
xchg
dec
iret
in
cwde
xlat
jbe
out
ds
xchg
lock
jmp
fs
outs
inc
retf
mov
add
mov
mov
cs
je
aaa
and
popa
js
retf
rcl
and
inc
test
enter
popa
clc
adc
mov
push
hlt
mov
pop
jnp
(bad)
ds
das
daa
fs
xor
sub
xchg
mov
ret
and
jmp
test
aam
stc
or
sbb
aam
lahf
fisubr
jmp
xchg
stos
push
dec
push
mov
jecxz
push
lock
jecxz
add
mov
mov
jmp
mov
xor
lock
push
div
or
lods
push
cmp
push
aad
jmp
pop
jmp
pop
imul
lahf
jmp
cmp
imul
rol
out
test
pop
ds
jp
addr16
arpl
xchg
ror
test
sub
pop
sbb
mov
hlt
movs
pop
and
fwait
mov
lods
jmp
inc
retf
or
or
add
xor
adc
imul
dec
and
movs
push
xor
test
mov
push
call
outs
pop
shl
jecxz
pavgb
and
push
mov
cmp
(bad)
(bad)
mov
outs
mov
jbe
xchg
mov
push
jp
inc
in
out
xlat
iret
and
and
dec
mov
jnp
xchg
into
pusha
jl
mov
pop
pop
inc
cwde
(bad)
bound
add
mov
(bad)
mov
dec
icebp
sub
fld
sbb
mov
mov
mov
rol
test
daa
data16
fdivr
jl
cmp
jg
mov
in
ins
call
dec
add
push
push
mov
or
pop
pusha
in
lds
(bad)
mov
xchg
loope
xor
sar
mov
mov
inc
loop
jecxz
je
je
call
enter
mov
mov
push
cmp
out
data16
movs
and
aaa
mov
xor
ja
retf
push
ds
test
lea
(bad)
mov
jg
cld
adc
icebp
jb
inc
(bad)
sti
add
cwde
inc
jmp
call
or
retf
jl
dec
sbb
sbb
push
call
test
fdiv
fimul
cmc
test
nop
div
pop
mov
ror
lahf
mov
sbb
cmps
mov
popa
cmp
push
call
ret
sbb
dec
mov
lds
dec
not
imul
in
cmp
repnz
out
inc
lods
cmps
dec
fdiv
xchg
call
cmp
jecxz
out
mov
jne
les
icebp
mov
mov
in
sahf
add
push
(bad)
stos
or
cmp
push
xlat
xchg
dec
int3
dec
shl
push
lods
sbb
imul
lea
fisubr
xchg
fwait
dec
mov
add
push
jmp
leave
je
xor
jno
jns
adc
outs
pop
in
mov
xchg
sub
in
imul
xchg
in
test
movs
push
shl
fidivr
push
mov
jecxz
sub
jno
(bad)
dec
lea
stc
xor
or
hlt
mov
int
popa
cmp
or
xchg
mov
mov
mov
or
aam
loop
loope
ror
hlt
xchg
dec
mov
stos
adc
mov
xor
inc
fdiv
mov
ins
pusha
fs
(bad)
out
movs
sbb
(bad)
xchg
cmp
in
scas
mov
pop
mov
(bad)
outs
icebp
nop
inc
add
outs
mov
(bad)
and
fdivr
cmp
movs
mov
cmc
pop
sbb
out
(bad)
ror
cmp
call
push
shl
jne
aad
inc
mov
popw
pop
fist
inc
(bad)
jmp
mov
sub
add
es
call
or
fwait
imul
ds
addr16
jb
jmp
mov
add
pop
mov
movs
jnp
cld
lds
push
mov
int3
cmp
scas
cmp
cmps
sbb
shl
mov
xor
xchg
ficomp
int3
pop
mov
pop
sub
or
scas
dec
pop
cmps
idiv
pop
mov
rcr
out
xchg
js
push
fimul
test
push
sahf
mov
cdq
push
add
mov
xor
mov
lahf
mov
sub
shl
ds
(bad)
fisubr
jmp
adc
xor
sub
pop
cmps
dec
jo
mov
xor
movs
lods
fdivr
ret
push
outs
mov
jne
outs
dec
xor
mov
hlt
or
inc
xchg
push
in
test
or
ret
mov
movs
in
inc
rcl
ret
mov
pop
dec
js
scas
cmp
lods
lahf
xchg
ins
sub
lahf
inc
lahf
lahf
dec
add
loopne
adc
cmp
pop
sub
xchg
adc
sub
sub
dec
ja
jecxz
pop
(bad)
xor
xor
xor
retf
push
repz
jmp
repz
jmp
xchg
ja
rcl
popf
push
rol
pusha
pop
test
in
xor
and
iret
cmp
and
call
test
xlat
add
stos
stos
daa
xor
outs
adc
pop
ins
gs
popa
jno
dec
jp
cmp
pop
inc
push
mov
adc
pushf
imul
out
or
push
xor
xchg
retf
push
fldcw
jo
mov
outs
push
enter
pop
adc
push
(bad)
lahf
clc
loopne
xchg
and
shr
loopne
jle
adc
sbb
push
mov
repz
sbb
mov
inc
mov
pop
pop
inc
enter
ja
bound
rol
mov
popa
sub
sub
mov
sar
dec
out
mov
inc
pop
imul
mov
call
loopne
xor
enter
jne
and
dec
mov
or
or
inc
jae
jg
ins
jb
push
add
sbb
stos
(bad)
aad
popa
sbb
inc
(bad)
out
outs
jae
mov
and
mov
jo
(bad)
int
fsubr
hlt
sahf
repnz
push
adc
ret
pop
dec
dec
jge
call
and
aaa
adc
jle
and
pop
mov
into
out
ins
lahf
mov
addr16
mov
imul
cmp
and
inc
ins
mov
add
sub
add
xchg
sub
gs
push
add
adc
cmp
mov
loope
stos
mov
popa
sub
aas
lods
movs
imul
or
pop
test
xchg
cli
stos
xchg
ret
fnsave
mov
jmp
ds
or
push
dec
das
shr
inc
in
xchg
jnp
loope
hlt
jne
dec
in
xor
sub
fs
inc
std
mov
or
ja
inc
xchg
daa
mov
push
push
pop
push
in
stos
push
test
rol
pop
inc
out
sbb
jae
pushf
mov
dec
and
sbb
mov
xchg
fcmovb
cmp
ja
sub
sbb
lds
or
daa
mov
cwde
xchg
stc
aaa
xchg
and
mov
fisttp
(bad)
pop
mov
mov
lods
sub
repnz
dec
sbb
lds
fidiv
xchg
add
cmp
mov
mov
retf
xor
hlt
mov
jle
fs
or
pop
mov
ja
cli
into
mov
in
lahf
jns
test
dec
ror
mov
ins
daa
xor
pop
push
push
sub
repz
mov
int
mov
aam
repz
xor
xchg
in
or
push
adc
add
xchg
pop
(bad)
jne
cli
lahf
daa
call
pop
(bad)
cmps
in
jne
jns
jns
leave
sub
aas
das
cdq
sbb
ficomp
scas
ret
mov
mov
lods
mov
loop
fldenv
inc
daa
mov
clc
and
sub
shl
xor
stos
lods
pop
lods
gs
into
popa
xor
jb
sbb
sbb
jmp
icebp
and
inc
out
jle
jl
mov
dec
inc
and
adc
mov
xchg
xlat
out
mov
or
mov
sbb
popa
mov
rol
data16
jbe
sbb
mov
mov
jno
dec
or
lods
sub
cmp
stos
push
jb
pop
retf
lock
test
fcom
mov
sub
fwait
ret
popf
mov
pop
std
daa
aam
popa
out
mov
cmp
add
or
ja
out
aaa
mov
cmc
rol
push
cmp
pop
shl
add
test
je
enter
cmp
out
xor
xchg
dec
sbb
fucomp
aas
(bad)
sbb
mov
xchg
sbb
fnstenv
stos
pop
mov
call
jns
pusha
xchg
jp
jp
adc
movs
repnz
pop
imul
add
fs
xchg
inc
adc
mov
xor
shr
imul
mov
sbb
ins
rol
pop
jmp
sbb
bound
push
dec
inc
pop
or
cmp
mov
mov
fidivr
and
js
not
test
xor
loopne
and
mov
sahf
das
push
leave
mov
outs
pusha
mov
(bad)
jno
in
fnstsw
fsubr
into
xchg
sub
(bad)
and
mov
nop
mov
lods
cli
push
ins
xchg
and
shl
not
xor
mov
nop
inc
jns
adc
pop
das
int
xchg
bound
inc
in
nop
xor
mov
xor
loopne
pop
or
movs
ss
and
movs
or
mov
push
outs
test
loopne
xchg
mov
cwde
test
std
mov
scas
fst
xchg
sub
stc
mov
test
adc
xor
outs
jns
sbb
(bad)
sbb
repz
es
cmp
or
scas
jl
or
xchg
push
bound
inc
shl
scas
pop
rcr
scas
mov
xor
jmp
xchg
inc
and
jmp
popf
cwde
aad
xchg
mov
cmp
sbb
jnp
out
add
dec
jle
add
sub
(bad)
fst
xlat
pop
int
sbb
pop
test
stos
dec
push
xor
push
retf
pop
cmc
xchg
xor
fidiv
xor
pop
(bad)
jp
jnp
je
inc
jmp
data16
adc
stc
test
dec
shl
repnz
test
idiv
test
retf
lea
mov
je
sbb
adc
fnstsw
aam
lahf
mov
out
scas
add
retf
cdq
lahf
mov
test
aam
push
pushf
jle
imul
fbstp
inc
mov
cld
pop
js
jg
daa
jmp
sub
call
jecxz
or
add
into
stos
push
adc
std
mov
xchg
test
mov
cwde
adc
mov
push
add
rcl
div
jne
hlt
packsswb
mov
outs
and
xor
leave
add
add
out
or
and
clc
sub
clc
inc
adc
mov
mov
or
push
retf
and
push
dec
repz
push
int
cli
bound
aas
pop
mov
jnp
jns
ror
mov
fwait
xchg
cmp
lods
into
jo
adc
jno
cmps
out
dec
xor
in
cmc
mov
cmp
xchg
adc
arpl
cmc
jecxz
fist
ficomp
ins
xor
cmp
pop
cmp
push
xchg
xor
dec
out
jmp
(bad)
in
sbb
adc
jno
xchg
jb
xor
adc
stos
push
pop
xor
sbb
add
add
push
xor
push
enter
mov
cdq
popf
add
lock
das
aam
jbe
int3
mov
or
stos
ds
shl
lods
sti
cdq
and
les
fstp
mov
or
mov
pop
popa
mov
test
xchg
ins
pop
ss
ret
addr16
shl
jbe
and
mov
xchg
stos
test
push
ss
jmp
push
cmps
add
push
cmp
bound
cmp
xchg
add
cwde
xchg
stos
adc
addr16
cmps
inc
mov
or
cwde
outs
mov
lock
jecxz
imul
data16
push
mov
add
(bad)
xchg
adc
popa
add
mov
aaa
xor
mov
mov
out
cmp
retf
add
mov
mov
add
push
jmp
ds
aam
jmp
inc
cmc
mov
mov
pop
or
enter
out
sbb
popf
jns
push
mov
push
and
je
and
jecxz
inc
or
fstp
sbb
inc
and
ret
inc
sar
dec
fucomip
arpl
pop
fstp
sub
cmc
das
aad
in
and
xor
out
push
jns
pop
cmp
xchg
xchg
xchg
aad
fcom
inc
fnstcw
aaa
add
lods
sbb
gs
(bad)
cmc
xchg
sub
adc
inc
adc
inc
pop
xchg
jle
xor
sbb
loopne
in
fcmovnbe
add
and
pop
fmul
icebp
subps
(bad)
dec
call
stc
xlat
mov
mov
gs
mov
sbb
xchg
pushf
js
sub
fs
mov
xor
and
(bad)
icebp
enter
mov
fs
pop
retf
jne
ja
pop
in
stos
jl
in
mov
mov
test
ror
loope
out
pop
pushf
mov
fsub
lock
push
cmp
xchg
iret
call
rcl
addr16
and
aas
ds
adc
fimul
shl
mov
sbb
and
jne
adc
rcr
mov
pop
je
xor
pop
sub
es
inc
(bad)
into
cmps
dec
pop
mov
sbb
das
sub
mov
ficomp
enter
in
stc
scas
int
inc
cmc
outs
xchg
mov
out
pop
push
loope
jo
pop
adc
mov
ss
xchg
mov
add
loop
add
push
xor
sub
repz
inc
and
push
rcl
inc
out
sbb
popf
and
jmp
sti
fisubr
fdivr
int3
jbe
cmc
lahf
retf
in
aaa
jns
out
xchg
(bad)
xchg
popf
push
std
test
ins
mov
(bad)
data16
add
and
mov
nop
aaa
jno
ja
lea
dec
inc
call
sbb
(bad)
xchg
sti
mov
mov
(bad)
and
xchg
lods
sti
repz
or
jmp
cmp
mov
cmp
or
std
mov
inc
and
inc
inc
nop
cmp
jo
mov
aaa
retf
shr
or
int3
mov
in
mov
mov
jbe
(bad)
sar
out
lds
xchg
pop
stc
mov
push
and
mov
lahf
mov
aas
shl
xor
jmp
or
dec
hlt
ja
leave
inc
dec
pop
repz
(bad)
clc
mov
ja
popa
ds
xchg
sub
dec
lahf
ret
and
pusha
sbb
cs
sbb
cld
(bad)
lea
adc
mov
ins
(bad)
lea
cmp
sbb
mov
ins
xchg
test
in
or
(bad)
call
push
inc
mov
adc
sub
mov
xor
mov
in
mul
je
lea
jae
sub
push
jns
call
repz
popa
or
imul
out
shr
ins
pop
mov
scas
push
das
retf
cmp
dec
popa
hlt
jbe
push
cmp
jb
inc
mov
push
int3
adc
adc
mov
xor
pop
stos
sub
xor
add
cld
enter
jb
arpl
bound
cmp
mov
mov
jmp
dec
fnstenv
cdq
(bad)
mov
mov
dec
mov
and
or
jl
mov
mov
fdivrp
test
jns
jmp
or
ds
dec
mov
fidiv
call
leave
adc
pop
or
imul
mov
ret
mov
sub
mov
imul
dec
mov
sub
(bad)
idiv
dec
imul
push
in
bound
pusha
cmp
out
mov
aas
imul
mov
movs
fst
sbb
dec
fldcw
xor
ins
jbe
cmps
xchg
mov
aad
mov
jecxz
xchg
adc
fdivr
dec
add
mov
lods
and
jle
jne
sbb
or
cld
mov
xor
sub
call
or
mov
mov
xor
push
cmp
(bad)
out
pop
dec
stc
mov
aaa
aad
sub
leave
xor
push
jle
(bad)
pop
or
shl
pop
add
mov
inc
lds
ss
xchg
mov
cli
pop
push
jno
push
arpl
mov
test
mov
mov
dec
mov
adc
add
and
mov
adc
adc
push
fimul
scas
addr16
dec
xchg
(bad)
and
aas
ficomp
sbb
push
inc
or
add
mov
arpl
adc
rcr
fmul
jmp
and
(bad)
(bad)
fcomp
mov
mov
inc
xchg
ficom
xor
int
aam
int3
lods
das
sbb
test
(bad)
sbb
jne
mov
jne
lock
mov
push
sub
push
and
cdq
inc
in
js
sar
dec
or
popa
cwde
int3
sbb
lds
aas
add
add
jmp
int3
loopne
push
mov
cmp
mov
cmps
mov
popf
xchg
shl
popa
imul
xchg
jecxz
push
pop
cs
cmp
stc
(bad)
aam
jl
cmp
adc
inc
popf
pop
mov
mov
cmps
mov
push
arpl
out
int
sbb
push
call
repnz
mov
test
(bad)
repnz
mov
scas
xor
cmc
out
enter
mov
in
pop
data16
sub
pop
adc
jp
call
cmp
xor
inc
mov
dec
loopne
in
movs
push
idiv
cmc
xchg
cmp
push
mov
cli
sbb
mov
mov
sub
out
inc
(bad)
das
fistp
mov
ins
in
cmp
pop
mov
push
inc
pop
mov
ins
call
dec
xchg
sahf
cwde
dec
(bad)
aam
or
add
clc
jle
sar
inc
jg
call
pusha
jae
adc
cmp
ins
pop
pusha
fldl2t
das
or
xchg
or
(bad)
clc
(bad)
pop
mov
js
jnp
inc
lea
pop
je
cmps
or
out
dec
mov
cmp
push
pop
fistp
mov
pop
push
gs
push
cmp
fneni(8087
sti
dec
into
mov
adc
pop
fwait
sbb
pop
popa
int
dec
mov
movs
jecxz
ret
mov
test
stos
inc
ins
aas
xor
push
aad
jo
xchg
loope
in
movs
or
dec
xor
jg
in
(bad)
jl
out
xor
or
popf
add
mov
repz
stos
add
mov
out
rol
addr16
xchg
jmp
add
daa
rol
jmp
push
push
nop
sub
adc
and
or
sbb
xlat
jno
inc
inc
pop
jmp
cmp
inc
or
push
pop
inc
pop
call
call
inc
in
push
pop
xor
xchg
ds
push
(bad)
lods
loope
out
xor
inc
ja
inc
fs
outs
jne
stos
mov
mov
and
sub
dec
sbb
inc
mov
sub
push
in
imul
aam
inc
hlt
inc
jo
sub
in
xchg
cdq
pop
xor
(bad)
addr16
inc
jbe
(bad)
hlt
sbb
addr16
pusha
fidiv
xlat
jg
mov
ret
cmp
aad
add
test
or
mov
and
sub
inc
dec
shl
sbb
ins
pop
sub
inc
lahf
out
popf
aam
fwait
cs
and
daa
jl
lods
cli
mov
in
idiv
(bad)
sbb
and
lahf
mov
push
js
cdq
or
loopne
dec
cmps
cdq
ret
clc
ins
inc
xchg
test
mov
mov
cli
loop
out
mov
outs
imul
push
xchg
(bad)
(bad)
push
adc
mov
pop
cmp
dec
cmps
add
add
ins
aad
xchg
arpl
add
jno
inc
outs
dec
aam
push
test
cmp
jecxz
in
dec
xlat
mov
mov
test
imul
in
loopne
hlt
inc
xor
leave
jns
je
test
lods
test
lea
repz
jnp
imul
sti
lods
or
in
es
popa
imul
in
mov
mov
lods
fst
xlat
push
cmps
pop
mov
add
cld
arpl
punpcklbw
js
adc
xor
lds
sub
or
repnz
mov
cs
call
push
xchg
loop
push
fwait
xlat
and
(bad)
test
xchg
lock
and
out
ss
stc
fild
lods
les
(bad)
xchg
xchg
fdiv
repz
add
xchg
dec
cs
std
jb
dec
sbb
xor
mov
cmp
retf
cwde
pop
pop
in
push
lds
sbb
push
push
push
sti
dec
dec
lahf
or
imul
idiv
ja
push
sbb
das
add
pop
push
pop
ss
ins
stos
scas
sbb
adc
enter
out
inc
lods
jo
push
mov
xchg
and
add
(bad)
pop
bound
and
xchg
dec
sub
adc
fimul
imul
not
aaa
scas
retf
dec
pop
jecxz
push
jmp
sti
pop
xchg
push
imul
fimul
push
stos
out
aas
test
in
jl
cmp
jecxz
loopne
out
push
out
add
rcl
lods
adc
push
jo
sub
pop
addr16
pop
pop
sar
or
mov
jmp
ret
jmp
cmp
push
les
inc
lock
(bad)
jbe
daa
jmp
jge
fcmovne
cmc
repz
cld
adc
cmps
adc
scas
adc
or
movs
daa
pop
pusha
xor
fistp
jle
or
push
inc
inc
js
lods
popa
das
test
mov
aas
aaa
lea
std
jae
xlat
xor
scas
into
jg
jbe
cwde
add
in
mov
scas
loop
jge
pop
mov
aaa
inc
daa
xor
or
and
add
inc
loopne
fist
inc
mov
push
or
ins
nop
(bad)
push
dec
arpl
and
dec
jecxz
out
jmp
int3
es
mov
daa
xchg
ss
or
push
in
cdq
int3
inc
xchg
sbb
push
sub
cwde
rcl
aad
hlt
add
cmp
outs
pushf
nop
xchg
out
fcomp
add
jl
loopne
sub
or
xchg
mov
outs
mov
(bad)
pop
retf
outs
adc
int3
pop
push
gs
jmp
pop
adc
imul
push
jb
(bad)
sub
sbb
fistp
jge
loope
cmp
xor
jo
jb
ret
and
leave
cmp
jecxz
in
leave
das
mov
adc
ffreep
cmp
mov
inc
mov
jno
sahf
dec
mov
mov
mov
and
out
bound
stc
idiv
mov
xchg
mov
aas
push
jmp
mov
inc
vpmacssww
aad
pop
cdq
scas
rcl
lods
into
movs
xchg
pop
shr
or
in
out
jp
mov
out
jmp
pop
(bad)
adc
rcl
je
xor
pop
ficom
arpl
fnstenv
lock
push
shl
sub
mov
inc
(bad)
pop
inc
xor
pop
stos
sbb
(bad)
int
clc
bound
sbb
(bad)
sbb
jb
inc
aad
sbb
div
retf
add
cmp
shl
fsub
sar
mov
mov
mov
and
sbb
outs
(bad)
mov
adc
iret
mov
jp
ficom
test
jns
adc
pushf
inc
mov
aas
pop
jg
add
pop
mov
dec
je
ins
out
(bad)
cdq
mov
stos
cmp
cmp
ror
jmp
sub
xchg
inc
and
sahf
or
lahf
movs
pop
pop
xchg
cdq
inc
scas
or
aas
push
mov
fmul
mov
dec
ins
in
les
cmp
test
lods
fwait
mov
mov
mov
mov
or
imul
pop
mov
cmp
inc
jg
cmp
add
fadd
dec
sub
dec
in
(bad)
mul
mov
into
jmp
out
in
scas
jecxz
inc
sar
pop
call
xor
jae
bound
js
push
shl
mov
rcr
or
jecxz
out
mov
add
xchg
pop
add
pop
xor
or
fidivr
mov
mov
cwde
jo
ins
pop
cmp
push
aaa
cli
push
ficomp
jl
stc
sahf
outs
jnp
nop
arpl
jmp
mov
xchg
lods
pop
daa
xor
fild
movs
sar
rol
sub
jp
xchg
test
rcl
pop
das
in
adc
adc
fbld
popa
cmp
or
movs
xchg
retf
cmc
icebp
mov
jmp
or
push
jge
xchg
retf
mov
pop
mov
adc
sbb
dec
jmp
xchg
dec
pusha
(bad)
jle
xchg
out
or
repnz
dec
push
rcl
pop
test
cli
jno
xchg
test
mov
sub
test
dec
ins
das
push
add
mov
xchg
das
repnz
(bad)
pop
xlat
icebp
ror
frstor
adc
xchg
cmps
(bad)
sahf
jne
out
dec
leave
aam
jmp
pop
int3
fild
inc
xlat
sub
push
std
stos
mov
repnz
shl
fidiv
jl
sub
dec
push
ins
popa
imul
loope
mov
dec
pop
xchg
jecxz
mov
mov
icebp
mov
mov
fs
sti
pop
mov
push
enter
mov
push
sar
push
(bad)
adc
xor
rcr
fs
jmp
or
int
adc
pop
pop
lds
jle
pop
es
mov
cmp
dec
push
fdivp
add
mov
(bad)
(bad)
ror
inc
cwde
std
sahf
mov
dec
sub
xor
xor
mov
retf
fcmovnb
addr16
test
pop
dec
cmps
shr
sbb
scas
jne
xchg
add
sar
scas
loop
adc
inc
clc
inc
les
xor
jmp
nop
mov
add
inc
mov
ret
mov
adc
xlat
dec
push
in
mov
cvttps2pi
xchg
mov
mov
stos
popa
stos
dec
imul
push
adc
or
mov
jmp
ret
or
daa
mov
add
int
into
cmp
and
test
xchg
mov
inc
outs
cmps
mov
cmp
mov
inc
xor
loopne
fdiv
lods
popa
test
(bad)
jns
mov
cmp
add
js
sahf
test
push
jnp
lods
loopne
push
movs
xor
jecxz
xchg
mov
cli
aas
and
ds
sar
push
cdq
idiv
and
loopne
ins
(bad)
gs
(bad)
jmp
out
test
mul
test
ins
mov
dec
mov
add
and
sub
ins
mov
rcl
dec
sbb
mov
push
pop
add
xchg
or
imul
cs
sahf
sar
mov
dec
xchg
in
mov
mov
jg
ret
pop
xor
xor
add
or
add
(bad)
stos
sbb
jge
dec
mov
sbb
into
jl
push
pop
mov
sbb
xor
sub
pop
jo
repnz
push
xor
rcr
jg
jp
adc
cmp
and
pop
add
pop
faddp
std
std
js
imul
pushf
add
jnp
push
ja
adc
imul
pop
loopne
dec
cmp
ins
fidiv
mov
push
and
leave
hlt
ins
mov
jg
xchg
fild
call
imul
es
push
adc
xchg
add
or
cmps
dec
es
add
aas
mov
cmp
rol
mov
xor
shl
xchg
cmp
mov
outs
jmp
jge
mov
(bad)
or
push
cmp
inc
je
mov
arpl
dec
add
sub
movs
and
xchg
movs
jnp
ret
add
int
in
and
mov
push
ror
ficom
adc
mov
imul
inc
stc
sub
movs
cmp
push
in
sbb
mov
add
repz
jnp
push
fild
xor
in
cmp
or
pop
add
outs
push
imul
push
or
dec
fistp
jne
sbb
cwde
fdivr
arpl
jge
adc
mov
(bad)
jnp
movs
mov
popf
retf
loop
mov
dec
sbb
sar
test
jno
ins
jnp
mov
lods
das
push
loopne
push
bound
scas
in
(bad)
into
push
pop
popf
mov
retf
loop
push
mov
test
xchg
sub
xchg
fcmovb
pusha
or
pop
push
dec
les
in
les
xchg
stc
in
sbb
inc
aad
adc
inc
push
inc
int3
aas
cmps
add
xlat
mov
retf
xor
aas
nop
jmp
adc
pop
xorps
sti
push
(bad)
cs
repz
adc
xchg
std
push
outs
jo
xor
mov
or
fld
jge
cmps
es
retf
xchg
push
push
mov
int
lods
out
or
adc
push
popa
addr16
ins
loop
pop
mov
cmp
loop
pop
and
jnp
cmps
in
mov
sti
hlt
sti
in
add
(bad)
cmp
rol
not
dec
hlt
jmp
mov
sbb
retf
push
ret
jmp
sub
add
ja
dec
fs
(bad)
xchg
cmc
xchg
test
pusha
popf
xchg
sub
aad
mov
mov
arpl
fwait
pop
mov
cmc
rcl
ins
aad
dec
jbe
mov
push
jo
push
rcl
fcmovbe
retf
(bad)
fcom
lea
scas
pop
sbb
int3
inc
lods
ja
xchg
rol
dec
jmp
jbe
jnp
nop
add
adc
out
rol
and
xor
nop
push
mov
(bad)
pop
jb
scas
ds
cwde
fidiv
lds
xor
jmp
mov
lock
repz
sbb
ficomp
inc
hlt
cwde
outs
mov
stos
dec
push
sub
(bad)
aas
movs
add
add
jle
out
sub
mov
jl
rol
ins
cmp
add
mov
push
mov
push
sub
ret
and
push
mov
xlat
lahf
icebp
mov
clc
sbb
rol
icebp
shr
popf
adc
data16
out
cmp
sar
push
cdq
iret
cmp
ins
ja
cld
xlat
cmc
xchg
in
mov
add
pop
movs
adc
shl
pop
dec
in
stos
mov
xchg
pop
daa
scas
mov
mov
dec
movs
cmp
sti
xchg
mov
jp
sub
(bad)
stc
jmp
pop
mov
fdiv
in
ins
call
adc
jecxz
call
gs
mov
xor
in
and
outs
imul
sub
and
stos
push
inc
sbb
cmp
jns
(bad)
fsub
mov
loopne
mov
add
ds
sbb
cmps
xchg
inc
aas
shl
push
sbb
mov
adc
jmp
(bad)
cli
int3
push
mov
(bad)
jns
pop
in
inc
fwait
mov
xor
in
lahf
pop
inc
push
nop
or
loop
cmc
jae
nop
mov
mov
lods
imul
ja
rcr
push
clc
idiv
push
mov
jae
push
mov
xchg
stc
mov
push
mov
inc
fcmovb
repz
jo
pop
lods
xchg
mov
dec
pop
xchg
xor
mov
sbb
fadd
add
sbb
mov
pop
idiv
inc
movs
es
or
cmovno
mov
dec
jne
sbb
lods
xchg
daa
jecxz
jns
inc
loop
add
cmps
add
add
mov
test
or
pop
fs
ffreep
div
neg
jp
int
push
test
lds
dec
xchg
and
pop
gs
ud1
xor
xchg
loope
(bad)
inc
adc
push
mov
adc
jnp
test
jno
outs
and
add
sbb
sub
into
popf
xlat
adc
psubd
out
xor
lds
mov
inc
jmp
lods
mov
push
sub
cmc
cs
ds
mov
add
push
add
cmps
inc
inc
repnz
ja
rcl
cmp
lods
sbb
pop
(bad)
ficomp
inc
add
ss
fwait
pop
sub
jmp
lahf
xor
test
fidiv
push
cli
js
and
cs
adc
mov
sub
adc
or
fdiv
xchg
sbb
shr
dec
mov
jmp
movups
jp
iret
lahf
in
fistp
icebp
xchg
dec
aas
cwde
fisttp
stos
jl
dec
or
push
adc
call
scas
fstp
aam
dec
fnstcw
(bad)
adc
sbb
mov
add
mov
inc
mov
mov
add
xor
jns
mov
xor
jno
xor
mov
jecxz
jae
movs
cmp
push
gs
or
imul
jecxz
clc
or
in
call
les
test
cmp
retf
lods
cmc
scas
stos
xchg
ss
dec
cmp
and
inc
iret
mov
(bad)
dec
sub
push
shld
and
inc
jg
ins
shl
jne
test
std
mov
cmc
je
mov
mov
adc
fld
mov
test
mov
mov
jg
inc
add
jecxz
and
cmc
(bad)
dec
push
inc
idiv
arpl
inc
jmp
xor
and
(bad)
cmp
add
and
xor
stos
mov
jno
add
fiadd
(bad)
clc
jne
ds
hlt
add
(bad)
mov
out
div
push
xlat
mov
adc
push
cld
sbb
stos
rol
repnz
dec
xor
aad
lods
cmps
neg
pop
push
xchg
inc
stc
xor
pop
mov
int3
call
or
add
mov
(bad)
sahf
jne
stos
(bad)
xor
icebp
xchg
mov
daa
dec
jo
jne
fiadd
xchg
cmp
jne
or
inc
ja
push
cmp
fs
das
inc
out
int3
shr
gs
pop
popf
cmp
mov
aad
daa
sahf
pop
sar
dec
pop
inc
sub
mov
nop
mov
outs
sahf
and
dec
mov
test
ja
sub
or
mov
jne
jmp
mov
fcom
dec
inc
mov
in
sbb
sub
adc
dec
enter
sbb
xlat
shl
mov
jecxz
dec
das
shl
pop
push
jo
into
mov
dec
xchg
bound
aam
popa
push
(bad)
mov
mov
fistp
fisttp
in
mov
cmp
mov
jae
lods
clc
loop
int
(bad)
inc
jmp
dec
and
lahf
lds
(bad)
std
push
in
arpl
rcr
push
sub
mov
cli
xor
mov
pop
cmp
inc
out
push
aam
ja
je
popf
jg
aas
movs
jle
in
inc
jl
mov
imul
jbe
dec
lea
dec
jae
cmp
movs
repnz
clc
lahf
adc
cli
push
fimul
mov
pop
jg
fldcw
mov
dec
cs
push
inc
ja
aas
mov
cmps
or
data16
add
fwait
xlat
xor
cmp
xor
clc
mov
cmovb
xchg
cmps
pop
jp
mov
push
and
scas
sub
sub
add
mov
and
xchg
xchg
sub
nop
cld
mov
sahf
push
inc
fnstsw
test
pop
arpl
pop
xor
leave
push
jl
adc
push
repnz
stos
push
(bad)
das
and
sbb
add
cdq
cmp
mov
sar
push
xchg
adc
shl
and
jns
push
jge
test
in
cmps
repz
cmp
push
adc
in
sbb
leave
push
pop
adc
les
sar
mov
scas
push
lock
fsubr
pop
popa
int3
and
bound
ret
ror
mov
repnz
fnstenv
push
pop
cmc
jl
jmp
add
or
in
pusha
or
mov
test
pop
push
fs
jnp
mov
js
jge
or
repz
fisttp
mov
(bad)
jno
pop
(bad)
xchg
cmps
stc
mov
inc
es
mov
mov
aam
daa
inc
mov
rcr
je
and
or
push
jnp
or
out
adc
sub
jmp
jbe
jmp
loop
jl
pop
pop
paddusw
jmp
scas
out
movs
bound
test
pop
(bad)
(bad)
mov
inc
addr16
gs
sub
daa
rcr
retf
iret
jge
jo
(bad)
test
(bad)
loopne
push
imul
adc
inc
rcl
jmp
das
es
aas
sub
fwait
push
ret
sub
aaa
pop
dec
lock
cmc
sbb
jmp
dec
add
cmp
ds
icebp
sbb
aas
stos
dec
add
aaa
fs
fcmovnu
cdq
in
pop
sub
ret
pusha
cmp
je
jp
mov
loope
std
adc
cwde
(bad)
inc
ror
dec
push
or
repz
push
loopne
scas
pop
in
das
add
and
repz
sbb
dec
je
sar
test
sti
sub
in
rol
sti
repz
sar
mov
mov
fstp
lea
cmp
pop
outs
fst
(bad)
popa
cld
icebp
sbb
mov
inc
out
movs
sbb
or
sahf
jmp
xchg
mov
inc
mov
into
stos
xor
mov
mov
push
push
out
movs
loope
test
xor
mov
sub
cld
outs
and
(bad)
neg
addr16
adc
fadd
push
lods
and
push
jge
push
in
jmpw
ja
cmps
and
mov
(bad)
out
pop
add
xor
push
repnz
cmp
jp
or
pop
rcl
pop
aam
and
popa
and
test
sar
adc
cmp
out
shr
mov
xor
cmp
mov
ret
fcomp
retf
mov
xchg
popa
or
dec
pop
sub
cmc
add
jnp
mov
pop
mov
fwait
test
push
dec
mov
jae
outs
jecxz
dec
daa
add
adc
ret
shl
push
in
je
xchg
repnz
sbb
(bad)
mov
or
add
push
pop
mov
add
mov
sti
in
sbb
mov
jbe
mov
mov
push
mov
sahf
fucom
and
fiadd
lea
xchg
test
je
sbb
stos
jnp
jge
mov
mov
clc
gs
mov
pushf
push
ficomp
jmp
gs
jl
popa
jmp
mov
repz
lea
ror
push
popf
in
xchg
add
cld
cmp
pop
adc
pop
ds
push
cmp
in
ins
sub
pop
leave
cdq
jmp
push
pusha
inc
shl
sbb
cmps
or
cmp
lahf
push
pop
xchg
or
xchg
(bad)
pop
ret
out
fidivr
loope
jmp
mov
pop
mov
into
push
stc
gs
ret
aaa
dec
or
rcr
pop
icebp
in
xchg
addr16
into
dec
xor
(bad)
or
shl
adc
mov
aam
cmc
adc
inc
loopne
sub
(bad)
xchg
scas
or
std
jae
sbb
pop
xchg
iret
out
outs
dec
mov
aam
adc
jmp
adc
xor
mov
retf
aaa
std
push
inc
call
shl
xor
mov
hlt
mov
stos
jle
sbb
(bad)
ins
ss
gs
adc
xchg
dec
sub
jmp
mov
(bad)
sbb
hlt
jmp
rcl
loope
jmp
(bad)
rcr
xor
mov
mov
push
jmp
test
push
(bad)
pusha
hlt
cwde
(bad)
stc
pop
rcl
ins
or
xor
cmp
pop
leave
mov
sub
dec
cld
jl
add
fcom
pusha
fidivr
loopne
fucomi
in
aam
call
push
icebp
adc
aam
call
loop
lea
add
add
sub
add
push
pusha
call
clc
lahf
dec
or
add
rcr
hlt
ss
bound
fcomp
paddusb
add
mov
shl
and
hlt
adc
(bad)
lock
xor
xchg
fild
add
jle
stos
add
test
push
sub
inc
stos
add
cwde
loop
sub
xor
leave
loope
xor
xor
mov
ret
ins
mov
jg
sbb
xchg
adc
dec
push
sbb
pop
daa
cmp
jmp
cmps
sahf
cs
daa
or
sub
mov
mov
ret
dec
je
and
ret
pop
add
movs
ss
(bad)
stos
in
in
and
xchg
out
jnp
lods
sub
repz
xor
push
xor
cmp
sti
imul
adc
inc
push
dec
jbe
in
adc
hlt
adc
aas
and
lods
mov
pop
push
lds
test
push
(bad)
xchg
and
sub
lods
cld
popf
fcom
xor
inc
xchg
fwait
popa
adc
pusha
xchg
dec
sbb
xchg
in
cdq
push
rcl
(bad)
lahf
pop
or
push
cmp
xor
jo
call
jns
xchg
je
pop
loop
cs
add
jp
cs
enter
dec
xor
fwait
sub
daa
and
cmc
mov
(bad)
clc
add
stos
mov
push
ficom
and
jmp
cld
mov
iret
jbe
(bad)
dec
ds
bound
adc
(bad)
xchg
fwait
es
push
loope
hlt
mov
or
cmp
add
dec
mov
jns
fadd
mov
out
mov
sar
call
stc
jne
mov
inc
lods
jmp
xchg
cmp
sbb
pop
mov
mov
mov
lock
sbb
mov
and
or
test
scas
and
add
sub
jnp
pop
push
lods
cmp
dec
shr
jge
mov
push
jp
idiv
(bad)
jns
pop
mov
(bad)
repnz
mov
mov
lods
inc
cld
jmp
lea
sub
add
xor
mov
loope
jmp
lock
aas
gs
push
call
adc
mov
mov
xor
ins
xchg
mov
call
mov
lods
pop
jg
divps
mov
mov
fucomp
popa
mov
pop
mov
dec
and
pop
fnsave
xor
ja
and
mov
ror
push
inc
sub
out
xor
jns
aaa
arpl
pop
pop
ret
aad
inc
mov
inc
sub
clc
div
mov
cmp
or
in
test
enter
jno
in
jecxz
js
push
push
push
mov
xchg
mov
mov
inc
push
dec
test
inc
xor
or
ins
out
push
fiadd
add
sbb
rol
xor
clc
iret
ins
cmp
(bad)
clc
aaa
push
out
stc
push
adc
mov
aaa
rcl
mov
(bad)
test
mul
fstp
pop
gs
and
(bad)
gs
movs
cs
stos
and
jne
ret
jg
mov
movs
les
jmp
xchg
imul
icebp
xor
xchg
imul
aam
pop
mov
je
mov
adc
int3
cmc
gs
call
pop
jge
fiadd
xlat
stos
add
jb
add
pop
mov
nop
sbb
in
and
(bad)
pop
inc
stos
or
call
lahf
xor
(bad)
imul
adc
sbb
mov
aaa
int
test
or
lods
sub
pop
adc
imul
dec
jge
sahf
not
push
test
(bad)
cmp
aaa
add
clc
sbb
jbe
sbb
add
and
pusha
xor
test
fist
pop
jecxz
aad
(bad)
lock
jmp
or
or
jg
sbb
inc
test
sub
or
cmp
add
jmp
push
lea
aam
jmp
out
adc
xor
xor
mov
sbb
jge
scas
les
es
retf
jnp
out
in
dec
mul
dec
push
adc
mov
leave
pop
cmp
into
inc
mov
dec
test
inc
and
push
es
pop
inc
sub
xchg
cmp
add
out
pop
setae
mov
jge
loopne
mov
int
sub
adc
jno
scas
les
sbb
ss
pusha
xchg
outs
mov
rcr
or
push
movs
cmp
div
pop
ficomp
and
clc
sbb
std
cmp
sti
adc
je
lods
dec
ins
clc
fld
or
popa
adc
add
mov
push
and
mov
dec
dec
mov
movs
fnstcw
imul
shr
mov
mov
mov
cdq
xchg
daa
add
je
dec
adc
sti
bound
(bad)
jmp
xor
jo
fsubr
pop
shl
int
or
xor
call
mov
loop
lahf
je
jno
ds
movs
lds
pop
inc
movs
enter
and
icebp
push
fst
xchg
mov
cmp
cwde
adc
dec
jp
add
jecxz
scas
pop
inc
test
loopne
fdivrp
icebp
cdq
dec
cdq
adc
in
fisttp
jge
jne
xchg
mov
cmps
in
inc
jno
test
or
(bad)
sbb
or
cmc
(bad)
xor
ret
jae
cld
push
mov
jae
aas
lock
ret
xor
add
add
imul
cmps
sbb
cmp
xchg
das
mov
mov
in
jns
adc
bound
jmp
lods
and
push
loope
mov
ret
pop
dec
sub
xor
sbb
lock
sahf
addr16
xchg
inc
jg
in
(bad)
and
cmps
cli
ud1
int
out
in
jge
sbb
xor
cmovno
loop
xor
pop
xchg
push
pop
adc
xchg
aas
imul
inc
sub
pushfw
inc
inc
repz
mov
mov
cs
rcl
mov
xchg
xor
in
mov
mov
add
push
add
cmc
call
and
sub
in
sub
mov
outs
mov
std
fst
jg
sbb
in
mov
dec
jge
mov
repz
fnstsw
call
not
fdiv
inc
rcl
arpl
repnz
xchg
mov
(bad)
sbb
mov
lahf
(bad)
xlat
ficom
lahf
xchg
in
gs
mov
nop
mov
ins
outs
dec
loope
mov
add
adc
jno
mov
sar
push
inc
sub
add
pop
shl
mov
cmc
mov
int3
outs
cmovno
cmp
lock
jae
fidivr
(bad)
ins
and
mov
aaa
nop
xchg
adc
mov
push
pop
and
(bad)
mov
sbb
addr16
jae
mov
mov
int3
int
mov
jp
xor
in
shl
ret
push
mov
add
popa
test
int
add
add
sub
push
pop
sub
fist
jecxz
push
test
sub
add
xchg
out
adc
adc
jo
scas
or
fisub
jl
adc
or
push
mov
sub
dec
jp
and
xchg
xor
sub
push
and
jg
test
and
test
xor
add
xchg
mov
sbb
lock
xor
retf
(bad)
inc
out
divps
inc
jbe
je
ror
es
push
aam
xor
sub
mov
jg
es
js
mov
mov
lahf
je
pop
std
(bad)
and
jae
lea
movs
mov
arpl
dec
lahf
jno
loope
mov
jne
sub
(bad)
cs
lock
cmp
lods
inc
test
mov
cmp
mov
xor
pop
loop
inc
jecxz
sti
push
in
aam
les
mov
int
fldl2e
mov
pop
in
ja
lds
pop
push
pop
dec
test
and
xor
cwde
mov
xchg
push
inc
popf
xor
cmp
inc
mov
pop
ja
inc
mov
ins
push
push
or
ds
pop
call
cmp
rcl
add
adc
repnz
loope
inc
fisub
data16
mov
pop
arpl
cmp
pop
pusha
mov
outs
cmp
in
jns
shl
fimul
xchg
in
out
xor
retf
xchg
mov
push
jecxz
cmp
jl
leave
push
mov
sub
ficomp
imul
mov
in
ins
stc
adc
in
into
jno
pop
sbb
mov
inc
test
in
sbb
imul
cmp
mov
or
push
ins
in
call
dec
out
clc
stc
lods
loope
sub
adc
mov
xor
xchg
and
xor
movs
clc
ret
xchg
adc
and
popa
lahf
mov
adc
jp
add
or
ins
mov
mov
or
outs
jno
or
aaa
es
dec
inc
repnz
hlt
out
pop
nop
inc
add
lods
sub
jge
mov
sub
outs
mov
inc
arpl
ss
add
or
fs
dec
ret
fnstsw
push
sub
aam
sbb
xor
fisttp
sub
jmp
loope
enter
xchg
in
push
cmp
std
push
sbb
xor
pop
xchg
dec
push
mov
mov
fistp
pop
shl
jecxz
push
and
punpcklbw
or
mov
fadd
mov
ror
stc
clc
add
ficomp
inc
cmp
scas
add
add
mov
sahf
movs
and
push
shr
adc
(bad)
outs
retf
inc
das
test
fs
icebp
dec
clc
loope
lods
jge
pop
lock
dec
pop
popa
jp
dec
and
leave
push
mov
pop
mov
push
jmp
and
pop
mov
cli
and
lea
fiadd
mov
or
cmp
ficomp
push
mov
test
sbb
jb
dec
mov
cmp
mov
pop
mov
pop
push
js
push
xor
pop
or
cmp
push
and
sbb
mov
push
fadd
ss
sub
imul
mov
mov
mov
pop
jae
mov
sub
(bad)
in
mov
test
std
xor
rcl
out
clc
test
xchg
fst
js
dec
lea
push
pop
and
lock
popa
push
mov
lods
mov
adc
sahf
das
mov
mov
cmps
mov
add
xor
lods
icebp
pop
xor
or
adc
call
loop
pop
adc
adc
arpl
inc
lahf
ret
inc
dec
loop
jge
out
dec
cmc
adc
xchg
inc
fwait
mov
dec
cmp
jo
jl
xchg
je
xor
lds
sub
(bad)
pushf
daa
dec
mov
xor
mov
add
adc
and
mov
inc
scas
pushf
mov
int
pop
(bad)
dec
lods
iret
imul
sahf
daa
xor
test
xchg
ja
adc
sbb
xor
(bad)
mov
nop
adc
sbb
cmp
iret
push
in
cmps
aad
inc
scas
jmp
sbb
mov
mov
sub
xor
mov
sub
js
shl
push
ror
push
cwde
sbb
into
pop
sbb
imul
rol
dec
ds
dec
xor
retf
stos
scas
and
nop
mov
shl
mov
or
into
loope
retf
jmp
(bad)
in
cmp
inc
push
scas
mov
xchg
xor
cld
jg
aam
jbe
imul
mov
ret
fwait
push
(bad)
call
in
push
inc
cmps
and
repnz
cli
aad
push
ins
xor
jge
cmps
fstp
adc
pusha
adc
push
(bad)
rcr
(bad)
lds
out
cdq
or
adc
out
test
inc
xor
jmp
test
lea
in
xor
scas
mov
adc
stc
add
in
loopne
and
(bad)
jb
push
fcomp
es
xor
test
addr16
xchg
lods
add
mov
pushf
pop
das
dec
imul
mov
cmp
sbb
pop
retf
cli
push
mov
cmc
cs
imul
fmul
inc
sub
jb
scas
pop
daa
pop
xchg
ds
jle
aam
add
sub
xor
push
or
mov
stc
sub
add
push
mov
call
(bad)
mov
stc
and
popf
out
fisttp
xchg
jle
or
call
int
das
add
cdq
mov
loop
sbb
cmp
sar
adc
add
nop
mov
rep
loop
popf
add
aad
sub
movs
clc
lods
(bad)
ins
inc
loope
dec
xchg
mov
in
loop
jecxz
dec
mov
add
push
ins
imul
fwait
in
cmp
out
jno
and
pop
out
call
xchg
xor
inc
and
cld
xchg
pop
aaa
xchg
bound
mov
shr
pusha
and
sahf
cmp
push
or
aad
enter
ror
jle
popa
add
and
pushfw
es
sub
and
arpl
dec
(bad)
mov
ret
aad
cs
push
jge
gs
mov
or
inc
mov
pop
pop
and
sub
sbb
popa
shr
bound
jmp
sub
or
mov
movs
cmp
adc
inc
loopne
adc
sub
outs
cmp
pop
call
inc
lods
sbb
cmp
pop
data16
and
test
fnstsw
inc
mov
sbb
mov
imul
(bad)
out
adc
jle
ins
in
and
pop
dec
push
mov
sbb
adc
adc
dec
jle
cli
cmps
ret
jle
mov
dec
pop
cs
popa
enter
mov
ffreep
and
aad
stos
mov
jbe
adc
in
ss
mov
xor
mov
shl
xchg
mov
shr
add
mov
(bad)
xchg
cli
sub
xor
push
test
sbb
mov
jb
sub
out
stos
das
xchg
jno
ds
int
xchg
fidivr
xbegin
lahf
mov
call
inc
adc
pop
fstp
sbb
sub
movs
adc
xchg
mov
fwait
push
repz
jmp
lds
sbb
mov
cwde
adc
xchg
mov
out
aam
mov
test
push
mov
cmp
inc
adc
outs
sbb
ficomp
jbe
or
scas
mov
ja
dec
xor
and
pusha
movs
pop
xchg
lods
sub
addr16
push
or
mov
mov
test
clc
adc
mov
(bad)
mov
ftst
xchg
cdq
cmp
(bad)
dec
xchg
xchg
add
push
adc
sti
jecxz
sbb
icebp
addr16
or
popa
loop
out
call
xchg
pop
mov
mov
fwait
pop
mov
inc
cmp
or
lahf
fcmove
(bad)
adc
sub
mov
mov
retf
vrsqrtps
pop
les
cmp
dec
xlat
loope
mov
in
mov
cmp
lock
jge
add
cmps
ins
out
outs
xchg
dec
movs
cli
sbb
dec
jle
jno
push
aad
jns
loop
cs
popf
mov
inc
clc
ds
xchg
gs
cmp
xchg
add
pop
xchg
(bad)
and
mov
pop
pop
bound
std
xor
cli
xor
iret
and
cmp
(bad)
into
sub
mov
add
xchg
aam
adc
retf
inc
cmp
xchg
add
nop
or
mov
jb
xchg
sub
jge
stc
(bad)
dec
clc
mov
sahf
data16
adc
les
lahf
mov
pop
sub
cmp
not
dec
lods
dec
mov
cmp
jp
and
mov
ret
movs
pushf
adc
adc
stos
mov
mov
xor
retf
movs
scas
stc
add
jge
sahf
cmp
std
or
lahf
test
(bad)
push
aas
jmp
xchg
add
push
(bad)
inc
sbb
pop
out
dec
pop
sub
sub
pop
mov
cmc
out
mov
hlt
movs
and
adc
and
mov
add
add
push
std
es
lahf
mov
pop
inc
push
adc
cmps
mov
push
xor
js
dec
inc
rol
pop
les
mov
push
mov
inc
pushf
(bad)
cmp
icebp
test
es
sar
out
mov
psrld
cdq
jmp
or
jecxz
mov
jno
pop
test
inc
jle
push
out
scas
cmp
fdiv
loopne
movs
sub
es
mov
pop
sub
movs
push
fnsave
adc
inc
mov
or
rcl
and
push
jno
shl
lahf
es
sbb
mov
push
sti
scas
xchg
mov
sbb
sub
div
(bad)
fisubr
sbb
push
pop
call
stos
out
jne
xlat
loop
mov
inc
and
adc
cli
fisubr
and
std
xchg
std
daa
mov
mov
cmp
mov
inc
sbb
cmp
lods
jmp
fsubr
mov
sbb
cmp
pop
mov
push
jno
fild
or
retf
test
cmp
dec
cmp
xor
stos
cmps
adc
ds
popf
cmp
sahf
mov
or
dec
fwait
and
iret
cmc
ret
test
push
mov
pop
mov
fldenv
mov
inc
adc
lds
(bad)
cmp
dec
cdq
cmps
mov
dec
mov
arpl
fist
jo
mov
pop
cmps
xor
push
xchg
(bad)
mov
sbb
cwde
xchg
pop
xchg
out
movs
jp
pusha
repz
sub
stos
adc
or
clc
or
inc
lahf
inc
mov
fwait
pop
movs
fiadd
shr
xlat
fild
lock
cmp
xor
in
addr16
jo
repz
hlt
icebp
div
enter
or
test
dec
arpl
xor
ror
or
je
and
bound
frstor
mov
sub
aad
pop
out
jae
xor
out
mov
inc
pop
ja
shl
pop
pop
pop
test
sar
inc
pop
adc
jno
imul
mov
test
nop
push
jbe
jp
sub
xchg
push
fstp
mov
mov
outs
adc
ror
sahf
sub
jne
(bad)
sahf
pop
push
and
sbb
rol
or
mov
cmp
push
add
dec
dec
cs
sahf
xlat
cmc
jbe
div
mov
xchg
or
add
add
cwde
enter
add
adc
push
xor
jno
pop
cld
mov
test
and
push
add
inc
shl
jb
mov
jg
push
jg
adc
daa
adc
cs
ror
dec
addr16
mov
xchg
xchg
cmp
sbb
outs
sbb
lods
pop
cmp
in
js
ss
adc
fsubr
xchg
icebp
daa
fiadd
stos
cwde
add
int
sbb
cmp
push
inc
in
mov
outs
lahf
popa
sub
jno
rcl
shl
into
jp
push
hlt
add
xor
and
push
adc
mov
ror
sti
jbe
inc
rcr
hlt
cmp
addr16
popa
rcr
clc
int
sub
jp
cmps
lods
xchg
pop
dec
push
dec
(bad)
sahf
in
inc
or
inc
adc
cli
add
mov
sub
in
out
mov
pop
xchg
pop
stos
push
cli
gs
retf
into
push
out
adc
or
into
mov
and
in
adc
dec
xor
mov
setns
add
sbb
imul
push
daa
lods
rol
pop
cli
dec
sub
push
retf
and
jo
ss
pop
test
push
scas
loope
xor
add
aad
retf
ins
xchg
push
sbb
or
xor
mov
pop
(bad)
pop
pop
call
xor
dec
iret
or
cmps
xchg
aaa
add
int
invd
or
sbb
pop
and
shl
rcl
pop
loop
bnd
adc
mov
retf
nop
mov
inc
cmps
push
dec
or
add
and
sbb
fcmovb
(bad)
mov
cmp
sbb
jne
dec
mov
xor
xchg
or
push
ret
xchg
mov
data16
cmp
xchg
popa
daa
rcr
and
cld
enter
push
rol
aas
clc
enter
sub
sub
mov
sbb
stos
test
test
inc
pop
cmps
jb
inc
xchg
div
rol
sar
adc
mov
test
mov
aaa
mov
mov
and
les
es
xchg
sbb
mov
jmp
sub
inc
into
push
scas
pop
(bad)
ds
pop
sahf
(bad)
push
and
dec
(bad)
pop
fld
retf
adc
sbb
test
inc
adc
leave
cmp
cmps
stc
aam
out
fst
jmp
mov
cs
sbb
das
xchg
fcmovne
mov
bound
push
mov
jnp
mov
mov
add
and
mov
and
enter
ds
push
dec
dec
add
and
mov
push
iret
ret
cli
adc
push
dec
jmp
fcomi
mov
out
xchg
test
rcr
lds
inc
js
in
loopne
scas
(bad)
jnp
xor
mov
movs
xchg
push
fmul
rcl
fst
nop
(bad)
repnz
lock
scas
cmps
inc
mov
cmp
dec
and
cmp
push
in
bound
loopne
cld
jb
sub
fneni(8087
push
and
inc
cld
scas
sbb
push
js
pusha
out
outs
and
popa
jnp
popf
shl
pusha
(bad)
ret
mov
pop
jecxz
out
push
push
not
lds
bound
jae
data16
mov
aad
cmp
push
fbstp
iret
stos
lods
mov
push
pusha
ficomp
adc
scas
frstor
cmp
xchg
sbb
push
jp
(bad)
sti
jge
push
xchg
in
cmp
inc
xor
dec
mov
mov
int3
inc
mov
aas
or
in
sbb
add
ins
addr16
pushf
cmp
inc
fwait
jnp
xor
cdq
repz
xchg
in
xchg
mov
sbb
push
ds
jo
xchg
add
push
mul
cs
les
adc
mov
sbb
cmc
sbb
pop
dec
add
xchg
hlt
arpl
daa
adc
pop
mov
jmp
arpl
and
scas
mov
jno
sub
test
jl
lds
or
ss
cmp
arpl
cmp
mov
jmp
dec
xchg
repz
add
inc
aam
daa
jle
repz
mov
mov
and
cwde
imul
lods
inc
ficom
mov
ja
push
imul
arpl
int3
dec
test
and
push
je
adc
aam
jae
dec
xchg
dec
dec
pop
cmp
jmp
mov
test
fwait
xchg
xlat
ds
iret
mov
loop
mov
adc
xor
jno
cmp
rcr
inc
or
mov
pushf
ins
adc
jns
mov
aad
jae
test
(bad)
fwait
mov
bound
aas
push
outs
pop
cdq
jbe
mov
sub
sub
paddd
int
mov
dec
push
push
pop
jbe
imul
ret
sbb
ret
(bad)
movs
push
out
mov
xor
mov
enter
push
rol
lods
int
mov
cmp
and
mov
into
and
adc
push
pop
loope
fistp
xchg
dec
adc
enter
test
std
xor
call
xor
mov
jbe
or
daa
loop
cmps
mul
and
call
fsubr
sub
ja
cs
aam
sbb
jns
pop
shr
pop
push
xchg
pop
lods
in
hlt
stos
imul
rcr
sbb
and
dec
jns
mov
lahf
sar
xor
imul
cmps
inc
push
sub
inc
iret
xchg
push
aad
add
mov
das
sbb
mov
pop
out
cli
mov
xchg
adc
dec
ins
pop
dec
in
jecxz
mov
and
push
xchg
lods
in
mov
xchg
daa
stos
push
jmp
xor
ret
jge
mov
inc
mov
push
(bad)
fadd
xchg
push
xchg
dec
pop
xchg
loope
jp
and
retf
inc
cmps
sbb
mov
sub
cmp
pop
adc
xchg
shl
(bad)
cmps
cmp
dec
xchg
pop
bound
retf
outs
mov
je
aaa
xor
test
pop
hlt
and
dec
mov
pop
in
div
int
cld
movs
cld
inc
out
and
dec
dec
pop
and
mov
mov
(bad)
fdivr
idiv
jnp
(bad)
cmp
mov
inc
sub
jg
jbe
dec
fnstsw
dec
movs
adc
call
in
pop
xchg
mov
add
jnp
in
cmp
adc
dec
push
mov
xchg
mov
lds
jle
sub
enter
mov
dec
push
fnstcw
sbb
xchg
loopne
not
dec
push
cmp
sub
pop
aad
inc
aas
sti
int
xor
xor
and
bound
daa
mov
aad
jecxz
in
sbb
outs
js
out
xor
ss
js
out
ficom
lahf
(bad)
je
inc
ret
mov
jae
xchg
or
mov
cmp
mov
aas
pop
stc
xchg
inc
mov
add
pop
sbb
jmp
mov
and
and
push
sbb
(bad)
adc
enter
jl
cwde
movs
or
mov
or
int
(bad)
fst
dec
push
mov
and
cmc
mov
test
sar
mov
inc
sub
into
les
inc
or
adc
outs
fisub
fdivr
jmp
xor
pop
test
rol
js
jbe
addr16
movs
and
lock
cmps
pushf
xchg
test
jge
push
jg
out
and
pop
and
jg
clc
cdq
(bad)
ror
cmp
and
inc
fimul
push
jne
(bad)
pop
loope
xor
shl
je
pop
push
out
dec
xchg
test
or
adc
and
retf
mov
jb
sbb
inc
(bad)
(bad)
pop
push
jo
mov
rol
mov
fdivrp
xor
jecxz
mov
loope
int
adc
add
mov
push
pop
loope
mov
repz
aaa
aaa
(bad)
jbe
popa
jnp
and
test
mov
push
mov
clc
push
cmc
div
call
pusha
mov
lods
cdq
into
xor
(bad)
jl
stc
call
popa
sub
cwde
mov
sub
in
fdivrp
dec
xchg
ret
cmp
push
inc
add
stc
retf
adc
lds
imul
jge
ds
cli
cmp
ret
jg
lea
int
mov
jl
out
sbb
(bad)
lea
mov
push
ja
fs
shl
or
push
shr
pop
cmp
hlt
fsub
ss
pushf
daa
aaa
mov
shl
add
xchg
xchg
aaa
push
lds
dec
pop
push
dec
int3
sub
mov
mov
lods
outs
push
xchg
(bad)
adc
push
in
push
bound
cmp
out
xor
jb
fwait
stos
mov
ds
in
ret
cld
push
inc
mov
xchg
stos
mov
cwde
out
xchg
aaa
(bad)
push
movs
cwde
and
jge
inc
jo
ins
xchg
pop
dec
sar
mov
(bad)
leave
cwde
inc
fwait
mov
add
jne
sub
sbb
mov
jnp
scas
xor
fbstp
sbb
ss
push
mov
pop
mov
jne
push
test
adc
pop
das
dec
das
push
dec
and
ret
xor
iret
and
or
rcr
push
jae
cwde
cli
xchg
push
add
lea
mov
mov
(bad)
int3
and
cwde
outs
(bad)
in
das
dec
(bad)
out
add
aad
lds
sub
adc
or
rol
pop
int
daa
jmp
pop
mov
mov
add
cs
sub
xor
mov
adc
(bad)
fcom
mov
fiadd
xchg
retf
ret
xor
push
ins
mov
aas
cmps
into
pop
stos
add
mov
bsr
cmps
dec
fwait
aad
mov
ins
adc
add
mov
arpl
fs
pop
fdiv
push
sbb
arpl
ins
jg
mov
out
cmp
pop
(bad)
fs
dec
aam
dec
test
sbb
pop
aaa
ficom
jle
inc
retf
sbb
ja
bound
dec
xor
aas
fcmovnu
dec
les
mov
test
jne
and
loop
or
jns
aaa
jno
mov
xor
pop
push
rcl
das
rol
pop
mov
stc
cmp
aaa
or
out
push
mov
jp
pushf
loopne
cmc
retf
adc
jbe
icebp
out
scas
add
stos
push
idiv
jnp
iret
ss
add
sbb
enter
adc
lds
loope
inc
pop
pop
enter
retf
psadbw
xor
cdq
stc
repnz
pop
or
mov
loopne
xchg
xor
mov
div
bnd
int3
fisttp
sbb
or
test
retf
and
das
cs
ja
and
and
cmp
add
retf
imul
repnz
adc
imul
mov
mov
in
mov
shl
call
out
xor
bound
sub
mov
fist
push
cwde
fucomi
(bad)
std
mov
mov
loope
jno
int3
mov
cmps
iret
fcom
sub
loop
cmc
sbb
and
movs
jae
xor
loope
adc
fnstcw
cdq
jle
cmp
fisub
mov
je
sbb
cs
add
out
xor
mov
shr
adc
dec
or
js
pop
out
add
cdq
in
inc
xor
outs
jmp
retf
adc
dec
test
lds
xchg
int
pop
aam
cli
in
jno
jae
sub
pop
repz
into
scas
mov
mov
cdq
sub
or
dec
mov
xor
sub
xchg
xor
ror
ret
in
pushf
idiv
inc
aam
mov
out
adc
jae
aam
fwait
dec
pop
sub
enter
xor
test
push
push
inc
jle
sahf
adc
dec
rcl
shl
push
outs
aad
sar
sub
cwde
fist
jae
dec
out
sar
cmps
outs
test
push
dec
push
mov
into
nop
lods
cli
shl
loopne
push
aas
and
sbb
mov
movs
mov
jp
pop
fdiv
mov
mov
imul
mov
jae
fdivr
xchg
push
lock
cmp
mov
lods
add
jb
xor
call
mov
pop
mov
pop
mov
jo
loop
lods
jecxz
mov
sar
adc
inc
out
push
or
mov
xchg
mul
mov
sub
add
leave
inc
daa
int3
add
out
xor
or
pusha
mov
jge
jns
add
(bad)
pop
stc
inc
sbb
push
bound
lods
mov
in
lea
cmp
imul
mov
fwait
das
(bad)
sbb
mov
mov
ja
lods
xor
mov
fisub
inc
mov
cdq
push
pop
mov
adc
sub
add
pusha
ins
sbb
xchg
jno
sbb
sub
or
adc
loopne
mov
xor
pop
in
xchg
(bad)
lea
ret
inc
std
inc
mov
xchg
fdivr
jmp
mov
jp
das
mov
std
repz
and
cmp
loopne
cmps
inc
loopne
and
imul
pop
cmc
cdq
mov
adc
push
and
fwait
sub
xchg
cmp
cmps
sti
push
rcr
or
aas
dec
mov
inc
hlt
mov
inc
add
popf
shl
cmp
sub
or
int
paddw
and
inc
out
adc
fidivr
or
push
(bad)
dec
push
scas
lods
enter
fld
(bad)
cmps
jmp
add
jle
jmp
ins
pop
xor
cmps
(bad)
jnp
ins
mov
scas
ret
out
mov
mov
push
pushf
movs
imul
popf
cmp
loopne
je
test
xor
or
jecxz
popa
loop
addr16
jecxz
ss
inc
ja
clc
ror
dec
jle
xchg
lds
adc
xchg
scas
pop
mov
inc
push
cmps
and
mov
repz
sub
mov
ins
daa
pop
(bad)
sbb
and
(bad)
ja
(bad)
inc
jmp
adc
pop
imul
das
xor
icebp
enter
mov
je
jae
inc
xchg
adc
imul
sbb
push
push
push
sbb
aas
repnz
mov
sbb
sbb
mov
inc
test
sub
dec
adc
jg
push
lods
out
lods
stos
movs
(bad)
out
xchg
(bad)
dec
fst
dec
and
repnz
nop
out
inc
stc
cmp
xchg
sub
and
in
push
push
mov
adc
pop
sbb
push
cmp
clc
mov
retf
jno
sbb
aad
call
or
fsubr
or
mov
dec
nop
movs
mov
pop
jb
(bad)
cmp
jno
dec
idiv
mov
xchg
fwait
aaa
sahf
mov
adc
int
out
sahf
(bad)
sbb
or
push
and
inc
mov
loopne
and
not
ins
aad
lds
cwde
cmc
cmp
inc
xor
(bad)
cmps
ficom
inc
dec
jecxz
out
push
cs
adc
inc
movs
es
or
ret
pop
sbb
(bad)
sbb
mov
es
scas
ror
or
pop
div
xchg
ffree
rol
dec
xor
fcomp
int3
ret
int
nop
and
xor
in
mov
scas
jecxz
cmp
inc
(bad)
cwde
jno
xchg
(bad)
adc
jne
xchg
dec
in
dec
aad
dec
arpl
pop
sahf
xor
push
outs
jmp
pop
inc
repz
xchg
repz
popa
and
aam
mov
pop
addr16
cmp
push
loop
fadd
in
push
mov
imul
out
dec
std
push
mov
push
mov
mov
xor
popf
xor
jb
sub
xchg
leave
add
cmp
and
or
cmps
and
loop
outs
in
jge
icebp
dec
xchg
xchg
shl
dec
mov
jle
scas
mov
neg
cmp
sahf
cmp
std
sbb
rcl
jmp
mov
cmc
push
lahf
and
outs
fadd
dec
test
sbb
lods
ror
and
jae
retf
push
jmp
dec
stos
paddsw
in
xchg
sti
dec
pop
scas
push
cs
sub
dec
cmp
mov
add
xchg
test
imul
inc
xchg
mov
pushf
scas
fmul
mov
bound
jae
mov
push
addr16
mov
pop
test
pop
rcr
push
jae
ins
adc
cwde
xchg
movs
and
and
lock
sahf
scas
shr
push
xor
mov
aas
inc
xchg
push
xor
(bad)
lock
and
cmps
push
push
jb
push
cmp
and
sub
push
add
jno
mov
(bad)
sub
movs
xor
mov
test
in
mov
and
fs
jg
loopne
xchg
mov
loop
jns
or
call
bound
cmp
scas
push
sbb
je
jnp
das
sahf
std
sbb
shr
mov
mov
ret
nop
pop
mov
jl
cmps
dec
push
test
retf
xchg
ret
cmp
jae
cmp
rcl
(bad)
sub
test
cwde
and
pop
jl
in
pop
pop
add
cli
and
lds
jmp
in
loopne
inc
dec
scas
test
cvtps2pi
(bad)
in
add
js
aaa
cld
xor
inc
or
mov
and
and
push
xchg
test
mov
and
cmp
test
test
lahf
aam
dec
push
push
pop
(bad)
mov
pop
mov
mov
xchg
rcr
ror
lods
mov
xor
and
aam
idiv
repz
fsub
jmp
aam
push
jo
xchg
in
dec
stc
ins
(bad)
out
lock
pop
xor
xor
ja
push
inc
mov
aad
(bad)
mov
ret
repz
sub
mov
jne
std
fwait
xchg
mov
aas
cmp
cmp
and
jae
inc
add
mov
jecxz
sub
cmps
inc
aas
push
or
rcl
xor
mov
cld
iret
or
loope
push
je
imul
mov
xchg
dec
popf
inc
add
arpl
call
push
adc
mov
test
dec
inc
dec
scas
cmc
inc
repz
jle
xchg
sub
rcr
daa
lahf
jl
push
ret
shr
fiadd
and
adc
xchg
stos
test
mov
inc
enter
cli
push
inc
fadd
lods
daa
sub
inc
dec
pusha
inc
adc
adc
ss
std
and
pop
test
sbb
or
push
pop
sbb
lock
loope
movs
sbb
push
cdq
add
or
shr
in
stc
test
cwde
push
adc
dec
pop
arpl
xor
xor
mov
frstor
retf
ins
neg
in
jns
mov
dec
mov
mov
(bad)
jle
(bad)
(bad)
loop
sbb
adc
ins
inc
fsub
addr16
mov
fbstp
shl
les
or
lods
les
popf
rol
retf
cmp
ins
pop
jnp
jge
call
fidiv
cdq
add
sub
push
push
int3
idiv
push
aas
mov
jp
imul
in
ret
sar
loopne
dec
xchg
scas
or
or
or
mov
push
mov
and
mov
mov
pop
(bad)
fadd
sar
mov
dec
loop
int3
pop
ds
inc
sbb
add
movs
mov
popa
popa
mov
lods
push
mov
sub
jg
jl
pop
sub
xchg
out
jae
push
adc
test
xor
mov
(bad)
sub
rol
cmp
push
aad
push
cdq
cs
add
mov
inc
js
test
push
aas
xchg
arpl
dec
pop
fs
push
sti
mov
(bad)
hlt
outs
je
test
mov
jecxz
out
daa
loopne
fcomi
sbb
sti
popa
jge
shl
add
and
popa
into
mov
push
aam
pop
sub
leave
stos
enter
nop
ss
xchg
mov
and
test
gs
add
call
or
out
jp
inc
inc
sar
das
sbb
mov
sbb
pop
xchg
arpl
sub
repnz
std
push
ds
gs
jne
pop
inc
das
mov
inc
cmp
push
lock
jp
dec
sub
into
clc
fimul
into
pop
ss
scas
adc
retf
into
dec
les
fist
inc
dec
add
aam
mov
adc
mov
je
or
sub
or
movs
pop
pop
movs
push
js
cmp
push
pop
test
mov
clc
inc
sbb
scas
sbb
ja
add
or
cmp
cmp
mov
push
arpl
cmp
jae
call
test
(bad)
push
inc
cmc
mov
arpl
or
outs
cmp
push
inc
pop
aas
xchg
push
mov
or
in
mov
pop
xchg
cmp
imul
sbb
iret
inc
jo
je
and
sbb
fwait
(bad)
int3
adc
call
pop
lds
hlt
sub
and
xchg
fistp
dec
fcomip
pop
pop
ret
and
addr16
clc
mov
test
mov
retf
loopne
inc
fs
mov
sbb
push
(bad)
and
mov
(bad)
pop
cmps
pop
mov
push
sbb
push
or
cmp
jne
push
icebp
add
stos
adc
out
inc
cli
outs
movs
repz
retf
out
cld
sbb
ja
into
cmc
cmp
push
loopne
out
mov
sti
movs
dec
adc
mov
pushf
add
cmp
dec
fwait
and
jl
inc
inc
popa
mov
or
jmp
fdiv
sar
scas
add
mov
lods
stos
push
movs
jp
push
cli
sbb
imul
and
mul
dec
xchg
pop
sub
(bad)
jp
add
inc
add
and
sub
mov
jge
dec
ja
jecxz
dec
jnp
xchg
retf
rcl
and
test
je
scas
fild
cmps
fadd
pop
out
call
inc
push
ret
sbb
pusha
push
shl
mov
mov
shl
fdiv
push
in
int3
adc
pop
adc
mov
xchg
ds
mov
fwait
icebp
das
and
adc
inc
in
clc
in
cdq
int
and
add
test
xchg
inc
xor
mov
in
push
xor
cmp
mov
movs
int3
mov
mov
sub
and
int3
mov
ror
(bad)
pop
push
mov
cmp
dec
fild
movs
inc
mov
faddp
in
xlat
or
(bad)
jmp
lahf
adc
in
aaa
daa
popf
lds
inc
inc
add
jge
cli
nop
mov
sbb
je
fisttp
xor
jo
inc
in
jmp
or
xchg
fmulp
pusha
fxsave
fs
add
sbb
inc
das
cdq
mov
push
in
push
adc
jmp
xchg
mov
push
adc
cli
jno
xchg
mov
add
cmps
cmc
aas
pop
cmc
or
xchg
or
sub
stos
mov
hlt
jno
sub
sub
pop
jle
dec
mov
fmul
(bad)
mov
inc
mov
stos
lock
pmullw
int3
sbb
pop
adc
dec
xor
fisub
lds
push
fsubrp
cmp
out
leave
inc
add
sti
mov
pop
add
outs
das
call
ja
mov
cmp
mov
(bad)
shl
(bad)
adc
dec
and
inc
les
xchg
push
mov
jo
imul
sub
data16
inc
cmp
(bad)
lock
adc
inc
shrd
or
dec
lahf
or
mov
mov
sbb
dec
push
adc
jmp
push
mov
in
call
mov
leave
xor
dec
jge
mov
js
jne
aas
cwde
sahf
(bad)
pop
push
mov
scas
sar
xchg
test
and
adc
ins
pop
mov
test
pop
xchg
jbe
pop
pop
add
ror
push
jb
ret
dec
fcomp
jle
test
mov
mov
test
(bad)
das
call
sbb
sbb
adc
xchg
in
mov
sbb
mov
retf
mov
retf
movs
cli
inc
jmp
in
push
pop
cmp
push
rcr
sbb
ja
xchg
ror
retf
dec
sub
fisub
call
and
cwde
cmp
jg
aam
cli
sub
fcomp
inc
xchg
add
ror
pop
cdq
or
iret
sbb
cmp
jne
or
or
xor
fwait
sbb
sub
xchg
push
jo
rcr
sub
ja
hlt
inc
add
fadd
jne
push
inc
sbb
pop
call
sub
ds
ds
xchg
sub
ret
adc
js
test
add
call
hlt
movs
cwde
bound
xlat
inc
cmp
loope
jb
mov
mov
repnz
lds
jns
jno
(bad)
sub
fist
xor
ret
call
stc
pushf
xchg
pop
push
scas
jg
push
gs
cmp
inc
iret
fimul
jle
imul
cs
adc
out
daa
adc
push
inc
nop
jg
imul
mov
mov
cwde
test
idiv
ss
dec
inc
add
sbb
out
test
add
cmp
pxor
and
sub
(bad)
aam
jno
leave
fidiv
(bad)
sbb
fild
pop
outs
scas
and
add
jge
jg
retf
out
dec
and
call
dec
jne
xor
shr
dec
or
mov
mov
popa
dec
jbe
icebp
and
lahf
mov
clc
add
pop
mov
cdq
xchg
mov
clc
out
popf
les
js
dec
mov
cld
mov
jmp
ja
mov
adc
scas
cmp
das
lods
or
fcom
cmps
outs
cs
lea
push
cmp
gs
adc
mov
push
aaa
in
jmp
sub
mov
in
popf
stos
ss
loope
aam
push
mov
inc
sbb
xor
or
fstp
inc
shl
test
sti
ss
adc
add
je
sahf
mov
int3
out
mov
gs
adc
push
in
loope
pop
xchg
mov
push
ss
pop
retf
test
iret
inc
outs
cmp
les
ins
xchg
sub
mov
or
jle
push
icebp
in
loopne
(bad)
push
mov
push
popf
inc
xor
mov
rcl
dec
shr
out
inc
adc
stc
inc
push
ret
and
mov
mov
neg
mov
imul
inc
imul
mov
ds
dec
pop
ja
adc
xchg
xchg
push
sub
bound
xor
xchg
test
das
mov
inc
cmc
ffree
fdivp
fldenv
lahf
pushw
mov
jnp
jnp
cmp
js
nop
or
int3
cld
out
dec
retf
xchg
inc
lea
sahf
(bad)
sbb
lock
outs
inc
dec
cmps
data16
js
lock
mov
pop
jmp
out
add
jne
lds
(bad)
enter
and
jge
sti
cmp
push
rcr
sub
aas
pop
enter
rcr
mov
inc
cmps
xchg
fdivr
sub
(bad)
ins
hlt
shl
pop
xchg
mov
push
aam
mov
jmp
jle
fiadd
fdivr
pop
fisub
and
int3
xchg
enter
inc
mov
sub
lahf
shr
cmp
je
jne
(bad)
int
inc
out
enter
cli
sbb
pop
jae
push
xchg
movs
ficom
rol
xchg
imul
mov
test
cmp
sbb
data16
pop
popf
mov
cmp
rol
shl
leave
in
les
push
inc
ret
sub
push
inc
push
and
and
movs
aad
out
test
xor
cdq
jl
dec
push
data16
movs
rcl
cli
test
ret
popa
xor
jg
ja
xchg
jmp
arpl
jno
adc
xor
sub
and
popf
in
mov
mov
sbb
icebp
or
adc
cwde
push
cmps
and
mov
sahf
mov
and
xor
add
sbb
mov
adc
cmp
mov
jo
xchg
jo
push
pop
add
and
sti
icebp
cmp
mov
or
inc
xlat
add
inc
dec
mov
shl
gs
mov
sub
push
fidivr
and
scas
movs
(bad)
cmp
lahf
and
and
mov
adc
jo
pushf
icebp
mov
pop
mov
jb
push
int3
or
cs
fisubr
in
jle
sub
jge
(bad)
shl
add
sti
fcomp
mov
dec
pop
aas
mov
(bad)
retf
retf
retf
in
jns
jne
ror
push
jp
mov
retf
add
ss
xor
dec
in
inc
mov
test
push
and
xor
rcl
jne
push
mov
clc
in
jne
out
adc
mov
das
mov
mov
nop
mov
dec
std
inc
(bad)
retf
jp
sbb
inc
fild
xchg
(bad)
cmps
pop
lods
add
mov
shl
addr16
sbb
jns
or
imul
aaa
jl
loop
mov
(bad)
(bad)
(bad)
or
bound
jle
lods
cdq
sbb
jecxz
nop
cmps
loope
pop
dec
mov
jb
mov
push
js
int
pop
fnsave
adc
test
dec
cmp
lds
sub
inc
jp
clc
cwde
out
(bad)
arpl
leave
fsubr
xchg
sub
imul
push
sahf
push
pop
jbe
xlat
ins
add
ret
dec
or
or
mov
pushf
ja
aas
mov
jmp
sbb
iret
jnp
fwait
jnp
cwde
cli
pop
ret
bound
ins
dec
lds
cmp
mov
add
pop
push
jbe
icebp
movs
cld
xlat
fild
loop
fidivr
arpl
pusha
bound
and
jnp
add
xor
pop
loop
dec
aad
sub
mov
outs
mov
sub
outs
or
inc
loopne
cmp
xor
enter
and
mov
and
adc
outs
adc
fmul
mov
rcr
jb
mov
sub
movs
out
push
les
rcr
fsub
mov
and
test
pop
dec
es
cmp
jne
into
sub
pusha
mov
cwde
push
or
adc
xchg
xor
stos
sahf
ss
int
cli
clc
inc
fimul
imul
inc
ss
int3
aad
cmps
imul
pusha
jne
lahf
data16
push
xchg
jo
xchg
mov
daa
fcom
xchg
int
xor
addr16
stos
cmp
loope
test
ror
adc
xchg
mov
sahf
imul
mov
fcomp
out
xor
add
xchg
jns
adc
pop
mov
rol
cmc
sbb
jg
(bad)
sbb
fist
stc
shl
jmp
popf
jo
xchg
jg
xchg
(bad)
pushf
cmps
pop
retf
pop
adc
ins
movs
add
pop
push
mov
sub
mov
add
pop
data16
movs
push
out
out
les
mov
mov
repnz
leave
fsubr
xlat
test
ins
dec
jnp
and
ja
ins
lods
jno
dec
std
pop
jo
push
sub
sub
sbb
jecxz
pop
mov
or
xchg
push
out
js
std
push
cdq
xchg
jmp
mov
lock
aam
and
xor
mov
std
add
push
mov
int3
fst
jg
mov
lods
jb
jmp
and
ret
loop
outs
push
sti
jns
fisttp
jl
repz
inc
mov
sbb
(bad)
mov
popa
daa
xor
hlt
cmp
sbb
sub
js
push
mov
pop
cmc
neg
xor
xor
adc
dec
shl
stos
push
ins
sbb
fistp
cwde
or
push
and
fwait
add
jmp
call
rcl
push
dec
lock
xor
push
or
out
sbb
aas
pop
inc
xor
jl
jno
jbe
pop
jbe
ret
movs
push
fsubr
clc
adc
lds
loop
fdiv
ins
mov
(bad)
push
xor
or
in
imul
xlat
(bad)
push
cmp
fsubr
dec
icebp
aam
lds
(bad)
inc
aas
pop
clc
inc
mov
int3
sub
sbb
fld
mov
mov
nop
cmp
jg
es
rol
sub
xor
lahf
push
cmps
(bad)
outs
cmp
pop
push
in
jmp
sbb
sbb
movs
fcmovnu
add
cmp
or
pop
mov
mov
setg
xchg
les
and
loop
mov
inc
dec
clc
lahf
mov
xchg
sub
xchg
fadd
adc
cmps
fwait
or
outs
or
loopne
aaa
sbb
std
cmp
(bad)
gs
into
cmp
mov
mov
pop
mov
rcl
push
push
iret
jae
loope
stos
retf
and
and
scas
mov
mov
sub
jno
jmp
xchg
jb
push
mov
mov
xchg
fistp
sti
push
mov
jbe
fadd
xor
out
pop
in
movaps
lds
shl
pop
lods
pop
aad
dec
popa
dec
dec
mov
pop
and
jae
retf
mov
jge
test
jo
icebp
or
movs
(bad)
jb
out
pop
add
cmps
mov
jbe
inc
movs
mov
jl
clc
shl
adc
enter
sbb
into
mov
sub
stos
stos
(bad)
repnz
pop
inc
fwait
mov
inc
aam
shl
mov
call
or
cwde
sub
lea
dec
enter
addr16
btr
mov
push
xor
jno
xchg
jne
xchg
push
add
ss
loope
adc
jmp
sahf
lea
rol
mov
mov
add
push
pop
adc
ins
mov
pop
mov
imul
adc
iret
mov
out
retf
mov
jg
les
inc
cli
fwait
dec
add
and
imul
cli
jmp
cmps
scas
fld
pop
push
push
scas
mov
and
ds
dec
imul
sbb
push
mov
push
push
jp
fwait
and
jl
pusha
mov
push
cmps
jp
cmps
movs
sbb
stc
mov
fs
jns
pop
mov
mov
pop
js
dec
(bad)
in
lahf
and
xchg
jp
xor
xor
out
in
ss
cdq
retf
jle
out
jnp
cmp
push
xchg
mov
stos
mov
or
scas
cmp
pop
les
push
mov
push
js
out
(bad)
and
cmp
xlat
cmps
jecxz
gs
fsubr
mov
test
mov
cwde
cmp
push
dec
mov
lods
mov
(bad)
fidiv
cmp
push
push
adc
push
lea
xchg
xchg
stos
les
jle
ds
test
jnp
ficom
dec
lods
dec
mov
mov
xor
cwde
ins
das
mov
retf
call
adc
jmp
xor
fnstenv
cmp
lods
lock
or
or
jb
mov
loopne
pop
fild
jb
je
sbb
xchg
xchg
xor
sti
pushf
cmp
inc
dec
(bad)
xchg
mov
mov
into
mov
add
jmp
mov
xchg
xor
test
retf
add
xchg
not
ret
dec
lods
push
xchg
aam
pusha
sti
out
adc
sbb
(bad)
pop
xchg
dec
sbb
pop
dec
and
or
dec
js
imul
mov
mov
add
xchg
sar
and
fisttp
sbb
mov
aam
pop
fs
fucomip
arpl
repz
out
aad
stos
aam
mov
jle
pushf
pop
in
(bad)
sub
inc
mov
push
and
jb
into
iret
cdq
sahf
das
sbb
add
adc
repz
mov
in
movs
in
scas
sub
ins
mov
scas
mov
aam
xchg
in
ja
jl
call
outs
jg
loop
imul
(bad)
stc
out
lods
shl
xor
adc
dec
popf
int3
mov
mov
inc
jp
ins
push
data16
add
mov
(bad)
test
mov
pop
test
mov
add
jnp
in
mov
sbb
in
push
inc
icebp
mov
mov
icebp
cmps
and
xchg
test
pop
int
mov
fmul
ins
retf
xchg
sbb
ss
mov
cmp
rcl
cld
lahf
sahf
pop
es
push
xlat
pop
xlat
pusha
xchg
jg
loope
test
cmc
and
pop
(bad)
jb
sbb
in
sub
sahf
mov
jnp
pop
stc
(bad)
arpl
cld
cdq
test
test
and
dec
jl
(bad)
(bad)
cmp
add
push
and
cmp
push
or
out
jmp
daa
out
sti
daa
not
retf
jo
inc
aad
scas
push
push
xlat
pusha
xchg
pop
inc
arpl
rol
xchg
xchg
ins
or
inc
mov
out
jnp
mov
das
mov
leave
test
inc
dec
jmp
mov
xchg
xor
leave
mov
adc
add
push
xor
cmp
in
dec
lock
xchg
adc
push
repnz
not
xor
pop
sar
jb
cmps
shl
cmp
pop
retf
mov
jns
(bad)
cmp
je
addr16
pop
shr
xor
mov
call
iret
cmp
call
ins
out
sub
popf
div
pop
dec
inc
ja
outs
cmp
pusha
mov
cmp
fcmovu
mov
out
out
cli
and
cld
dec
cmp
jge
ins
fwait
idiv
call
cwde
or
ins
(bad)
fdecstp
jl
pop
pop
ja
clc
and
and
inc
pop
imul
sbb
scas
imul
sbb
jo
mov
scas
ja
dec
push
inc
mov
lahf
adc
(bad)
cmps
shl
retf
int3
outs
enter
and
jne
in
xchg
jmp
(bad)
cmp
fst
xor
(bad)
cmp
ins
iret
int3
ins
cmc
retf
stc
adc
test
and
pop
mov
dec
call
adc
push
pop
adc
les
add
xor
stos
retf
inc
mov
sar
aas
xor
and
aam
ins
retf
es
or
ret
(bad)
xor
mov
hlt
out
fwait
sub
dec
jnp
das
icebp
cmp
sbb
cmps
sbb
test
push
xchg
popa
mov
pop
mov
and
xchg
mov
pop
and
mov
pop
mov
or
ins
xor
and
pop
sub
sbb
mov
(bad)
mov
(bad)
fs
(bad)
adc
add
jmp
test
mov
daa
fdivrp
test
into
cli
jnp
pop
adc
leave
repz
fwait
aas
jp
mov
ficomp
repz
jg
sahf
jge
jne
cwde
or
cmp
aam
sub
jnp
dec
cs
mov
sbb
xor
stos
push
loope
or
sub
out
mov
dec
sar
push
ss
mov
iret
xchg
adc
retf
mov
jmp
pushf
sbb
jge
adc
shr
ds
imul
xchg
mov
cmp
mov
sub
lods
sub
push
outs
xchg
add
imul
jl
clc
iret
jb
sub
jmp
lods
test
pop
xor
in
pop
call
xchg
in
sti
not
mov
xchg
neg
xchg
in
in
sub
mov
sub
sbb
mov
jbe
dec
fdivr
inc
mov
and
cmps
(bad)
mov
xchg
adc
mov
pop
push
inc
mov
mov
fldcw
ret
scas
cmp
dec
xchg
mov
or
stc
dec
and
ins
(bad)
fnsave
cmp
jmp
pop
and
xchg
retf
mov
test
jno
nop
dec
ins
xor
mul
xlat
jns
push
adc
outs
pop
mov
push
dec
(bad)
mov
repnz
ds
(bad)
mov
test
sub
fucomip
push
add
sti
sbb
jl
push
addr16
pop
bound
mov
shl
fs
mov
sar
mov
or
ror
test
das
inc
push
sahf
push
retf
fsubr
adc
inc
add
mov
in
std
pop
adc
mov
call
adc
push
jmp
aam
jge
add
xchg
lea
in
cmp
pop
jl
outs
ret
push
(bad)
sti
mov
jb
push
sti
cmc
arpl
add
ret
xor
iret
mov
mov
loope
jp
add
mov
inc
jo
in
into
aam
jg
mov
pushf
mov
test
sub
sub
lock
js
cmp
sar
push
imul
mov
pop
sti
mov
pop
imul
inc
add
fst
add
push
adc
jo
gs
fndisi(8087
scas
(bad)
fld
lahf
in
add
jp
shr
jne
jl
in
adc
lahf
xchg
xor
sbb
dec
dec
es
gs
(bad)
fimul
dec
jp
aas
dec
push
scas
mov
jb
mov
stc
mov
sbb
fdivr
xchg
cmp
in
mov
xchg
je
push
or
xor
fsub
shl
rcl
std
dec
cwde
loopne
paddd
xor
aaa
mov
mov
call
sti
not
enter
pop
ret
sbb
sub
out
dec
pop
xor
inc
cmp
mov
mov
cmp
and
ins
in
and
loopne
cmp
lods
pop
sbb
lea
pop
std
mov
and
ins
in
cld
sub
push
pusha
mov
push
add
fnstenv
rcl
call
add
sbb
inc
or
shl
loop
add
add
pop
in
jae
sub
sbb
cmps
jno
and
in
mov
shl
std
ret
shl
adc
fisubr
imul
xor
xchg
imul
inc
jne
stc
jp
fwait
mov
push
mov
jno
pop
push
sbb
loope
add
dec
push
push
adc
shl
adc
addr16
retf
jo
mov
dec
test
inc
inc
mul
or
cmp
push
outs
loope
push
pop
mov
mov
pop
hlt
add
mov
add
stos
shl
inc
jp
lods
inc
test
jp
ins
cmp
add
cmp
xor
xchg
stc
inc
lahf
hlt
adc
hlt
leave
shl
cmp
ja
fisttp
add
pop
mov
xchg
jge
rcl
aaa
and
cmps
lods
xchg
push
repnz
add
xchg
in
ins
mov
mov
cmp
test
fdiv
scas
sbb
adc
out
cmp
test
xchg
sti
out
inc
in
adc
inc
mov
mov
ins
inc
mov
jb
pop
sbb
jmp
mov
dec
rcr
nop
cwde
push
adc
sub
jo
cmps
fbld
xchg
pop
ins
ja
scas
loope
shl
leave
dec
dec
mov
mov
mov
stc
jmp
pusha
dec
dec
dec
test
and
add
test
sbb
repnz
sbb
shr
int3
outs
mov
int
mov
hlt
rol
and
xchg
gs
fs
out
mov
in
std
(bad)
hlt
ficomp
sub
pop
xchg
xor
cmps
lahf
(bad)
sbb
adc
jge
imul
clc
dec
push
lods
mov
(bad)
jae
jg
lock
xchg
mov
in
mov
mov
mov
arpl
test
dec
sahf
cmp
cmp
(bad)
jge
push
vpacksswb
cmc
rcr
loope
jnp
imul
aad
sahf
test
in
mov
arpl
sbb
push
daa
inc
mov
push
cmp
sbb
cmp
or
jo
and
pop
stos
xchg
jae
adc
push
mov
ins
xor
jno
and
pop
aaa
sbb
mov
push
xor
xchg
std
dec
popa
pusha
or
movs
and
out
mov
xor
or
mov
and
jecxz
lods
clc
cdq
cmp
xchg
repz
xor
popa
aam
fild
inc
stos
inc
jmp
dec
sub
and
fiadd
shl
mov
in
add
xchg
loope
lock
push
rcr
jecxz
or
mov
or
jmp
daa
mov
pop
push
cdq
sahf
fwait
mov
(bad)
test
out
and
ins
mov
xchg
xchg
dec
push
pop
xor
retf
nop
daa
adc
movs
cmp
pop
add
jmp
and
xor
push
ffree
jnp
mov
dec
int
aad
nop
(bad)
push
cmp
xchg
imul
bound
mov
out
sub
hlt
sub
inc
inc
xlat
or
shl
inc
add
ss
ret
adc
add
push
es
and
add
pop
mov
adc
aaa
lock
dec
call
adc
xchg
dec
in
das
out
enter
in
mov
push
imul
push
jb
dec
(bad)
addr16
out
outs
(bad)
jb
jge
mov
in
mov
cmp
aam
inc
jne
sbb
shl
cmps
mov
add
pop
cmp
or
mov
sbb
(bad)
ja
loope
cmc
sbb
or
stos
dec
adc
push
movs
(bad)
dec
cmps
add
or
mov
call
or
or
rol
ins
aas
pushf
popf
jb
cwde
cwde
mov
inc
rcl
ftst
pop
sahf
push
jmp
jbe
mov
scas
lods
jns
popa
or
in
lahf
dec
mov
dec
push
dec
cmp
mov
loope
jae
repnz
jo
jle
ret
mov
dec
xchg
xor
mov
xorps
ret
or
xchg
sub
xchg
ret
add
mov
cs
adc
xchg
icebp
xchg
fs
aam
and
jns
xor
sub
push
cmc
xlat
dec
sub
mov
cmc
test
jns
test
(bad)
aas
out
iret
xchg
dec
ret
xor
pusha
movs
adc
inc
cld
ja
sub
sub
sti
or
xchg
xor
add
sub
test
mov
out
lods
jno
xor
pop
jl
mov
es
fadd
sbb
mov
cli
jbe
cdq
(bad)
dec
mov
nop
push
sbb
xor
mov
inc
in
jmp
xchg
push
ds
int
pop
push
addr16
mov
jge
int
cmp
fnstcw
cld
or
mov
mov
mov
xchg
test
std
or
cmp
pushf
mov
(bad)
jmp
adc
mov
push
rcl
mov
adc
lock
ss
mov
imul
into
fcomp
pop
or
hlt
retf
and
jo
rcr
pop
test
(bad)
jecxz
and
jmp
xchg
les
repz
je
sub
jecxz
mov
jge
jnp
aam
or
or
jns
leave
enter
adc
push
jecxz
loopne
cmp
or
(bad)
xchg
ins
sbb
retf
mov
je
or
push
inc
sbb
jl
push
jnp
cmp
cmp
psubw
mov
out
xchg
sbb
call
movs
inc
clc
add
mov
mov
pushf
dec
retf
icebp
cs
push
adc
shl
pushf
sahf
test
inc
sbb
popf
sub
jno
mov
cld
push
xchg
lods
adc
(bad)
xor
pop
int3
xchg
retf
fcmovu
inc
dec
jnp
jmp
dec
cs
inc
push
or
inc
xor
fs
and
shl
aas
cs
in
shl
push
xlat
mov
push
rcl
test
push
inc
int3
into
lods
popf
xor
fxch
pop
enter
sar
jbe
xor
stc
cli
or
push
cmps
into
mov
(bad)
std
sub
js
call
push
shr
int
repnz
pavgb
fisubr
rcl
dec
(bad)
add
push
jmp
xor
pop
pop
aad
mov
push
adc
imul
lods
xor
iret
adc
xchg
xlat
jnp
test
addr16
push
jl
ss
shr
mov
xor
xchg
xchg
les
loop
cld
(bad)
jne
pop
div
or
sub
and
mov
aas
xchg
retf
popf
repz
test
or
out
jmp
dec
test
cmps
out
dec
(bad)
leave
cmps
imul
push
(bad)
cs
clc
sub
push
retf
les
fist
test
retf
shl
pop
pop
jmp
cmp
ror
cdq
adc
and
call
sub
mov
mov
mov
xor
and
(bad)
into
mov
xchg
out
retf
xor
shl
xchg
aad
out
sub
jo
or
add
rcr
pop
stos
imul
stos
in
ret
aad
cmps
fadd
js
or
dec
ficomp
pop
mov
xchg
cmps
adc
mov
aad
imul
push
mov
aad
pop
call
data16
mov
dec
mov
sti
push
add
cmp
movs
mov
xchg
aaa
sub
xchg
adc
xor
sbb
mov
(bad)
retf
ret
cmps
scas
pop
pop
inc
or
mov
(bad)
sub
xor
(bad)
jecxz
mov
loop
push
pop
rcl
xchg
cmps
hlt
cmp
mov
in
mov
xor
and
icebp
ret
adc
jnp
adc
mov
sub
pusha
dec
xor
pop
mov
repnz
cmp
sbb
(bad)
cmp
sbb
imul
inc
repz
das
push
lea
add
sbb
pop
arpl
sub
stc
and
jo
mov
sbb
pop
and
jb
push
loopne
inc
popa
cmp
rcr
jg
xor
je
pop
jne
pop
jl
fs
mov
sahf
mov
in
or
repz
je
scas
sbb
sub
je
fimul
jmp
jae
enter
jne
aaa
int
jge
lods
mov
bound
ins
pop
mov
mov
add
xor
push
jnp
movs
out
fs
std
aad
push
inc
or
xchg
xlat
mov
inc
je
mov
sahf
(bad)
outs
add
cmp
inc
retf
mov
cmp
mov
pushf
cmp
pop
jnp
lods
lds
cs
scas
loope
jno
out
lahf
repz
jmp
adc
fs
jnp
inc
loop
cmp
lea
ja
pop
push
xlat
and
mov
inc
mov
push
or
aam
ret
push
lds
sbb
not
scas
fistp
cli
mov
sbb
imul
test
scas
mov
ds
cdq
out
cmp
cmp
fnstcw
sahf
ret
fldl2e
xchg
mov
mov
nop
jmp
push
ds
xchg
out
dec
aaa
aaa
hlt
cld
scas
xchg
dec
dec
xlat
jmp
mov
stos
loop
out
(bad)
jbe
mov
scas
dec
jbe
xchg
xchg
in
add
xor
fisub
inc
sub
rcr
dec
add
xor
(bad)
neg
push
fdiv
mov
mov
cmp
mov
fimul
loop
ret
es
(bad)
jns
mov
dec
fisttp
fwait
sub
mov
cmp
je
mov
addr16
push
(bad)
xor
xor
sbb
inc
ds
movs
lock
add
int3
push
cmps
mov
push
mov
jge
xor
dec
lods
add
(bad)
loope
mov
and
(bad)
imul
pop
sahf
loope
dec
pusha
ret
std
or
stos
jmp
leave
add
movs
or
je
jg
pop
dec
idiv
hlt
clc
and
ret
movs
in
push
dec
adc
adc
jge
mov
shr
ret
or
scas
cmp
imul
inc
mov
push
xchg
call
xchg
mov
push
ss
fdivp
fcom
pop
ret
daa
aam
inc
aad
test
cmc
dec
cmps
jno
jge
inc
jl
in
out
ins
sub
ror
(bad)
xor
inc
xchg
retf
loope
xchg
call
or
sbb
jmp
jle
out
push
(bad)
leave
inc
sub
hlt
or
jo
sahf
xchg
outs
stos
and
add
(bad)
je
jmp
loop
ja
dec
lock
ret
push
xor
pop
lahf
xchg
mov
mov
hlt
xchg
in
cmp
arpl
or
sub
repnz
retf
test
imul
fwait
out
add
sub
pusha
sbb
and
gs
cmp
leave
cmps
or
push
jmp
fild
and
push
pop
arpl
icebp
loope
lea
add
and
lahf
sysenter
xor
test
adc
gs
mov
aas
dec
xchg
dec
(bad)
and
mov
dec
dec
iret
cld
mov
xor
fsubr
outs
cmp
jge
cld
int3
inc
or
rol
dec
test
sti
ins
or
mov
adc
fstp
push
scas
adc
fild
sub
arpl
xchg
mov
repz
test
pop
call
xor
pusha
pop
or
sbb
push
fisubr
mov
or
and
cs
ret
call
cmps
push
jbe
or
pop
push
dec
es
push
es
dec
xchg
in
mov
mov
pop
lahf
je
adc
xchg
fst
(bad)
mov
adc
dec
or
ins
add
jns
xor
xchg
in
dec
jmp
pop
and
mov
xchg
jp
cmps
xchg
loop
test
cdq
jb
push
adc
sti
jl
stc
dec
jg
stos
cmps
fcomp
cmps
jno
jns
xchg
xor
hlt
cmp
setle
jl
xor
inc
dec
adc
sub
pop
cmp
push
sub
fstp
retf
ins
pop
sub
push
stos
bound
mov
in
xchg
out
xor
pop
and
cmp
arpl
push
or
mov
jnp
jae
xor
je
call
je
pop
das
sub
push
sub
inc
es
cmps
daa
xor
mov
retf
js
scas
sbb
cmp
out
pop
imul
fmul
mov
mov
dec
in
jbe
push
(bad)
inc
add
lahf
pop
jns
sbb
ret
dec
jecxz
daa
out
nop
mov
fcmovnb
dec
mov
stos
cld
clc
pop
lahf
mov
xchg
push
cmps
(bad)
cs
sahf
rcr
inc
jb
push
cmp
or
and
daa
mov
repnz
test
dec
data16
(bad)
push
cld
fdiv
out
inc
mov
pop
xchg
imul
adc
aas
cmp
loope
or
jp
jnp
cli
(bad)
and
sub
int
mov
adc
sbb
or
nop
enter
sbb
movs
push
leave
mov
dec
push
dec
int3
jle
fsubp
adc
cmp
int
xchg
mov
mov
int
test
add
out
data16
icebp
cmps
not
ja
std
dec
(bad)
mov
push
and
mov
push
mov
cmp
add
sbb
sar
mov
ret
hlt
aas
pop
jl
cmp
jo
and
and
movs
stc
outs
in
cwde
mov
outs
mov
sbb
add
scas
mov
aas
and
lock
and
lds
sar
jnp
aam
mov
cli
dec
cli
jge
sub
pop
xchg
mov
aam
inc
or
pop
lods
mov
sbb
cmps
ins
scas
push
(bad)
cmp
in
dec
fisub
fimul
add
stc
stos
gs
mov
nop
push
jg
shl
in
cmp
jp
pop
in
jge
fstp
mov
or
mov
ja
or
imul
pop
scas
outs
inc
xrelease
sbb
jecxz
dec
and
or
ficom
cmp
dec
(bad)
pop
inc
sbb
aad
into
sub
and
xchg
mov
xlat
inc
popf
jne
jecxz
test
(bad)
cmp
mov
xor
sub
xor
sahf
xor
bound
xchg
cwde
jge
add
or
call
bound
mov
out
dec
(bad)
push
stos
inc
dec
icebp
cli
aas
jmp
aas
out
jmp
inc
mov
mov
push
jle
mov
cdq
jno
pusha
lods
xor
inc
jl
mov
out
push
add
jl
pushf
leave
or
mov
mul
inc
dec
xor
jnp
dec
inc
mov
jmp
inc
pop
mov
mov
and
(bad)
fidivr
das
loop
xchg
sbb
jb
fnsave
shl
push
mov
cmp
sti
sub
in
pop
in
jbe
pop
data16
out
pop
out
mov
paddusb
addr16
sub
aaa
fisttp
dec
les
adc
pop
js
xor
jp
pop
mov
sti
sub
pop
out
inc
cmp
jmp
push
retf
jl
(bad)
fldenv
push
outs
popf
das
xchg
sahf
jp
mov
aaa
jnp
sbb
jae
mov
sbb
pop
cmp
pushf
test
add
call
jo
jmp
mov
cwde
mov
mov
mov
inc
pop
and
rcr
aaa
add
pop
inc
mov
dec
jno
sub
xchg
jbe
xchg
lock
inc
dec
imul
pop
dec
adc
ss
cmp
xchg
mov
xchg
cmp
popf
int
test
or
adc
or
pop
(bad)
pop
jmp
dec
sub
(bad)
cld
ins
mov
add
das
imul
call
jmp
dec
lods
stos
iret
lods
push
mov
cmp
stos
pop
add
pop
ret
adc
adc
sbb
xchg
lods
les
cmc
or
push
sub
pop
xor
cmps
call
fmul
cmp
fisttp
sub
pusha
dec
mov
shl
jge
push
pop
gs
ins
stos
sub
pop
pop
sub
mov
(bad)
aaa
sbb
xor
in
in
stos
adc
clc
jl
test
jnp
xor
fucomip
xchg
idiv
lahf
cwde
push
sbb
jbe
add
inc
pop
pop
cli
out
mov
into
pop
cmp
mov
jge
push
push
cmp
mov
ss
jl
scas
(bad)
pop
(bad)
sahf
ret
daa
call
(bad)
cmps
cs
mov
or
fdivr
outs
mov
jge
daa
(bad)
push
jmp
pop
sbb
mov
stos
in
push
push
push
fist
cdq
out
aam
test
pop
(bad)
cs
pop
or
jp
mov
in
jl
lds
fadd
jg
mov
arpl
repnz
out
pop
pop
in
(bad)
rol
cmp
jmp
rep
imul
cwde
mul
sbb
imul
fs
cs
mov
imul
push
sti
dec
cdq
(bad)
mov
mov
mov
sbb
pop
jge
and
fwait
js
push
xchg
shl
enter
or
push
jg
ins
pop
ror
push
jb
int3
mov
(bad)
mov
shr
arpl
pop
shl
jno
xchg
inc
cmp
pop
sub
fbld
and
xchg
adc
repnz
jno
fwait
inc
and
adc
aas
add
in
pop
push
cwde
push
enter
rcl
test
rol
add
fidivr
mov
div
out
dec
mov
rcl
imul
mov
mov
ja
xchg
xor
or
mov
mov
jecxz
mov
ret
mov
pop
ins
jo
mov
push
fcom
mov
xor
div
push
xor
outs
retf
or
cmp
lahf
imul
pop
push
jne
adc
outs
xchg
call
mov
aad
push
push
cmp
(bad)
and
adc
mov
pop
push
sub
das
dec
out
shl
lods
popa
add
add
in
mov
and
push
pop
outs
pop
inc
rcl
outs
pop
loope
inc
nop
mov
push
neg
adc
dec
inc
movs
and
or
xchg
fistp
imul
mov
mov
movs
push
xchg
jl
cmp
mov
cmps
lds
aad
arpl
fcom
pop
out
mov
movs
mov
jno
push
enter
(bad)
jns
dec
repnz
jmp
pop
or
cmps
xchg
scas
js
cmp
mov
div
dec
cwde
sub
cwde
pusha
daa
(bad)
idiv
mov
rcl
xchg
aaa
adc
sti
rcl
js
cli
popa
cli
int
sub
ret
jmp
in
xor
pusha
and
dec
outs
mov
and
jbe
dec
aam
jg
mov
test
push
jns
enter
mov
(bad)
call
loopne
sar
push
lods
(bad)
adc
or
pop
jbe
call
outs
and
jl
dec
scas
fdiv
call
sub
xchg
rol
xor
push
cvtps2pi
xor
dec
(bad)
xchg
out
ins
imul
push
cmp
inc
push
data16
cmp
jge
mov
movs
ret
jg
add
lods
arpl
rol
mov
pop
mov
push
arpl
mov
enter
jo
aas
scas
call
adc
add
mov
into
fstp
cld
mov
dec
jp
push
fdiv
inc
mov
(bad)
mov
and
jmp
add
xchg
push
data16
dec
jp
in
shl
shl
fucom
int
add
mov
pusha
dec
out
xchg
jp
push
cmp
pusha
scas
mov
pop
rep
mov
pop
lahf
xchg
or
adc
std
mov
xchg
ret
sub
jmp
mov
push
jmp
adc
ret
fldenv
jbe
pop
adc
lds
push
xchg
add
fsubr
clc
das
int3
adc
mov
jmp
push
mov
into
lahf
add
mov
adc
cmp
cmps
xchg
cld
jnp
in
in
stos
iret
in
pop
mov
jg
sbb
or
pop
mov
pop
into
cld
mov
ja
sub
outs
jb
mov
sub
imul
(bad)
das
cdq
dec
cdq
jae
movs
mov
call
mov
push
sahf
jp
pop
loope
test
pop
push
mov
pop
fimul
push
xchg
loop
dec
push
sar
mov
test
lods
sub
xor
jne
add
inc
repnz
movs
dec
mov
push
mov
fbld
push
mov
or
push
push
stos
out
inc
jmp
cs
adc
addr16
xor
xchg
mov
cmp
test
cmps
mov
add
jo
and
sbb
out
cmp
les
sub
inc
adc
sub
cmp
retf
cmp
fisttp
xchg
test
out
jecxz
sbb
add
and
lea
jl
sub
sar
repz
stc
mov
xchg
mov
rcr
jle
imul
popa
(bad)
mov
xor
dec
sbb
cmc
ins
outs
int3
jne
ins
pop
inc
lods
pop
mov
pop
xchg
(bad)
push
clc
adc
(bad)
jmp
mov
cmp
add
test
mov
inc
sub
cmc
and
cdq
jmp
fidiv
push
adc
test
dec
shl
xchg
pop
sub
mov
sti
jmp
mov
lea
test
jecxz
pop
xor
test
cdq
ins
je
ret
jmp
xor
push
fwait
int3
or
and
push
or
lea
jno
xchg
int
cmp
scas
loope
idiv
sbb
cmp
and
aad
ss
iret
idiv
jno
hlt
std
stos
add
aaa
ficomp
pusha
xlat
or
retf
cdq
and
fisubr
xor
sbb
(bad)
aam
or
xor
stos
add
cmp
xchg
pusha
mov
mov
xor
and
adc
out
pop
cli
call
adc
pusha
mov
rol
sbb
xor
inc
data16
movs
inc
pop
mov
xchg
test
lock
jmp
cmp
das
ret
punpckhdq
sub
into
and
enter
add
xor
mov
mov
add
(bad)
repz
ds
push
pop
mov
fwait
jle
adc
out
cmp
sub
xor
mov
inc
cmp
cli
int3
lea
mov
sar
lock
inc
push
push
ss
jmp
mov
aam
pop
mov
rol
sub
pop
jae
mov
and
add
ret
mov
dec
hlt
sbb
xsavec
mov
test
xchg
scas
call
push
sbb
xor
popf
push
inc
(bad)
fimul
mov
ds
push
nop
retf
add
push
pop
(bad)
mov
test
pop
push
mov
lods
push
ins
add
cmp
enter
call
inc
rcr
call
cmp
pop
fdivrp
aam
xchg
jl
push
sti
adc
jnp
mov
fwait
pop
jl
mov
fsub
push
push
rcr
out
cmp
jno
(bad)
sub
or
jle
cmp
inc
scas
xor
out
cmc
or
mov
dec
adc
or
call
or
cmp
cdq
mov
push
in
dec
test
push
cmc
or
fs
je
jl
mov
push
rol
xor
xor
cmp
adc
lahf
sbb
jne
jb
iret
rcr
xor
adc
pop
cmp
pop
mov
add
aam
movs
jg
push
shl
adc
call
stos
jecxz
push
add
dec
lds
test
xchg
cs
xchg
jb
out
mov
ss
test
mov
aas
icebp
xor
stos
movs
test
ret
dec
sub
inc
ins
pop
fnstsw
(bad)
cli
in
xor
fimul
pop
fcmovnu
inc
imul
fdivr
call
ins
xor
ds
inc
outs
movs
inc
lods
sti
inc
pop
(bad)
clc
sub
aaa
adc
mov
xor
xchg
sub
fidiv
(bad)
fadd
add
mov
retf
stos
and
fwait
mov
fwait
inc
mov
jno
(bad)
cmp
in
xchg
inc
gs
iret
ret
es
cld
mov
add
mov
(bad)
cmp
xchg
rol
hlt
or
jae
fdivr
sub
test
iret
mov
sti
lods
leave
nop
pop
ds
push
aaa
out
cmp
cmp
je
idiv
mov
inc
or
sbb
inc
cmc
in
cmp
cmp
imul
(bad)
pop
and
mov
and
jecxz
pop
sbb
mov
dec
fwait
mov
mov
dec
ret
sahf
movs
jmp
adc
pop
hlt
(bad)
sbb
jp
xlat
sub
popf
xor
or
scas
repz
retf
stc
call
and
jle
mov
pop
arpl
cmp
repz
inc
mov
(bad)
and
mov
push
xchg
hlt
imul
mov
dec
lods
sub
add
and
iret
dec
mov
pop
out
repnz
jae
sub
test
or
sbb
or
push
mov
push
dec
and
mov
pop
mov
mov
or
cli
adc
pusha
jmp
call
and
aaa
sar
push
mov
rcr
shl
push
xchg
add
fcomp
add
mov
nop
in
ds
mov
stos
ds
inc
inc
or
mov
fisubr
add
(bad)
push
retf
(bad)
std
jmp
jl
sbb
mov
push
add
out
push
pop
cmp
sbb
mov
popf
sub
or
fwait
mov
dec
cwde
pop
sub
outs
jge
xor
outs
cmp
(bad)
mov
loop
ficomp
dec
and
mov
popf
lock
(bad)
dec
fld
pusha
cmp
dec
jge
scas
popf
pop
or
sbb
mov
xchg
push
cld
in
or
and
pop
clc
(bad)
loop
imul
popf
pop
push
or
retf
xor
stos
sbb
jmp
rol
cld
push
cli
ror
jno
add
add
gs
push
rcr
mov
(bad)
push
dec
(bad)
pop
xchg
call
pop
neg
into
loope
jmp
or
daa
(bad)
rcl
xchg
jns
retf
mov
jae
popf
or
inc
mov
repz
retf
jle
clc
(bad)
mov
pop
add
mov
mov
inc
call
aad
sub
sahf
mov
inc
scas
jb
pop
jge
inc
popa
and
shl
cmp
mov
mov
xchg
sub
xchg
or
fisttp
push
stc
dec
pop
xchg
inc
cli
les
or
aam
retf
and
in
into
xor
mov
mov
mov
sub
xor
int
popf
inc
stos
jmp
jne
sbb
mov
or
or
idiv
ror
dec
push
inc
mov
pop
(bad)
cmp
cmp
xchg
sahf
clc
dec
xchg
repz
bound
(bad)
and
movs
sub
das
and
xor
mov
sbb
ja
jmp
in
test
xor
in
movs
ds
(bad)
int3
loop
or
dec
jb
popa
int3
xor
pop
mov
imul
loopne
mov
pop
pushf
clc
cmp
add
hlt
das
adc
xchg
fisttp
mov
xchg
dec
mov
fdivr
or
sub
sub
cmp
iret
jo
pop
hlt
cmp
push
and
sub
pop
ret
pop
dec
sub
out
dec
add
movs
outs
in
or
xor
or
movs
jg
sub
retf
aas
mov
pop
cmps
dec
ins
dec
xor
xor
cmp
jno
test
fcmovnb
xchg
out
loop
mov
loop
scas
leave
mov
jmp
sub
mov
push
scas
call
jg
icebp
jnp
sub
xchg
in
sbb
ret
fcomp
cs
pusha
mov
mov
(bad)
ss
inc
out
data16
stos
(bad)
cmp
inc
icebp
mov
js
loop
sub
xlat
test
mov
jo
fadd
inc
mov
push
push
push
sbb
mov
lods
imul
std
ror
(bad)
mov
movs
mov
jge
loopne
xlat
dec
xchg
test
mov
mov
ret
mov
sahf
frstor
dec
pop
or
xchg
pop
scas
test
sub
or
mov
neg
push
(bad)
xor
mov
adc
lock
stos
aas
cmps
sub
scas
sub
mov
adc
out
or
std
int3
sub
test
push
push
jne
arpl
mov
pop
in
clc
mov
jecxz
pop
dec
sbb
sub
add
(bad)
or
in
sub
lock
or
int
mov
xlat
fimul
fisub
test
push
popf
cs
push
xchg
push
test
fdiv
adc
in
aad
xor
dec
inc
outs
cmps
xchg
call
cmps
stos
xor
sbb
xor
cmp
add
shr
ror
repz
or
sub
ja
jl
adc
pop
repnz
scas
push
in
mov
pop
cmc
sub
movs
ins
aam
test
add
xlat
mov
push
sbb
call
std
popa
xor
movs
dec
stos
rcr
dec
push
in
mov
cmp
adc
sub
scas
ret
sbb
jle
popf
out
cmp
fbld
(bad)
cmc
mov
fcmove
pop
loop
pop
jo
xchg
xchg
mov
aaa
pop
imul
stos
push
xor
(bad)
sub
fs
dec
xor
cmp
pusha
pop
pop
ret
(bad)
cld
mov
jmp
inc
loop
mov
neg
dec
arpl
cld
pop
jmp
push
pusha
imul
mov
lods
(bad)
mov
xchg
repnz
ret
inc
out
add
adc
sub
fwait
lods
(bad)
daa
out
dec
mov
movs
push
pop
enter
push
int3
push
jmp
push
xor
mov
bound
mov
pusha
stc
test
pop
fisub
aas
sbb
int3
add
repz
mov
ret
xor
push
adc
test
inc
jge
mov
(bad)
jmp
pop
and
bound
sub
and
push
inc
scas
pushf
in
sahf
pusha
mov
pop
cld
ja
mov
mov
or
dec
sti
and
pop
inc
mov
loopne
(bad)
int
push
hlt
outs
or
jno
or
shl
mov
std
mov
(bad)
js
jecxz
sbb
mov
jmp
clc
outs
or
iret
pop
and
(bad)
test
icebp
ret
gs
sub
jbe
jo
cwde
stc
popa
ret
and
(bad)
js
push
loope
arpl
or
mov
mov
sub
mov
pop
xchg
jae
push
push
iret
push
outs
mov
cmp
(bad)
xor
push
xor
xor
sar
add
lods
leave
push
ds
dec
aas
dec
inc
or
inc
in
push
(bad)
and
std
jecxz
popf
xor
mov
ja
xor
lds
mov
test
adc
movs
ret
ss
add
call
add
jmp
cmp
lea
out
mov
jmp
sub
into
sub
fistp
ins
outs
lahf
add
sbb
dec
sbb
add
push
dec
mov
in
lea
in
xor
sbb
pop
in
dec
out
int
mov
aas
pop
outs
pop
mov
in
ror
lea
(bad)
fwait
pushf
cdq
sahf
mov
add
cmps
mov
sbb
mov
or
inc
repz
cwde
fst
test
pop
mov
mov
fldenv
mov
or
push
add
push
ret
sub
mov
inc
pop
xchg
call
xchg
adc
sbb
xchg
sar
cli
add
test
or
(bad)
das
mov
fist
jnp
enter
test
xor
cmps
pushf
sbb
mov
dec
and
inc
xchg
cmp
jbe
mov
mov
pop
ins
(bad)
mov
loop
dec
adc
ds
jb
test
adc
xchg
fmul
addr16
pop
sahf
dec
or
add
out
add
adc
xchg
cmc
scas
js
pop
cmp
ins
test
in
jmp
into
rcr
repz
sub
dec
idiv
jmp
mov
sahf
arpl
loope
div
sub
cmp
je
pop
sub
or
daa
adc
inc
loope
cmp
xchg
push
lahf
dec
out
or
mov
xor
sbb
popf
push
mov
lods
inc
(bad)
add
push
pop
int3
sti
sbb
stc
mov
jl
xchg
lahf
mov
and
sub
ins
repnz
inc
pop
movs
inc
div
les
or
idiv
(bad)
jle
jno
clc
je
retf
mov
xor
xor
pushf
repnz
mov
xor
test
test
jnp
adc
adc
pop
ret
xor
add
push
and
frstor
jo
stos
mov
into
cmps
pop
jns
and
fs
add
fs
cli
std
sahf
jge
movs
jb
add
bound
mov
push
and
and
ror
gs
xchg
repz
shl
pop
popf
mov
and
sbb
and
xor
or
push
mov
cmp
sub
pop
shl
sub
(bad)
mov
ins
jno
and
into
sahf
test
and
bnd
cmp
imul
(bad)
pop
jg
add
adc
xchg
cmp
xor
pop
ficom
ja
xor
dec
push
cld
loope
pop
cdq
sti
jno
add
xor
loope
les
sub
imul
xor
inc
jbe
add
push
mov
das
mov
pop
jb
or
pop
push
pop
xor
lods
mov
push
ret
inc
inc
scas
clc
dec
adc
call
clc
cmc
sbb
mov
adc
imul
mov
jne
mov
xchg
mov
inc
xor
xor
jle
mov
das
jecxz
daa
ss
mov
int3
btr
mov
mov
aad
dec
inc
cs
pop
aam
mov
mov
mov
push
jo
movs
xlat
lock
pop
xor
adc
sbb
mov
or
xchg
add
fstp
fild
(bad)
ins
mov
pop
scas
jne
jecxz
sub
imul
push
sub
fadd
pop
fisubr
xchg
icebp
jo
cmp
fistp
jge
xlat
xor
inc
(bad)
pop
inc
push
jmp
or
push
push
sub
cli
outs
pop
(bad)
in
mov
push
mov
aaa
xor
lea
mov
mov
or
dec
movs
movs
xchg
sbb
cmp
jae
out
jo
test
xchg
mov
add
cdq
and
mov
inc
loopne
aam
push
fcmovnb
inc
inc
mov
or
jno
add
(bad)
sbb
adc
adc
or
out
jmp
imul
add
push
(bad)
(bad)
cmps
push
fimul
cmp
adc
scas
mov
mov
inc
rcr
and
inc
xchg
cmps
adc
psllq
add
shr
in
jnp
mov
rol
sub
or
out
rol
ja
imul
shl
shl
outs
test
push
in
cmp
scas
test
scas
stc
jo
adc
pop
inc
add
push
ss
arpl
out
ss
ror
iret
inc
mov
jmp
ja
jno
retf
dec
popa
sbb
fdivr
pop
gs
cmp
test
mov
sti
pop
cmp
dec
cwde
mov
sbb
mov
pushf
push
push
fst
dec
movs
sub
hlt
jl
xchg
(bad)
test
lea
icebp
je
adc
sbb
mov
push
aad
mov
mov
adc
add
dec
and
xor
mov
mov
mov
inc
adc
jns
mov
pop
fsub
outs
retf
test
in
arpl
fwait
or
and
je
loop
adc
ja
cmp
sub
shl
(bad)
aad
mov
adc
in
mov
(bad)
(bad)
adc
push
hlt
adc
(bad)
pop
cmp
ja
or
xchg
mov
push
push
jmp
sbb
retf
out
retf
jmp
sbb
movs
mov
jno
dec
arpl
iret
lahf
ret
inc
mov
sbb
iret
or
je
adc
jle
sbb
aad
jno
jmp
dec
jle
inc
out
mov
fldcw
cdq
sbb
(bad)
pop
fsub
adc
daa
std
adc
xor
int3
jb
iret
fcomp
dec
mov
fimul
fnstcw
rcr
jne
jo
int
in
out
dec
add
div
push
loope
cmp
lock
sbb
mov
hlt
or
mov
adc
shl
and
sbb
adc
aam
cmp
mov
lock
cwde
and
jne
adc
fsubrp
jnp
pop
hlt
jbe
mov
or
adc
inc
test
aas
popf
(bad)
gs
pop
loopne
es
pop
xchg
mov
mov
sbb
ficomp
out
mov
xchg
cwde
xlat
xchg
js
or
jecxz
add
mov
add
aad
mov
test
sbb
leave
pushf
mov
sbb
xor
mov
inc
xchg
out
aas
shr
icebp
pop
test
xchg
das
sti
pop
(bad)
in
or
dec
in
xor
pop
add
inc
or
aam
mov
lods
test
or
or
dec
and
inc
mov
inc
out
cmp
fcom
div
mov
arpl
and
mov
repz
inc
(bad)
retf
mov
ret
ins
test
add
js
dec
repz
loope
and
or
pop
sub
out
es
and
sub
xlat
xchg
daa
icebp
mov
jb
push
dec
mov
fnstcw
mov
and
scas
jns
ret
(bad)
pop
lds
push
sbb
arpl
inc
loope
xchg
xchg
scas
jbe
clc
inc
lahf
sub
push
jnp
push
push
pusha
aaa
push
sbb
xor
in
or
je
cmp
(bad)
inc
jmp
inc
retf
das
(bad)
(bad)
jmp
adc
out
jnp
jno
sbb
pop
cmp
shl
mov
add
sub
into
sbb
test
add
push
mov
pusha
xor
xchg
dec
mov
push
jmp
pusha
repz
lds
ds
(bad)
jl
sbb
mov
push
mov
aaa
lods
in
std
ins
and
jecxz
xor
dec
std
scas
mov
jmp
sub
inc
sbb
fsub
aam
cmp
add
lods
fmul
inc
ins
bound
mov
xchg
in
mov
jmp
mov
frstor
loope
cwde
mov
xchg
inc
test
push
jge
or
fsub
cmp
repz
xchg
pushf
pushf
aam
inc
js
inc
lahf
xchg
fdivr
lds
xchg
mov
pop
fwait
mov
lods
mov
mov
outs
sub
xor
xchg
js
ins
push
icebp
pop
sub
(bad)
daa
mov
loopne
xchg
into
test
(bad)
and
hlt
pop
sub
cld
mov
push
nop
pushf
jp
lods
or
or
sbb
sahf
adc
add
mov
int3
adc
nop
lods
cmps
and
inc
cli
add
mov
int
dec
les
out
scas
aad
rol
mov
push
outs
rcr
adc
mov
cli
or
int3
xor
ficomp
mov
ror
sbb
mov
jmp
mov
stc
(bad)
and
icebp
or
lds
outs
cmp
std
inc
sbb
int
sbb
add
inc
cmp
dec
mov
inc
add
jb
and
cdq
xor
sub
xor
lea
jmp
aas
xor
cmc
mov
xor
int3
sbb
int
adc
out
sub
lds
pop
rcr
fcom
movs
mov
(bad)
xlat
mov
sub
pop
leave
in
ins
icebp
popf
aam
mov
idiv
inc
ret
sbb
mov
jno
mov
aaa
mov
pop
dec
push
cmp
js
cli
scas
xchg
dec
push
xchg
push
jge
test
adc
shl
cwde
cmp
mov
push
jp
push
ret
adc
pop
pop
cmp
iret
ins
sub
cli
repz
repz
ins
mov
ror
cs
addr16
jmp
outs
leave
xor
jns
push
sbb
ficomp
in
stos
mov
out
pop
push
nop
cdq
pop
aas
pop
popf
mov
mov
(bad)
sbb
adc
and
add
pop
ds
test
int
jne
fimul
cmps
stos
stc
sbb
clc
ret
bound
mov
fmul
cmp
dec
mov
in
(bad)
pop
add
scas
adc
dec
dec
dec
shr
sbb
sahf
fiadd
das
add
and
xchg
xchg
push
test
rol
sar
adc
cmc
sub
scas
push
imul
lods
jb
xchg
sub
sub
dec
and
xor
loopne
rcr
fidivr
inc
or
inc
clc
add
pop
jmp
push
sar
fsubr
sub
mov
xchg
imul
mov
pop
pop
pop
jg
pop
aaa
or
lahf
xchg
(bad)
mov
pop
in
jne
in
ret
ds
xor
xor
not
jecxz
push
icebp
sti
dec
mov
cmps
add
add
loopne
pushf
(bad)
or
sbb
popf
or
in
mov
mov
jg
cmps
push
fwait
(bad)
push
gs
jge
or
add
or
cmp
retf
pop
pop
rcr
rol
shr
inc
hlt
gs
add
shl
jne
sbb
cmp
pop
and
mov
movs
pop
(bad)
(bad)
sub
aad
and
ret
pusha
stos
sbb
mov
cmp
pop
js
loopne
shl
arpl
repnz
dec
jmp
jg
add
mov
mov
cdq
imul
dec
mov
lock
pop
scas
outs
(bad)
std
jbe
or
push
mov
test
mov
sub
int
mov
xchg
cwde
push
mov
push
xchg
cdq
ret
mov
or
int
jecxz
aaa
mov
mov
dec
sti
xor
jl
lea
cdq
cdq
(bad)
sub
leave
std
and
jbe
(bad)
popa
fisubr
pop
mov
(bad)
cmps
xor
pushf
jmp
pop
mov
mov
push
cli
mov
mov
repnz
xor
mov
ins
cmp
xchg
pushf
not
call
mov
fs
fisttp
pop
and
and
add
pop
add
rcl
(bad)
lods
dec
cmps
adc
dec
pop
dec
imul
sbb
test
adc
pop
daa
out
retf
sub
gs
sub
lahf
fsubrp
fild
mul
ss
inc
data16
fadd
arpl
pextrw
scas
test
mov
sahf
jbe
jb
icebp
sub
mov
in
mov
jl
hlt
test
cmp
aas
ficom
faddp
out
scas
outs
out
push
pop
cdq
xor
mov
mov
stos
push
or
imul
(bad)
aad
in
xchg
jmp
jns
dec
jecxz
std
fldenv
pop
sbb
test
sbb
and
xchg
imul
popf
sbb
cwde
add
pop
sub
aam
lahf
xchg
add
cwde
cmp
xor
scas
pop
mov
inc
es
and
pop
fxch
pop
loope
adc
sbb
mov
inc
mov
pop
or
mov
sbb
push
(bad)
jl
(bad)
inc
div
outs
push
movs
in
fwait
inc
test
mov
add
xchg
xlat
mov
mov
mov
xchg
and
mov
repnz
and
data16
sub
fucom
ins
popa
xor
pop
call
scas
jns
pushf
mov
xor
mov
sbb
movs
mov
or
enter
sbb
sub
xor
std
xchg
jae
mov
xor
in
int
xchg
cld
or
neg
retf
sbb
cdq
cmp
push
pushf
test
xor
test
mov
pop
mov
fcom
test
cmp
adc
or
sar
pop
jb
mov
push
dec
and
xchg
jmp
cmp
pop
mov
xor
xor
jl
bound
ins
test
jmp
div
hlt
out
sub
das
inc
out
fst
cmp
inc
fs
dec
fld
fbld
inc
fcmovnb
popa
push
nop
add
inc
jmp
push
or
ret
pop
inc
test
add
jle
outs
mov
pop
sbb
mov
stos
xchg
stos
jae
cmp
call
push
mov
adc
(bad)
pusha
(bad)
cli
jl
sbb
ret
xor
cmp
aas
or
test
cmp
mov
mov
cdq
scas
in
movs
adc
mov
adc
xchg
js
or
int
pop
dec
cdq
loope
adc
mov
loop
mov
iret
iret
retf
pop
gs
enter
popf
(bad)
ss
call
mov
pop
sub
stos
jmp
sbb
xor
aas
or
cmp
dec
xor
and
mov
jnp
addr16
ja
sbb
push
cmp
xor
dec
int
test
ret
jmp
(bad)
neg
ret
outs
pop
inc
mov
add
or
ror
mov
xchg
lahf
ds
push
das
and
fst
test
shl
lods
aas
call
pop
inc
cmp
xchg
pop
push
rcr
aas
xor
jns
shl
mov
pop
call
js
cmp
scas
xchg
fisttp
xchg
add
call
sahf
jmp
pop
xor
lds
repnz
mov
sbb
cld
shl
xor
mov
rcl
push
sbb
mov
imul
or
adc
push
test
loopne
test
and
adc
ds
imul
cmps
push
jb
cmp
in
inc
jecxz
in
or
out
retf
jns
xchg
es
int3
xchg
addr16
pop
sub
sbb
ins
rcl
aam
and
inc
es
outs
enter
mov
pop
lods
add
mov
sti
pop
add
mov
jne
and
jg
(bad)
fadd
xor
sub
inc
jbe
pop
lods
stc
dec
hlt
leave
imul
movs
movs
sahf
and
in
sahf
stos
push
push
inc
add
sti
dec
arpl
xor
xor
call
pop
aas
or
dec
xchg
cmp
gs
lods
mov
test
fdivr
mov
mov
cmp
fnstenv
sbb
sbb
int
outs
or
jle
pop
cmp
mov
(bad)
mov
jnp
shr
(bad)
ja
push
fiadd
test
jo
jb
out
movs
mov
jmp
outs
cmp
sbb
pop
dec
jb
bound
add
or
pop
inc
movs
jmp
(bad)
data16
mov
cmps
lds
sbb
fdivp
cwde
daa
pushf
xchg
xor
int3
sub
xchg
fbld
pop
sbb
(bad)
ficom
sbb
xchg
cld
iret
cli
xor
push
adc
mov
lock
cmp
mov
ret
mov
sub
retf
std
or
ins
loope
rcl
and
aaa
faddp
push
loope
jle
push
movs
test
mov
rcr
out
xchg
loop
into
repz
jmp
pop
inc
jle
aas
jno
loopne
fwait
xor
jnp
and
lock
or
xor
pop
push
loop
jge
fidivr
and
cmp
or
push
mov
add
fidivr
push
and
gs
add
push
xchg
dec
adc
sub
sti
int
inc
jb
pop
xor
mov
mov
mov
lods
dec
adc
jecxz
or
js
not
test
rcr
pop
dec
push
scas
push
mov
add
cmp
add
or
mov
cmp
xchg
scas
mov
xchg
rcr
pop
aas
push
push
cmp
cmp
adc
sub
mov
ds
mov
popa
jp
dec
push
cmc
mov
cdq
aad
jl
xchg
jne
pop
cs
dec
dec
push
push
jns
xchg
pop
inc
mov
outs
das
imul
and
sbb
push
mov
imul
inc
jmp
adc
mov
out
or
inc
push
out
int3
push
jmp
sbb
xchg
fnsave
dec
test
xor
inc
sub
(bad)
xchg
or
xchg
retf
sbb
sub
imul
out
push
pop
cmps
push
or
in
dec
add
push
call
ins
jb
and
lods
dec
lahf
test
inc
(bad)
daa
adc
outs
ret
rcr
push
lahf
jmp
nop
add
dec
jbe
cmp
mov
arpl
mov
jo
sbb
xchg
xchg
sbb
pop
pop
sub
mov
gs
add
out
popf
jo
in
imul
mov
int
or
mov
daa
aad
dec
je
pop
push
js
mov
xchg
adc
in
add
sbb
int3
xchg
scas
enter
aam
mov
or
sar
sbb
dec
push
stos
dec
xor
pop
xchg
push
push
push
test
lods
xchg
add
cmp
add
fnstcw
inc
and
aad
add
add
sbb
sahf
cwde
mov
mov
mov
dec
add
sbb
push
push
jg
seto
test
or
and
ret
lock
enter
mov
xchg
test
out
sahf
jo
inc
cwde
out
or
mov
fisttp
loope
jmp
push
or
cmp
retf
mov
sub
xor
ret
xor
dec
xchg
ror
ffreep
ret
rcr
lods
cmp
in
cmp
mov
mov
dec
cli
xchg
rol
jno
in
mov
pop
xlat
out
and
mov
cwde
call
repz
xor
clc
das
dec
adc
leave
jmp
push
ins
shld
ror
and
loop
js
mul
cli
neg
jl
lods
lds
sub
lods
push
scas
out
jae
ins
cwde
fmul
jne
jge
fptan
inc
mov
jb
popf
jmp
pusha
dec
call
out
fwait
popa
(bad)
sbb
adc
imul
int3
icebp
gs
xor
xor
aas
sbb
pop
repz
pushf
je
mov
mov
icebp
aam
(bad)
fcmovnu
repnz
aam
test
pop
aam
jmp
arpl
rcl
(bad)
fcom
jno
or
loope
pop
xor
push
dec
out
ins
lea
sbb
fisub
call
adc
mov
movs
xchg
imul
or
in
jge
scas
mov
shl
cli
test
dec
push
rcr
add
stos
and
jmp
and
xlat
fs
xor
xchg
xor
pop
push
jmp
into
shl
(bad)
mov
inc
xor
sahf
mov
pop
test
mov
shl
std
jno
in
mov
mov
fwait
inc
xor
add
inc
sbb
pushf
lds
mov
stc
pop
and
xchg
out
ja
fwait
inc
jno
or
arpl
sub
scas
test
imul
mov
imul
data16
mov
neg
dec
add
stc
shl
xchg
dec
pop
xor
mul
xor
fwait
aad
push
push
sub
mov
fidiv
jns
cmp
push
add
loopne
sbb
jnp
mov
mov
mov
es
inc
jg
pop
dec
stos
push
jg
mov
xchg
daa
stos
and
out
push
dec
inc
push
pop
stos
nop
push
push
sbb
dec
mov
jns
pop
adc
sti
mov
inc
inc
ds
xchg
inc
popa
mov
jbe
test
(bad)
leave
retf
dec
pushf
cmps
out
ds
movs
push
mov
test
nop
adc
out
in
rcr
jno
inc
repz
xchg
adc
cmp
mov
or
xor
mov
sub
paddusb
jmp
dec
bound
sbb
adc
push
or
aad
mov
xor
enter
jp
outs
cmp
mov
jmp
stos
in
pop
mov
les
cmp
jle
cli
xchg
push
mov
pop
mov
movs
mov
ret
loope
jl
dec
push
pushf
sub
and
icebp
cdq
or
gs
(bad)
or
dec
cmp
mov
push
and
inc
add
dec
xchg
adc
inc
cmp
or
loope
cmp
cdq
or
cs
mov
lea
mov
enter
inc
shl
popf
sub
push
enter
pusha
es
push
mov
nop
sub
leave
mov
or
je
pop
add
shl
add
sar
popf
pushf
and
add
sub
dec
stos
and
lock
jecxz
sar
pop
push
shl
fldenv
mov
dec
add
pop
retf
repz
(bad)
and
cmp
mov
mov
pop
or
lds
add
scas
pop
icebp
call
or
lahf
ins
sub
fbstp
test
loope
arpl
dec
mov
rol
lods
pop
fldz
sub
fild
out
push
sbb
push
mov
es
outs
push
scas
shl
ret
imul
retf
stc
pop
cmc
pop
outs
aaa
fs
out
clc
or
and
mov
into
arpl
mov
sub
cmp
jo
ins
jns
and
and
mov
daa
add
xchg
pop
div
stos
and
movs
loope
cmp
push
fldenv
mov
fsub
sub
push
dec
push
in
stos
or
ret
jnp
popa
pop
jmp
add
rol
imul
ror
outs
or
mov
dec
leave
out
xchg
push
adc
cmp
xchg
int
jne
mov
push
ret
mov
test
pop
hlt
mov
jle
in
push
dec
aad
and
push
dec
out
add
push
dec
addr16
aaa
push
fcomp
loop
cmp
cdq
aad
(bad)
sub
shl
pop
js
pop
repz
jg
fdiv
mov
or
rcr
xchg
loopne
shl
int3
sbb
repnz
into
and
shl
out
into
popf
jge
iret
push
dec
cmp
mov
fld
jae
inc
(bad)
adc
dec
jnp
popf
sub
dec
ds
push
jg
mov
adc
call
add
push
push
pop
xchg
inc
push
mov
jmp
xchg
sub
nop
mov
push
repz
dec
je
int3
je
mov
daa
push
xchg
rep
stos
mov
xor
dec
xchg
(bad)
in
mov
pop
dec
jno
movs
xor
lahf
inc
add
add
jnp
cmc
jb
mov
out
ja
mov
movs
fnsave
cmp
mov
adc
ss
cmp
add
dec
and
lock
out
leave
inc
mov
push
push
movs
shl
xchg
outs
pop
xor
xchg
das
jo
or
inc
nop
pop
fnstenv
mov
and
xlat
xchg
mov
xchg
sbb
std
or
js
pop
prefetch
or
push
jns
imul
cmps
loopne
mov
xchg
adc
mov
(bad)
(bad)
call
pop
and
or
adc
arpl
or
add
sub
sub
adc
ret
enter
call
mov
sti
cmp
jmp
cli
imul
sub
fs
scas
and
jno
and
mov
mov
dec
xor
dec
int3
fsub
inc
int3
xor
push
(bad)
inc
sub
shr
popf
in
mov
out
je
mov
hlt
fs
dec
push
je
mov
data16
xchg
and
jecxz
jb
dec
cwde
jne
das
cmp
pop
mov
xlat
loop
call
test
gs
sub
xchg
mov
xor
jmp
daa
shl
cmps
xchg
xor
jne
sar
aam
xchg
hlt
push
adc
loope
dec
jge
jae
pop
cmps
push
test
jmp
mov
jne
movs
mov
mov
popa
mov
add
push
aam
add
sbb
pop
fistp
repnz
(bad)
adc
popa
popa
ss
fidivr
stos
stos
mov
cmp
push
mov
sub
cmp
mov
dec
mov
lea
cmps
push
fisttp
xor
mov
out
test
pop
sbb
lods
sar
lahf
cmp
push
or
or
dec
(bad)
cld
mov
xchg
gs
sub
je
(bad)
hlt
jle
ins
cmps
(bad)
call
jle
cmp
scas
nop
popa
scas
xchg
arpl
aad
push
xchg
bound
hlt
dec
mov
int3
mov
(bad)
icebp
xchg
jecxz
(bad)
push
mov
xchg
aaa
frstor
cwde
jns
in
scas
jle
movs
test
arpl
inc
bound
pop
dec
xchg
xor
shr
add
neg
test
outs
jnp
sbb
ds
pop
or
gs
das
leave
dec
mov
mov
ins
rol
xor
fstp
mov
aam
out
loope
sbb
(bad)
jb
in
pop
or
loope
add
fnstsw
inc
mov
jmp
and
mov
ss
jne
fild
rcl
adc
jae
pushf
ja
outs
fisubr
(bad)
hlt
in
(bad)
sbb
ds
lds
xchg
dec
in
loopne
push
jg
loope
div
mov
mov
ins
rol
mov
lahf
mov
xor
sbb
fcom
(bad)
push
div
or
inc
xchg
je
adc
dec
mov
mov
fwait
mov
out
movs
or
repnz
add
xor
xchg
test
inc
xchg
and
cdq
fild
push
imul
sbb
ss
stos
sub
std
lea
repz
movs
lods
dec
mov
retf
sbb
and
out
(bad)
jp
lea
dec
mov
iret
jge
and
xchg
jbe
les
jp
jg
popa
sub
aam
(bad)
movs
jbe
mov
or
je
dec
cld
aad
bound
pop
in
sub
sbb
pop
mov
mov
sbb
in
sbb
repnz
out
mov
cdq
ret
ins
mov
pop
out
xor
push
out
or
sbb
out
mov
fstp
cli
and
mov
movs
cmp
mov
pop
mov
leave
test
shl
inc
sbb
and
jno
je
fdivr
dec
into
pop
push
jb
fidiv
mov
and
sbb
xlat
jbe
outs
push
mov
push
cmp
mov
xlat
add
into
mov
fistp
and
pushf
test
in
(bad)
mov
and
stos
pop
add
out
pop
sbb
cmp
div
xor
dec
leave
cmp
pop
clc
sbb
sbb
dec
lds
pop
jmp
icebp
in
rol
retf
jl
fs
push
or
push
xor
out
pop
push
outs
cmp
mov
mov
adc
xor
pop
jle
mov
sub
push
out
popf
js
imul
cmp
test
adc
popa
mov
inc
push
add
bound
xchg
mov
stos
or
stos
or
inc
fimul
mov
bound
jmp
rol
fistp
ret
push
test
fs
pop
cmp
add
int3
jnp
iret
mov
rcl
es
movs
xchg
adc
out
cmp
outs
xchg
add
aam
push
or
dec
push
sub
imul
aad
test
cwde
cmps
mov
jecxz
ret
cmp
movs
pop
jo
sbb
jno
cli
lods
xchg
mov
pop
sbb
sar
bound
popf
sbb
enter
sbb
mov
adc
mov
cmps
adc
shl
outs
repnz
dec
jnp
pop
retf
sahf
push
and
lods
outs
in
mov
cmp
cmp
loopne
js
xchg
ds
adc
call
inc
jmp
retf
(bad)
ds
inc
mov
inc
dec
rcr
mov
test
call
(bad)
inc
push
loopne
pop
xchg
popf
jge
shl
hlt
(bad)
fld
enter
dec
mov
inc
inc
ja
scas
ins
cmps
add
jge
cmp
or
inc
out
xor
movs
cmp
mov
sub
mov
mov
mov
add
js
pop
xchg
mov
in
das
jg
mov
(bad)
in
in
cmp
adc
push
stos
cmp
pop
mov
enter
inc
out
rol
sbb
dec
lea
imul
xchg
pop
and
movs
sub
shl
scas
push
prefetch
cmp
xchg
out
aad
add
(bad)
out
lea
(bad)
jmp
inc
fcmove
sahf
movs
imul
xchg
out
jno
lods
(bad)
jl
gs
inc
pop
fcmovnb
sahf
jecxz
xchg
adc
xchg
dec
inc
jmp
in
fadd
mov
daa
retf
sub
sbb
pop
icebp
jo
and
fsubr
jle
adc
ficomp
dec
xor
or
inc
ss
mov
mov
(bad)
arpl
pop
les
and
sti
leave
imul
aas
mov
loopne
lds
hlt
push
loope
popf
jmp
ins
lea
in
ret
sub
pop
test
cld
or
and
sbb
repz
ret
jg
mov
lahf
inc
ret
cmc
xchg
movs
retf
lods
lock
push
pop
inc
in
push
out
pop
mov
das
int
or
mov
xor
mov
inc
mov
jns
shr
jae
in
das
ja
aas
or
cmp
sbb
loop
movs
addr16
(bad)
or
mov
jnp
xor
lea
and
popf
add
into
inc
loope
repz
daa
pop
js
ja
pushf
jae
cmp
test
in
and
mov
dec
xor
lds
dec
adc
loopne
fwait
cmp
test
stos
nop
jmp
mov
pop
aad
push
add
cmp
mov
mov
(bad)
xlat
in
in
pusha
dec
imul
iret
or
mov
xchg
sbb
or
mov
inc
and
inc
inc
mov
aad
mov
sbb
ret
mov
int3
nop
jl
gs
fcomp
test
lahf
nop
cwde
mov
hlt
lds
fs
and
sahf
cli
jae
cmp
sbb
fcomp
fnstenv
add
mov
pop
xor
pop
jbe
mov
fisub
enter
int3
xchg
aas
sar
(bad)
mov
pusha
mov
icebp
aas
(bad)
icebp
push
xchg
adc
inc
dec
rol
out
jne
mov
shr
std
jns
gs
xchg
fwait
jecxz
aad
fbld
pushf
stos
and
outs
(bad)
jo
cmps
jmp
cdq
pop
pop
push
xor
aad
sbb
out
iret
repz
sub
sbb
loop
xor
fmul
mov
xor
daa
dec
mov
ds
arpl
jmp
push
mov
into
daa
hlt
cmp
cmp
mov
adc
push
jg
loopne
movq
inc
clc
mov
jmp
push
sahf
data16
out
cmp
push
leave
mov
pop
or
add
cs
or
sbb
mov
call
lds
xor
cmp
test
sub
outs
jbe
shl
push
add
inc
push
into
and
sbb
dec
xchg
lods
fs
outs
cwde
cmp
push
in
cdq
rcl
adc
inc
rcl
dec
jge
mov
es
push
cwde
push
stos
retf
add
aad
mov
sar
test
fs
xchg
mov
scas
ficom
in
or
fwait
into
mov
ret
cmp
sbb
jno
(bad)
pop
daa
and
jbe
retf
imul
mov
inc
inc
repz
pop
xchg
loopne
jge
inc
bndldx
(bad)
cli
dec
(bad)
pop
sub
adc
mov
add
push
sti
mov
scas
sbb
xor
mov
push
inc
outs
pop
dec
sub
add
ficom
ret
scas
call
mov
test
sbb
push
cld
xor
shr
je
arpl
inc
inc
xchg
mov
out
movs
aaa
or
mov
cmp
or
push
xchg
sbb
sub
add
dec
sub
push
mov
dec
cdq
xor
mov
lock
sub
ror
pop
mov
add
push
xor
lds
loopne
dec
dec
shl
fiadd
add
fstp
jmp
stos
push
leave
inc
shl
mov
pusha
fisubr
mov
lahf
sub
cmp
dec
mov
mov
push
inc
mov
adc
icebp
mov
(bad)
adc
dec
mov
sbb
nop
jmp
enter
xchg
pop
out
inc
pop
dec
xchg
cmp
scas
(bad)
stos
push
jnp
add
call
pop
enter
jmp
adc
mov
nop
dec
icebp
pop
enter
(bad)
jmp
outs
adc
mov
jns
jmp
std
sti
add
or
scas
div
imul
ret
jns
bound
and
out
pop
ror
sbb
ds
iret
mov
push
fisub
inc
aad
and
(bad)
mov
sub
lods
push
adc
(bad)
stc
ror
stos
inc
cs
(bad)
popf
into
push
fsubr
sub
mov
mov
cdq
sub
add
in
adc
bound
mov
mov
cmp
dec
xor
sbb
loope
adc
add
mov
mov
retf
or
add
jno
fisub
(bad)
nop
and
pop
shl
jmp
inc
ds
icebp
sbb
push
mov
mov
ja
add
pop
xchg
add
mov
mov
rol
into
pushf
sahf
out
stos
xchg
dec
movs
adc
sti
cld
xor
stos
jno
add
ss
xor
cmc
mov
out
mov
mov
push
pop
sbb
xchg
lahf
cld
bound
sub
mov
popf
dec
push
xchg
int3
jg
pop
fstp
mov
div
jnp
(bad)
fwait
gs
nop
repnz
das
mov
sbb
xchg
pop
pop
popf
lds
loope
ins
sub
cmc
jecxz
adc
xchg
rcr
sub
and
stc
jmp
bound
pop
jbe
shl
pop
cli
hlt
jnp
test
addr16
cli
xor
stos
sub
inc
cwde
gs
test
cmp
cmp
lods
push
ss
mov
and
cmc
in
int3
sub
or
adc
cmc
ss
test
dec
lahf
mov
pusha
jns
pop
sub
cs
push
movs
call
mov
dec
inc
sub
shl
popf
jb
ret
and
mov
or
rol
pop
mov
mov
std
and
push
cmp
popf
fidiv
inc
mov
push
push
mov
fcmovb
fisttp
pop
push
ds
jnp
(bad)
lea
mov
test
sar
mov
inc
std
sar
imul
pop
sar
xor
pop
mov
and
add
lds
xchg
mov
cmps
lahf
mov
mov
dec
lock
inc
jne
mov
adc
retf
adc
or
in
test
push
lods
shl
adc
es
lea
arpl
not
sar
adc
test
sbb
xlat
loopne
mov
cmp
or
sbb
inc
mov
push
push
popf
mov
pop
loop
dec
add
mov
dec
dec
adc
sub
jne
js
mov
mov
sub
adc
sub
std
fisub
iret
xor
push
fcmovu
and
fcom
bound
pop
xchg
inc
mov
call
mov
test
xchg
mov
xchg
dec
js
fsub
dec
into
cdq
bound
inc
mov
cmp
or
dec
out
sti
pop
mov
xchg
aad
fdivr
sahf
adc
pop
daa
dec
push
je
mov
pushf
lahf
pop
adc
es
retf
sub
ins
mov
cmpxchg8b
loop
out
add
add
push
xchg
push
pop
pop
test
sbb
mov
fidivr
or
arpl
xor
jo
mov
and
dec
push
fsubrp
dec
mov
pop
pusha
cmps
xor
ja
or
mov
aam
movs
push
rol
mov
mov
mov
pop
pop
fsub
rol
mov
cmp
stos
ret
mov
les
jcxz
sbb
scas
and
(bad)
xor
cmps
les
dec
mov
xchg
pop
lea
mov
rcl
ss
ffreep
repz
loope
dec
pop
push
mov
push
shl
aaa
push
xor
mov
in
imul
mov
pop
jbe
xor
lea
jno
mov
xchg
adc
loopne
inc
mov
mov
retf
xchg
xor
mov
leave
xlat
adc
pop
rol
cld
push
fist
mov
sub
push
adc
push
cwde
fiadd
dec
mov
or
loop
xchg
movs
xor
sbb
mov
dec
mov
pop
(bad)
(bad)
sub
cmp
vprotw
sub
sub
add
aas
out
std
sti
mov
ins
shl
aam
jmp
and
lahf
xchg
(bad)
ss
mov
jge
xchg
mov
push
adc
cmc
dec
aam
retf
push
pop
mov
or
xchg
pop
frstor
(bad)
jmp
das
ins
inc
pop
in
adc
inc
and
fistp
xchg
imul
dec
xchg
cmp
push
leave
push
cli
xrelease
aas
and
push
test
cmps
xor
mov
test
cmp
arpl
sub
cs
mov
(bad)
loopne
sbb
mov
cwde
or
and
mov
scas
imul
addr16
dec
retf
mov
pop
cmp
add
ss
dec
sbb
dec
movs
jmp
mov
dec
je
lods
and
push
les
pop
xor
mov
dec
repz
pusha
call
mov
mov
out
xchg
test
outs
mov
jge
xchg
push
loopne
(bad)
mov
pusha
enter
lods
fldenv
dec
dec
fcmovbe
in
jo
test
dec
push
fimul
jle
out
xchg
imul
pop
mov
in
and
out
cld
mov
sbb
iret
mov
sbb
sub
rep
add
stos
adc
arpl
pop
mov
push
ror
div
sub
mov
jnp
pusha
dec
xor
es
xor
arpl
daa
into
pop
xchg
fcomp
inc
sti
jnp
cmp
mov
push
mov
cmp
jne
jecxz
call
into
cmp
icebp
dec
lock
das
pop
shl
xor
ss
mov
fsub
jl
(bad)
addr16
scas
cmps
mov
enter
in
push
in
xor
xchg
popa
push
addr16
inc
xchg
pop
cmc
outs
sub
call
rcr
in
sub
add
push
hlt
bound
push
test
fld
aaa
idiv
icebp
dec
pop
cmp
int3
or
jge
out
jne
pop
fidiv
pop
ror
stc
inc
mov
(bad)
ret
aas
out
int
out
jl
call
sub
test
retf
mov
retf
dec
test
stos
mov
dec
xchg
add
pusha
sub
popf
arpl
pop
mov
jnp
push
shl
xor
arpl
xchg
arpl
inc
call
ret
adc
(bad)
adc
jmp
adc
cwde
sti
fwait
outs
rol
xchg
pop
cmp
ins
lds
and
push
dec
dec
mov
(bad)
dec
jl
jae
cld
(bad)
hlt
mov
enter
inc
cmp
daa
enter
cld
cmp
xchg
sub
(bad)
mov
push
imul
cli
and
or
mov
rcr
ss
xchg
in
addr16
call
dec
movs
jno
das
sub
arpl
xor
mov
(bad)
inc
sub
out
mov
xchg
pop
or
mov
cmp
imul
neg
fiadd
xor
dec
pop
das
push
push
aas
pop
pop
sub
fnstsw
fwait
add
ja
loopne
jp
or
add
mov
sub
jb
jb
or
add
call
sub
jmp
jge
dec
or
cmp
ja
fucomi
loopne
push
(bad)
inc
pop
adc
sbb
xor
and
data16
jae
xor
jg
mov
inc
mov
mov
add
aad
adc
jecxz
inc
add
add
iret
movs
arpl
dec
lods
sbb
cmps
sbb
push
sub
xor
mov
test
mov
lock
jmp
mov
test
jecxz
dec
xchg
cmp
sbb
inc
daa
add
gs
test
push
popa
int
mov
dec
inc
xchg
cmp
out
ror
(bad)
push
mov
jmp
add
inc
inc
sub
in
mov
mov
ror
ror
jo
push
push
xor
mov
adc
push
inc
mov
pop
int3
lods
mov
movs
(bad)
mov
fisub
das
push
loopne
cld
dec
loopne
gs
mov
pushf
inc
sbb
ds
js
outs
imul
mov
cmp
shl
inc
fnstsw
pop
sub
and
push
mov
out
sar
sahf
imul
xor
inc
cli
jno
adc
add
mov
les
(bad)
shr
add
sub
mov
cmp
lea
out
inc
add
(bad)
mov
and
push
aas
ja
inc
inc
lds
dec
rcl
mov
mov
scas
cwde
frstor
test
xchg
ins
call
and
aam
cmps
cdq
xor
fs
adc
(bad)
jmp
adc
and
mov
inc
icebp
and
mov
xor
or
adc
scas
inc
jmp
mov
ja
cmps
sbb
and
int
cmp
pop
das
sbb
sti
jo
lahf
mov
dec
jnp
cmp
cmp
lock
adc
sbb
fucomip
and
in
lea
es
mov
cmps
push
and
and
test
icebp
and
stos
mov
std
pop
pop
cwde
aad
div
sbb
cli
cmp
mov
pop
or
lods
adc
mov
aam
xor
pop
out
and
pushf
inc
cmp
dec
adc
xor
repz
sbb
pop
iret
test
pop
mov
cmp
mov
(bad)
lea
jge
and
xor
push
or
or
or
imul
stos
popa
in
sar
popa
sbb
pop
inc
xchg
or
jnp
xor
jns
stc
push
xchg
iret
lods
jo
popa
(bad)
fldl2e
gs
(bad)
lea
loope
add
outs
sub
call
lock
xchg
inc
pop
mov
das
push
push
cwde
enter
adc
sbb
xor
dec
rcl
or
mov
scas
mov
or
stos
jnp
aaa
xchg
fisub
ret
adc
push
jecxz
sub
(bad)
fisttp
dec
jno
sub
lahf
sub
push
xchg
jecxz
sbb
pop
jns
push
lds
push
sbb
xor
jge
dec
add
sbb
popf
sbb
mov
rol
dec
dec
ret
inc
push
shl
(bad)
mov
adc
dec
imul
xchg
scas
std
fwait
jl
pop
into
jmp
jb
call
sub
movs
mov
or
push
or
and
loopne
mov
jb
in
arpl
adc
cmp
scas
sub
jbe
sbb
mov
mov
push
or
inc
movs
mov
mov
test
stos
or
inc
lahf
lahf
jecxz
popf
xor
in
fst
xor
cmp
arpl
ins
push
fwait
scas
sbb
sub
mov
aaa
xchg
xor
sub
ins
cmp
pop
js
jbe
dec
ror
add
mov
ja
rcl
addr16
ret
(bad)
pushf
dec
add
dec
fsub
xor
and
xchg
mov
jle
cdq
stos
(bad)
push
xor
push
xor
test
xor
push
jecxz
mul
jne
in
and
shl
mov
out
arpl
xchg
add
or
adc
test
mov
cmp
jp
shl
imul
and
fcmovbe
cwde
int3
in
and
mov
jecxz
jb
outs
hlt
icebp
mov
mov
aam
xor
iret
pop
scas
mov
jno
loop
in
in
lods
lds
cmp
lods
pop
add
retf
scas
int
inc
jecxz
jb
xor
mov
dec
into
mov
mov
xor
int
sbb
or
add
psllq
push
jp
and
inc
repnz
xor
dec
mov
ror
xlat
sbb
pop
hlt
cmc
sbb
mov
and
jg
and
out
fcmovnbe
int3
push
cmp
out
pusha
lahf
inc
mov
cdq
jns
rcl
mov
ins
mulps
xchg
inc
mov
dec
lock
jae
(bad)
sub
not
push
ret
cmp
arpl
sub
xchg
fwait
(bad)
fiadd
enter
xchg
cmp
pop
adc
in
rcr
out
and
pop
mov
retf
lods
push
arpl
cmps
xchg
ds
or
mov
jns
push
jmp
fucom
out
(bad)
int3
or
lea
aam
push
sar
loope
xor
push
pop
out
repnz
ins
sbb
pop
dec
cmp
jno
loope
cmp
push
movs
dec
(bad)
mov
sbb
ss
push
out
jmp
inc
xchg
cmp
inc
jb
fistp
mov
pushf
out
adc
or
inc
ror
mov
and
stos
int3
cmpps
gs
loope
outs
(bad)
out
or
int
mov
repz
outs
sub
push
add
inc
(bad)
mov
repz
(bad)
les
mov
jnp
lods
imul
sbb
inc
movhps
aaa
jno
sub
loope
cmp
fwait
nop
inc
pop
xchg
pop
adc
jbe
push
pusha
jp
sub
cmp
ins
cmp
xchg
xchg
xchg
jo
leave
push
out
cmps
inc
dec
cmp
pop
pop
(bad)
mov
dec
pusha
mov
and
fistp
mov
rcr
adc
mov
cmp
jbe
dec
mov
mul
xchg
lea
mov
sub
cmp
lods
sub
mov
jecxz
das
(bad)
sahf
inc
push
xlat
std
call
daa
(bad)
mov
xchg
fidivr
dec
clc
aam
jae
shrd
or
mov
push
std
les
mov
and
test
push
rcl
sub
jo
ret
cli
scas
sbb
push
loop
add
cmp
(bad)
cmp
rcl
push
add
mov
xchg
cmp
mov
(bad)
in
mov
leave
popf
cmps
and
fldcw
pushw
xchg
sbb
(bad)
je
adc
push
je
dec
neg
pop
xchg
and
fstp
sub
test
daa
std
outs
repz
mov
cld
pop
stos
pop
cs
push
pushf
jo
ins
in
mov
hlt
mov
push
or
das
bound
mov
push
mov
xor
mov
xchg
jmp
stos
xor
mov
mov
out
rcl
daa
sti
fcmove
sbb
mov
rcl
dec
mov
pop
sub
cli
je
cmp
pop
sub
mov
mov
jmp
jnp
sub
cmp
jge
xor
repz
dec
and
adc
in
cwde
rcl
outs
pop
mov
jl
mov
and
push
dec
retf
adc
stos
into
aas
sbb
and
fadd
cmp
jmp
mov
xchg
add
test
pop
add
jnp
mov
cmp
cwde
ss
in
adc
sub
push
inc
outs
jp
inc
inc
int3
scas
pop
and
add
cwde
push
(bad)
daa
stos
test
test
cli
dec
pusha
clc
ds
add
popa
add
fisubr
add
lods
fmul
jbe
mov
lea
push
xchg
and
pop
or
adc
pop
lahf
or
(bad)
out
sti
ss
jl
std
fisttp
mov
push
lods
pop
push
stos
mov
test
cld
dec
push
popa
div
pop
stos
inc
clc
mov
(bad)
xor
out
mov
std
add
mov
sub
inc
sbb
add
push
into
add
pop
jl
in
inc
icebp
mov
push
pop
cmp
cdq
xchg
(bad)
movs
xchg
jbe
fbld
xlat
jle
ret
inc
ja
add
retf
stc
xchg
jmp
gs
test
cmp
aas
sub
or
sti
cmp
inc
pushf
push
mov
cmc
idiv
stc
push
add
sahf
push
stc
scas
rcr
test
loopne
jg
sar
mov
add
fwait
mov
mul
pop
inc
mov
pusha
jl
push
xchg
fwait
or
popa
ret
jge
and
fidivr
out
push
mov
cli
sbb
das
sbb
adc
xor
test
mov
sbb
icebp
stos
int
cmps
sbb
sahf
addr16
xor
repz
repnz
fidiv
ds
xchg
dec
cmp
mov
not
pop
retf
retf
in
cwde
aad
and
(bad)
fstp
data16
fldenv
xchg
mov
push
dec
aaa
in
and
stos
pop
cli
push
xchg
stc
mov
push
pop
out
dec
mov
jg
(bad)
or
jmp
xor
sub
retf
fsubp
and
inc
inc
or
mov
call
cdq
rcl
test
in
rol
repnz
loop
jecxz
jl
or
push
out
iret
jmp
test
sub
rcr
mov
ja
ror
lock
inc
and
and
push
jnp
sbb
ret
fdiv
push
jne
mov
retf
stos
leave
mov
cli
mov
scas
repnz
fsub
leave
stc
mov
ins
mov
mov
or
mov
and
mov
xchg
add
mov
loopne
pop
in
ret
mov
scas
stos
out
(bad)
mov
iret
pop
push
inc
push
fist
xor
or
cmps
lods
push
jmp
pop
push
jge
inc
mov
ja
dec
or
jnp
mov
jmp
mov
mov
jg
cmps
mov
and
dec
jg
and
xchg
arpl
movs
or
cli
mov
hlt
and
dec
sbb
sub
dec
sbb
add
cmps
hlt
test
inc
rcl
dec
jnp
jecxz
and
or
ror
push
push
in
lahf
pop
add
jle
lods
outs
mov
push
adc
out
es
mov
(bad)
mov
jg
and
data16
pop
lds
retf
lods
outs
mov
loopne
in
nop
xchg
ins
push
int
fistp
in
jle
jecxz
push
or
and
adc
mov
jmp
aam
mov
xchg
pop
mov
repnz
push
cmp
dec
data16
pop
push
inc
les
mov
push
lds
push
sub
call
adc
push
inc
adc
xchg
sbb
mov
lods
in
jmp
repnz
or
xchg
mov
daa
(bad)
mov
std
push
jp
dec
(bad)
imul
fisubr
xlat
lods
sar
pop
ja
cdq
jmp
in
out
fidivr
out
fwait
cld
pushf
(bad)
(bad)
cmc
cmp
(bad)
addr16
nop
cmp
sbb
cmc
jns
mov
mov
sti
mov
(bad)
stc
dec
mov
movs
push
call
xchg
jne
mov
sub
sub
and
push
std
jae
push
aad
pop
arpl
xor
popf
cmp
pop
pop
push
or
sar
mov
xchg
and
pop
dec
dec
sub
mov
mov
inc
stc
xchg
lea
xor
xchg
xchg
call
pop
rcl
call
ins
push
rcr
or
neg
scas
jle
adc
je
aas
push
xchg
xchg
fs
pop
mov
mov
push
inc
sti
dec
in
jle
fs
push
sbb
mov
sbb
push
lea
jl
in
in
and
xor
ja
mov
rsm
cwde
leave
mov
pop
je
mov
lods
sahf
loope
fdiv
mov
add
inc
add
enter
ss
mov
sbb
and
push
scas
push
outs
push
mov
sbb
mov
xchg
mov
(bad)
jb
and
cdq
imul
cdq
push
add
(bad)
add
stc
mov
sbb
iret
cmp
dec
mov
movs
ffreep
xlat
mov
shl
ret
enter
add
retf
not
leave
jecxz
out
xchg
jmp
sahf
(bad)
jmp
mul
inc
adc
aad
(bad)
or
jmp
adc
pop
mov
call
xlat
push
fstp
pushf
pop
xchg
pop
sub
mov
(bad)
cmc
clc
stc
inc
pop
call
aas
xchg
adc
mov
enter
jge
cmc
xchg
xchg
inc
ds
(bad)
stc
ficomp
xchg
sbb
imul
jecxz
ins
jge
mov
cmp
(bad)
out
popa
and
or
mov
pop
arpl
mov
(bad)
or
pop
inc
jnp
and
scas
mov
mov
xchg
pop
sbb
cmp
mov
out
xchg
jne
cmps
or
mov
push
popa
jne
mov
fldenv
dec
bound
neg
int3
das
enter
mov
cld
sti
xchg
(bad)
std
mov
jo
or
or
dec
mov
cld
ins
pop
(bad)
cmp
add
sbb
or
jge
jmp
xchg
jg
sub
push
test
cmp
scas
cmp
arpl
or
add
sbb
mov
dec
mov
mov
xor
das
lea
dec
or
add
into
cmp
xchg
jbe
hlt
adc
mov
lahf
test
sbb
jns
pop
dec
test
movs
add
(bad)
mov
add
push
inc
inc
dec
lods
rcl
sahf
push
jl
stos
cwde
aad
fiadd
xchg
mov
(bad)
(bad)
ss
xchg
xchg
cmp
or
shr
mov
push
or
lahf
movs
xchg
mov
push
add
inc
cmc
add
dec
nop
cmp
dec
or
gs
pop
push
adc
fucomi
scas
push
sub
pop
or
dec
dec
xor
clc
outs
adc
(bad)
(bad)
xor
adc
(bad)
mov
sahf
popf
fisub
jbe
into
gs
in
out
repnz
into
sbb
jp
ret
lock
push
mov
pop
popa
dec
pop
mov
out
lock
dec
inc
repz
fcom
jmp
xor
inc
call
dec
inc
mov
test
xchg
jecxz
or
arpl
inc
xor
mov
jmp
mov
mov
jae
and
mov
hlt
cmp
not
shr
int
cmp
sbb
xchg
inc
jecxz
mov
adc
in
fucomi
shl
ror
mov
add
xor
pop
pusha
fiadd
inc
aad
push
sar
mov
jno
call
push
or
int3
idiv
nop
fisub
mov
sub
(bad)
hlt
(bad)
sbb
loop
dec
mov
loop
push
push
scas
pop
push
and
imul
cmp
xor
mov
hlt
or
les
pop
adc
mov
jnp
dec
inc
mov
jp
jmp
push
dec
add
sbb
xchg
dec
or
sub
fcmovnbe
push
call
int3
mov
shr
fsub
fst
mov
jno
fild
mov
pop
mov
ja
mov
cmp
cmp
jo
js
jo
int
out
cwde
(bad)
fnstsw
pop
inc
(bad)
(bad)
call
sub
cmp
leave
iret
mov
lea
dec
add
lds
fs
rol
xchg
pop
sbb
cmp
int
or
in
bound
cs
xlat
fcmovnb
adc
fisttp
mov
leave
out
call
repnz
pop
sub
push
and
dec
jb
out
jbe
cmp
inc
mov
pop
cmp
pop
je
in
test
bound
retf
sahf
jb
jmp
add
xchg
shl
mov
jo
stos
imul
test
adc
jecxz
mov
xor
xchg
es
mov
pop
icebp
ds
ret
(bad)
sbb
iret
mov
stos
cmp
inc
dec
jmp
rcl
jmp
repz
stos
xchg
fisub
dec
jecxz
aam
hlt
jle
inc
xor
sti
pop
ret
mov
inc
inc
loopne
xor
stos
and
in
adc
jnp
std
jns
xor
dec
mov
test
fs
loop
(bad)
cmp
into
or
shr
xor
sub
cli
jae
mov
aad
cli
rcr
sahf
xor
(bad)
(bad)
jg
clc
mov
inc
and
xchg
ds
jo
cmp
inc
je
mov
sahf
(bad)
hlt
int
(bad)
bound
leave
rcl
jo
data16
lahf
jle
sub
sti
add
sub
(bad)
aad
fisub
mov
dec
inc
inc
mov
lods
lods
mov
aas
fisttp
(bad)
je
mov
into
adc
inc
dec
and
push
jmp
fimul
sub
and
js
adc
shl
aam
mov
ror
rol
and
or
mov
jnp
gs
pop
inc
addr16
cmp
and
call
out
stos
push
sub
xchg
rol
pop
(bad)
dec
mov
jmp
and
and
mov
jnp
mov
and
call
int3
fs
push
and
and
and
fild
in
(bad)
pusha
cmp
pop
lods
push
cld
call
popa
mov
xchg
dec
inc
scas
daa
ror
inc
jne
pop
ficom
daa
neg
and
sti
retf
dec
repz
push
push
dec
aaa
xchg
jg
mov
sub
ins
jo
or
addr16
dec
test
mov
or
std
cmp
in
mov
outs
or
test
(bad)
fistp
dec
push
inc
mov
ds
test
adc
not
jg
jae
(bad)
push
push
lock
jnp
dec
or
inc
ins
jae
mov
scas
mov
mov
hlt
mov
and
push
adc
cmp
pop
jg
xchg
scas
xlat
iret
add
loop
neg
mov
cmps
jne
aaa
cmps
test
push
pop
(bad)
std
xchg
push
sahf
jmp
sub
jmp
fsubr
jne
arpl
adc
pop
in
cmc
pop
(bad)
cmps
dec
test
pop
adc
outs
loope
stc
mov
push
sub
ins
inc
xchg
(bad)
pop
adc
shl
pop
int
jge
mov
iret
imul
mov
in
retf
ret
xchg
cmp
lods
mov
(bad)
jmp
xchg
sbb
nop
std
(bad)
icebp
pushf
bound
add
xor
cdq
or
push
mul
in
retf
popa
daa
ret
ds
mov
neg
push
sbb
(bad)
fist
or
(bad)
in
or
mov
mov
shr
shr
in
popa
pop
adc
adc
mov
fs
aas
dec
lds
lock
fcomp
mov
in
mov
mov
and
jbe
inc
mov
add
mov
add
xor
mov
fcomp
adc
inc
pop
xchg
mov
cwde
mov
cmps
lods
mov
pop
icebp
inc
dec
push
cld
cwde
mov
add
sar
in
mov
cmps
es
loopne
xchg
dec
dec
in
xor
jae
add
gs
hlt
scas
sbb
pushf
dec
jno
xchg
jbe
lea
push
aaa
mov
in
mov
cmc
or
ret
xchg
fcmovnu
xchg
pushf
cmc
bound
into
sahf
out
lods
test
data16
dec
mov
fwait
(bad)
jl
mov
add
or
and
mov
lds
pop
sub
cmp
mov
cmp
gs
lock
sub
cmp
enter
jne
cmp
lods
mov
mov
gs
dec
stos
cld
retf
or
leave
sub
mov
dec
mov
sbb
jb
sub
cmc
add
ret
and
mov
out
enter
test
hlt
xor
rol
mov
repnz
test
mov
gs
out
jmp
pushf
popf
jmp
adc
and
imul
mov
loope
push
push
div
(bad)
cli
cmp
cmp
jl
xor
mov
in
popf
ror
scas
cmp
fsubr
cwde
inc
adc
cmc
mov
inc
ss
and
adc
xchg
inc
jbe
jbe
push
jmp
mov
mov
into
jns
in
lahf
int3
mov
push
jl
es
cli
(bad)
add
inc
pop
and
cmc
and
repz
xor
(bad)
shr
das
fbld
or
in
cwde
adc
(bad)
fisub
outs
xchg
iret
or
push
push
mov
(bad)
addr16
iret
xor
ret
retf
das
mov
loop
cmps
loope
test
or
dec
inc
cmp
(bad)
fsubr
pop
rol
cmp
mov
ins
cwde
daa
mov
inc
hlt
jmp
sar
fadd
dec
push
jo
push
ss
mov
cld
arpl
fbld
icebp
aam
fdiv
mov
ja
cmp
mov
aam
jae
call
jne
repnz
icebp
ins
mov
je
sar
ret
pop
sbb
fnstcw
aad
xor
dec
jo
jns
add
idiv
call
lea
shl
adc
inc
scas
add
xbegin
xchg
test
test
push
aad
sub
jbe
push
scas
xor
leave
jp
jne
jmp
aas
fisub
pop
inc
lods
rol
sti
sbb
ins
leave
mov
mov
sub
je
mov
or
adc
xchg
rcr
and
jmp
push
out
mov
pushf
and
hlt
mov
push
daa
inc
scas
ror
pop
bound
and
inc
mov
ror
cmp
and
lods
test
loopne
int3
(bad)
(bad)
mov
sub
push
push
cli
lahf
xchg
push
or
leave
ds
add
fsub
mov
sbb
test
test
and
mov
push
fimul
adc
xor
aad
fisttp
stos
cmp
clc
mov
mov
test
xchg
repnz
pop
sub
inc
fcomp
sbb
leave
jae
inc
add
aam
sbb
and
sar
dec
jae
mov
fstp
pop
jns
retf
fld
dec
mov
sub
add
dec
xor
jae
fimul
pop
pop
bnd
jmp
ins
popa
iret
push
les
imul
jl
movs
adc
pop
xor
xchg
lock
(bad)
cmp
gs
loope
iret
push
mov
aam
pop
outs
fwait
sahf
cmp
push
cwde
push
sub
or
(bad)
into
outs
xor
aas
lds
xchg
jo
adc
mov
imul
inc
dec
(bad)
push
pusha
push
pop
and
cmps
scas
imul
loopne
or
lods
jae
mov
cli
mov
pop
pop
int3
jl
mov
mov
fist
aaa
mov
sahf
sub
not
cmp
pop
jle
adc
ins
enter
pop
push
cs
jnp
or
mov
add
dec
and
mov
mov
mov
mov
repnz
cmp
xchg
push
inc
mov
out
stc
push
aad
gs
add
leave
or
movs
lds
ret
scas
add
and
fwait
mov
inc
mov
mov
cmp
mov
lahf
xchg
dec
push
jecxz
jmp
call
in
or
out
lahf
enter
cld
jg
cmp
outs
sub
iret
loop
arpl
sti
stc
(bad)
push
addr16
std
jne
jns
mov
pop
cwde
sub
push
jg
in
add
jbe
retf
or
fisttp
jnp
mov
ds
(bad)
push
push
hlt
xlat
daa
fnstenv
fldenv
and
inc
and
add
fild
aad
mov
xor
push
sub
sbb
pop
push
adc
and
cld
pop
fdiv
dec
pop
and
sbb
dec
sub
test
adc
jno
retf
cmp
aad
icebp
sbb
out
pop
inc
pop
ds
cmp
(bad)
jmp
cld
adc
pop
retf
xor
jl
cmc
sbb
clc
xor
lock
ret
add
adc
call
or
sar
popf
adc
add
dec
xchg
das
stos
jo
push
jo
idiv
mov
lods
in
into
retf
ins
fwait
in
push
imul
int
jbe
inc
bound
sbb
stc
in
in
push
xor
cmps
mov
mov
stos
shl
test
cmp
adc
lea
retf
and
xchg
shl
xor
ret
popa
dec
rcr
push
test
xor
out
fisttp
pop
ror
(bad)
cli
push
xchg
out
fwait
stos
fwait
or
fst
in
outs
fmul
jg
pushf
xor
imul
mov
and
and
rcl
sbb
dec
push
out
jp
jecxz
jnp
jmp
ins
data16
pusha
sbb
out
push
inc
call
sti
ins
fsubr
pop
in
fild
sti
int3
mov
loop
sub
loop
jae
shl
outs
cli
inc
inc
movs
jae
mov
pop
clc
ds
popf
pop
sub
fst
test
xchg
push
pop
add
or
lods
dec
(bad)
mov
push
xor
jns
adc
mov
push
daa
sbb
xchg
mov
push
retf
xlat
dec
add
hlt
cwde
xchg
sbb
in
or
and
loope
loopne
cmps
clc
scas
into
adc
adc
cmp
loop
mov
cmps
push
cmp
jo
add
mov
xor
sbb
jae
in
imul
test
lds
bound
je
or
jp
cmp
gs
push
loope
push
icebp
movs
daa
lods
jl
neg
push
and
outs
cmps
adc
xor
stos
add
retf
es
push
imul
push
ins
dec
test
(bad)
call
ss
ja
jae
pushf
mov
mov
mov
jl
sbb
lods
jmp
int3
jmp
dec
movs
dec
inc
icebp
xchg
vhaddpd
push
inc
xor
inc
push
out
lahf
xor
xchg
stc
inc
jo
loope
call
cld
xor
xchg
arpl
inc
pop
aad
enter
mov
int
rcl
pop
repz
les
add
mov
jp
dec
inc
out
mov
pop
mov
mov
lods
sahf
inc
adc
jp
pop
es
iret
sub
xor
pop
mov
addr16
mov
mov
mov
xor
xchg
and
push
les
out
repz
xor
cwde
sub
cmp
test
loopne
dec
and
and
div
mov
add
inc
leave
shl
rcr
sub
xor
popf
jns
test
xchg
ins
sbb
dec
lahf
(bad)
lock
mov
imul
cmp
xlat
outs
jle
sub
or
dec
ins
imul
push
add
mov
ins
sub
cmps
or
xor
(bad)
je
(bad)
aaa
std
inc
push
mov
pop
ins
dec
xchg
(bad)
(bad)
mov
hlt
fwait
data16
hlt
sub
xchg
daa
pop
stos
int
jne
mov
call
movs
or
out
jge
aam
add
sub
mov
or
shl
inc
jmp
mov
out
mov
cmp
sahf
sbb
rep
inc
cmps
dec
idiv
loope
(bad)
ret
pop
push
push
loope
pop
mov
in
sub
mov
jnp
add
cmp
call
xchg
test
xchg
cmp
jmp
jnp
imul
mov
dec
mul
repnz
aad
inc
push
cmp
sbb
(bad)
loope
pop
js
push
or
mov
push
call
dec
dec
cdq
cmp
pushf
rol
adc
adc
dec
jl
xlat
mov
mov
imul
push
aaa
fcmovnu
fcomp
dec
inc
sbb
xor
mov
pop
es
pusha
int
movs
(bad)
loopne
sbb
push
aas
repz
jmp
mov
inc
mov
cmp
cmps
mov
stos
aam
adc
cmp
cli
dec
adc
pop
and
xchg
xchg
(bad)
fisubr
jge
pop
mov
cmps
sbb
test
lods
push
xchg
push
and
push
lock
ja
inc
sar
test
push
faddp
jo
outs
jecxz
sbb
xor
xchg
pop
inc
cld
add
jp
nop
sbb
mov
aad
movs
xlat
(bad)
dec
ret
push
mov
pushf
cld
sub
pop
xchg
and
lock
and
ins
pop
jne
or
cs
fs
mov
scas
lea
clc
rcl
outs
mov
jge
jecxz
fmul
fnsave
adc
pop
scas
adc
pop
nop
pop
scas
ins
test
bound
jb
scas
shr
es
xor
sar
adc
sar
into
lahf
mov
test
and
cdq
aaa
fistp
call
sbb
dec
xchg
pop
inc
dec
jnp
out
or
mov
je
ins
push
sbb
(bad)
push
sbb
jbe
les
sbb
and
movs
(bad)
pop
and
inc
mov
dec
mov
mov
test
(bad)
les
stos
popf
cdq
jle
push
mov
pop
mov
and
std
in
out
rcl
mov
(bad)
sub
aaa
popa
adc
cmp
sub
add
shr
out
push
or
loope
sbb
mov
mov
xchg
jmp
sub
mov
inc
mov
mov
push
cmps
gs
push
aam
or
pop
xor
dec
fcomip
xchg
sbb
out
cmp
xchg
neg
cmp
push
(bad)
jecxz
adc
sar
js
jae
ret
(bad)
fst
add
hlt
loop
aas
mov
cmps
sbb
pop
in
pop
pop
gs
xchg
mov
outs
test
inc
fwait
shl
mov
std
push
mov
mov
and
call
xor
pop
iret
inc
imul
ins
pop
jle
jg
sub
inc
scas
jg
xor
adc
jno
lock
stos
and
mov
adc
mov
mov
mov
imul
cmp
movs
jp
popf
jp
scas
stos
icebp
pop
push
loop
mov
xchg
or
js
xor
aas
pslld
push
out
(bad)
rcr
inc
pop
daa
xor
pop
sub
int
popf
adc
xchg
sbb
mov
and
jo
xchg
inc
jle
rcr
fstp
in
jmp
outs
add
add
cdq
dec
cmp
jbe
test
mov
xchg
inc
mov
clc
cmp
or
fs
pop
ror
sub
sub
mov
jmp
add
sub
push
test
test
and
pop
push
mov
fldenv
mov
inc
sbb
push
clc
data16
inc
mov
lea
inc
adc
stc
add
sub
and
add
sub
ds
out
lods
call
popa
sar
in
mov
adc
xchg
pop
jl
jp
xchg
pop
leave
jge
in
rcl
inc
or
add
hlt
xchg
sbb
outs
cmps
xchg
inc
sub
sub
or
and
shr
nop
retf
mov
mov
gs
fstp
mov
or
cli
pushf
adc
push
or
add
push
pushf
test
xor
xlat
sahf
and
(bad)
es
in
fisub
sbb
add
(bad)
sub
dec
sub
cwde
outs
and
inc
outs
popf
fs
bound
pop
aas
push
fs
cmp
loop
pop
fs
jp
xor
push
retf
adc
dec
sub
pop
cmp
add
push
xor
or
xor
xor
mov
sub
mov
out
sar
popa
repz
pop
call
js
inc
loopne
push
not
push
adc
cmp
call
scas
pop
or
jne
cmps
add
inc
rol
(bad)
mov
push
movs
cmp
cli
add
inc
daa
mov
gs
nop
or
movs
sbb
fisub
cmp
aas
mov
push
jp
sbb
cmp
inc
(bad)
cmp
mov
loopne
inc
sub
mov
mov
xchg
push
out
nop
push
dec
xchg
stos
sub
in
or
stc
push
out
mov
mov
add
or
call
cmps
sub
and
dec
stos
std
mov
ds
jo
ins
pop
inc
leave
mov
shl
mov
rol
cmp
jne
ds
cld
adc
jb
in
cmp
mov
mov
call
cmps
xor
or
jmp
data16
loopne
pop
xor
sub
ja
arpl
mov
pop
daa
cmp
fdiv
sub
icebp
cwde
push
jae
fmul
lods
in
mov
loope
dec
sar
movs
daa
rol
push
pusha
rcr
lods
pushf
jle
add
sbb
and
int
pop
inc
popf
stc
addr16
xchg
or
sbb
test
add
outs
cmps
popf
or
cmp
adc
pusha
mov
cmp
xchg
call
xor
jp
in
sahf
pop
scas
cmp
adc
jecxz
xor
pop
add
inc
test
add
inc
int3
lock
jo
cmc
stos
ret
movs
mov
sti
enter
dec
xchg
lea
aaa
(bad)
and
lods
sbb
jbe
push
push
mov
call
jp
iret
pop
ror
mov
cs
push
mov
xchg
repnz
push
stos
sub
lahf
loope
sbb
mov
int
(bad)
cmps
pop
adc
inc
imul
test
mov
dec
jecxz
fisubr
xlat
jp
out
cld
push
(bad)
lock
xor
push
xchg
std
fld
(bad)
int
jo
jbe
pop
mov
mov
cli
nop
out
mov
movs
or
xchg
mov
fstp
push
xchg
addr16
jae
mov
(bad)
icebp
jmp
ror
mov
mov
add
mov
test
lea
imul
nop
pusha
retf
aad
shr
sub
cmp
fist
xchg
sbb
test
(bad)
out
inc
sbb
aam
mov
fcmovb
dec
sub
mov
test
ror
sub
mov
pop
mov
bound
jge
arpl
pop
cdq
mov
mov
fbld
adc
mov
jno
sub
xchg
adc
in
mov
dec
ror
sbb
aad
pop
std
adc
push
stos
sub
call
sub
mov
mov
dec
push
out
sub
jae
in
inc
(bad)
retf
daa
add
or
xlat
out
sub
ins
call
sub
rcl
jbe
jmp
(bad)
repz
cmp
adc
mov
iret
mov
inc
mov
pop
mov
popfw
pop
push
outs
in
in
fwait
mov
dec
nop
fwait
inc
pop
das
adc
(bad)
lea
mov
mov
xchg
jmp
mov
add
sub
(bad)
dec
and
mov
out
(bad)
mov
or
push
mov
ror
xchg
call
mov
mov
fidivr
pushf
lods
xor
cmp
pop
movs
dec
fisubr
das
mov
sbb
jbe
cld
hlt
lahf
aad
sahf
push
xlat
mov
and
enter
je
push
gs
mov
xor
ror
int3
popf
pop
jp
sti
cmp
mov
sub
sub
shr
call
pop
xchg
cmp
(bad)
sbb
jae
pop
dec
add
or
and
push
mov
sti
jbe
cmp
xor
mov
scas
pop
daa
out
scas
ds
xor
loope
mov
imul
mov
sub
std
cdq
and
out
sti
and
mov
xor
push
sahf
pop
xor
sub
adc
inc
or
mov
jmp
push
das
and
addr16
adc
jp
sub
cmp
push
cs
jle
jg
inc
pop
aad
dec
mov
test
out
iret
lock
out
ret
cmps
cmp
mov
push
dec
push
inc
and
mov
inc
pop
retf
inc
and
iret
leave
jne
daa
sbb
in
and
fsubr
mov
aas
xor
mov
pop
aaa
jmp
inc
push
cmp
pop
shr
mov
dec
pop
fwait
push
aad
data16
or
push
jp
call
jae
pop
outs
retf
inc
mov
outs
mov
fsub
(bad)
lea
mov
shr
sbb
cld
pop
out
js
retf
pusha
pop
dec
pop
cdq
mov
js
sub
scas
xchg
xchg
inc
jle
out
mov
xor
dec
cmps
das
xchg
cdq
xchg
in
and
enter
push
cmp
stc
aad
jecxz
repz
ja
and
inc
mov
cmovg
mov
popf
xor
scas
mov
push
mov
mov
mov
mov
jecxz
dec
rol
cmp
pop
mov
and
pop
ror
repz
inc
fisub
mov
lods
or
lods
leave
ret
sahf
ja
iret
sub
mov
pop
pop
ins
mov
lods
fisttp
push
sub
das
pop
std
sub
jne
sbb
or
pop
stc
xor
mov
out
outs
inc
into
in
mov
or
add
nop
push
in
add
dec
pop
push
lods
sub
jo
leave
fwait
dec
mov
add
sar
inc
pop
fcmovne
xchg
test
mov
outs
pop
inc
xor
push
jnp
addr16
das
pop
pop
mov
outs
je
mov
outs
cmovne
mov
jge
dec
jmp
xor
dec
test
out
sub
or
rcr
or
test
sbb
sahf
fcom
mov
rcl
lahf
push
pop
(bad)
retf
ret
jno
mov
xlat
mov
je
retf
fisttp
mul
je
mov
out
inc
out
and
in
jae
jecxz
pop
nop
push
jmp
or
xchg
fisub
aaa
mov
xchg
(bad)
or
xor
lods
movs
cmp
mov
ret
(bad)
(bad)
mov
data16
in
xchg
in
sbb
and
imul
dec
sub
xchg
popf
xchg
retf
ficom
mov
add
jmp
add
xchg
sbb
sub
adc
mov
xlat
xchg
cmp
mov
jmp
test
icebp
or
int3
mov
pop
push
nop
mov
ja
cmp
jbe
xchg
test
mov
lods
pop
xor
fistp
popa
adc
jns
cmp
pop
push
sti
je
pop
lock
xchg
fiadd
jle
push
and
fwait
ds
movs
rol
mov
mov
add
shl
rcl
ss
std
sub
pop
je
mov
cwde
mov
lods
test
cmp
rol
iret
movs
mov
mov
mov
and
xchg
jmp
push
xor
imul
nop
mov
hlt
jl
jbe
add
test
push
fstp
mov
nop
and
sbb
and
cld
pop
xchg
test
push
adc
pop
(bad)
repnz
mov
leave
test
bound
jg
add
dec
pop
fiadd
mov
xor
rep
jbe
scas
dec
popf
cli
pop
inc
sar
scas
frstor
sti
add
jl
rcr
mov
jmp
cmp
adc
int3
in
test
repz
inc
inc
outs
call
das
cmp
dec
add
pop
lock
(bad)
je
dec
adc
mov
cmps
add
xchg
inc
push
inc
dec
cmp
shl
jb
in
push
xchg
push
mov
mov
ror
ss
mov
stc
lea
mov
fist
call
cmp
mov
pop
dec
or
mov
in
pop
inc
imul
add
xor
movs
std
fadd
push
jno
ficomp
mov
rcl
pop
out
mov
in
add
mov
out
sub
je
push
dec
aad
and
aad
not
inc
fcom
inc
or
ror
outs
xlat
mov
push
pop
mov
and
push
sub
adc
jmp
dec
jecxz
aas
mov
mov
xor
cli
fsubr
inc
stos
mov
fsubrp
out
sub
cmps
mov
scas
xor
or
cmp
xchg
lea
in
dec
xor
out
mov
adc
mov
int
pop
dec
and
gs
int
and
in
and
xchg
inc
sub
inc
sbb
push
mov
addr16
imul
xor
dec
out
in
or
push
xchg
jno
call
test
shl
repz
jnp
test
retf
inc
push
mov
mov
mov
hlt
xor
push
add
xor
mov
std
jno
xorps
scas
add
inc
inc
pop
xor
dec
pop
sbb
or
pop
mov
and
add
ins
xchg
mov
stos
sub
(bad)
or
mov
es
jge
test
cmp
test
sbb
mov
or
cmps
mov
pop
sub
clc
jle
or
mov
cmps
js
adc
lods
cmp
ror
add
(bad)
ins
mov
pop
mov
mov
adc
push
dec
retf
retf
sub
pop
lea
lock
gs
fs
push
lahf
test
dec
nop
ds
cmp
shr
(bad)
xchg
out
out
push
fisubr
bound
mov
inc
jecxz
dec
les
mov
xchg
pop
int
and
imul
cli
repnz
scas
int3
dec
sbb
rol
mov
inc
jl
cmc
sbb
rol
dec
enter
ins
bnd
rcl
sub
cwde
(bad)
fs
dec
ja
leave
push
nop
sub
push
dec
rcr
push
sbb
popa
push
les
adc
ins
mov
mov
mov
pop
icebp
ror
inc
jb
pop
outs
movs
or
cli
sub
jmp
mov
ficom
je
and
cdq
xchg
daa
or
push
in
es
or
movs
ja
imul
sub
xor
jns
dec
adc
adc
retf
jecxz
xchg
out
adc
mov
mov
std
outs
fucompp
inc
push
(bad)
dec
scas
mov
fs
jmp
rol
mov
lahf
cmp
mul
iret
adc
ja
sub
mov
sahf
sub
dec
call
cmp
push
sbb
push
std
ret
aam
cmp
mov
(bad)
ror
ins
xor
xor
sbb
inc
fdivr
push
fwait
mov
ficom
into
jb
mov
mov
(bad)
in
cmp
sbb
inc
or
mov
rol
mov
int3
imul
xor
movs
cld
add
call
(bad)
adc
in
jl
(bad)
adc
out
bnd
push
lahf
sub
push
movs
ror
dec
arpl
leave
adc
add
mov
enter
fdivr
jbe
mov
mov
adc
add
dec
(bad)
aad
fcmovne
stos
iret
add
cmc
xor
repnz
pop
jbe
mov
dec
mov
(bad)
and
mov
cmps
neg
mov
pop
add
mov
out
inc
sbb
arpl
push
mov
xchg
mov
ds
ss
out
test
mov
addr16
sub
pop
std
ds
pop
int3
ror
add
sbb
jmp
inc
xchg
stos
fwait
adc
push
xor
fsub
mov
and
aad
jno
xchg
(bad)
fidiv
sub
inc
inc
dec
xor
mov
sbb
cmp
mov
or
icebp
fnstsw
mov
pusha
dec
or
or
ret
out
dec
fnstenv
test
mov
mov
pop
cmps
adc
shl
adc
mov
inc
sar
jo
jns
js
in
fmul
and
pop
mov
dec
mov
ds
test
aas
imul
pop
mov
jecxz
xor
adc
add
lahf
mov
lods
into
retf
cmp
cwde
sub
cmp
cmp
sub
mov
mov
add
pushf
jmp
sub
test
xchg
arpl
pusha
in
push
mov
rcr
sbb
jne
dec
adc
mov
and
push
add
xchg
test
xor
fldcw
aas
stos
push
xchg
sbb
clc
in
push
outs
push
dec
out
loop
pop
rol
dec
push
sbb
cs
mov
daa
inc
jb
mov
imul
add
add
pop
xlat
or
stos
into
cmp
push
leave
xchg
call
int
fxch
fist
mov
test
cmps
pop
hlt
adc
retf
imul
es
(bad)
lock
adc
jmp
cmp
je
sbb
inc
xchg
fimul
stos
cmp
loop
out
jl
or
leave
mov
aas
repnz
js
pop
cmp
(bad)
push
and
psllw
ret
sub
call
jle
int3
jle
pop
and
xchg
cdq
cmp
and
gs
pop
or
sti
mov
adc
add
repnz
outs
es
retf
jns
xlat
pop
and
test
cli
addr16
or
mov
retf
(bad)
cli
add
mov
fst
mov
fidiv
aad
pop
xor
inc
in
(bad)
fisttp
or
movs
inc
xchg
out
mov
xor
inc
and
test
sub
lahf
cmp
cmp
les
pusha
js
dec
adc
fisub
push
mov
jbe
inc
fsincos
xlat
or
inc
push
movs
inc
cwde
int
mov
lahf
shl
addr16
inc
add
div
or
dec
enter
and
add
test
pop
nop
or
inc
or
scas
mov
ror
or
outs
movs
or
sub
or
inc
out
and
fld
add
jmp
inc
mov
add
dec
xchg
jmp
xchg
xor
push
mov
mov
test
or
push
aad
jge
mov
loopne
mov
xchg
pop
xor
call
and
mov
je
jno
out
jg
es
mov
xchg
xor
inc
pop
add
cmp
inc
cmp
cmp
cmp
and
pop
scas
xchg
xchg
cmp
outs
pop
pop
jbe
leave
sub
cmps
jne
shl
out
add
shl
dec
scas
cmp
int
cmc
add
rol
mov
cwde
mov
test
and
mov
in
mov
mov
sub
popf
cmp
pop
push
popa
fist
xchg
xchg
xlat
sub
jl
inc
push
into
push
outs
mov
test
and
mov
cmps
fmul
stos
arpl
push
cmp
lods
dec
push
xchg
mov
xor
(bad)
cmp
cwde
popa
xchg
mov
sbb
push
xchg
repz
xchg
ins
mov
cmps
mov
xchg
bound
xchg
mov
push
push
mov
push
add
cs
mov
mov
mov
mov
sub
fisttp
xchg
enter
mov
imul
leave
pop
movs
scas
hlt
or
dec
out
test
mov
cld
fnstsw
sbb
jg
js
je
mov
xlat
push
mov
xchg
mov
or
inc
mov
test
push
fsubr
add
shr
lds
(bad)
into
sbb
cmp
xchg
or
scas
inc
mov
push
repz
push
and
scas
mov
js
and
mov
sbb
push
mov
out
imul
mov
in
jno
and
sahf
dec
inc
neg
or
adc
sar
push
push
cmps
out
inc
inc
dec
sbb
xchg
aaa
jmp
sbb
mov
push
add
sub
test
fs
mov
lahf
mov
sub
cmp
adc
sti
scas
sub
(bad)
mov
(bad)
ins
shl
inc
mov
movs
js
pop
mov
mov
in
jnp
inc
inc
cld
jmp
fist
cmp
push
mov
mov
sbb
sti
jne
pop
jp
call
xor
outs
es
sbb
sahf
data16
jmp
lods
push
mov
dec
rcr
mov
lds
adc
std
std
cmp
adc
cmp
pop
dec
mov
pop
mov
push
cwde
jg
jns
sbb
fstp
sbb
or
xor
in
(bad)
mov
mov
xor
jo
(bad)
popa
fild
xchg
iret
mov
push
inc
cdq
nop
add
sti
iret
sub
das
mov
out
jnp
loop
not
and
xor
mov
loope
ss
addr16
sub
adc
arpl
adc
(bad)
aas
jmp
mov
push
inc
int3
and
out
pop
xchg
lods
add
cs
mov
sti
nop
mov
scas
mov
xor
ds
in
xchg
jg
adc
xor
push
clc
pop
mov
xchg
and
movs
jb
fist
sub
ja
mov
les
ins
cmp
ins
pop
jp
xchg
inc
ins
mov
sub
fwait
rcl
jo
popf
and
les
out
out
cld
loope
pop
push
and
cli
inc
inc
push
test
sti
stos
adc
mov
mov
push
push
sahf
fstp
pop
add
xor
shl
jecxz
jp
cmc
push
and
push
stc
aam
test
fisttp
or
push
stc
mov
neg
(bad)
jb
add
repnz
sub
das
lods
(bad)
in
loope
sub
mov
pop
mov
in
or
push
sete
inc
lods
or
sbb
jne
add
or
out
cmp
les
shl
aas
rol
cmp
in
outs
mov
sti
adc
mov
in
stos
and
mov
cs
mov
add
daa
push
popa
out
adc
xchg
dec
popa
sbb
fstp
(bad)
movs
cld
add
lods
sub
pop
into
jns
pop
popa
jecxz
out
call
mov
dec
mov
inc
xchg
xor
push
ja
fstp
inc
mov
mov
xor
fnstsw
cs
or
fisubr
fimul
add
inc
ins
cwd
mov
and
imul
jno
dec
icebp
cdq
xchg
xchg
loopne
jecxz
inc
inc
popa
inc
push
outs
(bad)
add
shl
popa
jle
and
test
cli
jmp
inc
dec
inc
fadd
adc
pop
push
and
sub
outs
jp
in
mov
in
fild
mov
cmp
add
xchg
dec
loopne
inc
xor
mov
sub
sbb
jmp
and
mov
ss
jns
popa
(bad)
loope
xor
pop
fwait
cwde
stos
call
adc
xchg
sbb
mul
mov
pop
icebp
xchg
lods
je
mov
xor
mov
xlat
jbe
inc
ficom
enter
loop
mov
leave
inc
ins
int3
nop
iret
dec
repnz
cmp
push
dec
rol
scas
loope
mov
push
adc
push
push
push
js
xor
(bad)
jns
stos
in
sbb
mov
test
nop
out
cmp
lock
pop
and
lods
int3
and
adc
das
pop
mov
adc
cmp
vpmullw
cmp
lds
repnz
sub
shl
xor
sub
popa
xchg
icebp
dec
inc
mov
push
(bad)
outs
mov
pop
mov
lods
nop
aad
inc
popa
jns
mov
hlt
inc
push
inc
cmp
in
push
sbb
out
inc
lods
inc
add
inc
jb
xchg
stos
mov
mov
imul
jge
pmulhw
push
sbb
test
pop
ror
sub
into
dec
movs
mov
or
xor
dec
idiv
push
retf
jl
mov
shl
in
sbb
retf
push
add
das
scas
ss
(bad)
sbb
cmps
jecxz
(bad)
mov
dec
ret
inc
clc
push
dec
ror
jmp
xchg
js
xchg
push
(bad)
in
mov
mov
sub
loopne
jp
outs
cli
movs
jne
sbb
test
and
out
sbb
iret
aad
call
xor
(bad)
fld
loopne
(bad)
mov
mov
pop
jp
xchg
das
pop
push
fdiv
cmp
sub
dec
(bad)
xchg
outs
pop
les
dec
xchg
sbb
mov
int
xchg
push
loop
mov
loope
mov
stc
adc
pop
stos
jbe
cmp
repz
push
inc
ins
mov
test
fld
jp
jl
call
out
(bad)
push
out
nop
and
or
loopne
push
xchg
pop
pop
adc
jecxz
mov
adc
sub
push
aad
push
lods
fs
pushf
(bad)
mov
sti
test
fnstsw
push
xor
cmp
outs
adc
dec
jae
stos
cmp
sub
push
aaa
adc
fisubr
jno
mov
adc
mov
sub
scas
pop
jae
mov
jmp
idiv
lds
ins
mov
mov
cs
cli
mov
loopne
(bad)
inc
xchg
jge
xlat
jmp
jne
mov
and
clc
lock
(bad)
in
jmp
mov
pop
ss
mov
popa
cmp
les
(bad)
loop
xchg
fs
push
icebp
ror
jns
push
jle
ss
push
fcomp
dec
and
sub
add
pop
aam
xchg
out
stos
mov
xor
int3
test
pushf
jns
(bad)
loop
push
sbb
or
pop
aas
dec
movaps
pop
mov
sub
sar
sub
fbld
fneni(8087
mov
xchg
fucomp
add
mov
ror
inc
push
cmp
fwait
mov
mov
jp
mov
push
sub
mov
retf
enter
sahf
adc
xchg
inc
cmp
adc
mov
ror
jne
sub
jnp
pop
ins
and
push
out
mov
mov
jne
and
sbb
ins
(bad)
mov
jg
in
xchg
or
stos
cmps
and
jle
out
push
cmps
aaa
mov
out
mov
mov
data16
push
loop
mov
pop
cwde
(bad)
scas
mul
in
xchg
sub
ret
xlat
(bad)
adc
cld
mov
adc
das
adc
cmps
adc
mov
ror
xor
or
(bad)
addr16
jg
fmul
je
pcmpeqb
sbb
das
adc
movs
xor
out
repz
cmps
inc
dec
or
rol
imul
push
pop
rcr
ret
sbb
xchg
in
adc
test
movs
xor
in
adc
cmc
scas
stc
into
test
mov
retf
and
les
cwde
fs
lods
jl
or
jbe
ret
aaa
test
int
imul
or
sub
mov
sbb
cmp
(bad)
sbb
and
adc
popf
sub
out
into
dec
jno
push
xchg
jno
sub
mov
cmps
or
aas
call
shl
mov
arpl
aas
das
xchg
data16
daa
das
(bad)
gs
mov
pop
dec
leave
xor
mov
test
js
aaa
xchg
mov
push
cld
or
push
rol
inc
mov
fisub
lods
and
mov
movs
jne
adc
or
mov
stos
adc
lock
out
mov
xchg
pop
movs
je
iret
push
push
(bad)
sbb
les
aas
sbb
(bad)
sbb
jns
hlt
std
jmp
mov
pushf
imul
fidivr
rol
mov
jbe
jp
fsubr
mov
dec
std
imul
jmp
adc
push
int
mov
popa
jbe
popa
mov
stos
fcom
cmp
data16
xor
jb
pop
aam
dec
adc
call
xchg
push
mov
jl
mov
das
mov
mov
movs
jp
fcomp
cmps
pop
popf
push
sar
mov
mov
(bad)
sbb
(bad)
in
xchg
cdq
fisttp
xor
std
sub
inc
mov
aad
cmp
lds
mov
bound
imul
sar
out
fs
sub
fldenv
aad
hlt
push
shr
pop
add
pop
cmps
cmp
sub
xor
push
sbb
inc
add
and
add
mov
and
(bad)
dec
aad
xchg
pop
inc
ja
adc
push
mov
call
xchg
dec
stc
lods
mov
jb
inc
test
(bad)
adc
(bad)
xchg
mov
and
cs
int
mov
adc
inc
arpl
fnstsw
lods
in
stos
push
movs
aam
push
iret
sub
mov
mov
mov
mov
mov
inc
sub
test
mov
nop
test
or
aam
add
sti
aam
dec
pusha
push
push
add
clc
mov
push
xlat
jg
mov
test
aas
jle
inc
add
dec
fs
xlat
lods
ins
(bad)
pop
adc
xor
xchg
retf
jns
idiv
add
adc
gs
and
push
sub
movs
sub
and
retf
call
loopne
jg
iret
xchg
retf
inc
popf
ins
stos
mov
fwait
mov
imul
(bad)
dec
add
xchg
outs
adc
adc
pop
lods
dec
xor
or
dec
hlt
mov
mov
or
jo
popf
lea
out
xchg
sbb
in
je
out
imul
jne
or
out
mov
lahf
ret
xchg
outs
fstp
and
mov
xchg
out
mov
outs
out
adc
mov
pusha
and
jo
mov
pop
xchg
ins
sar
pushf
or
jl
or
push
cli
dec
(bad)
xchg
mov
ins
iret
dec
dec
xchg
cmp
xchg
and
mov
inc
icebp
sbb
mov
lock
sub
and
movs
xchg
xchg
fisub
mov
mov
cmp
and
or
push
and
aam
adc
dec
shl
lds
xchg
push
fisubr
sti
pop
les
or
out
outs
push
sbb
es
aaa
jle
hlt
movs
add
rol
or
xchg
xor
fisttp
data16
retf
sti
(bad)
(bad)
and
es
sub
pop
xor
jge
push
lea
inc
fwait
sbb
pop
and
gs
xchg
mov
gs
(bad)
xor
mov
pop
push
xchg
shl
xchg
(bad)
cmp
int
outs
mov
jmp
push
enter
int3
xchg
pop
lods
lods
jns
dec
je
test
and
aas
bound
retf
jmp
fptan
pop
adc
push
adc
call
sbb
sub
mov
mov
clc
dec
mov
sub
adc
cs
inc
sub
mov
cmp
clc
xchg
imul
xchg
sbb
js
out
out
add
dec
inc
add
stos
add
test
inc
popa
pop
mov
mov
lahf
push
adc
sub
stc
cmp
mov
mov
scas
test
lods
add
rcr
lahf
mov
popa
cld
gs
add
dec
fisub
pop
jecxz
rol
stos
popa
cdq
add
xchg
push
int3
fstp
loopne
xor
and
dec
test
sar
pop
lock
test
outs
inc
xchg
cmp
add
xlat
je
adc
xchg
mov
cmc
mov
cmc
fstp
push
push
ins
stos
cs
jb
or
jo
push
or
ds
ret
lods
add
hlt
cmp
pop
sub
inc
push
retf
sbb
out
add
dec
add
popf
or
shr
dec
push
popa
test
push
add
mov
jne
sbb
sbb
add
xchg
push
nop
jmp
sub
mov
scas
daa
sbb
push
ret
mov
sub
jb
sbb
cli
and
inc
icebp
int
mov
xchg
shl
jge
popf
adc
xchg
les
xchg
mov
aaa
inc
cdq
mov
xchg
pop
jmp
js
cmp
push
jl
mov
sub
xor
bound
mov
imul
pop
jns
(bad)
sahf
aad
stos
fwait
mov
pop
lods
movs
adc
push
jbe
clc
scas
movs
cmp
pop
mov
sahf
imul
sahf
test
xor
aas
mov
or
adc
(bad)
inc
scas
mov
call
mov
and
sbb
inc
call
push
xor
clc
cmp
in
into
stc
ja
mov
jbe
mov
mov
inc
outs
mov
jno
call
inc
mov
jno
das
pop
xchg
loop
and
adc
fisub
aas
push
sbb
xchg
dec
add
add
pop
lds
cwde
jmp
rcr
adc
mov
jg
push
and
adc
mov
cmp
out
push
or
popa
or
je
imul
mov
fmul
rcr
ret
retf
push
push
lods
xchg
xor
mov
nop
stos
out
or
repz
sbb
xor
les
gs
cli
xchg
(bad)
ret
or
(bad)
imul
sbb
jne
inc
add
inc
pop
inc
iret
mov
add
mov
in
jmp
(bad)
iret
(bad)
xchg
jns
mov
or
mov
pop
into
outs
cmp
pop
xor
sub
inc
mov
and
xor
push
xor
rcr
pop
cmc
lds
rcl
mov
sbb
jne
movs
sub
rcl
xchg
jae
cmp
push
pop
les
add
xor
sub
dec
inc
pop
scas
shl
sub
scas
inc
add
sub
or
movs
out
adc
pop
and
pop
jg
ror
aaa
pop
and
dec
adc
push
(bad)
fsubr
mov
push
mov
sbb
mov
fbld
stc
mov
inc
clc
repnz
mov
jno
loop
adc
adc
lods
inc
push
jns
jbe
cmp
mov
inc
and
mov
adc
and
xor
mov
xchg
mov
adc
icebp
dec
cld
mov
ret
bound
stos
aam
stc
xchg
pop
mov
jnp
mov
push
movs
test
mov
hlt
int
sar
sbb
sbb
push
aad
jne
cmp
pop
or
jno
sub
jnp
add
cmp
sub
jns
rcl
sbb
jbe
mov
inc
push
xor
jge
int3
and
aam
and
pop
xchg
stos
jp
jp
push
pop
iret
lahf
sub
push
xor
mov
cmp
sahf
in
dec
scas
add
jp
(bad)
cs
sbb
pop
fwait
and
push
mov
sub
out
inc
and
cld
add
push
int3
loop
pop
jp
scas
jp
pop
sub
aad
data16
je
inc
lock
int
dec
mov
push
outs
pop
leave
idiv
mov
inc
mov
add
xchg
data16
xor
outs
jnp
stc
aas
pushf
sub
jbe
xchg
cmps
mov
dec
dec
adc
clc
daa
movs
or
int3
adc
addr16
mov
mov
jae
adc
retf
add
xor
mov
xchg
arpl
sub
lods
cmp
fmul
mov
jne
pop
push
out
lahf
fs
mov
mov
sbb
fiadd
sahf
pusha
fnstsw
cmp
hlt
(bad)
sub
mov
push
sbb
push
(bad)
mov
gs
fwait
mov
cmp
jp
js
fadd
sar
push
aam
add
ds
or
pop
jmp
xchg
push
dec
movs
mov
fwait
xor
cmp
cdq
in
retf
mov
fld
rol
outs
in
and
jp
test
in
out
push
pop
ret
mov
add
cwde
pop
inc
(bad)
sahf
or
cld
daa
neg
es
call
idiv
mov
or
(bad)
outs
loop
stc
mov
daa
inc
sub
jae
xchg
stos
idiv
mov
dec
data16
mov
inc
dec
shl
rcl
imul
test
dec
push
mov
jns
jns
cmp
stos
add
neg
outs
push
or
jbe
test
sub
adc
scas
repz
shl
test
push
rol
rcl
pop
push
jmp
fcom
ret
cs
xchg
das
mov
inc
push
jp
aas
mov
aad
pop
ins
fs
popf
mov
movs
jp
dec
xchg
pop
idiv
jecxz
add
cmp
test
or
mov
aam
push
jle
add
adc
cmp
lods
mov
mov
pop
ins
std
imul
mov
jbe
popf
imul
rcl
push
pop
data16
lock
rol
out
jno
jecxz
(bad)
hlt
sar
cdq
enter
jecxz
(bad)
adc
xchg
out
pop
popw
outs
xor
xchg
jns
fs
mov
and
jmp
pop
int
aas
das
jb
aad
pop
popa
fnstsw
add
shl
in
mov
or
inc
clc
add
mov
xor
rcr
and
stc
or
in
fs
test
mov
mov
enter
mov
cmp
sub
mov
cli
xchg
sbb
int
aad
jns
dec
xor
leave
test
scas
and
fwait
push
data16
and
jecxz
cmp
pop
les
pop
outs
or
ss
xchg
popa
xor
lsl
or
fimul
in
jae
push
lods
push
pop
mov
in
sub
daa
out
push
or
stos
pmuludq
aad
in
jo
inc
and
sbb
std
mov
add
jne
push
add
les
out
or
cmc
dec
ret
pop
mov
mov
loope
cmps
stos
ret
das
cmp
mov
dec
push
sar
pop
and
shr
inc
mov
xor
leave
adc
cmp
movs
lea
mov
add
fbstp
and
pop
fcomp
mov
push
ret
loop
lds
es
and
inc
or
sahf
ret
jnp
pop
(bad)
push
ret
xor
out
sub
jge
push
(bad)
in
xchg
jno
sti
push
mov
xor
mov
aam
push
push
sbb
movs
cmps
jecxz
(bad)
mov
aas
push
cmp
cs
push
(bad)
ja
loopne
mov
jno
imul
cmp
mov
jmp
inc
(bad)
push
mov
jp
inc
or
aaa
mov
inc
xchg
scas
(bad)
out
je
xchg
sbb
data16
sub
xchg
call
loop
push
shl
mov
leave
mov
pusha
imul
pop
ds
dec
jbe
jns
inc
imul
les
pop
sub
data16
mov
gs
pop
fidiv
cwde
pop
int3
addr16
jl
out
iret
out
add
xchg
cmp
lock
stc
push
rcr
rol
sbb
ds
arpl
int3
mov
and
sahf
hlt
jge
je
sbb
sub
jge
push
pop
les
out
sbb
inc
out
inc
or
inc
pop
scas
adc
mov
sbb
pushf
mov
lods
pop
aam
adc
setp
lahf
pop
int
or
cmp
sbb
int
ja
sub
ss
lock
jae
sub
imul
(bad)
add
les
adc
pop
scas
adc
loope
fidiv
shl
in
stos
or
sbb
sbb
out
xor
ret
daa
xchg
mul
jne
(bad)
retf
push
fwait
or
das
cmc
lea
pusha
sbb
push
jns
pop
pop
adc
and
es
aas
in
cdq
jns
(bad)
leave
jo
aaa
mov
imul
je
dec
pop
adc
popa
ja
test
in
mov
mov
mov
sbb
push
dec
daa
std
fstp
stos
cli
clc
cmps
sbb
mov
jmp
push
xchg
add
jne
xor
shufps
(bad)
push
push
cmp
lock
mov
(bad)
cmp
mov
push
or
or
(bad)
cmp
lds
aam
dec
(bad)
and
les
leave
or
mov
int3
inc
jle
lea
sar
xchg
cld
arpl
mov
mov
loop
addr16
push
push
aaa
addr16
push
jg
(bad)
mov
in
xchg
stc
mov
repnz
call
lods
pop
mov
loopne
xor
hlt
in
mov
push
mov
fidivr
mov
sbb
addr16
mov
fwait
popf
in
add
jl
mov
mov
jp
pop
pusha
test
xchg
push
and
daa
leave
fbstp
ss
fsubrp
jno
mov
xor
cmp
js
rol
test
mov
jo
loop
pop
stos
xchg
xor
dec
out
inc
(bad)
(bad)
add
mov
leave
arpl
xchg
out
cli
cli
pop
inc
xor
test
shl
inc
in
sub
xchg
icebp
sub
mov
adc
adc
pop
lock
lods
jo
rcl
mov
mov
mov
adc
jl
movs
(bad)
cmp
pop
les
pop
jns
sbb
mov
sbb
adc
mov
xor
mov
pop
movs
ret
aas
pusha
aas
add
js
xor
pop
cmp
pop
das
xor
repnz
sub
in
inc
jno
and
jmp
cmps
repnz
test
mul
dec
mov
jmp
jp
sti
cli
adc
rcl
mov
imul
loope
jle
pop
sub
ss
cmp
push
js
pop
(bad)
test
stos
stos
jg
cmp
adc
call
push
stos
adc
dec
aam
movs
adc
rcr
outs
retf
xchg
mov
jne
cmp
out
push
retf
xor
cmp
xchg
dec
test
mov
adc
jg
or
retf
cs
adc
mov
rol
cmps
jp
les
stos
jmp
iret
dec
fcmovnb
lds
mov
leave
data16
push
jns
or
push
or
test
dec
push
sub
or
push
(bad)
or
call
je
sti
cs
mov
ret
and
ret
cmc
mov
stc
push
mov
jo
push
xchg
ins
mov
jp
xchg
cs
sub
mov
jle
jmp
inc
or
popa
data16
scas
inc
push
leave
ret
sbb
(bad)
and
mov
shl
xor
push
pop
ins
jno
popa
and
outs
stc
pop
imul
lds
jle
mov
mov
mov
imul
jmp
call
clc
xchg
enter
fimul
jge
inc
shl
sub
outs
ret
add
lea
xchg
cld
fistp
imul
mov
and
or
out
aaa
mov
jne
mov
mov
pop
push
mov
fistp
aaa
push
cmp
push
adc
adc
imul
pop
test
jecxz
adc
iret
je
xchg
in
mov
add
rcr
mov
pop
xchg
inc
outs
mov
cmp
std
loopne
retf
pushf
fild
loope
test
mov
mov
jno
mov
and
mov
mov
sub
repz
fisub
lds
call
cmp
fnstcw
xor
stos
jbe
cwde
adc
or
jnp
sub
xchg
add
hlt
push
pop
pop
mov
nop
mov
xchg
ja
sbb
lock
icebp
fbstp
ins
jne
cmp
test
cmps
adc
mov
or
xor
mov
xchg
lea
and
xor
dec
dec
fbstp
aaa
ret
mov
shl
jb
mov
lahf
aaa
sub
push
jno
sub
mov
fs
mov
(bad)
jle
dec
jae
scas
mov
adc
pop
in
dec
fist
mov
aad
int
push
mov
scas
test
pop
in
pop
sbb
sub
mov
jmp
sbb
and
arpl
aad
cmp
lock
pop
lock
aad
lods
push
movs
mov
aad
sub
cli
in
mov
fmul
outs
stos
mov
data16
call
and
jbe
push
stc
sahf
sub
repnz
xor
push
les
mov
adc
aad
les
std
bound
sti
jge
lock
push
pop
jl
mov
xlat
push
or
(bad)
fmul
rol
pop
nop
push
inc
mov
adc
and
loop
adc
call
lahf
imul
fst
and
aas
xor
jae
xchg
icebp
pop
cmp
cmp
arpl
repnz
add
daa
out
mov
nop
jne
out
sbb
pop
idiv
lea
ins
lods
and
int
or
dec
aas
mov
mov
ret
mov
cmp
lea
xor
inc
sbb
pop
in
in
cmc
int3
loopne
mov
pop
jp
or
mov
js
xor
out
and
xchg
sub
fcmovnbe
or
bound
xor
stos
mov
movs
push
rcr
arpl
or
mov
scas
pxor
ret
or
inc
and
or
lds
mov
mov
cmp
iret
imul
mov
sub
cmp
fwait
jae
nop
pusha
mov
mov
in
add
les
in
push
and
xchg
retf
mov
outs
and
push
jns
jecxz
mov
pop
add
enter
mov
xlat
ficomp
cmp
mov
adc
into
data16
dec
mov
mov
jmp
xchg
dec
cmps
jl
or
push
cs
mov
xchg
and
xor
repnz
sub
sub
pop
scas
sbb
inc
jo
jmp
enter
fabs
pushf
mov
or
lea
in
jbe
cmp
movs
pop
sbb
pop
fsubr
pop
cmp
mov
jb
sub
cmp
mov
jmp
push
into
xor
dec
in
nop
je
xor
xor
xchg
mov
sbb
and
mov
jb
aas
add
dec
mov
xor
dec
lods
in
nop
ins
ficomp
cld
jns
fidivr
(bad)
xor
loop
movs
sbb
cs
out
popf
dec
dec
jl
inc
mov
out
sbb
push
adc
and
into
mov
and
sbb
adc
jmp
sbb
jge
retf
mov
movs
bound
xor
jg
out
inc
mov
inc
aaa
dec
and
xor
dec
mov
mov
mov
add
mov
mov
repz
push
jbe
mov
xchg
iret
mov
rol
jmp
mov
push
cdq
into
dec
jl
xchg
sub
fistp
aas
shl
push
ds
(bad)
sbb
repz
push
jbe
mov
cmps
inc
sahf
fimul
jle
mov
bound
test
push
das
adc
and
fstp
sbb
call
add
sar
in
xchg
inc
les
aaa
in
jno
cmp
aad
jp
in
and
sub
std
lea
aas
sbb
mov
pusha
jae
int3
mov
enter
mov
inc
xor
inc
aaa
into
inc
mov
(bad)
stc
push
shr
repz
nop
or
mov
cli
sub
push
sub
xchg
fsub
adc
and
mov
inc
cmp
das
cwde
mov
or
mov
add
loope
and
xor
lods
lods
adc
mov
int3
and
push
div
aam
push
cs
cmps
add
mov
or
bound
jge
(bad)
pop
movs
cmp
data16
or
mov
mov
mov
mov
dec
push
push
imul
cld
nop
(bad)
push
jge
adc
xchg
jmp
pop
push
adc
rcl
inc
and
outs
cmps
xor
adc
loop
loope
mov
pop
adc
fldcw
jl
fisubr
ror
mov
sub
dec
jl
sub
mov
push
cmp
pusha
out
arpl
or
or
icebp
push
mov
sub
xchg
sub
xchg
inc
ss
push
xor
addr16
test
jae
ss
ret
clc
mov
adc
std
mov
cdq
jae
pop
into
pop
pop
pop
movhps
das
mov
adc
popf
jp
movs
loope
mov
test
add
mov
hlt
jmp
or
cmc
nop
sub
ins
mov
dec
lds
xor
div
cs
and
mov
test
cli
mov
movs
shl
enter
pop
dec
(bad)
ds
out
pop
jne
pop
push
out
sti
dec
add
xchg
loopne
stos
out
ret
push
push
xchg
cmps
push
leave
shl
in
sub
jmp
in
sbb
ror
inc
xchg
dec
xchg
stos
jl
xor
xchg
jmp
idiv
jae
outs
push
jns
sub
push
xlat
iret
and
in
mov
push
mov
enter
out
push
mov
(bad)
(bad)
fld
xor
and
push
jp
jns
(bad)
dec
das
es
or
inc
popf
or
imul
repz
ins
pop
std
rcl
pop
jae
mov
pop
dec
sar
(bad)
add
(bad)
test
jg
and
mov
jg
mov
or
data16
popa
les
(bad)
es
test
pusha
cmp
out
adc
fcmovb
cdq
mov
sbb
pop
loope
mov
sub
sbb
add
sub
jecxz
neg
sub
xchg
jle
push
mov
sub
loope
xchg
fprem
xchg
sbb
(bad)
dec
xchg
jle
push
adc
pop
add
adc
retf
das
sub
jge
loopne
push
div
mov
and
loop
push
sub
sub
jp
repz
sti
out
neg
fwait
popa
int3
or
pop
pop
inc
jae
pop
dec
jbe
push
dec
and
mov
stos
js
jns
pusha
out
dec
sub
in
gs
xchg
mov
ja
xchg
loop
jge
adc
scas
sahf
mov
mov
lods
not
jmp
popf
js
add
clc
mov
in
sbb
mov
sti
(bad)
and
or
loope
movs
neg
(bad)
in
mov
dec
mov
scas
xchg
mov
inc
stos
push
jecxz
adc
mov
pop
retf
cmp
gs
int3
cmp
dec
div
dec
add
clc
mov
lods
cmp
pop
(bad)
imul
ret
xor
inc
(bad)
xchg
movs
pop
or
out
imul
pop
leave
(bad)
jmp
pop
sbb
retf
mov
sbb
(bad)
pop
fsub
xchg
push
iret
cmp
stos
cwde
mul
xchg
adc
lds
lea
mov
push
cld
mov
call
jb
and
and
ds
aas
out
ret
iret
popa
mov
mov
je
popf
retf
xchg
sub
(bad)
test
stc
xchg
ins
xchg
scas
mov
adc
loop
jbe
cdq
rcr
cli
cmp
push
mov
mov
xchg
cmp
call
xchg
ror
inc
retf
mov
in
out
add
mov
ror
or
push
add
jmp
dec
mov
sbb
les
das
dec
test
test
pop
mov
out
frstor
arpl
lss
sbb
int3
rol
mov
pusha
push
xor
cmp
jno
jmp
dec
inc
sahf
retf
inc
inc
and
cmp
xlat
gs
adc
mov
inc
cmps
stos
mov
or
neg
add
push
cmp
cmp
call
mov
sbb
(bad)
inc
or
sbb
ret
outs
(bad)
jb
ret
popf
in
aad
lahf
fcmovnb
ret
cld
or
fucomp
ins
(bad)
ds
jb
sbb
xor
xchg
mov
dec
xor
(bad)
fsub
in
inc
push
xor
in
cmp
cmc
dec
outs
dec
add
mov
test
xor
push
xor
fwait
xchg
lods
xchg
xor
and
push
(bad)
jnp
mov
jbe
mov
fcomp
rep
hlt
dec
fnstenv
cwde
or
xor
add
push
mov
sbb
cmp
xchg
jns
clc
push
or
cld
pop
sar
rcr
imul
hlt
(bad)
pop
ret
shl
xchg
pop
outs
outs
jbe
or
les
mov
xchg
(bad)
sub
repnz
fwait
inc
mov
jbe
fdiv
mov
mov
aas
movs
cmp
push
call
int
or
and
gs
push
ja
fsub
mov
sbb
pop
or
sbb
lock
pop
out
push
sub
jmp
push
hlt
les
mov
jns
and
mov
clc
(bad)
cmp
fidivr
push
bound
call
cmp
dec
cdq
lock
movs
(bad)
fcom
cmp
fsubrp
mov
out
jnp
clc
stc
aas
cmp
out
vmovq
gs
jl
lea
cli
adc
xlat
mov
sub
pop
adc
cmp
pusha
lock
add
in
imul
loopne
pop
scas
sbb
sub
mov
jmp
lock
sub
and
add
pop
push
loop
sbb
mov
dec
mov
cmp
shl
cmp
inc
or
(bad)
pop
or
sbb
(bad)
and
jmp
les
jae
nop
bound
sub
and
(bad)
dec
xchg
stos
add
mov
imul
rol
fmul
loop
mov
fs
jbe
daa
mov
sub
lods
sbb
in
fstp
lods
in
and
pop
push
pusha
cmp
mov
pop
xor
add
pop
xchg
jl
fbstp
sbb
jo
pop
mov
push
retf
scas
push
pop
retf
lea
fstp
dec
xchg
mov
ficomp
cmp
push
retf
clc
in
pop
jno
add
icebp
mov
fbld
cdq
mov
out
and
mov
mov
out
pop
mov
shr
cdq
mov
pop
in
mov
mov
pop
mov
mov
cmp
mov
(bad)
pop
cmps
stos
add
cmps
mov
fucomp
sti
sbb
stc
and
mov
ret
mov
sub
jge
stos
aam
(bad)
ins
jg
pop
xchg
xor
bound
or
mov
dec
imul
jbe
vcvtss2sd
pop
inc
dec
sub
mov
ss
mov
imul
jle
pop
mov
pop
sub
sbb
cdq
push
out
mov
mov
push
scas
pavgb
sar
jbe
dec
add
mov
cdq
icebp
ins
jne
and
or
mov
or
test
mov
mov
je
lods
lock
and
inc
mov
lahf
call
test
(bad)
rcr
inc
xchg
mov
pusha
scas
popa
dec
xchg
xchg
mov
cmp
les
or
jl
push
xchg
or
jmp
ret
cmovae
(bad)
mov
cmp
test
push
and
inc
cmp
rcr
push
and
mov
call
call
mov
xchg
ror
mov
sub
mov
test
mov
push
or
adc
push
imul
repnz
retf
cmps
sbb
sub
not
xchg
sbb
and
(bad)
mov
adc
add
jmp
adc
push
xchg
sbb
pop
xor
lds
cmp
mov
mov
lods
cmc
xchg
addr16
lock
sti
xchg
(bad)
dec
ja
or
add
fcom
jmp
ret
dec
bound
or
xchg
jae
pushf
out
loopne
sub
mov
out
pushf
retf
add
(bad)
sbb
sti
test
jne
sbb
jb
iret
ins
add
adc
movs
ret
mov
mov
stos
add
icebp
pop
adc
sub
xor
push
push
int
lods
push
stos
and
movs
inc
cld
mov
outs
ds
js
(bad)
adc
loop
std
pop
mov
sub
jb
out
dec
jmp
mov
xor
mov
ret
(bad)
aas
outs
sub
or
fisub
mov
and
push
dec
rcl
rol
cmps
and
inc
in
mov
sub
icebp
sub
adc
mov
outs
adc
fisttp
test
jmp
clc
jmp
fisttp
and
mov
ja
or
jmp
imul
lock
jmp
gs
cdq
pop
sub
jo
test
mov
xchg
dec
stos
stos
jbe
add
add
pop
xchg
mov
lods
outs
dec
sahf
mov
mov
aam
xchg
in
in
adc
push
loopne
arpl
ins
add
mov
jae
cmp
jo
mov
sub
fyl2x
(bad)
xor
mov
and
inc
push
cdq
sbb
mov
test
xchg
or
and
push
jge
adc
sti
in
int
inc
xchg
cli
gs
loope
call
ror
cmp
xor
call
cmp
jp
adc
mov
mov
out
lods
(bad)
push
xor
fsubr
retf
jnp
xchg
enter
mov
retf
test
(bad)
mov
div
sub
jne
jle
sbb
mov
and
out
push
push
dec
sahf
pop
fdiv
call
mov
and
cmps
mov
les
xor
ins
xor
mov
popf
ror
fs
add
loope
cli
aad
fild
mov
call
xor
aad
jl
inc
add
jge
mov
out
mov
xchg
bound
jp
data16
push
lods
(bad)
ja
pop
cmp
je
push
ds
lods
jl
xchg
dec
adc
cld
mov
aas
in
js
mov
or
cmp
mov
cli
jnp
aad
mov
(bad)
clc
adc
sahf
or
dec
inc
clc
mov
ret
ret
xor
push
fsub
or
xchg
add
push
cvttps2pi
ja
outs
stos
mov
loopne
ror
xchg
xchg
lods
dec
mov
adc
push
shl
fist
sti
(bad)
mov
js
pop
inc
icebp
iret
jge
jl
loope
push
lods
xor
xchg
retf
mov
and
ror
jo
push
aam
mov
rcr
push
xbegin
lds
inc
pop
outs
xlat
add
retf
call
in
loope
mov
mov
add
pop
dec
stos
mov
pop
push
loopne
aam
das
mov
rcl
add
push
push
sar
mov
fisubr
push
add
mov
mov
mov
push
mov
mov
sbb
cmp
lock
mov
stc
in
adc
shr
mov
sub
jne
ss
mov
fnstsw
clc
add
test
xor
sbb
(bad)
xchg
or
call
ret
dec
adc
std
mov
push
and
fcom
inc
inc
out
adc
(bad)
movs
jmp
aaa
int3
or
inc
jns
clc
mov
inc
mov
mov
inc
adc
test
lock
retf
and
or
inc
out
sub
xor
push
push
mov
pop
adc
cs
es
push
mov
enter
ret
or
movs
mov
lea
sti
test
jp
push
jmp
sub
test
enter
movs
sub
and
or
pop
pop
mov
faddp
ror
jge
test
sar
in
pushf
dec
ss
(bad)
mov
jecxz
push
lock
xlat
mov
sub
sub
ins
or
lahf
xor
stos
xor
xlat
mov
call
xor
push
fdiv
repnz
jbe
ds
cmps
aaa
adc
dec
mov
sub
jbe
sar
push
mov
push
outs
scas
sub
ss
mov
mov
mov
cs
mov
mov
inc
or
cmps
dec
retf
ror
mov
mov
pop
sbb
or
mov
mov
push
push
ins
and
cmps
and
sbb
rcl
adc
enter
xor
jmp
mov
push
mov
inc
mov
into
in
push
sbb
lock
jg
test
xchg
pop
mov
push
pusha
cdq
pop
mov
dec
imul
jne
jmp
sahf
cdq
adc
jo
mov
outs
add
pushf
pop
mov
pop
mov
ficomp
jmp
fisubr
cmp
neg
and
sbb
shr
push
(bad)
leave
add
dec
(bad)
fimul
je
push
sbb
out
jp
stos
pop
test
adc
pusha
mov
fdivp
lock
(bad)
push
or
inc
sub
sbb
repz
and
mov
arpl
cmp
fs
loopne
cld
mov
mov
mov
push
jmp
xchg
jg
push
mov
popa
mov
test
xor
xchg
push
gs
and
push
lock
out
push
dec
std
hlt
mov
aad
push
and
pop
popf
or
pop
dec
aaa
xchg
fnsave
int
sbb
fadd
pop
mov
mov
adc
bnd
jmp
cmps
rcl
push
mov
inc
retf
aas
xchg
push
into
loop
fldenv
jb
not
cmp
call
sub
das
xchg
jne
mov
cli
adc
test
xor
xlat
and
mov
xchg
push
shr
cmp
cmp
mov
inc
push
jb
ret
adc
xor
sub
or
add
mov
inc
fstp
mov
mov
mov
loop
push
jnp
in
fwait
push
xchg
scas
jl
loope
jecxz
mov
out
movs
jne
pop
adc
jmp
cld
or
xchg
pop
pop
cmps
push
int
sub
aad
out
jmp
cmps
push
dec
xor
mov
outs
add
dec
repnz
push
pop
ret
xchg
xchg
in
sahf
pop
lock
aam
in
push
cmp
pop
int
ss
mov
lahf
push
push
sbb
push
push
pop
pop
push
push
sub
sub
outs
add
stos
leave
xchg
cwde
cdq
bound
add
fisttp
xor
xchg
imul
(bad)
popa
push
lods
inc
fsubr
stos
inc
cmc
stc
adc
stos
mov
rcl
outs
jge
outs
rol
aas
cmc
jle
jge
jo
scas
push
je
xor
add
repnz
js
lea
mov
push
push
jae
test
test
pop
stos
cmp
xor
cmps
fadd
and
test
icebp
stc
add
cs
movs
pushf
dec
nop
add
mov
scas
mov
std
pop
sub
fwait
push
ror
mov
and
repz
mov
imul
pushf
mov
sahf
cli
icebp
jno
push
rcr
pushf
das
xchg
inc
test
pushf
arpl
inc
out
cmp
daa
cmc
fwait
aaa
and
in
adc
adc
out
out
nop
jp
sar
sbb
and
and
stc
lea
sbb
adc
je
mov
pop
lock
cwde
jmp
nop
pop
cmp
in
and
les
loope
cmp
int3
pop
dec
popa
mov
lock
imul
loope
jp
lds
call
xchg
cmp
inc
cmps
in
mov
mov
stc
xor
mov
push
add
pop
fwait
aad
cld
jo
and
sub
(bad)
loop
fidivr
mov
je
pop
dec
mov
inc
(bad)
leave
fidiv
sub
frstor
pop
cmp
fmul
idiv
xchg
stc
mov
mov
and
daa
addr16
retf
leave
ret
mov
dec
sub
xchg
jmp
ins
into
retf
jle
sbb
dec
iret
mov
and
out
sbb
sub
sbb
jge
mov
rol
retf
cmp
mov
cmp
jnp
iret
in
ja
in
xchg
ins
mov
cmps
aaa
shl
xchg
xchg
pop
fmul
in
sub
frstor
and
add
and
or
pop
cmp
shl
sbb
das
jo
loope
popf
mov
cdq
jmp
enter
mov
adc
bound
nop
cmps
cmp
outs
adc
mov
add
pop
xor
fist
push
sub
icebp
ins
das
in
cld
or
retf
inc
mov
int
rol
pop
popf
mov
das
inc
or
jmp
jmp
lahf
pusha
mov
mov
sbb
test
mov
sbb
cdq
or
mov
dec
ja
inc
bswap
add
hlt
mov
push
repz
rcr
call
cmp
jb
jns
out
ins
sub
ja
sete
int
xchg
mov
sub
or
push
mov
jmp
retf
xchg
movs
outs
fidiv
or
and
jge
fimul
mov
mov
dec
jmp
jns
push
inc
pop
xor
fadd
inc
fwait
aaa
iret
pop
jg
dec
shr
xchg
ins
ror
cmp
movs
cld
xchg
in
std
push
inc
mov
stos
mov
dec
xchg
push
lds
mov
pop
mov
cs
scas
iret
mov
repnz
psraw
mov
imul
cmps
or
test
xchg
into
or
jmp
add
push
hlt
cmovl
outs
dec
jecxz
mov
cmp
add
cld
data16
push
sbb
inc
pop
lds
adc
cmp
in
nop
mov
aad
fcomp
dec
push
rcr
das
sbb
cmp
adc
aam
jle
mov
movs
mov
lods
push
ds
pop
out
push
iret
and
push
popf
imul
jmp
retf
mov
jmp
mov
dec
push
dec
mov
mul
xchg
sub
add
add
in
loop
ret
gs
int3
test
movs
push
jo
popf
idiv
jae
hlt
or
(bad)
xchg
pushf
add
xchg
sti
inc
mov
mov
push
cmp
in
jbe
sub
jo
ror
in
mov
xlat
div
mov
ss
inc
(bad)
inc
mov
push
mov
mov
jno
das
mov
scas
std
outs
bound
pop
xor
outs
add
cmc
(bad)
cwde
add
push
inc
or
ret
fadd
sub
push
push
adc
icebp
pop
cmp
inc
push
movs
mov
lds
or
ds
jp
loop
cmp
data16
iret
rol
daa
jmp
out
fcom
sbb
imul
jne
jecxz
and
loope
loope
inc
push
pop
sub
fdivrp
aad
mov
adc
xlat
mov
rcr
xor
xor
dec
mov
dec
xchg
cmps
gs
xor
mov
push
outs
pop
fiadd
push
sbb
add
int
icebp
add
stos
popa
mov
rcl
ds
int3
in
mov
out
outs
ja
cmp
aad
inc
jno
add
xchg
cdq
add
dec
pusha
iret
ror
mov
jmp
dec
js
shl
scas
cs
ret
and
out
dec
adc
and
repnz
in
xchg
xor
not
scas
jno
stos
jle
lahf
imul
cmp
imul
push
imul
dec
cmps
test
(bad)
jbe
jg
fs
sar
sub
mov
add
or
scas
mov
cld
(bad)
push
push
sub
lock
mov
and
xchg
test
imul
movs
push
push
mov
pop
in
movs
push
mov
ficom
sbb
dec
sub
pop
ret
ss
mov
xchg
rcl
adc
mov
inc
xchg
(bad)
and
sbb
ins
and
inc
jmp
mov
pop
ret
pushf
fistp
ficomp
mov
adc
ss
push
ja
jge
and
pushf
std
jl
call
loop
(bad)
fst
stos
lock
mov
xor
cs
push
movs
add
and
jb
xchg
cmc
mov
fbld
sbb
pop
mov
loop
xchg
fdivr
and
or
add
mov
adc
mov
in
jbe
imul
xchg
inc
and
inc
pavgb
mov
inc
adc
push
dec
ins
jnp
pushf
pop
repnz
(bad)
aas
add
mov
mov
add
push
inc
aas
push
or
fisttp
jp
dec
je
sar
sbb
mov
jnp
push
call
loop
dec
push
jl
add
ss
gs
es
mov
out
cld
popf
sti
mov
pop
out
add
cmps
pop
fcom
sbb
jae
and
cmps
sar
mul
leave
push
cmp
jnp
cli
pop
mov
shl
scas
jecxz
jmp
dec
pop
lock
cmp
idiv
push
inc
cmps
cmc
pop
lea
fnsave
adc
shl
aad
cli
push
test
sbb
inc
sbb
xor
call
ins
ins
push
push
mov
ret
and
adc
mov
jmp
dec
push
push
pop
sbb
push
les
pop
pushf
and
imul
mov
les
add
xor
sbb
jge
ss
inc
xchg
leave
fwait
vpmacssww
and
push
push
rcpps
push
inc
retf
xchg
shr
dec
push
aam
adc
push
repnz
mov
lods
or
xor
lods
inc
xchg
jge
mov
mov
mov
lds
cli
movs
cli
add
pop
pop
aas
jmp
sbb
pop
push
adc
aam
pop
xchg
add
sub
idiv
inc
mov
pop
push
xchg
shr
sbb
scas
or
dec
(bad)
sub
push
push
mov
mov
or
or
cmp
xchg
fs
cli
mov
and
dec
repnz
jg
inc
mov
movs
or
jne
mov
es
jmp
movs
jecxz
jbe
inc
pushf
hlt
fucomi
cmc
enter
push
shl
mov
aas
push
push
mov
sub
xchg
mov
mov
sub
test
shl
xchg
ja
mov
leave
std
test
cmp
loope
or
movs
out
jg
rcl
cmc
pop
fistp
pop
jae
adc
out
or
push
xchg
cmc
inc
inc
jmp
cli
cmc
jno
(bad)
cwde
dec
mov
fdivr
dec
xchg
sub
sub
int
and
dec
cmp
or
dec
(bad)
dec
lock
jg
(bad)
mov
inc
not
pop
push
mov
aam
sbb
push
outs
add
and
daa
and
pushf
aaa
sub
xor
jno
data16
fst
(bad)
fisttp
daa
adc
fst
inc
lods
cmc
pop
mov
les
add
movs
scas
repnz
dec
inc
(bad)
mov
and
xor
xor
pop
push
mov
aam
xor
adc
and
mov
add
add
ins
cli
pop
test
sub
fcmovne
mov
push
into
es
das
lds
mov
arpl
adc
pop
mov
jp
loopne
cmp
cmp
pusha
fwait
outs
mov
mov
cli
pushf
xor
test
cmp
inc
imul
fisttp
sbb
(bad)
xchg
or
dec
cld
mov
mov
or
mov
add
repz
(bad)
mov
adc
pop
dec
mov
aad
scas
adc
ins
aaa
dec
sub
lods
dec
call
add
push
jnp
mov
out
shr
cdq
and
pop
jne
mov
and
mov
lea
jne
or
out
outs
cli
mov
inc
and
xor
ins
pop
inc
jl
or
sbb
fwait
cli
lods
pop
outs
rcr
lods
movs
call
inc
adc
jmp
mov
mov
fdivr
sub
in
sub
(bad)
fadd
jmp
(bad)
imul
out
adc
imul
sahf
push
cld
inc
xor
aad
mov
cmp
lahf
cmps
into
repz
in
mov
loope
aas
neg
sub
xchg
xchg
adc
cmp
mov
fldz
sbb
ret
jnp
cmps
(bad)
loopne
aam
mov
sti
dec
or
aad
push
and
sbb
dec
pop
ds
retf
ror
jne
das
fmul
mov
jecxz
mov
push
xor
rcpps
lahf
les
jg
xchg
cdq
cmps
movs
pop
pop
sbb
push
mov
cwde
lods
push
mov
cld
or
add
mov
fwait
movs
cmp
not
push
popf
push
mov
ret
iret
imul
pop
inc
cmps
(bad)
pop
or
jns
test
retf
inc
cvtps2pi
jnp
push
xlat
inc
xchg
mov
aam
sbb
mov
inc
sub
outs
movs
cmp
mov
movups
iret
inc
sub
rol
in
ss
jecxz
jne
bound
in
inc
fistp
pop
sbb
aaa
jecxz
ins
push
stos
pop
mov
outs
jns
inc
or
add
inc
and
add
sub
xor
aaa
pop
lahf
out
lods
dec
fistp
mov
sub
sti
cmps
scas
scas
rdpmc
shr
rol
es
xchg
ret
scas
retf
mov
jbe
iret
xchg
cmp
out
cmp
adc
test
push
cmps
jle
sbb
popf
outs
into
outs
jp
cs
push
add
adc
add
repz
jg
sub
mov
sub
ret
push
mov
(bad)
jae
fwait
mov
and
loope
daa
sub
(bad)
ins
cmp
test
mov
sbb
cmps
sub
xchg
mov
popa
out
ds
mov
cmp
sub
clc
pop
jo
lods
pop
out
rcr
movs
xchg
sbb
xchg
jb
cdq
cmps
cmp
aad
push
xchg
out
mov
pop
pop
mov
mov
jle
outs
cmp
jmp
das
sub
push
scas
(bad)
loope
dec
xor
enter
out
mov
jb
into
cmp
jle
sbb
in
(bad)
gs
xchg
lods
add
add
sub
(bad)
inc
outs
arpl
popf
jmp
cmc
dec
jge
adc
leave
mov
or
push
and
fimul
in
xor
adc
ror
sbb
arpl
sub
sub
int
push
dec
jno
call
loopne
cmp
cmp
scas
push
shr
sbb
xlat
popa
sub
ss
call
xor
jns
loop
sbb
and
xor
push
fsin
loope
or
bound
sahf
ror
neg
inc
cmp
add
in
mov
mov
mov
scas
(bad)
stc
pop
ror
mov
lfs
fs
and
mov
mov
add
hlt
xor
xchg
ins
mov
pop
or
das
mov
push
jmp
jl
int3
or
adc
mov
jle
ficom
out
push
mov
jmp
xor
mov
sub
scas
jbe
push
fwait
outs
inc
xor
movs
mov
jp
mov
inc
jbe
mov
jns
dec
jno
scas
lods
fsub
push
xchg
mov
jmp
sti
(bad)
js
inc
add
cld
and
push
cmp
or
(bad)
mov
in
jbe
mov
inc
adc
inc
rol
adc
mov
ss
inc
or
dec
lea
and
ja
lea
daa
cmp
ins
and
call
imul
mov
xchg
pop
scas
sub
repz
mov
mov
icebp
adc
das
sub
test
pop
xchg
and
and
out
xor
stos
mov
or
xor
(bad)
out
sbb
imul
lods
movs
retf
cs
clc
mov
xchg
(bad)
bound
jae
movs
aad
pop
jne
mov
sbb
cmp
xchg
mov
ucomiss
std
mov
mov
sub
sub
cs
and
add
inc
and
push
sbb
xor
or
loope
cdq
and
call
(bad)
icebp
cmp
into
mov
adc
or
fidivr
in
(bad)
stc
adc
mov
sar
xchg
cmps
push
jmp
or
adc
mov
and
and
lea
div
cwde
mov
add
or
in
mov
test
stos
add
cmp
into
mov
jmp
enter
out
fist
loop
sti
cli
add
xchg
int
jmp
cwde
das
pop
aaa
shr
add
daa
in
or
es
cmp
pop
push
or
mov
cld
std
out
outs
add
xchg
xor
cmp
mov
dec
xchg
cmp
leave
add
repnz
sbb
pop
jmp
pop
push
sub
repz
das
mov
cmp
add
imul
fwait
test
fldcw
movs
ds
mov
das
loope
push
nop
sub
jo
ss
test
in
stos
movs
test
mov
aad
push
sbb
mov
pusha
(bad)
xlat
(bad)
cld
adc
sub
pop
adc
xor
mul
cli
and
jbe
jbe
sahf
mov
neg
jae
test
inc
mov
xchg
and
xchg
push
cmp
in
push
cmps
inc
add
mov
outs
shr
add
pushf
cmp
mov
push
jge
jle
mov
arpl
jl
stos
cmps
iret
pop
enter
and
dec
jl
std
dec
jae
xchg
clc
imul
lock
push
call
rcl
xchg
shl
push
and
xchg
not
iret
int
mov
mov
out
stc
xor
sar
pop
bnd
fld
or
dec
sahf
test
jb
(bad)
repnz
xchg
jl
cmp
or
xchg
inc
fnstsw
pop
and
test
mov
mov
js
pusha
fcmovnbe
fild
aaa
mov
sbb
(bad)
imul
in
adc
pushf
(bad)
(bad)
xor
cdq
loop
cmp
adc
out
test
adc
cmc
cmp
out
test
clc
sub
lahf
das
cmp
add
push
or
adc
sahf
test
sbb
jns
cmc
mov
rcr
add
dec
(bad)
dec
fs
mov
xor
xor
imul
js
push
je
adc
retf
popf
mov
test
scas
xchg
gs
out
test
loope
xchg
push
mov
in
pop
add
hlt
adc
(bad)
inc
test
ror
stos
in
idiv
xlat
pushf
iret
push
xor
lods
js
sbb
inc
cmp
sbb
pop
add
mov
add
mov
push
(bad)
cld
inc
inc
pop
ins
push
xchg
push
sbb
gs
aam
inc
leave
sahf
mov
dec
das
inc
int3
dec
lahf
outs
sbb
inc
mov
dec
inc
imul
iret
stos
xor
fist
mov
rcr
es
mov
cmps
call
(bad)
das
(bad)
imul
aam
fisttp
mov
mov
iret
cmps
clc
fistp
jb
lods
mov
pop
sahf
fistp
imul
mov
sbb
imul
aas
ror
mov
jmp
push
rcr
mov
jge
mov
push
inc
shl
sub
mov
jl
int3
xchg
imul
mov
outs
fadd
and
call
sbb
loop
stos
ret
pop
mov
cmp
mov
xchg
ja
sbb
mov
sbb
cld
push
out
dec
add
xchg
rdtsc
xor
xchg
push
push
xor
xchg
push
fmulp
dec
shr
fwait
shl
sub
sbb
cdq
mov
popf
loopne
call
jl
mov
add
idiv
xchg
mov
adc
jp
jecxz
adc
dec
rol
shl
cmps
adc
push
ins
mov
mov
cmp
xlat
(bad)
mov
cld
cmc
shr
lods
xor
mov
dec
stos
popa
add
in
sbb
xor
cs
icebp
loope
sti
ret
sbb
fidivr
scas
neg
(bad)
rcl
into
cdq
sbb
sbb
sbb
fyl2x
imul
stos
xchg
cmps
out
cmp
pop
xchg
aas
mov
loope
cmp
or
push
rcl
sbb
pusha
dec
retf
mov
push
hlt
and
jbe
jmp
dec
xchg
loope
mov
and
adc
cmp
daa
ins
push
jbe
add
inc
cmp
(bad)
hlt
je
inc
aam
cmp
dec
adc
fs
or
or
test
and
jno
xchg
(bad)
ficomp
add
test
int3
mov
adc
push
hlt
push
adc
lods
arpl
psraw
mov
jnp
xchg
push
bound
and
outs
outs
dec
std
adc
sbb
xchg
daa
stc
fld
in
inc
add
mul
dec
mov
dec
push
mov
sar
lock
enter
mov
sbb
clc
cmp
js
(bad)
out
add
hlt
jns
pusha
mov
leave
mov
loop
mov
adc
out
mov
pop
or
movs
adc
inc
mov
jo
and
jbe
cmps
cs
dec
pop
add
push
(bad)
out
in
fisttp
in
into
ror
add
out
shl
pop
mov
popf
pop
test
stos
cmp
add
and
xchg
cwde
jae
std
inc
mov
or
cld
push
mov
mov
inc
or
ret
aaa
or
cmp
push
xchg
mov
cmps
cmp
out
imul
jo
jge
push
mov
mov
call
mov
cwde
mov
xchg
add
xchg
sar
and
imul
test
shl
or
push
and
cmps
inc
or
mov
push
outs
cmp
push
int
jle
push
mov
inc
and
mov
fisttp
inc
inc
inc
mov
fmul
retf
or
jnp
fxch
movs
mov
lods
cmp
jecxz
or
jle
xor
inc
arpl
xchg
popf
xchg
mov
aas
mov
and
mov
and
jns
and
nop
push
cmp
cmp
and
push
retf
xchg
sub
sbb
mov
cmp
sub
pop
jmp
mov
and
fild
fimul
jge
and
jecxz
(bad)
retf
jbe
lods
and
dec
dec
fwait
sub
cwde
inc
mov
mov
ja
jg
dec
js
add
lods
mov
add
add
outs
sub
les
shr
retf
or
and
mov
push
movs
in
add
push
fbstp
xor
mov
xchg
(bad)
sbb
dec
(bad)
ficom
adc
jmp
jle
pop
add
adc
je
xor
pop
inc
(bad)
sub
aas
scas
stos
rcr
sbb
xor
in
test
sub
in
int3
call
aas
(bad)
es
inc
mov
mov
mov
mov
retf
aaa
fmul
xchg
adc
jmp
ds
push
pmulhuw
vpcomuq
jecxz
push
push
icebp
and
inc
push
inc
jmp
and
xor
mov
mul
adc
sbb
retf
cmp
or
mov
fistp
sbb
je
lods
jmp
push
out
dec
ret
fcom
dec
aam
loope
xchg
xor
push
xchg
inc
std
imul
iret
aas
cld
mov
cmp
sbb
lods
xchg
(bad)
mov
push
mov
adc
repnz
lock
pop
test
in
hlt
mov
dec
daa
aam
inc
iret
add
inc
sbb
addr16
jp
out
jae
xor
cmp
cdq
hlt
loope
adc
xchg
cmc
or
mov
push
sub
lock
dec
adc
int3
ss
push
jmp
jg
jns
cmp
sub
push
jle
cdq
daa
cmp
dec
jl
pop
imul
movs
push
out
into
shl
imul
jp
push
jge
addr16
pop
int3
push
(bad)
je
or
cmp
and
ja
mov
mov
mov
and
rcr
aad
dec
jg
iret
leave
or
sub
add
add
cmp
mov
cli
push
iret
(bad)
dec
(bad)
aas
cmps
popa
dec
cld
out
pop
xchg
lds
push
fdivrp
mov
sbb
dec
mov
push
inc
mov
sub
cli
mov
xor
jns
xchg
lds
cld
das
stos
in
add
cmps
(bad)
xor
pmulhuw
jle
mov
cmp
mov
sbb
movs
call
sub
xlat
das
mov
out
cmp
jmp
jp
pop
aaa
repnz
movs
cld
imul
cmps
jle
pop
mov
stc
fcomp
cmp
sbb
stc
sti
call
mov
out
dec
and
inc
pusha
cmps
sub
inc
mov
and
inc
mov
cmp
ret
inc
mov
or
stos
enter
imul
xchg
addr16
loop
scas
(bad)
cld
(bad)
lods
mov
pop
out
mov
pop
cmp
int3
sbb
push
leave
xchg
pop
add
add
popa
enter
mov
cmp
and
aaa
jle
or
cdq
leave
cdq
mov
into
fnstsw
lea
push
pop
adc
sti
test
xchg
loopne
jmp
dec
test
mov
retf
daa
mov
and
cmp
dec
icebp
mov
sub
sti
and
or
test
adc
ror
test
inc
mov
cmps
mov
or
ja
jno
mov
fs
fisttp
sbb
mov
(bad)
mov
mov
ja
imul
or
push
dec
mov
dec
mov
jno
pop
pop
mov
jne
add
push
mov
ins
jns
inc
(bad)
sbb
xlat
lock
cmp
mov
mov
call
push
mov
test
sar
stos
xor
push
or
or
popa
js
inc
add
cmp
or
out
gs
(bad)
xlat
mov
std
imul
sbb
or
mov
test
mov
mov
scas
lods
mov
sbb
mov
add
and
adc
xchg
ret
test
out
in
adc
pop
inc
xor
rol
(bad)
ins
mov
mov
jmp
or
jo
xchg
jno
popf
pusha
stos
in
cmps
(bad)
sub
in
sar
mov
push
into
dec
aad
dec
enter
pop
sub
jbe
js
push
fimul
mov
std
jns
add
loopne
leave
inc
lahf
mov
or
fild
mov
mov
push
dec
mov
mov
sbb
mov
cmp
dec
cwde
jmp
fwait
xchg
xchg
pop
pusha
not
aam
lds
mov
push
sub
and
scas
cdq
sub
cmp
dec
inc
rcr
jb
aad
retf
aaa
pop
fadd
dec
jmp
xor
daa
in
lods
inc
add
scas
cmp
sbb
mov
shr
sub
mov
dec
or
shl
mov
mov
aaa
je
xchg
loop
or
dec
retf
mov
mov
mov
and
out
and
scas
mov
pop
xor
or
inc
add
push
inc
cli
shl
shr
push
xlat
out
dec
jns
pushw
push
xchg
sahf
mov
cmp
iret
loop
jnp
cmps
mov
xchg
mov
fdivp
hlt
mov
dec
push
jecxz
test
xor
xor
shl
sahf
pop
push
inc
mov
dec
inc
bound
out
sbb
mov
dec
fld
fisttp
xchg
xchg
dec
into
push
cmps
retf
std
jb
mov
adc
rol
inc
bound
push
scas
retf
ins
sahf
stos
loop
lds
xor
or
adc
(bad)
mov
xor
rcr
std
pop
mov
xchg
inc
es
outs
daa
adc
addr16
xor
ret
push
loopne
jle
(bad)
mov
retf
xor
sbb
mov
hlt
popa
retf
clc
mov
out
mov
test
addr16
ja
add
mov
push
and
jg
pop
or
pusha
test
loop
adc
cmp
enter
jmp
addr16
and
ret
shl
imul
mov
sub
xchg
push
mov
call
jns
add
or
(bad)
iret
popf
and
stos
push
jmp
mov
shl
cld
xchg
xchg
fwait
cmovg
add
hlt
pop
add
(bad)
cwde
cs
cmp
mov
jecxz
into
loopne
xor
fidiv
jo
xor
and
in
call
and
(bad)
or
push
adc
push
sbb
retf
fstp
sub
(bad)
mov
cli
repz
out
push
push
jb
add
loopne
add
outs
jmp
mov
mov
iret
add
mov
fisub
out
(bad)
scas
pop
xchg
add
sbb
aaa
mov
dec
mov
mov
cmps
jbe
leave
add
adc
cli
mov
scas
nop
dec
jb
jge
mov
fsub
jb
push
adc
inc
stos
jnp
dec
xchg
test
outs
lods
std
dec
mov
test
(bad)
adc
mov
add
loopne
js
adc
cdq
mov
inc
and
es
dec
jecxz
or
mov
push
mov
add
outs
fisttp
(bad)
hlt
mov
mov
sbb
aad
mov
jmp
loopne
inc
mov
pushf
or
loop
js
sub
mov
add
out
push
das
xor
push
sbb
stos
xor
clc
push
mov
pop
and
ret
xchg
dec
xor
stos
cwde
daa
pop
and
in
int
dec
jmp
pop
repnz
test
mov
xor
std
pushf
int3
jae
(bad)
mov
mov
mov
mov
loope
lahf
loope
bound
mov
mov
jg
and
rcr
or
sbb
gs
test
outs
and
mov
pop
or
cwde
inc
jp
mov
jge
arpl
enter
push
pop
mov
mov
mov
inc
sbb
or
inc
rol
cmps
sub
dec
pop
inc
adc
mov
add
xchg
(bad)
mov
mov
push
sbb
cwde
pusha
push
push
xlat
mov
cmp
or
pop
cmp
fist
fld
cmps
mov
or
mov
out
aas
cwde
add
stos
sbb
dec
(bad)
fstp
test
mov
sbb
test
call
push
push
retw
push
jmp
cld
jg
sti
(bad)
retf
scas
xlat
fstp
and
lea
lds
push
push
sub
or
inc
mov
mov
adc
xchg
mov
add
ficomp
stc
sahf
mov
adc
mov
xchg
pop
mov
sti
sbb
les
xor
pushf
xor
push
add
cdq
(bad)
cmp
stc
adc
jmp
jge
mov
fs
sub
inc
add
fdiv
fs
or
pop
xlat
mov
cmp
stos
mov
mov
adc
and
out
pop
mov
add
xchg
cmp
lods
movs
xchg
jge
add
jmp
rol
shl
test
in
addr16
xor
sub
jae
jbe
or
xlat
adc
mov
pop
fwait
out
or
jo
xor
pop
xchg
popf
call
add
sbb
sub
jmp
pop
(bad)
jae
mov
and
cmp
fild
stos
aam
ja
jno
cmp
inc
cmp
lahf
adc
mov
push
pop
sahf
loope
xchg
cs
push
fldenv
inc
aas
jecxz
popa
mov
jl
pop
cmp
int
mov
shr
lock
pop
ret
sbb
std
(bad)
aam
cmp
mov
xchg
mov
inc
adc
dec
xor
sbb
mov
sub
dec
sar
mov
push
ja
xchg
push
fcomi
nop
mov
scas
jnp
adc
xchg
stos
lods
push
stos
hlt
cdq
fcmovnb
(bad)
mov
ret
mov
das
sbb
aam
movs
mov
lods
lock
ins
cmp
fnstenv
test
mov
sahf
push
stos
(bad)
dec
sti
rcr
mov
popa
dec
pushf
jns
adc
xor
pop
scas
ud2
aam
jle
pop
popf
xchg
in
(bad)
add
pushf
sub
ror
js
lahf
push
add
icebp
mov
pop
inc
and
dec
cld
popf
cmp
lahf
xchg
rcr
inc
cs
cmp
mov
cmp
mov
sar
hlt
(bad)
xor
loop
xor
enter
pushf
mov
shl
(bad)
inc
cmp
xchg
inc
or
bnd
mov
pop
into
cwde
icebp
and
js
outs
les
sbb
mov
fmul
push
lds
jne
jnp
rcl
or
retf
xchg
js
mov
rcl
and
jmp
je
pusha
push
mov
iret
pushf
loope
loop
dec
repz
xchg
cdq
mov
jne
and
test
je
jnp
sub
or
adc
mov
mov
inc
clc
pop
je
div
jmp
cmp
or
popf
pop
cmp
(bad)
loopne
mov
or
cmp
and
stos
rcl
xor
in
cs
cwde
fstp
popf
inc
(bad)
outs
and
or
mov
into
sar
adc
mov
inc
nop
mov
aam
push
push
(bad)
mov
mov
push
pop
rcr
pop
push
push
in
add
adc
fwait
int
add
cdq
pusha
xchg
cmp
aad
pop
or
paddw
mov
jno
inc
int3
jno
or
lock
cli
sub
movs
sub
int3
or
dec
push
imul
ss
(bad)
mov
pop
lods
or
add
stc
cmc
call
mov
call
jo
and
mov
cld
cmp
push
loopne
cmc
imul
push
sub
pop
lahf
and
sub
dec
add
xchg
aas
push
int
dec
mov
in
pop
data16
lea
dec
dec
loope
movs
mov
mov
push
mov
xchg
push
sbb
loop
mov
imul
retf
or
icebp
fcom
xor
push
and
mov
xchg
imul
xor
stos
xchg
int
hlt
and
(bad)
loopne
push
sbb
sub
mov
mov
icebp
in
jnp
clc
dec
jbe
adc
(bad)
jmp
xchg
push
stos
mov
jae
enter
div
mov
ror
scas
nop
clc
sbb
xor
inc
repz
(bad)
ror
in
(bad)
cli
cmc
pop
mov
push
add
cmp
pop
pop
ret
push
add
iret
push
(bad)
jp
(bad)
in
call
sbb
xor
inc
fbld
(bad)
scas
dec
mov
xor
mov
xchg
pop
outs
add
inc
sbb
mov
clc
jp
rol
dec
push
sub
imul
gs
pop
mov
cmp
pop
sbb
xchg
test
punpckhdq
jbe
mov
cs
stos
call
inc
lods
jmp
jmp
outs
jge
test
mov
jo
xchg
xor
(bad)
fdivr
movs
pop
jae
xor
shr
sub
add
je
test
mov
call
sbb
xchg
iret
pushf
movs
ret
stos
shr
or
loopne
add
addr16
inc
push
adc
fsubrp
xor
xchg
sbb
pop
fmul
inc
repz
mov
ror
test
dec
cmps
loopne
hlt
(bad)
adc
aam
mov
cmps
inc
mov
add
and
jl
jnp
cmp
mov
mov
(bad)
out
mov
jmp
and
(bad)
inc
jge
in
aam
xchg
push
mov
push
out
sbb
xchg
inc
push
sahf
sub
int3
test
inc
rcr
jae
jl
sbb
fwait
push
aas
scas
pop
cmp
call
data16
cs
dec
lods
rol
std
fild
xchg
xor
(bad)
(bad)
push
inc
out
inc
ja
popf
dec
mov
enter
out
push
ds
sub
aam
mov
cdq
popa
retf
sar
jecxz
test
and
outs
mov
or
push
xchg
idiv
and
jl
xor
dec
inc
stos
mov
sti
and
lds
ds
jecxz
mov
jmp
xchg
jmp
xor
mov
xchg
or
jnp
es
nop
mov
jp
mul
mov
push
or
bswap
mov
je
iret
ja
outs
repz
hlt
aas
test
inc
sub
mov
pushf
retf
into
(bad)
jecxz
cmp
sub
cmp
scas
loope
jmp
jno
int
mov
aam
jo
adc
add
jbe
ds
sbb
loope
fldcw
scas
cdq
sub
inc
mov
ret
test
and
push
mov
pop
(bad)
ds
lock
ins
loope
xchg
jg
fwait
jo
test
shr
sub
loope
mov
add
or
jnp
jl
cmp
test
fisubr
xor
dec
pop
push
jge
jbe
in
adc
lock
ja
pop
jnp
lds
add
mov
adc
sub
lea
xor
xor
inc
or
cmp
mov
sub
mov
repnz
jo
mov
addr16
inc
cmps
in
mov
mov
out
push
jge
mov
mov
shl
sbb
xchg
mov
shr
addr16
cmp
jb
imul
and
inc
ja
test
and
unpckhps
mov
fisub
and
imul
int3
imul
lds
jle
or
jno
inc
push
js
add
inc
inc
mov
(bad)
dec
enter
sub
adc
test
stos
adc
push
cld
jle
xor
mov
aam
ror
test
adc
or
push
mov
test
adc
jg
jge
xchg
jge
xor
jne
cdq
int
pop
call
push
fwait
loope
ffree
or
repnz
lahf
mov
dec
sbb
loop
(bad)
nop
pusha
mov
daa
dec
mov
xchg
sbb
outs
mov
mov
fwait
dec
jne
ret
and
and
aam
lahf
inc
mov
jmp
jecxz
sub
adc
inc
ins
or
cmpxchg
out
sub
cmp
or
std
xchg
pop
mov
loope
push
fsub
mov
cmp
imul
sbb
cmp
jo
ja
inc
test
call
aad
out
push
or
repnz
jbe
aaa
sbb
jmp
mov
retf
imul
sub
add
pop
je
pop
fisttp
jno
inc
cli
dec
pop
ins
and
mov
push
mov
pop
fcomp
(bad)
jne
mov
fwait
jp
fsubr
outs
clc
pop
jg
pop
push
xlat
test
xor
cmp
addr16
aaa
mov
pop
(bad)
scas
out
out
mov
call
in
jmp
ret
fcmovb
shl
loope
xor
inc
pop
push
fdiv
int
jle
and
or
push
loop
(bad)
loope
xor
stc
sar
std
fcom
fneni(8087
cmp
dec
pop
xchg
sbb
cmps
mov
rcr
int
cmp
aam
pop
out
scas
outs
cli
xchg
inc
aaa
adc
add
sbb
pusha
lods
push
iret
pop
cs
push
in
jmp
cmp
fdiv
test
or
sub
xor
cmp
sub
mov
outs
jne
cmp
adc
sbb
pushf
fcomp
test
push
fucomp
aaa
bound
popa
iret
adc
lea
jp
pop
jl
adc
pusha
cmp
xor
pop
xor
dec
fiadd
add
push
pop
sbb
adc
leave
inc
xchg
add
mov
sbb
fist
add
mul
push
(bad)
imul
xchg
sub
pop
icebp
lds
adc
iret
add
dec
mov
out
sub
mov
and
jecxz
jp
(bad)
out
xchg
cdq
repnz
adc
call
mov
and
sub
push
inc
movs
add
daa
cmp
pop
stos
mov
sar
jl
icebp
js
shl
test
lahf
aad
inc
push
or
scas
mov
cli
mov
xor
es
add
and
cmp
mov
xlat
add
ins
cli
mov
adc
js
ja
fnstsw
mov
dec
and
pop
pusha
dec
lds
fimul
sub
push
rol
fimul
(bad)
ss
jmp
push
pusha
push
cmps
lods
and
call
lock
test
push
jmp
cwde
sahf
push
int
ud1
pop
imul
je
out
int
jns
xor
movs
mov
rcr
popa
or
ds
dec
mov
inc
jno
mov
and
push
push
pop
bswap
icebp
arpl
xchg
inc
ror
mov
bound
jbe
add
jg
sti
mov
and
ss
jl
daa
in
jns
jb
sar
data16
pop
jo
pop
clc
scas
scas
mov
dec
iret
adc
mov
pop
adc
jg
or
mov
mov
dec
fs
sbb
into
sub
cmp
sub
push
int3
fild
adc
or
xlat
jmp
push
rcl
xor
ror
lods
cs
cs
jo
push
das
cli
test
xchg
aad
sbb
(bad)
outs
or
sbb
loopne
adc
das
xchg
rol
add
mov
inc
xchg
(bad)
ror
aad
imul
adc
fmul
ins
adc
push
inc
mov
mov
mov
adc
push
pop
(bad)
jmp
shr
mov
(bad)
inc
(bad)
or
arpl
arpl
popa
inc
mov
pop
jo
lds
data16
xchg
inc
or
repnz
lahf
mov
inc
idiv
add
adc
mov
mov
(bad)
inc
cmc
repnz
out
jmp
adc
lock
sbb
mov
mov
push
mov
jmp
arpl
push
iret
ret
call
repnz
and
cmp
adc
push
inc
(bad)
adc
mov
jge
push
cmps
adc
and
jmp
cmp
push
or
popa
or
fistp
in
dec
cmp
ins
inc
loopne
int3
sbb
mov
retf
add
inc
jle
int3
js
arpl
inc
sbb
mov
xchg
jb
and
scas
fcmovnb
in
outs
les
mov
fchs
jbe
lds
push
pop
and
popa
mov
push
movs
call
and
pop
iret
rol
adc
cs
jbe
sub
int3
and
mul
jns
jo
mov
leave
jne
and
loope
xchg
xchg
fucom
shl
(bad)
sbb
sbb
cmp
in
ds
bound
xor
sti
out
ret
movs
adc
lahf
push
adc
cmp
mov
sbb
sub
or
aad
ins
xchg
mov
mov
enter
ficomp
(bad)
rol
or
jle
inc
mov
adc
sahf
(bad)
jl
push
xor
into
cmps
les
js
(bad)
je
and
gs
or
inc
jmp
cmp
(bad)
jb
hlt
ficomp
les
xor
clc
not
leave
mov
mov
mov
out
mov
add
sbb
adc
rcr
shl
cmp
mov
lock
std
xor
xchg
popf
xor
lds
and
add
stc
(bad)
sahf
inc
xchg
sahf
push
jmp
jnp
mov
jo
ret
cmp
retf
imul
imul
inc
push
loop
int3
fsub
sbb
mov
pop
sub
dec
dec
jg
sbb
imul
call
jb
push
in
add
inc
ficomp
xor
inc
jns
test
dec
cmp
loopne
jns
inc
add
nop
ret
mov
repz
xchg
xor
imul
inc
or
(bad)
and
cmp
push
xor
xlat
outs
dec
test
push
mov
in
in
js
mov
aam
jecxz
ins
jns
push
in
popf
sub
adc
fwait
mul
ss
inc
sar
mov
aaa
ins
push
(bad)
and
aad
imul
das
imul
xchg
fs
ret
cmps
dec
mov
mov
scas
adc
jmp
fcmovnbe
push
lea
inc
mov
mov
cmp
fnsave
icebp
mov
mov
pop
xchg
fidivr
bound
or
jns
cmps
imul
add
inc
pop
mov
ret
xor
mov
push
into
cmc
mov
dec
add
cwde
adc
pop
rcr
clc
push
mov
sub
inc
sbb
push
ja
imul
and
in
fistp
cs
add
inc
bound
in
jae
sub
sub
cli
push
jecxz
push
(bad)
adc
mov
(bad)
inc
in
or
loope
or
mov
sub
retf
dec
cli
movs
ss
lods
push
adc
sub
dec
repnz
adc
popf
xchg
call
push
nop
push
pop
bound
fistp
xchg
push
push
cmp
fsub
xchg
arpl
pop
add
into
push
sub
mov
cld
inc
mov
cmp
(bad)
mov
push
mov
loop
sbb
stos
push
lds
out
pusha
jno
inc
es
mov
(bad)
std
out
out
retf
mov
mov
lods
js
mov
inc
xchg
pop
es
mov
xchg
stos
dec
ret
mov
(bad)
pop
add
cmp
test
lds
pop
jno
mov
inc
in
(bad)
xchg
jmp
dec
(bad)
shl
jno
xchg
or
mov
inc
mov
push
retf
outs
jg
(bad)
hlt
shl
enter
push
in
xor
cmc
fidivr
dec
mov
xor
addr16
rcr
inc
xor
stos
fwait
jno
jmp
jmp
lods
not
add
push
out
int
push
shl
mov
aas
jnp
mov
fs
iret
fidivr
lods
daa
in
sbb
pushf
adc
fist
loop
mov
sahf
lods
clc
push
sbb
jmp
sahf
jle
ss
mov
hlt
bound
xor
xlat
jmp
retf
inc
pop
xchg
inc
xlat
mov
adc
cmp
push
jb
into
mov
in
jg
es
push
mov
mov
jmp
pusha
stc
xor
stos
sub
xor
scas
cmp
and
mov
xchg
mov
adc
leave
or
add
pushf
inc
in
sub
lock
cwde
push
ds
sbb
in
outs
cld
or
les
rcl
sub
sub
and
mov
popa
retf
add
loope
out
out
and
mov
stos
sbb
je
enter
sbb
dec
mov
mov
cdq
xor
loope
fimul
cmp
lods
arpl
inc
imul
sub
(bad)
aas
inc
inc
mov
sub
cmps
and
add
add
xor
repnz
shr
inc
jo
int3
push
push
dec
add
mov
cli
pop
adc
mov
and
iret
rol
out
leave
rcr
jecxz
jbe
pop
cmp
xor
ja
fisub
jl
xlat
fsub
cmp
push
mov
ja
scas
xor
mov
ins
les
(bad)
div
sub
xchg
mov
inc
mov
retf
cmps
out
icebp
mov
retw
in
dec
add
(bad)
xchg
mov
jne
popa
lods
mov
and
std
icebp
push
adc
dec
ds
imul
int
fisttp
lea
mov
popf
sbb
or
xor
loope
jecxz
fst
aam
sub
push
arpl
push
mov
ret
fst
shr
and
mov
mov
mov
fdiv
adc
jnp
je
adc
test
inc
out
(bad)
mov
add
sub
dec
pop
clc
hlt
or
pop
xchg
and
mov
cmc
pop
test
fild
aad
cs
pop
jmp
push
adc
push
jge
jo
mov
dec
xchg
jns
mov
jmp
loope
add
cmp
enter
js
cwde
xor
pop
sub
push
imul
outs
pusha
(bad)
loop
nop
xchg
popf
stos
(bad)
mov
ja
push
dec
rcl
sub
jo
or
jl
rcr
jo
push
sbb
mov
mov
aaa
cmp
das
neg
shl
fild
jl
xchg
in
imul
icebp
inc
jmp
inc
sub
stos
fisttp
movs
fmul
mov
ror
stc
dec
stos
repnz
add
adc
sub
jno
inc
shl
add
adc
cmp
add
xchg
outs
add
(bad)
into
movs
mov
adc
ja
dec
dec
xlat
fs
shl
and
add
xchg
pop
mov
fs
pop
shl
and
mov
outs
fnstcw
daa
xor
pop
(bad)
popf
retf
pop
jns
or
push
retf
mov
int3
cmc
mov
sub
mov
jge
xchg
adc
aaa
ja
cmp
(bad)
into
fsub
mov
ins
cli
cmps
adc
mov
imul
jo
imul
push
mov
ror
sub
sub
ret
sub
(bad)
fisttp
xchg
mov
push
stc
mov
js
mov
jge
fstp
inc
push
mov
adc
int
jnp
pop
repnz
fs
outs
push
scas
into
in
std
push
movs
cmp
xor
inc
fwait
mov
shr
xor
inc
ficomp
inc
push
call
or
packssdw
lods
pop
out
xchg
xchg
mov
or
pushf
ror
xchg
js
aam
std
mov
push
mov
or
scas
in
dec
sub
mov
aaa
mov
xchg
mov
aad
mov
js
and
xor
and
mov
das
or
push
ret
mov
scas
shl
out
inc
mov
jle
and
leave
aaa
pop
xchg
rol
test
cmc
mov
mov
int
adc
dec
mov
or
jnp
sub
add
hlt
stos
cmp
xor
pop
pop
adc
iret
or
jge
dec
test
add
test
sub
call
stc
mov
sar
fucomi
pop
pop
dec
xchg
cli
nop
add
push
mov
aad
adc
sbb
or
faddp
aas
call
dec
mov
push
movs
lds
mov
fs
rcr
shl
add
lds
(bad)
or
aas
jbe
xlat
cli
(bad)
ror
ret
and
dec
dec
or
push
mov
pop
inc
jmp
int
xor
mov
mov
ret
fiadd
dec
fcomp
cmp
mov
cmp
pusha
push
scas
mov
sub
pop
lahf
mov
mov
sub
retf
push
mov
sbb
(bad)
sub
mov
sbb
sbb
gs
xchg
pop
enter
mov
mov
test
fld
pop
mov
push
ja
xchg
loope
or
ret
cmp
daa
and
repz
repnz
mov
loop
dec
mov
out
xor
push
and
mov
push
mov
dec
ret
push
mov
scas
or
and
aam
sub
sbb
mov
mov
jg
jge
add
in
pop
stos
mov
retf
paddd
adc
mov
pusha
xchg
push
jns
xor
sub
fist
push
imul
or
leave
pushf
in
xchg
mov
jo
push
inc
push
repnz
push
fisubr
cmp
pop
sub
in
jmp
add
sbb
sar
cmp
aaa
scas
es
push
pop
jmp
sbb
mov
fucomi
hlt
dec
(bad)
mov
add
cwde
mov
inc
fneni(8087
std
adc
nop
shl
xbegin
daa
cmp
and
pop
xchg
jmp
scas
jae
pushf
push
sub
push
push
retf
and
je
inc
popa
inc
jle
popa
inc
in
cli
pop
retf
rcl
jl
or
sbb
fst
jns
aad
mov
mov
out
popa
inc
adc
and
out
cdq
adc
pop
mov
imul
mov
ss
jae
call
(bad)
fsubr
(bad)
pop
pop
data16
daa
adc
and
lahf
sub
aaa
fsub
mov
dec
cdq
sub
push
jecxz
call
jg
retf
sar
aas
scas
mov
mov
push
sti
or
sti
pop
repz
mov
mov
mov
out
xor
in
xchg
xor
loope
pop
cmp
cld
push
pmuludq
xchg
ffree
inc
pop
xchg
mov
daa
and
ret
fs
gs
or
js
call
addr16
sub
daa
mov
dec
imul
je
movs
(bad)
fimul
int
sbb
xchg
xor
mul
shl
jl
adc
adc
movs
adc
push
mov
or
xchg
xor
cmp
sub
pop
gs
mov
sub
xchg
test
push
out
cmp
inc
lar
aad
mov
addr16
adc
xor
xor
pushf
dec
stc
fcomp
inc
inc
enter
pusha
retf
dec
out
mov
and
jo
mov
or
ret
(bad)
cmp
leave
pop
mov
or
movs
sub
jl
(bad)
aad
add
mov
cmps
push
out
aaa
into
add
mov
xor
sub
adc
mov
hlt
imul
repz
std
dec
leave
inc
and
jmp
in
addr16
fldcw
mov
xchg
lock
enter
stc
rol
push
int3
fcompp
or
add
not
gs
mov
movs
push
mov
call
out
xor
mov
cmps
adc
test
stc
sti
bound
mov
ins
xchg
jge
and
lock
int3
pop
mov
mov
mov
sti
ds
mov
sub
dec
xor
and
mov
bnd
lods
ss
sub
fadd
cmp
out
mov
or
fmul
sbb
cwde
and
push
inc
xor
push
out
scas
adc
dec
arpl
lods
pop
lods
stos
lods
mov
retf
dec
lods
fimul
cdq
repnz
jbe
mov
xchg
test
cmp
mov
fcmove
fmul
vpaddusw
jb
loopne
sbb
int
addr16
aam
fwait
pop
ins
jne
mov
adc
std
in
test
ja
mov
dec
adc
ret
int3
ja
push
fistp
cmps
pop
clc
jg
je
loopne
fsubr
bound
arpl
mov
inc
jp
push
outs
adc
clc
(bad)
push
sub
leave
test
in
movs
adc
loopne
popa
int3
dec
and
fwait
mov
ret
or
dec
das
pop
push
stos
xor
push
in
cld
lea
sbb
sub
outs
mov
mov
fwait
aas
sub
out
cmps
dec
mov
and
jg
xchg
addr16
(bad)
pop
sahf
adc
fdivr
add
inc
ja
outs
pop
mov
scas
or
inc
pop
and
pop
adc
iret
jb
push
jnp
cvtpi2ps
jns
push
jae
or
mov
adc
mov
in
in
mov
xchg
shr
jb
cmp
jns
jne
sub
pop
in
les
sbb
xor
or
out
movs
cmp
fild
add
push
sub
inc
sahf
mov
jg
mov
ins
dec
enter
xchg
pop
ror
mov
loope
shr
xor
cmp
jmp
pop
xchg
jp
dec
clc
sahf
and
push
int
mov
mov
into
popf
or
sub
jg
loopne
mov
inc
stos
or
movs
loope
lods
cdq
xchg
aad
add
in
pop
call
or
inc
push
in
les
scas
out
lds
(bad)
push
inc
(bad)
mov
pusha
xchg
xchg
nop
jp
sbb
lock
sub
adc
imul
mov
fwait
and
lock
pop
adc
cwde
enter
pop
scas
gs
test
cmps
fdivr
xor
xchg
jne
pop
std
lea
in
xor
xchg
in
sub
sbb
mov
mov
aaa
int3
cmps
js
repnz
sub
stos
add
out
xor
mov
mov
nop
sub
push
ins
mov
test
into
mov
push
xor
div
out
ins
pop
pop
mov
fisttp
jbe
sub
icebp
or
test
movs
add
aas
sar
les
mov
or
out
pop
jae
(bad)
cmp
mov
inc
nop
punpckhbw
add
or
inc
and
jb
sub
jge
not
add
clc
cli
fisubr
jno
add
test
call
and
inc
in
inc
(bad)
sti
dec
sub
dec
sub
addr16
dec
cmp
xchg
jmp
int
scas
jg
and
pop
jbe
ret
rol
(bad)
jb
ds
push
or
inc
ds
ja
fcomip
jg
lods
dec
jbe
cmp
xchg
and
pop
pop
cmc
mov
mov
add
pop
test
and
ds
and
enter
ds
xchg
xchg
xchg
mov
pop
popf
loop
cld
out
adc
bound
mov
mov
inc
add
or
push
and
stos
jbe
inc
xlat
(bad)
movs
call
mov
xchg
dec
mov
mov
dec
sbb
adc
aaa
mov
es
fwait
push
jmp
pop
bnd
xlat
aad
pop
jae
mov
mov
pop
mov
cs
inc
mov
out
outs
add
xchg
adc
fsubr
pop
pop
mov
ret
rol
scas
push
(bad)
add
mov
jmp
test
and
push
add
test
data16
out
jae
pusha
pop
or
loop
inc
in
iret
mov
xor
pop
int
in
xlat
dec
fist
test
jg
daa
test
mov
lds
imul
xor
cld
fs
cmps
cmp
dec
push
sbb
sub
rcr
adc
jge
ror
imul
popf
mov
mov
sar
xchg
push
fidivr
vmovaps
mov
(bad)
fnsave
mov
xor
pop
adc
mov
mov
mov
into
js
ffree
(bad)
push
xchg
mov
xchg
lahf
or
jp
adc
jmp
and
mov
mov
cmp
shr
shl
jo
repz
xlat
rcl
xchg
add
ds
sub
iret
dec
inc
(bad)
lods
dec
retf
mov
adc
xchg
mov
call
or
ins
sub
xlat
ret
pusha
daa
sbb
fadd
mov
cmp
(bad)
fild
push
mov
bt
rol
push
je
mov
movs
sub
sbb
or
mov
(bad)
jno
pop
jo
xchg
(bad)
pop
cli
or
loope
shr
cwde
dec
push
mov
stos
dec
jne
mov
clc
mov
loopne
xchg
add
loope
aad
nop
add
repnz
(bad)
xor
call
xor
aaa
nop
cmp
call
mov
sahf
xor
sub
imul
enter
adc
sub
xor
mov
stos
fsubp
mov
cmp
neg
xchg
ins
ins
or
ins
sbb
xchg
mov
retf
dec
mov
jnp
stos
and
pushf
ins
(bad)
jmp
movs
or
je
adc
int
sbb
push
or
lea
jmp
ss
call
push
enter
xchg
adc
mov
sahf
add
cmp
cmp
in
loop
jge
mov
cmp
pop
jne
cmps
das
and
aam
call
ins
or
xchg
retf
scas
mov
adc
sub
and
aaa
or
scas
ss
repz
push
sbb
mov
fstp
and
mov
test
dec
call
in
or
mov
mov
add
inc
(bad)
mov
push
add
js
pop
dec
xchg
or
popa
mov
xor
aad
jnp
adc
sub
cmp
pop
scas
loopne
fucomp
jns
pop
shr
(bad)
stos
call
outs
test
stos
jae
loope
ja
fbld
sbb
ins
mov
lea
inc
push
dec
fdivr
pop
inc
sar
rol
out
xor
sti
mov
sub
inc
mov
in
ins
fwait
div
jnp
jne
sbb
jmp
sub
sti
ja
(bad)
xor
or
stc
xor
jecxz
cmps
push
cmp
or
icebp
pop
in
push
loop
inc
jl
dec
rcl
cmp
repnz
sahf
lds
or
mov
jnp
rcl
cmps
int
outs
sbb
(bad)
and
shl
sti
mov
rcr
scas
xchg
mov
repnz
add
mov
test
loope
add
mov
cmp
and
icebp
xchg
xor
fidiv
(bad)
ficom
cmp
in
iret
dec
add
sti
mov
sbb
scas
das
jmp
mov
outs
sub
sbb
inc
mov
mov
scas
fidiv
xor
daa
int3
adc
pop
movs
adc
scas
pop
lods
sub
int3
xchg
(bad)
pop
cmpps
pushf
pop
fldenv
and
sahf
mov
push
in
mov
fwait
stos
cmp
stos
fild
push
cli
out
inc
cwde
mov
jae
mov
popf
xor
fstp
jbe
nop
sbb
fld
xor
xchg
lock
pushf
xor
in
rcl
cmp
add
mov
test
mov
stos
std
daa
dec
adc
sub
mov
gs
mov
or
shr
adc
push
ins
js
mov
mov
(bad)
aam
movs
adc
jo
xchg
stos
std
sbb
jo
sub
rcr
(bad)
(bad)
mov
mov
xor
xchg
test
sbb
lods
dec
inc
jge
add
cmps
inc
cmp
cmp
std
xchg
mov
je
pusha
xchg
mov
sbb
push
nop
icebp
adc
sub
mov
pop
das
jnp
in
btr
(bad)
aam
pop
or
mov
cwde
out
inc
sar
sbb
mov
mov
cmp
pop
mov
cwde
pop
dec
pop
imul
xchg
es
dec
adc
dec
push
out
aam
enter
xchg
xor
out
aaa
data16
jp
int
ficom
out
popf
and
xchg
not
inc
int3
push
into
ja
push
repz
xlat
mov
and
test
and
dec
xor
push
(bad)
mov
inc
push
in
cld
shr
ficomp
mov
and
imul
mov
fsubr
push
adc
push
xchg
cdq
pop
inc
dec
test
mov
in
pusha
test
sub
loop
adc
sub
cmp
in
and
ja
(bad)
jmp
push
and
fldcw
or
hlt
scas
out
addr16
lahf
or
mov
or
ret
pop
jmp
inc
mov
or
inc
scas
cdq
push
push
push
fmul
mov
in
mov
aaa
sahf
int
ret
test
repnz
jae
inc
ds
fwait
adc
mov
mov
ror
add
mov
not
pop
add
lea
sbb
cs
in
jbe
paddusb
lock
xchg
fisttp
repz
mov
in
not
adc
int
add
sbb
js
sbb
push
inc
sub
or
xchg
inc
gs
into
ds
imul
inc
cmps
arpl
daa
retf
lahf
call
outs
xor
jns
jb
stos
js
mov
stos
loop
js
pop
pop
ror
call
sti
fcmove
pop
mov
lds
or
sbb
mov
jmp
inc
fstp
xor
mov
out
sub
loop
mov
jecxz
clc
repz
xor
ds
sub
jg
add
xor
jle
jmp
bt
bound
cwde
retf
dec
xchg
iret
inc
ins
sbb
push
add
(bad)
cmp
xor
sbb
dec
jge
outs
lds
pop
xchg
cld
fsubr
pop
lock
(bad)
cwde
pushf
or
cld
sub
add
fisttp
dec
mov
aad
je
rcl
xchg
dec
(bad)
and
pusha
out
jbe
cmp
xchg
jmp
mov
popf
dec
jb
push
dec
push
retf
inc
and
(bad)
cs
mov
call
pop
push
push
pop
loop
and
pop
inc
mov
mov
pop
sub
jno
push
shl
cmp
adc
jmp
add
daa
sbb
jo
jo
les
xor
pop
pusha
add
jae
sbb
shr
fmul
xor
or
xchg
data16
(bad)
hlt
int
aaa
call
pop
int
lods
mov
call
imul
ror
nop
in
leave
pushf
stc
jl
push
sub
jo
das
jbe
push
pop
pop
mov
adc
stos
repz
rcr
push
scas
icebp
xchg
in
pop
mov
fld
fidiv
(bad)
jbe
les
les
sbb
xor
mov
mov
sar
fs
aad
rcr
xchg
sahf
fcomp
add
mov
mov
cli
mov
mov
scas
aas
add
push
cmps
std
jmp
adc
mov
add
pop
pop
arpl
shl
inc
movs
ins
inc
imul
(bad)
adc
or
lds
out
imul
js
dec
adc
push
das
fld
cld
lods
icebp
sub
call
mov
ror
jne
sar
sub
fmulp
repnz
call
push
push
sub
jbe
add
inc
jmp
inc
pop
mov
add
shl
inc
pop
mov
repz
popa
adc
jb
mov
mov
xchg
sahf
clc
push
in
fld
mov
push
xlat
sbb
fst
les
ins
jb
mov
icebp
jmp
pop
xlat
mov
push
retf
xor
fst
cmps
jmp
inc
mov
lock
fnstcw
push
or
pushf
jb
ret
fstp
mov
sahf
popa
test
sub
leave
xchg
inc
push
xchg
add
sar
mov
retf
push
mov
mov
cmps
aam
xchg
aas
cmp
cmp
add
(bad)
sti
aas
lods
jns
sbb
dec
mov
int3
test
pop
rcl
jo
outs
out
and
add
dec
out
xor
repz
push
std
mov
ror
pop
aad
add
nop
ds
mov
js
sub
or
mov
test
imul
aas
pop
cmps
pusha
sub
scas
fisub
scas
cli
daa
mov
xchg
cdq
(bad)
aam
jbe
or
mov
sub
jl
jnp
dec
sahf
movs
xor
lods
cmp
retf
xchg
jae
xlat
fdiv
push
pop
lds
mov
aas
inc
inc
sahf
push
pop
pop
adc
inc
mov
repz
mov
daa
(bad)
call
push
jg
scas
lds
pop
int
or
leave
xchg
stos
pop
icebp
sbb
sub
adc
cmp
mov
cs
push
or
int3
nop
mov
frstor
cmps
sub
sbb
adc
xor
push
div
or
mov
mov
dec
shr
sbb
scas
imul
mov
mov
stos
adc
pop
adc
sub
ret
ins
pop
add
ins
pushf
and
jle
aam
lock
pop
push
xchg
sub
or
pop
pusha
pop
pop
add
pop
test
outs
dec
xor
cmps
pop
je
jp
cdq
inc
and
sbb
outs
scas
jmp
mov
sub
mov
sbb
cmps
ja
jle
pop
dec
mov
xor
xor
cmps
les
test
in
jge
aam
hlt
sub
cmp
stc
ins
daa
mov
stc
jmp
and
jne
cwde
and
or
fst
jmp
mov
mov
fstp
jno
mov
fistp
jmp
or
jne
sbb
repnz
fcomp
xchg
scas
addr16
lsl
pop
fiadd
rol
dec
sbb
inc
pop
and
int
xchg
jl
xchg
mov
xor
fwait
jl
rcl
iret
aad
retf
mov
pop
pop
inc
jbe
inc
fisttp
clc
pusha
sub
push
shl
and
aam
add
aas
mov
xchg
xor
mov
out
idiv
call
sar
mov
movs
scas
fst
cdq
(bad)
call
xchg
icebp
adc
dec
add
jmp
adc
jnp
sub
mov
(bad)
rcr
and
test
push
fld
ins
imul
shl
pop
imul
js
in
jl
sti
call
cmp
add
mov
sti
into
or
pop
int
repz
sbb
daa
add
xchg
cmc
mov
xchg
int
xor
cmp
repz
adc
rol
pop
scas
or
in
lds
test
lods
xchg
dec
dec
fxch
xchg
inc
scas
add
cdq
sub
dec
(bad)
mov
mov
xchg
pop
pushf
inc
(bad)
fnsave
int3
dec
push
jne
cmp
push
rcl
ds
push
and
(bad)
movs
in
(bad)
or
ins
xchg
inc
dec
js
push
fwait
jp
mov
add
loopne
push
xchg
mov
lods
xor
mov
cmps
out
addr16
movs
cmps
outs
test
pop
cmc
pop
loopne
add
sbb
and
call
or
out
mov
aaa
jg
retf
xchg
jno
pusha
pop
cmps
adc
pop
pop
sbb
(bad)
ja
pop
mov
and
or
cs
rcl
fcom
cmp
ret
or
and
sbb
dec
adc
loopne
repz
daa
int3
push
mov
jne
test
or
iret
or
cmp
jmp
icebp
rol
cdq
xor
cmc
mul
aad
stos
nop
mov
mov
and
mov
int3
jae
jno
call
jp
mov
push
popf
dec
imul
loop
in
fadd
(bad)
(bad)
fnstcw
mov
ins
ret
hlt
es
push
mov
arpl
mov
push
lods
fsubr
stos
sub
add
int
test
fst
dec
inc
push
add
ja
push
mov
push
and
jge
cli
icebp
popa
stos
out
ss
(bad)
sub
aad
inc
test
(bad)
fadd
mov
adc
retf
stos
daa
mov
mov
inc
adc
inc
pop
adc
cmps
cmps
push
shl
pop
mov
imul
test
out
(bad)
jmp
scas
stos
jl
fcomp
pop
xor
jmp
int
sub
call
cmps
clc
dec
push
cli
sub
inc
xor
add
cmp
xchg
sbb
test
pop
sub
adc
jg
sti
sub
pop
(bad)
scas
stos
es
mov
mov
mov
ss
jp
test
xlat
add
shl
pop
add
hlt
ins
mov
mov
sbb
ins
ins
fistp
dec
push
ja
inc
jp
mov
xor
mov
call
stc
dec
jae
cmp
fiadd
or
adc
inc
test
(bad)
xchg
dec
mov
rol
and
xor
and
movs
mov
(bad)
mov
inc
cld
add
jecxz
fisttp
cmp
mov
out
fst
and
xchg
push
mov
les
mov
inc
and
cmp
inc
test
call
adc
imul
lahf
or
mov
xchg
into
mov
cwde
xor
imul
test
rol
inc
in
mov
addr16
sbb
sub
adc
push
add
jno
movs
add
loope
sub
jp
mov
dec
mov
add
dec
cmp
scas
sahf
adc
cmp
cmps
stos
xor
ss
sbb
leave
dec
inc
pop
scas
jmp
pop
push
ins
pusha
ss
adc
popf
loopne
cmp
push
(bad)
rcr
sub
lock
and
dec
dec
jne
and
lea
xchg
cmp
cmps
inc
int3
shr
mov
(bad)
enter
jae
add
shl
sub
xchg
cmp
test
test
jb
cmp
xchg
fisubr
sub
mov
ss
cdq
mov
(bad)
inc
retf
pushf
in
pop
jge
cdq
push
sub
add
inc
loop
pop
dec
nop
bound
mov
add
test
mov
faddp
popa
frstor
lahf
into
ja
dec
ret
scas
outs
cli
(bad)
cs
mov
add
out
leave
ja
mov
jnp
adc
pop
hlt
dec
push
pop
sbb
jno
nop
cmp
stos
dec
and
imul
mov
pop
stc
and
and
mov
int3
shl
cs
mov
inc
mov
adc
psubq
push
test
jmp
and
pop
fdivr
outs
loop
int3
pusha
out
and
dec
sub
mov
push
shr
and
or
lds
xchg
xchg
cmp
rcl
mov
sub
mov
mov
sub
(bad)
jle
mov
xchg
sub
jp
xor
adc
mov
rcr
je
dec
aad
dec
push
test
jb
adc
sti
mov
rol
push
cmps
ins
inc
gs
ret
dec
sub
mov
mov
mov
inc
jp
(bad)
mov
push
cmp
inc
pop
pushf
lahf
push
push
in
retf
or
mov
cmp
mov
test
fsub
sub
outs
jg
push
sti
test
in
xor
sbb
bound
mov
adc
mov
xor
xor
ja
xor
lods
shr
and
enter
cdq
inc
add
ror
jle
add
mov
shr
cwde
fist
and
xor
sbb
movs
pop
or
mov
repnz
sti
cmp
xchg
hlt
mov
out
cmp
test
sti
mov
loop
mov
scas
fs
out
sbb
test
mov
inc
adc
icebp
dec
push
push
cdq
sbb
je
jmp
dec
lea
(bad)
xor
cmp
mov
sbb
fld
outs
rcl
fdivp
jmp
mov
ins
xor
mov
shl
in
cld
sbb
add
pop
cli
mov
push
in
jmp
mov
(bad)
xor
idiv
sub
mov
or
fld
lea
shl
int
pop
mov
jge
outs
lods
jecxz
data16
sbb
mov
iret
inc
ins
bound
and
xchg
sbb
icebp
dec
popf
stos
push
mov
leave
lods
mov
fisub
sti
rol
push
sub
lahf
adc
mov
mov
retf
jg
fs
jge
out
xor
out
and
and
ret
imul
arpl
mov
out
or
cmp
xchg
xlat
mov
jnp
es
pusha
mov
mov
je
and
dec
pop
adc
mov
fwait
data16
popf
outs
out
inc
sbb
or
xchg
(bad)
push
mov
ss
and
cmovl
test
jp
in
mov
mov
loopne
or
cdq
adc
mov
test
out
jp
cmp
(bad)
mov
dec
call
ret
sbb
and
mov
aad
and
dec
jmp
aaa
dec
daa
pop
push
push
popf
mov
fmul
cwde
retf
adc
and
cmp
getsec
add
(bad)
movs
arpl
jp
sahf
sbb
xchg
ins
add
pop
pop
add
cmp
sub
inc
add
xlat
jl
jmp
push
adc
fwait
jae
mov
ja
bound
(bad)
and
outs
jae
into
in
sar
std
cmp
fsubr
lods
xchg
iret
mov
cmp
adc
lea
jg
xor
mov
rcl
popa
xchg
retf
ror
(bad)
mov
mov
adc
movs
cwde
idiv
sbb
mov
or
inc
rol
mov
popa
imul
pop
cmp
adc
outs
les
cs
and
mov
jne
outs
mov
sahf
ror
repnz
call
test
jge
stos
lds
repnz
lds
mov
inc
jl
loop
dec
test
ins
loop
xchg
adc
int3
mul
cld
mov
jg
mov
stos
aaa
mov
mov
pop
jae
mov
mov
data16
ffree
iret
fcom
cli
pop
gs
fwait
cmps
addr16
adc
xor
fcmovne
mov
jo
cmps
test
loope
pop
mov
sub
shr
push
sub
leave
and
inc
jp
xlat
lahf
mov
dec
aam
pushf
add
push
(bad)
icebp
mov
stos
xchg
es
xchg
and
cmc
ds
pop
fld
push
mov
or
add
cmp
pop
sbb
daa
aad
jg
cld
call
(bad)
pop
ins
daa
cmp
push
sbb
loope
loop
pop
adc
jbe
or
dec
pusha
cmp
test
add
inc
jg
stos
adc
ror
fld
or
and
sbb
not
adc
pop
in
adc
jbe
hlt
ss
jno
push
add
pop
fiadd
aam
popa
adc
fistp
add
pop
iret
imul
xchg
xor
or
shl
mov
test
data16
mov
xlat
addr16
in
test
js
xchg
jne
neg
push
ja
dec
pop
out
add
pop
add
adc
nop
scas
lahf
cli
xor
push
add
in
pop
push
or
cmc
adc
ja
cdq
mov
rol
lea
and
or
fcmovnb
leave
cmp
mov
cdq
int
or
pop
jmp
scas
jbe
or
pop
xchg
dec
(bad)
pop
and
in
pop
jb
adc
mov
dec
dec
jnp
popf
inc
push
cmp
das
cmps
dec
inc
xlat
pop
repnz
pop
hlt
mov
add
add
push
retf
shr
not
aad
pop
mov
sub
xor
(bad)
pop
int
sbb
sub
push
movs
xlat
push
js
out
jno
dec
jl
ret
push
inc
pop
or
rol
nop
sbb
sub
xchg
push
sbb
cld
call
adc
repz
or
movs
scas
jmp
outs
(bad)
aam
mov
xor
ins
mov
xchg
adc
and
and
ret
push
mov
xor
mov
push
adc
push
enter
cld
mov
cdq
in
test
nop
shr
jbe
dec
scas
adc
dec
sub
cdq
lock
dec
sub
inc
xlat
pop
xchg
fisttp
mov
push
xlat
jecxz
sub
mov
mov
or
mov
pop
adc
sbb
mov
lods
enter
ins
xchg
add
pop
scas
inc
sub
ins
addr16
xor
sbb
inc
xchg
xchg
add
pushf
sbb
ret
int
retf
movs
clc
icebp
pop
inc
scas
jne
fnsave
and
sbb
mov
(bad)
push
or
outs
mov
jge
pop
movs
data16
xchg
or
jbe
imul
cmp
mov
and
or
xchg
sbb
mov
pop
xor
pop
sub
jae
adc
adc
jne
in
jmp
jmp
inc
xor
in
mov
lds
cmp
cmp
and
addr16
pop
dec
mov
ror
sub
or
lods
mov
bound
push
sbb
aam
(bad)
(bad)
scas
int
jnp
or
jge
inc
inc
sub
js
cmp
sbb
or
hlt
out
scas
lods
aas
xchg
mov
ret
cmp
xlat
mov
stos
push
push
mov
or
jne
sbb
std
jl
mov
cld
(bad)
cmp
test
lea
sbb
jmp
aas
push
jmp
jl
scas
jb
dec
in
fcom
xor
sbb
jmp
repnz
mul
xchg
int
cmp
outs
outs
and
xchg
dec
repnz
sbb
mov
add
dec
arpl
ins
or
mov
dec
inc
sbb
sbb
lea
dec
jne
and
pop
test
mov
adc
(bad)
sub
mov
sbb
cmc
rcr
add
jl
mov
out
movs
popf
adc
adc
push
sbb
sbb
jp
aas
cmps
push
mov
push
push
lea
cmp
outs
inc
movs
(bad)
fmul
xchg
push
stos
adc
mov
scas
scas
pusha
mov
cwde
dec
daa
sub
mov
jmp
(bad)
test
callw
jnp
xor
aam
jmp
or
les
adc
dec
pop
pop
das
pop
xchg
pop
call
mov
pop
jmp
(bad)
or
fdivr
call
int
sbb
ds
int
pop
imul
jmp
imul
and
pusha
push
call
xchg
fisttp
jecxz
jnp
mov
inc
iret
stc
adc
test
inc
or
jg
test
arpl
pop
js
clc
inc
or
xchg
js
or
inc
clc
cmp
add
shr
mov
push
adc
and
callw
icebp
(bad)
movs
enter
sbb
and
repnz
aaa
gs
push
pop
or
pusha
dec
fs
fisubr
and
jno
jnp
mov
retf
pop
mov
jmp
in
inc
xor
std
ds
(bad)
(bad)
loopne
or
ds
push
(bad)
repnz
mov
adc
xchg
(bad)
iret
arpl
xor
adc
xor
aaa
cmp
out
mov
and
jge
int
shl
or
call
xor
push
mov
push
in
cmps
es
bswap
out
xor
lods
loope
jae
push
dec
cmp
dec
add
data16
pop
sbb
data16
icebp
jle
jle
pop
cmp
sbb
sbb
fstp
xor
jae
aad
or
mov
inc
mov
fsubr
clc
xor
xchg
mov
test
out
hlt
pop
lahf
dec
xor
into
and
lods
or
daa
or
cmp
jne
mov
and
mov
dec
add
test
push
mov
or
cmps
xlat
sbb
cmp
(bad)
popa
mov
ss
imul
rcl
push
popf
pop
clc
sahf
push
jnp
movs
xchg
xor
test
lea
xchg
pop
das
ins
cmc
push
in
mov
je
data16
pop
adc
sub
dec
push
jae
in
cmp
pop
int
pop
fidivr
loope
bnd
(bad)
(bad)
in
ins
mov
xchg
out
popf
(bad)
lods
push
ds
movs
mov
shl
and
or
fistp
(bad)
jno
ds
or
dec
ins
scas
std
ss
int3
adc
pop
data16
mov
aam
jmp
cs
das
sub
xchg
and
ins
data16
repnz
outs
lds
mov
jbe
(bad)
stc
mov
push
xchg
sub
rcr
loopne
pop
fnstsw
mov
xchg
add
iret
xchg
pop
add
push
push
sub
je
mov
test
fstp
test
mov
adc
mov
sbb
push
adc
sub
or
ror
out
push
pop
jne
(bad)
xchg
loope
mov
bnd
icebp
sub
xor
push
xchg
popf
fldcw
add
outs
pop
shl
call
das
aad
push
push
sub
dec
sbb
pop
(bad)
dec
dec
dec
push
aaa
out
mov
or
retf
fs
mov
call
jne
mov
push
or
lods
sub
leave
fs
mov
ja
shl
lahf
(bad)
jnp
inc
or
ins
jl
push
xchg
inc
shl
pop
mov
xor
(bad)
push
cmp
gs
sbb
nop
movs
sbb
jge
cmc
(bad)
lds
pusha
mov
dec
imul
(bad)
out
repnz
cmp
test
add
std
dec
(bad)
sub
sub
int3
imul
rcr
inc
mov
mov
cmp
scas
mov
sub
repnz
add
jne
hlt
push
inc
inc
int3
xchg
adc
leave
shl
les
dec
rcr
in
nop
cmp
mov
push
mov
sub
pop
aaa
leave
xchg
sub
scas
out
jge
adc
add
(bad)
test
inc
cmps
retf
push
sub
fisubr
les
mov
jbe
adc
fild
sub
test
inc
dec
repnz
or
test
(bad)
in
lea
inc
cwde
sub
sti
sub
pop
mov
adc
jne
pop
(bad)
pushf
pusha
pop
add
mov
inc
les
jnp
retf
and
pop
rol
inc
ret
ds
enter
inc
jno
retf
js
inc
mov
mov
jg
mov
out
and
pop
fcomi
dec
xor
adc
pop
call
jae
pushf
sub
inc
outs
sbb
rcl
jmp
aad
mov
sbb
repnz
retf
xor
in
xor
stc
rcr
les
ret
scas
xchg
xchg
test
sbb
in
dec
fld
addr16
rcr
aaa
rol
mov
les
mov
test
jmp
add
xchg
adc
sub
repnz
cmp
jg
mov
sub
jb
and
xchg
jo
jl
adc
jmp
mov
cmps
mov
xor
iret
retf
xor
sub
pop
loopne
mov
test
pop
outs
cmc
adc
popf
mov
fstp
(bad)
pop
loop
pop
mov
mov
jge
xchg
loop
mov
out
jno
jbe
and
mov
(bad)
xchg
pop
jl
cmp
outs
ds
retf
fistp
jo
sbb
(bad)
jne
xor
les
aam
lahf
lods
iret
cmps
mov
sar
aas
popa
sbb
mov
mov
lods
cld
fld
jb
sub
movs
sbb
fwait
mov
imul
fst
jno
jmp
les
sti
add
mov
push
cs
push
bound
xor
bound
mov
cmp
xor
add
dec
mov
mov
and
add
mov
cmp
mov
lock
xor
arpl
push
cmp
pop
push
stc
rcr
sbb
iret
cmp
dec
ins
enter
std
add
cmp
pop
rcl
push
fbld
xor
dec
pop
fs
shl
and
and
dec
add
retf
(bad)
in
pop
inc
dec
ds
inc
mov
cdq
add
push
add
dec
pop
xor
aad
add
pop
push
mov
pushf
inc
jmp
outs
cmps
pop
lods
retf
mov
and
add
cmps
pop
mov
test
adc
jbe
lock
into
mov
imul
(bad)
rol
mov
data16
and
imul
arpl
(bad)
sbb
lahf
or
sbb
pop
mov
and
fucomi
adc
adc
mov
pushf
adc
imul
push
cmps
(bad)
mov
dec
push
aad
not
mov
pop
pop
pop
jno
test
(bad)
jle
add
lods
repz
lods
jmp
js
push
jg
ds
iret
dec
jnp
inc
sar
jmp
or
ret
pop
mov
inc
inc
scas
or
aas
and
js
retf
or
fwait
xlat
fs
xlat
pop
in
loop
cli
xor
inc
cs
pop
and
sbb
fistp
jge
or
out
jge
xchg
mov
popf
push
cwde
xchg
pop
aaa
xchg
ret
popa
dec
call
inc
mov
mov
and
dec
icebp
mov
mov
adc
mov
jnp
pop
push
lds
out
imul
sub
dec
dec
popa
in
inc
sub
inc
and
jnp
push
mov
xor
push
pop
inc
call
fwait
cdq
jg
pop
mov
mov
stc
test
add
jmp
xchg
xor
and
fwait
imul
aam
push
mov
fwait
mov
jo
xor
icebp
ret
sub
popf
cmp
dec
ins
lea
(bad)
pop
dec
dec
jg
cmp
push
rcl
scas
cmp
sbb
mov
in
jle
cmp
dec
out
lds
or
push
aad
xor
fwait
cdq
mov
push
daa
mov
cmp
ud0
pop
sub
xchg
test
icebp
pop
push
scas
fld
addr16
push
jae
jle
or
popf
js
(bad)
js
loop
push
out
scas
inc
jns
rcr
xor
clc
cdq
(bad)
ins
mov
or
add
pusha
jmp
xor
into
mov
dec
clc
mov
mov
test
mov
sub
sub
jecxz
pop
cld
dec
ror
loopne
lahf
and
xchg
imul
cmps
ins
sub
stos
call
fsubr
fcomp
mov
mov
ficomp
sub
xor
add
daa
mov
faddp
outs
jo
lds
iret
rcr
or
enter
fcomip
rol
rcr
cmp
cld
add
inc
mov
mov
sub
pop
int3
cwde
ja
(bad)
xchg
js
movs
or
jmp
fisttp
or
sbb
hlt
xor
dec
sub
or
js
pop
scas
fsubr
mov
call
clc
sub
or
outs
push
(bad)
into
add
lods
add
repnz
xchg
mov
dec
push
mov
inc
add
xor
mov
mov
iret
push
jnp
xor
call
mov
sub
xor
mov
push
retf
fld
loop
xchg
je
icebp
sbb
jg
jo
js
and
sbb
jg
sar
or
sub
or
fucomip
sub
rol
mov
and
outs
je
out
movs
outs
scas
dec
cmp
mul
cmps
aas
movs
sub
lea
dec
idiv
repz
push
(bad)
dec
add
jb
mov
mov
push
std
popa
out
cld
push
sub
aad
mov
hlt
pop
mov
ss
bnd
cwde
outs
adc
pop
pop
mov
in
cmps
scas
mov
sbb
sar
adc
and
int3
shl
cmp
sti
inc
dec
imul
lods
lods
and
push
ret
(bad)
mov
clc
push
fstp
jne
jae
les
jg
pop
inc
add
inc
jbe
xchg
retf
fisub
fmulp
mov
cmp
or
mov
jge
lods
adc
xor
inc
sub
lods
push
into
adc
adc
and
xchg
or
les
call
mov
pop
aad
popa
out
pop
dec
dec
xor
or
push
(bad)
dec
push
pusha
mov
out
or
cmp
mov
xchg
in
rcl
dec
add
push
xor
repz
xchg
cli
popa
into
mov
(bad)
add
out
add
cmp
xor
pushf
xlat
pop
outs
in
add
mov
nop
sahf
fisubr
(bad)
sbb
or
jmp
aad
pop
fmul
add
loope
mov
push
cmps
push
mov
rcl
xor
shl
aam
mov
mov
lods
mov
stc
xor
fs
adc
dec
dec
sub
out
ins
lahf
xchg
or
daa
xchg
inc
push
sub
adc
cmpxchg8b
pusha
enter
sar
repnz
lahf
and
push
movs
push
loope
jmp
xchg
in
enter
stos
sbb
ret
pop
adc
in
jb
jo
cld
stos
sti
lahf
mul
call
in
mov
or
adc
jo
pop
fcom
push
xor
ja
jle
jns
je
ja
(bad)
div
and
cld
jnp
cwde
aaa
sub
jge
popf
lock
les
idiv
scas
push
(bad)
mov
push
fstp
mov
pop
sbb
addr16
data16
es
ds
fdiv
jp
(bad)
jecxz
not
mov
adc
push
pop
xchg
ins
(bad)
inc
dec
push
retf
pop
sbb
sbb
mov
push
out
mul
dec
jecxz
jg
(bad)
jecxz
or
call
cmp
jmp
cmp
cmp
imul
pop
popa
rol
aaa
imul
mov
xor
fsubr
repnz
dec
jo
inc
jmp
int3
fbld
inc
es
and
out
int3
add
dec
scas
adc
fcom
mov
inc
popf
out
jo
rcr
hlt
(bad)
jne
imul
add
shl
inc
xor
cld
neg
pop
movs
mov
adc
nop
call
sub
int
jno
pop
ss
loop
add
repnz
adc
pop
fstp
xchg
outs
popa
mov
(bad)
(bad)
(bad)
and
cmp
ret
std
pop
cwde
pop
or
int
shld
out
dec
sub
dec
loopne
jne
sub
cmps
sbb
and
jbe
xor
jecxz
mov
(bad)
adc
xchg
mov
ds
sbb
ins
jne
div
dec
jbe
mov
pop
mov
inc
fwait
cld
push
clc
outs
inc
mov
push
mov
rcr
push
and
sub
inc
sub
shr
jmp
test
out
je
sub
xchg
sbb
mov
loope
and
sub
push
inc
xchg
mov
mov
jmp
or
push
sub
inc
cmp
push
sbb
or
sub
pop
fild
int
aam
gs
or
ficom
xchg
adc
jb
pushf
iret
add
scas
inc
xor
adc
cmp
cmp
retf
cdq
(bad)
int3
rol
stos
sub
fwait
ud1
(bad)
out
ficom
add
fnstsw
dec
(bad)
lods
pop
addr16
test
mov
add
adc
sub
ins
fiadd
fmul
out
push
lods
movs
pop
ret
inc
ss
test
daa
add
sahf
or
pop
xchg
icebp
int3
ins
(bad)
push
xchg
std
ror
inc
or
mov
in
ins
pop
clc
xchg
pop
add
add
or
dec
pop
in
sub
pop
repnz
pushf
xchg
inc
xchg
(bad)
jb
jo
mov
(bad)
fs
fistp
add
pop
sar
shr
mov
sbb
pop
gs
leave
fwait
push
xor
pusha
dec
ins
add
jo
les
sbb
adc
sub
dec
mov
je
loope
add
mov
ret
jmp
sar
cmps
mov
lock
pop
jae
inc
cld
jns
jmp
or
mov
mov
jae
mov
rcr
ins
inc
xlat
dec
outs
xor
dec
(bad)
nop
jns
or
mov
sub
mov
inc
push
rcl
(bad)
test
shl
into
mov
int3
cmp
dec
jg
hlt
ret
cmps
add
jbe
pop
jp
sar
test
dec
enter
cmps
ins
call
push
shr
das
pop
xchg
dec
cmp
rcr
ret
mov
cmp
mov
movs
push
fimul
hlt
xchg
std
jecxz
pop
inc
ror
jp
jle
(bad)
or
push
nop
cmp
out
jb
add
shl
mov
dec
xchg
adc
(bad)
ins
push
in
lods
jmp
sub
imul
scas
mov
repnz
shl
inc
add
cmps
jp
mov
mov
call
adc
dec
mov
add
xchg
outs
shr
es
cmp
xchg
js
and
adc
xchg
mov
or
imul
rcr
pop
fcmovnu
iret
mov
jae
mov
adc
lods
pop
outs
repz
sbb
xor
ds
ret
retf
stos
xor
sub
xor
hlt
jnp
cdq
cli
test
sahf
fsub
mov
mov
jmp
call
repnz
jge
xchg
mov
and
retf
sbb
xchg
lahf
ficom
cmps
sub
push
adc
aas
or
pop
inc
xor
or
xchg
xchg
pop
(bad)
cmps
mov
pop
retf
ds
enter
push
add
sub
popf
dec
retf
mov
out
jnp
pop
pop
add
and
mov
mov
bound
(bad)
xor
jecxz
popa
in
aam
cmp
jp
pop
dec
ret
or
mov
test
loopne
xchg
movs
and
(bad)
cmps
cli
and
fstp
mov
ja
daa
cmp
iret
loope
fs
sub
add
pop
(bad)
cmp
adc
popa
jmp
rcr
xchg
jmp
loop
adc
repz
icebp
jmp
dec
addr16
scas
mov
es
hlt
jg
jecxz
cmp
jmp
inc
push
pop
mov
addr16
fidiv
or
clc
inc
sub
repnz
and
push
sub
fisttp
into
mov
aad
sahf
pop
ret
aas
pmullw
xor
ins
test
stos
mov
fst
inc
add
or
inc
sub
ins
addr16
and
mov
cld
cld
add
repnz
xchg
pop
jne
shl
mov
data16
inc
dec
in
clc
mov
inc
mov
push
in
inc
cmp
xor
xchg
(bad)
sahf
inc
pop
popf
sbb
xchg
test
push
sbb
aas
or
xchg
add
pushf
(bad)
sub
data16
rcr
in
mov
sub
es
xor
movs
arpl
xor
or
push
add
dec
mov
jnp
dec
dec
mov
loop
fist
imul
imul
cwde
cmp
push
sti
mul
sbb
rcl
popa
cwde
push
shl
inc
mov
iret
pop
dec
or
lods
ds
mov
sub
jg
and
retf
xchg
mov
jo
sbb
push
mov
inc
out
xchg
xor
sti
fimul
icebp
outs
dec
inc
arpl
sbb
outs
int
inc
lods
mov
cmp
push
js
sbb
cmp
xchg
test
push
xor
cli
inc
ss
outs
pop
xchg
aas
ret
out
imul
pop
fdiv
mov
inc
pop
sbb
and
pushf
inc
cmps
push
jp
int3
inc
or
adc
sbb
(bad)
mov
pop
push
outs
and
cmps
pop
dec
sub
sahf
jb
dec
fs
jp
adc
xchg
and
sbb
loope
pop
in
mov
xchg
repnz
jge
pop
add
mov
fdivr
data16
loopne
out
dec
sti
sub
ret
push
rcr
push
jmp
sbb
mov
dec
mov
pop
fwait
push
add
pop
push
test
jp
gs
mov
xchg
inc
jle
aaa
push
sub
mov
fcomp
sub
retf
(bad)
hlt
add
xchg
cmp
les
xor
pop
outs
pop
movs
pop
aad
xchg
daa
into
inc
(bad)
jmp
leave
xchg
jne
adc
jle
pushf
int
rol
je
dec
cmc
xor
dec
cwde
outs
mov
sbb
jle
hlt
test
jno
in
mov
cmp
lods
jl
push
add
sar
xlat
outs
mov
sbb
jp
push
js
push
popa
loope
das
sbb
movs
pop
dec
inc
jl
stos
mov
sti
cmps
mov
repz
cdq
movs
mov
push
lock
cmp
test
push
outs
and
mov
cdq
push
loope
movs
pop
inc
adc
mov
(bad)
sbb
sbb
dec
or
sub
mov
(bad)
loop
in
add
cmc
sar
xor
push
jge
mov
mov
push
shl
das
aad
mov
(bad)
push
and
jmp
scas
push
pop
fld
mov
jbe
xor
mov
xchg
(bad)
mov
and
jecxz
aaa
iret
movs
add
sbb
add
sub
and
xchg
(bad)
movs
push
aad
push
int
ins
jecxz
test
out
out
scas
shl
or
and
pop
jge
jo
jbe
and
aad
adc
jmp
pop
sbb
jp
stos
aam
call
imul
push
icebp
jb
mov
mov
mov
repnz
xor
inc
ss
cld
imul
push
inc
cdq
sbb
sahf
sub
es
retf
outs
rdtsc
mov
fwait
(bad)
outs
or
das
xor
add
inc
out
shl
push
mov
cmc
push
ds
out
xchg
pop
stc
icebp
not
xchg
xchg
ds
dec
pop
jle
addr16
cld
fwait
xor
mov
ret
inc
mov
ror
pop
and
(bad)
lock
lods
retf
dec
outs
lahf
sub
and
cs
sti
xchg
out
xor
sbb
es
imul
adc
aam
jb
movs
in
int3
or
aaa
fld
inc
sub
je
add
test
fimul
mov
xchg
and
xchg
sbb
(bad)
xor
cmp
or
frstor
shl
lods
and
mov
cmp
cmp
gs
ficomp
adc
fbstp
pop
imul
mov
(bad)
and
inc
pop
sahf
(bad)
outs
out
sbb
add
and
retf
xor
sbb
rcl
rcl
fwait
jp
dec
(bad)
shl
ins
mov
add
and
xchg
dec
stos
or
and
movs
and
imul
and
(bad)
mov
(bad)
inc
(bad)
or
dec
xor
loop
movs
loope
add
scas
mov
dec
xchg
les
xchg
in
movs
cmp
xlat
push
dec
icebp
jl
mov
pusha
cmp
and
iret
popf
push
repnz
cmp
push
cmps
xchg
imul
push
mov
and
pop
mov
mov
retf
xchg
ds
jg
pop
fwait
pop
loope
loope
mov
aaa
repz
stos
out
add
or
xchg
jl
cdq
leave
inc
fs
or
inc
lods
xchg
leave
sbb
hlt
xor
(bad)
(bad)
mov
and
sub
cwde
mov
pop
sub
mov
sahf
lahf
fwait
rcl
test
pushf
cld
jne
xlat
xlat
pop
push
push
fist
(bad)
sub
push
xchg
adc
inc
ss
test
mov
sub
outs
cmp
test
mov
(bad)
scas
push
mov
movs
out
ins
push
fmul
add
and
xchg
pop
sub
rcl
int
pop
loop
xchg
movs
mov
xchg
jl
pusha
push
clc
int3
pop
in
cmc
in
add
imul
adc
fdiv
stos
pop
(bad)
mov
inc
mov
daa
mov
fwait
mov
or
scas
add
arpl
xlat
call
push
fimul
push
cdq
fwait
sub
outs
fdiv
mov
inc
aam
or
shl
pushf
pushf
mov
enter
jnp
xchg
dec
mov
mov
mov
inc
xchg
(bad)
scas
imul
and
cmp
mov
mov
jg
push
lock
mov
sbb
(bad)
out
mov
push
fdiv
addr16
pop
lds
push
mov
xchg
iret
iret
int3
xchg
inc
mov
ror
out
add
or
mov
mov
loop
jle
sahf
push
mov
leave
outs
adc
mov
cmp
dec
cmps
retf
nop
(bad)
fadd
sbb
xor
rol
aad
loope
or
or
cs
jo
jae
inc
cmps
mov
cmps
cli
jl
xor
fs
std
mov
jg
imul
imul
cld
sbb
sti
xchg
in
out
test
or
outs
jae
cmc
mov
jne
retf
(bad)
imul
js
das
xor
hlt
sbb
daa
int3
test
retf
cmps
rcr
sub
cmp
mov
retf
mov
gs
and
in
sbb
cmps
pop
adc
pop
inc
retf
stos
jne
cmp
xchg
xchg
cmp
fcmovbe
pushf
(bad)
jl
inc
aas
ret
aad
mov
sub
xchg
nop
(bad)
xchg
push
cmps
aas
test
repz
xchg
xor
dec
cmp
mov
shr
sbb
lock
inc
mov
(bad)
jmp
or
pop
xchg
popf
aam
fldcw
dec
mov
sub
jb
mov
das
mov
call
idiv
xor
sbb
popa
hlt
jne
push
sub
in
sti
gs
jl
mov
ins
or
push
pop
rcl
or
mov
jb
clc
adc
jae
clc
add
sti
and
fadd
mov
das
scas
or
test
(bad)
push
jne
in
push
xor
pop
push
cmps
jnp
in
sahf
jg
cmp
ja
cli
inc
or
sub
stos
mov
loopne
sub
fist
or
je
push
sbb
lea
pop
add
jae
cs
daa
cmps
sub
outs
in
sub
fisttp
stc
jmp
sbb
aaa
and
cld
shr
xor
dec
cmp
add
mov
les
rcl
pop
xchg
mov
mov
imul
fwait
or
adc
mov
int
dec
loope
and
inc
adc
outs
sub
mov
jge
retf
mov
cmp
adc
sar
sbb
dec
cmps
cmp
out
dec
ja
jl
sbb
ror
neg
cmp
cld
mov
retf
adc
idiv
push
inc
fbstp
out
aas
push
jge
popa
ficom
adc
arpl
(bad)
in
aad
pop
clc
xor
addr16
adc
leave
pop
leave
pop
in
cmp
sar
in
push
das
fiadd
cwde
xchg
in
pop
adc
popa
pop
test
dec
cld
mov
pop
sbb
xchg
std
daa
mov
jmp
cmps
addr16
cs
adc
pop
aad
dec
mov
(bad)
lds
add
lahf
std
es
vmovss
dec
add
push
xchg
popa
movs
loopne
jns
and
into
out
push
pop
ss
push
lock
mov
clc
xchg
dec
jg
sub
fwait
mov
push
push
add
pop
je
jg
jp
inc
aam
js
adc
sub
addr16
mov
mov
das
out
jo
pushf
(bad)
(bad)
pop
repz
jno
mov
xchg
std
cmp
inc
aad
mov
(bad)
ds
clc
shr
cmps
mov
test
dec
cmp
push
mov
jg
in
lds
in
ror
(bad)
xchg
(bad)
pop
inc
add
xchg
movs
inc
test
jo
out
not
jecxz
clc
or
add
fcomp
movs
jnp
shl
pop
mov
add
or
inc
cs
int
stc
fadd
jne
ins
test
xor
call
or
imul
or
cmp
test
dec
dec
cmp
pop
loopne
dec
sbb
rcr
sub
xor
jle
in
stos
pop
jl
lds
push
cmp
inc
fiadd
jo
adc
out
pop
int3
lods
xor
iret
sti
mov
cdq
(bad)
ror
cmp
add
add
popf
push
aas
popf
movs
inc
jbe
inc
or
and
aas
pop
jmp
cmps
shl
pop
mov
loope
(bad)
test
fldenv
jo
shl
push
cmp
xchg
sub
sti
push
sti
mov
aad
xchg
pop
(bad)
xchg
jne
pop
sbb
cs
xor
hlt
cmps
cld
aaa
push
inc
iret
xchg
mov
mul
or
push
mov
sbb
mov
push
pop
js
ror
sbb
std
das
ds
sub
mov
icebp
ror
clc
outs
mov
xchg
test
mov
and
mov
sahf
dec
test
in
(bad)
out
cmp
out
pusha
repnz
push
jne
adc
sbb
call
std
cmp
mov
dec
cmp
mov
fist
jecxz
sub
push
sbb
and
push
jge
xchg
out
cld
shr
loopne
arpl
cli
loopne
push
rcl
(bad)
xor
iret
add
sbb
and
inc
lods
call
sbb
rcl
ins
sbb
js
mov
cmp
iret
mov
cwde
sub
int
mov
adc
mov
pop
xchg
mov
adc
pop
aad
fbstp
in
push
retf
aas
mov
cmps
js
int3
xor
adc
mov
out
or
inc
sub
or
mov
push
sbb
adc
stc
into
loope
mov
mov
jno
dec
fsub
ror
hlt
xchg
test
popa
add
add
jbe
test
fisubr
inc
movs
mov
loop
cmps
cmps
cmps
sar
mov
imul
mov
enter
cmps
jecxz
ja
adc
out
mov
mov
ror
enter
(bad)
inc
std
push
adc
stc
push
popf
adc
aas
xchg
lds
dec
aam
sbb
adc
mov
sbb
jp
inc
int
ins
(bad)
push
iret
pop
mov
xchg
jnp
pop
and
and
add
lock
nop
rol
jmp
mov
sbb
mov
xchg
mov
iret
and
sub
cs
mov
leave
stos
pop
jbe
pop
in
mov
sbb
(bad)
in
sub
sbb
cli
leave
inc
cmp
inc
retf
pop
lock
repnz
push
mov
lock
mov
jecxz
or
lock
daa
sub
inc
aaa
es
jecxz
jo
jmp
xchg
jae
lahf
push
shr
fidiv
xchg
jge
jbe
xchg
aaa
js
jne
xchg
mov
xor
repz
and
test
cmps
sub
mov
ror
dec
xor
jp
inc
xchg
xchg
out
push
mov
dec
scas
cmp
data16
(bad)
imul
xor
cdq
es
add
mov
test
inc
ss
aad
call
mov
lds
ror
ret
mov
lods
int
sbb
cwde
iret
dec
pop
jb
nop
cmp
inc
imul
imul
or
xchg
(bad)
retf
fmul
mov
stc
mov
sbb
ret
out
dec
sbb
and
(bad)
cmp
adc
retf
stos
fsub
adc
sbb
js
dec
mov
mov
(bad)
sti
mov
aaa
(bad)
dec
mov
cs
fild
cmp
push
and
xchg
jns
shl
bound
jne
addr16
push
cmps
mov
adc
dec
mov
cmp
icebp
or
mov
int
mov
(bad)
sub
sti
pusha
imul
shl
out
dec
(bad)
out
inc
sbb
scas
int3
mov
xor
jbe
jo
aad
fild
bnd
(bad)
les
test
cmp
std
fdivr
jmp
idiv
and
inc
and
pop
aas
jmp
jbe
add
mov
test
(bad)
mov
ins
sbb
sbb
and
adc
test
movs
push
fidiv
mov
push
mov
mov
mov
je
sub
fdiv
adc
or
push
(bad)
dec
outs
sbb
mov
mov
gs
(bad)
es
xlat
(bad)
cmps
aam
in
adc
emms
outs
(bad)
cli
and
out
sub
xor
sub
ficom
ja
lds
scas
cwde
loope
pop
jmp
jmp
cld
iret
ret
xor
(bad)
jp
sbb
xlat
and
push
and
leave
test
dec
pop
(bad)
pop
sub
retf
sbb
fwait
push
sar
xchg
inc
sbb
mov
push
fimul
sub
ins
cmc
lds
pushf
in
pop
xchg
pusha
loope
lods
and
cmps
(bad)
shl
mov
out
add
mov
in
popf
paddsb
jp
push
bound
mov
cs
jb
pop
dec
loopne
(bad)
dec
pushf
push
push
push
scas
test
loopne
push
inc
cmp
xor
sbb
sub
add
lahf
xchg
inc
xchg
lock
xor
ja
cmp
stos
in
dec
jo
retf
jnp
mov
jmp
std
add
or
adc
pop
fidivr
inc
stos
inc
int3
add
cmp
push
cs
(bad)
(bad)
cmp
in
sub
mov
inc
mov
rcr
jb
lahf
hlt
out
vmulpd
in
cmp
out
hlt
in
jmp
movs
out
and
xor
retf
jb
mov
leave
fadd
jne
push
sbb
mov
xlat
and
adc
call
jbe
mov
outs
dec
sbb
outs
xchg
adc
js
jl
pop
fild
pop
mov
xor
and
mov
out
mov
pop
inc
xor
(bad)
push
pushf
sub
push
push
fmul
ins
jbe
jge
cmps
rol
cmp
pop
add
jo
shl
or
pop
loop
xchg
jne
sar
adc
loopne
in
loope
cmp
in
ins
sti
mov
or
and
test
xchg
adc
and
cmp
loop
popf
cmps
pop
pop
(bad)
mov
jnp
adc
or
dec
sbb
ret
outs
ss
jbe
daa
sahf
sub
dec
call
clc
stc
mov
jns
mov
ret
add
lahf
pop
shr
xor
sbb
arpl
shl
ret
mov
ret
push
cli
or
lea
push
jle
xor
sub
mov
dec
fild
call
scas
enter
retf
data16
arpl
adc
pop
rcl
sar
sar
jl
sahf
test
pop
mov
call
jns
(bad)
sub
stos
gs
daa
(bad)
sti
rol
ret
mov
rol
pop
xlat
sbb
and
pushf
js
ret
mov
sub
scas
popf
out
pop
dec
xor
pop
out
mov
mov
dec
pop
outs
leave
fnstsw
xor
adc
into
jmp
mov
inc
cli
push
sbb
(bad)
mov
mov
adc
pop
jg
jno
arpl
adc
mov
sub
neg
ret
iret
outs
mul
movlps
mov
push
cmp
scas
iret
jecxz
imul
push
jg
int3
test
shl
lods
xlat
sbb
or
cdq
xor
(bad)
inc
dec
cmc
pop
mov
cmc
stc
mov
adc
sub
dec
inc
cmp
es
mov
mov
cld
push
std
xor
lock
pusha
cs
sub
jnp
loopne
and
dec
dec
adc
(bad)
jg
dec
jecxz
jge
adc
or
addr16
mov
jo
gs
and
dec
xchg
mov
push
xchg
ret
jo
mov
jmp
add
popf
hlt
fdivr
sbb
jmp
test
sbb
sub
hlt
push
pop
mov
stc
mov
sub
or
(bad)
outs
adc
repnz
(bad)
mov
cmp
adc
das
fwait
test
mov
pushf
mov
popf
out
or
rcr
lods
shl
sbb
mov
ja
sbb
jmp
xor
xchg
adc
pop
aam
repnz
scas
or
dec
dec
gs
loopne
pushf
push
(bad)
int3
adc
jmp
lods
das
mov
push
mov
jns
pop
popa
(bad)
lds
xchg
mov
leave
test
or
push
(bad)
dec
scas
out
xor
or
push
dec
test
jmp
adc
dec
dec
xor
mov
fsubr
adc
push
outs
adc
enter
ds
xchg
arpl
in
push
out
icebp
call
push
test
pop
xor
mov
pop
mov
aaa
fistp
(bad)
xchg
call
arpl
fcom
dec
inc
shl
xchg
shl
jno
push
neg
clc
push
add
jmp
sub
jg
fisttp
push
ror
or
(bad)
pop
mov
add
sbb
aaa
xchg
xor
mov
adc
add
sti
xor
push
mov
xchg
or
scas
dec
add
sbb
add
inc
push
jge
jp
imul
pop
ins
sahf
mov
dec
fbld
push
and
call
mov
sbb
push
mov
push
jno
(bad)
popa
cld
(bad)
call
and
sti
stos
ins
mov
aad
jg
shl
xor
cmp
cmps
and
sub
mov
cmc
add
cld
cmp
sbb
sbb
movs
xlat
mov
add
xlat
or
test
cs
stc
and
sbb
or
int
sbb
cmp
sub
inc
retf
or
sub
xor
(bad)
sbb
xor
hlt
das
mov
lock
loope
fwait
test
sar
and
movs
repz
or
je
mov
cmps
lock
into
and
cmps
pop
fisttp
fstp
inc
clc
inc
ret
and
fs
data16
movs
icebp
adc
jp
retf
xor
lahf
mov
adc
sbb
mov
cmp
jmp
inc
lods
sbb
nop
xchg
clc
ret
dec
adc
ss
movs
call
mov
pop
mov
push
xor
dec
jnp
and
mov
in
loop
mov
inc
mov
adc
jle
lods
push
inc
cwde
adc
mov
sbb
ins
push
push
out
cmc
retf
leave
sbb
stos
push
mov
mov
shl
mov
lods
enter
cmps
mov
pop
repnz
push
xchg
shr
je
pusha
inc
out
xchg
out
pusha
mul
jnp
fidiv
mov
add
xor
in
into
jge
shr
popa
outs
mov
fstp
div
mov
xor
and
test
mov
into
pop
xor
cwde
inc
xor
sbb
mov
push
test
shl
aad
ret
scas
adc
jbe
mov
or
fadd
cmps
mov
imul
xlat
jmp
loopne
cs
mov
mov
out
sbb
stc
loopne
clc
icebp
mov
pusha
outs
in
test
dec
and
hlt
int
aas
add
mov
test
sub
adc
mov
aaa
xchg
jl
jge
(bad)
pop
dec
retf
out
jecxz
cmps
lods
pmuludq
outs
mov
inc
mov
adc
xchg
cmp
mov
dec
fidivr
jmp
inc
xchg
shl
das
sbb
hlt
rcl
xchg
lock
cli
mov
test
add
inc
or
sub
cmp
in
cs
mov
or
jle
rcl
and
add
adc
fcom
and
ins
jo
and
xchg
or
cld
xchg
pop
into
adc
jnp
inc
outs
in
call
jae
push
fdiv
push
mov
mov
xchg
pop
call
jl
dec
cmp
test
sbb
in
(bad)
push
add
loope
ds
pop
push
stos
sub
add
(bad)
pop
jnp
rol
iret
push
(bad)
xchg
stos
test
jb
mov
pop
mov
inc
ds
xor
mov
movs
out
jecxz
push
std
adc
mov
sbb
xor
jl
cli
and
inc
xor
jge
mov
pushf
(bad)
int
jb
dec
vandps
movs
jge
mov
cmp
xchg
mov
push
pop
xchg
xor
push
loope
out
lahf
mov
pop
jl
lods
repnz
inc
into
push
xor
mov
add
xchg
addr16
mov
mov
popa
adc
shl
pop
cmp
hlt
push
cmps
xchg
inc
push
pop
pop
and
or
push
jnp
push
hlt
stc
sbb
or
loop
add
scas
shl
scas
daa
rol
push
aad
stos
mov
mov
pushf
data16
inc
mov
inc
adc
mov
push
les
mov
cld
outs
push
inc
mov
mov
adc
jbe
sbb
ja
ja
retf
and
repz
xor
xor
dec
pop
add
arpl
push
loop
push
pusha
cli
and
repnz
bound
lods
push
call
adc
lock
pop
dec
xchg
jg
outs
stos
cmps
shl
stos
mov
int3
mov
cmp
cmc
ret
mov
mov
add
mov
jle
jecxz
in
add
mov
push
xor
pop
xchg
jl
imul
stc
cmp
mov
pop
mov
mov
inc
js
aam
xchg
loop
test
cmps
arpl
les
or
jno
popa
imul
push
inc
jp
movs
or
pop
xor
(bad)
sbb
cmc
mov
ins
xchg
pop
xchg
std
cdq
add
call
jl
pavgw
mov
jns
loope
or
lea
cdq
mov
js
mov
and
clc
adc
pop
cwde
cmp
inc
ins
inc
jns
pusha
stc
test
or
xchg
pop
repnz
imul
loope
(bad)
popf
shr
or
fs
retf
and
cmp
mov
inc
push
xor
(bad)
fisttp
add
pop
repnz
ffreep
jno
cmp
push
add
(bad)
mov
cmps
mov
out
pop
push
add
jmp
pop
test
rcr
lods
xor
iret
scas
jnp
xor
pop
shl
xor
test
cwde
cmp
and
mov
mov
mov
shl
out
and
std
jmp
or
out
aad
sub
push
movs
xor
add
mov
jmp
lods
mov
or
mov
xlat
es
mov
imul
jecxz
pop
push
(bad)
ss
rcl
shl
and
pop
out
sbb
dec
xor
cmp
and
pushf
ds
jno
cmp
push
mov
test
mov
jbe
pop
jecxz
pop
into
pop
stc
or
lahf
enter
dec
jmp
lods
aam
shl
adc
xchg
xlat
popa
jo
call
add
jnp
jne
or
out
pop
jg
daa
clc
fst
xor
and
daa
ror
pop
mov
mov
mov
adc
imul
addr16
jb
push
shr
dec
(bad)
pop
cmp
inc
out
fisttp
cmp
retf
dec
mov
adc
mov
rcl
pop
les
jae
movs
jle
clc
(bad)
and
xlat
mov
(bad)
jl
lahf
inc
(bad)
dec
arpl
fisub
xor
adc
call
stos
inc
in
dec
mov
hlt
adc
cmp
imul
or
sbb
xor
xchg
mov
push
js
inc
fs
sbb
cld
retf
nop
lods
cmp
iret
rcr
and
iret
add
and
cld
pop
in
shl
push
pop
loop
jp
jmp
dec
dec
xor
cli
jle
ret
rol
xchg
out
lds
xor
mov
mov
push
es
daa
(bad)
mov
dec
lock
pop
push
push
rcl
xchg
jmp
nop
cmps
xor
es
cmp
fadd
in
mov
cmp
int
and
aam
je
jle
es
call
int3
push
mov
mov
popf
pop
adc
call
ss
retf
test
aaa
sub
push
fldenv
or
out
out
out
cmp
mov
jo
outs
fmul
jg
bound
jbe
sub
sbb
xor
xchg
shr
jl
ss
xchg
pop
ja
push
mov
(bad)
sbb
cmps
add
and
cmp
fnsave
test
pop
retf
fiadd
cmc
fistp
xchg
mov
jmp
mov
sbb
jg
push
xor
cwde
or
cmp
and
adc
dec
sub
or
or
shl
sub
xchg
mov
pusha
daa
inc
push
cmp
pop
shl
push
push
inc
fimul
cmovs
lods
inc
retf
xchg
mov
cmp
jge
mov
cmp
xor
push
dec
mov
dec
mov
dec
sub
fwait
imul
mov
pop
fdiv
mov
shl
mov
call
(bad)
or
retf
dec
arpl
mov
fst
and
cmps
xchg
retf
lock
test
push
repz
int3
or
inc
ret
pop
rcr
and
jp
sub
shl
xchg
test
mov
cmp
and
aaa
retf
xor
mov
loopne
mov
xor
jp
lock
gs
iret
adc
imul
sbb
dec
in
mov
mov
push
out
imul
daa
outs
cmp
jne
aas
pop
push
stos
shr
pop
jge
jl
adc
nop
(bad)
fild
and
cmps
sub
stc
outs
scas
dec
fs
pop
xor
pop
mov
sbb
mov
sti
sub
mov
nop
cmp
sbb
xchg
dec
sub
jle
stos
(bad)
mov
mov
(bad)
popf
loopne
adc
sub
clc
fidiv
push
mov
mov
out
jb
mov
adc
lods
gs
mov
pop
add
or
or
in
test
mov
mov
out
inc
and
fst
pusha
xchg
loopne
outs
(bad)
mul
mov
add
retf
mov
xchg
xor
dec
stos
push
jg
jns
adc
fsubr
fimul
or
and
nop
adc
sbb
mov
cmp
xor
cmp
sub
in
push
sub
cmps
xchg
sub
(bad)
fwait
mov
sbb
adc
add
lods
jbe
sub
sti
jb
sbb
or
push
push
(bad)
pop
sub
arpl
shr
aaa
fstp
or
pop
dec
mov
xchg
dec
mov
into
jge
xchg
mov
dec
shl
in
je
mov
or
sahf
mov
call
pop
jno
sub
clc
(bad)
adc
repnz
addps
mov
jp
sub
bnd
pushf
add
and
(bad)
loope
fbld
mov
inc
pop
mov
inc
cwde
sub
mov
out
retf
mov
push
sub
retf
lods
sub
sub
sbb
clc
mov
adc
psubsw
rcl
xor
sbb
pop
or
cmp
mov
sub
jmp
sahf
int3
data16
sti
das
dec
xorps
inc
retf
jo
stos
lods
(bad)
push
add
mov
add
push
scas
pop
push
retf
xchg
icebp
fild
enter
sbb
xor
or
jmp
lock
xchg
out
push
mov
cld
cdq
jle
rol
movs
mov
test
jmp
mov
inc
shr
mov
dec
and
mov
push
shr
shl
push
cmp
fidivr
and
out
lahf
clc
pusha
cmps
xlat
or
cmps
mov
mov
(bad)
push
adc
and
push
retf
cli
jnp
sub
xchg
xor
fwait
pop
and
fs
jecxz
das
fild
mov
call
dec
outs
nop
mov
mov
add
xchg
sbb
lods
loope
fdivr
dec
add
pushf
test
(bad)
cdq
xlat
stos
imul
movs
jne
push
add
push
mov
xchg
neg
ins
jle
mov
or
nop
addr16
inc
inc
inc
or
mov
sbb
jmp
add
cmp
xor
mov
and
mov
jo
out
inc
mov
mov
pop
mov
dec
cmp
pcmpeqb
dec
test
xlat
jo
pusha
call
in
inc
inc
cmp
jp
ficomp
test
aaa
push
sub
push
int
cdq
sub
iret
mov
out
aad
bswap
test
xor
push
push
or
xchg
add
mov
dec
fsubr
inc
mov
dec
mov
xchg
ss
inc
mov
inc
sbb
lahf
mov
fwait
jb
push
test
jmp
test
out
(bad)
fbld
inc
add
sub
adc
sbb
les
add
and
sbb
clc
inc
icebp
or
or
out
and
xor
(bad)
lods
clc
sbb
cmp
dec
pop
mov
ret
or
div
das
add
adc
ret
lock
arpl
pop
xchg
push
ror
addr16
and
xchg
jns
mov
push
dec
sub
dec
inc
pop
push
(bad)
fisttp
mov
adc
fmul
(bad)
out
mov
sbb
pop
jnp
jecxz
lahf
fnstenv
in
pop
or
into
repz
mov
xchg
pop
mov
clc
push
dec
ret
mov
lods
(bad)
push
je
(bad)
add
add
mov
arpl
sbb
push
je
lods
mov
aas
leave
gs
fwait
mov
cmp
sti
out
sbb
xchg
jo
pop
xor
fwait
pop
fs
out
dec
aam
dec
and
add
gs
adc
xor
in
pop
fimul
jno
dec
ins
xchg
fs
scas
and
sar
cwde
mov
dec
loope
mov
bound
js
(bad)
(bad)
cmc
mov
or
popa
retf
or
sbb
cwde
outs
retf
int3
sbb
inc
dec
pop
sub
ja
imul
sbb
sbb
dec
cli
fst
sub
and
test
pop
ror
dec
mov
xlat
cmps
push
stos
inc
(bad)
sar
test
mov
lea
mov
xchg
jp
gs
inc
scas
nop
cmp
cmc
push
lahf
movs
mov
cdq
icebp
push
xchg
mov
mov
cmp
into
out
push
sti
dec
mov
ds
cs
sbb
imul
cmc
fcomi
lock
lar
imul
dec
fiadd
xchg
and
adc
das
cmp
data16
or
push
or
jmp
jecxz
retf
mov
ss
pop
sbb
out
loope
xor
inc
add
pop
push
je
shl
cmps
inc
sbb
jnp
imul
sub
mov
hlt
sbb
nop
in
lods
and
bound
xchg
xchg
xor
imul
ss
fwait
data16
scas
mov
int3
cmp
ret
sub
in
add
add
std
int
jo
sub
int3
push
inc
dec
sub
pop
adc
or
inc
sbb
xchg
pop
xchg
mov
call
cmp
sbb
test
imul
jge
(bad)
loopne
(bad)
push
jg
les
adc
cmp
mov
mov
xchg
mov
fistp
adc
mov
aad
imul
inc
fdiv
outs
sub
fsubr
das
mov
bound
in
adc
pop
or
push
push
xchg
and
mov
iret
jno
mov
inc
xlat
lock
dec
out
arpl
adc
sbb
push
dec
jecxz
mov
pop
push
sub
and
in
adc
ret
(bad)
loop
loopne
mov
sub
out
push
arpl
mov
pop
out
out
pop
add
in
and
xor
mov
call
inc
hlt
push
ss
scas
xor
xadd
inc
mov
xor
add
dec
ins
out
push
jns
cmc
and
or
xlat
sbb
sbb
mov
sub
or
clc
movs
sbb
stc
leave
fdivr
test
es
test
ins
push
mov
cmp
imul
popa
lahf
out
adc
fcomp
aaa
movs
or
je
scas
or
cmps
inc
jbe
pop
repz
inc
mov
cld
lock
sbb
hlt
cli
xchg
xchg
sbb
adc
sbb
call
nop
jge
arpl
aas
iret
lahf
mov
push
inc
or
aam
nop
cmps
aaa
ins
ins
ret
shr
push
xchg
in
mov
shl
lea
imul
jl
mov
fisttp
std
aas
inc
es
out
dec
cli
pop
aas
adc
fisttp
cmps
inc
mov
mov
imul
inc
dec
adc
mov
dec
push
inc
inc
popf
jo
jge
scas
cwde
out
pusha
pop
pop
inc
sbb
jmp
push
or
mov
gs
inc
cmp
dec
mov
mov
fild
or
dec
jl
ins
xchg
push
mov
in
shl
add
xchg
mov
mov
xor
jmp
lods
sub
adc
xchg
fidiv
push
dec
push
cmps
and
lock
outs
mov
xchg
push
jne
enter
xor
jbe
arpl
jge
push
out
xchg
cmp
gs
mov
push
ds
das
inc
xor
jecxz
jecxz
and
dec
hlt
pop
out
imul
jp
repnz
fist
daa
dec
test
setg
jno
js
sub
dec
dec
inc
(bad)
addr16
dec
mov
adc
inc
dec
dec
iret
xor
retf
cmps
test
cmp
nop
xchg
out
inc
pop
push
sbb
xor
mov
push
inc
sbb
jne
or
and
out
test
sub
jb
sbb
pop
fwait
addr16
cmp
inc
inc
push
ds
jle
fldenv
ins
inc
jp
fldcw
jno
xor
cs
lahf
lds
ins
and
je
mov
shl
inc
xor
jmp
and
daa
int3
mov
cs
pop
cwde
cmp
std
xchg
pop
xor
test
inc
(bad)
int3
pop
scas
ins
icebp
popa
je
pop
dec
call
cmc
arpl
and
push
jo
stos
sub
cmps
inc
in
inc
out
push
shl
(bad)
adc
rcl
dec
aad
f2xm1
sti
movzx
bound
jbe
daa
outs
inc
popf
pop
inc
or
cwde
mov
xchg
mov
push
retf
inc
shl
lods
mov
pop
or
aad
sbb
xchg
push
or
mov
jb
jb
fsubr
mov
or
cmc
mov
int
das
in
ror
cwde
stos
mov
(bad)
or
jmp
loopne
dec
add
(bad)
bound
ret
repnz
call
je
mov
mov
xchg
clc
jmp
jmp
stc
sar
push
xor
sub
arpl
push
or
xchg
xchg
inc
inc
mov
mov
ss
mov
and
pop
sbb
(bad)
std
add
(bad)
xor
jo
je
jae
mov
push
call
stos
sub
cmp
dec
aas
mov
push
(bad)
adc
xchg
loopne
(bad)
or
dec
mov
gs
jns
or
inc
lahf
out
loope
inc
sbb
mov
fsubr
mov
imul
pop
xchg
adc
jp
mov
dec
xor
pop
push
mov
xor
mov
mov
lea
inc
dec
sub
in
(bad)
jne
xchg
(bad)
shl
xchg
cmp
jb
dec
jp
into
cmp
fnstsw
xchg
lock
ror
inc
jno
dec
test
push
inc
outs
outs
lds
sbb
mov
mov
ret
xchg
dec
es
imul
xchg
test
mov
jmp
ds
lahf
sti
lock
outs
mov
jle
ret
cmc
dec
cld
cwde
fs
pop
imul
cdq
pusha
or
cmp
pop
push
sbb
jp
xlat
xor
fwait
jp
imul
xchg
jne
jbe
inc
data16
jns
mov
or
xchg
mov
push
into
seta
fmul
(bad)
ds
pavgb
mov
or
jmp
cs
gs
aaa
pushf
cmps
ret
les
push
lea
or
mov
loopne
add
outs
sbb
jle
ret
lea
jmp
mov
xor
cmp
dec
in
ins
js
(bad)
or
xchg
(bad)
inc
aad
jns
xor
jns
aaa
cli
cmp
imul
in
mov
mov
sbb
fdiv
push
adc
jl
pop
dec
sub
outs
or
inc
fmul
outs
fwait
mov
xchg
ret
(bad)
ds
cli
mov
mov
push
mov
lock
jmp
(bad)
sahf
fcomp
jb
and
stc
in
cmps
aas
mov
pop
lods
inc
xchg
bound
leave
inc
ss
or
cmps
dec
call
enter
jno
inc
sbb
in
dec
outs
(bad)
daa
push
ror
cmp
xor
add
in
push
adc
enter
fistp
stos
or
sahf
mov
movs
push
(bad)
add
repnz
inc
repz
mov
dec
daa
fldcw
sbb
fsubr
and
call
into
inc
mov
xchg
sbb
push
aad
mov
outs
aad
sub
nop
mov
out
in
pushf
fldcw
mov
cwde
fidivr
shl
neg
fimul
mov
aam
bound
pop
mov
retf
(bad)
cmps
jne
push
sbb
out
movs
push
add
add
cmp
pop
inc
ins
das
dec
stos
mov
add
(bad)
jbe
sbb
xchg
ret
sar
lds
clc
adc
cs
xchg
test
rcl
jle
lea
out
push
or
aaa
repz
cs
mov
push
repz
jnp
mov
adc
dec
push
pop
popa
iret
fist
dec
mov
ror
xor
adc
cmp
pusha
addr16
loopne
xchg
cmp
sbb
fstp
lahf
jp
sub
cmps
push
rep
xchg
mov
and
mov
dec
adc
add
fs
jecxz
inc
(bad)
jl
mov
test
lods
adc
test
xor
jg
test
(bad)
push
cmp
fcomip
(bad)
icebp
repz
mov
shl
inc
cli
mov
in
es
outs
jne
add
pushf
repz
push
out
jmp
or
mov
loopne
pop
cld
mov
adc
sub
pop
cmp
leave
jb
dec
jno
aad
mov
sahf
mov
inc
xchg
addr16
aad
leave
les
add
inc
jb
ss
popa
lods
sbb
jae
inc
mov
add
mov
test
cld
mov
jp
sbb
push
inc
cmp
or
push
aas
xchg
jns
out
data16
mov
popa
ja
loop
mov
repz
fwait
cmp
cmp
push
jne
fwait
icebp
adc
dec
xchg
xor
dec
pop
adc
mov
xchg
inc
fisubr
inc
dec
movs
jo
add
xchg
inc
xor
call
push
ins
outs
add
push
pop
jmp
call
pop
cmp
push
push
bound
mov
stos
jnp
sbb
lahf
sbb
aam
mul
iret
test
xchg
retf
mov
sub
ss
cmp
in
dec
test
mov
jecxz
mov
add
sub
ins
xor
xor
add
int
das
sti
hlt
mov
out
sub
sbb
scas
pop
push
inc
stc
pop
cli
dec
js
pop
jb
imul
shl
mov
dec
xor
std
inc
imul
add
adc
adc
xchg
mov
inc
mov
cmp
dec
aaa
rcr
or
lahf
adc
xchg
jne
and
popf
js
out
xor
adc
jl
shl
pop
inc
nop
movs
sub
adc
mov
and
fnsave
aad
or
push
adc
push
(bad)
pop
cmp
mov
js
add
ins
add
cli
arpl
mov
push
fldcw
ss
inc
jae
and
mov
outs
pop
inc
and
test
hlt
pop
xlat
imul
adc
sbb
xor
in
xchg
push
aas
movs
fstp
pop
push
mov
or
dec
hlt
cwde
clc
pop
push
add
bound
mov
fidiv
ja
jl
push
mov
xor
pop
imul
pop
adc
cmp
inc
push
push
pop
stc
adc
int3
retf
ret
xor
dec
xchg
not
or
adc
(bad)
(bad)
pop
lahf
jmp
lock
sub
aad
mov
popf
jmp
out
ins
dec
js
mov
jae
ret
xor
scas
mov
fs
popf
cs
fwait
in
push
or
jmp
and
lods
push
add
xchg
ja
xchg
dec
(bad)
mov
mov
mov
inc
popa
add
nop
es
adc
mov
dec
sar
clc
fcmovu
sbb
xor
jmp
mov
jbe
pusha
jmp
mov
stos
jle
das
je
aam
jno
dec
addr16
arpl
add
or
mov
in
aas
sbb
loope
sub
push
push
daa
popf
(bad)
pop
movs
push
push
push
gs
xchg
jmp
lods
mov
jecxz
and
out
sub
aad
enter
lea
cdq
inc
ja
push
loop
pop
jge
movs
pop
loop
xchg
scas
pusha
adc
jmp
mov
(bad)
daa
jns
fst
cwde
add
movsx
add
sbb
jge
cmp
pop
add
popa
mov
(bad)
cmpxchg8b
inc
retf
cs
std
xchg
xchg
mov
push
push
ror
xor
xor
les
js
sbb
inc
push
hlt
xchg
push
cmp
mov
fst
pop
ffree
xchg
xchg
cli
rcl
xchg
fild
ss
cs
fidiv
inc
adc
push
sbb
adc
fsubr
pop
push
or
sub
mov
mov
mov
fsubp
mov
mov
mov
ret
or
and
pop
aas
mov
mov
loopne
adc
or
cmp
xor
push
cld
fcom
inc
pop
add
out
sub
xchg
cld
mov
lods
xchg
xor
mov
and
addr16
ja
ret
call
clc
push
dec
addr16
or
shl
jae
test
pop
xchg
jbe
adc
mov
mov
imul
mov
fsubr
inc
rcl
mov
add
pop
imul
test
mov
xchg
pop
mov
imul
popf
repnz
adc
jb
xchg
test
mov
ror
fldcw
std
cdq
lea
and
push
pop
in
cdq
and
pop
mov
sahf
cmps
push
pop
je
mov
dec
xchg
(bad)
mov
call
mov
shl
ret
add
xchg
lds
jmp
int
in
mov
pop
fiadd
mov
out
lds
mov
or
loopne
icebp
out
push
repnz
pop
adc
push
adc
int3
faddp
scas
loop
xchg
and
or
push
aad
sub
cmp
pop
and
(bad)
fldenv
lods
dec
repnz
cs
jae
shl
mov
fild
mov
xchg
pop
in
popa
jae
lock
inc
lahf
retf
mov
js
push
mov
ja
loopne
push
int3
cmp
and
shr
pop
xor
bound
add
std
dec
lods
movs
jb
mov
push
dec
jae
jle
adc
add
leave
mov
nop
out
jp
(bad)
repnz
mov
test
pop
or
fsubp
and
cmp
inc
retf
popf
sbb
aad
xor
enter
outs
(bad)
pop
fidivr
outs
je
movs
popf
inc
xor
shl
gs
add
add
push
out
js
jbe
pop
mov
sub
push
jl
test
out
pop
jae
shr
xchg
mov
dec
sbb
push
fstp
dec
pop
daa
es
shl
fmul
fidiv
pop
shl
scas
out
imul
je
xor
and
xor
inc
lods
stos
add
mov
sahf
(bad)
xchg
or
xor
sbb
mov
jae
fbld
call
jecxz
in
jno
mov
sti
cmp
loope
lahf
mov
sub
jbe
pop
mov
jmp
and
cld
pop
aas
mov
mov
(bad)
cdq
js
mov
imul
xor
pop
sub
jp
hlt
in
xchg
test
inc
out
mov
mov
scas
xchg
lds
mov
sbb
cmp
pop
(bad)
in
dec
stc
lahf
call
sahf
out
fiadd
mov
(bad)
cmp
adc
sbb
iret
push
retf
mov
sar
push
and
push
popa
push
bnd
ins
data16
fisttp
mov
pop
mov
stos
dec
(bad)
jmp
out
(bad)
in
addr16
mov
icebp
pop
(bad)
cmc
ins
jne
xchg
ror
pushf
xor
pop
aas
imul
scas
cdq
lods
out
icebp
fwait
cmps
movs
nop
ins
les
push
sub
sub
sti
nop
push
push
cmp
add
or
out
adc
push
cmc
mov
and
std
pop
adc
push
(bad)
sub
dec
repnz
lock
xor
pop
or
(bad)
imul
lahf
shl
popf
fcos
cmp
mov
or
idiv
mov
das
xchg
mov
cmp
cmc
jle
(bad)
cdq
(bad)
fld
sbb
test
(bad)
sbb
and
js
jge
cmps
ds
aas
int
mov
mov
sbb
mov
loop
leave
fucomi
xor
mov
cwde
test
pop
repz
icebp
imul
test
stos
jb
jno
aad
(bad)
inc
pushf
arpl
mov
push
loopne
adc
dec
sti
mov
jb
out
push
hlt
dec
cmp
sub
mov
cld
jb
rol
ja
test
neg
xor
xor
(bad)
frstor
and
xchg
dec
mov
stc
fs
leave
push
or
and
icebp
sub
(bad)
jnp
rcl
das
mov
fwait
add
xor
sub
shl
dec
out
jmp
dec
inc
scas
dec
ins
cmp
add
or
leave
out
dec
pop
jmp
data16
add
repz
inc
sub
ins
ja
gs
jae
fs
pop
test
jle
sbb
inc
jg
nop
pushf
lea
mov
ja
cwde
xchg
jp
lea
jae
xor
dec
mov
fcomp
and
xlat
movs
(bad)
mov
dec
std
(bad)
sub
pop
popf
mov
int3
cli
mov
retf
shl
mov
adc
scas
test
xchg
mov
aam
dec
jmp
jle
ins
mov
bound
mov
pop
ficomp
int3
movs
and
jo
in
add
in
mov
mov
and
cmp
sar
inc
cmp
cmp
sti
jns
dec
jno
cmp
fisttp
inc
(bad)
inc
inc
xchg
jmp
inc
add
fcom
call
jbe
fldlg2
and
out
lds
sbb
call
jnp
cli
mov
push
mov
and
jne
mov
aam
add
mov
inc
in
int
shl
mov
dec
loope
jle
and
mov
test
call
ins
mov
sub
inc
sbb
fwait
sti
stos
outs
inc
ds
cwde
mov
fist
ss
(bad)
cdq
jns
push
movs
cli
enter
je
jge
cdq
loopne
add
mov
jmp
test
lods
fcmovnbe
xor
out
sbb
add
jnp
cmc
lods
stos
rcr
cmovbe
retf
test
jecxz
pop
mov
push
movs
or
mov
fwait
pop
cmp
mov
dec
mov
add
out
xchg
jmp
or
adc
mov
jns
push
rcr
pop
xchg
mov
ficom
stos
inc
jno
sub
and
scas
cmp
sub
mov
jbe
and
dec
inc
mov
dec
mov
mov
mov
push
mov
cmp
mov
xor
scas
clc
sar
rcl
push
mov
mov
mov
pop
ins
dec
lods
and
jmp
js
inc
jbe
(bad)
(bad)
xchg
call
retf
mov
fmul
jp
nop
inc
xchg
dec
cdq
ins
ins
mov
push
out
lock
sbb
push
jl
ds
leave
popa
jmp
outs
xchg
mov
(bad)
xchg
lahf
pop
stos
cwde
lock
jmp
js
sub
iret
mov
dec
repz
rol
data16
mov
jb
out
dec
aas
into
fiadd
jne
xor
xchg
jle
mov
data16
inc
cdq
mov
in
and
inc
mov
dec
xor
dec
mov
ret
aas
fidivr
xor
push
les
jmp
int
jo
ds
pop
popa
jo
push
mov
leave
(bad)
jns
jecxz
adc
xor
cmp
mov
cli
lock
cmp
jnp
scas
cmp
fsubr
retf
stos
sub
add
fidivr
clc
inc
or
hlt
push
dec
js
or
(bad)
push
cs
es
aam
or
retf
test
push
shr
iret
jnp
(bad)
repz
mov
or
jne
cmc
shl
cs
lea
mov
push
inc
cmps
pop
inc
retf
mov
in
xchg
in
in
(bad)
add
mov
je
pop
out
mov
aam
sub
jg
pop
xor
out
js
add
or
test
addr16
xchg
add
mov
mov
sbb
or
dec
outs
ror
inc
push
or
mov
fmul
cmp
xchg
inc
mov
enter
jl
bound
cmc
add
mov
aad
sub
aas
pop
jg
xchg
xchg
adc
push
int
loopne
enter
ins
test
dec
cmps
fwait
les
adc
cdq
xor
(bad)
je
out
or
cmp
mov
adc
retf
lods
dec
dec
push
bound
or
pop
mov
dec
out
xor
retf
sti
retf
adc
sar
retf
jp
push
shl
call
push
data16
retf
xor
aad
fstp
sbb
push
mov
rcr
push
mov
inc
mov
movs
fstp
pusha
scas
jle
mov
fbld
jns
jge
sar
lds
dec
adc
adc
or
je
xchg
dec
les
mov
jmp
cmp
pop
dec
or
fstp
add
adc
mov
sub
out
push
push
push
sbb
jle
pop
movs
dec
jecxz
mov
mov
sbb
pop
mov
rcr
inc
popf
push
xor
ss
int
loop
mov
xor
add
and
add
retf
inc
sbb
cdq
lfs
aas
clc
cmps
add
sti
xor
in
dec
or
stos
repnz
push
cmps
cs
enter
inc
sub
jb
enter
jecxz
movs
jo
pop
pop
xchg
mov
mov
lods
pop
fwait
jno
ins
cmp
xor
ror
sahf
inc
add
stos
neg
push
dec
stos
jb
push
repz
js
fcomp
ret
je
push
and
fcomip
js
aad
fst
and
mov
cmp
movs
add
cdq
out
jecxz
push
mov
cmp
fwait
outs
pop
sbb
test
inc
call
ins
mov
jl
stos
lods
movs
out
ins
mov
imul
fsubr
out
xchg
mov
mov
retf
lea
jl
stos
test
fadd
pop
adc
repz
popf
xchg
xchg
cmp
aaa
mov
mov
inc
and
sbb
adc
push
dec
push
lods
clc
test
xchg
lock
enter
test
sbb
jns
retf
shr
fsubr
sub
xchg
cmp
add
stc
sbb
xchg
xchg
outs
push
sub
cmps
xchg
add
mov
imul
js
js
dec
or
xor
inc
jae
fsub
sbb
adc
gs
jb
cmp
mov
pop
mov
int
cli
scas
js
mov
or
sub
ss
es
pop
mov
repz
call
push
outs
test
in
mov
in
jne
stc
call
std
lds
pusha
cld
lea
xor
xchg
mul
pop
test
test
mov
lods
cmps
pop
pop
jnp
ror
mov
add
pop
mov
repnz
pop
pop
or
hlt
cs
daa
jno
test
add
imul
call
(bad)
addr16
sub
gs
pop
jecxz
cwde
adc
(bad)
lahf
test
xchg
shr
sbb
mov
push
call
add
mov
mov
scas
dec
out
jno
bound
jne
mov
sbb
(bad)
xor
and
dec
aam
jl
cmp
sbb
xchg
pushf
and
jl
pop
dec
scas
mov
test
mov
jo
xchg
adc
jmp
test
mov
pushf
or
ja
push
cdq
mov
sbb
jg
imul
ins
(bad)
jecxz
clc
and
movs
bound
call
clc
add
popa
cmp
dec
inc
repnz
sub
push
icebp
pop
adc
push
dec
das
cmc
std
cmps
fdiv
sub
sbb
sbb
cli
dec
cmp
nop
test
sbb
adc
mov
xor
lock
cli
xchg
adc
xchg
clc
push
inc
adc
xchg
mov
mov
adc
in
jbe
mov
xchg
mov
xchg
inc
pop
inc
mov
cwde
pop
lea
inc
jno
mov
jo
sub
and
mov
scas
sbb
ret
sbb
cmc
and
mov
retf
ins
jmp
lods
mov
or
ret
push
bound
mov
lods
push
jne
call
push
test
ins
add
lock
dec
sub
sub
out
sti
sub
jl
out
fs
outs
mov
cld
daa
and
test
in
out
(bad)
dec
rcl
lea
inc
div
shl
lods
in
das
dec
retf
dec
popa
jbe
test
mov
gs
jb
mov
xchg
cmp
mov
xor
out
sbb
icebp
inc
cmp
daa
jp
pop
sbb
test
mov
mov
popa
movs
ret
xor
dec
sub
mov
pop
or
call
dec
jns
xchg
in
mov
or
pop
shr
into
xor
test
(bad)
mov
adc
sub
xchg
jge
hlt
jne
cmp
aam
das
pop
sti
lods
std
mov
hlt
fadd
adc
arpl
gs
fwait
and
pop
inc
sub
mov
sbb
mov
daa
scas
je
mov
xor
aad
in
shr
psubw
int
mov
sub
xor
xor
pop
cmp
movs
inc
test
cmp
dec
rol
pop
std
mov
daa
and
imul
addr16
sub
xchg
outs
and
sti
pop
sar
cmp
adc
adc
push
inc
mov
or
adc
and
push
scas
pop
cdq
fsub
sub
leave
je
xlat
mov
or
push
test
frstpm(287
jecxz
xchg
dec
mov
xchg
lods
xor
dec
jecxz
mov
mov
inc
fdiv
or
aaa
or
gs
or
xchg
(bad)
enter
stc
retf
jmp
cld
adc
jge
pusha
xlat
cmp
ror
cmps
dec
sub
mov
scas
pushf
dec
daa
fistp
call
aaa
movs
fnsave
pop
leave
dec
inc
cmp
(bad)
cmp
push
mov
mov
mov
and
fcom
or
inc
cli
sbb
sub
sub
in
cmp
loop
mov
dec
push
fimul
adc
popa
test
sub
hlt
jg
daa
sbb
leave
xchg
xor
mov
shr
mov
lea
cdq
mov
adc
loopne
outs
lea
add
add
xchg
mov
enter
data16
(bad)
adc
scas
adc
shr
fiadd
inc
lds
mov
xor
dec
lea
outs
mov
dec
mov
jns
stos
mov
and
out
(bad)
aam
add
jnp
push
push
retf
fld
jb
and
xor
xor
fwait
dec
mov
out
xchg
test
out
aaa
xlat
pushf
and
and
mov
sbb
push
xchg
mov
data16
je
ja
or
popa
nop
cmp
retf
push
cdq
xor
jle
dec
mov
jl
fist
movs
leave
dec
ret
fdiv
cmp
ins
mov
cmp
xor
push
jbe
adc
shl
mov
adc
adc
outs
jmp
retf
icebp
test
mov
fstp
mov
pop
jecxz
pop
or
add
add
mov
add
cli
sub
pop
mov
and
out
adc
xchg
call
inc
scas
and
out
dec
push
xor
push
inc
jecxz
xor
and
mov
jbe
or
mov
jne
mov
dec
test
push
pop
xor
popa
daa
dec
xchg
ja
imul
jl
mov
jl
jnp
sbb
push
xchg
lahf
call
retf
cli
sbb
mov
stos
loop
xchg
or
imul
xchg
jnp
bound
lea
out
push
push
fisttp
pop
dec
xor
xor
icebp
mov
sub
leave
rcl
mov
int3
inc
lds
enter
mov
push
inc
adc
mov
in
xchg
mov
fidivr
imul
stos
push
fmul
xchg
jmp
push
pop
aas
retf
jle
idiv
pop
(bad)
dec
mov
sub
push
mov
cld
xchg
mov
leave
dec
aam
loop
lea
xchg
repnz
outs
fucom
enter
and
imul
pop
cmp
nop
(bad)
pop
add
pop
push
ja
pop
and
fcom
out
jecxz
int
ins
rdtsc
push
pop
xlat
fist
dec
adc
lock
pushf
dec
cmp
cmp
jo
pop
fisub
scas
aaa
add
mov
repz
(bad)
mov
lahf
fistp
xchg
pop
into
mov
ins
fisttp
lahf
movs
adc
mov
out
jge
rol
or
mov
inc
adc
cli
mov
test
mov
les
xchg
call
cmps
into
int
jge
dec
xlat
jmp
movs
push
je
adc
in
and
mov
inc
div
adc
out
xchg
cmps
lea
js
push
add
iret
adc
mov
inc
test
out
stos
dec
dec
jmp
test
jo
fidiv
xor
lahf
inc
push
sub
mov
and
xchg
lock
movs
mov
ds
test
in
dec
and
mov
mov
aam
mov
pop
js
xchg
mov
mov
push
sub
shl
inc
frstor
aam
jmp
pushw
jg
dec
adc
in
or
sbb
aad
rcr
jg
fs
push
retf
sub
retf
ss
sbb
dec
mov
push
cmp
ins
sbb
sub
inc
and
adc
stc
xchg
in
cdq
xchg
out
nop
fimul
popa
push
and
cmps
mov
retf
jne
adc
xchg
push
imul
rol
or
test
pop
mov
mov
pop
dec
pusha
mov
xchg
jae
call
dec
loopne
pushf
cmp
cmps
cwde
xchg
ficom
xor
ja
out
loopne
mov
popf
or
add
mov
pop
or
jo
jns
jno
inc
cmp
xor
mov
or
call
sahf
push
stc
idiv
mov
and
mov
xchg
outs
bound
mov
je
cmp
daa
jg
in
enter
inc
jl
mov
sub
cmp
xor
jle
jo
mov
lds
mov
add
aas
push
std
dec
fs
fidivr
fdiv
les
daa
lahf
bnd
jmp
xchg
jnp
and
push
loopne
push
movs
or
pushf
jmp
ins
sub
ds
out
sub
fldcw
push
mov
stos
js
mov
daa
clc
ins
pop
dec
push
xor
iret
mov
add
movs
mov
bnd
outs
fmul
or
mov
popa
mov
ds
icebp
pop
in
fstp
sbb
adc
cld
xor
sbb
push
push
adc
and
es
cwde
inc
jne
les
cmp
pop
jne
dec
or
shr
and
in
cmp
outs
dec
mov
ds
ja
vpunpckldq
or
cmps
push
icebp
les
call
loop
push
jecxz
(bad)
call
sbb
lds
(bad)
cmp
fcmovnbe
scas
jecxz
mov
push
icebp
(bad)
mov
add
arpl
jne
mov
xchg
neg
sub
inc
imul
jle
inc
iret
jp
repnz
(bad)
cmp
std
scas
sbb
mov
enter
cmp
jg
xchg
movs
and
xor
nop
push
retf
xor
iret
loope
lods
pop
sahf
adc
js
popf
stos
loopne
jbe
es
addr16
movs
adc
neg
sbb
add
pop
ins
dec
inc
jge
mov
inc
mov
test
out
adc
or
dec
push
leave
int3
mov
popf
adc
inc
mov
lods
sbb
loop
out
test
rcr
arpl
adc
scas
je
xor
imul
leave
jns
lods
fwait
jle
shr
add
push
fstp
inc
fs
sbb
gs
gs
jmp
jae
pop
out
call
cmp
aad
and
(bad)
push
pop
mov
dec
arpl
cmp
pop
cmp
lea
int
pop
or
es
lds
int3
xlat
adc
mov
jge
inc
nop
in
and
leave
in
push
lock
mov
xor
(bad)
scas
mov
out
fadd
call
inc
mov
loop
mov
mov
imul
bound
test
mov
add
rol
fild
jge
cmp
inc
or
adc
arpl
adc
adc
js
sbb
push
jge
mov
test
adc
xor
call
ins
adc
das
out
jb
inc
fsubp
pop
push
sub
push
dec
inc
adc
push
mov
idiv
retf
or
(bad)
adc
lods
aaa
xor
dec
xor
fisubr
rol
add
repz
divps
test
dec
hlt
inc
sub
inc
stos
sbb
call
inc
out
pop
mov
add
stc
or
mov
(bad)
imul
xlat
loope
jmp
mov
pop
jecxz
xor
js
(bad)
mov
enter
aaa
in
loop
or
into
int
ret
or
mov
inc
out
iret
das
add
and
packuswb
and
push
mov
fiadd
xchg
outs
mov
xor
repz
sub
sahf
or
inc
aad
call
push
mov
aaa
fnstenv
loopne
dec
int3
repnz
jmp
lea
lods
btc
mov
xlat
mov
cmps
jae
add
pop
push
mov
imul
xchg
pop
rsm
mov
pushf
add
sub
mov
fs
test
sub
add
push
shl
cmp
popa
(bad)
mov
jecxz
ja
cmp
in
cmp
cmps
mov
call
call
mov
fs
lds
xchg
adc
mov
push
xor
mov
dec
xor
(bad)
lods
call
lods
fadd
inc
and
out
std
sub
test
dec
sbb
jne
inc
add
pop
jbe
mov
xchg
sbb
mov
cmc
jb
xor
sub
cmp
fisub
fimul
pop
xor
cs
cmps
or
iret
xor
imul
mov
cdq
jbe
and
push
and
pop
mov
out
fisttp
data16
mov
les
jno
push
in
ficom
xchg
jmp
add
sub
xchg
adc
leave
cld
mov
nop
push
jge
ins
enter
ret
pusha
popa
popf
jmp
and
(bad)
push
test
and
ret
add
and
mov
scas
cmps
xchg
inc
mov
sbb
push
inc
sahf
data16
cdq
mov
sahf
stos
or
daa
mov
mov
dec
jecxz
jmp
jge
fstp
adc
inc
or
ret
jbe
mov
jp
sbb
push
fst
popfw
data16
mov
cs
in
dec
add
jl
mov
sbb
inc
repz
mov
in
ins
sbb
sub
xchg
xchg
inc
cmp
jl
jle
cmps
xchg
or
pop
xor
ds
pop
add
ins
inc
cmps
xor
out
ds
xchg
mov
je
ins
shr
xchg
in
lods
outs
jp
in
cmp
inc
adc
mov
dec
mov
fisubr
dec
outs
fwait
xchg
jl
jg
add
mov
jno
sbb
movs
ja
cwde
inc
mov
cld
inc
retf
imul
fwait
xlat
sbb
loopne
popf
fild
lods
ret
push
les
cmp
cmp
aaa
xchg
bound
xor
and
cs
mov
daa
or
push
push
ja
add
aad
mov
or
sbb
inc
std
aad
sub
in
push
rcl
push
in
mov
mov
or
(bad)
add
and
(bad)
mov
mov
add
push
sbb
mov
out
aam
rol
jle
and
cs
and
or
in
pop
rcl
scas
aad
or
pop
add
and
mov
fsubp
dec
jns
in
stos
mov
leave
iret
dec
add
dec
xlat
push
(bad)
mov
popf
sub
cmps
out
neg
(bad)
lock
in
dec
scas
mov
dec
sbb
loop
cmp
out
push
sbb
and
fstp
jmp
jno
aad
(bad)
jmp
pop
not
pop
cmp
lods
hlt
mov
fild
jo
pop
mov
bound
scas
mov
loop
cmp
xchg
or
std
pop
arpl
(bad)
test
push
loop
es
mov
(bad)
stos
or
dec
in
xchg
ins
mov
cmp
sub
es
sub
xor
cmp
xchg
mov
pop
movs
jl
mov
jmp
ficomp
inc
out
add
sbb
iret
push
bnd
jmp
dec
and
jne
out
les
std
std
adc
in
(bad)
imul
movs
xor
movs
(bad)
not
adc
pushf
call
inc
xor
cmps
inc
movd
cmp
inc
int
jnp
fsub
jmp
int3
lahf
out
add
push
in
cmp
dec
mov
lods
ret
lds
shr
sti
packuswb
and
sti
repz
nop
mov
icebp
mov
ret
cmps
mov
stos
stos
or
mov
push
inc
repz
dec
dec
ficomp
lods
test
loop
add
stos
inc
pop
ret
fdiv
test
in
ds
jne
jbe
mov
mov
pop
add
gs
inc
or
xchg
mov
loop
fdiv
pop
xor
xor
mov
mov
add
add
mov
jns
sub
in
out
loope
das
out
test
adc
sbb
xchg
repz
sbb
push
ins
stos
ins
(bad)
ds
test
add
xlat
dec
push
nop
sub
sub
lahf
and
pop
jmp
mov
outs
aaa
mov
sbb
push
stos
ret
js
and
das
xor
jmp
sbb
fmul
pop
outs
xchg
mov
std
mov
scas
dec
mov
lods
mov
push
mov
dec
(bad)
xor
push
push
jbe
mov
jle
jmp
test
ja
fimul
adc
push
jno
pop
xor
int
xor
loop
jge
jnp
ret
test
mov
out
cli
pop
cmp
lea
stos
aaa
out
pop
or
push
out
ins
rcl
push
dec
add
repz
pop
or
cdq
retf
cmp
fist
add
cvtps2pi
cmc
mov
jne
fs
popf
cli
mov
jmp
inc
in
ja
test
icebp
add
lock
and
push
je
ja
icebp
call
out
add
add
(bad)
in
dec
pop
js
mov
fistp
jo
adc
mov
loop
pextrw
mov
push
ins
scas
test
add
adc
dec
neg
bound
jmp
cmp
lds
add
push
push
or
cwde
xor
mov
pushf
cs
loope
lds
test
mov
cmps
ss
out
lods
jmp
js
push
(bad)
sbb
retf
mov
pop
jb
mov
div
dec
sbb
shr
into
mov
xor
xor
pop
les
cmp
push
imul
sub
mov
mul
jmp
lods
(bad)
int
fild
addr16
fmul
test
iret
aas
arpl
aam
fild
bound
test
mov
pop
xchg
or
(bad)
sti
ret
push
add
dec
loop
jne
(bad)
fcomp
cs
jo
add
pop
nop
call
aas
cli
adc
pop
jle
mov
cld
jge
pop
leave
ror
and
xor
inc
sub
jns
sbb
je
fucom
mov
call
or
icebp
rcr
lods
xchg
push
das
cs
popf
adc
xlat
out
fdivr
pop
adc
test
or
lea
or
jle
xchg
push
mov
ins
jp
pop
out
add
jmp
aas
test
aas
ss
stc
adc
ds
inc
test
repnz
sar
pop
add
push
sbb
rol
xchg
mov
aas
mov
sbb
dec
cmp
cmps
in
xchg
inc
cs
push
scas
ror
dec
fwait
xchg
adc
in
sti
out
jle
xchg
imul
in
sbb
push
gs
hlt
or
cmp
add
rcr
jae
int
inc
push
out
cmc
gs
ins
gs
sub
shl
outs
cmps
pushf
aam
cmp
fsubr
push
or
cmp
les
addr16
mov
into
xlat
push
ds
stc
popf
and
jge
adc
(bad)
pop
dec
loope
js
sbb
mov
mov
jmp
leave
jle
push
and
lods
jl
inc
add
out
sbb
movs
jmp
sbb
inc
ret
dec
ss
call
out
sbb
mov
sub
cmc
ret
mov
cdq
fiadd
inc
jae
in
add
push
mov
or
add
icebp
test
push
out
mov
arpl
call
ret
jne
stos
(bad)
or
lods
push
movs
dec
cld
addr16
jl
popa
pop
pop
jp
mov
out
xor
loop
add
xchg
in
push
int
addr16
mov
cli
jg
stos
add
jge
mov
rcl
icebp
xchg
push
jne
mov
icebp
mov
jo
ret
mov
push
popf
mov
aas
xor
jne
mov
call
das
mov
shr
mov
rcl
sbb
push
cmc
dec
stc
int3
aaa
adc
outs
fs
mov
xor
loope
imul
repnz
outs
or
jecxz
adc
(bad)
es
jl
leave
ja
pop
push
fs
adc
ss
or
loopne
icebp
pushf
or
aas
call
xor
inc
lea
jne
xchg
or
sub
sub
loopne
sub
jae
cwde
int3
jp
inc
fwait
sub
lods
rcr
pushf
std
jmp
sub
std
xchg
dec
xchg
ret
out
aam
scas
add
mov
ja
mov
shr
nop
dec
scas
push
mov
fs
xor
add
les
add
data16
mov
pop
call
jecxz
dec
dec
sub
xor
cmp
push
push
push
adc
lahf
or
adc
test
add
jb
pop
mov
dec
mov
sbb
and
jl
lods
xchg
sub
mov
cmps
neg
sub
jbe
jp
fild
stos
dec
mov
xchg
cwde
add
das
push
add
xchg
jg
gs
xor
sub
pop
ds
aaa
pop
xchg
fadd
and
jmp
scas
xchg
(bad)
ins
jg
(bad)
rcl
mov
mov
ret
pop
retf
fwait
add
lea
mov
into
jno
and
(bad)
xchg
cmp
lods
xchg
fdivr
gs
push
xor
adc
push
mov
iret
mov
ffreep
fwait
sbb
scas
adc
xor
cmp
ret
cmp
push
pop
sbb
lods
into
mov
lea
je
dec
cmp
fistp
push
mov
add
fs
repnz
pop
push
out
leave
clc
sahf
xchg
mov
xchg
mov
out
fwait
add
call
add
sti
gs
add
mov
xchg
or
dec
jb
mov
cmp
loop
lock
jno
sub
jns
stos
test
xor
jp
lahf
js
ret
hlt
xchg
lea
out
mov
and
xor
clc
push
mov
leave
stc
(bad)
bound
and
int
pusha
sbb
cmps
call
rol
inc
call
xchg
cmp
lods
sbb
(bad)
sbb
call
imul
out
adc
xchg
pop
cwde
test
repnz
adc
mov
addr16
jle
(bad)
fisttp
clc
scas
cld
cmp
or
inc
stos
push
(bad)
mov
mov
or
pop
int3
pandn
in
and
(bad)
dec
mov
in
dec
shl
int3
test
push
xor
xchg
retf
adc
cli
xor
gs
shr
pop
ret
repz
scas
loopne
lods
dec
mov
sti
icebp
(bad)
pop
pop
xor
ins
jno
push
push
mov
pop
out
gs
pop
(bad)
push
das
test
add
enter
aam
enter
call
hlt
push
lea
imul
pushf
xchg
iret
pop
shr
test
aaa
mov
jmp
scas
jmp
enter
sbb
add
in
jae
push
adc
jmp
adc
leave
icebp
gs
xchg
div
(bad)
dec
into
fs
in
inc
jae
loopne
cmp
cmp
pop
cs
ins
loopne
adc
das
in
out
loope
jae
out
jae
jne
popf
and
popf
(bad)
shl
stos
jmp
add
sbb
mov
mov
das
push
xchg
ficomp
outs
add
or
inc
jecxz
mov
mov
cmp
xor
movs
inc
or
push
popa
daa
jno
movs
pop
js
sub
rol
out
mov
lods
(bad)
dec
stc
scas
ja
mov
push
aas
loope
mov
cmp
data16
movs
icebp
push
xor
dec
pop
clc
mov
or
pop
add
xchg
leave
jmp
out
inc
sahf
xchg
or
stc
pop
xchg
jo
jne
(bad)
dec
rcl
inc
sbb
(bad)
int
rcr
imul
xor
add
fwait
test
cmp
xchg
xor
cmp
in
cmp
adc
stos
test
add
push
fwait
sbb
or
inc
icebp
cmova
jb
cmp
push
ja
bound
add
adc
cmp
clc
sub
aad
xlat
mov
idiv
mov
fiadd
pop
std
popf
dec
xchg
repnz
mov
inc
mov
mov
push
mov
leave
xchg
adc
jp
adc
dec
xor
mov
dec
push
fld
ja
xor
jg
jle
mov
or
mov
fild
xchg
jg
xchg
sub
xor
adc
push
add
stos
retf
xor
iret
adc
aas
add
retf
test
adc
inc
mov
jae
pop
pusha
js
push
dec
repz
jmp
fsubr
jecxz
inc
pop
jb
rcr
rcl
js
aaa
mov
push
jbe
sti
lock
push
out
xchg
sub
call
jne
lahf
xchg
add
mov
fsubp
or
stos
fstp
rcr
cdq
lock
mov
sub
dec
popa
sti
add
pop
adc
pop
(bad)
or
cmp
fbld
fwait
push
sub
and
inc
jecxz
clc
addr16
mov
push
or
xor
int3
in
xchg
in
add
xor
fcom
xchg
cmp
mov
jge
sbb
popf
xchg
scas
cmp
inc
stos
xor
inc
pop
sbb
push
push
loopne
mov
xchg
lahf
sahf
data16
dec
mov
xsavec
xchg
test
inc
mov
popf
jle
push
cmps
jae
out
imul
push
sbb
mov
cwde
pop
jp
popa
push
mov
cmp
loope
in
out
mov
cmps
inc
jge
sub
jmp
popf
inc
fcom
add
pusha
push
lock
(bad)
loope
fistp
sar
xor
sbb
jle
sbb
cmp
jns
bts
inc
pop
mov
mov
aaa
xchg
aaa
add
movs
pop
test
es
xchg
and
retf
lock
aas
or
sub
push
xor
mov
fld
mov
fldenv
in
inc
xlat
xchg
jl
pop
jae
call
or
xchg
aad
inc
jge
out
repz
nop
fild
and
adc
adc
jbe
inc
scas
rcl
pop
fld
cld
sub
ja
ins
push
mov
gs
int
das
xor
pop
adc
jge
sar
xchg
or
and
iret
lahf
sub
inc
test
stos
daa
inc
push
cmc
frstor
mov
mov
mov
js
xchg
sti
popf
xor
into
pop
mov
cmp
pop
jmp
repz
inc
adc
push
loopne
les
add
xchg
or
xchg
mov
mov
push
add
xor
stos
data16
xor
push
test
pushf
cli
(bad)
push
pop
dec
fcmovnbe
fisub
aas
mov
pop
mov
xor
xchg
or
or
sbb
leave
push
xor
mov
les
lock
pop
jb
push
ins
popf
lods
imul
fsin
jmp
test
inc
aam
sub
mov
in
inc
or
int
and
test
call
ss
je
push
(bad)
inc
push
add
rep
cli
cmp
cmp
js
inc
sub
pop
stos
inc
(bad)
jmp
fsubr
sti
pushf
sbb
stos
repnz
xchg
jge
dec
ret
pop
xor
fst
adc
mov
sub
or
jnp
je
sub
sbb
shl
fiadd
mov
push
jno
lods
iret
jmp
(bad)
pop
sbb
dec
test
sbb
cwde
pop
and
push
adc
(bad)
xor
pop
cmps
jmp
push
cmp
xor
cld
aaa
test
dec
xchg
lods
test
push
jmp
aas
jmp
push
movs
mov
sbb
xchg
leave
lahf
jne
test
inc
push
cmps
jns
push
movs
shl
fs
ds
out
xor
xchg
iret
popa
gs
push
fs
stos
cmp
xor
xor
add
test
dec
loope
daa
dec
icebp
or
call
jne
push
test
movs
mov
xor
imul
mov
movs
mov
cli
push
pusha
lods
mov
clc
mov
mov
adc
ins
enter
in
or
push
jmp
test
std
sahf
test
dec
sub
retf
mov
test
imul
sahf
outs
xchg
test
aad
dec
psadbw
lea
push
shl
cmp
mov
icebp
retf
fisttp
lea
jl
inc
or
sti
stc
jae
imul
or
dec
jg
(bad)
neg
int3
daa
cli
push
(bad)
cdq
jmp
inc
xchg
hlt
pushf
mov
das
and
sahf
ja
je
call
mov
jmp
sub
lods
mov
mul
lods
lds
and
ja
push
(bad)
shl
mov
or
fbstp
xchg
pop
sub
repnz
scas
pusha
lock
pop
adc
push
call
push
mov
in
pop
mov
arpl
lds
aad
mov
dec
inc
xchg
dec
aam
(bad)
mov
cmp
fs
mov
and
sti
(bad)
es
bound
xchg
(bad)
cld
mov
push
xchg
out
out
retf
test
pop
and
jp
out
stc
mov
add
pop
sub
mov
ins
xor
sbb
leave
ret
shr
fwait
xor
mov
xchg
loope
pop
sbb
out
loopne
mov
sbb
pop
es
js
imul
mov
mov
dec
std
sti
aad
pop
ins
mov
add
inc
nop
mov
sbb
push
call
mov
(bad)
fstp
ds
xchg
cmp
sahf
ror
inc
dec
std
pop
mov
int3
sbb
jnp
fld
stos
adc
stos
adc
dec
push
cmp
aas
xor
ins
mov
loopne
pop
jecxz
cmp
popa
inc
pop
dec
xchg
mov
out
out
sbb
daa
sub
in
push
or
in
add
mov
sub
test
scas
jmp
jo
lea
inc
xchg
xchg
call
inc
pop
mov
cmps
icebp
lahf
or
xchg
movs
int3
fisub
mov
push
sbb
sbb
call
xor
inc
mov
scas
adc
mov
inc
shl
fild
cmc
cdq
mov
enter
out
int
pop
inc
mov
call
sub
(bad)
inc
xchg
pop
stc
adc
(bad)
push
jmp
je
shr
cwde
pop
scas
arpl
fwait
(bad)
outs
pop
scas
pop
add
sub
popf
inc
imul
sub
push
mov
stos
fld
push
(bad)
das
daa
and
xchg
test
dec
jbe
mov
repz
ss
rcl
mov
mov
lea
cmp
mov
ret
stc
mov
mov
fs
in
xchg
test
jmp
fcomp
xor
rcl
mov
dec
lahf
neg
retf
sbb
jmp
jmp
mov
jmp
ret
inc
adc
pusha
adc
test
sbb
icebp
sub
push
cli
fisubr
xchg
push
sti
movs
mov
jg
add
sub
dec
and
in
fcom
nop
inc
movs
call
xor
ins
push
in
pop
test
sbb
xlat
neg
adc
inc
lahf
jno
ja
in
push
sbb
xlat
inc
stos
mov
rol
or
jge
outs
cmc
or
ds
inc
jg
xchg
test
in
in
xchg
add
test
scas
sbb
or
xor
jg
xchg
jp
xor
sahf
sub
frstor
add
xor
sub
ja
xchg
jmp
mov
aas
sub
out
loope
pusha
sbb
xor
push
comiss
add
sub
mov
ret
pop
rcl
fwait
dec
sub
(bad)
call
cdq
xchg
les
fs
and
retf
inc
push
cmp
add
fstp
mov
xchg
dec
addr16
mov
fdiv
sbb
mov
inc
mov
in
lds
cmc
sbb
mov
xor
add
test
mov
repnz
outs
aad
jge
mov
test
inc
lock
aas
aaa
xor
mov
xor
enter
push
sbb
sbb
xchg
outs
lahf
jb
sub
dec
pop
jg
loopne
repz
aad
or
mov
adc
in
inc
call
aas
jl
sahf
adc
xchg
sub
push
mov
out
jbe
std
add
add
and
or
mov
add
mov
sti
icebp
leave
scas
in
aam
and
ins
and
cdq
dec
cmc
dec
add
fsub
(bad)
stos
lahf
sbb
or
mov
std
icebp
rcr
pop
shl
mov
mov
mov
rol
js
sbb
and
push
loopne
push
mov
gs
and
inc
push
test
push
addr16
cmp
repz
(bad)
sti
inc
dec
dec
cmp
xlat
jno
pop
jne
mov
popa
(bad)
xor
rcl
add
push
mov
mov
or
pop
test
fwait
xor
rcr
cs
sbb
addr16
out
push
adc
scas
dec
int3
and
mov
sub
into
mov
test
imul
jno
add
mov
popf
stos
xchg
dec
outs
inc
cwde
fwait
clc
mov
das
add
and
xchg
cmp
pop
(bad)
arpl
pop
adc
(bad)
call
adc
mov
stc
je
sar
xchg
pop
pop
adc
pop
rol
and
(bad)
call
add
mov
test
cwde
jo
cmp
xlat
dec
clc
lods
and
shl
pushf
pushf
sbb
leave
mov
push
add
inc
adc
cmp
dec
add
add
aad
mov
dec
sbb
aad
or
stos
outs
mov
mov
ss
gs
retf
or
or
pop
pop
sub
mov
jae
fiadd
retf
jnp
pusha
xchg
add
(bad)
and
sub
cli
sbb
not
adc
mov
ret
dec
adc
mov
xchg
(bad)
pushaw
jmp
ret
jp
jbe
jge
pop
shrd
dec
xchg
pushf
js
out
dec
cmp
shr
jle
mov
cld
retf
mov
std
lods
cwde
add
pusha
bound
mov
cmp
mov
xlat
mov
inc
mov
dec
pop
mov
lods
mov
and
das
call
jbe
push
and
xchg
pop
adc
nop
mov
(bad)
mov
and
inc
adc
xchg
add
jmp
mov
addr16
push
mov
retf
jmp
shl
ja
popf
retf
and
(bad)
out
lar
retf
cmc
and
fwait
mov
daa
jle
mov
and
cdq
add
in
xor
mov
lahf
les
(bad)
cmp
outs
push
fwait
shr
inc
arpl
dec
dec
pushf
loope
out
push
(bad)
xchg
pop
mov
xor
pop
mov
fwait
mov
mov
das
sub
mov
pushf
and
and
pop
lock
in
mov
daa
cwde
pop
xor
mov
xor
jg
(bad)
inc
jmp
xchg
sbb
pop
pop
xchg
call
in
pusha
sahf
sbb
retf
pushf
in
lods
sbb
push
popf
repnz
jnp
out
jmp
push
add
(bad)
aad
inc
nop
fwait
pop
ins
cmc
inc
inc
mov
mov
int3
mov
daa
mov
lahf
jge
or
repnz
test
or
pop
adc
dec
aaa
sub
lods
inc
in
shl
push
mov
outs
xchg
dec
in
add
xor
or
or
mov
pop
push
and
mov
cdq
push
lahf
cmps
bound
adc
je
cmc
in
add
xlat
sti
out
popf
iret
mov
in
iret
xchg
push
add
(bad)
xlat
xchg
jle
push
mov
stos
and
and
and
push
(bad)
out
leave
lods
loope
inc
popf
loope
mov
scas
call
shl
shr
pop
cs
inc
xchg
and
adc
xchg
mov
push
std
ret
jle
cs
push
call
sbb
int3
cld
cwde
and
inc
and
cdq
cdq
cmp
xchg
fld
mov
cmps
mov
and
or
jmp
mov
leave
xor
pop
add
sar
je
sbb
call
retf
sahf
pop
add
xor
enter
push
push
cmp
mov
add
jl
inc
and
and
xor
jae
stc
xchg
and
stos
cmp
in
imul
mov
daa
pushf
jae
or
out
push
pop
dec
sbb
inc
ret
sahf
xchg
pop
mov
jge
pop
pop
cmc
xor
mov
add
sahf
push
std
fstp
aas
mov
(bad)
fcomp
je
inc
and
xchg
scas
mov
xchg
jg
lock
das
add
(bad)
dec
fild
mov
xchg
push
fld
cmp
cmp
mov
out
mov
dec
ja
scas
leave
pop
loopne
loope
push
cmps
xchg
add
xor
imul
pushf
sub
xchg
imul
repz
jp
adc
in
mov
sub
dec
out
push
jno
scas
int3
cs
jmp
sbb
cmp
mov
pop
fist
fmul
cmp
push
sub
jmp
std
pop
pop
or
xchg
je
dec
xchg
cmp
pop
xchg
jp
out
rcl
push
ret
mov
fwait
xor
mov
repz
enter
mov
test
out
(bad)
pop
jne
inc
leave
mov
call
sbb
xor
inc
pop
fild
retf
push
clc
je
xor
pop
sub
pop
fcmove
bndstx
jecxz
inc
dec
or
lds
mov
(bad)
push
jbe
xchg
and
iret
jne
and
cli
sub
outs
pop
ss
cwde
int
xor
scas
les
fiadd
or
xchg
mov
data16
sbb
mov
sub
pop
mov
out
jp
sub
mov
imul
jmp
add
xlat
push
shl
cmc
push
outs
and
jne
in
pusha
das
xchg
ds
xor
test
sbb
jl
(bad)
pop
inc
das
clc
pop
scas
test
cs
(bad)
lahf
fisubr
lahf
push
inc
xchg
(bad)
cld
gs
retf
jge
cmp
cmp
ret
inc
sbb
inc
clc
scas
dec
clc
push
cmps
fdivr
icebp
(bad)
fcmovbe
xchg
mov
rcr
out
dec
pushf
callw
xchg
add
push
es
jb
fmul
ja
or
retf
movs
int
jne
xor
inc
mov
cmps
arpl
clc
or
mov
dec
dec
mov
in
imul
mov
jmp
repnz
test
js
loope
cli
ja
(bad)
mov
adc
and
dec
fld
pop
and
lock
fsub
push
cmc
scas
pop
xchg
or
inc
mul
mov
jo
or
push
or
xchg
je
push
outs
pop
sub
fcomi
inc
iret
fld
fs
jne
call
addr16
aas
out
test
ret
test
test
lahf
sub
mov
jne
imul
and
pop
push
leave
mov
movs
(bad)
dec
repz
js
les
cdq
fisubr
pop
xor
aas
jg
cmp
mov
mov
or
cld
cs
lds
push
inc
out
call
push
mov
test
dec
add
scas
add
pop
or
outs
mov
cmp
pop
loopne
shr
sbb
push
addr16
jne
mov
rcl
stos
lods
mov
and
inc
aas
stos
lea
fcom
stc
pop
(bad)
xor
jp
push
dec
hlt
xor
pop
fmul
retf
cmps
pop
push
loop
sahf
cdq
xchg
cmp
pop
adc
sbb
xchg
dec
(bad)
lods
leave
jmp
xor
fidivr
mov
sub
loop
mov
cmp
es
adc
cmp
push
(bad)
shl
jg
mov
push
add
push
cs
cmc
add
daa
xchg
adc
icebp
in
ror
mov
inc
adc
push
loope
sub
movs
sar
fdivr
ret
xor
test
sub
sbb
inc
jle
in
pop
jecxz
test
jl
dec
sub
pushf
ja
(bad)
(bad)
ss
lahf
pop
ins
out
sbb
repz
aad
arpl
sbb
das
dec
add
orps
push
add
sub
loopne
rcr
dec
sbb
xor
pop
nop
pop
inc
test
jb
dec
test
add
pushf
(bad)
rcl
fs
mov
jp
push
fucomp
scas
rcr
inc
sbb
stos
shr
ret
lea
lea
(bad)
cmp
dec
add
jb
and
js
je
outs
aas
mov
inc
mov
push
cmps
mov
int3
out
clc
dec
loope
dec
xchg
xchg
or
and
sahf
push
sbb
ret
push
sbb
jmp
and
fild
jmp
cmp
retf
inc
pop
add
cmp
adc
add
jmp
mul
xor
dec
cmps
rcr
or
adc
bound
jno
pushf
stc
repz
inc
sub
mov
mov
out
dec
mov
push
outs
push
or
test
test
jnp
pop
test
dec
repz
or
fs
fld
aam
sbb
fld
jmp
mov
loop
(bad)
iret
push
push
pop
jne
push
sub
in
movs
test
sbb
inc
jns
mov
xchg
repnz
stc
xchg
cli
jns
nop
test
outs
iret
sti
fld
cmp
push
cmp
push
push
or
adc
sub
fld
ret
mov
xchg
xor
hlt
mov
lods
mov
shr
lock
in
push
retf
mov
sub
(bad)
lods
or
test
and
pop
jbe
je
mov
xor
inc
adc
scas
out
ret
jbe
inc
pop
jne
push
sub
sub
dec
and
adc
and
xchg
in
push
or
pop
shr
cmp
pop
out
push
cmps
cs
push
mov
pop
xchg
stc
test
adc
(bad)
cld
les
cli
scas
mov
jmp
outs
sti
push
lock
outs
add
mov
sub
mov
add
xchg
mov
and
cdq
cmps
enter
test
outs
fidiv
stos
hlt
push
dec
lods
pop
fistp
mov
in
pop
rol
rol
aas
ret
add
cmp
sub
fldenv
pop
cwde
sub
hlt
cmps
xor
sbb
popa
xlat
(bad)
movs
retf
mov
mov
neg
imul
sbb
sbb
pusha
ret
mov
pop
ja
add
xor
cmps
loop
inc
sub
jmp
fdivrp
xchg
cmp
push
inc
ret
hlt
call
mov
xor
pop
cmp
out
jle
enter
mov
nop
aas
or
aas
popa
dec
and
jle
xchg
push
int3
in
jnp
mov
mov
bnd
shl
and
and
xor
jg
clc
and
xor
retf
test
push
sar
dec
imul
sub
mov
jmp
(bad)
and
loope
test
into
lods
pop
mov
add
inc
xlat
jbe
adc
add
enter
addr16
mov
adc
cmp
lods
je
iret
mov
dec
pop
pop
std
vcmpss
xchg
leave
das
xor
ins
xlat
lds
pop
mov
dec
rcl
mov
jns
jge
and
add
dec
rep
test
pop
mov
mul
xchg
dec
out
ins
into
imul
adc
pusha
cmps
adc
pop
pop
push
cmp
(bad)
lahf
lds
cli
xchg
ror
mov
inc
test
arpl
xor
and
popa
pop
jmp
add
iret
or
loopne
fdiv
add
and
sub
inc
jnp
and
dec
xchg
push
push
mov
and
xor
mov
mul
adc
add
bound
push
lods
add
jp
dec
xor
pop
jmp
push
out
lock
xor
cmps
aas
mov
(bad)
jmp
xor
dec
aaa
jmp
popf
mov
ins
(bad)
mov
nop
push
pop
sub
xchg
mov
mov
(bad)
stc
outs
(bad)
out
cmp
xor
loope
push
inc
mov
out
mov
add
call
push
pop
and
pop
mov
sub
out
cli
push
sbb
pop
mov
in
sub
jl
ds
xchg
test
adc
hlt
push
and
adc
nop
mov
or
ret
ss
call
mov
push
stos
das
movs
pop
and
cmp
sub
jno
sar
mov
retf
jne
(bad)
cmp
sbb
or
mov
mov
imul
pop
add
shl
iret
sub
jo
sbb
stos
mov
mov
outs
and
push
ret
push
add
vmovd
addr16
push
xor
pop
lods
stos
loopne
xchg
sbb
and
fisub
mov
jecxz
jg
adc
xchg
imul
out
(bad)
sub
lock
(bad)
pushf
cwde
xor
imul
and
daa
sub
add
inc
mov
pop
dec
cdq
outs
aas
add
lds
out
jmp
mov
scas
rol
adc
out
xchg
xor
addr16
mov
popf
out
dec
rcr
or
cli
lods
pop
jo
sbb
ins
jg
jmp
xchg
dec
add
ret
push
add
arpl
sub
sub
xchg
jno
jmp
cmp
sbb
(bad)
mov
retf
je
push
test
fnstcw
inc
xor
fisttp
cmp
jmp
inc
into
pop
pop
push
out
call
lahf
test
xchg
lds
push
jae
fbstp
(bad)
sub
push
test
mov
sub
sahf
adc
cld
mov
cmp
pop
jle
mov
jle
pop
ds
or
fnstenv
xchg
jae
test
or
and
mov
jmp
dec
mov
adc
push
cmps
repz
mov
jae
mov
push
dec
sub
ror
(bad)
mov
scas
sbb
(bad)
add
push
cli
outs
jb
arpl
mov
and
xchg
or
aad
icebp
mov
loope
fldcw
pop
pop
jmp
ret
mov
and
stc
xchg
(bad)
jmp
add
gs
xchg
xchg
pop
push
add
(bad)
js
daa
stc
sub
repz
or
in
loop
xlat
sub
sbb
(bad)
pop
fisttp
ins
sbb
pop
lods
push
dec
or
inc
pop
jae
cmp
jle
es
xor
mov
mov
cdq
shr
and
pop
mov
push
pop
aas
push
xor
sti
add
cmp
jo
loopne
adc
xchg
jae
cmp
or
idiv
or
call
mov
mov
pusha
mul
mov
and
inc
cmp
mov
sub
pop
mov
xchg
out
mov
inc
pop
xor
adc
push
popf
(bad)
adc
mov
sbb
cmp
or
out
sbb
aas
fs
xor
add
mov
jecxz
retf
(bad)
out
cwde
and
lock
push
test
stos
(bad)
arpl
jne
mov
test
or
xchg
or
je
and
aaa
xor
sub
push
inc
adc
ss
cmovo
sub
call
scas
jb
mov
inc
(bad)
jb
push
out
add
in
repnz
and
cmp
or
xor
inc
xlat
xor
adc
mov
jle
ret
mov
jb
cli
mov
add
push
sub
sub
push
add
test
adc
xlat
addr16
jl
adc
das
jp
dec
in
mov
arpl
xchg
mov
inc
sbb
jo
add
jns
mov
imul
cmp
inc
sti
out
adc
jl
xchg
rcr
add
shl
xor
xor
sbb
daa
inc
and
mov
ja
mov
int
fnstenv
adc
cld
test
sbb
adc
aas
or
aas
mov
retf
adc
stos
xchg
dec
cmps
pop
cmp
adc
ins
(bad)
inc
push
pop
cdq
sahf
iret
cmp
adc
enter
jg
lock
pop
mov
loop
loopne
pop
jns
loopne
enter
or
inc
xchg
dec
jne
jle
popf
mov
fwait
lods
cli
xchg
xlat
xchg
add
mov
(bad)
mov
xchg
jmp
pop
icebp
aad
add
xchg
(bad)
cld
call
xor
aaa
cmc
xchg
push
int
push
cmp
ins
(bad)
std
gs
sbb
and
cdq
sti
bound
clc
inc
lods
dec
push
fisttp
jl
fs
lods
cdq
jnp
xlat
inc
mov
(bad)
out
ja
jle
lods
cmps
sbb
fwait
dec
rcr
fs
pop
(bad)
lods
xor
addr16
and
mov
xor
arpl
rcl
es
scas
idiv
mov
into
and
jne
repnz
mov
adc
sbb
adc
aad
xlat
xchg
popf
mov
jmp
mov
push
sub
je
arpl
cmps
or
lds
sbb
inc
jae
inc
add
gs
push
outs
ror
fdivp
mov
pushf
mov
imul
(bad)
push
(bad)
mov
out
fsub
mov
mov
push
jle
(bad)
(bad)
pop
repnz
add
mov
rcr
in
pusha
jae
xchg
pop
ins
mov
push
imul
pop
fwait
test
test
out
shl
adc
pop
je
jne
pop
jecxz
(bad)
sar
dec
es
mov
rcl
retf
shr
and
dec
fistp
sbb
jp
push
and
ja
dec
btr
nop
cwde
xor
push
jp
inc
shl
cli
popa
or
pop
pop
sti
lea
adc
mov
pop
mov
mov
jns
adc
push
xor
xchg
mov
pop
cmp
ffree
mov
pop
in
scas
xchg
test
jo
cmp
or
stos
pop
pusha
sbb
jp
pop
std
(bad)
jle
(bad)
lea
sbb
push
mov
push
fs
cdq
or
adc
ja
loopne
enter
or
mov
mov
in
xor
(bad)
cld
add
mov
jle
xor
out
sub
scas
retf
add
jbe
sbb
cmp
add
rcr
and
(bad)
xchg
sbb
inc
xchg
ds
mov
adc
mov
cmp
dec
out
aad
out
cmp
repnz
push
xor
cmp
or
cmp
mov
cdq
cmp
jbe
and
in
dec
and
pop
out
fdiv
daa
push
icebp
xor
loope
inc
in
pop
call
push
jmp
add
add
arpl
popa
lahf
sub
fcmovnu
movs
add
xor
cmp
icebp
xchg
xchg
idiv
mov
fdiv
cmp
pop
scas
iret
fmul
mov
and
sbb
cmp
sub
fld
scas
test
sub
dec
retf
dec
push
push
ins
hlt
jmp
and
ret
test
xor
push
inc
arpl
xchg
and
adc
pushf
stos
adc
push
pop
sub
mov
bound
retf
ins
test
lock
cmp
neg
bswap
test
fwait
(bad)
imul
and
and
xchg
popa
pop
mov
add
nop
push
ds
aas
jo
gs
jmp
dec
ficomp
push
scas
pusha
push
(bad)
push
add
jno
cs
ins
mov
lods
cmc
xor
inc
stos
jp
mov
xor
mov
cdq
mul
sub
pop
cmp
inc
mov
inc
adc
pop
add
fcom
call
iret
in
sahf
in
inc
mov
add
stc
and
push
sahf
hlt
mov
lock
mov
mov
add
push
xor
retf
inc
fcomp
pop
sub
and
rol
jbe
enter
sub
movs
add
ret
pop
(bad)
loop
push
add
call
(bad)
mov
and
imul
std
ja
(bad)
xor
adc
inc
ja
enter
popf
aam
js
mov
rcr
jnp
popf
(bad)
push
repnz
mov
xchg
ins
rcr
sbb
jp
pop
fcom
and
inc
sbb
sbb
out
mov
aas
xchg
sbb
jmp
ss
std
push
repnz
ror
pop
rol
xchg
mov
movs
sbb
push
fidiv
xchg
mov
sahf
xor
ds
push
cmp
cmc
stos
xchg
cld
xor
jp
and
dec
popf
sbb
cli
cmp
imul
push
mov
repz
iret
aad
jb
popa
js
es
scas
jg
sahf
(bad)
pop
inc
rcr
(bad)
mov
jne
pop
ins
jns
aam
add
dec
sbb
repnz
xor
pop
push
sub
pusha
dec
out
jmp
sub
sbb
in
push
xchg
aam
leave
out
std
cmp
lods
cmc
(bad)
mov
jmp
retf
inc
xor
dec
mov
mov
xchg
add
fcmovnbe
jno
std
mov
xchg
cmp
pusha
and
pop
aam
add
jecxz
push
ror
or
sti
icebp
arpl
jl
sar
mov
cmp
inc
jmp
rol
mov
cmp
into
jbe
call
fmul
int
rcl
inc
cmp
pop
scas
and
mov
or
xor
shl
enter
(bad)
sti
gs
addr16
repz
and
push
daa
pop
pop
pop
adc
cmps
out
inc
pop
adc
jbe
adc
mov
out
scas
mov
aaa
add
lds
lds
push
lods
test
sub
rep
ret
out
sub
lea
sub
or
cdq
xlat
(bad)
jl
out
jp
aam
or
hlt
std
ja
call
cld
push
jmp
das
push
mov
cmp
loopne
cs
jmp
sbb
mov
ja
cmc
xor
js
(bad)
(bad)
in
sub
mov
scas
add
leave
sbb
xchg
xlat
pushw
or
fbstp
cmp
jl
cmp
push
jno
icebp
in
mov
sub
mov
and
sar
jbe
cmp
(bad)
jp
lock
sbb
cmp
inc
loope
pop
adc
inc
les
adc
xchg
div
push
repz
ret
call
das
mov
xor
push
loope
cmp
les
cdq
xor
test
cmp
std
in
sub
sbb
outs
aaa
pop
mov
xchg
mov
sub
sahf
jo
mov
mov
push
je
stos
scas
out
in
or
sub
add
imul
mov
push
add
xor
js
adc
push
pop
je
and
jae
fsubr
push
stc
jae
xchg
push
aaa
scas
retf
out
fiadd
int
into
sbb
pushf
push
jb
mov
jecxz
push
xchg
mov
lock
(bad)
cs
daa
push
pop
or
xor
inc
shl
ins
outs
pusha
fucomi
pop
(bad)
popf
adc
in
push
mov
push
or
sbb
dec
popa
in
adc
push
adc
jl
xchg
sub
loopne
add
adc
inc
(bad)
sub
push
out
dec
inc
sub
mov
and
stc
pop
and
ss
jecxz
jecxz
add
lods
or
aad
fcmovb
imul
fdiv
pop
jne
inc
inc
loop
imul
jmp
call
pop
and
xchg
popf
imul
fild
pop
mov
inc
push
and
ror
mov
scas
clc
inc
out
cmp
(bad)
sti
lea
fwait
repz
push
and
repz
xor
push
cdq
enter
(bad)
push
jp
movs
push
out
fucomi
mov
scas
inc
mov
mov
outs
cmp
in
jbe
call
out
cli
jno
pop
sbb
into
out
inc
jp
jp
enter
ins
gs
cwde
and
sub
cmps
sub
adc
xor
sahf
jo
je
ja
pop
iret
pop
mov
xchg
sti
mov
sub
scas
inc
pop
rol
add
je
xor
push
mov
cdq
loopne
fdivr
fadd
test
jge
pusha
jge
fbstp
adc
sub
movs
jp
test
mov
and
sahf
xor
pusha
pop
in
lods
(bad)
fdivr
mov
or
ins
and
std
ror
xor
rol
outs
jns
adc
test
push
mov
xor
lea
jnp
xchg
sub
sbb
mov
jge
or
adc
add
rcl
dec
test
aad
and
mov
pop
push
pop
addr16
and
jle
jbe
(bad)
int
jmp
push
or
loopne
iret
xchg
xchg
std
(bad)
clc
push
loope
and
jbe
aad
iret
pop
int
inc
loop
inc
xor
call
fnstcw
lock
outs
adc
rcl
jp
js
mov
sti
sub
rcl
mov
(bad)
jle
ja
inc
xchg
jbe
int
fistp
dec
imul
aad
mov
jmp
inc
pusha
clc
or
mov
loop
dec
fadd
movs
add
and
ins
scas
or
adc
push
xchg
sti
fisubr
jle
push
push
rol
(bad)
adc
fld
or
jmp
push
sub
inc
push
push
mov
mov
sub
mov
jmp
mov
xchg
popf
ret
repnz
test
mov
sbb
add
mov
xor
imul
pop
in
int
out
mov
sbb
sbb
and
fndisi(8087
push
loopne
inc
fbstp
cmp
cli
jbe
mov
mov
cmp
and
cwde
add
jns
mov
aad
cdq
fmul
not
add
cmp
adc
jns
jne
dec
popa
loope
push
(bad)
aad
(bad)
add
cwde
stos
push
(bad)
test
push
les
sub
push
rol
(bad)
sbb
mov
push
xchg
stos
pop
xchg
or
test
jns
sbb
lea
mov
push
sbb
mov
push
into
mov
fcmovu
rcl
jno
call
jecxz
in
add
ins
sub
sbb
sub
xchg
retf
inc
cs
pop
aam
jo
out
and
cmp
or
cmp
ss
test
mov
leave
das
jl
xor
mov
outs
mov
mov
lds
fist
mov
or
data16
or
pop
cwde
push
lock
lea
adc
dec
jo
jbe
scas
cmp
push
adc
pusha
add
(bad)
mov
push
push
pusha
cmps
int
repz
dec
xchg
in
pop
bound
fwait
popf
jp
mov
adc
xchg
popf
out
outs
(bad)
sbb
push
test
or
xor
retf
jmp
and
pop
pop
push
and
call
jmp
das
inc
sub
pop
xchg
out
ins
sub
or
dec
xchg
dec
dec
std
adc
stos
push
dec
cmp
lock
jmp
retf
addr16
pop
xchg
clc
loope
pop
add
retf
scas
sbb
cmps
fcomp
xchg
call
mov
into
int
ret
mov
arpl
not
test
jl
and
bound
icebp
sub
adc
dec
mov
mov
lods
dec
add
outs
ins
fimul
loopne
cmps
mov
inc
pop
or
dec
adc
sub
and
xchg
stc
stc
outs
xchg
xchg
mov
sub
mov
inc
add
or
dec
cmp
sbb
rol
jle
jo
or
mov
bound
add
ss
out
dec
pop
pushf
dec
push
mov
das
out
jmp
in
clc
sub
ja
in
cmp
cwde
and
and
arpl
jns
push
sub
xor
mov
test
mov
mov
cmps
mov
fsubr
add
test
xchg
jge
mov
sti
cld
pop
mov
xor
std
xor
clc
out
test
cmps
jle
(bad)
adc
sbb
push
mov
or
aaa
ror
lds
fnstenv
je
mov
js
out
call
cmp
dec
cmp
sub
aad
or
mov
inc
popa
mov
or
jbe
popf
inc
add
xchg
stc
mov
sub
jns
and
movs
pop
cdq
xchg
dec
xchg
aad
into
inc
retf
fistp
cmp
jecxz
jl
repnz
aad
outs
popf
(bad)
jns
mov
inc
les
pop
mov
in
or
addr16
ins
aad
inc
jg
dec
cmovo
add
out
push
cmp
jne
jo
cmp
es
ds
das
pop
cdq
add
inc
bound
dec
sti
cmc
mov
les
adc
lea
dec
mov
jg
push
movs
sbb
lds
out
push
loop
sbb
dec
cld
nop
test
mov
jle
pop
daa
hlt
call
push
xchg
loop
sub
je
mov
imul
cmp
adc
inc
repz
pop
cmp
jb
(bad)
xchg
fadd
imul
jge
pop
pop
arpl
imul
and
push
add
dec
lds
outs
jno
inc
mov
cmp
adc
scas
aaa
movs
rcl
cmp
jmp
ss
push
es
pop
int
daa
dec
and
xor
js
nop
push
mov
leave
out
or
sub
test
cmp
mov
cdq
mov
test
ja
call
lods
cld
add
sub
bound
xor
(bad)
scas
pop
daa
ficomp
cmp
lahf
sbb
cli
dec
(bad)
or
cmp
ret
push
das
pusha
mov
imul
sbb
cmps
popa
adc
sub
add
adc
pop
fisub
xor
jecxz
inc
dec
fdiv
mov
test
nop
xchg
mov
bound
or
outs
inc
mov
inc
and
div
hlt
in
(bad)
shr
out
fwait
enter
add
mov
xchg
add
sub
ins
jae
or
cmp
icebp
ja
in
ror
mov
(bad)
and
inc
scas
imul
or
sahf
movs
retf
into
pop
cmps
sub
mov
cld
jp
enter
xchg
fbld
jns
jmp
jb
scas
dec
scas
in
sub
cmp
push
jo
pop
mov
lahf
int
add
or
mov
mov
or
clc
hlt
call
dec
inc
out
add
fwait
and
xchg
push
mov
imul
emms
mov
(bad)
lock
xchg
jmp
pop
or
mov
cmps
mov
(bad)
lahf
js
inc
add
lods
pop
std
or
mov
xlat
xor
bound
(bad)
xor
push
addr16
data16
inc
mov
lds
(bad)
cmp
arpl
je
pop
cmp
pushf
mov
xchg
xor
retf
shl
sub
cmp
or
shl
(bad)
das
push
hlt
mov
int3
pop
pop
add
cli
sbb
jmp
or
add
and
dec
adc
(bad)
fisttp
mov
test
out
loop
pop
jle
mov
mov
adc
cmp
mov
add
push
jo
aad
out
or
sbb
fs
cld
dec
imul
ret
loopne
loope
fmulp
adc
dec
test
in
push
movs
mov
(bad)
and
js
sbb
or
xchg
cmp
jae
push
xchg
loopne
les
frstor
ficom
mov
dec
std
mov
mov
lock
pop
clc
and
jnp
xlat
leave
sbb
or
comiss
neg
mov
mov
pushf
outs
jg
repz
xor
sbb
cld
pushf
sbb
xlat
aam
int
aas
je
repnz
xchg
aas
jo
scas
movs
jns
mov
mov
movs
mov
clc
cmp
fmul
sbb
test
std
mov
mov
ret
cmovge
inc
mov
iret
adc
and
and
jns
mov
test
push
lods
adc
pop
jge
jo
(bad)
(bad)
(bad)
xchg
dec
mov
push
ret
int3
add
mov
into
je
es
xchg
ror
mov
xchg
push
std
xor
sti
adc
adc
std
hlt
push
ss
xchg
mov
dec
outs
out
ja
fs
mov
int3
ins
cli
fwait
int3
sbb
add
sub
pop
sub
mov
jo
push
cli
push
xchg
inc
xor
outs
(bad)
jns
loop
mov
mov
inc
cmps
jl
repnz
jmp
mov
push
pop
mov
mov
inc
inc
sub
into
jae
xlat
outs
or
xchg
push
fcom
xor
mov
add
mov
add
cmp
adc
cmp
dec
jno
pushf
das
pop
adc
out
jo
das
out
ret
mov
icebp
(bad)
and
dec
cmp
xor
push
imul
nop
es
out
mov
xchg
icebp
and
jmp
push
dec
cmp
lds
cmc
jne
inc
cmps
repnz
mov
mov
mov
(bad)
mov
repnz
or
mov
or
sbb
add
jecxz
ret
or
and
(bad)
out
mov
add
xchg
clc
inc
mov
mov
inc
cmp
ja
and
or
test
adc
das
pop
int
push
mov
fdivp
pop
sub
xchg
push
hlt
and
dec
orps
xchg
push
add
pop
push
adc
or
cmp
sbb
in
imul
retf
mov
fwait
(bad)
mov
mov
ret
cmp
ror
test
daa
jle
jp
dec
or
push
clc
(bad)
cmp
sub
stos
out
mov
gs
xchg
sbb
enter
jl
and
xor
jns
ins
sbb
push
data16
mov
clc
and
adc
ins
cmp
movs
mov
stos
dec
cmp
cmp
out
fisub
adc
mov
scas
xor
fcomp
shl
or
pop
cmp
and
mov
stos
push
xchg
push
mov
xchg
pop
test
bound
cmp
pop
mov
pop
inc
les
lahf
fst
call
pop
fadd
cmp
test
add
pop
inc
loope
dec
lods
jbe
and
push
outs
ja
es
and
in
push
fwait
js
js
pop
mov
mov
loop
jge
push
fstp
mov
ror
mov
mov
mov
or
outs
sub
mov
(bad)
into
std
movs
aad
jbe
xchg
push
push
sbb
ror
sbb
adc
xchg
shl
aas
jae
cmp
stos
push
jmp
(bad)
cmc
outs
or
imul
loope
test
popa
stos
test
lock
into
mov
cmp
stos
outs
rcl
cmps
mov
dec
addr16
inc
sbb
sbb
and
cmp
(bad)
sahf
lods
test
or
cmp
inc
pop
ins
stos
js
int3
iret
xchg
shr
iret
jge
cmc
out
sbb
mov
xchg
hlt
xchg
neg
stc
jl
rcr
inc
xchg
jnp
ja
or
mov
in
scas
xchg
lock
repnz
(bad)
imul
call
dec
mov
mov
push
xchg
fstp
addr16
dec
aad
and
pop
pop
stc
or
data16
mov
std
mov
jmp
push
cwde
lods
fsub
ret
in
imul
mov
lods
mov
cmps
mov
cs
sahf
pop
enter
repnz
outs
pop
mov
out
jo
jns
fld
xor
pop
dec
shr
dec
xchg
jo
movs
stos
arpl
sets
pop
bound
lahf
or
mov
lahf
xor
hlt
push
addr16
cmp
pop
in
cmps
das
and
retf
adc
(bad)
dec
cwde
or
mov
and
mov
mov
push
jb
test
fiadd
(bad)
jmp
loope
cmps
repnz
sar
cld
cmp
mov
(bad)
(bad)
cmp
jbe
stc
sbb
aas
jp
cmp
sbb
(bad)
fldenv
movs
or
xor
mov
xchg
mov
pusha
sub
adc
rcr
push
cli
aam
jb
cmps
out
(bad)
or
pop
movs
out
pop
mov
and
xor
fcmovne
test
adc
ror
xor
in
adc
or
lock
or
mov
adc
je
repnz
mov
jecxz
cmps
dec
in
pop
pop
dec
test
test
xchg
mov
addr16
inc
inc
adc
cli
inc
jb
mov
sbb
stos
in
xor
cmp
retf
cmc
and
push
out
cmp
outs
xor
xor
dec
mov
out
out
mov
pop
sub
repz
or
ins
bound
mov
retf
enter
dec
sub
mov
nop
mov
mov
mov
sub
push
rol
sbb
jle
mov
and
add
cli
inc
lds
fcomp
mov
test
or
pop
sub
xlat
fsub
imul
loope
shl
push
cmp
nop
scas
sub
push
cwde
mov
repz
sti
jns
mov
mov
sti
movs
adc
fsubr
xor
hlt
mul
imul
popf
enter
adc
cmp
mov
add
pop
push
loopne
das
sub
inc
mov
push
lock
movs
jle
dec
div
xor
add
mov
ret
xor
cld
and
out
loope
push
loop
retf
sbb
cwde
pop
paddsb
enter
sub
jne
mov
lods
add
xor
shl
and
sub
ins
inc
pop
mov
cs
rol
in
mov
push
jbe
fmul
call
push
iret
jp
jle
xor
xor
fwait
sub
jnp
ret
nop
mov
mov
inc
push
call
daa
loop
lds
dec
push
mov
adc
dec
cmp
cld
xchg
call
call
cld
lock
mov
test
inc
pop
scas
jmp
xor
jmp
in
ficom
sbb
in
and
push
sbb
ins
ja
loopne
or
adc
out
js
jge
les
adc
inc
ss
sbb
cmp
int
lods
pop
out
mov
das
call
shr
repz
cli
or
cmp
je
mov
ror
cmc
jne
clc
mov
outs
add
pop
ins
sub
add
shufps
xchg
adc
call
add
cmps
lock
mov
mov
arpl
inc
std
add
(bad)
aad
ds
pop
int
sbb
jnp
cmp
cdq
xor
mov
push
add
icebp
pushfw
mov
pop
aas
aas
mov
mov
lods
push
add
jecxz
in
and
cmp
clc
out
jmp
pop
jl
push
push
es
lahf
arpl
nop
sahf
add
iret
jmp
sub
shl
pop
ret
repz
mov
mov
out
cli
cmps
ds
retf
jge
call
(bad)
cmc
xchg
ficomp
ret
test
jnp
push
icebp
mov
mov
dec
and
and
and
sub
push
mov
ss
and
sar
lds
cmps
inc
shr
repz
cdq
and
imul
pusha
dec
and
sti
cli
pop
rol
sub
cmps
inc
enter
inc
adc
inc
fdivr
mov
div
sub
mov
jmp
call
js
pop
fcom
jne
jge
inc
inc
xchg
test
xor
jp
fisub
sub
dec
retf
inc
mov
xor
add
int
cdq
push
loop
dec
stc
mov
adc
fstp
imul
hlt
mov
mov
enter
push
cli
dec
adc
cmps
repnz
xchg
pop
sbb
aas
loop
retf
fldenv
dec
pop
repnz
dec
(bad)
std
test
outs
imul
ficom
aaa
mov
push
into
or
in
dec
cmp
ret
inc
push
or
icebp
or
out
adc
cdq
call
mov
out
mov
call
sub
ror
xor
mov
call
add
ret
out
adc
das
test
outs
pop
add
shl
xor
sbb
xor
xchg
dec
and
lods
sbb
cmp
pop
mov
cmp
scas
(bad)
mov
push
das
jp
loope
mov
sbb
ror
shr
das
popa
mov
inc
aas
push
jbe
inc
and
aas
jo
inc
mov
scas
retf
mov
xor
mov
test
(bad)
aam
leave
push
jmp
movs
mov
and
or
cmp
sahf
mov
iret
and
fs
and
adc
sbb
xchg
mov
stos
ret
pand
imul
data16
sbb
jnp
scas
cdq
push
outs
jl
lahf
nop
into
or
cmp
sub
sbb
xchg
xor
rol
or
mov
cmp
movs
pop
test
fiadd
out
xchg
data16
push
jp
add
cmc
lods
inc
imul
rol
jne
sbb
dec
cmps
mov
add
mov
jecxz
out
aad
add
jle
cmp
loope
out
add
push
jno
sbb
xor
cmps
(bad)
xor
cs
arpl
in
inc
push
xor
test
nop
(bad)
retf
daa
jb
(bad)
(bad)
in
(bad)
retf
pop
mov
jl
inc
sub
inc
jl
mov
into
ret
mov
dec
and
dec
inc
inc
add
aaa
jle
pop
les
aam
mov
loope
and
scas
pushf
or
mov
mov
in
fldcw
outs
movs
js
cli
out
cs
mov
sbb
inc
and
cmpxchg
stos
test
mov
(bad)
or
imul
mov
mov
pop
add
jle
cli
retf
add
push
jne
dec
jae
je
es
sub
dec
inc
data16
cmp
xchg
push
jnp
scas
popa
fisttp
enter
es
and
jge
mov
pushw
add
loopne
xchg
dec
sbb
mov
and
popf
mov
sar
fadd
in
jae
addr16
shl
and
call
cld
data16
cdq
cmp
mov
mov
repz
scas
or
or
dec
push
add
fsub
dec
(bad)
movs
jnp
or
mov
fdiv
adc
fisub
les
adc
test
hlt
cmp
ret
arpl
leave
xor
cdq
push
aaa
mov
adc
inc
adc
repz
jb
add
mov
push
sbb
scas
cmp
(bad)
js
movs
jg
pop
fnsave
movs
mov
in
pop
and
loopne
arpl
cmp
mov
xchg
mov
loopne
rol
jmp
out
add
adc
cwde
adc
sub
sti
mov
add
or
or
adc
or
pop
clc
push
mov
jg
pop
mov
aam
ret
in
(bad)
aam
and
repz
jp
sbb
push
mov
push
mov
int3
mov
dec
leave
mov
lods
mov
rcl
jecxz
outs
mov
mov
std
mov
fstp
ds
mov
lea
jp
sbb
(bad)
es
dec
(bad)
cmps
fcomp
sbb
cmp
mov
rcr
mov
sbb
mov
inc
pop
and
lods
cmp
mov
mov
and
pop
mov
mov
cmps
not
xchg
xor
cli
dec
pop
pop
sub
inc
xchg
clc
nop
aaa
outs
mov
push
adc
(bad)
pop
retf
lahf
shr
sub
pop
jo
into
sbb
mov
ins
vorps
or
push
push
bound
in
dec
mov
in
jle
and
adc
ss
push
sbb
xor
rcr
jmp
std
mov
out
mov
inc
ins
mov
xchg
es
retf
outs
lahf
nop
pop
sbb
cmc
out
sahf
xchg
ins
pop
mov
push
xor
sbb
int3
enter
sbb
daa
dec
xor
cdq
mov
popa
retf
cmp
mov
push
xchg
jecxz
aaa
push
inc
jp
popa
fsubrp
dec
push
icebp
xor
shr
das
jne
pop
xchg
lea
(bad)
or
mov
fs
not
jno
dec
push
and
mov
js
mov
mov
sub
int
sbb
xchg
mov
loopne
imul
mov
add
mov
arpl
sahf
pop
cdq
mov
pop
sar
push
and
cdq
aam
pop
ret
out
push
int3
pushf
retf
pop
aad
dec
mov
(bad)
jmp
and
mov
add
in
mov
dec
lods
fwait
xchg
pop
adc
pop
xor
jo
arpl
xchg
or
fstp
mov
xor
mov
into
int3
fs
cld
loope
adc
cmp
adc
retf
jmpw
aas
call
or
call
pop
push
mov
jns
mov
mov
or
sbb
sar
in
mov
into
dec
movs
bound
test
cmc
test
mov
stos
push
call
retf
xor
push
scas
stos
je
mov
fwait
xor
push
iret
rcr
mov
pop
fimul
repz
imul
or
fbld
imul
adc
cmps
jno
or
stc
or
mov
add
jg
imul
into
mov
adc
imul
ret
mov
xor
mov
adc
ss
mov
inc
(bad)
xor
add
or
dec
add
rcr
dec
xor
fwait
sub
out
clc
add
xlat
fimul
lock
iret
data16
push
(bad)
or
xchg
(bad)
cmp
mov
or
mov
mov
cmp
sbb
mov
mov
jl
fdivr
lods
mov
ja
outs
push
pop
push
push
aam
mov
xchg
inc
xchg
mov
inc
out
jmp
jecxz
sti
fcmovnbe
push
test
out
xor
jmp
pop
xchg
xchg
aam
mov
stos
bound
xor
and
jl
pop
adc
retf
ds
rdpmc
pop
sub
xchg
popf
call
ret
jp
jg
adc
loop
ret
(bad)
inc
jbe
fstp
std
in
int3
add
pushf
sub
inc
call
dec
mov
fst
mov
mov
mov
and
lahf
dec
lods
xor
add
jb
lds
or
popa
adc
loopne
fidivr
lods
ret
add
in
mov
out
movs
jns
lahf
pop
cmp
jbe
into
lahf
fs
cmps
test
inc
mov
ins
inc
lods
popf
repnz
mov
fistp
add
popa
jge
jle
cmp
ds
aas
stos
pop
mov
cld
pop
es
mov
test
ss
loopne
ins
sub
add
sbb
test
jmp
(bad)
retf
nop
test
xchg
gs
loope
fmul
xchg
xchg
loope
mov
sbb
xchg
cmp
rcr
xchg
stc
add
mov
(bad)
(bad)
daa
mov
clc
mov
jg
sti
int3
out
inc
jo
call
sar
jge
repz
outs
adc
cmps
movs
sub
in
adc
int
bound
push
out
bound
into
adc
inc
fidiv
ror
mov
and
aam
mov
xor
cmp
mov
jp
jnp
fst
cmp
sbb
fidivr
mov
mov
sar
mov
dec
mov
or
xor
inc
mov
pop
cmp
jmp
std
leave
int3
and
retf
inc
xchg
mov
icebp
jecxz
push
js
or
cmps
fldcw
int
xchg
icebp
xchg
xor
add
push
outs
ins
inc
and
ins
and
xlat
pusha
clc
inc
scas
sbb
nop
pop
and
cmp
punpckhbw
mov
fcomp
push
pusha
inc
popf
leave
mov
pushf
mov
fcmovne
aaa
add
ret
cmps
stos
fsub
jae
add
mov
frstor
xchg
jbe
loopne
push
adc
mov
or
add
jp
dec
jle
and
pop
fadd
out
cdq
fild
(bad)
push
sub
fist
dec
aaa
out
aad
test
add
xchg
ins
test
add
test
and
adc
push
ret
and
call
or
sbb
mov
push
jnp
repnz
loop
js
ins
push
dec
stos
cmp
mov
mov
jbe
push
mov
in
out
mov
imul
sub
shl
inc
xor
cs
pop
add
cmp
pushf
or
jbe
(bad)
sbb
pmulhw
fwait
or
rcl
mov
mov
push
sub
jae
mov
mov
sahf
mov
dec
or
jb
ins
outs
leave
xchg
sahf
out
out
push
pop
adc
push
sbb
pop
icebp
and
jns
sub
adc
int
jmp
ret
add
clc
xor
arpl
sub
jl
mov
push
sbb
mov
inc
pop
dec
mov
jns
add
adc
push
test
pop
das
loope
xlat
test
push
enter
repnz
and
sbb
jp
popa
fwait
pop
mov
cmp
das
es
jne
fwait
mov
mov
or
fsubr
stos
outs
enter
mov
and
mov
and
pushf
xchg
test
cmp
xchg
push
inc
dec
lds
xor
gs
pop
xchg
pop
in
adc
sti
dec
daa
add
aad
scas
sbb
add
and
mov
hlt
es
mov
out
popf
dec
(bad)
xchg
mov
(bad)
cmps
sbb
(bad)
mov
push
pop
mov
pop
out
sbb
mov
push
xchg
das
jmp
je
rcl
mov
push
or
and
mov
popa
in
mov
jo
enter
xor
inc
adc
call
loopne
mov
addr16
fcom
clc
das
repnz
mov
(bad)
out
xor
mov
inc
aas
and
fwait
adc
cmp
sbb
adc
jns
and
lds
outs
loop
mov
inc
pushf
xchg
fwait
into
mov
repz
out
daa
mov
jle
(bad)
(bad)
sbb
push
leave
bound
fidivr
pop
popa
sub
inc
push
jge
push
into
test
pusha
xchg
push
push
mov
cmp
adc
jg
dec
and
inc
jne
adc
cmps
lods
hlt
mov
retf
cmp
imul
inc
es
fcmovb
jl
xor
(bad)
aam
push
out
inc
jp
sub
push
outs
mov
(bad)
in
push
test
jp
pop
mov
cmp
xchg
jecxz
jecxz
in
les
scas
mov
rcr
mov
or
adc
fiadd
mov
in
or
xor
xor
push
dec
sub
retf
cmp
sbb
movs
jmp
inc
out
push
outs
mov
and
movs
out
sbb
push
in
adc
popf
jns
sub
cmp
sbb
or
lods
mov
shl
test
mov
xchg
sbb
jo
dec
jge
sub
cli
dec
mov
xchg
test
pop
xchg
shr
sar
adc
aam
out
jnp
sub
mov
xchg
repnz
popa
xor
shl
pop
sub
and
jp
outs
fild
(bad)
jno
jbe
repnz
push
xchg
ss
push
pop
pushf
jl
gs
dec
xlat
sub
aaa
retf
pop
pop
inc
and
adc
push
inc
sbb
je
inc
xchg
mov
cdq
pop
subps
not
pop
shr
dec
cmps
mov
xor
inc
add
imul
ins
outs
pop
scas
jnp
cli
xor
ret
push
and
xlat
(bad)
pop
call
cs
hlt
fmul
dec
ret
loop
mov
(bad)
or
or
sbb
data16
cmp
bound
lea
clc
lods
or
xor
retf
jmp
jae
cvttps2pi
jmp
mov
lods
xor
mov
lods
fbld
stc
lea
and
inc
jmp
and
xchg
mov
push
mov
sbb
loope
xlat
shld
sahf
adc
sahf
addr16
and
mov
jae
(bad)
jmp
fmul
jp
mov
add
and
(bad)
or
push
into
adc
mov
sbb
in
inc
aam
jmp
mov
push
(bad)
in
sbb
imul
fsubr
xchg
dec
cmps
es
inc
adc
and
out
hlt
lods
int3
ds
rcl
fwait
fs
inc
add
cwde
jnp
pop
sub
repnz
xlat
mov
xor
(bad)
(bad)
scas
cmps
lods
arpl
jmp
add
ss
xor
daa
and
cwde
mov
inc
je
aam
mov
ss
mov
daa
in
jmp
scas
add
dec
pop
xchg
ja
scas
jae
add
loope
mov
arpl
in
cli
sahf
(bad)
mov
movs
push
mov
aad
mov
div
adc
mov
xchg
cdq
int3
mov
loope
xlat
daa
retf
xchg
xchg
inc
or
add
jo
adc
dec
popa
jns
dec
push
ja
dec
xor
push
or
call
gs
sub
or
mov
pop
xlat
pushw
and
into
mov
gs
mov
ins
pop
mov
and
jns
or
pop
int
push
sbb
lods
sub
xchg
dec
fisubr
(bad)
fs
retf
xlat
xor
bound
and
sub
pop
loop
or
icebp
test
jmp
mov
inc
ret
jge
cmp
lods
out
leave
aam
sub
fcomp
call
lahf
lea
out
mov
sub
aad
(bad)
cs
(bad)
mov
xchg
cmp
call
(bad)
aad
test
jno
sbb
jmp
cmps
xor
inc
clc
add
mov
leave
cmp
xchg
pop
jmp
push
retf
dec
xor
sub
out
jmp
jge
push
lods
sbb
and
outs
jmp
push
jne
cld
mov
out
in
movs
mov
inc
cmp
rcr
push
(bad)
xor
popf
loope
outs
cwde
lds
cwde
inc
mov
jle
cmp
adc
or
repnz
mov
pop
arpl
mulps
fucom
scas
xor
ins
cdq
test
out
jmp
push
in
fld
cmps
or
cmp
fidiv
mov
lea
inc
add
stc
pop
cmps
ds
dec
pop
test
push
popf
push
push
sub
inc
fidiv
hlt
xchg
xchg
repz
pop
rcl
sbb
push
out
dec
in
jmp
sahf
das
jg
jg
mov
rol
pop
jbe
mov
inc
cmps
fnsave
adc
lods
push
dec
fsub
lods
sub
or
jae
sub
pop
in
add
nop
dec
push
lock
adc
push
dec
xlat
cmc
mov
cmp
aas
pop
in
imul
bound
pop
mov
jl
xlat
mov
imul
out
adc
dec
cmp
stc
and
push
mov
sub
xchg
push
call
pop
jp
test
xchg
sbb
inc
or
jb
fisttp
xchg
xor
jg
outs
mov
stos
pop
xchg
push
jmp
jmp
fidiv
or
pop
or
inc
cmp
call
sbb
fmul
add
and
hlt
outs
mov
inc
adc
mov
add
push
sar
push
sar
and
xor
outs
mov
rol
dec
and
inc
lods
mov
je
movs
dec
and
adc
fbstp
movs
or
call
jae
and
cmp
jmp
fistp
ins
push
mov
rol
aam
push
iret
ret
pop
inc
into
dec
push
mov
jb
mov
call
addr16
test
popf
sub
out
test
inc
aam
inc
cdq
(bad)
jp
cmc
mov
jmp
in
add
call
(bad)
dec
loopne
jo
xor
(bad)
cmp
xor
call
imul
fld
mov
push
leave
les
out
sbb
inc
dec
mov
mov
push
jle
mov
cmc
inc
mov
cdq
inc
popa
imul
cmp
repnz
xchg
cli
mov
aad
jbe
xor
std
inc
mov
repnz
jno
nop
cmp
and
push
or
xor
loop
mul
fwait
mov
inc
mov
stos
retf
lea
pop
xchg
sub
push
mov
shl
hlt
aam
mov
outs
test
enter
xchg
lahf
or
into
lds
jge
pushf
xlat
pop
enter
in
lods
loope
sahf
out
xor
popf
rol
xchg
dec
movs
outs
ja
aam
sub
ret
and
(bad)
bound
sbb
xor
sub
outs
and
inc
jns
retf
das
push
add
sub
jmp
fisttp
xor
std
mov
enter
inc
(bad)
lock
push
dec
add
retf
xchg
sbb
cdq
xor
ret
mov
shl
xor
(bad)
fiadd
mov
pop
stc
adc
out
push
ror
cmp
mov
rcr
jecxz
mov
pop
inc
add
rcl
jp
mov
ins
aad
push
push
inc
dec
mov
iret
or
cli
cwde
xor
mov
xchg
add
test
loopne
mov
popf
and
cli
pop
jb
imul
sub
adc
mov
mov
dec
dec
and
ins
jmp
(bad)
fmulp
mov
inc
jns
jnp
pop
lds
call
retf
and
leave
mov
repnz
(bad)
jmp
mov
pushf
dec
cmp
or
(bad)
retf
jg
pop
div
push
js
add
jp
rcl
mov
dec
movs
mov
sbb
in
stos
mov
movs
das
ja
das
xchg
out
xor
inc
or
sbb
adc
(bad)
int
retf
jb
outs
mov
imul
ja
cmp
out
frstor
loope
mov
ins
or
xchg
add
out
mov
(bad)
mov
add
xor
(bad)
dec
xlat
retf
sbb
sub
rcl
pop
fst
idiv
add
sbb
ins
sbb
frstor
adc
sub
mov
(bad)
xchg
stos
ins
adc
cdq
push
icebp
push
(bad)
enter
out
mov
fdiv
sbb
jns
lods
movs
pop
xchg
test
fist
mov
scas
ret
retf
mov
and
int3
add
mov
mov
xchg
mov
daa
clc
(bad)
idiv
aas
dec
ins
mov
mov
jg
cmps
pop
out
repz
jl
cld
jmp
in
jb
xchg
push
inc
mov
xchg
xor
stos
icebp
mov
ins
mov
mov
lock
mov
adc
es
pop
imul
loopne
out
je
or
xchg
sub
nop
imul
shl
test
sub
lds
mov
std
pop
shr
push
mov
push
movs
sar
mov
into
or
retf
dec
out
mov
ins
push
movs
xor
jno
jmp
aam
sub
addr16
xchg
out
sub
outs
stc
scas
scas
jns
sahf
add
shl
scas
cmps
cli
data16
hlt
sub
movs
sbb
sub
mov
fimul
or
leave
mov
mov
fnstenv
xor
ret
ss
adc
pop
inc
test
ret
aaa
mov
mov
call
es
xchg
rcr
pop
gs
fstp
inc
jne
push
xor
jp
jle
shl
xchg
dec
xchg
pop
in
movs
(bad)
sub
xlat
jne
lods
or
call
lock
out
adc
not
mov
int
dec
outs
push
js
dec
lock
(bad)
sub
(bad)
xchg
and
ficom
inc
jecxz
xchg
or
cmp
pop
int3
dec
adc
ficomp
pop
(bad)
push
push
test
jmp
fimul
sti
push
sbb
dec
or
jge
mov
pushf
(bad)
push
ss
jmp
xor
cmp
inc
jecxz
dec
rcr
cmp
dec
add
mov
out
repz
ror
pop
push
fst
dec
xchg
jecxz
mov
ret
push
push
add
push
arpl
jno
outs
push
les
lods
stos
test
cmps
jmp
cmc
pop
sti
ins
fistp
mov
setl
lahf
ins
aam
pop
push
mov
fimul
mov
aad
lods
push
push
cmp
icebp
sbb
(bad)
iret
test
int
call
cmp
push
or
std
lds
lods
pop
leave
enter
sub
dec
fiadd
aaa
cmp
rol
push
mov
jae
daa
retf
loope
retf
loope
mov
and
cmp
repnz
iret
outs
mov
mov
aam
(bad)
inc
sub
out
dec
jge
fadd
data16
ins
push
push
mov
inc
addr16
add
test
(bad)
(bad)
adc
cmp
and
cdq
in
stos
jae
adc
(bad)
ins
xchg
adc
inc
and
test
xor
cmp
mov
repz
(bad)
dec
sbb
xchg
mov
(bad)
out
mov
out
inc
mov
add
pop
lea
sbb
pop
test
and
or
enter
out
sbb
jnp
inc
push
bound
gs
xor
fwait
and
(bad)
mov
icebp
adc
mov
jmp
outs
push
add
mov
ins
xchg
test
lods
nop
sar
aaa
lock
and
cdq
mov
cmps
arpl
out
sbb
ins
ja
ins
inc
xor
dec
dec
mov
adc
jo
aad
test
movs
pop
pop
repnz
imul
cwde
mov
stc
(bad)
fimul
mov
daa
mov
lods
fbstp
pop
xlat
xchg
movs
xchg
push
cdq
ins
mov
mov
pop
mov
(bad)
repnz
ds
and
push
shl
adc
and
or
stc
xchg
(bad)
std
or
arpl
cmp
(bad)
fs
dec
fisttp
inc
mov
pop
push
in
cdq
dec
das
retf
xor
mov
or
xchg
push
loopne
sti
btc
shl
push
in
and
loope
pushf
dec
call
repz
push
int3
cmp
cmp
xchg
push
out
and
fadd
xchg
stc
(bad)
push
mov
pop
popf
inc
inc
sti
or
xchg
loope
mov
pop
fadd
(bad)
or
ins
je
out
fadd
cmp
or
push
rcl
xchg
xor
imul
loop
(bad)
xchg
sbb
gs
sar
mov
repnz
xchg
ins
cmps
inc
and
cmps
loope
cmps
inc
(bad)
mov
stos
xchg
pop
mov
inc
outs
cmp
mov
inc
pop
xlat
fstp
cmps
fild
adc
ja
in
mov
pop
or
cmps
in
and
mov
or
test
call
and
adc
sub
pop
rol
xlat
cmps
out
mov
in
jp
pop
pop
loopne
xor
sbb
movs
retf
popf
adc
mov
cmp
xor
mov
mov
or
mov
in
or
(bad)
loop
int
loop
adc
sbb
xchg
jb
push
out
xchg
loopne
arpl
or
cmp
je
out
(bad)
adc
sahf
cld
ret
popf
dec
sub
xor
push
data16
adc
or
retf
push
xlat
dec
loop
sbb
cmc
adc
aam
shl
adc
fldcw
clc
jg
sub
inc
sub
mov
lods
push
(bad)
ds
add
ins
xor
add
mov
and
inc
xchg
jne
push
mov
and
fsubr
pop
aas
rol
cmp
rol
sbb
mov
sub
xchg
cmp
xchg
iret
movs
div
pop
sbb
imul
cmps
stos
(bad)
stos
fmul
sbb
std
sbb
add
pop
sbb
mov
inc
retf
out
pop
cmp
es
jge
jmp
lea
mov
scas
out
jno
push
sbb
jne
or
add
mov
test
hlt
dec
stos
into
xchg
xchg
mov
fcmove
dec
loopne
lods
and
(bad)
adc
stos
xor
mov
movs
mov
test
popf
div
push
fist
(bad)
and
hlt
add
mov
push
pop
iret
xor
aam
mov
push
and
sub
mov
dec
xchg
mov
scas
imul
push
out
dec
sub
or
test
in
lea
jno
jmp
push
inc
cmp
sbb
es
push
jnp
sub
mov
js
xor
leave
mov
mov
inc
gs
cli
adc
pusha
rol
std
mov
mov
mov
xlat
in
(bad)
cmp
push
jmp
imul
lods
mov
pop
sbb
add
push
adc
mov
xchg
dec
or
js
jge
or
pop
mov
movs
mov
push
mov
int
call
retf
jmp
adc
add
psubusw
fmul
fdiv
jmp
sub
cmps
inc
in
xchg
jg
and
cld
cli
lds
repnz
xchg
shr
imul
leave
mov
lods
adc
(bad)
data16
stos
inc
sar
mov
dec
loopne
jecxz
je
inc
loop
cs
push
mov
mov
add
xchg
repnz
mov
lods
sub
or
fs
loopne
mov
shl
imul
test
xor
and
cmp
adc
pop
sub
scas
(bad)
cmps
jmp
inc
ds
cld
add
pop
dec
fwait
icebp
enter
mov
adc
pop
jnp
xchg
(bad)
jae
fucomp
fcomp
inc
pop
in
or
inc
mov
mul
push
cdq
pop
in
inc
and
ins
mov
cmc
sbb
inc
sub
pushf
lea
(bad)
in
call
mov
mov
mov
adc
sbb
or
fidivr
cs
pusha
jbe
jbe
imul
cmp
or
(bad)
stc
outs
or
dec
push
in
and
fidiv
add
pop
adc
mov
call
shl
mov
adc
rol
ins
enter
(bad)
add
stos
ret
sbb
aas
push
or
fadd
pop
push
add
or
shr
retf
test
test
adc
sub
fwait
pop
push
mov
outs
push
add
push
fiadd
pushf
sar
xor
jb
adc
retf
mov
pop
nop
cmp
xor
stos
push
sub
and
les
adc
outs
jbe
mov
(bad)
xor
rcr
mov
es
scas
pop
dec
inc
adc
jno
mov
add
(bad)
mov
repnz
movs
jl
loopne
inc
dec
sti
jnp
loope
pop
push
aam
or
shl
jns
or
loopne
push
(bad)
out
(bad)
jmp
mov
xchg
(bad)
pop
in
cld
add
push
or
int
adc
adc
sub
inc
mov
cld
mov
dec
lods
jns
pushf
sbb
dec
mov
mov
mov
sub
ja
mov
mov
das
(bad)
and
popa
inc
pop
cld
stc
mov
ins
sub
rcl
add
ret
mov
xchg
mov
xor
sbb
sub
xchg
(bad)
xor
nop
je
cmp
popf
popa
ret
mov
fwait
adc
imul
adc
test
mov
stos
stc
jne
pop
add
cwde
icebp
mov
and
enter
and
ds
bswap
dec
xchg
js
(bad)
out
xor
fst
retf
test
gs
mov
lock
jbe
test
(bad)
outs
xchg
cmp
repz
lea
ins
and
clc
and
push
fwait
mov
cmp
mov
cmp
push
sbb
pop
sbb
mov
mov
test
test
dec
fisttp
add
enter
cmp
lahf
fs
sbb
js
popf
shl
fist
mov
ss
dec
push
das
enter
pop
int3
cmp
pop
bound
adc
in
inc
shr
xchg
jg
out
pop
repz
dec
xchg
mov
inc
add
sti
test
mov
enter
into
mov
ss
mov
das
cmp
loopne
sub
clc
mov
push
adc
xor
daa
hlt
fcmovu
fcom
cmc
int3
loop
out
js
ins
cmp
or
popf
mov
and
xchg
sub
jb
clc
fisubr
mov
adc
sbb
stos
sbb
(bad)
pop
and
and
repnz
adc
and
lock
test
int
xchg
ficom
call
add
mov
fisubr
pop
dec
fdivr
jne
(bad)
leave
fild
and
mov
dec
arpl
pusha
fwait
mov
bound
pop
(bad)
adc
sub
mov
dec
mov
les
repz
loopne
cmp
dec
lock
aas
test
popf
retf
or
cmps
adc
aam
(bad)
sub
outs
fidivr
icebp
es
fidiv
popa
nop
adc
add
rcl
or
mov
sub
jge
jns
cmps
loopne
movs
xchg
lahf
daa
daa
in
add
popa
test
mov
pop
or
jb
outs
mov
clc
xor
gs
xchg
cmp
inc
pop
hlt
call
push
enter
iret
repnz
out
xchg
push
lods
ret
mov
xchg
daa
adc
mov
cwde
push
mov
push
retf
sub
aas
pop
lds
outs
in
leave
pop
xchg
nop
test
xor
mov
rol
adc
xor
das
fadd
test
jmp
pop
add
push
cmps
(bad)
adc
pop
and
stos
dec
pushf
cmc
pcmpeqd
and
in
fst
movs
adc
jnp
and
push
test
in
icebp
push
movups
fwait
dec
addr16
xchg
pop
je
and
mov
push
addr16
mov
fnsave
scas
ret
or
cmp
fadd
mov
mov
sub
sub
enter
ja
mov
(bad)
sub
xchg
push
adc
cdq
push
in
in
cmc
adc
add
data16
dec
cwde
nop
push
pop
mov
or
out
leave
sub
pusha
out
or
sub
pop
ret
sbb
popa
je
xchg
xor
ds
test
dec
adc
pop
cmp
lods
xor
add
add
cmp
jae
cmp
int
popa
jno
inc
and
sub
aad
cmps
jg
loopne
shl
cmp
or
mov
pop
scas
in
or
ds
xor
mov
inc
jmp
xchg
test
dec
clc
cmp
lds
push
mov
js
aam
(bad)
fucomi
pop
sbb
pop
sbb
pop
mov
out
xor
int3
mov
inc
mov
jmp
test
(bad)
jg
mov
and
add
cmp
push
pop
daa
mov
push
dec
lods
ins
pop
add
mov
inc
xchg
push
push
xor
and
push
loopne
xchg
icebp
pushf
enter
inc
test
mov
or
fwait
mov
push
cs
in
daa
fwait
pop
xchg
sbb
lock
jnp
adc
sahf
(bad)
out
test
in
mov
test
popa
xlat
pop
add
gs
cdq
loop
sbb
xchg
stos
mov
inc
mov
gs
(bad)
enter
retf
dec
jmp
cdq
or
adc
xchg
sub
pop
cmps
cli
cli
mov
int
xor
jecxz
dec
clc
lods
lahf
jecxz
cmp
jmp
push
push
or
clc
lock
in
cmc
inc
test
mov
xor
or
sar
ret
sbb
rcl
je
leave
and
inc
cs
or
movs
push
sbb
aam
dec
(bad)
jmp
popa
dec
mov
jnp
fcmovne
out
jne
sbb
sub
cmp
pop
test
sbb
mov
sub
or
xchg
xor
mov
cmps
push
pop
adc
fwait
pusha
lahf
or
and
dec
cmp
push
adc
aad
cld
jne
dec
or
push
fbstp
out
movs
xchg
fdiv
in
mov
ds
inc
cmp
xor
sub
push
mov
cmc
sar
out
out
int3
cli
sar
arpl
(bad)
sbb
mov
dec
jns
and
xchg
aaa
prefetchwt1
xlat
hlt
aam
xchg
sbb
inc
inc
scas
jp
sbb
stos
hlt
push
pop
pushf
ret
adc
add
jno
imul
out
ss
es
arpl
push
push
adc
mov
fild
sbb
jmp
cli
lods
lahf
sbb
ss
nop
push
stc
out
sub
lds
sub
add
shl
jmp
sub
shl
lods
jp
cmp
gs
sahf
xchg
sub
adc
rcl
js
push
xchg
jb
iret
jmp
test
sub
mov
popf
sti
fs
fdiv
nop
cmp
push
movs
push
and
dec
add
jecxz
pop
mov
cmp
xor
fsub
test
xchg
inc
movs
int3
nop
aaa
mov
jmp
inc
dec
out
cmp
repnz
repnz
mov
sbb
push
xor
push
jmp
sti
sbb
or
inc
cmc
sub
push
push
cmp
inc
cwde
cmp
icebp
inc
lods
out
shl
jne
and
cli
sub
push
(bad)
loope
out
test
into
mov
pop
push
dec
mov
jo
jo
out
or
fstp
pusha
mov
fild
retf
test
mov
addr16
xlat
dec
stos
sbb
ror
xor
adc
stos
inc
(bad)
push
dec
scas
jge
fdivr
adc
je
lea
ins
mov
loop
dec
xlat
sub
fwait
rol
push
dec
int3
inc
add
ret
fisttp
mov
test
pusha
rcr
add
shld
shr
mov
inc
neg
push
xlat
outs
clc
lock
dec
push
lods
arpl
popa
fcomp
xor
adc
nop
iret
or
pop
fwait
push
adc
je
(bad)
cmp
jge
xchg
inc
inc
adc
repnz
sbb
retf
mov
movs
push
popa
aam
mov
loop
cmps
add
shl
js
lock
(bad)
ds
jmp
pop
out
xor
push
jns
adc
and
sar
ss
mov
aam
mov
add
mov
jns
fwait
or
fnstsw
mov
or
jle
mov
inc
sbb
in
add
in
xchg
mov
sar
dec
fist
jmp
mov
shl
mov
dec
rcr
push
call
aaa
xor
add
dec
mov
pop
mov
stc
push
out
ds
mov
adc
mov
gs
or
push
pop
jp
ror
leave
mov
shl
enter
jmp
shl
gs
cmp
cs
sbb
inc
lods
jno
push
lock
jmp
lea
xchg
xchg
fnstsw
pop
cmp
(bad)
out
xchg
aas
xor
dec
jmp
fpatan
sub
ins
in
xchg
call
mov
mov
lods
sbb
call
or
and
sbb
sub
repnz
mov
sub
ja
add
rcl
test
into
leave
sub
xchg
pop
xlat
dec
cmps
scas
sub
lds
test
out
test
jmp
jnp
pop
cmps
sub
mov
shl
mov
inc
inc
scas
jmp
cld
shr
stc
add
daa
mov
fwait
std
out
(bad)
mov
sbb
lock
retf
jno
or
push
adc
pop
ds
dec
xchg
call
lock
xchg
sti
jb
xchg
mov
out
lock
cmp
inc
push
pop
mov
push
mov
aaa
jae
inc
rcr
mov
or
es
pop
jno
mov
cwde
addr16
jnp
shl
mov
adc
inc
js
mov
pop
ret
mov
xlat
cwde
sar
aam
(bad)
jl
leave
aam
cmp
arpl
sbb
inc
out
fwait
std
sar
cmp
mov
jp
and
stc
xor
call
inc
fmul
std
(bad)
push
mov
rcr
loopne
sbb
cs
and
xchg
lock
xchg
mov
stos
movs
test
push
xor
retf
jne
div
stos
sbb
cmp
repz
add
xor
and
fwait
mov
repz
repz
push
movs
dec
and
or
bound
repz
mov
clc
fistp
fsubr
ss
popf
jg
cmp
or
dec
dec
jbe
xor
jge
pop
cmps
in
push
nop
or
jbe
adc
jg
xchg
xchg
jl
lahf
fmul
mov
outs
sub
repnz
data16
mov
and
push
les
sub
repz
and
mov
aas
and
cmp
sahf
inc
pop
fsub
mov
call
icebp
jns
ret
mov
and
jnp
aam
call
inc
mov
lahf
aas
cmp
mov
mov
test
sti
fcomip
dec
cmp
ret
adc
jecxz
fwait
push
inc
cmp
inc
mov
jmp
push
and
(bad)
adc
(bad)
sti
shr
pop
lock
sbb
outs
mov
in
jb
mov
xchg
adc
cmp
mov
test
pop
cwde
mov
xor
mov
arpl
sbb
inc
mov
mov
dec
push
or
inc
repnz
jne
in
mov
mov
cmp
mov
inc
mov
inc
fisubr
fld
call
pop
sar
push
xchg
and
ror
outs
and
jecxz
push
fld
xchg
jge
push
outs
nop
push
lods
stc
icebp
out
cmp
and
fisub
mov
jmp
sti
mov
xor
stc
imul
pushf
push
sub
rcr
adc
imul
ret
lods
stc
test
xchg
sub
cmp
jge
or
cli
fwait
scas
sar
stos
sub
sub
push
jecxz
cwde
into
pop
gs
jecxz
enter
in
rcl
repz
inc
in
repz
fiadd
xlat
ss
jae
sbb
sti
sub
aad
push
mov
jmp
mov
fidiv
cli
mov
test
aam
and
mov
inc
fild
popa
mov
in
(bad)
cmp
les
aam
out
adc
mov
sbb
mov
ins
adc
idiv
xchg
xchg
push
or
pusha
mov
repnz
jmp
inc
add
add
or
adc
loopne
dec
aam
stos
jp
clc
js
outs
pop
pop
mov
out
fidivr
dec
jp
and
add
inc
scas
test
(bad)
fdiv
sbb
arpl
mov
push
loop
test
push
sub
dec
cmp
push
jae
enter
dec
inc
loope
xor
loope
jl
cmc
test
mov
jge
imul
or
jne
movs
pop
and
pop
cli
inc
push
shr
arpl
inc
adc
mov
adc
or
pop
ror
cdq
add
and
push
(bad)
push
sar
jl
lds
loop
ins
stos
cdq
xlat
(bad)
mov
mov
push
fs
mov
xor
inc
push
mov
push
mov
xchg
nop
cmps
out
jno
jmp
jns
push
xchg
sbb
shl
mov
out
in
sbb
pop
gs
(bad)
mov
jmp
sub
sub
pop
adc
das
les
push
sub
nop
(bad)
int3
mov
mov
loope
(bad)
dec
fdiv
cmc
fnstsw
cs
xchg
imul
xchg
mov
outs
mov
scas
fadd
pop
sahf
loop
adc
addr16
mov
in
out
sbb
or
icebp
xor
push
fistp
hlt
fisttp
dec
xor
add
stos
xor
mov
out
sub
sub
inc
push
fcomip
std
scas
adc
ins
shl
sub
jmp
pop
pop
xchg
ret
push
sahf
shr
dec
jnp
cmp
adc
(bad)
mov
mov
sub
inc
ror
dec
pusha
imul
jl
retf
push
xchg
xchg
cmps
jb
xchg
dec
and
pop
inc
loop
mov
das
cmp
fist
cmps
pop
and
pop
pop
arpl
sub
sub
xchg
rcr
dec
pusha
mov
mov
pop
ja
stos
jmp
test
idiv
loop
in
gs
hlt
data16
ds
mov
fs
add
pop
ins
mov
dec
xor
ins
jb
not
fnsave
mov
das
js
sbb
sub
push
fist
xchg
and
push
fst
lods
add
jae
mov
mov
inc
jle
inc
cmp
add
xchg
jg
int3
mov
loopne
cmc
xchg
lock
pop
int3
fild
adc
adc
retf
ss
mov
or
jb
inc
jge
lods
(bad)
mov
jbe
mov
add
jmp
inc
daa
fmulp
out
pop
dec
hlt
daa
add
je
dec
dec
hlt
repz
sub
jmp
mov
outs
xchg
inc
sub
fdivr
jns
xchg
or
xor
jmp
(bad)
jecxz
adc
inc
inc
lea
ficomp
xchg
inc
aad
xor
js
dec
pop
(bad)
push
xor
push
cld
rcr
sub
dec
fwait
hlt
and
mov
jae
stc
jmp
add
lods
or
push
inc
(bad)
and
pop
jbe
clc
out
xor
fwait
sub
pop
jb
xor
pop
outs
cli
pop
and
mov
aam
jmp
repnz
ror
xchg
into
ret
scas
outs
sub
xor
frstor
out
sahf
adc
call
retf
cwde
cmc
xor
mov
scas
(bad)
fisttp
pop
pop
retf
pop
sub
push
pop
pop
mov
(bad)
and
sub
sbb
sar
jbe
dec
sub
sub
push
js
imul
mov
xchg
mov
xchg
rcl
add
cli
rcr
in
cmps
and
mov
dec
test
jne
mov
cdq
xor
mov
ret
daa
xor
cdq
fmul
ret
add
ins
adc
stos
mov
call
push
add
add
(bad)
or
sbb
int
fmul
xchg
jnp
iret
pushf
jne
adc
add
aam
sub
adc
cmp
mov
or
enter
push
jne
jmp
cmp
repz
adc
es
inc
jno
(bad)
(bad)
jle
es
mov
dec
xchg
sahf
push
loope
ror
rcr
(bad)
inc
mov
call
push
(bad)
push
(bad)
pop
xchg
and
mov
or
xchg
div
stos
out
or
mov
jae
or
repz
xchg
fsub
push
mov
jne
xor
ja
mov
mov
sbb
rcr
cwde
adc
pop
lods
ins
mov
dec
jb
pop
pop
mov
jmp
rol
scas
imul
adc
arpl
inc
cs
push
add
cmp
aaa
sar
cmps
das
fidiv
mov
jne
shr
mov
dec
rcr
push
test
xor
xchg
mov
test
xor
gs
imul
daa
repnz
pop
popf
shl
call
je
mov
xchg
mov
jns
out
pop
fidiv
and
add
retf
out
and
fist
(bad)
pop
cmc
jno
dec
push
and
imul
(bad)
sti
sbb
dec
dec
std
aaa
fist
xor
retf
mov
pop
es
lahf
fs
adc
je
jge
add
movs
add
add
repz
fwait
xchg
mov
aaa
pop
outs
jo
imul
jb
aad
adc
addr16
push
lods
sbb
xor
call
mov
aam
cmps
pushf
daa
jo
outs
cmp
mov
dec
inc
out
cmc
sbb
popf
mov
mov
add
clc
fyl2xp1
enter
mov
push
call
push
shl
push
fild
or
ss
adc
or
sbb
add
ja
pop
gs
repnz
add
adc
push
fdiv
pop
popf
or
pusha
mov
pop
cmp
ficomp
les
pop
dec
sahf
jnp
ds
mov
outs
pop
cwde
push
mov
adc
int3
lods
sbb
jg
xbegin
mov
mov
push
cwde
hlt
test
cld
test
jg
jne
ds
push
pop
sbb
ret
hlt
dec
loopne
adc
push
jmp
inc
imul
rcl
aad
sar
outs
fldenv
mov
scas
in
xor
and
jno
movs
and
push
out
repnz
outs
mov
or
movs
pop
cmp
push
cld
fst
xchg
sbb
sub
daa
icebp
mov
aam
call
(bad)
cmp
push
push
inc
fwait
sbb
sub
pop
fist
mov
cmp
enter
or
push
mov
jno
idiv
push
stos
rdpmc
(bad)
push
mov
outs
out
aaa
cli
inc
push
mov
daa
rcl
inc
out
es
dec
mov
xor
gs
mov
sub
xchg
les
fcmovbe
push
pop
push
outs
pop
sub
imul
jmp
int
xor
fadd
retf
inc
cmova
jo
mov
pusha
sub
sub
mov
movs
or
sti
out
es
pop
mul
mov
jb
mov
push
daa
movs
mov
push
inc
adc
lea
cmpxchg
fadd
xchg
mov
push
mov
lock
inc
mov
loope
push
stos
cmp
lods
into
iret
and
and
xchg
and
push
mov
pop
jae
cmp
inc
leave
in
add
loope
sub
cmp
fstp
lea
test
dec
or
xor
dec
xchg
ja
sub
cmps
popf
aam
enter
mov
mov
cmp
push
shr
push
scas
ins
cmp
enter
test
rcr
shl
test
push
sbb
push
push
mov
jno
test
add
cmps
adc
and
fisubr
cmp
arpl
cli
retf
fisttp
(bad)
push
pop
stos
sub
and
and
outs
cmps
inc
lea
call
sar
shl
not
fisttp
sbb
jmp
and
rol
imul
cmp
jnp
xor
fstp
sbb
js
add
pop
and
pop
popf
and
jecxz
movzx
sub
inc
int
mov
ret
aas
ret
sub
pushf
jg
loopne
out
or
out
lahf
jmp
stos
out
add
xor
shl
push
nop
push
xor
pop
cmp
loope
sysret
retf
repz
ret
pop
movs
or
out
jne
neg
mov
popf
push
adc
dec
push
stos
sar
sub
push
loop
cld
icebp
or
jbe
aad
cmp
int3
jb
rcl
sub
inc
repnz
ins
fwait
pop
fidiv
out
cmps
inc
iret
shl
es
bound
and
jle
out
arpl
shl
ja
(bad)
or
mov
leave
in
sub
shl
jnp
cs
std
fwait
mov
jp
out
stos
pop
xchg
mov
mov
dec
push
imul
mov
jns
mov
adc
cmp
xor
dec
push
mov
aaa
jmp
icebp
das
mov
fwait
xchg
cwde
xchg
stos
push
jno
sbb
jmp
xor
xor
fwait
jmp
or
fldcw
pop
xchg
push
xchg
push
push
aam
test
pusha
mov
jecxz
push
scas
xchg
pop
repz
arpl
or
ds
adc
adc
aam
dec
dec
in
push
xor
xor
and
xlat
ret
xchg
push
push
in
sbb
push
int3
out
push
push
mov
push
cmp
or
push
ss
outs
retf
jmp
mov
(bad)
hlt
fldenv
les
push
mov
pop
sbb
cmp
cdq
add
enter
clc
(bad)
cmps
adc
mov
pop
xchg
mov
mov
jnp
adc
xchg
je
push
gs
fs
imul
dec
rol
mov
add
outs
pushf
out
aam
inc
dec
push
dec
call
dec
es
xchg
xor
add
xchg
pop
iret
mov
pop
add
mov
jge
ins
jns
jmp
dec
mov
mov
adc
retf
out
int3
shl
and
sub
xchg
call
in
sti
out
sub
aas
push
push
movs
inc
loopne
imul
icebp
stos
scas
mov
in
pop
iret
sti
test
xchg
jecxz
inc
pop
add
mov
popf
adc
fld
iret
repz
push
xor
xchg
daa
mov
mov
push
aam
mov
mov
mov
cld
cmp
das
adc
pusha
leave
inc
jo
dec
jo
out
das
int
mov
and
mov
dec
fist
jnp
js
mov
dec
mov
inc
xchg
rcl
aaa
pusha
pop
mov
jmp
sti
imul
mov
bound
das
jb
push
jb
dec
mov
cmp
sub
rcl
xor
loop
sub
mul
repz
out
inc
fcom
lea
and
or
(bad)
dec
(bad)
fmul
test
jmp
mul
push
add
nop
jbe
and
in
xor
pushf
push
into
sub
pushf
pusha
xor
pop
jle
dec
add
out
adc
pop
test
xchg
pop
cmps
repnz
imul
cmc
movs
daa
(bad)
aaa
mov
cmp
shr
mov
shl
ins
inc
mov
mov
mov
ret
sub
pop
fldcw
hlt
jmp
add
sbb
pop
mov
inc
sahf
mov
and
mov
ins
test
(bad)
cmps
shr
sbb
jae
xchg
adc
inc
std
pop
scas
cdq
sti
mov
jae
fldcw
sar
pop
dec
std
test
stc
int
cvtps2pi
test
cmp
dec
mov
mov
(bad)
je
pop
rol
(bad)
outs
mov
mov
daa
test
addr16
mov
dec
mov
fdiv
gs
push
(bad)
mov
push
imul
test
or
xchg
jecxz
jg
fcom
imul
dec
jl
stos
sbb
xchg
or
xor
popa
mov
sbb
lds
in
mov
and
movs
jle
mov
scas
cld
cmp
inc
jno
ret
sub
test
jmp
add
aaa
or
in
xchg
mov
call
dec
mov
xor
xor
cmp
inc
cld
mov
push
fdiv
push
xchg
xchg
pop
inc
(bad)
mov
push
xchg
sti
inc
jae
xor
pop
cmps
inc
fisubr
push
shr
push
mov
lahf
xor
cmc
jnp
(bad)
out
xor
xchg
test
pop
mov
and
(bad)
movs
test
std
mov
dec
push
mov
dec
rol
cwde
dec
sbb
popa
jg
adc
mov
aas
xchg
cld
mov
cmp
sub
je
retf
sub
cli
mov
repnz
mov
sbb
adc
ins
and
scas
outs
cmp
xor
add
enter
fnstsw
imul
xor
cs
xor
lods
das
call
or
jns
pusha
sub
call
movs
pusha
(bad)
sbb
sub
ds
scas
xchg
icebp
test
cmp
cdq
sbb
shr
mov
in
movs
pop
lock
(bad)
std
into
outs
mov
mov
mov
lahf
(bad)
retf
push
mov
add
or
div
sub
inc
nop
cmp
inc
pop
movs
in
adc
shl
dec
cmp
addr16
add
mov
cs
shl
and
loope
and
in
dec
dec
jl
adc
out
ds
push
imul
xchg
shl
aam
xchg
aam
and
cs
jmp
scas
out
mov
in
std
mov
and
cmp
aas
jnp
mov
add
ins
jb
inc
mov
cmp
push
jge
into
ins
push
stos
mov
hlt
int3
and
jo
jno
enter
dec
ds
lods
dec
and
(bad)
enter
daa
sbb
movs
push
hlt
dec
pop
push
icebp
pusha
adc
mov
call
mov
mov
add
lock
or
sbb
mov
ins
(bad)
mov
sar
adc
jp
sbb
dec
add
jo
js
add
and
leave
pop
cmp
add
mov
adc
xchg
out
pop
add
xchg
and
pushf
cli
mov
call
lock
pop
aaa
xlat
(bad)
fs
fbld
or
mov
mov
push
add
out
push
rcl
inc
push
rcl
xchg
mov
clc
jbe
cdq
pop
inc
sub
pusha
jne
adc
push
pop
movs
mov
sub
pop
mov
cmp
sbb
mov
mov
test
pop
ds
es
push
add
inc
pop
xlat
pop
inc
mov
push
icebp
into
and
and
add
movs
mov
dec
loop
call
xchg
(bad)
pop
ret
xor
in
(bad)
jp
dec
cwde
push
js
push
ja
mov
and
inc
movs
arpl
mov
cmp
sti
mov
mov
gs
mov
outs
loop
ja
fsubr
out
sbb
xor
cmp
test
and
inc
data16
cld
cmp
mov
out
(bad)
inc
bound
test
xchg
in
clc
and
mov
push
mov
(bad)
sbb
cs
imul
nop
arpl
addr16
sbb
dec
int3
cmp
int
xor
rol
ins
ins
test
ins
aaa
add
movs
mov
cmp
nop
mov
shr
scas
jp
push
inc
push
aad
push
aaa
enter
int3
mov
out
int
mov
mov
rcl
jp
jnp
jl
test
into
mov
jmp
(bad)
(bad)
jmp
add
inc
pop
popf
enter
jmp
clc
lods
pop
jae
cmps
popf
dec
xchg
shr
mov
inc
dec
and
add
(bad)
push
test
fiadd
daa
add
push
jge
mov
femms
sbb
push
sub
sub
repz
in
cmc
mov
(bad)
xchg
movs
divps
or
mov
and
push
mov
xlat
ds
mov
neg
or
setnp
ret
iret
add
in
xchg
inc
outs
aaa
mov
and
popf
mov
push
fadd
push
rcl
or
leave
mov
imul
lods
mov
xchg
gs
jo
xchg
inc
adc
ret
inc
fst
popf
mov
sti
xlat
mov
push
pop
push
add
inc
(bad)
and
test
add
outs
xchg
pop
dec
jp
and
jmp
iret
mov
inc
pop
inc
loopne
mov
daa
rol
mov
retf
add
imul
loope
pop
dec
(bad)
lds
push
adc
pop
jmp
mov
test
push
dec
xor
clc
shl
icebp
or
push
pop
fidiv
and
stc
ds
sub
adc
dec
jmp
dec
or
push
imul
dec
inc
shr
push
or
xchg
sub
pop
xor
arpl
cmp
jbe
data16
sbb
leave
call
js
shr
mov
fwait
mov
les
sbb
leave
fdivr
cli
test
xchg
push
push
(bad)
fstp
inc
(bad)
jg
sub
or
push
xchg
lods
adc
lock
ins
jae
inc
push
fdivr
sti
lock
pop
mov
push
fmul
inc
dec
data16
jg
movs
cmp
dec
xor
mov
mov
mov
cmp
movs
mov
test
mov
push
pop
fld
mov
cmp
jle
hlt
sub
xlat
mov
jmp
imul
je
cwde
rcr
call
adc
sbb
ins
cmp
push
push
stos
fnstenv
xor
add
and
add
neg
shr
inc
cmp
lahf
mov
and
stc
inc
mov
in
sbb
lds
push
xchg
cmp
in
arpl
nop
sub
cmp
push
int3
sbb
xor
push
test
jne
and
int
fistp
sti
pushf
xchg
into
jecxz
sub
out
jecxz
fs
mov
pop
sub
add
inc
and
add
push
cmp
je
arpl
cmps
pop
push
pop
rol
aas
stos
int3
je
add
mov
sbb
pusha
xchg
sub
push
or
sti
sti
sar
push
(bad)
(bad)
fistp
loope
dec
lds
ffreep
popa
push
loopne
outs
cmp
add
dec
or
inc
cld
mov
stos
dec
push
aaa
xchg
adc
and
jbe
mov
pop
test
mov
std
xchg
adc
push
cmp
leave
int3
std
les
xchg
out
lea
cmp
xchg
add
push
pop
or
movsx
push
xchg
sub
pop
xchg
sbb
jo
sbb
sub
(bad)
mov
xchg
xchg
push
or
jp
arpl
stos
pop
sub
gs
adc
xchg
test
mov
rcl
mov
fwait
cmps
(bad)
aam
aaa
add
mov
fisub
sbb
fsubr
scas
fs
dec
add
adc
(bad)
popa
iret
(bad)
lods
enter
mov
adc
xchg
xchg
bound
iret
fdivr
push
in
ret
xor
(bad)
outs
jmp
mov
or
sub
out
ret
jmp
cmp
cmp
sbb
dec
lods
or
leave
cld
fdivr
cdq
mov
sbb
mov
jmp
sbb
(bad)
fldenv
repz
push
push
icebp
mov
cmps
aam
shl
sub
pop
repnz
fwait
inc
(bad)
push
mov
popa
mov
xchg
add
cs
in
inc
mov
xor
push
(bad)
xor
aad
add
adc
jl
sar
push
dec
pop
fisub
bound
or
push
inc
dec
pop
jl
add
loope
ror
and
inc
lods
loopne
popa
sbb
ret
gs
add
mov
into
aad
or
mov
sahf
leave
stos
pop
popf
aam
jmp
mov
nop
jmp
cmp
les
sbb
push
push
repnz
mov
sti
push
mov
sub
push
ret
sahf
jmp
adc
rcr
mov
mov
pop
lods
or
cmc
out
xor
add
ds
mov
pop
pushf
imul
mov
sbb
xchg
add
pop
pop
xor
pop
mov
cmp
xchg
push
jp
pushf
or
sbb
inc
jecxz
mov
scas
pop
shl
imul
inc
dec
and
dec
arpl
aas
or
iret
es
test
push
ficomp
imul
les
ds
sub
jae
and
fnstenv
hlt
leave
loope
test
popa
push
jle
bound
stc
retf
xchg
cld
fs
stos
xchg
(bad)
sub
shl
mov
xchg
mov
mov
lock
mov
neg
aaa
or
push
mov
test
pop
adc
xchg
ja
push
pop
inc
jbe
(bad)
fdiv
push
jmp
mov
(bad)
or
(bad)
mov
mov
mov
ins
mov
rep
shr
mov
or
shr
sub
rol
jno
popa
xchg
pop
or
loopne
sub
je
pop
add
and
adc
cmp
lods
lods
and
daa
mov
jp
pop
pusha
mov
cli
sbb
and
in
pusha
push
jae
mov
sub
fcmove
mov
rcr
sub
adc
imul
mov
aam
stos
dec
les
add
mov
leave
pop
loope
cdq
pop
xchg
pop
sub
pop
fsubr
add
cmc
jl
xor
inc
enter
cli
mov
inc
xchg
mov
pop
inc
leave
xor
stc
imul
xchg
shr
pop
(bad)
iret
mov
mov
push
push
mov
fst
add
mov
(bad)
xchg
stos
dec
mov
ins
in
and
les
or
mov
cmp
retf
mov
aad
call
sub
cwde
in
dec
int
(bad)
fcmovnbe
ret
jno
cmps
jecxz
jle
enter
adc
xchg
fadd
cmps
retf
jo
adc
in
mov
pop
pop
or
xor
mov
std
daa
imul
and
daa
jmp
jne
sub
dec
cmc
xchg
dec
xor
jno
cmp
out
mov
mov
jmp
repz
jbe
jl
dec
shl
inc
jns
nop
and
jp
cdq
mov
lds
vcomisd
frstor
push
fcomp
mov
sbb
or
nop
pop
xor
ret
clc
cmp
clc
adc
jle
adc
outs
clc
jl
int
daa
adc
xor
movs
ins
inc
test
loope
ret
inc
mov
push
aaa
xchg
(bad)
mov
xlat
sub
lea
xchg
test
(bad)
mov
rcr
pop
sar
into
nop
imul
loopne
sbb
jmp
cmp
(bad)
fistp
add
jl
cmp
adc
xor
cdq
mov
cmp
pop
gs
repnz
jne
dec
xchg
add
jl
mov
jmp
cmps
sbb
outs
pop
gs
(bad)
sub
das
xchg
jo
jbe
popf
push
and
mov
retf
add
lods
and
and
jle
mov
add
push
sub
in
stc
es
daa
aad
mov
add
push
cmp
push
mov
cmps
int
rcr
lods
inc
icebp
pop
and
and
sbb
jnp
cli
push
pushf
add
(bad)
cmp
jmp
out
lock
outs
sub
sub
(bad)
sar
mov
movs
jne
jmp
sub
popa
inc
pop
mov
pop
cmps
xor
sub
xchg
and
jecxz
inc
rcr
loope
push
and
pop
push
cmc
test
neg
xchg
mov
adc
imul
cmp
retf
inc
inc
fcom
mov
jno
mov
pop
cmp
shl
retf
xchg
(bad)
cdq
or
icebp
and
mov
add
and
repz
psubw
jne
adc
xor
retf
fldenv
cmp
aad
aaa
ds
dec
bound
ret
mov
movs
inc
jmp
mov
xchg
xor
aas
sub
sbb
int
lea
mov
mov
loop
xchg
in
fstp
fisttp
mov
icebp
push
ins
push
js
gs
retf
inc
sbb
or
or
addr16
lahf
jp
mov
outs
xchg
mov
sti
aad
inc
in
fisubr
nop
dec
call
call
xor
sar
shr
mov
lods
outs
shr
scas
jo
pop
dec
xchg
cld
sub
mov
repz
fmul
cli
cmp
cmp
cmp
mov
mov
(bad)
adc
cmp
add
and
mov
aad
pop
mov
dec
mov
xor
out
leave
arpl
mov
xchg
test
mov
shl
cmp
jmp
js
fdiv
pop
(bad)
fbld
icebp
fistp
(bad)
push
retf
jns
icebp
cdq
sub
or
retf
jp
lea
xchg
jbe
adc
sbb
inc
inc
shl
inc
push
push
sub
xchg
test
imul
pop
inc
test
fadd
jb
out
and
fucomi
dec
sub
je
cmc
sbb
out
in
jg
in
ins
add
mov
ss
sub
jecxz
loop
inc
xchg
fisub
mov
push
loop
mov
gs
jl
in
push
out
pop
cmc
dec
pop
or
sbb
xchg
lods
(bad)
int
sbb
and
fwait
mov
ret
push
rol
fs
cmp
cwde
arpl
push
jns
push
inc
popf
lods
mov
sbb
out
mov
mov
fcomp
or
mov
imul
mov
inc
push
xchg
push
and
jae
mov
cmc
out
sub
addr16
aam
cmps
(bad)
(bad)
movs
cdq
mov
int
cld
outs
push
add
imul
cmp
outs
cmps
shl
sub
in
xchg
addr16
adc
push
lock
jne
aam
test
jmp
mov
mov
pushf
xor
in
sar
popf
cs
jne
mov
imul
adc
int3
jl
stos
push
xor
imul
jl
fmul
push
nop
jle
adc
cmc
add
gs
jo
push
push
in
sbb
aas
jbe
push
pop
cdq
xchg
lss
pop
es
in
shr
pop
pop
xlat
mov
sub
dec
jmp
dec
xor
mov
cmc
inc
sbb
mov
arpl
cdq
pop
out
ror
and
add
jmp
xchg
push
lea
sti
mov
mov
add
les
arpl
ret
(bad)
mov
dec
mov
fistp
shl
adc
popf
push
scas
and
push
dec
mov
jmp
push
aam
jbe
nop
dec
into
into
cdq
push
hlt
xor
mov
mov
inc
cmp
pop
shl
jnp
test
xlat
icebp
push
or
test
sbb
mov
mov
in
sbb
in
xor
and
ja
pop
ss
sub
push
jecxz
inc
fstp
and
sbb
xor
mov
jg
inc
cmp
cmp
push
fincstp
sahf
fmul
mov
out
xor
int
and
and
xor
inc
(bad)
test
lods
jb
leave
loopne
cmps
loop
lods
and
pop
out
aaa
push
mov
fidivr
adc
jg
mov
out
xchg
movs
test
lock
fist
(bad)
fmul
pop
int
out
call
mov
pop
jp
in
mov
jb
push
sub
cmp
out
and
mov
mov
push
dec
cmp
cmp
xor
or
mov
pop
pop
pop
dec
retf
inc
sysret
movs
neg
call
lock
into
adc
in
xchg
mov
shr
sub
clc
dec
(bad)
das
mov
pop
stc
stos
repnz
pop
mov
stc
cmp
adc
ret
add
jmp
out
leave
inc
stc
call
cmp
cmp
stos
lods
sbb
xor
les
loop
mov
mul
jmp
adc
stc
repz
cmc
clc
add
ins
imul
inc
jb
sar
out
jl
adc
cmp
dec
mov
xchg
pop
pop
shl
fstp
jg
pop
push
mov
js
mov
fimul
adc
dec
cwde
sub
push
or
sub
call
ret
js
push
dec
fsubr
xchg
repz
int
pop
inc
xor
cdq
out
out
div
cmp
stc
push
stc
inc
dec
dec
pop
int3
xor
and
adc
jbe
push
retf
mov
loopne
adc
push
jbe
ja
cld
stos
or
cld
lock
inc
fistp
ror
jge
stc
fisub
dec
jecxz
ds
pop
pop
loope
(bad)
mov
jae
push
jmp
sub
popa
adc
mov
rcl
int3
sub
jg
cmps
mov
inc
sar
mov
mov
xchg
sub
mov
pop
mov
in
push
jmp
push
xor
jg
pop
dec
pop
adc
sub
popa
adc
pushf
out
adc
aad
(bad)
xchg
movs
pushf
xor
sub
jae
pop
bswap
imul
cli
cld
push
fcmovu
xchg
in
and
add
repz
sbb
sbb
xor
ficom
cwde
xor
sub
xchg
pop
leave
inc
aaa
loopne
retf
pop
movs
xor
je
mov
inc
lods
xchg
push
rcl
push
cmp
mov
cmp
push
inc
cmp
fs
xor
and
movs
jle
fwait
mul
dec
mov
xor
adc
fbld
gs
fnstcw
stos
outs
sbb
rcl
push
jbe
push
adc
out
ror
lods
cs
xchg
outs
xor
jp
out
ds
fs
add
xor
cwde
lahf
mov
sbb
aas
pop
pusha
repz
fild
pop
jg
sbb
push
aam
adc
scas
jg
test
fst
sub
cmps
scas
ja
into
mov
and
arpl
add
adc
and
cld
inc
and
xchg
dec
pop
inc
mov
ins
lock
pushf
test
mov
repz
fimul
jecxz
push
fidiv
(bad)
je
ins
and
push
dec
cmp
jne
outs
ds
xchg
cld
mov
adc
or
fdiv
fwait
into
add
ret
jge
mov
adc
push
jno
push
cmp
mov
dec
ins
cs
out
pop
ret
lods
cli
retf
xor
mov
inc
xor
clc
push
or
push
sub
sub
and
push
movs
fdivrp
stc
and
js
mov
inc
mov
jmp
dec
mov
push
sbb
cmp
lock
out
adc
ja
jp
retf
in
out
inc
push
push
sti
(bad)
fidivr
adc
mov
fisub
ds
loope
xchg
sub
mov
popf
or
inc
jns
mov
inc
inc
sub
loope
(bad)
pop
push
mov
fiadd
cld
inc
nop
add
out
hlt
inc
push
dec
fcmovnu
std
loopne
ss
repnz
dec
sbb
sub
vpunpcklbw
xor
jmp
or
mov
push
call
repnz
lds
ins
pop
clc
movs
jge
push
test
fcomp
out
pusha
inc
jmp
adc
sbb
outs
push
mov
rol
lahf
pop
or
stc
iret
push
mov
cmp
scas
(bad)
sahf
loope
into
repnz
ins
add
fisttp
scas
cmps
std
cmp
sbb
lods
cmp
sub
or
repnz
xchg
xchg
pop
pop
imul
out
mov
push
pushf
adc
sti
lock
sub
jae
ds
adc
stos
cmp
xchg
shl
(bad)
lods
fmulp
pop
(bad)
push
adc
test
mov
or
mov
adc
and
mov
xlat
sbb
xor
pop
sahf
mov
std
sub
xchg
cld
data16
sub
int
(bad)
shl
jns
jb
dec
sbb
and
and
std
inc
or
pop
mov
daa
mov
xchg
mov
rcr
(bad)
and
push
(bad)
ja
xchg
xchg
sub
jae
fs
xchg
out
(bad)
adc
fild
shl
xor
adc
pop
call
xchg
inc
adc
mov
out
push
dec
xchg
sbb
out
aas
and
in
outs
mov
sub
push
stos
lea
or
push
add
fld
xor
cmp
in
push
rol
in
pusha
inc
pop
cli
fisttp
out
jge
stc
imul
jae
adc
dec
xor
cs
jb
inc
adc
pop
arpl
pop
arpl
dec
jmp
stc
pushf
mov
fidivr
mov
in
push
test
add
mov
jbe
ins
pop
xchg
push
mov
scas
jmp
jb
add
mov
inc
(bad)
push
fdiv
dec
leave
in
bound
in
addr16
fsub
hlt
aad
pop
dec
adc
icebp
fucomip
ja
call
push
cmp
xor
xor
mov
xchg
jns
cmp
mov
fld
sbb
ins
ins
push
jae
pushf
pop
jo
pusha
daa
iret
stc
dec
ror
mov
sub
in
outs
aas
mov
dec
rol
gs
or
mov
jl
adc
in
cmc
in
and
jae
and
push
mov
pop
adc
les
fisttp
xchg
in
and
jmp
je
xlat
scas
sahf
push
push
out
mov
aaa
jle
push
dec
dec
popf
sub
loop
push
jns
dec
lods
ja
jmp
popa
mul
xchg
pushf
jmp
(bad)
je
xchg
hlt
popa
es
inc
imul
pop
xor
mov
enter
cld
pop
(bad)
jle
stos
mov
pusha
mov
sbb
add
push
cs
xlat
xchg
(bad)
mov
loopne
fimul
addr16
fs
jge
push
ret
call
mov
loope
js
pop
scas
mov
cmp
outs
jae
fdiv
shl
mov
iret
lods
sub
aam
xor
sub
dec
out
loop
xor
shl
aad
cmp
push
xchg
lods
dec
sahf
cmp
loop
jmp
sbb
into
aas
add
xchg
add
(bad)
mov
xor
add
scas
sub
cld
adc
jbe
cmp
ins
out
sbb
jp
mov
xchg
or
test
pop
gs
ds
jno
ficomp
sbb
popa
inc
sub
mov
push
adc
sbb
pop
inc
imul
call
mov
dec
movs
out
jnp
(bad)
outs
(bad)
fwait
js
sub
test
dec
xor
sub
jg
nop
ja
xlat
mov
pop
fimul
inc
cmp
aas
push
jbe
push
push
ins
fwait
test
mov
add
es
movs
retf
ror
es
das
inc
mov
cmp
dec
aad
mov
js
shl
jno
leave
inc
das
mov
test
loope
test
mov
jecxz
in
iret
xchg
or
lock
out
js
hlt
retf
inc
sub
mov
mov
xor
sti
add
loope
mov
jne
jmp
pop
loop
pop
cdq
daa
shr
sub
jl
fidivr
dec
adc
das
adc
inc
les
push
pop
cmp
mov
sbb
jnp
xor
jbe
adc
fdivr
iret
out
ss
pop
aaa
jbe
mov
sub
popa
int3
jno
data16
dec
les
inc
cwde
cwde
js
jo
sbb
mov
xlat
mov
mov
cmps
xor
fiadd
jbe
xor
mov
adc
add
out
loopne
(bad)
pusha
movs
loope
adc
enter
mov
js
les
loop
(bad)
sub
hlt
int
xchg
pop
and
jecxz
cmps
lds
addr16
pop
jle
hlt
fwait
push
mov
and
fcomp
jo
mov
sub
cmc
shl
xchg
(bad)
fcomip
in
popf
out
(bad)
icebp
mov
push
pop
sub
mov
xor
ds
mov
stc
(bad)
mov
push
jnp
mov
push
push
(bad)
cmp
xchg
out
xchg
imul
jmp
jne
popf
ret
cmp
ret
push
stos
cmc
inc
sbb
xor
cmp
int3
(bad)
xchg
jg
call
test
ja
pop
imul
sar
mov
scas
repz
xor
fwait
sub
mov
dec
enter
adc
jmp
cwde
or
dec
into
mov
cld
addr16
fst
ffreep
stos
xchg
das
mov
(bad)
fdivr
pop
fadd
into
pushf
sbb
fisttp
sub
pop
push
cmc
sahf
cmp
daa
cmp
std
sub
out
pop
movs
push
jge
clc
add
out
rol
mov
not
jmp
add
cmp
shl
xchg
mov
xchg
and
ja
ds
dec
data16
push
mov
and
sub
gs
jmp
out
(bad)
adc
scas
ret
inc
sbb
mov
sub
aas
inc
xchg
ds
pop
test
sbb
and
sub
dec
shl
or
or
and
pushf
xor
call
cmp
inc
(bad)
xor
(bad)
mov
cli
xlat
xchg
cdq
out
(bad)
loope
sbb
jb
mov
mov
push
cmp
ret
dec
xchg
pop
inc
shl
adc
(bad)
jmp
pop
push
lahf
mov
cmps
call
mov
mov
aaa
aam
dec
jge
in
inc
jo
repnz
sbb
adc
mov
ja
xchg
xchg
inc
inc
nop/reserved
push
add
xor
or
mov
push
out
sbb
inc
out
cmp
outs
mov
outs
(bad)
mov
mov
popa
dec
push
js
push
inc
push
xchg
adc
(bad)
(bad)
jmp
fcomp
(bad)
pop
adc
dec
sbb
xchg
pop
inc
stos
int3
jb
out
pop
adc
jno
sbb
ja
shl
in
push
pop
scas
jecxz
sbb
jnp
sub
(bad)
call
lea
mov
push
mov
inc
test
sub
mov
data16
aaa
cmp
in
adc
xchg
xor
sbb
(bad)
popa
mov
jne
xchg
int3
adc
imul
aas
stc
ret
push
das
cmp
popf
ror
ret
xor
sbb
mov
gs
js
loop
icebp
rcr
push
sub
mov
sub
adc
(bad)
cmc
fwait
pushf
imul
scas
push
shr
data16
jl
mov
and
ins
dec
sub
and
dec
push
repnz
sbb
mov
call
je
dec
and
retf
arpl
dec
xor
into
dec
mov
dec
stc
cmp
add
ret
mov
sti
dec
inc
xchg
scas
add
jb
leave
mov
rcr
pop
fldenv
je
daa
sbb
(bad)
sbb
mov
mov
cmc
cmp
adc
call
fild
lea
pop
lea
push
pop
xchg
pop
jmp
push
or
pop
mov
push
outs
mov
enter
fld
jmp
add
cmc
push
das
nop
push
and
andps
mov
call
cmp
(bad)
mov
ds
xor
fld
es
fsub
jmp
xor
lock
jp
fisub
shr
mov
xor
mov
cmp
loope
sbb
repz
sti
imul
fisttp
push
jo
scas
es
pop
loop
loop
mov
(bad)
add
push
cdq
cmp
adc
add
adc
dec
out
mov
(bad)
xchg
or
cmp
inc
aaa
repnz
movs
test
adc
mov
mov
jmp
jmp
jbe
arpl
arpl
retf
push
in
test
xchg
rol
cdq
jbe
(bad)
cmps
into
ret
imul
data16
lea
dec
add
inc
lahf
inc
test
jno
xor
mov
ret
mov
test
pop
inc
pusha
xchg
cmps
and
and
ds
lock
hlt
(bad)
lods
xchg
aaa
cld
mov
(bad)
popf
inc
sbb
jg
jo
adc
ffreep
xchg
pop
xchg
(bad)
sub
pop
call
sub
jl
mov
inc
jmp
jne
cmps
(bad)
cmp
jecxz
es
daa
fisubr
dec
data16
not
int
sbb
fs
jecxz
inc
adc
or
or
inc
popa
dec
mov
pop
xor
xchg
test
mov
mov
cmp
mov
(bad)
inc
test
push
xor
outs
lea
dec
outs
inc
adc
jmp
les
mov
push
mov
dec
push
jge
xor
ja
xor
clc
or
scas
push
(bad)
nop
adc
dec
ret
loope
ja
inc
fadd
aas
fwait
push
inc
xchg
test
popa
sahf
pop
xchg
in
and
aam
mov
mov
shl
cld
ret
sub
xor
pop
jg
sub
and
add
ds
push
mov
(bad)
ret
repz
add
rcl
scas
xlat
mov
mov
push
loop
jmp
popf
(bad)
ja
out
sub
retf
(bad)
pop
out
fstp
mov
dec
mov
ds
pop
mov
or
push
iret
add
or
stos
xchg
xor
and
mul
or
stc
addr16
imul
mov
ret
fsub
or
call
adc
or
add
pop
iret
jmp
shl
call
cmp
cwde
mov
in
pushf
cli
mov
cmp
mov
and
js
cwde
mov
shl
jne
cdq
pop
push
jecxz
pushf
std
test
pop
iret
mov
add
(bad)
ficom
ds
inc
(bad)
fstp
dec
mov
xchg
out
mov
dec
movs
(bad)
sbb
dec
add
call
xchg
ds
lods
jp
jbe
and
push
inc
pushf
in
je
mov
dec
dec
(bad)
push
(bad)
outs
ror
les
xor
jmp
jge
sbb
pop
jmp
sti
mov
xchg
cli
mov
xchg
jge
sub
xor
dec
sbb
xchg
xchg
mov
xchg
xchg
call
icebp
iret
std
popa
stc
and
out
push
cmp
(bad)
scas
call
cs
fistp
addr16
push
ficomp
jecxz
dec
lods
test
movs
dec
mov
fdiv
fistp
stc
mov
sbb
das
cmps
shr
(bad)
jp
repz
inc
push
pop
mov
jle
loop
lahf
mov
mov
mov
add
pusha
addr16
retf
inc
mov
mov
pop
mov
in
adc
add
test
jno
ret
call
cmp
mov
dec
xchg
popa
dec
jp
cmp
cli
in
std
cmps
std
aam
ss
jecxz
jecxz
js
ins
imul
call
cs
adc
sbb
mov
mov
pop
(bad)
dec
or
push
popf
cvttps2pi
xor
jge
sub
cmp
pop
mov
xchg
pushf
daa
les
pop
fs
mov
dec
sahf
sahf
push
adc
enter
or
push
ror
inc
dec
cmps
ss
fwait
push
xchg
adc
mov
jne
xor
in
jl
xor
sbb
push
lock
push
mov
mov
sar
mov
add
retf
mov
cmc
(bad)
fld
mov
pop
(bad)
dec
mov
test
cmp
or
mov
out
sub
ror
(bad)
cmps
je
(bad)
enter
mov
mov
xor
adc
xchg
in
or
sahf
push
cmps
cmp
inc
jno
fs
add
xchg
cmp
icebp
jp
dec
dec
arpl
jg
das
push
dec
push
cmps
fmul
sub
xlat
(bad)
popf
call
push
jmp
push
sub
push
mov
rcl
fidiv
xor
xchg
add
sbb
ins
push
push
mov
(bad)
jns
xlat
xor
inc
shl
mov
jns
cld
call
push
mov
inc
daa
cmp
mov
in
adc
(bad)
sahf
adc
cmp
jge
cmp
jecxz
fnstsw
ins
xchg
leave
lahf
out
dec
(bad)
cld
cli
and
outs
xchg
cmp
sbb
jmp
cmp
sub
cmp
cmp
adc
nop
(bad)
ja
sub
push
add
dec
sahf
and
pop
ins
jp
pop
mov
daa
jmp
inc
es
pop
hlt
lea
sub
push
loope
call
adc
mov
adc
pop
jge
xlat
repz
cwde
cli
nop
je
call
ds
int3
int3
stc
(bad)
fcomip
loopne
lock
ret
(bad)
js
sub
icebp
imul
add
pop
jno
repnz
pushf
fwait
add
adc
js
arpl
outs
out
push
lds
or
(bad)
jle
rcr
mov
mov
fiadd
dec
push
xchg
scas
ret
push
xor
adc
mov
xor
jns
jl
dec
rcl
call
cwde
in
popf
lahf
mov
push
fstp
sub
ins
mov
jp
cmp
out
or
mov
xor
adc
xor
loope
loope
pop
imul
jnp
outs
in
jb
inc
mov
sbb
and
sbb
or
retf
pop
inc
add
push
and
jmp
inc
out
call
mov
jns
fs
out
and
popf
lea
pop
pusha
aas
jne
ins
add
sbb
repnz
sahf
cs
shl
popa
xor
push
sbb
jae
or
out
or
icebp
aas
push
cmc
stc
cmp
or
push
push
push
jge
push
(bad)
fadd
in
shl
movs
ins
stos
sbb
(bad)
mov
lods
adc
lods
mov
lods
loopne
cmp
repz
nop
sub
lods
faddp
mov
fwait
mov
jp
sbb
fbld
xchg
jnp
inc
pop
jo
cmp
push
es
(bad)
pop
push
xchg
div
cmp
add
xlat
and
inc
add
jl
jmp
fdiv
cdq
xchg
and
add
sar
or
(bad)
ja
lods
and
sub
js
fist
xor
add
mov
mov
stos
sahf
jl
mov
jno
cs
jecxz
pop
in
pop
mov
inc
add
int3
cmp
clc
jbe
iret
loopne
sbb
ja
sbb
push
push
xchg
push
xor
int3
sbb
les
push
mov
add
pop
add
xchg
test
jbe
cmp
sub
dec
mov
xor
push
mov
mov
bound
mov
rcr
lahf
aam
and
cmc
pop
sub
sbb
fiadd
cli
pop
es
je
push
mov
(bad)
jmp
std
sbb
mov
pop
out
adc
popa
rcl
jbe
in
cmc
xor
mov
add
jecxz
push
add
dec
mov
mov
xor
cmp
adc
call
icebp
dec
popf
lock
xchg
xor
add
cmp
stos
xchg
test
pop
jns
outs
pop
pushf
pushf
(bad)
hlt
xor
pop
cmp
aaa
jecxz
adc
out
mov
scas
mov
pop
xor
bound
or
xchg
lock
push
sbb
icebp
cdq
sbb
out
mov
jnp
pop
fldcw
xchg
imul
cmp
in
je
test
xor
or
jae
or
dec
pushf
dec
dec
mov
je
out
les
repz
dec
sub
leave
mov
adc
ret
dec
enter
jecxz
mov
jne
shl
and
add
mov
ud0
cld
pop
xor
neg
pop
and
adc
jno
inc
and
mov
repnz
hlt
cwde
(bad)
pop
push
and
pop
adc
pause
inc
pop
pop
or
arpl
int3
adc
xor
lods
in
shl
inc
out
inc
jno
push
lods
sbb
(bad)
scas
push
movs
lods
out
int
jl
inc
sbb
and
push
cmps
cmp
ret
imul
jnp
and
fild
mov
inc
cwde
imul
add
fwait
mov
(bad)
(bad)
jmp
fbstp
adc
inc
cmp
popa
xor
retf
lock
jnp
stos
mov
xchg
call
into
loopne
and
pop
push
push
aaa
dec
fcmovu
test
fsub
retf
xor
ds
pop
pushf
sbb
mov
repnz
movs
cmp
add
fnstenv
out
push
cmp
xchg
mov
jmp
ja
jmp
mov
dec
push
cs
adc
dec
mov
pushf
add
(bad)
jmp
adc
inc
dec
in
and
push
ss
popa
imul
sbb
xor
imul
ret
sbb
cmp
xor
mov
aaa
iret
jecxz
addr16
jb
daa
(bad)
push
in
or
jge
into
dec
sahf
cmps
push
mov
cmp
adc
in
outs
out
xor
inc
cli
lahf
mov
push
pusha
repz
mov
jmp
ss
dec
jo
jb
ss
cmp
(bad)
mov
test
push
ficom
jae
arpl
push
ds
xchg
jno
stos
pop
and
mov
sub
jns
jecxz
aad
push
jmp
sbb
sbb
push
ins
xor
sub
pop
dec
aam
cmps
cmp
mov
mov
jp
jae
dec
rol
fst
sahf
push
or
mov
das
xchg
add
or
in
jge
jle
ins
out
dec
fdivr
mov
mov
cwde
sbb
ret
inc
jg
sahf
(bad)
xchg
(bad)
push
call
xchg
push
int
inc
(bad)
dec
mov
jb
and
jg
add
adc
nop
ins
mov
jo
mov
add
(bad)
lods
xchg
adc
out
xchg
in
cmp
in
daa
mov
out
setne
leave
repz
xor
outs
mov
or
loopne
push
pop
stos
loopne
(bad)
data16
pop
stc
or
test
loope
popa
bound
movs
popf
cdq
xchg
aas
cs
and
(bad)
(bad)
pop
stc
inc
mov
sub
cmps
push
retf
fdivr
adc
sub
sbb
inc
shr
mov
ret
fdiv
cmp
mov
or
lea
dec
push
fld
pop
aam
jmp
inc
push
dec
icebp
sbb
scas
mov
out
add
or
inc
xchg
les
or
repz
aaa
(bad)
(bad)
add
mov
mov
out
pop
xchg
add
push
hlt
mov
cmp
out
cs
mov
adc
(bad)
cwde
pop
fwait
loopne
dec
cmp
pop
push
and
cmps
arpl
lock
pop
mov
xlat
inc
mul
pop
and
(bad)
fwait
jbe
(bad)
in
or
jno
sub
mov
les
cmp
mov
outs
jp
lea
jo
ss
mov
add
mov
mov
es
and
popa
popa
frstor
shr
adc
outs
or
cmp
icebp
lock
mov
out
mov
scas
(bad)
jl
push
xchg
in
retf
cwde
mov
adc
jmp
lods
adc
dec
in
dec
mov
in
mov
lea
cwde
pop
shr
push
sahf
lds
sub
jl
rol
fstp
mov
mov
xchg
retf
fwait
xchg
test
or
outs
mov
mov
inc
fmul
nop
sti
test
mov
xchg
push
iret
xor
pop
jmp
mov
inc
cmp
pushf
cmp
dec
ror
std
ror
pop
jmp
pop
adc
or
in
inc
adc
push
jl
xlat
mov
frstor
inc
add
pop
dec
mov
arpl
inc
mov
mul
sbb
and
or
add
cld
fwait
out
xor
int3
push
mov
retf
jns
mov
mov
push
or
stos
mov
ins
add
mov
and
daa
mov
out
and
xor
sub
enter
in
jb
test
cmp
xor
sub
ins
push
pop
dec
in
sbb
mov
(bad)
(bad)
xor
push
in
add
out
and
adc
push
int3
in
cmp
mov
sbb
xor
dec
hlt
addr16
sar
mov
and
stos
jle
sub
enter
das
into
pusha
mov
cmp
sub
int
sub
dec
mov
int3
jecxz
mov
inc
repnz
adc
or
scas
repz
pop
int3
add
xchg
out
(bad)
xor
cmc
fs
ret
clc
retf
test
xchg
setp
pop
inc
(bad)
out
std
xchg
pop
mov
gs
sahf
mov
cmp
pop
les
lods
add
arpl
sti
mov
jmp
xor
mov
push
jo
sub
cdq
in
mov
mov
mov
mov
mov
fisttp
or
ins
in
sbb
pop
push
je
inc
fdivp
mov
loope
rcr
cli
bound
mov
test
dec
lea
(bad)
loopne
nop
imul
lea
pop
mov
cmc
stc
daa
arpl
popa
retf
xchg
adc
mov
pop
mov
add
aad
(bad)
fcomp
mov
clc
pop
stos
push
cdq
add
xor
cmp
mov
imul
adc
test
imul
popa
arpl
jns
jno
aad
div
ja
mov
sti
adc
or
pop
mov
inc
mov
add
sti
xchg
and
aam
mov
or
dec
scas
mov
jecxz
loop
mov
xchg
aas
cwde
jmp
or
addr16
outs
push
scas
sbb
in
test
add
push
mov
xor
mov
xchg
popa
adc
fdivr
fld
push
dec
sub
mov
jno
loope
enter
add
xchg
push
add
cmp
push
(bad)
adc
fwait
rol
aad
loop
fstp
dec
xlat
inc
(bad)
(bad)
sahf
sub
xor
fwait
daa
dec
fs
and
out
jecxz
mov
mov
push
xchg
movs
jg
dec
sub
mov
rcl
pushf
loopne
or
mov
inc
xchg
or
ss
sub
pushf
pop
adc
(bad)
dec
fmul
push
fistp
pop
repnz
and
test
xor
mov
sub
(bad)
repz
imul
sahf
leave
retf
out
fs
sahf
add
fidivr
pop
lods
inc
scas
pop
add
xchg
sbb
adc
cmp
cwde
sub
ins
dec
jmp
fidivr
les
lods
aad
ret
aam
add
cmps
sbb
adc
mov
add
and
lahf
mov
xor
fistp
test
xchg
cmps
(bad)
sub
adc
fcomp
imul
sbb
sbb
lea
int
mov
out
ins
leave
mov
ja
jmp
(bad)
sub
stos
pop
out
loop
and
or
loop
inc
add
xchg
mov
adc
imul
shl
push
xor
test
sbb
into
pushf
aam
neg
fbld
sbb
fbld
pop
aam
pop
cmc
hlt
in
iret
xchg
repnz
mov
and
sub
cs
adc
aas
jns
inc
arpl
(bad)
adc
mov
rcl
outs
mov
(bad)
mov
sbb
sub
add
jae
dec
ja
div
out
jns
(bad)
dec
sar
inc
movs
stos
mov
and
clc
sub
push
popa
not
ss
icebp
mov
push
sbb
dec
leave
cmps
ss
call
imul
inc
cmp
xor
outs
in
add
or
xor
int
mov
xor
pop
dec
and
jge
sbb
mov
sar
mov
jecxz
aaa
mov
test
outs
test
leave
ins
lods
pop
xchg
pop
push
push
dec
push
mov
retf
icebp
leave
repnz
mov
dec
lods
(bad)
hlt
shl
adc
imul
sbb
add
jmp
loop
mov
mov
adc
in
xchg
push
pushf
jmp
loope
and
and
adc
mov
cmp
lods
(bad)
sti
xchg
fmul
mov
iret
cld
bound
push
inc
sbb
xlat
sbb
dec
in
hlt
scas
dec
mov
add
scas
nop
jnp
push
sti
icebp
push
and
or
pop
pop
fdiv
std
cmp
or
outs
test
frstor
jge
rol
mov
popa
nop
lods
pop
loope
jne
or
sbb
jbe
ins
push
xchg
ss
sbb
fstp
scas
push
pusha
dec
sahf
xor
mov
xor
mov
dec
in
mov
push
cld
xchg
sti
test
aas
adc
je
test
mov
mov
add
xor
fcomp
loop
loopne
rcr
xchg
push
ins
xor
shl
rcr
push
mov
mov
stc
jne
repz
(bad)
mov
pop
sbb
cwde
pushf
xchg
in
jecxz
xlat
lds
or
ret
push
adc
je
(bad)
ds
push
pop
push
cmp
shl
add
test
out
sub
into
ret
or
(bad)
xchg
or
outs
push
(bad)
mov
mov
fiadd
push
pop
sbb
pusha
loope
inc
dec
int
mov
aam
pop
cmp
rcr
jno
add
pop
push
add
cmps
mov
fisttp
xor
and
sbb
jne
imul
sbb
out
mov
retf
nop
pop
adc
adc
cmp
and
push
xchg
in
test
ds
ret
rcr
mov
inc
(bad)
jecxz
ror
xchg
add
mov
ret
cmp
leave
rcl
lods
aam
jnp
push
out
mov
cmc
stos
inc
nop
xchg
ds
ds
add
dec
dec
arpl
adc
sub
pop
xchg
mov
cmps
adc
std
jp
retf
push
cs
(bad)
jbe
fidiv
ja
mov
jnp
push
push
push
push
aaa
add
sahf
imul
shl
stos
test
adc
dec
(bad)
scas
dec
(bad)
fimul
xor
adc
sbb
sbb
pop
sub
(bad)
xchg
lods
pop
jge
lods
pop
pop
lds
jge
data16
sar
xor
nop
mov
pop
retf
jno
repnz
ficomp
xor
add
lds
dec
gs
icebp
or
test
xor
or
and
xchg
xchg
cmps
xchg
push
mov
cmps
pop
arpl
in
hlt
into
ja
int
aaa
xor
fwait
jmp
fwait
add
push
mov
and
pop
in
sub
push
pop
pop
cmp
(bad)
and
cmc
mov
fwait
(bad)
mov
fstp
jmp
dec
in
add
div
les
mov
dec
adc
or
mov
outs
movs
icebp
add
jle
pop
xchg
xor
sti
shr
xor
cwde
or
cmp
ds
cmp
mov
iret
sub
retf
rcl
adc
sbb
xchg
ja
ret
mov
sbb
jg
push
or
inc
inc
dec
push
test
stos
in
pop
dec
outs
push
ret
jns
lods
pop
or
ins
inc
shl
(bad)
jmp
or
jle
sub
icebp
lea
or
call
(bad)
out
jmp
je
dec
push
shr
mov
repnz
sar
popa
xchg
div
dec
mov
fbstp
call
adc
inc
shl
cmp
scas
cmps
cmp
addr16
repnz
pop
push
adc
das
jmp
cmp
cmp
fld
dec
(bad)
lods
jg
retf
sub
fstp
rdmsr
push
std
add
add
in
xor
push
ja
es
pop
(bad)
stc
push
mov
into
adc
ja
add
cs
(bad)
push
lock
push
mov
xchg
scas
push
retf
sub
in
add
sbb
out
jno
and
cwde
add
and
rcl
jns
adc
mov
loope
pop
ss
inc
mov
je
mov
sbb
inc
jmp
(bad)
loop
loop
mov
shr
ret
imul
dec
ins
and
jne
stos
mov
push
add
dec
xor
loop
mov
addr16
push
sub
jns
cld
xor
cld
mov
mov
jle
out
mov
in
gs
and
pop
pop
pop
cld
loopne
push
xor
dec
add
or
jns
repz
test
sahf
dec
xor
sbb
mov
or
js
leave
psubq
xchg
and
or
push
xchg
test
gs
outs
(bad)
js
movs
sub
lahf
add
jg
cld
in
test
ins
and
sbb
cmp
fdivrp
adc
imul
add
(bad)
cmp
(bad)
or
leave
dec
pop
data16
jb
test
xor
or
test
mov
pop
mov
leave
or
retf
call
jmp
add
pop
in
and
mov
enter
add
cmp
loopne
push
in
push
inc
enter
sti
and
jge
xchg
pop
mov
xor
arpl
ret
mov
(bad)
idiv
enter
in
jnp
jbe
mov
retf
sub
pop
daa
(bad)
xchg
ret
std
ror
add
scas
inc
xchg
jp
cmp
nop
mov
dec
ins
fs
push
cmps
mov
test
out
inc
xchg
sbb
xchg
clc
jb
push
pushf
aaa
pop
mov
icebp
and
dec
je
ss
sbb
fsubr
shl
retf
inc
xchg
test
out
cmp
mov
xor
mov
fcmovb
(bad)
mov
or
adc
sbb
push
cld
mov
mov
add
adc
fild
add
movs
js
scas
xchg
(bad)
mov
retf
jae
out
loop
lahf
ja
inc
jb
rcr
push
or
jnp
repz
adc
or
pop
pushf
push
jle
bound
jg
mov
nop
xchg
out
pop
xlat
test
or
jp
hlt
in
cs
mov
jg
mov
pop
lock
sub
push
inc
cmps
lods
fs
sub
shl
scas
jg
mov
xchg
sbb
and
(bad)
scas
arpl
pop
cld
xor
jbe
icebp
pop
bound
mov
fld
mov
or
es
sub
loop
pop
pop
adc
ror
test
lods
(bad)
(bad)
ret
lods
ror
dec
or
xchg
es
test
mov
loopne
aaa
cmp
xor
inc
clc
in
fistp
sub
mov
(bad)
clc
sub
jne
push
sahf
push
inc
inc
and
je
xlat
xor
call
cmps
xchg
jnp
aaa
pop
push
dec
mov
pop
mov
xchg
pop
neg
xchg
adc
jo
out
cmp
or
inc
ss
clc
xor
lahf
pushf
data16
enter
or
icebp
popa
push
movaps
inc
call
fild
mov
movs
call
sub
in
mov
mov
sti
mov
popf
imul
push
push
jae
push
add
mov
mov
call
xlat
aam
jge
push
retf
outs
add
pop
les
in
js
lahf
shr
mov
sbb
out
gs
fistp
test
fistp
fisubr
jmp
add
outs
push
je
jnp
mov
xchg
jp
daa
inc
call
mov
fadd
and
das
sub
and
and
daa
jae
fsub
lea
repnz
inc
enter
adc
sub
lock
adc
ja
out
sub
jbe
sub
cmp
cdq
clc
adc
xor
jg
pushf
pop
test
ja
mov
xchg
imul
and
repnz
leave
bound
mov
adc
add
sub
imul
add
shl
popf
cmps
mov
xchg
mov
inc
stos
jmp
dec
fcom
fld
js
scas
mov
sub
dec
stc
add
rol
cmp
xchg
int3
pcmpeqb
dec
xchg
mov
test
xchg
xchg
sub
stc
and
xchg
add
je
jmp
pandn
ins
xchg
cmps
mov
outs
add
or
arpl
(bad)
xor
icebp
cwde
adc
call
pop
sar
aam
fisubr
inc
daa
js
mov
xor
push
push
and
and
fdivr
pusha
lds
out
cmp
mov
pop
ret
or
mov
sbb
movs
xchg
fadd
(bad)
jp
ja
sub
ret
xor
aam
cmp
push
inc
mov
lahf
repnz
out
dec
in
pop
push
lock
psubq
push
cmp
pop
pop
sbb
cmp
shl
pop
(bad)
cmp
js
mov
imul
std
(bad)
xchg
adc
or
(bad)
enter
sub
mov
sub
btr
popa
mov
pop
push
sbb
lock
jbe
xor
dec
outs
xor
sbb
call
movs
pop
scas
xchg
pop
mov
push
cmp
xchg
scas
test
leave
fdiv
sub
xor
xlat
fld
sbb
enter
sti
das
lods
xchg
push
pushf
cmp
ja
aad
mov
xchg
pop
daa
lds
cmp
jmp
push
call
push
std
jl
xor
aas
dec
xchg
jecxz
or
or
mov
fldenv
stos
cmp
xchg
mov
(bad)
or
push
xchg
add
icebp
hlt
repz
mov
inc
xchg
pop
mov
test
outs
daa
mov
aaa
aam
add
int
sub
push
pop
pop
mul
lds
imul
add
cmc
pop
push
mov
inc
cmc
lods
push
movs
pop
mov
hlt
mov
xchg
xlat
mov
(bad)
cmps
xchg
jb
sbb
pushf
fwait
xor
in
ret
rol
ja
sbb
ins
and
ret
(bad)
pop
mov
xchg
push
out
push
inc
inc
dec
sub
loopne
daa
lock
jmp
test
xchg
add
dec
sub
cdq
inc
leave
lods
adc
cs
mov
aad
pop
pushf
je
xchg
sbb
jmp
and
push
je
pop
push
pop
test
fidivr
xchg
jle
lahf
cmp
iret
retf
pop
adc
mov
xor
call
popa
outs
xor
cmp
or
test
repz
sti
out
pop
pop
cmp
leave
mov
or
sub
add
xchg
inc
adc
out
sbb
mov
dec
jb
leave
sub
lods
dec
add
scas
mov
pusha
in
or
stc
sbb
inc
cwde
sbb
push
ret
xor
inc
xchg
xchg
inc
fsub
jbe
fdivr
add
mov
lock
aas
xchg
dec
retf
test
pushf
clc
repz
mov
pop
cs
inc
pushf
out
mov
repnz
adc
xchg
mov
out
rol
sbb
scas
call
and
ror
lea
jb
add
in
or
in
add
mov
daa
inc
mov
mul
inc
ja
push
shr
rol
xchg
mov
pop
xor
mov
daa
mov
sub
ret
repz
movs
pop
jge
sbb
sub
jnp
popa
hlt
nop
xor
and
mov
jmp
out
fwait
cmps
dec
and
aas
aad
jo
icebp
dec
push
and
cmps
fisubr
inc
lods
pop
inc
lods
mov
and
cmps
mov
and
imul
rol
sub
scas
and
stc
outs
pop
jae
fisub
jmp
mov
cmps
int3
dec
in
jl
jle
adc
add
xor
pusha
jo
or
outs
push
cmp
sub
adc
cmps
sbb
pop
jbe
out
lea
jg
sub
js
push
cwde
fs
push
shl
dec
fsub
data16
sub
sbb
mov
push
jg
dec
inc
sbb
div
push
push
outs
into
inc
jbe
cmps
lahf
(bad)
push
in
adc
mov
test
xchg
pop
or
sar
(bad)
out
dec
scas
not
push
or
mov
gs
rcl
sahf
push
out
sbb
xchg
sub
adc
xchg
push
arpl
mov
and
test
pop
pop
ror
ss
addr16
mov
addr16
jnp
push
sub
pop
out
inc
out
mov
dec
test
xchg
scas
fwait
retf
in
xchg
adc
dec
das
mov
dec
mov
ret
inc
fwait
mov
jp
xchg
das
cwde
xchg
xchg
fist
popf
inc
(bad)
dec
cmp
dec
rcl
clc
ins
push
sbb
mov
div
xor
cmp
adc
movs
inc
push
mov
cld
mov
mov
mov
push
rcl
dec
jbe
xor
fs
mov
adc
fist
loop
cmp
jo
dec
mov
pop
and
in
push
je
sbb
gs
push
out
out
jne
in
mov
dec
pop
cmp
in
and
popa
add
stos
lea
shl
movs
mov
pop
movs
es
mov
test
pop
(bad)
sub
neg
enter
push
pushf
out
(bad)
movs
xchg
enter
in
(bad)
jge
outs
cld
xor
outs
fwait
test
inc
aam
jmp
call
fbstp
test
sbb
lods
ins
inc
mov
call
fcomp
mov
aas
out
aaa
adc
push
test
xchg
stos
adc
dec
jl
cdq
sbb
test
cmp
mov
dec
pop
mov
lea
and
adc
jecxz
and
retf
loop
and
adc
jmp
in
ret
dec
sbb
test
pop
data16
jecxz
dec
cmps
sub
std
cmp
mov
and
test
ficomp
push
mov
gs
mov
outs
rdmsr
xor
bound
out
inc
imul
stos
pop
sub
fdivrp
sub
jecxz
jo
aad
xchg
xchg
mov
les
(bad)
or
fiadd
loopne
loop
fcom
aaa
jmp
fbld
(bad)
jmp
call
jle
daa
mov
iret
mov
sub
ins
fild
daa
xchg
pop
jp
mov
repz
fdivr
clc
aaa
cmps
ss
ins
mov
jmp
test
fs
cmovns
es
pop
inc
lods
add
adc
ret
inc
sub
or
mov
outs
test
lock
mov
or
add
push
pop
dec
xor
(bad)
jge
lods
xor
adc
(bad)
pop
push
xchg
out
push
or
pop
mov
fstp
mov
into
and
xor
cdq
cmp
test
adc
stos
icebp
cmps
xor
test
push
inc
jb
jnp
rcl
pushf
mov
test
mov
jmp
aas
pop
mov
or
mov
dec
mov
and
dec
pop
loopne
adc
rol
mov
sub
in
cs
inc
dec
(bad)
sysret
pop
xor
ret
mov
ret
adc
dec
loope
pop
mov
mov
bound
sbb
mov
xchg
dec
mov
push
mov
mov
out
test
add
mov
retf
je
cmp
cmp
ret
cmp
push
and
mov
jae
les
and
mov
push
retf
(bad)
dec
retf
(bad)
mov
pushf
gs
mov
pop
setg
jge
sub
dec
adc
pop
sbb
jno
ds
fadd
mov
lock
test
lds
aad
sub
and
shr
inc
sbb
pop
jmp
cmp
(bad)
paddw
sub
adc
add
pop
mov
repz
add
fisub
ins
scas
call
xor
xor
inc
or
jle
cmp
mul
int
repz
sub
movs
sbb
sub
inc
dec
or
cmc
sahf
icebp
out
loope
retf
in
jg
mov
outs
lock
mov
ins
and
je
jo
sub
loope
daa
ds
xchg
sbb
call
loope
cmp
(bad)
xor
cmps
jl
pop
inc
mov
(bad)
sub
push
mov
fwait
jmp
das
mov
pop
(bad)
js
ins
mov
test
and
test
clc
popf
cwde
sbb
xor
pusha
cmp
inc
mov
ret
cmp
(bad)
dec
adc
cmp
jp
and
movs
setg
dec
cld
push
cmc
xor
lock
je
mov
dec
lea
jns
std
jecxz
enter
ret
rol
fdivr
sub
imul
cwde
div
fcmovne
mov
mov
push
mov
ja
repnz
bound
add
rcl
fwait
mov
je
sti
retf
and
mov
push
call
ds
jno
ins
jo
sbb
cwde
jne
ins
pushf
div
(bad)
popa
push
jnp
xor
pop
and
div
rcr
adc
sub
add
or
xor
add
push
clc
jl
xor
cmp
xchg
out
lahf
movs
ja
hlt
jb
sti
cld
hlt
adc
fisub
(bad)
ja
mov
bound
or
sbb
and
cmc
xchg
jno
daa
mov
mov
xor
retf
call
clc
inc
xchg
mov
lods
ss
add
inc
jne
xchg
rol
pop
jno
cwde
jno
mov
mov
jb
and
sbb
mov
xchg
jo
pop
add
xlat
nop
or
es
gs
dec
popf
and
fisubr
pop
jmp
push
cmp
xchg
cmc
push
mov
cmova
jp
es
jo
dec
mov
sbb
lods
repnz
sub
daa
cld
(bad)
out
pusha
pushf
rcr
(bad)
pop
cld
xchg
ret
retf
and
dec
pop
repz
or
rcr
outs
jbe
sbb
(bad)
cmps
xchg
shr
call
stos
inc
adc
dec
cwde
mov
out
test
sbb
das
mov
dec
outs
jle
into
adc
cmp
daa
dec
push
stos
sub
and
xchg
popa
jle
sti
or
push
push
pop
dec
mov
sbb
arpl
lock
in
adc
cmp
das
push
idiv
and
xor
cmps
xor
mov
cmps
lea
stos
pusha
call
cwde
ret
fidiv
add
sub
sbb
lds
xor
(bad)
(bad)
stos
dec
aaa
enter
fwait
adc
and
ja
repz
push
ins
xor
lea
mov
push
mov
ret
test
retf
sbb
pop
xchg
add
aaa
and
mov
addr16
fimul
jmp
sub
push
mov
shr
adc
movs
aam
out
xchg
pop
sbb
int
adc
sbb
not
dec
cli
dec
out
inc
imul
and
and
outs
xor
pop
xchg
mov
jbe
rcr
test
lods
retf
and
aas
lods
outs
call
dec
inc
dec
in
pop
movs
inc
jle
pushf
adc
aad
pop
cmp
mov
call
ins
inc
xchg
pop
pop
push
dec
test
in
cwde
stc
mov
and
xchg
ret
jmp
xor
mov
sbb
push
push
cmps
mul
push
cmp
sub
scas
dec
int
and
mov
dec
cmp
clc
nop
mov
pop
sbb
xchg
cli
sub
mov
push
cdq
out
rcr
inc
sbb
loop
jmp
js
cmp
icebp
adc
dec
call
push
(bad)
call
popa
and
shl
cli
dec
push
xor
imul
xchg
xor
fwait
xchg
or
and
fiadd
or
pop
jae
mov
sbb
fdivr
test
push
(bad)
sub
push
dec
mov
inc
push
addr16
dec
lea
mov
ds
inc
retf
loope
(bad)
lods
daa
data16
pushf
mov
pop
sbb
mov
sar
sbb
jmp
stos
repz
add
fnsave
fsubr
adc
inc
retf
fxch
push
jle
aas
adc
push
xor
mov
lds
add
mov
cmp
aad
shl
out
pushf
stc
movs
push
xor
jb
call
aas
test
push
scas
out
nop
sub
pop
lods
aas
dec
test
xchg
test
enter
mov
and
arpl
xor
dec
mov
call
cmp
mov
mov
icebp
dec
add
dec
or
imul
repz
lods
stos
ins
cmp
jbe
lahf
push
inc
xchg
or
mov
mov
xor
push
in
lds
stos
cwde
pop
and
jp
xlat
xchg
movs
and
add
in
sbb
sbb
jne
fst
das
jb
dec
dec
mov
lock
mov
fwait
sub
lods
mov
cmc
and
lods
sub
cld
push
inc
sub
out
fwait
not
mov
dec
xor
fldenv
add
mov
test
mov
sub
pop
cmp
push
or
lea
leave
cmp
lods
jle
mov
cmps
pop
push
lds
xor
ret
nop
inc
popf
cmp
sbb
out
mov
push
outs
pop
add
call
sub
xchg
xor
mov
std
sbb
sar
ret
jge
imul
mov
inc
xchg
cmc
shl
cmc
shl
sub
and
pop
mov
push
cs
mov
fstp
arpl
ja
pushf
test
inc
fs
scas
sbb
mov
call
ins
add
fbld
dec
jnp
lea
les
add
dec
fld
cli
cli
fdiv
aas
cmp
shr
mov
jno
jno
loope
stos
add
mov
iret
outs
push
add
push
mov
enter
fisttp
fisttp
cdq
cmp
int
dec
xor
inc
pop
lods
pop
into
ret
jmp
adc
test
addr16
shl
daa
mov
ins
retf
sbb
nop
push
pop
loopne
push
(bad)
pop
adc
cmp
xor
pop
prefetcht2
adc
xchg
daa
test
popf
int
int
(bad)
(bad)
test
sbb
xchg
lds
xchg
mov
not
or
loope
movs
imul
in
stos
stos
mov
retf
push
addr16
aas
(bad)
(bad)
adc
and
clc
stos
in
iret
dec
fisub
(bad)
stc
mov
push
jecxz
(bad)
cmps
mov
scas
and
mov
xchg
jle
popa
into
and
jecxz
inc
leave
pushf
in
ret
rcl
sbb
clc
out
mov
jle
not
aam
adc
inc
dec
xor
push
aam
push
sbb
sbb
imul
mov
xchg
aas
js
pop
arpl
aas
mov
inc
in
outs
xor
ret
xor
xor
clc
shl
aaa
xchg
es
je
aad
into
sahf
mov
sbb
test
aas
and
dec
sbb
out
call
push
scas
cmc
add
rol
adc
lods
xchg
mov
mov
fdiv
iret
push
or
mov
bound
pushf
(bad)
ficomp
(bad)
add
dec
repz
xor
jmp
and
int
inc
sub
int3
mov
cmps
sbb
jl
jge
lods
pop
fsubr
mov
or
dec
dec
loope
push
retf
mov
dec
inc
scas
ins
rol
pop
inc
in
movs
push
int3
call
lea
push
movs
bound
xor
pop
in
std
mov
fdiv
std
cmp
fcmovnb
fild
xor
inc
jmp
cmc
mov
cmps
dec
cli
add
sar
jmp
mov
inc
lock
ss
fs
out
push
nop
mov
dec
and
adc
cmps
xlat
adc
lock
cmps
stc
popa
imul
mov
sub
outs
ss
(bad)
lods
jo
loopne
nop
xor
pop
(bad)
mov
cmp
sbb
sahf
mov
shr
xor
xor
adc
sbb
fwait
jp
push
ficom
out
aaa
fwait
test
out
add
push
pop
pop
xor
xchg
mov
retf
(bad)
pusha
ret
add
push
xchg
lods
stos
jnp
push
jecxz
shr
cdq
jle
jb
cmps
xor
adc
repnz
adc
cmps
xor
ret
fimul
jbe
(bad)
sbb
mov
dec
aas
push
add
ret
int
mov
mov
jbe
cmps
pushf
and
mov
inc
repz
daa
stos
enter
enter
imul
cs
fwait
jp
inc
inc
and
repz
div
fbld
add
xor
sbb
jb
lock
cli
fwait
and
jno
xor
in
fs
out
jno
cs
dec
jae
or
pop
(bad)
loopne
mov
call
inc
stos
sub
xchg
shr
fnstenv
pop
stos
mov
add
mov
test
(bad)
pushf
inc
fmul
scas
mov
mov
sbb
cmc
fmul
mov
lahf
adc
(bad)
jo
add
xchg
retf
not
xchg
daa
mov
fdivrp
or
ret
aas
push
enter
enter
xchg
dec
adc
sbb
xor
mov
ins
adc
mov
scas
test
movs
dec
movs
fld
pop
xor
xchg
arpl
lds
or
push
or
sbb
add
push
dec
(bad)
cmps
loope
push
push
fdiv
fwait
cld
(bad)
call
jno
stos
enter
jle
dec
xlat
lods
je
test
push
inc
cli
jnp
mov
mov
xchg
cs
push
std
int3
xchg
jp
jne
call
xchg
fidivr
jns
test
repz
xchg
jp
movs
(bad)
ja
sub
pop
inc
dec
imul
cld
jl
stos
mov
jge
and
(bad)
loope
add
mov
and
sub
cmp
ins
mov
inc
xchg
scas
test
mov
push
sbb
out
jnp
cmp
scas
mov
out
dec
icebp
pushf
test
ffreep
xchg
push
sar
in
mov
jo
jecxz
cmp
fisttp
mov
xchg
sub
cmc
sub
inc
pop
cwde
fld
mov
fnstcw
jp
adc
cdq
mov
jb
cmps
xchg
xchg
or
mov
cld
sbb
sbb
push
or
test
mov
aad
cmps
scas
icebp
arpl
mov
adc
jno
cmc
fidiv
adc
imul
pusha
pop
and
jae
sahf
aad
sahf
or
ret
out
in
jmp
mov
jp
nop
mov
add
nop
mov
hlt
imul
adc
daa
popf
cs
mov
imul
pop
sbb
xchg
(bad)
and
cwde
jb
das
test
pop
inc
push
or
dec
and
pusha
cli
jnp
(bad)
shl
out
fst
adc
cmps
xchg
out
mov
(bad)
in
xor
inc
(bad)
cmps
cmps
xor
lods
cmovae
in
inc
sub
xchg
xor
add
mov
mov
xchg
dec
xor
test
cwde
mov
adc
xor
(bad)
popf
es
and
int
cdq
into
sub
add
icebp
mov
cdq
mov
loope
imul
popf
scas
jb
adc
jno
loop
pop
dec
test
push
cmp
pmuludq
(bad)
hlt
stc
or
push
cmp
retf
pop
push
sbb
cmc
pop
sti
mov
les
and
add
rcl
inc
test
xchg
xchg
std
shl
mov
sbb
ins
mov
jb
lea
jmp
and
inc
retf
sub
sbb
mov
(bad)
sub
mov
add
dec
clc
push
nop
sub
push
mov
mov
movs
(bad)
push
sahf
sub
jg
retf
jns
ins
inc
mov
nop
add
rol
iret
(bad)
or
pop
jns
or
mov
scas
mov
pop
mov
pop
je
addr16
fisttp
ins
test
xchg
mov
fs
pop
(bad)
cwde
push
loopne
jb
js
mov
sub
pop
jl
push
mov
add
jo
add
je
out
cmp
imul
mov
stos
iret
add
lock
bound
addr16
imul
rol
outs
add
jmp
imul
inc
pop
xlat
push
pop
inc
pop
mov
out
push
inc
cdq
loope
xor
movs
retf
fdivrp
push
adc
or
jb
out
dec
ficom
pop
mov
add
in
mov
mov
in
xor
mov
ds
mov
lds
push
imul
sbb
push
pmuludq
(bad)
dec
in
sub
fidivr
mov
push
dec
ds
sbb
push
out
std
mov
jl
sub
enter
mov
push
les
jne
or
std
call
push
xor
(bad)
call
fwait
push
mov
loop
mov
dec
loop
pop
sub
mov
retf
sbb
shl
(bad)
mov
and
dec
push
push
in
aas
je
fistp
adc
dec
scas
int3
out
inc
das
xchg
gs
jmp
fwait
test
push
push
add
fistp
dec
jne
and
inc
mov
fsub
sub
inc
add
cwde
fld
fistp
sbb
in
inc
test
mul
nop
jge
add
into
dec
lock
push
cmp
add
xchg
shr
aas
sub
pop
pop
add
dec
lahf
add
push
inc
jge
dec
(bad)
outs
cmp
cmp
(bad)
mov
mov
loop
arpl
daa
cmp
mov
jnp
inc
and
loop
mov
out
dec
sbb
(bad)
movs
and
sub
movs
popa
jnp
sbb
cmc
jge
pop
aad
mov
jp
sub
cdq
jge
(bad)
les
movs
loopne
push
pop
cld
jecxz
sub
mov
test
int
lock
sbb
call
scas
sbb
push
mov
push
cli
pop
ret
call
icebp
mov
mov
and
inc
mov
cmp
inc
sub
xor
(bad)
push
dec
shl
sbb
push
fdiv
xchg
int3
mov
adc
mov
pop
mov
leave
les
sub
inc
dec
clc
in
push
test
stos
add
mov
cmps
fdivr
jecxz
cli
pop
cdq
data16
mov
sub
(bad)
or
test
or
sbb
cmp
clc
scas
jbe
push
mov
les
adc
fdivr
ins
loope
fnstcw
lahf
add
adc
push
rcr
pusha
mov
xor
jb
in
xchg
test
inc
add
call
test
mov
sub
mov
or
and
push
ss
les
les
stos
or
mov
ja
mov
pop
push
pop
jmp
frstor
ins
dec
jle
das
jb
jb
test
cmp
lock
dec
pop
int
mov
xchg
xchg
or
push
jmp
mov
add
pushf
cld
jno
call
push
jno
bound
aas
jp
int
sbb
inc
xor
aas
or
jae
loop
jmp
mov
cmp
in
xor
pop
cmc
jp
ret
adc
jb
iret
inc
cmp
sub
lea
mov
(bad)
mov
mov
jmp
jbe
daa
test
cdq
pop
pop
pop
mov
out
xchg
test
jp
in
fmul
mov
imul
pop
and
pop
call
push
mov
mov
out
js
xor
xor
outs
xchg
hlt
jge
cdq
jnp
aam
pop
push
out
cmp
pop
dec
jmp
inc
pushf
xor
out
test
sbb
shr
push
or
xchg
outs
xchg
jae
ins
jmp
mov
iret
imul
outs
ja
push
int
bnd
pop
mov
add
jo
sbb
mov
out
mov
push
fcmovnu
adc
mov
mov
shl
inc
out
outs
loop
mov
je
pop
xor
mov
pop
pop
(bad)
jne
pop
cmps
div
sbb
sahf
out
mov
test
std
or
xor
mov
iret
xchg
dec
mov
(bad)
repnz
jb
(bad)
cmp
ficomp
std
mov
enter
aad
dec
or
mov
fwait
aam
inc
push
test
push
dec
addr16
jbe
sbb
dec
loopne
sbb
idiv
xor
clc
cmp
cmp
pop
push
mov
jb
push
das
mov
stos
in
sbb
jae
je
jns
ror
inc
idiv
call
pop
dec
push
adc
dec
cmp
jmp
iret
aaa
xor
pop
push
jo
in
scas
pop
into
out
mov
jp
push
inc
adc
and
das
mov
mov
jg
mov
inc
push
fwait
xor
jle
mov
das
ret
ror
and
pop
out
or
out
(bad)
adc
div
mov
cmps
sub
lock
jmp
lock
jne
and
adc
mov
inc
jne
loope
dec
adc
(bad)
jo
ror
daa
push
je
aad
jo
cld
gs
imul
mov
sbb
add
ret
lock
test
pop
cmc
push
mov
mov
xchg
sahf
rcr
push
cmp
imul
arpl
push
mov
pop
and
shr
pushf
dec
stc
in
inc
cmp
fild
shl
sbb
cmp
mov
xor
lods
ds
test
outs
aaa
stos
lock
pop
mov
ja
or
ret
adc
in
les
aaa
mov
(bad)
cli
test
rol
mov
xchg
pop
jmp
jnp
enter
mov
cdq
mov
adc
hlt
aaa
or
mov
inc
mov
stos
push
mov
out
test
ins
inc
ret
imul
shl
and
xchg
sub
xchg
ds
jecxz
fbstp
into
js
mov
adc
ret
fidivr
lds
mov
jg
loope
shl
lock
bnd
lods
cmp
mov
fcmovb
mov
and
in
pop
stos
data16
pop
xchg
jecxz
js
jmp
rcr
test
sbb
pop
adc
sub
add
(bad)
in
adc
jge
loop
add
data16
bswap
movs
stos
inc
sbb
or
mov
inc
xlat
fbld
xor
mov
mov
std
xchg
in
fmulp
mov
pop
xor
fstp
jl
into
sbb
cmp
int3
cmp
(bad)
out
xor
add
in
pop
mov
xchg
fsub
call
fnsave
rcr
push
stos
aam
mov
fs
das
push
sahf
cmps
dec
cwde
jno
scas
cmp
into
pusha
push
ror
cld
fisttp
iret
add
pushf
(bad)
lods
adc
and
jp
xchg
or
add
sub
outs
cmp
or
xor
loopne
push
pop
jecxz
cmp
aam
loop
stos
add
inc
stos
popf
and
lahf
mov
add
mov
aam
imul
ds
mov
mov
cdq
sbb
add
aaa
mov
in
in
xchg
cmp
jae
repz
ss
or
xchg
xchg
jno
arpl
cmps
cmp
mov
scas
pop
jns
je
arpl
cmp
push
data16
aas
cdq
add
stc
inc
adc
or
mov
lds
jge
aad
dec
enter
data16
inc
mov
xchg
addr16
in
test
ds
das
dec
xor
gs
std
fucom
das
shl
leave
push
jecxz
leave
push
in
jg
cld
imul
or
mov
inc
sub
push
xchg
mov
mov
(bad)
inc
push
add
sub
dec
sub
rol
sub
ret
and
fnsave
sti
in
add
xchg
push
adc
mov
sbb
lock
cmc
div
jne
pop
jnp
cli
lahf
dec
jge
cdq
add
sbb
daa
sti
push
into
gs
and
fldenv
jne
dec
loop
mov
fmul
push
mov
jmp
xor
arpl
jmp
in
cmps
(bad)
add
mov
xor
aam
ss
mov
stos
mov
jp
cmp
pop
sub
jecxz
shr
mov
and
jmp
hlt
adc
fisub
scas
mov
cmps
test
or
icebp
and
inc
iret
pusha
push
mov
and
(bad)
(bad)
xor
cmp
mov
pushf
shl
addr16
and
jbe
mov
pop
fyl2xp1
add
mov
jle
jg
call
cmp
stos
retf
les
imul
xlat
add
enter
and
xchg
int
cmps
outs
fidivr
sbb
gs
xor
bound
sub
dec
out
adc
jo
je
fstp
pop
dec
ja
adc
movs
sub
ret
mov
xor
test
lods
and
adc
or
call
and
mov
ret
lods
mov
ss
dec
mov
adc
stos
(bad)
cmp
scas
mov
and
jbe
clc
out
xchg
cld
mov
fadd
sub
int3
jnp
cmp
inc
pop
sbb
and
xchg
lods
sbb
daa
out
push
ja
push
xchg
into
mov
xor
dec
sbb
das
jno
and
push
std
retf
jmp
push
and
ds
add
and
fmul
pop
adc
cli
dec
jge
mov
or
std
call
test
cmp
shl
jbe
sahf
mov
imul
mov
xchg
push
aaa
push
in
pop
neg
test
cmp
out
jmp
inc
pop
pop
lea
aas
push
xchg
jmp
or
xchg
mov
jmp
sub
fadd
in
std
add
shl
mov
adc
jnp
ja
and
dec
xor
adc
cwde
out
sbb
pushf
push
out
lock
dec
into
mov
pop
dec
inc
adc
retf
dec
fwait
push
(bad)
hlt
jae
lods
or
sbb
hlt
popf
ret
cwde
scas
(bad)
xchg
xchg
fsubr
(bad)
shl
(bad)
cmps
je
jl
dec
inc
push
push
mov
xchg
rcl
mov
sub
rcr
sub
hlt
xor
add
(bad)
push
int3
repnz
jnp
out
and
jb
call
mov
enter
jae
push
mov
mov
int
les
xchg
pop
mov
jle
jle
sub
mov
cmp
push
(bad)
nop
int3
dec
ins
push
ds
pop
ror
dec
pop
mov
std
jp
adc
xchg
inc
neg
test
je
push
mov
test
aaa
xor
xchg
xor
cmp
mov
stos
and
mov
adc
sub
int3
fild
and
or
xchg
in
pop
push
push
pusha
pop
test
test
ins
xchg
fadd
es
cmps
add
mov
shl
ret
call
inc
xor
int3
cli
cmps
push
sbb
imul
lods
clc
enter
mov
not
movs
ret
leave
arpl
mov
repz
and
movlhps
cmps
dec
bound
pop
mov
mov
push
push
movs
jmp
xor
jno
jae
test
lea
or
cmps
out
sub
cmp
xor
dec
pop
aas
sub
jno
xor
add
cli
in
xchg
pusha
frstor
arpl
int
xlat
out
mov
and
or
inc
fwait
(bad)
cmovns
jmp
icebp
and
es
add
mov
cmp
stos
leave
jmp
or
mov
adc
cmp
lock
mov
xchg
push
mov
repz
(bad)
lods
nop
test
sbb
sub
mov
ficom
in
xor
cmp
xchg
loopne
outs
lea
(bad)
imul
adc
mov
mov
xchg
xor
dec
test
inc
adc
loopne
cmp
cld
mov
ds
and
xor
fdivr
xlat
(bad)
imul
jmp
inc
ror
push
ins
mov
push
inc
in
sbb
cld
out
jns
scas
mov
shl
ret
mov
popf
in
test
fs
clc
push
ins
xor
imul
add
loop
stos
aam
arpl
cld
mov
mov
js
hlt
mov
adc
push
mov
sub
mov
inc
xor
xchg
scas
xor
cmp
outs
ds
lock
cwde
neg
add
mov
push
aad
cmps
shl
mov
sbb
pop
sub
(bad)
xchg
add
(bad)
ins
call
ror
scas
dec
xchg
add
mov
adc
xchg
and
lahf
jbe
mov
sbb
clc
pop
mov
jnp
cmp
test
push
ds
dec
sub
dec
push
xor
outs
pop
inc
ror
mov
xor
add
mov
jne
mov
dec
test
cmps
cmp
inc
and
repnz
jo
aaa
inc
sbb
pop
adc
jno
push
push
int
data16
mov
jne
jecxz
sti
fldcw
imul
mov
and
mov
shl
jg
cmp
inc
fidiv
mov
cmc
jmp
xchg
mov
dec
dec
mov
fidivr
mov
(bad)
shr
inc
push
jmp
icebp
or
pushf
fdiv
pusha
jl
xchg
out
cmp
cmps
mov
sar
or
xchg
push
mov
out
aad
or
mul
dec
sub
lock
sahf
scas
loopne
cld
ja
pop
pop
pop
and
xchg
xor
enter
leave
rol
push
fmul
add
call
inc
jp
out
in
call
icebp
or
sub
(bad)
cli
sub
mov
xchg
mov
pop
push
mov
mov
icebp
mov
jmp
out
in
pushf
mov
sbb
xor
inc
sbb
out
outs
ret
xor
repz
cdq
inc
mov
ret
jb
ds
aad
repz
dec
sbb
pop
mov
cmp
lahf
imul
sbb
cmps
aam
fiadd
popa
lock
mov
fwait
into
bound
mov
mov
popa
jmp
mov
in
(bad)
in
cmc
js
sbb
sahf
sti
outs
inc
push
xor
mov
mov
pushf
dec
or
sbb
mov
cdq
mov
and
sahf
push
xchg
addr16
fidivr
push
cld
in
push
or
sbb
cdq
and
retf
test
xor
inc
call
xchg
popf
pop
in
mov
aam
mov
adc
and
mov
cmps
fcomi
enter
pushf
retf
fisttp
arpl
mov
push
xor
push
pop
xor
movs
lods
fs
pop
push
pop
repz
add
push
push
push
les
or
mov
shl
adc
mov
xchg
int
xchg
scas
adc
mov
jl
pop
sub
sbb
dec
retf
cmp
and
cmp
cmc
stc
test
inc
aad
mov
add
(bad)
mov
fdivp
(bad)
inc
cmps
std
pushf
sub
mov
xor
cld
dec
sbb
pop
mov
imul
mov
retf
push
push
push
cmc
jmp
sbb
dec
shr
(bad)
repz
in
sub
idiv
outs
shl
shl
or
jecxz
xor
cs
mov
sbb
mov
(bad)
cs
xchg
fmul
xchg
dec
inc
pop
pusha
in
test
pop
xchg
xor
gs
loopne
ins
ins
mov
sbb
mov
dec
mov
es
int
xor
jae
repnz
pop
je
in
and
inc
pop
push
es
push
imul
or
xchg
stc
inc
nop
xor
pop
icebp
pop
rol
hlt
jl
lea
jne
cmp
test
pop
mov
sar
mov
lods
cld
leave
dec
inc
test
jp
fadd
xor
std
sti
das
pop
and
add
popa
inc
cwde
xchg
xlat
ret
mov
in
test
inc
cmp
add
fnstcw
push
outs
inc
movs
inc
std
popa
test
dec
jae
(bad)
out
test
sbb
xor
push
push
and
lods
sub
mov
adc
sar
xchg
lock
icebp
push
or
jle
or
xlat
push
xor
and
xor
lods
jns
adc
outs
imul
rcr
std
push
(bad)
(bad)
ins
xchg
das
int
add
mov
out
sbb
(bad)
xchg
or
push
xlat
aas
shl
and
test
ss
out
in
pop
push
cmc
shl
pop
fs
repnz
sbb
mov
into
sbb
mov
pop
mov
fucomp
inc
mov
xchg
loop
mov
pop
jno
push
retf
das
aad
xcrypt-ofb
cmps
outs
sub
fst
mov
retf
retf
pusha
pop
and
and
push
loopne
out
and
test
sbb
lock
stos
nop
clc
in
sub
mov
adc
or
cli
test
adc
shr
xor
test
or
fsubrp
test
enter
mov
dec
les
xchg
xchg
cmp
in
nop
jb
fisub
ficomp
mov
dec
bts
and
clc
test
(bad)
mov
pop
(bad)
ret
pop
sbb
call
pop
std
sbb
je
shl
mov
inc
ja
jae
movs
lods
and
cdq
repnz
pop
je
call
std
or
xor
retf
sbb
data16
inc
sub
(bad)
sbb
out
push
cmps
cdq
cmps
add
push
pushf
adc
in
inc
push
add
and
pop
test
adc
add
(bad)
daa
inc
xor
inc
xchg
cmp
mov
inc
jnp
cmp
cld
adc
out
or
sti
stos
pop
ret
xchg
popa
lock
dec
xchg
inc
jbe
pushf
sahf
call
(bad)
das
into
mov
push
mov
out
push
imul
lds
test
sub
mov
mov
or
fidivr
add
(bad)
in
bound
test
jne
arpl
(bad)
sbb
sbb
jle
jp
add
not
adc
xchg
or
(bad)
jle
inc
retf
jns
popf
out
movs
test
fcom
cli
jbe
xchg
(bad)
fimul
jmp
sbb
inc
jbe
call
push
in
mov
sbb
jb
sub
jl
fistp
dec
ror
adc
or
pop
push
scas
mov
je
adc
je
add
lahf
and
sar
ror
pop
nop
sub
mov
repz
pusha
hlt
out
xor
ins
push
dec
into
js
mov
push
push
mov
push
ret
fistp
mov
cmps
in
add
xor
call
jno
push
push
mov
jge
jne
lock
pop
fisub
arpl
inc
xor
gs
jmp
fld
pop
loop
into
add
jno
sub
int3
dec
es
scas
repnz
push
xchg
mov
inc
mov
jns
test
mov
xlat
loope
outs
jmp
adc
pop
pop
lods
in
mov
mov
sbb
ss
inc
xor
add
shl
and
jge
mov
call
mov
xlat
xchg
and
ins
cmp
jbe
inc
cld
jb
ins
add
pop
cmps
fst
push
push
cdq
cwde
push
cli
cmp
imul
ret
and
mov
mov
das
sub
loope
in
cmps
sbb
mov
es
js
(bad)
xlat
dec
ja
jle
push
pop
cmc
movs
out
int
test
movs
xchg
imul
call
push
pop
ret
xor
mov
add
and
or
add
retf
fcomp
stos
jg
pusha
cmp
jnp
in
cmp
and
jo
sbb
stos
int
inc
add
mov
push
mov
(bad)
mov
adc
iret
inc
je
into
mov
mov
aaa
loopne
out
xchg
daa
mov
das
mov
sti
out
(bad)
stos
out
call
mov
sub
mov
cli
cmp
mov
fs
pop
test
mov
addr16
inc
cwde
jnp
icebp
fidiv
clc
outs
pop
mov
pop
loop
push
sub
fbld
inc
and
xchg
out
call
and
ins
sbb
mov
push
push
sub
add
dec
mov
mov
adc
shl
mov
repz
mov
lds
stos
aam
xchg
aas
cmp
pop
push
test
cli
ja
repz
cwde
addr16
xor
ds
adc
xor
fucomip
adc
fadd
adc
sub
mov
loopne
adc
fld
dec
sub
ins
add
out
int
or
rcr
and
mov
je
lods
cmp
and
mov
retf
inc
into
jo
fimul
rol
push
jle
push
mov
mov
pushf
xchg
and
add
addr16
or
sbb
test
mov
mov
mov
sahf
aad
imul
in
cmp
push
add
xor
sbb
and
mov
lock
or
or
outs
dec
jbe
aad
jnp
dec
movs
dec
into
push
dec
(bad)
sub
push
fcomp
mov
ja
fiadd
mov
or
jmp
lods
add
pop
call
cdq
lahf
scas
push
and
out
dec
adc
sub
sub
xor
mov
gs
pop
mov
push
push
icebp
scas
repnz
cmp
cmp
fistp
and
xchg
inc
scas
stos
fmul
(bad)
jns
ret
sub
fbstp
mov
jae
mov
aam
cwde
sub
sti
cmps
adc
ds
push
xor
les
imul
sbb
add
dec
ret
movs
in
xchg
scas
(bad)
mov
cmp
das
scas
in
daa
push
aad
out
mov
mov
fcomp
imul
fs
xchg
xor
jge
jge
repz
icebp
adc
mov
repz
adc
in
lods
dec
aad
gs
adc
cmp
jno
pop
call
push
mov
sbb
imul
fsubp
pushf
imul
sub
f2xm1
pop
adc
mov
push
xor
pop
cdq
add
mov
mov
outs
sbb
jnp
stc
sbb
push
jnp
mov
inc
inc
and
or
dec
nop
stos
shl
jbe
sbb
add
cmp
jne
dec
imul
jnp
fst
fistp
in
in
mov
xchg
mov
sar
(bad)
pop
push
xor
imul
jnp
pusha
shl
cmps
sbb
xor
push
mov
push
shr
dec
movs
xor
ins
aad
jge
jbe
xchg
pop
out
cmp
aas
jno
mov
or
ds
(bad)
stc
idiv
jge
minps
loopne
or
sub
add
xchg
fistp
pop
jns
adc
aas
jmp
inc
repnz
dec
shr
jecxz
iret
lahf
pop
or
add
xor
(bad)
in
sbb
adc
mov
aaa
sub
pop
fs
inc
hlt
addr16
cmp
jmp
cs
aas
out
cmp
cs
push
mov
xchg
lds
sbb
add
in
pop
push
shr
test
repz
dec
sub
add
add
mov
inc
ds
jecxz
ret
xor
gs
ret
ja
cmps
(bad)
aas
and
mov
dec
clc
jg
jge
outs
xor
pop
ret
sahf
je
dec
pop
fnstsw
and
(bad)
sahf
rcl
pushf
cmps
outs
jo
pop
pop
(bad)
pop
mov
xchg
ret
sbb
(bad)
jbe
out
stos
stc
mov
jmp
stos
arpl
dec
imul
test
je
jmp
daa
mov
int3
pop
fwait
sbb
imul
cmp
lods
jmp
(bad)
add
mov
xor
add
add
xlat
jns
in
arpl
xor
jo
mov
sbb
mov
sub
movs
mov
call
fmul
jg
shl
leave
(bad)
jmp
cmps
push
test
cmp
fild
pop
push
lods
pop
popa
popf
mov
icebp
cmps
out
dec
jg
mov
hlt
int
es
(bad)
xor
je
out
test
out
stc
push
hlt
div
pop
ja
jbe
push
pop
repz
pop
adc
add
sub
aad
xchg
outs
cmp
adc
or
lods
jne
scas
xchg
xlat
or
scas
xlat
leave
fucom
ins
pop
jmp
pop
sub
or
stc
sbb
xor
pop
xlat
cwde
icebp
cs
push
stos
test
loope
(bad)
jmp
in
lods
and
int3
rcr
xor
or
inc
test
shl
dec
jnp
je
dec
lock
inc
nop
push
into
and
xchg
and
sub
imul
mov
enter
test
mov
push
outs
mov
jne
bound
mov
pop
xchg
in
test
out
mov
push
jle
xchg
add
scas
out
ja
popa
adc
jbe
stos
(bad)
push
inc
(bad)
pushf
inc
fisub
mov
pushf
scas
pop
fwait
xchg
inc
sbb
cmps
cmp
cmp
sbb
lods
mov
js
cmp
mov
xchg
and
ret
dec
dec
jbe
or
out
pop
mov
call
push
push
inc
mov
or
jp
dec
out
push
mov
(bad)
dec
pop
push
sub
inc
fsubp
std
mov
es
cdq
stos
and
dec
ja
jb
loop
ja
xchg
xor
dec
inc
cmp
push
(bad)
(bad)
xchg
loope
cdq
push
xchg
pop
cmc
int
movs
jae
adc
and
idiv
xor
nop
aad
lahf
cmps
xor
addr16
push
lds
jge
in
test
xchg
jecxz
and
dec
jg
mov
add
test
mov
std
repnz
or
stc
add
jne
inc
push
add
mov
arpl
sub
or
mov
add
sbb
cmp
and
add
push
xor
dec
jg
inc
push
xrelease
(bad)
pop
retf
lds
jl
addr16
sahf
sbb
addr16
xchg
ins
mov
and
sub
dec
test
push
in
(bad)
mov
(bad)
in
(bad)
cwde
push
cs
push
fistp
xor
out
sar
cmp
sbb
jge
push
stos
js
shl
push
lods
cmp
ret
xor
push
jne
icebp
xchg
rdpmc
ds
pop
aaa
sbb
clc
adc
mov
push
(bad)
jmp
fdivr
addr16
aad
jo
adc
outs
xchg
inc
xchg
adc
dec
mov
fldcw
sbb
ins
or
dec
xchg
lea
xchg
push
push
arpl
test
aad
pop
xchg
(bad)
jne
inc
shrd
pop
dec
imul
jecxz
mov
dec
xlat
sti
test
pop
sbb
adc
and
cwde
fst
test
imul
push
push
dec
(bad)
clc
icebp
shr
sbb
push
inc
je
adc
dec
and
into
add
sbb
dec
dec
dec
scas
mov
lahf
shr
jmp
xlat
cmp
or
jmp
sbb
imul
jae
bound
pop
leave
cmps
cs
xchg
xchg
in
dec
xchg
push
gs
pop
xchg
mul
lock
sbb
mov
sahf
jne
push
mov
icebp
jle
loop
push
ret
retf
xchg
jnp
fiadd
(bad)
or
mov
ret
rol
ss
mov
movs
add
add
mov
push
mov
add
mov
popa
mov
mov
in
mov
or
jmp
stc
lods
push
jne
cmp
adc
mov
add
sbb
xor
mov
jmp
push
inc
cdq
ret
mov
out
pushf
sbb
mov
xchg
sbb
jo
bound
inc
push
pop
or
sbb
mov
mov
mov
fwait
and
or
add
ins
loopne
dec
int
jae
jb
jmp
js
test
push
pop
loop
push
add
jmp
pop
jbe
pavgb
jbe
or
sub
mov
cli
adc
shr
outs
ficomp
fwait
cmp
mov
mov
add
cmp
jnp
ret
js
xchg
or
test
push
pop
mov
imul
dec
int
cld
ficomp
cmp
mov
xchg
int3
pop
call
cmc
and
shr
xor
fld
cmc
retf
push
add
call
xor
mov
mov
retf
jmp
xor
xor
imul
inc
push
icebp
mov
les
sub
dec
xchg
shr
scas
pop
or
out
pop
cmps
dec
xchg
ret
xchg
shl
mov
shl
pop
ds
inc
adc
add
cmp
mov
int
mov
out
retf
pop
mov
jno
in
and
mov
mov
in
lahf
fwait
(bad)
fistp
push
fidiv
push
lods
aas
out
stos
mov
dec
stos
paddq
sub
loope
in
in
mov
sub
pop
mov
rcl
mov
ins
les
stc
iret
daa
popf
dec
sub
stc
fistp
cdq
(bad)
pop
(bad)
sbb
in
fwait
loopne
dec
cld
push
push
xchg
dec
into
inc
jecxz
pop
mov
push
imul
jne
adc
sub
ins
xor
and
sbb
sahf
daa
jb
repz
xchg
es
adc
xchg
into
lds
jmp
sub
jo
mov
jno
rcl
clc
sbb
push
push
or
out
add
dec
push
jns
fcom
scas
out
push
shl
ins
inc
add
outs
lds
jo
push
mov
and
retf
xor
cmp
aas
cwde
and
adc
into
hlt
ret
mov
jmp
mov
inc
cmp
jmp
bound
xor
xor
frstor
loop
and
scas
push
sti
adc
or
mov
pop
sub
leave
mov
inc
iret
out
je
mov
and
mov
or
clc
cmp
mov
dec
ret
out
mov
rcr
xor
xor
lahf
mov
scas
mov
pop
inc
not
fcomip
pop
or
add
cli
sar
mov
(bad)
call
lock
mov
pop
fdivrp
mov
imul
xor
pop
jae
jecxz
push
sub
loope
mov
pop
pushf
jle
jnp
jp
or
popa
sbb
xor
cmps
push
(bad)
push
mov
imul
test
jns
clc
(bad)
jbe
idiv
sbb
mov
add
sahf
ins
mov
sbb
ds
xor
std
jb
mov
sub
ret
dec
movs
cmp
std
cmps
outs
mov
push
xchg
movs
or
jb
adc
push
push
cmp
sub
pushf
cwde
jns
add
mov
retf
(bad)
int
pop
out
mov
repz
or
fdivr
jl
mov
xchg
mov
loopne
xlat
retf
dec
push
mov
je
add
lods
rcr
repz
sub
int3
mov
inc
ret
xor
fst
push
and
hlt
cmp
out
repnz
pop
fnop
inc
fcmovbe
dec
push
xchg
pop
je
mov
sub
jne
xchg
push
mov
inc
retf
imul
mov
sbb
jl
push
idiv
(bad)
(bad)
xchg
popf
into
sub
inc
aam
mov
scas
mov
or
mov
jo
jns
jp
xchg
cmc
lds
and
mov
xor
push
ret
jo
jp
jecxz
xchg
sub
mov
pop
inc
add
adc
fstp
mov
call
and
fsubr
mov
mov
mov
nop
mov
cmp
adc
jbe
adc
inc
sub
mov
pop
cmp
std
xor
cwde
sbb
aaa
test
push
mov
xor
cld
add
xor
call
sar
adc
jo
cmp
mov
je
sub
jg
frstor
data16
mov
sar
push
fnsave
dec
xchg
mov
in
clc
sbb
xchg
jmp
sbb
sub
shr
call
xor
je
sbb
jp
nop
addr16
pop
icebp
aad
jecxz
loop
jmp
jmp
pop
add
push
packssdw
test
inc
into
push
sub
aaa
pop
(bad)
lods
mov
push
jae
mov
mov
push
jmp
or
jg
mov
xor
cmps
xor
enter
(bad)
jle
fmul
dec
jbe
in
mov
adc
mov
cmp
scas
mov
ins
leave
ja
mov
lods
or
pop
frstor
inc
sbb
pushf
iret
loope
pop
jb
inc
sub
add
push
ins
mov
jb
icebp
sahf
jnp
and
sub
pushf
mov
aas
dec
dec
or
push
or
mov
icebp
add
movs
repz
addr16
aas
loopne
rcl
jno
push
ins
pusha
push
inc
aam
push
js
push
pop
xchg
pop
repnz
or
mov
mov
mov
cmps
add
xchg
dec
mov
aas
jb
and
fstp
mov
(bad)
outs
mov
ret
retf
out
push
and
push
test
stos
cdq
inc
repnz
(bad)
mov
call
cmp
(bad)
retf
sbb
lahf
out
out
data16
(bad)
cmp
out
clc
mov
mov
sbb
outs
mov
mov
mov
stos
jle
pop
mov
dec
cli
xor
test
mov
pop
xchg
mul
retf
add
mov
add
push
xchg
(bad)
cli
mov
aas
imul
aaa
movs
sbb
sub
mov
rcl
(bad)
jmp
inc
fs
add
adc
arpl
sbb
jb
std
cmp
enter
sub
les
sbb
stc
xchg
and
sub
inc
sbb
push
cmp
adc
dec
aam
nop
pop
dec
fcomp
xchg
ss
inc
(bad)
or
nop
inc
pop
je
jns
jae
cmp
in
mov
jge
push
cmp
push
loopne
jno
cs
mov
jmp
inc
fcmove
adc
sti
out
mov
push
xor
ss
and
jbe
adc
mov
aaa
push
and
out
jg
fs
(bad)
xchg
mov
cli
push
fnsave
and
or
mov
cmc
jmp
jge
adc
lods
dec
jmp
sbb
cli
into
int
out
fistp
hlt
jg
imul
call
cdq
std
test
ror
es
sar
push
or
adc
fcom
mov
push
push
adc
pop
ins
push
push
ret
and
and
adc
jmp
inc
jmp
push
(bad)
lahf
inc
ret
xor
(bad)
xor
jmp
dec
loopne
xor
sub
xchg
push
fcom
(bad)
xor
test
sbb
jbe
mov
xchg
ins
add
icebp
aad
bound
movs
mov
add
sbb
mov
sub
in
inc
adc
cld
outs
repz
hlt
sub
bound
or
xor
mov
scas
and
sub
push
sub
dec
and
fwait
jmp
xor
and
mov
cmps
add
fadd
js
fabs
test
out
mov
sbb
xor
pop
mov
shl
pop
call
mov
popa
fsubr
adc
xor
dec
and
sti
xchg
jne
paddsb
fadd
ins
cmp
and
xor
pop
sub
cmp
inc
out
retf
dec
mov
push
out
sbb
retf
mov
in
sub
test
imul
sub
cmp
and
cmp
aad
push
arpl
or
dec
mov
mov
mov
push
scas
icebp
mov
mov
ss
push
ss
mov
adc
push
jno
iret
add
jl
xchg
mov
fwait
pop
pop
fcomip
call
sbb
cdq
jo
daa
mov
sti
mov
mov
jl
fwait
sub
popa
ja
jb
les
xchg
aaa
daa
mov
pop
mov
movs
sbb
ins
jo
adc
push
movs
and
shr
dec
jo
xchg
push
pushf
scas
dec
sub
sub
fstp
fisubr
and
xlat
xchg
and
(bad)
gs
in
movs
pop
push
mov
movs
mov
or
push
mov
shr
lahf
dec
(bad)
xor
mov
fimul
jecxz
scas
imul
cmc
jb
push
and
jo
mov
ins
aam
aaa
sub
pop
add
inc
fcmovu
bound
stc
cmps
and
jmp
dec
in
popf
and
inc
in
mov
jo
pop
cs
adc
std
imul
neg
lahf
xor
adc
jge
loop
xchg
cs
pop
add
mov
jo
push
je
pop
(bad)
in
push
sub
xor
imul
mov
pop
fsub
inc
or
(bad)
cmp
jne
inc
xchg
pusha
xor
(bad)
(bad)
das
popa
and
inc
shl
out
adc
int
rcl
mov
stc
push
sub
or
das
mov
out
clc
mov
fsub
sbb
cli
add
pavgb
or
shr
dec
cmc
call
dec
mov
push
cmp
mov
push
imul
sbb
(bad)
arpl
pop
mov
inc
ficomp
pop
xor
mov
call
sub
rcl
imul
cmps
and
faddp
or
sbb
(bad)
out
cmp
fldcw
and
xchg
fcomi
xchg
loop
aad
jge
mov
and
fs
sbb
mov
or
jmp
rol
inc
jl
add
pushf
pop
dec
test
push
test
dec
rcl
dec
retf
iret
sub
mov
in
ret
inc
jne
push
aaa
jp
mov
out
enter
add
jns
mov
push
add
popa
(bad)
movs
xlat
call
hlt
jg
in
pop
sbb
stos
and
push
loope
xor
retf
or
call
stos
push
inc
fbld
jno
and
loope
inc
sbb
popa
lock
mov
dec
out
(bad)
idiv
mov
sub
arpl
and
cmp
das
rcr
sub
sbb
lea
push
test
in
dec
loopne
pop
movs
sub
sub
stos
xchg
(bad)
cmp
hlt
mov
icebp
cmp
add
xchg
mov
clc
add
jl
inc
cld
out
out
push
fidiv
add
imul
and
xor
mov
or
adc
jnp
das
cmp
lods
and
dec
xchg
jb
xchg
or
nop
clc
mov
mov
xchg
jnp
in
pop
push
daa
loope
mov
xchg
in
mov
ins
sbb
mov
cld
adc
push
push
adc
retf
out
jge
mov
test
jl
pop
adc
sub
pop
sbb
mov
test
add
enter
stc
stc
retf
(bad)
cmps
pusha
and
cmp
(bad)
mov
cmp
inc
mov
in
aas
xchg
mov
jecxz
mov
enter
mov
shl
cmp
pop
int3
add
and
sbb
adc
pushf
test
movs
ss
sub
fs
jmp
fbld
fist
jge
mov
les
sbb
div
cmp
jns
rcr
sub
(bad)
cmc
aam
fcomip
jecxz
mov
aaa
or
add
das
mov
retf
mov
sub
out
mov
data16
and
mov
mov
scas
mov
xchg
in
fidiv
inc
cdq
std
call
arpl
int3
and
imul
jl
jmp
sahf
stos
fisubr
sbb
inc
jo
imul
pop
pop
add
jmp
adc
fwait
push
push
int3
jns
inc
mov
int
mov
and
inc
repnz
jo
mov
lahf
(bad)
out
xchg
pusha
or
cdq
retf
dec
hlt
and
(bad)
loope
and
ror
sti
jp
imul
mov
pop
mov
retf
pusha
cmc
out
js
xchg
fadd
push
push
cld
je
add
call
fnstcw
sub
not
and
test
inc
or
arpl
ror
(bad)
ds
mov
mov
mov
shl
dec
jnp
ja
mov
jg
(bad)
mov
mov
jl
fcomi
mov
repz
mov
ja
retf
dec
js
pcmpeqb
dec
cmp
pop
js
test
in
mov
dec
sbb
or
pop
push
cmp
xor
scas
sub
aam
fnstenv
mov
cmp
sbb
cmp
or
dec
xchg
fidiv
cmp
sbb
mov
lock
das
adc
adc
add
and
sbb
or
loope
sbb
rcr
pop
(bad)
push
pop
and
hlt
push
inc
cdq
xor
push
jne
out
mov
mov
inc
pop
test
dec
adc
push
cs
mov
iret
cld
dec
adc
add
jae
test
repz
fs
ss
sub
adc
cmp
mov
sub
les
xor
xchg
ja
aam
fcom
adc
mov
mov
and
outs
cld
shr
daa
addr16
mov
xchg
repz
in
xor
mov
push
dec
pop
(bad)
aas
mov
enter
(bad)
push
mov
mov
push
retf
mov
push
jge
or
popf
jg
jmp
jno
mov
cmp
repz
xor
cmc
inc
jmp
adc
lea
rol
addr16
aam
jae
ror
xor
popf
cmp
pop
inc
add
pop
add
push
std
push
jle
stos
not
jg
pop
bound
in
or
add
inc
das
pop
mov
jp
adc
xchg
es
mov
int3
add
ret
inc
push
das
inc
pop
and
cwde
ret
sub
and
cli
dec
inc
jmp
das
adc
mov
aas
dec
push
cmp
push
out
xchg
cld
xchg
ds
pop
cmps
inc
dec
jp
push
(bad)
movs
pop
ret
pop
inc
je
ins
push
sbb
mov
outs
in
out
or
mov
jb
rcr
imul
pop
adc
loopne
xor
fldcw
fmul
call
bound
out
inc
cmp
jle
and
sub
jg
enter
ins
jp
fs
fist
ins
push
mov
jmp
xor
inc
mov
cli
in
push
pop
and
jae
lods
xor
mov
xchg
out
add
push
pop
xlat
push
cwde
lock
push
iret
cmp
sub
cmp
not
movs
shl
bound
(bad)
xor
addr16
mov
fidivr
jnp
xor
leave
jns
scas
mov
mov
movs
(bad)
xor
inc
mov
xchg
pop
loope
push
mov
inc
fwait
jnp
pop
jg
dec
adc
cld
add
pop
and
cs
stos
mov
mov
aas
sub
push
cmp
or
fld
call
rcr
(bad)
pushf
fdivr
pop
les
pop
stc
shl
int
loopne
mov
out
adc
xor
mov
dec
adc
sub
add
sbb
and
pop
mov
mov
in
xchg
xchg
sbb
and
out
jle
into
outs
mov
xchg
add
push
sbb
pop
add
jge
jne
mov
(bad)
mov
jbe
fcom
jne
cmps
add
icebp
enter
cli
stos
test
outs
aaa
(bad)
fisub
retf
jnp
out
mov
xchg
inc
out
imul
inc
xchg
aam
pop
leave
inc
(bad)
mov
lock
inc
inc
leave
add
jmp
and
cmp
xor
sub
fdiv
inc
add
lods
inc
dec
pop
or
and
not
and
mov
scas
ftst
adc
push
rcl
retf
out
lods
js
in
mov
gs
adc
xchg
push
mov
movs
xchg
mov
jecxz
mov
ins
mov
iret
out
fucom
mov
mov
pop
fwait
and
adc
inc
cmp
outs
jecxz
sahf
idiv
pop
out
jge
jae
ins
cmp
hlt
mov
sbb
pop
sub
mov
lahf
cmp
adc
inc
sbb
js
xchg
clc
or
lods
clc
sbb
dec
movs
mov
adc
inc
push
cmp
call
jnp
jmp
and
pop
sub
mov
pushf
sub
sahf
std
push
test
out
shl
int3
(bad)
movs
sub
jecxz
push
adc
addr16
or
imul
aad
ins
add
(bad)
sti
mov
sub
dec
mov
cmp
movs
es
sar
jmp
les
rol
dec
and
adc
bound
aas
dec
rcl
jb
ss
cs
data16
mov
inc
pop
das
sbb
inc
iret
or
bound
fdivr
mov
not
imul
adc
dec
loope
mov
movlps
dec
add
out
aaa
mov
add
leave
xchg
mov
pop
dec
cmps
outs
lock
dec
xor
rol
inc
std
(bad)
imul
jle
mul
daa
aas
push
aad
aad
push
std
mov
out
push
inc
sub
pop
adc
rol
stos
jg
cld
jg
jp
popa
loop
ins
shl
scas
pop
jo
sahf
dec
mov
push
test
mov
inc
hlt
fldcw
push
pavgw
mov
cli
loopne
fwait
loop
and
sub
push
jne
mov
push
mov
cmp
inc
push
aam
jbe
xor
xor
and
mov
gs
popa
test
xor
or
mov
sbb
jb
js
jle
int3
int3
pop
jbe
mov
sbb
and
push
das
jmp
out
adc
xchg
shr
mov
(bad)
push
dec
mov
sub
loope
faddp
mov
mov
xabort
nop
retf
push
push
cdq
adc
aad
fnstenv
jmp
push
and
call
sti
adc
inc
mov
dec
xchg
movs
test
pusha
mov
mov
xchg
jo
mov
mov
cmp
mov
jae
add
inc
je
aad
cmp
mov
xor
or
pushf
xchg
in
retf
xor
jno
mov
add
sbb
mov
or
pop
sbb
(bad)
cdq
leave
dec
call
mov
outs
out
cmp
test
push
xchg
jb
mov
pop
int3
clc
adc
xchg
cdq
cld
push
push
pusha
jmp
sbb
dec
or
xor
jmp
pop
lods
iret
aas
in
push
adc
jl
mov
mov
cdq
loop
popa
sbb
lea
inc
(bad)
xor
cmp
frstor
call
scas
mov
pop
dec
and
push
mov
jp
sbb
mov
pushf
aaa
adc
scas
push
pop
ror
push
sub
mov
dec
pop
mov
pop
and
popa
fimul
adc
and
ret
adc
loopne
mov
test
fisttp
sti
xchg
cmp
pop
adc
adc
push
sbb
stc
sar
jne
push
ret
ins
dec
cmc
fdivr
ds
stos
or
out
les
test
call
aad
arpl
imul
jno
outs
loope
push
xchg
mov
add
js
pop
mov
xor
xor
mov
pop
aam
push
ror
jecxz
fsubr
jp
inc
(bad)
mov
repz
loop
mov
or
mov
ins
adc
cld
or
ds
arpl
sbb
push
jecxz
dec
sahf
retf
and
dec
jbe
xlat
mov
dec
mov
aad
jne
je
push
and
jmp
lods
xor
std
(bad)
jge
mov
es
sbb
mov
jnp
pop
cmps
xor
rol
ss
fist
aas
test
scas
scas
push
xchg
stos
nop
add
xchg
leave
shr
pop
popf
xchg
sub
imul
scas
pushw
stc
inc
add
xlat
push
pop
push
ds
scas
jmp
and
in
mov
add
stos
movs
loop
sub
jge
and
pop
mov
pushf
cmps
addr16
test
(bad)
mov
mov
stos
loopne
std
in
fsubr
jnp
int
xlat
sbb
xchg
data16
popf
fsub
mov
gs
cmp
mov
xchg
adc
add
pop
xor
in
rcl
jo
inc
daa
cmps
inc
(bad)
shl
xor
leave
mov
repnz
mov
adc
cmp
(bad)
xchg
fsubr
pop
mov
or
mov
(bad)
leave
xor
xchg
mov
xor
xchg
lods
stc
(bad)
mov
scas
adc
aad
mov
jmp
cdq
add
addr16
xor
fld
mov
push
cmp
mov
push
sub
icebp
fcomip
ja
add
push
cmps
idiv
or
pop
cmps
xor
and
stos
adc
jns
add
mov
jmp
xor
into
inc
mov
nop
xlat
and
(bad)
jg
into
dec
movs
bound
out
inc
mov
inc
(bad)
and
movs
shl
xor
dec
pop
je
or
int
cdq
stos
fcom
movs
popfw
ins
pop
arpl
xor
(bad)
(bad)
cmp
jb
std
das
cmp
pushf
leave
adc
cmp
add
mov
jbe
cmp
add
adc
cmp
mov
jg
mov
ds
test
(bad)
sbb
xchg
push
pop
xchg
fwait
cmp
jl
mov
adc
pop
(bad)
cs
xor
mov
pop
xor
pop
or
popa
sbb
jle
je
bound
xchg
cld
pop
lahf
mov
jmp
and
mov
adc
enter
mov
lea
cli
add
push
jl
in
cmps
scas
aad
mov
inc
and
call
sbb
adc
ins
call
adc
inc
jno
test
lahf
xchg
sbb
sub
or
and
inc
popw
(bad)
xor
jg
ins
jb
dec
push
clc
in
sbb
and
push
push
sbb
cmps
fwait
cmps
lods
mov
(bad)
(bad)
sub
jmp
lock
add
mov
mov
inc
mov
test
sti
mov
out
push
icebp
lock
add
add
in
out
push
jmp
xor
sub
sbb
out
or
idiv
ja
add
mov
aad
xchg
daa
cdq
pusha
add
ja
aas
jmp
jmp
ins
into
stos
mov
fcomip
xlat
fsub
ins
inc
stos
icebp
or
mov
push
arpl
mov
inc
mov
dec
push
mov
in
push
jl
push
fbld
into
je
idiv
xor
push
push
fsubr
dec
cld
sub
xor
dec
les
cmp
repz
sbb
ins
push
gs
leave
loope
ret
pop
push
ins
sub
in
in
adc
pop
push
and
call
push
pop
test
lock
out
(bad)
mov
mov
(bad)
pop
fs
loop
adc
jge
out
push
sbb
imul
jle
xchg
(bad)
xchg
cmovbe
mov
cmp
mov
into
sub
inc
stos
mov
das
pop
pop
mov
repnz
and
inc
lea
call
or
pop
mov
ds
outs
pop
push
push
xchg
faddp
lds
rol
(bad)
shl
sub
cli
and
cmp
(bad)
repz
and
cmp
loopne
(bad)
push
fdiv
push
mov
pop
cmp
test
jb
pop
adc
(bad)
fldcw
push
js
call
dec
in
(bad)
mov
jecxz
cli
dec
sbb
loopne
bound
cmp
int
(bad)
dec
xchg
imul
add
and
stc
aam
int3
mov
adc
fnstcw
lods
inc
jp
in
adc
sub
imul
sub
fsave
lods
call
jnp
mov
inc
xchg
cmp
out
fimul
inc
xchg
sahf
repz
add
in
cmc
aam
mov
movs
xor
or
mov
pop
cmps
test
and
and
mov
sbb
mov
(bad)
adc
mov
mov
shr
jno
push
in
add
into
adc
shl
(bad)
mov
fwait
dec
je
pop
int
scas
and
jmp
sub
cwde
jnp
sub
jmp
std
xor
dec
pop
mov
and
in
mov
pop
jnp
jb
jl
inc
inc
add
lock
adc
add
sbb
repz
jns
cmp
adc
movs
inc
dec
sbb
add
test
adc
cmp
test
sbb
daa
vandps
xor
and
outs
push
(bad)
in
out
push
(bad)
push
shr
push
ins
ds
dec
loop
stos
xchg
push
push
xchg
out
stos
push
call
inc
enter
mov
daa
push
push
pushf
bndstx
data16
scas
icebp
test
mov
pop
jae
add
sub
ds
push
bound
shl
lahf
shl
das
push
ds
jle
mov
pop
xchg
push
push
pop
fisub
fimul
test
repz
and
pop
adc
jnp
cli
add
fldcw
mov
jmp
adc
stc
xchg
fstp
xor
adc
ret
add
pop
add
dec
push
xchg
stos
cli
add
outs
call
push
outs
aaa
iret
aas
push
adc
repnz
pusha
add
repnz
mov
xor
aad
mov
sti
cmp
cs
pop
or
idiv
inc
in
loop
jg
mov
leave
imul
xlat
or
cwde
xchg
xchg
(bad)
scas
mov
clc
nop
pop
xchg
fild
push
or
jp
adc
mov
inc
sbb
mov
add
out
and
enter
xchg
loope
in
hlt
inc
inc
cmp
sbb
adc
adc
push
and
sbb
jle
popa
jae
mov
icebp
sub
test
mov
mov
cmp
jge
mov
rcr
out
ret
sbb
pop
lahf
(bad)
xchg
test
inc
sti
cli
inc
sub
bound
dec
(bad)
fidivr
sub
stos
cdq
xor
mov
aas
nop
pop
rcl
(bad)
in
ds
js
xor
lods
or
out
mov
cs
mov
dec
pop
cmc
ins
inc
push
cmp
ja
jb
mov
test
aas
imul
jl
pop
(bad)
rol
js
and
jmp
cwde
xchg
iret
popf
push
pushf
cld
ret
inc
pop
mov
(bad)
dec
ficom
pop
push
ret
xor
stos
cmp
std
movs
jl
into
and
fisttp
and
sub
jnp
push
dec
mov
push
xchg
cmp
push
jo
cmp
pop
in
imul
fsub
pusha
or
popf
adc
iret
cmp
pop
cmp
and
mov
or
sbb
push
(bad)
shl
test
les
lods
xor
xor
mov
dec
mov
adc
or
jmp
idiv
es
xchg
(bad)
pop
cld
in
adc
(bad)
sbb
push
inc
cmp
mov
aam
(bad)
mov
fs
mov
xor
pop
jno
fstp
lods
fidiv
ror
sub
ficom
aaa
es
adc
and
int3
rcl
inc
jbe
stos
das
scas
fbld
sbb
movs
sahf
dec
pop
ffreep
add
jb
add
nop
icebp
mov
jecxz
jmp
pop
pushf
mov
xor
test
div
into
adc
icebp
dec
add
add
or
out
adc
rcl
sbb
mov
loop
ja
mov
pop
sahf
push
cs
push
add
inc
adc
aam
(bad)
leave
sar
arpl
sahf
push
ins
push
sub
(bad)
jno
dec
inc
or
dec
and
cdq
or
adc
call
fisttp
mov
into
mov
inc
mov
sub
push
jecxz
sub
loopne
in
xor
lea
push
shr
shr
dec
popa
xor
in
ja
fisttp
mov
push
push
je
int3
xchg
adc
and
mov
pop
xor
retf
aaa
fnstcw
mov
adc
arpl
imul
or
or
rcl
jns
cdq
movs
dec
jne
adc
in
jne
jne
movs
fcom
mov
scas
test
pusha
xchg
test
lahf
inc
mov
xchg
pop
inc
mov
xor
add
add
cs
lods
xor
neg
cs
or
add
sub
dec
sbb
stos
push
jae
sub
xor
jae
mov
mov
pop
aaa
xor
mov
ja
xlat
push
inc
cmp
mov
jmp
lahf
sbb
and
cwde
push
mov
cmp
pop
in
pop
inc
aam
inc
xor
rcr
pop
pop
xchg
mov
mov
std
add
daa
or
mov
mov
push
mov
push
xor
adc
int3
jb
cmp
cmp
mov
push
jl
mov
xchg
inc
fidivr
xchg
jns
sti
or
jl
sbb
retf
push
fsubrp
sbb
cmp
inc
push
mov
inc
cmp
les
ja
lods
jae
out
mov
int3
mov
mov
pop
jb
jge
cmp
enter
jne
mov
inc
mov
rol
adc
pop
adc
ret
pop
hlt
inc
pop
pop
aas
sti
push
stos
test
push
add
mov
xchg
mov
jle
ja
fs
xor
push
lahf
pusha
out
jbe
sub
nop
mov
(bad)
xor
inc
sbb
fist
ins
js
adc
inc
sub
add
addr16
xor
mov
shl
retf
adc
add
dec
outs
ins
cmp
jb
push
xor
stc
cmp
inc
test
aaa
or
daa
push
shl
jae
add
test
test
mov
jns
aas
out
cmc
call
push
mov
cmp
xor
mov
xchg
mov
std
jecxz
push
fsubr
fwait
into
sub
mov
cmp
int
ins
jno
pop
ret
cmps
inc
jp
mov
mov
ret
pop
shl
add
xchg
(bad)
ror
icebp
jb
les
mov
push
push
mov
adc
loopne
xor
(bad)
pusha
rcl
idiv
inc
xor
push
fnsave
ja
rol
rcl
and
iret
sub
add
or
neg
push
test
test
jbe
jl
add
hlt
in
cli
lea
mov
sub
or
lea
ret
and
cld
icebp
cdq
enter
movs
mov
and
cmp
or
push
ret
sub
add
sbb
out
aam
add
jl
xor
in
shl
push
div
sub
es
adc
imul
(bad)
cs
in
popa
enter
repnz
and
xor
xchg
jl
fdiv
imul
adc
nop
push
or
mov
je
outs
sti
add
mov
adc
and
sti
cdq
clc
aad
mov
std
jg
and
les
loope
cmps
mov
test
loop
dec
or
cmc
hlt
jb
mov
ret
add
sti
add
add
sti
movs
add
push
aaa
loop
ret
xchg
dec
jnp
mov
in
mov
iret
cmps
arpl
lds
xor
inc
repz
push
lods
mov
les
mov
jg
lods
push
hlt
fsub
cld
outs
scas
or
clc
fdivr
div
cmc
mov
push
adc
and
push
add
xchg
push
sub
mov
retf
pushf
aad
push
and
cmp
cmc
ds
das
fwait
cmp
or
cld
pop
push
(bad)
inc
adc
sub
test
imul
ror
xor
xor
mov
dec
pop
aaa
arpl
adc
inc
in
pushf
dec
xchg
movs
dec
pop
xchg
adc
movs
sub
call
dec
push
mov
test
jno
sbb
xchg
test
data16
xchg
jecxz
cmc
inc
hlt
cmp
out
stos
xchg
cmp
xchg
call
adc
ds
mov
jp
push
xor
jb
jmp
das
and
mov
mov
lds
icebp
sbb
cmps
mov
movs
outs
xchg
inc
push
ror
popf
in
or
cmp
cmp
dec
add
fabs
xchg
xchg
scas
mov
stos
xchg
inc
retf
in
push
pop
dec
fiadd
scas
or
rcr
loope
pop
loop
or
(bad)
fmul
scas
or
cmps
int3
sub
mov
mov
daa
(bad)
cmp
xchg
pop
pop
push
(bad)
into
lds
sub
mul
mov
outs
sub
lods
ds
push
pushf
rol
jns
or
loope
mov
push
pop
or
mov
mov
xchg
sbb
mov
sbb
mov
xor
(bad)
enter
arpl
int
fdiv
(bad)
sub
xor
push
loope
scas
fisubr
arpl
aam
ins
sbb
imul
(bad)
lea
mov
mov
push
inc
in
bound
xor
inc
jo
fstp
jle
scas
les
(bad)
fist
and
jle
(bad)
call
test
enter
xchg
mov
inc
cmps
cld
shl
fsubr
jae
aas
out
out
and
iret
ret
aas
sub
push
scas
jl
mov
mov
dec
push
xchg
lock
cmps
out
in
inc
sub
popa
sub
mov
cs
retf
repz
mov
ds
mov
data16
adc
and
(bad)
jl
xor
ret
pop
push
cmp
jl
sub
out
or
push
cmc
mov
mov
mov
icebp
xor
push
mov
test
into
add
rol
ror
das
pop
stos
ret
mov
(bad)
jbe
and
clc
cli
xchg
dec
adc
adc
pop
push
fwait
leave
adc
aas
in
and
lods
idiv
lahf
loope
mov
and
dec
dec
out
je
mov
call
or
dec
mov
(bad)
loop
xchg
jle
cmps
mov
loope
jb
pop
das
jo
xor
inc
stos
jbe
adc
mov
shr
sti
and
frstor
fdivr
xchg
jno
sub
jmp
dec
sar
push
bound
push
mov
rcr
xor
xchg
mov
dec
retf
add
nop
call
push
es
sahf
mov
xchg
xor
js
cmp
push
cmp
inc
sbb
lock
sub
push
push
push
mov
mov
addr16
push
add
push
inc
cmp
call
std
mov
aad
test
loope
xor
xor
push
test
jns
clc
push
icebp
adc
xchg
fist
std
rcr
jl
pop
imul
inc
test
mov
and
xchg
icebp
hlt
jns
cmps
das
push
pushf
fsub
pop
(bad)
sbb
jp
jb
stc
out
movs
push
or
mov
les
xor
iret
sti
sti
sbb
push
add
test
movs
mov
sub
and
fadd
daa
fcom
mov
jno
in
loope
popa
icebp
mov
mov
sub
pop
add
mov
dec
aas
fsubr
sahf
inc
dec
rcr
ror
loope
out
les
ss
and
adc
jae
movs
cli
jbe
aad
addr16
ds
pop
mov
shl
mov
loopne
xor
ds
jae
pop
imul
addr16
test
into
ror
xor
test
adc
repz
arpl
call
jo
jmp
jnp
cdq
pop
fldcw
call
fnstcw
daa
push
(bad)
in
dec
jp
bound
sbb
xor
xor
and
div
mov
mov
popa
fistp
sbb
das
ret
jbe
or
out
in
aam
jae
ror
or
cmp
or
jb
cmp
push
repnz
push
mov
add
das
retf
jbe
(bad)
fwait
cmp
scas
cmp
sbb
lahf
out
push
xchg
pushf
ss
and
sbb
out
cmp
sub
cli
xlat
adc
and
lea
stos
adc
mov
xor
jle
fcom
mov
movs
sbb
push
xchg
js
int3
mov
cld
push
and
mov
popf
outs
sar
jmp
cmp
stos
jmp
stos
popf
and
adc
add
int3
fldenv
add
adc
mov
sti
xchg
push
loopne
sub
jo
in
sbb
ror
push
push
mov
rcl
jl
cmp
adc
aas
sub
stos
xor
mov
in
push
sbb
or
fidivr
jge
jo
sbb
outs
stc
or
mov
mov
iret
inc
lar
or
pop
push
(bad)
push
adc
sbb
jnp
fistp
outs
mov
sub
popa
ds
jg
fs
sbb
mov
mov
mov
mov
jp
outs
call
pop
aam
cmp
add
mov
mov
add
jge
sbb
or
loop
(bad)
mov
sbb
add
imul
and
in
mov
outs
sbb
jmp
pusha
sub
adc
xchg
xchg
dec
pop
pop
adc
inc
into
loop
cld
pop
sub
mov
mov
adc
xchg
call
fcomp
sbb
arpl
(bad)
scas
mov
add
mov
inc
pop
stos
jg
sub
lea
xchg
out
jbe
aam
pop
adc
and
repnz
(bad)
frstor
ins
jp
inc
into
ins
sub
dec
(bad)
out
popf
ret
lods
adc
inc
xor
ror
out
movs
xor
xchg
add
pop
aas
xchg
(bad)
sar
mov
push
lea
(bad)
cmp
xor
cmc
test
scas
gs
pop
and
push
push
stc
mov
adc
mov
cs
lea
xrelease
imul
sub
jecxz
test
add
xor
add
data16
xchg
push
adc
inc
or
mov
xor
cmp
shr
mov
jne
(bad)
sbb
sbb
sbb
fisubr
call
push
mov
sahf
mov
aas
mov
shr
sbb
push
adc
aaa
ins
bound
xchg
jbe
push
xor
mov
or
sub
scas
or
push
pusha
sub
es
push
fwait
aam
push
and
jg
or
ret
gs
scas
xor
movs
cld
mov
mov
dec
mov
les
dec
js
jnp
dec
push
sbb
add
in
dec
fmul
or
stos
and
stos
add
mov
(bad)
and
call
add
daa
mov
dec
sub
fiadd
int
dec
jp
imul
or
mov
imul
mov
(bad)
call
je
and
push
test
cmp
add
sbb
jno
add
adc
sbb
inc
mov
cmp
lods
lods
dec
mov
lds
(bad)
push
imul
jecxz
fsub
aam
out
adc
sti
in
mov
jmp
mov
cmps
mov
mov
ss
packssdw
in
popf
jnp
lods
fwait
push
out
dec
xchg
add
sbb
mov
pop
jg
test
xchg
nop
lahf
dec
and
mov
sar
sub
and
add
or
pushf
fdivr
scas
in
push
add
into
test
retf
outs
outs
or
and
xchg
(bad)
sbb
(bad)
pop
mov
nop
mov
cmp
jmp
inc
xor
mov
pop
scas
int
outs
test
and
arpl
xlat
pop
adc
push
dec
cli
xor
push
sbb
gs
push
or
jb
outs
mov
nop
addr16
add
test
scas
pop
mov
jmp
and
cmp
lea
jo
pop
(bad)
sub
sahf
sub
dec
mov
or
lahf
mov
in
pop
mov
gs
adc
outs
ds
mov
adc
mov
xlat
xchg
ret
imul
xor
or
jo
cmp
in
adc
sub
pop
mov
and
mul
push
icebp
inc
cmp
and
xchg
pop
lods
rol
fisub
mov
or
in
icebp
daa
push
mov
in
inc
sub
nop
pop
or
mov
and
lods
cmp
fild
xor
mov
loope
and
test
mov
xchg
(bad)
outs
nop
call
push
leave
mov
inc
(bad)
std
xor
imul
pop
loopne
dec
inc
into
pop
mov
movs
mov
leave
je
jmp
sub
repz
xchg
int
shl
adc
push
popf
out
fsubr
adc
mov
aaa
sub
cmp
adc
push
loop
jo
xchg
lock
mov
lods
int
dec
shr
mov
not
clc
push
nop
mov
es
mov
sub
pop
mov
push
xor
sbb
inc
or
iret
push
ins
dec
mov
lods
(bad)
shl
pop
push
fwait
mov
test
ret
sub
push
xchg
dec
(bad)
shl
xchg
fstp
cmp
daa
out
add
or
mov
push
into
out
fsub
or
jmp
xchg
sub
cli
addr16
jl
ror
iret
sar
sub
cmp
xchg
push
js
call
push
push
cmps
and
mov
cmps
push
and
out
fcmove
push
mov
push
add
sti
(bad)
stos
mov
repz
pop
dec
xchg
or
gs
adc
xor
mov
mov
addr16
mov
sbb
in
icebp
mov
jb
lock
iret
out
add
inc
sbb
pop
std
push
mov
xchg
(bad)
dec
xchg
jge
fs
sti
push
sbb
cmps
sub
mov
call
adc
repnz
xchg
sub
jns
sub
lock
pop
xchg
es
or
mov
pop
or
in
mov
out
pop
pop
adc
sar
sar
jl
ret
inc
mov
fstp
lea
or
je
clc
or
jae
dec
add
lahf
jle
in
and
dec
pusha
(bad)
ficom
out
int3
sub
shl
sub
cmc
mov
sbb
stc
inc
pop
xor
movs
js
jg
inc
push
mov
mov
fcmovnu
mov
or
push
mov
(bad)
int
xchg
sub
clc
xlat
push
aad
rol
mov
retf
or
dec
call
pop
add
inc
xchg
add
cmc
repnz
and
xor
jmp
push
cmp
or
jl
cmp
jae
pop
sbb
dec
sub
stos
cmp
xchg
mov
jne
xchg
dec
aaa
cmp
out
dec
dec
adc
sub
in
sti
loop
movs
ret
lds
imul
cmps
out
pop
xchg
dec
push
cmp
adc
ins
cdq
and
mov
mov
cs
popa
mov
test
dec
movs
nop
xchg
inc
mov
push
jl
arpl
sbb
jne
ins
inc
adc
jnp
in
mov
ret
in
pusha
and
fstp
lea
jo
push
xor
pop
and
movs
sbb
pop
xchg
push
xor
out
cwde
sbb
push
retf
lock
adc
imul
lahf
and
pop
pop
sub
fadd
jecxz
popf
and
xlat
jg
cmovge
and
mov
out
jmp
fld
mov
cmc
ja
push
add
push
adc
pusha
xor
ins
jecxz
outs
movs
pop
movs
push
lock
cmp
icebp
cmps
fs
cli
std
test
test
int
std
je
cmp
xchg
scas
js
fsubp
in
and
sub
sbb
rcr
cmp
out
mov
add
inc
jnp
adc
mul
cld
popf
shl
inc
rcr
aad
cwde
dec
(bad)
rol
test
bound
repnz
sar
loopne
xchg
clc
test
out
xor
jne
jl
adc
mov
out
or
push
popa
push
mov
push
mov
(bad)
sub
lock
aam
and
cli
and
inc
(bad)
push
pop
clc
cli
sub
lahf
mov
rol
inc
addr16
das
fstp
mov
cbw
sub
cmps
daa
adc
fild
call
jo
addr16
mov
inc
sbb
shl
sub
mov
mul
mov
adc
inc
inc
adc
fdiv
push
(bad)
jmp
jns
hlt
out
fsub
xchg
xchg
add
(bad)
outs
test
mov
mov
cmp
mov
fdivr
das
out
mov
rol
cmps
int3
adc
cmp
cmp
pop
ret
sbb
leave
lods
je
stos
sbb
cld
pop
retf
xchg
jp
mov
outs
icebp
outs
lods
jg
leave
push
inc
lods
sub
data16
push
movnti
push
ins
popf
js
mov
push
int3
pop
mov
ret
ds
cs
inc
inc
in
int
adc
bound
jnp
enter
out
cld
arpl
mov
retf
xchg
jp
push
cmp
or
jg
sub
dec
ja
push
cmp
add
std
pusha
xchg
call
sub
outs
push
dec
in
lods
leave
push
test
sub
push
lock
or
sub
popf
mov
adc
add
mov
pop
mov
inc
push
push
mov
pop
push
jmp
add
aas
pop
imul
dec
sub
fimul
mov
xlat
lods
retf
jno
push
mov
push
xchg
test
add
ins
aaa
mov
mov
jp
cmc
arpl
jmp
dec
push
(bad)
int
fmul
push
adc
and
les
adc
int3
sub
(bad)
mov
or
sub
jae
mov
jnp
(bad)
jge
addr16
dec
xor
mov
dec
mov
repnz
lds
les
jno
mov
outs
sub
dec
dec
(bad)
push
push
dec
lods
pop
pop
add
cmp
iret
aad
cmp
dec
nop
iret
jp
mov
daa
(bad)
pop
test
pop
xchg
dec
ins
fwait
inc
shl
mov
movs
test
dec
call
int
neg
jbe
push
dec
in
ret
jmp
adc
xor
stos
mov
int
call
ret
fisttp
sub
fstp
or
jmp
ds
xor
test
sub
stos
mov
adc
xchg
xor
cs
add
sbb
aaa
shl
ss
cdq
out
xchg
adc
jns
dec
(bad)
add
into
pop
cmc
xchg
inc
jp
cmp
in
scas
nop
cmp
adc
adc
cld
repnz
les
je
int
adc
out
push
cli
inc
out
sbb
pop
adc
mov
pop
(bad)
xchg
push
fidivr
add
mov
inc
nop
inc
jno
or
sti
loope
enter
and
and
add
outs
adc
or
add
dec
cdq
sar
daa
mov
jbe
fwait
rol
(bad)
sbb
iret
pop
xchg
inc
enter
xlat
aam
jb
fs
add
lahf
inc
push
mov
les
cmp
ss
sbb
test
add
xchg
cmps
xor
test
fs
dec
mov
cmps
inc
or
addr16
mov
fadd
sti
jb
movs
cld
repz
mov
int3
retf
fstp
push
add
mov
outs
pushf
imul
ret
mov
mov
sbb
dec
lods
sbb
push
add
cmps
cmp
in
and
je
ins
rcr
daa
dec
ret
lahf
xor
imul
pushf
rcl
xor
movs
mov
movlps
(bad)
cmp
inc
in
xor
repz
call
sub
or
(bad)
fiadd
aad
test
ins
nop
cmp
shr
in
xchg
inc
ficomp
test
mov
mov
scas
dec
mov
push
popf
stc
call
repnz
out
jge
leave
outs
ret
ds
or
jns
(bad)
lahf
sbb
cmp
addr16
sbb
xor
fcomp
loopne
out
add
mov
int
fdivr
repnz
pop
(bad)
cmp
push
add
fistp
out
dec
mov
loopne
fisub
fs
btc
push
inc
cmp
fisubr
mov
jge
in
xchg
iret
test
or
cmp
popa
inc
xchg
cdq
(bad)
call
fimul
dec
(bad)
jmp
shl
aaa
pop
lahf
aam
movs
sub
fs
sar
pop
pop
inc
xor
retf
mov
adc
enter
pop
ret
pop
jmp
(bad)
ss
in
push
cld
out
xchg
push
add
cld
ins
push
mov
xchg
aam
enter
daa
add
cmps
mov
and
stos
iret
mov
stos
sub
add
push
sub
mov
inc
dec
jle
dec
xchg
movs
push
ret
imul
stos
stc
retf
xor
push
aad
xchg
je
adc
push
retf
and
nop
jecxz
mov
stc
and
xor
lods
pop
outs
pop
jecxz
mov
repnz
dec
sahf
jg
inc
push
inc
mov
rcr
test
mov
les
cmp
adc
sti
mul
(bad)
ficomp
mov
mov
rol
aam
es
lods
repnz
shr
test
mov
pop
into
rol
pop
cmp
push
ret
xor
xor
hlt
cmp
test
(bad)
outs
fiadd
jnp
in
cmp
mov
dec
adc
fs
outs
jne
or
sbb
popf
jl
cli
sbb
clc
push
and
js
ror
inc
dec
not
iret
xor
and
or
lea
xor
push
add
pop
dec
pop
cmc
and
pop
scas
loopne
fs
adc
pop
adc
popa
mov
inc
push
fwait
jle
sub
aas
mov
mov
push
(bad)
lods
movs
pop
shl
mov
jmp
(bad)
int3
mov
mov
das
xor
jae
(bad)
xor
mul
xor
and
adc
jnp
arpl
sub
out
call
leave
cmc
cmp
sbb
loope
sbb
jge
jo
pushf
mov
dec
in
loopne
and
sub
ss
jmp
cmc
aas
inc
cwde
and
sub
mov
pop
int3
fbld
push
pop
mov
mov
movs
mov
retf
push
cmps
inc
scas
scas
sbb
pop
popf
mov
in
adc
js
call
pop
push
xchg
sti
ror
daa
xchg
mov
mov
mov
jne
or
push
adc
js
sbb
out
shr
fwait
add
adc
mov
sub
ds
push
pusha
mov
push
retf
inc
xor
mov
sbb
mov
jmp
mov
xor
ss
lahf
loop
(bad)
aam
in
or
pop
loopne
add
sub
push
xor
into
(bad)
iret
shl
fsubr
add
mov
jmp
pop
jae
retf
shl
test
les
and
cmp
xchg
frstor
scas
fwait
cmp
or
(bad)
jne
jp
adc
cmp
and
and
push
dec
and
xlat
and
and
add
xlat
js
push
gs
bound
shl
pop
mov
xchg
adc
scas
mov
test
retf
sub
stos
xchg
inc
shr
cli
push
fcmovnbe
or
dec
inc
lods
dec
add
jne
in
add
fiadd
push
mov
mov
inc
loope
retf
fucom
and
pop
in
pop
out
pusha
pop
fadd
cmp
and
dec
push
scas
jbe
retf
jns
xchg
mul
mov
fnsave
int3
xchg
sub
cmps
in
jg
call
add
out
imul
or
stos
mov
sub
into
push
xor
or
loope
faddp
pop
xchg
sub
mov
mov
sub
idiv
pop
repz
dec
outs
popa
and
(bad)
jns
inc
loop
mov
mov
cmp
pop
std
(bad)
jo
outs
retf
and
ret
imul
mov
mov
xor
daa
xchg
or
push
cld
ret
xchg
cli
rcr
push
xor
sub
adc
in
in
in
mov
xor
idiv
pop
and
inc
jmp
push
pop
cmps
mov
push
jno
push
cmp
cmc
cmp
inc
jae
adc
mov
scas
xchg
ins
inc
(bad)
push
dec
lahf
sub
push
movs
movs
in
das
loop
nop
aaa
mov
xchg
ss
clc
in
jecxz
ins
dec
out
push
xchg
or
bnd
ret
test
stos
(bad)
ss
mov
add
and
es
sub
mov
cmp
jo
cli
and
test
push
cmp
add
mov
cdq
xchg
jle
aam
or
and
jp
cdq
fdivr
xor
jo
pop
retf
lock
dec
sub
xchg
sub
inc
in
and
mov
inc
pop
xchg
rcl
outs
ret
je
xor
lock
std
pop
lock
push
icebp
cmp
push
push
mov
inc
cmps
xor
xchg
out
pop
push
movs
in
aam
push
mov
retf
je
in
adc
sbb
loop
out
ror
mov
xchg
adc
push
rcl
adc
test
ret
cwde
sub
fwait
push
mov
sar
add
outs
aas
out
sbb
dec
fisubr
test
or
jnp
mov
push
rcl
sbb
inc
aad
loope
popa
mov
sbb
cmp
or
mov
popf
dec
stos
(bad)
imul
lea
adc
or
int3
mov
pop
mov
sar
cmp
pop
sbb
xor
add
mov
xlat
xchg
sub
fldenv
mov
or
shr
test
pop
push
sbb
xor
(bad)
xchg
dec
cmps
jne
push
pop
cld
or
dec
cli
dec
test
pop
leave
scas
cmps
sub
leave
repz
ds
aaa
movs
icebp
xchg
xor
dec
pop
sub
fcom
outs
xor
sar
bound
(bad)
fbld
std
imul
imul
xor
stos
div
push
cmc
aas
in
jnp
das
inc
rol
nop
mov
dec
push
scas
jne
pop
add
mov
or
push
call
jmp
fs
dec
div
push
mov
cdq
imul
mov
scas
sub
pop
ror
dec
add
sbb
dec
jns
or
lahf
cmp
fs
arpl
mov
out
cmp
mov
mov
mov
call
loopne
in
in
or
sub
fdiv
icebp
test
call
jmp
xchg
xor
cmp
mov
fs
ja
sub
mov
or
adc
retf
les
rcl
popf
add
es
nop
jns
add
cmp
pop
jo
mov
les
clc
sahf
in
jmp
adc
ss
adc
push
popa
pop
adc
xchg
repnz
test
stos
call
or
and
(bad)
dec
popa
div
fist
mov
pusha
nop
sbb
dec
push
and
dec
pop
inc
mov
xchg
lock
fist
mov
push
jl
aas
mov
ins
clc
sbb
fisub
fwait
and
adc
(bad)
xchg
(bad)
fstp
mov
push
pop
sbb
out
inc
sbb
mov
mov
cmp
dec
adc
push
pop
ins
scas
pop
add
outs
jp
cld
in
and
aam
xor
jo
mov
or
xchg
outs
pusha
gs
or
enter
movs
stc
sub
addr16
and
dec
and
jge
push
dec
call
dec
(bad)
fisubr
jno
std
xchg
xor
repnz
out
lea
loopne
std
mov
daa
sti
pop
or
inc
or
repnz
sub
das
fisttp
enter
pop
rcl
xchg
ds
adc
jp
movs
shl
mov
xchg
xlat
push
adc
jne
std
dec
jmp
push
shl
sar
sub
imul
xchg
mov
icebp
into
pop
call
mov
loop
call
fld
and
test
dec
push
loope
mov
mov
int
cmp
jg
sub
mov
pop
sbb
stos
mov
push
add
test
cmps
outs
sub
jo
jge
push
push
cmp
pop
das
dec
push
scas
xor
adc
enter
mov
in
sti
das
scas
mov
jb
dec
push
test
arpl
xchg
stos
or
out
sub
rcr
inc
mov
jmp
inc
cmp
test
push
and
jno
mov
xor
jg
pop
fistp
cmp
mov
pop
pushf
sbb
sti
sub
or
xor
pop
and
push
ret
jge
ficomp
out
jb
xor
hlt
les
xchg
dec
xor
or
mov
jp
pop
repnz
mov
jne
fdiv
push
push
pop
ja
mov
cmp
inc
pop
mov
outs
jae
mov
icebp
jae
psubw
daa
mov
sub
pop
fadd
or
(bad)
jmp
mov
fdiv
call
clc
push
pushf
test
cmp
or
lea
ret
pusha
outs
mov
ja
repnz
pop
xor
mov
imul
call
pop
out
push
and
or
enter
gs
sbb
lock
sti
and
and
jne
shufps
ret
fdiv
add
adc
mov
aas
shr
pop
fistp
xor
cmps
or
pushf
jbe
mov
or
lods
popa
adc
jmp
dec
jnp
inc
adc
mov
out
test
xor
int
push
and
fld
xor
mov
push
gs
sbb
imul
mov
push
xchg
mov
loopne
lods
repz
js
out
addr16
or
push
add
cld
push
jecxz
js
or
inc
lods
stc
sahf
inc
cwde
sub
arpl
(bad)
retf
mov
lds
pop
repz
rcl
push
jno
inc
xchg
out
jge
add
sub
ja
lock
sbb
movs
sub
repnz
push
xor
lods
jbe
push
dec
call
leave
aas
fs
add
jge
(bad)
cmp
or
movs
mov
test
sbb
jp
or
mov
ss
xor
nop
stos
and
jb
cmc
mov
mov
pop
inc
or
jnp
ds
and
sahf
test
adc
fsub
iret
pop
cmp
fadd
push
neg
mov
lock
pop
push
xchg
cmps
pusha
mov
pushf
sbb
ds
es
pop
dec
cmp
in
cmc
fidivr
xor
out
pushf
jns
clc
dec
dec
mov
shl
movs
ret
retf
pop
out
xchg
cmp
pusha
pop
xor
in
ret
jno
xchg
jne
inc
imul
mov
sbb
shr
mov
ins
(bad)
lods
push
cmp
or
push
mov
sub
sar
aas
sub
cmp
lea
clc
fs
pop
iret
rcr
push
sar
iret
jno
cld
outs
pusha
stos
fadd
sbb
add
sub
clc
pop
jns
push
sahf
jno
ret
in
sub
push
jb
mov
inc
and
push
xchg
jae
stos
cmps
sbb
push
xchg
mov
aaa
ftst
clc
push
aam
in
mov
pop
into
push
stc
cmps
ja
push
fst
lods
pop
outs
jne
push
jmp
sbb
mov
dec
mov
(bad)
dec
adc
mov
mov
dec
(bad)
jl
sbb
outs
loope
shr
xor
imul
(bad)
icebp
test
movs
mov
shl
arpl
add
int3
inc
shl
adc
fs
add
mov
stc
lods
and
inc
pop
xchg
sbb
or
sbb
arpl
mov
stc
inc
in
ins
xor
sbb
sti
push
mov
call
imul
repz
inc
repz
retf
jg
hlt
add
lds
outs
or
arpl
out
xchg
stos
push
mov
ins
inc
dec
test
mov
repz
xchg
dec
adc
and
mov
call
xor
ja
rcl
add
sti
xor
outs
lahf
scas
ret
cmp
bound
sbb
push
jg
(bad)
fidivr
sbb
sbb
fcomp
leave
pusha
lds
(bad)
dec
inc
mov
jge
adc
fdivr
aam
in
or
and
fcom
dec
call
sub
ror
pop
aad
enter
pop
popa
cmp
cwde
ffree
and
jo
lock
mov
xchg
fdiv
cs
pop
je
lods
ins
fstp
add
xchg
jo
sbb
es
mov
inc
sti
fldcw
xchg
and
aam
ds
hlt
ret
pop
cmp
int
fstp
je
pop
push
cmp
mov
sbb
xor
out
push
lock
das
jne
out
push
out
sbb
pop
loop
mov
(bad)
xor
mov
or
lahf
fcomp
cmp
and
xchg
jmp
sub
push
sbb
into
loopne
lods
lahf
and
push
movs
or
pop
dec
data16
pop
mov
adc
or
in
jle
cld
sti
pushf
sbb
imul
mov
out
cld
fstp
popa
mov
push
push
xchg
dec
mov
mov
sub
xchg
aam
pop
fcmovnb
xchg
fstp
std
adc
mov
cmp
cdq
out
into
xchg
test
mov
push
arpl
jg
push
xchg
inc
xlat
dec
push
ins
je
cld
iret
pop
push
add
mov
aaa
sbb
sbb
adc
loope
xchg
ds
cld
add
mov
ja
and
dec
aad
mov
inc
ins
mov
ds
enter
leave
and
jmp
retf
pop
call
jge
and
enter
cwde
mov
loopne
inc
ss
dec
cmp
and
mov
jecxz
sbb
xor
leave
jno
loope
fcmovnbe
inc
or
repnz
mov
ss
xchg
mov
pop
cwde
push
inc
(bad)
sbb
cmc
fsubp
hlt
add
in
mov
cmp
push
pop
mov
or
loope
cmc
test
adc
mov
mov
daa
shl
stos
sbb
movs
sti
xchg
add
je
je
out
cmp
les
pop
lahf
jmp
sbb
scas
(bad)
mov
movs
pop
add
data16
push
inc
inc
cmp
(bad)
pop
loopne
xchg
jmp
push
or
lahf
mov
push
fwait
inc
and
addr16
dec
or
jnp
mov
sub
push
cdq
fst
jnp
div
sub
cdq
das
pop
or
mov
lods
sub
pushf
mov
jnp
iret
aad
xor
pop
cdq
lods
sbb
pop
shr
adc
mov
cli
shl
ret
lea
movs
pop
pop
int
mov
fldcw
mov
mov
inc
adc
jnp
imul
jnp
mov
jle
inc
das
ja
xchg
pop
inc
int3
mov
test
sub
cmp
iret
push
xor
cdq
ficomp
mov
pop
in
jl
and
ret
and
cli
pop
adc
arpl
or
cmc
sbb
adc
aaa
les
xchg
fnsave
push
sub
loope
nop
repnz
xor
mov
icebp
xchg
nop
jae
stos
cdq
mov
sbb
mov
cwde
into
mov
in
jl
jno
or
adc
cmp
int
div
xchg
mov
js
xor
fld
rol
pop
add
imul
xlat
dec
retf
dec
loop
(bad)
icebp
inc
inc
aam
data16
mov
xchg
rcr
push
ja
xor
ins
lods
(bad)
ss
cmp
jmp
jae
(bad)
cld
fcmove
jns
pop
mov
sti
and
adc
mov
xchg
ret
je
into
xlat
cs
and
aam
call
push
fdiv
movs
xchg
pop
dec
cmps
lock
or
jl
mov
bound
cmp
test
pop
stos
sbb
mov
gs
jae
loope
xchg
cmp
dec
lea
lahf
mov
push
add
imul
ror
xchg
push
push
(bad)
jns
adc
jmp
out
dec
repz
lock
adc
fldl2t
sar
int
cld
jmp
dec
aas
push
es
mov
iret
pop
fst
push
pop
jne
les
xchg
dec
xchg
out
in
mov
xchg
sahf
retf
cld
je
clc
out
sahf
test
pop
mov
in
pop
das
adc
sub
ja
and
hlt
fidivr
enter
mov
mov
rep
push
scas
pusha
out
cmp
pop
mov
std
lods
out
mov
xchg
retf
ret
mov
(bad)
lahf
jecxz
pop
bswap
cmps
stos
push
xor
fisttp
or
outs
ss
mov
enter
jp
pop
and
sub
xchg
aad
fsubr
fidiv
cmc
lods
sbb
mov
pop
xchg
mov
sub
push
inc
call
sbb
jp
dec
jge
jne
popa
or
ja
sub
lods
push
add
dec
or
out
mov
test
enter
xchg
add
gs
dec
add
push
mov
push
lahf
inc
aas
(bad)
pop
popf
xlat
sbb
jmp
mov
repnz
dec
enter
pop
into
adc
(bad)
in
push
xchg
in
push
push
sbb
loopne
xor
jbe
stos
lods
add
pop
mov
push
push
aas
adc
or
jb
fdivp
cmp
repz
pop
xchg
ja
popf
scas
ins
dec
mov
rcr
add
jnp
push
fwait
and
stc
call
push
retf
sar
sahf
xor
cld
repnz
or
cmps
and
or
ja
fisub
test
out
hlt
imul
rcr
cmp
cli
inc
xchg
dec
mov
inc
rcr
cli
and
cmp
and
test
push
sbb
jbe
out
(bad)
in
jle
in
mov
leave
push
jne
call
xchg
push
aam
xlat
or
cmps
and
cld
jmp
hlt
jmp
loop
sti
sbb
push
pop
cmp
push
mov
cld
xchg
or
push
mov
or
dec
popa
push
xchg
add
dec
inc
ror
fild
fidivr
(bad)
push
jecxz
push
jl
add
dec
push
arpl
xor
out
push
or
or
jge
test
jge
sub
mov
in
outs
xor
bound
lds
xchg
aad
jns
inc
lea
fucomip
push
pusha
ud0
test
out
adc
fsubr
ret
sahf
loopne
xor
mov
stc
adc
xor
xor
ds
cmp
(bad)
mov
or
cmps
dec
jb
test
dec
mov
lahf
mov
add
rcl
shl
cmp
xlat
add
mov
mov
sub
xchg
lods
push
iret
and
or
std
jbe
add
add
mov
and
clc
(bad)
cmp
adc
int3
and
pop
mov
jecxz
inc
sbb
daa
or
add
jp
mov
in
mov
ss
retf
add
mov
mov
push
enter
fwait
sbb
mov
dec
loope
pop
mov
outs
sub
lds
fcomp
mov
jnp
add
dec
add
push
(bad)
jg
xchg
push
dec
out
sahf
rcl
out
inc
rcr
daa
push
je
bound
aas
mov
cmp
mov
jl
es
call
ja
data16
xchg
hlt
adc
jmp
arpl
popf
dec
push
imul
pop
pop
adc
jns
mov
inc
out
out
cmp
mov
or
inc
retf
inc
cmovne
mov
mov
fs
or
retf
xor
pop
adc
stos
push
jp
jbe
test
xchg
pop
outs
dec
cmps
mov
jmp
xchg
shl
ja
jle
out
scas
dec
iret
repz
int3
mov
xor
cmp
inc
push
stc
jle
mov
sub
js
cli
xor
sub
or
or
in
mov
inc
ja
adc
lahf
xor
jmp
add
jge
push
jae
das
cmc
cmp
xchg
fs
scas
out
ret
xchg
mov
jbe
fnstenv
cmps
xchg
pop
ret
into
add
out
mov
cmps
jge
mov
aad
push
repz
cwde
lea
lahf
enter
aam
repz
jmp
cld
push
push
sbb
mov
cld
pop
xchg
stos
test
push
fbld
push
jno
rol
js
adc
add
sub
jne
clc
inc
inc
mov
xchg
xor
xchg
mov
call
jmp
ja
push
pop
retf
or
dec
aaa
xchg
stos
pop
inc
lahf
and
out
dec
popa
adc
push
dec
loop
jecxz
hlt
sbb
imul
pop
mov
pop
pop
in
inc
pop
stos
xor
push
lods
jecxz
jb
mov
cmp
mov
(bad)
jp
mov
sbb
cwde
fist
cmp
and
or
inc
pop
xor
popf
data16
or
rcr
clc
xor
mov
sub
fidiv
xor
push
loope
cmp
inc
xor
retf
int
pushf
pushf
or
push
adc
inc
add
sbb
loope
cld
idiv
mov
test
inc
and
jo
jecxz
add
fimul
in
cdq
stos
dec
xor
mov
out
or
pop
hlt
dec
imul
in
fild
(bad)
push
inc
pop
jle
dec
mov
popa
out
push
adc
repz
dec
push
ret
int
mov
xchg
xchg
cmp
cmp
mov
popa
lods
mov
lods
pop
push
pop
je
dec
and
dec
pop
ror
mov
scas
or
daa
cmp
cmp
push
sub
loope
out
push
sub
out
(bad)
aas
nop
mov
test
jecxz
popf
inc
dec
movs
pushf
sub
sbb
mov
sbb
dec
mov
lahf
push
out
inc
sbb
jl
jne
jl
adc
sub
cld
push
out
imul
mov
imul
xor
imul
cwde
push
mov
jecxz
add
out
lahf
mov
test
adc
pop
mov
adc
push
push
fst
mov
mov
fisttp
and
lea
inc
push
cmp
movs
je
sar
movs
push
add
sti
jle
xchg
leave
jae
fnstsw
sbb
xsha1
cmps
mov
xchg
pop
pop
out
out
imul
ins
inc
and
out
movs
jbe
movs
ja
add
ins
jge
ds
sbb
sub
scas
mov
popa
mov
or
data16
shr
pusha
rcl
cmp
mov
int
pop
sub
mov
dec
retf
cs
cld
daa
mov
int3
stos
aam
push
pushf
out
ss
cmp
in
mov
jg
mov
jmp
outs
sub
or
pop
and
fimul
jg
adc
fs
imul
sysret
jecxz
arpl
(bad)
pop
test
add
pushf
dec
adc
jo
repnz
fwait
aaa
ds
adc
lods
xor
bound
loop
stc
add
jmp
test
mov
rol
bnd
shl
dec
xchg
icebp
in
out
adc
inc
mov
inc
push
mov
add
jl
stos
push
stc
mov
pop
call
loopne
cmp
mov
call
test
into
test
mov
out
jg
jne
jne
popf
mov
mov
je
sti
mov
addr16
xlat
cmp
dec
vmread
dec
stc
jge
inc
fbld
(bad)
sti
cwde
in
push
and
jge
add
mov
hlt
in
and
jg
jl
mov
cdq
aas
dec
cmp
in
cwde
push
push
clc
les
and
mov
into
nop
ins
dec
fist
adc
fwait
xor
dec
inc
inc
retf
in
xchg
hlt
sub
dec
rcl
mov
jbe
dec
xchg
jmp
inc
mov
mov
adc
out
inc
dec
sub
fs
rcl
or
pop
pop
dec
(bad)
xchg
jecxz
adc
jbe
push
ror
and
jb
cmp
push
jns
and
aas
mov
fld
pop
imul
sbb
inc
fmul
cli
jb
fs
nop
data16
pushf
stos
push
mov
add
test
ins
lock
xchg
pop
xchg
lods
in
push
xchg
(bad)
rcr
jp
out
sub
les
stos
mov
test
cli
adc
into
mov
sub
jae
mov
or
mov
retf
xchg
xchg
mov
imul
shl
inc
xlat
sub
push
pop
dec
sbb
and
xor
push
mov
retf
fbld
pushf
pushf
test
push
mov
adc
xchg
push
leave
in
sub
xchg
add
lods
std
inc
sub
or
fld
daa
inc
(bad)
cmps
cld
cld
jbe
ins
cmp
inc
xchg
ror
int
cmc
popf
test
sbb
xlat
push
xchg
fdivr
pop
xchg
mov
mov
add
std
mov
imul
add
out
mov
sub
loop
xchg
push
xchg
loope
jmp
jg
sbb
adc
or
inc
sbb
in
stos
mov
mov
xchg
jmp
fcmovnb
mov
cmp
pop
xor
inc
xor
dec
pusha
cmp
shr
jne
icebp
retf
in
bound
cmps
cdq
sbb
push
and
(bad)
push
sub
sti
push
mul
or
sbb
inc
sti
out
sub
iret
mov
jne
sub
mov
pop
call
lahf
or
gs
push
and
push
cmc
stc
js
pop
inc
cmp
xchg
in
sar
jae
das
mov
jne
cmp
cmp
push
jmp
popa
addr16
jb
hlt
add
cmp
enter
xlat
and
(bad)
fucomip
(bad)
iret
sub
dec
mov
push
xchg
inc
repnz
bound
sub
loope
pop
jmp
sbb
xor
call
cmp
out
mov
sar
cli
fistp
(bad)
in
sbb
aas
dec
cmps
dec
jae
js
and
xor
pop
(bad)
jg
add
xchg
xchg
repnz
jl
fcmove
dec
movs
inc
addr16
lea
ins
out
ja
mov
bound
movs
imul
stos
add
xchg
in
fistp
mov
cmp
xchg
xchg
ins
fistp
xor
aas
xchg
enter
retf
call
cmp
scas
cli
xchg
mov
iret
ret
sub
imul
add
mov
fiadd
mov
(bad)
pop
stc
cmp
mov
mov
in
fucomip
jae
movs
mov
mov
push
loop
es
pop
idiv
nop
cmp
syscall
loopne
push
jg
adc
adc
pop
mov
sbb
lock
push
inc
in
aad
dec
xor
test
adc
jmp
mov
xor
and
es
addr16
outs
and
ins
std
aad
sbb
scas
out
fbstp
frstor
inc
pop
out
mov
sub
push
and
(bad)
mov
inc
mov
sub
mov
pushf
xchg
out
jns
add
mov
xorps
push
sub
nop
pop
je
mov
jno
in
leave
mul
adc
mov
fisubr
into
mov
and
cdq
into
push
and
xchg
push
jge
(bad)
and
int
addr16
ds
cmc
test
in
adc
sub
pop
cmp
sub
out
dec
xchg
and
jge
cs
fild
sub
inc
xchg
sti
push
nop
push
cmp
aaa
add
popa
daa
jo
dec
in
mov
inc
imul
div
xor
in
sbb
ret
push
shl
stc
cmp
retf
into
pop
out
popf
push
push
add
scas
shr
fisttp
sbb
inc
movs
mov
jmp
pop
dec
jno
cmp
sbb
(bad)
in
(bad)
push
(bad)
les
pop
pop
add
cmp
sbb
and
xchg
and
sub
or
neg
rcr
fisttp
jmp
dec
loopne
inc
leave
jge
cmps
push
cli
lds
aad
add
dec
les
jb
pusha
mov
sub
mov
call
jb
loop
imul
in
push
test
imul
test
fcmovne
mov
outs
mov
test
add
and
fldenv
shl
shr
jmp
arpl
stc
aam
leave
aam
and
pop
inc
int
inc
mov
shrd
push
add
adc
pmulhw
(bad)
sub
ja
jno
pop
xchg
test
add
jbe
xchg
mov
pop
and
leave
jb
sub
adc
add
enter
mov
jmp
mov
mov
and
xchg
fs
mov
les
cmp
ins
(bad)
popa
push
mov
mov
push
stos
dec
push
test
(bad)
outs
mov
call
inc
push
add
pop
and
pop
mov
dec
and
ret
ror
jmp
lds
scas
retf
inc
add
mov
mov
xor
ds
aas
pop
stos
popa
sbb
mul
lahf
js
push
pop
mov
sub
loope
jmp
out
and
fadd
retf
nop
imul
mov
cwde
xchg
xchg
daa
or
aas
push
and
pop
push
loopne
mov
(bad)
add
mov
cmc
(bad)
xchg
aaa
sbb
not
cdq
inc
xchg
adc
inc
addr16
cld
sub
mov
jecxz
ret
(bad)
sub
cmc
div
mov
in
or
xlat
aam
adc
outs
ja
(bad)
push
mov
xor
movs
cmp
or
cli
js
mov
and
pop
in
adc
shl
out
xor
jo
(bad)
xor
mov
push
outs
bound
mov
mov
xchg
xchg
ins
push
cmp
pop
pop
imul
sub
mov
pop
popf
jmp
leave
jmp
pop
pusha
jbe
addr16
loope
daa
cmp
dec
das
(bad)
xor
xchg
mov
in
jge
xchg
ins
lods
inc
pop
dec
leave
xor
rcr
aas
std
cmp
mov
mov
sahf
stos
cmps
ds
cmp
daa
xor
ret
popf
xchg
repz
lds
lods
loopne
shr
adc
in
mov
and
jno
add
sbb
xchg
dec
pop
scas
or
pop
add
dec
popf
loop
jl
mov
mov
scas
dec
js
sub
ja
leave
dec
bound
es
inc
xchg
xor
or
jge
adc
xchg
push
out
push
dec
fdiv
push
mov
lds
repnz
sub
ds
and
jne
dec
xor
xchg
in
mov
sbb
push
push
outs
loop
(bad)
dec
jns
int
adc
and
inc
shr
cmp
jg
dec
or
vmovd
aam
js
xor
aam
mov
sbb
cmp
cmp
pusha
inc
pop
fcom
bound
mov
sub
mov
retf
sub
cmp
jle
adc
sub
adc
xor
sbb
add
fcmovne
cli
add
jmp
xor
cmp
das
jp
adc
fiadd
push
fsubr
xor
or
pop
les
les
ficomp
jp
xor
pusha
xchg
pop
pushf
and
dec
xchg
mov
rol
sbb
mov
sti
aaa
mov
xor
push
clc
xor
enter
stc
into
nop
jle
(bad)
hlt
or
(bad)
leave
leave
in
pop
sub
and
cmps
pop
ficom
fild
lods
cmp
mov
(bad)
inc
outs
fist
cld
iret
mov
push
inc
or
fbld
shl
ficomp
mov
shl
xchg
popf
fmul
jnp
loop
or
xor
mov
or
cmp
sbb
(bad)
jecxz
aas
(bad)
mov
lods
rcl
test
imul
out
imul
in
mov
cli
shl
or
jmp
mov
or
out
push
push
fsub
retf
into
jo
add
sbb
sbb
cmovge
ins
sub
or
jle
fimul
or
aam
test
add
les
pop
div
nop
ins
push
pusha
aam
mov
das
scas
sbb
adc
mov
sar
ficomp
cmps
jp
xchg
out
push
cmp
jmp
push
sbb
lods
lea
mov
aaa
fnstcw
push
shr
mov
sbb
sbb
or
fistp
loop
stos
jmp
retf
data16
fcmovnb
xchg
imul
in
out
jmp
adc
sub
pop
imul
into
das
and
nop
pusha
add
and
xchg
or
sti
(bad)
pop
sub
dec
adc
mov
sub
xchg
jmp
in
jmp
cmp
jo
and
jmp
xchg
sbb
dec
adc
inc
xchg
mov
rcl
scas
xor
test
test
icebp
pop
xchg
pusha
out
push
test
popa
sbb
lods
mov
pop
jb
mov
push
pushf
mov
fs
hlt
rcr
arpl
sbb
fidiv
out
pop
push
out
lds
push
mov
push
cmps
jae
icebp
jnp
stos
pop
sub
sbb
inc
iret
bound
fsub
sub
call
xchg
lods
(bad)
addr16
mov
dec
jns
cmc
dec
and
xor
ret
retf
jecxz
fdiv
popf
xor
sub
cmp
sbb
fcmovnbe
inc
mov
push
pop
xor
shl
xor
lods
sbb
mov
imul
and
(bad)
mov
push
pop
push
loopne
mov
jmp
sbb
es
out
cmp
ss
aad
cs
or
push
push
mov
movs
shl
mov
imul
cld
and
sub
sbb
add
dec
push
or
adc
xchg
xor
(bad)
sub
sbb
cmp
fcmovne
cs
or
xlat
out
mov
in
fsub
aaa
pop
dec
push
in
outs
cmp
imul
xor
xchg
(bad)
loope
pop
xor
inc
adc
mov
movhps
outs
neg
fimul
mov
mov
xor
repz
and
fsub
mov
cld
or
jmp
dec
push
jo
xchg
das
add
jno
or
(bad)
jb
clc
dec
xchg
(bad)
iret
push
jp
fwait
out
in
lock
adc
dec
ror
std
pop
lods
push
or
mov
or
outs
jae
adc
pop
sbb
mov
outs
gs
(bad)
xlat
push
add
pop
ja
aam
arpl
test
pop
clc
add
ds
das
xchg
sar
pop
fbld
retf
push
test
push
xor
mov
sub
xchg
add
pushf
inc
and
adc
fs
xor
fcomp
ret
cmp
mov
push
ss
dec
scas
dec
es
ja
cwde
cmp
jmp
es
ret
ja
(bad)
shl
or
add
mov
mov
mov
xor
sub
dec
cs
in
fdivr
cmp
ins
xor
xchg
test
loope
lods
loop
inc
or
loope
daa
cmp
sti
imul
retf
movs
(bad)
cmc
aad
mov
addr16
fwait
inc
data16
pop
retf
(bad)
lahf
loopne
jns
xchg
mov
sbb
and
pop
xor
adc
or
adc
lods
fistp
jmp
bound
movs
mov
popa
mov
and
in
jp
arpl
inc
int3
jge
pop
mov
data16
or
cmps
ficomp
jne
add
out
pop
into
fiadd
xchg
test
pop
cmp
adc
lds
call
not
xchg
jne
cld
(bad)
shl
push
push
xchg
pop
xchg
xor
push
movs
jecxz
dec
popf
das
test
mov
adc
js
xchg
std
sbb
add
cmp
cdq
jne
add
mov
cmp
or
in
in
int
adc
mov
add
in
mov
scas
lods
rcr
mov
fmulp
xor
lea
ja
into
push
out
nop
sbb
push
and
ror
bound
(bad)
enter
jl
inc
cmp
jl
imul
cmp
pop
shl
jp
ffreep
xor
sar
or
xor
cmps
xchg
rcr
ds
std
and
imul
out
xor
mov
mov
mov
jns
dec
mov
pop
pop
pop
clc
iret
cmp
sbb
mov
dec
lods
xor
stc
inc
push
mov
pop
fs
test
aaa
cdq
cli
scas
xchg
shr
dec
test
shl
jbe
xor
into
sbb
sub
ror
mov
or
sbb
loope
out
or
add
out
cmp
xlat
pop
or
xlat
sbb
cli
das
xor
retf
adc
(bad)
hlt
retf
mov
test
loope
enter
(bad)
int
cmp
in
repnz
inc
cwde
or
mov
clc
push
and
fmul
ins
xchg
jg
mov
inc
mov
mov
xor
inc
test
sub
jp
jo
and
sbb
mov
push
std
pop
cmp
(bad)
adc
ins
mov
push
mov
pushf
scas
bound
aam
xchg
xor
mov
adc
sub
sub
add
jmp
or
pop
bound
mov
sar
mov
in
cmp
sub
(bad)
mov
sbb
vpsraw
adc
mov
ss
cwde
movs
arpl
(bad)
outs
mov
push
inc
and
inc
jnp
xor
xchg
lahf
xor
xchg
sub
cdq
(bad)
cld
add
call
dec
rol
xchg
mov
xor
xchg
fs
sub
or
or
sbb
sti
xchg
adc
lods
push
scas
xchg
dec
hlt
or
(bad)
in
mov
div
pushf
mov
sbb
hlt
pop
sti
add
mov
in
ds
call
sahf
mov
xor
push
dec
mov
cmp
or
neg
mov
scas
mov
cdq
add
aam
lahf
jmp
mov
xchg
shl
xor
rol
cmp
mov
cld
adc
mov
adc
int3
mov
sar
jo
clc
sub
mov
sbb
xchg
popa
pushf
dec
loopne
jle
adc
xor
out
std
xor
cld
push
outs
sbb
test
repz
fstp
jle
pandn
and
and
sub
call
cs
push
jmp
sbb
stos
pop
dec
stos
outs
xlat
mov
test
sti
push
dec
push
or
hlt
mov
sbb
sub
cmp
out
or
push
mov
dec
rol
dec
pop
(bad)
outs
dec
jge
add
push
nop
loop
or
mov
sahf
push
scas
les
xor
cli
popf
jnp
xor
jbe
clc
out
sahf
cld
mov
pop
or
daa
retf
mov
rcr
addr16
(bad)
call
ins
xlat
sbb
sbb
mov
cmp
ja
inc
xchg
int
mov
pop
ja
ret
inc
xor
in
scas
sbb
sub
mov
mov
inc
xchg
loope
push
sbb
mov
push
add
stos
fwait
rcl
jmp
repnz
test
mov
ffreep
arpl
adc
add
adc
push
in
pusha
push
push
add
adc
iret
mov
jmp
mov
arpl
fidivr
lods
mov
fsub
and
mov
rcr
push
popa
ds
pop
out
sbb
ins
loopne
mov
not
and
inc
xlat
dec
mov
jmp
test
shl
cmp
xor
cmp
jo
js
out
cmc
cs
loopne
xor
add
ss
test
push
add
cmp
ret
mov
fisubr
push
call
dec
ret
sub
data16
mov
inc
add
clc
sar
mov
inc
jge
mov
ins
imul
lahf
sbb
popa
cmp
ins
test
inc
cmps
out
cmc
add
fsubp
aas
std
fcom
int
push
test
jg
jecxz
pop
fucomp
pop
xchg
cli
int
rcl
add
ja
mov
xchg
mov
inc
push
je
repnz
dec
push
push
and
pop
xor
sbb
aas
sbb
dec
push
mov
and
stos
xchg
sar
mov
stos
in
or
sub
jb
mov
out
fmul
int3
cmc
inc
aad
out
nop
pop
(bad)
dec
popa
inc
repnz
shl
rol
pop
cdq
mov
dec
adc
cdq
jno
out
lock
adc
jge
jp
push
imul
sub
adc
addr16
ret
retf
js
sbb
adc
div
adc
movs
fsub
push
data16
(bad)
pop
xor
sbb
test
inc
or
mov
lock
(bad)
xchg
and
inc
rcr
imul
xor
fprem
adc
inc
popf
test
loop
sbb
adc
stos
add
std
push
adc
out
cmp
lock
sbb
add
dec
shr
and
inc
pfnacc
jne
fiadd
pop
sbb
les
adc
push
sub
fcmovnbe
inc
outs
bt
jae
push
icebp
bnd
movs
in
dec
fist
inc
cmp
(bad)
movs
repnz
cmp
retf
out
mov
xor
enter
jge
int3
push
loop
bound
sbb
mov
push
adc
rcl
call
xor
mov
ja
(bad)
movs
push
cwde
cld
int
jecxz
push
test
inc
jae
loopne
test
mov
sbb
xchg
into
xchg
xor
shl
mov
je
cmp
mov
xchg
test
push
mov
mov
cmc
push
pop
dec
or
mov
jno
pop
cmp
stos
and
xchg
sub
mov
aam
repz
call
ja
idiv
xor
jno
popa
xor
dec
mov
jmp
xor
mov
and
cmp
mov
sbb
push
(bad)
cmps
stos
call
ror
jno
into
pop
push
je
pop
and
loop
loopne
xor
sub
jae
pop
sbb
xchg
pop
test
pop
icebp
cmp
test
or
pop
mov
cs
cdq
das
shl
in
jmp
adc
ja
xchg
sti
sbb
dec
test
lock
test
in
lahf
(bad)
retf
arpl
dec
addr16
lods
lock
fs
add
data16
mov
lods
jne
rcr
and
sub
sbb
xchg
cmps
dec
lea
out
fld
push
sbb
lods
xchg
jle
cmp
mov
jp
mov
ret
cmp
cmps
test
clc
in
sub
ret
cli
adc
sbb
xor
fcomi
inc
sbb
adc
xor
mov
stos
icebp
faddp
cli
or
lock
or
es
rcr
cmp
outs
or
les
lahf
jno
iret
xchg
inc
dec
dec
or
fldenv
pop
loop
mov
add
sbb
fisub
adc
movs
pop
and
scas
in
dec
and
inc
aaa
dec
shr
scas
test
pop
fadd
ins
or
mov
or
xchg
aaa
mov
add
xor
bound
jns
int3
(bad)
mov
sbb
enter
add
xor
out
dec
test
(bad)
cmp
xor
sti
mov
jmp
sub
add
scas
arpl
int3
test
js
je
mov
loope
jae
bound
xchg
shl
movs
stc
ja
push
leave
sbb
sbb
out
mov
(bad)
outs
or
mov
sti
jge
inc
cmp
rcr
sbb
and
dec
rcl
or
xchg
aas
cwde
xchg
arpl
stc
imul
retf
sar
or
in
loop
push
xor
clc
cld
adc
push
fadd
inc
push
retf
add
retf
push
sub
or
pop
dec
or
in
inc
jg
pushf
or
pop
add
inc
mov
dec
adc
dec
pop
push
adc
pop
loopne
cli
fcom
mov
aam
test
dec
sahf
loopne
pushf
fwait
add
cmps
pop
ds
inc
and
cmp
mov
xor
sbb
cmp
jbe
mov
push
mov
or
mov
add
mul
mov
sub
lods
inc
sbb
or
add
addr16
add
xor
js
push
push
mov
sbb
loopne
ror
cs
(bad)
ds
inc
test
mov
stos
ds
stc
lds
xchg
or
lods
in
fmul
sbb
stos
scas
pop
(bad)
out
mov
xor
push
lods
jg
sub
sbb
fwait
mov
lock
mov
dec
jo
rcr
retf
and
clc
push
loope
test
int3
ss
or
cmp
inc
shr
mov
xor
jecxz
sub
jle
xchg
jmp
icebp
lds
cli
retf
jo
or
pop
mov
push
lahf
pop
movs
ret
shl
dec
movs
movs
stc
cmp
pop
ret
xor
shl
sahf
icebp
push
aas
add
je
pop
push
popa
cli
icebp
inc
jno
add
add
mov
cmp
imul
test
add
adc
xor
adc
rol
cmp
pop
(bad)
xchg
or
pop
int
sub
(bad)
adc
daa
inc
jmp
add
add
rcr
out
adc
sbb
add
ret
lods
sbb
mov
outs
inc
inc
das
mov
out
call
(bad)
mov
or
jp
jmp
dec
sahf
fwait
sub
or
sbb
les
stc
rol
adc
add
cmc
push
call
repnz
inc
cmp
test
mov
dec
mov
push
pop
cmps
outs
jl
and
pop
cmc
jmp
psubusw
aam
arpl
movs
or
or
aad
add
adc
scas
jmp
popf
das
sbb
cmp
(bad)
and
cmps
out
pop
mov
sub
call
sbb
in
mov
jb
lods
jbe
dec
retf
retf
test
adc
adc
xor
(bad)
repz
push
or
add
or
ds
test
out
sub
sahf
cmc
ds
jne
lahf
icebp
(bad)
call
jg
clc
push
inc
neg
pop
and
outs
sbb
mov
pop
fadd
lahf
dec
ja
shl
sbb
call
mov
mov
movs
aad
movs
xor
cmp
retf
cmp
add
mov
leave
fdiv
gs
mov
dec
(bad)
shl
fwait
aas
daa
adc
adc
inc
jae
das
xor
and
stos
xchg
fsub
xchg
push
push
jnp
rcl
push
std
fisttp
jmp
jnp
test
dec
lock
jmp
lods
leave
(bad)
(bad)
push
inc
jecxz
rcr
add
xchg
jmp
adc
sbb
xchg
rol
jl
dec
xor
shl
push
or
mov
inc
dec
ds
adc
sar
xor
(bad)
rcl
stc
(bad)
movs
or
fidivr
mov
xor
push
mov
data16
mov
sbb
sahf
arpl
jecxz
xchg
mov
cmp
and
fs
xchg
pop
sub
push
jge
mul
and
pushf
cmps
pusha
pop
sub
or
xor
into
mov
lea
dec
xor
not
pop
mov
sbb
adc
std
jne
mov
push
bound
nop
jmp
imul
sub
jno
cld
stos
dec
cmp
push
pop
cmps
pusha
ja
rcr
inc
ret
out
dec
xchg
add
xor
pop
bound
arpl
retf
scas
inc
add
xor
aam
loope
mov
sbb
adc
mov
in
enter
mov
pop
jno
and
inc
xor
dec
rcl
inc
mov
mov
mov
pop
xchg
adc
xchg
in
cmps
(bad)
cmp
pushf
add
sti
sub
xchg
lock
lds
leave
push
xchg
(bad)
daa
mov
hlt
cld
jle
int
jmp
mov
jns
pop
cmc
stos
push
sbb
cmp
inc
or
repz
add
jl
and
sub
push
inc
sbb
dec
or
xor
inc
shl
push
mov
cmp
or
gs
inc
shl
gs
mov
inc
push
push
fsub
cli
sbb
push
aaa
pop
outs
push
into
fdivr
and
or
xlat
jcxz
pop
pop
(bad)
mov
div
ss
or
mov
or
inc
mov
jno
adc
rol
mov
jne
cmp
movs
adc
out
mov
mov
lods
mov
inc
cwde
inc
(bad)
out
aaa
or
jle
push
addr16
(bad)
mov
push
cmp
push
xchg
jge
jne
cmps
add
cmp
retf
jno
repz
pinsrw
push
(bad)
xor
int3
daa
std
push
sti
ret
repz
inc
mov
cmp
aas
repz
hlt
jae
sbb
inc
xor
jo
out
retf
mov
dec
or
lahf
mov
inc
fldcw
ror
idiv
sbb
hlt
outs
sbb
stc
loopne
in
ja
push
pop
in
ret
dec
cmps
cmp
scas
push
repz
push
mov
adc
fwait
hlt
mov
adc
sub
out
sub
push
fcomp
sbb
lods
dec
and
add
sbb
mov
pop
rcl
mov
jne
stos
enter
rcl
out
fild
adc
fsub
in
(bad)
ror
fidiv
mov
sbb
ins
add
push
cmc
dec
mov
stos
mov
popf
jge
sbb
leave
mov
scas
xor
push
pop
repz
mov
imul
aad
lods
pusha
jp
aad
jae
mov
(bad)
cmp
js
iret
xchg
mov
xor
test
mov
jne
mov
out
xor
in
inc
mov
jmp
push
repnz
xor
mov
fst
mov
imul
inc
dec
pop
adc
daa
pop
stos
and
aaa
stos
dec
nop
stos
mov
scas
addr16
repz
fld
das
retf
xor
xor
sbb
sbb
hlt
jmp
repnz
mov
pop
aaa
in
(bad)
std
xor
pusha
cmp
xor
pop
jmp
xchg
cmp
jno
icebp
sbb
jo
add
stos
mov
dec
aad
add
pop
mov
xor
test
arpl
mov
jl
in
lea
repz
mov
mov
std
repnz
ins
inc
mov
stos
inc
sbb
movs
iret
or
add
scas
mov
mov
fild
stos
mov
std
mov
int
mov
sub
pushf
idiv
add
out
out
pop
idiv
shr
mov
sub
fimul
mov
movs
ror
inc
mov
fisttp
mov
xor
arpl
sbb
sub
loopne
mov
inc
fisubr
jnp
inc
xchg
popa
xor
sar
and
jge
mov
ja
lods
push
leave
fsubrp
into
lods
and
cs
cli
push
into
jl
movs
pop
popaw
fwait
and
sar
fldcw
sub
xchg
not
cmps
call
cli
mov
cmp
or
push
mov
or
adc
xchg
cmp
gs
(bad)
ins
adc
stos
test
(bad)
xor
pushf
or
jb
fst
fdiv
cs
xchg
loope
out
xchg
imul
cmp
out
jge
gs
ins
sti
add
and
xchg
scas
dec
repnz
outs
mov
xor
jmp
cmp
mov
aad
adc
add
mov
in
or
imul
ficomp
xchg
fwait
mov
out
push
fist
ds
lea
mov
push
out
ficom
sbb
dec
push
inc
int3
mov
add
test
clc
pop
in
cmp
lods
xchg
cmc
fdiv
rcr
test
add
inc
cmps
sbb
and
call
retf
dec
lods
pop
xchg
dec
xor
cmps
test
repz
add
dec
iret
les
movs
int3
outs
test
adc
pop
sub
fneni(8087
dec
xor
adc
mov
imul
retf
mov
xchg
leave
sub
add
inc
pop
pusha
push
lahf
cmp
frstor
push
out
mov
aas
sbb
jecxz
ins
jbe
jp
ficom
mov
mov
pop
or
sub
stc
lea
add
push
jb
or
jne
scas
mov
adc
inc
outs
retf
lock
int3
adc
and
push
and
jle
cmp
or
mov
dec
adc
(bad)
mov
mov
push
outs
jmp
adc
push
lods
adc
jg
inc
sbb
int
dec
fdiv
sbb
or
cmovae
mov
test
das
push
in
addr16
aad
out
and
jb
imul
pop
loop
jle
mov
lds
test
call
test
nop
mov
ret
xchg
cdq
sbb
mov
mov
popa
add
js
jge
add
xor
or
lds
mov
jnp
lahf
lods
cmps
mov
push
sbb
sbb
jecxz
sbb
add
sub
jae
stos
jns
push
dec
int
call
je
leave
out
sub
loop
sbb
xor
jno
sbb
mov
aam
pop
inc
int
xchg
shl
fs
and
jecxz
dec
jne
sub
dec
shr
lds
mov
sub
or
push
mov
push
xor
push
pop
jl
pop
push
push
data16
icebp
enter
imul
jo
xchg
mov
inc
xlat
lahf
callw
call
es
mov
bound
movs
cmp
push
pop
xor
jae
nop
sub
jae
call
xchg
mov
add
outs
pop
stos
mov
push
pushf
pop
push
jp
mov
inc
mov
xor
xchg
in
aas
sub
dec
jmp
mov
xchg
imul
and
movs
fwait
int
sub
push
icebp
icebp
into
movs
pop
push
mov
push
dec
or
out
adc
push
std
sub
dec
adc
retf
push
mov
inc
or
mov
outs
jecxz
rol
lock
xchg
xor
sub
fstp
add
xchg
mov
adc
(bad)
in
test
jmp
aad
leave
push
xchg
in
jp
inc
(bad)
and
fistp
and
xchg
mov
aas
iret
sbb
xchg
xchg
mov
ins
pop
adc
outs
jbe
inc
test
es
and
fdivr
fiadd
jae
mov
jg
push
out
sub
jb
dec
add
in
jnp
pop
cs
js
dec
inc
loop
das
fist
pop
aam
call
jns
cmp
es
paddw
pop
mov
outs
hlt
jmp
push
sbb
pop
inc
and
in
mov
and
int
cs
jno
xlat
shl
dec
lods
sub
sub
jmp
pop
fsubr
aaa
mov
inc
push
lahf
mov
cmp
in
dec
pop
jmp
push
fwait
stc
loop
out
push
test
int3
xchg
add
fucomi
(bad)
pop
push
call
xor
lock
adc
fisubr
mov
in
int
fwait
lods
rol
lahf
outs
(bad)
xchg
mov
cmc
push
sub
enter
pop
inc
popa
cmp
test
jae
loope
fnstsw
aam
adc
cmp
and
aam
inc
das
in
aam
sbb
cmp
xor
stos
and
rcl
dec
xchg
lahf
cli
movs
int3
iret
data16
cmp
je
adc
pop
lock
pop
inc
sbb
sar
inc
sub
loop
fnstenv
test
lea
cwde
push
imul
dec
mov
add
xchg
pop
sub
fmulp
cdq
pushf
pusha
inc
adc
stos
inc
outs
in
(bad)
sub
cli
sbb
sbb
fadd
stos
retf
xchg
jne
add
jo
mov
int3
mov
or
push
ins
aas
or
inc
sbb
(bad)
out
icebp
inc
or
shl
push
pop
sub
fisttp
and
cld
jge
ret
mov
out
in
aas
scas
fcmovbe
mov
fnop
mov
inc
and
nop
loop
sub
lea
xchg
retf
test
inc
ins
push
cmp
clc
sbb
xor
mov
mov
pop
mov
idiv
repz
scas
fsubr
imul
jmp
sbb
out
repnz
xchg
mov
nop
std
int
dec
sbb
jnp
rcr
ret
(bad)
(bad)
xor
mov
adc
fisttp
push
mov
dec
jns
hlt
dec
push
arpl
jnp
sbb
sub
pusha
or
dec
stc
mov
xor
mov
jbe
aam
adc
inc
push
lock
push
pop
hlt
pusha
int
scas
jle
gs
add
retf
inc
(bad)
movs
and
push
ds
ret
int3
jbe
bound
and
sbb
add
ffreep
(bad)
in
cs
xor
adc
retf
lods
xor
test
mov
(bad)
ins
aas
adc
jl
adc
ins
out
out
push
mov
scas
xlat
xchg
rol
and
or
(bad)
hlt
mov
pop
fucomip
adc
call
push
std
xchg
and
xchg
imul
bound
dec
and
cmp
shl
aam
sub
push
rol
sub
and
and
jmp
inc
dec
xor
mov
outs
xor
es
enter
cmps
jo
cwde
sar
fld
stos
pop
into
xchg
(bad)
and
pusha
xchg
ins
clc
leave
pop
and
enter
jg
(bad)
in
jno
ret
ins
daa
mov
add
outs
xchg
mov
jmp
jp
cmp
lea
aas
inc
aam
cmp
js
add
bound
pop
push
xchg
xchg
cmp
push
inc
dec
int3
and
push
popa
stos
bound
mov
adc
mov
mov
dec
arpl
sbb
sbb
jo
(bad)
pushf
lods
mov
imul
in
in
mov
adc
movs
mov
lea
lea
jge
cmp
adc
je
jmp
adc
cmp
loop
mov
scas
xchg
sub
xchg
mov
pop
mov
mov
jb
ja
ret
(bad)
imul
inc
jbe
mov
inc
(bad)
fild
push
add
fiadd
jg
arpl
fwait
aaa
jb
jge
add
dec
aam
ja
or
pusha
inc
(bad)
pop
gs
mov
mov
pop
inc
pop
movs
(bad)
xchg
push
xchg
sti
sub
out
cmps
(bad)
(bad)
adc
and
sti
and
ret
and
je
sar
lea
fimul
push
push
push
pop
jmp
test
out
sub
inc
add
or
lds
aas
mov
aad
fdivr
sbb
jle
pop
mov
or
jns
je
bound
les
call
pop
push
data16
pop
push
mov
ret
dec
jl
jns
sbb
or
mov
mov
test
pop
jb
mov
pusha
stos
ret
pop
sbb
div
jb
adc
jae
sbb
dec
mov
out
(bad)
repz
in
mov
leave
shl
movs
call
les
iret
fimul
out
or
xchg
mov
out
mov
or
sub
retf
sbb
adc
bound
js
outs
aas
and
inc
test
jl
xchg
test
cmp
dec
push
jg
mov
adc
or
sub
mov
jnp
pushf
mov
inc
shr
movs
es
(bad)
jge
pop
iret
xor
movs
inc
cwde
and
js
xchg
loop
(bad)
movs
cli
fdivp
cmps
bnd
lea
das
mov
test
jle
mov
jge
neg
or
xor
cli
test
add
dec
outs
pop
imul
adc
(bad)
scas
les
imul
adc
test
xchg
div
xchg
ror
das
mov
fucomip
in
cmps
push
scas
pusha
or
mov
jmp
or
inc
push
mov
push
adc
and
mov
cmp
mov
and
mov
xchg
out
inc
lahf
loope
cmps
outs
nop
mov
cmp
mov
int3
cmc
or
popf
repnz
dec
imul
fld
(bad)
lahf
jmp
inc
mov
jae
inc
inc
fstp
cmp
xchg
ror
mov
fsubr
mov
fmul
fnstenv
push
outs
mov
dec
data16
inc
pop
mov
jle
arpl
xchg
aam
nop
jge
sbb
and
adc
mov
and
hlt
cdq
test
(bad)
fnstenv
and
sbb
pop
ror
adc
dec
jmp
dec
inc
mov
mov
retf
xchg
(bad)
mov
aam
outs
shr
jp
shl
inc
aaa
ror
(bad)
scas
jge
out
daa
and
and
in
fs
xchg
jbe
xchg
fmulp
push
xchg
sti
and
or
xor
stos
std
jb
shl
push
ins
xor
sub
or
lods
stc
jg
jae
retf
(bad)
mov
cmc
mov
and
outs
(bad)
std
fdivr
or
xchg
lock
mov
mov
push
rcr
push
mov
ins
into
mov
int3
pop
ss
sub
mov
xchg
xor
scas
jne
jmp
xor
pushf
push
ss
outs
pusha
xchg
fld
or
lock
or
push
ret
loop
jmp
xrelease
sar
sub
imul
movs
mov
popf
cmp
inc
and
pop
pop
les
(bad)
fisubr
push
inc
jnp
add
ss
(bad)
mov
dec
sti
cmc
dec
sahf
mov
cmp
mov
dec
mov
bound
xchg
repz
stos
pusha
in
mov
ret
cmps
mov
cli
enter
pushf
mov
pop
add
inc
js
xor
imul
outs
pop
adc
rol
push
and
push
and
mov
cmp
call
stos
dec
push
fisub
icebp
(bad)
retf
leave
call
retf
or
mov
xor
retf
pop
push
stos
stos
pop
xchg
(bad)
nop
xor
mov
pop
repnz
push
std
out
push
jbe
cdq
dec
hlt
out
(bad)
fnstcw
adc
push
repnz
jnp
lahf
adc
je
adc
mov
ret
test
(bad)
in
in
sub
xchg
adc
iret
push
xchg
and
sbb
sub
push
out
add
pop
sub
dec
jp
mov
cmp
jmp
enter
cdq
cmp
sub
or
push
and
dec
mov
sub
pop
jno
cs
cmp
or
scas
sar
cdq
retf
inc
call
xchg
dec
add
das
xor
push
pusha
push
or
retf
imul
in
add
or
(bad)
fnstcw
or
ret
sub
test
adc
inc
fcomp
call
cdq
mov
adc
movs
sbb
jae
ror
jmp
cdq
mov
or
jae
fwait
mov
push
es
sub
sub
fs
pop
ins
sub
shl
fldenv
sub
cmps
(bad)
pop
xor
xchg
mov
xchg
dec
xor
ss
fidivr
cld
sub
and
mov
jns
jl
pop
test
fsub
mov
sbb
aas
and
and
in
mov
and
ret
out
and
or
sub
jno
fldenv
out
push
lds
push
inc
outs
call
jnp
adc
pop
je
mov
inc
cmp
into
mov
push
inc
mov
cmp
dec
xchg
adc
adc
pop
mov
xor
pop
inc
in
not
xchg
cld
into
cmp
fimul
dec
cmps
movs
cmps
mov
ins
pusha
loope
stos
dec
ret
sbb
dec
data16
push
adc
mov
clc
mov
or
pop
push
shl
push
test
fadd
not
addr16
or
add
xor
adc
sub
fnstsw
push
in
fs
es
loopne
sub
std
pop
cmp
hlt
ds
mov
popf
ds
hlt
(bad)
stc
jnp
call
test
or
add
pop
scas
in
int3
push
mov
adc
and
shl
jmp
xchg
cs
test
push
sbb
xchg
stos
add
rcr
and
cpuid
imul
add
call
mov
popf
jnp
dec
outs
cdq
and
mov
add
jmp
fmul
into
mov
fist
add
repnz
fmul
mov
test
pop
jmp
out
test
jne
cmp
ds
pop
pushf
pop
aad
fcom
push
jns
jle
shl
cmp
cmp
xor
lods
push
xchg
js
or
nop
fnstsw
xor
gs
sub
fistp
(bad)
data16
cmps
xor
sar
mov
out
inc
ret
gs
pop
mov
push
rol
imul
aaa
sbb
pop
mov
jl
push
xchg
sahf
cmp
in
(bad)
(bad)
sbb
xor
inc
adc
cmc
test
inc
aad
xlat
add
adc
mov
push
add
or
lahf
fcomi
mov
or
push
dec
shl
pop
dec
mov
shl
or
sub
sbb
or
push
addr16
sbb
arpl
mov
add
and
or
mov
sub
and
hlt
js
mov
loop
das
fiadd
ins
jecxz
icebp
rcr
sbb
icebp
fdivr
sub
mov
repz
(bad)
fcomp
xchg
popf
(bad)
jns
push
jecxz
mov
xchg
fmul
pushw
jg
sbb
xchg
in
xor
sbb
dec
mov
xor
out
jmp
fmul
xchg
mov
pop
fwait
cdq
adc
xor
rcr
scas
scas
bound
xchg
and
xor
mov
inc
inc
add
je
jl
sbb
test
scas
xchg
add
jle
data16
sub
retf
mov
ffree
jo
stc
or
fadd
out
mov
sahf
sbb
adc
push
scas
ins
cmp
push
shr
pop
jecxz
jp
push
pop
or
sub
xchg
pop
push
ja
mov
cmp
fldl2e
jne
por
jge
js
lods
ret
stos
mov
les
pop
nop
pop
lahf
sub
and
sbb
xor
out
ret
lds
xor
test
pop
out
div
mov
std
fdiv
and
retf
ror
jno
cmps
idiv
adc
bound
dec
jle
fistp
and
loopne
xchg
retf
sbb
dec
pop
aas
jp
adc
div
out
and
cmp
push
adc
xchg
lods
(bad)
fstp
jbe
jo
imul
xor
out
or
sahf
mov
ins
out
inc
outs
lods
sti
ins
inc
adc
inc
dec
psraw
hlt
das
adc
into
(bad)
aam
ins
dec
aaa
out
repnz
xchg
retf
popf
or
cmps
jmp
dec
sub
fstp
sub
cmp
outs
arpl
scas
cmp
aad
pop
aas
adc
outs
movs
or
mov
jge
test
retf
and
jecxz
xchg
or
mov
retf
outs
mov
xor
and
out
in
sub
mov
(bad)
mov
mov
(bad)
jge
jecxz
add
and
in
cmp
adc
stos
pop
cmc
icebp
in
xor
lahf
add
lock
adc
mov
inc
adc
shr
jns
cs
cmp
sub
std
arpl
test
in
sub
aas
inc
(bad)
mov
(bad)
push
sbb
adc
inc
sub
fnstsw
imul
jae
outs
adc
inc
jle
imul
jns
mov
push
(bad)
in
mov
sbb
out
jne
int3
(bad)
call
and
(bad)
mov
jbe
add
ret
imul
mov
imul
add
mov
fadd
setbe
(bad)
call
jo
sub
scas
aas
xchg
(bad)
sbb
sti
mov
sbb
mov
jmp
in
fcomp
sbb
lods
xchg
cmp
cmp
test
lods
js
jns
cdq
inc
pop
movs
js
loopne
(bad)
adc
xchg
adc
fwait
dec
adc
je
and
sub
(bad)
shl
adc
sub
sub
inc
mov
xor
je
xchg
(bad)
call
xchg
das
icebp
movs
xchg
popa
and
jmp
push
add
data16
xchg
and
pop
sub
(bad)
scas
cli
out
arpl
inc
shr
push
push
cmps
sti
sbb
jnp
cmp
xchg
ins
mov
lahf
pop
jne
lds
adc
or
ds
or
mov
or
retf
jge
mov
aaa
inc
pusha
sbb
retf
pop
jnp
test
inc
arpl
xchg
test
cld
xor
popf
(bad)
movs
xchg
ror
icebp
fcompp
push
pop
shl
mov
stos
test
ror
(bad)
push
(bad)
loope
adc
repnz
mov
hlt
daa
mov
push
je
push
ret
data16
sub
and
bound
int3
xor
loopne
je
and
or
mov
js
stos
xor
je
test
jmp
or
outs
pop
(bad)
outs
pusha
push
sbb
pop
inc
add
test
mov
adc
pop
imul
cmp
jnp
push
scas
xor
sar
lods
(bad)
jno
bound
push
fnstsw
int
in
std
fwait
mov
jnp
jns
imul
(bad)
movs
sub
les
pop
sub
or
sbb
add
cwde
sub
sub
in
call
mov
out
int3
scas
xor
mov
pop
(bad)
repnz
xchg
push
popa
aas
pop
mov
repnz
mov
out
cmp
cdq
inc
ds
nop
add
and
cli
ds
movs
or
imul
loope
inc
jmp
sub
push
sub
jp
repnz
fisttp
cmc
push
sbb
xor
test
fstp
jmp
dec
adc
adc
inc
leave
int3
xchg
not
jmp
mov
(bad)
and
fwait
sub
mov
xchg
hlt
mov
call
(bad)
nop
(bad)
sub
mov
jne
dec
and
loopne
lods
popf
lods
jns
movs
xchg
and
pop
fild
loopne
js
daa
ja
inc
and
xchg
pop
sbb
sbb
popa
add
cdq
cmp
or
inc
mov
or
mov
scas
aam
inc
scas
cmp
bswap
add
mov
pop
pop
out
dec
inc
pusha
add
mov
pop
test
add
adc
xor
mov
cmps
fnsave
jg
xchg
or
mov
adc
mov
inc
pop
pop
inc
mov
adc
mov
sbb
retf
int
add
push
fisttp
mov
mov
mov
dec
out
les
add
icebp
sti
pop
fmul
pop
mov
pop
xor
push
jo
repz
or
outs
sbb
xchg
adc
cwde
das
hlt
xor
push
xor
xor
dec
cmp
addr16
ficomp
mov
dec
and
and
daa
std
jl
jbe
stos
movs
clc
inc
dec
jo
(bad)
(bad)
sub
ror
mov
hlt
sahf
cmp
rcr
jg
xchg
loop
adc
test
ret
xor
shr
jmp
popf
lea
add
jg
test
fidivr
dec
aad
mov
xchg
outs
popf
xchg
imul
test
and
mov
mov
loopne
push
sbb
jns
xchg
imul
jl
cmp
ficom
adc
fwait
scas
xor
cs
fild
fbld
inc
pop
in
adc
stos
in
jg
or
imul
xchg
jne
(bad)
jae
pop
lds
mov
xchg
push
fld
mov
sbb
les
div
nop
cli
ds
(bad)
in
dec
das
adc
inc
pop
dec
dec
in
fild
and
popa
jp
xchg
dec
sub
iret
push
jg
adc
or
xchg
scas
cmp
fisub
daa
adc
add
jae
and
in
imul
sbb
(bad)
retf
sub
bound
inc
call
mov
vminpd
sbb
mov
inc
jl
pop
hlt
enter
cmps
iret
pop
xor
sahf
test
rcl
stc
nop
mov
cmc
adc
call
aas
aas
mov
jmp
fist
scas
sbb
shr
je
jne
mov
inc
out
data16
mov
fmul
ja
out
out
stos
push
(bad)
not
mov
ds
ins
cdq
in
jmp
gs
lock
scas
add
popa
es
inc
test
mov
stos
mov
fcomp
sub
ss
iret
sub
push
ret
jge
icebp
mov
push
mov
xlat
shl
cmp
test
add
scas
scas
push
(bad)
cmp
stc
and
scas
jge
mov
fiadd
adc
loop
(bad)
xor
movs
ins
int3
imul
dec
stc
push
cli
xlat
loope
sbb
popf
xchg
arpl
test
pop
out
cmp
pop
outs
(bad)
xchg
(bad)
rcr
fwait
inc
rol
inc
rcl
pop
and
inc
sub
jnp
dec
gs
xchg
repz
jge
sub
mov
sub
aas
movs
lea
jns
pop
icebp
pop
sub
adc
(bad)
shl
add
pop
dec
and
jle
pop
inc
repnz
leave
and
fadd
cmp
addr16
sbb
sbb
jo
leave
sbb
push
cmp
fmul
cmc
sahf
xor
xor
test
and
mov
cmp
adc
lahf
add
pop
fwait
addr16
ret
sub
cmp
xchg
xchg
mov
cmps
jle
adc
push
aad
pusha
les
pop
fisubr
enter
dec
jg
call
inc
jae
lahf
sti
nop
cmp
pop
bound
adc
and
inc
push
shl
mov
(bad)
fsub
push
call
(bad)
jl
sub
je
rcr
jno
and
mov
pop
jl
arpl
ins
jmp
pop
std
dec
pop
push
mov
shl
dec
dec
adc
pushf
inc
or
nop
daa
or
xchg
stos
xchg
mov
dec
retf
push
dec
mov
xor
jl
sub
inc
fst
dec
push
inc
lods
mov
fldcw
mov
jg
mov
lock
cmp
out
shl
mov
mov
cdq
in
mov
sbb
ds
cmc
ins
outs
mov
aaa
shr
dec
imul
popf
in
das
repz
test
xchg
adc
mov
retf
xchg
and
ficomp
push
push
sub
mov
pop
and
sbb
adc
jno
out
inc
addr16
pusha
pusha
cmps
mov
and
imul
(bad)
vpsubusb
pop
out
bound
in
push
loopne
jb
mov
cli
add
call
mov
sub
(bad)
icebp
xor
imul
pop
hlt
and
cmp
lea
or
iretw
dec
rol
dec
clc
ss
jns
xor
mov
call
add
and
addr16
ins
mov
mov
(bad)
xchg
aaa
jo
sub
add
xchg
fwait
out
iret
shl
and
in
movs
dec
jnp
xchg
(bad)
dec
push
jnp
js
jae
pop
mov
ret
jb
pushaw
inc
mov
out
or
sub
and
xor
call
and
(bad)
mov
fcom
mov
sbb
jb
mov
adc
imul
bound
mov
jne
cmp
push
mov
or
jmp
ins
bound
test
mov
sbb
pop
push
fadd
inc
and
outs
jge
add
sbb
or
push
jge
mov
fwait
inc
pop
cmc
xor
adc
test
mov
cmps
aaa
lds
loop
movs
jno
pop
es
dec
cmp
mov
bound
dec
cmp
repnz
mov
scas
xlat
repz
adc
test
pop
scas
xor
sbb
or
mov
add
xchg
repnz
sbb
mov
jmp
dec
jnp
inc
dec
sbb
adc
mov
xor
xchg
sbb
stos
outs
cwde
ss
dec
(bad)
(bad)
pushf
call
or
or
xor
mov
div
inc
ins
popf
sahf
dec
pop
dec
dec
pop
adc
lods
lock
loop
cld
fucomi
inc
imul
imul
rcl
xchg
sti
add
push
jp
popa
mov
(bad)
out
or
and
repz
ins
nop
sahf
inc
gs
cld
nop
in
ds
dec
xor
adc
pop
popa
sbb
sub
lahf
push
aad
pop
fwait
cmp
xchg
cwde
or
test
cld
jg
adc
sbb
fs
sub
pusha
add
adc
and
or
and
mov
sub
rol
pushf
stc
mov
add
pop
inc
(bad)
jmp
ds
in
push
out
cmps
jo
push
cmp
mov
aaa
(bad)
add
dec
cmp
fnsetpm(287
hlt
dec
sbb
scas
push
cmp
ins
or
sub
es
pop
mov
mov
mov
sahf
push
sti
dec
xchg
mov
les
push
and
test
pusha
adc
jb
cmc
xchg
shr
inc
sbb
sub
es
pop
imul
cld
lods
or
test
dec
mov
jb
and
adc
mov
cmp
jae
sbb
repnz
outs
stos
sub
jbe
and
mov
mov
into
das
xchg
xchg
ds
outs
loop
in
dec
push
pop
mov
and
and
adc
je
hlt
les
push
pop
pop
xchg
sub
sbb
dec
xor
adc
sub
push
mov
mov
and
adc
xor
sub
imul
mov
sbb
adc
aam
mov
or
jae
loopne
mov
ss
scas
pop
iret
sub
or
ins
mov
aaa
ss
xchg
movs
cwde
imul
jb
repz
mov
mov
mov
imul
xor
adc
das
ret
loope
repnz
mov
push
repnz
and
dec
dec
xchg
jo
movs
and
std
mov
add
and
lds
push
test
loopne
adc
mov
mov
pop
fwait
xchg
imul
push
clc
cli
sub
sub
xor
xor
aaa
push
push
add
or
repnz
mov
push
or
movs
aas
idiv
push
mov
jb
cdq
test
add
je
cmp
hlt
pop
(bad)
pop
adc
adc
pop
stos
daa
inc
jecxz
xlat
and
cli
cmc
lock
iret
movs
and
or
hlt
inc
add
push
(bad)
icebp
jle
jno
repnz
retf
repz
add
cmp
cmp
pop
adc
aaa
push
mov
mov
(bad)
ss
(bad)
push
lods
mov
int
add
xor
ret
dec
jnp
sub
(bad)
push
loop
mul
(bad)
out
popf
fcmove
sbb
(bad)
fdivr
in
call
mov
xchg
sub
mov
cli
pusha
pop
mov
sbb
cmp
jmp
or
lods
sbb
adc
addr16
lds
or
and
or
icebp
enter
add
mov
add
retf
addr16
les
or
jmp
push
mov
adc
xor
push
xlat
fsub
xor
pop
mov
cmc
in
mov
xor
pop
mov
and
fnstsw
(bad)
imul
or
loop
and
popa
add
sub
fs
dec
or
cmp
xor
in
push
loope
sub
adc
xor
sbb
mov
or
addr16
out
inc
dec
leave
cli
test
sbb
adc
nop
cmp
cmp
xchg
sub
arpl
ins
mov
nop
push
and
sub
lea
(bad)
push
or
pop
in
adc
fisttp
call
ficomp
xchg
mov
pop
xchg
sub
ja
adc
std
jb
in
jb
out
push
inc
adc
push
aam
sbb
push
aaa
aam
in
and
mov
(bad)
mov
xchg
cmc
jg
fwait
xor
in
mov
out
clc
sbb
mov
jecxz
pop
dec
add
sub
lds
je
add
sub
mov
sar
lds
repnz
and
adc
out
adc
adc
sbb
push
dec
xor
add
repz
mov
shl
test
ja
add
test
scas
xchg
cmp
xchg
sbb
sti
or
fisttp
(bad)
sar
push
add
mov
fdivr
call
ja
mov
mov
adc
nop
push
dec
xor
stos
imul
test
ja
sub
stos
dec
push
add
js
aaa
push
lock
ret
(bad)
lock
sub
xor
cmp
or
mov
cdq
cmp
cmps
in
daa
sar
sub
es
cmc
les
jmp
add
sub
pop
sbb
mov
dec
jne
pushf
rcr
xor
pop
nop
pop
lock
sbb
mov
lods
dec
cwde
in
outs
cs
xor
sbb
and
push
je
jecxz
sub
out
adc
rol
jnp
je
lock
fucom
lahf
inc
movs
and
inc
das
lods
and
mov
push
ficom
inc
das
mov
scas
sub
cmp
leave
pop
jp
icebp
add
xor
call
cwde
jmp
and
mov
or
add
fiadd
pusha
mov
dec
mov
add
pop
xchg
pop
je
push
aam
icebp
jmp
mov
mov
add
xchg
test
fcom
lahf
adc
je
xchg
sub
je
sub
push
ror
jl
lock
out
shl
dec
aam
jge
fld
arpl
aam
(bad)
mov
pop
dec
fistp
outs
mov
sbb
icebp
xchg
test
cmp
lds
cmp
inc
dec
adc
dec
dec
into
loop
jne
xchg
movs
(bad)
sbb
into
cmp
add
jmp
sbb
in
mov
pop
push
jne
stc
add
mov
icebp
or
cmp
mov
das
sub
in
dec
std
push
xchg
imul
ins
mov
int3
test
xchg
out
loope
pop
out
inc
push
xor
pop
adc
cdq
xor
pushf
(bad)
mov
daa
lods
pop
not
xor
adc
jns
pop
movs
mov
dec
in
fwait
popf
fcomp
scas
mov
(bad)
mov
push
sub
loope
movaps
sub
pop
sbb
and
jb
sub
inc
cmps
iret
ins
mov
enter
ins
ret
push
ds
xchg
adc
neg
inc
mov
mov
mov
stc
jns
repnz
dec
cmc
(bad)
cmc
mov
jg
fwait
cli
push
mov
fld
imul
add
hlt
out
inc
xlat
jg
xchg
or
jno
nop
jecxz
neg
movs
je
mov
fwait
dec
or
in
adc
data16
xchg
cmp
add
cmp
imul
aaa
sbb
push
mov
int
je
dec
or
adc
cmp
test
push
hlt
ins
push
in
rcl
mov
adc
sahf
push
mov
and
(bad)
ret
add
(bad)
js
mov
retf
fwait
enter
ffree
imul
jg
into
das
mov
lds
xor
pop
getsec
sahf
jp
lds
xor
mov
adc
mov
int3
aad
add
mov
push
shl
mov
mov
push
loopne
xlat
cmp
movs
lea
mov
stos
lods
jnp
iret
sbb
mov
mov
cli
sub
mov
add
mov
dec
call
mov
xchg
pop
out
call
cli
mov
outs
(bad)
mov
(bad)
ins
in
pop
sti
jb
sbb
scas
jo
jmp
xchg
scas
ss
aam
test
cmp
popa
imul
mov
mov
mov
dec
in
sbb
dec
aam
fwait
stc
xor
pop
dec
push
pop
jno
mov
outs
pop
xchg
inc
fcomp
pop
movs
and
pop
push
ret
std
jmp
ja
add
inc
out
add
xor
cmp
push
(bad)
retf
ffree
and
or
fbld
data16
xor
ss
push
jge
scas
jnp
and
cmps
or
mov
mov
ror
bound
sub
sbb
call
stos
ins
push
xor
and
or
aaa
mov
mov
or
repz
daa
sahf
gs
in
std
cmps
sbb
mov
lea
inc
clc
ins
dec
mov
pop
push
leave
aam
fwait
jns
add
inc
shr
int
dec
loope
imul
jg
and
enter
mov
fldcw
adc
jns
jae
daa
rol
push
in
cmp
cmp
test
sub
addr16
lods
fisttp
inc
jne
int
jecxz
or
int
sbb
mov
rol
pop
in
and
sub
mov
push
sbb
sub
pop
pop
cmp
pop
ins
jg
sar
mov
push
inc
fcom
rcr
pop
ins
xchg
(bad)
icebp
jecxz
clc
xor
ror
cmp
(bad)
push
test
sbb
sbb
in
dec
lods
rol
jb
lods
and
dec
sbb
pop
(bad)
cmp
mov
sahf
jge
dec
out
ins
adc
mov
loope
inc
xchg
jmp
mov
scas
cmp
xchg
dec
mov
and
loopne
mov
cmp
(bad)
gs
fwait
push
xchg
(bad)
stc
push
jle
fmul
and
daa
mov
scas
in
(bad)
adc
mov
push
gs
fs
movs
scas
and
fwait
in
(bad)
push
test
cmp
sbb
(bad)
mov
in
mov
xchg
dec
mov
cmp
push
in
dec
xor
xchg
test
std
imul
adc
add
shl
pushf
jp
mov
retf
pop
(bad)
arpl
xlat
stos
icebp
aaa
pop
outs
cmp
inc
inc
outs
shr
mov
nop
and
movs
(bad)
loopne
cmp
lock
dec
repz
jns
xchg
movs
call
cmps
outs
jns
arpl
imul
jns
pop
or
(bad)
fst
xchg
xor
in
shr
imul
fs
and
in
push
rcr
xor
std
inc
sbb
pop
adc
xchg
cwde
loope
xchg
jae
and
out
xchg
pop
call
pop
sahf
in
jmp
pop
sub
mov
inc
xchg
xor
jno
inc
sbb
fdiv
mov
cmc
cmc
sbb
cmps
popa
lds
lods
stos
and
retf
push
add
adc
sub
adc
jae
in
mov
pop
pop
jno
hlt
lods
js
icebp
cli
int3
popa
sar
adc
xor
cmp
adc
push
push
popa
mov
jbe
inc
sbb
mov
mov
cmp
mov
inc
rol
dec
cwde
dec
adc
fucomp
out
je
imul
cmp
fcomp
(bad)
and
xchg
(bad)
out
mov
aas
out
and
sub
retf
pop
retf
aad
mov
imul
pop
pop
stc
inc
cmps
cmps
(bad)
jge
test
mov
jecxz
jns
and
add
sbb
add
test
shr
mov
add
imul
pop
dec
mov
retf
push
int3
adc
add
out
outs
in
add
(bad)
cs
or
outs
gs
push
sub
xor
mov
mov
fldcw
sbb
sahf
mov
and
fbstp
movs
add
sbb
mov
cli
ins
jmp
ins
and
sbb
push
sahf
mov
sbb
mov
xlat
aam
pushf
xchg
lods
mov
arpl
lahf
jbe
mov
and
jg
inc
scas
add
cdq
cmc
out
lods
addr16
idiv
inc
inc
imul
ins
(bad)
nop
mov
cs
cs
retf
jge
movs
stos
pop
xchg
arpl
sub
and
daa
lahf
lea
iret
mov
call
xor
rcl
idiv
xor
stos
add
and
cmp
lds
call
sbb
push
push
sub
mov
fs
sbb
sbb
cmp
push
add
xchg
fisub
dec
jae
adc
iret
test
fild
les
mov
inc
int3
aas
lods
sub
(bad)
js
fdivr
mov
mov
xor
rol
or
shl
cmp
test
pop
pop
or
add
mov
xor
popf
mov
push
enter
xchg
sub
in
pop
repz
mov
adc
cmp
mov
out
in
mov
stos
jp
or
test
xor
out
data16
pop
fs
(bad)
lods
add
into
mov
out
sub
mov
fist
or
xor
div
sub
test
jbe
dec
cmp
push
cmp
sbb
fistp
leave
pop
jbe
cmp
frstor
repz
push
lahf
lea
sahf
das
cmp
pusha
cmp
dec
ins
sub
fs
adc
sbb
js
cld
ds
aas
in
inc
stos
movs
add
fwait
or
sbb
retf
out
fisubr
cmp
adc
pop
push
scas
imul
fld
pop
or
xchg
jge
inc
(bad)
cli
or
cwde
pop
test
and
fcom
push
arpl
jp
lds
xlat
jecxz
and
pop
lea
inc
(bad)
add
in
nop
loope
cwde
je
dec
mov
aam
cdq
ds
hlt
lock
pop
jo
jle
pop
das
xchg
cli
cmp
xchg
add
xchg
mov
idiv
outs
push
pop
rol
xchg
dec
fbstp
inc
and
(bad)
jecxz
cli
leave
ss
daa
loope
sub
and
mov
jo
aas
les
aad
mov
jnp
cmp
cmc
jmp
popf
inc
and
adc
sub
and
add
dec
das
fstp
mov
aam
cmps
int
pop
ds
push
in
jg
ror
das
cmc
dec
mov
mov
xor
addr16
lea
lea
loopne
scas
mov
fbstp
movq
das
mov
hlt
rdtsc
ficomp
push
dec
dec
or
test
rcl
sub
cmp
inc
push
ret
rcl
dec
sub
mov
pmulhw
pop
pop
add
inc
in
pushf
cmp
add
cli
lds
sbb
or
jo
push
push
call
popf
cmp
jmp
mov
inc
cmp
(bad)
pop
bnd
push
jecxz
ret
mov
dec
pop
std
jp
pop
icebp
xlat
in
ss
div
movs
push
xchg
push
lahf
adc
xor
cmps
adc
ins
sbb
sub
pop
mov
sbb
(bad)
fild
dec
loop
push
add
fs
pop
cli
jb
inc
data16
fsubr
mov
add
dec
mov
dec
inc
loop
repz
xlat
jle
push
cwde
fcom
xchg
mov
in
fisub
shl
lds
scas
mov
jp
jb
cmc
pop
sahf
in
shl
sub
push
cmp
xchg
stos
adc
pop
or
jno
mov
and
gs
push
dec
xor
and
enter
(bad)
call
push
sahf
pushf
jne
ds
push
sub
mov
add
loop
inc
cmp
stos
ins
inc
mov
inc
call
mov
cmp
push
jmp
xchg
dec
(bad)
aaa
movs
mov
cs
and
loope
mov
mov
icebp
mov
cmp
cmp
mul
push
xchg
sbb
popa
lods
sub
out
push
lock
dec
add
xchg
ret
movs
jns
fidiv
lods
add
jno
mov
jmp
adc
mov
outs
xor
jle
jo
push
push
mov
es
mov
daa
aam
fnsave
std
inc
out
sbb
sti
les
jmp
loopne
xchg
pop
jmp
pop
or
gs
iret
dec
sbb
xor
xchg
test
inc
or
inc
mov
popf
mov
jge
dec
inc
fidiv
lods
and
mov
or
(bad)
and
lock
mov
les
or
jle
or
xchg
xchg
add
les
inc
or
jg
iret
or
push
push
or
sub
mov
xor
(bad)
inc
pop
test
ror
mov
pop
sbb
cmp
call
aas
(bad)
retf
add
ds
popa
cmc
sahf
fwait
mov
shr
or
jne
lahf
mov
inc
clc
mov
sti
movs
(bad)
pop
aaa
call
fst
es
xor
int3
xchg
lea
mov
int3
or
icebp
pop
mov
mov
pop
xchg
dec
repnz
sbb
popf
inc
clc
jb
cmp
ror
dec
icebp
fs
sub
xchg
or
test
ror
fnsave
call
fnstsw
or
loop
es
cmc
push
inc
(bad)
sti
inc
cwde
pop
sub
outs
pushf
cmc
xchg
xchg
jp
add
jl
das
xor
ins
jo
cs
fwait
dec
pop
xchg
inc
pop
repz
mov
(bad)
popf
pop
jne
push
inc
xlat
jb
mov
fmul
movs
cmp
and
sub
ins
les
mov
mov
ja
jge
xor
jmp
and
push
imul
mov
mov
jno
ds
dec
icebp
mov
cmp
push
push
sbb
adc
sar
rcr
adc
xchg
adc
es
cmp
icebp
jmp
sub
dec
mov
repnz
in
fild
fwait
xor
jae
mov
in
xchg
ds
das
sbb
(bad)
(bad)
cdq
pushf
jmp
cmp
push
sbb
and
mov
cmp
mul
cli
in
jns
mov
dec
jge
adc
jmp
jmp
ret
mov
cmp
cs
lock
out
enter
mov
and
sub
fs
das
cmp
xor
ins
xchg
int
inc
add
pop
pop
and
cmc
adc
mov
neg
xlat
push
xor
mov
inc
and
shr
mov
in
jle
int3
push
ja
outs
mov
pushf
jmp
scas
sar
scas
pop
push
mov
int3
xor
in
mov
aad
mov
out
pop
cmp
arpl
out
scas
into
stos
ror
pop
mov
daa
cmp
jbe
jb
sbb
xor
fisubr
cld
mov
cmp
ds
js
into
sete
push
mov
xor
mov
dec
or
test
retf
sub
push
dec
repnz
scas
jmp
xor
jl
inc
and
jne
je
push
(bad)
addps
cld
daa
lock
pop
mov
lods
jo
imul
jle
ret
aas
repz
jno
xor
and
out
popa
repz
adc
lock
std
mov
out
loope
jecxz
sar
repz
ror
(bad)
mov
fs
push
xchg
(bad)
mov
xlat
mov
icebp
mov
lods
inc
sub
sub
mov
jo
fistp
sti
add
ret
or
sti
xchg
or
sbb
sbb
xor
cld
mov
sub
sar
pushf
jbe
jl
hlt
outs
ret
or
(bad)
ja
cmp
push
call
out
and
mov
adc
and
ins
dec
cmp
(bad)
jp
fwait
test
test
xor
xlat
gs
fisttp
iret
jg
dec
repnz
pop
aaa
mov
sub
mov
out
loopne
jo
or
lahf
dec
movs
(bad)
xchg
dec
jg
xor
js
jbe
sub
pop
xchg
push
jecxz
jno
movs
retf
pop
push
fcomp
jnp
(bad)
cmp
int3
into
or
in
mov
add
xchg
push
mov
dec
ins
adc
mov
jo
inc
fmul
out
test
cmc
push
mov
aad
out
sar
pushf
mov
ss
xchg
sub
push
sub
sbb
push
adc
movs
cld
je
fst
call
sub
jp
fnstcw
lock
or
or
mov
in
enter
dec
xchg
shr
inc
mov
retf
inc
or
pop
cmp
xchg
addr16
mov
pop
cmp
mov
mov
(bad)
and
out
cmp
add
jae
mov
xor
loop
or
ds
mov
adc
xchg
bound
push
xlat
mov
xor
jecxz
inc
xchg
stos
call
xor
xor
scas
cli
jge
mov
in
and
dec
inc
addr16
test
sub
movs
sub
sbb
sub
xchg
and
push
lods
leave
mov
jg
lock
popa
cld
and
paddw
mov
push
xor
cmp
mov
fcmovb
fdiv
push
inc
fisub
mov
adc
jnp
out
dec
cmp
jl
sub
mov
test
pusha
lock
or
mov
cmp
dec
pop
push
cwde
(bad)
adc
adc
adc
mov
(bad)
mov
jb
lahf
cli
or
iret
mov
in
pop
inc
mov
and
scas
push
mov
hlt
jg
lds
mov
fisubr
mov
popf
outs
pop
mov
in
imul
xor
and
test
ds
push
adc
add
jl
or
dec
push
add
mov
dec
jbe
dec
push
stc
nop
clc
iret
out
int
into
out
add
xchg
or
push
sahf
shl
xchg
or
call
cmps
loop
mov
std
mul
iret
dec
cmp
cwde
mov
out
push
mov
inc
jecxz
and
ret
arpl
or
(bad)
sbb
scas
scas
cmp
cmps
sub
movs
mov
mov
push
(bad)
idiv
nop
lock
icebp
push
sub
sub
jecxz
sar
mov
push
jecxz
test
call
in
cwde
loop
test
outs
movs
std
inc
sub
adc
dec
inc
shl
cmc
jle
sub
add
sti
out
dec
cli
cmps
sbb
test
test
push
xor
dec
pop
call
jmp
mov
inc
add
sub
in
les
pop
nop
inc
je
daa
sahf
(bad)
jmp
dec
cmc
stos
mov
and
fsub
xchg
call
imul
aaa
or
test
cmps
mov
adc
enter
pop
adc
into
scas
iret
pop
dec
or
mov
push
add
xchg
repz
xchg
mov
xor
cmps
mov
cmps
and
add
mov
(bad)
jmp
pop
push
fnstsw
xlat
add
shl
sbb
mov
push
(bad)
jmp
and
xor
leave
stos
mov
jbe
(bad)
mov
adc
imul
leave
xchg
(bad)
aad
(bad)
and
xchg
adc
xor
repz
and
xchg
mov
push
xor
les
xor
mov
sti
setl
popa
retf
or
xor
cs
into
sub
or
js
mov
mov
pop
pop
mov
outs
(bad)
adc
mov
pop
mov
cmp
ss
enter
bound
push
pusha
add
jge
lock
call
je
or
sub
retf
sub
inc
xor
and
cmps
mov
pop
xchg
cld
mov
ror
leave
add
ret
loop
and
and
daa
loope
jo
pop
inc
inc
lahf
pop
jnp
hlt
cli
loope
pop
sub
xchg
cmp
jle
es
or
fnstcw
mov
add
ins
adc
aad
adc
nop
pop
(bad)
repz
push
jb
ror
fwait
lock
in
jno
mov
cmp
pop
fnstsw
dec
test
mov
mov
adc
mov
push
scas
rol
outs
xchg
cmp
je
add
and
push
add
xchg
mov
out
mov
xor
jb
or
test
dec
(bad)
add
mov
inc
movs
adc
sbb
pop
adc
sbb
xchg
add
icebp
mov
mov
push
mov
xchg
add
dec
or
mov
clc
push
jno
jne
icebp
pop
popa
leave
inc
pop
iret
cmp
add
arpl
cld
add
in
xchg
pop
sub
push
and
outs
push
(bad)
and
cli
fdivr
push
les
xchg
jmp
add
jmp
ficomp
dec
adc
or
dec
dec
push
fldenv
adc
shr
ins
mov
not
adc
sub
fmul
clc
jl
(bad)
push
out
sub
ins
mov
cmp
inc
sbb
jae
xor
cdq
(bad)
pop
(bad)
mov
stc
jne
cdq
and
xor
fldcw
test
mov
cmc
sub
sahf
lods
xor
fbstp
add
and
sar
sahf
sub
jp
into
ja
push
aam
cli
cmp
mov
ror
mov
(bad)
loop
hlt
jns
mov
xor
xor
jo
ret
stc
dec
int3
into
pop
lods
cwde
pop
cmp
(bad)
add
aas
mov
test
inc
inc
mov
popa
sti
or
mov
movs
mov
pop
dec
std
mov
pop
push
add
sub
jecxz
xchg
jmp
dec
lahf
shl
or
in
dec
(bad)
push
dec
adc
mov
scas
push
add
mov
dec
(bad)
sar
aas
jmp
sub
jl
add
(bad)
comiss
aaa
movs
cmp
mov
add
dec
ss
repz
int
icebp
fwait
cmp
cmp
or
inc
in
inc
jecxz
test
rcl
mov
clc
cmp
add
ins
jns
jp
repnz
xchg
in
inc
sahf
mov
test
(bad)
sbb
mov
xor
add
jge
data16
dec
in
xor
mov
mov
repnz
mov
xlat
jnp
add
out
and
mov
clc
leave
in
int
cld
cmc
pop
xchg
mov
int3
in
xor
sub
jae
or
rcr
cwde
xchg
(bad)
adc
xor
das
test
inc
adc
xor
pop
add
push
pop
mov
dec
dec
fucompp
lahf
xchg
in
leave
xchg
and
fs
push
sbb
fsubr
fs
mov
fbstp
ja
inc
push
inc
push
mov
popa
mov
jno
add
inc
dec
in
dec
cmps
mov
into
iret
mov
xor
neg
jge
gs
out
ret
jmp
cmps
inc
add
in
in
push
xchg
ss
xchg
pop
jl
cmp
popf
fsub
clc
push
sbb
lods
ss
xor
mov
and
les
(bad)
stos
dec
cmp
cld
fidiv
pop
(bad)
sbb
jge
mov
jle
repz
cwde
sbb
cmp
cmp
cmp
sti
loop
int3
push
std
sbb
sbb
mov
jp
xor
fsubr
mov
leave
jg
dec
mov
shl
cdq
fidivr
mov
pop
sbb
(bad)
test
dec
mov
test
mov
or
pop
cmc
je
into
sbb
stos
mov
out
(bad)
icebp
jne
mov
push
pop
pop
mov
pop
xlat
xchg
leave
xor
cld
sbb
lock
inc
test
push
lahf
inc
xor
pop
jnp
enter
sub
ins
sbb
leave
cs
xchg
sub
stos
xchg
pop
dec
mov
xchg
cmp
aaa
jno
jo
lds
fcomp
mov
leave
mov
mov
in
dec
enter
mov
xchg
xchg
mov
sbb
sbb
mov
retf
dec
cmp
adc
xor
sbb
es
or
gs
out
or
pandn
cs
jnp
rcl
and
(bad)
int
int
jl
adc
mov
dec
dec
xchg
adc
jle
jg
sti
add
pop
xchg
imul
jmp
push
retf
(bad)
lock
or
out
jb
out
outs
and
pop
shr
retf
push
arpl
mov
cs
xchg
jmp
sub
adc
add
lea
sub
loopne
movs
push
or
leave
or
ret
pop
jle
rcl
push
cmc
mov
(bad)
jp
xchg
fld
(bad)
lock
mov
mov
xor
adc
ret
mov
loop
mov
pop
add
in
stc
inc
fs
sar
mov
sub
sub
xor
mov
stc
sahf
adc
fwait
sbb
js
add
sbb
lods
mov
or
cld
push
push
push
sahf
call
addr16
jo
cdq
mov
xchg
call
sub
out
cmp
xor
js
mov
xchg
xor
test
push
aaa
mov
repnz
mov
push
jbe
jmp
aaa
out
fldenv
cmp
push
mov
lods
rcr
out
or
and
pop
sub
rcl
mov
lock
jno
add
cld
mov
push
dec
loopne
retf
fisub
push
call
nop
push
rol
xchg
pop
cwde
imul
iret
out
stos
fdiv
xchg
pop
pop
sub
cmp
call
out
aam
cwde
lods
jb
and
jg
or
sahf
loope
mul
xchg
fnstsw
cmps
sbb
call
xor
and
cdq
mov
push
sar
test
cli
adc
pushf
push
jecxz
retfw
retf
jne
loope
test
movs
ret
mov
loope
sub
mov
shl
mov
add
adc
xchg
inc
cmp
sub
fdiv
shl
daa
rcl
movs
push
mov
xchg
mov
mov
push
lods
cmp
movs
xchg
jg
add
cs
and
mov
dec
xchg
je
out
cmp
lock
out
scas
and
xchg
push
out
es
sub
inc
push
push
in
xor
sub
jbe
adc
mov
mov
pop
adc
test
xchg
mov
and
cs
out
enter
push
hlt
es
ror
sar
jl
cmp
push
fbld
cmps
mov
imul
push
(bad)
outs
(bad)
xlat
dec
mov
xchg
push
sbb
pop
mov
out
add
xchg
sbb
sahf
cmp
cmp
retf
pop
adc
jb
mov
test
or
mov
cs
aas
jb
lods
movs
sub
and
or
mov
repnz
mov
popf
and
jnp
sbb
sub
int3
pop
jns
fdiv
push
arpl
pop
(bad)
mov
jmp
(bad)
cwde
lods
pushf
icebp
mov
scas
sub
into
sub
pop
lahf
xchg
jg
cmp
mov
jns
test
(bad)
dec
stos
sbb
pop
mov
fisub
xchg
pushf
cmp
neg
cli
mov
dec
or
icebp
mov
xchg
cmp
adc
mov
pop
push
mov
enter
mov
loopne
jae
imul
inc
call
ins
daa
and
test
dec
das
fxch
fs
cld
sbb
dec
retf
mov
jp
fwait
lahf
das
stc
sub
adc
imul
lea
pop
lock
stc
in
add
fnstcw
jb
pop
mov
cmps
hlt
imul
cwde
or
mov
ror
mov
imul
adc
retf
mov
sti
out
and
mov
dec
in
pop
mov
in
jbe
lods
push
xchg
dec
jmp
mov
in
dec
sbb
and
add
mov
pusha
dec
jmp
sbb
imul
mov
je
xlat
lock
cmp
in
lds
daa
ret
outs
call
inc
mov
mov
lahf
push
test
sbb
and
pop
loop
call
xchg
daa
sub
in
ins
nop
mov
retf
mov
ins
pop
nop
sahf
scas
adc
cmovl
pop
pop
inc
inc
xor
jbe
scas
daa
sahf
icebp
xchg
or
dec
dec
clc
or
inc
aas
pop
mov
or
cmp
and
fnstcw
(bad)
movs
add
enter
mov
add
mov
cmp
or
(bad)
sub
arpl
xor
lea
mov
fs
xchg
dec
cmps
cmps
push
rcr
into
cld
inc
mul
je
in
mov
adc
fs
push
ret
retf
push
cli
adc
push
or
jg
cs
xlat
sbb
js
repnz
movs
mov
xchg
push
inc
icebp
test
push
fcmovbe
or
outs
leave
cmps
dec
cmp
rcr
test
add
jecxz
(bad)
jg
or
or
add
std
scas
pop
add
std
jmp
pop
dec
(bad)
add
out
mov
scas
add
je
bound
cs
outs
ret
xchg
mov
in
pop
test
or
inc
aas
sub
pusha
pop
icebp
xlat
pusha
fwait
xchg
cld
push
add
aaa
mov
xchg
xchg
fld
jg
mov
or
add
(bad)
cmps
retf
lahf
(bad)
jmp
sub
adc
std
imul
mov
test
(bad)
jg
sbb
adc
ret
gs
shl
bound
jge
mov
out
adc
popf
cmp
push
xchg
dec
leave
and
cmp
jecxz
mov
inc
test
out
add
arpl
dec
sbb
repnz
and
dec
xchg
mov
hlt
fnstsw
es
sar
mov
out
jl
push
loopne
push
dec
jb
sti
inc
test
mov
jp
gs
push
cld
fsubr
adc
addr16
mov
stos
lods
mov
clc
xor
cmp
(bad)
adc
mov
mov
or
xchg
jecxz
lods
adc
mov
test
xchg
mov
add
jle
xchg
push
in
push
pop
test
scas
mov
and
aad
out
sub
jae
pop
(bad)
(bad)
inc
cwde
leave
fild
or
mov
lea
cmp
rcl
rol
in
sbb
das
xchg
mwaitx
cmps
addr16
or
(bad)
mov
xchg
jb
dec
jle
pop
xlat
repz
leave
jb
dec
mov
and
mov
outs
mov
pop
mov
jge
sbb
int3
retf
sub
pop
mov
dec
xchg
popf
jne
pop
cmps
mov
sub
test
push
inc
(bad)
sub
pop
out
addr16
aas
test
jg
imul
hlt
jmp
data16
mov
shl
std
xor
add
iret
repz
ins
cmp
dec
sbb
nop
push
mov
mov
imul
or
pushf
jle
pop
xchg
xlat
loope
jb
stc
(bad)
popa
retf
je
std
push
std
and
push
fcom
pop
xchg
adc
idiv
inc
jae
inc
inc
arpl
call
imul
in
ret
or
dec
sbb
inc
pop
and
jl
add
sub
sub
ret
outs
shl
push
mov
dec
xchg
and
cmp
xchg
mov
fiadd
pop
mov
or
popa
(bad)
hlt
int
push
or
inc
mov
pop
fild
sbb
xchg
mov
or
mov
mov
xlat
mov
ficomp
adc
addr16
fidivr
push
popa
push
xchg
sub
add
(bad)
sub
fmul
repz
and
aaa
mov
mov
cmp
mov
iret
aam
or
jne
add
stos
or
neg
jmp
push
jl
adc
jle
xchg
jbe
shl
lods
and
adc
mov
fcmovnbe
sub
ins
test
mov
outs
data16
jecxz
mov
call
jmp
mov
cmps
std
pop
rcr
add
push
out
sbb
dec
movs
clc
xchg
mov
or
sub
jno
fldenv
sbb
(bad)
in
pop
mov
(bad)
jo
repnz
cmps
sub
lods
push
ins
or
rol
je
fcomp
pop
scas
pop
movs
es
pop
mov
inc
lods
mov
xor
sbb
mov
sub
and
test
inc
mov
cdq
and
rcr
in
adc
fst
in
mov
ja
fldcw
pusha
(bad)
in
adc
mov
je
outs
cmps
mov
jmp
stc
pop
add
mov
cmp
pushf
in
add
in
jmp
pusha
lds
push
or
dec
in
retf
cmp
jmp
sbb
pop
(bad)
js
push
and
outs
inc
jecxz
ja
jne
addr16
inc
clc
dec
out
jnp
adc
cmp
xchg
xor
sub
cmp
pop
loopne
dec
(bad)
cmp
ficomp
push
unpcklps
inc
call
dec
mov
dec
cmp
imul
mov
mov
iret
xchg
sbb
shr
imul
sar
xor
stc
aas
js
sbb
dec
inc
hlt
(bad)
hlt
inc
pusha
stos
sub
xor
loop
mov
inc
pop
xor
push
xor
icebp
add
fdiv
in
stos
imul
pushw
xchg
inc
and
popf
mov
add
xor
pop
jmp
cmp
inc
clc
imul
cmps
retf
out
ds
pop
(bad)
shl
pop
rcl
pop
aaa
sbb
inc
into
push
ret
mov
int3
pusha
pop
xor
lock
xchg
outs
mov
jbe
mov
imul
inc
sti
sahf
hlt
mov
cmp
xor
mov
and
pop
mov
cmp
lods
(bad)
or
movs
mov
movs
aad
pushf
add
iret
loop
fcmovnb
scas
jmp
mov
nop
xor
int
data16
jle
sbb
sbb
push
jp
lods
outs
xor
iret
push
fst
in
imul
ror
add
jl
xor
out
clc
xor
outs
retf
lock
push
data16
xchg
das
call
cmps
cmp
add
add
lods
inc
dec
hlt
fs
xchg
cmps
(bad)
loopne
sahf
xor
mov
pop
pop
js
jno
scas
in
sbb
(bad)
mov
dec
adc
add
cmps
ins
popf
(bad)
jle
mov
or
(bad)
cmp
inc
test
push
(bad)
(bad)
jp
movs
fwait
push
jno
cdq
sub
mov
lahf
and
scas
(bad)
cld
mov
mov
sub
lds
mov
push
and
jecxz
jmp
mov
shl
ss
add
sbb
cmps
and
inc
pop
or
shr
jnp
test
repz
or
cmp
ja
mov
cmp
add
mov
nop
sbb
addr16
mov
(bad)
(bad)
adc
pop
out
ror
mov
jl
aad
add
fnsave
add
cmc
pop
in
rcl
fstp
jecxz
mov
mov
push
dec
pusha
icebp
mov
mov
xchg
inc
shl
sbb
add
cmp
inc
in
xchg
cdq
xlat
repz
mov
xchg
and
lods
cmp
ins
aas
dec
fisubr
adc
test
test
xchg
lock
(bad)
sub
cmp
xor
sub
sub
test
sahf
sbb
mov
mov
ret
xor
add
loope
sub
and
adc
sub
xor
cs
jl
mov
pushf
xchg
mov
dec
sti
lods
adc
out
dec
call
mov
mov
jmp
retf
arpl
adc
sbb
sbb
dec
aam
popf
jge
push
stc
neg
aad
sbb
ja
and
pusha
cli
inc
stos
fsub
loopne
sub
ret
sti
xchg
mov
push
jle
ins
jbe
sahf
mov
cmp
repz
scas
pop
and
mov
test
ds
push
rcl
xchg
and
test
push
clc
in
out
sbb
inc
add
cmp
je
push
fs
into
jp
and
nop
sbb
(bad)
pusha
push
xor
push
stos
std
cmp
dec
fcom
lods
(bad)
add
add
or
loop
int3
push
test
and
out
mov
dec
xchg
jne
inc
les
ins
sub
mov
popa
sub
pop
retf
adc
movs
mov
pop
push
dec
xor
dec
jecxz
mov
pop
out
(bad)
pop
push
lahf
rol
stos
stos
pushf
add
add
cld
outs
stos
lods
test
add
mov
imul
aas
js
sbb
pusha
xor
aad
out
pop
cmc
stos
psllw
cmp
mov
jbe
jns
daa
add
and
inc
test
std
mov
ins
movs
push
push
or
int
inc
adc
mov
push
mov
mov
iret
sub
xchg
pop
inc
popa
add
test
aas
sub
mov
aad
popa
xchg
cmp
out
retf
jp
popa
inc
dec
and
fldcw
std
push
rol
test
popa
fs
dec
int
sub
scas
adc
aas
cmps
mov
mov
test
bound
dec
lods
jle
jno
lods
jbe
jns
xor
popf
jl
mov
repz
xchg
sub
test
inc
sub
jg
ret
test
add
inc
mov
jne
xor
out
loop
lods
bound
or
iret
fisttp
les
cmc
sti
repnz
adc
fld
push
cdq
int3
pop
call
stos
jmp
add
test
js
cmp
xchg
add
mov
dec
adc
mov
repz
push
sub
ins
mov
push
cmc
test
(bad)
push
lds
push
fstp
push
(bad)
fist
das
(bad)
cmp
lahf
cmps
sbb
xchg
ja
cdq
cmp
arpl
cdq
mov
(bad)
cmp
add
cmp
scas
mov
stos
jnp
nop
stos
jp
pop
sbb
dec
lods
push
stos
ret
xor
mov
inc
cmovle
fsubr
jo
mov
in
loope
and
cmps
aad
shl
jge
adc
lock
push
int
fcom
jmp
movs
ret
in
jbe
adc
lods
arpl
mov
fptan
ret
lods
pop
jmp
aam
xor
lods
dec
sar
lods
jb
repnz
push
sub
not
mov
xchg
adc
js
adc
sbb
jno
ja
cmc
inc
icebp
or
add
fadd
fwait
inc
jbe
dec
into
dec
lds
aaa
sbb
lock
test
ins
(bad)
dec
popa
mov
fadd
jb
pop
and
xchg
jnp
divps
fild
xor
and
out
dec
pusha
jmp
push
rep
push
jl
add
ret
mov
xchg
xchg
xor
dec
pop
and
cmps
mov
(bad)
pop
push
fs
(bad)
sub
inc
and
push
dec
lea
jo
mov
test
mov
arpl
mov
pop
test
retf
xchg
jp
outs
nop
pop
sub
test
mov
loopne
ins
mov
pushf
cmp
test
sbb
pop
stos
rcr
mov
cmp
fcmovne
das
in
xchg
ret
ret
jg
dec
aas
test
add
sub
stc
inc
(bad)
stc
out
ffree
aam
or
gs
aad
rol
xor
lahf
dec
out
ror
mov
sub
out
xor
lods
inc
jmp
push
icebp
adc
shr
push
add
test
xchg
test
rcl
in
push
or
inc
mov
(bad)
ins
frstor
lods
rep
ror
dec
enter
lods
(bad)
dec
cmp
adc
jg
add
enter
push
jge
(bad)
mov
leave
shl
(bad)
jbe
mov
pop
dec
or
jg
or
mov
aam
fdivr
imul
sbb
test
pop
fs
dec
adc
movs
jns
dec
sub
test
xor
mov
lods
mov
pop
shr
mov
sbb
add
in
add
fsubr
repz
pop
or
in
ror
in
hlt
mov
sub
mov
les
mov
inc
xchg
test
stc
add
rcl
adc
out
pop
cmp
arpl
pop
bswap
(bad)
rcl
inc
sbb
mov
data16
in
cs
aas
and
inc
add
sbb
out
int3
daa
mov
std
repz
jmp
rep
pop
inc
lds
fistp
stos
and
dec
(bad)
xchg
push
or
jns
retf
jb
push
js
sbb
arpl
adc
inc
(bad)
xor
call
mov
xchg
jmp
fldcw
mov
push
cmps
outs
pop
test
call
mov
fistp
(bad)
xor
jmp
mov
mov
nop
(bad)
sbb
retf
jbe
and
mov
cli
cmp
mov
stos
adc
and
cmp
mov
mov
mov
jl
or
add
adc
int3
fidiv
push
mov
bound
or
mov
dec
fsub
sub
loopne
dec
dec
push
pop
xchg
cmp
nop
ret
mov
adc
fisttp
lock
ds
cmp
cmp
mov
int3
xor
inc
push
mov
jp
or
pop
ret
cmps
outs
(bad)
adc
or
and
out
add
into
cmp
push
aas
mov
xchg
ret
or
inc
cs
push
sub
je
ret
fwait
jge
out
jl
xor
sar
mov
or
mov
push
or
inc
pop
out
adc
lahf
sbb
mov
ffree
ss
ror
add
in
pop
jnp
pop
or
inc
pop
mov
enter
ja
sti
and
fsubr
cdq
(bad)
dec
retf
mov
ins
sub
mov
enter
es
mov
retf
mov
leave
outs
push
dec
retf
out
mov
or
mov
cs
xor
cmp
stos
out
adc
xchg
cmp
inc
loop
jl
sub
mov
push
nop
(bad)
jg
lock
std
iret
and
data16
add
xor
int
imul
xor
push
dec
je
or
sbb
rol
dec
adc
fidiv
mov
fild
sbb
xchg
mov
outs
dec
outs
pop
fst
(bad)
xor
(bad)
xchg
mov
push
pushf
push
popf
rep
sub
jg
scas
call
pop
and
int3
fild
mov
jp
pop
out
fs
mov
sub
scas
add
test
cmc
imul
cmps
add
push
neg
sbb
xor
(bad)
jo
cli
pop
movs
xchg
add
mov
push
push
mov
sbb
xchg
mov
sbb
icebp
lock
pop
mov
xchg
daa
arpl
out
mov
int3
jbe
in
xchg
arpl
cwde
inc
or
out
fimul
in
add
not
ins
mov
sub
adc
arpl
or
ror
fmul
xchg
pop
mov
test
jp
ins
xor
inc
or
push
sub
sbb
outs
xor
jno
inc
out
imul
mov
iret
movs
or
xor
mov
cmp
inc
inc
jb
push
ret
pushf
mov
bound
rol
ja
clc
scas
xchg
adc
gs
add
lds
mov
shl
stos
mov
jmp
jecxz
jle
cdq
add
or
stos
repnz
lds
lahf
mul
adc
int3
sub
push
pop
repz
push
aam
stos
lods
inc
cld
pop
sub
mov
loopne
push
pop
(bad)
(bad)
out
loope
iret
pop
adc
(bad)
pop
inc
pop
mov
inc
stc
push
pusha
in
inc
pushf
sub
inc
xchg
call
fcom
ret
mov
mov
push
das
pop
out
pop
mov
jnp
clc
aad
loope
cmc
(bad)
fild
xor
sbb
dec
xchg
push
adc
sbb
repnz
jno
lea
dec
lahf
mov
std
not
xor
jp
fnsave
xor
enter
inc
repz
lds
mov
mov
dec
jbe
fstp
cmps
or
lahf
inc
pop
mov
jg
cmps
xor
js
push
sbb
push
pop
and
mov
mov
ficom
sbb
add
fcmovnu
imul
xor
call
lds
cs
push
add
xlat
mov
cmps
retf
aad
cmp
xchg
jmp
cli
movs
jno
bound
push
push
or
aad
inc
clc
stos
fcom
ret
loopne
aas
and
fucomi
dec
(bad)
xor
addr16
cmps
stos
cld
aam
mov
mov
dec
leave
aad
or
mov
adc
xlat
inc
sbb
pmaddwd
test
jge
pop
sub
mov
xchg
popa
mov
test
inc
cld
jecxz
pop
pop
retf
jp
push
(bad)
loopne
jne
or
add
fsub
dec
dec
sti
setae
jp
push
dec
(bad)
retf
pop
fs
mov
or
mov
and
cmp
pop
arpl
push
cmc
dec
aam
mov
cld
(bad)
fidivr
mov
sub
adc
out
iret
xchg
(bad)
pop
test
mov
int3
mov
jno
cmc
cmp
scas
pop
fs
and
retf
dec
loope
xchg
cmp
pop
pop
pushf
cmps
sub
call
xor
outs
push
jle
pop
push
or
push
clc
push
test
data16
jg
xchg
xchg
xchg
lea
(bad)
dec
push
cmp
add
fnstsw
add
sti
daa
add
sti
movs
rcl
inc
out
aaa
sub
sbb
lods
jmp
jg
iret
out
sbb
retf
sub
inc
outs
mov
nop
pop
pop
jb
imul
jecxz
pop
repnz
jle
rep
aad
aas
push
mov
dec
fst
imul
cmp
mov
xlat
dec
in
mov
test
sbb
rcr
mov
out
js
jle
int
mov
mov
fidiv
jle
enter
imul
inc
loop
or
dec
push
add
les
inc
xchg
fisubr
popa
ret
enter
dec
mov
repnz
pop
jecxz
movs
jne
or
dec
adc
jae
outs
sub
call
adc
or
imul
jno
ss
lock
pop
mov
aam
sbb
cmps
mov
push
jg
cmp
in
dec
jo
test
repnz
(bad)
cmp
xlat
jns
xchg
pop
inc
and
xchg
mov
fldcw
jle
mov
das
out
int
xor
dec
outs
and
sub
ins
jnp
ins
dec
and
nop
cmp
mov
pop
popf
outs
pop
mov
push
mov
and
sahf
cmp
mov
jnp
inc
or
(bad)
imul
push
push
xchg
xchg
test
icebp
dec
movs
test
clc
retf
push
lods
and
mov
push
ret
adc
inc
test
rcl
cmp
dec
ret
jle
mov
stos
jbe
xor
xor
mov
jne
pop
sbb
mov
ins
movs
loop
and
out
mov
mov
aad
es
dec
mov
es
pop
mov
push
dec
jmp
repnz
pop
lock
mov
add
mov
ret
mov
dec
cdq
xor
iret
adc
push
sbb
mov
popf
push
sar
sbb
cdq
loope
test
adc
mov
inc
sub
adc
daa
mov
pop
pop
jecxz
ret
cld
cli
adc
mov
cld
sbb
ds
push
rcl
jecxz
sbb
lods
cmpxchg
xchg
out
scas
fimul
aad
int3
and
and
neg
lods
sbb
(bad)
scas
xchg
or
jno
cli
std
mov
psrld
or
int
or
sbb
repz
mov
or
out
lea
add
stos
add
xchg
test
out
adc
pop
sub
daa
add
mov
jle
and
movs
add
jbe
ror
adc
das
fnstsw
fld
(bad)
sub
in
jmp
inc
sub
push
test
ja
icebp
punpcklbw
shr
ins
int
xlat
repnz
or
fs
mov
jmp
mov
repnz
mov
sub
xchg
mov
iret
inc
pop
ss
jle
jmp
xor
mov
lods
push
jecxz
scas
imul
push
pop
adc
xor
inc
pusha
in
mov
js
popf
push
mov
adc
or
inc
jmp
imul
add
mov
call
dec
adc
jecxz
xor
nop
add
xchg
and
loope
aad
xchg
icebp
scas
das
mov
dec
sub
in
jbe
and
mov
jp
ins
mov
out
push
ds
inc
adc
jne
jle
inc
jnp
pop
jg
push
shl
rcr
jnp
mov
sub
repnz
mov
dec
cmc
sti
and
mov
sbb
call
movs
scas
xchg
fnstsw
shl
imul
xchg
dec
stos
push
inc
cmps
adc
lock
(bad)
loope
cmc
hlt
(bad)
sub
mov
bound
inc
cwde
sbb
std
inc
das
int
mov
out
fcomp
or
sbb
fsub
sub
push
cs
fiadd
mov
pop
fiadd
in
cmp
movs
mov
cmp
mov
xchg
or
fadd
enter
jecxz
add
lea
rcl
jecxz
push
pop
jl
lock
mov
lea
inc
jmp
shr
in
les
mov
ret
lahf
imul
loop
adc
add
test
inc
into
cmp
add
popf
mov
adc
xchg
sti
popf
jns
xlat
dec
bound
push
adc
fcomp
inc
jbe
sub
sub
push
add
fdivr
xchg
inc
(bad)
xor
adc
and
xchg
sbb
das
adc
adc
leave
add
push
xchg
mov
dec
inc
ins
xor
pop
shl
sbb
push
mul
or
cmp
shl
mov
mov
jae
fs
imul
mov
and
or
sub
cmc
lods
lods
test
std
xchg
inc
loope
jns
xchg
call
cdq
test
push
jmp
sbb
push
jno
cmp
fmul
fwait
sub
test
xor
inc
pop
aas
and
inc
adc
test
cmp
inc
(bad)
fild
or
jb
or
and
retf
es
jns
gs
adc
or
jmp
mov
dec
and
(bad)
sub
mov
xor
sbb
pop
mov
push
gs
xchg
fimul
retf
pushf
pop
aaa
mov
ret
mov
push
test
inc
jge
(bad)
cmp
cmp
push
sbb
pop
mov
retf
shr
xor
in
test
add
push
dec
adc
cs
imul
(bad)
loopne
movs
xchg
pop
mov
iret
or
repz
cld
add
or
(bad)
jb
fidivr
mov
add
pop
xor
sbb
retw
call
cmp
fsub
cmps
ja
adc
(bad)
int
int3
popf
mov
add
pusha
retf
pusha
call
arpl
bound
fst
fsub
mov
cmc
rcl
mov
xchg
mov
das
or
lods
fnstcw
shl
mov
inc
mov
int3
mov
ja
mov
xchg
mov
nop
xchg
aas
in
sbb
outs
mov
rcl
adc
and
sbb
retf
and
or
(bad)
pop
or
cmp
gs
mov
in
(bad)
sub
fs
xor
inc
pusha
cmp
push
push
mov
cmp
cwde
test
or
or
rcr
dec
fmul
and
cmp
sub
in
dec
xchg
xor
ret
push
and
cmps
fidivr
push
mov
jno
out
test
pop
stos
popa
je
jbe
(bad)
repz
addr16
fstp
jl
fld
not
mov
sbb
jne
mov
in
xor
dec
mov
add
bts
pop
outs
push
dec
adc
jbe
pop
fwait
shl
ds
inc
xchg
xor
nop
add
push
fistp
pop
lds
rol
and
add
xchg
or
or
and
mov
cld
pop
dec
into
or
out
rcr
or
mov
test
jmp
mov
loopne
jnp
dec
shl
dec
test
mov
dec
xchg
mul
sbb
cmp
and
stc
cmp
mov
(bad)
mov
add
or
neg
clc
pop
mov
mov
lock
push
cwde
or
nop
mov
(bad)
mov
jle
jecxz
cwde
xor
nop
inc
pop
imul
xchg
cli
or
sub
(bad)
fucomp
jmp
out
into
push
jmp
and
inc
xor
ins
and
stc
mov
mov
xlat
inc
test
test
mov
out
ds
mov
fidivr
lods
enter
lods
in
leave
mov
pop
jle
push
pushw
adc
into
pop
xor
out
aam
arpl
jne
sbb
cmp
in
(bad)
cmp
rol
cmp
xor
(bad)
hlt
inc
test
in
movs
mov
cwde
test
xchg
and
mov
jle
rol
and
sbb
push
outs
adc
pop
mov
pushf
ds
jne
out
xor
hlt
push
jnp
or
xor
loopne
(bad)
mov
call
popa
lods
fdiv
jmp
sub
data16
arpl
xchg
add
mov
lods
jnp
jl
out
adc
mov
bound
sub
cmp
and
dec
sar
pop
mov
mov
stc
cmps
loopne
in
pushf
sbb
jmp
(bad)
repz
fisub
and
sub
and
hlt
xchg
cld
ins
adc
jp
shr
mov
mov
das
jl
ss
movs
loop
fstp
adc
or
mov
cwde
inc
inc
stc
mov
out
cdq
push
ret
dec
cmps
cmp
aad
and
sub
jg
add
inc
push
mov
test
scas
adc
call
scas
push
int3
call
aaa
adc
inc
mov
sbb
push
arpl
stos
stc
leave
call
lods
adc
cmc
test
add
push
fs
mov
mov
cmc
sbb
jp
xchg
(bad)
mov
adc
fbstp
mov
pop
dec
xor
or
or
add
fxsave
test
mov
dec
je
shr
fist
jmp
dec
xchg
cmc
mov
inc
xor
call
mov
pavgw
mov
push
repz
mov
jle
mov
mov
inc
inc
ror
inc
cmp
mov
fsub
jmp
cwde
pop
in
dec
mov
mov
push
mov
lods
pcmpgtd
or
mov
mov
pop
outs
sbb
inc
inc
in
push
pop
mov
fstp
or
lock
test
mov
xchg
and
in
dec
or
les
mov
and
std
jns
or
cmp
xor
je
inc
jge
sahf
imul
add
cmp
in
movs
mov
push
dec
add
imul
xor
fucomip
fnsave
icebp
mov
(bad)
jl
sbb
pop
loope
add
ss
xchg
xor
jge
inc
pop
out
or
mov
scas
dec
inc
(bad)
cmp
adc
lahf
push
cmc
mov
dec
in
mov
xchg
mov
pop
mov
adc
xor
sbb
hlt
xchg
mov
mov
ins
shr
rol
jmp
retf
ss
stc
leave
sbb
adc
sub
int
fidiv
sbb
inc
mov
sub
sbb
pop
jmp
jbe
outs
(bad)
(bad)
stos
or
push
inc
(bad)
fnstenv
push
cmp
mov
clc
mov
lods
fnstenv
inc
popa
adc
stos
test
xchg
in
mov
enter
in
fistp
add
xor
(bad)
xchg
or
popa
inc
in
mov
ins
retf
jecxz
cwde
fnstsw
jg
fmul
pop
jge
pushf
push
imul
call
pop
ret
ss
mov
xchg
push
and
out
or
sbb
sub
lahf
outs
(bad)
(bad)
lock
mov
fisub
test
dec
adc
scas
cmps
data16
mov
(bad)
pop
dec
jns
pop
add
in
std
mov
push
fstp
pop
ds
gs
mov
ret
leave
imul
sub
cmps
inc
mov
sti
out
jno
bndldx
enter
fnstenv
cmp
(bad)
fmul
bound
sbb
xchg
adc
jg
popf
les
ins
cmp
pop
stos
dec
sbb
loopne
cdq
lea
sbb
enter
add
xor
mov
adc
jns
push
mov
mov
pop
(bad)
imul
add
aas
mov
and
ja
nop
scas
mov
push
test
call
push
aaa
bound
jb
inc
inc
int
adc
mov
cmp
stc
push
adc
not
test
or
cmps
cmp
add
(bad)
jne
(bad)
sub
inc
add
fidivr
dec
(bad)
xor
inc
enter
adc
ss
pop
mov
xlat
jle
adc
pushf
test
inc
and
xor
rcr
(bad)
sub
push
std
scas
loopne
mov
inc
sbb
adc
ja
loope
ss
jb
jl
in
push
mov
or
fbstp
out
retf
(bad)
cmp
sbb
adc
mov
pop
cmp
mul
mov
(bad)
mov
stc
leave
inc
ret
adc
push
xor
sub
jg
dec
pushf
xchg
mov
xor
jb
push
cmp
mov
xchg
xor
xchg
mov
cdq
cmp
push
push
xchg
jp
pusha
les
into
cmp
inc
or
and
fmulp
aas
or
je
push
call
or
inc
adc
lds
(bad)
(bad)
sar
cmp
daa
outs
sbb
jb
dec
les
sti
sbb
imul
dec
xor
jo
sti
add
xchg
repz
xor
out
sbb
in
ja
mov
mov
hlt
jo
inc
sub
jle
icebp
popf
jb
inc
sbb
inc
and
pop
inc
clc
popf
int3
cmp
test
push
or
(bad)
gs
pusha
dec
and
popf
fnstsw
cs
jno
ja
and
out
in
adc
popf
into
sub
shl
js
cmp
mov
pusha
adc
adc
fmul
loopne
ins
jo
lods
ss
mov
xchg
jne
mov
inc
cmp
xor
jecxz
div
iret
repnz
aad
push
fidivr
inc
adc
inc
loop
jno
or
rcr
or
cdq
xchg
test
push
rcl
or
popa
scas
movs
or
jno
enter
retf
push
pushf
test
in
div
jge
adc
dec
and
and
cmp
add
push
mov
mov
mov
inc
ror
or
out
daa
cdq
js
imul
clc
mov
loop
push
mov
cmp
mov
nop
lahf
(bad)
fstp
cmp
or
lock
lds
std
inc
pusha
mov
xor
icebp
outs
aad
rcr
cmp
pop
cld
mov
lahf
pop
dec
pushf
mov
inc
and
aam
out
pop
dec
mov
stos
mov
int3
pop
mov
push
movs
sbb
jne
cmps
mov
xchg
out
icebp
adc
jg
outs
fdivr
sub
aaa
js
in
dec
imul
movs
outs
mov
pushf
and
fst
inc
cmp
xchg
mov
jl
sahf
fiadd
xchg
mov
and
mov
sub
sub
mov
rcr
jo
std
mov
pop
out
out
icebp
sbb
xchg
jg
stos
retf
scas
cwde
dec
and
xlat
popa
push
xchg
push
cmp
xor
ds
fwait
sub
sub
dec
and
xchg
push
call
pop
dec
fxch
call
dec
cdq
xchg
arpl
and
sub
adc
mov
int3
jle
mov
push
adc
jo
js
test
xchg
faddp
(bad)
mov
out
pop
jns
scas
mov
push
adc
add
mov
fbld
inc
jmp
jb
mov
loope
xchg
inc
into
push
mov
shr
adc
mov
test
pop
hlt
js
imul
jbe
xchg
pusha
div
and
push
add
sbb
cmps
pop
pop
jb
cmps
xchg
cmp
test
es
pop
imul
and
sub
adc
mov
(bad)
pop
or
rol
xor
out
mov
jb
and
call
data16
push
xchg
mov
addr16
push
mov
push
adc
sbb
loop
sbb
adc
(bad)
jmp
fisttp
push
shl
fadd
setno
jns
sbb
pop
ret
xchg
jno
aas
xchg
pop
call
ficomp
or
cdq
sub
mov
or
nop
xor
jle
movs
aaa
and
lds
imul
leave
or
push
and
addr16
push
ss
imul
mov
aam
aas
shr
pop
ins
clc
(bad)
dec
dec
dec
mov
sub
imul
mov
push
cmps
sbb
lds
idiv
rol
mov
mov
repz
jns
inc
dec
xchg
jno
lea
test
sbb
or
scas
shr
mov
fldcw
cmps
pop
jmp
out
test
mov
ret
and
fidiv
lock
or
or
jae
mov
mov
pop
mov
fldenv
popf
popf
inc
imul
out
popa
test
daa
or
shl
fild
jae
(bad)
pop
rcl
std
into
jbe
jb
push
imul
mov
dec
dec
mov
leave
mov
add
adc
into
jb
ds
mov
inc
add
(bad)
into
add
dec
sbb
xchg
mov
and
(bad)
ret
mov
cs
add
xor
sbb
sub
stos
pop
dec
sbb
je
loop
adc
mov
and
arpl
mov
test
lahf
cmp
sbb
cmp
iret
mov
shr
mov
sbb
mov
jne
jge
adc
aad
loope
mov
imul
aam
mov
sti
movs
aas
sub
js
iret
repz
push
addr16
dec
mov
sub
push
mov
bound
ror
popf
lea
pop
out
cld
iret
mov
retf
cmps
lock
jnp
test
or
pusha
fcomp
lahf
and
rcr
imul
dec
sub
pop
adc
jp
enter
add
popa
jnp
push
xor
jle
xchg
push
cld
push
push
pop
test
in
lock
inc
or
push
sbb
fld
mov
js
mov
das
jmp
push
add
sar
push
popf
js
daa
jbe
in
jae
mov
popf
aam
inc
ins
mov
pushf
sub
and
(bad)
js
and
mov
icebp
clc
push
rol
sbb
ds
fisttp
xlat
xchg
xchg
mov
int3
xlat
and
dec
push
jno
clc
ja
in
sbb
dec
push
mov
push
and
je
cmp
and
lock
pop
arpl
int3
(bad)
mov
bound
xor
push
cs
fwait
pushf
mov
jg
adc
loop
sub
fwait
adc
popf
fld
pop
jmp
repnz
inc
cld
xchg
cmps
leave
add
sbb
ja
xchg
stc
inc
fwait
xchg
jbe
stc
jae
fwait
mov
dec
push
(bad)
arpl
ins
loop
outs
jae
add
daa
dec
aad
cdq
icebp
cmps
sti
shl
test
cmp
gs
xor
and
xor
cmc
loope
dec
add
les
or
prefetcht0
sbb
repz
xor
mov
xor
mov
retf
or
dec
sbb
inc
or
jns
mov
cli
or
je
mov
xor
and
xor
out
sub
test
out
inc
jbe
xchg
mov
jnp
rcr
nop
jp
push
mov
jle
icebp
push
push
or
mov
inc
loopne
bound
(bad)
frstor
xchg
pop
xor
cmps
les
mov
sub
mov
xor
scas
in
repz
adc
xor
pop
test
pop
cmp
add
addr16
movs
lods
jno
lea
rol
lahf
mov
jbe
jno
or
add
ret
inc
sbb
call
xor
xor
dec
test
repnz
aaa
retf
inc
(bad)
nop
and
dec
dec
daa
(bad)
xlat
inc
in
lea
mov
imul
adc
(bad)
int3
movs
and
and
cmp
sahf
mov
jno
sbb
cmp
je
xchg
ins
in
and
and
(bad)
mov
jo
sbb
or
mov
aam
mov
or
repnz
mov
xor
into
sbb
jo
jecxz
fmul
mov
xor
jmp
cdq
mov
int3
xor
push
nop
and
in
das
nop
mov
jge
mov
xchg
repnz
pop
xlat
pop
and
pop
push
(bad)
mov
mov
data16
and
sbb
push
(bad)
ja
pop
imul
jl
pop
cmps
outs
fwait
std
jmp
ds
mov
and
test
outs
imul
xchg
fwait
lods
add
sub
push
pop
pop
xor
mov
(bad)
adc
ror
outs
sub
add
lds
mov
mov
and
mov
jb
hlt
push
mov
xchg
pop
or
mov
xchg
sbb
sar
pusha
push
sub
mov
imul
dec
shl
jmp
pop
jo
sub
mov
mov
sti
movs
push
xor
fnstcw
push
das
and
mov
int
(bad)
adc
sbb
adc
jecxz
mov
fiadd
sub
dec
cwde
lahf
fdiv
add
push
ins
pop
jmp
sub
sub
adc
jbe
inc
adc
xchg
bound
mov
in
jnp
imul
dec
into
cmp
or
push
ss
push
imul
sbb
mov
pushf
dec
jb
jmp
jbe
jmp
pop
hlt
adc
test
jne
pushf
xor
popf
sub
pop
icebp
and
js
xchg
clc
int
loop
push
mov
push
mov
loope
mov
mov
xchg
(bad)
sub
push
jmp
hlt
adc
(bad)
sar
sar
call
test
pop
xor
(bad)
fwait
add
sbb
in
and
cmp
fdiv
pushf
adc
push
adc
retf
(bad)
call
call
call
push
jmp
lock
inc
ds
xchg
mov
lea
cld
popw
call
xor
movs
nop
xor
sub
adc
mov
mov
frstor
popa
or
icebp
adc
dec
push
daa
adc
xchg
sub
pop
sub
pop
mov
inc
add
jbe
and
aam
ja
pop
mov
fsub
and
cmps
ror
cmp
scas
mov
test
ffreep
xchg
hlt
pop
leave
imul
icebp
mov
in
push
stc
les
call
cmp
xlat
push
xchg
in
xor
cmp
adc
mov
pop
mov
dec
mov
push
mov
push
cmp
mov
xchg
popa
cmp
fdivr
cmp
out
cmp
or
push
pop
test
dec
cmc
je
fcom
jle
imul
jmp
shl
pop
jbe
fs
leave
iret
packuswb
jp
sub
stos
inc
je
jmp
dec
js
fidiv
xchg
cmp
mov
mov
mov
xacquire
adc
jno
or
inc
dec
push
data16
adc
test
inc
ficom
fcomp
(bad)
fst
jmp
xchg
push
sar
fs
call
data16
in
ins
sar
cs
sbb
cmps
xchg
ds
js
push
jle
loope
ja
cmp
lods
mov
rcl
or
ret
push
pushw
dec
or
loope
sub
mov
or
mov
or
pushf
test
ins
mov
repz
add
shl
push
pop
addr16
xchg
sbb
jge
retf
cmp
arpl
out
add
sti
mov
lock
ficom
iret
call
imul
jle
xchg
lds
das
and
sub
push
push
jle
jp
inc
xchg
pop
ds
ficomp
push
in
add
or
sbb
cmp
push
mov
adc
lods
adc
hlt
jp
inc
jno
push
cmp
dec
aam
aas
fucomi
popf
aam
and
mov
int
lea
jmp
mov
or
rcl
mov
addr16
jno
fild
push
das
add
mov
fmul
add
pop
rcl
gs
lahf
imul
inc
pop
(bad)
pop
push
shr
loope
jp
or
popf
je
add
lods
and
mov
push
jmp
xor
ror
sub
icebp
sahf
inc
scas
cld
or
out
mov
xlat
repz
mul
adc
mov
out
ins
lds
in
fmul
lock
push
mul
sub
cmp
inc
ret
and
clc
bound
in
mov
adc
dec
pop
lods
mov
fmul
jne
stos
pop
push
fstp
aas
sbb
push
shl
mov
dec
mov
and
dec
jo
cmps
into
(bad)
jnp
xchg
icebp
addr16
mov
ds
ret
add
mov
sub
dec
lods
or
dec
xor
push
lahf
mov
aaa
inc
inc
sbb
dec
add
mov
stc
fistp
rcr
repz
cwde
fidiv
cdq
sub
test
dec
test
xor
mov
add
push
(bad)
fisub
and
sbb
fwait
push
dec
and
outs
les
pop
int
fdivr
movs
sub
(bad)
cmps
jns
add
repz
mov
fwait
(bad)
fisub
in
push
int
data16
mov
ds
jmp
rcl
lea
xor
push
xor
out
outs
or
leave
icebp
lock
shl
jl
ins
push
xor
ds
aam
dec
pop
adc
xchg
cmp
sbb
inc
adc
jnp
mov
add
xor
aaa
add
sysret
(bad)
test
je
jg
pop
or
addr16
adc
push
lods
inc
clc
pop
into
sub
sub
add
lods
scas
mov
cs
jne
push
mov
dec
lods
sti
in
dec
mov
or
pusha
inc
leave
ret
(bad)
jmp
cmp
xchg
scas
fidiv
inc
loop
push
push
cwde
pop
lods
into
cmp
cmp
and
in
jae
retf
aaa
aaa
or
xchg
movs
and
xor
fwait
add
xlat
push
inc
leave
dec
(bad)
arpl
mov
div
stos
mov
mov
jo
ret
std
mov
movs
cmp
aad
mov
jecxz
sbb
cmps
mov
push
inc
mov
sbb
mov
jne
mov
or
mov
fxch
push
jo
xchg
jnp
sbb
test
jbe
es
xchg
sti
jbe
pop
or
sbb
aaa
or
mov
xor
pop
sbb
xchg
(bad)
cs
fild
enter
mov
pop
add
loopne
inc
mov
loope
lock
push
push
mov
es
sahf
stos
adc
push
pop
xchg
xchg
inc
mov
pop
std
sub
retf
cmps
bnd
in
and
ffree
pop
adc
into
mov
lds
adc
sbb
or
mov
dec
jmp
mov
adc
pcmpeqw
mov
sahf
or
sub
adc
mov
jae
mov
pop
pusha
push
add
adc
xlat
out
stc
mov
push
adc
ins
dec
jg
loopne
adc
push
adc
inc
jo
daa
ret
lock
dec
or
mov
nop
lock
cmp
(bad)
and
sbb
jmp
xchg
lea
mov
jg
jb
lods
retf
mov
(bad)
push
xchg
adc
cdq
jbe
xchg
std
lods
ins
sbb
dec
or
push
mov
(bad)
and
cmp
push
rcr
(bad)
jmp
div
int
dec
inc
mov
jnp
mov
mov
rcr
fist
mul
iret
xor
bound
loopne
adc
aam
push
and
test
or
fs
mov
aas
xchg
lock
xor
out
frstor
cmp
xchg
xlat
sbb
inc
sub
cs
or
mov
sahf
xor
adc
mov
jno
shr
inc
xor
inc
out
add
stos
ficom
sahf
js
repnz
cmp
xchg
out
sub
into
test
fiadd
dec
push
les
rcr
cmp
and
out
jnp
sahf
xor
pop
push
mov
inc
jp
xor
dec
iret
in
hlt
clc
mov
sub
add
aas
mov
inc
test
popf
sti
add
jne
push
nop
ja
sti
sar
push
scas
icebp
imul
push
loopne
push
adc
sti
imul
ja
call
stos
push
jne
leave
jge
or
mov
fistp
popa
jle
push
sub
sbb
inc
or
loop
xchg
jno
test
data16
add
mov
dec
jnp
jbe
enter
push
and
loop
cmp
repnz
push
pop
lods
mov
push
jnp
icebp
int3
cs
jle
popa
or
out
pop
pop
mov
out
cmp
inc
dec
popf
fadd
adc
mov
pop
inc
sub
jmp
loope
pop
loopne
xchg
cmp
pop
fcomp
sub
mov
cdq
shl
rol
inc
xor
jb
test
mov
out
ret
push
or
inc
out
inc
lea
retf
pop
pop
dec
inc
loopne
mov
mov
inc
mov
xchg
sbb
sbb
retf
cmp
dec
xor
sub
dec
dec
mov
mov
les
iret
xchg
cmp
das
pop
push
sbb
mov
mov
mov
mov
xchg
sub
test
sub
add
inc
inc
cmps
cmp
jp
xchg
inc
push
sbb
dec
mov
fld
sahf
xchg
scas
cs
cmps
popa
jns
cwde
or
mov
mov
cs
enter
push
adc
aaa
sub
mov
aam
dec
scas
dec
loopne
mov
(bad)
sbb
hlt
in
adc
mov
ror
and
sbb
aad
jge
jp
in
xadd
xchg
daa
cli
out
hlt
push
or
and
lahf
xchg
inc
add
sbb
xor
rol
sti
int
outs
ins
mov
add
std
jp
std
and
idiv
push
mov
add
push
pop
adc
pop
adc
cmp
(bad)
movs
or
popa
pop
cdq
ja
inc
cwde
mov
mov
mov
pop
jmp
pop
cs
jmp
sbb
fld
mov
cmp
dec
cli
test
clc
dec
xchg
dec
(bad)
mov
jne
in
movs
sbb
hlt
or
jl
loopne
cmps
mov
test
leave
push
call
add
out
addr16
push
xchg
or
test
cmps
ror
jns
xchg
mov
cmps
or
inc
mov
adc
mov
leave
rol
xchg
lahf
xor
iret
in
adc
lock
enter
repz
cwde
fwait
adc
jmp
sbb
mov
out
or
xor
fs
in
test
and
inc
shl
int
pop
mov
inc
xchg
mov
fcmove
mov
push
sbb
mov
sbb
jge
or
(bad)
cmps
push
shl
push
dec
push
adc
bound
or
ss
(bad)
adc
sbb
sbb
call
test
jne
inc
(bad)
mov
arpl
in
mov
mov
xchg
and
outs
cmp
push
dec
fdivr
cmp
inc
aad
iret
jb
addr16
test
test
push
jmp
cdq
xor
and
fcomp
push
xor
dec
ds
mov
mov
dec
xor
mov
xchg
jnp
dec
mov
sbb
mov
sub
ret
jle
add
sbb
add
or
mov
dec
cmp
jae
js
repz
jge
dec
add
pop
mov
sahf
inc
les
mov
int
shr
mov
call
fsub
jmp
(bad)
push
xchg
ret
dec
call
xor
xor
int
pushf
or
cmp
adc
mov
pop
(bad)
fnstcw
mov
aas
cmp
outs
dec
cmp
aam
xor
push
test
push
ss
cld
sub
hlt
add
pop
out
fadd
mov
das
loope
mov
icebp
or
aas
sub
sbb
jnp
int
outs
lahf
adc
retf
in
or
inc
mov
in
jl
ficom
adc
add
jge
mov
call
int3
xchg
sub
jb
jb
xchg
cmp
add
loop
inc
mov
test
mov
lods
cs
daa
xchg
inc
push
xchg
mov
pusha
test
inc
sahf
cmp
lahf
lea
add
mov
in
in
cmp
scas
xlat
xchg
xor
xor
ret
into
(bad)
push
popf
xor
cmps
pop
mov
sbb
sub
ret
cmp
add
addr16
mov
inc
mov
xchg
add
xor
pop
fisubr
repz
and
xchg
loop
and
or
leave
adc
ins
and
test
pop
inc
xchg
loop
xlat
xchg
or
scas
outs
out
mov
jge
pop
adc
or
rcl
push
jo
xor
ins
sub
sub
in
daa
gs
(bad)
fldenv
leave
sbb
inc
xchg
inc
jmp
iret
packsswb
push
jmp
stos
pop
jmp
mov
pop
push
les
or
and
stos
add
add
xchg
fs
jb
daa
xor
out
xor
adc
push
pop
lahf
rcl
jmp
bound
iret
dec
xor
dec
and
loop
xchg
xlat
jmp
xor
fs
out
jo
xchg
push
mov
aad
outs
leave
pop
jp
test
cmps
retf
shr
jo
sbb
cmp
out
pop
(bad)
push
in
retf
pop
ficomp
pop
xchg
xor
mov
add
loopne
lods
popa
mov
data16
dec
stos
cld
jl
mov
xor
loope
xor
pop
stos
mov
ds
out
jge
lea
movs
cmp
popf
pop
dec
(bad)
and
(bad)
js
outs
cmp
dec
and
jmp
push
popf
imul
mov
call
xor
mov
adc
test
xchg
cmp
jecxz
lea
pop
(bad)
loope
xor
inc
push
out
jge
xor
adc
sub
aas
xchg
lods
in
add
or
mov
xchg
and
test
retf
dec
jb
rol
shl
jbe
adc
test
ret
pop
mov
out
fcmovne
bound
add
fst
push
fst
dec
data16
sahf
xchg
cmp
push
das
add
jns
inc
rcl
xchg
test
rep
push
push
ss
sbb
mov
jnp
in
and
jne
std
movs
jle
aam
fld
arpl
lds
mov
sub
xchg
mov
es
adc
ja
xchg
fcomp
mov
adc
daa
add
movs
xchg
or
retf
in
mov
mov
cwde
loopne
out
je
mov
jo
les
leave
xor
addr16
cmp
inc
adc
push
std
ja
xor
push
iret
or
and
int3
ror
lock
std
add
mov
mov
xchg
sub
fs
cmp
xor
cmp
daa
mov
hlt
out
cmp
enter
ret
leave
jmp
pop
stc
sbb
aad
xchg
popf
call
pop
jb
mov
sti
xor
jg
cs
jp
mov
clc
call
ins
test
imul
xchg
pop
fld
ins
xchg
aaa
jmp
jge
popa
js
jge
mov
sahf
addr16
push
mov
mov
shr
lock
xor
(bad)
fstp
jnp
push
push
inc
arpl
clc
xor
cdq
push
mov
lods
sub
adc
mov
dec
mov
cmp
and
push
sahf
add
fsubr
jp
je
idiv
dec
inc
sub
imul
sahf
popf
push
xchg
mov
out
sbb
mov
into
sbb
pop
scas
shl
(bad)
ret
sahf
ds
jb
loopne
adc
sbb
rcr
jo
test
jb
pop
bound
add
inc
inc
inc
out
ficom
inc
push
ins
cs
adc
fbstp
mov
stos
pop
imul
ss
cmp
xchg
test
fnsave
lock
xchg
jno
cmp
inc
jns
jbe
or
pop
lahf
mov
mov
rcr
adc
fmulp
pop
jl
sub
add
pop
lock
xor
cdq
shr
mov
mov
jns
clc
push
jb
push
pop
dec
dec
sub
scas
fcmove
fstp
inc
arpl
gs
popa
out
xor
in
pusha
mov
push
fs
jne
cmps
xor
adc
adc
(bad)
rcr
mov
dec
cwde
xor
aas
imul
rcl
jle
in
mov
out
fimul
add
xor
pop
fwait
nop
sbb
sub
out
push
add
mov
jne
iret
xchg
adc
cmp
mov
ins
cdq
aas
xchg
inc
pop
(bad)
cmp
les
fimul
mov
rcl
mov
data16
cwde
imul
scas
clc
sahf
jbe
(bad)
pop
dec
jno
pop
mov
xchg
cmps
pop
into
in
fdivp
loope
pop
lock
xlat
in
out
outs
xchg
xchg
sub
or
cmp
stos
arpl
or
cmp
cmps
fcom
fdiv
loop
repz
dec
mov
cmovl
dec
mov
out
jb
jb
(bad)
mov
mov
push
mov
outs
das
popf
movs
cdq
sub
mov
outs
mov
fsubr
push
test
sbb
inc
call
push
inc
pop
mov
cmp
dec
shl
push
fnstenv
jg
out
cmp
movs
neg
bound
mov
sub
test
mov
pop
xchg
and
jp
sub
jne
lods
fcom
ror
adc
ret
push
or
in
(bad)
jl
push
add
das
out
and
and
stc
loop
movs
loop
cmc
lds
scas
xchg
xchg
addr16
scas
jge
clc
aas
jb
out
in
daa
adc
loope
(bad)
jne
(bad)
push
not
sub
rcl
jbe
arpl
and
adc
adc
lods
xor
jge
out
popa
leave
and
fsub
sbb
dec
lds
into
mov
call
xor
leave
dec
out
imul
iret
es
sub
sub
loopne
aad
in
retf
stos
cmp
jnp
xor
gs
ror
aad
jge
xchg
mov
lds
movs
add
out
rol
loopne
xchg
leave
xchg
fstp
pop
loopne
ja
(bad)
adc
xchg
mov
jl
adc
shl
das
repnz
push
outs
int
bound
fisubr
xchg
cmp
xchg
adc
movs
add
fnstenv
cmp
pop
fadd
lods
mov
mov
xchg
add
lahf
movs
aam
xor
mov
dec
repnz
add
add
push
sbb
xchg
jecxz
jge
adc
les
aam
cmps
mov
je
sub
inc
mov
jno
mov
aaa
(bad)
ins
in
sbb
jmp
test
pop
call
test
xor
lock
rol
(bad)
pop
mov
call
xchg
or
cli
les
imul
call
es
push
iret
inc
sub
mov
pop
in
cld
push
(bad)
sbb
dec
je
or
cmp
adc
out
mov
sub
xchg
xlat
adc
inc
cmps
div
mov
iret
push
cs
adc
cmp
mov
js
loope
not
in
jnp
mov
mov
popf
push
add
jle
test
and
movs
les
and
in
dec
and
mov
int
push
mov
test
jo
mov
lfs
xor
mov
xchg
sbb
mov
mov
sub
xchg
hlt
lods
pop
or
inc
mov
or
inc
adc
jmp
dec
cmp
and
sbb
mov
leave
cmp
outs
xchg
lds
fsub
jno
ret
in
mov
sbb
or
ds
ret
fs
push
repnz
xchg
imul
loop
xchg
aad
out
sar
xor
xor
shr
mov
xor
mov
div
div
scas
sti
int
std
sbb
add
popf
pop
mov
xchg
aas
icebp
(bad)
call
jmp
push
push
push
xor
fsubrp
adc
cmp
jne
scas
sub
or
jne
xchg
mov
pushf
xlat
xlat
xor
pusha
mov
cmp
addr16
mov
xchg
mov
jg
shl
retf
pop
lods
mov
mov
outs
jbe
ins
xchg
adc
cmc
dec
sbb
mov
call
xchg
gs
add
aaa
push
lahf
or
cmps
out
sub
inc
(bad)
fisub
popa
push
enter
rcr
fild
cmps
pushf
not
mov
add
adc
pop
ins
(bad)
je
mov
cmp
es
jle
fcomp
outs
jl
jge
movs
push
mov
push
inc
out
test
sahf
cli
retf
mov
mov
mov
loopne
aam
mov
mov
push
inc
fisubr
in
jmp
loop
cmps
push
(bad)
movs
xchg
jle
pop
jne
jb
push
repnz
dec
jne
dec
(bad)
or
loop
sub
outs
sub
jno
or
sub
je
repnz
cld
push
cmp
rcl
dec
inc
mov
pop
mov
das
jg
jp
int
cli
adc
or
stc
jns
adc
push
test
xchg
in
fisttp
mov
pusha
xlat
es
and
das
pop
xor
push
shl
rcl
pop
out
cmp
push
sub
mov
daa
mov
ins
sub
jle
jmp
icebp
(bad)
fist
mov
sbb
shl
mov
and
push
in
sti
stc
push
xchg
cwde
bound
push
gs
or
test
jns
repz
ret
dec
(bad)
inc
jns
into
rcr
push
sub
icebp
in
into
xchg
jmp
xchg
push
xor
call
out
and
hlt
pop
fidiv
pop
sub
add
mov
fild
mul
and
dec
mov
adc
ja
ins
xor
call
xlat
cmps
hlt
xor
(bad)
std
sbb
mov
jl
push
dec
mov
add
mov
retf
pop
sahf
and
ds
shl
adc
or
call
repz
sub
lds
test
loopne
jmp
sbb
add
es
inc
aaa
aas
fs
xor
outs
pop
push
pop
mov
jae
sbb
ret
pop
mov
adc
mov
push
and
sub
jo
sar
inc
fcomip
dec
sub
adc
jle
push
push
inc
retf
leave
loope
push
out
sbb
cdq
ins
and
out
xchg
cld
test
mov
das
mov
mov
not
mov
and
cmps
and
xchg
push
push
adc
jg
jl
xchg
sti
not
push
scas
jg
mov
xlat
add
ds
mov
rol
in
add
loopne
and
jno
push
cdq
push
clc
xchg
cdq
push
mov
fabs
cwde
in
cmps
imul
out
or
shl
add
out
sub
leave
xchg
jmp
inc
ret
adc
aaa
jnp
sbb
data16
leave
and
(bad)
icebp
or
test
xor
aaa
xchg
or
and
cmp
sub
push
dec
cmp
jge
mov
pop
pop
aam
adc
pop
xchg
xlat
fwait
ds
cmp
aas
jp
movs
(bad)
xchg
popf
lods
lods
bound
jecxz
mov
mov
jecxz
xchg
mov
sbb
arpl
xor
mov
lods
repz
outs
push
pop
and
in
retf
jmp
and
pop
jo
jp
cmc
mov
into
mov
stos
xor
fnstcw
mov
mov
add
jg
mov
sub
imul
jae
test
xchg
mov
js
scas
sub
sahf
das
cmp
mov
xchg
ss
sahf
jbe
xchg
test
adc
mov
fnstenv
clc
inc
push
dec
add
(bad)
stc
jl
pushf
bound
cld
aam
xchg
pusha
sbb
fs
outs
(bad)
fsub
pop
mov
or
ins
mov
xchg
adc
mov
int
scas
inc
sbb
xchg
jp
cmc
lods
xchg
nop
mov
outs
xor
xor
aam
cmps
sub
lods
push
(bad)
push
xchg
jb
mov
retf
mov
test
inc
jo
and
mov
or
dec
cmc
div
push
out
jmp
mov
out
add
push
ret
pop
sbb
mov
jmp
loopne
scas
loop
(bad)
jbe
mov
dec
jbe
mov
sub
sub
(bad)
xchg
movs
cmp
xchg
ins
dec
loope
inc
ins
nop
repnz
sahf
mov
int
iret
inc
mov
int3
les
fnstenv
in
inc
cmp
out
test
iret
jns
leave
jnp
lods
add
xchg
ds
fldcw
fild
or
adc
mov
dec
fsubr
inc
add
push
cmp
mov
out
or
pop
outs
cld
loopne
add
(bad)
xchg
dec
mov
rcr
out
inc
mov
ja
and
mov
cmps
fnsave
sub
(bad)
jmp
cmps
or
stc
ins
xor
xchg
loopne
dec
sbb
pop
out
adc
js
add
aas
ret
xchg
shr
out
push
(bad)
mov
aam
call
and
int3
cmp
dec
imul
mov
and
daa
cmp
dec
bound
mov
add
cmp
push
les
ret
outs
mov
rcr
sub
inc
push
in
push
pop
pop
pop
popa
jecxz
sbb
mov
pop
mov
retf
aas
xor
xchg
jns
stos
cld
mov
loopne
std
push
pop
mov
mov
push
sbb
ret
rcr
push
sbb
stos
cdq
mov
jno
out
out
xchg
jg
cmp
int3
mov
daa
xor
sub
adc
mov
aam
rcl
js
sub
out
or
lahf
push
xchg
lds
sub
xchg
int3
add
push
cli
add
and
cmp
out
mov
cmp
or
mov
sub
pop
test
ds
outs
popa
mov
retf
xchg
xchg
cmp
add
pop
inc
dec
add
lds
and
cmp
pop
push
lock
inc
jmp
cmp
pop
and
pusha
mov
daa
rcl
je
cmp
jns
add
pop
jg
push
movq
add
mov
xchg
adc
call
nop
xchg
xchg
sahf
and
mov
mov
(bad)
or
in
(bad)
clc
pop
in
loope
sub
add
sub
retf
xchg
dec
out
(bad)
fcom
jne
add
sub
hlt
xchg
xor
and
cdq
sbb
sub
jb
xchg
xor
in
imul
cmc
add
or
mov
xor
std
daa
cmc
scas
lds
call
ret
mov
jge
aad
pop
movhpd
push
popa
cli
aas
mov
(bad)
mov
jns
cs
fadd
mov
mov
jmp
sahf
(bad)
sub
lods
jmp
mov
(bad)
cmp
pop
(bad)
int
or
sbb
xor
or
ja
and
lock
push
test
call
mov
in
or
mov
into
aaa
jo
push
fsub
mov
enter
mov
jno
mov
jnp
into
dec
rol
pop
aad
iret
cmp
pusha
dec
sub
mov
jl
mov
fld
test
ins
sahf
iret
sbb
sbb
add
call
dec
mov
jmp
dec
jbe
and
test
(bad)
test
mov
dec
(bad)
jb
sub
lock
pop
std
sti
test
in
mov
cmps
mov
push
adc
push
mov
pop
aaa
xchg
add
mov
jl
jl
(bad)
fisttp
sbb
cmp
mov
cwde
mov
fcom
fwait
daa
sbb
or
push
retf
pop
(bad)
cli
and
jmp
mov
(bad)
aas
sub
es
or
push
test
imul
aad
or
xor
jmp
rol
fld
mov
repz
push
mov
retf
cmp
push
or
rdtsc
imul
(bad)
hlt
sar
sahf
push
stos
outs
loopne
jmp
mov
sub
loopne
jae
test
pusha
inc
sti
mov
neg
(bad)
clc
mov
outs
sahf
jmp
mov
aam
and
pop
enter
scas
gs
stc
(bad)
pop
fs
std
mov
scas
xchg
(bad)
and
test
nop
mov
adc
or
sub
popf
push
sbb
push
pmaddwd
addr16
retf
xor
std
int
or
and
xchg
sbb
leave
cwde
xor
(bad)
sbb
shr
and
mov
fwait
mov
xchg
cmp
mov
gs
cmp
imul
rcl
cmp
jns
sub
loop
push
xor
fidivr
mov
add
and
pop
aas
inc
lods
inc
aam
xchg
or
std
jb
fbld
xor
push
and
jecxz
xchg
adc
mov
std
jb
gs
fs
ins
inc
push
jb
sub
cmp
cmp
add
pop
lea
dec
cmp
push
nop
repz
pop
jo
sub
mov
inc
xor
xor
jmp
xchg
pop
mov
jmp
cmps
out
mov
adc
retf
in
aas
mov
or
lock
lods
enter
or
jae
mov
mov
add
popa
xchg
mov
push
sti
inc
cmp
stc
mov
call
jne
cmp
inc
xor
test
cld
pop
adc
sub
sbb
sbb
inc
jp
les
inc
bnd
aam
and
inc
(bad)
sub
sub
mov
scas
cwde
sub
cld
rcl
push
adc
aaa
cmp
xor
aas
cmc
mov
jmp
stos
cmp
ds
sub
cmp
jns
push
cmp
mov
mov
cmps
cmp
cs
repnz
(bad)
xor
daa
fwait
ret
(bad)
test
jno
mov
sahf
movs
push
adc
mov
fsubrp
xlat
in
dec
push
add
ss
test
fdivr
cmp
pop
pop
push
jge
sub
xor
mov
ja
inc
cmp
stos
sub
adc
pop
inc
leave
lock
sbb
dec
ror
dec
xor
mov
in
push
test
or
cwde
xchg
pop
sub
sbb
test
(bad)
xchg
inc
xor
lods
repz
or
cdq
mov
dec
gs
ud1
cmp
jne
xlat
js
(bad)
aaa
push
mov
mov
test
or
hlt
pop
mov
and
xor
inc
and
and
iret
outs
mov
jle
jmp
or
adc
sbb
inc
jecxz
dec
test
lock
ret
push
iret
ret
mov
cdq
mov
dec
sub
mov
(bad)
int3
into
ss
ja
mov
and
jno
add
pusha
lock
repz
pop
dec
jle
dec
into
ja
ins
adc
in
les
in
xor
push
call
mov
mov
or
ins
jle
add
mov
cmp
in
push
imul
ficomp
movs
or
gs
and
mov
mov
inc
arpl
rol
cwde
dec
mul
out
pop
enter
rcl
lds
sbb
jne
aaa
fcmovb
repnz
mov
scas
rol
lods
cmp
cmp
jmp
outs
mov
call
push
push
rcr
or
sbb
jecxz
js
dec
(bad)
pushf
jmp
retf
mov
mov
mov
sub
add
fisubr
pop
jl
cmp
mov
ja
and
jg
push
ins
push
rcl
in
mov
call
xchg
aas
aas
mov
jmp
add
iret
add
dec
mov
fadd
call
test
lock
scas
cwde
dec
retf
inc
dec
gs
xchg
(bad)
(bad)
sub
outs
rcl
leave
push
mov
aaa
sub
adc
add
out
sar
add
push
cmp
dec
xlat
mov
mov
adc
stos
xlat
(bad)
std
in
xor
mov
xor
fstp
mov
pop
inc
ds
das
in
out
rcl
std
mov
adc
xchg
adc
mov
push
dec
push
aas
adc
jecxz
rcl
push
cmp
dec
add
shr
fisubr
call
xchg
iret
xchg
cmp
pushf
dec
mov
xchg
pusha
inc
gs
jmp
repnz
in
sar
enter
mov
imul
pop
push
les
adc
dec
sbb
jmp
scas
int
cs
div
outs
mov
push
mov
gs
aaa
cmp
or
sub
aam
lahf
stc
(bad)
mov
sub
jg
jo
jecxz
fwait
out
shl
retf
adc
push
ret
adc
int
pushf
push
sub
daa
jmp
dec
ja
icebp
aas
push
test
fstp
out
cmp
jmp
test
test
lahf
(bad)
test
sbb
mov
fcom
or
(bad)
ret
or
popa
inc
mov
cmp
call
pop
mov
(bad)
mov
daa
ja
jne
cmp
add
mov
inc
mov
xor
retf
sub
hlt
lds
push
jg
inc
adc
mov
fmul
jae
add
sub
sbb
icebp
jns
cmp
ficomp
mov
mov
imul
mov
push
push
mov
mov
inc
cli
sbb
ud0
inc
stc
xchg
in
fmul
out
cmp
cmps
imul
ins
jne
pop
repnz
inc
xchg
loop
xchg
mov
test
dec
mov
jmp
sub
mov
push
repnz
push
ins
xchg
mov
(bad)
in
and
dec
je
pop
(bad)
cmp
pop
cmp
(bad)
nop
sub
out
(bad)
lds
mov
mov
or
mov
je
jge
popa
lea
and
js
jno
call
lods
mov
mov
mov
call
cmp
cld
dec
sub
and
xchg
ss
mov
mov
movs
mov
iret
loope
dec
out
dec
pop
jg
cmp
add
or
pop
jno
xchg
leave
aaa
ficom
(bad)
pop
inc
cmp
or
dec
cmps
and
cmp
inc
inc
add
ficom
and
jae
cmps
cmps
mov
aas
cmp
push
mov
and
loop
and
out
sub
cld
shl
stc
lds
and
pop
jg
xor
mov
xchg
or
push
outs
xchg
fild
or
and
xor
jl
adc
js
rol
jmp
test
jl
xchg
pushf
jns
xchg
pop
mov
push
and
or
(bad)
xor
outs
push
push
adc
popa
out
mov
int3
push
enter
sbb
pop
push
mov
push
jmp
inc
dec
cmp
inc
popf
call
stos
xor
ror
fwait
(bad)
jno
out
rcl
cmps
inc
data16
pop
stos
pop
lds
scas
stos
test
jp
shl
push
call
adc
ret
mov
(bad)
mov
mov
sub
leave
mov
inc
repz
(bad)
call
aaa
nop
xchg
ins
pop
cmc
repnz
mov
mov
repz
inc
fcomp
add
mov
add
dec
lods
xor
mov
mov
out
fistp
fldl2e
js
outs
ins
pop
das
dec
into
je
pop
mov
test
sbb
shl
daa
sbb
es
jae
jmp
inc
daa
mov
(bad)
push
not
mov
xchg
dec
fnstcw
inc
inc
loope
mov
int3
in
frstor
add
xor
rcr
repz
cmp
jg
inc
add
cmps
ins
sub
cmp
add
pop
xchg
and
mov
ins
pop
fbld
sbb
jbe
ror
inc
mov
mov
xor
push
movs
stos
in
pop
xchg
sbb
xchg
or
fimul
push
jno
inc
sbb
lods
fcomp
xchg
gs
fistp
ja
push
icebp
in
in
(bad)
shl
pop
popf
dec
xor
lock
cmps
mov
push
mov
stos
cmp
jge
jmp
add
lods
fisttp
hlt
(bad)
cmp
popf
adc
ss
les
repz
cli
test
fild
cld
int3
mov
cld
xlat
fs
arpl
push
xor
scas
retf
pop
mov
push
sti
test
neg
push
mov
xor
add
pop
dec
jmp
rol
daa
pop
xor
hlt
push
pop
in
iret
and
inc
inc
add
out
rcl
cs
sub
data16
stc
sbb
sub
pusha
mov
jl
inc
push
retf
dec
sar
or
(bad)
mov
xor
mov
pop
sti
xchg
cmp
mov
cli
iret
push
push
push
jae
fstp
in
jmp
das
cmp
dec
xchg
xchg
add
scas
sbb
lea
mov
ja
jmp
test
lods
pop
out
add
mov
rcl
sub
lahf
jmp
add
mov
gs
mov
sub
xchg
and
sbb
sbb
mov
movs
scas
into
jns
or
pop
pop
mov
(bad)
fs
mov
test
push
std
sub
ja
xchg
pop
inc
xor
stos
lods
ins
mov
daa
iret
out
mov
(bad)
cmp
push
sub
rcr
sub
jl
repnz
dec
sbb
outs
and
inc
pop
adc
dec
outs
mov
inc
push
inc
dec
sbb
lds
repnz
fistp
scas
add
pusha
xor
or
push
and
lds
or
lea
push
aam
inc
arpl
mov
push
mov
sub
hlt
mov
dec
xor
xchg
ins
xlat
fidivr
adc
cmp
pop
pop
mov
mov
clc
lea
fwait
inc
sub
cdq
and
dec
cs
mov
and
xor
mov
ins
and
xchg
mov
push
daa
xor
inc
add
imul
xchg
shl
shl
add
xchg
inc
mov
xchg
adc
dec
aas
outs
in
js
pop
popa
mov
lea
das
test
sub
jo
shl
or
mov
push
xor
xchg
sbb
fild
data16
(bad)
pop
push
push
sub
push
and
sub
lods
aaa
adc
cli
iret
jns
cmp
fwait
mov
and
pushf
sbb
add
mov
or
leave
shl
sbb
dec
movs
neg
sub
leave
pop
ds
jl
mov
pop
dec
pop
push
cmp
inc
jbe
aas
int3
nop
dec
jmp
mov
fwait
mov
mov
mov
(bad)
in
mov
mov
dec
cdq
jle
inc
sar
mov
les
adc
repnz
into
pop
adc
add
scas
lods
cmp
pop
xor
mov
popa
jno
mov
mov
psrld
mov
loopne
mov
das
pop
fstp
repz
pop
inc
bnd
int
adc
mov
je
and
in
pop
jbe
movs
sub
ins
adc
add
inc
ds
cdq
adc
mov
fnstsw
scas
retf
imul
inc
cmps
xor
add
or
jmp
inc
add
pop
xor
es
in
ror
mov
sub
mov
add
and
dec
(bad)
in
fcmovne
out
sbb
test
repnz
daa
out
cmp
sbb
mov
add
out
jle
dec
xchg
ficomp
sub
gs
xor
push
push
mov
dec
in
sbb
rol
retf
(bad)
(bad)
movs
es
xor
xor
dec
adc
fldlg2
push
xor
fisubr
loopne
aaa
cmps
dec
in
add
pop
xchg
and
and
dec
jmp
jl
dec
pop
adc
mov
xor
lock
sub
dec
mov
jmp
repz
push
in
inc
not
dec
jo
icebp
js
outs
mov
test
stos
dec
stc
ds
mov
add
xchg
xlat
cld
outs
cmp
repnz
icebp
loop
dec
int3
sub
xor
pop
jmp
dec
in
ins
cld
pushf
loopne
scas
out
jle
lgs
add
leave
push
pop
cmp
adc
hlt
ret
retf
lods
and
test
js
mov
sub
sbb
xchg
aad
mov
inc
or
test
mov
imul
dec
or
iret
mov
mov
aaa
lahf
jle
aam
inc
iret
inc
mov
daa
push
ficom
mov
xchg
cmps
call
mul
pop
and
out
inc
jge
sub
push
mov
in
fldcw
mov
sub
inc
or
dec
fxch
or
sub
movs
inc
add
add
rol
xor
in
mov
sub
daa
not
sub
imul
ror
es
push
jo
or
add
lods
sar
lods
in
test
mov
ins
add
in
idiv
inc
jmp
xor
and
sub
movs
fimul
adc
imul
mov
mov
mov
loope
je
mov
cmc
sti
dec
pop
xor
retf
mov
push
jmp
push
sub
cmp
fdivrp
sub
fcmovu
adc
ins
xchg
in
pusha
sub
test
hlt
adc
jp
xchg
cmp
push
and
(bad)
sbb
mov
into
mov
sub
inc
push
dec
fist
sbb
sti
mov
push
sub
and
jmp
xchg
outs
(bad)
cmp
fidiv
dec
add
mov
and
jle
adc
pop
les
push
icebp
cvtdq2ps
in
ins
(bad)
push
fld
push
(bad)
in
ins
lea
jne
inc
add
inc
jecxz
lea
rcl
push
ins
sti
pop
and
cmp
ret
aad
xchg
adc
ds
ds
cli
outs
stos
dec
mov
xchg
and
xchg
fxch
rol
ret
inc
ja
gs
inc
iret
push
mov
in
sub
sub
int3
xor
jmp
sbb
fist
pushf
pop
pusha
add
jae
jne
lock
popf
enter
lahf
hlt
mov
fistp
stos
add
adc
outs
mov
out
jg
mov
xchg
add
cmps
gs
dec
dec
jl
jge
xchg
mov
pusha
popf
add
loopne
repz
sti
adc
and
cli
popa
pop
dec
shl
push
add
xchg
call
sub
jno
sti
(bad)
nop
mov
push
dec
xchg
ficom
inc
js
or
push
sahf
mov
xor
adc
std
push
mov
add
nop
dec
pop
fs
adc
cmp
test
popf
push
or
push
push
dec
cmp
mov
jmp
inc
push
jecxz
mov
fs
jno
push
imul
xchg
cmps
(bad)
and
scas
(bad)
mov
mov
jl
and
push
cmovo
lds
xacquire
sub
call
enter
fdiv
or
icebp
div
xlat
ins
int
std
cmp
shl
fmul
popa
out
jle
loopne
sbb
cmp
pop
or
push
push
ret
jb
aad
add
push
lods
cmp
movs
popf
iret
jbe
ss
cmc
cdq
jo
arpl
xchg
shr
(bad)
les
in
pop
push
das
cmps
jl
mov
xchg
sbb
xchg
or
mov
(bad)
into
dec
mov
cli
xchg
lock
ror
xchg
pop
pop
dec
push
call
fwait
and
add
xor
test
mov
nop
xor
loope
dec
jmp
rcr
shl
pop
sub
inc
sahf
jmp
(bad)
sub
fistp
ds
jbe
outs
cmp
inc
jo
pop
inc
int3
xchg
jnp
inc
fucom
pop
xchg
pop
es
jle
mov
cmp
cmps
fild
adc
sbb
and
mov
inc
call
mov
push
xchg
imul
aaa
cmp
(bad)
mov
lods
push
adc
repnz
push
jle
dec
pop
lods
mov
and
pop
(bad)
aaa
imul
mov
retf
(bad)
mov
lds
push
inc
jns
sbb
jecxz
xchg
or
dec
mov
push
mov
or
mov
sbb
inc
jge
sti
cmps
add
fcom
xchg
lds
fcomi
repnz
and
mov
push
cmp
daa
sbb
mov
ins
scas
sbb
mov
dec
fmulp
pop
fiadd
retf
and
(bad)
ins
(bad)
js
add
pop
pop
jns
cmp
stos
cli
mov
and
ins
sahf
in
xor
gs
das
cdq
mov
dec
imul
imul
sub
fst
push
jo
aaa
or
cdq
jg
retf
adc
pop
int3
ret
ins
and
sbb
push
jp
dec
movs
or
(bad)
(bad)
jmp
rol
and
lds
aam
(bad)
popf
imul
bound
cmp
scas
rol
push
mov
and
jmp
movs
cs
jle
or
lds
les
lods
loope
pop
pop
test
fiadd
mov
jg
imul
fld
lds
add
es
stos
aam
stos
xchg
int
sbb
xor
jae
mov
lahf
fld
sbb
js
leave
add
adc
icebp
push
test
pop
(bad)
jnp
outs
xor
dec
fild
push
fs
and
pop
xchg
aam
and
dec
add
or
xchg
mov
cmp
jae
or
ror
cmp
iret
cmc
cmp
hlt
pushf
pop
dec
inc
inc
jb
jb
sbb
xchg
movs
push
fst
cmc
cdq
jmp
dec
xchg
pop
dec
sbb
cwde
mov
sub
push
lea
popa
mov
ss
mov
out
xchg
(bad)
mov
sub
bound
neg
mov
cmc
dec
pusha
pop
xchg
dec
(bad)
clc
out
aad
push
scas
rcr
sbb
aad
les
pop
jmp
das
shl
dec
data16
xor
xor
and
mov
loope
pushf
pop
sbb
pop
ins
pop
mov
vpaddusb
clc
cmps
lock
sar
out
loop
push
pop
movs
mov
xor
dec
in
mov
xchg
lock
xchg
out
inc
scas
bound
adc
inc
mov
pop
cmp
rol
in
int3
cmp
jecxz
pushf
iret
push
rol
fdivr
iret
cld
ins
pop
in
xchg
in
dec
das
inc
mov
mov
add
sub
movs
es
mov
mov
jb
leave
fsub
movs
xchg
enter
sbb
adc
inc
je
pusha
cmp
jg
push
movs
mov
adc
adc
fbstp
inc
sub
fstp
repnz
xchg
inc
loope
scas
inc
shl
dec
lahf
mov
addr16
xchg
das
test
cwde
adc
mov
jo
pop
xchg
add
add
mov
fld
xchg
push
cs
not
mov
gs
xchg
dec
xlat
cdq
xor
ins
dec
cwde
(bad)
xor
mov
xchg
jnp
ins
mov
outs
cmp
fwait
push
retf
xchg
jecxz
jmp
cmp
ret
inc
mov
in
xor
rol
pop
adc
mov
push
push
popf
adc
sub
adc
jmp
and
rcl
jmp
xchg
retf
inc
aas
or
add
push
lea
popf
push
stc
push
jg
pop
jmp
fmul
push
sbb
(bad)
mov
icebp
lahf
sbb
inc
jnp
in
adc
ret
pop
test
inc
je
jno
sbb
in
pop
push
add
fwait
std
jp
outs
repnz
popf
xor
sub
ret
ss
test
mov
pop
xchg
push
xchg
mov
fstp
mov
loope
sar
sub
sbb
shr
xor
and
aam
pop
mulps
popf
outs
cs
in
mov
repz
add
jp
inc
lock
mov
pop
and
fchs
arpl
mov
add
xor
mov
sbb
jmp
lods
sub
adc
or
jns
sub
ja
xor
mov
or
inc
pop
dec
push
add
sahf
and
mov
ss
loopne
inc
mov
mov
inc
jmp
xchg
dec
in
loope
sbb
(bad)
fwait
stc
mov
rol
test
(bad)
imul
jb
cmp
mov
into
cmp
sbb
popa
cmp
dec
scas
cmp
and
sub
sti
das
xor
int3
lock
sub
pop
in
xchg
sub
mov
mov
mov
ins
sbb
sbb
or
mov
ficomp
in
movs
push
xchg
inc
adc
test
jae
pop
mov
adc
scas
cli
xor
mov
and
xchg
into
scas
mov
add
aas
pusha
add
xchg
and
or
not
nop
sti
and
sub
icebp
cmps
or
and
or
stos
scas
inc
retf
jge
mov
jne
(bad)
pop
gs
retf
ja
jecxz
fisttp
or
jmp
call
push
retf
fmul
cmp
jle
pop
loope
jg
sub
or
loope
in
or
idiv
je
imul
mov
or
xchg
pop
pop
xor
sbb
dec
clc
rcr
data16
inc
popf
dec
jg
popa
inc
sbb
sub
fdiv
xchg
push
call
scas
push
xchg
sub
ret
mov
scas
aaa
inc
loop
mov
mov
xor
std
cmp
data16
xlat
clc
or
mov
xor
sub
in
mov
les
mov
test
frstor
daa
jl
mov
outs
outs
icebp
dec
ror
jmp
cmp
aad
mov
jl
out
not
loope
(bad)
outs
scas
dec
adc
add
pop
in
adc
sub
pushf
or
xor
lock
push
imul
fisubr
rcl
mov
rol
cmp
lods
sbb
adc
dec
in
pop
mov
dec
xor
aad
dec
push
and
and
jne
movs
fidivr
pop
xchg
jae
ror
enter
inc
push
mov
mov
mov
xor
inc
ja
stos
mov
push
adc
sbb
lea
xor
mov
dec
ins
inc
jno
stc
adc
add
mov
pop
push
in
sbb
cmp
pop
in
movs
dec
aad
push
imul
ret
dec
and
pop
loop
sti
jnp
sbb
icebp
aas
jecxz
je
xchg
stc
psrad
mov
xor
adc
rcl
mov
ficomp
xchg
xchg
mov
test
shl
pop
inc
jecxz
dec
(bad)
sub
push
push
sub
fldenv
cmp
inc
out
push
pop
xor
out
mov
or
pushf
pop
and
je
lods
cld
cdq
pop
and
aad
add
aaa
mov
inc
add
stos
xchg
adc
(bad)
leave
pop
(bad)
fdivp
(bad)
mov
fcomp
ja
sbb
mov
jae
shl
inc
test
popf
push
jmp
js
aaa
sbb
mov
xor
mov
sbb
pop
cmps
or
repz
pop
(bad)
fidivr
xchg
mov
stc
cmp
add
fsubr
lods
or
fwait
pop
xchg
pop
(bad)
xchg
dec
adc
dec
push
dec
jle
sub
imul
xchg
cmp
mov
call
push
sub
push
cmp
test
ror
cmps
push
xlat
rcr
add
cmp
call
arpl
jb
test
sbb
es
xchg
pop
outs
cli
dec
fisubr
jno
pop
mov
test
imul
cwde
mov
mov
lods
int3
and
adc
and
jmp
popa
pop
or
xchg
mov
js
jno
mov
jmp
add
movs
cmp
(bad)
in
mov
in
ror
fwait
xchg
xchg
mov
ja
cmp
jbe
add
aaa
ins
test
mov
xchg
mov
dec
repnz
mov
imul
retf
rcl
mov
add
ja
call
jbe
pop
cmp
dec
test
and
mul
inc
call
iret
mov
pop
push
jno
add
into
(bad)
movs
mov
sar
mov
stos
jne
(bad)
ds
adc
jp
stos
sbb
(bad)
xor
sar
cmp
out
movs
mov
add
pop
pop
rcl
xchg
mov
loope
mov
jae
mov
push
and
jecxz
sub
call
aas
push
xchg
je
out
ror
cmp
ret
nop
xchg
sbb
adc
and
pop
pop
lock
pop
add
(bad)
or
or
or
imul
mov
test
xchg
adc
scas
adc
jns
pop
sti
fistp
shl
sbb
xchg
out
icebp
movs
or
fisubr
rcl
cmp
adc
inc
xchg
enter
inc
sub
and
sub
or
je
mov
int
or
inc
pop
inc
(bad)
fimul
mov
mov
push
mov
pop
adc
inc
(bad)
xchg
shr
aas
ret
addr16
xor
mov
cdq
pusha
xor
fisubr
dec
std
fcmovnu
jns
ret
(bad)
aam
cmp
inc
jns
mov
mov
xchg
cmps
pop
aam
mov
lea
mov
pop
lock
imul
cmp
bound
cmps
sbb
inc
xor
and
mov
adc
mul
sbb
stc
pop
sbb
ror
and
adc
jp
and
mov
dec
cmps
repnz
xor
test
push
push
std
push
bound
test
cmps
out
pop
inc
lods
or
dec
dec
loopne
in
lods
into
or
mov
jbe
ins
mov
out
int3
addr16
bound
fldenv
and
loopne
cmp
popf
xchg
mov
push
jle
xchg
aas
sub
or
div
mov
ret
push
jns
mov
cmp
arpl
push
popf
aaa
leave
xchg
rol
and
mov
jno
xor
mov
xchg
imul
repz
lods
test
xchg
jo
xchg
inc
xchg
adc
sbb
push
loopne
inc
push
sahf
pop
cmps
clc
mov
aaa
mov
jbe
idiv
call
xchg
ficom
aad
cmp
jmp
outs
mov
sub
inc
push
(bad)
stos
arpl
xchg
add
dec
inc
sti
in
add
and
pop
mov
cmp
scas
add
ins
(bad)
mov
push
loope
xor
mov
test
or
dec
xchg
out
add
inc
cmps
daa
popa
into
test
jnp
movs
mov
test
push
xor
fsubr
xor
cmp
mov
cmp
mov
cld
std
or
mov
push
daa
pop
push
xchg
jbe
cld
xchg
mov
or
jmp
push
sti
or
out
js
nop
arpl
inc
(bad)
fisubr
outs
inc
inc
jbe
retf
ror
pop
(bad)
imul
scas
mov
and
push
call
sbb
loop
push
add
nop
and
push
adc
push
sbb
sbb
mov
nop
mov
sub
mov
push
pusha
dec
sbb
leave
xchg
loope
add
sub
sub
out
and
ja
inc
test
mov
push
add
gs
outs
mov
xor
mov
popf
or
inc
repz
test
sub
push
sbb
pop
sbb
call
pop
aaa
sub
pusha
add
imul
sbb
push
fcom
cmp
fiadd
lods
add
ja
xchg
repz
test
call
(bad)
scas
mov
aas
outs
jl
rol
cmp
ficomp
add
(bad)
cmp
clc
shr
andnps
sti
sub
loope
xor
loopne
loope
frstor
fidiv
mov
ins
push
push
shr
inc
loop
inc
sub
mov
scas
add
jge
out
adc
mov
movs
mov
sub
push
push
pop
in
mov
pop
add
mov
mov
mov
fidivr
mov
jno
xlat
movs
adc
out
sub
and
je
xchg
into
inc
test
fisttp
sub
pop
jge
jae
jle
mov
adc
loop
je
loop
sub
fcom
jle
pop
mov
test
sub
(bad)
push
scas
out
pop
stc
addr16
add
movs
clc
sbb
jmp
inc
test
fld
aas
ret
inc
imul
cmps
inc
fwait
add
jo
mov
add
xor
sahf
and
call
dec
lds
xor
adc
cmp
mov
idiv
aas
out
enter
pop
pop
fdiv
xchg
mov
(bad)
mov
sti
inc
adc
idiv
pop
dec
push
mov
jge
int
repnz
int
mov
daa
and
test
mov
mov
stos
or
mov
add
test
ror
lods
cs
xchg
xchg
imul
jbe
and
or
and
pop
mov
cmp
pop
push
inc
idiv
out
sar
mov
xchg
(bad)
jnp
xchg
scas
jl
push
inc
stc
ss
xchg
mov
cdq
inc
pop
outs
mov
sahf
mov
xchg
sub
mov
lock
xor
pop
shl
xchg
outs
mov
ss
ja
shr
rcl
jbe
lahf
mov
icebp
dec
dec
or
sbb
add
scas
mov
rcr
aas
icebp
ins
bound
out
mov
js
out
sub
fcmove
fisub
in
clc
inc
adc
sbb
repnz
add
pop
js
pop
xlat
add
adc
leave
(bad)
iret
retf
jb
or
mov
sub
pop
out
sub
pop
cld
or
push
int3
enter
loope
movs
sub
sahf
or
cmc
or
mov
sbb
inc
push
cld
aad
retf
mov
test
sbb
push
pop
cmp
out
outs
mov
test
sbb
popa
mov
sbb
jp
in
je
addr16
adc
mov
dec
lahf
mov
fisub
xchg
xchg
cmp
xchg
call
gs
repnz
push
fcomp
pop
pusha
adc
push
loopne
dec
(bad)
adc
pop
les
test
push
popa
sub
mov
imul
or
inc
xchg
test
push
jns
mul
push
sub
les
retf
add
dec
es
sbb
jmp
pusha
ds
push
mov
pop
loope
or
and
dec
jne
cmp
mov
cmps
push
dec
xlat
fwait
pop
fs
into
and
inc
push
sbb
xor
and
pop
push
aad
xor
add
stc
bound
sub
(bad)
call
mov
lock
mov
xchg
push
imul
jo
lea
or
push
in
repnz
or
xor
mov
jmp
lock
lahf
add
adc
ja
jp
sbb
inc
add
xchg
sub
retf
sub
pop
in
cmc
or
popf
loopne
cli
pop
mov
xchg
inc
fld
add
jnp
imul
dec
es
mov
cmp
test
xchg
fdivp
ja
sbb
ret
nop
jmp
cmc
or
nop
jecxz
in
or
cmps
out
xor
push
scas
in
add
dec
retf
int3
inc
fbstp
(bad)
cmp
outs
repnz
adc
call
stos
jp
sub
mov
inc
pop
sub
push
call
sub
mov
jb
mov
inc
std
mov
cld
push
xchg
mov
mov
or
outs
adc
cld
ins
sub
scas
scas
rcr
inc
pop
dec
inc
sub
pop
hlt
inc
sub
add
dec
lods
jae
and
test
sahf
cmp
dec
jle
in
push
mov
mov
mov
or
stos
icebp
imul
mov
out
dec
push
pusha
dec
iret
aas
call
sti
(bad)
cmp
mov
adc
push
stc
(bad)
add
ja
push
fimul
jb
mov
cmc
jecxz
nop
call
or
(bad)
je
pop
cmp
int3
repz
sar
ins
sub
xor
jge
push
jl
push
mov
jg
(bad)
push
xor
mov
jmp
sbb
sbb
pusha
adc
sub
ret
push
clc
cmp
(bad)
mov
or
mov
dec
out
iret
add
sbb
mov
and
sar
cmp
fist
mov
mov
add
jo
test
lds
mov
sub
sub
pop
movs
mov
fild
aam
add
(bad)
ins
mov
sbb
int
sbb
cmp
inc
in
pop
push
and
lahf
outs
cli
es
in
inc
xor
inc
fmul
repnz
outs
sbb
add
jge
fdivr
std
out
dec
pop
pop
mov
pop
das
(bad)
push
adc
scas
outs
xor
ret
popf
ds
xor
inc
adc
cli
add
sbb
and
rcr
adc
adc
add
inc
inc
jmp
mov
addr16
jg
in
dec
cmps
repz
(bad)
mov
js
inc
cmp
inc
add
sbb
scas
daa
jle
fwait
xchg
dec
call
push
dec
mov
retf
loop
leave
ret
mov
repnz
pop
clc
inc
jno
pop
cmp
rcl
bound
add
aad
test
xchg
mov
out
or
(bad)
bound
ret
clc
leave
push
mov
dec
xchg
(bad)
in
sbb
out
in
add
out
es
fdivr
fstp
add
scas
(bad)
cmp
inc
ror
push
push
xlat
and
mov
je
dec
mov
sbb
je
mov
xchg
int
in
fisttp
push
scas
ret
or
sbb
xor
je
xchg
push
cmp
mov
cmp
in
mov
xchg
sub
cmp
inc
loope
fwait
ins
aaa
pushf
pop
xchg
push
pop
mov
jae
mov
test
pop
pop
ret
not
scas
xor
xchg
mov
mov
mov
outs
add
popf
pop
xor
xor
ins
mov
jne
scas
dec
inc
ds
or
cmp
and
dec
mov
arpl
out
inc
dec
mov
cmp
xor
mov
cmps
and
cs
jo
mov
icebp
call
sar
xchg
imul
stos
add
(bad)
push
popf
pop
in
jo
jns
shl
dec
js
fdiv
scas
cdq
in
(bad)
(bad)
aas
test
jmp
aam
std
push
pop
mov
add
jecxz
aas
sahf
jne
ficomp
adc
xor
call
sbb
jge
cld
fs
pop
icebp
jmp
add
std
mov
pop
and
jle
lea
adc
inc
jecxz
aam
(bad)
sbb
shr
repnz
mov
movs
stc
sub
add
cmp
dec
mov
sbb
ficomp
or
test
pop
rcl
jmp
push
fwait
cdq
inc
lods
cmps
pop
outs
jp
repz
ret
dec
je
mov
in
sub
pop
mov
call
(bad)
mov
es
imul
jmp
popf
fcom
mov
loope
shl
pop
retf
vcmpsd
(bad)
(bad)
out
dec
out
hlt
cmps
mov
cwde
(bad)
out
sub
aas
pop
sbb
sahf
lahf
sbb
fdiv
cmp
inc
imul
sbb
icebp
adc
add
jp
fbld
jnp
mov
ds
into
addr16
cs
or
fimul
clc
sbb
inc
pop
cmp
push
imul
not
push
mov
jp
ret
add
mov
pop
pop
retf
mov
popa
xchg
mov
mov
push
dec
jge
loop
movs
or
cli
mov
inc
mov
mov
jge
in
bound
mov
int
add
fst
in
cld
setge
push
or
shl
data16
cmps
(bad)
in
jae
cwde
mov
call
pop
xchg
inc
sbb
sar
mov
nop
jmp
rcl
inc
adc
les
in
fadd
jo
retf
push
mov
sub
pop
sub
push
mov
popf
loop
bound
scas
loop
repnz
std
sub
outs
cs
sbb
xor
xchg
inc
stos
int
cli
popa
stc
movs
mov
dec
rcr
arpl
pop
stc
bound
neg
pop
or
call
icebp
inc
jne
pop
fcmovb
in
add
dec
sar
mov
or
pusha
jne
clc
inc
push
dec
hlt
sahf
xor
xor
push
adc
aaa
mov
std
cmp
jne
shl
adc
lahf
mov
pop
mov
mov
je
mov
jle
ror
adc
int
test
daa
push
mov
push
mov
std
popf
xor
sbb
inc
data16
dec
sbb
sbb
arpl
inc
dec
dec
mov
call
daa
xlat
adc
fs
ins
mov
fwait
rcl
rol
mov
mov
mov
nop
int3
pop
test
push
inc
push
push
sub
ror
cld
fs
leave
repnz
ror
jno
jo
rol
mov
mov
jns
es
fdivr
fiadd
inc
fbstp
test
dec
sti
push
sub
push
xor
push
cmp
in
inc
xchg
xchg
xchg
mov
or
push
mov
mov
or
retf
ss
fst
push
dec
jecxz
cdq
sahf
push
cmp
packssdw
fst
cmp
dec
les
or
mov
(bad)
je
fcom
add
imul
(bad)
push
lods
dec
loopne
mov
shr
fcmovne
jne
out
cdq
pop
or
fucomi
dec
cld
popa
inc
js
cwde
lock
mov
out
xchg
and
movs
sub
cli
hlt
(bad)
jmp
sub
xchg
jmp
add
sub
cmp
enter
jmp
cdq
cmp
imul
(bad)
imul
cdq
(bad)
add
add
adc
xchg
arpl
call
mov
(bad)
jle
gs
les
in
mov
push
push
add
pop
inc
fisub
call
pusha
fistp
mov
mov
dec
ret
loop
call
xchg
adc
push
lods
out
(bad)
push
arpl
lods
(bad)
mov
mov
stos
pop
inc
cmp
mov
mov
sti
fcom
adc
(bad)
ins
pop
or
aam
in
xor
js
jle
es
arpl
sti
push
xor
idiv
pop
loope
sub
rcr
repnz
push
mov
sub
lods
and
addr16
sub
mov
aas
xor
movs
push
ret
add
push
cmp
xchg
mov
adc
ja
loopne
rcl
out
(bad)
dec
cmp
mov
call
leave
dec
pop
add
mov
mov
inc
jbe
lahf
push
daa
cmp
mov
dec
xchg
nop
inc
jo
pop
aaa
jnp
sub
movntdq
mov
dec
mov
and
dec
pop
cs
test
je
jae
add
and
pop
(bad)
jmp
pushf
sub
repnz
adc
jbe
xor
mov
xchg
lahf
cmc
mov
cdq
loop
pop
sbb
mov
xchg
int3
cdq
mov
pusha
es
loop
rcl
(bad)
jne
push
ret
pop
fcom
dec
dec
jae
push
or
sbb
inc
cmp
mov
fsubr
xchg
mov
pminsw
mov
stos
retf
adc
out
std
or
outs
movsx
mov
call
sbb
dec
mov
(bad)
enter
pop
xchg
sar
push
mov
cmc
aad
mul
cli
mov
jmp
sbb
hlt
dec
and
jge
shr
mov
mov
into
adc
push
mov
dec
push
dec
or
cdq
shl
fs
es
jb
xchg
mov
sub
out
shl
mov
call
js
repnz
push
gs
ss
inc
sub
test
lock
je
not
shl
ds
xchg
pop
and
sub
div
mov
sub
xchg
retf
xor
movs
cmc
mov
cs
jno
imul
xor
or
or
mov
daa
mov
xchg
add
mov
cmp
pop
xchg
jo
loopne
leave
lods
cli
icebp
push
jb
mov
(bad)
mov
mov
and
cmps
lock
rol
ds
jle
cs
mov
mov
sar
sahf
or
lods
cmp
mov
popa
push
(bad)
imul
mov
in
push
mov
movs
cwde
lods
mov
sub
mov
je
jmp
cli
fistp
enter
add
repnz
and
cmp
or
add
out
mov
push
inc
dec
cs
ret
mov
mov
pushf
outs
sti
mov
sub
gs
xlat
(bad)
fcom
dec
outs
sbb
mov
sub
out
push
in
shl
les
into
pop
iret
and
xchg
call
or
sub
or
push
mov
sbb
in
or
ret
aaa
cmp
and
rcr
cmps
scas
xor
outs
push
test
in
mov
es
stc
js
jmp
push
sbb
push
dec
cmp
ret
cmp
xlat
int3
inc
mov
dec
retf
call
adc
cli
aad
je
xchg
and
inc
jl
(bad)
mov
push
and
mov
pop
pop
in
ins
nop
clc
imul
scas
enter
movs
xor
fwait
pusha
push
xchg
sub
xchg
test
lock
sub
shl
mov
pop
inc
push
pop
adc
in
call
ins
loopne
adc
fimul
outs
cdq
ds
not
das
cmps
out
hlt
jl
gs
ror
into
lds
jp
sub
xchg
pop
test
retf
ror
loop
jnp
inc
xor
fsub
jmp
arpl
add
addr16
jae
mov
jbe
in
sti
pushf
dec
icebp
js
movs
dec
imul
add
mov
cdq
add
ficomp
sbb
sub
dec
mov
or
test
push
xlat
into
cmc
push
aad
push
mov
add
or
stc
out
or
xchg
and
mov
(bad)
fbstp
idiv
dec
fsub
jb
lods
jmp
jmp
pop
aas
fmul
fstp
pop
mov
add
dec
test
ds
sbb
xor
enter
shr
sti
sbb
stos
xchg
mov
adc
ins
ins
aad
mov
clc
push
stos
pop
popf
jge
popa
sti
rol
popa
and
push
dec
jno
lds
sbb
in
movs
sub
retf
test
xchg
mov
dec
mov
clc
jl
xor
adc
and
outs
cmp
aad
mov
or
xor
cmps
lds
pop
sbb
jmp
mov
adc
add
lock
sbb
sahf
mov
push
sub
pop
mov
loopne
add
in
mov
rcl
cwde
stos
mov
sbb
test
xchg
xor
fcomi
pop
loop
scas
dec
loopne
sbb
popf
cdq
xchg
xchg
dec
jo
stos
pop
xlat
mov
std
scas
ss
repnz
dec
(bad)
out
mov
xchg
les
shr
sbb
mov
jb
shl
and
mov
or
add
inc
and
cmps
mov
push
adc
sbb
xchg
push
mov
jecxz
pop
cdq
cmp
push
stos
add
pop
lds
xchg
cmps
dec
out
lock
fwait
cmp
loope
cmps
add
xchg
pop
mov
and
sbb
inc
lea
cmp
push
sbb
xor
lock
imul
mov
jno
push
sub
mov
inc
iret
les
popf
bound
movs
std
movs
mov
xor
adc
repnz
sbb
int3
out
cmc
xor
jns
movs
cmps
outs
cli
inc
idiv
dec
dec
loop
retf
jmp
or
(bad)
fwait
adc
push
push
(bad)
sbb
dec
dec
mov
fisttp
data16
adc
or
mov
bound
stos
pusha
jge
add
cmp
pop
push
out
movs
push
push
ror
repz
fdivp
add
adc
scas
pop
mov
das
pop
and
or
pop
jnp
ret
dec
push
add
xor
add
rcl
pop
ja
fist
mov
out
inc
or
jno
cdq
sar
jecxz
push
inc
xchg
(bad)
push
push
imul
retf
sar
cmp
and
or
sbb
aad
xchg
adc
sub
mov
xchg
push
sbb
retf
mov
rcr
stc
mov
push
aaa
stc
sub
mov
es
fisttp
es
mov
mov
out
lds
cs
inc
jp
retf
adc
mov
mov
sub
je
inc
lods
std
arpl
mov
mov
stos
jb
popf
leave
pop
pusha
dec
mov
jl
jecxz
inc
or
mov
sti
or
shl
push
retf
movs
and
xor
iret
pop
ds
in
(bad)
rcl
cli
out
scas
movs
and
cmp
sub
lods
and
xchg
fsub
fcmovbe
cwde
fild
xchg
data16
mov
retf
jb
add
add
mov
repnz
stos
jnp
(bad)
sbb
lods
or
push
fisttp
sbb
icebp
push
call
push
dec
enter
cmps
mov
jg
stos
adc
out
clc
cmp
jmp
inc
sbb
icebp
(bad)
retf
sub
les
(bad)
iret
adc
push
cmp
mov
mov
cwde
rol
imul
icebp
scas
and
xchg
or
fmul
push
aaa
test
call
push
mov
sub
(bad)
rcr
adc
enter
sahf
adc
fst
xor
cmp
jge
cmp
mov
repnz
jne
inc
std
(bad)
jmp
jae
lods
and
mov
repnz
leave
push
test
add
sbb
dec
or
enter
jmp
test
repz
ror
push
les
adc
sbb
xchg
movs
hlt
arpl
fidiv
enter
mov
shl
jecxz
cmp
movs
cmps
(bad)
imul
push
jno
jge
dec
pop
pop
ja
mov
jae
addr16
retf
daa
jg
mov
xchg
test
jnp
fs
dec
gs
dec
sbb
je
cs
mov
(bad)
gs
jmp
push
sbb
jg
cmp
loopne
hlt
mov
test
movs
jg
jo
aad
(bad)
out
nop
inc
inc
sub
adc
push
xchg
pop
cld
or
stos
(bad)
ret
int
out
psrld
inc
xor
(bad)
pop
outs
adc
push
add
sbb
xor
cmp
lods
push
scas
jb
cmp
aam
int3
xchg
nop
mov
xchg
inc
jno
pop
retf
sbb
sub
add
out
dec
xchg
cli
test
out
cwde
mov
data16
mov
mov
mov
adc
push
add
pop
ror
aad
out
jecxz
sub
inc
sbb
xor
jp
mov
mov
je
and
outs
xchg
mov
sbb
and
es
push
xor
jns
imul
in
(bad)
mov
sbb
mov
lds
sub
add
mov
enter
sar
mov
jno
popa
jbe
repnz
adc
aad
pop
jle
mov
push
push
and
call
mov
jnp
stc
int3
test
ficom
in
jne
add
push
iret
xchg
aam
sar
or
xchg
cmps
fcmovu
add
mov
sbb
leave
into
leave
dec
pop
mov
push
push
pop
loop
les
(bad)
lods
push
out
fidiv
mov
sbb
imul
cmp
inc
push
imul
sub
test
call
in
mov
and
add
cmp
mov
push
(bad)
pop
pop
shr
or
loopne
dec
adc
cld
popf
loopne
mov
repz
sub
cmp
and
xor
inc
jge
aaa
inc
arpl
mov
test
xchg
or
mov
int3
fdivr
cwde
sahf
movs
js
mov
aam
call
ja
ins
inc
movs
push
pop
mov
mov
mov
pop
xor
xor
aam
ss
inc
sub
enter
mov
sub
aad
(bad)
and
scas
cmp
fcom
dec
adc
retf
sbb
in
jge
push
mov
and
push
push
and
inc
jno
jnp
inc
sbb
mov
(bad)
lods
adc
push
out
inc
test
iret
in
jb
xor
push
sbb
xor
dec
imul
stc
in
mov
ss
adc
gs
push
(bad)
out
test
push
stos
pop
push
out
in
mov
iret
push
jle
mov
xlat
cli
push
lahf
jg
mov
bound
cmp
fcomip
mov
fs
mov
cld
out
iret
ror
sub
lods
clc
sbb
jo
sbb
dec
inc
adc
retf
lods
scas
je
adc
bound
clc
pop
mov
pop
pop
mov
adc
push
adc
push
pop
(bad)
das
pcmpeqw
test
pop
or
sahf
in
mov
add
movs
and
pusha
mov
xor
rcl
cmovnp
int
repz
push
bound
aaa
into
dec
scas
cmp
mov
dec
xchg
xchg
test
dec
dec
(bad)
mov
cmp
adc
mov
mov
sub
inc
sub
sub
xor
cmp
test
and
call
iret
out
imul
popf
cmp
sub
xor
popf
mov
xor
and
icebp
ss
push
sbb
pop
jmp
xor
rcr
arpl
mov
mov
cmc
and
jmp
inc
sub
dec
xor
stos
sbb
push
(bad)
aad
jg
xchg
pop
pop
lock
std
or
xchg
push
fwait
cmp
test
leave
push
push
mov
aad
sbb
or
lock
add
fwait
push
dec
push
out
pop
dec
mov
mov
lods
mov
ret
and
cwde
ins
xchg
mov
lds
mov
dec
xchg
or
lea
jge
gs
nop
and
test
mov
and
inc
cmps
mov
ins
push
adc
aad
add
fild
into
xchg
add
or
sub
test
and
push
sahf
dec
adc
lods
stos
repnz
ins
fwait
mov
push
sti
jecxz
mov
xchg
jnp
xchg
or
or
push
ror
lock
jo
inc
jae
mov
mov
xchg
adc
lods
xchg
and
stc
mov
int
(bad)
out
xchg
ds
pop
ins
(bad)
push
bound
mov
dec
mov
mov
in
dec
fcmovu
mov
or
into
push
mov
or
sub
dec
nop
in
sti
aaa
ins
sub
cdq
in
popf
and
xlat
outs
retf
cmp
cdq
or
fidivr
jo
inc
jge
xor
pop
adc
fs
mov
pop
lea
lahf
cmps
pop
or
mov
loope
fisub
(bad)
in
(bad)
ds
add
pop
or
int
mov
mov
int
aaa
inc
movs
sbb
mov
mov
cli
and
ins
lods
inc
pop
adc
xchg
push
or
xor
jne
popa
pushf
jmp
stos
cmc
ret
jecxz
cmps
cmp
fwait
(bad)
cmp
js
inc
cdq
lods
cmp
inc
fldenv
pop
pop
mov
push
and
and
mov
xchg
out
pusha
xor
fild
pop
or
push
or
popf
push
popa
popf
rcr
xor
sub
pop
xor
inc
loopne
xchg
cs
mov
ja
jmp
mov
cmp
adc
imul
pop
push
int
sahf
xchg
cmc
xchg
mov
fld
adc
lahf
shl
imul
adc
in
in
xor
jno
std
pop
loope
cmp
push
retf
adc
daa
out
call
jp
sbb
and
mov
fst
dec
daa
mov
imul
mov
xchg
xor
sub
mov
(bad)
fst
jge
cmps
xchg
das
cmp
or
test
or
push
ret
sbb
aam
cmps
out
mov
mov
dec
mov
inc
mov
sub
ins
jmp
(bad)
pop
sbb
rol
xor
pop
loop
pop
lods
jnp
stc
jne
push
out
mov
addr16
xor
push
pop
pop
adc
aad
jmp
iret
(bad)
dec
or
jnp
cmp
inc
cs
repz
rol
jl
add
xor
xchg
jg
or
int3
test
hlt
mov
mov
inc
mov
sar
jmp
sbb
xchg
cmp
add
cmp
rcr
inc
daa
mov
or
adc
dec
inc
fnstcw
sbb
loopne
pop
and
fdivr
ror
xor
adc
cmp
pop
mov
mov
ins
xchg
lds
movs
addr16
jae
cmp
mov
data16
sbb
pop
or
push
add
imul
adc
push
mov
mov
dec
out
arpl
xlat
cmp
mov
fadd
(bad)
stc
dec
gs
fld
xchg
(bad)
mov
jns
ficomp
mov
in
jle
push
mov
xlat
sub
sbb
pop
iret
and
out
cmc
pop
in
gs
je
js
adc
xlat
es
jl
add
mov
and
push
push
push
xor
push
adc
jne
xor
push
mov
imul
xor
adc
cld
cmp
cmp
and
movs
pop
mov
movs
sbb
pop
cmp
adc
js
sar
lods
pop
or
repnz
or
hlt
add
pop
mov
adc
fwait
xor
jmp
fdivr
mov
mov
call
mov
fcom
jecxz
arpl
stc
jecxz
or
push
dec
(bad)
ja
aam
pop
jle
daa
imul
ficomp
pop
mov
jno
add
mov
mov
mov
fwait
mov
sar
je
fstp
dec
sti
add
call
mov
push
adc
mov
add
push
adc
cdq
push
rcr
ret
push
or
cmp
or
sbb
(bad)
cmp
mov
mov
test
out
ins
cmp
fs
mov
or
rcr
icebp
push
aas
pop
gs
sbb
xor
jbe
test
dec
mov
test
or
mov
js
call
icebp
dec
loopne
jne
fnstsw
inc
arpl
lds
fidiv
mov
icebp
jecxz
leave
cmp
jmp
in
add
jbe
jbe
in
loopne
dec
mov
push
out
sti
xchg
mov
xchg
imul
dec
dec
and
inc
std
clc
sub
mov
rcl
mov
test
add
mul
loopne
dec
popa
es
and
clc
adc
sbb
mov
jg
std
jp
push
in
cmp
jp
pop
dec
fcom
rcr
out
push
dec
into
sbb
ja
fisttp
inc
cmp
test
sbb
xor
mov
jne
movs
cmc
outs
cmp
mov
hlt
sbb
mov
mov
mov
jb
in
mov
mov
adc
xchg
les
in
cmp
jb
add
and
pop
pop
cmps
and
sbb
sbb
fdivr
xor
out
sub
adc
push
jb
sub
cmps
adc
cs
leave
stos
test
mov
in
stos
call
adc
and
jnp
push
xor
outs
or
sbb
push
cmp
das
rcl
sbb
arpl
jnp
sahf
adc
or
push
sbb
leave
lds
inc
sahf
out
jbe
fld
sub
cmp
push
outs
mov
je
sub
rcl
add
aam
outs
sub
ds
and
mov
ficom
mov
cmp
pop
inc
inc
or
and
in
inc
sbb
jae
xchg
add
mov
or
sub
inc
imul
mov
cdq
and
inc
inc
jnp
fs
sub
mov
int
pusha
das
inc
clc
mov
adc
or
jp
pushf
push
call
leave
js
dec
cdq
imul
jne
dec
fidiv
pop
loope
mov
xor
leave
adc
jne
enter
repz
xchg
xchg
adc
fbld
lock
xchg
pop
std
mov
aaa
int
es
and
cwde
dec
inc
mov
imul
enter
retf
sub
adc
lock
or
std
cmps
test
or
cmp
sahf
pusha
sahf
fnstsw
jmp
push
jb
leave
inc
and
fnstsw
sub
lods
bound
call
in
fldcw
add
push
jmp
xchg
pop
es
and
std
lea
pusha
mov
xchg
jl
inc
mov
loop
rcr
jg
and
stos
pop
inc
fucomi
or
cmps
pop
sar
iret
jae
xor
jbe
enter
xor
cmc
fs
addr16
dec
ret
and
or
iret
pop
mov
pop
pop
lahf
lock
addr16
cmp
lods
mov
imul
push
pop
ror
mov
enter
cli
push
sub
data16
mov
outs
xchg
pushf
or
or
std
icebp
inc
loopne
pop
pusha
mov
adc
push
sbb
mov
cli
cld
mov
xchg
cmc
jl
ins
mov
xlat
popa
(bad)
scas
retf
nop
bound
dec
jo
sub
cmps
adc
inc
sbb
gs
mov
push
movs
fiadd
mov
jae
ins
retf
in
outs
mov
or
loope
pop
sub
mov
ficomp
inc
mov
or
mov
movs
leave
loop
jbe
and
bound
call
xchg
pop
aaa
mov
cld
jmp
jl
ja
mov
jmp
imul
bound
lahf
dec
imul
mov
or
mov
push
pop
add
test
mov
(bad)
rol
aad
les
test
jg
mov
pop
sbb
jno
mov
add
outs
and
iret
cmp
loope
(bad)
loope
jns
pop
xchg
sub
pcmpgtw
push
mov
sub
push
jmp
sub
ror
mov
sub
popf
loope
mov
ins
cmp
jmp
jge
outs
jecxz
mov
aad
mov
ret
mov
mov
dec
sbb
and
ret
out
cmp
mov
pushf
rol
mov
idiv
loope
dec
ins
lods
xor
movs
stc
pop
in
sub
sub
(bad)
inc
das
pop
(bad)
jbe
xlat
shr
xchg
inc
fidivr
gs
aad
add
add
inc
mov
je
mov
xor
movs
pop
xchg
(bad)
xor
test
loopne
push
inc
stc
jg
push
push
ror
cmp
xchg
popf
sub
inc
mov
ror
sbb
push
aas
and
adc
js
cmp
sti
stc
sbb
mov
or
call
test
push
sbb
xchg
idiv
xchg
mov
(bad)
call
shl
adc
lea
test
sbb
xchg
outs
and
push
jl
jmp
sbb
cmp
push
ins
and
jecxz
pop
hlt
neg
std
or
or
and
rcl
jg
mov
mov
adc
mov
or
xchg
inc
fcmove
call
mov
enter
test
cmps
inc
mov
push
nop
lea
jmp
adc
int3
mov
add
jae
add
ins
pop
in
mov
pusha
call
fptan
js
pop
jmp
rcl
pop
adc
mov
sbb
dec
push
mov
ins
and
loopne
stc
(bad)
inc
cmp
iret
outs
xor
mov
sub
cwde
je
bound
aaa
pop
aaa
inc
cmc
jl
push
mov
(bad)
lock
or
pusha
pop
cmp
es
inc
xor
pop
daa
das
stos
pop
leave
push
(bad)
ret
cli
mov
add
cmp
popa
aaa
xor
mov
dec
sti
push
repnz
pop
mov
mov
je
clc
mov
add
push
mov
imul
mov
movs
sbb
stc
cmc
fldcw
jmp
int
pop
out
sub
popf
add
imul
mov
jecxz
jno
div
(bad)
jecxz
cmp
fadd
cs
jmp
in
xor
or
lds
and
shr
int
jns
cmp
das
das
scas
mov
fcomp
(bad)
movs
(bad)
fmul
repnz
mov
jns
gs
in
mov
sub
(bad)
les
inc
inc
sub
cmp
shr
cmps
sbb
jo
push
adc
je
jmp
add
xchg
jmp
movs
pop
and
and
inc
xor
je
mov
inc
cmp
sti
dec
lock
pop
sub
loop
ficomp
(bad)
aas
push
xchg
in
jmp
imul
xchg
dec
pop
adc
add
es
ins
mov
push
dec
out
test
mov
out
mov
inc
and
add
mul
jae
dec
(bad)
test
mov
or
mov
mov
cwde
pop
retf
jmp
jnp
leave
ffreep
in
sub
test
cmp
sbb
push
mov
(bad)
and
xlat
sbb
pop
pop
lea
fmul
mov
sbb
or
ins
xor
std
mov
pop
pop
mov
jbe
sbb
add
mov
test
xor
jae
jns
popa
jecxz
inc
pop
out
adc
inc
mov
adc
imul
lahf
stos
xor
nop
ret
cmp
add
pop
mov
out
dec
fwait
mov
fidivr
iret
sbb
adc
out
cmp
mov
mov
sbb
pop
and
pop
xor
ins
(bad)
mov
mov
xor
inc
inc
(bad)
inc
lea
jnp
inc
call
push
jnp
mov
out
xor
(bad)
jg
sbb
cld
push
ins
arpl
les
xor
nop
pop
jns
imul
(bad)
cs
and
js
stos
cwde
(bad)
cmp
nop
idiv
mov
xchg
cdq
push
fld
or
and
in
mov
inc
outs
mov
ficom
outs
scas
dec
or
sbb
jmp
daa
push
es
cdq
mov
pop
imul
imul
addr16
fs
push
cmc
in
rcl
fwait
imul
pop
sbb
cmp
xor
xchg
adc
inc
sti
jmp
dec
and
sahf
int3
jnp
sub
arpl
clc
adc
dec
sub
mov
add
sbb
push
sbb
scas
nop
push
mov
sbb
mov
loopne
xor
mov
cmps
mov
or
outs
mov
sbb
jno
dec
rcr
dec
jge
mov
push
mov
mov
inc
sahf
sub
dec
or
fild
fidiv
test
or
push
and
nop
adc
sbb
push
push
dec
cdq
test
sub
or
jmp
push
jbe
mov
pop
cs
add
fwait
xlat
into
mov
xchg
cwde
mov
scas
mov
jmp
dec
es
in
pushf
cs
shr
lock
(bad)
sub
ror
add
adc
sub
out
jnp
pop
pop
jnp
ins
xor
fld
mov
sbb
jg
jl
xor
cli
cmp
lds
mov
into
dec
aas
xor
inc
je
jnp
cmp
or
adc
mov
add
and
bound
sub
adc
xchg
cld
mov
jo
mov
jle
mov
aam
sti
pushw
pusha
test
adc
out
dec
push
xlat
cmps
push
sbb
cld
xchg
(bad)
xchg
pop
add
dec
ja
xchg
shl
mov
mov
mov
xor
fnstsw
and
fdiv
push
xor
sbb
sub
pop
mov
mov
pop
inc
lods
clc
(bad)
jl
(bad)
call
sub
push
sbb
mov
push
add
ret
pop
retf
fbld
and
in
jl
sub
adc
popf
dec
jns
out
ret
lods
ret
push
(bad)
into
cmps
mov
rcr
imul
xchg
je
or
in
in
movs
dec
inc
mov
sbb
pop
shl
fwait
leave
shl
loopne
and
inc
aad
arpl
jl
adc
sub
lahf
sbb
iret
adc
retf
js
into
movs
rcl
mov
mov
jg
dec
std
out
in
ss
cmp
inc
fistp
stc
sahf
push
sub
shr
or
in
call
dec
push
pushf
add
mov
adc
cmp
and
shl
or
push
das
cmp
lahf
or
fwait
jo
xchg
(bad)
jne
mov
outs
mov
outs
int
movs
pop
pop
inc
in
aaa
dec
sbb
call
push
adc
xchg
jge
test
xor
lahf
pop
test
sub
and
imul
pop
repnz
mov
clc
xchg
repnz
retf
pop
sbb
mov
inc
ss
loope
outs
test
mov
adc
xor
sbb
pandn
sub
push
mov
lods
sbb
idiv
cld
and
cmp
add
fdivr
ficomp
pop
jno
xchg
nop
(bad)
adc
add
cmp
adc
(bad)
sti
mov
mov
arpl
mov
fstp
mov
xchg
push
lahf
push
ret
cmps
addr16
sub
retf
mov
add
cmc
mov
leave
dec
movs
mov
mov
add
jecxz
data16
int
fiadd
mov
inc
sbb
mov
xor
push
push
jg
test
outs
jns
repz
je
mov
sub
mov
js
mov
ror
mov
and
test
rol
pushf
mov
mov
and
pusha
pop
and
xor
mov
test
icebp
sub
ins
adc
out
dec
or
push
shl
sbb
daa
xor
pop
inc
pop
pushf
cmp
int3
arpl
sub
mov
mov
popf
bound
push
call
outs
jnp
inc
dec
dec
pushf
cmp
xor
pop
cli
dec
ret
in
sub
pop
fucomip
sti
test
popf
inc
add
nop
fs
movs
jecxz
inc
jmp
xchg
push
sbb
sub
sub
xor
fdivr
mov
call
shr
inc
jno
iret
mov
rcr
sbb
dec
adc
scas
popf
sub
sub
into
xlat
and
sub
je
pop
sbb
mov
call
xchg
out
push
mov
js
or
lahf
or
movs
xlat
shr
cmp
retf
(bad)
arpl
xor
cmp
cmps
push
(bad)
ins
jno
lods
mov
and
cli
loopne
(bad)
jmp
jle
inc
in
push
cmp
test
or
mul
ins
ror
jb
sbb
sub
arpl
ja
jmp
xchg
pop
jo
jmp
fstp
(bad)
(bad)
xlat
xchg
mov
mov
pop
or
retf
ret
enter
call
pop
stc
in
jne
xchg
mov
shr
mov
ja
in
imul
mov
jg
je
popa
imul
arpl
pusha
mov
sub
mov
je
neg
dec
jns
int3
ins
out
pop
retf
sbb
or
mov
inc
mov
aaa
mov
push
pop
into
inc
jl
adc
movs
ds
fs
pop
scas
mov
jmp
sti
loope
loopne
add
pop
imul
xor
push
sbb
mov
dec
test
(bad)
bound
rcr
pop
aad
call
push
fisub
or
fisub
mov
es
repnz
or
cli
and
xchg
jecxz
cmp
add
push
dec
mov
daa
push
push
inc
and
test
push
add
leave
mov
cmps
and
ins
dec
jno
cdq
jns
mov
daa
mov
repz
call
mov
dec
les
dec
jp
mov
rcr
ins
sti
stos
out
jne
cwde
add
mov
hlt
(bad)
iret
not
and
int3
push
retf
test
sti
sbb
js
pop
sbb
dec
int
cmp
fstp
push
sahf
add
add
ins
pop
mov
mov
inc
or
fisub
xor
in
add
inc
scas
es
cs
ret
dec
adc
xor
xchg
imul
push
mov
xor
ret
(bad)
mov
in
or
ss
push
pop
dec
cmps
pop
cwde
rol
enter
std
or
cs
mov
call
sar
sbb
adc
mov
sub
rol
mov
mov
cmp
cmp
dec
jecxz
int
mov
sbb
call
cmc
adc
mov
sub
pusha
in
add
or
jb
pop
xchg
push
adc
mov
outs
xchg
mov
shl
data16
push
imul
xchg
(bad)
push
dec
fwait
mov
popa
arpl
test
xchg
lods
in
cmp
dec
xchg
arpl
mov
adc
pop
pushf
jmp
lock
movs
test
ja
enter
mov
out
adc
das
push
sbb
xchg
xor
sbb
dec
add
outs
push
sub
lea
(bad)
fidiv
adc
test
nop
pop
fisttp
scas
inc
dec
pop
xchg
sub
repz
ds
ficom
mov
jle
loope
or
mov
ror
outs
ins
aas
loopne
push
sub
out
or
test
jl
push
push
mov
pop
mov
xor
pop
in
mov
dec
dec
fld
push
sub
xchg
and
add
not
std
adc
push
sbb
imul
outs
add
mov
dec
mov
mov
pop
xchg
retf
test
add
out
inc
hlt
pushf
repz
jmp
(bad)
fwait
movs
push
adc
(bad)
cmp
outs
mov
(bad)
mov
(bad)
push
and
adc
cmp
ror
mov
mov
out
mov
loop
(bad)
push
pop
gs
cmps
cmp
pop
not
ret
push
jmp
fiadd
stc
std
daa
sub
mov
movs
in
lock
fld
ret
dec
enter
add
lods
sbb
and
jp
iret
ja
or
retf
movs
inc
add
and
inc
push
cs
pop
sbb
sub
jge
push
cmp
mov
inc
lahf
shr
jno
sbb
in
push
test
lds
cmp
or
call
mov
sub
push
ds
mov
ins
mov
or
enterw
push
fldcw
pop
adc
sub
daa
xlat
lods
lods
cmps
dec
sub
bound
push
xor
pop
pusha
test
jecxz
jae
and
xor
push
js
movs
add
push
xor
sub
mov
mov
push
movs
sti
repz
sub
fimul
push
out
inc
mov
pushf
out
(bad)
pop
pop
inc
outs
stos
addr16
js
push
ds
jg
repnz
imul
adc
mov
popf
ins
jae
ror
les
(bad)
lahf
gs
jno
rcl
adc
int
and
jmp
stc
sbb
ins
sub
and
add
sub
cmp
ror
sub
into
add
addr16
shl
icebp
push
mov
dec
jo
xchg
jb
inc
dec
test
mov
cs
adc
xor
xor
aaa
pushf
aas
pop
fmulp
mov
out
lea
xchg
pop
mov
pop
mov
lock
cli
retf
and
lock
cmp
jno
mov
pop
imul
xor
jmp
jmp
aad
ss
jmp
sub
and
(bad)
add
je
je
std
sub
loop
or
je
popa
sub
dec
ss
fistp
lods
les
addr16
out
mov
inc
rcr
mov
mov
xchg
shl
adc
(bad)
sti
pop
push
movs
das
ja
push
adc
or
sbb
xor
jns
or
popf
cwde
push
and
stos
jbe
xchg
int
jmp
cmp
cwde
mov
mov
cmp
mov
mov
or
loopne
cmp
mov
add
cmps
adc
js
icebp
lods
pop
cdq
mov
xlat
xor
idiv
les
xor
add
mov
push
sub
inc
xlat
xchg
iret
sub
sbb
pcmpgtw
xor
cmps
jnp
not
call
mov
shr
ficomp
and
enter
add
add
mov
cmps
mov
mov
pop
xor
cli
test
fidiv
aas
cdq
push
inc
outs
mov
add
les
and
jmp
pop
and
pop
out
sahf
mul
xchg
lahf
jbe
push
mov
and
xor
xchg
pusha
cmps
stos
mov
cmp
gs
push
push
add
sub
jno
dec
cmp
lds
push
xor
mov
xchg
(bad)
js
mov
fild
or
mov
push
push
or
sub
je
test
mov
or
in
cmp
mov
or
push
adc
call
mov
xor
and
call
scas
mov
jb
jp
imul
pop
cmp
loop
in
imul
mov
retf
mov
lock
pop
push
mov
rol
and
sbb
adc
mov
retf
nop
dec
add
movs
fsub
int
test
add
addr16
jmp
(bad)
pop
fidiv
xor
lds
and
cld
add
stos
push
movs
push
lds
adc
sub
mov
aaa
fcom
shl
inc
(bad)
mov
push
xchg
arpl
adc
pop
(bad)
add
mov
call
cli
sub
gs
push
pop
xor
inc
test
fldcw
shl
pop
cli
xchg
jnp
imul
leave
(bad)
sbb
mov
aas
mul
sbb
push
mov
fistp
(bad)
fcmove
fist
adc
leave
push
mov
cmp
mov
mov
xchg
rcl
add
sub
adc
cli
je
les
hlt
arpl
or
add
pusha
cmps
call
arpl
je
retf
sbb
call
in
popa
mov
jne
inc
dec
jbe
sbb
sbb
mov
inc
cmps
push
pop
sbb
jo
mov
addr16
add
scas
enter
mov
pop
mov
add
pop
(bad)
arpl
pop
pop
ds
cli
add
in
fs
add
mov
add
push
cwde
(bad)
and
pop
loop
out
sbb
add
jmp
fimul
mov
cmp
jecxz
arpl
push
cmps
xor
in
ret
mov
sbb
or
adc
xlat
cmps
jmp
or
and
or
mov
pushf
test
mov
jmp
push
or
xor
cmp
jge
dec
jecxz
push
xchg
test
push
ret
aaa
out
call
imul
mov
lea
outs
sbb
fiadd
inc
shr
mov
cmp
clc
jno
in
jge
mov
mov
mov
push
das
sahf
pop
fst
pop
inc
movs
inc
xchg
ret
pop
ds
stos
in
jp
stos
and
add
xchg
cmp
aad
xor
or
mov
pop
or
sti
aam
jecxz
inc
push
inc
lock
jge
jg
cs
or
mov
push
mov
cli
popf
pop
sbb
arpl
mov
cmp
das
mov
add
imul
lods
stos
sbb
cmp
les
mov
popa
icebp
dec
adc
dec
pop
pop
inc
fdivr
xor
mov
repnz
mov
int
mov
pop
sub
in
xor
or
and
ja
push
mov
cmp
daa
seto
jp
dec
xchg
hlt
scas
mov
adc
movs
mov
adc
push
push
push
jmp
xor
out
int3
fist
mov
lods
pop
out
fstp
mov
adc
test
sbb
test
hlt
mov
cdq
not
loop
je
push
mov
cwde
mov
inc
inc
lock
fist
retf
and
stc
push
push
pop
pushf
bound
adc
adc
popa
push
daa
scas
pop
loope
mov
test
clc
or
dec
mov
mov
fs
inc
aas
sub
jl
cmp
leave
fwait
movs
mov
mov
dec
mov
test
mov
xchg
fld
sub
test
dec
jae
add
scas
in
push
(bad)
aaa
mov
dec
jmp
cmp
push
iret
arpl
ret
inc
push
iret
retf
ret
and
xor
push
xchg
push
lods
xchg
and
sub
es
ins
movs
xor
adc
push
mov
retf
arpl
fcom
sti
xchg
retf
cdq
mov
adc
mov
hlt
and
inc
pusha
sbb
mov
shr
dec
mov
sub
rcr
mov
add
(bad)
rol
icebp
mov
adc
or
or
test
fadd
ds
cmp
sub
fdiv
adc
mov
or
push
das
fmul
mov
divps
shl
jmp
or
mov
mov
loop
push
pusha
pop
push
mov
pop
sub
jb
and
call
int3
lds
xor
add
gs
sbb
mov
mov
inc
fwait
pop
mov
and
inc
and
imul
mov
jle
inc
daa
sbb
cmps
in
xlat
ss
add
ss
stc
xchg
neg
das
mov
push
pop
add
or
movs
fcmovu
vmovdqu
mov
pop
pop
jmp
cmc
(bad)
fs
sub
fbstp
mov
dec
jne
jp
fidiv
int
mov
ss
jg
and
je
sbb
sar
or
sub
cmp
and
xchg
aaa
stc
xchg
lea
and
inc
adc
mov
call
ins
jae
xchg
push
inc
mov
mov
shl
mov
sbb
iret
cmp
push
je
rcl
inc
dec
(bad)
les
inc
fistp
mov
or
nop
in
shl
jno
popa
test
cmp
push
and
push
jne
mov
pop
outs
push
loopne
aad
imul
or
cwde
inc
xor
shl
repnz
ret
lahf
adc
fcomi
in
(bad)
cmp
cmps
test
das
lods
lods
adc
dec
jbe
push
xchg
daa
cld
and
cmp
stos
enter
cdq
pop
jle
test
(bad)
ins
mov
loopne
test
push
lods
ds
stc
iret
je
scas
aam
cld
jae
sbb
test
(bad)
lds
and
jge
pusha
inc
mov
fbstp
inc
and
sub
sbb
and
or
in
loop
addr16
shl
aam
push
mov
dec
call
loopne
mov
and
jo
mov
dec
ins
adc
or
pop
call
dec
fwait
in
scas
shr
add
in
mov
xlat
jns
out
and
lahf
sub
inc
bound
mov
or
enter
pusha
mov
add
inc
jmp
aad
or
shl
mov
ret
mov
pop
test
xor
push
push
mov
loop
iret
jno
and
mov
ja
movs
xchg
jae
xor
daa
in
add
pop
sub
add
mov
je
pop
add
mov
push
xchg
pop
push
call
dec
and
scas
loope
adc
xchg
cwde
fs
repz
add
int3
rcl
adc
mov
fsub
mov
sbb
in
pop
mov
retf
inc
mov
(bad)
pop
ror
aas
jmp
(bad)
retf
jb
push
mov
xor
into
pop
mov
dec
sub
repz
mov
dec
xor
push
test
das
mov
jmp
mov
xor
mov
dec
inc
out
jl
adc
xor
ss
leave
or
adc
js
jmp
sbb
into
lods
fdiv
out
cmp
cs
jo
pop
xlat
dec
or
leave
sbb
push
jb
repnz
pop
iret
adc
inc
int
in
dec
bound
jmp
retf
je
push
pop
cmp
push
and
pop
sbb
dec
mov
mov
int
inc
inc
and
pop
adc
cli
out
bound
imul
aad
mov
lahf
repz
inc
pop
dec
sbb
lea
retf
jecxz
mov
inc
pop
and
or
mov
jp
sub
movs
out
mov
cs
adc
xchg
dec
cwde
add
inc
inc
push
or
pop
cmp
sub
jmp
mov
and
fstp
or
icebp
sbb
add
xchg
or
inc
cmps
mov
popf
int3
xor
sbb
je
and
retf
cs
cli
xchg
dec
xchg
or
js
dec
dec
cmc
repz
cmp
ja
sub
sti
cmp
inc
and
pushf
mov
ja
stc
add
push
ret
loope
xchg
pop
out
dec
and
push
push
pop
(bad)
mov
sbb
mov
cwde
mov
mov
(bad)
mov
sbb
sbb
sbb
jp
out
hlt
shl
jle
stos
test
xchg
dec
iret
and
es
idiv
lea
cld
ja
hlt
pop
inc
xor
pop
les
jl
lahf
fidiv
fld
into
xchg
or
push
test
mov
lds
jns
jmp
push
out
mov
pop
jl
out
lea
or
popf
addr16
xlat
popa
inc
scas
call
mov
ss
lds
bound
stos
mov
pop
sti
cs
jge
dec
ins
sub
sar
popa
sbb
add
not
lea
mov
dec
(bad)
fisub
xor
icebp
pusha
loop
or
mov
test
pop
cmp
xor
mov
aas
(bad)
mov
sub
pop
mov
pop
mov
mov
or
dec
(bad)
fwait
loope
inc
cmp
rol
mov
pop
div
jg
js
mov
in
(bad)
shl
mov
int3
mov
mov
xor
fdivr
xchg
int
mulps
movs
lods
and
cmp
and
xor
adc
out
and
test
ins
jae
aas
enter
clc
test
jns
js
sbb
sbb
inc
jecxz
push
cwde
out
or
in
popa
push
call
push
lds
jp
adc
jno
push
in
ins
sbb
std
repz
(bad)
xor
mov
ss
ins
cmp
retf
les
inc
dec
push
mov
jns
std
ret
lock
or
push
and
gs
push
(bad)
std
sbb
dec
dec
fidiv
adc
int
test
push
pop
popf
jl
shr
aas
adc
jno
test
dec
push
pop
ss
cmc
hlt
push
adc
or
adc
sub
(bad)
xor
cmps
ds
lea
pushf
add
or
push
(bad)
cld
imul
shl
jp
or
add
hlt
mov
xor
mov
pop
retf
adc
mov
jb
test
xchg
jno
ds
aaa
retf
push
inc
dec
imul
cmp
das
psubusb
pop
lahf
cmp
bound
mov
mov
mov
ror
jno
pop
xchg
add
sbb
dec
push
call
retf
dec
imul
push
jmp
fisttp
sbb
retf
popa
mov
rcr
(bad)
mov
pusha
adc
ins
mov
pop
dec
mov
nop
retf
and
lods
mov
iret
push
int
push
and
xor
mov
inc
xchg
jl
sub
je
mov
sar
mov
das
loopne
comiss
neg
fs
mov
mov
(bad)
rcl
repnz
int
aam
(bad)
sub
cwde
mov
sub
and
loop
jp
or
mov
mov
sub
test
sbb
mov
fcmovnb
push
jnp
jmp
loop
adc
cs
jecxz
iret
sbb
and
retf
mov
ins
ror
loop
int3
adc
in
push
and
mov
loope
jns
das
sub
push
das
(bad)
push
fldcw
inc
stc
fisttp
std
out
rcr
fwait
dec
mov
outs
jecxz
inc
mov
les
adc
xchg
mov
dec
iret
jl
sbb
mov
pop
push
jle
mov
adc
ret
jbe
addr16
jns
ins
lea
cmp
jecxz
mov
test
ficom
jne
pop
icebp
jae
add
retf
add
dec
add
lds
jmp
mov
sbb
icebp
or
(bad)
fisubr
ror
mov
or
icebp
in
or
sub
xchg
scas
pop
bnd
and
pop
add
push
je
mov
fdiv
inc
imul
loope
mov
jp
stos
mov
and
sbb
push
sar
inc
mov
(bad)
sbb
icebp
jmp
arpl
pop
add
pusha
popa
pop
xchg
pop
adc
dec
cs
hlt
sbb
dec
push
sub
imul
jp
outs
movs
ins
das
sar
mov
jge
imul
daa
xchg
jmp
xor
push
sub
sbb
adc
aaa
dec
lea
cmp
js
xchg
ret
mov
ds
xchg
dec
imul
pop
ret
ins
jg
push
and
popf
call
ror
fwait
in
jmp
into
fst
cli
es
cmp
call
not
push
test
nop
mov
divps
fucom
jae
sub
jmp
sub
dec
push
sbb
or
push
test
ins
loope
jbe
inc
shl
pop
pop
or
cmp
popf
icebp
mov
ret
imul
iret
pushf
adc
lea
cmp
cli
sub
push
push
xchg
jmp
cmps
mov
and
jecxz
and
push
xor
js
inc
ds
sbb
push
inc
pop
mov
clc
push
mov
adc
adc
enter
mov
mov
shr
mov
adc
in
cmps
push
mov
mov
(bad)
mov
mov
or
or
je
mov
push
jle
jb
mov
outs
in
cmp
xchg
jle
inc
out
test
or
mov
xchg
int3
in
mov
push
inc
inc
outs
fs
and
and
sbb
dec
stos
mov
and
hlt
stos
xchg
cmp
push
(bad)
mov
cld
pop
call
test
sub
pop
loope
add
jp
je
jge
jns
idiv
push
inc
push
rcl
inc
in
push
xchg
fs
cmc
pop
out
out
mov
lahf
scas
and
(bad)
fbld
into
xchg
sar
and
pop
xor
(bad)
xor
cwde
push
cmps
sub
aas
outs
xchg
lds
push
sbb
enter
test
fsubr
jle
sub
or
mov
sub
sub
sbb
aam
mov
into
sbb
add
xor
mov
in
sti
(bad)
das
inc
push
pushf
imul
or
adc
jnp
push
xchg
cmps
and
sbb
imul
push
loope
stos
and
sub
mov
pushf
test
out
add
scas
or
std
sbb
es
popf
outs
adc
xchg
or
inc
inc
leave
sti
cmp
std
dec
push
mov
xor
jmp
fwait
sub
stos
lea
mov
les
stos
ins
retf
cmp
push
sti
add
stos
(bad)
cmp
mov
js
push
loope
adc
movs
mov
pop
int
xchg
stos
outs
mov
popa
out
mov
into
pop
dec
mov
scas
pop
adc
bound
or
(bad)
cwde
loope
mov
fldcw
scas
pop
adc
adc
sub
(bad)
out
ret
add
xchg
call
pop
sti
bound
test
shl
mov
push
js
mov
aas
xchg
pop
mov
test
idiv
adc
and
pop
adc
and
jo
cmp
mov
stos
fsub
cwde
mov
(bad)
sub
mov
add
lds
repnz
jecxz
mov
add
std
xor
adc
das
fidivr
fistp
test
mov
add
cmps
and
dec
sbb
ja
add
repnz
cwde
push
sub
and
and
mov
xchg
(bad)
out
mov
inc
out
dec
std
inc
les
sbb
sub
aaa
sub
mov
inc
push
push
les
es
mov
jmp
xchg
rcr
mov
(bad)
or
mov
sub
aas
push
inc
retf
jmp
aam
cs
repz
jge
adc
cmps
jl
cs
out
xchg
call
call
out
arpl
js
xor
stos
sbb
jmp
jle
lds
ja
adc
and
das
aas
pop
mov
and
pop
pop
cld
adc
cmp
sahf
sbb
add
and
push
shl
add
push
call
inc
mov
push
(bad)
lods
test
cld
test
lods
mov
mov
push
inc
add
hlt
jmp
xchg
push
or
push
sbb
mov
call
stos
mov
int3
mov
push
jnp
ja
add
data16
inc
cwde
adc
push
jle
(bad)
xchg
test
xadd
jmp
xlat
sbb
shr
pop
fs
aad
mov
sub
jge
push
or
neg
pushf
cmp
pop
mov
inc
mov
mov
ins
mov
pop
gs
adc
xchg
out
fcmovbe
mov
loop
mov
aas
adc
ror
cmp
ja
sub
dec
mov
icebp
or
pop
(bad)
jno
stos
stc
xor
mov
or
stos
jge
mov
movs
xchg
and
jle
aaa
cmp
push
pop
addr16
sbb
shl
(bad)
in
mov
xor
test
sub
out
pop
dec
or
cmp
into
jge
sbb
add
fs
das
xchg
stos
js
jne
cwde
inc
cmps
mov
in
xor
shl
test
mov
cs
and
es
daa
xchg
fistp
sti
and
xor
ret
xor
scas
ins
fisttp
(bad)
fstp
cmps
xchg
cmc
test
xchg
mov
sub
popf
dec
and
cmp
jae
and
and
sbb
loop
xchg
xchg
mov
xor
rol
jno
mov
inc
movs
rcl
mov
sbb
lock
jne
pop
scas
pop
adc
loopne
hlt
fwait
mov
(bad)
pop
dec
jb
jle
enter
inc
or
sbb
cli
pop
mov
test
dec
fstp
mov
mov
xlat
pop
xchg
stos
jb
xor
call
mov
sub
dec
inc
and
mov
stos
push
test
test
pop
mov
xchg
ins
mov
(bad)
adc
cs
jmp
mov
test
lds
xor
inc
(bad)
mov
out
jge
lahf
imul
and
sub
mov
outs
wbinvd
mov
rcl
imul
outs
and
sbb
sti
call
dec
sahf
xor
pop
mov
aas
jp
ins
mov
paddw
jmp
bound
(bad)
push
movs
and
jo
pop
mov
sbb
das
lds
mov
stos
or
leave
jns
rcl
cmp
js
mov
jecxz
mov
jae
xor
jno
repnz
dec
adc
lods
aam
cmp
pushf
xchg
jne
mov
mov
hlt
push
ins
icebp
pushf
mov
ffreep
repz
ret
xor
aaa
jbe
inc
lods
jmp
dec
cmps
daa
aad
cli
inc
cli
xor
sbb
xlat
daa
inc
dec
dec
lea
jo
daa
imul
xor
dec
imul
jecxz
and
or
jecxz
int
les
add
cmp
pop
in
outs
xchg
(bad)
fisub
pop
jle
xchg
adc
mov
cli
jge
rol
sub
lods
cli
daa
mov
arpl
jmp
or
int
ja
iret
mov
ret
cwde
cmp
ss
inc
sar
add
push
lds
pop
cwde
leave
dec
(bad)
es
(bad)
xor
sti
retf
and
shl
out
and
loopne
mov
mov
int
adc
out
push
retf
repz
bswap
sahf
shr
xor
sbb
sub
or
dec
test
adc
push
or
or
pop
dec
mov
out
pop
stc
cmc
mov
pop
imul
dec
mov
adc
fistp
mov
jge
mov
xchg
in
pop
shl
dec
sbb
or
cmp
xor
add
push
imul
push
jne
jl
aam
xor
popa
inc
inc
jmp
mov
mov
or
js
iret
daa
or
and
outs
add
in
test
cmp
hlt
fld
dec
(bad)
xchg
das
bound
and
ins
pop
pop
inc
fisubr
rol
sub
push
mov
test
dec
dec
sahf
pop
cmp
adc
jle
mov
(bad)
xchg
test
int
call
xor
(bad)
loopne
loop
jns
call
cmps
lods
lea
add
iret
adc
xchg
mov
sub
pop
sti
test
push
or
push
ret
mov
fcomp
sar
pop
xchg
push
rol
push
mov
test
jge
jecxz
fwait
sti
add
out
dec
xchg
(bad)
movs
(bad)
shl
hlt
cdq
sub
pop
(bad)
ret
pop
push
ja
mov
retf
mov
data16
jge
(bad)
es
adc
ins
imul
xor
xlat
sti
ss
push
cmp
cmp
xchg
imul
loopne
hlt
xlat
pop
lea
lods
popf
adc
add
hlt
mov
(bad)
push
cdq
rol
sub
mov
call
jle
mov
and
mov
add
cmovb
mov
mov
jge
jmp
stc
or
retf
jae
mov
mov
retf
es
mov
test
mov
clc
not
sub
js
mov
adc
in
(bad)
idiv
outs
lock
fld
pushf
lock
outs
jp
ins
repnz
sbb
dec
mov
mov
fmulp
mov
push
or
loop
add
das
ds
ror
add
push
xchg
xor
cdq
imul
pop
mov
aad
xor
clc
cmp
pop
mov
adc
lahf
mov
loopne
fldenv
jle
outs
out
shr
ss
and
fsub
adc
popf
jbe
xor
loope
xchg
(bad)
cmp
inc
sbb
addr16
add
cwde
lods
jb
movs
xchg
xchg
xor
inc
shl
or
leave
fstp
mov
dec
xor
sti
cmps
and
lock
pop
add
inc
sub
and
sbb
daa
cmp
xor
shl
rcr
imul
test
lock
jbe
mov
dec
sbb
adc
popf
test
(bad)
xor
xchg
mov
and
inc
pop
mov
pushf
push
fs
sub
dec
dec
xchg
add
inc
out
bound
nop
sub
adc
pushf
mov
stos
mov
sbb
xor
stos
mov
(bad)
xchg
ret
pushf
shl
cld
ficomp
gs
xchg
lds
ror
sub
idiv
in
shr
cli
popa
mov
loope
push
scas
pop
loop
dec
push
dec
jb
lods
jae
outs
fisttp
dec
dec
out
xchg
pop
fsub
movs
or
dec
push
rcl
jo
scas
sbb
inc
xchg
outs
pop
sbb
adc
repz
mov
cmp
bound
pop
or
add
loope
push
mov
or
data16
dec
xchg
adc
pop
std
cmps
mov
cmps
xchg
inc
mov
jno
scas
xchg
mov
mov
loop
retf
pop
push
test
mov
add
or
jmp
(bad)
fdivr
js
mov
sub
std
or
pop
xor
fs
aas
add
sar
jge
cmp
rcr
nop
aad
je
mov
or
push
call
clc
mov
test
loope
and
shl
xchg
push
push
lock
sub
jg
cdq
jecxz
mov
sbb
inc
push
jg
mov
fadd
inc
xchg
stos
repz
call
sbb
sub
mov
push
loope
pop
call
dec
out
ja
js
adc
push
and
xor
(bad)
push
loopne
mov
stc
lds
shl
jle
fistp
in
sub
(bad)
pop
fistp
rcr
mov
mov
jp
xchg
inc
mov
xchg
sahf
xchg
retf
ret
add
mov
cmps
das
mov
nop
jno
loope
test
push
addr16
jo
leave
clc
mov
xor
jp
fbstp
aaa
shl
cmps
add
cld
bound
adc
or
shl
add
into
xor
jge
in
cld
xchg
mov
inc
ror
mov
jp
dec
adc
sub
test
inc
sar
fadd
push
cmp
jns
fwait
(bad)
or
mov
scas
cmc
inc
pop
das
xor
out
pop
inc
dec
and
or
jecxz
mov
adc
scas
fidiv
out
jae
gs
adc
jbe
pop
mov
mov
cmc
repnz
sbb
inc
mov
sbb
jmp
ins
adc
adc
ror
cdq
out
push
lahf
and
jmp
push
push
jae
xchg
gs
imul
mov
loop
mov
js
in
xchg
xlat
sbb
adc
fistp
push
push
fcomp
shl
and
push
push
out
lock
sub
les
mov
(bad)
cmp
enter
jp
adc
sti
loop
les
inc
pop
xchg
xor
mov
(bad)
bound
pop
inc
out
or
in
xor
out
out
mov
lds
add
add
repnz
adc
stc
xor
sbb
ret
ja
xchg
pop
pop
out
push
add
add
rcr
pop
rcl
leave
fst
outs
arpl
adc
push
mov
adc
adc
adc
ss
std
jecxz
in
xor
mov
cdq
ror
pusha
pop
add
or
push
xor
inc
(bad)
loop
cld
mov
imul
push
adc
fwait
sbb
rcr
arpl
ret
xor
jg
and
imul
mov
adc
add
test
fsub
jp
mov
inc
xor
dec
adc
dec
imul
sub
not
mov
mov
dec
add
lahf
inc
out
push
xchg
rcr
pop
(bad)
pop
cmp
fld
jnp
gs
cmps
outs
aaa
pop
push
lock
sub
enter
les
xchg
ss
mov
fisubr
adc
cmpps
test
hlt
adc
scas
fdiv
xor
mov
fild
mov
pop
adc
shl
add
enter
xlat
ss
(bad)
cmc
and
and
in
fsubr
lock
push
mov
or
and
sbb
and
xlat
xor
fs
and
sbb
data16
jle
cwde
mov
sbb
outs
jns
push
jl
add
sub
pop
or
and
add
or
iret
call
stc
fcomp
jl
pop
inc
xchg
adc
mov
out
dec
sahf
aas
out
jne
daa
lods
fidiv
lods
dec
sahf
psrld
mov
sub
pop
fdivr
inc
shl
cdq
iret
int3
ins
arpl
or
push
(bad)
jecxz
in
jo
inc
aam
lods
retf
add
mov
shl
call
jbe
sbb
lods
bound
mov
push
jmp
cs
or
fwait
push
out
out
aaa
out
dec
pop
aad
mov
sti
and
int
nop
push
gs
int3
xlat
loopne
idiv
adc
loopne
mov
ins
icebp
sbb
xchg
test
jnp
fisttp
mov
jle
and
xchg
push
ret
add
gs
adc
cld
or
pop
arpl
call
mov
in
int3
xor
enter
adc
push
cdq
push
push
xor
and
xchg
mov
sbb
cmps
mov
push
push
jo
loopne
push
pop
mov
jbe
repz
jo
xlat
sbb
jmp
daa
adc
dec
mov
sti
xchg
add
pop
test
repnz
xrelease
cmp
std
lds
mov
jne
cs
mov
push
repnz
outs
adc
loope
inc
ret
sbb
fcom
or
ins
call
cs
ror
(bad)
and
inc
mov
jle
das
add
and
pop
pop
xchg
imul
retf
cmp
mov
fistp
lea
xor
xchg
stc
stc
inc
xchg
jecxz
mov
xor
pushf
sub
fdiv
loopne
xchg
out
jg
adc
xchg
inc
push
stos
dec
jmp
jmp
mov
(bad)
gs
not
cmp
and
hlt
jmp
and
jo
into
mov
outs
jmp
cmps
xchg
add
sbb
jne
mov
dec
add
cmp
inc
xor
stos
mov
rol
fisttp
(bad)
pushf
and
push
in
xchg
mov
and
jne
pop
cmp
push
hlt
pop
sbb
test
xchg
pop
jmp
mov
push
pcmpgtw
pop
rcl
pop
rcl
(bad)
mov
pop
xor
lods
fsubrp
out
mov
mov
dec
pop
xchg
xor
fnstsw
les
jg
mov
and
inc
test
adc
mov
ins
xor
mov
neg
ja
aad
dec
cmps
mov
fisubr
push
mov
mov
mov
cmp
imul
and
lea
xor
add
test
stos
sbb
test
fwait
xor
adc
jno
fwait
adc
jns
cmp
int3
repz
jmp
movs
repnz
jne
pop
ret
popa
(bad)
or
out
sub
sbb
sbb
xchg
cmp
push
neg
(bad)
mov
nop
push
popa
lods
mov
test
fiadd
jmp
dec
ins
idiv
out
add
ins
fadd
movs
pop
(bad)
sti
ret
push
pop
sbb
pop
sub
xchg
jb
adc
jo
nop
push
pop
pop
ret
call
js
mov
(bad)
fisub
mov
xor
xchg
cmp
push
and
jns
add
sbb
jnp
sub
jmp
fadd
aad
out
lds
sbb
je
rol
into
mov
cmp
and
call
dec
and
push
addr16
nop
stos
into
add
pop
mov
mov
(bad)
(bad)
cmp
scas
or
bound
test
mov
inc
cld
scas
cmp
(bad)
out
mov
fwait
mov
clc
xchg
ret
dec
adc
jo
into
pop
push
shr
fcom
or
cmp
cdq
daa
ja
test
fsubr
and
div
add
clc
sub
call
dec
push
imul
stos
dec
add
cmp
push
bound
cmp
stos
mov
repnz
das
mov
adc
jle
movs
adc
add
bnd
pop
lahf
and
les
push
aas
lahf
leave
pop
je
dec
add
(bad)
hlt
and
das
sbb
mov
dec
hlt
push
adc
shl
mov
jb
add
sub
ror
add
cli
test
cli
adc
cmp
iret
xchg
cmps
(bad)
cmc
aam
add
imul
mov
movs
rcl
outs
data16
sbb
test
jno
mov
test
push
aad
lods
lock
xor
push
lock
sub
fwait
pop
test
mov
xchg
popf
ficomp
push
lea
or
push
xor
inc
sub
xchg
adc
dec
sbb
xchg
push
push
cmp
fwait
shl
out
call
mov
sub
xor
les
push
outs
cmc
jle
xchg
scas
cli
xchg
ins
inc
addr16
aaa
(bad)
pop
mov
mov
test
or
jne
cmp
cli
or
cmp
out
test
jecxz
pop
std
jbe
xchg
jge
enter
outs
and
xor
dec
push
xchg
out
call
pop
xor
mov
std
cmp
pushf
jmp
aas
push
test
add
aaa
or
stos
das
xchg
hlt
fmul
pop
retf
ins
push
mov
and
and
pusha
inc
out
mov
xor
cmp
pop
add
jb
xchg
and
gs
jae
fldenv
and
inc
fistp
mov
out
(bad)
mov
mov
das
sbb
xor
ins
call
and
(bad)
clc
mov
mov
stc
dec
test
ret
imul
inc
inc
mov
(bad)
push
sub
fcom
sar
push
popa
lds
adc
inc
in
retf
xor
add
cmc
inc
dec
gs
imul
xlat
outs
mov
cmps
imul
and
or
push
repz
pop
fnstsw
mov
fisub
movs
stos
sbb
rcl
adc
xlat
sbb
mov
je
sub
push
rcr
mov
or
stc
inc
arpl
and
cdq
inc
pop
push
imul
push
and
cwde
add
dec
frstor
test
jmp
mov
shl
test
jp
cmp
shl
pop
jge
das
adc
divps
hlt
call
mov
inc
inc
jp
inc
fwait
xchg
pop
outs
cmps
mov
mov
add
(bad)
inc
cmp
mov
xor
mov
out
push
out
mov
mov
fst
jnp
add
or
fild
xor
or
adc
jmp
push
jb
(bad)
add
nop
adc
inc
call
pop
(bad)
movq
push
mov
test
push
lds
in
pop
inc
js
or
arpl
mov
sbb
xchg
and
mov
test
test
jmp
and
out
xchg
add
mov
rol
movs
cmps
mov
xor
xchg
(bad)
fstp
mov
sub
jno
movs
mov
mov
addr16
cmc
jg
mov
or
and
mov
mov
cli
mov
adc
xchg
shl
es
rcr
jp
xchg
fs
in
push
rcl
or
jne
or
test
inc
cmp
sub
es
rol
xor
test
jb
stc
gs
lea
mov
stos
pop
jp
push
fisttp
xor
leave
sub
shl
loope
add
arpl
addr16
mov
icebp
sub
sub
fsin
jne
cmp
rcl
not
aad
call
movs
sar
sbb
adc
xchg
nop
jecxz
mov
xor
and
mov
mov
int
mov
jbe
dec
xchg
hlt
cmp
and
test
lahf
lock
clc
jnp
js
jbe
ret
xchg
cmc
jnp
push
test
push
lods
sahf
dec
push
(bad)
adc
jnp
adc
scas
not
fnsave
push
bound
mov
push
xchg
xchg
lea
adc
ins
or
and
jmp
iret
jp
cmps
and
or
sar
into
leave
sub
and
and
fwait
mov
adc
xchg
popf
aad
bound
bnd
xchg
pop
mov
ficomp
inc
xchg
test
add
jo
(bad)
adc
mov
(bad)
pushf
(bad)
outs
add
or
scas
adc
dec
ret
mov
js
xchg
or
xor
inc
rcl
mov
ss
mov
jnp
(bad)
call
sbb
mov
je
ins
add
add
test
dec
inc
int
and
mov
arpl
fstp
mov
iret
mov
fnstenv
pop
outs
scas
jo
dec
inc
popf
mov
push
lea
sbb
add
push
je
sub
push
shr
push
jp
fisubr
test
out
xchg
push
push
xor
xchg
or
mov
jl
sti
adc
mov
repz
mov
hlt
xchg
stos
mov
les
lea
and
xchg
sbb
pop
pop
pop
repnz
ficom
xchg
xchg
pop
sahf
mov
lea
ds
pop
jge
not
icebp
cdq
in
jbe
cdq
push
or
leave
xchg
sub
ficomp
jmp
aam
push
mov
jae
push
add
xchg
inc
lahf
jbe
nop
loopne
retf
add
inc
inc
inc
jo
outs
and
cmc
mov
cld
call
mov
dec
and
xchg
pop
stc
push
(bad)
cmc
int
push
lds
mov
xchg
gs
mov
(bad)
je
aam
shr
push
adc
ins
mov
or
test
es
pop
into
mov
xchg
and
mov
push
adc
mov
xor
jno
xor
push
push
sahf
mov
add
pusha
mov
add
je
jp
clc
inc
popa
mov
dec
lock
jo
ja
out
movs
cmp
fwait
and
xor
movs
push
push
dec
hlt
mov
xchg
shr
push
dec
inc
xchg
sbb
bound
stos
pop
mov
dec
add
int
aas
sbb
sbb
add
retf
cmp
jns
mov
(bad)
inc
in
test
icebp
daa
ror
inc
pop
icebp
loopne
loopne
lods
push
mov
out
xor
clc
mov
das
adc
popa
jge
es
sbb
dec
adc
xchg
in
cmp
pop
out
in
sahf
xchg
jg
or
into
(bad)
aaa
rol
pushf
fwait
not
inc
es
adc
pusha
daa
adc
rcr
mov
test
cmps
fisttp
fs
cwde
inc
mov
or
hlt
push
sbb
sub
xor
push
ficom
sbb
std
retf
rcr
aad
xor
mov
idiv
js
and
fadd
adc
mov
(bad)
adc
add
fs
dec
fcmovnbe
gs
shl
in
ficomp
scas
(bad)
sub
pusha
cmp
sub
aas
popf
sub
mov
aaa
sub
push
xor
jno
dec
clc
cwde
push
lods
sbb
bnd
lahf
pop
jmp
ficomp
sbb
xor
not
sub
ins
and
gs
xlat
xchg
add
fild
sbb
cmc
mov
push
int
jle
adc
(bad)
cmps
mov
ret
xor
pop
cs
cld
xchg
(bad)
(bad)
jns
or
dec
movs
das
jmp
inc
movs
xchg
(bad)
sahf
std
sbb
pop
inc
imul
mov
or
sub
je
mov
jno
sub
xchg
jp
(bad)
fld
xor
and
sub
cmp
push
add
clc
retf
push
cmp
sub
icebp
or
mov
push
enter
mov
inc
sub
cmp
pop
lahf
jge
scas
(bad)
adc
imul
push
inc
aaa
cmps
in
mov
in
inc
xchg
jb
sbb
adc
or
retf
pushf
fnstcw
dec
pushf
push
jge
repnz
iret
xor
mov
sub
(bad)
repnz
pop
mov
jmp
jns
push
(bad)
dec
dec
cmps
lock
push
jnp
jno
jecxz
dec
xchg
cmp
jbe
test
mov
fs
mov
fs
ins
push
aad
repz
mov
sub
mov
mov
clc
mov
das
cmp
in
jne
xor
pop
leave
cmp
lahf
adc
sbb
and
xchg
mov
ins
inc
aam
outs
std
pushf
mov
jecxz
or
iret
adc
mov
ds
cmp
int
js
stos
add
xchg
loop
retf
sahf
data16
jmp
push
shl
pop
clc
adc
jmp
fld
jnp
or
xchg
jmp
xchg
fidivr
in
mov
enter
cdq
jno
adc
cmp
stos
and
mov
jb
push
or
daa
mov
cmp
jmp
push
scas
adc
jecxz
dec
in
lea
js
inc
lods
jecxz
mov
adc
and
data16
jno
les
pop
das
adc
xchg
(bad)
shl
or
jle
lds
mov
dec
xchg
mov
cmp
or
lahf
xor
push
adc
xchg
adc
push
test
cmp
cmps
xchg
xchg
call
adc
pop
inc
paddd
jbe
fistp
lods
pop
stc
jno
mov
inc
je
test
imul
arpl
sbb
popa
dec
(bad)
cmc
or
add
dec
cmp
jmp
xor
jg
icebp
mov
gs
into
cmp
aad
and
xlat
push
xchg
sbb
xchg
lea
mov
test
dec
shl
call
arpl
dec
cwde
mov
cmp
(bad)
sbb
push
dec
xor
push
(bad)
lods
fiadd
mov
jmp
div
xor
popf
adc
out
(bad)
lods
mov
pushf
inc
add
pop
fisttp
lock
mov
mov
mov
mov
bound
mov
push
add
and
mov
xchg
xor
jle
fistp
push
jecxz
sub
push
inc
push
aas
cmp
cmp
mov
cdq
aad
xchg
sbb
int
jecxz
dec
aaa
hlt
popf
fcomp
or
popf
xchg
mov
shr
add
imul
shr
pop
dec
pop
or
cmp
lahf
jl
xor
push
test
jle
sbb
cmp
xchg
sbb
inc
inc
dec
xchg
adc
cli
ins
mov
test
xor
sub
mov
in
and
movs
sub
sub
push
mov
mov
cmp
and
test
rol
stos
mov
push
loope
addr16
cmp
add
sub
call
add
xchg
enter
sahf
push
imul
aad
jbe
cmp
(bad)
sbb
inc
push
xchg
loop
mov
jle
jae
pop
lock
ret
xchg
mov
cmp
pop
movs
mov
sub
xchg
push
push
xlat
sti
jge
mov
cld
ins
inc
jmp
dec
data16
or
mov
je
loopne
fiadd
rcr
xchg
bound
ret
retf
pusha
repz
test
sub
jmp
sbb
cmp
stos
arpl
(bad)
xlat
dec
push
js
sbb
fdivp
cdq
mov
rcl
outs
mov
or
inc
shl
add
adc
lods
popf
cmp
rol
jo
ins
imul
adc
cmp
mov
push
dec
scas
add
or
xchg
adc
mov
(bad)
sub
inc
pop
sub
fmulp
mov
arpl
ds
mov
lock
pop
xchg
(bad)
jnp
jge
sbb
aaa
test
out
jle
cli
mov
mov
icebp
cdq
sbb
outs
push
(bad)
popf
cmp
mov
push
mov
shr
cmp
popa
imul
push
pop
cli
sub
mov
mov
add
sub
inc
pop
sub
and
push
jmp
popa
dec
or
lahf
jecxz
ret
out
and
jmp
push
and
sub
mov
add
adc
adc
lds
pop
and
xor
or
jmp
sub
lock
xchg
lods
push
into
xchg
pop
pushf
aaa
pop
add
bound
rcl
clc
dec
loop
dec
mov
mov
jbe
cmp
jns
xchg
mov
test
addr16
or
je
and
std
sahf
pop
jecxz
ficom
mov
xchg
popf
stos
shl
xlat
add
sar
inc
int3
mov
mov
test
mov
xchg
lods
add
mov
leave
lds
mov
mov
pop
cwde
cmp
gs
jmp
or
cli
nop
fldcw
cmps
cmp
sub
mov
test
(bad)
push
(bad)
fcom
push
sbb
ror
inc
or
dec
add
out
iret
or
movs
pop
es
pop
idiv
test
bound
adc
mov
shr
mov
clc
push
lods
and
rcl
and
pop
sbb
int3
push
mov
inc
es
push
dec
test
xchg
sbb
pop
pmaxub
push
stos
cmp
xor
push
inc
shl
les
or
lods
(bad)
jg
ret
(bad)
rol
hlt
pop
clts
js
es
jne
and
aad
in
pop
add
jne
mov
int
popa
push
scas
pop
pop
out
mov
sub
mov
mov
dec
inc
and
ins
pop
aas
mov
adc
and
jmp
mov
sub
add
jmp
sbb
cld
(bad)
xchg
jp
ds
and
scas
jnp
out
clc
sub
inc
sbb
es
fld
inc
leave
popf
xor
js
mov
push
sub
mov
fld
mov
dec
test
out
repnz
mul
out
fs
xchg
bound
adc
jb
push
sbb
sbb
push
add
sub
es
inc
test
retf
ret
xor
jecxz
adc
into
repnz
rcr
sub
jmp
scas
cmc
or
ret
daa
pop
mov
repnz
cmc
dec
icebp
xchg
dec
ror
jl
cmp
fnsave
push
and
aad
mov
sub
pop
and
in
(bad)
pusha
in
inc
mov
dec
jecxz
xchg
fst
stos
inc
lds
call
iret
test
mov
jb
sub
jle
stos
das
sub
jnp
jae
jmp
in
inc
mov
xchg
cmp
fisubr
es
loope
hlt
loopne
jp
aaa
ret
mov
mov
inc
push
lods
sahf
gs
leave
sub
rcl
and
and
dec
and
in
das
sbb
xchg
loopne
xchg
int
sub
and
dec
out
add
jae
stos
push
push
jmp
xor
jg
push
outs
mov
mov
jne
jae
icebp
jno
dec
inc
sti
jo
cmp
popf
outs
popa
push
dec
pusha
shl
cwde
lea
xlat
imul
dec
mov
inc
fcom
jae
inc
stos
jl
xchg
shl
and
mov
inc
and
mov
in
aaa
fnsave
call
xor
lods
and
cmp
and
jmp
(bad)
ror
mov
loop
bswap
arpl
shr
scas
sbb
add
jmp
push
cli
ror
jbe
jge
inc
pop
loopne
js
movs
shr
std
fs
fst
dec
retf
lds
cld
fisub
mov
xchg
dec
fistp
fimul
fdiv
les
xchg
mov
out
dec
dec
push
mov
sub
jcxz
sahf
cmp
in
xor
lods
push
sub
dec
sub
std
stc
(bad)
jl
repz
cli
inc
aaa
jne
cmp
push
inc
add
sub
(bad)
sbb
popf
pop
pop
mov
inc
jmp
rcr
dec
pop
jb
xchg
addr16
sti
pop
sar
dec
push
add
imul
into
aaa
test
push
adc
pop
cdq
clc
fidiv
cmp
or
test
cs
rcr
int3
and
ds
icebp
add
add
inc
and
sub
adc
cmp
test
repnz
sbb
ficomp
add
inc
pop
in
jb
or
add
xor
and
cmp
inc
mov
cmp
sahf
fld
jp
fs
xchg
push
and
ins
scas
ds
cmp
in
out
cmp
imul
shl
pop
shl
mov
pop
dec
jle
fiadd
out
call
fcomp
xchg
cli
fbld
xchg
jo
int3
(bad)
and
xor
mov
pop
sbb
(bad)
and
sbb
in
cwde
inc
outs
cmp
push
adc
jns
mov
cmp
jb
(bad)
mov
push
int
call
movs
(bad)
out
xchg
ror
sahf
lahf
fwait
mov
sbb
mov
enter
repnz
test
and
pop
cmp
sub
je
mov
dec
sub
xchg
and
dec
pusha
loop
jns
cdq
(bad)
out
push
inc
outs
sub
jo
aaa
addr16
jb
mov
xchg
mov
ret
or
in
cmp
mov
call
inc
sub
out
mov
add
addr16
mov
ins
call
dec
xlat
push
cwde
stos
dec
pop
xchg
push
loop
(bad)
sbb
mov
xlat
mov
ror
dec
test
push
sub
js
inc
xor
mov
or
pushf
arpl
mov
cmps
adc
xchg
js
inc
or
enter
mov
rcl
mov
loope
inc
dec
cli
mov
jmp
mov
lds
cmps
or
es
adc
add
lods
push
dec
dec
pushf
ja
xchg
ds
scas
fmul
out
push
leave
inc
hlt
(bad)
inc
call
popf
push
mov
sbb
cmp
or
or
push
push
repz
and
cdq
sub
push
jbe
les
inc
dec
cmps
outs
out
mov
inc
cmp
jmp
inc
dec
sub
fild
lock
cmc
dec
sti
dec
add
out
ds
jge
fsub
stos
inc
pop
fs
loopne
aad
jmp
(bad)
test
(bad)
test
jecxz
jb
imul
push
and
stos
mov
adc
icebp
and
xchg
loopne
rol
push
cwde
add
outs
or
xchg
stos
cs
add
xor
mov
sub
xor
pop
cmp
ja
ds
jns
add
outs
in
mov
cld
xor
add
sahf
and
outs
adc
rcl
shl
or
push
dec
shl
movs
dec
js
mov
fwait
aam
es
mov
and
mov
daa
lds
cdq
out
add
mov
sti
mov
ins
xlat
fild
div
push
loopne
mov
cli
xchg
in
and
jp
xor
xchg
pop
int
aam
dec
lods
push
fsubr
fidivr
pop
add
inc
fcom
or
rol
mov
jo
jl
int
(bad)
jbe
cdq
mov
mov
(bad)
jmp
push
jp
out
clc
movs
push
(bad)
imul
mov
arpl
push
ins
dec
imul
rcl
inc
icebp
add
jge
add
popa
rol
lea
(bad)
xchg
(bad)
xchg
test
ror
mov
sub
je
jae
or
ret
lock
int
ins
push
test
mov
xchg
jp
push
push
cmp
(bad)
sbb
add
(bad)
repnz
xchg
mov
mov
in
xor
push
aas
xor
aad
xor
adc
dec
add
das
or
sahf
or
outs
loopne
jg
mov
jno
fldenv
push
icebp
mov
ds
sbb
out
pop
cmp
fistp
jo
inc
scas
fs
test
or
lds
sbb
push
je
xor
(bad)
mov
jmp
scas
pop
addr16
cmp
retf
(bad)
jg
sbb
and
lods
or
icebp
(bad)
std
xor
dec
xlat
push
test
pop
mov
xchg
sti
ja
inc
xchg
rcr
push
icebp
ds
pop
mov
xchg
pop
push
ret
mov
mov
xor
aam
jmp
mov
fisub
retf
aas
(bad)
push
lods
mov
lods
(bad)
imul
sub
dec
rol
daa
daa
das
pop
mov
sbb
mov
jno
out
imul
ficom
adc
sbb
rcr
icebp
jmp
jmp
icebp
loop
dec
ja
or
stos
outs
push
cli
cmp
pop
scas
outs
push
repz
xlat
in
push
cs
and
adc
nop
adc
or
outs
popf
loop
jmp
fild
mov
aas
fdivr
sub
mov
pop
ftst
mov
mov
push
rol
dec
mov
test
mov
nop
jno
inc
out
mov
mov
xor
fadd
aam
frstor
mov
mov
pushf
leave
repz
mov
cmp
push
in
ss
add
hlt
(bad)
(bad)
scas
mov
retf
mov
and
into
jnp
xlat
pop
adc
inc
mov
add
adc
retf
mov
mov
shr
in
enter
mov
dec
call
fld
inc
add
popa
pop
stc
ret
sbb
jmp
rcl
clc
jg
cwde
scas
cmp
xchg
jnp
mov
xchg
out
arpl
or
push
inc
jo
das
ss
cmp
shr
pop
out
popf
mov
and
gs
adc
jnp
xor
and
dec
adc
adc
lods
inc
adc
sub
or
xchg
and
xchg
nop
(bad)
ja
in
test
and
shl
stos
dec
jecxz
int3
jmp
outs
and
mov
sbb
inc
adc
adc
xchg
cmps
jne
ficom
lea
pop
jns
jg
jg
sbb
lock
lahf
adc
out
pop
(bad)
mov
inc
or
add
pushf
jns
stc
xchg
scas
xchg
std
ja
(bad)
add
sar
cmps
frstor
lea
aas
jmp
ins
xchg
mov
in
xlat
in
cmps
into
inc
dec
xchg
add
cmp
xor
push
and
dec
adc
adc
aam
dec
lods
popf
and
push
bnd
cmp
push
icebp
or
mov
cmc
icebp
test
push
inc
cmc
cmp
xor
das
fucom
out
bound
jp
xor
xor
mov
hlt
icebp
js
mov
sbb
ins
cmp
pop
sbb
and
pop
or
or
jp
sub
push
je
test
and
addr16
xchg
xchg
mov
mov
mov
cmp
xchg
mov
sub
push
and
push
daa
adc
push
push
dec
adc
cs
cmps
repnz
bound
or
(bad)
mov
pushf
retf
aad
fldenv
lods
jno
or
push
push
js
lock
pop
lahf
out
cmp
mov
in
das
data16
test
cmp
mov
pop
sbb
jmp
aad
add
ins
mov
dec
dec
shl
popf
and
sbb
movs
push
mov
daa
xor
pop
(bad)
add
mov
hlt
cmp
aas
jnp
(bad)
jge
imul
les
inc
adc
or
ds
cmp
jb
sub
adc
or
mov
in
push
out
adc
sub
pop
cmps
fistp
aad
jge
cmps
cmp
pop
mov
mov
fs
retf
adc
es
mov
add
fld
push
lock
jp
pop
xchg
lock
push
pop
sbb
scas
pop
cwde
fcom
js
push
push
hlt
xchg
jmp
push
loope
out
dec
sar
inc
lods
lods
mov
adc
sti
daa
jl
cmp
es
pushf
dec
mov
mov
inc
cwde
test
push
and
push
xchg
cmp
rcl
into
rcl
or
imul
mov
jge
push
add
retf
xor
(bad)
and
rol
fldcw
xchg
(bad)
cld
add
dec
cmp
push
and
stos
test
(bad)
xchg
in
jle
in
popf
push
lock
sbb
retf
adc
lock
and
(bad)
aaa
rcl
test
scas
enter
fsub
mov
fcom
push
cmps
int
inc
lods
adc
or
cmp
push
add
and
push
cmp
xlat
sahf
jmp
lods
outs
stos
and
pop
imul
pop
cmp
sub
cld
jae
(bad)
fwait
xchg
dec
jg
jbe
dec
pop
loop
push
pop
cli
sbb
loope
clc
and
mov
in
(bad)
sbb
rol
lea
retf
daa
fidivr
jg
and
movntq
sbb
push
xchg
mov
sbb
mov
sub
cld
repnz
mov
add
and
in
jecxz
or
movs
xor
dec
adc
adc
and
lods
imul
(bad)
pop
ja
div
jo
cmp
add
sti
push
cmovne
mov
mov
mov
mov
movs
cmps
push
(bad)
cmp
sbb
adc
hlt
in
aas
sbb
outs
stc
mov
cmps
(bad)
test
in
mov
inc
enter
add
and
push
sbb
popf
out
stc
mov
pusha
fcomp
sub
xchg
add
and
xchg
adc
into
mov
mov
cmp
add
jl
fnstcw
fisttp
popf
or
ins
fisttp
call
sbb
mov
nop
iret
cmp
sar
adc
mov
fwait
push
or
iret
add
pop
mov
imul
dec
jbe
inc
mov
int3
mov
mov
dec
in
mov
push
aaa
inc
popf
out
repnz
inc
dec
fldcw
scas
mov
(bad)
out
add
jge
dec
aam
mov
cmp
pop
cmp
inc
push
push
push
call
jge
xor
movs
mov
cli
jns
mov
ins
xchg
movs
push
cli
cmp
data16
imul
and
repnz
shl
and
pop
xor
fdiv
inc
push
iret
bswap
sub
xor
(bad)
movs
mov
(bad)
cld
mov
fistp
sbb
shr
scas
pop
and
das
dec
cwde
daa
fbstp
xor
std
or
mov
or
mov
add
retf
push
and
push
in
pop
jns
in
test
mov
clc
lea
xlat
cmp
int3
add
push
inc
jne
imul
fs
ds
hlt
pop
repnz
and
mov
or
mov
and
xchg
lods
(bad)
lds
xor
xchg
shl
sub
sbb
adc
lods
sbb
les
int3
pop
stc
xchg
and
cmp
xchg
dec
adc
jl
lods
xchg
sbb
fstp
pop
sub
xchg
add
fdivr
repz
sbb
nop
push
mov
and
pop
(bad)
push
pop
and
jecxz
into
mov
aam
add
aad
mov
mov
or
and
lock
movs
mov
jmp
and
add
sbb
or
mov
sbb
adc
push
je
out
(bad)
sub
lods
jo
dec
in
outs
push
pop
pop
cld
pusha
mov
and
jae
out
jp
sub
jnp
jmp
push
popf
fcmove
sbb
shl
fldcw
adc
aaa
xchg
mov
das
mov
imul
lds
xor
cmp
mov
push
in
push
inc
xlat
inc
dec
sub
ror
and
mov
call
das
je
sti
call
mov
add
add
and
add
rcl
sub
sub
ret
fld
imul
push
add
push
dec
ret
les
call
mov
mov
sti
cli
pop
mov
sti
imul
hlt
lods
mov
(bad)
xor
shr
sbb
xlat
dec
in
xor
test
in
and
xor
cmp
lods
outs
pop
inc
push
sub
mov
dec
ds
out
xchg
pop
cdq
inc
add
or
dec
or
xor
mov
retf
jp
cwde
movs
ss
add
inc
mov
sbb
and
add
sub
and
test
jno
icebp
jp
mov
push
sbb
mov
cmp
fstp
mov
out
clc
pop
neg
sbb
in
ins
sub
test
mov
sti
scas
fnsave
push
into
ins
add
pop
inc
or
push
call
arpl
fiadd
cmp
inc
and
inc
(bad)
int
cmp
jge
cdq
scas
or
mov
jo
pushf
xchg
outs
(bad)
ja
push
pusha
imul
in
mov
cmc
into
add
jmp
pop
jne
sub
aad
in
ja
or
setp
lods
sbb
in
fsubr
mov
sub
(bad)
shl
shl
cmc
pop
add
inc
push
push
sub
addr16
gs
inc
or
xor
scas
mov
ins
or
movs
and
out
sbb
cmp
ror
addr16
and
enter
fs
dec
mov
xchg
jnp
and
loop
sub
arpl
cli
inc
push
shr
push
xor
add
pop
inc
jnp
add
and
cmps
sub
das
je
jl
lds
mov
push
retf
scas
jl
lds
dec
cwde
cmp
inc
in
inc
push
pop
mov
(bad)
sub
xchg
xchg
xor
xor
pop
in
out
jb
or
push
inc
jg
adc
inc
jle
dec
mov
and
stos
mov
xlat
fcom
ret
sub
and
outs
mov
mov
(bad)
adc
lods
(bad)
push
sahf
sbb
inc
out
push
xor
jne
xchg
or
scas
mov
shl
in
mov
pop
jo
jmp
pop
popa
xor
aad
mov
add
jecxz
cmp
pusha
retf
shr
mov
pushf
sbb
mov
sahf
pop
out
sub
pop
and
addr16
adc
xchg
cmps
cmp
or
int
push
and
sub
cmp
pop
leave
push
es
sub
fild
out
dec
in
icebp
aaa
or
and
not
push
inc
mov
pop
test
pop
ss
and
fnsave
push
or
lods
sub
leave
cmp
xchg
sbb
mov
mov
popf
loope
and
fmul
retf
enter
adc
shl
stos
jmp
cwde
dec
adc
stos
push
mov
jmp
shl
movs
shr
call
xlat
xchg
jl
xchg
test
sub
sbb
sub
mov
dec
pusha
xor
gs
inc
dec
pop
pop
cmps
je
pop
mov
jmp
loop
jnp
imul
daa
enter
ja
xchg
fiadd
dec
hlt
cmp
ins
sbb
cmps
data16
sub
push
mov
jbe
shl
cmps
stc
(bad)
jg
dec
pushf
out
(bad)
jno
sub
adc
push
dec
sub
cmp
out
jb
std
or
sahf
stos
pop
loopne
cmp
push
out
je
push
mov
xchg
sbb
call
fcmovb
repnz
aam
jne
cld
mov
mov
into
pop
repnz
fdiv
push
adc
xchg
push
dec
or
icebp
mul
imul
and
mov
repnz
scas
test
cmps
call
or
loope
adc
iret
adc
and
push
mov
out
cmps
in
add
loop
xchg
lods
xchg
and
jae
or
add
(bad)
sbb
movs
cmp
jecxz
jo
mov
(bad)
xor
mov
shr
pushf
lahf
inc
sbb
adc
pop
dec
mov
push
xlat
addr16
pusha
adc
sub
xor
aaa
jo
push
cs
lods
fwait
jne
test
mov
jecxz
push
popa
and
push
hlt
fwait
or
mov
mov
ret
add
popa
mov
push
out
or
std
ja
and
and
pop
adc
fs
test
rcr
dec
fisub
gs
pushf
imul
adc
xlat
jp
repnz
mov
mov
inc
icebp
lods
loopne
iret
mov
stos
adc
data16
push
sar
cld
ret
pushf
repz
jg
ret
aaa
test
mov
sub
ja
xor
cmp
daa
xchg
mov
pusha
pop
pop
add
dec
xor
daa
retf
loopne
push
xchg
or
test
cmp
mov
mov
leave
popf
xor
fstp
jg
sbb
and
inc
xchg
jg
xchg
or
mov
sbb
cmp
div
jl
inc
dec
or
mov
adc
jb
mov
and
dec
aas
pusha
ja
pop
es
and
inc
adc
push
pop
xchg
xor
stos
ins
das
adc
xchg
cli
push
mov
cli
add
in
lds
jns
ins
add
mov
mov
jb
jg
jge
pusha
sbb
outs
fld
xor
pop
in
nop
daa
xlat
loop
fnsave
mov
xchg
shl
aaa
push
sar
cmps
sub
iret
mov
aas
nop
arpl
repnz
imul
push
jne
push
out
and
xchg
add
add
out
sub
ret
jne
add
call
in
mov
adc
call
xchg
fidiv
fldcw
sahf
sbb
je
and
jecxz
dec
enter
imul
retf
mov
repnz
ins
jecxz
xor
(bad)
cld
or
std
icebp
(bad)
rol
je
(bad)
cmc
and
xchg
je
mov
xor
mov
mov
fsub
xchg
test
loopne
jb
cld
pop
push
mov
mov
jl
shl
int3
(bad)
arpl
mov
sbb
imul
stos
or
inc
mov
xchg
lods
mov
mov
mov
jge
pop
enter
fdivr
and
dec
mov
sbb
ins
dec
bound
cmp
push
pop
adc
in
jp
xchg
in
popa
sub
inc
xor
popa
icebp
mov
je
arpl
loopne
inc
cmps
call
cmp
and
popf
push
inc
(bad)
mov
sbb
pop
push
movs
jns
jns
xchg
xchg
push
push
fdiv
loopne
outs
and
lds
addr16
xor
inc
inc
test
ret
sub
sbb
ret
test
ret
ss
dec
mov
pop
fs
push
repnz
mov
mov
sub
sbb
mov
test
pop
test
(bad)
into
add
push
aas
add
mul
call
ficom
loopne
loop
test
clc
jp
fstp
out
jmp
ret
bnd
and
add
fcom
in
aas
lods
(bad)
or
fnstenv
pop
shr
outs
cmp
lds
jnp
pop
and
(bad)
and
(bad)
out
imul
mov
mov
in
xor
jo
xchg
add
or
xchg
ret
jo
jmp
jno
int3
jl
int3
scas
xchg
es
xchg
out
pusha
call
mov
xchg
inc
fld
xor
retf
or
loop
pop
mov
les
test
jge
fisub
test
inc
(bad)
int3
jge
fld
ret
jg
sub
js
ja
stc
or
xchg
adc
aad
test
cmps
mov
adc
out
adc
(bad)
cmp
dec
loop
jmp
hlt
adc
cmp
sub
out
mov
fs
dec
call
ins
push
bound
clc
push
dec
jnp
adc
cmp
jae
je
mov
fsubr
sbb
dec
mov
mov
sti
dec
mov
dec
mov
data16
(bad)
addr16
adc
pop
out
mov
ret
cmp
pop
call
xor
inc
test
out
adc
mov
dec
lahf
scas
bound
call
outs
int
stos
(bad)
jl
sahf
dec
xor
cmp
mov
xchg
(bad)
scas
lods
ret
movs
fisubr
sbb
call
xchg
test
ret
adc
add
jbe
test
inc
mov
fmul
out
cmps
scas
dec
cmp
mov
js
popf
push
mov
cmps
lock
xchg
into
fdiv
stos
mov
dec
int
mov
pusha
retf
cwde
stos
retf
xor
(bad)
lahf
fst
in
not
mov
popa
push
cmp
imul
push
cmp
test
jp
inc
daa
mov
inc
aaa
sbb
adc
mov
or
fwait
mov
into
xchg
jnp
jl
xchg
dec
aas
and
xchg
js
aas
inc
push
xchg
and
pcmpeqb
aas
dec
aam
loop
dec
cmc
das
hlt
int
sub
inc
fs
add
dec
mov
jg
mov
repnz
push
enter
movs
pop
jecxz
or
xchg
sub
out
shl
das
cdq
das
rcl
and
test
cwde
aam
movs
mov
stc
sub
sbb
xor
imul
lahf
dec
push
and
push
pop
and
imul
sahf
xor
fcomip
xchg
ins
cmp
es
cmps
fdivp
(bad)
and
cdq
in
cdq
cmps
jmp
mov
(bad)
rol
adc
mov
push
addr16
jnp
lods
cmp
and
mov
aad
out
pop
clc
pop
mov
adc
jno
xchg
stos
loope
movs
xchg
mov
jbe
push
adc
mov
inc
daa
xor
popa
inc
inc
dec
inc
adc
xchg
mov
mov
jbe
fs
add
cli
into
cdq
jbe
pop
sub
pop
adc
sbb
mov
jns
inc
xor
lahf
imul
or
cmps
or
jae
mov
int
ror
adc
icebp
xor
dec
ss
xchg
push
aad
and
fucom
and
movs
pop
mov
mov
hlt
pop
sbb
aaa
rcr
mov
cmps
sahf
sub
in
in
int
sar
pop
test
ficomp
pop
imul
adc
fldcw
adc
cwde
lds
stos
dec
cmp
cmp
repnz
jne
and
push
pop
lock
lock
call
in
adc
popa
xor
jge
sti
xor
jge
cmps
mov
dec
leave
jbe
ret
inc
jmp
adc
add
push
mov
mov
fptan
mov
hlt
mov
add
add
call
fiadd
repz
add
(bad)
jo
mov
loope
clc
jno
ret
jge
repnz
cmp
adc
fadd
cmp
sub
cmp
and
loop
and
sub
(bad)
fwait
mov
adc
xlat
je
(bad)
imul
push
movs
add
ins
call
xor
(bad)
mov
xchg
pop
cmp
jmp
mov
outs
cmp
mov
add
sub
shr
sub
bound
jmp
addr16
dec
sub
jle
push
or
repz
xchg
jnp
test
pushf
hlt
push
push
ins
psubusw
mov
int3
mov
aam
callw
adc
repnz
jns
push
xchg
pop
test
adc
aam
(bad)
loopne
inc
pop
pop
aad
xchg
out
imul
repz
inc
les
inc
and
aaa
inc
and
inc
cmp
mov
jns
xor
sub
cmps
pusha
pop
mov
fldcw
outs
jmp
pop
fild
pop
or
outs
add
inc
test
mov
test
inc
pop
jmp
fcomp
push
sub
and
adc
sbb
push
fsub
je
cmps
push
mov
jge
repz
dec
mov
rcr
fidivr
sahf
inc
add
mov
pop
mov
stc
pop
or
jmp
ret
ja
out
and
out
mov
das
jge
in
repz
push
jl
fwait
icebp
jno
movs
test
in
sahf
loop
movs
xchg
sub
dec
sbb
outs
mov
dec
mov
mov
cmps
(bad)
and
ins
pop
mov
(bad)
inc
add
and
idiv
mov
retf
push
popa
(bad)
xor
ror
daa
outs
ins
ret
repnz
fsub
and
pop
scas
pushf
or
push
sub
ins
and
pop
test
dec
cdq
or
add
cmps
outs
shl
mov
es
imul
mov
test
sbb
push
pop
add
dec
stc
(bad)
pushf
pop
fadd
nop
jge
pop
pushf
fwait
inc
loop
test
jl
popf
or
popa
mov
and
push
sar
jmp
dec
ja
(bad)
jg
mov
mov
cwde
adc
or
call
add
fcomp
rcr
addr16
sbb
add
dec
pop
mov
rcr
rcr
lods
(bad)
fs
ffree
pop
jge
fdivp
jo
ret
call
ret
jbe
mov
into
xor
ins
adc
cmp
mov
pop
sbb
mov
dec
adc
retf
ret
inc
xchg
jnp
add
ins
movs
push
ret
fadd
jg
dec
xchg
cmp
adc
(bad)
rol
jae
cli
jno
(bad)
in
scas
imul
mov
mov
ret
jecxz
das
retf
fnstsw
neg
in
(bad)
mov
enter
cmp
fisubr
or
fld
cmps
(bad)
repnz
or
cmp
js
xchg
js
push
aam
cs
mov
inc
(bad)
je
adc
push
neg
jmp
fidivr
mov
loop
out
mov
sub
fs
push
into
adc
xor
mov
(bad)
jge
lahf
push
ja
mov
repz
pop
daa
jbe
sti
and
mov
push
cmp
xor
je
das
mov
cdq
xchg
loop
(bad)
test
jnp
shr
mov
xchg
lahf
out
mov
bound
shl
mov
lods
sbb
lock
(bad)
and
push
or
push
pop
into
dec
jb
xor
mov
test
jle
dec
lahf
mov
cmp
(bad)
mov
xchg
je
enter
imul
mov
sub
ficom
mov
das
mov
xchg
sbb
call
je
(bad)
xchg
mov
add
mov
imul
je
pop
into
sbb
iret
push
mov
xchg
cld
mov
cld
and
das
(bad)
mul
sbb
add
dec
jne
jl
sub
jmp
repnz
outs
adc
and
xlat
cmps
lahf
sub
xor
cdq
inc
sbb
or
xchg
sub
and
test
das
xlat
jo
(bad)
aad
retf
(bad)
pop
mov
push
sub
pop
(bad)
lock
data16
sar
into
dec
or
pusha
adc
ds
sub
mov
aam
lods
sbb
fsub
fild
aad
pop
ficom
mov
mov
rsm
test
push
mov
bound
sub
sbb
sub
adc
cmp
xor
cmp
jl
mov
xchg
out
int
lds
mov
xchg
aam
inc
or
inc
add
mov
sub
cmp
mov
hlt
shl
xchg
cwde
pop
sub
test
dec
xor
push
jge
cmp
dec
mov
iret
lods
test
add
les
imul
jo
hlt
dec
push
nop
cmp
pushf
mov
mov
dec
outs
mov
fadd
pop
jp
adc
(bad)
out
xlat
xchg
mov
ja
inc
pop
retf
xor
in
push
data16
leave
in
out
jae
push
xor
push
test
and
(bad)
fcom
clc
jmp
adc
pop
(bad)
fnstenv
stos
outs
ror
fidivr
jae
stc
cmp
leave
loope
test
fstp
xchg
repz
mov
or
mov
inc
fwait
mov
stos
aad
push
push
in
test
daa
jg
mov
paddsb
push
hlt
xchg
push
loop
aaa
mov
je
mul
pop
aas
xor
mov
dec
dec
dec
fsub
mov
sbb
or
pop
adc
mov
fstp
call
xor
jno
xor
fst
sbb
push
cmp
bound
es
imul
push
rcl
fnsave
jge
clc
in
or
add
jg
mov
cmps
mov
mov
(bad)
sbb
ins
mov
mov
push
adc
cdq
pop
mov
dec
(bad)
add
adc
xchg
mov
mov
jg
out
out
shr
mov
(bad)
stc
ficom
push
push
cmps
cs
add
ss
push
push
lods
xlat
sub
std
and
jecxz
dec
push
sbb
pop
lods
fnstenv
call
and
inc
stos
and
jge
cmp
sbb
xchg
jne
into
xchg
out
pop
jns
and
nop
sbb
outs
ret
(bad)
cmp
repz
xchg
sahf
mov
scas
xchg
and
and
xchg
pop
(bad)
enter
mov
pop
dec
nop
push
sahf
pushf
popf
repz
pusha
(bad)
sub
lods
(bad)
(bad)
xor
leave
push
addr16
and
dec
iret
or
gs
or
push
es
sub
xor
and
adc
pop
(bad)
std
int
(bad)
push
jns
in
and
aad
stos
dec
mov
pop
pop
sbb
cmp
retf
adc
pop
sbb
sub
pop
cmps
rol
sub
in
cmp
sbb
or
xor
pop
dec
cs
cld
cdq
jb
mov
inc
mul
mov
mov
sub
and
cmp
out
xchg
(bad)
sub
xchg
xor
and
cdq
and
repnz
std
pop
push
mov
aad
mov
sbb
rep
pop
push
cld
pop
sbb
push
sub
test
(bad)
es
cli
das
pmaxub
cmp
fldenv
mov
mov
sub
fistp
movs
pop
jle
aam
sub
push
(bad)
mov
aaa
fwait
inc
or
dec
loope
pop
icebp
mov
inc
push
inc
jmp
cmc
mov
scas
outs
push
dec
cs
movs
add
sbb
mov
dec
push
outs
xchg
pop
mov
xor
mov
and
dec
ins
hlt
jl
jo
jg
fsub
enter
mov
test
add
call
adc
iret
push
popa
cmp
jae
icebp
adc
inc
jne
movs
stos
shl
lahf
pushf
jno
jl
dec
xlat
add
call
jne
fs
jne
pop
fbstp
push
pop
adc
dec
inc
scas
adc
jb
in
in
mov
ja
pop
cld
das
xchg
sahf
or
xor
jne
in
fdivr
mov
(bad)
xlat
xchg
and
leave
arpl
and
sbb
test
scas
pop
xor
sub
stos
pop
shl
pop
xchg
repnz
or
jmp
pushf
outs
adc
out
pop
scas
push
adc
sbb
dec
(bad)
push
jmp
out
sbb
lea
lods
cmp
push
rcl
xor
inc
popf
pushf
add
cmp
not
neg
iret
dec
ror
push
add
out
mov
pop
jb
les
xor
ds
add
cdq
loope
inc
sub
fucomip
and
cmp
dec
sub
adc
jne
and
in
xchg
inc
jae
test
fisttp
aam
pop
push
dec
shr
xor
dec
inc
mov
in
ja
ins
dec
mov
fcomp
loope
mov
stc
call
cmps
xor
mov
or
push
test
add
xchg
test
xchg
and
ret
loope
cmc
sbb
mov
cld
xor
inc
mov
mov
push
xor
test
mov
pop
test
jne
cmps
in
pop
rcr
mov
inc
imul
fdiv
jecxz
lahf
push
clc
mov
test
jp
pop
dec
in
push
mov
rcr
and
fsub
sbb
dec
ror
mov
bound
rcr
adc
outs
loop
adc
(bad)
movs
add
sbb
inc
shr
add
cmps
adc
sub
and
dec
jns
call
xor
dec
mov
movs
gs
pusha
call
mov
xchg
xchg
ficomp
in
xchg
jns
ud1
xchg
xor
sbb
jle
lods
rol
arpl
dec
jb
retf
mov
es
inc
mov
retf
ffreep
pop
dec
popf
xor
mov
loopne
(bad)
mov
iret
ret
sub
(bad)
mov
pop
bound
and
ret
in
mov
mov
sub
add
jbe
adc
aad
cmp
sbb
xor
or
push
xchg
(bad)
sub
cmp
jle
int3
call
sub
add
dec
inc
lock
je
and
mov
add
lea
lds
lahf
add
inc
add
jmp
jp
imul
jnp
and
xlat
pushf
int
mov
push
nop
adc
xchg
test
out
fwait
int
in
in
jae
sub
sbb
mov
movs
sbb
out
add
jbe
adc
(bad)
and
mov
frstor
push
jae
sub
nop
movs
cli
cmp
arpl
mov
mov
in
or
pop
mov
adc
lods
sub
mov
push
stc
and
loope
test
je
mov
jecxz
hlt
test
in
fs
xor
pop
xor
gs
div
add
retf
fild
inc
dec
sbb
jp
xchg
pop
loope
push
cmps
daa
cmp
adc
adc
xchg
int3
loopne
jne
inc
mov
mov
or
pop
mov
pop
cwde
sub
cmp
and
bound
cli
nop
adc
pop
sbb
in
sbb
mov
mov
add
dec
mov
pusha
and
jae
es
enter
loope
sar
push
repz
adc
outs
mov
shr
jae
(bad)
fwait
push
xlat
(bad)
stc
and
inc
push
push
push
mov
adc
rol
mov
jnp
cwde
jb
mov
sub
in
ja
test
sub
retf
loopne
xchg
and
lock
pop
xor
xor
jg
int3
out
fnstenv
adc
lock
adc
imul
cmp
push
rol
push
retf
bound
mov
or
test
scas
lock
jnp
test
and
fisubr
stos
ins
push
mov
in
loopne
push
mov
mov
pushf
rcr
ds
adc
or
stos
lock
or
mov
mul
imul
push
test
push
ins
loope
imul
adc
dec
push
test
fistp
push
push
fsubr
cmps
push
loop
mov
cmp
sbb
inc
pop
imul
fldenv
int
cmp
push
fxam
fcomp
cs
mov
in
add
or
pop
sbb
aaa
push
cld
dec
stos
in
gs
outs
inc
and
out
lods
popa
ins
and
jg
shl
ss
jge
mov
add
mov
adc
and
inc
lea
inc
sub
(bad)
mov
push
push
mov
add
sbb
inc
and
ja
mov
cmps
push
inc
xchg
out
shl
xchg
das
lds
ins
xor
addr16
and
fcmovnb
push
pop
adc
dec
jae
cli
mov
fnsave
xor
xor
push
out
cmp
in
cmp
dec
adc
imul
cmp
cmp
inc
out
cmps
pushf
(bad)
push
into
inc
inc
movs
lds
call
stos
mov
cmps
mov
mov
cld
pop
retf
or
add
(bad)
call
push
dec
in
inc
xchg
cmp
mov
leave
aas
add
sub
adc
mov
hlt
in
mov
dec
mov
pop
mov
icebp
imul
inc
sbb
xor
bound
loope
sub
adc
push
in
sub
fcomip
lea
sti
movs
mov
dec
rcl
popf
aam
or
sbb
xor
fidiv
(bad)
jle
ins
adc
inc
adc
fld
mov
adc
xchg
cmp
test
mov
inc
jno
pop
mov
stc
shl
xchg
div
or
or
cmps
mov
sbb
scas
jl
inc
push
iret
out
aaa
ja
pop
sahf
pop
ins
(bad)
sti
sahf
xor
out
mov
std
pop
sti
adc
sub
mov
inc
or
movs
push
mov
adc
inc
fs
fs
add
out
mov
int3
shr
and
mov
pop
pop
outs
fisub
jg
lods
xor
or
mov
stc
enter
mov
xor
inc
xchg
mov
(bad)
loope
jbe
pushf
ret
pop
mov
pop
mov
jnp
call
in
cdq
in
xchg
rcr
push
and
adc
jle
in
jb
mov
sahf
int3
(bad)
in
jecxz
pop
add
xchg
and
cli
fs
pop
sub
and
daa
lock
mov
and
cmp
aas
and
sar
inc
or
gs
fwait
leave
ins
and
daa
lds
aam
int
sbb
out
cmps
xor
shr
movs
jno
sbb
shl
mov
jge
aam
fs
sub
push
inc
xchg
xchg
movs
mov
test
pop
push
nop
xchg
ds
ror
inc
lods
ja
push
xor
cmc
mov
mov
frstor
jmp
ret
mov
nop
loop
xchg
push
shr
lahf
ret
cmp
mov
or
retf
cmp
xor
gs
xchg
cli
scas
aam
into
out
xchg
pop
dec
lock
push
icebp
xchg
aam
lahf
bound
test
jle
jge
arpl
pand
sti
mov
cmp
pop
enter
push
dec
gs
aad
push
pop
mov
and
mov
out
adc
mov
inc
sbb
push
or
ja
sbb
sbb
call
cwde
pushf
jmp
add
scas
sub
inc
mov
xor
ins
test
es
clc
jmp
arpl
mov
pusha
(bad)
fstp
jnp
push
movs
out
adc
fmul
add
fnstenv
mov
xchg
out
clc
mul
or
xchg
ins
out
ds
cld
test
mov
stos
aaa
jo
(bad)
adc
pushf
ficomp
mov
push
out
js
jmp
jp
xor
bnd
stc
jmp
ds
mov
retf
xor
cs
in
retf
ds
rol
rol
adc
out
loopne
aas
loopne
test
(bad)
enter
cs
mov
outs
cmp
xor
pushf
and
inc
repz
pop
scas
sahf
int
cmps
das
sbb
inc
int3
cld
mov
cmp
jmp
inc
sbb
cs
xor
xor
xchg
leave
xchg
jno
int
dec
jne
dec
xor
jle
nop
shl
jb
mov
add
stc
add
jbe
adc
cmp
cwde
lahf
(bad)
jl
mov
mov
jno
rcr
mov
mov
pop
add
cmpxchg
jmp
mov
fwait
std
add
xor
call
push
sar
pusha
cmp
mov
sub
addr16
mov
cmp
ret
test
push
fsub
in
sar
add
add
dec
jnp
cs
mov
aad
pop
push
dec
mov
jl
sub
push
jl
std
add
push
in
jge
mov
adc
or
fbstp
cli
shl
cmp
mov
adc
or
scas
mov
movs
cdq
in
cmp
and
and
pop
test
je
jle
add
cli
das
lahf
mov
push
fistp
push
jo
mov
or
loopne
sti
mov
cmp
shr
xchg
lock
sti
test
fldcw
imul
xor
dec
push
push
xchg
push
sbb
movs
xchg
sbb
jns
scas
shr
aad
in
into
cmc
nop
dec
mov
jge
ja
inc
or
jo
repnz
xchg
xor
mov
enter
in
pop
scas
mov
mul
jmp
sbb
mov
mov
mul
shl
outs
jae
inc
hlt
sub
ficomp
(bad)
outs
cwde
adc
(bad)
addr16
push
xchg
mov
(bad)
int3
enter
mov
fs
dec
rcr
mov
ins
push
jl
jl
cmps
cmps
(bad)
pushf
imul
call
cmps
inc
jecxz
push
icebp
js
pop
sbb
sahf
(bad)
jl
dec
cdq
xchg
(bad)
or
iret
xchg
cli
bound
cmps
sub
test
aad
(bad)
fwait
push
ss
imul
push
int
nop
jae
inc
push
iret
in
pop
loopne
test
daa
adc
pop
jl
jge
and
dec
fwait
jb
adc
fldcw
pop
push
fdivr
shl
inc
movs
mov
mov
(bad)
mov
ja
xchg
in
sbb
popa
add
ds
cld
and
ins
jae
cmc
pop
xor
sbb
adc
push
jg
lods
push
inc
fisttp
inc
arpl
pop
jp
test
adc
leave
pop
sahf
sub
es
jne
mov
jle
add
lock
movs
lea
mov
push
mov
sahf
mov
(bad)
xchg
jg
fst
arpl
cmp
lods
jmp
mov
pop
push
and
sbb
in
std
fmul
xor
enter
push
mov
push
mul
scas
hlt
add
imul
retf
xor
sbb
jp
pop
mov
movs
out
inc
mov
mov
lahf
(bad)
lods
sub
jmp
sub
loopne
loop
inc
push
outs
icebp
(bad)
in
push
add
dec
pop
mov
or
arpl
mov
and
(bad)
stc
loope
mov
fdivr
jmp
test
mov
es
mov
push
(bad)
mov
add
jae
cmp
or
pop
in
cwde
test
push
sbb
mov
ret
jbe
pop
cdq
cli
jl
fimul
(bad)
mov
cmp
iret
add
in
(bad)
fidivr
push
nop
sbb
nop
in
aas
pop
stc
jp
lock
aaa
sar
call
ss
mov
retf
iret
fcmovbe
sub
dec
inc
rol
inc
cmps
aas
push
pop
(bad)
jbe
test
cmovp
sahf
mov
xor
movs
or
out
or
fsub
jmp
xchg
add
aaa
dec
cmp
ret
cmp
pusha
js
call
dec
adc
mov
or
mov
dec
leave
retf
adc
mov
loope
adc
cwde
lods
ja
push
cmp
jnp
daa
mov
das
out
retf
movs
jecxz
adc
mov
dec
sub
cmp
repz
xor
inc
aad
pop
xchg
sti
cld
add
xchg
cmps
imul
jle
jbe
or
and
cld
adc
add
mov
inc
jo
int
jb
in
or
scas
and
arpl
or
push
or
pop
jb
popa
retf
inc
push
add
adc
hlt
mov
xor
in
mov
push
into
mov
mov
dec
cs
mov
mov
cmc
lods
jnp
cmp
call
fidiv
out
mov
mov
lahf
mov
(bad)
mov
in
lahf
(bad)
adc
adc
jae
sar
ficomp
mov
and
cmp
retf
loopne
(bad)
dec
(bad)
jmp
sub
jnp
jno
push
sbb
inc
dec
dec
inc
stc
test
loop
push
ins
clc
nop
cs
mov
mov
out
popa
mov
test
(bad)
sbb
mov
cmps
jbe
ficomp
jbe
push
imul
add
or
mov
cmp
call
mov
(bad)
ds
mov
cmps
sub
jno
mov
sub
stc
dec
(bad)
rcr
gs
jae
cmp
pop
push
sahf
mov
fwait
lahf
cmc
(bad)
ds
xor
std
std
shr
fdiv
nop
adc
iret
sbb
stc
mov
sub
lods
cmp
pop
popf
jle
dec
sahf
fs
push
aad
fwait
push
dec
ficom
icebp
popa
xchg
sub
sbb
jo
jmp
add
mov
jg
push
inc
push
test
je
adc
mov
fld
push
out
fst
or
add
mov
push
rcr
cs
jge
mov
sti
xor
lea
je
push
cmp
fs
sar
and
cld
mov
outs
mov
pop
(bad)
dec
stc
outs
pusha
lods
xchg
mov
dec
stos
push
inc
xor
repnz
int3
push
daa
jae
movs
sahf
sahf
dec
iret
iret
in
cmp
adc
inc
jne
pushf
or
jmp
sbb
fst
inc
imul
xchg
xchg
div
add
out
into
imul
pop
inc
in
(bad)
mov
shr
test
mov
sub
cld
push
les
mov
pushf
xor
arpl
sbb
mov
cmps
imul
fwait
rol
ds
add
shl
in
(bad)
lds
inc
cmp
test
dec
ss
test
ret
xor
adc
add
repnz
ins
push
pushf
xor
retf
outs
je
adc
scas
jmp
fst
call
imul
jo
jo
push
push
mov
inc
adc
adc
sbb
mov
xor
fcomp
and
or
xchg
out
add
dec
popf
in
adc
movs
fucomip
jecxz
imul
jne
int
push
jle
shr
jmp
sti
inc
inc
loop
xchg
jecxz
sub
bound
inc
pop
sub
sbb
fistp
movs
jecxz
cmp
push
xor
sar
fistp
shr
leave
shr
rol
xor
jns
pushf
out
popa
and
dec
out
lods
ss
in
shl
adc
mov
(bad)
and
sbb
pusha
jmp
mov
jnp
repz
jge
xchg
sbb
data16
add
sub
in
sub
inc
xchg
sub
adc
nop
push
push
xchg
xor
mov
adc
mov
out
cli
addr16
pop
stos
dec
sub
mov
push
mov
inc
test
mov
ds
(bad)
into
loope
and
adc
js
ret
pop
jge
nop
(bad)
mov
inc
add
bound
cmp
test
daa
popa
mov
and
imul
mov
lahf
push
inc
cmp
fild
or
iret
pop
push
hlt
xor
(bad)
mov
retf
xchg
gs
cmps
je
int3
xlat
outs
mov
push
sub
jmp
push
push
add
push
rcr
mul
stos
ja
lods
mov
ins
icebp
mov
dec
mov
das
sbb
test
adc
cmp
aaa
inc
and
cmp
inc
sbb
les
aad
(bad)
retf
test
mul
jne
in
dec
xor
xchg
ficom
and
add
mov
fidivr
aad
inc
inc
out
mov
mov
es
jb
enter
cmp
adc
leave
jle
xchg
fidiv
adc
and
jmp
pop
or
push
call
outs
jnp
sahf
sbb
adc
jmp
sbb
rcl
notrack
push
jae
sbb
add
lds
retf
push
ret
cmp
mov
(bad)
cmc
test
bound
shr
movs
jmp
mov
lahf
js
push
out
nop
repz
add
outs
fimul
xor
ret
loope
sahf
sub
retf
jl
push
adc
arpl
jp
loop
dec
jo
out
dec
pop
pop
repnz
(bad)
push
mov
(bad)
xchg
es
ja
inc
das
cli
adc
retf
mov
test
pop
cdq
ja
sub
cmp
jmp
(bad)
rcr
leave
enter
ds
out
aad
sbb
inc
pop
sbb
fcomp
mov
enter
pushf
lds
adc
into
(bad)
movs
or
je
mov
or
or
ret
inc
call
jg
push
aam
mov
or
fs
scas
aam
std
pop
xor
sbb
js
push
(bad)
jbe
jno
or
inc
xor
aaa
pusha
jnp
hlt
scas
mov
jne
and
imul
jne
push
sbb
add
repnz
mov
lds
out
test
sbb
call
stos
cmps
push
jbe
jae
rsqrtps
sbb
nop
push
lods
out
or
arpl
push
dec
mov
cmps
push
push
ret
xchg
out
aam
adc
out
push
test
rcl
imul
mov
add
shl
test
in
mov
jmp
les
imul
mov
inc
ss
(bad)
repnz
xchg
xor
test
pop
scas
cmp
xor
cmp
shl
stc
push
sub
xchg
push
icebp
cmp
adc
jmp
xchg
call
iret
es
inc
push
test
(bad)
mov
fadd
dec
sub
lahf
jo
gs
mov
mov
aas
scas
dec
add
dec
xchg
loop
jmp
cli
stos
clc
in
icebp
dec
push
cmp
add
xor
pop
mov
loopne
shl
fcmovnb
hlt
mov
cmp
test
pop
push
(bad)
aam
mov
or
mov
dec
add
addr16
and
inc
scas
loope
pop
pop
stos
mov
mov
daa
imul
cld
outs
in
jnp
sbb
sub
mov
pop
es
cdq
ss
dec
or
push
mul
repnz
pop
xchg
cwde
pop
add
sbb
fisub
sbb
xchg
cmps
mov
push
mov
cmp
test
bound
add
cmp
out
jl
into
ins
out
enter
or
ror
pop
in
mov
(bad)
nop
sbb
sbb
outs
test
scas
or
out
pop
and
iret
or
xor
mov
xor
frstor
aam
ds
test
fwait
cs
xchg
icebp
fild
jle
or
xlat
cmc
outs
sub
lock
mov
pop
ins
shr
adc
pop
pushf
mov
daa
popa
pusha
jmp
add
rcl
ds
push
fsubr
mov
nop
repz
cwde
std
jp
popf
add
ins
dec
inc
xchg
cmp
inc
call
repz
sar
ffree
adc
loope
outs
stos
test
mov
data16
shr
out
mov
sbb
xor
jbe
mov
fst
adc
xor
(bad)
push
sub
std
lea
pop
add
arpl
call
fs
jns
fild
rcl
(bad)
add
pop
xchg
or
(bad)
inc
jo
mov
int3
mov
push
mov
addr16
cmps
xchg
adc
jmp
(bad)
or
sahf
scas
sbb
xlat
mov
adc
sub
cmp
shl
sbb
(bad)
push
enter
xchg
retf
call
(bad)
mov
pusha
sar
imul
pop
add
test
fadd
cmp
dec
mov
shl
dec
pop
add
leave
addr16
inc
je
pop
lahf
leave
std
dec
je
cmp
jns
lods
ss
loope
pusha
xor
inc
fidivr
cmp
cmp
test
jg
xchg
fwait
int3
ins
push
mov
cs
jge
push
push
leave
cmps
cld
sbb
cwde
mov
adc
xchg
adc
inc
mov
xlat
mov
repz
addr16
call
cld
daa
out
or
push
je
scas
jbe
push
enter
ss
pop
clc
adc
int3
mov
movs
xor
sbb
xchg
cmp
bound
jle
add
pop
fadd
push
dec
daa
push
or
mov
(bad)
test
xor
sbb
test
sbb
in
pop
dec
push
sti
xchg
sub
es
mov
mov
xchg
test
(bad)
or
inc
int
fwait
outs
pop
pop
xchg
js
int
stc
sbb
imul
xchg
xlat
mov
fstp
repz
inc
sbb
adc
cmp
inc
add
stos
add
scas
pop
adc
cmps
test
sti
ret
xchg
push
loopne
(bad)
std
dec
ret
loopne
dec
dec
mov
inc
loopne
loopne
lods
and
lods
mov
xlat
int
fst
adc
sbb
jmp
add
xlat
fidivr
adc
rol
aam
push
out
push
adc
adc
cs
test
leave
mov
hlt
xchg
out
(bad)
cmp
adc
mov
adc
pop
pop
jb
dec
lock
aam
dec
mov
int
push
inc
push
les
adc
xchg
pop
(bad)
push
arpl
xor
push
stos
fst
aas
sub
jmp
jge
dec
cmp
in
hlt
clc
fisub
sub
sbb
mov
cmp
cmp
test
xor
addr16
mov
ret
sub
(bad)
dec
xchg
test
push
leave
out
pop
scas
pop
jmp
adc
push
mov
cmp
mov
ret
jne
or
and
pop
push
dec
sahf
in
sar
sub
es
in
xor
or
jmp
cwd
nop
sub
add
jbe
cld
dec
stos
jo
iret
dec
arpl
sub
rcr
and
sbb
ins
mov
adc
push
and
fcomi
or
add
cmp
aam
push
out
pusha
add
lock
test
dec
out
pop
test
les
jo
jg
clc
xlat
inc
and
imul
lods
mov
in
cdq
push
mov
leave
rcr
call
out
mov
and
jae
jmp
pusha
test
jbe
mov
ror
mov
das
mov
cmp
mov
inc
in
shl
mov
enter
xor
mov
jg
pushf
ret
(bad)
or
push
nop
movs
mov
dec
(bad)
stos
add
nop
and
movs
imul
nop
fidivr
(bad)
retf
or
je
fistp
iretw
push
and
mov
aad
push
mov
leave
mov
pop
sbb
(bad)
ss
and
jmp
cmps
in
jae
clc
mov
push
retf
ins
dec
lods
mov
or
push
imul
mov
aam
mov
stos
call
cmove
call
or
xchg
out
ja
pop
and
jae
mov
xor
test
add
pop
ret
push
push
icebp
lods
jp
std
popf
xor
jne
push
xor
sub
push
or
int3
pop
mov
mov
inc
mov
loopne
daa
xchg
mov
addr16
fmul
or
and
jnp
es
cmp
pop
jl
ficom
xchg
mov
or
imul
pop
push
popa
stc
jne
jge
sbb
inc
mov
rcl
push
mov
into
inc
(bad)
int3
mov
sub
mov
xchg
adc
adc
aas
aam
rol
dec
outs
les
(bad)
das
fcom
mov
inc
jne
add
push
jl
push
jecxz
cld
add
mov
popf
sbb
pop
out
add
mov
loopne
adc
add
push
retf
stos
cwde
(bad)
das
lods
inc
bound
hlt
adc
lds
lahf
jecxz
jecxz
js
call
jnp
mov
add
gs
out
mov
ficom
add
push
pop
movs
(bad)
pop
jo
mov
js
inc
daa
cmp
cmp
xchg
out
cmp
pushf
test
lods
add
or
hlt
adc
push
push
or
or
outs
jbe
sbb
cwde
lds
jmp
mov
pop
(bad)
xor
frstor
test
call
(bad)
enter
pop
bound
idiv
hlt
sar
inc
ss
push
add
inc
imul
inc
movs
std
test
(bad)
outs
rcr
dec
jmp
les
mov
out
adc
sbb
push
dec
pushf
dec
push
jae
push
sub
jmp
jmp
aaa
pop
(bad)
mov
sub
into
xchg
xchg
jmp
add
sbb
out
xchg
in
push
scas
xchg
data16
iret
outs
ss
arpl
adc
(bad)
cmc
pushf
push
stos
inc
repnz
repz
in
ins
fcomp
jae
inc
shr
push
adc
or
mov
sar
movs
inc
sub
ret
jge
cdq
aad
add
popa
xor
mov
cmp
and
stc
mov
ror
xchg
out
aam
fiadd
adc
sar
rol
popa
and
or
sbb
clc
int3
mov
popf
or
jp
out
push
aas
cmc
out
mov
sbb
scas
pop
jecxz
mov
shr
jmp
jl
movs
push
outs
aam
aad
cmp
imul
xchg
inc
mov
sub
push
push
pop
or
jge
pop
lock
and
pusha
idiv
addr16
push
addr16
pop
mov
mov
daa
jecxz
clc
xchg
and
pop
cs
inc
js
jge
xor
into
(bad)
scas
jbe
sub
retf
cmp
cmp
stos
in
sub
ss
cmp
mov
push
sbb
mov
xchg
js
push
inc
push
mov
push
sub
xlat
xchg
std
je
movs
popa
jno
call
pop
out
lahf
gs
jecxz
in
int
or
push
push
in
pop
lds
xchg
aaa
lahf
add
outs
fcmovne
xor
mov
lock
loopne
shl
fdiv
sbb
inc
or
mov
mov
mov
mov
add
pushf
jg
in
sub
inc
ss
out
xor
mov
jmp
fldcw
scas
sti
js
fwait
add
sub
xchg
dec
aad
out
jmp
fstp
jo
mov
clc
mov
jp
fwait
test
gs
or
movs
cdq
cmc
jno
jl
mov
scas
mov
pop
cmp
sbb
dec
cmp
xor
xor
test
call
or
popf
test
jo
test
idiv
and
jbe
sbb
inc
test
xchg
mov
test
inc
xor
cmc
adc
cmp
push
adc
not
sbb
jp
popf
mov
mov
cmp
stc
popf
mov
imul
test
(bad)
imul
out
sbb
xor
div
sub
sti
xchg
push
push
add
dec
nop
ss
shl
inc
(bad)
fsubrp
pop
fwait
push
loop
fs
ret
dec
xor
jle
mov
and
das
ror
adc
or
mov
lods
mov
push
fcmovnb
xchg
(bad)
jbe
out
mov
mov
out
and
int
inc
xchg
aam
mov
(bad)
out
fldcw
xlat
dec
mov
js
dec
mov
(bad)
dec
popa
(bad)
jae
or
sbb
enter
sbb
push
cmp
bound
mov
aas
jmp
cmp
or
movs
in
(bad)
shl
std
push
les
push
mov
out
cmp
or
inc
cmp
pop
inc
mov
test
gs
bound
pop
sub
jl
dec
dec
jmp
(bad)
scas
repz
mov
mov
pop
and
dec
pop
aad
sbb
cmp
lods
sub
(bad)
mov
stos
int
mov
lea
out
inc
mov
cli
popf
jl
or
ins
jo
nop
or
inc
push
in
rcr
mov
hlt
(bad)
pop
clc
or
jnp
push
jo
jecxz
out
das
push
call
or
push
fwait
cmps
out
xchg
cmps
jecxz
push
retf
xchg
pop
std
cmp
mov
iret
add
inc
inc
and
jge
pop
push
adc
call
retf
sub
imul
inc
lea
gs
jl
(bad)
adc
xchg
aaa
jnp
cmc
les
cwde
mov
stc
lods
mov
push
dec
loop
fincstp
jbe
loop
in
or
out
call
imul
jge
outs
cld
sbb
pop
xchg
fcom
test
xor
adc
inc
lahf
pop
mov
cld
pop
in
mov
loop
cmp
idiv
mov
rcl
mov
hlt
mov
pop
or
push
stos
mov
mov
dec
adc
movs
push
xchg
dec
gs
pop
mov
and
sub
test
xor
rcl
sbb
jo
xor
fadd
xchg
mov
push
push
ins
mov
(bad)
in
loopne
xchg
xchg
mov
sbb
in
jle
xor
(bad)
mov
and
cmp
push
mov
jnp
aas
push
mov
xor
inc
adc
add
in
ret
lods
rcr
repz
dec
jb
inc
cmps
pop
dec
push
mov
pusha
jle
jecxz
push
mov
mov
pop
lods
inc
out
mov
cdq
retf
scas
scas
stc
ss
push
mov
popa
or
and
imul
(bad)
cmp
repz
xlat
repnz
cdq
repz
mov
inc
pop
cmp
push
jae
and
jb
aas
dec
mul
fnstsw
jmp
or
test
lea
cmp
ins
mov
(bad)
mov
cmp
dec
scas
dec
jns
sub
call
ja
je
iret
pop
popa
popf
cs
mov
gs
mov
ja
mov
js
add
(bad)
arpl
retf
out
push
or
and
inc
cmp
or
js
sahf
out
aas
out
mov
cmp
daa
pop
xchg
and
in
ins
fsubp
pop
inc
mov
jne
push
ret
test
mov
mov
out
lods
xchg
pop
daa
push
sub
xchg
rcr
sub
rcr
push
(bad)
mov
inc
mov
in
push
add
sub
or
jecxz
scas
push
stos
cld
and
test
call
mov
(bad)
ds
mov
jl
inc
cmp
sbb
es
dec
mov
dec
jnp
lea
lahf
cs
out
stc
stc
in
imul
pop
or
mov
push
mov
push
in
shr
and
and
add
push
dec
arpl
and
push
cmp
and
pop
mov
sub
xchg
push
cmp
(bad)
cmc
das
std
sbb
(bad)
sti
mov
iret
loope
pop
pop
mov
dec
mov
loop
cmp
sar
test
out
cmps
xchg
jge
stos
and
jne
dec
pop
cmp
mov
int
jmp
loope
repnz
sbb
sar
or
es
fwait
add
aas
dec
test
jno
inc
or
xor
mov
js
retf
pinsrw
mov
and
pusha
mov
and
stos
ret
sti
push
ins
xor
aam
adc
fistp
cmp
push
mov
rep
adc
leave
mov
pop
adc
xchg
rol
sbb
in
dec
jne
or
into
sahf
(bad)
mov
jne
cmc
sbb
(bad)
addr16
xchg
adc
or
(bad)
jo
fcmovu
ror
cmc
or
inc
lods
arpl
jne
cmp
xchg
(bad)
sub
or
jnp
mov
and
dec
cmp
lods
sub
pop
repnz
add
adc
clc
mov
pusha
xchg
xchg
push
lods
mov
sub
jns
dec
xchg
pop
sbb
ror
mov
pop
push
or
dec
repz
mov
xor
xor
repz
fwait
rcr
fld
icebp
xor
(bad)
push
sbb
(bad)
shl
(bad)
pop
mov
adc
ror
shl
arpl
sub
fnsavew
loop
retf
in
adc
add
xchg
or
dec
dec
pop
mov
pop
sbb
or
in
fcmovnu
sbb
push
in
mov
mov
ds
jmp
mov
(bad)
cmp
out
mov
ret
sbb
js
(bad)
retf
cs
jge
xchg
lock
cmp
pop
cwde
push
adc
push
dec
arpl
retf
mov
mov
add
jo
dec
jge
mov
cmps
fnsave
lods
gs
cs
jne
inc
or
jmp
(bad)
xchg
fcmovbe
jae
stos
les
popf
jne
or
call
xchg
and
nop
jae
rcl
out
dec
xlat
repz
add
xor
xchg
adc
imul
adc
retf
mov
outs
mov
push
in
add
jle
mov
cmp
cmp
std
jmp
inc
or
and
xor
jmp
aam
xor
sub
gs
xchg
xor
or
and
mov
stc
loop
movs
inc
dec
shl
stos
(bad)
mov
add
push
fmulp
hlt
push
aas
inc
sar
push
mov
lea
arpl
jnp
popa
xor
xor
stos
and
pop
pop
mov
xor
cmp
scas
sub
ds
push
(bad)
cmp
test
mov
xchg
xchg
popf
popa
daa
sub
lods
mov
movs
call
iret
jle
mov
mov
cmp
(bad)
in
cdq
cdq
in
cmps
loope
add
mov
dec
dec
push
pop
mov
jl
sar
ds
mov
ror
sub
std
lock
mov
jmp
cmp
data16
outs
mov
fld
mov
cmc
je
push
pushf
inc
add
jae
mov
fst
adc
mov
enter
in
ficomp
pop
fs
movs
neg
stos
enter
movs
pop
aad
push
dec
mov
ss
mov
lods
(bad)
mov
fidivr
jg
popf
(bad)
pop
sub
pop
add
les
les
jmp
jmp
js
ins
jmp
pop
jne
cld
and
clc
data16
sbb
mov
out
and
add
jnp
pop
icebp
sti
lods
jmp
cmp
push
repnz
popf
and
push
jge
push
pop
test
sub
and
dec
not
and
adc
push
mov
pop
int
mov
test
cli
out
setge
mov
mov
xchg
call
ret
int3
cdq
pushf
xor
mov
mov
not
and
cmp
outs
or
jnp
pop
imul
jno
xlat
out
test
xchg
rcr
stos
sbb
push
or
scas
cmp
sub
jo
push
lods
pop
sub
mov
xchg
mov
or
add
inc
scas
and
iret
mov
ret
mov
bsr
jno
jg
and
pop
jb
loop
dec
scas
hlt
popf
mov
push
xchg
dec
xor
push
push
cmps
shl
xchg
mov
loop
aam
icebp
xchg
out
mov
inc
jb
fisub
cld
jns
cmp
or
inc
(bad)
xchg
ins
popa
mov
push
jae
xor
scas
inc
dec
es
loop
ss
leave
cmps
push
mov
scas
repz
push
out
adc
xchg
mov
jns
pop
xor
lock
shr
(bad)
jl
aas
mov
push
inc
mov
fild
sub
or
mov
movs
dec
push
and
ss
pop
or
cmp
add
mov
aam
fdivr
dec
xor
or
push
movs
pop
pusha
call
sub
pop
lea
xchg
adc
fisub
xlat
or
mov
lods
lock
leave
hlt
inc
dec
popa
dec
dec
jg
xchg
pop
(bad)
xlat
pop
shl
adc
ins
jge
jbe
inc
adc
xchg
(bad)
push
sbb
in
mov
rol
push
push
xchg
sbb
jmp
test
pop
add
hlt
call
jno
leave
sub
xor
adc
or
mov
(bad)
mov
in
out
mov
dec
fs
sbb
test
mov
jo
mov
inc
ret
xchg
dec
gs
add
push
xor
xchg
cld
cmp
pop
cmova
call
int3
outs
jb
cmc
pop
xlat
xor
pop
ret
(bad)
aad
cmps
adc
xor
jmp
push
sti
dec
ret
mov
outs
gs
jmp
mov
inc
mov
and
xor
jmp
and
or
shr
(bad)
jge
mov
fcmovnu
mov
xchg
clc
push
retf
push
or
xchg
pushf
push
cmp
add
xlat
cmp
pop
cmc
fst
cld
push
and
fild
mov
jmp
jmp
add
or
imul
xchg
adc
push
jg
in
xor
push
pushf
je
xchg
mov
cmp
mov
ja
aam
mov
xlat
xchg
cmp
mov
inc
and
mov
inc
popa
(bad)
int3
mov
dec
and
loop
(bad)
cld
jecxz
shr
sub
ss
fist
and
mov
mov
repz
push
call
sub
adc
aad
jae
sbb
cld
addr16
mov
mov
cmc
pop
aaa
data16
stos
shr
push
push
mov
or
cmp
inc
(bad)
ret
fmul
xor
sbb
or
cs
sub
ss
dec
(bad)
(bad)
div
mov
add
fadd
inc
int
gs
pop
mov
rol
xor
sar
outs
popa
mov
lods
mov
pop
rol
adc
fdivr
xchg
pusha
fidiv
mov
repnz
sbb
lds
lds
jmp
and
(bad)
mov
push
jns
sub
push
movs
adc
and
xlat
mov
adc
inc
adc
sub
mov
dec
sbb
jo
push
stc
test
cmps
jle
sbb
jmp
adc
dec
out
test
fs
or
inc
mov
dec
inc
shl
push
mov
jb
add
fsave
nop
cli
aam
cmp
adc
dec
dec
push
dec
dec
repnz
inc
stos
loope
js
inc
rcl
fidivr
jge
inc
loope
movs
dec
imul
das
dec
in
push
mov
mov
cld
movs
sbb
mov
sahf
inc
add
add
aam
sbb
loope
jecxz
leave
xlat
mov
movs
jge
sbb
neg
add
imul
and
test
data16
data16
adc
xchg
lea
mov
test
mov
aam
test
and
mov
imul
mov
cmp
and
push
add
push
scas
cmps
inc
rol
jle
ret
(bad)
jl
dec
sti
push
icebp
push
cmp
lds
cmp
mov
loope
pop
mov
(bad)
xor
das
lock
aas
rcr
cmps
shl
xor
push
push
cmps
data16
dec
mov
push
sbb
pop
fimul
cmps
jl
test
mov
jno
pop
dec
shl
or
jae
test
jnp
adc
and
sahf
sub
cmp
sbb
dec
jge
popf
mov
bound
cdq
xor
fiadd
mov
and
int3
leave
(bad)
dec
sbb
xchg
cmp
cmp
pop
push
les
jae
xlat
in
stos
mov
loop
addr16
stc
ds
sbb
ret
lock
mov
fst
sub
fld
lea
adc
push
push
jmp
lds
dec
pop
mov
lea
call
or
adc
cmp
je
mov
mov
sub
fwait
aas
jmp
aad
push
push
or
stc
add
lea
push
push
(bad)
jp
in
std
push
add
icebp
cmp
push
push
cmp
mov
cld
adc
popa
icebp
iret
pop
jle
dec
sub
cdq
push
test
adc
dec
ja
aaa
xor
mov
adc
push
adc
jge
fsubr
mov
popa
lods
add
xchg
or
cmps
mov
lds
xlat
cld
mov
cwde
jnp
or
(bad)
dec
jbe
test
xchg
xchg
cmp
mov
adc
cmp
fistp
push
das
push
lahf
stos
pop
mov
bound
clc
sub
or
nop
into
pop
sub
add
scas
adc
push
jmp
pushf
lock
xchg
jnp
jge
inc
das
in
popf
and
mov
pop
and
inc
pextrw
mov
sub
sub
adc
xor
lods
jle
pop
fcomp
lea
call
clc
push
out
mov
fstp
jmp
xor
gs
jbe
or
jno
jne
inc
call
inc
jo
push
lods
retf
inc
xchg
xor
mov
push
shr
or
jg
lahf
jle
in
inc
movs
cli
je
mov
fwait
shl
xchg
pop
cli
mov
das
shl
inc
fild
rcl
arpl
xor
add
test
popf
adc
enter
js
shl
adc
aad
mov
dec
inc
and
retf
push
jmp
les
push
pop
fsubr
aaa
xor
sub
shr
mov
scas
xor
pop
int
ret
mov
int3
push
cmp
fnstsw
mov
xor
or
adc
jb
jae
loope
inc
push
sahf
pop
mov
fimul
mov
jg
xor
sub
mov
std
push
mov
mov
cmp
cmp
inc
fcomi
fcomp
pop
gs
ins
lock
jmp
das
cmp
pop
cmp
push
or
ret
rcr
inc
xchg
lock
or
mov
add
push
adc
mov
ds
ins
xchg
sbb
jmp
movs
pop
ret
je
sti
(bad)
sbb
xlat
imul
sbb
es
ficom
xchg
inc
mov
scas
jge
cli
adc
jg
fwait
inc
mov
ret
cwde
in
xchg
pop
shr
int3
popa
popa
push
mov
inc
mov
pop
fidiv
jmp
mov
inc
in
mov
pop
push
jecxz
sti
push
pop
test
pop
mov
outs
jb
push
sbb
(bad)
test
mov
movs
push
cdq
cmp
xchg
loopne
stc
sbb
cmps
mov
add
mov
mov
cli
dec
mov
dec
dec
mov
call
xor
push
xor
lods
push
pop
shl
sbb
lods
std
sti
pusha
out
jle
sbb
repz
pusha
or
adc
rol
fstp
icebp
or
rol
(bad)
mov
inc
push
test
movs
xor
cmp
and
xchg
scas
(bad)
xchg
xchg
add
jnp
xchg
aaa
out
into
push
cwde
and
hlt
test
xchg
pop
inc
sub
xor
push
ds
int3
mov
mov
adc
pop
jae
cvtpi2ps
in
(bad)
(bad)
es
lods
xchg
dec
(bad)
mov
sbb
add
mov
test
add
scas
adc
push
add
lds
dec
rol
sbb
sbb
lods
jnp
and
jbe
adc
and
pop
sbb
dec
nop
fld
aad
test
inc
neg
frstor
ret
or
mov
lods
pop
jmp
scas
in
cmc
rol
test
add
and
js
retf
enter
(bad)
jbe
loop
scas
fptan
sahf
cmp
xchg
(bad)
cmps
cmc
jecxz
cmp
jp
jecxz
jp
mov
es
cwde
sub
or
leave
(bad)
(bad)
outs
outs
and
fs
add
inc
xor
mov
je
clc
mov
push
mov
cmc
repnz
jl
xchg
mov
cmp
gs
add
hlt
sbb
dec
adc
loop
(bad)
retf
adc
stc
sub
mov
inc
add
loopne
sbb
jle
int3
sub
add
aaa
imul
cmps
and
mov
sub
dec
dec
test
dec
jmp
dec
popa
popa
pop
inc
cmp
sbb
sub
jns
sub
push
add
(bad)
sar
adc
ds
cs
cmp
movs
mov
aam
mov
lds
xor
(bad)
push
mov
das
sub
xor
(bad)
scas
out
dec
daa
push
test
das
inc
ret
sti
and
dec
jnp
nop
push
icebp
repnz
jae
xchg
scas
dec
fs
push
jge
dec
scas
dec
shl
push
xchg
repnz
sbb
lahf
arpl
or
cmp
jo
ret
push
mov
sub
mov
call
xchg
clc
sahf
mov
add
jb
cmp
cmp
fnstsw
inc
jmp
aaa
mov
xchg
in
push
rcr
pop
and
cs
mov
inc
dec
cmp
cli
sub
lea
cmp
stc
iret
push
push
cmp
sbb
int3
mov
jbe
mov
imul
sbb
jo
inc
sar
hlt
xlat
xchg
lds
mov
cmp
cmp
imul
dec
in
or
xlat
div
mov
jl
inc
data16
dec
addr16
in
jb
cmp
jb
add
lds
xor
mov
sub
push
test
rol
mov
nop
inc
xor
push
cmp
mov
dec
or
loope
mov
dec
mov
loopne
push
inc
(bad)
enter
xchg
xor
cwde
jnp
pop
mov
shl
inc
mov
jno
cmp
pop
push
push
inc
push
leave
(bad)
mov
mov
jo
and
jge
push
loopne
jae
popf
ss
pop
dec
mov
cmps
aas
mov
add
pop
ror
movs
arpl
mov
bnd
jne
or
xor
fcom
rol
lahf
mov
out
jmp
test
pushf
cmp
jg
mov
cmp
xchg
push
adc
jb
fist
pop
pop
or
pop
rol
xchg
fmul
and
xchg
or
xchg
fwait
addr16
push
mov
in
push
(bad)
or
xor
hlt
or
xor
test
pusha
xchg
mov
(bad)
xlat
add
push
push
daa
dec
xchg
in
jp
fs
stos
jmp
adc
cmp
mov
movs
(bad)
fwait
adc
mov
sar
out
add
test
neg
fwait
push
nop
stos
or
mov
ret
mov
ffreep
xor
clc
out
ins
mov
inc
mov
pop
loope
stc
jmp
sub
or
jne
test
cld
sbb
adc
push
mov
ror
push
inc
jg
sbb
aaa
pop
mov
stos
fnstcw
retf
aaa
pop
push
and
mov
pusha
and
je
sbb
fucomp
sti
mov
and
xchg
leave
or
push
xchg
or
xor
sbb
retf
rcr
push
into
ret
or
das
cmp
in
xchg
mov
mov
jmp
in
xchg
dec
call
xor
les
xor
mov
ror
push
or
cli
and
ds
xor
xchg
xor
mov
inc
(bad)
mov
xchg
adc
scas
jle
adc
cmp
add
jge
(bad)
aam
jl
sbb
sub
mov
test
ficomp
dec
jno
cwde
push
icebp
fisttp
jmp
push
sub
mov
cmps
test
fwait
pop
push
pop
outs
fisub
shl
dec
clc
outs
icebp
mov
push
test
pop
idiv
sbb
loop
stos
push
aam
mov
pop
inc
ins
bound
xor
mov
add
push
mov
(bad)
sbb
xor
clc
out
add
sbb
mov
pop
mov
aam
sbb
imul
pusha
push
pop
pop
xchg
mov
sub
xchg
ss
and
xor
pushf
ds
or
mov
pop
mov
mov
rcr
sbb
mov
daa
(bad)
adc
push
or
test
push
inc
fld
dec
push
pop
les
idiv
xor
enter
jecxz
add
xchg
jns
cmp
loopne
cdq
push
jnp
inc
dec
sub
or
call
ds
in
mov
mov
xor
retf
leave
daa
out
sbb
lahf
imul
ds
push
jne
mov
in
pop
or
loopne
adc
out
loope
aas
fstp
nop
cmp
fdivr
das
stc
xor
sahf
test
out
sub
jns
adc
enter
jg
out
sar
shr
div
mov
inc
shr
fidiv
dec
jmp
jns
mov
std
in
cmp
dec
dec
lock
cmp
sbb
(bad)
xor
shl
(bad)
mov
or
ins
sub
mov
movs
(bad)
cwde
rcr
jbe
mov
inc
pop
mov
mov
jb
sbb
retf
ins
cs
cmp
mov
fcomp
pop
push
adc
xchg
xor
retf
loopne
mov
fsub
pop
push
inc
sar
inc
mov
iret
fwait
mov
scas
das
fistp
jno
(bad)
and
bound
push
fcom
dec
jle
jae
sub
outs
adc
nop
leave
jecxz
xlat
neg
mov
mov
call
pushf
std
imul
std
(bad)
mov
sub
pop
outs
lahf
call
test
cwde
pop
ret
mov
jmp
fiadd
mov
mov
mov
cmp
inc
inc
mov
stos
jmp
xor
push
push
into
xchg
fdiv
iret
dec
sti
adc
push
out
iret
test
test
dec
push
bound
stos
(bad)
push
mov
xchg
ins
xchg
ins
aam
aam
pop
in
fcomp
inc
pop
xlat
sbb
mov
cmc
cld
test
pop
psadbw
mov
ja
sbb
or
sbb
push
into
adc
lea
cs
repnz
out
cmp
in
and
out
imul
stos
retf
mov
sbb
clc
test
pop
shr
jne
aad
cmp
jmp
inc
push
loope
scas
mov
or
test
xchg
mov
mov
jne
push
rol
icebp
add
ds
into
jecxz
popf
mov
sub
cmps
mov
(bad)
jle
cmp
sahf
pop
mov
int3
xchg
int
inc
cli
js
cmp
adc
xor
adc
mov
mov
adc
dec
gs
jge
inc
aas
jns
movs
hlt
popa
adc
fld
cmps
and
mov
aad
push
or
adc
xor
fidiv
xchg
inc
mov
add
scas
scas
sbb
mov
push
hlt
xchg
stos
inc
mov
not
popf
stos
or
sahf
loope
and
xor
sbb
jmp
inc
mov
aad
dec
jmp
xchg
clc
mov
into
push
stc
cmp
enter
fcmovnbe
mov
jae
inc
jge
or
dec
movs
mov
fsubr
fwait
gs
pop
and
xchg
out
retf
adc
cmp
or
sbb
xor
xor
fadd
push
jp
mov
sbb
stos
lea
mov
mov
jmp
mov
ret
cmp
mov
or
ins
add
mov
ds
scas
jl
mov
outs
lods
cld
lods
es
icebp
cmp
ret
and
add
ja
in
test
push
xchg
xchg
jle
mov
add
or
ds
mov
popa
enter
push
mov
je
ins
jp
movs
clc
js
pop
loop
ftst
xor
movs
nop
leave
xchg
out
push
xchg
test
jmp
cmps
inc
stos
add
das
fld
sti
xchg
push
mov
mul
pop
pop
cwde
xor
sub
pop
xlat
xor
in
pop
shl
fcmovu
push
jo
pop
mov
shl
or
popa
and
pushf
rep
sbb
gs
inc
mov
and
lock
push
fadd
mov
xchg
push
rcr
mov
xor
adc
retf
fisubr
jbe
xor
sti
sbb
cwde
push
iret
outs
inc
loope
movs
mov
ins
pop
inc
call
aad
jg
cmp
mov
pushf
movs
adc
or
outs
call
and
jo
mov
test
inc
retf
je
push
jle
and
jmp
das
lock
stc
test
test
mov
jle
mov
lea
adc
xor
lea
loopne
sahf
sbb
sbb
or
lea
test
add
ins
mov
das
push
pop
add
cmps
loopne
dec
inc
fnstcw
push
fldenv
adc
add
icebp
sbb
pop
mov
or
test
mov
or
or
pop
jmp
mov
(bad)
aam
pusha
and
ds
popa
push
add
xchg
push
xchg
jg
jno
and
push
mov
in
je
xor
test
test
push
shr
push
push
stos
ror
dec
(bad)
inc
sub
add
mov
call
mov
and
cmp
ja
in
push
mov
add
fld
inc
shr
push
jecxz
or
iret
jmp
pop
push
inc
lods
std
aam
adc
test
adc
add
aas
dec
push
jp
add
(bad)
mov
cmp
or
mov
jmp
pop
adc
enter
frstor
push
je
mov
js
pop
push
add
in
mov
sub
lea
aad
enter
fwait
sbb
loopne
sti
lahf
cdq
repnz
es
inc
mov
outs
ror
in
aas
(bad)
out
sub
int3
pop
adc
pop
test
pop
aas
mov
mov
sbb
aad
push
push
jne
addr16
xor
(bad)
xchg
adc
dec
cdq
cmp
push
jl
jecxz
outs
adc
mov
cmp
jno
cmp
aad
mov
jg
outs
inc
and
pop
mov
xor
or
push
fidivr
out
or
mov
daa
pop
pop
sbb
fdivr
cld
mov
mov
jo
jge
cmp
cmp
xor
mov
adc
test
push
add
adc
or
mov
mov
test
xor
cwde
in
mov
lock
not
cmp
fiadd
xor
aam
pop
lahf
mov
enter
popa
sub
sub
call
stc
jg
xchg
dec
neg
sbb
xchg
pop
dec
push
(bad)
sub
and
leave
or
mov
or
push
test
and
push
push
repnz
push
imul
mov
push
sbb
add
push
(bad)
push
xor
das
int3
loop
hlt
scas
dec
fs
and
xchg
aad
pop
dec
pop
pop
(bad)
jecxz
jns
lahf
mov
jl
inc
test
in
and
xlat
jne
hlt
mov
jecxz
fisubr
pop
and
aam
xor
xor
or
fstp
ja
xchg
xchg
les
repnz
test
aaa
dec
mov
mov
mov
xor
stos
cmp
mov
lods
add
inc
nop
pop
cli
pop
jo
mov
sbb
mov
pushf
rol
imul
pusha
ret
jbe
jbe
cld
movs
dec
shl
in
dec
stos
and
outs
or
dec
add
rol
pusha
pop
cmps
lahf
inc
add
outs
shl
in
inc
cmp
push
or
cmps
(bad)
vcvtps2dq
xor
out
scas
iret
aas
cwde
aam
cmp
aaa
std
popf
mov
adc
cmp
xor
mov
sub
aas
lahf
inc
adc
inc
retf
icebp
rol
in
or
fisub
aam
hlt
and
mov
(bad)
cmp
in
xchg
sbb
push
stc
mov
iret
dec
jmp
or
jns
into
cmp
test
popa
addr16
fidivr
icebp
sar
(bad)
push
rcl
xchg
sti
ret
out
xchg
rcr
cmps
push
(bad)
loope
mov
lea
int3
ins
call
inc
(bad)
mov
jne
scas
hlt
cmp
mov
add
mov
popf
jno
xchg
test
sbb
adc
lods
push
xchg
nop
push
xor
cmp
arpl
pop
inc
xor
mov
add
ins
xchg
icebp
xlat
sbb
xor
lahf
rcr
hlt
cmp
push
bound
call
daa
scas
sar
shl
inc
ins
and
push
repz
outs
lods
sub
dec
ret
cmps
sub
cmp
mov
(bad)
xchg
ja
and
xchg
stos
dec
and
repnz
mov
enter
mov
mov
lea
inc
xor
clc
inc
xlat
(bad)
mov
mov
scas
cwde
push
or
dec
mov
dec
cmps
pop
pushf
or
dec
dec
loopne
dec
ret
cmps
adc
mov
mov
call
div
jo
mov
inc
inc
dec
into
push
sbb
mov
inc
call
mov
cs
test
fld
(bad)
add
call
daa
adc
out
or
or
enter
stos
xchg
outs
cmp
imul
lds
popa
gs
jg
xchg
bound
cdq
mov
stos
call
xlat
pop
cmp
or
shr
dec
jne
mov
xor
sub
sbb
out
data16
sub
mov
lods
jne
repz
jg
sub
outs
mov
and
dec
lds
popf
aas
out
les
ins
sar
lods
jns
leave
xor
add
cmp
pop
ss
std
rol
or
stos
xor
add
scas
inc
lods
stos
and
fisubr
pop
jne
mov
pop
push
stc
daa
imul
adc
xor
pop
fild
cmc
pusha
jmp
retf
push
shl
xchg
in
pop
sub
cmp
add
lea
int3
loope
call
sbb
(bad)
push
adc
xor
xchg
cmp
movs
movs
sbb
mov
xor
push
xor
call
ret
xchg
inc
or
pop
call
das
sbb
cmp
std
xchg
mov
mov
push
call
in
cmp
or
add
fmulp
ret
jo
or
lods
ja
and
shr
push
jg
lea
jl
aad
jmp
enter
scas
cdq
(bad)
rol
ret
pop
lock
mov
mov
dec
jle
inc
jmp
clc
sub
adc
jns
ret
sub
(bad)
pop
xor
hlt
push
arpl
retf
bound
jne
inc
add
jmp
inc
mov
bswap
mov
test
call
sub
cmp
push
test
mov
xor
loopne
(bad)
hlt
or
or
scas
fidivr
mov
mov
cmc
mov
outs
jmp
in
outs
nop
lds
lds
dec
fbstp
dec
sub
jb
scas
and
inc
push
xor
fst
cmp
scas
mov
ror
jmp
or
sti
dec
arpl
or
sub
sbb
sbb
(bad)
pop
cmp
arpl
popa
jae
mov
fdiv
frstor
dec
xchg
repz
xchg
data16
pop
pop
sbb
xlat
jno
pop
push
sub
cmps
in
fild
loope
shl
pop
dec
cmc
xchg
mov
jo
test
mov
fs
pushf
adc
or
std
xchg
test
or
add
stos
in
sbb
inc
dec
sub
stos
call
adc
enter
ficomp
sar
sub
mov
xchg
and
push
test
jg
cmp
push
sbb
sbb
pop
jg
stos
ja
lods
sbb
xor
shl
dec
jae
(bad)
in
and
xor
ret
clc
ins
mov
xchg
into
call
mov
or
dec
sbb
mov
pop
mov
les
sub
add
pop
aad
movs
scas
dec
sub
mov
fldcw
xor
xchg
fmul
jg
inc
xchg
mov
orps
xor
jecxz
add
popf
jno
retf
xlat
cwde
pop
test
call
mov
lock
adc
jnp
out
in
frstor
fbstp
jmp
jmp
repnz
mov
mov
push
cld
dec
cdq
lahf
(bad)
and
movs
call
add
add
test
or
sahf
int
cmp
jmp
sbb
fisub
lahf
inc
pop
loop
mov
imul
xchg
mov
shl
inc
frstor
add
mov
sub
pop
outs
xchg
or
mov
sub
fbld
jae
int
or
popa
stos
jns
psrld
push
push
inc
scas
sahf
lock
movs
cmp
pop
cmp
cmp
xor
lahf
movs
aaa
sub
jmp
loope
xor
fidiv
mov
xchg
add
sbb
or
mov
and
adc
scas
stos
xchg
movs
enter
push
lods
ffree
pop
pusha
mov
out
ins
mov
js
add
mov
pop
stc
loop
add
cmp
sti
fldenv
mov
pop
xchg
and
sti
int3
add
sub
push
fdiv
(bad)
or
call
out
mov
and
pop
test
leave
xchg
pop
inc
pop
aad
and
jne
mov
dec
pop
jno
mov
das
pop
out
dec
repnz
mov
xor
sbb
mov
fst
or
cmp
cmc
inc
out
rcl
les
es
dec
loop
repnz
push
pop
xor
fsubr
cmp
dec
dec
leave
out
sbb
fst
loopne
aam
das
adc
loope
sbb
pusha
inc
ins
cdq
rol
pop
icebp
mul
ror
aad
std
aad
fsub
sar
hlt
(bad)
adc
or
test
ds
and
jle
ss
or
in
xor
test
mov
ins
lds
frstor
dec
mov
cmp
cmp
idiv
push
push
adc
pop
out
cs
mov
movs
adc
retf
daa
sub
or
inc
daa
dec
cmp
iret
mov
and
adc
ficom
jge
sub
jnp
push
add
pop
or
retf
add
and
arpl
cld
mov
(bad)
inc
loop
xchg
xor
out
retf
inc
xor
sub
call
cmp
mov
dec
fs
dec
mov
lods
mov
test
xor
jae
movs
(bad)
out
leave
pop
or
out
push
jmp
inc
retf
xchg
jnp
add
fmul
dec
push
or
into
push
int3
mov
scas
cmp
imul
or
mov
dec
pop
adc
or
imul
pushf
sub
pop
nop
mov
cmp
push
rcl
clc
add
test
or
sbb
ret
add
sbb
inc
(bad)
aad
loop
adc
mov
add
inc
pop
rcr
sti
in
out
mov
add
xor
aas
pop
xor
arpl
stc
pop
dec
div
push
fwait
and
adc
test
xor
cmp
invd
lods
out
jo
gs
out
xchg
jmp
test
sti
inc
and
out
cmp
mov
fs
repnz
in
and
cdq
cmp
bound
xor
inc
lds
cld
jmp
ficom
into
xor
(bad)
repz
mov
pop
scas
jnp
mov
popf
dec
push
retf
ret
fistp
push
sub
add
mov
std
dec
(bad)
int3
jne
push
inc
pop
in
int3
cmp
or
add
mov
pop
inc
jecxz
cmp
popf
xor
mov
test
loopne
mov
icebp
int3
aad
cmc
pop
mov
jmp
(bad)
test
enter
jle
in
(bad)
rcr
xchg
dec
sub
(bad)
sub
call
push
mov
repnz
jb
retf
stc
mov
xor
mov
pop
jns
adc
scas
test
loopne
inc
sbb
lock
cli
cmp
ins
fldenv
sahf
aam
imul
test
test
mov
div
das
std
xor
mov
dec
and
mov
push
cmp
push
pop
xor
pop
ret
push
cmp
arpl
and
pop
(bad)
and
outs
xor
jo
jle
jmp
or
jnp
sbb
stc
xchg
mov
into
(bad)
sub
dec
ins
push
ja
ret
mov
frstor
xlat
pop
sbb
lods
fisubr
jne
outs
mov
mov
(bad)
cmp
or
jmp
(bad)
mul
(bad)
adc
xchg
imul
inc
xchg
mov
test
gs
and
jge
leave
jmp
xor
ins
mov
in
xor
inc
inc
mov
cli
xchg
fisubr
fild
or
mov
cvtdq2ps
push
adc
mov
sbb
mov
out
inc
and
inc
not
pop
dec
data16
loopne
cmp
push
fyl2xp1
push
(bad)
test
jnp
or
movs
sbb
stc
movs
sub
mov
push
jmp
cwde
jle
lods
mov
cmp
jg
fisttp
dec
sbb
xor
js
mov
cs
pop
mov
cld
ins
or
jae
dec
mov
push
das
mov
scas
fcomp
push
dec
pop
mov
movs
add
cmp
arpl
repnz
sar
arpl
fcom
mov
xchg
lods
sbb
call
inc
stos
inc
mov
push
and
mov
and
call
cmp
cdq
xor
imul
ins
and
sub
cmp
in
(bad)
cmc
jmp
fcomp
cli
dec
push
pop
ret
movs
retf
inc
xchg
xchg
xor
cmp
pop
shl
mov
into
pop
repnz
shr
mov
pop
mov
shr
repz
aas
mov
xor
jo
mov
test
sbb
mov
in
test
inc
jbe
outs
neg
popa
inc
das
xor
and
jmp
sbb
jg
pop
or
adc
sbb
cmp
xor
pushf
xchg
fcomp
stos
mov
pop
mov
xor
jmp
inc
call
xor
mov
lds
push
test
cmps
cmp
outs
sub
dec
out
or
ret
loopne
push
xor
ss
mov
dec
jl
xchg
(bad)
fcomp
adc
das
pop
mov
(bad)
adc
or
pop
das
mov
inc
jb
mov
and
std
fisub
or
aad
(bad)
rcl
shr
push
xchg
fwait
xlat
pop
jecxz
adc
dec
clc
cwde
outs
addr16
inc
inc
cmovno
aam
or
inc
jl
enter
xor
jmp
ss
mov
dec
sbb
fucom
push
jno
add
aas
xlat
fnstsw
push
pop
jmp
and
aas
retf
les
data16
clc
ins
and
cmps
scas
cmp
enter
sbb
push
xor
xor
stos
jo
xchg
push
in
xor
retf
rcr
jbe
rcr
inc
out
test
jge
sbb
jmp
je
inc
shl
pop
loope
out
push
jne
loop
adc
sub
mov
enter
mov
inc
or
jl
call
xor
mov
mov
adc
fimul
movs
mov
cli
mov
cmps
jle
adc
out
inc
push
mov
mov
mov
test
mov
and
retf
test
mov
jle
add
fdiv
popf
xor
jle
sbb
push
fwait
adc
sar
daa
jbe
xchg
repz
and
inc
repz
jbe
sar
mov
cmp
leave
popa
push
aaa
cmps
lods
popf
js
leave
push
stc
imul
add
(bad)
jno
scas
jl
nop
aaa
pop
dec
stos
out
xchg
(bad)
out
mov
lods
add
std
nop
dec
jno
fcom
and
stc
adc
shl
and
fcom
and
scas
mov
mov
jnp
stc
mov
and
inc
cmp
out
sbb
xchg
dec
lds
sar
or
xchg
daa
in
pop
test
dec
out
outs
js
sti
and
pop
jmp
push
call
or
and
(bad)
ins
daa
pop
push
out
jp
fild
mov
cli
stos
ja
(bad)
js
inc
mov
inc
jecxz
or
rcl
sub
(bad)
sub
in
ret
dec
cli
inc
sub
repz
ret
inc
ds
(bad)
cli
jge
and
pusha
push
out
mul
pop
lahf
sti
sbb
cmp
xchg
imul
add
lahf
lods
movs
ret
adc
fcom
(bad)
lds
leave
inc
into
fisttp
inc
gs
mov
into
mov
mov
out
mov
scas
out
test
clc
pop
sub
xor
mov
sar
cld
push
push
in
cwde
jmp
imul
fwait
add
jecxz
jb
repz
out
pop
add
outs
dec
mov
cld
lods
loop
add
cmps
sub
mov
jmp
inc
hlt
jge
sbb
fs
les
cmp
add
push
push
mov
in
repnz
fdiv
loop
mov
xor
jge
shr
sub
and
scas
push
sbb
pop
inc
ins
fscale
dec
mov
pushf
shl
and
or
cmp
outs
mov
xchg
pop
sub
out
pop
and
cmps
imul
sub
mov
add
sbb
dec
js
comiss
rcr
or
imul
jmp
into
neg
neg
jle
adc
jle
sbb
shl
jb
call
xchg
mov
sub
dec
(bad)
out
mov
fidivr
in
idiv
mov
mov
out
sahf
(bad)
pop
dec
xlat
fidivr
sbb
inc
popa
jno
cmp
mov
inc
mov
jmp
shl
mov
push
push
mov
mov
mov
les
out
stc
sbb
aaa
push
inc
cld
xor
push
xchg
es
adc
pop
jecxz
xor
and
rcl
push
push
iret
out
sbb
sbb
movs
xchg
xchg
fnstsw
iret
cs
sub
cmc
aam
lods
stos
and
xor
pop
inc
sbb
fdivr
pusha
and
mov
inc
daa
push
sub
js
xor
fsubr
fwait
dec
push
cmc
xchg
lods
cmp
fidivr
push
mov
mov
movs
mov
out
mov
in
adc
iret
scas
add
jmp
and
loope
mov
push
pushf
ins
adc
mov
or
mov
xor
aad
in
add
(bad)
pop
push
call
rol
in
popa
push
mov
jg
imul
rcr
leave
stos
jecxz
jmp
sti
js
rcr
add
inc
push
shl
shl
loopne
(bad)
sbb
sub
push
mov
xor
pop
aam
rcr
scas
jbe
cld
ffreep
xchg
xchg
cmp
in
mov
(bad)
xor
jp
xchg
dec
mov
pushf
cmp
pusha
ja
(bad)
ret
rcr
into
add
mov
enter
and
mov
push
ss
dec
test
push
sbb
shl
shr
leave
jle
scas
(bad)
fwait
mov
lock
jmp
cmp
lds
xchg
jmp
xor
inc
icebp
pop
js
push
cs
call
hlt
add
cmc
mov
xchg
lods
ins
scas
mov
(bad)
add
out
lahf
adc
hlt
mov
mov
adc
mov
call
lods
imul
mov
loope
mov
data16
xchg
rol
add
and
xchg
pop
jb
into
and
mov
add
cmps
ins
fwait
ins
mov
ss
xor
push
idiv
lods
xchg
xchg
clc
stos
push
fcom
pushf
not
retf
adc
mov
scas
out
dec
sub
mov
xor
mov
sub
hlt
mov
das
pop
xor
sub
inc
lds
pop
les
xor
ja
(bad)
xchg
jecxz
loop
and
or
dec
xor
dec
dec
adc
shl
or
cmp
shr
or
xchg
cdq
sub
scas
mov
int3
in
jg
fdiv
neg
dec
cmp
cmp
push
xor
jmp
dec
xchg
test
imul
jmp
mov
jecxz
adc
ds
or
xchg
movs
(bad)
clc
sub
int3
aas
scas
cmp
call
sbb
cmps
mov
sahf
jmp
xor
mov
dec
lods
xchg
inc
xor
test
mov
movs
mov
(bad)
jno
dec
clc
faddp
inc
in
jp
stc
pop
pop
jo
mov
(bad)
jno
inc
adc
sub
clc
pop
and
ins
mov
ins
sbb
imul
push
dec
dec
clc
pop
pop
add
xor
mov
jne
into
call
sbb
add
je
enter
or
sbb
shl
pop
pusha
mov
mov
cmc
int
mov
sti
scas
sbb
pop
mov
add
fdiv
sahf
and
mov
adc
push
icebp
inc
fnstsw
cmp
sbb
or
xchg
sub
cmp
mov
sbb
loop
xchg
das
add
clc
sub
add
push
test
adc
cmp
pop
shl
bound
out
pop
sub
inc
lock
(bad)
cs
dec
in
stos
push
popf
cmp
add
pop
daa
loop
imul
mov
mov
inc
(bad)
icebp
cmps
inc
popf
adc
or
sti
call
out
jnp
bound
je
mov
push
jg
fdivr
loop
call
xor
jmp
rcr
daa
xchg
jle
lahf
mov
push
out
sub
cwde
jge
sbb
mov
test
mov
cmps
push
sbb
sbb
rol
arpl
adc
push
int3
outs
pop
xlat
xor
ins
fld
dec
adc
lds
rcr
movs
loope
push
out
xchg
sahf
pop
adc
scas
inc
push
int3
stc
cmp
scas
inc
jle
test
pop
mov
aas
fwait
outs
fsub
sub
jmp
movs
mov
retf
mov
lahf
fcmovu
jp
jns
test
sti
xchg
adc
retf
arpl
adc
out
and
xorps
inc
mov
sbb
data16
jns
cmp
push
adc
sub
cmps
pop
cmps
mov
dec
jns
fs
xor
mov
pop
movs
push
sub
dec
and
sub
sbb
pop
push
fild
xor
or
stos
push
push
cwde
cli
js
xchg
xor
mov
lea
test
lods
call
or
xor
adc
jbe
dec
push
arpl
movs
rcr
cmps
loopne
mov
mov
loopne
pop
push
push
mov
sub
xchg
pop
and
mul
inc
ss
cs
out
mov
mov
or
mov
in
in
cmpps
mov
sbb
jmp
push
xchg
adc
jp
pop
shr
and
push
jmp
mov
push
sbb
cmp
cmp
push
dec
inc
sub
cmc
dec
and
jl
or
jle
pop
lods
ss
sbb
sub
fyl2x
push
popa
out
cmp
lods
sub
bound
ins
jmp
movs
sbb
fbld
fldcw
aad
sub
inc
inc
fistp
imul
xlat
pop
mov
into
pop
pop
and
add
test
pushf
sbb
pop
lods
leave
pop
lea
mov
pusha
cdq
nop
inc
test
fldenv
cs
cdq
mov
mov
jno
cmc
test
mov
mov
fistp
cmps
test
imul
pop
ficomp
outs
ja
aaa
and
xor
jbe
dec
mov
setg
mov
inc
imul
fwait
xchg
(bad)
leave
ss
dec
mov
sub
mov
sub
sub
push
mov
xchg
lea
jl
dec
in
mov
jg
push
sub
push
outs
(bad)
lods
sub
adc
jne
(bad)
or
jmp
mov
in
xor
jl
out
and
push
es
xchg
cli
ja
icebp
out
add
inc
shr
stc
adc
inc
stos
push
jnp
aas
jp
jo
inc
inc
out
cli
add
repnz
scas
popf
mov
or
xchg
pop
and
push
repnz
mov
cmp
mov
inc
add
test
fadd
test
jg
in
arpl
xchg
sbb
call
outs
je
out
stos
xchg
or
add
test
ss
call
lock
xchg
cmps
es
cmps
cwde
cs
push
xor
ja
inc
push
xchg
push
int
jmp
mov
push
mov
pop
jno
fst
dec
push
dec
add
xchg
dec
nop
(bad)
adc
das
das
test
stc
aad
movs
mov
retf
into
clc
ins
inc
scas
sbb
inc
xor
lahf
xchg
shr
stos
mov
dec
sti
fs
push
ins
push
mov
xchg
and
iret
repnz
inc
jns
fisubr
jo
in
sbb
into
cmp
lods
push
pop
push
loopne
mov
(bad)
push
sbb
pushf
sbb
push
jnp
xchg
xchg
xchg
xor
aas
fsubp
iret
into
movups
shl
xchg
(bad)
and
in
sbb
lahf
rcl
pop
mov
cli
mov
js
iret
fnstenv
stos
daa
xor
mov
retf
xor
adc
dec
adc
push
in
or
push
test
lahf
jo
pop
inc
pop
das
mov
sub
les
jb
fld
aam
popa
ja
aad
inc
xor
jnp
pop
test
push
mov
sahf
mov
out
popa
fidiv
xor
mov
jno
cmp
lods
cmp
jp
xchg
ins
imul
fisub
mov
call
mov
mov
xor
cmps
and
and
mov
popa
gs
cmp
sub
test
lock
ret
(bad)
das
int
sub
xor
ficomp
int3
fs
cmc
sbb
gs
fmul
es
fld
mov
nop
fnsave
dec
test
jmp
adc
mov
xor
mov
pushf
cmc
pop
mov
push
xlat
add
and
mov
mov
mov
retf
inc
jb
dec
cli
(bad)
aad
loop
arpl
pop
jp
icebp
add
cmp
enter
cmp
xchg
addr16
dec
push
push
push
cmp
and
ja
or
add
stos
inc
ror
cli
sbb
jecxz
sar
cmp
and
dec
ja
push
xchg
cmp
(bad)
hlt
bound
xor
pop
sahf
xchg
jae
enter
mov
mov
add
push
icebp
fsub
mov
pop
imul
test
inc
retf
data16
movs
retf
adc
sub
int
push
mov
test
mov
(bad)
shl
imul
pop
pop
jg
sbb
xor
mov
adc
ins
sub
dec
nop
movs
and
or
(bad)
fidiv
out
xchg
push
rcl
xchg
push
(bad)
adc
cmps
clc
jns
push
imul
int
jae
cld
or
call
or
add
mov
jnp
jnp
fist
push
push
pushf
mov
aaa
or
jmp
mov
mov
cmp
and
(bad)
fnstenv
cmp
dec
adc
in
adc
sbb
inc
mov
loopne
iret
jge
xor
je
jmp
adc
cmp
mov
das
imul
lods
cmc
jae
ror
imul
add
dec
inc
lods
push
inc
in
sar
inc
dec
loop
pop
jno
cdq
fiadd
es
fild
add
cmps
imul
mov
xchg
sub
xor
repz
sbb
je
stos
fdiv
adc
cmp
fsub
xchg
outs
daa
cmp
enter
loopne
stc
cmps
sub
dec
enter
inc
lea
dec
cmp
js
xor
movs
lds
repz
(bad)
jb
jge
sbb
lock
cmp
fiadd
out
cdq
xor
mov
push
or
jae
adc
dec
mov
cmp
jo
mov
fcmovu
iret
jl
aaa
mov
sbb
xchg
push
mov
jmp
lea
jl
lock
sbb
sahf
sbb
add
jo
pop
(bad)
retf
sub
jp
sub
pop
and
fidivr
cmp
idiv
lods
sub
add
sahf
xor
scas
mov
ins
cmc
lock
mov
(bad)
mov
mov
dec
movs
dec
loopne
cmp
std
xchg
jb
push
jmp
pop
scas
imul
add
push
cwde
add
cld
adc
xchg
xchg
ret
push
enter
int
pop
push
sbb
jns
mov
sbb
enter
dec
push
retf
clc
dec
sub
xor
inc
(bad)
test
sub
dec
test
jle
aam
sbb
jp
pop
mov
std
mov
cmp
out
or
rol
in
xor
js
imul
jle
mov
sub
dec
xor
shl
xchg
xor
sbb
push
gs
sub
ret
ja
xchg
(bad)
aas
enter
adc
adc
mov
or
dec
sub
and
test
xchg
je
lods
out
mov
(bad)
fstp
push
cld
mov
dec
add
mov
xor
cmp
cmps
(bad)
xor
mov
jge
dec
out
xor
pusha
xchg
das
mov
nop
es
ret
(bad)
cmp
xchg
sub
jg
test
retf
shl
mov
and
pushf
pop
neg
out
push
ins
add
aaa
inc
ret
jno
add
xchg
xchg
sub
xor
sub
dec
xchg
inc
dec
sub
dec
adc
movs
and
scas
mov
into
call
(bad)
jl
sub
ret
inc
sub
lds
rcl
adc
pop
inc
add
cmp
dec
inc
inc
jmp
rcl
cmp
jg
xor
loop
js
push
leave
sub
cmc
dec
lock
test
lahf
movs
out
stc
les
clc
pop
aaa
gs
shr
shl
push
mov
stos
cdq
adc
test
add
popf
or
je
pop
pop
xchg
inc
hlt
daa
mov
fwait
mov
push
adc
push
in
add
in
mov
add
dec
icebp
fs
adc
mov
adc
sub
movq
cmp
(bad)
push
add
in
add
mov
jl
mov
not
rol
aaa
sub
adc
add
int3
cmps
sbb
xchg
inc
call
cmp
imul
into
cli
adc
sbb
out
gs
aam
cld
out
mov
sub
xchg
pop
and
add
dec
dec
sub
test
sub
xchg
js
inc
fdivr
pop
pop
jl
jmp
retf
or
push
cmp
fs
fprem
stc
mov
ins
in
adc
mov
stos
jne
repz
sbb
mov
(bad)
mov
pop
push
cmp
les
xor
daa
and
cmc
pop
lahf
(bad)
daa
pop
lods
xchg
sbb
aam
jno
das
xchg
aam
leave
sti
imul
retf
je
imul
into
jmp
lea
lahf
or
or
sahf
mov
xor
bound
lods
leave
scas
mov
sbb
(bad)
sub
mov
jno
pop
mov
xchg
mov
mov
dec
test
popf
mov
enter
xor
imul
punpcklbw
mov
or
sbb
(bad)
js
jb
cmc
retf
loop
out
sub
dec
test
fwait
sti
ins
iret
dec
sbb
jge
sbb
icebp
xor
cmps
test
pop
or
adc
repz
cmpps
dec
into
ret
pop
mov
sti
fsubrp
jmp
lods
jmp
nop
(bad)
iret
aaa
sub
xchg
xchg
xor
outs
inc
jp
jg
ss
nop
cdq
jge
adc
cs
cmp
push
push
pop
add
mov
and
mov
(bad)
mov
div
cmp
inc
popa
lods
inc
push
ror
add
xlat
test
mov
daa
add
mov
mov
scas
push
retf
test
mov
test
jne
int3
mov
jns
arpl
pop
mov
je
adc
mov
loope
mov
dec
fist
jno
or
xor
leave
xchg
std
push
repz
or
xchg
loop
mov
out
xchg
push
jge
neg
jno
jne
sbb
jb
out
in
(bad)
imul
cmp
mov
mov
add
repz
xchg
pushf
inc
int3
xchg
add
iret
cmc
sub
lahf
jo
mov
adc
shl
or
cld
mov
pop
mov
bound
inc
lods
adc
test
push
shl
cmp
sub
ucomiss
imul
dec
adc
dec
test
test
lds
not
lods
mov
xchg
sub
inc
imul
adc
xor
mov
pop
xor
jl
hlt
or
mov
dec
cwde
adc
test
stos
lds
scas
scas
adc
cmp
sub
pop
ds
push
fidiv
and
push
dec
stos
sbb
and
jo
adc
adc
jnp
aaa
pop
push
shl
scas
push
adc
adc
aas
pop
add
mov
call
sub
inc
lahf
retf
push
and
test
bnd
pop
jo
aam
xor
jo
pop
ss
fadd
out
call
inc
cmp
xchg
xchg
jle
call
xor
fwait
cmp
dec
mov
sar
int3
repz
ins
xor
cmp
cwde
rcr
cmp
jne
ss
daa
les
mov
cmp
mov
jo
in
mov
or
pop
and
aas
push
and
mov
retf
arpl
popa
loopne
test
addr16
jae
ja
stos
and
into
daa
inc
push
inc
in
lahf
pop
int3
or
mov
clc
sub
xchg
jb
mov
mov
pop
mov
(bad)
jae
stos
push
push
test
pusha
jmp
and
retf
inc
(bad)
pop
lock
cmp
and
inc
sbb
pop
outs
xor
pop
retf
jno
jb
or
fist
jae
rol
sub
push
imul
pop
leave
add
and
inc
push
(bad)
lock
sub
mov
add
cmp
jne
fisttp
lahf
loopne
dec
adc
neg
jo
loope
adc
xchg
or
jno
and
ss
repz
adc
dec
ja
movs
mov
push
pop
das
aad
mov
pop
adc
push
es
int3
fisttp
or
cli
dec
aam
xor
mul
aad
pop
out
in
ret
add
inc
adc
fild
xchg
jmp
xchg
imul
jbe
sti
cmp
mov
push
outs
jo
shl
(bad)
cmp
ds
and
sbb
xchg
dec
shr
xor
dec
sbb
(bad)
inc
daa
and
sub
outs
ins
popf
push
push
ja
inc
inc
cmp
jbe
repz
mov
retf
dec
sbb
fcmovne
lods
iret
push
or
(bad)
scas
cmps
adc
shl
fistp
(bad)
in
dec
sti
jne
fist
sub
inc
(bad)
pop
std
mov
mov
and
in
cwde
inc
leave
cmps
cdq
(bad)
out
or
scas
mov
dec
jno
xchg
cmps
mov
mov
stos
aaa
fld
scas
popa
jb
es
or
push
push
mov
adc
cli
and
rcl
je
dec
ds
call
arpl
retf
push
xchg
sub
push
jecxz
test
dec
or
mov
es
cmps
push
jl
enter
xchg
xor
sbb
aas
lahf
mov
mov
cld
out
mov
add
rol
(bad)
popf
int3
adc
xchg
test
sub
ret
mov
aas
adc
movs
mov
or
add
xor
test
jmp
or
dec
dec
push
cmps
dec
sub
xlat
dec
pop
jmp
ss
mov
mov
(bad)
mov
into
sub
inc
sub
pusha
imul
ror
clc
imul
rcr
jecxz
mov
rcl
cwde
repz
sub
idiv
cs
cmp
lock
sbb
inc
push
xchg
jge
xchg
sbb
leave
push
bound
cmp
push
add
xor
mov
push
fsubr
xchg
stc
dec
sbb
outs
in
out
mov
lods
ja
not
lods
hlt
jmp
popf
aas
and
dec
out
stos
js
inc
xchg
pop
fmul
or
das
push
mov
stc
lea
dec
and
add
jl
bnd
mov
jnp
lods
xchg
jge
jns
mov
mov
inc
aam
push
or
mov
lahf
repz
push
std
pop
mov
stos
stc
test
mov
lds
dec
sti
out
nop
push
cmp
xchg
dec
xor
pop
pop
lods
clc
inc
sub
arpl
push
pop
mov
push
(bad)
xchg
fdivr
shl
and
jo
loope
es
cmp
push
mov
cmp
test
sub
mov
push
jmp
mov
xor
xor
sti
cld
add
xchg
shl
inc
in
out
je
movs
jne
out
push
jnp
inc
xor
add
repz
push
(bad)
xor
jl
jae
xchg
enter
xor
xor
inc
mov
int3
(bad)
retf
push
ins
dec
xor
test
popa
dec
push
or
mov
xor
fimul
call
mov
stos
in
mov
dec
or
(bad)
xchg
test
jmp
jmp
mov
dec
sub
mov
cdq
arpl
inc
inc
xchg
mov
xchg
adc
ja
jge
je
mov
ror
inc
lahf
fdivr
add
mov
add
dec
adc
mul
inc
retf
and
out
es
dec
lea
mov
int
cmp
cmps
add
pop
fucomi
inc
adc
push
js
jle
mov
outs
ins
mov
mov
cmps
xor
dec
sbb
shr
xchg
adc
xchg
and
push
mov
sbb
cmp
xlat
inc
lea
loope
xchg
jbe
sbb
push
fst
sbb
imul
cmc
gs
(bad)
ins
push
stc
addr16
and
iret
push
jne
xchg
push
add
fsub
add
(bad)
arpl
stos
adc
fsub
in
scas
and
out
cmc
jno
jmp
stos
shl
sbb
and
mov
xchg
ret
dec
add
test
cwde
out
fst
daa
jo
mov
in
cmp
bound
push
inc
mov
adc
pop
lahf
mov
and
mov
mov
push
push
mov
lods
out
mov
and
adc
cli
pop
mov
xchg
hlt
in
movs
mov
xchg
js
or
arpl
adc
cmp
shl
dec
mov
lods
ds
inc
aam
dec
clc
inc
gs
or
push
mov
mov
daa
test
mov
cmps
sbb
cs
sbb
push
es
push
call
icebp
push
or
or
jno
push
cmp
popa
pop
loop
jp
scas
adc
dec
out
iret
pop
dec
es
lock
pop
lds
push
cmp
stos
pushf
imul
and
(bad)
jp
jecxz
add
mov
mov
push
push
add
push
stc
lods
jno
or
pop
xabort
lea
es
test
inc
(bad)
fs
and
push
and
les
and
cld
outs
fidiv
pop
imul
mov
inc
stos
mov
aaa
fild
pushf
sbb
add
jbe
jmp
rcr
cmp
cdq
aad
lea
inc
sbb
std
popa
les
jl
xor
mov
cld
mov
dec
popa
jb
out
jo
enter
and
mov
sub
push
out
adc
jmp
and
(bad)
imul
ins
sub
or
xchg
fisubr
pushf
stos
jg
mov
cmp
call
jmp
add
xchg
out
mov
jp
ret
inc
scas
repnz
pop
dec
cs
add
daa
pop
not
adc
in
dec
ret
shl
retf
add
sar
adc
inc
cmp
push
push
ror
int3
sbb
sub
or
pop
test
aam
das
sbb
test
mov
xor
fs
iret
jecxz
mov
jb
cmps
jg
push
leave
(bad)
mov
jbe
push
lds
fs
pop
push
retf
loop
cld
gs
xchg
loope
xchg
dec
xchg
mov
pop
xchg
and
(bad)
jno
push
lahf
into
xchg
mov
push
xlat
retf
jle
cld
xor
sahf
pop
dec
inc
add
addr16
and
jg
adc
pushf
pop
jge
into
adc
in
gs
mov
and
mul
push
cmp
mov
sub
cmps
sti
les
mov
retf
add
loop
add
shl
dec
clc
push
icebp
dec
sub
sub
pop
mov
data16
out
vcvtps2dq
call
pop
aaa
sub
push
fld
cmp
xor
lea
stos
xor
inc
xor
jb
sbb
jmp
jno
rcr
xor
and
adc
idiv
out
pop
and
addr16
dec
(bad)
popf
xchg
push
and
enter
and
lds
mov
jbe
xchg
pop
ins
stc
sbb
push
stos
fcmovne
and
leave
mov
jl
retf
or
rcl
dec
pushaw
sub
sar
bnd
push
pop
push
lods
dec
fmul
inc
sub
hlt
or
xchg
ja
mov
nop
dec
movs
dec
lods
sbb
cmp
jae
cli
fnstenv
fsubp
xchg
cli
push
test
pop
xor
mov
push
inc
mov
sbb
xchg
sti
jp
out
cdq
das
mov
in
mov
lods
cmc
cmp
pop
cmps
add
out
lds
or
jo
adc
mov
cs
les
sbb
mov
or
popf
mov
test
add
scas
aas
cmp
aaa
jmp
add
loope
ins
add
jnp
call
or
out
xchg
(bad)
pusha
test
inc
mov
pop
and
imul
add
xchg
sbb
jmp
inc
jnp
push
inc
inc
add
data16
mov
jmp
jg
xchg
mov
shr
div
pusha
xchg
stc
cmp
xchg
xchg
hlt
std
push
std
mov
mov
imul
loope
mov
int
mov
jmp
pop
test
cmp
imul
sbb
xchg
sub
retf
movs
cmp
hlt
lea
adc
cwde
push
outs
in
xor
call
js
enter
xchg
pop
fidiv
nop
push
mov
repz
mov
or
ficomp
test
in
adc
std
push
mov
imul
repnz
lea
je
idiv
push
xor
pushf
test
in
sbb
fild
mov
daa
pushf
xlat
add
jle
hlt
mov
mov
and
mov
jb
ja
mov
arpl
cmp
jecxz
ins
(bad)
outs
mov
dec
sub
or
mov
nop
or
(bad)
and
cmp
pop
adc
cdq
adc
mov
cmp
repz
sub
sub
cwde
cld
adc
mov
sub
fsub
xlat
jmp
push
fwait
ds
jno
add
inc
lock
in
call
out
mul
jmp
je
cmp
enter
jne
outs
out
inc
pop
cmp
mov
pop
mov
inc
push
mov
aas
in
inc
mov
arpl
add
xor
xor
rcl
bound
adc
sbb
fs
or
cmp
adc
ins
add
pop
jno
pusha
(bad)
sbb
xor
mov
imul
les
(bad)
adc
cmp
sbb
lods
mov
loop
push
inc
inc
jbe
idiv
and
retf
or
dec
inc
xchg
inc
cmp
(bad)
push
jne
cmp
ja
cmc
enter
and
dec
xchg
push
fist
dec
mov
aad
xor
test
add
retf
js
daa
mov
in
jp
jne
lock
pusha
jae
fiadd
movs
mov
loopne
jne
sahf
mov
push
aad
cdq
mov
add
mov
mov
lods
popf
cmp
sar
pop
or
pushf
adc
sbb
stos
sbb
loope
mov
sub
lods
mov
xchg
push
lock
leave
mov
or
jb
sahf
cmp
inc
add
cmp
add
hlt
inc
inc
jns
(bad)
sub
mov
mov
adc
mov
mov
sbb
push
aaa
inc
(bad)
aad
adc
inc
jo
or
adc
cmc
fisubr
dec
in
pop
xor
xchg
fcomp
push
jecxz
popa
xor
out
arpl
push
pop
test
cmp
mov
inc
or
xchg
adc
aaa
std
or
or
les
ret
add
test
or
neg
jo
in
fcom
sti
jnp
je
dec
cmp
adc
xor
mov
popa
pop
push
shr
arpl
mov
pop
jp
lock
jns
and
int3
jne
hlt
mov
(bad)
call
pop
and
cmp
and
mov
mov
(bad)
jle
inc
les
cmps
mov
jne
xchg
or
cwde
mov
not
jg
adc
push
dec
lds
and
push
xchg
pop
mov
adc
dec
movs
xchg
les
dec
adc
jle
cmp
pop
jae
mov
fild
jb
cld
mov
iret
bnd
or
inc
cmp
or
mov
pop
mov
icebp
xor
add
and
jmp
adc
mov
fsubp
movs
mov
int3
dec
mov
stos
cmp
fucom
ficom
add
mov
sbb
adc
(bad)
cmp
jl
cmp
cdq
dec
sbb
out
mov
and
or
inc
sar
pop
(bad)
sbb
jbe
or
test
dec
aad
mov
aas
shl
pop
loopne
into
and
and
ins
test
ins
mov
cli
test
ja
dec
sbb
fcom
cmp
xor
xor
stc
int
jg
adc
(bad)
dec
aas
sahf
(bad)
movs
into
jle
and
in
(bad)
mov
bound
mov
inc
das
out
dec
cmps
push
inc
fbld
add
daa
mov
fnstsw
pop
xor
stos
xchg
sbb
add
pop
pop
aas
jmp
push
jecxz
push
test
mov
xchg
push
sti
je
bound
ins
mov
sub
fbld
ins
push
in
sbb
stos
mov
and
inc
sub
mov
xor
mov
jo
inc
and
jne
scas
mov
data16
enter
jge
cmp
in
mov
dec
ja
add
test
or
jge
(bad)
mov
adc
outs
fmul
leave
(bad)
pop
adc
cmp
fs
sbb
cs
ret
inc
scas
std
jp
loop
mov
push
cmp
xchg
mov
cli
sub
pop
push
sub
add
mov
xor
and
xor
inc
sub
or
mov
adc
dec
mov
in
jmp
ret
ret
cmp
cmps
sar
dec
(bad)
test
mov
out
or
dec
xchg
jecxz
push
rcl
je
or
fdivr
and
pop
cmp
imul
shr
std
push
retf
cmp
push
les
mov
pop
pop
inc
sub
jbe
fadd
jle
jb
adc
fnsave
mov
xor
adc
or
inc
fstp
js
mov
mov
std
test
sub
es
cmp
pop
call
cmps
clc
fisttp
cld
iret
sbb
repz
imul
(bad)
scas
test
xchg
enter
sbb
test
mov
enter
(bad)
sbb
inc
mov
nop
sub
mov
sbb
adc
sysexit
retf
xor
and
xchg
addr16
cmp
fmul
cmp
push
sub
cmc
xchg
xchg
scas
xor
pop
out
push
sbb
xchg
mov
dec
iret
movs
push
inc
fimul
test
or
rol
mov
cmp
adc
lds
bnd
jns
or
inc
xchg
fldenv
sub
mov
push
lods
cmps
lods
xchg
cdq
xor
mov
mov
and
icebp
fild
or
addr16
mov
push
loopne
daa
out
lods
dec
outs
movs
call
adc
add
cmc
clc
fdivrp
mov
fs
and
mov
and
test
jecxz
pushf
dec
dec
add
mov
cmp
fs
pop
aam
ja
xchg
mov
(bad)
pop
jmp
mov
mov
leave
fs
jne
add
clc
push
(bad)
mov
jnp
mov
scas
adc
scas
(bad)
shl
mov
ins
js
cmp
sbb
outs
sub
(bad)
pop
cdq
test
push
pop
cmps
push
jo
scas
cmp
loop
call
mov
cdq
push
sbb
int3
lds
mov
jg
inc
xchg
sbb
and
sbb
test
out
fs
and
ins
out
(bad)
sbb
cld
fwait
je
pop
push
cdq
(bad)
cli
add
inc
dec
movs
pop
pop
out
jmp
mov
lock
rcl
das
in
adc
fiadd
js
sbb
jns
jnp
mov
jle
js
sar
adc
mov
push
std
xor
add
jmp
inc
lods
xor
stos
cmps
push
fs
sbb
out
mov
(bad)
mov
cmp
xor
test
mov
cli
or
je
adc
mov
or
nop
pop
pop
cmp
stc
pop
icebp
call
(bad)
pop
imul
sahf
ds
lahf
mov
(bad)
out
mov
dec
push
xor
ficom
outs
mov
popa
icebp
test
cdq
lods
(bad)
cli
ficomp
and
imul
jns
jmp
shl
xlat
idiv
push
inc
popf
into
inc
adc
ret
pop
mov
leave
pusha
pusha
(bad)
cdq
fisub
mov
jnp
int
or
int3
mov
mov
out
sbb
inc
adc
push
aaa
or
mov
(bad)
(bad)
inc
xor
sub
push
outs
nop
or
scas
rol
mov
sbb
sub
mov
mov
push
and
mov
add
scas
sbb
and
aad
mov
cwde
push
mov
jbe
xor
inc
cld
xchg
aaa
xchg
ss
xor
jg
push
dec
hlt
mov
(bad)
int
je
les
or
sub
ss
pop
ret
xchg
(bad)
(bad)
xor
mov
push
mov
aam
xchg
aad
mov
cmp
sbb
retf
jmp
dec
xchg
dec
and
add
cmc
fsubr
cmc
movs
push
inc
fisttp
push
jmp
xor
push
repz
das
push
mov
int3
fwait
adc
test
or
loopne
cmps
imul
je
pop
inc
repnz
stc
repnz
mov
push
jecxz
das
or
and
and
and
fs
ret
adc
shl
retf
loope
pusha
push
es
sub
ins
js
xchg
sbb
push
xchg
and
inc
cmp
dec
daa
dec
dec
out
sbb
sub
sbb
cmp
test
sbb
sbb
xchg
push
test
loopne
loop
call
popf
or
and
fild
inc
cs
retf
xchg
mov
jmp
mov
add
adc
pop
lock
pop
lods
repz
popf
in
fild
pop
add
shr
dec
jbe
mov
call
cmp
mov
nop
sub
and
js
push
add
xchg
sbb
ins
jle
js
mov
aad
and
sub
repz
jne
mov
data16
sub
dec
mov
(bad)
or
arpl
outs
test
xchg
add
adc
mov
repz
out
mov
push
(bad)
fld
mov
test
arpl
push
sub
les
aad
xchg
icebp
test
aas
scas
add
xor
sub
or
mov
push
inc
jmp
aad
test
dec
push
sub
outs
int3
call
mov
nop
add
pop
mov
xor
icebp
cmp
inc
aam
pop
mov
fimul
test
mov
cmps
jns
call
out
retf
or
subps
nop
retf
mov
xor
xchg
inc
pop
sbb
out
cmps
jno
jle
jp
in
test
sub
add
adc
pop
xor
adc
popa
sahf
mov
xor
das
sbb
push
mov
adc
and
sahf
mov
xchg
or
pop
push
mov
(bad)
mul
lock
and
or
ds
xchg
push
std
adc
jl
aas
sub
ss
test
shl
inc
loope
sbb
popf
pusha
fidivr
mov
mov
sub
out
je
add
les
out
repnz
fsubr
fs
mov
xchg
cmp
lods
imul
mov
outs
dec
ror
xrelease
xlat
rcr
adc
jae
pop
sti
mov
in
cwde
ins
addr16
in
mov
push
pop
out
mov
cmc
int
pusha
cmp
or
test
sub
aaa
or
sbb
push
hlt
pushf
mov
jne
leave
out
xchg
(bad)
sar
fwait
pop
cli
(bad)
test
sub
je
jne
pop
lds
arpl
iret
in
inc
add
popa
xor
and
daa
xchg
lahf
cmp
sub
leave
mov
adc
dec
sub
dec
loope
mov
arpl
mov
stos
pop
rcr
jnp
sar
sbb
cmp
fs
int
ror
pmaxub
inc
imul
adc
rol
shl
cmp
sti
hlt
shr
fld
mov
cwde
ror
and
enter
inc
mov
fcmovnb
jmp
xchg
and
push
imul
pop
test
loop
loopne
sub
mov
pop
rcr
or
dec
idiv
dec
shl
div
iret
adc
pop
jno
xchg
or
or
and
push
mov
pop
cmp
daa
retf
pop
pop
mov
neg
adc
outs
mov
cmp
xchg
xor
and
clc
push
jae
dec
add
jne
div
out
push
out
mov
rol
mov
fdiv
or
int3
mov
js
mov
jno
sub
pop
sbb
dec
ret
gs
out
mov
add
es
xor
test
jae
cdq
xor
jmp
xchg
inc
aad
xor
pop
mov
into
jns
mov
xor
aaa
mov
mov
xlat
(bad)
lods
inc
outs
lock
gs
je
inc
sub
pushf
xchg
inc
inc
add
out
scas
rol
or
mov
pop
test
out
lds
fnsave
or
in
inc
outs
pop
(bad)
or
pusha
and
fmul
mov
lahf
sub
mov
sub
push
jbe
mov
lahf
adc
pop
(bad)
jle
dec
rol
mov
into
inc
leave
push
and
out
jns
dec
int3
bound
add
shl
xor
call
dec
daa
cmp
dec
inc
fldenv
jl
add
sbb
push
mov
jp
dec
adc
shr
ins
clc
pop
xor
test
push
jbe
sub
lds
or
jne
lds
outs
push
jmp
mov
add
sub
mov
dec
imul
push
arpl
and
push
jns
in
jle
es
fnstenv
enter
fdiv
sbb
cmps
mov
pop
inc
xor
sbb
test
fwait
mov
push
sldt
jmp
xchg
movs
or
jp
jns
cmp
addr16
jge
push
fnstenv
fisub
ds
es
adc
div
scas
or
push
clts
add
ja
cwde
aam
pop
pop
xchg
and
repnz
jmp
clc
je
stos
retf
lahf
mov
mov
sub
outs
add
cmp
lahf
jno
cwde
xor
mov
mov
jno
or
mov
xchg
and
bound
lds
repz
push
daa
xlat
gs
neg
lahf
div
outs
mov
dec
inc
and
nop
push
cmc
push
xor
xchg
fst
or
arpl
dec
push
adc
push
jmp
mov
cmp
and
push
dec
sti
push
sub
mov
scas
sub
push
mov
and
out
push
aad
mov
xchg
mov
retf
ja
add
cwde
jmp
fadd
(bad)
dec
add
test
sahf
cwde
fwait
dec
jae
ins
scas
dec
les
(bad)
jbe
cmp
fdivr
and
(bad)
pop
adc
pusha
mov
inc
nop
xchg
mov
xchg
test
pop
or
fidivr
push
sub
pop
sub
mov
jmp
stos
cli
sbb
push
mov
lods
jno
jne
fwait
(bad)
pop
cmp
inc
lods
jmp
lock
push
test
xchg
inc
jmp
clc
cmps
jge
or
out
jl
push
mov
in
arpl
lods
enter
ja
adc
and
pop
mov
xor
jp
sub
or
pop
mov
fwait
push
pop
dec
shl
movs
cmc
mov
xor
mov
and
mov
sub
cmp
xor
mov
jg
mov
and
into
mov
inc
aam
add
ins
cmps
push
retf
sub
daa
movs
xor
sbb
push
add
cmps
pop
imul
imul
dec
test
cmp
test
mov
lahf
fistp
adc
lea
outs
mov
pop
pop
iret
inc
xchg
retf
mov
aam
mov
mov
mov
xor
cmc
(bad)
(bad)
in
stos
pop
arpl
xor
jl
hlt
in
xor
es
dec
xchg
call
sub
xchg
(bad)
icebp
in
sub
aam
mov
scas
into
pop
cdq
fdivr
sub
enter
les
inc
jp
push
inc
leave
xchg
lea
mov
inc
fiadd
jb
lahf
shr
mov
push
stos
jno
push
lods
ss
xor
and
or
xchg
sub
aam
cmp
inc
ja
pop
mov
dec
(bad)
dec
dec
add
push
scas
adc
fmulp
and
push
mov
lahf
loop
pop
xor
xor
arpl
jae
mov
retf
xchg
rcr
inc
inc
jae
or
(bad)
loope
imul
call
nop
xchg
fsubr
shl
inc
xor
cdq
pop
stos
fst
pushf
cmp
pop
push
ins
inc
aam
inc
sub
add
les
stc
fisttp
push
xor
add
or
outs
fwait
add
dec
(bad)
call
retf
mov
out
jo
in
je
(bad)
(bad)
in
mov
jns
addr16
repz
daa
cmp
inc
jns
ror
lds
bound
and
ins
les
or
jo
cmc
jb
dec
adc
pop
divps
add
clc
mov
xchg
in
ret
mov
ret
dec
inc
mov
inc
sti
mov
sbb
jg
push
adc
and
loop
adc
int
inc
and
scas
ins
addr16
and
scas
mov
push
into
popf
inc
inc
mov
and
pusha
sub
push
xlat
ins
sar
mov
nop
(bad)
out
es
cld
push
mov
sbb
mov
loope
cdq
nop
xchg
add
das
dec
popf
daa
ja
iret
push
fst
pusha
jmp
mov
pmaxub
rcr
clc
popf
xchg
jbe
xor
stc
neg
pop
xchg
sbb
pop
jno
in
cwde
or
pop
pop
outs
inc
adc
xor
sahf
jns
arpl
scas
adc
nop
jl
dec
cmp
jne
and
mov
pusha
fild
fcom
mov
imul
imul
das
sar
ss
sbb
test
push
jb
jne
inc
shl
cli
xchg
nop
pop
mov
cmp
leave
aam
inc
adc
pop
inc
loope
cmp
aam
(bad)
fadd
aam
ret
mov
and
jg
jge
push
add
mov
arpl
or
or
es
mov
fcmovnb
stos
inc
leave
aaa
bound
rep
idiv
leave
(bad)
jmp
jnp
and
xchg
xor
push
or
or
xchg
jmp
leave
inc
cmp
ss
dec
xchg
stos
jo
in
aas
adc
fdiv
sahf
aam
je
xchg
scas
(bad)
mov
outs
rol
out
push
and
movs
jo
pop
sbb
leave
or
jl
sbb
mov
xchg
lods
stos
push
in
addr16
mov
test
xchg
repz
adc
mov
cdq
call
add
stos
test
or
fsubr
repnz
shl
inc
mov
inc
sub
xchg
scas
jge
push
jge
mov
jo
xor
aam
in
mov
push
jecxz
xchg
stos
xor
add
ds
or
mov
mov
out
out
cmp
lea
add
ret
mov
cmp
in
fld
into
xchg
add
push
mov
sbb
sbb
retf
mov
sbb
mov
jo
frstor
dec
or
out
dec
sbb
not
mov
add
aam
dec
cmp
mov
mov
jge
mov
sub
dec
cli
jg
mov
push
iret
rol
adc
mov
jge
repnz
inc
cmps
mov
xchg
dec
(bad)
or
jb
inc
inc
xchg
push
push
sti
and
dec
push
leave
mov
gs
ss
push
das
iret
inc
ffree
sbb
jge
neg
sub
dec
xchg
pop
sbb
repnz
les
test
stos
lods
jg
xlat
or
mov
les
inc
sub
loope
ins
ret
cmp
cmps
dec
fs
jge
ins
adc
sub
cmpxchg
and
fnstenv
dec
stc
(bad)
movs
leave
push
sar
out
mov
pushf
mov
addr16
sub
mov
cmp
test
in
jl
addr16
cmps
xor
aas
mov
add
ins
or
popf
repnz
sbb
pushf
mov
std
mov
(bad)
aam
cmps
(bad)
nop
(bad)
add
out
jo
cmps
jae
inc
mov
adc
mov
rcl
leave
push
scas
push
mov
push
int3
out
shl
jp
test
sar
or
in
push
shl
pop
fist
adc
out
mov
mov
xchg
pushf
fadd
push
inc
inc
pop
and
pop
adc
cmp
loope
retf
push
sahf
lahf
repz
push
ds
test
xchg
lds
jecxz
cmp
leave
(bad)
mov
test
outs
pop
pop
add
adc
ret
mov
cmp
mov
retf
push
add
xchg
sbb
or
mov
sub
jle
pop
xchg
jmp
inc
mov
hlt
pop
mov
pop
push
mov
pop
inc
add
add
repz
nop
jge
loopne
xchg
enter
leave
mov
sub
pushfw
addps
mov
test
mov
add
jno
ror
and
mov
add
adc
nop
in
ins
loopne
aas
sub
lea
ss
add
js
aad
mov
add
jp
bnd
push
inc
xchg
fdivrp
mov
shl
shl
out
adc
mov
push
lods
(bad)
mov
call
jmp
push
xchg
mov
sub
scas
ret
in
mov
nop
add
pop
out
add
adc
mov
cmp
rep
pop
(bad)
dec
inc
ss
mov
and
adc
jl
xchg
jo
or
fbstp
pop
loopne
mov
mov
mov
fucomip
test
pop
or
push
add
leave
cmp
imul
fs
and
pop
or
push
call
leave
add
loope
cmp
mov
test
fcomp
mov
sbb
jge
inc
inc
or
aaa
lahf
cs
sub
std
xor
inc
jecxz
mov
adc
xchg
arpl
xor
ror
gs
pop
shl
out
push
in
loop
mov
xlat
ret
ror
and
in
jle
rcl
sbb
add
loop
ins
addr16
mov
inc
xor
shl
sub
push
and
imul
mov
sahf
repnz
loop
add
push
push
test
sbb
cmps
mul
movs
lahf
push
cwde
stos
ins
pop
jbe
jae
imul
cmp
inc
push
pusha
jge
push
int3
jge
xchg
jns
aas
sub
repnz
(bad)
rcl
mov
ficom
jmp
das
pop
cmc
dec
dec
popa
fistp
ins
js
movs
inc
(bad)
mov
mov
mov
stos
mov
movs
sbb
hlt
(bad)
pop
pop
mov
push
adc
sub
std
xchg
ins
jmp
push
xor
push
sub
xchg
out
ins
ret
fcom
mov
leave
xor
jbe
icebp
loopne
je
cmp
or
lock
xchg
sub
cli
hlt
and
dec
xlat
scas
sub
clc
loope
in
loop
add
dec
fcomp
inc
pop
loope
push
sub
repnz
mov
add
cmps
inc
test
jno
jnp
sub
inc
dec
mov
mov
mov
stc
outs
dec
cld
jl
xchg
or
pop
pushf
dec
mov
and
jle
cmp
adc
and
fst
and
fmul
lea
out
push
daa
inc
or
cmp
push
hlt
ins
cmp
add
jl
mov
push
arpl
add
dec
cmc
push
xchg
mov
in
jle
mov
sbb
ror
inc
test
(bad)
and
gs
jnp
dec
pop
xchg
pop
dec
push
and
mov
(bad)
retf
jns
jno
(bad)
jecxz
aam
sbb
add
out
push
xchg
repnz
out
and
pop
seto
test
mov
scas
out
dec
dec
jle
add
dec
sbb
push
(bad)
shl
arpl
add
lea
dec
jb
out
test
fnstcw
cdq
and
xchg
(bad)
mov
or
retf
mov
imul
pop
call
pop
out
dec
xor
fisttp
fstp
jne
push
jmp
push
jmp
aam
xchg
add
ins
push
and
les
mov
fnsave
ror
movs
es
mov
inc
fdivr
adc
scas
test
jg
sar
sbb
fwait
push
bswap
arpl
and
in
stos
loop
add
(bad)
mov
add
xor
sbb
mov
push
lea
cmp
sbb
and
aas
(bad)
fldenv
cdq
adc
aas
aas
call
jae
and
adc
ret
adc
push
xchg
inc
aaa
fnstsw
push
jg
pop
xchg
and
aas
xchg
dec
inc
xchg
ins
test
lods
mov
mov
push
jp
fndisi(8087
shr
pop
jp
and
mov
test
push
imul
sub
icebp
shl
into
mov
jge
inc
and
jle
(bad)
push
or
arpl
cmp
lds
jae
(bad)
out
lds
xlat
lods
mov
cmp
inc
adc
inc
mov
aaa
in
cmc
mov
icebp
ja
mov
(bad)
pop
sub
push
or
push
xchg
in
or
cmp
or
push
imul
pop
movs
sbb
das
arpl
adc
cmp
call
jl
loopne
int3
(bad)
mov
mov
cdq
sub
fucom
idiv
test
movs
fmul
std
adc
and
js
cmps
push
xchg
pop
in
fidivr
push
sub
xor
ins
retf
and
ret
jbe
pop
cld
bound
add
sbb
and
movs
push
push
fcomi
aas
int
clc
mov
repnz
xchg
cli
add
aaa
pop
cdq
stos
scas
dec
in
mov
add
cmp
or
cmps
mov
xchg
xchg
cmp
jno
add
inc
fild
inc
test
sub
cwde
cmp
sbb
mov
cmp
push
loop
jg
retf
sub
add
(bad)
push
pusha
and
pop
(bad)
dec
mov
ficom
jp
aad
sub
lahf
rcr
gs
add
lods
fmul
imul
mov
xchg
and
add
dec
std
mov
inc
(bad)
cmc
xchg
pushf
sbb
jle
enter
cmp
and
xchg
or
aas
jno
retf
fist
shl
add
xlat
xchg
cmc
pusha
xchg
and
sar
push
add
jge
cmps
lahf
loopne
mov
test
push
xor
jae
inc
cmp
push
or
shl
sub
cmp
mov
mov
inc
xor
pop
iret
aad
mov
mov
sbb
xchg
mov
xchg
mov
mov
pop
lahf
cmp
adc
cmp
sbb
ret
mov
add
shl
jmp
dec
sbb
and
sti
sbb
push
mov
inc
push
mov
popf
jo
ins
outs
push
out
dec
repnz
pop
sub
cli
sub
inc
push
ds
mov
repz
push
cmp
fdiv
cmps
cs
jae
pop
lahf
sub
push
stos
and
sbb
mov
push
outs
(bad)
int3
inc
add
add
lods
cmp
std
out
push
jae
pop
test
sbb
inc
cmps
jne
push
addr16
pop
push
sub
into
in
in
mov
mov
jbe
jnp
daa
cmps
push
inc
jg
aas
add
mov
int
adc
(bad)
mov
add
and
and
int
xor
fcom
jle
mov
fild
fcom
div
imul
or
inc
or
mov
push
inc
cmc
aas
inc
scas
les
mov
mov
jle
dec
push
pop
int3
cli
mov
sahf
adc
lock
push
xor
push
enter
mov
lds
idiv
mov
sti
pop
(bad)
cld
or
mov
sub
mov
xchg
xor
cmp
add
fcom
mov
cwde
or
mov
push
add
sbb
ror
es
pushf
mov
sahf
pop
sub
fisubr
inc
mov
cmp
or
imul
mov
jo
(bad)
adc
jmp
xchg
(bad)
arpl
xchg
xor
imul
loope
jecxz
(bad)
(bad)
and
sub
mov
mov
shl
dec
add
icebp
fcmovnu
out
out
dec
lea
ja
pushf
adc
dec
adc
lea
dec
mov
inc
and
xor
push
mov
mov
and
retf
xor
test
std
in
mov
ret
cmp
jmp
mov
xor
xor
push
push
mov
movs
or
stc
sub
fmul
cmc
mov
dec
outs
int3
imul
push
xchg
push
xchg
test
ds
outs
mov
mov
pushf
xchg
cs
jge
add
xor
fprem
out
nop
jmp
jg
jp
shl
adc
push
mov
enter
inc
movs
jno
nop
call
jp
dec
sar
movs
xchg
cmp
shl
movs
(bad)
adc
add
pop
xchg
das
lds
stos
sbb
pushf
je
or
in
xchg
or
adc
mov
data16
cmp
jb
sbb
ds
sti
int3
xchg
pop
aaa
call
adc
mov
psubsw
aas
sahf
inc
push
xchg
xor
movs
and
out
jmp
(bad)
mov
mov
push
(bad)
lds
adc
lods
mov
inc
mov
leave
xchg
or
mov
dec
das
arpl
mov
mov
mov
inc
adc
loop
cmp
aam
pop
cmc
jmp
push
loopne
ret
cmp
sbb
cmp
xchg
adc
pop
dec
sahf
mov
and
mov
inc
mov
cmps
cmp
or
pop
(bad)
mov
mov
sbb
mov
pushf
add
mov
jb
and
mov
fist
pop
mov
push
test
fcmove
cmp
adc
call
push
push
jecxz
mov
jge
dec
and
arpl
retf
cmps
push
ins
xchg
or
mov
scas
fnsave
xchg
sub
popa
out
jbe
inc
(bad)
mov
test
push
mov
or
adc
mov
xchg
movs
sahf
mov
ret
fadd
push
and
dec
retf
jmp
test
popf
cwde
sbb
ins
push
mov
inc
icebp
popf
out
shl
mov
dec
ja
mov
xor
jno
dec
lea
sub
mov
clc
and
add
stos
retf
hlt
js
push
cmp
addr16
out
das
aaa
(bad)
xlat
push
stos
mov
xor
fstp
ins
mov
es
dec
jne
popa
push
fldenv
retf
jbe
aad
je
fs
ficomp
inc
cdq
inc
push
addr16
arpl
and
icebp
inc
mov
mov
push
es
lods
xchg
and
or
xchg
popa
arpl
lea
mov
xor
rcl
popa
enter
mov
jmp
iret
xor
pop
outs
xchg
xchg
ds
sahf
inc
adc
and
sbb
and
xor
pop
sub
ret
or
push
mov
adc
mov
push
push
xor
out
pop
(bad)
mul
mov
add
jmp
adc
shr
(bad)
cdq
lds
cdq
xchg
test
and
bound
mov
mov
xchg
lds
jmp
pop
imul
fisubr
stos
jl
sbb
xchg
enter
(bad)
out
(bad)
out
stos
dec
popa
mov
xor
nop
adc
xchg
push
mov
jns
jp
std
sahf
es
or
mov
push
pop
pop
lock
xor
retf
adc
jg
inc
push
mov
in
cmps
jnp
clc
push
call
push
nop
xor
ds
inc
int
in
gs
jmp
in
xor
xor
adc
movs
mov
or
xlat
test
movs
jne
mov
fistp
push
stc
jecxz
cmp
xlat
clc
loope
sub
xchg
adc
add
sbb
fcomp
adc
jns
push
in
test
xchg
push
mov
popa
repnz
mov
pop
push
pop
bound
mov
push
dec
add
inc
xchg
xchg
adc
cs
and
rol
mov
shr
mov
ja
outs
xor
mov
scas
lahf
daa
aam
in
ret
outs
cmp
out
enter
push
push
xchg
fidivr
leave
cmp
not
je
in
push
mov
mov
mov
or
dec
shl
xchg
fcomp
jmp
fldcw
sbb
add
std
loop
fld
hlt
sub
shr
sbb
or
and
xchg
rep
rcl
lea
daa
and
and
cli
sbb
and
add
mov
jnp
scas
sbb
fisttp
jp
push
dec
scas
mov
fwait
sbb
cld
pusha
sub
jb
fwait
pushf
and
jns
xor
pop
ds
daa
push
xor
mov
shr
imul
test
mov
pop
mov
ja
jmp
dec
leave
(bad)
call
add
imul
sbb
ficom
adc
jo
inc
stos
mov
mov
(bad)
out
lahf
jne
ds
xchg
aam
push
jge
test
clc
iret
repz
push
pop
jmp
out
pop
rcr
add
sub
mov
push
jae
test
int
mov
sub
jle
pop
add
adc
outs
loop
cs
mov
ret
xchg
js
js
call
adc
adc
clc
nop
in
fidiv
sub
fcomp
scas
movs
rol
and
mov
movs
pop
cmp
pop
call
push
loope
xor
adc
scas
hlt
cmp
icebp
sbb
sldt
cmp
adc
pop
cld
ja
push
jg
push
inc
addr16
adc
shr
xor
sub
test
test
sti
popa
pusha
mov
aam
push
xor
sub
or
cmp
sub
(bad)
pop
outs
das
ja
dec
sbb
pop
popa
mov
sbb
pop
scas
cmc
xchg
into
xor
sbb
push
jne
or
mov
and
ins
ror
xchg
std
mov
retf
jnp
test
aad
inc
adc
lea
mul
into
mov
mov
xor
call
mov
call
mov
jp
adc
(bad)
push
sbb
loopne
nop
adc
sahf
dec
cmp
gs
push
retf
sbb
sub
jne
and
xor
retf
out
jl
les
hlt
movs
mov
aad
out
add
dec
jbe
aam
mov
mov
retf
int
inc
mov
mov
mov
mov
inc
dec
push
jecxz
ja
mov
retf
sub
iret
jmp
pop
add
cmp
std
inc
fcomp
xchg
mov
cmp
jne
xchg
cmps
test
outs
out
dec
outs
sti
jbe
iret
cmp
fdiv
call
cdq
sbb
jp
or
ror
fbld
cwde
ds
fnstcw
gs
mov
mov
(bad)
push
mov
mov
cmp
dec
add
in
mov
addr16
jo
jb
inc
enter
mov
jmp
mov
push
dec
sbb
jbe
or
inc
hlt
push
pop
pop
lahf
adc
cmp
adc
add
push
stc
ret
push
pop
or
pop
mov
out
adc
imul
lock
and
and
xor
add
push
les
mov
or
out
aam
jb
sbb
jns
adc
add
jge
xor
repz
(bad)
jle
sbb
aas
dec
out
lds
xlat
jns
loopne
dec
dec
(bad)
or
jle
jo
jne
es
xchg
loope
repnz
mov
jo
sti
rcr
xchg
ins
addr16
cld
call
in
add
cmp
sbb
pop
cwde
out
push
jnp
data16
push
das
xor
retf
in
js
(bad)
(bad)
int
mov
je
(bad)
lea
sahf
data16
cld
fs
adc
or
xor
in
int
daa
mov
stc
mov
pop
outs
xchg
dec
xchg
and
icebp
rcr
mov
gs
xor
(bad)
or
cmp
fnsave
es
test
(bad)
mov
sub
in
inc
sbb
ins
mov
lds
dec
cmp
lock
ror
cwde
adc
cmp
sbb
jns
dec
sub
cmps
cmp
fisttp
nop
in
push
mov
rcr
setge
mov
retf
mov
pop
out
push
push
pop
jle
movs
aaa
cmp
dec
test
aad
xchg
and
popa
(bad)
cmp
push
fwait
jne
imul
sub
xchg
call
and
inc
push
loopne
fcmovb
nop
mov
call
stos
sub
jl
sbb
add
pop
mov
xchg
and
out
adc
sub
cmp
add
loope
xchg
xor
movs
(bad)
dec
push
add
jns
push
retf
in
jnp
out
add
mov
xchg
sbb
ins
inc
sub
test
sahf
mov
jge
lea
xchg
lahf
xchg
xor
pop
nop
je
jl
addr16
lahf
gs
call
lds
cmp
rcr
out
lods
adc
jecxz
rcl
test
pop
stc
xlat
and
ret
(bad)
sbb
addr16
sti
sub
mov
cmp
outs
call
pusha
mov
dec
sbb
cmp
fidivr
inc
cdq
clc
adc
inc
mov
push
jno
outs
add
and
jecxz
shl
ins
xchg
lods
les
push
out
or
add
sub
add
fbld
adc
sti
fist
es
inc
push
dec
mov
sub
xor
es
xchg
in
dec
call
push
jg
pop
inc
xchg
es
mov
xor
adc
ror
into
sahf
arpl
sub
push
mov
sub
in
retf
sub
push
shr
add
cmps
cmp
adc
sar
and
pop
cld
(bad)
shr
and
sbb
inc
jl
call
popf
fcomi
stos
retf
cdq
pop
mov
rol
(bad)
pop
sub
lods
sbb
inc
or
(bad)
movs
cmp
mov
push
inc
in
mov
call
popf
or
push
cmp
call
mov
clc
sar
fcomip
call
or
and
mov
push
rcl
push
mov
push
jno
xchg
push
je
js
add
or
in
adc
mov
shl
lds
push
stos
push
mov
call
(bad)
aad
data16
aad
jecxz
xchg
sbb
in
sbb
and
cwde
cld
xlat
clc
and
jle
aad
jno
retf
jbe
cwde
push
add
jae
mov
fst
or
test
mov
inc
or
mov
inc
sub
adc
retf
pop
mov
and
sub
ret
(bad)
js
repz
adc
jmp
in
icebp
pop
fwait
push
adc
mov
dec
add
mov
jmp
dec
or
out
mov
ss
mov
popf
mov
dec
push
xchg
mov
mov
pop
inc
inc
and
sbb
inc
cmp
rcr
pop
pop
test
pop
xor
iret
inc
sbb
pop
jmp
repnz
cli
outs
adc
and
push
fsubr
adc
push
fs
popf
cmp
dec
lahf
mov
repnz
xor
or
inc
pop
xor
sbb
adc
mov
xchg
stos
inc
call
or
add
xchg
scas
sbb
push
inc
xor
pusha
jns
pop
es
jnp
push
imul
dec
add
push
sbb
test
xor
fs
xor
sbb
repnz
or
xchg
xchg
fbstp
cmp
bound
les
retf
adc
add
pop
dec
mov
(bad)
imul
cwde
fistp
imul
into
mov
adc
push
sub
cmp
sbb
out
in
mov
loop
push
mov
xor
cmp
enter
xlat
into
jb
inc
lahf
and
scas
pushf
adc
sbb
js
pop
pop
xchg
mov
xchg
and
leave
ficom
jmp
shl
adc
pop
sbb
jp
sbb
cld
ins
xchg
call
dec
loopne
or
jecxz
pushf
xchg
add
add
jmp
rcl
mov
fwait
sub
jno
add
test
repnz
das
push
mov
mov
pop
shl
test
ins
into
mov
out
inc
push
loop
cs
loopne
repz
xchg
adc
lea
push
dec
pop
mov
inc
das
lock
mov
sbb
sbb
scas
mov
es
cli
lods
cmp
mov
hlt
cmps
mov
xor
out
xchg
aaa
push
pusha
jg
add
xor
and
cmc
sbb
mov
mov
gs
popa
ins
sbb
adc
add
xchg
xchg
test
stc
(bad)
dec
out
sbb
pusha
mov
stc
popa
dec
dec
adc
pop
neg
ror
push
or
mov
sub
or
push
ds
test
adc
cmp
jb
cld
cmp
loop
ret
push
loopne
sbb
call
out
das
frstor
or
mov
sub
jo
pop
ss
inc
lods
sub
inc
inc
(bad)
mov
inc
xchg
adc
inc
popw
in
sub
add
and
aaa
mov
(bad)
je
push
push
inc
mov
stos
lock
lds
adc
mov
and
push
pop
jbe
movs
inc
hlt
mov
mov
test
rcr
nop
es
scas
xor
xor
sti
xor
mov
sti
pop
fnstcw
cli
pop
inc
or
inc
cld
dec
mov
mov
aad
cmp
cmp
rcl
dec
pop
nop
stos
loopne
pop
call
pop
outs
fst
add
pop
mov
or
xchg
out
cmp
jmp
push
or
jp
out
push
jg
nop
div
dec
jp
xor
jl
test
jl
xor
cmps
popa
mov
or
xor
jl
scas
jb
pusha
inc
popf
or
ror
jl
add
pop
stos
sti
es
mov
add
mov
shl
or
pop
or
icebp
add
mov
(bad)
and
xlat
jno
push
pop
add
mov
sub
pop
and
nop
pop
push
fist
pushf
sbb
inc
les
adc
xchg
fadd
push
xor
push
and
mov
loope
loopne
ret
out
push
add
aaa
xor
add
pop
cmp
fs
ja
fnop
and
shl
ins
jecxz
cmps
aaa
push
psubd
mov
imul
jg
fs
cli
sahf
mov
icebp
mov
gs
sub
out
rol
push
(bad)
mov
adc
jge
add
inc
jb
dec
aad
pusha
mov
cmc
dec
push
mov
xor
gs
push
cmp
aad
push
xor
ins
jl
aad
cmp
mov
lods
repz
cdq
stos
sub
aaa
push
ret
push
add
or
sub
das
loopne
jnp
push
xchg
fidivr
stos
dec
cmc
xor
jmp
out
sub
xchg
adc
sbb
int
scas
inc
sub
daa
jns
inc
lods
and
sti
sub
dec
cmc
repz
push
add
sbb
frstor
ins
sub
leave
mov
clc
div
xchg
idiv
sub
or
ins
ins
out
sub
push
inc
fdivr
repnz
loope
mov
iret
ss
repnz
push
stos
cmc
xchg
movs
ja
das
out
in
bound
inc
das
push
sub
daa
pop
xchg
push
(bad)
gs
mov
push
call
mov
or
retf
sbb
or
sub
adc
stos
mov
ja
out
rcr
and
test
push
or
movs
cmp
add
inc
dec
and
pop
mov
ret
pop
cwde
inc
adc
pop
mov
or
mov
and
into
lds
jno
in
aam
lods
shl
inc
or
clc
xchg
(bad)
adc
ins
mov
add
sahf
or
push
retf
xchg
dec
pop
and
mov
inc
add
shl
in
push
inc
sahf
aad
push
sti
mov
push
outs
xchg
mov
nop
popa
add
jecxz
mov
sub
repnz
scas
pop
and
push
fdivr
dec
inc
sbb
xor
or
aam
rcl
ror
data16
xor
mov
jmp
add
mov
std
mov
push
(bad)
xchg
xchg
xchg
cmp
test
push
mov
icebp
pop
jle
push
or
sbb
sub
in
mov
pop
jbe
in
mov
rol
inc
fild
ja
sbb
xchg
dec
sahf
add
stc
adc
dec
add
popa
pushf
repz
pop
mov
jmp
scas
repnz
dec
add
ja
sbb
jne
fst
and
aaa
ja
(bad)
leave
shr
call
lea
jmp
pop
outs
out
jne
push
in
retf
jmp
push
push
jne
into
mov
or
push
push
fdivr
aad
ins
mov
fs
test
or
adc
or
jge
inc
mov
xchg
sub
push
repnz
popa
pop
inc
xor
xlat
imul
mov
xlat
dec
imul
xor
test
dec
or
pop
xor
jb
cmp
loop
push
sbb
cwde
sahf
pop
imul
gs
sub
mov
shl
popa
imul
xchg
sbb
aaa
cs
lds
push
das
xchg
je
jnp
jp
mov
sub
add
sti
sbb
mov
or
or
xchg
lods
sbb
pop
cmp
test
loop
out
mov
jns
movs
scas
inc
push
sbb
push
jo
popa
ins
pop
sbb
xlat
push
shl
sbb
imul
es
xchg
push
adc
out
repnz
jecxz
sub
xchg
push
and
cmps
jns
cmp
cmp
push
cmp
(bad)
fimul
lock
or
push
fisubr
cmp
loopne
leave
pop
shr
iret
push
test
stos
in
ret
mov
push
je
out
jb
scas
pop
jmp
stos
add
fbld
add
and
in
pop
cmps
outs
(bad)
push
in
push
in
sub
xchg
imul
sar
in
cwde
sbb
repz
out
repz
xchg
add
xor
int3
out
mov
cmp
int
push
iret
xchg
cmp
cmps
iret
pop
cmp
out
sbb
sbb
jmp
shl
pop
mov
adc
dec
movs
scas
out
(bad)
js
and
dec
lods
dec
mov
cmp
sub
xchg
cmps
xchg
add
out
in
push
sbb
mov
fucomip
jg
or
int3
pop
xchg
outs
adc
test
out
and
or
out
mov
xor
push
je
or
in
jb
or
mov
dec
(bad)
stos
sbb
(bad)
iret
mov
xchg
jmp
inc
inc
pop
jo
test
mov
stos
mov
mov
aas
cld
sub
cdq
scas
loope
adc
or
fs
test
das
repz
into
aad
in
lods
(bad)
xlat
xchg
sbb
fcmovnu
dec
xchg
fdivr
imul
xchg
pop
jns
je
and
sub
and
shl
cmp
dec
adc
cmps
sub
pop
mov
inc
sub
ficom
push
les
mov
in
aam
xor
sbb
push
sbb
sbb
cli
stos
jmp
mov
mov
and
stos
movs
xlat
leave
(bad)
xchg
xlat
mov
in
or
mov
push
mov
gs
mov
fcomp
rcr
fimul
fmul
xchg
mov
mov
jo
mov
jae
dec
inc
aam
xor
xchg
jnp
cmc
icebp
ins
fsubr
lock
add
leave
adc
outs
xchg
ss
add
movs
cs
into
out
sbb
mov
push
mov
push
and
jl
aas
mov
jmp
or
(bad)
pop
sbb
adc
mov
sub
jge
jle
loope
sub
stc
xchg
pop
xchg
mov
mov
in
popf
movs
sti
cmp
loop
(bad)
cld
aaa
jp
adc
and
mov
sub
jmp
fsubr
sbb
in
stc
pop
pop
pop
nop
xor
inc
rcl
sti
lods
jnp
int
mov
push
jp
out
jne
fnstenv
jns
or
pop
jp
xor
pop
cmp
loop
mov
mov
scas
jl
(bad)
lods
mov
mov
ret
pop
xchg
mov
inc
bound
mov
or
mov
xor
js
dec
xchg
imul
cmp
jge
jne
fs
out
mov
cdq
xor
ins
sub
in
les
pop
xor
xchg
jbe
or
lods
add
mov
jp
loopne
xchg
fsubr
or
xor
mov
mov
mov
stos
je
mov
test
adc
int3
fsubr
dec
fucomip
adc
mov
enter
cmp
jl
pushf
or
stos
cmp
push
jge
jne
xchg
fdivr
sub
inc
jae
(bad)
cmp
mov
sub
call
or
ins
aad
fdiv
mov
sbb
sub
xchg
inc
add
ret
pop
test
cmp
sub
dec
ror
mov
pop
xor
lods
std
arpl
and
add
add
inc
out
sti
cmp
jecxz
sbb
ret
scas
push
push
cmp
mov
and
xchg
push
es
cmps
cmc
cmps
lods
popf
out
dec
mov
into
sar
aam
das
sub
xchg
push
lock
push
mov
push
nop
aas
nop
pop
xchg
pop
gs
jo
pop
ss
retf
(bad)
sbb
xchg
mov
imul
dec
lea
test
cmp
pop
sbb
jmp
push
xlat
rcr
ret
jne
adc
xor
push
mov
fmul
(bad)
pop
adc
fmul
add
movzx
rcr
shl
mov
jge
in
mov
pop
push
loopne
cmc
ss
xchg
inc
lods
es
arpl
pop
jae
pop
push
leave
push
gs
and
jecxz
in
or
mov
ror
inc
adc
sbb
dec
cmp
out
test
sbb
out
lods
mov
ja
mov
sti
sub
dec
ds
xor
and
(bad)
sahf
retf
push
ret
outs
daa
mov
inc
icebp
sbb
icebp
mov
jb
or
xlat
sub
test
sub
cmp
cld
aaa
clc
lock
aaa
mov
sub
cmp
inc
sbb
jb
aam
popa
ficom
ret
dec
mov
fldenv
xchg
pushf
xchg
stos
sub
adc
adc
jl
pop
pusha
and
jl
cmc
pusha
sub
cmp
fst
push
movd
mov
jle
fmul
repnz
cs
add
gs
mov
or
mov
sbb
mov
sbb
fbstp
jg
mov
ret
sbb
movs
nop
push
dec
dec
fcomp
mov
xchg
add
mov
not
repz
lea
xchg
and
or
xchg
push
ja
je
xor
mov
xchg
clc
add
pop
mov
mov
add
cdq
outs
mov
enter
cs
ret
xor
not
addr16
gs
test
rcr
dec
sti
cmp
mov
mov
push
sub
push
xchg
dec
mov
test
xchg
iret
mov
clc
imul
ret
mov
push
(bad)
cmp
jno
cmp
add
sbb
sub
mov
push
in
jp
cmp
jge
cld
scas
test
jb
and
xchg
fcmovu
xchg
movs
hlt
sbb
jg
dec
pushw
xchg
test
clc
add
clc
out
imul
out
mov
cld
jbe
add
inc
sbb
inc
sbb
movs
sbb
stos
rol
test
xchg
sbb
shl
push
fdiv
cmovl
mov
or
repz
je
mov
pop
pop
mov
pop
xor
mov
ins
cmc
loop
push
dec
nop
mov
adc
cwde
push
pushf
mov
in
and
xchg
les
js
and
nop
les
add
ror
arpl
paddw
dec
cld
imul
packssdw
xor
inc
or
jno
(bad)
push
sar
add
cmp
daa
ins
cmp
data16
sbb
pushf
mov
call
pop
jne
call
jecxz
adc
adc
push
mov
les
xchg
aam
rcl
push
push
ret
jne
xchg
add
pop
pusha
mov
mov
shl
cld
repz
mov
nop
and
rcl
shr
push
mov
and
mov
sub
out
(bad)
mov
inc
mov
and
enter
or
bound
xor
inc
mov
cmps
cdq
cdq
xchg
adc
ret
jmp
adc
pop
mov
inc
jmp
rcl
mov
add
test
scas
ficomp
aad
out
pop
mov
xor
loopne
mov
aam
movzx
jmp
das
mov
inc
inc
out
in
cmps
dec
adc
test
popf
in
mov
iret
div
ins
push
imul
nop
push
test
mov
mov
ror
idiv
push
jns
pop
pop
dec
(bad)
mov
fidivr
jmp
(bad)
out
adc
shl
ins
dec
(bad)
(bad)
adc
xor
into
sbb
out
mov
and
xchg
frndint
in
mov
stc
fdivr
movs
shl
sub
sub
ins
gs
mov
fsubr
int3
pop
imul
sbb
das
outs
mov
xor
aaa
cmp
adc
repz
ins
sti
scas
in
push
jno
pop
mov
mov
popa
pop
or
jp
cmc
inc
push
sbb
xor
push
rcl
mov
sbb
push
push
shl
aas
xlat
adc
sbb
lea
shl
cmp
and
in
sahf
xor
push
pop
jo
aaa
sbb
jp
repz
mov
mov
and
dec
pop
sbb
arpl
sbb
std
dec
adc
retf
sbb
int
int
pop
dec
jne
push
stc
xchg
inc
pushaw
test
mov
adc
mov
jno
push
ins
movs
dec
push
cli
cmp
push
loope
data16
adc
cwde
fisttp
call
sbb
adc
jp
test
xchg
bnd
adc
mov
mov
jmp
pop
jbe
cmp
mov
inc
cmp
adc
fistp
add
adc
adc
jo
outs
mov
(bad)
das
inc
and
mov
xchg
scas
xchg
fwait
mov
pop
cmp
sbb
test
xor
and
jne
jae
mov
jmp
test
icebp
sub
sbb
xchg
enter
rol
lods
icebp
mul
jbe
cmp
jnp
test
dec
push
pop
xor
cs
shl
add
call
dec
xchg
test
cli
adc
xchg
inc
or
jle
inc
or
push
call
push
movs
sbb
nop
add
scas
cld
sbb
mov
sti
mov
lds
out
mov
and
lahf
cmp
jge
sbb
xchg
mov
xchg
xchg
mov
cli
inc
sahf
mov
in
xchg
popf
bound
outs
mov
xchg
test
sti
pop
xchg
dec
enter
push
lahf
cld
test
pop
sahf
pop
jmp
cmp
(bad)
(bad)
fmul
dec
stc
mul
lods
fld
mov
repz
jmp
(bad)
mov
ret
pop
daa
out
cmps
js
dec
mov
(bad)
jo
cmp
bound
shr
int
dec
inc
mov
jmp
test
cld
and
jmp
adc
hlt
outs
int3
shr
or
ss
sub
adc
cmp
or
cmp
int
dec
test
gs
(bad)
loop
(bad)
jp
push
push
outs
mov
adc
xor
fcomp
pop
push
cdq
inc
jmp
sahf
mov
jge
sti
dec
inc
cmp
stc
mov
and
(bad)
mov
mov
test
fsub
test
jecxz
test
or
pushf
xchg
in
stc
test
ror
in
fiadd
jnp
fcomp
add
jnp
(bad)
lock
in
mov
pusha
sbb
out
aaa
or
loope
ds
dec
sub
sub
(bad)
pop
leave
stos
adc
mov
in
mov
push
xchg
imul
add
lea
dec
mov
pop
xor
repz
jmp
loop
xor
and
lods
push
mov
test
sbb
out
rcr
ins
xchg
jle
sub
pop
dec
bound
popa
mov
imul
(bad)
cmp
jo
push
pop
sub
sbb
je
sbb
and
mov
sbb
hlt
cs
pusha
cli
lea
mov
test
pop
sub
lods
inc
repnz
enter
sbb
es
lahf
pop
mov
pop
mov
mov
xchg
jno
sub
in
outs
cmp
dec
stc
mov
lock
scas
hlt
and
(bad)
cwde
adc
inc
repz
push
mov
lods
movs
cmp
imul
mov
sti
mov
pop
lods
ret
dec
jne
mov
adc
ds
mov
sahf
pop
lahf
mov
add
imul
repnz
jge
call
push
cs
into
cmp
mov
cmp
jmp
retf
ja
or
jo
bound
cmp
mov
push
retf
movs
xor
arpl
inc
mov
std
pop
dec
fwait
cld
push
(bad)
sti
nop
cmps
pop
mov
cmp
popa
sbb
scas
in
jle
dec
mov
or
mov
inc
mov
dec
mov
mov
int3
mov
fisubr
rcr
jecxz
xor
jnp
mov
add
and
outs
push
add
or
aam
mov
inc
lods
out
(bad)
sbb
adc
enter
xchg
pusha
mov
inc
inc
and
sbb
nop
ret
and
mov
inc
jmp
mov
mov
jge
xor
and
inc
jno
out
push
fwait
mov
cmps
pusha
rcr
ret
fs
xchg
inc
jns
mov
pop
in
(bad)
hlt
adc
sub
xchg
or
inc
jp
inc
jl
dec
das
dec
dec
push
pusha
xor
ja
sbb
xor
inc
in
icebp
adc
dec
sbb
enter
pop
fnsave
movs
pop
mov
mov
je
pop
js
out
xchg
jne
or
adc
cli
push
sar
adc
adc
push
jmp
pop
(bad)
cmps
add
cmc
mov
cwde
dec
ffreep
adc
mov
bound
sub
(bad)
loopne
rcl
pop
aad
mov
bound
ja
or
js
(bad)
xor
pop
int3
ss
mov
mov
das
shl
or
dec
adc
repnz
cmps
mov
dec
jne
and
push
xor
(bad)
sbb
push
pop
fs
popf
popa
add
idiv
lahf
push
daa
aam
mov
push
xchg
test
jb
loop
ss
fs
cwde
repnz
sti
push
and
(bad)
mov
pop
xchg
mov
adc
nop
clc
sahf
punpckhbw
dec
repz
jbe
(bad)
sbb
(bad)
in
loopne
int
xor
fs
test
stos
xchg
mov
movs
fild
jmp
sub
add
popa
xlat
or
ja
mov
aas
leave
jbe
es
fcmovbe
mov
cmc
push
retf
(bad)
int3
stos
(bad)
jbe
call
fsubr
test
jecxz
outs
push
pop
push
outs
imul
jge
sbb
inc
ja
mov
push
scas
push
(bad)
loop
and
loope
popa
lods
je
fwait
popa
jl
call
adc
mov
xor
mov
cmc
aaa
xchg
push
call
jno
ror
retf
call
(bad)
xchg
lahf
push
enter
lock
xor
lea
and
clc
adc
sub
push
(bad)
mov
push
cdq
cs
push
jl
push
test
dec
sub
outs
push
mov
mov
and
lock
dec
xchg
and
or
imul
dec
xor
xor
dec
popa
arpl
dec
or
push
and
repz
or
adc
test
and
retf
cwde
ja
imul
and
inc
cmp
pop
pop
add
and
ficom
push
inc
push
ins
jge
and
push
push
cld
or
adc
fld
adc
cmps
(bad)
(bad)
ficomp
ins
ret
xor
mov
pop
adc
fimul
loopne
cli
ret
jmp
mov
fs
pop
ins
push
and
jnp
stc
les
lea
ins
cmp
inc
cmp
xlat
in
cmp
mov
xchg
dec
mov
hlt
sub
add
mov
out
adc
add
jae
(bad)
push
(bad)
add
sbb
adc
push
xor
popa
cmp
imul
fprem
or
mov
mov
ror
sub
mov
into
or
push
ins
adc
xchg
xor
xor
jl
jmp
or
push
fnsave
and
cwde
mov
sub
aam
cwde
dec
sbb
ins
ficomp
test
xor
movs
fwait
ror
jle
add
cmps
mov
push
pusha
dec
mov
les
(bad)
and
aam
mov
cwde
mov
add
dec
dec
dec
add
ror
aaa
stos
pusha
fdiv
mov
sbb
mov
cmp
jmp
into
in
cs
lahf
inc
into
adc
add
xor
enter
pop
cs
or
xlat
jns
add
(bad)
fld
pop
sub
sbb
cmp
xchg
cmps
je
(bad)
mov
rcr
or
fwait
bound
xchg
sbb
cdq
fld
xchg
adc
arpl
mov
in
sub
dec
pop
test
or
das
mov
inc
cmps
mov
xor
inc
repz
ja
cld
cli
bound
sub
hlt
aas
push
push
scas
aaa
sar
sbb
dec
mov
mov
add
or
leave
mov
test
cwde
adc
pop
sub
mov
dec
ja
pop
sahf
mov
ja
xor
push
dec
xchg
sub
fcom
popf
aad
inc
mov
mov
pop
fldcw
into
frstor
repz
or
jmp
repnz
fist
in
push
das
lahf
adc
add
shl
mov
ficom
mov
shr
inc
push
(bad)
or
push
dec
cli
xor
shl
pop
adc
retf
mov
push
sub
pop
adc
into
xchg
(bad)
clc
aad
jnp
xchg
mov
(bad)
retf
push
push
addr16
adc
jecxz
ins
ds
cmp
mov
fadd
and
xor
icebp
adc
push
adc
xchg
movq
and
cs
repz
xchg
ror
xor
ins
scas
mov
mov
jnp
aas
mov
xor
jge
inc
mov
adc
outs
pushf
push
push
repz
js
js
ss
pop
stos
sub
call
jmp
jp
push
out
lods
add
mov
sbb
adc
inc
cmp
mov
inc
fld
sbb
sub
stos
jo
pop
push
pop
mov
je
jecxz
add
fwait
mov
out
in
or
in
xor
jns
pop
test
repz
ss
add
retf
lock
jmp
(bad)
push
add
or
inc
dec
inc
add
aam
cmp
inc
mov
hlt
test
and
jle
test
pop
jg
repz
mov
pop
jbe
(bad)
cs
and
loope
pushf
inc
jbe
dec
out
xlat
jne
gs
mov
mov
hlt
or
outs
push
adc
xchg
lods
loope
pop
mov
or
movaps
jl
imul
pop
or
stos
or
or
mov
pop
cmp
adc
fidivr
lahf
scas
repnz
movs
test
push
in
imul
int
xchg
xchg
mov
push
(bad)
jo
fisttp
mov
push
mov
jmp
stos
pop
mov
(bad)
xchg
fadd
mov
jl
xor
push
test
inc
jg
sub
xchg
xchg
scas
in
and
loopne
sub
out
sbb
xchg
call
xor
pop
push
les
loop
ret
lock
inc
push
(bad)
push
and
mov
test
fimul
popa
arpl
lds
ins
call
adc
out
jge
pop
mov
xor
mov
and
push
dec
cmp
leave
arpl
fcomp
shl
movs
adc
push
mov
pop
(bad)
out
sbb
rcr
stc
mov
repz
cmp
jp
into
pop
cmp
aad
pop
fwait
sub
rol
call
dec
fcom
clc
sar
cs
fcmovb
or
cmp
clc
mov
pusha
sbb
fwait
lahf
mov
jcxz
xor
jne
shr
lods
or
dec
addr16
mov
adc
inc
xor
(bad)
cmp
add
dec
sbb
popa
test
rcl
adc
cmps
fld
sub
(bad)
mov
push
lahf
dec
ins
xchg
xchg
ret
adc
ret
jne
stc
sub
jae
ret
cmp
add
jnp
mov
je
mov
pop
paddq
cmc
lock
popf
stos
add
or
cmps
lods
pop
mov
adc
inc
and
and
retf
ss
fiadd
(bad)
imul
cmp
push
out
popa
push
sub
push
jno
push
test
pop
sub
sbb
fmul
enter
lahf
(bad)
rep
push
out
lods
mov
or
(bad)
mov
mov
mov
mov
pop
fcomi
mov
int3
bound
mov
cmp
(bad)
xchg
cmc
and
pushf
ret
sbb
in
sbb
jae
lds
pop
hlt
popa
nop
adc
add
xchg
or
int3
leave
jno
ret
stos
jg
sub
mov
mov
ja
scas
unpckhps
push
jae
and
aad
popf
inc
movs
dec
scas
dec
aas
int3
dec
or
mov
jo
pop
cmc
ins
jmp
cmp
mov
adc
hlt
das
mov
xchg
mov
cmp
in
inc
movs
cmps
popf
test
cmp
cmps
shr
xchg
repz
inc
xor
push
adc
cmp
or
mov
jae
push
repnz
xchg
popa
pop
in
pop
pop
sbb
pusha
push
ja
add
dec
arpl
mov
sub
mov
(bad)
in
add
div
ja
pop
lock
dec
cwde
mov
clc
cmps
ins
xor
mov
sub
lock
gs
jno
iret
sub
xchg
(bad)
and
dec
into
pop
and
xchg
or
or
loope
adc
sbb
inc
dec
or
push
xor
fcom
outs
jg
push
inc
mov
test
mov
mov
lds
jp
inc
ins
scas
sub
mov
jo
outs
gs
imul
sub
add
mov
xchg
out
xor
cmc
cmp
lahf
and
aaa
cmps
mov
mov
je
inc
jecxz
in
call
and
inc
pop
xchg
dec
dec
neg
into
out
in
mov
fmul
inc
and
cdq
loopne
cs
mov
or
jp
fst
call
mov
jmp
pushf
jnp
test
jnp
loope
ret
fwait
and
inc
int
imul
frstor
lock
ror
call
sahf
jb
out
mov
test
repz
xor
aas
jp
pop
xchg
test
retf
jb
mov
jg
xchg
out
test
xor
frstor
ror
xlat
imul
push
test
mov
pop
call
xchg
lods
jbe
movs
mov
inc
mov
lods
mov
mov
adc
fadd
pop
call
and
mov
cmp
cmp
fiadd
push
pop
fist
js
xchg
add
movs
fcmovne
addr16
and
sub
cmp
pop
data16
push
bswap
hlt
fcom
out
jp
repnz
xor
test
and
int
jecxz
or
sbb
jecxz
pushf
lods
ror
and
fdivrp
iret
cli
imul
hlt
jno
xchg
addr16
jbe
and
mov
(bad)
das
cdq
cmp
inc
cmp
fucomp
mov
pop
das
loop
loopne
cdq
mov
pusha
ins
out
es
push
xor
add
xchg
sub
push
loop
jle
jp
xchg
xchg
fcom
(bad)
movs
pop
mov
fs
and
sub
mov
and
adc
lea
(bad)
adc
jmp
sub
fiadd
jae
cmc
imul
aaa
pusha
into
fcom
enter
lock
leave
xor
scas
dec
xor
sub
mov
cmps
mov
sar
dec
int
sub
aam
push
cmps
inc
popa
dec
retf
mov
push
test
xchg
adc
push
inc
inc
mov
out
movs
xchg
mov
pop
pusha
xlat
pop
test
in
xchg
loopne
push
sti
mov
xchg
loope
stc
jge
mov
add
ror
pop
lahf
lahf
adc
test
and
sub
daa
daa
enter
in
pop
test
pop
mov
ret
imul
sbb
imul
daa
sub
jle
jecxz
sub
inc
inc
lahf
int
gs
cmps
dec
iret
ins
ror
in
jbe
imul
dec
pop
mov
(bad)
mov
cld
cwde
nop
lock
mov
sub
stos
js
cmps
jp
push
dec
cs
mov
xor
fild
cmps
xchg
jecxz
aad
cmc
sti
dec
cs
call
sub
lock
cwde
pop
dec
mov
cmps
or
shl
or
cmp
pop
mov
dec
xchg
xchg
pusha
xchg
cli
adc
and
jae
fild
fimul
cli
pop
or
arpl
jp
mov
aam
(bad)
mov
push
aam
jnp
or
outs
rcl
mov
shl
or
dec
arpl
ins
dec
mov
adc
push
out
lock
jp
out
jo
ins
mov
xchg
inc
xchg
add
or
not
adc
popf
outs
(bad)
mov
rcl
idiv
xor
jmp
mov
adc
inc
das
pop
sbb
sub
into
icebp
mov
stos
push
(bad)
cwde
out
out
add
fwait
push
mov
jmp
loope
out
pop
popa
rol
push
(bad)
hlt
sbb
rol
pop
push
out
out
pop
mov
pop
imul
cmps
dec
xchg
xchg
inc
loopne
inc
(bad)
repz
in
cli
pop
sahf
push
outs
sbb
sbb
mov
ret
sub
lahf
fs
lods
xchg
ret
adc
clc
and
in
xchg
rcl
and
ss
das
xchg
std
push
sbb
jmp
adc
sbb
lea
dec
stc
test
stc
std
cli
in
dec
lods
pop
mov
adc
cmps
cmc
arpl
xchg
sub
mov
mov
jg
mov
(bad)
mov
xchg
inc
mov
add
dec
lds
jle
icebp
or
out
jmp
and
in
std
push
push
ror
and
fcomp
movs
mov
push
xchg
mov
mov
lods
fistp
dec
add
mov
add
fcmovb
sbb
adc
jae
neg
movs
xchg
aam
in
sahf
fcmovnb
push
mov
in
ror
adc
pop
pop
sbb
les
cli
cmp
jne
sub
cmovns
cwde
arpl
aad
dec
std
xchg
cmps
sahf
or
add
sbb
cmp
jg
out
and
stos
jge
hlt
fs
test
xchg
pop
(bad)
mul
mov
sub
(bad)
js
in
es
jno
dec
ret
daa
scas
adc
cmp
pop
rcr
mov
mov
mov
test
mov
in
test
and
sbb
xor
repnz
jb
ins
add
xchg
jl
test
sub
adc
inc
call
das
cmps
out
daa
sbb
xchg
mov
push
(bad)
adc
mov
jmp
cs
sub
(bad)
jp
inc
fwait
inc
mov
mov
retf
mul
xlat
mov
add
rcr
mov
in
popa
aam
sbb
and
adc
jnp
int
cmovne
jecxz
jg
(bad)
adc
add
cmp
push
cmps
jb
call
out
mov
repz
jmp
lds
ror
push
cmp
iret
out
mov
and
mov
mov
push
cmps
cmp
mov
mov
or
cmps
xchg
test
mov
mov
jmp
ins
inc
jecxz
xlat
pop
pop
outs
shr
pusha
sbb
in
mov
dec
push
sub
test
js
sub
ror
dec
enter
mov
not
push
clc
inc
mul
rol
sbb
sub
mov
xor
sub
mov
aaa
sbb
xchg
in
or
data16
fldenv
cmp
cmps
pushf
test
lock
in
fstp
dec
cmp
fcomp
es
adc
test
rcr
arpl
les
pushf
retf
sbb
dec
aad
adc
(bad)
dec
adc
jno
rol
stos
lods
inc
aaa
(bad)
push
push
out
into
popa
xchg
add
fwait
mov
mov
cmp
sar
ins
dec
clc
(bad)
sub
xchg
pusha
dec
inc
stc
(bad)
jns
push
repnz
mov
ins
dec
dec
(bad)
std
mov
imul
cs
xor
retf
pop
mov
scas
aam
mov
setno
xchg
cmp
sahf
outs
mov
pop
push
stc
pop
dec
xor
sub
dec
mov
inc
adc
cmp
inc
xor
dec
int
retf
push
std
call
cmp
xchg
sti
dec
add
inc
mov
mov
or
fs
es
push
mov
sub
pop
rol
fidivr
add
aaa
and
jns
cli
imul
xor
stc
pop
shl
shl
in
or
jns
retf
gs
(bad)
out
sub
jne
fwait
push
mov
cmp
ror
in
or
push
imul
test
add
fwait
inc
rcr
sbb
popa
mov
(bad)
nop
(bad)
aaa
inc
dec
mov
movs
or
or
xor
xor
xchg
movs
mov
jecxz
sbb
loop
mov
mov
int
fst
mov
push
(bad)
mov
gs
add
push
inc
add
pop
fwait
sbb
and
mov
push
lods
jg
loope
mov
repnz
sbb
ja
cmp
dec
in
das
dec
mov
mov
push
idiv
push
sbb
jecxz
pop
jb
pop
sub
jp
add
mov
and
jae
clc
(bad)
mov
jp
ret
jmp
data16
and
fstp
mov
mov
pop
pop
jno
mov
sahf
dec
xor
xor
pop
xchg
(bad)
mov
(bad)
cmc
aaa
xor
pop
inc
mov
nop
sub
xor
mov
sahf
mov
push
scas
call
xchg
(bad)
lds
mov
sbb
push
push
mov
dec
push
imul
scas
cmps
sub
stos
sti
add
(bad)
mov
dec
popa
push
push
mov
pop
cld
fbstp
scas
enter
cmp
xchg
fucomi
enter
xchg
mov
sub
mov
pop
or
or
dec
mov
cmc
outs
addr16
mov
fld
adc
daa
sub
add
cld
lock
pop
icebp
ins
stos
jmp
mov
cmp
jnp
and
add
mov
pop
or
call
mov
mov
aad
xor
mov
out
call
mov
hlt
sub
mul
jmp
and
in
sar
int
(bad)
sub
iret
sbb
pop
adc
ins
(bad)
in
mov
and
dec
mov
mov
call
mov
jae
dec
jecxz
imul
adc
stos
retf
call
and
xor
sub
sbb
es
mov
jl
gs
out
sbb
std
mov
test
cmp
retf
mov
mov
call
cmp
sti
mov
pop
es
add
sbb
jb
ja
or
rcr
sbb
out
mov
xchg
jae
div
movs
pushf
lods
data16
(bad)
aaa
scas
pop
and
xor
std
push
imul
pop
pop
mov
lea
repz
push
in
pop
dec
mov
adc
aaa
sbb
sub
xchg
arpl
outs
mov
lock
add
rcr
jle
cli
lock
ds
mov
call
or
jmp
sub
(bad)
cmp
ja
arpl
jge
mov
ds
mov
je
push
jl
or
dec
in
mov
sub
push
stos
mov
mov
(bad)
cmp
and
xchg
or
jns
pop
mov
add
xchg
or
add
adc
aam
imul
mov
ror
je
mov
js
nop
add
mov
mov
xlat
cwde
bound
(bad)
mov
out
add
xlat
push
cmps
(bad)
xor
and
jne
dec
idiv
or
add
les
loope
stc
mov
push
pop
and
jmp
mov
mov
sub
push
fmul
pop
sbb
scas
aaa
ins
cmp
push
push
pop
push
outs
icebp
aad
sub
mov
xchg
test
stos
jmp
ja
lods
sub
test
repz
dec
xor
into
mov
(bad)
mov
pop
mov
push
push
mov
xor
fist
shl
aaa
push
pop
pop
lea
pop
mov
div
call
adc
mov
jne
mov
aaa
out
je
cld
inc
cs
inc
xor
add
lds
inc
sub
in
or
sbb
mov
push
add
mov
aaa
arpl
and
push
xchg
movs
xor
sub
(bad)
push
popa
mov
popa
das
mov
sub
inc
dec
(bad)
xor
bound
retf
scas
sti
dec
ss
xchg
jnp
xor
adc
jne
adc
out
push
and
gs
icebp
es
mov
imul
xchg
fs
sti
hlt
cwde
mov
adc
outs
xchg
push
pusha
mov
imul
fwait
xlat
push
ret
imul
and
or
(bad)
and
mov
(bad)
adc
jns
call
(bad)
pop
jle
inc
call
ss
xor
cli
xor
jo
test
retf
fiadd
aaa
jl
sub
xor
movs
push
nop
movs
sbb
mov
pop
add
jl
ds
jbe
or
jmp
jmp
sub
add
push
sbb
inc
inc
addr16
pop
adc
sbb
add
fchs
pop
mov
pop
or
xor
dec
cmps
mov
inc
xor
mov
icebp
inc
xchg
int
adc
or
inc
xlat
mov
jns
or
bound
cmc
dec
imul
jae
pop
push
rcr
xchg
outs
enter
ficom
in
mov
mov
sub
jg
pop
sbb
cmps
out
bound
sub
jg
cmp
inc
mov
xchg
enter
loopne
jmp
hlt
adc
xor
xchg
repnz
(bad)
mov
inc
sub
pop
or
pop
jne
adc
push
mov
jle
repz
nop
push
dec
xchg
sbb
xchg
imul
addps
xchg
mov
add
push
rcl
mov
fbstp
test
xchg
fnstsw
pop
cli
mov
fidivr
sbb
sbb
sub
add
inc
inc
(bad)
pop
fwait
movs
mov
fdiv
cmp
mov
push
ja
test
dec
cmp
adc
lods
fcomi
and
into
jge
jmp
in
fwait
bound
mov
sbb
add
(bad)
shr
xchg
shl
xchg
jge
sub
es
out
test
cmp
adc
test
aaa
push
rcr
std
scas
fbld
shr
xchg
mov
icebp
and
mov
repz
out
fbstp
pop
inc
mov
lea
les
in
fist
push
mov
or
in
jo
(bad)
retf
mov
imul
and
leave
idiv
mov
cmp
ret
or
retf
nop
fs
mov
shr
add
cld
xchg
xor
(bad)
cdq
inc
or
mov
xchg
fadd
add
das
rcl
push
cli
jae
ja
sub
mov
cli
dec
dec
popf
test
mov
sbb
bound
into
outs
cmp
push
jbe
jp
popa
add
mov
test
sahf
sub
mov
outs
and
inc
sub
repnz
lods
sbb
sti
push
arpl
je
mov
xor
and
pop
mov
out
cmps
shl
cld
adc
mov
dec
or
jecxz
shr
ror
int3
std
or
les
aas
call
(bad)
mov
mov
loop
retf
lss
xor
aaa
add
or
clc
jp
sub
jmp
or
mov
add
push
inc
fadd
sub
push
(bad)
or
(bad)
push
push
call
in
mov
int3
xchg
jnp
sar
movs
rcl
mov
test
js
pop
dec
loopne
lea
je
xor
test
sbb
out
mov
pushaw
test
inc
enter
xchg
cli
pusha
push
fiadd
aam
pop
and
mov
rcr
or
rcr
or
and
fwait
stos
daa
mov
xlat
shl
mov
add
inc
add
mov
js
mov
sbb
outs
hlt
sar
imul
es
loopne
in
call
jl
sbb
(bad)
iret
hlt
push
dec
arpl
mov
dec
pop
pop
not
adc
aam
push
retf
les
lahf
mov
mov
sar
(bad)
mov
xor
shl
sbb
sub
add
sahf
add
mov
xchg
cdq
or
mul
push
jmp
push
pusha
sub
and
cwde
std
push
xchg
inc
lods
adc
out
lea
stos
xchg
and
in
mov
mov
je
repnz
fistp
out
std
jmp
loope
fstp
loopne
mov
pop
adc
loopne
scas
aaa
ret
jb
push
mov
mov
mov
cmp
mov
mov
add
lods
(bad)
push
xchg
out
mov
sahf
mov
or
jae
fs
mul
mov
inc
es
sbb
mov
ja
jg
(bad)
jl
mov
jg
mov
popf
mov
mov
pop
adc
adc
mov
loop
cs
dec
retf
xchg
pop
imul
out
cmps
cmp
addr16
cmp
xlat
movs
stos
or
mov
lock
xchg
jg
repz
ror
sub
imul
pop
dec
mov
mov
cmps
fsin
mov
aam
cmps
sub
mov
xchg
sahf
fldenv
adc
mov
xor
add
and
ret
cmp
fdivr
not
jb
push
imul
les
scas
out
xor
fcomp
sbb
fld
xchg
sub
das
rcr
push
sub
pop
xchg
sbb
loopne
jns
fiadd
scas
jle
mov
sti
ret
test
call
and
mov
cwde
pop
cmp
add
(bad)
out
push
sbb
sub
and
scas
fwait
in
add
add
outs
jmp
xor
jl
in
mov
jb
push
sub
add
jb
ins
test
fsin
xchg
push
mov
ficom
xor
xor
(bad)
(bad)
mov
xchg
outs
xchg
pusha
shl
pop
inc
clc
inc
dec
loope
add
bound
dec
leave
mov
xor
xchg
out
xor
or
xchg
sbb
add
in
mov
retf
lods
test
adc
scas
dec
pushf
sar
dec
jl
je
repnz
movs
mov
mov
imul
sti
adc
pop
scas
mov
add
xor
(bad)
adc
mov
push
sahf
test
loope
call
stc
icebp
arpl
das
popf
shl
inc
cdq
fsubr
xor
adc
push
mov
add
xchg
adc
cmp
stos
stos
lock
inc
sbb
cwde
scas
or
and
cli
aam
mov
xor
cmps
mov
cmc
leave
push
add
add
xchg
retf
jecxz
lods
dec
add
fstp
mov
int
mov
stos
repz
jns
cs
loopne
loope
js
push
pop
adc
push
mov
adc
shl
fbld
into
jecxz
push
(bad)
repnz
(bad)
shl
mov
mov
jge
cmp
fistp
push
stos
add
sbb
jno
mov
int3
and
jmp
add
xchg
imul
cmp
sbb
pop
call
aas
dec
or
xor
mov
cmp
xchg
sbb
mov
or
hlt
xchg
in
dec
ror
pop
adc
inc
test
add
mov
call
mov
retf
sub
ret
fild
adc
ss
fs
sbb
(bad)
call
lods
mul
aam
inc
scas
pop
in
inc
jnp
mov
out
dec
pop
sahf
adc
icebp
imul
and
nop
lock
icebp
popa
adc
mov
pop
xor
jbe
dec
mov
push
sub
in
outs
dec
pushf
std
sub
arpl
es
data16
or
mov
dec
adc
pop
dec
and
adc
adc
push
dec
sbb
sti
jns
fstp
das
(bad)
std
and
push
daa
cwde
retw
das
mov
outs
sub
mov
std
dec
pop
pop
jp
and
mov
out
mov
pop
cmp
aaa
xchg
pop
pop
(bad)
pop
lods
pop
nop
ja
mov
fist
mov
enter
(bad)
pop
fbld
and
sar
jo
je
lods
mov
dec
pop
cmps
mov
mov
xchg
jmp
jb
dec
cmp
adc
lea
js
(bad)
sub
xor
pop
lods
movs
sbb
stos
push
in
(bad)
lock
mov
(bad)
mov
add
add
popa
int3
loope
xor
pop
adc
cmp
cwde
xor
or
add
or
clc
pop
loopne
dec
xor
pop
out
in
(bad)
int
mov
mov
ds
pop
xor
inc
int3
sub
rcl
mov
jae
add
mov
sbb
pop
jge
hlt
pop
das
popf
iret
je
daa
hlt
push
cmps
cmp
das
es
pop
test
data16
sti
loop
mov
(bad)
push
mov
ja
sbb
out
popa
cmps
push
adc
dec
cld
idiv
aaa
add
lock
mov
mov
test
rcl
xchg
sahf
lds
push
mov
ds
xchg
jae
jmp
mov
mov
sbb
loopne
dec
sti
aam
dec
cmc
repnz
jl
ficom
stos
mov
sbb
mov
stos
test
mov
test
lock
out
cmp
ds
mov
nop
icebp
inc
jmp
push
xchg
imul
cmp
cmps
jmp
neg
lahf
test
(bad)
xchg
jmp
jns
scas
jp
cs
push
xor
pop
daa
or
stos
or
add
iret
ins
mov
cli
into
inc
push
mov
dec
leave
fs
call
rcr
test
aas
sub
(bad)
push
cmp
jo
and
inc
sbb
mov
iret
retf
xchg
cmp
adc
push
sub
neg
fild
sub
outs
mov
jmp
ror
shr
mov
or
pop
imul
das
jo
adc
clc
(bad)
stos
dec
ds
mov
sub
cmp
hlt
ucomiss
xchg
pop
pop
aad
xchg
pop
jle
iret
fs
sub
mov
imul
dec
sub
jne
dec
pop
(bad)
mov
or
xchg
cmp
out
or
jno
fdivr
add
popf
mov
dec
dec
jo
dec
std
dec
push
mov
test
mov
or
repz
mov
add
dec
aaa
pop
jns
dec
push
and
ins
sbb
and
repnz
mov
dec
jle
popf
jnp
ror
js
sbb
gs
ret
jle
inc
dec
lods
xor
adc
push
retf
mov
adc
mov
test
(bad)
xchg
push
std
pop
and
and
jne
leave
mov
push
popf
adc
cmp
call
cmp
push
dec
pop
ret
pushf
mov
pop
cwde
pop
push
ja
sbb
mov
lods
jne
aad
mov
jmp
xchg
xchg
sbb
sar
add
cmp
jmp
pop
sbb
aam
clc
mov
scas
popa
and
cli
jae
push
lods
test
adc
or
xor
mov
and
test
or
jmp
jno
adc
loop
mov
xor
pop
push
in
pop
xchg
in
jnp
jb
je
mov
fcomp
xor
rol
or
in
dec
mov
out
jnp
push
cmps
mov
pop
(bad)
ins
mov
sbb
call
leave
pop
daa
shl
xchg
inc
xor
push
cdq
cwde
cwde
and
ret
push
and
stos
popa
add
dec
fmul
dec
cli
mov
pushf
inc
scas
fisub
mov
inc
inc
fwait
stos
ret
jl
(bad)
pop
out
or
push
aam
jmp
fdiv
(bad)
dec
push
sbb
ja
call
xor
push
jl
cmps
shr
push
out
sub
sub
or
call
stc
popf
xchg
cs
iret
fdiv
mov
dec
outs
and
inc
cmps
std
sbb
xchg
and
or
jmp
mov
inc
sub
and
mov
inc
mov
inc
lods
pop
shl
leave
or
test
pop
adc
mov
cmp
dec
and
jle
inc
push
addr16
fist
jge
mov
int3
mov
je
adc
sub
aad
or
xchg
in
push
mov
push
mov
cmp
push
ret
cwde
pop
sbb
or
ins
aaa
jmp
aaa
and
or
mov
dec
cmp
ja
daa
push
or
sbb
lahf
rcr
mov
push
xor
inc
int
shl
mov
pop
sbb
or
mov
int
loop
sub
cld
push
in
gs
or
cli
(bad)
dec
or
mov
leave
rcr
add
xchg
stos
icebp
ja
or
test
adc
int
outs
shl
and
or
mov
icebp
and
test
xchg
mov
or
jle
dec
pop
(bad)
pop
cs
out
push
ss
jmp
stos
dec
movs
in
fisttp
call
inc
push
test
aam
fild
push
xchg
ror
pop
pop
retf
xor
ret
idiv
inc
xchg
std
not
sub
inc
mov
mov
dec
and
mov
popa
jnp
inc
mov
imul
and
push
loopne
or
ret
(bad)
cmp
dec
sbb
cmp
stc
jmp
pop
call
std
sahf
inc
push
jmp
inc
imul
pop
add
inc
pop
inc
add
imul
(bad)
mov
arpl
scas
push
dec
inc
sub
ins
jmp
mov
sub
in
adc
popf
movs
(bad)
pop
xor
inc
jne
sub
inc
pop
icebp
hlt
xchg
fsub
rcl
leave
adc
jmp
mov
mov
jle
pop
inc
and
fwait
aam
jg
cld
sbb
and
cmps
inc
xchg
cld
into
cmp
and
mov
push
ja
ss
pop
dec
sbb
frstor
and
jns
cmp
std
jl
in
fst
pop
(bad)
stos
xor
xor
ins
cdq
mov
popf
push
mov
popf
aam
cli
out
pop
stc
xchg
sbb
fldcw
and
or
outs
xor
adc
jl
sar
in
mov
push
cmp
inc
cmp
dec
cmps
(bad)
mov
jge
dec
xor
xchg
xchg
dec
adc
shl
enter
test
pop
mul
jo
add
nop
fild
sub
jbe
jb
div
push
push
adc
or
ins
xchg
jo
cmp
jge
(bad)
rcr
xor
test
ss
adc
cli
aam
mov
movs
int3
jg
retf
dec
mov
jg
retf
mov
outs
pxor
ss
mov
pusha
stc
mov
mov
pop
jb
imul
push
shr
aad
stos
leave
sub
sbb
mov
sti
push
jo
push
inc
loope
or
das
fimul
pusha
inc
cmps
xor
ja
retf
aas
mov
fsubr
hlt
jmp
cmps
pop
mov
inc
fidivr
mov
inc
ret
ret
xchg
jne
popf
and
mov
ins
jmp
test
shl
push
xchg
pop
loope
(bad)
inc
cwde
not
mov
pop
mov
es
dec
out
nop
cmp
sbb
bswap
fwait
nop
adc
sti
cwde
ins
sub
(bad)
xchg
movs
das
pop
xor
pop
add
int3
fmul
pop
ret
fild
mov
lock
jg
pusha
lea
pop
or
leave
pop
inc
pop
adc
popf
fisubr
ficomp
jp
xlat
xchg
mov
xchg
lds
cmp
lds
cmp
not
icebp
retf
jno
mov
shl
mov
and
sbb
jbe
xchg
in
jle
sub
sahf
jmp
xchg
ficom
in
pop
push
idiv
mov
addr16
aaa
dec
lahf
inc
stc
cmp
and
les
and
fwait
ins
movs
jp
les
or
icebp
inc
xor
ficom
or
sti
or
out
shr
xchg
cld
xor
sub
test
mov
push
adc
movs
push
stos
daa
scas
iret
add
mov
mov
mov
out
xchg
xchg
mov
jns
aam
add
dec
inc
(bad)
fsubr
adc
pop
xor
mov
inc
test
dec
cvtpi2ps
add
call
pop
rol
mov
leave
inc
stos
jne
ror
fistp
arpl
movs
test
xchg
es
cmp
arpl
shl
stos
pop
push
sbb
sahf
jno
mov
dec
mov
adc
cmp
and
push
mov
jmp
push
add
mov
iret
sbb
mov
ss
cmp
sbb
int3
(bad)
cmps
cmp
rcl
(bad)
outs
sbb
dec
inc
aam
out
jo
ror
ds
cdq
xlat
scas
adc
or
mov
dec
jne
adc
ret
inc
cmp
test
push
push
or
(bad)
cli
mov
mov
(bad)
ins
enter
mov
pusha
dec
test
dec
test
cld
xor
cli
mov
ret
adc
shr
lea
cmc
repz
lods
ds
sbb
cmp
add
xchg
jo
popf
clc
pop
pop
cmp
ret
int3
movs
xor
dec
lds
repnz
scas
shl
neg
mov
inc
out
xor
aam
mov
mov
add
cli
rcl
push
popf
jnp
mov
mov
(bad)
mov
ins
or
ror
sub
inc
cmc
inc
pop
jmp
das
push
cmps
mov
retf
hlt
xchg
imul
(bad)
leave
push
fnstcw
cmc
stos
xchg
call
gs
les
dec
or
sbb
push
lds
mov
in
push
lods
xchg
push
sub
inc
inc
jb
pop
inc
pop
inc
sbb
shl
xor
cmc
mov
cld
pop
aam
pop
aas
sti
cmp
jno
test
outs
stc
cdq
push
(bad)
and
add
cmp
dec
adc
fadd
cwde
outs
(bad)
aam
xlat
xor
fbstp
aas
cmp
pop
test
ds
nop
mov
xchg
jle
inc
mov
jbe
fimul
mov
mov
mov
push
scas
cmp
loopne
or
fxch
inc
adc
in
add
lock
xchg
pop
push
into
out
not
ret
repz
fdivr
dec
enter
push
outs
push
push
imul
in
repnz
stc
jmp
jno
xchg
lods
mov
mov
jmp
leave
sbb
and
cmp
jne
jns
or
shl
inc
mov
fimul
push
sub
inc
push
dec
inc
test
movs
cmps
ret
dec
aam
dec
data16
es
push
sbb
jmp
adc
test
sub
fstp
pop
imul
cmp
loope
in
out
popa
push
jno
inc
mov
push
test
loope
pusha
(bad)
(bad)
mov
pop
std
pop
or
in
xor
mov
xchg
leave
(bad)
aaa
mov
push
pop
mov
aam
fs
mov
xchg
in
pushf
dec
cmps
retf
fild
xchg
popa
and
fist
sbb
repnz
dec
mov
or
push
push
into
shr
cmp
es
std
enter
leave
sbb
jo
jmp
js
or
sbb
es
push
sti
out
test
pop
inc
loop
jae
dec
pushf
add
shrd
cmp
clc
lds
xchg
je
mov
cmps
add
or
fucompp
loopne
or
mov
inc
call
cwde
leave
mov
sar
or
sub
sub
jl
cmp
mov
inc
fild
jo
out
sbb
dec
es
mov
retf
gs
jmp
popa
mov
inc
pusha
jb
icebp
rcr
es
cmp
jecxz
xor
loope
pop
mov
cmp
daa
sub
sub
dec
sbb
inc
or
xchg
lea
mov
ins
mov
mov
mov
jge
cmp
push
adc
js
hlt
fbstp
retf
test
call
xchg
adc
dec
out
scas
xor
sbb
jb
fwait
(bad)
repnz
xchg
mov
hlt
adc
push
add
sahf
mov
in
xor
mov
mov
jmp
or
push
ja
inc
lahf
add
and
call
mov
sub
mov
push
xor
aad
cld
scas
jo
xor
pop
lods
and
or
clc
add
cmps
scas
cmps
mov
jle
rcr
jmp
(bad)
adc
mov
fnsave
or
push
xchg
mov
mov
pop
addr16
stc
push
in
(bad)
push
push
outs
clc
mov
scas
in
outs
mov
int3
and
gs
data16
xchg
push
mov
xchg
xlat
mov
push
pusha
adc
cmp
add
std
dec
xchg
sbb
xchg
(bad)
(bad)
out
ror
xor
test
xor
mul
mul
pushf
mov
test
or
mov
out
fs
jmp
adc
dec
push
mov
cmp
es
imul
in
(bad)
pop
out
outs
or
mov
xchg
cs
ss
mov
xchg
jl
retf
pop
sub
lea
cli
jl
pop
inc
cmp
pop
jae
xor
lock
aad
mov
test
xchg
xchg
sbb
ds
ror
push
cld
cdq
xlat
pop
jns
mov
or
xchg
and
adc
mov
in
test
fistp
push
test
sahf
add
out
sub
mov
lahf
pop
xchg
jp
aad
mov
pop
repz
repnz
in
jnp
int3
pop
xor
push
push
or
daa
ret
jmp
xchg
push
bound
push
xchg
xor
xchg
inc
bound
ss
in
inc
mov
fisubr
sahf
cli
call
sbb
imul
popa
aam
cs
outs
cs
(bad)
cs
add
sbb
hlt
jg
pushw
inc
adc
push
mov
movs
or
lds
out
push
mov
cmc
and
add
xor
cmp
sahf
ret
push
rcr
sbb
inc
add
das
fnstsw
jmp
mov
xchg
stos
add
or
jmp
fst
pop
or
sbb
and
jge
jbe
push
push
push
lahf
gs
bnd
cdq
out
cmp
jmp
(bad)
ins
(bad)
sbb
ror
icebp
cmp
or
sub
mov
xchg
mov
mov
mov
mov
push
xchg
xor
fs
sbb
push
int
fs
mov
or
sub
mov
or
inc
dec
stos
ret
iret
jns
and
shl
sbb
fs
lea
add
jb
(bad)
or
ret
stos
push
sub
jmp
or
outs
pop
xchg
pop
mov
pop
fisubr
in
and
data16
mov
ret
out
mov
mov
enter
jns
mov
inc
cmc
and
addr16
retf
adc
jge
sbb
mov
add
xchg
test
cmp
xor
pop
mov
xor
out
dec
xchg
sub
je
xchg
sub
and
sahf
test
lea
adc
push
fwait
or
dec
push
cmp
(bad)
test
into
lea
jo
pop
xor
push
sub
aad
push
and
sbb
push
inc
dec
lahf
das
out
jmp
test
fs
retf
adc
sub
test
adc
fwait
pop
aad
test
sti
aad
dec
pop
sbb
cmc
outs
dec
and
push
mov
mov
cmp
xchg
mov
sub
(bad)
iret
js
lods
(bad)
push
cmc
xor
in
inc
mov
popf
sub
adc
jbe
jno
or
dec
mov
ins
mov
int
pop
add
out
mov
cli
sahf
ret
lds
xchg
int3
cmps
mov
sbb
test
iret
cs
cmp
inc
inc
cmc
(bad)
call
dec
(bad)
pop
enter
popa
js
retf
lahf
xor
cmp
das
stos
pop
xchg
stos
or
addr16
xchg
sbb
and
push
mov
cmp
mov
mov
dec
(bad)
push
cmp
fisubr
aas
and
mov
jecxz
jmp
dec
idiv
test
mov
sub
sbb
in
mov
or
jae
cmps
and
adc
pop
mov
and
jae
fcomp
dec
adc
mov
fmul
les
push
loopne
fcom
jmp
(bad)
outs
pop
dec
mov
in
ret
fld
icebp
scas
jmp
arpl
mov
vpunpcklbw
std
or
test
add
std
in
push
repz
outs
cdq
sub
loopne
adc
cmp
mov
int3
in
mov
add
inc
adc
add
call
pop
mov
or
ss
push
mov
cwde
xor
sbb
sub
pushf
imul
sti
mov
adc
pop
ret
mov
loopne
mov
in
mov
out
xchg
stos
arpl
inc
(bad)
sub
sbb
mov
pop
dec
test
test
push
loope
leave
mov
test
mov
out
pop
call
sahf
cwde
xchg
les
add
aaa
jg
lods
adc
push
cli
push
dec
pop
cmp
int3
out
es
inc
inc
aam
jecxz
pop
dec
or
or
adc
(bad)
fsub
pushf
dec
ins
call
popf
inc
test
xor
(bad)
mov
lea
mov
push
xor
xor
ret
(bad)
fistp
retf
sub
mov
xor
cs
shr
int
int
mov
test
sti
bound
cmps
inc
sub
dec
mov
daa
inc
and
fld
add
out
and
je
outs
lds
pcmpeqw
fld
jl
xor
imul
inc
mov
(bad)
repnz
sub
sub
xor
lods
mov
inc
ins
call
int3
clc
leave
and
fmul
fxch
xor
in
xor
loope
pop
cdq
mov
mov
fist
push
(bad)
mov
push
leave
xor
test
inc
jb
add
in
and
in
std
fs
in
out
mov
stos
movs
popa
rcl
(bad)
fsub
xor
ss
inc
mov
movs
sub
jmp
inc
jae
mov
xor
xchg
mov
out
mov
jmp
pusha
outs
clc
xchg
push
mov
add
popa
xchg
push
or
add
sbb
fstp
shl
adc
fs
inc
ja
popf
loop
retf
punpckldq
imul
adc
out
test
ficomp
or
les
popf
pop
sbb
pop
gs
sahf
sbb
out
sub
shl
sahf
add
mov
int
inc
push
mov
ficomp
fcomp
inc
fstp
pop
sub
mov
rcl
lods
and
sbb
in
jl
and
test
dec
call
shl
cmp
popa
in
push
or
mov
jns
cmc
fistp
push
lock
mov
inc
push
ja
xlat
leave
fadd
stc
in
push
cmp
fiadd
pop
fadd
inc
ret
clc
push
mov
and
cwde
mov
shl
mov
movs
gs
(bad)
movs
(bad)
call
(bad)
leave
jmp
(bad)
mov
jb
(bad)
xchg
mov
dec
pop
das
xchg
dec
mov
add
enter
sbb
imul
movs
xchg
xchg
fbstp
dec
mov
out
sbb
cmps
jae
add
push
call
pop
cli
and
call
and
(bad)
in
sub
scas
push
xchg
repz
je
adc
dec
sar
cs
cld
loopne
sbb
push
pop
and
jne
sub
into
nop
dec
sub
jnp
sbb
mov
xor
pop
xchg
inc
lods
add
clc
out
test
hlt
ret
mov
fs
mov
lock
add
test
dec
sub
push
xchg
mov
jl
repz
pop
fucomp
nop
pusha
fs
push
fwait
push
mov
mov
jbe
out
sub
ds
pop
aaa
ss
mov
cli
ret
mov
mov
fsub
(bad)
xor
and
push
sbb
cmp
push
pop
lahf
out
shl
pop
fdivp
mov
inc
jecxz
clc
cwde
or
dec
mov
(bad)
jae
push
sbb
int
dec
stc
mov
adc
retf
mov
dec
fsub
(bad)
sbb
data16
in
loope
imul
addr16
cld
test
rcl
lock
cmp
cmp
adc
daa
cmp
fnsave
ins
adc
and
out
shl
call
mov
call
mov
mov
pop
movs
arpl
xor
push
js
fdivr
cmp
jnp
adc
mov
cmp
or
xchg
stos
mov
lahf
mov
aas
gs
cmc
push
scas
or
sub
mov
jo
(bad)
fisub
sbb
sbb
inc
and
sbb
int3
mov
pop
ins
or
out
ins
ja
sti
out
cmp
push
mov
xchg
sbb
cvtpi2ps
pop
outs
inc
movs
push
or
xchg
pop
fs
movs
int3
mov
pop
cmp
lods
jge
neg
or
sbb
setno
mov
bound
add
icebp
fsubr
cwde
ss
sbb
sbb
paddd
jg
fidiv
jae
xlat
mov
xchg
pop
mov
xchg
pop
das
adc
and
out
push
jae
mov
or
int3
aaa
lods
push
cwde
inc
mov
cmp
mov
inc
cmp
sbb
or
or
enter
mov
cmp
mov
mov
xchg
add
test
cld
mov
sahf
add
loop
and
cdq
xchg
sub
jbe
aas
push
add
mov
sub
jnp
add
retf
add
cmc
dec
fcom
repz
(bad)
push
push
loope
sahf
je
add
ror
(bad)
inc
add
or
mov
dec
sub
fnstsw
add
inc
sub
fwait
pop
xor
add
cmp
add
push
cmc
mov
fidivr
mov
aam
inc
cdq
inc
pushf
daa
leave
in
xchg
jle
mov
sbb
dec
xor
cmp
fs
mov
rcl
fldcw
scas
jne
nop
repnz
mov
jl
and
and
pop
in
xacquire
sub
mov
retf
cmp
dec
xchg
pusha
inc
shl
or
or
test
sub
pop
sub
call
mov
das
cmc
popa
ins
adc
aaa
(bad)
xchg
test
sbb
cmp
xlat
push
out
ror
fmul
test
or
pushf
in
sar
jo
dec
cmp
pop
xchg
xor
cmp
daa
mov
(bad)
dec
jge
sbb
cli
loopne
xchg
add
sbb
xchg
das
add
stos
xor
dec
xchg
mov
inc
mov
lahf
movs
cs
and
ins
aaa
mov
add
add
test
sub
mov
xor
pop
dec
and
outs
xor
pop
rcl
cmp
out
(bad)
mov
inc
push
add
mov
mul
and
pusha
scas
add
mov
sbb
lods
pushf
lock
pop
inc
adc
inc
loopne
mov
ins
stc
fcomp
jg
xlat
jmp
lds
jp
mov
and
out
jle
sub
retf
repz
mov
or
(bad)
fld
repnz
out
push
aas
add
mov
lea
jp
dec
adc
xor
xchg
outs
pop
mov
fmul
ss
jl
mov
inc
(bad)
in
sub
xchg
cmps
shl
jne
inc
pop
(bad)
xlat
ds
scas
adc
jle
scas
mov
mov
fdiv
xor
dec
nop
repnz
push
mov
sbb
test
sub
mov
jmp
(bad)
xor
xor
xchg
adc
pop
sub
test
adc
jmp
xchg
mov
scas
jmp
jne
cwde
lahf
jb
xlat
jg
stos
retf
mov
loop
sbb
cmp
or
inc
sahf
inc
dec
jno
push
dec
push
leave
(bad)
jnp
sahf
xor
jle
adc
adc
add
mov
call
ret
xor
into
cmps
xor
mov
jns
scas
push
mov
cwde
inc
pop
mov
lahf
stos
push
sti
lods
mov
and
sar
jnp
scas
mov
pushf
cdq
(bad)
out
inc
stos
(bad)
and
fcom
sti
xor
enter
and
xor
and
jl
imul
mov
cmp
sub
scas
lea
xchg
sbb
or
sub
loope
lock
inc
movs
sub
in
sub
inc
jae
repz
inc
dec
jge
inc
cmp
jle
lahf
cli
add
and
fimul
xchg
aaa
cmc
mov
(bad)
jl
stc
add
cli
adc
xchg
popa
pop
xchg
inc
lock
mov
inc
popf
mov
test
inc
ror
mov
inc
out
push
push
mov
lahf
mov
mov
jle
pop
stos
fild
daa
clc
mov
imul
or
xor
sar
dec
sti
arpl
imul
fidivr
fs
in
test
std
sbb
xchg
mov
out
popf
inc
dec
xchg
inc
popf
jae
mov
sub
mov
aam
lock
imul
mov
mov
shl
loop
leave
jmp
and
mov
and
xchg
add
icebp
xchg
retf
inc
pop
or
cmps
sub
push
jb
pusha
inc
inc
ja
pop
cmp
xor
mov
inc
jo
pop
scas
enter
out
loopne
adc
sub
pop
or
jl
inc
rol
xor
movs
addr16
mov
adc
(bad)
mov
add
ret
ins
in
inc
popa
sub
mov
mov
push
sar
jmp
ficom
fimul
scas
sbb
in
inc
cmps
cmp
ss
or
mov
pop
sbb
je
pushw
sub
or
cwde
mov
pop
stc
out
or
js
dec
sbb
mov
ss
popf
adc
loope
das
mov
and
jbe
xchg
xor
(bad)
jb
or
mov
or
xchg
xchg
sub
fcos
pop
jno
es
jnp
aam
movs
cld
repnz
sahf
inc
pop
out
or
push
jl
fild
adc
sar
ss
xor
sub
push
ins
jmp
push
fild
mov
xchg
dec
sbb
mov
out
jg
xor
cmp
dec
sbb
sub
pop
pop
into
repnz
and
mov
add
jae
and
push
pop
inc
imul
ret
sbb
stos
sbb
jp
cmp
call
sbb
mov
sbb
mov
aam
fs
xchg
xchg
(bad)
xor
or
mov
jbe
mov
inc
sbb
mov
mov
cmps
sar
movaps
adc
ficom
pop
push
adc
cmp
rcl
push
repnz
pop
xchg
xchg
data16
sub
add
sub
xchg
pop
add
cmp
cli
and
inc
add
and
pop
mov
pop
and
(bad)
jbe
jno
mov
mov
mov
adc
shl
jl
add
shl
pop
nop
(bad)
cmc
std
je
xlat
xchg
hlt
push
mov
outs
lods
test
dec
dec
sbb
mov
xchg
dec
dec
mov
jle
pop
dec
sbb
shr
cli
mov
or
out
push
outs
bound
test
in
cmps
fidiv
retf
sahf
xor
cmp
in
es
sub
xchg
call
or
imul
mov
mov
sub
sti
or
pop
test
xchg
sub
iret
fstp
stc
jo
div
add
inc
frstor
(bad)
loopne
mov
or
xchg
adc
xor
inc
dec
test
dec
fist
and
sub
icebp
imul
loope
mov
mov
or
stc
rcr
mov
fs
ds
ins
loopne
test
xchg
mov
adc
mov
hlt
aaa
cld
(bad)
pop
mov
mov
dec
mov
sub
outs
imul
push
dec
ss
cmp
inc
fwait
mov
fidivr
popf
xchg
mov
repnz
push
sbb
shld
mov
pop
jnp
ja
inc
mov
call
jo
(bad)
fadd
inc
push
call
adc
fmul
sub
cmp
(bad)
mov
or
lahf
push
imul
sbb
out
and
cmp
mov
or
vmovaps
mov
(bad)
jbe
ins
jmp
js
sub
inc
mov
(bad)
into
popf
push
sahf
imul
inc
mov
std
hlt
sbb
dec
jns
xchg
jmp
or
jno
aas
cli
call
push
iret
test
dec
outs
dec
adc
shl
mov
xlat
jmp
cmp
jmp
rcr
retf
add
scas
sbb
adc
pusha
outs
push
(bad)
call
lahf
pop
xchg
arpl
pusha
adc
or
ret
aad
aaa
out
push
xor
mov
data16
mov
mov
fucomip
xlat
movs
jp
mov
lods
test
into
into
xor
sub
mov
jnp
xchg
sub
add
(bad)
pop
jmp
sbb
push
or
data16
xchg
arpl
cmp
cmp
sti
push
and
mov
(bad)
rol
dec
call
into
dec
inc
jo
fwait
mov
ja
jmp
xor
in
in
jmp
rol
arpl
lea
push
mov
outs
icebp
test
test
mov
pop
enter
jmp
push
inc
mov
test
cmp
test
mov
jbe
xor
pusha
fst
fs
mov
inc
xor
push
and
or
jl
jns
jge
push
mov
pop
out
fcmovb
call
mov
les
ins
ffree
repz
ins
sub
gs
xchg
ja
mov
add
(bad)
aaa
prefetchw
mov
mov
cli
mul
xor
jl
push
(bad)
mov
mov
int
test
and
inc
cmc
mov
retf
bound
sub
cmp
mov
cmp
dec
xchg
fdiv
aas
pop
repnz
jns
ror
fneni(8087
ds
add
push
jmp
mov
sbb
shl
cld
fidivr
jge
mov
test
lahf
dec
jmp
jle
(bad)
mov
pop
cld
pop
add
or
push
scas
mov
in
arpl
push
and
cmp
int3
out
jno
test
xor
clc
sub
push
aas
cmp
add
out
outs
pop
sbb
fadd
xchg
hlt
ror
pop
push
mov
sahf
popa
pop
mov
jbe
enter
xchg
xor
and
pusha
mov
sbb
movs
jl
lock
xor
imul
or
test
push
adc
call
push
inc
cmp
adc
stos
cmp
pop
dec
mov
mov
mov
ss
sbb
les
call
xor
xchg
fcomp
add
and
(bad)
int
fist
daa
cmp
stos
call
or
pushf
call
lea
jg
loope
int
test
xchg
test
xor
shl
fst
push
cmp
idiv
cdq
xchg
adc
scas
std
retf
test
imul
inc
test
mov
jge
outs
mov
scas
cmps
mov
call
int
cmps
jae
shl
or
arpl
fadd
inc
(bad)
out
movs
adc
jmp
jb
cmp
cmp
ss
sub
test
sti
sbb
xor
mov
jg
xlat
jne
push
push
int3
addr16
cmp
push
movs
xchg
shl
inc
aam
and
fwait
div
in
mov
mov
xchg
fisubr
lock
jmp
mov
mov
xor
cs
(bad)
shr
aam
push
or
adc
scas
fdiv
lds
in
call
vunpcklps
pop
jb
cmp
pop
mov
sti
out
add
mov
mov
jmp
sbb
(bad)
out
inc
add
into
(bad)
jne
js
ins
sbb
iret
dec
cdq
loopne
aaa
dec
lock
scas
cmp
and
cmps
pop
push
es
mov
mov
mul
or
or
pop
and
test
mov
jno
pop
sbb
in
daa
inc
jl
in
int
mul
inc
not
jg
cld
fiadd
push
inc
mov
fsub
dec
dec
pop
mov
add
scas
(bad)
or
mov
and
mov
pusha
les
xor
pop
(bad)
pop
and
dec
test
int
pop
cmps
repz
mov
movs
push
inc
sub
inc
nop
call
xchg
mov
(bad)
mov
and
lahf
mov
(bad)
movs
imul
in
mov
adc
int
dec
inc
mov
retf
push
jmp
imul
mov
inc
sub
xchg
ficom
int3
add
jl
das
xor
add
std
cmp
sbb
jbe
stc
scas
jo
xchg
xchg
test
cmps
sbb
hlt
xchg
xor
pop
dec
ror
and
gs
loopne
inc
dec
sub
mov
ins
movs
aas
cwde
imul
push
xor
mov
std
outs
(bad)
mov
sahf
and
adc
fsubr
cmp
fwait
sti
xor
xchg
cli
dec
dec
ror
repz
inc
aas
out
xchg
xor
mov
adc
inc
aas
mov
xchg
dec
ss
mov
ds
sbb
jno
loope
push
cmp
dec
jbe
sbb
inc
pop
pop
stc
int
cdq
mov
lods
or
inc
stos
(bad)
push
xchg
pop
pop
inc
mov
shl
xor
jns
outs
xchg
sbb
mov
push
loopne
inc
mov
loope
cmp
stc
jmp
pop
lods
push
sub
in
mov
rol
loop
sbb
(bad)
jae
add
lds
mov
aam
test
jl
call
adc
ja
adc
stos
xchg
fs
jmp
jle
push
inc
sbb
push
repnz
test
mov
(bad)
cli
je
dec
out
jmp
neg
addr16
add
jb
nop
jb
mov
xor
ss
push
out
hlt
add
xacquire
add
rol
bound
test
icebp
hlt
and
dec
and
loope
add
inc
mov
mov
cmps
rcr
(bad)
ins
dec
jbe
sub
add
cmp
adc
add
pop
(bad)
adc
xchg
or
push
cmp
pusha
in
retf
mul
test
sbb
inc
cs
push
cmp
pop
mov
dec
lds
add
repz
adc
sbb
mov
dec
das
inc
int
cdq
test
xchg
mov
push
ret
inc
stos
dec
xor
cmp
pop
xor
cdq
inc
mov
adc
add
or
cwde
std
mov
(bad)
jmp
inc
push
mov
fcmove
test
cli
sub
xchg
mov
jmp
pushw
xchg
das
cmp
push
and
std
outs
push
and
pushf
rol
xchg
cmp
push
inc
rol
mov
dec
mov
inc
mov
dec
and
fsub
add
lock
mov
outs
fdiv
jbe
mov
clc
mov
inc
arpl
(bad)
mov
pusha
inc
in
adc
xor
sbb
leave
cld
push
bound
fimul
push
(bad)
push
rcr
and
into
mov
rep
cmp
shr
sbb
cmp
movs
inc
dec
retf
sub
xor
sbb
test
idiv
mov
xchg
std
push
dec
xchg
dec
xlat
popf
jl
nop
js
xor
ret
mov
cmps
xchg
or
cmps
mov
ret
sbb
push
mov
iret
adc
or
in
sar
and
xchg
mov
gs
fbld
ds
push
or
ins
jae
popa
mov
cs
test
pop
mov
jns
and
sbb
ja
inc
jne
je
es
sar
dec
sub
cmp
add
aas
or
or
push
mov
in
jns
mov
jmp
adc
iret
cdq
xchg
jns
mov
test
std
or
mov
adc
cli
imul
dec
xor
mov
test
add
ror
xor
aaa
mov
mov
push
inc
mov
mov
sbb
add
(bad)
dec
mov
pop
sldt
jle
xchg
mov
adc
pop
inc
stc
push
cmp
(bad)
outs
aam
xchg
fwait
repnz
push
add
sbb
or
lods
cmp
and
and
fcom
test
(bad)
cmp
jge
mov
sbb
aad
mov
dec
sti
outs
stos
les
cmps
shl
div
jbe
pop
sbb
sbb
retf
iret
push
je
je
sub
out
inc
addr16
mov
push
rol
jl
jp
nop
stos
inc
and
jle
cmps
or
adc
(bad)
dec
scas
mov
adc
xchg
cdq
push
add
add
scas
into
(bad)
xor
add
repz
lock
push
arpl
mov
push
das
and
das
pop
pop
xlat
adc
arpl
std
adc
add
stos
enter
dec
mov
and
(bad)
jbe
pop
push
fbld
gs
cld
xor
(bad)
mov
jno
dec
js
pop
jl
rcr
jns
into
add
aad
dec
js
les
pop
add
push
(bad)
dec
adc
fild
clc
fcom
xchg
arpl
jmp
cmps
cli
inc
aas
jne
stc
add
cmp
data16
sub
leave
std
in
xor
add
push
jle
push
add
mov
retf
sub
les
sar
es
sbb
rcr
adc
push
push
out
loopne
push
cmps
adc
inc
jbe
mov
cmc
mov
not
test
mov
outs
xor
ins
push
cmp
lods
mov
jmp
into
ficomp
jnp
dec
out
and
dec
(bad)
jae
mov
jl
cmp
or
retf
inc
xor
shr
mov
sbb
xchg
xchg
imul
sbb
idiv
sub
xchg
and
xor
popa
scas
cld
sbb
sar
pop
pop
mov
pmaxub
sub
enter
pop
imul
jl
js
xchg
nop
pop
mov
or
pop
fwait
sahf
sub
stc
int3
pop
or
mov
inc
(bad)
int
sub
les
cld
in
cmps
cmp
sbb
outs
xchg
mov
inc
mov
pop
mul
jmp
jae
push
mov
das
jmp
mov
stos
rcl
sbb
(bad)
mov
jmp
ret
cmc
es
pop
shl
add
call
xor
div
cmps
ror
jmp
les
and
cwde
fdivr
xchg
aas
inc
or
pop
(bad)
cmp
leave
mov
test
aas
jno
pop
movs
cmp
scas
mov
cmp
mov
xchg
mov
mov
cs
push
fs
dec
lods
stos
mov
push
xor
mov
sti
push
callw
jmp
push
daa
ror
pop
jns
dec
xor
sbb
pop
ficomp
fnsave
es
push
mov
cli
int3
je
loopne
cwde
xor
add
ret
inc
dec
mov
fiadd
and
mov
mov
cmps
push
stos
mov
xor
xchg
mov
dec
mov
sar
cdq
sub
pop
cmps
mov
jmp
test
sbb
mov
fstenv
movs
mov
(bad)
cmp
and
stos
push
cmps
je
mov
inc
ret
adc
cmp
add
aad
sub
out
cmp
fbstp
add
add
jne
addr16
(bad)
cli
gs
addr16
pop
or
jo
(bad)
pop
out
ins
les
pop
fcmovne
mov
bound
rcl
scas
push
adc
push
hlt
xchg
pop
inc
test
jae
(bad)
loop
mov
retf
sar
and
jl
jae
mov
(bad)
dec
mov
sbb
in
mov
xchg
in
fwait
adc
mov
mov
repz
daa
jmp
or
jo
xor
pusha
mov
mov
pop
mov
(bad)
mov
pop
push
iret
(bad)
into
fst
and
mov
daa
push
mov
pop
mov
adc
xchg
xchg
mov
ins
sbb
inc
test
(bad)
push
fld
lahf
sti
test
mov
loope
or
fcmovnbe
inc
hlt
(bad)
stos
jp
cmp
sahf
pushf
test
or
lahf
adc
mov
mov
arpl
arpl
scas
int
sub
xor
and
fiadd
fiadd
in
or
ja
(bad)
jle
ss
and
adc
scas
out
pop
shl
pushf
add
or
jae
adc
inc
cs
inc
pop
call
mov
and
mov
imul
cmps
inc
sub
xlat
mov
stos
push
mov
jo
cmps
imul
repnz
xchg
sub
xchg
jecxz
test
mov
icebp
mov
jo
jne
leave
scas
mov
mov
inc
mov
jno
pop
push
cmp
mov
pusha
in
out
scas
lds
mov
xchg
sbb
sub
stc
pop
inc
fist
mov
mov
mov
jecxz
(bad)
movs
push
imul
arpl
jnp
mov
inc
(bad)
mov
daa
mov
adc
inc
sub
(bad)
cmc
sbb
mov
push
push
jmp
cwde
cld
xor
je
shl
shl
jb
mov
cmc
mov
or
and
xor
out
imul
fisttp
std
(bad)
jecxz
jmp
aad
ja
out
pop
repz
loop
fidivr
mov
add
(bad)
les
adc
or
xor
cdq
jg
sub
sub
ins
movs
and
jl
lock
xor
and
and
mov
dec
add
inc
xor
push
lods
ret
pop
or
pop
cmc
push
inc
inc
pushf
push
nop
adc
shl
out
rcr
bound
xchg
jge
outs
jge
and
mov
mov
lock
and
lock
adc
jb
retf
(bad)
xchg
mov
xchg
stc
and
xchg
add
lock
adc
sbb
jge
rol
mov
add
and
repz
jns
into
jne
lods
pop
fnstenv
dec
inc
sub
push
mov
aam
jnp
lds
pop
adc
scas
add
lods
push
xchg
das
adc
repz
jle
xchg
pop
push
sub
inc
xor
ret
xor
cmps
pop
ss
dec
call
rol
daa
mov
dec
shl
cmps
enter
outs
loope
out
iret
shr
fnstenv
aaa
dec
lods
in
and
push
pusha
adc
retf
out
neg
imul
adc
pop
dec
inc
xlat
jne
push
arpl
dec
div
dec
sub
ss
adc
mov
ret
push
mov
push
xor
in
popa
cmc
xchg
fist
addr16
out
cmp
sti
in
imul
cmp
inc
imul
mov
xor
fs
and
div
stos
movs
push
sub
out
enter
cmp
pusha
retf
cs
test
fwait
in
jle
outs
xchg
adc
push
loopne
shl
fdiv
xchg
clc
ins
fnstcw
inc
and
and
or
es
repz
adc
push
fs
xchg
inc
mov
cmp
mov
jnp
popa
jl
into
push
and
call
lea
jmp
xchg
sub
repz
sbb
daa
mov
xor
mov
cmp
sub
jne
xchg
pushf
test
test
xor
mov
scas
iret
pop
retf
cmp
cmps
fcomp
(bad)
adc
bound
mov
outs
dec
fnstsw
int3
xchg
xchg
xchg
cmps
xchg
mov
xlat
push
gs
jg
cmp
sahf
(bad)
shl
pop
mov
mov
iret
mov
push
mov
add
add
jp
retf
push
data16
dec
mov
mov
sbb
mov
pushf
dec
push
sub
mov
pop
or
iret
fdiv
push
cmp
add
or
add
cli
mov
and
jge
pop
in
mov
pop
out
add
movs
cmp
scas
aad
clc
mov
jno
scas
add
aad
xor
js
cmp
mov
rcr
cli
jecxz
jnp
and
inc
and
call
pop
jns
xor
test
and
movs
xchg
jns
sbb
xchg
push
mov
(bad)
int3
push
mov
mov
xchg
cmp
dec
mov
mov
xchg
aad
jl
leave
mov
mov
test
push
test
adc
push
xchg
xor
pusha
mov
sbb
and
pop
outs
push
jne
cdq
sub
cs
jecxz
mov
in
jmp
loop
mov
push
mov
and
not
inc
sub
mov
test
repnz
jbe
jmp
sub
outs
cmp
clc
retw
xchg
fcmove
je
in
pop
mov
add
test
adc
cmp
xchg
inc
and
out
pusha
xchg
xlat
add
add
fsub
imul
cld
test
mov
adc
test
fcmovb
movs
pop
sahf
aad
test
aas
cli
fmul
push
xchg
test
adc
lahf
sub
repz
sub
cld
sbb
jge
js
mov
jmp
lds
jno
in
inc
push
rcl
xchg
jecxz
test
rol
mov
loop
test
push
cmps
push
ja
mov
or
dec
jo
fs
jne
in
inc
or
jmp
adc
add
lods
cmc
(bad)
push
pop
pop
lea
out
xlat
jbe
enter
mov
jge
mov
sbb
cmps
inc
xor
jae
push
xchg
sub
or
add
push
sbb
pop
clc
pop
add
cmp
stos
shl
int
loopne
push
push
inc
out
fwait
ret
jge
jle
cmp
or
mov
pop
aad
je
mov
jmp
inc
xchg
pop
mul
pop
adc
call
es
push
jle
xchg
std
loop
and
fisttp
sub
sub
das
push
push
jb
stos
push
xchg
ins
mov
push
addr16
mov
mov
ins
mov
jo
iret
out
daa
xchg
push
pmaxub
ins
rcl
pop
xor
rcl
pop
mov
scas
les
test
idiv
and
push
ds
test
adc
icebp
add
pushf
pop
lock
add
das
adc
cmp
int
aam
cmps
jns
std
cmp
mov
mov
sahf
ret
nop
xchg
cmc
adc
push
dec
stos
add
sub
jb
sub
or
hlt
bound
inc
(bad)
jle
cmp
mov
sub
cmp
test
out
add
and
loop
iret
hlt
mov
push
or
jge
and
rcl
sub
(bad)
shl
inc
lock
cmp
fst
jmp
xchg
stos
push
inc
or
sbb
in
mov
jne
dec
stc
xchg
mov
pushf
jno
in
not
(bad)
enter
cwde
rcl
push
xchg
sub
rcl
inc
mov
sub
push
stc
xchg
and
pop
sub
fstp
mov
call
int
inc
stos
jmp
sub
mov
retf
mov
mov
aaa
inc
sbb
push
fwait
push
aad
rcl
mov
push
inc
fs
mov
and
rcl
outs
sbb
bound
sbb
push
mov
repz
imul
icebp
arpl
xlat
jne
cmp
xor
jo
push
loopne
mov
adc
shr
or
pop
mov
mov
mov
mov
sub
movs
xor
mov
fcmovne
je
or
adc
jmp
dec
mov
jp
mov
mov
cmp
out
stos
xchg
mov
retf
into
dec
scas
test
aam
mov
mov
rcr
cmp
jb
xchg
xchg
dec
add
push
les
(bad)
movs
rcl
jno
dec
cmp
and
jecxz
sbb
nop
(bad)
sbb
xchg
in
out
sbb
adc
test
push
shl
pop
push
adc
pusha
sti
cmp
mov
mov
push
mov
cwde
dec
pop
sub
fs
inc
fmulp
sub
push
std
les
cmp
lods
fsubr
sub
dec
jl
dec
push
gs
cmp
fs
jae
jecxz
mov
xchg
or
dec
mov
adc
scas
push
xlat
daa
inc
stos
xchg
or
nop
int3
movs
jnp
ror
fwait
pop
sti
(bad)
push
dec
js
pop
inc
mov
push
fwait
stos
arpl
mov
push
test
xchg
mov
mov
xlat
jl
shl
xchg
test
repz
xchg
rol
add
imul
int3
cmc
inc
push
cmp
stc
test
dec
fstp
sbb
scas
jne
cli
mov
out
popf
es
mov
test
sub
inc
mov
mov
or
dec
addr16
imul
repz
pop
retf
das
jmp
adc
mov
adc
bound
dec
arpl
scas
neg
mov
mov
leave
push
test
call
xor
adc
sub
hlt
cld
aam
sub
test
mov
xor
arpl
inc
fcom
mov
xor
js
(bad)
test
mov
jmp
jne
push
idiv
stos
dec
enter
sbb
xchg
push
ret
test
pop
call
or
mov
das
in
je
xor
push
test
fwait
xor
sbb
and
jne
lock
xchg
fimul
fsub
pop
iret
in
mov
cld
fmul
adc
xchg
mov
fstp
dec
es
pop
push
mov
mov
sub
inc
stc
dec
pop
hlt
mov
fsubr
push
call
pusha
pop
and
cld
mov
int
cmp
or
adc
push
xchg
ins
cmp
mov
rcr
test
inc
adc
loope
ja
mov
jp
ds
adc
mov
mov
mov
xlat
test
movntps
leave
movs
mov
xor
test
lods
and
xor
inc
jns
fwait
pop
fsub
mov
xor
inc
mov
add
dec
mov
test
out
repnz
int3
xor
inc
inc
sbb
pushf
adc
stc
out
xchg
inc
test
aam
cli
xchg
adc
in
lods
fbstp
call
xor
adc
adc
sub
jno
xor
mov
push
fld
(bad)
mov
jmp
sbb
xchg
pop
add
or
adc
js
cmp
adc
jno
aad
mov
pop
mov
mov
inc
lods
add
ret
std
shl
sbb
and
(bad)
mov
jno
es
loopne
call
dec
mov
rcr
lahf
sbb
lods
cli
sbb
outs
leave
mov
mov
and
jg
mov
pop
outs
mov
lock
loope
div
retf
popa
and
daa
sbb
mov
jecxz
cld
jne
dec
into
or
mov
push
push
ja
inc
es
outs
ja
jo
sbb
(bad)
cmc
sub
dec
cli
jo
jge
jl
cld
cmps
push
pop
ja
les
(bad)
pop
sub
cmc
add
rcl
imul
sbb
out
xlat
rcl
cmps
jne
test
pop
sub
dec
fs
hlt
fist
mov
mov
sub
jae
mov
mov
mov
in
(bad)
cmc
inc
inc
fisttp
pop
adc
adc
xor
je
jecxz
loop
test
mov
jmp
pop
sbb
or
ins
dec
aas
mov
(bad)
loopne
mov
les
pop
pusha
xor
mov
mov
push
xor
push
loope
ret
(bad)
push
call
cwde
je
push
iret
pop
pop
dec
call
repz
stos
aam
pop
pusha
in
sbb
mov
adc
and
bound
fld
in
mov
cmps
(bad)
ss
lea
sub
ins
cmps
sahf
rcr
mov
jae
ja
fnsave
jae
mov
aam
xlat
or
outs
ja
popa
pop
mov
xchg
lahf
fnstenv
or
push
dec
and
movs
daa
jge
or
daa
add
xchg
lock
call
dec
leave
push
mov
or
sub
mov
retf
add
push
push
mov
inc
jmp
mov
mov
mov
rol
adc
push
adc
fstp
mov
jbe
jge
sar
adc
add
or
adc
inc
js
(bad)
icebp
stos
jg
pop
ins
push
jbe
push
push
jno
mov
fnsave
jo
fisubr
cmp
cmps
shl
shl
fptan
std
popa
mov
xor
push
push
or
cwde
ret
and
dec
xchg
pusha
fimul
out
js
(bad)
xchg
adc
ffreep
ja
nop
sahf
add
cmps
retf
xlat
das
in
push
sub
les
arpl
fldenv
fsub
pop
mov
adc
push
inc
sbb
daa
and
mov
iret
sub
jb
test
xchg
lock
scas
ficom
and
mov
mov
xchg
enter
jns
dec
movs
cs
or
fs
daa
popa
xchg
outs
popf
stos
mov
xor
into
scas
retf
cld
inc
add
and
add
lods
lahf
push
scas
rol
test
add
rcl
js
aaa
nop
inc
shr
xchg
mov
dec
xchg
sub
fdiv
sbb
mov
rol
iret
ss
xchg
ds
test
ins
inc
call
push
push
repz
shr
popf
js
mov
and
(bad)
jnp
pop
sub
inc
rol
hlt
pop
pushf
inc
out
or
xchg
or
aaa
sub
dec
stos
mov
push
pop
pop
sbb
es
sbb
pop
inc
mov
cmp
test
repz
or
dec
sbb
loope
sar
sti
or
pushf
and
pop
aas
adc
dec
cdq
mov
xor
(bad)
(bad)
shr
cli
mov
rep
sub
in
xchg
cld
into
mov
mov
jl
pop
or
fwait
inc
(bad)
clc
stc
ds
movs
push
enter
dec
mov
cmps
pop
loope
jg
ror
jge
add
loop
or
dec
adc
icebp
test
sub
in
inc
inc
xchg
gs
add
in
je
add
rcl
push
sbb
mov
or
sub
sbb
sbb
sahf
dec
pushf
ja
mov
in
sar
xor
fistp
out
adc
jge
inc
jmp
jns
push
mov
xor
test
rcl
add
xchg
fadd
ds
pusha
push
pop
mov
test
outs
xor
push
out
and
add
jnp
adc
mov
(bad)
aad
jle
gs
je
pop
clc
inc
scas
std
inc
repz
mov
or
mov
mov
adc
je
fsubr
nop
mov
add
pop
fisttp
jmp
mov
enter
adc
aaa
and
loop
ss
or
cmc
push
addr16
in
push
int3
or
(bad)
pop
cmp
sub
mov
xchg
lods
aad
retf
jp
lods
movs
mov
jns
aas
mov
mov
push
out
xchg
retf
dec
xchg
into
add
jp
xor
xchg
mov
push
ins
cmp
add
fld
mov
inc
xor
inc
mov
movs
cmp
jbe
hlt
dec
sbb
sbb
aad
popf
out
out
pop
adc
cmp
(bad)
loop
into
mov
(bad)
jecxz
bound
(bad)
cmps
ss
or
sti
enter
mov
push
pop
aam
inc
mov
xrelease
or
push
popa
sar
call
loopne
jbe
pop
push
mov
aas
push
cmovne
xchg
int
push
or
push
cwde
pop
das
out
lahf
jg
mov
aaa
and
(bad)
hlt
mov
es
push
test
mov
add
loop
fild
repz
pop
pop
ja
neg
mov
jecxz
and
mov
xchg
sub
in
test
and
cmp
push
add
into
pop
mov
mov
dec
jmp
scas
pop
pop
in
daa
mov
xor
call
add
(bad)
(bad)
xchg
pop
sahf
retf
and
xor
dec
add
jmp
mov
dec
lock
dec
mov
stos
test
icebp
imul
shr
sbb
xchg
cli
dec
jne
sbb
(bad)
scas
and
rcl
adc
pop
shl
push
adc
pop
loope
adc
and
mov
enter
xchg
repnz
inc
sub
dec
lods
js
xor
jmp
nop
test
cmps
jge
xor
cld
imul
nop
xor
adc
and
popf
mov
and
inc
stos
jg
fld
loope
scas
cs
lock
scas
stos
add
mov
and
sub
retf
mov
xor
add
push
push
scas
jae
and
add
mov
dec
clc
call
pop
adc
aaa
jp
push
mov
dec
stc
or
retf
(bad)
test
adc
jb
mov
dec
and
xor
in
sbb
push
inc
idiv
inc
mov
call
cld
xor
cmc
in
pop
add
stc
inc
mov
push
push
lods
adc
std
mov
fs
mov
adc
xchg
or
(bad)
cmp
outs
lock
or
ins
(bad)
test
cli
and
jne
pop
dec
shl
call
push
ja
pushf
inc
pop
dec
out
xor
mov
mov
xor
in
mov
ins
inc
popf
mov
pop
call
add
ins
add
jmp
pushf
fs
xor
cdq
xchg
int3
std
mov
jle
outs
loope
sbb
nop
inc
in
clc
and
add
int3
stos
pop
mov
dec
ja
mov
and
call
or
cli
fldz
or
mov
pop
(bad)
cmp
sub
int
rcl
and
jecxz
leave
cwde
cs
mov
rol
pushf
test
call
jbe
wrmsr
and
xchg
ss
pop
data16
push
shl
cmp
pop
adc
popa
in
xchg
push
outs
retf
stos
mov
nop
call
push
jnp
out
cdq
cwde
mov
pop
jns
xlat
(bad)
loopne
pop
fbld
push
pop
call
add
xchg
movs
in
lock
cmp
jbe
pusha
adc
adc
or
repz
mov
addr16
ja
movs
xlat
mov
mov
repz
mul
dec
pusha
jge
mov
outs
movs
pop
repnz
lock
mov
xchg
int
scas
loope
shl
mov
sub
jl
lods
or
or
mov
inc
jns
test
mov
push
(bad)
jmp
out
adc
mov
ret
int
push
mov
shr
mov
outs
aas
pop
add
and
in
js
mov
cs
cld
cmp
sbb
outs
jmp
les
cmp
jle
int
pushf
lahf
inc
std
jbe
and
jnp
mov
loop
sub
ins
out
add
(bad)
sbb
(bad)
xor
imul
(bad)
out
hlt
push
cmp
xchg
jmp
mov
xor
cmps
sbb
aaa
es
pushf
push
mov
dec
push
cmp
div
stos
cmps
jno
ss
pop
add
inc
pop
outs
xchg
mov
mov
adc
pusha
jge
ja
or
stc
stc
or
(bad)
int3
mov
adc
les
xor
xchg
fst
stc
xchg
out
dec
ins
aaa
inc
sbb
mov
inc
sub
pop
in
call
jge
ds
ja
mov
pop
inc
arpl
sar
xchg
sub
jge
sti
inc
sub
sub
imul
aad
inc
inc
aas
das
sub
adc
sbb
xchg
mov
fmul
shr
jno
mov
test
add
shl
jne
mov
dec
ds
add
jl
pop
idiv
xchg
ds
jmp
mov
loopne
sar
lea
adc
sbb
sub
hlt
xchg
cli
dec
inc
jg
scas
cld
pop
xor
or
(bad)
and
push
mov
jge
daa
ja
cmps
mov
lea
mov
add
loope
in
hlt
retf
test
sti
sti
xchg
push
arpl
jp
ins
inc
(bad)
sbb
addr16
mov
out
sub
mov
add
jmp
push
dec
sar
or
std
and
arpl
inc
jmp
icebp
fldcw
mov
loopne
into
mov
mov
sub
or
cdq
push
pusha
push
hlt
push
pop
cli
pusha
aaa
mov
les
jecxz
repnz
arpl
mov
or
mov
pop
xor
int
jbe
neg
adc
xor
mov
mov
dec
ficomp
push
and
jp
jge
pop
out
scas
sahf
scas
xchg
imul
or
jp
dec
cld
test
mov
mov
(bad)
cld
push
mov
cmp
lods
adc
scas
scas
mov
jge
inc
mov
clc
ins
je
mov
in
pop
lods
mov
mov
mov
add
ret
push
das
or
loopne
scas
pop
and
dec
retf
add
cmp
xchg
cld
pushf
inc
ja
and
sub
not
dec
fadd
xor
int
ds
not
adc
cmp
(bad)
arpl
mov
xchg
adc
stos
xor
repnz
mov
push
dec
cmp
xor
sub
fild
or
cmp
daa
sti
jns
jmp
pushf
add
ret
mov
outs
mov
and
sbb
mov
mov
jmp
aas
mov
daa
adc
inc
ins
jmp
add
pop
int3
sbb
fmul
pop
loop
add
rcr
pushf
and
inc
push
je
les
add
dec
mov
mov
sub
sub
retf
out
cmp
loop
mov
pop
leave
or
sbb
cmps
sahf
add
mov
inc
sahf
adc
jl
repnz
push
pop
adc
inc
cmps
ss
push
or
rol
xchg
sbb
jno
xor
test
cmp
movs
sub
ror
(bad)
add
ins
(bad)
pushf
mov
mov
or
cmp
ja
in
xchg
cmp
adc
(bad)
adc
and
mov
mov
mov
dec
lods
sub
jmp
push
cmp
lods
shl
hlt
dec
xor
and
pop
mov
repz
push
add
xchg
sti
xlat
loop
lods
mov
call
cs
mov
push
inc
inc
sub
nop
movs
out
fwait
xchg
pusha
cmp
lods
inc
mov
pushf
in
sahf
fldcw
sub
dec
fdivp
scas
push
ss
pop
inc
ret
mov
loop
push
cmp
loope
jmp
inc
sbb
cmps
scas
mov
adc
add
shr
push
mov
mov
adc
mov
mov
cmp
xor
cmp
pop
dec
cmp
fistp
movs
jmp
aas
add
xchg
jge
mov
repnz
cmp
mov
cs
cmp
or
dec
xchg
shl
jle
aad
jbe
sahf
mov
retf
lea
xchg
movups
jmp
cmp
aad
outs
push
cmp
ror
add
cmp
cdq
push
fbstp
mov
movs
pop
rep
sahf
stc
xchg
fsubr
xor
shl
jb
jno
aam
test
aad
mov
cwde
fadd
push
popa
lock
xor
pusha
stos
push
daa
mov
js
xor
xor
push
mov
lds
add
fbstp
fsubr
fimul
sbb
sbb
popf
iret
cmp
adc
push
jecxz
pop
jmp
std
sti
and
xchg
aam
sub
aam
sbb
cwde
mov
test
in
out
aad
inc
mov
fsub
shl
inc
sbb
retf
int3
sub
test
fwait
mov
stos
call
mov
scas
mov
fbstp
cmps
popf
popf
push
into
jno
adc
or
das
push
ds
jmp
push
push
loopne
dec
aam
push
mov
repnz
fnstenv
std
imul
pop
push
das
push
xchg
icebp
xchg
imul
pop
mul
pop
mov
(bad)
fbld
push
pop
cmps
adc
cmp
into
mov
popa
aaa
inc
in
push
popa
into
lock
jmp
test
mov
(bad)
out
mov
pop
int
jl
pop
mov
js
in
or
out
js
scas
add
lock
xchg
test
jl
rol
cmp
and
jge
xor
je
sub
icebp
(bad)
lods
mov
xchg
push
jg
pop
into
lods
out
xor
ja
aas
or
aad
jle
push
and
ins
stos
jp
mov
sbb
sub
cmps
push
jae
in
or
lds
add
pop
or
sar
ret
xor
das
and
and
jmp
fs
jns
out
push
fcom
push
out
cmps
sahf
jno
repnz
repz
mov
loop
pop
and
jb
es
cdq
or
push
shl
cmp
hlt
mov
stos
mov
into
fwait
outs
dec
pop
iret
dec
cmp
retf
sbb
ss
push
test
les
shr
fcomp
push
(bad)
stos
in
push
popa
or
lods
pop
repnz
pop
dec
push
mov
xchg
jno
scas
neg
dec
push
adc
dec
cmc
and
out
xchg
or
scas
dec
jne
mov
(bad)
loopne
fstp
xchg
mov
frstor
out
adc
lea
pop
in
aas
add
aam
ja
(bad)
mov
pop
pop
adc
popf
shl
test
add
jmp
pop
pop
into
jne
das
aas
imul
jl
bound
and
imul
cmp
and
lods
mov
xlat
or
adc
mov
fld
push
scas
xchg
xor
aaa
movs
repz
push
fstp
ins
aam
adc
out
ds
ss
sub
ds
xchg
das
mov
adc
jmp
imul
jmp
dec
mov
in
push
cdq
mov
leave
jo
cmps
repnz
ret
sub
fcomp
mov
cmps
lods
outs
xor
idiv
cmp
jns
push
cmp
inc
add
add
stos
fdiv
add
push
(bad)
cli
xor
sbb
leave
inc
xchg
and
add
fcomp
shl
jle
pop
push
or
pause
mov
icebp
cmp
xor
inc
inc
and
call
dec
mov
out
fidivr
sub
imul
mov
push
shr
pop
pop
in
rol
rcr
and
hlt
test
je
push
push
mov
leave
xor
aaa
cmp
scas
adc
clc
cmps
aam
aas
pop
dec
imul
into
push
data16
test
in
in
dec
fisubr
fnsave
ins
movs
pop
xchg
outs
xchg
add
inc
ret
sub
fld
fidivr
adc
leave
inc
icebp
xchg
test
jecxz
pop
inc
jmp
xchg
fadd
scas
daa
call
outs
mov
jae
(bad)
out
es
inc
inc
sbb
inc
cli
sbb
xchg
frstor
adc
dec
cmp
jne
xchg
and
stos
arpl
mov
dec
mov
and
adc
dec
adc
aam
push
cdq
sbb
into
fstp
jno
loopne
xor
fst
mov
jae
and
setno
ins
mov
inc
ror
mov
(bad)
xchg
and
stos
jae
cmps
cmc
add
cli
ja
xchg
(bad)
sub
aad
(bad)
lock
xchg
in
mul
(bad)
adc
(bad)
sbb
pop
in
popa
jae
loopne
loopne
xchg
ds
cmps
adc
mov
popa
outs
std
cmp
inc
add
and
xchg
add
outs
in
mov
dec
scas
xchg
mov
adc
push
sub
inc
xchg
push
shr
stc
mov
loope
mov
les
mov
mov
push
aas
push
(bad)
mov
adc
mov
in
inc
cmp
sbb
inc
inc
cld
mov
pop
jle
lahf
rcr
call
stc
ins
data16
mov
mov
shl
fidivr
mov
jmp
push
(bad)
pop
mov
aad
repnz
(bad)
stc
add
adc
movs
imul
cmp
pushf
or
xchg
xchg
movs
retf
enter
enter
test
lods
mov
rol
int
cmp
cmps
or
in
sbb
jp
bound
xchg
lea
xor
jb
inc
cmps
add
or
mov
hlt
dec
enter
daa
xor
std
xchg
outs
daa
sbb
add
mov
mov
aaa
mov
daa
xor
test
and
sub
(bad)
jmp
mov
movs
mov
mov
mov
ret
ins
test
adc
test
mov
into
icebp
es
leave
mov
leave
inc
jns
pop
or
idiv
gs
xlat
push
push
mov
push
cmp
imul
push
inc
retf
clc
das
movs
or
add
stos
lods
pop
cmps
cdq
xlat
into
mov
push
idiv
push
clc
das
mov
and
dec
and
jp
mov
xor
test
std
push
and
jp
xchg
repnz
xor
pop
inc
pop
inc
ins
add
mov
rcl
aaa
mov
adc
int
cmp
call
enter
sbb
lds
imul
aas
pusha
jns
or
and
mov
cwde
arpl
cmovl
clc
mov
aad
retf
mov
shr
sti
das
fild
test
and
jb
(bad)
push
mov
push
dec
arpl
fs
add
retf
lds
bound
add
sbb
push
jle
mov
sbb
call
cmp
mov
jmp
call
iret
push
mov
mov
repz
mov
sar
jnp
pop
jbe
or
ficom
cmp
std
sub
icebp
out
shr
sahf
add
addr16
(bad)
lock
mov
sbb
fdiv
stos
and
stc
cwde
fstp
xchg
jl
jb
out
push
pop
inc
dec
push
xchg
jae
in
mov
neg
ds
adc
enter
hlt
sub
in
mov
or
sbb
aam
hlt
inc
outs
fisubr
loopne
inc
ins
cdq
cmps
push
lea
push
rcl
push
xor
jbe
enter
mov
push
mov
jmp
jl
stos
ret
mov
ja
jmp
or
std
pop
adc
jle
cmp
(bad)
xor
or
xchg
xor
(bad)
test
hlt
lahf
hlt
inc
or
nop
cmps
retf
test
enter
inc
loope
mov
dec
jecxz
nop
mov
rcl
or
dec
push
mov
pop
cmp
cmp
scas
retf
fdiv
jmp
sub
out
(bad)
ficom
loope
sub
inc
jmp
sbb
stos
std
sub
add
push
mov
jmp
cmp
jl
sbb
aas
add
sbb
mov
or
cdq
in
cmp
movs
pop
shl
idiv
ror
sar
cmps
in
fdivr
das
sub
jge
aam
cmps
xchg
out
pop
jge
add
arpl
sub
inc
cdq
scas
cmps
xchg
add
jns
mov
sbb
imul
dec
fwait
inc
cmc
fs
cmps
les
les
out
out
stc
or
repz
mov
ror
push
add
xor
repnz
mov
pop
push
out
outs
xchg
rol
mov
push
xor
lods
add
sub
imul
repnz
movs
adc
cmp
(bad)
gs
mov
cmp
jecxz
xchg
test
jno
(bad)
loopne
mov
dec
jge
pushf
mov
mov
lds
in
call
mov
addr16
push
std
sbb
dec
pop
xor
xchg
loope
lods
and
popf
ret
mov
jb
stos
dec
push
sbb
adc
adc
nop
in
imul
dec
les
sar
test
mov
sbb
inc
arpl
or
aaa
mov
aaa
aad
aas
inc
(bad)
push
shr
xor
nop
mov
cmp
test
sahf
icebp
sub
loopne
pop
(bad)
mov
test
add
in
cli
in
cmp
nop
pop
loopne
mov
into
dec
(bad)
mov
pop
or
mov
adc
fcmovnb
ja
push
aad
jb
mov
dec
mov
inc
adc
fldcw
shl
and
sub
cwde
aad
dec
mov
xchg
or
adc
pop
push
cs
jno
fmul
dec
stc
sub
lods
sub
xchg
ret
or
lods
jo
loope
scas
neg
jnp
cmps
bound
loop
imul
test
daa
xchg
shr
add
jmp
scas
push
jnp
dec
dec
add
inc
cmp
jge
jmp
daa
pop
sbb
stos
lds
inc
imul
retf
(bad)
in
add
mov
add
je
jl
pop
mov
and
pop
out
adc
adc
rol
inc
jmp
inc
inc
push
ret
fcmovne
sub
xchg
xor
lahf
jle
sbb
xchg
mov
and
mov
mov
arpl
pop
dec
mov
dec
or
jecxz
test
pop
out
(bad)
test
inc
sbb
adc
add
in
gs
movs
dec
jo
mov
ret
sub
xor
test
or
fild
ds
(bad)
push
dec
outs
xchg
clc
and
mov
aam
ins
mov
push
xor
jno
adc
gs
(bad)
in
cmp
rcr
and
ins
repz
call
pop
dec
mov
and
fiadd
mov
sbb
shl
test
xor
test
(bad)
mov
xchg
fldcw
sub
add
or
sub
mov
adc
mov
or
out
mov
dec
lea
mov
aas
mov
out
test
xchg
faddp
repnz
dec
test
jp
mov
mov
ret
dec
jp
fmul
into
lahf
iret
xchg
mov
fwait
mov
out
fwait
and
int3
(bad)
mov
ja
dec
or
icebp
shl
jmp
arpl
cs
js
iret
imul
mov
push
pop
es
mov
outs
in
dec
test
lea
test
sub
sub
sub
bndstx
js
dec
mov
add
arpl
push
sbb
sub
mov
cmp
jecxz
ror
shr
in
sbb
xchg
mov
shl
xor
xchg
jl
(bad)
mov
mov
cmp
dec
sbb
retf
push
repz
sbb
mov
mov
hlt
neg
outs
ins
pop
js
out
cli
xchg
xor
ffreep
out
sti
dec
ret
(bad)
fadd
es
repz
je
cmc
sub
sub
aas
lods
jecxz
pushf
sub
repnz
mov
cwde
call
xchg
clc
sub
xchg
inc
in
lock
mov
xchg
inc
dec
push
int
scas
mov
adc
out
inc
je
inc
xor
enter
(bad)
xor
sbb
inc
dec
popf
bound
xor
push
div
and
pop
in
inc
sub
pushf
push
outs
cmps
jnp
and
(bad)
adc
(bad)
and
cmp
xchg
pop
loope
dec
fwait
and
sub
(bad)
cld
push
push
and
cmps
leave
js
ins
xchg
add
fisub
fld
(bad)
push
neg
js
jg
(bad)
mov
pop
sbb
mov
push
je
cmc
pop
push
add
mov
adc
stos
icebp
xchg
jmp
mov
or
call
inc
pop
mov
xor
stos
or
xchg
push
push
sbb
sub
sub
mov
sbb
mov
lea
xchg
clc
stos
pop
sbb
inc
and
in
mov
fdivr
or
cmp
scas
fcomi
mov
fbld
xor
lahf
rcr
jo
xor
(bad)
dec
mov
sub
xor
pop
jno
rol
aas
call
mov
jle
scas
fnstenv
push
jp
lea
adc
mov
dec
jl
ins
(bad)
sbb
dec
dec
inc
pop
(bad)
(bad)
std
xlat
outs
adc
fwait
sbb
push
ja
ja
imul
push
loopne
fld
jg
imul
push
pop
adc
out
cmp
push
mov
xchg
adc
xchg
push
ins
sbb
ds
or
sbb
jnp
jb
push
cmps
leave
inc
xor
sub
jbe
add
xchg
call
adc
stc
pop
mov
(bad)
outs
mov
mov
lar
xlat
mov
mov
test
sbb
jmp
outs
jecxz
sub
jecxz
sbb
jns
xchg
mov
add
movs
add
adc
xlat
cmp
xchg
push
sub
pop
adc
mov
aas
fadd
repnz
xchg
push
leave
xchg
into
out
out
fwait
or
sub
adc
out
dec
mov
push
test
xchg
mov
cdq
inc
lahf
jg
mov
push
pop
push
aas
or
rol
or
cmp
ds
mov
fldcw
movs
push
das
mov
adc
inc
sbb
jmp
popa
push
sbb
(bad)
jbe
jae
mov
or
push
gs
ins
sub
rol
xchg
dec
xor
arpl
push
jmp
test
jae
out
jmp
out
lock
add
and
jbe
push
fnsave
push
rcl
loopne
sahf
jl
rol
jmp
mov
scas
mov
into
scas
mov
jbe
jle
ja
(bad)
xchg
adc
xchg
add
ficom
push
rcl
mov
pop
push
loop
pop
cmp
mov
lods
mov
stos
cmp
fs
cmp
jno
movs
iret
leave
out
mov
cmp
dec
adc
mov
mov
repz
dec
out
int
stos
jg
xor
inc
leave
scas
push
sbb
add
lahf
add
inc
fs
and
shr
sbb
mov
mov
popf
xchg
push
sbb
xor
sub
mov
fbstp
mov
cmp
jnp
test
fadd
inc
fnstcw
adc
addr16
or
dec
dec
or
pop
mov
mov
lods
not
and
adc
cli
mov
sahf
movs
mov
nop
mov
inc
out
add
cmp
add
test
inc
rcr
sub
jle
(bad)
cmp
and
sbb
mov
xor
je
dec
cmps
inc
das
dec
adc
scas
push
pop
add
or
pusha
(bad)
lds
cld
xchg
mov
sub
and
or
or
adc
mov
sar
sbb
xchg
and
pop
cmp
test
xor
nop
in
dec
std
push
jns
pop
cdq
loope
jmp
hlt
sbb
mov
cld
xchg
jbe
xor
mov
adc
aam
mov
in
aas
es
mov
and
cmp
(bad)
aad
outs
sbb
sbb
das
or
mov
jmp
dec
daa
pop
sbb
pop
cmp
leave
pop
xor
mov
and
add
sbb
jae
mov
arpl
push
pop
pusha
lods
jmp
add
push
pop
pop
push
retf
xlat
push
push
inc
aam
idiv
aam
(bad)
enter
xchg
xchg
neg
mov
add
mov
je
adc
pop
xchg
and
push
fwait
xchg
mov
retf
adc
ins
xchg
push
xor
adc
test
repnz
cmp
arpl
sub
aad
cdq
sbb
loopne
out
add
sub
cmps
sahf
test
ror
dec
int3
and
je
sbb
mov
ss
call
or
fwait
cmp
bound
inc
jmp
jg
frstor
pop
scas
movs
cmps
std
iret
inc
and
je
pop
xchg
cmp
jbe
cwde
and
inc
js
mov
xchg
cmp
xor
mov
sub
inc
xor
push
add
lds
sbb
dec
xchg
(bad)
fcmovbe
push
je
sbb
push
mov
mov
pop
and
mov
idiv
inc
sub
and
xor
xchg
mov
mov
dec
and
push
and
dec
call
movs
adc
xor
or
or
cld
aaa
xchg
scas
adc
loope
sbb
test
arpl
sbb
retf
push
push
adc
addr16
rol
nop
adc
jmp
int
mov
and
or
mov
and
jle
mov
or
push
push
dec
jle
ja
cmps
sbb
call
movs
repnz
xor
adc
dec
adc
push
jecxz
movs
fs
int
je
ret
or
mov
or
gs
inc
xor
les
jecxz
pop
shl
leave
stos
imul
adc
arpl
lea
or
stc
out
cli
xchg
cmp
push
push
ds
fstp
loop
int
bound
jbe
adc
out
(bad)
sbb
xchg
fcomp
(bad)
mov
inc
mov
sbb
or
js
pop
mov
frstor
mov
imul
xor
inc
js
addr16
xlat
jmp
in
aad
arpl
movhps
pop
fisttp
add
inc
jmp
jae
shl
popa
je
jl
in
xchg
jns
hlt
inc
daa
mov
xor
jnp
(bad)
and
cmp
xchg
push
pusha
jo
xchg
dec
sub
and
inc
adc
std
loope
add
repnz
ins
js
fadd
and
xchg
fild
adc
pop
rcl
jnp
das
sar
iret
cmp
retf
(bad)
(bad)
jmp
int
cdq
push
(bad)
icebp
inc
lds
leave
xchg
sub
fdivr
mov
aaa
in
sbb
jno
mov
xor
pop
(bad)
mov
add
adc
retf
and
(bad)
cmp
ja
mov
retf
(bad)
jmp
(bad)
sbb
push
push
retf
xchg
addr16
add
out
repz
les
in
dec
scas
xchg
sbb
mov
xor
adc
(bad)
pop
out
ret
imul
xor
sub
gs
icebp
adc
or
scas
mov
push
icebp
ficomp
xchg
in
sub
inc
mov
xchg
ss
mov
outs
icebp
jbe
push
inc
out
jbe
sbb
add
dec
call
or
nop
(bad)
fadd
test
lods
cs
in
push
psubusb
mov
fcomp
ret
cmp
rol
(bad)
cmps
sbb
stos
add
mov
mov
sbb
shr
aam
movs
or
fwait
jns
repnz
(bad)
pop
inc
mov
test
adc
fsub
jg
dec
pop
es
in
(bad)
pop
add
pop
fild
dec
jmp
or
nop
xor
fs
lods
xchg
popa
into
lods
fmul
push
pop
mov
dec
lods
or
pushf
int
ja
loope
mov
not
(bad)
stos
jmp
or
fsub
sbb
mov
add
xlat
and
mov
xlat
and
dec
stc
ja
mov
cmpps
mov
stos
mov
and
fidivr
pop
bndldx
popf
xlat
push
sub
fild
jo
dec
or
fist
fidiv
xchg
test
mov
sub
retf
in
mov
dec
jns
loope
dec
cdq
mov
fidiv
fcom
adc
fcomp
push
fld
jne
mov
xlat
out
es
add
loopne
mov
or
lds
es
add
and
jb
aas
cmps
lods
adc
inc
mov
repnz
push
outs
sub
cmp
mov
mov
sti
or
es
inc
fwait
push
pop
lea
fcmovne
inc
and
pop
cli
mov
jnp
ret
shl
adc
jmp
mov
imul
cmp
shl
xor
sbb
enter
(bad)
fstp
cwde
mov
(bad)
adc
repnz
sar
mov
bound
pop
enter
add
pop
xor
ret
inc
xchg
fnstsw
jae
mov
iret
cdq
jne
pop
pop
pop
call
mov
cmps
out
leave
cs
dec
call
push
jne
sbb
(bad)
adc
cs
mov
js
mov
sbb
push
cmp
add
retf
call
jp
or
inc
jp
stos
mov
or
cmp
(bad)
in
mov
arpl
xor
jmp
pop
fs
clc
add
out
mov
or
loope
cmp
or
ret
pop
sub
fs
mov
rol
cwde
shr
adc
test
and
stos
inc
jg
jne
arpl
cmc
pop
mov
or
xchg
ror
mov
dec
int
push
xchg
leave
imul
xchg
or
xchg
(bad)
clc
xor
dec
icebp
retf
sub
xor
or
ror
addr16
repz
mov
xchg
xor
cmp
mov
leave
dec
or
and
mov
shr
je
test
enter
sahf
push
inc
mov
lods
or
imul
mov
dec
popf
cmp
pop
mov
cmovne
stos
adc
xchg
fsub
sbb
or
(bad)
inc
jge
ss
(bad)
nop
shr
mov
sti
cmps
cmp
test
leave
pop
pop
fcomp
jno
xchg
dec
lds
shl
jl
fsubrp
mov
sar
or
push
sti
imul
movs
cmp
xchg
and
adc
adc
inc
sbb
fild
and
repz
lods
rol
dec
out
cwde
scas
cmps
loop
adc
add
call
ror
cwde
test
push
push
loop
mov
mov
imul
inc
test
lods
inc
push
stos
(bad)
xchg
mov
mov
mov
xchg
inc
xor
or
adc
int
ds
out
pop
jns
sbb
pop
add
mov
push
xor
(bad)
inc
push
xor
jp
xor
and
clc
data16
sbb
(bad)
sub
sub
lods
(bad)
adc
leave
int
pop
call
mov
dec
ficom
cli
inc
mov
xchg
add
xchg
pushf
(bad)
call
call
loopne
sbb
xchg
sahf
stos
mov
jno
mov
cmp
leave
loope
(bad)
pop
xchg
out
pop
mov
out
repz
cdq
fwait
into
mov
mov
sbb
lds
pop
sahf
jmp
stos
lock
pop
mov
jmp
fs
shr
addr16
mov
pop
cld
pop
or
jne
adc
test
jge
mov
push
test
aas
les
push
xchg
and
jecxz
sub
push
les
fldcw
mov
loopne
adc
mov
mov
inc
push
or
and
or
xor
clc
pop
sbb
inc
adc
scas
sbb
shl
inc
mov
inc
mov
sahf
or
ret
adc
inc
cmp
in
ret
jmp
ins
sbb
mov
dec
sahf
fwait
std
popa
pop
xchg
xchg
and
daa
rol
shl
xchg
inc
outs
test
fxch
test
inc
loopne
cld
inc
add
iret
cmp
movs
push
(bad)
dec
sbb
lahf
dec
aas
sbb
or
iret
push
inc
retf
mov
retf
mov
lods
aas
jmp
mov
cs
cmp
push
pop
adc
lea
gs
test
adc
mov
stc
arpl
fst
aaa
es
dec
arpl
sar
and
xor
aaa
ins
sbb
dec
push
ins
pusha
mov
sub
imul
std
adc
dec
sub
mov
adc
out
das
jae
add
dec
push
shr
push
mov
or
adc
add
fdiv
xchg
fild
xchg
xchg
fcomp
push
ja
mov
aaa
out
(bad)
adc
mov
mov
call
fs
call
out
(bad)
aad
jno
(bad)
int
test
call
jl
dec
cmp
push
xchg
out
int3
adc
jbe
mov
add
sbb
push
ret
iret
and
and
mov
cmps
sub
or
lds
adc
je
loop
jne
add
xchg
xor
nop
xor
push
stc
repz
sbb
and
pusha
add
xchg
enter
mov
mov
es
lods
cs
dec
inc
aad
or
stos
iret
cmp
add
add
push
inc
imul
adc
aas
push
mov
push
aaa
cs
jg
mov
(bad)
stc
outs
imul
nop
js
popf
loop
jmp
dec
inc
mov
repz
xchg
call
xchg
(bad)
aad
stos
in
(bad)
pop
daa
fwait
(bad)
sahf
mov
and
adc
out
cld
call
mov
jmp
shl
fldcw
sub
xchg
int3
popa
stos
outs
scas
sbb
(bad)
mov
dec
(bad)
xchg
push
lock
cld
sub
pop
retf
cmp
rol
gs
rcl
or
cmp
cli
out
cmp
test
std
in
mov
call
sub
jl
lea
mov
inc
imul
scas
les
mov
aaa
retf
push
cli
dec
not
leave
repz
push
call
inc
popf
xchg
mov
mov
add
push
jg
xor
das
mov
ja
jb
pop
clc
cmp
dec
sahf
and
jae
repz
push
cmp
push
xor
dec
push
jl
frstor
movs
sbb
dec
adc
arpl
inc
or
adc
pop
jne
mov
add
leave
jecxz
cmp
sbb
fiadd
retf
inc
jle
out
test
inc
xchg
jns
jg
push
int3
ins
je
push
inc
mov
cwde
sub
jge
mov
pop
clc
js
xor
mov
jnp
or
stos
dec
mov
push
mov
lods
fcmove
push
test
fs
xchg
xchg
test
adc
adc
push
cmp
dec
and
or
out
div
(bad)
push
movs
cdq
add
cmp
push
or
jnp
cmc
sub
ret
and
imul
aas
jne
mul
inc
sbb
and
xchg
fimul
aaa
scas
mov
add
jae
jge
ror
daa
mov
pop
(bad)
dec
cmp
push
jmp
out
or
pusha
out
std
cmp
mov
cmp
dec
pop
clc
and
mov
adc
cdq
lods
dec
push
out
lea
mov
inc
(bad)
adc
jmp
cmp
sub
or
pop
mov
jmp
(bad)
mov
add
push
ret
sbb
rcl
call
shl
stc
jp
or
in
sahf
std
adc
and
xchg
ror
int3
rcr
dec
dec
jnp
jno
leave
sub
push
hlt
ins
inc
mov
jo
jo
adc
dec
jne
pop
mov
mov
adc
call
fsub
xlat
and
sti
cmp
pop
js
mov
addr16
(bad)
xor
data16
xor
pop
in
fnstcw
fstp
push
icebp
and
fs
out
in
popa
or
jecxz
jno
jecxz
cmps
(bad)
lahf
mov
cld
mov
sub
pop
dec
aad
and
fwait
ja
inc
push
aaa
mov
lods
test
adc
popf
shr
or
push
mov
sahf
sub
add
sub
call
push
ret
or
jle
fwait
jge
xchg
stc
or
or
div
or
(bad)
pop
cmp
mov
sub
dec
mov
test
xchg
jb
in
dec
or
daa
push
scas
dec
aam
xchg
mov
scas
xchg
dec
push
xor
aaa
push
sbb
xchg
cmp
jge
sti
or
mov
push
or
repz
ficom
lmsw
out
cmps
sti
pop
pop
pop
pop
lods
stos
mov
fcom
in
lods
dec
pusha
ret
out
push
shl
or
dec
jge
or
sub
(bad)
adc
daa
lea
inc
mov
mov
nop
in
lods
iret
jmp
pushf
sbb
push
mov
mov
pop
ret
push
scas
push
xor
sahf
xchg
pop
rcr
pushf
cmc
and
push
daa
popf
mov
mov
in
sahf
push
push
pop
xor
fdivr
jb
bound
sbb
lahf
cmps
cwde
hlt
mov
xchg
sbb
les
rcl
fst
mov
pop
nop
or
stos
stos
add
jne
push
sub
stos
cmc
or
and
ds
push
cmp
cmc
jge
iret
inc
mov
and
addr16
movs
loope
sbb
mov
push
cmp
mov
in
es
daa
mov
mov
cld
push
into
inc
(bad)
ffree
mov
or
jne
pop
adc
retf
in
repz
ret
xor
adc
pop
mov
lods
test
mov
cmc
icebp
adc
or
pushf
dec
sub
or
cmp
(bad)
xor
sub
inc
push
fwait
pop
cmp
mov
imul
idiv
inc
xchg
(bad)
nop
in
(bad)
hlt
mov
fldl2e
aas
mov
lea
mul
jge
dec
call
test
mov
dec
jne
dec
jp
inc
retf
test
inc
in
xchg
out
(bad)
jmp
cld
(bad)
pop
out
movs
adc
dec
xchg
ror
data16
sub
and
sbb
mov
mov
test
mov
add
jmp
inc
cmp
cmp
js
lods
shl
dec
sahf
sbb
clc
imul
mov
inc
jae
es
jmp
jge
add
push
inc
push
mov
sub
cmps
mov
push
fucomp
aas
mov
mov
shl
push
xchg
xor
int
dec
mov
jle
mov
pop
shl
adc
daa
icebp
(bad)
or
cs
imul
(bad)
loopne
outs
inc
jecxz
mov
ja
and
sub
mov
push
dec
xchg
or
into
repnz
sbb
jmp
push
ds
ja
repnz
cmp
icebp
push
jmp
ds
fwait
out
inc
pop
mov
xor
shl
or
pop
push
js
cdq
xchg
sub
sbb
mov
shr
test
mov
movs
push
xor
jg
sub
adc
stos
jbe
xor
nop
jno
imul
pop
popa
cdq
ret
clc
pop
jge
cmps
jne
inc
out
retf
push
ret
mov
inc
pop
js
inc
call
pop
mov
mov
stc
int
fist
jg
and
mov
popa
int
push
sbb
addr16
das
icebp
in
aam
retf
dec
cdq
xor
sub
test
mov
jmp
punpckhdq
mov
into
es
sub
sbb
sbb
xchg
ja
pushf
push
lods
es
push
sar
adc
fidiv
pusha
cs
(bad)
mov
aas
mov
sahf
jo
adc
mov
xor
out
in
jne
call
push
mov
inc
sbb
retf
dec
cmp
popa
or
clc
add
xchg
inc
aaa
mov
xchg
repz
dec
inc
and
shr
inc
cmps
sahf
add
dec
pop
pop
test
and
es
test
push
movs
cld
lock
and
xlat
int
sub
int3
pop
ins
scas
test
inc
sub
shl
scas
ret
sub
cmp
or
(bad)
loopne
fadd
pop
nop
je
mov
dec
push
int
retf
jp
push
inc
add
dec
popa
adc
or
adc
pushf
mov
dec
push
mov
add
mov
aad
pop
mov
mov
jle
ins
cmp
dec
dec
xlat
sar
ins
dec
dec
div
xor
lds
imul
ror
push
jno
cmps
pop
mov
loopne
push
ds
fbld
stc
cmp
or
ret
and
mov
outs
and
(bad)
gs
mov
sbb
jmp
neg
leave
xchg
jle
push
jg
ds
rcl
xchg
mov
rol
sub
and
mov
sub
(bad)
(bad)
jge
inc
rol
int
test
xor
cmps
leave
js
jne
stc
ins
out
add
loope
mov
mov
inc
sub
push
sub
fs
ins
mov
sub
pop
jo
pop
(bad)
test
add
or
das
int
stos
sbb
mov
jmp
ror
fiadd
mov
pop
pop
sbb
mov
pop
aad
add
sbb
sbb
lea
lahf
fs
aaa
jae
in
lock
adc
inc
fmul
jg
daa
je
call
sub
inc
fnstsw
rol
lock
dec
or
stos
push
cs
adc
in
leave
retf
inc
sbb
or
sub
ja
inc
(bad)
not
outs
std
inc
xor
js
imul
xor
mov
jbe
push
or
mov
mov
xor
movs
mov
sub
dec
rcl
inc
mov
sub
push
cmp
mov
in
adc
jno
xor
int3
fadd
cmp
pop
fdivr
cmp
jmp
ins
(bad)
rcl
push
lock
sub
in
scas
dec
mov
or
sub
push
fwait
mov
inc
jmp
adc
icebp
xchg
dec
test
out
xlat
push
sub
xchg
xchg
call
xlat
or
jmp
mov
push
dec
movs
pop
xchg
pop
dec
push
push
push
sub
movs
ret
test
lea
mov
nop
fdivr
lds
pushf
pop
popf
stos
outs
jo
mov
lea
fdivrp
inc
cwde
fcmovu
adc
pop
dec
movs
cwde
mov
sub
jge
inc
scas
add
test
pop
gs
cdq
out
jnp
jmp
sub
xor
mov
push
dec
ror
retf
lea
dec
fs
dec
xchg
shr
sbb
cli
mov
pop
cmps
inc
sbb
retf
push
repnz
fild
les
(bad)
sbb
mov
pop
push
pop
ja
stc
ja
leave
xor
inc
fmul
cmc
popf
iret
data16
(bad)
cwde
outs
je
mov
push
mov
fistp
xchg
lods
das
(bad)
fadd
icebp
je
imul
cmc
cwde
test
xchg
cli
add
lock
clc
and
sbb
mov
in
xor
inc
cmp
adc
pop
aam
sub
pop
mov
push
mov
or
(bad)
adc
inc
push
pop
xor
jg
jne
xchg
and
cmc
jl
repz
mov
and
arpl
inc
and
sub
popf
das
fwait
cmp
xchg
fstp
or
inc
cdq
pushf
loope
sahf
sbb
(bad)
pop
cmp
sub
mov
sbb
mov
cmp
in
jae
cwde
jge
nop
push
mov
or
mov
mov
mov
out
mov
mov
fild
add
sbb
fisttp
(bad)
sbb
jl
adc
loope
cld
pop
xor
adc
iret
push
fidiv
dec
clc
sbb
mov
pusha
inc
xor
(bad)
rol
pop
lods
(bad)
fs
pushf
sbb
xchg
cdq
xor
jg
in
mov
mov
xchg
ds
push
mov
mov
aas
xlat
push
or
(bad)
pop
(bad)
arpl
aaa
aaa
push
idiv
sub
(bad)
mov
fdivr
push
fwait
rcr
mov
and
sbb
into
sub
pop
jo
cmp
leave
and
and
push
adc
mov
jno
add
shl
out
mov
bound
adc
test
xchg
imul
add
adc
cmp
lock
sahf
xor
and
sbb
sbb
fst
jae
inc
test
loop
retf
mov
fstp
sbb
ds
iret
out
xchg
mov
xor
jp
in
jb
mov
test
mov
imul
inc
dec
pop
js
xchg
add
retf
xchg
mov
adc
ret
int
popa
dec
pop
popa
scas
sub
mov
ins
xchg
(bad)
repnz
ret
push
adc
xor
or
das
jp
or
dec
cmp
add
scas
cmp
xchg
adc
mov
inc
movs
mov
test
fistp
out
popf
stc
push
mov
cli
add
mov
xor
das
xor
xchg
mov
pop
lds
inc
test
dec
or
mov
xor
gs
lea
add
pop
cld
nop
movs
es
mov
lods
retf
ins
xchg
shl
in
xchg
pop
sub
adc
mov
fisub
xor
sub
jge
jnp
sti
movs
fcom
(bad)
out
js
das
mov
sub
xchg
dec
cmp
xor
out
(bad)
es
inc
mov
xchg
sahf
daa
pop
jmp
out
mov
test
or
or
sub
addr16
pushf
pop
and
ret
in
lea
je
xchg
xor
sub
mov
mov
and
sbb
inc
dec
dec
gs
enter
pusha
or
ins
fistp
adc
adc
enter
ret
jne
pop
add
ins
movs
adc
adc
test
adc
mov
xchg
cld
int
outs
jb
add
sbb
mov
fild
mov
pop
nop
push
cld
or
jo
add
inc
outs
push
loopne
mov
jo
adc
cmps
mov
scas
in
sar
jmp
xchg
stc
mov
repnz
sub
inc
add
rcr
ds
ja
test
xor
cmp
test
mov
add
movs
clc
mov
add
jbe
mov
pop
outs
push
add
add
sbb
push
xor
xchg
or
je
push
fcom
repz
imul
or
cmp
mov
sub
imul
sbb
aam
inc
cmps
mov
in
jmp
arpl
mov
loope
cld
lock
nop
(bad)
inc
jnp
xchg
test
leave
pop
je
pop
pop
nop
jnp
into
scas
mov
stos
jno
jne
sbb
iret
cdq
shr
fst
je
neg
fwait
scas
jmp
clc
push
xor
arpl
mov
push
xor
adc
xor
sbb
adc
jl
scas
cmp
inc
dec
mov
test
add
xchg
pushf
popf
sbb
adc
pop
cs
pop
or
pop
in
mov
inc
div
lds
mov
mov
jb
pop
sti
pop
mov
sbb
jl
lea
jmp
popa
cmc
lock
lahf
fld
jae
sub
int
clc
movs
or
add
out
inc
movs
or
and
sub
jb
scas
xor
pop
xchg
jo
push
sar
sahf
xor
jbe
imul
and
loopne
call
jns
add
test
pop
stc
iret
xchg
mov
push
std
scas
shl
jp
das
push
xchg
dec
cmp
jne
movs
test
adc
sti
xor
and
inc
cmp
jl
cld
push
ss
push
xchg
inc
enter
sub
mov
adc
add
push
into
in
cmp
pusha
sbb
jae
add
jp
and
mov
sub
mov
fistp
in
inc
sahf
push
fsubr
xchg
push
add
mov
mov
es
sbb
pop
lea
mov
xchg
pop
enter
frstor
paddd
xchg
sbb
shr
xlat
cld
arpl
xchg
inc
jge
mov
inc
rcr
add
sbb
jb
aam
rol
xchg
hlt
shl
inc
xor
push
cmc
xchg
repnz
xchg
arpl
rcl
in
stos
jl
jb
adc
jle
aas
leave
sbb
retf
in
pop
mov
shr
dec
aaa
aaa
scas
xor
addr16
or
addr16
mov
scas
push
xchg
pop
pop
sbb
aas
add
push
int3
das
popf
push
mov
inc
out
cmps
inc
js
jecxz
mov
nop
or
inc
mov
icebp
fisttp
(bad)
(bad)
cmc
cmc
fadd
cli
(bad)
stos
movs
pop
(bad)
xchg
lock
dec
jp
aas
fisttp
int3
ja
(bad)
fnstenv
mov
in
loope
and
repnz
jecxz
in
mov
das
out
cmp
cwde
in
nop
ret
ror
xor
out
inc
fild
mov
sbb
nop
pop
scas
popa
sub
lods
cmc
or
add
shr
adc
(bad)
lds
dec
and
sbb
push
or
and
out
and
jp
mov
adc
out
out
loop
mov
aaa
js
fistp
repnz
arpl
push
ja
ficom
xchg
mov
sti
adc
je
or
imul
or
add
in
fisttp
loop
mov
mov
(bad)
les
and
movs
push
or
dec
mov
mov
push
mov
mov
or
out
pop
add
(bad)
sahf
add
in
ja
popa
xchg
push
pushf
sub
mov
sub
mov
push
pop
pop
popa
popf
gs
enter
pcmpgtd
fldcw
pop
inc
pusha
rol
(bad)
sub
sub
push
cs
adc
fs
mov
pop
pop
mov
sub
xchg
fst
outs
jge
imul
dec
sbb
repnz
out
mov
loop
out
jle
fist
popa
pop
push
mov
(bad)
adc
popf
add
fild
fst
out
gs
cdq
cwde
mov
loope
out
cmp
imul
fild
jne
sub
sahf
loope
cmps
lahf
jmp
dec
mov
repz
pop
pop
test
in
jmp
inc
fcmovnu
push
mov
sti
mov
push
xchg
add
outs
dec
scas
js
sti
jg
inc
stc
sbb
neg
pop
es
adc
js
push
ins
pop
loope
push
fwait
add
or
pop
and
ja
pusha
sub
cli
mov
loope
cdq
cwde
mov
(bad)
cld
add
cmps
stos
sub
addr16
pop
ins
push
retf
xchg
mov
inc
add
ficomp
popa
ror
lock
outs
ds
hlt
cmps
jns
jnp
(bad)
in
fistp
jl
(bad)
in
mov
xlat
popf
xchg
pop
jb
and
dec
xchg
ds
or
enter
cmp
sub
out
fisubr
mov
out
lods
sbb
mov
outs
sbb
lods
dec
xor
mov
jb
fisubr
pop
icebp
add
(bad)
ror
cmp
lods
iret
xor
add
sar
inc
mov
mov
(bad)
lahf
pop
push
push
jle
mov
xchg
and
xchg
fnstsw
pop
jp
inc
loop
cmp
adc
(bad)
retf
aas
fld
xchg
adc
or
fwait
xchg
mov
sbb
mov
out
popa
std
ins
inc
fdivp
inc
(bad)
push
sbb
loopne
dec
sbb
mov
dec
addr16
repnz
jo
jno
int
sub
xchg
int3
jns
arpl
test
adc
mov
test
cmc
mov
push
or
jle
dec
outs
inc
jp
mov
mov
mov
out
shl
xor
out
sbb
fist
cwde
pop
add
jmp
fist
sub
jmp
in
dec
shl
jecxz
arpl
adc
adc
push
jne
mov
cwde
rcl
and
jle
ret
adc
(bad)
pop
jg
stc
mov
push
adc
xchg
stc
jne
inc
xor
repz
xor
pop
jns
(bad)
in
dec
adc
inc
aas
lea
pop
jae
sub
inc
lock
xchg
cmp
out
push
push
dec
mov
dec
add
inc
mov
sub
mov
cmp
ficomp
push
fstp
cdq
add
in
sub
mov
or
test
xchg
inc
outs
ds
ja
imul
ss
test
dec
gs
cmps
pop
nop
aas
imul
xchg
(bad)
pop
in
mov
pusha
or
cmp
imul
lods
not
in
fild
push
adc
ins
pop
xchg
scas
ja
js
mov
push
aas
jb
rcl
cmp
imul
mov
inc
pop
dec
or
jmp
push
loopne
movs
idiv
sahf
movs
pusha
mov
stos
lods
lods
icebp
ja
retf
bound
sub
stos
call
cmp
not
add
xchg
test
dec
dec
push
jae
mov
retf
lea
pop
jae
fs
mov
shl
fistp
into
hlt
push
test
adc
addr16
mov
fisttp
movs
jecxz
fisttp
cmp
adc
or
ss
xchg
cld
pop
ds
pusha
cli
scas
cmp
fistp
jecxz
popf
pop
ret
daa
(bad)
lahf
cmp
pop
fisub
pop
shl
jmp
arpl
gs
and
pop
fidiv
out
or
lea
and
fldcw
sub
xchg
add
add
and
fcomp
enter
xchg
aad
test
push
out
sub
es
aad
lods
push
inc
mov
inc
out
cmp
pop
lds
mov
js
jo
fistp
cmc
cmp
cmp
pop
mov
inc
mov
ss
push
jecxz
jecxz
sub
(bad)
mov
aam
mov
or
pop
leave
clc
mov
mov
daa
mov
and
ins
ret
cmp
xor
inc
sub
push
mov
jge
mov
int3
mov
loope
pop
ds
lock
sti
push
pop
(bad)
gs
stos
inc
sti
mov
fisttp
pop
dec
ss
test
sar
mov
dec
in
repnz
test
jg
mov
pop
push
scas
and
mov
mov
mov
enter
xchg
lahf
js
mov
pop
xor
fst
xor
(bad)
test
in
movs
ret
jmp
xor
shl
mov
into
pop
inc
pop
xor
(bad)
mov
and
ins
jno
(bad)
out
call
and
repz
int
jmp
inc
push
imul
std
mov
cmp
pushf
pop
push
cdq
cli
shr
push
mov
pushf
mov
or
jl
cmp
adc
shr
rol
xor
mov
mov
sbb
sbb
cdq
stos
push
dec
fwait
dec
xchg
retf
or
sub
sbb
inc
sub
jmp
hlt
xor
fcmovbe
cmps
xor
daa
stos
mov
mov
cs
push
and
movs
out
push
and
rol
mov
loopne
sbb
jae
popa
das
(bad)
inc
push
jmp
push
or
mov
mov
test
adc
cwde
dec
pop
xor
push
ja
cmp
lea
adc
and
fsubr
bound
xor
push
(bad)
mov
jecxz
pop
ficomp
lea
inc
idiv
inc
inc
dec
pusha
jl
inc
inc
fld
jl
fisttp
add
imul
mov
mov
xchg
xchg
push
rol
pop
xchg
jmp
int3
mov
mov
div
shl
push
cmp
add
mov
sub
cmp
shr
jmp
pop
lahf
adc
mov
push
or
cmps
je
lock
aas
pop
and
jb
add
es
cdq
pop
mov
xor
pop
sbb
cmc
es
xchg
loopne
add
call
dec
and
sar
dec
jae
pop
test
or
scas
cmp
lods
loopne
clc
(bad)
imul
xor
sbb
movs
push
add
repz
scas
nop
movs
cmp
or
pop
les
mov
mov
test
sbb
addr16
mov
push
or
xlat
into
mov
aam
stos
lds
xor
add
pushf
ror
bound
add
ins
mov
mov
inc
jnp
loope
or
sbb
xor
dec
inc
fwait
xor
and
out
(bad)
(bad)
jg
push
push
fisubr
(bad)
ficomp
out
fbstp
jmp
push
test
push
pop
mov
pop
add
sahf
ins
shl
sub
sbb
jnp
addr16
test
test
pop
inc
pop
push
or
jae
cmp
cmp
test
in
dec
or
aas
xor
lods
mov
pop
add
dec
jmp
neg
out
sub
iret
jo
add
xchg
stc
call
shl
retf
or
pop
(bad)
loopne
popf
clc
dec
in
push
test
pop
mov
adc
jp
ja
push
(bad)
or
repnz
sti
push
fadd
or
jns
stos
mov
pop
dec
sti
int3
das
out
lahf
xor
repz
shr
ins
retf
jg
dec
mov
out
mov
sub
xchg
or
pop
xor
sub
in
inc
shr
shr
pop
mov
pop
add
add
mov
inc
mov
jne
adc
popa
cmp
fist
cwde
adc
and
push
add
fwait
inc
wbinvd
push
retf
(bad)
xor
shr
pusha
popf
add
jbe
push
jb
mov
into
out
pop
bound
sbb
adc
jge
(bad)
lock
sub
(bad)
pop
call
inc
retf
rcr
sbb
or
cmp
movs
lock
cmp
sbb
mov
cmp
jmp
shl
sbb
mov
jns
inc
mov
test
leave
stos
adc
test
das
pop
in
xchg
and
idiv
sbb
mov
ja
fstp
inc
inc
lds
aam
jbe
sub
push
cmp
in
into
out
fild
pop
adc
mov
jne
mov
or
or
mov
cmp
mov
popa
push
outs
and
xor
inc
inc
add
inc
les
xchg
ins
test
iret
(bad)
sub
push
cmp
sbb
or
mov
jg
push
int3
dec
mov
retf
fwait
shl
ret
add
cvtps2pd
push
pop
outs
rcr
lods
loopne
int
das
xchg
inc
out
cmp
jmp
jecxz
ins
cmp
cmp
mov
sbb
mov
sub
xor
scas
in
adc
xor
push
imul
push
and
lds
xor
int
nop
addr16
daa
mov
cmps
mov
cmc
pusha
dec
mov
movs
cmp
test
(bad)
push
sbb
(bad)
dec
int3
ins
xor
fisttp
xor
add
je
imul
pop
cld
shl
or
dec
cmp
dec
adc
in
sub
xchg
test
(bad)
rcr
out
xchg
cdq
mov
sbb
ror
add
cmp
ins
push
cwde
dec
inc
popf
and
sbb
mov
mov
out
or
sahf
outs
inc
(bad)
dec
rol
push
mov
or
adc
shr
sbb
mov
push
rol
adc
pop
jge
jbe
nop
out
pop
nop
sbb
pop
shl
adc
xor
movs
push
call
or
mov
xor
stc
imul
(bad)
pop
in
xchg
dec
mov
test
aaa
das
adc
cmp
lea
mov
push
in
iret
inc
(bad)
shl
mov
les
pop
shl
pop
mov
aas
push
jecxz
mov
adc
retf
ins
push
adc
in
push
test
imul
(bad)
and
mov
push
cmp
cs
imul
std
add
sub
cmc
mov
sbb
jb
into
mov
jp
xchg
loopne
ja
fiadd
pop
mov
imul
mov
je
dec
aaa
mov
popf
mov
push
add
sbb
cmp
mov
xlat
(bad)
movs
mov
test
pop
cmp
sbb
imul
int3
es
hlt
pop
imul
and
loop
ja
icebp
arpl
jmp
cmp
push
std
and
xor
repz
pop
out
xor
mul
add
cmps
or
jmp
xchg
fbstp
(bad)
jecxz
xchg
popf
call
movs
stc
pop
test
dec
pop
clc
mov
in
lahf
scas
xchg
ss
mov
in
lods
std
out
mov
add
in
ds
sbb
out
fisubr
inc
add
in
(bad)
out
inc
retf
(bad)
loopne
cdq
test
jg
jmp
push
push
pop
ins
mov
cmp
fild
hlt
pop
ret
in
arpl
sub
scas
cmova
or
push
xchg
adc
imul
les
inc
retf
fisubr
out
adc
fwait
add
inc
mov
aad
adc
xor
mov
outs
imul
mov
test
rcl
adc
icebp
pop
cmp
xchg
jmp
cld
(bad)
or
aas
mov
inc
cmp
sub
xchg
xor
mov
enter
and
mov
pop
xchg
sub
repnz
xlat
outs
sub
sbb
cli
xchg
mov
int
fidivr
into
bnd
mul
push
movs
pop
out
pop
sub
(bad)
inc
jecxz
xlat
cli
ror
(bad)
cld
push
jne
popa
std
das
les
and
(bad)
jmp
cs
fs
stc
inc
out
mov
pop
mov
add
inc
popa
shl
push
imul
mov
sub
imul
je
iret
test
cdq
xor
mov
add
push
movs
movs
xchg
pop
scas
fmul
mov
cli
or
call
pop
sahf
cmp
call
sbb
mov
gs
sar
mov
dec
sub
stc
adc
jp
push
js
or
xor
imul
jecxz
or
dec
div
stc
jmp
(bad)
pop
add
push
out
shl
div
pop
add
adc
ret
test
sub
mov
pop
sar
adc
in
push
pop
(bad)
lea
cmp
and
jge
in
inc
loope
ret
lock
ret
arpl
jno
mov
ja
pop
stc
mov
xchg
mov
fistp
cmp
ret
cmp
loopne
fwait
outs
fadd
xchg
mov
mov
stos
push
mov
fwait
fwait
mov
cmp
js
and
pop
rcl
(bad)
je
arpl
and
cs
fidiv
hlt
shl
mov
add
xchg
xchg
fiadd
mov
jno
jne
ror
xchg
mov
jb
mul
adc
mov
inc
lahf
pop
xlat
test
xor
add
xor
push
jl
fistp
inc
cmp
mov
jae
pop
jae
jne
mov
mov
push
or
dec
fiadd
inc
int3
out
sbb
je
inc
mov
pusha
inc
jl
mov
inc
mov
mov
or
or
cs
test
in
jmp
(bad)
pop
push
(bad)
sahf
xchg
daa
sbb
fld
stos
js
xchg
ins
stos
adc
dec
inc
mov
and
stos
adc
inc
pop
or
cmp
sub
stos
mov
outs
ins
or
cmp
ja
ins
inc
sub
adc
lods
cmp
dec
or
hlt
div
mov
jo
sbb
cmp
xchg
daa
mov
pop
dec
sbb
sbb
push
sahf
in
sbb
ins
shl
cdq
sbb
enter
ror
mov
out
push
fcomp
rcr
jne
or
jge
in
js
cwde
sbb
cmp
fnstcw
repnz
out
push
sub
sbb
mov
stos
dec
fwait
and
and
sbb
mov
mov
xchg
mov
mov
gs
dec
xlat
fstp
mov
loopne
test
ja
call
push
jno
inc
repnz
repnz
cmp
mov
add
stos
dec
pop
je
push
adc
(bad)
mov
test
es
cmps
je
mov
aas
std
xlat
xor
mov
out
(bad)
mov
dec
jnp
ror
mov
inc
pop
ret
bound
pop
and
fst
imul
jl
imul
or
mov
xchg
add
pop
cmp
add
jns
sbb
loope
jb
dec
mov
sub
jge
iret
pop
cmp
mov
out
add
mov
xchg
and
shl
stos
pop
fldcw
xor
add
arpl
jno
mov
xor
cmps
dec
popa
test
dec
ins
mov
leave
mov
jno
dec
icebp
cmp
out
push
push
dec
pusha
(bad)
mov
or
rcr
jne
add
sub
xor
mov
xchg
(bad)
fcomp
jp
and
in
mul
and
push
mov
nop
cmp
mov
jo
and
mov
xlat
ret
or
pusha
aam
xchg
out
test
sub
push
call
add
dec
or
dec
pop
mov
cmp
mov
out
imul
test
dec
inc
test
ficom
sbb
out
cld
sbb
jecxz
jp
pop
push
arpl
sbb
push
mov
pop
movs
into
aaa
fucomp
sub
data16
push
loopne
or
xchg
aaa
(bad)
cvtdq2ps
stos
adc
pop
out
mov
test
test
inc
in
add
jo
ja
iret
jecxz
mov
cli
in
loope
jae
fst
mov
or
sbb
mul
or
shr
inc
push
pop
hlt
sbb
repnz
sub
ret
out
cmp
dec
jge
test
xchg
xor
daa
mov
push
dec
mov
(bad)
xchg
fwait
js
cld
movs
mov
loope
sub
inc
pop
int
inc
repnz
or
inc
in
cli
movs
fsub
or
dec
push
cld
popf
or
stc
xor
into
fstp
and
into
pop
(bad)
adc
pop
out
cmp
and
aad
xchg
nop
mov
jmp
lds
movs
pop
stc
test
out
hlt
add
pop
dec
push
inc
xor
fs
cdq
adc
cs
mov
lds
inc
mul
cmp
test
outs
cmps
xchg
cmps
jo
sbb
dec
dec
push
or
sub
or
outs
xor
stc
xor
xchg
int
dec
adc
adc
loop
call
mov
push
or
addr16
jno
(bad)
push
cwde
jl
push
cmp
jge
or
clc
xchg
pop
lock
mov
jp
mov
(bad)
addr16
pop
cwde
fisttp
leave
dec
in
test
fmul
pop
jl
lods
dec
pop
push
inc
mov
and
aad
mov
xor
jbe
icebp
aad
or
or
pop
retf
sahf
sub
push
pop
int3
push
scas
es
add
hlt
inc
scas
enter
pop
test
pop
int
mov
ds
call
jle
lahf
mov
pop
or
bts
outs
cdq
rol
mov
es
lahf
jmp
daa
fbstp
mov
out
cli
retf
hlt
scas
add
push
adc
fucomi
cli
cmp
ror
(bad)
out
inc
cmp
sahf
aaa
pop
pop
add
fisubr
into
jp
fisttp
xchg
repnz
xor
inc
sub
xchg
sub
cmp
pop
cmp
(bad)
lock
jmp
dec
push
sub
jbe
add
out
leave
fsub
rol
int
jp
sbb
sbb
out
add
inc
xor
outs
rol
inc
jae
xchg
jne
out
sub
sub
xchg
mul
je
sub
(bad)
loop
iret
out
or
int3
pop
mov
push
ror
cmp
test
xor
and
repnz
cmc
js
jno
stos
cmps
mov
inc
xor
test
lds
xlat
fs
(bad)
iret
add
mov
imul
popf
mov
ror
mov
mov
movs
push
popf
mov
loop
cld
push
(bad)
cld
test
mov
out
stc
jge
addr16
mov
nop
or
mov
addr16
test
in
mul
mov
loopne
push
add
clc
ds
popf
das
sub
test
or
mov
(bad)
fmul
add
fidiv
dec
push
imul
sub
addr16
add
sti
test
mov
push
fucomip
fwait
sti
call
mov
xor
(bad)
jb
es
jg
pop
sbb
in
push
push
push
lods
dec
into
or
dec
push
rcl
movs
mov
jne
es
mov
out
cmc
call
cmp
push
inc
pop
mov
sar
mov
leave
xchg
push
sbb
add
aad
popa
sbb
(bad)
xchg
pop
dec
xor
cld
dec
dec
outs
pop
cmp
js
into
stc
sbb
(bad)
sbb
jle
dec
ret
jne
int3
out
test
jecxz
xor
pop
arpl
fstp
cwde
cmp
cmp
repnz
retf
xor
retf
icebp
mov
jecxz
je
push
(bad)
or
stos
fisttp
fs
test
dec
arpl
in
dec
js
mov
pop
dec
imul
dec
outs
or
movs
scas
mov
icebp
or
and
dec
loope
mov
imul
fld
movs
retf
jmp
test
int
lock
dec
movs
jecxz
or
loop
mov
cmp
test
pop
or
lahf
xor
mov
(bad)
cld
xor
xchg
fs
and
cli
ret
or
jecxz
repnz
and
sti
fimul
adc
aam
out
cwde
sbb
pop
cmp
cmps
mov
ins
out
scas
cmp
jle
pop
loop
mov
xchg
rcr
mov
mov
add
data16
call
mov
bound
or
or
or
and
xor
cmp
sbb
gs
cmp
xchg
mov
inc
call
ret
or
ficomp
pop
inc
in
dec
dec
add
mov
or
mov
cmc
mov
xchg
retf
js
sahf
das
clc
cld
stos
dec
sbb
push
dec
inc
add
mov
sahf
ror
das
cld
pop
xor
out
int3
ror
xchg
stos
lods
mov
and
imul
scas
fidivr
inc
or
iret
push
xor
or
xor
mov
inc
cdq
fistp
mov
push
into
ret
sahf
lds
add
shl
rol
xchg
loopne
add
or
sub
jno
(bad)
test
add
cmp
call
in
dec
bound
jbe
repnz
fwait
sub
test
add
mov
xchg
clc
aas
pop
adc
pop
dec
shl
ret
in
sbb
add
int3
rcl
imul
pop
dec
cmps
push
stos
cwde
inc
jo
mov
jge
push
push
inc
adc
xor
cmc
sahf
lahf
cmps
retf
out
sbb
and
jg
push
xchg
movs
popa
jl
(bad)
inc
sbb
in
push
(bad)
aaa
adc
sbb
aam
jmp
out
test
jb
xchg
and
mov
cmp
and
pop
push
imul
mov
bound
cmp
xor
gs
call
mov
add
jmp
in
pop
test
mov
enter
add
stos
xor
test
or
retf
inc
mov
retf
jmp
and
ret
call
cdq
sti
push
sub
cmp
daa
scas
mov
cmps
fcmovb
mov
div
mov
xor
aam
cs
ret
addr16
cmp
adc
lahf
sub
clc
and
mov
outs
cs
pop
push
mov
sub
add
xor
mov
(bad)
icebp
pop
push
xchg
fwait
dec
sub
loope
clc
int3
mov
nop
mov
rol
lds
nop
mov
imul
push
sbb
jle
fldenv
pusha
shl
icebp
or
adc
pop
mov
addr16
xchg
xchg
(bad)
inc
inc
mov
lea
dec
sbb
cmp
sbb
mov
dec
sub
stos
push
shr
jecxz
call
cmp
adc
mov
xlat
aas
mov
or
gs
mov
mov
mov
mov
dec
add
fmul
mov
and
hlt
sbb
imul
popf
pop
mov
ins
jb
inc
std
into
xchg
gs
popf
das
aas
fbstp
adc
(bad)
and
movs
out
mov
push
pop
inc
push
ror
inc
pop
ret
imul
mov
add
(bad)
rcr
dec
sbb
push
test
(bad)
jnp
or
ret
and
out
repz
sub
cdq
mov
sub
movs
pushf
adc
retf
cld
fwait
ret
mov
cdq
or
pop
imul
lock
jbe
test
jns
imul
mov
add
clc
aaa
pushf
xor
jns
mov
jbe
push
aam
pop
jl
out
ins
inc
ja
cs
mov
mov
jo
mov
pop
push
inc
mov
imul
lahf
inc
iret
xlat
test
mov
das
pop
cmp
mov
inc
pop
or
inc
mov
cmp
pop
in
data16
fcomp
rcl
inc
sub
inc
rcr
add
ror
scas
lods
les
rcl
inc
add
sar
add
in
jns
sbb
arpl
pop
aaa
cmp
cmp
pop
loop
sub
mov
cmps
(bad)
xchg
leave
repz
sub
ins
adc
sub
add
popa
test
test
and
(bad)
clc
jecxz
call
adc
xchg
and
mov
sbb
sub
jo
and
mov
push
add
sbb
int3
mov
das
fwait
leave
push
mov
jns
fs
fisubr
cli
(bad)
jmp
gs
scas
mov
cmp
push
shl
pop
sub
xchg
push
push
fldenv
push
inc
fwait
and
je
add
sub
push
push
mov
das
cmp
out
fldcw
ja
jp
sbb
and
jmp
sbb
mov
pop
outs
push
mov
sbb
mov
and
push
jmp
nop
movs
mov
push
rcl
mov
xchg
push
std
add
ja
aad
push
pop
cs
pop
sub
sbb
adc
pop
ins
lahf
jg
lea
and
repz
xor
nop
mov
mov
in
mov
and
pop
cdq
aam
sar
sbb
dec
jno
push
jo
ins
mov
mov
adc
cmp
aad
xor
cmps
lahf
mov
mov
daa
push
push
mov
mov
sub
jmp
pop
fidiv
xchg
cmps
xchg
dec
push
ins
or
add
popa
xor
fs
inc
jns
imul
jmp
mov
push
cwde
xchg
fmul
rep
cmp
popf
bound
in
shl
into
stos
sar
popa
sbb
lods
push
repnz
push
adc
out
lods
in
aam
ficomp
cmp
sub
and
lahf
jg
push
popa
sub
dec
dec
jle
add
into
mov
retf
push
sbb
xchg
and
fwait
add
loopne
rcl
xchg
mov
lds
cld
dec
adc
call
int
imul
mov
xchg
adc
or
dec
lods
inc
pushf
data16
xor
mov
test
imul
into
test
inc
xchg
adc
mov
pop
(bad)
or
and
mov
mov
xor
ja
ins
ins
ror
fcom
jae
inc
xor
mov
icebp
les
out
inc
push
adc
loope
cmc
jmp
movs
dec
mov
inc
jp
leave
imul
mov
or
add
inc
sbb
(bad)
pop
push
mov
mov
ret
or
imul
sbb
icebp
add
(bad)
pop
mov
pushf
lea
add
push
movs
retf
mov
push
scas
ss
fs
mov
mov
mov
cmp
je
ja
pop
inc
imul
mov
gs
pop
sbb
aad
leave
sbb
xchg
push
sbb
add
icebp
bound
repz
in
push
xor
sbb
sub
test
add
test
pop
lock
adc
or
jno
mov
push
mov
lea
hlt
mov
pusha
ins
pop
mov
neg
cs
movs
imul
jns
rcr
jge
push
arpl
ror
mov
out
out
sub
push
pop
inc
dec
stc
les
jne
pop
jnp
and
loope
push
xor
or
pop
cwde
(bad)
out
je
or
out
cli
movs
ficomp
stos
inc
mul
movs
or
shl
push
jmp
lea
jo
out
sbb
dec
inc
rcr
lahf
sahf
push
std
xchg
cmp
pop
dec
mov
stc
and
and
or
cmp
dec
jg
adc
xor
and
sbb
add
and
inc
and
(bad)
out
mov
pop
cmp
ja
xchg
icebp
retf
test
cmp
cmp
retf
mov
sub
xchg
xchg
fdiv
and
mov
push
adc
cmp
xor
cmp
pop
arpl
mov
xchg
pop
(bad)
pop
call
inc
mov
in
inc
retf
sub
stos
cmp
test
aam
(bad)
mov
cdq
cld
xor
push
push
or
mov
ret
out
fidivr
jne
push
xor
mov
popf
jecxz
mov
xchg
pop
jmp
in
xchg
mov
movs
add
(bad)
pop
es
sub
aam
int
inc
out
mov
call
push
ficomp
push
aam
out
fiadd
call
adc
push
rol
in
sub
arpl
inc
(bad)
outs
pop
sub
je
pop
and
jle
mov
stos
movs
sub
jle
lahf
les
add
jae
cmps
cmp
pusha
pusha
mov
jb
ja
icebp
jg
int3
mul
lock
pop
inc
ins
add
push
xchg
jg
jns
jmp
pop
xor
xor
rcr
fbstp
adc
jecxz
clc
or
fimul
stos
cmp
sti
movs
(bad)
jp
or
dec
xchg
retf
mov
mov
ds
mov
mov
mov
clc
out
jmp
int
pusha
in
outs
dec
dec
imul
arpl
pop
xchg
lds
push
int3
call
sbb
xor
xor
adc
push
inc
push
mov
mov
inc
clc
mov
sbb
out
sbb
xchg
popf
pop
pop
add
cmp
dec
push
mov
cmc
sbb
cmps
push
test
inc
leave
ret
(bad)
cmc
and
pop
sub
jp
pop
inc
int
lods
jne
push
xchg
sbb
xor
popf
inc
xchg
jbe
sub
test
imul
repnz
lahf
outs
xchg
bsr
mov
call
sub
mov
adc
cmc
dec
bound
jne
mov
aad
aaa
outs
das
inc
xchg
not
daa
cmp
neg
in
xor
bound
fld
rol
rcl
xlat
or
outs
xor
or
stos
pop
inc
test
pusha
or
cs
sbb
cld
mov
jae
div
in
jmp
cmp
pop
cmp
into
lods
dec
adc
sbb
cmp
and
repnz
shl
test
fld
jno
push
arpl
xchg
mov
inc
ins
loopne
lea
js
mov
mov
movs
inc
push
es
arpl
je
mov
fnstcw
loopne
lds
mov
movs
mov
pop
mov
in
add
daa
inc
call
adc
popa
sbb
mov
loopne
lea
repnz
cmp
icebp
xchg
(bad)
add
cwde
inc
movs
mov
mov
fidiv
jg
rol
scas
jno
mov
sbb
ja
mov
mov
fisub
lock
sub
loopne
test
jmp
arpl
or
int
in
cmp
out
pusha
out
nop
loopne
dec
jb
das
lock
shl
sbb
fnsave
lds
push
xchg
retf
(bad)
pop
dec
xor
adc
fisub
mov
leave
xchg
cli
and
xchg
rol
je
in
sbb
mov
push
inc
pop
and
mov
pop
inc
clc
inc
mov
or
xor
jl
and
div
jmp
mov
ins
ins
fistp
dec
daa
and
stc
not
jne
pop
jno
pop
cmp
inc
mov
idiv
daa
fstp
xchg
mov
pop
stc
adc
sbb
sbb
sbb
sti
out
pop
inc
(bad)
das
rcr
sub
add
cld
pop
inc
mov
jmp
pushf
aaa
and
xchg
cmp
(bad)
mov
mov
sbb
sahf
add
aas
test
cwde
cmps
sar
loopne
dec
fsubr
in
fwait
out
scas
adc
fisttp
or
outs
mov
mov
clc
mov
xchg
leave
adc
data16
adc
movs
fcomp
js
xor
sub
jmp
rcr
push
mov
sub
ins
fadd
into
or
pop
mov
add
cmp
mov
(bad)
jmp
dec
jae
sahf
mov
mov
mov
out
imul
dec
jmp
cwde
xor
(bad)
sbb
pop
pop
dec
or
ins
pop
adc
addr16
mov
inc
add
(bad)
nop
cmp
push
adc
stc
xchg
cmp
mov
sub
push
repnz
mov
inc
cdq
pop
add
xor
int
shr
imul
push
mov
test
or
mov
ja
lahf
aas
add
pop
in
and
popa
test
pop
xor
pop
cmp
pop
push
not
cmp
xchg
cmp
sub
cmp
in
shr
dec
sbb
xor
cmps
add
repz
cmp
add
int3
loope
rcr
push
addr16
mov
mov
pop
xchg
(bad)
loop
mov
jle
not
xchg
mov
outs
lock
inc
xor
xchg
sub
mov
jmp
jmp
stc
cmp
cwde
push
lods
push
xchg
out
jo
rol
int
and
int3
mov
push
mov
inc
or
sub
cmps
push
push
push
sub
push
test
stos
xchg
imul
mov
fdiv
dec
(bad)
call
call
ss
fdivp
test
out
jl
jecxz
and
cmp
rol
fwait
call
add
sbb
sbb
cmp
lods
push
dec
pop
mov
dec
jmp
inc
shr
outs
jecxz
and
mov
jge
cmp
retf
mov
hlt
dec
pop
sub
out
je
shl
jb
mov
adc
loopne
neg
jno
cdq
mov
cld
retf
ret
cmp
jge
mov
jl
test
inc
jl
pop
adc
fnsave
pop
call
add
push
push
mov
xor
ins
pop
outs
(bad)
fnstenv
popa
sbb
mov
jmp
enter
adc
fisttp
pop
dec
out
loopne
xchg
fnstsw
adc
jno
ins
mov
xlat
(bad)
sbb
ss
mov
test
inc
in
and
cwde
xor
xor
rcr
ins
movs
daa
mov
mov
test
ds
adc
or
and
dec
jg
outs
xor
jle
cmp
xor
pop
rol
call
or
jmp
push
ret
and
movs
cmp
test
and
xor
movs
dec
sbb
fisttp
push
jo
loope
xchg
dec
push
iret
push
test
gs
mov
jae
cmp
mov
push
repnz
shl
ret
sbb
dec
out
imul
mov
and
xor
dec
and
sub
retf
clc
or
pop
inc
cmps
push
imul
test
or
pushf
fdiv
pop
aad
cmps
pop
xchg
fcmovnbe
lea
xor
sbb
femms
sub
popf
inc
cmp
sub
test
dec
mov
call
pop
and
jns
pop
cmp
adc
add
push
dec
imul
mov
mov
sbb
sbb
je
pop
ror
retf
or
mov
jge
add
push
fld
ss
inc
mov
xlat
cmp
clc
pusha
add
enter
xchg
inc
mov
jmp
or
sub
fst
sub
sub
int
pop
in
sbb
test
jnp
int
shr
call
stos
sbb
xlat
jo
or
add
stos
mov
push
shl
out
sub
jnp
and
sbb
xor
imul
cdq
ins
mov
push
iret
dec
les
mov
popf
loopne
mov
jno
ins
in
jle
movs
leave
fcom
mov
mov
push
data16
bound
pop
jne
and
xchg
xchg
cmps
inc
fistp
ret
out
jne
and
enter
daa
stc
xor
fldcw
repnz
xchg
cmps
dec
pop
push
pop
sub
into
shl
adc
sbb
outs
into
out
bnd
xor
jmp
sahf
pop
js
lods
clc
sub
imul
adc
or
iret
or
retf
mov
clc
aad
mov
inc
call
xchg
cmp
sub
sar
in
repnz
or
mov
(bad)
pusha
or
sti
push
jmp
(bad)
fistp
sar
xor
mov
cmp
dec
rcl
and
out
adc
mov
mov
mov
fs
pop
sbb
and
mov
jmp
dec
add
jae
(bad)
mov
test
mov
lods
fsub
sbb
mov
xlat
daa
imul
hlt
daa
sbb
scas
aaa
adc
inc
clc
hlt
inc
aad
div
(bad)
sbb
stc
repnz
das
sub
cmp
mov
jg
xor
xchg
push
movs
loope
hlt
push
(bad)
adc
cmp
dec
(bad)
mov
arpl
and
shl
xchg
or
fadd
or
xchg
mov
xor
arpl
xor
std
sbb
pop
pop
cli
clc
ficomp
mov
pop
push
xor
mov
xchg
dec
int3
les
jg
xor
pop
mov
dec
and
mov
clc
lahf
xchg
sbb
shr
adc
xchg
ret
dec
call
pop
inc
or
mov
or
mov
test
mov
mov
jp
not
fsub
mov
inc
push
mov
push
pop
pushf
in
aas
or
in
movs
in
adc
std
movs
sub
(bad)
mov
std
movs
retf
gs
push
cld
cmp
fnsave
lods
sub
push
lahf
xchg
add
push
aaa
out
lahf
je
enter
sbb
je
or
into
xor
xchg
mov
cmp
inc
push
push
and
add
in
sar
int
push
mov
shl
mov
and
xchg
add
jns
inc
mov
sbb
pop
sbb
test
mov
dec
hlt
mov
xor
adc
sub
push
pop
fmul
cmp
fild
ins
bound
sub
aam
mov
out
push
push
mov
scas
test
loopne
pop
out
movs
aad
mov
addr16
out
cmp
cmps
cmp
ret
popf
mov
cmp
jmpw
adc
or
(bad)
out
push
cmp
test
cmp
test
jg
cmc
dec
add
mov
jl
dec
std
jbe
pop
stc
add
das
rol
mov
aaa
xadd
mov
imul
shl
adc
scas
lock
ds
mov
(bad)
std
mov
fstp
enter
xchg
cmp
out
scas
sbb
sbb
pop
lods
or
inc
push
pushf
mov
push
ret
inc
add
push
das
or
push
pop
xchg
lahf
pop
sub
xor
inc
mov
cmp
jo
inc
jp
lahf
dec
int3
lock
cmp
add
loop
inc
mov
jmp
mov
js
jb
jns
nop
pushf
or
es
imul
cmps
pop
jl
fiadd
jnp
(bad)
into
mov
outs
dec
mov
fwait
arpl
cmp
(bad)
out
cmp
jns
xor
and
in
xchg
scas
loop
mov
add
jp
add
push
rcr
inc
stos
out
dec
add
mov
push
movs
adc
inc
xor
ret
mov
sbb
fwait
daa
movs
out
aaa
je
imul
fs
les
and
cmp
repz
mov
pop
(bad)
fs
test
pusha
(bad)
mov
popf
adc
cmp
inc
dec
enter
ins
or
ror
pusha
mov
xchg
mov
add
fcmovnb
out
add
add
into
add
sbb
outs
push
out
stos
hlt
mov
inc
push
ins
icebp
push
or
sti
mov
fwait
and
call
and
lock
pop
into
sbb
push
mov
jb
mov
sub
jno
push
jb
pop
fisubr
rcr
mov
jmp
into
adc
jb
fdivr
cmp
dec
xchg
mov
xchg
adc
ins
add
and
rol
in
pusha
dec
pushf
or
mov
sub
or
sbb
ja
xor
(bad)
jb
push
mov
xor
sub
jp
xor
mov
push
jge
cld
into
xor
mov
clc
out
fdivr
and
xor
add
retf
cld
fs
loop
jmp
mov
ss
dec
cmp
dec
shl
cmps
push
(bad)
(bad)
push
dec
(bad)
ds
xor
pop
test
mov
xchg
aaa
mov
add
cmp
sahf
mov
daa
inc
add
ret
mov
out
xor
stos
(bad)
mov
add
cmps
dec
cld
pop
stos
mov
mov
pop
test
les
add
dec
(bad)
pop
aam
sub
mov
mov
data16
ins
in
call
and
ja
mov
cdq
je
mov
ins
aas
fdiv
ja
stos
lods
sti
dec
xchg
loopne
push
adc
popa
mov
repz
pop
fcom
or
and
add
sub
push
push
jo
add
retf
shl
push
or
(bad)
add
jmp
fsubr
mov
ja
dec
mov
sbb
sbb
sbb
lock
xor
adc
lahf
push
enter
and
es
mov
dec
push
dec
cmp
das
aas
pop
inc
xchg
adc
mov
mov
inc
icebp
adc
jb
push
xchg
push
add
out
mov
retf
adc
repz
hlt
inc
stos
mov
or
(bad)
cmp
popf
or
dec
bound
xchg
fidivr
stc
xor
xchg
and
lea
stc
bnd
jnp
jnp
sub
jp
cs
jae
lds
xchg
mov
repnz
retf
addr16
add
mov
push
lods
add
cmp
cmp
lods
sub
dec
mov
pop
add
cvtps2pd
pop
inc
aam
lods
jle
sahf
arpl
mov
in
sub
(bad)
adc
sti
fist
and
sbb
xor
sbb
or
push
clc
ds
push
fcomp
sbb
sub
test
push
push
sbb
ror
pop
add
mov
sub
inc
fmul
jmp
mov
and
rcl
adc
push
push
aam
dec
xchg
(bad)
aaa
inc
js
mov
test
jb
pop
cdq
or
xor
inc
icebp
mov
add
jl
mov
sub
sbb
sbb
mov
mov
sub
leave
loopne
push
add
fist
frstor
aam
test
push
cmps
lods
jecxz
mov
mov
ficom
dec
fild
sub
mov
add
cmp
rol
dec
push
cmp
xor
xor
sti
add
and
push
jmp
pop
mov
push
std
cdq
loop
and
xor
mov
cli
cs
jne
mov
data16
ss
add
es
popf
int3
ret
xchg
call
cmp
sub
stos
rcl
jb
test
out
stc
inc
mov
xor
lods
shr
repnz
out
push
mov
fdivr
mov
lock
cmps
inc
out
mov
pop
jo
adc
mov
xor
adc
cmc
fnstcw
dec
add
(bad)
cmp
jns
call
movs
std
cdq
test
inc
ja
pop
push
clc
or
cmp
in
mov
das
adc
jle
sub
lds
sub
hlt
add
mov
jae
push
add
inc
and
and
fst
inc
inc
pop
sub
push
sbb
xchg
jns
jnp
jmp
jmp
aam
je
arpl
sbb
xchg
rcl
cmp
sub
push
cmp
inc
jmp
pop
or
and
and
in
mov
adc
cmp
and
retf
push
movs
fmul
stos
fcomp
push
cli
dec
cmps
stos
cmp
mov
mov
fwait
int3
arpl
and
stos
jnp
aam
cmp
call
push
or
xchg
xchg
sbb
(bad)
cmps
sbb
and
jle
sub
xor
loop
arpl
imul
jg
sub
fnclex
xor
popf
imul
mov
add
cld
adc
cmp
ret
mov
imul
das
add
and
xchg
std
adc
push
ss
in
retf
fsincos
cmps
js
cwde
mov
ret
mov
xor
call
sub
inc
adc
ret
int
fidiv
pop
stos
xchg
inc
xor
add
mov
fisubr
loope
(bad)
cmp
mov
out
mov
push
jecxz
mov
inc
mov
cmp
and
sar
sbb
pop
adc
out
dec
cwde
pop
mov
push
cmp
pop
xchg
enter
xchg
inc
inc
test
jns
sar
dec
(bad)
call
stos
adc
gs
mov
into
je
and
jmp
xchg
and
je
or
mov
or
ds
mov
aad
jae
rol
cmp
inc
and
mov
movs
xor
and
je
add
mov
pop
add
pop
jle
sbb
gs
inc
(bad)
push
cmps
push
xor
popf
rcl
sub
and
sub
jmp
ss
nop
jg
push
retf
js
mov
sub
inc
inc
int3
out
jmp
lds
xchg
sbb
pop
call
outs
fld
adc
sahf
lods
loopne
mov
int
xor
rcr
addr16
sbb
adc
mov
movs
not
push
and
sbb
adc
mov
push
or
jbe
in
sbb
fwait
ds
repnz
into
mov
inc
dec
inc
pop
mov
leave
sub
popf
jnp
jg
iret
pop
js
pop
and
popf
mov
(bad)
fwait
ins
adc
fsubr
loopne
into
repnz
or
movs
push
xor
movs
cmp
inc
mov
outs
scas
(bad)
out
rep
sbb
push
in
out
jns
push
ror
das
mov
gs
lds
inc
ficomp
adc
out
dec
mov
add
and
(bad)
mov
adc
aaa
jo
hlt
div
and
push
or
adc
pop
or
sbb
out
or
pop
pushf
xchg
push
sub
adc
dec
daa
adc
inc
out
sub
pop
jp
movhps
lock
inc
test
dec
mov
jl
xchg
je
mov
int3
mov
outs
jb
ficomp
inc
pop
out
cmps
daa
ret
cmp
repz
(bad)
nop
xchg
cs
stos
arpl
test
aaa
clc
aas
iret
xor
mov
push
fdivr
mov
out
test
dec
clc
repnz
cmp
xchg
and
(bad)
pop
pop
pop
stos
jmp
sahf
dec
xor
adc
shr
jns
aaa
and
mov
bound
fistp
adc
jl
cs
test
sub
xor
jnp
or
sub
call
dec
dec
xchg
ins
add
clc
cs
test
movs
sbb
fidiv
mov
jmp
xor
cs
mov
mov
outs
dec
xchg
jl
call
jo
pop
sub
addr16
movs
gs
push
or
mov
mov
cmps
fistp
mov
mov
inc
cmp
cmp
mov
fs
inc
push
lock
loop
cdq
lods
imul
and
(bad)
les
div
sub
aad
jp
jle
pop
(bad)
in
jmp
fwait
movs
add
ds
inc
mov
dec
(bad)
push
dec
inc
add
pop
jb
jle
(bad)
or
loope
iret
je
lds
lods
add
aaa
sbb
and
lods
test
bound
cmps
out
repnz
mov
ret
sub
push
scas
scas
sbb
add
cmp
imul
fisub
xor
add
in
(bad)
cmp
jecxz
and
sbb
mov
pop
dec
pop
xchg
push
test
lea
retf
loopne
int
repz
pop
push
pop
jo
lea
dec
jmp
sar
cmp
dec
movs
aaa
and
scas
dec
ror
out
imul
push
jns
cmc
fxch
arpl
push
jmp
mov
ds
mov
pop
not
loopne
jecxz
xor
add
ror
push
sub
mov
(bad)
mov
in
jb
fimul
xchg
push
or
pop
test
pushf
jg
jmp
adc
jo
hlt
mov
test
out
xchg
and
mov
xchg
inc
in
stos
movs
xchg
pusha
aam
aad
cld
call
call
jge
xchg
leave
imul
fistp
xor
dec
in
stc
pop
inc
adc
mov
cmp
mov
ja
rol
cli
fld
and
shl
xchg
leave
ins
add
hlt
imul
push
dec
imul
fwait
pop
cli
cmp
cs
std
mov
(bad)
aam
dec
sbb
fdivr
or
cli
retf
xor
inc
adc
in
mov
std
stos
mov
inc
jle
in
dec
test
sbb
cmp
out
inc
push
out
sbb
push
loope
test
nop
popa
push
inc
sbb
retf
jmp
pop
movs
or
jnp
(bad)
movs
sub
xchg
leave
in
jecxz
and
pusha
fadd
xor
sbb
xchg
xchg
sub
pop
aaa
clc
test
daa
push
push
mov
jmp
cmc
dec
xchg
add
xchg
sbb
not
sub
dec
enter
push
adc
pop
xor
xacquire
mov
xor
out
cli
xchg
dec
int3
outs
cdq
adc
jmp
sti
add
pop
ss
push
add
fst
adc
pop
imul
sbb
jle
fs
test
mov
sbb
jecxz
iret
sbb
push
push
in
mov
aas
(bad)
es
xor
inc
vsubsd
lea
jecxz
enter
inc
inc
cmp
js
xor
out
mov
xchg
jl
das
ror
outs
push
jl
shl
pop
sahf
cmps
xor
lea
stos
cmp
(bad)
lea
and
sbb
jnp
int3
(bad)
lds
ins
sbb
cmp
in
mov
inc
inc
pop
cmp
xor
mov
iret
xchg
dec
enter
stos
mov
xchg
shl
cmp
movs
jo
xor
cmp
shl
dec
cmp
sub
lods
movs
ret
push
fnstsw
push
leave
dec
mov
loop
or
and
cmc
sbb
sub
test
int
lahf
xlat
fisubr
imul
push
outs
add
mov
adc
mov
mov
and
jne
scas
sti
ds
pop
retf
cmp
xlat
movs
pop
pop
xchg
mov
je
push
cmp
jbe
push
rol
mov
ret
repz
ins
dec
and
push
adc
(bad)
stos
pop
xchg
mov
movs
pop
push
push
pusha
sub
mov
es
rcl
imul
mov
dec
dec
push
push
icebp
xchg
mov
ret
mov
outs
in
xor
mov
mov
test
push
(bad)
es
jmp
das
cli
fadd
ds
adc
(bad)
jecxz
sar
push
in
test
call
mov
scas
adc
mov
mov
mov
pusha
xor
dec
sub
cmp
enter
pop
pop
cmp
pop
or
in
mov
dec
xchg
pop
bound
or
or
mov
dec
inc
xchg
test
in
sub
mov
cmps
dec
inc
mov
stos
mov
jbe
or
add
cmp
and
mov
dec
push
cmp
sbb
out
nop
dec
xchg
out
lea
push
fnstenv
jmp
retf
inc
jns
mov
out
gs
jnp
mov
cmp
or
sar
adc
setno
cdq
cs
push
or
dec
fcmovnb
out
dec
test
xchg
sub
and
test
retf
mov
lea
mov
pop
out
bound
dec
pop
jp
dec
inc
jl
bound
out
mov
ror
lea
inc
ds
mov
popa
cmp
sti
out
sbb
loop
fisub
cwde
push
lock
cmps
mov
stc
xor
gs
je
(bad)
out
aaa
dec
ror
sbb
inc
mov
jbe
test
into
jns
fnstsw
ins
mov
fs
je
neg
pop
sbb
ja
mov
lahf
(bad)
stos
sub
adc
lahf
mov
mov
jns
and
xchg
out
pop
push
dec
fnstenv
sub
vrsqrtps
movs
jo
jnp
aas
cmp
push
cmp
cmp
hlt
(bad)
ins
test
add
lods
into
adc
clc
adc
outs
xor
dec
sub
popf
sub
push
in
ins
mov
loop
stos
mov
setbe
sbb
xor
lock
sbb
xor
or
out
xchg
cmps
loope
stc
in
pop
xor
cmc
cmp
dec
iret
not
or
leave
mov
sub
loop
cmp
fstp
sahf
jne
mov
dec
jmp
jmp
sub
lahf
or
mov
sub
dec
fcmovu
and
inc
sbb
out
sbb
sti
mov
fimul
aas
les
fdiv
imul
xor
mov
jns
sbb
jmp
rcl
cmp
sbb
enter
or
out
fs
pop
es
mov
out
ds
pop
xlat
jnp
out
sbb
dec
clc
push
out
pop
jae
test
mov
cmp
sub
call
mov
push
xchg
sbb
fdiv
xchg
pop
jne
iret
(bad)
cmp
fbld
bt
sbb
mov
(bad)
ficom
jnp
imul
push
pop
sbb
cmp
dec
cmp
xchg
sub
popa
in
jmp
push
inc
fnstenv
push
in
dec
aad
daa
out
push
push
jae
xchg
into
jno
fidiv
jae
xor
popa
sahf
mov
jae
movhps
push
pop
(bad)
repnz
inc
(bad)
pop
fldcw
jle
cld
jns
in
dec
and
cmp
sub
aaa
sbb
rol
sub
pop
in
mov
daa
rcr
fwait
sahf
in
icebp
in
popf
mov
inc
xor
jmp
enter
push
sub
add
pop
mov
aas
pop
mov
popf
xchg
in
data16
int3
xchg
test
call
pop
dec
jle
mov
inc
mov
pop
popa
cmp
arpl
fld
jno
in
push
mov
inc
inc
stc
inc
scas
call
loopne
mov
inc
movs
adc
adc
jle
cmp
into
xor
out
dec
sub
outs
push
jmp
pop
jb
pop
pop
dec
cdq
movs
push
add
pop
push
add
ins
mov
xchg
test
nop
jl
out
jo
lds
push
fisubr
xor
aaa
adc
xor
mov
push
pop
sub
or
neg
inc
aad
cmp
xor
mov
sub
xchg
sahf
dec
add
scas
jae
daa
mov
shr
sub
fsubr
les
jle
imul
sbb
loopne
push
into
das
add
and
daa
stos
shl
stos
sub
xchg
repnz
or
sub
out
dec
mov
adc
jne
or
test
xchg
push
sti
mov
and
cmp
or
push
mov
jmp
xchg
test
cs
dec
daa
das
jge
xor
jmp
neg
add
dec
hlt
xchg
pop
(bad)
mov
jl
cs
sahf
in
fwait
(bad)
mov
scas
push
popf
xlat
stc
jmp
loopne
leave
cmp
imul
cli
inc
push
nop
fpatan
lods
imul
fs
mov
bound
pop
xor
jbe
jbe
and
enter
cmp
mov
int3
cmps
jmp
jae
add
dec
ss
push
pop
test
(bad)
pop
pop
test
mov
mov
mov
ficom
scas
ror
and
pop
stos
xor
ret
sbb
mov
shl
dec
mov
xchg
mov
adc
sbb
adc
std
xor
out
out
inc
ja
xchg
mov
shl
jo
mov
shl
sbb
xor
push
or
inc
add
cmp
sbb
mov
jecxz
mov
mov
xlat
leave
mov
xlat
pop
(bad)
dec
addr16
test
mul
nop
jno
daa
popa
pop
mov
adc
cmp
add
js
mov
jae
sahf
stc
arpl
xor
jle
push
xor
and
adc
adc
dec
mov
(bad)
or
push
xchg
loope
add
xchg
lahf
ficomp
inc
stos
dec
hlt
mov
sub
popa
lods
push
and
inc
das
sbb
jp
mov
push
shl
or
ins
nop
sbb
repnz
jge
fidivr
enter
mov
push
mov
scas
jmp
pop
dec
mov
shl
loopne
(bad)
dec
test
sub
in
and
retf
aas
not
lds
cdq
jb
retf
xchg
cmps
es
repz
xlat
stc
std
sub
jb
lods
aad
xchg
in
shr
imul
xchg
jbe
cmp
(bad)
cmc
out
xchg
sbb
add
mov
shl
and
pop
mov
int
and
les
daa
into
pop
movs
and
call
in
xchg
repnz
test
or
fwait
pop
inc
inc
movs
or
jmp
mov
lds
mov
jns
mov
sahf
add
jg
push
dec
popa
and
(bad)
test
(bad)
shl
jg
enter
call
push
ja
add
cmp
pop
mov
sti
mov
and
fdivp
pop
out
add
retf
add
add
pusha
jmp
js
data16
ds
jecxz
cmps
mov
jae
es
jmp
out
or
xor
sub
dec
xor
out
mov
push
movs
xor
or
inc
or
loope
call
jecxz
iret
imul
js
scas
or
inc
xchg
mov
dec
push
adc
xor
add
push
cmp
and
mov
ret
rol
sbb
aad
fbstp
mov
or
pop
dec
ins
cmp
or
mov
push
xor
in
pop
test
rcr
int
fdivr
stos
in
nop
(bad)
adc
loop
sub
pop
pop
cmps
stos
and
or
inc
pop
jbe
dec
xor
lock
jo
push
aad
jo
sub
xchg
xchg
(bad)
rcl
lds
das
inc
in
lods
dec
ror
jl
mov
pop
jne
jp
ja
repz
cwde
adc
sbb
jne
out
jb
bound
retf
mov
nop
mov
(bad)
dec
sbb
repnz
fst
mov
sbb
loop
dec
jg
mov
xchg
xchg
xor
je
lods
ret
fcmovne
mov
mov
push
pop
push
mov
mov
inc
rep
or
adc
mov
dec
daa
xor
stc
adc
enter
sbb
push
cmp
js
mov
cmp
lea
xchg
paddq
out
bnd
repz
jl
int
out
pop
add
adc
sti
adc
adc
adc
ja
mov
je
stos
inc
sub
adc
and
loopne
icebp
out
or
dec
mov
mov
push
fs
outs
lea
xchg
ret
ret
cmps
xor
push
mov
jg
fwait
pop
lock
xor
cs
bound
cmp
inc
outs
cmp
dec
pop
fwait
xor
aas
push
dec
jne
dec
cmp
pop
and
mov
clc
sub
lgs
or
push
jmp
call
jo
(bad)
dec
mov
mov
mov
pop
cdq
ficom
sub
xchg
(bad)
sub
cmc
ret
push
mov
aam
movs
mov
jl
repnz
in
xor
sbb
mov
jge
sbb
dec
jp
shl
popa
jo
aad
clc
and
(bad)
int3
jno
xchg
in
xchg
stc
call
inc
adc
mov
cmp
dec
shr
outs
shl
or
in
mov
dec
das
mov
call
inc
bnd
retf
push
jb
in
push
mov
into
mov
in
iret
sbb
and
push
adc
imul
sti
sbb
scas
sti
dec
out
jp
jns
or
push
pop
and
outs
shl
and
scas
mov
and
ret
mov
fisub
mov
ins
leave
push
xchg
adc
clc
cld
out
inc
jnp
pop
add
enter
mov
daa
sar
sbb
fcom
mov
xlat
xor
xor
mov
sub
leave
mov
es
std
ds
repz
cmc
rcl
in
xchg
cmp
popa
push
lahf
repnz
adc
mov
(bad)
retf
fimul
add
mov
out
pop
arpl
fmul
fstp
jno
dec
popf
sub
fcomp
addr16
sti
loopne
mov
jmp
imul
enter
and
mov
cmc
pop
arpl
dec
mov
push
and
jnp
(bad)
sub
leave
add
cs
(bad)
jle
(bad)
push
push
out
inc
xor
ins
test
jge
bt
xchg
sbb
push
add
lock
sbb
cmp
aad
call
stos
popf
xlat
xor
dec
pop
cs
mov
xchg
dec
repz
loopne
xchg
inc
fistp
fwait
mov
sbb
jmp
jb
mov
imul
retf
ins
sub
cmp
cdq
sar
pop
jo
sbb
push
repz
movs
sub
call
jge
loope
iret
sub
popf
or
cmp
and
jne
jae
(bad)
addr16
mov
stos
sbb
pop
cdq
jno
das
cld
loop
shl
movs
adc
inc
jns
lock
push
std
or
nop
push
mov
fmul
es
in
push
xchg
push
push
xchg
stc
mov
arpl
cmp
dec
push
jbe
test
ja
mov
mov
add
jl
sub
dec
arpl
int3
mov
jbe
jnp
xchg
xlat
or
jne
push
in
jns
mov
or
jp
cmp
pop
lahf
jno
daa
or
(bad)
(bad)
push
xchg
neg
push
call
jo
call
mov
sbb
xchg
mov
imul
inc
std
into
push
add
scas
adc
inc
repz
push
add
rcr
sti
(bad)
lods
sbb
sub
dec
or
adc
pusha
or
retf
push
xchg
jb
std
xchg
fist
sahf
dec
nop
or
mov
es
aad
(bad)
cli
cld
fwait
in
mov
in
dec
hlt
mov
(bad)
jle
sub
clc
test
loop
(bad)
push
mov
scas
mov
es
ret
jg
in
sbb
ds
push
adc
je
xor
fld
dec
ja
ds
dec
and
sub
fs
add
cld
cmp
ret
sbb
mov
jb
ret
sub
sbb
ds
repz
pop
pop
dec
lea
push
cmc
imul
or
int
mov
addr16
(bad)
iret
cmp
inc
mov
and
(bad)
fwait
ins
cmc
call
mov
sub
cld
pop
shr
push
lods
and
sub
and
sbb
popf
mov
or
pop
ret
pop
int3
in
or
fist
aam
pop
mov
pop
(bad)
mov
mov
pop
gs
xchg
cmp
das
lahf
iret
xor
icebp
push
cmp
retf
cmp
adc
mov
ja
sbb
cmps
call
call
push
imul
fcom
mov
sbb
dec
in
pop
sbb
mov
mov
mov
jle
mov
add
seto
pop
xor
int3
das
sbb
aad
mov
nop
jmp
and
in
mov
dec
xor
inc
sub
dec
int
pop
xchg
sti
sbb
ror
push
test
in
xor
sub
or
jo
ret
and
outs
sub
loope
pop
xchg
jl
mov
call
cmp
dec
ror
call
cmp
mov
dec
and
test
jmp
stos
mov
out
cwde
outs
xchg
ds
stos
bswap
(bad)
xor
in
or
imul
mov
xor
aaa
int
dec
ss
das
pop
cmp
add
mov
enter
out
xchg
mov
cmp
sbb
retf
xor
xor
call
mov
sbb
inc
mov
shr
xor
jo
(bad)
and
(bad)
fidivr
dec
push
ret
jno
daa
aad
fidiv
mov
stos
pushf
ds
mov
nop
movs
mov
popa
or
or
sub
adc
mov
xchg
adc
adc
in
cmp
ins
and
mov
enter
pop
push
or
xchg
push
hlt
nop
loope
mov
pop
mov
pop
jmp
popa
pop
dec
pop
cmp
adc
int
retf
into
cmp
popa
mov
data16
hlt
xor
fisubr
fmul
jnp
cmp
jns
mov
cmps
retf
xor
and
add
jge
xchg
sub
sbb
lods
stos
test
aas
hlt
and
sbb
and
dec
stc
push
push
xchg
mov
pop
aas
dec
push
mov
xchg
stos
mov
xchg
int
aad
mov
sub
int
addr16
mov
clc
sahf
lods
adc
mov
and
xchg
inc
push
aam
ins
add
in
dec
les
push
pop
add
and
jbe
daa
sbb
mov
aaa
aad
or
cmp
xor
iret
jmp
add
sub
in
popf
push
leave
mov
iret
jne
mov
data16
pop
or
and
mov
mov
outs
mov
pop
xlat
pusha
and
add
movs
enter
enter
xchg
inc
cmp
jl
stc
jp
and
inc
hlt
mov
fistp
mov
movs
in
pushf
sub
pop
sub
cmp
ja
es
dec
mov
mov
loope
sub
mov
scas
out
pop
inc
arpl
xchg
and
dec
jnp
test
test
les
add
scas
and
out
ins
in
xchg
dec
mov
pop
push
xor
cmp
pop
push
lds
adc
inc
clc
xlat
mov
mov
mov
cmp
and
pop
sub
jae
cmps
adc
adc
cmp
cmp
and
or
xor
pop
mov
sub
test
inc
xchg
stos
jmp
outs
test
js
or
inc
call
mov
(bad)
jae
(bad)
dec
data16
div
dec
clc
push
mov
sbb
les
jg
pop
js
cmp
cmps
inc
cs
cli
jmp
and
cmp
out
mov
movs
pop
jne
out
test
mov
fwait
jne
jge
and
je
scas
pop
das
stos
loope
test
jae
mov
sub
sub
popf
cmp
push
mov
fimul
mov
ror
popa
popf
mov
mov
(bad)
mov
cmp
imul
xor
inc
pop
mov
jno
rol
mov
sbb
rol
hlt
imul
jp
sub
jb
aaa
sub
movs
mov
inc
jbe
mov
in
cs
pop
push
cmp
cdq
adc
jmp
xor
jmp
test
add
div
xchg
dec
pop
add
fcomip
inc
cdq
add
sub
push
pop
popa
out
push
push
mov
xchg
pop
dec
cmp
dec
test
ret
sbb
cs
stos
int3
xor
fisub
cmp
mov
test
jnp
shl
ss
aad
mov
addr16
arpl
add
test
push
sti
push
cdq
imul
pop
pop
push
mov
sub
mov
inc
iret
mov
popf
mov
call
outs
push
retf
ret
mov
xchg
loop
jl
xchg
cmps
icebp
dec
pop
add
aad
ins
or
sbb
xchg
in
gs
mov
jmp
xor
xchg
sahf
repz
and
adc
cld
iret
pop
inc
ds
pop
daa
jmp
cli
sbb
adc
fsub
push
mov
loope
xchg
jmp
or
imul
in
sub
leave
pop
loope
xchg
dec
or
sub
rcl
push
rcl
push
inc
dec
mov
xchg
(bad)
xchg
ja
xor
jno
sbb
inc
iret
push
clc
inc
jle
push
pushf
inc
data16
int3
out
stos
imul
cmp
jecxz
jecxz
push
loopne
dec
icebp
call
xchg
or
popf
push
cmp
shr
inc
and
jge
adc
pop
call
sub
jbe
sar
jp
cmps
lds
push
imul
popa
bound
je
in
xchg
and
xchg
dec
mov
lods
aam
enter
test
mov
lahf
and
hlt
cmp
in
sar
pop
jnp
cwde
jno
and
lahf
pop
and
mov
in
mov
mov
loope
sbb
dec
aam
push
movs
mov
inc
xchg
in
push
inc
cmp
pop
mov
in
aas
lahf
cmp
pop
out
xchg
jl
inc
bound
adc
push
xchg
xor
(bad)
retf
xchg
and
popf
fs
fnstenv
mov
fmul
icebp
cmp
repnz
scas
out
fsubr
add
push
jo
push
or
lahf
mov
add
or
and
xor
js
xor
or
or
inc
or
or
xchg
mov
pop
int3
pusha
pop
sbb
popf
fnsave
shl
pop
jo
in
xchg
cld
popf
aaa
outs
jl
push
lods
xchg
scas
fisub
aaa
mov
mov
fld
and
in
cwde
xchg
cmp
aas
mov
mov
mov
adc
xor
setle
loopne
sbb
xchg
xchg
retf
jle
jmp
and
nop
ins
inc
popa
or
push
jecxz
sbb
(bad)
cmp
not
js
dec
scas
stos
in
or
ret
or
loope
aas
fwait
loopne
cli
pop
fwait
mov
xchg
jmp
in
xor
cwde
movs
stc
test
out
lods
out
mov
(bad)
into
push
sub
mov
mov
inc
fdivr
bound
fmul
mov
or
push
adc
push
mov
pop
xor
out
nop
sbb
and
and
outs
fidivr
movs
sbb
loope
movs
push
cmp
pop
cwde
xlat
xlat
std
xor
sub
in
ror
in
dec
mov
jno
fisttp
add
and
outs
mov
in
jg
xor
cmp
dec
or
mov
test
mov
mov
loop
icebp
jns
dec
pop
repz
in
ror
clc
mov
dec
(bad)
mov
fnstcw
cmp
sahf
sub
scas
stc
test
push
not
ja
int
push
arpl
retf
ja
imul
jg
xor
adc
push
cdq
push
jb
jno
sub
adc
add
sub
and
and
rol
sub
or
in
mov
xor
fld
mov
pop
fisttp
or
call
xor
lea
push
add
mov
(bad)
ja
retf
jae
xchg
dec
jmp
mov
stc
inc
das
inc
je
in
cmp
stc
lds
mov
fild
add
out
or
cmps
je
loopne
sbb
push
xor
test
inc
loope
mov
pushf
cli
stos
ins
adc
dec
fild
call
jne
(bad)
cld
lock
push
push
pop
add
retf
rol
jle
addr16
jge
je
cmc
rcl
call
ret
xchg
and
hlt
mov
cmp
jbe
(bad)
hlt
cmc
mov
pusha
ror
scas
daa
loop
(bad)
icebp
test
int
dec
push
push
jl
je
dec
push
or
repz
jb
ss
adc
lods
xchg
cmc
fsubrp
mov
xor
loope
call
xchg
mov
movs
inc
pop
sbb
xor
pop
jge
pop
pop
dec
cmp
push
add
outs
aas
or
inc
popa
fadd
dec
adc
pop
(bad)
mov
fcom
mov
jge
xchg
jbe
and
cli
imul
inc
int
jl
rol
ja
mov
les
movs
push
fcmove
lds
ja
pop
addr16
mov
adc
movs
fistp
test
push
add
fsub
push
jp
test
sub
in
arpl
in
in
fst
movs
sbb
mov
popf
movs
lods
test
dec
push
or
pusha
sbb
adc
mov
xchg
sbb
jae
(bad)
out
iret
dec
cwde
xor
mov
test
jle
inc
lock
(bad)
std
sub
retf
pop
call
shr
mov
mov
jae
fisubr
mov
(bad)
aad
lock
sbb
out
mov
dec
pop
add
xor
xchg
sub
(bad)
ja
mov
(bad)
mov
gs
repz
sbb
movs
movs
outs
sbb
hlt
fistp
adc
push
cwde
or
jmp
mov
and
pop
xlat
enter
mov
int
push
pop
pop
mov
js
call
and
jle
jne
retf
add
fmulp
cld
cs
loop
mov
mov
fld
mov
jns
sub
data16
xchg
ins
jns
imul
(bad)
cmps
adc
mov
cmp
inc
arpl
add
stc
add
cmp
or
aaa
mov
jmp
mov
xchg
pop
jbe
retf
sub
lods
sbb
(bad)
pop
int3
push
xchg
push
mov
test
daa
sub
sub
scas
stc
jmp
ror
cmp
leave
jge
adc
dec
ja
jge
neg
adc
inc
mov
add
dec
retf
inc
add
jns
jmp
mov
sub
jb
cdq
fs
xor
xchg
out
shr
aaa
iret
push
sbb
jge
out
or
stos
push
jp
push
and
inc
outs
fcmovnbe
mov
mov
lahf
stc
cmc
repnz
xor
xchg
xchg
jno
shufps
sub
popf
nop
sahf
jae
je
xchg
int
and
mov
jb
loope
adc
popa
dec
aam
jge
jle
sbb
test
jl
inc
ret
out
sar
sub
retf
rcl
aaa
cdq
shl
das
movs
call
or
or
jae
adc
mov
push
mov
mov
add
push
mov
int3
fsubr
xor
jae
or
bound
add
jne
mov
popa
inc
mov
in
rcl
mov
in
sub
inc
mov
outs
enter
das
mov
mov
fistp
mov
xor
out
cmps
dec
xor
ds
std
dec
push
fst
nop
jmp
add
xor
pop
or
dec
nop
das
in
lea
mov
adc
in
aas
inc
out
push
cmp
ja
and
lods
sub
imul
scas
or
rcl
cmp
adc
push
adc
dec
(bad)
out
dec
loopne
xchg
retf
push
sub
in
lds
outs
mov
loope
pop
push
pop
or
rcl
lock
push
ret
jl
cmp
or
push
push
jb
in
push
sti
fdiv
out
int
add
adc
fld
fwait
movs
jg
mov
dec
adc
int
jmp
jno
pop
fidivr
push
cmp
imul
mov
ret
(bad)
in
push
mov
retf
push
aas
adc
push
jp
enter
cdq
cmp
fist
fisttp
les
sbb
sar
cmp
dec
ds
fbstp
out
or
pop
sub
pop
lea
in
jae
xor
jno
push
xchg
repz
aaa
cmp
mov
sub
inc
ret
mov
mov
xchg
inc
mov
loope
pop
jl
imul
or
pop
mov
adc
pop
in
cmp
mov
popa
test
xchg
push
and
lods
sbb
dec
lds
iret
(bad)
in
pop
push
jecxz
lds
repz
loope
jle
rcl
cmp
dec
dec
imul
push
sbb
mov
cmps
pop
xlat
mov
(bad)
sti
in
sub
mov
fidiv
sub
int
sub
imul
lds
inc
mov
pop
sbb
scas
push
jecxz
push
imul
in
ret
mov
imul
mov
scas
sub
js
nop
and
mov
pop
hlt
aam
sub
cmp
icebp
shl
popa
dec
mov
sbb
push
jmp
dec
movs
xchg
push
call
out
out
popa
push
repnz
and
mov
fisub
and
pop
imul
mov
sub
idiv
aaa
je
and
cld
ss
pop
repnz
rol
xor
rcr
or
sub
adc
jns
sar
nop
mov
aam
mov
mul
movs
dec
(bad)
das
mov
and
dec
mov
test
xor
std
push
jmp
dec
popa
inc
outs
cmps
or
sbb
cwde
fdiv
sub
inc
scas
xchg
sub
jmp
cmp
(bad)
xor
mov
jne
lds
sub
cmp
sti
movs
enter
cmp
je
sub
mov
or
mov
and
cmp
push
sbb
into
sub
cmps
aad
gs
ret
mov
loope
mov
sbb
(bad)
rcr
call
or
int3
mov
push
xor
dec
adc
out
shr
shr
cli
ins
or
xchg
retf
pop
stc
mov
cmp
pop
in
add
mov
inc
add
adc
and
pop
scas
out
data16
cdq
ret
cld
ja
aas
push
jno
xor
daa
lods
xor
lock
jmp
mov
loope
fwait
jmp
(bad)
ds
mov
push
call
(bad)
xchg
xor
int3
or
cli
xlat
xchg
cmp
mov
xchg
std
pop
es
stos
push
sub
dec
push
ins
test
jp
stos
xor
or
aad
bound
ss
shl
je
pop
cmp
cmps
test
mov
adc
scas
jge
retf
fstp
jmp
pop
(bad)
(bad)
sub
jle
xor
pop
addr16
xor
clc
and
aam
retf
rcl
mov
(bad)
in
add
mov
retf
iret
fs
scas
add
jo
cmp
add
test
test
(bad)
sub
loop
xor
mov
std
mov
push
imul
and
jnp
mov
jo
inc
and
xchg
ss
hlt
ds
cli
jae
jno
sub
aad
call
mov
cmps
clc
sbb
pop
sub
sbb
jle
xchg
cmp
mov
iret
push
or
stos
das
in
cmp
cld
cmc
outs
sub
inc
mov
imul
mov
ret
mov
mov
add
dec
pop
lahf
add
retf
loope
fcom
push
mov
push
and
enter
sub
or
mov
stc
icebp
and
mov
xchg
mov
jle
cvttps2pi
xor
inc
xchg
jnp
fstp
jmp
daa
xchg
(bad)
popf
cmp
enter
mov
and
jl
fwait
dec
dec
imul
cmps
pop
cmps
in
(bad)
ss
iret
mov
pop
in
add
and
inc
popa
ss
imul
fisub
mov
lds
outs
or
mov
in
and
push
lds
dec
mov
cmps
push
cli
adc
js
jecxz
jno
inc
push
jmp
jecxz
mov
int3
dec
in
in
pushf
ficom
pop
and
std
aaa
cmp
jl
ja
out
inc
or
and
pop
mov
aas
add
mov
add
mov
add
shl
or
mov
sbb
fcompp
fisttp
and
jmp
xchg
push
mov
mov
push
icebp
mov
imul
loop
sbb
pop
sbb
call
pop
cld
icebp
es
pop
push
stc
sub
inc
into
popf
ss
pushf
lock
dec
jle
ror
(bad)
lahf
sahf
shr
push
dec
sbb
mov
stc
bound
and
clc
sbb
xor
jmp
fimul
xchg
ds
cmp
call
lahf
pop
jg
jecxz
mov
mul
ds
sbb
mov
imul
ins
cmp
sub
jp
dec
adc
pusha
and
adc
or
sbb
cmp
leave
mul
pushf
cmps
pop
fidiv
popf
loopne
call
out
jl
inc
lea
adc
into
cmps
adc
xchg
(bad)
fadd
pushf
movs
das
sahf
lock
cmps
movs
repz
push
mov
cmps
or
pandn
mov
jge
inc
or
imul
jmp
out
xor
adc
inc
cld
and
leave
fnstsw
cmp
sub
jno
and
cmp
xlat
xor
aam
dec
arpl
jb
in
shl
fs
enter
fwait
adc
scas
out
cmps
les
icebp
jp
mov
fstp
mov
sbb
(bad)
cdq
loop
mov
test
pusha
mov
add
outs
cmp
mov
jns
mov
shl
mov
es
cli
pop
jnp
or
popf
push
arpl
addr16
lods
mov
jnp
lahf
(bad)
push
cwde
shl
adc
jge
xchg
xchg
xchg
add
ins
out
cdq
lds
mov
addr16
das
jmp
pop
jmp
mov
cmp
mov
ins
dec
call
mov
jns
mov
adc
cmp
enter
add
lods
jae
jns
adc
xchg
repz
push
xor
mov
mov
sbb
add
pop
movs
xchg
daa
cmp
jo
push
lock
sar
sub
imul
stos
outs
sbb
inc
mov
xor
dec
lock
repnz
stos
test
pushf
adc
mov
test
movs
loope
dec
(bad)
sub
adc
push
jo
pop
iret
ins
jbe
add
mov
fcomi
adc
sti
adc
inc
out
fld
pop
xchg
aas
ficom
frndint
ficom
aaa
dec
mov
int
inc
push
adc
int3
push
mov
ds
imul
ret
pop
cmps
jl
int
popa
mov
xchg
cmps
iret
dec
push
push
push
pusha
xchg
mov
inc
(bad)
mov
mov
shl
mov
pusha
stc
stos
lods
stos
xor
enter
jmp
inc
mov
pop
and
movs
in
les
mov
sbb
add
adc
mov
nop
sahf
xchg
lds
fild
in
cmp
movs
je
enter
dec
push
rcl
jne
sub
xchg
push
ds
out
sub
(bad)
jp
mov
or
cs
(bad)
cmp
mov
fmul
sbb
push
ss
or
lods
addr16
cmp
pop
pop
push
ja
inc
test
pcmpeqw
push
cmc
dec
(bad)
fisub
mov
imul
pop
xchg
hlt
call
out
pop
mov
push
hlt
or
ror
test
sti
dec
lods
mov
inc
add
test
scas
xor
push
rcr
push
ror
test
jno
test
xlat
pop
cmp
inc
and
jno
inc
and
sub
push
cld
stos
lock
push
call
mov
jno
cmps
ror
ins
push
arpl
sub
push
and
dec
jae
loop
out
pop
sub
sbb
sub
ret
lock
(bad)
adc
jmp
dec
dec
test
stos
loop
(bad)
fsubr
out
pop
pusha
test
pusha
gs
push
cmpxchg
mov
in
movs
lods
mov
jns
imul
or
dec
and
in
nop
fidivr
retf
int
shl
dec
jle
mov
pusha
mov
xchg
pop
loope
jmp
setb
ja
mov
(bad)
sub
inc
mov
pop
call
lods
call
in
mov
or
or
into
ret
xchg
and
sbb
cli
pop
cli
sbb
jge
in
inc
cdq
or
aaa
or
stc
or
push
cmp
hlt
inc
fdivrp
stc
inc
test
rol
push
adc
xor
loope
retf
aas
std
inc
cmps
mov
inc
ins
test
push
fst
jnp
sbb
or
arpl
mov
push
dec
push
fsub
xchg
dec
pusha
cmp
hlt
pusha
adc
(bad)
xchg
cli
into
int3
int3
xlat
push
loopne
fcmovbe
popa
lods
sbb
jo
(bad)
repz
loopne
push
inc
stos
push
js
retf
(bad)
and
or
mov
inc
cmp
mov
push
xchg
into
daa
fsub
mov
dec
retf
add
sti
test
sti
int
ins
(bad)
loop
icebp
fsubr
call
jb
push
sub
retf
repz
cmps
xchg
or
jbe
mov
test
pop
adc
call
ds
pop
add
sub
in
pop
fsubp
adc
popa
pop
int
mov
cdq
not
xor
scas
jmp
jb
sbb
(bad)
mov
mov
dec
mov
lods
inc
lahf
(bad)
aam
or
mov
imul
pop
je
push
push
jo
mov
movs
mov
adc
pop
xor
les
jecxz
adc
outs
or
pop
mov
add
sub
loop
xchg
imul
stc
mov
dec
jge
imul
cmp
sub
popf
adc
es
pop
imul
pop
lock
jle
js
xchg
mov
adc
xor
lods
pop
call
jb
xchg
call
stos
sbb
mov
sub
lea
enter
arpl
or
ss
clc
or
popf
pop
dec
into
xlat
arpl
mov
cs
dec
movs
icebp
out
out
push
les
xchg
mov
popa
hlt
adc
jl
or
dec
xchg
cwde
icebp
sub
loopne
mov
sbb
mov
lea
jge
jne
inc
mov
pusha
xchg
push
stos
xchg
int3
adc
sti
jns
std
sub
sbb
popa
push
gs
or
popa
mov
pop
pushf
sbb
ror
rcr
and
stos
in
or
mov
cmp
jae
lods
push
sub
push
jmp
pop
aaa
cli
inc
scas
jne
pop
dec
sub
mov
fs
ds
mov
mov
add
jl
outs
in
xchg
mov
inc
loope
(bad)
jnp
ins
xor
xchg
mov
xchg
mov
cmp
sti
mov
pop
push
cdq
pop
test
and
loopne
call
std
lods
aas
mov
dec
push
adc
xchg
dec
push
mov
pop
ret
mov
xor
stos
repnz
inc
sub
sbb
mov
jae
mov
test
das
add
ins
test
cmp
cmc
movs
mov
push
add
pop
mov
add
mov
fnsave
test
shl
xchg
sub
lods
push
sub
mov
fadd
add
cs
xchg
adc
pushf
fcom
js
test
sub
jecxz
(bad)
loop
sub
dec
mov
mov
push
cmp
dec
(bad)
aas
add
shl
jnp
adc
vpmacsdqh
xor
bnd
xchg
push
xchg
inc
das
std
fdiv
push
gs
mov
jg
xchg
mov
mov
jno
dec
in
data16
lods
outs
add
into
test
ds
not
push
mov
sub
mov
int3
jecxz
mov
lahf
add
fld
je
cmc
mov
js
jle
mov
cmps
sbb
inc
sahf
push
mov
and
cmc
pop
pop
add
retf
dec
fwait
outs
daa
sbb
call
jge
xor
out
jno
or
shl
cmc
mov
fsubr
dec
mov
push
lds
jmp
xchg
mov
xlat
cmps
cdq
push
jnp
sub
lahf
rcpps
mov
sbb
(bad)
jne
dec
fldcw
dec
mov
pop
push
bound
adc
push
jo
xor
add
inc
jge
leave
and
push
cmp
stos
and
pusha
dec
outs
or
iret
push
loopne
bound
xor
lods
push
cmc
push
add
sub
aaa
neg
sub
xchg
out
or
and
aad
sbb
jl
sbb
(bad)
jge
sub
jnp
mov
pusha
pop
or
gs
push
inc
add
jo
mov
fild
and
ret
mov
stos
inc
mov
mov
or
pop
jle
xchg
mov
retf
add
add
add
or
int
into
add
xor
cmp
push
cmp
(bad)
call
push
in
add
test
lods
or
popf
pop
arpl
push
push
mov
test
(bad)
imul
pushf
inc
outs
pop
pusha
fld
and
fwait
push
int
pop
std
ins
(bad)
or
xor
pop
push
(bad)
and
dec
inc
pushf
adc
cmp
inc
dec
(bad)
push
mov
loop
cmp
pop
mov
dec
inc
bound
push
movs
inc
pop
push
mov
imul
inc
pushf
xchg
push
mov
int3
cmp
stos
mov
adc
dec
stos
xchg
lods
mov
clc
xchg
mov
in
ret
stc
gs
or
mov
popa
cmps
xchg
add
fdivr
add
and
pop
int
sub
aas
jb
unpcklps
movs
pop
push
sub
xor
(bad)
shl
outs
dec
xor
sti
pop
iret
(bad)
popa
imul
or
movs
pop
jmp
int3
test
sub
xchg
jae
bound
adc
dec
xor
dec
popa
add
xchg
xchg
cwde
in
stos
aad
mov
jbe
dec
sub
mov
rcl
or
div
mov
shl
sub
pop
mov
aam
es
jg
push
pop
pop
fwait
cmp
je
loopne
dec
jle
xor
ja
jge
push
cld
aas
push
sub
xor
nop
pusha
outs
sub
xchg
ss
mov
push
imul
cs
jp
aas
add
ror
enter
stos
cmc
mov
push
and
and
aaa
and
jmp
sub
sbb
add
popa
jmp
mov
push
inc
xlat
lds
xchg
mov
pop
mov
cmp
jmp
cld
popa
xchg
movs
mov
jp
dec
lds
push
outs
mov
cmp
imul
in
div
stos
sub
sti
mov
jmp
int3
or
dec
retf
in
mov
imul
dec
in
inc
mov
add
pop
out
rol
lahf
retf
lahf
out
sub
mov
push
adc
mov
aad
(bad)
stos
mov
jne
and
frstor
js
push
mov
dec
inc
pop
in
mov
xor
xor
sub
aam
push
es
add
iret
daa
jo
loopne
in
sbb
pop
dec
out
jge
in
(bad)
cmps
or
cld
rcl
sub
jmp
(bad)
jmp
sbb
mov
mov
les
push
loopne
in
movs
mov
push
jge
cmp
(bad)
fwait
cmp
out
movs
jmp
xchg
test
push
outs
mov
add
ret
adc
stos
inc
xchg
or
(bad)
stc
or
rol
aam
push
push
cmp
xchg
call
popf
ins
and
xor
xor
mov
pop
inc
jae
or
mov
xchg
data16
stc
dec
pop
pop
out
pushf
fimul
adc
xchg
push
shl
jbe
and
in
or
not
arpl
cmp
sbb
ret
jmp
clc
push
jp
stos
xor
sub
mov
push
call
mov
xor
sbb
(bad)
shl
clc
sbb
stos
mov
jg
jbe
call
mov
adc
inc
arpl
ja
outs
ins
pop
pop
test
or
inc
and
pop
xchg
(bad)
push
pop
sbb
repnz
es
cdq
add
cdq
mov
pop
iret
cmp
mov
pop
bnd
push
ins
push
lock
aas
xlat
test
les
sti
neg
sbb
sbb
xlat
push
inc
add
retf
cmp
ins
fidiv
ins
es
in
and
push
xchg
ror
or
mov
mov
mov
fucomi
std
inc
movs
pop
loopne
out
jo
neg
lock
ss
jg
sti
mov
mov
(bad)
popf
sbb
xor
jle
pop
je
mov
out
shl
(bad)
xchg
cmps
ins
adc
int
dec
out
call
jecxz
pop
dec
add
push
in
out
mov
mov
cmp
pop
adc
add
test
add
inc
and
add
mov
out
fnstsw
nop
dec
ins
aad
bound
adc
cmp
cli
inc
shl
lahf
adc
sub
dec
add
jno
pop
mov
dec
data16
push
repz
lock
mov
popa
aaa
sti
shl
daa
sahf
jmp
out
sbb
sbb
and
shl
dec
inc
pushf
aam
or
lock
or
retf
adc
xchg
cmps
pop
sub
jle
jmp
and
adc
inc
push
loop
sbb
movs
inc
push
test
mov
repz
dec
je
out
loopne
push
xchg
mov
fstp
or
xchg
ss
pop
xlat
data16
in
outs
xor
sub
outs
aam
cmp
push
xchg
jo
mov
xor
add
adc
inc
aaa
jmp
ror
add
or
ret
jae
shl
(bad)
add
push
(bad)
xor
add
mov
mov
sub
pop
push
std
sbb
push
push
xchg
std
lahf
inc
sbb
pop
pop
lock
fucomip
pop
cmp
sub
inc
push
fidivr
stos
and
mov
pusha
loopne
pop
sub
and
fwait
dec
mov
push
push
xor
je
mov
pop
jl
pop
lods
sub
push
call
test
loopne
inc
mov
jmp
pop
adc
jmp
and
xor
stos
inc
pop
jle
cs
fisttp
jmp
jns
mov
ins
retf
adc
xchg
stc
aas
cld
add
int3
std
dec
out
das
fld
std
pop
sbb
push
sbb
jno
fnsave
bound
sbb
or
out
fs
fmul
fdivr
push
mov
arpl
test
mov
scas
push
pop
imul
or
ret
out
xor
xor
pop
daa
fs
add
push
retf
gs
sub
cmp
mov
imul
mov
xchg
rol
setp
retf
add
test
cdq
aaa
gs
lds
ret
adc
and
jg
fs
(bad)
mov
shl
lock
ror
dec
cwde
icebp
out
daa
jg
jl
lock
outs
icebp
sub
or
retf
retf
pop
sbb
mov
mov
popf
stc
cmp
icebp
icebp
das
cdq
outs
pusha
loop
lods
mov
mov
out
movs
movzx
fistp
inc
push
stos
outs
fmul
in
fbstp
cmp
mov
dec
push
xor
or
xor
mov
sbb
push
icebp
cmp
retf
movs
repz
adc
js
std
adc
fsubr
aaa
mov
sbb
fmul
js
xchg
daa
lahf
lea
mov
fwait
test
inc
add
(bad)
arpl
xlat
aad
mov
dec
and
pop
add
or
mov
stos
xchg
movs
js
leave
fsubr
mov
sbb
jb
cdq
mov
arpl
fcomp
das
mov
shl
bound
push
pop
popa
call
repz
sbb
hlt
mov
and
xchg
jmp
sbb
imul
hlt
cmp
fwait
lea
adc
(bad)
sbb
push
or
aam
inc
xchg
push
out
cmp
mov
mov
add
mov
pop
push
ja
clc
es
jmp
ret
inc
(bad)
repz
ds
cmp
addr16
ins
aad
imul
lock
fdivr
je
scas
and
out
adc
fild
imul
int3
scas
cmp
aam
sub
jo
paddw
jp
pop
xchg
and
dec
xor
sub
and
pop
addr16
fild
jp
push
mov
out
dec
aad
test
movs
add
jl
imul
pop
mov
icebp
xchg
sbb
push
fidivr
mov
pop
rcr
and
xchg
push
out
out
push
(bad)
fcmovnbe
loopne
mov
not
xchg
ss
sbb
and
mov
std
fistp
pusha
in
ret
adc
jmp
xchg
in
xadd
sbb
mov
ja
shr
and
stos
mov
ds
sbb
xor
adc
jg
mov
ret
les
inc
jno
(bad)
and
ins
lds
or
cdq
pushf
aas
adc
cmp
stos
out
movs
pop
jmp
lea
int3
dec
and
push
mov
xchg
xchg
push
out
lds
aas
push
xor
sub
xchg
mov
cli
into
pop
jmp
and
jg
push
add
je
loope
xlat
dec
call
dec
or
ss
cmp
adc
ret
es
hlt
mov
mov
jl
in
xor
push
dec
add
adc
test
lea
push
dec
loope
or
pop
outs
icebp
cmps
xchg
popf
ds
iret
cli
lahf
retf
push
in
dec
xchg
xor
mov
mov
jl
adc
aam
or
jge
ss
mov
inc
dec
inc
test
(bad)
jmp
leave
lock
call
jecxz
call
(bad)
test
bound
test
mov
repnz
leave
and
push
xchg
iret
(bad)
mov
pop
inc
dec
xor
dec
sti
(bad)
push
jno
lds
int3
aaa
sub
push
jl
ins
test
sbb
adc
adc
ror
ror
int3
push
mov
lea
jb
hlt
test
cdq
sar
or
shl
xchg
fwait
inc
cmp
cmp
and
(bad)
jo
xor
pusha
xchg
iret
jl
shl
dec
push
or
pushf
ret
mov
aam
scas
inc
popa
outs
mov
mov
mov
icebp
bound
mov
retf
mov
push
push
and
push
sbb
out
and
xchg
adc
and
mov
out
and
and
sbb
jg
bound
or
inc
adc
daa
fld
and
outs
push
inc
pop
(bad)
imul
push
xor
lock
fwait
lods
popa
dec
sub
mov
and
in
outs
or
push
push
(bad)
pop
imul
xlat
into
adc
iret
mov
add
(bad)
repz
sub
scas
clc
xor
out
mov
adc
shl
les
ds
sti
cmp
int
stos
mov
inc
fwait
or
outs
push
rcr
retf
cmc
js
add
xchg
rcr
(bad)
push
fdivr
out
add
ret
sbb
pop
sub
or
int3
dec
sbb
popf
repnz
mov
or
pop
sbb
cmc
and
cli
xchg
jno
lock
cmp
fwait
je
scas
xchg
cmc
test
iret
adc
pop
jb
pop
mov
les
int3
mov
jp
pusha
popf
(bad)
jne
sbb
mov
and
retf
cwde
sar
jo
sbb
dec
push
inc
mov
sbb
pop
mov
xlat
icebp
stc
xor
cmp
add
push
sub
es
sahf
imul
adc
out
lods
sbb
pop
cmp
and
adc
(bad)
mov
js
imul
sbb
xor
aaa
sub
movs
ficomp
in
sbb
shr
int3
and
lea
mov
add
(bad)
jmp
cwde
fisub
and
adc
cmps
aad
and
dec
in
cs
outs
push
or
dec
cs
inc
jecxz
and
scas
arpl
pop
fs
jae
cmp
js
adc
imul
aas
scas
mov
hlt
pop
push
inc
adc
std
sub
inc
movs
xor
push
les
(bad)
int3
xchg
mov
sub
pop
jnp
sub
rcr
cs
test
cmp
mov
xchg
cld
sbb
jmp
fdiv
dec
es
xchg
stos
and
call
mov
inc
sbb
shr
pop
push
call
mov
and
jecxz
loopne
(bad)
out
push
inc
enter
jmp
iret
sub
sbb
outs
out
sub
add
hlt
or
cmp
pop
bound
mov
mov
ins
push
leave
jo
(bad)
inc
cmp
scas
fisttp
adc
repz
push
test
repnz
and
test
ins
lods
cs
into
mov
or
pop
in
pusha
push
inc
ss
in
pop
fidivr
cwde
(bad)
mul
push
push
mov
bound
ins
add
mov
(bad)
xor
loope
retf
cmp
mov
jp
cmps
aaa
std
popa
adc
repnz
scas
scas
jbe
and
popf
dec
cdq
dec
stc
pop
rcr
jecxz
jmp
add
enter
ret
fsubr
call
std
ss
cld
jmp
aad
icebp
hlt
add
mov
inc
sub
push
lock
scas
shl
mov
loopne
push
dec
cdq
jbe
addr16
cmps
scas
bound
ss
(bad)
icebp
imul
dec
mov
and
and
cmps
lahf
cwde
daa
aam
sidtd
jnp
ja
in
mov
sub
sub
mov
mov
int3
imul
call
popf
cmc
cld
arpl
lar
mov
or
jns
dec
and
dec
in
adc
into
les
sbb
adc
push
ror
in
jge
xor
pop
xchg
shl
ss
dec
(bad)
jns
repz
push
jo
jb
(bad)
loopne
sub
cli
repz
addr16
in
mov
enter
leave
jmp
jl
call
dec
movs
stos
inc
jmp
dec
stc
push
fwait
lods
or
jo
pop
xchg
mov
into
jmp
and
and
xchg
fstp
mov
stos
hlt
cmp
push
cmps
inc
leave
and
adc
pop
ins
mov
mov
cmps
test
out
fcom
jmp
(bad)
sub
cdq
data16
scas
jae
in
push
cmc
(bad)
mov
sti
and
mov
mov
test
inc
pop
retf
sar
cdq
fs
mov
dec
stos
dec
cmp
mov
cmps
mov
fisubr
out
jns
jae
aad
lahf
adc
mov
or
adc
cdq
mov
or
outs
data16
(bad)
and
ror
ds
lds
mov
sbb
data16
sbb
enter
mov
cld
call
add
sbb
or
inc
dec
dec
dec
sbb
or
cmp
in
mov
enter
push
mov
cmp
sub
jo
dec
cs
mov
jns
jae
jbe
rcr
and
imul
adc
push
sub
ret
nop
aaa
dec
pusha
pop
dec
pop
pop
mov
sbb
icebp
sub
std
je
arpl
mov
lock
movs
ror
mov
pusha
fcomp
(bad)
fist
enter
mov
das
jns
pop
ret
cs
cmpxchg
shr
in
aam
or
loopne
xchg
test
push
pop
in
push
cld
sub
mov
loop
mov
pusha
aad
add
jns
xchg
mov
js
and
and
sahf
lock
pop
jge
pop
idiv
test
int
jnp
pop
and
enter
cmc
sbb
rcr
ret
outs
pop
or
mov
mov
mov
and
retf
std
cdq
rcl
pop
pop
cld
leave
pop
bound
out
sbb
dec
or
or
pop
ret
enter
pop
test
test
inc
fst
pop
out
xor
jge
loop
adc
rcr
dec
dec
mov
inc
pushf
outs
out
and
jmp
call
inc
out
pop
dec
or
retf
sub
mov
cli
pop
mov
mov
dec
out
rcl
xor
mov
jmp
sahf
fmul
rol
sti
out
push
mov
add
mov
(bad)
and
sub
adc
mov
cmp
cs
mov
rol
mov
add
adc
inc
dec
test
ficomp
push
add
mov
(bad)
lods
lea
mov
xor
xlat
or
fdivr
fisub
xchg
adc
jg
lea
cmps
lds
push
mov
add
dec
test
cmp
in
retf
and
dec
push
adc
sub
rcr
(bad)
pop
(bad)
into
xchg
adc
push
cwde
fistp
and
dec
mov
lea
sbb
jns
(bad)
(bad)
fisub
jecxz
inc
mov
fisub
(bad)
cli
jmp
cmp
cwde
cmp
data16
in
cmps
shl
js
push
jbe
xor
data16
push
les
push
loop
or
adc
inc
out
xchg
dec
push
and
and
loopne
sub
js
sbb
jg
and
jns
mov
adc
and
mov
cmp
mov
jbe
xchg
sub
xor
inc
sub
(bad)
jne
lds
inc
fidivr
arpl
popa
and
xor
push
ror
sbb
jmp
in
and
movs
sbb
mov
cmps
mov
fs
adc
xor
loopne
xchg
imul
add
dec
pop
mov
fldenv
test
enter
jp
mul
cmp
cmc
lea
pop
add
fisttp
ja
int
shr
push
leave
cmp
ficomp
jno
pop
aad
imul
aad
(bad)
fldcw
cmp
jg
imul
or
lock
mov
into
push
sbb
gs
push
adc
in
xchg
pop
ret
dec
and
or
inc
jno
jmp
call
adc
daa
or
(bad)
in
je
xor
add
push
test
into
into
inc
jle
je
mov
inc
loop
cwde
sbb
lds
sbb
mov
movd
jmp
cmps
gs
mov
popf
dec
jns
and
bound
fs
xor
pop
cmp
jge
or
ror
cmc
pop
clc
inc
or
adc
(bad)
lea
mov
jmp
leave
ins
pop
mov
xlat
pop
iret
popa
jbe
mov
sbb
enter
push
adc
pushf
cmp
ror
mov
add
ret
cmp
das
push
jnp
outs
pushf
mov
out
(bad)
adc
pop
mov
ins
xor
(bad)
dec
adc
push
xchg
sti
daa
aaa
hlt
out
jl
or
jns
push
or
shl
xor
(bad)
pop
sub
jne
and
ds
iret
or
leave
jge
repnz
cmp
or
imul
test
dec
fnsetpm(287
inc
popa
or
out
daa
in
xlat
sahf
push
scas
test
mov
das
sub
dec
dec
xchg
mov
popf
push
sub
push
xchg
add
sub
and
add
sub
xchg
jecxz
push
scas
mov
pop
fs
add
sub
push
add
sub
shr
dec
mov
push
imul
loope
popf
inc
mov
stos
mov
xor
jmp
and
mov
popf
xchg
and
adc
xchg
xchg
scas
inc
mov
shl
mov
loope
(bad)
and
in
jmp
jo
mov
inc
test
scas
push
sbb
xchg
jp
xchg
sbb
int3
and
xor
out
cmp
pushf
jnp
xor
cmp
adc
fst
add
pop
push
outs
sbb
cli
int
inc
daa
lods
inc
pop
(bad)
sub
sbb
iret
jmp
movs
mov
add
mov
mov
mov
cmps
(bad)
xor
and
cmps
or
mov
ins
int3
pop
test
and
xor
jmp
in
retf
cld
sti
mov
sub
mov
dec
sub
int3
sub
dec
push
loop
push
es
xor
nop
jge
aad
jb
aaa
or
fmul
fmul
xlat
out
neg
sbb
shl
in
loopne
inc
imul
mov
push
push
mov
mov
push
sub
sbb
jmp
retf
bswap
xchg
movs
in
cmp
sub
test
sbb
xor
pop
hlt
ja
pop
sbb
mov
cmps
js
inc
(bad)
push
aam
loopne
sbb
jbe
call
inc
xchg
mov
sbb
xchg
mov
ins
pop
imul
inc
push
aas
adc
scas
sahf
xchg
cmp
inc
add
jle
mov
sub
pusha
ror
mov
pushf
clc
into
inc
push
jns
sti
ficomp
int3
mov
out
jbe
icebp
outs
push
mov
jns
inc
pop
iret
pop
mov
ins
mov
out
jle
pop
iret
inc
call
cmp
or
mov
ss
jmp
xor
jp
in
push
jns
mov
push
push
pop
inc
je
call
add
bound
rcl
movs
mov
into
test
repz
sbb
jecxz
sub
mov
jnp
jne
mov
xchg
jbe
int3
inc
xor
sbb
dec
aad
jno
loop
and
add
in
popa
mov
aad
neg
mov
or
mov
je
aad
add
ds
jle
adc
or
stc
dec
xchg
pop
push
loop
xchg
rep
imul
xor
adc
mov
daa
ss
mov
inc
and
or
scas
out
mov
call
ds
add
sbb
cmc
push
dec
cmp
push
movs
jecxz
out
sahf
xchg
add
sbb
pop
pop
xor
lea
add
xchg
or
ins
xchg
mov
fwait
and
outs
imul
test
cs
pusha
dec
int3
dec
fisubr
fild
mov
(bad)
mov
aaa
iret
inc
(bad)
outs
test
(bad)
aad
cli
aad
inc
mov
dec
xor
mov
inc
pop
leave
mov
or
and
in
imul
cmc
adc
stos
fs
pop
inc
stos
xchg
repnz
scas
mov
mov
push
sub
out
or
dec
jmp
mov
daa
popa
aam
call
sub
xor
dec
leave
sub
or
mov
pop
mov
lds
add
jmp
xlat
xchg
test
sub
jmp
outs
xchg
aas
sub
jmp
jbe
lea
ror
xor
clc
pcmpeqw
retf
xor
jg
jne
(bad)
dec
(bad)
aam
(bad)
and
test
push
cdq
pop
jl
push
push
push
xor
ror
popf
in
adc
clc
cmps
xor
mov
test
ds
mov
add
mov
stos
aam
lds
lods
inc
jbe
cmp
gs
or
popa
ret
push
mov
jp
aas
adc
add
nop
ftst
pop
fld
cdq
std
mov
add
mov
pop
or
fld
or
(bad)
fisttp
fcomp
shl
add
fiadd
xchg
leave
(bad)
cdq
stos
add
adc
shl
(bad)
es
rol
xor
sub
dec
or
mov
popa
jmp
adc
push
add
mov
xchg
ja
nop
enter
and
sbb
repz
test
repz
add
mov
adc
sbb
inc
stos
call
pushf
and
das
xchg
xchg
pop
rcr
inc
push
test
sub
mov
jge
xor
sub
enter
adc
dec
mov
stos
push
and
dec
gs
push
push
cwde
call
cmpxchg
clc
into
(bad)
xchg
shl
mov
inc
mov
int3
(bad)
leave
in
xchg
fst
dec
enter
jns
mov
aaa
pop
ins
call
add
xchg
les
int
add
mov
repz
inc
dec
sub
mov
mov
xchg
adc
dec
jns
iret
mov
mov
mov
push
ret
stos
mov
inc
add
loopne
imul
pop
outs
sub
mov
les
ss
pop
pop
lods
daa
loopne
shr
inc
mov
mov
adc
or
cld
or
add
in
pop
mov
mov
inc
mov
dec
lock
push
mov
sbb
mov
mov
nop
stos
fisttp
jbe
mov
adc
loopne
xchg
retf
pop
and
std
mov
pop
xor
out
popa
pop
mov
dec
push
lods
cdq
cmc
outs
mov
shl
cmps
mov
loopne
or
(bad)
jns
xchg
add
int
movs
js
dec
jl
inc
pop
fcmovne
sub
pop
pop
pop
add
xor
fist
cmp
movs
or
loopne
not
ret
inc
loope
shl
xlat
jg
jae
call
loopne
pushf
loop
jns
loope
pop
je
mov
or
jg
stos
lods
and
aam
dec
mov
retf
push
pop
outs
add
iret
and
mov
add
fwait
sub
test
dec
(bad)
xor
lahf
mov
ret
bnd
lea
jnp
push
cmp
sub
daa
push
mov
mov
neg
daa
adc
jmp
mov
mov
cmps
mov
in
pop
push
ins
pop
cs
mov
gs
xchg
mov
sbb
aas
mov
into
jle
jbe
pop
xchg
inc
aas
(bad)
cmp
and
lock
cwde
arpl
stos
xchg
in
imul
in
mov
add
jmp
xchg
call
pop
shl
jnp
lods
cs
gs
sub
add
lods
mov
fnstcw
ss
jle
mov
stos
and
outs
je
cdq
jbe
(bad)
cdq
mov
xchg
fimul
or
outs
out
xchg
mov
shr
stc
sbb
ins
inc
(bad)
push
in
add
xor
das
mov
in
xchg
cmc
imul
fstp
sub
mov
test
in
stos
pop
xlat
sbb
xchg
pop
pop
movs
lods
shr
(bad)
push
jecxz
xchg
xchg
(bad)
cwde
jl
pop
xchg
xchg
add
test
repz
inc
cwde
inc
add
mov
jle
in
xchg
mov
pop
fadd
add
cld
icebp
ret
mov
dec
sar
or
pushf
repz
das
test
xor
es
test
inc
popa
std
inc
push
xchg
add
pop
add
mov
retf
test
retf
in
jle
ds
sub
aad
shr
mov
mov
dec
daa
rol
add
repz
push
popf
mov
and
lea
in
jle
mov
stos
scas
mov
xor
or
inc
add
aam
cmc
clc
stos
lea
je
mov
cmps
pop
fdiv
imul
jnp
pop
rol
cmp
out
daa
xchg
test
aad
(bad)
retf
lods
pop
test
cmp
inc
test
out
xor
out
sub
sbb
les
shl
mov
(bad)
ror
jecxz
mov
jmp
or
sub
pop
push
sub
or
sbb
aas
cmp
cmp
sbb
ss
dec
sub
jo
and
test
imul
push
std
ret
ffree
clc
dec
ins
aas
inc
jge
mov
mov
mov
imul
cmp
or
cs
repnz
jl
jo
xchg
pushf
stc
cmp
adc
rol
sbb
dec
xor
cmp
cmps
into
repnz
test
lock
inc
add
jb
sbb
inc
cld
out
adc
lds
mov
scas
or
xchg
hlt
jp
stos
mov
cdq
dec
daa
imul
loopne
mov
xor
jno
jp
mov
lea
jmp
push
mov
push
out
or
daa
sub
imul
in
sub
push
repz
xchg
push
mov
mov
mov
cwde
das
mov
call
xor
div
push
pop
sbb
les
ins
mov
adc
push
ins
xor
push
mov
push
ret
aad
xchg
mov
xor
ror
call
shl
xor
stos
pop
sub
add
push
jae
(bad)
jp
aas
xchg
scas
loopne
push
jmp
jno
xchg
dec
fcomp
add
mov
and
scas
scas
aad
inc
int
sar
dec
dec
jno
test
cmp
in
xchg
sbb
xchg
ja
jg
mov
add
das
mov
(bad)
and
or
jnp
(bad)
repz
fsubrp
ins
pushf
fsubr
and
mov
scas
cld
clc
push
pop
jbe
hlt
cs
mov
cmps
sti
sub
push
in
mov
cs
mov
jl
scas
inc
push
jecxz
pop
sbb
aad
hlt
js
out
and
dec
hlt
adc
jae
nop
or
pop
dec
out
xchg
dec
int
aaa
cmp
iret
into
bound
sar
shl
cmp
jns
cld
jbe
and
pusha
bt
mov
mov
or
sub
in
call
out
add
adc
pop
into
mov
xchg
lds
xor
inc
test
and
call
jns
mov
inc
adc
jns
pop
leave
outs
stc
(bad)
(bad)
mov
xchg
inc
cmp
aaa
popa
mov
outs
and
stos
fwait
loopne
push
aaa
retf
push
mov
aam
adc
arpl
sub
dec
addr16
jns
call
cmps
pop
outs
cmc
push
lods
jbe
xchg
out
rcl
xor
les
and
mov
mov
lods
jo
fnsave
scas
jnp
cmc
adc
jp
xor
gs
into
mov
jb
pop
mov
cli
out
jecxz
dec
or
push
xchg
cmp
dec
fbstp
cmps
(bad)
add
inc
lahf
add
fsubr
and
les
(bad)
push
fs
fwait
fwait
adc
jbe
dec
loopne
pop
les
cmps
inc
pop
pop
je
add
fnsave
pand
pop
int
pop
repz
aaa
shl
or
and
loope
movs
test
cdq
dec
test
dec
icebp
ficom
fidiv
push
aam
stos
add
pop
dec
aaa
xor
and
pop
(bad)
call
(bad)
xchg
ins
sub
or
mov
sbb
jns
jmp
fsub
aad
jae
popf
inc
cmp
cdq
(bad)
adc
out
and
pop
add
mov
mov
dec
nop
pop
xchg
aaa
imul
mov
ja
out
mov
movs
ficomp
push
fimul
and
popf
mov
(bad)
mov
cwde
shl
mov
mov
sbb
xchg
arpl
inc
mov
sub
fdiv
enter
mov
sbb
imul
add
fsubr
jl
loop
pop
daa
sbb
sub
mov
or
outs
mov
jno
cld
mov
jl
js
mov
push
icebp
or
jmp
dec
mov
(bad)
fisub
sub
xor
push
jb
fadd
push
shr
inc
pop
mov
retf
inc
adc
enter
repnz
sub
dec
nop
iret
add
mov
js
cmp
push
jmp
pusha
data16
xchg
jle
enter
push
jbe
add
out
jg
jmp
jmp
mov
cmp
bound
mov
inc
mov
test
aas
sub
and
loop
addr16
or
call
scas
sbb
xlat
add
sub
add
mov
fidiv
add
test
movs
dec
mov
xor
mov
in
lods
sar
int
lock
sbb
test
cmp
push
scas
jbe
in
clc
cmp
ja
add
sub
push
iret
xchg
push
lahf
xchg
jne
push
adc
push
loope
enter
and
mov
in
sbb
rol
mov
cmp
mov
(bad)
mov
(bad)
stos
in
ficomp
stc
jne
popa
mov
sub
push
adc
sbb
push
cld
and
sbb
cld
inc
inc
fs
push
lods
or
and
test
mov
mov
jo
imul
ins
test
xchg
and
lods
cli
ins
bound
xchg
dec
jecxz
xor
addr16
mov
retf
cmp
movs
sbb
pop
lahf
je
fdivr
iret
push
popf
and
(bad)
dec
pop
sub
push
js
int3
pusha
xor
call
or
push
jae
lds
add
fidivr
popf
jns
jns
arpl
scas
(bad)
mov
enter
xor
xchg
popa
inc
mov
dec
shl
mov
out
adc
lods
shl
cli
sub
movs
gs
shl
out
dec
jbe
pop
mov
test
dec
push
out
push
mov
ret
push
mov
inc
xor
aas
push
sub
xchg
xchg
cmp
push
or
mov
call
add
addr16
test
and
loopne
pop
dec
cmp
mov
sub
int
out
mov
(bad)
push
sbb
add
les
(bad)
cmp
movs
or
push
jmp
xchg
push
aam
rcr
add
xchg
cmp
push
dec
loope
sbb
mov
mov
push
out
jo
cmp
mov
xchg
xchg
imul
lock
sbb
retf
loopne
dec
inc
or
sbb
outs
dec
cmp
stos
add
or
push
cdq
mov
ins
jmp
xchg
es
dec
add
in
mov
and
in
mov
mov
js
and
inc
jno
adc
fsub
scas
mov
outs
leave
adc
sub
fmul
icebp
push
out
mov
aaa
pop
cmps
lock
sahf
enter
xchg
jge
inc
pop
mov
xor
mov
retf
push
inc
retf
xlat
jge
pusha
jl
mov
dec
cld
std
pushf
retf
jns
add
xchg
mov
or
in
popf
stos
outs
lods
ss
adc
push
fwait
adc
sub
and
xlat
jns
out
xor
sbb
fldenv
and
jl
inc
iret
stos
push
push
mov
add
push
dec
enter
ror
push
jno
pop
neg
inc
adc
or
sub
cmp
fwait
adc
cwde
aam
adc
movs
outs
push
aad
or
and
mov
xor
add
xchg
push
not
(bad)
aas
jp
xchg
pop
mov
pop
mov
cmc
out
add
stos
scas
xchg
(bad)
repnz
xor
cvttps2pi
inc
inc
jge
lods
nop
aam
xchg
outs
stos
leave
fbld
push
pop
mov
or
adc
mov
add
adc
inc
daa
cmp
xchg
push
in
lock
jae
cmps
jne
add
stc
out
mov
aaa
ret
sub
out
loop
and
ins
cmc
mov
loop
xor
jno
xor
out
les
in
jge
add
out
mov
jp
mov
cmp
test
movs
cs
test
outs
cmp
and
jo
aam
adc
xchg
pop
mov
inc
fidiv
xchg
dec
mov
mov
iret
pop
and
aas
dec
fs
int3
je
jg
sbb
aaa
out
cmp
daa
mov
jle
rcl
pop
outs
call
inc
push
hlt
jb
add
(bad)
fldcw
push
cmp
cmp
sbb
push
pop
call
enter
mov
jg
add
jnp
sub
fcmovne
mov
(bad)
mov
sbb
enter
sbb
test
(bad)
out
push
and
icebp
cs
sbb
mov
xor
inc
jae
mov
dec
call
or
sbb
ins
in
fld
fbstp
jp
cmp
fimul
lods
aad
clc
push
mov
cmps
ins
or
dec
lds
or
add
lahf
push
xor
pop
das
xlat
scas
or
loop
xor
leave
mov
sahf
xor
lds
jle
push
inc
lea
fcomp
sar
shl
add
push
sub
push
outs
and
mov
jmp
sub
inc
push
sub
repnz
push
dec
stos
cmp
add
call
(bad)
in
adc
dec
cmc
aam
std
and
test
xor
cmp
or
and
adc
aaa
cli
popa
inc
jne
or
cwde
leave
lods
and
outs
call
jb
in
out
xchg
push
mov
out
jae
addr16
out
xchg
mov
cmps
pop
pop
xchg
popa
sbb
mov
push
sbb
shl
je
push
inc
add
stos
add
ret
jmp
iret
pusha
or
ret
and
pop
setnp
jne
lods
inc
repz
mov
retf
mov
cmc
jno
call
add
mov
imul
sti
fstp
outs
out
stos
bound
jl
adc
jne
test
xchg
inc
cwde
mov
pop
outs
mov
pop
pop
cmp
leave
sub
sbb
js
out
jne
dec
cld
rcr
out
xchg
mov
stos
add
jno
pop
push
call
cli
dec
dec
xor
stos
in
push
(bad)
push
shl
jbe
pushf
out
stos
mov
data16
idiv
ret
inc
push
jae
loope
mov
or
ins
imul
in
cmp
shl
loopne
test
mov
pop
popa
out
int3
call
dec
and
shl
mov
icebp
mov
outs
mov
and
(bad)
gs
mov
ss
dec
mov
ret
push
clc
movs
push
and
arpl
inc
cwde
mov
std
gs
inc
iret
pop
(bad)
neg
cld
jg
shl
mov
fimul
xor
stos
jno
dec
lods
inc
push
mov
ss
aam
mov
loop
pop
popf
cmp
cwde
cwde
add
xchg
mov
sbb
xor
mov
idiv
loopne
push
pop
fs
ret
and
adc
inc
sahf
cmc
mov
retf
clc
cmp
xchg
xchg
jl
jmp
jmp
fld
dec
outs
mov
jns
jle
nop
arpl
fcmovb
pop
pop
push
add
in
psllw
daa
aas
push
mov
lea
dec
inc
outs
xor
ds
gs
mov
popf
ss
out
aas
leave
out
imul
loop
xchg
pushf
xchg
add
mov
mov
sbb
gs
mov
bound
dec
cmp
cmp
ss
and
cli
sahf
xor
pop
xor
push
mov
mov
iret
pop
lahf
or
(bad)
div
sub
sbb
or
add
sub
int
sub
call
pop
ret
ds
pop
aaa
shl
push
inc
(bad)
(bad)
dec
in
pop
xchg
icebp
jb
pop
retf
jg
sub
mov
inc
retfw
or
les
neg
sub
pop
pop
stos
shl
pop
cmp
adc
data16
popf
rcr
mov
inc
ss
ficomp
cmc
imul
es
mov
movs
inc
popa
imul
mov
repnz
fwait
xchg
xchg
inc
add
or
js
enter
int3
loopne
shl
adc
rol
cwde
mov
movs
dec
mov
cmp
sub
dec
je
pop
fadd
or
arpl
sub
add
stos
sub
popa
inc
sar
pop
jns
mov
xor
ret
sbb
and
xor
(bad)
pop
mov
je
push
test
jne
add
icebp
jl
mov
movs
call
fsubr
xlat
pop
loope
sbb
(bad)
pop
cli
and
out
ficom
pop
or
inc
and
lahf
sahf
jns
mov
jno
test
dec
or
in
ss
inc
(bad)
imul
or
outs
inc
mov
or
ret
inc
jnp
cmps
xor
js
inc
out
(bad)
sub
mov
mov
js
nop
add
push
test
rol
cld
dec
sub
or
push
or
push
test
fisubr
xor
add
inc
sti
loop
in
movs
sbb
int
pop
aam
leave
faddp
daa
cmp
push
adc
jmp
fld
repnz
push
nop
ret
sbb
inc
mov
fadd
daa
fcomi
sub
jge
stos
push
mov
call
adc
or
add
(bad)
inc
mov
sub
cmp
sbb
test
xor
in
push
and
xlat
pop
mov
lahf
jnp
call
pmaddwd
fist
jbe
xchg
jge
shrd
out
adc
cmp
rcl
out
int
imul
mov
add
pop
cmp
pop
inc
jae
push
pop
sub
gs
jmp
jnp
(bad)
div
cdq
fwait
imul
sub
imul
jbe
fistp
jno
mov
jb
int
les
cmp
call
test
sub
or
mov
mov
nop
pop
(bad)
xor
mov
and
les
push
cld
into
loop
fisubr
je
fidiv
vmovhpd
and
xor
lods
sbb
nop
inc
fadd
dec
dec
popf
pop
mov
xchg
out
sahf
mov
sub
sub
inc
xor
iret
xchg
popf
and
sub
mov
xor
js
out
inc
jmp
push
dec
xchg
stc
fimul
gs
mov
mov
xchg
push
jl
add
mov
adc
cmp
xchg
fwait
xor
pop
bnd
pop
jb
xchg
leave
ds
mov
xchg
cwde
adc
sbb
pusha
imul
cmp
mov
fwait
inc
sahf
aad
in
shr
hlt
cli
pop
jmp
or
pusha
mov
sub
scas
mov
pop
sbb
xchg
mov
(bad)
in
rcl
repz
or
inc
push
je
addr16
in
adc
add
dec
retf
out
daa
pop
and
repnz
fsubr
push
and
fldenv
mov
add
add
stc
pop
aaa
in
xchg
bound
xchg
inc
add
jmp
and
push
mov
add
cmp
or
bound
ins
sub
push
ror
xor
pushf
icebp
loope
data16
lds
xchg
ror
inc
scas
sbb
adc
loop
loope
mov
mov
arpl
fstp
jle
es
imul
scas
jmp
and
scas
jle
mov
push
sbb
xor
es
pop
imul
sub
ja
daa
jmp
pop
mov
jae
jmp
aas
imul
(bad)
jl
les
ss
mov
mov
arpl
out
jmp
popa
cmp
cmp
int
jo
add
mov
out
and
retf
scas
nop
std
cld
rcl
push
aaa
jg
fst
(bad)
das
mov
fwait
rol
clc
call
xor
ret
data16
push
ins
pop
lahf
pop
popf
fnstcw
aas
leave
lahf
or
or
leave
jo
aas
nop
adc
int
cmp
ret
outs
mov
sub
cmp
(bad)
or
dec
xchg
les
dec
xchg
inc
xor
mov
sbb
mov
sbb
add
or
shr
ret
addr16
jo
xchg
lea
repnz
popf
xchg
cmps
test
push
dec
inc
sbb
dec
sub
inc
in
push
(bad)
push
jg
adc
lea
fiadd
dec
jmp
xor
jne
into
daa
adc
mov
sub
push
ds
repz
cmp
adc
dec
pop
and
rol
(bad)
mov
mov
mov
jp
fnstcw
sbb
mov
pop
mov
xor
or
and
ror
or
sahf
inc
dec
and
push
dec
cmc
dec
xchg
cld
xchg
adc
cld
or
repz
xchg
pop
push
xchg
fs
test
add
bsf
mov
pop
(bad)
std
mov
fimul
lds
daa
add
in
int
xchg
std
xchg
cwde
adc
add
pop
repnz
xlat
pop
and
pusha
push
cwde
sub
out
or
jle
cmp
jne
mov
das
retf
fwait
iret
inc
push
cmp
fisubr
cdq
cmp
or
ret
cli
cmp
pop
bound
repnz
push
jmp
rcr
adc
hlt
dec
movs
and
mov
jg
call
mov
addr16
sbb
adc
mov
(bad)
(bad)
xchg
shl
ret
ins
jbe
dec
jno
mov
mov
fwait
jmp
adc
push
pushf
pop
int
jg
push
cmp
jecxz
xchg
pop
aaa
push
rcl
xor
jp
inc
in
test
sti
mov
loopne
jmp
xchg
cmp
ja
cmp
outs
xchg
idiv
adc
jl
mov
push
dec
adc
or
mov
mov
pop
mov
bound
out
loopne
push
retf
cmp
adc
scas
fs
push
fcomp
sbb
sub
or
mov
stos
stc
mov
sahf
xchg
scas
(bad)
data16
inc
mov
adc
or
ds
adc
dec
(bad)
jno
push
and
pop
ds
out
sahf
inc
add
sub
lahf
sub
xchg
dec
push
aad
(bad)
cmp
inc
push
add
and
ret
idiv
repz
sbb
ficomp
fisubr
mov
mov
int
jl
lods
xor
jne
push
(bad)
mov
pop
stc
xlat
pop
jno
retf
stc
mov
lock
test
xor
mov
aam
push
rcl
mov
mov
or
cli
and
aad
and
sub
and
movs
lahf
jne
jbe
inc
popa
jl
sub
jae
cmp
outs
sbb
out
pop
cwde
ins
out
inc
ss
mov
mov
cmps
xor
or
(bad)
arpl
repnz
mov
mov
inc
scas
lods
adc
mov
xchg
fidivr
iret
pop
or
xor
(bad)
pop
jo
lods
out
in
sbb
jnp
loope
sbb
inc
mov
or
jmp
jmp
(bad)
repnz
int
pop
loopne
and
jmp
sahf
test
shl
add
ins
loope
or
mov
mov
sub
jmp
sbb
ja
rcl
push
pop
sub
dec
js
ret
ja
xchg
inc
frstor
sub
pushf
push
xor
fdivr
adc
out
inc
test
(bad)
cmp
div
cmp
adc
cmp
(bad)
xor
sub
jl
mov
push
push
adc
push
repnz
mov
and
je
lods
adc
jbe
repnz
shl
push
mov
mov
pop
sbb
mov
mov
xchg
add
rcl
add
in
jge
pop
jbe
push
mov
adc
movs
pop
pop
add
xchg
aas
and
mov
xchg
cli
add
outs
and
cmp
in
inc
inc
dec
fistp
aaa
inc
imul
aaa
inc
push
xchg
(bad)
mov
adc
and
adc
cmp
cmp
jbe
cmp
mov
std
sbb
xchg
or
ja
push
repnz
rdpmc
mov
or
or
inc
or
mov
(bad)
popa
outs
mov
pusha
pop
cmp
rol
mov
mov
bound
jp
repz
adc
jmp
ja
popa
mov
dec
ds
mov
cmp
sbb
not
imul
(bad)
mov
movs
retf
pop
and
sub
lahf
loope
jmp
sub
add
xchg
mov
cld
sbb
add
jle
dec
adc
sbb
fdiv
in
inc
add
(bad)
xor
push
adc
jb
movsx
adc
add
push
push
(bad)
shl
int
aas
xor
loopne
and
or
xchg
add
ficom
pop
xor
movs
and
xchg
add
jp
mov
sbb
daa
jne
cmp
push
xor
js
outs
xor
call
outs
xchg
xchg
mov
mov
push
es
adc
xchg
repz
or
(bad)
cmps
popf
cli
pop
add
add
iret
push
data16
lds
je
ins
sbb
iret
retf
sub
inc
ins
aaa
repz
aad
ins
xor
(bad)
in
mov
cmp
mov
xchg
je
add
stos
adc
rcl
aad
add
in
sbb
and
cmp
jns
div
lahf
mov
mov
and
pop
test
dec
jl
push
ror
cs
or
pushf
xchg
or
sub
popa
jmp
xlat
xor
jle
push
ds
add
lods
jmp
or
jb
sub
ror
lahf
sub
daa
mov
das
jl
dec
inc
ret
cmp
xchg
cmp
out
iret
std
loopne
dec
jle
push
jmp
loope
hlt
leave
mov
push
loope
(bad)
out
lods
test
out
mov
dec
add
push
or
xchg
imul
push
shl
sub
mov
xor
jne
ret
test
jnp
lods
push
in
or
cmp
out
mov
mov
jb
mov
fwait
jbe
lds
outs
mov
pop
or
ja
sbb
mov
push
or
sub
bnd
mov
mov
inc
int
test
push
fs
clc
jne
mov
test
add
fsub
pop
loop
sbb
mov
sub
ret
ja
(bad)
sbb
xchg
mov
stc
jge
push
aad
fadd
jmp
fldenv
fs
retf
dec
fstp
jo
add
xchg
adc
xchg
lea
neg
cmp
sar
xor
aaa
mov
mov
fadd
jae
sbb
mov
cmp
test
dec
push
(bad)
sub
or
jle
sub
es
cmp
push
or
push
imul
or
outs
int
mov
popa
rcr
out
(bad)
js
iret
add
jo
fprem1
jb
outs
push
ret
jle
mov
and
push
fs
adc
mov
retf
xchg
mov
cwde
mov
push
in
addr16
ret
stc
jne
sbb
mov
cld
dec
jno
and
pop
push
pop
jge
lods
sbb
jnp
adc
out
mov
ins
pop
cmp
mov
jnp
bound
sbb
aam
pusha
mov
dec
stc
test
das
and
shr
xlat
repnz
dec
xor
lods
or
stos
icebp
adc
xchg
mov
lods
sub
retf
fidiv
add
int
sbb
xchg
sbb
lahf
out
js
out
mov
mov
add
sub
adc
ror
jns
sub
push
into
(bad)
in
cwde
test
sub
pushf
std
sti
dec
cwde
das
sti
ret
call
mov
loop
mov
hlt
test
sbb
imul
fstp
vpaddq
cmps
adc
mov
cmp
fwait
xchg
hlt
gs
pop
leave
fcomp
leave
js
mov
mov
outs
cdq
sub
adc
jge
add
jno
std
je
pop
(bad)
sub
mov
push
add
xchg
pop
in
and
cmp
cmp
iret
add
jg
pop
or
sbb
loopne
push
fimul
mov
jg
lahf
add
inc
call
lods
or
push
inc
jle
outs
adc
sub
icebp
outs
mov
mov
push
ret
je
dec
jmp
xchg
mov
inc
jns
not
inc
jb
repnz
scas
repnz
and
mov
fcom
ss
mov
out
sbb
mov
lea
jg
jno
daa
cmp
push
jmp
or
and
in
add
sub
cmps
sahf
rcl
icebp
fbstp
inc
inc
mov
cmp
mov
aas
cli
aaa
jl
pop
jno
jmp
cli
sahf
cmp
cli
cmps
jecxz
push
and
add
jne
mov
mov
pop
jnp
jp
mov
loop
jae
sbb
ins
icebp
xor
jo
movs
call
aad
int3
fwait
sar
aaa
aas
and
adc
push
lods
jmp
inc
test
mov
iret
jecxz
xchg
icebp
inc
and
mov
cmps
(bad)
ffreep
stos
bound
fmul
cwde
(bad)
aam
add
and
xchg
mov
data16
out
cmps
add
std
dec
neg
or
xchg
xchg
loopne
or
out
xor
xchg
jecxz
fs
(bad)
mov
and
mov
dec
pusha
mov
mov
dec
adc
xchg
xlat
pop
or
enter
jmp
mov
pusha
mov
test
sub
inc
mov
rcr
out
jbe
xchg
or
repnz
imul
dec
lea
aaa
lods
aad
aam
nop
movs
xlat
jmp
cmc
(bad)
aad
mov
xor
sbb
mov
dec
outs
call
adc
fwait
mov
sbb
adc
cld
jbe
mov
daa
(bad)
sub
or
mov
mov
xchg
loope
imul
xor
std
push
add
scas
es
ficom
sar
pushf
fbld
lods
xchg
test
fs
in
scas
xchg
adc
mov
mov
or
or
out
jo
xor
cmp
sar
mov
jp
out
cmp
xor
mov
je
pop
add
in
xor
enter
pop
(bad)
jnp
popf
cmp
imul
mov
jno
sbb
sbb
ds
cmp
and
sbb
(bad)
movs
scas
sbb
stos
dec
sub
out
sbb
jns
jecxz
jnp
rol
cmc
mov
dec
cmps
mov
xor
je
or
jle
sub
jmp
ins
and
cmps
repnz
xchg
jmp
dec
mov
(bad)
pop
(bad)
ds
push
imul
ins
(bad)
jb
sbb
cmp
imul
sub
inc
aad
cwde
push
mov
int3
xchg
rcl
mov
inc
dec
repz
sub
rcr
or
dec
and
inc
pop
sti
outs
dec
aas
fwait
cs
fimul
shl
xor
cmp
stos
mov
xchg
sub
mov
and
data16
xchg
sub
cld
cmp
jle
pop
xor
jbe
(bad)
test
cwde
aad
jns
rcr
daa
sbb
fwait
cmp
adc
mov
adc
mov
xor
ins
cmp
adc
aam
mov
in
mov
out
xchg
dec
add
repz
adc
sti
fcmovbe
jns
cmc
jb
push
mov
out
sub
inc
cmps
popf
enter
add
cmps
cmp
cmp
pop
sub
je
iret
xchg
push
retf
ss
ins
or
jbe
dec
adc
test
scas
sti
dec
in
lds
icebp
inc
or
jmp
mov
not
adc
xor
xor
ds
stos
dec
push
mov
(bad)
mov
into
cmp
cld
dec
test
dec
mov
outs
xchg
in
scas
outs
shl
dec
add
outs
sub
ss
sub
push
jp
ss
mov
mov
add
lahf
fwait
jmp
out
inc
adc
ds
vprotb
arpl
cmp
sbb
pop
outs
sub
fwait
test
sbb
scas
pop
mov
(bad)
dec
call
loope
test
shl
aas
aad
lock
add
mov
ret
or
ja
iret
fild
stc
sahf
mov
mov
lea
fs
pop
mul
cmps
fdivr
or
push
out
inc
scas
fstp
int3
xchg
(bad)
push
pop
fiadd
jne
fdivr
or
add
or
in
mov
rcl
sahf
(bad)
push
inc
jp
mov
adc
push
sub
mov
mov
aas
jge
mov
jnp
cmps
dec
cmp
xor
pop
pop
xchg
sbb
stos
(bad)
push
cmps
mov
ss
mov
inc
adc
pop
(bad)
mov
or
out
sub
cmp
and
mov
sub
inc
or
sbb
xchg
mov
push
push
not
call
mov
xchg
add
inc
(bad)
pusha
aam
adc
les
sbb
and
push
and
pop
scas
sub
std
pop
outs
ja
leave
rol
es
test
and
jle
repnz
out
shl
sbb
inc
stos
lods
and
and
popf
xor
cmp
stos
jmp
push
(bad)
sub
sbb
or
adc
popa
out
(bad)
adc
or
xchg
les
outs
pop
sbb
popa
xchg
push
call
dec
xor
aam
ss
imul
fwait
jl
hlt
repnz
movs
fist
pop
mov
inc
or
mov
xor
xor
mov
xchg
(bad)
dec
or
mov
vcvtsd2ss
popf
jmp
sbb
aad
inc
shl
in
mov
add
and
sbb
movs
push
in
jmp
rcr
repz
aam
jno
out
adc
call
add
push
mov
and
je
mov
fisttp
in
jmp
adc
inc
int
add
(bad)
mov
in
xchg
mov
imul
push
mov
cmp
jae
fistp
jge
imul
dec
and
addr16
icebp
push
loopne
stos
and
fistp
pushf
test
jp
stc
add
mov
mov
sahf
fs
push
or
int3
sub
into
ds
(bad)
fidiv
enter
loope
xor
pop
cmp
pusha
pop
(bad)
jae
fld
pop
xor
pop
out
dec
add
jmp
dec
ja
lods
mov
add
inc
pop
push
ficomp
out
dec
ret
mov
cmps
aaa
inc
cli
aam
pushf
cmps
out
pop
pushf
sbb
adc
shl
xchg
mov
sub
cmp
ins
add
sub
pushf
sub
or
test
pusha
mov
iret
jp
push
dec
add
xlat
popa
(bad)
std
fld
and
bound
loope
ja
ficom
out
(bad)
pop
int3
sbb
mov
pop
fs
push
sub
ds
pushf
mov
not
mov
pop
or
push
div
mov
in
pop
and
xor
mov
mov
jae
cmp
imul
pop
mov
jmp
(bad)
push
je
aad
jb
push
sub
lahf
(bad)
jnp
pop
pop
hlt
sub
sbb
jbe
aam
scas
lea
cwde
loopne
push
mov
stos
mov
mov
push
into
fdivr
push
aaa
mov
adc
cmp
es
fsqrt
fwait
(bad)
mov
push
test
jmp
ss
daa
jo
and
or
lods
adc
aam
leave
add
dec
xchg
test
sbb
call
aam
aad
aas
xor
mov
sub
ja
dec
mov
jmp
mov
loopne
outs
ins
nop
ror
(bad)
data16
sub
pop
out
sbb
sub
xor
stos
lods
push
lods
inc
sti
ret
push
push
dec
stos
adc
fidiv
jnp
and
arpl
jno
scas
lahf
xor
pop
xor
sbb
inc
jno
mov
aas
dec
add
jecxz
xchg
mov
lods
(bad)
retf
mov
inc
(bad)
xchg
and
jmp
xchg
je
mov
sub
bound
xchg
cmps
add
ret
lahf
and
out
pop
inc
sub
jmp
popf
leave
mov
icebp
or
pop
ins
(bad)
mov
inc
xchg
pop
ret
mov
jp
mov
cld
fld
enter
mov
pop
add
stos
rol
push
pop
(bad)
mov
loope
test
jmp
leave
xor
popa
cmp
(bad)
ror
jmp
ins
lock
and
pop
adc
sub
cld
pop
arpl
aad
scas
xchg
mov
inc
xlat
ret
sti
arpl
and
mov
ja
mov
fwait
mov
fistp
mov
call
sub
mov
pop
int
sub
lods
fistp
fsub
leave
push
xor
test
es
or
or
aas
mov
push
mov
jbe
xchg
sbb
adc
xor
pop
sbb
adc
cmp
mov
cwde
pop
cli
data16
stos
test
add
dec
push
sbb
push
in
mov
jmp
dec
dec
dec
inc
push
ins
inc
xchg
sub
xor
pop
mov
pop
sub
dec
sahf
mov
test
mov
push
sub
sbb
outs
retf
outs
sbb
mov
xchg
inc
push
pop
add
jmp
sub
fidiv
mov
mov
out
fs
and
ds
scas
mov
aaa
adc
xchg
ja
adc
int
or
stos
ins
ret
test
push
arpl
(bad)
imul
xlat
movs
jmp
jp
in
(bad)
fisttp
test
lds
inc
sub
out
jle
xor
addr16
adc
jmp
das
rcl
mov
fwait
sar
fsub
mov
mov
sub
and
int
push
xchg
jno
inc
repz
in
loop
jmp
adc
jbe
imul
sti
popf
xor
out
add
addr16
xchg
out
(bad)
pop
rcr
dec
and
data16
lahf
nop
test
mov
dec
or
imul
mov
xor
iret
outs
mov
mov
lods
xlat
xchg
sbb
bound
rol
mov
cmps
in
dec
cmp
into
cdq
mov
or
pop
sar
mov
fmul
jno
dec
jle
inc
ja
xchg
mov
jmp
cdq
mov
jg
push
sub
fmul
std
xor
cmp
xchg
bound
rol
movs
jmp
sbb
data16
cmps
(bad)
pop
data16
fisub
xor
push
pop
(bad)
out
ficom
pop
cmp
cmps
ror
mov
mov
test
in
fmul
dec
push
das
fist
adc
scas
cmp
cmp
test
shr
xchg
mov
xor
jle
mov
cmps
xor
and
call
stc
loopne
jae
mov
ficom
cld
out
inc
jne
xlat
cmp
mul
mov
sbb
loop
xchg
jge
out
mov
mov
inc
xor
or
lods
xchg
mov
mov
retf
and
push
popa
push
movs
fisubr
xlat
fidiv
dec
sahf
sub
xor
je
xchg
repz
fwait
ins
aad
ss
lock
sub
jb
xor
pop
jb
push
lea
jecxz
clc
lods
iret
imul
ins
mov
call
jns
push
pop
sub
push
rol
dec
and
inc
shl
xlat
test
mov
pop
dec
cs
or
sub
push
pop
and
out
out
mov
mov
push
pop
aas
push
push
fimul
xor
movs
adc
daa
pop
je
gs
mov
stos
call
jbe
sbb
cdq
mov
pop
mov
mov
mov
cmp
jo
pop
push
jg
bound
jge
aam
das
sbb
cmp
mov
mov
add
and
nop
shl
div
mov
jg
mov
inc
shl
xchg
lds
and
pop
dec
out
es
mov
and
cs
ins
jl
dec
jnp
popa
adc
cmp
scas
loopne
fidivr
dec
pop
sbb
cwde
rcr
ss
aas
sar
mov
sar
dec
add
mov
lahf
dec
sbb
das
jmp
and
jb
dec
cwde
in
into
lahf
test
mov
fld
sub
pop
add
push
jns
push
sub
jmp
sub
dec
hlt
adc
iret
and
mov
push
inc
dec
outs
lods
mov
dec
bnd
jle
mov
xor
and
(bad)
stos
inc
clc
out
push
push
and
push
rcl
js
xor
push
add
push
add
bound
or
ror
jecxz
into
fucomi
stos
push
arpl
xor
sar
lods
jmp
xchg
mov
push
in
mov
pop
in
pop
sbb
inc
jns
and
lahf
aad
mov
push
pcmpgtd
xchg
repz
mov
push
js
sub
pop
cmp
lahf
daa
inc
sub
inc
inc
data16
push
add
clc
arpl
out
scas
xor
mov
pop
mov
jge
outs
pop
cdq
(bad)
cmp
sbb
es
push
mov
cmp
adc
xchg
scas
dec
int
dec
mov
pop
neg
cwde
push
add
cli
nop
pop
jae
pop
adc
adc
(bad)
jle
xchg
jecxz
mov
adc
jge
cmp
inc
in
jmp
rcl
dec
cmp
mov
rcr
xchg
(bad)
or
inc
pop
pop
sub
xchg
jo
push
jnp
inc
dec
push
dec
mov
addr16
xor
popf
add
idiv
mov
or
into
push
and
xor
aaa
aas
retf
pushf
sub
stos
push
jge
call
ins
pusha
fs
idiv
jo
jge
mov
(bad)
daa
adc
iret
add
pusha
pushf
mov
psubusb
push
test
clc
mov
pop
pop
inc
jbe
mov
loopne
stc
lods
adc
out
jno
pop
or
lahf
pop
scas
mov
add
xor
cmps
sbb
(bad)
cmps
add
mov
push
call
mov
movs
push
jl
inc
fdivr
ins
jp
out
out
or
iret
repnz
sub
push
and
add
jle
arpl
push
cld
sar
ret
adc
xor
pop
jbe
pop
fcom
test
sub
mov
push
dec
jae
push
mov
mov
sbb
das
jle
pop
hlt
popa
(bad)
jecxz
jecxz
cmp
daa
es
dec
sbb
inc
sbb
bt
repnz
mov
aas
add
retf
shl
fnstenv
movs
dec
xor
xor
sbb
cmp
fs
mov
sbb
mov
icebp
ret
add
std
(bad)
inc
pop
and
jg
dec
push
(bad)
mov
pop
jns
add
int3
call
mov
pop
jl
call
rcl
pop
neg
das
adc
not
in
lds
mov
push
fnstsw
fs
jp
dec
rcr
xchg
sbb
clc
test
(bad)
xor
mov
jne
inc
xchg
test
leave
ds
sub
push
and
mov
arpl
push
push
lahf
jge
in
shr
mov
mov
pop
retf
add
dec
xor
xor
rcr
(bad)
das
mov
jge
jo
cmovae
inc
mov
xchg
cmp
aad
xchg
add
pop
mov
retf
loope
sbb
or
cmp
mov
jne
push
push
xchg
mov
push
and
mov
mov
pop
mov
mov
retf
mov
(bad)
jmp
shr
call
add
clc
pusha
push
mov
loop
adc
mov
cmp
inc
shl
pop
shl
add
int3
aam
jmp
xlat
mov
mov
adc
or
jnp
aam
mov
cmp
xor
arpl
mov
call
call
jp
jecxz
aas
sbb
xchg
jp
add
inc
cmp
sahf
push
hlt
pushf
shr
in
dec
add
dec
out
ror
add
and
jecxz
xchg
lock
add
fwait
lods
out
adc
out
stos
call
mov
sub
popa
cmp
pop
jno
test
mov
mov
cmp
adc
jns
test
sbb
imul
ds
js
push
mov
pop
mov
pop
fistp
and
mov
inc
(bad)
jae
(bad)
fdiv
pushf
rcr
mov
add
push
sbb
dec
cmp
mov
cli
inc
movs
pop
add
mov
adc
fstp
pop
pop
lods
push
fisubr
aaa
repnz
loop
xor
inc
(bad)
clc
invd
or
ss
popa
xchg
jle
lea
add
call
or
pop
je
aaa
push
in
add
xor
inc
cdq
(bad)
sbb
push
pop
add
sahf
scas
int3
call
xchg
dec
xor
nop
mov
mov
pop
cmp
int
inc
daa
sub
xor
and
ins
lahf
inc
jmp
clc
pop
scas
(bad)
xor
loopne
mov
or
sub
and
aas
add
out
xchg
jbe
jb
mov
rol
lahf
dec
mov
stc
cdq
test
outs
xor
pop
sub
dec
jno
(bad)
xchg
sub
enter
out
movs
and
push
cwde
dec
movs
cmp
push
sub
neg
cmp
mov
jl
into
push
hlt
ja
lock
cli
xchg
sti
sub
fdivr
or
mov
xchg
scas
xchg
or
jns
out
int
int3
xchg
call
pop
lds
scas
hlt
out
jne
pop
pop
cs
in
dec
mov
mov
pop
jb
nop
aas
bound
jae
jns
lds
and
ins
dec
les
mov
xor
jo
lods
xor
arpl
test
stos
cli
jne
movs
jg
cdq
pop
gs
mov
pop
dec
and
cmc
dec
retf
push
jnp
movs
bound
in
jle
jl
ror
xor
push
xchg
mov
rol
bound
dec
aam
jno
sbb
loop
mov
mov
sub
jge
scas
sbb
ds
aas
dec
and
in
dec
push
or
loop
mov
sub
jns
imul
cld
and
les
pop
jno
nop
jns
sbb
mov
popf
shr
jge
and
int3
stos
shl
call
hlt
stos
ret
xchg
and
dec
fdivp
inc
in
js
call
movs
fwait
in
fwait
(bad)
call
cmp
fdiv
and
inc
adc
jno
ret
cmp
and
push
fcmove
xor
enter
mov
adc
pop
pop
outs
stc
out
hlt
cmp
push
add
out
test
inc
mov
inc
fnstcw
push
jo
mov
xor
ss
and
dec
jge
bound
outs
popa
push
cmc
add
pop
mov
sub
xor
clc
cwde
fxsave
xor
sub
adc
outs
dec
push
shl
cld
xor
sti
out
ins
mov
(bad)
fs
data16
xor
jecxz
aas
stos
and
jb
cli
icebp
adc
jns
push
xor
pop
dec
sbb
xchg
dec
test
cmps
jns
(bad)
es
popa
mov
xchg
mov
and
rcl
iret
add
shr
outs
leave
lds
pushf
xchg
add
add
repz
outs
ret
pusha
xor
and
sub
jp
in
das
xchg
pusha
retf
dec
retf
mov
dec
aaa
jecxz
movs
fs
jo
sub
pop
mov
test
imul
xchg
push
or
sar
adc
ret
stos
jg
imul
stos
(bad)
int3
pop
push
sti
int
iret
sub
in
(bad)
out
scas
ja
pop
push
popf
mov
(bad)
sub
or
xchg
cmp
add
add
jae
int3
fidiv
lds
jae
sub
loopne
icebp
inc
pop
dec
cmc
mov
in
ja
jmp
mov
rol
push
clc
and
into
inc
mov
sbb
into
sbb
test
arpl
add
aad
pop
std
cmps
shr
iret
cld
lds
mov
mov
shl
xchg
lahf
adc
(bad)
mov
or
sbb
push
test
outs
inc
call
mov
and
jnp
addr16
mov
pop
jo
fisub
retf
not
mov
xchg
cmp
jg
(bad)
mov
dec
sub
lock
inc
push
xchg
lods
sti
adc
aaa
cmps
leave
pop
push
mov
repz
dec
mov
cmp
fdivr
add
or
outs
add
(bad)
adc
aas
mov
jl
inc
jnp
mov
div
iret
lods
and
mov
jno
fsub
xlat
ja
pushf
repnz
nop
cmp
das
movs
ja
sbb
inc
push
mov
jg
pop
jne
dec
popf
(bad)
dec
jecxz
retf
js
jge
push
in
aad
iret
jns
dec
add
cs
stos
mov
mov
test
sbb
std
and
sahf
loop
push
rep
popf
movs
mov
adc
mov
push
sti
and
cld
lods
inc
sbb
fwait
pop
jnp
sahf
fisubr
push
imul
and
sbb
sub
pop
add
aas
(bad)
test
daa
es
(bad)
loopne
dec
mov
adc
and
sbb
test
pusha
sti
(bad)
adc
dec
sahf
mov
push
and
xchg
loop
in
push
and
xchg
inc
sub
dec
push
dec
mov
scas
lock
in
dec
scas
repnz
daa
inc
and
push
ffreep
mov
fsub
cmp
xor
push
out
retf
add
xchg
mov
shr
in
push
or
ja
jmp
shl
xlat
and
pop
not
and
dec
rol
(bad)
into
sbb
cwde
push
mov
stos
(bad)
out
cmps
jmp
mov
push
jae
movs
cmp
adc
in
dec
in
mov
mov
jmp
mov
fiadd
loop
js
xor
(bad)
fs
or
cmp
pop
popa
repz
cmp
push
adc
mov
fisubr
pop
mov
ja
stc
or
mov
inc
mov
mov
or
int
out
xor
inc
push
pusha
pop
out
adc
mov
rcr
adc
xchg
cmp
mov
repz
adc
test
jo
inc
popa
xchg
xchg
mov
or
inc
jb
movs
jp
adc
out
add
pushf
retf
cmps
fistp
push
xlat
mov
add
add
pusha
xor
ins
jge
and
mov
fdivr
push
jns
mov
jg
aam
push
(bad)
int
xchg
mov
repz
ror
add
es
jns
pusha
daa
mov
jne
mov
rcr
fistp
repnz
imul
add
(bad)
into
popf
stos
inc
push
jnp
jp
mov
mov
dec
mov
or
mov
scas
push
mov
adc
pop
loop
pop
push
test
add
stc
rcl
in
mov
push
add
jp
dec
xor
pop
jge
xor
and
or
cld
fwait
iret
cmp
ds
pop
ja
sbb
cld
xchg
inc
sahf
sub
dec
xor
fisttp
fs
in
fsub
inc
sub
xor
xor
pop
push
xor
(bad)
pop
or
test
fcom
sub
jg
dec
lock
ret
lahf
sbb
sbb
nop
push
dec
pop
push
and
sbb
cmps
push
repnz
cmp
in
adc
inc
push
cmp
stos
mov
xchg
adc
add
sbb
xchg
pop
out
mov
sbb
clc
add
retf
add
jae
or
shl
pop
test
and
add
rol
cmp
dec
xchg
sbb
nop
call
in
sub
inc
inc
in
ja
pop
jne
or
dec
mov
rol
inc
stos
mov
std
sub
jl
popa
mov
xchg
jne
pop
xor
xor
xchg
test
(bad)
push
repz
icebp
add
cmp
xchg
call
pushf
inc
mov
hlt
lahf
cli
sbb
and
xor
retf
push
pop
cmp
mov
fs
retf
out
pusha
rol
jg
pop
pop
adc
xchg
inc
cmp
push
or
mov
repnz
mov
adc
daa
in
adc
adc
and
xchg
mov
sbb
mov
or
fwait
adc
push
loope
sub
dec
bound
cmp
repz
inc
mov
enter
in
push
pop
push
icebp
fsubrp
(bad)
push
and
(bad)
sbb
push
mov
and
call
add
and
jecxz
add
cmps
dec
sub
das
dec
jge
in
cmp
mov
inc
ins
arpl
jge
jo
jnp
jno
stos
test
hlt
test
ficomp
xchg
jnp
inc
mov
mov
into
pop
cmc
cwde
jnp
in
test
push
(bad)
and
mov
aaa
cli
sbb
lods
mov
lods
dec
cmp
rol
stos
mov
bound
lds
popa
or
repz
pop
and
xor
adc
imul
cmps
jmp
in
imul
fldcw
mov
pushf
loope
jne
icebp
adc
jmp
icebp
mov
xchg
jecxz
jb
fst
daa
sub
mov
pop
push
dec
mov
aas
mov
cmps
mov
ficomp
dec
(bad)
in
(bad)
aad
test
addr16
test
addr16
fcmovne
mov
or
movs
inc
pop
ret
shl
xchg
and
icebp
mov
cmc
xchg
push
lods
stos
jp
fadd
and
push
jmp
lods
ins
cmp
jae
out
xchg
lock
sti
pop
push
imul
fs
xchg
outs
ins
and
cmp
jmp
jmp
adc
mov
sub
add
xor
dec
int
enter
or
sub
jae
pop
mov
fsubr
fld
pop
push
push
sbb
stos
scas
cwde
inc
jnp
push
loopne
adc
ret
mov
dec
mov
mov
aam
mov
dec
mov
adc
sub
(bad)
mov
xor
xchg
int
dec
push
xchg
(bad)
xor
retf
sar
loopne
je
lock
cmps
pop
out
inc
xor
enter
sub
cmp
ret
aaa
sbb
mov
loopne
rcl
cwde
jb
dec
push
sbb
and
add
leave
push
jnp
cmps
test
dec
ja
pusha
out
iret
jo
int3
sbb
shl
sub
add
and
mov
popf
mov
add
add
ins
int3
inc
xchg
push
cwde
inc
sub
ins
popf
push
repz
fs
in
popf
icebp
ret
enter
aaa
ficom
lds
sbb
call
in
adc
xor
jp
hlt
or
pop
cs
or
adc
mul
xor
in
inc
es
scas
inc
cmp
fdivp
xchg
paddsw
fstp
aad
test
fiadd
popa
push
sti
addr16
addr16
dec
xor
jle
dec
xor
adc
xor
arpl
ds
push
dec
movs
jg
adc
fdiv
sub
push
repz
(bad)
sub
sub
test
test
xchg
loope
stos
pop
addr16
out
jp
aas
push
dec
jnp
retfw
add
add
cmp
xchg
jl
push
nop
stos
mov
paddd
inc
inc
jo
jo
sbb
movs
dec
scas
adc
push
(bad)
stc
(bad)
icebp
pop
inc
inc
es
or
fstp
(bad)
pusha
retf
stos
imul
ret
dec
mov
sub
in
retf
(bad)
loop
cmp
pop
scas
push
add
subps
js
jecxz
xor
mov
dec
popa
sbb
cmp
xchg
inc
ret
xor
and
mov
movs
jl
std
add
cmp
loop
pop
pusha
loope
jo
mov
pop
sbb
mov
nop
and
lea
mov
pop
outs
push
(bad)
sti
dec
repz
or
lds
mov
fst
daa
call
adc
push
xor
jmp
cmps
shl
mov
iret
popf
adc
inc
push
cld
push
inc
ficomp
sbb
pushf
in
shl
mov
and
fsubrp
pop
test
xor
std
cmp
or
mov
jbe
inc
(bad)
test
mov
sbb
jle
popf
cmps
cmp
xor
stc
cs
jb
aas
inc
pushf
repnz
pop
sahf
fist
xchg
frstor
(bad)
xor
aaa
sub
pop
fdivrp
nop
shl
jmp
repz
push
mov
jl
push
ins
out
push
fidiv
div
out
sub
push
jb
ja
xor
icebp
jmp
call
sbb
out
pop
fwait
sub
cmps
aaa
call
dec
mov
jg
pusha
shl
inc
dec
jg
push
dec
xchg
aam
leave
cmp
or
test
and
scas
add
mul
xchg
add
lds
int3
pop
aas
shr
mov
leave
iret
movs
xor
iret
jmp
dec
cmp
xchg
add
pop
js
leave
mov
inc
pop
mov
pushf
jbe
or
retf
inc
xchg
imul
xor
mov
jbe
call
cmc
mov
outs
pop
shl
data16
xchg
cld
lds
xlat
outs
ret
(bad)
int
fmul
rol
xor
test
dec
mov
pop
mov
mov
fwait
enter
(bad)
cmp
pop
push
pop
fcmovne
jb
clc
xchg
and
add
jmp
push
mov
jb
clc
cmp
push
mov
ret
pop
lods
push
mov
hlt
fmul
xor
mov
ds
out
add
rcl
ret
leave
popf
out
(bad)
in
pop
cs
xchg
jge
loop
test
dec
test
mov
pop
sub
jmp
and
dec
pop
mov
popa
sbb
cmp
jecxz
inc
mov
sub
retf
add
ret
cmps
add
pop
ds
sub
pop
xchg
xchg
outs
dec
pop
push
inc
call
lds
dec
push
es
pop
pop
mov
jbe
int3
les
sub
mov
adc
cmp
cmps
call
inc
cvtpi2ps
imul
jge
sbb
xor
xchg
jecxz
mov
mov
mov
lods
push
adc
iret
pop
lock
lods
call
and
iret
sub
xchg
inc
push
popf
repz
mov
add
adc
or
or
das
sbb
jmp
mov
fwait
mov
jbe
je
das
adc
dec
fiadd
and
sub
test
inc
loope
daa
sahf
inc
aas
ins
pop
sub
dec
hlt
(bad)
cmp
push
ss
imul
dec
in
add
push
mov
std
lds
xor
nop
mov
retf
push
or
rcl
dec
pop
push
(bad)
jge
cmp
js
mov
push
mov
inc
jo
adc
rcl
mov
push
sub
mov
mov
mov
mov
mov
stos
ret
sub
je
mov
push
pusha
test
or
stc
cdq
inc
pop
xor
lods
out
adc
das
call
das
and
dec
xchg
lock
mov
stos
sbb
jp
xlat
inc
mov
mov
test
stos
gs
mov
shl
cmc
test
cmp
dec
rol
pop
popa
out
mov
(bad)
xchg
shl
lods
jmp
sbb
jg
adc
jge
sar
shl
xchg
pushf
inc
stc
push
(bad)
mov
pshufw
adc
ret
xchg
and
retf
icebp
xor
movs
add
sti
mov
sub
fs
pop
mov
scas
cld
shr
pop
and
test
test
retf
pop
sub
rcl
sbb
popa
(bad)
mov
cmp
scas
stos
in
push
out
inc
ror
mov
(bad)
dec
test
mov
cmp
outs
dec
mov
in
dec
mov
dec
cli
mov
loop
je
xlat
inc
out
scas
xchg
outs
test
imul
call
call
fcom
dec
dec
loope
adc
(bad)
lea
sbb
push
pop
jmp
loop
(bad)
inc
movs
mov
sbb
xor
(bad)
cwde
movlps
cwde
xor
pop
inc
dec
add
mov
xchg
jle
mov
shl
popf
adc
xor
call
pop
arpl
sbb
dec
clc
div
mov
enter
aad
out
aad
add
xchg
push
dec
aas
jbe
pop
in
in
mov
adc
cmps
hlt
(bad)
cmp
mov
test
adc
bound
mov
aam
fwait
jp
adc
outs
(bad)
xchg
mov
mov
jp
popf
sub
add
push
push
call
(bad)
out
in
jno
inc
ins
test
push
jge
cmps
add
stos
fist
cdq
and
dec
xor
jl
add
xor
repnz
mov
inc
mov
pop
repnz
cmp
add
inc
push
jnp
cmc
add
jo
cwde
adc
adc
gs
jecxz
pop
lahf
sub
push
push
cdq
sub
push
jne
aad
(bad)
push
or
std
push
push
mov
nop
push
cmp
ret
xor
xchg
mov
sub
inc
and
xchg
call
int3
adc
jle
mov
xchg
cmp
icebp
jo
pop
push
in
cmp
lds
inc
xchg
jmp
bound
fstp
xor
scas
mov
js
cmp
inc
push
pop
inc
sar
cmp
push
mov
sub
mov
rol
shl
or
out
sbb
mov
lahf
test
sahf
jbe
dec
mov
cwde
adc
aad
sub
push
inc
xchg
bound
jp
fstp
ja
inc
push
sahf
mov
push
add
call
rol
sub
fidivr
stos
add
add
mov
ds
push
mov
pop
sbb
aad
cmp
fisttp
ret
add
rcr
mov
cmps
xor
ret
inc
outs
fcom
xor
mov
ret
inc
pop
movs
push
pop
dec
dec
je
mov
mov
in
cld
push
push
enter
repnz
in
dec
xor
cdq
push
xor
adc
xchg
adc
mov
idiv
mov
fstp
xchg
daa
or
mov
or
outs
hlt
inc
pop
test
inc
jae
nop
je
dec
ficom
mov
shr
or
dec
dec
movs
push
(bad)
test
mov
add
dec
lds
test
fsub
push
pop
dec
ja
in
sbb
int
popf
push
sub
jo
inc
in
ss
push
add
mov
mov
test
dec
mov
outs
dec
das
or
test
jbe
push
shr
imul
in
sub
mov
outs
fst
xor
pop
(bad)
fs
push
mov
outs
cmp
mov
jmp
dec
pusha
jmp
adc
and
dec
pushf
aaa
mov
ins
push
or
bound
jb
push
xlat
mov
addr16
imul
cmp
mov
sub
sar
cmp
add
stos
imul
(bad)
inc
cwde
mov
dec
jmp
dec
jae
and
mov
(bad)
sbb
mov
inc
cmp
daa
out
shl
cmc
push
call
xchg
adc
jge
xchg
fnstcw
mov
imul
clc
mov
mov
mov
arpl
push
out
sbb
(bad)
dec
arpl
loopne
pop
inc
cs
jmp
pop
jne
cs
popa
jl
mov
loopne
and
cwde
mov
int
(bad)
add
cmps
add
xor
pop
mov
add
pop
xor
push
xchg
pop
loope
jae
cwde
(bad)
rcl
popa
ds
leave
cs
sar
das
loop
cmp
scas
aaa
icebp
fcmovne
pop
xchg
nop
or
cmp
or
pop
cld
bound
cmc
and
not
sahf
adc
(bad)
pop
ss
xor
jecxz
retf
mov
cmp
mov
jnp
ins
xor
mov
push
dec
xlat
adc
shl
pop
dec
aam
xchg
mov
std
xchg
mov
jg
lds
pop
lock
stos
jmp
(bad)
jg
retf
enter
xchg
cmp
(bad)
pop
xchg
mov
xor
cmps
push
pop
add
out
add
mov
dec
xchg
test
xor
inc
pushf
std
mov
add
fsubr
push
mov
inc
aam
xchg
ja
ss
ss
mov
mov
dec
ret
dec
aas
(bad)
sbb
push
or
xchg
jge
dec
pop
mov
movs
je
popf
ret
sar
int3
ror
dec
arpl
ss
mov
inc
fs
pop
sbb
mov
arpl
push
icebp
and
in
es
add
in
cmp
stc
mov
cld
retf
nop
mov
cmp
les
cmp
in
add
loope
mov
jmp
xor
fist
aas
lea
aaa
ins
sbb
xchg
dec
pop
sub
sahf
dec
sbb
push
push
add
jbe
es
movs
das
add
(bad)
mov
ficom
aad
fcom
xor
ftst
sub
mov
mov
fsubr
shl
test
dec
push
inc
pop
ins
ds
or
mov
das
mov
rcl
or
or
push
pop
aam
std
div
out
mov
fistp
sahf
push
out
cli
into
int3
sbb
mov
lds
jnp
push
ja
xor
pop
test
mov
jecxz
push
push
fcom
pusha
mov
or
lahf
enter
rol
adc
jge
jecxz
jno
mov
je
repz
cld
movs
mov
ror
inc
lahf
xor
sbb
pop
pushf
xor
int3
xor
fsubr
dec
movs
ins
int
retf
pop
in
test
je
or
ret
lds
adc
test
sub
push
mov
shr
dec
xor
mov
or
push
xor
aaa
call
sub
sub
ins
ja
push
cmp
or
mov
inc
shr
add
jge
xor
jecxz
adc
mov
cld
pop
repnz
lock
xor
push
push
lahf
cli
ds
test
enter
cmp
jo
ret
xor
lea
mov
mov
and
adc
not
xchg
call
outs
sbb
xor
or
sti
add
pushf
test
push
and
test
(bad)
jns
pop
mov
mov
mov
fucomip
call
jmp
push
fld
and
out
in
retf
test
sbb
rcr
xor
and
xchg
xor
fstp
inc
es
or
mov
fist
aaa
lea
and
add
mov
cmps
and
daa
fstp
fldenv
aaa
cmp
pop
bound
pop
iret
inc
loopne
jmp
cmps
dec
mov
mov
jnp
pop
ss
jg
das
es
cli
aam
cmp
sti
rcr
dec
fdivrp
out
push
pop
sub
call
ret
push
outs
loope
scas
mov
mov
sub
popf
movs
loopne
cmp
mov
dec
shr
pop
pop
xor
inc
imul
dec
mov
lds
loop
shl
add
jp
sub
sbb
push
es
stos
ficomp
out
sbb
stos
and
xor
push
push
mov
jnp
push
test
jbe
jno
sahf
and
jbe
leave
aam
test
icebp
jo
(bad)
cmp
imul
out
or
jmp
fnsave
sub
add
jecxz
adc
out
clc
imul
test
sub
pop
in
lahf
out
cwde
hlt
mov
out
push
push
sbb
movs
pop
add
or
aad
sar
shl
jmp
mov
call
in
and
inc
(bad)
outs
mov
into
int3
fdivr
inc
enter
cmp
cdq
inc
in
hlt
ss
(bad)
in
clc
mov
ret
cmc
cmp
sub
cmp
mov
pop
xlat
fstp
cmps
jne
xchg
mov
jbe
sbb
mov
jne
sti
add
xor
test
seta
sbb
adc
jbe
mov
pop
retf
fcom
nop
enter
inc
add
xor
jge
repnz
cld
jae
xchg
add
push
mov
gs
enter
sub
outs
push
adc
leave
jnp
or
sub
cmp
xchg
pop
das
inc
inc
mov
cs
fst
push
outs
int3
aaa
push
sbb
lods
or
xor
test
add
cmp
mov
pop
or
cld
dec
mov
cmp
fucomp
jecxz
inc
add
or
mov
daa
jp
dec
dec
js
mov
dec
lods
or
cdq
sub
dec
push
push
icebp
(bad)
lock
jmp
ds
mov
inc
pop
push
fucomip
add
xchg
cmp
or
and
mov
into
and
in
push
xchg
mov
das
mov
jecxz
or
ficom
jno
dec
or
mov
push
ret
pop
adc
mov
inc
mov
or
jecxz
ret
fld
xchg
sub
push
xor
in
lods
movs
push
xor
shl
push
je
mov
test
push
fsub
inc
je
mov
sub
jge
test
dec
jae
dec
retf
int
inc
pop
(bad)
sbb
push
pop
shr
aas
cld
rol
stos
retf
cmp
sti
inc
call
push
fstp
add
sub
pop
jno
add
fmul
stos
jge
jb
pop
fnstcw
mov
adc
lock
jns
cmp
cdq
dec
mov
fbld
mul
jbe
adc
add
sahf
or
add
jo
push
mov
movs
jae
cli
add
sbb
clc
daa
cmp
xchg
mov
rcr
popa
dec
xchg
xor
out
fwait
mov
xor
inc
fld
mov
jb
ret
and
xor
mov
push
fidiv
pop
imul
repz
adc
mov
or
sbb
jmp
scas
jae
xchg
or
add
mov
xor
pop
clc
push
in
adc
cmp
sub
pop
das
inc
push
sbb
or
out
into
adc
sbb
or
cmps
sub
sbb
mov
in
pop
arpl
aas
inc
or
mov
out
in
fidiv
clc
pop
loope
bound
push
lahf
sbb
mov
shl
mov
mov
fwait
sub
mov
lahf
retf
jmp
mov
in
xchg
mov
pop
cld
or
add
cmp
dec
aam
jle
inc
test
aaa
aam
out
xor
popa
adc
lods
adc
mov
sets
push
xchg
xor
sbb
xchg
sbb
aad
sbb
retf
pop
fwait
call
dec
push
scas
and
and
popf
add
dec
add
dec
cmps
cmp
in
cmps
inc
ja
das
push
enter
pop
cli
loope
adc
(bad)
test
retf
in
sub
xor
(bad)
jle
stc
loopne
lods
jbe
mov
dec
addr16
fwait
xor
jl
js
icebp
cmp
add
and
pusha
pop
xchg
xor
(bad)
in
ins
xchg
movs
outs
retf
sbb
das
pop
ins
rcr
jmp
push
mov
fild
(bad)
inc
fdiv
inc
ficom
push
or
fs
retf
mov
bound
ja
jl
shr
scas
movlps
dec
stos
leave
stos
outs
jno
jecxz
adc
xor
in
add
push
dec
call
call
mov
lds
jmp
in
push
repz
push
jg
push
push
add
shl
sbb
pop
cmp
(bad)
sub
or
sbb
aam
nop
stos
arpl
fisubr
movs
xchg
shl
xchg
lods
push
add
or
scas
xchg
mov
inc
mov
dec
es
pop
sub
mov
mov
pop
cmp
dec
push
cmp
int3
js
pop
rol
aad
jl
setns
mov
fstp
dec
jl
inc
inc
push
cmps
mov
pop
loop
xchg
mov
push
(bad)
jb
push
adc
add
sbb
mov
inc
into
mov
jbe
mov
xor
inc
dec
pop
cmp
ds
lea
aas
mov
ins
inc
sti
call
stos
push
fstp
sub
stc
dec
mov
ror
dec
dec
mov
cmp
ds
add
mov
int3
jmp
mov
les
cld
ins
in
aas
push
aas
push
dec
and
imul
das
mov
fdiv
xor
mov
push
pop
cmps
add
mov
js
pushf
movs
sub
out
loopne
pop
dec
mov
(bad)
sbb
sub
or
sbb
push
or
fstp
inc
loop
sahf
mov
into
sti
scas
adc
xor
add
std
loope
pusha
mov
mov
and
jno
aad
mov
sbb
mov
pop
lods
pop
pop
test
fst
inc
adc
stos
add
pusha
cmp
jb
in
adc
ret
movs
or
(bad)
and
icebp
sbb
imul
mov
loopne
jne
fnstsw
mov
inc
mov
(bad)
xlat
add
fwait
adc
mov
ins
add
and
fucomp
pop
adc
mov
inc
and
cmps
aas
scas
xchg
lods
cwde
dec
pop
cmps
dec
imul
xor
cmp
push
xlat
pop
mov
pop
xchg
or
ret
dec
jne
sub
jae
icebp
gs
dec
inc
nop
sbb
sar
gs
shr
shr
sahf
stos
xchg
repz
jns
fld
test
retf
retf
and
stc
js
pop
or
jmp
push
sub
sbb
cdq
cmp
mov
lods
pop
mov
jg
adc
push
dec
or
loopne
fcmovbe
jg
xor
into
lahf
jbe
or
cmp
repnz
test
cmps
xor
jb
xchg
aas
add
icebp
or
test
cmps
and
sub
pop
add
xchg
pop
sub
xchg
out
jmp
(bad)
in
xor
add
retf
jo
(bad)
retf
dec
adc
and
xlat
jle
mov
add
mov
popa
clc
aaa
adc
int3
mov
mov
dec
out
cmp
(bad)
mov
cmp
es
stc
outs
cmp
mov
fdivr
scas
ror
pop
pop
movs
jp
mov
lods
cmp
mov
arpl
(bad)
adc
push
and
xchg
pop
fisttp
push
out
cmp
scas
jae
in
enter
inc
sub
xchg
arpl
inc
dec
pop
xchg
mov
sub
loope
mov
jno
ror
cmc
scas
jb
push
outs
or
lods
nop
ins
mov
cs
in
xlat
lods
and
jo
cli
ret
neg
fistp
xchg
imul
cli
add
sub
xor
fist
out
cwde
scas
mov
popf
nop
pop
mov
test
lods
cld
pop
movs
stos
shr
jmp
call
dec
push
imul
loopne
adc
add
std
push
push
std
es
fistp
cmc
sbb
add
inc
mov
pop
cwde
and
outs
inc
xor
ins
cmp
clc
fidivr
or
mov
(bad)
cmp
mov
sbb
sahf
lock
mov
fcomp
cmps
xor
imul
sub
jge
rcl
loopne
dec
loopne
ss
jge
call
clc
test
mov
sbb
mov
sub
push
aad
in
pop
loopne
xchg
jge
jmp
or
jecxz
lea
inc
imul
outs
cmp
inc
cmp
addr16
mov
lds
cmps
xchg
mov
out
xchg
jnp
mov
loop
movs
jmp
push
lds
mov
fisttp
or
mov
xor
sahf
test
mov
repnz
xchg
push
(bad)
shl
or
inc
mov
retf
push
int
mov
scas
mov
inc
add
adc
out
fist
cmc
mov
fsubr
leave
ret
jnp
fwait
dec
xor
jecxz
xor
sub
pop
das
pop
ins
inc
jbe
and
jo
xchg
and
push
cmp
aaa
ret
sub
pop
xchg
test
bound
jmp
or
jno
pop
add
mov
loop
stc
ss
mov
pop
mov
push
in
std
aaa
xor
or
(bad)
iret
addr16
push
test
and
movs
adc
or
pop
mov
and
int3
fisub
je
in
sti
push
jle
je
loopne
jecxz
rol
(bad)
xor
inc
leave
adc
add
(bad)
fidiv
add
pop
mov
jb
cmc
inc
pop
mov
jo
jo
cmps
mov
out
call
fwait
dec
loope
jle
inc
jae
xchg
dec
and
cmc
push
push
mov
fwait
(bad)
mov
and
je
enter
or
addr16
dec
mov
sub
aam
jns
retf
pop
mov
icebp
or
movs
sbb
mov
shl
sbb
mov
in
dec
cmps
mov
xor
in
in
adc
mov
shl
in
sbb
and
and
xor
cmp
out
lods
in
and
mov
das
cmp
mov
sbb
xchg
add
fist
mov
cli
rcl
aas
mov
cli
sbb
int
inc
adc
stos
push
push
sub
data16
int3
pushf
push
cmp
sbb
pop
cwde
stc
sahf
lods
sub
push
ins
sub
sbb
mov
lods
push
xchg
jne
push
into
lds
sub
cmp
inc
in
cmp
jo
dec
xor
mov
sar
mov
mov
mov
cmps
or
or
push
cmp
and
mov
inc
fnstcw
jno
pop
inc
imul
or
xchg
outs
sub
inc
pop
jg
jmp
lock
rol
add
xchg
jle
xchg
fcom
repz
inc
test
imul
add
hlt
test
rcr
pop
adc
or
sub
pop
xor
outs
les
repz
sahf
pop
push
rcl
ror
push
(bad)
mov
xor
sbb
bound
add
mov
add
push
arpl
cmp
stos
mov
jmp
mov
add
repz
xchg
dec
loop
outs
ss
jmp
bound
mov
adc
and
repnz
(bad)
rcl
push
out
pop
cmp
push
pop
pop
int3
in
xchg
xchg
mov
xchg
push
mov
inc
lds
sub
pushf
outs
scas
pop
icebp
scas
pop
xchg
js
imul
pop
sbb
mov
or
outs
pop
or
inc
or
adc
add
add
ret
inc
pushf
imul
shl
push
inc
or
push
aas
repz
lea
sub
sbb
lea
and
imul
cmps
in
pop
fstp
mov
jne
cmp
mov
push
push
cmc
cmp
dec
mov
add
je
sub
dec
(bad)
and
inc
jns
sbb
inc
fmul
jle
inc
sbb
mov
xor
call
mov
sahf
push
mov
or
mov
retf
jge
jns
idiv
xor
call
jae
test
or
loopne
popf
fmul
movs
pop
icebp
aaa
inc
nop
jecxz
xchg
jnp
test
rcr
sub
mov
or
ficom
xor
dec
inc
sub
loop
sub
(bad)
out
lods
retf
pop
adc
and
and
inc
fisttp
xchg
(bad)
and
idiv
loopne
out
fwait
dec
lahf
adc
mov
sbb
pop
shr
lea
adc
cmps
pusha
inc
aam
inc
or
fimul
icebp
es
mov
enter
mov
arpl
sbb
push
pop
pushf
cmp
jo
test
jmp
into
cmps
mov
pop
sub
jl
ds
fisubr
jmp
jno
test
fistp
popa
jno
jb
inc
add
jnp
jg
repnz
retf
cmp
jns
mov
dec
inc
jl
es
adc
aad
lahf
movs
inc
popa
cmp
mov
ror
jb
arpl
outs
cmp
xchg
scas
push
clc
and
or
dec
loope
add
out
int3
xchg
fadd
ja
jno
sahf
cwde
(bad)
cmp
bound
mov
xor
xchg
aaa
fisubr
mov
inc
lods
sbb
dec
mov
mov
daa
int3
push
clc
cmps
mov
and
sbb
aam
(bad)
cmp
mov
inc
or
cmps
aad
pop
adc
mov
(bad)
lds
clc
xor
inc
jle
xchg
cmps
push
jmp
dec
jmp
call
mul
(bad)
out
es
outs
pop
addr16
pop
(bad)
aaa
push
shl
xchg
mov
das
call
dec
jle
mov
pusha
jmp
sub
mov
cmps
and
pop
xchg
pop
jbe
fdivr
sbb
xor
and
cmp
leave
aam
ret
ins
mov
mov
fwait
leave
dec
cmp
inc
ret
mov
cmp
fld
add
lock
inc
xchg
aad
(bad)
loop
iret
xor
jno
(bad)
mov
and
pop
mov
int3
inc
adc
cmps
push
int
mov
sbb
bound
sub
mov
(bad)
jmp
mov
xor
dec
imul
and
jmp
in
outs
sbb
sub
xor
mov
out
xchg
sahf
fcom
and
call
cli
pop
in
add
mov
sbb
mov
xchg
popa
mov
ret
xlat
mov
clc
sbb
fisub
dec
mov
jnp
push
sub
inc
xor
inc
imul
in
nop
push
mov
push
or
outs
inc
dec
xchg
pop
stos
(bad)
into
jmp
pop
push
and
dec
cmps
pop
sti
push
call
inc
movs
cmps
retf
push
dec
jle
sub
(bad)
adc
xor
adc
std
mov
and
push
push
cmp
sbb
imul
push
jne
dec
cmps
jns
mov
inc
inc
ins
adc
mov
movs
mov
fwait
xchg
xor
icebp
lods
mov
push
add
out
ret
int3
popf
rcl
cmp
mov
adc
ja
ret
pop
test
aas
ds
ins
outs
shl
in
add
add
imul
jmp
hlt
xchg
(bad)
jle
mov
jg
xchg
(bad)
enter
(bad)
push
xchg
sbb
scas
jl
inc
and
arpl
js
inc
and
jp
aas
mov
mov
pop
sub
std
or
inc
aam
out
rcl
mov
stos
out
cmp
(bad)
std
cwde
call
inc
dec
(bad)
sar
(bad)
aad
jb
jmp
(bad)
ins
inc
cmp
mov
push
mov
mov
jno
lds
or
mov
xor
inc
mov
stos
mov
int3
loop
push
push
out
ins
and
scas
push
in
test
lock
jl
stos
test
adc
(bad)
aaa
inc
push
cld
das
(bad)
jmp
enter
(bad)
in
hlt
jmp
imul
xchg
daa
add
sbb
sub
lods
retf
das
fld
outs
sub
shl
mov
inc
mov
pusha
jge
mov
mov
mov
(bad)
push
rcl
in
xor
pop
popf
lea
push
adc
je
mov
inc
es
jae
iret
call
pop
adc
(bad)
out
in
std
into
mov
pusha
jne
repnz
lds
lea
into
stc
test
test
imul
push
inc
fcmovu
not
and
dec
mov
out
lock
xor
jmp
jmp
adc
icebp
lea
icebp
(bad)
lock
sbb
les
pop
xlat
sub
dec
mov
or
xor
or
inc
call
mov
mov
add
imul
sbb
ror
loopne
inc
mov
xor
data16
dec
arpl
and
fsubr
jmp
arpl
test
in
stos
iret
movs
jl
sub
sub
add
mov
xorps
jmp
ss
cmp
pop
sub
pusha
mov
sub
fadd
and
xchg
rol
mov
outs
clc
dec
cmp
mov
mov
pop
ret
adc
out
(bad)
pusha
les
nop
test
or
and
or
popa
imul
ror
fsub
enter
xchg
xchg
add
mov
push
pusha
test
ret
jle
sub
cmp
(bad)
jb
sub
xchg
push
push
jae
lds
push
cmp
or
add
ja
sub
fsin
or
inc
rep
jecxz
call
aaa
fscale
push
push
inc
call
dec
test
shl
in
fild
pusha
xor
cmc
pusha
or
scas
out
cmp
xchg
xchg
out
sub
addr16
mov
jo
daa
cld
(bad)
std
and
dec
je
sub
cmp
xor
(bad)
push
adc
dec
jge
dec
and
aad
xchg
fwait
sub
push
or
movs
sbb
mov
loopne
xchg
push
xchg
cmp
cmp
dec
or
jae
fisub
lods
fcomp
out
pop
xchg
(bad)
push
jne
adc
add
pop
push
mov
scas
out
scas
cld
test
jp
push
mov
cmp
dec
mov
inc
jno
mov
mov
jl
xchg
pop
rcr
push
shr
je
adc
jl
popf
leave
dec
test
xchg
and
adc
in
loope
cmps
or
lds
(bad)
stc
push
(bad)
mov
in
int
pop
data16
dec
xchg
scas
jge
dec
scas
dec
dec
shr
jmp
or
leave
pop
cmp
mov
arpl
xchg
xchg
xor
xchg
ffree
push
jle
dec
lods
push
loope
or
adc
sbb
mov
mov
xchg
sahf
inc
xchg
stc
je
add
xor
jg
adc
push
icebp
rcr
jne
jno
lahf
sub
mov
loop
jne
pop
call
fcom
out
pop
test
rcl
fdivr
jne
fdiv
fild
jae
xor
sar
push
adc
dec
sub
shl
cdq
cmp
stos
fnstenv
js
sbb
push
retf
add
stos
stos
in
out
mov
push
int
fs
dec
mov
rcl
mov
dec
das
daa
sub
call
test
add
xor
jmp
jo
push
int
jmp
and
(bad)
rcl
and
imul
xor
ins
fldenv
loop
out
adc
mov
fdivp
push
cmp
loope
or
push
sar
shl
push
lea
dec
push
lea
xor
mov
push
std
mov
add
add
movs
adc
dec
push
mov
inc
cmp
and
ret
loopne
mov
xlat
sti
cmp
and
retf
ds
xor
fst
cmps
jg
js
cwde
cmps
and
test
je
sbb
loope
jle
aad
scas
xor
ror
imul
into
lods
cmp
in
jge
cmp
mov
push
pop
jg
mov
or
jecxz
mov
lea
cmp
xchg
push
sub
sub
xchg
inc
pop
ss
int3
inc
cs
cmps
xchg
dec
adc
ins
lods
mov
bnd
mov
(bad)
loope
push
pop
pop
jle
mov
push
push
arpl
enter
jmp
inc
in
mov
mov
or
addr16
into
push
das
and
mov
loope
mov
or
or
movntq
and
xchg
cmp
in
dec
cmp
repnz
retf
cli
scas
xor
inc
dec
mov
dec
xor
stos
ret
enter
outs
xor
call
sub
xor
test
not
xchg
or
retf
sbb
add
shr
shl
fcmovbe
call
push
stc
in
loope
mov
scas
fcmovb
cmp
xlat
lock
sub
lock
idiv
scas
lods
int3
adc
dec
mov
lds
mov
repnz
adc
jne
mov
push
test
sub
or
mov
mov
(bad)
cld
sbb
dec
jmp
mov
cmp
je
test
jae
test
lods
adc
xchg
mov
inc
sti
(bad)
dec
or
adc
ret
dec
loop
dec
int3
shl
push
mov
dec
pushf
xor
idiv
fs
dec
(bad)
mov
jecxz
out
inc
test
cld
push
sbb
adc
cmp
dec
jmp
dec
(bad)
scas
ins
scas
mov
(bad)
and
out
pushf
sti
icebp
mov
mov
cmp
pusha
out
xor
or
sbb
data16
push
pop
dec
(bad)
xor
inc
or
cmp
mov
dec
xor
popa
xchg
ins
mov
mov
inc
sbb
pop
imul
enter
ret
add
imul
pop
push
movs
(bad)
mov
pop
in
adc
lods
sbb
aaa
cld
gs
js
test
xlat
inc
aad
jo
(bad)
repnz
cld
xor
imul
aas
lahf
xchg
es
or
pop
neg
retf
fadd
dec
or
cmp
jae
fwait
push
clc
inc
out
out
adc
mov
daa
sub
jb
cwde
mov
cmp
fldenv
punpcklwd
pop
push
rcr
sbb
lahf
aaa
iret
ret
pop
cld
movs
jns
adc
add
inc
call
std
ins
dec
sub
fisubr
aaa
daa
xchg
imul
stc
xchg
and
push
mov
sub
sbb
add
jge
outs
jb
xor
iret
cmp
jne
out
jns
push
ss
xchg
clc
call
inc
push
cmps
pop
mov
xchg
mov
inc
ds
shl
call
jg
out
mov
fucomi
cdq
sbb
aaa
(bad)
fisubr
xor
mov
mov
(bad)
push
mov
cmc
and
jne
dec
inc
xchg
bnd
cmp
and
xchg
mov
inc
jl
mov
call
fstp
sbb
mov
pop
mov
adc
jmp
lock
enter
fidivr
pop
mov
stos
mov
mov
jl
xlat
xchg
mov
(bad)
nop
aad
sbb
sbb
int3
fadd
xchg
dec
sbb
xchg
dec
jmp
test
ss
scas
mov
push
add
std
icebp
loope
jb
cld
push
mov
push
aad
ss
push
inc
mov
lds
movs
mov
sub
sar
and
xor
push
int
pop
xor
outs
mov
fwait
inc
sub
inc
enter
in
dec
scas
add
cmp
pop
shr
fisub
mov
add
(bad)
in
aaa
mov
and
popa
mov
jl
in
mov
fstp
and
cmp
cmps
mov
pop
mov
rcr
xor
mov
mov
cmp
mov
data16
pop
xchg
xor
xor
div
mov
or
pushw
xchg
out
retf
fs
enter
loope
mov
dec
ja
cmp
xchg
jge
jno
outs
repnz
(bad)
out
pop
arpl
xor
pop
ja
shl
jbe
xchg
pop
or
fld
mov
xor
icebp
jle
mov
pop
loopne
mov
inc
ret
pop
mov
add
cmps
mov
fs
inc
dec
xlat
sbb
stc
pop
pop
sbb
push
jbe
pop
adc
sar
imul
(bad)
add
sbb
mov
aam
or
add
iret
or
cld
mov
jp
add
sbb
sub
cld
xchg
xor
sbb
mov
call
std
dec
xchg
mov
cmp
iret
adc
aas
xchg
mov
(bad)
cli
fiadd
rol
or
xchg
pop
push
in
and
dec
xchg
xchg
or
in
dec
push
jmp
add
mov
out
dec
aad
sub
xor
xchg
shl
or
call
inc
dec
or
mov
cmp
cmp
pop
dec
fwait
in
dec
jno
pushf
mov
jg
lods
popa
(bad)
dec
test
mov
xor
inc
mov
mov
(bad)
push
sub
out
push
add
mov
sub
push
nop
xchg
rcl
push
mov
std
dec
xchg
jns
in
(bad)
out
call
test
pop
pop
inc
cwde
stc
clc
xchg
push
enter
jmp
and
daa
pop
int3
in
stos
sub
jg
adc
xchg
jp
hlt
fsubr
leave
outs
loop
add
sub
pop
mov
sahf
push
or
cdq
xchg
ret
icebp
xchg
movs
xlat
lar
shr
add
(bad)
clc
mov
and
mov
jo
dec
sbb
data16
inc
jne
(bad)
jmp
sub
loop
add
jg
inc
test
sbb
cdq
repnz
(bad)
out
pop
aad
fcompp
scas
loop
cmps
lahf
mov
test
mov
sti
sbb
leave
in
hlt
cdq
mov
mov
inc
inc
xor
fdivr
push
push
ja
xchg
in
sbb
xchg
mov
mov
cmp
jmp
or
movs
jo
xchg
fisub
xor
inc
push
rol
dec
push
(bad)
(bad)
push
dec
scas
loopne
push
shr
jb
xchg
sub
push
xchg
call
xchg
sbb
retf
fstp
ins
mov
inc
inc
push
dec
push
inc
lods
call
xor
ja
scas
inc
or
or
push
aam
fs
ror
xor
push
in
xchg
xor
imul
sbb
lahf
jg
mov
sbb
outs
push
cmp
mov
mov
scas
add
and
xor
or
mov
sub
xor
mov
cmc
mov
loopne
cmp
test
sub
lods
out
sub
dec
pushf
aas
mov
lods
mov
dec
push
jne
push
out
es
outs
je
push
mov
pusha
pop
arpl
ret
jmp
adc
and
jge
push
and
popf
(bad)
jno
mov
or
mov
pop
sbb
dec
push
push
adc
es
push
out
and
xor
cmc
not
(bad)
xor
lock
and
jbe
fdivp
aam
cwde
icebp
mov
push
xchg
jb
fimul
xlat
outs
sar
add
dec
dec
xor
mov
stos
inc
fidiv
mov
dec
stc
out
dec
and
and
adc
mov
cmp
outs
dec
push
jmp
add
adc
and
loopne
mov
mov
and
bnd
loop
sub
and
jbe
xchg
jbe
sar
sbb
adc
icebp
ret
sub
(bad)
dec
inc
sub
add
stos
pusha
jecxz
and
mov
mov
hlt
sub
(bad)
in
xchg
gs
(bad)
adc
push
cmp
out
xor
sbb
arpl
idiv
imul
xchg
test
aam
das
pop
cmps
add
adc
pop
arpl
pusha
test
mov
div
test
jecxz
mov
fiadd
pop
fs
adc
outs
xor
sub
sub
daa
sar
fldl2t
leave
aam
(bad)
les
xchg
test
add
adc
dec
and
inc
mov
jl
jo
dec
enter
out
neg
stc
cmps
js
sub
jmp
ret
xor
cmp
and
shl
jae
out
fsubrp
push
icebp
or
and
push
rol
or
push
adc
retf
or
pushf
jg
dec
mov
(bad)
xchg
xor
bound
ret
sbb
(bad)
popf
cmc
gs
mov
fcom
cwde
pop
cwde
js
cmp
and
jmp
sub
das
fbld
pop
or
mov
mov
jmp
or
jg
loop
or
pop
stos
and
outs
aaa
mov
jae
mov
popa
pop
mov
push
mov
int
call
cwde
sub
adc
xor
sub
ins
pop
hlt
daa
rol
movs
idiv
cmp
jg
js
data16
lock
pusha
pop
adc
or
cmp
or
nop
adc
aam
ins
cdq
mov
ds
ins
or
inc
jb
xchg
sub
shl
arpl
not
stc
ss
push
out
mov
or
lods
call
pushf
mov
xor
jno
ds
mov
xchg
or
push
xchg
in
cmps
outs
mov
outs
mov
xchg
outs
mov
retf
add
loopne
scas
add
fnsave
add
add
cmp
mov
pop
cli
cmp
mov
mov
cmp
push
fnstsw
cmp
xor
jl
js
pop
mov
adc
mov
popf
adc
je
xor
out
adc
inc
rcl
popa
xor
xchg
div
(bad)
cmp
add
sbb
xchg
in
mov
es
fs
xchg
test
lea
sbb
and
lods
lods
cdq
repnz
outs
xchg
out
inc
adc
movs
adc
stc
enter
gs
cmp
shr
jmp
repz
not
std
sbb
leave
and
or
sbb
sbb
fwait
inc
sub
les
nop
mov
jl
aam
ins
les
adc
jne
pop
shl
cmc
stos
cmp
imul
sar
pop
sbb
fld
sub
mov
dec
jmp
aad
std
imul
or
movs
and
pminub
in
cld
cmp
arpl
dec
outs
data16
imul
sbb
shr
jo
call
mov
cmp
leave
jecxz
mov
mov
adc
dec
int3
enter
mul
add
sbb
(bad)
das
mov
ins
popa
mov
mov
ret
pusha
movs
fwait
and
cld
sbb
inc
pop
lahf
jl
and
mov
shl
dec
fdivr
mov
xlat
jmp
pop
stc
dec
xlat
xlat
loope
sbb
mov
jle
dec
xchg
mov
push
je
pop
xchg
outs
xchg
xchg
jns
call
sub
aaa
test
jecxz
fmul
cmp
add
jle
adc
sbb
cmp
test
sar
test
jl
ret
fwait
dec
mov
into
and
mov
mov
jne
iret
adc
mov
or
shr
pop
iret
retf
mov
pop
xor
pop
push
(bad)
push
test
mov
nop
dec
test
mov
push
mov
lods
inc
xor
jno
aad
mov
pusha
sub
enter
addr16
fadd
jbe
jae
mov
push
out
adc
stos
outs
cmp
add
test
sar
cli
iret
js
clc
shl
pop
shl
adc
mov
sbb
or
cmp
xlat
(bad)
dec
sub
(bad)
mul
xchg
fist
inc
sbb
mov
std
stc
or
dec
sbb
mov
adc
fcom
mov
and
cmp
rcl
(bad)
or
test
imul
mov
stos
push
jmp
lgdtd
shl
imul
out
push
imul
retf
mov
call
fwait
jecxz
je
in
out
test
sub
jne
dec
les
lods
or
xchg
out
mov
xor
mov
mov
push
out
mov
lods
xchg
add
mov
sub
sub
adc
imul
dec
sub
or
push
scas
xchg
je
inc
sahf
jns
pop
into
imul
into
aaa
scas
cpuid
hlt
xor
iret
push
mov
outs
push
daa
jns
mov
clc
bound
ss
xchg
js
mov
inc
(bad)
es
inc
pop
cmp
dec
or
(bad)
push
shl
fisttp
daa
imul
movs
ja
aad
in
mov
sub
xchg
push
test
cmp
jp
ins
sbb
push
pop
cli
sbb
mov
sub
dec
sbb
int
mov
mov
or
stos
div
jmp
(bad)
scas
arpl
jge
xor
push
adc
sahf
cmc
xor
mov
pop
fld
cmps
rol
in
repnz
daa
jmp
pop
push
std
ss
and
sub
(bad)
bound
xchg
push
push
or
inc
enter
add
dec
pushf
cmp
inc
inc
js
gs
mov
movs
fst
std
nop
aad
int
adc
jae
pshufw
dec
mov
fs
cmp
repz
mov
mov
xlat
pop
int3
xlat
mov
retf
xchg
mov
loope
push
pop
sub
call
xor
jl
and
movs
daa
xor
pop
cmps
les
push
inc
jle
sbb
cmps
js
push
lods
in
add
sbb
dec
xchg
(bad)
popf
mov
push
xor
mov
mov
pop
test
and
test
mov
mov
stos
fwait
add
das
fbld
inc
adc
lahf
js
fistp
cld
pop
mov
xor
add
jbe
mov
xchg
repz
and
adc
int3
xchg
inc
test
pop
pop
push
xchg
jmp
imul
bound
neg
leave
mov
inc
sti
mov
psrld
icebp
mov
cmc
lock
scas
cld
cmp
pop
push
icebp
mov
mov
in
fisubr
int3
push
add
test
mov
mov
pushf
test
cwde
fadd
mov
rcl
add
sbb
out
lods
shr
aad
sbb
imul
in
push
add
jcxz
and
add
xor
sbb
cli
mov
add
and
int3
cdq
and
stos
push
dec
sti
out
add
ins
xchg
and
outs
and
imul
xor
sbb
sti
mov
xor
adc
cmps
push
fcomi
add
mov
scas
sahf
lahf
fwait
test
ja
(bad)
sbb
das
pop
xor
jmp
mov
call
cmp
cmps
outs
cmps
dec
ss
std
xchg
pop
cmp
cmps
cdq
fnsave
ins
add
or
or
enter
pusha
mov
rcr
call
and
popf
imul
arpl
adc
das
je
adc
sub
xchg
test
sbb
je
pop
push
dec
cmps
cmp
test
bsf
push
adc
cmps
jnp
adc
xor
inc
dec
cmps
fimul
hlt
aam
popa
(bad)
xor
repz
jo
ret
or
dec
mov
xor
jnp
cmp
aas
cmps
cmc
imul
or
push
cdq
xchg
fadd
jmp
ret
pop
cs
jg
enter
cmp
dec
mov
push
pop
cmp
les
pop
push
call
fadd
lea
mov
lahf
jg
imul
in
mov
imul
cmp
stos
in
adc
mov
imul
leave
push
push
(bad)
xor
jmp
cmps
cs
loop
xchg
pop
aas
scas
mov
mov
sub
jmp
das
stos
dec
jne
jmp
adc
fwait
mov
cwde
mov
call
aad
inc
cmc
mov
cwde
aas
mov
cmps
mov
ror
cs
push
mov
scas
adc
push
out
outs
xchg
pop
sub
mov
add
mov
into
xchg
xor
dec
pop
mov
inc
mov
neg
out
xchg
xchg
sti
sti
mov
(bad)
test
xchg
and
fwait
icebp
scas
push
jb
std
inc
push
adc
outs
test
jl
cmp
add
in
xchg
sub
cmp
mov
jns
call
sub
(bad)
xor
add
loop
aaa
mov
bound
inc
add
test
dec
push
or
out
neg
movs
call
js
dec
adc
adc
inc
dec
and
lock
das
in
shl
mov
aaa
mov
cmp
jg
mov
mov
leave
out
aaa
mov
(bad)
xchg
leave
push
test
cwde
not
xchg
sub
pushf
sbb
leave
and
or
hlt
mov
sti
sub
dec
fstp
sub
mov
push
add
js
in
and
repz
lock
sbb
je
stos
fcmovnu
pop
clc
hlt
(bad)
rcl
xchg
inc
dec
test
pxor
adc
sti
sbb
ret
xchg
sub
test
stc
in
pop
arpl
fst
mov
jg
inc
(bad)
cld
rol
xchg
xchg
cmovo
adc
push
dec
setg
push
out
aad
mov
fmul
cli
sar
xchg
cmp
addr16
sbb
(bad)
fucom
push
(bad)
cld
rcr
jbe
and
mov
cmp
in
retf
add
lea
jb
jae
fidiv
sti
sar
push
sub
ja
mov
push
jg
xchg
retf
(bad)
push
movs
fnstcw
fadd
xor
dec
in
test
pop
repnz
aas
js
pushf
or
dec
test
out
push
cwde
repz
cmps
dec
push
call
push
bound
scas
hlt
(bad)
fnsave
mov
fisubr
xor
pop
stos
ins
(bad)
cmp
jecxz
xor
out
pop
mov
pop
add
out
sbb
call
lea
inc
es
(bad)
pop
sub
pusha
dec
ins
movs
imul
test
push
ds
xchg
jbe
pusha
cdq
leave
mov
rcr
mov
(bad)
hlt
lds
bound
adc
xor
mov
and
jmp
ret
mov
mov
sti
(bad)
mov
outs
imul
xor
retf
int
sub
fld
xchg
adc
xlat
data16
inc
push
xor
adc
in
pop
jp
mov
aaa
pop
lea
int
(bad)
in
movs
je
ja
inc
or
ja
stos
scas
cmps
sbb
mov
add
sbb
push
or
hlt
loopne
adc
mov
cmps
push
add
add
pop
das
sub
jo
jecxz
fstp
pop
mov
(bad)
inc
out
outs
add
popf
pop
inc
stc
dec
pop
sbb
pop
pusha
push
mov
jns
mov
btr
les
mov
xlat
popa
jl
pop
stos
inc
inc
sbb
bound
bsr
push
jne
stos
jo
sahf
adc
cdq
in
xor
(bad)
das
cmp
xchg
adc
leave
xchg
mov
(bad)
loopne
push
fbstp
out
rol
mov
lods
fst
dec
(bad)
mov
sbb
inc
pop
pop
ret
mov
dec
dec
jns
into
mov
pop
jb
hlt
adc
inc
mov
cld
mov
in
fs
mov
mov
xor
(bad)
fstp
xor
jnp
pop
scas
or
sbb
sub
jg
pop
dec
xchg
jl
dec
jmp
add
inc
shr
cmc
loopne
inc
mov
pop
nop
fld
adc
pushf
je
daa
imul
dec
inc
sbb
out
outs
jb
or
lods
out
push
or
adc
shr
jae
cmp
jmp
xchg
(bad)
retf
mov
shl
push
dec
and
into
adc
xor
(bad)
mov
ror
mov
iret
mov
frstor
jmp
in
and
mov
push
mul
jnp
jno
test
or
sub
aas
int
mov
ficom
cli
(bad)
push
adc
stos
loope
ret
cld
push
jo
sub
xor
fstp
pop
mov
cmc
cmp
and
das
xor
out
xchg
mov
bound
sbb
mov
and
xchg
scas
xlat
rol
fsub
mov
fmul
les
je
mov
mov
(bad)
fstp
or
adc
aad
aas
mov
and
mov
mov
pop
(bad)
cld
enter
add
test
or
cmp
int
packssdw
mov
loop
mov
add
popf
jb
stos
ins
xchg
leave
mov
jl
lods
loop
arpl
in
pop
inc
fisttp
xchg
mov
mov
repz
mov
test
mov
shr
loope
and
sbb
iret
aad
cmp
mov
mov
ror
xchg
mov
adc
imul
or
icebp
movs
xor
arpl
sbb
lods
inc
pop
mov
test
cmp
add
clc
add
pop
repz
xor
add
jno
mov
xor
dec
ret
out
test
nop
sbb
dec
ins
lea
pop
cmp
call
dec
(bad)
jmp
retf
nop
mov
mov
imul
arpl
wrmsr
add
call
mov
in
repz
jl
xchg
ficom
sbb
xchg
xor
push
or
loopne
jbe
push
std
outs
pop
xor
stc
fmul
stc
mov
push
mov
xchg
std
xchg
stos
jo
shr
push
mov
sbb
test
cmp
adc
mov
or
leave
inc
popa
xor
cld
dec
movs
enter
push
mov
aad
xor
fucom
mov
shr
adc
stos
movs
xor
aad
(bad)
fidivr
jle
xlat
mov
adc
mov
push
inc
and
test
imul
sbb
adc
stos
mov
ret
scas
inc
adc
cmc
sbb
jle
(bad)
stos
dec
daa
cmp
int3
call
imul
(bad)
sar
cdq
shl
rol
je
loop
sbb
aaa
lods
(bad)
fdivr
std
jmp
xchg
push
cs
mov
test
imul
std
add
inc
mov
adc
arpl
inc
sub
jno
xor
jle
sbb
adc
pop
push
out
int
ficomp
arpl
adc
mov
adc
mov
es
ret
(bad)
into
jle
cld
inc
and
retf
jge
mov
cld
and
jno
pop
mov
push
ror
fdivr
sub
jae
call
inc
xor
aam
inc
iret
jmp
test
mov
dec
mul
out
adc
adc
scas
jp
call
jmp
or
jge
jp
pop
add
push
in
clc
sub
movs
bound
sub
(bad)
test
cmps
mov
cmp
pop
daa
sbb
cmps
cmp
cmps
iret
(bad)
data16
push
mov
pushf
mov
pop
xchg
jae
loope
pop
(bad)
push
pop
daa
adc
mov
mov
mov
loop
push
daa
mov
add
enter
sbb
mov
(bad)
das
push
repz
xchg
in
fs
inc
loope
mov
xor
cmp
inc
mov
cmp
loop
movs
jne
mov
cmc
mov
or
lea
(bad)
sbb
(bad)
in
mov
(bad)
sbb
sub
sbb
pusha
dec
sbb
adc
lods
adc
mov
inc
stc
adc
les
cmp
mov
es
dec
mov
pop
in
mov
mov
lahf
ins
scas
iret
jne
mov
jecxz
outs
sub
inc
sbb
cli
mov
mov
dec
mov
or
repnz
hlt
mov
fidivr
lds
jnp
cmps
cmps
and
out
sub
movs
retf
sti
push
inc
rol
loop
jg
retf
or
dec
aam
jns
sbb
cmp
add
movs
popa
lods
inc
mov
ins
imul
test
out
adc
in
shl
sbb
sbb
sbb
push
ins
in
push
out
aaa
fwait
lds
or
sub
jmp
shl
xchg
dec
xchg
pop
std
mov
repnz
test
and
repz
or
mov
mov
mov
xchg
sbb
cmc
jge
dec
in
add
jge
mov
mov
daa
mov
mov
lods
push
and
rol
ss
dec
xchg
sar
shl
dec
popf
add
ss
adc
xchg
das
inc
movs
xchg
xlat
data16
xchg
(bad)
into
ffree
loop
fisubr
xor
ins
inc
imul
mov
jno
test
or
push
hlt
icebp
lds
dec
repnz
ja
pop
sbb
dec
nop
dec
pop
mov
mov
sbb
mov
loope
mov
into
and
push
call
sub
jle
and
jb
push
push
pop
jnp
std
xchg
jmp
imul
mov
mov
ficomp
add
push
sbb
ds
pushf
jbe
ins
fwait
pop
adc
xchg
mov
std
call
dec
sub
mov
adc
cdq
push
mov
xchg
rcl
mov
(bad)
fxch
sub
pushf
push
movntq
push
sti
cld
test
ds
ret
xor
test
inc
ret
mov
in
loop
inc
mov
mov
push
mov
cmps
sub
call
test
movs
dec
imul
js
add
inc
mov
push
out
xchg
add
clc
es
fiadd
pop
in
pop
icebp
xor
jbe
test
int
js
and
rcr
adc
pop
pop
lea
bswap
leave
popa
mov
jmp
xor
inc
jl
(bad)
cs
mov
xchg
nop
jns
or
or
jne
jle
fdivr
ret
inc
xchg
in
adc
pusha
sbb
sub
cmc
dec
adc
pop
xchg
int
pop
movs
and
lds
dec
(bad)
lock
mov
add
mov
stos
pushf
push
fprem1
dec
fwait
enter
add
lock
test
pop
int
jno
call
rcl
sbb
out
push
into
das
leave
aam
jnp
sub
adc
(bad)
fisttp
loop
dec
leave
fwait
xchg
adc
push
iret
hlt
sub
or
das
shl
push
in
rcr
cmps
jle
fstp
mov
inc
out
sbb
xor
ds
shl
dec
loopne
imul
scas
ds
jge
pop
xor
mov
adc
inc
mov
push
retf
fs
pop
and
addr16
mov
(bad)
cmp
sbb
cld
icebp
je
ss
cmp
mov
push
aad
aaa
out
push
pop
and
adc
sbb
push
outs
jo
test
pop
adc
dec
fsincos
inc
xor
mov
mov
mov
fstp
movlps
pop
pop
out
(bad)
sahf
inc
jmp
inc
scas
mov
xchg
xor
mov
xchg
and
out
fadd
xor
inc
mov
mov
adc
adc
cwde
sbb
pop
mov
xchg
add
call
ins
lea
sub
movs
out
sbb
sub
daa
ret
inc
aas
jp
jno
push
xchg
xchg
icebp
mov
out
lods
sar
mov
or
xchg
cs
js
xor
xchg
jno
xlat
jo
nop
div
out
pop
bound
ja
xchg
add
leave
push
sbb
mov
jne
out
icebp
sub
in
pop
je
cli
mov
aas
sbb
stos
leave
and
pop
xor
push
shl
xchg
mov
fmul
sbb
pop
loop
adc
arpl
jae
gs
push
out
pop
push
stos
dec
mov
stos
and
jne
test
mov
cmp
cmp
push
stos
retf
push
ror
ret
int
fidiv
mov
(bad)
(bad)
xchg
es
repz
(bad)
inc
popf
jbe
cmp
mov
stos
xlat
dec
popa
xchg
es
mov
call
jb
pushf
outs
jp
or
dec
in
mov
adc
retf
and
(bad)
jne
jle
stc
(bad)
retf
add
or
sar
test
push
sub
inc
xchg
cmp
nop
cwde
xor
mul
ja
xor
jb
mov
pop
push
hlt
fwait
mov
dec
or
cmp
dec
rcr
sbb
mov
inc
adc
int
fnstenv
cmps
jne
hlt
retf
jno
(bad)
push
cdq
pop
inc
ret
movs
jo
call
daa
add
adc
sbb
mov
sar
pop
arpl
ins
adc
xchg
jmp
cmp
push
outs
(bad)
enter
lock
jo
imul
push
add
addr16
dec
push
xchg
cmps
cld
cmp
out
aad
div
xchg
xor
inc
test
mov
sub
fs
push
jle
add
mov
ins
xchg
jecxz
push
cmc
mov
test
int
and
call
mov
cs
xor
sub
inc
call
ins
js
lods
fs
mov
popa
jae
std
dec
cmps
sub
mov
loop
mov
mov
pop
sbb
dec
(bad)
jmp
hlt
je
das
and
xor
ins
sbb
retf
mov
gs
sub
out
leave
jne
out
dec
imul
loop
aaa
hlt
add
cmp
mov
jge
sbb
mov
icebp
pop
inc
sub
ds
mov
(bad)
pop
pop
pop
cmp
sub
fwait
dec
stos
add
mov
xor
test
push
(bad)
(bad)
mov
jb
test
xor
add
adc
pop
stos
push
jo
(bad)
adc
dec
popf
sahf
outs
mov
das
jno
ret
cmps
xor
aaa
mov
cmp
push
rcr
(bad)
dec
mov
fadd
enter
jecxz
or
add
and
cmps
lods
je
xor
popf
pusha
sbb
jl
imul
retf
jecxz
inc
lods
push
fcmovne
sbb
stc
cli
sbb
add
pop
in
mov
mov
or
cli
(bad)
(bad)
and
dec
cdq
sub
xor
add
(bad)
cld
mov
xchg
xor
jne
std
and
ds
mov
mov
jl
aam
pop
nop
inc
aaa
rcr
bound
es
add
daa
mov
stc
jno
cmp
xlat
fidiv
mov
dec
fdiv
rcl
clc
dec
cmp
jecxz
das
mov
dec
sbb
adc
jb
xor
pop
cmp
cmp
std
dec
sbb
aad
js
pop
pop
mov
imul
inc
int3
mov
shl
lds
mov
inc
pop
push
daa
jmp
xchg
push
jmp
or
cld
aad
dec
mov
test
retf
xchg
push
push
xrelease
or
xchg
leave
inc
daa
push
dec
out
push
sub
out
shr
pop
and
xor
mov
loopne
js
pop
(bad)
and
leave
ins
xchg
int3
push
dec
push
movs
push
outs
cmps
dec
sub
adc
hlt
mov
pop
push
or
std
xor
rol
fbld
lods
mov
test
(bad)
push
lods
mov
jecxz
push
add
dec
enter
xchg
cmps
sbb
popa
cmps
cs
xchg
shl
mov
in
xchg
test
push
push
push
dec
mov
xor
movs
jo
cmps
aad
dec
scas
aaa
xchg
cdq
inc
xchg
dec
dec
rcr
fisub
out
cmp
dec
nop
dec
js
cmp
pop
dec
dec
(bad)
into
in
bound
cmp
jmp
movs
popa
mov
sub
inc
call
mov
loopne
mov
pop
call
jmp
xchg
dec
mov
mov
pop
jo
cmp
dec
jmp
sub
mov
xchg
xchg
scas
stos
lea
in
and
cs
mov
or
repnz
jo
and
xchg
and
repz
pop
popa
adc
pop
or
fld
stc
retf
test
xor
out
jle
xchg
ins
and
out
jo
retf
xchg
mov
dec
sbb
shl
fnstenv
inc
out
outs
cmps
add
arpl
mov
inc
cmps
retf
and
fs
xor
push
loope
and
movs
or
jl
mov
pop
jae
cmp
(bad)
fwait
scas
sbb
cmp
lods
mov
frstpm(287
dec
std
cli
and
movs
fnsave
cmp
inc
or
or
xchg
add
pop
dec
adc
movs
icebp
sub
nop
cs
add
xor
mov
mov
sbb
pusha
bnd
inc
mov
xlat
mov
imul
(bad)
popf
xchg
cdq
xchg
addr16
jle
scas
cmc
mov
mov
push
ror
add
and
into
jno
test
inc
add
adc
sar
ret
mov
mov
pop
xchg
je
movs
sub
cmp
les
lds
sub
sub
paddsb
and
push
jmp
js
xchg
test
dec
into
stos
shr
jnp
daa
stc
gs
xor
imul
inc
div
retf
data16
inc
das
cmps
jb
xor
sub
adc
adc
arpl
std
push
xchg
xor
int3
mov
and
mov
int3
sbb
es
sub
ss
xlat
lods
pop
out
stos
mov
and
ficom
and
call
pushf
outs
ds
clc
jg
test
cmp
cmc
add
ins
push
mov
or
push
jge
dec
fstp
inc
sbb
xor
adc
fdiv
add
in
push
hlt
js
in
bound
push
scas
push
cdq
push
pop
xchg
xchg
pop
jmp
push
popf
push
outs
xchg
inc
cli
inc
repz
mov
sbb
sar
cmp
cmp
in
mov
outs
push
les
jbe
(bad)
jbe
xchg
imul
fsubr
and
xlat
lds
xchg
ja
ds
inc
or
dec
ja
dec
push
add
lods
aad
std
test
mov
dec
sti
addr16
pmullw
adc
cmp
cmp
inc
pop
test
or
push
mov
int
pop
mov
sub
cs
sbb
sahf
and
jno
adc
adc
jne
pop
pop
mov
adc
scas
dec
cmps
shl
das
cmp
pop
dec
(bad)
lods
pushf
retf
add
sar
cwde
jnp
inc
or
push
in
mov
push
and
ss
mov
sub
xchg
ins
inc
scas
cmp
mov
call
xchg
mov
repz
daa
lahf
inc
int3
mov
cmp
repz
rcr
push
mov
cdq
pop
das
xor
mov
lds
std
push
jb
(bad)
jno
test
repz
xchg
fistp
push
mov
int
add
lods
mov
jae
mov
ds
mov
jb
fldenv
xchg
lea
neg
sbb
adc
add
nop
mov
lea
push
loop
push
or
dec
movs
dec
imul
or
(bad)
push
mov
test
aaa
sbb
pop
and
mov
ffreep
mov
faddp
lock
ss
imul
jecxz
shl
iret
mov
cmps
or
rcr
retf
mov
push
jmp
in
xor
push
push
pop
lahf
add
xchg
xor
pushf
and
(bad)
fsubr
inc
frstor
and
mov
outs
add
push
mov
outs
fst
jnp
cmp
push
xor
ss
int
or
push
shl
dec
sbb
not
mov
mov
cdq
xchg
fild
repz
data16
or
daa
xchg
sub
adc
outs
(bad)
push
pop
stos
add
cdq
mov
dec
lahf
cmp
test
xor
movs
mov
or
das
mov
cmp
jne
loope
rcr
and
rep
scas
cli
or
inc
dec
mov
add
pop
outs
ja
inc
or
(bad)
cld
mov
das
and
and
ins
adc
push
xor
jb
loopne
cmps
pop
sti
std
scas
daa
dec
(bad)
rcl
hlt
stos
xchg
mov
loopne
xor
cmp
mov
out
and
test
jo
inc
jmp
jge
out
scas
outs
mov
cmps
fnstcw
cmc
std
nop
jae
add
xchg
sub
or
inc
push
sbb
inc
xchg
outs
cdq
or
cmc
mov
je
sub
aas
cmp
cmc
xchg
jg
call
pop
popa
adc
dec
mov
mov
test
xlat
cmp
xchg
test
xchg
adc
inc
cmp
jnp
rcl
inc
gs
and
sbb
cmp
mov
sub
pushf
sub
inc
or
xor
loopne
retf
sub
mov
test
pop
int3
add
pop
out
call
sub
jae
xlat
sahf
lods
xor
mov
sbb
(bad)
add
jnp
lods
mov
stos
inc
jbe
into
xchg
leave
xchg
jbe
cmc
sbb
cmp
leave
rcr
sqrtps
movs
pusha
mov
sub
je
jns
nop
iret
aas
les
(bad)
ror
test
mov
hlt
dec
mov
stos
cmps
hlt
sbb
inc
push
pop
cmps
jp
push
jecxz
fs
dec
(bad)
jnp
lahf
fdivr
push
xchg
pop
fwait
sbb
mov
ss
outs
ficomp
js
push
cmps
or
inc
cli
inc
inc
leave
push
mov
cdq
jne
movs
rcl
xor
cli
aas
inc
into
mov
inc
inc
jl
popa
add
sti
add
xchg
(bad)
loope
pop
push
mov
jp
shl
pop
xchg
in
out
aad
xor
(bad)
mov
inc
or
xchg
jecxz
clc
ins
or
leave
lahf
aas
inc
dec
pop
xchg
push
adc
inc
in
fwait
adc
ins
sub
adc
and
dec
aam
imul
jne
sbb
out
test
mov
and
mov
xor
vmread
mov
sbb
pop
pop
xor
lods
aaa
sub
sub
arpl
push
xor
jno
mov
add
adc
sub
pop
jo
sti
aad
push
xor
mov
imul
es
shl
(bad)
push
inc
popa
or
clc
inc
das
push
mov
or
mov
cmp
loopne
jae
fdiv
hlt
fimul
sbb
fninit
mov
dec
xchg
push
dec
sahf
sub
scas
aad
xchg
mov
pop
add
add
(bad)
sahf
in
jp
inc
outs
mov
xor
mov
jne
shr
dec
shr
jae
cmp
and
jge
push
inc
(bad)
xor
repz
scas
jae
mov
mov
cwde
adc
retf
imul
outs
aad
inc
and
xchg
pop
scas
pop
jne
and
inc
xchg
cmp
jg
inc
sub
out
adc
mov
mov
(bad)
mov
das
fchs
shl
or
add
cs
cmps
data16
push
shr
cmps
jns
je
sub
mov
push
mov
fmul
push
fcmovu
sbb
repz
inc
mov
jp
pop
and
lahf
adc
push
push
dec
sbb
fs
cmps
push
mov
mov
dec
sub
pusha
imul
leave
(bad)
pop
mov
sub
arpl
mov
push
jae
push
jno
sti
jl
pusha
inc
loop
push
mov
outs
mov
sub
clc
and
lahf
or
jae
xor
scas
idiv
retf
retf
sub
pop
movs
js
and
jg
sub
jno
popa
cmp
rol
movs
pop
adc
icebp
movs
pop
call
push
inc
test
mov
dec
aam
pop
icebp
rol
and
jp
xor
out
adc
mov
(bad)
shr
adc
sbb
push
js
sti
fcmovne
inc
jbe
add
jle
mov
sbb
leave
fs
call
pop
js
scas
adc
add
add
cmp
jno
dec
mov
call
xor
cmp
inc
(bad)
jo
popf
xchg
inc
and
xor
call
adc
sar
push
xor
sub
je
dec
jecxz
add
adc
into
push
fbld
sub
add
sub
fnstsw
test
dec
dec
sbb
inc
imul
cmc
xor
dec
mov
pop
fsubp
mov
les
arpl
addr16
sbb
or
and
sbb
push
test
jbe
add
shl
idiv
mov
mov
sbb
sbb
sub
test
arpl
out
xor
out
jmp
scas
cmps
loopne
aam
lock
lods
fucomi
paddusw
sti
add
sbb
fs
push
(bad)
cli
dec
sub
aam
mov
jae
mov
xchg
call
fld
jne
pop
xor
aas
fcom
outs
shr
jp
pop
dec
add
adc
push
loopne
push
xor
mov
jle
cmps
shr
in
adc
mov
adc
ftst
stos
in
xlat
jnp
add
adc
aas
or
jg
call
scas
dec
aam
fcmovnb
cmp
xchg
mov
sbb
or
aam
into
call
lods
sub
stos
mov
fiadd
mov
gs
test
lds
(bad)
shr
sahf
xchg
loop
xor
or
adc
das
pop
outs
sbb
or
dec
out
stc
or
xchg
mov
adc
and
push
xchg
sbb
out
loopne
cmp
sahf
ja
rol
mov
test
in
out
jle
outs
rcl
dec
mov
jmp
adc
pop
add
and
push
gs
hlt
fnsave
xchg
aaa
add
inc
dec
out
es
js
push
adc
gs
jne
fsubr
push
push
mov
xor
inc
stos
jne
call
pusha
out
push
ins
inc
mov
push
scas
into
sbb
mov
xchg
push
loopne
imul
xor
int3
mov
sub
dec
scas
or
popa
sbb
fidiv
imul
ins
scas
pop
lods
mov
popa
dec
imul
push
test
xchg
xchg
fistp
and
or
aad
xchg
push
cmp
xchg
paddd
js
daa
push
sbb
in
jecxz
xor
fs
mov
pop
inc
hlt
pop
sbb
pushf
inc
sub
fsub
jg
push
mov
shl
push
or
sahf
jo
xor
jns
pop
push
jbe
and
out
xchg
jecxz
dec
test
fidiv
mov
cli
adc
xor
sbb
jno
arpl
cmps
push
loop
dec
daa
mov
adc
mov
jmp
mov
adc
adc
aaa
or
add
or
add
mov
mov
scas
idiv
mov
add
mov
mov
test
and
adc
push
fbld
jae
mov
into
shl
shl
and
push
mov
pop
inc
jnp
and
push
call
push
pop
add
fiadd
fist
inc
mov
sub
jle
repz
icebp
sbb
jo
pop
aas
(bad)
movs
popf
cld
dec
push
jmp
sub
std
lods
xchg
imul
jle
loopne
shr
and
test
sub
sub
push
inc
lods
adc
adc
fistp
sbb
push
push
out
inc
dec
js
push
mov
push
pop
(bad)
dec
add
xor
add
push
inc
adc
lds
sub
mov
adc
rcr
outs
mov
mov
stc
cmp
or
push
adc
jo
(bad)
mov
cmc
in
rcl
jmp
in
cdq
mov
loopne
inc
inc
mov
sbb
sub
mov
and
sti
push
fidivr
mov
or
popf
mov
mov
scas
cmp
imul
mov
idiv
xchg
mov
aaa
(bad)
xchg
push
sub
jae
fist
pushf
aaa
mov
mov
repz
sbb
lods
and
mov
popf
sbb
add
pop
or
push
mov
push
cmps
dec
xchg
in
aas
ficom
adc
adc
invd
sub
cwde
xor
cmps
push
sub
push
mov
cmps
fisttp
sbb
jbe
lods
or
push
retf
xor
add
jae
sti
(bad)
(bad)
pop
retf
aam
call
adc
out
mov
mov
dec
shl
pop
jmp
fisttp
mov
gs
inc
mov
pmulhuw
dec
jg
inc
cmps
(bad)
fistp
jl
xchg
sbb
icebp
jl
dec
push
fcom
popf
xor
clc
xchg
inc
xor
add
fwait
xchg
sub
dec
hlt
test
inc
shr
and
mov
xor
sar
add
push
mov
xor
mov
lea
xchg
ja
push
fdivr
out
nop
ss
rcr
mov
push
js
ret
int
aas
ins
stos
pushf
imul
addr16
jmp
inc
ja
popa
sub
fwait
seto
dec
clc
outs
sub
add
dec
add
std
mov
icebp
cmp
and
or
xchg
push
sbb
jmp
push
fld
icebp
xchg
jle
inc
mov
inc
mov
int
xor
cwde
ret
adc
sar
adc
or
inc
inc
add
ret
ja
nop
or
pusha
mov
into
div
setne
push
sub
outs
in
inc
lds
dec
bound
ja
mov
pop
ss
and
mov
sbb
out
xchg
dec
imul
and
shl
daa
sub
call
xchg
retf
xchg
repnz
jnp
fisttp
test
in
or
shl
mov
cdq
add
sub
nop
shr
jns
or
sbb
inc
mov
jns
adc
push
mov
ins
popa
out
mov
add
and
xchg
xor
imul
xchg
mov
ret
mov
dec
daa
test
arpl
or
lock
dec
dec
lock
or
rcr
call
fcmovnu
jle
xor
push
and
sbb
cmc
shr
lock
ins
lods
loop
and
dec
aam
mov
push
pop
stos
inc
test
add
mov
fisubr
push
ror
test
mov
aas
enter
(bad)
or
dec
mov
mov
dec
inc
aaa
push
loop
outs
push
jp
xchg
inc
loopne
pop
out
ret
jns
iret
lods
cmp
psubusb
pushw
clc
int
mov
mov
loop
xchg
push
push
jle
or
jg
ret
int3
pop
mov
sar
inc
and
pop
inc
sub
loope
call
dec
repz
test
jmp
add
mov
stc
dec
aas
movs
push
(bad)
(bad)
test
mov
ins
aam
pusha
dec
scas
or
fcmovb
imul
pop
clc
icebp
cmp
pop
movnti
sbb
aad
sub
add
retf
cmps
(bad)
nop
xor
je
mov
cmps
cmp
cmp
cwde
adc
rcl
inc
stos
rcl
push
popa
adc
mov
jp
movs
adc
sahf
jne
aad
(bad)
inc
push
mov
sub
(bad)
cmp
pushf
js
add
jae
push
jno
fisub
sti
inc
mov
push
jle
(bad)
loop
in
into
(bad)
lds
xor
jecxz
movs
movs
icebp
popa
and
js
inc
int
mov
mov
add
add
xchg
into
and
dec
mov
or
mov
mov
js
arpl
add
gs
jb
call
sub
repnz
adc
mov
data16
inc
push
leave
and
mov
imul
mov
ret
mov
cmps
sbb
outs
std
pop
fwait
inc
mov
mov
in
and
or
cmc
jo
push
ret
(bad)
call
add
or
cmp
push
mov
add
and
fisub
loopne
stc
sbb
adc
inc
(bad)
cmp
cwde
out
sar
inc
mov
std
stos
jmp
jb
outs
pusha
rcr
pop
pop
mov
adc
and
enter
or
add
imul
cwde
xchg
sub
mov
push
push
test
sahf
mov
(bad)
jae
aas
cmp
sahf
neg
out
inc
sahf
push
fstp
pop
adc
pop
mov
xor
sbb
adc
xchg
push
cmp
or
mov
adc
inc
push
cmp
call
movs
aad
mov
inc
sar
movs
movs
mov
mov
(bad)
hlt
dec
loopne
and
push
and
jge
cmps
leave
mov
lods
cwde
xchg
pop
into
sbb
std
(bad)
mov
int
xchg
mov
sahf
push
cmp
mov
cdq
mov
mov
test
mov
mov
ins
lock
mov
jmp
inc
sub
cmp
movs
sub
callw
inc
movs
fldenv
fsubr
cmp
adc
xor
rcl
inc
aam
jmp
data16
outs
inc
fcmovu
xor
imul
push
add
scas
into
add
imul
jle
sub
adc
or
adc
and
aas
mov
rol
push
jnp
nop
push
xor
add
scas
xchg
dec
pop
les
xchg
into
add
and
cli
mov
mov
cmp
jmp
xor
cmps
mov
jne
aas
push
sub
jne
lea
jne
jo
mov
cmp
bound
popf
call
or
mov
cmc
leave
std
cmp
or
mov
ret
int3
aaa
mov
dec
fcom
into
stos
mov
scas
adc
out
ins
mov
add
imul
inc
je
jl
stc
or
fst
lock
and
jne
hlt
xor
xor
add
push
mov
xor
jno
lea
dec
xchg
add
xchg
add
fdivr
add
hlt
jle
ins
jne
mov
imul
test
je
jle
ds
xor
shl
and
inc
rcr
jp
out
xor
or
(bad)
push
arpl
lock
jmp
out
call
xchg
fucom
out
(bad)
mov
out
adc
sbb
or
push
out
inc
jbe
xchg
push
in
repnz
mov
jl
rcl
pushf
rol
mov
hlt
inc
push
jne
(bad)
mov
pop
adc
xor
lods
sbb
stc
lea
sub
and
popf
retf
xor
pushf
pushf
dec
setne
add
mov
in
mov
sbb
adc
inc
mov
add
xchg
fsub
push
or
fucomp
jp
shr
adc
xchg
fdivr
cmp
jmp
inc
in
inc
ds
outs
cmp
or
aam
(bad)
xlat
inc
pop
and
mov
add
jns
ret
or
jmp
call
mov
ins
mov
add
cld
loopne
mov
jge
mov
mov
lods
nop
add
mov
loopne
gs
sub
cdq
fimul
aaa
(bad)
fwait
sub
inc
cmp
push
xchg
loope
cwde
neg
jecxz
nop
mov
in
loopne
xchg
fnstsw
jl
sub
mov
lods
xchg
add
and
nop
leave
fs
stos
repnz
pop
loope
loope
stos
pop
rcl
mov
pushf
pop
xor
aaa
or
cmps
(bad)
imul
inc
add
push
sub
sbb
loope
jne
xchg
fst
cmp
push
loop
pop
pop
and
inc
fiadd
inc
call
jmp
sub
repnz
stc
push
int3
hlt
fs
and
mov
pop
shl
(bad)
mov
add
js
aas
inc
shl
js
lea
inc
fadd
and
clc
xchg
aaa
mov
inc
outs
ins
in
call
or
mov
add
gs
lock
pop
rcr
jecxz
stos
and
adc
lock
mov
mov
mov
test
inc
lds
mov
out
ficomp
inc
aam
mov
sbb
xor
adc
ins
(bad)
cli
adc
sbb
dec
nop
push
fld
clc
movs
jg
loopne
out
mov
xor
imul
(bad)
imul
add
sar
scas
sbb
lock
call
call
sahf
je
push
hlt
movs
sti
mov
xor
xchg
xor
push
retf
add
mov
div
fs
imul
imul
push
mov
push
or
dec
add
xlat
cmp
es
xor
outs
inc
inc
xor
jecxz
pop
leave
push
jmp
call
movups
pop
out
leave
push
push
cmc
adc
inc
mov
jge
stc
or
mov
in
jle
imul
(bad)
ss
in
ficom
fwait
mov
icebp
push
adc
or
sub
mov
mov
jp
pop
jmp
mov
test
mov
outs
push
dec
pop
dec
or
imul
stos
scas
out
sub
adc
cmp
adc
pop
pop
mov
xor
push
std
int3
daa
pop
call
lods
pushf
pop
ins
and
sub
mov
das
pop
lea
ret
mul
mov
push
std
dec
add
xchg
lods
nop
xchg
ds
push
xlat
push
test
sbb
loopne
cdq
icebp
mov
mov
add
mov
add
shr
test
or
nop
fistp
shl
cs
mov
mov
in
mov
out
cs
ficom
add
neg
aaa
call
add
dec
xchg
cli
pop
int
fcomip
mov
cld
leave
pop
pop
lea
inc
adc
lahf
dec
jp
(bad)
dec
lds
mov
add
test
fild
call
out
shl
fsubr
xor
pusha
jp
cmps
cmp
mov
mov
jmp
jno
xchg
or
mov
lods
retf
popf
imul
scas
in
test
aaa
loopne
fmul
stos
ret
ficomp
mov
cmp
xchg
xchg
ror
jns
repnz
pop
enter
scas
mov
mov
cmp
je
xchg
call
xchg
jb
cmc
out
leave
adc
mov
imul
mov
mov
pushf
jmp
add
sbb
in
shr
cmp
lea
jmp
mov
jo
xor
ret
ja
mov
std
jge
pop
jmp
jnp
xor
push
fdivr
hlt
popf
jge
xchg
(bad)
out
mov
inc
int
rol
sub
sub
add
or
cmc
mov
push
jecxz
js
(bad)
mov
cmps
push
ja
dec
ret
fidivr
add
inc
cwde
(bad)
push
sbb
ret
xchg
fs
sbb
pop
shl
jmp
and
loope
jp
arpl
cmps
(bad)
std
mov
jecxz
add
pop
fidivr
test
xchg
xor
test
jmp
les
xlat
rcr
jle
test
int3
cmps
shl
cmp
sbb
xchg
cmp
outs
pop
rcl
sbb
xor
aas
popa
sbb
cmp
pusha
push
cmp
push
sub
fs
inc
outs
js
jge
push
pop
mov
scas
xchg
ret
jl
xchg
pop
outs
sub
xor
cmc
in
sub
cli
fmul
loopne
cmps
and
cld
or
(bad)
js
inc
dec
jmp
shl
retf
mov
aad
jg
push
fistp
test
xchg
rcl
jo
aas
out
test
ins
xor
jp
cdq
push
iret
(bad)
jp
sub
adc
je
les
lods
xchg
test
loope
mov
cmp
int
das
adc
fwait
mov
pop
xchg
push
mov
mov
xchg
mov
(bad)
dec
mov
fs
push
cdq
repz
push
mov
stos
or
jl
xchg
sahf
mov
or
sti
sbb
xchg
sub
pop
push
cdq
cmp
leave
cld
adc
aaa
aas
arpl
jg
repz
outs
cli
les
ficom
(bad)
cmps
xor
pop
dec
aas
imul
fxch
push
add
mov
push
mov
pop
cmp
sub
mov
mov
jle
push
dec
pop
aad
cld
dec
mov
jmp
pop
fnsave
pusha
inc
stc
sub
test
jne
xor
push
cs
inc
xor
dec
mov
iret
data16
ret
xchg
mov
enter
push
dec
call
lahf
(bad)
adc
mov
push
mov
cmp
and
fist
out
inc
inc
cmp
cwde
nop
sbb
adc
and
xchg
inc
xor
or
popf
adc
iret
pusha
mov
cmps
and
dec
mov
(bad)
stos
dec
sub
mov
ret
(bad)
pop
lea
dec
mov
mov
cmp
int
xor
cmp
sub
leave
scas
xor
add
inc
mov
add
call
ret
repnz
ins
push
in
mov
dec
sbb
sub
jnp
cwde
inc
je
and
rcr
hlt
dec
cld
adc
sbb
pop
inc
aas
and
mov
push
and
jno
mov
scas
sbb
sub
aad
(bad)
nop
and
(bad)
loope
mov
lahf
sub
pop
mov
add
cdq
out
lods
xor
jae
cmp
loop
or
clc
jb
add
push
push
inc
xor
inc
cmp
repz
dec
neg
or
push
imul
aad
dec
xor
jnp
push
movs
dec
lods
sub
sub
test
(bad)
es
imul
inc
mov
arpl
add
lea
sub
cmps
pop
outs
xchg
jo
sahf
pop
or
adc
das
gs
mov
out
mov
jg
xchg
gs
nop
mov
add
inc
retf
or
pop
and
add
repnz
and
push
ins
ret
shr
pusha
jae
pop
fchs
nop
retf
push
fld
and
mov
add
pop
xchg
lock
mov
out
dec
sub
add
stos
xor
and
out
aam
jmp
inc
dec
sub
(bad)
je
pop
inc
cs
lods
(bad)
pop
rcr
xor
enter
pushf
sbb
jmp
(bad)
sar
stos
addr16
xor
aam
stos
ret
movs
lahf
loopne
movs
ins
adc
mov
mov
cmp
inc
rol
std
test
in
rcl
inc
outs
bound
fsubr
sub
fwait
mov
push
pop
in
push
fdivr
sub
adc
and
popf
jl
jns
xchg
aaa
cmp
mov
xor
cmp
out
popa
mov
out
test
in
and
pop
or
dec
adc
out
xchg
jecxz
leave
jo
lods
inc
mov
imul
mov
mov
xor
or
aad
sbb
xchg
add
push
test
xor
or
pop
jmp
loope
sbb
mov
dec
jns
in
mov
imul
(bad)
(bad)
cmps
pop
pop
dec
mov
pop
shl
and
pusha
movs
aad
push
inc
cmp
mov
adc
jo
xchg
sub
lds
sti
cld
pop
sti
and
into
sbb
fs
adc
cmp
lea
jmp
adc
mov
loopne
mov
or
ja
sbb
sub
mov
cmp
addr16
sub
call
push
add
jbe
ins
mov
sub
cwde
dec
sub
aaa
mov
xchg
fcomp
adc
inc
and
mov
shr
mov
mov
pop
ins
jns
pop
inc
fsub
fucomp
cdq
pop
cmc
xor
mov
retf
in
shl
sbb
call
and
xchg
cmp
inc
jo
fmul
xchg
sub
into
push
inc
hlt
mov
mov
arpl
aaa
mov
into
(bad)
sbb
ror
push
sub
scas
mov
mov
push
scas
mov
sbb
dec
bound
adc
in
inc
add
imul
sbb
jmp
mov
ins
(bad)
in
add
mov
mov
pop
scas
push
lods
loope
pop
adc
pop
mov
push
adc
fcom
or
and
aaa
mov
movs
pop
inc
xor
cmp
and
sar
add
xor
fcmovu
lock
out
or
jmp
jecxz
fcom
call
jo
dec
xchg
in
movs
retf
ret
or
mov
dec
std
mov
sbb
dec
mov
iret
cmc
jp
mov
daa
or
stc
inc
mov
or
xor
int3
mov
cdq
cwde
es
pop
mov
pop
cdq
call
(bad)
adc
mov
scas
push
pop
outs
iret
mov
shl
(bad)
lds
leave
dec
push
jno
pop
mov
lods
push
mov
cwde
xor
out
sbb
icebp
push
call
pushf
imul
xchg
daa
xchg
mov
mov
cmp
sbb
es
mov
adc
imul
adc
icebp
popf
fidiv
out
mov
in
rcl
or
sub
cmps
xchg
call
sbb
(bad)
mov
inc
mov
add
xor
aaa
push
xchg
xor
xchg
arpl
je
fstp
pop
iret
je
push
sbb
inc
jle
bound
sbb
call
mov
into
loop
push
repz
out
push
mov
(bad)
inc
in
adc
loopne
add
lods
rol
push
jecxz
jns
or
aam
(bad)
jns
jb
loopne
int
mov
push
sti
dec
enter
int
rcl
inc
cwde
mov
or
je
(bad)
ret
xchg
xor
push
inc
lock
jo
imul
scas
and
mov
mov
cmp
ins
stos
into
pop
add
jmp
push
leave
out
shr
out
(bad)
aaa
scas
add
sub
ss
fistp
add
jae
call
sar
ds
adc
and
cld
ja
outs
lods
imul
inc
lods
popa
push
push
fcomp
sbb
xchg
push
neg
std
aad
pop
into
out
mov
out
dec
add
cdq
das
sub
(bad)
fcom
enter
adc
push
xlat
int3
je
lahf
adc
add
sti
in
jne
cmps
inc
ins
clc
nop
fnstsw
cwde
shufps
scas
repnz
and
mov
ficomp
push
cmp
sbb
mov
xor
dec
jge
shr
push
(bad)
mov
sti
mov
(bad)
jo
sbb
cwde
mov
adc
popa
addr16
pop
xor
push
xchg
ja
sub
sbb
xchg
mov
test
push
int
arpl
int
popa
enter
sub
cli
popa
sbb
rcr
fadd
test
aas
dec
fidivr
sbb
mov
jmp
(bad)
jmp
jmp
ret
jno
add
push
sbb
xor
jae
sbb
push
mov
cld
sbb
ins
hlt
push
aas
inc
scas
leave
xlat
xor
ds
mov
push
xchg
xchg
jecxz
xchg
ss
popf
out
sbb
cmp
sbb
push
xchg
mov
dec
(bad)
inc
jbe
mov
add
int3
and
cmp
data16
or
push
in
push
pop
(bad)
jle
ret
lock
sub
add
std
xor
(bad)
dec
adc
sub
das
and
inc
mov
rol
push
inc
and
ds
jge
cmp
pop
addr16
retf
outs
adc
aas
fucompp
push
sbb
jge
sti
or
push
cmp
or
inc
div
out
out
mov
push
ins
hlt
test
(bad)
fs
dec
sahf
mov
ret
push
dec
rol
push
sbb
fld
sbb
test
sbb
lds
mov
icebp
aas
bound
aas
pop
ret
adc
pop
sbb
or
mov
fisttp
les
addr16
pop
adc
outs
or
inc
lods
loope
and
jne
push
pop
push
ror
repnz
aas
fidivr
push
adc
addr16
ja
pop
fisttp
inc
outs
cmp
into
xor
push
pop
xor
ret
inc
fs
mov
sub
das
pop
cmc
mov
add
adc
les
mov
out
popa
scas
nop
test
inc
sub
retf
out
ror
pop
pop
hlt
cli
fdiv
lock
sub
add
dec
or
test
stos
add
push
pop
mov
imul
pop
xchg
outs
inc
adc
sub
xor
cmp
push
and
add
cdq
cld
pop
push
outs
ret
mov
and
inc
adc
mov
sub
push
loopne
pusha
arpl
xlat
and
ds
(bad)
rcl
cdq
retf
gs
and
out
lds
mov
fisub
pop
mov
gs
mov
addr16
jbe
mov
scas
movs
call
nop
add
xchg
xor
fcomip
xchg
xor
stos
iret
in
(bad)
jb
xchg
test
xchg
mov
push
cmc
mov
lahf
retf
les
stc
dec
push
xor
mov
pop
arpl
or
mov
mov
jp
fwait
pusha
aas
stos
mov
and
mov
sub
mov
arpl
xor
popf
cmp
imul
sub
cld
bound
test
jne
(bad)
aas
addr16
lea
stos
test
mov
jle
in
test
(bad)
ja
sbb
xor
cmp
add
adc
xor
jne
sbb
ficom
leave
xchg
fsub
jmp
adc
adc
and
cmps
mov
pop
adc
lock
cld
gs
in
ror
cmc
daa
xchg
gs
loopne
sbb
gs
dec
jmp
add
adc
jb
dec
pop
sub
call
mov
mov
xor
cs
ror
cli
or
aaa
ins
cmp
dec
xchg
es
sub
jnp
dec
mov
inc
inc
rcl
mov
jno
push
mov
sbb
(bad)
mov
imul
or
cmp
les
sti
aad
pop
ins
xor
xor
hlt
(bad)
dec
dec
retf
test
or
push
dec
mov
popa
mov
loop
ret
loope
cmp
addr16
fisub
mov
or
ja
sbb
or
adc
mov
shl
cld
icebp
(bad)
shl
(bad)
cli
loopne
data16
pop
js
fmul
dec
cmp
jmp
cdq
sub
cmp
and
pop
jecxz
push
outs
fwait
xchg
stos
push
aam
xor
or
adc
mul
dec
push
mov
test
or
sahf
pop
out
test
xchg
xor
add
test
xchg
push
and
lea
sti
push
mov
lock
dec
outs
(bad)
jecxz
pslld
jmp
mov
jno
(bad)
xchg
inc
mov
pop
je
or
pop
(bad)
cmp
sbb
xchg
rcr
adc
repz
cmp
mov
ss
(bad)
push
stos
mov
lea
call
inc
and
xor
cmps
(bad)
add
fwait
xlat
push
sub
jle
sub
xchg
push
sbb
push
cwde
les
xchg
shr
mov
int3
mov
sbb
call
pushf
cmp
fst
add
lahf
ud1
loop
jp
aam
outs
or
lods
inc
iret
addr16
(bad)
mov
fnstsw
test
into
cmp
dec
mov
lock
and
fisttp
adc
push
push
ss
loopne
mov
and
or
retf
lods
cmp
jne
mov
fxch
mov
push
jae
or
and
shl
and
popa
mov
inc
sbb
xor
cwde
stos
mov
std
stos
pop
mov
add
mov
fnsave
jne
ror
in
movs
jb
sub
pop
or
leave
mov
data16
xor
pushf
cmp
push
lods
cmp
test
pop
inc
and
into
or
lahf
or
xor
pop
and
push
xor
daa
(bad)
jnp
fcomp
jmp
aaa
(bad)
test
push
add
mov
xchg
and
aaa
jg
cli
mov
test
data16
push
test
pop
add
or
add
test
push
and
loop
adc
mov
idiv
(bad)
fnsave
mov
dec
(bad)
repz
adc
push
test
mov
push
arpl
cli
imul
mov
dec
hlt
push
mov
gs
or
adc
int3
fcom
dec
ins
mov
push
mov
cmovnp
xlat
xchg
mov
mov
loop
inc
inc
ja
or
repz
or
inc
cmp
leave
sub
inc
retf
pop
xor
hlt
ss
jecxz
enter
fwait
mov
mov
into
scas
fsubr
pop
aaa
xor
retf
hlt
mov
jge
mov
cmp
adc
inc
cmp
mov
sbb
push
pop
mov
jb
repz
addr16
pop
inc
pusha
push
jbe
ins
jecxz
mov
fadd
clc
jmp
xchg
pop
into
mov
mov
inc
pop
(bad)
ins
lds
or
addr16
and
cmps
inc
sbb
es
cmp
adc
cdq
mov
mov
xchg
xchg
dec
jae
inc
mov
xlat
test
lods
pop
add
cs
jne
jae
push
jmp
inc
adc
lock
or
pop
inc
inc
mov
inc
inc
mov
out
outs
pop
mov
mov
cdq
ss
and
cmp
jns
mov
dec
adc
push
or
addr16
test
cmp
(bad)
cmc
adc
lock
or
out
xor
stc
lea
out
xlat
lds
cmp
inc
mov
jns
xor
lods
xor
jns
call
test
enter
sub
dec
stos
cwde
gs
jge
inc
mov
dec
push
mov
pop
jo
int
jp
(bad)
das
mov
mov
fcom
cli
sti
std
fisttp
je
and
rcl
jg
shl
or
xchg
push
imul
jp
adc
jae
push
sbb
aaa
rcl
or
pop
pusha
jg
mov
div
add
dec
test
push
jmp
jp
fwait
adc
sbb
cli
cmps
aam
jns
popa
push
jl
or
push
stos
pop
pop
ins
push
rcr
int3
pop
mov
bound
fcom
dec
daa
add
adc
aam
adc
ins
imul
mov
js
addr16
push
test
mov
mov
cmps
jno
push
pop
popf
call
xlat
or
adc
cmp
leave
sub
add
mov
lds
cmps
cmp
lahf
shl
push
sub
cmp
sti
cmp
pop
imul
daa
rcr
lods
ds
and
retf
sbb
cld
jge
push
mov
push
mov
(bad)
stos
lahf
mov
fist
into
lea
pushf
cwde
mov
jne
mov
add
mov
jne
sahf
inc
loope
jg
or
cmc
imul
imul
xchg
inc
mov
dec
ja
dec
stc
call
nop
sbb
xor
jo
mov
push
leave
or
aad
iret
mov
hlt
ficom
fucomi
dec
js
cdq
add
loope
fsub
jnp
fist
mov
xchg
push
jmp
scas
xor
and
nop
ins
test
lahf
fsub
aam
in
push
adc
fdiv
jge
fwait
push
fisub
in
icebp
leave
inc
or
and
xor
jo
mov
inc
dec
add
mov
cmp
dec
aad
mov
xchg
out
jp
pop
jle
pop
imul
mov
push
stc
popa
cld
jns
cld
and
cmp
mov
mov
iret
idiv
loope
test
clc
inc
push
and
xchg
mov
sti
or
push
mov
mul
push
jnp
rcr
push
or
add
rcl
mov
push
pop
test
retf
mov
xchg
call
outs
push
sbb
jg
(bad)
xor
gs
in
ds
(bad)
iret
js
jmp
test
jle
or
sub
push
xor
sub
icebp
pop
and
jb
ror
pop
push
jp
mov
les
pop
lea
mov
ins
mov
repz
lods
iret
nop
std
xchg
ss
pushf
or
int3
sub
jmp
xchg
js
jae
(bad)
out
push
push
movs
or
aaa
into
and
cmp
ds
mov
add
aam
mov
clc
cmp
xchg
cmp
rcl
lods
popf
push
ja
xchg
xor
test
sbb
mov
pop
in
jge
jmp
(bad)
or
in
int3
xchg
xchg
add
sub
push
push
push
outs
(bad)
push
out
(bad)
out
cmp
mov
ja
add
pop
xchg
cli
pop
psrlw
jbe
ins
cwde
cmp
push
mov
dec
jp
cmp
movs
cmp
adc
sbb
jo
jecxz
sub
sahf
shr
std
sub
pop
mov
fisub
add
stos
repnz
retf
jmp
xor
adc
cld
jge
xor
pusha
into
xchg
pusha
loope
int3
push
push
dec
pop
or
stos
or
cmp
nop
jg
push
sub
inc
(bad)
mov
ins
mov
dec
adc
repz
mov
into
inc
sahf
push
cmp
pop
jmp
leave
jmp
dec
outs
xor
jmp
popa
mov
in
adc
adc
into
pusha
inc
xchg
outs
mov
es
inc
rcr
mov
shr
xchg
das
fisub
cs
enter
xlat
fidivr
push
in
iret
push
mov
dec
sbb
mov
xchg
jo
mov
and
xor
mov
push
(bad)
pop
outs
cmp
jbe
push
test
hlt
mov
loope
dec
or
arpl
sbb
jmp
mov
adc
mov
inc
cmp
mov
pusha
add
call
pop
cmp
outs
call
and
test
lock
(bad)
xchg
fisttp
dec
bound
das
rol
sbb
shl
call
xchg
xchg
mov
lods
gs
repnz
jge
test
outs
and
fiadd
das
pop
push
bound
push
or
or
dec
mov
add
jg
sub
repnz
jae
jp
ins
es
fdivr
xchg
mov
aam
lock
sbb
scas
je
int3
add
mov
or
xchg
rcr
xchg
inc
jae
stc
sub
or
sbb
jl
xchg
xchg
jg
xchg
sbb
mov
imul
push
jge
cli
out
xor
(bad)
das
mov
dec
or
popfw
(bad)
or
sti
push
dec
bound
outs
fnstcw
cwde
push
inc
mov
and
mov
lods
push
in
pop
jno
adc
arpl
enter
push
lea
mov
in
and
ins
fwait
sahf
sub
fistp
push
ins
frstor
mov
lea
fsubr
add
aad
or
icebp
cli
mov
add
push
cli
lods
and
sub
mov
sub
sbb
shl
jnp
fidiv
(bad)
jecxz
cdq
xor
in
sub
(bad)
pop
sub
adc
cmp
jne
ins
pop
adc
jmp
pop
adc
and
dec
add
movs
sbb
pop
or
jbe
cmp
ds
jno
repz
sbb
inc
outs
enter
sti
cmc
mov
scas
dec
xchg
or
or
in
dec
xchg
cmp
sbb
hlt
movs
popf
push
rol
xchg
ret
in
sbb
retf
cli
xor
in
cmp
dec
jg
enter
mov
ins
mov
xor
sub
push
cmp
mov
mov
pusha
jecxz
mov
mov
retf
test
mul
jnp
stc
ins
les
int3
fld
mov
jmp
ret
bound
adc
mov
cmp
jge
xchg
retf
jmp
ins
bound
call
adc
fiadd
push
aaa
test
xor
or
(bad)
jmp
ins
aam
pop
addr16
je
stos
std
mov
xor
xlat
stc
mov
jmp
push
pushf
mov
movs
sahf
(bad)
mov
sti
popf
fcmovb
ror
mov
sub
or
jns
inc
mov
lock
mov
aam
add
fild
adc
jo
fdivrp
jg
xchg
jmp
pop
xor
mov
push
cmp
jle
pop
int3
cmp
push
fwait
popa
sbb
and
inc
jp
push
pop
jns
push
jg
add
mov
(bad)
pusha
cmp
call
mov
into
add
sti
dec
cmp
out
push
add
cmp
adc
push
add
push
sti
dec
mov
xchg
pop
mov
xchg
fnstenv
ds
rcr
xchg
es
sbb
call
das
mov
imul
xchg
sbb
add
dec
pusha
xchg
icebp
and
push
adc
icebp
mov
test
push
cwde
addr16
stos
cmp
adc
mov
sbb
loope
add
aaa
cmc
imul
cmp
out
inc
and
xchg
xchg
xor
sub
sub
arpl
call
std
mov
inc
test
mov
imul
mov
dec
dec
and
and
jmp
outs
pop
cs
xor
sbb
mov
mov
ja
mov
lea
rcl
pop
adc
ins
idiv
imul
jle
mov
push
cli
out
in
dec
mov
hlt
sbb
(bad)
bound
out
nop
sbb
rcl
jmp
retf
cmp
cmp
stos
mov
sub
xchg
sbb
sub
sbb
movs
mov
cmp
sub
pop
stc
mov
int
mov
pop
mov
addr16
sbb
retf
pop
pop
sbb
sub
mov
sub
cmp
jnp
fld
arpl
add
sbb
mov
cmp
xlat
or
push
test
ret
in
in
mov
xor
push
bound
(bad)
gs
sub
sbb
dec
ins
hlt
popa
push
sbb
fld
cwde
stc
sub
call
xor
leave
aaa
cmps
jmp
push
mov
mov
jns
ret
push
pusha
out
sub
out
loope
pop
pop
dec
scas
fld
out
push
adc
sub
cmp
jmp
aas
xchg
lahf
(bad)
in
inc
shl
sub
sar
push
pusha
shr
retf
sub
mov
jg
jecxz
or
out
xchg
cmps
sub
pop
xor
std
lahf
gs
jmp
sub
js
pop
out
inc
mov
xchg
sti
inc
xchg
mov
retf
fistp
pop
movs
mov
lods
or
add
lods
ins
mov
popf
inc
pusha
inc
and
int3
imul
mov
inc
in
pop
out
das
mov
jp
into
push
inc
movs
and
je
inc
add
mov
repz
test
in
or
xor
les
mov
cmp
cmps
dec
sub
(bad)
js
cld
inc
enter
pop
adc
xor
cmp
mov
jge
cmp
push
and
(bad)
icebp
mov
mov
cli
pop
popfw
pop
xor
mov
xor
shl
je
repz
fdivr
in
push
stos
sbb
(bad)
jge
cs
in
aaa
push
xchg
arpl
cmp
push
mov
inc
das
loope
adc
hlt
es
test
inc
imul
add
mov
mov
dec
mov
aad
xor
outs
push
mov
pushf
pop
stc
daa
xor
popa
xchg
mov
daa
lods
xchg
ins
cmp
outs
(bad)
outs
in
mov
das
mov
jge
ret
aad
pop
out
jge
sbb
mov
lea
aam
jmp
out
scas
mov
and
mov
pop
jmp
hlt
ror
loope
inc
cmp
out
ja
pop
xchg
loopne
dec
stc
cli
test
xor
xchg
mov
xchg
inc
pop
jecxz
or
jmp
je
jae
loopne
dec
push
sbb
pop
xor
xchg
mov
push
add
retf
jg
sub
dec
jbe
cmp
aad
dec
mov
js
push
sub
pop
inc
inc
and
daa
jb
adc
mov
xchg
pusha
xchg
fmulp
cld
or
(bad)
cdq
push
int3
lea
(bad)
sub
(bad)
movs
imul
mov
inc
push
push
mov
out
pop
cmp
jp
fadd
leave
cmc
jl
call
add
dec
mov
inc
xchg
xor
nop
mov
push
pop
push
dec
int3
test
out
jge
retf
and
pop
dec
or
dec
hlt
mov
inc
jmp
shr
dec
adc
mov
sbb
xchg
mov
mov
(bad)
jnp
jns
lahf
xor
dec
push
inc
xchg
movs
mov
outs
or
mov
mov
cmp
imul
pop
add
loop
cli
sub
sbb
nop
es
inc
out
fld
adc
aad
xor
jg
or
or
ret
ss
cs
jg
retf
add
pop
jle
cmp
movs
ja
adc
and
(bad)
cmps
shl
pushf
jecxz
mov
and
mov
popf
aaa
fild
inc
jecxz
clc
ds
sti
cmp
call
fild
(bad)
in
sub
dec
add
test
stc
lea
jb
pop
and
aaa
(bad)
adc
push
mov
fisttp
xor
shl
(bad)
xchg
retf
xor
in
mov
das
shl
mov
out
push
push
jb
shl
(bad)
mov
add
dec
icebp
mov
rcl
mov
push
inc
cli
sub
ins
scas
jb
in
(bad)
sub
popa
out
adc
nop
icebp
push
xchg
push
push
pop
repz
jne
fidivr
iret
xchg
sub
rcl
outs
sbb
rcr
call
xabort
popf
retf
jne
repnz
je
cmc
push
push
add
(bad)
fcomip
(bad)
hlt
outs
pop
adc
fild
shl
xchg
mov
das
push
xchg
or
push
inc
(bad)
not
nop
xchg
lods
mov
popa
dec
xchg
fdiv
call
mov
push
ins
leave
sbb
mov
xchg
mul
sbb
fld
dec
sbb
sbb
mov
mov
mov
push
push
call
mov
push
ja
das
add
loopne
outs
int
cmp
shl
cmp
pop
pop
aaa
pop
xor
and
jle
jo
and
xchg
repz
sbb
push
cmp
mov
xchg
pushf
pop
ja
lds
fdiv
nop
sub
sub
jnp
(bad)
mov
jo
fcom
dec
es
out
mov
and
or
pusha
jno
dec
cmps
test
sahf
ins
in
xor
xor
push
pop
fnstcw
pop
or
cwde
xor
dec
sub
xor
jbe
pop
xchg
mul
inc
push
enter
add
pop
jae
outs
xor
push
hlt
loop
imul
not
inc
mov
cmp
leave
mov
bound
push
std
mov
jp
jns
hlt
aam
fbstp
in
nop
ret
dec
dec
loope
or
in
clc
cmp
cmp
dec
test
lock
sar
into
ror
sbb
es
call
jns
pop
out
fidivr
popa
jmp
fistp
sbb
test
rcl
sub
xchg
lock
push
add
ja
cmp
jge
js
pop
push
or
test
push
cmp
mov
mov
test
call
and
sub
jg
xchg
push
lahf
imul
or
xchg
jl
mov
xor
push
add
sub
out
and
dec
stc
ins
ficom
scas
out
sbb
jle
movs
push
sbb
cld
test
xchg
in
mov
fbstp
adc
imul
sub
mov
mov
mov
mov
sub
xor
movs
xchg
adc
inc
xchg
pop
aaa
xor
js
pop
outs
jle
xchg
aaa
adc
adc
push
cs
ins
adc
cmps
jne
retf
pop
sub
sbb
loopne
push
aas
pop
enter
adc
fidiv
inc
add
cmps
outs
mov
push
xor
mov
loope
shl
xlat
adc
test
cld
push
aam
dec
or
cld
push
ret
dec
mov
and
cmp
outs
or
pop
mov
xor
out
mov
scas
mov
rol
rcl
pop
imul
in
ins
pop
cmps
hlt
call
jp
fs
inc
jle
pop
aas
out
js
jb
inc
xchg
mov
lock
sbb
(bad)
in
sub
test
test
mov
ds
and
daa
hlt
mov
xchg
inc
inc
(bad)
scas
xlat
sub
icebp
(bad)
xor
cmc
and
fwait
xor
add
dec
dec
in
out
shl
dec
adc
mov
neg
jo
sub
adc
and
repnz
sub
iret
ins
pop
sbb
in
xor
icebp
dec
nop
icebp
xor
int3
sar
dec
sti
xor
or
test
fldcw
les
cmps
sahf
and
leave
or
xchg
rol
inc
std
mov
add
arpl
aam
lods
jl
or
std
inc
push
fst
cs
push
or
popf
sar
add
adc
cmp
int3
icebp
call
xor
ins
cli
inc
jae
mov
mov
xor
xor
jmp
cmp
inc
(bad)
out
cld
ret
lds
inc
pop
ins
retf
jl
fadd
mov
outs
jp
int3
push
and
or
sahf
sbb
mov
sub
xchg
aam
pop
xchg
sbb
xchg
jo
mov
and
cmp
pop
int3
push
dec
scas
scas
(bad)
popf
push
sub
fdiv
cmp
pusha
or
xchg
cmp
(bad)
jmp
out
scas
sub
ja
push
add
popf
pop
iret
(bad)
fdivp
jmp
(bad)
mov
or
xchg
mov
sbb
cmp
ins
dec
lods
scas
stos
sysexit
into
cmc
mov
movs
push
fidivr
pop
test
or
dec
and
aaa
test
rcl
ins
fs
movs
add
imul
and
fadd
adc
dec
push
push
cmps
mov
retf
aas
neg
inc
pop
or
mul
jno
shr
ficomp
fstp
enter
pop
fcomp
dec
inc
ss
bound
mov
mov
mov
xor
daa
fdiv
cmp
sbb
mov
xchg
mov
mul
jmp
add
pop
push
and
in
adc
inc
xchg
ins
test
das
retf
pop
inc
popa
pusha
pop
test
movs
es
loope
mov
aad
push
adc
add
call
xor
stos
gs
lea
mov
cmps
xchg
and
mov
inc
push
popf
ror
out
push
inc
enter
jnp
fs
push
or
jecxz
cmps
rcl
cmps
push
pop
pop
xchg
shl
repz
pop
(bad)
pop
mov
scas
pop
cmps
xor
adc
xchg
jb
and
fdiv
hlt
xchg
jns
cli
cli
xlat
daa
sahf
push
arpl
dec
daa
pinsrw
rol
sub
jo
out
add
loope
outs
cmp
cmp
(bad)
retfw
jle
dec
outs
xor
pop
popf
pop
mov
mov
or
outs
aas
inc
imul
mov
mov
in
repnz
sub
clc
stos
test
jmp
fadd
adc
ret
sbb
ins
xchg
pop
repnz
jle
push
loopne
mov
or
int3
sbb
cmps
mov
mov
xchg
xchg
push
retf
(bad)
sbb
retf
cmp
sub
push
(bad)
outs
daa
cdq
sahf
mov
jmp
pop
aam
lock
sub
test
xchg
pop
bound
cld
fadd
icebp
pop
sbb
imul
leave
ds
mov
push
adc
stc
int3
mov
and
push
stc
dec
int3
inc
aam
dec
fldcw
hlt
repnz
push
jle
cmc
dec
push
pop
test
mov
mov
sti
push
and
and
add
inc
cmc
or
loop
cmp
xor
mov
in
addr16
mov
(bad)
std
movs
into
xor
pminsw
imul
inc
ret
pop
sbb
pop
out
cmp
pop
jmp
stos
push
fdiv
pop
dec
pop
mov
adc
sub
test
mov
mov
inc
into
stc
jmp
pop
fisubr
xchg
mov
sbb
mov
xor
cdq
ffreep
cwde
aad
mov
int
mov
ins
or
xchg
sbb
scas
push
call
mov
in
inc
in
sub
inc
xchg
jno
adc
std
mov
dec
int3
ficomp
test
inc
fisub
std
cli
lods
imul
xchg
push
data16
outs
and
ror
or
daa
mov
mov
cmp
adc
mov
dec
stc
jp
movs
icebp
push
mov
sub
cli
sbb
mov
mov
mov
pop
pop
fidivr
and
push
push
pop
xor
pop
clc
sbb
mov
lahf
and
cvtdq2ps
dec
xor
cli
retf
fwait
jle
sbb
sub
cmp
and
push
sbb
jbe
cdq
cmp
jae
aad
popf
test
add
dec
cdq
daa
xor
inc
push
fadd
sub
fbld
mov
fisttp
pop
sub
add
(bad)
sbb
shr
add
call
mov
add
fdiv
jb
and
jnp
inc
xchg
mov
or
mov
ins
push
dec
jb
push
xor
add
int3
mov
retf
ds
xchg
cmps
pavgw
pop
test
sti
inc
jge
out
lea
adc
jmp
sar
cmp
js
push
mov
cs
out
and
push
sub
push
test
sbb
pop
lock
add
fiadd
xchg
fstp
pop
stos
dec
mov
dec
and
sub
gs
leave
retf
fs
fisubr
call
pop
gs
(bad)
les
adc
cwde
sub
mov
cdq
push
scas
cs
xor
int
push
jg
mov
retf
push
hlt
data16
sar
push
imul
out
sbb
mov
mov
jl
sub
xor
out
fcmovbe
repz
sar
xchg
int
fld
cmps
inc
inc
cwde
pop
mov
push
add
jbe
in
fld
icebp
mov
sbb
dec
enter
lods
dec
xchg
stc
mov
repnz
ins
aam
(bad)
xchg
add
inc
xor
(bad)
aam
in
mov
loop
jmp
adc
add
dec
jnp
cmp
and
adc
and
(bad)
cmp
jb
fld
sub
(bad)
cmc
sbb
dec
clc
mov
scas
sahf
cmp
lods
dec
sub
push
cld
ret
cmp
jecxz
jnp
sbb
pop
push
clc
scas
mov
pop
mov
ss
pop
xchg
mov
xchg
adc
lock
xchg
idiv
mov
xor
mov
adc
out
mov
inc
pop
adc
or
jg
sub
pop
mov
popa
jmp
in
in
out
add
add
dec
push
pop
fisubr
inc
icebp
or
enter
std
cmps
sahf
fisub
cmp
ret
fstp
cdq
aaa
dec
push
leave
rcr
sub
(bad)
add
or
pop
rcr
jl
push
and
jmp
push
sub
repnz
jae
or
in
jecxz
push
outs
dec
cmp
pusha
add
ret
neg
or
bound
fiadd
pusha
jp
gs
gs
xchg
and
push
ffreep
mov
add
mov
cmp
outs
mov
rol
push
out
shl
mov
cdq
std
out
pop
inc
xor
xor
sub
jle
jno
sbb
ja
or
fwait
jns
jle
ds
lea
or
adc
lods
outs
xchg
ds
xor
inc
scas
jae
mov
cmc
test
clc
scas
xchg
ins
xchg
ss
mov
ss
jl
scas
cmp
mov
jne
es
sbb
xchg
and
and
xor
jp
cmp
or
cmp
rcr
add
fs
jb
jb
sub
out
jg
std
jecxz
test
dec
inc
mov
rol
int3
adc
push
in
test
jnp
sar
test
xchg
inc
fadd
mov
mov
jo
call
pop
lea
xchg
sbb
outs
sti
cli
cdq
aam
mov
add
dec
div
xor
xchg
aad
push
sub
sbb
movs
cdq
pop
push
icebp
popa
xchg
mov
lods
sub
jp
fisttp
add
dec
cwde
das
jb
jge
ins
push
(bad)
cld
jmp
(bad)
mov
inc
push
fdivr
mov
jge
(bad)
cdq
jbe
rol
int3
(bad)
call
and
out
cmps
lock
jnp
outs
jns
jbe
cdq
adc
cmp
add
scas
sbb
push
in
retf
mov
or
dec
jl
(bad)
cmp
int3
adc
aaa
ins
cmc
gs
sub
mov
mov
mul
dec
(bad)
sti
xor
mov
xor
mov
into
or
scas
cwde
mov
shl
stos
fstp
daa
and
sbb
mov
xchg
mov
js
jmp
into
mov
xchg
jp
jle
inc
mov
mov
mov
or
cmp
cmp
das
movs
sbb
in
add
gs
movs
(bad)
xchg
cmp
outs
popa
out
aad
arpl
mov
fadd
fdiv
sub
xchg
out
xor
ret
mov
sub
cmp
hlt
scas
jg
sub
mov
jge
sbb
std
test
sub
js
pop
jle
ficom
fsubr
adc
xchg
dec
jle
sbb
aaa
mov
adc
push
pop
imul
push
pop
(bad)
pop
and
cmp
repz
jnp
jl
adc
sub
imul
mov
push
or
mov
test
jo
push
xchg
push
xor
and
mov
test
scas
xor
ins
push
inc
shr
xchg
mov
loopne
dec
xor
xor
mov
retf
mov
dec
sbb
lock
les
ss
sbb
jae
dec
imul
inc
mov
les
bound
inc
or
inc
push
out
cli
jge
cmp
jnp
sub
push
lahf
pop
add
retf
push
pop
pop
jo
cdq
push
push
cmp
mov
ror
xlat
cmp
pop
les
shl
repnz
sub
jl
loope
daa
cmp
jmp
sub
pop
arpl
cld
leave
mov
shl
mov
push
mov
call
and
cli
or
dec
dec
dec
dec
xchg
and
sbb
xchg
push
sub
sar
or
and
sub
dec
dec
pop
mov
mov
or
cmp
test
add
push
inc
cmps
mov
xchg
std
push
sti
imul
adc
xor
loop
int
pop
xor
add
and
pusha
jns
push
push
jne
push
or
xchg
mov
xchg
je
cdq
clc
mov
shl
retf
in
retf
add
xchg
mov
dec
fiadd
not
les
fs
or
aaa
test
mov
or
inc
xchg
add
and
addr16
mov
or
fisub
xor
dec
mov
sbb
dec
int3
adc
aam
inc
push
cmp
mov
sbb
and
scas
push
xor
jl
jo
adc
xor
mov
clc
imul
arpl
jae
(bad)
je
jbe
jmp
adc
sahf
cmps
pop
lock
jo
and
dec
mov
clc
sahf
and
ret
test
pop
dec
stc
test
(bad)
and
rol
dec
push
push
xchg
call
xchg
push
mov
cmp
inc
or
mov
xor
arpl
sbb
mov
push
xchg
sub
jbe
add
adc
jnp
pop
add
xchg
rcl
pop
call
mov
sar
(bad)
jecxz
retf
fbstp
inc
cdq
mov
ficom
cli
adc
hlt
and
icebp
stc
or
jl
inc
mov
ds
stos
sub
cmc
push
xor
int
dec
rol
dec
call
out
movs
xchg
jl
jle
(bad)
mov
xchg
mov
ret
xchg
mov
inc
arpl
cmc
out
arpl
mov
aas
lea
ins
(bad)
mov
jae
and
or
mov
pop
xchg
movs
dec
mov
pop
jg
arpl
cmp
neg
(bad)
jle
aad
stos
or
inc
das
pop
ins
jge
pop
pusha
or
aas
in
hlt
pop
and
hlt
outs
aad
shl
push
push
mov
fisubr
pop
bound
xchg
add
clc
aam
push
mov
in
sub
xor
ret
mov
push
rol
mov
mov
enter
mov
mov
mov
add
cmp
fwait
xchg
xor
test
int3
popa
add
mov
jbe
sub
mov
inc
int3
leave
ins
jne
push
cld
push
adc
mov
sub
cmp
mov
push
and
or
mov
popf
jne
(bad)
(bad)
fwait
ds
and
inc
fmul
add
push
adc
add
nop
xchg
(bad)
jecxz
xor
adc
retf
sub
sub
lahf
std
lahf
(bad)
sar
mov
(bad)
lock
sub
cmc
mov
sbb
inc
jmp
inc
xchg
mov
dec
out
pop
rcl
gs
push
(bad)
jl
push
jns
lods
es
mov
imul
lds
mov
repnz
push
xor
das
add
adc
cwde
mov
enter
or
xchg
je
fwait
into
rol
cmps
xchg
sahf
dec
js
push
mov
out
inc
mov
popf
imul
arpl
retf
js
pop
jecxz
jo
xchg
sbb
add
rol
test
iret
enter
or
add
test
sbb
sbb
fst
adc
inc
mov
jmp
lods
js
xchg
movs
rol
loopne
mov
sbb
shl
jo
es
xchg
and
jmp
es
mov
mov
pop
and
and
xor
neg
pop
das
dec
in
mov
adc
sub
or
jg
jns
sbb
(bad)
add
xchg
dec
push
stos
mov
aas
lods
and
xchg
or
idiv
sbb
mov
stos
xlat
xchg
xchg
cmps
clc
pop
mov
mov
push
cmp
push
jecxz
cmp
pop
mov
hlt
xchg
cdq
adc
test
ins
push
lahf
xchg
fcom
loop
sub
repz
std
fmul
dec
addr16
pop
xchg
push
(bad)
in
push
pop
js
xor
dec
mov
push
iret
popa
cld
rol
and
xchg
jle
sahf
sahf
push
or
sbb
cmp
scas
mov
in
xlat
mov
fcom
xor
push
ja
ss
add
jl
and
sbb
cmps
add
rcl
push
imul
mov
sub
shr
in
cmp
stc
push
nop
cld
jg
fsub
cli
pusha
out
or
add
std
cmp
xor
mov
aas
jecxz
and
iret
rol
dec
jecxz
mov
(bad)
out
je
push
jecxz
dec
arpl
out
mov
sahf
bound
(bad)
mov
sahf
ins
cmps
cmp
sub
test
jg
and
add
in
out
dec
sub
arpl
pop
push
out
aad
add
retf
add
sbb
sub
push
xchg
pop
xor
jno
into
pop
or
(bad)
inc
adc
ficomp
sbb
jmp
jbe
mov
jne
(bad)
pop
pop
jecxz
loopne
mov
push
push
pop
jmp
retf
ror
cmp
test
js
mov
push
hlt
adc
sub
mov
int
mov
gs
es
add
push
cmps
hlt
mov
movs
outs
outs
cdq
pop
jbe
out
xchg
xchg
sub
jne
fimul
push
xchg
aam
ins
push
int
daa
inc
pop
add
mov
jl
imul
cmp
scas
loop
jmp
fidiv
xor
sub
loopne
in
or
shr
out
cwde
(bad)
sti
imul
push
jl
imul
loope
lds
sbb
mov
stc
in
inc
mov
inc
(bad)
adc
xchg
cmp
mov
and
pop
ret
sbb
ds
leave
sbb
std
and
les
dec
fimul
sbb
into
push
cmp
mov
mov
jg
add
mov
popa
jns
shr
dec
aam
push
sub
jg
pop
and
loope
loop
mov
imul
mov
rcl
inc
loope
fadd
popa
imul
js
pusha
or
cdq
push
mov
inc
dec
jl
pop
cmp
mov
imul
or
loop
mov
cmp
or
sbb
push
jge
iret
aad
push
sbb
test
retf
pop
mov
cli
hlt
cmp
aam
fsubr
push
fcom
dec
loope
in
inc
dec
cwde
mov
loopne
sub
rcr
jo
shl
ret
clc
xchg
cmp
push
and
sub
add
sti
pop
sbb
mov
fcmove
mov
add
fild
cmp
fs
daa
div
mov
retf
add
jne
rcl
(bad)
das
sub
push
fild
loope
or
push
cmp
push
sbb
inc
(bad)
xor
inc
mov
jnp
mov
push
fsub
je
cmp
(bad)
shr
jecxz
or
(bad)
loop
jnp
or
inc
iret
(bad)
jo
nop
(bad)
sbb
mov
int3
add
std
jl
rol
scas
pop
fimul
leave
(bad)
cs
jnp
or
or
lock
shl
ret
mov
pushf
pop
xor
sbb
xchg
mov
inc
rcr
(bad)
pop
jns
sbb
mov
xor
in
pop
mov
fwait
pop
mov
(bad)
pop
mov
lds
cs
ret
pop
sahf
int
pop
mov
mov
push
adc
mov
in
or
mov
mov
shl
stos
mov
addr16
(bad)
jl
push
jae
mov
or
stc
stc
ins
lea
cmovle
push
lods
inc
mov
mov
adc
sub
fs
adc
mov
cld
es
rol
sub
cmp
imul
and
add
popf
retf
pop
(bad)
sahf
cli
pop
std
xchg
dec
dec
or
mov
enter
and
mov
in
jg
clc
(bad)
ins
es
pop
push
(bad)
mov
fs
cli
adc
xchg
icebp
movups
ss
xchg
popa
dec
ins
in
pop
daa
fdivr
cmp
repnz
in
stos
mov
gs
mov
sub
pushf
pusha
push
cmp
push
add
out
adc
retf
cmp
lds
xchg
add
mov
cmc
nop
lea
add
push
jbe
add
or
push
loopne
jge
popf
out
push
leave
mov
mov
xchg
pop
rcl
adc
jns
xchg
call
dec
xchg
int3
jecxz
leave
call
daa
pop
add
rcr
scas
std
xchg
pop
test
xchg
imul
pop
dec
sbb
mov
and
arpl
sub
(bad)
xor
fcmovu
sub
dec
inc
xchg
push
sub
jb
cmp
sbb
iret
mov
push
or
cmp
mov
push
pusha
(bad)
lods
ret
popf
test
in
push
mov
icebp
out
loop
les
adc
jecxz
lock
or
dec
das
sbb
stc
sbb
mov
inc
sub
(bad)
lods
pop
ror
inc
adc
(bad)
mov
enter
push
inc
mov
retf
mov
or
cwde
and
sbb
ins
jne
jmp
adc
out
addr16
imul
fisttp
test
mov
push
dec
sbb
(bad)
cld
lock
js
outs
jmp
pushf
gs
jae
ss
dec
jae
ja
xchg
push
aas
fwait
les
dec
xchg
int
repnz
stc
arpl
js
add
nop
jns
in
popf
cld
fs
out
and
test
rol
ror
pop
out
sbb
jl
mov
pop
push
cli
and
cvtdq2ps
lds
sbb
sbb
(bad)
jge
int
pop
mov
mov
dec
aaa
fisttp
push
push
adc
movs
shr
loop
cmp
(bad)
cli
xor
in
or
pop
mov
inc
stos
inc
sahf
ror
sbb
cmp
pop
repnz
clc
mov
cmps
retf
repz
sbb
pcmpgtb
jno
xor
push
adc
aam
bound
dec
xor
cmp
and
cmp
clc
neg
stos
shr
xchg
mov
add
or
mov
sub
adc
pop
inc
scas
ins
out
fcmove
xchg
std
jl
push
push
addr16
rcr
pop
mov
or
dec
sub
rol
fnstcw
call
aaa
rcl
out
and
ins
jp
fild
out
test
mov
std
das
cmp
pop
push
push
pop
cmp
mov
imul
mov
sti
hlt
pop
mov
gs
pop
inc
popa
pop
dec
push
adc
or
imul
mov
ins
popa
sub
cmp
lods
mov
lahf
arpl
mov
aad
push
mov
add
data16
loopne
mov
dec
xor
jg
or
inc
stos
in
dec
popf
je
shl
push
xchg
scas
inc
jl
fwait
xchg
call
and
xchg
lock
xchg
sbb
lods
cmps
jl
dec
xchg
or
mov
push
aaa
lds
push
xor
cs
dec
adc
cmp
mov
mov
fstp
push
jo
pop
(bad)
jnp
popa
aaa
fs
jne
std
add
enter
lods
fcomp
xchg
push
movs
sbb
push
add
sbb
fwait
jbe
mov
jecxz
dec
test
adc
push
xchg
mov
xor
adc
or
mov
or
mov
or
ds
ret
mov
jns
gs
mov
xchg
add
sub
call
xchg
fist
out
sbb
push
xor
jbe
cmps
in
test
cmp
sub
outs
mov
xchg
lds
cs
sub
ds
sub
hlt
mov
fwait
cld
test
dec
mov
xchg
inc
mov
fisttp
in
(bad)
leave
mov
push
sbb
movs
cwde
bnd
lock
imul
adc
jp
cmps
mov
fisubr
clc
out
cwde
imul
and
cli
mov
xchg
or
mov
loop
jno
ja
cmp
cmc
das
jne
push
push
mov
dec
fldcw
push
jae
xor
cmp
popa
data16
rcl
xor
call
sbb
mov
mov
popa
test
mov
enter
cmc
mov
mov
adc
jne
test
add
(bad)
out
imul
repnz
pop
ins
ins
push
fld
in
mov
fsubp
into
or
cld
inc
sbb
cmp
xor
cmp
scas
lds
push
sub
cmp
push
scas
cmps
(bad)
mov
cmp
xlat
fld
mov
mov
push
dec
sub
repnz
mov
mov
fiadd
sub
pop
shl
push
add
popf
xor
(bad)
cli
push
cmp
ds
jmp
fwait
in
xor
jge
sbb
adc
fild
push
cmp
aam
int3
xlat
jg
stc
push
mov
imul
or
xor
jb
sub
xchg
jge
sbb
ja
pop
(bad)
in
lock
mov
mov
pop
mov
sbb
push
(bad)
addr16
lea
or
lods
in
pop
popf
push
and
add
test
pop
fisub
push
mov
pop
popa
xchg
arpl
out
xchg
push
jbe
sbb
jmp
and
push
mov
call
mov
mov
psrad
mov
sbb
repz
cmp
add
jbe
cmp
movs
cli
(bad)
jecxz
or
mov
jp
dec
imul
xchg
sub
inc
push
jle
xor
pop
rcl
scas
(bad)
lods
push
mov
das
out
adc
pushf
lock
(bad)
imul
pop
rol
(bad)
mov
cmp
test
pop
mov
add
shl
imul
fmul
and
aaa
loop
ror
push
add
adc
scas
cs
popf
pop
adc
(bad)
fstp
lahf
mov
jmp
stos
pop
mov
and
cmp
stos
inc
aam
jo
test
add
cmp
sbb
nop
jns
pushf
push
popa
inc
mov
mov
mov
lock
call
mov
test
mov
pop
sub
add
or
aas
hlt
mov
int
adc
sub
inc
cmp
test
imul
(bad)
fnstcw
into
add
fstp
mov
out
dec
cld
mov
inc
dec
sbb
xor
inc
mov
dec
pop
pushf
shl
shr
loope
sub
or
ss
fmul
out
mov
shl
out
lock
scas
mov
or
mov
mov
sbb
push
mov
pop
and
imul
and
fisubr
and
into
push
pop
cs
mov
test
xor
or
into
out
push
movs
idiv
repz
mov
(bad)
or
loope
stos
add
mov
wbinvd
or
push
call
xor
xchg
nop
retf
movs
mov
rcr
mov
adc
lods
jb
std
ficomp
add
stos
push
xchg
mov
addr16
daa
push
enter
adc
mov
jbe
dec
and
xor
add
jae
aas
icebp
stos
jp
cmc
cdq
push
sub
or
mov
nop
jmp
retf
call
(bad)
call
pushf
mov
aaa
xor
cmp
push
pop
mov
dec
sbb
push
sbb
dec
mov
or
cmc
lea
inc
push
push
xor
mov
dec
xor
test
outs
pop
lahf
sar
je
hlt
sub
mov
adc
and
xlat
push
mov
outs
(bad)
(bad)
sahf
add
sub
repnz
push
imul
pop
mov
pop
loope
mov
fcomp
call
xchg
(bad)
cld
gs
out
scas
adc
fwait
push
mov
fcom
pop
daa
push
push
mov
mov
loop
inc
mov
ss
or
mov
sahf
push
sub
mov
gs
adc
pushf
pop
loope
loop
lods
sti
movs
repz
pop
ss
scas
stos
scas
xor
adc
popa
cmps
aam
and
repnz
repnz
or
lods
data16
out
in
cwde
jo
hlt
inc
mov
mov
fwait
mov
mov
xlat
cli
inc
cmp
dec
xor
adc
fsubr
or
in
pop
and
xchg
push
repz
out
or
pop
sbb
fst
mov
arpl
ds
sahf
pop
inc
das
test
cmc
mov
ja
sbb
movs
rol
xchg
sub
inc
inc
xchg
es
adc
(bad)
stos
jge
inc
lea
jge
inc
lods
adc
push
pop
call
cli
mov
add
jle
inc
(bad)
aam
mov
arpl
int
fstp
cmps
scas
mov
js
and
call
in
int
mov
push
mov
(bad)
and
cmp
leave
aaa
pop
or
mov
xor
cmovno
xor
xor
cli
sub
sub
aas
lds
jle
mov
es
add
movs
aam
fisttp
das
scas
pop
add
or
mov
mov
pop
sar
test
adc
sub
cdq
in
(bad)
(bad)
mov
call
test
cld
dec
jmp
in
(bad)
jmp
inc
adc
iret
arpl
dec
inc
sti
lea
sbb
push
cmp
daa
ds
and
fiadd
fld
mov
ror
jo
int
inc
mov
xchg
sub
sub
sahf
inc
or
cwde
daa
pop
lds
popw
mov
int3
cmp
imul
iret
inc
pop
mov
ins
js
inc
sub
sub
sti
pop
imul
sub
sub
stos
sub
inc
mov
or
inc
push
sbb
sbb
es
dec
mov
shl
das
jmp
jns
cmp
push
movs
add
test
rcr
outs
jns
pop
ins
jnp
(bad)
cmp
mov
sub
cmc
pop
mov
xor
inc
push
pop
cwde
push
nop
outs
shl
sbb
int3
push
icebp
pop
sti
lea
adc
xchg
and
icebp
pop
jno
iret
adc
xor
les
mov
adc
shr
ret
fidiv
mov
arpl
push
xor
sub
mov
daa
push
sbb
mov
cwde
outs
retf
dec
mov
add
sbb
pop
(bad)
lds
dec
or
xchg
jae
ret
mov
push
je
mov
sbb
dec
and
aad
sub
mov
jnp
mov
mov
adc
int
sbb
push
mov
and
sbb
mov
ins
ja
xchg
aas
call
ds
es
mov
adc
add
push
dec
inc
mov
adc
push
nop
fisubr
push
adc
(bad)
pop
into
or
fidiv
dec
inc
mov
xlat
push
popa
loopne
mov
loop
(bad)
loopne
dec
outs
inc
lahf
inc
inc
sub
sub
mov
cmp
gs
push
xchg
add
mov
and
sahf
pop
xchg
dec
or
cli
adc
aas
test
ret
xchg
cs
mov
lds
cmp
pop
xor
and
jg
out
repz
dec
shl
jmp
cdq
jno
test
cmps
pop
das
sbb
inc
out
pop
pop
mov
pmullw
loop
jne
stos
loop
sub
inc
dec
jns
sub
add
mov
cmc
cmc
xor
mov
sub
in
cmc
jmp
jge
cmps
mov
aas
mov
push
arpl
stos
cmp
sub
mov
div
xor
jl
adc
(bad)
ror
movs
push
xor
cmp
xor
pop
add
in
push
inc
(bad)
bnd
pop
popa
aam
add
(bad)
fist
pusha
pusha
pushf
icebp
mov
leave
dec
and
jne
in
mov
mov
mov
mov
jmp
pushf
cmp
stos
enter
sub
cli
xlat
mov
ret
xchg
shl
mov
xor
pop
sti
jo
lock
push
ja
push
mov
not
movs
mov
cmp
int
lds
sbb
xchg
xor
daa
jb
stc
out
lea
bound
lock
repz
mov
sbb
call
jmp
sbb
lds
jmp
mov
je
mov
sbb
xor
sbb
dec
inc
xor
mov
push
dec
aad
and
mov
call
inc
ins
jecxz
and
lock
lds
lahf
cmp
imul
ds
jg
push
adc
sahf
ins
ins
mov
jbe
mov
int
bound
jecxz
aas
xchg
test
test
mul
fiadd
popf
push
dec
out
fdivr
dec
inc
sbb
rol
pushf
loopne
mov
rcl
add
sbb
fs
sahf
mov
inc
mov
cmps
dec
xchg
xchg
arpl
xlat
and
or
rcr
lods
add
stc
std
jecxz
add
mov
sbb
lahf
sbb
shr
jg
xor
sub
imul
test
mov
or
push
(bad)
scas
fldcw
cmp
sub
sub
adc
call
mul
pop
add
fs
mov
xchg
xchg
cdq
iret
cmc
test
shl
pop
data16
pop
daa
nop
or
stos
push
add
mov
call
or
lds
stos
fstp
int3
cmp
inc
sar
repz
imul
and
sub
mov
loopne
std
scas
leave
push
jge
je
adc
pop
mov
jl
xor
call
(bad)
sub
fcmove
pushf
cld
repz
leave
das
pop
jbe
and
mov
dec
dec
cmp
mov
in
gs
sbb
ret
loop
pop
push
push
mov
icebp
stos
cmp
sub
fist
inc
(bad)
test
add
add
fsub
pop
into
stos
jne
or
aad
scas
mov
lods
test
gs
mov
outs
jp
bound
adc
push
int3
fwait
and
ja
sub
retf
test
adc
sti
dec
les
hlt
pop
xor
das
or
ja
cmp
inc
and
xor
mov
fdivr
stc
inc
mov
mov
adc
mov
rol
pop
pop
retf
iret
jnp
sbb
mov
jnp
sub
fdivr
inc
test
cmc
jle
or
push
adc
into
daa
xor
inc
xor
push
or
lock
mov
retf
mov
cmc
data16
stc
push
push
cmc
movs
mov
xor
push
gs
lea
test
add
retf
jg
adc
fcom
ins
sub
outs
add
mov
scas
sti
out
in
aas
inc
push
sbb
int3
pop
mov
js
stos
js
aas
push
xchg
cmp
(bad)
adc
in
inc
mov
or
es
imul
cmp
icebp
test
xchg
rcl
mov
bound
icebp
pop
mov
seta
cmp
mov
inc
jbe
mov
std
icebp
(bad)
jle
pop
push
pop
das
jno
cli
lods
cvtps2pd
fstp
fild
add
pop
dec
call
test
xchg
dec
cmp
loope
outs
inc
or
repz
scas
inc
fsubr
mov
mov
sbb
dec
rol
fs
in
xchg
ja
push
popa
fsubr
sbb
out
lock
inc
fdiv
push
xchg
xlat
pop
ror
imul
cmps
push
addr16
outs
cmp
lahf
xchg
out
rcr
mov
adc
add
loop
scas
(bad)
es
sbb
xchg
xchg
add
and
into
sbb
(bad)
add
push
les
fs
stos
loop
mov
adc
and
push
out
mov
sbb
dec
mov
dec
out
ins
les
shr
or
nop
cmc
adc
dec
jbe
jns
pop
fisubr
iret
mov
dec
inc
adc
shl
lds
(bad)
test
add
test
cmps
shr
xor
add
inc
jb
add
jb
(bad)
js
adc
or
test
frstor
iret
xor
pop
test
outs
xchg
jno
add
sub
mov
sbb
inc
scas
add
xchg
add
jmp
xchg
imul
in
pop
pop
out
div
cs
nop
mov
lods
aaa
out
ins
stc
cli
add
adc
mov
adc
mov
pop
mov
xor
imul
lods
sub
pop
cmp
jmp
loope
out
stc
rol
out
sahf
mov
inc
cmp
pop
mov
clc
clc
lock
aam
cmp
inc
inc
add
popa
add
mov
xor
push
sbb
sbb
loope
push
mov
lods
mov
popf
mov
inc
or
sbb
add
fsub
adc
fstp
cli
loop
push
lock
daa
or
or
push
daa
nop
jae
test
and
add
push
je
inc
jle
jb
les
imul
call
dec
xlat
retf
push
(bad)
out
xchg
inc
sub
stos
cmps
mov
push
push
(bad)
stc
dec
outs
sub
and
mov
add
jnp
cmp
pop
mov
mov
daa
gs
push
addr16
xor
inc
cld
(bad)
pop
push
scas
sahf
mov
fcmovb
cmp
mov
shl
inc
nop
(bad)
jle
mov
stos
ja
jns
push
ja
mov
xor
icebp
xchg
fiadd
fild
mov
fimul
pop
aad
push
push
addr16
(bad)
lock
jmp
pop
(bad)
ficom
retf
test
lock
ret
fistp
mov
dec
ins
jmp
ins
inc
ror
dec
(bad)
or
idiv
loopne
xchg
rcr
shr
mov
ins
ins
cwde
test
jmp
jae
xchg
pop
dec
mov
sahf
enter
add
lock
outs
or
out
pop
(bad)
pop
lock
mov
mov
lock
aaa
jle
mov
mov
sub
lods
out
ja
cmps
jnp
adc
pop
push
popf
and
mov
seta
adc
xchg
pop
mov
cld
or
sar
dec
fisttp
push
and
cmp
gs
hlt
cmps
adc
in
adc
jmp
ret
loope
and
push
neg
jae
cmp
and
lods
cmc
or
xchg
fist
pop
sub
jmp
adc
xor
cmps
pop
test
(bad)
(bad)
scas
push
mov
ja
call
ret
jns
or
ins
cwde
add
dec
das
adc
fisttp
push
dec
xor
sbb
xor
adc
jb
in
lods
xchg
mov
and
cmps
(bad)
lds
hlt
mov
xchg
std
ror
leave
out
mov
(bad)
jmp
lods
sub
aas
adc
mov
cmp
cmp
push
in
mov
xchg
cmp
inc
movs
and
in
test
pop
enter
sub
iret
dec
xchg
adc
mov
add
and
mov
adc
add
push
test
in
or
gs
pop
push
add
mov
sbb
lahf
enter
mov
(bad)
clc
test
and
cld
fisttp
out
in
mov
cdq
mov
dec
mov
or
scas
stos
js
lock
and
pop
sbb
movs
xor
mov
xor
jne
ror
dec
cwde
aas
and
mov
(bad)
adc
ficom
cmp
leavew
ja
(bad)
lods
xchg
cli
jbe
ss
push
cli
and
cmp
mov
fxch
mov
sti
pop
jbe
push
popa
dec
adc
mov
rol
retf
and
aad
nop
pop
add
mov
sahf
sub
imul
jne
push
ret
loopne
dec
cdq
int
in
or
pop
(bad)
pop
fnsave
pop
js
mov
jecxz
cmp
dec
xor
pop
mov
loop
adc
in
idiv
jge
aas
out
cmp
dec
push
adc
xchg
fisubr
xor
sbb
push
add
retf
pusha
fbld
jl
push
pushf
shr
xchg
adc
pop
jecxz
push
pop
add
dec
cdq
add
pop
or
fld
xor
add
fnstcw
push
test
xor
xchg
imul
out
mov
pop
inc
xchg
push
scas
sub
adc
jns
cmp
mov
push
movs
stc
int3
ror
pushf
and
bound
mov
push
fnstsw
shl
mov
push
or
mov
xchg
sub
sahf
imul
sub
ss
dec
aas
rcr
test
sysenter
cmc
lds
inc
cmp
lods
dec
jmp
and
dec
jo
mov
or
sub
jns
(bad)
stc
jno
arpl
or
popa
lock
dec
lahf
mov
fld
inc
inc
lods
mov
mov
cdq
dec
and
add
adc
ins
fdiv
iret
pop
and
sub
cmp
sbb
sbb
lea
or
cmc
in
xor
inc
cld
push
ins
cli
test
lahf
mov
jns
push
xor
fst
sahf
or
lods
test
xchg
ret
sbb
(bad)
xor
dec
fidiv
sahf
mov
sub
popa
imul
adc
aad
mov
fisttp
xchg
ss
sar
in
retf
cmp
ret
mov
jge
or
movs
inc
cmp
mov
ins
mov
push
adc
jl
hlt
aaa
mov
pop
scas
jmp
movs
rol
mov
jmp
cli
add
sbb
push
stc
pusha
mov
je
shl
mov
cmc
out
retf
mov
lahf
mov
pcmpgtd
mov
in
imul
xchg
push
shl
or
icebp
or
cmp
fild
ss
dec
mov
xor
dec
mov
or
or
pusha
mov
sub
and
sub
pop
pop
test
push
ret
mov
rcr
cli
ja
mov
adc
rol
pusha
pop
push
lds
icebp
std
jno
aas
mov
imul
in
out
cli
int
js
push
xchg
cmc
aas
popa
adc
or
and
fsubr
mov
sbb
inc
clc
stc
inc
add
sbb
mov
lock
imul
(bad)
scas
daa
js
pusha
sub
popa
les
jo
call
sar
mov
inc
int
int3
sub
mov
lock
mov
loope
cdq
dec
stos
xchg
inc
lods
cli
fsubr
stc
(bad)
push
retf
shr
imul
cmp
sub
shl
pop
mov
sub
pusha
aaa
scas
mov
clc
jg
retf
or
(bad)
mov
gs
push
cmp
cmps
inc
fs
pop
les
pop
mov
out
outs
call
(bad)
mov
mov
xor
outs
js
cli
inc
lahf
cmp
sbb
push
nop
add
pop
ret
add
pop
push
sub
jno
xor
in
sbb
sbb
xchg
or
ret
fild
retf
and
xchg
mov
sbb
in
lea
or
in
add
jb
inc
int3
(bad)
jge
adc
inc
mov
sub
dec
inc
test
mov
cdq
push
scas
pop
cmp
jmp
inc
and
into
ins
aad
lods
cmp
ror
dec
out
and
in
movs
ja
outs
jecxz
cmps
mov
mov
push
pop
dec
push
cmp
dec
data16
mov
inc
std
mov
cmp
dec
shl
dec
add
icebp
clc
or
adc
cmps
pop
icebp
loop
out
or
dec
jmp
inc
frstor
fdivrp
popf
inc
pop
nop
ret
jmp
ret
(bad)
or
comiss
mov
ja
mov
inc
enter
mov
jmp
jle
call
jmp
jg
mov
sbb
lidtd
mov
xchg
or
jnp
dec
adc
pop
mov
outs
xchg
jo
add
pop
or
pop
sub
pop
mov
lahf
outs
or
call
jmp
fisubr
adc
mov
fcmovb
push
cmp
mov
or
das
outs
test
addr16
push
pusha
mov
jmp
cmc
hlt
lods
mov
pop
adc
pop
movs
and
or
popa
jmp
mov
cwde
pop
push
sub
xor
xor
xor
popa
xchg
cmps
(bad)
xor
mov
mov
pop
fwait
cmp
mov
addr16
stos
mov
ror
cmp
mov
cmp
cdq
cs
lods
pop
push
cmps
push
pop
mov
arpl
or
outs
lock
call
shl
add
adc
push
aad
test
mov
inc
ret
(bad)
jmp
xor
pop
fimul
dec
fstp
sbb
fwait
jl
sub
add
adc
dec
xchg
xor
lds
pop
push
aam
test
dec
cdq
xlat
pminub
sub
jnp
int3
xchg
lds
scas
test
add
dec
scas
test
jl
retf
int
int3
cmp
div
push
inc
adc
sbb
add
jo
(bad)
repz
clc
test
push
dec
(bad)
shl
dec
mov
adc
fadd
xchg
or
cmp
ja
adc
in
loope
jno
(bad)
or
add
das
dec
cld
fstp
mov
xchg
inc
cmp
into
xchg
aam
test
cmc
and
iret
pop
push
adc
sar
mov
retf
or
dec
sbb
inc
sbb
loop
in
popa
pop
jns
dec
fisubr
mov
mov
jo
push
call
push
inc
into
jge
mul
jno
out
sbb
cmps
repz
sub
pop
add
adc
fisub
pop
sti
ret
add
mov
das
popa
sahf
idiv
adc
pop
jp
xchg
out
mov
and
stc
mov
test
adc
push
jno
jb
and
adc
scas
sbb
jmp
add
test
and
out
push
dec
jne
ret
in
mov
fstp
imul
cdq
out
mov
dec
xchg
cmp
repz
xchg
or
push
sti
jl
sbb
mov
push
fs
rcl
aam
ret
adc
inc
lods
lea
sub
xor
scas
jmp
mov
xchg
mov
fs
jecxz
sub
jae
outs
in
cli
jns
hlt
in
aad
mov
dec
cmp
and
sbb
cmp
les
push
xchg
rol
pop
or
push
mov
js
jle
or
cmps
cli
and
sahf
or
jns
retf
or
int
xlat
xchg
xlat
add
je
pop
xor
jp
fcom
std
call
cmp
iret
stos
mov
sub
and
cmps
lahf
xchg
mov
xchg
pop
jns
add
or
les
sub
sahf
add
(bad)
cld
xchg
(bad)
push
pop
or
pop
movs
(bad)
out
mov
rol
mov
or
push
xchg
inc
push
add
leave
out
mov
mov
mov
lea
les
loopne
in
adc
pop
fdivr
js
nop
jecxz
mov
xlat
push
pop
mov
push
clc
stc
dec
fild
xchg
sub
jmp
push
scas
cmps
xchg
mov
and
enter
pop
cli
stos
push
sar
mov
sub
mov
xor
jecxz
push
(bad)
or
and
inc
hlt
mov
adc
pop
mov
cmp
push
mov
push
jno
and
push
xchg
adc
int3
dec
outs
dec
or
push
pop
shr
pusha
imul
in
or
ja
pop
lea
mov
ret
rcr
sbb
stos
adc
mov
inc
or
adc
xchg
sbb
pop
repnz
das
jb
sub
pop
add
imul
sub
jnp
push
pop
add
movs
bound
mov
and
addr16
(bad)
int3
in
xchg
ins
add
cmp
aad
dec
xor
lea
mov
jl
lods
pusha
es
aad
mov
jmp
pusha
mov
xchg
fsubr
(bad)
mov
add
aaa
shr
pop
adc
lock
adc
pop
xor
into
loope
in
dec
imul
into
mov
mov
push
xor
jno
sbb
mov
inc
call
fnstenv
push
mov
or
rcr
jmp
push
stc
or
jae
mov
xchg
xor
pop
or
daa
rcr
cmp
adc
xor
ret
push
daa
push
leave
ror
test
aam
adc
ret
mov
xchg
inc
push
out
lahf
xchg
sbb
pop
inc
inc
lock
sub
pop
arpl
ret
(bad)
cmp
push
fst
xchg
or
dec
jp
add
sbb
mov
cld
or
pop
inc
daa
fnstenv
inc
sub
sub
push
lods
jae
xchg
dec
mov
test
lds
mov
out
cmps
push
lods
sub
add
scas
adc
enter
mov
pop
xor
mov
adc
fisubr
lods
je
push
inc
cmc
icebp
xchg
cmp
rcl
sub
lock
add
and
mov
sub
loope
mov
test
xchg
mov
mov
cdq
(bad)
scas
out
pop
sub
ins
xor
arpl
fsubr
out
ret
or
fild
(bad)
inc
mov
lods
jmp
push
push
fcom
xchg
xor
mov
fldcw
mov
outs
retf
addr16
(bad)
js
adc
mov
ficomp
fimul
or
fnstsw
pusha
mov
xchg
pushf
xchg
movs
adc
jb
pop
cmp
ja
mov
inc
call
stos
out
mov
mov
call
rcr
data16
mov
ja
fs
stc
test
stos
and
fidivr
lds
repnz
test
dec
xor
fistp
into
jge
cmps
jge
out
push
cmps
fadd
mov
jnp
jnp
es
(bad)
loope
mov
push
mov
fwait
xlat
jg
ret
xor
fwait
jne
gs
jno
push
ret
mov
lea
sti
xchg
push
xlat
repnz
cs
xor
xchg
inc
bound
out
xor
pop
xlat
neg
push
mov
hlt
add
lahf
pop
js
hlt
or
mov
hlt
cmp
or
out
jno
xchg
pop
push
adc
inc
cmp
push
jmp
and
xor
cld
add
mov
icebp
idiv
pop
fisub
sub
adc
test
rcr
push
sbb
data16
bound
push
aad
cmc
ss
mov
lods
pop
xor
movs
jo
into
and
add
inc
xor
sub
push
clc
mov
mov
and
retfw
js
jb
pusha
clc
(bad)
retf
stc
cmp
inc
cmps
aaa
test
sbb
dec
mov
popf
jecxz
cmp
push
mov
push
sahf
dec
push
neg
and
cld
jnp
cld
mul
xlat
ret
es
retf
mov
pop
aas
rep
test
(bad)
arpl
iret
(bad)
out
ins
push
sbb
lea
mov
xchg
frstor
pop
(bad)
call
daa
aaa
add
dec
int
ds
pop
and
rcl
test
or
fimul
int
sub
cmp
push
pop
test
out
cdq
nop
stos
in
push
xchg
dec
icebp
adc
aas
in
shr
xchg
cwde
stc
push
lods
mov
loop
mov
in
jae
cmp
xor
xchg
xchg
sti
push
push
cmc
or
add
in
xchg
adc
mov
test
gs
mov
jne
out
scas
and
shl
inc
fidivr
mov
lods
shl
jecxz
test
dec
xchg
and
(bad)
loopne
fmul
pop
push
js
jbe
pop
cwde
mov
xor
fldcw
mov
pop
into
lock
mov
or
(bad)
mov
mov
cwde
outs
dec
adc
shl
shl
iret
ds
dec
in
sbb
jl
jmp
inc
retf
jecxz
mov
cs
mov
xor
ds
addr16
rcr
sub
inc
movs
repnz
cdq
aad
mov
popf
sub
dec
cmps
jge
mov
jecxz
ret
leave
pop
icebp
bound
add
add
xchg
outs
nop
add
mov
aas
ja
stos
pop
scas
jp
push
and
jmp
jmp
push
in
dec
std
jbe
fld
inc
jne
pop
sub
push
add
or
cmps
imul
std
out
dec
lea
mov
mov
fstp
inc
add
nop
aam
xor
lods
fwait
imul
adc
add
inc
push
jmp
pop
jae
rol
call
jns
cmps
cmp
out
or
cmps
adc
in
aaa
fwait
stc
sub
rcl
xchg
std
movs
mov
out
and
xchg
ret
add
jbe
sahf
and
addr16
fsubr
mov
(bad)
movs
in
mov
shl
xlat
push
jbe
jns
out
xlat
mov
rcl
popa
hlt
xchg
inc
scas
fmulp
ss
lahf
and
enter
mov
test
add
stc
jno
xor
sub
scas
adc
sbb
push
sbb
and
mov
movs
push
and
fmul
addr16
push
lods
or
mov
lods
inc
ins
cmps
(bad)
cdq
sub
sbb
push
jno
inc
and
push
ud2
retf
inc
daa
inc
daa
jbe
adc
sub
mov
xor
mov
or
mov
mov
dec
aam
sbb
repz
push
repnz
lock
ficomp
data16
mov
hlt
cmp
rol
jecxz
shl
test
gs
out
addr16
outs
mov
inc
cmp
imul
(bad)
and
mov
mov
fistp
and
pop
xchg
outs
(bad)
loope
sub
lock
xor
stc
adc
mov
add
call
ret
lods
adc
pop
jg
lods
into
xchg
stc
adc
call
pop
cmp
mov
cmps
(bad)
jo
(bad)
mov
push
(bad)
int
xor
xchg
jl
adc
mov
pop
cmps
pop
popf
and
sub
lods
mov
shl
xchg
sub
addr16
adc
(bad)
stc
xchg
je
loopne
xchg
mov
hlt
xchg
sbb
xchg
mov
retf
sub
inc
cmps
mov
jns
pop
repnz
sub
shr
scas
xchg
add
nop
mov
pushf
aaa
dec
xchg
pop
sbb
push
mov
mov
jmp
mov
ins
scas
je
pop
and
pop
and
in
ret
jae
mov
and
sub
js
inc
arpl
pop
mov
mov
sub
add
mov
mov
and
cmp
push
call
jmp
call
jl
dec
ins
jl
jb
in
call
adc
fdivr
jb
fisttp
sub
lods
add
cmc
mov
int
lahf
stos
add
outs
mov
std
mov
pop
sbb
or
mov
jmp
dec
sub
stos
inc
or
mov
mov
sub
dec
rcl
aas
pop
(bad)
xor
les
jb
jle
xor
rcl
call
scas
push
aam
ret
inc
(bad)
popf
enter
mov
mov
outs
loopne
hlt
dec
mov
mov
jns
mov
pop
cwde
push
jl
test
jb
cmc
outs
aad
sti
retf
stos
loope
imul
jb
test
jmp
scas
mov
mov
mov
inc
les
adc
arpl
cmp
cdq
stos
(bad)
es
jge
cmp
adc
aad
adc
xchg
mov
pop
cmp
stc
movs
pop
lods
rcl
arpl
retf
les
int3
dec
pop
pop
and
retf
add
fdiv
gs
add
inc
ins
retf
jge
mov
js
pop
xchg
(bad)
lea
mov
(bad)
dec
xchg
inc
push
ss
xor
enter
call
ret
jb
lods
mul
das
outs
popf
xchg
popa
cmp
fsin
xchg
inc
ja
hlt
push
or
and
movs
mov
or
mov
mov
and
mov
mov
push
out
jmp
add
push
or
sub
dec
mov
xor
sti
jnp
(bad)
ds
mov
mov
aaa
loop
push
mov
addr16
cmps
cmps
hlt
xchg
pop
scas
rcr
jbe
jmp
mov
mov
nop
jp
(bad)
push
sub
mov
(bad)
movs
jle
mov
sti
sub
xchg
xor
push
std
je
inc
sub
cmp
(bad)
fstp
mov
dec
cmp
push
fist
(bad)
cdq
mov
dec
popf
mov
scas
xor
scas
movs
or
cmp
jno
leave
imul
sub
mov
mov
sub
out
mov
mov
jmp
adc
xor
adc
call
imul
clc
dec
icebp
ret
or
movs
push
call
retf
jno
shl
push
mov
and
jb
and
leave
and
pop
les
(bad)
inc
cmps
xor
rol
fmul
push
mov
mov
jo
test
push
outs
imul
test
sub
inc
push
pop
nop
xchg
cdq
fcom
inc
fdiv
xchg
fcmovnbe
out
fmul
add
fistp
and
daa
shl
dec
aaa
mov
push
push
(bad)
sub
and
lds
xor
jo
mov
test
mov
je
ins
aas
jge
lods
pop
inc
xor
imul
stos
add
dec
dec
cld
push
es
nop
sbb
fmul
fisub
jecxz
and
outs
xor
add
je
xchg
mul
(bad)
dec
loopne
jle
push
dec
push
inc
xor
test
dec
fxch
push
push
shr
or
in
fiadd
in
in
xor
pop
scas
pop
jns
jno
pushf
shl
adc
xchg
jmp
pop
fld
call
add
ror
inc
or
jo
jmp
push
in
adc
iret
mov
cmp
push
enter
and
enter
aas
jle
sub
cmp
mov
pusha
outs
jmp
sbb
jae
xor
ret
dec
pop
imul
sbb
gs
fistp
or
fcmovbe
jmp
in
pop
hlt
imul
pop
xchg
addr16
xchg
sahf
mov
pmuludq
push
mov
daa
cmp
shl
cmp
inc
and
cld
rcl
ror
or
and
pop
adc
jmp
(bad)
stc
jae
stos
and
mov
jae
je
fs
xchg
retf
sbb
call
push
aad
es
call
hlt
hlt
shl
in
push
pusha
push
add
out
rol
mov
jae
xchg
add
mov
jg
ds
shr
push
add
arpl
addr16
fmul
addr16
(bad)
push
iret
fdiv
out
xlat
and
loope
sub
lods
retf
cld
inc
mov
punpcklbw
mov
mov
test
jo
scas
mov
lea
pop
mov
movs
ficom
out
dec
pop
retf
xchg
ins
lahf
jp
ja
call
pop
push
sub
push
popa
pop
pop
movs
adc
hlt
icebp
ss
add
sbb
add
cmp
std
xchg
or
test
mov
xchg
adc
je
fdiv
sub
enter
mov
xchg
push
cdq
data16
dec
daa
lock
icebp
push
mov
fst
psrlq
fstp
jmp
mov
loop
hlt
dec
retf
inc
sub
or
push
dec
(bad)
mov
add
fdivr
add
xchg
or
sub
in
adc
in
mov
aad
jb
inc
xor
mov
mov
daa
sbb
xor
xchg
jmp
xchg
int3
in
into
addr16
(bad)
sbb
xchg
inc
adc
(bad)
xchg
cwde
sub
(bad)
jb
push
xor
jmp
push
(bad)
xlat
mov
std
push
in
mov
push
inc
pop
sbb
jmp
sub
pop
sub
sahf
push
cmp
rcr
mov
loopne
sbb
call
cmp
loope
les
fisttp
mov
hlt
cld
jp
jp
sub
icebp
imul
aas
pop
jnp
lods
mov
sub
fnstenv
cmp
jle
pop
cdq
pushf
hlt
jp
jnp
mov
popf
scas
sahf
es
inc
popa
and
and
repnz
(bad)
xchg
mov
fcomp
cmp
add
mov
push
dec
popf
mov
or
test
sbb
jnp
pop
test
sbb
inc
sbb
out
mov
dec
push
sahf
loop
mov
pusha
sbb
cmp
push
add
mov
lahf
push
aad
sub
imul
push
call
mov
sbb
sbb
cmp
push
call
aas
add
fnsave
pop
in
pop
dec
(bad)
std
mov
mov
sub
or
mov
jl
paddw
xor
int
and
cmp
and
clc
mov
jno
mov
add
sbb
adc
int
(bad)
outs
(bad)
sbb
out
in
fs
push
mov
mov
mov
or
clc
scas
sub
inc
inc
cs
push
gs
push
mov
inc
daa
rcr
into
inc
aaa
punpcklwd
and
popf
or
cld
cmc
dec
das
xchg
pop
and
jp
rol
sub
xor
gs
dec
outs
mov
fcomp
rcr
pop
xor
mov
sbb
stos
mov
inc
fcomi
pop
inc
lods
jb
aaa
pop
(bad)
xchg
jge
jns
arpl
mov
cmp
fld
cmps
xor
stc
adc
(bad)
jo
cld
pop
stos
xor
jmp
jl
push
repz
push
in
dec
and
sub
ins
mov
pop
loopne
mov
rol
xchg
lds
xchg
dec
push
push
test
das
mov
jl
push
outs
mov
outs
int
add
in
pop
(bad)
icebp
pusha
aaa
mov
push
add
adc
jbe
add
imul
dec
jne
add
jge
fisubr
mov
cwde
mov
cmp
cmp
ror
adc
popa
pop
xor
jg
movs
xchg
xchg
cmp
outs
(bad)
mov
ret
idiv
xor
sbb
add
jmp
inc
stc
cs
ds
retf
imul
not
cdq
jo
fwait
mov
pop
mov
(bad)
in
jge
ins
push
pushf
mov
pop
xchg
data16
lock
xor
aam
dec
ins
retf
add
sahf
cmp
adc
pop
pushf
pop
jae
sar
call
push
and
cmp
xchg
xchg
out
push
sahf
sub
aaa
jmp
inc
jns
outs
jmp
push
in
add
and
dec
and
and
or
xchg
cmp
xlat
rcl
sub
jl
pop
out
mov
hlt
jae
dec
pop
inc
or
push
ja
sub
in
popa
out
inc
ds
fwait
test
inc
movs
cmp
push
or
call
sti
rol
push
mov
sahf
mov
sti
mov
aam
inc
cmps
daa
dec
xchg
or
inc
push
push
push
jb
int3
icebp
mov
(bad)
mov
mov
cpuid
xor
xor
add
jg
add
sub
cmp
sbb
ins
cmc
mov
hlt
mov
push
and
imul
mov
inc
add
jp
(bad)
or
ds
pop
pop
or
lods
mov
adc
xchg
push
push
mov
stos
pop
fadd
ret
dec
mov
adc
push
inc
imul
mov
jle
call
xor
popa
jo
mov
mov
fistp
(bad)
icebp
mov
call
test
test
or
enter
xchg
cmp
sti
mov
or
out
ja
sbb
xchg
inc
ins
mov
ins
(bad)
addr16
arpl
sub
lock
scas
dec
sbb
pop
or
test
sub
cdq
pusha
sbb
dec
cmps
inc
jno
pop
es
mov
ret
(bad)
or
inc
jp
mov
outs
inc
jne
xchg
fstp
movs
test
retf
jb
movs
(bad)
xchg
scas
iret
rcl
push
sahf
add
lock
in
loop
ins
(bad)
or
jnp
push
xchg
mov
xor
push
(bad)
xor
lea
push
movs
scas
mov
and
dec
int
jne
jno
shr
sar
(bad)
je
inc
test
idiv
xchg
lock
mov
lock
pop
adc
mov
or
sbb
sbb
or
loope
push
jmp
xor
out
mov
xchg
(bad)
loope
sub
add
dec
cmp
mov
adc
jns
push
fimul
jmp
sub
fcmovb
pop
clc
out
and
sub
lea
pop
cmp
repz
pop
dec
out
aaa
pop
dec
sbb
and
xchg
test
dec
mov
inc
js
std
sahf
imul
je
add
fisttp
xchg
mov
iret
repz
shr
cmc
icebp
call
call
or
sti
add
out
pop
sbb
fcomp
mov
push
xchg
je
dec
pop
or
ret
repz
sbb
dec
jb
ror
ror
mov
add
ret
or
sbb
loop
stc
pop
hlt
rcr
mov
into
test
add
push
adc
mov
inc
mov
shl
fwait
rol
ror
bound
xor
repnz
push
pusha
cmps
dec
inc
icebp
ror
xchg
and
in
rcr
dec
aas
retf
sub
add
push
push
or
test
lods
cmp
aas
das
dec
jmp
xchg
xor
xor
xor
lods
mov
jp
jnp
dec
cdq
fs
add
add
and
sub
into
enter
mov
mov
dec
jl
push
dec
or
dec
push
and
or
push
inc
mov
jg
repz
push
jae
inc
pop
shl
adc
sub
mov
dec
jbe
nop
pop
jbe
sbb
test
hlt
movs
in
mov
(bad)
ficom
cdq
and
mov
cmp
icebp
mov
add
or
out
out
arpl
sbb
and
dec
js
jns
ds
or
dec
adc
sub
inc
dec
ss
das
shr
cdq
adc
ficom
sub
cmp
outs
mov
or
frstor
jae
cmp
inc
adc
test
pop
ret
cmp
jge
ror
sbb
mov
movs
rcr
ja
out
retf
pop
pop
dec
imul
cmp
ror
enter
pop
stc
xchg
mov
jb
call
sub
pop
paddusw
xor
push
inc
fs
bound
pop
dec
lods
cmp
pop
pop
push
push
lods
jno
adc
xor
adc
pop
or
mov
add
inc
fcom
int
mov
out
add
pop
call
and
outs
sbb
mov
lea
sub
or
sbb
cs
inc
adc
inc
es
cmp
leave
icebp
(bad)
push
repnz
adc
or
jle
out
sub
jne
pop
loope
imul
xor
out
cmp
sbb
xchg
adc
(bad)
movs
test
lods
mov
cdq
cld
push
push
pop
mov
pop
es
push
ret
inc
xchg
shl
dec
cmps
cmc
cmps
or
sub
mov
nop
in
adc
ret
stos
ds
xchg
sar
jae
mov
dec
pop
adc
call
fadd
push
mov
(bad)
aad
xlat
dec
fbld
(bad)
loop
mov
add
aaa
add
xor
mov
popa
inc
inc
jb
xor
leave
enter
mov
push
pop
loop
mov
sbb
push
in
dec
jecxz
jae
or
push
inc
pop
loop
adc
jb
icebp
shl
ins
pop
rcr
sbb
push
cmp
aam
int
mov
adc
mov
inc
loope
clc
into
pop
ja
inc
adc
mov
push
lods
add
nop
adc
mov
mov
aas
aad
jmp
lea
stc
shl
jmp
sub
cli
sub
xbegin
shr
xor
sbb
xchg
xchg
js
mov
(bad)
inc
mov
sub
push
aad
jns
fucom
ss
adc
adc
push
ret
dec
repnz
mov
lods
fsubr
or
leave
enter
pop
or
cmc
out
xchg
lahf
lahf
(bad)
dec
or
loopne
movs
and
xor
sbb
mov
mov
or
ins
cmc
xlat
cwde
mov
aas
es
pusha
imul
jmp
lock
mov
dec
lock
rcl
(bad)
gs
aad
idiv
cld
fucomip
mov
push
hlt
retf
ret
mov
test
dec
pop
std
imul
addr16
sub
mov
jbe
jmp
rcl
push
outs
or
sbb
mov
int
inc
nop
push
push
jmp
mov
fistp
xchg
sbb
jmp
jl
xor
or
clc
xor
xor
adc
push
dec
(bad)
outs
cmp
xchg
(bad)
dec
stos
imul
mov
cld
mov
retf
mov
popa
les
push
or
mov
push
mov
push
cmp
popa
in
inc
xor
jecxz
nop
aas
pop
test
pop
pop
pop
inc
pop
aam
dec
add
jecxz
pop
xchg
out
mov
sbb
out
cmp
jno
mov
or
addr16
jg
inc
cmp
or
into
xchg
neg
nop
sub
cs
pop
or
sahf
ficomp
mov
js
fisttp
cmc
pop
fsub
mov
jnp
cwde
clc
add
cmp
daa
push
mov
mov
xchg
add
gs
jo
cmps
xchg
and
xor
aad
aam
pop
sub
popf
inc
clc
leave
add
in
jnp
pop
out
add
inc
or
pop
imul
fld
dec
pushf
jo
mov
mov
or
scas
jg
jmp
cmp
inc
cmp
sbb
outs
or
ss
xchg
pop
mov
icebp
addr16
adc
scas
sbb
xlat
add
aam
sub
mov
sub
xor
inc
out
mov
rcl
repz
push
(bad)
and
sbb
push
sbb
inc
ds
xchg
stos
in
pop
scas
pop
jge
loopne
xor
jae
stos
jle
in
and
push
mov
jmp
call
jo
or
inc
fwait
mov
rol
or
mov
js
and
mov
or
or
cs
mov
mov
js
fst
ins
pop
pop
dec
mov
xor
cmp
mov
jo
mov
test
add
ins
enter
xor
or
data16
inc
adc
or
cmp
idiv
adc
add
ror
or
gs
xor
in
push
dec
sub
sti
push
mov
and
xor
or
test
cmova
lods
and
jns
jp
adc
push
sub
pop
mov
das
dec
and
dec
mov
(bad)
shl
cs
push
in
dec
mov
cmp
jmp
fist
jb
sti
jle
dec
clc
cmc
lds
xor
xchg
and
iret
push
aam
dec
pushf
sbb
mov
adc
popf
loope
sbb
fld
pop
loop
fcmovbe
scas
out
dec
fdiv
inc
ficom
out
and
lods
xchg
shl
pop
jne
xor
dec
dec
cwde
xchg
sbb
jecxz
fst
aam
inc
jp
push
mov
xchg
mov
jne
mov
inc
(bad)
or
pop
push
and
das
mov
pop
dec
jmp
sti
mov
jg
jmp
sub
push
enter
jmp
out
cmp
cs
rcl
mov
jo
ds
lea
lods
mov
sbb
inc
ins
pushf
shl
fdivr
mov
cmc
and
leave
mov
sbb
inc
cmp
xchg
test
jg
lods
and
jp
dec
adc
aad
gs
cmp
mov
push
icebp
and
mov
stc
mov
sar
stos
shl
in
fst
xor
inc
fsubr
mov
(bad)
mov
sbb
std
int3
aad
sahf
xchg
mov
(bad)
jae
ds
xchg
or
and
clc
movs
into
ret
call
mov
repz
xchg
jne
and
dec
push
mov
sahf
mov
add
sub
mov
push
xor
and
imul
movs
jmp
loope
adc
jno
dec
sub
(bad)
stc
pop
arpl
pop
inc
or
or
or
das
call
xchg
out
les
jecxz
dec
stos
je
dec
imul
movs
pusha
mov
repz
popa
jnp
push
mov
lods
stos
mov
xchg
add
mov
cmp
or
scas
pop
ret
cs
mov
lods
test
data16
mov
push
popa
mov
dec
mov
addr16
mov
or
pop
cdq
add
test
les
and
pop
shl
movs
mov
mov
xchg
adc
mov
stos
mov
pop
mov
ss
jge
retf
jae
mov
xchg
pop
imul
jl
aas
pop
jge
addr16
jbe
fidivr
mov
adc
push
das
inc
retf
jnp
retf
movs
test
imul
jns
mov
mov
push
test
sar
(bad)
nop
and
jmp
fst
adc
cmc
and
mov
movs
dec
outs
fwait
xchg
in
mov
push
adc
fld
dec
xchg
stos
xchg
sbb
jmp
stos
stos
cli
sbb
pmaxsw
fwait
or
shl
out
int3
shl
adc
int
jg
pop
cli
lea
loopne
and
call
imul
mov
stos
gs
test
sub
mov
jle
jo
add
stos
adc
cmp
or
mov
xchg
lods
cmp
idiv
sub
jo
push
cwde
sbb
pusha
sbb
imul
xor
(bad)
cmp
add
test
fs
ret
xchg
add
jnp
or
sar
js
and
data16
xor
adc
mov
int
inc
xchg
xor
das
movs
inc
pop
(bad)
push
aaa
iret
cmp
sub
push
sub
or
stc
ja
pop
iret
inc
mov
mov
inc
retf
push
xchg
pusha
mov
movs
xor
dec
adc
pop
ins
jp
inc
inc
mov
movs
push
cwde
sbb
inc
cmp
or
cld
add
adc
push
adc
lea
shl
pop
xor
movs
inc
fidivr
cwde
jmp
adc
dec
mov
jge
ret
movs
pop
or
adc
fidivr
adc
xlat
bound
imul
or
push
xchg
add
sub
inc
xchg
and
cwde
and
fdivr
cmp
xor
in
fdivr
call
enter
ficomp
cmc
je
adc
dec
fisub
test
ss
loopne
jnp
retf
push
mov
cmp
xor
movs
mov
movs
bound
sahf
movs
add
movs
xlat
and
sbb
jo
shl
ss
mov
pop
retf
pop
mov
sbb
neg
inc
mov
inc
adc
or
in
out
inc
mov
scas
pop
sbb
ja
push
mov
enter
stc
fwait
jg
outs
cmp
jbe
out
sbb
push
mov
and
push
psrld
push
pop
sub
aad
int
(bad)
test
pop
out
fdivr
mov
sbb
sub
hlt
pop
cld
test
sbb
shr
push
xor
gs
sub
(bad)
gs
loop
xchg
and
and
mov
mov
mov
sbb
popf
sub
cli
pop
mov
mov
jbe
xor
fsub
or
popf
pusha
sub
sbb
add
call
push
dec
lahf
clc
fsub
jecxz
jnp
sbb
sbb
pop
jmp
jae
push
mov
data16
sub
not
adc
call
push
rcl
hlt
fimul
int3
push
ja
mov
inc
gs
addr16
jbe
call
iret
lods
jno
inc
rcr
inc
jp
addr16
pop
test
(bad)
(bad)
icebp
test
add
and
mov
xchg
jns
add
sbb
lahf
shl
js
mov
xor
ret
mov
or
loop
stos
out
mov
imul
push
jmp
xchg
popa
(bad)
dec
cmp
call
push
mov
and
push
nop
es
rcl
ficom
xchg
inc
pop
sar
inc
sti
in
jb
dec
push
inc
cmp
bound
repz
mov
and
repnz
xchg
adc
fbstp
out
data16
rcl
mov
inc
mov
push
sub
xchg
scas
out
cmp
movs
stos
push
push
push
and
mov
mov
and
scas
ins
loop
ret
mov
mov
mov
xor
retf
and
leave
fidiv
jp
fst
into
test
sub
cmc
push
iret
shr
push
cdq
movs
mov
push
dec
mov
jp
push
cmp
xchg
fadd
mov
mov
repz
leave
mov
mov
sbb
mov
dec
loopne
mov
push
mov
mov
fidiv
rcl
and
cmp
(bad)
or
int
out
pop
mov
mov
ret
add
push
xchg
nop
fmul
mov
jns
push
arpl
mov
inc
mov
scas
lods
aas
lods
test
mov
(bad)
ins
mov
outs
in
push
xor
cwde
xchg
fdivr
clc
das
fist
jns
dec
imul
rcl
rol
cmp
ret
sar
mov
dec
fistp
mov
or
push
dec
add
cld
fs
cmp
jns
pop
movs
push
or
push
sbb
pop
pushf
in
pop
shl
fisubr
push
call
imul
sub
jle
test
bound
dec
fsub
or
mov
jnp
mov
jle
repz
imul
xor
ss
jae
push
xchg
ret
xor
jmp
fisttp
xchg
and
aam
xor
inc
test
test
(bad)
out
inc
imul
xchg
jne
sbb
dec
cmp
or
sub
js
adc
ffreep
push
addr16
mov
push
mov
sub
fdiv
and
icebp
inc
xor
lahf
sbb
inc
loopne
jnp
inc
les
retf
pushf
pop
push
test
jbe
cmps
pop
inc
addr16
adc
add
repz
fld
int
out
mov
movs
pop
mov
(bad)
and
dec
dec
inc
lock
pusha
retf
pop
test
cdq
popf
jo
(bad)
call
jge
cld
pop
xor
mov
xchg
sub
cmps
xchg
xchg
leave
leave
test
dec
loopne
test
or
jge
fnstcw
movs
das
mov
std
jmp
enter
add
retf
fwait
xchg
push
cli
out
jp
dec
loopne
addr16
jnp
or
dec
test
hlt
sub
not
fwait
push
mov
fcom
enter
push
xchg
sbb
rcr
jno
sub
test
mov
add
cmp
inc
fcmove
jbe
jmp
and
mov
xor
push
iret
inc
aaa
adc
cmps
ins
or
std
loopne
rcr
or
jecxz
xchg
(bad)
loopne
dec
mov
movs
cmps
(bad)
pop
enter
pop
(bad)
jnp
or
js
push
mov
scas
clc
sub
cmp
in
stos
outs
repz
pop
cmp
pop
scas
ret
test
imul
movs
cmp
ret
in
and
mov
jne
arpl
inc
lods
sbb
das
fcomp
cdq
inc
mov
mov
dec
ss
dec
add
inc
pop
sub
fist
popf
scas
jns
mov
sbb
and
jns
(bad)
dec
in
mov
mov
jns
and
mov
mov
daa
aaa
xchg
into
cmp
neg
dec
or
mov
pushf
cmp
push
ret
inc
sbb
scas
pop
test
ss
in
int3
jmp
jno
jb
nop
or
std
fs
lahf
int3
shl
fld
push
mov
(bad)
pop
cmp
les
push
adc
adc
jmp
mov
inc
add
cmp
jmp
jg
sbb
jne
jne
push
xchg
loope
or
clc
and
(bad)
in
mov
in
push
mov
mov
xor
fld
popf
mov
and
(bad)
jo
xlat
and
aas
xlat
xchg
out
aam
out
push
mov
pop
push
jno
ds
fs
or
jnp
ret
into
add
dec
pop
add
inc
jge
(bad)
jns
dec
jnp
lock
cld
jne
rol
addr16
mov
xor
push
cmps
scas
call
pop
dec
mov
push
icebp
and
fwait
ret
mov
gs
mov
push
gs
sub
pop
jge
jbe
pop
or
mov
pop
mov
add
inc
ds
sbb
clc
add
jle
push
add
push
cmp
mov
jg
cmp
out
ds
mov
cmps
mov
je
add
or
sub
pop
les
ja
inc
int
jo
push
push
mov
mov
mov
inc
bound
sbb
sub
pop
(bad)
ret
inc
(bad)
cmp
mov
mov
xchg
aad
push
scas
mov
jmp
aad
inc
mov
ret
inc
sti
aas
dec
in
xchg
(bad)
aam
rcr
and
clc
hlt
sbb
mov
and
jae
clc
nop
pop
xchg
adc
lea
jecxz
sub
and
and
dec
fild
mov
inc
fsub
xchg
dec
movs
push
cmp
mov
inc
adc
fild
or
sbb
mov
scas
nop
mov
jecxz
jecxz
add
jo
xchg
jmp
jnp
test
je
and
gs
sbb
jae
out
sbb
arpl
jmp
xor
shl
mov
cmps
mov
cdq
add
ds
pop
mov
loope
dec
mov
push
aas
dec
inc
pop
iret
jno
or
shl
push
cmp
stos
imul
shl
sbb
sub
jno
and
test
mov
cmps
mov
jb
xlat
bound
fimul
es
xlat
arpl
mov
mov
dec
dec
mov
loop
mov
push
inc
mov
pop
jns
xchg
mov
dec
jecxz
sub
ret
pop
mov
outs
ret
push
or
pop
retf
sti
or
imul
aaa
imul
leave
push
call
je
(bad)
(bad)
xchg
loopne
xlat
push
xor
pop
jmp
push
popa
dec
loopne
jns
inc
call
stos
push
xor
dec
mov
push
popf
fstp
xchg
cmc
push
int
jns
jg
(bad)
out
std
imul
inc
in
or
fwait
test
call
cli
cmp
loopne
hlt
jnp
call
mov
dec
mov
mov
pushf
or
ror
jbe
push
mov
add
xchg
fiadd
jno
inc
add
(bad)
adc
(bad)
or
adc
sbb
jge
or
adc
dec
ins
sub
and
fdiv
dec
cli
ins
movs
fadd
ret
pop
mov
pusha
add
loope
aaa
xchg
daa
dec
jg
push
cdq
sbb
push
fcmovne
in
push
lods
inc
(bad)
retf
jae
mov
push
mov
mov
ret
xchg
mov
imul
push
test
mov
xor
push
dec
mov
mov
cmp
test
(bad)
movs
fld
adc
xor
aaa
sbb
bnd
lods
fisubr
xor
pop
out
and
sub
sbb
add
std
pop
fcom
in
lods
out
xor
div
fsubr
mov
lock
leave
ja
mov
in
dec
sub
les
xchg
stos
xchg
jnp
pushf
sbb
addr16
and
lods
fild
movs
pop
sub
dec
mov
imul
mov
and
xchg
dec
pop
fst
xor
(bad)
xor
scas
xor
and
pop
inc
retf
aas
cmp
call
mov
dec
mov
fst
mov
cwde
push
inc
in
addr16
or
arpl
mov
xor
div
call
pop
fisttp
ds
in
and
adc
fisubr
cmp
shl
mov
adc
sbb
and
cmc
aaa
rcl
add
pop
fld
mov
adc
mov
dec
mov
jnp
cdq
add
and
xor
sti
inc
or
test
ss
pop
arpl
push
jp
mov
rcl
mov
out
inc
push
pusha
push
mov
hlt
inc
cmps
push
popa
inc
mov
lock
loop
push
push
jg
mov
sbb
je
ins
push
pop
stos
into
fstp
xor
sbb
loopne
call
xor
data16
jo
mov
cdq
test
push
movs
aam
retf
rcl
int3
lods
aam
adc
xor
jae
aas
hlt
stos
cmc
mov
push
cmp
inc
dec
int3
in
retf
call
jb
arpl
and
mov
push
ss
pop
jns
loop
pop
imul
iret
std
xchg
repz
jns
xchg
js
in
dec
sbb
jmp
push
les
dec
je
scas
test
sar
test
lahf
mov
call
popa
je
cdq
mov
lea
sahf
cmps
jae
mov
ins
dec
push
int
sti
sbb
mov
cmc
outs
jbe
dec
test
test
xor
cmp
mov
cmp
or
push
test
test
arpl
fist
movhps
sbb
xor
clc
sub
pop
aaa
shl
(bad)
mov
in
pushf
scas
dec
add
dec
mov
cmp
stos
js
cmp
arpl
addr16
aam
in
mov
push
dec
shr
cmp
xchg
cmp
mov
cmp
nop
(bad)
dec
jne
add
loopne
lahf
pop
es
(bad)
retf
mov
test
daa
out
inc
scas
pop
mov
icebp
inc
imul
mov
je
inc
cmp
lods
ficom
pushf
cld
xchg
out
cmps
xchg
fistp
jne
gs
adc
cmps
jl
(bad)
xchg
retf
mov
jecxz
push
ss
scas
jno
ins
daa
inc
cmp
jecxz
pusha
mov
and
adc
loop
mov
pop
jmp
inc
xchg
clc
ror
frstor
pop
mov
add
dec
dec
(bad)
dec
imul
and
sbb
mov
aas
and
test
repz
icebp
mov
mov
int3
push
fld
outs
sti
js
repz
adc
ins
fwait
dec
mov
xor
iret
sub
push
cdq
add
cld
ss
movs
sbb
out
lods
inc
sbb
(bad)
pop
sbb
stos
cmp
xchg
lock
pop
inc
mov
and
push
sub
push
and
mov
xchg
mov
dec
nop
mov
dec
jge
sub
cmp
jno
sub
or
shl
sahf
ret
pop
fisttp
mov
cli
and
adc
inc
je
dec
sub
mov
or
sub
and
sub
push
xor
movs
sub
nop
xor
outs
cdq
pop
and
fwait
xor
scas
xor
jge
adc
push
std
and
pop
adc
outs
jmp
jb
push
nop
(bad)
jmp
xchg
cdq
push
lahf
xchg
jb
jge
cmp
or
mov
jmp
mov
dec
or
mov
push
std
imul
ja
test
int3
or
movhlps
repz
xor
xlat
or
fist
sbb
aad
push
pop
sbb
mov
mov
in
das
pop
adc
add
out
push
mov
adc
fist
call
daa
aaa
pop
mov
ret
loop
out
stc
(bad)
aaa
sub
push
or
mov
scas
int3
inc
add
adc
xor
mov
cmp
loope
shr
(bad)
test
or
sub
add
adc
pop
lods
mov
mov
shl
loopne
pusha
push
imul
cmp
pop
xchg
jecxz
fisubr
retf
stos
inc
mov
jb
pop
pop
sub
retf
mov
aad
stc
mov
and
jp
dec
pop
out
fcmove
pop
aas
xchg
cmc
(bad)
xor
cdq
test
xlat
xor
sub
adc
fld
mov
stos
fcmovb
(bad)
cld
lds
jg
pop
shl
push
ficomp
sbb
or
fwait
add
add
xor
(bad)
into
call
cdq
mov
inc
fwait
mov
pop
sub
iret
call
sahf
jge
(bad)
test
inc
mov
inc
lahf
adc
mov
push
push
pop
cmp
or
mov
dec
ret
mov
dec
push
xchg
cbw
inc
lahf
js
push
jge
jl
inc
jge
stc
loop
cmps
xor
inc
xlat
xor
fdivrp
or
dec
lods
cmp
add
cmps
xor
pop
outs
adc
in
sub
and
or
sub
sbb
mov
daa
out
(bad)
fdiv
fwait
mov
jecxz
or
xor
mov
ror
call
jg
movs
fwait
xchg
movs
outs
dec
cmc
inc
mov
movs
jo
sub
pop
adc
daa
adc
pop
inc
sti
scas
jmp
js
xchg
int3
(bad)
sahf
sbb
dec
and
cld
xor
ror
mov
xchg
adc
and
test
xchg
xchg
ja
out
jge
fidivr
cdq
sti
(bad)
cmps
aaa
js
pop
jo
xor
push
cmp
mov
jb
popf
ror
cld
retf
jmp
imul
adc
mov
lods
out
xchg
(bad)
mov
fwait
das
jmp
pop
push
and
push
and
dec
push
pop
cmc
or
leave
mov
fucomp
jae
js
loope
add
jg
ds
loopne
(bad)
rcl
sbb
mov
jbe
or
inc
sub
push
add
xchg
ins
add
sub
cwde
loope
call
mov
js
aas
xlat
jp
data16
or
int
xchg
loop
push
fild
mov
inc
add
scas
(bad)
mov
inc
dec
add
cmp
xchg
(bad)
and
scas
add
cli
pop
jecxz
inc
retf
dec
(bad)
loop
fstp
push
lahf
add
cmp
lahf
popf
xor
call
(bad)
add
dec
pushf
jbe
rcl
les
rcr
pop
fmul
adc
push
das
or
aas
cmp
outs
push
jmp
xlat
jno
or
jae
xchg
sbb
shl
addr16
pop
ret
fmul
ret
xor
adc
in
sbb
cli
clc
push
adc
arpl
test
movs
xchg
jmp
adc
jmp
icebp
cmp
cmp
adc
mov
inc
jecxz
mov
into
pop
fldenv
xchg
adc
out
add
not
sub
cmp
xor
popa
(bad)
fs
js
add
and
mov
and
push
xor
dec
xor
mov
neg
(bad)
sbb
ror
retf
out
(bad)
ror
out
test
cwde
icebp
adc
pop
aad
out
je
and
xlat
mov
jg
jmp
xchg
mov
and
sbb
nop
mov
test
loopne
add
push
dec
rcl
out
repnz
inc
movs
sbb
mov
into
dec
pop
pop
mov
fs
lods
inc
inc
pop
(bad)
stos
cs
sbb
pop
fwait
mov
fcomp
(bad)
aaa
ret
fcmove
aad
push
push
out
jno
sbb
pop
pop
cs
imul
cmp
ret
mov
(bad)
adc
sbb
popa
out
inc
sub
push
jns
loopne
popf
sub
xchg
cwde
fcom
addr16
loop
inc
neg
in
mov
jl
mov
xchg
aam
shl
in
adc
imul
mov
lods
pop
jl
inc
fldcw
(bad)
jle
aam
fsub
pushf
sub
xor
sti
or
pop
gs
fscale
adc
fnstsw
(bad)
jecxz
mov
add
pop
xchg
or
cwde
ror
imul
pop
jnp
mov
call
push
inc
(bad)
sub
cdq
shl
mov
inc
sub
test
dec
push
dec
arpl
sub
enter
lds
jns
pop
(bad)
int
loope
xchg
mov
dec
add
mov
pop
dec
pop
jb
cmp
fwait
cmp
(bad)
aad
cmp
js
add
push
shl
mov
push
outs
arpl
jno
fstp
in
hlt
stc
pop
mov
stc
cmp
mov
imul
popa
mov
jge
mov
scas
(bad)
addr16
and
aam
adc
and
inc
push
sub
and
adc
ja
mov
dec
inc
(bad)
(bad)
inc
sbb
out
mov
pop
xchg
push
test
add
fwait
sbb
test
xor
shl
jg
(bad)
rcl
or
fstp
dec
inc
inc
mov
aas
into
adc
rcr
add
mov
js
push
pop
in
enter
(bad)
(bad)
mov
fild
imul
aas
adc
add
popa
dec
jne
daa
xor
pusha
fs
fild
cmc
xchg
pop
dec
push
repnz
pop
arpl
shr
(bad)
mov
jecxz
(bad)
mov
push
hlt
stc
not
cld
adc
sbb
xor
aad
bound
adc
loopne
lock
bound
iret
sbb
in
in
in
loopne
add
adc
jecxz
and
sbb
jmp
inc
lock
leave
and
call
cli
xchg
dec
inc
mov
mov
nop
and
push
(bad)
jmp
mov
loopne
mov
sub
xchg
inc
into
push
pop
das
push
jg
mov
rcr
mov
int3
mov
mov
push
dec
iret
inc
adc
jo
mov
sbb
push
fadd
cbw
pushf
arpl
mov
adc
iret
push
add
sbb
push
mov
stos
inc
lahf
or
push
cs
and
fisub
cmps
cmp
sub
sbb
dec
out
mov
mov
cmp
fs
xchg
xrelease
push
push
and
int3
fild
retf
mov
jg
enter
jbe
dec
inc
sub
aaa
jne
jo
pushf
mov
push
pop
push
xchg
loope
lods
mov
pusha
inc
pop
push
or
dec
jmp
add
xchg
cdq
movs
sbb
sub
nop
adc
dec
hlt
and
or
scas
nop
push
push
scas
fs
pop
ret
jne
mov
stos
ds
loope
iret
push
xchg
jb
repnz
push
cmps
cmc
mov
call
fwait
dec
adc
mov
lods
aad
movs
pop
ds
das
aas
mov
lahf
adc
les
jb
xchg
les
dec
aas
sbb
sahf
jno
test
lods
clc
sub
js
cmp
stc
outs
adc
test
int3
cmp
in
into
int3
adc
mov
rol
xchg
jmp
fcmovb
fcmovu
sbb
mov
xchg
repz
add
popa
or
sbb
fistp
cmc
pop
xor
jg
movs
ins
je
jmp
pop
int
data16
out
sub
mov
jmp
loop
lods
pop
out
jle
push
sub
nop
mov
and
imul
(bad)
xchg
inc
inc
(bad)
out
xchg
cmps
scas
mov
mov
dec
in
call
and
xor
mov
xchg
xor
jnp
sbb
sbb
(bad)
jmp
jle
push
pop
jno
mov
sub
xor
sub
jecxz
inc
fs
push
mov
adc
int
clc
xchg
pop
lds
ret
mov
mov
fild
add
into
or
fimul
(bad)
adc
push
repz
out
adc
daa
inc
jns
paddusb
dec
ror
mov
push
mov
mov
xor
or
sbb
push
mov
xchg
not
and
clc
ret
setbe
cmc
leave
aas
setnp
inc
clc
(bad)
lds
clc
adc
mov
push
jge
cmps
fcom
inc
popf
into
loop
call
sub
aad
out
int
mov
cmp
ret
popf
jp
sub
cmp
inc
bound
inc
xor
mov
or
movs
push
inc
icebp
in
cmp
mov
fstp
(bad)
jmp
add
pop
cmps
push
out
jle
cwde
sub
pop
test
les
mov
pop
fmul
dec
push
sahf
pop
das
and
je
mov
adc
cmp
pop
fidivr
stos
or
sahf
or
mov
add
mov
pop
jo
and
loope
inc
jle
push
clc
mov
hlt
dec
mov
(bad)
mov
lahf
not
test
sub
adc
aas
shr
adc
mov
pop
jg
sbb
pop
xchg
or
or
xor
sbb
aam
xchg
sbb
data16
sub
sti
sub
mov
jb
mov
(bad)
bound
adc
outs
por
lods
push
iret
fs
lods
push
add
fild
pop
jg
out
jo
(bad)
xor
popa
movs
or
imul
adc
push
sub
(bad)
adc
mov
mov
pop
jb
nop
fwait
jle
call
and
lock
add
jno
cwde
push
xor
or
xor
xchg
fsubrp
shl
retf
add
adc
scas
jae
pop
pop
sbb
inc
sub
jno
idiv
xchg
push
out
jbe
aaa
mov
dec
mov
mov
cmp
stos
inc
push
jmp
xor
jmp
jg
neg
dec
enter
adc
push
jns
push
jle
jno
mov
sub
xor
repnz
jo
adc
xchg
dec
in
outs
jns
cmp
push
inc
jg
and
adc
addr16
mov
add
dec
ss
xor
xor
ins
inc
pusha
jmp
(bad)
adc
jmp
sub
jecxz
xor
movs
mov
aam
adc
xchg
pop
call
and
stc
mov
(bad)
loopne
fiadd
or
add
sub
pop
imul
xchg
add
aas
xchg
sbb
add
in
jl
push
retf
dec
pop
xor
test
inc
pop
sub
pop
aaa
add
mov
add
add
mov
push
repz
mov
cmc
out
fdivr
repz
inc
shl
lods
add
das
bound
loopne
inc
leave
inc
je
(bad)
xchg
mov
xchg
add
xor
xchg
jnp
xlat
mov
bound
or
cli
add
test
rcr
dec
repnz
push
jo
cmps
jns
inc
pusha
dec
sti
inc
xchg
sub
jmp
jge
scas
push
xchg
pop
xor
cmp
ror
mov
rcl
es
rcl
iret
dec
push
sahf
inc
repz
mov
push
inc
inc
mov
cmp
fstp
addr16
push
imul
xchg
jl
jno
scas
push
push
shr
sub
cmp
fnsave
sub
hlt
icebp
inc
cmp
cmp
push
push
in
es
cmp
bnd
xlat
ret
test
push
popf
xor
sub
dec
ret
xlat
cmp
ja
cmp
xchg
repnz
mov
and
ins
pop
adc
and
and
sbb
sub
lea
ja
inc
xchg
xor
iret
xor
mov
gs
js
jp
imul
sbb
jns
pop
sahf
repz
ins
cmps
add
push
cmps
xchg
scas
out
mov
cmp
fidivr
jmp
pop
lods
or
lods
jp
ins
aad
ret
add
or
dec
movs
push
out
ins
aas
sbb
test
or
xor
test
xchg
pop
jae
pop
sub
xchg
adc
mov
int3
jge
dec
loopne
int3
xchg
xor
dec
mov
cdq
xchg
push
inc
push
inc
jl
std
xchg
mov
or
test
retf
fistp
into
ret
sbb
or
or
push
(bad)
cli
test
and
mov
push
repnz
or
lods
or
xchg
lock
mov
cmp
mov
in
mov
inc
pop
jecxz
inc
stc
mov
imul
rol
xchg
mov
test
or
ds
cs
test
jbe
push
adc
push
(bad)
aad
xchg
jecxz
fsub
and
sti
(bad)
imul
push
or
inc
(bad)
xchg
dec
int
out
loope
loope
or
scas
jl
movs
adc
jnp
pop
mov
cmp
add
jmp
ins
pop
jo
fmul
dec
push
out
jg
inc
clc
mov
gs
xchg
lods
cdq
cld
jbe
xchg
jnp
cmp
les
test
in
inc
cmp
jbe
outs
nop
xchg
popa
(bad)
mov
push
int
or
and
adc
jne
cwde
xor
(bad)
dec
daa
jmp
gs
int
int3
data16
out
int
out
pop
add
retf
icebp
in
add
mov
dec
jb
xchg
cdq
mov
xchg
dec
pop
dec
movs
inc
je
jb
and
mov
dec
sti
xchg
jb
lods
rol
and
or
fxch
add
push
(bad)
in
dec
dec
mov
push
push
outs
lods
(bad)
adc
dec
add
dec
and
dec
push
xor
call
cmp
jmp
xor
int3
lock
lahf
xor
in
icebp
sub
push
arpl
lahf
ins
ficom
bound
xchg
xchg
add
pop
fsub
jge
pop
add
les
and
jge
add
xor
pop
sbb
test
mov
jl
jno
es
call
mov
mov
xor
test
mov
add
sub
push
jno
sahf
xor
jg
enter
fiadd
add
ds
xor
int
sub
mov
das
mov
cmp
jno
out
add
mov
mov
rcl
imul
cmp
out
jecxz
in
std
inc
call
lods
jno
ret
je
out
test
inc
in
dec
add
pop
sub
fisttp
fstp
ins
mov
pop
sbb
push
adc
imul
dec
outs
pop
push
dec
popa
popf
cmp
push
inc
shl
(bad)
mov
cmp
push
mov
sbb
mov
data16
out
ret
sbb
test
call
addr16
cmps
pop
das
mov
int3
dec
cmp
sbb
and
mov
push
clc
push
dec
adc
xor
fcomp
sbb
hlt
mov
paddq
int3
add
jae
fidiv
push
iret
retf
xor
outs
mov
jo
cs
ds
mov
pop
mov
sti
sar
xchg
lds
xchg
movs
adc
call
lods
add
shr
sub
add
jmp
sbb
add
cmc
(bad)
sti
pop
sub
loop
ja
(bad)
(bad)
(bad)
or
test
xchg
xlat
sub
imul
test
scas
(bad)
mov
xchg
sbb
(bad)
out
es
pop
sub
sub
or
outs
(bad)
in
test
or
jnp
test
push
fisttp
je
xor
mov
outs
xchg
lods
popf
dec
pop
jmp
mov
std
sub
mov
ins
repz
xor
inc
je
inc
jecxz
call
cmp
cmp
inc
jnp
not
in
sysenter
mov
iret
test
les
pop
sar
mov
and
add
push
jb
pop
stos
sub
jp
mov
cmps
pusha
mov
push
imul
imul
in
int
std
ss
xor
stc
lds
test
dec
inc
sbb
test
inc
mov
and
call
xchg
(bad)
adc
mov
cmps
or
in
xchg
shl
(bad)
loopne
sti
xor
fcmovb
xchg
push
imul
and
sub
pop
mov
minps
adc
xlat
cmp
xor
add
adc
test
aam
in
add
xchg
or
jno
daa
adc
pop
dec
fadd
aaa
pusha
in
sahf
xchg
push
js
inc
inc
mov
xor
sub
push
pop
sar
pop
ds
lods
and
sub
cmps
shl
or
aaa
pop
lock
push
aaa
loop
and
jg
xchg
xchg
dec
or
iret
mov
and
enter
gs
retf
jge
inc
aas
dec
dec
daa
ss
jb
aad
movs
popa
cmp
in
pop
mov
adc
cmp
jo
jbe
pop
cmp
mov
popa
cmp
mov
mov
shl
addr16
push
inc
and
sbb
in
test
and
mov
in
xor
sbb
nop
or
and
out
mov
inc
adc
mov
loope
inc
mov
jo
ss
scas
and
push
js
pop
test
int3
cmp
lock
adc
xor
ss
ret
sub
sbb
push
cdq
sbb
out
pushf
mov
jmp
or
cmp
sbb
adc
xor
aam
adc
mov
out
push
loopne
fbstp
test
add
xor
mov
mov
dec
pusha
fdivrp
into
(bad)
loope
addr16
shl
and
inc
jg
cmp
push
fdivr
cmps
or
push
outs
cmp
lds
pop
push
adc
dec
out
fldenv
xor
loop
cmp
ins
pusha
jae
xchg
jmp
bound
test
aas
js
int
fsub
or
cmps
stos
inc
pusha
(bad)
cmp
data16
mov
ret
mov
jmp
mul
(bad)
xchg
loopne
pop
ret
daa
sub
inc
cmc
sar
mov
outs
mov
pop
fs
and
inc
nop
dec
dec
(bad)
and
push
gs
das
xor
add
xor
imul
jmp
mov
fisttp
ds
cmc
dec
adc
(bad)
repnz
inc
fcom
std
mov
in
lods
cmp
xlat
cmp
add
pop
and
mov
sub
cmp
mov
add
xchg
pop
push
rcl
in
neg
mov
out
dec
push
aas
loopne
cwde
ficomp
inc
out
fst
push
mov
repz
hlt
imul
mov
clc
sbb
shl
pop
pop
mov
lds
xchg
mov
add
daa
push
fld
psubb
add
sbb
js
iret
es
movs
and
cli
test
je
dec
cwde
pusha
sub
pop
enter
out
xchg
je
ins
xchg
cmps
inc
jmp
(bad)
lahf
in
or
sub
and
(bad)
in
outs
or
cmps
xchg
mov
ds
adc
xchg
mov
cmps
dec
push
ret
and
ja
inc
adc
xor
shr
(bad)
call
out
cli
and
mov
pop
jmp
mov
jecxz
mov
mov
push
adc
push
or
loop
pop
dec
and
xchg
and
nop
scas
jno
mov
sbb
cmps
ficomp
test
fist
add
jg
xor
xor
std
xchg
(bad)
add
add
repnz
popf
ret
sahf
inc
loopne
in
stos
dec
sbb
xchg
jp
(bad)
call
xchg
stos
dec
addr16
(bad)
mov
push
dec
jnp
movs
inc
fdiv
shr
es
dec
ret
mov
push
clc
add
push
mov
in
inc
mov
sub
loop
sbb
sbb
addr16
(bad)
loop
add
rcr
(bad)
mov
hlt
shl
into
movs
jmp
loope
dec
es
sbb
test
fwait
pop
and
scas
mov
out
jno
retf
ss
and
sbb
js
jg
push
mov
cmp
cdq
and
stos
or
sub
imul
pop
mov
pop
jmp
xor
jnp
adc
test
push
cmp
xor
lock
jo
cmp
pop
out
sbb
inc
imul
inc
daa
int
pop
fisub
retf
inc
jp
lahf
cmp
jbe
mov
or
pop
ins
mov
ret
pop
mov
ss
and
data16
push
inc
push
daa
addr16
pushf
push
inc
and
sub
mov
mov
stos
enter
mov
aam
or
xchg
sti
inc
jne
(bad)
and
and
test
ret
inc
lods
ss
inc
mov
inc
inc
adc
hlt
clc
call
jmp
mov
inc
repz
inc
scas
mov
inc
(bad)
arpl
retf
mov
lock
adc
or
add
imul
mov
(bad)
xor
retf
cli
xchg
fdivr
pop
loope
cwde
(bad)
fdivr
mov
dec
sbb
test
call
fcmovbe
ins
aas
mov
stc
dec
jecxz
dec
loopne
push
(bad)
adc
js
xchg
data16
hlt
aam
inc
xor
arpl
sub
jmp
cmp
js
pop
pop
cmp
fdiv
in
push
mov
cmps
adc
xchg
xchg
(bad)
out
xchg
fist
popf
jno
test
mov
and
out
push
push
mov
push
jmp
pop
jae
mov
jne
push
sbb
repz
push
add
push
imul
adc
gs
sub
pushf
pusha
jge
ret
sub
push
mov
ret
mov
lock
in
or
fsubp
aas
inc
jp
mov
mov
repz
fwait
cmp
dec
add
in
sbb
jge
push
cmps
(bad)
ja
jmp
jnp
gs
lods
xor
aad
outs
ds
arpl
push
inc
cli
pop
xor
inc
add
mov
mov
dec
pushf
push
std
xor
add
cmp
jmp
test
cmp
mov
add
sti
mov
lahf
or
aas
clc
data16
mov
sub
pusha
mov
push
pushf
jg
test
pusha
outs
outs
pop
es
int
adc
jo
fld
xchg
jne
pop
mov
mov
sbb
fcom
in
sahf
xchg
fstp
mov
clc
dec
cwde
fistp
inc
dec
iret
neg
pop
sub
clc
hlt
sahf
xor
into
rcr
outs
sbb
push
int3
retf
xchg
fild
or
inc
dec
ret
or
cs
out
das
sub
and
dec
jg
pop
and
ss
fs
nop
cs
push
call
test
mov
jg
adc
iret
int
scas
gs
call
mov
imul
fwait
and
pop
mov
mov
outs
addr16
ja
aam
mov
push
add
push
adc
cld
popa
test
push
sub
shr
push
or
xchg
es
or
jmp
or
cmp
push
cmp
enter
cdq
repz
jnp
cmps
inc
loope
popa
cld
cli
fld
fnstsw
cmp
call
push
xchg
movs
mov
lods
ds
jp
xchg
and
aad
xor
push
mov
out
clc
inc
push
add
lods
mov
dec
int3
push
adc
arpl
sub
int3
jo
sub
out
pop
sub
test
xchg
cmp
fsub
pusha
stc
xchg
rol
pushf
out
or
dec
daa
adc
xchg
das
xchg
jp
in
dec
js
xchg
mov
stos
les
std
loop
add
push
rol
mov
cmp
mov
sbb
mov
ins
aaa
xor
cmp
push
mov
in
jmp
stos
xchg
sbb
dec
pop
rep
push
push
adc
cs
clc
xchg
adc
mov
and
push
push
ret
test
out
xor
or
jle
pmuludq
mov
sbb
inc
adc
retf
add
sbb
xchg
sbb
jo
(bad)
pop
or
sub
int3
addr16
mov
fmul
sub
movs
sar
into
fcomp
ins
pop
adc
outs
inc
mov
mov
lods
cmps
ret
pop
stos
xchg
mov
aad
int
stos
test
adc
sub
cmc
sbb
imul
adc
mov
xor
inc
inc
push
scas
pushf
mov
and
jbe
mov
push
jmp
lock
pop
std
inc
mov
je
hlt
inc
sbb
imul
pushf
push
stos
ja
call
pop
in
shl
loop
call
or
cmp
inc
aas
push
mov
les
or
and
mov
pushf
mov
mov
repz
xor
jae
and
scas
cdq
rcr
neg
jb
jae
pop
xor
sbb
sbb
fucomp
xor
hlt
or
pop
push
sub
fs
cwde
cmp
mov
pop
ror
and
sahf
outs
mov
sbb
inc
dec
jmp
dec
mov
movs
pop
gs
adc
push
add
fsubr
fdiv
xchg
dec
retf
lock
and
adc
rcl
mov
scas
sub
sub
mov
out
inc
mov
dec
xchg
std
jmp
dec
and
gs
xchg
xchg
aas
jnp
bound
xor
stos
pop
dec
lahf
or
pop
fsubr
icebp
mov
push
enter
repz
sub
loope
daa
test
mov
nop
xchg
adc
jge
(bad)
mov
push
jg
adc
xchg
rcl
cmp
cmp
cmps
and
push
mov
push
daa
repz
stos
push
mov
ror
jmp
lea
shl
sub
popf
push
test
add
jge
jo
mov
lock
jl
sbb
xchg
cmps
and
mov
xchg
stos
sti
gs
(bad)
ins
mov
sub
out
lea
fild
jl
out
cs
xchg
sbb
xchg
cmps
movs
or
and
(bad)
outs
pop
cdq
pop
xchg
ret
(bad)
jle
and
enter
cmp
or
and
and
jp
or
sbb
retf
(bad)
mul
cdq
add
cmp
sub
mov
ds
cdq
add
xor
test
jne
dec
jmp
rcr
mov
pusha
push
(bad)
std
sub
xor
lods
fidiv
mov
out
loopne
ins
cwde
xlat
mov
add
js
mov
xchg
push
add
dec
hlt
lock
mov
jmp
dec
add
sbb
lahf
retf
dec
fidiv
jmp
cmps
jae
sub
(bad)
jb
push
pop
jbe
rcl
mov
test
jb
inc
rcl
test
jge
pop
and
jb
jnp
sub
hlt
out
xlat
cmpps
mov
dec
mov
div
xchg
int
icebp
loope
mov
cli
fcomp
mul
cmp
or
inc
inc
jae
ins
stos
pushf
and
mov
imul
lahf
pop
jb
push
jno
adc
repnz
mov
add
jno
sbb
popa
cmc
xor
jmp
aam
pushf
icebp
imul
mov
push
scas
add
cli
pop
imul
mov
std
jbe
jmp
mov
dec
xlat
mov
xchg
add
call
enter
popf
inc
out
push
mov
and
push
fisubr
mov
popf
mov
iret
(bad)
(bad)
(bad)
push
mov
mov
xchg
es
out
add
cmp
cmps
jmp
xor
sar
je
shl
outs
fldcw
outs
in
push
adc
jnp
xlat
ins
js
mov
and
mov
loope
jecxz
fdiv
mov
sub
and
js
bound
and
sub
jle
arpl
sub
in
outs
jecxz
dec
rcr
mov
enter
sbb
ret
in
dec
nop
mov
dec
not
inc
push
int
out
fdivr
xchg
push
jmp
sbb
test
or
test
in
setp
shr
call
push
ins
or
loop
add
fsubr
xchg
retf
or
cli
gs
fmul
pusha
ret
add
xchg
(bad)
cmps
cmp
dec
pop
ficom
popa
push
xor
popa
xchg
dec
cli
(bad)
xchg
(bad)
out
nop
dec
stos
fisubr
mov
sub
andnps
sub
mov
jecxz
lsl
push
inc
cmp
jnp
call
jecxz
mov
ins
jmp
jmp
cmp
adc
sub
fwait
stc
ds
dec
sub
call
dec
add
cmps
ins
outs
mov
pop
jbe
pop
xor
repz
es
mov
pop
xchg
xchg
ja
add
mov
aas
jle
sbb
xchg
xor
jmp
je
and
fld
or
cdq
xchg
dec
outs
push
cmp
nop
push
and
addr16
aam
cmc
add
aas
sti
test
enter
arpl
test
pusha
imul
jno
cmps
movs
les
push
push
mov
add
sbb
sub
outs
cld
mov
(bad)
(bad)
sub
mov
stos
push
arpl
inc
lock
sub
xchg
ins
cmp
cli
inc
fwait
hlt
cmp
fimul
ja
cmp
mov
arpl
jb
inc
fmul
daa
push
jl
rol
(bad)
enter
pop
outs
test
push
mov
and
sbb
mov
cli
fwait
pop
aam
ret
movs
fisubr
pop
aad
add
call
(bad)
mov
xor
adc
test
or
xchg
movs
test
or
aaa
sub
cs
cmp
jbe
cmp
and
popa
shl
inc
xor
(bad)
mov
xchg
jl
inc
mov
aaa
cli
mov
pop
lea
pop
nop
or
xor
and
test
and
pop
cmp
cld
fs
ja
lea
mov
stc
dec
mov
dec
and
mov
icebp
xchg
xchg
add
test
sub
adc
mov
fidivr
mov
jno
fstp
sub
and
inc
out
sbb
pushf
mov
add
rcl
cmp
xchg
jbe
(bad)
movs
loope
rcl
cmp
cmp
in
nop
(bad)
push
and
inc
mov
aad
pop
rcr
arpl
and
xchg
inc
mov
xchg
loopne
lods
add
pop
adc
add
sub
ja
cmp
jae
test
sbb
(bad)
xor
dec
sbb
or
aad
cmp
imul
dec
lods
sub
xor
ds
enter
int
cdq
or
nop
bound
mov
movs
pop
mov
jecxz
or
mov
scas
mov
movs
dec
mov
in
movs
add
outs
sti
pop
sahf
fistp
arpl
cmp
and
fsubr
add
outs
stos
not
mov
inc
and
xchg
aas
and
iret
inc
fbstp
add
ins
imul
mov
lahf
test
push
mov
js
in
lock
pop
or
mov
cmps
out
imul
mov
or
lea
fiadd
jbe
cmc
sbb
xchg
jmp
dec
stos
or
nop
in
mov
jp
shl
jmp
adc
xchg
scas
out
ins
and
outs
ss
inc
hlt
inc
repnz
jno
jg
sbb
and
fcmovbe
mov
dec
pop
push
jnp
inc
out
int3
mov
cli
jns
iret
std
ja
add
push
lods
out
xor
loop
(bad)
mov
xchg
jnp
mov
mov
xchg
push
add
hlt
or
into
xor
xchg
fwait
mov
bound
hlt
sub
pop
loop
test
sub
mov
mov
pop
sub
stos
leave
jne
mov
dec
add
lds
sbb
ud2
daa
add
mov
adc
icebp
and
push
cmps
push
repnz
(bad)
test
in
cmp
ret
jb
xchg
enter
sbb
push
in
xchg
add
mov
add
pusha
mov
fdivrp
push
lock
jp
adc
and
popf
mov
mov
sub
sbb
stos
cmp
jae
test
or
and
or
jg
push
(bad)
mov
clc
loopne
lods
mov
clc
xchg
loope
(bad)
hlt
fldenv
popa
ror
mov
lods
jl
add
cmps
push
mov
out
es
movs
rcl
push
dec
jge
mov
gs
mov
dec
popa
push
add
push
mov
outs
adc
cmps
int
xchg
mov
jo
push
dec
icebp
fldenv
cmp
dec
xor
lods
scas
sahf
xchg
das
lahf
push
retf
repnz
dec
bound
nop
sbb
imul
mov
test
add
bound
repz
lods
jb
xchg
pushf
add
not
cmp
imul
into
outs
mov
cld
xor
adc
and
pop
hlt
jl
inc
or
jl
js
pop
ret
cmps
js
push
and
mov
retf
(bad)
test
sbb
mov
pop
and
scas
rcl
sub
ins
pop
xchg
loope
nop
(bad)
dec
ret
xchg
dec
imul
jmp
div
push
fs
mov
xor
mov
loop
cs
adc
add
scas
and
repz
xchg
fxch
bnd
inc
retf
out
mov
retf
mov
ds
xchg
data16
dec
pop
sbb
xchg
and
xchg
lock
cmp
popf
rcr
adc
pop
xor
xor
movs
(bad)
retf
dec
jle
adc
jmp
fs
jnp
int
retf
aad
jl
mov
test
fistp
in
stos
mov
aad
cmp
pusha
cmp
push
(bad)
push
push
loope
stc
jmp
clc
leave
bound
jbe
mov
out
or
hlt
push
sub
sahf
inc
lods
imul
inc
cmp
sub
ret
sbb
sub
nop
xchg
js
push
mov
mov
adc
add
aam
mov
leave
jg
add
in
nop
xor
sbb
or
cs
mov
aas
nop
sbb
mov
les
int
pop
xor
pop
dec
xchg
fwait
repnz
sbb
jo
jnp
ins
pop
ins
push
xor
jnp
or
lods
popf
outs
ss
mov
fdivr
ins
adc
cmp
pushf
shl
sub
cs
daa
or
imul
xor
jne
cmps
cmp
xchg
mov
mov
out
pushf
mov
mov
or
mov
add
imul
lds
xchg
movs
pop
xchg
push
lds
mov
xchg
or
push
dec
add
jmp
jmp
test
jo
jg
mov
(bad)
pop
pop
lock
xchg
(bad)
fdiv
shl
loopne
jns
inc
jo
push
lds
cmps
inc
fisub
das
push
out
clc
ja
mov
inc
adc
nop
fstp
test
dec
mov
jae
xlat
cld
xchg
jo
repnz
hlt
mov
aam
cmp
mov
and
hlt
cmc
into
outs
push
adc
xor
add
icebp
pop
int
fs
xchg
adc
jge
pop
xlat
popf
rcr
and
ins
push
pop
jno
sbb
xor
call
push
call
mov
mov
xor
retf
imul
xchg
xor
xor
cmp
add
sub
jl
pop
sbb
sub
xor
or
(bad)
icebp
aam
jae
jg
dec
adc
mov
bound
mov
stc
mov
or
rol
outs
les
and
xchg
enter
xor
jp
mov
push
test
movs
lea
adc
in
adc
sub
pop
cmps
imul
scas
mov
mov
add
sub
or
inc
mov
push
jo
inc
pushf
into
dec
sbb
jmp
cmp
das
(bad)
xor
stos
cmp
(bad)
push
adc
repz
and
ins
xor
stos
fsubr
test
cmp
cs
jge
outs
shl
(bad)
outs
dec
icebp
mov
mov
cs
add
int3
push
(bad)
iret
loopne
sbb
jmp
jmp
aas
jnp
adc
adc
rol
add
and
retf
xchg
fmul
dec
mov
ins
mov
pop
imul
pop
into
fwait
push
dec
jecxz
cmp
shl
sub
jnp
je
xchg
aaa
loopne
push
cmp
ins
sysexit
sub
push
xor
mov
jnp
inc
imul
xchg
test
adc
jno
mov
sub
ret
xchg
adc
out
mov
or
stos
and
shl
pop
mov
and
jmp
push
dec
inc
nop
ficomp
ja
fs
push
cs
or
pop
ficomp
test
out
nop
or
sbb
pop
lds
push
repnz
inc
sbb
ror
xchg
mov
push
test
std
xor
push
sbb
lods
jae
inc
xor
dec
cmp
xchg
shl
or
ret
mov
push
push
loop
mov
repz
loope
push
inc
movs
in
add
std
daa
retf
or
xchg
std
mov
cmp
push
push
into
jp
mov
imul
sub
scas
xor
rcr
shr
cdq
adc
pusha
pusha
cmp
inc
jecxz
sbb
test
cwde
mul
jecxz
or
xor
cmp
push
popf
adc
into
call
inc
mov
sahf
into
sub
adc
xchg
or
push
or
outs
ror
or
jmp
jecxz
jae
retf
jle
cld
mov
xchg
xor
jle
jno
push
push
add
fstp
sbb
add
mov
out
add
shl
shld
mov
jg
jecxz
and
movs
fisub
fs
aaa
mov
jl
aad
les
jg
xchg
ret
fadd
in
sti
pop
rol
jecxz
fiadd
movs
pop
loop
lods
and
and
cmp
mov
jge
xor
push
push
retf
jnp
dec
je
into
adc
push
and
xor
pop
clc
je
mov
jge
sub
ror
dec
and
fwait
mov
shl
jl
cwde
mov
pop
xor
xchg
adc
adc
mov
cmc
push
mov
sti
lds
xor
aaa
gs
jl
loopne
enter
dec
call
loopne
add
je
and
and
(bad)
pop
mov
cwde
iret
(bad)
inc
mov
outs
jge
or
or
xchg
sub
retf
xchg
dec
pushaw
mov
push
push
stc
jg
enter
pop
stos
test
es
mov
fiadd
fnstcw
push
ds
dec
sub
hlt
xchg
ds
in
cmp
jbe
call
add
inc
push
outs
je
fistp
jge
ja
dec
pop
rcl
jl
mov
dec
mov
ins
add
mov
repz
ins
mov
daa
jp
mov
mov
add
sar
out
adc
mov
xchg
cmps
(bad)
fstp
es
mov
popa
pop
xor
mov
xchg
les
pop
adc
add
and
xlat
mov
inc
push
dec
push
imul
fist
ror
ins
out
sti
int
jo
jne
fsub
int
jmp
ins
push
(bad)
loopne
cld
add
dec
popa
adc
jns
mov
stos
xchg
sub
mov
mov
sbb
push
or
int
inc
mov
xor
call
push
jo
js
pop
adc
mov
mov
sub
and
and
dec
cmp
inc
mov
pop
ror
(bad)
mov
enter
stc
ja
out
call
inc
push
add
pop
stos
(bad)
sbb
dec
inc
loope
out
enter
add
xchg
cmp
pop
nop
xchg
rcr
push
idiv
jbe
fisttp
ja
sub
popa
les
ins
mov
sbb
cdq
mov
or
and
inc
sti
mov
pop
dec
test
js
loopne
lods
sbb
mov
in
repz
jle
cmp
sahf
shl
pop
xlat
mov
ins
test
cmp
inc
outs
loope
pop
popf
loopne
xchg
leave
mov
pushf
xor
dec
retf
mov
dec
dec
pop
inc
mov
(bad)
add
jmp
cmps
add
adc
daa
pop
les
(bad)
stc
jo
push
mov
(bad)
int
popa
mov
jno
inc
gs
xchg
add
lods
(bad)
mov
or
fistp
iret
lahf
add
jo
dec
scas
loope
or
outs
and
nop
fmul
push
adc
mov
enter
dec
sbb
jecxz
xor
or
lods
pusha
test
ret
jne
push
mov
mov
inc
fdivr
push
mov
jecxz
cmp
mov
ins
fiadd
daa
or
gs
inc
(bad)
inc
push
out
or
clc
les
pop
bnd
retf
rol
inc
adc
sti
es
jae
fxam
dec
scas
(bad)
push
out
pop
mov
and
fnstcw
ss
jmp
rol
adc
cmp
movs
sti
mov
jo
data16
popa
push
fwait
push
cmps
pusha
dec
in
mov
fwait
test
jae
gs
ds
cs
je
gs
mov
dec
xchg
xchg
mov
call
les
xor
inc
jbe
ja
jmp
call
pop
inc
or
leave
shl
jns
cs
out
cmovno
movs
mov
in
push
(bad)
sbb
fcomp
jg
mov
push
mov
mov
sbb
sbb
das
sbb
das
add
jl
out
mov
movs
out
inc
mov
ja
pop
push
es
or
inc
imul
xchg
(bad)
(bad)
outs
mov
fcmovne
push
adc
imul
xlat
inc
and
test
ret
neg
push
mov
jns
jmp
(bad)
mov
popf
cmp
out
out
pop
adc
dec
inc
or
cli
cmc
test
outs
stos
iret
jns
das
cmps
inc
ret
shl
add
sbb
inc
cmp
cmp
mov
mov
mov
and
(bad)
outs
outs
xor
xchg
sub
stos
iret
adc
mov
jmp
pop
inc
or
test
in
xchg
mov
bound
ja
in
into
mov
enter
pop
stos
xor
mov
leave
sbb
loopne
retf
out
outs
adc
xchg
jae
ja
mov
push
int
push
push
jnp
addps
mov
arpl
add
outs
mov
or
adc
mov
dec
mov
into
mov
dec
lds
inc
fwait
sub
sti
imul
or
push
data16
in
sahf
cmp
mov
xlat
adc
shr
scas
in
push
mov
cmp
add
jae
mov
icebp
mov
retf
retf
or
xlat
mov
inc
or
mov
leave
ds
popa
push
or
xchg
xchg
adc
mul
test
outs
imul
fild
js
dec
repnz
adc
neg
aas
pop
int3
fwait
loop
out
mov
push
div
mov
push
call
cdq
loope
jnp
xchg
cmp
movs
mov
loopne
mov
xor
push
sbb
test
daa
pop
push
jg
inc
shl
jl
mov
dec
mov
jb
sub
mul
in
pop
push
cmps
adc
jnp
or
jp
jno
mov
pusha
inc
sbb
dec
in
inc
repz
cld
push
xlat
add
lods
dec
nop
mov
das
int3
or
das
or
pop
enter
jmp
cmp
jmp
or
push
retf
sbb
mov
enter
scas
add
xchg
repnz
jl
add
mov
mov
pop
div
sti
jecxz
mov
retf
mov
popf
dec
dec
inc
(bad)
xchg
pop
(bad)
cmc
fs
and
add
or
push
(bad)
jecxz
bound
in
jecxz
and
jl
mov
ret
leave
into
lods
pop
mov
push
fidiv
push
retf
jne
cmps
repz
(bad)
data16
pop
mov
xor
test
inc
xchg
icebp
jnp
inc
mov
ss
dec
stc
shr
inc
cmp
or
sahf
(bad)
jb
bound
(bad)
rcr
fidiv
inc
jmp
(bad)
icebp
(bad)
or
adc
push
fnop
std
mov
jge
xor
std
jmp
cmc
stos
sbb
jmp
outs
inc
mov
push
shr
or
hlt
mov
cmps
push
add
jno
pop
cmp
neg
mov
add
cmp
push
adc
sbb
push
(bad)
fst
cmps
mov
push
loop
loop
loopne
loopne
imul
cmps
xchg
std
in
ret
mov
pusha
sbb
mov
inc
inc
scas
(bad)
dec
mov
jmp
adc
cmp
adc
out
and
sti
hlt
mov
xchg
pusha
mov
mov
adc
shl
sub
push
ds
mov
je
popf
xchg
mov
cwde
and
xor
out
mov
mov
push
imul
pop
add
mov
test
repz
pop
mov
mov
test
sbb
and
pusha
xor
icebp
clc
mov
jmp
pop
push
sar
add
fcomip
dec
adc
fidiv
xlat
fcomp
adc
dec
add
jnp
pop
scas
cdq
cli
(bad)
sub
sub
out
xchg
add
(bad)
mov
mov
clc
push
cs
sbb
arpl
pop
loop
dec
jae
jmp
push
aam
outs
(bad)
cmc
(bad)
lds
mov
cli
test
(bad)
je
add
int
lahf
jne
inc
leave
xor
mov
enter
test
mov
adc
jle
(bad)
mov
les
cwde
sbb
in
repnz
lods
xchg
ss
mov
or
mov
adc
sbb
loope
enter
sbb
adc
test
fadd
cmp
std
out
bound
lods
pop
(bad)
pushw
add
adc
adc
cli
mov
push
dec
test
icebp
push
addr16
retf
popa
enter
out
dec
inc
mov
(bad)
inc
xor
xchg
in
shr
mov
mov
dec
jmp
add
cmp
nop
cmps
mul
popa
fimul
aam
outs
in
dec
mov
jmp
rcl
idiv
outs
xchg
jbe
and
and
enter
add
stc
int3
(bad)
(bad)
loopne
pop
ds
mov
jg
rol
leave
test
push
push
mov
stos
cmps
clc
ins
arpl
jle
inc
mov
inc
stos
xor
std
dec
xor
push
ins
jae
or
nop
ins
cdq
jo
sbb
(bad)
sub
arpl
std
out
adc
loop
and
jmp
mov
pop
pop
inc
dec
mov
fbld
out
retf
imul
xchg
sub
push
mov
imul
mov
stos
add
loopne
cmps
xor
dec
stc
mov
xor
xchg
adc
cmc
xchg
jp
nop
out
push
jp
nop
mov
jns
std
xchg
fimul
loop
add
mov
mov
(bad)
popf
std
push
pop
sbb
cs
repz
pop
test
daa
(bad)
mov
sbb
ds
inc
jle
cwde
lahf
add
sbb
xchg
clc
mov
bound
movs
push
jp
arpl
pop
in
add
inc
iret
xor
xor
imul
sbb
test
nop
mov
cmp
push
shl
pusha
iret
stc
das
(bad)
jae
mov
inc
inc
out
(bad)
adc
and
arpl
cwde
jmp
xor
or
bound
adc
pusha
push
mov
repz
pusha
cmp
ds
pop
mov
sbb
mov
jo
xor
dec
mov
xchg
cmp
mov
xor
into
repz
das
cmp
test
fsubr
out
daa
mov
adc
jle
pop
dec
adc
mov
jmp
movs
(bad)
or
push
xchg
push
jne
jne
out
cwde
fstp
int
sbb
int
dec
mov
push
cwde
dec
adc
cdq
and
pop
adc
imul
pop
ss
(bad)
and
jl
jmp
jecxz
ret
lock
adc
(bad)
jns
cli
xchg
fs
cmp
lahf
loope
cmp
in
push
lea
out
and
mov
cwde
inc
dec
and
xor
fidiv
fistp
jns
pop
lods
fwait
xchg
(bad)
xchg
aas
rcr
cmp
dec
pop
inc
xor
xchg
push
push
pop
in
das
sbb
push
push
pop
push
mov
xchg
dec
pop
inc
enter
pop
cmps
dec
jno
fbstp
scas
pop
sub
jns
icebp
inc
retf
inc
dec
js
in
cmc
div
sbb
mov
sbb
int3
add
movs
sar
rol
sub
inc
mov
xor
test
adc
push
bound
push
push
out
cmp
fist
outs
inc
and
push
xor
xchg
jns
popf
sub
cld
mov
leave
stos
jmp
jne
add
stos
jno
not
(bad)
pop
sbb
ins
shl
pop
adc
xlat
mov
loop
outs
in
xchg
xchg
sbb
dec
pop
loope
jg
cmp
ss
pop
popa
pop
inc
xchg
xor
xor
cld
push
fwait
lods
dec
mov
js
jno
fldcw
push
jnp
aas
test
daa
movd
dec
or
in
pop
sbb
icebp
retf
enter
mov
rcr
push
fisubr
pop
cmp
sti
test
movs
cld
js
jg
xor
adc
inc
shl
or
mov
test
jle
test
inc
mov
jl
call
popa
and
cld
popf
sbb
dec
loop
shl
fld
xchg
inc
repz
mov
sbb
xchg
in
xor
sbb
jg
xor
sub
pop
ja
adc
pop
pop
xor
pusha
xchg
adc
leave
jns
jnp
mov
add
fs
in
lods
xchg
sub
jle
sub
icebp
test
xor
cwde
imul
movs
xor
sub
out
mov
inc
pusha
xor
lods
pop
or
inc
pop
xor
popa
scas
or
je
imul
xchg
jne
gs
ret
movs
sub
retf
inc
dec
dec
or
out
daa
or
adc
ja
pusha
xor
in
bound
fstp
push
and
push
outs
push
js
adc
mov
lds
mov
adc
arpl
aas
fdiv
loop
inc
dec
je
lds
popa
cmp
sub
lahf
mov
leave
mov
inc
aas
lea
shr
seta
xchg
lahf
bound
sub
xor
lods
cmp
add
enter
das
in
mov
push
xrelease
add
xchg
dec
in
xor
adc
mov
dec
and
fwait
stos
mov
xor
and
jo
lahf
xor
(bad)
in
loope
inc
cli
push
loope
fst
call
cmps
and
hlt
fsub
push
xchg
sbb
mov
sub
pop
popf
loop
xchg
dec
mov
mov
push
jle
lea
shl
aad
(bad)
cwde
out
call
scas
mov
adc
retf
shl
pop
mov
dec
xchg
xchg
mov
outs
enter
or
clc
scas
retf
call
repnz
arpl
ins
push
pop
in
imul
dec
jge
outs
fstp
jae
(bad)
cdq
les
add
mov
inc
scas
inc
push
mov
call
leave
(bad)
call
mov
sub
push
popa
pop
sub
inc
xor
test
mov
xchg
or
pop
aad
jb
jne
pop
data16
xor
inc
pushf
test
call
jno
inc
push
test
or
sbb
inc
stos
and
cmp
pop
push
xchg
cmp
lea
mov
push
jb
ins
out
xor
sbb
push
aad
(bad)
jbe
inc
xchg
sbb
cli
mov
retf
sub
adc
jbe
shl
pop
cmp
jno
outs
mov
test
stc
sbb
mul
pop
add
cmp
(bad)
dec
test
and
mov
jge
fs
or
mov
sub
outs
fiadd
push
cmp
xchg
outs
ins
pop
jge
xchg
xchg
dec
inc
push
sbb
add
fs
sbb
and
add
test
jmp
or
mov
add
test
lock
mov
mov
enter
jns
ss
xchg
fidiv
les
into
js
rol
add
int
imul
jmp
mov
mov
xchg
stc
mov
sbb
(bad)
jecxz
jle
xor
(bad)
adc
cmp
cwde
adc
stos
div
in
and
mov
pushf
enter
(bad)
jne
and
and
push
(bad)
push
pop
mov
cmps
dec
and
imul
stc
or
push
test
xchg
(bad)
xlat
cmps
loopne
ror
sbb
sbb
sti
fwait
push
pop
imul
test
cmp
leave
xchg
pop
lea
add
and
and
add
leave
xchg
js
pop
daa
das
mov
div
neg
aaa
ret
daa
movs
sbb
add
js
mov
mov
test
sti
int
mov
xor
cwde
aaa
nop
out
mov
adc
mov
out
imul
or
jp
inc
mov
mov
lea
mov
mov
enter
push
aam
fisubr
(bad)
cmp
imul
inc
call
push
push
adc
jmp
sbb
dec
ror
mov
out
test
cmp
dec
jle
rcr
push
ret
loopne
jl
adc
jp
inc
jne
mov
repz
retf
out
jle
sub
pusha
test
adc
outs
push
inc
lock
fisttp
nop
push
add
jg
pushf
pop
loop
mov
outs
add
cwde
pop
lock
in
sbb
fcomp
mov
mov
fstp
xchg
sbb
icebp
jno
loop
loopne
pop
sub
fistp
or
mov
jl
push
inc
loope
pusha
shr
sub
rcr
dec
adc
inc
cmp
push
sbb
jl
inc
xchg
hlt
test
mov
out
clc
or
jae
test
popf
arpl
jb
(bad)
cwde
mov
push
mov
rcr
push
ds
in
mov
dec
test
xchg
rcl
sub
movs
cmp
cmp
push
and
es
cld
xor
xor
(bad)
xor
pop
jmp
ds
push
jb
and
shr
or
mov
idiv
pop
dec
adc
sub
fwait
xchg
int
and
jne
pop
jmp
xor
cmps
jbe
xor
push
jmp
in
lea
push
sbb
xlat
ins
pop
cli
in
imul
jae
into
ins
jne
fdiv
pop
rcr
cmp
sbb
fild
adc
std
(bad)
fwait
cld
fcomp
in
add
jno
out
loop
shl
xor
cld
or
xor
mov
dec
push
jb
stos
xor
mov
push
aas
push
or
xor
push
push
es
ds
(bad)
cmp
ja
in
jo
in
aaa
dec
mov
jb
push
jb
push
neg
push
and
(bad)
imul
mov
dec
or
push
in
xchg
jle
std
ror
int3
mov
sub
cwde
cmp
out
cmps
mov
dec
push
sti
test
sbb
mov
int
xchg
adc
mov
cmps
pop
aam
jecxz
mov
into
addr16
xchg
cdq
push
pop
(bad)
sub
lds
mov
es
adc
or
sub
loopne
cmp
aaa
mov
inc
adc
pop
push
push
mov
or
add
int3
jnp
stos
xor
lahf
push
pop
arpl
mov
shl
inc
test
ins
and
ret
adc
cmp
loope
jmp
movs
mov
sti
retf
stos
outs
popa
stc
addr16
or
test
mov
inc
pop
inc
mov
test
ss
mov
dec
jno
mov
cld
push
dec
fs
inc
mov
adc
mov
popa
mov
imul
(bad)
js
cmp
mov
out
out
loopne
add
dec
xlat
pop
sahf
or
mov
sub
fild
xchg
in
movs
dec
add
mov
add
cmp
enter
mov
pop
pushf
stos
push
push
pop
(bad)
cs
ins
or
xor
repz
test
nop
jl
ja
mov
add
aad
hlt
add
and
shl
aad
popa
std
sub
les
pop
mov
mov
(bad)
retf
xor
xchg
or
mov
xchg
or
es
mov
add
cwde
stc
pop
cmp
jae
xor
loop
cld
sbb
xchg
repnz
mov
jno
pushf
ins
je
jmp
mov
test
imul
inc
fisttp
mov
jge
cmps
imul
pop
xor
stos
xchg
lds
not
(bad)
jns
mov
add
push
or
jo
and
adc
pushf
mov
iret
sti
dec
cmp
sbb
shl
sti
mov
out
push
dec
jecxz
push
sbb
leave
(bad)
mov
jp
out
jns
or
and
sub
icebp
ins
rcl
adc
sub
gs
xchg
mov
jmp
sub
xchg
aad
in
lods
addr16
std
bound
mov
in
jl
inc
jmp
bound
mov
mov
cli
pop
fwait
sbb
dec
cld
mov
push
ins
sbb
ja
mov
and
mov
mov
adc
lahf
cmc
xchg
jg
jne
pop
aaa
push
push
das
pop
add
or
imul
in
int
jae
and
retf
xchg
sub
push
xchg
and
inc
scas
jp
pop
call
dec
in
add
gs
sub
push
iret
and
pop
out
(bad)
push
loop
xchg
sub
or
add
add
push
movs
loop
jp
mov
xor
and
cli
fiadd
dec
clc
out
lods
mov
lds
jns
mov
adc
add
test
sbb
inc
cs
pop
cli
push
add
push
sbb
out
mov
pop
and
and
clc
cmp
out
out
add
mov
out
mov
jmp
nop
or
ret
sahf
rcl
nop
xor
out
dec
push
push
stos
sub
adc
int
(bad)
cmp
jns
hlt
pop
into
xchg
and
(bad)
xchg
scas
sbb
sub
stc
fstp
ds
jno
cmp
fadd
sahf
int
cdq
pop
mov
jg
scas
es
sti
push
gs
(bad)
ja
call
retf
retf
mov
call
fld
lahf
lods
cdq
mov
int
cmp
xlat
das
dec
rep
or
(bad)
int
cmps
sub
pop
xchg
scas
sub
mov
add
dec
mov
arpl
xchg
(bad)
xor
das
ins
and
jno
bndldx
inc
lock
lahf
adc
leave
pop
xchg
jecxz
loope
jg
imul
xchg
xchg
shl
xchg
push
add
xchg
or
sub
ds
fwait
cmp
loope
lods
push
mov
jg
lahf
out
inc
les
icebp
scas
in
out
sti
or
xlat
cmp
add
int
iret
sub
xchg
lea
js
outs
xor
adc
ja
ror
mov
sub
stc
test
gs
out
dec
dec
enter
call
je
loop
hlt
jle
pop
pop
or
loop
dec
pusha
ret
mov
pop
mov
repnz
push
jle
stos
call
sub
sahf
mov
fisubr
call
shl
jmp
cmps
push
clc
mov
and
(bad)
sub
sbb
aam
data16
and
xchg
lods
int3
push
pusha
mov
fisub
(bad)
or
cmp
retf
ret
mov
and
out
add
rcr
pop
sbb
retf
retf
loope
shl
inc
or
push
cmp
sub
fimul
mov
inc
std
jge
ror
popf
data16
call
adc
push
jmp
mov
test
gs
adc
xchg
shr
mov
inc
fldenv
xchg
jmp
mov
push
mov
cmp
dec
in
jno
arpl
jmp
jmp
icebp
sbb
ret
mov
sbb
jb
lahf
mov
sbb
xor
pop
aam
push
jbe
aaa
call
inc
dec
jnp
ss
add
scas
jp
or
and
lahf
jne
add
mov
or
or
ja
lods
mov
movs
sbb
in
retf
shl
(bad)
sub
ror
jmp
arpl
sbb
bound
faddp
cmp
xchg
and
cmp
cmp
sbb
and
add
sbb
push
mov
pop
dec
lds
ja
sbb
repnz
cmp
jge
jns
ins
ror
mov
mov
mov
(bad)
cmp
push
cmp
mov
and
data16
push
loope
leave
gs
fadd
std
(bad)
cmp
mov
mov
adc
fsub
sti
mov
xchg
cs
or
push
lea
adc
out
popa
call
stos
in
fwait
push
pop
enter
adc
fwait
jo
ss
cld
bound
push
shl
jl
mov
pop
or
adc
pop
cdq
neg
and
retf
mov
hlt
sbb
lods
lods
dec
push
mov
(bad)
ret
jle
push
scas
pusha
rcl
test
stos
xchg
cmp
sbb
dec
sbb
jbe
pop
and
push
int3
adc
push
movs
jo
fsubr
ja
and
cmp
xchg
hlt
mov
inc
mov
pop
ins
lods
mov
jae
lea
cmc
mov
xchg
xor
aaa
dec
rcl
push
mov
inc
stos
mov
jl
cmps
and
push
mov
data16
pop
popf
movs
pop
xchg
test
sub
shl
aaa
jno
das
retf
inc
ret
pop
mov
pop
loop
loope
test
add
rcl
js
cs
loope
out
rcr
dec
mov
sub
cmps
adc
jo
popf
pop
loope
push
test
sub
jns
sub
xchg
xor
sbb
adc
cmp
retw
in
inc
mov
loop
les
adc
fcomp
ins
mov
repnz
pop
mov
push
icebp
cmp
adc
cmps
jmp
cmp
sbb
mov
adc
mul
adc
and
sub
enter
sbb
js
sti
cli
sar
sbb
out
pop
lock
test
jno
sbb
mov
(bad)
mov
not
aas
sbb
fldenv
mov
aam
or
repnz
mov
call
repz
test
les
mov
add
int
and
test
(bad)
out
xchg
mov
dec
sub
inc
icebp
ss
enter
iret
lahf
inc
push
jg
scas
mov
xor
sub
les
and
je
sub
jl
fild
cmp
retf
mov
jge
xchg
cmp
in
repz
xchg
push
lock
push
ins
mov
movs
adc
into
enter
inc
scas
and
fucomip
fwait
popf
mov
enter
mov
sub
int
sbb
jle
out
xchg
gs
cmc
xchg
mov
leave
sbb
das
or
push
add
(bad)
mov
(bad)
outs
(bad)
or
push
(bad)
pop
mov
leave
add
les
lods
outs
mov
fstp
test
out
and
inc
stc
loopne
les
jle
dec
adc
bound
ss
retf
cmp
fstp
mov
cli
test
lods
arpl
add
aas
mov
mov
pop
scas
fdivrp
fsub
test
push
enter
(bad)
(bad)
mov
mov
repz
lods
sbb
repz
clc
jl
push
dec
call
fwait
jge
cmp
mov
shr
xchg
mov
adc
mov
loope
adc
xchg
popf
sbb
outs
mov
ss
stc
retf
xchg
and
pop
xchg
jl
push
sbb
jecxz
add
jl
mov
loope
mov
mov
lods
lods
jb
jnp
mov
jp
cmp
inc
add
(bad)
mul
inc
mov
call
test
inc
into
cld
retf
cmp
bound
or
xor
sbb
test
fld
dec
js
popa
jp
pushf
push
not
xor
cmp
loopne
mov
push
test
test
and
adc
test
cmps
scas
test
scas
rcl
xor
mov
push
ins
or
dec
cwde
or
sbb
ss
arpl
inc
xchg
push
add
inc
ins
fcomp
xchg
in
or
inc
test
fiadd
or
(bad)
loop
inc
mul
ret
mov
aam
mov
into
int3
jmp
push
adc
ss
imul
pop
fmul
inc
test
mov
jns
in
cdq
daa
cdq
out
(bad)
mov
(bad)
mov
mov
lock
imul
aad
pop
mov
add
loop
or
inc
fs
push
jl
or
dec
and
mov
push
mov
pop
mul
mov
pop
dec
ficom
(bad)
into
mov
mov
adc
adc
dec
loopne
xor
mov
and
push
push
ror
xor
mov
mov
dec
popf
mov
into
cld
fidivr
cdq
jb
sbb
retf
inc
cmp
inc
out
mov
div
ins
mov
xlat
xchg
and
sub
adc
mov
dec
push
jp
out
cmp
stc
or
popf
imul
fimul
(bad)
in
sti
cmc
into
push
and
sub
jno
cmp
repz
(bad)
std
in
push
hlt
sti
mov
xlat
shl
dec
loop
xor
bound
cmp
fcmovnb
aad
xor
icebp
cmc
sbb
cmp
in
or
pop
movs
loopne
repz
and
gs
loop
imul
push
cdq
ret
mov
adc
ret
xchg
cld
aad
mov
lahf
dec
cwde
add
cli
inc
dec
add
xchg
mov
mov
pop
les
xchg
iret
and
in
mul
jne
xor
outs
retf
adc
popa
xor
jmp
mov
sub
mov
push
outs
call
push
aad
(bad)
jbe
jmp
(bad)
mov
lahf
jmp
test
sar
xchg
(bad)
lods
push
cwde
je
cdq
loopne
iret
jmp
inc
ror
dec
std
sbb
and
cmp
fld
iret
add
loop
movs
in
pop
es
jp
xlat
add
jnp
xor
call
push
daa
rol
mov
ins
and
mov
hlt
jno
or
pop
pop
(bad)
adc
loop
dec
mov
pop
cli
retf
retf
jb
pop
xor
xchg
loopne
iret
pusha
inc
xchg
popf
mov
push
ret
shr
mov
in
add
out
inc
push
stc
int
fs
pop
jmp
out
and
stc
inc
lods
mov
sub
push
mov
aas
je
sbb
sbb
outs
(bad)
stos
stos
cmp
popa
scas
mov
cmp
inc
fwait
lock
fs
aaa
push
ret
lock
mov
push
mov
in
adc
stos
pop
jmp
mov
cdq
jae
in
dec
loope
in
xchg
jle
push
ins
jbe
dec
pop
(bad)
not
(bad)
int
movs
fnstcw
sbb
adc
(bad)
xchg
jne
mov
outs
dec
pop
fadd
jg
jnp
push
enter
push
sbb
xchg
ret
mov
jnp
dec
pusha
and
sub
mov
cmps
(bad)
addr16
jl
pop
xchg
out
inc
imul
jl
call
mov
inc
fwait
test
icebp
jbe
dec
sub
mov
jo
xchg
fmul
push
ja
mov
jbe
jp
outs
push
cwde
out
(bad)
xlat
xchg
pusha
(bad)
mov
and
std
inc
mov
sub
mov
scas
and
inc
mov
dec
sub
push
nop
xchg
or
push
xor
mov
call
sbb
xchg
rol
cmp
(bad)
cmc
mov
(bad)
adc
push
pop
jns
fcmovb
xlat
jno
cwde
test
sub
data16
in
push
xchg
jno
cmp
lods
push
mov
fwait
xor
lods
inc
adc
ins
dec
pop
repz
sbb
je
sti
and
pusha
icebp
pop
mov
aas
mov
les
fwait
jp
fistp
jae
xchg
into
nop
push
idiv
push
jae
cwde
punpckldq
dec
fdiv
fisttp
test
or
ds
loope
sub
mov
fbld
mov
pusha
push
inc
adc
sti
lock
icebp
jle
mov
jmp
or
shl
mov
and
bound
aam
pop
shl
sbb
mov
mov
jns
cli
mov
aad
sbb
cs
ss
cli
leave
push
cdq
in
sbb
cmp
mov
mov
mov
pop
fdivr
leave
mov
mov
nop
cmp
xchg
lock
mov
stos
in
inc
inc
xchg
out
mov
movs
fiadd
rol
mov
(bad)
cmc
test
ins
retf
bound
neg
clc
(bad)
les
fmul
mov
mov
push
mov
aaa
and
jb
mov
jbe
mov
movs
or
into
push
or
pop
xor
pop
(bad)
cmp
pop
mov
mov
sbb
xlat
out
ret
fnsave
xchg
jno
pop
xlat
sub
jg
xchg
and
xchg
sub
test
cmc
popf
jno
test
and
lock
adc
outs
out
push
clc
push
movs
push
pusha
push
inc
fcomp
movs
mov
daa
loop
sbb
xchg
cmp
or
push
add
(bad)
inc
cbw
dec
int
cmp
shl
clc
mov
mov
jge
inc
inc
(bad)
in
mov
dec
dec
push
shl
movs
sbb
cdq
fs
ins
push
sub
shl
aad
dec
shl
loopne
(bad)
push
cmp
(bad)
pop
sbb
out
mov
repz
pop
mov
test
inc
arpl
ins
inc
rcl
or
aaa
aaa
retf
and
and
daa
jbe
fmul
sbb
sar
popa
xor
pop
dec
movs
pop
push
pop
test
ins
jb
repz
bound
sub
sub
adc
add
mov
jmp
out
icebp
lods
lahf
inc
call
xchg
sbb
jno
ins
push
pop
push
push
mov
push
jae
inc
sub
xlat
cmps
xchg
mov
ds
mov
push
jge
daa
mov
inc
jbe
lahf
mov
xor
pop
pop
mov
sub
inc
fcomip
xchg
mov
lahf
lods
ins
int3
fsub
jmp
adc
add
push
pop
push
jge
cs
cdq
ror
fisubr
adc
or
(bad)
cmp
and
push
aam
in
out
adc
or
scas
fucom
mov
lods
test
test
fst
sbb
test
and
xlat
push
movs
stos
adc
adc
push
cmp
mov
stos
ds
(bad)
ret
jae
inc
mov
add
into
xor
stc
add
mov
cmp
inc
ins
pop
xchg
sahf
repz
popa
xchg
xor
mov
out
lods
fisttp
in
inc
mov
xchg
(bad)
fs
dec
dec
and
dec
repz
stos
jmp
push
push
dec
lods
idiv
sub
inc
sub
mov
xchg
stos
mov
xor
arpl
pop
xlat
out
stos
sbb
stos
enter
test
mov
out
or
frstor
mov
jno
sub
mov
fmul
mov
xor
adc
call
sub
dec
sbb
pop
in
leave
cmp
out
imul
fnstcw
push
pop
mov
jbe
in
es
push
daa
jne
and
ins
ss
mov
popa
jg
xchg
cli
sub
call
test
fwait
jb
fstp
inc
call
mov
inc
pop
dec
pushf
push
sbb
jecxz
mov
not
push
sti
fild
(bad)
es
fbstp
or
pop
inc
hlt
mov
ficomp
in
push
sub
inc
call
adc
jno
ret
rol
fidivr
inc
sti
mov
inc
xchg
aad
dec
cmps
int
int
or
inc
mov
pop
pop
daa
stos
loopne
enter
pop
mov
pop
mov
int
or
nop
adc
lahf
call
mov
xchg
inc
mov
movs
pop
gs
cs
mov
sub
xor
inc
fmulp
pop
ins
outs
and
iret
ins
mov
outs
push
out
call
pop
cmp
mov
loop
jo
inc
cmp
icebp
out
mov
push
test
pop
mov
fxch
les
jmp
das
push
dec
enter
addr16
(bad)
lods
inc
and
lock
cmp
in
popf
xor
stos
cmc
push
shl
les
push
jb
aaa
add
popf
std
push
sub
mov
arpl
icebp
push
imul
int
rol
(bad)
mov
sbb
mov
mov
push
sahf
push
fcmove
repz
mov
or
fdiv
sub
sbb
fs
mov
retf
push
mov
jmp
out
je
mov
mov
mov
mov
jbe
jo
mov
jge
hlt
xor
sbb
jecxz
dec
ja
xor
xor
in
out
in
jg
sbb
cs
fadd
and
fwait
ret
dec
test
imul
scas
push
rol
inc
arpl
jmp
mov
mov
scas
jecxz
add
leave
mov
ins
inc
or
dec
jno
push
lahf
inc
popa
jmp
mov
mov
movs
jle
mov
adc
dec
dec
xor
xor
aam
bound
ret
push
sub
ins
stc
jecxz
cmc
jg
aam
pop
aas
push
pop
xor
jno
inc
pop
or
stos
sub
sbb
(bad)
aas
pop
mov
xchg
leave
pop
out
iret
add
push
mov
push
in
and
add
pop
leave
mov
ja
cmp
push
enter
xchg
shl
mov
call
out
push
xchg
test
sub
repnz
into
fcomip
xor
dec
call
jae
aaa
aad
into
pop
ins
es
xor
mov
mov
gs
mov
add
arpl
push
fs
mov
or
ins
and
add
arpl
mov
in
popf
stc
scas
jecxz
sar
enter
mov
je
out
gs
or
movs
imul
mov
mov
pop
jbe
iret
dec
push
in
int3
imul
fbld
mov
dec
jge
xor
out
add
adc
fidiv
cmp
mov
push
fwait
jbe
and
bound
cwde
mov
mov
loop
lahf
cmp
push
popa
aam
icebp
xchg
push
daa
push
movs
fst
shr
or
in
cmc
sbb
pusha
xor
jae
enter
repnz
ret
add
test
mov
addr16
push
jge
mov
lods
popf
dec
nop
es
loope
jnp
lea
xlat
jno
cld
out
xor
sbb
fidivr
jno
cmp
test
out
div
jae
jp
iret
cwde
or
inc
or
(bad)
jge
das
dec
jg
outs
jne
ret
cmp
fdiv
clc
push
lods
xchg
xchg
fnstsw
push
fmul
cmp
ficomp
mov
pop
sbb
pop
push
push
daa
jg
push
dec
pop
lods
pusha
scas
cs
call
lock
mov
lds
jge
mov
pop
add
adc
aad
adc
aad
push
fs
dec
mov
or
cmc
add
fxtract
shr
out
enter
rcr
sbb
fwait
dec
lahf
or
xor
jg
xchg
mov
(bad)
push
inc
sbb
push
sbb
xor
and
xchg
sbb
into
push
dec
lds
ins
push
mov
(bad)
push
inc
lods
and
cmp
out
call
cmp
cmps
ins
mov
icebp
idiv
ja
addr16
cmps
daa
test
(bad)
les
jbe
movs
sub
in
mov
xchg
inc
ins
(bad)
push
ret
jecxz
sbb
mov
aad
in
jnp
mov
std
mov
fisub
or
add
push
in
sub
das
or
fdiv
push
inc
sbb
push
add
repz
jle
add
sub
jl
retf
repnz
inc
or
popa
clc
dec
mov
push
enter
pop
push
iret
into
dec
xchg
push
xchg
scas
cmp
sbb
sti
xchg
or
nop
pusha
lods
pop
pushf
enter
ror
mov
adc
sub
mov
xchg
sub
adc
mov
(bad)
call
or
dec
or
(bad)
lea
jae
mov
sahf
(bad)
xor
aam
scas
ss
cmp
aaa
test
push
enter
rol
cdq
lods
sub
adc
mov
jp
addr16
sbb
cmc
mov
sbb
mov
push
mov
push
pop
or
js
add
jbe
mov
stos
out
out
push
jg
add
iret
in
inc
(bad)
lahf
mov
mov
out
int3
data16
sub
cwde
or
pop
push
(bad)
ror
inc
inc
out
xor
and
or
or
sar
adc
(bad)
mov
adc
retf
xchg
mov
lods
lds
neg
jns
fisttp
pop
test
and
push
pop
push
ins
ss
mov
nop
mov
add
lds
ss
test
mov
inc
push
jmp
mov
out
add
jle
pop
xchg
pop
xchg
dec
fcom
shr
sti
ret
pop
imul
or
dec
or
jl
push
ds
xor
rol
push
mov
mov
enter
aas
adc
popa
add
jnp
jg
stos
mov
in
shl
cmc
adc
pusha
inc
scas
pop
stos
fst
mov
inc
mov
or
fistp
xor
icebp
lock
imul
in
imul
xlat
xor
sub
and
push
fmul
repnz
and
push
mov
inc
movs
jecxz
ins
add
arpl
clc
cmp
das
pop
cld
daa
not
fist
push
mov
setl
cmps
mov
in
adc
cmp
sub
(bad)
fnsave
int
jmp
push
pop
pushf
call
popa
popf
cmp
ret
jno
xchg
jns
mov
push
cmp
retf
push
imul
xor
test
inc
out
fs
sbb
inc
sbb
pop
xchg
shl
pop
test
scas
jp
jp
mov
and
dec
pop
adc
scas
add
jmp
jo
or
push
xor
lock
mov
push
jge
dec
jo
js
xlat
js
mov
cmp
inc
or
add
cmp
int
mov
outs
setns
jle
loope
rcl
and
in
or
dec
repz
jg
icebp
mov
fidivr
fistp
xor
mov
sub
aad
ins
mov
bound
and
jl
xor
mov
ret
fistp
fisub
aam
loope
jmp
jmp
mov
mov
cmps
cmp
outs
push
inc
std
add
or
and
mov
icebp
daa
neg
pop
cmc
test
mov
lock
imul
popa
dec
xchg
mov
das
and
pushf
sub
sti
mov
lahf
add
push
jge
scas
retf
popa
dec
outs
pop
test
pop
jb
push
pop
and
sub
iret
loop
fwait
test
adc
(bad)
mov
retf
mov
shl
push
jg
sbb
push
(bad)
retf
aam
ror
icebp
sbb
xchg
pop
xchg
pop
dec
outs
and
add
mov
cmp
in
push
jmp
push
aam
cmp
movs
cmc
jbe
dec
add
or
or
ror
pop
sub
int
xchg
cmps
fistp
jno
aaa
out
jo
mov
mov
xor
add
pop
or
pop
enter
push
sbb
jp
icebp
xor
push
cmps
popf
jno
and
mov
loopne
xor
das
xchg
xchg
ret
mov
xlat
push
mov
retf
sub
stos
xchg
ret
dec
jno
pop
push
sub
popa
icebp
dec
mov
in
scas
dec
xlat
ja
(bad)
test
push
int
loop
out
ins
jge
bound
daa
int3
sbb
add
das
jae
fst
jne
or
xchg
xor
repnz
inc
test
mov
xor
mov
ins
sbb
fmul
test
test
xchg
cmp
sar
mov
lods
or
sbb
(bad)
mov
lods
out
mov
jl
fwait
pop
xor
aas
push
and
add
xor
ror
(bad)
out
and
xor
inc
jno
cmp
mov
nop
cli
test
push
(bad)
std
adc
das
(bad)
loopne
dec
cmp
fnstcw
(bad)
movs
rcr
bound
popf
push
inc
mov
mov
daa
xchg
pushf
das
and
test
mov
pop
test
push
hlt
push
adc
lahf
std
and
or
cmps
gs
add
cli
inc
inc
cmps
adc
sub
xlat
push
mov
pop
ja
xchg
push
je
shl
mov
mov
lea
fs
cmp
in
mov
lahf
or
or
cmp
call
cmps
and
shl
add
sub
retf
xchg
adc
adc
es
dec
mov
mov
or
in
je
mov
test
es
push
push
add
mov
sub
pop
adc
aas
sub
inc
jmp
sti
pop
inc
sbb
loop
pop
std
cwde
mov
test
xchg
addr16
rcl
mov
xchg
or
mov
repz
push
sub
jmp
adc
in
jp
push
ins
call
and
jl
cmp
mov
rcl
popf
ja
ja
push
push
das
fistp
push
hlt
push
mov
dec
loope
jbe
ja
cmc
mov
not
rcr
outs
dec
stc
sub
sub
push
adc
pop
mov
push
aam
xor
jnp
idiv
sub
mov
cmp
test
cmps
xor
adc
(bad)
clc
icebp
jmp
mov
cmp
ins
repnz
enter
sub
inc
(bad)
shl
xor
cld
or
rol
imul
and
lds
xor
sub
xor
test
cdq
lds
test
sbb
loopne
test
sub
stos
or
sti
push
jae
and
and
mov
add
fdiv
jns
ror
sub
sbb
(bad)
(bad)
or
out
adc
fdiv
xor
and
out
xor
cli
xor
das
sbb
cmp
minps
and
gs
add
mov
test
and
mov
push
ins
ret
call
out
push
out
dec
xor
push
push
pop
add
or
xor
aad
out
sub
push
adc
pop
sbb
call
inc
sahf
(bad)
mov
xchg
mov
xchg
push
ror
fst
stc
aas
push
dec
push
movs
push
xchg
sub
mov
repnz
test
fsub
aam
hlt
arpl
xchg
sbb
or
mov
inc
mov
xor
cli
xor
les
popf
sbb
nop
(bad)
sbb
xor
mov
fadd
sbb
fisttp
in
cmp
sub
mov
mov
cmp
sub
lahf
mov
jmp
mov
pop
(bad)
pop
fldenv
mov
push
(bad)
scas
push
or
inc
sbb
jne
push
mov
push
cmps
add
cmc
jmp
loop
fld
jbe
adc
and
dec
pop
push
jb
les
sahf
jle
jmp
sub
je
xor
in
(bad)
sub
xlat
rol
add
not
push
fidiv
icebp
inc
movs
scas
and
aas
mov
ret
std
in
sbb
test
cmps
xchg
push
out
mov
ins
in
and
sar
jmp
cmp
add
cdq
dec
adc
lds
pop
inc
push
mov
adc
mov
push
pop
pop
cmc
xor
and
sahf
push
dec
inc
pop
cmp
frstor
ins
mov
test
enter
mov
pop
and
xor
and
div
mov
leave
call
out
(bad)
sar
imul
mov
mov
xor
neg
xchg
push
fiadd
sbb
xchg
jmp
cli
jo
inc
aaa
sbb
xchg
jbe
jae
(bad)
pop
cmps
cmp
cmp
lods
inc
out
idiv
ret
outs
xchg
cld
pusha
add
and
retf
jne
and
out
cmc
xor
pop
das
or
loop
outs
lahf
or
stos
ret
jge
lahf
xchg
mov
pop
aad
sbb
ss
movs
das
scas
std
cmp
push
xor
inc
pusha
jo
push
test
iret
jns
fisub
into
xor
push
and
mov
and
xor
aas
sub
jmp
mov
out
mov
test
shl
push
in
pop
mov
adc
mov
dec
iret
mov
sub
icebp
push
scas
mov
lds
popf
xchg
mov
out
ins
ret
adc
cs
jbe
daa
movs
mov
movs
test
and
arpl
push
aaa
sub
adc
inc
pop
jmp
jl
sbb
and
inc
in
jl
sbb
dec
dec
ss
push
xor
pop
cs
cmp
fisub
and
jb
cwde
inc
pop
or
fbstp
ins
add
push
mov
addr16
sbb
pushf
jp
add
jb
movs
mov
test
sub
ins
push
js
jno
cmp
mov
or
sub
push
imul
mov
xor
push
hlt
sub
stc
push
cmp
cwde
ret
adc
repz
push
nop
out
mov
fidivr
mov
jae
sahf
mul
paddsw
or
arpl
cmp
push
jmp
mov
ss
out
in
add
loop
pop
xor
xchg
pop
jmp
cmc
mov
es
sar
cmp
pop
mov
push
jo
push
mov
xchg
scas
js
cmps
fild
mov
and
cli
sbb
pop
shl
jmp
imul
sub
fcom
retf
mov
sub
xor
in
ror
xchg
mov
sub
addr16
fwait
mov
xchg
repnz
ja
fsub
sub
xor
dec
and
mov
lds
or
clc
adc
cmp
mov
cmps
cs
nop
pop
icebp
adc
mov
jmp
push
aad
inc
mov
jae
in
mov
pop
loop
aam
rol
or
adc
push
xor
out
sti
ins
adc
fidiv
xor
jo
jl
add
cmp
pushf
inc
test
ss
mov
mov
bswap
push
mov
sub
mov
jl
inc
fidivr
ss
sub
rol
add
mov
fidivr
pusha
and
xchg
dec
ds
or
test
mov
mov
scas
ja
in
mov
add
in
aas
or
das
xchg
pop
mov
cdq
or
xchg
push
or
repz
jbe
leave
jmp
sub
cmp
push
adc
daa
xchg
(bad)
fsub
mov
lock
mov
xor
pop
movs
or
sbb
es
fst
cmps
mov
push
sbb
jmp
ror
call
mov
test
div
add
int3
(bad)
aad
imul
jl
iret
push
inc
pop
ret
enter
pop
loop
icebp
jns
lahf
fld
fldcw
imul
pop
jp
inc
repz
out
sub
je
adc
imul
loop
cdq
les
push
xor
(bad)
pop
inc
xlat
jp
fiadd
outs
xchg
xchg
ins
enter
and
dec
pushf
in
inc
dec
fbld
push
test
xchg
imul
ja
in
adc
div
jns
and
lea
inc
nop
inc
ficomp
dec
loop
aaa
pop
cmp
jmp
std
jbe
jno
dec
adc
push
pop
pushf
mov
daa
and
sbb
inc
or
icebp
bound
clc
mov
gs
out
jg
out
fstp
hlt
pop
and
cdq
inc
mov
mov
ins
enter
mov
into
fsubr
out
cmp
repz
aam
inc
gs
jecxz
push
sub
sbb
fild
sti
cmp
out
and
push
push
loop
mov
jae
lea
jns
(bad)
rcl
hlt
ins
cmc
scas
jmp
or
adc
sub
call
adc
mov
push
mov
mov
mov
popf
into
cmp
sbb
pop
xchg
add
adc
daa
inc
stos
and
test
scas
int3
les
jl
push
ins
or
daa
das
jns
outs
mov
fstp
adc
aam
or
mov
retf
inc
repnz
add
pop
xor
outs
dec
push
data16
pop
push
dec
shl
xor
xor
out
rol
mov
scas
addr16
not
jle
rcl
sub
mov
mov
mov
sbb
enter
ss
xor
rcr
test
xor
adc
and
push
bound
daa
push
inc
test
mov
cdq
push
sbb
sbb
enter
cmps
jl
mov
mov
retf
adc
test
gs
or
in
dec
gs
push
in
mov
cwde
retf
gs
loop
call
or
xor
inc
and
and
push
loope
jmp
enter
arpl
push
aaa
push
push
and
lods
pushf
fild
cmp
aam
xchg
icebp
cmovle
xchg
mov
push
inc
ret
nop
push
inc
mov
cmps
call
lahf
pop
ss
jnp
ins
les
push
addr16
popf
inc
ror
dec
xchg
aas
xchg
dec
rol
xor
sahf
(bad)
push
in
shl
adc
lock
adc
sub
sub
dec
cld
sbb
dec
je
fdiv
lds
push
pop
daa
into
js
mov
or
sub
pop
dec
test
call
mov
mov
xor
jo
into
add
mov
arpl
sub
adc
lock
xor
dec
jmp
(bad)
in
sub
adc
(bad)
mov
jl
mov
retf
jmp
mov
loopne
cld
fs
jns
jb
stos
xor
test
retf
imul
jp
leave
ja
stos
xchg
lahf
jns
jecxz
ins
cld
call
shl
in
ficomp
push
fbstp
adc
data16
pop
cdq
call
scas
push
lods
mov
pop
popa
xor
mov
add
mov
test
xor
and
cmp
stc
out
(bad)
aaa
rcr
and
jbe
add
dec
ss
in
sub
or
pop
mov
shr
and
lea
fs
dec
mov
jo
cmp
mov
add
pop
sbb
in
sub
(bad)
test
cmp
nop
adc
movs
dec
push
cmp
(bad)
addr16
pop
dec
dec
mul
cdq
out
add
mov
mov
test
sub
add
jbe
cli
cmp
pop
ja
out
mov
pusha
cdq
sbb
adc
cmp
xchg
fist
iret
out
mov
std
fs
mov
out
scas
fucomp
xchg
icebp
jle
cmp
xlat
sbb
dec
mov
xor
mov
sbb
and
iret
test
sub
mov
aas
fs
js
mov
loop
(bad)
repz
xor
and
mov
or
add
cmp
ja
int3
mov
ficom
xor
or
stos
imul
(bad)
jo
dec
cmp
cmp
scas
into
cld
mov
jle
pop
sub
(bad)
xor
jae
enter
mov
cdq
shl
mov
ret
lods
aad
dec
xor
or
outs
xchg
sbb
stos
and
jge
adc
aas
sbb
fnsave
leave
and
mov
ins
pop
imul
std
ja
loopne
or
in
movs
daa
mov
outs
adc
mov
xchg
adc
or
dec
retf
sub
push
loopne
enter
xor
inc
jb
cwde
(bad)
xchg
bound
leave
gs
sub
adc
mov
cli
js
fcom
and
movs
pushf
jns
add
cmps
and
inc
out
jmp
mov
aad
test
(bad)
pop
sub
pop
mov
and
lock
mov
dec
jle
and
mov
mov
fmulp
xchg
mov
and
xchg
jecxz
or
in
(bad)
sbb
imul
aaa
jmp
out
mov
fidiv
ds
enter
pop
mov
sahf
cmps
wbinvd
xrelease
cld
test
lahf
shl
jp
je
add
sahf
jl
(bad)
cmc
push
add
adc
pusha
nop
jmp
inc
adc
mov
mov
fcmovnu
out
sbb
dec
push
push
or
scas
ins
ja
sbb
addr16
and
je
inc
mov
repnz
lods
jo
pushaw
mov
pop
mov
jge
fstp
dec
push
cdq
repz
cmp
mov
dec
sar
xor
push
sbb
ja
scas
jae
push
stos
add
pop
mov
pushf
mov
pop
add
sar
pop
or
jae
pop
outs
mov
mov
push
arpl
cmc
adc
clc
clc
in
mov
sahf
cwde
mov
jmp
sbb
xchg
(bad)
out
popf
scas
in
iret
(bad)
mov
scas
push
adc
mov
adc
cli
dec
and
mov
add
mov
mov
adc
cmp
popf
(bad)
sbb
aaa
cmp
(bad)
out
sbb
cmp
mov
inc
aas
jl
lds
push
mov
push
adc
retf
leave
ds
xor
jo
mov
lods
mov
retf
cmp
sbb
or
in
mov
adc
xor
popf
mov
out
shl
dec
add
cdq
lds
adc
(bad)
jno
(bad)
out
sbb
daa
fld
test
mov
push
dec
jge
pop
or
stos
out
fiadd
xchg
stc
adc
outs
in
xor
jae
xor
cmovg
mov
retf
inc
xor
inc
test
push
test
cmps
xlat
inc
mov
mov
nop
mov
dec
cmove
in
enter
or
add
or
mov
xchg
push
nop
mov
add
stc
out
int
stos
dec
pusha
jge
fs
sub
out
mov
(bad)
imul
mov
push
pushw
mov
dec
les
push
das
jmp
sahf
or
data16
jae
ffreep
jo
je
in
xchg
mov
scas
fmulp
dec
sbb
dec
push
in
into
mov
das
shl
dec
pop
xor
sbb
ret
popa
jl
(bad)
jp
pop
scas
(bad)
push
and
cwde
inc
pop
loope
hlt
mov
and
not
mov
xchg
outs
test
cmps
fdivrp
arpl
pop
psubsb
(bad)
mov
xchg
in
sbb
pop
or
inc
jg
(bad)
push
retf
out
hlt
pop
dec
pop
in
movs
xchg
push
lds
jo
cld
mov
cmps
movs
cmp
pushf
add
pop
pop
pop
inc
xlat
jbe
cli
jmp
fmul
ds
clc
xor
push
lahf
xchg
clc
fsub
push
mov
addr16
icebp
sahf
dec
pop
jne
add
sub
mov
cmp
daa
ins
or
and
or
out
mov
bound
out
in
aaa
test
aas
pop
fisttp
add
dec
push
int3
mov
sbb
cmps
test
xor
or
xchg
inc
mov
fdivr
gs
ret
sbb
dec
out
push
enter
lds
repz
pop
sub
add
arpl
loope
xlat
mov
ror
push
jns
repz
or
pop
pop
scas
stc
jmp
into
inc
aam
loope
cmp
dec
ja
mov
jo
jg
cdq
leave
test
cwde
test
jo
adc
inc
test
std
inc
mov
nop
inc
mov
sub
mov
inc
(bad)
call
clc
mov
sub
inc
sti
sub
or
sub
sbb
pop
dec
sbb
imul
ins
and
imul
push
mov
push
retf
mov
outs
and
ror
rol
jle
mov
pop
mov
pop
jp
inc
xor
lds
mov
out
sub
imul
dec
(bad)
jmp
xor
or
xor
sbb
fnsave
or
cdq
ror
jmp
int
jo
or
hlt
jo
test
adc
(bad)
jns
and
sub
adc
lock
jae
push
mov
in
ror
sub
inc
push
retf
call
cmp
or
jbe
pop
xor
jle
inc
add
nop
bound
loope
lods
mov
stc
jmp
xchg
inc
repnz
and
mov
and
xchg
jo
push
stc
adc
test
mov
cdq
xchg
push
xor
std
mov
rcr
inc
repz
jecxz
lods
pop
sbb
popa
ss
sub
sti
mov
inc
jl
sbb
shl
fldcw
or
outs
popf
xchg
push
shl
ins
in
movsx
jg
jle
inc
mov
hlt
push
cmps
lods
or
ins
sbb
popf
loope
repz
push
mov
je
adc
pop
rol
in
xchg
cli
shl
pop
dec
pop
push
repz
push
shl
cmp
jb
mov
scas
inc
add
loop
push
or
fisub
pop
or
fisub
add
rcr
dec
sbb
adc
stos
inc
mov
inc
loop
test
jmp
rol
cdq
cmp
in
aad
add
stos
xchg
mov
gs
fcmovu
mov
dec
cmp
xchg
lds
inc
fisub
stos
int3
add
std
mov
add
bts
mov
add
dec
mov
mov
ror
ror
fdivr
push
mov
outs
out
outs
mov
xchg
mov
cmp
and
(bad)
in
pop
pop
sbb
int
jg
(bad)
or
inc
ins
sbb
xchg
dec
popf
inc
loopne
xor
mov
movs
mov
push
jbe
cmp
out
push
cmp
sub
retf
aam
inc
add
pop
cmp
mov
lock
mov
test
pop
jns
aaa
dec
in
dec
ds
fwait
out
mov
cmc
daa
fiadd
dec
adc
mov
add
pop
mov
jg
pop
popa
pushf
test
jmp
mov
xchg
and
add
rcr
sub
data16
push
lock
in
shl
rcl
jl
adc
icebp
mov
mov
out
iret
or
sub
dec
iret
mov
repz
add
or
ins
sub
xchg
lods
out
stos
call
jns
fwait
cli
sub
je
pusha
dec
ins
pop
call
pushf
in
lods
fucomp
adc
adc
cmp
out
mov
and
cmp
(bad)
adc
pop
shr
(bad)
aaa
ret
pop
inc
iret
les
mov
ret
sub
popa
mov
into
inc
test
push
or
lock
imul
(bad)
in
xchg
dec
aaa
fist
movs
xlat
popa
push
retf
fwait
bound
mov
test
mov
idiv
ins
jne
ror
call
mov
sub
stos
bound
add
cld
ds
mov
or
adc
scas
cs
xchg
mov
hlt
les
fstp
inc
inc
push
push
jb
pop
dec
cmps
cs
fisub
pop
sbb
in
sub
or
adc
mov
in
int3
inc
adc
inc
cdq
frstor
rol
xchg
sub
and
add
cs
stos
sub
add
call
xchg
inc
cli
sahf
(bad)
imul
pop
mov
mov
xchg
push
(bad)
inc
xchg
mov
inc
push
xchg
sub
pop
enter
push
jge
ds
push
inc
es
mov
movs
loop
xor
lods
xor
push
call
mov
or
push
dec
xor
clc
cmc
ds
stos
out
jnp
mov
sti
cmp
outs
les
pop
test
aam
and
mov
(bad)
sti
mov
push
adc
mov
mov
fimul
dec
aam
pop
jns
mov
fsubr
repz
mov
jg
mov
cmp
cmps
pop
lahf
in
mov
add
sub
xor
xor
imul
test
adc
int3
and
mov
jl
imul
add
dec
adc
retf
mov
jg
mov
ins
cmps
sub
cmp
dec
add
stos
sbb
lahf
cwde
fcom
pop
stc
cli
jbe
mov
outs
cmp
pusha
stos
and
mov
loope
popf
sbb
jb
dec
aas
xchg
cmps
(bad)
and
pop
inc
adc
inc
imul
(bad)
mov
dec
adc
arpl
lahf
or
jb
aam
inc
pop
mov
rol
jbe
nop
bound
div
jmp
frstor
fnsave
jno
psubusb
fidivr
repnz
mov
inc
es
pop
jnp
xor
push
clc
popa
fs
pop
sub
jg
push
pop
adc
cmp
inc
rcr
retf
pop
xchg
dec
jb
(bad)
jb
aas
add
dec
adc
adc
popf
mov
loopne
inc
mov
cmp
mov
jp
sub
pusha
add
jno
(bad)
mov
shr
push
shr
inc
out
fistp
inc
push
in
mov
call
and
out
imul
out
(bad)
xor
jp
dec
and
mov
fstp
pop
push
cmp
(bad)
sbb
clc
mov
jb
cmps
movs
push
fwait
ret
les
out
(bad)
cmp
and
jbe
pop
sbb
inc
jbe
pusha
pop
xlat
or
cmps
pop
dec
outs
stc
cmc
lods
aas
mov
add
dec
mov
cs
add
gs
inc
mov
pop
test
jl
rol
jo
call
pusha
push
rol
dec
je
mov
lods
adc
dec
or
jmp
jns
mov
sub
repz
push
out
test
ins
out
out
retf
adc
sbb
pop
mov
lods
or
iret
xchg
mov
out
test
(bad)
xor
cmp
popa
push
mov
dec
movs
mov
pop
push
mov
pop
movs
loop
sbb
fs
mov
sahf
fst
xchg
test
or
leave
mov
pop
dec
push
mov
add
retf
pop
inc
xchg
pop
jmp
ins
stos
mov
inc
(bad)
sub
and
out
mov
adc
mov
pop
cmp
addr16
(bad)
inc
mov
mov
sar
sub
jle
jg
div
cmp
movs
push
inc
xchg
dec
lds
add
or
scas
push
inc
jp
inc
mov
ret
or
add
jg
scas
dec
sar
icebp
pop
daa
sub
out
cdq
bound
push
push
fmul
mov
lds
jns
ss
adc
shr
movs
cwde
xchg
jle
add
sbb
sbb
call
push
push
pop
mov
mov
idiv
cld
aas
xchg
gs
rcpps
or
popa
arpl
not
inc
cmp
aaa
shl
or
mov
ins
test
sub
out
mov
ret
inc
out
add
in
outs
adc
scas
ds
dec
sub
(bad)
fwait
(bad)
pop
stc
je
scas
add
mov
in
inc
fcmovnbe
test
pusha
dec
jbe
imul
sahf
mov
fdivr
popa
cmp
mov
xor
pusha
stos
inc
sub
(bad)
sbb
mov
jmp
jl
(bad)
shl
push
mov
loop
loope
scas
xchg
mov
es
test
ins
cmp
push
cmc
fwait
push
jp
sbb
in
mov
cli
test
jmp
pop
fs
in
(bad)
fwait
sbb
div
and
xchg
adc
les
(bad)
mov
cmc
xchg
jnp
jnp
push
fld
mov
sub
push
stos
repnz
repnz
push
push
sbb
cmp
adc
adc
int3
ror
jmp
les
sub
or
xor
aas
outs
pop
leave
cwde
outs
outs
test
adc
pop
jbe
and
mov
add
jle
and
push
arpl
lods
mov
push
jns
clc
or
hlt
sbb
ret
mov
cmps
lds
dec
dec
mov
xor
leave
sti
fdivr
sti
sbb
int
imul
mov
dec
pop
ss
pop
rol
sbb
stc
xchg
fs
jo
mov
push
out
mov
mov
je
int3
xchg
mov
jl
mov
sub
cli
fidivr
mov
shl
mov
cmp
mov
pop
mov
outs
sub
int
and
test
cdq
mov
inc
or
fst
xor
cmps
jmp
and
mov
fdivr
jno
pop
jl
jmp
in
je
es
fs
or
dec
xchg
lahf
mov
pop
inc
int
add
mov
mov
jmp
fld
pusha
push
or
nop
cld
aad
outs
xor
cmp
sti
jg
popf
mov
shl
mov
add
xor
cmps
les
and
sbb
(bad)
imul
retf
pusha
mov
inc
lods
lods
loop
leave
jno
test
xchg
mov
pop
sub
add
jl
or
mov
loop
(bad)
jno
aam
daa
ins
pop
aaa
test
push
ins
shr
cs
and
dec
mov
lods
xchg
lods
adc
inc
inc
mov
mov
xchg
rcl
xchg
or
mov
jl
out
cld
jmp
add
(bad)
adc
mov
or
test
loope
mov
inc
fisttp
jg
sbb
push
aas
add
popa
dec
cmp
loope
stos
push
lods
push
imul
mov
repnz
shr
xchg
data16
push
neg
push
shr
push
push
fstp
jl
sahf
imul
jg
inc
pop
mov
xor
(bad)
test
sbb
add
sahf
stos
jmp
mul
fcmovne
adc
jecxz
test
popa
aaa
xchg
hlt
and
shr
lea
lods
movs
mov
sub
jne
jecxz
stc
popa
mov
adc
call
stos
jmp
fs
repz
cmps
lods
jge
aad
push
test
jae
xchg
push
(bad)
cli
cmp
jae
push
jl
cmps
xchg
sub
mov
movs
sbb
jmp
std
sbb
mov
xlat
add
aam
std
mov
xchg
xchg
and
xchg
and
inc
xor
outs
mov
cs
add
ror
push
in
in
add
xchg
dec
dec
xchg
mov
fcmovnu
push
or
push
inc
mov
inc
mov
movs
mov
popf
adc
shr
outs
jo
scas
adc
loopne
jle
push
add
inc
call
popa
sub
xor
cld
and
stc
fwait
retf
bswap
in
or
xor
ret
jge
and
cmc
mov
mov
mov
fisttp
or
into
push
and
stos
dec
test
or
inc
push
push
add
fstp
mov
outs
adc
xor
mov
ja
test
(bad)
ficom
mov
repz
in
neg
sbb
lods
ja
mov
and
jmp
lods
sub
sub
and
adc
dec
push
std
inc
xor
sub
loopne
fnstenv
push
mov
jmp
push
mov
mov
icebp
or
and
rcr
hlt
fisttp
pop
das
test
mov
in
mov
stos
sbb
xchg
ret
dec
das
mov
inc
mov
mov
enter
out
jne
mov
into
xor
ins
cmc
mov
mov
jg
xor
ret
add
lds
push
jae
in
push
mov
in
repnz
pop
cmp
mov
(bad)
inc
adc
jmp
mov
xchg
mov
xor
iret
fwait
sahf
xor
jg
in
xor
punpckhdq
xor
test
aaa
fisub
jl
dec
adc
push
and
adc
mov
cmps
mov
pop
daa
loop
lods
ins
addr16
mov
fisttp
cdq
mov
xor
mov
cmp
sub
fs
mov
bound
push
mov
and
pop
pop
arpl
mul
xor
adc
add
sbb
jae
fsub
fwait
dec
movs
inc
inc
dec
outs
in
inc
jg
das
jecxz
pop
leave
dec
or
sti
cmps
(bad)
mov
adc
push
push
mov
call
and
popa
mov
movs
pop
and
cmp
jno
js
jge
adc
adc
in
add
cdq
lahf
loop
cmp
and
push
inc
mov
adc
pop
mov
adc
cdq
mov
fwait
pusha
xor
aaa
push
out
(bad)
int
sub
jae
dec
call
xchg
movs
mov
lds
and
dec
addr16
xlat
test
stc
pusha
out
mov
lds
ds
and
int
add
xor
clc
outs
seta
cmp
inc
rcl
std
lahf
repnz
cmp
cmp
jmp
dec
jg
popf
cmp
ficom
into
pop
xor
das
xchg
jmp
ret
push
stc
bound
div
inc
aaa
push
daa
std
mov
(bad)
jecxz
push
sbb
dec
mov
ror
stos
mov
in
in
dec
mov
push
cmp
leave
xor
lahf
int3
imul
pop
outs
mov
cmp
adc
sub
push
leave
push
pop
cmp
adc
retf
mov
jp
xchg
sahf
arpl
jmp
test
retf
lds
push
xchg
mov
add
(bad)
sysexit
push
mov
sub
mov
xchg
cmp
pop
ins
mov
ret
ss
sub
ins
sar
mov
hlt
xor
in
mov
pop
jl
mov
sub
gs
jo
loopne
push
enter
mov
movs
js
aad
setne
cwde
into
sti
sbb
cdq
ret
outs
rol
pop
xor
jmp
lods
ficomp
jns
dec
cwde
std
push
cld
xchg
sbb
xor
sub
out
inc
cmps
push
test
sub
outs
push
ret
sub
scas
(bad)
push
xor
data16
inc
xor
lods
adc
outs
xchg
addr16
pushf
(bad)
push
push
and
push
aas
ins
test
inc
(bad)
jns
xchg
adc
(bad)
fld
inc
(bad)
setge
push
int3
mov
test
push
in
stc
popa
jbe
stos
pop
xchg
jno
xchg
xor
inc
add
mov
push
sbb
dec
and
mov
loop
push
cdq
mov
push
sbb
(bad)
repz
dec
repnz
push
js
or
dec
mov
jbe
cmp
div
lea
dec
sub
fidivr
jecxz
sti
bound
pop
sub
pop
loop
fcomi
inc
test
and
cmp
shr
xchg
xor
sahf
das
bound
outs
rol
xchg
mov
mov
fld
adc
add
jecxz
hlt
clc
xlat
clc
push
sbb
mov
cs
or
adc
in
ds
lock
rcl
push
mov
inc
in
inc
xchg
psubw
and
das
mov
push
cmps
and
jns
jge
adc
fimul
stos
mov
xor
mov
std
xchg
je
xchg
pop
mov
mov
es
add
sub
iret
lods
add
mov
test
and
outs
mov
cmp
cli
retf
pop
jae
jb
push
mov
test
pop
int3
ins
fiadd
call
aam
pushf
dec
sar
pop
adc
pop
push
cmp
ror
sbb
mov
and
pop
mov
push
std
daa
mov
outs
pushf
xor
push
daa
sbb
stc
push
mov
and
xchg
fisttp
frstor
mov
rol
xor
stc
push
(bad)
push
outs
pop
xor
push
add
adc
dec
mov
jl
adc
fstp
cmp
dec
outs
js
addr16
lods
and
jmp
lods
mov
mov
inc
mov
mov
icebp
jge
and
call
adc
xor
mov
fwait
dec
sbb
xor
rcl
sub
test
xchg
pop
dec
and
push
adc
xor
cdq
in
cld
or
mov
daa
xchg
shl
fs
or
xchg
aam
jae
stos
jo
mul
adc
push
out
add
(bad)
neg
arpl
sbb
xchg
pop
inc
dec
adc
sbb
mov
sbb
push
fst
inc
imul
sub
xchg
add
sub
sub
cmp
mov
mul
int
icebp
and
jbe
jmp
mov
outs
xchg
cmp
dec
xchg
stc
inc
clc
sub
mov
jmp
imul
xor
js
mov
push
jecxz
xchg
icebp
mov
xor
adc
jbe
das
das
sar
jecxz
aaa
adc
push
xor
ror
mov
cmc
fild
inc
lahf
jge
in
inc
dec
xchg
sub
mov
mov
jmp
ins
and
stos
sbb
dec
ja
aas
mov
mov
stos
ss
call
cmp
cmp
inc
(bad)
mov
in
jae
mov
mov
mov
stc
in
sbb
pop
(bad)
movs
cdq
and
sti
cdq
sbb
out
push
jae
pop
fild
jmp
hlt
aaa
adc
jle
xchg
pop
cmp
adc
push
shr
mov
mov
inc
mov
sbb
popf
ficom
dec
es
test
jmp
leave
xlat
out
push
or
dec
dec
in
clc
(bad)
js
sahf
addr16
ins
dec
std
mov
dec
movs
repz
mov
dec
jge
arpl
pop
adc
pop
bound
test
addr16
ins
loope
mov
sti
fcomp
pop
jmp
and
sahf
sti
or
fistp
fnsave
sbb
xlat
xchg
dec
inc
and
cmps
dec
pop
or
lods
xchg
not
xor
daa
aas
push
jg
xor
pop
mov
test
xchg
jno
add
movs
mov
inc
xchg
mov
pop
enter
xchg
aas
jg
jmp
das
nop
mov
xchg
les
mov
cmp
jo
cdq
movs
push
mov
test
dec
mov
ss
sbb
out
push
xchg
ret
stc
fisub
push
sbb
xor
xchg
arpl
mov
inc
push
test
xchg
les
dec
pop
cmp
mov
push
jmp
arpl
jns
jae
xor
jle
pop
cmp
cmp
loop
loope
push
mov
pop
in
mov
pop
stos
out
in
mov
lods
nop
sbb
mov
out
mov
loop
sub
inc
add
xor
cmp
push
mov
jnp
mov
mov
xchg
dec
jnp
or
jecxz
or
ror
sbb
inc
mov
jne
adc
sub
push
sbb
cmp
js
xlat
test
jmp
mov
mov
sbb
add
(bad)
scas
dec
jne
popf
cmp
pop
fidiv
mov
sub
(bad)
add
mov
jbe
push
mov
and
rol
mov
cmp
xlat
hlt
pop
xchg
add
pop
mov
adc
cmp
pop
bound
imul
lahf
je
mov
sub
jb
push
jmp
les
popa
jno
cmp
mov
repz
xor
push
dec
js
bound
(bad)
aad
pop
sub
or
aam
dec
mov
mov
jp
out
mov
sbb
mov
(bad)
data16
add
pop
cmc
pop
cld
jmp
sub
xor
adc
in
std
cdq
pop
test
das
das
retf
push
pop
mov
mov
push
or
repnz
outs
stos
push
pushf
popf
push
adc
xor
and
js
jl
call
xchg
lock
fwait
ins
push
bound
call
sar
push
dec
popf
mov
add
mov
mov
out
loope
adc
mov
mov
cmp
or
cwde
push
fnstcw
or
jae
mov
dec
inc
lock
popf
sub
imul
or
fsubr
cmp
pop
jl
xchg
inc
(bad)
ins
mov
mov
rol
jb
cs
xchg
mov
(bad)
imul
dec
mov
mov
daa
adc
fdivr
sbb
cld
popa
retf
js
ins
mov
cmp
mov
jmp
jge
cmp
mov
call
mov
mov
int3
stos
and
out
mov
pop
sub
inc
jno
and
xor
cmp
jg
push
jno
aas
cli
push
idiv
stos
mov
out
sahf
aaa
cmp
or
mov
cmp
or
popa
dec
mov
outs
stos
sub
ins
dec
jmp
dec
cdq
adc
in
iret
fistp
test
xchg
cmc
inc
in
adc
fld
cld
mov
fsubr
test
push
jmp
cmp
mov
(bad)
pop
pop
mov
mov
jmp
push
lock
test
push
aam
lahf
aam
je
dec
push
pshufw
aaa
(bad)
xor
push
jns
mov
dec
inc
mov
add
xchg
hlt
add
and
sub
ffree
test
dec
push
aad
jb
lods
lods
pop
ds
cmc
(bad)
or
jl
pushf
add
xor
mov
pusha
popf
pop
test
and
inc
mov
sbb
add
xchg
clc
sub
xchg
xlat
aas
dec
mov
scas
jp
stos
inc
or
jbe
cli
mov
mov
mov
mov
or
xor
xor
lds
sub
aad
loope
in
inc
sbb
add
and
mov
dec
icebp
enter
gs
pusha
bnd
jns
jbe
fwait
loopne
stos
loopne
imul
push
add
push
jo
pop
and
(bad)
and
sbb
push
int3
fisttp
sbb
mov
pop
sbb
cmps
aaa
mov
sub
pop
test
xchg
add
cmp
pop
(bad)
call
cld
cmp
push
and
scas
stos
stc
jnp
sbb
out
inc
in
fldenv
loop
xor
shl
push
loopne
jge
out
ins
stos
popf
add
dec
arpl
ret
jno
cmp
and
or
imul
pop
pop
fsubr
retf
mov
in
fst
and
lock
push
xchg
in
adc
nop
mov
pop
add
dec
and
dec
test
adc
dec
inc
imul
ins
add
jbe
inc
je
fld
inc
fcomp
test
fcom
dec
pop
adc
jmp
adc
(bad)
(bad)
ror
or
xlat
pop
pop
mul
shl
int
and
rcr
jae
sub
ins
imul
add
and
fnstsw
mov
pop
lahf
test
pop
xchg
mov
rol
ins
pop
(bad)
push
push
pop
imul
add
and
stc
add
pop
aas
jae
xor
aam
lods
mov
sbb
mov
and
sub
lds
or
inc
in
add
enter
movs
es
cmc
and
pop
pop
xchg
imul
(bad)
mov
stc
dec
test
lods
sbb
push
test
push
jbe
push
mov
push
xor
cmp
mov
out
xchg
xor
dec
add
inc
sar
fs
cmp
rcr
ret
pop
mov
jl
mov
ret
adc
mov
push
in
lock
and
mov
inc
push
imul
outs
ins
cmp
jecxz
je
shl
(bad)
and
adc
add
in
jp
sub
(bad)
gs
pop
fwait
xchg
push
fwait
cdq
push
push
iret
jbe
xchg
mov
shl
dec
add
pop
dec
xor
aad
mov
mov
out
stc
jge
pop
(bad)
test
mov
out
adc
pop
pop
dec
retf
mov
repnz
mov
inc
mov
test
add
nop
(bad)
pop
loop
in
(bad)
jb
cmc
(bad)
cmp
arpl
test
loope
hlt
push
ins
fidivr
or
mov
ja
pop
movaps
and
aad
retf
push
call
in
cmc
pop
add
cmp
push
(bad)
arpl
inc
shl
push
clc
ins
pop
cmc
fimul
jno
inc
cmp
add
out
jnp
jb
sar
imul
(bad)
mov
dec
adc
aam
cmps
mov
mov
cdq
sbb
ret
cmp
icebp
adc
rcr
loopne
shl
lahf
jnp
into
mov
pop
inc
dec
or
iret
call
sbb
dec
dec
movs
xlat
fist
(bad)
adc
add
js
out
mov
mov
rcr
je
cmps
call
mov
jle
out
mov
cdq
add
lahf
push
into
and
xlat
das
loop
neg
shl
cwde
xor
fsub
jl
dec
and
out
dec
fidivr
mov
int3
aas
scas
push
(bad)
add
adc
sub
and
cmp
pushf
hlt
push
cli
test
retf
sbb
xchg
xchg
nop
inc
loopne
or
daa
or
aaa
scas
(bad)
in
inc
retf
inc
ret
es
dec
jno
mov
adc
inc
xor
or
or
sub
xchg
outs
fild
hlt
ss
pop
js
repz
frstor
add
xchg
cmp
ja
cmp
cmp
push
fdiv
(bad)
clc
push
mov
mov
loope
ret
push
cli
gs
pusha
paddsw
out
sbb
out
mov
xchg
call
cmp
test
shl
xor
sbb
pop
pop
mov
push
stc
xchg
cmp
push
rcr
loop
jge
jne
dec
and
sbb
ror
push
add
adc
les
loopne
push
(bad)
retf
fsubr
repz
out
fwait
call
jecxz
mov
cmps
arpl
jbe
stos
sub
int
mov
cdq
not
and
add
sbb
ds
aad
ret
int3
push
sbb
add
mov
into
push
(bad)
xchg
imul
mov
cmp
add
(bad)
lea
sub
nop
add
bound
ins
cmp
mov
mov
xlat
daa
das
mov
loope
and
mov
aaa
cmp
mov
(bad)
mov
add
fidiv
push
and
lea
push
push
outs
cs
gs
movs
test
aas
fadd
test
xchg
add
push
shl
adc
lods
dec
mov
test
cwde
push
add
ss
in
cmc
push
mov
aas
rcl
leave
push
cs
aaa
mov
push
jo
push
(bad)
mov
inc
or
ret
adc
xchg
sbb
data16
loop
iret
(bad)
call
pop
xor
mov
sub
out
cmp
mov
arpl
sbb
cli
movs
pop
mov
cmp
mov
cmp
daa
xor
push
repnz
xor
pop
std
sub
or
xor
xor
add
outs
clc
ret
stc
mov
out
inc
mov
test
dec
add
shl
es
mov
jge
test
inc
and
push
daa
jmp
push
std
sbb
jne
neg
pushf
loope
jnp
sbb
cmp
jae
in
enter
adc
sbb
lds
add
or
inc
(bad)
fcomp
xchg
repz
xchg
lahf
mov
xchg
dec
xor
inc
shr
int3
fst
pop
cmps
addr16
mov
mov
inc
js
sbb
adc
aaa
shl
test
test
pop
mov
mov
or
fcomp
pop
mov
jns
inc
inc
push
mov
fidiv
mov
mov
mov
imul
adc
je
push
adc
test
inc
nop
outs
or
sahf
in
mov
sbb
hlt
loope
in
xlat
cmps
(bad)
ficomp
jo
cli
fsubr
or
int
les
inc
dec
retf
push
lods
(bad)
out
cli
and
rcl
in
sbb
or
inc
(bad)
shl
cmp
fs
lods
sub
inc
in
jle
push
lock
adc
lods
mov
les
jmp
jge
adc
xchg
div
data16
retf
mov
xchg
daa
pushf
mov
(bad)
jmp
ss
outs
addr16
add
fcom
dec
inc
or
jecxz
mov
es
jae
push
shl
not
and
aaa
lods
push
mov
inc
mov
xchg
dec
and
pop
xor
test
les
aas
pop
or
jns
dec
dec
retf
xor
and
pop
mov
mov
adc
or
gs
cmp
psllq
(bad)
in
inc
pop
std
pop
mov
pop
sbb
adc
adc
mov
es
loopne
xchg
mov
dec
rcl
dec
mov
(bad)
aas
cmps
(bad)
mov
mov
and
retf
mov
xchg
push
retf
xor
add
push
cwde
pop
inc
dec
pushf
add
lahf
imul
bound
sbb
cld
in
sbb
cmc
inc
hlt
mov
fdivr
push
inc
dec
lods
adc
mov
mov
adc
lods
in
sbb
add
sub
mov
cmp
mov
adc
jl
xchg
dec
xchg
inc
dec
jo
cmp
sub
inc
vmread
es
loope
mov
fwait
sub
mov
into
dec
cmp
mov
ret
lods
xchg
sti
mul
loop
inc
pushf
xchg
enter
mov
and
xlat
cli
daa
mov
pop
(bad)
cmp
pop
cmp
mov
into
or
fcom
test
push
clc
call
mov
mov
(bad)
or
loopne
adc
shl
pop
out
or
add
clc
mov
or
add
shl
push
addr16
fxch
sub
cld
sbb
hlt
push
mov
push
ss
fidivr
aas
aas
adc
pop
sbb
push
jmp
movs
pushf
loope
shr
enter
gs
sbb
xor
mov
xchg
test
or
mov
jb
push
fadd
mov
jge
pop
xchg
dec
fld
xor
clc
ror
cmp
sub
cmps
addr16
(bad)
movs
push
call
aas
pop
test
cli
call
iret
dec
pop
pop
push
add
add
jne
mov
sahf
idiv
dec
sbb
and
or
loope
pop
mul
in
in
loopne
fs
bound
test
inc
retf
(bad)
sbb
pop
xchg
sti
push
sub
cmp
sti
sub
pop
lahf
mov
dec
jp
jb
dec
push
icebp
in
les
aas
push
es
scas
xchg
sub
outs
mov
loope
out
or
lods
sub
jle
push
clc
(bad)
mov
outs
jp
fiadd
(bad)
pop
div
jg
xor
loopne
into
mov
sbb
pushf
xchg
jb
and
or
inc
add
adc
adc
jg
cwde
sahf
sar
pop
cmps
jg
les
mov
fcomp
push
leave
adc
retf
jb
into
push
push
hlt
(bad)
jp
movs
dec
in
enter
out
mov
xchg
loop
retf
sub
push
sbb
dec
xlat
cwde
or
mov
lds
test
adc
xor
rcpps
das
sbb
or
push
pop
sub
mov
outs
or
mov
shr
popa
sahf
and
inc
sub
or
inc
(bad)
(bad)
iret
jl
jmp
cmps
dec
in
cmp
xor
add
sbb
dec
ins
fcom
jge
in
add
inc
jnp
push
outs
adc
lods
pop
not
and
cmp
mov
jns
ret
and
fnstcw
sub
sbb
lahf
ror
push
movs
in
inc
ret
std
outs
fisttp
jbe
pop
in
push
adc
and
or
mov
cmps
mov
dec
xor
dec
pusha
mov
fwait
xchg
push
(bad)
or
not
sub
push
out
bswap
outs
fnsave
aam
int
fdivr
(bad)
cmp
add
je
or
clc
movs
xor
jb
add
fcmovb
sbb
jae
repnz
(bad)
fnstsw
pusha
pop
adc
cmp
hlt
js
push
bound
xor
xchg
jmp
mov
xor
fwait
mov
popf
daa
fcomp
sahf
cwde
xchg
test
jns
mov
ret
pop
mov
hlt
fs
in
jle
mov
imul
mov
sub
aas
shr
cmps
mov
arpl
xchg
dec
pop
xor
sti
test
jp
dec
ror
sbb
das
and
jns
sbb
add
ror
mov
dec
xchg
sbb
pop
xchg
popa
and
or
aas
enter
call
and
jmp
test
das
leave
or
mov
sub
mov
push
ss
push
test
ret
sub
call
cwde
add
mov
push
sbb
in
retf
mov
fs
enter
in
sti
loopne
and
out
mov
dec
clc
(bad)
hlt
bnd
clc
or
push
icebp
sbb
aam
sub
sbb
adc
sti
xchg
mov
jae
xchg
rol
inc
mov
push
fwait
push
test
jge
out
add
dec
add
mov
inc
and
jns
sub
mov
add
(bad)
leave
enter
jne
repnz
rcr
dec
cdq
mov
jbe
ds
shr
and
cli
lahf
iret
adc
aad
pop
inc
mov
pop
mov
sub
in
or
inc
mov
aas
adc
adc
lahf
add
pop
cmp
push
pop
setp
bnd
arpl
xor
adc
xchg
dec
cmps
mov
pop
(bad)
icebp
cmc
inc
(bad)
dec
repnz
repnz
push
cli
retf
fisubr
jo
inc
jae
test
inc
hlt
(bad)
repz
aam
fst
pop
push
xchg
or
push
movs
int3
movs
movs
xlat
(bad)
neg
outs
inc
dec
leave
and
nop
in
movs
dec
and
cmc
jmp
es
aad
aad
aam
mov
stc
les
jmp
add
xchg
gs
lea
xor
push
xchg
sbb
sub
fmul
sub
sub
dec
call
dec
sub
rcr
cdq
(bad)
xchg
add
enter
mov
sar
or
cwde
(bad)
pop
inc
xor
jmp
mov
sub
mov
mov
stc
inc
sbb
movzx
stc
mov
out
rol
cmps
push
add
push
mov
clc
ss
or
in
pop
dec
cmps
in
mov
pushf
jae
shl
test
mov
dec
aad
push
jl
lods
jecxz
jg
mov
mov
cmp
or
add
pusha
xor
ss
pop
arpl
adc
outs
sub
mov
mov
sub
popf
or
sub
fcomp
fadd
data16
mov
xor
loopne
repz
add
test
mov
dec
lock
xor
sbb
adc
dec
cmp
xor
call
sbb
mov
add
pusha
shr
jmp
mov
retf
inc
sub
(bad)
or
mov
daa
and
jne
push
jno
std
jmp
daa
pop
and
fistp
das
mov
(bad)
(bad)
shl
loopne
mov
jo
dec
nop
cmp
sbb
sti
or
call
push
nop
test
out
or
mov
fldz
cmc
in
adc
rcr
adc
ins
mov
lds
loop
cli
push
push
ficom
jae
outs
ret
stc
or
mov
rcr
push
mov
cmp
lahf
rcl
sub
es
pop
in
mov
shl
mov
mov
jnp
dec
add
xor
or
(bad)
ror
out
jp
pop
jno
sbb
push
dec
mov
dec
mov
rol
shl
xor
push
aas
fidivr
mov
pop
sar
xor
push
push
inc
mov
and
sbb
sbb
sbb
jb
icebp
das
lock
sbb
scas
repz
mov
mov
out
sbb
in
daa
lock
dec
sbb
mov
cmp
and
fistp
cld
jnp
xchg
pop
mov
cmps
ror
sub
mov
cwde
adc
and
sbb
dec
add
inc
push
mov
jnp
mov
out
mov
mov
or
(bad)
push
ror
pop
in
cli
mov
fwait
cdq
jo
imul
xchg
aas
push
or
mov
cld
push
sbb
mov
mov
aad
clc
sbb
xchg
jmp
ret
cmp
fcomp
jo
mov
pop
les
call
pop
fwait
test
fs
jbe
xchg
fild
imul
xor
loopne
xlat
icebp
jg
scas
mov
inc
imul
loop
ss
mov
loop
xor
cmp
movs
and
pop
fs
popa
mov
retf
addps
add
dec
(bad)
xchg
pop
(bad)
gs
xor
es
pop
into
sti
data16
mov
xchg
mov
push
or
push
cdq
mov
mov
out
ins
ss
xchg
mov
push
adc
(bad)
imul
ficomp
dec
jbe
imul
inc
mov
xor
in
stc
xchg
mov
and
push
and
push
lds
push
test
mov
mov
sahf
mov
jmp
call
ret
in
jmp
icebp
mov
xchg
or
push
sbb
les
arpl
and
jge
test
xchg
push
ret
xchg
movs
div
mov
push
cmps
sub
cmp
lea
xchg
or
sbb
mov
stos
mov
in
das
adc
mov
mov
out
jne
bound
aam
aad
loop
pop
data16
add
clc
xchg
and
xchg
push
mov
add
inc
sub
lock
cmps
cmc
jbe
pop
xor
retf
stos
call
add
cmc
jb
sar
fmul
inc
mov
lds
das
lock
sbb
or
cdq
loopne
jno
xor
cmp
add
push
sub
imul
mov
inc
fmul
cwde
ret
jne
retf
push
add
ja
int
aad
xchg
mov
sbb
dec
mov
leave
fs
movs
jle
jecxz
aas
repz
adc
jne
cmp
daa
dec
jb
ss
pop
and
sbb
cld
sbb
sbb
(bad)
imul
ss
mov
jge
xlat
ss
mov
sub
xor
cmp
xchg
inc
inc
jns
or
jbe
test
push
xor
mov
pushf
or
pushf
es
ror
adc
mov
fs
imul
mov
imul
nop
jno
test
movs
and
lods
add
mov
push
jle
repnz
out
mov
pop
scas
mov
dec
mov
or
mov
fmul
in
jg
aam
loope
sti
lods
(bad)
push
mov
mov
daa
or
out
stos
jmp
mov
xchg
mov
adc
mov
sar
push
sub
mov
push
stc
retf
jns
out
in
daa
mov
pop
push
scas
(bad)
or
int
pop
ficom
imul
das
loop
aad
cmp
(bad)
test
(bad)
lea
nop
pop
addr16
(bad)
sahf
ficomp
sbb
jp
dec
xchg
pop
cmp
jmp
hlt
fcmove
and
mov
pop
sbb
mov
int3
ja
movs
mov
add
aad
pop
mov
int3
push
push
jns
jne
xchg
clc
(bad)
test
dec
and
mov
or
out
ret
loop
inc
jae
aaa
sbb
mov
cmp
mul
jnp
push
gs
and
mov
inc
jnp
ret
add
add
popf
stos
dec
scas
push
push
movs
sbb
jmp
rcl
mov
enter
mov
inc
out
xchg
movs
xlat
xchg
arpl
mov
mov
(bad)
jmp
dec
cmps
cli
repnz
pop
xchg
(bad)
ins
and
dec
sub
push
dec
es
push
outs
ins
xor
inc
mov
or
xor
jno
add
sbb
ret
mov
in
push
mov
sar
and
clc
ins
hlt
stos
std
or
jl
cld
clc
adc
loopne
sub
out
mov
retf
xchg
mov
ds
scas
pop
shl
fld
sbb
repz
dec
xchg
or
push
xchg
clc
fcmovnu
adc
test
retf
popf
and
jb
mov
enter
add
hlt
out
sub
push
mov
les
lods
add
push
sub
lods
inc
mov
out
lahf
jmp
mov
iret
int3
jmp
outs
repnz
daa
push
ja
xchg
push
clc
iret
out
ret
cs
fld
push
addr16
mov
push
nop
shl
clc
xchg
inc
les
xlat
ror
repnz
mov
jo
fld
adc
push
(bad)
and
adc
rol
pop
dec
xor
jg
ss
inc
xchg
fs
jae
out
inc
mov
gs
xor
jo
and
fdiv
loopne
sub
jecxz
xor
sub
mov
push
and
pop
xor
std
mov
jae
xchg
outs
push
mov
sti
adc
sub
mov
dec
in
std
repz
mov
mov
xchg
pushf
mov
push
push
sbb
scas
cmp
out
dec
in
xchg
push
stos
in
cmp
jg
and
sbb
leave
pop
push
stc
mov
and
dec
hlt
jg
pop
stos
fisubr
jle
sahf
inc
jge
repz
stos
(bad)
ins
in
sar
xlat
push
mov
push
add
jmp
int
in
xor
imul
push
and
sub
pop
scas
cmp
aas
sbb
movs
cmps
adc
punpckhbw
cmp
adc
jmp
test
ret
xor
mov
fdivr
mov
sbb
ss
cdq
(bad)
pop
dec
lock
and
sub
or
dec
add
test
sahf
(bad)
jge
rcl
or
ins
adc
inc
repnz
and
xor
cs
aaa
jae
(bad)
adc
mov
sub
call
(bad)
cli
xchg
gs
add
popf
push
mov
sub
outs
fwait
cmps
addr16
xor
sub
jecxz
or
cmp
adc
imul
cli
cmp
mov
pop
pmaxub
in
jo
lods
mov
sbb
call
mov
movs
out
enter
adc
(bad)
ins
pop
out
fisubr
mov
mov
sub
aas
fldl2t
sbb
mov
ds
stc
or
and
js
je
int3
inc
adc
out
rcr
inc
mov
int3
sti
mov
shr
xor
sti
stc
or
(bad)
repnz
sbb
retf
loopne
pop
xor
cmc
cmp
lahf
xchg
retf
sbb
sub
dec
push
(bad)
loope
js
mov
xchg
out
sar
jo
loope
aad
jbe
mov
sar
gs
stos
add
push
cld
inc
sub
fstp
jnp
jnp
sub
inc
test
scas
add
jb
mov
cs
popa
jmp
pop
xchg
cli
mov
test
je
test
in
adc
pop
js
aam
stc
mov
dec
add
aam
xchg
pop
mov
aam
rcr
in
repz
(bad)
add
mov
mov
pop
sub
jle
inc
mov
push
xlat
outs
or
test
mov
xchg
aam
stos
mov
lahf
sub
mov
loope
cmps
and
xchg
pop
inc
and
daa
push
xor
sbb
jne
inc
fs
dec
adc
aaa
push
inc
inc
pop
cmp
xchg
aaa
(bad)
jns
sahf
mov
or
cmp
or
cmps
sub
push
push
iret
mov
movs
rcr
inc
cmp
je
lea
out
in
mov
pop
daa
dec
or
cwde
push
xor
popa
and
js
lea
sub
hlt
shl
shr
inc
stc
pop
mov
cs
inc
cmp
jle
inc
mov
jg
jne
jo
icebp
fimul
push
movs
shl
cmps
lahf
cmp
bound
dec
adc
mov
gs
sahf
cs
xor
call
mov
fistp
adc
popf
mov
dec
cmc
xchg
push
cmp
jns
jns
das
xchg
arpl
std
add
inc
xchg
ret
xor
ds
fld
jecxz
iret
mov
push
out
jg
shr
int
sbb
mov
aam
xor
xchg
jnp
adc
and
push
jnp
(bad)
es
sub
pop
imul
in
mov
adc
jmp
ins
sub
mov
push
or
ins
jae
ficom
sbb
push
push
xor
adc
mov
loope
mov
pushf
das
push
xlat
push
mov
popa
xchg
dec
hlt
loope
dec
xor
and
call
test
mov
pop
mov
add
xchg
mov
aad
(bad)
in
push
xchg
repnz
ja
test
inc
sbb
cmps
push
test
jnp
sbb
xor
(bad)
pusha
rcr
out
shr
mov
or
mov
sub
stos
cld
scas
out
adc
and
xchg
pop
lds
mov
in
push
ins
mov
dec
clc
mov
jmp
push
data16
stos
jl
clc
stos
push
mov
mov
jno
inc
sbb
imul
push
data16
inc
pop
bound
xchg
lahf
push
cmp
cdq
jmp
add
mov
dec
mul
out
mov
ins
jge
mov
rol
retf
and
mov
in
inc
xor
lea
je
jne
movs
scas
jp
imul
clc
push
cdq
test
dec
inc
test
mov
not
sbb
call
jae
jecxz
movs
mov
dec
addr16
into
mov
pop
push
stos
adc
inc
mov
out
stos
mov
fadd
neg
cmp
test
dec
push
mov
mov
arpl
jl
mov
mov
les
call
rol
push
outs
sti
ds
test
jae
sub
lods
mov
jg
lods
ja
mov
inc
ja
xlat
int3
push
fsubr
lods
movs
mov
fcomp
fnsave
mov
inc
cmp
loop
mov
mov
xchg
push
xor
(bad)
out
pop
jnp
cmp
(bad)
icebp
mov
mov
jg
inc
movs
mul
in
mov
stos
adc
aaa
(bad)
fmul
popf
dec
xchg
dec
push
jle
mov
push
stc
not
push
lods
mov
mov
mov
dec
or
push
add
jnp
in
inc
xchg
in
scas
clc
mov
push
pop
out
sub
sub
mov
outs
mov
fldcw
rcl
jle
into
outs
mov
sub
or
inc
ret
arpl
dec
inc
xlat
adc
fsub
or
jle
test
dec
retf
jmp
jmp
push
je
and
cs
mov
sub
pusha
adc
jno
lock
and
out
xor
mov
out
cmp
mov
xor
jne
ficomp
mov
xor
xor
ins
push
cmc
pop
pop
push
pusha
inc
mov
call
pop
xchg
mov
inc
jmp
cmps
cli
inc
push
cmp
pop
in
jb
mul
and
pusha
jnp
or
dec
or
mov
call
pop
or
repz
rol
loopne
jg
test
or
cmps
jmp
mov
mov
jnp
hlt
sbb
sahf
cwde
jl
aas
loope
pop
fcmovb
out
pop
pop
ja
(bad)
(bad)
(bad)
ds
aas
das
stc
jmp
fs
mov
mov
aas
and
mov
push
mov
lods
jns
xchg
int
add
sbb
rcl
pushf
sbb
fmul
lea
bound
jp
mov
sub
mov
push
xchg
xchg
xchg
nop
and
jmp
retf
mov
dec
xchg
push
hlt
fisub
inc
mov
arpl
sub
movs
clc
fbld
mov
fld
ficomp
outs
push
and
inc
jo
push
jbe
lods
sub
mov
xor
mov
push
stos
xor
mov
lock
aam
imul
stos
shl
mov
neg
dec
sub
out
(bad)
xchg
or
fnsetpm(287
cmp
adc
inc
lods
jecxz
or
sbb
mov
push
sub
jne
mov
mov
mov
sbb
pcmpgtd
int3
mov
cmps
ret
push
pop
sub
les
and
daa
lock
mov
xchg
test
leave
inc
cmp
ins
retf
hlt
sar
cmp
rcr
and
pop
pop
jp
or
dec
daa
loope
mov
dec
cmp
outs
mov
leave
ja
add
fld
push
imul
or
dec
das
mov
inc
mov
frstor
cwde
dec
mov
mov
les
aaa
cmps
add
fsubr
loop
ss
mov
push
xor
int3
les
test
jae
ret
adc
or
add
pop
pop
ins
inc
dec
pop
aaa
pop
pop
shl
push
sub
fcom
cmps
and
cdq
(bad)
popa
outs
sbb
icebp
fisub
sahf
adc
xor
loope
fistp
pop
test
and
out
mov
scas
jle
and
mov
sbb
mov
push
js
dec
jge
aad
pop
pusha
push
nop
leave
mov
gs
test
std
mul
cs
imul
daa
mul
shr
push
xor
inc
sbb
(bad)
xor
test
mov
mov
ja
add
push
dec
repnz
xchg
adc
or
and
cmp
pop
jo
sub
push
ins
fdivr
mov
pop
les
sti
ins
clc
adc
(bad)
out
pop
push
jl
and
xchg
addr16
cmps
pop
rdpmc
mov
pushf
sub
jecxz
pop
push
push
pop
sahf
into
push
push
and
movs
add
dec
rcr
inc
in
cmp
mov
mov
xor
lock
imul
lods
cmp
hlt
aaa
cmp
out
adc
std
dec
ds
adc
shl
int
sub
sbb
dec
cmp
pop
pop
cmp
movs
addr16
push
icebp
bswap
fdivr
pop
stos
shl
pop
stos
in
cmp
and
in
rcl
icebp
in
scas
fbld
xor
xchg
inc
shl
into
inc
(bad)
xor
jmp
inc
mov
jecxz
dec
jge
das
fidivr
js
jp
inc
rcr
dec
in
dec
xchg
jp
stos
xor
jmp
cwde
in
loope
out
idiv
ret
inc
and
add
fmul
retf
or
jle
push
aaa
cmp
loopne
lahf
loope
dec
pusha
aaa
dec
fisubr
pop
and
std
pusha
sbb
and
pusha
adc
imul
push
lea
pop
ins
pop
loope
inc
dec
stc
adc
mov
stos
jmp
xchg
sbb
dec
cld
arpl
or
jle
jo
lds
es
xchg
push
push
jne
in
mov
js
pop
ins
shr
cdq
adc
push
adc
out
movs
fs
jno
sti
and
adc
outs
xor
test
stc
or
add
add
xchg
mov
jns
add
loope
inc
cmp
out
icebp
add
pminub
repnz
jbe
daa
sbb
out
mov
xchg
push
and
xchg
ret
cmps
xlat
dec
jnp
push
scas
adc
add
je
rcr
(bad)
cmp
call
out
in
or
inc
mov
jmp
cmps
mov
test
mov
scas
fimul
fimul
push
cmps
sub
outs
jns
lea
(bad)
(bad)
aaa
pop
fdiv
shl
mov
mov
dec
cmps
nop
add
inc
push
les
jns
mov
hlt
adc
and
and
mov
dec
and
mov
aam
push
push
loope
jbe
xchg
mov
sub
mov
mov
aaa
or
ficom
clc
xor
test
es
and
and
arpl
pop
in
or
inc
inc
test
or
(bad)
fnstsw
jle
mov
push
mov
cmp
inc
movs
adc
shr
mov
call
mov
pop
and
cld
and
sti
inc
pop
xor
loopne
cmp
fiadd
movs
xchg
jae
sahf
cmc
imul
mov
fcmovnbe
lahf
push
in
pushf
jg
scas
adc
(bad)
fist
inc
mov
jecxz
outs
mov
ja
xor
pop
mov
das
mov
cmps
dec
add
out
inc
imul
call
pop
jg
movs
loopne
mov
aad
ret
lea
dec
out
into
mov
pop
mov
not
add
ins
push
dec
sti
arpl
mov
retf
jmp
loope
dec
mov
in
mov
aam
xchg
fwait
cmp
mov
ins
cs
cwde
aaa
lods
jne
jp
jmp
out
loope
or
neg
hlt
(bad)
das
and
repz
popf
jnp
sub
in
or
sbb
mov
or
loop
jecxz
movs
sar
push
or
outs
int3
jle
mov
push
sbb
mov
(bad)
and
mov
sub
cli
and
movs
inc
fnsave
or
push
scas
loop
into
xchg
pop
jbe
pop
cs
jge
add
push
jp
sbb
push
(bad)
jns
loopne
push
aam
add
adc
cmps
mov
sbb
xor
push
popf
mov
loopne
jmp
and
xchg
and
push
mov
and
push
add
dec
and
jmp
sub
test
xor
cmp
cmp
and
cmps
nop
in
ja
sbb
loope
pop
dec
mov
or
cmp
lods
mov
push
and
fist
add
int
out
(bad)
xlat
adc
cld
mov
je
out
xor
enter
inc
daa
fmul
aam
call
sbb
add
mov
pop
(bad)
hlt
shr
fwait
pop
out
mov
addr16
int3
inc
push
js
ror
cmps
adc
bound
push
fisubr
shr
or
pusha
jne
mov
xchg
inc
shl
(bad)
jns
push
call
fild
xchg
mov
xchg
mov
popa
loop
dec
imul
push
jp
dec
div
push
lods
bound
pop
xor
popf
jns
sub
add
fisttp
repz
mov
cmc
cmp
popa
cli
xchg
jecxz
jp
cs
sbb
and
mov
and
clc
adc
or
inc
mov
stos
push
cli
lock
xor
std
ss
inc
fistp
sar
pop
xchg
sub
mov
mov
add
and
(bad)
repnz
ja
int3
mov
std
xchg
test
mov
xor
jae
les
movs
fld
dec
out
enter
fs
adc
mov
adc
sbb
mov
es
mov
mov
(bad)
jp
lds
mov
daa
nop
pop
xchg
adc
fadd
rcl
pop
out
leave
stos
sbb
loope
popf
adc
sahf
add
jnp
into
fstp
mov
xor
int
cmp
and
aad
loope
ja
jns
arpl
jmp
jnp
mov
gs
ficomp
scas
push
mov
outs
sbb
ret
fistp
and
and
cs
gs
inc
sbb
adc
and
inc
icebp
outs
cld
xchg
(bad)
das
xchg
movs
lea
rcl
mov
out
jns
in
sbb
mov
xor
mov
and
call
aas
jne
pop
dec
fild
in
sar
sub
xor
pushf
pop
nop
pop
push
js
test
test
inc
test
ds
xor
or
cmc
inc
xor
outs
das
mov
mov
pop
dec
lahf
out
ds
hlt
int
jnp
inc
fcomp
ret
mov
dec
inc
add
jae
adc
hlt
rcl
mov
jl
mov
aam
out
ror
je
mov
sub
inc
push
repnz
stc
xchg
add
jmp
outs
pop
ins
mov
sbb
dec
xor
popa
xor
push
stc
mov
lods
sbb
mov
lds
stos
sbb
jmp
and
lds
pop
dec
sbb
ret
adc
popa
jl
jl
dec
pushf
in
fcomp
mov
jno
sub
cmp
sbb
push
pop
out
pop
jle
cmp
push
rcl
repz
xor
(bad)
xlat
mov
test
into
xor
sbb
xor
sub
or
pop
xchg
(bad)
or
lahf
stos
lea
xchg
xchg
cmps
std
aas
dec
jmp
push
pop
pusha
cmp
in
lock
(bad)
jae
pop
xchg
pop
or
jl
shr
js
or
and
dec
mov
cmp
test
mov
and
mov
scas
adc
adc
mov
sub
inc
sub
test
and
mov
mov
mov
aas
sti
outs
dec
les
inc
and
fcomp
popw
mov
inc
xchg
jmp
mov
les
daa
xor
mov
jge
mov
aas
jle
leave
pop
sub
js
in
in
fwait
sbb
lods
(bad)
clc
xchg
jbe
div
inc
sub
add
jle
fldenv
movs
ins
sub
popa
dec
jo
(bad)
xlat
push
mov
xor
xchg
inc
dec
pop
dec
mov
push
lahf
sub
and
xchg
loopne
cli
inc
jo
pop
out
sbb
out
shl
add
add
setge
fisttp
xor
dec
push
sbb
sub
in
or
adc
add
in
push
arpl
int3
sub
loop
mov
fbld
adc
inc
loope
fnsave
push
lods
add
xchg
mov
div
lock
xchg
xor
mov
inc
arpl
pop
or
xor
cmp
mov
mov
in
jno
jno
das
fisub
scas
adc
rol
jle
daa
xor
push
inc
jle
push
dec
fdivr
ja
lods
jo
(bad)
push
mov
push
dec
scas
xchg
test
lea
aam
repnz
fmulp
jo
test
ds
jecxz
pop
fbstp
dec
mov
xor
or
out
jmp
in
jb
clc
xor
daa
imul
loop
jbe
jge
aaa
or
sahf
(bad)
shl
dec
mov
jo
push
mov
sub
lods
pop
sub
and
pop
ret
or
mov
jne
loop
fsub
xchg
cmp
and
ins
icebp
ss
xchg
cmp
xchg
vmovups
mov
lods
jno
or
repnz
test
push
push
clc
mov
test
adc
pop
or
add
or
jmp
call
lods
mov
pop
jmp
mov
sbb
sub
sti
movs
dec
fldcw
cmp
repnz
lds
ret
(bad)
push
jmp
pop
xchg
cmp
mov
shr
das
aas
xchg
mov
loopne
shl
adc
pop
jnp
scas
fs
pusha
outs
xchg
add
xor
out
sbb
cmps
jl
push
sbb
push
stc
out
pop
ror
mov
sub
or
lock
lods
sbb
sub
mov
mov
pop
dec
and
add
fnstcw
lahf
outs
sbb
adc
add
out
xor
jae
enter
jo
rcr
jmp
daa
outs
mov
cmp
adc
scas
fiadd
mov
jl
ror
mov
in
sub
push
mov
xchg
fmul
xchg
xchg
pop
xchg
test
ins
pop
div
je
dec
push
mov
and
add
shl
xchg
jp
jl
mov
movzx
dec
sub
and
(bad)
fdivr
and
sub
cs
cmc
loope
xchg
add
adc
mov
sub
hlt
fwait
xor
repz
mov
call
jnp
(bad)
jecxz
scas
mov
jne
add
xchg
clc
in
data16
mov
cmp
nop
inc
cld
outs
adc
inc
mov
cmps
test
bound
adc
add
scas
aas
push
ret
jno
lods
xchg
mov
cli
out
sbb
mov
mov
jne
stc
outs
aas
fisubr
clc
fadd
push
jno
fsubr
frstor
sar
fmul
push
xor
jo
aaa
jge
mov
or
mov
es
fisubr
adc
lea
inc
cmps
sti
jle
dec
pop
out
fwait
in
lods
jno
inc
fistp
mov
pop
out
sub
dec
mov
pop
sbb
rcl
gs
mov
dec
mov
(bad)
aaa
fs
xor
xor
fnstsw
out
push
sbb
mov
xchg
add
rol
push
stc
movs
repz
mov
cs
jae
aad
enter
and
mov
je
push
add
lock
cmp
adc
popa
jns
push
xchg
jno
dec
push
xor
cwde
call
movs
int
clc
adc
and
xchg
jno
adc
scas
shl
lds
jno
mov
outs
dec
sub
jnp
data16
repz
ret
mov
imul
jge
(bad)
(bad)
jbe
in
daa
nop
mov
inc
cdq
nop
lds
std
imul
inc
cmp
stos
call
iret
sub
add
dec
mov
ret
sub
mov
mul
js
rcl
mov
mov
sub
lahf
cdq
sahf
(bad)
stc
shl
(bad)
push
xlat
mov
bound
push
inc
sbb
jbe
mov
rcr
cmp
jns
aam
inc
arpl
sub
mov
test
in
inc
pop
mov
push
icebp
in
sub
inc
stos
add
cld
push
mov
dec
push
mov
pushf
and
repnz
jno
push
and
scas
ret
or
test
cli
add
int3
movs
push
retf
mov
hlt
jne
or
adc
pop
inc
add
xor
repz
cli
repnz
into
in
popf
pop
in
xchg
js
mov
xchg
adc
jge
inc
push
dec
xchg
jae
adc
imul
int
lea
fld
cmps
pop
jl
ja
dec
repz
daa
adc
cmp
bnd
pusha
int3
int
xor
test
test
jl
aaa
(bad)
loope
mov
mov
and
std
sub
movs
scas
add
aas
into
sbb
aam
cli
xchg
add
sub
or
inc
xchg
mov
mov
test
popf
pop
sti
fild
add
inc
out
aaa
popa
xor
repnz
sbb
in
fsubr
loop
and
call
es
sti
inc
or
jno
xchg
rol
pop
ja
push
cmp
sub
loop
pop
xchg
cmp
inc
sbb
aam
fdivr
std
and
dec
and
stc
iret
int3
or
pushf
sbb
lods
popf
retf
adc
in
xor
lods
inc
mov
sbb
lds
clc
mov
push
movs
rcr
or
lods
cmp
jg
into
sbb
cmp
push
lods
jecxz
cwde
mov
repz
sahf
icebp
mov
jle
or
push
call
mov
in
ret
cmp
je
dec
dec
xchg
push
jmp
jae
dec
aam
out
sahf
pusha
mov
pusha
stos
jmp
cmp
adc
(bad)
daa
push
push
mov
in
in
sbb
fisubr
add
xor
mov
popa
lahf
int3
inc
es
pop
cmp
test
aam
inc
sbb
push
loope
dec
popf
cmc
cdq
cdq
cdq
cmps
stos
xchg
jl
mov
mov
lods
push
stos
(bad)
bound
div
pop
push
push
sub
and
aas
adc
sbb
xchg
mov
adc
inc
stos
shl
jnp
jp
inc
inc
scas
mov
pop
cmp
call
fstp
add
aas
icebp
clc
mov
pop
pop
adc
push
jnp
add
rol
add
ja
(bad)
push
push
push
aam
sub
in
jl
jmp
jnp
jmp
mov
shr
pop
jmp
mov
xor
out
pusha
repnz
popa
dec
pop
jb
loope
arpl
pop
or
sbb
out
imul
xchg
cmps
ret
adc
sub
cwde
js
lea
iret
or
imul
sbb
push
lock
lods
push
and
sub
mov
out
imul
ins
mov
loope
mov
inc
pop
daa
lea
mov
mov
xchg
mov
aam
sub
out
xor
jl
imul
frstor
dec
jno
sub
xchg
mov
rcr
cwde
push
pushf
iret
js
shl
add
inc
push
mov
xchg
in
js
ins
iret
and
aam
add
ins
loop
pop
sub
out
mov
arpl
scas
fadd
dec
test
mov
dec
imul
nop
mov
pop
sbb
clc
inc
sub
push
sub
jecxz
mov
add
jae
ss
push
mov
imul
push
ss
mov
mov
jecxz
pop
shl
popa
mov
mov
ret
mov
sub
mov
cld
add
not
fldenv
add
sbb
pop
nop
mov
imul
inc
outs
jmp
mov
mov
lea
mov
mov
ficomp
jmp
daa
leave
gs
aam
and
fs
cmp
pop
ins
btc
hlt
psubd
jne
push
retf
clc
cmp
aam
and
inc
mov
dec
iret
fist
inc
call
mov
dec
jge
dec
cmp
sub
ret
xor
in
fmul
add
jmp
jbe
shl
inc
scas
mov
lock
pop
jecxz
(bad)
xor
lea
in
mul
xchg
inc
ss
and
cmp
ins
nop
shl
mov
pop
cmps
imul
aam
push
js
(bad)
cld
stc
or
mov
sbb
into
cs
cmp
pop
(bad)
sar
inc
das
xchg
push
jp
add
aad
add
into
int3
into
jge
jb
pop
sub
fs
je
or
mov
rcr
in
dec
sbb
call
call
xchg
mov
mul
xor
mov
in
push
pop
add
out
hlt
lahf
dec
jle
repz
(bad)
adc
inc
xchg
aad
sub
fist
cwde
jp
mov
vshufps
adc
jecxz
mov
cdq
add
inc
mov
lds
mov
mov
cmp
and
inc
xchg
es
daa
sbb
(bad)
cmp
add
test
add
(bad)
push
sub
into
jl
pusha
in
int3
sbb
cdq
add
jecxz
pop
not
mov
es
adc
ror
mov
das
in
dec
idiv
(bad)
cmp
cmp
mov
pushf
mov
push
ja
enter
xchg
cwde
mov
(bad)
xor
nop
neg
push
arpl
mov
jnp
inc
fistp
sbb
pop
stos
pop
cmp
adc
sbb
sbb
stos
int3
cmp
test
rol
fisub
out
sub
jge
push
bound
inc
test
aaa
lock
shr
je
push
push
es
clc
push
(bad)
std
xchg
dec
mov
(bad)
sti
call
and
add
push
sub
and
xchg
adc
cmps
sbb
mov
cmp
mov
inc
jmp
sbb
shr
sbb
popf
(bad)
fiadd
cmp
out
movs
rol
add
lea
mov
test
inc
push
inc
jg
jl
pop
das
scas
mov
mov
inc
xor
mov
movs
mov
push
and
cmp
lds
xchg
fs
hlt
arpl
mov
dec
std
fsubr
push
arpl
mov
inc
inc
nop
xchg
jno
(bad)
fcmovnbe
cmps
loop
mov
lahf
pop
push
xor
mov
mov
mov
scas
and
movs
cmp
sub
push
call
fwait
or
cld
nop
(bad)
out
ss
adc
sbb
enter
(bad)
mov
bound
ret
mov
pop
out
lds
jbe
sub
adc
scas
fwait
jno
inc
les
xor
sti
mov
imul
fnstcw
mov
dec
lds
test
sbb
jmp
cmp
je
data16
daa
rol
pop
shl
dec
call
popa
lock
mov
inc
rol
outs
lods
jmp
cmp
or
dec
cmp
push
inc
es
je
cmps
das
pusha
and
jb
sub
in
sbb
mov
test
xlat
mov
add
push
out
inc
pop
in
mov
xor
dec
lahf
jl
xor
mov
add
adc
int3
inc
push
mov
xlat
in
jae
js
jns
repz
adc
mov
dec
nop
fsubr
aad
xchg
sbb
jle
clc
jg
and
xlat
inc
inc
fwait
jne
(bad)
cmp
xor
fidiv
inc
sub
and
pusha
push
or
xchg
add
cmps
mov
loop
mov
data16
jle
addr16
mov
test
adc
pop
pusha
sub
sar
or
inc
int3
push
jecxz
les
adc
xchg
jmp
loope
adc
xchg
test
into
pop
jo
call
push
fchs
es
in
xor
inc
dec
ins
(bad)
mov
pop
rcr
and
xchg
mov
iret
fadd
mov
xchg
inc
and
fs
fwait
(bad)
dec
bound
adc
(bad)
movs
jle
pusha
imul
ror
or
sbb
mov
or
enter
call
rcr
pop
dec
mov
outs
mov
mov
and
mov
fwait
xor
fisttp
mov
daa
mov
cmc
push
jge
mov
mov
and
cdq
cmps
loope
or
pop
pop
mov
clc
call
mov
sbb
cmp
gs
scas
inc
inc
shr
inc
out
jge
stos
and
dec
in
ret
call
adc
bound
push
adc
sbb
lods
dec
pop
ret
add
jae
jae
xchg
movs
stos
inc
jbe
call
jg
add
and
xor
and
xor
or
mov
jns
adc
inc
stc
fwait
pop
inc
jb
cdq
leave
ficom
mov
sbb
dec
push
mov
jmp
(bad)
lahf
std
cmps
pop
sahf
cmp
pushf
dec
daa
inc
aaa
pop
clc
test
mov
lea
movs
cwde
push
scas
sub
inc
mov
or
mov
stc
ins
mov
add
gs
adc
inc
repz
mov
xchg
lea
jne
mov
and
cwde
pop
fisttp
push
repnz
inc
imul
test
out
jo
scas
pusha
dec
or
fcmovu
adc
scas
pop
cmps
popf
lods
test
push
out
jecxz
mov
mov
lods
and
outs
push
push
aas
cwde
dec
je
(bad)
mov
fistp
mov
fs
test
lods
gs
mov
xor
sbb
and
or
out
adc
pop
lea
inc
shl
and
int
dec
lds
nop
in
out
jae
outs
dec
cmp
mov
inc
mov
sbb
pop
repnz
mov
jbe
jg
sti
push
loop
sbb
inc
dec
add
retf
mov
mov
or
pop
call
call
xor
call
sub
jae
add
jecxz
enter
lock
mov
cmps
and
mov
test
adc
in
push
mov
iret
xchg
add
add
lods
and
lds
or
fwait
iret
dec
inc
dec
mov
jl
pop
inc
ins
push
mov
mov
cs
in
xchg
rcl
sub
add
mov
fucomp
pop
and
adc
inc
mov
xor
fdiv
imul
lea
iret
mov
test
cdq
inc
es
jle
int3
cwde
dec
pop
clc
push
jo
pop
pop
test
call
(bad)
fadd
fist
pop
int3
mov
dec
je
fwait
stc
pop
(bad)
adc
push
push
xor
ss
ret
popa
pop
mov
fdivr
xchg
outs
scas
mov
out
fdivr
lea
lods
push
cli
aaa
add
dec
add
stc
sahf
stc
rcr
popf
(bad)
mov
out
push
jmp
pusha
rol
(bad)
pushf
xchg
and
cmp
inc
mov
add
push
lahf
fisttp
loop
je
iret
jle
pop
cli
pop
xchg
icebp
mov
dec
rol
cmp
mov
mov
cwde
outs
cmp
jnp
fdivrp
fidiv
push
inc
add
xchg
sub
push
sub
lods
int3
lock
retf
jg
or
xor
fsubrp
fcmovb
jmp
jmp
sub
imul
mov
pop
mov
sahf
fild
aad
nop
add
hlt
std
cdq
add
cmp
mov
dec
data16
inc
mov
push
in
cmc
mov
dec
sub
xchg
mov
dec
and
popa
sub
test
ins
jae
js
out
clc
mov
js
mov
lods
push
and
int3
xlat
fild
leave
in
movs
inc
imul
jno
sbb
add
arpl
ja
jmp
inc
cmc
outs
mov
stos
lock
cmp
inc
scas
jg
pushf
pop
das
adc
loope
pop
loope
(bad)
pop
lods
mov
mov
data16
mov
movs
push
sar
push
sub
data16
sbb
fs
push
cmp
lea
mov
pop
lods
sbb
bnd
movs
nop
in
stc
popa
lock
adc
data16
push
clc
nop
push
and
cmp
xchg
iret
(bad)
dec
adc
push
pslld
loop
stc
ficom
push
lds
pop
jg
xchg
int3
cld
pop
add
bound
sbb
loopne
js
xchg
xchg
sub
adc
test
cld
add
(bad)
pop
rcr
ins
push
cmp
shl
add
test
xor
gs
lods
test
inc
mov
inc
popf
adc
(bad)
in
ja
cmp
xor
push
cs
dec
enter
xlat
dec
nop
mov
sbb
jne
mov
mov
jmp
jo
sbb
xor
sub
inc
jne
and
adc
jmp
(bad)
xchg
cmp
sbb
cmp
js
cmp
leave
push
mov
mov
inc
sub
jno
cmp
push
retf
inc
jge
mov
(bad)
repnz
mov
mov
cmp
movs
or
ins
adc
dec
xor
and
push
inc
test
scas
push
xor
pop
mov
out
xchg
ffree
cs
adc
jecxz
addr16
or
push
call
sub
mov
pop
pop
adc
sub
repz
(bad)
rol
inc
(bad)
loopne
mov
in
mov
xchg
(bad)
jecxz
nop
repz
sub
ficom
hlt
loopne
into
sbb
mov
pusha
mov
sbb
(bad)
retf
lds
jecxz
(bad)
shr
jno
out
imul
mov
bound
int3
mov
jbe
inc
scas
adc
into
nop
mov
xlat
rol
mov
sbb
test
(bad)
das
scas
out
mov
mov
cmp
jb
pop
pushf
fs
push
mov
jecxz
dec
fldcw
cmp
xchg
or
jmp
and
je
push
ja
enter
mov
and
je
(bad)
popa
cmps
data16
mov
inc
inc
popf
xor
aaa
mov
inc
mov
icebp
test
ficom
sub
add
mov
aaa
or
inc
dec
adc
ja
cwde
jge
jl
lock
sbb
fmul
fdivr
stc
cli
call
aad
fcom
mov
cld
icebp
xor
mov
pop
dec
dec
iret
test
ror
and
shl
adc
nop
loop
jge
jecxz
cmp
pop
jmp
pop
and
leave
fwait
push
lods
pop
fsub
jno
mov
adc
mov
push
mov
sahf
sub
push
retf
cwde
push
push
repz
xchg
dec
sub
push
(bad)
daa
sbb
jns
cdq
je
xchg
inc
jbe
inc
cmc
aam
outs
fmul
js
mov
aad
imul
add
in
icebp
data16
mov
inc
push
pop
sbb
mul
(bad)
pop
cmp
adc
pop
retf
movs
sbb
imul
jne
mov
(bad)
out
mov
cmp
loopne
aam
stos
scas
inc
push
adc
or
mov
sbb
jae
push
ror
(bad)
mov
loopne
jns
clc
sub
fs
into
xor
cmps
mov
push
frstor
cs
cs
mov
in
sahf
add
in
test
cmp
push
cmp
push
dec
mov
loopne
lahf
lahf
loope
push
rol
add
pushf
jno
or
add
nop
cmp
out
nop
pop
dec
or
cmp
call
imul
outs
add
idiv
inc
mov
xlat
cmps
nop
and
mov
enter
and
pop
sub
adc
aaa
lock
mov
jae
mov
adc
sahf
movs
add
les
inc
jge
add
outs
jmp
stos
aad
adc
fadd
pop
stos
arpl
add
fs
and
test
(bad)
lahf
hlt
xchg
mov
scas
idiv
inc
popa
jnp
iret
test
adc
sub
jae
jg
mov
xor
mov
push
dec
dec
mov
je
sub
test
inc
adc
ss
(bad)
xor
dec
ss
xchg
and
and
hlt
cld
pop
enter
xlat
sbb
xchg
cmp
(bad)
rcr
xor
adc
sbb
addr16
jo
(bad)
push
add
jecxz
or
arpl
mov
cmp
xor
into
out
int3
popf
mov
popf
inc
xor
mov
fild
pop
and
cmps
mov
sbb
push
bound
sub
jno
lods
add
neg
pop
jns
ficom
hlt
stc
outs
int3
ja
adc
rcr
aas
ficom
addr16
fs
fiadd
loope
shl
(bad)
mov
pop
test
stos
ret
lods
xchg
xor
icebp
out
adc
mov
pop
loope
and
cmp
mov
xor
bnd
jo
clc
(bad)
rol
bound
or
stos
inc
and
cmp
inc
cmp
out
iret
lock
add
and
sub
sbb
pop
retf
xor
ins
mov
les
daa
xchg
lods
cs
mov
mov
sahf
cwde
sbb
inc
add
rcl
int
fmulp
sbb
cmp
and
jge
ins
jmp
mov
dec
ds
mov
mov
dec
shl
test
fstp
ret
into
lods
int
cmp
in
push
retf
push
imul
mov
or
fimul
jbe
add
call
loop
ret
mov
shr
(bad)
push
daa
mov
mov
xchg
out
fwait
mov
mov
jno
andps
sub
adc
dec
leave
lods
mov
pop
lock
fucomi
scas
xor
movs
mov
ret
cmp
outs
mov
or
lock
push
push
cmp
and
dec
aas
cld
inc
push
xor
pop
and
dec
and
sbb
or
mov
cmp
adc
mov
inc
mov
neg
push
push
mov
out
out
and
jg
push
pop
fwait
out
add
mov
stc
in
jp
jmp
jne
dec
xor
loopne
je
test
aam
ss
mov
sub
push
pop
scas
mov
mov
(bad)
or
aad
mov
jp
fdivr
int3
sbb
(bad)
cmps
pop
xor
mov
dec
sar
xor
std
jg
clc
in
cli
fadd
call
xchg
xor
cli
js
pop
hlt
mov
or
pop
mov
push
sar
fisub
push
addr16
repnz
sar
jmp
movs
inc
or
pop
jmp
inc
inc
xor
aam
or
(bad)
hlt
push
add
push
add
lea
pushf
jle
jmp
or
repz
mov
ja
xor
fsub
dec
sahf
push
and
dec
inc
jecxz
cmp
add
xchg
popf
xchg
sbb
pop
sub
dec
fdivp
out
mov
adc
mov
xchg
ins
jp
push
nop
mov
cmc
ins
jns
idiv
cmc
pop
ss
cld
into
xchg
sbb
lea
cmp
lods
rcl
jl
data16
jbe
aas
retf
and
push
xlat
xor
adc
mov
addr16
fdiv
call
dec
subps
setbe
cmc
les
cmp
mov
(bad)
push
(bad)
cli
pop
sbb
push
ja
retf
dec
loop
int3
cmp
mov
test
je
mov
or
or
xor
es
lods
(bad)
jns
fdivr
scas
mov
add
pop
ins
(bad)
stos
xor
add
es
cmp
xchg
add
xchg
push
test
ret
pop
cmp
inc
es
scas
jne
cmp
jno
jns
outs
or
mov
mov
inc
jmp
es
dec
cmp
lahf
mov
add
sbb
push
sbb
jo
pop
cmp
dec
test
sub
push
lods
jno
jge
into
pushf
xchg
aam
jge
fstp
stc
add
sub
inc
lea
add
xlat
xchg
fs
inc
adc
and
clc
repnz
xchg
cmps
mov
mov
xchg
push
(bad)
and
rcr
jmp
mov
push
bound
sbb
and
aaa
lahf
dec
sub
sbb
xchg
xor
add
sar
(bad)
sti
and
popf
inc
das
pop
scas
mov
dec
mov
out
cmp
push
inc
dec
sti
push
or
bound
in
pop
inc
jbe
mov
stos
lock
stos
xor
mov
outs
pop
fild
pop
scas
adc
pop
ret
(bad)
jo
xor
inc
rcr
in
out
popf
pop
push
xchg
sbb
loop
mov
aad
xchg
mov
cmp
sub
leave
cli
mov
scas
sub
push
inc
cmp
xchg
sbb
movs
lea
sbb
sub
leave
pop
das
ja
pop
jmp
ror
call
mov
jo
sahf
add
ror
mov
cli
cwde
jno
xor
into
xor
jmp
or
loope
push
adc
sub
sti
out
(bad)
dec
pop
mov
ret
out
sub
mov
cmps
test
sbb
les
gs
out
adc
stc
sbb
repnz
mov
ins
dec
iret
mov
push
pop
and
loopne
inc
dec
cmps
dec
in
lock
xchg
jg
mov
(bad)
pop
ficomp
ins
call
and
add
push
rcl
pop
scas
xor
outs
(bad)
(bad)
and
jl
shl
lahf
pushf
adc
mov
inc
stc
jne
loopne
adc
sub
leave
scas
pop
ror
ins
dec
mov
ret
xchg
and
xor
cld
push
push
nop
retf
mov
repz
(bad)
cmp
aas
inc
xchg
mov
stos
je
das
pop
mov
sbb
push
push
pop
xchg
or
in
push
xor
addr16
(bad)
(bad)
ss
xchg
imul
adc
jle
jne
icebp
fucomip
add
add
and
ret
add
aam
sbb
mov
pop
push
sbb
jbe
cmps
mov
inc
in
test
sbb
sbb
inc
popa
sbb
dec
nop
jno
pop
pop
mov
aam
xor
jne
xor
test
inc
mov
fsubr
loope
or
(bad)
adc
adc
les
arpl
add
inc
bound
shl
(bad)
retf
inc
pusha
(bad)
fdiv
lods
mov
test
stos
cmp
(bad)
or
mov
test
les
jmp
push
test
xchg
push
jb
mov
jne
jge
sub
and
or
call
add
jbe
jo
(bad)
fcomp
ror
push
neg
imul
ds
stos
and
or
sub
jmp
xchg
xor
pop
dec
stc
in
mov
and
fdiv
movs
(bad)
(bad)
dec
add
fsubr
(bad)
pushf
into
in
add
cmp
and
ffree
je
sbb
cs
or
mov
mov
or
push
pop
gs
cwde
dec
ins
int3
cli
into
fwait
mov
aad
push
or
les
xor
inc
inc
fbstp
xor
and
dec
jno
jge
xchg
aam
push
sub
stc
or
sbb
mov
and
shl
jp
cmc
mov
(bad)
push
(bad)
sbb
shr
pushf
je
retf
inc
pusha
or
cli
cmps
(bad)
mov
test
xor
jp
fcom
stc
pop
dec
loope
pusha
and
scas
pop
test
pushf
out
aas
(bad)
xlat
jmp
pop
and
mov
sbb
dec
sbb
scas
pop
inc
(bad)
out
dec
xchg
ins
sub
xchg
fadd
xchg
shl
js
push
fwait
inc
mov
loope
and
dec
ret
push
movs
mov
and
in
pop
int3
jns
push
inc
int
in
sbb
mov
push
inc
js
outs
push
out
inc
les
icebp
sub
cmp
mov
adc
add
outs
jle
sbb
push
leave
push
mov
inc
pop
mov
iret
mov
jnp
sbb
inc
pop
xor
or
addr16
cmp
push
push
inc
int
stos
push
push
aas
(bad)
out
adc
scas
ds
pop
fwait
mov
imul
push
outs
movs
es
jmp
test
lea
jmp
xchg
sbb
xchg
xchg
mov
jno
lahf
jge
push
mov
mov
retf
xchg
xor
pushf
pop
cmp
gs
cs
push
and
loopne
pop
(bad)
in
retf
jecxz
add
adc
jl
rol
or
pop
pop
push
mov
aam
jns
or
jns
jo
dec
mov
cld
and
stc
div
nop
push
inc
dec
inc
push
inc
lods
scas
mov
fldcw
xchg
iret
stos
cmp
cld
mov
sub
dec
xor
adc
jge
jecxz
and
jecxz
nop
or
or
fist
adc
rcr
in
cli
sbb
addr16
jg
sti
xchg
mov
ss
sub
pop
std
enter
into
lahf
lods
or
push
xchg
and
xchg
dec
das
jg
jecxz
push
add
push
adc
add
sti
bound
cmp
cmp
mov
test
sahf
nop
lahf
adc
clc
cmp
xlat
cmp
and
dec
popfw
test
fimul
nop
and
sti
mov
push
into
mov
cmps
pushf
jmp
pop
jns
and
push
mov
inc
pop
(bad)
inc
and
jmp
mov
icebp
into
xchg
mov
enter
pusha
scas
adc
cmp
mov
or
mov
adc
popf
xlat
mov
mov
dec
out
mov
and
and
inc
sbb
jbe
test
leave
(bad)
mov
out
popf
push
push
xor
adc
mov
add
lds
jp
call
sub
in
mov
in
sti
xchg
cmp
push
pop
jo
lods
(bad)
(bad)
cmp
popa
mov
mov
add
mov
idiv
ret
sub
ds
dec
sub
shl
mov
xchg
push
mov
pxor
mov
dec
stc
retf
cdq
aam
int
cmp
push
add
(bad)
das
fwait
leave
cmp
push
arpl
ror
cli
out
mov
out
sbb
cmp
daa
sbb
je
push
sub
mov
in
xor
jl
bnd
xor
jb
in
dec
cmp
idiv
xor
js
add
mov
test
lods
bnd
jmp
sub
cmp
mov
sbb
ins
push
test
mov
leave
lods
inc
or
push
dec
loop
mov
out
ror
xchg
cwde
in
push
fwait
xchg
adc
jmp
dec
pusha
hlt
pop
inc
clc
sub
and
popf
and
and
xor
arpl
es
mov
pop
sub
add
xrelease
scas
sub
loopne
test
jg
retf
xor
mov
sub
movs
bound
or
jg
or
and
adc
retf
push
sub
xchg
call
fwait
jnp
ja
fdiv
std
shr
add
scas
loope
stos
push
push
xchg
jg
imul
mov
mov
cmp
test
ds
xchg
pusha
jecxz
mov
xchg
sbb
call
iret
fdivr
sar
dec
sub
ja
cld
aas
xlat
rol
jecxz
and
adc
std
inc
dec
push
adc
les
or
in
js
repz
je
cmps
pushf
xchg
push
mov
push
mov
out
in
mov
shl
stos
xor
popa
mov
mov
jne
aam
cmps
ins
push
movs
xchg
push
push
hlt
xchg
pop
pushf
push
xchg
lock
movs
dec
mov
test
ror
xchg
cli
ds
(bad)
or
mov
adc
adc
call
or
dec
and
aas
test
add
xchg
rcr
jae
and
daa
dec
test
iret
xchg
call
mov
cli
ins
mov
add
mov
loop
adc
and
xchg
jle
or
jmp
mov
(bad)
scas
out
clc
lock
pop
out
push
into
stos
test
and
push
test
xchg
xor
stos
push
mov
sub
xor
mov
pushf
mov
jecxz
out
movs
call
scas
(bad)
je
xchg
push
call
and
pop
push
sub
test
ins
iret
inc
mov
jbe
out
jmp
mov
clc
xchg
xchg
xor
sti
(bad)
out
mov
test
ja
xchg
mov
jns
xchg
dec
push
loope
adc
xor
xchg
mov
adc
lds
aas
mov
inc
rcr
sbb
cmp
pop
xor
cli
push
mov
jb
int3
retf
xor
movs
push
(bad)
adc
bound
dec
mov
in
dec
dec
fsub
jmp
push
fsub
dec
inc
adc
cmp
add
add
xchg
inc
push
jmp
mov
push
jmp
jecxz
in
mov
push
popf
aad
lea
jb
xchg
fild
mov
pop
xor
fwait
and
sar
(bad)
cmp
or
xor
mov
jl
mov
mov
or
repz
and
icebp
add
push
cli
out
mov
xor
jge
pushf
(bad)
cmp
stos
mov
add
push
push
dec
sbb
hlt
mov
ds
pushf
mov
(bad)
cmp
movs
out
aam
stc
adc
mov
sbb
call
or
ins
inc
inc
mov
stos
pop
dec
rcl
mov
outs
sahf
pop
mov
popf
xchg
jne
repnz
(bad)
fcom
jo
or
mov
mov
test
adc
es
ret
jecxz
adc
cmps
sbb
xchg
add
push
xchg
push
mov
xchg
pop
outs
ja
cmp
or
lea
out
mov
sti
adc
call
test
(bad)
js
(bad)
mov
test
cld
dec
into
lock
and
or
pushf
movs
cmp
cdq
push
jmp
into
ror
jno
scas
test
out
repnz
loope
in
pop
loopne
ins
dec
pop
adc
jmp
pop
neg
fsubr
pop
retf
sub
adc
adc
jbe
or
test
sbb
stos
daa
fidiv
call
xchg
dec
jo
or
and
mov
pop
push
pop
ret
enter
mov
clc
mov
jno
sbb
pop
cmp
add
or
push
outs
dec
sub
cli
push
pop
mov
pop
sub
jmp
add
add
out
xor
jns
lahf
dec
icebp
jge
pop
jne
push
out
fdivr
sub
out
sbb
stc
mov
sub
fsub
and
sbb
pop
lods
push
rol
mov
sbb
icebp
jns
sbb
mov
fld
inc
adc
mov
(bad)
int
inc
pop
xor
push
aaa
lock
aaa
adc
cmp
sbb
mov
cmps
popa
inc
lahf
lock
out
add
popf
idiv
mov
out
stos
aas
(bad)
cmp
aaa
jp
div
cmpps
inc
dec
and
adc
mov
lea
or
sub
add
neg
leave
ds
mov
mov
pushf
mov
popf
xchg
je
ror
ss
cmc
jl
fnstcw
mov
cwde
movs
and
lock
mov
jmp
push
cdq
mov
enter
retf
lea
int3
dec
cdq
rcl
adc
sbb
and
fadd
aas
add
adc
push
aam
adc
and
pushf
jl
in
mov
fadd
rcr
add
mov
movs
sbb
repz
and
pop
stos
push
imul
xchg
mov
mov
xor
arpl
dec
adc
cmp
jecxz
ret
cwde
mov
in
mov
mov
jo
mov
nop
mov
add
(bad)
out
jnp
jmp
fisttp
lods
mov
call
(bad)
lock
pop
push
pop
retf
ja
cmp
xor
lods
arpl
jg
fcomp
dec
cdq
leave
push
add
stc
sbb
mov
pmaxub
in
mov
aad
and
into
das
mov
outs
adc
icebp
jmp
hlt
sub
jp
xor
jne
push
and
add
outs
mov
fadd
test
mov
cwde
mov
inc
or
cs
mov
fcmovbe
or
addr16
sub
sbb
int
outs
cmp
ja
mov
dec
int
stos
nop
cli
test
adc
div
cmp
add
cwde
push
leave
test
aas
lods
sti
loopne
call
xlat
pop
(bad)
push
cmp
adc
js
cmp
iret
pop
stos
dec
fst
inc
xchg
mov
movs
and
cmp
add
inc
add
retf
or
repnz
jb
sbb
sbb
lods
imul
xchg
ss
clc
dec
sub
scas
sub
cwde
pop
pop
mov
or
gs
sub
jle
popa
rol
sbb
and
fcomip
cmp
jo
mov
add
sbb
and
addr16
jl
xchg
test
adc
or
clc
dec
dec
inc
mov
retf
fdiv
test
jne
adc
push
(bad)
or
cmp
or
aam
mov
lea
add
retf
aad
fs
mov
les
inc
sub
sbb
jl
mov
fcmovnu
(bad)
jbe
out
mov
adc
fucomp
inc
inc
outs
jmp
mov
mul
sub
dec
adc
repz
pushf
pusha
sub
and
or
test
fwait
push
and
int
repnz
es
sub
cmp
jmp
mov
cmp
es
aaa
ins
daa
lea
jnp
push
jecxz
cwde
add
daa
shr
adc
mov
bound
mov
xor
mov
inc
iret
das
leave
dec
(bad)
fisub
jge
cmp
mov
sub
fmul
test
jno
pop
dec
dec
xchg
ja
sbb
inc
adc
das
fdiv
arpl
repnz
ss
leave
mov
xor
jb
pop
(bad)
pop
mov
imul
mov
(bad)
(bad)
in
xchg
ss
jmp
ss
xchg
enter
jmp
shr
das
loopne
lods
ds
push
xchg
sub
pop
cld
fimul
test
push
test
in
mov
(bad)
ret
xor
adc
push
jns
jnp
aas
pusha
xor
clc
pop
stos
in
aaa
nop
adc
das
jo
mov
jecxz
sar
cld
and
xor
mov
mov
mov
jnp
ins
jg
mov
push
jno
or
push
mov
and
scas
cmp
dec
jns
pop
loope
push
ds
mov
jp
push
shl
add
jnp
dec
mov
adc
jg
sbb
neg
clc
sar
pop
sahf
je
add
add
adc
jl
idiv
mov
and
dec
aas
cmps
pop
sub
or
jecxz
adc
out
or
xor
mov
stos
adc
stos
repz
or
into
add
jp
scas
mov
mov
push
mov
lds
adc
sub
ja
loop
pusha
int
cld
mov
pop
push
ja
cmps
mov
mov
push
mov
mov
xor
ins
mov
mov
iret
jb
adc
test
or
sbb
xchg
xchg
xchg
ror
out
mov
aad
inc
ins
(bad)
push
cwde
pusha
outs
stos
dec
push
dec
and
test
stos
xor
cmp
test
scas
push
cmp
jmp
ret
lock
add
ret
fnstsw
and
iret
xchg
inc
inc
loope
adc
fs
int
push
sbb
xchg
cli
jecxz
(bad)
xchg
retf
jmp
icebp
sbb
xor
xchg
sbb
xchg
push
mov
pop
push
cwde
xchg
test
movs
int3
cmp
pop
cli
jmp
lahf
mov
adc
and
lea
add
xor
mov
xor
clc
loopne
inc
pop
mov
aaa
mov
stos
add
ins
add
dec
xchg
xchg
lock
add
popa
int3
and
dec
mov
stc
es
adc
push
test
add
bound
lock
int3
jge
cld
jmp
scas
mov
jo
mov
retf
jecxz
retf
aad
jecxz
add
test
cmp
jno
and
pop
xlat
sub
push
(bad)
and
sub
and
cmp
xchg
mov
in
aad
sti
call
fidivr
sbb
jle
or
jmp
cmp
stc
add
pop
or
push
push
pop
jmp
adc
mov
sub
in
mov
push
xor
dec
cmp
jecxz
mov
push
mov
adc
and
jae
xchg
loopne
xchg
sub
sub
inc
(bad)
pop
xor
in
sbb
adc
stos
xchg
repnz
imul
adc
ins
xor
idiv
pop
and
fbld
ror
dec
push
sbb
icebp
dec
sahf
mov
xchg
imul
xchg
sub
cmp
aas
cwde
add
call
pop
lods
mov
dec
add
mov
out
pop
popf
dec
xchg
test
das
jmp
dec
dec
sbb
sbb
test
cld
stc
inc
loopne
jmp
add
jge
ins
xor
(bad)
cmp
jno
push
adc
mov
test
shl
pop
cs
dec
ret
push
adc
in
je
imul
daa
es
in
repz
mov
mov
sbb
mov
ret
xchg
xor
xchg
stos
jecxz
cmp
loope
and
dec
cmps
dec
leave
sti
ror
mov
xchg
or
push
(bad)
in
call
fcom
daa
(bad)
sub
mov
jl
(bad)
fiadd
push
int3
call
cmp
and
sbb
pop
outs
dec
repz
and
xchg
rol
mov
les
ror
(bad)
jmp
add
ins
cmp
xchg
fisub
int3
mov
and
leave
jl
ret
mov
mov
adc
inc
xchg
cld
test
retf
(bad)
in
add
popa
stos
adc
imul
je
sbb
xor
push
cli
or
out
add
cmp
inc
call
(bad)
es
sub
ja
mov
in
out
std
cmc
mov
das
loopne
icebp
push
jae
xor
mov
dec
loop
add
inc
cmp
(bad)
test
cmp
popf
das
mov
dec
ins
xor
mov
rcr
out
movs
cs
inc
popf
mov
xor
or
mov
retw
arpl
jg
sahf
movs
jnp
cs
sar
mov
in
cmps
push
dec
shl
int
inc
test
stc
ja
xchg
jnp
jns
add
call
inc
mov
int3
mov
sub
mov
aas
cmp
xor
or
xchg
repz
popf
cli
cld
cld
sar
lock
jl
stos
sbb
xor
add
push
mov
or
(bad)
fmulp
xchg
cmp
pop
or
xor
add
into
add
mov
mov
adc
push
xor
pop
xor
fwait
outs
outs
stos
xchg
mov
mov
ins
out
pop
pop
iretw
out
mov
jmp
xchg
xor
and
mov
push
popa
or
ja
retf
aaa
sbb
fild
frstor
mov
mov
xchg
mov
jle
jmp
stc
repnz
add
frstor
pushf
out
fdiv
out
push
les
xchg
shr
mov
jne
or
or
mov
out
add
jmp
pop
xchg
mov
ror
stc
rol
repz
xor
pop
pop
mov
iret
push
mov
fidiv
(bad)
std
sbb
cmp
mov
cmp
dec
jb
mov
sahf
pop
fwait
cmp
push
imul
mov
sub
cmp
shl
push
pop
inc
in
punpckhwd
cmp
cmp
sub
cmps
aaa
mov
addr16
mov
je
scas
iret
inc
mov
call
fisttp
movs
pop
inc
mov
or
cmps
js
pusha
test
retf
add
ret
pop
dec
popf
jmp
dec
cmp
sbb
add
sbb
pop
add
outs
push
jb
push
lods
pop
mov
mov
sub
mov
push
jns
(bad)
imul
xchg
push
mov
js
jno
cmp
push
imul
icebp
(bad)
iret
daa
das
out
in
std
jp
adc
stos
iret
adc
std
xlat
sub
hlt
clc
xor
push
xchg
jmp
and
ds
(bad)
(bad)
mov
test
sti
ss
out
in
xor
jle
shr
push
pop
mov
icebp
idiv
movs
xchg
jmp
or
mov
inc
push
outs
push
pop
pop
outs
mov
lock
add
repz
js
or
jmp
aad
bound
push
leave
out
enter
sbb
dec
inc
push
std
xchg
movs
mov
and
push
mov
lock
sar
inc
retf
mov
icebp
jp
out
cs
and
sub
stos
outs
sub
loope
sub
shl
add
imul
xchg
pop
(bad)
dec
les
loopne
fisub
inc
ds
sub
push
scas
aam
fucomp
fst
push
out
mov
loop
sar
neg
cmp
and
sub
adc
sbb
mov
rcr
jae
ret
mov
cmc
xchg
add
dec
in
sbb
inc
xor
push
xchg
jl
imul
jg
and
sbb
adc
arpl
xor
push
aas
jae
push
popf
fcom
aaa
jmp
and
dec
shr
(bad)
popa
movs
outs
aam
and
sti
add
jg
sub
push
cmp
cs
jnp
in
inc
xchg
retf
lea
xchg
pusha
cdq
adc
adc
pop
dec
inc
jecxz
jmp
sub
test
push
mov
test
adc
outs
cmps
inc
mov
mov
push
enter
dec
sbb
add
xor
pop
test
push
xor
stc
in
mov
ins
jle
and
sub
jg
mul
push
lods
pushf
jp
cld
inc
(bad)
push
mov
lahf
es
int3
inc
inc
dec
xchg
cwde
jo
and
mov
scas
ror
rdtsc
stos
out
es
mov
lds
(bad)
dec
mov
mov
lods
jl
inc
jmp
xchg
(bad)
pop
retf
push
outs
nop
and
retf
std
int3
lock
mov
(bad)
retf
aad
clc
xchg
arpl
int
jmp
inc
aad
pop
mov
ja
pop
sbb
mov
in
xchg
ja
mov
loope
dec
nop
lods
jg
neg
pop
fld
hlt
shr
test
movs
icebp
inc
out
and
(bad)
dec
and
sub
cld
and
dec
adc
and
push
xor
cmp
pop
sar
push
in
lahf
cwde
inc
add
fst
cwde
cmp
add
pop
mov
cld
pop
xchg
dec
mov
inc
cmp
inc
stos
jl
add
(bad)
fiadd
push
dec
int
aaa
js
add
or
xchg
sbb
and
(bad)
test
mov
cmp
add
mov
out
lds
shr
mov
test
pop
mov
mov
lock
gs
inc
repz
ja
xor
test
jl
and
ret
cs
mov
inc
sub
shl
sbb
das
stos
enter
sub
jle
retf
movs
ret
mov
repnz
jge
leave
mov
jo
mov
pusha
jo
aad
call
int3
dec
mov
sbb
mov
fdiv
test
dec
js
cld
arpl
inc
jge
loope
(bad)
sub
(bad)
pop
bound
inc
adc
(bad)
mov
sub
dec
in
sahf
repz
and
dec
aaa
scas
adc
out
inc
mov
lods
jo
enter
pop
push
mov
fistp
mov
lea
inc
out
or
daa
inc
pop
or
sub
(bad)
cmp
lahf
in
dec
int3
xchg
and
cld
xchg
stos
xlat
jle
ds
mov
repnz
push
out
and
mov
icebp
mov
cmp
cmc
mov
inc
aas
mov
xchg
(bad)
fs
push
sti
test
adc
fistp
sar
loopne
sahf
fstp
fs
int3
and
jnp
loope
push
or
into
cli
mov
or
adc
dec
cmp
mov
push
leave
ds
push
sbb
pusha
fisubr
nop
sar
adc
movs
cvttps2pi
xchg
aaa
ins
rcl
fdiv
inc
push
mov
mov
fsub
(bad)
jg
xor
dec
iret
test
out
outs
movs
cmp
add
cli
push
sub
dec
hlt
fisubr
cmp
aad
mov
mov
pop
jne
es
(bad)
stos
pop
push
mov
push
stos
adc
icebp
xor
lock
adc
ins
jo
fiadd
div
imul
std
pusha
xor
add
pop
fisub
repnz
xor
iret
ds
(bad)
xor
cmps
rcl
mov
aaa
test
icebp
icebp
ins
dec
push
sbb
add
jne
cli
dec
xor
xor
sbb
adc
bound
pop
pop
mov
inc
xor
fstp
ins
mov
idiv
int3
mov
gs
and
cmps
sub
inc
movs
aad
in
shr
xchg
aaa
sbb
inc
add
sbb
or
lock
loopne
movs
iret
jo
mov
retf
mov
retf
inc
xchg
push
xchg
push
je
cmps
jp
jne
jmp
jmp
shl
push
xchg
std
daa
push
push
xchg
dec
mov
xchg
mov
scas
add
dec
ret
(bad)
stc
cwde
outs
jmp
mov
and
arpl
(bad)
lock
(bad)
outs
dec
mov
fcom
(bad)
jbe
mov
pusha
pusha
int
test
xor
pusha
jecxz
pop
addr16
add
push
push
call
or
mov
scas
retf
lahf
sbb
sub
pop
mov
sbb
shr
or
lahf
ficom
lock
stc
add
jb
jmp
fldcw
mov
xchg
fild
in
sub
fs
inc
shl
nop
movs
test
sbb
ja
(bad)
repnz
push
sbb
dec
das
mov
dec
sub
inc
test
xor
mov
loope
jbe
shr
dec
cmp
mov
jle
daa
pop
and
leave
ins
sub
add
stos
push
jbe
dec
psraw
sbb
repz
push
test
inc
imul
pop
add
jbe
pop
add
push
nop
xchg
fisubr
btc
or
repnz
push
push
push
cmps
xor
loopne
cwde
shl
and
scas
into
xor
iret
adc
xor
push
les
add
sbb
(bad)
jb
stc
lea
test
pop
das
jmp
add
arpl
xor
ins
xlat
sahf
sar
push
mov
fistp
jecxz
fucomp
movs
mov
out
cmp
test
aam
nop
(bad)
call
in
jle
jno
mov
lahf
dec
mov
or
push
inc
das
shr
in
xchg
mov
xor
scas
cmps
mov
les
sub
push
and
retf
(bad)
sti
loope
push
xor
mov
jge
xlat
or
test
fnstsw
xor
rsqrtps
dec
add
aam
xor
das
aam
in
sahf
jmp
(bad)
mov
sbb
outs
mov
outs
mov
sub
mov
enter
adc
test
sbb
mov
adc
mov
sbb
dec
cli
cmp
mov
jbe
ret
mov
mov
adc
xchg
int
xlat
mov
aam
add
xchg
fnstenv
(bad)
push
push
push
lods
into
(bad)
retf
repz
adc
mov
or
or
adc
pop
dec
or
dec
jb
cmp
dec
jp
ins
test
lahf
(bad)
cmc
jne
outs
ror
sbb
push
movs
js
jecxz
retf
sub
and
mov
and
jne
jl
dec
sub
add
fnstenv
and
out
cmp
pop
sbb
cld
into
ret
imul
(bad)
loop
fcomp
leave
adc
lahf
jge
aas
shl
retf
movs
addr16
push
sbb
rol
jae
daa
aad
push
bound
dec
push
cmp
add
lea
inc
clc
mov
ss
popf
repz
cmp
xchg
cmp
adc
and
mov
mov
mov
pop
lahf
mov
ins
imul
in
adc
and
jp
mov
pop
jns
mov
(bad)
jo
cmp
mov
nop
push
pop
in
repz
adc
lea
sub
mov
ins
mov
aad
fldenv
sbb
inc
mov
aaa
push
cmc
test
addr16
pop
xor
pop
shr
std
jmp
ins
push
mov
das
pop
cld
cmps
cs
jg
inc
leave
xchg
stc
inc
retf
sbb
dec
sbb
cmp
jmp
xchg
mov
xlat
jge
sub
adc
pop
adc
sbb
cmp
je
hlt
inc
cmp
jle
fs
mov
or
jnp
sbb
nop
mov
nop
mov
pop
xchg
stc
pop
imul
cmps
ret
leave
xchg
mov
jmp
cmp
jp
lahf
fild
pop
mov
mov
adc
cmp
ret
neg
hlt
push
hlt
jecxz
dec
test
jmp
inc
(bad)
mov
xor
mov
loop
mov
sub
dec
bndldx
pop
jb
adc
mov
cwde
and
loope
xchg
shl
hlt
call
sub
call
inc
xlat
icebp
stos
pop
repz
addr16
test
out
cdq
enter
popf
sbb
ins
mov
or
(bad)
int
mov
push
mov
imul
ss
push
sbb
out
xchg
sbb
fstp
sub
add
call
repz
gs
data16
pop
jnp
push
push
and
adc
js
loop
pop
or
xor
cmps
int
cmp
mov
repz
or
jb
cmp
push
movs
outs
mov
dec
jmp
lds
cvttps2pi
lods
jge
pop
int
adc
lahf
shr
into
cld
push
inc
and
inc
fisub
and
dec
in
dec
rcl
loopne
loop
ss
or
ret
(bad)
loop
xor
shl
xchg
ins
std
ds
int
data16
cld
push
jo
popf
pop
iret
mov
xchg
imul
lock
xor
mov
mov
adc
sub
or
fs
out
outs
inc
push
xor
xchg
push
add
xchg
ror
dec
push
inc
jmp
repnz
popf
and
popf
mov
jmp
cmp
push
pop
jo
das
sub
fsubp
adc
mov
push
jp
inc
les
and
dec
mov
push
xchg
es
sbb
add
out
jnp
mov
pushf
adc
jne
dec
add
or
gs
out
push
push
cmps
cmp
fidivr
retf
test
test
mov
retf
mov
ds
pop
inc
cmp
arpl
cld
fstp
add
es
xchg
mov
arpl
jns
ins
jae
add
fnstsw
adc
mov
inc
add
lock
push
retf
into
fbstp
rol
shl
lahf
sbb
jns
(bad)
std
sbb
push
rcl
sbb
pop
ss
sahf
add
lea
inc
sub
inc
scas
pop
adc
adc
stos
imul
out
data16
fwait
imul
or
jb
(bad)
sbb
in
cwde
cmp
push
or
addr16
aad
add
push
je
imul
fdiv
mov
lods
in
les
adc
add
xor
std
enter
xchg
sbb
fdivr
mov
adc
mov
hlt
(bad)
push
das
test
int3
sbb
shl
daa
sbb
sbb
pop
pop
cli
ins
repnz
or
mov
js
sub
fisttp
jb
cmp
push
sbb
sbb
(bad)
jae
jae
pop
xchg
call
fld
inc
test
fcomp
ins
pop
add
adc
cmp
fs
mul
xchg
test
pop
(bad)
cli
xchg
fiadd
xchg
sub
sub
lods
lock
mov
mov
dec
ja
(bad)
xchg
and
mov
sbb
rol
lea
push
push
push
sub
loopne
repz
add
and
aam
out
jmp
mov
pop
jbe
jge
jbe
(bad)
rcr
and
outs
sahf
addr16
fwait
mov
test
xor
ss
inc
push
jnp
dec
pop
pop
add
and
pop
mov
pop
lock
dec
jmp
pop
pop
sub
add
mov
jl
(bad)
pop
xor
(bad)
in
imul
scas
bound
mov
shr
mov
sub
pop
adc
fwait
jmp
jns
jns
repz
sbb
outs
pop
xchg
outs
in
imul
dec
xor
push
leave
push
les
adc
es
sub
jmp
mov
mov
mov
sbb
pop
push
lea
inc
dec
inc
ror
adc
jmp
call
mov
mov
mov
je
mov
xor
pop
fiadd
jge
sbb
std
aaa
dec
dec
xor
adc
sub
add
inc
mov
adc
je
test
add
xlat
mov
and
dec
in
lea
inc
cmc
bnd
aam
repz
mov
out
call
in
sbb
xchg
arpl
adc
dec
jae
mov
stc
sub
fdiv
cmps
aas
mov
jae
test
jno
push
int3
es
cld
cmp
icebp
retf
mov
out
inc
dec
int3
pop
push
out
es
or
xchg
mov
movs
lds
and
add
mov
sub
pushf
add
mov
enter
popf
or
sub
add
sub
adc
dec
repz
dec
nop
and
out
jmp
ret
jmp
dec
pop
(bad)
hlt
jnp
icebp
fnstsw
in
mov
inc
sbb
gs
xor
pop
pushf
pop
addr16
jns
mov
out
arpl
mov
push
ret
shl
out
iret
pop
call
inc
adc
xor
mov
call
xor
mov
fcmovnb
jl
dec
xchg
xchg
xchg
xor
xchg
pop
mov
loopne
pusha
test
je
pop
xchg
fsubr
pop
cmp
mov
pop
out
pushf
leave
and
xor
jae
lods
cmp
loope
or
test
cdq
pop
mov
fistp
lea
jno
sub
popa
mov
dec
int
inc
aad
push
movs
inc
adc
mov
mov
or
pushf
test
xlat
sar
mov
xor
mov
out
lock
jmp
ror
xor
and
mov
cmp
xchg
icebp
movs
stc
test
dec
mov
ins
mov
in
mov
push
repnz
mov
or
inc
jmp
stos
aad
mov
in
sbb
pop
loop
hlt
sbb
add
and
mov
jns
pop
push
outs
stos
fst
and
out
mov
je
imul
in
xor
loop
add
pop
out
push
test
sub
retf
ret
movs
ror
mov
push
js
mov
fild
xor
xor
pop
in
push
aam
rol
xor
repz
lds
mov
ins
jecxz
retf
test
xchg
sbb
ds
push
sbb
clc
cmp
dec
into
fidivr
inc
js
pusha
das
xor
dec
inc
jne
xrelease
add
pop
jle
mov
int3
mov
sbb
ins
and
pusha
fidivr
mov
div
and
push
fwait
jo
mov
jmp
daa
stos
xchg
not
out
and
loopne
cs
push
mov
arpl
or
xor
cld
dec
jne
rol
fwait
jne
dec
cmps
jmp
mov
sub
and
jnp
cs
mov
test
push
and
aaa
sbb
ja
inc
xchg
pop
push
das
push
aam
pop
outs
cmp
lea
lock
xchg
int3
jne
fadd
sub
jae
movs
dec
mov
mov
xchg
adc
and
push
pusha
scas
ins
dec
xchg
pop
push
ficomp
adc
push
or
fsub
xchg
push
(bad)
jp
fcmovne
pop
jno
and
jge
cwde
mov
fs
ins
(bad)
pop
push
popa
add
push
iret
sbb
or
mov
stc
xchg
pusha
push
jg
repz
ss
mov
xor
pusha
sub
fcompp
xchg
dec
jle
jns
pop
sub
aas
je
jns
cmp
xor
jecxz
jecxz
(bad)
mov
dec
xor
inc
dec
push
(bad)
push
out
lock
mov
adc
inc
jmp
jmp
shl
test
jmp
lods
div
les
scas
rol
into
or
aas
ret
dec
sbb
shr
test
mov
mov
rcr
lds
sbb
or
mov
js
add
cs
cmp
ss
jbe
xor
mov
int3
adc
out
pop
cmc
push
cmp
out
dec
daa
sbb
or
pop
cmp
ret
add
mov
ja
enter
aaa
dec
or
pop
lahf
cmps
repz
enter
mov
sub
or
out
pop
test
push
shl
stos
pop
ss
cmp
sbb
sub
fs
inc
aam
hlt
add
inc
pop
mov
or
pop
mov
fild
mov
pop
stc
arpl
in
leave
ds
aaa
das
jp
add
shr
and
inc
add
shr
mov
adc
jb
and
sub
inc
sub
xchg
cmp
(bad)
xor
push
sbb
repnz
push
or
ficomp
mov
movs
les
repz
mov
jb
cmp
add
adc
(bad)
(bad)
push
ret
jg
xchg
adc
sti
test
mov
adc
aam
or
inc
and
adc
out
lods
jno
inc
enter
arpl
mov
jmp
adc
cmp
popa
rcr
pop
js
jecxz
jmp
jbe
mov
out
fnstcw
pop
push
retf
aaa
out
inc
cwde
sub
repz
jecxz
jne
add
and
add
and
ja
jns
jmp
test
xor
mov
xlat
pusha
in
shr
inc
inc
cmp
push
xchg
aad
jne
in
dec
sub
(bad)
mov
(bad)
push
sbb
pop
mov
jae
loop
xor
lds
push
ret
xlat
push
cmp
sub
cmp
xchg
aas
or
shr
mov
aad
or
jne
dec
jne
cmps
pusha
push
dec
xchg
pop
ret
nop
dec
or
(bad)
sti
les
in
fstp
inc
outs
jecxz
nop
ror
and
push
inc
retf
cmps
jb
cdq
mov
xchg
movs
add
pop
xlat
sub
pop
xchg
je
sti
inc
adc
adc
sbb
xor
mov
and
js
movs
(bad)
cs
hlt
pop
pusha
imul
and
mov
add
mov
mov
xchg
and
movs
dec
lds
or
xor
nop
hlt
xchg
or
lahf
(bad)
xor
or
xchg
mov
cwde
out
scas
test
adc
out
ins
dec
aaa
ret
daa
and
shr
xchg
addr16
sub
cmps
push
cmp
fstp
cs
push
xchg
add
and
mov
test
jle
adc
sbb
pop
cmps
inc
cmp
push
mov
bound
xor
sub
mov
push
jle
adc
adc
add
test
push
and
mov
ins
hlt
div
push
lds
dec
test
stos
pop
pop
(bad)
repz
inc
stos
dec
int
mov
test
and
xor
call
(bad)
push
mov
cmp
sub
push
adc
xchg
or
imul
and
push
cwde
icebp
mov
ds
ds
push
and
xor
add
dec
out
pop
(bad)
cmc
ins
cmp
movs
pop
pop
test
push
(bad)
mov
icebp
mov
xor
data16
neg
or
sub
out
push
in
pushf
das
out
lahf
and
inc
cmps
rcl
dec
dec
mov
cli
adc
adc
shr
jo
lods
xor
mov
mov
adc
and
jmpw
xchg
sub
in
pop
lods
not
xchg
push
add
inc
pop
lods
xor
jo
inc
xchg
cmp
xlat
fidivr
icebp
or
jecxz
mov
stos
jno
dec
(bad)
mov
shl
sbb
mov
cmps
ror
cdq
push
in
mov
imul
jl
cmc
scas
mov
mov
stc
outs
fwait
call
or
inc
gs
not
inc
cmp
cmps
int3
push
cli
inc
hlt
lods
lods
adc
std
inc
mov
dec
mov
pusha
push
pop
js
xor
or
cmps
dec
bound
mov
pop
pop
retf
jbe
(bad)
fisub
dec
sbb
enter
aam
pop
inc
mov
aas
scas
xlat
fstp
mov
adc
in
xor
push
mov
cmp
xchg
in
mov
arpl
dec
ret
not
test
adc
enter
pusha
jnp
and
sete
sbb
xchg
push
sar
inc
lahf
pop
jno
fldenv
movs
push
pop
and
ret
mov
pop
sbb
pop
xlat
stos
cmp
sub
sbb
outs
loop
test
xlat
pop
lods
mov
test
aas
mov
fwait
adc
ins
pop
xchg
mov
pop
scas
or
aaa
cmp
and
aas
add
push
in
test
hlt
cdq
xchg
push
xor
inc
outs
je
lods
popf
cmps
das
ror
out
into
out
mov
lods
sahf
inc
jmp
mov
xchg
mov
aas
cmps
clc
mov
sahf
ror
push
sub
adc
mov
cmp
test
les
push
lea
test
inc
mov
mov
(bad)
jae
or
push
fst
outs
retf
psubusw
adc
xor
rol
leave
les
aas
shr
xor
or
in
neg
mov
clc
je
or
sub
mov
jo
mov
enter
xor
les
pop
sti
xchg
add
push
cld
test
sbb
test
aam
sub
add
iret
out
jge
dec
les
arpl
mov
jae
sbb
sar
xchg
std
retf
mov
std
xchg
fdivr
pop
xchg
xchg
call
cmp
arpl
adc
dec
and
or
out
xor
addr16
mov
std
mov
dec
xor
mov
ret
lock
xor
or
retf
add
ficomp
ja
cmp
inc
lods
cld
inc
div
inc
aaa
js
xor
ds
lock
lahf
cwde
cmp
jl
lods
das
cmp
ds
sub
iret
adc
dec
out
push
frstor
fs
dec
cld
scas
rcl
fsub
jns
xchg
popf
inc
jnp
test
popf
adc
inc
or
mov
pop
inc
ds
out
fsubr
and
shr
dec
and
sbb
mov
push
mov
push
xchg
test
pop
imul
fadd
inc
not
jge
mov
ins
ficom
fcomip
test
mov
nop
stos
sbb
push
push
scas
lea
cld
xchg
into
pop
scas
pop
or
movs
dec
xor
stos
inc
pop
mov
mov
xchg
mov
sub
jno
test
lods
xor
sub
or
or
dec
mov
xor
sahf
cmc
mov
add
dec
cmp
movs
out
dec
mov
xchg
push
enter
popa
lahf
cmp
ror
fdiv
jb
xor
inc
stos
hlt
inc
lock
in
ror
jp
jb
xor
pop
imul
sub
push
mov
xor
sbb
mov
mov
(bad)
loopne
jp
ror
pop
pop
cdq
cmp
mov
retf
xor
psrlw
jbe
gs
inc
movs
mov
push
push
inc
fisttp
mov
shr
imul
pop
sahf
jnp
or
cmp
pop
test
push
cli
inc
ret
in
mov
fbld
in
div
inc
adc
pop
xchg
push
test
aam
pop
pop
aam
addr16
ds
(bad)
ds
lods
retf
sbb
movs
jge
lock
cmps
sbb
pop
push
cmp
add
inc
mov
jb
xchg
jbe
outs
cmps
les
add
lea
push
dec
gs
mov
lods
sub
loopne
ja
xchg
push
jbe
adc
shr
in
fbld
mov
stos
ret
lods
adc
push
lea
cdq
es
cmps
inc
sub
lods
retf
jp
xlat
(bad)
mov
daa
dec
inc
cmc
xchg
and
ret
cmp
sub
fsub
je
ficom
and
bound
sbb
loope
retf
in
jno
mov
push
mov
or
inc
lods
fwait
call
std
jg
sahf
xlat
xchg
loope
fisttp
shl
jne
mov
jnp
xlat
ja
push
fwait
sub
shl
mov
inc
push
push
js
outs
cmp
retf
cdq
mov
lahf
pop
scas
(bad)
sbb
out
sbb
xor
xor
scas
mov
mov
cmps
xchg
dec
push
mov
arpl
aam
pop
cmp
sbb
cmp
scas
and
addr16
inc
pusha
rcl
daa
inc
cmps
icebp
cmps
ss
test
gs
ss
cmp
adc
jo
cmp
(bad)
pop
add
jmp
idiv
pusha
and
add
stos
jl
inc
div
or
(bad)
and
aam
cmp
popa
or
(bad)
lods
stos
das
inc
retf
in
mov
test
mov
mov
ins
lods
mov
sbb
add
mov
mov
(bad)
sbb
inc
rol
adc
sub
(bad)
cmp
add
jmp
mov
mov
ds
jmp
jno
sub
imul
retf
dec
clc
rep
mov
push
ja
and
repz
push
add
ret
dec
inc
lock
mov
mov
aaa
cmp
dec
xor
adc
cld
les
xchg
loop
repz
pushf
inc
and
rcl
arpl
xchg
push
scas
int3
cmps
jbe
pop
mov
jns
test
test
sahf
ficomp
inc
sub
sub
fisub
and
out
mov
and
out
lock
aam
iret
outs
fistp
sub
xchg
or
(bad)
mov
pop
in
xchg
repnz
mov
aad
xchg
je
xchg
mov
imul
jmp
pusha
je
test
push
mov
ja
xor
aas
cmp
enter
in
add
add
shl
imul
jmp
inc
adc
fstp
push
cmp
(bad)
rcr
mov
mov
cmp
repnz
mul
jl
or
xchg
cmp
pop
adc
arpl
imul
push
pop
or
pushf
inc
cmp
pop
mov
add
popa
repnz
mov
rol
or
stos
addr16
repz
aam
and
sub
mov
imul
xchg
sub
jecxz
and
arpl
lds
inc
cmp
mov
push
sbb
add
data16
push
jbe
and
sar
mov
jno
pushf
shl
add
pop
adc
sub
xchg
iret
pop
push
les
(bad)
sbb
and
and
xchg
lods
test
mov
lahf
ror
daa
into
jmp
add
(bad)
jg
and
jmp
lea
outs
ds
mov
pop
out
pop
dec
xchg
test
cmp
push
and
add
movs
pusha
add
lea
pop
push
jmp
xchg
jl
mov
pop
fisttp
add
dec
test
or
ror
ror
(bad)
leave
jns
inc
pop
cmps
adc
sub
out
mov
les
lock
sahf
imul
call
xor
fisttp
popa
dec
cwde
out
cmps
xor
rcl
sbb
je
push
sahf
mov
out
fld
push
(bad)
xor
pop
sbb
push
popf
pop
mov
int
mov
call
xchg
(bad)
cmp
push
adc
mov
add
out
or
cmp
xchg
pop
cld
add
inc
mov
iret
aaa
stc
add
ficom
loop
loope
into
lea
jmp
push
ss
mov
ret
xor
mov
jbe
hlt
cli
jle
or
mov
pusha
push
or
xor
mov
mov
xor
cwde
in
popf
and
iret
add
mov
sti
xlat
adc
nop
jne
rcr
mov
faddp
push
loope
lock
cmp
jmp
mov
aam
ds
outs
aad
cmp
in
mov
pop
(bad)
fsub
(bad)
xlat
sub
ficom
jb
sbb
and
mov
js
enter
fnstsw
fdiv
adc
push
mov
into
add
ja
push
test
lods
call
out
xchg
pushf
cld
lahf
daa
loope
cmp
sub
add
vfnmadd231pd
test
dec
ret
shr
mov
(bad)
cmp
pop
shl
gs
push
pop
imul
jne
mov
ds
sub
je
int3
mov
popa
sub
jno
xor
push
fnstcw
ret
pop
cmp
les
jno
sar
test
mov
in
inc
dec
ficom
movs
mov
loope
dec
push
pop
adc
inc
out
inc
(bad)
in
xchg
loopne
and
cmp
jns
mov
sub
xor
push
cmp
aam
imul
stos
jbe
jno
lock
or
sbb
cdq
push
ret
sub
imul
icebp
test
mov
xor
jecxz
retf
xlat
ds
stos
xor
and
iret
shl
cmc
loopne
pop
jno
pop
add
sub
cld
cld
test
imul
inc
mov
or
jge
test
push
mov
jl
xchg
or
pop
mov
dec
mov
adc
sub
je
dec
or
inc
and
dec
push
sbb
daa
fld
repnz
test
fcmovnbe
hlt
xchg
(bad)
shr
iret
push
pop
in
push
jmp
xchg
lock
loope
les
add
retf
pop
jge
push
inc
stos
andnps
mov
jmp
add
repz
rol
jg
daa
mov
jle
js
mov
invd
push
jns
mov
test
push
jl
out
jmp
mov
in
push
aam
faddp
test
or
inc
aam
outs
xchg
jp
add
aad
cmps
lea
xchg
cmp
sbb
out
shr
lock
xchg
xor
pop
sbb
mov
fst
sub
ja
pop
fld
jmp
mov
out
and
ins
add
stos
jmp
sub
adc
jnp
(bad)
adc
mov
loop
aad
call
in
movs
adc
out
ins
data16
sub
add
adc
pushf
jmp
mov
repz
sbb
test
(bad)
cdq
loope
inc
xor
inc
mov
cmp
jg
gs
mov
xchg
push
cdq
jl
in
jmp
sub
fild
std
inc
(bad)
shl
jmp
cmp
dec
in
mov
push
shl
jns
cmp
mov
push
pop
shr
and
sub
adc
fidiv
ror
xchg
cmp
adc
mov
aad
adc
pop
jne
inc
addr16
cmc
jbe
pop
popa
iret
mov
test
xchg
mov
cmps
mov
push
stos
icebp
das
add
shl
push
xchg
(bad)
cmp
sub
sti
xor
xchg
(bad)
push
fistp
push
xor
adc
sahf
movs
pop
mov
push
in
clc
mov
dec
mov
out
xor
add
cmp
je
mov
adc
sub
sub
mov
jno
out
push
outs
shr
cdq
xor
dec
sub
xchg
es
mov
cmp
inc
or
in
movs
ret
sahf
fidivr
add
add
cmp
data16
enter
dec
xor
xor
inc
cdq
pop
stos
add
add
cmp
jp
ror
addr16
push
push
retf
push
xor
popf
mov
dec
pusha
cmp
out
cmps
jne
inc
dec
test
cli
addr16
scas
push
xor
out
ins
cmp
and
lds
pop
pop
mov
or
popf
xor
adc
jno
fdivr
shl
push
(bad)
sbb
jno
jl
pop
retf
shl
xchg
add
pop
outs
das
lock
push
cmps
test
out
sub
cmps
jae
adc
ret
jno
hlt
in
in
push
mov
dec
mov
repnz
dec
xlat
loop
mov
mov
push
jae
in
or
mov
sbb
mov
test
pop
adc
xchg
retf
xor
outs
adc
jle
xor
mov
xchg
in
enter
and
cmps
adc
add
pop
adc
imul
ds
ja
stc
int3
dec
jae
jne
mov
cs
pushf
or
adc
shr
push
mov
setbe
fdiv
(bad)
(bad)
pop
dec
sbb
mov
dec
pusha
mov
fwait
ss
retf
dec
loope
(bad)
(bad)
jo
jo
mov
ss
push
inc
sbb
and
sar
xchg
call
and
nop
hlt
inc
and
sub
aam
arpl
data16
push
pop
jp
movlhps
inc
cwde
adc
xchg
push
or
lods
dec
movs
cmp
mov
jl
in
dec
jbe
aad
mov
ret
sti
(bad)
jno
out
loopne
int3
dec
sbb
iret
pop
mov
div
enter
sub
test
mov
call
repz
iret
xchg
or
mov
mov
por
xor
pop
mov
mov
sar
jg
mov
add
mov
jg
mov
push
push
or
enter
or
(bad)
mov
mov
aad
(bad)
adc
xchg
xor
shl
adc
pop
aam
dec
lods
dec
cmp
icebp
mov
popf
outs
and
popa
mov
pop
scas
sbb
lods
push
pop
pop
add
int
xchg
dec
retf
cmc
sbb
mov
js
pop
shr
(bad)
cmps
pop
daa
fcmovbe
sti
sbb
push
mov
aas
inc
fsubr
xor
xor
jl
and
stos
dec
cmp
retf
imul
adc
enter
and
mov
add
icebp
scas
mov
fiadd
mov
push
mov
ds
jmp
ret
std
add
adc
sbb
push
mov
dec
mov
inc
shl
pop
cmp
pop
pop
jl
xchg
mov
mov
movs
mov
(bad)
push
xor
mov
jmp
sti
(bad)
dec
and
fbld
mov
sub
cmp
pop
sbb
mov
and
sbb
pop
inc
dec
(bad)
lock
and
out
mov
push
mov
pusha
mov
push
adc
xchg
cmp
mov
(bad)
dec
and
mov
cmps
scas
inc
xchg
(bad)
(bad)
mov
and
loop
add
call
cmp
mov
mov
xchg
sub
rol
dec
jae
lds
mov
dec
out
data16
mov
rol
push
xor
(bad)
cmc
aas
loopne
push
fbld
popa
add
jle
lods
jae
lds
imul
mov
data16
adc
dec
inc
or
lock
or
hlt
(bad)
jle
add
push
imul
xor
data16
test
(bad)
ficom
xor
push
or
daa
xor
jle
repnz
loop
test
cwde
jnp
mov
cdq
inc
dec
mov
cmp
inc
jns
cmp
pop
push
push
fsub
frstorw
adc
jecxz
and
and
fwait
cdq
ror
push
ret
pop
retf
add
xchg
popa
xor
mov
in
push
movs
mov
cli
xchg
ds
pop
sbb
inc
mov
push
cmp
lock
out
in
adc
sbb
imul
xchg
icebp
pushf
rol
cwde
cmp
add
jecxz
fs
pop
shl
add
rcr
jle
and
out
adc
push
push
push
sub
(bad)
pop
into
je
pop
mov
sbb
jp
fdiv
adc
ror
gs
xor
add
jmp
in
mov
pop
fisttp
sahf
repnz
push
xor
push
sbb
rcr
or
cwde
push
or
or
scas
and
xchg
je
sub
cmp
and
sub
pop
into
xchg
xchg
(bad)
ins
inc
push
cmp
ret
jecxz
add
(bad)
das
into
hlt
jnp
cld
lds
push
xchg
pop
and
add
xchg
loope
lods
jb
adc
xor
adc
fwait
and
sbb
jns
popf
test
dec
mov
inc
push
mov
cdq
ins
xchg
jae
int
lds
mov
push
and
cmp
xor
and
fist
es
add
loope
jb
jae
or
pop
xchg
mov
test
test
pop
outs
xchg
mov
ins
jo
mov
xchg
(bad)
cdq
int3
jle
inc
mov
mov
mov
mov
push
out
sub
and
mov
cs
push
aad
stc
and
sbb
adc
in
ss
out
xchg
mov
pusha
lods
or
dec
pop
fnstenv
test
xor
and
imul
sbb
dec
pop
sub
cmp
xchg
and
sbb
daa
cmp
pop
sbb
push
ja
cmps
jmp
sub
cmp
sub
jmp
inc
movs
test
add
test
xchg
sbb
aad
sbb
sbb
adc
push
push
adc
mov
inc
xlat
es
dec
icebp
in
cmp
sbb
xchg
push
inc
scas
jae
lods
or
mov
push
xor
into
lods
std
cdq
inc
popf
cmc
mov
(bad)
cmps
xchg
shl
pop
pop
retf
push
sbb
xchg
repz
out
in
fstp
out
sub
(bad)
and
scas
jne
xor
das
jne
pop
xchg
mov
jmp
inc
aaa
sbb
mov
dec
cmp
retf
add
mov
jg
scas
pop
adc
int
aad
sub
push
inc
call
inc
jle
data16
(bad)
cmp
mov
in
sub
adc
lahf
shr
add
in
shl
loop
xor
stos
xor
sub
sbb
inc
int
rcl
test
add
xchg
ja
ins
inc
dec
outs
fdiv
sub
addr16
scas
xchg
adc
push
jnp
fdiv
mov
inc
jno
out
cmp
repnz
xor
ret
mov
inc
outs
or
adc
jae
or
xchg
shl
sar
inc
jbe
retf
xchg
movs
in
jno
push
mov
arpl
mov
xchg
cmps
das
mov
adc
loop
inc
jmp
mov
mov
add
mov
dec
outs
ja
retf
loopne
dec
repz
mov
sbb
and
rcl
dec
int3
repnz
jo
pop
push
push
imul
pop
mov
out
jbe
mov
or
ss
scas
and
inc
jno
jbe
(bad)
adc
inc
mov
out
shr
mov
push
pop
and
adc
mov
(bad)
rcl
sbb
not
aaa
jnp
test
and
cmp
rcl
pop
jle
mov
sahf
sub
dec
aam
ret
in
adc
inc
in
xchg
jp
xlat
outs
mov
in
stc
imul
(bad)
int
aam
pop
jno
add
push
ret
les
ficomp
push
dec
stc
xlat
leave
mov
mov
imul
(bad)
out
(bad)
retf
sbb
push
fwait
aas
push
mov
mov
or
fmul
out
jle
xchg
sti
mov
push
pop
(bad)
test
lods
cmp
cmp
adc
fdivp
and
dec
pushf
js
pmullw
or
pop
xchg
mov
pop
dec
dec
add
stc
ds
int3
scas
mov
iret
mov
mov
shl
mov
rol
mov
or
add
dec
jg
cmp
imul
iret
push
mov
in
jge
neg
lds
lods
dec
adc
pop
or
stos
push
mov
in
xchg
cmp
push
repz
xchg
cmp
pop
test
jno
adc
out
dec
sahf
pop
dec
(bad)
and
jl
aaa
add
outs
and
leave
stc
adc
xchg
mov
out
adc
sbb
ror
dec
(bad)
aad
mov
jp
xchg
jo
mov
imul
push
iret
not
mov
mov
mov
mov
out
cmp
es
add
push
push
js
rcl
jno
pop
mov
and
mov
mov
jg
push
mov
cmp
in
inc
test
mov
dec
jp
cld
mov
dec
mov
push
enter
out
sbb
push
fsub
stc
nop
mov
cs
xchg
out
inc
xchg
jmp
dec
cmc
mov
jecxz
add
or
nop
jl
xor
movs
test
js
cdq
stos
mov
sbb
outs
xchg
test
dec
or
inc
jae
loopne
push
inc
lods
xor
fmul
adc
jmp
ficomp
cmp
pop
addr16
and
xchg
aam
push
xlat
push
jp
xchg
inc
loope
(bad)
mov
outs
add
inc
or
cmps
fdivr
adc
idiv
inc
pop
lds
movs
add
mov
cld
dec
mov
mov
ds
dec
ret
mov
mov
enter
js
jle
ins
js
add
sar
inc
sub
lods
stos
fild
stos
jmp
and
or
inc
addr16
fnstsw
dec
data16
retf
dec
pop
sbb
daa
(bad)
out
jno
pushf
test
aaa
jb
pop
sbb
push
ins
and
les
adc
cmp
push
int
fwait
retf
xor
sub
shr
push
outs
fadd
or
push
scas
ret
push
push
sbb
mov
jo
or
xor
rol
mov
jae
mov
(bad)
ins
pop
cwde
and
scas
inc
test
mov
mov
xchg
gs
dec
xlat
imul
mov
mov
dec
add
and
(bad)
and
sub
call
in
arpl
add
push
movs
push
adc
and
ret
xchg
popf
add
aad
enter
imul
(bad)
pop
sub
dec
loop
mov
and
int
inc
popa
mov
dec
aas
pop
icebp
push
daa
mov
fwait
popa
inc
and
loop
xchg
bound
cdq
popa
sti
inc
dec
stos
push
inc
mov
outs
push
xor
fld
cmp
movs
sar
lock
outs
std
int3
sbb
jmp
cmp
stc
mov
mov
and
add
cmp
push
aam
scas
mov
outs
lds
stc
mov
fwait
inc
sar
arpl
xchg
add
movs
pop
sub
mov
ss
shr
cmp
push
push
in
test
add
xor
std
mov
loop
sub
popa
dec
push
mov
loopne
inc
(bad)
xor
xor
push
adc
icebp
xchg
jmp
pop
jo
push
jae
imul
imul
aam
cmp
and
xor
std
loop
pop
mov
inc
daa
adc
cli
mov
and
in
xchg
fucomi
in
mov
mov
(bad)
xor
loop
iret
xchg
loopne
jecxz
ja
ret
popa
fist
sub
sub
faddp
push
sub
sahf
sbb
push
mov
xchg
push
pop
std
ror
jmp
loop
scas
xchg
aaa
daa
adc
pop
cmp
test
jb
cli
and
xsaves
dec
ss
xchg
sahf
jns
lea
adc
fldcw
cli
pusha
lds
test
cmps
mov
mov
int
ret
and
pop
pop
xchg
pop
mov
or
sbb
add
and
outs
xor
push
pop
mov
add
mov
loope
(bad)
push
sbb
test
pop
stc
jno
test
loope
aas
mov
imul
rcr
out
ja
jl
cmps
movs
sub
(bad)
adc
js
inc
mov
jnp
icebp
pusha
fidiv
fimul
pop
xchg
inc
jg
xchg
mov
xchg
les
push
inc
fucomi
pop
aaa
dec
popa
xchg
call
dec
xchg
fwait
cmp
arpl
xor
jle
sbb
stos
xor
push
xchg
out
adc
int
inc
mov
cmp
adc
loop
mov
call
sar
retf
jb
mov
(bad)
popf
imul
pop
fild
int3
dec
js
lock
push
xor
and
xchg
das
cmp
fild
xchg
scas
push
or
jl
jnp
xor
sub
inc
jl
add
retf
bound
mov
(bad)
lock
push
popa
add
mov
sbb
mov
mov
xchg
push
xor
call
aad
popa
mov
stos
sub
xchg
aam
push
movs
std
stc
cld
scas
add
nop
pop
data16
rcl
pop
in
cmp
dec
or
mov
sub
repnz
fs
int3
mov
stos
jle
out
ds
mov
push
ss
inc
pop
imul
call
or
or
scas
mov
or
call
jge
jno
retf
aaa
mov
pop
cmp
ss
sub
push
mov
xchg
stos
shl
stos
jno
rol
fdivr
xchg
ficomp
adc
loopne
xchg
test
jbe
dec
enter
inc
mov
in
call
int
je
outs
stos
push
inc
pop
jo
mov
mov
cmp
daa
lods
ja
xchg
push
sbb
mov
jmp
push
mov
fdivr
push
test
rep
or
cmp
shl
push
ja
stc
mov
cmps
addr16
mov
lahf
jno
repz
and
sbb
fldcw
cmp
sbb
loopne
xor
out
mov
push
fdivrp
and
xchg
sbb
push
fistp
pop
inc
cdq
cwde
dec
push
inc
jmp
fwait
push
adc
jge
iret
push
into
inc
xchg
cdq
in
lock
cmp
mov
ds
xchg
sahf
xchg
pushf
(bad)
loope
and
neg
(bad)
cld
rol
cmp
cld
push
in
pop
mov
sbb
sbb
ins
add
les
dec
sbb
push
jg
arpl
cmp
leave
in
mov
jle
stos
shl
(bad)
(bad)
hlt
retf
movs
jae
mul
or
mov
loope
test
jp
leave
loope
out
xchg
aad
cmp
adc
test
ja
mov
ret
jnp
jg
add
imul
sar
hlt
dec
fadd
je
int
jns
test
fsub
enter
push
sbb
pop
push
repnz
fadd
cmp
pop
fistp
xor
add
sbb
pop
fs
rol
aad
adc
push
dec
(bad)
cmc
pop
ret
sti
scas
ret
ja
xchg
enter
cmp
mov
push
in
cmps
ret
add
call
lods
outs
cmp
fld
xor
(bad)
and
cwde
sbb
xlat
ss
inc
cdq
out
je
jnp
or
pop
pop
pop
jae
(bad)
rol
xor
ja
jmp
ret
jl
int
push
xlat
add
xchg
jae
jnp
ja
inc
cmps
sub
popa
aad
clc
adc
leave
mov
je
xchg
movs
dec
call
pusha
and
imul
mov
add
dec
aas
(bad)
movs
out
nop
push
movs
xchg
hlt
mov
add
xor
or
in
adc
addr16
xchg
lods
sbb
outs
jae
add
or
dec
lods
xor
xor
in
arpl
mov
inc
and
loopne
test
jns
fidivr
and
(bad)
dec
sti
in
rol
ins
test
iret
add
cmp
add
fs
sbb
sub
mov
test
les
inc
scas
push
xchg
or
aaa
dec
cld
xchg
gs
es
cmp
xor
cdq
mov
pop
movs
(bad)
cmp
movs
mov
ins
mov
outs
sub
cs
inc
daa
mov
mov
mov
out
and
adc
inc
(bad)
pop
outs
mov
cdq
into
mov
popf
fmulp
mov
cmps
pop
(bad)
cdq
jge
pop
add
xchg
cld
(bad)
jmp
dec
adc
cmc
add
sbb
and
sub
sub
mov
sahf
stos
xor
mov
cs
xor
jge
inc
add
stos
(bad)
adc
and
or
push
push
cmp
xchg
pushf
sub
pop
push
(bad)
hlt
push
(bad)
loope
fld
outs
nop
push
and
rcl
add
jp
mov
nop
bound
mov
enter
lds
add
jnp
and
nop
arpl
ret
inc
test
fisubr
xor
sbb
adc
xor
mov
pop
pop
jmp
data16
inc
jl
mov
lds
jno
shl
stos
rol
adc
in
cmp
mov
test
add
sub
mov
mov
sub
pop
mov
pop
and
clc
imul
inc
or
scas
or
(bad)
mov
div
sbb
div
xor
cdq
arpl
jb
inc
(bad)
outs
mov
or
inc
js
push
sbb
data16
mov
or
and
sti
fyl2xp1
and
push
inc
and
mov
mov
push
mov
ret
mov
pop
sub
outs
mov
adc
or
hlt
popfw
push
idiv
loope
(bad)
sar
and
jmp
icebp
mov
lods
aad
ins
pop
inc
sub
ficomp
dec
imul
cmp
inc
js
sub
imul
popa
inc
mov
adc
test
mov
loop
and
xchg
out
mov
lds
in
mov
push
ret
data16
add
mov
(bad)
and
test
push
mov
ret
loop
xchg
leave
pop
ror
sbb
xlat
and
cmp
aam
int
mov
jb
mov
fsubr
mov
nop
adc
pusha
xchg
stc
cli
dec
inc
push
adc
repnz
push
and
aam
out
jnp
repz
repz
xchg
jmp
cmp
or
loop
popa
inc
jmp
push
or
arpl
test
movs
outs
jge
pop
stc
inc
inc
out
in
push
idiv
cli
mov
xor
jle
add
and
cmc
leave
(bad)
test
dec
and
pop
push
test
mov
aas
mov
mov
inc
ret
sbb
inc
or
mov
push
lods
inc
das
(bad)
and
fwait
scas
fucom
pop
std
enter
jo
pop
lods
inc
mov
pop
cld
mov
call
test
sub
mov
out
pop
popf
sbb
mov
mov
add
(bad)
movs
dec
inc
sub
mov
inc
adc
retf
sub
xchg
sub
jmp
sbb
mov
mov
arpl
loop
fucomi
sbb
sub
add
rol
in
inc
lods
lods
mov
(bad)
pusha
jb
mov
leave
dec
and
sub
jbe
xchg
add
or
popf
ret
jge
inc
test
add
cmps
sbb
std
rcr
dec
push
cmp
ja
adc
out
fmul
je
not
jmp
push
mov
mov
mov
cmp
outs
cld
out
ret
add
xor
xor
stc
pop
inc
and
xchg
adc
test
inc
ins
es
ins
jl
push
aam
sub
lock
out
cmp
loop
fisub
mov
pusha
cmc
jbe
add
(bad)
mov
outs
push
sbb
inc
jge
mov
fsubr
stos
scas
scas
xchg
dec
adc
pop
mov
shl
imul
mov
ror
(bad)
dec
pop
dec
cmps
pop
nop
stos
pusha
add
call
ror
inc
mov
and
sbb
adc
jbe
icebp
mov
movs
ret
jg
pop
cmp
loopne
mov
cs
rcl
mov
mov
cld
dec
add
jle
add
inc
dec
adc
aad
xchg
pop
mov
popa
in
and
(bad)
fdiv
jg
mov
inc
cmp
inc
sti
call
sub
cmp
mov
ins
pop
sbb
jb
ror
ja
stos
cli
fs
sub
cmp
aaa
fwait
xchg
jl
sahf
inc
push
rcl
into
adc
jo
out
es
retf
sbb
fisub
mov
ins
push
dec
inc
icebp
in
pop
pop
xor
sbb
rol
fisttp
inc
(bad)
bound
push
test
and
movs
push
adc
mov
jne
lahf
push
mov
cmps
in
pop
jnp
jp
jge
push
dec
aas
mov
out
test
mov
out
mov
scas
jp
sub
mov
pop
fwait
or
mov
mov
imul
ja
iret
push
in
mov
rol
push
sbb
xchg
fdiv
test
adc
lahf
scas
addr16
and
add
call
jno
add
cmc
popa
add
out
pop
push
std
icebp
inc
out
out
rol
xor
cwde
lahf
adc
add
(bad)
mov
and
xor
inc
dec
jmp
pop
xchg
js
ret
jne
int
enter
inc
ins
rol
adc
inc
xchg
cmc
jl
push
rcl
mov
or
fadd
inc
add
add
xchg
jp
sub
lods
dec
ins
inc
adc
sbb
test
pop
in
xchg
xchg
(bad)
add
inc
pop
hlt
ins
inc
mov
lea
xor
cmp
repz
and
cmp
jl
fstp
pop
adc
jmp
fwait
retf
mov
(bad)
mov
or
adc
scas
test
mov
pop
in
mov
adc
push
pop
cmc
push
xchg
sbb
nop
mov
mov
stos
dec
dec
and
jl
outs
into
stc
push
imul
ja
mov
sbb
scas
fchs
lea
sbb
imul
fwait
pop
sub
xchg
jp
add
call
icebp
mov
sbb
push
xor
pop
in
jae
jge
and
push
jae
repnz
mov
or
sub
pop
loopne
sub
pop
jae
jbe
mov
mov
cld
outs
rcr
retf
xor
int3
call
mov
inc
cli
(bad)
call
add
gs
mov
jmp
outs
jle
lahf
push
shl
and
arpl
fisttp
nop
and
stos
inc
push
out
ficomp
pop
xor
(bad)
mov
mov
aas
stc
mov
test
hlt
xor
inc
sbb
adc
jle
inc
mov
enter
xchg
xchg
inc
sbb
ss
sar
in
mov
sbb
in
pop
test
(bad)
xor
clc
aad
push
pop
(bad)
pop
or
test
cmp
cmp
(bad)
dec
push
lock
inc
scas
or
je
rcl
imul
pop
xlat
fild
addr16
cli
xchg
pop
xor
fild
int3
shl
push
dec
xchg
jle
fist
loop
mov
aaa
xchg
cwde
gs
test
mov
sahf
mov
sub
cdq
xor
ret
and
sahf
jg
inc
jmp
mov
add
mov
cwde
pusha
jbe
jo
fld
inc
mov
ror
in
adc
hlt
jmp
js
std
stos
int3
mov
icebp
into
pop
pop
pop
repz
and
cmc
jmp
jge
mov
xchg
(bad)
fld
cli
and
(bad)
mov
push
pop
ins
pop
sbb
repz
cmps
sbb
jp
ret
and
or
pop
jmp
lea
stc
mov
cmps
push
sbb
xchg
push
fs
add
out
mov
ins
jmp
das
or
mov
xlat
sbb
cmps
xchg
outs
or
popf
sbb
test
push
dec
enter
test
cmp
jmp
xor
nop
or
or
add
mov
push
add
push
mov
dec
or
call
adc
cmp
fs
jne
test
repnz
out
mov
push
out
test
cmc
inc
ret
rol
xor
stos
push
mov
sar
mov
bound
adc
call
dec
mov
push
dec
mov
adc
cmp
xor
mov
pop
and
aas
cmps
sbb
pop
add
sub
ds
xchg
mov
out
daa
mov
ret
popa
push
add
ret
pop
out
cmp
and
mov
jg
cmp
adc
cld
ret
pop
push
lods
push
mov
ins
into
lock
out
out
enter
sbb
xor
xor
cmp
or
jb
or
sbb
into
ret
sub
jmp
loopne
mov
(bad)
inc
lahf
push
aam
adc
dec
(bad)
shl
push
les
out
and
hlt
loope
add
adc
mov
adc
sbb
cmp
retf
push
cmp
jnp
in
inc
inc
jecxz
ins
sti
sbb
sahf
add
sbb
inc
xor
mov
mov
sbb
mov
add
mov
pop
rep
hlt
mov
test
loop
jne
movs
dec
mov
cmp
xor
ins
mov
pop
sub
bound
cdq
hlt
fcom
jl
inc
jae
stos
adc
lock
cs
(bad)
mov
xlat
dec
int3
js
jmp
or
cwde
leave
add
adc
jmp
mov
ret
jle
dec
or
icebp
repnz
in
push
pushf
mov
jecxz
out
sbb
mov
dec
jb
jbe
(bad)
jmp
or
xchg
push
xchg
mov
push
cmp
into
pop
dec
sbb
je
inc
(bad)
rcr
xlat
inc
dec
sub
pusha
push
rcr
mov
aaa
out
in
lahf
adc
aam
mov
(bad)
test
xor
sar
cld
rcl
test
aad
pop
add
outs
lds
loope
(bad)
sbb
loope
adc
jg
loopne
jp
inc
fwait
sub
jg
sub
add
mov
iret
inc
sbb
fld
not
xchg
sub
jp
inc
mov
or
int3
shr
stos
cmp
(bad)
fistp
in
pop
js
cmp
add
enter
pop
loop
mov
push
jb
sti
push
mov
pop
inc
addr16
inc
or
sbb
pop
pop
ja
pop
xchg
xchg
outs
sub
fiadd
fwait
dec
stc
or
or
xchg
(bad)
xor
hlt
xchg
jae
pop
cmc
test
pop
mov
movs
loope
shl
ja
pop
retf
jecxz
ds
stos
movs
jbe
and
aad
lods
and
jbe
rcr
push
(bad)
es
(bad)
sbb
sbb
icebp
lahf
adc
mov
xchg
mov
jp
lahf
cmp
push
ss
mov
imul
leave
test
and
jns
mov
sti
sub
hlt
mov
xchg
or
xchg
dec
cmp
xchg
imul
adc
je
call
inc
imul
loop
in
add
add
jecxz
(bad)
jge
ja
xor
mov
jmp
mov
inc
push
add
mov
into
or
cli
fcos
idiv
pop
pop
jl
sbb
mov
ins
jbe
stc
dec
mov
aas
call
xchg
test
xchg
js
xor
cmp
adc
lods
into
mov
jmp
jo
adc
or
and
sbb
fidiv
jmp
(bad)
sub
add
clc
ds
bound
scas
and
shl
push
sub
sbb
ficomp
and
pop
dec
rep
jb
inc
sub
rcl
in
pushf
int3
into
es
leave
outs
fs
xor
dec
pop
push
popf
pop
movs
sahf
ror
mov
fadd
nop
cmps
xor
test
xor
mov
bound
fisub
inc
cmp
sbb
fcomp
out
push
cmc
dec
or
mov
cmps
mov
mov
jecxz
sar
loope
adc
push
inc
ja
mov
pop
or
mov
xlat
mov
in
ins
fist
jmp
push
cmp
mov
mov
push
or
xor
jmp
xchg
xchg
mov
jbe
sub
add
sti
mov
and
outs
inc
sbb
aad
or
arpl
jno
arpl
dec
xchg
and
mov
sub
xchg
xor
(bad)
cmp
aad
inc
daa
and
pop
retf
arpl
fcmovb
std
out
rcr
shl
outs
push
and
add
lahf
mov
hlt
adc
or
test
sub
xchg
cmp
and
aas
cmp
fstp
fst
cmp
fisub
cmps
xor
test
fld
repz
outs
cwde
pop
mov
lods
test
cmp
xor
call
cmp
push
jbe
arpl
pop
rcl
add
repnz
(bad)
mov
push
outs
out
inc
and
stc
in
push
push
xchg
push
pusha
xor
fnclex
popa
pushf
stos
and
mov
pop
retf
stc
mov
cmp
ins
mov
push
adc
mov
pop
xor
pop
sbb
push
outs
add
sbb
fmul
mov
and
cmp
cmp
clc
mov
inc
aad
jg
ret
pop
sub
pop
cdq
(bad)
out
cs
and
fisub
fiadd
out
mov
ficom
inc
out
jnp
mov
repnz
push
mov
aam
in
sbb
cmp
adc
sub
xor
add
shl
mov
sbb
jp
retf
cld
fstp
cmp
mov
leave
adc
add
jle
sbb
or
loope
sub
stc
push
jb
sub
push
push
cwde
test
leave
inc
sbb
(bad)
adc
push
or
(bad)
jmp
inc
ret
cmp
imul
jns
lods
xchg
scas
or
loop
jmp
dec
popa
or
arpl
sar
mov
je
mov
pop
adc
and
mov
sbb
movs
and
mov
push
dec
and
inc
pop
pop
pop
xor
aas
inc
test
mov
(bad)
shl
and
and
rcl
retf
push
push
adc
inc
mov
in
test
call
test
mov
call
xor
cmp
push
push
sbb
dec
cs
dec
dec
jae
ret
call
into
add
cmp
(bad)
push
xchg
outs
test
fsubr
shl
outs
outs
int
and
ins
or
loopne
jns
ds
adc
mov
das
inc
sbb
sbb
mov
retf
lds
mov
ret
dec
scas
sub
inc
adc
and
nop
ret
sub
cmps
or
jecxz
loopne
cmp
nop
mov
jae
popf
iret
je
lods
dec
inc
into
pop
mul
and
ins
and
push
mov
out
or
mov
(bad)
sbb
stos
jns
js
ins
sbb
or
(bad)
add
sbb
lds
enter
fcomp
inc
cmp
inc
jl
lds
mov
mov
loop
mov
repnz
mov
dec
mov
and
pop
adc
dec
jmp
dec
ret
pop
push
mov
das
xchg
mov
mov
xchg
mov
retf
push
push
es
aaa
mov
call
retf
xor
push
mov
adc
outs
test
fsubr
xor
sbb
mov
cdq
xchg
cmp
lock
jge
jl
imul
lods
aam
xor
sub
aam
and
cmc
lods
(bad)
int
xlat
pop
cdq
ins
bound
gs
ss
fs
pop
cmp
dec
xor
adc
jecxz
adc
clc
(bad)
mov
pop
lods
popf
out
sub
add
std
test
cmp
mov
lock
xor
lods
sub
mov
std
imul
ret
in
mov
pop
je
dec
pop
in
fnstsw
(bad)
es
pusha
lock
iret
cmp
mov
loopne
xchg
or
push
fisub
jle
push
fldenv
mov
add
repz
and
or
and
add
leave
repz
pushf
xor
jle
xor
cwde
dec
lds
and
xor
clc
xchg
push
pop
rcr
pusha
int3
mov
dec
addr16
mov
cmps
neg
aam
push
mov
and
xchg
sbb
fabs
mov
sbb
fsub
cwde
add
fimul
push
in
movs
mov
mov
adc
sar
jg
int
push
push
xchg
test
and
mov
outs
sub
pop
sub
lock
(bad)
cli
xchg
sbb
or
push
in
mov
mov
es
add
loopne
jb
test
fsub
pusha
data16
mov
(bad)
jmp
push
pop
fstp
addr16
pop
inc
pushf
repnz
mov
rol
adc
cmp
jno
xchg
inc
cmp
scas
xor
retf
push
out
ins
cmp
data16
in
jb
adc
push
mov
mov
int
test
cld
mov
addr16
add
sub
stc
xchg
inc
mov
push
or
mov
daa
in
push
aam
data16
push
mov
aaa
jg
les
mov
jbe
jae
fmul
dec
mov
jg
lods
cmps
in
fs
fisttp
out
pop
leave
cmp
lahf
pop
(bad)
js
mov
pushf
das
jge
inc
ja
(bad)
pusha
adc
xor
mov
lea
pop
aam
mov
loopne
mov
xor
das
les
bnd
mov
ficomp
push
push
movs
jmp
xchg
aaa
mov
fsub
xchg
sbb
pmulhuw
(bad)
push
jns
test
jno
mov
ss
sbb
cmp
lock
std
add
cs
enter
push
pop
pop
mov
pusha
and
sub
jmp
pop
ret
popf
jl
jge
jle
(bad)
xor
shl
jmp
ins
not
outs
jnp
cmp
imul
popa
ja
jno
enter
mov
(bad)
(bad)
pop
or
das
pop
inc
arpl
das
pop
cmp
pop
xor
lods
imul
outs
jle
aam
lds
inc
push
cmc
dec
shl
cdq
loopne
(bad)
mov
fild
pusha
xor
outs
(bad)
dec
push
xor
clc
inc
je
verr
das
cwde
imul
mov
(bad)
(bad)
cmp
clc
sahf
mov
daa
call
in
mov
xchg
icebp
retf
arpl
leave
jo
adc
xchg
add
cmc
mov
sbb
loopne
ret
sub
sar
mov
sahf
or
xchg
or
in
(bad)
ds
mov
aad
push
mov
arpl
das
mov
adc
test
cmp
sub
push
push
ja
movs
aas
sahf
sbb
cdq
mov
inc
jmp
mov
mov
test
data16
dec
aas
neg
mov
in
test
call
adc
add
stos
sub
loop
retf
push
in
int3
jl
mov
lahf
adc
adc
mov
cmps
and
test
mov
int
or
adc
inc
test
mov
mov
pop
xor
mov
scas
dec
ins
pushf
(bad)
ret
shl
add
outs
mov
les
ret
icebp
sbb
cmps
cmp
rol
mov
jle
mov
fdiv
lahf
in
push
div
fild
mov
int
mov
in
mov
into
mov
jne
stos
out
jp
out
and
addr16
mov
in
out
enter
cmp
into
repz
jbe
je
dec
sti
rcl
aam
sar
cmp
adc
std
scas
add
lea
or
addr16
daa
adc
inc
aas
std
(bad)
mov
and
xchg
mov
jne
cdq
fcom
mov
adc
add
jmp
sub
jp
push
pop
arpl
sti
push
pop
test
dec
(bad)
sbb
(bad)
ds
pop
jle
je
inc
adc
or
outs
ret
cmc
imul
sub
push
push
scas
cmc
mov
inc
lods
inc
in
pop
test
mov
mov
xor
shl
jnp
xchg
rol
or
mov
frstor
mov
xor
or
test
sahf
test
or
movs
jp
jbe
mov
cmp
jge
sub
outs
mov
add
or
stos
dec
(bad)
fisttp
pop
and
and
mov
inc
push
mov
dec
pop
mov
xchg
jle
sub
stos
adc
loopne
sub
out
int3
call
cmps
(bad)
out
daa
sub
mov
fsub
or
fs
call
out
jle
shr
mov
push
mov
daa
aad
ss
jne
inc
add
dec
xchg
stc
mov
xor
push
ret
dec
sub
fistp
cmc
mov
fnstenv
mov
sbb
cmp
push
xchg
mov
cdq
frstor
nop
sbb
sti
dec
mov
sub
pop
adc
cmc
pop
push
leave
mov
dec
cmp
imul
gs
ror
adc
stos
cli
xor
clc
and
mov
loope
push
mov
pushf
and
pop
test
scas
mov
jb
test
hlt
enter
mov
xor
xchg
jns
pop
sub
mov
add
hlt
and
(bad)
imul
push
add
imul
clc
idiv
xor
pop
push
sar
pop
iret
out
cmps
pushf
or
pushf
mov
es
jns
out
outs
fidiv
lea
jno
mov
mov
(bad)
jecxz
cdq
push
retf
mov
dec
jae
aam
mul
cmp
mov
inc
call
sar
ret
jmp
push
adc
in
ins
jle
dec
or
fstp
mov
mov
movs
in
push
mov
push
test
shr
and
jmp
gs
sub
(bad)
adc
mov
sub
daa
ret
pop
and
pop
call
test
cmp
nop
pushf
add
or
jbe
push
mov
(bad)
jl
jmp
les
scas
retf
or
shr
stc
imul
cdq
popa
ret
sub
xchg
push
cs
mov
pop
push
into
sub
int
dec
sahf
inc
stos
push
cmp
retf
aaa
in
int3
adc
push
pusha
fimul
inc
push
add
mov
movzx
test
push
(bad)
pop
add
mov
(bad)
jg
retf
mov
inc
lahf
call
std
dec
mov
xor
(bad)
and
pop
and
add
nop
ds
imul
repz
or
jmp
inc
mov
aaa
push
mov
pop
loopne
cmps
sub
adc
mov
adc
fmul
push
dec
cmps
pop
ss
xchg
push
or
sbb
loop
cmps
mul
add
iret
out
das
jle
dec
add
add
xchg
loopne
ins
mov
out
ins
mov
test
mov
loop
rcr
pop
mov
add
jbe
cmp
mov
mov
dec
stc
sbb
outs
cli
xor
mov
jge
mov
push
aam
xchg
aad
fcom
push
in
sbb
mov
push
sbb
jmp
pop
shr
imul
sbb
sbb
scas
ins
ss
dec
mov
push
sbb
mov
sbb
push
cwde
jmp
into
dec
dec
icebp
cmp
(bad)
sar
pop
aad
ins
push
cs
jae
jmp
cmp
outs
dec
xacquire
inc
cmp
int
cmp
loop
in
fcom
jo
jns
js
mov
fidivr
cwde
xor
pop
xor
adc
aas
cmp
test
sar
push
add
sbb
ret
jns
xchg
test
fiadd
les
js
je
fld
test
xchg
jecxz
mov
push
cmp
je
xchg
lods
les
jmp
or
mov
or
mov
jnp
loopne
push
lahf
inc
mov
add
(bad)
imul
adc
push
push
imul
add
aad
jmp
test
sub
xor
std
dec
dec
dec
push
idiv
mov
cmp
mov
push
ret
mov
ss
add
xor
adc
stos
outs
fisub
jbe
sbb
xchg
adc
aaa
ret
xchg
call
mov
and
jmp
mov
adc
adc
cmps
push
sbb
jae
loopne
lahf
jmp
cmp
xchg
xchg
(bad)
fbstp
cwde
lods
push
add
sbb
outs
adc
xchg
xor
and
push
push
pop
dec
div
jg
rcl
inc
(bad)
mov
or
mov
jnp
mov
movs
mov
jg
cmp
push
test
xchg
push
js
je
test
outs
cmp
xchg
stos
cmps
les
sbb
fs
or
je
jae
ja
cmp
fs
call
daa
imul
jp
lods
inc
or
dec
rcl
lods
sbb
sti
and
cmc
fucomp
push
inc
mov
and
pop
arpl
adc
inc
ror
mov
cmp
cwde
sub
cld
dec
inc
test
xchg
iret
pop
pop
hlt
ret
cdq
pop
jl
and
jmp
movs
sbb
lds
push
aas
inc
xor
jle
adc
aam
xor
rol
ret
push
test
lock
js
xor
dec
retf
(bad)
stos
imul
jg
push
mov
faddp
mov
inc
dec
mov
push
stc
mov
or
das
retf
push
data16
adc
mov
je
add
ror
daa
pop
fadd
push
(bad)
cmc
jmp
adc
or
stos
shr
sub
mov
xchg
retf
icebp
add
jle
in
lds
xor
push
mov
jp
mov
inc
mov
shl
lahf
sbb
and
pop
retf
dec
xlat
and
pop
and
(bad)
adc
or
or
dec
cmps
fisttp
mov
ja
(bad)
shl
mov
jp
(bad)
(bad)
cmp
sbb
and
ss
(bad)
mov
jns
mov
out
push
cmps
idiv
adc
sub
mov
mov
imul
inc
outs
rcl
fstp
bound
dec
mov
neg
jp
test
xchg
jmp
aam
test
loopne
mov
cmp
xchg
and
pop
sbb
mov
in
das
push
ret
rep
pop
imul
xchg
mov
xor
(bad)
adc
jb
ror
cwde
add
pop
shl
popf
imul
and
mov
test
xchg
fnsave
sub
fcomp
cmp
mov
(bad)
jne
(bad)
movs
sbb
mov
out
ds
pop
cdq
mov
push
mov
mov
xchg
in
mov
mov
dec
pop
add
mov
mov
sar
mov
stos
repz
inc
std
jo
icebp
ffreep
mov
adc
out
adc
call
call
arpl
sub
inc
push
adc
out
hlt
adc
cmp
fld
dec
add
pop
dec
and
add
scas
aaa
(bad)
jl
outs
mov
enter
mov
pushf
out
das
popa
retf
retf
inc
outs
in
sbb
and
sti
jecxz
enter
adc
dec
les
cmp
cld
push
mov
push
cmp
or
fcomi
cmps
out
test
scas
xor
or
or
push
loop
xlat
push
jno
cmp
fwait
mov
ror
ss
adc
movs
hlt
dec
mov
add
push
mov
mov
inc
cmp
call
mov
leave
push
mov
cmps
push
xor
xor
jge
mov
add
pop
and
jb
mov
inc
mov
push
pusha
push
pop
clc
xchg
push
xlat
mov
stos
sbb
sub
mov
int3
cwde
jecxz
sub
aas
and
dec
push
or
pop
mov
iret
stc
jne
int3
out
cmc
je
or
addr16
inc
and
mov
xchg
add
dec
ins
aas
push
in
jmp
fcom
lods
popf
in
cmp
xor
pop
jb
inc
les
fcom
mov
push
test
adc
xor
jb
out
fs
jmp
adc
dec
jle
in
imul
cmc
cdq
mov
xchg
xchg
ds
stc
xchg
xlat
arpl
pop
ins
push
hlt
cmp
or
add
jno
in
out
mov
shl
cmp
les
dec
xchg
pop
jmp
ja
xor
cmps
neg
out
ins
or
sbb
dec
fisttp
ins
cmp
shr
not
not
xor
xor
pop
jge
inc
and
xor
fiadd
cmps
xlat
pop
mov
retf
push
push
or
ror
xor
es
repz
cmps
cld
xchg
fadd
test
xchg
sahf
dec
pop
jg
xor
(bad)
inc
out
mov
xor
lahf
mov
xor
icebp
pop
xchg
loopne
and
pop
and
mov
jae
ret
in
ss
(bad)
fld
xchg
cwde
xchg
jge
repz
retf
stos
cmp
sbb
movs
push
sub
and
(bad)
out
mov
sbb
jl
aaa
sub
push
enter
mov
in
adc
hlt
xchg
cld
adc
icebp
in
scas
outs
and
cmps
shl
sbb
(bad)
data16
repnz
or
out
popf
mov
push
sub
mov
add
xor
sub
mov
lock
cli
call
retf
arpl
cmp
shl
inc
popa
and
cmp
neg
repz
push
xchg
lods
mov
jmp
mov
cwde
stos
cmp
test
and
cdq
dec
jne
and
sub
jb
mov
jo
call
ret
add
popf
jecxz
jno
push
inc
xor
clc
fnstcw
ds
popf
push
rcl
arpl
iret
stc
shl
pop
mov
lods
(bad)
mov
mov
adc
xchg
mov
loope
xor
pop
dec
add
retf
call
mov
sub
cwde
or
cmp
cld
fnsave
pop
test
cmc
icebp
jmp
mov
push
pop
lahf
clc
sahf
push
out
xchg
mov
sbb
dec
pop
adc
ret
xchg
sub
jl
sbb
jmp
(bad)
fild
sub
push
cmp
jge
ss
or
xor
or
repz
inc
int
or
test
loopne
jle
bound
arpl
jmp
fistp
push
mov
sub
mov
inc
xchg
(bad)
cwde
jle
not
xlat
pop
stc
jns
addr16
loop
icebp
sub
(bad)
cmps
or
xor
cmp
cli
repz
add
mov
repnz
test
les
jb
aas
sub
sub
cmps
cmp
iret
scas
(bad)
push
mov
sti
sbb
loope
mov
add
mov
call
(bad)
retf
lods
test
jbe
sbb
xchg
push
lods
leave
lds
add
mov
cmp
test
daa
pop
int
sub
call
mov
fmul
cmp
pusha
pop
fstp
sbb
pop
div
loope
inc
stos
jno
aad
sbb
push
xchg
cli
mov
fbld
outs
sar
mov
push
xor
xchg
std
bound
pop
mov
jg
hlt
jle
retf
int3
add
dec
out
fdivr
lea
jle
shl
sahf
push
cmp
add
ins
jge
shl
sbb
pop
pop
mov
enter
(bad)
and
mov
pop
outs
sub
in
sbb
jnp
popa
repnz
loopne
inc
outs
jl
cmp
sub
push
gs
sub
dec
mov
test
mov
cmp
adc
lds
pushf
cdq
sbb
and
sub
aas
sub
mov
or
ret
call
scas
nop
ins
ds
cdq
mov
mov
mov
out
mov
or
xor
sub
jp
push
enter
nop
leave
ror
cmps
mov
mov
pop
ret
lds
dec
xchg
fwait
cmps
das
sub
xchg
jns
pop
rep
repnz
leave
xor
mov
sahf
or
jnp
pushf
sub
mov
cmps
lahf
mov
and
nop
hlt
add
retf
in
ja
ins
ja
cli
lds
mov
xchg
cmp
nop
ret
pop
cmp
inc
outs
jmp
jne
add
loope
push
mov
mov
cwde
test
std
or
or
(bad)
or
imul
pop
adc
retf
sbb
or
push
sbb
enter
jns
push
fdiv
cmp
call
xor
mov
jae
or
in
std
(bad)
xchg
mov
sbb
or
in
retf
xor
jmp
xchg
pop
cmps
inc
fwait
lds
adc
add
or
xchg
(bad)
ror
scas
inc
sub
and
push
loope
in
jb
mov
mov
test
jno
fsub
daa
loope
stos
das
fild
mov
jbe
outs
into
addr16
cwde
stos
lods
ss
jle
fwait
test
mov
pusha
gs
out
stc
push
cld
jp
lahf
shl
mov
adc
fidiv
push
or
inc
xor
and
repz
xor
ins
int
pop
mov
xchg
mov
jg
loopne
mov
jp
push
and
ret
std
dec
icebp
push
addr16
outs
mov
(bad)
in
and
rcr
mov
or
test
xchg
push
dec
dec
pop
mov
jbe
outs
in
pop
iret
ret
sub
es
push
and
sahf
imul
sar
out
jbe
scas
xchg
sbb
aad
inc
rcr
pop
ins
ins
pop
(bad)
jge
lock
inc
gs
scas
and
sbb
(bad)
fdivr
ja
pop
inc
inc
sahf
scas
inc
push
jo
cld
mov
sub
hlt
sbb
sar
ret
sbb
in
inc
je
std
shl
sbb
push
xor
fs
rcr
cld
daa
cdq
dec
shl
test
push
int3
xor
fiadd
and
jle
push
push
or
(bad)
out
ret
aam
adc
mov
retf
xor
add
add
pop
popa
push
aas
xor
and
adc
es
mov
mov
fcos
sub
inc
mov
and
loop
push
lods
out
add
in
cmp
icebp
inc
int3
dec
mov
pusha
out
jmp
in
dec
ret
jecxz
jbe
je
adc
sbb
mov
(bad)
enter
jnp
mov
cdq
mov
cmp
rcr
cmp
cmp
loopne
jne
gs
scas
inc
neg
xor
mov
add
lea
adc
(bad)
icebp
iret
fld
jl
adc
and
add
std
imul
fisttp
aam
push
push
push
cmp
mov
cmp
test
mov
daa
push
scas
psrad
mov
cld
popf
inc
adc
pop
push
add
inc
repz
jo
sub
sub
movs
mul
lock
jg
ds
idiv
retf
mov
add
inc
push
mov
mov
cmovnp
aaa
out
inc
fwait
and
imul
into
mov
outs
cli
push
push
sub
jmp
(bad)
int
mov
outs
mov
je
(bad)
pop
mov
cmp
mov
arpl
and
xchg
dec
dec
add
jbe
call
add
xchg
jmp
cli
lods
ret
add
add
push
push
or
jecxz
fsub
mov
popa
inc
(bad)
add
ret
xor
dec
(bad)
inc
data16
aas
rol
stos
bound
xor
jg
(bad)
adc
pop
cmp
sub
lea
and
mov
pop
cld
mov
and
or
ror
ds
xchg
cwde
add
mov
push
dec
aaa
loope
xchg
cmp
ins
sub
sbb
mov
addr16
sub
int3
xor
add
cmp
aam
jns
scas
ins
xor
out
daa
push
mov
mov
add
xor
das
sbb
in
bound
push
inc
add
add
xor
mov
sub
cmps
pop
out
jg
(bad)
or
leave
add
iret
out
and
repz
cmp
mov
mov
cmps
outs
repnz
adc
outs
inc
jae
mov
movups
mov
mul
jecxz
xor
aas
xchg
xchg
mov
push
mov
xchg
stos
fdiv
(bad)
sti
inc
stos
sbb
dec
mov
jp
aas
sub
call
adc
pop
jmp
jne
push
inc
lods
aam
xchg
cmc
and
pop
pop
ret
xor
lods
and
dec
push
sbb
into
in
push
mov
mov
mov
xchg
(bad)
call
pushf
out
imul
out
fstp
sahf
addr16
lock
mov
outs
jmp
and
repz
cmps
sub
mov
sbb
cmp
int
out
sbb
mov
loopne
pop
dec
(bad)
mov
mov
jl
or
movs
stos
cmp
pop
loope
imul
jecxz
sbb
sbb
push
and
dec
xor
jmp
push
add
dec
sbb
fdiv
(bad)
shr
or
jecxz
fild
dec
push
sbb
ins
push
rcr
ins
push
mov
pop
out
adc
pop
or
mov
push
mov
push
cli
fnsave
mov
jg
mov
pop
fwait
div
retf
push
sub
cwde
rcr
nop
enter
mov
jbe
mov
sbb
adc
mov
stos
cmc
push
mov
hlt
dec
push
in
mov
hlt
mov
push
popf
mov
lods
sahf
retf
and
or
js
enter
sbb
pop
loop
mov
imul
push
imul
out
sub
cli
inc
mov
iret
add
rol
icebp
ins
xlat
jmp
sbb
shl
cmp
xchg
into
sbb
mov
sbb
mov
pop
pop
inc
add
xchg
ds
jns
push
mov
fmul
inc
push
jo
mov
stos
repnz
out
cli
sbb
pop
icebp
retf
mov
enter
cmps
js
cmp
addr16
je
ins
jns
push
jle
sahf
out
or
scas
out
mov
fdivr
jl
adc
add
cmps
jne
sub
(bad)
pushf
mov
outs
mov
mov
jg
mov
fisttp
lods
dec
cmp
xchg
xchg
pop
or
inc
jno
aaa
sub
addr16
in
rcr
rol
adc
lds
setge
mov
xchg
mul
out
pop
adc
cli
mov
dec
imul
cmp
fidivr
adc
and
es
test
add
xadd
loop
mov
jne
ret
scas
jp
mov
add
add
push
push
pusha
push
sbb
fwait
stos
push
stc
mov
daa
push
frstor
iret
add
in
clc
or
(bad)
mov
dec
mov
mov
lods
or
lock
jno
xchg
fcomp
dec
addr16
(bad)
cld
data16
into
and
inc
add
push
mov
lods
push
and
dec
cmp
js
xor
leave
mov
xchg
lds
dec
cmp
aas
push
mov
movs
jae
ret
sbb
ret
inc
les
test
xchg
call
rcr
neg
je
or
movs
adc
mov
dec
and
jp
cmp
dec
outs
sub
or
xor
xor
outs
pop
repz
stos
adc
pop
jno
popf
call
and
mov
push
jmp
mov
cmp
xchg
jno
popa
mov
fisubr
mov
sub
adc
push
and
add
mov
fcomp
(bad)
inc
repnz
into
xchg
xor
mov
movs
or
cmp
mov
and
inc
pop
fnstcw
pop
jns
push
std
imul
sbb
ins
out
pushf
stc
or
dec
jmp
push
dec
mov
jmp
add
dec
pop
inc
jbe
scas
or
push
ja
mov
out
dec
push
mov
mov
cmps
mov
mov
xchg
mov
jge
rcr
dec
xor
lods
push
xchg
rcl
nop
and
pop
cmps
jns
inc
pop
mov
inc
lods
ins
addr16
inc
xchg
jbe
sbb
mov
pop
and
fbstp
mov
leave
(bad)
cmc
lahf
mov
jnp
int3
ds
cmc
popa
cmp
iret
test
adc
loop
mov
rcr
sti
pop
addr16
(bad)
xchg
jmp
push
mov
sbb
jp
out
call
adc
pop
mov
or
mov
pop
mov
xchg
xor
leave
or
imul
cdq
pop
js
retf
idiv
mov
dec
jp
scas
cmps
xor
sub
mov
mov
test
mov
test
lea
push
mov
pop
jle
mov
(bad)
stos
adc
outs
add
mov
out
fsub
test
ds
std
test
jmp
mov
jno
jmp
cmp
fidivr
aad
jae
add
push
pop
dec
push
rep
adc
dec
dec
jae
scas
inc
xor
fadd
sbb
or
adc
mov
je
ret
mov
adc
dec
add
sar
inc
movs
jge
pop
jp
xor
and
adc
pop
jb
push
or
add
mov
push
xchg
clc
rcl
(bad)
mov
loope
pop
jp
xchg
les
add
(bad)
ja
mov
retf
and
mov
push
cdq
add
shl
mov
sbb
out
test
xor
dec
xchg
out
pop
ud1
int3
sub
cld
lds
add
mov
jmp
adc
inc
(bad)
je
cmp
jmp
mov
adc
out
xchg
in
lds
mov
fisttp
dec
and
dec
push
jecxz
test
imul
sub
popf
dec
cwde
or
loop
hlt
pushf
xchg
cmp
les
mov
lods
push
push
xchg
repnz
int
mov
xchg
inc
jae
sbb
sar
inc
(bad)
and
or
pop
movs
clc
jmp
jecxz
call
jmp
sti
pop
retf
mov
je
xchg
(bad)
out
adc
cs
icebp
ins
xlat
mov
mov
push
add
call
dec
scas
inc
mov
sbb
outs
inc
outs
js
pop
call
outs
push
xlat
add
arpl
push
in
xchg
mov
aam
dec
ss
cli
mov
call
pusha
imul
nop
ds
shl
cmp
lods
push
(bad)
mov
movs
or
jo
mov
jmp
jle
mov
inc
push
out
mov
ror
pop
clc
rcl
pushf
pop
jg
call
movs
ret
popf
dec
fst
ins
cmps
push
mov
inc
adc
add
adc
add
push
sub
ins
jp
sbb
je
or
pop
push
ja
sbb
sub
push
pop
mov
xchg
movs
mov
xor
cmp
mov
adc
in
add
jge
ja
sahf
jge
clc
xor
movs
(bad)
icebp
adc
sbb
retf
mov
ins
add
xchg
into
cmps
jl
pop
or
inc
icebp
sahf
mov
leave
and
call
dec
jno
in
mov
dec
ds
sub
cmps
inc
pop
mov
push
outs
lods
idiv
movs
cdq
mov
in
add
mov
jns
adc
add
cmc
dec
fst
dec
and
sahf
pop
sar
and
aad
jmp
sar
into
es
mov
xchg
sbb
jmp
pop
sahf
repz
outs
add
xor
dec
ja
imul
pushf
ror
mov
mov
outs
add
sbb
xlat
repnz
dec
rol
mov
xor
pop
mov
cmp
mov
and
push
in
mov
add
cmp
push
outs
scas
cmp
jbe
pop
stos
jp
mov
aad
jo
lea
xchg
iret
push
out
ret
cmp
add
imul
outs
std
out
mov
push
push
les
pop
mov
and
adc
add
sub
push
div
inc
movs
in
out
push
cli
ret
mov
lahf
stos
push
cmp
mov
je
push
test
fiadd
xchg
cdq
repz
int3
mov
cmc
jnp
retf
out
mov
mov
mov
pusha
test
ja
inc
push
bound
ficom
lahf
and
sbb
adc
jg
xchg
cld
int
inc
add
dec
add
and
rol
dec
and
movs
inc
mov
test
cwde
mov
pop
movs
mov
ror
xlat
out
pop
lea
neg
repz
and
icebp
xchg
div
xchg
les
jbe
(bad)
in
mov
test
popa
mov
pusha
dec
xor
leave
js
inc
movs
scas
fisub
xlat
push
clc
outs
adc
lock
test
pop
clc
imul
mov
imul
adc
sub
sbb
lods
ins
outs
jmp
ss
popa
xchg
(bad)
adc
sub
js
or
sbb
mov
fwait
jbe
dec
shl
int
mov
xlat
cmp
xor
or
not
cmp
fcmovnb
pop
mov
pop
mov
fdiv
repnz
cmp
movs
ss
xor
and
dec
ja
and
xor
mov
mov
pop
xlat
jecxz
fcom
out
sbb
push
xchg
jp
pop
sub
call
(bad)
inc
and
call
sbb
inc
mov
ja
shl
push
(bad)
sbb
aam
test
es
popf
je
dec
rcr
das
or
mov
adc
pop
dec
adc
push
fisttp
and
nop
xor
cmp
jle
adc
pop
cwde
pop
js
cmp
aam
call
ds
aam
or
sub
rcl
push
gs
mov
jo
xor
mov
loopne
shl
iret
inc
fisub
int
fwait
mov
inc
push
mov
inc
push
jp
and
call
inc
sbb
jae
dec
movs
and
cmps
test
xor
adc
cmp
inc
fst
test
xor
pop
hlt
outs
mov
add
jp
sbb
pop
fdivr
sar
iret
aas
bound
pop
inc
mov
outs
addr16
mov
or
clc
loop
ds
mov
rol
repz
(bad)
shr
adc
add
and
(bad)
cmp
js
mov
sbb
out
cmc
leave
xchg
aaa
(bad)
retf
or
lea
sbb
enter
cdq
ret
jg
pop
test
jecxz
push
mov
test
mov
add
neg
add
ret
mov
push
pop
mov
inc
fdivr
cs
and
and
or
jb
mov
mov
(bad)
and
add
scas
pop
popa
test
sbb
in
mov
mov
sti
mov
cmc
ds
mov
or
fisub
sub
mov
leave
pushf
or
push
pop
iret
shr
jbe
xchg
xchg
push
dec
ret
fsubr
sbb
sbb
lahf
mov
xor
mov
dec
test
mov
pop
xchg
enter
fdivr
xchg
clc
cmp
ss
cmps
or
pop
dec
pop
cmp
xchg
scas
sub
mov
adc
push
arpl
jl
mul
xor
enter
adc
dec
cmc
out
repz
int
or
sti
pop
pop
pop
sbb
popa
jg
and
mov
cmp
sbb
push
mov
mov
push
repnz
dec
cs
sub
push
inc
adc
jmp
xor
mov
cmp
mov
pop
shl
xchg
stos
jo
jle
iret
jbe
pop
mov
addr16
push
ss
pop
xor
test
aas
and
fsubr
jge
xchg
popa
cmp
sub
xchg
test
xchg
fst
cmps
add
mov
xor
jl
or
std
fcomip
cwde
mov
inc
fwait
mov
or
add
cmp
sub
mov
test
sbb
(bad)
imul
cmps
push
jmp
mov
data16
xchg
mov
sub
ja
or
dec
sbb
test
test
leave
jge
call
mov
push
cmp
out
push
loopne
es
mov
push
test
xchg
call
and
add
lea
jl
fnsave
push
and
(bad)
xlat
or
je
mov
popa
movs
and
aam
jecxz
jbe
div
jns
sbb
pop
les
dec
jne
div
xor
imul
cmp
inc
push
jle
mov
out
push
xchg
xor
push
mov
pop
mov
scas
in
jmp
or
scas
daa
test
nop
mov
fidivr
pop
jmp
mov
and
mov
cs
(bad)
xor
jbe
mov
mov
movs
add
data16
repnz
mov
ins
xchg
cs
and
fsubr
xor
fdivr
push
xchg
icebp
stc
call
jnp
fst
mov
les
mov
fistp
aam
add
stos
xor
(bad)
or
mov
pop
(bad)
mov
loope
out
or
add
(bad)
jg
mov
push
and
daa
sbb
(bad)
icebp
mov
stc
or
mov
or
shl
push
call
fnstsw
pop
or
jo
es
cmps
aam
mov
mov
and
aaa
cwde
sub
in
into
add
jmp
and
adc
sbb
lods
jmp
inc
int3
or
cmp
rcl
ror
sbb
sbb
sar
arpl
cdq
movs
mov
jg
cmc
add
or
adc
popf
dec
jmp
mov
in
pop
ss
cmp
and
mov
shr
mov
or
(bad)
(bad)
mov
dec
(bad)
fdivr
cmp
stos
sbb
mov
cmps
(bad)
hlt
pop
mov
sbb
retf
jmp
or
cld
lea
xchg
inc
(bad)
fsub
cmps
ds
aad
dec
imul
movs
push
(bad)
out
xchg
lock
(bad)
adc
or
imul
stos
cmc
inc
cli
xor
in
pop
inc
fcomp
stos
stos
cmp
ins
pop
cmp
fadd
out
dec
and
call
inc
push
pushf
xchg
scas
fs
mov
in
js
xchg
inc
sti
mov
out
inc
xchg
out
inc
jmp
cmp
add
pop
sbb
dec
sbb
mov
inc
aaa
in
jmp
lahf
xchg
sub
enter
adc
xor
pop
add
dec
stos
xchg
push
and
xor
lods
loopne
(bad)
out
mov
fbld
data16
inc
shl
stos
xor
fwait
test
retf
mov
jge
inc
ret
mov
push
bound
add
pop
retf
cmp
hlt
(bad)
in
push
leave
enter
xchg
(bad)
mov
fist
shl
stos
lahf
dec
dec
call
sti
test
fs
lods
sub
fbld
adc
pop
dec
ja
(bad)
xor
sub
test
xor
popa
inc
lahf
push
(bad)
shr
in
out
jmp
aaa
invd
cmp
mov
push
sub
aaa
retf
mov
push
cmc
(bad)
pop
jno
scas
shl
ficom
pop
adc
nop
and
sti
mov
xchg
cmp
or
push
ror
lods
fs
mov
sub
cmp
cmp
add
aaa
mov
movs
pusha
dec
and
jbe
icebp
fbstp
pop
fidiv
dec
mov
stos
push
or
add
cld
ins
shl
iret
cmc
imul
sbb
mov
sbb
cld
int3
jae
retf
jmp
out
adc
lock
adc
scas
jg
push
inc
pop
in
bound
leave
inc
(bad)
sub
mov
add
sub
adc
call
iret
jmp
clc
test
fadd
ja
cwde
out
ret
or
mov
and
xor
push
or
fwait
fwait
test
test
cwde
je
xor
leave
jns
es
loopne
jl
movs
inc
mov
in
cwde
pushf
loope
jmp
repz
movs
inc
dec
dec
push
or
mov
fld
shr
aaa
retf
jns
clc
cmp
fmul
shl
clc
mov
cli
jmp
retf
cmp
stos
ins
imul
retw
adc
push
or
xor
sbb
cmp
add
test
or
in
pushf
or
adc
sub
xor
in
mov
cmp
ret
call
cmp
sub
xor
ss
or
test
xchg
jns
add
pop
adc
retf
jge
dec
inc
in
xor
aas
int
outs
mov
pushf
add
push
aas
xchg
push
imul
mov
rol
addr16
adc
xor
cmp
icebp
cmp
jmp
push
mov
das
jl
enter
out
or
cmp
mov
push
sbb
rcr
repnz
cmp
les
aas
movs
jbe
sub
push
cmp
or
(bad)
dec
cmps
mov
sbb
mov
inc
pop
push
mov
sbb
lods
xchg
movs
lahf
mov
mov
or
inc
rol
jmp
sbb
and
jl
lods
lea
adc
and
jp
int3
xchg
test
and
ja
mov
in
cmp
and
push
into
sahf
xor
cdq
rcl
stc
push
xchg
jecxz
pop
pop
jg
xor
retf
or
cmps
daa
pop
cwde
aad
mov
mov
mov
shl
or
out
cmps
cmp
cmp
adc
fdivr
daa
push
ins
(bad)
cs
cmps
and
mov
neg
cmp
les
mov
mov
out
bound
fimul
or
addr16
es
popa
sar
or
(bad)
sub
and
das
and
ins
mov
mov
inc
popa
or
hlt
sub
in
xchg
pop
cmp
inc
ret
mov
and
push
xor
aas
cwde
mov
aad
test
jg
mov
fsub
(bad)
adc
xchg
sub
(bad)
fisubr
jmp
mov
call
addr16
leave
jmp
fld
out
cdq
jns
jmp
pop
dec
ja
mov
fisub
std
sbb
cmp
aad
dec
pop
pop
std
jmp
xchg
mov
movs
not
push
call
bound
inc
and
xchg
hlt
add
dec
mov
int
shl
imul
mov
(bad)
(bad)
neg
std
(bad)
clc
out
std
xor
mov
rcr
pop
sti
and
add
fs
in
outs
mov
mov
out
jno
pop
rcl
push
imul
mov
jae
not
mov
pop
fadd
pop
cmp
shr
jecxz
jp
in
jns
add
dec
pop
xchg
fwait
ror
ror
outs
mov
int
sbb
(bad)
push
dec
es
imul
mov
mov
xor
mov
pop
push
iret
repz
add
sbb
sbb
sbb
xchg
inc
daa
retf
or
mov
and
and
out
cmps
(bad)
xor
xor
pushf
push
xchg
(bad)
fucomp
pop
inc
iret
push
repz
push
mov
ds
or
retf
(bad)
out
pop
push
xor
and
jp
(bad)
adc
sub
mov
dec
mov
aam
imul
push
push
mov
adc
pminub
or
mov
or
xor
jge
sub
fst
inc
xchg
stc
dec
xor
sub
(bad)
cmp
xlat
mov
(bad)
push
imul
sbb
dec
out
popa
inc
out
leave
inc
lds
cdq
cld
fyl2xp1
and
pop
mov
lea
rdtsc
mov
jecxz
inc
jecxz
lds
push
pop
jle
jmp
test
aas
pop
test
dec
inc
fisttp
push
sub
inc
inc
comiss
jp
cmp
jl
jb
jge
or
lock
xor
(bad)
cmps
out
aad
pusha
scas
jl
pushw
cld
mov
cmp
fadd
div
fld
pop
nop
jne
sub
fsub
mov
arpl
xlat
cmp
mov
dec
cmp
xchg
jle
outs
xlat
hlt
arpl
fwait
push
rol
jp
neg
aaa
and
pop
les
xchg
xor
mov
and
psubq
pop
inc
mov
aad
fsubr
out
fidiv
adc
mov
cmp
fcomp
lock
and
jmp
jae
daa
mov
repz
mov
aas
push
cmps
and
vmwrite
cmp
dec
nop
loop
jo
shl
loopne
scas
outs
or
jp
or
ficomp
bound
cmp
pop
sbb
dec
(bad)
mov
mov
cli
or
push
stos
fbstp
dec
dec
mov
jns
repnz
jl
and
xchg
or
(bad)
pusha
sbb
cld
ins
jge
mov
dec
dec
xor
or
xchg
adc
nop
loope
jle
inc
leave
xchg
sbb
add
aam
dec
sti
movs
outs
rol
jbe
cmp
jmp
popa
push
enter
pop
and
enter
rcl
and
faddp
aad
sbb
cmp
xchg
xchg
and
xchg
shl
mov
popa
push
and
or
imul
xor
mov
jl
daa
loop
xchg
sub
pop
call
lock
mov
imul
mov
xor
sub
sahf
fadd
scas
sti
mov
repz
xor
mov
jbe
(bad)
push
(bad)
push
adc
mov
mov
adc
icebp
jb
xor
dec
ss
imul
push
inc
xchg
dec
cmp
rcr
xor
mov
inc
push
cmp
outs
(bad)
popa
mov
xchg
adc
dec
or
xor
inc
scas
rol
in
adc
dec
push
pop
dec
arpl
retf
push
aaa
or
jno
retf
data16
and
(bad)
repnz
push
imul
imul
inc
shl
fs
push
and
lea
jmp
aad
mov
mov
daa
mov
xor
sub
scas
or
clc
hlt
call
mov
or
dec
sbb
loope
or
jae
test
fbld
mov
int3
inc
mov
mov
ror
push
jne
cli
sbb
xchg
push
and
fsub
out
(bad)
dec
inc
gs
mov
sbb
in
pop
mov
mov
or
pop
mul
jecxz
hlt
push
inc
in
ins
jne
ds
and
dec
xchg
sbb
imul
cdq
push
sbb
cmps
sbb
and
inc
mov
or
jl
lods
not
mov
data16
push
shl
sub
(bad)
and
jp
cmp
loopne
leave
cmp
dec
ror
mov
pop
jecxz
retf
cmps
iret
xor
or
movs
ror
push
cdq
imul
xchg
popf
mov
sub
enter
dec
and
mov
fs
mov
dec
jge
fdivr
mov
loope
mov
fwait
iret
xlat
int
repz
and
jecxz
pop
inc
sbb
push
sahf
mov
in
addr16
imul
push
lea
xor
mov
adc
ja
enter
jge
repz
imul
add
and
mov
push
nop
or
scas
fwait
imul
hlt
cwde
mov
popf
mov
mov
sub
push
test
imul
mov
in
jno
retf
and
jb
pop
add
cmp
jo
lock
jge
sahf
fnstcw
popa
leave
adc
dec
xor
xchg
cs
inc
and
pop
pushf
push
ja
hlt
lahf
cmc
test
sbb
les
or
inc
add
or
mov
aam
adc
mov
addr16
int
call
lds
mov
hlt
pushf
imul
icebp
mov
fs
xchg
movs
jne
inc
call
addr16
cld
inc
jo
jl
jmp
ins
movs
inc
mov
(bad)
inc
sub
pop
mov
aam
(bad)
pop
(bad)
clc
cmp
jb
xor
and
aaa
jle
jnp
mov
mov
ror
dec
adc
fsub
add
push
mov
fadd
int3
xor
add
add
cmp
jae
out
dec
push
cs
adc
loope
add
cmp
aam
xchg
(bad)
vgetmantss
jnp
jmp
imul
xor
mov
jo
pop
push
or
in
cli
rcr
out
aad
imul
addr16
mov
aam
mov
shl
dec
dec
pushf
fs
lods
nop
mov
add
jb
jae
(bad)
jae
jb
neg
inc
sti
sub
sbb
mov
retf
dec
add
outs
mov
into
hlt
or
in
ja
cmp
push
xchg
cmps
ret
xor
mov
adc
pushf
push
mov
int
xchg
call
push
das
jbe
imul
hlt
mov
cmc
imul
mov
mov
outs
fsubr
xor
test
scas
outs
or
dec
loopne
xchg
xlat
mov
xchg
sti
inc
and
std
mov
push
in
adc
ja
xchg
sbb
fs
movs
aas
dec
idiv
sbb
ror
mov
fild
jmp
inc
(bad)
mov
fucomi
imul
inc
les
xlat
out
in
fisttp
push
stos
rcr
(bad)
jecxz
and
pop
push
rcl
mov
jecxz
sbb
xlat
outs
inc
jbe
lods
cmp
xchg
or
mov
jae
test
mov
push
pop
jae
cmps
not
sti
sbb
pop
push
stc
fimul
cmp
jl
scas
xchg
mov
jmp
scas
stc
das
shl
push
or
out
in
lods
enter
pop
jmp
push
xor
mov
fidivr
pop
add
jnp
lahf
jno
aam
int3
push
nop
mov
add
mov
cwde
nop
cld
sbb
cmp
out
add
jp
je
jne
inc
lods
and
pop
ret
aas
leave
xor
test
push
mov
inc
add
dec
je
pop
(bad)
aas
push
xchg
out
mov
inc
mov
nop
out
pop
sub
push
dec
add
arpl
pusha
rcl
inc
test
dec
cli
mov
jecxz
std
retf
test
push
ror
das
in
dec
(bad)
mov
push
out
and
xor
(bad)
sahf
shr
sbb
dec
stos
stc
pop
(bad)
cmps
fcomp
add
out
test
gs
mov
dec
pop
daa
push
inc
push
pop
sar
mov
shl
add
test
pop
outs
repz
out
add
repnz
(bad)
dec
mov
repnz
and
mov
or
adc
jo
mov
dec
jnp
adc
into
sar
adc
push
jecxz
test
dec
dec
mov
and
retf
imul
stos
xchg
retf
mov
cmps
sub
arpl
dec
cmp
xchg
idiv
adc
cmp
sub
lods
(bad)
jo
adc
in
push
cli
jge
addr16
(bad)
add
ficom
push
xlat
or
jmp
(bad)
and
push
addr16
jne
dec
sub
aad
and
jne
or
mov
xchg
xchg
inc
dec
sub
pop
aaa
das
vrcp14pd
leave
and
popa
inc
popa
in
neg
mov
jmp
inc
mov
mov
sub
xchg
hlt
mov
in
je
add
cs
test
arpl
pop
sub
sub
mov
push
cmc
dec
mov
pusha
lahf
add
scas
xchg
scas
adc
sbb
mov
out
mov
(bad)
(bad)
in
aam
xor
aam
add
mov
add
mov
scas
loope
jne
dec
in
jno
rol
jae
inc
shl
pop
and
in
xchg
js
pop
and
imul
fisub
(bad)
adc
(bad)
sbb
fwait
sbb
std
int3
sbb
int
pop
mov
lea
push
or
push
xchg
clc
pop
adc
mov
addr16
cmp
pop
push
jge
leave
sbb
out
jmp
dec
mov
imul
aam
nop
leave
mov
pop
je
pop
mul
jb
aad
in
inc
clc
loopne
or
js
fimul
ja
nop
sbb
iret
adc
xchg
cvtpi2ps
ins
frstor
inc
je
jne
popa
cmp
xchg
clc
stos
or
push
mov
mov
leave
and
cmps
jecxz
jno
dec
and
cmp
aad
cdq
test
movs
jg
frstor
aam
mov
inc
rcr
mov
ud0
rcl
aad
add
jae
mov
ss
retf
int
or
cmp
aad
inc
adc
ret
and
iret
int3
xchg
ret
mov
pusha
jle
retf
cdq
pop
and
adc
ss
sbb
sbb
jmp
imul
lock
data16
mov
sahf
or
sub
push
test
addr16
jne
out
push
in
mov
nop
add
dec
sbb
lahf
dec
sbb
xchg
dec
imul
vpunpckhqdq
dec
mov
xchg
inc
retf
shl
dec
mov
mov
bound
pop
fsubrp
lods
mov
cmp
outs
push
stos
inc
or
dec
lods
bound
dec
ss
mov
aaa
jnp
cmp
retf
xlat
or
or
les
cmp
stos
mov
cmps
rol
sub
dec
pop
pop
pop
in
jmp
aam
jo
icebp
nop
ror
ror
dec
sbb
cmc
ss
fld
push
mov
cmovs
or
nop
mov
shl
and
add
and
jo
mov
and
(bad)
mov
call
and
inc
not
pop
adc
lahf
xchg
out
sbb
dec
hlt
outs
xor
xchg
cmp
jle
repz
mov
xchg
ret
sti
mov
fild
mov
jmp
lea
push
xchg
clc
inc
add
xchg
imul
mov
xor
xlat
inc
aam
jmp
rol
mov
scas
repz
fldlg2
mov
retf
xlat
stos
sub
jl
xor
hlt
pop
repz
lahf
mov
xlat
mov
rol
pop
xchg
hlt
sti
xor
add
mov
mov
call
adc
xor
sbb
jae
pop
movs
push
test
retf
je
hlt
add
jne
int3
push
call
bound
mov
pop
aam
mov
jae
mov
jl
call
mov
cmp
dec
or
jle
test
js
fst
mov
adc
push
xor
jno
pop
jle
hlt
mov
push
cdq
pop
fsubp
stc
lds
pop
jecxz
ret
dec
cmp
add
cld
xchg
lea
or
mov
xchg
push
jne
pop
xchg
push
aaa
jo
sub
fdivr
and
cli
inc
ins
es
mov
dec
(bad)
cmp
adc
xlat
sbb
jns
jecxz
pop
ds
inc
(bad)
dec
and
je
(bad)
ss
aas
mov
xor
xchg
lds
movs
scas
add
data16
stos
shl
inc
cmps
pop
lahf
push
jle
fsubr
adc
jnp
cli
mov
jb
out
inc
pop
cmp
xor
fptan
sub
inc
dec
mov
mov
cmp
shr
int3
test
jmp
rcr
mov
and
mov
push
loope
jae
jp
cmps
cld
mov
sub
test
ret
and
adc
cmp
or
sbb
scas
sti
mov
cmps
pop
mov
jmp
mov
fdivr
add
xchg
std
not
jns
sub
xchg
into
mov
xor
daa
mov
pop
cmovb
add
dec
adc
dec
leave
shl
in
ret
mov
mov
mov
xchg
test
sub
call
sti
repnz
mov
jb
repnz
or
ins
enter
icebp
or
mov
in
xchg
sbb
mov
(bad)
aam
ffree
push
ja
push
jmp
and
in
add
imul
into
mov
dec
mov
add
call
cwde
jmp
sbb
ret
rcr
mov
mov
clc
mov
outs
stos
vmovupd
push
gs
xchg
adc
fiadd
or
xchg
jecxz
adc
fwait
scas
mov
xchg
test
int3
add
xchg
cmp
sar
std
int3
cmp
and
gs
dec
popfw
(bad)
aam
mov
inc
pop
stos
addr16
push
push
push
sbb
in
fsubr
dec
lods
(bad)
jmp
pop
sbb
sar
add
inc
loopne
jge
pop
cmps
lods
lods
mov
pop
clc
sub
sub
and
in
or
gs
sbb
ret
adc
adc
aas
mov
data16
or
pop
push
add
iret
and
sbb
mov
jle
sbb
sub
mov
sti
loopne
adc
(bad)
(bad)
add
adc
mov
jp
in
and
dec
push
jne
fld
add
or
mov
sub
jecxz
dec
or
movs
clc
cmps
jmp
adc
xchg
addr16
rcl
je
xor
je
xor
dec
xchg
jno
bound
mov
cmp
popf
rcr
dec
js
shr
jmp
and
xrelease
jp
and
rcl
push
out
sbb
xchg
or
dec
mov
imul
leave
add
dec
mov
push
push
in
mov
gs
sti
dec
cmp
sbb
rcl
add
jb
mov
push
in
inc
xchg
mov
push
cwde
inc
mov
mov
mov
cmp
jecxz
pop
pop
adc
js
lods
in
push
je
in
pop
mov
dec
mov
or
mov
pop
call
out
lds
dec
loopne
cs
and
and
loop
add
int
push
daa
jno
iret
ins
fdivr
sbb
cmp
jl
aaa
in
std
inc
xchg
sbb
rcl
cs
jge
js
dec
test
arpl
xchg
sub
sub
mov
pop
mov
retf
xor
mov
(bad)
mov
fbld
mov
ins
pushf
fidiv
hlt
dec
test
je
xchg
stos
inc
inc
or
dec
and
lahf
mov
fwait
retf
pop
gs
mov
dec
cld
sahf
int
adc
push
cmp
stc
fmul
mov
and
je
jnp
add
ins
xor
sar
mov
xor
out
cmc
inc
vpavgb
sub
pop
stc
aas
xor
imul
dec
sub
aad
add
mov
xor
add
sub
sbb
xor
add
and
out
ret
repz
inc
mov
xor
clc
or
ss
push
adc
pop
jne
mov
xor
push
jae
hlt
pop
inc
int
sbb
add
or
fidiv
mov
push
add
dec
icebp
stos
or
daa
and
retf
mov
pusha
mov
or
pop
pop
push
ficom
lods
test
jg
lods
out
(bad)
das
xor
xor
loope
nop
jne
lahf
pop
mov
inc
xor
xchg
xor
outs
cmps
push
add
push
mov
inc
pop
or
pusha
sar
fwait
jnp
clc
mov
jmp
enter
fnstsw
cdq
sbb
std
sbb
out
ds
sbb
fwait
dec
out
mov
inc
pop
push
mov
mov
xchg
fcomp
and
mov
imul
fdiv
ror
add
jge
psraw
jno
ds
xor
push
mov
add
lds
pop
ins
(bad)
jns
mov
lds
cmp
jnp
cmp
inc
call
xor
aaa
lods
inc
lds
xchg
add
add
ror
jmp
les
mov
mov
ins
popa
lods
call
div
adc
pop
ret
callw
pop
sub
js
je
imul
out
sub
fnstsw
out
andnps
jmp
or
jns
mov
jmp
inc
(bad)
(bad)
popf
dec
pop
fld
cmp
imul
dec
pop
adc
(bad)
and
aad
jo
jecxz
sahf
imul
sub
cli
sub
sub
dec
dec
(bad)
sub
adc
lahf
pop
adc
cli
add
mov
add
mov
loope
stos
inc
mov
out
popa
lea
add
aas
les
and
arpl
inc
dec
cs
out
mov
pop
adc
cmps
xchg
mov
push
in
mov
pop
test
add
mov
loopne
dec
dec
xor
fdiv
sbb
test
hlt
xchg
sahf
ja
ins
lods
movs
mov
(bad)
into
cmc
dec
push
and
push
out
iret
mov
je
shl
xor
and
mov
xor
(bad)
adc
aad
int
pand
mov
jmp
mov
arpl
jbe
in
xchg
xlat
and
jl
shl
add
mov
lds
les
bound
pop
sub
push
fisub
pop
mov
add
scas
sbb
sahf
arpl
in
mov
test
xchg
dec
loope
sbb
xchg
lea
leave
xor
add
movs
or
inc
test
mov
dec
fsubr
fsubr
loope
mov
call
cmps
jmp
jo
in
xchg
jge
out
call
cmp
sbb
xor
and
jns
pop
ficomp
jecxz
mov
ins
sub
loop
scas
mov
mov
shl
leave
(bad)
or
lahf
mov
inc
xchg
stc
out
mov
fild
rcl
xor
gs
test
cmps
aas
rol
out
ins
stc
mov
cmp
pop
cdq
xlat
into
and
sbb
push
test
and
int
adc
mov
je
(bad)
and
out
into
dec
fcomp
inc
push
dec
jbe
loopne
out
push
(bad)
out
movs
xor
test
(bad)
xchg
adc
cmp
popf
push
push
push
push
push
add
jne
test
int
mov
or
bound
inc
je
push
mov
fcomp
pushf
xor
dec
dec
pop
(bad)
shr
in
mov
lea
inc
fwait
test
mov
lods
or
push
dec
push
mov
je
je
inc
scas
imul
sbb
sub
fmul
jmp
and
add
adc
sub
out
sub
push
cmp
and
(bad)
stos
dec
xlat
jbe
clc
ret
and
adc
mov
jle
jle
jecxz
add
mov
push
xchg
inc
call
push
ja
aaa
and
push
imul
push
int3
mov
ja
ss
pop
fucom
and
xchg
retf
loop
mov
mov
jecxz
fnstsw
cmp
xchg
push
dec
inc
xchg
push
loop
stc
xchg
cpuid
stos
movs
jecxz
loopne
into
out
(bad)
pop
mov
push
retf
ror
mov
pop
cmp
ja
xchg
push
jp
jp
jle
arpl
lds
mov
mov
(bad)
mov
or
imul
dec
in
cvtdq2ps
xor
enter
mov
in
cmp
and
inc
fidivr
xor
cmp
popa
add
mov
js
fisubr
mov
shl
outs
jns
outs
sbb
(bad)
jne
push
mov
ret
ror
or
push
xchg
scas
inc
jle
test
cmps
cli
pushf
sahf
retf
(bad)
xchg
sub
int
inc
mov
pushf
jno
xchg
mov
sar
add
push
xor
cmp
pop
adc
and
int3
fwait
mov
push
div
pop
jns
popa
gs
mov
or
push
and
adc
cmp
and
add
xor
xchg
outs
(bad)
aam
(bad)
nop
xor
push
pusha
push
mov
fstp
jae
add
cmp
loop
dec
es
xchg
lea
and
mov
ret
rcl
cmp
cmp
fistp
and
(bad)
jl
dec
popa
lea
and
xor
pusha
mov
mov
dec
fwait
add
aaa
iret
stc
xchg
or
inc
add
add
xchg
pop
push
push
stos
xor
(bad)
call
mov
loop
push
push
aad
mov
leave
hlt
dec
das
push
dec
ss
mov
pop
lahf
jmp
stos
xchg
pop
pusha
in
or
mov
imul
imul
ja
push
mov
and
outs
add
add
jns
cli
xchg
xchg
and
retf
mov
dec
fadd
sbb
adc
xchg
movs
and
and
pop
xor
rep
jmp
mov
and
xor
in
push
rcl
cs
int
and
xor
mov
imul
sub
je
ds
mov
cs
xchg
out
xor
les
pop
push
dec
ja
jae
push
out
pop
lods
fidivr
pushf
out
nop
jecxz
adc
adc
push
ficomp
out
dec
sub
sub
push
push
mov
push
rol
ins
mul
iret
sbb
sahf
scas
outs
mov
mov
inc
inc
inc
icebp
mov
xor
mov
cmp
xchg
pop
jbe
adc
test
lock
repnz
pop
scas
mov
scas
inc
jmp
mov
std
or
sbb
mov
push
dec
dec
rol
pop
sub
jbe
pop
cmp
dec
or
jns
arpl
or
call
pop
jne
test
inc
fsubr
push
les
or
ret
dec
mov
sbb
mov
call
add
fmul
mov
mov
fst
pop
mov
movs
fwait
nop
sub
xchg
pop
sbb
push
cmp
jae
ins
inc
fwait
mov
addr16
add
adc
and
pop
call
lods
ja
rcl
aaa
mov
jl
stos
iret
and
xor
imul
jns
push
sbb
ficomp
aas
adc
movs
and
ja
stc
or
aam
in
dec
push
sbb
cmp
mov
pop
sbb
(bad)
std
addr16
pop
test
or
scas
cmc
adc
(bad)
data16
pop
mov
jno
cmc
push
les
or
out
gs
jb
popa
test
and
test
mov
movs
imul
mov
popf
or
sub
fcmovnb
pop
cwde
(bad)
dec
mov
int
stos
mov
leave
mov
fstp
mov
xor
in
int
push
pop
inc
(bad)
sbb
fs
fidiv
jne
lea
and
ror
pop
inc
(bad)
movs
imul
(bad)
cwde
ins
jge
mov
and
out
adc
cmps
jmp
and
in
call
lahf
std
sub
jmp
mov
dec
es
test
and
push
cmps
mov
cmp
mov
jns
and
sbb
sbb
xchg
(bad)
xchg
retf
push
dec
or
xchg
int3
xchg
cmps
loopne
(bad)
jle
jg
and
mov
into
push
out
stos
mov
pushf
inc
(bad)
cld
(bad)
jp
(bad)
push
stos
mov
out
pop
push
stos
in
movs
test
push
in
add
les
mov
je
push
inc
sub
lods
in
sbb
repnz
div
xor
in
jl
xor
sbb
mov
adc
test
call
xchg
lds
mov
scas
cs
or
imul
pop
fisttp
call
int
pop
push
push
retf
mov
xor
inc
movs
push
cmp
(bad)
and
pop
xor
cmp
xor
mov
call
test
cld
call
aaa
cmps
cmp
outs
push
mov
pop
pop
outs
mov
push
mov
dec
ds
and
jmp
ins
xchg
or
fnclex
mov
push
and
int
mov
imul
jle
test
adc
(bad)
sub
test
mov
and
movs
push
jb
fiadd
dec
repnz
ins
cmp
test
jle
or
ins
cmps
loope
fs
movs
or
adc
mov
inc
enter
mov
shl
and
into
in
daa
xchg
xchg
push
mov
bnd
rcl
adc
lods
pop
push
mov
mov
mov
retf
or
sub
jmp
mov
icebp
ins
push
mov
in
cs
into
je
fnstcw
sahf
jb
inc
icebp
pop
xor
data16
jmp
inc
arpl
(bad)
xchg
mov
lds
ds
enter
rol
stos
js
das
test
(bad)
pop
cmp
jno
and
rcr
mov
push
movs
stc
test
fidivr
sub
jo
int3
dec
punpckhwd
or
or
ins
add
cld
cmps
in
push
adc
js
cmc
data16
or
repnz
dec
aas
(bad)
popf
pop
jo
retf
xor
adc
cmp
hlt
(bad)
push
pop
cwde
hlt
nop
into
fld
jnp
cmp
pushf
pop
xchg
lds
outs
ffree
aas
and
clc
sub
out
xor
xlat
inc
loopne
fstp
push
sbb
sbb
out
jmp
scas
mov
out
lahf
rcr
sbb
add
loope
cs
movs
fmul
imul
js
cdq
cmp
push
sub
push
packssdw
sub
(bad)
fwait
fwait
clc
cmps
mov
fxch
gs
sti
jmp
retf
sbb
sub
not
fcom
in
dec
imul
and
mov
xlat
repnz
(bad)
test
mov
mov
add
and
sbb
shl
lock
ret
sbb
xor
ss
stc
rol
adc
call
sbb
aas
dec
jae
and
fild
push
pushf
pop
and
mov
add
xlat
mov
push
xchg
xor
mov
inc
(bad)
cld
(bad)
into
and
dec
dec
sub
pop
xor
in
jmp
mov
(bad)
fcom
xchg
or
jne
ja
fs
pop
dec
jo
and
test
scas
cli
cmp
inc
push
ds
inc
or
fidiv
push
fdiv
mov
xchg
icebp
shl
outs
cdq
call
outs
dec
mov
and
rcl
jno
or
test
pop
aad
aam
stc
mov
(bad)
mov
das
push
ins
sub
sub
jbe
out
retf
fstp
cmp
int3
mov
into
inc
bound
push
push
push
add
cld
push
(bad)
jmp
mov
sub
mov
dec
je
xor
mov
push
andps
fisub
inc
test
out
lock
pop
les
dec
and
sbb
stos
imul
bound
add
xchg
mov
adc
push
ins
xchg
out
sub
ret
xchg
imul
pop
fsubr
imul
push
inc
xlat
jnp
inc
fyl2xp1
jns
scas
add
arpl
add
and
push
mov
push
add
vpcomuq
xlat
aad
push
mov
jmp
dec
das
loop
lahf
in
cmps
sub
mov
aad
jecxz
mov
sbb
dec
out
ins
repz
pop
test
inc
rcr
xlat
popf
pop
xor
ret
(bad)
nop
(bad)
cmps
ror
xlat
mov
cmc
pop
mov
inc
inc
sar
movs
lods
mov
and
sti
loope
adc
lea
inc
in
sub
jne
inc
aaa
push
jmp
mov
mov
scas
dec
mov
jbe
(bad)
sub
outs
(bad)
xchg
ds
jmp
rol
push
shl
movs
stos
cmp
outs
je
(bad)
cmc
inc
(bad)
mov
jl
or
mov
xor
push
push
lods
and
push
fistp
std
mov
imul
jo
mov
or
mov
shl
xor
mov
aaa
jmp
js
pop
cs
scas
mov
popa
push
mov
pusha
xchg
push
in
sbb
cdq
push
out
in
sub
push
add
leave
add
(bad)
pop
cmps
imul
mov
test
dec
(bad)
cmp
ins
loope
sbb
cmc
pop
sub
in
sbb
jle
aad
or
push
sub
inc
sbb
cli
call
sub
cmp
mov
and
jno
xlat
pusha
inc
mov
aaa
int3
and
xor
xor
add
mov
push
lods
arpl
dec
jmp
or
mov
int
and
pop
xchg
xchg
add
test
push
mov
jbe
and
pushf
jb
clc
jp
(bad)
cli
test
sub
xchg
sub
imul
cmp
fwait
int3
lods
outs
xor
call
test
add
sbb
rol
in
add
(bad)
loopne
add
test
movs
scas
popa
hlt
enter
nop
movs
shl
push
fdiv
xchg
inc
retf
or
scas
pop
repz
cmp
jl
xchg
mov
mov
int3
lahf
xchg
fcom
inc
adc
jg
imul
push
(bad)
test
xchg
mov
outs
mov
xor
sbb
fist
mov
sub
sub
pushf
ss
mov
sahf
retf
std
lahf
xchg
fs
xor
jae
das
xchg
xor
xlat
lea
sbb
cwde
or
retf
mov
xor
pop
xor
add
gs
inc
xchg
or
mov
cmp
js
cli
sub
cwde
dec
dec
sbb
iret
or
xchg
sub
das
sub
jnp
and
loop
repnz
loop
daa
sbb
inc
data16
out
sbb
ss
xchg
and
mov
jne
add
push
fsubr
mov
push
add
sbb
call
scas
mov
inc
loopne
dec
in
out
je
in
in
inc
jnp
push
test
pop
enter
jae
aam
inc
arpl
cli
loop
jge
xchg
mov
xor
mov
and
jle
mov
cdq
scas
rcr
ret
xor
mov
bound
dec
je
out
(bad)
pop
push
push
mov
popa
and
xchg
js
lods
inc
or
lock
scas
pop
fidiv
cmp
daa
mov
inc
pop
movs
ja
enter
sar
pop
xor
push
les
mov
push
push
jp
xor
and
fnsave
sub
push
jnp
jo
inc
adc
rol
pop
inc
adc
and
inc
xchg
mov
xor
icebp
rol
mov
scas
pusha
cmc
add
mov
xadd
cmp
dec
enter
sbb
inc
push
in
rsqrtps
jbe
fcmovne
or
(bad)
cmp
mov
fst
inc
out
sub
movs
mov
push
jae
mov
je
and
mov
lahf
cwde
mov
cmps
inc
sbb
fwait
lds
sub
scas
repz
int
or
and
sub
in
mov
fnstenv
pop
hlt
or
test
stos
ja
cmp
mov
pop
loope
aad
das
cmp
pop
mov
push
mov
shr
call
fwait
adc
push
mov
mov
dec
jecxz
jg
adc
or
xchg
add
inc
not
push
jg
dec
sbb
add
es
cmp
cmps
xchg
or
cmp
inc
mov
pop
xor
mov
sbb
inc
cmps
dec
mov
in
iret
pop
cdq
mov
frstor
jge
mov
fbstp
jp
aam
mov
pop
dec
inc
xchg
cmp
push
into
call
fisubr
jge
cmps
inc
lods
and
repz
sbb
inc
(bad)
in
inc
mov
sbb
stos
add
stc
xchg
adc
or
sub
push
arpl
inc
lea
in
gs
fsubr
inc
(bad)
fs
jo
call
and
and
daa
popf
mov
cmp
adc
rcr
test
fs
scas
mov
popf
mov
inc
sub
jmp
ja
mov
mov
shr
jne
cmps
push
sahf
scas
cmp
jg
test
fwait
hlt
gs
std
sbb
fsub
fwait
inc
dec
sti
in
cmp
jmp
test
pop
sar
cdq
pusha
cwde
(bad)
aaa
imul
ret
or
xchg
and
sti
xor
pop
add
fstp
mov
inc
cmp
sub
dec
movs
pop
jmp
rep
(bad)
neg
aaa
les
cmps
movs
inc
jns
pop
lock
ins
mov
in
fwait
jge
pop
je
pop
jmp
inc
mov
mov
fcom
push
aas
mov
or
sbb
xchg
inc
cs
mov
cmp
jae
int
popa
(bad)
mov
das
jmp
lds
clc
dec
mov
lea
mov
push
rol
jb
or
out
jle
dec
pop
fmul
jmp
or
xor
pop
add
or
inc
xor
mov
inc
sub
or
rcl
sub
push
push
pop
shl
pop
fbstp
pop
push
lea
fldenv
mov
cmp
adc
in
bound
jg
pop
jne
stos
out
ins
iret
add
out
jo
in
shr
push
pushf
lds
or
dec
mov
add
cwde
test
je
mov
dec
mov
inc
ror
cdq
shl
jp
das
cmp
sub
outs
and
in
jo
xchg
or
into
dec
ins
dec
adc
movs
dec
out
lods
dec
adc
test
mov
out
imul
mov
into
mov
push
adc
not
cmp
and
pop
repnz
hlt
jnp
push
add
xchg
dec
jge
outs
or
loop
out
push
fwait
or
jns
inc
push
loope
adc
push
jnp
lea
in
aas
scas
pop
jg
sbb
push
adc
test
int3
xor
mov
sbb
das
cld
jno
vmovupd
fwait
dec
retf
imul
dec
js
ja
jmp
or
sbb
gs
push
wbinvd
sub
mov
jae
int3
mov
jb
shl
or
loopne
mov
(bad)
cmc
sub
nop
out
xchg
scas
push
and
inc
add
push
adc
adc
cmps
push
cmc
push
ja
clc
fwait
mul
mov
ins
shr
icebp
pop
push
fistp
stc
std
ds
out
ret
pushw
rcr
in
into
mov
fadd
mov
sbb
int
(bad)
minps
out
xchg
aas
fcom
(bad)
mov
jnp
mov
out
sub
mov
push
sbb
or
clc
mov
sar
sbb
inc
push
rcr
xchg
dec
dec
mov
mov
adc
push
cmp
inc
jb
(bad)
pop
mov
pushf
cwde
xchg
pop
aaa
or
sbb
xchg
dec
cs
jge
mov
cmps
fdivr
loope
xchg
pop
pop
sub
xchg
jge
popa
mov
nop
and
(bad)
add
push
dec
repnz
out
rol
stos
sbb
xor
xchg
sub
inc
add
or
inc
and
adc
fcmovu
xor
dec
popa
jns
das
pop
mov
fcomp
inc
cmp
out
ret
test
xchg
dec
or
mov
(bad)
pop
movs
out
das
iret
xchg
mov
leave
lods
mov
xchg
(bad)
xchg
pop
shl
jl
stos
pop
loope
sub
mov
cs
jno
test
xchg
mov
cli
jmp
imul
jg
mov
cmp
inc
or
pop
xchg
cmps
mov
repz
push
add
lds
test
ret
int3
add
outs
int
or
ds
jo
push
add
cmp
and
cmp
out
sbb
pop
sub
in
push
rcl
ret
mov
stc
(bad)
cmp
cwde
jb
pop
lods
outs
dec
aam
mov
rol
stos
test
dec
jp
xor
fdiv
dec
pop
push
cmp
adc
cmp
imul
mov
rol
pop
mov
xor
sub
out
lea
fwait
(bad)
retf
aad
and
cmp
pop
popf
aad
mov
test
daa
mov
ret
mov
inc
les
jl
jl
out
push
icebp
cdq
mov
cs
(bad)
sti
mov
(bad)
push
jp
int
lods
xor
pop
dec
mov
aam
add
mov
jnp
push
jno
mov
jmp
push
shl
mov
mov
(bad)
cmp
add
test
push
push
cmp
xchg
ficom
and
jp
mov
xchg
je
cmp
or
fsubr
imul
mov
push
sub
out
xor
das
push
xchg
je
dec
xor
cmp
pop
daa
xor
jno
cs
add
loopne
rep
jmp
clc
dec
xchg
xlat
sti
scas
or
cmp
leave
cli
push
in
cli
stc
daa
and
jmp
and
push
outs
inc
jmp
call
jnp
stc
aaa
xchg
sbb
xor
out
or
mov
sbb
mov
xor
or
test
mov
test
cmp
cmps
jnp
mov
ret
out
call
clc
(bad)
shl
xor
sahf
out
iret
in
(bad)
vgetmantps
int3
jmp
add
jge
adc
loop
pusha
dec
push
addr16
adc
or
push
inc
mov
cwde
cli
and
push
lods
xchg
mov
jnp
add
pop
adc
sar
jle
xor
es
push
push
mov
cld
cmp
std
sub
jecxz
shr
jne
pop
add
int
(bad)
outs
push
sbb
mov
add
push
movs
cli
jbe
jno
xchg
loop
xchg
inc
pop
mov
ja
jnp
hlt
(bad)
(bad)
mov
dec
(bad)
neg
fisub
pushf
je
sub
mov
pop
sbb
push
pop
fild
dec
(bad)
loop
jo
mov
jne
sub
inc
repz
xor
xchg
cmps
jae
cmp
adc
popa
mov
or
lahf
scas
add
std
cmp
fisub
lock
ror
inc
and
pop
fnstenv
(bad)
gs
xor
repz
ret
out
push
adc
test
inc
or
aaa
push
sti
and
pop
mov
in
jecxz
call
jnp
cdq
push
pop
(bad)
retf
jne
mov
jmp
leave
pop
lock
out
icebp
das
lea
dec
jecxz
shr
add
out
cli
les
clc
je
sbb
scas
repz
in
or
inc
jmp
pushf
shr
pop
loope
retf
ss
adc
aas
sti
cdq
hlt
sub
push
push
add
mov
push
aaa
jns
loopne
and
jno
retf
call
mov
inc
pop
pop
sar
jp
pop
adc
outs
jo
sub
je
mov
push
mov
loope
and
in
sub
clc
imul
in
sub
cmp
cmp
addr16
push
inc
xchg
shufps
in
in
imul
xlat
add
dec
ja
cmp
sbb
mov
lock
jb
movs
add
cmps
icebp
(bad)
movs
aad
inc
sbb
popf
pop
in
movs
adc
ins
and
add
dec
mov
iret
(bad)
std
inc
inc
enter
pop
call
push
call
xlat
jmp
out
cwde
xchg
cmc
mov
scas
aam
cmp
paddsw
aam
mov
fst
out
nop
fadd
adc
ror
and
jbe
add
sar
xchg
push
in
mov
inc
lods
push
pop
retf
lds
or
rcl
pop
scas
inc
sub
jl
add
pop
lods
pop
push
jnp
shr
push
jo
in
push
xchg
push
fnstenv
out
inc
fst
cli
(bad)
or
push
pop
xchg
push
xor
jo
fimul
scas
stos
push
(bad)
add
data16
push
xchg
int3
or
push
loope
ins
push
sbb
call
test
mov
rol
je
stos
xchg
xchg
add
lods
loope
add
shr
pusha
mov
mov
adc
inc
sub
fild
fld
loopne
xchg
repnz
pop
mov
lds
cs
cmp
lock
je
cmp
mov
sbb
in
jg
ja
(bad)
cmp
fstp
pop
jge
lods
les
fstp
lods
jne
in
mov
push
sti
(bad)
pop
mov
sub
pop
pop
mov
inc
jg
and
add
das
add
mov
jns
jmp
push
fcomp
mov
mov
imul
nop
shl
loopne
xchg
pop
rcl
movs
mov
jns
pop
ficomp
mov
and
(bad)
fsubr
sbb
imul
cwde
bound
inc
lods
mov
and
mov
pop
not
ss
pop
or
in
push
lea
xchg
pop
dec
inc
scas
es
xchg
cmp
addr16
adc
and
in
mov
push
sbb
dec
mov
stos
xchg
out
out
test
daa
sbb
pop
and
cmc
or
pop
scas
shl
pushf
or
int
jmp
movs
test
test
mov
es
test
inc
ins
xchg
cmc
stos
aad
not
push
aas
sbb
aad
in
adc
jo
cmps
mov
sbb
into
jnp
jmp
leave
cmps
jecxz
jnp
or
cmp
push
dec
stos
xchg
fstp
sbb
lods
cs
dec
push
push
in
xchg
cmps
repnz
lahf
sbb
(bad)
ins
and
pop
rep
loope
cwde
(bad)
lods
fs
push
sbb
push
mov
enter
sub
aas
sub
inc
mov
ret
(bad)
sub
stos
pop
inc
jnp
sbb
cmps
jns
movs
jmp
stos
fdiv
imul
(bad)
scas
test
out
call
cmp
sbb
data16
movs
cmc
int3
icebp
fstp
outs
lods
add
sahf
movs
aad
in
jnp
std
js
daa
adc
aaa
mov
pop
cld
sub
imul
sbb
fs
std
addr16
movs
dec
mov
adc
lds
inc
rcr
addr16
stos
mov
adc
jmp
xchg
sti
and
mov
mov
push
xor
inc
popa
xlat
sti
out
iret
outs
rcl
xchg
jbe
scas
popa
cmps
push
aaa
mov
cwde
jge
stos
clc
cmp
cmp
loop
inc
loop
loope
mov
jl
and
dec
jmp
cli
inc
call
push
push
mov
sub
ja
jl
pop
daa
mov
inc
pop
sub
pop
test
(bad)
mov
inc
test
or
mov
inc
cmps
pop
retf
aad
stos
cdq
dec
mov
retf
mov
test
push
jno
shl
cmp
inc
cli
or
cmps
pop
sahf
dec
int3
mov
les
or
xchg
dec
adc
movs
scas
js
popa
fdiv
test
aaa
xor
iret
adc
xchg
cld
sub
mov
ins
adc
aam
mov
dec
out
rcl
cmp
inc
mov
ds
or
xchg
iret
sbb
clc
jecxz
cmp
inc
sub
icebp
leave
jo
and
cmc
retf
xor
jno
or
add
or
pop
je
ss
xchg
(bad)
std
ss
mov
arpl
cmp
idiv
and
cmp
sti
pop
adc
lods
(bad)
ds
jo
cli
inc
xchg
es
aaa
pop
pop
fnstsw
sbb
sub
imul
cmp
jno
add
sbb
mov
xchg
mov
push
cwde
push
adc
pop
xchg
add
mov
cli
mov
stos
out
jae
sub
arpl
sbb
jo
xchg
fild
dec
wbinvd
(bad)
push
mov
jle
retf
jge
mov
sbb
mov
adc
inc
mov
mov
test
cmp
fsub
mov
mov
jnp
jne
fldcw
jbe
das
add
cmc
sti
sub
retf
mov
sbb
fnstsw
pop
dec
xchg
inc
cmp
and
dec
icebp
lahf
xchg
xchg
stc
inc
mov
push
mov
ret
stc
repnz
cli
in
push
cmc
pop
sti
inc
sub
push
mov
adc
xchg
loop
(bad)
arpl
mov
test
add
lock
xchg
data16
push
sub
movs
or
adc
add
sub
enter
dec
mov
clc
dec
inc
xchg
ror
ret
sbb
in
repz
xchg
jecxz
pop
in
sub
test
mov
daa
enter
fnstsw
aam
pop
mov
xor
jp
(bad)
test
inc
inc
mov
xor
movs
daa
movs
add
outs
push
out
and
add
mov
or
repnz
push
dec
inc
adc
clc
aas
mov
jl
xor
xchg
cdq
jne
pop
ins
xchg
cmp
(bad)
rcl
pop
push
lods
xor
mov
mov
cld
repz
fwait
xor
push
jno
cmp
adc
sub
mov
dec
mov
jl
xor
fst
push
cmps
outs
lds
mov
scas
pop
mov
push
sbb
ret
dec
or
in
adc
xchg
out
nop
xor
sub
mov
test
mov
mov
inc
add
mov
lds
mov
retf
fcom
jne
sahf
inc
aam
jno
sub
pop
cmp
push
push
sbb
xchg
push
stos
ins
fidivr
and
pop
xchg
outs
retf
jl
popa
jge
outs
xchg
(bad)
fldcw
fsub
and
test
mov
dec
shl
jmp
popf
ins
ror
stc
jo
scas
(bad)
icebp
imul
push
loope
fmul
pop
inc
retf
test
cld
and
sbb
xor
movs
into
dec
push
cmp
je
mov
sar
div
ins
dec
inc
mov
jno
(bad)
neg
(bad)
and
add
mov
test
inc
cmp
pop
(bad)
xor
pop
rcl
sar
retf
out
mov
inc
mov
add
ror
imul
scas
loop
xchg
cmp
vmread
ss
js
xchg
xchg
inc
jmp
ror
in
mov
call
out
sub
repnz
dec
(bad)
xchg
jmp
dec
sbb
addr16
inc
imul
out
sub
aas
mov
dec
and
(bad)
ds
add
repz
lods
and
xor
les
scas
cld
and
mov
cmp
nop
clc
jnp
ins
fcomp
and
pop
in
dec
loop
je
xchg
jmp
cmp
fwait
jmp
into
jp
fisttp
int3
fisttp
out
fild
mov
lds
fsubr
add
ret
js
mov
add
push
out
xor
xlat
or
sbb
and
jge
bnd
cmps
mov
adc
inc
adc
test
add
inc
call
cmp
(bad)
int3
inc
add
xor
xlat
dec
mov
jecxz
bound
js
and
cmp
adc
pop
sahf
cmp
jns
xchg
sbb
addr16
popf
sub
sub
add
and
fwait
mov
mov
adc
test
xor
test
in
shr
gs
mov
push
or
or
cmps
jmp
lea
jmp
adc
and
pmaxub
push
pop
cmp
mov
nop
ficom
stc
fisubr
xchg
xchg
inc
adc
sub
and
imul
call
and
mov
sar
div
xor
cmp
in
add
xchg
les
lods
dec
dec
push
push
cs
and
pop
(bad)
push
lods
push
xlat
sbb
xor
xor
rdtsc
hlt
retf
add
retf
movs
aaa
les
stos
xor
dec
pop
mov
or
cld
mov
cwde
pop
in
fs
jo
cmp
mov
sbb
fld
repnz
mul
stos
add
mov
add
jl
jmp
mov
cli
outs
icebp
inc
xchg
imul
jb
outs
xchg
add
frstor
mov
jbe
lea
cwde
movs
iret
div
lahf
xchg
jg
(bad)
pop
pop
nop
ror
int3
or
rol
and
xchg
div
sub
pop
jbe
lods
not
cwde
jns
mov
mov
test
call
mov
(bad)
fild
sub
les
int
aad
cmps
shl
xor
jbe
jb
dec
into
jmp
or
fcomip
push
inc
sbb
ins
mov
mov
scas
fmul
xlat
sbb
je
mov
in
lods
mov
call
ins
jl
fbld
xor
adc
jb
rol
xchg
add
sbb
dec
or
mov
push
call
fild
out
lea
pop
and
adc
push
add
and
adc
dec
addr16
and
push
and
movs
dec
adc
imul
mov
popa
jmp
push
cwde
push
popa
ret
adc
mov
xchg
sub
arpl
test
push
xchg
jge
push
retf
jp
sub
fld
rol
jns
jne
iret
mov
popa
sub
jb
push
sbb
xchg
fidivr
jnp
fwait
jg
outs
add
adc
or
sbb
add
scas
sub
mov
sbb
pusha
cmp
push
mov
adc
adc
inc
push
rcr
xchg
test
(bad)
int
(bad)
in
dec
pop
imul
inc
call
out
push
jle
pop
sub
(bad)
cmp
mov
test
and
fsubr
adc
idiv
mov
sbb
push
call
movs
int
lea
lock
or
xchg
lea
pop
in
mov
movs
add
mov
push
aad
jo
adc
icebp
add
or
or
mov
add
ret
fisubr
cmp
test
inc
dec
jecxz
sahf
cmc
xchg
cmp
mov
mov
mov
xlat
cmp
mov
out
rcl
daa
cld
mov
add
xchg
fnstenv
cmp
clc
push
sbb
in
rcl
xchg
lods
push
mov
cdq
mov
sub
out
daa
push
dec
pop
cwde
mov
inc
xchg
xor
pop
pop
dec
xchg
pop
xor
xor
mov
inc
repnz
and
fcmovnbe
(bad)
jno
jne
ja
stos
repz
aas
(bad)
imul
(bad)
mov
push
les
out
cld
test
push
in
mov
shl
movs
sbb
jecxz
jmp
int3
in
and
ret
adc
cmp
hlt
mov
arpl
stc
jnp
dec
sub
in
loopne
repnz
fs
push
cmp
and
fadd
push
cmp
push
test
rol
dec
mov
mov
aaa
jo
mov
fild
fdivr
clc
pop
neg
cmps
push
adc
push
xchg
clc
push
outs
sub
mov
adc
add
sbb
stos
and
mov
push
idiv
stc
call
into
jge
lds
cmp
pop
adc
fs
es
cmp
push
inc
push
pop
and
lds
cmp
fsubp
sbb
lock
arpl
rcr
arpl
stos
xor
ror
test
jnp
sbb
jne
in
pop
pusha
popa
pop
je
or
adc
dec
pop
jle
stc
sub
loop
loop
mov
mov
inc
and
ds
dec
push
inc
push
and
pop
adc
popf
and
xor
out
cmp
sub
and
arpl
inc
mov
sub
sub
mov
scas
shl
enter
add
test
push
dec
ja
ja
xchg
movs
jno
mov
mov
inc
out
and
jae
test
dec
and
in
(bad)
in
ret
mov
sub
das
cmps
mov
cmp
std
xchg
add
add
bound
sahf
pushf
xchg
addr16
lock
or
push
(bad)
cmps
sbb
lds
adc
add
jle
cmc
xchg
sbb
pop
mov
and
es
mov
aas
jge
lock
(bad)
mov
(bad)
jmp
daa
cmps
stc
aad
adc
jmp
fstp
mov
cld
cdq
or
sti
xor
or
das
clc
xor
adc
call
push
std
inc
sub
scas
mov
test
cld
jmp
jg
cli
pop
shl
pop
add
xchg
mov
sbb
push
retf
sahf
or
dec
mov
and
jnp
push
sub
dec
lods
jae
pop
fisub
pop
(bad)
not
push
or
jnp
mov
mov
push
fnstcw
iret
out
jle
pop
call
pop
fadd
sbb
fcomp
pop
or
mov
arpl
mov
scas
fbld
or
pop
dec
xor
jmp
xchg
sub
sahf
jae
in
xchg
aaa
sbb
adc
popa
out
daa
push
push
adc
aas
aaa
xlat
(bad)
pop
sar
fst
jbe
mov
in
pop
aaa
and
adc
and
xor
push
(bad)
in
cmp
icebp
addr16
or
and
imul
cmc
loopne
adc
pop
and
aam
jp
rol
xchg
popf
ret
dec
lock
or
into
jg
add
inc
pop
inc
xchg
fsub
dec
mov
xchg
(bad)
jmp
inc
pop
mov
mov
and
pushf
loop
sub
fdivr
xchg
add
sbb
inc
addr16
es
addr16
in
fmul
retf
lods
push
pop
mov
lock
mov
cdq
cmp
repnz
dec
mov
push
cmc
out
out
in
or
mov
fstp
ret
iret
repnz
clc
aad
xchg
xchg
jge
test
jl
and
push
js
cmp
ss
mov
mov
jle
(bad)
cwde
pop
cmp
jecxz
and
test
cmp
arpl
out
xchg
call
int
mov
jns
test
out
loopne
out
es
dec
xor
ds
les
pop
adc
or
mov
push
mov
out
mov
fidivr
lea
dec
inc
dec
push
int
movs
jecxz
test
aad
adc
push
(bad)
push
and
shr
xor
xchg
inc
sbb
pushf
cmp
lock
lods
sbb
dec
jo
jl
sti
inc
cld
pop
outs
call
and
adc
jbe
int3
clc
jl
xchg
sbb
xchg
jno
or
jmp
mov
lock
fcomp
push
test
sbb
and
pop
pop
cmp
std
sub
or
iret
sbb
mov
fild
push
and
call
test
mov
clc
loope
retf
add
lods
lods
lds
sar
stos
icebp
jns
sub
cs
mov
push
push
or
push
lahf
neg
daa
ins
aaa
(bad)
std
fcomi
inc
push
sub
and
mov
lods
and
dec
outs
sti
push
xchg
int
adc
hlt
inc
in
sub
(bad)
cli
adc
int3
imul
jns
cmp
loope
fcmovnb
dec
push
mov
in
movs
sti
out
xchg
cs
out
mov
outs
loope
(bad)
out
mov
not
test
cmps
pop
inc
bound
mov
daa
xchg
or
pushf
or
retf
js
shl
movs
bt
pop
movs
test
push
imul
inc
out
iret
pop
cmp
or
mov
mov
repnz
pusha
mov
xchg
daa
inc
xchg
add
jge
pusha
mov
mov
add
xchg
and
add
ficomp
xchg
mov
scas
inc
sbb
push
mov
mov
xor
outs
fnstcw
js
add
aad
repz
fiadd
ins
pop
mov
lods
clc
adc
sti
js
mov
into
add
add
leave
xlat
mov
(bad)
mov
push
sub
(bad)
std
data16
das
xchg
jg
cmp
push
jp
cmp
jecxz
repz
sbb
jecxz
xchg
test
pusha
iret
cld
lods
outs
and
push
mov
std
push
fist
sbb
outs
divps
push
loop
mov
jno
in
(bad)
xor
cwde
pop
ins
in
lea
fbstp
add
out
es
mov
add
and
stos
and
fstp
cmp
mov
pop
es
jo
mov
cmps
mov
loop
das
mov
push
adc
mov
cmp
mov
mov
mov
cs
mov
dec
pop
xchg
push
cld
fsub
sahf
rcr
push
jl
aaa
push
mov
push
and
out
dec
cmp
test
popf
mov
stos
dec
mov
hlt
repnz
and
pop
adc
pop
push
nop
inc
and
mov
into
shl
ja
push
and
test
(bad)
jo
or
mov
cmc
inc
movs
cwde
sbb
pop
hlt
daa
jnp
push
add
int3
xor
or
movs
(bad)
repnz
das
test
or
div
call
sti
push
mov
mov
arpl
clc
lods
push
and
xor
xor
sbb
addr16
cmp
ins
adc
jp
mov
inc
or
inc
fdiv
rcr
sahf
xchg
sar
lock
aaa
push
lock
shr
js
test
fwait
in
into
pop
iret
dec
cmp
cmp
outs
mov
in
jmp
inc
sti
js
in
xor
adc
mov
push
cmp
jle
xor
push
shl
adc
adc
jnp
sti
push
mov
push
inc
aaa
out
fldl2t
(bad)
mov
and
mov
ins
div
int
xchg
or
jecxz
adc
fsubr
arpl
jbe
sbb
mov
xchg
ins
adc
add
mov
loop
sub
or
mov
cmp
sub
push
or
popf
or
and
in
(bad)
fchs
icebp
xchg
sub
xor
fdiv
cvtdq2ps
add
jb
cmc
mov
push
inc
cmp
sar
mov
xor
and
lea
cs
jmp
fadd
xchg
(bad)
int3
fldcw
mov
in
imul
lods
popf
js
inc
mov
xchg
add
fdivr
cdq
lea
add
dec
call
push
sbb
xchg
jle
cmovle
sbb
mov
or
pop
push
pop
outs
mov
sub
stos
lods
stc
pop
jns
cli
aam
push
sbb
cmc
dec
add
shl
cmp
dec
add
leave
ds
fstp
dec
add
enter
sub
pop
(bad)
pop
sub
adc
pop
inc
cmp
imul
or
xchg
and
lods
adc
mov
call
fst
add
ret
sub
cmc
mov
cmp
jle
adc
or
or
sbb
or
sub
add
aaa
nop
pop
mov
jmp
xchg
int3
movs
out
fld
clc
inc
inc
inc
pop
les
mov
pushf
adc
mov
or
push
fs
ja
in
loop
mov
mov
sbb
pop
jo
es
call
popa
mov
push
loopne
inc
or
mov
movs
(bad)
pop
fadd
push
stos
add
adc
pop
cmp
sub
mov
fisub
dec
sub
ins
into
jmp
dec
inc
or
dec
or
rol
adc
sub
sbb
push
loop
mov
daa
mov
cmp
mov
dec
out
sar
jecxz
cmp
lahf
inc
dec
jne
mov
adc
adc
inc
sbb
fwait
mov
test
shl
jmp
mov
ror
les
das
cmp
gs
sub
pushf
xor
movs
loope
loopne
popf
loop
mov
pop
fiadd
in
mov
into
xor
cli
and
mov
mov
fidiv
mov
inc
sti
mov
out
xor
mov
add
loope
sbb
stos
sbb
loope
push
push
jbe
push
dec
aam
add
mov
daa
shr
cmp
adc
inc
xor
pop
ret
jmp
es
mov
leave
dec
cmp
fidiv
and
cmp
xchg
sbb
cdq
adc
movs
clc
adc
adc
pusha
mov
mov
and
test
icebp
movs
pusha
sbb
and
sahf
push
fcom
(bad)
xor
(bad)
and
push
pop
ror
(bad)
or
iret
fisub
fdiv
xor
scas
(bad)
test
add
pop
xor
fnsave
ret
stos
call
std
pusha
jecxz
repnz
and
jge
dec
mov
cmp
pop
sbb
je
or
sbb
test
dec
call
mov
mov
xor
iret
mov
test
pop
and
inc
rep
popf
mov
popf
sar
pop
jnp
jne
mov
imul
js
test
loop
(bad)
push
cmp
fcmovnu
fisub
push
xor
cmp
mov
jle
mov
sbb
jmp
dec
mov
or
ins
xchg
fnstenv
or
daa
and
mov
cmp
sub
sti
bound
cmp
lods
adc
jae
sbb
mov
loopne
fnstenv
mov
xchg
bound
icebp
sub
js
hlt
add
pop
ins
out
addr16
rcl
inc
jmp
cmp
(bad)
mov
into
dec
mov
sub
mov
in
xchg
movs
(bad)
mov
ds
addr16
mov
int
mov
cmp
jp
mov
push
add
xchg
mov
scas
sbb
pop
mov
inc
fchs
imul
or
pop
sar
mov
mov
out
cmps
push
dec
adc
retf
xchg
add
pop
dec
inc
jbe
sbb
sub
inc
push
push
fs
sbb
ja
cmp
ror
and
pop
jl
jge
fcom
(bad)
jl
push
out
push
add
dec
leave
enter
cmc
outs
int
pop
sub
cld
in
fild
not
loopne
icebp
les
mov
jmp
push
popf
inc
es
push
jo
ins
dec
inc
cs
pop
pop
sbb
sti
rcl
mov
aam
lods
dec
cmp
xchg
js
jecxz
mov
mov
cmp
xchg
push
in
dec
mov
call
out
ins
jge
test
or
cmp
loopne
out
loop
arpl
push
cld
jl
inc
repz
adc
and
je
push
ins
sub
rep
adc
xor
test
pop
clc
mov
dec
mov
mov
jge
inc
adc
rcl
sub
jmp
add
cdq
sub
imul
mov
add
xchg
mov
and
fiadd
jb
sub
sahf
cmp
aad
ror
cmp
les
cmp
out
lods
pop
mov
aad
lods
or
es
inc
in
daa
loope
sub
cmps
xchg
rcl
pop
addr16
mov
jge
fld
mov
pop
mov
pop
or
or
xchg
or
push
mov
neg
pop
and
mov
rol
sti
inc
mov
cld
xchg
test
ret
push
test
lea
inc
inc
mov
jmp
ins
es
inc
psadbw
mov
stc
lahf
jmp
mov
push
pop
lods
cmps
xchg
js
adc
dec
scas
fwait
sbb
pop
loopne
jmp
retf
dec
cli
inc
push
mov
adc
mov
ficom
mov
stc
test
sub
jo
dec
pop
xchg
lock
sub
sub
cmp
daa
sbb
pop
push
fsub
fld
jne
lds
add
ret
jnp
les
call
(bad)
jae
adc
lock
clc
adc
mov
test
outs
rcl
push
mov
mov
mov
jae
push
pusha
enter
sbb
xor
fisttp
retf
or
push
and
and
xchg
jmp
add
mov
fwait
retf
lods
cmps
mov
xchg
rol
pop
sub
int
or
inc
hlt
js
fnstsw
add
push
test
stos
jmp
(bad)
in
dec
dec
jbe
pop
fsubr
sbb
cli
sbb
dec
popf
jle
or
jl
fcom
daa
daa
pop
xchg
icebp
(bad)
sub
mov
jnp
sar
sbb
fiadd
inc
mov
pushf
lock
push
fs
and
cmps
test
(bad)
jmp
movs
jno
jns
test
fxch
mov
jno
pop
scas
or
das
sbb
adc
popf
and
aad
call
xchg
in
lock
data16
mov
repz
push
hlt
xchg
jmp
jno
mov
xlat
push
cmp
imul
int3
out
mov
jp
dec
inc
mov
push
in
sub
lahf
retf
and
xchg
repz
stos
cld
mov
nop
xor
addr16
sub
cwde
mov
test
sbb
mov
sbb
cmp
mov
mov
dec
pushf
mov
pop
jl
ja
movs
call
aad
jae
dec
in
inc
into
xchg
mov
int3
std
inc
or
div
sbb
mov
mov
adc
call
test
push
stos
xor
movs
ret
scas
fldenv
fiadd
mov
hlt
push
push
sub
rcr
xor
or
rcr
(bad)
xor
jmp
mov
or
sti
jmp
(bad)
inc
or
inc
jns
xor
idiv
cmp
outs
sub
sbb
jb
mov
sbb
(bad)
out
js
cmp
cli
mov
pop
repz
xor
cmps
cmps
cmp
or
test
dec
fnstcw
xor
sahf
outs
push
mov
sbb
lahf
xor
imul
cmp
loop
mov
add
and
pop
mov
push
mov
push
inc
add
repnz
sub
fidiv
lock
adc
stc
add
adc
ss
cmp
mov
and
xchg
push
aaa
pop
inc
aas
or
jne
aas
jae
and
mov
stos
ja
push
xor
mov
xchg
push
xchg
dec
adc
stos
xor
test
leave
mov
jae
in
outs
out
fisubr
cld
jp
jno
imul
leave
and
mov
ret
mov
mov
arpl
push
fdivr
leave
cmp
pop
ror
sbb
das
mov
imul
inc
push
mov
pop
(bad)
loope
scas
inc
sub
pop
lahf
jmp
into
out
jge
push
cmps
daa
push
pop
mov
and
or
leave
out
mov
mov
push
adc
nop
jb
push
add
mov
push
jno
shl
xchg
je
xchg
sub
push
mov
push
push
in
mov
or
jp
add
inc
dec
cmps
dec
jae
mov
sbb
mov
lods
loopne
dec
test
lahf
out
cmp
in
or
aad
and
sbb
adc
dec
adc
(bad)
outs
and
fbld
xor
lahf
mov
mov
pop
clc
mov
mov
push
inc
dec
or
int3
daa
rcl
push
and
out
out
aas
int3
jmp
inc
mov
sbb
inc
push
outs
out
out
sub
adc
fiadd
push
movs
or
dec
inc
pop
sbb
adc
jge
cmps
clc
push
inc
inc
cmp
in
test
mov
add
dec
pusha
cli
cmps
(bad)
sar
and
outs
das
icebp
rol
(bad)
sub
fldenv
push
mov
cmp
xchg
cmps
mov
xor
xchg
aas
xchg
or
int3
iret
or
cmp
push
leave
movs
rol
mov
jns
sbb
out
aad
scas
fwait
add
popa
push
cli
stos
popa
and
ins
hlt
call
xor
fstp
mov
data16
fs
dec
not
(bad)
sbb
dec
outs
stos
or
loop
pop
pop
vmovntps
popa
jp
addr16
sbb
popf
adc
mov
adc
pushf
jno
sahf
pop
adc
dec
mov
es
cdq
cld
xor
pop
es
xchg
fldenv
xchg
pop
jb
(bad)
dec
cmp
std
mov
push
xchg
push
iret
pop
movs
shr
int3
xchg
cdq
dec
or
and
sbb
dec
pushf
or
xchg
jl
(bad)
(bad)
icebp
pop
dec
fidivr
cmp
and
(bad)
dec
pop
popa
rol
add
mov
and
inc
mov
pop
out
or
fsub
std
mov
push
dec
movs
xlat
jb
inc
daa
repnz
or
out
mov
or
inc
xchg
sti
sub
fist
daa
je
cmps
and
test
inc
mov
aas
inc
pushf
cmc
fimul
dec
mov
dec
je
ficom
mov
jbe
inc
mov
sbb
pop
fidivr
je
push
mov
call
out
and
xchg
jo
push
sbb
mov
inc
xchg
iret
mov
cwde
sub
test
push
xor
out
mov
pop
mov
jg
jno
imul
push
mov
fdivr
addr16
xchg
dec
cli
fwait
add
mov
shl
jl
lods
test
lods
push
jle
push
pop
cmp
lahf
dec
dec
test
dec
nop
adc
dec
or
mov
addr16
mov
xor
bound
fst
daa
and
aam
inc
mov
fild
push
rol
aas
mov
adc
(bad)
call
xchg
xchg
pop
and
ins
cs
shl
mov
pop
adc
jb
mov
pushf
int
(bad)
loope
adc
xchg
loope
in
push
into
sub
out
cmps
(bad)
xchg
sbb
xor
cmp
pop
das
fst
sub
imul
mov
in
dec
fld
fnstenv
pop
jl
push
dec
sbb
inc
sub
cmc
mov
aad
(bad)
jmp
xchg
sub
outs
pop
or
hlt
cmp
mov
in
cmp
call
fidivr
sbb
inc
push
ja
nop
and
(bad)
int
imul
push
ss
add
jns
ins
jmp
jo
(bad)
dec
inc
inc
rcl
xor
jmp
maskmovq
not
mov
data16
sbb
mov
mov
push
or
xchg
pushf
cmp
push
dec
push
pop
call
dec
out
lea
xor
out
popa
(bad)
sbb
xor
adc
inc
fcom
fisttp
push
xor
mov
fsubr
cmp
clc
cmps
mov
jmp
add
jg
retf
xchg
cld
shr
fldenv
mov
call
(bad)
sbb
out
mov
fs
test
and
dec
push
inc
jo
sub
jmp
sub
fwait
mov
out
inc
mov
xchg
xor
mov
xor
sbb
jle
aam
sbb
outs
ds
cmp
mov
aad
dec
cmc
je
scas
ss
movs
cmp
and
sbb
cmps
xchg
clc
enter
sbb
loop
sti
fcomp
mov
arpl
push
add
xchg
or
(bad)
mov
stos
ja
gs
jg
xor
sub
inc
add
rcl
mov
out
(bad)
sub
movs
iret
mov
shr
jmp
outs
das
enter
and
ins
out
lds
pusha
cs
scas
push
fcomip
xor
sub
mov
sub
inc
les
xor
xlat
jnp
mov
push
dec
mov
pusha
int3
dec
ret
and
bound
movs
or
adc
jbe
adc
adc
mov
sahf
mov
xchg
ficomp
and
inc
sub
or
mov
jns
push
xchg
retf
rcr
pop
xchg
sbb
adc
les
scas
inc
dec
inc
push
pop
pop
or
outs
jno
mov
adc
sub
clc
mov
mov
ss
adc
outs
and
data16
or
test
or
ficomp
gs
inc
sbb
mov
ret
scas
sbb
push
(bad)
clc
aaa
sahf
push
inc
scas
jecxz
jno
leave
outs
lahf
or
dec
or
and
and
loopne
stos
mov
mov
cmp
je
jne
adc
ret
leave
lds
xchg
in
std
imul
imul
(bad)
and
cmp
jle
das
aaa
ds
scas
jge
adc
lea
or
cmps
mov
loope
push
(bad)
pop
outs
push
sahf
mov
and
add
cmc
pop
in
sbb
xchg
xor
or
sbb
rcl
fld
cmp
or
inc
fbld
aad
sbb
ss
mov
loop
push
push
xlat
jge
or
retf
lock
out
jl
stos
xchg
ja
or
imul
inc
fisubr
xor
ss
icebp
hlt
mov
jle
loopne
cmp
fs
xor
sub
jle
shl
jmp
test
int3
push
mov
adc
pop
push
out
jp
push
pop
mov
scas
mov
stc
mov
pusha
icebp
pop
push
jb
retf
and
stos
rcr
sar
add
xor
jmp
nop
mov
dec
shl
test
mov
ret
fmul
dec
cld
repnz
inc
movs
add
test
push
xchg
in
ds
mov
stos
jbe
cmps
jg
adc
stos
jge
add
pop
scas
pop
and
or
punpckhbw
or
clc
iret
xor
xor
xchg
xchg
sub
inc
jmp
test
mov
jle
sbb
std
add
inc
adc
mov
cmp
mov
ror
outs
cmps
int
mov
fadd
loopne
mov
dec
adc
ins
scas
mov
add
fucomp
xchg
push
mov
aaa
loop
adc
jnp
pop
jnp
les
and
xchg
xchg
mov
add
mov
inc
push
push
inc
std
movs
out
hlt
pop
gs
out
xlat
or
ins
and
xor
aad
inc
outs
call
cli
mov
call
out
xlat
dec
inc
(bad)
in
(bad)
and
lods
adc
repz
and
ss
push
test
out
jae
scas
xchg
(bad)
enter
dec
movs
pushf
jmp
xor
fs
pop
lahf
(bad)
sti
mov
ja
bound
mov
push
std
pusha
stos
cmps
leave
int
repnz
out
shl
es
shl
mov
mov
scas
xchg
repz
out
push
call
jmp
cdq
arpl
wbinvd
retf
pop
cmc
iret
or
dec
dec
or
loopne
dec
stos
pusha
push
sub
xchg
ins
dec
call
push
mov
cwde
mov
movs
and
xchg
and
neg
nop
or
(bad)
jb
jno
rcl
in
add
cmovns
push
xchg
fidivr
pop
shl
mov
mov
fidiv
and
cmp
mov
lods
adc
dec
test
out
test
lods
sti
cli
inc
xchg
inc
or
mov
push
fidivr
fiadd
popf
movs
and
or
mov
jmp
mov
xchg
cmp
ficomp
in
mov
pushf
pop
fcmovne
pop
mov
fisub
jecxz
rol
xchg
pop
pop
(bad)
adc
push
dec
aad
mov
(bad)
cmc
xchg
inc
pushf
push
out
out
xchg
push
pop
aas
das
xor
je
je
add
xor
xor
add
or
pop
rcl
mov
mov
sub
lea
xchg
jb
or
and
xor
out
sub
rol
add
push
jecxz
mov
fild
(bad)
push
(bad)
mov
sub
jne
fisttp
and
or
pushf
push
pop
rol
push
adc
mov
rol
xchg
xor
in
and
repnz
loop
adc
jne
sbb
loope
jbe
or
dec
scas
mov
in
fst
cdq
cmp
inc
jns
test
int
mov
out
arpl
rcl
test
sbb
mov
movs
sti
mov
fcomp
inc
stos
sar
fisub
test
mov
pop
sub
xchg
xor
xchg
stos
dec
repnz
adc
outs
jno
sub
xor
iret
into
clc
fs
or
jecxz
dec
sub
push
jp
cmp
or
push
into
das
push
pushf
add
aad
outs
push
mov
xor
sbb
inc
lea
inc
fdivr
xor
adc
inc
or
aaa
or
mov
push
repz
pop
movs
fnstenv
mov
adc
push
sahf
mov
mov
jns
jmp
js
push
inc
outs
sbb
shr
scas
lods
sti
sbb
mov
hlt
ins
pop
in
inc
inc
jnp
adc
push
xor
adc
cli
xchg
mov
xor
dec
(bad)
shr
sub
or
cmp
jo
in
add
and
and
xlat
jnp
movs
jp
mov
test
in
and
cmp
pop
arpl
mov
push
xlat
xchg
push
mov
or
jae
mul
imul
jb
scas
mov
jmp
add
scas
inc
or
mov
movs
dec
or
cdq
pop
mov
fcmove
(bad)
sub
les
movs
pop
jae
jmp
pop
test
fsubr
pushf
retf
xor
cmp
stos
imul
(bad)
fcmovnbe
lahf
cmp
push
pop
cmc
sar
lock
sahf
rcr
mov
dec
xbegin
outs
sub
adc
leave
mov
cmp
adc
adc
sbb
cmp
or
movs
dec
xor
inc
sub
inc
cmp
pop
pop
xlat
je
push
pop
les
or
les
pop
push
jb
sbb
push
fs
adc
add
enter
mov
pop
adc
sahf
repnz
addr16
push
adc
retf
inc
sbb
ret
fs
push
retf
jo
cmc
mov
or
ja
push
loope
inc
out
idiv
push
ffree
leave
iret
cld
adc
pop
or
jno
xchg
repz
push
out
fsub
mov
jbe
lea
or
add
add
or
xor
and
rcr
jo
cld
jnp
and
jmp
stos
lea
aad
test
jl
shl
sub
cwde
aaa
ja
stos
and
jmp
into
mov
cld
xchg
mov
(bad)
cmp
jmp
int3
xchg
fdivr
fimul
mov
repz
imul
push
and
xchg
jge
and
mov
jmp
movs
add
or
fadd
std
jnp
jmp
pop
repnz
cdq
push
stc
xchg
dec
imul
and
fld
xor
jle
bound
dec
xchg
data16
addr16
movs
mov
cli
mov
mov
sbb
xchg
jmp
add
retf
outs
jl
mov
mov
loop
fmul
dec
je
jno
mov
mov
fstp
adc
mov
bound
push
sub
push
push
xchg
cmp
inc
fs
dec
adc
add
push
ins
xchg
aad
sbb
cmc
ins
mov
push
push
(bad)
iret
jg
jmp
(bad)
pop
xchg
std
es
xor
dec
leave
sbb
(bad)
(bad)
mov
xor
scas
fadd
xlat
into
icebp
mov
jl
mov
por
inc
mov
sbb
xchg
pop
mov
or
jle
test
pushf
pop
icebp
mov
cmp
dec
jecxz
inc
jge
shl
cli
test
cmp
jmp
inc
aas
lods
mov
push
adc
ret
xlat
xchg
pop
enter
sbb
idiv
add
mov
cmps
push
mov
push
aad
lods
rol
(bad)
(bad)
xlat
sub
mov
sub
or
or
mov
cdq
dec
in
pop
in
(bad)
scas
adc
pop
mov
icebp
test
mov
sub
(bad)
repnz
sbb
xor
mov
arpl
mov
add
push
mov
inc
loope
fwait
shr
lea
and
mov
xor
lock
cdq
out
call
cdq
in
arpl
add
repnz
(bad)
rcl
dec
and
ds
jae
addr16
or
sub
(bad)
cli
push
mov
mov
in
cmp
adc
xchg
dec
jmp
xchg
lahf
out
cmp
inc
jmp
imul
mov
ret
cmp
aas
mov
lock
sub
fdiv
pop
add
xor
cld
xchg
nop
push
(bad)
(bad)
sub
enter
xor
rol
pushf
sub
fadd
mov
(bad)
jo
cld
mov
imul
arpl
(bad)
std
jb
mov
rcr
loopne
je
xor
cdq
sbb
sub
pushf
jo
test
xor
cmps
xor
sub
inc
or
std
and
dec
ins
dec
mov
ds
nop
into
push
cmp
fisttp
outs
pop
psubd
add
shl
jge
xchg
sbb
test
hlt
fidivr
push
fdiv
push
mov
iret
out
push
int3
hlt
push
inc
xor
lds
add
and
(bad)
shr
xchg
pushf
loop
int3
and
jne
test
repnz
shr
pop
cmp
inc
test
dec
sbb
cdq
xor
sbb
adc
in
neg
or
xchg
mov
les
retf
dec
movs
inc
jmp
dec
fs
jmp
sub
and
outs
stc
clc
test
out
shr
jno
push
rcr
mov
(bad)
aad
js
nop
add
xor
pop
lahf
sbb
dec
dec
inc
xchg
mov
nop
pop
mov
imul
pop
cmp
(bad)
push
aas
addr16
pop
or
push
(bad)
icebp
leave
dec
outs
jp
push
mov
jecxz
inc
xor
retf
scas
push
ins
mov
jb
lods
ins
jle
push
push
movs
jae
cmp
ds
call
inc
rcr
adc
jo
dec
ret
jbe
js
pop
adc
dec
pop
adc
mov
pop
mov
add
adc
std
mov
xchg
clc
inc
xchg
xchg
xchg
test
cs
mov
push
out
and
loopne
fwait
dec
push
mov
jge
ins
xchg
and
fsubr
jmp
(bad)
scas
sbb
data16
push
and
into
fiadd
stc
ret
and
mov
(bad)
jmp
pushf
sub
imul
cmp
(bad)
shl
neg
pop
scas
xchg
gs
and
xchg
push
push
mov
cli
or
pop
inc
je
je
icebp
ds
les
addr16
add
push
outs
in
rcl
mov
xor
test
popa
(bad)
add
mov
mov
out
test
lods
int
cmp
and
jbe
test
mov
dec
call
shl
push
sub
dec
lods
ss
(bad)
sysret
nop
nop
pusha
pop
call
push
lds
jae
aam
lds
xchg
cwde
jmp
cmp
adc
(bad)
hlt
mov
dec
aas
or
imul
mov
cmps
das
pop
dec
mov
pop
fucomip
add
call
add
fist
fcom
xor
mov
call
ds
pop
push
sti
push
mov
push
int3
retf
sbb
repz
cs
adc
jmp
movs
push
push
scas
push
jbe
in
inc
test
aaa
sub
ins
stc
jo
pop
in
pop
pop
mov
xor
mov
ficomp
imul
push
xchg
xor
mov
je
mul
jo
add
adc
cmp
adc
popf
pop
push
sbb
pop
jo
cmps
hlt
mov
pop
shr
gs
mov
add
out
loope
js
lods
sub
nop
cli
popa
mov
test
retf
dec
push
mov
test
stos
movs
(bad)
jg
push
rcl
mov
inc
pop
mov
inc
rcr
(bad)
popf
in
dec
dec
dec
jno
cmp
(bad)
in
imul
rcl
add
fs
cmp
mov
hlt
jbe
std
push
in
in
outs
add
into
cld
adc
fisttp
jno
dec
aaa
and
add
xor
sub
and
ja
fisub
and
in
jmp
int
mov
mov
rol
stos
ja
fcomp
push
cmps
cmp
sub
pushf
nop
pop
add
dec
ins
scas
cli
mov
iret
sbb
sub
lahf
das
mov
add
mov
xor
sbb
push
xor
pop
stos
mov
push
inc
cld
mov
mov
sub
xor
jae
cs
ds
jg
xchg
push
fsubp
push
mov
mov
repnz
inc
pop
add
mov
pop
not
push
mov
jg
js
inc
sub
jg
adc
aas
enter
lock
xchg
sub
sub
retf
xchg
mov
scas
mov
mov
cmp
gs
adc
inc
std
inc
sub
inc
call
(bad)
pop
or
fwait
je
pusha
clc
fs
mov
xchg
jae
dec
enter
inc
xchg
and
ds
push
jb
and
movs
sbb
clc
gs
iret
dec
and
dec
cmps
sbb
push
cld
into
xor
and
or
cmp
mov
and
xchg
cmp
xchg
leave
lea
pop
(bad)
daa
out
push
cmc
bound
das
mov
(bad)
cmc
xor
mov
and
out
pop
add
out
(bad)
fcomp
rol
call
and
and
xor
retf
add
add
psubb
push
jns
inc
mov
in
sti
cwde
stos
cld
adc
ss
jg
test
(bad)
and
sahf
das
mov
and
jge
sar
lds
sub
push
call
cmp
repz
ret
xchg
(bad)
mov
in
stc
xor
xor
mov
sti
or
adc
leave
inc
inc
sbb
pushf
rol
inc
lds
shr
imul
int
jns
into
mov
clc
xchg
push
retf
inc
cmp
sti
dec
(bad)
icebp
xor
push
aam
jno
mov
(bad)
int3
push
sahf
and
sub
push
cli
dec
(bad)
dec
imul
sbb
sbb
push
(bad)
pop
mov
sar
mov
and
mov
pop
loop
out
mov
loopne
cld
repz
and
mov
das
mov
xor
xchg
pop
neg
stos
lock
sbb
sbb
int
sbb
gs
inc
out
aas
in
bound
sbb
dec
shl
into
jo
pop
ins
test
bnd
call
xchg
sub
jp
je
fdivr
mov
sahf
retf
xchg
mov
mov
(bad)
popa
push
inc
mov
push
sub
aas
(bad)
outs
mov
mul
push
pushf
std
imul
xor
cdq
cli
loop
pop
cmp
shl
scas
jle
lock
pusha
aas
jo
mov
push
mov
nop
cdq
hlt
fidivr
cmps
sub
jnp
xor
cwde
fbld
lahf
daa
and
jle
adc
dec
jmp
jbe
pop
inc
sub
push
stc
sti
ret
ins
mov
loope
sub
mov
pop
or
iret
sbb
into
out
cmc
iret
lods
out
pop
mov
int3
rcr
outs
cmp
imul
repz
shl
fwait
arpl
and
ror
cdq
repnz
ds
or
or
xchg
mov
stos
push
retf
xchg
aaa
sti
inc
xor
sbb
xchg
retf
mov
sub
shl
repz
loope
sbb
mov
inc
sbb
nop
loopne
mov
jmp
jmp
movs
rol
sbb
jg
mov
xor
adc
mov
adc
mov
ds
sub
scas
dec
add
lods
das
rol
rcl
or
sti
rcl
mov
inc
inc
push
jno
loopne
mov
pop
je
lds
dec
xchg
arpl
pop
adc
push
repnz
arpl
imul
fdiv
sub
nop
mov
adc
out
inc
in
add
sti
mov
je
pop
shl
mov
jb
jns
mov
or
test
jbe
cli
mov
stos
pop
aad
inc
lea
cmp
popa
mov
push
retf
xor
push
sbb
out
fdiv
clc
pop
mov
stos
ja
cmp
pop
push
mov
or
adc
(bad)
(bad)
cmp
loope
mov
test
(bad)
push
xor
and
popf
sbb
cwde
fistp
jo
cli
in
xchg
adc
mov
pop
add
mov
mov
mov
push
aaa
mov
lea
jae
aas
outs
sbb
paddusw
jp
popf
jmp
das
jp
inc
ficomp
or
dec
stos
push
xchg
pop
imul
sbb
inc
pop
xor
mov
cmps
mov
jne
inc
push
add
sbb
xchg
mov
push
sbb
mov
add
add
or
aam
movs
sbb
jno
ins
cmp
cli
and
mov
dec
xor
lods
add
repnz
xchg
lahf
lds
jae
sbb
mov
lea
and
sbb
scas
adc
out
dec
cmp
jbe
cmp
dec
sub
xchg
adc
or
idiv
adc
adc
xor
arpl
js
and
call
mov
xor
mov
cdq
fld
jg
cmp
push
xchg
movs
dec
mov
dec
mov
sti
not
jmp
push
repz
fisttp
out
ins
lock
adc
mov
call
add
xchg
outs
adc
or
cmp
inc
jl
call
xchg
adc
fldenv
test
push
stc
add
or
int
adc
imul
rol
pop
arpl
std
sub
arpl
dec
cmps
mov
jg
lea
mov
adc
js
mov
inc
int
lods
addr16
cmp
pop
(bad)
rcr
push
scas
addr16
and
pop
cld
pop
mov
in
push
lds
sbb
mov
xchg
mov
ror
add
xchg
stc
aas
fist
cs
pusha
xor
lods
jmp
dec
cmp
mov
add
jbe
fldcw
add
loop
add
retf
aad
lea
mov
(bad)
xor
push
mov
mov
push
add
in
push
jge
mov
jnp
xchg
mov
sbb
lahf
xchg
adc
jecxz
(bad)
push
int
xor
iret
push
repnz
inc
mov
xor
mov
fmul
xchg
mov
frstor
inc
cld
retf
xchg
adc
add
sub
push
jb
gs
mov
std
scas
mov
stos
mov
mov
rcr
je
add
icebp
xchg
pop
addr16
pop
nop
sti
ins
jle
mov
(bad)
fcomp
rcr
adc
call
pop
inc
ss
out
(bad)
fisttp
fs
and
xor
cmp
xor
inc
adc
retf
add
mov
push
out
mov
cmc
sub
imul
mov
clc
repnz
mov
sub
xor
movs
(bad)
out
or
pop
mov
popf
frstor
pop
or
out
lods
shl
jns
or
pop
mul
enter
jns
sub
jmp
dec
jae
jne
pop
inc
ds
or
fs
cmp
adc
icebp
xchg
cmp
nop
daa
inc
cs
aas
out
test
inc
sub
out
jecxz
push
sub
push
pop
aaa
push
call
sbb
js
xor
(bad)
aaa
xor
call
(bad)
and
jbe
popf
pop
push
jp
dec
loop
jne
ins
lods
lds
cld
add
or
push
nop
sub
mov
hlt
mov
or
enter
pop
pop
loope
mov
pop
fistp
mov
scas
add
and
xlat
push
inc
leave
rol
mov
outs
dec
pusha
add
ret
mov
dec
(bad)
cmp
pop
imul
or
sbb
dec
lock
popf
(bad)
test
push
fucomip
mov
jns
mov
ins
mov
adc
pop
jns
imul
aad
adc
div
or
repz
dec
icebp
push
or
into
cmp
retf
xor
push
ret
jl
lods
ja
mov
add
pop
xchg
test
cmp
int
sbb
shl
sbb
cmp
push
scas
pop
cmp
in
xchg
scas
xor
shl
fucomi
xor
push
sbb
std
sbb
aad
mov
add
movs
adc
lods
mov
adc
mov
enter
fwait
iret
ror
pop
jno
ds
aas
push
movs
js
mov
xchg
repz
or
cwde
mov
jo
loop
and
hlt
pop
push
retf
push
sub
pop
sub
mov
lods
jp
and
aam
mov
mov
mov
sahf
icebp
pushf
aaa
(bad)
stc
jmp
jmp
aaa
(bad)
icebp
out
cmc
aam
mov
and
cmps
bound
push
jne
mov
std
xor
pop
jo
daa
or
lock
cs
push
or
jecxz
out
out
out
mov
fidivr
adc
xlat
cmp
dec
arpl
aaa
jl
pop
dec
cmova
mov
mov
and
(bad)
sti
fadd
out
jnp
mov
test
adc
or
jge
int3
mov
nop
push
xor
sub
fwait
xchg
cli
jmp
sub
es
(bad)
call
jae
lock
movs
mov
mov
cld
sub
mov
ficomp
jmp
inc
fs
dec
pushf
sub
and
jbe
loop
xlat
cmp
ja
lods
retf
mov
dec
sbb
(bad)
inc
cmps
or
int3
in
and
push
or
mov
call
sbb
mov
bound
shr
dec
cmc
mov
out
inc
scas
js
xchg
push
cmp
cmp
fmul
ins
xor
cmp
fistp
add
icebp
mov
push
gs
dec
cdq
fwait
or
or
add
sar
ins
leave
sub
add
movs
push
loopne
(bad)
imul
mov
mov
cmps
pop
mov
and
sbb
mov
clc
mov
fucomi
jae
ret
mov
in
stos
inc
loop
cmp
add
push
adc
inc
into
jae
add
clc
sbb
fnstcw
rol
call
mov
imul
pop
and
pushf
add
(bad)
and
outs
fsub
repz
pop
xchg
test
or
repnz
cwde
dec
mov
stos
(bad)
adc
js
bound
repnz
xor
cmovp
ja
les
aam
mov
xor
push
mov
in
outs
or
sub
imul
test
sahf
mov
clc
mov
fisub
push
or
lods
jb
xchg
mov
arpl
inc
jo
ficomp
adc
test
dec
es
lods
push
jmp
adc
out
test
cmc
xor
xchg
(bad)
in
push
add
mov
jp
retf
fstp
in
or
dec
imul
push
mov
mov
pop
(bad)
xchg
ins
xchg
xchg
add
sbb
enter
fs
es
rcl
pop
fmul
adc
je
pusha
jg
cwde
mov
pop
push
inc
retf
mov
dec
cmps
shr
mov
std
sbb
call
nop
rol
repz
stos
icebp
aas
ret
fs
sub
shr
and
jmp
les
dec
dec
xor
sbb
pop
pop
mov
adc
mov
jg
jnp
cli
leave
or
cmp
pop
inc
imul
mov
lea
pushf
int3
rcr
rcl
into
mov
stos
mov
jge
aaa
inc
sub
mov
bound
fistp
ja
add
jo
sub
jge
sub
push
sar
pop
loopne
popw
xchg
jl
dec
movs
cli
jb
popa
sahf
aam
mov
iret
loope
test
mov
xlat
adc
cmp
lods
ja
std
push
mov
in
retf
cwde
bound
shr
push
cmp
repnz
dec
cmps
and
pop
pop
repnz
ins
jno
jmp
mov
sub
repnz
(bad)
imul
lahf
test
sub
sahf
and
pop
in
xor
inc
dec
(bad)
movs
xor
or
inc
mov
aaa
jae
lds
(bad)
mov
enter
movs
xor
sar
sbb
xor
add
(bad)
jl
mov
xchg
and
sar
jmp
mov
movs
test
or
(bad)
popa
sub
ret
sti
mov
sub
jnp
dec
jb
mov
add
push
pop
mov
push
fwait
push
call
pop
movs
arpl
jns
test
inc
ins
fistp
clc
push
jmp
cmp
fsubrp
cmc
int
add
mov
scas
in
mov
adc
aam
mov
repz
fst
neg
cmps
xchg
jb
retf
add
push
test
push
push
iret
(bad)
cmp
mov
push
push
cld
adc
in
mov
and
iret
cmp
arpl
shl
jecxz
sti
ins
mov
popa
push
dec
lock
add
mov
shl
mov
outs
push
inc
mov
enter
outs
dec
and
xlat
mov
int3
or
add
imul
adc
fcomp
ins
repnz
repnz
mov
ror
and
pop
mov
enter
mov
sbb
jne
push
out
scas
in
fwait
and
xor
mov
sbb
mov
mov
(bad)
mov
xchg
adc
inc
les
sub
pop
lahf
(bad)
push
pop
adc
ds
mov
loop
xchg
in
xchg
mov
cli
ins
popf
add
rol
inc
rcl
xor
pop
lods
retf
xlat
mov
or
std
mov
scas
jb
pop
in
(bad)
dec
push
xlat
pop
jl
mov
pop
out
mov
mov
jne
mov
sar
sub
repz
lock
inc
retf
and
leave
aam
and
adc
not
add
lahf
test
push
xor
into
jl
pop
or
ret
fcom
sti
ret
(bad)
lods
sbb
jmp
inc
sub
aad
sub
fwait
mov
push
mov
mov
ins
mov
cmp
jnp
push
repz
fwait
std
xchg
call
inc
adc
fst
sbb
imul
(bad)
pop
xor
dec
fsub
inc
jno
imul
rol
sbb
cmp
dec
and
adc
lea
push
xor
vpmacsswd
jns
xchg
mov
pop
hlt
mov
cwde
push
jns
mov
pop
xor
leave
and
outs
int3
mov
or
adc
sbb
sbb
test
inc
mov
mov
push
cli
arpl
fs
jns
xor
gs
sahf
adc
mov
into
inc
out
pop
mov
pop
mov
inc
push
shl
(bad)
clc
pmulhuw
xchg
sub
mov
cld
mov
loope
mov
or
mov
push
cmovns
(bad)
or
sbb
cdq
cli
adc
aad
mov
pop
mov
dec
adc
sahf
les
push
sbb
retf
add
out
ret
fidivr
movs
push
aad
or
in
add
xchg
fs
xchg
scas
pushfw
daa
repnz
data16
pop
in
jmp
jmp
mov
pop
scas
adc
push
iret
or
je
pop
push
cmp
fist
neg
jmp
out
movs
movs
cmp
xchg
or
cmps
sub
sub
sahf
mov
jecxz
xchg
cmp
test
(bad)
mov
mov
and
cmp
test
lock
cmps
rcl
adc
inc
push
mov
or
cmp
in
aad
pop
es
mov
rcr
sbb
fbld
fistp
add
hlt
pop
aad
nop
movs
pop
jno
nop
add
hlt
mov
push
or
mov
cwde
test
repnz
cmp
and
enter
inc
xor
add
mov
or
test
jo
lds
xchg
call
push
mov
lods
jns
and
ret
enter
je
mov
mov
ss
and
xchg
xchg
pop
sbb
adc
imul
xor
mov
pop
cmp
jecxz
int
jmp
pop
xchg
loope
mov
popfw
cs
pop
loope
fist
add
mov
outs
ret
mov
or
add
mov
adc
add
dec
cmp
addr16
cmc
or
cmp
das
cmp
jp
mov
inc
jmp
(bad)
out
js
mov
mov
fcom
xchg
lahf
outs
push
mov
sahf
cmps
rol
push
(bad)
packsswb
scas
sbb
inc
cld
in
dec
in
mov
(bad)
ss
cmps
scas
pop
mov
pop
out
addr16
fcmovnbe
adc
arpl
scas
retf
fstp
mov
adc
retf
jae
not
movs
mov
addr16
pusha
add
xchg
aam
and
and
push
pop
cmc
cs
inc
or
pop
jno
dec
mov
xchg
out
xor
test
arpl
popf
mov
nop
mov
mov
ret
in
add
fisub
in
iret
mov
jge
xchg
push
arpl
jo
les
pop
das
std
test
imul
sbb
jb
loopne
lock
sbb
aaa
fucomip
pop
xor
ror
xchg
call
icebp
fidiv
popf
cmp
jno
lods
lea
outs
aad
mov
in
xor
dec
inc
gs
mov
sbb
cmp
add
gs
sub
xchg
mov
gs
or
std
imul
mov
mov
pop
pusha
push
push
fs
lahf
loopne
addr16
push
movs
retf
mov
mov
pop
dec
in
es
pop
cmp
clc
cld
jl
aam
jge
in
shr
movs
push
das
and
lea
fcmovb
fcomp
ins
push
data16
nop
xchg
sbb
sub
out
cdq
cmps
jmp
clc
les
sbb
aas
inc
out
(bad)
hlt
stc
sub
mov
xchg
and
shr
push
pop
or
mov
ror
and
mov
js
neg
gs
pusha
inc
out
mov
xchg
mov
and
cmp
pop
xchg
pop
mov
aaa
cmp
sar
jmp
(bad)
lock
inc
mov
mov
(bad)
int
in
ins
iret
gs
outs
mov
xlat
movs
add
adc
ror
inc
in
sub
icebp
cld
ret
cdq
mov
(bad)
in
sub
mov
out
retf
in
fisubr
call
mov
out
jae
xor
or
xchg
leave
and
mov
mov
test
aaa
(bad)
in
movs
xrelease
ds
sbb
lods
mov
aad
and
pop
mov
sbb
(bad)
(bad)
outs
cli
retf
or
adc
mov
sar
and
pop
nop
or
mov
fs
movs
test
jmp
mov
cdq
test
outs
stc
leave
mov
xchg
mov
jge
xchg
pop
lock
arpl
cmovp
pop
and
adc
or
jnp
mov
lock
ret
push
inc
mov
shl
sub
jmp
clc
mov
jns
stos
adc
std
lahf
jp
sbb
mov
shr
mov
(bad)
or
(bad)
(bad)
xchg
rcl
xchg
xlat
push
imul
add
adc
loopne
and
gs
sbb
or
enter
ja
xchg
adc
xchg
cwde
pop
adc
ins
jge
pushf
nop
xchg
adc
sbb
das
mov
xchg
mov
ret
push
ds
jmp
(bad)
in
cmp
add
stos
and
int3
lock
add
arpl
icebp
neg
loop
rcl
nop
dec
pop
rcl
mul
outs
or
dec
adc
xchg
dec
push
inc
cli
and
les
jb
jno
test
icebp
dec
mov
out
xor
inc
fstp
adc
push
int3
mov
outs
(bad)
mov
sbb
xchg
jmp
ret
leave
mov
xor
cmp
(bad)
push
(bad)
mov
push
ins
aad
imul
inc
pop
pop
arpl
cmc
cld
or
repz
scas
fst
inc
std
pop
pusha
rcr
cmp
sub
mov
ret
fwait
push
mov
les
mov
mov
mov
ror
pop
fwait
inc
adc
dec
add
call
mov
fistp
and
push
and
hlt
jno
(bad)
jo
iret
bound
push
in
adc
sub
cmps
(bad)
retf
sbb
das
popf
idiv
and
add
or
mov
in
cmp
and
xchg
pop
bound
adc
and
jg
mov
cwde
mov
inc
fcomi
xchg
jb
jnp
jae
(bad)
retf
rcr
jb
repz
shl
inc
out
mov
add
cmps
(bad)
sbb
scas
stos
jo
(bad)
xchg
jle
ret
ins
lods
std
fcom
mov
dec
repz
and
lods
imul
mov
or
mov
fstp
imul
shl
lea
jge
adc
mov
mov
mov
mov
call
adc
push
mov
arpl
imul
mov
mov
xor
mov
add
adc
cmc
pop
int
mov
fdivr
into
adc
out
out
in
nop
test
sti
fwait
loopne
dec
pop
in
(bad)
imul
sub
jbe
dec
outs
aas
or
jo
jmp
clc
and
jmp
adc
add
inc
jmp
stos
cmp
nop
movs
sbb
out
sub
fisub
aad
mov
aaa
adc
pop
dec
and
ds
ja
dec
inc
test
mov
adc
outs
jg
inc
and
adc
jecxz
in
ret
xchg
jp
adc
push
outs
pop
pop
xchg
les
jns
jmp
int
shl
mov
pop
(bad)
push
sbb
or
adc
mov
cmps
aad
xchg
repnz
cmp
or
mov
mov
inc
mov
xchg
enter
xchg
dec
add
push
sub
repnz
pop
sti
dec
ins
mov
ror
stos
popf
test
xchg
dec
pop
xor
mov
scas
xchg
mov
dec
mov
pop
and
xchg
jg
popa
mov
es
cmps
(bad)
add
rol
jmp
jmp
mov
mov
pop
stos
inc
ss
pop
jbe
dec
cmp
in
mov
dec
imul
mov
(bad)
neg
in
fmul
popa
into
(bad)
mov
or
jp
pop
aas
jle
ds
or
push
mov
pop
push
popa
aam
mov
retf
sub
xor
xchg
or
inc
push
cmp
or
pusha
pop
mov
pop
gs
jl
aaa
inc
aad
clc
mov
jbe
repz
loope
xchg
out
mov
scas
ja
repnz
ins
ds
punpckhwd
pop
inc
mov
xchg
and
inc
add
inc
push
aad
data16
imul
inc
aaa
lahf
jb
xchg
mov
mov
cmp
out
xchg
jecxz
test
rol
out
mov
(bad)
sbb
xor
lods
push
push
push
dec
sbb
ja
fild
aaa
mov
scas
mov
inc
pusha
dec
xchg
mov
mov
pop
cmp
lea
xchg
or
push
xchg
addr16
lahf
shr
inc
ds
cmp
push
adc
popf
xor
sti
cmp
das
or
xor
jmp
outs
stos
jb
sbb
add
out
jnp
rol
into
mov
sub
ins
push
sbb
stos
cmp
xchg
push
sbb
cmc
and
push
js
out
cmp
sub
push
xlat
sar
popf
jmp
xchg
push
repz
cli
jmp
imul
inc
sub
fwait
sar
rcr
rol
rol
pop
ror
jge
test
mov
test
leave
push
fbld
jno
or
push
aad
jbe
push
mov
pop
sub
ficomp
(bad)
jmp
(bad)
mov
sub
mov
push
js
(bad)
mov
test
sbb
test
nop
fist
cdq
movs
ss
sahf
and
adc
ficom
ss
in
add
sahf
sbb
xlat
es
push
add
inc
iret
xchg
lahf
sub
into
rcl
mov
xlat
cs
add
pop
lahf
loopne
mov
sub
shr
sbb
cmp
add
pop
(bad)
xchg
xchg
pop
push
xchg
call
js
mov
mov
inc
test
inc
sbb
popf
scas
cmp
shr
aaa
cmp
or
aas
or
daa
inc
push
dec
mov
add
scas
popf
js
inc
xchg
call
jmp
lahf
or
pop
rcr
xchg
sbb
mov
loop
cmp
fiadd
and
xor
xor
push
fist
cdq
push
mov
rol
(bad)
cdq
push
shl
(bad)
jo
cmps
add
or
fisub
mov
jmp
stos
push
cwde
xchg
cmc
fsub
lock
inc
pushf
outs
cwde
xlat
loopne
sbb
sbb
xor
dec
jl
sahf
add
leave
ret
in
call
push
clc
outs
cmp
and
out
ja
mov
shl
sub
scas
jno
pop
jmp
mov
loope
or
mov
xchg
inc
mov
pop
add
mov
push
mov
xchg
xor
xchg
mov
hlt
lods
inc
push
outs
mov
repz
enter
push
sub
inc
ja
pop
sub
imul
dec
pop
out
gs
mov
pop
cmc
dec
shr
mov
loopne
xchg
aad
mov
scas
mov
js
mov
cmps
sub
ins
push
retf
mov
inc
test
cmp
add
cld
xchg
sti
sahf
out
or
dec
dec
shl
cld
jmp
clc
mov
test
es
js
mov
sbb
test
xor
rcr
js
cmps
pop
out
jp
mov
xor
push
mov
xchg
nop
(bad)
faddp
mov
ror
push
or
in
(bad)
hlt
std
jbe
mov
fild
arpl
fisttp
push
jb
ins
je
lock
pusha
into
mov
adc
mov
mov
dec
push
lahf
sbb
ds
mov
ss
jmp
mov
pop
popa
(bad)
call
and
cmps
mov
dec
scas
repz
mov
lds
in
ds
sub
call
xchg
add
adc
shr
cld
test
stc
mov
leave
xchg
push
loopne
int
mov
xor
pop
push
push
stos
ja
pop
pop
stos
sbb
shl
jbe
in
mov
cmps
add
jae
leave
mov
aaa
cmps
pop
pop
xchg
movs
xchg
std
cmp
mov
and
inc
mov
adc
repz
pushf
imul
call
das
int
dec
mov
dec
mov
popa
cdq
add
jl
jo
jnp
inc
in
pop
mov
mov
sbb
adc
add
lods
pop
jb
dec
dec
or
push
ror
dec
daa
ins
addr16
mov
xlat
mov
inc
xchg
jge
jp
stos
cld
sub
into
hlt
xchg
repnz
call
lods
sar
push
jno
sub
push
adc
test
add
lock
fcomi
pop
fdivr
div
push
fcomp
call
xchg
inc
push
mov
ins
test
ss
push
adc
xchg
jmp
dec
inc
dec
in
mov
jae
arpl
or
fmul
dec
add
sti
ror
das
lods
xor
and
loop
mov
(bad)
int
xchg
fadd
test
jge
cmps
jle
adc
enter
(bad)
xchg
sahf
push
repnz
mov
gs
and
mov
ror
push
bound
lock
mov
sbb
xor
pop
jle
call
scas
jp
cmp
mov
push
mul
loopne
cmp
jl
pop
shl
adc
imul
and
jmp
fstp
pop
pusha
cmp
aas
or
ror
adc
or
push
or
dec
sbb
sub
scas
js
xor
cdq
es
popf
loop
mov
inc
repz
dec
int3
push
push
push
inc
ficomp
or
lahf
inc
add
sti
sbb
push
mov
call
inc
js
daa
into
sub
lods
dec
bound
cmp
cmps
or
shr
stc
repz
adc
popa
es
push
jns
jmp
ins
retf
clc
xor
jb
adc
lahf
aad
call
and
and
push
mov
movs
push
or
loope
imul
mov
push
add
xor
cmp
push
adc
test
stos
sub
jmp
xchg
jp
jp
xchg
or
xor
scas
or
xchg
mov
in
inc
sbb
popa
out
scas
sahf
pop
add
movs
mov
ins
pop
cwde
inc
sar
inc
mov
je
or
pushf
xor
xchg
(bad)
jae
inc
ins
cmp
adc
ins
xchg
and
xchg
fbstp
mov
movs
loope
cmp
out
test
dec
stos
in
fiadd
mov
mov
icebp
test
adc
movs
push
sub
and
adc
jl
mov
not
jbe
jne
add
cmp
sbb
in
in
clc
jmp
push
sbb
push
ds
cmp
inc
jg
imul
loope
fld
imul
pop
pop
mov
lods
retf
bound
xchg
out
mov
fistp
mul
xchg
jl
imul
push
mov
dec
(bad)
mov
data16
xchg
inc
sbb
xchg
dec
(bad)
pop
rcl
mov
mov
inc
pop
xor
adc
int
sti
add
push
and
mov
mov
es
rol
xor
mov
movs
call
stc
xchg
call
sub
add
je
push
fld
pop
repz
push
(bad)
into
inc
add
mov
aam
sub
xchg
sbb
and
jne
arpl
test
sub
(bad)
cld
aas
xchg
mov
ret
fwait
push
xchg
popa
retf
adc
lods
or
sub
and
mul
outs
(bad)
cs
movs
lods
(bad)
ror
xchg
test
clc
xchg
xchg
or
dec
sti
pop
cmp
out
mov
add
paddb
mov
std
jmp
(bad)
ins
je
lods
dec
pop
ins
loope
ss
push
call
and
mov
and
imul
or
or
dec
mov
movs
retf
scas
push
jp
push
add
inc
push
ins
jo
pop
and
test
sbb
mov
push
or
nop
jns
jmp
out
xor
imul
mov
pushf
mov
rcl
outs
cmp
xchg
int
enter
jmp
fild
lods
test
sub
xor
ret
push
push
nop
xor
stos
test
int3
xchg
and
lds
jp
test
and
sbb
push
dec
outs
out
repnz
retf
fwait
jg
or
xchg
cmc
add
jae
sub
jp
repnz
or
fsubr
mov
dec
js
loopne
dec
jmp
add
loope
xchg
sar
or
int
mov
cmp
repnz
cmps
mov
jbe
sub
add
adc
xchg
jmp
js
inc
nop
cmp
mov
inc
xor
push
or
shl
cmp
std
imul
push
jb
out
out
loop
push
and
cmp
mov
sbb
cmps
jge
shl
xchg
gs
stc
push
scas
sbb
jns
ja
dec
sbb
mov
retf
sbb
mov
lds
fistp
lahf
mov
xlat
mov
pop
mov
pop
fdiv
adc
lods
cld
lods
mov
aas
cli
push
(bad)
idiv
iret
das
xchg
std
push
mov
rcl
cmp
rcr
nop
xchg
and
mov
mov
cmp
arpl
test
fwait
loop
dec
or
and
jno
pop
jle
imul
pop
enter
lock
cli
jmp
mov
pop
imul
pop
inc
gs
xchg
(bad)
xor
out
jmp
jmp
(bad)
cs
enter
pop
mov
call
inc
aaa
push
or
into
push
xor
iret
pop
dec
jge
and
xchg
loope
sub
adc
pop
hlt
(bad)
fst
jmp
shr
mov
mov
pop
push
or
pop
test
xor
aad
pop
jle
mov
fstp
pusha
sub
in
imul
or
retf
sahf
fidiv
inc
sub
and
mov
and
aas
jge
imul
pop
pop
jmp
rcl
push
dec
lahf
jmp
xchg
mov
xchg
mov
cmp
add
add
pop
mov
mov
es
je
add
mov
loop
or
jecxz
push
and
push
lock
fdiv
std
sbb
lods
jl
hlt
nop
dec
mov
add
je
add
es
jl
mov
sbb
das
stos
mov
sub
or
sub
jno
test
test
sbb
test
add
jl
jb
pop
pusha
test
fbstp
sub
dec
dec
and
in
popf
cmp
rol
or
fs
fcomp
imul
in
call
stc
aas
push
jbe
pop
cmp
hlt
out
xchg
and
push
aad
and
jb
and
hlt
test
sbb
cmp
dec
mov
shr
scas
cmp
cmc
test
cmp
sbb
pcmpeqb
dec
pop
sub
add
adc
retf
cld
push
je
lds
jg
ja
sbb
mov
pop
enter
sbb
sub
jl
or
outs
sub
fmul
clc
cmp
or
es
jbe
jbe
in
icebp
or
or
push
(bad)
dec
mov
jno
dec
xor
outs
in
dec
push
pop
in
dec
jns
mov
push
pushf
pop
call
xchg
icebp
cdq
bound
ja
adc
repz
push
jmp
pop
jo
mov
xchg
popf
jno
rcr
cmps
in
mov
push
dec
ficomp
xor
push
(bad)
in
cdq
das
dec
imul
jecxz
mov
adc
jmp
ins
jp
mov
jmp
cmp
add
dec
push
dec
rcl
out
sbb
popf
sub
lahf
and
xlat
pop
jae
lock
test
xor
push
push
and
mov
mov
scas
mov
add
test
mov
dec
jo
cmps
test
jg
push
ret
jecxz
mov
addr16
jo
adc
packuswb
and
and
mov
pop
jge
stos
cld
jge
(bad)
jmp
ret
test
push
test
sbb
fst
mov
(bad)
clc
xor
mov
test
in
bound
loop
loope
xlat
pop
cwde
fwait
inc
outs
xor
popa
les
mov
out
jae
inc
jo
lea
cmp
dec
fistp
sbb
push
stos
push
xchg
push
pushf
mov
mov
ret
fwait
mov
ss
sub
loopne
adc
in
push
out
out
sahf
jae
xchg
pop
xchg
fmul
cmc
jno
dec
jmp
xor
adc
(bad)
xor
fidiv
dec
mov
fstp
icebp
inc
jae
sub
mov
ret
sti
mov
xchg
and
aad
imul
inc
mov
loopne
dec
jne
sbb
sub
push
lds
mov
popa
outs
pop
mov
ins
fwait
loop
mov
pusha
leave
jl
jp
std
outs
push
cmp
pop
mov
shl
call
mov
push
jmp
sbb
add
shl
sub
jb
in
xor
call
fistp
lock
(bad)
icebp
mov
imul
shl
pop
fadd
mov
shr
in
call
scas
lahf
aam
sar
pop
add
jno
out
jns
adc
push
les
in
repnz
les
mov
jb
mov
add
mov
retf
or
inc
call
lods
jmp
sar
and
test
adc
push
xchg
xchg
pop
add
mov
das
sbb
xor
std
adc
add
loop
inc
jl
aam
pop
or
in
enter
add
(bad)
out
cdq
or
lods
jmp
dec
aaa
inc
pop
es
lds
movs
sub
clc
outs
add
int
cmc
xchg
mov
pop
sbb
dec
sbb
lea
dec
fist
push
xchg
popf
sti
mov
xor
sub
out
or
icebp
ins
mov
mov
mov
sbb
ret
outs
push
repnz
and
push
fs
jp
push
and
fnstcw
test
inc
mov
mov
rol
pop
mov
xor
or
and
mov
mov
ret
inc
stos
adc
add
fimul
cwde
mov
retf
push
es
pop
in
fndisi(8087
adc
add
(bad)
mov
inc
mov
dec
ins
ss
sbb
sti
aaa
push
push
in
mov
(bad)
in
popf
or
loope
cs
xchg
xor
mov
stc
jns
scas
cwde
bound
mov
js
daa
push
rcr
ds
dec
mov
leave
retf
movs
and
js
loop
and
add
add
jmp
mov
rcl
jnp
pop
mov
into
pop
std
js
out
mov
lea
aad
fwait
dec
inc
sbb
add
cli
ja
pop
mov
popf
xchg
mov
shr
rol
xchg
call
and
sahf
stos
pop
test
sbb
cli
std
hlt
jp
stos
push
cmp
aad
add
xchg
shr
sbb
pop
push
pop
loop
(bad)
fdiv
cld
xchg
xchg
sbb
mov
(bad)
retf
xchg
jmp
mov
mov
jg
push
xchg
cdq
or
push
cmp
ss
xor
(bad)
out
out
adc
and
aaa
mov
adc
sub
and
stos
daa
ja
shl
ins
fadd
jae
(bad)
mov
out
dec
je
lea
or
es
cmp
jno
mov
and
stc
fidivr
inc
jb
inc
inc
cli
dec
push
scas
pop
pop
jmp
push
jae
or
fistp
push
ror
pop
xchg
repz
ror
push
xlat
fwait
fwait
call
adc
jg
mov
push
pop
fstp
lea
jecxz
test
mov
neg
shl
in
or
pop
lods
sar
inc
mov
movs
jge
adc
test
les
xchg
int3
cli
movs
call
pop
enter
test
aaa
jns
mov
data16
(bad)
or
dec
neg
add
xor
sbb
fiadd
dec
mov
and
sbb
or
jmp
adc
or
icebp
sbb
out
retf
popa
sbb
xlat
fcmovb
push
jnp
push
or
in
mov
cmp
jge
popf
sub
mov
test
sub
not
inc
jnp
push
dec
scas
das
sub
or
fcmovne
jmp
jmp
mov
clc
push
mov
jne
mov
sub
fcom
xor
jb
outs
jecxz
cmps
loop
dec
cmp
lock
sub
lds
mov
jle
cdq
fist
sti
outs
in
or
cld
test
cli
es
push
dec
add
mov
ror
jbe
sub
jae
or
jecxz
fcmovu
retf
dec
daa
or
or
xor
int3
rol
push
enter
add
dec
mov
popa
cmp
mov
xchg
pop
leave
and
dec
les
jne
pushf
pusha
and
mov
mov
inc
mov
push
in
(bad)
pop
sbb
jb
mov
mov
dec
lods
jle
shl
fcmovb
(bad)
icebp
adc
lahf
cmps
push
aad
int
in
cmc
sub
jno
xchg
(bad)
jl
sub
ss
fucom
xor
or
repz
bound
enter
sub
stos
test
leave
es
repz
xor
adc
jne
imul
test
dec
jno
sub
adc
(bad)
fadd
dec
sub
jge
aam
je
jmp
sbb
imul
lahf
fisub
rcl
faddp
mov
cmp
and
dec
movs
lahf
stos
fdiv
sub
fbld
lods
pop
dec
addr16
(bad)
dec
sub
mov
pop
outs
and
leave
pusha
jae
stos
sbb
and
mov
in
mov
push
inc
lock
ins
inc
in
into
(bad)
mov
icebp
jno
and
xor
bound
xlat
jle
ror
packsswb
xor
cld
test
dec
out
sbb
pop
jmp
shr
div
jmp
inc
fmul
test
test
ret
jo
jne
ja
iret
int3
aad
add
jae
jmp
imul
push
push
mov
in
es
out
cmp
cmp
mov
xor
inc
add
cmp
xor
fst
and
mov
dec
test
cmc
adc
dec
sbb
xchg
retf
jle
fidivr
ins
jmp
dec
test
push
in
bound
sahf
pusha
leave
icebp
aam
add
xchg
xor
push
into
jns
outs
and
add
cmp
push
das
iret
pusha
push
sub
loope
mov
jnp
call
inc
xchg
push
mov
push
adc
es
inc
mov
sub
lods
inc
shr
fdiv
dec
pop
dec
aas
xchg
das
or
gs
repnz
jmp
push
or
mov
cmp
daa
xchg
sahf
(bad)
add
data16
sub
adc
daa
and
test
pop
add
sbb
inc
out
rol
dec
sub
adc
mov
jge
cwde
cdq
sub
mov
ja
std
out
(bad)
mov
movs
movs
pop
retf
mov
and
add
sbb
pop
jns
or
dec
stos
sbb
cmp
xor
push
nop
xchg
out
xchg
pop
xor
cmp
popf
mov
jne
imul
fadd
cmps
inc
outs
fld
sahf
and
inc
mov
dec
pop
xchg
push
sub
adc
mov
ja
sbb
dec
dec
repz
and
leave
jne
in
in
sahf
xor
loope
packssdw
push
mov
es
arpl
arpl
pop
inc
stc
ins
test
mov
mov
cmp
pop
in
in
out
or
xor
ja
xchg
jle
xor
stc
ins
pop
mov
mov
nop
mov
pusha
dec
nop
or
xchg
and
xor
outs
add
pop
cmps
and
fs
sub
xchg
mov
mov
loopne
(bad)
push
(bad)
and
jns
sbb
mov
jg
ret
mov
cmp
mov
or
lea
dec
fwait
adc
add
dec
mov
push
into
push
int
aam
jge
repz
outs
pop
xchg
outs
repnz
add
add
inc
adc
pop
leave
adc
sbb
cmp
test
jns
daa
cli
movs
shl
loope
bound
adc
mov
push
xor
clc
cmp
data16
hlt
jns
sar
mov
call
inc
std
in
xor
mov
cmc
add
push
into
aam
cld
rcr
out
xor
xchg
ret
hlt
push
mov
jmp
jle
dec
mov
bound
lds
(bad)
add
scas
push
scas
ret
mov
(bad)
jmp
daa
add
mov
push
(bad)
fwait
mov
xchg
outs
lods
outs
out
pop
mov
or
add
std
push
or
icebp
sub
test
adc
dec
sub
mov
add
adc
movs
cmp
shl
jnp
xlat
dec
xor
sti
out
stos
repz
mov
stos
push
lods
jmp
call
fwait
inc
mov
mov
fist
fwait
gs
fadd
mov
xor
pop
imul
loop
lods
cmps
dec
aas
out
jl
and
dec
ins
inc
inc
out
push
sbb
rol
push
(bad)
xchg
call
sbb
mov
sbb
outs
test
out
iret
push
std
pushf
adc
push
inc
push
cli
loope
pop
bnd
out
sub
lods
popa
hlt
(bad)
in
clc
jmp
add
jle
stos
jne
sbb
(bad)
dec
adc
jl
mov
ret
xor
int
add
ret
pop
or
cmc
test
(bad)
cdq
sbb
mov
dec
scas
shl
add
lea
outs
xor
adc
int3
lahf
push
dec
fsubr
aam
lock
push
rcr
push
sbb
jnp
in
lock
(bad)
out
(bad)
mov
aaa
dec
cmp
xchg
cmps
xor
jmp
rcl
push
or
cmp
es
xchg
lahf
pop
scas
dec
cmp
mov
adc
xor
aaa
sub
add
loopne
push
dec
jo
mov
dec
mov
cwde
dec
mov
add
movs
pop
movs
loopne
ret
jmp
jle
jo
and
fwait
fwait
push
sbb
cmp
enter
mov
xor
ror
pop
in
fcom
or
std
adc
and
push
out
call
cmp
add
jg
sbb
aam
popw
adc
and
sbb
inc
(bad)
cld
ret
adc
adc
icebp
pushf
adc
stc
arpl
add
mov
imul
enter
dec
xchg
sar
sub
cmc
addr16
std
push
pop
xor
aaa
pop
movs
sbb
outs
mov
pop
jg
ins
idiv
xchg
mov
int3
neg
rol
pop
pop
mov
jb
test
mov
mov
vmovups
stos
addr16
in
xor
icebp
xor
out
js
imul
scas
pop
lds
and
movs
lds
scas
loop
aad
push
lock
jmp
sbb
sub
mov
cwde
dec
daa
sar
xchg
ror
int3
mov
rcl
push
dec
and
or
std
sbb
jp
dec
fdiv
arpl
scas
(bad)
addr16
sahf
pop
push
fwait
out
add
sub
mov
movs
test
(bad)
pop
mov
sub
mov
add
and
sub
dec
lods
hlt
mov
fadd
hlt
fcomp
sub
jnp
cmps
add
xchg
xchg
inc
sbb
pop
pushf
cmp
inc
mov
out
push
ins
mov
cmp
pause
es
sbb
sbb
lahf
dec
jno
mov
sar
mov
dec
sub
jne
push
mov
jnp
and
arpl
sub
repnz
cdq
and
leave
enter
into
adc
jnp
es
je
outs
jmp
sub
mov
(bad)
data16
js
(bad)
and
add
lea
mov
mov
fnstsw
enter
or
pop
adc
or
jmp
inc
jmp
jno
gs
sub
je
add
rcr
mov
gs
imul
push
add
xor
add
mov
shr
rcr
jp
push
loopne
jae
lods
stc
mov
scas
jecxz
or
add
pop
sti
shr
fiadd
and
mov
loopne
(bad)
into
pop
and
push
cmp
inc
fdivr
out
popf
call
gs
mov
leave
cmps
jno
and
in
add
dec
into
mov
push
adc
sbb
ins
inc
xchg
cs
push
aas
fnstsw
jno
jecxz
sbb
adc
and
repz
mov
dec
sbb
enter
or
fwait
inc
enter
(bad)
push
in
mov
sahf
mov
fsubr
jl
mov
and
repnz
pop
lds
cmps
jp
jno
loop
xchg
mov
call
push
xor
(bad)
loop
sbb
ror
dec
inc
mov
xchg
inc
xchg
push
and
in
inc
pop
jmp
ja
add
je
ss
push
xor
cmc
dec
aas
aam
add
idiv
xchg
cwde
cmp
test
jns
hlt
push
mov
loopne
dec
div
xchg
int
dec
lods
test
inc
and
push
int3
dec
jae
je
jle
aam
addr16
lods
mov
or
sub
cmp
mov
lea
imul
mov
xlat
sbb
cdq
lds
sbb
add
or
adc
ins
inc
push
cmp
sub
or
mov
call
xchg
jg
std
mov
add
popf
les
push
or
movs
fst
retf
test
test
mov
cmp
(bad)
jecxz
push
pop
fwait
xor
sub
mov
pushf
cmp
xchg
shl
pop
or
mov
inc
sti
dec
mov
cwde
add
iret
xchg
shl
push
loope
mov
cmps
mov
jecxz
add
add
jb
in
mov
sahf
sbb
cmps
lahf
jle
pop
fisttp
lahf
xor
cwde
dec
call
fstp
pop
jge
adc
and
inc
push
cli
cmps
call
daa
lods
sar
and
sub
in
jo
adc
lods
pop
sbb
sti
inc
xchg
push
add
pop
xor
cmp
imul
out
fucom
sbb
pop
and
lds
ret
and
sub
pop
cmps
jl
add
add
cmp
ins
dec
das
jne
mov
ret
pop
xchg
mov
out
pop
mov
dec
ret
mov
push
add
and
mov
pop
fwait
or
mov
hlt
pop
popa
cmp
aaa
aas
adc
sti
or
mov
fs
loopne
adc
xchg
mov
scas
xor
sbb
sbb
cmp
sub
loopne
and
mov
addr16
push
fdivp
in
pop
xchg
sbb
mov
jb
inc
inc
int3
(bad)
mov
(bad)
jne
mov
mov
or
addr16
mov
call
jp
std
lea
pop
pop
ror
mov
inc
push
xchg
retf
cmp
mov
dec
or
jae
popf
imul
cmp
mov
je
mov
std
fcmovb
mov
pushf
pop
lods
lock
nop
or
cld
out
call
jg
sar
sbb
hlt
dec
mov
rol
mov
fistp
jno
jecxz
cli
stc
xchg
out
push
mov
rcl
imul
imul
ins
bnd
div
push
xchg
pop
sbb
js
leave
lahf
icebp
ret
mov
adc
push
mov
inc
jns
movs
pusha
daa
dec
xor
add
(bad)
(bad)
pop
adc
adc
cmps
cmp
pusha
ror
je
leave
fwait
mov
faddp
stos
or
or
shl
cmp
mov
jns
(bad)
mov
xor
mov
arpl
sub
xchg
ror
cs
cmp
(bad)
adc
lea
mov
mov
sub
ins
dec
inc
and
xor
scas
mov
mov
fdiv
and
fs
cmp
fucomi
lods
retf
dec
popf
(bad)
les
retf
jmp
sub
out
scas
cmp
jmp
push
outs
dec
add
inc
jnp
pop
sar
ins
outs
sbb
xor
imul
jns
repz
mov
shl
mov
jl
xchg
push
sub
loopne
jno
push
dec
fs
sbb
adc
ficomp
je
outs
in
shl
xlat
(bad)
jge
xor
mov
and
add
mov
cmp
mov
retf
adc
stc
shl
aas
das
inc
fsub
add
test
fild
dec
jg
dec
mov
cmp
pop
pop
shr
out
in
dec
loope
mov
dec
xchg
fwait
pop
mov
or
cmp
push
addr16
sbb
push
icebp
jg
ds
fimul
repnz
fld
mov
push
pop
cmp
or
sbb
mov
and
inc
imul
sub
in
and
stc
fwait
xor
pop
and
push
fdivr
inc
loop
sti
jmp
pop
mov
sar
(bad)
pop
push
daa
push
in
push
les
adc
pop
mov
mov
pusha
sbb
dec
inc
fistp
jle
cwde
push
mov
ins
jg
shr
cmc
fisub
popf
jl
push
xor
push
out
call
mov
xchg
xor
(bad)
sbb
sub
mov
mov
push
push
in
mov
cmc
bound
push
cli
retf
outs
imul
adc
fld
xor
add
not
mov
pop
sub
out
jl
or
dec
in
sub
push
dec
push
cmp
push
test
rcr
cmpxchg
mov
pop
jne
inc
xchg
mov
push
test
das
arpl
shr
jae
jmp
mov
scas
(bad)
pop
xlat
dec
adc
movaps
sub
mov
dec
sahf
js
scas
das
sbb
loopne
(bad)
imul
ja
ins
and
daa
scas
inc
mov
bound
lods
add
scas
sub
push
push
dec
mov
xor
imul
cmp
stos
sub
pusha
and
cmp
sbb
dec
xor
cwde
or
add
push
cmps
movs
ffreep
cmps
cdq
or
jmp
jae
or
inc
mul
imul
mov
es
mov
push
mov
mov
popf
outs
out
sbb
jae
(bad)
loope
pop
push
in
and
push
adc
sti
mov
sbb
xchg
in
aas
out
in
jnp
(bad)
adc
mov
mov
test
imul
loop
cs
stc
(bad)
int3
push
test
pop
ret
in
inc
or
icebp
loope
inc
add
mov
lods
pushf
or
add
xchg
inc
adc
(bad)
fmul
mov
idiv
jnp
xchg
adc
push
mov
xchg
(bad)
push
mov
push
cmp
inc
mov
jg
test
fs
pop
xor
xchg
xchg
imul
adc
cmps
dec
sbb
mov
icebp
dec
in
and
fist
sbb
icebp
and
mov
adc
dec
in
data16
aas
adc
outs
cmp
out
lea
jl
cmps
pop
loope
jmp
push
arpl
xchg
xor
lock
imul
ss
nop
inc
add
xor
or
scas
in
fdiv
out
xor
ins
add
xchg
jmp
jb
adc
ret
dec
es
in
cmps
je
xor
int3
and
nop
xor
(bad)
jmp
popf
loope
dec
push
inc
jg
push
jge
(bad)
loope
and
adc
hlt
aas
pop
pop
(bad)
shl
xchg
inc
(bad)
jecxz
mov
adc
inc
cmc
(bad)
mov
or
cs
dec
adc
mov
mov
shr
and
out
out
aad
in
or
popf
mov
mov
ins
arpl
jo
hlt
ss
adc
test
inc
fxch
xor
retf
out
fstp
ficomp
push
sbb
dec
push
mov
jb
adc
pop
inc
(bad)
jle
push
dec
jno
loope
sub
aaa
mov
adc
pop
mov
cmp
pop
ret
xor
jecxz
sub
stos
and
outs
ud2
sub
sar
pop
test
push
sti
je
mov
fld
je
and
fst
ins
leave
jmp
mov
ss
hlt
mov
ret
dec
mov
aaa
mov
sar
retf
cmps
sub
and
or
xlat
addr16
loop
inc
dec
cmc
lods
and
mov
push
fisub
stc
cmp
das
das
xor
cld
pusha
shr
fcomp
push
lods
pushf
pusha
xor
jno
pop
imul
push
mov
xchg
pusha
pusha
mov
dec
mov
je
outs
adc
ins
or
lods
popf
into
in
adc
pushf
jge
push
shr
retf
mov
or
ins
pop
xor
or
jle
int
int
dec
xlat
dec
add
repz
outs
test
call
test
(bad)
jmp
fdivp
adc
jmp
leave
scas
xor
imul
test
add
sar
sub
jl
pop
pushf
(bad)
ins
cwde
adc
sub
pushf
test
mov
adc
or
out
out
fdivr
inc
imul
sub
rol
mov
(bad)
(bad)
jno
rcl
(bad)
xchg
xchg
stos
mov
pop
sub
jb
add
xchg
stos
sub
sar
add
adc
xlat
xor
cmp
xor
add
pop
push
sbb
push
mov
push
jg
or
test
adc
ds
pop
xor
sar
icebp
mov
out
adc
idiv
cli
and
lea
dec
xchg
dec
mov
sar
pop
scas
out
test
pop
xchg
retf
arpl
imul
mov
sbb
xchg
enter
sbb
adc
call
sub
cld
mov
or
jmp
popa
add
je
fist
xor
or
mov
cmps
retf
lds
or
movs
call
mov
cmp
outs
cmc
aaa
mov
push
jbe
loop
and
xchg
or
jg
mov
test
pop
xchg
sete
test
or
sbb
sahf
bound
jo
movlps
push
dec
es
mov
dec
test
jg
or
push
imul
dec
or
mov
out
cs
ja
dec
call
cmps
test
cmp
fstp
stos
lock
dec
icebp
add
lds
push
cmp
pop
scas
pop
lahf
outs
cmp
stos
push
movs
je
adc
mov
cdq
jmp
nop
xor
jae
adc
and
sbb
jl
inc
fs
inc
add
mov
(bad)
sbb
jmp
or
icebp
jo
shl
and
dec
cli
shr
xor
and
cmps
add
xor
mov
xlat
and
pop
jns
cmps
ss
dec
push
mov
shl
xor
pop
inc
lea
sub
test
fld
ss
jl
psrlq
xchg
cmp
cmps
mov
adc
mov
repz
shl
push
adc
aaa
lods
cmps
ss
stc
xchg
js
call
mov
out
lahf
fcom
cmp
mov
or
scas
mov
into
gs
xor
lds
mov
sbb
in
movs
xchg
and
xchg
in
pop
pop
test
into
mov
(bad)
mov
cdq
call
dec
mov
aaa
lock
add
arpl
mov
repz
push
jnp
call
out
cmc
bound
or
pusha
retf
mov
out
adc
cs
jo
push
rcl
jmp
outs
xchg
out
mov
daa
loopne
or
jae
(bad)
stos
adc
les
and
(bad)
mov
jnp
pop
adc
mov
scas
cmp
test
xchg
sub
jmp
enter
sub
mov
(bad)
outs
outs
test
adc
dec
add
ins
add
xor
pop
aaa
push
movs
nop
push
xchg
xchg
mov
xchg
mov
mov
fsubrp
jb
mov
popa
adc
mov
ja
cmp
retf
test
cmp
(bad)
mov
ins
push
sti
push
outs
jb
push
mov
std
mov
outs
dec
inc
jmp
pusha
out
jo
sub
into
xor
scas
daa
pop
mov
cmp
stos
or
es
cli
adc
mov
jp
out
adc
xor
(bad)
scas
inc
imul
mov
dec
cwde
shl
sar
loop
js
call
jp
mov
inc
jne
push
sbb
dec
or
ds
dec
call
pusha
cmps
mov
out
jle
mov
dec
mov
ja
inc
push
fmul
ins
cmp
sahf
arpl
(bad)
icebp
mov
pusha
xchg
lahf
outs
call
jbe
out
pop
dec
inc
movs
test
ds
scas
adc
call
repnz
(bad)
cdq
add
jmp
test
shl
pop
jb
jmp
jge
dec
jmp
addr16
ret
mov
ror
arpl
in
and
sub
inc
mov
cmp
dec
and
and
cdq
(bad)
(bad)
cmp
in
pop
in
mov
adc
xchg
out
rcl
into
cmp
aaa
mov
inc
xor
call
jnp
or
adc
es
repnz
sbb
inc
div
int3
(bad)
mov
jge
stc
sbb
data16
xor
fisubr
fwait
adc
mov
push
in
int
(bad)
sub
push
dec
add
out
jbe
test
push
and
fild
es
shl
cmp
aas
pop
adc
jmp
adc
shr
fmul
and
xor
inc
fimul
add
dec
fst
cmps
cs
addr16
push
in
sub
mov
(bad)
in
xor
mov
mov
inc
scas
into
loopne
or
add
add
mov
xor
ins
fsub
push
mov
out
xchg
push
test
dec
xchg
jnp
cmp
call
fwait
dec
push
xchg
pop
mov
(bad)
push
push
cmp
jmp
push
or
outs
clc
sub
repz
sbb
(bad)
stc
and
xchg
int
mov
xor
mov
sar
or
or
ins
mov
cdq
mov
pop
cmp
test
lea
sub
sti
mov
shr
inc
jecxz
aaa
cs
inc
inc
xor
popa
popf
xchg
inc
inc
or
push
dec
adc
test
xchg
ja
mov
in
dec
(bad)
test
push
(bad)
cvtdq2ps
sub
jmp
jmp
pop
and
cwde
test
cmp
pusha
lds
jp
fs
les
sar
out
inc
push
push
sub
xchg
ja
push
(bad)
adc
mov
ins
ror
mov
xor
jecxz
daa
test
int
xor
aad
add
add
(bad)
and
add
clc
dec
out
and
nop
jae
cmp
sub
xchg
adc
cmc
inc
sub
test
dec
mov
jmp
pop
jp
sbb
jl
aad
pop
and
mov
ror
jno
jae
ins
sbb
push
push
and
out
cmp
jmp
out
daa
xlat
mov
test
pop
mov
inc
pusha
in
push
(bad)
and
xlat
jns
push
bound
out
fcmovnbe
jne
leave
lock
fidiv
xor
xchg
mov
jne
dec
lahf
and
cmp
fisttp
icebp
data16
jns
sbb
dec
adc
repnz
shl
cld
add
mov
(bad)
stc
xlat
add
call
add
mov
xchg
mov
movs
das
mov
dec
(bad)
inc
mov
fmul
push
test
sbb
(bad)
cld
or
scas
cs
pushf
shl
frstor
stos
addr16
mov
call
(bad)
arpl
sahf
ins
xor
mov
push
arpl
lods
inc
jle
lock
pusha
pop
pop
jp
sbb
sbb
adc
jmp
push
ja
cdq
outs
repnz
jl
(bad)
pop
je
popa
xchg
vsubss
daa
push
cmp
or
cmp
into
or
outs
je
mov
in
sti
sbb
inc
jl
jle
loop
push
xchg
lds
xor
and
cdq
out
(bad)
sub
mov
jo
std
leave
or
push
stc
imul
pop
(bad)
inc
test
add
jge
retf
xor
add
mov
int3
sbb
cmp
imul
xchg
or
imul
shl
mov
ss
int3
sbb
xchg
sbb
in
push
mov
call
dec
fwait
xchg
sub
and
hlt
adc
loop
pop
sbb
ins
or
pop
adc
out
push
jno
scas
fmul
jae
fisubr
fsubp
or
(bad)
int
adc
aad
jo
stos
jnp
mov
sub
pop
or
test
in
adc
adc
pop
aaa
jns
div
call
lds
dec
xchg
adc
lock
add
fdivr
mov
retf
(bad)
clc
lock
mov
out
in
and
push
and
jbe
cmp
pop
rcr
mov
mov
test
out
cmp
mov
sub
fwait
imul
adc
mov
(bad)
mov
idiv
xor
scas
dec
xchg
mov
imul
imul
shr
loope
out
pop
dec
or
and
dec
(bad)
jp
fstp
add
xor
push
inc
inc
push
in
sbb
xor
mov
imul
arpl
stos
inc
pop
aad
xchg
lss
cmp
fidiv
cwde
push
push
or
sbb
cli
xchg
test
xlat
push
cmps
or
inc
sub
in
dec
pop
dec
aam
mov
cmp
sub
in
mov
push
push
mov
xchg
(bad)
icebp
inc
pop
jb
jne
mov
repnz
jl
(bad)
jmp
cmps
bound
sbb
ins
aam
bound
sbb
lock
adc
je
in
pop
test
lods
repnz
cmp
ret
stos
outs
neg
mov
mov
pop
mov
call
mov
js
add
fld
jno
push
div
xchg
or
mov
pop
outs
sub
popf
clc
and
stc
ficom
add
push
add
loop
imul
mov
ins
inc
jmp
rol
retf
test
sbb
push
(bad)
sbb
mov
jmp
inc
xchg
outs
pop
mov
fwait
lods
xor
repz
je
int
cmp
push
in
xor
sub
or
or
mov
or
fiadd
cmc
xchg
loope
cld
dec
jnp
bound
inc
cwde
add
or
jne
lock
push
cmc
icebp
js
pop
jge
jge
xchg
sub
outs
xor
push
fwait
inc
dec
fisttp
mov
and
in
dec
adc
ret
pop
sbb
mov
jmp
mov
push
jo
les
pop
pop
mov
jge
jmp
and
jnp
adc
jge
pop
loopne
lock
scas
sub
jo
sbb
sbb
in
loop
and
jns
dec
jb
xchg
imul
mov
in
cs
in
jae
aas
cld
mov
dec
and
add
jo
loop
(bad)
repz
call
sub
cmp
lds
cmp
jae
mov
pop
inc
xchg
sub
inc
inc
rol
fwait
dec
xlat
sti
dec
jae
sbb
(bad)
imul
(bad)
push
call
iret
pop
in
mov
xchg
into
sbb
sub
icebp
mov
fmul
cmp
mov
push
mov
addr16
arpl
das
and
mov
mov
in
mov
add
jg
push
sahf
movs
shr
in
mov
ror
xor
jle
dec
jmp
nop
xchg
push
xlat
out
pusha
in
shl
xchg
or
mov
push
movs
xor
adc
mov
pusha
xchg
sub
xchg
xchg
push
or
mov
inc
scas
and
adc
test
gs
jmp
pop
sahf
ja
mov
std
or
fdivr
fstp
retf
or
mov
popa
jo
pusha
test
test
movs
jbe
mov
push
(bad)
push
jmp
xchg
out
push
jl
adc
(bad)
daa
bound
pop
add
inc
sub
out
mov
aas
push
lahf
xchg
sbb
ins
ds
std
push
sbb
mov
cmp
int3
test
cmp
lahf
pop
push
iret
ja
mov
cli
xor
rcr
fwait
sbb
popf
es
lea
and
ds
and
sub
add
stc
fidivr
rcr
cmp
lds
xor
add
shl
(bad)
jbe
xor
scas
dec
jns
cmp
adc
ds
out
jo
ret
sub
mov
and
iret
clc
inc
mov
xlat
std
mov
push
or
jb
adc
add
xor
add
sbb
sbb
push
mov
jo
imul
jle
fs
cmp
dec
sbb
jmp
in
test
paddw
cwde
jb
aaa
mov
add
addr16
mov
sub
pop
pop
add
mov
push
inc
inc
mov
inc
sub
push
xor
dec
push
pop
jg
mov
loopne
stos
inc
scas
push
retf
dec
add
arpl
pushf
add
stc
mov
cmp
adc
aam
in
sub
xchg
jmp
adc
xchg
xchg
out
in
inc
scas
inc
xchg
mov
inc
aam
stos
into
xor
lea
sub
xchg
xchg
je
cmc
mov
std
jns
dec
stos
leave
sub
xchg
ror
repz
push
mov
sbb
mov
enter
xor
jb
fwait
sbb
fidivr
push
or
dec
iret
repnz
pusha
jmp
ja
inc
push
xlat
pop
(bad)
mov
jmp
or
sar
pop
mov
cmp
add
out
into
add
loop
out
enter
xor
aas
in
push
out
xchg
pop
adc
mov
cwde
pusha
(bad)
retf
jbe
inc
jecxz
scas
lods
add
pop
jae
sar
inc
adc
cmp
jbe
push
xchg
lods
adc
inc
inc
aaa
test
jbe
(bad)
leave
ficomp
xchg
cs
in
dec
sbb
adc
jbe
out
adc
inc
loope
xchg
or
cmp
or
sub
cwde
fwait
inc
mov
rcl
loopne
ja
xor
mov
aad
clc
xchg
out
sub
mov
xchg
pop
clc
xchg
push
(bad)
mov
out
ss
(bad)
mov
std
stc
in
push
and
loop
(bad)
cld
and
ficomp
fadd
add
dec
ins
dec
jns
or
jo
add
nop
adc
mov
jnp
scas
scas
ror
call
sbb
dec
adc
call
daa
shr
movs
add
pushf
in
add
jbe
xlat
fadd
test
enter
daa
popa
cmc
adc
movs
mov
add
sbb
dec
jns
jmp
xor
jecxz
and
inc
popa
sub
cmp
or
fidiv
out
sbb
cmc
dec
pop
sbb
adc
xor
js
(bad)
and
mov
mov
sbb
lock
addr16
mov
js
ss
add
scas
outs
xchg
aas
inc
mov
enter
in
ror
mov
rcl
rcr
dec
fstp
cwde
ror
rcr
das
inc
push
cmp
and
lea
inc
aaa
test
movs
sar
mov
xor
dec
xchg
adc
cmp
retf
push
xor
comiss
push
or
stos
fwait
sbb
je
inc
mov
sbb
retf
push
mov
data16
fistp
out
push
fs
mov
(bad)
sub
inc
xor
inc
(bad)
mov
mov
aaa
ja
nop
jge
pop
xor
loope
sbb
and
and
hlt
fstp
mov
jb
and
inc
adc
inc
jae
in
test
jne
mov
enter
call
nop
out
retf
xlat
cmps
adc
enter
jmp
aam
retf
xor
iret
adc
sub
scas
dec
fs
inc
push
rcr
sbb
mov
add
leave
in
(bad)
fsub
add
pop
adc
add
dec
push
into
pop
not
push
push
and
les
bound
dec
pop
xor
and
neg
push
push
push
ds
mov
wbinvd
mov
or
cmp
push
cmp
push
fs
xor
or
jg
cdq
ins
sub
push
cmp
pop
and
sub
xchg
loope
xchg
mul
jle
mov
push
sub
cmp
xor
or
aad
mov
add
into
loope
daa
jns
arpl
lds
mov
mov
push
cmp
cwde
mov
inc
test
jp
jmp
mov
cdq
jecxz
inc
fimul
mov
shl
inc
or
nop
mul
call
hlt
pop
cmps
clc
sub
cmp
add
jp
and
or
ds
pop
addr16
mov
adc
lds
pop
adc
jle
xlat
or
loop
inc
inc
repnz
fsubr
ins
test
pop
jecxz
je
out
xchg
pop
call
mov
cdq
popa
in
fnstcw
in
vpmacssdd
pop
sahf
inc
es
mov
inc
cli
fbld
push
enter
dec
jg
adc
mov
cmc
ins
movs
jecxz
jmp
jecxz
sbb
icebp
out
sub
fs
outs
jle
scas
cmps
(bad)
cmps
mov
adc
in
xchg
sub
lods
push
ss
jo
dec
stc
pusha
jbe
repz
or
aad
mov
enter
arpl
retf
add
in
movs
mov
int3
adc
xchg
dec
scas
loope
int
pushf
or
lock
gs
push
into
mov
sub
in
mov
lock
dec
cmps
ror
dec
test
aas
add
and
out
xchg
jnp
add
(bad)
rcr
ins
ss
mov
(bad)
jb
xchg
mov
dec
je
psraw
inc
adc
data16
rol
cmp
je
mov
dec
xchg
icebp
adc
xor
ficomp
loopne
push
in
fisubr
icebp
dec
mov
test
pusha
inc
(bad)
imul
ins
adc
(bad)
xchg
jns
(bad)
(bad)
xchg
in
mov
js
mov
ror
int3
cmp
xchg
stos
fcom
push
xchg
pop
pop
clc
into
enter
xchg
inc
lods
sbb
pushf
adc
ss
ror
ror
aas
push
adc
jmp
call
sub
repz
inc
nop
cmp
arpl
adc
icebp
cdq
sub
mov
sbb
stc
xor
lea
mov
mov
mov
rcl
dec
cmp
call
repz
cmps
pop
fucomip
dec
inc
ret
and
cmp
xchg
pop
mov
cwde
pop
mov
pop
pop
cmp
dec
sub
inc
shr
call
or
(bad)
push
pop
lods
ret
push
inc
imul
mov
fucom
retf
mov
cmc
and
lods
call
jmp
mov
ds
mov
mov
xlat
jnp
lock
lds
dec
cmp
xchg
mov
(bad)
loopne
pop
out
push
iret
in
push
add
cmp
xor
fstp
cmp
mov
sbb
mov
lea
cli
inc
cmp
ficom
fst
cmps
aad
out
lds
fcom
bound
push
movs
lahf
lahf
fidiv
mov
int
jg
jne
mov
fld
out
or
jae
loop
xchg
xor
cmp
inc
mov
retf
stc
ins
lods
call
push
push
jnp
add
inc
cs
mov
ret
cld
push
repnz
xlat
ins
dec
fimul
mov
jl
push
jae
test
inc
jmp
pop
mov
jb
pop
push
jae
js
stc
push
push
ss
adc
or
(bad)
call
pop
int3
mov
(bad)
cmp
ds
(bad)
jne
xchg
adc
ins
xor
es
xchg
inc
adc
stos
out
sti
jmp
ja
aam
adc
cwde
test
and
call
dec
ficomp
leave
add
cmp
or
(bad)
cs
(bad)
call
scas
retf
(bad)
jns
xor
cmp
add
bound
sbb
push
push
cmp
in
xchg
in
and
les
cmps
test
test
shl
cmp
dec
add
push
es
pop
cmc
dec
mov
aad
ror
add
call
imul
popa
int3
inc
jb
or
out
lds
mov
jecxz
dec
and
dec
ins
adc
sbb
or
xchg
cmp
mov
cdq
inc
les
sub
cld
or
push
xchg
xchg
pop
je
mov
loopne
or
or
jmp
or
daa
or
mov
cmc
test
std
adc
into
cmp
dec
int3
test
nop
gs
or
xchg
daa
out
aas
js
jp
sar
ret
lahf
fsubr
retf
inc
mov
aad
xchg
cwde
ja
or
push
jmp
ss
fcom
retf
popf
mov
mov
fcos
lock
xchg
add
pop
mov
sti
test
sub
cdq
cmps
sub
add
mov
outs
aas
imul
(bad)
hlt
dec
xchg
aad
sar
out
pop
inc
or
mov
cli
(bad)
scas
fld
or
xchg
sti
mov
cmp
push
inc
xchg
cmp
test
xor
mov
in
mov
mov
mov
les
icebp
fiadd
cli
mov
jbe
add
jns
xchg
pop
push
cmp
mov
test
xor
addr16
sti
test
dec
adc
pop
sbb
mov
clc
mov
enter
pop
dec
sub
mov
pop
mov
test
popf
xor
and
fisttp
fnstsw
xor
in
jne
pushf
sbb
mov
mov
fstp
jp
pop
int3
mov
aaa
addr16
xchg
bound
mov
push
fld
(bad)
xchg
rcl
repz
sub
jns
test
jmp
mov
mov
xchg
cmp
sbb
push
sbb
loope
stc
sub
in
mov
test
xor
inc
(bad)
fptan
cmp
push
jmp
jbe
movs
sbb
(bad)
push
sbb
jae
and
dec
mov
adc
in
sub
add
xor
jge
leave
popf
push
mov
or
jge
sar
call
sbb
mov
or
iret
pop
inc
lods
fbld
cmp
pcmpeqw
push
xchg
f2xm1
loopne
cwde
add
sbb
jns
outs
add
mov
pop
cmp
fidivr
ret
sub
cmp
cwde
(bad)
(bad)
in
addr16
fisttp
or
mov
cmp
das
mov
adc
inc
pop
fs
lods
ja
push
jmp
mov
repz
push
mov
xor
stc
inc
cmp
xor
pop
sahf
push
jg
fmul
call
push
dec
aad
popa
jo
inc
sbb
retf
add
sub
imul
lock
sbb
push
jl
call
test
mov
in
xor
sti
dec
xor
mov
ins
aad
jne
mov
jae
pop
add
dec
pushf
aaa
aaa
gs
jne
inc
jae
adc
push
cmc
call
in
cmps
or
adc
mov
ret
jl
push
xchg
mov
aad
push
jns
xor
mov
fwait
push
shr
jb
mov
dec
out
push
int3
sbb
mov
jo
push
jnp
or
iret
inc
cmp
dec
cmps
pop
hlt
fs
ficom
inc
or
xchg
inc
jno
inc
popa
xchg
sbb
ins
out
push
mov
and
(bad)
fisttp
cmp
leave
add
push
jmp
or
xor
mov
out
adc
xor
mov
and
neg
xchg
mov
aas
push
sub
jbe
jne
xor
pop
jge
dec
add
sub
js
jmp
jle
mov
into
(bad)
aas
(bad)
in
and
mov
in
(bad)
xchg
fwait
jecxz
or
idiv
xchg
adc
inc
dec
inc
adc
jge
jbe
jbe
popf
sbb
movs
cmp
mov
data16
inc
fnsave
xor
lods
xor
jne
xor
mov
mov
mov
inc
or
(bad)
jmp
not
outs
ret
xor
push
pusha
fist
mov
rol
(bad)
mov
xlat
ss
lds
addr16
clc
idiv
repz
fstp
ds
imul
jno
xor
sar
jmp
loop
fidiv
sub
js
cli
dec
fmul
jge
dec
iret
fdivr
adc
jge
gs
sub
mov
aas
xor
ret
push
push
loope
jb
cwde
jmp
sub
ins
int3
mov
popf
ret
(bad)
mov
sbb
cmps
jl
and
dec
dec
call
and
call
dec
add
mov
adc
imul
cmp
(bad)
retf
loopne
dec
call
xor
mov
inc
packuswb
test
pushf
pop
mov
retf
in
or
retf
stos
push
in
std
xchg
repz
or
sahf
push
pusha
pop
mov
out
add
sub
inc
out
jcxz
mov
jmp
arpl
mov
push
(bad)
jl
xchg
mov
pop
add
and
fdiv
adc
xchg
fstp
adc
inc
inc
in
in
pop
push
test
dec
retf
xchg
ja
cmps
pusha
push
out
mov
sar
xchg
outs
jg
pop
cdq
inc
out
enter
push
imul
cmp
ror
(bad)
(bad)
pop
push
mov
cdq
and
(bad)
retf
fnstsw
pop
mov
jg
xor
mov
(bad)
pop
dec
inc
bnd
dec
xchg
out
add
inc
and
mov
out
ffreep
xchg
add
cdq
xor
pop
pop
(bad)
push
fcmovbe
and
hlt
xor
stc
xor
into
fdivp
mov
add
mov
mov
pop
loope
shr
scas
into
call
pop
add
in
movs
mov
cmp
outs
xor
bnd
leave
cmc
adc
add
out
inc
inc
jbe
js
inc
imul
sbb
out
inc
or
mov
push
fs
xchg
test
enter
mov
js
add
lds
or
jmp
xchg
mov
outs
adc
mov
push
aad
mov
sbb
pop
pop
sub
(bad)
jne
dec
add
aam
loope
sbb
jp
inc
addr16
std
xchg
xor
mov
in
dec
mov
cmp
jne
int
pop
call
mov
cld
inc
jo
xor
(bad)
push
pop
loope
add
enter
(bad)
jmp
sahf
push
dec
or
pop
push
and
jno
jne
mov
add
and
mov
in
sbb
inc
or
(bad)
aad
fwait
push
nop
(bad)
movs
inc
in
mov
inc
jns
and
ret
scas
xor
push
mov
lds
jg
(bad)
xchg
cs
jmp
test
mov
sbb
lock
fistp
push
cdq
inc
jns
xchg
add
cmps
or
cs
mov
adc
and
int
or
mov
xchg
mov
fisubr
jb
icebp
pop
push
and
out
push
fcomp
loop
inc
pop
arpl
neg
pop
gs
call
pop
push
or
mov
ficomp
push
das
bound
test
and
push
xor
jg
repz
in
sbb
sbb
pop
add
dec
scas
mov
(bad)
and
add
push
cmp
sbb
enter
(bad)
retf
lahf
fsubp
je
sub
mov
je
sub
pop
mov
adc
cld
icebp
ins
inc
shl
test
sbb
dec
xlat
call
scas
adc
popa
movs
sbb
mov
movs
test
or
push
int3
mov
aas
pop
xchg
mov
pop
pop
out
frstor
jnp
mov
clc
and
push
call
or
jbe
xchg
and
mov
mov
call
daa
adc
cmp
xor
in
pop
pop
lods
xchg
icebp
adc
xchg
mov
fxch
xchg
mov
outs
fadd
pop
cdq
dec
retf
loop
ins
out
jae
mov
bound
data16
mov
popa
(bad)
stos
cdq
adc
in
pop
add
push
test
arpl
(bad)
jne
mov
mov
cmps
or
call
stc
cli
call
ret
sbb
inc
in
std
mov
push
daa
or
ss
mov
loopne
mov
loopne
xor
mov
popa
push
jne
inc
mov
shr
pop
outs
push
mov
or
icebp
leave
cs
pop
sbb
xchg
pop
fidivr
cmp
or
and
xchg
pop
push
out
dec
mov
add
mov
push
push
mov
call
push
sub
cmp
mov
inc
pop
dec
fist
xchg
sti
xor
add
dec
and
repnz
mov
data16
pushf
jno
jne
hlt
mov
inc
add
sti
cmps
cmp
pop
cmp
sub
mov
fcmovnbe
movs
inc
mov
mov
xor
mov
dec
mov
ds
lods
push
bound
and
and
sub
ins
js
sub
cs
out
nop
cmp
arpl
es
mov
test
stos
mov
fstp
daa
inc
ins
(bad)
jl
xchg
out
fcom
test
jmp
shr
sub
aaa
mov
lahf
and
pop
inc
(bad)
xchg
mov
mov
fbld
jnp
rol
or
addr16
(bad)
in
les
mov
push
cmp
dec
adc
fs
in
xor
loop
mov
mov
gs
push
fild
mov
or
shr
(bad)
imul
int
inc
xor
repnz
adc
cmp
mov
cld
add
ins
fucomip
pop
inc
les
pusha
add
daa
inc
neg
mov
pop
outs
not
mov
fst
cs
cwde
fcomp
cmp
fiadd
rcr
or
js
pushf
mov
clc
sar
or
jbe
popa
push
mov
cmps
cmp
cmps
loop
arpl
pop
ins
scas
pop
and
pusha
hlt
sub
fisubr
(bad)
clc
pusha
adc
mov
call
retf
mov
cli
xchg
adc
sbb
sbb
in
scas
sub
ins
aad
push
mov
push
adc
mov
es
ror
push
mov
mov
ret
jmp
push
pop
sub
mov
lock
clc
int3
cmps
push
inc
cdq
mov
pop
xor
add
std
idiv
push
mov
sbb
push
lods
mov
mov
push
jmp
xor
clc
sar
bound
aam
or
sar
scas
test
mov
into
mov
mov
je
sub
mov
fisub
pop
add
and
mov
in
xor
mov
sub
and
mov
fistp
adc
mov
mov
fdivr
dec
sar
fstp
add
cmp
pop
loop
ror
inc
call
push
jnp
aaa
mov
lahf
xor
loop
mov
inc
stc
hlt
or
push
lods
or
repz
ss
movs
(bad)
daa
repnz
mov
xchg
sub
cmp
std
(bad)
mov
mov
adc
add
cmp
loopne
mov
out
cmps
xlat
push
popa
dec
mov
pop
aad
(bad)
pop
repz
imul
pop
test
in
repz
repz
cs
jnp
jb
xchg
enter
int3
pop
sbb
inc
repz
loopne
mov
scas
retf
xor
xor
mov
pop
les
clc
pop
inc
test
push
aad
(bad)
cmp
push
sub
dec
int
ins
sar
inc
outs
(bad)
jmp
retf
fld
sub
mov
dec
push
pusha
push
inc
js
imul
dec
fiadd
and
fisttp
(bad)
aas
pop
dec
imul
jnp
xchg
fld
inc
dec
shl
(bad)
std
adc
xor
cmc
xchg
out
mov
call
or
call
sti
xor
inc
sub
ret
test
retf
ret
inc
shl
fdiv
out
es
pop
shr
cmp
cmp
mov
push
cli
add
dec
xchg
mov
loopne
dec
mov
shl
dec
mov
arpl
jmp
ss
aaa
sbb
sbb
nop
out
mov
add
(bad)
dec
dec
jne
push
pop
call
jle
push
xor
enter
rcl
les
mov
out
jb
jnp
mov
pop
add
sti
adc
iret
stos
gs
addr16
cld
out
cdq
ja
cmp
sub
movs
xchg
lahf
xor
(bad)
mov
popf
mov
adc
xor
cld
mov
mul
test
lods
popf
mov
push
fstp
ja
bound
xor
mov
jbe
inc
int3
sub
mov
push
adc
cmps
xchg
pusha
in
mov
js
mov
add
rcl
mov
fs
idiv
xchg
sbb
scas
push
pop
test
fbstp
push
push
das
xchg
inc
icebp
out
push
gs
mov
push
out
mov
popf
movs
lock
dec
into
shl
add
cmp
sbb
dec
sub
or
clc
xchg
jae
pop
psllw
inc
sti
dec
ins
sbb
js
mov
xchg
pop
call
pop
jp
out
inc
fsubr
arpl
fs
pushf
sbb
jle
aad
cmp
inc
jns
inc
out
sub
stos
aaa
pop
mov
movs
and
les
adc
dec
(bad)
fdivr
ss
in
cmp
aas
xor
mov
sub
jnp
in
loopne
sbb
fdivr
mov
push
test
xchg
push
sub
sbb
mov
mov
pop
sub
ret
(bad)
cwde
scas
and
js
sbb
(bad)
fst
add
push
lods
ror
in
cmp
stc
into
(bad)
mov
push
jg
xor
sbb
xchg
xchg
sbb
push
mov
jle
iret
ret
mov
mov
inc
adc
xchg
rcr
loopne
or
pop
and
movs
(bad)
sbb
push
push
xchg
push
inc
fs
mov
inc
dec
cmc
push
push
call
pop
hlt
aam
or
ret
sbb
outs
push
sub
out
xor
or
cmps
pushf
pushf
not
and
sbb
mov
imul
mov
adc
and
adc
inc
xor
add
push
and
jmp
out
inc
jg
jge
lods
dec
jb
sbb
js
dec
imul
mov
dec
jge
sub
(bad)
cmps
push
ja
jmp
popf
fucomi
lock
lock
inc
sti
scas
into
imul
mov
jecxz
cmp
scas
pusha
dec
popa
mov
ins
jmp
fadd
jb
sub
push
cmc
retf
and
and
loopne
sub
pusha
jnp
mov
sbb
or
std
outs
shr
loopne
dec
mov
xchg
dec
les
ds
stos
movs
push
mov
pop
mov
mov
cli
addr16
xchg
jae
and
xchg
xchg
mov
and
sub
sbb
arpl
sar
push
xlat
in
js
cdq
sahf
sbb
fcmovu
fstp
add
push
cmp
lds
xchg
clc
add
inc
pop
int
fist
mov
mov
das
xchg
fld
adc
inc
pop
dec
xor
addr16
sbb
pop
xor
mov
jo
jo
and
lock
retf
lods
out
clc
jl
pop
test
sar
sub
pop
(bad)
out
adc
mov
test
sbb
aam
mov
add
retf
rcr
mov
inc
in
pop
xchg
pop
cmc
addr16
jmp
fstp
(bad)
loop
push
ror
mov
add
in
ja
mov
(bad)
pop
rcl
lea
mov
mov
cmp
out
jecxz
jnp
pop
inc
dec
out
outs
jmp
add
sbb
push
mov
mov
adc
out
(bad)
mov
xchg
sbb
stos
mov
out
or
or
aaa
loop
or
jg
sti
or
dec
adc
mov
fs
in
gs
sbb
int
cmp
stos
and
into
test
pushw
test
(bad)
into
dec
add
cmc
sbb
mov
mov
fwait
mov
dec
add
mov
xchg
add
push
(bad)
cmp
cld
push
mov
mov
(bad)
sub
mov
or
(bad)
popa
inc
cli
xor
outs
jge
push
push
dec
inc
dec
cmp
inc
adc
dec
imul
call
ds
adc
inc
add
inc
mov
jl
jbe
cli
xlat
cmp
and
mov
mov
pop
or
mov
sti
or
mov
add
and
les
out
jle
das
repnz
sbb
jl
fisttp
push
mov
pop
lock
inc
cmc
or
sub
xor
inc
cmps
mov
in
popf
dec
adc
or
mov
dec
add
iret
and
sub
pop
int3
aad
push
pop
sbb
iret
mov
adc
mov
jmp
mov
popa
xchg
xchg
stos
enter
sbb
arpl
sub
mov
inc
sbb
ficom
mov
sbb
test
push
jae
push
mov
in
mov
ins
jo
push
ret
shr
(bad)
inc
jo
sbb
movs
mov
mov
stos
push
addr16
jo
aas
scas
dec
stc
push
add
aas
xchg
data16
out
jecxz
push
mov
pop
test
(bad)
pop
retf
pop
(bad)
in
stos
add
xor
push
dec
neg
or
mov
fimul
shr
lods
cmp
xor
sahf
mov
sbb
retf
cmp
pop
cmc
dec
mov
add
gs
mov
jge
sbb
xchg
xor
mov
or
and
mov
imul
iret
mov
or
pop
xchg
sbb
sbb
addr16
bound
imul
mov
(bad)
xchg
xor
retf
add
int3
mov
add
mov
mov
pusha
add
retf
lea
in
inc
ror
shr
iret
push
enter
jae
enter
dec
rcl
dec
bound
ret
mov
xabort
ja
enter
jmp
fs
jb
fisubr
pushf
out
pusha
int3
or
popa
(bad)
jl
xor
add
out
jae
ds
lds
xchg
out
xlat
sti
push
cmp
pmulhw
pop
sub
rcr
test
adc
sub
fs
adc
xchg
movs
addr16
mov
sub
push
dec
add
add
pop
pop
fadd
jecxz
push
and
fnsave
jbe
mov
inc
or
adc
dec
lock
and
xor
mov
rol
add
pusha
push
cli
xor
mov
mov
aam
inc
ins
cmp
mov
imul
lea
cmp
enter
jno
lea
xor
dec
mov
psubsw
aaa
shr
mov
jle
mov
and
lock
push
call
or
sahf
popf
dec
(bad)
sar
in
out
jb
outs
add
loop
outs
pop
cmp
in
hlt
loope
std
lods
fnsave
jg
(bad)
push
sbb
cdq
les
mov
xor
jp
cmp
pop
scas
dec
(bad)
in
test
push
(bad)
stos
sbb
inc
shr
call
fs
adc
cmp
daa
xor
adc
inc
xlat
popf
jnp
mov
ret
fstp
inc
repnz
jne
ss
nop
stos
imul
(bad)
sbb
add
test
jge
mov
mov
movs
mov
mov
mov
iret
jno
mov
(bad)
shl
mov
imul
lds
sub
pushf
xchg
call
movs
xor
pop
dec
jmp
add
mov
dec
sub
mov
fisubr
fist
data16
mov
pop
xor
add
adc
out
aam
jbe
sbb
(bad)
jnp
icebp
sti
mov
or
(bad)
push
mov
mov
push
mov
test
xor
gs
fsub
mov
inc
shl
cmp
xor
arpl
lods
sub
fstp
loope
imul
lods
cmc
stos
mov
daa
mov
out
scas
ds
dec
or
sbb
push
push
iret
sub
push
stc
sub
xor
daa
ret
cmps
and
push
cmp
jo
mov
jbe
sbb
cmp
in
push
jmp
div
xor
inc
mov
jp
xor
(bad)
add
test
aaa
adc
push
push
sar
pop
in
or
mov
shr
and
or
jmp
push
dec
in
imul
push
test
dec
jae
xchg
cmp
hlt
inc
xlat
rol
aam
test
jno
xchg
hlt
push
je
outs
rol
xchg
adc
jg
leave
dec
imul
sub
popa
cld
inc
mov
xchg
dec
js
xchg
out
pop
dec
ja
mov
lahf
add
pusha
xor
push
fwait
pop
cmp
aaa
retf
adc
popa
fnstcw
push
(bad)
daa
pop
ror
push
je
cli
cld
push
xchg
aaa
xor
dec
(bad)
adc
movs
xor
lahf
lds
mov
xchg
pushf
leave
cmp
inc
aam
cmp
and
xor
push
popf
retf
movs
mov
and
outs
cmp
loope
jb
movs
xchg
add
xchg
out
cmp
add
das
dec
jmp
(bad)
jp
rol
sub
cmp
not
movs
jmp
or
lds
gs
clc
pop
ficom
inc
sbb
mov
out
xor
leave
add
sub
cmp
test
fucomi
sbb
es
mov
xchg
jns
repnz
dec
jns
xor
pop
xlat
test
lea
dec
cmc
adc
add
mov
retf
cmp
jae
call
jae
fwait
(bad)
pop
push
in
scas
adc
mov
mov
outs
mov
popf
sub
(bad)
rep
ret
inc
test
cmp
push
fisttp
fist
icebp
mov
cmp
or
mov
test
dec
shl
and
push
dec
out
stos
xor
mov
outs
jle
add
shr
push
scas
xor
mov
jmp
push
test
cmp
in
push
ja
jl
imul
mov
push
cmps
outs
int
enter
iret
inc
int3
addr16
loop
xchg
idiv
jecxz
pop
in
cwde
cwde
dec
inc
pop
jbe
stos
mov
sub
lods
iret
addr16
inc
jecxz
sbb
jp
add
mov
sti
fmul
inc
pop
in
jo
add
scas
push
out
pop
dec
test
xchg
retf
dec
or
cmps
lahf
jno
into
and
push
mul
rol
addr16
mov
jge
sub
jge
leave
xchg
mov
cli
pop
retf
ins
add
fldenv
pop
inc
fisttp
adc
out
inc
hlt
ror
jns
fs
lods
dec
(bad)
dec
mov
push
mov
push
adc
outs
dec
mov
mov
xchg
adc
xchg
je
pop
gs
mov
sar
or
addr16
mov
cmps
retf
lods
out
mov
xor
cmps
cmc
scas
xchg
int
fnsave
push
push
cli
arpl
push
aas
popf
cli
enter
movs
outs
or
cmps
or
inc
aam
fbld
fdivr
repz
jp
rcr
mov
jno
push
push
int3
sbb
pop
adc
jo
retf
cwde
fucomip
sti
pop
add
cmp
xchg
ficom
fcomp
xor
int3
dec
rcr
das
mov
mov
xor
ficomp
loopne
(bad)
pusha
in
je
jno
ins
mov
lods
pop
jbe
inc
loop
push
sub
enter
or
aad
sbb
mov
shl
cs
inc
gs
les
mov
iret
jp
loopne
popa
sbb
rcl
repnz
push
lahf
in
jb
xor
inc
push
push
lahf
jmp
nop
fst
inc
inc
mov
push
xor
loope
ffree
xchg
jmp
clc
cmps
loop
inc
rcl
mov
cmp
cwde
xchg
enter
mov
adc
fdiv
fimul
mov
imul
xchg
fwait
sbb
test
cmp
ret
cmp
lahf
dec
fs
lods
mov
sbb
inc
jo
jmp
mov
pop
push
pop
idiv
cwde
pop
stc
out
xor
mov
stos
test
enter
inc
retf
mov
(bad)
cwde
xchg
adc
push
clc
into
sar
mov
jns
xor
sub
neg
add
(bad)
fild
pop
outs
jl
cld
sahf
(bad)
call
or
push
xchg
call
push
stc
adc
xor
cmps
imul
xchg
mov
xchg
pushf
push
cli
and
jg
and
inc
inc
shl
pop
cmps
push
mov
pop
pop
in
in
cmp
cmovbe
pop
test
repz
iret
mov
(bad)
jns
jns
xor
mov
cmp
mov
mov
inc
and
adc
add
call
xor
loopne
push
je
sbb
loope
add
push
jb
jb
loope
cli
data16
xor
sbb
ds
test
ins
cdq
mov
fimul
sbb
push
xchg
aam
mov
pop
minps
sti
fwait
cld
rcr
xchg
dec
mov
in
inc
mov
sbb
ja
ins
(bad)
in
loope
xchg
in
add
mov
pop
outs
sub
cli
ds
jl
leave
add
adc
xchg
shr
cmps
fst
es
inc
fdivrp
pop
mov
adc
popf
pop
hlt
inc
icebp
fiadd
and
inc
dec
aas
adc
cmp
iret
retf
sub
rcr
sbb
xchg
pushf
in
push
push
mov
cwde
ror
hlt
daa
hlt
dec
xchg
cs
lock
daa
push
sar
shl
ret
setnp
inc
mov
loopne
paddq
xchg
cmc
retf
xchg
sub
ins
adc
xchg
hlt
fadd
(bad)
arpl
lods
(bad)
aam
sbb
pop
cmp
into
das
xchg
scas
adc
jnp
dec
add
retf
pop
push
cmp
fdivr
mov
push
in
xor
out
mov
and
bound
jp
scas
cmp
sub
iret
jl
jns
cmp
sub
or
jbe
pop
inc
sar
aam
cmp
out
xlat
addr16
aaa
test
scas
lock
(bad)
movntps
dec
repz
adc
jmp
and
inc
sbb
repnz
or
xchg
ret
push
loope
(bad)
jb
cmp
and
cmp
pop
jo
mov
jp
mov
in
sub
cmp
cmp
pusha
cdq
mov
cmps
into
fst
add
mov
std
sub
mov
or
and
ja
cli
outs
hlt
nop
and
ret
call
push
mov
lock
ret
pop
sbb
adc
pop
movq
add
ret
in
adc
xor
das
fdivrp
cmp
mov
push
sub
rol
fwait
sbb
xchg
lock
pushf
sbb
sbb
push
pop
and
pop
xor
mov
dec
out
daa
push
mov
je
mov
pop
loopne
push
std
sar
xor
(bad)
push
push
dec
push
lea
adc
in
clc
call
add
sahf
sti
add
loopne
add
sub
(bad)
sub
retf
push
rol
sbb
mov
mov
xchg
mov
mul
xchg
dec
cld
iret
(bad)
sbb
sbb
leave
call
in
test
xchg
and
add
jge
retf
mov
lds
fs
imul
jnp
in
pop
stos
nop
add
dec
bswap
inc
scas
adc
inc
jle
push
push
test
push
outs
cdq
icebp
mov
aas
outs
loop
lods
dec
fst
pop
push
xor
jbe
xchg
dec
frstor
gs
jle
pop
push
sbb
push
popf
and
pop
pop
push
lods
mov
add
jnp
inc
cld
and
int
dec
loope
jg
mov
adc
int3
fisubr
cmp
das
mov
in
or
or
(bad)
test
fimul
or
es
mov
test
adc
rcr
lods
push
mov
inc
shl
test
push
pushf
inc
rcr
inc
cmp
push
xchg
ror
dec
nop
dec
iret
mov
int3
shr
cmp
scas
xchg
lock
sbb
ins
sbb
jno
mov
push
sub
int3
or
sub
dec
mov
dec
nop
cwde
out
pusha
leave
in
cmp
in
les
add
xor
jle
cmp
or
dec
dec
fistp
or
aad
adc
add
unpckhps
add
inc
sbb
inc
loop
popf
and
out
(bad)
xor
push
cmps
std
push
cmp
adc
cmp
jnp
lods
or
ds
xchg
sar
pop
dec
jmp
cwde
push
outs
adc
and
stc
sbb
sbb
or
addr16
mov
repnz
xchg
mov
and
or
cwde
jns
pop
or
call
push
js
imul
jecxz
xchg
push
sub
pop
dec
enter
sub
or
icebp
inc
dec
mov
ja
movs
sub
push
popa
cmp
ss
jmp
fcom
adc
fsub
test
stos
mov
fbld
loop
xchg
push
(bad)
fisubr
sub
outs
sub
xchg
shl
xchg
and
cmp
mov
stos
ss
xchg
sbb
enter
xchg
icebp
popa
cmp
leave
or
pop
pusha
push
std
clc
xchg
leave
int3
stos
jo
mov
movs
lods
div
shr
pop
(bad)
xor
imul
in
and
xchg
or
cdq
adc
push
movs
mov
daa
sbb
data16
jmp
mov
dec
mov
or
jbe
sti
scas
arpl
add
xor
cmp
cli
mov
jo
jmp
pop
sbb
mov
out
cmp
ss
mov
aam
mov
pop
sub
inc
shl
dec
daa
xchg
mov
xor
out
and
jns
xor
or
push
jo
xchg
ret
aam
mov
cs
daa
jg
or
je
stos
out
dec
fcom
repz
nop
call
or
sub
mov
mov
daa
div
js
pop
je
pop
inc
movs
add
xchg
fisubr
mov
dec
div
and
dec
loop
pop
cld
call
mov
dec
dec
cmps
dec
push
inc
jg
icebp
loope
sub
mov
pop
sahf
fild
icebp
mov
mov
or
pop
sub
pop
(bad)
pusha
inc
mov
xlat
fimul
pop
lods
jle
test
retf
xor
mov
call
pop
fsubr
es
xchg
mov
dec
cmp
clc
lods
mov
adc
test
jmp
jmp
jmp
xchg
fist
inc
jbe
or
xchg
fdivrp
mov
sub
pop
es
xchg
outs
push
stc
mov
push
or
push
and
push
sub
pop
push
cmp
xchg
jmp
pop
in
mov
int
jae
mov
imul
nop
mov
xor
test
dec
int
ror
rol
adc
scas
adc
jmp
xchg
loope
jns
jne
inc
jae
pop
cmps
lods
addr16
xchg
mov
inc
ins
icebp
jno
test
outs
stc
pop
add
or
and
sbb
dec
add
das
dec
xor
mov
es
sbb
frstor
fs
xchg
lea
scas
mov
and
sbb
ja
rcl
iret
std
and
xor
jne
lods
xor
or
shr
push
adc
mov
test
nop
outs
shr
jo
sti
sahf
inc
add
cld
or
jb
dec
cwde
mov
jmp
or
mov
aas
add
add
and
xor
push
pop
inc
xor
(bad)
fcomi
test
push
or
in
or
loopne
or
dec
fnstcw
(bad)
out
test
adc
arpl
and
sar
add
lahf
mov
sbb
inc
pop
xor
nop
push
mov
cmp
push
cdq
cmc
mov
cs
jp
mov
push
out
jb
test
not
jno
bound
popf
jl
fwait
jb
aad
cmp
rcr
dec
lods
push
mov
pop
fld
add
aaa
aad
scas
mov
(bad)
jo
imul
loope
shl
pop
arpl
inc
push
test
inc
fild
jne
pop
fcomi
or
inc
mov
popa
and
or
stos
scas
loope
sub
cmc
in
stos
add
(bad)
fsub
xor
add
out
movs
jle
mov
imul
mov
adc
pusha
shl
dec
in
mov
rcl
dec
neg
jg
push
ins
and
jne
addr16
ficomp
or
dec
mov
mov
ins
xchg
loope
sub
jl
das
in
leave
pop
sbb
push
mov
or
aam
mov
mov
fcomp
mov
add
fdivr
xchg
fbld
mov
mov
test
outs
xchg
or
mov
cdq
arpl
icebp
and
inc
add
test
fcomp
sub
iret
out
imul
lahf
cmps
jg
dec
mov
or
ins
ss
push
inc
mov
push
pusha
fistp
or
push
movs
pop
ret
and
and
fldcw
fsub
arpl
jns
jp
push
jmp
cmc
push
enter
mov
js
test
lods
and
test
loope
pop
pusha
xor
push
cmp
test
in
add
xchg
cmp
mov
jge
(bad)
or
test
iret
jmp
sub
push
jp
test
ss
mov
lds
mov
add
movs
fisub
mov
(bad)
(bad)
mov
cmp
stos
(bad)
das
jge
cmp
pop
inc
add
out
mov
xor
mov
imul
pop
out
hlt
repz
ss
loopne
not
sub
pop
mov
sbb
xchg
mov
jl
icebp
push
mov
in
dec
mov
sub
lea
ins
push
and
push
rol
dec
push
mov
jmp
cdq
xor
mov
(bad)
repnz
mov
xor
sahf
cmp
adc
sar
mov
or
retf
and
cmc
(bad)
jge
push
and
ds
add
aas
jno
js
(bad)
in
sub
mov
pop
in
std
ret
jno
adc
cmp
ss
jns
mov
mov
mov
dec
stos
sbb
jmp
xor
sbb
and
loopne
xor
repz
jbe
out
not
sbb
(bad)
dec
test
sub
call
mov
jo
push
sub
cmp
or
adc
inc
mov
adc
mov
adc
or
cmp
push
mov
cmp
out
sbb
inc
adc
xchg
retf
aad
sub
adc
shr
jecxz
inc
inc
inc
aaa
mov
jbe
add
push
(bad)
mov
adc
popa
ds
adc
cmps
sub
ins
xor
sub
sahf
test
test
jns
mov
ja
sub
mov
in
push
jb
push
repz
call
stos
call
retf
aas
cmp
fcmovb
jbe
pusha
in
cmc
(bad)
mov
(bad)
or
jp
ror
add
xchg
aas
jp
outs
jo
and
lock
or
(bad)
sbb
test
push
lods
dec
test
clc
daa
daa
test
fidivr
push
test
fdivr
imul
xor
sahf
cmp
push
div
in
rol
xchg
push
mov
pop
test
mov
hlt
push
adc
jg
add
inc
(bad)
mov
mov
mov
sti
cld
mov
push
push
inc
inc
or
ficom
cmp
mov
dec
pop
adc
ficom
ficom
psrlq
jmp
test
mov
fst
aad
popa
dec
pop
dec
xor
lds
lods
sub
push
shl
and
push
mov
ins
xor
add
fst
inc
ja
dec
xor
ret
arpl
cmps
mov
ja
sahf
push
js
push
inc
rol
sbb
sbb
lods
xchg
retf
pop
push
out
mov
shl
xor
cld
fcomp
cs
popa
and
xor
cmp
pushf
jo
mov
mov
cmp
popf
jbe
push
(bad)
sub
cdq
lock
(bad)
mov
sub
lock
push
int3
push
or
lahf
outs
push
ret
sbb
mov
pushf
(bad)
cmps
sbb
rcr
adc
sbb
cmp
fist
and
pop
imul
nop
cli
int
mov
mov
popa
add
sbb
dec
jnp
aaa
push
out
pop
mov
data16
mov
daa
add
push
mov
jbe
rep
adc
mov
dec
enter
retf
mov
push
call
xchg
push
mov
hlt
jle
pusha
lock
jmp
jmp
xor
iret
repnz
cmps
cmp
pcmpeqb
add
mov
jne
adc
jp
mov
popf
xchg
mov
mov
add
out
mov
and
loopne
or
jns
inc
mov
arpl
mov
adc
fild
mov
gs
cmc
xchg
push
mov
mov
jo
or
jmp
dec
jb
in
mov
add
push
inc
cmp
xchg
ret
mov
je
stos
retf
fucom
mov
out
ficom
ror
rcr
enter
mov
push
and
sbb
cmp
and
and
dec
or
jge
inc
dec
icebp
or
xor
popa
pop
sbb
or
mov
mov
mov
out
mov
cmp
addr16
fidiv
inc
jbe
mov
lods
mov
pop
inc
push
sbb
inc
mov
mul
es
imul
scas
pop
sub
jle
mov
(bad)
adc
pushf
(bad)
or
stos
dec
sti
jae
or
mov
jns
dec
adc
add
je
sbb
fnstcw
or
jge
push
mov
mov
ffree
mov
lahf
call
pop
jp
popf
ins
xor
rcl
mov
sub
xchg
pop
(bad)
arpl
mov
and
aaa
fistp
ja
sahf
out
and
mov
pop
gs
jo
sbb
rcr
jmp
retf
mov
inc
sbb
shl
push
jb
iret
inc
add
adc
ds
add
fcom
fucomip
(bad)
xlat
sti
out
movs
mov
push
mov
pop
sahf
xchg
hlt
xor
rcr
inc
jg
repz
sar
inc
fnsave
repz
or
pushf
inc
xor
stos
adc
scas
dec
mov
cld
or
push
lock
ja
push
sti
adc
es
fist
inc
shl
fimul
sbb
std
ins
je
pop
sub
fstp
or
gs
and
outs
push
test
int
int3
adc
jae
stos
and
mov
mov
push
mov
call
inc
in
xchg
mov
and
pop
adc
shl
mov
(bad)
(bad)
cld
xor
and
cli
adc
mov
mov
in
sub
mov
in
js
push
jmp
inc
in
mov
out
stc
nop
retf
into
fadd
cmp
mov
call
sbb
add
or
fdiv
mov
cmp
mov
jbe
or
xchg
lds
fwait
add
xor
push
sti
xchg
sbb
sbb
mov
iret
xchg
inc
loopne
ja
fist
mov
pop
adc
popf
loop
fucomp
cmp
jno
rcl
fst
cli
xchg
rcl
jmp
out
or
enter
lahf
es
push
bound
adc
mov
ins
(bad)
ins
test
lods
push
sbb
clc
mov
add
clc
lahf
or
imul
inc
cmc
lock
jge
call
call
out
ds
xchg
fdivr
pop
and
jae
(bad)
out
inc
inc
pop
cmps
retf
xchg
dec
into
dec
mov
mov
dec
pop
test
and
pusha
ja
add
int3
mov
ins
pop
mov
fisubr
sub
and
add
fimul
inc
fidivr
sub
pop
js
arpl
or
movs
movs
in
clc
mov
fs
(bad)
ret
xlat
scas
aam
in
sub
or
cwde
sbb
pop
cli
loop
cmp
sbb
loop
and
mov
bswap
inc
fsubrp
dec
mov
call
adc
push
xchg
mov
enter
jmp
jae
xchg
cmp
jnp
test
ja
mov
out
adc
clc
(bad)
xchg
mov
adc
ja
add
adc
in
cmc
int
add
sar
push
push
ret
mov
jp
outs
jo
out
nop
dec
lds
push
aam
cmp
imul
push
gs
xchg
push
out
sbb
adc
pop
fld
cli
sbb
retf
in
jo
mov
xchg
fiadd
ficomp
mov
clc
xchg
std
ja
aaa
js
loopne
mov
and
inc
outs
mov
xchg
mov
pop
aas
adc
dec
xor
imul
sbb
push
xor
sub
pop
push
fwait
xchg
int
pop
aas
cli
adc
(bad)
rcr
std
ret
or
inc
mov
mov
popf
xlat
mov
xor
jecxz
cwde
sti
jnp
add
out
inc
cld
cmp
push
push
jl
xchg
jbe
inc
jns
xor
sbb
shr
xchg
cwde
mov
mov
(bad)
xchg
pushf
(bad)
sub
aam
mov
pushf
mov
add
push
mov
mov
in
sahf
mov
sbb
dec
lds
push
or
jne
dec
es
iret
aas
mov
push
mov
xchg
adc
cmp
cld
jmp
std
dec
push
out
mov
sbb
enter
mov
pop
arpl
or
pushf
inc
out
stos
lds
pushf
clc
or
cwde
sar
fidivr
xchg
cmp
jo
jb
adc
cmp
repz
lds
cs
rcr
mov
push
loope
fisubr
out
aaa
sub
mov
jb
fs
movs
cwde
or
pop
or
jne
jecxz
cmp
push
das
sub
push
pop
sbb
scas
pop
xchg
or
and
fmul
and
sbb
imul
cmc
loopne
outs
mov
add
push
test
dec
int
push
cld
mov
mov
push
cmp
addr16
stc
mov
gs
push
xchg
mov
push
daa
sbb
ret
test
arpl
(bad)
mov
ret
rol
jmp
mov
sahf
rcr
mov
or
and
iret
mov
lock
out
mov
enter
stos
dec
xor
cmp
arpl
aad
mov
lahf
and
mov
push
cmp
mov
movs
adc
inc
arpl
jge
sub
ins
je
movs
aas
mov
pop
imul
lods
add
clc
fst
or
dec
pop
xchg
test
sbb
cmp
mov
mov
ja
push
lock
scas
adc
mov
mov
add
sub
arpl
sub
push
fs
sub
das
repnz
pop
fdivr
mov
std
jb
lahf
addr16
push
cmp
or
push
dec
ins
retf
mov
es
pop
mov
xchg
sbb
jl
je
sub
loope
ss
mov
ret
cmp
inc
adc
pop
dec
push
or
or
out
lea
(bad)
mov
clc
push
inc
mov
mov
push
xchg
pop
retf
adc
add
jne
sbb
out
in
xor
jp
sbb
int
and
jle
xchg
icebp
and
bound
and
cmc
dec
sbb
nop
jmp
push
retf
cmc
pop
lds
in
loop
mov
adc
pop
jg
lods
push
mov
js
jp
jge
(bad)
sub
popa
mov
test
cmp
cmp
and
xchg
jle
es
xchg
fdivr
lds
add
mov
arpl
daa
iret
and
fistp
sub
enter
push
jecxz
loope
out
test
outs
jg
xor
dec
loope
sbb
jmp
lock
inc
into
ret
popa
xchg
xchg
test
cmp
jge
imul
mov
neg
repnz
jmp
jo
mov
xchg
lods
adc
and
xlat
push
aaa
mov
adc
sbb
test
rol
sub
in
push
shl
mov
pop
cmp
daa
cdq
jle
and
jmp
cmp
fld
add
ret
fmul
aad
ds
mov
mov
das
mov
pop
mul
into
mov
and
fidiv
pop
and
jns
aas
leave
mov
aas
sub
fs
call
ins
loopne
sub
add
or
shr
out
mov
jp
shl
jp
ja
or
hlt
mov
(bad)
push
pop
cwde
sti
push
xchg
lds
scas
mov
xor
and
aas
add
call
cmp
fbstp
call
cwde
cmp
xor
outs
retf
ds
sub
lods
lock
push
ss
and
test
retf
jno
mov
ss
and
mov
loop
scas
cmp
add
(bad)
push
jo
push
dec
sbb
ja
retf
add
xor
fmul
test
cli
and
ret
jne
add
sahf
aad
pop
jp
dec
mov
les
mov
pop
jnp
shl
clc
xor
and
add
enter
clc
(bad)
rcl
inc
imul
jne
(bad)
jbe
loopne
aam
in
cmp
add
mov
dec
sti
and
jne
inc
jmp
lds
mov
adc
clc
mov
push
ins
jge
xchg
arpl
xor
cmp
fcmovbe
fist
les
cli
stos
mov
inc
jnp
cmp
push
xchg
jne
sbb
pop
push
jge
mov
outs
fadd
xchg
jns
cmp
jle
jecxz
aam
jp
or
jge
enter
or
es
outs
ds
mov
push
(bad)
outs
out
xchg
repnz
cmp
adc
sub
fdiv
ror
mov
inc
ret
xor
jle
in
(bad)
stc
popa
xchg
adc
cmp
es
scas
iret
push
inc
xchg
call
adc
fidiv
cmp
int
fs
sbb
outs
sbb
push
sbb
test
icebp
jnp
icebp
push
call
or
add
or
push
iret
push
sar
fstp
push
mov
xchg
cmp
mov
repz
inc
div
(bad)
in
rcl
sahf
mov
mov
push
es
sbb
icebp
aas
mov
or
rcr
mov
push
pop
rcl
adc
js
movs
(bad)
fwait
xchg
sti
pop
or
adc
xor
inc
jns
test
imul
pop
das
jecxz
jge
(bad)
fimul
mov
ja
sbb
xchg
cmc
adc
or
cdq
fsubr
dec
jg
cmp
(bad)
out
cs
inc
or
loope
pop
add
inc
xchg
pop
aam
add
adc
dec
shr
gs
cmp
sub
pusha
iret
jg
xchg
int
add
or
push
aam
dec
jb
dec
dec
jne
stos
jle
int
ficomp
fcomp
int
mov
adc
jp
mov
lock
outs
xchg
out
repz
aam
adc
sbb
fucomp
sbb
stc
inc
int
in
mov
mov
out
and
js
ret
and
and
jns
pop
adc
ins
movs
push
sub
cmps
imul
dec
xchg
(bad)
dec
xchg
sbb
push
lods
jmp
and
mov
inc
pop
sub
ins
xchg
and
fstp
jl
scas
dec
mov
or
inc
dec
mov
dec
xchg
in
cmp
inc
rcr
leave
add
sub
cmps
add
add
ror
in
push
mov
pop
sub
js
mov
lahf
ja
adc
mov
imul
mov
sahf
mov
push
dec
mov
and
loop
cmp
push
jl
pusha
ds
icebp
xor
aam
ds
lds
sbb
push
rol
lock
outs
call
and
repz
push
aam
add
call
test
shr
add
adc
cmp
or
xor
nop
sub
jo
fld
pop
test
jmp
cdq
addr16
mul
jle
arpl
or
add
das
cmps
inc
sti
xor
dec
scas
into
stos
outs
ret
inc
dec
inc
adc
out
arpl
or
rol
mov
dec
mov
mov
or
icebp
(bad)
mov
and
pop
sahf
lahf
mov
mov
outs
and
add
and
dec
jmp
inc
push
sub
fcom
sbb
mov
jmp
(bad)
test
mov
jmp
jnp
mov
sar
mov
xchg
fs
dec
cmp
les
ja
jns
add
push
sub
rol
dec
and
ins
iret
or
xchg
push
pop
fistp
and
(bad)
jmp
retf
fwait
cmps
jl
mov
cmps
jns
sub
dec
and
push
xchg
xchg
xor
jb
arpl
cs
mov
mov
mov
jecxz
fimul
sub
xor
cwde
jge
xor
pop
and
sub
push
hlt
ja
lods
mov
inc
(bad)
jl
cmp
and
xlat
mov
mov
jge
mov
scas
push
sbb
mov
cwde
inc
xor
mov
pop
and
fisttp
sub
scas
cmp
nop
mov
test
leave
cmp
clc
das
jmp
iret
cmc
shr
mov
lea
xchg
lods
aaa
leave
mov
and
adc
movs
fidiv
imul
shr
std
hlt
iret
mov
arpl
enter
dec
mov
mov
dec
dec
mov
pop
pop
and
xchg
dec
(bad)
jecxz
outs
lods
inc
retf
pop
repz
push
xchg
sub
(bad)
(bad)
mov
movs
sbb
jae
mov
dec
push
push
adc
into
(bad)
jb
pop
pop
pop
les
add
mov
mov
bound
xchg
int3
jmp
test
add
xchg
cmp
mov
sahf
popa
xchg
jmp
pop
loop
int
adc
and
xchg
push
nop
mov
pop
inc
or
jae
daa
ret
sbb
jp
push
add
mov
jno
iret
mov
fwait
nop
pushf
mov
(bad)
mov
sbb
test
loop
leave
ror
sbb
out
daa
rsm
sbb
aaa
iret
ror
mov
sbb
and
inc
fist
cs
in
in
xchg
div
pop
mov
sub
aaa
retf
mov
test
inc
(bad)
retf
cmp
sub
out
xor
sbb
fcom
out
(bad)
inc
pop
nop
cmp
dec
pop
pusha
ret
(bad)
add
mov
dec
inc
xchg
sub
jmp
popa
pop
shr
lds
adc
test
imul
jno
loop
ja
mov
fwait
or
call
xor
imul
or
jg
arpl
or
push
dec
mov
loop
int3
mov
add
stos
sbb
jb
fisub
or
ror
sbb
cdq
arpl
jle
inc
add
pop
fisttp
mov
hlt
int3
out
stos
das
fild
mov
int3
ins
jnp
mov
inc
loopne
rcl
repz
and
mov
adc
jge
ins
dec
push
pop
mov
ins
lods
mov
jb
mov
(bad)
xor
cmp
adc
xor
mov
jno
cli
mov
inc
ds
iret
inc
jecxz
nop
test
subps
sub
fwait
cmps
push
lods
cmps
inc
fld
data16
dec
mov
mov
push
iret
call
jecxz
lds
xor
sbb
inc
xor
mov
(bad)
or
sbb
adc
mov
idiv
inc
mov
lds
fcomp
clc
xor
pop
shl
xchg
sbb
cwde
imul
iret
xchg
pop
int3
add
ret
or
jne
mov
out
or
push
fmul
test
out
outs
loopne
xchg
fstp
sti
ret
mov
jmp
jmp
aam
xor
jge
dec
movs
and
test
xor
out
imul
mov
scas
cli
xchg
and
hlt
fdivr
pop
mov
ins
sub
add
ret
sub
cwde
pusha
out
addr16
cmp
aaa
mov
jg
sbb
cmp
ret
call
cwde
add
call
jnp
sbb
mov
mov
xor
mov
push
push
inc
push
xchg
inc
xor
xor
adc
mov
(bad)
pop
or
sbb
sti
(bad)
inc
rsm
mov
scas
jmp
fst
gs
rcr
cwde
mov
aad
jmp
sidtd
pop
mov
popa
jmp
xor
mov
adc
cmp
inc
add
lock
mov
imul
dec
inc
fs
jae
clc
cs
xchg
into
out
cmc
mul
mov
push
out
hlt
pushf
clc
push
ss
call
sub
mov
push
inc
jp
pop
pop
mov
(bad)
ficomp
mov
je
loopne
test
push
mov
pushf
(bad)
out
sbb
call
xchg
stos
std
and
cmp
push
out
stos
dec
and
jns
xor
in
test
sti
test
xor
mov
shl
les
fs
dec
ins
fcomp
out
xchg
adc
xor
mov
std
cld
icebp
mov
push
xor
xchg
js
rol
xchg
xchg
jb
rol
imul
ret
(bad)
(bad)
in
arpl
shl
inc
xchg
shr
inc
ds
mov
pop
cmps
sbb
cmp
sub
jmp
jnp
pushf
jg
xlat
in
in
sbb
dec
shr
mov
test
inc
push
cdq
les
(bad)
cmp
pop
aas
imul
mov
push
lds
add
gs
push
pop
push
test
add
xchg
mov
pusha
or
or
rol
or
outs
push
fadd
outs
dec
loope
cld
aam
mov
aaa
out
call
add
adc
icebp
ins
push
movs
jmp
jle
mov
dec
push
mov
adc
lods
cmp
or
imul
jno
in
pop
movs
jmp
xor
and
xchg
retf
clc
in
(bad)
clc
pop
adc
fnstcw
push
add
loopne
sub
in
dec
cmp
pusha
dec
fs
imul
call
iret
add
das
pop
call
out
int3
adc
sub
(bad)
or
test
adc
ins
jl
or
mov
add
mov
add
test
cli
sbb
pusha
and
xchg
xchg
std
test
cmp
fwait
push
ret
pop
add
inc
cmp
lods
sbb
call
pop
retf
xchg
fs
cmp
push
jmp
mov
int3
sub
sti
and
out
movs
lahf
xchg
mov
sti
aad
dec
and
adc
and
dec
mov
hlt
mov
ins
pop
jne
fsubr
shl
inc
cdq
icebp
call
fmul
mov
shr
mov
(bad)
loop
sub
clc
xchg
call
jnp
gs
mov
(bad)
(bad)
mov
push
fnstsw
sub
inc
inc
cs
inc
push
in
jnp
or
or
dec
xchg
(bad)
popa
scas
push
xchg
and
test
jge
movs
mov
and
imul
jae
and
(bad)
setl
ror
xor
adc
test
jnp
sar
dec
mov
std
hlt
test
dec
xchg
sub
es
bound
int
sbb
scas
outs
sti
pusha
push
push
or
pop
test
imul
imul
jno
sar
or
nop
sbb
jo
imul
lods
aad
test
outs
mov
sbb
mov
push
and
dec
mov
xchg
scas
push
or
inc
sbb
adc
mov
lods
push
mov
add
dec
dec
cdq
retf
lahf
lds
mov
fisubr
movs
lds
and
dec
xor
pushf
sub
arpl
pop
jp
cs
mov
call
loop
pushf
pop
retf
xchg
test
ins
and
sbb
ds
(bad)
fwait
push
jp
std
pop
loopne
push
(bad)
mov
loop
xor
add
pop
je
and
pop
or
into
(bad)
scas
push
test
jns
mov
xor
xchg
xchg
aad
popf
add
test
xor
pop
(bad)
int3
in
pop
ret
mov
je
sub
pop
daa
bound
shl
jle
pop
add
(bad)
arpl
gs
outs
(bad)
repnz
hlt
jmp
data16
or
ds
xor
(bad)
mov
call
scas
cdq
(bad)
or
mov
stos
xor
xchg
sub
pop
cmp
mov
pop
sub
movs
xchg
cdq
cmp
repz
mov
dec
inc
dec
test
pop
rol
outs
or
xchg
lods
mov
icebp
into
or
cdq
and
loop
in
fldenv
pushf
cmp
cmp
lods
cwde
shl
in
mov
add
mov
xor
and
ins
int3
and
pop
mov
cmps
aaa
sub
mov
jge
xchg
mov
push
ficomp
adc
enter
jb
cmp
and
call
out
cmps
xor
call
or
shl
mov
sbb
aaa
cmp
or
add
push
pop
push
sbb
jmp
ret
xchg
push
pop
cdq
out
clc
lds
cmc
mov
sbb
out
jg
mov
jo
inc
xor
shr
scas
push
in
test
call
jecxz
out
and
stos
rcr
mov
inc
std
mov
popa
jg
sahf
(bad)
repnz
or
push
push
(bad)
stc
inc
test
shr
mov
or
adc
push
push
(bad)
lahf
lahf
jmp
jl
xchg
arpl
mov
mov
test
mov
jb
call
push
les
xor
cld
xor
outs
jno
mov
push
cmps
jg
pop
cs
neg
jo
inc
sub
xchg
mov
and
not
mov
repnz
push
xor
push
cmp
pop
mov
add
out
(bad)
outs
add
ins
sub
or
mov
hlt
imul
mov
cmp
fwait
gs
dec
stos
cvtdq2ps
int
js
adc
ret
ins
enter
pop
lds
clc
ret
dec
and
xor
cmps
je
sahf
and
dec
push
cmp
jle
out
jnp
and
dec
or
sbb
stos
iret
test
test
mov
jb
cmc
xchg
iret
mov
ds
dec
jmp
fwait
xchg
or
aaa
mov
xchg
sub
(bad)
ds
inc
(bad)
fadd
and
(bad)
in
(bad)
jmp
adc
lds
add
xor
or
arpl
stos
jae
pop
lahf
in
rcr
pop
inc
mov
into
mov
mov
or
out
bound
shl
xchg
sub
movs
mov
sahf
xchg
int3
push
rol
in
stc
xchg
dec
stc
sub
cld
scas
in
adc
in
push
or
mov
leave
div
mov
imul
fdiv
into
in
push
enter
rol
leave
or
mov
rol
sub
fwait
mov
jp
sub
stos
daa
icebp
or
mov
dec
(bad)
xchg
repnz
inc
xchg
pop
test
dec
mov
daa
pop
sar
xor
enter
popf
xchg
cmp
pop
dec
ret
loope
loope
cmp
mov
mov
push
inc
mov
fcom
mov
cli
or
in
jp
or
xchg
adc
mov
push
push
jno
mov
push
aas
adc
adc
pusha
or
in
sub
addr16
mov
jb
int
ds
stos
(bad)
fnsave
add
xchg
pop
cli
cmp
out
and
push
lods
xlat
cwde
call
xor
and
jno
and
(bad)
imul
dec
inc
mov
add
cmc
mov
mov
add
jmp
mov
pop
xchg
test
in
mov
lods
mov
adc
aam
and
inc
jmp
and
out
mov
add
vpminsw
aas
out
ja
inc
aad
add
out
neg
xchg
out
pop
mov
jecxz
and
loopne
push
add
aam
xchg
pop
add
dec
or
push
mov
ins
xchg
jecxz
bound
stos
aad
ret
aam
pop
retf
xor
out
retf
fstp
push
adc
rcl
call
iret
jo
cmp
mov
pop
les
shl
ja
add
mov
fwait
loope
or
sets
into
xor
sbb
loope
ret
or
sbb
int
(bad)
aam
neg
jmp
xchg
cli
fdiv
fwait
sti
loope
jle
pusha
test
cmc
xor
call
aaa
fild
aaa
sub
(bad)
(bad)
imul
std
cld
cmps
mov
movs
push
shl
pop
mov
in
cmp
(bad)
xlat
pop
pop
sub
and
fisub
jmp
jle
ja
pop
pop
test
test
inc
cmp
scas
and
and
test
pop
pop
pop
pop
push
jmp
xor
cdq
es
jg
jg
cmp
mov
pushf
mov
sbb
mov
pushf
add
push
ret
xchg
dec
sub
cmps
mov
dec
cmp
sti
mov
inc
cmp
sub
lahf
mov
cmps
push
mov
sub
fist
pop
mov
push
aad
cmp
test
mov
mov
repnz
sub
(bad)
jnp
inc
ror
imul
inc
sbb
outs
add
pop
mov
xor
movs
mov
movs
sub
adc
sbb
(bad)
jno
inc
test
mov
and
or
rol
pop
leave
sahf
inc
mov
dec
xlat
in
rol
test
adc
add
ret
or
push
fsub
cmp
or
add
bound
out
mov
enter
mov
dec
fist
jae
adc
ret
cmc
shl
push
adc
lods
sub
xchg
cmps
sbb
lock
push
push
jle
or
inc
sbb
push
pop
inc
ss
inc
xchg
push
loope
rol
adc
out
stc
push
movs
sbb
dec
inc
push
mov
sub
or
shr
ja
jmp
xchg
repz
jno
and
test
fwait
or
pop
jg
push
jge
adc
pop
mov
sbb
stos
push
jecxz
scas
in
push
imul
or
retf
inc
test
xor
sbb
lods
fld
pop
rol
lock
aam
aaa
arpl
mov
cmp
push
je
scas
frstor
cmp
inc
push
popa
lock
jle
xchg
rcl
pop
and
movs
jmp
aas
dec
cld
stos
xchg
stos
imul
dec
jbe
repnz
icebp
xchg
jne
stc
pop
ins
add
out
push
mov
pushf
adc
retf
and
xchg
cld
cs
push
lock
dec
repnz
clc
lods
outs
iret
xor
dec
sub
adc
(bad)
retf
and
push
lods
jo
cmps
aam
xor
cmp
cmp
ss
inc
sti
jne
(bad)
lods
mov
sbb
and
mov
js
fnstenv
xor
retf
lds
dec
pop
pop
test
xchg
sbb
test
out
jne
mov
pop
adc
sub
cld
movs
mov
or
shl
cmp
cld
jl
imul
push
das
adc
jp
add
ja
and
aad
test
sbb
ins
cmc
(bad)
push
push
push
inc
lock
in
mov
mov
push
(bad)
into
pop
adc
push
push
xor
cmc
loope
sbb
outs
call
pushf
clc
popa
or
sbb
cli
xchg
mov
cmp
in
(bad)
mov
pop
in
ret
popf
jmp
mov
popf
mov
xlat
push
push
mov
push
mov
or
mov
sbb
add
mov
push
daa
stc
sti
adc
clc
add
repz
add
rcl
push
out
or
gs
mov
or
sub
xchg
adc
ss
int3
int3
stos
push
aaa
retf
add
aaa
xor
pushf
jmp
dec
or
sub
xor
clc
call
std
push
clc
jns
lock
and
or
das
push
xor
mov
sub
std
mov
aam
sub
xchg
out
mov
loope
jns
lahf
leave
nop
fs
or
add
jg
mov
shr
mov
hlt
xchg
cmp
cld
push
imul
dec
and
sub
les
jecxz
repnz
xorps
mov
not
mov
mov
(bad)
pop
mov
lods
adc
shl
add
sti
inc
out
das
push
js
test
jb
mov
sbb
dec
xor
shl
cld
call
dec
push
push
rcl
sub
(bad)
retf
mov
mov
loop
retf
bsf
push
in
test
lds
push
or
bound
xchg
mov
dec
xchg
stc
xchg
movs
mov
cmp
or
(bad)
out
push
scas
dec
xchg
pushf
sbb
hlt
adc
test
mov
mov
mov
fwait
or
cmp
jb
pop
stos
aad
js
jb
mov
ins
adc
adc
(bad)
ins
pop
icebp
xlat
pop
jl
push
dec
(bad)
js
cmps
mov
shl
mov
lea
mov
(bad)
mov
inc
repz
or
aam
popf
mov
mov
pop
int
push
scas
mul
pop
retf
xor
mov
mov
js
mov
and
cmps
cmp
xchg
into
inc
and
jg
sub
arpl
mov
xor
(bad)
mov
(bad)
ret
xor
dec
inc
mov
das
jb
jno
sub
fs
fidivr
jg
jmp
xor
aas
sub
pushf
lea
mov
pop
icebp
xor
xchg
data16
add
inc
bound
xchg
cs
mov
ret
arpl
inc
xor
dec
mov
sub
jecxz
fstp
(bad)
or
pop
adc
rol
mov
jae
mov
ror
adc
repnz
or
loopne
enter
push
hlt
xor
das
cmc
and
fwait
xor
push
loop
add
push
movs
rcr
in
jp
push
fwait
jnp
push
xor
dec
das
jl
push
les
mov
icebp
(bad)
(bad)
std
iret
cmc
(bad)
repnz
push
out
pop
neg
mov
dec
xchg
dec
mov
dec
jmp
int
push
scas
aas
cmp
sbb
test
call
dec
outs
mov
or
bnd
jns
mov
and
sbb
loope
dec
jno
or
or
rcr
cld
pop
push
(bad)
loop
nop
lods
repnz
jl
mov
or
xchg
push
les
call
push
test
pop
xor
add
push
sub
mov
jne
push
dec
mov
or
ja
(bad)
aad
mov
jno
mov
adc
xchg
mov
inc
xor
jns
mov
pop
pop
mov
push
push
jmp
out
stos
push
mov
sub
push
inc
rcl
xlat
xor
jns
push
push
cmp
mov
lahf
aam
inc
pushf
ins
push
push
aad
adc
adc
jmp
ficom
push
(bad)
xchg
out
shr
scas
cli
(bad)
push
dec
mov
xchg
xor
xchg
mov
scas
shl
fdiv
adc
ins
aad
jo
cmps
mov
imul
xchg
mov
pop
das
and
fwait
mov
xchg
lahf
dec
cs
outs
mov
int
xor
xchg
icebp
scas
sbb
and
push
sbb
test
ds
sbb
scas
inc
add
test
outs
ret
fisub
dec
jne
mov
leave
mov
shl
aad
pop
imul
add
mov
cmp
inc
retf
mov
cli
in
mov
fisub
mov
enter
ds
popa
rcr
cmp
dec
icebp
mov
cwde
push
lock
fwait
inc
jle
movs
lods
xlat
pushf
ins
sbb
lods
push
rcr
cmps
enter
outs
xchg
and
aaa
sub
ins
(bad)
into
jg
adc
outs
or
ret
sbb
push
mov
out
cld
mov
sbb
mov
mov
cdq
scas
jns
das
sbb
add
les
fdiv
leave
dec
mov
or
cs
scas
adc
xchg
aas
adc
(bad)
adc
and
clc
mov
cmp
xor
int3
aas
xchg
adc
aaa
jmp
mov
adc
test
push
sub
lock
xchg
stc
rcr
xchg
das
ret
shl
fwait
inc
lds
jl
out
mov
jno
adc
jb
loop
dec
lock
mov
shr
mov
xchg
xchg
xor
xchg
call
and
or
repnz
or
mov
and
cmps
movs
push
push
mov
jmp
jmp
add
ret
faddp
test
xchg
jnp
pop
mov
hlt
adc
push
loope
lods
xlat
jp
jmp
cmp
adc
movs
add
and
(bad)
mov
out
jbe
inc
and
test
jbe
xchg
out
test
adc
cmp
jmp
cmp
gs
jne
cli
out
adc
xlat
popf
mov
mov
fcomp
(bad)
mov
pop
xor
or
cdq
outs
cmp
(bad)
fbld
push
pop
add
cmps
mov
xor
inc
iret
pop
xchg
(bad)
in
jl
add
loopne
shr
sbb
sub
push
dec
jnp
add
pop
data16
pop
inc
xor
js
xchg
push
or
in
les
mov
xchg
iret
sub
adc
pusha
in
arpl
shr
ins
pop
out
jo
add
sub
stos
add
hlt
inc
in
mov
addr16
push
jle
repnz
adc
jo
mov
in
jle
adc
push
push
inc
or
add
inc
sub
mov
mov
cld
mov
mov
scas
pop
cdq
mov
xchg
jmp
push
mov
mov
sbb
gs
jle
int
icebp
ret
pusha
and
xchg
push
dec
pop
mov
inc
pop
mov
lds
cmp
pop
std
test
jecxz
add
imul
dec
cmps
test
mov
in
mov
iret
in
js
test
push
push
mov
lea
mov
dec
mov
mov
cwde
fmulp
clc
sub
add
outs
jb
lods
xor
adc
gs
cmp
inc
jb
sub
inc
cdq
cmp
and
repnz
dec
jmp
add
adc
cdq
loopne
pusha
mov
mov
adc
adc
xchg
stos
and
xchg
and
aad
cmp
inc
loop
jno
pop
inc
jne
mov
mov
sbb
scas
repz
iret
pop
push
push
mov
jae
sub
jb
mov
cdq
push
ds
adc
xchg
lods
cmp
or
or
lods
mov
or
lock
dec
cmp
popa
mov
cli
cld
mov
sub
stos
or
xchg
aad
(bad)
and
jl
push
sub
jmp
inc
shl
mov
stos
fadd
icebp
retf
addr16
mov
std
inc
aaa
movs
enter
retf
inc
into
jmp
retf
retf
sub
test
dec
dec
out
xchg
popf
stos
push
push
sti
in
and
hlt
push
ins
dec
sub
inc
(bad)
mov
mov
jg
das
iret
mov
lods
loope
out
call
imul
inc
and
fs
movs
jo
push
retf
into
jp
or
xor
and
outs
out
(bad)
jno
sbb
cli
lea
les
popa
out
push
adc
movs
aaa
cmp
cmp
(bad)
test
jl
pushf
in
sahf
shr
pop
push
inc
mov
popf
ins
mov
movs
dec
addr16
and
enter
cmp
outs
nop
ret
nop
push
dec
dec
xor
cwde
(bad)
lock
pop
mov
xchg
jno
dec
mul
inc
fs
dec
cmc
retf
test
inc
outs
push
adc
mov
ds
pushf
movs
inc
leave
enter
in
loop
add
not
push
aaa
sbb
sbb
pop
mov
movs
into
cld
and
inc
mov
repnz
jnp
aas
mov
(bad)
sar
xchg
adc
shr
push
call
mov
lahf
and
pop
in
pop
(bad)
and
repnz
scas
push
mov
xor
jns
mov
xchg
imul
push
or
std
push
stos
sub
idiv
xchg
sbb
ds
inc
mov
pop
pop
das
out
and
sahf
cmp
mov
adc
lock
inc
cwde
ja
leave
inc
inc
je
js
mov
popf
addr16
push
ret
shl
xchg
adc
push
addr16
mov
fsub
ret
(bad)
popa
or
ins
mov
je
mov
movs
vprotw
retf
push
iret
fidivr
mov
ret
and
xor
pop
sub
rol
and
mov
fistp
pop
or
push
imul
fimul
retf
mov
sbb
out
call
stos
or
pop
repnz
sbb
pop
push
cmp
xor
icebp
push
push
mov
rcl
cmp
lds
pop
in
test
add
adc
stc
and
push
aaa
pop
xor
ret
sbb
pop
mov
pop
mov
and
and
addr16
mov
jne
sti
cmc
scas
mov
movs
jmp
sub
stc
cdq
mov
push
loop
sub
and
sub
and
and
cmp
mov
or
mov
stos
dec
mov
fwait
sub
les
ret
pop
pop
jge
or
cs
sbb
aas
and
and
pusha
cwde
ins
out
and
fstp
test
int
pop
jmp
dec
mov
or
mov
xlat
adc
icebp
add
jb
mov
xor
(bad)
pushf
inc
js
int
lods
dec
jmp
cmc
in
xlat
add
or
xchg
les
stc
mov
add
stc
jp
pop
mov
adc
xchg
stos
and
ins
fsub
sahf
push
pshufw
jne
cli
xchg
sub
sbb
mov
js
xor
daa
mov
arpl
in
es
shl
mov
dec
(bad)
sbb
xor
mov
sub
xchg
je
sti
cmps
ins
sub
repz
cmp
imul
xchg
cmp
xchg
out
pushf
add
out
js
jne
sbb
cld
test
or
sahf
dec
jp
mov
das
push
mov
lods
in
pop
es
xchg
jge
pop
push
inc
jg
mov
add
push
add
mov
xchg
inc
jns
loopne
stc
stc
inc
and
mov
lds
push
xlat
xor
rol
sub
ss
popa
loope
cwde
sbb
lods
pusha
mov
fs
aad
aas
sub
int3
out
pushf
test
iret
or
movs
push
out
(bad)
xchg
jp
cwde
mov
mov
xchg
xor
and
sbb
dec
cld
out
or
sbb
or
jmp
add
les
syscall
adc
pop
pop
call
mov
mov
in
test
idiv
jns
xlat
inc
xlat
push
inc
mov
adc
pop
sub
loope
pmaxsw
mov
test
cmp
mov
leave
inc
push
push
cmc
and
jp
cwde
pop
dec
add
sar
and
mov
hlt
lahf
mov
adc
lahf
xchg
jmp
call
mov
dec
sbb
ds
dec
imul
enter
jge
pop
mov
loopne
mul
fild
dec
sub
mov
jae
add
ins
test
loopne
ins
inc
daa
xchg
mov
test
daa
loop
fcmovnb
jle
(bad)
mov
mov
sub
popf
ja
cli
test
outs
cmps
mov
call
sahf
sbb
mov
mul
(bad)
in
xlat
and
mov
jge
scas
in
ror
adc
push
loope
cdq
adc
and
xchg
push
ror
js
pop
mov
lds
(bad)
sub
not
daa
lods
mov
or
jecxz
test
xchg
ins
shl
neg
nop
xchg
push
pop
cmc
cmps
ja
cmp
(bad)
pusha
jge
cmp
sbb
jbe
mov
repnz
xor
mov
and
sub
enter
repz
fstp
jp
mov
mov
mov
adc
mov
or
or
outs
rcr
(bad)
push
xchg
pop
bnd
ds
mov
xchg
not
cmp
or
inc
sub
rol
inc
(bad)
loope
sahf
call
out
outs
fistp
sub
je
mov
outs
and
or
sbb
push
pop
push
out
in
sti
pop
lods
mov
push
sbb
shl
(bad)
push
jo
sub
leave
push
ret
sbb
jecxz
pop
ret
pop
ds
jmp
call
in
fwait
mov
jg
adc
xchg
out
fsub
enter
mov
das
stos
xchg
out
(bad)
je
and
lods
cs
push
adc
das
sub
out
stc
xchg
and
test
mov
or
aaa
inc
or
sbb
jl
iret
dec
xchg
retf
pop
sbb
movs
adc
push
mov
jp
pop
fnstcw
sub
xchg
fadd
and
jp
pop
es
in
push
sar
enter
and
les
out
shr
movs
mov
push
inc
add
inc
das
sbb
inc
repnz
cmc
fiadd
xchg
(bad)
and
dec
pop
jge
jb
aaa
dec
icebp
rcl
dec
ret
push
and
fisub
rcr
stc
push
jle
in
pop
xlat
jo
jno
fwait
(bad)
clc
cmp
fst
test
sbb
or
xor
xor
inc
xchg
xor
jns
push
jmp
dec
outs
inc
sahf
push
push
push
xchg
cmps
or
loope
in
repnz
fstp
fcom
dec
sbb
or
cmp
push
enter
push
imul
jo
xchg
pop
push
jb
js
xlat
cld
sbb
ss
daa
imul
adc
mov
std
stc
ret
nop
xchg
adc
or
fisubr
mov
cdq
mov
loope
out
and
inc
xchg
out
cmp
push
push
push
fdiv
leave
push
ror
fsubr
xchg
retf
mul
sbb
cld
cli
repnz
mov
dec
mov
mov
(bad)
rol
cdq
add
pop
mov
sti
pop
loopne
leave
leave
or
mov
movs
push
pop
xchg
in
rcr
movs
adc
push
js
mov
pop
and
jmp
(bad)
jmp
inc
ret
cli
jns
jnp
cdq
outs
adc
icebp
dec
or
gs
aam
pushf
pop
cdq
out
cmps
sbb
cmp
(bad)
call
push
jmp
data16
adc
fidivr
popf
push
xor
iret
dec
ds
mov
adc
pop
xchg
cmc
pop
push
jo
pop
cdq
inc
sti
inc
in
cdq
xor
in
shl
pop
clc
inc
sar
or
mov
inc
jge
in
dec
cmp
retf
and
xor
push
fwait
gs
rcl
push
jne
clc
call
push
cmp
push
popf
mov
ret
je
xor
test
or
pop
xor
in
rcr
outs
cmp
inc
stos
jmp
xor
or
rcr
cmp
pop
mov
retf
push
(bad)
sbb
dec
push
js
lds
add
aam
dec
inc
inc
sub
fiadd
xchg
test
sub
push
iret
(bad)
cld
cmc
jnp
xor
(bad)
scas
mov
xor
push
mov
lods
ins
loop
xor
push
in
mov
adc
idiv
out
jo
jmp
outs
dec
push
rol
adc
inc
or
je
(bad)
imul
mov
test
xor
ins
jbe
add
lods
mov
call
or
fs
push
cwde
jl
mov
xor
hlt
add
(bad)
pop
pushf
fidiv
outs
dec
sub
push
pop
lahf
mov
xchg
or
out
jb
movs
imul
and
out
xor
stos
jmp
pop
push
test
stos
inc
scas
push
jne
mov
in
pushf
xor
jle
fld
sbb
test
push
or
dec
pushf
cld
pop
lods
stos
jmp
out
popa
pop
jecxz
dec
lahf
(bad)
push
xchg
ja
int3
push
mov
or
pop
dec
xor
lods
add
xchg
mov
cli
sbb
inc
pop
aam
fisttp
ds
fwait
pop
mov
hlt
mov
push
mov
ins
retf
lock
dec
lods
test
scas
test
adc
pop
sbb
stos
fstp
gs
ss
or
or
dec
sub
out
add
jne
sub
cmps
es
push
jge
cmc
push
out
arpl
mov
dec
ja
push
xchg
cmp
xor
and
cmc
outs
(bad)
and
sub
sbb
and
fist
outs
mov
fwait
lods
sbb
jno
imul
out
inc
fdiv
mov
xchg
pop
or
jne
and
iret
and
dec
ss
loope
pop
and
pop
fnstenv
push
cmp
sub
adc
imul
adc
(bad)
jb
leave
popa
dec
jle
pop
dec
sbb
fst
jle
inc
les
(bad)
and
lds
shr
fnsave
sbb
push
push
mov
push
cmp
pop
test
adc
and
and
outs
sub
jbe
push
enter
popa
imul
sbb
dec
sub
dec
or
outs
push
je
add
sbb
sbb
addr16
jl
cmps
mov
inc
cmps
aaa
sub
pop
and
lea
ins
mov
loope
sbb
inc
add
(bad)
stc
mov
(bad)
sti
in
stc
out
sti
sub
jo
fadd
jle
pop
imul
xor
adc
jne
add
int3
sub
xor
sti
and
in
mov
adc
sub
sbb
div
xor
in
(bad)
and
ret
loope
lock
and
ror
lea
fs
sub
pop
mov
loop
cwde
cs
icebp
fisub
xor
xor
jo
and
stc
inc
mov
mov
stos
xchg
dec
pop
leave
imul
(bad)
mov
sbb
cmps
mov
mov
jmp
push
dec
sub
pop
fst
test
(bad)
dec
jl
add
add
xchg
mov
sub
push
jg
fsubp
movs
pop
stc
xchg
pop
cmp
pop
scas
ds
(bad)
fdivr
int3
dec
std
clc
mov
out
dec
out
mov
adc
cmps
xchg
pop
mov
dec
mov
je
int
lods
movs
push
out
push
xor
dec
fadd
push
fwait
push
inc
in
ss
ds
enter
mov
cmp
sbb
xor
rol
stc
and
outs
push
fld
fdiv
je
or
or
loope
ja
add
push
int3
(bad)
jg
dec
(bad)
out
xchg
retf
push
(bad)
call
sbb
cmp
stc
mov
shl
xor
push
cmp
ret
inc
je
repz
jo
fistp
pop
and
cmp
cmp
sbb
test
sbb
jmp
mov
mov
imul
in
imul
jno
push
int
lods
and
dec
je
cmovno
not
shr
mov
or
mov
xor
lahf
cwde
bound
or
clc
dec
aaa
cli
push
nop
mov
hlt
sub
xlat
sub
fstp
adc
xor
les
lahf
arpl
mov
cmc
mov
jo
mov
dec
mov
push
cld
pop
xchg
adc
ins
pop
sbb
mov
fild
movs
sbb
xor
test
add
or
fbstp
dec
push
jno
jno
or
bound
dec
fcom
pop
xor
popa
xchg
xchg
adc
xor
movs
mov
add
xor
xchg
retf
mov
stc
cmp
xchg
dec
sbb
mov
pop
repnz
into
mov
cmp
mov
into
or
outs
ret
xchg
loop
cmps
loope
sbb
mov
dec
fiadd
jmp
les
sub
dec
push
push
cs
fcmovbe
inc
jae
sub
inc
lock
test
jmp
jbe
aam
call
fs
aad
sbb
retf
das
mov
mov
iret
pop
xchg
icebp
xor
mov
stc
pop
(bad)
mov
rol
sbb
je
adc
call
jb
pop
dec
sub
mov
bound
fdivr
lock
push
mov
daa
out
jmp
jno
sar
(bad)
pop
dec
add
adc
or
mov
pusha
mov
inc
mov
into
dec
fisub
cmps
mov
(bad)
scas
pop
xchg
int
mov
push
fisttp
pop
loopne
rol
mov
ret
rcl
and
adc
loop
fmul
xchg
jl
stc
repz
or
jne
movs
(bad)
adc
fs
cld
mov
fisttp
mov
into
push
mov
add
aad
stc
add
jl
inc
mov
jecxz
ss
mov
dec
mov
or
inc
loop
xor
sbb
xor
shr
mov
xchg
imul
arpl
or
mov
xor
xchg
fwait
into
sub
push
push
sub
xor
sub
pop
mov
sbb
mov
outs
jg
sti
pusha
icebp
test
sub
clc
neg
ins
inc
mov
test
xor
push
out
cmp
push
jne
es
xchg
cmp
ds
ret
and
repz
test
xchg
dec
jae
adc
sub
sub
out
rcr
cli
pop
push
push
pop
cmp
addr16
data16
pop
(bad)
iret
push
rol
add
and
xchg
xchg
in
stos
mov
hlt
inc
mov
mov
daa
jge
jmp
mov
and
sub
std
cmp
fsub
sub
push
ror
adc
push
icebp
xchg
int
fs
lock
lods
adc
in
push
mov
pop
shl
pop
push
cmp
test
inc
cmps
jne
loop
cmp
sub
nop
jmp
(bad)
push
ret
xor
xor
call
sub
lds
push
cmp
jmp
aas
mov
aaa
cwde
sbb
retf
xor
fs
fwait
test
imul
or
cmc
xor
mov
pop
mov
sahf
shl
pop
mov
(bad)
lahf
push
sbb
sbb
mov
data16
dec
ds
inc
ins
dec
xchg
push
sbb
add
sub
dec
fisub
jnp
sub
and
add
movs
push
mov
test
lods
mov
sahf
push
or
add
jbe
icebp
xchg
std
sbb
rol
popa
xor
scas
arpl
sub
mov
js
(bad)
cmp
ret
addr16
mov
xchg
add
not
push
leave
push
mov
jae
xlat
test
shr
stos
lods
icebp
mov
cwde
rcl
sbb
inc
dec
call
loopne
stos
movs
retf
fdiv
loop
int
leave
jbe
lods
mov
jne
pop
and
stos
sar
ret
loop
in
test
cld
dec
xchg
ret
jmp
sbb
mov
hlt
jmp
mov
int3
pop
jge
add
and
or
retf
ror
mov
xchg
out
mov
add
and
jnp
xchg
loope
aas
cmp
cli
pusha
(bad)
pop
retf
adc
retf
int3
pop
jns
icebp
cld
mov
mov
movs
test
rcl
in
iret
mov
(bad)
cmps
xchg
into
mov
mov
outs
(bad)
mov
sbb
sub
ja
lods
jno
xor
mov
sub
mov
imul
mov
adc
fcom
or
mov
and
imul
lea
loope
scas
cmp
sti
push
repz
cmp
in
xchg
dec
arpl
into
(bad)
cmp
ret
xor
(bad)
sub
je
push
and
dec
inc
icebp
inc
jle
pop
mov
sub
or
jmp
js
xlat
or
pop
pop
les
ret
adc
xor
dec
xchg
adc
jle
and
or
int3
jno
jne
call
daa
hlt
fs
jecxz
add
repz
jmp
jmp
dec
jmp
test
jno
mov
jbe
jae
out
pop
pop
cmps
add
fld
xchg
fwait
ror
sbb
push
imul
or
cmp
orps
in
(bad)
jns
pusha
out
retf
and
(bad)
xor
ffreep
cmc
mov
inc
add
loop
mov
pop
cmc
pop
sar
mov
inc
ret
lock
call
cmp
push
scas
jo
ins
mov
lea
retf
mov
jmp
xchg
call
cwde
add
imul
lahf
pop
ds
(bad)
stos
xchg
xor
aam
lahf
inc
mov
cli
(bad)
dec
inc
jmp
push
push
lods
shl
jmp
nop
lds
ret
inc
(bad)
(bad)
xor
jae
call
popf
adc
sbb
imul
imul
or
or
cmps
cmp
mov
adc
leave
hlt
jge
das
mov
and
(bad)
test
ss
in
inc
aaa
pop
pop
daa
bound
int3
fs
in
pop
das
xchg
lods
out
mov
and
outs
adc
inc
mov
in
arpl
push
cmp
(bad)
das
loop
movs
sbb
test
ret
adc
sbb
inc
leave
arpl
call
or
loop
pop
push
sbb
sub
fist
xlat
jo
mov
(bad)
xor
mov
inc
push
mov
pop
retf
setne
(bad)
and
cmp
sbb
out
in
push
lahf
jbe
dec
jl
mov
cmp
xor
mov
or
fmul
aas
jmp
mov
inc
out
inc
mov
test
into
icebp
mov
mov
and
and
pop
pop
xor
into
add
xchg
jbe
(bad)
cmc
cli
sbb
or
mov
mov
and
movs
jle
mul
push
nop
retf
push
mov
pop
xchg
mov
imul
push
pop
dec
popa
loope
fidivr
into
or
shr
test
cmp
pop
popa
jb
cmp
pop
jne
add
gs
xor
ror
mov
cmc
stos
xchg
adc
fcom
inc
push
icebp
push
mov
(bad)
cmp
xchg
add
mov
out
outs
int
std
sub
and
mov
mov
imul
xchg
cmp
aaa
sbb
inc
in
outs
fdivr
call
sub
sbb
dec
mov
cmp
bound
mov
dec
xor
xchg
sbb
xor
test
call
test
call
xor
ja
aaa
repz
call
jl
push
aad
pop
pop
jbe
adc
add
mov
or
jne
jo
ficom
repnz
push
test
mov
loop
mov
cli
daa
or
in
mov
jmp
mov
xor
mov
push
push
rcl
pop
pop
adc
cs
jae
or
call
dec
jne
adc
(bad)
cmp
pop
movzx
and
mov
mov
(bad)
pop
out
repnz
loop
cmp
pop
jbe
pop
stos
mov
fdiv
call
xchg
xor
jmp
pop
dec
lahf
mov
add
retf
popf
ins
in
stos
clc
aam
in
shr
pusha
mov
leave
lock
fs
sub
pop
lock
popf
in
add
or
test
inc
in
mov
adc
inc
adc
(bad)
js
mov
xor
cmp
add
pop
and
adc
pop
push
jp
push
clc
cmps
adc
popf
push
jbe
in
cmps
sbb
imul
jne
cmp
stos
jl
test
or
jne
pop
outs
adc
inc
in
mov
fst
sub
pushf
cmc
outs
dec
add
ds
dec
lods
shl
lods
xchg
(bad)
je
mov
imul
mov
nop
push
cmp
jo
xchg
jae
xor
inc
lods
js
(bad)
jmp
dec
inc
ret
sti
pop
lods
push
out
sub
mov
out
xchg
mov
out
push
retf
inc
xlat
mov
bound
sti
dec
bound
add
inc
into
ret
push
rol
je
jmp
mov
repnz
cmp
inc
and
loop
mov
mov
cmc
xchg
sbb
movs
jno
pop
arpl
mov
pop
pop
sub
(bad)
adc
fwait
call
sub
mov
sbb
adc
push
stos
pushf
ficomp
int3
pop
add
in
add
add
call
pop
sub
fs
dec
outs
jne
lea
mov
dec
adc
stos
in
sbb
pop
jne
sbb
fwait
pop
dec
adc
pop
lods
cmp
jbe
xor
cmps
sub
(bad)
out
repnz
sar
mov
jecxz
add
xchg
lods
popa
push
mov
dec
sub
cmp
(bad)
dec
out
mov
pop
or
mov
cmp
and
xchg
cwde
sbb
inc
adc
sub
js
jle
add
(bad)
mov
ss
lock
push
sbb
push
add
push
mov
jle
test
aad
mov
scas
clc
repz
cmp
mov
jmp
adc
pushf
dec
idiv
lahf
add
sti
sar
pop
sbb
inc
fst
adc
ja
sub
sbb
cmp
imul
imul
loope
outs
xchg
int
int3
js
cdq
(bad)
fld
ins
inc
jae
cmc
loopne
(bad)
mov
daa
std
mov
scas
jns
pop
je
mul
and
mov
xor
ds
inc
xlat
and
out
fnstsw
sub
lock
ret
jae
push
adc
xchg
xor
add
test
loopne
dec
and
mov
xchg
sub
repz
stos
mov
dec
ret
cmps
add
xchg
loopne
sbb
scas
stc
jno
xor
data16
and
pop
mov
jge
fisub
mov
sub
outs
fidiv
scas
in
shl
(bad)
nop
cs
adc
mov
into
jl
push
xor
retf
sbb
cwde
(bad)
jb
mov
enter
(bad)
lods
xor
jnp
mov
push
sbb
mov
or
cwde
push
xchg
ds
cmp
sbb
add
mov
push
and
sbb
push
and
push
ret
movs
mov
or
pushf
push
jecxz
nop
sahf
outs
imul
mov
or
jmp
inc
push
mov
cmp
xchg
(bad)
repz
pop
or
jne
int3
mov
mov
dec
dec
ror
or
dec
out
arpl
mov
outs
sti
xor
mov
push
mov
test
jns
or
dec
cmp
hlt
mov
push
repnz
dec
shr
call
fwait
adc
out
imul
daa
cmp
or
push
shr
and
xchg
sub
add
lahf
addr16
retf
mov
hlt
enter
fisub
imul
cli
pop
mov
add
ret
cwde
fucomi
lods
in
bnd
mov
fadd
cwde
pop
pop
dec
or
imul
or
jl
std
sbb
xor
and
or
out
push
ja
test
into
loope
stos
mov
adc
inc
cld
and
call
int
jmp
and
and
dec
xchg
popf
mov
or
ja
sub
dec
enter
push
add
mov
in
idiv
in
repnz
and
xor
popf
xor
add
fstp
xor
aam
inc
pop
adc
mov
xchg
cli
shl
jmp
jnp
cmp
std
gs
push
pop
mov
push
dec
arpl
int
xchg
or
pop
addr16
pushf
sbb
dec
shl
push
les
shl
push
inc
xchg
dec
enter
int3
adc
shl
shr
icebp
(bad)
outs
dec
mov
stc
xchg
push
imul
bound
dec
dec
inc
inc
push
cli
mov
jmp
cmc
rcl
dec
jbe
pop
or
rcr
std
data16
shr
fdiv
(bad)
aad
push
lea
(bad)
ds
push
adc
push
(bad)
fwait
mov
push
sahf
jnp
les
mov
inc
and
test
push
retf
loop
cdq
lods
pop
ins
inc
jecxz
and
ret
dec
inc
ins
pushf
xor
push
xor
rcl
pop
xchg
test
sti
(bad)
fsub
mov
scas
inc
push
jge
sbb
mov
neg
movs
mov
(bad)
pop
out
push
repnz
or
inc
and
movs
xchg
jmp
jge
out
clc
jge
cmp
loop
adc
pop
jge
mov
jmp
mov
mov
in
and
clc
mov
xchg
enter
retf
leave
(bad)
fs
xor
popf
pop
pushf
jae
ret
arpl
(bad)
and
sbb
ret
sbb
add
test
cli
push
neg
pop
dec
popf
ins
pusha
mov
xchg
or
clc
adc
mov
or
jmp
xchg
cmp
mov
push
and
lea
pop
pop
ret
syscall
aad
inc
inc
out
xchg
repnz
mov
xchg
cs
cmp
mov
pop
ss
mov
pop
neg
int
mov
xchg
push
and
xchg
sahf
enter
dec
fwait
sbb
mov
mov
adc
xchg
jge
jle
xchg
and
mov
and
dec
inc
dec
int
outs
fst
popf
cdq
retf
mov
sbb
cmp
jg
test
jne
and
hlt
xor
(bad)
js
mov
sbb
push
repz
cmp
inc
jno
aas
popf
inc
jo
popf
es
jp
jae
int
dec
sub
add
lods
(bad)
std
div
adc
fsub
push
xchg
aad
addr16
mov
and
enter
mov
xor
ds
push
inc
cmp
nop/reserved
imul
jg
and
jmp
xchg
jp
dec
arpl
pop
(bad)
in
mov
push
es
cs
nop
(bad)
in
add
ins
lock
(bad)
cmp
pop
push
pop
xchg
mov
clc
xchg
repz
adc
retf
fidiv
mov
iret
mov
stos
outs
cmps
dec
repz
cmp
hlt
sub
icebp
ss
loopne
mov
(bad)
mov
push
je
retf
icebp
add
sub
adc
dec
pusha
hlt
mov
sub
cs
and
lods
(bad)
dec
pop
jae
jle
or
call
adc
cli
enter
ds
xor
mov
mov
pop
add
call
push
mov
mov
jne
ficom
imul
dec
cmp
scas
aam
(bad)
dec
xchg
mov
adc
repz
inc
lahf
adc
adc
xchg
mov
add
xor
jne
sti
mov
add
mov
fldcw
xor
jbe
cdq
icebp
jo
and
adc
ficomp
dec
out
or
inc
xchg
jbe
add
mov
cmp
jmp
ins
xor
fisub
push
sar
mov
sahf
xor
ins
xchg
je
pop
mov
js
jmp
push
stos
or
add
mov
or
gs
(bad)
push
pop
jno
stos
jle
cmp
(bad)
mov
mov
jmp
ds
xlat
fst
adc
inc
int
mov
cs
jl
loop
sub
shl
cmp
jb
rcr
sti
and
(bad)
inc
inc
(bad)
pop
mov
jmp
in
cli
test
push
xor
sub
out
sti
xchg
mov
or
push
sub
fnstcw
add
out
push
cli
adc
cli
inc
cmp
sti
call
iret
or
into
mov
lock
aam
retf
xchg
pop
dec
and
ss
push
sub
aam
data16
pop
jmp
jo
pop
retf
int3
out
stos
sub
aad
and
dec
hlt
or
fs
ins
cmp
push
sbb
mov
jp
adc
aam
movs
sub
call
fwait
cmp
outs
push
fiadd
sub
repz
cmp
mov
aas
cli
ret
push
push
outs
lea
rcl
sbb
xchg
ja
sub
or
ds
ror
jmp
scas
pop
adc
sub
cmp
lahf
ss
mov
lock
mov
test
cmps
mov
clc
fsubrp
outs
stos
add
xchg
aas
div
repz
xor
dec
mov
pushf
jp
pop
nop
sub
pushf
cs
mov
cmp
in
call
imul
mov
push
inc
mov
pop
cmp
sbb
jl
and
cmps
add
aaa
popa
inc
jne
cmps
cmc
push
call
and
daa
sbb
jbe
setg
mov
pop
ret
mov
ins
or
aad
jmp
add
test
fld
fisttp
js
push
adc
push
jns
inc
outs
dec
lods
scas
fs
mov
sti
mov
sbb
dec
mov
jle
push
cmp
xchg
scas
pusha
pop
ss
ja
fcomp
shl
je
add
push
movs
repz
sub
pop
or
loopne
jbe
dec
push
mov
adc
xor
cmps
sub
push
(bad)
lock
bound
mov
std
and
or
jae
ret
sti
aad
mov
jae
adc
or
ins
stos
jo
mov
jecxz
hlt
clc
jp
cwde
fstp
test
ins
or
push
into
mov
jmp
and
movs
jbe
stc
call
xchg
xchg
lea
and
mov
fbstp
jae
cld
push
js
jnp
in
stc
outs
or
inc
jge
or
enter
js
mov
cmps
repz
mov
out
add
fldcw
jo
ss
jbe
leave
cmp
call
rol
(bad)
mov
mov
or
ins
inc
push
jbe
out
(bad)
dec
int3
sbb
call
es
jle
pop
arpl
retf
scas
or
addr16
(bad)
fisub
aad
mov
pusha
dec
repz
out
fdivr
loope
cwde
ja
sub
lds
xchg
mov
lods
adc
lods
sub
pop
cld
out
sahf
mov
mov
not
std
(bad)
call
cmp
mov
std
ja
imul
dec
sub
mov
jb
cmps
jge
sub
dec
outs
aaa
jae
dec
ret
add
dec
jl
in
add
add
mov
stos
shl
sar
iret
icebp
sahf
xchg
adc
dec
pop
push
cs
xchg
sub
add
inc
je
mov
jp
iret
rcr
mov
stc
jge
cmp
pop
not
fisub
into
push
aaa
xchg
pop
int3
inc
inc
mov
out
xor
fimul
sbb
sti
outs
mov
aam
test
inc
dec
cld
add
or
in
rol
dec
add
(bad)
fwait
adc
pop
int3
pop
lods
lods
cmps
push
ret
fistp
sbb
cli
push
(bad)
pop
dec
scas
push
jne
test
popfw
and
outs
ins
cwde
nop
and
add
lahf
sub
(bad)
bound
shl
cmp
mov
sbb
aas
std
mov
cs
(bad)
cdq
ins
(bad)
jne
mov
xor
lea
ja
push
sub
mov
repnz
in
jnp
add
ins
mov
and
inc
stos
inc
hlt
adc
jb
enter
sbb
xor
pop
bound
dec
mov
jge
lahf
or
jecxz
call
mov
js
mul
sbb
mov
inc
daa
loop
add
(bad)
imul
and
aas
sti
mov
push
ret
push
fistp
push
dec
(bad)
lock
inc
adc
jnp
mov
imul
dec
(bad)
movs
(bad)
push
jmp
into
mov
or
das
and
add
mov
push
stos
add
(bad)
xlat
cmp
and
fs
sub
push
(bad)
movs
or
mov
and
mov
inc
scas
push
mov
xor
pusha
and
(bad)
pop
std
in
or
xchg
jno
jne
xor
pop
add
in
ss
add
push
mov
and
xor
call
shl
sbb
es
sub
push
add
frstor
xchg
fstp
push
dec
pop
shl
inc
mov
or
cmps
sub
xor
aad
xor
pop
push
fstp
out
adc
stos
ret
xchg
ftst
clc
push
out
jne
jecxz
push
and
retf
stos
ror
fadd
sbb
bound
fdivr
retf
scas
mov
lahf
jmp
(bad)
jmp
idiv
mov
out
lds
and
test
test
pop
cmp
pop
or
outs
mov
push
lods
jo
jno
push
mov
fs
in
call
sti
push
mov
inc
sbb
jbe
inc
or
mov
loop
inc
jmp
je
jb
pop
test
push
cld
ficomp
fmul
sub
prefetchwt1
jp
(bad)
ja
in
push
in
pop
xchg
adc
sbb
sbb
and
jns
adc
and
cwde
cmps
dec
addr16
mov
call
pop
inc
add
cli
loope
cmc
mov
inc
pop
adc
clc
jno
mov
jnp
xchg
jmp
pop
jle
call
sbb
add
dec
xor
shl
add
add
adc
jb
out
sub
or
(bad)
sub
js
adc
dec
mov
mov
mov
not
(bad)
adc
mov
push
push
mov
jae
mov
inc
jl
inc
sbb
adc
xor
int
cwde
jnp
add
icebp
shr
sub
jae
jne
cmps
enter
call
loope
out
mov
push
call
call
in
jle
sahf
pop
je
sar
inc
lds
mov
add
icebp
push
inc
jmp
lods
adc
mov
mov
inc
push
repnz
add
xor
pop
test
sub
cmc
sub
cmps
(bad)
icebp
jne
shl
mov
mov
jae
xchg
jo
pop
rcl
push
sub
dec
and
cmp
sbb
shr
int3
movs
xchg
outs
pop
aam
or
(bad)
icebp
push
xchg
outs
or
adc
adc
mov
aas
and
popf
add
ins
xor
xor
pop
jnp
int3
leave
jge
movs
inc
xor
in
mov
and
xchg
in
dec
iret
seto
test
jmp
cmp
mov
ins
pop
jns
and
mov
cld
inc
(bad)
rcl
cmp
imul
cs
iret
sbb
imul
push
clc
push
out
inc
or
mov
ins
cmp
xchg
lods
sbb
cmp
in
xchg
aam
add
ss
inc
and
lar
push
iret
adc
xlat
lds
mov
cmp
jo
dec
cmps
push
nop
jmp
xchg
mov
stc
aas
mov
push
jb
mov
aam
nop
test
in
adc
movs
jge
(bad)
stos
inc
jnp
lahf
mov
(bad)
push
or
and
add
mov
cmp
out
and
(bad)
nop
dec
pop
fdiv
add
cmp
dec
sub
nop
pop
(bad)
(bad)
or
(bad)
and
popa
push
inc
sub
push
(bad)
sub
popa
xchg
jns
and
bound
loopne
lock
add
loopne
clc
bound
(bad)
lahf
scas
into
popa
fwait
jmp
adc
retf
push
movs
adc
retf
adc
das
jns
test
nop
add
xor
shl
mov
jno
pusha
jle
fisubr
dec
and
add
(bad)
pop
mov
int
sub
test
cmp
cmp
xor
mov
pop
xchg
(bad)
jnp
ret
mov
loopne
int3
mov
pop
jecxz
jmp
fsubp
sub
cmp
jmp
sub
dec
dec
sbb
and
loopne
je
repnz
push
(bad)
sub
xchg
mov
dec
fidivr
sub
jbe
out
pusha
jl
cmps
sub
and
push
sub
or
push
mov
adc
inc
mov
leave
shr
jge
nop
adc
jecxz
cmps
lods
dec
stc
mov
rcl
jb
icebp
xor
aaa
hlt
loope
fsubr
ficomp
test
sub
rcr
pop
dec
pop
sub
clc
pop
xlat
push
lods
mov
mov
xlat
dec
xchg
or
jae
sahf
or
aaa
(bad)
sbb
mov
or
xchg
cld
xor
idiv
cmp
sub
enter
sub
aad
and
sub
xchg
fstp
mov
push
rcl
ins
jle
jne
les
sub
pop
ja
push
dec
sbb
cmp
and
mov
dec
gs
lock
xchg
les
out
cmp
add
cs
xchg
sahf
(bad)
in
test
push
jno
xchg
ds
sub
sub
int3
jmp
shl
cmp
arpl
xor
mov
add
int3
or
movs
push
shr
mov
(bad)
ins
iret
ins
push
or
movs
and
adc
mov
sbb
dec
pushf
shr
ror
xchg
or
jno
call
sbb
fld
nop
aas
shl
rol
inc
je
outs
dec
adc
fist
add
les
scas
lods
cmp
icebp
push
pushf
or
or
adc
or
jmp
mov
cmc
ret
xor
push
mov
and
inc
ds
cmp
(bad)
mov
aam
mov
xchg
cmp
or
jmp
xor
loopne
push
xchg
loop
cmc
jnp
ins
add
out
mov
pop
das
mov
rol
or
sbb
mov
gs
retf
jb
(bad)
push
pop
mov
push
clc
mov
ins
loopne
dec
(bad)
mov
jle
jecxz
sub
call
dec
aam
push
xchg
xor
or
stos
in
xor
push
loopne
clc
add
sub
cli
ret
out
fisubr
retf
es
ja
adc
cwde
cmp
cli
jne
mov
outs
add
xlat
push
and
xor
xor
xchg
jne
pop
xchg
xchg
dec
or
mov
jne
add
mov
dec
mov
mov
mov
(bad)
jns
jmp
jno
jno
call
cwde
(bad)
fdiv
inc
cwde
leave
jecxz
mov
mov
and
nop
or
sahf
jecxz
adc
imul
jne
stc
jg
inc
jns
sbb
fsub
mov
ja
ds
sub
imul
sub
push
mov
neg
cld
(bad)
adc
or
loopne
(bad)
cmp
outs
sub
nop
adc
out
mov
push
js
rcr
push
mov
lock
xchg
enter
stos
sbb
(bad)
mov
pop
int
add
pushf
adc
retf
cmc
dec
sti
and
pmaxsw
dec
aad
les
mov
(bad)
push
outs
add
loope
pop
adc
xchg
call
enter
jnp
shr
cs
sub
(bad)
fdivr
scas
or
push
cmps
imul
das
shl
aas
aaa
mov
inc
and
sub
imul
inc
ds
imul
pop
in
xchg
mov
jg
jbe
jae
data16
add
in
imul
mov
sbb
fs
pop
xor
inc
shl
fdiv
cmp
ds
in
mul
fiadd
jmp
xchg
xchg
loop
call
repz
jmp
loopne
xor
add
pop
in
loope
mov
xchg
arpl
test
ins
pop
add
adc
add
frndint
mov
mov
jmp
jge
std
and
push
in
repz
sbb
cmc
inc
jp
retf
inc
call
stos
arpl
pop
inc
fsub
mov
xor
js
scas
ret
es
cmp
je
mov
rol
es
mov
or
cmp
lock
xchg
mov
xor
(bad)
jmp
xor
push
dec
not
ja
imul
int3
jmp
and
adc
mov
jbe
add
push
pop
mov
cmc
imul
ins
pop
dec
dec
dec
xchg
dec
dec
mov
push
sbb
loopne
adc
je
add
sub
rcr
lgs
jl
pushf
sub
dec
lea
ror
sbb
and
sbb
popf
ins
mov
push
popa
fsubp
hlt
mov
js
in
inc
das
out
inc
les
inc
mov
stc
push
fisub
sbb
push
and
push
std
sbb
and
cmc
test
jns
and
sar
idiv
adc
mov
pop
fmul
xchg
les
mov
xchg
push
lods
loop
jne
cmc
xlat
mov
retf
adc
xchg
fild
sub
push
adc
test
jno
pop
inc
or
sub
imul
sbb
retf
fstp
dec
jp
test
sbb
fist
aaa
and
mov
ror
mov
out
test
fistp
inc
mov
or
jo
mov
mov
fidiv
dec
(bad)
ret
popf
test
lock
(bad)
push
addr16
mov
or
inc
or
inc
and
mov
sub
repz
pop
mov
in
sbb
cmc
fwait
mul
pop
std
repz
pop
fst
in
sbb
pop
out
lock
in
sub
popf
(bad)
cmp
fisub
cmp
test
push
in
jo
push
dec
add
inc
jno
in
jae
jge
in
bound
and
ja
jge
sub
push
fidiv
shl
mov
jecxz
sbb
hlt
mov
sti
push
sub
daa
jns
aas
fs
or
xor
dec
jmp
out
(bad)
bound
pop
aad
mov
mov
jo
mov
cwde
loop
retf
pop
cmps
xchg
movs
shr
mov
mov
imul
and
dec
ss
ja
mov
dec
in
mov
fnstcw
xchg
fidiv
cwde
inc
xchg
test
cdq
pushf
mov
sub
fldenv
stc
ja
cwde
xchg
or
inc
int
outs
movs
fadd
ror
mov
(bad)
mov
out
cmp
mov
ins
jmp
sub
jnp
and
mov
aam
fwait
push
into
(bad)
and
das
sub
pushf
dec
mov
addr16
cmp
repnz
xor
ins
xor
jo
pop
es
or
(bad)
popf
loope
push
jnp
mov
dec
add
mov
in
mov
or
mov
push
repnz
(bad)
push
retf
cmp
nop
adc
imul
lods
icebp
fcmovb
mul
fcomp
pop
mov
add
pop
bound
cmp
fwait
jg
fsub
sbb
dec
loop
or
add
add
jae
xchg
sub
leave
xchg
mov
ret
cmp
dec
cs
jo
call
std
push
leave
cmp
pop
popf
dec
aas
scas
sub
xor
pop
aas
pop
sbb
or
xor
pop
mov
ret
loope
xchg
and
jecxz
pop
repz
imul
iret
and
xchg
test
cdq
mov
mov
cmp
cmps
daa
mov
icebp
ffreep
fst
pushf
pushf
pop
or
sbb
and
sub
call
lea
iret
cmp
inc
pushf
mov
and
xchg
and
add
adc
add
das
inc
(bad)
mov
int3
push
addr16
out
xor
xor
pop
mov
sbb
mov
in
or
pop
pop
fcom
pop
popa
ja
mov
js
cmp
dec
mov
ja
dec
xchg
xchg
leave
fnsave
arpl
out
(bad)
loope
loop
adc
mov
rol
push
cwde
sbb
pop
inc
xor
das
imul
push
test
mov
gs
(bad)
jae
cmps
loopne
xchg
push
and
arpl
mov
adc
pop
daa
mov
jb
(bad)
xchg
cmp
cwde
mov
mov
jle
or
sbb
loopne
pop
cli
xlat
jmp
jg
pop
fst
xor
inc
test
dec
into
jae
and
lahf
xchg
call
add
mov
pusha
push
cmp
inc
adc
push
dec
push
dec
das
ds
and
adc
btr
into
es
push
lock
out
outs
add
(bad)
addr16
daa
push
push
(bad)
cwde
xchg
fst
popa
popf
ins
enter
fisub
sub
mov
popf
cmp
test
push
adc
and
lahf
sbb
(bad)
mov
xor
pusha
xchg
das
push
stos
mov
pop
cmc
pop
movs
adc
push
add
loopne
sbb
repz
lea
mov
xor
rol
lods
daa
retf
or
jns
sub
mov
dec
mov
stos
xor
mov
mov
or
test
gs
inc
(bad)
sub
imul
xchg
jle
cmp
jmp
ss
pop
daa
test
adc
xchg
fsub
jne
test
in
js
movs
dec
jo
and
(bad)
jmp
mov
gs
mov
adc
jns
bound
int
sbb
mov
fidiv
fiadd
inc
js
or
out
popa
mov
xor
iret
or
loop
sub
sub
push
xchg
out
inc
out
jmp
jecxz
dec
sbb
sub
fsub
pop
inc
or
rol
cld
xor
sub
(bad)
xor
popf
jno
xchg
jle
out
or
push
sub
dec
pop
or
xor
call
call
loope
push
add
les
pop
icebp
or
arpl
(bad)
xlat
les
xor
xor
mov
clc
ret
retf
ds
push
add
mov
mov
pop
lods
sub
cmp
mov
and
xchg
icebp
push
nop
add
cmp
rcl
stc
or
cmp
sub
and
(bad)
dec
ss
bound
mov
inc
mov
cdq
adc
sub
or
les
pop
movs
outs
pcmpgtw
sbb
xchg
int3
call
fimul
push
adc
cdq
stos
xchg
mov
xor
add
sbb
in
(bad)
pusha
mov
scas
mov
test
data16
adc
stc
add
jmp
sbb
scas
pop
sub
add
outs
or
sub
enter
add
dec
push
xchg
not
add
jb
push
js
fild
mov
and
dec
mov
loop
test
in
repnz
out
jl
cld
scas
scas
sbb
sbb
xchg
xor
cmps
xchg
mov
xchg
jb
loopne
sbb
pop
jmp
jbe
and
pop
icebp
fisub
cli
imul
mov
push
and
cmp
arpl
adc
jbe
mov
nop
cmp
mov
ins
out
fs
add
nop
cmps
push
aam
xchg
pop
pop
leave
icebp
int
lods
add
aaa
pop
dec
cmp
xor
in
(bad)
jg
in
inc
ss
pushf
pusha
or
test
sbb
pop
push
pop
jbe
xchg
cmp
sub
sbb
cdq
out
adc
nop
out
xchg
push
add
mov
call
retf
imul
sub
lods
ins
mov
cli
lea
mov
jo
push
fnstsw
(bad)
mov
and
out
fstp
dec
pop
mov
xor
inc
push
stos
add
out
cmp
nop
bound
scas
shl
call
retf
jb
stos
outs
push
stc
loope
shl
fstp
and
pop
out
jb
mov
mov
fst
leave
lods
or
aaa
int3
mov
lods
inc
aas
arpl
jb
jecxz
pushf
or
fldpi
xor
inc
push
sub
arpl
add
retf
dec
pop
jmp
xor
fucomp
mov
xchg
ror
js
in
pop
mov
jmp
fidivr
jmp
xchg
push
xchg
aam
aad
xchg
movs
div
jmp
fld
xor
pop
imul
push
mov
jle
jmp
or
mov
(bad)
jle
push
xchg
cmp
nop
std
dec
cwde
fisttp
into
hlt
loopne
cmps
xchg
ja
je
cmp
xchg
gs
mov
out
int3
fmul
sti
mov
push
or
adc
cs
in
loope
lea
stos
inc
sbb
shl
mov
xchg
adc
jl
jle
mov
repz
cmp
add
add
inc
cmp
ror
xchg
and
leave
xor
xchg
fbld
stos
sub
xor
push
retf
retf
pop
rol
cmp
enter
call
scas
push
das
test
mov
mov
imul
cli
or
push
aam
dec
(bad)
std
aad
data16
xor
shr
fmul
adc
jle
xchg
aam
adc
pop
rol
mov
sbb
xchg
cwde
mov
cmp
bound
cmps
cmp
mov
and
xabort
jg
xchg
in
dec
bound
xor
mov
mov
test
je
pop
pop
mov
mov
shl
xor
sub
xchg
loop
and
push
xchg
cmp
ror
cli
call
jae
in
aaa
(bad)
jmp
shl
dec
and
dec
jg
jecxz
xchg
sub
aad
shl
jp
leave
sbb
sar
adc
shl
jg
inc
sub
out
fidivr
dec
loop
mov
fist
dec
mov
pushf
mov
fld
add
xchg
ss
sbb
sub
ret
call
push
loopne
pop
jns
pushf
icebp
ss
sub
in
xchg
sbb
mov
push
fdiv
jae
pop
(bad)
ffree
dec
pop
mov
sar
cmps
inc
xchg
mov
in
xchg
inc
fisttp
popa
sbb
add
cmc
sbb
(bad)
pop
in
adc
mov
or
retf
xchg
stos
aad
loop
gs
xchg
jae
(bad)
repnz
add
fs
cmp
and
loop
sbb
iret
pop
jp
push
mov
and
adc
adc
stos
xor
cmp
call
popa
retf
add
repnz
adc
dec
add
and
push
xor
sub
jmp
mov
call
push
retf
jp
mov
int
scas
fst
mov
push
lods
int3
or
pusha
rcr
inc
(bad)
icebp
adc
mov
sbb
mov
xor
nop
push
sub
pop
dec
sbb
sub
les
xchg
dec
dec
xor
ins
push
out
xchg
inc
pop
in
fcmovbe
ret
mov
bnd
loopne
mov
dec
xlat
sub
jmp
lods
mov
sbb
mov
jns
icebp
into
xchg
inc
in
scas
or
(bad)
popa
push
retf
dec
sahf
fisttp
neg
shl
mov
stos
cmps
adc
sahf
fisttp
or
and
test
push
in
mov
test
idiv
xor
mov
lahf
cmp
xor
iret
xlat
sub
sar
enter
sti
arpl
icebp
(bad)
bound
or
cwde
mov
push
mov
ins
lea
mov
pop
rcr
test
inc
sbb
cmp
jmp
mov
mov
leave
ins
push
rol
or
call
adc
pop
cld
pop
mov
adc
sahf
scas
retf
push
sbb
test
sti
sahf
push
xor
jo
fstp
sub
mov
dec
shl
ins
sub
xchg
push
pop
xchg
push
dec
ror
lock
cmp
push
cmp
mov
test
out
cmp
and
test
mov
and
xchg
mov
xor
adc
iret
adc
sti
inc
pop
ret
ds
jne
test
push
adc
je
xchg
call
ret
out
or
mov
int3
jecxz
in
mov
sbb
xor
outs
lods
daa
and
mov
ret
cwde
inc
mov
daa
fiadd
xor
mov
sti
retf
mov
or
lock
mov
push
mov
push
das
mov
sti
xchg
repz
adc
daa
ins
jle
ret
cmp
clc
ffree
mov
add
leave
scas
push
adc
mov
push
mov
adc
or
iret
sbb
cld
rcl
pop
push
add
in
push
(bad)
aas
sub
dec
out
fst
es
int
and
test
push
xchg
popa
popf
fisubr
pop
add
gs
fld
imul
or
xchg
in
sub
iret
paddb
add
ja
(bad)
sbb
pusha
ins
cmp
add
js
jno
dec
mov
add
test
and
(bad)
mov
and
push
sbb
jle
icebp
dec
jae
jp
es
mov
jb
mov
int
jae
pop
mov
sahf
push
cmp
jecxz
call
cmp
mov
into
jp
(bad)
cmps
enter
pop
sub
sbb
movs
jns
push
adc
mov
cmp
add
mov
mov
loop
dec
popf
xchg
mov
arpl
out
test
mov
and
inc
lahf
stos
dec
pop
jmp
test
mov
and
pop
lahf
scas
cmp
enter
test
push
sub
xchg
fisttp
dec
stc
jecxz
lock
and
sub
dec
cli
sahf
stos
and
xor
std
inc
ss
cmps
add
add
xor
jmp
clc
xor
cmp
sbb
xor
mov
loop
daa
and
pop
xor
aad
push
sub
adc
mov
mov
adc
cmc
out
dec
outs
sbb
int
dec
out
mov
mov
(bad)
pushf
sub
fsubrp
add
fimul
repnz
push
pop
sbb
enter
pop
xchg
pushf
inc
enter
xor
adc
adc
push
lock
xor
ss
jge
shl
adc
jne
cmp
mov
gs
iret
mov
push
inc
pop
les
dec
fdivr
jbe
or
mov
shl
lock
mov
clc
neg
pop
test
and
int
xchg
sbb
xchg
adc
cs
pop
mov
mov
out
je
fdivr
rcl
fs
lahf
jo
or
(bad)
imul
jnp
fstp
cmp
fwait
jnp
xchg
push
xor
sub
hlt
call
pop
into
sbb
dec
imul
adc
stc
gs
lea
mov
pop
mov
retf
(bad)
movs
push
push
or
aas
or
lock
push
(bad)
cmp
repz
xchg
add
icebp
and
jne
mov
repnz
stos
stos
mov
fsub
pop
xor
pop
js
sub
adc
sbb
xchg
mov
dec
cmc
and
cmp
mov
cmp
mov
call
test
xor
popa
arpl
stos
(bad)
mov
mov
mov
imul
cmps
sub
lea
scas
adc
add
retf
(bad)
repz
sub
addr16
mov
movs
pop
sbb
repz
in
adc
imul
mov
push
into
add
mov
std
in
sbb
pop
sbb
fstp
mov
cwde
popf
fs
(bad)
repz
dec
add
out
push
sbb
imul
dec
push
sbb
sbb
mov
adc
fcmovu
cmp
fstp
hlt
jmp
mov
push
sub
mov
les
pop
or
pop
cmp
shl
lods
add
sub
or
pushf
jmp
mov
js
pop
ror
les
add
xor
ret
or
cmp
loope
jae
outs
leave
test
mov
jle
xor
fild
aam
pop
pop
mov
mov
cld
jnp
inc
test
sub
mov
sbb
adc
sar
(bad)
dec
shr
aaa
lods
dec
adc
fs
lods
add
leave
shl
outs
mov
adc
push
push
not
mov
lahf
aaa
mov
push
inc
repnz
repz
push
and
bound
repnz
ds
push
mov
test
push
xchg
retf
inc
dec
push
in
inc
scas
ficom
(bad)
or
or
das
xchg
outs
pop
repz
(bad)
xchg
inc
(bad)
sbb
lods
xor
test
aaa
sub
loope
test
or
push
(bad)
inc
and
lahf
imul
dec
cmp
arpl
jo
addr16
out
popf
arpl
ins
cmp
fbld
pop
ins
push
xchg
dec
adc
inc
rcr
and
jl
test
push
jg
mov
aaa
inc
iret
pop
xor
mov
cli
lss
and
push
xchg
cdq
add
jns
xchg
lock
shr
sahf
add
arpl
xchg
(bad)
mov
arpl
clc
scas
mov
lahf
mov
out
sub
wbinvd
sbb
out
in
retf
fistp
(bad)
sahf
push
xchg
sub
xchg
pop
pop
xor
push
add
mov
fcom
cli
mov
add
fidivr
cmp
mov
imul
mov
sbb
jmp
fnsave
imul
loopne
or
dec
dec
stos
jnp
out
rcl
fstp
jmp
mov
mov
mov
out
cli
mov
ror
dec
loopne
push
shr
enter
ficomp
pop
sbb
jb
xchg
das
jmp
sti
add
lods
cld
sbb
jl
dec
rcl
pusha
inc
jle
(bad)
mov
mov
and
add
xor
xlat
mov
outs
js
pop
lods
pop
fiadd
or
leave
add
dec
test
outs
push
scas
pop
push
cmp
xor
jb
sbb
push
pusha
fstp
mov
shr
clc
lock
mov
rcr
adc
jo
sti
inc
jge
jl
neg
cmp
inc
pop
outs
shl
push
push
lahf
aas
sar
sbb
ret
jmp
int
cmp
in
(bad)
test
sub
mov
mov
dec
imul
mov
or
xchg
fwait
jge
mov
add
or
xor
jmp
cmp
idiv
test
dec
fsubp
loope
outs
inc
mov
pop
in
xor
cmp
or
bound
outs
scas
mov
or
movs
mov
aad
ret
call
add
push
repnz
cmps
push
dec
pop
add
nop
mov
retf
inc
pop
mov
shl
not
cmp
xchg
loop
rcr
xor
add
dec
push
test
jmp
cmp
mov
mov
push
or
rcl
and
mov
add
and
mov
jae
es
push
push
xor
aaa
sub
sub
add
push
pop
adc
pop
scas
shr
mov
push
push
add
ret
jns
loope
jl
mov
add
shl
inc
outs
icebp
or
(bad)
pop
in
(bad)
stc
mov
and
jnp
dec
sbb
(bad)
or
mov
aad
ins
movs
shl
mov
cmps
sbb
(bad)
push
jbe
hlt
fmul
out
cmp
push
mov
shl
sub
lss
gs
(bad)
daa
xor
jno
mov
in
lods
jl
or
aas
(bad)
dec
jmp
jecxz
mov
retf
das
push
mov
cmp
push
push
mov
inc
dec
(bad)
mov
je
out
cmp
cmps
(bad)
mov
fcom
jg
sub
xchg
adc
(bad)
jns
mov
xor
mov
sub
mov
mov
movs
test
je
dec
fnstsw
test
pop
mov
push
jb
mov
dec
push
jge
shl
xchg
add
call
ror
jne
lock
xor
std
cmp
fidiv
iret
mov
mov
int3
mov
add
jl
mov
in
sahf
sub
(bad)
mov
out
fisttp
mov
cmp
in
adc
push
dec
mov
pop
std
push
leave
pop
jp
ror
pop
inc
xchg
adc
xlat
xor
cdq
and
xor
mov
nop
fcmovu
loope
pop
adc
mov
dec
jno
mov
or
pop
ret
sub
sbb
mov
and
aad
ins
out
movs
je
aad
or
mov
xchg
push
mov
sub
sbb
xchg
or
bound
adc
in
push
xchg
inc
push
fmul
inc
add
xor
cmp
adc
sub
repnz
movs
mov
dec
lahf
adc
cwde
mov
sub
xchg
sbb
cmove
sub
and
jl
movs
or
dec
cmp
cmp
pop
inc
cld
int3
xchg
(bad)
jge
jmp
mov
lods
inc
fisttp
scas
fnsave
(bad)
sub
stc
mov
cld
sub
out
and
mov
out
push
mov
data16
pop
outs
cld
xor
adc
adc
js
adc
xor
stc
jno
xchg
mov
(bad)
xchg
push
sub
out
ins
push
cmp
stos
push
jne
enter
sti
mov
out
adc
movs
test
and
rcl
jl
stos
mov
cmp
push
stc
les
mov
push
sbb
push
xlat
outs
mov
sbb
into
pushf
adc
jge
sbb
add
test
xchg
lea
das
xchg
shl
add
out
jb
dec
lock
push
(bad)
cmp
mov
addr16
add
int
aam
iret
cmp
iret
pop
pop
test
ret
leave
jl
pop
fsub
setns
popa
mov
add
daa
xchg
mov
fwait
in
imul
xchg
leave
add
adc
push
jmp
jecxz
test
das
xchg
pop
mul
adc
sub
xchg
int3
push
(bad)
gs
retf
cmp
out
rcr
es
push
sbb
xor
or
rcr
adc
cdq
add
mov
mov
scas
out
sub
mov
and
fadd
retf
or
mov
cmp
sub
xor
ins
mov
adc
lahf
mov
out
out
cs
cmp
jmp
dec
imul
dec
push
std
dec
enter
shr
cmps
or
jmp
adc
push
and
ins
sti
test
pusha
in
stos
adc
and
mov
sahf
mul
leave
xchg
dec
push
rol
dec
das
xchg
pop
lods
and
sub
inc
js
out
cmp
mov
add
bound
mov
dec
dec
mov
or
xlat
xchg
jo
push
adc
push
mov
sar
xchg
fild
jecxz
sub
hlt
cmps
into
push
(bad)
clc
retf
cmps
mov
enter
jg
mov
sbb
push
fxch
sti
mov
xchg
xlat
or
xchg
xchg
mov
mov
xor
lods
dec
push
or
xor
ret
je
call
call
inc
imul
call
jmp
dec
or
fcomp
dec
cmc
push
loope
scas
lock
in
xor
les
pop
aad
icebp
mov
xor
sub
div
jno
aad
jmp
rep
(bad)
retf
les
push
fadd
in
cli
ja
in
jbe
repnz
ror
je
or
fistp
jge
jl
inc
cmp
cmp
mov
mov
push
call
sbb
dec
inc
lds
inc
mov
cmps
arpl
fwait
xchg
cli
gs
out
or
(bad)
mov
ds
cmps
ror
idiv
call
dec
in
ret
cli
sub
jns
pushf
test
shr
sbb
aad
push
lods
(bad)
arpl
mov
aad
mov
repnz
xor
clc
out
jnp
clc
std
cmc
sub
dec
push
cs
enter
rcr
test
jns
imul
sub
ret
sbb
cmc
mov
std
mov
inc
rcr
xor
fld
cmp
sbb
and
adc
mov
push
add
js
scas
ret
loop
pop
adc
pop
shl
(bad)
xor
shl
hlt
adc
jns
lds
cmp
fadd
or
(bad)
retf
xchg
or
add
cmp
std
ins
lock
pop
and
pushf
mov
add
imul
cs
adc
pop
sub
jmp
imul
lds
fisttp
mov
push
hlt
sbb
into
inc
dec
mov
mov
ss
movs
pop
es
retf
or
or
sub
pop
cmp
rol
into
rol
aad
dec
js
inc
add
dec
push
pop
mov
xchg
dec
add
pop
or
pop
test
jge
jg
fisub
sbb
pop
push
pusha
jge
cs
cmp
cmp
dec
cmps
inc
pop
cmps
fnstenv
adc
hlt
arpl
shr
cmps
sbb
push
(bad)
mov
or
rcl
mov
leave
loopne
sub
ins
jge
sub
mov
outs
cwde
sub
pop
js
mov
aaa
pop
div
add
inc
lds
out
mov
mov
out
dec
adc
or
pop
(bad)
div
enter
into
fwait
aam
in
add
xor
jae
pop
lods
mov
jge
movs
add
mov
sbb
xor
sub
fprem
mov
fsub
int3
ret
aad
jmp
pminsw
mov
fisttp
mov
movs
jmp
or
xchg
and
hlt
into
mov
xchg
fisubr
add
push
in
lock
fistp
jg
loopne
lods
std
mov
mov
stos
sub
sbb
sub
lods
jmp
pop
cmp
push
lea
movs
jno
je
push
call
adc
rol
popa
cmp
jle
ins
inc
xor
push
cmc
inc
pop
push
adc
push
enter
bound
xor
jg
sbb
stc
in
lahf
or
mov
fdivr
sbb
push
dec
push
test
mov
lea
push
shl
adc
adc
push
mov
fidivr
inc
repz
(bad)
std
xlat
pop
push
mov
mov
bound
and
sbb
adc
nop
mov
mov
cmp
retf
and
dec
(bad)
cli
push
in
mov
push
xor
mov
les
loopne
rol
aaa
je
scas
test
int
and
fs
ficom
and
in
dec
(bad)
ins
inc
pop
in
jle
(bad)
popf
mov
gs
jae
push
fwait
adc
jecxz
dec
into
cmc
imul
mov
push
mov
addr16
stos
loop
jecxz
mov
sub
fstp
loope
sti
aas
ret
call
mov
out
push
xchg
arpl
push
cmc
push
(bad)
xor
in
dec
stos
sub
cmp
pop
push
inc
mov
mov
sbb
mov
stos
mov
pop
xchg
and
push
xchg
adc
popa
scas
repz
fisub
xlat
test
dec
jg
jne
shr
push
imul
nop
or
pop
add
adc
xchg
cmps
and
std
popf
dec
movs
or
push
add
mov
mov
cmp
mov
mov
cmp
cwde
push
and
mov
mov
popa
imul
rcl
sti
inc
push
clc
loop
retf
pop
icebp
adc
jge
xchg
jno
sbb
or
xor
jp
and
aad
mov
sar
xchg
(bad)
mov
sub
nop
cdq
scas
mov
aaa
mov
cld
pusha
out
retf
out
add
sub
push
ficom
cli
nop
and
cli
out
mov
mov
xor
aam
(bad)
dec
xchg
xchg
adc
fstp
(bad)
cmp
jb
ss
lods
add
jno
mov
(bad)
mov
cmp
(bad)
retf
xor
es
inc
add
jg
sbb
scas
lds
fld
adc
inc
cdq
mov
pushf
arpl
inc
sar
fdiv
iret
jnp
inc
ds
push
inc
icebp
dec
aaa
pop
scas
mul
aas
mov
cwde
test
call
sub
add
shl
lods
in
movs
push
in
push
sbb
std
mov
ins
jmp
mov
mov
push
cmps
sub
mov
xchg
aas
rcl
pushf
ja
mov
add
inc
gs
(bad)
jnp
ins
push
push
mov
xor
hlt
mov
pushf
adc
and
or
push
in
ret
add
stc
pop
popf
push
scas
push
add
in
popa
in
movs
mov
add
inc
sub
(bad)
nop
and
repnz
pop
sbb
and
lods
stc
shl
xchg
rcl
test
add
fisub
je
dec
loopne
(bad)
xchg
rcr
inc
neg
imul
dec
sbb
pop
jmp
shr
push
(bad)
add
or
sub
sub
push
and
jmp
or
fs
and
in
mul
outs
imul
push
enter
ins
sbb
in
xchg
xor
mov
aas
jmp
lods
jmp
aas
cmc
dec
mov
out
out
lds
jb
loopne
daa
push
inc
pusha
jge
xchg
aad
xchg
fiadd
adc
mov
mov
pusha
ins
cli
mov
mov
inc
inc
bound
push
loop
test
rcl
inc
inc
stos
aaa
stc
outs
push
inc
and
mov
or
dec
in
inc
inc
sbb
js
out
call
das
add
push
test
cs
fdiv
pop
inc
sub
les
test
push
push
out
mov
pop
call
mov
pop
bound
ror
adc
inc
mov
mov
(bad)
into
shl
push
and
fs
jmp
jp
in
pop
pop
loope
and
dec
sub
jg
mov
call
int3
in
repz
sbb
cmp
xchg
out
lock
repnz
lods
jno
push
adc
div
bswap
in
pop
pop
jecxz
jge
mov
shl
jne
ret
es
repz
aam
jae
pusha
fdivr
mov
(bad)
aam
sbb
sbb
aad
ret
imul
ret
cmp
dec
mov
pop
push
lahf
popf
(bad)
and
std
sbb
call
mov
imul
push
test
mov
jnp
and
push
fistp
icebp
xchg
jmp
mov
loop
rcl
mov
sub
mov
and
ja
lods
jle
lds
ja
jbe
or
jns
push
lahf
test
pusha
xchg
movs
mov
cmp
fimul
out
pusha
pop
mov
dec
enter
push
jo
repz
in
sbb
xchg
sub
jg
das
mov
cmps
adc
je
retf
sub
add
iret
ins
cmc
push
int
cwde
sti
cli
push
dec
push
jge
xchg
das
scas
ror
retf
xchg
in
imul
retf
gs
jecxz
rcl
mov
jns
sbb
jne
(bad)
jns
test
movs
add
xor
test
cmovb
xchg
sub
sar
hlt
test
xor
cmps
retf
ins
popf
mov
dec
push
or
inc
mov
retf
mov
sub
test
push
push
(bad)
outs
adc
inc
and
or
sbb
push
jmp
xchg
mov
add
sbb
cmc
ret
popf
dec
leave
sahf
cmp
test
dec
je
test
fcom
mov
adc
aaa
loope
sbb
push
jb
dec
mov
pop
add
shr
ficom
add
jp
mov
cmps
test
jne
sub
sub
(bad)
or
sti
and
and
dec
cmp
in
adc
cld
jne
gs
add
add
stos
retf
or
pop
rcr
pop
xchg
js
jmp
retf
pop
pop
das
xlat
mov
(bad)
adc
(bad)
stc
cs
add
adc
and
jb
test
retf
cmp
fcompp
(bad)
xchg
cdq
sbb
mov
fwait
and
(bad)
jo
xchg
arpl
(bad)
int
fsubr
adc
fs
push
div
jecxz
xchg
xchg
lods
test
and
pop
inc
in
sub
cli
mov
aam
jae
mov
ds
es
(bad)
mov
mov
sub
movs
icebp
iret
pop
mov
and
mov
setb
cli
lahf
dec
jg
xor
push
jge
sub
mov
mov
fist
repnz
in
xchg
inc
mov
outs
inc
sub
sbb
out
jmp
dec
mov
nop
xchg
cwde
mov
(bad)
scas
sbb
out
les
and
retf
inc
jb
xchg
push
leave
jle
sub
aam
cmp
das
hlt
xchg
mov
clc
sbb
lock
imul
mov
retf
enter
and
aas
pop
outs
xchg
cmp
(bad)
adc
and
pop
mov
or
stos
add
add
push
pop
mov
fidivr
cwde
and
pop
cdq
xchg
xor
pop
push
xor
mov
pushf
out
mov
mov
jns
inc
mov
or
stc
mov
mov
jmp
out
xchg
inc
ja
or
inc
(bad)
loop
fdiv
movs
inc
aaa
sub
movs
pushf
int3
pop
dec
or
shr
dec
cmp
hlt
imul
arpl
lods
fdiv
test
xor
shl
mov
or
cli
leave
loope
mov
and
call
cmps
imul
xor
shl
jmp
push
sub
fisttp
mov
call
or
retf
out
jmp
loope
mov
cmp
ret
aad
and
mov
les
xchg
iret
cli
sbb
test
ins
sahf
jge
jge
or
cmp
fstp
loope
push
popa
xchg
xchg
ret
test
and
mov
ins
das
mov
jmp
aaa
mov
fiadd
cmp
cmp
popf
inc
cmp
in
adc
lods
fs
and
inc
rep
dec
aam
je
leave
mul
bound
shl
adc
dec
jo
cli
jno
(bad)
push
lods
mov
pusha
daa
dec
iret
bnd
out
jecxz
adc
add
mov
mov
push
add
inc
or
mov
jmp
imul
cdq
loopne
fistp
les
addr16
jl
sub
out
(bad)
shl
cld
pop
cmp
mov
loopne
fcmove
dec
add
popf
add
inc
inc
movs
sbb
mov
mov
add
dec
mov
adc
out
hlt
push
xchg
jne
(bad)
adc
or
mov
pop
mov
xchg
pop
jnp
out
push
mov
cld
setno
push
inc
loope
adc
inc
inc
mov
fstp
mov
jo
pusha
aam
xor
adc
mov
jg
push
dec
xchg
ja
mov
lods
(bad)
pop
adc
dec
mov
dec
iret
lods
loope
clc
adc
mov
inc
inc
clc
dec
out
clc
imul
pusha
add
xchg
std
arpl
cmp
lods
jl
sub
sahf
fstp
test
imul
cmp
das
fs
adc
adc
hlt
pop
xchg
into
jmp
hlt
test
adc
xchg
sub
mov
stos
mov
sbb
popf
das
popa
(bad)
and
scas
sbb
fadd
push
int3
adc
iret
aad
mov
pop
xchg
sbb
xchg
lds
push
test
and
int3
test
rcl
xchg
sbb
cmp
mov
mov
repnz
jl
and
jae
call
xor
push
and
dec
mov
and
jg
ret
inc
scas
scas
pop
mov
cmps
ror
pop
imul
les
fdivr
cmp
pop
push
mov
cmc
inc
popa
pop
fstp
cmps
sub
xchg
cmp
sub
loopne
imul
sbb
add
out
int
lock
inc
adc
adc
movs
sub
shl
out
mov
xor
ja
mov
and
mov
in
data16
jle
imul
(bad)
dec
and
cwde
retf
dec
add
lds
and
scas
mov
pop
cwde
retf
scas
cmp
ficomp
and
cs
or
aaa
cmp
hlt
dec
sub
inc
push
aad
mov
add
push
(bad)
pop
or
mov
in
les
mov
push
pop
adc
pop
dec
cwde
fdiv
dec
retf
pushf
sbb
in
(bad)
cmp
jo
add
xor
inc
cmp
or
inc
pop
pop
pop
dec
cmp
fsubr
scas
fst
jg
out
js
mov
fs
or
jmp
test
cmp
ss
mov
scas
in
sub
mov
mov
setns
into
mov
push
sbb
pop
mov
(bad)
or
enter
pop
mov
lods
fidiv
stos
inc
adc
push
addr16
or
scas
mov
loopne
call
push
call
fimul
push
loope
mov
je
pop
hlt
ficomp
add
mov
clc
push
movs
push
js
sahf
pop
popa
cmp
sar
sbb
xlat
dec
pop
push
iret
dec
je
adc
dec
dec
ins
(bad)
stc
es
shl
inc
push
xchg
jle
inc
push
jne
aaa
sbb
les
ret
inc
mov
jle
adc
mov
arpl
pop
sub
rcr
rol
mov
ja
mov
jae
hlt
shl
aad
mov
loop
cmp
mov
scas
std
or
push
aas
outs
jno
test
mov
ds
jge
loope
mov
fbstp
movs
stos
ret
das
xchg
mov
xor
mov
inc
or
and
jbe
jp
mul
lahf
push
mov
gs
push
shr
dec
cmp
leave
inc
cdq
jmp
les
sub
pushf
test
and
out
(bad)
and
aas
iret
(bad)
sbb
mov
jmp
xchg
loopne
inc
jg
xor
jmp
pop
mov
and
fwait
mov
inc
es
jbe
jbe
int
cmc
fucom
leave
sbb
mov
pusha
mov
outs
shl
mov
retf
jg
jge
js
out
jmp
sbb
scas
cdq
arpl
xchg
jge
xchg
xchg
int3
rol
push
rol
push
sbb
iret
xor
adc
in
mov
push
xchg
add
cmps
scas
xchg
sbb
dec
dec
es
xlat
aam
mov
out
pop
mov
sar
mov
pop
adc
adc
push
push
in
imul
or
inc
push
stos
leave
jns
mov
aaa
cmp
jmp
lods
loopne
push
mov
xchg
xchg
test
ins
lods
sbb
outs
test
bound
push
mov
pop
and
add
mov
sahf
pop
jnp
mov
and
add
retf
jno
pushf
(bad)
pop
push
xchg
outs
jl
push
loope
xchg
fadd
movs
call
hlt
retf
aaa
xchg
xchg
test
arpl
sbb
xchg
call
xchg
add
jmp
adc
je
popf
mov
test
fdiv
inc
jge
das
call
pop
popa
mov
popa
pop
test
div
fild
fdivr
cli
cmp
push
rol
movs
stc
cmp
cld
xchg
jle
clc
pusha
or
inc
popf
inc
xlat
mov
lods
push
dec
dec
test
stc
cli
into
bound
sbb
out
cmp
leave
cmp
push
push
sbb
sbb
inc
sub
push
mov
and
call
lods
rol
aad
in
or
mov
xor
ins
imul
or
xchg
or
aaa
inc
ss
cld
pop
jle
in
cmp
jecxz
inc
dec
add
xor
cwde
xchg
sub
push
ins
lds
nop
or
xchg
movs
icebp
jle
or
dec
inc
add
jg
mov
nop
mov
jge
inc
ucomiss
and
fistp
cwde
pop
aad
pushf
cdq
sub
adc
jo
test
retf
std
ror
std
pusha
movs
xchg
jb
fidiv
lahf
imul
xchg
xchg
lods
jle
mov
mov
push
xchg
sbb
xchg
js
in
pop
jl
cdq
cmp
mov
xchg
pop
inc
xor
xchg
in
xchg
not
repnz
cli
icebp
popa
jmp
in
arpl
add
bts
outs
shl
adc
cs
pop
inc
or
jp
sub
jbe
adc
stos
cmp
mov
ret
inc
sbb
inc
dec
aad
sbb
push
mov
test
mov
sbb
add
shl
jg
pop
std
xor
test
iret
in
cmp
push
movsx
push
cs
nop
int3
mov
push
xchg
fs
outs
or
jbe
pop
add
adc
add
nop
mov
aaa
jnp
ror
fadd
ds
fs
and
lods
push
dec
outs
dec
xor
imul
add
inc
push
fs
(bad)
icebp
push
div
mov
retf
inc
mov
mov
jne
pop
adc
pop
addr16
jge
xchg
xchg
rcl
and
test
and
inc
push
nop
pop
and
inc
dec
loop
dec
scas
cmp
xor
inc
fstp
(bad)
mov
cmp
sub
xchg
pop
movs
pop
das
js
pop
and
xchg
scas
sbb
sar
and
mov
jg
ret
inc
cmp
xchg
sbb
inc
adc
dec
test
adc
aad
sbb
rcr
pop
push
clc
cmp
jo
nop
imul
mov
addr16
aad
pop
inc
retf
clc
popf
or
das
add
jne
mov
repz
je
inc
xchg
or
test
nop
fistp
add
and
(bad)
mov
pushf
pushf
sub
cmp
sbb
out
and
outs
inc
mov
pop
mov
mov
fs
jle
inc
movs
push
or
scas
outs
push
add
test
push
sbb
test
push
jmp
icebp
xor
and
call
cmp
xchg
out
add
push
xchg
jg
stos
jmp
mov
aam
xor
popa
lods
pop
sahf
adc
sbb
push
es
xor
mov
xchg
sub
shr
add
cmp
sub
or
mov
ja
adc
adc
test
cmp
pop
(bad)
fsubr
xchg
jmp
push
lock
bound
cwde
or
movs
jmp
es
fadd
daa
imul
loopne
dec
xchg
popf
cmp
or
mov
stos
sbb
adc
xor
ror
jns
arpl
push
je
fs
jl
stos
test
cmp
push
imul
add
jp
pop
adc
mov
cmp
mov
mov
cdq
cwde
popa
dec
mov
inc
cdq
or
lahf
pop
test
sub
xor
lds
mov
loopne
mov
fnsave
sbb
dec
aaa
adc
lods
out
int
or
cmps
mov
push
dec
push
xchg
jg
retf
cmps
ja
aad
push
xor
jns
xchg
dec
add
(bad)
retf
push
push
pusha
and
cmp
mov
ret
lods
cmp
or
mov
and
inc
lods
pop
test
fnstcw
loop
mov
outs
pop
jns
or
das
cli
inc
sar
adc
dec
imul
xor
test
and
loope
pop
mov
fwait
and
jae
inc
jle
mov
pop
not
loope
call
sahf
pop
xchg
bnd
sbb
and
push
xor
imul
(bad)
mov
inc
jnp
pusha
push
retf
in
mov
mov
jo
lods
adc
cdq
sti
ja
xor
and
shl
dec
mov
sbb
icebp
jle
jmp
jo
repz
sti
mov
dec
movs
mov
rcr
scas
push
pop
mov
ds
fisttp
test
pop
cli
(bad)
xchg
fcmovne
push
jnp
push
loop
jg
int
xchg
mov
push
ret
mov
es
mov
aad
std
int3
fnsave
jbe
ret
dec
add
cmp
adc
push
mov
lock
lods
icebp
(bad)
dec
inc
ret
add
out
cmps
cwde
and
cli
mov
jbe
mov
stos
cwde
adc
cmps
push
popa
mov
ja
adc
inc
repnz
imul
aas
fstp
mov
test
xor
inc
push
inc
cld
sti
hlt
mov
jmp
inc
sbb
add
mov
aaa
sbb
mov
push
pop
dec
mov
lds
xor
out
popa
jle
sbb
movs
loop
adc
cmp
push
lods
mov
movs
lds
out
call
cmp
cmps
xchg
dec
sbb
jns
add
pop
cld
lahf
xchg
jb
stos
or
sbb
inc
dec
mov
inc
and
mov
dec
inc
sbb
lahf
sbb
mov
pop
in
aam
fadd
aam
aad
mov
arpl
lods
sbb
sub
xlat
ror
inc
and
adc
jle
xchg
fsub
lods
addr16
adc
jge
out
mov
or
xchg
cmps
xchg
(bad)
das
xchg
push
mov
stos
xchg
xchg
xor
sti
mov
enter
lock
aam
xchg
out
mov
dec
stos
or
ins
adc
pop
pop
cmp
sub
or
xchg
in
sub
ret
mov
sub
add
pop
ret
cmp
mov
pop
cs
dec
push
xchg
mov
out
movs
xor
sub
imul
jecxz
push
jo
jg
push
(bad)
mov
push
out
(bad)
pop
xchg
cdq
jbe
mov
cmp
clc
sub
cli
fiadd
pop
mov
lds
in
cmp
mov
daa
push
jno
int3
dec
sar
out
out
xor
fnsetpm(287
sbb
les
mov
push
xchg
add
movs
xor
addr16
pop
xchg
aad
jne
call
dec
popa
into
in
jae
loope
and
sbb
push
push
push
les
pop
test
aam
dec
popa
pop
adc
in
mov
adc
test
int
ret
push
cdq
ss
push
cmp
hlt
(bad)
dec
xor
fdivr
aad
aad
xor
ret
jl
lods
cwde
mov
fistp
movs
pop
mov
stos
jno
iret
ret
xor
movs
out
js
fmul
aad
imul
(bad)
sti
hlt
jmp
jecxz
push
pop
mov
lods
push
adc
fnstenv
out
test
mov
xchg
mov
push
sti
mov
lock
xchg
shl
mov
jmp
sub
cld
sahf
shl
sbb
ss
add
shl
xor
or
in
into
lock
std
xchg
mov
popa
out
dec
cmp
aam
jp
paddsw
or
pushf
adc
xchg
int3
mov
jmp
inc
mov
out
inc
shl
or
inc
rcl
(bad)
(bad)
cmp
mov
push
cs
inc
or
xchg
ret
idiv
push
mov
pop
mov
fld
or
jbe
push
xor
cmp
cld
fwait
mov
adc
jge
adc
lea
lea
scas
or
cs
dec
cmps
icebp
xor
mov
cmp
xchg
cmps
push
cmp
icebp
mov
pop
scas
jmp
movs
scas
xor
xchg
scas
jb
iret
in
imul
inc
out
(bad)
out
jg
pop
loop
add
pop
mov
out
sbb
jmp
jne
fwait
inc
test
jmp
out
mov
outs
jno
jae
enter
test
enter
sub
outs
push
xor
or
cmp
arpl
jne
mov
cmp
les
mov
push
fwait
add
pop
pop
mov
sub
jns
aas
xor
or
mov
xchg
mov
lock
aad
fs
iret
or
xchg
inc
add
mov
enter
test
xlat
loope
fnstenv
mov
test
mov
mov
mov
mov
add
shl
cmps
je
or
sub
xchg
cdq
xor
ins
(bad)
into
scas
mov
idiv
or
xor
adc
and
xchg
je
sbb
loope
mov
daa
cmps
dec
xor
lahf
sub
cmp
mov
jge
mov
dec
inc
icebp
retf
bound
sub
repz
push
sub
pop
sar
fmul
jb
cwde
imul
jle
daa
mov
inc
push
cmps
repnz
cmp
sar
xor
ins
dec
mov
into
aaa
repz
jo
lods
mov
sahf
loop
test
dec
adc
stc
int3
mov
fnclex
pop
add
addr16
sahf
pop
mov
cmp
dec
cmp
inc
int
out
(bad)
ror
mov
js
cli
lods
push
lods
jnp
out
mov
inc
mov
and
push
enter
add
pop
rcr
fs
sub
addr16
pop
call
shl
pusha
adc
out
loopne
xor
jp
jg
cmp
and
jns
(bad)
jle
not
cs
xor
inc
ror
xchg
popa
sbb
pop
test
jl
inc
popa
push
bnd
jp
dec
popf
fld
inc
add
in
add
push
sti
add
cli
xor
cmp
inc
xor
dec
inc
rcr
push
clc
shl
inc
outs
hlt
xor
cmp
add
mov
call
jae
sbb
lds
das
lds
pop
out
mov
(bad)
jge
add
xor
mov
cs
and
jmp
lahf
inc
sbb
fst
inc
mov
stos
and
lea
pop
pop
mov
mov
mov
ins
xchg
cmp
nop
adc
mov
ds
out
int3
je
mov
loopne
ret
popf
adc
inc
ds
sti
imul
fild
push
push
mov
(bad)
push
leave
push
mov
stos
addr16
mov
ins
cmp
sub
pop
or
inc
bound
out
inc
push
cmp
int3
jbe
cmp
xchg
pop
(bad)
cmp
int3
jbe
mov
and
and
int3
mov
lods
cmp
push
xor
sub
in
jo
ror
repnz
repnz
inc
push
test
fiadd
jmp
pop
out
push
je
pop
push
jae
add
jg
mov
out
outs
xchg
stos
lods
out
fmul
pop
jmp
jo
or
jmp
cmc
inc
push
sub
(bad)
popf
lock
pop
ret
lahf
and
pop
outs
jbe
mov
inc
bound
psrad
jns
mov
and
(bad)
push
mov
dec
xor
xchg
mov
lea
ins
push
popa
xor
xor
jg
inc
sub
inc
dec
push
add
or
mov
adc
outs
pop
std
sub
dec
icebp
popa
iret
mov
ds
sbb
push
pop
inc
sahf
or
inc
xlat
cmps
dec
lods
lds
push
push
movs
(bad)
nop
mov
inc
mov
fsubr
(bad)
jg
lds
push
mov
neg
mov
(bad)
push
mov
jmp
cld
in
jns
jmp
fsubr
mov
mov
fld
cmp
jbe
in
mov
movs
jle
jne
rcl
or
and
stos
xor
ficom
mov
aam
(bad)
mov
xor
sub
fist
cmp
mov
and
xchg
mov
cwde
xchg
jns
inc
ss
or
jle
stos
fucomi
jnp
dec
jae
push
sbb
mov
mov
in
pushf
jnp
or
mov
dec
arpl
stos
inc
jo
clc
lods
mov
or
or
mov
cmp
cwde
mov
cwde
fmul
cmp
xchg
imul
mov
fistp
xchg
pop
adc
fistp
les
dec
jmp
jo
and
adc
xchg
adc
pop
xchg
xchg
or
int
test
imul
sbb
or
cmc
or
iret
in
retf
js
sbb
into
mov
ins
icebp
test
add
repnz
aam
pop
mov
ja
push
ds
cli
mov
jb
or
adc
dec
xchg
in
lods
lds
les
dec
mov
outs
xchg
mov
mov
and
lahf
leave
push
(bad)
fs
xor
test
jg
cmp
xchg
mov
les
cmp
leave
push
je
and
outs
add
push
jg
out
icebp
mov
jno
(bad)
pushf
fcmovnb
or
xchg
sbb
pop
dec
pop
fs
mov
nop
inc
ins
sar
ja
mov
js
mov
out
fbld
dec
push
icebp
stos
daa
or
(bad)
cmp
arpl
enter
jns
pop
cmp
push
xor
cmps
cwde
je
mov
or
mov
dec
in
out
cmp
push
mov
(bad)
in
leave
cmp
mov
dec
mov
je
add
xchg
mov
sub
mov
in
daa
(bad)
into
cmp
call
stos
and
and
popa
adc
sub
xor
adc
mov
sar
or
mov
xor
pop
xchg
nop
cwde
repz
and
sbb
xchg
inc
rol
out
add
stc
call
test
or
sbb
xor
mov
jp
call
jne
out
ret
sbb
je
(bad)
push
xchg
mov
mov
jmp
cld
adc
test
outs
inc
cmp
pop
push
jmp
out
cmp
lahf
push
mov
fistp
lods
sub
mov
ss
sub
add
movs
push
push
call
push
sub
pop
push
push
pop
scas
imul
xor
xor
pop
dec
add
out
movs
cmp
mov
mov
dec
sbb
gs
mov
mov
leave
xchg
pushf
or
rol
mov
mov
ja
ret
and
ficomp
cdq
cmp
(bad)
push
cmps
xchg
ins
pop
loop
and
test
movs
mov
dec
(bad)
adc
aam
lahf
pop
popf
ret
fidiv
xor
xor
adc
dec
movs
popf
cwde
or
jle
rol
xchg
or
xor
pushf
out
mov
repz
ret
mov
fisubr
cmp
je
cmp
call
xchg
push
jo
dec
xchg
jmp
popa
outs
jno
dec
popa
std
lds
cmp
aam
sub
jl
(bad)
pushf
int3
addr16
and
(bad)
push
stc
jp
pop
mov
clc
retf
or
xchg
add
pop
shl
mov
pushf
xchg
jnp
cld
retf
out
outs
bound
mov
add
mov
ds
dec
and
aad
out
sub
stos
das
xchg
or
xchg
mov
int3
int3
dec
std
mov
inc
xor
(bad)
in
aam
jmp
and
or
int3
lods
adc
lods
lahf
test
xchg
mov
mov
mov
adc
icebp
or
inc
repz
idiv
iret
jno
scas
dec
xchg
add
cmp
repz
sub
cmps
xor
arpl
jmp
(bad)
sub
aas
sbb
cmp
cmp
mov
push
mov
(bad)
out
ins
mov
adc
in
cs
inc
push
sti
mov
adc
shr
add
cld
xor
adc
lds
pop
mov
xchg
mov
xchg
add
imul
sbb
adc
sahf
jle
xor
in
pop
shl
or
bound
into
sar
xor
neg
(bad)
(bad)
jge
xchg
cmps
iret
sub
xchg
pop
cli
sub
jo
or
sbb
xchg
test
(bad)
enter
outs
jbe
popa
call
shl
xor
push
or
ins
stc
pop
cmps
xor
jle
push
imul
jae
enter
out
out
call
js
xchg
je
lahf
xchg
xchg
pusha
adc
(bad)
lock
mov
sbb
dec
dec
pop
call
stos
ret
cmp
sub
mov
xchg
ins
mov
sbb
xchg
xchg
xlat
push
aam
add
pop
jp
in
or
ffreep
push
sbb
push
or
sbb
add
dec
xchg
add
cmps
dec
mov
add
fdiv
or
mov
cmp
into
or
or
fisub
jb
gs
arpl
dec
mov
fst
cwde
outs
outs
cmp
stos
je
xor
das
(bad)
sub
pushf
sub
pop
arpl
inc
pop
xchg
retf
scas
push
fwait
clc
int
inc
imul
mov
xor
out
dec
clc
(bad)
mov
sbb
add
ret
(bad)
cwde
push
xchg
ss
test
nop
xor
mov
aad
xor
je
stos
mov
outs
xor
cmc
pop
push
cwde
mov
sbb
call
inc
outs
mov
call
jnp
jecxz
les
dec
arpl
cmc
call
aas
sbb
imul
imul
ficom
mov
add
cmps
test
sub
mov
rcl
aam
jp
imul
push
push
sbb
xor
shr
popa
mov
xor
clc
add
sub
imul
inc
ss
pop
mov
pop
add
mov
lds
fwait
and
stc
imul
mov
cmp
mov
fdivrp
test
inc
movs
bound
sbb
mov
mov
repz
xor
xor
adc
in
sub
dec
sbb
xlat
test
retf
adc
dec
pop
std
js
fs
mov
add
sub
leave
fs
jge
jae
xchg
and
jle
add
shr
xor
inc
imul
popa
shr
outs
jmp
sti
pop
std
or
jmp
aad
loop
push
cdq
rcr
call
dec
pop
fild
and
inc
mov
imul
adc
sub
add
xchg
js
mov
pop
lds
pop
in
or
ror
xchg
xchg
jmp
call
imul
in
or
mov
and
cmp
scas
jae
dec
int
mov
xor
std
and
out
mov
lods
dec
dec
sub
inc
fwait
(bad)
cmp
repnz
fadd
add
jb
xor
sbb
neg
repnz
mov
pop
sbb
lock
pop
ins
rcr
cmp
out
mov
test
xchg
add
push
mov
and
adc
lahf
lods
popa
push
and
fisubr
pop
xchg
lock
aaa
iret
lds
addr16
mov
in
rcr
push
sub
int
dec
adc
xchg
aas
sbb
mov
mov
xchg
and
pop
jbe
(bad)
or
lds
sub
lea
push
fnstsw
push
dec
shr
jmp
rcr
push
data16
(bad)
xchg
dec
mul
fcmovnu
ret
push
sub
and
mov
push
stc
out
int
xchg
ficomp
adc
out
icebp
(bad)
test
dec
push
repnz
stos
mov
adc
cmp
jae
ror
mov
push
sub
xor
push
fbld
push
cmp
hlt
lock
repnz
loopne
repnz
sbb
(bad)
xlat
ins
mov
xor
mov
enter
cmp
test
test
(bad)
cmp
(bad)
cli
xor
push
jge
mov
cdq
enter
mov
sti
ss
jne
js
fdivr
jae
inc
stos
xor
or
jae
mov
xor
clc
int
jbe
cld
push
mov
pop
or
test
xor
aam
or
sbb
fxch
adc
imul
jle
cmps
(bad)
fadd
or
sti
mov
mov
stos
add
cdq
mov
mov
retf
and
push
(bad)
popf
int
sbb
inc
xor
and
jbe
pop
scas
pop
popf
push
cwde
xchg
mov
or
xchg
mov
int
jnp
xor
in
movs
retf
out
mov
popa
mov
push
movs
mov
or
and
mov
add
sbb
test
les
cmp
ret
cmp
or
in
sbb
out
mov
add
and
outs
mov
neg
or
les
js
add
jae
enter
ffree
cmp
jecxz
les
imul
stc
and
xchg
and
fs
jl
jnp
call
cmp
fwait
adc
xor
mov
xchg
or
lea
mov
shl
shl
movs
xchg
cmp
loopne
lock
xchg
push
jg
rcl
mov
stos
retf
cli
push
mov
sti
jb
cmp
cmps
jbe
imul
hlt
imul
inc
xor
xor
fimul
mov
dec
mov
xchg
std
xor
xor
mov
lahf
test
jmp
xchg
mov
cmc
rcl
sbb
ror
pop
mov
mov
pop
xchg
pop
(bad)
jecxz
fwait
mov
arpl
cmc
mov
push
cmp
jnp
or
jp
add
scas
mov
ret
repnz
push
aas
xlat
inc
pop
cmc
pop
sar
iret
ror
stos
ss
imul
pop
dec
(bad)
shl
or
add
mov
mov
pusha
push
xchg
clc
sbb
or
inc
scas
call
sbb
sub
pop
fucom
or
mov
into
scas
sub
inc
stos
sub
lea
jmp
sbb
mov
jl
push
imul
cmc
push
mov
ret
xor
mov
and
call
push
retf
and
and
jecxz
sbb
jge
add
shr
cdq
add
pop
ins
dec
and
push
mov
fbld
mov
div
not
(bad)
aas
shl
ror
mov
mov
int
add
ss
pusha
js
jnp
lahf
mov
repz
add
scas
lods
jmp
adc
retf
(bad)
inc
sti
cli
es
inc
outs
jmp
or
(bad)
cmp
gs
cmps
not
stos
push
sbb
dec
push
and
out
shr
xchg
jmp
(bad)
aad
fcomp
jecxz
sub
mov
cmp
adc
pop
push
lahf
(bad)
addr16
test
jbe
sub
push
rcr
pop
test
icebp
aad
cmc
iret
ins
xor
ds
popa
mov
das
dec
into
test
mov
mov
push
jmp
xlat
shl
push
mov
and
(bad)
jno
inc
in
push
pop
rcr
mov
aaa
pop
and
imul
fwait
and
or
inc
mov
push
mov
sub
sbb
pop
jmp
inc
add
or
ret
dec
adc
jp
add
fbstp
inc
loop
and
in
inc
inc
mov
inc
mov
pop
or
add
ror
aas
fisubr
adc
out
xchg
jmp
push
dec
test
mov
cmp
mov
cmc
push
adc
je
cmp
jp
out
cmp
xchg
fadd
in
loop
sbb
cs
xchg
jnp
push
(bad)
pusha
(bad)
data16
js
jecxz
mov
rol
push
xor
int3
pop
rcl
cmp
adc
(bad)
int3
xchg
cs
clc
xchg
inc
add
ss
sbb
or
fs
sbb
retf
test
mov
enter
cmp
addr16
call
shl
adc
xchg
sbb
shr
(bad)
sti
or
out
cwde
mov
dec
mov
jge
or
mov
xchg
add
pop
test
out
add
xchg
pop
sub
sti
xchg
add
out
stos
jae
fcom
iret
mov
test
fistp
fmul
push
vpcmpeqd
hlt
push
mov
mov
mov
push
dec
pushf
lea
aam
mov
ds
cmp
jmp
dec
test
pop
xchg
ret
jns
shl
out
ja
push
push
pop
dec
or
lock
shr
xor
enter
add
xchg
and
push
aas
mov
repnz
aam
outs
mov
cli
push
jae
test
rcr
cmp
aas
jne
xor
push
nop
jmp
push
mov
xchg
data16
pushf
fld
fsub
jecxz
mov
dec
mov
push
push
imul
jns
dec
and
push
aas
inc
xchg
push
xchg
mov
loopne
cmpxchg
dec
adc
das
cmp
push
fsubr
lea
xlat
inc
fmul
pop
gs
xor
ins
loope
mov
dec
(bad)
ret
pop
std
stc
cld
add
int3
mov
mov
jle
retf
dec
call
mov
fsubr
stos
clc
pop
pop
outs
cmp
(bad)
int3
cmp
stc
cmp
push
out
lahf
fwait
cmp
arpl
mov
and
repnz
data16
mov
mov
cmps
jmp
pop
ss
push
lods
mov
test
(bad)
jge
pop
and
gs
mov
add
fwait
cs
sbb
sar
je
mov
cwde
sub
push
aam
sub
inc
sub
cmp
bound
mov
sub
xchg
inc
push
fwait
inc
mov
test
or
fcomip
mov
scas
icebp
sbb
mov
out
inc
jmp
fisub
dec
pop
retf
cdq
fs
cdq
dec
outs
in
jns
scas
mov
sbb
jmp
jb
xchg
mov
retf
inc
call
sub
pop
mov
je
ja
or
mov
jo
sub
test
pop
in
test
pop
lock
or
inc
xor
push
jp
jle
adc
push
adc
dec
jl
int3
lea
dec
int3
mov
(bad)
mov
push
sahf
mov
cmp
inc
stos
xor
sub
sbb
sub
cs
das
pop
icebp
jno
aam
fld
jge
ins
inc
sub
adc
or
mov
and
jnp
cmp
ret
jno
jecxz
jns
fisub
dec
add
iret
jl
push
sbb
mov
dec
add
cmp
or
mov
ins
and
jge
mov
and
scas
and
outs
pop
jge
test
push
scas
outs
add
aas
aas
cmp
dec
stos
cmps
cmp
psllw
and
cwde
jo
aam
xor
jno
pusha
test
lea
pop
mov
jle
mov
sar
lods
mov
xor
ins
cmp
aaa
cmp
lods
fbld
stc
push
jmp
sub
xor
js
sbb
dec
mov
xchg
jae
push
pop
cli
adc
sub
iret
(bad)
sbb
push
push
pop
adc
dec
inc
adc
fsub
das
int3
and
adc
mov
in
pusha
push
les
sbb
inc
cmp
loope
mov
and
cli
add
cmp
or
jnp
xchg
cmp
retf
dec
push
sbb
xchg
push
sub
retf
sti
xor
pop
inc
std
mov
adc
mov
ins
adc
inc
dec
test
mov
cmp
shr
push
cli
ins
sbb
sub
mov
dec
and
leave
dec
call
fbstp
cmp
xor
mov
ss
add
push
jmp
shl
inc
jmp
sub
fsub
sub
and
sub
cwde
fisub
scas
jno
fcomp
loop
push
dec
mov
inc
in
dec
jne
aam
stos
or
mov
loopne
ja
out
jmp
xchg
arpl
mov
aas
xchg
sub
rcr
aaa
ret
ins
aaa
mov
std
stc
cmp
and
cld
out
ins
call
leave
inc
adc
cli
inc
(bad)
sub
add
and
test
push
xor
inc
fsubr
push
and
retf
mov
(bad)
sbb
mov
xor
or
cwde
fsubr
es
adc
pop
and
test
ins
jle
cmps
mov
jmp
xor
iret
or
sar
or
mov
iret
les
stos
xchg
and
sbb
or
jns
stos
xchg
mov
push
mov
das
imul
adc
xor
js
scas
pop
dec
mov
imul
(bad)
out
pop
xor
add
mov
pop
popf
jmp
xor
addr16
js
cli
neg
mov
mov
mov
inc
push
add
rcr
cld
push
jl
xor
(bad)
retf
sti
fdivrp
sub
mov
int3
jl
test
pop
data16
mov
or
inc
push
add
das
(bad)
cmps
mov
movs
add
cmc
test
mov
fisttp
push
sbb
push
nop
das
sbb
cld
cmc
dec
mov
push
inc
and
pop
daa
add
movs
sbb
ja
adc
into
fucom
test
scas
arpl
push
mov
xor
adc
push
mov
sbb
adc
push
leave
add
scas
cdq
cmp
mov
adc
ret
add
adc
pop
inc
or
ror
sbb
push
mov
sbb
pop
ins
leave
adc
cld
(bad)
dec
cld
shl
add
pop
jmp
fiadd
mov
push
movs
stos
std
pop
pop
cmp
jmp
pop
aaa
and
mov
sub
adc
add
or
jbe
pop
hlt
or
les
retf
test
cld
pop
fdivr
jae
scas
cmp
int
jecxz
pop
or
sbb
mov
stos
sti
xchg
call
jmp
xchg
shl
sti
pop
sub
fsqrt
test
sub
imul
jno
fmul
out
and
fdivr
adc
iret
inc
mov
cmovns
int3
cli
mov
mov
cld
lods
sbb
adc
in
xchg
lods
ss
outs
scas
xor
nop
cmp
aam
add
pop
jae
bnd
rcr
xor
jge
arpl
push
cmps
push
outs
and
sbb
mov
js
stos
xor
xlat
je
push
shl
cld
es
add
enter
mov
push
cmp
mov
outs
mov
mov
js
ret
inc
sub
cmp
pop
ins
ins
pop
test
mov
cmp
inc
or
cdq
xchg
mov
cwde
int3
and
sbb
ret
(bad)
les
jb
mov
fmul
outs
imul
out
test
ss
adc
pop
and
sub
loope
cmp
xchg
addr16
test
shl
mov
sbb
test
push
lea
movs
jmp
sahf
int3
xchg
fcmovu
mov
cmps
aaa
dec
mov
inc
xor
loope
or
cmp
jp
and
int
push
cmp
dec
xor
add
lock
test
xchg
outs
clc
xchg
stos
dec
jne
sar
dec
std
adc
retf
call
clc
stos
or
adc
xchg
add
iret
mov
ins
shl
bound
ret
mov
fiadd
mov
push
xchg
outs
or
sub
fucomi
neg
iret
js
rcr
cmp
std
jmp
hlt
in
push
dec
push
aam
mov
repnz
xchg
fldcw
stos
pop
cmp
out
rcr
and
and
adc
mov
cmp
push
pop
icebp
cld
jae
idiv
imul
fs
mov
jg
outs
lahf
call
jle
xchg
xchg
sbb
xor
push
dec
inc
rcl
and
push
adc
cmps
test
cmp
xor
push
scas
clc
inc
jl
in
(bad)
jnp
std
int3
xchg
jl
je
fldcw
adc
stc
mov
sbb
xor
clc
inc
out
jecxz
add
(bad)
repnz
xchg
xor
and
or
loope
push
jne
sub
out
pop
icebp
int3
cmp
in
and
or
mov
sbb
dec
pop
jns
push
ror
cmp
ret
lods
lods
jnp
fisub
pop
xor
das
mov
arpl
or
push
test
enter
push
inc
cmp
lea
es
inc
outs
push
adc
mov
push
xor
jge
mov
sub
jnp
sub
cmp
add
sub
pop
inc
mov
addr16
rcl
(bad)
and
ins
xor
(bad)
fild
leave
pop
repz
pop
imul
xchg
xor
add
add
sar
mul
xchg
lds
adc
add
test
inc
inc
mov
jb
jg
or
aas
fs
cmps
adc
frstor
into
shr
mov
dec
and
and
mov
dec
push
dec
jl
lahf
mov
loopne
inc
or
ss
mov
inc
inc
pop
dec
js
int3
add
movs
pop
das
add
sub
mov
add
mov
imul
xchg
mov
lahf
adc
mov
inc
cs
mov
aas
inc
mov
in
imul
xor
ins
adc
std
cmp
dec
adc
(bad)
push
adc
int3
adc
cmps
dec
and
jb
cmp
sub
sbb
mov
sti
das
jg
mov
dec
retf
jo
sbb
adc
xchg
mov
jmp
jp
cmp
inc
loopne
movs
cwde
pop
push
sahf
bound
mov
mov
cmp
push
jmp
push
mov
retf
or
xchg
cli
lods
mov
(bad)
push
adc
xchg
call
stos
std
mov
mov
retf
fsubr
xchg
stos
fimul
jmp
adc
shr
cmc
jmp
xchg
or
data16
add
lds
sub
arpl
mov
push
lock
hlt
rcr
xor
cmp
test
into
test
mov
mov
scas
xor
test
sub
xchg
into
in
adc
sbb
fiadd
out
push
jb
fwait
mov
ins
std
xlat
int3
adc
movs
in
xchg
adc
addr16
adc
sbb
inc
(bad)
popa
cmp
and
mov
or
rcl
mov
jecxz
adc
jnp
add
fild
popa
push
ss
xor
mov
dec
jmp
push
mov
jmp
nop
xor
mov
rcr
retf
adc
mov
(bad)
js
inc
imul
cdq
pop
hlt
xchg
aaa
out
movs
push
imul
imul
dec
sti
iret
mov
add
bound
gs
cdq
icebp
inc
pop
or
mov
push
lea
out
daa
push
push
add
enter
aam
jp
(bad)
stc
cwd
sbb
js
ja
xlat
in
jl
fisttp
(bad)
dec
sub
leave
add
loopne
lock
inc
out
add
cmps
outs
aam
ins
sub
psrlw
stc
xor
adc
je
fnsave
mov
lock
cmp
arpl
xor
fadd
xchg
mov
test
test
inc
cmp
pop
push
mov
adc
addr16
das
bound
mov
sbb
out
test
cmps
cwde
in
pop
(bad)
je
inc
loope
neg
(bad)
repz
add
and
out
lods
cmp
adc
sbb
dec
nop
mov
in
mov
adc
out
ficom
mov
test
aad
jle
ins
ret
push
push
adc
mov
dec
sub
das
test
jg
xor
push
inc
jecxz
inc
addr16
retf
mov
out
ret
inc
inc
cmp
loop
repnz
rcr
mov
sub
and
dec
mov
push
in
enter
cmp
jnp
fild
cmc
pop
call
nop
test
lods
add
or
mov
jmp
retf
sbb
ins
out
aad
jae
cmps
dec
sbb
mov
xchg
stos
push
xor
sub
mov
cmc
mov
int
faddp
adc
test
in
pop
sub
or
popf
cwde
ins
jmp
mov
jne
inc
mov
jle
pusha
inc
push
das
cmp
(bad)
leave
pushf
adc
jo
movs
add
movs
scas
cmp
cmp
pop
iret
mov
adc
mov
xor
pop
mov
and
xchg
pop
pop
(bad)
adc
mov
sbb
lods
adc
xchg
or
js
pop
stos
inc
jmp
pusha
inc
stc
das
cmp
nop
mov
stos
and
fldenv
or
jle
jae
fimul
or
in
xchg
cmc
pop
inc
sbb
cmp
add
fstp
rol
mov
(bad)
je
lock
(bad)
in
adc
mov
lea
and
xchg
inc
stos
lods
and
outs
(bad)
loope
dec
sar
aas
mov
pop
or
adc
pop
je
xor
mov
mov
pusha
mov
(bad)
call
int3
mov
mov
mov
sbb
loopne
leave
je
jne
mov
pop
pop
(bad)
mov
push
mov
pop
bound
mov
sar
es
int
repz
mov
out
sub
mov
aam
and
mov
pusha
mov
and
xchg
mov
test
call
fstp
dec
push
call
push
sahf
cmp
xchg
mov
aad
pop
addr16
(bad)
xchg
pop
pop
loop
gs
adc
xchg
cmp
or
xor
ror
pop
rcl
and
ss
mov
pop
call
pushf
arpl
mov
test
shr
mov
cmc
nop
sub
push
fs
scas
shl
outs
fstp
stos
jns
test
add
add
or
ss
mov
jns
in
sbb
mov
fstp
pop
inc
arpl
in
add
xchg
mov
xlat
fidivr
xlat
and
or
push
mov
ret
aas
pop
mov
sub
mov
xchg
lods
int3
fwait
lock
loop
outs
push
pusha
pushf
adc
mov
push
(bad)
sahf
aad
div
jno
loop
ins
pop
mov
xor
call
neg
jmp
test
or
sti
sar
out
repnz
xchg
test
mov
test
(bad)
sub
adc
arpl
sbb
push
dec
nop
cwde
ficomp
mov
adc
or
in
ins
xor
xor
mov
test
fiadd
jns
add
outs
jmp
adc
arpl
fdivp
sar
xor
cmps
mov
sub
cmp
jge
mov
xchg
mov
mov
cmp
lods
adc
jmp
push
test
mov
cdq
lods
call
mov
retf
xchg
mov
dec
and
fnstcw
in
inc
inc
mov
mov
mov
dec
pop
cmp
cmp
inc
std
stos
mov
mov
jmp
or
adc
xor
sbb
mov
sub
sub
pushf
aaa
dec
je
add
and
mov
xchg
(bad)
or
lds
add
adc
(bad)
push
mov
jmp
aas
pop
sub
nop
or
leave
aam
nop
loopne
mov
pop
xchg
cmc
pusha
in
xchg
shr
or
xchg
ds
fstp
enter
xchg
leave
mov
(bad)
cmp
pop
data16
test
xchg
xchg
and
in
xchg
sahf
mov
fnstcw
xor
bound
or
or
jg
out
(bad)
lds
mov
retf
cmp
mov
imul
pop
add
push
mov
mov
pop
jp
and
int
inc
int3
jne
popa
into
push
inc
push
push
loope
shl
ja
sub
aad
push
rol
pop
lods
aaa
fsubr
loopne
pop
cld
mov
dec
aaa
mov
dec
mov
xchg
(bad)
fnsave
iret
jg
sub
cmp
mov
ins
mul
sti
sbb
int3
ds
cs
(bad)
xlat
sbb
pop
shr
push
iret
out
or
pop
outs
add
and
stos
mov
mov
adc
mov
lea
into
aaa
push
sbb
xchg
adc
cmc
mov
adc
es
pop
in
retf
jbe
pushf
dec
xor
mul
inc
dec
scas
in
in
mov
fmul
jne
popa
fwait
out
ja
pop
call
sbb
inc
nop
les
fistp
(bad)
mov
rcl
int3
xchg
call
cmp
ins
push
fstp
popf
and
aaa
inc
sti
dec
pop
inc
mov
add
sbb
add
enter
pop
mov
scas
mov
cmps
or
mov
sbb
cmc
stos
jno
addr16
or
dec
data16
loopne
inc
fadd
retf
mov
pop
dec
and
imul
(bad)
or
stos
mov
inc
popf
xchg
cmp
fdivr
mov
push
dec
fldenv
test
dec
inc
pop
or
sahf
rcr
add
outs
cdq
xor
cmp
mov
cmc
lea
btr
scas
repz
outs
sbb
push
pop
or
jns
add
jge
adc
clc
fs
cmp
pop
call
jg
pop
ficomp
sar
js
ss
arpl
xor
test
sti
jmp
(bad)
call
pop
add
int
adc
jo
push
sbb
shl
daa
leave
mov
jno
ss
pop
ficomp
imul
test
rcr
dec
mov
jle
mov
data16
and
aas
xchg
xlat
div
dec
xor
(bad)
shr
pop
out
push
jb
sbb
out
sbb
hlt
sub
pop
std
mov
call
pop
js
xor
push
sbb
test
int
push
cmp
sbb
fstp
(bad)
pop
sbb
test
push
mov
dec
shl
and
or
ins
sti
add
mov
lock
jne
stos
pusha
popf
cmp
pop
push
aam
pusha
xor
and
inc
stos
push
retf
arpl
ja
sbb
mov
jbe
sbb
mov
pusha
push
sub
jno
cmp
jne
cwde
in
lods
xchg
inc
adc
(bad)
retf
mov
mov
mov
ins
sub
repnz
add
inc
xlat
dec
stos
mov
jg
push
cmp
adc
sbb
mov
mov
sbb
(bad)
pop
push
imul
ret
cmp
sar
inc
psubd
pop
push
call
adc
jbe
add
cmp
push
ins
enter
mov
inc
outs
adc
mov
cmc
mov
(bad)
int
arpl
or
scas
fdiv
xor
push
fidivr
adc
fs
lahf
enter
mov
add
mov
xor
push
imul
and
clc
push
mov
adc
mov
ins
push
xor
sar
dec
sub
sbb
cmp
mov
and
je
push
scas
mov
mov
ret
mov
shl
add
movs
loope
xor
and
popa
shl
sbb
inc
sub
cmp
mov
adc
mov
sahf
push
sub
push
(bad)
fcom
mov
dec
jne
imul
or
dec
xor
cmp
push
lods
mov
inc
or
call
jmp
mov
daa
push
lea
daa
mov
inc
jo
fsub
out
jle
ins
(bad)
imul
loopne
and
arpl
outs
fild
jmp
ds
out
cmps
test
cmps
sub
pop
lock
sbb
and
xchg
rep
cld
out
mov
int3
popf
loop
jno
lods
pop
(bad)
call
or
add
lods
pushf
pushf
loop
sub
pop
in
ins
into
pop
sub
mul
push
test
das
loope
lock
pop
imul
inc
fild
xchg
xlat
icebp
jns
cld
mov
data16
repnz
hlt
inc
lea
mov
mov
aad
outs
enter
mov
mov
mov
dec
or
cs
call
in
xchg
xchg
and
mov
push
lock
out
retf
add
inc
push
cdq
xchg
xlat
outs
and
mov
cmp
push
and
data16
imul
xor
cmps
mov
int3
jnp
add
jp
pop
inc
fcmovnbe
dec
cli
fistp
mov
adc
mov
mov
out
js
aad
stc
leave
push
lods
add
sub
cmps
sbb
ror
push
lea
ret
imul
and
lahf
test
jmp
in
fmul
or
aam
rcr
call
xchg
xchg
cmp
sub
lods
test
aas
rcl
rcl
stos
(bad)
retf
adc
repnz
sbb
xor
cs
sbb
adc
sbb
cmps
aad
movs
add
xor
in
out
push
adc
push
jl
pop
lock
test
cmp
sbb
sub
mov
jmp
in
mov
cmps
xor
push
push
test
ins
fimul
dec
out
mov
jbe
mov
inc
and
xchg
jp
fadd
dec
loop
sub
ret
aaa
mov
cli
outs
dec
mov
cs
jmp
push
sub
add
(bad)
in
scas
sbb
cwde
lods
iret
sbb
inc
add
fiadd
test
and
cs
pop
jp
dec
xchg
adc
ficom
adc
aad
xchg
xchg
test
pop
ds
ret
pusha
jp
loope
pop
xchg
aam
jle
mov
jmp
fdiv
(bad)
ret
(bad)
imul
inc
fwait
mov
mov
cmp
jmp
cdq
or
cmps
test
cmp
int3
inc
xchg
jno
push
addr16
fsubr
jmp
add
(bad)
popa
in
cli
inc
into
test
loop
retf
fcom
movs
(bad)
into
and
retf
pop
fwait
jge
dec
pusha
cwde
inc
mov
jns
out
sub
stos
jge
in
jl
loop
xor
adc
call
jmp
fcom
xchg
jnp
lea
loop
ffree
inc
fimul
xchg
push
mov
hlt
push
or
pop
je
inc
adc
or
mov
mov
test
dec
add
out
in
data16
retf
jl
sahf
mov
cmovge
sub
sub
ds
add
test
dec
dec
std
and
add
dec
sub
mov
mov
ins
mov
and
in
push
adc
push
xor
gs
pushf
leave
in
repz
scas
jg
jno
dec
jae
xchg
mov
xlat
mov
and
sbb
out
in
mov
add
ja
xchg
in
neg
add
sub
cmp
pop
cmc
imul
ret
leave
sub
ss
jl
and
je
mov
div
mov
xchg
xchg
lods
out
ins
jno
sbb
add
cmp
fs
mov
popf
or
xchg
sbb
xchg
or
xor
push
shl
aas
lds
pop
xor
je
add
mov
std
sub
jp
cmp
fistp
pop
popa
cmp
mov
mov
push
fs
aas
mov
sar
push
jmp
add
mov
jno
xchg
inc
push
ficomp
mov
bound
leave
fmul
mov
or
sub
sub
fld
ins
jns
stos
push
jp
or
lgs
xchg
xlat
popf
dec
sti
arpl
mov
dec
ins
and
dec
outs
sub
out
jbe
dec
jmp
fdivr
or
cwde
sbb
xlat
push
jp
mov
pop
cmps
xchg
xor
inc
pusha
mov
sti
adc
jo
jl
scas
pop
add
int3
pop
cmps
out
mov
pop
enter
sbb
mov
sbb
test
dec
jg
push
fldenv
add
jmp
pop
inc
dec
loope
mov
sub
push
xchg
pop
lods
js
add
pop
mov
fld
(bad)
stc
and
(bad)
dec
(bad)
into
outs
das
sbb
nop
rcr
mov
call
int3
xor
jb
hlt
in
fadd
sbb
jecxz
and
int3
inc
loop
mov
int
mov
sbb
sbb
dec
pop
jns
lods
and
mov
pop
xor
repz
fnstsw
add
ja
pop
mov
mov
std
outs
mov
jne
iret
jb
mov
out
adc
sub
lods
sbb
test
in
cmp
jmp
xchg
es
ss
push
loop
cmc
rol
pop
and
or
adc
mov
mov
jecxz
stos
lahf
mov
loopne
and
lock
sar
iret
push
adc
push
lods
ins
popa
push
out
or
(bad)
dec
or
ss
es
push
cmp
inc
add
pop
out
mov
outs
outs
aam
xor
mov
xchg
cmp
test
dec
test
lods
push
imul
push
jne
nop
add
sbb
retf
shl
test
add
ins
out
int
(bad)
repz
cli
repnz
aaa
pop
add
fwait
pusha
jne
ret
mov
xchg
aas
mov
in
dec
and
sahf
mov
push
mov
pop
repnz
and
push
xor
outs
shl
and
cs
dec
sbb
mov
aad
pushf
inc
ficom
fdiv
in
or
ret
cmc
cmps
(bad)
mov
mov
mov
int3
pop
ins
mov
pop
ss
rol
jbe
xchg
(bad)
xor
sbb
inc
xchg
xchg
mov
cmps
and
shr
cmp
lea
pop
out
cs
iret
dec
xor
inc
mov
fisub
hlt
mov
mov
cmp
iret
adc
add
in
(bad)
cmp
pop
repz
(bad)
jl
inc
dec
mov
push
push
(bad)
push
rol
sbb
and
bound
mov
std
add
add
mov
pusha
sbb
stos
in
inc
movs
mov
in
aam
sti
and
fimul
icebp
xchg
add
or
movs
pop
sub
dec
or
mov
sub
into
mov
ret
call
add
arpl
sub
xchg
push
mov
stos
loope
(bad)
jne
or
mov
add
daa
jbe
es
sahf
pop
mov
and
dec
rol
and
fwait
repnz
out
mov
clc
out
and
(bad)
mov
fisubr
in
outs
sub
mov
xor
leave
sahf
(bad)
gs
mov
mov
pop
pop
cmc
mov
and
dec
inc
sbb
fs
mov
(bad)
fidiv
fmulp
dec
dec
adc
xchg
icebp
shr
sbb
jg
test
movs
shl
pushf
fsub
pop
dec
or
sahf
cwde
and
mov
nop
aam
dec
loopne
and
ins
test
push
mov
pusha
pusha
pop
mov
addr16
aaa
xlat
xor
pop
pushf
ror
ret
mov
clc
ja
xchg
mov
hlt
adc
mov
mov
inc
sti
test
sbb
int
aad
stos
iret
cmp
mov
inc
sbb
and
cwde
movs
mov
jmp
ins
xor
and
fimul
pop
xor
sub
xor
sub
pop
test
mov
bound
sahf
jne
mov
ins
xchg
push
repnz
popa
inc
sbb
fsubr
push
or
pop
stc
rcr
mov
scas
cmp
clc
jmp
outs
out
test
leave
mov
imul
jbe
and
aam
call
xor
or
add
loopne
mov
pop
cli
sbb
adc
xor
sub
jb
scas
mov
stos
retf
es
mov
imul
cli
ds
sti
in
nop
popf
movs
scas
imul
jg
je
push
call
inc
popf
cs
cwde
cmps
jecxz
in
xlat
(bad)
jnp
aam
mov
dec
mov
shl
sbb
shl
push
aam
pushaw
dec
push
rcpps
out
add
out
mov
and
out
sar
and
aaa
push
out
ins
jae
push
lahf
pusha
jo
mov
(bad)
int3
and
pop
jbe
in
loop
jl
cmp
cmps
je
xchg
ret
xchg
sbb
(bad)
jb
loopne
sub
jp
ror
mov
jp
in
pusha
jo
mov
mov
leave
enter
xchg
fist
imul
imul
push
and
or
in
in
aam
es
lea
jecxz
pushf
call
mov
adc
cmp
mov
sub
mov
jl
das
stc
ror
popf
das
ret
bound
mov
mov
xlat
mov
push
and
cmp
push
nop
fcomi
stc
mul
imul
gs
fs
fbld
mov
out
das
cmp
shl
xor
mov
cmps
xchg
push
add
and
push
sbb
imul
or
and
in
pop
je
test
adc
fcom
jae
jmp
sbb
loopne
and
je
mov
xchg
xchg
inc
jmp
dec
pop
(bad)
and
call
xchg
mov
(bad)
sti
div
popf
mov
(bad)
pusha
clc
adc
pop
cmp
sbb
out
mov
mov
inc
in
rep
in
push
jmp
xor
sub
dec
ins
mov
jg
inc
mov
popf
mov
retf
cmps
inc
dec
dec
jne
iret
dec
in
inc
lea
fcmovnbe
mov
pop
pop
stos
and
push
cmps
dec
bound
inc
jp
xchg
mov
addr16
adc
add
and
(bad)
das
daa
fistp
inc
es
test
cmp
pop
push
push
test
add
scas
sbb
dec
nop
or
repnz
xchg
jle
mov
aaa
push
sti
dec
xchg
sahf
sub
mov
test
sbb
call
jnp
cmp
pop
xlat
mov
xlat
into
mov
xchg
mov
cmps
sub
lods
mov
mov
sub
es
cdq
push
test
hlt
add
enter
and
adc
adc
sub
mov
aad
sbb
jle
out
stc
sbb
adc
add
imul
movs
pop
shl
and
push
xchg
lods
cmp
in
mov
jo
(bad)
fst
jae
jmp
aad
rcl
jnp
push
xlat
test
mov
cmps
das
test
add
enter
push
mov
jno
xlat
add
stc
scas
clc
(bad)
call
xchg
shl
push
or
imul
pop
scas
dec
xor
fcomp
sbb
lea
inc
sub
jo
sub
mov
jnp
cdq
inc
dec
cdq
test
pop
imul
xchg
mov
dec
pop
mov
dec
into
dec
or
out
jno
and
movs
in
mov
repnz
jge
mov
out
(bad)
lds
(bad)
push
pop
add
bound
xchg
stc
cli
jmp
repnz
sub
jl
cld
or
push
js
pop
data16
push
ds
sub
cdq
adc
cs
nop
ins
ja
repnz
inc
(bad)
sti
xchg
mov
and
ins
push
stc
ss
dec
push
sar
pop
shl
in
add
ins
or
push
call
add
pop
cmps
xchg
sub
movs
and
lods
outs
and
icebp
sahf
retf
(bad)
outs
lock
sub
add
js
push
pop
add
xchg
std
outs
sbb
ss
dec
fnstcw
aaa
pop
mov
pop
and
push
inc
out
das
mov
int
cmp
(bad)
iret
loop
(bad)
frstor
fnstsw
pop
add
out
jae
cmp
int
fist
jne
je
jmp
cmp
nop
mov
test
jno
xor
mov
mov
jnp
and
shl
inc
cs
adc
dec
cmp
jecxz
or
sahf
pop
stc
enter
scas
mov
loopne
xor
xor
lock
jbe
cmps
fidivr
cmp
movs
dec
out
out
jl
mov
sar
fs
mov
fwait
dec
sub
les
lahf
add
cwde
dec
fs
sar
inc
ja
leave
data16
popf
mov
pop
(bad)
cmp
repz
and
jmp
dec
dec
sbb
lock
adc
xor
into
pop
pop
push
sbb
shl
dec
jg
pop
dec
cwde
mov
sub
push
push
mov
xor
xor
push
in
sbb
sub
mov
cmps
sbb
out
clc
mov
aad
jmp
xchg
(bad)
mov
jbe
mov
loop
sub
xlat
imul
xchg
out
shl
xchg
push
mov
sub
jmp
sub
lock
in
gs
cs
stc
pop
ja
outs
test
repnz
test
xor
hlt
repnz
std
inc
pop
in
sbb
cs
xor
xchg
xor
sub
sub
and
jmp
sbb
retf
sti
pop
ret
fnstenv
and
or
adc
or
repnz
and
sbb
xchg
mov
push
jl
movs
jl
mov
inc
arpl
imul
shl
mov
test
mov
mov
cli
loopne
pop
leave
cmp
sub
pop
js
pusha
(bad)
dec
enter
enter
stc
push
shr
push
cli
push
jae
mov
jge
or
or
out
je
or
aaa
jmp
adc
cmp
mov
aaa
pop
mov
jbe
retf
fs
cs
leave
sahf
aaa
loop
cmp
inc
cmp
mov
idiv
mov
xchg
stos
sti
popa
sbb
jle
ror
test
and
cs
(bad)
jne
(bad)
ds
dec
cmp
test
sbb
pusha
daa
jns
pop
or
test
mov
pop
or
test
in
add
fimul
jne
xor
outs
jle
pop
popf
push
fdiv
repnz
jmp
cs
rcr
je
and
push
xchg
arpl
clc
mov
call
mov
pop
shl
test
mov
push
push
int
fist
sahf
rcr
ficomp
jne
into
dec
jl
and
sub
popf
mov
loopne
sar
pop
sub
cli
stos
push
and
shr
test
int3
inc
popa
outs
in
into
jb
fmul
push
dec
cwde
div
cmc
mov
jmp
cmp
(bad)
outs
jnp
and
pop
sti
ss
mov
test
jl
fidiv
push
pop
mov
call
push
movs
imul
cli
inc
clc
hlt
iret
scas
jb
push
aam
(bad)
or
xchg
nop
jmp
out
and
jge
imul
data16
stos
add
jp
mov
shr
dec
ret
(bad)
iret
(bad)
xor
sbb
mov
std
aam
popf
imul
iret
inc
(bad)
lods
iret
scas
cmp
push
hlt
mov
pop
xor
dec
adc
pop
mov
lahf
ins
inc
mov
out
dec
push
test
and
mov
lds
popf
inc
test
xchg
sbb
shl
stc
shl
sub
leave
icebp
push
jne
and
jp
add
dec
aaa
adc
add
std
ds
ficom
jle
push
imul
mov
into
rcl
(bad)
lock
cld
pop
xor
test
mov
cmc
cmp
rcl
cmp
mov
leave
mov
je
std
jle
push
pop
iret
gs
inc
aad
jbe
adc
int
cld
lods
inc
mov
dec
outs
sbb
aam
xchg
lea
stc
sub
rcr
sub
aas
aaa
inc
jno
mov
enter
fwait
mov
sub
es
inc
adc
pop
fsub
pushf
xchg
add
and
push
test
jl
call
mov
xchg
lds
pop
pop
xor
ds
(bad)
aad
mul
in
inc
or
iret
iret
shl
mov
ds
mov
test
add
inc
mov
jne
inc
out
jmp
adc
retf
iret
nop
sbb
stos
add
out
ret
stc
inc
mov
(bad)
and
loop
push
mov
dec
jne
jle
mov
rcl
or
std
mov
movs
add
inc
mov
fidivr
in
xor
push
jns
stc
push
adc
adc
dec
shl
jg
add
shl
or
pop
push
(bad)
in
xor
sub
dec
sub
out
test
fwait
inc
push
loope
jnp
into
inc
push
movs
add
mov
fdiv
into
dec
imul
sbb
ror
shrd
rol
push
pop
aaa
in
ret
scas
ins
or
shl
adc
adc
push
test
ficomp
xchg
add
pop
inc
add
imul
(bad)
in
sbb
push
mov
pop
mov
call
jmp
dec
and
push
retf
in
lods
(bad)
addr16
xchg
dec
(bad)
mov
fcmove
imul
call
sub
add
ja
pop
add
lea
jns
xor
jge
pusha
ss
adc
shr
out
in
sbb
lods
imul
mov
cmp
cmc
int3
xchg
ror
out
and
pop
ret
adc
test
xchg
pop
mov
cmp
xor
xchg
xchg
lds
mov
out
pushf
(bad)
gs
dec
enter
icebp
test
cmp
add
cs
sar
data16
jp
pop
cli
add
test
push
push
fs
cmp
(bad)
mov
out
bound
out
out
movs
push
sub
stos
xchg
and
xchg
sub
pop
pop
arpl
sar
cdq
rep
(bad)
aaa
mov
jae
and
mov
pusha
cmp
test
cmc
arpl
adc
sub
cmp
jmp
sub
rcr
jmp
cld
in
mov
add
cmp
les
jbe
test
push
popf
pop
sub
mov
mov
mov
nop
or
outs
add
into
movs
jnp
and
pop
pop
retf
es
out
xchg
or
mov
in
xchg
cmps
adc
arpl
enter
gs
xor
mov
call
cmp
push
ja
and
js
push
add
inc
sub
out
rol
das
xchg
sbb
or
aad
test
(bad)
loop
push
dec
mov
jns
data16
fld
loop
fsubr
inc
push
mov
ds
pop
ins
cmps
or
fidiv
aam
aam
data16
ret
cmp
lahf
int
out
jl
aam
scas
pop
cmp
test
jle
mov
inc
and
sub
dec
fcom
add
fiadd
(bad)
cmps
mov
into
or
dec
mov
dec
out
adc
xor
cmp
arpl
clc
fnstenv
xchg
cmps
mov
pop
jl
or
dec
or
sbb
(bad)
mov
fbld
xchg
mov
jecxz
(bad)
test
jae
bound
stc
push
aaa
aam
sar
add
fisub
aam
dec
push
dec
mov
mov
pand
das
cmp
xor
(bad)
dec
or
adc
jl
out
xchg
xchg
mov
jg
cmp
in
pop
dec
int
int3
sub
push
retf
(bad)
bound
adc
lock
icebp
add
jae
jno
data16
pop
cwde
bound
push
test
lods
mov
ins
xchg
xchg
inc
shl
stos
les
fucomip
movq
jb
shr
fwait
int
sti
test
xlat
jns
aam
xor
js
stos
dec
sbb
mov
inc
pop
scas
cdq
jmp
pop
or
mov
jb
out
mov
or
cld
xchg
imul
out
lahf
push
mov
push
or
sub
fmul
mov
stos
out
retf
ret
or
pusha
and
je
loopne
mov
scas
jp
ficomp
mov
jne
adc
mov
sbb
pop
mov
mov
xchg
les
sbb
(bad)
fwait
cmp
jbe
pop
mov
sahf
or
lea
xchg
jl
loopne
sbb
idiv
adc
inc
xor
nop
push
aad
xor
adc
mov
push
test
cld
icebp
jmp
inc
dec
mov
jbe
mov
retf
inc
xchg
inc
inc
nop
ror
dec
mov
mov
sub
fucomip
pop
or
cmc
fs
mov
fldcw
xchg
mov
mov
push
jmp
out
(bad)
lahf
jg
shl
sbb
cdq
ret
aaa
in
nop
ss
xor
fst
push
outs
sub
call
scas
add
jns
aaa
push
mov
in
icebp
push
hlt
or
dec
(bad)
xchg
jmp
xor
pop
xchg
cwde
and
movs
mov
call
mov
mov
addr16
stos
retf
lods
cmps
test
enter
sub
jns
cmp
adc
push
add
or
in
cmp
hlt
aaa
xchg
xchg
test
(bad)
push
in
sbb
xor
cld
cmps
inc
gs
lock
fstp
(bad)
adc
int3
push
or
test
and
xor
sbb
fs
es
mov
out
inc
ins
in
mov
mov
movs
aad
call
inc
or
cmp
and
push
imul
stc
lods
fcomi
adc
mov
mov
dec
push
out
int
ins
jmp
sub
pop
jns
fist
sub
mov
xor
cmps
out
push
mov
in
jp
xchg
pop
mov
or
ds
shl
mov
mov
fs
rcr
ret
lods
sahf
aam
punpcklwd
in
xchg
in
inc
leave
jo
sar
dec
jle
xor
xor
aam
adc
loop
cmps
sub
loope
inc
sahf
sub
xchg
or
add
daa
xchg
push
ffree
jne
test
push
cmp
add
fs
bound
mov
idiv
mov
in
jle
add
inc
pusha
jae
sub
sub
mov
xchg
test
repz
xchg
inc
push
lds
movs
push
or
dec
xchg
pop
push
cmps
mov
add
push
sub
ja
mov
fimul
out
inc
add
push
xor
mov
or
mov
fnstcw
xchg
add
sub
cli
dec
stos
sar
jl
nop
xchg
and
fimul
rcr
icebp
ror
hlt
ja
shl
jb
jg
mov
loop
xor
mov
test
jb
mov
call
shl
nop
xchg
inc
mov
mov
iret
into
jae
sub
mov
or
sbb
mov
pop
jnp
sub
add
scas
fcmovbe
rol
ret
mov
sar
test
gs
movs
nop
xchg
aad
sbb
pushf
addr16
ins
mov
dec
es
leave
fcmovnbe
hlt
push
dec
inc
inc
cwde
sub
cmp
dec
fcomip
or
sahf
push
pushf
xor
sub
out
cmps
inc
aad
pushf
cmp
test
push
xchg
mov
xor
push
jae
movs
push
repnz
adc
cmps
repnz
pop
sub
test
js
aam
mov
and
stc
lds
nop
cli
hlt
cmp
clc
or
xchg
shl
ins
mov
sbb
sbb
jecxz
push
outs
xor
(bad)
ins
cmc
test
test
sub
xchg
in
loopne
jmp
jp
and
mov
mov
cmc
cmps
arpl
and
push
push
push
movs
sbb
lods
sub
ja
lahf
data16
mov
ficom
mov
or
data16
add
shl
pop
push
leave
mov
stos
push
hlt
cmp
push
push
pop
popa
jg
inc
aad
mov
push
adc
repz
dec
xchg
push
adc
loope
jmp
cmps
pop
shr
aaa
sbb
mov
or
push
push
mov
xchg
jo
push
(bad)
out
call
lods
in
dec
imul
les
test
pop
test
jmp
sbb
lds
push
aad
push
mov
cli
ret
scas
imul
enter
xchg
xor
lock
pop
lods
add
add
es
mov
stc
ja
js
cmps
sahf
in
jmp
mov
rol
stc
out
fmul
sub
cs
jmp
retf
scas
addr16
(bad)
inc
push
mov
cli
jmp
pusha
sub
outs
rcl
int
pop
scas
push
retf
stos
push
das
mov
push
add
sar
add
mov
pop
in
xchg
fidiv
aad
shr
xor
sbb
push
dec
outs
loope
int
sahf
xchg
lods
iret
push
mov
fisub
loop
inc
lahf
sub
ins
popf
ret
popa
inc
stos
sub
stos
xor
push
sub
xor
pop
(bad)
(bad)
pop
aas
shr
gs
stc
xchg
(bad)
and
dec
cmp
jge
call
mov
sub
xchg
loopne
rol
iret
jmp
test
jbe
test
lods
add
and
ins
sub
fsub
dec
pusha
pop
xlat
je
xchg
mov
stc
(bad)
or
push
xor
mov
xlat
es
jnp
sbb
dec
or
cli
push
icebp
repz
test
add
popf
or
int3
cmc
movs
jp
inc
xchg
mov
pop
fnstcw
loopne
sahf
sti
out
gs
xlat
test
inc
mov
in
pop
enter
into
loop
dec
push
ds
cwde
or
(bad)
out
fbstp
aam
loopne
mov
test
xchg
iret
nop
out
mov
aam
mov
es
sbb
ins
pop
jl
mov
pop
or
adc
xor
(bad)
pop
sub
enter
cs
adc
les
cmc
cmp
es
inc
mov
fwait
pop
jge
(bad)
bound
mov
ret
outs
add
cmp
(bad)
jmp
sub
dec
cmp
sti
hlt
dec
jecxz
mov
sar
pop
inc
xor
adc
jle
add
pop
std
xor
out
mov
mov
neg
stos
mov
leave
sub
or
add
xor
sti
les
into
out
add
mov
lods
push
out
jp
shr
sub
jmp
(bad)
int
push
clc
in
ins
imul
dec
cmps
imul
(bad)
out
leave
sbb
aas
loopne
sub
or
adc
xor
inc
sar
cmps
and
sbb
loopne
jbe
mov
pop
call
lods
rol
jbe
jno
xchg
mov
push
sahf
add
pushf
add
add
mov
jmp
lods
push
dec
and
or
fisubr
cmovb
pop
add
push
adc
sbb
scas
jle
call
addr16
or
push
ret
mov
push
jg
fsub
jg
or
sub
jns
push
aam
sub
dec
ret
call
hlt
call
adc
nop
lods
sbb
pop
add
lds
cmp
out
in
xchg
cmp
loope
ins
imul
fwait
iret
xor
ja
cwde
and
mov
mov
pop
scas
adc
shl
xchg
sub
mov
mov
inc
test
test
add
es
movs
lahf
pop
jle
cld
mov
sar
sub
sbb
cwde
bound
shr
add
jne
pushf
cmp
lods
adc
rcr
fdiv
dec
ficomp
jg
xchg
mov
pop
inc
xchg
stc
xlat
or
test
rcl
sbb
in
mov
add
mov
mul
adc
dec
ins
sbb
pop
pop
xchg
mov
jo
in
pop
bnd
les
pusha
stos
pop
jle
push
xor
popf
add
dec
pop
dec
xor
inc
pop
test
loopne
fwait
cmp
mov
les
loopne
sub
jo
jo
push
addr16
mov
retf
and
int3
shr
jecxz
aam
mov
ss
and
adc
jmp
inc
(bad)
xchg
(bad)
pop
cdq
fistp
(bad)
pop
pop
pop
fild
mov
das
add
or
fwait
xchg
fidiv
inc
mov
or
pop
pop
xchg
sub
fild
mov
mov
mov
jmp
in
jecxz
movs
cs
imul
cmp
adc
sub
retf
fld
xchg
ins
xchg
push
jmp
xor
xchg
pusha
sbb
out
push
sahf
dec
addr16
or
inc
mov
sar
addr16
pop
das
sbb
fsubr
dec
jmp
mov
or
sbb
ins
push
mov
iret
mov
imul
add
dec
dec
add
nop
and
dec
ss
sbb
adc
jecxz
nop
pusha
cmp
xor
jl
movs
aas
or
adc
ror
or
(bad)
(bad)
cmps
xor
gs
out
std
or
out
rol
push
fidivr
rcl
push
sbb
push
pop
add
ss
dec
cmps
cmp
dec
outs
das
jp
ds
arpl
test
jmp
pop
sub
lea
jne
mov
popf
inc
mov
cli
mov
or
xchg
cmp
in
ret
cdq
pop
fcom
sbb
mov
stos
and
mov
and
cld
dec
pop
pop
enter
movs
out
cmps
clc
(bad)
cmps
fidivr
stos
add
nop
or
nop
or
fwait
add
lea
lods
lods
dec
push
jae
cli
retf
mov
push
inc
inc
pop
je
ret
and
jge
test
fsub
sub
cli
mov
mov
xor
sbb
sbb
mov
jl
and
(bad)
pusha
lea
shl
xchg
jmp
gs
sub
js
imul
cmp
dec
inc
dec
inc
add
hlt
push
pop
(bad)
icebp
imul
sub
pop
mov
add
jae
call
pop
xchg
test
mov
sahf
jg
pop
adc
inc
sahf
loop
or
pop
mov
cdq
rcr
sbb
pop
mov
cmp
ret
dec
cdq
scas
dec
(bad)
pop
push
and
or
sbb
push
aas
mov
dec
iret
add
and
xor
dec
loope
and
imul
shl
xor
iret
jne
jl
and
mov
push
fld1
(bad)
call
mov
mov
test
adc
and
(bad)
or
adc
mov
mov
xchg
js
or
lds
in
cmps
jg
xchg
vpavgb
push
adc
pop
cmp
repnz
inc
cmps
mov
shl
mov
xlat
dec
jp
jne
sbb
scas
pop
ret
dec
call
lahf
sub
frstor
fimul
dec
sysret
dec
or
icebp
inc
mov
in
fwait
push
dec
dec
pop
mov
mov
movs
mov
ret
(bad)
pop
lahf
scas
pop
push
in
and
loope
dec
fnstcw
das
or
test
and
xchg
out
xchg
(bad)
popa
mov
cdq
popa
jns
out
sub
sbb
bound
jl
inc
or
cmp
jge
std
or
icebp
inc
cdq
push
rcr
fstp
sub
loop
cmp
push
sbb
xchg
and
cmp
fdivr
frstor
xchg
xchg
inc
mov
imul
fs
jp
stos
cmp
inc
arpl
outs
mov
xchg
fimul
inc
sahf
dec
loop
mov
xchg
inc
fcmovnbe
sbb
cld
adc
push
popf
rol
mov
mov
cmps
inc
mov
pop
xor
rol
sbb
mov
retf
stc
sub
pop
sub
xor
jb
cs
cmp
out
xchg
push
mov
mov
jp
adc
sti
repz
movs
adc
cmc
push
add
nop
dec
pop
arpl
pop
jl
loopne
mov
jae
ss
xor
imul
test
mov
fild
jbe
cdq
mov
mov
in
pop
xchg
mov
cmp
gs
sub
pop
xor
sbb
imul
shr
sbb
jle
push
inc
cmps
xor
outs
cdq
sbb
pcmpeqb
jae
cwde
dec
jmp
cmp
sub
ror
jmp
jb
out
jmp
popa
push
ins
stos
dec
push
cmp
cmp
mov
jb
mov
call
sar
aaa
or
retf
leave
sub
mov
sub
mov
loope
sub
mov
adc
dec
inc
add
push
mov
ins
xchg
pushf
lea
inc
add
or
inc
nop
out
push
xchg
lods
aam
mov
push
loop
xor
mov
dec
pop
sbb
xor
out
stos
cmp
arpl
je
mov
call
or
pushf
call
addr16
enter
pop
loope
cmp
jae
inc
out
les
add
(bad)
mov
int
jnp
inc
movs
test
test
addr16
cmp
xchg
cmp
jnp
xor
sub
jno
popf
lock
bound
inc
xchg
dec
loope
or
add
rcl
sbb
fst
je
(bad)
pop
cmp
or
pop
scas
jge
and
movs
dec
cmc
shr
fsubr
shl
ret
fwait
pushf
mov
push
xor
jge
outs
fsub
(bad)
xchg
sub
js
repnz
jge
sub
push
dec
popf
hlt
xchg
hlt
and
dec
ss
push
jle
xor
jmp
std
jl
clc
jmp
jbe
mov
nop
test
aas
cmp
pop
fcmovb
sub
retf
or
sub
or
dec
dec
ins
test
cli
mov
outs
xchg
sbb
jge
ss
movs
or
pushf
push
push
sbb
cmps
add
or
or
fnstenv
cmp
arpl
add
mov
mov
inc
mov
fwait
mov
sbb
xor
xchg
mov
jmp
and
sub
fdiv
icebp
or
arpl
and
frstor
inc
cmp
push
push
jae
or
popa
cdq
cmc
push
xchg
adc
or
mov
xor
push
jp
(bad)
repz
fld
movs
xchg
xchg
mov
mov
add
adc
mov
mov
mov
push
jecxz
retf
mov
jnp
or
pusha
fmulp
cmp
test
loope
cmps
call
aad
mov
lea
push
retf
push
call
mov
loope
dec
cs
pop
iret
add
mov
cmps
xchg
cmps
sub
ins
movs
mov
stc
pop
(bad)
outs
pushf
push
sahf
cs
cmps
and
je
rcl
pushf
xor
jg
sbb
jno
nop
jmp
pop
push
sub
mov
cmp
xor
or
shl
mov
or
popf
dec
mov
or
mov
jae
or
dec
or
jp
scas
cmp
xor
dec
dec
and
mov
(bad)
push
stos
jmp
cs
xor
call
pop
xchg
je
(bad)
in
sbb
push
imul
nop
jge
imul
cmp
mov
test
loopne
fldenv
int
jp
pop
cmp
pop
adc
icebp
xor
mov
pop
dec
cmp
les
pop
or
es
enter
cmps
std
jmp
push
ja
lock
or
sbb
jecxz
pop
sub
sbb
(bad)
adc
aaa
and
test
or
or
inc
in
mov
and
push
jae
out
add
push
ds
mov
jg
dec
int
jb
fwait
rcr
dec
les
mov
adc
sti
repz
sub
push
mov
xor
repz
pop
and
sar
mov
xchg
cmp
mov
bound
(bad)
fidivr
test
stos
mov
jecxz
adc
cmp
push
pmaxub
out
std
jae
dec
dec
retf
nop
mov
push
test
mov
push
rol
jge
outs
dec
aas
popa
test
sbb
xlat
mov
sub
jnp
pop
stc
div
scas
inc
inc
jmp
pushf
adc
into
mov
(bad)
sbb
(bad)
jmp
jge
ja
mov
paddusw
into
jmp
scas
mov
jne
jo
cmps
and
xchg
xor
call
inc
dec
and
mov
push
mov
out
int
xor
mov
push
popa
(bad)
adc
mov
in
cli
xor
mov
pop
enter
mov
jne
lea
sbb
mov
sub
jge
cmps
ficomp
adc
dec
fbld
xchg
pop
jo
movs
hlt
mov
xchg
leave
pop
int3
ret
shr
ja
xor
sub
(bad)
dec
pop
or
mov
cli
and
das
out
and
cwde
add
push
lock
hlt
out
out
(bad)
mov
xor
fst
fs
sti
leave
sbb
test
ds
cmps
add
mov
test
inc
lock
cli
icebp
outs
(bad)
cmps
jmp
jbe
push
xchg
ins
mov
pop
xchg
stos
inc
cdq
popa
adc
or
inc
xor
push
xchg
push
mov
nop
xor
jecxz
push
xor
mov
xchg
dec
mov
dec
xchg
and
fistp
xor
and
mov
sub
test
fst
push
jne
push
mov
add
xor
stc
fs
xchg
fcomp
fcom
pop
repnz
inc
jge
clc
fisttp
push
inc
jl
add
push
mov
stos
or
mov
inc
call
out
cmp
std
ins
mov
arpl
jl
xchg
pop
cmp
cmp
push
fdivr
cmp
mov
ret
xchg
shl
and
mov
aaa
sub
jnp
mov
push
mov
movs
inc
repz
aam
test
jmp
cmp
xchg
inc
jg
jle
mov
sti
mov
movs
xchg
out
addr16
js
cmp
scas
rcl
mov
add
in
sub
adc
in
clc
xchg
xlat
cmps
(bad)
sub
stos
adc
sub
pop
jge
pop
jle
jmp
add
adc
xchg
outs
and
bound
inc
jge
stos
popf
es
mov
dec
cmp
jp
mov
(bad)
push
push
and
jmp
fs
out
add
xchg
rol
and
pop
leave
sbb
stos
add
mov
dec
(bad)
xchg
jbe
movs
repnz
xchg
cwde
mov
pop
jns
retf
inc
test
maskmovq
jo
sub
arpl
add
pop
enter
mov
mul
pop
jno
rcr
jns
mov
inc
out
fist
xor
(bad)
call
xor
jne
xchg
xchg
pop
pcmpeqb
mov
(bad)
sahf
nop
addr16
pop
sub
sbb
inc
(bad)
lds
mov
out
retf
jmp
fstp
(bad)
or
sub
les
outs
out
outs
inc
or
stos
xchg
push
push
jno
fisttp
add
(bad)
aad
push
pop
std
out
test
push
(bad)
cmps
das
ret
and
rol
pop
addr16
js
cmp
jle
xchg
push
mov
sbb
sbb
les
push
(bad)
daa
or
pop
icebp
jge
push
adc
sub
data16
push
sbb
fwait
mov
dec
xor
enter
pop
imul
pushf
xlat
mov
les
sub
sbb
jg
pop
pusha
call
addr16
std
sub
sbb
mov
adc
jae
jge
jmp
add
pop
jecxz
popf
fiadd
popf
bound
mov
test
ret
stos
mov
push
xchg
(bad)
mov
lods
sbb
loop
into
mov
fistp
das
neg
jmp
jecxz
fwait
pop
cdq
cmp
std
adc
push
sub
inc
aam
dec
les
dec
inc
test
rcl
mov
and
ja
mov
sahf
mov
cdq
xchg
jbe
dec
ins
(bad)
in
stos
or
cmps
fisttp
push
adc
sbb
scas
push
sbb
add
hlt
adc
xchg
sub
jb
jg
dec
xchg
inc
cmp
adc
inc
test
push
stos
inc
hlt
popa
push
int
adc
scas
add
neg
inc
mov
add
fwait
(bad)
or
cmc
or
mov
inc
inc
imul
cmps
popa
iret
js
sar
adc
jnp
pop
sahf
aas
add
add
ds
and
mov
sar
test
rcl
je
call
add
and
retf
mov
in
jmp
sti
sbb
xlat
into
(bad)
push
movs
lds
xor
cmps
loope
mov
mov
sbb
(bad)
xor
sar
jmp
push
test
(bad)
pop
cs
mov
fnstsw
rcr
fmul
adc
add
sbb
(bad)
jns
jg
je
mov
imul
jge
iret
sahf
and
clc
adc
sbb
out
les
imul
stos
fwait
pop
aas
retf
loope
cmp
lock
(bad)
lock
in
cmp
daa
neg
enter
adc
or
out
sti
pop
jbe
mov
or
rcr
lds
jnp
mov
jp
dec
cmp
sub
cli
push
push
mov
repz
and
ret
rcl
retf
fimul
adc
or
aaa
imul
ss
xor
xlat
cmps
push
and
push
push
fucom
or
(bad)
lods
add
dec
retf
jecxz
(bad)
repnz
xchg
push
sub
out
mov
fmul
out
cmps
aaa
jp
aad
loope
(bad)
(bad)
movs
fwait
imul
mov
cmp
pop
jp
out
sbb
fcmove
cmp
xchg
fwait
xchg
xlat
or
cld
push
lock
cmp
ja
std
std
addr16
mov
imul
pop
pop
sbb
enter
std
js
retf
dec
int
cmp
mov
dec
hlt
outs
jg
pushf
dec
and
push
pushf
add
pop
jmp
xlat
movs
fwait
rol
shl
bound
and
inc
mov
inc
push
in
dec
pop
test
sub
stos
dec
enter
mov
mov
(bad)
cmp
hlt
or
xor
dec
ins
xchg
test
or
ds
xchg
aad
or
and
hlt
jae
aas
fld
jmp
dec
inc
(bad)
pushf
mov
mov
arpl
lock
arpl
jae
inc
jns
inc
cmp
cld
sub
loope
dec
jae
jnp
std
out
inc
and
jns
nop
stos
jmp
mov
jmp
into
mov
lods
ins
rcl
fsubr
sti
mov
or
gs
imul
push
add
xor
mov
push
sar
sub
mul
cwde
xor
pop
cmps
dec
sbb
xchg
dec
push
aam
mov
mov
(bad)
es
or
push
ss
es
sbb
fnstcw
add
dec
inc
cmc
(bad)
pop
pop
mov
bound
ss
ss
add
jmp
scas
outs
rcr
dec
jp
stos
fwait
fwait
mov
jne
push
push
jo
aad
mov
pop
cdq
jle
or
adc
or
retf
xlat
fwait
dec
xor
adc
cmp
cmp
or
lock
mov
jmp
imul
sbb
sub
mov
dec
xchg
pop
dec
test
or
bound
mov
jne
retf
(bad)
pusha
fsubr
inc
xor
ffreep
xchg
and
std
mov
call
mov
int
push
adc
(bad)
mov
and
iret
xor
jmp
xchg
inc
adc
sbb
cmp
std
inc
ins
(bad)
shr
add
xchg
fisub
mov
ss
les
jle
clc
cmp
add
mov
push
pushf
fcomp
in
push
xor
por
hlt
retf
pushf
sbb
jne
(bad)
or
adc
push
ja
loopne
test
gs
dec
daa
mov
jne
lahf
adc
aaa
(bad)
xchg
std
and
ss
inc
sub
sub
or
js
(bad)
(bad)
push
xchg
fnstsw
jle
shl
sub
jo
jns
movs
mov
push
not
and
les
xchg
xlat
(bad)
pusha
adc
xchg
sbb
cmp
or
aad
mov
mov
mov
ror
pushf
enter
dec
cmp
sbb
and
or
(bad)
fidiv
clc
lahf
lock
je
jmp
je
mov
aam
mov
mov
mov
mov
retf
aaa
out
dec
or
mov
dec
push
adc
adc
adc
sub
xlat
rol
popf
mov
pop
sbb
dec
leave
ja
ss
push
ja
fsub
movs
retf
push
outs
mov
adc
aam
jge
add
dec
aam
sbb
jmp
std
mov
xchg
ret
push
fbstp
mov
sbb
xchg
push
xlat
push
call
cwde
cwde
gs
xchg
sbb
stos
out
xchg
in
data16
push
xchg
fnstcw
ja
pop
mov
inc
mov
lea
ret
lods
loop
sbb
push
push
int
test
or
outs
icebp
and
cmps
loopne
mov
mov
fcom
in
fcos
cmp
cmp
pop
fimul
lahf
popf
push
mov
xchg
aad
dec
gs
pop
adc
dec
add
ja
mov
clc
push
push
and
jns
mov
scas
or
mov
inc
scas
mov
cdq
push
sbb
or
loopne
test
mov
jmp
adc
fnsave
fsubrp
sahf
dec
mov
bound
jo
sbb
inc
xchg
sub
test
or
xor
jne
loope
adc
mov
jno
std
or
mov
lea
cmp
mov
add
fild
sub
and
repz
aas
push
aam
xchg
into
imul
or
pop
int
xchg
out
or
xor
jge
stc
aaa
pushf
fucomip
mov
pop
and
repz
enter
cmp
ret
dec
jmp
mov
out
sar
gs
dec
out
ret
sub
xchg
mov
je
mov
mov
inc
or
inc
xchg
push
ret
and
pop
adc
sub
mov
mov
lods
popf
jae
mov
mov
arpl
fist
ja
mov
test
loop
mov
mov
sar
stos
rcr
test
pop
sub
dec
xor
mov
sahf
sub
inc
and
jge
ins
adc
fmul
inc
mov
aad
enter
xor
(bad)
adc
cmp
jmp
dec
fsub
ss
sub
mov
aam
rcl
sub
pop
mov
rcr
sub
loope
psllw
js
ror
stos
mov
retf
repz
in
xchg
test
mov
pop
std
cli
add
ret
jbe
push
cwde
sbb
mov
enter
push
pop
adc
call
shl
sbb
dec
lods
inc
push
arpl
popa
mov
jg
pop
fild
adc
dec
push
sbb
ins
mov
dec
pop
out
sub
or
pop
fsubr
jmp
xrelease
sub
stos
add
dec
and
leave
or
fxch
mov
pslld
pop
jb
sti
cdq
cmp
mov
loop
xchg
inc
leave
cmp
data16
xchg
inc
sub
push
test
mov
test
daa
cs
push
nop
int3
ins
pop
mov
push
and
adc
sbb
sub
adc
sbb
or
jae
div
sbb
pop
dec
push
add
fdivr
sub
(bad)
call
popa
sub
jno
xchg
cmp
leave
(bad)
mov
adc
outs
lock
stos
inc
add
in
je
js
pop
push
cmp
pop
sub
xor
in
cmp
and
cmp
loop
mov
gs
outs
mov
lods
pop
sar
inc
pop
push
or
out
jmp
or
dec
jmp
ja
adc
push
jecxz
lahf
jae
and
out
repnz
(bad)
pop
imul
fldl2t
xor
mov
sbb
fild
pop
lds
mov
mov
inc
sbb
or
or
adc
sub
iret
outs
mov
call
cdq
jecxz
jp
sbb
adc
popf
(bad)
leave
cdq
ret
xor
movs
mov
mov
test
and
jne
inc
and
ret
push
pop
and
dec
loope
imul
lock
and
and
sub
jb
test
cmp
repnz
loopne
jmp
fwait
test
sbb
pop
not
xchg
jns
add
adc
les
and
rcr
mov
or
xchg
ja
popf
sub
jp
iret
in
ret
mov
xchg
in
mov
mov
or
test
lock
das
std
nop
mov
lods
stc
mov
xchg
fstp
lahf
out
dec
push
leave
xchg
ret
adc
repz
sub
mov
mov
mov
xor
js
inc
sbb
push
mov
pop
loopne
std
cmp
cmc
push
push
mov
mov
neg
xor
or
icebp
and
mov
leave
rol
mov
fld
mov
sbb
mov
mov
ror
rcl
sub
push
xor
dec
and
sbb
rol
xchg
and
adc
cmp
pop
inc
je
dec
jmp
mov
jno
dec
add
mov
pushf
out
mov
out
adc
test
into
mul
call
mov
int
fidiv
adc
fld
add
loopne
add
mov
dec
mov
fdiv
jecxz
sub
dec
mov
or
jmp
sbb
(bad)
xchg
push
fs
cmc
js
add
loop
rol
hlt
addr16
test
sub
aaa
add
dec
sub
xor
xchg
push
sbb
icebp
cmps
call
lds
ins
gs
inc
int3
sub
fcom
push
imul
jl
add
fs
and
sub
pop
(bad)
push
jnp
imul
mov
and
sti
mov
ret
test
out
ins
mov
push
mov
out
sbb
sub
(bad)
int
js
push
mov
jmp
mov
jo
mov
push
iret
ret
push
pop
adc
pop
lea
icebp
push
pop
push
mov
push
loop
jb
mov
sbb
pop
scas
adc
sbb
push
addr16
dec
fistp
inc
movs
sbb
fild
sahf
jle
mov
jmp
sub
add
pusha
xor
movs
das
test
fcom
jno
cwde
push
stos
ins
xor
into
outs
pop
cmps
add
sub
sbb
data16
pop
popf
jge
stos
add
rcr
xchg
push
in
cmps
sbb
data16
jmp
repz
movs
xchg
(bad)
sti
cmps
mov
pop
popf
mov
and
xor
dec
mov
push
stc
cmc
cmps
mov
out
add
fucomip
movhps
add
pushf
add
sbb
sbb
lock
dec
adc
leave
pop
cmp
int3
mov
scas
stos
sti
iret
addr16
fmulp
pop
in
xchg
aad
sbb
std
pusha
push
iret
scas
fst
mov
sbb
push
or
into
lock
jmp
mov
sbb
or
mov
into
mov
shr
mov
pop
fdiv
in
xchg
in
icebp
loop
out
in
and
mov
dec
out
or
aad
jno
add
and
movs
and
scas
test
xlat
cmp
jecxz
jae
sbb
out
arpl
or
pop
das
movs
aaa
sbb
inc
dec
js
xlat
(bad)
pop
stos
js
or
rcr
xchg
ret
mov
lock
cs
adc
sub
test
jl
xor
dec
popf
mov
mov
retf
xchg
mov
xor
or
mov
push
mov
fld
ret
repnz
std
cmps
dec
gs
or
fisttp
mov
and
out
mov
sbb
mov
pushf
in
push
fisttp
lds
es
movs
jmp
je
or
mov
in
pop
cmp
scas
ret
ficom
adc
pop
pop
jo
jbe
jmp
xor
retf
mov
shl
jae
movs
add
sbb
das
call
shl
pushf
inc
jmp
ins
mov
dec
lahf
cmp
xchg
js
outs
adc
inc
jno
ins
int
bnd
sbb
jnp
das
pushf
dec
xchg
(bad)
std
fisttp
add
pop
aas
das
jae
loop
sahf
sbb
jnp
sbb
or
outs
cmc
cmp
int3
and
ds
push
scas
sub
daa
xor
mov
(bad)
pop
jbe
(bad)
push
iret
daa
and
(bad)
hlt
fs
movs
mov
push
cli
sub
ins
out
xor
(bad)
into
movs
sar
lahf
out
inc
or
push
sub
ds
kmovb
jl
cmp
xor
jl
ds
mov
jno
loope
leave
and
addr16
aad
scas
iret
punpckhbw
sub
inc
test
repnz
and
inc
pop
inc
adc
or
pop
lds
popf
and
jae
test
retf
hlt
int
lds
sbb
or
add
mov
xchg
dec
clc
and
or
(bad)
adc
sti
stos
push
xchg
cmps
(bad)
xchg
movs
lea
pop
stc
xchg
es
xor
lea
outs
pop
stc
pusha
imul
cmp
sub
sub
mov
enter
mov
rol
push
cmp
test
scas
or
call
lds
repnz
ret
pushf
movhps
fcomp
test
arpl
sbb
lds
call
xor
lahf
and
mov
pusha
mov
xor
xchg
(bad)
jg
cmp
mov
mov
test
bound
out
and
sbb
rcl
add
jmp
add
adc
mov
mov
jl
push
stc
pop
ds
cmp
imul
pushf
aam
dec
mov
mov
or
stos
in
popa
in
test
adc
lds
jo
sahf
les
fbld
add
sub
out
repz
imul
imul
push
mov
pop
push
cmp
iret
mul
mov
aas
inc
jns
add
popa
jne
push
jb
sub
cwde
mov
and
(bad)
jg
inc
xor
sub
cmps
nop
pop
mov
or
pop
mov
cmps
ror
jmp
rcl
inc
xchg
adc
adc
mov
aas
imul
add
sbb
add
sbb
call
push
xor
jmp
mov
fidiv
rcl
ror
adc
lock
push
sub
ror
and
xchg
jmp
out
cld
cmp
xor
and
in
test
cmps
xor
xlat
lock
xlat
in
cmc
jnp
(bad)
xor
push
out
sbb
add
pushf
test
add
pop
pop
iret
(bad)
mov
sub
add
cmp
test
pop
int3
pmullw
mov
xchg
pop
mov
mov
jbe
mov
test
adc
mov
add
je
cmps
mov
or
cmps
inc
inc
pop
or
push
mov
dec
movs
mov
cmp
test
jmp
mov
cld
xchg
loopne
cmp
loope
call
add
and
adc
adc
dec
cmps
sub
adc
jo
push
test
mov
push
cmps
scas
pop
jnp
mov
(bad)
mov
lds
mov
(bad)
mov
sub
push
in
hlt
jnp
dec
and
sub
jbe
or
sbb
loop
xor
out
sub
das
cs
aad
bnd
stos
xchg
mov
adc
dec
movs
push
jp
stc
mov
or
dec
cmp
mov
lea
xchg
shl
out
cld
mov
xor
pop
lods
test
xor
outs
cmp
(bad)
call
xchg
xchg
cli
lods
imul
movs
test
nop
stos
outs
enter
pop
xchg
jge
dec
outs
mov
test
repz
cwde
dec
xchg
adc
test
aad
ds
xor
cmp
out
add
movs
add
clc
pushf
aas
shr
ins
xchg
pop
adc
fcomip
xchg
mov
sti
jg
push
jno
stos
ins
shl
imul
dec
loop
sbb
add
aaa
and
adc
fwait
int
imul
add
fwait
in
ud0
xchg
(bad)
(bad)
imul
loope
xor
stc
inc
sub
imul
jno
retf
hlt
jns
mov
lods
(bad)
addr16
sub
clc
mov
into
out
icebp
push
test
lds
pop
out
ss
(bad)
xor
js
call
dec
mov
hlt
pop
add
sahf
sub
repz
gs
cmps
cs
stc
sbb
cmps
and
mov
movs
test
nop
dec
es
fbstp
addr16
mov
jg
mov
fbld
test
dec
dec
or
push
mov
fcom
in
mov
pop
int
push
and
sahf
dec
xchg
push
pop
push
icebp
(bad)
inc
enter
lods
cmps
int
repz
fist
fimul
add
jmp
clc
addr16
push
and
mov
icebp
test
jmp
aad
data16
mov
xchg
lea
cmc
dec
cmp
sbb
xor
mov
or
fucomip
add
mov
test
inc
xchg
dec
push
push
ret
mov
clc
pusha
call
js
cmp
sub
push
jge
mov
loope
cmp
fcmovnb
retw
inc
and
daa
or
dec
mov
mov
cmp
fcom
sub
and
sub
cmps
fstp
inc
xor
pop
out
pop
out
mov
xchg
jb
add
jnp
jmp
sub
test
test
jnp
mov
inc
add
into
xchg
inc
es
and
js
fdiv
sub
jns
and
outs
xchg
adc
dec
inc
ret
repz
mov
call
(bad)
call
popf
inc
push
pop
data16
xchg
call
faddp
bound
or
loope
mov
pop
fadd
pop
movs
arpl
call
mov
push
adc
or
push
test
shr
addr16
ins
add
loopne
sbb
aaa
movs
xchg
mov
(bad)
aaa
lods
mov
xor
retf
add
or
ficom
imul
and
mov
push
js
mov
fisttp
sbb
popa
and
inc
out
mov
mov
pushw
xchg
dec
dec
nop
inc
dec
and
clc
add
or
dec
push
or
in
fldenv
jl
cmps
adc
pop
pop
ret
mov
mov
jl
cmp
add
mov
pop
mov
(bad)
dec
scas
pop
cmps
add
ss
fcmovnb
mov
or
push
adc
shl
dec
test
test
mov
jnp
push
xchg
je
or
and
cmp
mov
dec
inc
xchg
aam
mov
push
bound
xor
and
ins
scas
popa
je
inc
jmp
xlat
jge
jo
add
repnz
rol
jg
and
inc
gs
mov
dec
jns
jle
dec
xor
lds
dec
or
jmp
inc
mov
repz
adc
push
mov
in
jecxz
test
test
pop
inc
mov
cmp
(bad)
and
pop
sbb
push
lods
sahf
push
dec
aas
mov
dec
mov
dec
outs
xor
das
jge
push
cmp
dec
jmp
cmp
adc
sbb
mov
ror
inc
lahf
xchg
fnsave
mov
call
jnp
aam
pop
test
cmp
aad
fisttp
imul
cs
mov
add
addr16
jns
test
mov
add
pusha
pop
mov
mov
dec
and
lds
xchg
pop
sub
inc
es
les
jnp
loopne
(bad)
aad
push
outs
cmps
pop
push
jno
mov
fdiv
jo
cdq
shl
jmp
into
cwde
adc
lea
push
inc
outs
push
into
outs
dec
fs
dec
xchg
push
ret
out
inc
fst
mov
jge
pop
scas
pop
pop
push
add
(bad)
cmp
mov
ins
xchg
ins
mov
xchg
dec
xchg
jbe
rol
mov
leave
movs
loope
lods
gs
cdq
in
es
pop
and
sub
xor
mov
call
(bad)
sahf
scas
or
cmp
bound
setg
pop
test
(bad)
in
or
xor
mov
mov
pop
or
xlat
(bad)
cmc
setno
aas
and
mov
jmp
pop
fidiv
ja
adc
lahf
test
cmc
mov
leave
sahf
dec
repz
out
mov
add
mov
ret
in
imul
push
jmp
or
mov
xor
in
sbb
das
and
imul
sahf
mov
mov
cli
sbb
idiv
mov
mov
and
sahf
js
imul
mov
adc
adc
push
test
aam
jg
sub
add
push
or
out
scas
stc
movs
pop
fcomip
sbb
bound
sub
ret
xchg
add
idiv
inc
xor
sub
jns
jmp
jecxz
or
or
stos
out
or
jne
pop
in
mov
rcl
test
mov
jg
int
adc
dec
mov
rcl
aad
jl
cmp
cmps
fwait
icebp
push
leave
das
cmc
push
and
ins
and
pop
sub
push
cwde
jbe
test
stc
retf
sahf
stos
xchg
pop
loopne
arpl
(bad)
aas
mov
mov
fnsave
ins
loope
and
test
sub
shl
std
sub
movs
xchg
sar
cmc
jbe
test
add
jle
sti
inc
mov
push
out
and
pusha
cmp
loop
les
out
test
pmaxsw
push
add
rcr
push
push
lds
push
lahf
sub
sub
mov
push
retf
pop
mov
or
sub
adc
sti
cmps
mov
jle
sbb
in
inc
fidiv
add
lea
fwait
or
add
int
cmp
call
jno
cwde
(bad)
fs
jnp
ins
xlat
xchg
or
enter
cdq
push
mov
cmp
push
adc
lods
mov
jnp
pop
push
(bad)
lods
popf
int
sub
cdq
popa
push
sbb
xchg
adc
fistp
cmp
fild
fild
mov
pop
in
int
iret
pushf
data16
aas
into
mov
inc
and
shl
fs
jae
adc
and
and
cld
sbb
add
xchg
cs
jbe
in
(bad)
fnsave
or
jne
mov
ror
cmp
retf
cmps
dec
sub
inc
mov
pop
mov
ret
xchg
pop
jnp
xchg
retf
or
adc
sub
movs
jns
shl
enter
fdiv
inc
mov
das
xlat
rcr
(bad)
in
jecxz
xchg
xor
jg
stc
mov
stos
and
div
mov
fst
jmp
push
sbb
sar
das
test
(bad)
in
jp
outs
jle
es
gs
aas
sbb
adc
adc
adc
xchg
rol
jb
lahf
push
lea
scas
inc
sti
cmp
(bad)
push
dec
and
mov
xchg
scas
sbb
test
ins
(bad)
inc
stos
xchg
rcr
jge
mov
pop
and
add
sbb
pop
bnd
mov
adc
push
add
(bad)
sbb
fcomi
mov
add
xlat
aam
inc
ds
mov
lock
adc
lock
mov
mov
aam
(bad)
ins
imul
enter
std
jbe
mov
je
jmp
jge
ss
std
cld
add
xchg
and
fiadd
xlat
xor
push
cmp
aad
rcl
mov
xchg
out
in
sub
inc
jnp
sbb
jmp
lds
adc
mov
ja
push
xor
push
dec
add
cli
xchg
xchg
cwde
pop
pop
mov
push
mov
sub
xchg
scas
cwde
jno
jl
test
xchg
cmp
loopne
sub
dec
jle
popa
cmps
outs
jbe
lock
ret
dec
ss
daa
push
dec
jg
ret
ins
jmp
dec
pushf
aaa
fisttp
pusha
les
add
imul
cwde
ret
stos
mov
enter
mov
movs
ds
sub
pop
jno
cmp
hlt
mov
add
repnz
shl
test
or
dec
inc
fild
sbb
mov
scas
sub
ss
jle
cmp
stc
mov
stc
shl
repz
pop
aas
push
xor
and
mov
lds
jno
rcl
ret
jo
push
xlat
rcr
dec
pop
cmp
fadd
push
and
arpl
rcr
mov
mov
sub
cli
sti
dec
jo
pmulhuw
shl
push
loopne
cwde
dec
pop
shl
bound
push
add
push
mov
jmp
in
in
jbe
jns
jl
jns
rcr
lea
ret
sub
lock
adc
es
lock
in
cmp
pop
pusha
cmp
xor
test
aam
or
push
dec
and
jle
repz
sub
and
pop
wbinvd
retf
sub
pop
pop
cmc
mov
sub
out
(bad)
sbb
jmp
push
ds
mov
mov
not
pop
xor
leave
dec
dec
pop
jp
pop
bound
mov
jbe
in
test
ds
mov
xor
imul
cmp
loopne
stos
sahf
mov
aam
cmps
pop
mov
ffreep
sub
sbb
mov
cmp
popf
dec
rcr
dec
leave
in
(bad)
mov
jo
mov
fcom
or
push
and
push
or
faddp
push
mul
aas
jne
neg
cmps
(bad)
and
test
(bad)
mov
or
jb
fisub
xor
data16
prefetchnta
jbe
push
xchg
adc
mov
icebp
fsubr
cwde
push
mov
sbb
xchg
cmps
and
push
scas
jns
lock
sub
push
jl
push
pop
ret
js
and
cmp
aam
cli
dec
adc
inc
mov
pop
cmps
retf
push
adc
fisub
adc
jl
push
sbb
mov
push
hlt
cmp
mov
daa
and
mov
nop
xor
pop
cwde
adc
outs
pop
cld
ja
lods
xchg
arpl
pop
dec
xor
(bad)
movs
lods
jmp
mov
and
inc
mov
(bad)
mov
idiv
add
push
mov
jbe
hlt
movs
pop
stos
into
mov
stc
xor
sbb
mov
fdiv
nop
(bad)
mov
ret
add
nop
scas
jo
out
dec
mov
mov
(bad)
mov
mov
not
hlt
mov
jmp
mov
movs
test
hlt
cmps
mov
imul
sbb
gs
stc
pop
dec
adc
in
call
mov
ja
jl
out
mov
add
add
cmps
sti
sub
add
sub
sub
jge
movs
cmp
xchg
or
mov
jo
mul
aad
fwait
(bad)
and
and
push
sub
xchg
jne
xchg
pop
std
std
mov
cmp
mov
mov
adc
adc
lods
inc
xor
adc
test
je
dec
fneni(8087
fimul
(bad)
rcl
rol
xor
add
cmps
mov
push
inc
ins
xchg
enter
sti
jne
gs
sub
mov
jle
lods
push
int3
or
cmp
push
popf
dec
mov
ret
jo
xor
xor
add
push
add
mov
cmc
and
mov
xor
inc
in
mov
out
inc
cmps
ret
fisubr
enter
repnz
and
dec
xchg
pop
mov
xchg
mov
retf
gs
sahf
leave
daa
ror
add
je
in
rcl
or
lods
add
adc
push
vphadddq
into
test
movs
xchg
pop
or
retf
sbb
pop
mov
pop
mov
bound
xor
or
(bad)
jne
movs
mov
and
cmps
pusha
xor
push
jo
push
inc
loop
mov
ja
xchg
add
(bad)
retf
imul
xchg
(bad)
mul
mov
mov
data16
xor
sar
enter
(bad)
mov
mov
dec
jecxz
shl
fistp
or
fmul
and
and
pop
push
outs
add
leave
pop
xchg
sub
adc
fld
(bad)
sub
jnp
pop
push
xchg
in
jnp
out
sub
xchg
sub
xchg
pop
sub
xchg
(bad)
test
sti
hlt
mov
and
fsub
fcomp
pop
sub
ins
into
dec
int3
jp
jae
arpl
repnz
arpl
sub
dec
or
cmovl
aam
shl
jle
inc
mov
jbe
js
(bad)
fdiv
cmc
pop
xchg
mov
and
pop
mov
arpl
pop
stos
and
aaa
push
fsubp
test
xchg
ret
ins
fwait
xor
dec
in
enter
jmp
rol
push
jbe
sub
repz
sub
retf
cmp
push
push
xor
pop
sbb
fisttp
jne
call
scas
adc
and
ss
out
adc
push
retf
sub
sar
xchg
jecxz
cmps
pop
cdq
es
jmp
scas
cld
cmp
dec
fld
fidiv
mov
retf
retf
and
cdq
out
xchg
lods
bound
stos
stos
jg
mov
gs
out
aam
repz
imul
imul
in
sub
mov
fcomp
pop
ins
scas
(bad)
push
xchg
sub
fs
(bad)
out
in
xchg
in
scas
pop
jnp
mov
inc
inc
(bad)
lea
jge
or
int
jo
inc
mov
pop
fsub
inc
into
fwait
(bad)
fcomp
xor
jno
movs
push
bound
cs
mov
cmp
mov
sahf
xor
pushf
movs
or
daa
cmp
and
push
xchg
loop
cmp
jae
cmp
stos
in
dec
lea
xor
jp
mov
rcl
data16
fadd
xchg
out
es
(bad)
cmp
xchg
or
mov
mov
sahf
fisttp
test
(bad)
(bad)
pusha
adc
je
sti
sbb
out
mov
call
shl
jbe
mov
scas
lea
mov
adc
das
inc
pop
mov
stc
into
push
shr
pushf
pop
or
movs
lods
imul
pusha
mov
pop
add
xchg
test
mov
lods
clc
out
or
or
fwait
inc
movs
push
hlt
mov
icebp
pop
push
mov
pusha
adc
mov
xchg
xor
repz
adc
addr16
and
ds
fistp
iret
vpalignr
(bad)
lods
(bad)
sar
sti
or
(bad)
inc
mov
test
inc
or
or
xchg
dec
arpl
pop
(bad)
sub
repz
inc
pop
mov
mov
fild
fcomp
cmp
dec
jecxz
mov
out
bnd
adc
jno
ret
ins
in
jno
mov
mov
(bad)
jmp
loop
in
jb
or
add
jecxz
inc
mov
and
ror
call
adc
arpl
jbe
pop
outs
fsubr
dec
sbb
jl
aam
lds
or
or
(bad)
add
sbb
sub
test
inc
popf
and
into
les
rcr
leave
dec
xor
pop
inc
push
mov
les
mov
mov
in
iret
push
mov
adc
or
fwait
jns
pop
push
cmp
mov
adc
aam
shl
aam
sub
mov
push
jnp
adc
cmp
mov
add
fild
in
mov
stos
stos
mov
cmp
lea
jne
mov
add
and
xchg
pop
fimul
lods
frstor
lods
add
dec
or
and
pop
enter
btc
jmp
jo
push
cmp
or
lock
jmp
test
push
scas
imul
cmc
shl
jecxz
mov
jnp
ss
scas
xchg
sbb
cld
mov
sbb
jle
ds
mov
ins
xchg
push
mov
adc
sbb
sbb
xchg
sbb
rcl
pushf
push
mov
pusha
add
repz
cmp
dec
(bad)
pop
aaa
out
icebp
xchg
addr16
pop
pop
push
or
and
into
lds
(bad)
add
mul
fsubr
push
fadd
aam
dec
add
sub
fdivr
sub
movs
jecxz
mov
es
(bad)
js
mov
push
stc
jnp
xor
rcr
mov
jp
stos
pusha
adc
ins
inc
jns
rol
pop
cmps
xor
adc
fwait
and
adc
dec
loop
pop
mov
stos
(bad)
dec
xadd
lock
lds
fiadd
adc
mov
call
ret
xor
xor
dec
stos
cld
movs
int3
jbe
outs
mov
js
jmp
inc
pop
sbb
cli
push
sub
or
fcmovnu
push
test
xchg
sub
xchg
clc
push
and
sti
jle
jb
xchg
js
scas
gs
fwait
adc
jnp
xchg
mov
jmp
cli
push
pop
je
sub
ds
jecxz
xor
popa
ins
add
jmp
sub
mov
xor
jo
mul
(bad)
pop
es
ret
inc
ror
or
ds
cmp
out
xor
add
test
test
nop
inc
adc
test
mov
adc
out
jl
xor
lods
dec
(bad)
ins
(bad)
lock
nop
or
jnp
cmps
scas
sti
fdivrp
add
into
sbb
pushf
cmp
stc
pop
or
mov
jno
(bad)
daa
mov
jo
aas
out
push
sbb
xchg
jb
cld
cmc
fiadd
adc
mov
fcomp
jns
into
sbb
aad
xchg
adc
push
shl
test
mov
fwait
hlt
(bad)
pop
test
sbb
mov
frstor
rcr
icebp
push
aas
dec
mov
mov
(bad)
sbb
mov
nop
adc
pop
jl
lea
mov
jmp
pop
pushf
mov
xchg
inc
mov
mov
les
xor
stos
sar
xlat
aam
in
mov
fdiv
in
sub
not
in
movs
mov
movs
and
add
jnp
test
push
and
pop
je
mov
jmp
jle
add
or
sbb
push
add
xchg
inc
jnp
sbb
sahf
push
hlt
dec
sub
cmp
retf
mov
clc
add
movs
and
or
hlt
inc
ret
or
cmp
repz
push
or
jmp
fnstenv
jmp
xchg
mov
pop
mov
mov
stos
and
in
(bad)
jns
lock
xchg
shl
jmp
add
xchg
fwait
bound
(bad)
outs
adc
push
imul
xor
into
addr16
xor
loopne
aam
jg
data16
pop
mov
(bad)
jmp
cs
push
pushf
dec
push
and
jns
scas
rcl
jb
inc
movs
ss
cmp
iret
xor
fbld
add
and
gs
rcl
repz
loop
loop
jae
sub
fisttp
cmp
xchg
shr
js
pop
jmp
or
jle
sub
leave
scas
jnp
out
std
jnp
sub
jmp
adc
pop
fwait
jne
jmp
enter
inc
out
jmp
aas
(bad)
add
shl
xchg
retf
lods
fcom
push
cmp
push
outs
or
shl
lds
pushf
repz
cld
daa
not
inc
ss
mov
out
les
pop
mov
adc
mov
xchg
or
loopne
jnp
gs
mov
out
jp
lods
sub
xchg
add
aad
stos
pop
fidivr
data16
push
xor
mov
pop
mov
mov
clc
and
shl
fisubr
jge
sbb
mov
pop
jg
leave
pushw
cmc
push
sub
pop
adc
xchg
ins
lods
dec
adc
(bad)
xchg
xor
inc
push
ffreep
push
xchg
clc
xchg
or
and
xchg
test
add
std
std
adc
jg
out
inc
pop
in
retf
inc
push
repnz
scas
mov
pop
stos
pop
push
mov
xchg
or
dec
jo
loop
inc
aam
mov
inc
dec
dec
inc
fstp
xchg
loop
cdq
div
int
dec
hlt
add
jp
lods
outs
add
and
inc
add
or
sahf
scas
sbb
cli
cmp
add
bound
fild
pop
aad
ins
push
dec
gs
stos
jne
pop
in
adc
outs
pushf
dec
xchg
pop
dec
mov
fs
int3
add
or
sub
xchg
xchg
jbe
nop
jg
jns
dec
imul
push
(bad)
int
jnp
scas
and
dec
xor
inc
cmc
imul
push
fisttp
aam
add
rcr
adc
mov
test
addr16
cmp
in
sbb
sbb
ucomiss
in
lods
stc
add
scas
cdq
mov
ficom
and
add
mov
add
xor
pop
jg
cmp
sub
cmc
xchg
pushf
rol
sar
icebp
adc
adc
fmul
inc
inc
test
mov
push
adc
imul
inc
inc
and
in
lock
inc
rol
popf
(bad)
sbb
jo
nop
xor
(bad)
sub
and
ss
add
in
(bad)
(bad)
adc
ret
mov
stos
dec
push
movs
js
movs
add
mov
xchg
scas
jge
retf
cmc
push
mov
jae
jecxz
cmp
and
and
ror
sti
adc
inc
call
cmp
gs
leave
repnz
ins
inc
andnps
inc
pop
dec
mov
ins
clc
fisubr
add
mov
ret
and
loop
movhps
xor
push
(bad)
sub
pop
jb
jns
jb
lods
arpl
retf
cmp
sahf
or
test
xor
loopne
mov
rcr
push
pop
les
(bad)
clc
sbb
pop
stos
cs
test
or
jp
aad
retf
neg
xlat
jns
sbb
out
xchg
jmp
xchg
ins
out
out
neg
cld
mov
je
adc
sbb
xchg
and
neg
lahf
pop
add
daa
fstp
jae
pop
lds
cdq
jmp
add
push
pop
fisubr
scas
dec
and
mov
dec
add
int
fisubr
pop
mov
lds
sbb
cmp
js
push
hlt
inc
dec
ss
cmps
mov
out
out
xchg
call
xchg
sub
add
inc
stos
fstp
sti
adc
sub
add
cmp
clc
fwait
arpl
(bad)
fbstp
jns
and
cld
popf
rol
pop
(bad)
xor
push
push
div
stc
sar
pop
mov
mov
popa
mov
mov
sub
mov
xor
ins
cmp
(bad)
loopne
jecxz
and
pop
fwait
mov
nop
xor
(bad)
test
mov
mov
mov
pushf
or
inc
xchg
leave
out
jmp
(bad)
bound
push
mov
inc
push
jle
fstp
stc
xchg
pop
xacquire
sbb
adc
pop
mov
dec
jmp
xchg
and
sub
(bad)
sbb
mov
cli
std
mov
xchg
push
div
jmp
js
sbb
pop
xor
jo
jne
xchg
ja
out
pop
dec
daa
inc
push
xchg
mov
jo
out
inc
sub
or
pushf
or
addr16
out
sbb
cmp
into
hlt
ror
jbe
add
xchg
pop
icebp
imul
(bad)
fmul
xchg
xchg
pop
xor
add
push
mov
cli
cwde
pop
jnp
jbe
retf
and
je
enter
mov
or
dec
push
(bad)
stos
and
mov
mov
pop
cmp
cmp
adc
inc
aam
(bad)
repz
xchg
inc
xchg
jae
mov
add
inc
jne
mov
dec
js
call
test
lea
aam
pop
pxor
pop
mov
push
ret
cld
in
popf
cmc
push
les
enter
popa
dec
push
or
pop
ins
and
mov
(bad)
sub
test
cs
add
inc
sahf
into
push
mov
ds
sbb
iret
ins
fdivrp
ret
scas
shl
adc
into
cmp
add
pop
fstp
cmps
lea
inc
mov
ror
pop
(bad)
sub
jbe
mov
xor
push
ja
scas
es
sbb
adc
test
cmp
mov
retf
cmc
call
jae
movs
mov
aaa
and
xchg
imul
imul
dec
outs
rcl
imul
mov
inc
pop
inc
sti
sbb
cmc
cli
xor
popa
js
jmp
sub
es
add
push
call
ss
movs
std
mov
rol
test
inc
push
adc
push
mov
aam
and
div
adc
in
sbb
rcl
or
inc
retf
cwde
mov
addr16
call
inc
(bad)
xchg
imul
and
cmps
fistp
cmp
mov
call
mov
sub
push
lds
jae
fidiv
jg
jp
sub
inc
pushf
(bad)
adc
aam
push
or
nop
test
cdq
cmp
pop
cmps
dec
into
arpl
mov
jg
jecxz
push
popa
adc
and
aam
push
test
add
shl
push
clc
push
cld
xchg
mov
jb
mov
in
adc
lods
mov
sbb
pop
dec
jae
cmp
sti
out
(bad)
fist
jae
mov
xchg
xor
sub
sbb
inc
push
and
xchg
sub
sub
fdivr
std
ror
and
xchg
xor
jle
pop
sbb
(bad)
scas
fidivr
sbb
jae
sub
sbb
hlt
lods
(bad)
cs
idiv
and
mov
push
xchg
scas
add
(bad)
movs
dec
add
xor
lods
call
mov
mov
scas
mov
sar
jle
mov
pop
pop
leave
rcr
or
lock
(bad)
xchg
js
pushf
leave
mov
jmp
test
push
adc
scas
jl
dec
mov
aam
mov
adc
out
jbe
fadd
mov
pop
je
pushf
movs
dec
sub
mov
push
push
push
jp
inc
hlt
cwde
mov
and
pop
sub
addr16
retf
push
mov
xor
in
ffreep
xor
xor
or
sbb
cdq
fst
jae
add
(bad)
xchg
mov
push
xchg
xchg
js
jmp
fs
or
ins
mov
sbb
movs
push
jg
or
mov
or
mov
jo
pop
cmp
dec
pop
cdq
cmp
mov
inc
jge
pop
sbb
sahf
movs
test
jb
pop
fdiv
mov
xchg
jecxz
sar
jge
adc
dec
punpcklbw
ret
xchg
xchg
push
repnz
aad
fisttp
sbb
inc
dec
and
xor
icebp
dec
jbe
pop
xor
dec
mov
or
test
ja
jle
inc
xor
jg
sbb
in
xor
mov
and
inc
dec
call
mov
out
push
jmp
and
scas
sub
mov
cld
sbb
dec
pop
scas
mov
daa
push
iret
pop
and
mov
clc
rcr
jno
sub
not
mov
mov
shl
adc
fwait
push
mov
adc
je
xor
or
jae
arpl
je
or
sbb
aaa
push
pop
movs
fimul
out
cdq
loopne
cs
fsubr
std
ficom
mov
mov
pop
xlat
pusha
in
imul
adc
xchg
dec
hlt
cmp
stc
cmp
cmp
push
rcr
lahf
movs
sbb
sbb
xor
mov
adc
push
or
mov
dec
nop
scas
movs
ror
aam
sbb
pusha
xchg
test
fbld
icebp
mov
add
or
or
cmp
ja
rol
jp
test
lods
retf
or
mov
fadd
jle
icebp
es
scas
retf
sub
xlat
clc
fneni(8087
lods
mov
leave
cmp
shr
fidivr
retf
push
jmp
ret
das
inc
inc
imul
loop
jle
adc
mov
ror
mov
out
xor
mov
and
or
mul
pop
les
sbb
xor
mov
addr16
push
shl
or
movs
sbb
inc
mov
sub
push
jno
stc
out
fnsave
ss
fdivr
in
lea
lea
dec
cmp
dec
sbb
push
mov
in
xor
loopne
sbb
add
adc
sbb
stos
dec
gs
stos
mov
jmp
cmp
mov
add
movs
stos
loope
out
aas
and
fs
sahf
test
cmovs
xchg
call
inc
add
outs
pop
fs
jmp
mov
cld
out
dec
out
sbb
fldcw
push
dec
sub
xchg
xor
movs
mov
xor
push
shl
add
test
ret
(bad)
cmp
fucomp
popf
mov
pop
hlt
aaa
and
dec
fwait
mov
rcr
adc
adc
clc
iret
jb
cmp
ret
mov
repz
xor
std
movs
mov
js
sbb
dec
sub
pop
jb
scas
in
adc
mov
es
mov
push
push
fs
aas
sub
xchg
add
cs
addr16
lahf
(bad)
loopne
xchg
movq
adc
adc
sub
and
cli
jl
jl
and
fild
jg
mov
mov
jbe
out
push
pop
dec
(bad)
pop
shl
cmc
xchg
or
sub
scas
inc
js
adc
xor
xor
call
iret
xor
clc
sbb
cmp
(bad)
xchg
ret
xchg
jb
jb
dec
out
rcl
pop
aaa
dec
cmp
inc
sub
cmp
inc
cmp
aas
mov
punpcklwd
repz
adc
fisttp
iret
inc
call
jmp
pop
fisubr
mov
push
ins
loopne
aam
adc
lods
xor
jnp
cmp
or
sbb
inc
repz
lods
(bad)
cmps
inc
loopne
push
test
cdq
fs
xchg
cmps
xor
fcmovu
out
cmp
mov
call
inc
clc
cwde
imul
pop
ins
daa
mov
in
cmps
and
jge
scas
loop
bound
add
loopne
test
adc
add
mov
mov
lock
xchg
xor
out
and
pop
dec
and
pusha
bound
xchg
data16
js
cmp
xor
imul
dec
into
inc
mov
xchg
cmp
jo
adc
sbb
sub
int
adc
loop
cmp
ficom
or
rcr
std
mov
add
xor
adc
sub
fadd
add
jb
push
fwait
and
rcl
ins
sub
add
or
inc
push
ins
lods
pop
outs
dec
jbe
cmps
fwait
imul
cmc
aam
and
outs
pop
sub
stos
and
pop
je
iret
js
xchg
aaa
lahf
clc
push
ss
call
mov
push
(bad)
mov
jmp
push
mov
jp
add
mov
xor
or
hlt
and
lahf
aam
lea
jecxz
dec
lock
inc
dec
stc
into
arpl
or
frstor
aad
inc
adc
ins
jbe
or
sbb
adc
in
(bad)
inc
and
xchg
stos
shl
stc
push
in
rcl
outs
or
pop
cld
or
and
outs
shl
jecxz
(bad)
in
mov
push
adc
push
mov
sbb
into
mov
sbb
shl
fimul
ins
dec
in
lods
adc
pusha
cmp
xchg
ins
jge
inc
pop
imul
add
adc
arpl
test
pop
js
xchg
adc
pop
inc
mov
xor
jno
fisubr
adc
movs
ins
xchg
or
data16
jmp
stos
scas
and
pop
push
jecxz
push
jnp
xor
jg
loop
sar
add
pushf
(bad)
(bad)
jne
xor
hlt
cmp
enter
into
je
or
addr16
dec
mov
out
jmp
sub
fidiv
dec
or
fmul
mov
sub
xlat
add
je
aaa
jo
xchg
jbe
jnp
(bad)
icebp
(bad)
daa
and
xchg
ss
jecxz
in
add
mov
inc
jmp
repz
or
mov
sti
mov
pop
or
dec
add
jl
sar
cmps
cmp
mov
cmc
push
dec
or
adc
push
pop
int
adc
pop
hlt
jecxz
and
lahf
loope
cmp
jne
adc
outs
mov
(bad)
ror
jnp
and
xchg
call
test
daa
aam
inc
or
js
jbe
add
cmps
in
mov
pop
jae
cmp
daa
aad
out
and
jecxz
stc
pop
test
hlt
adc
or
mov
imul
sbb
or
(bad)
mov
popf
pushf
dec
pop
jge
cli
in
sbb
xchg
xchg
jp
and
outs
(bad)
movs
mov
jno
fdivr
sbb
xchg
add
inc
scas
fild
js
pop
mov
cdq
div
or
cmp
popf
fidivr
sub
popa
inc
mov
out
movntps
mov
je
scas
(bad)
lahf
and
inc
cld
daa
int3
inc
sbb
int3
retf
mov
sub
(bad)
pop
sub
adc
inc
sub
arpl
leave
pop
shr
add
jb
jge
dec
add
retf
xchg
fbld
mov
pushf
pop
sbb
sub
test
jo
test
sub
in
jo
pop
mov
xor
sti
lahf
push
fistp
leave
ins
inc
lea
ins
sbb
adc
retf
mov
nop
imul
aam
nop
jp
push
out
test
loop
in
add
movs
(bad)
dec
mov
ss
scas
or
ror
movs
dec
mov
add
inc
push
sti
cmp
pop
leave
or
js
fwait
test
push
pushf
dec
mov
add
fwait
cmps
xor
mov
push
push
ins
daa
dec
dec
lds
scas
xor
mov
xor
sti
loopne
push
jno
mov
pop
pop
sub
ret
xchg
mov
imul
arpl
cmp
or
fild
ret
test
neg
sub
stos
dec
jnp
(bad)
mov
loope
cmps
pop
inc
movs
aam
test
aam
xchg
(bad)
and
je
call
push
pop
(bad)
(bad)
gs
mov
pop
xor
outs
xchg
xchg
mov
stos
sub
iret
cmp
pop
imul
xchg
push
mov
sub
pop
daa
into
pop
mov
daa
and
or
sti
pop
mov
xchg
cs
push
outs
xchg
nop
imul
jge
jle
sub
xchg
dec
sti
fsubr
scas
xchg
jnp
sub
sbb
js
test
out
inc
imul
and
dec
ss
jmp
mov
pop
inc
push
ret
and
in
jb
cmp
lea
out
jne
xchg
push
cdq
and
pop
dec
int
add
mov
xor
dec
movs
jmp
out
sahf
xor
push
mov
push
pop
shl
sub
or
sar
add
sbb
push
mov
jae
push
push
in
ja
js
mov
retf
jno
sbb
and
lods
test
jae
(bad)
lods
inc
out
call
mov
or
cmp
das
push
dec
pop
xchg
(bad)
stos
mov
cmp
inc
mov
sub
daa
fbld
sahf
retf
test
jne
push
loopne
jb
shr
inc
loopne
cmp
and
inc
push
dec
sti
sbb
add
xchg
in
retf
sbb
sti
mov
mov
movs
dec
mov
movs
add
ss
(bad)
mul
adc
xchg
into
fs
mov
daa
jmp
sbb
sbb
call
mov
inc
(bad)
scas
ret
jp
add
xchg
fcom
scas
pop
fild
(bad)
sub
and
mov
sti
inc
pop
or
addr16
xchg
sahf
xchg
push
jp
icebp
dec
aaa
pop
div
jmp
imul
ja
xchg
mov
pop
iret
and
xchg
cmp
loop
sbb
stc
inc
out
adc
sub
pop
cmp
fmul
leave
popa
clc
addr16
aad
inc
mov
out
popf
jl
fbstp
ins
dec
out
push
sar
mov
xchg
mov
mov
fisub
xchg
repnz
icebp
aaa
dec
dec
test
and
out
test
push
jl
std
sub
push
cdq
mov
sbb
jmp
imul
loopne
and
out
dec
jns
mov
fnstcw
pop
xor
mov
cli
pop
jge
pop
jns
icebp
rcr
cwde
fcom
dec
(bad)
fs
xchg
loopne
inc
mov
mov
mov
adc
(bad)
ds
test
arpl
sbb
mov
xor
stos
mov
adc
add
cmp
ret
adc
test
mov
ja
cmps
test
ins
(bad)
f2xm1
cwde
loop
scas
aad
loopne
gs
lods
cmp
xchg
xchg
adc
lods
lds
and
into
xchg
icebp
pop
add
pop
cmp
rcr
lock
xchg
inc
fadd
xchg
add
repnz
pop
sub
mov
int
pop
push
push
test
popa
push
mov
jl
fadd
das
pusha
mov
test
imul
mov
sub
cmp
adc
cdq
dec
cmp
cmp
int
out
call
and
sti
cmp
lods
inc
jl
and
cmp
mov
addr16
popf
(bad)
test
cmc
mov
div
push
cdq
xor
neg
ja
div
cmp
pop
popa
sub
stc
inc
mov
sbb
dec
xor
pop
ret
rcl
mov
adc
dec
popa
and
push
(bad)
dec
cmp
ss
and
movs
xlat
inc
mov
sbb
push
ret
in
iret
iret
inc
fneni(8087
popf
ffree
xor
jns
xlat
dec
retf
xchg
mov
xchg
sti
push
cmps
(bad)
scas
pop
mov
xchg
(bad)
dec
ss
test
mov
fcmovnbe
cmp
cmp
scas
arpl
push
ins
inc
lods
push
inc
jo
test
push
adc
mov
jo
(bad)
fisttp
inc
or
in
(bad)
mov
mov
daa
imul
cmp
mov
into
daa
sbb
push
sub
xor
sbb
(bad)
(bad)
in
not
fnstcw
cmp
ins
cmps
imul
stc
repnz
outs
ins
pop
xor
inc
xchg
(bad)
scas
pop
push
hlt
ins
popa
cmp
lods
jnp
add
in
test
pushf
jge
test
sahf
outs
(bad)
or
mov
arpl
in
movs
jg
mov
lea
pop
xchg
add
jg
mov
lock
mov
(bad)
push
out
arpl
fistp
ror
xor
cmp
xor
loopne
push
cli
xor
leave
mov
sub
xchg
jno
inc
movs
jge
sbb
or
push
and
lods
inc
sbb
rcl
loop
mov
sbb
test
add
lahf
in
mov
mov
mov
mov
xchg
sbb
movs
les
imul
lock
mov
ins
mov
xchg
(bad)
jno
cld
aam
add
fld
push
push
dec
mov
imul
outs
push
mov
movs
shl
sub
xchg
stos
ja
mov
cwde
imul
outs
out
add
lods
js
or
mov
aad
inc
xor
cdq
sbb
pop
std
cli
data16
xor
(bad)
pop
fisubr
push
enter
push
cmps
jmp
dec
cmp
das
sahf
xor
adc
mov
aam
js
xor
je
sbb
and
test
xchg
stos
fdiv
repnz
add
and
sahf
inc
das
dec
push
cdq
push
add
sub
hlt
jl
cmp
inc
data16
popa
lds
pop
cmp
xchg
mov
and
scas
pop
retf
lock
mov
dec
sub
cdq
enter
fnsave
retf
inc
mov
inc
scas
mov
add
sbb
rcr
int3
mov
loope
pop
(bad)
push
mov
inc
mov
loope
xchg
inc
mov
jmp
and
shr
retf
mov
jno
mov
mov
or
loope
mov
test
fbld
or
sub
add
mov
das
div
lods
pop
dec
cli
push
pop
jbe
xor
dec
or
stos
stos
dec
xchg
cmp
and
pop
iret
outs
jae
lods
into
xchg
and
pop
fsub
loop
xor
imul
sub
leave
xor
cdq
loop
jge
std
ja
push
sub
mov
movs
popa
test
test
cmp
xchg
or
mov
mov
jbe
mov
lods
inc
push
cmp
and
xchg
xor
dec
and
into
jns
cmp
jb
xor
pop
push
push
psubusw
pop
cmp
jo
div
push
pop
mov
dec
mov
fisub
enter
pop
mov
jo
sar
cmp
mov
push
enter
mov
sub
enter
xchg
mov
stos
add
sub
pop
push
add
retf
xchg
adc
xor
cmp
icebp
xor
push
(bad)
outs
scas
mov
je
mov
xchg
cmp
push
jo
or
sub
fwait
mul
sbb
adc
es
or
jns
nop
inc
sub
xor
fs
mov
in
mov
in
mov
push
and
jmp
call
xor
sub
leave
mov
call
sub
xor
jns
arpl
stos
pop
cmc
sbb
out
dec
xor
inc
enter
test
ret
(bad)
(bad)
xor
popa
retf
mov
push
inc
mov
inc
xor
inc
test
movs
in
in
fstp
sub
xchg
xchg
xor
or
pop
aaa
ret
sub
mov
in
bound
push
sub
ins
cmp
loop
push
test
icebp
daa
push
add
jne
outs
stc
cs
or
sub
popf
loopne
leave
jae
call
fwait
jge
add
in
adc
aas
out
xor
pop
aam
cmp
js
mov
(bad)
retf
pop
lods
sbb
in
arpl
mov
inc
hlt
(bad)
mov
out
mov
ja
aaa
adc
jmp
hlt
xor
cmps
sbb
or
or
adc
add
add
fst
push
cmp
push
xlat
mov
sti
dec
imul
out
pop
(bad)
mov
cmp
jp
fs
ds
mov
jle
pop
jb
jns
cli
stos
xchg
xchg
rcr
pop
mov
retf
lds
mov
cli
scas
xlat
std
and
mov
sub
std
xchg
dec
cmp
add
sbb
movs
enter
popa
mov
mov
mov
push
popf
inc
pop
(bad)
es
test
sub
mov
stos
test
mov
int
mov
or
sbb
or
iret
outs
das
sub
pop
add
push
jnp
push
lods
shl
leave
inc
pop
xchg
adc
push
or
jle
jmp
(bad)
in
add
sbb
pop
sbb
out
jo
ds
jbe
or
repz
push
jns
push
lods
mov
pop
push
adc
lds
sbb
dec
bnd
aam
cdq
outs
and
dec
sbb
in
repnz
clc
jnp
daa
cmp
inc
dec
lods
inc
inc
xor
push
push
cmp
std
jb
out
cli
test
out
lds
sbb
scas
push
scas
mov
push
das
test
(bad)
int
xor
outs
mov
xor
ja
rcl
dec
cmp
retf
je
mov
adc
fimul
sbb
jle
mov
imul
add
xor
stc
xchg
ret
dec
xor
push
pushf
jp
scas
cdq
aas
and
or
psubw
sub
movs
xchg
cld
push
icebp
xchg
push
add
in
inc
fwait
mov
out
(bad)
call
icebp
adc
movs
or
mov
leave
leave
data16
pop
fistp
loope
and
cmc
outs
jne
mov
and
fs
jg
sub
jb
movzx
add
js
sbb
dec
sbb
lea
test
jo
pop
aaa
and
idiv
mov
loopne
and
dec
ror
and
adc
pop
pop
enter
out
pop
and
push
mov
or
inc
lock
mov
add
sbb
xor
adc
xor
cwde
xor
pop
push
pop
mov
fld
mov
(bad)
mov
ds
pop
ins
les
push
cli
jp
ins
inc
dec
call
pusha
dec
inc
dec
push
ret
pcmpgtd
push
scas
loopne
jnp
mov
dec
mov
dec
push
mov
out
imul
out
xor
and
stos
mov
cs
scas
retf
adc
hlt
sahf
inc
dec
ret
sbb
rcl
repnz
arpl
mov
xor
inc
sbb
mov
(bad)
daa
ret
adc
call
ret
push
sub
xlat
mov
test
pop
(bad)
push
or
jecxz
sar
rcr
sbb
sub
mov
pusha
xor
pop
xor
sbb
cmp
jo
push
in
mov
movs
test
enter
adc
lods
imul
cmc
mov
mov
xchg
cmp
dec
inc
cmp
fwait
sahf
or
sub
xchg
xor
nop
inc
mov
call
adc
sbb
outs
int
jns
mov
(bad)
dec
fisub
adc
mov
mov
icebp
shr
add
test
fdivr
xchg
pop
in
sbb
call
mov
out
cmp
rcl
loop
test
pop
sar
adc
call
add
sbb
sub
sar
fs
rcr
movs
xor
sbb
xchg
pop
loopne
lea
push
stos
mov
dec
sub
int
nop
sub
outs
cld
call
add
lea
call
stc
mov
in
mov
mov
ror
pop
cmp
ins
imul
imul
comiss
daa
leave
pop
pop
scas
clc
pop
test
lahf
dec
jmp
mov
push
jg
jbe
mov
(bad)
mov
mov
aad
lods
fist
bound
adc
std
not
push
pop
dec
xchg
dec
test
or
(bad)
pop
mov
jmp
or
add
std
pop
sahf
jp
add
scas
mov
cmps
ins
call
jmp
bound
sbb
jp
jns
fild
fsub
sub
(bad)
jmp
in
bnd
fcmovnb
pop
add
push
fld
iret
dec
int
pop
sub
mov
xchg
movs
xor
cmps
out
jl
(bad)
adc
mov
std
push
mov
jne
mov
iret
and
imul
sbb
scas
jbe
(bad)
data16
addr16
xlat
or
test
mov
sub
adc
jbe
aas
mov
ins
dec
lock
int3
and
xor
and
cmp
arpl
cs
sahf
push
xchg
ja
clc
mov
jle
(bad)
dec
cmp
push
retf
cwde
xor
mov
sti
xacquire
mov
lods
cmp
pop
cmp
arpl
mov
xor
xchg
mov
add
test
xlat
push
fbstp
xchg
and
jns
pminsw
and
icebp
bound
pop
cmps
rcr
ins
fstp
adc
not
lods
aas
pop
mov
lock
(bad)
xchg
and
mov
ds
retf
repz
je
inc
in
les
arpl
mov
mov
push
sti
mov
in
iret
cs
xchg
push
(bad)
bound
aas
aaa
js
adc
inc
mov
sub
sahf
fcmovu
into
fst
(bad)
aad
push
adc
movs
sub
aad
dec
sbb
xchg
or
mov
aam
or
mov
jmp
cmp
cs
push
sub
jmp
in
or
cmps
or
into
loop
icebp
das
adc
cmp
and
fwait
adc
mov
xchg
mov
icebp
popa
call
cmp
fs
mov
mov
mov
xor
shl
and
push
ret
rcr
inc
sub
cmps
out
push
cdq
mov
cmp
fld
mov
mov
or
add
sahf
and
xchg
shl
cmps
jge
mov
(bad)
pop
das
bound
imul
adc
(bad)
sbb
adc
push
inc
loope
jb
pop
mov
lock
mov
into
jmp
xchg
sub
and
sbb
and
jbe
and
cdq
sub
cmp
cmp
inc
mov
arpl
and
out
es
ret
jl
xor
jno
(bad)
mov
push
adc
es
and
out
test
sti
movs
scas
repz
mov
fsub
ins
repnz
xlat
js
fimul
pop
call
stos
sub
lock
fisub
mov
mov
dec
aam
sub
xor
jne
fimul
or
or
inc
and
jmp
cdq
xchg
mov
xor
pop
mov
pmaddwd
popa
fldpi
dec
arpl
jb
in
or
xchg
test
idiv
(bad)
push
dec
jmp
push
cmp
push
sti
pop
in
jae
int3
mov
jp
imul
xchg
adc
bound
mov
outs
lds
fst
es
mov
mov
dec
mov
fsubr
jg
add
clc
mov
mov
mov
mov
and
in
adc
hlt
aas
adc
jne
imul
shr
ds
and
adc
test
adc
ds
pop
pop
rcl
or
rol
and
push
sti
retf
ss
pop
mov
enter
sbb
in
addr16
outs
cwde
gs
ds
icebp
sbb
ffree
jae
pop
or
dec
sbb
push
and
movs
cmc
push
cmp
pop
inc
shr
xor
mov
icebp
pop
push
sbb
pusha
das
mov
vunpcklpd
sub
mov
push
loopne
push
jp
mov
jmp
and
fist
loope
cmp
cmp
aad
sbb
repz
jl
cwde
xor
push
pop
ja
push
ror
out
enter
push
movs
mov
ins
fsubr
fdivr
add
outs
gs
push
pop
mov
pop
mov
dec
scas
pop
retf
lods
ror
out
jbe
dec
or
js
(bad)
adc
sub
inc
add
sbb
sbb
repnz
cmp
mov
bound
dec
mov
pop
mov
push
jo
mov
rcl
sbb
push
loope
cmp
jb
je
bound
inc
mov
sbb
jmp
inc
inc
cli
fs
or
jmp
xchg
jmp
test
lods
retf
les
lods
popa
mov
sbb
icebp
std
jno
or
mov
jo
xor
xchg
inc
fld
fisttp
lahf
mov
fs
cdq
pop
jno
adc
and
cdq
andps
or
aaa
icebp
mov
pop
inc
mov
js
movs
and
pop
(bad)
cmp
sbb
bound
bound
lds
call
push
adc
jno
sub
mov
inc
jae
and
inc
xor
test
lock
fmul
jecxz
xchg
out
icebp
mov
pop
mov
cmp
loope
jnp
int
xchg
(bad)
shl
mov
cmps
aad
jnp
jmp
loop
fs
daa
and
rol
sahf
aad
jmp
sahf
ds
jo
int3
pop
pop
cmp
cwde
xor
mov
not
lods
dec
dec
mov
adc
xchg
neg
pop
test
lock
fucomp
cmp
jae
push
or
dec
xor
sbb
imul
push
sub
test
ja
sbb
lods
cmp
and
add
dec
mov
mov
inc
jp
xor
stos
fcomip
(bad)
fimul
push
gs
loopne
xrelease
movs
push
movs
cmps
cmp
sbb
mov
mov
aad
push
push
inc
mov
adc
mov
jp
imul
pop
dec
loop
dec
fnstenv
(bad)
pop
lods
and
push
lods
sub
and
sbb
out
stos
stc
cwde
and
add
lods
mov
lock
in
stc
das
cmp
mov
popf
cmp
iret
pop
adc
(bad)
mov
mov
sub
movs
(bad)
jg
ret
std
adc
dec
dec
ins
fisub
cld
fwait
retf
ss
sbb
sahf
das
push
(bad)
fldcw
iret
mov
mov
and
pop
and
hlt
test
test
(bad)
arpl
push
push
inc
cmp
dec
xchg
stos
fs
imul
aam
shr
sbb
fldenv
add
jb
mov
fcom
mov
adc
mov
push
jb
inc
ins
fidivr
out
or
sbb
fisubr
sbb
mov
in
and
outs
mov
mov
sub
pusha
les
mov
adc
cmc
or
sbb
adc
jle
cmp
addr16
leave
stos
hlt
(bad)
push
sbb
xchg
or
jb
mov
movs
and
mov
sbb
push
fadd
mov
stos
popa
push
jmp
or
mov
das
(bad)
out
ror
int3
jb
mov
(bad)
fs
mov
add
sub
fisubr
inc
add
jmp
fcomp
std
hlt
(bad)
mov
sub
mov
cmp
jne
sub
cmp
mov
cdq
movs
shl
sub
adc
jmp
fidiv
mov
jae
jno
push
popf
jnp
jns
test
jp
scas
pop
inc
pusha
add
jmp
sahf
das
cmp
dec
lods
mov
in
fimul
aaa
shr
adc
cmp
sbb
or
xchg
std
enter
add
loopne
xchg
in
jae
data16
lea
or
inc
outs
and
xchg
fwait
std
xor
sub
jmp
jmp
mov
inc
lock
lods
ficomp
scas
popa
push
sbb
mov
push
lock
add
scas
scas
sub
ins
cmps
aad
push
ds
mov
fbld
sahf
xor
push
or
hlt
stos
jnp
pop
mov
lods
pop
sbb
daa
call
jmp
push
mov
jle
mov
ret
arpl
mov
test
lods
sbb
(bad)
lods
pushf
into
cmps
mov
movs
jl
or
outs
sbb
inc
xchg
xchg
inc
mov
inc
mov
and
xchg
daa
dec
jnp
fst
jl
push
clc
gs
or
mov
aam
(bad)
pop
mov
movs
retf
inc
mov
mov
mov
js
call
mov
jns
lods
js
and
sti
inc
xchg
sub
ret
je
or
add
mov
(bad)
cmp
mov
loope
mov
dec
push
aaa
addr16
sub
adc
aad
mov
inc
xchg
pop
ins
fsubr
pop
add
sbb
aam
cld
out
ret
mov
cmp
dec
mov
dec
xor
inc
lods
ss
mov
xor
je
inc
cmp
jbe
movs
jnp
lods
inc
or
and
js
mov
pop
sahf
jae
repnz
inc
and
cmc
pop
lock
aaa
in
xor
sbb
test
leave
pop
mov
dec
fs
data16
lahf
mov
cmp
ret
(bad)
call
inc
xchg
jmp
out
sub
or
fdivr
mov
or
xor
into
call
(bad)
out
js
stos
addr16
div
or
cmp
stc
std
jne
mov
aam
lea
imul
inc
in
dec
cmp
inc
dec
imul
sbb
dec
ins
das
sub
cmps
mov
ret
mov
or
div
addr16
rcl
test
mov
movd
and
fsubr
out
mov
loopne
retf
(bad)
mov
sub
sub
mov
adc
fmulp
ss
jecxz
test
(bad)
std
adc
maxps
and
dec
mov
adc
add
fcom
mov
fisttp
enter
aad
scas
jae
fcom
jmp
xchg
mov
jecxz
cld
xor
jo
jp
and
lds
in
int3
mov
cmp
adc
ins
outs
into
xor
mov
add
add
test
jp
fild
or
mov
pop
(bad)
jmp
fwait
lea
fcomi
or
and
and
imul
or
jle
sar
das
lock
cmovb
sub
stc
leave
cmp
out
fistp
or
bound
xchg
add
data16
and
jle
push
js
inc
jnp
jl
lock
or
jg
out
daa
retf
(bad)
push
adc
or
fidivr
sti
cli
cmp
push
(bad)
jmp
sub
jp
inc
lds
out
mov
jp
xor
ret
xchg
fwait
jae
cmp
mov
cmp
(bad)
lods
sbb
das
pop
or
jecxz
xchg
out
loop
adc
ja
leave
mov
test
dec
xor
pop
dec
call
mov
xor
clc
xchg
inc
cs
paddd
jo
sar
pop
push
imul
test
mov
and
loop
mov
sbb
sbb
fcomp
ror
dec
dec
jmp
nop
or
adc
cmp
std
sbb
and
stos
cmpxchg
int3
xchg
lock
rcl
add
mov
pop
das
and
inc
fild
and
dec
jle
scas
adc
jb
je
push
(bad)
stos
mov
rol
mov
stos
in
push
fiadd
jae
and
xor
or
cmc
xor
jl
inc
sbb
cmp
sbb
jbe
and
fsubr
lock
xlat
rcr
adc
das
sbb
xor
add
(bad)
and
idiv
inc
pop
mov
push
mov
(bad)
cwde
lods
ror
adc
jbe
xchg
xchg
scas
mov
cld
cmp
push
in
ret
(bad)
xchg
jno
push
fisttp
cbw
inc
xchg
push
push
jno
push
push
out
push
imul
jge
inc
or
mov
sub
test
jmp
mov
out
mov
adc
pop
ficom
cdq
mov
aam
push
mov
idiv
push
pop
fld
or
mov
mov
xchg
mov
ret
mov
push
push
jno
jmp
inc
cmp
jmp
mov
test
in
sub
and
jle
jmp
pop
jo
ja
(bad)
nop
mov
int
cmps
aaa
xchg
test
aaa
out
call
in
out
lahf
popa
(bad)
scas
jle
inc
push
or
or
mov
add
and
jae
jecxz
cmp
push
push
stos
test
(bad)
jle
mov
bound
mov
movs
pop
cmp
mov
fcomp
fwait
outs
and
inc
inc
stc
jecxz
arpl
cmp
aam
fbld
push
lods
mov
push
adc
mov
jmp
lods
inc
push
fs
outs
repnz
dec
cmp
(bad)
adc
mov
push
stos
mov
jmp
outs
lds
in
xor
push
adc
cmp
js
outs
adc
or
call
ds
test
add
push
dec
popf
stc
mov
mov
jae
jne
lds
mov
sbb
in
lds
adc
arpl
mov
mov
ds
sub
push
loope
pop
add
jl
or
xor
in
loope
popf
sbb
cmp
pop
xor
sbb
mov
fnstcw
and
pop
data16
mov
lods
jmp
aas
xor
dec
jp
vpmaxub
and
xchg
cli
lods
cmp
mov
jb
test
cld
sub
shl
cs
stos
sbb
jmp
and
dec
(bad)
adc
ja
mov
lds
jb
leave
sbb
lods
fidiv
aad
dec
(bad)
pop
popf
xor
movs
or
and
daa
cmp
mov
inc
dec
adc
(bad)
aad
(bad)
enter
and
mov
not
mov
and
cmps
stos
xchg
test
adc
sbb
dec
es
cmp
sub
daa
(bad)
push
pop
adc
in
jge
jb
leave
mov
push
jno
iret
mov
outs
add
rcr
outs
jno
cmp
loopne
mov
test
add
xchg
das
mov
xchg
loope
rcl
mov
popa
push
test
rcl
fisttp
cmc
test
jp
xchg
ret
xchg
mov
adc
shl
outs
jb
push
(bad)
test
add
aam
loope
ins
jge
cmp
add
sbb
and
into
mov
xchg
sub
jle
mov
sar
retf
sub
push
repz
add
mul
lods
cld
or
mov
jecxz
mov
and
iret
bound
add
aas
ins
in
out
ja
inc
fisubr
pusha
cdq
(bad)
sbb
(bad)
ins
and
je
cmps
cmp
daa
jl
outs
jge
arpl
sbb
std
pop
ins
repnz
dec
repnz
jbe
pushf
in
cmp
xor
mov
sub
test
loope
or
ins
and
and
ss
inc
fsub
push
movs
inc
sbb
addr16
push
mov
vpmacsdqh
dec
mov
adc
outs
add
mov
sar
fldcw
movs
dec
stc
mov
sbb
xor
mov
ja
sbb
jg
add
inc
fwait
and
add
pop
sbb
retf
mov
lods
adc
cli
pop
mov
cmps
xor
xchg
cmp
or
fcomp
aas
scas
daa
push
adc
mov
mov
pop
mov
mov
cli
shr
mov
jge
outs
call
add
(bad)
sub
es
ret
mov
cmp
push
jno
cmp
mov
das
nop
nop
pop
je
in
ins
inc
jp
retf
dec
inc
or
xchg
xchg
pop
popa
push
es
pop
pop
fild
or
and
sahf
dec
sti
clc
pop
mov
ins
push
vbroadcastf64x2
rcr
cld
(bad)
in
mov
pop
arpl
mov
add
cmp
hlt
dec
push
repz
dec
mov
add
xlat
das
shr
dec
call
stos
xor
(bad)
and
push
loop
cmp
(bad)
jns
push
mov
aam
add
push
sub
gs
repz
cmp
sar
aam
inc
pop
cwde
xchg
(bad)
cmps
aaa
je
ss
movs
arpl
add
clc
jg
arpl
imul
or
loope
dec
or
pop
xor
imul
pop
arpl
scas
cmp
test
mov
dec
pop
sti
or
cmp
into
aad
jecxz
leave
mov
or
xchg
cmc
fsub
lods
sub
data16
jbe
lds
pop
fxch
loop
test
cmp
inc
sbb
inc
fyl2x
daa
push
dec
sbb
push
adc
fstp
jle
repnz
jp
das
je
mov
push
inc
jnp
je
and
cmp
and
sub
push
mov
cmc
mov
xor
cs
(bad)
stc
adc
dec
xchg
lods
mov
mov
int
lea
dec
cmp
inc
fidiv
cdq
clc
lods
and
pop
(bad)
fdiv
mov
jno
inc
fcom
test
imul
aam
or
push
repnz
(bad)
mov
add
jne
ins
mov
push
adc
cs
shl
sub
mov
cmp
pop
popf
and
aad
push
int
mov
test
aam
fnop
sub
add
clc
pop
les
mov
mov
xor
in
sbb
and
es
or
or
idiv
mov
cmp
sub
fmulp
mov
leave
push
dec
push
inc
mov
push
mov
cwde
out
enter
pop
dec
or
test
push
jmp
mov
mov
cmc
out
out
shl
movs
mov
add
sbb
hlt
mov
nop
rcl
sbb
into
mov
in
(bad)
mov
rol
inc
inc
(bad)
sub
enter
rcl
cmp
popa
(bad)
dec
xchg
rol
stos
(bad)
retf
mov
int
cmp
mov
nop
sbb
into
hlt
scas
ret
js
fidivr
pop
movups
jle
sbb
fadd
pushf
push
sbb
test
pop
push
sbb
xor
xchg
scas
cli
adc
adc
sbb
jmp
xchg
jb
in
(bad)
sti
sub
inc
clc
xor
push
ins
push
in
(bad)
out
jbe
sbb
mov
out
mov
xchg
lock
add
mov
fbld
mov
fldcw
inc
cwde
xchg
mov
add
xchg
xchg
push
popf
jge
push
or
mov
inc
push
(bad)
xor
pop
sub
or
sub
mov
inc
adc
xchg
mov
pop
lods
(bad)
loopne
and
call
gs
stos
out
leave
mov
or
inc
cmp
jge
cmc
pushf
adc
jp
dec
(bad)
xor
xchg
sbb
and
bound
aad
mov
arpl
es
pusha
js
sub
fsubp
imul
stos
stos
xchg
cmp
mov
xor
fiadd
ins
mov
lods
pop
popf
shl
or
pop
xchg
imul
js
pop
dec
add
mov
(bad)
int3
(bad)
xlat
xor
dec
xchg
xchg
or
mov
mov
push
jb
in
adc
jb
xchg
fidivr
xor
sbb
fnstcw
jno
pop
sbb
and
aaa
mov
and
sub
ja
enter
rcl
(bad)
clc
jae
mov
(bad)
fisubr
mov
pop
test
jl
std
clc
sub
rol
leave
xchg
mov
pop
push
(bad)
stc
aas
shl
cmp
mov
add
pop
jp
xlat
sbb
mov
mov
in
jmp
add
push
repz
pop
fnstcw
scas
sbb
ins
jp
mov
push
jg
jl
and
ss
adc
jns
lods
not
dec
aaa
imul
jg
ins
pop
mov
je
jg
xchg
shl
mov
cld
jecxz
js
sar
ins
out
add
adc
test
hlt
fst
jb
shr
inc
adc
cmp
xchg
dec
das
aam
jecxz
or
fldenv
rcl
xchg
mov
push
inc
xor
jo
inc
mov
cmp
or
mov
aam
xor
add
sbb
pop
mov
pop
and
push
or
sub
and
mov
sbb
test
sbb
dec
mov
test
les
push
movs
jmp
lock
movs
ss
xor
in
test
and
mov
xchg
shl
inc
adc
int3
lahf
push
fnstenv
int
xor
fadd
mov
outs
lods
xlat
and
mov
dec
stos
retf
pop
fdivr
cmp
std
icebp
push
cli
fidiv
mov
lods
(bad)
into
add
fcom
jge
outs
fld
inc
jo
ret
xor
jbe
fs
and
ja
std
(bad)
addr16
lock
add
cld
sub
les
sub
lea
mov
fstp
pop
mov
test
retf
iret
pusha
pop
cmp
pushf
mov
jmp
jge
scas
jnp
bound
sti
ins
push
into
jl
pop
and
das
add
mov
fisubr
mov
stos
lahf
dec
cwde
mov
mov
and
imul
mov
adc
sbb
pushf
or
repz
adc
ror
push
or
dec
(bad)
ja
mov
in
xchg
int3
arpl
xor
mov
dec
pop
outs
xchg
and
les
push
lods
inc
adc
jmp
sub
push
xor
in
cld
repz
jns
stos
xchg
imul
popf
dec
loopne
inc
dec
or
dec
sti
cmp
pusha
pop
sbb
push
stc
mov
cmp
xor
dec
cmp
ret
ins
jecxz
inc
jbe
out
mov
ss
cmp
adc
sbb
jb
pop
ja
push
inc
(bad)
ja
xchg
bound
imul
mov
shl
ret
or
ficomp
push
stc
pusha
fcmovu
ror
add
jg
lods
cmp
cmp
xor
cmps
dec
pop
mov
cmp
into
mov
dec
sbb
or
or
scas
stc
mov
push
popa
aad
push
xchg
xor
xlat
lea
mov
icebp
(bad)
hlt
movs
out
pop
sub
in
cmp
pop
mov
adc
rol
std
add
shr
outs
movs
push
add
aad
pusha
fs
cmps
adc
call
inc
sbb
adc
call
xchg
jecxz
fidivr
mov
pop
into
retf
into
sbb
sub
aad
jl
xor
imul
and
lods
es
or
ss
inc
xchg
in
retf
xchg
xchg
push
pop
or
and
je
int
pop
pop
sbb
je
and
popa
fcom
adc
jno
pop
mov
sbb
jecxz
fidiv
(bad)
idiv
jg
jge
xor
xlat
and
mov
bound
pop
ret
das
imul
mov
jno
and
mov
sbb
jbe
mov
add
add
shl
int3
aas
rep
mov
mov
loopne
mov
mov
cmp
cmps
add
mov
inc
fsub
add
int
test
out
test
fstp
out
loop
push
cmp
in
adc
jno
sub
in
fwait
das
lea
jmp
pusha
mov
pop
add
mov
repz
outs
push
out
mov
xor
jge
push
cmp
enter
jmp
sub
mov
push
sub
mov
nop
pcmpgtw
imul
fdiv
jge
adc
xor
adc
ds
and
mov
adc
scas
sbb
xlat
fisub
jg
sbb
shl
pushf
repz
mov
int3
movs
ret
ret
adc
fist
neg
movs
lds
fstp
enter
mov
enter
cs
je
fsubr
push
fcom
repz
xlat
jae
sbb
or
call
fs
das
(bad)
jle
mov
sar
test
(bad)
mov
jle
test
gs
fst
fdiv
and
mov
cld
call
mov
inc
pop
icebp
(bad)
cs
sbb
dec
pop
jle
adc
inc
clc
sahf
test
test
fcmove
fsub
mov
inc
pop
lock
sbb
push
mov
int3
sbb
data16
add
xor
pop
or
mov
loopne
add
movhps
mov
and
scas
enter
xchg
std
cli
mov
jae
inc
push
cmp
aas
movs
out
cld
dec
jg
out
cmps
ins
jp
xor
in
mov
push
loope
pushf
jne
frstor
add
add
push
inc
cwde
jno
xchg
inc
cmp
push
mov
lock
pop
clc
sbb
xor
pop
adc
jle
xlat
jg
imul
mov
jo
dec
(bad)
sar
cld
aad
or
jb
out
test
and
inc
nop
out
and
mov
(bad)
xchg
pop
repnz
pop
imul
cdq
pop
jbe
in
xor
add
adc
fsubr
test
jmp
inc
in
mov
jl
les
adc
push
lea
or
mov
add
mov
and
push
ss
repnz
(bad)
mov
or
mov
mov
xchg
loope
mov
loope
retf
add
(bad)
popa
xchg
cdq
repnz
jb
or
push
loopne
test
in
(bad)
repnz
hlt
adc
sbb
and
jae
cli
pop
fscale
xchg
icebp
aad
xchg
cmps
imul
(bad)
das
shl
cld
daa
xchg
and
lods
sbb
mov
pop
jle
cmp
jb
push
popf
and
daa
sub
out
inc
sub
jg
mov
outs
imul
out
sub
scas
push
aad
aaa
dec
mov
mov
mov
mov
mov
loop
lahf
mov
inc
xchg
mov
out
inc
push
les
cmp
repz
es
fnstsw
mov
jnp
data16
das
sub
ins
dec
mov
sti
enter
inc
jne
repz
aam
dec
adc
pop
push
sar
(bad)
mov
adc
leave
shr
sbb
sub
sbb
test
mov
shr
push
dec
xchg
(bad)
dec
call
adc
mov
push
and
iret
paddw
mov
lods
pop
in
push
mov
(bad)
(bad)
xchg
icebp
jle
cmp
shr
fucomip
into
inc
or
icebp
jl
or
add
cmp
mov
cdq
out
arpl
fs
inc
xor
jmp
sbb
dec
mov
cmp
bound
mov
retf
ja
xor
mov
imul
jle
inc
xchg
or
pop
mov
fcomp
ret
pop
ret
dec
scas
adc
push
inc
or
sbb
mov
adc
popa
mov
adc
pushf
ins
xchg
adc
movs
movs
jb
cs
arpl
sub
or
dec
les
lds
aad
repz
jno
(bad)
dec
pop
push
push
xor
mov
lods
aas
les
jmp
popa
bound
lahf
inc
shr
sub
clc
xchg
mov
test
sub
cld
fisubr
mov
ret
enter
cli
into
push
movs
mov
in
mov
movs
xchg
popa
repz
adc
mov
mov
shl
xor
xchg
loope
inc
fadd
pop
arpl
js
cmp
ror
movs
je
add
dec
pop
add
add
fnstenv
inc
pop
push
and
xor
mov
push
mov
in
retf
mov
pop
xor
pop
punpcklbw
shl
mov
add
cmp
cmc
adc
and
mov
sub
inc
int
mov
xor
mov
or
cmc
ds
je
sub
lahf
sbb
rol
lock
daa
(bad)
or
xor
out
fld
jb
inc
aas
test
fimul
add
pop
mov
out
imul
xor
sar
popf
sub
cdq
sub
mov
fs
or
cdq
popf
pop
hlt
inc
retf
nop
shr
jmp
mov
or
cmp
aas
ret
(bad)
loopne
les
in
adc
inc
dec
stc
xchg
sub
adc
dec
sub
jecxz
ss
loope
jno
pop
daa
fld
jecxz
call
jmp
pop
jbe
repnz
add
mov
js
pop
mov
inc
imul
test
les
stc
or
fnstenv
test
outs
sub
adc
inc
pop
mov
scas
fdivr
or
mov
add
rcl
int
hlt
jb
cs
push
(bad)
pop
mov
leave
xchg
pop
loop
repz
add
scas
aas
jge
mov
repz
and
test
jnp
retf
or
adc
test
icebp
jbe
arpl
cmc
fs
xor
jmp
icebp
jecxz
mov
and
lea
popa
fisttp
imul
aad
(bad)
pop
and
add
js
scas
fidiv
cmps
jl
cmps
dec
imul
movs
add
daa
push
pop
adc
in
stc
mov
sbb
cmp
in
adc
jmp
addr16
pop
xor
inc
fsubr
dec
movs
gs
int
cmps
adc
repz
imul
xchg
push
ins
ss
inc
mov
stc
mul
pushf
mov
push
jge
std
aaa
iret
cmp
mov
cmp
pop
adc
out
outs
push
or
push
lahf
dec
mov
out
inc
push
xor
lods
pop
dec
mov
inc
dec
jnp
(bad)
xlat
retf
and
call
jge
cmp
jge
je
mov
fnstenv
cmp
add
and
into
cmp
adc
mov
mov
retw
outs
cmp
cmp
cmp
(bad)
pop
add
iret
cwde
cld
clc
inc
fs
fidivr
mov
fnstcw
cmp
add
iret
or
call
pusha
cmp
pushf
xchg
pop
retf
push
aas
in
(bad)
lea
mov
and
ds
sub
sub
out
mov
xlat
mov
nop
aad
jge
or
out
add
add
cmp
sub
loopne
clc
jg
gs
add
(bad)
mov
sub
xchg
out
or
cld
xor
movs
xor
mov
shr
loop
pop
(bad)
dec
jge
pop
stos
mov
cmp
or
(bad)
(bad)
xor
bound
nop
adc
adc
nop
inc
xchg
and
push
int3
push
ja
popa
dec
xchg
or
dec
les
clc
xor
pushf
mov
sti
ins
mov
(bad)
out
enter
push
dec
or
xor
add
leave
loop
das
jp
xor
nop
mov
call
xchg
sahf
or
popf
pop
stc
mov
jmp
fmul
mov
sbb
cmp
sub
je
dec
jmp
mov
jns
repnz
add
mov
enter
and
sbb
movs
or
ja
inc
push
jmp
sbb
xchg
sbb
cmp
sub
ror
dec
adc
idiv
in
mov
test
iret
mov
add
loopne
jg
mov
push
aas
push
add
test
and
jl
adc
cmp
pop
inc
lahf
les
lahf
add
dec
pop
idiv
and
inc
lds
cmp
popf
stos
stc
enter
fcom
sahf
pop
cli
xchg
mov
ja
inc
imul
jb
push
mov
and
mov
xchg
push
add
leave
aas
loopne
rcr
inc
adc
mov
cmp
jecxz
inc
sub
dec
cwde
pop
cdq
inc
gs
and
mov
in
add
sbb
adc
mov
or
enter
jns
xlat
push
dec
cmp
dec
jne
adc
sbb
pop
jbe
call
adc
fild
loope
or
lock
jg
xchg
arpl
sbb
sbb
test
je
inc
ds
and
add
mov
iret
or
add
ds
call
mov
xchg
mov
dec
fbstp
add
jmp
(bad)
xor
loope
outs
mov
neg
mov
pop
mov
imul
retf
add
jnp
scas
dec
mov
mov
cmp
dec
cld
lds
std
or
int
fnstenv
xchg
jno
idiv
fisub
mov
(bad)
jb
dec
sub
mov
or
(bad)
out
stos
push
jns
scas
mov
inc
rcr
es
inc
nop
mov
fiadd
(bad)
in
xchg
and
xor
xor
adc
fld
test
xor
clc
cvtpi2ps
push
scas
add
arpl
xchg
(bad)
aaa
or
push
mov
out
arpl
shl
inc
push
pop
inc
xchg
inc
xor
xchg
jo
mov
add
fwait
adc
cmps
dec
sub
int
inc
adc
out
jp
sbb
adc
jae
cmp
push
cmps
ret
ror
xchg
clc
sbb
dec
or
sbb
cli
ficom
lahf
or
ja
mov
jle
cmps
xlat
icebp
inc
loopne
pop
nop
test
dec
outs
and
retf
cmps
add
test
inc
push
in
enter
push
call
pop
push
lods
inc
inc
popa
pop
and
call
lahf
cmp
ret
mul
jne
push
jp
push
add
(bad)
icebp
adc
mov
popa
xchg
fwait
pusha
fwait
jge
shl
adc
jge
(bad)
mov
lds
sahf
jb
daa
test
cmp
rcl
fwait
dec
es
ins
out
sub
mov
jmp
aam
add
loope
inc
js
push
shl
test
inc
mov
sub
fcom
js
sub
inc
stc
push
sbb
or
inc
out
xchg
inc
pop
cmp
xor
cmp
daa
push
push
and
pop
sbb
dec
push
ret
adc
xor
xchg
loope
xlat
(bad)
fisttp
inc
lea
push
sub
pop
leave
mov
aad
jno
mov
icebp
cdq
cdq
inc
outs
je
push
mov
xor
dec
pushf
push
daa
sbb
pushfw
cli
sub
es
enter
jle
mov
pop
xor
test
scas
ss
xchg
popa
dec
cwde
popa
and
xchg
ret
sbb
mov
shl
adc
mov
out
mov
xchg
in
das
mov
loopne
data16
nop
cmp
sbb
jo
aas
lahf
loope
adc
shld
mov
mov
pop
enter
push
in
mov
icebp
cdq
push
(bad)
push
std
lock
mov
sbb
inc
bound
fdivr
sub
cdq
ret
repz
(bad)
int
mov
lods
sub
mov
mov
and
ins
fwait
adc
retf
push
icebp
mov
push
jne
sbb
test
arpl
add
jnp
xor
imul
ins
sub
clc
dec
inc
fist
data16
(bad)
shl
pop
xor
jmp
or
xor
je
pop
inc
dec
sar
in
ror
inc
cmps
jb
push
lds
hlt
jno
int3
sqrtps
pop
adc
je
mov
loop
push
adc
int
mov
ins
cmp
push
sbb
adc
push
add
push
pusha
xchg
add
jbe
sti
sbb
daa
jno
fisub
cmp
in
mov
imul
test
pop
(bad)
mov
add
mov
mov
jnp
(bad)
push
arpl
jge
sub
and
jbe
pop
leave
mov
mov
test
mov
sub
sbb
and
sbb
pop
dec
xlat
mov
js
sbb
dec
cwde
arpl
xchg
jmp
dec
add
int3
dec
dec
cs
xchg
pop
push
les
sbb
cmp
cmps
cld
div
icebp
jbe
mov
fwait
sub
xchg
pushf
lock
xor
leave
es
mov
dec
mov
or
cmp
mov
int
call
mov
inc
ss
mov
std
pop
adc
fs
in
aaa
loope
or
xor
call
cmps
pop
ret
pop
loopne
xchg
je
retf
cmp
and
push
and
sbb
push
push
xchg
aad
xor
int
push
jbe
sbb
test
cmp
fwait
sbb
(bad)
sbb
out
ins
sbb
add
mov
adc
cmp
jmp
add
pop
cmp
aad
ins
cmp
xor
cmp
inc
mov
fs
dec
sbb
test
cmp
adc
stos
retf
add
add
jbe
arpl
jp
xor
pop
push
int
dec
fst
lahf
aas
pop
retf
aam
in
out
int
test
fadd
jge
dec
outs
stos
loop
xor
adc
ins
or
outs
lds
dec
push
dec
mov
mov
and
shl
aad
fsubr
iret
jmp
ja
sbb
les
xor
bswap
loopne
mov
fucom
xor
and
dec
adc
in
pop
imul
fimul
adc
sub
js
inc
out
fcomip
push
cdq
add
clc
out
pop
mov
mov
pop
aad
push
lock
sbb
lahf
inc
loope
xor
retf
repnz
and
sub
in
fcom
(bad)
out
add
xchg
cld
stc
pop
sub
aam
xor
jp
shl
aas
out
aaa
or
stos
push
aam
div
mov
or
in
jbe
(bad)
aam
fiadd
addr16
or
outs
cmp
mov
sbb
cmp
cli
ss
mov
mov
mov
mov
add
push
int
cmc
ss
cmp
push
mov
(bad)
mov
pop
iret
std
dec
push
mov
push
aaa
inc
je
or
rol
sbb
sbb
pop
adc
scas
jmp
cmp
adc
jecxz
fsubr
mov
lahf
pop
mov
sub
fmul
arpl
stos
pop
outs
punpcklbw
aam
pop
sti
mov
jle
daa
shl
test
pop
dec
ret
or
ret
lods
mov
pop
mov
or
adc
shr
in
dec
xor
xor
ds
dec
add
addr16
adc
xchg
push
in
inc
ret
push
std
add
and
repz
dec
(bad)
jo
hlt
fldenv
mov
xchg
cmc
lahf
fdivr
pavgw
mov
call
xchg
fwait
ss
adc
jb
xchg
lods
inc
ins
or
and
(bad)
mov
in
int3
mov
pop
mov
lahf
add
cmps
mov
fnstcw
xchg
js
mov
cwde
leave
repz
xchg
or
mov
pop
mov
xchg
or
add
loope
xchg
(bad)
sub
add
dec
inc
push
cmp
xor
je
or
sub
inc
xchg
mov
add
lds
jns
hlt
jne
pop
imul
rep
inc
jmp
jge
lods
js
or
cld
xchg
lock
mov
test
cli
sar
popf
add
call
test
xchg
fist
test
ds
popa
and
fmul
push
push
cmps
or
jns
das
(bad)
pop
xchg
xor
std
stos
add
xor
test
pop
gs
outs
jecxz
call
xchg
push
cmp
jae
mov
add
call
xchg
adc
cmp
cmps
mov
test
cmp
fistp
and
cmp
int3
adc
ins
pop
stos
sbb
mov
pop
sub
repz
and
test
push
(bad)
test
cmps
xlat
xor
fmul
xchg
push
pop
mul
dec
imul
mov
or
sub
push
fld
in
sbb
and
stos
stc
dec
dec
mov
lock
xor
shr
bnd
mov
hlt
pusha
repz
call
das
push
push
sub
push
shl
cdq
mov
xchg
shl
mov
mov
push
ins
fcmovu
mov
mov
and
add
scas
pop
sub
add
jb
fistp
cdq
arpl
cmp
popa
inc
cmp
repz
pop
fcmovb
out
int3
cmp
push
out
out
cmp
loop
aas
push
inc
add
jo
or
cmp
scas
outs
xor
enter
and
cli
jb
xor
loopne
jmp
push
sbb
or
and
xchg
sub
inc
jo
popf
or
pop
scas
gs
jbe
xchg
lock
sub
and
and
das
dec
xor
aad
in
jnp
outs
add
xor
mov
or
shr
(bad)
push
in
jle
xor
dec
xor
pop
pop
pop
or
movs
clc
inc
(bad)
clc
jbe
push
setae
pop
pusha
jge
inc
cmc
sub
sub
jae
jnp
ja
rcr
fcmove
outs
jle
out
xor
scas
shr
adc
dec
stos
loopne
(bad)
fbld
jne
sbb
xchg
cld
mov
cdq
icebp
out
inc
movs
add
neg
mov
add
outs
and
xlat
xchg
sub
pop
pop
sub
xchg
pop
pop
mov
mov
or
int
fst
repnz
dec
push
ret
ds
stos
pop
adc
addr16
jne
xchg
and
rcl
leave
inc
jns
data16
pop
psllw
fbstp
test
cmps
add
neg
div
das
mov
cmps
popf
and
fs
repnz
lahf
mov
add
ss
adc
adc
push
and
popf
call
mov
push
data16
data16
fsub
xor
movs
xor
or
sbb
movs
call
pushf
lods
jns
sub
xor
mov
in
pusha
inc
sbb
enter
out
in
pop
push
ins
cli
cmp
xor
(bad)
movs
call
pop
mov
push
sub
inc
mov
xor
jl
adc
sub
cmp
(bad)
shl
sub
pop
jg
add
fs
dec
loopne
(bad)
xchg
add
pop
test
ror
push
add
pop
mov
leave
mov
addr16
es
ror
stc
mov
push
lods
jg
sub
add
push
repnz
adc
scas
addr16
popa
test
jp
and
jb
stos
into
outs
ret
dec
xchg
dec
and
cmp
aad
dec
ins
fsub
sbb
movs
inc
fcomp
dec
test
cs
scas
xor
fldcw
cmp
fs
cmp
popa
retf
out
mov
mov
mov
push
pop
sub
jno
(bad)
ins
xchg
leave
pop
aas
icebp
je
add
aaa
inc
mov
lock
jp
cmp
aaa
scas
pop
loop
inc
daa
inc
mov
shr
(bad)
sub
test
jmp
sbb
sub
or
adc
dec
sbb
mov
cmp
in
push
cmp
push
dec
cdq
jg
cmp
imul
stos
(bad)
shl
sbb
sub
sti
or
mov
push
push
mov
(bad)
retf
cli
fld
lds
inc
xchg
push
mov
jmp
or
mov
clc
popf
xchg
push
jle
loop
sub
cmp
sub
sub
xchg
lods
mov
push
jecxz
jo
push
fwait
retf
mov
inc
mov
jle
cld
mov
inc
iret
push
lds
sbb
out
sub
(bad)
mov
xor
ds
mov
call
mov
sbb
push
imul
scas
(bad)
aas
mov
jnp
test
ds
xchg
and
push
and
call
out
sbb
sbb
lods
jns
movs
sbb
(bad)
fidivr
push
jecxz
cmp
or
movs
aaa
and
dec
mov
das
pop
ffreep
ins
xor
add
push
imul
ja
xor
jg
push
stc
jns
scas
into
push
mov
loope
mov
push
fisttp
inc
ret
xchg
or
lahf
repz
inc
in
xchg
fstp
dec
icebp
mov
fwait
mov
mov
in
push
call
icebp
or
push
leave
adc
xlat
fdivr
test
(bad)
outs
shl
clc
repnz
fisubr
sahf
out
push
fcomp
hlt
xor
enter
jl
pop
xlat
jmp
jmp
and
inc
mov
mov
mov
(bad)
in
movs
(bad)
repnz
jb
inc
mov
add
test
(bad)
test
cmp
pop
add
mul
aam
pop
mov
adc
sub
imul
xchg
sbb
in
popf
popa
test
and
mov
imul
mov
sbb
adc
clc
retf
aaa
aam
mov
mov
out
pop
aam
scas
xchg
and
imul
movs
fidiv
add
out
push
mov
add
mov
xlat
or
outs
(bad)
mov
inc
int3
push
add
jmp
fmul
or
push
fld
jne
and
cmp
xchg
jl
jp
fldenv
sub
lahf
push
cmps
loop
outs
ud2
jle
dec
(bad)
pop
or
gs
push
xor
adc
setno
fmul
and
or
add
xchg
rcl
mov
jmp
push
(bad)
mov
nop
push
popf
inc
test
mov
cdq
ja
das
in
push
jp
inc
jmp
test
fdivrp
cs
int3
(bad)
xor
fidiv
pop
cdq
sbb
adc
or
adc
dec
mov
pop
jns
push
rol
pop
je
xor
mov
nop
mov
lock
xor
and
inc
cmp
mov
icebp
jno
(bad)
shl
pop
jns
mov
js
ret
jb
xchg
fldenv
ja
add
jmp
jl
arpl
mov
in
ret
sub
and
(bad)
or
push
jmp
imul
loop
pop
or
inc
jg
loope
call
inc
retf
fwait
ret
jl
std
push
mov
repnz
xor
in
js
mov
ds
movs
xor
cli
dec
mov
(bad)
push
adc
dec
scas
ss
push
addr16
and
fwait
in
je
popa
js
scas
cmc
ret
lods
pop
or
pop
in
mov
mov
push
mov
pop
mov
sub
not
cmp
xor
call
push
hlt
ror
aad
mov
and
xchg
cs
xor
cmp
pop
sub
sbb
dec
aaa
daa
sub
cld
lods
pop
enter
mov
in
and
mov
dec
lahf
fwait
jge
and
add
pop
(bad)
clc
jno
cld
dec
sub
and
scas
fcom
pop
push
pop
stos
mov
sbb
je
cmp
sub
xchg
lods
adc
push
sbb
add
lea
mov
sub
adc
imul
mov
adc
jno
jo
punpcklbw
out
(bad)
jmp
mov
push
int3
dec
adc
data16
icebp
dec
pop
xchg
push
das
xor
bswap
and
ja
retf
add
jmp
xchg
inc
stc
(bad)
cld
fimul
sub
mov
xchg
push
shl
push
adc
neg
pop
push
xor
out
mov
popa
fs
in
repz
fild
add
dec
dec
push
shr
lock
lods
lock
jl
and
cli
push
stos
hlt
pop
or
repz
push
shl
popa
ja
jp
cwde
add
std
mov
or
cmp
sbb
mov
loopne
test
inc
aas
fist
bound
add
jno
out
ret
add
mov
rcl
jl
shl
inc
test
xlat
cmp
inc
sahf
xor
(bad)
push
pop
jo
sbb
xor
(bad)
mov
lods
std
(bad)
cmp
shl
daa
(bad)
enter
mov
push
call
xor
loopne
repnz
rsqrtps
pushf
inc
mov
mov
adc
pop
out
sbb
out
mov
mov
cwde
inc
loop
push
mov
addr16
in
push
or
or
test
mov
cmc
lods
push
call
sti
add
jnp
cmp
fisttp
fstp
fistp
popa
hlt
adc
loope
int
sbb
mov
es
(bad)
jns
scas
push
adc
cmp
retf
xchg
sub
add
aaa
popa
ret
jnp
ret
aaa
(bad)
jnp
fs
sbb
retf
jmp
jmp
shl
ret
inc
pop
retf
repnz
fistp
cmp
mov
into
movs
adc
in
jae
cmp
mov
int3
out
or
mov
arpl
hlt
xchg
mov
push
lods
cli
cmovle
mov
lea
inc
arpl
stc
mov
aas
mov
cmp
xchg
inc
leave
fcom
dec
mov
cmp
jge
xchg
jbe
cmc
mov
xlat
imul
popf
push
outs
sub
jns
dec
sbb
sbb
cmps
mov
aam
xor
test
and
mov
jo
sysenter
cmp
and
neg
int3
push
push
mov
push
jbe
xor
cmp
xor
scas
jnp
out
pop
add
jecxz
cmp
inc
call
and
adc
(bad)
idiv
inc
ror
xchg
inc
push
mov
pop
icebp
test
aas
cwde
das
pop
aad
enter
movs
shr
sbb
test
adc
and
les
mov
xor
push
sbb
(bad)
stos
add
push
sub
imul
out
or
mov
xor
popf
xor
retf
pushf
lods
ja
mov
leave
mov
push
out
aad
lea
mov
xor
and
add
cdq
lods
lock
dec
and
(bad)
mov
mov
or
dec
(bad)
mov
pop
add
loopne
out
mov
push
or
mov
mov
cmp
fcmove
enter
inc
add
push
addr16
or
and
jb
es
adc
outs
pop
push
mov
and
sahf
lds
leave
iret
mov
in
push
inc
lods
cmp
mov
cmp
and
mov
scas
(bad)
retf
xchg
mov
add
inc
test
movs
std
clc
adc
call
loope
jo
(bad)
aad
cmp
out
and
imul
inc
daa
rol
repnz
cwde
pop
stc
popf
lds
push
jmp
cmp
pop
cdq
dec
in
xchg
push
jno
popa
sbb
sub
call
or
icebp
push
mov
loop
inc
clc
pop
movs
sub
jge
and
inc
jnp
adc
mov
adc
out
and
add
mov
loope
int
push
mov
xor
adc
popf
loope
popf
xchg
sub
rcr
lds
pop
cdq
jnp
jmp
fild
pop
dec
inc
xor
(bad)
jnp
imul
add
pop
pop
fnstenv
pop
xchg
cld
pop
les
lock
add
sbb
ds
out
xchg
and
cmc
rcr
jl
push
bnd
dec
daa
xchg
pop
mov
push
(bad)
cmp
inc
js
fadd
adc
xchg
movs
push
fld
and
sub
sbb
mov
mov
clc
enter
imul
or
jno
dec
rcl
mov
mov
dec
dec
mov
stos
cmp
push
mov
sub
gs
xchg
cdq
dec
pusha
mov
hlt
shr
add
inc
cmp
pop
subps
test
not
out
pop
cmp
cmps
push
hlt
popf
test
jo
xor
mov
ja
aaa
icebp
(bad)
fs
mov
ror
mov
fwait
inc
les
movs
cmps
push
scas
mov
or
or
sub
pop
mov
sub
lock
aaa
or
jmp
push
out
je
and
fimul
inc
or
sar
(bad)
lock
outs
add
fwait
popf
push
sbb
outs
pop
push
or
mov
adc
fldenv
fisubr
mov
jp
add
jmp
pop
fwait
out
cmc
add
div
mov
cld
ja
xchg
enter
inc
stc
xor
adc
dec
sub
sbb
pop
push
mov
add
sbb
dec
jno
jg
mov
aaa
lock
pusha
enterw
xchg
cmp
sub
(bad)
nop
mov
add
gs
jae
inc
(bad)
inc
jecxz
xchg
pop
push
retf
(bad)
int3
out
pop
jl
neg
call
std
dec
inc
cmp
inc
in
(bad)
xor
mov
mov
cmp
or
imul
dec
adc
adc
movs
mov
loope
and
mov
iret
cs
add
push
push
mov
and
mov
int3
mov
mov
pop
push
inc
cmc
xchg
aaa
sub
jecxz
mul
out
jmp
xchg
mov
jo
dec
inc
ror
es
in
rol
jmp
cmps
ss
scas
and
sub
xor
hlt
and
mov
dec
nop
aam
je
iret
in
xchg
cs
cmp
push
neg
fdivp
pop
dec
mov
leave
fs
shl
dec
inc
ret
mov
repnz
leave
dec
jp
mov
jle
inc
scas
adc
arpl
int
pop
adc
movs
mov
inc
out
fwait
(bad)
out
cmps
or
sbb
push
pop
aad
(bad)
rcl
cmps
push
cs
add
sub
dec
inc
daa
add
call
sar
push
and
lock
mov
outs
jmp
cmp
loopne
jge
push
xor
sub
pop
inc
sub
xor
int
call
ja
pop
sub
retf
mov
ret
nop
pop
mov
jl
cmp
xor
xor
and
dec
xchg
adc
sahf
outs
add
add
std
mov
push
dec
jmp
push
mov
sbb
sbb
ret
jo
cmp
add
xlat
outs
and
inc
mov
adc
mov
dec
adc
mov
stc
push
fisubr
fisub
jo
cmp
js
fidivr
fidiv
imul
pop
sahf
fnstenv
movs
mov
pop
ret
je
call
sbb
mov
mov
mov
pop
loope
sbb
dec
outs
in
lods
fimul
sbb
call
and
test
adc
jb
lea
dec
add
cmps
mov
call
cmp
fist
mov
mov
push
fnstenv
(bad)
cmps
push
adc
sbb
pop
lods
call
dec
aad
retf
sbb
pop
stos
mov
shr
cmp
clc
push
mov
loopne
inc
test
cli
icebp
pop
jne
xchg
scas
test
sar
jns
mov
test
pop
and
or
sub
sub
cmp
cmp
dec
cwde
cli
stos
cmps
(bad)
retf
ins
pop
leave
mov
jne
and
test
dec
mov
mov
sub
bound
out
sbb
push
(bad)
aas
push
jns
into
xchg
lds
test
aam
cmp
and
test
xor
jae
in
scas
pop
call
mov
ror
cmps
aam
test
push
mov
in
push
ds
cmp
popf
adc
dec
(bad)
push
xchg
repnz
mov
adc
stc
rcl
mov
ror
mov
xor
pop
in
push
sub
jle
(bad)
int3
xor
jp
mov
xor
mov
inc
in
pop
push
out
stos
fs
ds
pop
rcl
fidiv
inc
ds
test
push
(bad)
jns
jl
hlt
dec
or
rcl
adc
jmp
ja
cld
shr
nop
mov
sahf
outs
xor
jg
or
daa
inc
cli
dec
xchg
xchg
aas
pop
jbe
adc
test
(bad)
(bad)
sub
fwait
pop
pop
cmps
dec
mov
cs
mov
jbe
mov
ss
cwde
daa
icebp
adc
ins
sbb
adc
mov
xor
sbb
dec
es
xchg
jmp
test
adc
sbb
add
arpl
je
xchg
fmul
mov
ret
test
sub
xchg
aad
cli
repnz
fsub
xor
jne
mov
adc
dec
out
or
sbb
cmp
mov
inc
getsec
cmp
or
fisub
xchg
pop
mov
push
(bad)
(bad)
pop
mov
and
imul
mov
mov
loope
cdq
jo
scas
(bad)
mov
into
int
add
stos
pop
dec
pop
fisttp
mov
sbb
jg
mov
cmc
jb
push
mov
or
aad
aad
add
retf
popa
jmp
fadd
add
arpl
jne
xchg
mov
add
xchg
mov
test
cwde
mov
call
fmul
inc
or
retf
fs
call
popa
in
jne
sub
xchg
cmp
lock
pop
jge
lea
iret
les
and
xor
inc
mov
sub
in
xor
jmp
inc
jb
outs
and
adc
aas
(bad)
aaa
arpl
aad
fbstp
add
or
inc
jmp
cmp
into
scas
dec
sub
(bad)
push
xor
and
mov
loopne
div
xchg
push
pushf
push
sbb
dec
std
xor
or
hlt
mov
sahf
pop
adc
cld
mov
pop
xchg
enter
mov
mov
push
adc
and
push
pop
or
shr
mov
jmp
inc
or
xchg
add
inc
aam
adc
dec
jne
repnz
xor
hlt
cld
in
xchg
sub
nop
jne
inc
add
xchg
pusha
(bad)
mov
xchg
push
in
or
clc
cmc
sub
cld
cmc
push
movs
int3
ret
sbb
idiv
jbe
jp
push
pop
in
mov
bound
fidivr
lahf
push
and
mov
das
bound
enter
jge
(bad)
out
dec
xchg
clc
repz
dec
nop
or
ror
(bad)
pop
fcmovb
pushf
mov
bound
inc
(bad)
test
push
mov
xchg
mov
psubq
jle
ret
bnd
leave
jmp
jne
push
add
cmp
pop
add
rcl
rcr
icebp
sbb
mov
push
mov
lea
nop
in
mov
lock
add
jge
fcomp
mov
out
xchg
loopne
vpacksswb
mov
aad
sbb
sar
test
xchg
pushf
jb
sbb
xchg
sar
jmp
pop
mov
sub
sub
test
stos
retf
stos
outs
push
das
and
addr16
push
arpl
aam
xor
pop
jo
jns
fisub
leave
or
jge
and
daa
fwait
adc
xchg
add
data16
out
dec
mov
sub
mov
bnd
ret
cmp
jb
mov
xchg
cwde
loop
aad
mov
or
cmp
lds
into
out
cld
xor
add
jo
jne
test
push
push
jp
pop
call
lahf
push
dec
into
test
adc
mov
push
rcr
cld
xor
hlt
out
pusha
sahf
nop
push
retf
test
cwde
xor
test
cmps
mov
retf
mov
adc
xchg
and
gs
sbb
mov
js
dec
in
xor
fdiv
or
scas
cmp
cs
sar
add
mov
es
inc
sub
icebp
push
adc
lock
jbe
loopne
xlat
inc
xor
pop
dec
loopne
add
das
mov
xchg
sbb
xchg
and
mov
enter
jae
pop
sub
sbb
xor
fnsave
js
repnz
sti
push
lahf
jns
xor
mov
xchg
dec
inc
sub
mov
imul
sub
div
call
int
push
pop
sub
sti
jb
jmp
std
std
xchg
pop
sbb
jmp
loope
ja
fnstcw
sub
inc
mov
sub
cmp
ins
mov
scas
es
inc
dec
fs
lock
loopne
int3
imul
push
je
sbb
and
ret
mov
push
sub
add
lods
movs
lods
fld
xor
push
es
fs
xchg
inc
sub
add
out
mov
adc
mov
cmc
loope
push
and
xchg
popf
fimul
aad
fsub
std
cmc
jbe
sbb
aam
inc
fdiv
sahf
add
arpl
outs
xor
bound
fbstp
add
and
xor
pop
(bad)
jae
repnz
and
hlt
out
mov
stos
xchg
xchg
rcl
in
add
sbb
stos
bound
dec
out
out
push
jae
ficom
repz
outs
inc
sub
aaa
xchg
ds
dec
movs
or
mov
adc
das
ret
mov
mov
mov
add
adc
daa
pop
test
int
call
and
push
rcl
inc
mov
add
or
mov
fistp
les
xchg
shl
sbb
ror
lea
xor
add
cmc
pop
mov
call
xor
out
pushf
mov
cmp
xchg
inc
call
(bad)
mov
jle
outs
lods
inc
add
sbb
test
push
cli
shl
cwde
dec
sub
loopne
retf
aam
and
mov
mov
add
xchg
add
mov
pusha
frstor
aad
and
pop
inc
imul
(bad)
jp
adc
inc
dec
call
stc
lock
sub
push
into
inc
fcmovnbe
out
dec
adc
arpl
push
pop
ror
movs
mov
in
add
push
jne
cdq
test
ficomp
mov
cmp
cmp
push
pusha
cmp
jns
imul
sub
jnp
push
(bad)
cmp
out
mov
push
cmc
or
aas
popf
add
ja
jbe
sub
sub
sbb
and
ja
int3
cmps
inc
cwde
dec
shl
(bad)
jno
inc
call
jns
adc
lods
inc
mov
ror
adc
sbb
mov
shr
fistp
adc
push
loop
mov
test
jmp
imul
mov
leave
lds
xor
sbb
xchg
jge
out
push
test
out
shr
push
xchg
shl
push
lods
outs
scas
scas
aaa
cwde
sbb
test
cmc
jmp
mov
sub
mov
mov
dec
inc
and
cmp
cmp
ret
repz
cmp
add
fnsave
test
cmp
cmp
adc
lods
popa
or
jbe
push
nop
xchg
cmps
lods
sub
xchg
sub
dec
pop
inc
(bad)
pop
cmp
jns
mov
ins
or
xchg
loopne
dec
retf
(bad)
outs
xor
jge
cmp
and
stc
ret
lods
lea
cmp
pop
xlat
(bad)
imul
into
aaa
xchg
cld
mov
mov
adc
and
mov
mov
mov
outs
je
fsubr
adc
adc
jno
sbb
xchg
daa
cmp
in
out
mov
inc
shr
fild
add
es
hlt
repnz
pop
shl
cmp
cwde
mov
adc
pop
cmp
out
xchg
ins
out
jge
aaa
jbe
or
cmp
lock
cmp
aad
pop
jbe
cmp
in
cs
and
mov
icebp
pop
test
push
mov
mov
lods
push
ficom
push
mov
xor
mov
pop
and
out
ror
call
or
sbb
fdiv
adc
jg
mov
and
icebp
adc
cli
sbb
xor
mov
jmp
mov
loopne
fwait
jmp
call
into
inc
retf
add
cmc
dec
addr16
dec
add
sub
mov
ficomp
retf
sbb
add
ret
or
call
js
mov
sub
lea
retf
mov
fwait
mov
or
cld
lahf
test
mov
(bad)
test
(bad)
not
xchg
sub
cmp
stos
cli
push
dec
fisubr
adc
mov
adc
rcl
jecxz
mov
sbb
inc
or
loopne
and
ins
scas
or
in
(bad)
pop
clc
(bad)
ja
mov
pop
pop
aaa
xor
push
mov
pop
push
xchg
ret
sbb
or
and
sbb
shl
int3
push
add
mov
inc
xchg
imul
ins
mov
pop
imul
fwait
popa
sub
cld
xchg
int3
aaa
pop
xchg
mov
movd
dec
pop
xor
sahf
xlat
or
stc
rcr
push
pusha
iret
add
sbb
or
jns
es
cs
out
jmp
popf
cmps
adc
push
or
mov
xchg
push
jne
fs
mov
inc
fs
mov
js
sbb
xor
inc
fdecstp
xchg
pop
dec
std
out
icebp
enter
cmp
(bad)
cdq
(bad)
(bad)
out
push
pop
sub
pop
loop
or
popa
inc
cmps
call
sub
sub
fdiv
push
dec
cmps
bound
je
das
ja
nop
ficomp
mov
pop
(bad)
in
inc
in
int3
push
(bad)
iret
cmp
mov
scas
lea
leave
pop
jmp
popw
ins
adc
adc
push
neg
xchg
pop
jne
in
add
pusha
xor
adc
and
mov
pop
sub
loopne
stc
leave
lahf
adc
or
test
aam
outs
test
(bad)
jmp
and
ja
xchg
cmps
push
(bad)
pop
(bad)
scas
adc
add
ins
gs
sar
pop
out
dec
es
xlat
jecxz
mov
les
lods
(bad)
stos
rcl
mov
call
in
in
in
cmc
pop
rcr
xchg
mov
out
neg
shl
scas
test
xchg
mov
out
fisttp
inc
repnz
aas
cld
aaa
mov
in
aas
fist
mov
adc
add
outs
(bad)
test
sub
mov
mov
iret
or
jne
inc
mov
ss
push
leave
mov
mov
lods
xor
push
sub
mov
and
lahf
add
sub
or
and
inc
call
outs
not
fisub
je
xlat
inc
pop
stc
cmp
stos
pop
inc
pop
shl
pushf
jmp
xchg
sub
xchg
cmp
ror
(bad)
cs
iret
add
ret
js
jle
stos
int
xchg
xchg
xor
jmp
test
mov
dec
inc
mov
and
add
xchg
call
mov
cmc
inc
jnp
cli
rcr
leave
fwait
ins
jae
xor
mov
es
jns
popf
push
cmp
cwde
and
mov
call
adc
pop
or
loope
and
xchg
dec
ins
retf
cli
lock
jne
or
mov
sbb
pop
or
mov
and
jno
push
fsubr
or
pop
js
cmp
stos
sub
fld
mov
or
mov
jmp
sub
mov
mov
mov
xor
xchg
nop
push
pop
scas
sbb
sbb
jle
jo
mov
adc
hlt
in
mov
or
pop
fisttp
aas
imul
mov
gs
dec
cmc
pushf
xchg
neg
loopne
cmp
xor
xchg
stos
imul
adc
sub
rcl
repz
dec
sub
aaa
enter
adc
xor
mov
cmp
les
jl
int
faddp
pop
fs
cmp
(bad)
lods
mov
inc
sub
leave
fsub
adc
xor
sub
jnp
ds
mov
or
(bad)
add
sub
stos
(bad)
jmp
xor
ja
mov
sahf
mov
iret
clc
sub
adc
sbb
sub
out
sub
cmp
or
jecxz
cmp
mov
jnp
jno
outs
imul
jg
(bad)
fsubr
es
xor
call
cmp
mov
aaa
sbb
cdq
jecxz
jbe
xchg
mov
adc
sti
jg
dec
clc
xchg
mov
push
movs
int
call
sbb
xchg
arpl
dec
xchg
ret
push
push
mov
ins
inc
xchg
div
push
sbb
jb
adc
push
inc
dec
push
cdq
add
es
(bad)
adc
push
loopne
pop
and
xchg
sbb
dec
adc
rol
(bad)
iret
das
push
sub
mov
push
mov
es
not
adc
aas
aas
stc
or
shl
mov
jnp
adc
push
arpl
js
sahf
pop
mov
mov
int
pop
jmp
mov
cli
fild
out
outs
retf
and
aam
jo
in
retf
dec
sub
je
jg
sbb
cwd
pop
lds
cmps
stc
push
shl
add
ror
retf
inc
push
pop
sar
addr16
xor
cmps
jo
cdq
jl
push
and
dec
pop
pop
out
mov
add
push
or
and
xchg
mov
fadd
sbb
sbb
enter
mov
jae
push
stc
lahf
sub
xchg
cwde
xchg
lds
mov
push
xor
pop
inc
rcl
rcl
adc
fxch
mov
sbb
test
mov
shr
ret
repz
add
(bad)
and
cmps
add
xchg
aad
cdq
movs
mov
aaa
push
div
xchg
cmc
add
jg
or
int
cwde
imul
stos
and
jno
mov
xor
mov
cmp
cld
sbb
cmp
scas
xchg
in
jge
icebp
sbb
out
mov
pop
dec
popa
cmps
or
icebp
call
add
add
int
fdiv
pop
iret
movs
add
(bad)
adc
or
and
pusha
mov
sub
(bad)
scas
fnstsw
dec
cmps
mov
repz
js
mov
stc
push
cmp
pop
mov
mov
xor
les
ja
std
fmul
or
(bad)
inc
je
aad
(bad)
das
fiadd
cmc
jno
addr16
xchg
sbb
loop
sbb
xor
imul
pop
add
pop
push
cmp
sub
scas
xlat
add
jne
mov
fmul
lock
and
sahf
cdq
bound
in
jmp
mov
jne
lods
pop
jbe
fdiv
ja
lods
je
addr16
mov
jnp
sti
mov
inc
jb
mov
xchg
daa
or
cld
(bad)
ins
add
mov
mov
rol
mov
mov
loop
mov
ret
pop
mov
mov
mov
dec
xchg
sub
ins
xor
imul
sbb
sar
sti
mov
push
fcomi
fiadd
push
dec
mov
cmp
icebp
rcl
jge
pop
push
stc
retf
mov
(bad)
int
cmp
push
dec
mov
cmp
mov
repnz
cmp
inc
int
mov
rcr
dec
cmp
fidiv
and
xor
xor
jl
fldenv
mov
xchg
jae
aaa
inc
xor
shl
gs
push
add
sahf
ins
pop
and
sub
fs
jne
push
or
sub
lds
stc
or
ret
ins
scas
jne
cmc
add
scas
(bad)
xchg
sar
idiv
adc
ret
stos
(bad)
ds
sbb
adc
rol
fisub
push
or
call
push
ss
jns
scas
shl
xor
ror
gs
adc
jne
sub
adc
adc
mov
jns
adc
adc
ins
out
dec
xor
ins
jmp
sbb
cmp
sbb
jo
popf
into
and
mov
lods
jb
xchg
mov
add
cdq
retf
add
(bad)
jle
(bad)
dec
nop
rol
xchg
xchg
dec
(bad)
adc
neg
loope
jno
mov
cmc
push
or
mov
jns
dec
jp
inc
xchg
add
adc
push
int
cmp
inc
push
push
xchg
mov
call
push
jecxz
fdivr
addr16
fistp
bound
inc
jb
jns
mov
into
frstor
shl
xor
adc
or
jne
fadd
gs
mov
jo
fs
fidivr
ins
hlt
cmp
data16
fnsave
(bad)
sti
rol
cmp
jle
arpl
loope
sbb
cmp
jo
and
jmp
mov
in
cmp
mov
sbb
xor
test
mov
push
jmp
and
mov
jge
adc
mov
mov
pop
out
sub
mov
cmps
(bad)
pushf
cmp
or
jge
mov
adc
sub
les
call
adc
mov
cwde
shr
cmc
fisubr
shl
arpl
mov
lock
xchg
test
mov
aad
pushf
adc
push
bnd
dec
inc
sub
and
cmp
(bad)
mov
mov
add
sbb
xor
xchg
push
outs
push
clc
pop
inc
sbb
mov
pushf
cmc
mov
push
lahf
or
cmp
sbb
inc
sbb
js
mov
xor
adc
push
test
stos
popa
sub
xchg
and
aad
adc
test
ud0
mov
cmps
cmps
aam
sbb
js
push
pop
xor
test
into
ja
inc
(bad)
pop
out
lods
stc
adc
jg
jp
inc
and
mov
int
fbstp
or
add
cmp
arpl
adc
int3
xor
xor
and
sub
cmp
or
sbb
xchg
push
mov
mov
xor
ja
into
les
aas
aas
in
ss
arpl
jns
mov
int
sub
jecxz
mov
fnstsw
xchg
hlt
ret
in
das
push
into
push
pop
push
pop
fist
loopne
push
sbb
cli
fcom
pop
jle
pop
lahf
pop
xlat
out
inc
and
ret
inc
sub
mov
mov
mov
pop
pop
mov
sub
push
xchg
or
sbb
mov
adc
call
mov
cmc
pushf
add
mov
in
xchg
and
clc
popf
xchg
(bad)
jo
rcl
mov
icebp
and
sar
cmp
cmp
jb
nop
adc
dec
cmp
les
sub
push
test
jge
and
push
frstor
mov
stos
cwde
add
dec
fbld
xor
loopne
jp
push
pop
aas
and
xchg
xchg
mov
xchg
dec
jmp
xlat
mov
add
xchg
sub
sub
nop
sbb
aam
xchg
into
clc
inc
inc
call
stos
xor
jo
sbb
sub
or
pop
add
test
jp
lods
les
jmp
retf
pushf
mov
dec
lea
inc
js
pop
or
ret
mov
jne
test
pop
fild
cmp
sti
fdiv
jg
imul
xchg
pop
leavew
jnp
(bad)
mov
rol
mov
jno
inc
mov
inc
xor
sbb
xor
mov
outs
xchg
cdq
aaa
in
int
push
sbb
cmp
xor
(bad)
cmp
add
mov
jae
cli
fistp
cmp
loopne
imul
call
jnp
adc
icebp
mov
aas
lods
xor
push
inc
loopne
xor
jne
cmp
dec
(bad)
std
cmp
mov
pop
outs
mov
mov
mov
pop
repnz
dec
dec
xchg
imul
pop
push
xchg
scas
jns
retf
popa
xor
mov
repz
push
out
mov
retf
mov
loope
(bad)
sub
ret
push
mov
inc
push
xchg
imul
scas
push
inc
iret
and
aam
xchg
es
xchg
test
push
mov
pop
mov
pop
xchg
pop
cmp
or
jge
jne
pop
xor
mov
pop
aam
push
dec
mov
stos
aaa
sti
adc
mov
sub
jb
xor
push
push
test
(bad)
add
fiadd
push
js
movs
sub
cmp
popf
lds
sub
sub
or
out
cmc
mov
add
fisttp
mov
and
lahf
mov
xchg
shl
mov
clc
(bad)
cdq
inc
ret
xor
call
mov
pop
and
mov
inc
fisttp
push
jge
jne
mov
or
pop
add
adc
and
outs
scas
xchg
dec
dec
xor
pop
sub
sbb
addr16
dec
or
mov
dec
ja
mov
aam
ret
icebp
add
loope
call
fnsave
test
adc
daa
call
pop
pop
or
icebp
xor
sbb
mov
test
xlat
mov
test
dec
in
and
jnp
js
mov
xchg
es
push
xor
xchg
cmc
add
pop
scas
loope
cmp
dec
(bad)
push
or
mov
fadd
xchg
pusha
sbb
movs
pop
outs
add
jle
mov
imul
mov
pop
pop
xchg
imul
pop
mov
addr16
in
call
sub
lds
addr16
cmc
pop
push
cmp
gs
pop
xchg
add
push
jae
pop
arpl
test
inc
xchg
sbb
imul
dec
dec
cmp
int3
repz
and
ins
das
mov
and
shl
add
data16
ja
adc
mov
pop
minps
into
and
pop
mov
or
ds
and
data16
push
add
arpl
add
ret
jge
jmp
(bad)
test
test
push
push
add
lock
cmp
jg
ror
or
xchg
ja
sub
call
xchg
cmp
add
aaa
mov
jne
or
(bad)
mov
xor
iret
out
inc
pop
sbb
cmp
aaa
dec
out
scas
xchg
sub
bnd
gs
jmp
xor
fistp
xor
out
imul
add
inc
outs
out
xchg
xchg
fmul
aaa
mov
out
inc
jno
sbb
mov
jo
mov
adc
and
ins
mov
cmc
enter
xchg
rcr
ss
clc
hlt
or
sbb
xchg
movs
cmp
inc
loopne
and
mov
daa
and
sub
add
enter
fnstenv
mov
out
retf
jmp
cmp
mov
in
xor
jne
int
in
repz
mov
inc
cmp
cmps
mov
pop
add
shl
nop
sub
xor
test
mov
scas
pop
aad
pop
scas
scas
call
loop
and
cmp
mov
ficomp
mov
in
xchg
push
(bad)
push
push
push
cli
ss
push
icebp
pop
jnp
scas
test
ret
mov
jb
retf
pop
mov
dec
repnz
xor
ja
sar
push
test
mov
shl
daa
pusha
jge
(bad)
clc
adc
in
push
enter
xchg
add
or
mov
jbe
and
or
jmp
test
add
test
cmp
push
data16
push
pop
push
adc
adc
mov
xor
cmps
hlt
scas
movs
xchg
mov
xchg
out
xchg
in
sub
sub
imul
test
test
in
fnstsw
dec
xor
ja
sbb
cmps
out
repz
lods
add
sti
lea
outs
lea
cs
sbb
int
ficomp
or
cmps
xchg
lods
retfw
cwde
and
out
cmps
xor
lds
in
push
push
out
(bad)
jmp
jae
dec
sub
and
(bad)
fldcw
adc
or
ds
mov
inc
into
std
lock
jl
sti
pop
dec
inc
rol
pop
addr16
std
aad
sbb
hlt
mov
push
xor
lods
mov
mov
push
daa
ret
nop
push
inc
dec
jg
cs
mov
test
fdivr
hlt
aas
add
cmp
jne
and
mov
xchg
push
enter
mov
shl
ja
stc
out
jge
int3
pop
test
pop
jbe
sub
out
repz
jns
ss
jo
inc
xor
or
mov
or
test
mov
push
cmps
mov
mul
rcl
push
sub
mov
(bad)
mov
xor
pop
mov
cmps
push
jmp
mov
push
xor
jns
test
stos
daa
pop
sub
mov
je
jecxz
ret
mov
xlat
sub
add
sub
lods
xchg
fsubr
push
push
push
pop
push
jbe
and
loopne
push
bound
mov
adc
and
jp
mov
ret
pushf
ds
in
mov
jge
mov
test
add
(bad)
fdivr
enter
bound
jl
cmps
mov
pop
xchg
sbb
dec
or
push
pop
push
pop
test
into
sbb
or
dec
sbb
mov
pop
ret
mov
jl
scas
and
pop
pop
mov
jge
cmp
lds
push
cs
icebp
pop
iret
mov
add
sahf
push
fcmovnbe
into
jecxz
rcr
or
test
or
cmps
dec
out
push
cmp
outs
mov
scas
call
or
inc
rol
sub
fwait
clc
aam
jnp
(bad)
repnz
retf
jl
pxor
and
jbe
adc
(bad)
in
cmp
fsubr
nop
in
sbb
je
sbb
push
pop
in
into
ja
jmp
add
and
inc
pop
sbb
add
xor
xchg
fdivr
inc
test
adc
cmovno
sub
jmp
cld
xor
lods
jbe
sbb
sub
push
sar
mov
lods
xchg
push
xor
add
cmp
jecxz
imul
xor
stc
fcmovu
iret
lea
jl
jno
cmc
jb
(bad)
fbld
mov
or
in
pushf
xor
push
inc
cli
movs
int
popf
xor
test
jge
push
ja
scas
ret
lds
cmp
ins
loope
xor
push
mov
rcl
daa
mov
arpl
mov
cmp
jo
or
mov
pushf
mov
mov
add
test
adc
out
jne
leave
div
or
dec
outs
and
push
push
jnp
leave
jnp
xor
jbe
ror
sbb
stos
push
xchg
das
mov
sar
cwde
cdq
jp
push
ja
movs
aad
fist
push
sahf
out
pop
fisttp
es
fnstenv
popf
jmp
inc
mov
sub
mov
mov
in
cmp
(bad)
pop
lahf
gs
fimul
hlt
and
pop
arpl
push
sbb
lods
adc
lods
push
sahf
sub
add
sub
mov
push
(bad)
retf
mov
adc
sbb
adc
add
xchg
mov
and
add
iret
adc
mov
outs
out
icebp
mov
adc
rol
jns
cmc
mov
pop
jbe
fisubr
movs
adc
test
sti
out
mov
and
out
sbb
mov
inc
xor
std
mov
mov
fwait
mov
and
cmps
enter
mov
xchg
aam
loopne
retf
movs
cmp
xor
movs
pop
lea
int3
clc
stos
xchg
es
scas
push
pop
sub
ss
in
mov
mov
shr
ins
dec
xchg
sbb
stos
js
push
test
sub
xor
call
mov
inc
ds
mov
dec
sar
(bad)
push
int3
fisub
jns
sub
div
mov
call
mov
mov
dec
mov
mov
push
jmp
add
int3
cwde
mov
shl
inc
(bad)
outs
inc
ror
mov
push
xchg
mov
je
pop
cmps
sbb
out
sbb
inc
pop
call
pop
inc
arpl
pop
sbb
dec
jmp
sbb
int3
mov
inc
or
cmp
repnz
cmps
fnstsw
jns
jno
push
dec
sbb
scas
daa
or
add
add
jmp
ficomp
test
sahf
mov
rcr
jl
inc
adc
fist
mov
pusha
jecxz
push
pop
out
call
push
push
adc
fist
jb
jns
(bad)
sbb
sbb
jp
lahf
hlt
add
fimul
clc
inc
(bad)
push
mov
in
call
sub
inc
sbb
push
inc
jmp
cmp
in
adc
cmc
lods
outs
adc
push
or
shl
lods
jp
pop
xchg
sbb
jg
sub
js
bound
mov
adc
inc
xor
dec
push
or
dec
dec
call
mov
jmp
lods
(bad)
dec
inc
stos
pop
enter
outs
cmp
or
ss
push
dec
outs
cs
in
mov
push
ficom
hlt
and
iret
imul
and
xchg
neg
mov
gs
jo
push
mov
rcr
cmp
cli
stos
call
sub
loop
mov
mov
sbb
pop
or
lods
xor
aaa
daa
outs
stos
inc
mov
add
inc
or
xchg
fadd
add
mov
jo
out
ds
int
sub
xchg
ds
in
sub
fdivr
aaa
adc
jmp
hlt
lea
inc
cmp
lds
pop
rol
jb
mov
mov
push
adc
xchg
push
je
mov
loop
cmps
xchg
shl
(bad)
icebp
pop
add
xchg
adc
ret
jnp
clc
pop
outs
inc
mov
fnstsw
das
mov
mov
enter
sub
sahf
mov
repnz
outs
shr
int3
pop
and
and
dec
cli
xor
fisubr
xchg
addr16
scas
mov
push
lds
jbe
jecxz
(bad)
cmp
adc
(bad)
push
dec
mov
stos
shr
icebp
nop
mov
jmp
lock
fwait
popf
pushf
mov
fsubr
mov
pushf
and
jb
sub
cmp
(bad)
mov
adc
xchg
clc
js
sub
push
inc
xor
pop
std
sbb
daa
ja
or
sub
dec
and
mov
div
sti
mov
ror
sbb
stc
mov
call
adc
cmp
fs
pop
inc
push
dec
rcr
dec
fnstcw
(bad)
(bad)
jmp
(bad)
outs
and
xor
and
cwde
ret
adc
xchg
aad
dec
cwde
loop
dec
mov
sub
cmp
dec
jge
xchg
xchg
adc
retf
inc
sub
adc
push
enter
xchg
push
nop
fwait
int
in
push
iret
sbb
mov
test
ins
ret
mov
push
push
mov
push
pushf
sbb
jle
xchg
and
je
rcl
leave
jp
adc
(bad)
pop
mov
fadd
lock
out
fwait
cmp
call
fmul
das
jp
leave
lds
popa
int
cmp
rep
fiadd
fsubr
mov
sub
std
lea
fcmovu
fidiv
fild
dec
scas
inc
mov
dec
(bad)
mov
fchs
xchg
cmc
outs
in
retf
ret
cmps
shl
sub
lock
addr16
add
stos
adc
jmp
mov
jno
scas
aaa
add
lds
push
int3
in
push
xor
pop
aas
lea
xor
int
fldenv
mov
bound
jnp
and
inc
cmps
adc
add
std
es
and
or
mov
or
aas
sti
stc
(bad)
sar
inc
test
fbld
int
sbb
cwde
sbb
jg
idiv
inc
mov
inc
sub
jne
pop
mov
(bad)
in
inc
and
and
hlt
fnstcw
mov
outs
movs
mov
mov
mov
cli
xchg
outs
ds
inc
mov
mov
adc
enter
out
inc
xchg
add
inc
cmp
and
out
xlat
movs
jb
sub
std
pop
fdiv
ja
mov
and
push
je
jg
ins
sahf
shl
mov
ins
dec
stos
jg
std
popa
sbb
iret
mov
cmp
daa
inc
fimul
sub
mov
lods
gs
or
push
pop
(bad)
fisub
repnz
addr16
retf
add
leave
sbb
mov
pop
gs
adc
sti
imul
ins
xor
fbld
dec
mul
mov
sub
pop
sbb
aam
add
js
dec
retf
(bad)
daa
push
imul
out
add
adc
or
shl
or
lea
sub
adc
inc
sub
push
cmp
retf
cmp
adc
out
inc
test
lahf
fdiv
pop
dec
jl
mov
pop
iret
fsub
dec
aaa
push
fadd
iret
hlt
pop
pop
cmp
inc
int
mov
dec
scas
out
adc
dec
lds
(bad)
and
push
jge
or
data16
mov
sar
cmps
mov
push
adc
rcl
movs
sub
sub
in
jl
in
cmps
pop
jg
jnp
or
jno
(bad)
out
jnp
push
inc
rcl
and
call
arpl
aaa
or
jb
dec
icebp
loop
mov
int3
stc
cmc
cld
out
pop
stos
lds
nop
xchg
and
mov
jno
addr16
fcmove
push
xchg
fidivr
iret
sub
xchg
and
aam
xchg
xor
add
jbe
dec
lock
lock
(bad)
fwait
movs
push
and
lock
xor
mov
enter
imul
push
xchg
(bad)
or
xchg
mov
imul
sub
add
aaa
call
aad
xor
mov
inc
iret
cmp
xchg
aad
mov
(bad)
xor
or
mov
ins
jmp
ficomp
addr16
aam
xlat
adc
adc
push
fistp
jnp
sar
sub
fwait
aad
cmp
dec
mov
jmp
fwait
test
ret
sub
pop
into
adc
icebp
cmp
and
pop
sub
enter
dec
xor
mov
cmps
pop
(bad)
aas
cmp
jno
cld
or
mov
aas
dec
mov
and
fisttp
out
movs
dec
test
mov
pusha
xchg
inc
les
pop
fwait
rol
movs
xor
inc
(bad)
repz
int3
xor
or
sahf
xchg
cmp
jle
ins
and
jnp
xlat
es
push
ss
in
call
xor
cmp
jle
mov
cmp
sub
mov
fmul
adc
scas
movs
mov
sbb
inc
ins
jne
pop
pusha
dec
retf
out
cmp
add
dec
xor
xchg
ja
outs
push
inc
sbb
ss
ror
mov
mov
cmps
adc
pslld
lods
jecxz
leave
fld
in
rcl
dec
sbb
cdq
pop
iret
fisubr
mov
sbb
aam
mov
add
xor
nop
xchg
add
ret
(bad)
fidiv
dec
cld
es
push
mov
cld
data16
pop
loopne
in
inc
add
test
jns
iret
adc
and
dec
xchg
inc
sub
cmp
xchg
retf
mov
pop
cld
xchg
daa
add
retf
and
fist
mov
xchg
push
bound
adc
inc
fist
push
retf
push
loop
ret
ret
mov
mov
dec
inc
dec
cmp
dec
xor
jo
adc
mov
in
gs
sub
sub
in
icebp
imul
pop
shr
fldcw
out
ds
cmp
mov
xchg
gs
test
(bad)
cli
ds
(bad)
ret
js
stc
popa
popa
hlt
shl
repnz
dec
js
arpl
push
mov
sbb
(bad)
hlt
dec
lds
in
outs
imul
push
push
push
ja
xchg
jecxz
mov
push
mov
adc
arpl
popf
cdq
cmps
shr
ret
test
test
mov
inc
lods
mov
push
lods
or
jmp
push
and
rcr
fisttp
das
pop
sti
es
repz
ins
cmp
stc
clc
xor
or
dec
push
add
xor
clc
addr16
and
mov
hlt
xchg
cs
mov
adc
jecxz
push
hlt
in
mov
fs
daa
mov
shr
mov
dec
xor
push
pop
mov
cdq
pop
shl
test
xchg
mov
cld
sbb
in
cmp
jmp
or
mov
ror
jmp
push
fiadd
sub
cli
inc
xchg
ret
ficom
lods
cmp
or
and
xor
and
sub
xchg
mov
push
mov
pusha
lahf
dec
push
mov
mov
pop
stc
mov
lds
adc
ror
int
nop
inc
and
jb
loopne
repnz
jmp
xchg
pop
test
aaa
enter
xchg
add
add
repz
retf
adc
sub
lods
and
dec
loope
jcxz
sub
add
fimul
mov
aam
aas
xchg
add
xchg
repnz
pop
push
cs
int
xchg
scas
sar
lods
mov
push
jg
jg
mov
cmp
and
sub
int
fdivrp
jns
scas
aad
je
add
add
add
in
outs
xchg
ret
stc
stc
sbb
dec
shl
aad
(bad)
out
imul
jg
push
xor
pop
mov
sub
stos
inc
jo
mov
inc
fsubr
jne
sub
and
cs
adc
stos
int
cmps
xchg
ds
jge
xor
cli
xchg
pop
push
or
ror
fnstcw
dec
shl
je
loope
nop
in
pop
add
mov
mov
fisttp
xor
mov
lods
stc
jb
inc
pop
imul
pop
sub
push
or
or
pushf
fidivr
sub
cmp
rcl
call
jno
aas
pop
mov
lds
push
xor
repnz
(bad)
iret
sbb
inc
js
mov
mov
or
or
mov
push
jp
push
arpl
lock
jo
leave
pusha
fistp
(bad)
shl
enter
cmp
in
inc
hlt
mov
add
jg
dec
inc
add
xchg
retw
cs
mov
out
pusha
mov
jle
rcl
into
scas
in
ret
(bad)
repz
(bad)
iret
(bad)
inc
rcr
mov
push
cld
imul
cmp
mov
das
iret
jp
xor
pop
in
stc
fwait
dec
and
hlt
xor
sbb
sbb
ficom
jae
and
push
and
mov
push
hlt
cdq
les
(bad)
adc
test
aaa
mov
ffree
cld
cmc
cmp
ds
mov
in
bound
cmps
retf
inc
nop
cmp
retf
fwait
cdq
jge
in
out
mov
fist
pop
outs
and
test
scas
adc
xor
mov
xor
mov
loop
sahf
adc
sub
sbb
pusha
jmp
pop
jge
dec
sub
(bad)
jmp
mov
loope
shl
sbb
stos
into
sbb
cmps
inc
test
dec
(bad)
popa
jne
das
leave
retf
mov
cmp
push
cmc
xor
repz
sub
push
and
or
pop
fcom
lods
jmp
fincstp
mov
add
in
pop
add
xor
and
js
xchg
xor
enter
or
(bad)
xchg
arpl
fs
sbb
dec
inc
xchg
xlat
fcomip
in
ror
leave
(bad)
xlat
pop
mov
pop
fs
mov
jle
vpshlw
dec
mov
and
xor
fadd
push
cmp
loop
loope
lods
inc
pop
mov
jo
pop
pop
xchg
stos
push
xor
pop
test
mov
retf
jns
xchg
rol
sar
in
movs
xor
xchg
popa
cmps
xor
(bad)
jecxz
cli
jo
bound
scas
jmp
dec
mov
gs
daa
inc
mov
gs
adc
les
sbb
test
adc
jp
fild
ret
cli
xchg
icebp
jmp
cmp
push
rcl
xchg
test
inc
dec
or
jbe
dec
sar
fcmovbe
(bad)
fidivr
cdq
mov
aad
xor
dec
push
dec
daa
popf
repnz
jge
mov
data16
in
cs
fidivr
jmp
ror
xor
sahf
je
push
arpl
addr16
inc
mov
adc
or
inc
pop
add
sub
jl
movs
and
pop
push
cmp
push
push
sbb
test
and
add
pop
ins
std
mov
mov
aaa
sbb
mov
push
jl
mov
cmps
sub
xchg
xchg
inc
and
xchg
inc
and
stos
das
push
ss
std
pop
jnp
or
xchg
fisubr
sti
xchg
sbb
add
inc
mov
(bad)
and
mov
jmp
out
sub
and
clc
stc
outs
and
inc
xchg
ret
call
ins
mov
xchg
mov
test
dec
ja
mov
mov
sub
arpl
jl
add
call
add
data16
fist
or
or
push
adc
gs
jle
add
lods
and
xor
cmp
jg
jae
jae
fucompp
cmp
in
loop
test
jae
mov
scas
test
ins
test
fst
das
test
fistp
(bad)
mov
into
test
cli
out
jno
mov
ret
adc
into
or
mov
(bad)
(bad)
pop
mov
adc
xor
mov
sti
push
cmp
fxch
xchg
or
cdq
xchg
int
stos
in
adc
out
pop
mov
jne
jmp
mov
dec
jge
add
sub
out
stos
movs
cdq
xchg
fsubr
test
push
add
add
mov
mov
repnz
or
and
mov
call
mov
movs
in
adc
bound
mov
scas
repz
jb
nop
xchg
imul
aam
rcr
cmp
adc
pop
in
aas
push
pop
pop
sbb
fs
pop
xchg
push
cmp
push
mov
gs
jbe
(bad)
fbld
leave
adc
repz
mov
dec
xchg
mov
cmp
push
or
ins
mov
push
ret
cld
xchg
push
lds
mov
jns
and
out
push
call
cli
xor
push
jns
pop
xor
inc
or
stos
mov
shl
pop
jp
add
push
addr16
(bad)
mov
mov
xlat
dec
and
sbb
aam
push
xchg
pop
push
popf
pop
adc
xchg
push
xor
inc
and
xchg
in
lods
fs
mov
enter
ror
arpl
xor
repnz
outs
xor
ins
sbb
jp
je
inc
sti
sbb
xchg
fcomp
push
sub
repz
out
jmp
inc
mov
jne
cmp
push
test
daa
inc
neg
call
pop
sub
mov
and
call
mov
inc
mov
xor
inc
stc
mov
nop
pop
jne
push
loope
adc
inc
mov
loopne
mov
cdq
rol
cmps
xchg
ret
out
loop
dec
push
call
mov
sub
ds
adc
mov
mov
mov
loopne
pop
jg
add
pop
inc
das
sub
into
and
add
and
push
scas
adc
out
lods
test
xchg
jecxz
stos
push
and
unpcklps
out
popf
test
cmp
data16
mov
call
rcl
hlt
sub
bound
outs
inc
mov
push
sub
inc
(bad)
data16
xchg
jb
lods
mov
xchg
lods
lea
jae
jmp
outs
movs
add
iret
cli
aam
fwait
push
(bad)
outs
push
je
in
addr16
test
mov
adc
add
mov
mov
xchg
jg
cmc
and
mov
loopne
jmp
sbb
push
jle
mov
push
aad
ds
sub
sbb
in
repz
adc
mov
ret
mov
shl
jge
aad
push
jmp
jns
fidiv
lahf
xchg
mov
cmp
and
mov
and
or
add
fdivr
imul
push
addr16
mov
xchg
adc
pop
(bad)
popf
add
test
loope
xchg
dec
into
and
jecxz
jp
test
jne
xchg
std
pop
fcom
js
dec
add
xor
pusha
(bad)
ror
cwde
or
mov
push
cdq
enter
cmp
pop
cmp
mov
enter
inc
mov
popf
mov
cmp
nop
dec
pop
mov
mov
jmp
(bad)
pusha
push
dec
pop
test
cmp
arpl
sub
jb
dec
xor
hlt
jmp
mov
sbb
or
call
call
adc
mov
adc
cwde
lods
mov
pop
xchg
mov
jne
daa
xchg
add
mov
and
daa
retf
test
pop
and
fld
loope
lds
jmp
icebp
xor
in
retf
icebp
movs
scas
and
rcr
popa
data16
xor
mov
or
cli
xor
dec
fcmovnb
sbb
call
or
mov
(bad)
nop
popa
pop
pusha
jo
movs
dec
sbb
adc
adc
cmp
adc
neg
cmp
push
mov
inc
out
shl
jge
es
push
mov
daa
push
(bad)
sbb
inc
outs
fs
lds
jbe
loop
push
adc
mov
mov
arpl
ret
mov
mov
mov
or
gs
mov
rol
call
mov
cmp
retf
xchg
xchg
les
mov
pop
jo
inc
inc
bnd
adc
out
(bad)
or
imul
iret
dec
pusha
xor
and
inc
pop
or
aam
lds
cmps
jae
xor
push
mov
jbe
xchg
add
pop
loop
imul
stos
dec
jbe
adc
std
mov
add
das
push
lea
mov
lods
push
mov
pop
shl
iret
xchg
out
bound
das
sub
ret
add
mov
ficomp
sub
jb
mov
fwait
sar
add
inc
std
mov
mov
jnp
push
mov
outs
sub
xor
(bad)
adc
xor
call
inc
movs
push
inc
cdq
xor
rcr
pop
jmp
jns
das
xor
(bad)
scas
out
mov
cmp
push
pop
(bad)
shl
call
xchg
fsub
mov
addr16
jbe
xor
out
iret
sbb
gs
cmp
addr16
test
inc
inc
lods
ss
mov
ficomp
les
das
js
fadd
push
xchg
add
fistp
lods
adc
adc
adc
not
adc
mov
or
fs
sbb
xchg
mov
inc
sbb
mul
les
scas
dec
in
jle
fnstcw
push
push
add
rol
mov
jo
mov
cmp
push
mov
dec
fist
jno
aaa
test
mov
mov
mov
sbb
push
jge
cmc
fcom
cli
cli
aam
int
pop
dec
pop
aaa
aas
mov
adc
pop
hlt
ss
loop
scas
je
jbe
cmp
fild
enter
out
mov
shl
push
push
fdivr
jmp
loop
test
ins
das
push
hlt
lods
repz
imul
ret
mov
std
in
mov
mov
add
add
test
fs
sbb
mov
js
jns
adc
stos
jbe
and
sub
jg
out
pop
mov
xor
mov
cmp
adc
jbe
push
or
adc
out
ja
cmp
push
xchg
bound
ins
(bad)
(bad)
bound
bound
(bad)
clc
loope
jg
xor
and
dec
out
jno
ret
sub
jnp
jo
jge
das
std
shl
mov
sahf
aam
cmc
movs
sti
adc
mov
popf
or
or
lahf
mov
scas
mov
fld
mov
adc
or
pop
gs
inc
iret
dec
scas
jp
cmp
mov
push
pop
cmp
mov
in
iret
div
ss
(bad)
in
scas
jns
test
xchg
ds
dec
loop
xchg
dec
pop
xor
dec
ss
mov
retf
movs
or
outs
push
or
enter
mov
jl
mov
int3
cmp
and
bound
sahf
dec
jmp
nop
jg
pop
loope
mov
mov
push
jmp
sub
push
dec
mov
fistp
inc
sub
leave
xchg
stos
aaa
dec
inc
or
push
movs
adc
int
or
and
mov
or
xchg
xor
xor
lock
in
sbb
in
(bad)
cmp
cwde
jno
mov
mov
inc
pop
dec
js
test
mov
ds
loope
adc
rcl
xchg
and
sbb
jmp
scas
pop
inc
jle
data16
xchg
xor
sub
sub
pop
into
sub
jmp
pop
pop
push
test
cdq
bound
mov
mov
cmc
jae
ins
jmp
pusha
xor
xchg
test
jnp
mov
mov
or
adc
pop
pop
fdivr
ret
jl
or
gs
cwde
cmc
xor
jmp
or
sub
mov
data16
jne
xchg
(bad)
sbb
gs
(bad)
sbb
test
hlt
inc
in
movs
jmp
adc
dec
mov
xchg
jge
out
jmp
jmp
jmp
sbb
xor
jl
mov
aad
mov
jns
rcr
rol
aam
dec
ror
in
icebp
test
js
jle
fdiv
daa
mov
or
ror
mov
sub
frstor
xchg
mov
outs
jg
mov
loop
sub
fnstenv
sar
iret
imul
xor
sbb
popa
stos
test
sbb
(bad)
inc
adc
push
adc
xor
das
mul
repnz
(bad)
mul
dec
mov
test
cmp
push
nop
das
mov
push
pop
xchg
cmp
mov
pop
cmc
sti
leave
sub
dec
cmp
std
mov
adc
aad
mov
cmp
stc
lods
sbb
sub
mov
out
fadd
mov
(bad)
mov
dec
and
pop
push
mov
(bad)
repz
and
ja
dec
cmp
rol
fwait
and
sbb
outs
cmps
xlat
push
popf
leave
adc
jnp
idiv
xor
dec
loop
xchg
sub
scas
or
test
sbb
and
loope
mov
push
daa
mov
mov
xor
data16
pushf
outs
(bad)
jle
xchg
inc
xchg
cli
arpl
xor
push
test
mov
fistp
mov
sbb
test
xchg
dec
repz
das
push
jns
or
(bad)
jbe
aam
xchg
shl
mov
sub
mov
mov
inc
ins
xchg
fsubr
mov
xor
(bad)
dec
and
and
jmp
sar
inc
mul
repz
cdq
or
hlt
add
in
icebp
jo
cmps
imul
jg
push
push
in
int
mov
lds
imul
test
sahf
dec
imul
es
and
lods
lahf
jne
shl
das
and
sar
daa
mov
adc
sbb
inc
movs
push
sar
jg
mov
ret
mov
mov
repz
mov
pop
ror
cld
add
add
dec
fidivr
cmps
pop
or
push
dec
fmul
or
fsubr
(bad)
mov
push
mov
mov
dec
push
or
jmp
mov
mov
addr16
sbb
popf
jmp
or
mov
dec
dec
fnstcw
out
in
xor
xchg
or
scas
cmps
pop
clc
sbb
mov
push
adc
jno
je
mov
popa
scas
sbb
push
mov
lods
repz
cdq
mov
cs
addr16
inc
fld
cmp
xor
push
dec
test
inc
sub
dec
les
sahf
mov
lea
xor
fsubr
push
shl
inc
jmp
cmc
sub
ret
push
pop
add
rcr
dec
mov
sbb
cmp
push
cs
ins
fsubr
pushf
outs
add
mov
or
mov
fwait
mov
mov
add
cmc
fwait
icebp
pop
arpl
and
sahf
adc
fistp
test
mov
sub
gs
pop
dec
sub
jmp
jae
jg
mov
faddp
dec
add
xor
push
scas
in
adc
cdq
retf
mov
pop
dec
fcmovnu
mov
jl
cmp
aam
sbb
add
sbb
das
pop
inc
or
iret
sbb
mov
adc
fwait
jmp
push
dec
cmps
(bad)
into
cmps
in
pop
rcl
jo
lahf
xor
adc
adc
push
shl
jne
add
fdivr
mov
xchg
sar
iret
xchg
stc
dec
lods
stos
or
inc
repz
ja
mov
dec
aam
xor
sbb
dec
daa
cmp
jle
mov
addr16
add
pushf
je
retf
jbe
xchg
xchg
pop
in
daa
rcl
fucom
outs
mov
mov
mov
inc
xlat
outs
and
stos
in
outs
xchg
mov
cmp
fiadd
cmp
mov
mov
and
call
test
inc
(bad)
aad
scas
stos
jecxz
lds
mov
push
ds
retf
push
jg
lock
xor
das
pop
push
cmps
mov
popa
pop
loopne
inc
sbb
out
rcl
mov
mov
inc
std
push
aas
aad
jbe
sbb
ss
int
jno
mov
ss
ins
mov
cmc
pusha
inc
xchg
sar
int3
in
fnsave
xor
jecxz
stos
push
pusha
leave
mov
rcr
add
push
fsub
popf
sbb
pop
pop
test
cmp
loop
ds
mov
sub
in
popa
xor
sti
popa
ins
(bad)
mov
out
jmp
fldenv
xchg
and
adc
ror
mov
ins
xchg
jns
jno
xchg
cmp
int3
xor
in
fsubr
push
xor
inc
hlt
movs
pop
and
or
mov
mov
jbe
push
call
movs
mov
iret
(bad)
enter
scas
jmp
cwde
sti
jns
mov
js
mov
icebp
je
and
(bad)
cmp
mov
pop
sub
out
in
inc
cmp
loopne
fs
xchg
in
cmp
and
aas
(bad)
popf
test
test
mov
mov
dec
rcl
outs
adc
add
jbe
inc
test
dec
fisubr
test
lods
in
in
ret
cmp
sub
ins
call
xchg
shl
or
pop
loope
pop
and
sub
pop
aas
add
jne
cwde
loopne
sub
ja
xchg
ret
stos
(bad)
add
mov
adc
xchg
shl
inc
mov
ins
mov
sub
outs
inc
and
mov
jb
pop
std
or
inc
mov
pop
or
jmp
xchg
loopne
sub
and
or
and
call
mov
cmp
dec
ds
scas
sbb
cmp
ror
loopne
mov
or
popf
adc
sub
xor
xor
int
fcomip
icebp
and
mov
retf
jl
call
movs
jne
ds
sub
sbb
mov
outs
mov
pushf
dec
push
mov
push
and
push
mov
aaa
xlat
(bad)
scas
js
push
dec
inc
xchg
push
dec
out
mov
lahf
lahf
mov
mov
jns
adc
inc
in
jmp
outs
sahf
jno
or
data16
jmp
in
and
jae
pop
std
or
xchg
daa
fldcw
or
cs
out
test
pop
call
sbb
movs
movs
imul
loope
sub
and
mov
jnp
mov
pop
inc
and
int3
xchg
pop
xchg
mov
ror
sbb
das
out
ss
dec
xchg
mov
fcomp
ss
retf
stos
push
mov
cmp
pop
hlt
loopne
aam
fwait
test
pop
or
mov
and
cmc
data16
stos
push
imul
xchg
push
jbe
leave
sub
in
push
mov
ins
lea
dec
cmp
inc
push
or
icebp
out
cmp
mul
loop
cmp
jno
jno
adc
shl
stos
imul
add
mul
ret
cmps
dec
mov
push
or
xchg
enter
lea
mov
add
mov
out
fild
ret
bound
mov
in
and
xchg
les
(bad)
enter
(bad)
ins
retf
popf
pop
pushf
push
fnop
adc
dec
jno
fsub
pop
cdq
les
dec
out
push
sub
and
ret
mov
mov
cdq
mov
jbe
jmp
stos
dec
sub
push
pop
fbstp
cs
mov
jle
lock
or
pusha
and
cli
jnp
pop
arpl
call
ins
xlat
pop
movs
(bad)
pop
out
stos
int
pop
ror
ss
loop
ret
mov
in
mov
inc
jmp
aas
sub
lock
jmp
and
pop
lds
mov
xchg
cmps
push
jg
sub
mov
lods
push
add
xor
inc
xor
std
mov
sub
movs
es
dec
shr
(bad)
mov
xchg
popa
ficomp
(bad)
jle
(bad)
outs
cdq
imul
loop
mov
in
lods
cmp
test
retf
pop
fiadd
mov
fsubp
sub
pop
mov
xchg
das
pop
push
jmp
loopne
pop
cmp
jge
int
popf
and
jne
clc
movs
push
sar
popa
scas
pop
xlat
adc
jecxz
pop
or
ror
mov
ss
ret
mov
dec
ins
push
and
xor
pusha
xlat
js
daa
in
mov
inc
jp
mov
or
sub
gs
jae
retf
sbb
je
xor
cmp
in
popa
jno
hlt
aad
int
test
inc
call
fs
adc
popa
in
mov
sbb
(bad)
adc
inc
jo
xchg
into
add
test
mov
cmc
push
cmp
ds
pop
scas
in
ficom
dec
imul
bound
sub
inc
into
xchg
and
push
and
jne
adc
mov
repz
xchg
popf
add
inc
ins
repz
wbinvd
test
inc
(bad)
leave
ins
jb
xor
mov
mov
pop
pop
out
in
sbb
or
std
inc
mov
xor
jne
mov
sbb
jp
jecxz
cdq
sbb
mov
or
shr
cmp
cmp
ret
mov
cli
sti
nop
pop
xchg
mov
pop
push
inc
rcl
push
js
push
popf
dec
repz
arpl
repz
dec
jmp
enter
xor
std
pop
out
push
xchg
inc
stos
jg
prefetch
neg
cli
fwait
jecxz
enter
mov
jmp
outs
inc
inc
xchg
lea
jbe
test
add
stos
les
xchg
xlat
loope
xor
sbb
ja
addr16
xor
mov
ret
(bad)
test
rol
push
mul
jae
or
dec
and
push
lahf
loop
mov
add
shl
(bad)
inc
in
adc
push
pop
pushf
aaa
sbb
scas
cdq
dec
stos
sbb
dec
mov
ret
mov
xor
fidivr
pusha
cli
add
jecxz
ficom
jne
jecxz
mov
es
add
sub
jecxz
test
movs
jecxz
sbb
or
push
pop
imul
mov
imul
(bad)
fdivr
movs
add
fsub
inc
push
cmp
scas
retf
retf
xor
mov
js
icebp
into
leave
jge
push
add
in
xchg
out
nop
popf
mov
mov
aam
shr
add
in
inc
dec
xchg
test
mov
and
sbb
aas
xor
xchg
jbe
jg
pop
mov
dec
aaa
out
jns
icebp
xor
pushf
imul
inc
sti
shl
aaa
sub
add
inc
sub
aam
in
in
mov
aad
fwait
jl
das
test
fnstcw
out
retf
leave
icebp
imul
rol
xlat
fwait
jne
push
loop
inc
xchg
jmp
cmp
fld
xor
mov
cmc
(bad)
in
mov
in
mov
pop
outs
jmp
test
adc
lea
jle
jbe
and
test
cs
cmps
jp
ja
enter
inc
pop
ins
shl
inc
ss
jge
(bad)
sbb
aas
push
and
sub
outs
cmps
loopne
lahf
ins
pop
retf
aam
dec
loope
sub
and
lods
jno
push
sbb
sub
in
(bad)
xchg
ud1
rcr
pop
add
ror
cld
pop
lea
cmp
or
mov
jbe
sbb
sbb
jp
bound
sub
ret
aas
adc
push
sti
mov
push
shl
sub
mov
push
femms
rol
pop
movs
mov
(bad)
mov
xchg
aaa
std
jno
fdiv
ficomp
fs
push
push
scas
push
in
int
jmp
aaa
pop
cmp
ficomp
pop
sbb
xor
cdq
int
push
cmps
pop
mov
in
mov
daa
jl
and
popa
push
mov
mov
shl
mov
jle
push
out
jno
jo
xor
enter
push
(bad)
add
scas
sti
mov
cmp
cli
wrmsr
fsub
push
fild
sub
sar
mov
dec
or
movs
popa
sub
js
inc
add
out
enter
cdq
nop
mov
jmp
nop
sahf
or
mov
add
jnp
push
xlat
dec
stos
sar
lock
and
sub
popf
mov
sahf
movs
je
dec
mov
nop
mov
pushf
mov
movs
pop
jge
outs
nop
adc
jno
and
mov
fld
mov
int3
jb
push
inc
retf
addr16
(bad)
(bad)
das
inc
outs
les
jno
push
aam
je
sub
call
lea
jge
add
xor
mov
imul
xchg
lock
scas
je
mov
mov
outs
inc
bswap
popf
push
push
mov
and
and
es
or
leave
xchg
xchg
sub
aaa
inc
fmul
cwde
in
push
sar
js
mov
int3
xlat
xchg
add
fstp
test
cmp
sahf
fsubp
mov
cli
stc
out
xor
(bad)
cmp
lahf
sar
push
data16
xchg
loopne
rcl
mul
sar
out
cwde
push
cmp
push
sub
inc
sbb
cmp
mov
sub
adc
sub
cmp
sub
loop
(bad)
pop
je
push
inc
sbb
test
add
mov
cli
popa
push
mov
loopne
xor
outs
xchg
push
and
fsubr
imul
sbb
xor
jbe
out
out
pop
fcmovnbe
xor
add
xchg
(bad)
or
icebp
je
jmp
mov
push
scas
stc
jo
sub
fmul
jno
mov
scas
inc
inc
in
add
(bad)
push
adc
cmps
enter
push
(bad)
cdq
xchg
ds
mov
pop
adc
push
sub
cmps
pop
aam
ins
jb
xchg
popf
rcr
push
push
jbe
xchg
and
hlt
jbe
popf
cmp
(bad)
movs
retf
adc
in
xor
jmp
ja
cmp
pop
fwait
pushf
sub
arpl
arpl
imul
pop
xor
js
dec
icebp
push
xor
xlat
jge
mov
sub
dec
int
lods
jmp
pop
call
test
fwait
jbe
cmp
xchg
ins
pop
call
cmp
scas
xchg
cmp
mov
not
mov
sti
jl
int
mov
and
int
inc
call
pushf
pop
mov
jecxz
imul
sbb
int
xchg
int3
int
jge
(bad)
xor
iret
xor
scas
sub
jnp
ficomp
sbb
pop
push
push
cmp
mov
daa
xchg
lahf
jo
adc
mov
mov
mov
or
adc
rcr
xchg
push
mov
test
pop
add
cdq
pushf
push
dec
and
dec
repz
inc
jge
push
ret
mov
jbe
push
out
or
mov
xlat
gs
inc
daa
ror
add
aaa
icebp
sub
adc
jae
dec
inc
outs
cmp
popf
adc
cld
pop
mov
lea
mov
es
aaa
nop
mov
adc
inc
pop
in
test
xlat
cld
add
inc
int3
sahf
lahf
add
sub
into
cdq
cmps
retf
(bad)
cmp
mov
popf
sub
add
sub
je
or
pop
imul
push
test
xor
jo
aad
call
fadd
out
cmps
add
aad
pop
ins
sbb
jle
mov
lock
outs
and
mov
cmp
or
adc
xchg
fmul
fnstsw
sbb
int3
call
aam
mov
dec
adc
(bad)
cmp
adc
pop
stc
and
pop
or
pop
sbb
pusha
dec
aaa
pop
sub
mov
push
dec
mov
mov
inc
arpl
lods
je
gs
or
dec
int
cmc
idiv
int3
adc
in
lock
in
pop
enter
sbb
stc
inc
jl
sar
fidiv
loop
pop
dec
adc
imul
sahf
mov
mov
push
dec
int
mov
pusha
push
adc
mov
out
stc
scas
and
fdivr
push
mov
jo
or
aaa
popa
mov
and
and
shl
gs
fisub
jne
and
jg
xor
adc
dec
pop
sar
jp
pop
add
pop
push
inc
pop
adc
and
test
ja
add
test
inc
outs
sub
inc
in
ds
iret
cmps
(bad)
pushf
mov
adc
push
inc
pop
pusha
jmp
jg
push
outs
inc
pop
push
pop
test
outs
mov
jne
(bad)
cmp
int3
and
sub
shr
arpl
in
inc
addr16
out
sahf
mov
mov
ds
mov
jno
add
add
push
xor
mov
jo
jp
sbb
ds
adc
(bad)
(bad)
(bad)
mov
xor
push
out
pop
pop
fisub
ins
jle
xchg
add
data16
fs
jmp
dec
in
push
js
movs
dec
add
mov
sub
mov
inc
mov
scas
mov
into
adc
lods
mov
lock
pop
or
in
pop
push
cmps
or
jecxz
add
out
sub
dec
aas
jecxz
popf
pusha
or
sbb
or
popf
push
lock
adc
in
and
push
mov
mov
sub
shr
mov
pop
pop
push
call
jg
cli
mov
loopne
shl
mov
icebp
push
ret
fst
xor
jecxz
loope
cmp
stos
xor
mov
adc
ret
add
daa
enter
lods
pop
iret
mov
push
shr
inc
movs
mov
sbb
loope
imul
lea
daa
(bad)
aas
icebp
pop
cs
in
fwait
je
call
inc
int3
xor
test
mov
popa
push
dec
pop
pop
sbb
dec
mov
imul
push
adc
jmp
jecxz
xchg
bound
popf
out
or
push
adc
jmp
sub
inc
add
xchg
rcr
ficom
push
and
and
icebp
enter
cwde
xchg
add
adc
xchg
std
push
mov
test
jns
aas
mov
(bad)
pop
dec
lds
dec
repz
cld
ds
cmp
mov
pop
adc
mov
jle
sub
in
shl
out
icebp
cld
into
outs
mov
sbb
push
jmp
shl
or
enter
and
int3
inc
je
in
mov
mov
jne
push
sbb
mov
cs
not
add
pop
clc
call
cmp
aas
out
clc
test
cmc
xor
aad
sar
dec
add
in
inc
adc
loope
shl
push
jo
xor
push
push
xlat
adc
ins
mov
mov
(bad)
mov
into
hlt
pop
(bad)
lock
mov
jne
cmp
add
out
das
push
jo
gs
loope
out
pop
aam
push
idiv
cmp
lea
fisub
mov
cmp
pop
sahf
movs
pop
es
aas
loopne
(bad)
or
mov
mov
jno
lods
dec
sub
push
push
fs
inc
dec
leave
xor
pop
pop
into
push
out
jecxz
les
das
adc
aam
pusha
(bad)
fsubp
push
add
imul
sar
out
sar
mov
gs
xchg
aad
jnp
jns
cmps
test
mov
push
jae
xchg
mov
cmp
ret
sub
jns
xor
push
inc
cmp
sub
adc
xchg
loop
test
adc
xchg
test
sub
xchg
xor
ret
pop
xchg
cli
adc
in
in
rol
fs
xor
jecxz
push
xchg
jecxz
cmps
adc
ret
test
(bad)
cmp
std
fldcw
mov
xchg
pop
loop
cs
or
rol
xchg
ss
stos
xchg
mov
sti
test
int3
sub
xchg
dec
push
add
das
mov
in
push
mov
xchg
ret
and
and
cld
adc
xor
fcmovne
leave
cmps
cmp
jno
cmps
je
lods
mov
or
sbb
les
xchg
out
stos
sbb
stos
push
dec
xchg
stos
mov
gs
mov
ret
iret
mov
(bad)
popf
data16
shl
sbb
test
pop
call
in
shr
adc
popa
xchg
repz
sbb
jbe
lods
and
add
(bad)
jae
ror
sub
retf
mov
loop
call
data16
movs
shl
cmp
ins
sbb
dec
jecxz
dec
push
shl
push
add
or
das
gs
gs
pushf
pop
xchg
pusha
cmp
mov
(bad)
xchg
cmp
adc
mov
sbb
xor
stos
push
sub
pop
xchg
push
inc
sar
xchg
es
ret
fild
sub
stos
jno
in
xor
xor
sahf
pop
pusha
push
int3
dec
sbb
add
adc
loop
push
mov
jo
movs
scas
bswap
mov
movs
or
add
inc
and
inc
mov
rol
and
loop
popa
sahf
sub
cmps
push
popa
add
adc
out
push
lea
stos
loop
out
xchg
dec
loop
call
stos
xor
mov
stos
ins
and
into
mov
fld
test
leave
and
jp
jne
lods
dec
xor
adc
sbb
(bad)
sar
lds
push
sub
jb
sbb
mov
clc
cmp
ins
loope
push
(bad)
shl
clc
fsub
leave
mov
test
or
sbb
scas
out
adc
jmp
add
ret
in
lahf
ins
rcr
adc
mov
into
sbb
or
out
inc
adc
dec
jnp
jns
(bad)
(bad)
loope
out
div
xor
dec
stc
xor
std
sti
cmp
jae
xor
sub
gs
inc
cs
jge
cdq
mov
or
and
jmp
lods
arpl
xchg
dec
mov
jo
add
xlat
out
inc
iret
and
push
and
inc
std
imul
cwde
inc
adc
ret
cld
bound
pop
pop
jle
mov
inc
jo
cmps
stc
or
fisub
fild
add
cs
ret
repz
mov
fucomip
retf
mov
sub
out
xchg
mov
dec
dec
(bad)
jb
lods
mov
das
cmp
repnz
dec
mov
xchg
xor
inc
xor
mov
jmp
jmp
out
(bad)
int
dec
in
sub
je
jnp
into
sbb
dec
sbb
outs
fwait
lahf
pop
sub
cvttps2pi
pop
ret
sbb
pop
jmp
jo
push
stos
arpl
cmp
adc
dec
data16
stos
mov
out
jbe
(bad)
mov
push
cmp
cdq
push
movs
pop
daa
int3
repnz
sub
jecxz
jg
inc
mov
mov
push
(bad)
(bad)
cld
(bad)
mov
jbe
adc
ins
mov
mov
sbb
test
repz
outs
xor
inc
fidiv
xchg
adc
pop
jge
cdq
pop
xor
shl
xchg
mov
mov
mov
int
popf
sbb
repnz
das
cmp
and
inc
lea
ss
and
jmp
arpl
inc
mov
sbb
mov
mov
inc
xor
add
movs
xchg
mov
cmp
test
or
into
cmc
push
pop
mov
mov
pop
movs
in
retf
mov
xchg
stos
data16
in
fwait
dec
cld
(bad)
mov
and
xor
ret
pop
in
inc
fadd
pop
sub
sub
and
jns
(bad)
test
loop
inc
in
push
push
cld
xor
inc
or
dec
xchg
adc
mov
ret
nop
fisub
cmp
ins
retf
scas
fst
xor
sbb
lods
add
bswap
and
xchg
and
ret
jecxz
mov
stos
mov
jns
add
pop
jecxz
movs
mov
rol
cmp
push
mov
cdq
sub
mov
les
ins
cmp
mov
mov
aaa
mov
mov
push
jge
dec
mov
mov
lock
push
pop
stc
test
pop
add
and
inc
pop
mov
sbb
xchg
aam
je
push
and
leave
pop
adc
mov
test
aam
dec
inc
in
dec
jecxz
aaa
xor
lock
ret
jp
jae
fdivr
and
add
and
pop
enter
int
mov
lods
dec
add
inc
out
inc
xchg
push
cmps
mov
fucomp
mov
rol
ficomp
cs
sub
add
repz
mov
je
(bad)
clc
retf
cmp
mov
shl
mov
loop
pop
mov
out
sbb
push
adc
xchg
loop
adc
fdivr
call
jno
aaa
jmp
xchg
push
test
retf
sub
es
dec
call
pop
mov
or
loopne
jge
push
outs
addr16
push
popa
push
mov
dec
test
sbb
cmp
hlt
enter
idiv
push
in
ret
push
sti
(bad)
fcomp
imul
jns
test
adc
jle
shl
or
pop
mov
pop
and
scas
in
icebp
sti
sbb
add
and
or
lods
cmp
aad
movs
cmp
push
enter
push
pop
mov
and
cmp
xchg
ds
mov
jae
shr
retf
call
rcl
mov
xor
ins
sbb
fcomp
fwait
add
ins
inc
xchg
jae
push
imul
std
push
stc
jmp
mov
ret
es
push
test
and
mov
mov
push
dec
push
adc
push
or
sbb
ja
retf
add
je
addr16
pop
arpl
push
es
jns
jae
push
adc
or
cli
cmp
push
sub
out
jmp
pop
inc
call
jns
mov
out
test
xor
cmp
fwait
jg
rsqrtps
fisubr
pusha
(bad)
mov
imul
js
leave
adc
sti
xor
shr
xor
pmaxub
call
mov
or
pop
and
int
dec
and
icebp
jl
addr16
push
push
stos
add
shl
rol
fistp
mov
and
jmp
or
mov
add
test
fisttp
jne
out
adc
push
bound
push
pop
cmp
push
fistp
rcr
rcr
aam
push
adc
dec
push
xor
or
pop
cmp
push
(bad)
sbb
leave
scas
sbb
mov
into
lods
mov
ret
pop
fcomp
(bad)
cmps
rol
dec
shr
icebp
adc
cmp
scas
sbb
movs
pop
mov
cmp
aaa
mov
jge
sahf
pop
mov
cmp
add
xor
into
pop
test
pushf
rcl
dec
aad
mov
or
add
push
sbb
outs
jle
lods
rol
popf
jmp
push
out
xchg
push
outs
mov
iret
inc
xchg
add
inc
movs
jb
mov
push
add
shl
jge
mov
inc
out
shl
jge
jno
rol
loop
dec
arpl
aaa
mov
sbb
cmp
addr16
mov
push
or
add
mov
loopne
mov
int
iret
inc
test
pop
fs
jle
fcmovnbe
or
(bad)
std
ds
xchg
retf
pop
jp
test
in
inc
movs
icebp
sub
mov
jno
dec
outs
clc
or
push
or
pop
sub
mov
or
pop
xor
cmps
sub
movs
sub
push
inc
dec
sar
and
add
faddp
daa
or
adc
mov
mov
adc
xchg
mov
in
adc
test
(bad)
jno
mov
push
fdivr
das
pop
cmps
and
or
jne
sub
retf
xlat
(bad)
add
test
pop
fadd
loopne
scas
enter
daa
imul
mov
pop
mov
mov
(bad)
and
mov
lods
cmps
jae
add
mov
pop
imul
es
push
repnz
sahf
push
retf
mov
(bad)
in
(bad)
mov
sar
cdq
adc
fwait
push
cwde
mov
or
adc
(bad)
and
fucomi
cdq
leave
ror
mov
cmc
into
xchg
adc
push
add
movs
cmp
sub
fnsave
iretw
shl
cli
lods
mov
(bad)
fdiv
push
imul
sbb
inc
or
or
mov
(bad)
mov
das
into
(bad)
mov
adc
pusha
or
add
sub
mov
jae
inc
pop
push
inc
sub
loopne
cmps
push
rcr
loopne
and
sub
fst
aad
and
repz
int3
sbb
xchg
jne
mov
idiv
inc
arpl
add
jmp
call
sar
mov
xchg
cs
imul
gs
cmp
mov
or
test
jne
xchg
pop
jle
xchg
inc
adc
jbe
sbb
sub
pop
mul
scas
mov
or
push
jne
(bad)
sub
jp
and
stos
adc
push
repz
sbb
pop
dec
jmp
or
sub
adc
sub
out
clc
outs
nop
lods
ficomp
xor
or
ffree
sub
push
adc
pop
push
mov
mov
inc
into
sbb
lods
sbb
(bad)
pushf
rcl
rol
mov
mov
jnp
lahf
sti
xchg
aas
aaa
ret
jmp
sub
cli
mov
das
pop
aam
aad
xlat
ret
jl
out
and
push
shl
push
out
lea
mov
and
out
fimul
in
js
(bad)
push
xchg
mov
sbb
fldenv
sahf
test
ins
dec
pop
jp
stc
bound
pop
sub
rol
xchg
jl
jecxz
stos
je
xlat
push
and
call
lds
sahf
in
jl
mov
daa
and
or
xchg
clc
mov
push
mov
out
out
jg
(bad)
mov
add
lods
jb
pop
push
call
push
push
jae
push
xor
lahf
add
aas
scas
fild
outs
cmps
mov
pushf
pop
rol
or
ret
(bad)
pusha
sbb
leave
popf
ret
(bad)
mov
cmp
push
les
jnp
loopne
sub
pop
ja
cmps
mov
inc
pusha
adc
push
cmp
mov
rol
in
imul
sub
sti
mov
out
push
ficom
stc
(bad)
fcom
rol
rol
jbe
sbb
loopne
mov
cmp
inc
daa
pop
and
and
jno
mov
inc
ret
cmp
xor
stos
xchg
dec
lds
out
xor
(bad)
in
mov
stos
pop
cmc
pop
adc
jg
sti
addr16
inc
sub
enter
mov
cmps
mov
jmp
jb
std
fstp
repz
mov
stos
outs
loopne
(bad)
pop
sbb
mov
inc
out
mov
cmp
adc
cmc
scas
cmps
outs
ins
mov
cmp
xor
mov
inc
ret
pop
adc
idiv
sar
jmp
ins
aam
jp
sahf
inc
int3
cwde
fild
jno
mov
cmps
mov
and
pop
mov
jo
push
retf
jmp
test
(bad)
call
sbb
mov
inc
and
arpl
adc
jmp
cwde
push
dec
dec
sti
(bad)
out
jno
mov
xchg
cmp
(bad)
(bad)
lea
inc
dec
mov
cmp
fwait
retf
fnstcw
(bad)
pop
and
fmul
mov
mov
adc
xlat
add
and
test
addr16
adc
lods
inc
div
or
jl
shr
cmp
or
test
pop
sbb
ss
leave
sbb
mov
cs
sbb
je
push
pop
jle
mov
mov
cmp
retf
clc
or
mov
aam
stc
jl
cvtpi2ps
aad
pop
into
inc
jnp
imul
add
dec
xor
scas
mov
cmp
jbe
lds
shl
push
add
xor
jae
inc
fild
jnp
popf
mov
das
inc
imul
jge
movs
or
fwait
repz
mov
mov
arpl
hlt
pop
mul
idiv
cs
(bad)
mov
div
sub
mov
mul
xor
jno
and
dec
cmp
sbb
dec
xchg
mov
rcr
test
movs
int3
test
jecxz
mov
push
rol
push
push
ds
mov
test
loope
push
or
and
jnp
iret
xchg
enter
sbb
add
sub
lods
aam
outs
fidivr
inc
mov
hlt
pop
cmp
sti
cmp
daa
cmp
scas
adc
adc
add
inc
fisttp
jbe
js
push
fs
jp
into
loope
mov
scas
clc
mov
int
movs
mov
and
dec
mov
(bad)
stc
sub
fadd
fsubr
je
inc
outs
mov
mov
mov
repnz
out
jnp
and
ret
test
pop
or
arpl
in
pop
or
add
call
adc
in
inc
lds
scas
retf
ds
not
mov
hlt
sub
pop
mov
fisub
cmp
call
retf
mov
leave
push
cmp
jecxz
add
mov
add
aam
pop
call
jne
cld
fisubr
mov
(bad)
sbb
pop
cwde
jno
punpckhwd
repnz
gs
sub
and
test
in
aam
lock
or
or
jae
shr
mov
xchg
jge
dec
add
in
imul
mov
pusha
bound
or
jmp
inc
xor
cdq
xchg
mov
jbe
xor
sbb
cli
repz
out
jnp
or
xor
fldcw
iret
or
push
popf
inc
dec
je
mov
jge
cmp
inc
or
pop
movs
mov
test
test
cmp
dec
pop
xchg
das
cmp
mov
jmp
mov
enter
push
pop
xchg
pop
je
and
jmp
(bad)
cmp
retf
dec
out
pushf
pusha
popf
les
rcr
out
xchg
inc
daa
aad
inc
xchg
jb
test
push
add
xlat
fist
mov
xchg
out
jns
in
(bad)
(bad)
jmp
pusha
dec
sbb
and
js
dec
xchg
adc
(bad)
ja
cli
pop
push
lock
sub
mov
in
jo
out
loopne
xchg
enter
cdq
cs
dec
or
push
add
cmp
dec
xor
jb
or
jmp
ds
mov
push
ja
xchg
repz
fimul
xchg
dec
dec
cli
aam
adc
mov
lock
pop
jecxz
movs
(bad)
jae
adc
sbb
sub
xor
mov
jge
iret
inc
push
loop
cmps
sub
jg
ss
loope
jecxz
mov
push
add
push
add
cmps
fisubr
dec
dec
ja
xlat
adc
outs
or
iret
fwait
xchg
sbb
jmp
dec
mov
or
pop
adc
mov
mov
inc
cmps
jno
fld
jp
adc
aad
pop
leave
cmp
xchg
sub
loop
dec
cmps
les
icebp
mov
mov
aaa
sub
adc
pop
or
lods
add
or
stc
fld
mov
xor
ins
pop
xchg
test
jb
clc
addr16
imul
mov
(bad)
and
outs
gs
or
adc
fcom
loop
jecxz
sub
jmp
jo
mov
cwde
xchg
jecxz
push
scas
xor
push
and
or
mov
lahf
sbb
push
fsub
rol
inc
ret
lock
movs
into
dec
jg
cmp
dec
mov
scas
jmp
test
xchg
add
cmp
js
loop
(bad)
aas
xchg
sub
jo
lods
mov
bswap
xchg
push
and
push
enter
dec
out
movs
xor
je
sbb
bound
stc
hlt
lods
add
jge
hlt
sbb
pop
pop
or
ja
sti
je
jns
das
std
jp
push
xchg
mov
test
mov
xchg
jno
push
rol
stos
fstp
jecxz
fldcw
cli
aas
(bad)
push
test
mov
js
push
jge
pop
int
push
pop
retf
loope
jae
cmps
lds
leave
int3
mov
mov
add
test
jle
pop
mov
jge
lahf
cs
xchg
pop
ins
movs
push
movs
mov
sub
jne
add
lock
fisub
das
or
mov
sbb
xchg
je
mov
inc
jnp
imul
push
out
xchg
pop
int
mov
mov
or
pop
(bad)
adc
push
pop
dec
ss
daa
add
add
int3
jmp
in
mov
sbb
sub
inc
push
mov
stos
mov
mov
imul
sub
mov
loope
(bad)
mov
call
call
adc
out
aam
fist
fcom
in
test
fild
xchg
mov
js
inc
and
and
pop
sub
mov
pop
rcr
cli
or
pop
repnz
jae
out
inc
fcmovne
jecxz
cmps
jo
cmps
jne
sbb
and
gs
pmaxub
cmps
sbb
mov
fistp
add
(bad)
retf
jo
mov
jp
jp
movs
pop
out
sub
push
ins
or
mov
cli
sar
or
inc
and
shl
push
ret
das
ficom
sbb
or
fidiv
std
cld
mov
lock
or
sbb
scas
jmp
bound
out
and
rcl
retf
jmp
inc
enter
fisttp
sub
imul
leave
sub
mov
cmp
or
aaa
aas
push
add
jno
stos
mov
sbb
and
retf
(bad)
setnp
sbb
dec
xor
pushf
jb
mov
sub
or
retf
mov
out
int
mov
test
mov
and
mov
xor
retf
jg
xor
xchg
push
push
sbb
ficom
movs
inc
xchg
adc
sbb
push
push
push
lock
jno
lods
test
sar
fstp
dec
push
add
mov
pop
dec
cld
xchg
mov
sar
add
mov
outs
pop
mov
cmp
dec
shl
loop
cli
dec
mov
mov
xor
sbb
(bad)
cmp
dec
(bad)
(bad)
cwde
push
lock
jp
pop
xchg
add
adc
push
arpl
cli
cs
lock
icebp
rol
cwde
test
sti
and
mov
xchg
push
(bad)
in
rol
cs
fstp
mov
arpl
jle
das
les
mov
aad
mov
fidivr
jo
fmul
call
lds
jecxz
add
out
in
je
lea
push
arpl
push
(bad)
into
fisttp
adc
es
jp
or
call
mov
cmp
add
ret
xor
sub
mov
rcr
loop
dec
or
in
(bad)
inc
popf
cmp
adc
loopne
cmp
sbb
jg
out
arpl
inc
sahf
iret
call
repz
mov
stc
xchg
movs
push
xchg
dec
xchg
push
adc
(bad)
out
(bad)
(bad)
clc
pop
jle
ficom
lea
and
sub
std
ins
mov
popf
pop
(bad)
mov
sbb
dec
aam
xchg
push
out
pusha
push
push
inc
jge
mov
fs
pop
mov
imul
xchg
lahf
enter
out
rcl
mov
pushf
enter
popa
pop
test
and
int3
outs
icebp
xchg
sbb
sar
inc
test
call
mov
mov
cmp
mov
sahf
push
mov
mov
shl
inc
xor
sbb
fwait
and
xchg
mov
pop
into
mov
add
xchg
pop
retf
jmp
mov
cmp
in
(bad)
in
repnz
fcom
in
cdq
sbb
mov
xor
or
or
scas
stos
dec
mov
or
jecxz
pop
outs
dec
shl
and
fcom
push
xor
jge
iret
in
jmp
pop
cli
jo
dec
cmp
mov
pop
iret
test
jecxz
ss
popa
push
mov
cmps
(bad)
les
inc
adc
add
and
cmp
and
int
sub
fsubr
outs
aad
adc
mov
xrelease
test
jmp
mov
push
cmp
sub
cmps
loope
mov
xchg
mov
jns
mov
sbb
push
mov
mov
enter
jae
ss
mov
out
icebp
in
(bad)
inc
mov
ins
or
loop
ficomp
popa
xor
xor
and
sub
icebp
push
and
xor
loopne
pop
pushf
push
push
jmp
outs
call
cmc
and
sub
(bad)
hlt
push
shr
shl
inc
and
repnz
push
addr16
data16
xor
nop
pop
rcr
out
ins
fst
jo
mov
je
mov
jecxz
ret
ficom
xchg
sahf
mov
mov
mov
mov
bound
cwde
imul
repz
pop
retf
in
inc
call
call
imul
cmp
sub
mov
movs
mov
cmps
mov
ja
dec
pusha
fcmovnb
cmc
push
sub
test
mov
iret
inc
icebp
add
cwde
or
cmp
shr
psubusb
jle
call
pop
or
xor
rcr
daa
ja
pop
adc
imul
ds
hlt
or
push
adc
mov
sbb
rol
mov
fldenv
jne
out
arpl
test
sbb
xor
nop
fdivr
cwde
push
add
jb
push
add
add
pop
test
xor
or
jnp
(bad)
mov
push
add
cmp
movs
ret
in
push
loop
add
jg
fwait
adc
mov
cmp
xchg
data16
pusha
xchg
sbb
mov
loopne
mov
cmp
mov
stos
pop
fimul
cmps
push
cli
mov
adc
mov
mov
ret
retf
cmp
mov
mov
imul
out
cmps
xchg
bound
push
jbe
xor
sub
cmps
aaa
sbb
dec
sub
call
lods
mov
xor
out
pop
ret
daa
xchg
pop
jmp
sbb
int3
loope
popf
push
mov
cld
jge
mov
inc
cwde
xchg
leave
pop
sub
xchg
imul
dec
repz
xor
shr
pusha
jl
push
pop
sti
mov
mov
scas
dec
lahf
lahf
in
inc
or
jae
test
jmp
es
push
popf
inc
retf
sar
adc
fistp
daa
pop
push
inc
cmp
or
mov
inc
pusha
add
mov
out
mov
imul
addr16
dec
imul
push
pop
rol
inc
nop
or
aaa
dec
pusha
inc
and
inc
jmp
lock
jne
mov
dec
dec
into
cmp
and
pop
add
stos
jp
popf
das
leave
aad
not
jb
not
ins
inc
shr
sub
xchg
sbb
sbb
pop
mov
cwde
ficom
jecxz
cmp
fbstp
cmp
arpl
in
gs
jge
fist
ss
sub
movs
(bad)
xor
movs
push
mov
cmps
mov
xchg
push
test
pop
mov
adc
jae
xchg
ins
in
fidiv
mov
mov
cld
mov
or
and
out
lods
or
loopne
and
out
sbb
mov
mov
pop
loop
pop
pop
push
fisttp
or
fisub
mov
pop
cmp
dec
sub
out
sub
add
sbb
aam
or
(bad)
dec
xor
stos
inc
cld
adc
mov
sub
dec
outs
push
xor
push
dec
(bad)
clc
adc
movs
sbb
clc
inc
xchg
pop
jmp
dec
jae
cmp
ret
into
jecxz
adc
push
or
imul
dec
and
(bad)
stc
xor
daa
repnz
mov
pusha
in
mov
cmp
icebp
sbb
mov
enter
or
inc
sbb
ret
cmp
clc
pop
popa
mov
or
(bad)
mov
movs
xchg
jne
hlt
dec
into
jge
pop
cli
dec
enter
inc
cmp
xlat
imul
xchg
clc
pop
or
push
rcr
ja
pop
int
push
movs
xchg
cmc
sbb
cld
inc
sahf
sbb
mov
sub
xor
sbb
or
ficomp
fwait
ds
into
cmp
inc
fcomp
stc
pop
adc
xchg
mov
pop
xor
dec
fcom
imul
imul
mov
loopne
mov
in
js
push
dec
xchg
add
daa
mov
stc
mov
push
call
push
mov
add
out
sub
dec
jo
hlt
xchg
push
jecxz
fmul
cmp
xchg
sbb
sbb
stos
inc
pushf
xchg
shr
(bad)
add
test
scas
bound
movs
lods
dec
xor
(bad)
jbe
push
(bad)
jns
jl
jle
repnz
leavew
mov
cmp
jb
mov
xchg
lods
aad
std
into
scas
je
les
mov
mov
(bad)
xchg
mov
jecxz
cmp
hlt
cs
gs
push
mov
(bad)
sti
cmp
xchg
scas
test
lea
mov
je
pop
inc
push
(bad)
mov
cmp
hlt
call
enter
and
and
nop
and
fdivr
cld
adc
inc
and
and
lods
imul
mov
mov
ins
enter
or
xor
lock
jno
cmp
lahf
sub
je
pop
pop
dec
loop
into
adc
dec
addr16
ret
jmp
ret
pop
mov
pop
cmp
stos
sbb
cdq
mov
fisub
inc
sub
inc
sub
fpatan
xor
xchg
inc
and
fs
lock
jg
fcom
imul
js
lock
cmp
jp
pushf
xchg
or
jecxz
mov
xlat
bnd
jmp
in
cmp
add
mov
and
cmp
xchg
fwait
inc
out
in
ret
sub
pop
ss
sbb
mov
cmps
mov
sbb
inc
pop
mov
sets
adc
in
(bad)
jb
mov
or
mov
add
pop
cmp
es
dec
sub
push
xchg
mov
pushf
arpl
xchg
frstor
ret
imul
inc
jl
xor
xchg
jne
mov
pop
out
mov
adc
mov
sub
jp
add
outs
les
lods
lods
mov
pusha
mov
fisub
jle
cs
mov
loop
pop
aam
pop
shl
or
enter
fwait
xor
sub
ret
emms
push
iret
popa
push
sub
in
inc
sub
(bad)
popf
inc
or
cmp
out
ret
out
je
push
mov
push
xchg
clc
sub
gs
pop
xor
js
je
push
mov
loop
enter
and
xchg
cmps
and
ins
popa
ja
cmc
fwait
jle
xchg
adc
push
jns
pop
push
jle
std
shl
pop
mov
retf
push
call
jl
aad
imul
pop
push
or
addr16
stc
or
es
sbb
out
mov
push
(bad)
shl
xchg
lea
js
push
mov
je
adc
sub
je
cmp
in
add
sub
into
mov
lahf
mov
xchg
(bad)
out
pop
das
sbb
pop
(bad)
lahf
inc
das
les
daa
and
dec
retf
push
mov
in
add
movs
or
cmp
pusha
repnz
add
or
ja
imul
sbb
fdivr
fistp
aad
mov
cmp
mov
jge
dec
ret
add
in
mov
pop
loop
inc
pop
fiadd
jmp
pcmpgtw
shl
enter
fwait
dec
add
sbb
and
inc
jnp
std
sub
or
xor
pop
sti
das
into
xchg
push
fwait
push
outs
pop
(bad)
xchg
imul
inc
dec
shl
je
push
mov
or
dec
and
and
cmp
(bad)
mov
push
sbb
inc
xchg
sbb
jge
xor
cdq
fsubrp
xor
and
mov
push
stos
jne
sbb
mov
cmp
into
iret
mov
jno
sqrtps
sub
sub
aas
sahf
cdq
cmps
pop
arpl
movs
add
(bad)
lds
loope
das
xor
cmps
hlt
ins
test
jmp
pop
and
adc
popa
jo
test
mov
or
in
mov
pop
jmp
mov
or
jmp
cwde
mov
adc
mov
mov
and
cmc
test
icebp
outs
inc
mov
sbb
(bad)
or
mov
leave
cmc
pop
dec
(bad)
or
lahf
cwde
push
jnp
push
jecxz
mov
pop
scas
push
dec
jmp
and
adc
push
scas
loope
(bad)
mov
dec
movs
inc
retf
or
dec
lock
test
data16
out
cwde
sub
pop
cmps
stos
adc
add
mov
sub
jnp
push
jne
xchg
xor
ins
out
sbb
iret
pop
jns
add
push
loope
jge
push
dec
or
mov
test
(bad)
xor
test
call
js
add
ret
test
shl
mov
xor
outs
(bad)
pusha
mov
push
imul
inc
mov
mov
push
or
and
or
pop
add
adc
sbb
adc
mov
pop
ins
aad
mov
inc
lds
dec
sti
je
push
scas
or
xor
sahf
iret
ja
je
mov
add
sbb
fadd
push
iret
xchg
retf
jb
sbb
je
jle
mov
retf
mov
test
dec
push
jge
mov
mov
cmps
dec
mov
inc
aam
add
adc
in
push
jmp
push
sbb
loope
sbb
fsub
fdivr
loop
pop
pop
jo
xchg
and
(bad)
sbb
imul
sub
(bad)
call
pushf
imul
loopne
inc
cmps
dec
xchg
inc
jp
pop
mov
inc
js
push
sub
out
push
ja
mul
mov
stos
pop
mov
sbb
inc
sbb
cwde
cwde
push
mov
pop
pop
out
out
lods
mov
and
sbb
push
daa
cmp
std
lods
cmp
push
add
jmp
ss
mov
push
stos
popa
mov
fsub
pop
aaa
adc
push
jbe
xchg
pop
aam
dec
out
xor
shr
lahf
jl
hlt
mov
sub
cmc
(bad)
pusha
lock
leave
dec
jbe
into
retf
aas
js
cmp
xchg
mov
jno
inc
xchg
or
das
icebp
and
pop
dec
jle
arpl
inc
mov
(bad)
test
pop
fs
pop
or
adc
push
push
dec
sbb
push
pop
cmp
jge
mov
xor
cli
ja
adc
rcl
out
and
imul
mov
jl
dec
sbb
retf
(bad)
out
or
call
mov
mov
fdivr
sbb
fdiv
add
mov
mov
dec
jge
dec
mov
add
in
and
in
call
aas
fnstenv
bound
push
shl
retf
xchg
mov
test
out
int
mov
test
scas
retf
inc
or
inc
ret
stos
mov
add
cmp
fnstsw
mov
push
pushf
lods
pop
sub
cmps
into
mov
fadd
iret
pop
ins
add
or
mov
call
dec
xor
cmp
(bad)
dec
push
push
xchg
cmc
jp
(bad)
or
xchg
cmps
xchg
enter
in
bnd
out
mov
mov
fadd
push
lods
lahf
pop
(bad)
in
mov
repz
mov
cmp
nop
rol
loope
ror
sbb
jge
xchg
out
add
sub
sub
pop
mov
outs
and
jmp
retf
pop
lock
nop
out
(bad)
mov
lods
aaa
ror
cld
call
out
mov
into
mov
push
out
jp
mov
xchg
loope
repz
xlat
loope
retf
fdivr
mov
(bad)
mul
or
out
pushf
mov
gs
je
cmp
leave
loope
sub
cwde
data16
fdivp
push
dec
inc
out
retf
shl
mov
jmp
add
sub
test
jl
inc
jbe
out
jmp
loop
out
test
pop
pop
ja
dec
mov
dec
(bad)
test
loope
loope
sub
cmp
pushf
outs
movs
jg
fbld
dec
test
lods
jle
mov
out
or
cmp
cwde
jp
push
pop
pop
sub
(bad)
ja
clc
js
icebp
adc
cmc
popf
pop
fadd
out
addr16
push
inc
hlt
xor
call
ins
dec
rol
idiv
outs
or
mov
(bad)
setl
xchg
mov
xor
repnz
in
movs
scas
push
cmp
movs
stos
adc
enter
sbb
xchg
sub
in
or
ins
in
out
mov
add
outs
stos
jle
adc
loop
je
push
sbb
and
sbb
xchg
ret
fimul
mov
loopne
xor
mov
xchg
dec
lods
test
mov
pushf
xor
push
pop
cmc
fwait
fs
aam
mov
ss
xchg
mov
dec
fnstcw
mov
mov
mov
xor
(bad)
les
inc
imul
cmp
push
jge
xchg
lods
scas
clc
stos
or
in
test
and
arpl
cmp
xor
inc
int3
sbb
or
retf
jp
or
xchg
mov
add
shl
in
outs
popf
and
pop
push
push
(bad)
dec
mov
int3
mov
cs
cwde
out
stc
int3
aam
test
push
lahf
pusha
add
xor
sbb
int
sbb
clc
or
mov
push
imul
push
in
adc
test
adc
add
cmp
into
jb
mov
xchg
jecxz
cmp
mov
inc
jge
and
cmc
cs
aad
imul
jl
cmp
shr
xor
push
jge
fwait
jnp
popf
aaa
ret
(bad)
xchg
mov
mov
mov
xor
mov
repnz
jg
std
inc
ins
or
xor
add
popf
sbb
scas
and
push
adc
adc
inc
sbb
fadd
mov
sub
shl
sub
mov
cmp
sbb
jne
je
mov
xor
dec
int3
jmp
pop
add
and
mov
inc
stc
mov
addr16
xor
xor
out
jbe
repnz
sub
repnz
jo
int3
dec
jecxz
mov
jno
lods
cs
push
pop
outs
push
jno
outs
cwde
jnp
loop
jge
add
daa
sub
dec
add
ret
test
imul
sbb
dec
mov
mov
cmc
iret
stos
lods
std
sub
dec
inc
nop
cmps
repnz
into
cmps
sub
mov
pop
retf
jno
xchg
lds
data16
(bad)
sbb
push
ds
or
pop
dec
fbld
cmc
mov
cmp
call
les
fidivr
mov
or
inc
mov
neg
dec
cld
push
repz
int3
xlat
sbb
mov
imul
xor
loop
outs
call
cmp
jmp
icebp
int3
ds
stos
mov
adc
mov
inc
add
ds
adc
retf
mov
mov
stos
in
pop
xlat
jae
pop
scas
ins
and
pop
push
movs
out
rcl
xlat
cmp
push
lahf
push
jg
pop
imul
fcomp
jmp
aas
sub
fdiv
push
sti
ret
leave
xchg
addr16
push
les
out
or
add
sub
xchg
imul
mov
xchg
jo
mov
mov
sub
(bad)
xor
inc
mov
sbb
adc
push
imul
add
push
sbb
jl
pop
jecxz
lock
sar
mov
fadd
dec
push
push
ss
xchg
jnp
popa
xchg
dec
stos
(bad)
xor
aam
adc
add
add
loop
outs
aad
cli
push
arpl
fcomp
inc
add
dec
and
dec
fs
fsub
xchg
inc
sbb
dec
pop
dec
hlt
mov
std
test
xor
fidivr
stc
push
mov
pop
stos
xor
add
popf
ss
mov
push
shr
add
inc
cmp
adc
pcmpgtw
fmul
fsubr
nop
clc
les
sti
jo
fnsavew
pop
inc
mov
xor
int
adc
mov
es
in
cmps
(bad)
scas
cmp
jbe
inc
push
mov
movups
in
push
je
mov
jg
bound
and
cmc
popa
inc
mov
adc
cmp
add
scas
and
pop
jl
or
popa
nop
shl
call
dec
fucomp
mov
or
add
add
add
test
cmp
fisttp
add
pop
nop
pop
mov
jbe
cs
push
sar
js
jmp
xor
jecxz
jmp
fsincos
rcl
sub
mov
imul
das
sub
call
add
out
jbe
rcr
(bad)
push
sub
lea
mov
lds
push
cmp
jb
clc
inc
jns
mov
and
call
xor
pop
push
clc
out
mov
xlat
sbb
call
rol
adc
ins
lea
mov
push
inc
pop
aas
stos
cld
clc
cmp
jb
push
xchg
jg
js
xchg
test
inc
mov
pop
enter
pop
jmp
pop
mov
push
add
test
cmp
arpl
xchg
xchg
sbb
and
shl
stos
mov
sbb
or
fst
imul
push
test
lock
xchg
and
ins
popf
xchg
pop
jg
js
mov
stos
in
sbb
aam
movs
scas
je
pop
xchg
(bad)
fisubr
gs
xor
xchg
inc
pop
std
mov
and
arpl
jae
cmp
sti
inc
(bad)
hlt
xchg
fild
sbb
call
imul
mov
xor
sub
inc
and
lods
cmc
cmp
stos
imul
cmc
mov
ror
popf
retf
mov
inc
mov
jbe
aad
nop
out
cmps
aam
inc
jecxz
std
js
ds
cmp
imul
cmp
add
xchg
repz
jg
js
dec
pop
fnstsw
lds
or
stos
lock
mov
stos
pop
ss
xlat
div
clc
fnstsw
push
pop
repnz
add
xor
rcl
mov
ficomp
jno
mov
adc
shr
cli
or
outs
jmp
or
cli
in
cmp
cmp
sbb
cmps
(bad)
ss
cmps
sahf
or
push
mov
addr16
outs
push
sbb
jl
(bad)
mov
inc
das
stos
jns
test
pop
cmp
test
and
ja
test
movs
mov
add
mov
xor
cs
in
mov
test
sub
adc
sti
xchg
cmp
pop
cmp
or
inc
imul
push
loopne
test
jo
dec
imul
aas
(bad)
pop
cmp
mov
ficomp
sub
and
jl
bound
in
adc
mov
loopne
adc
cmps
ss
into
je
in
sub
jo
test
add
out
mov
sub
sub
mov
pop
test
mov
cmp
adc
and
xor
jbe
push
loope
rcr
or
imul
xchg
xor
out
(bad)
hlt
mov
add
mov
sbb
loopne
xlat
sub
iret
js
(bad)
int3
pop
xchg
(bad)
dec
dec
loopne
aas
pushf
sbb
sub
dec
mov
sbb
add
add
loopne
adc
pop
popf
icebp
ins
dec
xlat
dec
ds
in
dec
mov
sti
dec
retf
repz
fst
(bad)
loopne
sub
mov
mov
aad
(bad)
sbb
push
int
mov
dec
jmp
nop
jne
jb
pop
rcr
(bad)
jnp
shl
test
add
push
add
sub
pop
loope
jno
cmp
ins
push
push
rcl
sti
xchg
aad
ins
mov
or
enter
pushf
test
pop
shr
mov
mov
stos
pusha
enter
(bad)
xchg
push
rcr
popa
repz
pop
jno
jecxz
cdq
mov
adc
pop
mov
sbb
dec
cmp
and
push
jne
addr16
test
push
mov
sbb
fs
fidiv
sub
mov
lea
movs
jge
neg
repz
xchg
call
js
mov
push
xor
repnz
data16
je
movs
xchg
and
fiadd
adc
jle
fbld
dec
xchg
push
int3
push
adc
cmp
mov
jecxz
test
xchg
fprem
aaa
or
mov
icebp
dec
pop
stc
jmp
cld
cmps
sti
fbld
outs
fsubr
dec
arpl
and
jne
div
rcr
jmp
sbb
ds
rcr
sub
xchg
inc
dec
push
ja
sub
lods
fdiv
add
outs
xchg
pusha
pop
fadd
les
test
cdq
pop
mov
outs
iret
adc
lods
das
(bad)
ret
adc
pop
mov
out
mov
jmp
push
dec
lock
adc
icebp
in
and
adc
and
iret
add
or
xor
ja
aas
dec
push
jne
(bad)
or
mov
fiadd
xchg
call
aaa
mov
call
inc
(bad)
aam
push
div
sbb
aad
ror
aaa
in
test
sub
popf
sar
lds
jb
call
into
push
adc
inc
jae
das
push
mov
enter
sub
mov
push
sub
mov
arpl
pop
jnp
add
cmp
xor
outs
stos
mov
xor
in
mov
inc
adc
retf
mov
mov
pop
jge
inc
adc
sbb
movs
(bad)
(bad)
out
int
dec
xchg
jmp
out
stos
inc
mov
jno
rol
aad
data16
mov
cmp
pusha
inc
rcr
pop
xchg
push
fnstcw
inc
stc
imul
xchg
repnz
stos
test
clc
ror
xor
mov
shr
xchg
mov
pop
out
ins
push
shl
mul
inc
xchg
stc
cli
cmc
movs
hlt
push
push
ins
or
adc
movs
cmps
push
mov
mov
aam
sub
push
inc
sbb
mov
adc
push
push
pop
imul
lods
xchg
cli
inc
jge
xchg
xchg
mov
adc
cmp
mov
fisttp
test
test
lock
stos
(bad)
and
add
xchg
dec
aas
sub
mov
pusha
jge
cs
movs
ja
out
add
pop
jge
push
push
sub
inc
in
push
cld
dec
jp
push
pushf
(bad)
pop
and
jbe
dec
outs
(bad)
fbstp
xchg
in
cmp
lods
lods
jge
jbe
js
sar
(bad)
mov
jae
shl
xchg
loop
aas
inc
xchg
(bad)
push
clc
out
scas
fwait
or
fidiv
or
fwait
adc
jns
add
xor
push
sub
aam
das
push
lds
dec
rcr
add
inc
retf
(bad)
jb
inc
in
movs
or
es
je
jmp
dec
sar
cmps
pop
out
pop
xor
xor
rol
shl
cdq
xor
pop
lahf
out
add
mov
adc
sahf
adc
sbb
pop
int3
stos
push
test
dec
fdiv
mov
or
sbb
or
rcl
enter
inc
jmp
stos
out
add
(bad)
inc
std
mov
out
stos
cdq
in
sub
sahf
push
call
or
outs
aas
pop
inc
data16
mov
adc
push
out
dec
cmp
call
fsubr
fstsw
inc
movs
xchg
nop
xchg
xchg
jno
leave
lods
inc
movs
push
call
ret
retf
and
xchg
pop
into
inc
push
pop
out
cmp
jmp
add
adc
(bad)
sub
shl
sar
jle
mov
(bad)
aas
xor
xchg
lods
imul
sub
sbb
out
or
xchg
mov
fld
and
sbb
or
xchg
push
lds
pop
in
push
push
mov
and
sahf
pop
jae
pop
inc
inc
push
jo
xchg
sub
xlat
or
jge
cs
adc
int3
data16
dec
sbb
inc
xor
movs
jnp
inc
sub
or
jb
fmul
jb
push
loopne
pop
aad
jge
shr
dec
jl
push
repnz
outs
enter
fistp
mov
push
xchg
out
imul
adc
sbb
test
je
aad
shl
not
push
mov
loope
hlt
in
or
pop
out
mov
leave
inc
bound
sub
fwait
ret
stos
adc
fcmovu
jmp
pushf
es
push
(bad)
push
cmp
add
mov
xchg
cmps
or
imul
add
cmp
iret
sbb
mov
pop
add
jge
add
cmp
rcr
(bad)
mov
movs
div
ret
jl
in
push
mov
cmps
mov
hlt
ds
mov
xor
loope
(bad)
imul
ss
jb
jmp
pusha
pop
sti
shl
sbb
addr16
mov
stos
mov
pop
lds
push
push
das
xlat
call
dec
scas
sub
in
es
stos
repz
scas
ud1
or
pusha
scas
push
sahf
jbe
xchg
push
pop
xlat
lds
outs
sbb
xor
fs
sub
jmp
sti
xor
sti
gs
or
xor
sbb
push
scas
stos
pusha
rcr
xor
pop
mov
into
lahf
and
push
cmp
call
scas
xor
repz
call
inc
pop
cmp
mov
cmp
neg
pop
jg
enter
mov
add
sahf
dec
data16
outs
rep
sub
js
enter
and
dec
jmp
sbb
pop
popf
outs
sub
rcr
test
in
imul
(bad)
int3
cmp
data16
cmp
hlt
jnp
stos
inc
fldcw
mul
cmp
cmp
fist
movs
outs
cld
mov
and
scas
aas
stos
pop
bound
dec
test
jp
add
jnp
and
inc
(bad)
xchg
std
repnz
fild
pop
mov
in
fadd
mov
popf
jp
sub
in
cmps
sub
int
nop
and
out
fmul
pop
stos
aas
ja
push
ret
xchg
pusha
in
int
mov
mov
(bad)
xchg
adc
in
sub
test
enter
movs
xchg
repz
retf
ret
scas
cli
cmp
adc
icebp
pusha
sti
mov
add
dec
scas
or
fidiv
shl
popa
push
jp
sar
jp
fsub
nop
mov
pop
push
cli
mov
mov
inc
mov
xchg
push
add
movs
mov
push
(bad)
add
cmp
xchg
stos
jmp
pop
or
jl
xchg
(bad)
push
sbb
fld
jmp
btr
inc
push
lods
or
push
mov
xor
cmps
fst
push
mov
mov
mov
out
enter
and
mov
mov
adc
shl
adc
mov
or
push
pop
sub
loop
jmp
arpl
sbb
pop
or
push
pop
push
lea
das
jmp
dec
lods
out
push
sub
mov
int
sbb
dec
sub
repnz
xchg
stos
sub
stos
xchg
cmp
inc
add
mov
inc
mov
xchg
lods
lods
in
fisub
and
in
scas
inc
std
jmp
div
bnd
icebp
das
xor
push
aas
add
mov
movd
xchg
mov
mov
inc
jbe
aaa
adc
imul
repnz
pop
and
push
sbb
adc
add
ffreep
cmp
and
jl
sub
lahf
mov
adc
cmp
inc
inc
cmp
repz
sbb
test
and
leave
cmp
mov
push
add
push
sub
in
dec
jne
sbb
(bad)
lock
dec
sti
inc
sbb
fstp
and
imul
std
xchg
imul
mov
es
and
das
mov
inc
(bad)
(bad)
push
repnz
(bad)
bound
not
outs
and
push
dec
xchg
mov
push
adc
lock
hlt
rcl
mov
cmps
sub
or
dec
add
push
or
xchg
call
adc
lds
sub
inc
cmps
jo
(bad)
lods
push
add
jge
test
mov
sbb
icebp
push
or
mov
aam
xchg
ins
div
xlat
xchg
push
adc
cmp
cli
push
push
in
adc
cmc
cmc
int
(bad)
jg
out
push
popa
xchg
mov
fistp
cmps
mov
das
mov
das
aaa
or
sub
xchg
xlat
les
jecxz
mov
mov
(bad)
sub
out
ss
ficomp
jmp
push
xchg
xchg
movs
loop
xor
clc
imul
jo
mov
loopne
mov
movs
jb
leave
add
(bad)
sbb
stos
in
hlt
push
sbb
jne
jne
test
fisttp
mov
pop
and
or
in
mov
xor
bound
or
xor
iret
inc
mov
pop
jnp
std
call
idiv
je
aaa
popf
inc
jge
mov
lods
jb
jbe
mov
add
add
push
cmps
mov
and
jge
jmp
cmp
jge
shl
mov
mov
adc
jecxz
mov
cmp
(bad)
pop
dec
mov
out
out
retf
shl
add
outs
hlt
mov
or
pushf
pusha
aam
add
adc
(bad)
fdivr
and
sbb
icebp
xor
sub
xlat
xchg
repz
out
pop
fst
addr16
inc
pop
fsubr
mov
repnz
sub
sub
js
fisttp
push
(bad)
shl
shr
loopne
sbb
xchg
aam
les
cmp
add
pop
cmp
ror
loop
xor
add
mov
cmp
sbb
jae
or
adc
and
repnz
add
pop
aaa
test
jb
stc
adc
repnz
xchg
and
movs
(bad)
(bad)
in
sub
loop
add
aaa
arpl
aas
sub
call
pop
mov
inc
cmps
fild
test
mov
xchg
hlt
mov
dec
stc
inc
cdq
aaa
retf
dec
mov
ret
mov
sub
es
inc
mov
dec
fdivr
int
fimul
aad
cmp
and
out
jp
push
(bad)
or
push
mov
sar
call
repnz
lods
js
int3
inc
inc
xchg
inc
push
mov
inc
jmp
rol
std
les
mov
mov
sub
std
or
add
mov
out
pop
mov
pop
sub
mov
mov
repz
jge
test
in
stos
mov
mov
scas
repz
pop
enter
pop
sub
xchg
pshufw
mov
movs
dec
jae
retf
sbb
adc
icebp
mov
stos
les
fwait
dec
sub
daa
ds
aaa
inc
mov
push
sar
xchg
shl
ret
mov
imul
and
outs
dec
mov
pusha
in
xchg
adc
sahf
rol
ins
jg
test
mov
mov
jg
popa
adc
mov
mov
out
and
leave
sti
push
sbb
icebp
pop
fisub
adc
push
sub
push
jp
pop
movs
jb
xor
add
lds
rep
xchg
inc
cs
xor
inc
mov
fdivr
fdivrp
in
jne
fmulp
jo
sar
loop
(bad)
jle
xchg
or
adc
int3
add
test
mov
jl
push
clc
data16
test
and
aad
enter
pop
test
jae
aad
or
lods
and
jne
retf
fidivr
imul
ror
adc
ja
or
pop
sahf
jmp
add
cmc
xor
inc
stos
in
(bad)
daa
adc
or
jae
jle
in
loopne
pop
ja
ret
pushf
mov
push
sti
dec
adc
dec
cmp
into
ss
sbb
xchg
shl
jecxz
pop
fstp
xor
test
inc
arpl
pop
js
popa
daa
std
inc
xchg
daa
xor
cmp
or
loop
adc
sbb
dec
dec
inc
neg
leave
rcl
jne
jecxz
fcmovb
scas
jmp
mov
mov
(bad)
mov
lods
xchg
fcmovnbe
inc
xchg
mov
rep
enter
push
cli
jle
ficom
mov
scas
mov
sbb
test
cmp
mov
or
push
mov
cld
push
pop
nop
dec
jbe
cmp
out
push
sar
ss
fist
xchg
cmc
xor
pop
push
add
dec
cmp
xchg
sbb
add
xchg
mov
lods
hlt
push
add
(bad)
out
sbb
push
sub
in
call
shr
mov
dec
lds
push
adc
mov
cli
mov
jg
lea
cmp
dec
neg
cmp
jnp
in
jbe
stos
outs
pand
scas
mov
or
push
dec
sub
jmp
jno
or
or
pushw
pop
movs
adc
ss
fcom
jns
xlat
dec
xchg
add
sub
sub
mov
pop
sub
pop
addr16
cmp
aas
std
cmps
leave
addr16
pushf
dec
dec
jae
movs
fs
mov
sub
add
scas
add
and
sbb
xchg
(bad)
data16
dec
xor
stos
cmp
sbb
(bad)
in
dec
mov
out
push
ret
dec
jo
mov
sbb
jge
sub
push
in
mov
pop
mov
ficom
inc
jg
mov
adc
fimul
sahf
cdq
cli
enter
or
mov
jne
test
xchg
push
rol
push
jecxz
mov
add
xchg
ss
mov
mov
add
pop
test
int3
ret
inc
nop
lea
fdivr
add
test
xchg
sub
pop
jns
arpl
mov
rcl
mov
push
sub
add
mov
xchg
inc
xchg
cmp
jmp
mov
call
test
adc
icebp
xlat
adc
into
sbb
sbb
inc
jg
push
cli
push
xor
dec
or
push
and
scas
fucomp
fwait
jl
aaa
loop
je
les
mov
ror
icebp
(bad)
cmp
xchg
in
xchg
das
jle
xchg
mov
pop
push
test
data16
in
xchg
or
leave
adc
jecxz
cli
pushf
aas
in
mov
ret
add
pop
jge
and
inc
pusha
out
inc
push
and
dec
fxch
xchg
repz
retf
lods
cli
sub
jns
dec
inc
sbb
jge
loope
jl
iret
pop
scas
shl
mov
jne
add
mov
enter
sbb
mov
mov
xor
fst
fs
jmp
test
and
or
pop
ins
xchg
jne
mov
push
push
inc
jno
jno
inc
fucomip
aam
xor
or
sub
fsub
dec
pusha
icebp
xchg
pop
sar
cmps
fcmovnu
push
mov
enter
cld
lods
cmps
aas
ins
clc
fistp
test
jae
pop
xchg
lds
mov
loope
leave
mov
push
shr
aam
dec
dec
cmp
dec
xor
cli
cmp
xchg
inc
into
mov
push
jb
pop
les
mov
jp
xchg
lea
call
ret
stos
xor
imul
iret
or
iret
add
mov
popf
pop
pop
adc
mov
bound
retf
arpl
mov
shl
xchg
fld
(bad)
adc
aam
jnp
jae
mov
cli
pop
inc
enter
js
add
or
dec
or
pop
mov
inc
pop
inc
pop
movmskps
out
repnz
dec
pop
push
ror
mov
mov
add
fmul
shl
(bad)
fcom
mov
lock
mov
mov
in
lods
(bad)
mov
mov
adc
mov
dec
push
jge
das
icebp
(bad)
jne
jg
inc
jb
out
outs
arpl
ss
mov
fs
adc
hlt
xchg
push
mov
add
mov
mov
cmp
xchg
lods
out
sar
into
mov
in
retf
add
xchg
mov
ja
or
mov
cmc
mov
gs
add
xor
test
mov
adc
leave
xchg
adc
ffree
xchg
xor
mov
scas
jp
mov
push
(bad)
rol
jge
test
cmc
mov
clc
icebp
outs
mov
and
out
(bad)
pop
jp
sbb
jbe
sbb
call
xor
and
jg
fsub
xchg
lahf
cmp
das
fstp
out
jg
xchg
repnz
xor
jle
les
loope
dec
sbb
mov
pushf
sub
pop
addr16
mov
inc
push
cmp
jne
repz
ins
movs
jmp
dec
mov
lock
jmp
enter
in
adc
pop
push
(bad)
cmp
ja
mov
jne
aam
div
add
xchg
xchg
and
inc
xchg
dec
xor
xchg
aad
aad
pop
cmp
adc
std
dec
sbb
xor
jmp
rcl
clc
enter
cmp
jge
leave
repz
jb
push
iret
cmc
xchg
scas
outs
pop
mov
xchg
bound
push
adc
test
pushf
dec
test
inc
xor
jg
jecxz
mov
sub
pop
fwait
iret
push
mov
(bad)
std
(bad)
jmp
aas
jne
lahf
fst
hlt
mov
bound
sub
jmp
std
sbb
sbb
jge
std
mov
popa
push
gs
stos
loopne
mov
jno
mov
les
stc
pop
xchg
scas
leave
xchg
inc
add
imul
mov
inc
test
bound
ins
mov
xchg
(bad)
mov
jge
inc
fadd
cmp
retf
and
adc
dec
jmp
cwde
push
call
cli
xor
das
lea
mov
clc
push
push
and
dec
repnz
fs
pop
cmp
mov
ja
scas
pusha
lods
and
aam
cmp
jmp
xor
jnp
aad
mov
jo
add
les
mov
add
out
gs
or
sbb
push
mov
fist
shr
sub
call
cwde
jbe
push
xchg
mov
movs
and
xchg
xchg
or
pop
mov
xor
out
push
les
stos
mov
inc
and
pop
pop
jg
inc
mov
aam
lock
cs
inc
mov
popa
pop
dec
sbb
(bad)
mov
in
cmp
ds
sbb
icebp
je
cmp
fwait
mov
movs
ffree
stos
ror
jge
wrmsr
or
xor
dec
lds
(bad)
dec
xchg
cli
ret
fxch
dec
add
mov
push
test
movs
jbe
pop
scas
pop
sahf
pop
stc
and
inc
and
loopne
xchg
and
mov
out
cwde
jmp
(bad)
repz
jmp
test
mov
(bad)
fistp
cmp
fst
jne
push
sub
mov
mov
adc
rol
push
xsave
mov
leave
add
loope
sbb
addr16
aas
mov
loopne
je
mov
mov
in
sti
jg
xchg
xor
adc
repnz
int3
mov
dec
test
out
sti
mov
xor
aad
fdivp
and
rcl
inc
push
or
sbb
popa
aad
or
dec
idiv
movs
pop
jg
inc
fiadd
or
jae
xchg
sub
xchg
jae
sub
adc
test
push
sbb
sbb
xchg
add
les
push
int3
enter
dec
loop
inc
lods
and
ins
(bad)
sbb
xchg
cdq
rol
cmps
push
sbb
inc
push
jnp
lahf
add
fldcw
mov
mul
push
or
inc
sti
mov
fcomip
xchg
cdq
sbb
icebp
mov
in
dec
mov
add
inc
add
(bad)
aas
add
(bad)
xor
rol
pop
popf
mov
mov
loopne
pop
mov
add
mov
jne
mov
jp
xchg
cmp
xchg
cli
dec
jnp
jnp
lea
mov
out
test
call
clc
inc
mov
sbb
cmp
int3
ss
adc
out
shl
out
sbb
xor
(bad)
cmp
loope
jb
dec
cmp
jbe
jl
(bad)
in
popa
imul
fcomp
pop
scas
pop
and
mov
fisttp
cmp
push
xchg
mov
inc
dec
loope
xor
nop
(bad)
pop
mov
mov
jge
rcl
or
dec
pop
xor
add
inc
mov
inc
jb
mov
repz
ja
fsub
aad
inc
ret
scas
push
jo
lds
scas
jo
lds
adc
cmp
mov
scas
fild
pop
xlat
ins
dec
sub
int
dec
test
ds
xor
lods
mov
je
stos
jo
push
clc
mov
xor
push
adc
inc
rcl
std
int3
outs
or
pop
mov
sub
inc
pusha
loop
pop
cmp
(bad)
aad
mov
lds
jbe
mov
retf
and
pop
xchg
jmp
pop
lea
jmp
call
retf
dec
jp
loopne
mov
or
cmp
int3
mov
dec
xchg
cmp
ffree
fcomp
lahf
in
iret
lock
test
lods
push
enter
adc
push
push
mov
sahf
xchg
mov
ja
cmp
cmp
les
or
jp
lods
add
push
cli
jmp
stos
and
jle
icebp
inc
adc
cmp
retf
cmp
rol
outs
cmp
call
xchg
add
inc
rcl
adc
sub
mov
push
fstp
fs
cmp
jnp
iret
aaa
add
mov
stos
int3
mov
(bad)
test
pop
sub
sub
push
xor
stos
and
sahf
xor
add
xchg
mov
mov
popf
mov
lea
pushf
fidivr
pop
or
(bad)
in
sub
sub
add
mov
jne
mov
dec
outs
or
lods
gs
jo
shr
jge
arpl
sbb
push
leave
dec
and
not
in
sbb
cmps
scas
aaa
test
bswap
cmp
xor
stos
push
mov
adc
add
fsub
add
in
cwde
jmp
adc
xor
push
inc
test
lods
imul
push
mov
add
pop
and
xchg
ja
test
mov
pop
jne
enter
inc
xor
(bad)
movs
or
cld
repnz
dec
inc
inc
pusha
xchg
sbb
mov
and
ins
xchg
mov
cmp
sub
xor
mov
ins
mov
shl
add
or
(bad)
ja
jecxz
sar
es
int3
sti
rol
dec
mov
jmp
je
popf
mov
jns
inc
jns
add
adc
icebp
inc
or
test
ja
cmp
sar
xchg
mov
sbb
mov
rdtsc
push
add
jmp
add
mov
add
call
(bad)
nop
or
add
add
call
mov
jb
push
xor
pop
push
dec
lock
fnstenv
push
scas
int3
shr
div
call
clc
xor
es
scas
sub
xor
ins
cmp
adc
adc
outs
out
mov
mov
out
sbb
xchg
adc
adc
and
inc
and
pop
adc
push
fld
cdq
cmc
jge
push
imul
or
dec
mov
xlat
push
stos
mov
mov
hlt
ds
sub
imul
mov
mov
jb
ss
out
mov
xchg
jge
adc
ret
int
loop
movs
in
cs
mov
mov
dec
(bad)
test
rol
push
ins
adc
js
mov
rcr
test
in
pusha
jge
(bad)
in
mov
enter
fild
mov
fdivr
add
test
in
mov
pop
push
enter
mov
pusha
jno
cwde
loopne
lock
xchg
xchg
jmp
(bad)
in
jo
mov
aad
fcomip
xlat
inc
mov
add
pop
bound
adc
xor
cmp
sub
dec
stc
lds
fnstcw
push
loopne
push
ins
xor
movs
dec
mov
pop
xchg
pusha
pusha
xabort
adc
retf
dec
lea
jnp
retf
sbb
pusha
imul
fwait
inc
rcr
jbe
arpl
in
ins
jmp
inc
jl
jmp
cmp
retf
dec
add
test
cs
push
aas
fldcw
jno
xchg
adc
mov
mov
add
dec
push
sub
sub
mov
lds
jnp
xchg
xchg
repz
xor
jmp
sbb
or
cmc
or
sbb
movs
loope
and
mov
outs
mov
pop
or
ret
popa
dec
xlat
lea
jge
jecxz
pop
les
(bad)
mov
fcomp
loope
pop
cmp
dec
sbb
test
sub
xchg
shl
jo
jns
push
out
push
dec
js
mov
(bad)
jmp
js
inc
push
mov
jmp
ds
mov
mov
call
fisttp
or
lahf
jb
dec
fimul
call
call
in
cmp
push
pop
adc
add
(bad)
iret
mov
fsubr
gs
imul
pop
(bad)
pop
jae
sub
in
pop
add
aam
pop
xchg
xchg
and
add
jecxz
pop
push
jb
and
push
mov
xor
jg
clc
mov
(bad)
pop
pop
add
pop
inc
rcr
or
pop
fadd
dec
push
xor
fisttp
pop
inc
das
in
outs
pop
bound
jo
mov
or
ds
div
cmp
mov
das
ja
inc
cs
dec
add
imul
loopne
test
mov
aas
jmp
loopne
cmp
jecxz
les
cmp
push
mov
mov
fs
out
outs
iret
std
push
retf
stc
or
sub
aam
bound
jle
(bad)
mov
pop
pop
je
sar
shl
in
pusha
inc
xchg
push
add
cmp
fdiv
call
enter
xchg
mov
mov
dec
or
aam
cmps
stos
fnstsw
dec
mov
pop
outs
in
cdq
leave
add
fild
inc
(bad)
pop
fsubrp
jns
jo
loop
push
(bad)
jle
in
xchg
xchg
iret
loopne
mov
dec
sub
adc
sub
ror
popf
in
rcr
ins
adc
adc
push
outs
bound
(bad)
dec
mov
adc
jo
adc
sub
add
xchg
lds
xlat
das
jge
outs
icebp
pop
(bad)
fcom
adc
cli
jmp
iret
icebp
mov
pop
xor
cs
dec
inc
push
dec
jno
cmp
rol
dec
inc
dec
aaa
push
pop
das
push
push
sub
mov
ins
push
sub
push
push
push
int3
pop
nop
fidiv
xchg
data16
stos
pop
ins
push
test
repz
scas
lea
mov
imul
shr
jb
mov
cmp
xor
fnstsw
xchg
mov
data16
fs
ffreep
and
push
bound
lahf
xchg
fninit
vphaddbw
dec
pop
repz
(bad)
movs
mov
mov
dec
mov
lods
or
sub
inc
add
popf
sub
sti
push
adc
sbb
cmp
enter
cmp
mov
pusha
iret
pop
xor
cmp
sub
imul
retf
retf
mov
aam
in
pop
retf
jge
stos
je
loope
pop
cmps
pusha
jl
out
fnsave
sub
sbb
jo
sbb
shr
cwde
cmp
sbb
mov
aam
push
fcomp
gs
dec
loopne
push
into
daa
xor
ret
push
out
stos
bound
leave
pop
fistp
mov
pusha
and
pop
in
xor
dec
les
xchg
inc
sti
xchg
cli
pop
cli
popf
fisub
inc
cs
je
cmps
xchg
push
daa
xchg
dec
adc
sub
enter
jmp
dec
pushf
add
adc
dec
lods
repnz
jb
dec
add
and
outs
(bad)
call
or
std
xor
jns
addr16
ins
add
adc
dec
mov
push
adc
push
jecxz
fidivr
and
fs
into
loope
dec
aas
adc
xchg
xor
jb
repnz
cli
xor
mov
outs
pop
ror
pop
mov
push
cmp
jnp
adc
test
sub
in
sub
and
cmps
mov
ds
xchg
pop
or
das
xchg
and
lock
xchg
pop
into
xchg
gs
ss
nop
push
sti
test
mov
adc
retf
fwait
xor
dec
lods
fcomp
add
maskmovq
neg
cmps
mov
dec
mov
les
aad
popa
mov
mov
gs
outs
jp
adc
pushf
push
push
arpl
or
retf
mov
loopne
sti
sbb
out
lods
pushf
and
sar
xchg
int3
push
push
(bad)
adc
add
mov
mov
cmp
das
sub
(bad)
retf
cmp
(bad)
jmp
stc
jge
rcl
hlt
out
mov
push
mov
xor
enter
sub
push
mov
add
pop
adc
mov
jne
mov
into
es
xor
mov
les
sub
(bad)
jp
sti
mov
nop
shr
mov
stos
sbb
stc
jns
and
mov
cmp
scas
mov
jno
aad
lods
or
lds
xchg
xor
mov
mov
pusha
cs
cmp
xor
out
stos
pop
cmp
out
and
mov
stc
enter
clc
or
int3
popa
cdq
pop
sti
ja
mov
sub
inc
fmul
in
add
and
les
lods
and
xchg
push
nop
xchg
adc
cmp
ror
jecxz
rol
and
push
inc
mov
imul
ins
pop
sub
jae
in
mov
adc
pop
cmp
mov
mov
das
das
rcr
and
int
js
add
sub
movs
jl
adc
shl
jb
add
lahf
jl
push
sar
rol
sub
test
shr
je
or
scas
mov
and
pop
inc
pop
fwait
clc
in
push
(bad)
xchg
icebp
xchg
sahf
mov
imul
imul
mov
xchg
fdiv
push
repnz
mov
pop
pop
and
xor
cli
push
call
stos
dec
dec
ins
pusha
mov
xchg
or
add
test
mov
mov
aam
mov
mov
mov
adc
ror
adc
es
icebp
loope
sbb
pop
jmp
jl
lds
dec
cmps
or
int
ss
(bad)
adc
adc
jno
pop
lahf
loop
faddp
scas
add
mov
mov
scas
cmp
cmp
mov
fidivr
ror
cs
in
repz
fs
js
mov
mov
lods
mov
rol
cs
mov
fwait
addr16
hlt
lea
xor
jmp
jmp
push
out
call
push
mov
mov
loope
out
call
loopne
mov
lock
int
sub
cmp
scas
jb
ins
movs
jno
ret
mov
stc
push
pop
push
mov
popf
les
or
outs
leave
pop
push
sbb
xor
icebp
inc
mov
jns
xlat
sub
jg
loopne
sbb
xor
lahf
or
jge
sub
not
xor
(bad)
push
inc
inc
xor
test
out
repz
daa
int3
mov
jge
jp
aas
cmp
jg
sbb
pushf
jmp
push
fwait
dec
mov
mov
jno
push
sub
sub
shl
pop
or
test
add
jmp
dec
(bad)
aad
lahf
mov
mov
mov
sbb
sbb
cmp
and
push
mov
cli
jg
cld
les
shl
retf
not
aaa
scas
mov
out
rcl
cmps
jne
ja
outs
cs
jmp
ret
stc
arpl
leave
pop
cmps
jo
retf
enter
ficomp
in
std
mov
mov
test
jp
mov
dec
outs
push
xchg
jmp
movs
cs
out
inc
or
mov
dec
jne
dec
loope
jp
xchg
xlat
repnz
mov
adc
pop
mov
pop
pop
out
(bad)
mov
cmps
fst
fidiv
jbe
jno
sar
jmp
adc
pop
mov
adc
xor
cmp
in
xchg
ins
lock
sbb
bound
sub
push
cmp
mov
fwait
sbb
or
pop
xchg
ds
lds
adc
jg
xor
push
aam
push
pop
and
inc
cmp
stos
mov
jo
jmp
add
cdq
aaa
fs
test
push
fdivr
xor
in
mov
or
inc
int3
cmp
push
mov
ins
pop
xor
sbb
call
xchg
shl
test
shl
(bad)
cmps
scas
ret
xchg
pop
jl
inc
lds
ss
mov
adc
lods
std
jmp
xchg
call
(bad)
into
adc
int3
xchg
ja
iret
inc
gs
nop
or
push
jecxz
cld
rcl
push
mov
and
xor
not
and
fadd
aad
inc
pop
into
pop
dec
lods
js
addr16
aaa
gs
daa
int3
jne
out
or
or
xchg
cmc
jl
addr16
and
call
xor
cmc
mov
imul
inc
mov
push
fcomp
mov
cmp
je
aam
pop
inc
jmp
xchg
loope
repnz
lods
xor
mov
jo
pop
jae
pop
je
inc
inc
cmp
mov
(bad)
aas
lea
(bad)
sbb
fiadd
test
retf
inc
push
xor
inc
adc
mov
scas
xchg
test
std
mov
inc
fild
arpl
sbb
rol
(bad)
inc
pushf
shr
ret
dec
pop
jo
jae
or
pop
or
jns
test
or
mov
pop
xlat
sbb
loope
retf
and
jp
addr16
ficom
pop
adc
std
mov
push
mov
into
mov
sub
mov
cmp
push
lods
das
inc
(bad)
(bad)
jae
mov
and
push
cdq
pushf
adc
push
mov
lods
aas
out
push
adc
push
mov
dec
dec
and
sti
push
in
pop
adc
ja
mov
aas
shl
imul
cmp
inc
dec
xchg
das
fcom
inc
clc
mov
and
lds
scas
clc
xor
pop
mov
fisttp
mov
(bad)
aas
jl
out
xor
xchg
adc
aaa
cdq
ret
ja
or
dec
xchg
push
cmc
test
(bad)
(bad)
jge
pop
and
in
out
xchg
call
(bad)
pop
and
test
xchg
xor
add
sbb
xlat
xor
popf
in
scas
pop
cwde
lock
rol
in
inc
scas
(bad)
mov
out
mov
push
shr
or
mov
mov
mov
loopne
xchg
inc
jmp
test
inc
int
nop
xlat
and
gs
mov
xor
mov
mov
jbe
adc
xchg
icebp
(bad)
mov
(bad)
stc
fsubr
arpl
dec
cs
sub
int
outs
xchg
push
pop
jge
sbb
jg
stc
mov
outs
fs
or
xchg
rol
mov
cmps
lods
es
mov
fimul
dec
test
jo
mov
dec
sub
pop
xchg
shr
mov
stos
(bad)
xchg
xor
jb
sbb
sub
leave
push
test
rol
mov
sbb
sub
pop
leave
je
dec
adc
(bad)
fnstcw
dec
mov
add
stos
pop
je
xchg
sar
cmp
outs
jmp
and
xchg
xchg
and
add
push
cmp
movs
aad
dec
pop
sub
cs
inc
mov
in
cmps
push
xor
push
adc
(bad)
xor
xchg
sar
or
sub
or
add
iret
sbb
ins
xchg
std
xor
fdiv
test
mov
inc
pop
push
loopne
pusha
ins
push
sub
sbb
xchg
and
ss
inc
sub
cs
inc
mov
in
cmps
jo
dec
pop
ja
call
retf
lahf
xchg
mov
stc
bound
or
mov
mov
(bad)
jl
nop
mov
mov
std
push
and
or
and
sbb
dec
jnp
inc
shl
pop
adc
inc
cwde
fnstsw
xchg
xchg
mov
jbe
rol
(bad)
shl
(bad)
cld
jp
out
and
retf
int3
adc
not
or
aas
mov
jl
jnp
fwait
xchg
cmps
push
cli
mov
add
pop
aam
add
sbb
lahf
and
jp
movs
xchg
outs
shl
add
lea
icebp
jg
inc
xlat
mov
cmp
out
shl
hlt
sub
in
pop
es
or
sub
stos
pop
(bad)
cmp
jbe
movs
fsub
push
hlt
sahf
vaddps
lods
cmp
pop
dec
and
xor
sti
xchg
adc
das
in
pusha
add
cmp
sub
sub
jl
pop
into
imul
pop
pop
(bad)
pop
add
lods
add
mov
test
inc
(bad)
sbb
mov
cli
(bad)
push
aas
push
cmc
mov
sub
stos
sbb
inc
xor
fcmovne
xchg
icebp
mov
jne
jno
pop
push
rcl
movs
loop
(bad)
cmp
fwait
int3
not
ja
pop
mov
add
test
das
push
sahf
jmp
rcl
retf
mov
fdiv
mov
xchg
icebp
sbb
push
inc
(bad)
enter
not
stc
xor
dec
sub
dec
push
jo
inc
inc
mov
or
pop
mov
and
loop
mov
in
xchg
inc
push
mov
or
loop
pop
dec
inc
fistp
push
and
jne
xchg
std
mov
cld
cld
fstp
ja
adc
mov
pushf
cmp
mov
cmp
and
push
mov
jle
add
add
jne
dec
pop
shl
loop
push
mov
xchg
mov
or
lods
cmp
and
cmc
movs
leave
test
in
mov
mov
cld
gs
fld
(bad)
int
pop
or
(bad)
cmp
(bad)
and
inc
iret
push
push
scas
inc
cmp
imul
jno
cmps
push
cs
push
rol
ds
xor
mov
jb
and
mov
stos
arpl
push
and
iret
mov
sbb
xor
(bad)
aam
and
das
bound
test
ffree
mov
addr16
outs
adc
xchg
fisubr
(bad)
jge
data16
not
icebp
inc
mov
jmp
dec
jae
mov
mov
pop
rcr
cmp
inc
inc
adc
jl
dec
movs
or
cmp
movs
in
inc
(bad)
fsubr
ret
and
scas
repnz
jg
jl
mov
cmp
aam
fdiv
cdq
inc
dec
adc
xor
ins
test
mov
adc
mov
xor
mov
repz
adc
int
(bad)
fxch
inc
fild
mov
add
les
call
add
dec
push
add
addr16
pop
jb
inc
ja
cld
xchg
xchg
cdq
imul
cld
sbb
mov
leave
out
adc
out
fs
in
inc
push
mov
mov
inc
or
test
out
ins
nop
mov
sub
mov
test
inc
shl
cs
(bad)
neg
mov
or
inc
rcr
sub
aaa
ss
jmp
cmp
call
mov
jnp
fs
and
in
pop
sar
mov
rcl
loopne
clc
outs
pop
call
ins
pop
mov
aam
inc
test
lods
into
rcl
cmp
adc
sar
fisub
or
or
and
sub
minps
push
jmp
je
gs
pop
enter
pop
mov
push
sbb
adc
cmp
sbb
push
push
lahf
inc
ins
out
out
fucomip
cmp
sbb
mov
sub
cmp
movs
adc
and
cld
stos
aam
dec
jmp
jmp
xchg
fs
cmp
cmp
arpl
pop
jmp
out
xor
dec
adc
dec
into
out
inc
xor
inc
pop
push
mov
daa
pop
sbb
dec
pop
das
outs
adc
pop
(bad)
pop
xchg
adc
sbb
push
repnz
movs
fisttp
push
(bad)
shl
add
sub
mov
fsub
in
nop
out
shl
push
dec
sbb
mov
jmp
rcr
xor
in
scas
xor
fbstp
in
push
movs
es
pop
mov
leave
push
addr16
(bad)
push
in
mov
dec
nop
lea
or
les
mov
test
pop
aaa
stos
movs
mov
add
inc
pop
stc
or
rcl
rcl
das
push
neg
stc
xchg
mov
je
ins
inc
xchg
sub
je
or
dec
stos
aam
(bad)
fisttp
xchg
daa
cmp
pusha
and
shl
int3
aam
lea
mov
rcl
mov
jl
mov
mov
mov
test
push
jne
adc
dec
sub
ja
into
pop
jne
push
stc
fstp
cli
(bad)
xchg
test
pop
xor
aas
mov
ss
xor
sahf
inc
call
gs
(bad)
neg
or
cli
ins
in
js
es
xor
ss
jae
push
mov
sub
push
(bad)
fmul
scas
stos
pusha
jg
jmp
inc
cmp
xchg
push
ss
cli
or
cli
and
fisubr
sbb
pop
or
mov
or
mov
movs
jns
pop
dec
jmp
add
add
dec
cld
aas
jecxz
jbe
xor
sti
push
and
mov
jo
sahf
in
adc
mov
push
add
int
(bad)
test
shr
loop
sub
add
sub
jecxz
push
test
ds
jno
fldcw
and
cld
imul
cs
mov
and
inc
xchg
mov
add
pop
push
pop
push
fwait
mov
and
adc
mov
cdq
jecxz
mov
xchg
les
pop
push
xor
mov
stos
add
adc
scas
mov
test
jg
mov
je
mov
mov
cwde
test
fadd
retf
push
add
sti
loop
shr
ficom
push
rol
in
cmp
std
outs
cld
lock
or
int
mov
sbb
mov
cmp
daa
lahf
pop
lods
into
xchg
jo
mov
(bad)
fnstenv
xor
xchg
push
and
out
cmps
arpl
(bad)
pop
inc
fwait
push
sar
icebp
sbb
mov
mov
sub
repz
mov
mov
loop
pop
(bad)
(bad)
xlat
fild
jge
cmp
addr16
sub
mov
mov
sti
and
or
cli
into
and
jbe
bound
xchg
cmp
mov
cmp
mov
in
int
cmps
gs
sbb
sub
test
dec
fdivrp
sbb
shl
adc
loop
inc
mov
or
test
add
loop
xor
add
jno
retf
adc
repz
mov
jmp
fld
test
pop
arpl
xchg
inc
xchg
xchg
mov
push
push
push
jae
loopne
xchg
jne
xor
inc
sahf
jnp
lods
dec
xor
popf
jns
xor
fadd
ds
pop
fwait
pop
mov
fnstsw
pop
xor
cmp
ds
and
(bad)
ss
xor
push
dec
mov
outs
push
sbb
(bad)
sbb
xlat
push
xchg
cmp
sub
push
mov
mov
jo
inc
inc
jo
mov
sbb
icebp
pop
push
ins
cld
inc
and
jp
or
or
lods
frstor
mov
aaa
inc
jl
or
loop
adc
push
sub
pushf
shr
push
arpl
adc
popf
clc
mov
sbb
inc
add
daa
fimul
dec
(bad)
stos
in
sub
push
cmps
xor
arpl
movs
dec
ret
sar
ret
pop
inc
jo
pop
ffree
jle
and
pop
jns
gs
(bad)
cdq
dec
inc
cmc
add
(bad)
es
fist
push
pslld
dec
ds
lds
push
xor
mov
lock
cmp
test
and
enter
and
xor
add
xor
or
jb
mov
push
fldenv
mov
mov
jnp
rcr
mov
jae
hlt
hlt
push
or
sub
cmc
shr
add
jge
fld
loopne
test
cld
imul
repnz
fmul
js
(bad)
retf
in
gs
adc
mov
sub
cmp
pop
dec
shl
(bad)
test
add
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
mov
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
mov
mov
mov
lea
mov
mov
movzx
mov
shl
mov
dec
mov
movzx
shl
dec
mov
mov
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
add
shl
lea
cmp
jae
mov
mov
add
loop
mov
xor
mov
mov
add
mov
xor
cmp
je
movzx
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmp
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzx
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmp
lea
mov
jle
mov
sub
mov
movzx
mov
shl
mov
lea
mov
and
cmp
lea
mov
lea
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
cmp
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmp
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmp
mov
jg
mov
jmp
cmp
jg
sub
jmp
sub
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmp
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
sub
sar
mov
mov
cmp
lea
mov
je
xor
cmp
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
mov
movzx
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzx
shl
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
shl
sar
mov
lea
mov
mov
lea
mov
mov
jmp
sub
sub
mov
mov
shr
mov
sub
mov
mov
add
mov
mov
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmp
mov
jg
add
cmp
mov
jle
mov
mov
shl
mov
lea
mov
mov
lea
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmp
ja
cmp
je
shl
movzx
shl
inc
or
shr
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
mov
mov
mov
mov
mov
add
mov
add
cmp
ja
cmp
je
shl
movzx
shl
inc
or
mov
mov
shr
movzx
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shl
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
inc
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmp
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
