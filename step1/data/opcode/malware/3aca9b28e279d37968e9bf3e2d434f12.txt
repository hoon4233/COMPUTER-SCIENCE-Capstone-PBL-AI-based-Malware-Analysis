mov
add
add
add
add
add
add
add
push
add
push
ins
jns
add
add
add
xor
add
add
add
and
or
jge
add
add
add
add
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
sub
add
or
add
xor
add
add
add
add
and
xchg
pusha
mov
add
add
add
add
add
pop
mov
add
mov
add
push
mov
add
add
push
push
push
jle
add
add
pop
or
add
add
pop
rol
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
add
adc
add
add
add
add
adc
add
sbb
add
xchg
add
add
add
adc
inc
add
add
sub
add
pop
inc
or
add
(bad)
add
add
add
add
add
inc
add
add
add
in
add
add
add
add
or
jle
add
add
fild
add
inc
push
inc
sub
add
push
add
add
add
add
add
sldt
or
or
add
and
add
add
jle
add
add
nop
add
add
sub
add
add
mov
sub
ins
and
add
add
add
(bad)
inc
add
add
(bad)
inc
push
mov
add
add
add
or
add
cmp
push
add
add
(bad)
jmp
adc
add
add
adc
add
adc
add
sub
and
or
sub
(bad)
inc
jle
add
add
jnp
cmp
jbe
or
add
jle
add
add
pop
rol
and
add
add
(bad)
inc
and
(bad)
(bad)
jmp
pop
add
add
(bad)
jmp
add
sub
add
add
add
cwde
add
add
add
inc
sub
add
push
and
add
add
(bad)
(bad)
cmp
(bad)
(bad)
jmp
or
add
and
add
add
(bad)
jmp
or
pop
cmp
add
inc
sub
and
add
mov
cmp
add
fiadd
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
sub
add
jp
add
jp
add
add
add
adc
add
sbb
add
pop
add
add
add
adc
mov
or
or
add
add
add
add
inc
add
add
pop
add
add
or
add
add
add
push
add
add
add
sub
add
push
push
jle
add
add
pop
rol
jle
add
add
pop
rol
push
pop
push
or
add
add
mov
or
mov
xor
and
add
add
sub
jle
add
add
push
pop
or
add
add
mov
or
cwde
sub
and
add
add
fiadd
sub
jae
add
or
sub
push
inc
add
add
pop
add
add
or
add
add
add
add
add
add
add
and
add
push
or
and
add
add
add
add
add
mov
or
ror
sub
add
mov
or
(bad)
sub
jle
add
add
xor
add
sldt
or
add
add
mov
or
stos
sub
and
add
add
(bad)
frstor
adc
inc
add
jo
lea
add
add
pop
adc
push
jle
add
add
adc
pop
jg
add
add
adc
add
mov
add
adc
add
mov
inc
add
jo
adc
sub
add
add
add
add
fiadd
or
or
add
adc
fstp
add
add
mov
or
or
inc
add
add
adc
add
adc
inc
add
add
or
add
add
(bad)
(bad)
dec
sub
and
add
add
sub
or
add
or
add
add
mov
or
into
sub
fadd
push
jae
add
or
jmp
add
add
mov
or
or
inc
add
add
adc
add
adc
inc
add
add
pop
add
add
(bad)
(bad)
inc
sub
and
add
add
sub
pop
outs
adc
add
add
mov
or
into
sub
fsub
sub
jle
add
or
jle
add
add
pop
rol
jb
add
jo
add
add
adc
add
sub
add
or
fiadd
fiadd
fiadd
push
inc
add
add
pop
add
add
or
add
add
add
xor
add
test
add
xchg
add
add
push
add
add
pop
rol
jle
add
or
jle
add
add
pop
rol
and
add
add
and
call
mov
add
add
add
add
add
add
add
push
mov
add
add
adc
and
add
add
sub
jle
add
add
and
add
add
add
add
mov
or
fs
(bad)
jmp
add
add
add
mov
or
push
(bad)
(bad)
(bad)
fst
fisttp
push
mov
sub
mov
stc
add
mov
add
mov
add
adc
sub
inc
les
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
adc
add
add
add
adc
add
pop
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
lar
add
add
add
add
add
add
adc
add
add
add
xchg
add
add
add
or
add
cmp
add
adc
add
add
add
inc
add
add
add
add
add
add
add
add
xor
call
adc
mov
or
or
add
add
add
add
inc
add
add
pop
add
add
or
add
add
add
add
add
push
add
add
or
add
add
pop
rol
jle
add
add
pop
rol
and
add
add
push
pop
pop
cs
add
add
mov
or
mov
add
push
popa
or
add
add
mov
or
movs
sub
and
add
add
fucomp
add
add
fucomp
add
add
add
jo
lea
add
add
pop
adc
push
jb
add
jo
adc
sub
add
add
add
jae
add
add
add
sbb
add
add
add
add
add
adc
add
add
add
add
xchg
add
add
add
add
es
add
add
daa
mov
and
mov
mov
add
add
add
add
add
add
data16
add
push
mov
add
add
push
inc
add
add
pop
add
add
or
add
add
add
push
add
add
adc
pop
add
or
add
add
or
add
add
adc
add
sub
add
or
jle
add
add
arpl
add
add
add
add
mov
or
lods
adc
jo
sldt
or
and
add
add
sub
adc
pop
push
add
add
sub
and
add
add
(bad)
(bad)
(bad)
fisubr
imul
mov
or
or
inc
add
add
pop
add
add
or
add
add
(bad)
(bad)
(bad)
cmp
add
push
add
add
add
add
pop
push
pop
mov
sbb
add
and
and
add
add
pop
mov
add
mov
add
cmp
(bad)
(bad)
dec
pop
push
or
add
or
add
add
mov
or
lods
sub
add
adc
and
add
add
fisubr
add
add
mov
or
or
inc
add
add
adc
add
adc
inc
add
add
pop
add
add
(bad)
(bad)
dec
sub
and
add
add
sub
or
add
or
add
add
mov
or
into
sub
fsubr
add
mov
sub
mov
stc
add
add
add
or
add
or
cmc
std
(bad)
call
push
sub
add
add
xchg
add
xchg
add
push
add
add
add
add
add
add
add
out
add
push
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
mov
add
mov
add
add
add
add
add
add
add
inc
add
add
add
add
sub
sub
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
mov
add
add
add
add
add
add
xor
add
add
add
add
xchg
sbb
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
add
jge
add
add
add
add
dec
add
add
add
add
mov
add
mov
add
and
ins
push
push
add
add
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
mov
add
add
push
add
add
pop
add
or
sub
add
sbb
add
and
add
adc
mov
pop
adc
inc
add
add
add
add
add
add
add
pop
add
add
push
or
add
and
add
push
jge
add
add
push
add
add
fst
add
push
inc
add
add
cmp
or
and
push
xchg
inc
mov
add
add
add
add
add
push
mov
add
add
adc
inc
add
add
outs
add
add
add
add
add
push
adc
adc
add
push
add
add
adc
jge
add
add
add
pop
adc
and
add
push
jge
add
add
add
pop
pop
pop
xor
add
add
add
add
add
(bad)
(bad)
call
add
adc
add
add
(bad)
(bad)
jmp
add
add
add
rol
and
add
add
(bad)
(bad)
jmp
add
add
add
mov
pop
cmp
(bad)
(bad)
(bad)
fisubr
fisub
add
pop
rol
add
jnp
add
add
rol
add
push
jge
add
add
fisub
inc
add
add
sbb
add
adc
inc
add
add
add
add
push
add
add
add
lods
add
add
adc
outs
push
add
or
push
pop
mov
add
mov
add
and
add
add
sub
sub
add
or
sub
push
mov
sub
mov
stc
add
add
add
mov
pop
sub
add
and
add
add
cmp
(bad)
call
lea
and
add
add
cmp
(bad)
push
add
or
add
jnp
add
add
pop
push
and
pop
jge
add
add
sgdtd
add
fisttp
add
add
and
add
push
jge
add
add
and
add
push
jge
add
add
pop
add
add
pop
rol
add
add
push
jge
add
add
add
add
add
arpl
pop
xor
add
add
and
add
push
jge
add
add
add
add
add
jnp
add
add
jge
add
add
and
add
push
jge
add
add
sahf
add
add
fstp
inc
add
add
pop
add
add
pop
inc
add
add
sbb
add
push
add
add
add
add
push
jle
add
add
pop
rol
and
add
add
or
jnp
add
add
and
add
add
sub
add
and
jge
add
add
add
add
mov
pop
sub
add
add
fnstsw
fnstsw
outs
and
add
or
add
add
mov
pop
cmp
(bad)
(bad)
(bad)
cmp
(bad)
call
push
movs
sbb
add
add
dec
add
add
add
xor
add
add
add
add
push
add
adc
add
add
and
and
add
add
add
add
add
cmc
add
adc
add
add
sti
add
add
add
test
jns
add
adc
add
adc
add
pop
add
add
add
add
sub
add
or
add
xor
add
add
add
loope
xor
and
ss
mov
add
add
add
add
add
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
mov
add
add
sub
add
sbb
add
aas
add
add
add
adc
inc
add
add
add
add
inc
or
add
in
add
cmp
add
cmc
add
add
add
add
add
xor
add
lods
add
add
add
add
add
sbb
add
push
or
or
jnp
add
add
jnp
add
add
ror
and
add
add
add
add
add
sahf
add
add
add
or
mov
add
add
sub
add
push
pop
pop
cmp
and
add
mov
sub
and
add
add
(bad)
jmp
iret
pop
mov
add
mov
add
and
adc
adc
add
add
add
add
add
push
mov
add
add
jle
add
add
pop
or
add
push
add
add
(bad)
jmp
sbb
add
add
add
ror
and
add
add
(bad)
jmp
and
add
add
mov
cmp
(bad)
(bad)
inc
cmp
(bad)
jmp
add
add
mov
cmp
(bad)
(bad)
(bad)
cmp
(bad)
jmp
add
add
mov
cmp
(bad)
(bad)
(bad)
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
add
add
das
add
add
add
add
add
add
add
add
xor
add
add
add
add
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
and
dec
dec
and
dec
dec
mov
add
add
add
add
add
push
mov
add
add
add
add
add
add
xor
add
add
add
add
add
mov
sub
mov
stc
add
or
daa
and
sbb
daa
mov
add
add
add
add
add
push
mov
add
add
pop
mov
add
mov
add
add
jge
add
add
adc
add
and
add
add
add
add
push
add
or
jae
add
or
sbb
add
add
sub
add
add
sub
add
push
sub
xor
add
add
add
add
sub
push
mov
sub
mov
stc
add
iret
js
ss
js
ss
add
add
add
add
add
pop
mov
add
mov
add
push
mov
add
add
add
add
add
add
xor
add
add
add
add
and
daa
ds
mov
add
add
add
add
add
push
mov
add
add
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
add
add
sbb
add
add
add
add
adc
inc
add
add
add
add
inc
or
add
jge
add
in
add
or
add
sbb
add
and
add
aas
add
add
add
add
add
add
add
add
or
or
add
add
add
jnp
add
add
add
add
add
add
add
mov
sub
add
and
add
add
imul
add
or
xchg
add
add
add
cmp
add
add
xchg
push
push
add
add
xor
add
add
add
xor
add
add
mov
add
add
and
add
add
(bad)
jmp
inc
add
add
add
pop
pop
or
add
or
add
mov
cmp
(bad)
(bad)
jmp
xchg
pop
mov
add
mov
add
add
push
pop
pop
sub
add
and
add
add
(bad)
jmp
add
add
add
jnp
add
add
sub
add
push
pop
pop
pop
pop
pop
or
add
add
mov
cmp
(bad)
(bad)
jmp
sub
push
add
add
(bad)
inc
and
add
add
(bad)
(bad)
jmp
add
add
mov
cmp
(bad)
(bad)
(bad)
cmp
(bad)
jmp
add
add
mov
cmp
add
fiadd
sub
push
mov
sub
mov
stc
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
add
add
adc
mov
or
or
add
add
add
add
add
add
pop
or
add
fst
inc
add
add
cmp
add
adc
inc
or
add
add
add
outs
add
add
add
adc
add
dec
add
add
add
add
add
add
add
and
add
and
add
add
add
add
pop
pop
or
push
add
add
or
imul
and
add
add
cmp
add
push
inc
add
add
pop
add
add
or
add
add
add
add
add
add
sti
fdivrp
outs
and
fdivrp
outs
mov
add
add
add
add
add
push
mov
add
add
jae
add
or
add
pop
add
or
add
add
pop
or
add
xchg
add
jo
lea
pop
adc
push
jle
add
add
and
add
mov
mov
add
adc
sbb
add
and
add
mov
or
add
and
add
mov
add
or
add
add
(bad)
(bad)
call
add
jo
sldt
or
and
add
add
(bad)
(bad)
jmp
add
add
add
pop
or
add
add
add
mov
or
and
(bad)
jmp
add
add
add
mov
or
adc
(bad)
(bad)
fst
fst
sub
pop
add
add
(bad)
(bad)
dec
push
mov
in
add
and
adc
cmp
(bad)
jmp
and
add
add
(bad)
(bad)
inc
sub
and
add
add
(bad)
(bad)
(bad)
cmp
or
or
add
mov
or
inc
(bad)
(bad)
(bad)
cmp
inc
add
add
pop
add
add
or
add
add
add
add
add
inc
add
add
add
add
adc
adc
and
rcl
push
and
add
add
adc
and
and
add
add
mov
or
mov
add
add
pop
or
add
add
add
mov
or
cmps
sub
and
add
add
fst
add
fisttp
add
push
or
or
add
std
(bad)
(bad)
cmp
(bad)
inc
mov
pop
lea
and
add
add
std
(bad)
jmp
and
pop
pop
or
sub
mov
stc
add
add
add
mov
or
jbe
(bad)
(bad)
cmp
(bad)
(bad)
call
inc
add
add
sbb
add
adc
inc
add
add
add
add
pop
add
add
add
add
or
or
add
add
dec
pop
or
add
or
add
xor
add
jle
add
add
outs
pop
or
add
add
add
mov
or
mov
sub
add
mov
or
mov
add
add
push
sub
and
add
add
pop
push
inc
sub
or
and
add
add
(bad)
(bad)
(bad)
fst
(bad)
(bad)
jmp
fisttp
mov
add
mov
add
and
add
add
cld
(bad)
inc
mov
add
(bad)
jmp
or
add
mov
or
movs
cld
(bad)
(bad)
cmp
(bad)
inc
or
or
pop
xchg
add
xchg
popa
add
pushf
add
pop
xchg
pushf
and
add
mov
or
jns
(bad)
(bad)
cmp
cld
(bad)
inc
sub
add
xor
add
add
add
and
push
adc
add
add
xchg
add
pop
push
adc
add
add
repnz
add
adc
add
add
mov
push
adc
add
sbb
add
fld
add
add
adc
mov
adc
adc
add
add
add
add
inc
add
add
pop
add
add
adc
add
add
add
add
add
aaa
add
add
add
jle
add
or
jb
add
jo
fild
add
sbb
add
or
add
add
mov
adc
leave
push
jb
add
jo
sldt
or
and
add
add
sub
jle
add
add
and
add
or
add
add
mov
adc
fwait
sub
and
add
add
and
jae
and
jae
mov
add
add
add
add
add
pop
mov
add
mov
add
push
mov
add
add
ficom
fimul
sub
push
mov
sub
mov
stc
add
push
inc
add
add
sub
add
adc
inc
or
add
rol
add
sub
add
xor
add
add
add
add
add
add
add
sub
adc
adc
add
or
add
add
cmp
add
add
adc
adc
pop
ins
pop
or
add
or
add
pop
or
add
push
pop
pop
push
add
add
fst
add
push
inc
add
add
and
add
adc
inc
pop
add
add
add
add
add
push
add
add
add
add
add
push
adc
or
add
pop
or
add
or
add
pop
or
add
push
pop
pop
push
add
add
adc
add
add
sub
adc
and
add
add
adc
and
add
add
sub
and
adc
cmp
(bad)
call
push
pop
sub
add
add
(bad)
(bad)
jmp
add
push
pop
pop
push
add
add
(bad)
(bad)
jmp
add
add
add
mov
adc
inc
(bad)
(bad)
(bad)
fnstsw
fnsave
mov
add
imul
add
mov
adc
mov
out
(bad)
call
inc
add
add
pop
add
add
adc
add
add
add
add
add
add
cmp
add
push
or
push
add
or
and
add
add
or
xchg
add
add
and
add
add
mov
adc
lds
add
add
add
pop
or
add
add
add
mov
adc
lods
sub
jle
add
add
pop
or
add
add
add
mov
adc
xchg
fiadd
fiadd
pop
lea
pop
lea
add
add
add
mov
adc
add
jbe
(bad)
call
push
pop
jle
add
or
or
pop
jle
add
add
popa
adc
adc
jle
add
add
pop
jle
add
add
pop
adc
jle
add
add
adc
add
or
add
jo
sldt
or
fiadd
fiadd
add
add
mov
adc
lods
std
(bad)
call
or
mov
adc
add
adc
cmp
fld
add
or
or
adc
xchg
pushf
adc
pop
pop
adc
and
add
add
std
(bad)
jmp
cmp
adc
push
adc
and
add
add
std
(bad)
jmp
test
add
or
adc
xchg
pushf
adc
pop
pop
adc
adc
pop
pop
adc
and
add
add
std
(bad)
jmp
test
inc
add
add
pop
add
add
adc
add
add
add
add
add
pop
add
add
add
add
add
or
or
add
add
push
add
add
add
mov
adc
retf
adc
jb
add
jo
adc
add
sub
and
add
add
sub
jle
add
add
pop
pop
or
add
add
add
mov
adc
call
add
fstp
(bad)
jmp
fst
(bad)
call
inc
add
add
pop
add
add
adc
add
add
add
add
add
dec
add
add
add
add
push
or
or
push
adc
or
add
push
pop
or
add
add
add
mov
adc
(bad)
adc
inc
push
and
add
add
mov
adc
mov
add
add
add
pop
or
add
add
add
mov
adc
sahf
sub
and
add
add
fld
fnstsw
inc
adc
push
add
push
adc
and
add
add
cld
(bad)
(bad)
ficomp
fiadd
jle
add
add
pop
or
add
es
sti
(bad)
call
cvtpi2ps
add
inc
fadd
add
add
add
add
adc
add
add
add
and
add
and
add
add
add
add
add
add
add
add
add
int
add
sbb
add
push
add
add
add
add
add
add
add
ja
add
mov
add
add
add
adc
add
add
add
xlat
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sahf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
adc
inc
add
add
push
add
add
inc
add
add
imul
add
rol
add
movs
add
add
or
add
adc
add
pop
inc
popa
sub
add
push
add
jnp
add
add
sub
sar
add
add
and
add
pop
sar
add
add
add
add
add
jnp
add
add
sub
add
add
adc
add
pop
ss
or
add
and
add
pop
sar
add
add
add
add
mov
sub
pop
and
mov
add
add
add
(bad)
inc
add
add
(bad)
inc
push
mov
add
add
push
add
add
add
das
and
add
add
(bad)
jmp
add
add
adc
add
jle
add
add
add
add
add
add
add
mov
cmp
add
add
add
mov
cmp
(bad)
(bad)
(bad)
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
sub
add
add
add
add
cmc
cmc
add
adc
add
add
add
inc
add
add
add
add
mov
add
add
inc
add
add
add
add
add
add
add
add
add
mov
add
add
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
jnp
add
add
add
xor
add
add
add
add
std
imul
std
imul
inc
inc
add
add
add
add
or
add
add
add
mov
sub
mov
stc
add
pop
mov
add
mov
add
push
mov
add
add
add
jge
add
add
add
add
dec
add
add
add
add
movs
test
inc
mov
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
push
mov
add
add
pop
mov
add
mov
add
push
or
add
push
add
or
sub
add
add
add
inc
add
add
add
add
jp
push
cmp
jp
push
cmp
add
add
add
add
add
add
add
mov
sub
mov
stc
add
push
mov
add
add
pop
mov
add
mov
add
add
add
add
add
xor
add
add
add
add
push
neg
push
and
neg
push
mov
add
add
add
add
add
pop
mov
add
mov
add
push
mov
add
add
sub
push
mov
sub
mov
stc
add
add
add
add
sbb
add
mov
add
adc
mov
or
or
add
add
add
add
inc
add
add
pop
add
add
or
add
add
add
jl
add
popa
add
add
or
add
add
pop
adc
add
add
pop
adc
add
dec
sbb
mov
add
add
cmps
(bad)
(bad)
inc
add
add
push
mov
add
add
and
add
add
pop
mov
add
mov
add
push
sub
and
add
add
sub
jle
add
add
pop
adc
add
add
(bad)
(bad)
jmp
add
add
add
mov
or
pop
(bad)
(bad)
(bad)
fiadd
sub
inc
add
add
pop
add
add
or
add
add
add
add
add
add
add
sbb
add
push
or
push
or
xchg
sbb
add
or
add
add
mov
or
rol
pop
and
add
add
sub
pop
pop
push
pop
ror
and
add
add
sub
and
add
add
fiadd
fiadd
push
inc
add
add
adc
add
adc
inc
add
add
add
add
pop
add
add
add
add
xor
add
or
add
sub
push
add
or
jle
add
add
pop
adc
add
add
pop
adc
add
add
pop
adc
add
add
frstor
and
add
adc
add
sub
add
pop
add
add
or
add
add
add
add
add
add
add
add
add
or
push
adc
adc
add
adc
adc
add
add
xor
adc
add
add
add
mov
or
mov
and
add
add
sub
jle
add
add
adc
add
add
add
add
add
mov
or
xchg
sub
and
add
add
frstor
(bad)
jmp
fstp
call
add
add
adc
and
add
add
(bad)
(bad)
(bad)
fstp
add
sub
push
inc
add
add
and
add
adc
inc
pop
add
add
add
add
add
xchg
add
add
add
add
add
add
add
pop
adc
push
adc
jle
add
add
pop
adc
add
push
adc
and
adc
sub
and
add
add
sub
jle
add
add
pop
adc
add
add
sub
jle
add
add
pop
adc
add
add
add
mov
or
jl
(bad)
jmp
and
add
(bad)
(bad)
call
pop
and
mov
add
add
(bad)
(bad)
jmp
shl
add
add
(bad)
(bad)
(bad)
fiadd
fiadd
fiadd
push
inc
add
add
pop
add
add
or
add
add
add
add
add
aas
add
add
add
add
or
push
adc
jle
add
add
pop
adc
add
add
adc
adc
add
add
add
mov
or
mov
cs
add
sub
jle
add
add
je
adc
add
add
add
mov
or
xchg
sub
and
add
add
fstp
std
(bad)
jmp
fst
std
(bad)
jmp
add
mov
sub
mov
stc
add
or
inc
lods
add
mov
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
adc
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
retf
add
add
add
push
inc
add
add
push
add
add
inc
add
add
mov
add
cdq
add
add
add
arpl
add
add
push
pop
pop
push
push
and
or
dec
and
or
dec
mov
add
add
add
add
add
add
add
push
mov
add
add
pop
mov
add
mov
add
and
add
add
sub
add
jb
add
jo
adc
add
sub
and
add
add
add
jb
add
jo
cmp
add
dec
add
jo
daa
add
or
sbb
add
add
mov
cmp
(bad)
jmp
add
add
add
mov
cmp
(bad)
(bad)
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
add
adc
add
add
add
add
add
xor
add
add
add
inc
add
add
push
add
add
inc
add
add
scas
add
add
add
mov
add
add
add
or
push
or
and
push
pop
pop
push
push
add
jnp
add
add
push
add
inc
jge
add
add
jb
add
jo
sbb
add
sbb
add
sub
add
or
and
add
add
add
daa
add
push
cs
and
add
add
add
and
add
push
jge
add
add
out
sti
cmp
out
sti
cmp
add
add
inc
add
add
inc
push
mov
add
add
and
add
add
(bad)
jmp
add
add
add
mov
cmp
(bad)
(bad)
fiadd
fiadd
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
add
add
add
add
rcl
add
adc
add
add
add
inc
add
add
add
add
pop
jge
add
add
sub
add
or
add
add
add
jle
add
or
sbb
push
sub
add
push
add
sub
add
add
sub
add
push
add
add
or
sub
add
sub
xor
in
add
push
add
adc
mov
add
add
add
add
add
inc
add
add
daa
add
add
add
add
add
add
add
cmp
add
add
add
add
add
and
add
push
or
or
jle
add
add
pushf
add
add
add
inc
jge
add
add
pop
add
add
push
pop
xor
add
adc
and
add
add
add
add
add
cmps
add
add
xor
add
add
adc
add
add
inc
and
add
add
(bad)
(bad)
inc
add
daa
add
push
xor
add
add
(bad)
(bad)
jmp
add
sub
add
push
pop
pop
push
push
and
add
mov
add
jmp
adc
adc
add
add
add
mov
add
jmp
cmps
add
add
add
and
add
add
(bad)
(bad)
(bad)
fld
fld
inc
add
add
adc
add
adc
add
add
xchg
add
xchg
add
add
fst
sub
fst
sub
inc
inc
add
add
inc
add
add
add
add
add
add
mov
add
add
pop
sub
add
or
push
or
add
push
pop
pop
push
push
add
add
add
adc
add
inc
jge
add
add
add
daa
add
push
pop
push
fiadd
push
mov
add
jae
add
push
add
xor
add
or
add
add
mov
add
(bad)
cmp
add
add
inc
add
add
pop
add
add
add
add
add
add
add
add
adc
jb
add
jo
adc
and
add
jb
add
jo
daa
add
or
sbb
add
daa
add
push
pop
push
pop
shr
sub
add
add
sub
add
push
pop
adc
sub
add
push
add
push
pop
pop
push
push
and
add
add
adc
dec
xor
and
add
add
(bad)
(bad)
jmp
add
add
add
pop
adc
add
add
(bad)
(bad)
jmp
add
add
and
inc
push
inc
jge
add
add
add
add
mov
add
(bad)
fld
add
fnstsw
add
add
inc
add
add
and
add
adc
add
add
add
add
add
add
xchg
add
add
add
add
add
jle
add
add
sub
adc
add
add
and
add
add
and
add
daa
add
push
pop
add
and
add
pop
push
push
add
and
add
sbb
sub
add
push
pop
pop
adc
add
add
add
mov
add
push
add
add
sub
sub
add
(bad)
(bad)
jmp
inc
add
add
push
jge
add
add
add
add
mov
add
jmp
inc
and
add
mov
add
inc
jnp
add
add
sub
add
(bad)
(bad)
jmp
mov
add
push
pop
pop
push
push
and
adc
jmp
mov
add
(bad)
(bad)
(bad)
fiadd
fiadd
and
add
add
std
(bad)
dec
cmp
add
mov
sub
mov
stc
add
add
add
mov
add
(bad)
cmp
adc
add
cmp
add
add
add
add
push
sub
add
or
add
add
add
add
add
add
add
add
add
cmp
add
nop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
and
jb
dec
and
jb
dec
mov
add
add
add
add
add
pop
mov
add
mov
add
push
mov
add
add
sub
push
mov
sub
mov
stc
add
jnp
add
add
add
xor
add
add
add
add
lea
sahf
call
inc
add
add
add
add
add
add
add
add
add
mov
add
add
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
add
add
add
add
inc
add
add
add
add
mov
add
mov
add
and
lea
inc
add
add
add
add
add
add
add
add
add
mov
add
add
sub
push
mov
sub
mov
stc
add
jnp
add
add
add
xor
add
add
add
add
xchg
stos
(bad)
xor
xchg
stos
(bad)
xor
add
add
add
add
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
mov
add
add
add
jge
add
add
add
add
inc
add
add
add
add
(bad)
and
nop
gs
add
add
add
add
add
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
mov
add
add
add
add
add
add
xor
add
add
add
add
and
inc
and
inc
cmp
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
mov
add
add
add
jge
add
add
add
add
inc
add
add
add
add
fld
jp
fld
jp
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
mov
add
add
add
add
add
add
xor
add
add
add
add
and
and
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
mov
add
add
add
jge
add
add
sbb
add
mov
add
add
adc
inc
add
add
push
add
add
inc
add
add
mov
add
sub
add
cmp
add
jl
add
jae
add
or
push
or
pop
jge
add
add
add
and
add
pop
and
add
add
add
add
add
mov
sub
push
jle
add
add
dec
and
add
add
fdiv
int
and
icebp
int
mov
add
add
add
add
add
push
mov
add
add
sub
add
push
pop
pop
push
push
and
add
add
(bad)
jmp
add
add
add
mov
cmp
(bad)
(bad)
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
sub
add
adc
add
add
add
add
adc
add
cmp
add
add
neg
bound
and
frstor
mov
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
pop
mov
add
mov
add
push
mov
add
add
sub
add
adc
add
pop
add
add
add
add
sub
add
or
add
xor
add
add
adc
add
add
mov
sub
push
inc
add
add
adc
add
pop
inc
add
add
inc
add
add
(bad)
(bad)
call
add
add
add
add
sub
add
or
and
add
add
add
add
jo
pop
add
add
sub
add
outs
sub
add
jae
add
or
push
sbb
add
add
add
mov
sub
jo
ins
and
jo
ins
mov
add
add
add
add
add
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
push
mov
add
add
jle
add
add
add
add
add
inc
add
add
add
add
fucomp
cmp
mov
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
push
mov
add
add
pop
mov
add
mov
add
jle
add
add
add
add
add
inc
add
add
add
add
inc
dec
lahf
and
lahf
fs
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
pop
mov
add
mov
add
push
mov
add
add
add
sub
adc
add
pop
add
add
add
adc
inc
js
pop
and
pop
mov
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
pop
mov
add
mov
add
push
mov
add
add
sub
add
push
jb
add
jo
sbb
add
or
push
je
add
sbb
sbb
add
add
add
adc
mov
push
adc
inc
add
add
add
add
push
inc
add
add
daa
add
add
push
inc
or
add
and
add
sub
add
outs
add
add
add
add
add
add
add
dec
add
add
or
pop
pop
ror
and
add
add
push
pop
jp
pop
and
add
add
sub
add
push
sub
and
add
add
push
and
loope
pop
add
add
sub
pop
add
add
add
add
mov
push
cmp
(bad)
jmp
adc
add
add
mov
push
cmp
(bad)
inc
push
inc
fldenv
add
adc
cmp
(bad)
(bad)
fst
fisttp
inc
add
add
pop
add
add
push
inc
add
add
add
add
add
add
add
dec
add
add
add
or
push
adc
adc
pop
pop
push
pop
add
add
sbb
add
add
add
mov
push
sub
adc
pop
push
xor
and
add
add
sub
adc
pop
pop
push
add
add
sub
and
add
add
fnstsw
add
fnsave
add
add
inc
add
add
daa
add
add
push
inc
or
add
xor
add
jl
add
push
add
add
add
inc
add
add
add
add
adc
adc
pop
dec
inc
inc
sbb
add
pop
add
add
pop
add
add
pop
add
add
inc
sbb
add
add
add
mov
push
sub
add
add
or
add
adc
sub
add
mov
push
sub
pop
add
add
add
add
mov
push
cmp
(bad)
call
pop
and
inc
and
add
add
(bad)
(bad)
jmp
adc
pop
add
add
(bad)
(bad)
(bad)
jle
add
add
ret
pop
adc
add
inc
sbb
add
push
add
add
(bad)
(bad)
jmp
add
add
add
mov
push
cmp
jle
add
fnstsw
add
push
inc
add
add
pop
add
add
push
inc
add
add
pop
add
add
add
add
add
jle
add
or
or
adc
or
pop
rcl
or
or
xchg
add
inc
pop
add
add
popf
add
jo
or
add
add
das
add
or
daa
add
or
or
or
pop
rcl
or
add
add
mov
push
sub
add
add
sub
add
add
mov
push
sub
pop
and
add
inc
sbb
add
add
add
mov
push
cmp
(bad)
jmp
add
add
add
mov
push
cmp
(bad)
(bad)
fst
fisttp
sldt
add
push
inc
add
add
dec
add
add
push
inc
adc
add
or
add
add
add
add
add
push
add
add
add
add
and
add
inc
add
add
add
add
add
add
push
add
inc
push
add
xor
add
stos
(bad)
(bad)
push
push
add
or
pop
sbb
std
(bad)
jmp
or
add
mov
push
sub
inc
push
xchg
or
add
cmp
add
add
add
push
adc
add
(bad)
(bad)
jmp
or
or
fmulp
es
adc
push
inc
add
add
daa
add
add
push
inc
or
add
push
add
add
add
add
add
add
add
sub
add
add
adc
add
inc
sbb
add
add
add
mov
push
sub
add
or
add
add
sub
jle
add
add
or
add
and
add
add
sub
add
add
mov
push
sub
add
add
mov
push
cmp
(bad)
call
or
add
add
add
or
add
(bad)
(bad)
call
or
add
add
(bad)
(bad)
jmp
pushf
and
add
add
(bad)
(bad)
(bad)
frstor
fstp
add
add
add
(bad)
(bad)
jmp
add
mov
sub
mov
stc
add
add
add
push
add
add
(bad)
(bad)
(bad)
cmp
add
add
pop
adc
imul
and
add
add
(bad)
(bad)
jmp
add
inc
add
add
daa
add
add
push
inc
or
add
mov
add
add
add
add
add
add
mov
add
jae
add
inc
add
add
adc
jle
add
add
inc
sbb
add
push
pop
pop
push
pop
pop
push
sbb
add
add
add
add
mov
push
sub
xor
pop
add
add
sub
and
add
mov
push
sub
add
add
daa
and
add
add
(bad)
(bad)
jmp
add
push
add
add
(bad)
(bad)
call
push
pop
outs
inc
inc
sub
and
adc
cmp
(bad)
call
sub
sbb
add
add
add
mov
push
cmp
(bad)
(bad)
jmp
add
add
add
mov
push
cmp
(bad)
(bad)
(bad)
ffree
add
add
fnstsw
add
push
adc
add
std
(bad)
(bad)
cmp
mov
pop
lea
add
add
std
(bad)
(bad)
cmp
add
add
inc
add
add
and
add
adc
inc
pop
add
add
add
add
add
add
add
add
add
jo
add
sub
add
popa
add
add
or
or
add
add
mov
push
sub
pop
and
add
add
or
add
add
mov
push
sub
add
add
or
push
xor
and
add
add
sub
pop
pop
push
pop
push
add
mov
push
sub
pop
push
add
mov
push
cmp
jmp
mov
add
(bad)
(bad)
(bad)
fisttp
fld
std
(bad)
jmp
add
add
mov
push
cmp
(bad)
dec
pop
pop
pop
inc
out
add
add
add
add
mov
push
cmp
(bad)
(bad)
cmp
(bad)
jmp
add
add
mov
push
sub
push
inc
add
add
sbb
add
adc
inc
add
add
add
add
add
(bad)
(bad)
call
add
add
add
add
and
add
add
mov
push
sub
sub
and
add
add
jle
add
add
inc
sub
add
push
sub
sbb
add
pop
add
add
inc
sbb
add
pop
add
add
inc
sbb
add
add
add
mov
push
sub
jmp
fstp
(bad)
call
inc
add
add
daa
add
add
push
inc
or
add
mov
add
add
add
add
add
add
add
add
add
mov
add
push
push
add
pop
add
add
pop
add
add
add
rol
add
push
add
adc
push
adc
add
push
adc
add
adc
sub
and
push
idiv
inc
inc
add
add
pop
add
add
add
add
add
add
mov
add
add
adc
and
push
add
add
mov
push
cmp
(bad)
jmp
adc
push
add
add
(bad)
(bad)
call
sub
and
add
add
(bad)
(bad)
(bad)
jle
add
add
fsub
add
add
mov
push
cmp
(bad)
(bad)
jmp
add
add
add
mov
push
cmp
(bad)
(bad)
(bad)
jle
add
add
add
and
add
add
(bad)
(bad)
jmp
add
add
add
mov
push
cmp
(bad)
(bad)
(bad)
(bad)
jmp
frstor
(bad)
call
inc
add
add
and
add
adc
inc
pop
add
add
add
add
add
add
add
inc
add
add
push
or
push
or
add
add
inc
sbb
add
or
or
add
adc
pop
push
adc
and
add
add
adc
and
add
add
or
add
adc
sub
add
add
adc
and
add
add
inc
and
add
mov
push
cmp
(bad)
jmp
sbb
add
add
pop
add
add
add
add
mov
push
cmp
jmp
les
or
or
add
inc
sbb
add
push
add
add
(bad)
(bad)
jmp
add
add
add
mov
push
cmp
(bad)
(bad)
(bad)
fnstsw
(bad)
jmp
fnsave
(bad)
jmp
add
add
mov
push
cmp
cmp
add
add
stc
(bad)
(bad)
cmp
push
add
add
stc
(bad)
call
add
jmp
or
adc
cmp
(bad)
(bad)
cmp
(bad)
call
inc
add
add
sbb
add
adc
inc
add
add
add
add
cmp
add
push
add
add
add
add
add
pop
add
add
pop
add
add
pop
add
add
add
add
mov
push
sub
jle
add
add
sbb
add
sub
and
add
add
jle
add
add
or
add
push
sub
sbb
add
add
add
mov
push
sub
sub
or
add
mov
push
cmp
clc
(bad)
inc
mov
cmp
stc
(bad)
jmp
adc
add
mov
push
cmp
movs
sti
(bad)
call
mov
add
mov
add
adc
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
repnz
add
add
add
add
add
add
add
add
add
add
lods
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cwde
push
add
push
add
add
add
add
add
add
push
add
xchg
add
add
add
push
add
add
add
add
add
add
add
sgdtd
add
add
add
add
add
add
add
add
add
fild
add
push
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
xor
add
add
add
add
and
mov
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
mov
add
push
mov
add
add
sub
push
mov
sub
mov
stc
add
jnp
add
add
add
xor
add
add
add
add
std
(bad)
mov
(bad)
mov
add
add
add
add
add
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
mov
add
add
add
jge
add
add
or
add
xchg
add
add
add
add
mov
add
mov
add
and
mov
add
inc
inc
add
add
add
add
add
add
add
add
add
mov
add
add
add
xor
add
jle
add
add
add
add
add
pop
jge
add
add
jnp
add
add
adc
add
inc
sbb
add
pop
add
add
sub
add
push
inc
push
inc
sbb
add
sub
add
push
jle
add
add
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
add
add
add
add
add
xchg
add
adc
add
and
add
add
add
add
add
or
add
add
sub
add
or
push
sub
add
push
add
sub
add
sub
xor
add
add
add
add
adc
inc
add
add
push
add
add
inc
add
add
mov
add
add
add
pusha
add
add
add
or
push
push
add
jnp
add
add
pop
inc
push
inc
sub
add
add
add
add
sub
add
push
pop
sub
push
and
add
add
pop
outs
push
dec
and
add
add
add
add
add
add
sub
cmp
add
and
add
add
movs
xchg
pusha
push
movs
xchg
pusha
push
inc
inc
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
inc
push
mov
add
add
sub
add
jnp
add
add
adc
jge
add
add
add
add
mov
cmp
(bad)
(bad)
fiadd
fiadd
pop
mov
add
mov
add
sub
push
mov
sub
mov
stc
add
add
adc
add
add
add
lds
add
add
add
xor
add
add
add
add
and
push
jle
and
push
jle
mov
add
add
add
add
add
sub
push
mov
sub
mov
stc
add
mov
add
add
pop
mov
add
mov
add
add
add
add
add
xor
add
add
add
add
mov
add
mov
add
and
bound
and
bound
mov
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
push
mov
add
add
add
jge
add
add
adc
add
cmp
add
add
(bad)
jle
push
and
jle
push
mov
add
add
add
add
add
sub
push
mov
sub
mov
stc
add
mov
add
mov
add
push
mov
add
add
sub
add
add
add
inc
add
add
add
add
retf
and
retf
and
inc
inc
add
add
add
add
add
add
add
add
add
add
mov
sub
mov
stc
add
mov
add
add
pop
mov
add
mov
add
add
add
add
add
xor
add
add
add
add
mov
add
mov
add
and
xchg
and
xchg
mov
add
add
add
add
add
push
mov
add
add
sub
push
mov
sub
mov
stc
add
add
add
add
adc
add
sbb
add
add
add
add
push
add
or
add
add
add
jae
add
or
cmp
add
sub
add
sbb
add
test
add
adc
add
push
mov
or
add
add
add
add
add
mov
sub
mov
stc
add
or
adc
adc
pop
adc
adc
fst
add
fisttp
add
jae
add
or
push
push
pop
pop
punpckhdq
pop
pop
cmp
or
and
es
add
add
fucom
add
add
sub
add
or
add
or
add
add
sub
add
or
add
or
add
or
add
adc
sub
push
inc
add
add
and
add
adc
add
add
add
add
add
add
add
add
add
add
add
push
adc
push
adc
adc
push
inc
adc
and
add
add
adc
sub
and
add
add
sub
and
add
add
adc
and
cmp
add
add
mov
or
adc
and
add
inc
adc
and
add
add
(bad)
(bad)
jmp
les
adc
and
add
mov
or
jmp
add
add
adc
(bad)
fiadd
fiadd
adc
add
or
add
or
fdivr
(bad)
dec
sub
push
inc
add
add
pop
add
add
or
add
add
add
add
add
pop
loope
and
pop
loope
mov
add
add
add
add
add
push
mov
add
add
pop
mov
add
mov
add
jle
add
or
add
adc
pop
push
add
add
adc
ret
add
jo
adc
add
sub
and
add
add
sub
jb
add
jo
lea
add
add
or
or
add
cmp
add
outs
and
add
mov
add
or
add
or
add
adc
adc
add
adc
add
add
mov
or
jmp
add
add
add
mov
or
(bad)
frstor
fstp
(bad)
(bad)
push
add
or
or
or
aaa
add
or
add
or
add
or
or
xlat
add
jo
and
or
or
add
jo
cmp
add
sub
add
or
sub
add
or
inc
sub
inc
add
add
pop
add
sub
add
add
xor
and
push
adc
add
add
test
mov
add
adc
add
add
pop
add
inc
add
add
add
add
dec
add
aaa
add
adc
add
sbb
add
mov
add
adc
inc
add
add
cmp
add
and
add
inc
inc
add
add
xor
add
add
add
xor
add
add
mov
add
add
pop
inc
add
add
pop
add
add
add
adc
add
cmp
add
push
or
add
or
and
add
add
pop
pop
xor
add
add
mov
sub
pop
or
mov
add
mov
add
and
add
add
add
pop
js
or
add
add
mov
cmp
(bad)
(bad)
fiadd
fiadd
sub
push
mov
sub
mov
stc
add
add
adc
add
add
add
add
add
xor
add
add
add
add
mov
sub
mov
stc
add
adc
mov
add
add
add
add
add
push
mov
add
add
pop
mov
add
mov
add
sub
add
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
and
add
add
je
imul
add
adc
add
add
add
push
push
add
adc
add
add
add
inc
push
dec
inc
add
add
adc
add
ins
outs
bound
add
add
add
add
add
push
adc
add
add
and
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
push
add
add
push
add
add
add
add
add
push
add
add
add
add
add
add
push
add
cmp
push
add
cmp
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cdq
add
add
cdq
add
add
or
push
add
cdq
add
add
and
push
add
add
add
add
push
add
add
add
add
add
add
cmp
push
add
push
add
add
add
add
add
add
add
add
cdq
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
xor
add
add
add
adc
xor
push
add
add
adc
xor
add
add
add
add
add
add
adc
sbb
add
adc
cmp
sbb
sub
add
add
push
add
add
add
add
add
add
add
add
add
xor
add
add
xor
xor
add
add
xor
xor
add
add
xor
xor
add
add
cmp
cmp
cmp
add
jns
add
xor
xor
xor
add
add
cmp
cmp
cmp
add
xchg
add
add
xchg
add
add
push
add
add
add
add
add
xor
xor
xor
xor
add
add
cmp
xor
xor
add
add
xchg
dec
add
add
je
add
add
xchg
xor
mov
add
add
xchg
xor
add
sbb
add
add
add
add
add
add
and
add
add
add
add
and
add
add
add
add
add
add
xchg
add
add
loopne
add
add
or
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
xchg
sbb
push
or
mov
add
add
add
add
add
or
or
je
add
add
or
or
les
add
add
sbb
add
add
add
xor
add
add
add
add
add
add
or
or
nop
xor
add
add
add
add
xor
add
add
add
add
aaa
add
add
xchg
add
add
call
add
add
add
add
add
or
verr
add
add
add
add
xchg
sbb
push
adc
adc
add
add
or
adc
pusha
aas
add
add
or
adc
mov
add
add
xchg
add
add
and
add
add
add
adc
or
add
add
add
add
adc
add
add
sbb
adc
pusha
inc
add
add
add
adc
mov
add
add
or
adc
add
add
add
or
adc
push
dec
add
add
or
adc
add
add
add
add
add
add
add
add
add
add
add
or
add
in
add
add
or
add
xor
add
add
add
sbb
sbb
add
add
add
add
add
add
add
add
add
add
xchg
or
add
dec
add
add
xchg
or
add
or
add
xchg
or
add
ror
add
add
add
add
add
add
add
add
les
add
add
add
add
add
add
or
sbb
fs
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
or
sbb
nop
pop
add
add
or
sbb
loopne
add
add
xchg
sbb
push
sbb
sub
add
add
or
sbb
jl
add
add
or
sbb
int3
pop
add
add
sbb
add
pop
add
add
add
add
les
add
add
add
add
add
and
add
add
xor
xor
add
add
aas
add
aas
add
aas
add
dec
add
aas
add
aas
add
aas
add
dec
add
push
add
push
add
aas
add
aas
add
aas
add
aas
add
aas
add
aas
add
aas
add
aas
add
aas
add
aas
add
aas
add
aas
add
aas
add
aas
add
aas
add
aas
add
aas
add
dec
add
add
adc
dec
add
add
add
push
add
add
push
add
add
push
add
add
push
add
add
or
inc
add
push
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
or
mov
add
add
add
add
add
add
add
add
add
add
rol
(bad)
add
rol
fild
add
dec
add
add
dec
add
add
add
and
xchg
add
add
add
icebp
add
add
xchg
add
add
or
add
dec
add
imul
sbb
rol
mov
sbb
jecxz
xchg
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
inc
add
mov
add
add
add
or
inc
add
enter
mov
add
add
dec
add
add
rol
add
dec
add
add
dec
add
add
add
stc
add
add
add
add
stc
add
add
add
add
add
and
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
jecxz
lock
add
add
inc
jecxz
dec
add
jecxz
imul
add
add
inc
inc
add
inc
rol
add
add
add
inc
add
imul
add
add
inc
and
imul
add
imul
add
add
add
inc
add
imul
add
add
inc
and
imul
add
imul
add
imul
add
imul
add
add
add
add
add
add
imul
add
imul
add
add
add
add
add
add
add
add
add
add
add
and
inc
add
pusha
push
imul
add
add
pop
imul
add
pop
imul
add
imul
add
add
add
add
add
add
add
add
sbb
add
add
inc
add
push
add
add
add
add
add
in
add
pusha
add
add
add
add
add
add
add
add
bound
add
out
adc
add
add
out
cdq
add
add
add
add
add
add
add
add
add
gs
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
arpl
add
jae
gs
cs
gs
arpl
outs
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
imul
imul
jae
gs
bound
gs
jb
jo
imul
imul
jae
gs
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
ins
push
imul
je
jb
bound
add
imul
jne
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
jae
gs
add
push
arpl
popa
jb
push
push
gs
bound
arpl
je
jb
bound
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
arpl
je
outs
outs
add
jb
outs
add
pop
inc
jno
popa
ins
imul
outs
gs
popa
ins
imul
gs
cs
dec
add
ins
outs
jb
push
je
gs
ins
add
jae
gs
cs
dec
cs
outs
ins
jo
gs
imul
ins
popa
je
push
je
gs
ins
add
je
add
je
imul
xor
add
imul
popa
ins
add
imul
ins
add
jo
jae
add
ins
jo
gs
imul
add
jo
jns
inc
outs
jb
popa
je
inc
outs
outs
arpl
add
popa
add
imul
jb
jns
inc
jae
gs
bound
dec
gs
outs
fs
outs
outs
add
je
outs
fs
popa
jae
add
jbe
imul
outs
popa
add
je
inc
outs
je
jns
outs
imul
xor
add
imul
imul
gs
jb
popa
jns
push
jns
je
ins
cs
imul
imul
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
gs
jne
arpl
add
jae
jne
arpl
popa
outs
popa
addr16
push
jns
je
ins
cs
ins
outs
bound
imul
add
ins
je
jb
dec
outs
outs
add
data16
outs
arpl
jno
popa
ins
jae
push
jns
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
je
inc
jae
gs
bound
inc
gs
bound
arpl
outs
outs
ins
gs
outs
add
jb
jns
inc
outs
jo
add
jo
outs
ins
popa
imul
add
jo
outs
ins
popa
imul
js
arpl
imul
ins
bound
addr16
inc
outs
fs
popa
jae
add
je
inc
jne
ins
dec
popa
ins
add
gs
je
dec
outs
jae
popa
outs
arpl
jb
ins
inc
outs
fs
outs
ja
popa
jo
push
outs
ins
outs
popa
add
je
inc
jne
jb
outs
je
outs
ins
popa
imul
inc
popa
jae
inc
imul
jns
jae
je
inc
jo
ins
imul
inc
popa
jae
add
jae
gs
cs
arpl
imul
arpl
inc
jbe
fs
arpl
inc
jb
popa
je
inc
outs
ins
popa
imul
imul
popa
addr16
je
jb
bound
add
je
imul
jb
gs
add
gs
jbe
cs
add
arpl
ins
imul
jne
arpl
outs
jb
je
jb
bound
add
bound
arpl
add
data16
inc
pop
xor
arpl
outs
jb
inc
pop
xor
push
add
xor
imul
inc
add
jne
gs
jbe
add
jb
jae
jne
arpl
add
add
outs
add
imul
jbe
outs
add
add
outs
add
jne
outs
add
adc
popa
add
ins
add
imul
add
ins
add
imul
das
add
or
outs
add
outs
add
sbb
outs
add
ins
add
data16
and
jnp
xor
jge
jl
add
outs
add
jne
imul
or
ins
add
imul
add
movq
outs
add
ins
add
outs
add
add
jnp
xor
jge
add
xor
jge
sub
jnp
xor
jge
and
jnp
xor
jge
pop
add
adc
add
add
push
add
punpckhwd
ins
add
outs
add
outs
add
add
jnp
xor
jge
jl
add
outs
add
arpl
outs
add
or
ins
add
push
imul
ins
add
popa
add
push
add
adc
add
outs
add
jne
jne
jne
add
jae
outs
add
outs
add
add
add
jnp
xor
jge
jl
jnp
xor
jge
jl
add
jne
outs
add
je
add
jb
jb
add
push
add
packssdw
imul
push
add
adc
xor
jge
pop
add
xor
jge
and
add
popa
add
add
outs
add
add
add
outs
add
jne
data16
jae
ins
add
add
imul
jne
js
jb
add
add
xor
jge
das
add
xor
jge
sub
add
add
add
outs
add
js
add
sub
add
pop
add
xor
jge
add
dec
add
add
add
movs
scas
pop
out
dec
mov
push
dec
test
and
add
add
add
push
add
add
add
add
add
push
add
add
push
add
push
push
sbb
add
pop
adc
push
push
add
sbb
add
push
push
push
pop
and
or
and
add
and
sbb
sbb
sbb
adc
add
ins
push
add
push
push
sbb
adc
add
push
push
sbb
add
push
add
sbb
add
adc
add
add
imul
adc
and
sbb
adc
or
add
or
sbb
adc
and
sbb
push
push
add
add
and
mov
push
or
add
and
sbb
sub
sbb
mov
add
add
add
add
add
add
add
add
add
push
jns
je
ins
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
push
or
or
and
or
push
add
add
sbb
add
sbb
and
add
add
add
push
or
and
or
push
sbb
add
sbb
and
sbb
and
add
push
sbb
add
push
add
push
add
add
add
add
push
add
add
add
test
adc
adc
adc
add
or
push
and
sbb
sub
push
add
add
or
add
add
add
add
gs
jbe
add
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
adc
jo
jb
addr16
and
xor
xor
add
bound
popa
sub
sub
sub
sub
xor
cmp
xor
or
add
xor
xor
xor
xor
add
add
cmp
push
pop
pop
pop
bound
pop
popaw
pop
pusha
popa
pop
bound
outs
imul
cmp
pop
xor
xor
xor
cmp
cmp
cmp
xor
xor
xor
xor
add
add
add
add
add
or
pop
or
adc
adc
or
sysret
or
sbb
push
push
sbb
or
adc
sbb
or
or
or
add
or
add
pop
adc
or
sbb
push
or
or
push
or
push
sbb
add
add
or
pop
or
add
adc
add
add
add
add
or
pop
push
add
push
or
pop
add
add
adc
syscall
push
add
push
add
add
add
or
pop
push
or
adc
push
push
adc
add
add
sbb
add
add
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
inc
push
inc
inc
push
int
loop
add
add
rol
add
adc
outs
add
data16
jae
ins
add
add
add
and
add
add
pop
ss
xchg
mov
and
adc
inc
cdq
mov
jg
mov
popf
cmps
pusha
arpl
cmp
iret
out
pusha
pop
xor
out
pop
sub
cld
dec
inc
cmp
aad
aas
xchg
inc
sub
(bad)
mov
sbb
and
test
mov
gs
add
enter
out
repz
and
dec
and
out
and
lods
pop
xor
test
fistp
test
mov
cmp
cmp
sbb
push
setae
or
mov
loope
and
xchg
fild
pop
mov
mov
es
or
mov
or
cmc
fbstp
stos
je
jb
aam
push
xor
cs
cmps
sbb
push
pop
push
dec
push
ret
fldenv
iret
in
inc
mov
ja
adc
div
dec
loopne
(bad)
fisub
pop
mov
mov
push
sbb
jbe
fmul
xor
cmps
push
jae
dec
aad
into
in
mov
xchg
xor
(bad)
pop
adc
sbb
xor
xlat
mov
push
xlat
sar
push
inc
data16
dec
enter
mov
cmps
mov
cmp
sub
mov
int
scas
push
mov
ds
jnp
mov
(bad)
into
lds
fmulp
out
not
pop
cmp
ret
scas
jge
jmp
imul
(bad)
mov
out
sub
sub
inc
bound
dec
push
out
mov
call
and
lock
movs
ja
mov
add
mov
cli
mov
sub
pop
cmps
lea
mov
jne
idiv
lock
mov
push
pop
add
nop
jmp
sub
dec
mov
(bad)
pop
nop
mov
mov
xchg
loop
dec
(bad)
adc
or
or
mov
xor
mov
into
cmps
or
adc
xlat
loopne
inc
test
rcr
leave
or
adc
stos
jecxz
and
ins
mov
aam
neg
aaa
mov
imul
sub
add
adc
sar
mov
(bad)
xor
dec
mov
adc
aam
fcomip
cmc
iret
cmp
push
stc
ja
(bad)
mov
inc
out
mov
adc
outs
xor
fistp
pop
and
ins
std
jns
mov
mov
scas
imul
ficomp
ds
and
xor
jle
int
jle
enter
hlt
sub
retf
scas
xlat
fisub
mov
aad
imul
push
sub
inc
mov
mov
ret
add
push
hlt
fild
sar
into
retf
cmc
cmp
pop
pop
imul
loopne
cmps
fist
ret
add
outs
lahf
push
and
push
icebp
out
std
jmp
ficomp
(bad)
inc
sbb
and
push
test
jns
daa
sub
add
sub
scas
mov
adc
xchg
in
mov
pop
dec
or
xchg
xor
mov
cmp
or
jo
mov
inc
arpl
and
xlat
out
sbb
xlat
ret
cmps
inc
jl
fs
jne
bound
ret
test
mov
pop
xchg
xor
mov
xor
es
sbb
mov
jbe
(bad)
loopne
xchg
mov
jae
dec
jne
call
xor
pop
std
(bad)
xor
out
pushf
jle
aad
adc
iret
xchg
out
iret
xlat
add
je
push
fsub
rcr
cmp
and
mov
stos
movs
add
pop
add
fwait
and
sahf
int3
stos
mov
test
cwde
pop
xor
nop
dec
sub
jae
call
pusha
mov
jl
mov
lock
xchg
jmp
aam
cmc
xor
xchg
inc
mov
frndint
ret
push
pop
add
dec
rcr
lock
mov
rol
inc
adc
pusha
fsub
in
cmp
jno
mov
loop
ja
cmp
xor
mov
fldcw
jbe
pusha
jbe
mov
push
fnstenv
dec
xor
lds
icebp
ins
mov
inc
mov
cmp
out
adc
inc
movs
pop
mov
lea
cli
inc
sub
xor
dec
or
mov
inc
ds
and
repz
inc
push
mov
shl
into
inc
jb
mov
push
imul
stos
std
mov
dec
add
or
xor
test
xchg
fs
sbb
aad
pop
cmp
jnp
fstp
add
clc
xor
jne
cmp
aas
icebp
mov
jle
jecxz
imul
fnstenv
cmp
clc
mov
mov
test
fdiv
stc
out
inc
shl
inc
or
add
cmp
jl
mov
nop
repz
cmp
pop
jne
inc
mov
cmp
xchg
lahf
(bad)
pop
mov
das
cmc
pop
jmp
and
and
mov
push
push
xchg
xor
jmp
add
push
movs
out
out
rol
sbb
add
xchg
imul
jmp
fdiv
gs
popf
sub
jo
push
sub
xchg
scas
cmp
mov
retf
pop
in
pop
xor
mov
call
(bad)
clc
mov
ror
call
mov
imul
inc
ret
sbb
shl
out
(bad)
or
mov
xchg
test
aad
jp
push
jp
dec
cld
pop
(bad)
push
sbb
adc
adc
push
out
xchg
das
jle
jmp
out
dec
push
cmps
rcr
mov
call
or
les
shl
imul
xor
outs
jge
mov
(bad)
adc
into
inc
data16
iret
push
adc
ficom
(bad)
or
sub
mov
xchg
outs
add
jno
les
push
out
lock
adc
mov
mov
test
pop
sbb
push
mov
mov
jg
mov
ret
push
icebp
aam
imul
add
das
fidivr
pop
jl
jmp
add
mov
push
add
in
clc
or
mov
inc
stos
fmul
sbb
aas
push
fdiv
sbb
adc
inc
adc
int3
mov
inc
(bad)
mov
mov
repnz
push
sub
es
in
rcl
cmp
push
shl
jne
and
jle
xchg
mov
xor
pop
and
popa
ds
ret
adc
or
sbb
pushw
xchg
je
mov
xor
(bad)
outs
sti
pushf
jb
mov
ins
mov
sti
movs
daa
out
pop
(bad)
test
adc
ins
leave
fidivr
xchg
clc
loopne
mov
loopne
das
xor
xor
dec
scas
cmp
fnstsw
outs
lock
sbb
leave
jecxz
push
(bad)
imul
dec
xlat
add
enter
mov
fstp
iret
mov
data16
adc
stos
inc
in
retf
mov
es
rcr
test
cmps
ret
fsubr
xchg
ret
fadd
cld
mov
jmp
pop
ja
cmp
mov
sub
sbb
mov
cdq
loop
xchg
mov
imul
cwde
les
out
ja
sbb
mov
out
hlt
fisub
(bad)
jmp
push
mov
mov
sti
sub
sub
push
scas
mov
test
cdq
daa
(bad)
sub
sub
gs
int
shl
or
aas
dec
ss
mov
push
test
rcr
mov
jg
jl
xor
pop
add
pushf
jno
pushf
pop
imul
adc
inc
xchg
dec
dec
pop
cmp
xchg
js
loop
lock
sbb
dec
iret
push
jns
push
es
add
xor
cdq
jne
bound
pop
dec
dec
cwde
sahf
adc
outs
jp
cmp
movs
dec
sbb
call
mov
xchg
int3
movs
pop
and
out
add
jne
push
retf
xchg
std
push
push
hlt
mov
aas
pop
sbb
mov
mov
jmp
popa
in
in
dec
add
inc
or
retf
stos
imul
js
xchg
lods
js
fsub
mov
mov
das
xchg
(bad)
mov
push
sbb
into
cmps
and
stc
inc
fstp
sahf
daa
int
rol
mov
movs
mov
inc
cdq
push
jae
cwde
(bad)
sub
cmp
mov
loop
jge
mov
jp
dec
outs
inc
xor
loop
mov
(bad)
test
add
xchg
call
gs
or
scas
jne
out
sub
enter
sbb
adc
cmp
cli
outs
dec
aam
arpl
arpl
jp
mov
mov
mov
jmp
sub
sub
inc
and
mov
popa
adc
in
icebp
mov
push
int
jae
inc
jge
push
xlat
mov
lahf
xor
dec
in
(bad)
(bad)
rol
or
std
cmp
js
(bad)
fs
mov
inc
rcr
xor
stos
mov
aad
jns
enter
js
pop
jp
mov
add
jecxz
jmp
push
fwait
mov
in
out
push
enter
repnz
push
test
and
(bad)
jle
mov
and
dec
sbb
sbb
shr
ja
inc
aas
and
jl
icebp
dec
jb
lds
aam
jae
xlat
stos
repz
xchg
cmps
push
inc
sahf
out
cvtps2pd
daa
dec
daa
sub
(bad)
sbb
nop
dec
mov
xor
or
icebp
mov
(bad)
adc
push
addr16
in
fldcw
not
iret
add
retf
ja
push
jno
ret
ret
cmp
(bad)
shr
xor
push
movs
mov
movs
fimul
scas
imul
mov
mov
adc
leave
jp
lock
jp
push
or
adc
in
fild
mov
mov
pusha
mov
mov
xchg
out
pusha
dec
push
fwait
movs
es
and
loop
bound
call
es
adc
or
mov
cli
jmp
mov
lock
dec
dec
stc
js
retf
jnp
xchg
cmp
xchg
(bad)
ins
fnstsw
test
cwde
push
or
les
aad
add
mov
loopne
push
adc
pop
(bad)
pop
hlt
out
mov
mov
dec
xor
dec
push
leave
int3
es
xchg
icebp
add
push
mov
ret
mov
imul
cmps
in
push
nop
mov
adc
nop
jmp
fcomp
inc
inc
push
test
loop
xchg
cdq
inc
iret
cmc
shr
ss
sbb
out
or
sub
dec
dec
mov
jae
mov
ret
push
pushf
adc
mov
pushf
xor
xor
cmps
jnp
add
test
call
xchg
inc
ss
(bad)
mov
gs
addr16
(bad)
sub
push
jb
aas
mov
cmp
xor
mov
shr
inc
jmp
call
loop
cwde
sbb
mov
xor
cs
aad
sub
in
fcomp
lds
int
(bad)
dec
cmc
int
test
push
and
add
jbe
hlt
xor
mov
(bad)
mov
rcr
repz
jmp
inc
(bad)
loopne
sbb
loopne
or
and
mov
jne
int
pop
es
repnz
ds
push
fs
ret
and
add
retf
lods
lods
mov
jl
xchg
aam
mov
xor
and
loopne
(bad)
pop
imul
mov
out
mov
fnstsw
aam
and
sbb
jno
div
add
stos
sub
popa
mov
sub
les
xlat
rcr
add
add
xchg
mov
shl
mov
add
fidiv
iret
jg
out
xor
les
lods
(bad)
fwait
xor
mov
jno
jae
push
xchg
pop
sub
push
dec
pop
sbb
mov
sub
imul
out
mov
xchg
jns
mov
(bad)
lock
cmp
adc
pop
jo
push
ins
rcl
jno
cld
fsubr
hlt
cld
fisubr
shl
(bad)
loopne
cdq
inc
(bad)
adc
aas
cld
jae
sub
mov
in
std
not
inc
lds
shr
test
mov
push
pushf
in
inc
rcr
push
cli
xor
mov
and
fcom
fld
cmps
adc
and
(bad)
pushf
push
xchg
ja
call
add
and
push
cmps
mov
(bad)
sar
push
mov
dec
mov
jb
and
mov
ins
or
jmp
retf
mov
xchg
or
and
arpl
rcl
int
add
repnz
sbb
and
les
push
push
mov
dec
in
out
bound
pop
aad
cmp
dec
scas
or
cwd
adc
or
std
sub
jns
add
push
mov
daa
(bad)
sub
fisubr
adc
pop
nop
mov
shl
out
jbe
imul
sub
repz
dec
xchg
cld
mov
clc
inc
fisttp
mov
fld
cmp
jl
fdivp
icebp
xchg
(bad)
cmp
retf
int
addr16
fs
mov
lods
inc
js
std
xor
cwde
adc
hlt
cwde
cld
lds
sub
fisttp
mov
push
rcr
adc
cld
fnstcw
mov
fs
cmp
xchg
sbb
bound
lock
sub
sbb
out
adc
add
xchg
ret
mov
cmp
sub
(bad)
ins
dec
jmp
xor
push
ret
addr16
mov
icebp
xchg
mov
push
add
mov
pop
add
pop
nop
xchg
test
jno
mov
mov
or
nop
sub
popa
and
jb
sub
bound
jmp
add
fistp
loopne
pop
xchg
pop
nop
xchg
sbb
call
loope
ss
sbb
pop
jns
(bad)
fs
rcr
cmp
fdivrp
pop
jbe
push
bnd
add
sub
std
pop
push
sub
cmc
aad
xchg
adc
jae
push
imul
(bad)
and
pop
mul
out
outs
jecxz
mov
mov
imul
test
aas
adc
gs
xchg
cli
fcomp
push
or
and
and
jg
clc
pushf
jecxz
into
xchg
loop
cmps
ins
xchg
xor
in
xchg
lods
mov
js
adc
mov
jle
in
aad
jnp
and
mov
neg
into
scas
adc
sub
jnp
mov
inc
dec
mov
stos
dec
ret
movs
test
jmp
lock
mov
pusha
loopne
into
mov
jmp
adc
pop
icebp
lahf
sub
add
and
test
push
test
pop
inc
pop
call
int
xor
cmp
xchg
loopne
push
iret
aad
out
int
dec
and
inc
xchg
pop
and
push
pop
jmp
js
aam
mov
cmp
sub
hlt
ret
aas
mov
inc
dec
inc
xor
mov
gs
cdq
std
pop
out
gs
ror
js
push
es
mov
xor
(bad)
(bad)
lods
mov
addr16
leave
jl
icebp
jno
inc
mov
in
cmp
or
adc
jnp
es
ficomp
fcom
dec
jge
adc
test
mov
pusha
and
das
inc
pop
test
push
rol
mov
ret
dec
aam
cli
or
add
dec
(bad)
enter
loop
pop
mov
int3
sbb
xor
fsub
inc
xor
xchg
jbe
mov
es
test
loop
stos
ret
jbe
pop
fstp
shr
jecxz
mov
pushf
retf
ins
or
add
cld
add
mov
nop
js
mov
adc
aad
mov
cmp
out
cmc
aad
gs
adc
push
mov
or
sub
imul
sbb
or
in
xlat
sub
(bad)
pop
sbb
gs
addr16
mov
jmp
ret
call
mov
pop
sub
dec
mov
ret
xchg
xchg
pop
js
fsubr
dec
add
js
sbb
or
lea
ret
mov
addr16
adc
cdq
mov
cmc
cmp
sbb
stc
or
push
jmp
xchg
or
xchg
mov
shl
mov
cmps
or
das
data16
lahf
push
stos
lock
xchg
js
jge
sub
pop
xor
mov
and
int3
retf
mov
pop
nop
jne
repnz
aaa
adc
sub
cmp
ds
mov
xor
dec
std
lock
cmps
and
mov
jmp
ins
lds
shl
pop
shl
ins
dec
in
cmp
lahf
enter
xchg
cmp
add
ror
loope
jo
cli
fchs
inc
test
cmp
inc
stc
gs
add
retf
pusha
sbb
idiv
pop
and
imul
mov
stos
mov
cmp
jle
(bad)
hlt
aam
in
xchg
sub
cs
mov
inc
imul
jg
test
mov
addr16
pop
daa
push
jo
mov
lods
hlt
iret
sti
int
not
test
repz
mov
mov
mov
movsx
push
jne
sbb
in
inc
xchg
adc
add
push
push
push
es
inc
push
es
inc
lods
sbb
mov
daa
cdq
lea
pop
push
in
sub
mov
adc
retf
ds
ret
jmp
inc
hlt
mov
pusha
aam
or
sbb
call
adc
popf
fisttp
retf
adc
mov
dec
push
stc
adc
jbe
hlt
xchg
sub
retf
or
xchg
push
fist
sbb
mov
xor
arpl
pop
cmps
cmp
sub
pushf
clc
and
xchg
mov
or
mov
int3
dec
aaa
movs
mov
pop
fs
pop
scas
push
xchg
outs
mov
or
es
pop
mov
mov
cmp
or
in
xchg
mov
gs
fist
fld
push
mov
pop
imul
adc
mov
mov
sub
test
hlt
mov
sbb
out
add
ss
jmp
mov
lock
cmps
jb
mov
test
cmp
xchg
jno
shl
lea
lock
xchg
sub
mov
inc
cwde
test
vmovddup
stos
jge
(bad)
stc
or
lahf
cld
(bad)
jno
push
out
scas
push
pop
mov
xlat
test
pusha
push
ror
popf
xchg
cdq
(bad)
mov
stos
movs
icebp
dec
dec
fwait
or
fbstp
mov
stc
std
dec
cwde
xlat
cmp
mov
shld
ret
sub
(bad)
sub
adc
pop
adc
adc
jle
(bad)
mov
mov
cmc
ja
or
cli
push
cmp
jl
clc
mov
les
xor
(bad)
and
(bad)
adc
add
pop
fmul
mov
sbb
aam
outs
xchg
add
fild
shl
jno
push
mov
rcr
mov
(bad)
and
mov
fwait
push
into
sub
call
sbb
fs
adc
xor
lods
sub
xchg
cmps
fiadd
push
pop
mov
push
out
stos
cmp
stos
movs
adc
and
fsubr
stos
das
xchg
call
cmps
adc
xor
jb
in
scas
inc
pop
fwait
in
ss
(bad)
jmp
sti
mov
pushf
cmp
mov
mov
cmc
test
xchg
fidiv
pop
dec
or
cs
jg
pop
loop
cmp
and
adc
ret
in
or
pop
pop
jl
pop
push
cs
lock
shr
aas
xchg
add
or
push
das
add
leave
into
inc
push
add
repz
movntq
bound
pop
cwde
ins
jne
cmp
xor
loopne
mov
xchg
mov
or
adc
fidivr
clc
and
lea
and
xlat
add
test
inc
fadd
addr16
push
or
and
adc
add
adc
fs
mov
adc
sbb
test
ret
mov
aad
inc
inc
retf
leave
xchg
inc
dec
or
pop
loop
mov
ret
mov
inc
mov
pop
shl
sub
sti
xchg
mov
sbb
inc
add
into
cdq
call
mov
sub
adc
out
xor
sbb
retf
mov
pop
cmps
push
sbb
fadd
push
jae
lahf
into
gs
loopne
inc
fistp
sar
mov
jp
sti
add
rcl
inc
iret
dec
jmp
lods
pushf
xchg
fs
push
iret
call
fs
out
sub
push
dec
in
ror
adc
jp
and
cmps
daa
push
lods
data16
out
mov
add
idiv
scas
loop
call
cmp
jmp
pop
ret
in
cmp
loop
cld
nop
xor
out
or
rcr
enter
popw
sahf
add
push
inc
sub
push
mov
mov
in
ds
or
cmp
lahf
mov
ud1
dec
add
popa
aas
mov
cmps
js
mov
arpl
mov
iret
pop
mul
sahf
or
add
xor
fstsw
sub
dec
jmp
sbb
adc
mov
jno
js
jo
lea
rdtsc
mov
(bad)
xchg
xor
out
enter
loope
ins
rcr
test
push
cmp
cmp
mov
cmp
jns
sub
cmc
jno
inc
sbb
ja
mov
or
mov
and
push
mov
imul
sub
mov
iret
inc
sar
mov
mov
aaa
mov
push
outs
inc
mov
sub
rcr
and
inc
xchg
aas
pop
jno
jb
(bad)
into
cmps
jmp
rep
ss
xchg
(bad)
mov
loope
sbb
pop
out
arpl
dec
dec
sbb
adc
aas
int3
cmc
xchg
mov
jmp
stos
mov
xlat
fisttp
dec
xchg
and
jge
dec
push
enter
jg
lock
cmp
push
mov
mov
dec
pusha
sti
mov
addr16
call
repnz
inc
rcl
dec
ret
shl
(bad)
je
ss
dec
arpl
jl
xchg
adc
out
inc
jns
push
in
jg
shl
pop
xor
repnz
jae
(bad)
jmp
cs
and
and
lock
inc
mov
test
das
in
cmp
add
or
out
aad
sub
mov
push
(bad)
repz
loopne
lea
lahf
lahf
test
js
adc
mov
shl
mov
cdq
jae
neg
pushf
push
fst
mov
ja
fidivr
or
inc
push
popf
cwde
or
sbb
sub
js
lahf
lods
add
(bad)
arpl
leave
push
mov
jle
hlt
adc
add
sbb
inc
pushf
in
mov
push
pushf
mov
cmps
inc
lea
mov
and
sub
cmp
jb
lods
shr
pop
jge
sub
int3
aad
(bad)
jecxz
add
movs
prefetchwt1
or
stos
sub
stos
or
lea
mov
inc
aam
push
pop
stc
leave
sub
lods
retf
cmp
out
push
movsx
dec
push
rcl
push
xor
scas
fld
mov
ret
dec
stos
sbb
mov
daa
repz
pop
(bad)
mov
jmp
mov
(bad)
int3
out
add
aad
mov
cmp
xor
xchg
out
mov
fsubr
dec
and
push
test
sub
mov
or
hlt
mov
js
add
stc
push
bound
scas
xor
and
aaa
cmc
in
test
clc
xchg
int
int
loopne
cmp
neg
call
and
mov
aad
adc
jmp
js
jae
sbb
and
outs
clc
in
in
daa
mov
jecxz
aad
jb
xchg
xor
cmp
dec
(bad)
js
test
pop
and
in
aad
es
cmp
mov
sbb
inc
dec
hlt
and
ins
mov
xchg
jae
jns
add
clc
push
or
shl
int
inc
(bad)
sbb
fcmovnbe
add
mov
in
add
mov
mov
(bad)
cmp
mov
sbb
popa
cmp
mov
(bad)
dec
inc
sbb
and
push
sub
sbb
adc
dec
mov
imul
std
cli
push
dec
jmp
cmp
ficomp
std
jne
gs
aad
push
imul
inc
sbb
mov
dec
fs
jo
jne
popf
pop
mov
enter
inc
xchg
push
pusha
mov
adc
mov
or
cmp
sar
loopne
add
cwde
dec
out
fabs
xor
xchg
adc
mov
mov
cs
imul
retf
xor
(bad)
xor
jg
xchg
retf
test
lods
jo
xchg
dec
inc
add
dec
xchg
xchg
jecxz
imul
test
lods
or
hlt
xor
std
cmp
(bad)
call
jns
addr16
into
iret
popf
into
sub
pop
mov
cmp
mov
sub
sbb
mov
push
arpl
xchg
jl
dec
daa
and
pop
paddd
test
and
pop
xor
inc
jo
bswap
and
inc
jnp
mov
pop
loope
es
fisubr
xor
or
daa
xlat
in
cmp
leave
stos
sbb
test
push
fdiv
bound
cmp
dec
pop
leave
jge
jl
cli
jl
dec
xchg
xchg
fnclex
popa
xchg
lock
mov
nop
ss
push
in
pushf
mov
cmps
or
mov
push
test
ja
pushf
fisub
and
mov
js
cmp
xlat
aad
add
cmp
aaa
fisttp
loopne
cmp
cmp
loopne
mov
lods
sub
ret
cmps
shl
add
add
add
ins
or
dec
sub
cmp
pop
jp
iret
add
sbb
sub
mul
jno
cmps
mov
xor
push
loop
pop
scas
fcmovnu
push
or
inc
and
idiv
mov
inc
inc
mov
outs
enter
or
sub
adc
adc
push
lock
dec
push
ins
rcr
add
movs
mov
fcom
add
add
and
outs
jecxz
popf
imul
mul
jecxz
ffreep
ds
jb
mov
sub
jb
adc
ffreep
add
out
aad
mov
sub
push
mov
lods
mov
mov
and
xor
test
adc
aas
mov
sar
mov
mov
retf
test
arpl
xor
ins
inc
(bad)
dec
loope
jmp
adc
inc
fnstenv
inc
aas
in
fnstenv
pop
mov
or
jge
add
xchg
xchg
push
jb
jl
pusha
rcl
mov
(bad)
rcr
adc
and
dec
mov
push
jne
lahf
ins
outs
inc
push
fldenv
push
rcr
adc
test
mov
add
jne
cmp
lds
fldcw
adc
inc
movs
xchg
dec
xor
adc
jbe
mov
inc
lahf
test
add
and
mov
mov
sbb
pop
jge
test
int3
dec
mov
dec
gs
pop
and
xchg
mov
mov
call
std
sahf
xchg
mov
push
push
jmp
add
jnp
add
add
xchg
stc
enter
xchg
lock
pop
inc
retf
ins
sub
dec
vcmpsd
add
bound
shl
add
sbb
fisttp
adc
movs
test
pop
movs
xor
push
jnp
(bad)
movs
push
loopne
loopne
mov
push
inc
mov
das
push
scas
pop
xchg
fld
js
mov
pop
pop
xchg
add
loop
ins
cmp
dec
cmp
test
repnz
sub
imul
and
into
clc
pop
and
inc
scas
sub
and
mov
pop
das
scas
in
add
sub
or
ja
dec
add
test
inc
mov
pop
push
jbe
adc
jnp
push
daa
jl
dec
mov
in
cmp
sbb
shl
mov
push
es
jmp
mov
jp
adc
jp
xchg
sub
mov
jns
sbb
push
es
inc
or
sbb
fwait
popf
cmp
test
or
sbb
(bad)
shl
add
gs
les
popa
fsubr
ss
ins
xor
int3
les
jae
mov
inc
jb
loope
std
push
dec
ins
adc
rol
adc
loopne
and
mov
inc
fild
hlt
jo
(bad)
dec
shl
dec
ds
stc
mov
push
dec
bound
test
stos
lods
adc
xchg
cmc
into
sub
pop
mov
jp
mov
adc
jmp
jmp
inc
(bad)
clc
inc
or
and
call
aad
jl
dec
je
inc
loop
xchg
sub
cmp
jbe
mov
ror
xor
mov
push
mov
faddp
test
add
mov
or
xor
pop
ror
xor
jno
outs
push
mov
dec
pop
outs
or
in
fld
arpl
je
fisub
lahf
sbb
or
jmp
movs
cmp
xchg
lds
sub
jl
jb
inc
arpl
jl
outs
cdq
dec
cdq
push
jbe
sub
xor
cmps
cmp
or
aaa
push
adc
and
mov
xor
ja
sub
das
jl
das
dec
mov
loope
inc
loopne
nop
fs
jl
push
test
outs
out
and
sahf
mov
push
test
adc
ret
icebp
icebp
push
cdq
aam
mov
adc
jg
loop
sbb
inc
jne
adc
jmp
jge
lea
loopne
popf
mov
repz
add
fnstsw
xchg
pop
mov
mov
mov
call
jae
sbb
and
loope
std
xchg
repnz
xor
(bad)
push
inc
dec
hlt
div
in
mov
ja
shl
push
pop
mov
push
mov
jl
pop
adc
sbb
daa
test
mov
popa
sbb
xor
and
jl
adc
xchg
push
adc
pop
fs
sbb
pushf
je
adc
div
hlt
dec
daa
mov
test
mov
popa
xor
outs
adc
lds
hlt
sti
in
xchg
jge
inc
repz
imul
(bad)
in
cmps
mov
pcmpeqd
ror
mov
rcl
pusha
sti
clc
add
sti
sub
mov
cs
sbb
mov
pop
or
lds
inc
dec
shl
sub
mov
test
inc
cmp
sbb
push
and
cdq
imul
mov
mov
add
into
int3
rol
mov
div
rcl
dec
(bad)
cmp
mov
push
or
push
ret
jnp
jno
mov
mov
sub
pop
and
jno
xchg
xchg
mov
jmp
int3
movs
jno
and
sub
mov
or
pop
cmps
xchg
ficomp
in
(bad)
pop
ucomiss
lods
cmp
daa
ins
arpl
loop
add
icebp
xor
cdq
cmp
imul
clc
cld
pop
mov
cld
dec
outs
arpl
mov
idiv
sbb
mov
stos
arpl
or
(bad)
pusha
test
and
ss
cwde
loop
xchg
mov
loope
xor
shl
sbb
mov
ret
pop
in
out
inc
popf
loop
scas
mov
add
dec
mov
or
xchg
or
push
xor
stos
int
mov
(bad)
mov
fwait
mov
std
push
repnz
mov
push
dec
outs
test
lahf
xchg
and
fsubr
lock
sub
xor
pusha
add
adc
ins
pop
xchg
fld
cdq
mov
das
lahf
dec
imul
mov
push
push
outs
stc
(bad)
into
jo
dec
or
xchg
cmp
ins
dec
outs
fadd
loope
sbb
call
xor
loopne
lods
ficom
cli
sbb
xor
loop
xor
shl
popf
les
mov
push
xchg
call
cs
mov
call
and
and
adc
jnp
inc
and
pop
xchg
jae
ja
test
or
and
jmp
push
mov
int3
(bad)
std
push
fadd
cmp
call
cmp
sbb
fadd
adc
ror
mov
ss
xchg
push
jmp
pop
adc
sub
pop
cmp
repz
aad
(bad)
cmp
in
fs
cmp
xor
mov
dec
pop
pop
jmp
mul
push
movs
lahf
ror
shl
pop
inc
movs
stc
mov
inc
scas
mov
pop
sti
sub
or
hlt
or
xor
mov
xlat
rcl
cmp
test
cmps
xchg
dec
mov
adc
mov
rcr
xor
mov
loop
sub
inc
xchg
xor
clc
(bad)
push
icebp
sar
les
sbb
sbb
ins
inc
inc
push
xchg
pop
mov
pop
jg
mov
mov
dec
sub
dec
xor
xchg
push
push
in
or
pusha
lds
aaa
pop
push
xchg
shl
jne
lods
push
jmp
sbb
and
push
xchg
cs
dec
mov
dec
cmp
fdivr
sub
inc
adc
push
or
mov
mov
jl
test
arpl
adc
icebp
in
call
jmp
les
arpl
pop
fidiv
mov
adc
sub
inc
mov
aaa
and
add
pop
mov
mov
adc
pop
ja
cmc
sahf
xchg
xor
psrld
adc
push
loope
push
push
test
scas
xchg
nop
int3
add
mov
mov
xor
cmp
adc
(bad)
hlt
dec
call
retf
or
or
(bad)
and
test
mov
pop
inc
lock
pop
popf
rcr
xchg
cmp
pop
ja
or
sti
sub
inc
scas
jecxz
inc
pop
mov
icebp
or
adc
dec
cmp
ds
sub
dec
fwait
sub
sub
mov
nop
outs
shl
or
xchg
sub
jmp
jnp
stos
mov
lds
cmp
mov
and
in
fcomp
adc
and
inc
inc
fnstsw
mov
push
push
or
jae
inc
mov
test
and
cmc
in
or
and
loope
movs
mov
cmp
in
dec
xor
and
or
fld
or
test
test
push
pop
dec
data16
sbb
cld
aaa
and
(bad)
dec
fwait
ret
sti
ds
loopne
inc
test
jb
xchg
jecxz
add
push
scas
mov
ins
mov
inc
in
ret
into
jnp
ins
loop
jge
mov
adc
mov
or
dec
stos
inc
out
pop
cmps
jae
enter
lahf
jmp
outs
sbb
jnp
mov
cmp
xchg
mov
pop
(bad)
dec
out
mov
rcr
jl
test
and
cmp
xor
or
out
stc
xchg
std
push
clc
mov
call
ror
inc
push
and
sbb
pop
adc
repz
fdivr
pop
iret
or
hlt
mov
sub
xchg
sbb
ins
xchg
movs
dec
sub
adc
mov
pop
lods
sub
jmp
sti
push
adc
test
push
lods
arpl
mov
js
loopne
xor
mov
cwde
jl
pop
out
mov
push
mov
xchg
and
cmp
lds
mov
mov
mov
call
xchg
loopne
fadd
jnp
add
lea
jbe
retf
scas
add
out
adc
inc
or
lods
add
shl
cdq
cmp
fidivr
inc
sub
out
adc
xor
out
mov
bound
jp
cdq
pusha
loop
cmc
mov
mov
rcl
popa
(bad)
cwde
or
sbb
and
cdq
sbb
push
stc
pop
sub
daa
popa
(bad)
test
or
sahf
xchg
mov
ins
inc
xchg
sbb
sub
scas
sbb
std
jg
into
mov
cmp
das
(bad)
ins
fidiv
pushf
scas
sahf
pop
push
push
mov
retf
mov
std
xchg
lahf
xchg
adc
loopne
and
retf
icebp
or
jge
adc
rol
das
cmp
sub
inc
adc
out
and
xor
out
enter
or
mov
jl
(bad)
shl
dec
or
js
or
pop
lods
xchg
fmul
cmp
cmps
xchg
cli
ror
jmp
aas
cmps
jo
test
outs
rcl
inc
xor
stos
into
push
(bad)
and
ret
jne
icebp
test
or
add
push
sub
mov
or
enter
dec
cmc
jne
mov
int
iret
dec
push
lods
and
das
lea
or
rcl
push
mov
cmp
inc
loopne
xor
jl
xchg
and
adc
loop
mov
lock
xchg
mov
mov
scas
fs
mov
call
in
pop
inc
icebp
mov
mov
loopne
dec
push
(bad)
pop
push
xor
cmc
xor
add
pop
aas
or
mov
dec
mov
imul
dec
mov
mov
(bad)
pop
pop
ret
leave
(bad)
and
aad
sbb
gs
inc
call
pop
stc
shr
repz
mov
mov
xchg
ds
jge
sbb
xor
pushf
stc
xlat
cmp
jno
cmp
ret
pop
or
sbb
movs
aam
jnp
xchg
adc
xchg
adc
scas
push
mov
gs
sbb
call
imul
and
inc
mov
and
adc
push
dec
mov
push
sbb
cmp
rcr
sbb
cmp
rcr
pop
xlat
sti
mov
dec
lea
inc
xchg
mov
mov
sti
jb
adc
enter
inc
cs
mov
clc
xor
out
mov
push
sub
lahf
fcmovb
xor
push
or
jmp
or
push
cmp
jne
or
lods
or
outs
in
sbb
jbe
outs
popa
loope
mov
ror
push
sbb
das
push
cld
fldenv
(bad)
or
xor
pop
mov
jbe
mov
jle
mov
sub
int3
test
xor
pop
cwde
xor
in
sahf
mov
mul
inc
ins
sub
sub
jns
jg
add
mov
xor
frstor
sub
mov
cmp
repnz
cli
retf
mov
xchg
mov
sub
ret
push
into
xor
pop
std
jb
push
mov
adc
ds
pop
add
call
fcomp
add
adc
cmp
fdivr
mov
and
jns
scas
jno
pop
lahf
add
ja
or
fisttp
and
xchg
movs
or
icebp
inc
push
mov
dec
ret
pushf
daa
scas
jmp
sbb
add
mov
aas
mov
sti
mov
mov
iret
cmp
mov
pop
(bad)
gs
ret
out
lods
sbb
xor
and
jmp
sbb
xlat
(bad)
mov
ja
mov
adc
sbb
lahf
pop
fild
pop
sar
fidiv
imul
pop
mov
or
dec
in
gs
into
pop
pop
aad
bound
shl
dec
adc
test
xor
rcl
jb
xor
adc
push
xor
sbb
xchg
out
enter
fimul
inc
mov
fs
fnstsw
mov
in
xchg
in
cwde
test
or
stos
sub
stc
mov
ins
imul
lahf
das
xlat
ret
sbb
retf
stc
sub
loope
cmp
mov
push
or
xlat
sahf
ror
jmp
in
push
(bad)
cmp
xor
pusha
mov
adc
sbb
mov
xchg
mov
int3
sub
and
popa
pop
xchg
push
add
add
sahf
stos
nop
dec
xchg
and
mov
leave
in
push
(bad)
sbb
scas
scas
jbe
cli
sbb
scas
sub
xlat
rol
outs
or
mov
imul
aam
sbb
sbb
sbb
mov
jmp
data16
sub
sbb
push
push
outs
or
das
imul
clc
mov
(bad)
outs
xchg
dec
sbb
ficom
push
add
cmp
(bad)
lods
repz
sub
jns
enter
jp
pop
sbb
(bad)
icebp
mov
push
cmp
in
outs
jbe
jbe
sub
xor
or
jmp
jbe
mov
cmps
cmp
inc
pop
out
xor
(bad)
jmp
fsub
mov
mov
mov
ror
and
or
sub
fcomp
inc
jb
or
xor
mov
jp
dec
ins
aad
fdiv
dec
jne
add
and
leave
in
add
lea
bnd
or
or
aas
push
fsub
sbb
jo
in
jg
cdq
iret
mov
lds
and
jmp
repnz
sub
inc
sbb
pop
push
mov
out
xlat
stos
and
in
xor
adc
mov
inc
pop
add
retf
mov
mov
std
dec
ds
cmp
fcmovnu
int3
fsubr
jmp
cmp
mov
les
pop
xor
leave
adc
mov
not
loop
adc
aad
(bad)
loope
movs
out
imul
fs
cdq
(bad)
cwde
je
jmp
push
pop
push
xor
(bad)
leave
sbb
mov
push
icebp
mov
imul
js
data16
call
pand
nop
lds
ins
xor
cs
(bad)
cmp
sub
stos
dec
sub
xor
iret
retf
cdq
icebp
cmp
adc
pop
rol
sub
sbb
jb
sub
ins
xchg
pop
or
pop
or
sbb
fst
push
ins
sub
mov
clc
cmc
ja
loope
popaw
mov
retf
or
pop
in
idiv
inc
jmp
xchg
(bad)
mov
push
and
pop
mov
les
mov
mov
dec
mov
cmp
xchg
xlat
xor
jmp
je
fisttp
dec
sub
stos
mov
cmps
jle
pop
std
cdq
das
sbb
and
push
push
mov
mov
or
outs
pushf
pusha
xor
div
rcr
pop
lods
or
push
stos
gs
push
or
out
mov
pop
aam
jo
lods
jg
xchg
mov
shr
sub
mov
sbb
mov
sub
inc
jns
scas
mov
js
mov
pusha
sbb
adc
mov
mov
pop
pop
inc
out
int3
and
loop
and
add
fsubr
add
xor
mov
inc
xchg
cmp
xor
bound
cld
cmc
repz
(bad)
pop
push
or
dec
dec
nop
out
sbb
xor
mov
(bad)
out
mov
or
push
cmp
ds
mov
ret
pop
jle
and
std
mov
movs
into
jg
jne
and
mov
and
cld
nop
jle
aam
hlt
xchg
test
retf
and
aam
pop
inc
test
jae
stos
xchg
ret
mov
movs
jg
jbe
jecxz
mov
mov
rcl
dec
mov
ins
push
(bad)
repnz
outs
bnd
mov
pop
mov
icebp
(bad)
icebp
mov
fdivr
sbb
inc
test
mov
ds
pop
btr
inc
mov
out
ss
inc
cwde
cmps
int
fild
or
fcmovbe
cmp
scas
adc
in
out
mov
out
and
inc
xchg
lods
lock
cmc
into
mov
pop
icebp
jae
out
push
mov
cmp
ret
jne
cli
loope
cmp
dec
(bad)
lock
shl
and
addr16
ins
mov
inc
aas
div
dec
(bad)
int3
daa
mov
add
dec
cmc
jmp
imul
jle
sub
scas
pop
scas
add
mov
test
adc
and
mov
xor
hlt
mov
adc
mov
push
(bad)
cmp
xchg
cmp
test
(bad)
sti
jbe
mov
sub
inc
add
pop
ss
pop
gs
cld
retf
pusha
jge
inc
cwde
cdq
int
fnstcw
ins
sbb
jmp
out
add
jb
jne
add
not
mov
jge
(bad)
sub
sub
test
xor
popf
loop
aas
mov
dec
lock
fdiv
js
outs
pop
pusha
mov
mov
ins
scas
test
std
adc
in
fisubr
push
dec
hlt
and
mov
fcmovnbe
ficomp
aas
sbb
addr16
test
adc
jb
js
adc
leave
cld
lahf
fistp
jmp
int
xor
push
test
std
(bad)
pusha
fisttp
mov
das
pop
jmp
ins
fsubr
cli
lods
mov
and
mov
cmps
ds
dec
out
push
(bad)
and
int
les
rol
loopne
lea
add
in
fild
out
sbb
jne
inc
repz
sbb
push
inc
popa
test
ds
aam
test
push
arpl
mov
lea
xlat
xchg
fimul
out
mov
lock
xlat
cli
int
cmps
aad
pop
jbe
add
stos
mov
in
shl
jb
adc
js
mov
push
xchg
aam
mov
outs
adc
adc
push
mov
imul
clc
lods
mov
sub
xor
push
xor
xchg
and
adc
sub
clc
mov
outs
mov
int3
aas
add
stos
fmulp
cmp
loopne
pop
dec
xchg
scas
cld
and
mov
inc
pushf
inc
out
pavgw
or
or
sub
lahf
wbinvd
cmps
and
loopne
or
xor
pop
mov
jbe
dec
and
and
mov
fbld
adc
add
sub
pop
cld
mov
mov
xchg
pop
(bad)
in
lahf
or
ja
icebp
adc
xor
enter
pop
cmp
jbe
sbb
arpl
stos
shr
das
jbe
mov
in
xchg
mov
ds
ds
test
and
shl
daa
je
dec
sub
punpckhbw
popa
repnz
mov
icebp
scas
dec
inc
adc
in
sbb
(bad)
pushf
imul
mov
adc
fld
test
xchg
fwait
sub
jmp
mov
jbe
mov
pop
xor
and
mov
xchg
jp
stos
lods
stc
jo
sbb
adc
ins
je
(bad)
pop
jo
in
ret
dec
(bad)
(bad)
outs
adc
cmp
mov
push
mul
pop
push
(bad)
mov
js
mov
int
dec
mov
cmp
and
pop
rcl
xchg
mov
(bad)
pop
movs
sbb
test
test
aam
ficom
lods
mov
mov
pop
jns
fild
hlt
pop
fwait
mov
test
out
jecxz
iret
jle
xchg
cmps
in
mov
xchg
pop
retf
mov
ret
aad
adc
ror
outs
adc
dec
xor
les
pop
data16
cmp
test
add
cmp
sbb
ror
out
int3
sub
mov
jecxz
dec
cmp
lods
sub
div
dec
cli
inc
adc
mov
dec
test
fs
into
xor
xchg
fwait
or
jne
cmovb
sahf
popa
or
push
xchg
popa
and
(bad)
xchg
(bad)
nop
pop
mov
xlat
fcomp
dec
addr16
cli
into
out
xor
das
sub
fdivr
in
cmp
rcl
aas
push
lea
int
xchg
gs
and
fptan
leave
rcl
retf
iret
pop
pop
cmp
es
stos
cmp
xchg
sub
retf
push
jecxz
cmc
pushf
xor
fs
mov
int
mov
out
xor
sti
mov
sub
in
lea
repnz
dec
cmp
mov
pop
push
or
push
popf
jmp
sar
shr
icebp
ins
pop
repz
call
jle
cld
xor
bound
cmp
fnstcw
jns
adc
add
or
das
and
cmp
xchg
xchg
inc
inc
clc
inc
inc
movs
mov
jno
xlat
add
outs
sbb
jp
rcr
aad
sub
ficomp
rcl
scas
mov
ret
cwde
or
out
std
shr
sub
aaa
(bad)
outs
in
cmp
daa
icebp
dec
int
dec
and
call
dec
add
jnp
icebp
adc
pop
leave
pop
push
mov
cmp
repz
movsx
xchg
ja
ss
dec
gs
lds
icebp
sbb
jo
jg
cmp
rol
outs
fwait
out
cmps
xchg
dec
ins
out
pop
retf
ins
pop
scas
pop
popa
data16
movs
imul
out
sahf
repz
fidiv
xchg
cmp
js
xor
cmc
in
pop
rcr
mov
pushf
sbb
(bad)
call
retf
sti
and
lods
xchg
sub
addr16
div
out
je
dec
xor
lds
cmp
add
mov
cli
out
aaa
sbb
retf
inc
popa
int
sub
arpl
pop
push
or
lods
mov
(bad)
cld
stc
loope
iret
inc
mov
ret
xor
mov
mov
xchg
xchg
retf
aad
and
daa
mov
mov
cwde
int
dec
cmp
push
push
cmps
outs
jno
push
fild
movs
mov
shr
mov
inc
stc
out
dec
rol
shrd
out
sahf
fisttp
jnp
addr16
(bad)
adc
xor
test
movs
ret
ins
lds
pop
dec
jmp
inc
pop
mov
sub
(bad)
xor
in
sub
push
loopne
jno
or
lods
stos
mov
or
mov
test
pusha
icebp
push
add
in
scas
xchg
dec
adc
cmp
mov
or
pop
dec
(bad)
mov
out
xchg
movs
shr
test
loope
cmp
adc
aam
and
cmps
xchg
enter
movs
nop
inc
(bad)
das
push
data16
arpl
sti
pop
dec
test
add
enter
inc
dec
lods
pusha
(bad)
js
stos
out
sub
dec
push
add
mov
not
push
stos
pop
popa
add
mov
sti
sbb
and
pop
add
mov
add
xor
and
repz
mov
jmp
addr16
movs
xchg
cmp
loope
hlt
arpl
mov
sahf
into
lds
dec
mov
cmp
xor
pop
mov
pop
or
pop
fs
and
push
inc
cmps
sbb
push
js
sbb
frstor
not
mov
loope
push
or
dec
jg
or
jl
inc
jmp
add
pushf
shl
mov
(bad)
mov
pop
mov
add
inc
pop
mov
adc
cld
push
imul
jg
adc
test
or
mov
sar
test
inc
cs
lods
xchg
loope
ret
in
sub
pop
div
popa
pop
push
inc
or
imul
jecxz
shl
add
ror
adc
xchg
(bad)
ja
push
add
mov
rcr
xchg
mov
sub
mov
mov
or
imul
add
jne
out
push
jne
pop
js
mov
pop
bnd
add
mov
retf
cmps
dec
(bad)
js
sub
xchg
out
test
pop
leave
call
mov
jae
or
iret
rcr
std
(bad)
push
mov
int3
fnstenv
imul
fcomp
pushf
mov
push
xchg
mov
mov
jbe
pop
adc
xchg
sbb
js
cmp
jmp
jnp
jne
pop
add
jnp
addr16
fdivr
outs
movs
jbe
or
adc
shl
out
stos
sahf
adc
test
retf
in
xor
icebp
jbe
add
xor
les
scas
int
dec
out
push
adc
pop
mov
cmp
add
and
outs
fcomp
mov
xchg
cs
test
mov
mov
sub
xchg
mov
je
or
ja
and
dec
mov
ja
mov
hlt
xchg
mov
jae
stos
arpl
dec
inc
mov
push
daa
fdivrp
inc
mov
ins
test
arpl
inc
jnp
fs
pusha
mov
push
mov
or
fidivr
popa
pop
es
lea
push
pop
cli
shr
ins
daa
and
mov
(bad)
add
sbb
cmps
out
push
jecxz
lds
cmp
jmp
aas
push
mov
test
dec
mov
fiadd
je
add
ret
dec
inc
jmp
and
fisttp
fild
mov
xchg
mov
hlt
jbe
or
shl
mov
and
sbb
rcl
jg
stos
pusha
or
mov
inc
mov
adc
add
inc
test
xor
loopne
push
mov
push
stc
imul
xchg
push
sbb
mov
imul
pushf
dec
push
ret
xchg
push
imul
jmp
fst
cmp
loopne
add
mov
fcmovne
mov
sub
push
test
unpckhps
mov
inc
je
adc
mov
mov
aad
push
pop
add
sbb
inc
dec
stos
int
in
jae
fdivp
mov
sub
cmps
pushf
adc
fs
sub
jb
pop
mov
and
xchg
shl
jmp
jne
(bad)
test
adc
lahf
lods
scas
imul
mov
mov
cmps
repnz
scas
ret
jmp
xchg
xor
les
int
add
fidivr
xchg
pop
and
inc
into
arpl
ins
lods
push
mov
mov
imul
stos
inc
mov
push
les
sbb
fxch
sub
jmp
push
adc
push
out
and
stos
jae
jmp
or
mov
sbb
out
xchg
push
ins
cdq
dec
inc
neg
aaa
dec
(bad)
inc
jg
add
shl
(bad)
mov
jle
lds
pop
jbe
jbe
(bad)
fidivr
mov
lods
ins
sahf
dec
pop
pop
(bad)
in
test
mov
pop
or
adc
(bad)
mov
and
and
das
ds
sbb
and
outs
mov
stc
cmp
fdivr
repz
inc
cmp
fnstcw
int3
mov
ret
imul
stc
and
call
int
pop
mov
inc
aaa
loop
xlat
pop
adc
inc
call
xor
sub
or
dec
call
cli
aaa
stos
pop
push
rcl
out
pop
cs
xor
jno
push
sub
test
jae
xor
xchg
daa
or
jb
jg
iret
aaa
aas
pusha
pop
clc
push
icebp
jmp
pop
or
ret
sbb
in
mov
mov
nop
arpl
lods
xadd
pop
mov
cmps
(bad)
jmp
add
fwait
add
pop
pop
sub
jmp
mov
inc
test
and
and
pop
fdiv
adc
inc
pusha
ja
jg
sub
jmp
leave
(bad)
repnz
pop
pop
mov
lea
inc
in
loopne
sbb
dec
jb
mov
pop
jbe
xchg
cli
sub
or
or
or
ins
test
test
mov
std
adc
sbb
or
sahf
out
push
lods
xor
adc
cmc
fcmovu
pop
sub
into
daa
movs
sbb
leave
je
inc
push
cdq
and
mov
ss
int
add
sub
cdq
mov
add
fild
dec
adc
pop
mov
and
dec
or
mov
and
fwait
pop
xchg
cmp
call
inc
pop
sahf
fimul
test
ret
sub
xor
test
cmp
mov
test
cli
mov
stos
or
loopne
or
mov
stos
lahf
mov
hlt
fadd
jp
mov
sub
add
adc
scas
jmp
push
mov
push
scas
and
shl
inc
iret
cmp
adc
fst
gs
nop
cmps
sbb
stos
push
gs
mov
push
leave
pop
adc
out
jp
ret
add
pushf
pop
clc
dec
push
sub
pop
cmp
mov
xchg
inc
int
sbb
cwde
(bad)
or
ss
push
and
ret
cmp
ror
jne
mov
cli
ret
nop
lea
inc
dec
xchg
rcr
push
into
sbb
cmp
add
sub
scas
sbb
int3
cmp
dec
lods
lock
mul
es
sub
shl
xor
int3
int3
fadd
dec
sahf
sub
mov
lfs
pushf
and
jne
ret
mov
add
cli
xor
int3
cdq
leave
mov
push
loopne
xor
cmp
movs
push
mov
ror
rol
sbb
in
sets
lods
xor
sbb
jp
inc
iret
sbb
std
mov
out
in
into
mov
cs
lds
sub
stos
add
popf
cmps
aas
adc
fstp
mov
cmp
rol
jle
mov
jne
in
adc
push
out
out
movs
outs
add
jbe
mov
lea
jge
dec
jl
loopne
sub
xchg
xchg
push
pop
xchg
jmp
data16
stc
sbb
fbld
fpatan
in
jmp
jae
pop
fwait
or
add
out
sbb
push
cli
jle
ret
add
jns
mov
push
mov
sub
or
mov
mov
or
mov
ins
out
jecxz
mov
aas
sub
sti
test
xor
pop
fs
dec
mov
cmps
pop
mov
bound
sub
lods
out
mov
nop
xlat
stc
cmp
or
jl
inc
mov
jge
mov
add
inc
mov
cwde
mov
outs
rol
push
hlt
retf
mov
or
cmp
retf
and
pop
lods
xor
xchg
mov
je
js
stos
lahf
mov
jle
in
pop
lahf
int
out
stos
outs
dec
mov
stos
or
and
dec
jnp
aad
adc
xchg
add
cmp
stos
jmp
xor
mov
fistp
(bad)
xchg
or
jb
sahf
(bad)
(bad)
loopne
or
fwait
pop
cmp
push
lods
mov
jb
test
cmp
jmp
ret
addr16
pop
pushf
dec
pop
cmc
dec
add
inc
pop
add
xor
xchg
push
and
popf
dec
xchg
push
adc
pop
jp
sub
cdq
movs
or
in
jmp
clc
cmp
push
into
or
adc
mov
aad
jns
fldenv
lds
test
fmul
fwait
adc
jno
push
dec
sub
sub
mov
sahf
shl
out
js
mov
scas
out
pop
or
scas
mov
in
call
and
push
mov
and
jle
ins
cmps
stos
push
fistp
leave
ins
rol
pop
mov
test
shr
adc
(bad)
out
lods
aas
enter
fstp
add
bound
xchg
pop
mov
and
aas
pop
add
jmp
xchg
and
jb
out
pop
jno
or
mov
xchg
outs
sbb
xor
mov
dec
adc
and
pop
adc
mov
pushf
xchg
(bad)
push
and
scas
mov
pop
hlt
and
pop
dec
lock
aaa
fisttp
shl
jl
mov
mov
cdq
das
cmp
test
loopne
sub
shl
jecxz
push
movs
push
fldcw
stc
cmps
arpl
dec
sbb
(bad)
jnp
and
sub
or
adc
in
mov
cld
mov
aam
mov
cmp
inc
xor
xchg
pop
ror
xlat
in
xor
in
fwait
mov
mov
out
shl
lds
pusha
int
sbb
(bad)
imul
jmp
in
pop
mov
mov
rcr
inc
xor
in
(bad)
xchg
or
mov
aaa
mov
outs
lods
xchg
out
push
xchg
cmp
xor
dec
add
xchg
and
mov
mov
pop
add
sub
dec
xchg
mov
mov
jno
cmps
xor
ror
(bad)
pusha
loope
mov
sub
pop
xchg
outs
jbe
cmove
nop
xchg
mov
repz
cmps
aam
lds
inc
fisttp
clc
aas
cmp
es
inc
out
xor
sbb
cmp
aad
clc
or
outs
jo
inc
cdq
adc
scas
cmp
xchg
sbb
and
cmp
cmp
cli
add
ret
inc
xlat
cmp
or
cmps
in
scas
cmps
and
push
mov
fwait
xchg
mov
xor
xchg
cmp
sahf
fdiv
mov
inc
test
shl
ins
test
push
pushf
dec
pop
loop
imul
mov
inc
or
push
xor
jns
and
cmp
jo
scas
(bad)
(bad)
std
mov
jmp
ret
push
fld
and
jge
pop
int3
jp
in
int
fsubr
retf
pushf
dec
inc
lods
xchg
dec
pop
and
adc
mov
sub
fist
daa
hlt
stc
jge
cld
cdq
movs
ss
mov
test
popa
aas
(bad)
call
sub
in
adc
lock
sahf
adc
out
sar
in
pop
pop
iret
xor
add
xor
jb
es
daa
mov
mov
dec
out
(bad)
xchg
mov
or
inc
icebp
add
push
push
fimul
pop
or
neg
ja
mov
call
cmps
mov
add
scas
or
push
out
xor
movs
push
push
mov
out
pop
adc
int3
xor
cmps
lods
add
aas
xchg
sub
(bad)
xor
lds
pop
lock
pop
mov
scas
fidiv
xchg
dec
or
mov
mov
in
out
mov
rcr
or
dec
or
push
mov
sahf
js
into
test
cwde
adc
sbb
cmp
jle
sub
fisttp
fdecstp
test
jb
mov
xor
(bad)
out
call
les
popf
or
mov
push
sub
adc
cmc
sar
outs
jle
inc
in
es
pushf
or
sub
add
add
fs
mov
and
int
loopne
inc
repz
mov
sbb
and
clc
imul
pop
call
cmp
lods
sub
out
dec
int
shr
cmc
cmp
mov
pop
cmc
(bad)
icebp
test
cli
(bad)
sbb
jns
test
add
xchg
sub
mov
repnz
or
pop
ss
pushf
je
mov
cmc
inc
aas
push
pop
scas
fcmovnu
repnz
stos
push
mov
jo
pop
hlt
adc
sbb
retf
repz
in
or
lock
enter
stc
push
in
cmp
adc
dec
and
cmp
or
(bad)
loope
stc
out
ins
cld
pop
mov
or
pop
jmp
shl
lods
xor
mov
jnp
pop
cmp
sub
ret
imul
mov
push
mov
clc
mov
inc
inc
mov
shr
xchg
lds
addr16
in
das
retf
inc
pop
popa
inc
stos
or
mov
pop
mov
add
fistp
jb
fadd
mov
pop
jns
dec
or
mov
dec
lea
imul
dec
lds
fisub
(bad)
jle
pop
or
int3
data16
sbb
sbb
sub
push
pop
mov
mul
pop
into
add
out
add
jge
retf
neg
lods
test
outs
add
shr
dec
je
mov
mov
adc
jp
sahf
cmp
mov
mov
outs
mov
jmp
fnsave
sub
sti
test
(bad)
xlat
popa
std
cmps
ror
or
xor
pop
shr
(bad)
fstp
in
cmovg
sbb
lahf
aad
je
mov
cmp
std
mov
cmp
cwde
xor
mov
in
cs
retf
adc
jae
adc
push
add
or
or
mov
sbb
dec
xchg
out
add
movs
call
mov
xchg
cmp
push
push
daa
mul
and
sub
adc
loope
mov
xchg
mov
xchg
xor
mov
adc
icebp
add
(bad)
loopne
xchg
daa
lea
popa
in
cld
fstp
loope
xor
push
dec
fidiv
or
pushf
jmp
sub
fbld
xlat
xlat
add
jp
rcr
out
push
outs
cmps
movs
imul
repz
mov
pop
push
js
mov
cmps
mov
pop
sub
stc
pop
xchg
das
pushf
ins
pop
out
and
cmc
mov
inc
popa
inc
(bad)
stc
pusha
test
mov
ret
test
push
pushf
ficomp
cmc
nop
cmp
xor
aad
cwde
mov
xor
fsubr
fld
mov
mov
mov
adc
ins
push
add
push
(bad)
cmps
lock
pop
stos
fidivr
sbb
jecxz
and
lods
shl
add
adc
shld
mov
xlat
test
fwait
neg
mov
or
push
enter
dec
daa
clc
push
push
sti
push
mov
ret
ins
(bad)
mov
mov
xchg
mov
enter
push
repnz
adc
push
xchg
xlat
je
jo
add
sbb
adc
mov
sub
dec
xor
cmps
retf
mov
fmul
ret
inc
cmp
push
(bad)
adc
sbb
aam
mov
xor
dec
push
add
sbb
add
stos
enter
addr16
inc
(bad)
cdq
cld
sub
dec
mov
sbb
xchg
push
movs
loope
inc
mov
lock
fyl2x
pop
adc
xor
xchg
loop
jmp
js
and
leave
test
sub
inc
xor
mov
xchg
add
aam
or
and
add
retf
aaa
cs
in
es
cmp
sub
adc
int3
das
inc
push
adc
mov
add
jecxz
add
and
adc
xor
add
das
cli
repnz
adc
cwde
popa
retf
xlat
sti
jecxz
call
jae
mov
(bad)
adc
xchg
push
out
jnp
jae
icebp
mov
pop
xor
push
sub
jns
sub
dec
pop
in
out
mov
xor
fist
push
pop
test
jae
add
and
fidivr
pushf
and
stos
mov
shr
out
mov
xor
mov
inc
ss
rcr
mov
in
cmp
or
mov
movs
inc
pop
cmp
fnstenv
(bad)
in
fist
push
gs
ins
loope
call
mov
push
fcmovne
daa
and
in
test
and
sub
push
xchg
sub
mov
(bad)
push
xor
pop
or
mov
adc
stos
xchg
fisttp
xchg
inc
in
bound
jmp
movs
shl
adc
rcr
xor
mov
pop
push
push
(bad)
mov
sar
cmp
paddq
jge
lahf
ror
inc
lahf
cld
push
mov
aad
and
aad
sub
mov
ins
adc
daa
lea
mov
jle
add
dec
sti
or
pusha
jns
test
lock
sbb
test
stos
mov
(bad)
out
xchg
push
inc
imul
mov
jo
cmp
sub
(bad)
out
daa
ficomp
into
arpl
cmp
xchg
push
mov
xchg
jnp
cmp
mov
jmp
in
aad
mov
push
inc
push
mov
jg
and
cmc
jbe
jge
lock
fiadd
enter
fldcw
cmp
sar
sar
leave
fmul
sbb
jbe
mov
mul
enter
stc
xchg
adc
sbb
or
es
pop
dec
out
dec
push
movs
scas
gs
repz
xchg
inc
pushf
mov
xchg
jo
sub
inc
pop
mov
shl
addr16
imul
xchg
mov
mov
out
jae
jl
mov
inc
or
(bad)
push
lea
pushf
loopne
leave
cmp
sub
fwait
arpl
ds
sbb
mov
inc
pop
cmc
push
repz
scas
stos
fs
xchg
sbb
int
outs
outs
outs
pop
dec
push
js
add
and
pusha
mov
cs
pop
scas
pop
push
icebp
sub
in
mov
pop
outs
sub
rcl
push
retf
mov
sub
test
jmp
nop
push
(bad)
jp
(bad)
aad
push
(bad)
fbld
mov
jle
je
pop
cmp
fs
adc
xchg
jg
in
nop
sti
ss
or
not
xchg
je
outs
repnz
xor
aas
dec
xor
lds
hlt
mov
and
sar
push
test
stos
pop
sub
movs
mov
inc
and
(bad)
sub
das
stos
stc
add
data16
xor
movs
js
cli
and
xor
xchg
in
mov
je
(bad)
mul
sar
mov
xor
xor
inc
(bad)
pop
stos
inc
inc
xor
and
es
jb
cmp
pop
lock
pop
push
mov
mov
mov
movs
loop
loop
xor
out
outs
rol
and
jg
or
popf
mov
push
cmc
iret
cs
jecxz
cli
pop
mov
shr
pop
test
fidiv
inc
stc
adc
inc
out
and
movs
in
and
js
dec
inc
pop
xchg
fsub
push
jae
lock
out
test
ficom
add
aam
fld
xchg
rcr
xchg
fnstcw
dec
jbe
fisub
inc
ja
daa
outs
dec
xchg
jmp
jno
cmp
daa
add
aaa
int
jmp
inc
stc
mov
pop
add
pop
mov
cmps
loop
hlt
leave
out
cmp
jns
dec
rcl
and
add
cwde
sahf
not
xchg
and
cmps
or
loope
arpl
mov
pop
mov
fsub
pop
out
fadd
loop
scas
rcl
aaa
dec
add
pop
fwait
icebp
pop
mov
test
sbb
idiv
out
imul
push
std
cmc
mov
push
sub
cld
mov
push
add
test
ret
dec
mov
jno
test
stc
lds
add
fs
and
scas
repz
sub
mov
shl
push
ror
sub
jmp
xor
jge
cwde
cmps
mov
mov
sub
push
adc
mov
inc
pop
xchg
pop
lods
pusha
fdivr
mov
rol
xchg
mov
and
ds
fs
mov
push
jecxz
dec
popa
cmp
push
fisttp
cmps
cmps
xchg
mov
add
loop
inc
ja
nop
fist
xchg
sbb
movs
in
sbb
push
mov
push
into
arpl
jp
and
push
mov
cmp
dec
stos
sub
sbb
jp
cli
cmp
xor
xchg
cdq
sub
(bad)
std
aas
lea
scas
retf
mov
(bad)
adc
int3
(bad)
add
arpl
inc
shl
std
add
cmp
jo
mov
(bad)
cmp
sbb
stos
push
stos
push
mov
daa
jbe
lods
mov
adc
cli
int3
mov
js
jge
daa
test
mov
(bad)
jnp
scas
mov
add
sub
mov
out
(bad)
(bad)
vprotw
jne
test
sar
sbb
fwait
jge
fmul
mov
sbb
cmp
aaa
xchg
inc
inc
clc
dec
data16
bound
ror
loopne
ret
loopne
frstor
mov
lods
cmp
out
pop
mov
mov
retf
mov
imul
push
int
js
xor
add
pop
adc
jbe
stc
pushf
push
mov
lock
mov
pushf
fmul
sub
pop
mov
mov
push
ins
or
out
repnz
(bad)
retf
jae
addr16
xchg
adc
inc
cmp
sub
cmp
inc
stos
repz
mov
repz
pushf
jecxz
sub
loop
fldcw
jmp
pusha
adc
popa
cmps
lods
out
ss
(bad)
mov
adc
jbe
push
sbb
iret
sub
aaa
imul
mov
div
out
cld
rep
ss
xor
imul
ds
xchg
jae
test
dec
in
pop
fcom
pop
push
mov
clc
test
stos
push
jnp
pop
neg
test
fisttp
pop
call
es
fimul
dec
pusha
icebp
int3
sar
dec
pop
bound
out
xor
sub
jl
or
jge
mov
inc
test
rol
or
cmps
aaa
cmovb
and
add
mov
addr16
add
push
cld
outs
jnp
int
out
mov
aad
or
cmp
movs
call
sub
ror
in
add
pop
enter
jg
pop
mov
dec
push
test
pop
mov
popa
push
addr16
sbb
push
xlat
push
aaa
jg
xor
cmp
(bad)
dec
pop
mov
pop
jmp
adc
adc
cdq
and
call
cmp
push
es
push
jmp
mov
adc
int
mov
lods
shr
call
and
mov
xlat
int
mov
outs
inc
cmps
in
pusha
pop
xor
pop
inc
ror
out
jge
mov
fwait
hlt
xchg
sbb
fwait
inc
psubw
ins
jecxz
pop
imul
dec
lods
dec
inc
sub
push
push
push
pop
or
cs
push
leave
outs
mov
xchg
xchg
sbb
lods
jb
js
data16
push
jno
pop
mov
test
pop
(bad)
cld
call
push
(bad)
cld
mov
jmp
inc
sti
sub
inc
jge
lock
(bad)
mov
les
or
in
icebp
outs
mov
retf
inc
test
jb
cmovae
cmp
mov
cld
outs
push
retf
loop
lock
mov
jbe
mov
mov
(bad)
sbb
jge
and
adc
cmps
ds
jnp
jne
retf
dec
sar
jecxz
imul
(bad)
pusha
repz
out
mov
cli
jecxz
fldcw
std
sbb
xchg
adc
xchg
sub
cs
inc
jne
push
jnp
int3
dec
xchg
call
aaa
test
mov
adc
cmp
mov
push
xor
sbb
daa
imul
sbb
add
sub
je
retf
cmc
movs
fsubr
push
add
mov
pop
push
mov
cmps
repnz
in
mov
mov
xor
imul
push
mov
(bad)
out
call
dec
mov
sbb
or
fidivr
pop
cmp
xchg
mov
fwait
cmp
ss
jo
xor
popf
and
psubusw
out
call
push
push
test
mov
sub
enter
mov
aam
scas
jmp
or
cmps
dec
aad
es
cwde
test
pusha
mov
movs
cs
sub
(bad)
pop
pop
mov
or
fmul
mov
inc
pop
dec
mov
inc
adc
and
out
sub
cmp
push
daa
add
sti
imul
dec
inc
xchg
setl
sahf
xlat
mov
jnp
dec
inc
popa
jb
test
xchg
jg
mov
or
push
ret
fbstp
xchg
or
std
int
cs
dec
fcmovne
jle
es
movs
sub
push
cmp
test
fistp
mul
stos
std
jns
cmp
sti
adc
dec
cmp
cmp
test
scas
mov
push
add
test
fld
mov
out
popa
popa
(bad)
push
pop
sbb
pop
cmp
sbb
cmp
lods
jb
pop
inc
sbb
jb
icebp
fs
loopne
movs
(bad)
ror
mov
or
cs
jb
xchg
mov
inc
lods
test
mov
(bad)
repnz
fisttp
jmp
add
adc
jmp
sub
fimul
lahf
idiv
mov
push
lock
push
cmp
imul
sbb
cmps
pusha
test
shl
sub
cmps
aas
mov
movs
jl
popf
call
(bad)
push
fwait
sbb
int3
cli
lahf
aaa
and
imul
push
mov
test
dec
adc
and
jge
xor
jp
xor
fbstp
mov
mov
push
mov
inc
mov
mov
imul
inc
xchg
data16
(bad)
pop
arpl
js
dec
cmps
retf
dec
cmps
in
dec
jno
adc
sub
mov
stc
add
shl
sub
outs
push
fist
or
push
mov
fisub
jle
cdq
fisttp
outs
inc
mov
fwait
xor
das
cdq
sbb
add
aas
std
mov
cmc
call
mov
xchg
dec
out
ret
imul
jg
dec
dec
dec
sub
xchg
popa
lea
(bad)
(bad)
pop
add
int
int
add
jle
fcomp
imul
das
mov
imul
ds
jmp
cmp
in
es
fild
fistp
cs
xchg
mov
mov
(bad)
out
test
add
and
scas
adc
icebp
pop
mov
arpl
xor
iret
(bad)
test
addr16
pusha
xor
or
loopne
push
call
mov
and
jle
xchg
mov
xchg
adc
scas
(bad)
or
inc
retf
add
jp
mov
cmp
pand
push
mov
shl
stos
mov
jne
mov
shl
cmps
in
adc
int
test
mov
mov
inc
mov
sub
in
cdq
sub
pop
dec
push
sbb
in
sub
xchg
or
adc
and
or
in
xchg
adc
fcom
ss
sbb
xor
mov
xor
call
fs
jns
mov
cmp
(bad)
push
xchg
fsubr
inc
dec
aam
push
out
stos
(bad)
test
out
jns
shl
mov
lds
fld
rol
xor
fnsave
xchg
dec
mov
into
scas
movs
loopne
pop
repz
inc
and
stos
adc
inc
mov
inc
fdiv
or
loopne
add
xchg
fdivr
inc
mov
stos
cmp
adc
adc
inc
(bad)
pop
cmps
adc
sbb
add
add
adc
lds
pop
mov
mov
neg
inc
outs
mov
(bad)
lods
(bad)
pushw
mov
sbb
add
mov
push
(bad)
adc
or
jo
(bad)
inc
inc
pop
movs
mov
cdq
mov
mov
(bad)
cmps
aaa
sahf
or
shl
jmp
push
aad
add
aas
(bad)
int3
call
cmp
xor
mov
test
inc
push
and
add
loope
jb
mov
mov
mov
cmp
es
sbb
cmp
dec
push
call
loop
or
retf
(bad)
xor
adc
and
repz
jg
push
ret
xchg
or
xor
push
cdq
lods
push
(bad)
or
in
jnp
dec
xchg
jl
xchg
inc
sahf
mov
outs
jns
dec
cld
out
and
je
sbb
jns
inc
das
and
das
and
js
push
leave
cmp
xchg
add
inc
xchg
adc
ror
xor
into
leave
movs
jae
push
(bad)
cmp
inc
jne
icebp
sbb
mov
sti
test
pop
and
out
cmp
cmp
fnstcw
dec
(bad)
or
(bad)
daa
fsubrp
int
mov
test
mov
repnz
xor
mov
ret
mov
repz
mov
test
xchg
sbb
mov
and
in
sub
dec
je
push
inc
and
fcomp
xor
jmp
rol
scas
inc
sub
call
dec
iret
mov
ret
das
xor
(bad)
fmul
mov
jmp
jp
addr16
cmps
ret
fmulp
push
mov
add
test
jg
add
nop
add
call
lds
inc
or
sbb
mov
pop
add
jp
gs
mov
int3
shl
retf
test
or
ret
push
enter
repz
xor
push
lea
or
jp
pop
loop
sahf
in
xor
cdq
pop
inc
push
sbb
mov
js
adc
or
int
popa
fld
int
test
popa
call
addr16
dec
push
mov
sbb
push
pop
inc
mov
mov
je
(bad)
loop
push
xchg
inc
inc
xchg
fs
les
mov
pop
jae
mov
xchg
xor
inc
dec
fwait
test
cmps
out
data16
cmp
in
add
fisttp
stos
xchg
mov
pop
pop
cmp
lods
aam
stc
mov
idiv
push
(bad)
fcomp
pop
cmp
retf
xor
dec
dec
dec
dec
sub
daa
loope
push
ins
int
stos
push
xor
dec
inc
popa
imul
dec
aas
jns
not
adc
aas
std
outs
retf
pop
es
test
xor
retf
mov
push
jne
loopne
loope
and
(bad)
lds
xchg
shr
test
ins
out
or
add
xor
push
aam
stc
and
cs
add
ret
ins
or
fisttp
std
test
aam
(bad)
movs
adc
dec
or
loopne
sbb
out
vmwrite
imul
inc
ror
xchg
imul
push
popa
pop
fst
dec
mov
adc
and
push
cmp
pushf
sub
mov
mov
or
push
pop
xor
call
pop
cmp
sbb
pop
mov
in
adc
push
imul
sahf
push
fstp
add
fwait
hlt
xor
mov
cwde
and
xlat
retf
(bad)
or
movs
jle
fidiv
xchg
lock
mov
mov
jae
xor
popf
pushf
lea
inc
pop
(bad)
mov
repnz
and
mov
cmp
add
xor
(bad)
fwait
test
retf
pop
out
mov
jl
scas
fxch
or
xor
jne
xor
dec
mov
mov
call
xchg
pushf
pop
lea
dec
mov
ds
sti
repz
add
data16
pop
pop
aad
lock
retf
and
(bad)
xor
ret
adc
xchg
div
cdq
or
std
mov
dec
int
inc
lods
(bad)
shr
(bad)
sub
pop
(bad)
xor
sub
inc
dec
xchg
mov
adc
push
lock
push
cmp
pushf
push
jns
sbb
icebp
stos
sahf
ja
xor
jmp
push
call
sub
xchg
xchg
aad
repz
pop
inc
call
xchg
cmp
sub
les
or
mov
xchg
out
lds
lea
fbstp
adc
das
add
pop
jne
sbb
ret
sub
cmc
xchg
inc
and
cs
dec
stc
xchg
movs
inc
movs
cmp
mov
dec
in
sbb
add
ficomp
xor
dec
sub
or
lods
fs
fnsave
sub
and
and
jmp
ret
xor
outs
pop
xlat
jno
mov
add
xor
xchg
mov
cmp
adc
bound
repnz
xor
out
jne
pop
lock
adc
xchg
cmps
lods
gs
call
sbb
cld
and
mov
or
or
aad
pop
inc
fdivp
jp
shl
push
cmp
cmps
sub
mov
add
(bad)
mov
cld
and
int
xor
jge
cmps
(bad)
adc
xchg
loop
lock
clc
mov
xchg
and
scas
inc
popf
cmp
retf
pop
cmp
sub
jo
icebp
test
xlat
mov
or
dec
or
lahf
jae
call
(bad)
in
das
(bad)
xchg
leave
inc
jge
push
es
fst
enter
arpl
cmp
mov
outs
popa
dec
add
rol
pop
repnz
cmps
aam
in
mov
imul
jae
mov
push
jb
mov
inc
and
test
mov
push
data16
xchg
sar
icebp
or
movs
push
mov
sub
or
aam
ret
sbb
aas
lea
dec
scas
pushf
sbb
cs
xchg
out
xor
clc
(bad)
cmps
call
or
xor
mov
add
inc
adc
xlat
js
cmc
push
mov
pop
imul
or
mov
adc
and
and
shl
cmp
scas
inc
aad
add
arpl
sbb
outs
jns
fs
push
loop
mov
(bad)
lea
test
loop
or
outs
test
mov
call
repnz
jbe
out
fdivp
scas
mov
dec
xchg
clc
fcmovb
jmp
cmps
stc
xor
and
cmp
into
jns
repnz
int
jnp
push
popa
jmp
not
cmps
stc
inc
mov
xchg
rol
lods
inc
cli
push
and
mov
out
push
ror
aad
lahf
push
inc
jnp
push
in
sub
ss
shl
(bad)
out
sub
cmp
das
nop
inc
and
ins
adc
fidivr
(bad)
cmp
inc
fldcw
xchg
das
mov
xchg
mul
pop
test
mov
inc
lods
mov
test
cwde
sbb
adc
punpcklwd
push
nop
inc
push
inc
cmp
pop
je
pop
outs
(bad)
nop
jge
dec
add
mov
retf
bound
push
mov
dec
xchg
and
stc
xchg
cmc
push
scas
mov
inc
(bad)
jb
mov
pop
pop
pop
scas
call
ja
push
xchg
dec
push
xchg
xchg
loop
jnp
sti
adc
cmp
adc
mov
push
fstp
iret
or
xchg
cmova
add
cmps
in
out
or
mov
(bad)
gs
mov
and
clc
fcmovb
and
mov
lods
in
or
cmp
stc
ret
fdivr
out
add
pop
xor
je
mov
and
jle
scas
push
and
dec
ss
imul
adc
cwde
cmp
mov
adc
in
int
mov
in
jmp
ror
push
mov
ins
pop
inc
fstp
pusha
mov
adc
bound
cmp
add
cmp
jp
dec
bound
fdivp
loope
fnsave
or
(bad)
mov
fist
dec
data16
in
(bad)
mov
inc
in
cmp
sub
data16
popf
lahf
xchg
pop
adc
cmp
and
add
ja
ds
and
cwde
inc
jne
(bad)
fcmovnbe
adc
fwait
xchg
xchg
jbe
inc
adc
xor
push
add
adc
add
mov
sar
mov
adc
aad
(bad)
mov
cmp
test
fiadd
jmp
mov
ror
mov
loop
mov
pop
xchg
cmp
(bad)
push
add
cmp
add
call
sub
mov
push
movs
push
out
outs
mov
stc
leave
das
enter
jae
ins
and
out
daa
xor
jmp
loop
sahf
xlat
push
push
mov
pop
adc
retf
cwde
sar
hlt
inc
je
inc
add
dec
inc
push
adc
or
jg
xor
sub
mov
xor
gs
xor
arpl
in
push
mov
call
es
push
pop
or
jo
aas
push
(bad)
jmp
pop
cwde
(bad)
push
or
xchg
cmp
int
push
jno
stos
mov
popf
inc
loope
sbb
mov
icebp
xor
int3
ins
cwde
cmp
push
mov
push
gs
ror
inc
or
les
and
inc
cmp
inc
ins
sti
lds
jl
mov
xchg
call
mov
sub
adc
mov
shr
arpl
rcl
adc
inc
mov
sbb
hlt
jae
in
addr16
xor
mov
mov
test
jecxz
push
scas
xor
or
not
jp
cmc
(bad)
cdq
xchg
jmp
rcr
dec
mov
sub
xchg
int3
and
mov
xor
mov
mov
xchg
mov
in
push
out
push
mov
xchg
jb
loopne
mov
icebp
mov
(bad)
cmps
adc
ins
sti
xchg
add
xor
push
ja
pop
pop
add
inc
je
arpl
jecxz
sbb
out
mov
es
pop
jecxz
jmp
loope
mov
cmp
xchg
sub
cmp
int3
jno
jbe
int
push
mov
test
cld
mov
hlt
mov
push
(bad)
push
inc
dec
fstp
pop
xlat
xor
cmps
jb
sub
jle
repnz
outs
push
pop
out
cs
push
cmc
jp
sbb
aad
sbb
lock
movs
mov
nop
pop
hlt
scas
and
(bad)
dec
call
je
push
dec
(bad)
or
mov
adc
sbb
adc
add
shl
push
mov
movs
or
mov
ins
xor
fcomp
cmp
in
adc
cmps
xchg
jno
cwde
xlat
xchg
inc
inc
clc
movs
js
jae
loop
cmp
sbb
sub
mov
pop
in
jmp
inc
sbb
adc
sar
std
xor
jecxz
loope
and
push
inc
push
movs
add
mov
xchg
add
sbb
adc
cmp
xchg
ss
push
mov
pop
add
call
int
jne
mov
add
ins
mov
add
and
sbb
and
sbb
cmovg
cmp
mov
icebp
xchg
in
mov
iret
sti
lock
imul
lods
sub
sti
or
cmp
arpl
or
pop
idiv
pop
or
ja
outs
ficom
out
add
aaa
add
cmp
xor
test
sahf
xchg
dec
(bad)
fcomp
and
sbb
cmps
jb
movs
jmp
jmp
add
jmp
pop
cmc
sbb
push
xlat
pop
(bad)
std
cmps
inc
pop
sub
cmp
adc
jae
into
data16
pop
sub
add
ret
pop
xchg
imul
xchg
add
pop
xchg
dec
inc
cmp
bnd
add
dec
cmp
data16
fld
arpl
xchg
imul
dec
xchg
leave
sub
mov
mov
mov
push
xor
adc
push
cmps
ja
lods
xor
dec
cld
adc
sahf
loope
mov
(bad)
adc
stos
jne
ins
jle
mov
ret
bound
inc
fcomp
mov
ss
gs
jae
(bad)
out
cmp
inc
jb
outs
pusha
(bad)
int
cmc
cmp
jle
leave
inc
js
retf
test
js
or
cmp
sbb
pop
loop
mov
out
pop
div
and
push
es
push
jge
pop
mov
adc
pop
pop
data16
(bad)
inc
sbb
popf
mov
add
cmp
lock
loopne
jo
mov
ss
jmp
mov
xchg
sbb
xlat
mov
mov
lea
jb
mov
pop
xchg
push
arpl
scas
jecxz
shl
push
fcomp
nop
mov
pop
int3
pushf
lahf
emms
fadd
fadd
mov
and
rcr
outs
mov
jae
push
ja
js
add
(bad)
mov
adc
pop
xchg
dec
neg
jnp
and
sbb
scas
push
out
mov
inc
out
outs
inc
fsubr
inc
xor
xchg
pop
jb
jbe
je
pop
sbb
pop
gs
lock
popa
jecxz
movs
xor
inc
cmp
mov
sub
xchg
adc
jecxz
mov
ins
lock
pop
mov
(bad)
dec
cmc
daa
cwde
sub
xchg
adc
jg
jnp
and
mov
test
xor
add
enter
xchg
sbb
gs
out
inc
test
dec
les
mov
ins
sbb
js
mov
and
adc
imul
data16
mov
popf
std
repz
push
stos
pushf
(bad)
lock
clc
add
adc
mov
xor
adc
sub
xchg
data16
pop
cmpps
dec
push
xor
shr
mov
jae
sbb
(bad)
push
cmp
stos
inc
div
push
push
mov
sbb
out
xor
or
push
mov
cmp
push
popf
sbb
adc
scas
jle
cld
pop
in
jmp
iret
mov
push
add
aas
jge
dec
loope
sbb
adc
xor
add
mov
cmp
xor
(bad)
lock
pop
test
push
add
aaa
dec
xchg
add
loope
test
push
inc
pop
(bad)
out
pop
movs
cld
rcl
jge
mov
iret
xchg
cmp
dec
shl
int
add
ja
or
pop
mov
jecxz
sbb
pop
dec
fcomp
push
in
mov
xchg
jne
(bad)
jp
stc
imul
and
jno
in
ins
nop
stos
mov
sbb
mov
sbb
jl
jmp
jge
cmp
pushf
cld
sbb
nop
push
imul
fisttp
xchg
lods
push
rcr
test
jmp
retf
xchg
push
dec
shl
adc
bound
out
lahf
sbb
popa
sbb
add
xor
cmps
cwde
mov
imul
pushf
(bad)
sbb
ins
inc
test
ret
mov
aam
test
test
outs
stos
shl
inc
inc
fstp
ffreep
shl
jecxz
jbe
not
cmps
push
and
or
add
shl
bound
jae
mov
xchg
out
leave
sbb
mov
cdq
xchg
jl
imul
dec
(bad)
scas
xor
test
xchg
sti
xor
(bad)
(bad)
dec
dec
jp
mov
push
test
pop
sub
pop
dec
mov
xor
in
pop
mov
push
push
lods
repnz
call
loope
xchg
cld
xchg
sub
lea
int3
adc
inc
dec
fs
loopne
mov
mov
fmulp
mov
sbb
jbe
popf
or
and
jb
or
aas
les
mov
cld
and
cld
cld
popa
stc
mov
xor
das
ret
mov
ret
push
fwait
cli
and
jmp
aam
mov
cmc
enter
(bad)
xchg
pop
test
lahf
in
lods
ret
mov
test
mov
jge
test
ret
scas
pop
mov
mov
sub
pop
in
cld
mov
aam
ins
sbb
stc
les
push
mov
mov
fist
test
pusha
cld
xchg
sbb
xor
xchg
repz
jecxz
xor
repnz
and
cmp
out
sti
mov
scas
jno
shl
gs
xor
xchg
jmp
je
push
push
jecxz
dec
test
shr
dec
cmp
lods
and
cmc
or
lods
xor
sahf
into
xchg
repnz
out
jg
popa
dec
mov
jbe
push
mov
push
push
stos
jp
xchg
icebp
addr16
pop
in
and
int
lds
(bad)
cld
js
scas
pushf
jl
dec
adc
mov
dec
(bad)
pop
add
das
cmc
popf
(bad)
in
mov
icebp
mov
retf
stc
test
fwait
lods
(bad)
retf
mov
cmp
hlt
lea
ret
sub
or
jne
cmp
stos
mov
pop
mov
scas
push
ss
xlat
dec
js
std
jae
(bad)
aam
xor
jo
iret
xchg
lds
and
push
loope
or
bound
js
repz
stos
cmp
inc
and
mov
jge
adc
mov
nop
mov
movs
mov
outs
push
dec
xchg
mov
ret
mov
outs
(bad)
fld
fxtract
sub
xchg
jb
loope
sar
cmp
dec
adc
hlt
stc
in
aas
jmp
sbb
test
scas
rol
mov
or
xor
xchg
push
fcomp
div
adc
mov
gs
or
pop
nop
in
xor
fwait
mov
fisttp
es
int3
dec
mov
mov
je
pop
dec
mov
outs
popa
fsubrp
xchg
inc
lock
aaa
scas
into
retf
and
loop
je
inc
mov
mov
rcl
push
jle
out
pop
and
lahf
push
sub
sub
movs
pop
mov
out
mov
stos
in
and
or
adc
cmp
xlat
mov
push
(bad)
arpl
inc
xchg
jmp
sar
cmc
push
and
jl
pushf
xor
into
pop
inc
mov
push
retf
jg
dec
addr16
sti
out
sbb
test
(bad)
int3
xchg
out
add
fcomp
test
(bad)
outs
dec
aaa
icebp
mov
out
lods
sbb
rep
xor
jge
jmp
or
cmp
js
cmps
inc
jecxz
xor
jns
jb
(bad)
jmp
inc
mov
fadd
push
out
xchg
jle
or
jbe
ds
imul
jle
imul
xchg
pop
cmps
sbb
cmp
cmp
jecxz
gs
adc
shr
mov
jbe
lods
adc
imul
out
(bad)
inc
mov
mov
push
dec
mov
sbb
fcmovu
bound
mov
mov
loopne
or
in
pop
pmaddwd
sub
mov
push
ss
fadd
jmp
les
enter
ds
pop
inc
mov
clc
jo
stos
mov
sbb
dec
inc
mov
cmps
(bad)
jl
inc
and
lds
mov
push
ins
xchg
aaa
pop
adc
fild
mov
push
adc
test
pushf
mov
mov
in
icebp
shl
enter
jl
sub
adc
mov
(bad)
and
shl
xor
and
sub
xor
movs
xchg
call
jecxz
nop
stos
into
fcom
rcl
xor
(bad)
(bad)
xchg
and
leave
xchg
popa
xor
loope
in
inc
retf
enter
test
inc
xchg
imul
aam
into
mov
imul
sub
and
cmc
hlt
adc
gs
xchg
push
or
gs
test
loop
rcr
xchg
push
lea
cmp
outs
jae
fld
mov
ins
pop
sub
mov
mov
adc
push
mov
xchg
xor
or
xchg
xchg
cwde
shl
xor
mov
sbb
nop
sbb
xor
rol
adc
lss
jmp
pop
push
cmp
mov
in
stos
loopne
bound
mov
ret
popa
pop
popa
popa
movs
cmps
push
cmp
sub
pushf
cmp
test
cmps
xor
shl
and
sbb
mov
arpl
out
les
aad
test
enter
sub
les
inc
cli
dec
fmul
adc
sbb
fcmovnbe
pusha
xor
xchg
cmp
jmp
arpl
mov
jp
cmps
jns
jno
stos
ror
dec
out
cwde
mov
pop
fadd
and
mov
rol
sub
lock
repnz
sti
neg
out
mov
pop
daa
inc
fmulp
sbb
and
fld
sbb
sub
into
shr
jb
rcr
rcl
fisubr
test
sub
cmp
inc
inc
lods
cmps
retf
pop
sbb
ins
fs
add
js
jno
jno
(bad)
sub
inc
aas
and
fwait
scas
inc
mov
frstor
pop
cmp
mov
dec
out
in
push
mov
ja
sub
out
jg
ret
inc
ins
push
jmp
cmps
jl
adc
inc
adc
fnstenv
sbb
in
pop
pushf
es
jo
fstp
sti
jle
jb
mov
sbb
inc
cmp
and
hlt
repz
cwde
adc
rcr
mov
ror
add
jp
stos
xchg
popa
pop
mov
xor
jnp
pop
xchg
and
mov
jns
gs
pop
jp
ja
push
mov
mov
(bad)
lsl
xchg
mov
add
jl
inc
inc
dec
mov
ret
(bad)
sub
cld
inc
xor
pop
xor
mov
rol
lea
(bad)
arpl
or
mov
pusha
xor
xchg
xor
test
int
adc
push
fisub
xchg
inc
or
cmps
cli
ins
(bad)
sub
arpl
pop
loopne
inc
push
test
sbb
and
inc
sub
mov
push
push
(bad)
sbb
xor
adc
test
aaa
mov
sub
mov
push
test
les
mov
and
jmp
mov
imul
ret
xor
jbe
sti
or
adc
ret
cld
rol
cmc
lods
jae
or
cmp
jmp
dec
jp
sbb
push
(bad)
int
in
int
call
jmp
js
(bad)
cli
pop
adc
jb
add
xor
cwde
out
jb
int3
jbe
pop
sub
jno
scas
dec
lods
loope
mov
cmp
pop
inc
add
imul
lock
cwde
mov
dec
cmp
mov
pop
inc
pusha
jne
int
mov
push
into
cmc
lock
std
dec
rol
js
sahf
loopne
jle
into
add
aas
or
push
cmp
enter
mov
fcom
pusha
push
xchg
int
xchg
xchg
ficomp
xor
pop
push
add
xchg
sub
cmp
pop
cs
dec
dec
out
jecxz
sbb
dec
das
xchg
data16
idiv
xor
mov
imul
and
clc
pop
call
sbb
loop
stos
mov
fs
mov
fisttp
shl
xchg
fnsave
mov
popa
ins
aaa
xor
jo
jno
sbb
add
add
imul
in
mov
mov
imul
mov
imul
jp
loop
xchg
pop
leave
inc
lock
ret
sbb
adc
xlat
sbb
cmp
sbb
sti
and
jns
(bad)
xchg
sub
inc
pop
jge
adc
mov
outs
data16
mov
adc
ja
inc
pmullw
not
sub
mov
adc
movs
xchg
pop
sub
or
dec
jae
dec
ds
add
inc
sub
cmp
call
sti
jno
cdq
mov
cmp
cmp
jns
(bad)
mov
dec
xchg
mov
xchg
xor
sbb
sar
js
cmp
iret
les
iret
test
js
xor
aam
adc
and
xor
jl
jnp
repz
xchg
sub
and
jbe
es
and
inc
dec
pop
lea
cmp
popf
cld
sti
fsub
mov
sbb
and
repnz
fist
test
sbb
popf
in
ds
lds
fdiv
sahf
stos
sbb
and
or
ins
xor
push
and
dec
aam
aad
in
push
adc
test
movs
mov
mov
xchg
mov
(bad)
fsubr
cmp
xor
mov
enter
mov
icebp
xchg
push
mov
adc
xchg
mov
push
mov
inc
in
xchg
and
inc
cmps
push
sub
xchg
add
cmc
mov
js
sub
pop
pop
push
mov
mov
and
in
mov
push
sub
xchg
sub
(bad)
or
mov
aas
shl
lods
fcmovnb
xor
xlat
sub
mov
fwait
retf
addr16
fist
sbb
(bad)
or
stos
and
stos
pop
into
inc
pop
or
xchg
popa
adc
out
xchg
rol
jle
outs
xchg
fsub
push
push
ins
pop
mov
loopne
dec
ret
fnstenv
(bad)
pop
nop
pop
mov
add
pop
in
or
sub
push
test
push
mov
ins
xchg
iret
ins
xchg
sub
and
mov
xor
icebp
lock
jbe
enter
sub
xor
(bad)
clc
dec
xchg
sub
outs
popa
nop
inc
jnp
pop
out
in
leave
lods
les
and
in
sbb
adc
rcr
and
cld
dec
cwde
mov
nop
ins
ins
fcom
dec
(bad)
mov
push
xrelease
rcr
fadd
jae
fucomp
mov
outs
dec
(bad)
int3
out
frstor
jb
mov
or
and
push
jae
stc
dec
mov
jg
jmp
xchg
ds
add
push
xor
mov
test
xchg
cmps
pop
adc
outs
jmp
pop
fst
adc
mov
cdq
fdivr
add
mov
retf
and
cld
push
inc
cmp
mov
and
sub
xor
js
bound
pop
cmp
mov
ds
aam
or
mov
dec
sti
stc
gs
inc
dec
cmp
loope
mov
mov
hlt
sub
fs
popa
mov
sub
inc
dec
pusha
or
cli
scas
mov
xor
neg
or
imul
mov
pusha
push
mov
jle
arpl
int
ins
push
inc
out
jmp
xor
cmp
cmp
jae
jnp
test
fild
or
mov
not
xor
out
pop
(bad)
mov
mov
xor
jl
mov
or
mov
fcmovu
add
imul
and
(bad)
je
fldenv
shl
iret
cmp
adc
gs
mov
(bad)
jb
pop
in
cmp
ins
mov
fucom
int
sub
xor
or
dec
and
add
add
mov
mov
sbb
fcmovnbe
out
jp
mov
adc
mov
mov
cmp
aad
xor
cmps
mul
mov
pop
mov
push
mov
pop
ffree
mov
out
scas
add
imul
sub
pop
inc
mov
cwde
test
fdivr
xor
xor
fistp
mov
fwait
gs
outs
jecxz
jg
sub
mov
gs
cs
aam
jmp
xchg
dec
ret
add
and
pop
cmp
aad
xchg
xchg
fdiv
ins
aad
jae
repz
mov
pop
jmp
jns
push
mov
in
loope
in
fidiv
jmp
mov
scas
imul
scas
repz
dec
xchg
pop
lahf
mov
shl
je
fisubr
or
popa
push
mov
xor
sti
jns
cmp
fld
cmp
cmp
cmp
neg
ss
clc
test
aad
and
dec
dec
shr
aas
mov
repnz
dec
in
add
xchg
cmp
push
mov
out
ds
shr
jns
data16
xchg
cmps
retf
fisubr
and
mov
mov
div
push
xchg
jl
inc
jmp
push
sbb
add
sub
rcl
cmps
cmp
mov
ja
inc
out
idiv
gs
outs
and
dec
adc
fnsave
push
jge
int
aaa
fcmove
cmp
pop
les
mov
and
lods
jg
add
movs
sub
in
xor
outs
inc
jno
pop
aas
lds
inc
jno
xor
xchg
stc
dec
hlt
fadd
mov
outs
push
cwde
or
bnd
rcr
push
pop
bound
fdivrp
popa
repz
and
push
mov
fisttp
(bad)
adc
ins
gs
arpl
pop
pop
scas
arpl
repnz
dec
dec
pop
mov
rol
inc
inc
(bad)
ins
cld
adc
mov
push
ficom
push
scas
scas
popa
mov
adc
push
lahf
mov
and
pop
stc
(bad)
movs
rol
cmp
mov
in
push
xchg
push
inc
clc
mov
data16
and
push
push
cmp
dec
cmps
add
xor
jmp
clts
or
push
fwait
rcr
add
and
mul
cmp
pop
sub
scas
xchg
push
lods
sbb
popf
push
sar
fcom
mov
mov
pop
jb
arpl
jle
xchg
sbb
cld
out
dec
add
out
cli
pop
repnz
stos
pop
sub
sbb
arpl
js
imul
inc
adc
icebp
mov
retf
test
pop
(bad)
in
test
dec
cmc
pushf
cli
or
jge
data16
mov
sbb
and
std
cmp
push
dec
cld
fwait
adc
in
pop
mov
out
cmp
push
cmp
pusha
test
(bad)
in
push
dec
ret
ja
(bad)
sbb
(bad)
movs
cvttps2pi
jae
jmp
test
fidivr
scas
push
add
cdq
or
jbe
test
xlat
into
xchg
adc
ror
ret
fcmovb
and
in
les
retf
mov
jmp
int3
ja
idiv
push
loopne
mov
(bad)
outs
pop
dec
mov
js
add
dec
mov
test
cmps
ins
jp
mov
mov
sahf
add
jl
cld
dec
and
(bad)
mov
imul
test
fs
in
sub
sub
stc
leave
xor
dec
inc
in
out
mul
sub
pop
mov
mov
or
cmps
lahf
gs
loop
cld
sahf
les
cdq
push
adc
dec
sti
and
mov
adc
int3
mov
inc
lods
hlt
enter
dec
retf
sbb
mov
mov
popa
cmp
jne
pusha
sbb
imul
and
cmps
dec
jle
sar
iret
adc
iret
ins
add
cmp
in
xor
(bad)
and
aad
cmps
and
int3
fist
mov
xchg
mov
lds
call
adc
pop
jge
xor
scas
lods
xor
and
ja
hlt
cmp
cmp
test
mov
into
pusha
cmp
cli
addr16
cmc
in
mov
add
aam
stos
pop
push
clc
xchg
cld
sbb
stos
xor
les
pop
or
imul
xchg
adc
sub
inc
dec
lds
mov
push
das
loope
test
add
mov
xor
xchg
and
xchg
jge
(bad)
div
mov
mov
jl
pop
sti
xor
scas
jb
outs
jp
sar
lahf
(bad)
out
sub
repnz
(bad)
fsub
xchg
fcom
mov
jns
sti
lahf
loope
mov
sahf
cmp
mov
add
popf
push
fisubr
js
data16
imul
push
rcl
push
mov
xlat
leave
jno
sub
jbe
ret
in
stos
cmp
mov
or
fsub
inc
xchg
fldcw
ret
sub
aam
pusha
int
call
push
jne
mov
hlt
out
jae
xor
xchg
aas
mov
push
sbb
cmc
lahf
and
add
push
(bad)
int3
leave
aas
cdq
fxch
cdq
cmp
xor
pop
ret
fs
xor
sahf
test
icebp
rcr
in
mov
jmp
cs
xor
retf
pusha
and
and
arpl
jle
test
fcom
popa
aam
fsub
les
inc
inc
stos
xchg
movs
jl
and
mov
gs
dec
lods
adc
jae
xchg
mov
sub
or
fucomp
xor
cmp
int
add
icebp
int3
dec
or
test
xchg
and
neg
and
dec
aam
sbb
test
adc
cmp
fucomp
test
js
out
mov
clc
fwait
inc
inc
lahf
dec
jns
jmp
arpl
in
out
adc
ret
daa
cmps
xchg
cmps
(bad)
mov
xchg
sub
out
sbb
rcr
xor
cld
mov
xchg
jb
mov
sub
aaa
mov
in
cmc
arpl
inc
lds
jg
jb
push
outs
jle
out
icebp
push
sbb
std
out
xor
stc
icebp
mov
cmp
leave
pusha
cmp
sbb
jle
call
cmp
inc
inc
jge
dec
jb
call
in
iret
sub
dec
mov
xchg
push
adc
sahf
dec
sti
xchg
push
sub
in
fstp
shl
cmp
mov
cmp
mov
lock
cmp
or
daa
mov
cmps
shl
ror
cli
int3
push
fs
or
clc
mov
fimul
mov
xlat
stos
pop
xor
jg
mov
call
popa
or
pushf
jecxz
sti
xchg
das
lods
or
loop
mov
movs
ja
xchg
jo
sub
fadd
xor
dec
push
dec
fcom
pop
inc
inc
fist
sub
arpl
sar
jno
jo
cmc
or
int3
sub
adc
or
les
pop
xchg
xor
aad
in
inc
imul
and
cmp
data16
mov
push
mov
addr16
push
push
mov
xchg
push
inc
call
adc
mov
in
mov
fisttp
mov
mov
adc
std
out
sbb
sub
leave
scas
movs
imul
cs
pop
inc
popf
sub
jmp
pop
icebp
inc
repnz
sbb
sbb
xor
xchg
rol
xchg
mov
(bad)
jne
loopne
mov
or
inc
test
movs
inc
sbb
pop
mov
(bad)
xchg
leave
dec
into
rcr
pop
stos
xor
(bad)
into
cs
sti
push
ds
jg
cli
xor
or
icebp
data16
repnz
pop
lods
sbb
hlt
xchg
add
bound
inc
sti
mov
cmp
inc
sub
movs
call
mov
fst
adc
push
adc
xlat
add
adc
mov
fwait
test
push
mov
(bad)
xchg
ja
and
int3
int3
std
sub
addr16
je
jo
cmp
sbb
div
cmp
pop
popw
cmps
add
pop
inc
ror
aas
push
(bad)
loop
push
lods
dec
fisub
call
or
mov
outs
cmp
push
fbstp
mov
dec
(bad)
and
ror
lea
sar
ret
mov
mov
les
dec
push
arpl
dec
in
in
pop
dec
loop
rep
inc
daa
adc
pop
xchg
cld
movs
(bad)
dec
mov
xlat
jnp
test
stc
lds
xor
sahf
outs
into
mov
inc
xchg
sbb
mov
jl
jae
lods
jg
leave
nop
xchg
dec
in
add
scas
mov
test
add
cmp
sbb
shl
mov
cmc
and
sbb
add
xchg
aaa
inc
repz
stos
pushf
and
push
xchg
sbb
xchg
adc
imul
ins
int
daa
and
scas
out
jp
mov
push
dec
mov
enter
or
pop
jle
fwait
inc
cmp
retf
imul
ss
mov
push
loopne
test
loopne
sub
sub
and
or
jo
jg
out
(bad)
outs
and
das
sub
or
inc
idiv
mov
jae
jmp
sub
clc
repz
test
ss
or
ds
pop
ja
shr
or
adc
mov
jo
push
inc
aas
add
xchg
sub
fs
lahf
rol
or
rcl
int
inc
outs
cld
mov
outs
call
int
mov
inc
xor
mov
sub
or
pop
shl
pop
ror
(bad)
mov
pop
lock
fsub
mov
ins
daa
sbb
cs
shl
sbb
lahf
cld
lock
sbb
or
or
xchg
mov
rol
imul
jo
jge
jecxz
les
xchg
sbb
scas
xor
push
cmc
mov
fcomp
(bad)
mov
popa
aaa
xlat
xor
ja
push
xor
je
dec
mov
test
sahf
mov
mov
out
jg
or
xchg
push
xchg
inc
in
or
aam
mov
inc
xor
cmp
sbb
stos
fcomp
scas
div
arpl
pop
enter
jge
push
out
jg
pusha
mov
fwait
sbb
mov
adc
cmp
pushf
push
je
sub
sbb
and
sub
sub
xchg
jno
push
aaa
movs
inc
mov
dec
cmp
push
adc
into
jp
jae
(bad)
dec
mov
xor
in
mov
(bad)
leave
push
mov
jp
jno
sub
fwait
jo
jns
mov
lods
or
pop
scas
pop
out
imul
loop
sub
xchg
dec
push
cmp
imul
adc
stos
js
ss
mov
sbb
pop
cmp
mov
int
pop
xchg
bound
addr16
(bad)
sbb
cmp
shl
sub
pop
int
or
repnz
pop
lahf
fcomp
in
lds
outs
push
lods
scas
jg
pop
mov
or
sar
retf
xor
daa
sub
cli
call
mov
cld
dec
std
popf
or
cdq
dec
jmp
mov
or
add
mov
inc
jp
push
add
je
inc
and
fcmovnb
or
int
xchg
xor
add
add
(bad)
jge
cmp
xor
lea
aaa
retf
sub
mov
out
fcom
fidiv
mov
pop
mov
out
adc
leave
or
adc
pop
inc
xchg
jnp
into
cwde
pop
das
lods
cli
sub
fisttp
mov
and
inc
mov
sub
sbb
mov
push
retf
sub
enter
mov
jae
stos
jl
mov
inc
sbb
mov
rol
mov
jecxz
outs
ret
add
sbb
jg
call
(bad)
jl
sbb
imul
stos
adc
in
or
fbld
mov
mov
dec
add
aam
movs
retf
call
pop
jle
data16
sti
retf
cmp
inc
mov
out
cmps
retf
mov
xor
mov
push
sub
inc
and
jge
sbb
in
cmp
mov
in
rcl
fnstenv
push
cmp
and
add
arpl
retf
dec
jbe
fisub
xor
lock
leave
stos
aad
loopne
dec
inc
pop
lea
jmp
dec
and
jge
pop
lods
cld
xor
pop
sub
or
sar
shl
fisttp
jmp
mov
fdivr
inc
pop
pop
pushf
out
xchg
nop
je
int
sahf
lahf
call
and
cmp
ret
imul
mov
jae
repz
mov
sub
icebp
in
mov
push
add
xchg
pop
dec
retf
test
inc
sbb
jecxz
mov
jecxz
xchg
aad
sbb
jae
and
es
cdq
out
sbb
stos
arpl
inc
sar
xor
dec
add
ja
mov
xchg
adc
fidivr
fdivrp
jbe
sar
shl
rcr
inc
push
xor
sbb
rol
popf
jg
sub
sahf
push
pop
sub
mov
inc
pop
shl
or
sbb
sahf
xchg
dec
fs
adc
dec
xor
daa
sbb
repnz
stos
mov
stc
jnp
fwait
jg
les
retf
jg
test
lock
leave
lea
adc
adc
jo
aad
jo
pop
and
jbe
int
mov
ins
pop
add
mov
xchg
outs
shr
mov
xor
xor
xchg
aad
dec
cmp
pop
sar
mov
out
inc
jmp
shr
mov
xchg
add
add
es
ror
pushf
mov
push
add
push
sbb
xchg
mov
aam
fwait
outs
sub
fucom
js
pusha
stos
mov
clc
test
aaa
mov
push
jge
mov
xchg
inc
loop
mov
imul
mov
push
jl
pop
fcomp
push
add
xor
test
stos
push
sub
nop
scas
dec
call
pop
cmp
test
pop
int3
mov
push
jg
fs
adc
loop
xor
push
push
mov
ins
xchg
js
push
mov
mov
cmps
push
movs
jge
jo
xlat
ds
int3
jmp
dec
pop
cld
in
mov
push
adc
jae
push
pop
push
stos
inc
xor
inc
sub
jns
xchg
fdivr
cmc
adc
leave
test
adc
sub
neg
jnp
repz
jp
adc
mov
push
push
pop
adc
je
mov
repz
sti
loop
ss
sahf
into
int
pop
inc
xchg
not
repz
pop
jne
adc
pusha
mov
sub
dec
int
out
or
aas
mov
(bad)
xor
repnz
pop
adc
(bad)
xchg
mov
scas
mov
mov
xor
jecxz
and
xchg
pop
ja
sbb
nop
sub
cmp
ret
mov
icebp
fstp
shl
movs
mov
inc
or
jb
add
push
and
lods
cwde
cdq
dec
gs
add
add
jae
add
mov
xchg
adc
imul
mov
xor
jecxz
test
xlat
ins
push
retf
push
push
cmp
cmps
stos
sbb
rcl
cmps
jno
xor
adc
(bad)
push
std
jmp
xchg
mov
pop
lahf
movs
mov
inc
arpl
xlat
push
pushf
inc
or
push
sbb
jg
int3
jne
and
rcr
aad
js
mov
sbb
std
push
pop
pushf
dec
stos
xchg
cmp
(bad)
popf
push
mov
jmp
xchg
and
jae
mov
lock
jl
rcr
inc
das
mov
es
push
adc
bound
aas
push
mov
jb
sbb
loopne
cmc
or
inc
mov
add
iret
add
add
mov
ds
cli
mov
shr
or
sahf
test
inc
aaa
out
xor
adc
(bad)
adc
jae
cmp
mov
jb
call
adc
mov
mov
popf
rcr
xchg
sbb
call
test
add
enter
jb
mov
in
shr
bound
mov
pop
out
jb
jo
jmp
out
inc
shl
jbe
xchg
outs
sbb
xchg
stc
mov
mov
jbe
add
adc
and
shl
repz
pop
rcl
mov
sbb
popa
adc
ins
ret
test
aad
fwait
mov
ja
out
repnz
inc
fbld
pop
mov
dec
daa
push
sbb
push
inc
dec
xchg
xchg
mov
inc
mul
out
mov
cmps
or
jmp
xchg
(bad)
scas
aaa
mov
loopne
stos
cs
xchg
xchg
cwde
xor
ret
jge
jb
cmp
(bad)
cli
rcl
test
xchg
test
ds
xor
or
rcr
ss
add
inc
xchg
push
loop
(bad)
out
cmp
data16
mov
iret
mov
sbb
nop
add
jb
and
xor
es
mov
push
mov
int
jmp
xor
inc
(bad)
aam
sub
cmp
jbe
xlat
push
lds
xchg
nop
sub
pop
fdiv
or
adc
xchg
ror
scas
movs
mov
inc
call
xor
dec
jo
sub
aad
xchg
sub
hlt
aam
mov
dec
and
outs
jbe
and
mov
fcmovnbe
fst
mov
in
sub
retf
cli
hlt
and
mov
pop
add
shl
mov
into
sbb
loop
pop
add
jnp
pop
out
das
(bad)
fnstcw
jo
(bad)
push
std
paddusw
sub
xor
sub
enter
aaa
jo
jae
int
and
xchg
jno
push
push
in
sbb
cmc
jnp
mov
out
cmps
jp
and
fs
inc
inc
fs
stos
pop
(bad)
pop
and
scas
cmp
out
mov
or
int3
pop
iret
ins
outs
in
inc
lock
xchg
dec
ins
outs
mov
mov
lahf
sbb
pop
push
or
add
xchg
rol
aas
sbb
retf
fs
mov
xchg
xchg
push
jge
test
lahf
movs
mov
mov
add
dec
in
clc
call
(bad)
jb
add
jle
sbb
sbb
rcr
or
(bad)
sub
stc
mov
mov
retf
scas
das
int3
adc
(bad)
clc
cmps
ins
dec
inc
test
xchg
pop
pop
dec
ret
lock
stos
ret
not
sar
in
push
retf
mov
out
mov
xor
cmc
mov
loope
mov
test
sbb
lods
xchg
dec
mov
adc
jns
mov
xchg
sahf
push
or
ror
sub
outs
and
sbb
cmp
fnop
sbb
lock
inc
(bad)
mov
cmp
es
push
dec
mov
stos
and
pop
mov
out
inc
dec
mov
xor
loop
adc
fwait
test
(bad)
push
jmp
sub
adc
xchg
stos
ins
add
pop
push
cmp
xchg
cwde
mov
mov
enter
cmp
js
loopne
inc
adc
retf
call
in
and
mov
in
jbe
imul
and
addr16
jb
cmps
push
inc
frstor
and
xor
mov
and
xchg
sub
inc
sahf
mov
scas
js
xor
hlt
push
mov
jbe
mov
(bad)
sub
xor
in
das
cmp
sub
inc
mov
fstp
xchg
and
aad
dec
push
xchg
jbe
lahf
jge
or
pushf
aaa
lock
(bad)
jo
clc
pushf
fisub
push
pop
adc
gs
test
rol
imul
stos
dec
nop
add
dec
add
fnclex
mov
pop
sbb
jp
test
add
rol
push
iret
inc
inc
in
and
mov
out
ret
cmp
movs
into
mov
xor
add
push
cmc
arpl
cmps
xor
dec
cmp
jle
xchg
test
mov
xlat
aad
push
jecxz
push
dec
mov
mov
loopne
imul
arpl
scas
cs
pop
inc
fwait
sub
jo
lahf
xchg
into
bound
sub
fisub
xlat
jb
(bad)
xor
lock
xlat
test
popa
inc
jp
rol
pop
stos
aad
scas
loopne
imul
dec
out
sub
stos
clc
retf
dec
out
daa
mov
mov
mov
cmc
mov
bound
or
test
xchg
sbb
cmp
ja
and
call
jno
aad
add
mov
sbb
lods
mov
iret
(bad)
xchg
cmp
mov
pop
sbb
adc
xchg
jo
sbb
stos
cs
hlt
jecxz
adc
add
out
pop
adc
push
lahf
fsub
inc
test
retf
in
addr16
inc
ficomp
jne
push
fwait
dec
pop
adc
inc
out
dec
lods
fwait
(bad)
fs
xor
movs
xchg
push
inc
jmp
repz
xchg
aaa
or
das
jb
jmp
add
aaa
test
jno
mov
or
imul
dec
cmp
inc
inc
rcl
jb
ret
mov
mov
push
es
ror
mov
iret
icebp
add
add
shl
cmps
or
outs
sti
rol
sahf
adc
fmul
add
cmp
sub
jp
push
por
jmp
sub
leave
xchg
mov
fimul
test
cmp
test
or
je
jmp
pop
pop
push
outs
shl
jle
into
scas
push
sub
inc
or
jecxz
or
xor
xchg
sub
xchg
adc
inc
xchg
jo
inc
mov
mov
pusha
aas
outs
je
xchg
scas
adc
or
mov
movs
mov
sahf
push
jnp
stos
mov
jp
int3
cmp
mov
imul
(bad)
stc
jle
push
fwait
fs
pop
inc
sbb
stos
cmps
jmp
pop
jo
adc
adc
jge
mov
jae
ss
sub
pop
loope
in
out
(bad)
jo
add
sub
jle
lods
mov
or
hlt
scas
push
jno
shl
mov
mov
mov
mov
sbb
(bad)
sbb
inc
pop
jo
or
pop
int
loope
scas
cmc
inc
jg
ins
add
(bad)
movhps
cmps
fbstp
pop
inc
movs
dec
or
aas
mov
dec
jb
mov
xchg
std
aaa
cmp
mov
lahf
(bad)
cmc
jbe
mov
fild
push
or
pop
sub
dec
xrelease
pop
and
xor
sub
scas
ja
add
pop
fiadd
ss
ret
push
fcom
adc
fwait
test
mov
and
clc
push
mov
lods
xchg
pop
call
in
jmp
push
sbb
fst
stos
xchg
push
rol
mov
nop
retf
sub
jnp
dec
and
rcl
les
jmp
ror
lahf
addr16
push
fistp
int
enter
xchg
sbb
mov
jge
push
xor
shr
push
pop
gs
sub
nop
xor
test
fcmovbe
or
mov
pop
not
(bad)
popf
cmp
jno
les
cmc
lock
xlat
push
jmp
ficom
mov
xor
mov
pop
loop
es
and
cmp
cmp
repz
repnz
dec
in
(bad)
test
inc
add
or
repnz
or
leave
jecxz
mov
mov
adc
cmp
out
cli
xor
push
jmp
mov
repz
adc
inc
pop
xchg
dec
ins
mov
imul
adc
test
pop
push
mov
popa
push
imul
pop
mov
out
xor
fcos
sahf
or
retf
cmp
test
fstp
inc
sbb
in
loope
fwait
adc
mov
mov
push
or
call
mov
in
cld
mov
test
movsx
pop
or
sub
adc
sub
stos
fmul
add
sub
xchg
mov
loopne
aam
in
cmps
sahf
clc
or
sbb
adc
ds
cmp
dec
cmp
ins
xchg
pop
fs
cmp
mov
mov
xchg
loop
jle
jp
adc
rol
sbb
dec
clc
jecxz
scas
cmp
fndisi(8087
sti
imul
repz
je
jns
inc
sar
mov
fdivr
xor
or
xchg
pop
pop
cmp
les
inc
es
pop
mov
sub
fiadd
inc
xchg
ror
dec
rcl
je
into
push
add
cmp
in
imul
push
sti
sar
test
push
mov
bound
out
xor
lahf
loop
sbb
jns
ss
retf
mov
add
pushf
pop
test
or
jno
fadd
in
lods
fnstsw
mov
ss
inc
adc
and
xchg
jo
ret
retf
call
pop
add
sbb
bound
adc
add
sub
push
out
mov
das
mov
je
cmp
cld
movs
inc
add
test
cdq
in
test
xchg
xchg
addr16
clc
mov
cli
push
mov
repz
out
cmc
inc
xchg
jno
xor
push
(bad)
xor
in
hlt
movs
outs
movs
aas
call
dec
lahf
inc
sbb
xchg
inc
and
mov
stc
rcr
push
mov
shl
push
push
xchg
cmp
xor
mov
ret
dec
adc
xchg
dec
sbb
shl
mov
push
dec
call
add
in
cmp
push
ror
jle
push
push
and
xor
mov
mov
mov
mov
dec
inc
pusha
mov
push
or
or
into
pop
std
(bad)
push
div
mov
xchg
sbb
fwait
pop
mov
inc
das
lods
mov
popa
and
test
push
push
retf
shl
jnp
loopne
ret
sbb
ins
std
scas
cmps
test
shr
or
push
cdq
dec
push
das
mov
sbb
test
jo
xchg
add
call
shl
add
mov
in
push
addr16
ja
sbb
pop
sbb
inc
inc
les
sti
aaa
push
xchg
pop
dec
outs
fsub
fmul
inc
ins
push
mov
add
mov
pusha
push
xchg
outs
xor
xor
call
push
pusha
add
pop
sub
adc
movs
or
dec
pop
in
ror
out
xchg
imul
je
jb
aam
lods
sbb
xor
pop
and
adc
stos
adc
cmp
sub
pop
push
gs
adc
loopne
js
ret
push
inc
xor
sar
aas
dec
out
jmp
mov
pop
jp
fcom
addr16
cwde
xchg
out
rcl
aaa
pop
ds
rol
mov
mov
in
out
or
mov
aaa
adc
mov
fwait
dec
jl
stos
aad
ins
or
out
push
(bad)
pop
stos
or
push
or
sahf
shl
int
xchg
mov
(bad)
(bad)
ror
add
mov
add
pop
or
adc
dec
and
pop
sub
popf
cmp
mov
enter
push
lods
sub
cmps
aas
cmps
push
mov
inc
int3
adc
fist
mov
jno
movs
mov
movs
in
fsub
mov
xchg
movs
inc
dec
out
popf
add
xor
xor
mov
fstp
mov
arpl
add
enter
jge
mov
outs
mul
jge
mov
int3
dec
(bad)
cmp
fs
sub
push
aad
sbb
cli
ret
cmp
push
(bad)
jae
push
xchg
or
push
pop
inc
clc
and
ret
cwde
cmp
inc
mov
jle
adc
xlat
loopne
movs
in
cmp
dec
inc
fldz
mov
jp
xchg
into
mov
adc
adc
ja
int3
stos
jno
ss
inc
pop
sbb
mov
jge
or
mov
daa
and
adc
cdq
rcl
jp
xchg
adc
pop
push
and
xacquire
jns
fstp
adc
test
sub
sbb
jns
movs
jl
jmp
aam
std
aas
dec
sub
fisttp
imul
push
pop
into
mov
pop
enter
enter
es
test
inc
add
aad
inc
out
aad
sbb
pop
in
xor
jnp
(bad)
push
cld
xor
jb
fs
std
mov
push
ss
and
adc
ins
mov
fnstenv
inc
add
sub
aaa
sub
aam
scas
pusha
in
test
xchg
dec
mov
shl
mov
nop
xchg
data16
outs
inc
xor
inc
(bad)
das
sub
inc
or
(bad)
inc
out
repnz
jb
mov
daa
sub
mov
mov
shl
hlt
iret
dec
and
cmp
mov
cli
push
sub
and
sub
jae
xchg
mov
xor
std
mov
repnz
imul
cmp
test
retf
jp
fcmovu
adc
arpl
sbb
jle
adc
(bad)
mov
mov
mov
mov
sbb
es
inc
sub
add
ins
ins
inc
clc
push
sti
data16
stc
clc
mov
inc
lds
mov
es
add
test
(bad)
inc
mov
daa
dec
pop
dec
adc
cmp
popf
sbb
pop
adc
push
aaa
cmc
inc
ret
push
dec
push
push
cmps
jl
movs
mov
push
sbb
mov
sub
fbld
xchg
push
cmp
pop
ins
lea
add
pop
mov
sbb
xchg
dec
rcr
dec
fadd
xchg
shr
arpl
push
sar
fadd
add
push
or
data16
adc
adc
lds
xchg
dec
loopne
aaa
mov
push
mov
pop
fldcw
nop
call
mov
movs
ins
adc
adc
mov
ins
jne
fs
arpl
cld
test
in
sbb
sbb
fadd
inc
in
mov
push
cmp
loopne
jl
jmp
ror
jmp
dec
inc
pop
popa
xor
ficom
gs
sbb
sub
daa
pop
fnstenv
jl
stos
push
sub
test
call
adc
cmps
repnz
xchg
jge
lods
(bad)
in
add
pop
cmp
lds
mov
sbb
jge
adc
inc
add
mov
popa
xor
lods
jp
int
push
jo
mov
jp
jge
cwde
push
inc
and
inc
nop
adc
fs
call
dec
(bad)
and
shr
hlt
call
add
jl
or
push
cld
xor
cmp
mov
bound
jge
cld
vpslld
bnd
xor
(bad)
sub
out
jae
(bad)
sub
cmps
out
dec
outs
lods
int
rcr
retf
cmps
push
lods
and
or
je
leave
xchg
test
outs
out
jnp
mov
xor
icebp
sti
icebp
jne
adc
or
push
je
ja
xor
sbb
inc
fidivr
cdq
bound
cli
pop
in
mov
fisub
es
inc
sti
jmp
sti
jno
mov
dec
es
mov
xchg
test
enter
adc
xchg
lock
mov
ds
pop
cmps
inc
pop
aad
movs
mov
jle
fnsave
add
(bad)
daa
jns
loope
(bad)
stos
cmp
jecxz
loope
test
out
xchg
xor
xchg
pop
mov
repnz
mov
or
inc
and
test
aaa
xor
mov
push
bound
test
outs
fdivrp
cmp
xchg
dec
or
cmp
push
stos
pop
inc
pop
inc
out
and
retf
fst
les
dec
and
(bad)
(bad)
test
sub
cmp
mov
aad
jmp
sahf
sub
xchg
sub
pop
ja
mov
mov
es
jno
adc
loop
aad
test
lock
add
pop
dec
jo
shl
imul
dec
aas
sub
mov
fld
jbe
outs
movs
xchg
(bad)
and
push
repnz
fcom
adc
ss
stc
push
and
shr
fdivr
stc
jl
dec
or
call
xchg
sbb
inc
dec
jle
mov
(bad)
and
int3
ror
std
loop
cmp
nop
xchg
mov
imul
xchg
lock
inc
dec
dec
jae
pop
int3
std
push
scas
lods
cmp
push
dec
pop
xchg
fcomp
inc
inc
dec
mov
add
out
adc
retf
fmul
and
inc
pop
xor
xor
ins
in
pop
aas
leave
out
cmp
lods
push
sub
scas
rcl
dec
inc
mov
xor
clc
hlt
popf
cmps
repnz
sub
call
fs
fistp
popa
jle
xchg
sti
jo
(bad)
xor
push
xchg
imul
cmp
arpl
cli
mov
scas
and
enter
xchg
sahf
push
je
stos
ds
push
in
outs
mov
in
xchg
call
nop
pop
push
inc
cmp
adc
cs
mov
adc
xchg
xchg
pop
mov
mov
fsubr
call
dec
or
out
shl
mov
xor
clc
dec
test
imul
dec
into
or
jno
cmc
cmp
pop
mul
jl
jb
es
jo
pusha
inc
pushf
sub
scas
lods
or
xor
inc
stos
jnp
jo
xchg
xor
cwde
loop
or
and
or
push
aam
jbe
in
lods
or
mov
icebp
or
xchg
pop
test
jns
sub
mov
rcl
(bad)
sbb
dec
sbb
and
ret
dec
push
mov
fst
xchg
rol
xchg
call
(bad)
int
inc
jae
int
adc
xor
lods
sbb
adc
cmp
scas
add
call
xchg
test
(bad)
cmps
rcl
cmp
sbb
icebp
fstp
push
mov
fs
jnp
fimul
inc
cmp
call
xchg
or
mov
cld
and
push
in
test
daa
pushf
push
rcr
xor
mov
rcl
daa
add
mov
xor
dec
into
repnz
jg
and
jne
pushf
xor
dec
push
sahf
std
js
and
xor
jmp
and
(bad)
lea
xchg
jbe
movs
das
call
ret
pop
in
repnz
dec
cld
pop
in
adc
push
popf
or
add
enter
dec
cmps
js
aam
repnz
fsub
and
gs
leave
inc
add
inc
int
std
out
icebp
es
stos
ror
fcmovb
pop
mov
mov
jne
cmp
fisubr
jb
inc
or
push
test
idiv
or
in
xor
lds
fcomp
adc
xchg
push
xor
pop
add
sub
mov
xchg
sbb
xchg
adc
test
popa
test
mov
out
lock
jns
pushf
jl
movs
mov
ret
imul
mov
mov
icebp
jo
sbb
fcomp
and
(bad)
out
pop
cmc
and
fs
dec
push
pop
xor
in
cli
add
and
loope
(bad)
mov
sub
imul
push
mov
pop
clc
retf
call
ret
push
cmp
mov
xchg
lods
add
sub
fidiv
scas
add
je
or
adc
std
shl
inc
movs
mov
in
push
mov
loop
cmp
outs
jl
ret
and
pop
jg
inc
adc
add
retf
jns
outs
xchg
or
fnstsw
loopne
xor
lahf
in
xlat
scas
(bad)
jecxz
mov
add
(bad)
push
xor
sbb
xor
ja
std
add
pop
loope
inc
mov
mov
fsubr
clc
xchg
xor
pusha
add
dec
or
mov
cmc
repnz
inc
shl
out
mov
scas
sbb
sub
or
iret
push
xor
fidivr
and
fnstenv
lock
mov
aaa
lahf
cli
lods
hlt
rcl
fild
in
icebp
ret
ins
nop
or
sub
mov
icebp
sub
xchg
fs
xor
scas
lods
je
inc
push
gs
aas
jne
test
pop
call
mov
push
retf
pushf
ret
scas
mov
ret
mov
icebp
into
and
jl
aad
adc
or
cmps
adc
push
xchg
add
sahf
cmp
popf
inc
jno
loop
sub
shl
test
movs
in
push
sub
es
pop
mov
push
cmp
xchg
cmps
dec
call
mov
inc
push
fdivr
adc
ins
sahf
dec
out
jo
mov
jb
out
pusha
mov
adc
inc
jmp
test
test
jmp
cli
mov
aas
xchg
call
xchg
data16
aaa
imul
out
pushf
and
test
pop
fnstsw
cli
ret
lods
xlat
fmul
iret
xor
fwait
js
lea
pop
leave
in
stc
pushf
enter
add
fild
aas
mov
lock
outs
xor
jbe
ins
lea
sbb
fild
ins
retf
jg
rol
xchg
in
js
pop
ror
push
mov
xchg
in
pop
mul
sub
push
inc
adc
rol
std
je
not
xchg
movs
jle
mov
ret
daa
sub
cmp
xchg
pop
pop
mov
jnp
mov
xor
adc
push
cmp
cmp
add
and
mov
stos
mov
jno
icebp
sbb
mov
rol
fwait
xchg
and
cmovl
sub
sbb
push
aas
fild
mov
jle
clc
pop
xor
cmc
fldenv
inc
fstp
mov
inc
jnp
(bad)
fmul
xor
xchg
jne
lods
sbb
mov
(bad)
jns
pop
movs
xchg
push
fiadd
cmp
mov
shl
adc
cmp
lahf
call
inc
sbb
jne
inc
mov
cs
ds
dec
push
dec
add
call
push
sub
dec
add
pop
xor
xor
mov
retf
stos
cmps
dec
dec
push
jo
test
loop
dec
jns
push
push
in
je
jg
dec
in
push
scas
loope
fldcw
in
sar
leave
nop
inc
call
sar
es
movs
inc
inc
mov
rcr
repnz
push
sti
movs
xchg
cs
xlat
rcl
adc
mov
mov
or
iret
rcr
inc
mov
mov
pop
pushf
outs
mov
pushf
arpl
pop
jmp
mov
aas
jo
mov
push
and
dec
pop
add
in
test
inc
jg
ins
in
mov
mov
push
inc
mov
arpl
pushf
leave
inc
sar
int3
clc
(bad)
xor
popf
push
jb
add
push
xor
dec
cmp
add
scas
sar
push
outs
add
add
xchg
cmps
adc
pop
and
leave
sti
push
inc
jg
fisttp
mov
adc
pop
push
pop
mov
lea
test
xchg
cld
(bad)
jmp
lahf
push
push
mov
push
call
jg
inc
add
frstor
jle
push
inc
cs
call
jmp
std
iret
mov
pop
sbb
jne
pusha
(bad)
and
nop
mov
pop
pop
adc
ins
jg
or
int3
jg
inc
repz
adc
dec
lds
arpl
std
ret
or
jmp
mov
xlat
(bad)
fbld
in
push
mov
int
add
arpl
ror
aad
ret
fdivp
sbb
int3
and
jb
sub
xchg
jl
rcr
daa
outs
mov
inc
jae
cmp
cdq
retf
out
gs
rcr
xor
les
sub
dec
imul
jnp
repz
cmp
sbb
cmps
adc
dec
dec
fcom
mov
mov
and
rcl
jo
pop
sahf
cli
cld
sbb
or
mov
repnz
xchg
sub
xor
adc
loopne
add
ds
jae
mov
lods
pop
mov
in
stos
rcl
mov
scas
cmp
mov
stos
shr
outs
mov
xchg
loope
(bad)
cld
dec
ins
popa
out
push
nop
jg
xor
shl
into
iret
sbb
aad
psrld
jl
and
mov
xchg
mov
sbb
ror
jmp
mov
popa
add
add
jmp
hlt
pop
mov
fbstp
bound
pop
dec
imul
fucomp
pop
dec
stos
fnstcw
outs
mov
in
(bad)
jl
leave
jne
or
les
xchg
into
imul
pop
xchg
mov
cdq
(bad)
(bad)
xchg
in
loope
jo
pop
xchg
pop
test
dec
sub
ret
loope
add
in
mov
push
xor
dec
test
mov
les
fwait
mov
mov
idiv
nop
lds
push
xor
adc
ficomp
and
stc
scas
push
xlat
xor
mov
enter
inc
test
mov
stos
lds
add
push
xchg
sbb
push
aad
es
cmp
sbb
pop
out
popf
add
scas
call
inc
outs
icebp
mov
icebp
scas
(bad)
outs
sub
sbb
jecxz
inc
stos
cwde
pop
mov
daa
fnsave
push
mov
jmp
or
push
cmp
data16
sub
fcmovnbe
shl
test
loope
add
push
loope
mov
mov
dec
ficom
ss
dec
loope
(bad)
push
stos
icebp
and
and
or
nop
imul
in
add
loopne
dec
push
in
add
int3
inc
mov
mov
mov
inc
outs
call
mov
fsubr
cmp
lds
push
mov
mov
and
mov
iret
cdq
repz
jo
pop
cmp
aad
out
or
std
outs
mov
ss
push
mov
das
cli
ss
nop
add
daa
into
das
movs
or
(bad)
pop
pop
lds
jecxz
out
mov
and
mov
fsubrp
mov
pop
shr
adc
fild
jmp
fsubp
sbb
repz
and
cmp
mov
std
jl
out
rcr
sub
loopne
pop
xor
adc
push
pop
loopne
imul
xchg
dec
popa
js
cmc
fwait
int3
out
jg
push
div
es
add
leave
push
cdq
mov
cmp
pusha
pop
gs
scas
(bad)
lods
outs
aam
bnd
adc
push
(bad)
mov
clc
leave
cdq
sub
xor
xor
xor
out
mov
fsubr
ss
xor
xchg
and
enter
ror
pop
push
sbb
dec
pop
and
push
(bad)
dec
call
xchg
jmp
hlt
pop
push
int
es
jg
xor
sti
cmps
dec
dec
mov
into
ja
ret
in
mov
mov
add
sub
push
lds
mov
mov
pop
rol
movs
packsswb
cwde
xor
ret
inc
jns
not
and
jl
fisub
ins
jnp
test
jns
mov
push
push
lock
pop
jl
push
retf
pop
shl
jge
sbb
bound
outs
dec
(bad)
pop
test
pop
sbb
cmp
inc
cwde
out
and
pop
inc
sbb
jge
and
pop
lods
inc
lods
retf
cmp
(bad)
jns
popa
not
inc
sbb
std
aaa
push
jmp
fidivr
imul
jbe
mov
pop
ja
mov
test
xchg
shr
mov
mov
in
ds
jne
fldlg2
or
sar
out
ja
retf
mov
xor
and
mov
fild
pop
test
div
outs
mov
sbb
popf
cmp
movs
(bad)
icebp
cmp
daa
sub
test
xor
movs
ret
imul
adc
dec
fsub
movs
mov
(bad)
into
stos
inc
jmp
popf
repz
ins
pop
pop
push
dec
je
lods
jle
or
nop
mov
mov
pop
mov
fs
sbb
xlat
das
xchg
xor
push
test
mov
or
ds
cdq
std
sbb
sub
pusha
jae
or
dec
adc
pop
mov
cmp
nop
mov
stc
adc
mov
in
mov
cmps
test
gs
push
mov
jp
dec
jne
shr
sub
test
loope
out
lods
push
inc
out
mov
pop
mov
adc
leave
pop
daa
shr
ins
sbb
and
jmp
retf
mov
pop
xor
and
add
sbb
pushf
jge
xor
stos
mov
jmp
test
rol
and
mov
stos
adc
std
test
int
jns
sub
xor
jecxz
(bad)
fwait
jmp
mov
fwait
inc
mul
inc
loop
push
pop
add
icebp
add
not
add
(bad)
pop
cs
repz
retf
in
adc
xchg
mov
aas
dec
jg
fidiv
xchg
je
data16
fidivr
shl
call
inc
div
mov
add
adc
mov
jmp
jp
(bad)
test
cmps
ins
dec
test
ins
out
mov
or
and
jmp
les
pop
js
mov
(bad)
retf
imul
mov
or
inc
pop
(bad)
xor
mov
xchg
shr
push
aas
les
test
jb
cmp
xor
lock
sahf
or
pop
shr
adc
fild
cmp
addr16
sub
mov
fistp
xor
pop
mov
ds
sub
daa
leave
lock
hlt
xchg
xor
es
mov
(bad)
lods
add
inc
in
mov
mov
imul
sub
mov
or
bound
sbb
lock
fistp
pop
pop
jp
xor
jbe
ror
jl
xor
xchg
inc
mov
loopne
sbb
push
cwde
pop
movs
call
outs
push
fmul
jb
mov
jl
push
mov
add
repz
mov
push
into
inc
dec
aas
sub
mov
fdiv
lahf
out
shr
pop
sub
test
lea
sub
sar
clc
loop
mov
or
in
test
call
fnstcw
jge
hlt
and
in
cmp
dec
fsub
cdq
mov
in
fcom
xchg
repz
xchg
adc
mov
test
add
rcl
inc
loop
jp
loope
mov
jae
adc
lahf
(bad)
xor
data16
pop
dec
jno
cli
pusha
movs
push
cmp
stc
test
jns
mov
dec
ins
pop
cli
or
pop
mov
outs
push
inc
fsubr
ins
fadd
cmps
inc
enter
cmp
into
fstp
cmp
inc
jns
xchg
shr
fs
xlat
call
dec
in
or
adc
xor
jp
xchg
add
xor
into
mov
inc
push
sbb
push
xlat
scas
push
inc
ss
jo
int
ins
icebp
dec
fild
shl
push
inc
ins
mov
inc
inc
dec
or
and
loope
adc
inc
icebp
push
jle
stos
mov
push
jne
sub
ret
ror
pop
pushf
push
push
shr
fwait
iret
shl
psraw
push
out
ds
jge
shl
xchg
enter
loopne
popa
clc
in
pop
inc
shl
cmps
mov
fst
dec
push
adc
mov
addr16
stos
pop
or
cs
shl
hlt
add
cs
aam
cmp
imul
push
sub
and
div
leave
xchg
gs
test
mov
cli
idiv
imul
add
call
pop
add
adc
add
pop
jmp
dec
mov
(bad)
xlat
call
pushf
ins
cmp
or
jns
xchg
cmc
aaa
scas
mov
cs
popf
pop
mov
xchg
loopne
outs
jnp
ja
add
adc
scas
in
jp
int3
std
pop
movs
fsqrt
xchg
aaa
jl
dec
sub
cli
inc
cmc
jg
out
mov
in
ffreep
call
add
retf
cmp
popf
sub
(bad)
pop
sti
dec
ja
int
(bad)
xchg
cmp
ffree
fwait
shr
fnstsw
lea
aaa
inc
rcl
lock
stos
div
sub
jmp
and
dec
aad
iret
cmp
mov
into
cwde
ficomp
cmp
jnp
iret
sub
inc
out
push
fisttp
rcl
xchg
ss
gs
ret
popf
(bad)
dec
setae
or
je
fdivrp
fbld
pushw
adc
sar
xchg
std
mov
les
lods
pop
jmp
in
inc
mov
repz
out
pushf
xchg
push
retf
fadd
repz
mov
sti
mov
adc
enter
sbb
iret
cmps
(bad)
aad
adc
dec
fnstcw
inc
retf
xchg
push
inc
dec
jnp
inc
adc
sub
cs
dec
in
test
mov
xchg
dec
cld
jbe
add
push
pop
out
mov
pop
dec
push
dec
sub
lea
and
pop
xchg
inc
mov
or
jg
test
sub
mov
push
sub
mov
lock
cli
cmp
arpl
sub
mov
cmps
adc
lods
js
sbb
sub
sub
dec
dec
sbb
das
sub
pop
std
push
mov
xchg
sti
cmp
popa
es
push
cmp
arpl
inc
adc
repnz
jae
or
xor
test
aaa
mov
add
out
out
imul
xor
or
(bad)
movs
idiv
xchg
rol
mov
bound
rcr
scas
sub
push
cmp
(bad)
(bad)
push
mov
inc
sar
out
sbb
retf
pop
sar
xor
in
movs
mov
loope
rcl
jbe
or
jecxz
push
call
std
sub
imul
iret
dec
xchg
dec
fdivr
mov
shl
mov
(bad)
adc
cmp
out
fwait
nop
mov
out
movs
in
and
pop
xchg
aam
sub
xchg
inc
lds
leave
xchg
push
lahf
adc
add
or
cmc
test
sub
hlt
(bad)
push
inc
adc
stc
cmp
lldt
imul
aad
dec
div
mov
test
adc
inc
jmp
int3
dec
pop
mov
fisttp
mov
movs
pop
xlat
xchg
lods
test
jns
mov
mov
push
mov
push
and
sub
pop
daa
hlt
pop
dec
retf
loop
adc
jae
dec
sub
loope
or
sub
cmp
(bad)
pushf
jae
xchg
movs
(bad)
xchg
xchg
xor
cmpxchg
sbb
xor
movs
comiss
push
das
sbb
sbb
pop
in
les
leave
retf
stos
push
rol
stc
mov
test
test
dec
mov
xor
mov
adc
pop
fld
xor
mov
pop
daa
or
add
sbb
aaa
xor
jmp
(bad)
mov
xchg
push
jbe
add
cmp
dec
xchg
out
in
sbb
pop
lea
and
pushf
shr
dec
rcr
(bad)
inc
aas
movs
xchg
in
rol
repnz
fild
cmp
jle
adc
jne
outs
int3
xor
popf
push
int3
pop
js
in
mov
cmp
in
and
adc
aaa
cdq
icebp
out
loope
inc
xchg
dec
in
push
pop
dec
mov
pop
fstp
and
inc
inc
pushf
add
jbe
mov
pusha
push
push
add
retf
mov
stos
jae
pop
inc
push
bnd
pop
pop
mov
sub
fdiv
sub
aaa
out
repnz
shl
rcl
dec
sbb
and
test
mov
fidivr
mov
jbe
or
cmc
arpl
push
mov
cmps
xchg
jns
sahf
cmp
cmp
xor
mov
adc
mov
mov
mov
jae
fist
(bad)
or
sbb
fsubr
mov
dec
in
pop
inc
(bad)
in
(bad)
mov
ins
les
jae
rcl
or
(bad)
inc
es
hlt
stc
jbe
xor
push
cmp
xor
jo
pushf
jo
outs
mov
call
out
xchg
push
loop
(bad)
jb
push
jmp
cmp
pop
jne
div
jp
psrad
sbb
cmp
loopne
mov
dec
dec
nop
jle
pop
sar
out
xchg
mov
ins
mov
mov
aas
fs
jmp
xchg
mov
xchg
enter
or
test
and
rcl
pop
adc
cld
nop
out
lock
stos
jg
pusha
adc
xchg
sub
inc
(bad)
das
retf
add
lock
xchg
sti
outs
cmps
mov
sub
sbb
push
sahf
pop
imul
cmp
push
inc
loop
(bad)
call
sub
cmp
mov
sbb
rol
in
dec
outs
fwait
stos
xchg
mov
fs
cs
xor
hlt
mov
sbb
js
(bad)
pop
and
push
inc
add
std
sub
add
push
mov
push
stos
dec
fidivr
jp
mov
or
jmp
gs
jl
or
dec
pushf
cmp
(bad)
fstp
enter
jnp
addr16
shr
out
xchg
lods
retf
sub
jnp
hlt
pop
xor
mov
mov
fnstcw
push
mov
add
aas
dec
leave
movs
out
mov
ret
loope
push
shl
mov
add
fstp
leave
movs
or
mov
jmp
cmp
xchg
repnz
jecxz
or
aas
pop
addr16
mov
ffree
sbb
outs
jne
mov
and
mov
neg
fdivrp
inc
outs
mov
test
pusha
mov
jl
das
push
ins
adc
repnz
pop
pop
mov
adc
dec
sbb
addr16
adc
mov
gs
movs
mov
test
es
ror
cld
mov
dec
adc
cmps
jecxz
stos
jb
shl
rcr
call
xchg
gs
sbb
out
ins
idiv
sub
inc
ja
out
xchg
sar
xchg
daa
movs
test
mov
ja
xchg
cld
mov
int
fstp
mov
clc
sbb
add
push
addr16
nop
sahf
push
and
in
ja
sbb
pop
loope
dec
shr
xor
mov
enter
call
inc
xor
(bad)
cld
mov
ins
aas
push
mov
fcom
sbb
outs
ins
dec
div
or
adc
imul
xchg
and
cs
mov
cmc
xchg
mov
cmc
stos
ja
jg
retf
popf
mov
mov
pop
adc
pop
cmp
addr16
xchg
mov
dec
fsubr
(bad)
clc
jno
inc
jle
sti
pop
in
and
(bad)
lock
cmp
push
daa
dec
fbstp
lds
cmps
arpl
pop
popf
push
enter
ficomp
and
shr
sbb
mov
popa
push
xchg
inc
and
outs
dec
add
into
repnz
sbb
inc
jge
ins
rcl
fisttp
mov
fstp
pop
mov
or
mov
data16
lock
aaa
xchg
sbb
mov
addr16
jmp
fiadd
retf
adc
mov
xlat
or
pop
sub
mov
inc
mov
pop
jae
inc
rcl
mov
add
add
jno
mov
xchg
imul
dec
pop
jmp
out
jbe
push
in
mov
and
mov
mov
push
dec
and
add
xor
mov
clc
cdq
out
cmp
mov
sub
or
lea
lods
and
fldcw
fst
mov
or
xor
gs
xchg
out
loop
imul
mov
test
and
xchg
dec
and
pop
mov
lods
xchg
xor
jl
out
mov
in
outs
xchg
pop
jge
xor
ds
sub
fwait
adc
and
push
add
mov
mov
mov
(bad)
sub
stos
cmc
scas
jb
sub
es
je
and
ror
push
mov
dec
ss
es
jo
lods
cdq
icebp
call
retf
push
push
test
add
add
dec
ja
ds
lahf
fisttp
cmps
leave
inc
or
inc
fwait
popf
out
iret
sbb
in
push
addr16
shl
sbb
rol
pop
out
mov
repz
shr
nop
inc
ret
retf
mov
jle
out
xchg
inc
push
push
or
mov
or
stos
sub
mov
repnz
push
scas
mov
fcom
lock
(bad)
or
mov
fcompp
ins
(bad)
daa
fild
mov
add
fcmovnb
sub
push
inc
(bad)
cmp
inc
or
push
push
call
and
imul
leave
lahf
jg
mul
jnp
ins
jne
pop
repnz
xchg
and
jmp
lods
jne
fdiv
jnp
std
cld
hlt
idiv
jmp
dec
ret
dec
dec
add
push
sub
fdivp
push
loopne
mov
lods
fisttp
popa
cmp
jbe
mov
and
or
shr
sub
push
mov
stos
clc
outs
push
jge
call
xchg
sub
test
mov
loopne
in
push
enter
out
mov
imul
dec
cmps
lea
dec
push
dec
and
pop
sub
mov
imul
jecxz
mov
aaa
pushf
lods
inc
pop
stc
aas
call
test
push
fld
addr16
loope
aaa
adc
(bad)
jmp
in
xor
push
adc
mov
and
sbb
cld
mov
mov
ds
sbb
xor
out
fs
push
ret
hlt
aad
sar
mov
pop
lods
jmp
cmp
mov
test
fprem1
hlt
movs
xor
or
sub
scas
jl
or
mov
popf
sbb
mov
add
jbe
pop
cmp
inc
add
loope
jo
push
jns
popf
jno
cmp
fwait
jns
out
cmc
int3
in
push
pop
cmc
fst
ret
xor
sub
adc
cld
mov
lds
jg
mov
cmp
fistp
mov
xlat
inc
aam
lods
jmp
mov
mov
jmp
loopne
out
push
fadd
out
int3
data16
ss
aas
pop
dec
add
in
aaa
sub
xor
lock
pop
test
mov
scas
lock
cmp
stos
or
xchg
in
jns
pop
fwait
popa
ds
mov
ret
sub
dec
aas
xor
push
lea
sbb
inc
je
leave
lahf
jp
cmp
in
inc
sub
ds
xchg
lea
fyl2x
jb
and
div
inc
push
and
mov
ins
xor
or
ror
lds
ficom
lea
push
xlat
loope
add
cwde
fnsave
or
ret
pop
push
imul
mov
mov
rol
pop
ficomp
inc
imul
movs
cld
fs
dec
arpl
and
test
adc
nop
or
popf
fcom
das
movs
mov
xchg
inc
and
push
movs
mov
inc
xchg
test
sbb
inc
(bad)
(bad)
mov
in
dec
(bad)
aas
fnstsw
mov
mov
jnp
mov
sbb
(bad)
push
vaddsd
xor
fs
aaa
rol
xchg
xchg
test
or
push
inc
lds
jnp
hlt
cmps
inc
(bad)
xor
fs
push
dec
into
sub
pop
mov
movs
sub
movs
jp
and
add
stos
jb
aam
sub
mov
cwde
outs
int3
fimul
adc
dec
jp
add
add
ins
inc
(bad)
pop
loopne
fsub
xor
repnz
pop
pop
ficom
call
pop
adc
sbb
jecxz
aad
stos
push
push
sahf
add
mov
mov
sub
mov
call
outs
jge
xor
inc
dec
repz
(bad)
mov
pop
dec
lds
test
inc
pop
xchg
or
dec
jl
add
or
fisub
(bad)
outs
out
xchg
push
test
sub
mov
std
clc
cld
dec
fisttp
xor
jmp
xchg
dec
call
add
sub
inc
dec
add
into
add
outs
(bad)
cmp
mov
jl
retf
and
or
cmp
outs
sub
cmp
scas
and
fild
pop
retf
test
xchg
bound
(bad)
jbe
xchg
inc
sbb
mov
daa
fild
mov
inc
pop
arpl
(bad)
xchg
push
xor
mov
jo
and
call
js
or
leave
sbb
mov
stos
sub
and
ja
push
mov
(bad)
clc
sbb
movs
sbb
sahf
int3
jns
jl
inc
cmc
jle
and
pop
push
shr
cmp
push
sub
cmp
mov
cmc
adc
stos
mov
add
jge
les
int3
sub
jecxz
xor
int
xchg
push
inc
xor
sub
(bad)
movs
xchg
add
sbb
inc
std
push
sti
outs
mov
push
ret
dec
and
inc
inc
mov
xchg
xor
scas
cmp
xlat
or
push
pop
nop
js
arpl
xchg
jns
es
pop
xchg
jb
xchg
jmp
retf
push
add
mov
mov
jns
rol
mov
loopne
sub
sub
dec
cld
out
rcr
mov
dec
mov
inc
fcomp
std
lods
in
leave
data16
int
jecxz
inc
icebp
adc
clc
fstp
adc
xor
js
lahf
push
add
das
rcr
mov
(bad)
dec
sbb
repz
inc
lds
pinsrw
or
(bad)
lock
fmul
mov
xchg
xlat
fst
repnz
sti
mov
scas
addr16
cmc
in
push
fild
xchg
xor
inc
pushf
into
les
and
push
push
cld
ror
pop
inc
pop
push
sbb
(bad)
outs
scas
imul
in
xlat
scas
popa
scas
loope
cmp
add
adc
mov
xor
dec
movs
cdq
pop
jo
xchg
mov
iret
push
aas
mov
inc
adc
(bad)
and
ja
inc
ficomp
lahf
pushf
lods
push
pop
ficom
icebp
stos
cwde
push
mov
dec
sbb
and
adc
pushf
sub
(bad)
mov
(bad)
(bad)
stos
push
mov
fadd
push
je
pop
sbb
movs
xor
sahf
rol
xlat
js
shr
pop
push
rcl
js
push
push
das
jle
out
je
fsubr
rol
dec
inc
scas
(bad)
push
out
dec
push
pop
movs
cmp
imul
not
or
mov
pop
fcomp
(bad)
in
mov
ss
pop
or
xor
dec
loop
push
add
movs
fwait
out
aad
test
lods
ror
mov
jno
dec
fldcw
outs
(bad)
data16
jae
pop
stos
pop
aad
jp
jmp
pop
jge
mov
es
push
push
(bad)
push
mov
push
add
add
lods
imul
mov
jnp
frstor
call
pop
nop
retf
ds
ja
(bad)
mov
inc
cmp
push
mov
nop
pop
add
push
aaa
add
sub
mov
xor
ror
lods
stos
xchg
sahf
push
out
mov
inc
test
sbb
fbstp
or
sub
lahf
pop
xchg
dec
inc
cwde
imul
cmps
mov
addr16
mov
mov
inc
sti
xchg
loop
mov
scas
nop
gs
add
xor
lahf
imul
cmps
push
xor
mov
inc
ins
inc
cmp
or
sbb
dec
in
shr
arpl
ins
mov
repnz
out
cmp
pop
and
(bad)
jmp
pop
dec
and
in
les
repz
test
fisubr
int3
rcl
cdq
xchg
test
ss
fild
cmps
shr
add
popf
add
adc
mov
mov
rol
and
jbe
and
dec
cmp
sbb
jb
fcom
jnp
fcom
nop
dec
pop
xor
addr16
jmp
cmp
push
xchg
adc
stos
stos
cs
xor
pop
xor
push
fidivr
retf
arpl
cmp
popa
or
bound
sub
sub
sbb
iret
mov
xor
mov
test
pop
repz
mov
popa
dec
test
sub
push
pop
adc
push
div
pop
enter
mov
in
or
push
fidivr
in
or
test
jmp
cli
movs
jle
iret
repnz
neg
cmp
repz
xchg
mov
mov
lods
ret
mov
sbb
push
dec
movs
add
inc
and
in
lds
sahf
popa
jnp
mov
fwait
add
and
repz
or
cmp
les
ret
addr16
(bad)
inc
in
adc
(bad)
std
dec
sbb
mov
clc
outs
pop
sub
(bad)
cmc
pop
out
fnstenv
aas
shl
cs
sbb
movs
outs
stos
setne
and
mov
shl
out
mov
cmp
add
in
mov
push
sbb
popf
ss
aam
dec
sti
rcr
add
dec
movs
fiadd
jmp
inc
jbe
mov
retf
push
ins
sub
les
and
shl
out
and
mov
xchg
pop
inc
xor
test
test
pushf
cmp
out
fcmovnb
jnp
les
dec
int
stc
adc
retf
xchg
iret
push
test
arpl
loope
mov
dec
or
jno
xchg
sbb
jnp
xchg
and
stos
icebp
or
sub
addr16
(bad)
mov
push
in
mov
lahf
pop
popf
add
pop
xchg
sbb
lods
popa
mov
ins
mov
repnz
inc
pop
lods
add
push
ror
fiadd
hlt
xchg
push
cwde
sub
mov
fisubr
add
nop
jmp
mov
pop
mov
lock
push
lods
std
outs
rcl
mov
(bad)
jg
dec
(bad)
pop
mov
jle
mov
cli
aad
sbb
sar
adc
mov
ds
cdq
fadd
adc
shl
or
and
test
popa
scas
xor
test
sbb
xor
lds
fdivr
add
test
mov
ret
adc
or
fld
aad
xchg
pop
jg
or
icebp
call
adc
test
jns
aad
mov
inc
inc
mov
dec
mov
xchg
mov
and
dec
dec
push
mov
inc
or
fst
sti
pushf
mov
cli
cmp
lds
push
inc
pop
clc
or
jno
sub
or
sahf
or
lea
arpl
and
adc
fild
adc
cmp
adc
mov
mov
mov
xor
xor
std
sub
imul
cli
xchg
pop
xlat
repz
sub
push
or
pop
push
cmp
rol
add
inc
cli
pusha
dec
dec
mov
or
cmc
fisttp
retf
add
out
adc
pusha
loope
xor
in
cli
push
movs
in
jle
fisubr
mov
out
jp
xor
hlt
push
adc
in
and
adc
xor
push
outs
in
iret
arpl
adc
sub
lahf
(bad)
in
ds
mov
xor
bound
cmp
imul
pop
and
leave
mov
repz
cwde
adc
push
jnp
outs
ins
mov
lahf
dec
fucomi
mov
iret
mov
test
aam
mov
jge
cmp
sbb
mov
arpl
pop
cmc
adc
cmps
mov
push
packsswb
into
inc
enter
addr16
inc
shr
cmp
fnstcw
push
sub
cli
clc
pop
data16
mov
push
leave
(bad)
adc
jno
imul
inc
shr
retf
xchg
adc
xor
mov
push
push
xchg
xchg
cwde
pop
xchg
repnz
push
pop
and
popf
out
in
mov
icebp
aas
and
cmp
inc
jb
push
movs
add
mov
xor
jle
test
outs
mov
mov
je
cmp
imul
xchg
sahf
cld
shl
and
push
and
xor
adc
inc
lods
push
out
hlt
rcr
shl
pop
das
xchg
loope
or
ja
pop
daa
dec
push
mov
fs
add
xchg
fwait
dec
inc
mov
sti
cmc
pusha
test
xor
out
xchg
mov
ret
sahf
mov
mov
cmp
xor
lea
push
mov
outs
fnstsw
push
imul
rol
pop
lods
dec
and
sti
dec
add
push
sbb
ja
fstp
push
sub
inc
push
nop
rol
dec
mov
in
mov
test
out
mov
int3
inc
sbb
pop
dec
dec
fdivr
movs
jecxz
imul
stos
mov
jns
pushf
add
push
lea
adc
stos
sbb
push
data16
ja
mov
les
or
mov
lods
imul
pop
cli
test
cmp
or
jmp
jnp
shl
add
call
fisttp
xchg
call
icebp
mov
and
dec
jns
ficomp
rcl
cmp
call
mov
pushf
scas
mov
cmp
cmp
mul
mov
jl
leave
push
in
inc
mov
call
cli
loop
inc
pop
(bad)
aaa
inc
cmp
mov
loopne
and
in
inc
xlat
cmp
inc
inc
jmp
jecxz
sbb
xor
les
pop
int
xchg
dec
popf
daa
mov
js
mov
push
adc
scas
cmp
and
retf
sbb
loopne
jne
(bad)
movs
jnp
cwde
retf
mov
in
mov
out
cmp
loope
inc
in
mov
leave
pop
not
jnp
mov
scas
or
dec
in
dec
xor
push
mov
jne
or
aad
or
stc
repnz
ret
pop
jne
ja
mov
stc
bound
dec
mov
out
cli
or
or
outs
sbb
repnz
cmc
lods
jl
leave
sahf
rcr
mov
inc
fdivr
xrelease
add
in
call
jnp
push
sub
aad
xor
cli
sbb
adc
mov
mov
xor
pop
adc
dec
adc
je
dec
add
je
or
ja
and
cwde
icebp
lea
(bad)
outs
jecxz
shr
in
(bad)
cli
cmc
fs
popf
pusha
sbb
aad
test
cld
mov
retf
jmp
lods
fwait
aas
xchg
jp
into
xchg
sub
into
sti
xchg
xchg
int3
cmp
mov
and
adc
enter
adc
in
pushf
std
mov
daa
sub
xlat
push
pop
xor
sar
sub
mov
aaa
shl
pop
mov
xchg
nop
sbb
mov
xchg
scas
inc
push
jp
xchg
aaa
loopne
dec
pop
int
fdivr
jb
fdivrp
xor
jmp
lahf
push
mov
adc
xchg
ja
cmp
int
inc
stos
mov
stc
and
mov
push
shl
bound
push
pop
sub
sub
sti
jno
in
unpcklps
jmp
aad
mov
sub
jae
ret
ins
push
aad
or
inc
pop
cs
cdq
outs
fdiv
fs
out
movs
icebp
int3
movs
imul
or
(bad)
outs
adc
mov
mov
movs
inc
mov
xor
sbb
ror
scas
adc
jg
fdiv
jnp
and
hlt
push
fisubr
cs
les
ins
add
pop
lds
imul
pop
push
mov
xor
pop
test
xor
mov
popa
push
push
cmp
fist
lock
and
test
fs
cli
cdq
push
sar
pop
imul
(bad)
fisttp
ret
push
rcr
ror
aas
fsub
out
xlat
sbb
sbb
push
jmp
cmp
push
addr16
pop
popa
add
jge
iret
mov
enter
sub
jg
(bad)
sub
lahf
mov
push
(bad)
or
aad
nop
test
add
in
sub
jae
xchg
es
arpl
sbb
and
stos
stos
inc
push
ins
cli
sbb
or
cdq
adc
arpl
mov
add
jo
jmp
jb
(bad)
jmp
pop
rcr
lock
repnz
ror
xor
cmp
movs
test
fbld
in
js
retf
xlat
dec
stos
and
test
lea
inc
das
in
out
xor
or
pop
arpl
adc
push
pop
in
stos
fldenv
jae
sbb
inc
ds
ficomp
xlat
cs
or
xor
sub
retf
jo
adc
cmc
mov
and
xor
outs
cmc
out
iret
(bad)
loopne
loope
pop
adc
movs
sahf
pmullw
imul
push
mov
sar
mov
sub
jmp
outs
sbb
in
adc
jne
out
das
cmps
sbb
cmp
adc
or
call
out
fsub
loopne
in
push
ss
test
lods
in
push
and
fwait
cmps
push
add
jmp
(bad)
mov
sub
inc
mov
(bad)
xor
sub
cmp
in
jl
mov
stc
fdivr
sbb
push
rcr
xor
or
cs
aad
outs
push
iret
inc
aas
ret
jl
stc
iret
and
sbb
ret
xor
xchg
sub
out
pop
adc
sub
imul
fld
push
sbb
mov
imul
fsubr
push
pop
xchg
in
inc
addr16
jg
mov
jl
in
push
jp
or
inc
scas
and
gs
sub
les
push
jmp
rcr
dec
pop
lahf
sub
enter
in
inc
inc
ret
mov
pop
sub
sub
mov
popa
xchg
mov
mov
adc
dec
inc
and
addr16
cmp
pop
addr16
push
sub
push
pusha
pusha
test
retf
std
mov
adc
mov
mov
push
es
push
jo
fcmovne
fisttp
repnz
mov
fs
mov
loopne
popf
adc
inc
add
arpl
jmp
mov
test
or
in
pop
sub
mov
lods
sbb
push
imul
dec
icebp
mov
mov
mov
cmp
mov
xchg
movs
jb
jg
sbb
sahf
mov
call
mov
ins
clc
jne
pop
push
cli
mov
adc
xor
push
inc
popa
inc
mov
adc
rol
dec
adc
cs
movs
adc
shl
inc
add
xchg
sub
or
mov
arpl
add
pop
xchg
and
int
and
aas
cmc
adc
dec
and
or
stc
jnp
cmp
jo
push
cmp
mov
cdq
adc
out
push
xchg
mov
dec
and
in
mov
jmp
cmp
fisubr
xchg
lods
cmp
in
dec
fstp
div
icebp
inc
mov
cmp
ds
xor
iret
cs
inc
retf
aaa
daa
sti
or
adc
rol
sbb
loopne
imul
retf
cmp
mov
repz
test
gs
xor
cld
in
push
repnz
int
push
imul
sbb
or
cmp
in
cmp
pop
dec
not
shr
adc
add
js
adc
xchg
xor
xchg
pop
xor
cmp
jne
aas
pop
mov
cmp
mov
push
jbe
xchg
sub
cmp
jbe
shl
xchg
rol
mov
xchg
rcl
add
call
cli
movs
sub
repz
leave
lahf
ja
popf
clc
or
sbb
sub
les
(bad)
idiv
and
aaa
push
xchg
jge
sub
jg
cmp
pushf
hlt
push
cmps
xor
pop
retf
and
mov
mov
and
or
sbb
push
in
push
out
sub
fadd
mov
repz
pushf
cmp
xchg
dec
jb
mov
push
ja
(bad)
pusha
push
jg
fwait
lods
inc
inc
inc
sbb
je
pop
mov
sbb
fld
div
cmp
inc
fs
out
jo
push
push
leave
and
ja
dec
pop
and
cmp
xchg
pop
adc
add
sahf
jo
out
xchg
pop
and
xchg
loop
inc
mov
call
adc
bnd
jecxz
(bad)
jl
xchg
out
out
sbb
repz
les
sub
pop
sbb
pop
stc
xor
bound
(bad)
aas
(bad)
out
dec
mov
(bad)
bound
mov
rol
dec
repz
ja
xchg
xchg
icebp
xlat
icebp
ret
dec
cmc
mov
sub
popa
xor
aaa
fimul
rol
fadd
jge
dec
cmp
ficom
test
ja
adc
pop
jmp
pop
push
xchg
aad
es
or
dec
adc
ja
hlt
lahf
popa
mov
adc
push
fcmovbe
(bad)
adc
(bad)
mov
push
xor
mov
mov
and
jne
add
xor
call
imul
mov
sbb
out
add
rcr
or
arpl
inc
stos
push
xchg
xor
int
sbb
cdq
jmp
in
int
pop
(bad)
pop
push
or
div
xor
lock
and
xchg
xchg
scas
mov
nop
out
data16
cmp
imul
mov
xor
ror
push
xchg
repz
(bad)
in
dec
or
mov
xor
inc
or
call
lods
cmps
loopne
mov
loop
pop
push
stos
pop
cmp
push
mov
pop
pop
push
mov
mov
int3
fistp
int
mov
stc
dec
inc
imul
sbb
cmp
retf
test
into
pusha
mov
adc
or
popw
lock
(bad)
and
pop
iret
ret
pop
shl
push
pusha
(bad)
sub
clc
popf
arpl
inc
and
xor
mov
inc
adc
jecxz
mov
fucom
bound
push
inc
jbe
push
jb
pop
mov
push
mov
imul
loop
pushf
icebp
mov
cmps
pop
enter
ss
mov
pushf
mov
pop
aas
jl
push
fsub
cmp
jno
lea
retf
jp
inc
jle
test
xor
dec
adc
dec
fs
ja
cmp
mov
sub
call
mov
aaa
hlt
xor
pop
mov
stos
cmp
push
pop
iret
and
push
shr
popf
(bad)
mov
dec
sbb
movs
loop
test
(bad)
xchg
add
dec
jb
cli
mov
xchg
or
mov
cmp
mov
sub
sbb
add
shl
mov
fdivr
cmc
ss
or
xchg
mov
and
push
popa
pop
mov
pop
in
pop
enter
xchg
xor
jo
inc
and
mov
add
xchg
jg
push
in
movs
pop
pushf
rcr
push
cmp
lea
xchg
imul
cmp
and
and
cmps
in
push
arpl
adc
pop
dec
xor
push
addr16
fucomp
outs
movs
stos
add
in
add
xchg
push
jae
hlt
aad
cld
push
into
push
mov
cmps
pop
push
clc
push
adc
aam
out
jmp
cs
dec
(bad)
cmp
sub
test
out
pop
xor
mov
push
mov
cdq
(bad)
pop
jne
into
pop
mov
push
into
cmps
aas
and
inc
retf
inc
jge
push
mov
enter
pop
inc
xor
fcom
fst
lods
push
in
push
push
xor
and
rcr
pusha
shr
in
jp
cmp
aas
push
ret
fwait
pop
dec
xor
jb
dec
xchg
push
push
inc
pop
mov
sub
ret
sbb
fstp
fisubr
leave
std
add
or
in
cld
add
cmp
test
ret
sub
in
clc
pop
mov
sahf
dec
movs
jbe
ret
imul
ficomp
cmps
shl
adc
lea
pop
(bad)
into
test
loope
xchg
sbb
cmp
or
sti
jns
out
sub
pop
mov
lds
dec
mov
mov
fild
adc
sub
jg
clc
jno
mov
push
cmp
loopne
rcr
or
es
clc
jne
xchg
imul
in
ins
jnp
jae
hlt
mov
imul
aas
clc
sub
mov
push
call
or
mov
movs
mov
push
pop
adc
inc
push
or
push
jb
mov
adc
push
pop
xlat
dec
xor
stos
lock
cmp
ins
rcr
mov
xor
fdecstp
movs
inc
push
out
lods
mov
and
adc
inc
push
push
or
test
mov
(bad)
mov
mov
or
sub
inc
pushf
scas
xchg
lock
shr
sar
dec
xlat
(bad)
jno
retf
push
out
cmp
cmps
jbe
pop
and
cld
mov
mov
jl
das
loopne
lods
(bad)
push
jmp
setge
mov
retf
icebp
mov
inc
cmc
ficom
mov
mov
rcl
push
push
mov
into
xor
pop
lahf
ud0
ret
dec
or
mov
mov
inc
xchg
mov
mov
imul
or
jp
ror
popa
adc
movs
cmp
jp
stos
in
xor
and
add
out
out
inc
and
cdq
and
cli
xchg
xchg
or
call
xchg
(bad)
push
popf
call
xchg
adc
in
das
jb
es
push
hlt
cmps
jmp
aam
jmp
pop
cmps
adc
cmps
sub
mov
pusha
jle
cld
pop
loope
aaa
popf
in
xor
fwait
push
or
(bad)
mov
pop
hlt
jbe
pop
mov
or
mov
outs
sar
enter
sbb
sub
xor
into
push
mov
mov
outs
gs
daa
sub
fstp
retf
xor
inc
and
mov
loope
stos
and
push
aas
aaa
xchg
dec
dec
in
or
jmp
jmp
dec
dec
jp
inc
mov
jmp
loopne
test
dec
dec
mov
scas
out
out
xchg
push
in
mov
ja
jno
in
fcom
dec
fisub
fst
cmovae
mov
mov
mov
bound
pop
mov
repnz
shl
icebp
sahf
ss
daa
jecxz
outs
adc
sbb
inc
jb
mov
outs
lods
mov
ret
repz
ins
js
loopne
or
jge
mov
dec
iret
cli
imul
stos
cld
sbb
pop
dec
out
arpl
add
mov
int3
cmc
mov
(bad)
imul
jmp
pop
xchg
cld
das
mov
pop
cdq
adc
cwde
sub
mov
jno
add
jno
pop
cs
das
fldcw
aam
add
psllw
xchg
adc
cld
mov
mov
imul
cmp
out
and
cmps
in
sub
aaa
sbb
jno
or
or
xchg
push
gs
daa
lds
fidiv
mov
jne
sbb
ins
add
popf
sbb
mov
mov
stc
xchg
inc
mov
ficomp
mov
js
dec
mov
mov
or
adc
xor
adc
or
js
xchg
sahf
xchg
sub
xchg
jnp
cli
cmp
dec
mov
xor
sar
pop
mov
push
sub
mov
out
dec
dec
add
cmp
cmp
outs
(bad)
lahf
add
lds
test
fldenv
bound
stos
xchg
into
ins
sbb
mov
in
mov
adc
dec
cmps
mov
pop
loope
stos
adc
adc
or
cs
fdiv
cmp
jge
dec
imul
jae
jmp
in
mov
shl
enter
sbb
sub
jmp
popa
ror
ins
scas
push
push
add
and
push
adc
cmps
adc
int3
sahf
stc
mov
nop
mov
mov
fisttp
and
jg
adc
enter
(bad)
cdq
pop
es
test
mov
or
cdq
(bad)
mov
adc
cmps
mov
(bad)
and
dec
iret
mov
mov
arpl
mov
jb
inc
ins
addr16
inc
xchg
aaa
xchg
imul
inc
stos
push
cmp
outs
jne
mov
repz
fistp
xchg
dec
sbb
push
xor
leave
int
sbb
push
stos
and
pop
fwait
jo
pop
in
mov
ficomp
and
pop
call
ja
inc
lods
push
test
mov
jno
scas
and
and
mov
push
(bad)
fldenv
lods
cmp
imul
movs
test
jbe
ins
mov
and
stos
pusha
nop
cmc
push
sbb
lahf
dec
sbb
sar
repz
test
repz
sub
xchg
fdivrp
mov
fldcw
jle
sbb
mov
fild
mov
pop
pop
daa
cmp
retf
xlat
mov
aaa
lods
adc
lods
ret
sub
adc
pop
pop
xchg
sbb
sti
mov
fs
mov
xchg
(bad)
sbb
dec
rcr
jge
hlt
cmc
cmp
and
sbb
in
ins
(bad)
fstp
in
into
movs
arpl
cdq
icebp
cmp
jne
movs
arpl
in
les
xlat
repnz
xor
xchg
rcl
or
adc
mov
out
mov
ret
xor
jmp
mov
imul
aaa
mov
cmp
or
inc
cmps
cmp
inc
dec
sub
cdq
push
fwait
int3
stos
push
or
inc
out
add
inc
aas
inc
inc
xor
aaa
xchg
ror
ss
lahf
mov
sub
jmp
ins
imul
and
sbb
xor
into
mov
hlt
pop
(bad)
push
cmp
sbb
test
js
mov
dec
aam
push
ja
pop
stc
outs
xor
popf
aam
shufps
mov
jmp
pop
into
mov
cli
jnp
jmp
(bad)
imul
pop
ret
cmp
les
pop
scas
imul
jmp
cli
sbb
xchg
push
(bad)
sti
sbb
push
(bad)
lock
inc
add
cld
shr
fcmovu
out
pop
(bad)
icebp
cwde
jmp
jge
icebp
dec
jecxz
lsl
mov
daa
xor
clc
inc
mov
out
jp
sbb
mov
pop
xor
rcl
jo
mov
clc
sbb
out
test
fwait
lock
push
mov
(bad)
shl
mov
into
sbb
adc
retf
xlat
jle
iret
push
pusha
xor
adc
clc
mov
dec
mov
and
clc
int
cli
(bad)
out
pop
cmp
ja
lods
popf
sub
add
pop
repnz
into
or
stos
and
or
into
pop
mov
shr
not
test
test
push
and
es
aam
xchg
ins
or
mov
gs
rol
mov
fisttp
in
movs
in
fs
fmul
les
packsswb
jo
int
jmp
dec
lods
daa
push
out
mov
and
rcl
cli
adc
popa
inc
(bad)
ja
xchg
sahf
fmul
mov
inc
inc
xchg
pop
mov
retf
pop
mov
clc
xchg
mov
in
neg
push
jne
sahf
adc
adc
(bad)
test
cmc
push
mov
idiv
neg
xlat
xlat
adc
inc
mov
retf
out
out
push
ins
jmp
loop
sub
xchg
mov
jnp
add
cmp
ins
daa
daa
(bad)
ja
pushf
mov
mov
adc
sbb
cmp
push
pop
fnsave
cmp
push
add
out
inc
pop
mov
xchg
loopne
adc
test
cdq
(bad)
xor
inc
movs
jmp
mov
aad
add
jp
mov
rcl
mov
repnz
sbb
imul
js
call
je
push
mov
inc
arpl
jbe
push
add
icebp
in
call
mov
add
mov
cmps
pop
mov
or
push
xor
push
jge
cdq
jmp
pop
jmp
bound
mov
lods
fsubr
(bad)
(bad)
sar
mov
imul
push
and
aaa
ss
lods
sti
sbb
push
inc
inc
out
jb
repz
into
stos
bound
push
xor
aaa
add
xlat
or
cmp
je
mov
retf
test
addr16
sbb
cmp
dec
lea
in
lods
in
sbb
xor
mov
pop
add
cmp
cmc
rcl
mov
xchg
cmc
adc
sub
sbb
mov
sub
das
sub
in
retf
test
push
inc
dec
pop
sub
fist
cdq
rol
inc
dec
out
adc
push
lods
or
mov
retf
ror
pop
ins
lock
clc
pusha
adc
hlt
int3
ret
cli
pop
lods
cmp
lods
lea
cmps
jo
out
test
test
pop
jae
arpl
and
out
sub
and
mov
jge
mov
outs
xchg
push
mov
dec
fnstenv
push
pop
mov
sub
loope
jg
mov
enter
sbb
outs
sub
push
pop
and
ret
add
mov
jp
imul
and
xchg
outs
inc
mov
iret
pop
sbb
mov
xchg
jecxz
mov
push
or
jno
push
pop
xchg
loopne
push
or
pop
or
push
push
push
inc
cmp
not
fnstcw
pop
cs
cmp
test
rol
movs
mov
push
mov
les
fnstenv
fs
int
inc
dec
sbb
push
dec
adc
jns
cmps
jecxz
sbb
(bad)
popa
mov
pop
jg
sbb
sub
inc
pop
jle
in
dec
add
loopne
in
or
scas
cmp
icebp
pop
mov
cmp
add
or
cs
mov
das
ins
pop
je
jl
out
imul
inc
in
pop
jge
sbb
sub
mov
inc
mov
jmp
push
cdq
jmp
pop
xor
and
jmp
inc
mov
mov
mov
mov
loope
shl
lahf
and
mov
(bad)
mov
xlat
mov
ins
push
test
or
jbe
xchg
mov
adc
retf
imul
or
in
sti
mov
xchg
jne
sub
pop
dec
add
sbb
daa
movs
ins
icebp
aas
cmp
ret
push
sbb
fnsave
(bad)
aas
popa
sub
mov
sbb
adc
inc
pop
inc
stos
int3
imul
retf
pop
aad
xchg
xabort
push
jle
loope
call
sub
add
cmp
sti
pop
je
int
jnp
aas
and
add
ss
outs
mov
jne
mov
jmp
pushw
mov
call
mov
outs
inc
loopne
addr16
fstp
ret
or
adc
push
adc
mov
inc
jle
dec
sbb
daa
adc
xchg
je
push
mov
mov
shl
jnp
inc
cmp
dec
stos
dec
int3
inc
bound
jge
inc
int3
add
mov
retf
iret
je
(bad)
(bad)
xor
mov
adc
das
lods
or
or
inc
(bad)
fild
sbb
pop
inc
jl
ret
xchg
or
lods
mov
mov
(bad)
or
xchg
cmp
lock
mov
push
imul
sub
dec
imul
dec
mov
outs
add
sbb
and
int
mov
repz
cmp
xor
sbb
xor
inc
inc
dec
mov
add
clc
ss
push
gs
pusha
pop
jp
mov
jp
sbb
mov
xlat
and
rcr
and
pushf
mov
bound
pop
ins
pop
gs
icebp
mov
sbb
stos
stc
mov
aam
(bad)
xor
mov
push
push
int
test
sub
and
inc
mov
sahf
sbb
jp
stos
sbb
xor
(bad)
and
jbe
rcl
lock
mov
(bad)
imul
in
jb
ror
adc
sahf
cmp
jnp
cmp
cmps
ret
mov
in
pop
pop
xor
iret
pop
lds
sar
dec
iret
mov
xchg
sub
imul
jl
cwde
mov
sahf
addr16
rol
(bad)
push
cmp
ret
lea
daa
xor
jmp
fwait
jnp
in
add
xchg
or
push
les
mov
mov
ss
mul
retf
(bad)
or
out
ud0
retf
jle
mov
fsubrp
sbb
push
or
scas
cli
scas
and
test
arpl
dec
iret
popf
jg
mov
loope
cdq
xchg
pop
fldenv
mov
and
lea
pop
add
push
mov
dec
adc
(bad)
inc
je
jmp
popf
cmovo
sahf
movs
fadd
inc
pusha
cmc
inc
mov
cmc
gs
inc
sub
push
xchg
loop
icebp
ins
in
test
cmps
pop
push
mov
in
aam
mul
test
mov
lock
jmp
and
mov
lds
repz
(bad)
ja
lea
enter
ja
into
adc
jb
mov
stc
sti
cli
test
or
mov
mov
pop
hlt
arpl
mov
add
ss
cmp
or
cmp
ret
sahf
ret
cmp
pop
out
and
lock
push
mov
pop
arpl
je
push
mov
fcom
jp
sar
les
popa
sub
sub
outs
sub
(bad)
(bad)
rcr
in
jo
mov
pop
stos
or
ror
mov
add
std
jmp
pop
imul
and
std
add
xchg
imul
retf
jecxz
pop
inc
adc
scas
mov
sbb
call
push
dec
aad
enter
shl
imul
(bad)
dec
imul
mov
ficom
push
xor
movs
inc
sub
push
sub
mov
out
adc
or
mov
cmp
mov
sbb
hlt
sti
push
sar
clc
or
stc
sbb
push
mov
inc
mov
lahf
cli
aaa
scas
fnstcw
mov
sbb
adc
cli
fdiv
(bad)
jae
(bad)
cmps
imul
sahf
jbe
scas
sbb
and
retf
mov
and
rcr
addr16
jb
test
mov
aad
sbb
add
pop
or
pop
sub
sbb
addr16
push
pop
add
ret
mov
xchg
adc
loop
push
mov
clc
in
xchg
or
mov
pop
iret
test
jp
pop
cvtdq2ps
stos
cld
cmp
imul
nop
loopne
or
sahf
or
fld
sub
data16
in
(bad)
arpl
xor
int3
outs
push
scas
sbb
sub
arpl
arpl
scas
lods
xchg
inc
js
test
cmp
ret
or
nop
ins
mov
mov
or
gs
(bad)
or
cmp
pushf
jnp
add
(bad)
mov
and
in
imul
imul
mov
xchg
lods
sbb
jne
jp
pop
sbb
cmp
push
aas
mov
lahf
adc
mov
mov
in
out
dec
sbb
mov
push
jae
sub
mov
iret
mov
jo
sahf
and
jle
mov
mov
fmul
fwait
imul
xor
jl
jg
sahf
movs
adc
fdiv
or
mov
and
xchg
int
nop
(bad)
add
jbe
dec
ret
js
sub
scas
lods
call
out
lds
adc
gs
js
dec
stos
stos
stos
mov
mov
xchg
clc
mov
mov
jg
xchg
sub
lods
and
and
sbb
pop
mov
jp
addr16
cmp
imul
bound
sti
shl
inc
test
lahf
and
jbe
loop
and
cmp
inc
div
xchg
addr16
xor
sub
cli
mov
pop
mov
inc
lahf
mov
push
xchg
jo
hlt
popf
xor
inc
jge
dec
pop
gs
in
pop
mov
loopne
lods
add
sub
push
dec
sbb
jmp
loop
pop
popf
dec
cmp
xchg
and
inc
and
icebp
int3
repz
push
into
xor
push
cwde
or
or
jae
repz
cmc
or
fwait
jmp
shl
sub
ds
mov
stos
jno
dec
push
cmp
aaa
add
rol
call
jbe
sub
jle
in
adc
das
lock
daa
call
adc
stos
adc
jbe
sub
xor
dec
adc
and
adc
xchg
xchg
imul
ret
cmp
jmp
icebp
cwde
test
fmul
cwde
jecxz
fimul
push
add
mov
push
jecxz
aas
dec
jbe
jmp
jge
shl
mov
in
(bad)
xor
xor
inc
(bad)
sahf
arpl
mov
fnstenv
movs
and
mov
xchg
(bad)
repz
sbb
ja
data16
sub
cmp
leave
mov
mov
xor
sbb
mov
inc
in
jecxz
pusha
aaa
dec
jb
ror
xor
dec
imul
std
fstp
inc
imul
adc
dec
push
jl
push
repnz
inc
and
xchg
push
sbb
push
pushf
pop
xor
jb
cmp
psrlw
mov
push
ds
mov
js
cdq
in
xor
adc
dec
imul
xchg
and
add
movs
adc
mov
mov
jmp
cmp
cdq
imul
sub
cmps
ret
int
cmc
jp
ja
inc
mov
aas
aaa
add
push
enter
jp
mov
sub
push
cld
sub
mov
xor
jg
mov
mov
mov
in
call
lea
cli
jmp
leave
pop
lock
inc
fcomip
mov
enter
add
push
push
add
mov
loopne
ins
sub
mov
inc
pop
in
mov
mov
adc
inc
and
and
outs
xchg
std
dec
enter
adc
clc
push
nop
lods
mov
fstp
aaa
rol
loopne
dec
or
gs
out
sub
retf
dec
xor
push
jnp
fcmovnbe
dec
sbb
mov
xchg
das
shr
test
outs
mov
dec
sbb
mov
das
shl
add
and
popa
lahf
jae
add
xchg
or
ja
and
or
pop
test
rcl
fcom
sub
xchg
gs
fisttp
pop
cli
jno
lea
aaa
xor
(bad)
pop
pop
and
jne
fbstp
adc
mov
pop
mov
pop
adc
stc
shl
cli
sar
or
clc
not
mov
adc
inc
xchg
js
fiadd
rcl
sar
loop
inc
sbb
sub
sub
movs
je
repnz
daa
dec
in
cmp
xchg
or
push
cwde
repz
cmp
mov
in
push
or
or
push
inc
(bad)
cmp
jmp
aam
jns
out
cmp
aaa
lock
enter
out
cmp
dec
leave
cmp
aad
lds
xor
pushf
dec
(bad)
cmps
scas
movs
inc
je
cs
add
les
daa
repz
inc
loope
mov
cmp
ret
das
xor
add
ins
dec
lahf
arpl
(bad)
out
aam
pop
inc
mov
mov
out
adc
inc
or
add
pop
dec
fwait
cmps
daa
xchg
(bad)
movs
(bad)
int
sbb
jmp
hlt
push
lods
push
div
test
stos
pusha
inc
xchg
(bad)
sub
dec
int
xchg
test
test
xchg
shl
add
ret
sub
test
inc
sbb
adc
ins
retf
or
iret
aaa
adc
leave
popa
jecxz
in
or
shl
dec
pop
sbb
cld
push
packuswb
mov
sub
repz
xchg
adc
in
icebp
cmp
and
fcmovbe
ss
sti
lods
xchg
sbb
xchg
jmp
add
(bad)
push
xor
mov
pushf
xchg
mov
inc
loop
loopne
cmps
and
adc
pop
iret
ret
call
pop
nop
sbb
jne
dec
cmp
cmp
and
push
mov
les
pushf
mov
pop
imul
or
sbb
mov
xchg
ds
out
lea
cmps
lock
push
xchg
cmp
dec
push
movs
fsubr
mov
aad
sub
pusha
or
scas
mov
cmp
jne
adc
adc
xor
out
nop
cmp
jbe
movs
retf
or
(bad)
xchg
inc
push
fisttp
sub
and
popa
pop
adc
je
cld
adc
das
inc
in
mov
jge
(bad)
sbb
xor
fiadd
pushf
jnp
sbb
sti
push
sbb
dec
cmp
mov
out
imul
mov
scas
rcl
repnz
movs
xor
dec
(bad)
(bad)
test
(bad)
sti
loopne
add
push
adc
(bad)
popf
es
aam
cli
pop
mov
(bad)
push
(bad)
fbld
aam
pushf
inc
cmc
pushf
and
mov
das
pop
adc
icebp
add
dec
jmp
je
push
iret
pop
mov
mov
mov
mov
out
sbb
xor
lock
movs
sar
dec
enter
push
pushw
xor
adc
(bad)
push
(bad)
push
xchg
ret
mov
mov
arpl
(bad)
aas
mov
lahf
clc
cmc
stos
jmp
imul
fcom
add
fs
jne
xor
cdq
xor
(bad)
out
push
and
mov
xor
nop
push
push
jmp
cmp
arpl
ret
js
cmps
aam
mov
je
push
sbb
pushf
enter
or
adc
scas
mov
aas
sub
lds
jmp
push
mov
pop
pop
inc
xchg
cmp
push
mov
int
dec
popf
cmp
pop
jo
sbb
cs
mov
sar
(bad)
sbb
jmp
push
popf
cli
pusha
aam
aam
jl
ds
mov
sbb
dec
push
lock
jle
or
scas
push
xor
jno
add
fidiv
jle
fwait
arpl
dec
(bad)
and
pop
mov
int
xchg
rol
sahf
xchg
mov
fistp
in
mov
jle
arpl
mov
sbb
xchg
gs
xor
fidiv
popa
out
xchg
mov
dec
dec
clc
sbb
dec
cdq
les
sbb
mov
mov
add
loopne
dec
and
jp
or
add
stos
or
mov
imul
push
dec
retf
dec
ret
lahf
pop
outs
je
push
repnz
pop
fs
xor
stc
fwait
int
jns
add
(bad)
cli
loopne
call
xchg
and
(bad)
dec
sbb
test
cs
pusha
sub
popf
adc
lock
push
ja
in
sar
lods
adc
lds
pop
sbb
ja
and
lds
push
leave
imul
sbb
push
push
mov
or
pop
ds
xchg
mov
jbe
or
push
mov
movs
mov
pushf
jmp
(bad)
cmc
push
bound
shr
je
jg
add
mov
jo
stos
fyl2xp1
dec
or
add
sub
icebp
or
lds
jno
cli
frstor
sub
mov
fldcw
in
stos
imul
aad
add
icebp
sbb
jmp
(bad)
out
mov
ds
fidivr
cmc
leave
pushf
xor
or
xchg
xchg
jmp
sub
in
mov
cwde
cdq
cmp
repnz
jecxz
loope
add
jae
stc
jp
adc
clc
movs
mov
sub
call
and
movs
lea
adc
enter
shl
mov
mov
idiv
adc
loope
int3
leave
in
mov
rcl
stos
fsub
jns
sub
or
mov
inc
push
sub
mov
adc
jmp
retf
imul
lock
mov
into
in
stos
lds
add
ins
retf
out
mov
adc
push
jp
das
pop
inc
daa
jmp
test
mov
push
clc
data16
imul
(bad)
xchg
mov
popf
mov
and
fsubrp
test
or
add
sbb
imul
(bad)
jp
add
mov
mov
das
pop
ins
das
push
lds
retf
dec
ror
sub
ficomp
pop
adc
pop
rcl
loop
xor
das
cmp
mov
out
fs
pop
ret
lods
int3
push
(bad)
sahf
xor
adc
adc
getsec
push
cmps
push
dec
jp
ror
dec
loope
pop
add
retf
lods
dec
mov
hlt
xor
add
fld
lods
and
loope
mul
int3
add
out
retf
pop
lahf
ja
and
shr
loop
in
push
aas
or
aad
call
(bad)
jmp
fwait
sub
mov
xor
xchg
es
ins
pop
sub
mov
mov
xchg
out
pop
mov
shl
(bad)
push
jge
aad
xchg
out
push
inc
iret
je
pop
or
push
push
in
push
mov
daa
or
jno
ins
and
cli
pop
jecxz
cmp
loopne
data16
iret
sbb
aas
mov
add
addr16
daa
icebp
dec
add
in
push
jp
call
xchg
add
cli
aaa
mov
fcom
jns
js
sbb
das
xchg
fnstenv
push
mov
mov
pop
div
gs
imul
jmp
call
out
sbb
sbb
adc
loopne
movs
int
xor
ss
or
xlat
mov
jne
jle
cld
call
popf
imul
jg
ins
in
dec
inc
call
adc
add
sbb
or
pushf
mov
xchg
stc
retf
dec
aaa
mov
in
pop
dec
out
push
outs
rcr
pop
in
hlt
cwde
cwde
sbb
mov
jp
dec
pop
mov
aad
icebp
adc
in
dec
lock
jge
cmps
data16
lods
fincstp
jo
pop
pop
out
cmp
xchg
xchg
cmps
jb
cmp
rcl
mov
arpl
inc
push
push
and
sbb
mov
mov
mov
jmp
cmps
(bad)
hlt
xchg
test
out
sub
js
and
aaa
in
inc
mov
sbb
(bad)
pop
inc
sub
aaa
pop
cli
mov
jno
aam
int
xchg
ins
jmp
test
push
mov
adc
sub
popf
test
ins
add
mov
rcl
repnz
rol
cmps
es
rcr
stos
in
mov
add
inc
xor
lods
data16
cmps
bound
pop
push
xchg
js
jg
inc
outs
mov
push
nop
sbb
sbb
or
in
shl
xor
movs
std
mov
jns
adc
scas
mov
xor
loope
sub
mov
pop
inc
fdiv
add
cmc
inc
neg
mov
cwde
mov
mov
inc
push
mov
fst
fmul
mov
fidivr
out
adc
adc
fist
xchg
mov
mov
inc
xor
(bad)
or
xchg
or
xchg
sbb
xor
sbb
xchg
xor
js
adc
dec
xor
outs
scas
inc
mov
dec
fdivr
stos
pusha
jno
outs
add
sub
adc
ins
jne
cld
in
outs
rcl
push
std
loope
adc
sbb
test
mov
outs
or
ja
pop
(bad)
inc
and
jbe
mov
sub
pushf
sti
pop
and
jo
test
icebp
jb
out
and
jo
and
iret
lods
dec
out
jp
pusha
adc
arpl
test
and
hlt
movs
cmps
shl
popa
sub
je
stc
cli
mov
cmps
out
xlat
mov
je
xchg
jne
rol
in
lods
shr
cdq
push
xlat
sbb
mov
push
cmps
fstp
jmp
cdq
cli
and
or
rcl
inc
repnz
sub
sar
ins
fneni(8087
jae
loopne
xchg
ja
test
inc
fldlg2
inc
bound
and
scas
push
add
add
mov
pop
mov
lods
jmp
push
push
ins
outs
pop
test
in
pop
mov
aaa
in
lods
ins
out
out
xor
mov
push
scas
rcr
imul
inc
enter
add
dec
mov
popa
pop
lock
xchg
out
jmp
div
xchg
or
sbb
cmp
pop
jnp
jmp
outs
mov
xor
inc
adc
mov
pop
lahf
jp
sar
xor
imul
xchg
dec
push
push
out
xchg
jmp
cmp
js
jbe
in
xchg
xchg
mov
jg
mov
inc
cmp
push
ins
mov
push
jb
add
test
sbb
popa
scas
inc
push
sbb
push
jno
jge
in
jne
(bad)
or
pop
pop
out
push
inc
jb
pop
sbb
jp
xchg
ins
in
jns
ins
jge
ret
out
ja
or
push
mov
adc
ss
push
xor
cmp
(bad)
dec
ret
mov
in
and
out
inc
enter
push
jo
dec
pop
mov
push
xchg
mov
and
je
ficom
xlat
sbb
xchg
rcl
rcr
scas
jne
cmp
adc
xchg
mov
mov
outs
jnp
mov
sub
mov
jp
and
xor
sub
mov
popf
push
mov
std
stos
adc
mov
sbb
inc
bound
inc
push
jbe
(bad)
es
mov
cli
cli
cli
fcom
xchg
in
or
(bad)
pop
aas
call
addr16
nop
dec
jne
mov
movs
rcl
int
jecxz
je
or
add
je
(bad)
or
or
mov
dec
xchg
sbb
inc
adc
cmps
xchg
retf
out
cmp
cdq
xchg
adc
inc
cmc
pop
out
pushf
pop
test
xchg
xlat
ror
lds
cmp
jno
pop
mov
ins
mov
pusha
fwait
out
cdq
aad
fs
mov
add
mov
mov
gs
fs
and
scas
or
xchg
mov
and
popa
pop
es
mov
out
xchg
stos
add
and
mov
jae
add
fs
xor
pop
ins
fwait
retf
adc
and
push
clc
mov
mov
in
or
adc
cmp
mov
fsubp
adc
(bad)
iret
sbb
mov
xchg
xor
mov
aaa
add
mov
inc
pop
pusha
sbb
pop
stc
repnz
data16
mov
adc
jl
in
mov
out
xor
sub
xor
ss
mov
and
fistp
mov
jge
popa
push
test
lods
out
mov
push
dec
mov
loope
mov
add
and
inc
cmp
xor
addr16
sub
rcr
jbe
aam
or
push
in
sahf
loope
(bad)
cwde
repz
rol
test
sub
push
sub
(bad)
ja
icebp
adc
mov
out
repz
mov
lahf
into
pop
fild
xlat
sub
xchg
sar
movs
cmc
sbb
xlat
pop
ins
jp
sahf
leave
xor
nop
fwait
and
cdq
test
nop
jns
out
mov
mov
leave
pop
dec
test
addr16
pop
adc
(bad)
cmp
(bad)
bound
pop
push
das
mov
inc
add
mov
sub
jmp
fadd
in
inc
mov
pop
and
push
data16
mov
and
loope
and
lock
adc
mov
and
xchg
retf
push
mov
ror
xchg
lahf
mov
imul
pop
ss
push
jae
cmp
mov
lods
inc
daa
sbb
aas
into
sub
and
adc
lahf
or
test
push
loopne
pop
adc
in
in
mov
mov
sbb
test
mov
ss
aaa
mov
in
in
mov
dec
jns
add
sbb
mov
add
sbb
imul
xor
jnp
movs
push
xor
mov
push
pop
push
xor
xor
leave
ss
outs
jb
ret
push
sbb
call
or
xor
es
pop
test
aas
add
lea
add
inc
push
pop
call
popf
xor
stos
aas
mov
cmp
dec
sub
(bad)
bound
aam
xor
fist
mov
add
loop
xchg
aaa
pop
mov
fistp
cdq
push
stos
das
loop
xor
rol
fwait
adc
mov
bound
pop
push
enter
xchg
xchg
mul
shr
xor
test
xor
mov
and
sti
push
hlt
dec
mov
and
cmc
push
mov
cdq
or
xor
push
mov
iret
pushf
add
cmps
or
mov
inc
cwde
adc
sar
cmp
fwait
popf
sbb
ja
scas
loopne
push
cmp
dec
daa
mov
in
inc
dec
lods
addr16
les
sbb
loope
xchg
mov
sbb
mov
arpl
in
lea
jle
sub
adc
mov
je
pop
pop
aad
or
test
xor
int3
add
popf
movs
ror
test
stos
(bad)
add
pop
sub
cmc
sbb
pop
les
sahf
sub
mov
ins
nop
stc
jecxz
cmp
xor
fnstcw
mov
imul
sub
aad
ss
sub
xchg
fcmovu
pusha
rcl
sar
sbb
stos
loop
in
dec
cs
jmp
and
shl
sbb
pop
push
fdivr
xchg
popa
fidiv
mov
es
arpl
ins
sbb
sbb
test
repnz
and
adc
mov
push
xor
bsr
mov
sub
push
jmp
push
ss
lds
ret
jge
pop
shr
fs
popa
inc
cs
inc
push
pop
xchg
xor
push
fwait
mov
in
out
add
sub
push
mov
cmps
out
cwde
lds
xor
xor
mov
cld
fstp
pop
test
adc
xchg
adc
inc
cs
pusha
jge
test
cdq
retf
jmp
mov
rcr
aad
pop
sbb
adc
jg
cmp
enter
dec
mov
arpl
inc
inc
pop
clc
jbe
jmp
dec
jg
stos
out
jl
in
clc
hlt
shl
adc
adc
push
dec
pusha
loope
(bad)
push
out
lods
inc
xor
mov
dec
jno
inc
call
xchg
jae
dec
mov
xchg
fwait
cmp
outs
rcl
sub
jbe
sub
fwait
repz
test
rol
cs
test
outs
jmp
jg
(bad)
pop
lea
mov
inc
cld
sahf
sub
leave
cmps
iret
inc
outs
adc
lods
test
in
cmp
pop
cwde
xchg
je
loope
jg
sub
pop
inc
mov
jge
js
test
xchg
out
hlt
and
jbe
(bad)
adc
test
shl
mov
mov
xchg
(bad)
jbe
mov
or
mul
add
mov
icebp
in
push
add
mov
adc
pop
adc
jecxz
pop
repz
imul
shl
repnz
xchg
(bad)
xchg
add
jns
push
add
cmps
xlat
xlat
mov
out
xor
push
xchg
xor
pop
daa
das
mov
out
in
pop
mov
sbb
cmc
jmp
out
nop
aas
mul
(bad)
mov
in
inc
dec
sub
jne
pop
sar
ins
repnz
ins
pusha
push
test
inc
outs
pop
outs
xchg
daa
(bad)
push
popa
pop
iret
xchg
test
and
push
in
test
push
fwait
dec
div
movs
push
fstp
xchg
inc
sbb
sub
fs
(bad)
cmp
sbb
push
mov
mov
pushf
call
pop
comiss
frstor
mov
jg
lahf
bound
movs
aas
call
outs
sbb
inc
xchg
dec
xchg
adc
scas
mov
test
lock
lods
jle
inc
dec
inc
jp
mov
cmp
xchg
pop
daa
cmc
pop
pop
jo
dec
mov
int
fisubr
jge
add
cdq
mov
sbb
fdivrp
popa
loope
icebp
sbb
cmp
stc
rcl
inc
clc
sub
jns
mov
mov
scas
jg
retf
adc
adc
jb
clc
mov
ret
add
js
mov
ja
lods
(bad)
push
cmp
pushf
sbb
push
adc
cmps
jmp
push
aam
push
xlat
jns
add
aaa
jo
into
jne
jo
int
mov
pop
in
sbb
mov
inc
add
pop
xchg
push
dec
add
aas
jge
test
popa
mov
leave
out
or
inc
jle
mov
cmps
in
pop
xchg
dec
ss
stos
repz
xor
retf
push
(bad)
pop
mov
jnp
hlt
pop
in
cmps
fst
xor
mov
fistp
out
lods
lods
xchg
jnp
mov
retf
imul
mov
xchg
sub
or
jmp
fstp
faddp
inc
js
jmp
pop
mov
xchg
in
and
retf
fs
jp
mov
cmps
push
sar
mov
xchg
daa
cli
push
pop
in
inc
out
pop
ds
jmp
mov
or
or
mov
xchg
fwait
jg
mov
js
adc
call
mov
xor
adc
jns
out
inc
ins
cmps
arpl
inc
add
loope
jo
mov
and
inc
push
retf
fcmovnbe
jne
xor
outs
jge
adc
rcr
pop
int
int3
cmp
inc
(bad)
add
xchg
hlt
jbe
push
ss
mov
mov
pop
jb
dec
(bad)
sbb
inc
and
in
rcr
jmp
push
movs
std
xchg
push
push
rcr
jmp
jne
xor
test
dec
clc
arpl
(bad)
push
xor
inc
test
sbb
out
in
xchg
out
cdq
jo
ins
call
(bad)
retf
sbb
jg
pop
(bad)
lock
test
rcr
scas
sub
ret
fadd
outs
xchg
test
cmps
je
or
mov
dec
push
pop
mov
sbb
xchg
fcomp
leave
fwait
nop
sub
jb
sbb
push
ret
mov
pop
loop
jae
push
loope
xlat
ret
test
ds
dec
jl
shl
sbb
nop
xor
ret
jg
mov
icebp
xor
or
or
fcomp
push
xchg
(bad)
and
push
add
mov
jmp
mov
push
shr
jnp
sub
mov
xchg
in
ds
ror
pop
mov
daa
pushf
or
push
xor
jb
dec
lock
and
jp
mov
sahf
jns
js
jl
(bad)
mov
sbb
or
mov
jmp
jbe
adc
mov
cmp
movs
and
pop
repnz
cmps
add
sbb
pop
mov
out
sub
aaa
xchg
hlt
push
and
test
enter
lods
push
pop
and
or
mov
mov
or
and
cmp
addr16
sbb
icebp
dec
ins
icebp
sbb
jno
dec
not
mov
mov
arpl
mov
out
shl
sbb
aaa
or
(bad)
push
jl
or
retf
push
mov
ror
fisttp
pop
or
mov
push
(bad)
call
sub
scas
aaa
push
mov
push
sub
sbb
mov
stc
or
popf
imul
fmul
sbb
(bad)
paddq
ja
fimul
mov
movs
fbstp
fwait
sbb
mov
dec
into
mov
popa
sbb
push
sbb
push
popf
in
stos
lahf
mov
adc
(bad)
(bad)
adc
push
mov
and
ret
and
cld
fist
jb
push
jg
popf
test
mov
push
std
xor
xchg
aam
xchg
(bad)
cmovle
jmp
jmp
cmps
jge
add
inc
xchg
xor
xchg
dec
lods
and
cmp
mov
dec
adc
push
jbe
push
mov
adc
rcl
jl
pop
pop
es
nop
dec
fnsave
dec
push
pop
pop
jge
fwait
mov
inc
add
mov
or
jmp
xor
xor
movs
rol
jmp
add
jo
inc
stc
push
test
cmp
mov
jns
sbb
jns
adc
mov
cld
scas
jl
lods
jb
movs
out
or
mov
jae
xor
int3
or
dec
imul
test
mov
popa
dec
inc
and
add
hlt
movs
loopne
test
add
mov
xchg
retf
jnp
std
pop
das
mov
dec
pop
mov
adc
mov
cdq
std
pop
int3
inc
xor
ds
(bad)
cmps
pop
stos
aam
loop
inc
jmp
fs
inc
fcom
xchg
mov
cmp
xor
mov
mov
dec
mov
and
lahf
stc
sbb
cmp
rcr
pop
xchg
nop
and
fist
or
test
mov
loop
dec
fist
fisttp
jns
(bad)
and
icebp
in
daa
icebp
in
jl
jmp
jns
test
xor
stos
xchg
lahf
dec
or
jnp
add
push
retf
arpl
xlat
xor
aaa
sub
pop
inc
fnstsw
stc
ins
mov
mov
test
and
push
(bad)
pop
out
in
mov
sbb
leave
movs
xchg
mov
cs
xchg
push
inc
mov
mov
push
or
ins
cmp
gs
dec
cmc
dec
pop
stc
rcr
cmp
xor
pop
mov
adc
adc
adc
out
adc
aam
es
or
add
stc
into
adc
nop
lahf
sub
sahf
cwde
loope
in
lock
enter
call
(bad)
lock
jns
push
and
and
(bad)
je
leave
(bad)
and
stc
mov
mov
hlt
pop
adc
jbe
jp
cmp
mov
sub
adc
mov
mov
std
xor
jle
cmps
(bad)
les
test
inc
inc
cmp
lods
mov
or
nop
mov
push
mov
ret
popa
pop
jmp
jp
cld
fisub
test
repnz
pop
pop
mov
pop
sbb
cmps
push
inc
popf
xor
xchg
sbb
sbb
sub
nop
outs
inc
dec
data16
pusha
add
aad
dec
jnp
add
call
xchg
sbb
xor
jl
mov
sbb
cdq
shl
pop
push
jl
mov
fcmovnu
int
cmp
inc
or
aas
adc
xchg
push
xchg
jecxz
dec
add
pop
inc
ja
scas
mov
dec
loope
loop
mov
cwde
mov
jns
lahf
xchg
ret
inc
mov
stc
call
push
add
mov
xor
pop
jge
dec
popf
leave
adc
xchg
ret
loope
mov
fcomp
jmp
js
pop
push
inc
inc
dec
or
cdq
shl
lea
sar
and
pop
(bad)
push
imul
jns
mov
pop
dec
push
or
loopne
in
out
outs
dec
js
popa
mov
ror
xchg
mov
push
bound
adc
pusha
xchg
les
ret
sar
cmc
cmps
or
jb
lock
push
push
pop
mov
fstp
stc
cdq
stos
ins
in
into
xchg
jp
(bad)
mov
arpl
test
in
(bad)
in
aaa
pop
push
mov
icebp
add
(bad)
das
push
ja
ret
jo
push
inc
jno
jnp
ins
int
cmc
fnstenv
ret
xor
ficomp
or
xchg
(bad)
cmc
fucomp
jge
and
and
and
sub
push
xchg
sub
mov
ja
cmp
cld
sub
test
mov
mov
imul
dec
dec
clc
mov
packssdw
pop
aad
movs
mov
mov
mov
jns
popa
cmp
and
fdiv
and
push
dec
pop
pop
sti
pushf
daa
cld
loop
inc
cmc
loope
mul
outs
dec
jnp
fs
imul
cmp
lahf
push
dec
pop
push
loope
maskmovq
idiv
xor
fnstcw
sar
xchg
arpl
js
pusha
mov
xchg
das
(bad)
mov
inc
test
or
into
cmps
outs
in
inc
data16
mov
test
into
add
mov
lods
push
not
add
sti
xchg
movs
fwait
adc
aam
imul
scas
jno
repnz
test
xor
lods
out
push
je
adc
mov
mov
mov
hlt
repnz
in
stos
loope
jne
cmp
push
fcomi
xchg
xchg
jle
add
sub
sbb
or
sub
out
sub
mov
jmp
shl
cmp
mov
pushf
pop
icebp
mov
in
and
(bad)
shl
je
js
rcl
cli
mov
ins
dec
pmaddwd
enter
jmp
(bad)
jle
dec
mov
mov
xchg
xor
or
add
js
pushf
int3
aaa
push
sbb
not
add
cmp
mov
cmps
jns
ja
jne
mov
dec
xchg
shl
jne
mov
jae
add
loope
cwde
jle
pop
int3
push
mov
jb
imul
loopne
(bad)
xchg
inc
(bad)
aam
cli
lods
mov
xchg
xor
mov
sahf
popa
add
push
sbb
mov
push
mov
pop
mov
xlat
jmp
inc
retf
adc
add
pop
push
add
add
js
ins
nop
fldcw
(bad)
inc
cmc
push
mov
fs
jo
pop
xor
inc
jmp
mov
mov
fidivr
lds
stc
hlt
and
inc
jb
fbstp
inc
jg
popa
push
or
pop
mov
mov
cmp
mov
cmp
inc
inc
out
push
jmp
sub
cdq
mov
movs
cli
cdq
pusha
lds
daa
std
xor
mov
jmp
repz
push
neg
loope
enter
sbb
xor
aaa
fdiv
hlt
push
loope
jmp
xchg
mov
js
xor
fcmovne
cmps
xchg
into
neg
pop
mov
ins
inc
mov
dec
sbb
in
push
and
push
je
adc
mov
aad
fst
pop
mov
movs
or
inc
stos
inc
les
repnz
loopne
sbb
(bad)
push
in
test
sbb
aam
xor
mov
cmp
cdq
loope
pop
or
mov
pop
ins
sub
jg
sub
fst
push
jb
push
mov
ret
jne
pusha
sub
loop
push
add
adc
dec
add
ja
pop
mov
(bad)
push
scas
jmp
lea
push
daa
mov
imul
in
and
fdiv
call
out
sub
xchg
jg
adc
push
sbb
sbb
fwait
push
or
mov
js
out
(bad)
out
call
sub
test
xor
adc
sbb
xchg
cmp
or
mov
pop
ss
sub
inc
out
fist
sbb
cmp
retf
mov
fild
stc
je
jge
cmp
mov
push
xor
add
pop
into
inc
mov
adc
cmp
inc
mov
repnz
dec
xchg
movs
aas
nop
cwde
pop
(bad)
(bad)
arpl
mov
push
retf
test
add
mov
push
std
push
jns
or
sub
scas
shl
cwde
mov
into
push
stos
pop
loop
imul
cmps
cmps
xchg
sub
rcr
sub
lods
add
in
mov
inc
pop
neg
xor
pop
aaa
fist
rcr
rcr
and
aaa
xor
iret
hlt
cdq
pop
sub
inc
adc
push
and
ret
dec
mov
and
fcom
sub
ins
aam
adc
ja
aad
outs
jnp
rol
add
scas
ficomp
pop
hlt
ret
or
push
ret
xchg
hlt
arpl
aam
sbb
loope
jns
inc
mov
iret
sbb
lock
dec
cmp
icebp
lea
xor
aas
(bad)
in
mov
mov
aam
scas
out
lahf
in
cmp
xchg
dec
sahf
ss
imul
lods
clc
jecxz
push
retf
test
add
jmp
pop
in
iret
loop
push
(bad)
cmp
adc
and
out
fs
sub
xor
jmp
dec
loope
cmc
and
mov
mov
dec
dec
pop
ja
mov
lds
inc
push
push
(bad)
(bad)
xacquire
shl
push
ds
cs
enter
and
dec
loope
push
mov
xchg
mov
or
ret
push
test
ret
push
ds
mov
dec
idiv
pop
push
inc
in
dec
gs
rol
stos
jp
fsub
and
hlt
(bad)
and
xor
nop
adc
push
call
jg
das
rol
pop
add
hlt
mov
xor
xor
inc
xor
call
or
add
les
pop
push
outs
dec
loopne
cmp
xlat
or
xchg
mov
int
sub
xchg
loop
stos
ss
dec
mov
mov
fmul
ss
adc
dec
jno
dec
sub
movs
hlt
push
bound
jg
aad
or
int
pushf
(bad)
mov
sub
mov
nop
push
aad
ret
bnd
add
lea
sub
jg
into
(bad)
mov
xor
cwde
es
mov
popf
sub
popf
pop
sbb
rcl
inc
rcl
inc
mov
leave
cwde
sbb
cmps
mov
(bad)
jnp
jb
lock
rcr
inc
push
push
pop
jle
mov
jg
pop
mov
mov
test
cmp
cmp
add
mov
xchg
je
xor
outs
ror
sub
scas
jae
add
test
cwde
(bad)
dec
sahf
leave
xchg
aam
std
jnp
out
ss
inc
ja
mov
outs
repnz
scas
mov
rcr
sahf
je
cmp
rep
jle
(bad)
jbe
retf
pop
je
loop
adc
fabs
mov
add
sbb
hlt
repnz
sahf
add
jmp
add
xlat
push
movs
add
jmp
dec
repnz
repnz
or
jp
imul
push
retf
lahf
adc
mov
cmp
inc
cmp
test
adc
dec
call
das
es
dec
fisttp
and
and
nop
dec
mov
stos
mov
rcr
mov
hlt
mov
cmp
sub
and
xor
or
xor
jecxz
mov
and
cmps
push
or
sbb
pop
pop
adc
lds
loopne
mov
mov
sub
jno
fbld
(bad)
gs
(bad)
lahf
bound
jecxz
jle
sub
imul
mov
test
and
test
call
push
lods
scas
fcomp
repz
test
out
mov
enter
cli
fcom
fstp
and
pop
call
mov
imul
(bad)
mov
mov
imul
ds
dec
fld
retf
das
rcr
outs
xchg
push
mov
cmp
mov
adc
scas
mov
push
out
dec
adc
test
clc
add
out
inc
mul
jae
jg
daa
stc
jge
imul
fidivr
test
add
jb
pop
retf
mov
retf
sub
push
xchg
test
add
jno
add
or
dec
push
mov
mov
xchg
xchg
out
xor
scas
pop
rcl
int3
imul
imul
pop
sahf
xor
cmps
mov
ficom
xchg
and
lods
jp
xchg
sbb
popa
mov
pushf
inc
mov
std
sub
pop
inc
mov
lods
fcomp
neg
cmp
call
test
xchg
rcr
(bad)
std
cmc
xlat
xor
or
xor
mov
or
shr
cmpxchg
xchg
add
jo
idiv
sub
push
mov
out
inc
dec
cs
mov
or
sub
ret
fiadd
ins
jmp
add
pop
push
mov
aad
push
inc
or
popf
dec
lea
div
in
pushf
sbb
jecxz
adc
mov
adc
cmc
ret
test
xadd
repz
and
push
dec
nop
jg
and
fdiv
mov
xchg
dec
daa
mov
sbb
mov
lods
mov
mov
(bad)
mov
dec
dec
das
fiadd
push
data16
inc
xchg
call
lock
mov
xchg
dec
mov
loop
jne
xchg
cwde
loop
add
push
sub
(bad)
cli
daa
loope
movs
cmp
fwait
bound
in
inc
icebp
mov
xor
or
dec
iret
ror
sub
mov
mov
add
and
and
in
lea
ins
hlt
movs
scas
int
add
es
(bad)
iret
pusha
dec
dec
scas
push
or
lds
icebp
jno
adc
push
cmc
xchg
mov
cmp
push
out
hlt
add
mov
fs
lds
mov
and
sahf
dec
out
aas
out
push
sahf
xor
pop
push
cmp
mov
stos
push
imul
ins
std
mov
enter
(bad)
adc
mov
or
xchg
push
in
or
cs
add
(bad)
sti
(bad)
icebp
out
repz
loope
(bad)
sbb
inc
retf
pop
or
loope
test
pop
and
add
xor
imul
mov
pop
jecxz
inc
int3
add
dec
pop
out
shl
arpl
inc
movlps
mov
adc
mov
xchg
mov
inc
(bad)
jp
add
ja
inc
inc
ja
inc
and
daa
arpl
shl
aas
cld
pop
xor
mov
aaa
test
xchg
fsub
xor
pop
cmps
jp
adc
ror
xor
dec
in
sbb
inc
aaa
stos
jbe
outs
(bad)
hlt
dec
push
cmp
out
pop
pop
push
imul
jmp
cmps
in
rcr
push
in
push
jge
addr16
and
repnz
and
dec
add
pushf
stos
ret
stos
mov
jb
and
fnstcw
xor
call
mov
cli
mov
(bad)
fdivp
mov
sub
lods
ins
fild
mov
into
push
pop
sub
pop
(bad)
cmp
lods
(bad)
js
inc
fidivr
sti
iret
mov
stc
dec
pop
sub
push
mov
pop
add
push
aad
add
inc
(bad)
push
inc
or
fisttp
pop
retf
xchg
icebp
mov
call
adc
mov
cmp
cmps
ins
adc
cmps
jg
cmps
sahf
jmp
mov
int3
mov
mov
movs
cmp
aam
pop
das
pop
cmp
retf
pop
sub
push
xchg
push
sub
push
stc
sahf
lds
ret
dec
outs
add
sti
dec
out
add
push
jne
add
(bad)
iret
and
and
jb
leave
mov
adc
push
sub
xchg
leave
ja
xor
sbb
(bad)
xchg
inc
inc
and
xor
mov
push
mov
jecxz
lock
retf
addr16
push
add
js
mov
lods
call
out
popa
mov
mov
xchg
or
js
and
and
mov
add
movs
sbb
sahf
sar
jge
pop
and
movs
stos
neg
loop
pcmpgtw
cmp
outs
push
adc
xchg
in
sub
sbb
call
mov
or
jbe
iret
popa
lds
pop
lahf
sti
xchg
cmp
rcl
xchg
jo
sbb
mov
add
cmps
dec
hlt
ins
cld
rep
or
pop
mov
out
push
or
outs
pop
in
add
into
dec
scas
jno
xor
cmp
inc
xchg
jnp
dec
adc
ror
fdivr
sbb
sub
sahf
enter
and
mov
in
in
lock
adc
lods
push
aaa
push
sub
adc
xor
sbb
jae
(bad)
imul
push
(bad)
in
cmp
and
pop
jge
and
int3
cmp
ror
stos
xlat
xchg
pushf
div
jnp
loop
out
push
cmp
(bad)
enter
adc
sub
fist
ret
or
sbb
push
or
adc
jp
mov
add
lds
mov
sub
push
xor
imul
mov
jge
mov
into
push
sub
and
mov
push
popf
(bad)
pusha
(bad)
retf
hlt
adc
xor
(bad)
jno
pop
test
(bad)
jbe
sti
dec
sbb
xor
pop
push
jp
cmp
push
mov
fdivr
leave
sbb
iret
dec
fxch
add
or
aad
and
add
dec
mov
push
cld
pop
es
or
xchg
or
add
aas
push
test
mov
mov
xchg
shl
jg
imul
push
lods
mov
push
arpl
lods
cmp
fidiv
cld
sti
cdq
xchg
pop
push
fs
out
add
ds
shl
and
movs
add
xor
push
sbb
hlt
or
repz
imul
bound
mov
sti
out
test
or
sbb
test
loop
cmp
push
in
shl
pop
ss
sbb
cld
in
adc
mov
clc
loop
das
sbb
enter
int
stos
imul
xlat
ret
add
imul
in
stos
jnp
cdq
adc
lods
popa
lea
and
hlt
arpl
pop
pusha
adc
(bad)
into
or
(bad)
mov
cmp
test
jp
dec
mov
or
or
or
pop
les
popa
scas
xor
mov
ret
data16
and
jbe
xor
pop
loopne
rol
mov
cmp
lods
outs
mov
pop
mov
iret
lock
imul
xor
mov
rol
mov
dec
mov
pushf
fs
hlt
jl
inc
call
pop
iret
xchg
or
out
dec
cmp
les
push
mov
mov
add
push
imul
push
mov
or
sub
call
je
mov
xchg
retf
push
cmp
xor
js
movs
jmp
pop
xchg
(bad)
call
pop
into
add
(bad)
adc
aas
mov
int
push
stos
jno
adc
adc
loopne
js
inc
fidiv
aam
adc
jb
jp
test
fdiv
das
mov
outs
mov
ss
retf
aas
pop
push
les
inc
jne
xor
mov
repnz
inc
icebp
adc
movs
outs
sub
jo
repnz
fisubr
mov
add
(bad)
push
xchg
sbb
and
stc
and
jmp
aaa
sub
sbb
and
int3
pop
clc
or
cmp
scas
push
imul
out
fucomp
adc
aad
jl
xor
scas
mov
lock
inc
mov
ds
or
popa
popa
mov
repz
aas
mov
push
jmp
rcr
adc
rcr
or
pop
fiadd
mov
sahf
mov
sbb
push
pop
mov
xor
shl
aad
(bad)
mov
(bad)
popa
xchg
sbb
adc
int3
add
push
xor
ffreep
test
xchg
outs
into
jle
ret
inc
dec
cmps
sbb
test
stos
mov
cmp
in
mov
pusha
dec
jl
les
sub
sbb
rcl
push
jge
or
lea
(bad)
imul
aad
cmp
add
push
adc
sub
fsubr
test
fcomp
or
movs
bound
scas
xor
mov
aaa
push
imul
push
mov
xchg
retf
lods
sub
call
(bad)
ja
les
xlat
xor
data16
leave
loopne
xchg
mov
add
in
push
js
pop
fisttp
fcomip
adc
(bad)
popf
push
jo
jmp
in
xor
mov
cmp
jp
xchg
mov
pop
cmp
arpl
xchg
xchg
and
push
xor
lods
sbb
gs
test
int3
adc
or
sub
jmp
fbstp
cmp
mov
(bad)
fld
out
mov
jae
mov
enter
cld
mov
out
sub
mov
cmp
push
cli
jo
mov
int
out
dec
dec
movs
popf
pusha
push
fwait
cmps
pushf
pop
sbb
test
sbb
jp
mov
repnz
outs
jmp
fstp
stos
or
push
jo
mov
or
rcl
dec
cmc
ror
fidiv
mov
leave
xlat
retf
cmp
jecxz
inc
rcl
or
loope
mov
mov
test
pop
lods
imul
inc
movs
fisttp
mov
popa
fs
in
jge
sti
cwde
clc
dec
push
call
cmp
arpl
dec
scas
xchg
fbstp
pop
inc
icebp
shl
ins
jp
pop
mov
shl
push
jg
enter
push
inc
dec
retf
ss
mov
inc
sbb
in
jo
fldenv
fwait
(bad)
xchg
lods
inc
xchg
sub
inc
xor
inc
xor
repnz
pop
fisttp
not
pusha
jg
scas
aad
push
jae
stos
xor
mov
lds
pop
ficomp
dec
std
push
mov
popa
movs
add
pop
sub
hlt
cmc
fiadd
je
xchg
outs
hlt
cmp
mov
mov
or
ja
jo
add
push
or
gs
and
add
cmp
push
out
pop
xchg
push
mov
jo
sub
(bad)
cdq
iret
mov
push
cmp
mov
ror
push
sbb
or
cmp
and
sub
or
clc
mov
retf
call
in
je
(bad)
ror
les
inc
fnsave
enter
sbb
pop
shl
mov
je
not
mov
outs
or
xor
arpl
(bad)
in
mov
ins
sub
cmps
clc
in
fidiv
std
lds
xlat
popa
ins
sbb
je
shr
fwait
lods
outs
sahf
push
sub
sbb
daa
cmp
fbstp
pop
imul
addr16
neg
mov
dec
inc
clc
mov
sub
sub
adc
mov
jg
dec
xor
mov
inc
sub
mov
inc
jmp
in
cld
hlt
push
mov
push
inc
outs
dec
in
daa
cmp
outs
inc
(bad)
or
sbb
cmp
and
repz
repnz
movs
int3
test
add
test
adc
inc
mov
ret
out
out
mov
jb
mov
cmc
gs
sub
jp
add
dec
enter
adc
or
and
jbe
push
outs
and
adc
outs
enter
adc
sti
in
mov
and
pop
cmps
sti
and
mov
cwde
in
pop
xchg
mov
outs
fucomp
popf
fadd
sbb
and
add
adc
(bad)
inc
cmp
mov
in
pushf
adc
inc
imul
out
rcr
add
and
sbb
ins
inc
ror
pop
or
dec
adc
mov
cdq
ss
(bad)
xor
into
or
stos
hlt
ss
push
out
pushf
out
push
push
hlt
push
cmps
stc
ins
mov
into
pushf
sbb
mov
scas
or
loop
add
test
mov
mov
mov
popa
repz
add
or
adc
fs
scas
mov
xor
outs
push
add
dec
pushf
adc
mov
xor
(bad)
int
adc
jl
aaa
jae
stos
jns
add
mov
ss
in
push
mov
das
repnz
dec
ins
inc
cmps
xchg
shl
push
add
push
cmp
and
xchg
cmp
or
jle
in
pop
cs
jp
jnp
pop
in
clc
or
bound
pop
xor
sub
mov
jecxz
jo
jb
push
adc
cdq
(bad)
or
movs
dec
vmulsd
add
add
pop
dec
or
xchg
pop
retf
pop
push
jae
movs
fiadd
test
fist
(bad)
ror
xchg
sub
or
sub
sbb
fs
out
add
inc
cmp
ins
jl
lea
ret
inc
jge
cdq
lds
lods
push
test
mov
in
mov
xchg
jmp
fdiv
adc
jmp
push
add
lock
retf
xchg
pop
jmp
call
(bad)
ss
int
sbb
out
jle
fmul
mov
out
push
pop
xor
inc
jno
(bad)
cdq
push
pmaddwd
mov
sub
dec
xor
push
dec
call
fistp
mov
nop
xchg
stc
call
stos
sub
ss
or
fist
fiadd
(bad)
jle
int
dec
jae
call
out
dec
sbb
xchg
xchg
mov
jl
imul
mov
jmp
lock
or
inc
sti
nop
push
inc
scas
and
and
div
jge
push
enter
sub
sbb
inc
stc
cs
mov
scas
lahf
xor
mov
cld
mov
test
out
nop
retf
fst
call
les
xchg
cwde
pop
push
rcr
xor
xchg
xlat
ds
pop
pusha
pop
cli
xchg
add
lea
imul
cmc
daa
mov
pop
aad
jmp
inc
sbb
and
or
pop
mov
imul
dec
test
cmps
mov
mov
xlat
gs
adc
jns
outs
push
push
mov
mov
adc
int3
call
popf
sbb
sahf
arpl
push
dec
xlat
push
push
pop
mov
jecxz
jmp
inc
test
jae
cmp
iret
test
out
xor
push
repnz
sti
and
(bad)
push
stos
int
neg
in
push
push
mov
lea
sub
adc
arpl
stc
pop
in
pop
push
test
test
int3
and
enter
fisttp
ret
rcl
fistp
(bad)
xlat
xchg
test
popf
add
loop
cld
das
clc
scas
(bad)
or
js
faddp
das
push
and
scas
scas
lds
leave
aad
pop
adc
push
jecxz
xlat
jp
enter
and
call
xchg
pop
test
dec
fbstp
mov
xor
mov
and
jb
cld
int3
or
xchg
adc
xlat
data16
aas
lahf
sbb
or
loop
fisub
ds
test
adc
and
dec
push
out
cs
mov
repnz
cmp
lds
jge
jne
adc
add
es
push
popf
mov
sbb
cli
cmp
sbb
cmp
lds
inc
mov
in
pop
std
in
xor
into
(bad)
out
in
xbegin
add
test
inc
aad
adc
clc
call
sahf
lea
pop
mov
daa
sub
mov
xor
jl
cmps
fcomp
cmp
js
ja
dec
clc
jnp
fwait
inc
pop
ja
repnz
mov
push
hlt
shl
bnd
ins
loop
das
or
rcr
ret
mov
aaa
out
imul
add
jnp
sub
dec
pop
out
mov
rcr
jmp
jge
adc
mov
jae
xlat
xchg
mov
fsubr
xor
repnz
jg
imul
sahf
pop
stc
jecxz
pop
sbb
mov
xchg
fistp
lea
fld
jb
mov
inc
cwde
mov
mov
test
cmc
mov
add
add
retf
adc
and
sub
mov
and
fisub
leave
imul
jmp
sbb
fs
add
lods
clc
test
mov
and
sbb
mov
out
push
(bad)
dec
mov
xlat
xor
dec
sub
ror
jmp
shr
sub
cmp
repz
cmp
xchg
adc
sti
test
scas
add
pusha
sti
scas
xlat
push
aam
jae
jnp
cwde
add
rol
mov
dec
pandn
pusha
clc
xchg
xchg
xor
cmp
xor
add
mov
xor
jmp
inc
mov
pop
xchg
mov
(bad)
fstp
fwait
repnz
dec
test
mov
inc
mov
mov
(bad)
xlat
push
or
fwait
out
mov
retf
cmp
test
add
inc
retf
fist
loopne
enter
mov
or
jl
int3
or
mov
cmp
ss
mov
cld
cmp
ficom
pop
adc
loopne
pop
xchg
cmps
movs
hlt
mov
and
add
sub
adc
add
int3
popa
or
jge
daa
mov
inc
and
xchg
cld
inc
pop
fistp
fiadd
mov
idiv
mov
mov
lds
test
add
mov
stc
in
and
aas
adc
movs
fst
xchg
pop
jbe
dec
loop
dec
dec
(bad)
sub
pushf
leave
jns
rcl
and
out
jmp
or
call
jg
ds
loope
imul
(bad)
fdiv
pop
add
movs
dec
sbb
daa
mov
cmc
lea
hlt
(bad)
fdivr
int3
les
icebp
adc
popf
fcomp
out
adc
aam
shr
aam
xchg
and
add
dec
mov
add
mov
pop
dec
aam
jb
xor
inc
cs
add
xchg
add
int3
loop
adc
xchg
shl
scas
loope
aaa
fidiv
mov
sbb
mov
jbe
pop
mov
test
stos
cmp
sahf
pop
jmp
retf
ret
enter
fnstsw
and
jb
test
in
int
das
repz
jl
ins
dec
mov
repz
neg
xchg
cmp
sub
mov
add
icebp
das
jo
sub
mov
mov
xlat
fwait
mov
mov
jecxz
in
mov
stc
and
sub
adc
push
fcom
out
add
pop
and
lods
or
ss
(bad)
sbb
cmp
(bad)
bound
pop
or
mov
mov
sub
dec
add
ja
push
fbld
inc
push
loope
rcl
sub
js
not
(bad)
call
jge
test
rcl
mov
and
inc
cld
loope
add
xchg
dec
jg
jmp
scas
outs
mov
jns
ret
retf
cs
rcl
add
dec
mov
pop
ins
rcr
inc
fwait
cmp
dec
mov
loope
mov
icebp
cmp
stos
je
xchg
sbb
jno
ds
popf
vxorps
pop
jo
ins
push
jnp
add
jmp
mov
test
dec
mov
or
ret
ins
mov
xor
lds
pop
out
dec
inc
mov
and
cwde
and
jnp
sbb
cdq
adc
fs
repz
mov
xchg
daa
mov
pushf
mov
pop
xor
cmp
div
data16
push
das
popf
mov
xlat
(bad)
pushf
inc
ret
cmps
loope
sbb
mov
stos
data16
cmova
nop
xor
sbb
and
ret
dec
pop
dec
mov
mov
aad
sub
push
push
call
and
inc
and
loope
xchg
scas
sbb
lock
cwde
xor
out
mov
lds
and
jae
mov
mov
mov
inc
fldenv
fucomp
sti
adc
ret
jbe
mov
movs
pop
xor
sbb
retf
pop
xor
mov
sub
arpl
sub
out
out
int
jmp
dec
(bad)
adc
stos
movs
ret
dec
fstp
mov
bound
jg
pop
out
repnz
fdiv
retf
ins
jecxz
imul
jg
cli
or
inc
jg
mov
icebp
cmp
and
imul
fstp
adc
aaa
mov
in
imul
xor
adc
dec
sti
or
ds
pop
or
daa
jns
add
sahf
sbb
lahf
adc
jbe
cmp
push
aad
or
adc
outs
div
test
outs
pop
arpl
or
adc
dec
fstp
scas
imul
push
jnp
sar
push
gs
mov
and
(bad)
out
in
mov
leave
or
push
push
lods
add
aam
sub
enter
mov
stos
and
clc
shl
inc
add
(bad)
mov
iret
mov
sti
dec
lahf
push
pop
push
dec
sti
cmp
and
aaa
(bad)
imul
scas
sub
sahf
jmp
in
adc
call
fs
dec
add
mov
inc
jge
sub
mov
add
mov
pop
jl
sbb
rol
xor
pop
cs
dec
jecxz
cs
jbe
mov
jbe
push
test
cwde
mov
cmp
add
dec
lea
fcmovnb
jnp
dec
ds
stc
pop
(bad)
stc
pop
inc
scas
aas
push
retf
pop
(bad)
daa
push
das
clc
xchg
fiadd
dec
retf
loopne
jmp
ficom
lahf
inc
xchg
cmp
inc
(bad)
mov
call
div
jmp
inc
scas
inc
(bad)
add
and
or
test
push
dec
pop
jp
mov
in
inc
out
hlt
mov
pop
mov
in
mov
stos
sub
xor
loope
loopne
push
mov
xlat
inc
mov
jns
pop
movhps
add
retf
jecxz
inc
mov
(bad)
mov
or
repnz
push
jg
pop
jp
mov
loopne
pop
nop
add
cmp
xchg
dec
call
out
cmc
dec
dec
push
in
mov
mov
outs
jbe
loop
inc
sbb
push
pusha
xchg
pop
or
call
ss
nop
jo
dec
or
inc
and
xor
test
test
sub
inc
pop
inc
test
cld
pop
dec
dec
ror
pop
das
mov
into
push
ins
pop
jp
xor
adc
dec
inc
xchg
push
shl
mov
dec
jae
push
pop
loop
fwait
jge
mov
sub
xor
add
addr16
clc
and
rol
xor
dec
sbb
and
sub
push
mov
test
pop
jle
icebp
pop
pop
mov
xchg
pop
test
clc
ret
in
pop
push
push
sbb
push
xchg
mov
imul
call
cmp
aas
push
and
jns
test
and
or
inc
das
mul
scas
dec
sub
xchg
pop
push
xchg
pop
retf
and
dec
popf
loop
mov
sbb
mov
push
ror
test
repz
movs
out
lods
sbb
in
xor
(bad)
pop
xchg
mov
pop
ror
or
pop
test
jp
movs
mov
es
ret
and
retf
ror
mov
in
push
push
xchg
rcl
xor
or
dec
rol
add
outs
mov
(bad)
outs
fwait
ins
dec
jp
cli
in
outs
xor
pop
ret
jge
mov
ret
call
lahf
(bad)
xchg
jne
aaa
sbb
pop
mov
cwde
ret
mov
cmps
cwde
rol
(bad)
hlt
sahf
sahf
retf
jg
pop
jle
enter
mov
int
sub
push
pop
inc
enter
mov
scas
shl
popf
dec
mov
mov
mov
stos
or
and
mov
xor
fiadd
add
mov
inc
adc
cmp
sahf
out
aaa
sbb
jg
add
pop
xchg
xchg
rol
lahf
cs
pshufw
jl
add
lahf
push
mov
in
les
xor
mov
dec
and
arpl
stc
scas
xor
pushf
retf
cld
pop
mov
aaa
or
xchg
mov
nop
ins
enter
imul
imul
sub
mov
mov
frstor
sbb
in
lock
inc
lahf
xchg
pop
test
push
xchg
outs
mov
loopne
xchg
xor
jb
pop
xchg
xchg
push
mov
or
in
and
fldcw
push
xchg
rcl
xor
jge
icebp
daa
imul
mov
lods
mov
and
push
imul
ret
jmp
jl
rcr
pushf
xchg
ins
cmp
mov
add
fcmove
pop
mov
jmp
retf
mov
mov
outs
mov
xor
mov
repz
loopne
mov
mov
dec
test
(bad)
imul
ins
and
jmp
outs
pop
jne
ja
pop
mov
neg
comiss
(bad)
jo
imul
sbb
dec
lods
(bad)
(bad)
call
(bad)
out
add
adc
fcmovb
adc
ficom
sahf
xchg
and
adc
mov
sub
out
mov
dec
cmp
xlat
outs
adc
xor
mov
xchg
or
sub
outs
fnstcw
add
xchg
icebp
shr
stc
adc
pusha
sar
popa
push
pop
jno
retf
fisubr
fdiv
xor
jle
mov
test
adc
xor
aam
lods
imul
sub
or
inc
or
rol
lahf
cs
inc
loope
addr16
scas
and
(bad)
hlt
cmp
jp
sub
sub
out
push
sub
jle
mov
add
mov
add
add
jne
mov
jg
jp
mov
jp
stc
fcomp
outs
or
dec
ror
retf
mov
(bad)
fsubp
cmp
in
pop
push
ret
pcmpeqw
xlat
pop
scas
pop
mov
shl
fild
cmps
jmp
sub
daa
sbb
mov
jo
cvtps2pd
or
dec
mov
adc
ds
mul
test
push
ret
rcl
or
imul
jl
test
movs
add
dec
or
push
dec
aad
jge
pop
ret
pusha
push
repnz
pop
xchg
sbb
mov
(bad)
cmc
imul
cmp
push
in
mov
push
cdq
cmp
data16
call
jmp
imul
mov
ja
test
sbb
inc
cmc
sbb
jns
loop
out
jl
and
adc
lahf
(bad)
data16
or
cwde
xor
aaa
fwait
(bad)
test
xlat
das
and
sti
(bad)
or
stos
dec
fisttp
jae
int3
cmp
add
lahf
into
cmp
aaa
test
ret
pop
lods
movs
ins
pop
add
ret
add
(bad)
psubsw
in
mov
jmp
adc
pop
xchg
pop
rcl
sbb
jl
or
pop
push
push
daa
in
(bad)
int3
push
dec
cli
pop
scas
sub
add
sub
sbb
iret
enter
stos
fadd
mov
test
sbb
xor
push
jno
jno
fistp
fst
addr16
or
fmul
test
daa
inc
push
sahf
daa
add
aas
shr
movs
adc
push
or
cmp
mov
call
(bad)
adc
push
push
test
and
xor
out
cmp
test
xor
fmul
sbb
and
vpaddw
add
add
scas
fdiv
inc
pop
cld
mov
fwait
and
stos
mov
cmp
out
fwait
xor
in
pop
ins
xor
mov
scas
inc
lea
and
popf
loopne
fmul
mov
pushf
pushf
dec
push
sub
mov
in
or
jg
fldz
push
or
jae
or
cmp
jno
add
lea
pop
pop
fiadd
call
adc
(bad)
mov
arpl
mov
jne
mov
mov
sahf
push
ds
jge
hlt
cmp
cwde
xchg
cmp
nop
inc
mov
aad
mov
cmp
movs
mov
or
popa
pop
inc
mov
and
adc
add
or
fdiv
cdq
das
loope
(bad)
mov
xchg
inc
jp
push
adc
es
sbb
add
push
ss
iret
sahf
xlat
push
lock
bound
mov
mov
xor
cmp
inc
add
add
pop
add
mov
mov
retf
adc
test
add
jbe
sub
gs
cmps
das
imul
sub
dec
pop
test
mov
and
ja
or
sbb
out
mov
and
pushf
mov
arpl
sub
and
js
pop
aam
ins
call
dec
push
dec
mov
cld
mov
jae
ss
inc
ss
push
or
add
js
pop
sub
retf
push
adc
repz
add
xor
mov
inc
leave
push
(bad)
mov
ds
pop
inc
out
cs
(bad)
cmp
dec
(bad)
cli
push
inc
mov
xchg
leave
pop
not
xchg
pop
in
inc
es
ds
inc
shr
sbb
in
ins
or
jg
outs
xor
dec
ja
(bad)
(bad)
mov
call
or
push
inc
hlt
xchg
xchg
add
outs
ins
inc
mov
pop
gs
addr16
clc
or
adc
mov
pop
xchg
out
dec
dec
add
cbw
inc
xor
loop
xchg
(bad)
in
fcmovnbe
enter
mov
dec
test
sti
pusha
inc
pop
cmp
rcl
lea
sub
jo
ret
inc
pushf
loopne
inc
dec
lods
xchg
out
mov
cmps
pop
sub
rcr
mov
cmp
push
scas
fs
cld
and
cwde
popf
retf
mov
or
jl
sar
call
repnz
mov
fs
dec
inc
and
fisttp
pusha
cmp
rcl
aas
or
stos
add
in
sbb
jecxz
cld
sub
adc
mov
xchg
pop
pop
push
repnz
lods
pop
or
dec
and
rol
xor
pop
xchg
or
jge
xor
xor
add
mov
hlt
pop
daa
scas
(bad)
loope
mov
div
bound
mov
push
xchg
sbb
mov
push
inc
cld
jb
add
gs
imul
push
adc
fimul
cmp
mov
shl
stos
push
in
push
jnp
push
push
ins
adc
inc
ss
push
hlt
imul
test
mov
push
add
xor
loop
pop
sahf
retf
dec
sbb
mul
mov
ret
push
hlt
inc
je
mul
cmp
sbb
jmp
sbb
pop
inc
sbb
addr16
sti
(bad)
sbb
stc
retf
jl
xchg
rol
mov
shl
dec
cmp
push
arpl
xor
outs
arpl
push
stc
pop
mov
xor
inc
add
bound
scas
scas
add
leave
popf
aad
jb
fiadd
cmps
cdq
imul
add
jno
adc
retf
das
sub
retf
call
xor
aas
push
ss
jge
lea
lahf
mov
pop
bound
call
and
jo
adc
xor
imul
or
xchg
jb
je
dec
js
addr16
jns
adc
and
xchg
adc
and
inc
sub
(bad)
repnz
cmps
or
movs
mov
fiadd
es
cmc
jnp
ja
fld
imul
cmp
inc
jbe
rol
mov
aam
shl
lahf
or
push
jnp
sub
(bad)
in
(bad)
xchg
jp
nop
je
mov
mov
adc
adc
inc
adc
jnp
or
stos
cmp
inc
xlat
out
adc
or
pop
cs
jne
xchg
add
or
xor
call
sbb
ficomp
xor
ret
stos
lods
sub
push
inc
push
sar
nop
push
lods
repnz
movs
out
imul
cmc
xchg
and
ins
repnz
clc
or
xchg
push
mov
adc
adc
pop
imul
dec
pop
push
inc
call
scas
shl
mov
fcomp
add
fs
stos
inc
cmc
inc
mov
scas
in
call
sti
pop
ins
popa
and
xor
scas
mov
dec
ins
push
dec
(bad)
sub
mov
pop
sar
es
sub
pop
dec
mov
jmp
jl
mov
cmp
jo
and
cmps
cmc
mov
adc
pop
pop
add
(bad)
xor
pop
ror
sub
imul
cmp
mov
popf
lods
fs
mov
dec
jecxz
jnp
enterw
or
xor
std
(bad)
xor
mov
(bad)
int3
jns
xchg
jbe
jne
cmc
pop
(bad)
adc
daa
xchg
mov
xchg
test
xor
daa
mov
add
lds
xchg
pop
aam
mov
clc
retf
and
jbe
shl
push
test
pop
(bad)
sbb
cmp
lock
shl
daa
imul
arpl
pop
(bad)
fs
cmp
rol
cmc
lds
pop
add
sbb
call
xchg
xchg
fcomp
in
test
cmp
(bad)
pop
dec
mov
sub
mov
ret
xchg
(bad)
in
fstp
pop
(bad)
call
out
jae
aaa
sub
in
sub
cwde
fistp
test
adc
sub
jge
push
fidivr
test
daa
inc
scas
dec
repnz
nop
fiadd
push
push
fst
jmp
and
jne
cdq
pusha
mov
pushf
cs
fstp
ss
stos
dec
pop
dec
iret
jp
dec
jbe
cmps
out
into
push
dec
xor
imul
adc
aaa
pop
cmp
mov
xchg
jmp
popf
jbe
push
pop
ret
mov
sub
lods
pop
les
in
push
mov
sahf
out
test
jb
dec
cmc
mov
imul
cli
jmp
neg
popf
mov
pop
mov
jae
pop
cmp
mov
fmulp
aad
jmp
sti
int3
sbb
leave
dec
daa
adc
sub
repnz
inc
test
add
and
push
lock
adc
addr16
test
cmp
movntq
mov
call
pop
add
pop
mov
jne
loope
inc
stc
xchg
cld
jno
mov
inc
aas
and
sbb
sbb
pusha
cmp
test
mov
stos
pop
int3
mov
xchg
shr
aad
hlt
inc
ins
jl
mov
scas
adc
lahf
ret
xchg
(bad)
cmc
add
pusha
sub
mov
and
sahf
(bad)
jecxz
xchg
pmullw
les
push
test
test
inc
sbb
inc
jle
cli
inc
(bad)
mov
int3
movs
push
jo
inc
rol
retf
mov
add
push
mov
pop
mov
in
xor
pushf
xor
mov
sub
inc
lock
in
mov
aad
and
or
or
mov
outs
mov
(bad)
push
scas
push
aaa
pop
ds
mov
push
cmp
xor
out
ins
xchg
int3
(bad)
xor
popa
adc
jno
mov
sub
xchg
cmps
mov
mov
stos
or
pop
push
sahf
mov
scas
fadd
add
jge
scas
xor
inc
cwde
jno
cld
add
lahf
pop
icebp
pop
push
lahf
mov
sbb
call
fldcw
mov
adc
mov
adc
gs
leave
imul
loope
mov
mov
in
dec
iret
pop
jmp
inc
inc
test
mov
jmp
aam
mov
je
syscall
xlat
loopne
fiadd
mov
pop
scas
out
push
loop
loop
xor
leave
xor
or
les
xchg
adc
mov
jne
cmps
sub
ins
jge
pop
adc
out
push
jne
ins
cmp
and
dec
mov
enter
cmps
jle
repnz
aas
mov
dec
rcr
dec
inc
jae
xor
inc
sub
js
push
fidivr
sbb
jns
dec
es
mov
movs
sub
mov
add
mov
mov
(bad)
sar
mov
mov
cli
and
push
add
sub
jg
leave
(bad)
sub
jle
paddq
xor
(bad)
mov
xor
add
mov
test
nop
in
div
ror
enter
call
mov
adc
sub
inc
sub
rcr
cmp
ss
dec
mov
jbe
rol
ficomp
iret
pop
dec
jnp
jmp
icebp
push
test
push
(bad)
popa
push
call
out
or
mov
cmps
fcom
add
cdq
sahf
or
dec
mov
inc
adc
pop
push
xor
dec
xchg
or
sbb
or
and
pop
pop
mov
aas
repz
imul
push
bound
pusha
fwait
daa
jl
sub
inc
pop
jmp
inc
mov
xor
test
out
loope
mov
fst
mov
js
repz
adc
jecxz
push
pop
xor
cmps
test
(bad)
mov
and
sub
mov
jge
loop
lahf
test
mov
loope
fdivr
xchg
mov
add
jns
jb
mov
sar
pop
lods
mov
and
xchg
jnp
jnp
aad
jno
sub
repz
loopne
xor
mov
cmps
js
lods
adc
cli
mov
sbb
fs
dec
popf
test
fisub
mov
fist
or
jmp
inc
shl
lods
retf
stc
dec
test
mov
loope
xchg
aam
and
cmp
push
jb
ficom
sub
daa
lods
jmp
dec
fbld
add
jb
and
or
cmp
cmp
xchg
cld
xor
test
test
in
les
sub
out
mov
or
cmps
mov
movs
ffreep
lahf
cdq
stc
xor
fdiv
add
sbb
sub
cmp
cmc
xchg
and
xor
add
add
fwait
pusha
mov
dec
outs
add
call
jge
mov
in
sbb
jp
je
or
push
adc
leave
adc
lahf
push
jge
push
repnz
leave
test
ret
pop
mov
test
ins
add
pop
jno
push
ret
mov
int
fisub
mov
jno
cmc
push
xor
(bad)
dec
mov
pop
shl
add
push
popf
mov
mov
inc
in
movs
aaa
xchg
push
scas
sub
inc
xchg
(bad)
psrad
add
hlt
push
sbb
mov
push
sti
or
jnp
in
cwde
jbe
inc
jb
scas
clc
leave
in
and
daa
inc
jp
adc
jno
loope
jnp
adc
dec
je
jg
pop
fst
ss
in
push
ja
fcmovbe
stos
imul
and
mov
dec
cmp
shr
jo
pop
dec
push
adc
lea
test
dec
and
enter
bound
cmp
jl
add
sbb
mov
mov
out
call
push
xlat
or
mov
add
fnstenv
inc
or
cdq
push
cmp
test
mov
mov
dec
or
(bad)
pop
xchg
push
cld
adc
sar
jmp
sbb
adc
sahf
and
xchg
xchg
imul
push
fdiv
mov
or
rcr
inc
ror
leave
jno
retf
mov
mov
scas
mov
sahf
int3
push
lds
inc
pusha
loope
sbb
xlat
fst
pop
movs
inc
adc
clc
sub
jge
or
imul
lock
and
dec
mov
enter
xchg
lods
pop
or
adc
mov
mov
dec
ins
(bad)
and
retf
bound
xchg
push
stc
imul
retf
scas
inc
mov
fwait
(bad)
sbb
push
popf
jno
and
je
add
cmp
outs
ds
ss
sbb
arpl
js
mov
dec
sahf
in
hlt
ror
stos
cld
stos
cmp
pop
enter
jecxz
out
inc
fstp
xor
iret
jb
mov
pop
repz
cmp
nop
lock
pop
leave
cmp
mov
or
xor
clc
stos
or
cld
push
leave
push
mov
iret
cld
retf
jo
call
daa
sbb
cmp
push
adc
shl
pop
test
inc
cld
mov
lds
mov
int3
jecxz
(bad)
arpl
scas
xor
inc
cmps
mov
cmps
cmps
mov
idiv
out
jne
call
sbb
mov
jno
sbb
adc
dec
jns
stos
mov
jne
sbb
sbb
cld
addps
sbb
out
xor
ss
lds
inc
sub
mov
jne
popa
in
jp
jno
imul
das
sub
cdq
iret
fs
cwde
inc
xchg
in
arpl
jnp
scas
int
fidiv
pop
int
jge
cmp
stos
add
es
pop
sar
sub
int3
jmp
jne
inc
fadd
mov
jbe
pushf
inc
push
popf
jecxz
push
jmp
mov
jp
out
mov
repnz
and
push
inc
inc
cs
push
(bad)
push
rcr
xlat
pusha
add
ins
cmps
adc
push
cmp
push
shr
inc
cmps
fidiv
xor
xchg
pop
adc
jmp
or
fidivr
popf
or
stos
scas
mov
sbb
rol
push
push
into
les
pop
xor
rol
inc
or
jno
sbb
test
cmp
dec
call
retf
lock
std
test
mov
scas
mov
out
jecxz
push
out
outs
cli
or
in
inc
push
mov
js
xchg
ret
bound
add
sub
mov
jecxz
aad
jl
fidivr
mov
enter
push
repnz
jmp
sub
xor
pop
xchg
sti
outs
xchg
frstor
mov
(bad)
mov
loopne
outs
(bad)
pushf
inc
stc
pop
and
ror
inc
push
movs
sub
xor
sub
cmp
int
in
sub
shr
pop
pop
loope
popa
test
ds
mov
lods
and
fsubr
ffreep
outs
js
pushf
bound
lds
jp
mov
and
mov
mov
mov
mov
fisub
jo
mov
push
call
or
mov
clc
sub
(bad)
add
xor
enter
dec
ds
xchg
jo
add
mov
or
neg
(bad)
sub
ins
ret
sub
(bad)
jae
out
in
sub
xor
in
nop
test
aad
repz
jmp
in
(bad)
imul
push
jl
adc
xor
jl
inc
leave
jp
lahf
pop
add
jns
out
jbe
(bad)
inc
inc
hlt
xor
lods
dec
ja
xchg
arpl
add
xor
sbb
xlat
retf
pop
pop
fdiv
les
cmp
xor
sbb
out
mov
fmul
or
pop
add
inc
lods
xor
add
mov
test
(bad)
push
addr16
cli
mov
xor
dec
out
and
stos
mov
add
dec
mov
push
aaa
inc
daa
mov
mov
and
fwait
enter
(bad)
mov
cdq
mov
fsubp
sub
loop
addr16
pop
and
scas
jnp
sub
dec
push
pop
dec
bound
int
dec
in
or
aad
dec
lock
jmp
dec
bound
xor
js
enter
xor
out
xchg
inc
out
jb
arpl
xor
add
in
ins
int3
mov
fnstenv
imul
sti
pop
pop
leave
push
pop
push
imul
xchg
fcom
and
sub
jne
(bad)
je
jnp
push
or
sub
adc
lea
ins
aaa
adc
(bad)
jle
sbb
or
xor
xor
jbe
push
and
jns
hlt
push
clc
(bad)
push
adc
call
(bad)
jle
ror
(bad)
push
retf
pop
dec
inc
(bad)
mov
aas
mov
lock
movs
sar
hlt
mov
and
scas
xchg
scas
xchg
jae
(bad)
scas
sub
movs
mov
jo
adc
test
std
add
cmp
dec
in
pop
inc
cmps
and
aam
jb
popa
cmp
test
mov
mov
enter
dec
loope
out
je
ror
push
rsm
leave
sbb
add
cmp
dec
jae
push
mov
popa
jmp
and
dec
outs
inc
add
mov
std
scas
cmp
mov
mov
enter
dec
add
adc
mov
in
cdq
cdq
ror
data16
jg
dec
mov
(bad)
sub
addr16
mov
or
inc
ins
pushf
sub
jp
adc
dec
sti
add
lods
push
sub
jno
test
pop
add
jbe
lock
scas
outs
sub
dec
sub
push
mov
push
std
ins
jae
and
cld
pushf
dec
pop
fdivp
popa
sbb
xor
and
cld
sti
stos
mov
mov
jo
stos
or
xor
dec
jnp
sub
and
mov
loopne
jo
ja
cmp
inc
add
push
lods
and
sbb
sub
cmc
mov
daa
ins
xchg
(bad)
xchg
out
xor
push
(bad)
xor
inc
sub
jmp
aas
movs
test
(bad)
dec
lods
cmp
imul
sbb
jnp
add
sub
imul
loope
mov
mov
popw
call
(bad)
lea
mov
or
dec
xor
and
pusha
test
push
pop
out
xor
pop
xor
mov
inc
nop
imul
push
mov
xchg
add
std
jo
xchg
xchg
sub
cld
sbb
push
push
sbb
js
in
movs
retf
adc
push
sbb
inc
mov
dec
rol
(bad)
dec
cmps
or
pop
das
and
adc
xor
dec
mov
or
xchg
xor
stos
pop
or
stc
pop
mov
adc
inc
and
pop
out
xor
aas
lods
out
test
das
inc
and
lock
inc
lea
dec
or
mov
or
dec
data16
pop
pop
mov
dec
adc
cmp
mov
ins
dec
cmp
jns
or
rcl
sub
jo
ins
in
ret
jmp
test
cmp
fdiv
cmp
and
adc
push
test
(bad)
push
out
jnp
and
jl
es
push
nop
dec
test
or
mov
ret
ss
push
cmp
outs
out
dec
call
stos
(bad)
mov
jecxz
sub
sbb
jae
clc
popf
adc
adc
mov
mov
sbb
jb
fwait
sub
stos
fwait
mov
je
int3
test
jne
out
push
and
stos
sub
dec
das
sub
cwde
loop
mov
xchg
mov
fisttp
add
(bad)
int3
test
arpl
or
cmp
enter
pop
and
dec
fucomi
sub
cdq
cld
pop
and
pushf
(bad)
ins
dec
sbb
mov
into
inc
ds
jno
popa
inc
add
lock
(bad)
int3
or
mov
sub
cwde
push
loop
dec
fldcw
jno
mov
int3
ror
dec
or
(bad)
cmc
and
add
stc
add
ficomp
pop
daa
iret
in
push
push
jbe
adc
jg
cmps
xor
xchg
mov
pop
pop
xchg
pop
(bad)
jp
xchg
dec
jbe
xchg
inc
xchg
(bad)
sub
(bad)
mov
lock
dec
xor
jns
ficom
rol
retf
pop
push
xor
pminsw
ficomp
xchg
fstp
(bad)
aaa
les
xor
pop
ret
scas
inc
or
jbe
daa
loope
cmps
bound
sahf
mov
pop
and
or
std
dec
sub
mov
in
js
push
sar
sti
sar
pop
cld
xchg
adc
out
stos
jmp
sub
jno
fsubr
jno
ret
cmp
fst
ret
cmc
dec
xchg
push
stc
xor
sbb
nop
mov
fidivr
cmp
jmp
jo
mov
mov
enter
mov
fidiv
add
dec
inc
and
or
jne
pop
ds
aas
pop
fst
shl
std
xchg
dec
popf
dec
and
(bad)
cdq
fdivr
mov
sub
xchg
or
retf
imul
fs
mov
out
add
call
mov
mov
jg
pop
dec
cs
sub
jmp
add
jne
dec
mov
xor
cmp
add
sub
das
mov
stos
call
fwait
or
ja
movs
(bad)
jge
iret
pop
popa
xor
pop
mov
test
mov
addr16
fcmovne
dec
(bad)
sbb
sub
movs
sahf
adc
lods
push
cld
push
sar
push
or
scas
lea
pop
mov
xchg
cmc
jecxz
add
jbe
stos
fnstenv
sub
adc
push
lds
in
leave
cmp
mov
test
sub
popa
sub
pop
lds
and
ins
int3
hlt
mov
mov
fsub
pusha
js
rep
mov
mov
cli
pop
sti
mov
push
pop
dec
mov
sahf
and
jne
fnstenv
fnsave
lds
mov
mov
ror
cmp
mov
out
cmp
mov
nop
cmp
xchg
cmp
fucomp
add
sub
adc
mov
xchg
dec
adc
cmp
jmp
mov
xor
add
pop
out
cmp
aas
repz
arpl
arpl
stos
xlat
aam
cli
add
dec
pop
fwait
(bad)
fdivr
(bad)
fsub
aaa
inc
pop
out
inc
sbb
clc
mov
outs
and
xor
ins
pop
inc
(bad)
sbb
push
mov
sub
jmp
rcl
fwait
adc
pop
outs
hlt
xchg
jecxz
inc
(bad)
jno
xchg
int3
mov
jno
xor
dec
xchg
mov
cmp
and
sub
mov
aaa
cmps
push
cmp
dec
js
mov
xor
xlat
jmp
mov
adc
out
mov
sub
pop
jmp
shl
pop
mov
mov
pop
idiv
jle
iret
fsub
jmp
sbb
mov
loopne
nop
sbb
cld
jne
sub
cmps
(bad)
and
inc
mov
sbb
sub
scas
xor
inc
lahf
test
lds
push
add
mov
cmp
stc
sub
out
and
pushf
ins
pop
add
lock
sub
or
adc
das
or
or
cmp
jp
fmul
xchg
or
pop
sub
jp
push
add
or
loope
out
dec
dec
jnp
lea
shl
pop
cli
xor
popf
sub
xchg
mov
mov
jb
cld
inc
into
sub
sbb
nop
xor
arpl
mov
cs
rol
xor
and
add
sbb
retf
cmps
pushf
cmp
jnp
add
das
pusha
xchg
shl
push
inc
and
mov
retf
std
(bad)
dec
retf
pop
dec
aam
fcmovbe
sub
daa
pusha
cmp
add
adc
cmps
and
xor
and
retf
leave
ror
fstp
push
cmp
push
xor
in
add
int3
push
cmp
imul
mov
xchg
dec
jmp
sbb
dec
test
popa
inc
retf
jmp
mov
ins
adc
dec
cmp
jne
inc
mov
xor
dec
and
xchg
cmp
ret
push
xor
and
hlt
(bad)
jp
gs
aam
xchg
ss
sbb
xor
push
ds
jo
pushf
pop
pop
cmc
fcomp
mov
out
movs
jno
sub
mov
pop
ret
fcom
ja
ins
inc
mov
xchg
adc
icebp
mov
cmp
cs
cmp
jecxz
inc
jns
stos
jb
and
jge
cmp
aaa
fist
and
imul
fmul
pop
out
sub
pop
mov
mov
push
stc
aad
fs
xchg
lods
jge
ins
cli
fisub
dec
retf
or
xor
mov
sub
sub
push
in
jmp
mov
xchg
fist
(bad)
outs
shl
pusha
mov
bound
jmp
or
and
(bad)
aad
push
loopne
scas
call
stos
mov
pop
out
xor
(bad)
aas
int
pop
xchg
(bad)
xchg
pop
pop
icebp
jg
call
adc
jnp
dec
ret
jmp
pushf
inc
movs
mov
hlt
(bad)
sar
js
xor
xor
pop
push
mov
push
les
enter
(bad)
adc
and
pop
jmp
dec
inc
sbb
push
inc
xor
xor
add
scas
xchg
add
xabort
add
cmps
xchg
fdiv
pop
inc
iret
xor
inc
mov
in
dec
xchg
jmp
mov
popf
jl
test
aas
jmp
pusha
add
mov
loope
cwde
pop
mov
xchg
adc
aaa
adc
sbb
mov
add
leave
dec
push
sub
lods
mov
pop
mov
(bad)
fimul
xchg
add
sbb
mov
and
mov
(bad)
sahf
push
or
push
rcl
add
cld
rcl
sub
pop
sub
sti
arpl
lea
xchg
test
pop
sbb
mov
sub
movs
(bad)
dec
jnp
cmc
ror
jbe
pushf
sub
retf
scas
(bad)
push
fdivr
mov
push
xor
pop
and
ret
pop
fadd
dec
retf
stos
sbb
data16
pop
pop
js
pop
dec
outs
aam
iret
retf
inc
push
mov
adc
mov
shl
lock
stos
xor
cmp
cmp
stc
into
mov
bound
jns
mov
out
jmp
aaa
inc
scas
xor
sbb
jecxz
popf
ins
mov
enter
cdq
arpl
cmps
add
daa
pop
jbe
test
sbb
mov
xchg
mov
pop
push
or
ds
mov
pusha
and
and
cmp
pop
mov
lea
xor
hlt
fnstcw
push
(bad)
ins
pop
xor
pusha
lea
pop
push
sbb
mov
xor
mov
push
xor
jae
jg
mov
repnz
daa
dec
inc
xor
xchg
arpl
int
xchg
dec
shr
mov
mov
adc
push
or
scas
imul
int
xor
arpl
xor
stos
jo
inc
mov
xchg
std
inc
pushf
out
(bad)
mov
push
mov
ja
add
(bad)
addr16
ss
mov
test
lds
jg
sub
sar
cmp
bound
(bad)
outs
cwde
xchg
add
sub
call
push
sbb
xor
adc
aad
test
pusha
mov
loop
fld
cmp
mov
loope
xlat
(bad)
cmp
mov
xchg
loop
dec
mov
aas
pop
inc
add
cld
mov
push
popa
adc
mov
or
push
fcomp
jge
frstor
pop
or
sbb
cmp
lds
leave
sub
sbb
inc
sbb
mov
mul
je
xchg
hlt
push
and
jle
in
pop
(bad)
xchg
loopne
hlt
lods
dec
scas
sbb
xor
mov
ds
xchg
dec
add
(bad)
jne
or
lea
leave
mov
jnp
pop
fcmovb
mov
arpl
xor
push
ret
mov
ror
push
inc
sub
jno
jp
iret
or
ret
mov
icebp
ja
sub
pop
sbb
fisubr
dec
cdq
dec
mov
sbb
jg
push
fsubr
outs
and
scas
adc
loope
or
xor
adc
fidivr
pop
aas
jge
inc
pop
push
ret
inc
add
jmp
fcmovne
and
addr16
push
jmp
xor
data16
fcom
mov
push
and
sbb
cwde
sub
rcr
test
add
pop
sub
aas
sti
jbe
cmp
icebp
push
and
mov
dec
xchg
jno
retf
test
jg
xchg
es
inc
inc
(bad)
cdq
dec
adc
test
xchg
pop
or
ficom
icebp
jns
aad
cs
sbb
cdq
xchg
data16
cmp
add
(bad)
cli
(bad)
add
xchg
dec
sub
pusha
or
test
ds
mov
iret
push
dec
jmp
inc
inc
jmp
xchg
xchg
add
jmp
stos
mov
xchg
mov
sbb
add
repz
xchg
push
sub
test
(bad)
mov
add
push
xlat
scas
jo
inc
scas
cwde
(bad)
jmp
call
rcr
in
je
xchg
pop
sub
loopne
retf
test
cld
sub
jmp
push
out
mov
push
pop
movs
pop
repnz
fld
inc
dec
loopne
hlt
mov
push
mov
inc
inc
push
inc
mov
ja
test
imul
add
jmp
pop
imul
jle
fcmove
cmps
sbb
xor
fcomip
push
repz
ror
call
test
enter
adc
test
sub
push
cmc
mov
ret
jne
pop
xchg
ja
push
sbb
js
or
das
pop
out
in
sbb
sbb
retf
out
mov
pop
push
cmps
push
adc
ds
int
cs
sar
add
cmc
sbb
bound
mov
repz
sub
pop
jnp
je
in
inc
leave
cmp
xlat
and
out
pop
add
push
or
jo
pop
xchg
ja
leave
push
lods
jge
scas
pusha
pop
xor
sti
add
jae
fld
or
cli
ss
loop
mov
jle
mov
mov
repnz
test
loop
stos
rcl
dec
fsub
adc
cmp
sbb
ins
sub
adc
ret
imul
cmps
ret
clc
dec
mov
mov
pop
add
out
push
xchg
mov
pop
mov
inc
mov
int3
jno
cmp
xchg
jno
dec
dec
movs
addr16
and
mov
data16
js
std
imul
ror
and
in
xor
inc
hlt
sahf
xor
fisubr
jmp
adc
leave
adc
xchg
xor
and
das
packssdw
jmp
jg
inc
xchg
imul
and
push
jbe
xor
cmp
sub
sub
fdivr
xchg
mov
jp
lock
or
fistp
xlat
xchg
ss
movs
xchg
addr16
xor
inc
lds
mov
ins
xchg
pop
retf
sbb
pop
xchg
mov
mov
inc
sbb
mov
push
push
xchg
stc
push
xchg
mov
xchg
xchg
mov
(bad)
jns
and
mov
inc
push
pop
sti
data16
aad
fxch
mov
out
sahf
in
mov
push
iret
mov
retf
cwde
xchg
daa
adc
mov
jno
jle
mov
fisttp
sar
mov
jne
fwait
pop
add
in
out
mov
mov
sub
mov
cmp
xchg
inc
jbe
mov
outs
sti
sub
or
jl
xchg
push
cwde
xlat
js
push
mov
test
jns
push
or
(bad)
repnz
mov
mov
test
cmp
dec
ret
add
call
idiv
stc
imul
mov
sub
shr
out
sar
pop
jns
ret
leave
adc
inc
push
outs
jb
pop
mov
scas
cmp
lock
lods
ins
fisubr
xlat
stos
pop
cmp
xchg
shl
jmp
into
loopne
mov
cs
sahf
sbb
xchg
std
inc
in
ret
xchg
enter
arpl
mov
pop
ret
das
xor
jg
jne
fwait
sar
sub
jb
mov
cmp
jno
ss
call
mov
or
test
test
push
add
mov
push
sub
leave
mul
cmp
dec
add
and
outs
mov
jge
sahf
in
push
mov
pop
or
xchg
cmps
pop
push
dec
xchg
xor
dec
ins
jb
inc
mov
pop
int
pop
ins
add
cmps
cmp
sub
cld
xor
jmp
pop
mov
fdivr
cmps
bound
push
retf
jno
nop
or
je
cmp
mov
div
fwait
xchg
fsubrp
sti
enter
pop
pop
popa
aam
fnstsw
icebp
pusha
test
out
arpl
jne
or
mov
xchg
adc
sbb
xchg
dec
neg
add
dec
in
sub
sar
pushf
rcr
fucomp
popf
cmps
jo
xor
cli
(bad)
leave
push
cld
inc
add
ds
bound
sub
jmp
push
mov
sti
hlt
xor
call
jno
xlat
push
jl
call
(bad)
xchg
hlt
and
inc
std
shl
cmp
scas
in
xchg
sub
jo
stos
dec
or
cmps
fsub
sti
jmp
call
sub
aas
pop
mov
sahf
mov
inc
cmp
xor
jp
jnp
mov
fmul
xchg
out
scas
xchg
dec
pop
or
xacquire
inc
push
js
inc
or
mov
mov
pop
mov
xchg
cmps
out
or
and
shr
ins
dec
push
mul
mov
loope
(bad)
xor
cmp
mov
pop
out
test
les
scas
sub
mov
scas
dec
outs
movs
ss
jb
cmp
dec
xor
push
mov
jl
lock
setg
jmp
dec
push
mov
or
mov
mov
ins
jl
(bad)
fisttp
cmp
imul
rcl
out
scas
outs
mov
inc
stc
mov
inc
leave
sub
push
jb
enter
js
fldcw
sub
add
andnps
idiv
dec
pop
pop
mov
in
loopne
jp
pushf
pushf
push
lock
lods
adc
idiv
mov
pop
push
xchg
cli
sar
xor
cld
retf
jmp
je
cmp
add
pop
jmp
or
jne
or
aam
mov
in
cld
aas
ficomp
fnstsw
adc
mov
push
push
test
mov
or
leave
scas
inc
out
bound
inc
xor
mov
xor
test
test
or
sbb
mov
mov
stos
dec
sub
adc
ds
sub
les
and
jns
mov
xor
lods
mov
jge
scas
sahf
inc
test
inc
neg
in
test
dec
cmp
sub
mov
inc
add
hlt
cmp
sub
les
xorps
pushf
out
and
xor
retf
loop
outs
test
xchg
in
inc
retf
mov
je
imul
jbe
sub
fcmovnb
aas
ficomp
std
fcom
cli
inc
test
push
out
leave
pop
ror
mov
or
fstp
jp
jmp
push
pushf
xchg
sub
sbb
retw
push
jmp
mov
iret
or
or
inc
aas
inc
push
xchg
or
fwait
mov
je
lods
cmp
jecxz
inc
shl
mov
jb
inc
cmps
push
shl
lahf
aaa
cwde
test
xor
leave
or
ret
xor
iret
mov
sbb
push
inc
and
fs
mov
enter
push
mov
jns
ffreep
sbb
cmc
dec
dec
les
mov
frstor
int
push
push
nop
iret
sti
xchg
(bad)
adc
cmp
test
jns
xchg
retf
lods
leave
mov
mov
cmc
sub
or
arpl
fwait
mov
rol
loopne
cmps
fwait
lds
push
jl
(bad)
pop
dec
mov
push
push
popa
fnsave
inc
scas
ret
add
pop
inc
shr
or
pop
inc
and
jg
jge
aam
sbb
add
push
popa
or
cli
ret
rcr
mov
nop
cld
lds
dec
cdq
arpl
pop
andps
cmps
inc
(bad)
mov
nop
inc
xchg
push
add
inc
dec
add
rcr
pop
mov
ret
push
mov
push
iret
daa
fdiv
mov
data16
outs
adc
xor
(bad)
fidivr
jne
mov
cwde
mov
fdiv
sar
ins
add
jl
fs
mov
pop
jge
fwait
and
mov
jae
retf
adc
sbb
cmc
dec
loop
dec
aaa
out
cmp
mov
(bad)
jmp
scas
inc
hlt
jo
pop
cmp
cmc
sti
inc
mov
pop
cld
or
enter
or
sub
jns
fwait
cmps
test
retf
shl
mov
push
xor
sbb
push
mov
xchg
sbb
fiadd
xor
adc
mov
es
mov
mov
aad
or
imul
mov
bound
xchg
dec
push
and
cmps
xor
fwait
xchg
popf
add
pop
mov
cmp
and
sbb
or
fldenv
push
and
addr16
js
arpl
add
(bad)
sti
xor
mov
call
cmc
cmp
test
add
mov
jle
cmp
jae
or
jp
pop
pop
push
call
jns
push
test
dec
sub
jb
xchg
push
cmp
mov
dec
fldenv
(bad)
std
icebp
mov
dec
pop
jno
cdq
push
addr16
mov
pop
xor
lods
jno
dec
sbb
sti
add
sbb
mov
or
fs
sar
ret
addr16
adc
(bad)
mov
xchg
push
adc
jns
and
mov
push
mov
(bad)
popf
scas
test
push
dec
clc
mov
xor
mov
data16
fsub
clc
in
push
test
retf
push
rcr
out
pop
lods
add
pop
and
lds
(bad)
dec
sub
clc
je
dec
fcom
and
xchg
cmp
mov
pop
icebp
int3
and
mov
push
mov
mov
mov
(bad)
ror
loopne
pop
and
es
adc
jne
inc
fcomp
das
inc
or
in
test
mov
push
adc
hlt
in
push
pop
shl
stc
jl
inc
sbb
sbb
dec
(bad)
scas
lock
ja
inc
mov
cli
mov
(bad)
pop
(bad)
(bad)
test
int
popa
sub
les
or
out
stos
cmp
or
scas
movs
mov
repz
into
mov
mov
and
fdiv
inc
sahf
push
outs
push
mov
arpl
jecxz
add
in
mov
jp
lock
pop
cld
sbb
scas
lahf
ret
inc
pusha
(bad)
stc
mov
fstp
push
aad
mov
jle
sbb
mov
add
imul
dec
mov
xchg
mov
xchg
pop
enter
push
xor
stos
test
popa
movs
repnz
cmp
retf
lock
or
jg
fisubr
shl
pop
push
hlt
sbb
mov
cmovb
push
sub
or
call
mov
jecxz
icebp
xchg
push
push
push
into
aas
sar
shl
sub
dec
xlat
inc
int3
lock
sbb
dec
add
imul
in
sub
aaa
not
xchg
push
add
push
dec
fsub
rcr
sar
jns
sbb
adc
pop
push
out
gs
mov
repnz
mov
loopne
xchg
inc
jnp
imul
in
into
push
add
or
clc
ror
ror
adc
xchg
mov
cmp
or
ins
adc
mov
jne
pop
dec
fsub
mov
int3
div
xchg
daa
(bad)
and
frstor
hlt
xchg
ja
dec
add
pop
push
add
loopne
rcr
cli
(bad)
xchg
dec
lods
hlt
pop
jo
cs
inc
jb
dec
loop
imul
inc
mov
mov
es
jp
bound
sbb
call
ins
outs
out
es
cmp
inc
or
pop
pop
add
mov
pop
dec
xor
in
imul
out
rol
or
mov
mov
jo
mov
sbb
jno
xor
mov
xor
ss
or
je
mov
dec
jmp
xchg
sbb
xchg
in
jp
mov
cmp
(bad)
(bad)
mov
cmp
and
out
sub
retf
jmp
xor
push
mov
fsubr
or
push
xchg
fdivr
cmps
jo
mov
(bad)
sbb
jne
push
mov
sbb
sub
or
test
jns
iret
sar
mov
jo
xor
xor
jl
cmc
dec
cmp
push
enter
mov
sub
out
pop
cmc
inc
push
push
xchg
pop
add
and
push
mov
push
sahf
pop
sub
sbb
push
jb
sbb
in
mov
sub
fimul
dec
test
mov
cmp
ficom
xor
sbb
pusha
gs
int
inc
aad
fild
popf
js
pop
xor
cmp
sahf
les
out
xchg
test
sbb
rol
jl
fwait
rcl
ss
ins
inc
xchg
xchg
adc
loope
dec
jmp
pop
ds
test
call
and
mov
cdq
add
or
mov
clc
out
popf
addr16
inc
xor
popf
mov
sar
mov
adc
or
xchg
sub
add
aas
inc
pop
dec
push
pop
loopne
jle
mov
into
cmp
ret
pop
ins
arpl
inc
pop
out
sbb
cmp
xor
add
and
shl
adc
mov
dec
mov
jle
mov
imul
pop
push
(bad)
push
xor
adc
ret
pop
and
pop
adc
jecxz
mov
jl
loop
out
pop
inc
inc
in
add
jle
popf
(bad)
enter
adc
(bad)
mov
add
push
lock
mov
inc
out
aam
jnp
or
cli
xor
ror
cmp
stos
into
mov
mov
sbb
mov
push
call
mov
dec
jnp
sti
ins
lds
lods
push
xor
popf
adc
outs
push
cmp
add
push
xlat
sbb
or
outs
push
sub
ja
add
mov
add
add
mov
mov
jl
call
xchg
mov
jbe
lods
dec
pop
jecxz
push
jns
(bad)
push
or
fdivrp
add
or
mov
jg
mov
xchg
sbb
sub
push
into
inc
cmp
and
pop
es
fucom
jecxz
aam
out
addr16
xor
mov
out
pop
shl
fsub
and
dec
xchg
jnp
in
xor
js
sbb
sbb
std
movs
dec
(bad)
nop
out
cdq
scas
mov
movs
xchg
mov
adc
dec
in
fsubp
add
data16
aas
jg
mov
test
lods
and
loopne
push
in
xor
enter
repnz
jmp
js
lds
fwait
pop
push
mov
add
outs
cmp
xor
inc
call
or
mov
and
mov
jne
jmp
jg
in
cld
fwait
das
cwde
cli
(bad)
scas
lods
test
lods
aaa
xchg
inc
nop
or
(bad)
repz
out
mov
jl
mov
inc
in
in
or
xchg
add
pop
inc
or
push
xchg
(bad)
(bad)
out
test
into
(bad)
repnz
sahf
scas
mov
jno
mov
(bad)
mov
xchg
inc
sbb
test
sub
mov
test
jmp
repz
ss
inc
adc
xchg
sbb
jno
xchg
mov
mov
popa
cmps
nop
push
mov
sub
pop
pop
or
sub
outs
outs
and
inc
push
loope
push
and
and
cmp
fucomi
imul
mov
or
add
scas
inc
cmps
push
movs
mov
adc
ss
and
ror
mov
pop
jecxz
imul
sbb
in
pop
(bad)
outs
dec
or
movs
(bad)
sub
cmc
retf
and
sub
xor
sar
mov
loop
cmps
cmc
dec
fs
fucom
and
shufps
and
dec
jmp
imul
jp
lahf
push
adc
mov
sti
shr
repnz
ja
pop
inc
dec
fldl2e
inc
data16
xor
fldcw
jle
fisttp
xor
sahf
pop
bndstx
or
mov
addr16
dec
pop
loopne
ss
dec
or
fst
(bad)
sti
ja
jle
shl
fild
loopne
adc
sub
mov
mov
ss
pop
cwde
mov
daa
outs
loop
push
add
rcr
mov
cwde
pushf
and
inc
adc
in
addr16
(bad)
or
scas
scas
xlat
pop
push
mov
scas
xchg
out
dec
(bad)
fst
cwde
repnz
stos
call
stc
mov
jp
into
test
test
mov
jmp
bound
cmp
repnz
test
icebp
cli
repnz
out
pop
pop
test
mov
push
ds
xor
jne
(bad)
mov
mov
jmp
and
loopne
test
xor
clc
ret
jmp
rol
add
sub
mov
icebp
fnsave
jl
bound
pop
mov
stc
hlt
sbb
stos
bound
mov
nop
xchg
jge
sub
retf
jge
cld
(bad)
neg
repnz
pop
inc
movs
mov
jbe
fild
repnz
test
xor
fcmovnu
dec
jbe
adc
pop
(bad)
out
test
xchg
imul
cmp
sub
pop
repz
addr16
ror
mov
pop
fisub
cmp
in
fdivr
(bad)
fsub
loope
popf
jae
inc
push
ret
and
jne
mov
stos
mov
xchg
add
movs
or
fnstcw
or
xchg
mov
sbb
rcl
xor
jle
out
shl
adc
xchg
sbb
inc
xchg
push
call
fstp
pop
in
cmc
xor
lea
sub
sti
fsubrp
shl
lea
push
fcmovnbe
ror
inc
mov
sub
push
stos
adc
dec
cmc
repz
pop
jp
mov
add
or
adc
fld
sbb
(bad)
and
in
(bad)
xchg
jo
inc
fs
inc
retf
clc
push
imul
pop
jmp
aas
push
int
frstor
popa
dec
inc
mov
or
mov
jp
jle
mov
cmp
xor
sub
or
pop
pop
inc
and
jl
ret
loopne
add
stc
inc
mov
rol
sbb
jl
shl
pusha
or
cmps
mov
fsubr
into
jbe
jbe
movs
mov
push
aam
jns
ret
shl
xchg
add
xor
test
test
hlt
retf
pop
in
xor
test
sti
mov
inc
add
pop
add
pushf
jl
pop
int
cmc
add
jae
push
sbb
and
je
cld
xchg
inc
hlt
pop
aas
sub
out
das
mov
les
push
(bad)
movs
mov
sub
sbb
repz
sti
or
or
mov
aaa
inc
add
or
xchg
pop
push
aad
mov
dec
outs
push
popa
sub
out
fcom
je
dec
inc
das
sub
push
nop
sti
sti
sub
dec
xchg
dec
add
add
inc
ds
out
dec
jge
mov
mov
test
aam
cs
adc
lock
pop
and
icebp
mov
xchg
mov
adc
mov
pop
cmps
test
mov
xor
jmp
inc
retf
dec
cmp
pop
mov
sti
outs
mov
stos
dec
addr16
lock
popa
xlat
imul
mov
and
enter
xor
in
add
cdq
neg
cmp
mov
push
xor
mov
fld
cli
out
sbb
cmp
jle
sar
add
pop
pop
xchg
shl
mov
push
sbb
loop
lods
and
repnz
xchg
(bad)
addr16
mov
movs
sbb
sub
cmp
std
push
cwde
or
xchg
cmp
pop
pop
pushf
mov
and
add
xchg
mov
adc
cdq
lock
and
in
test
(bad)
sub
leave
iret
loope
xchg
pushf
push
dec
lea
in
push
addr16
mov
mov
jb
and
pop
xlat
jg
in
int
sub
(bad)
(bad)
lock
cmp
adc
xor
cmp
push
mov
sbb
adc
cmp
pop
jmp
adc
lods
sbb
adc
inc
dec
adc
pop
cmp
push
dec
ret
pop
and
fisubr
fs
dec
xchg
jno
mov
iret
lods
addr16
dec
(bad)
mov
enter
fs
sbb
sbb
mov
or
jae
gs
aad
fild
pop
cli
adc
push
sbb
push
retf
in
aaa
mov
leave
retf
out
add
push
and
into
pop
inc
lock
sbb
and
sar
push
or
push
xor
adc
xor
movs
mov
xchg
sbb
mov
(bad)
fnstcw
call
cmp
test
ret
ins
or
fsubr
movs
or
adc
add
jo
inc
pop
loope
rol
sbb
jl
mov
mov
loope
loop
mov
fdivr
ss
into
ret
mov
cld
mov
or
fistp
or
(bad)
sti
popa
or
jmp
or
push
test
std
nop
sbb
sbb
test
add
sar
ror
xor
mov
cli
pop
mov
sub
and
fdiv
mov
inc
movs
jl
inc
mov
xor
data16
mov
inc
or
dec
jecxz
sub
adc
addr16
lods
cmp
xlat
fidivr
bound
and
adc
cmp
cli
sar
imul
pop
arpl
les
aas
(bad)
cmp
dec
popf
push
jge
mov
inc
xchg
mov
daa
ins
jo
cwde
das
push
fidivr
xchg
fistp
movs
fwait
mov
clc
outs
mov
sub
inc
outs
mov
popf
cdq
repz
stc
pushf
add
scas
xchg
cmp
cmp
add
mov
loope
sar
xor
cmps
call
xchg
jne
jp
imul
mov
adc
int3
add
push
inc
shl
mov
bswap
add
sub
push
js
mov
mov
mov
je
xor
push
cli
loope
and
jge
inc
enter
push
call
or
mov
adc
sub
leave
pushf
jnp
push
mov
jb
cmp
jo
mov
or
mov
adc
inc
mov
repz
sbb
pop
jo
test
add
ret
loop
sub
sub
inc
loopne
cmp
loop
inc
or
sub
mov
add
inc
pop
jge
xchg
mov
in
dec
in
scas
leave
cmp
pop
add
dec
sbb
lods
jp
pop
test
lahf
jmp
mov
jo
sbb
or
dec
add
push
clc
into
xor
jge
ins
pop
loop
out
ins
rcr
in
mov
mov
xchg
sar
je
mov
mov
addr16
pushf
adc
jge
push
xchg
xor
loop
mov
pop
jb
jge
inc
sbb
in
mov
ss
mov
rol
push
sbb
lods
call
fidiv
scas
movs
loopne
mov
and
mov
pop
clc
js
lock
ficom
push
xchg
fcomp
aaa
out
and
fstp
dec
fsubr
dec
sar
xchg
out
outs
sub
xchg
mov
mov
scas
pop
scas
ja
cmp
mov
xchg
pop
sbb
imul
mov
push
mov
in
pop
xchg
loope
adc
adc
popf
xor
cmc
retf
fist
fwait
cdq
xor
cwde
jmp
out
aaa
outs
sbb
mov
nop
cmp
cmp
dec
cmp
jns
out
scas
sbb
ficom
ds
cmp
xor
pushf
cmps
push
add
inc
push
adc
fwait
enter
inc
jecxz
in
stos
fcomp
and
and
js
sub
push
pop
pop
cs
add
(bad)
fldenv
dec
imul
mov
imul
(bad)
nop
push
pop
xor
sti
icebp
jne
dec
icebp
std
imul
shl
ja
adc
xor
mov
mov
mov
xchg
xlat
xor
push
sub
or
add
push
repz
fidiv
sub
add
pusha
shr
mov
and
stos
jne
jge
je
push
ret
je
mov
cmp
jne
test
and
jo
or
leave
and
pop
movs
jl
mov
gs
iret
outs
adc
lods
inc
in
lahf
leave
movs
out
test
je
mov
inc
pand
shl
xor
dec
jecxz
dec
or
adc
hlt
rol
in
ins
push
inc
cmp
ucomiss
cmp
retf
call
xor
in
popf
hlt
adc
inc
(bad)
cli
push
push
outs
sti
dec
fs
inc
sub
call
dec
test
ret
adc
xchg
mov
sbb
repnz
pop
jl
out
jcxz
jecxz
idiv
sbb
les
xor
lea
fs
mov
mov
aad
scas
or
mov
dec
sub
dec
fsub
clc
pop
xchg
jne
push
ss
jno
xchg
enter
gs
imul
add
lods
iret
ficom
jae
xchg
or
call
xchg
adc
add
push
pop
or
out
les
in
mov
lds
ins
addr16
dec
sbb
retf
clc
pop
movs
cmp
lea
fst
or
mov
pusha
jno
cmp
movs
out
push
sbb
pop
jo
nop
jno
(bad)
pop
xchg
jge
les
sbb
push
and
xor
sub
das
and
fcom
neg
mov
imul
pop
arpl
test
stos
imul
cmc
xchg
mov
cmp
inc
mov
out
fisttp
mov
pushf
and
jbe
fiadd
fild
mov
adc
loop
or
jl
and
retf
test
retf
inc
jne
jecxz
dec
add
stos
or
mov
dec
stos
xor
pop
adc
sbb
scas
mov
xor
add
out
cmc
outs
push
enter
rcr
inc
push
xchg
cs
pusha
dec
mov
arpl
inc
push
mov
int3
lock
scas
mov
arpl
jp
mov
stc
push
or
rol
jno
pop
mov
or
fucomp
pop
or
arpl
adc
std
out
sti
sbb
xchg
or
nop
push
or
adc
sbb
cmps
scas
sub
imul
push
sub
cld
sub
imul
mov
sbb
aam
sti
push
aas
jb
mov
mov
and
push
mov
sub
xor
xchg
push
fwait
ss
mov
mov
cmc
nop
dec
ficom
iret
out
pop
daa
sub
rol
rcr
xlat
xchg
icebp
xchg
mov
icebp
or
jbe
jmp
jne
fucomp
das
retf
fnstcw
mov
sbb
cmp
xchg
inc
mov
sti
loop
out
hlt
inc
ins
enter
aad
ins
loope
mov
dec
jmp
pop
mov
sub
pop
mov
jg
add
adc
pop
sub
sahf
arpl
pop
pusha
hlt
or
and
dec
xchg
je
xor
ret
mov
jmp
stos
push
mov
ret
pushf
adc
cmp
int3
push
repnz
test
retf
popa
mov
aam
push
add
out
xor
jns
lea
sbb
in
dec
adc
(bad)
mov
jae
(bad)
iret
mov
jle
pop
or
xor
adc
xchg
push
adc
test
jp
push
push
imul
add
mov
xchg
pop
in
cmp
std
out
mov
aam
mov
(bad)
retf
sub
(bad)
mov
sub
mov
mov
add
jnp
push
lahf
mov
int3
push
and
mov
sahf
loopne
cmp
sub
jecxz
leave
xor
imul
inc
xchg
fisubr
out
dec
ins
pop
xchg
sbb
pop
mov
in
icebp
jne
push
fsub
dec
arpl
nop
les
stos
div
int
mov
xchg
jno
xchg
mov
lds
mov
mov
mov
(bad)
xchg
cmp
sub
stos
cmps
xchg
stos
or
icebp
(bad)
xchg
mov
pop
dec
test
stc
lahf
pushf
sar
cmp
or
cmp
sbb
jge
jecxz
jns
pushf
pushf
push
aaa
add
pop
dec
xor
mov
adc
data16
scas
mov
data16
ins
pop
rcr
xchg
pop
lds
rcl
xor
int
cmp
hlt
sub
jae
jle
pop
sub
jecxz
je
es
ins
dec
test
daa
inc
inc
adc
out
push
(bad)
push
mov
pop
dec
popa
add
xchg
div
add
pushf
jmp
or
or
stos
sbb
adc
adc
cmp
and
pusha
lahf
mov
xchg
outs
jb
cmp
aad
inc
gs
pop
arpl
jmp
push
mov
(bad)
dec
jb
int
sub
stc
faddp
movs
lock
xchg
fidivr
mov
mov
cmp
out
push
dec
sub
mov
in
sub
rcl
dec
dec
jl
dec
sbb
loop
jne
fdivrp
push
jmp
mov
scas
in
call
imul
nop
inc
xchg
jmp
retf
push
push
jge
mov
es
pop
repnz
xchg
xchg
ret
sbb
fwait
dec
ss
mov
or
out
adc
fadd
icebp
and
pushf
(bad)
jb
push
mov
bound
popf
dec
xor
inc
mov
les
sub
fcomp
xchg
and
cmps
movs
or
push
sbb
test
mov
sub
pusha
or
mov
push
adc
mov
xor
push
pop
imul
(bad)
imul
std
mov
and
(bad)
pop
in
jecxz
scas
sbb
leave
mov
stos
and
fisub
xchg
sbb
dec
imul
sbb
nop
test
fwait
dec
lods
fs
pop
lock
aaa
jp
adc
cmp
xchg
push
shl
or
shr
jnp
pop
jnp
loope
sub
pushf
hlt
imul
imul
mov
pop
mov
cdq
pop
adc
in
mov
fsqrt
jp
shr
clc
fcom
jmp
not
cli
lock
je
jb
xchg
push
mov
fwait
stos
and
and
xchg
retf
sar
sub
ret
bnd
enter
fmul
(bad)
xchg
(bad)
xchg
daa
mov
dec
mov
xchg
outs
sbb
pushf
(bad)
cmc
push
xchg
mov
in
sub
and
add
movs
mov
in
scas
sbb
add
adc
cmp
aas
jno
jecxz
and
pcmpgtd
sub
scas
mov
jge
mov
sub
test
lods
pop
shr
sbb
iret
pop
jb
into
push
push
aam
push
cmp
test
adc
and
mov
xor
shl
pop
and
mov
mov
push
mov
push
xchg
aaa
push
inc
idiv
lds
xor
xchg
mov
(bad)
lea
ucomiss
ret
fadd
in
mov
or
in
mov
push
lods
mov
stos
sub
lock
pop
jns
dec
jp
adc
aad
sub
out
and
pop
xor
mov
mov
sbb
mov
inc
lahf
ret
xor
mov
push
mov
inc
lods
mov
sub
loopne
aas
mov
push
stc
and
sahf
add
mov
cdq
stc
ins
mov
cli
pop
inc
not
xchg
sar
adc
push
and
(bad)
xchg
push
pop
sub
and
ficomp
repnz
ins
loope
ins
test
fistp
pop
adc
popf
and
sbb
cmp
push
pop
inc
jo
das
into
test
and
xlat
dec
and
sbb
into
mov
pop
mov
push
add
mov
jae
enter
stc
jne
pop
adc
cmp
fiadd
dec
leave
int
pop
xchg
(bad)
and
test
sbb
mov
mov
cli
add
test
adc
add
dec
cmp
push
sbb
jbe
xor
jmp
(bad)
xchg
cmp
and
mov
xchg
dec
adc
inc
add
add
adc
push
cmp
inc
push
dec
inc
fcom
cs
add
cmc
or
push
push
sbb
fdiv
not
aad
loope
pop
cdq
out
cli
and
rol
adc
lahf
jmp
repz
mov
mov
lods
inc
popf
dec
xchg
sub
lods
shr
call
cmps
sti
push
out
jmp
lahf
push
nop
lock
cs
jp
pop
lods
and
inc
inc
sub
pop
cmp
gs
out
js
mov
pop
xlat
pop
cwde
call
fcomi
cmps
jb
shl
adc
retf
jecxz
pop
sub
xchg
jbe
loope
aas
aad
xor
cmp
ds
cmp
dec
sbb
hlt
mov
push
adc
mov
inc
aaa
mov
mov
sbb
sahf
ja
push
daa
js
xor
(bad)
mov
jns
std
push
add
jae
(bad)
lock
clc
ja
loop
rep
dec
push
push
sahf
push
outs
jne
pop
rcl
(bad)
ror
sbb
mov
je
loop
adc
sbb
sub
icebp
push
test
mov
hlt
pop
mov
(bad)
or
pusha
inc
retf
iret
fbld
rcr
add
test
and
push
pop
(bad)
adc
or
inc
test
inc
push
int3
pop
cmp
pop
jns
sbb
mov
repz
sahf
xchg
out
shl
imul
push
ret
add
outs
pop
mov
jle
inc
hlt
leave
repnz
mov
inc
std
mov
and
test
dec
vpaddsw
inc
or
stos
add
jnp
xchg
je
popf
dec
das
inc
bound
sbb
shl
mov
mov
xchg
or
push
ja
xor
adc
jbe
xchg
sti
jbe
mov
and
stc
pop
jg
dec
mov
mov
dec
adc
pop
or
nop
pop
add
ror
repz
mov
es
dec
outs
dec
clc
mov
mov
dec
mov
popa
dec
in
mov
and
stos
imul
loopne
cwde
pop
xchg
shl
jmp
outs
pop
inc
xchg
mov
mov
neg
add
mov
and
sbb
into
push
mov
cmc
cdq
mov
iret
dec
xchg
mov
icebp
call
and
sbb
xchg
test
fild
push
xchg
sub
or
push
inc
ss
arpl
imul
cmp
nop
scas
jne
movs
(bad)
cdq
call
sbb
ja
cmp
adc
test
jle
mov
push
out
fs
jb
stos
mov
movs
in
sub
mov
imul
add
cmp
push
mov
test
pusha
cs
clc
and
test
test
daa
popf
xor
popf
jle
not
jmp
jp
mov
jnp
mov
xlat
clc
jg
sbb
ja
adc
push
xchg
xor
fwait
out
adc
cmp
repnz
or
pop
(bad)
cmp
(bad)
push
adc
popa
cmp
imul
jge
daa
mov
sub
sti
test
xchg
fwait
ret
xor
bound
sbb
mov
cmps
in
pushf
jno
cmp
or
sahf
dec
mov
sub
out
(bad)
push
push
jb
push
adc
call
lds
sbb
test
xor
jb
and
mov
inc
and
ret
adc
(bad)
dec
push
jp
jge
outs
inc
fld
mov
in
aam
and
int3
test
inc
sub
in
inc
sbb
in
sti
xchg
jle
inc
push
cmp
test
sbb
add
pop
inc
sbb
je
inc
movs
fisubr
mov
ja
sub
pop
and
lods
push
push
rol
pop
ret
loop
jmp
ja
add
push
nop
add
lds
test
imul
xor
xchg
popa
mov
push
call
xor
jge
push
pop
xlat
ficomp
and
mov
sub
mov
jp
dec
jmp
mov
inc
xchg
cs
(bad)
fistp
fdiv
shl
inc
and
out
mov
cmps
pop
aas
push
sbb
adc
sub
cmp
daa
loopne
mov
int
ror
popa
jo
dec
mov
xchg
add
ror
add
mov
cli
pop
sbb
ds
ja
aas
fbld
call
jno
xchg
dec
aam
mov
in
jle
jnp
ret
push
xlat
push
adc
or
sbb
or
pop
sbb
outs
addr16
and
mov
xchg
dec
cli
push
bound
sbb
fistp
int
push
fs
loopne
pop
inc
movs
bound
pop
icebp
xchg
or
sbb
dec
xchg
push
lea
aad
sub
inc
mov
pop
cmps
mov
into
cmp
cwde
popf
in
xchg
mov
push
scas
cli
dec
sbb
das
add
or
sub
push
dec
das
enter
scas
in
mov
enter
dec
jnp
xlat
jmp
and
fs
pop
dec
dec
mov
jns
mov
xchg
aad
sub
or
mov
out
popa
jns
out
idiv
and
and
mov
jmp
cmp
jbe
repz
fld
push
push
ret
stos
dec
xor
fst
dec
fiadd
mov
push
cld
sbb
add
sub
mov
test
mov
aad
cli
adc
inc
sub
lods
dec
iret
inc
icebp
mov
pop
mov
or
sbb
(bad)
dec
push
movs
inc
es
pusha
out
fcomp
jmp
pop
add
popa
nop
or
mov
jg
mov
mov
enter
mov
pop
or
inc
pop
xor
sti
sub
in
mov
(bad)
xchg
sar
cmp
cmps
sbb
xchg
dec
xor
add
(bad)
clc
jmp
sar
sub
cmps
fwait
xor
or
movs
jge
int
mov
mov
push
cmp
jecxz
push
xor
fst
rol
mov
dec
cdq
mov
add
outs
mov
icebp
jmp
sbb
aaa
out
std
mov
pop
retf
test
outs
sub
xchg
sbb
mov
retf
dec
add
cmps
or
int3
add
xor
dec
aad
fbld
jge
icebp
inc
dec
ss
leave
dec
adc
inc
js
ret
popf
and
sbb
jl
dec
adc
xor
xlat
mov
ror
mov
jno
dec
rol
das
mov
sub
dec
adc
push
mov
mov
pop
xchg
iret
mov
(bad)
jno
mov
loope
clc
loopne
or
dec
loop
mov
test
adc
sbb
lds
(bad)
in
pop
in
add
adc
cmp
push
mov
and
or
jl
jle
ret
(bad)
fdiv
dec
mov
std
aad
je
adc
(bad)
call
mov
jnp
outs
push
pop
loop
mov
sbb
push
out
xchg
test
ror
sbb
mov
push
imul
push
mov
sub
enter
outs
fnstcw
dec
xchg
test
pop
sbb
popf
sbb
iret
call
cmp
je
push
add
lds
and
ja
fnstenv
push
retf
jae
test
(bad)
out
movs
jae
jbe
mov
les
mov
mov
inc
xchg
mov
int3
xchg
mov
adc
loopne
mov
gs
(bad)
addr16
pop
dec
gs
dec
xchg
sub
lock
sbb
jns
hlt
imul
div
sbb
mov
stos
scas
dec
mov
call
outs
add
mov
ins
out
movs
xchg
fcomi
inc
out
xchg
mov
sub
mov
cli
xor
popf
popf
jle
retf
mov
xchg
add
jle
push
jecxz
call
adc
(bad)
in
(bad)
jmp
add
jnp
in
addr16
mov
sbb
or
mov
or
mov
fcomp
xor
mov
xor
sbb
mov
jmp
mov
popa
mov
adc
mov
in
and
or
mov
add
mov
mov
cmp
push
out
and
aam
ins
repnz
arpl
sub
icebp
movs
pop
mov
pop
inc
mov
imul
outs
inc
addr16
es
lds
mov
inc
push
(bad)
aad
div
add
call
mov
mul
cmps
sti
repnz
lds
xchg
jg
or
xchg
test
popa
mov
or
inc
cmc
jns
push
retf
loope
sahf
sub
and
mov
rol
jle
(bad)
jae
dec
cdq
cmps
jmp
adc
imul
js
and
mov
fist
jo
fnstenv
pop
fisub
sub
push
in
(bad)
loope
std
mov
repz
push
cmp
or
dec
sub
cmps
xchg
call
xchg
xchg
push
outs
addr16
(bad)
inc
xor
push
test
cmp
jg
fistp
jge
push
popf
cmc
movs
mov
cmc
xchg
inc
cmp
push
loopne
and
jno
scas
mov
pop
mov
mov
sar
adc
in
and
cwde
or
adc
xchg
adc
adc
adc
sbb
in
add
(bad)
cmp
cdq
pop
dec
not
ins
dec
rol
out
and
rcl
outs
mov
out
cmp
and
mov
clc
retf
cmps
dec
jmp
arpl
adc
adc
cmp
mov
xchg
retf
outs
test
bound
ds
fsubr
pop
stos
lahf
mov
push
jg
ss
rcl
push
xchg
ss
js
inc
xchg
mul
or
int3
addr16
jl
jg
iret
and
and
cwde
lods
xlat
xor
xchg
jecxz
dec
hlt
cli
mov
popf
out
loopne
pop
loope
not
add
movs
xchg
mov
enter
frstor
pop
mov
mov
dec
in
fldcw
push
xchg
fcomp
stc
scas
test
fbstp
mov
imul
sbb
mov
pop
fwait
push
jns
sub
push
jns
outs
aam
pushf
or
fadd
cmp
push
test
movs
cmp
dec
mov
fldenv
xchg
push
in
sbb
jp
xchg
aam
loop
shl
jecxz
push
std
jbe
rcr
push
sub
mov
xabort
jp
add
movs
retf
(bad)
xchg
out
xchg
cmp
shl
stc
add
sub
sar
mov
and
bound
push
push
pop
stc
lea
dec
aam
cmc
or
inc
mov
or
cdq
sub
adc
jnp
adc
mov
pop
lock
cmp
dec
xlat
stos
fldcw
lea
sbb
xor
xor
cmp
xchg
xchg
dec
sahf
inc
cmp
add
xor
ret
dec
imul
in
sub
call
xor
sub
cld
inc
rcl
adc
inc
dec
sub
sti
pop
mov
std
cmp
lahf
stos
pop
das
jnp
fnsave
test
stos
mov
ins
and
inc
mov
sub
jne
fs
mov
cmp
aas
test
jo
in
push
popa
mov
pop
mov
jmp
sub
mov
cld
lock
push
push
(bad)
push
xchg
and
shr
jbe
sub
popa
pop
jg
js
jmp
fidivr
pavgb
pop
les
cli
in
adc
stc
fmul
test
pop
stos
mov
pop
(bad)
je
or
xchg
jp
test
jmp
and
sti
mov
mov
inc
cwde
dec
cmp
adc
sub
pop
pop
int3
and
mov
aas
add
dec
ins
rcl
and
test
repz
dec
(bad)
jge
inc
inc
and
mov
jmp
and
ins
ins
fisub
and
jmp
ret
push
jl
or
adc
pusha
cmp
into
add
aas
inc
pop
mov
pop
(bad)
mov
daa
jo
xchg
jnp
adc
sar
mul
imul
cmp
or
ds
mov
js
sbb
rol
mov
sub
fldl2t
xchg
arpl
sbb
test
and
push
jne
pop
pop
cmp
ja
fcmove
(bad)
repnz
(bad)
mov
movs
sub
jecxz
out
lods
daa
pop
out
cld
repz
(bad)
into
add
cmp
inc
inc
xchg
mov
cmp
daa
xchg
adc
(bad)
js
xor
push
inc
and
push
std
mov
sbb
add
jbe
xchg
and
mov
adc
sti
lea
in
std
shl
ja
ror
(bad)
pop
pop
in
xor
loope
cmps
imul
inc
iret
pop
stos
enter
cwde
test
sub
jno
cld
shr
pop
out
in
mov
inc
mov
mov
adc
outs
call
xchg
pushf
jo
mov
movs
sbb
iret
add
fcom
pop
dec
test
shr
ss
call
dec
mov
bound
mov
or
jbe
mov
rol
mov
sub
mov
(bad)
push
sar
shl
push
jge
gs
shr
mov
lods
pop
in
cdq
out
daa
mul
push
clc
cli
shl
mov
xchg
retf
pop
cmp
mov
arpl
sar
xor
outs
add
cmps
push
and
cs
xor
push
inc
cli
jle
sub
mov
stos
rcr
sub
in
push
mov
push
popf
ret
stos
xchg
sbb
fs
hlt
inc
cmps
mov
imul
xchg
jmp
stos
pop
jge
adc
inc
push
and
cmps
stos
loopne
call
aam
stos
push
or
dec
push
pop
sbb
(bad)
not
add
push
or
imul
cmps
sar
ins
mov
push
xchg
push
cld
int
xor
stos
imul
jnp
leave
dec
mov
mov
adc
or
(bad)
retf
lods
push
ss
lds
mov
fadd
add
xchg
push
shr
cwde
pushf
xor
retf
call
mov
xor
cmp
pop
sbb
jnp
retf
jno
jmp
cmp
push
cwde
xor
sbb
sbb
leave
in
das
mov
lods
sbb
sbb
(bad)
test
mul
xlat
inc
push
or
in
imul
jmp
jb
mov
ret
xchg
mov
and
out
cs
(bad)
out
dec
xor
scas
mov
jae
and
xchg
or
imul
leave
pushf
xor
jae
loop
clc
adc
movs
aaa
mov
or
cmps
cmp
sbb
jle
dec
jmp
ror
xchg
sahf
fmul
shl
sub
movs
mov
jnp
stos
or
or
jne
shl
jg
add
mov
jnp
or
retf
iret
dec
mov
test
sbb
stos
call
sub
mov
xchg
inc
inc
and
mov
mov
aam
sbb
jne
jmp
pop
mov
mov
adc
out
xor
leave
push
clc
shl
in
xor
inc
mov
dec
mov
movs
daa
ins
dec
jecxz
mov
pop
jne
dec
sar
in
jb
sbb
add
leave
in
xor
push
cld
xor
dec
repnz
pop
pop
mov
mov
push
or
push
sti
retf
xchg
sub
int3
call
pop
out
xchg
data16
and
cmp
sub
adc
leave
loope
mov
jge
or
xchg
hlt
in
xchg
mov
xor
xor
adc
mul
popa
jmp
jns
cmp
jle
sbb
aas
outs
cmc
cmp
cmp
lock
cmp
cmps
fild
inc
imul
mov
mov
xchg
or
lods
push
scas
xor
mov
xchg
or
mov
cmc
mov
aas
cmp
fidivr
jae
xchg
aaa
lods
sbb
leave
adc
out
inc
add
cli
jg
mov
fmul
mov
dec
je
push
push
(bad)
sbb
xor
inc
das
fmul
mov
mov
add
movs
movs
adc
pop
in
push
out
das
mov
xor
ja
ds
les
pop
bnd
push
leave
mov
and
add
gs
sbb
loopne
(bad)
bound
mov
in
lock
jl
popf
mov
das
sbb
rol
data16
sub
jne
and
cmp
lods
out
mov
rol
or
and
push
fs
xor
cmp
sbb
iret
cs
test
in
jns
mov
test
sahf
sbb
jb
jl
inc
adc
ret
call
scas
pusha
jle
add
popa
pop
leave
cdq
inc
stos
leave
or
xchg
push
aas
dec
fidivr
jge
jle
jno
mov
into
aam
or
mov
push
scas
jns
pushf
push
xor
out
test
call
fdivr
sub
add
(bad)
shl
sti
mov
cld
inc
inc
jg
(bad)
mov
(bad)
movs
fs
repz
cmps
dec
int
call
test
xchg
xor
enter
stos
ret
pmovmskb
sbb
int3
retf
sub
xor
das
rol
sub
mov
gs
ja
xchg
sub
stos
or
ror
cmp
popa
pop
in
jge
sub
pusha
cdq
push
imul
dec
shl
jp
test
ror
not
into
les
push
stos
out
jbe
sub
cmp
inc
aam
cld
xor
call
adc
push
sub
fadd
adc
xchg
dec
dec
imul
outs
push
or
lahf
sub
xor
jbe
push
pop
loope
mov
mov
push
iret
adc
inc
mov
adc
xchg
fadd
lods
push
arpl
push
iret
adc
adc
mov
and
or
and
cmp
jecxz
inc
aad
push
mov
sbb
(bad)
mov
push
loopne
jmp
les
popf
je
pop
and
pop
dec
loop
(bad)
lahf
sub
mov
hlt
iret
mov
std
jl
ins
xchg
out
inc
lahf
jne
mov
jbe
cmp
pop
in
retf
out
jg
push
movs
test
jb
or
mov
mov
loop
push
stc
mov
(bad)
cmps
(bad)
xchg
(bad)
div
push
jmp
sbb
xor
cwde
add
outs
call
call
add
leave
aad
ret
stos
ret
cmp
je
inc
pop
ret
and
mov
xchg
sub
mov
repz
retf
std
mov
xor
jecxz
jae
scas
mov
out
outs
ret
sub
stos
jp
mov
fcomp
stos
bound
scas
fs
ror
adc
in
or
sub
jmp
mov
push
retf
imul
stos
sbb
mov
test
dec
add
pop
not
aad
movs
ss
pushf
mov
fistp
fidiv
dec
xchg
enter
ds
cmp
call
and
pop
mov
retf
and
cmp
push
sub
adc
jno
fldenv
jge
push
push
mov
and
pslld
outs
xchg
cmp
ja
push
cmp
adc
popf
addr16
out
or
test
sbb
shl
pop
cmp
dec
loopne
jecxz
pop
sub
sahf
inc
xor
call
in
push
fs
xchg
xchg
shl
call
cwde
push
out
dec
(bad)
xlat
dec
add
les
dec
sbb
push
movs
adc
ss
imul
cmp
mov
xchg
mov
sub
sub
cwde
fstp
data16
dec
mov
iret
dec
add
or
sbb
sub
test
lea
xor
push
jle
popa
stc
pop
loopne
fisub
stos
push
in
and
addr16
cmp
sbb
add
scas
(bad)
out
push
sbb
call
mov
fisubr
inc
icebp
in
lds
es
mov
cs
and
fisttp
sub
fld
test
test
bound
pop
call
pusha
push
inc
in
add
mov
mov
sbb
push
xchg
dec
retf
jbe
out
stos
mov
jecxz
pop
inc
outs
popa
jb
(bad)
aaa
in
repz
and
add
es
add
scas
repnz
xchg
mov
aaa
data16
and
sbb
out
sahf
jg
mov
ja
ret
mov
loopne
imul
pop
(bad)
popa
ds
dec
or
(bad)
jb
pop
mov
inc
int
jmp
push
mov
shl
mov
lock
loop
test
mov
adc
jns
mov
jl
fistp
mov
or
jns
jge
cld
or
sbb
fldcw
adc
sahf
(bad)
pop
lahf
arpl
and
xor
inc
loopne
adc
in
call
dec
fsubr
jge
dec
inc
arpl
push
shl
jecxz
pushf
cmps
mov
push
mov
cs
cmps
jge
sbb
icebp
push
dec
cli
xchg
pop
mov
int3
out
movs
mov
push
cmps
repz
mov
adc
and
cmps
inc
bound
hlt
sahf
adc
or
jle
inc
dec
and
std
(bad)
pop
add
mov
push
loopne
and
scas
jle
test
(bad)
mov
std
out
dec
pop
lods
mov
retf
inc
sub
cmc
cs
jb
inc
dec
test
movs
mov
jmp
inc
dec
jno
retf
mov
xchg
mov
mov
ins
hlt
jl
addr16
in
xor
popf
sub
jge
adc
iret
ds
jge
xchg
sbb
mov
retf
inc
cld
inc
pop
inc
jmp
test
std
inc
push
inc
xchg
ins
xor
in
out
loop
mov
and
arpl
dec
push
or
push
xchg
(bad)
push
popf
sbb
sahf
cli
cmp
mov
inc
pop
xor
sbb
in
inc
(bad)
jg
clc
jmp
xchg
ss
sahf
push
neg
adc
and
fs
shl
scas
xchg
and
adc
xchg
adc
std
fwait
xlat
sti
mov
rcl
cmp
stos
fisttp
xchg
jmp
mov
jmp
ins
xchg
jl
mov
sahf
dec
push
pusha
std
add
add
and
lea
aaa
xor
movs
clc
jl
mov
loopne
pop
mov
out
mov
mov
out
inc
popf
addr16
enter
xor
pop
pop
int
inc
sbb
or
add
push
or
ret
lahf
and
mov
xchg
outs
push
dec
mov
pop
xor
test
arpl
mov
jmp
mov
call
out
int
adc
fimul
cmps
cmp
hlt
in
cmp
fild
or
mov
in
xchg
xchg
into
retf
sbb
jle
or
inc
pop
mov
rcl
retf
int
dec
xlat
in
or
jnp
xor
push
sbb
aad
jmp
or
cmp
dec
mov
(bad)
cmovp
cld
mov
out
test
sub
jmp
cdq
mov
jno
hlt
call
adc
ja
jecxz
fwait
stos
leave
(bad)
and
cmp
mov
xlat
mov
push
pop
loope
outs
mov
out
rsqrtps
fcom
sub
sub
lahf
enter
xor
or
ins
and
retf
int
mov
sahf
push
mov
imul
sub
mov
adc
push
push
or
push
ss
lods
inc
mov
mov
movs
xor
int
pop
and
pop
into
adc
mov
jp
fidiv
call
xchg
addr16
(bad)
aam
cmps
ins
icebp
dec
(bad)
leave
int3
cmc
add
mov
xchg
lock
jmp
rcl
(bad)
fdiv
cmp
lahf
pop
pop
push
mov
mov
shr
and
or
shl
iret
lock
in
jge
mov
sub
fs
call
sbb
or
rcr
xchg
in
ins
data16
jmp
jg
sub
sub
fimul
clc
cmp
popa
cmps
cmp
jb
mov
inc
mov
and
test
ins
xor
dec
add
mov
lahf
sti
pop
sub
xlat
dec
jp
div
outs
arpl
or
adc
adc
push
mov
inc
dec
scas
(bad)
mov
cmps
(bad)
or
mov
xor
es
not
mov
das
jecxz
lds
int3
fisubr
(bad)
xlat
xor
out
mov
sbb
imul
push
xchg
loop
pop
jbe
cmp
mov
arpl
pop
fld
retf
sub
sub
enter
out
aad
xor
push
in
push
ss
enter
jg
pushf
inc
cmp
dec
cmp
mov
pop
jg
jne
pushf
dec
repnz
cmp
ds
mov
das
xchg
in
fs
adc
cs
jne
xor
dec
cmps
push
or
mov
push
inc
inc
cmps
pop
enter
scas
jne
out
sar
jae
rcl
cld
test
repz
mov
or
sbb
scas
jno
cwde
mov
xor
xchg
or
jmp
jne
xor
call
test
pop
aas
mov
sti
aad
sbb
retf
in
dec
cmp
push
gs
dec
xchg
fadd
sub
stos
jmp
paddb
add
sub
test
inc
mov
xchg
push
mov
mov
xor
xchg
or
push
fsubp
enter
aad
cmp
push
arpl
(bad)
sahf
ficom
js
cmp
pop
dec
iret
add
add
mov
mov
(bad)
cmp
cmp
int
mov
test
in
xor
mov
test
cmp
jo
mov
hlt
call
sar
jo
add
dec
iret
les
or
loopne
xor
xor
lods
jmp
mov
add
ds
pop
sub
int
in
jp
jmp
ret
or
push
xor
ins
push
push
cmp
sub
pushf
aad
cmp
sub
nop
mov
sub
and
add
aam
mov
retf
aad
sub
mov
xor
pop
xchg
adc
leave
lahf
mov
or
leave
mov
mov
sub
or
lock
xor
cdq
and
cdq
icebp
cli
cld
jb
cmp
pop
push
sbb
pop
int
xlat
push
mov
cli
xchg
xor
jne
sub
sub
js
add
push
ss
gs
popa
fucomp
test
sbb
xchg
sub
mov
lods
fist
loopne
shl
out
ret
push
or
sub
and
adc
dec
ja
jge
or
out
and
pop
fwait
cmp
xor
sub
bound
fwait
mov
fwait
enter
scas
ss
jo
mov
xchg
aad
(bad)
(bad)
jmp
pop
jge
iret
adc
mov
es
sub
or
adc
leave
inc
push
jnp
adc
lods
adc
leave
ss
(bad)
jno
pop
retf
inc
push
rcr
cmp
aaa
sbb
dec
inc
in
leave
mov
fs
ficomp
shl
into
adc
pop
stc
add
fsub
dec
mov
enter
xor
popa
sar
inc
jp
xchg
or
lea
popf
xchg
mov
lods
jb
mov
push
mov
outs
push
leave
rcr
and
push
mov
add
adc
add
mov
xchg
pop
pop
outs
or
pushf
cmps
sfence
test
push
xor
pop
mov
dec
dec
mov
(bad)
adc
call
sub
push
mov
gs
or
out
push
mov
push
add
not
cmovne
xchg
ret
adc
fbld
repz
div
jno
call
and
gs
pop
add
cmps
push
mov
inc
mov
aam
add
clc
shl
mov
pop
and
and
repz
push
mov
out
mov
xlat
js
cmp
daa
jbe
pop
mov
(bad)
hlt
out
(bad)
lock
cmp
lahf
icebp
jmp
push
std
movs
daa
jp
jl
ret
outs
add
in
or
xor
and
push
pop
pop
retf
cmp
ficom
loop
inc
and
sbb
aad
scas
jo
mov
add
ds
js
sub
repz
add
dec
mov
push
add
idiv
xlat
xlat
fs
je
and
sub
push
aad
stos
xor
jmp
mov
dec
scas
test
mov
loopne
fst
into
push
loop
(bad)
std
lds
mov
cmps
and
fdiv
mov
(bad)
push
push
test
enter
arpl
out
pop
es
adc
push
xor
scas
aaa
jo
js
xlat
outs
mov
scas
int3
pop
fist
mov
(bad)
(bad)
in
add
xor
loope
shl
xor
push
mov
fist
cmps
dec
mov
ins
fwait
iret
mul
xor
xchg
movs
xchg
ins
es
bnd
push
mov
pop
push
add
xchg
and
jp
pop
frstor
lea
and
and
inc
out
mov
push
add
addr16
fist
jg
adc
push
das
push
sbb
arpl
or
dec
(bad)
jne
xchg
and
sbb
and
es
mov
dec
mov
das
sub
and
adc
adc
mov
jne
outs
jno
jecxz
mov
lods
clc
inc
out
cmp
adc
or
je
mov
int
lock
in
add
pop
xor
cmp
cmps
pop
mov
repnz
sbb
mul
jmp
mov
cmp
xor
movs
adc
aam
fistp
mov
pushf
lea
mov
pop
sub
sub
scas
js
mov
(bad)
in
fist
stos
push
cdq
push
jg
xchg
rol
cmps
xor
sub
mov
mov
test
movs
adc
stos
pop
adc
push
stos
mov
sbb
cdq
scas
sub
sub
stos
or
xor
stos
mov
in
sbb
data16
jb
xchg
fmul
cs
jp
out
cwde
test
loop
jecxz
in
or
add
cmps
jmp
pop
mov
daa
add
test
cmp
mov
cmp
and
mov
push
jmp
ficom
push
fs
movs
rcl
(bad)
jnp
dec
push
push
push
xchg
adc
aas
jae
mov
fld
adc
jmp
enter
jns
jae
mov
jl
(bad)
and
pop
jns
arpl
and
test
cmp
mov
jae
(bad)
or
mov
inc
popa
test
rol
adc
shr
xor
clc
jne
in
fstp
sar
int3
mov
cmp
adc
and
aaa
mov
aas
mov
cmp
push
cmps
and
adc
push
xor
jb
sub
daa
(bad)
adc
enter
cmp
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
iret
mov
test
fisttp
sub
pop
xchg
stos
ret
repz
nop
inc
dec
shr
repz
add
add
add
add
add
and
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
