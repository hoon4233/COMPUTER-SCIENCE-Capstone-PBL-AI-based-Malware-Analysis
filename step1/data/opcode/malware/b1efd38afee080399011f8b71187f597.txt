jo
or
add
add
add
add
add
add
add
add
add
sub
add
jo
add
add
or
add
add
add
add
xor
add
add
add
add
jae
add
or
add
adc
or
xor
add
add
add
add
push
sub
add
add
sub
add
add
push
outs
add
add
outs
push
add
or
add
outs
pop
add
or
add
outs
or
add
add
sub
add
xor
add
add
add
add
add
add
add
push
or
push
adc
sub
add
or
jle
add
add
or
add
and
add
or
add
inc
or
cmp
add
add
inc
add
add
idiv
(bad)
call
sub
add
es
or
add
or
add
pop
ficom
add
add
add
add
add
or
push
outs
or
es
sub
sbb
add
(bad)
(bad)
call
add
inc
adc
adc
sub
sbb
add
add
(bad)
(bad)
(bad)
jle
add
add
jle
add
add
add
or
add
or
add
pop
(bad)
or
pop
(bad)
adc
adc
adc
xor
add
idiv
(bad)
(bad)
jle
add
add
jle
add
add
or
add
or
outs
sldt
or
jle
add
add
add
add
or
add
and
add
add
jle
add
add
sub
add
or
add
outs
adc
add
add
ficomp
add
adc
adc
sub
sbb
add
(bad)
(bad)
inc
sub
add
add
fadd
add
sub
add
add
add
or
add
adc
add
sbb
add
add
add
add
xor
and
sub
push
add
or
fiadd
add
add
adc
add
and
add
or
add
add
add
add
add
add
or
add
add
xor
add
add
adc
add
and
add
and
add
add
sub
xor
add
add
add
add
add
sub
add
xor
add
add
push
add
or
add
add
adc
add
add
add
adc
pop
add
or
push
add
push
jae
add
or
add
or
pop
add
or
or
add
jae
add
or
add
or
and
add
and
or
pop
sub
add
add
add
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
add
add
xor
add
add
add
add
sub
add
or
or
or
outs
add
or
add
or
sbb
add
add
(bad)
(bad)
call
sub
add
es
pop
outs
sub
add
and
push
sub
es
add
sub
add
xor
inc
add
add
add
add
add
or
push
pop
sub
sub
add
and
xor
pop
inc
add
add
idiv
(bad)
call
sub
add
es
push
pop
outs
sub
add
and
mov
add
add
sub
add
adc
add
jno
add
add
add
add
bound
inc
add
add
idiv
(bad)
call
sub
add
es
add
add
add
or
sub
or
add
or
add
and
inc
add
add
idiv
(bad)
(bad)
jle
add
add
ficomp
pop
pop
or
xor
sbb
add
add
(bad)
(bad)
call
jle
add
add
pop
sub
add
add
or
xor
add
add
add
jae
add
or
jae
add
or
jae
add
or
jae
add
or
jae
add
or
add
adc
add
adc
add
push
add
adc
jle
add
add
xor
or
add
sub
add
xor
adc
add
pop
add
adc
jle
add
add
add
or
push
sub
add
xor
adc
add
or
add
add
add
add
aaa
add
or
push
sub
add
xor
adc
add
or
add
add
add
add
cmp
add
and
push
sub
add
xor
adc
add
or
add
add
add
add
cmp
add
and
push
sub
add
xor
add
add
and
add
add
adc
add
push
add
add
add
adc
add
add
add
add
add
and
add
jnp
add
add
sub
push
sub
add
xor
push
add
add
add
add
jnp
add
add
add
push
sub
sbb
add
add
(bad)
(bad)
call
sub
add
add
sub
add
add
inc
or
sub
and
add
sub
add
and
add
jp
add
jl
add
add
add
add
add
sub
add
sbb
adc
js
add
or
add
das
sbb
add
add
(bad)
(bad)
call
sub
add
es
(bad)
push
pop
add
sbb
add
or
add
add
(bad)
(bad)
call
sub
pop
add
push
cmp
add
add
inc
add
add
idiv
(bad)
(bad)
jle
add
add
inc
push
inc
or
sub
jle
add
add
pop
add
sbb
inc
add
or
add
and
daa
sbb
add
add
(bad)
(bad)
jmp
mov
add
sub
add
and
add
add
inc
add
or
add
or
sub
add
add
or
add
add
add
pop
add
sbb
inc
add
or
add
or
add
add
add
or
add
cwde
add
add
add
add
add
add
idiv
(bad)
jmp
push
sub
and
add
or
add
dec
add
or
push
inc
push
inc
(bad)
adc
and
inc
add
sub
add
pop
lea
add
add
add
add
dec
add
or
add
movs
sbb
add
add
add
or
push
adc
dec
add
or
add
jp
dec
add
or
sbb
jle
add
add
pop
add
sbb
inc
add
or
add
add
add
add
add
or
add
add
add
add
pop
add
add
add
add
add
add
add
xor
add
add
adc
add
push
pop
add
sbb
add
or
add
add
adc
push
add
sub
adc
add
adc
add
or
add
add
add
adc
add
and
add
or
add
sub
xor
push
add
add
add
adc
add
dec
add
or
push
sub
add
xor
add
add
add
add
adc
rol
add
add
inc
add
or
push
sub
add
xor
push
add
add
add
adc
add
push
add
or
push
sub
add
xor
add
add
and
add
add
adc
add
push
add
add
add
add
add
adc
add
and
add
and
push
sub
add
xor
push
add
add
add
adc
add
dec
add
or
push
sub
add
xor
add
add
add
add
adc
ror
add
add
inc
add
or
sub
push
sub
xor
push
add
add
add
adc
add
push
add
or
push
sub
add
xor
add
add
adc
add
inc
or
sub
sbb
add
add
(bad)
(bad)
call
sub
add
sub
add
sub
sub
add
pop
sub
add
adc
add
adc
add
push
add
adc
add
add
adc
push
add
sub
add
xor
add
add
and
add
add
adc
add
cmp
add
adc
add
add
add
or
inc
or
sub
sbb
add
add
(bad)
(bad)
call
sub
add
sub
add
and
add
jle
add
or
sub
pop
sub
add
or
or
add
add
add
add
sub
add
add
sbb
or
data16
add
add
add
add
add
or
push
outs
push
add
or
push
add
or
inc
add
outs
pop
add
or
loope
inc
add
add
idiv
(bad)
call
sub
add
es
push
push
adc
add
inc
or
inc
add
add
idiv
(bad)
inc
outs
pop
add
or
add
adc
sub
or
add
add
add
add
add
inc
inc
add
add
add
sbb
or
add
add
add
outs
push
add
or
push
outs
push
add
or
outs
pop
add
or
add
and
push
outs
pop
add
or
fist
inc
add
add
idiv
(bad)
call
sub
add
es
push
push
adc
add
inc
or
sub
sbb
add
add
(bad)
(bad)
inc
outs
pop
add
or
add
add
add
add
add
add
inc
inc
add
add
add
sbb
or
jo
add
adc
add
add
add
add
or
push
outs
push
add
or
outs
pop
add
or
add
and
add
outs
pop
add
or
xlat
pop
inc
add
add
idiv
(bad)
call
sub
add
es
push
push
adc
add
inc
or
inc
add
add
idiv
(bad)
inc
outs
pop
add
or
add
adc
sub
or
add
add
add
add
dec
dec
add
add
add
sbb
or
add
add
add
outs
push
add
or
push
outs
push
add
or
add
pop
add
or
add
and
push
outs
pop
add
or
ficomp
inc
add
add
idiv
(bad)
call
sub
add
es
push
push
adc
add
inc
or
sub
sbb
add
(bad)
(bad)
inc
outs
pop
add
or
add
add
add
add
adc
add
add
add
add
add
add
adc
add
adc
add
adc
add
add
add
add
or
pop
add
or
sub
push
sub
add
xor
add
add
add
add
add
add
pop
add
or
add
adc
add
xor
add
push
add
adc
add
add
push
sub
sbb
add
add
(bad)
(bad)
call
sub
add
es
sub
add
add
adc
add
jae
add
or
sub
pop
sub
add
xor
add
add
add
add
adc
add
outs
pop
add
or
add
or
add
add
or
push
or
add
sub
add
xor
add
add
adc
add
inc
or
sub
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
pop
adc
add
inc
or
sub
add
add
sub
add
push
and
sub
add
add
push
inc
or
sub
add
add
sub
add
push
and
add
add
sub
adc
add
add
add
adc
add
inc
or
sub
add
sbb
pop
adc
add
inc
or
sub
pop
add
add
xor
add
and
add
jae
add
or
add
sub
sub
add
sub
jae
add
push
and
add
jae
add
or
pop
add
sub
push
add
add
sub
add
xor
add
add
add
add
adc
add
inc
or
cmp
add
add
idiv
(bad)
call
sub
add
es
or
cmp
add
add
outs
data16
or
add
or
int3
add
add
inc
add
add
idiv
(bad)
inc
outs
or
add
and
imul
outs
push
add
adc
adc
add
inc
or
cmp
sub
sbb
add
add
(bad)
(bad)
inc
sub
add
add
(bad)
(bad)
call
sub
pop
add
add
add
add
inc
add
add
idiv
(bad)
inc
mov
push
adc
adc
adc
sub
adc
mov
adc
add
or
adc
adc
or
add
or
add
add
add
idiv
(bad)
dec
adc
sub
or
push
sub
sbb
add
(bad)
(bad)
inc
outs
ins
add
or
add
add
sbb
add
or
(bad)
adc
adc
adc
adc
adc
xor
add
(bad)
(bad)
inc
pop
adc
add
inc
adc
add
add
inc
add
add
idiv
(bad)
inc
inc
push
inc
or
cmp
inc
add
add
idiv
(bad)
inc
outs
add
or
or
adc
or
add
push
outs
outs
add
or
movups
outs
imul
outs
push
add
and
movq
add
sub
adc
add
inc
adc
adc
adc
add
or
push
sub
sbb
add
(bad)
(bad)
dec
adc
sub
or
adc
adc
pop
outs
ins
add
or
add
add
adc
add
adc
pop
(bad)
adc
adc
adc
xor
add
inc
adc
adc
sub
sbb
add
add
(bad)
(bad)
inc
outs
ins
add
or
add
outs
jo
add
add
add
add
or
pop
adc
add
inc
adc
adc
cmp
(bad)
(bad)
call
add
(bad)
(bad)
inc
add
adc
sub
add
add
or
pop
add
and
add
jge
add
add
add
or
add
add
add
sub
adc
add
add
add
adc
add
add
add
jnp
add
add
jnp
add
add
sub
add
push
and
push
sub
xor
add
add
add
jne
add
add
push
adc
add
inc
or
sub
add
add
add
jnp
add
add
jnp
add
add
sub
add
push
and
sub
add
or
add
add
or
or
add
add
add
jae
add
or
add
add
or
sub
add
add
add
add
jb
add
add
add
add
jae
add
or
je
add
add
sub
add
push
add
outs
cmp
add
add
sub
sbb
adc
sbb
add
add
add
add
add
add
push
or
push
adc
sub
add
or
jle
add
add
or
add
and
add
or
add
and
or
mov
add
push
or
add
or
add
and
add
add
add
add
add
or
push
outs
or
es
sub
sbb
add
add
(bad)
(bad)
call
sub
add
adc
inc
adc
adc
sub
jle
add
add
jle
add
add
add
or
add
add
or
(bad)
or
pop
(bad)
adc
adc
adc
xor
add
jle
add
add
or
add
or
outs
sldt
or
jle
add
add
push
add
add
or
add
and
add
add
jle
add
add
sub
add
or
add
outs
adc
add
add
ficom
add
adc
adc
sub
push
sub
add
add
fadd
add
sub
add
adc
add
add
add
add
add
sbb
pop
add
add
or
add
add
add
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
add
add
sub
pop
add
push
sub
sbb
add
(bad)
(bad)
inc
jnp
add
add
pop
add
or
add
or
add
sub
add
add
add
sub
add
add
add
add
inc
inc
add
add
add
adc
sbb
jle
add
sbb
add
add
or
add
add
add
rol
add
sub
add
add
outs
js
add
add
pop
outs
jns
add
add
adc
pop
je
sub
add
add
outs
jnp
add
add
push
outs
jl
add
add
push
outs
jge
add
add
pop
sub
add
and
add
add
push
outs
jg
add
add
push
outs
add
or
add
outs
add
push
outs
add
or
add
add
sbb
adc
pusha
add
add
add
adc
adc
add
jae
add
or
add
push
or
test
add
and
or
sub
sbb
add
add
idiv
(bad)
call
sub
add
es
add
xor
push
add
add
outs
inc
add
push
and
add
add
outs
test
add
je
add
add
add
and
or
sub
sbb
add
(bad)
(bad)
(bad)
cmp
or
add
push
and
add
add
lea
add
adc
add
push
and
adc
xchg
add
and
pop
sub
or
or
add
or
or
sub
adc
sub
es
adc
sub
adc
add
push
adc
adc
push
add
ficom
adc
adc
add
inc
or
sub
adc
outs
pop
add
or
add
add
or
add
or
inc
(bad)
(bad)
inc
fisubr
or
add
add
add
inc
or
sub
sbb
add
add
idiv
(bad)
dec
jne
add
add
add
or
add
fisub
add
adc
add
inc
or
sub
sbb
add
add
(bad)
(bad)
inc
pop
outs
cmp
push
add
outs
xor
add
add
sub
add
add
add
rol
add
sldt
add
add
add
add
add
add
add
add
add
add
rol
add
or
add
sub
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
xor
add
add
pop
add
adc
jae
add
or
sub
add
add
or
outs
mov
add
or
add
jo
pop
or
or
add
adc
or
push
add
push
sub
sub
es
add
(bad)
adc
adc
mov
adc
sub
add
add
(bad)
(bad)
call
sub
add
or
pop
sub
adc
sub
add
xor
add
add
adc
jle
add
or
pop
adc
push
add
push
jae
add
or
pop
outs
xchg
add
or
outs
xchg
add
or
xchg
add
or
add
adc
jb
add
jo
sub
es
inc
adc
adc
xchg
add
or
xor
push
add
push
and
add
and
add
and
add
and
and
add
outs
call
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
push
or
add
inc
adc
or
add
or
add
push
sub
add
adc
sub
adc
sub
add
add
add
push
add
add
add
add
adc
add
sbb
add
adc
add
add
mov
add
jb
add
jo
fwait
add
or
add
or
sub
push
sub
add
xor
int3
add
add
add
adc
add
outs
popf
add
or
add
add
push
and
sub
es
inc
sub
add
and
add
and
add
push
and
add
and
add
or
pop
lea
add
add
push
pop
and
add
and
inc
sub
add
and
add
and
add
push
and
add
and
push
add
push
and
add
and
add
and
pop
inc
sub
add
and
sbb
add
pop
dec
sub
add
and
add
adc
push
add
push
and
add
or
adc
adc
sub
sbb
add
add
(bad)
(bad)
call
sub
add
sub
add
add
or
pop
or
mov
pop
je
push
add
push
and
add
or
adc
adc
cmp
adc
add
and
add
pop
jge
push
add
push
and
add
push
and
add
and
cmps
add
or
sub
add
push
and
add
and
add
or
adc
adc
sub
sbb
add
add
(bad)
(bad)
jmp
adc
add
outs
cmps
add
or
add
or
add
add
stos
add
or
inc
adc
adc
sub
sub
add
lods
add
or
add
add
inc
add
push
and
add
outs
cmp
add
add
add
or
adc
adc
sub
sbb
add
(bad)
(bad)
jmp
adc
add
and
add
and
add
add
push
add
push
and
add
and
sbb
add
pop
dec
sub
add
and
add
outs
lods
add
or
add
pop
adc
or
adc
pop
outs
scas
add
or
adc
sbb
sbb
add
adc
adc
push
and
add
add
push
add
push
and
add
add
or
or
mov
movs
sbb
add
add
or
and
add
add
push
add
push
and
add
add
or
or
mov
movs
sbb
add
add
or
and
add
add
push
add
push
and
add
add
or
or
mov
movs
sbb
add
add
or
mov
add
and
add
add
pop
sub
es
ficom
and
or
or
sub
sub
add
fiadd
add
sub
add
add
add
add
add
mov
add
mov
add
push
add
add
add
add
xor
add
add
adc
jle
add
add
sub
or
sub
sbb
add
add
(bad)
(bad)
call
sub
add
and
add
add
push
add
push
ror
inc
add
or
add
and
add
or
adc
add
jle
add
add
sub
or
add
add
xor
add
add
add
add
adc
jle
add
add
sub
push
sub
add
or
or
add
add
add
add
adc
add
sub
add
adc
add
add
add
add
inc
add
push
and
add
add
push
add
push
jle
add
add
mov
add
sub
add
or
sldt
sbb
sub
pop
sub
add
add
or
and
add
add
add
push
sub
push
add
add
jae
add
or
adc
add
adc
add
sub
add
add
or
or
add
add
add
add
mov
add
add
add
xor
add
add
add
adc
add
outs
mov
push
sub
sbb
add
add
(bad)
(bad)
call
sub
add
sub
add
outs
mov
add
sub
xor
add
jle
add
add
inc
or
sub
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
add
pop
sub
or
pop
adc
sub
add
or
jle
add
add
inc
or
sub
sub
add
push
adc
push
inc
add
push
jae
add
or
add
or
pop
adc
add
add
sbb
or
sub
sbb
add
add
(bad)
(bad)
inc
sub
add
add
fadd
add
add
add
sub
or
add
adc
add
add
add
add
add
add
adc
add
or
add
adc
sub
add
and
push
sub
add
sbb
or
ja
add
daa
add
adc
sub
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
add
(bad)
(bad)
jmp
add
add
push
add
push
and
add
jp
jae
add
push
or
add
pop
add
push
push
add
add
add
lea
add
sub
or
sub
push
outs
pop
add
or
ficom
sub
sbb
add
add
idiv
(bad)
inc
outs
rol
or
sub
add
add
add
sbb
or
add
add
add
adc
add
add
xor
add
add
sub
add
add
add
add
add
(bad)
(bad)
call
sub
add
and
add
add
push
add
push
and
add
jp
add
push
or
add
xchg
add
add
and
adc
add
sub
adc
sub
sbb
add
add
(bad)
(bad)
inc
outs
pop
add
or
ficom
sub
sbb
add
add
(bad)
(bad)
inc
outs
rol
or
sub
sbb
add
add
add
dec
add
add
add
add
add
arpl
adc
add
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
add
add
lea
add
and
add
rol
or
sub
add
or
or
add
add
add
add
add
ret
or
add
add
xor
add
add
add
add
add
sub
add
or
add
xor
add
add
add
add
add
add
les
add
sub
xor
add
add
add
add
add
add
lds
add
sub
add
add
or
or
add
add
add
add
add
dec
add
push
sub
add
add
or
pop
add
add
add
add
sub
add
sub
add
or
or
add
add
add
add
sub
add
sub
xor
add
add
add
add
add
add
push
add
push
sub
add
adc
add
add
add
adc
add
add
push
sbb
add
(bad)
(bad)
call
sub
add
es
add
jo
push
sub
or
mov
or
mov
mov
and
add
and
add
or
push
sub
and
add
add
or
pop
add
add
add
add
sub
add
xor
add
add
adc
or
add
add
xchg
and
sub
add
add
(bad)
(bad)
call
sub
add
es
add
add
xchg
or
pop
pop
dec
add
sub
and
add
xchg
pop
inc
pop
sub
add
xchg
and
(bad)
call
bound
push
jle
add
add
pop
pop
xchg
pusha
or
sbb
or
add
inc
jle
add
add
xchg
and
(bad)
(bad)
call
sbb
push
jle
add
add
pop
pop
xchg
pop
adc
or
jle
add
add
sbb
push
bound
push
jle
add
add
sbb
pusha
or
sbb
or
add
pop
das
adc
inc
add
add
idiv
(bad)
(bad)
jle
add
or
sub
add
or
add
add
push
outs
mov
or
sub
add
or
add
adc
or
push
add
add
add
adc
jae
add
push
jge
add
add
and
add
add
jge
add
add
and
add
add
jge
add
add
and
add
add
jge
add
add
and
add
lea
add
jge
add
add
and
add
lea
add
jge
add
add
and
add
add
jge
add
add
sbb
adc
add
jge
add
add
sbb
adc
add
jge
add
add
sbb
adc
add
jge
add
add
sbb
add
add
add
add
adc
add
pop
jge
add
add
pop
jge
add
add
sub
add
or
or
inc
add
add
add
and
add
add
movs
adc
add
add
add
add
and
add
add
movs
adc
add
add
add
add
and
add
add
movs
adc
add
push
pop
pop
or
sbb
mov
add
outs
add
push
add
push
add
add
imul
push
add
jbe
add
sub
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
push
add
add
add
add
jnp
add
add
retf
add
or
add
or
push
add
add
add
add
jnp
add
add
int3
add
or
add
or
add
add
add
add
push
sub
add
xor
add
add
add
add
add
jnp
add
add
int
add
and
add
or
push
add
add
add
add
jnp
add
add
into
add
or
add
or
adc
add
add
add
and
add
sub
add
and
add
jp
add
xor
add
add
add
add
add
jnp
add
add
push
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
add
rol
add
sub
add
or
adc
add
add
add
and
add
push
and
add
jp
add
xor
add
add
add
add
add
jmp
add
sub
add
and
add
jp
add
xor
add
add
add
add
add
cmp
add
sub
add
and
add
jp
add
xor
add
add
add
add
add
test
add
sub
add
and
add
jp
add
xor
add
add
adc
sub
add
add
(bad)
(bad)
call
sub
add
es
add
add
push
add
push
and
add
jp
or
and
outs
rol
add
and
xor
inc
add
add
idiv
(bad)
inc
sub
add
pop
pop
rcr
add
add
add
idiv
(bad)
inc
add
add
add
add
add
sub
add
and
jnp
add
add
push
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
add
rol
or
add
add
xor
add
add
sub
add
add
add
add
adc
add
idiv
(bad)
call
sub
add
es
add
add
add
add
add
pop
pop
pop
inc
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
jns
add
sub
add
jp
add
sub
add
jnp
add
sub
add
jl
add
push
sub
add
adc
add
popa
add
add
add
adc
push
jge
add
add
or
dec
add
add
add
nop
sub
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
add
jnp
add
add
rcr
add
add
add
add
pushf
add
add
pop
jge
add
add
pop
pop
or
and
add
add
stos
sub
add
adc
or
jl
add
sub
add
add
jno
add
and
jno
add
and
jno
add
or
sub
add
and
inc
xor
sbb
add
add
(bad)
(bad)
call
sub
add
es
pop
pop
xor
sbb
add
add
idiv
(bad)
dec
pop
push
add
add
idiv
(bad)
dec
pop
xor
add
or
pop
jge
add
add
add
pop
xor
jge
add
add
jge
add
add
adc
adc
xor
add
adc
sub
add
and
jno
add
and
jno
add
and
jno
add
and
jno
add
and
sub
add
and
pop
pop
xor
inc
add
add
idiv
(bad)
call
sub
add
es
pop
jb
push
sbb
add
add
idiv
(bad)
dec
pop
inc
xor
inc
add
add
idiv
(bad)
dec
pop
cmp
xor
inc
add
add
idiv
(bad)
call
add
push
xor
inc
add
add
idiv
(bad)
call
add
add
adc
inc
add
add
idiv
(bad)
inc
sub
add
sub
pop
xor
inc
pop
pop
inc
xor
pop
inc
add
add
idiv
(bad)
dec
pop
pop
xor
or
xor
sbb
add
(bad)
(bad)
call
add
push
xor
sbb
add
add
(bad)
(bad)
call
add
sbb
add
add
(bad)
(bad)
jmp
add
push
add
jge
add
add
add
sub
add
and
add
add
sub
add
and
jge
add
add
sub
add
add
add
add
mov
add
add
jge
add
add
add
add
xor
add
add
add
add
add
jnp
add
add
mov
add
imul
jnp
add
add
jnp
add
add
sbb
inc
add
add
idiv
(bad)
call
sub
add
sub
add
add
add
bound
add
add
pop
fs
jge
add
add
add
add
add
jnp
add
add
jge
add
add
add
add
or
cmp
add
add
add
add
sub
add
and
add
jnp
add
add
jnp
add
add
sbb
add
(bad)
(bad)
call
sub
add
sub
pop
jge
add
add
add
or
push
add
add
add
add
add
add
add
push
jge
add
add
push
jge
add
add
add
sbb
push
add
add
sldt
adc
or
jnp
add
add
rol
add
or
or
sub
add
fiadd
push
adc
add
add
idiv
(bad)
call
sub
add
sub
add
add
jnp
add
add
bound
and
add
add
jge
add
add
and
add
pop
jge
add
add
add
add
adc
add
add
add
adc
or
add
add
xor
add
add
sldt
adc
push
add
outs
add
push
add
add
add
xor
pop
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
jnp
add
add
pop
pop
pop
pop
arpl
add
pop
pop
bound
pop
pop
or
and
add
pop
jge
add
add
sub
xor
add
add
add
add
add
push
sub
add
shr
add
add
xor
add
add
add
add
add
add
jo
add
and
adc
or
xor
add
sldt
adc
push
sub
add
or
push
bound
push
sub
add
and
push
bound
push
sub
add
and
push
bound
push
sub
add
and
sub
xor
add
add
add
add
adc
or
or
adc
add
add
movs
adc
add
pop
pop
pop
or
sbb
out
inc
add
add
idiv
(bad)
call
sub
add
es
adc
or
or
add
sub
add
pop
inc
pushf
or
pop
or
jmp
idiv
(bad)
call
adc
outs
add
add
adc
sub
push
adc
das
add
add
add
adc
add
jo
add
and
pushf
adc
adc
sbb
add
add
(bad)
(bad)
jmp
sub
adc
sub
add
add
add
add
adc
push
pop
push
pushf
adc
pop
pop
adc
adc
pop
adc
in
inc
add
add
idiv
(bad)
call
add
pop
adc
add
adc
mov
sub
add
add
add
add
pop
adc
add
sub
add
and
pop
movaps
add
and
adc
sub
push
adc
sub
adc
pop
pop
adc
add
sub
add
and
sbb
add
(bad)
(bad)
inc
jnp
add
add
or
or
pushf
adc
pop
pop
adc
adc
adc
xor
sbb
add
(bad)
(bad)
call
adc
adc
adc
adc
adc
sbb
add
add
(bad)
(bad)
call
adc
sub
xor
add
push
xchg
adc
adc
setno
adc
adc
or
movups
movhps
pushf
adc
pop
pop
adc
adc
push
xor
pop
inc
add
add
idiv
(bad)
call
or
adc
pushf
add
add
add
push
adc
pushf
adc
pop
pop
adc
adc
adc
xor
add
idiv
(bad)
call
adc
cmp
add
add
sub
add
and
adc
sub
pop
sub
add
and
inc
add
add
idiv
(bad)
call
adc
pop
adc
sub
adc
pop
pop
adc
add
sub
add
pop
rcr
inc
add
add
idiv
(bad)
inc
adc
mov
adc
adc
rcr
adc
adc
adc
xor
sbb
add
add
(bad)
(bad)
call
adc
pop
adc
adc
adc
xor
add
idiv
(bad)
call
adc
cdq
add
add
and
adc
adc
sub
adc
push
adc
adc
add
adc
xchg
sub
add
or
adc
adc
add
adc
xchg
sub
add
or
pop
pop
pop
adc
adc
adc
xor
pop
inc
add
add
idiv
(bad)
inc
jnp
add
add
adc
adc
add
add
add
add
adc
adc
add
add
add
add
adc
adc
add
push
adc
adc
add
adc
sub
jnp
add
add
adc
adc
pop
adc
adc
or
pop
(bad)
(bad)
call
idiv
(bad)
jmp
add
add
xor
add
add
add
add
adc
add
add
lea
add
or
mov
jnp
add
add
or
add
sbb
jb
add
and
add
sub
push
add
add
add
pop
or
or
adc
aaa
add
add
add
pop
pop
adc
add
add
out
inc
add
add
idiv
(bad)
call
sub
add
es
adc
sub
push
rcr
push
adc
and
add
add
jmp
idiv
(bad)
inc
adc
add
add
or
pop
pop
or
adc
pop
adc
jnp
add
add
xchg
adc
add
add
add
pop
xchg
adc
add
or
jo
add
and
adc
pop
adc
adc
jecxz
add
sub
add
jae
add
push
jp
or
pop
adc
sub
add
outs
add
push
add
add
add
xor
sbb
add
add
(bad)
(bad)
inc
jnp
add
add
jnp
add
add
pop
pop
pop
pop
arpl
pop
adc
add
add
pop
jge
add
add
or
bound
or
or
or
jnp
add
add
pop
mov
adc
xchg
xor
add
idiv
(bad)
call
or
jnp
add
add
pop
mov
adc
xchg
pop
push
xor
inc
add
add
idiv
(bad)
call
or
jnp
add
add
pop
mov
adc
xchg
pop
and
add
add
adc
jecxz
add
sub
add
and
add
jp
jnp
add
add
pop
mov
adc
add
add
add
pop
mov
adc
xchg
pop
xchg
adc
adc
or
or
add
(bad)
(bad)
jmp
adc
sub
sbb
add
add
(bad)
(bad)
call
or
inc
movs
add
add
inc
add
add
idiv
(bad)
call
or
sbb
add
add
(bad)
(bad)
call
or
or
sbb
or
xor
sbb
add
add
(bad)
(bad)
call
or
adc
adc
adc
add
add
(bad)
(bad)
dec
pop
pop
or
adc
pop
adc
jnp
add
add
xchg
adc
add
add
add
pop
xchg
adc
add
or
jo
add
and
inc
adc
pop
pop
adc
sub
add
outs
add
push
add
add
add
xor
add
add
add
jnp
add
add
pop
pop
pop
pop
arpl
pop
adc
add
add
pop
jge
add
add
or
bound
or
or
or
jnp
add
add
pop
mov
adc
xchg
xor
add
idiv
(bad)
inc
jnp
add
add
pop
mov
adc
add
add
add
pop
mov
adc
xchg
pop
xchg
adc
adc
cmp
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
or
cmp
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
or
pop
adc
jnp
add
add
push
xchg
xchg
adc
add
add
add
push
(bad)
add
add
push
sub
add
add
pop
jge
add
add
jnp
add
add
jnp
add
add
push
pushf
adc
pop
adc
or
xor
pop
inc
add
add
idiv
(bad)
inc
jnp
add
add
aas
dec
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
jg
add
cmp
and
add
pop
jge
add
add
jnp
add
add
xor
sbb
add
add
idiv
(bad)
jmp
jg
add
push
adc
pop
pop
xchg
adc
add
add
add
jnp
add
add
setno
and
add
add
add
jnp
add
add
jnp
add
add
setno
adc
adc
adc
push
adc
pop
pop
xchg
pushf
adc
pop
pop
adc
adc
push
xor
pop
inc
add
add
idiv
(bad)
inc
push
adc
pushf
adc
add
add
(bad)
(bad)
dec
pop
pop
or
adc
pop
adc
jnp
add
add
xchg
adc
add
add
add
pop
xchg
adc
add
or
jo
add
and
dec
adc
pop
pop
adc
sub
add
outs
add
push
add
add
add
xor
sbb
add
add
(bad)
(bad)
inc
jnp
add
add
jnp
add
add
pop
pop
pop
pop
arpl
pop
adc
add
add
pop
jge
add
add
or
bound
or
or
or
jnp
add
add
pop
mov
adc
xchg
xor
add
idiv
(bad)
inc
jnp
add
add
pop
mov
adc
add
add
add
pop
mov
adc
xchg
pop
xchg
adc
cmp
cld
(bad)
inc
add
xor
add
add
add
add
adc
add
add
lea
add
or
push
push
sahf
add
add
add
push
pop
and
add
add
aad
add
pop
or
adc
pop
(bad)
add
add
pop
xchg
pop
push
pop
pop
pop
or
and
add
add
in
inc
add
add
idiv
(bad)
call
sub
add
es
or
and
jnp
add
add
xchg
or
add
or
add
add
or
pop
or
add
add
add
rcr
inc
add
add
idiv
(bad)
call
add
jnp
add
add
jnp
add
add
jge
add
add
push
jge
add
add
push
jge
add
add
and
add
add
add
add
jnp
add
add
adc
add
add
push
jge
add
add
sub
add
sub
sub
add
sub
add
xor
or
add
add
add
add
add
add
jnp
add
add
out
add
sbb
add
add
(bad)
(bad)
call
sub
add
add
jnp
add
add
inc
add
add
add
add
add
jnp
add
add
jge
add
add
add
add
add
jnp
add
add
jge
add
add
jnp
add
add
sbb
add
add
(bad)
(bad)
inc
jle
add
add
jnp
add
add
jge
add
add
and
add
pop
jge
add
add
jnp
add
add
add
add
xor
add
jge
add
add
and
add
pop
jge
add
add
and
add
jnp
add
add
add
sub
pop
popa
jge
add
add
and
add
pop
jge
add
add
add
add
add
add
add
sbb
add
add
jnp
add
add
jnp
add
add
mov
add
sub
sub
push
add
imul
push
add
jbe
add
sub
add
xor
add
add
add
jnp
add
add
jnp
add
add
js
inc
add
add
idiv
(bad)
call
sub
add
add
jnp
add
add
inc
add
add
add
add
add
jnp
add
add
jge
add
add
add
add
add
jnp
add
add
jge
add
add
and
add
pop
jge
add
add
add
add
add
add
add
sbb
aas
add
add
jnp
add
add
jnp
add
add
mov
add
sub
sub
push
add
imul
push
add
jbe
add
sub
add
adc
or
sbb
add
add
jnp
add
add
jnp
add
add
sub
inc
add
add
idiv
(bad)
call
sub
add
add
jge
add
add
pop
jge
add
add
sub
add
sub
and
add
pop
jge
add
add
jnp
add
add
aas
mov
inc
add
add
idiv
(bad)
inc
add
add
add
jnp
add
add
jge
add
add
add
add
add
jnp
add
add
jge
add
add
jnp
add
add
dec
sbb
add
(bad)
(bad)
inc
jle
add
add
jnp
add
add
jge
add
add
and
add
pop
jge
add
add
jnp
add
add
add
add
xor
sbb
add
add
(bad)
(bad)
inc
push
jge
add
add
and
add
pop
jge
add
add
and
add
jnp
add
add
add
sub
pop
shl
jge
add
add
push
jge
add
add
sbb
add
add
sub
add
sub
sbb
add
add
sub
add
sub
add
adc
pop
add
add
add
add
add
add
add
jnp
add
add
aas
sbb
add
add
idiv
(bad)
call
sub
add
add
jnp
add
add
add
add
jnp
add
add
jnp
add
add
mov
add
add
add
pop
jge
add
add
add
jge
add
add
and
add
pop
jge
add
add
push
jge
add
add
sub
add
sub
xor
add
add
add
jnp
add
add
jnp
add
add
sub
inc
add
add
idiv
(bad)
call
sub
add
add
jge
add
add
pop
jge
add
add
sub
add
sub
and
add
pop
jge
add
add
jnp
add
add
xor
inc
add
add
idiv
(bad)
inc
add
add
add
jnp
add
add
jge
add
add
add
add
add
jnp
add
add
jge
add
add
sbb
add
push
jge
add
add
sub
push
sub
sbb
add
add
sub
add
sub
xor
add
add
add
add
add
add
add
jnp
add
add
aas
pop
inc
add
add
idiv
(bad)
call
sub
add
add
jnp
add
add
add
add
jnp
add
add
jnp
add
add
mov
add
add
add
pop
jge
add
add
add
jge
add
add
and
add
pop
jge
add
add
push
jge
add
add
sub
add
sub
xor
add
add
adc
add
aas
sbb
add
add
(bad)
(bad)
call
sub
add
add
or
daa
sbb
add
add
(bad)
(bad)
call
add
add
add
adc
jnp
add
add
or
sbb
inc
add
add
idiv
(bad)
jmp
add
add
sub
add
and
add
jp
add
add
add
sub
xchg
add
pop
or
push
lea
add
jge
add
add
push
lea
add
jge
add
add
add
add
xor
add
add
add
add
add
daa
add
add
push
add
push
and
add
jp
add
xor
add
add
add
add
add
jle
add
sub
add
and
add
jp
add
xor
add
add
add
add
add
mov
push
add
push
jae
add
push
jp
xor
add
add
add
add
add
push
add
add
push
add
push
and
add
jp
add
xor
add
add
add
add
adc
or
add
sub
push
or
adc
or
or
or
pop
or
push
push
xor
sbb
add
add
(bad)
(bad)
call
sub
add
es
pop
pop
or
push
add
sub
add
push
sahf
or
pop
or
repz
add
add
(bad)
(bad)
call
adc
pop
add
pop
(bad)
add
add
adc
pop
adc
add
push
xor
pop
adc
add
add
pop
pop
xchg
pop
push
adc
adc
sbb
add
(bad)
(bad)
call
adc
sub
add
push
push
sahf
adc
pop
pop
adc
adc
pop
pop
xor
sbb
add
(bad)
(bad)
call
adc
push
add
or
and
pop
add
or
pop
xchg
add
or
adc
adc
pop
pop
sahf
adc
pop
bound
pop
adc
pop
pop
adc
adc
push
add
add
add
idiv
(bad)
dec
add
pop
adc
sub
add
or
adc
pop
pop
xchg
pop
pop
pop
bound
adc
xchg
pop
sahf
adc
pop
pop
adc
adc
push
add
add
add
idiv
(bad)
jmp
add
xor
add
add
add
add
add
add
or
test
add
sub
add
xor
add
add
add
add
add
pop
push
lea
add
and
add
rol
or
add
add
pop
jge
add
add
jae
add
push
jge
add
add
and
add
add
jge
add
add
and
add
add
jge
add
add
and
add
add
jge
add
add
and
add
lea
add
add
add
add
and
add
lea
add
add
add
add
and
add
add
jge
add
add
adc
add
sub
add
or
add
sahf
add
push
add
xor
add
add
pop
or
sbb
idiv
(bad)
call
sub
add
es
or
or
add
das
nop
add
add
(bad)
(bad)
call
dec
add
add
add
lods
add
push
add
call
add
push
sub
add
sbb
add
add
add
add
push
outs
xlat
add
or
pop
add
fadd
add
fsubr
add
add
adc
add
add
add
or
pop
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
add
add
add
add
push
sub
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
jnp
add
add
fld
add
and
add
or
push
add
add
add
add
jnp
add
add
int
add
and
add
or
push
add
add
add
add
jnp
add
add
into
add
or
add
or
adc
add
add
add
and
add
add
push
add
push
and
add
jp
add
xor
add
add
add
add
add
nop
add
add
push
add
push
jae
add
or
xor
add
add
add
add
add
fld
add
push
add
push
and
add
jp
add
xor
add
add
add
add
add
sub
add
sub
add
and
add
jp
add
xor
add
add
add
add
add
jge
add
sub
add
and
add
jp
add
xor
add
add
adc
sub
add
add
(bad)
(bad)
call
sub
add
es
add
add
push
add
push
jae
add
or
push
das
sbb
inc
add
add
idiv
(bad)
jmp
mov
add
jae
add
or
push
das
sbb
inc
add
add
idiv
(bad)
jmp
rol
add
push
and
add
jp
mov
pop
add
add
add
push
and
add
jp
or
lar
add
pop
xchg
outs
fild
add
push
pop
pop
or
add
add
add
idiv
(bad)
jmp
adc
push
add
add
adc
add
add
add
add
add
pop
or
jnp
add
add
cs
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
xor
add
add
idiv
(bad)
inc
and
add
pop
jge
add
add
jnp
add
add
inc
add
xor
inc
add
add
idiv
(bad)
inc
sub
adc
add
push
jge
add
add
add
xchg
add
push
add
jge
add
add
push
jge
add
add
add
jge
add
add
and
add
pop
jge
add
add
add
add
or
push
add
add
add
add
pop
outs
xlat
add
or
sub
add
or
add
adc
add
popa
add
add
add
adc
push
jge
add
add
or
cmp
jnp
add
add
nop
sub
add
add
add
jnp
add
add
rcr
add
add
add
add
popf
add
add
pop
jge
add
add
pop
pop
or
and
add
add
mov
add
idiv
(bad)
call
sub
add
sub
add
adc
or
xor
add
sub
add
add
add
add
jnp
add
add
lar
add
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
jnp
add
add
pushf
push
or
adc
add
jnp
add
add
mov
add
push
pop
pop
or
add
add
add
loop
inc
add
add
idiv
(bad)
inc
jnp
add
add
pop
pop
pop
inc
add
add
add
add
add
add
cmp
add
add
and
add
pop
jge
add
add
jnp
add
add
jnp
add
add
pop
add
add
add
pushf
sub
and
add
pop
jge
add
add
jnp
add
add
jnp
add
add
pop
add
add
add
pushf
add
add
pop
jge
add
add
jnp
add
add
jnp
add
add
pop
add
add
add
pushf
sub
and
add
pop
jge
add
add
jnp
add
add
jnp
add
add
pop
add
add
add
pushf
add
add
pop
jge
add
add
jnp
add
add
jnp
add
add
pop
add
add
add
pushf
add
add
pop
jge
add
add
jnp
add
add
jnp
add
add
pop
add
add
add
pushf
sub
jnp
add
add
jnp
add
add
pop
pop
pushf
add
add
pop
jge
add
add
jnp
add
add
jnp
add
add
pop
add
add
add
pushf
add
add
pop
jge
add
add
jnp
add
add
jnp
add
add
pop
add
add
add
pushf
add
add
pop
jge
add
add
jnp
add
add
jnp
add
add
pop
add
add
add
pushf
add
add
pop
jge
add
add
jnp
add
add
jnp
add
add
pop
add
add
add
pushf
add
add
pop
jge
add
add
jnp
add
add
jnp
add
add
pop
add
add
add
pop
rcr
add
add
fwait
add
push
add
xchg
add
push
sub
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
xlat
add
or
jnp
add
add
dec
sbb
add
add
(bad)
(bad)
call
sub
add
add
jge
add
add
jnp
add
add
xor
sbb
add
add
(bad)
(bad)
inc
sub
adc
add
sub
popf
add
push
add
add
or
sub
inc
add
add
idiv
(bad)
inc
sub
es
sbb
add
add
idiv
(bad)
inc
jnp
add
add
rol
or
sub
add
add
add
add
pop
pop
add
add
or
or
add
add
add
add
add
add
rol
add
sub
xor
add
add
add
push
jge
add
add
push
jge
add
add
pop
inc
sub
pop
pop
sub
pop
push
push
add
xor
jnp
add
add
sub
push
jge
add
add
add
add
xor
add
add
adc
jnp
add
add
mov
add
add
add
or
or
add
push
pushf
push
pop
pop
or
and
add
add
jmp
and
jnp
add
add
pop
adc
jge
add
add
add
add
xor
add
add
add
add
add
jnp
add
add
das
adc
inc
add
add
idiv
(bad)
call
sub
add
sub
add
add
add
mov
add
and
add
add
add
add
add
bound
jnp
add
add
pop
fs
jge
add
add
and
add
jnp
add
add
jge
add
add
sub
pop
xor
mov
pop
inc
sub
pop
pop
sub
pop
sub
pop
push
sub
pop
pop
sub
add
add
add
mov
jnp
add
add
and
inc
add
add
idiv
(bad)
inc
pop
pop
sub
and
add
pop
jge
add
add
or
pop
push
sub
sub
add
xor
add
add
add
add
add
pop
sub
pop
jb
mov
pop
inc
sub
pop
cmp
mov
pop
push
sub
and
mov
add
add
add
mov
sub
add
add
or
sbb
add
add
add
add
add
push
jge
add
add
push
jge
add
add
push
jge
add
add
add
add
xor
add
add
sldt
adc
inc
add
add
add
sbb
add
add
add
shr
add
or
and
add
bound
add
add
and
add
pop
jge
add
add
and
add
pop
jge
add
add
jnp
add
add
xor
add
idiv
(bad)
call
sub
add
sub
xor
add
add
sldt
adc
inc
add
add
add
sbb
add
add
add
shr
add
or
and
add
bound
add
add
and
add
pop
jge
add
add
and
add
pop
jge
add
add
jnp
add
add
das
mov
and
add
pop
and
jnp
add
add
add
pop
pop
bound
pop
add
add
and
add
pop
jge
add
add
add
or
or
add
add
add
add
add
mov
add
add
xor
inc
add
add
add
add
push
add
sbb
inc
add
pop
sub
push
add
adc
inc
add
pop
sub
push
add
arpl
inc
add
pop
sub
push
add
inc
add
pop
sub
add
add
xor
add
add
add
add
add
add
mov
add
add
xor
add
add
adc
or
or
adc
add
add
movs
adc
add
pop
pop
pop
or
sbb
out
inc
add
add
idiv
(bad)
call
sub
add
es
or
jnp
add
add
pop
or
sub
adc
adc
adc
add
adc
add
adc
inc
add
add
idiv
(bad)
call
add
pop
adc
add
xor
sbb
add
add
(bad)
(bad)
inc
jnp
add
add
xor
sbb
add
add
(bad)
(bad)
jmp
scas
add
push
add
add
add
enter
das
add
push
add
add
add
pop
add
add
nop
add
add
(bad)
(bad)
call
adc
sub
add
add
add
mov
add
das
movhps
add
add
(bad)
(bad)
call
adc
sub
add
add
add
pusha
or
add
nop
add
add
(bad)
(bad)
call
adc
sub
sbb
push
adc
adc
add
add
add
or
adc
cmp
add
add
or
pop
pop
adc
push
adc
adc
pop
pop
adc
adc
or
pop
adc
or
jnp
add
add
or
pop
adc
adc
adc
das
sbb
inc
add
add
idiv
(bad)
call
or
pop
pop
xor
sbb
add
add
(bad)
(bad)
call
or
or
xor
pop
adc
cs
add
idiv
(bad)
call
pop
pop
cs
adc
adc
pop
sbb
xor
or
jnp
add
add
or
pop
adc
adc
pop
adc
adc
adc
xor
sbb
add
add
idiv
(bad)
call
or
sbb
add
add
(bad)
(bad)
inc
adc
pop
pop
mov
adc
push
adc
pop
pop
mov
adc
or
adc
inc
add
add
idiv
(bad)
call
pop
pop
pop
adc
adc
pop
adc
adc
adc
pop
adc
adc
push
cmp
sbb
adc
add
adc
push
adc
sub
adc
adc
and
add
add
movs
adc
add
adc
pop
pop
adc
adc
sbb
loop
inc
add
add
idiv
(bad)
call
adc
sbb
jne
add
adc
push
adc
cmp
add
add
adc
sub
adc
adc
sahf
adc
pop
pop
adc
adc
adc
xor
sbb
add
add
(bad)
(bad)
call
adc
sub
adc
push
adc
adc
add
adc
pop
pop
adc
call
add
idiv
(bad)
call
adc
pop
adc
adc
push
xor
sbb
add
add
(bad)
(bad)
call
or
adc
push
adc
adc
add
add
add
adc
add
sbb
add
add
(bad)
(bad)
call
or
xor
pop
adc
or
jnp
add
add
adc
inc
add
add
idiv
(bad)
inc
jnp
add
add
pop
adc
adc
sub
adc
pop
push
popf
adc
pop
pop
adc
adc
adc
xor
pop
inc
add
add
idiv
(bad)
call
push
sbb
iret
add
add
add
(bad)
(bad)
call
and
sbb
sbb
adc
adc
sub
jnp
add
add
push
xchg
adc
adc
add
sbb
pop
xchg
push
adc
pop
mov
adc
xchg
push
adc
push
sbb
adc
xchg
push
adc
push
sbb
adc
xchg
push
adc
push
sbb
adc
xchg
push
adc
push
sbb
adc
xchg
push
adc
pop
pop
adc
adc
adc
sbb
idiv
(bad)
call
adc
adc
adc
sbb
sbb
sbb
sbb
adc
sub
jnp
add
add
and
and
and
adc
and
and
mov
adc
xchg
push
and
pop
adc
adc
adc
xor
adc
pop
pop
adc
adc
adc
mov
cmp
and
and
adc
adc
add
idiv
(bad)
call
adc
and
and
pop
pop
adc
xor
adc
adc
pop
adc
adc
adc
add
add
add
add
add
adc
popf
or
pop
or
or
sub
adc
adc
adc
add
add
add
add
es
(bad)
add
add
adc
pop
pop
adc
adc
adc
fcomp
inc
add
add
idiv
(bad)
call
or
pop
adc
cmp
std
(bad)
call
adc
sub
push
adc
mov
adc
adc
mov
or
adc
mov
add
adc
pop
pop
adc
adc
adc
xor
sbb
add
add
(bad)
(bad)
call
adc
pop
adc
adc
sbb
xor
adc
adc
adc
adc
push
push
xor
push
or
add
pop
inc
add
add
idiv
(bad)
dec
and
add
xor
sbb
add
add
(bad)
(bad)
jmp
scas
add
push
sbb
sbb
add
adc
push
adc
sub
adc
adc
adc
rcr
adc
adc
adc
xor
sbb
add
add
(bad)
(bad)
call
adc
sub
jnp
add
add
sub
sub
sub
sub
adc
pop
pop
adc
sub
adc
adc
adc
popf
adc
adc
add
add
idiv
(bad)
call
sub
adc
add
add
sub
sub
popf
adc
pop
pop
adc
adc
or
movs
sbb
add
add
(bad)
(bad)
call
adc
push
adc
sub
adc
adc
and
add
add
movs
adc
add
adc
pop
pop
adc
adc
sbb
loop
adc
cmp
and
xor
adc
push
adc
dec
push
adc
mov
adc
adc
xor
adc
add
adc
adc
push
adc
mov
adc
adc
das
pop
pop
inc
add
add
idiv
(bad)
inc
adc
mov
adc
adc
adc
pop
adc
xor
xor
add
idiv
(bad)
call
xor
adc
nop
add
add
(bad)
(bad)
jmp
scas
add
push
adc
pop
das
nop
add
add
(bad)
(bad)
jmp
scas
add
push
adc
adc
mov
push
adc
mov
adc
adc
or
mov
add
adc
pop
pop
adc
adc
adc
aas
dec
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
adc
adc
dec
adc
push
adc
sub
add
add
add
ss
adc
aaa
pop
nop
sub
sbb
add
add
(bad)
(bad)
call
xor
adc
pop
pop
adc
adc
pop
adc
rcl
inc
add
add
idiv
(bad)
call
ss
pop
adc
adc
pop
adc
mov
adc
sub
adc
or
pop
pop
sub
or
pop
push
sub
cmp
pop
adc
adc
pop
adc
fistp
inc
add
add
idiv
(bad)
call
adc
sub
xor
dec
sbb
add
add
(bad)
(bad)
call
adc
sub
add
add
add
cmp
adc
cmp
sub
add
pop
sub
or
pop
push
sub
cmp
pop
adc
adc
pop
adc
rcr
inc
add
add
idiv
(bad)
call
cmp
pop
adc
adc
pop
adc
movs
sbb
add
add
(bad)
(bad)
inc
sbb
push
sub
pop
invd
sub
adc
sub
push
adc
push
add
pop
sub
cmp
pop
adc
cmp
jnp
add
add
cmp
add
add
idiv
(bad)
inc
pop
push
sub
cmp
pop
adc
adc
or
ret
push
adc
add
adc
sbb
xchg
adc
add
adc
sub
adc
sub
sbb
sub
ds
pop
adc
adc
push
adc
sbb
aas
xchg
xor
sbb
add
(bad)
(bad)
jmp
push
add
sbb
mov
ds
pop
adc
adc
push
adc
sbb
aas
xchg
xor
sbb
add
(bad)
(bad)
inc
pop
push
sub
aas
pop
pop
adc
adc
or
stos
adc
adc
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
adc
adc
adc
add
add
add
lea
add
pop
inc
add
add
idiv
(bad)
call
or
xor
pop
adc
or
jnp
add
add
or
jnp
add
add
pop
adc
or
inc
sub
add
add
add
add
inc
xchg
mov
add
add
add
inc
xchg
xchg
adc
add
add
add
inc
xchg
mov
add
add
add
inc
xchg
xchg
sub
inc
pop
pop
adc
inc
adc
mov
add
idiv
(bad)
call
or
pop
adc
adc
pop
adc
data16
(bad)
call
inc
or
add
push
sub
xor
add
add
add
add
add
pop
sbb
jnp
add
add
mov
sub
sub
adc
or
repz
add
add
adc
pop
pop
pop
or
sbb
add
push
or
add
pop
pop
or
jnp
add
add
xchg
push
xor
pop
pop
pop
or
les
add
add
add
add
xchg
or
or
or
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
add
xchg
adc
adc
add
add
add
add
add
adc
adc
pop
xor
sbb
add
add
idiv
(bad)
inc
add
add
add
add
pop
adc
add
and
inc
add
add
idiv
(bad)
inc
jnp
add
add
add
pop
pop
or
add
add
inc
add
add
idiv
(bad)
inc
jnp
add
add
xchg
adc
adc
add
add
add
add
add
adc
adc
pop
xor
add
add
add
pop
adc
add
and
inc
add
add
idiv
(bad)
inc
jnp
add
add
add
pop
pop
or
add
add
idiv
(bad)
inc
jnp
add
add
xchg
adc
adc
add
add
add
add
add
adc
adc
pop
xor
sbb
add
add
(bad)
(bad)
inc
add
add
add
add
pop
adc
add
and
inc
add
add
idiv
(bad)
inc
jnp
add
add
add
pop
pop
or
add
jnp
add
add
ins
(bad)
(bad)
call
idiv
(bad)
inc
jnp
add
add
pop
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
pop
pop
pop
or
push
cmp
(bad)
(bad)
jmp
add
xor
add
add
adc
or
aaa
add
add
add
xchg
or
jnp
add
add
add
add
add
xchg
sahf
add
add
add
push
sahf
add
pop
dec
add
add
pop
dec
add
add
add
add
inc
add
add
idiv
(bad)
call
sub
add
sub
adc
or
ret
add
add
and
add
add
or
or
pop
(bad)
pop
add
add
jge
add
add
pop
(bad)
pop
add
add
push
pop
(bad)
pop
add
add
add
pop
pop
or
jge
add
pop
and
add
add
sbb
inc
add
add
idiv
(bad)
call
sub
add
sub
pop
pop
or
pop
(bad)
pop
add
add
add
add
push
pop
(bad)
pop
add
add
add
add
push
pop
(bad)
pop
add
add
add
add
add
or
adc
adc
inc
add
add
idiv
(bad)
call
add
or
xor
or
adc
cmps
add
push
add
add
add
jnp
add
add
inc
add
add
add
add
hlt
add
add
inc
add
add
idiv
(bad)
jmp
add
add
add
jnp
add
add
xchg
adc
pop
pop
xchg
add
add
add
jnp
add
add
xchg
adc
pop
pop
xchg
add
add
add
jnp
add
add
or
arpl
xchg
sub
adc
adc
or
adc
adc
cmp
pop
inc
add
add
idiv
(bad)
inc
jnp
add
add
jnp
add
add
pop
xchg
adc
pop
pop
xchg
adc
or
add
add
(bad)
(bad)
inc
jnp
add
add
pop
xchg
adc
add
add
add
pop
add
add
add
push
xchg
sahf
add
add
add
push
adc
sahf
adc
pop
pop
adc
adc
pop
pop
adc
sub
adc
add
idiv
(bad)
call
pop
pop
pop
adc
cmp
(bad)
call
pop
adc
cmp
sbb
add
add
(bad)
(bad)
inc
jnp
add
add
jnp
add
add
or
xchg
adc
or
add
add
(bad)
(bad)
inc
jnp
add
add
or
add
add
or
jnp
add
add
or
add
or
or
adc
pop
pop
adc
adc
pop
pop
adc
sub
adc
add
idiv
(bad)
call
or
pop
adc
cmp
(bad)
call
pop
adc
xor
inc
add
add
idiv
(bad)
inc
jnp
add
add
pop
xchg
adc
add
pop
add
add
add
or
add
or
or
pop
adc
adc
pop
pop
adc
cmp
or
push
das
cmp
add
idiv
(bad)
inc
pop
(bad)
pop
add
add
jge
add
add
pop
(bad)
pop
add
add
jge
add
add
pop
(bad)
pop
add
add
add
pop
jge
add
add
pop
pop
or
repnz
add
push
or
pop
adc
pop
xor
adc
adc
pop
sub
push
or
or
or
pop
adc
pop
adc
sub
adc
pop
adc
adc
pop
xor
adc
adc
pop
sub
adc
pop
adc
add
pop
or
push
pop
pop
pop
adc
sub
adc
pop
adc
pop
pop
pop
adc
or
or
or
pop
pop
adc
push
pop
(bad)
pop
add
add
jge
add
add
pop
(bad)
pop
add
add
or
add
add
pop
(bad)
pop
add
add
add
jp
add
pop
pop
or
pop
(bad)
pop
add
add
or
pop
jge
add
add
pop
(bad)
pop
add
add
push
pop
pop
jge
add
add
pop
(bad)
pop
add
add
add
pop
jge
add
add
pop
pop
or
pop
(bad)
pop
add
add
push
jge
add
add
pop
(bad)
pop
add
add
jge
add
add
pop
(bad)
pop
add
add
add
jp
add
pop
pop
or
push
cmp
sub
add
xor
add
add
add
lea
add
or
add
add
lea
add
or
add
add
lea
add
or
or
add
add
jnp
add
add
pop
sbb
jnp
add
add
add
add
add
pop
pop
pop
pop
xchg
pushf
or
pop
or
rcr
idiv
(bad)
call
sub
add
es
or
data16
add
push
sahf
or
pop
or
add
add
adc
xor
sbb
add
add
(bad)
(bad)
inc
jnp
add
add
add
add
add
jnp
add
add
pop
xchg
pushf
add
add
add
mov
push
sbb
add
add
(bad)
(bad)
call
or
add
add
or
or
jnp
add
add
jmp
idiv
(bad)
inc
push
jge
add
add
add
and
add
add
add
ins
add
add
push
add
add
add
sub
push
adc
or
push
pushf
or
pop
or
add
xor
sbb
add
add
(bad)
(bad)
call
or
imul
sahf
or
pop
or
add
xor
add
add
add
xchg
adc
push
or
add
add
pop
pop
xchg
adc
add
add
add
push
push
bound
pop
pop
(bad)
add
add
adc
adc
or
pop
or
add
add
int3
sbb
add
add
(bad)
(bad)
call
or
imul
add
add
add
add
pop
pop
xchg
pop
push
or
pop
or
add
xor
sbb
add
(bad)
(bad)
inc
jnp
add
add
xchg
adc
push
or
add
add
sbb
adc
adc
push
bound
pop
pop
adc
adc
adc
add
add
add
or
and
add
add
add
jnp
add
add
or
or
add
add
mov
inc
add
add
idiv
(bad)
inc
jnp
add
add
jnp
add
add
pop
xchg
push
bound
jnp
add
add
xchg
pop
adc
add
add
add
or
and
add
add
add
jnp
add
add
or
add
push
or
or
or
inc
add
xor
sbb
add
(bad)
(bad)
call
adc
sbb
or
pop
adc
adc
and
add
add
out
pop
inc
add
add
idiv
(bad)
call
or
pop
adc
adc
or
xchg
adc
or
or
sbb
adc
push
adc
adc
pop
xchg
sahf
adc
adc
pop
adc
adc
adc
pop
pop
xor
jnp
add
add
adc
adc
pop
xchg
pop
pop
push
bound
add
adc
adc
pop
xchg
push
bound
add
or
pop
push
bound
add
or
bound
add
add
idiv
(bad)
inc
adc
adc
sahf
or
pop
or
add
ds
(bad)
call
inc
add
add
idiv
(bad)
call
or
inc
(bad)
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
or
add
or
cmp
add
add
or
bound
or
or
jnp
add
add
or
and
add
add
add
and
cmp
inc
add
add
idiv
(bad)
inc
jnp
add
add
or
and
(bad)
(bad)
pop
adc
add
or
pop
xchg
and
(bad)
(bad)
pop
pop
pop
adc
adc
adc
add
add
idiv
(bad)
inc
adc
test
add
adc
pop
pop
pop
pop
adc
add
jnp
add
add
sbb
add
idiv
(bad)
inc
jnp
add
add
or
inc
add
add
idiv
(bad)
jmp
add
add
add
or
add
add
and
pusha
push
adc
pop
pop
adc
adc
and
add
add
xor
(bad)
call
inc
add
add
idiv
(bad)
dec
adc
pop
pushf
or
inc
add
cmp
add
add
idiv
(bad)
inc
jnp
add
add
or
bound
pop
adc
add
add
add
or
pop
push
bound
pop
adc
pop
adc
push
adc
sub
adc
pop
pop
adc
adc
adc
pop
pop
pop
arpl
(bad)
inc
add
jmp
inc
add
add
idiv
(bad)
call
adc
sub
jnp
add
add
movups
pop
xchg
adc
adc
adc
pop
pop
pop
arpl
adc
jnp
add
add
adc
adc
das
push
sbb
add
add
(bad)
(bad)
inc
jnp
add
add
adc
jnp
add
add
pop
pop
adc
sahf
adc
pop
pop
adc
adc
adc
xor
add
idiv
(bad)
call
adc
pop
adc
pop
pop
pop
arpl
(bad)
inc
add
nop
add
add
(bad)
(bad)
jmp
scas
add
push
push
adc
sub
pop
adc
add
add
add
or
bound
or
and
(bad)
(bad)
pop
sahf
adc
pop
pop
adc
adc
and
add
add
fst
inc
add
add
idiv
(bad)
inc
jnp
add
add
or
bound
pop
adc
sub
jnp
add
add
jnp
add
add
or
push
nop
sub
add
add
(bad)
(bad)
inc
jnp
add
add
adc
xchg
add
add
add
or
add
add
(bad)
(bad)
inc
jnp
add
add
or
jnp
add
add
pop
adc
(bad)
add
add
adc
pop
pop
adc
adc
add
add
add
or
pop
push
bound
pop
aas
jle
(bad)
call
inc
add
add
idiv
(bad)
call
adc
sub
add
add
add
or
bound
or
add
add
and
pusha
push
adc
pop
pop
adc
adc
and
add
add
(bad)
sbb
add
add
(bad)
(bad)
dec
pop
pop
or
add
ds
(bad)
call
inc
add
add
idiv
(bad)
jmp
adc
or
rol
add
add
adc
or
or
or
or
add
push
pushf
or
pop
or
and
add
add
jmp
inc
add
add
idiv
(bad)
call
sub
add
es
or
test
add
push
sub
add
add
(bad)
(bad)
(bad)
jle
add
add
xchg
or
pop
pop
or
and
add
add
or
inc
add
add
idiv
(bad)
call
or
pop
pop
or
jnp
add
add
pop
pop
pop
add
and
or
add
idiv
(bad)
call
sub
pop
shl
push
add
add
add
pop
pop
pop
add
and
add
pop
rcl
jnp
add
add
jnp
add
add
pop
pop
xchg
pop
pushf
or
pop
or
add
add
add
outs
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
xor
add
add
add
add
adc
add
add
add
jnp
add
add
jge
add
add
push
jge
add
add
push
jge
add
add
pop
jge
add
add
sub
jnp
add
add
jnp
add
add
dec
sbb
add
(bad)
(bad)
call
sub
add
add
add
add
xor
inc
add
add
idiv
(bad)
inc
sub
add
and
add
jge
add
add
pop
jge
add
add
push
jge
add
add
sub
adc
add
or
and
jnp
add
add
xchg
sub
add
add
(bad)
(bad)
inc
pop
jge
add
add
pop
pop
pop
pop
or
add
add
add
(bad)
pop
inc
add
add
idiv
(bad)
inc
jnp
add
add
xor
push
sub
add
adc
add
sub
add
aaa
add
adc
jnp
add
add
pop
pop
xchg
or
jnp
add
add
pop
pop
xchg
or
pop
sbb
inc
add
add
idiv
(bad)
call
sub
add
es
pop
inc
sub
pop
pop
dec
add
add
pop
dec
add
add
add
add
pop
pop
xchg
or
jnp
add
add
pop
pop
xchg
or
pop
movhps
add
add
(bad)
(bad)
inc
pop
inc
sub
pop
pop
dec
add
add
pop
dec
add
add
add
add
pop
pop
xchg
or
jnp
add
add
pop
pop
xchg
or
pop
nop
add
add
(bad)
(bad)
inc
pop
inc
sub
pop
pop
dec
add
add
pop
dec
add
add
add
add
pop
pop
xchg
or
jnp
add
add
pop
pop
xchg
or
pop
nop
add
add
(bad)
(bad)
inc
pop
inc
sub
pop
pop
dec
add
add
pop
dec
add
add
add
add
pop
pop
xchg
or
jnp
add
add
pop
pop
xchg
or
pop
cs
sub
pop
pop
dec
add
add
pop
dec
add
add
add
add
pop
pop
xchg
or
jnp
add
add
pop
pop
xchg
or
pop
movhps
add
add
(bad)
(bad)
inc
pop
inc
sub
pop
pop
dec
add
add
pop
dec
add
add
add
add
pop
or
jnp
add
add
pop
pop
xchg
or
jnp
add
add
pop
pop
xchg
or
pop
nop
add
add
(bad)
(bad)
inc
pop
inc
sub
jnp
add
add
xchg
or
add
xchg
adc
adc
adc
add
(bad)
(bad)
dec
adc
add
add
pop
dec
add
add
pop
dec
add
add
add
add
pop
pop
xchg
or
jnp
add
add
pop
pop
xchg
or
pop
bndldx
add
add
(bad)
(bad)
inc
pop
inc
sub
jnp
add
add
xchg
or
add
xchg
adc
adc
push
or
add
add
add
pop
dec
add
add
pop
dec
add
add
add
add
pop
pop
xchg
or
jnp
add
add
pop
pop
xchg
or
pop
prefetchnta
add
add
(bad)
(bad)
inc
pop
inc
sub
jnp
add
add
xchg
or
add
xchg
adc
adc
adc
idiv
(bad)
dec
adc
add
add
pop
dec
add
add
pop
dec
add
add
add
add
pop
pop
xchg
or
jnp
add
add
pop
pop
xchg
or
pop
nop
add
add
(bad)
(bad)
inc
pop
inc
sub
jnp
add
add
xchg
or
add
xchg
adc
adc
adc
inc
add
add
idiv
(bad)
dec
adc
add
add
pop
dec
add
add
pop
dec
add
add
jnp
add
add
sbb
add
idiv
(bad)
inc
add
add
add
dec
add
add
pop
dec
add
add
jnp
add
add
adc
jnp
add
add
dec
add
add
pop
dec
add
or
pop
or
and
add
pop
jge
add
add
push
cmp
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
sub
adc
add
sahf
add
add
add
adc
mov
jnp
add
add
or
push
pop
pop
pop
adc
lea
add
jge
add
add
push
pop
adc
lea
add
jge
add
add
push
lea
add
jge
add
add
and
add
add
jge
add
add
jnp
add
add
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
add
and
idiv
(bad)
inc
jnp
add
add
adc
idiv
(bad)
inc
jnp
add
add
add
push
pop
lea
add
jge
add
add
add
adc
push
add
add
cmp
add
and
add
add
or
sub
jnp
add
add
pop
or
or
or
add
push
sahf
or
pop
or
pop
xor
sbb
add
add
(bad)
(bad)
call
sub
add
es
or
or
or
or
rcr
or
jnp
add
add
out
sbb
add
add
(bad)
(bad)
call
or
sgdtd
add
jnp
add
add
jnp
add
add
jnp
add
add
xchg
xchg
xchg
adc
adc
xchg
adc
sub
adc
pop
pop
adc
adc
adc
push
adc
xchg
adc
push
adc
adc
popf
adc
push
push
adc
popf
adc
sub
add
add
(bad)
(bad)
call
add
pop
adc
scas
add
add
add
add
add
add
idiv
(bad)
call
add
pop
adc
add
pop
adc
adc
inc
add
add
add
add
and
add
sub
add
add
add
push
popf
or
pop
or
add
(bad)
add
add
sub
add
add
add
pop
popf
or
pop
or
add
(bad)
add
add
adc
xor
inc
add
add
idiv
(bad)
call
add
pop
sbb
add
xchg
push
adc
jnp
add
add
adc
pop
pop
push
or
add
push
pop
pop
(bad)
add
add
or
pop
or
add
add
add
in
(bad)
call
add
(bad)
(bad)
call
add
ds
add
sbb
add
add
(bad)
(bad)
call
add
pop
adc
add
pop
adc
adc
inc
add
add
add
add
and
add
sub
add
add
add
push
popf
or
pop
or
add
(bad)
add
add
sub
add
add
add
pop
popf
or
pop
or
add
(bad)
add
add
adc
xor
add
(bad)
(bad)
call
add
pop
sbb
add
xchg
add
add
add
pop
push
or
add
(bad)
add
add
add
jge
add
add
add
or
adc
add
add
add
and
push
add
sub
add
jae
add
push
jp
xor
add
add
cmp
add
and
add
lea
add
or
add
add
lea
add
or
add
add
lea
add
or
or
pop
pop
add
xchg
sub
sbb
add
add
(bad)
(bad)
call
sub
add
add
xchg
sub
pop
push
bound
or
rcr
inc
add
add
idiv
(bad)
inc
add
adc
pop
push
push
sahf
or
pop
(bad)
sahf
pop
adc
sub
adc
adc
pop
adc
push
sahf
adc
pop
xchg
adc
sub
push
adc
push
adc
pop
arpl
adc
pop
adc
xchg
pop
push
adc
pop
arpl
add
add
idiv
(bad)
inc
adc
adc
sahf
adc
pop
pop
adc
adc
add
stos
pop
inc
add
add
idiv
(bad)
call
add
add
mov
add
sub
stos
add
add
pop
xchg
adc
push
pop
push
adc
pop
pop
adc
adc
push
adc
xchg
adc
or
bound
or
or
add
add
add
idiv
(bad)
call
or
add
adc
pop
pop
xchg
xchg
pop
push
adc
xchg
xchg
das
adc
idiv
(bad)
call
or
pop
adc
pop
adc
pop
push
adc
xchg
xchg
xor
push
adc
push
adc
xchg
sahf
adc
adc
sub
or
push
pop
xchg
adc
add
pop
pop
adc
adc
push
adc
xchg
adc
or
bound
or
or
add
add
add
idiv
(bad)
call
or
add
add
add
idiv
(bad)
inc
push
adc
pop
pop
xchg
xchg
pop
push
adc
xchg
xchg
das
adc
idiv
(bad)
call
or
pop
adc
pop
adc
pop
push
adc
xchg
xchg
xor
push
adc
push
adc
xchg
sahf
adc
adc
sub
or
adc
pop
adc
adc
or
or
push
sahf
adc
sahf
pop
adc
adc
xchg
push
add
(bad)
jmp
pop
adc
(bad)
(bad)
jmp
pop
imul
and
add
add
adc
add
pop
xor
adc
add
pop
sub
pop
adc
xchg
and
add
add
pusha
sahf
or
add
sahf
adc
push
adc
add
or
adc
push
adc
pop
arpl
adc
pop
adc
pop
push
adc
pop
arpl
add
add
idiv
(bad)
inc
adc
adc
adc
(bad)
call
add
add
add
xor
sbb
add
add
(bad)
(bad)
jmp
scas
add
push
push
adc
pop
adc
sub
adc
adc
adc
sub
adc
xchg
adc
adc
pop
pop
adc
or
adc
add
add
idiv
(bad)
inc
adc
pop
pop
adc
rcr
or
add
idiv
(bad)
call
adc
adc
pop
pop
adc
adc
add
mov
inc
add
add
idiv
(bad)
call
cvtps2pi
sub
adc
sub
pop
adc
xchg
push
arpl
adc
adc
sbb
adc
pop
adc
adc
push
bound
adc
adc
add
fst
inc
add
add
idiv
(bad)
(bad)
cmp
adc
add
add
add
add
adc
or
sub
push
or
adc
or
or
sahf
push
pop
pop
or
pop
pop
or
push
add
jmp
pop
pop
pop
or
add
add
xor
add
add
cmp
add
add
xor
sbb
add
(bad)
(bad)
call
sub
add
add
add
or
add
dec
add
add
push
sbb
add
add
(bad)
(bad)
inc
or
or
add
dec
add
add
xor
sbb
add
(bad)
(bad)
inc
dec
add
add
add
add
add
inc
add
add
add
add
jle
add
cmp
add
(bad)
(bad)
(bad)
jg
jl
add
add
add
add
jae
add
or
push
jae
add
or
jae
add
or
sub
add
add
or
pop
add
add
add
add
sub
add
xor
xor
add
add
add
add
add
or
push
pop
sub
sub
add
or
push
xor
sbb
add
add
(bad)
(bad)
call
sub
add
es
push
pop
outs
sub
add
and
sbb
add
pushf
add
add
add
adc
outs
sub
add
and
dec
add
jo
fiadd
add
and
das
or
jb
add
jo
fiadd
add
or
push
das
add
imul
push
pop
outs
fild
add
and
push
push
pop
outs
fild
add
pop
dec
xor
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
pop
adc
add
or
add
add
sub
add
or
loope
add
adc
add
loop
add
adc
add
add
adc
add
add
add
add
sbb
add
and
add
cmp
add
jle
add
add
or
jecxz
add
pop
popa
push
sub
es
pop
pop
sub
add
fadd
sub
add
add
add
or
push
sbb
pop
add
add
sbb
add
sbb
add
cmp
sub
or
or
add
mov
fiadd
push
sub
add
adc
add
add
add
or
or
adc
pop
add
add
add
add
adc
or
pop
or
or
add
and
pop
or
sbb
out
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
or
ror
fild
add
pop
inc
add
add
idiv
(bad)
push
add
or
add
lea
add
adc
push
outs
in
add
and
adc
or
lea
add
adc
add
push
push
push
outs
in
add
and
pop
adc
adc
push
adc
or
or
sbb
push
pop
pop
adc
adc
adc
sbb
add
add
(bad)
(bad)
call
pop
sub
sbb
add
add
(bad)
(bad)
jmp
and
add
sub
adc
adc
push
outs
out
add
jle
add
add
cmp
inc
add
add
idiv
(bad)
(bad)
jle
add
add
(bad)
(bad)
(bad)
jg
adc
add
outs
int
add
and
add
or
movd
add
jl
add
call
jle
add
push
jmp
add
jmp
or
or
add
or
or
add
or
outs
in
add
or
add
adc
adc
outs
jmp
add
lea
add
adc
outs
into
add
or
sub
adc
outs
in
add
adc
adc
adc
adc
push
outs
in
add
or
jle
add
or
adc
outs
out
add
or
or
or
pop
push
outs
int
add
and
inc
add
add
idiv
(bad)
inc
adc
add
add
or
or
in
add
and
adc
add
add
or
pop
imul
adc
jle
add
add
movhps
jle
add
jle
add
add
push
push
push
jmp
jle
add
or
pop
cmp
add
add
inc
sbb
add
add
idiv
(bad)
(bad)
jle
add
add
add
add
add
add
idiv
(bad)
(bad)
jle
add
add
outs
int
add
and
outs
call
movd
add
jge
add
call
jg
add
push
jmp
push
jae
add
or
adc
call
adc
adc
adc
adc
adc
push
adc
outs
in
add
and
adc
xor
jle
add
add
adc
adc
outs
out
add
or
adc
adc
(bad)
sbb
add
add
idiv
(bad)
(bad)
jle
add
add
pop
sub
sbb
add
add
(bad)
(bad)
inc
outs
icebp
add
or
add
add
or
add
or
lea
add
adc
adc
adc
imul
es
add
xor
add
add
add
sub
sub
add
push
sub
add
add
or
or
add
add
add
add
add
add
sub
xor
add
add
add
add
add
pop
jge
add
add
adc
add
add
add
add
adc
jnp
add
add
(bad)
inc
add
add
add
add
adc
add
inc
add
pop
pop
and
inc
add
push
pop
pop
and
inc
add
add
pop
adc
pop
jge
add
add
add
add
or
xor
add
add
add
add
add
add
(bad)
(bad)
call
sub
add
es
add
add
push
add
push
and
add
jp
add
add
add
sub
xor
add
add
inc
add
adc
sub
add
sub
add
and
add
jp
push
das
push
and
add
add
push
and
add
sub
add
and
add
jp
push
das
das
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
add
push
and
add
sub
add
jae
add
or
add
inc
add
add
idiv
(bad)
jmp
mov
add
and
add
sub
add
and
add
jp
add
xor
sbb
add
add
(bad)
(bad)
jmp
rol
add
push
and
add
sub
add
and
add
jp
jnp
add
add
(bad)
inc
add
add
add
add
adc
inc
and
push
add
or
add
add
add
sub
push
add
add
xchg
and
add
add
or
push
pop
or
pop
pop
and
push
and
inc
add
pop
and
inc
add
add
inc
add
add
idiv
(bad)
inc
pop
pop
adc
pusha
jge
add
add
add
or
pop
add
add
add
add
sub
add
xor
add
add
add
add
add
add
add
lea
ror
add
rol
or
sub
add
or
adc
add
add
add
add
add
inc
add
pop
loopne
add
fs
sub
add
add
or
or
add
add
add
add
add
add
sub
xor
add
add
add
add
add
add
test
add
add
add
xor
add
add
add
add
add
push
jge
add
add
adc
add
add
add
add
and
add
popa
jge
add
add
jle
add
add
jnp
add
add
add
and
add
add
aam
add
add
add
fs
jge
add
add
and
add
popa
jge
add
add
add
or
xor
add
add
add
add
add
add
(bad)
(bad)
call
sub
add
es
add
add
push
add
push
jae
add
or
add
add
add
sub
add
xor
add
add
add
add
add
sub
add
add
(bad)
(bad)
call
sub
add
es
add
add
push
add
push
and
add
jp
push
das
push
and
add
add
push
and
add
sub
add
and
add
jp
push
xor
add
pop
add
inc
add
add
idiv
(bad)
jmp
mov
add
jae
add
or
and
add
popa
jge
add
add
sub
add
jnp
add
add
add
pop
pop
dec
add
xchg
popa
and
add
add
xchg
add
add
add
fs
jge
add
add
pop
pop
and
push
das
enter
test
add
add
add
xor
add
add
add
sub
sub
add
push
sub
add
add
or
sbb
add
add
add
and
add
add
and
add
rol
or
sub
add
or
or
add
add
add
add
add
add
or
or
add
add
add
add
add
add
push
add
add
xor
add
add
adc
jnp
add
add
sbb
popa
or
push
das
sbb
inc
add
add
idiv
(bad)
call
sub
add
and
add
add
pop
or
add
add
add
bound
xchg
add
xchg
outs
popa
imul
add
add
xor
add
add
add
add
add
add
add
(bad)
(bad)
call
sub
add
es
add
add
push
add
push
and
add
jp
add
add
add
sub
xor
add
add
adc
sub
add
add
(bad)
(bad)
call
sub
add
es
add
add
push
add
push
and
add
jp
push
das
sbb
add
add
(bad)
(bad)
jmp
mov
add
and
pop
add
sub
add
and
add
jp
push
das
push
and
add
add
push
and
add
sub
add
and
add
jp
add
xor
inc
add
add
idiv
(bad)
jmp
rol
add
push
and
add
jp
or
adc
add
add
xchg
sub
add
push
push
pop
pop
or
add
add
add
or
adc
add
add
pop
jge
add
add
sub
add
or
add
add
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
and
add
add
add
add
jge
add
add
sub
add
or
add
add
add
add
mov
add
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
adc
add
sub
add
inc
add
adc
jnp
add
add
push
or
add
add
or
push
add
add
add
add
add
add
pop
and
add
inc
pop
or
sub
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
aad
add
add
sub
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
repz
or
add
add
add
add
nop
add
add
pop
jge
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
adc
add
add
add
add
and
add
add
push
jge
add
add
add
xor
add
add
add
add
add
sub
add
add
push
jge
add
add
add
push
add
push
jge
add
add
add
xor
add
add
add
add
add
sub
add
add
add
add
add
or
adc
add
add
sub
add
add
add
add
cwde
add
add
add
add
xor
add
add
inc
add
adc
jnp
add
add
push
adc
add
inc
or
sub
sbb
add
(bad)
(bad)
call
sub
add
add
loop
add
or
add
outs
clc
add
push
add
outs
in
add
jge
add
add
sub
adc
pop
add
add
inc
add
adc
jnp
add
add
push
adc
add
inc
or
sub
sbb
add
add
(bad)
(bad)
call
sub
add
add
loop
add
or
jnp
add
add
or
add
push
add
outs
in
add
jge
add
add
sub
xor
add
add
add
adc
jnp
add
add
push
sub
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
push
or
add
outs
in
add
push
add
outs
xlat
add
push
jge
add
add
add
add
xor
add
add
add
add
add
add
add
push
sub
pop
inc
add
add
idiv
(bad)
call
sub
add
add
add
push
or
add
outs
hlt
add
push
add
outs
xlat
add
push
and
add
add
xor
add
add
add
add
add
add
add
push
sub
add
loopne
add
or
add
outs
call
pop
outs
xlat
add
push
and
add
add
add
xor
add
add
add
add
add
pop
jge
add
add
add
or
add
sub
xor
cdq
add
add
add
add
hlt
add
or
push
or
aaa
add
add
add
or
outs
or
add
sub
add
add
(bad)
(bad)
call
sub
add
es
or
sbb
add
sub
pop
or
pop
pop
or
push
mov
ret
sbb
add
add
(bad)
(bad)
inc
add
sub
add
push
add
add
add
js
add
pop
cmp
add
sbb
add
add
(bad)
(bad)
inc
or
push
or
add
sbb
add
adc
sbb
add
add
(bad)
(bad)
inc
adc
push
add
add
add
or
inc
add
add
idiv
(bad)
(bad)
fisubr
add
add
add
push
and
sbb
add
add
pop
adc
add
mov
test
add
idiv
(bad)
(bad)
ficom
adc
add
adc
sub
add
push
and
sbb
add
jnp
add
add
xchg
add
add
xchg
add
add
sub
add
or
or
or
adc
sub
or
or
adc
add
add
add
sbb
inc
add
add
idiv
(bad)
inc
jnp
add
add
or
add
push
sub
add
or
sub
add
push
add
add
add
and
inc
add
add
idiv
(bad)
call
or
pop
adc
adc
adc
mov
stos
sbb
add
(bad)
(bad)
(bad)
ficomp
adc
add
add
and
inc
add
add
idiv
(bad)
(bad)
(bad)
sbb
add
add
add
sub
add
add
adc
add
add
add
add
jecxz
adc
add
add
add
add
sbb
add
or
sub
add
add
add
add
and
add
add
add
jae
add
or
add
add
jae
add
or
add
add
sub
add
sbb
add
adc
add
or
add
pop
or
pop
adc
add
or
fiadd
add
sub
adc
add
add
add
or
add
sbb
or
add
add
add
add
add
(bad)
(bad)
call
sub
add
and
pop
add
sub
add
and
add
jp
or
sub
add
push
and
cmp
add
add
or
cmp
inc
add
add
idiv
(bad)
inc
or
outs
mov
add
push
ds
add
add
add
(bad)
(bad)
inc
or
push
outs
fild
add
and
sub
inc
add
add
idiv
(bad)
inc
or
pop
pop
or
outs
mov
add
and
sub
add
and
pop
or
push
outs
fild
add
and
sub
inc
add
add
idiv
(bad)
inc
or
pop
pop
or
outs
mov
add
pop
pop
outs
sub
add
or
mov
or
test
pop
pop
or
pop
mov
ss
(bad)
(bad)
fiadd
add
sub
add
add
add
add
sub
fadd
add
adc
pop
add
add
dec
add
adc
pop
or
lea
add
add
pop
push
pop
cmp
add
or
add
add
add
or
add
add
add
(bad)
(bad)
call
sub
add
es
add
or
add
add
add
pop
adc
add
outs
mov
add
xor
sbb
add
add
(bad)
(bad)
dec
adc
or
add
or
add
add
adc
fild
add
and
sbb
add
add
(bad)
(bad)
call
add
pop
adc
add
outs
mov
add
and
inc
pop
add
sub
add
and
add
sub
add
jae
add
or
add
add
fild
add
sub
add
sub
sbb
add
add
(bad)
(bad)
call
add
add
adc
fild
add
and
add
sub
add
add
fild
add
and
add
and
sbb
add
add
idiv
(bad)
dec
adc
or
add
or
push
outs
std
add
or
adc
add
fild
add
and
add
and
add
add
or
clc
(bad)
(bad)
call
inc
add
add
idiv
(bad)
dec
rcr
add
add
inc
add
or
add
and
add
sub
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
adc
or
jnp
add
add
inc
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
or
pop
add
add
add
add
add
and
pop
outs
test
add
and
add
or
add
add
or
or
adc
outs
pop
add
or
add
add
(bad)
(bad)
(bad)
ficomp
pop
jne
add
add
inc
add
add
idiv
(bad)
dec
outs
pop
add
or
push
sub
add
adc
add
add
add
imul
add
xor
add
add
dec
add
adc
or
jnp
add
add
add
add
and
pop
outs
test
add
and
add
or
add
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
or
adc
outs
pop
add
or
inc
add
add
idiv
(bad)
(bad)
ficomp
pop
jne
add
add
inc
add
add
idiv
(bad)
dec
outs
pop
add
or
push
sub
add
add
add
add
adc
dec
pop
add
add
add
add
or
sbb
add
add
add
add
sub
add
push
sub
add
sub
add
push
and
sub
sub
xor
add
add
add
add
add
add
add
add
add
add
add
adc
add
or
or
or
add
push
pop
mov
cmp
add
add
pop
mov
outs
mov
add
push
ds
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
pop
mov
push
outs
fild
add
and
add
inc
or
pop
mov
push
outs
fild
add
and
sub
inc
add
add
idiv
(bad)
inc
pop
mov
pop
push
pop
mov
outs
mov
add
and
sub
add
or
mov
push
outs
fild
add
and
sub
add
(bad)
(bad)
inc
pop
mov
pop
push
pop
mov
outs
mov
add
and
sub
add
or
mov
or
inc
add
add
idiv
(bad)
inc
jnp
add
add
pop
sbb
add
or
add
or
add
add
add
pop
sbb
add
or
add
or
pop
or
push
mov
out
(bad)
(bad)
call
idiv
(bad)
jmp
add
add
xor
add
add
add
add
add
sub
add
add
push
jge
add
add
add
xor
add
add
adc
or
sub
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
or
sbb
add
add
(bad)
(bad)
push
add
jo
push
add
add
add
or
jnp
add
add
outs
adc
add
and
add
or
cmp
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
lahf
add
add
jle
add
or
add
add
jle
add
or
add
add
add
push
add
push
add
sbb
add
push
sub
add
or
cmp
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
lahf
add
add
jle
add
or
add
add
jle
add
or
add
add
add
push
add
push
add
and
add
add
push
sub
adc
or
dec
add
add
add
add
and
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
lahf
add
add
jle
add
or
add
add
jle
add
or
add
add
add
push
add
push
add
sbb
add
push
add
add
and
add
add
add
push
sub
adc
adc
xchg
add
add
add
add
sub
add
push
and
add
add
jae
add
or
add
sbb
add
and
add
or
imul
add
(bad)
(bad)
call
sub
add
add
push
add
push
and
add
or
inc
add
add
idiv
(bad)
inc
sub
add
push
and
add
or
add
and
inc
add
add
idiv
(bad)
inc
sub
add
push
and
add
or
or
add
and
or
sub
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
push
es
add
(bad)
(bad)
call
sub
add
add
add
add
das
sbb
inc
add
add
idiv
(bad)
jmp
mov
push
add
push
and
add
jp
add
add
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
push
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
add
xor
inc
add
add
idiv
(bad)
jmp
mov
push
add
push
and
add
jp
add
add
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
or
add
and
inc
add
add
idiv
(bad)
call
sub
add
and
push
add
push
and
add
sub
add
and
add
jp
add
add
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
sub
add
or
and
push
add
push
and
add
sub
add
jae
add
or
add
add
add
add
add
or
and
add
add
and
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
mov
add
push
add
push
add
daa
add
push
add
push
sub
add
adc
or
dec
add
add
add
add
sub
add
push
or
sub
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
or
pop
outs
push
add
or
add
push
and
add
sub
add
and
push
inc
sub
push
or
sub
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
push
push
sbb
jnp
add
add
das
and
add
idiv
(bad)
call
sub
add
and
push
add
push
and
add
jp
add
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
push
push
sbb
jnp
add
add
xor
sbb
add
add
(bad)
(bad)
call
sub
add
and
push
add
push
jae
add
or
add
add
add
add
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
push
add
add
sub
xor
add
add
add
add
adc
sub
add
add
(bad)
(bad)
call
sub
add
es
pop
add
sub
add
jae
add
or
sub
add
add
(bad)
(bad)
jmp
(bad)
add
add
push
add
push
and
add
jp
push
xor
sbb
add
(bad)
(bad)
inc
mov
sbb
inc
add
add
idiv
(bad)
jmp
mov
add
and
add
jp
push
xor
add
(bad)
(bad)
inc
xor
sbb
add
add
(bad)
(bad)
jmp
rol
add
push
jae
add
or
add
or
xor
jae
add
or
push
pop
dec
add
add
add
add
inc
add
add
idiv
(bad)
jmp
adc
or
rol
add
add
add
add
sub
add
and
add
jp
sub
add
add
(bad)
(bad)
call
sub
add
and
or
add
push
add
push
jae
add
or
sub
add
add
(bad)
(bad)
jmp
(bad)
add
add
push
add
push
jae
add
or
mov
add
add
sub
inc
add
add
idiv
(bad)
jmp
sbb
add
sub
add
and
add
sub
add
and
add
jp
or
and
mov
in
add
and
xor
add
pop
outs
out
add
or
or
outs
rol
add
push
or
sub
add
add
(bad)
(bad)
jmp
add
add
xor
add
add
add
add
add
add
push
push
adc
add
sub
add
xor
add
add
add
add
add
add
add
(bad)
(bad)
call
sub
add
es
pop
add
sub
add
and
add
jp
sub
add
add
(bad)
(bad)
jmp
add
add
sub
add
and
add
jp
sub
add
add
(bad)
(bad)
jmp
(bad)
add
add
push
add
push
and
add
jp
mov
add
add
sub
inc
add
add
idiv
(bad)
jmp
sbb
add
sub
add
and
add
sub
add
and
add
jp
sub
add
add
(bad)
(bad)
jmp
inc
or
add
push
add
push
and
add
jp
or
or
or
push
push
push
push
pop
push
push
prefetchnta
add
add
(bad)
(bad)
dec
pop
or
int3
add
or
inc
add
add
idiv
(bad)
inc
outs
int
add
and
add
or
push
or
jae
add
push
adc
outs
lock
push
pop
adc
add
add
add
imul
adc
adc
push
xor
sbb
add
add
(bad)
(bad)
dec
adc
push
or
adc
push
outs
out
add
or
or
outs
rol
add
push
or
or
sub
add
or
sgdtd
or
inc
add
add
idiv
(bad)
call
adc
or
or
jae
add
push
adc
outs
lock
push
adc
fild
add
or
cmp
(bad)
call
add
add
add
idiv
(bad)
dec
push
or
jae
add
push
adc
outs
lock
push
sub
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
xchg
add
add
outs
mov
add
and
add
add
inc
add
add
idiv
(bad)
call
sub
add
add
outs
fild
add
pop
pop
sbb
inc
add
add
idiv
(bad)
inc
push
outs
fild
add
and
rol
add
add
add
or
add
add
inc
add
add
idiv
(bad)
inc
pop
outs
fild
add
and
and
inc
add
add
idiv
(bad)
inc
pop
outs
fild
add
pop
das
inc
adc
add
sbb
add
(bad)
(bad)
call
or
or
add
pop
pop
or
add
add
or
inc
sbb
add
add
(bad)
(bad)
inc
pop
outs
fild
add
pop
pop
cs
sbb
add
add
(bad)
(bad)
inc
pop
outs
fild
add
pop
das
xor
sbb
add
add
idiv
(bad)
dec
pop
pop
and
sbb
add
add
(bad)
(bad)
inc
pop
pop
or
add
add
or
inc
add
add
idiv
(bad)
inc
pop
outs
adc
add
and
add
add
add
jo
cmp
add
outs
mov
add
and
sbb
add
add
(bad)
(bad)
inc
pop
outs
fild
add
pop
cmp
pop
sbb
add
add
(bad)
(bad)
call
or
add
and
pop
inc
add
add
idiv
(bad)
inc
sbb
add
or
and
inc
add
add
idiv
(bad)
inc
sbb
add
or
or
inc
add
add
idiv
(bad)
call
or
adc
add
and
add
xor
add
add
add
add
add
sub
add
or
add
xor
add
add
push
add
adc
sub
add
add
(bad)
(bad)
call
sub
add
and
add
sub
add
and
add
jp
mov
sub
inc
add
add
idiv
(bad)
jmp
imul
add
push
and
add
sub
add
and
add
jp
lea
ror
add
rol
or
push
or
inc
push
push
push
push
xchg
add
xchg
sub
add
push
and
push
pop
xchg
push
push
xchg
rcr
push
pop
push
pop
xchg
and
pop
pop
sahf
push
sbb
sbb
sbb
mov
sahf
pop
pop
pop
or
add
inc
add
add
idiv
(bad)
call
or
inc
add
add
push
push
push
xchg
and
add
add
pushf
or
push
push
xchg
push
fs
add
add
pushf
or
push
push
xchg
pop
adc
add
add
pushf
or
push
push
xchg
pop
sbb
add
add
pushf
or
push
pop
xchg
and
add
add
pushf
or
push
pop
xchg
push
fs
add
add
pushf
or
pop
xchg
pop
adc
add
add
pushf
or
sbb
add
add
pushf
or
push
sbb
add
pushf
or
or
sbb
add
add
pushf
or
or
sbb
inc
add
pop
rcr
xchg
pop
sbb
add
add
pushf
or
add
add
xor
add
add
add
add
add
sub
add
xor
sbb
add
push
add
adc
jnp
add
add
xchg
and
inc
add
pusha
or
push
pop
popa
pop
push
shr
add
adc
push
add
add
add
sub
add
add
(bad)
(bad)
call
sub
add
and
push
add
push
jae
add
or
mov
or
sbb
inc
add
add
idiv
(bad)
jmp
xchg
or
add
push
add
push
and
add
jp
sbb
jge
add
add
jnp
add
add
add
xchg
pop
sbb
sbb
add
xchg
push
bound
push
xchg
pusha
sahf
add
add
add
add
add
pop
adc
add
xchg
push
bound
sbb
movs
add
add
add
or
pop
or
add
or
push
xchg
pusha
sahf
sub
add
xor
add
add
add
add
add
add
add
add
add
add
xchg
add
mov
sahf
add
add
add
add
add
add
xchg
add
add
add
xchg
rcr
add
add
add
add
add
add
xchg
and
pop
pop
sahf
add
add
add
add
add
add
xchg
add
add
add
xchg
pop
sbb
mov
sahf
sub
add
xor
add
add
add
add
add
add
add
push
sahf
add
add
add
push
sahf
add
add
add
push
sahf
sub
xor
add
add
add
add
add
sub
add
add
sub
add
push
sub
add
xor
add
add
add
lea
add
or
add
add
push
and
add
xor
add
add
push
add
adc
sub
add
xchg
or
add
add
or
add
xor
es
rcr
add
push
pop
pop
or
add
pop
xor
pop
inc
add
add
idiv
(bad)
call
sub
add
es
or
add
add
add
add
pop
sub
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
sub
add
push
sub
add
or
push
add
add
add
add
sub
add
add
sub
add
push
sub
add
xor
add
add
add
lea
add
or
add
add
push
and
add
xor
add
add
add
adc
sub
push
xchg
add
xor
ror
push
add
add
or
pop
sub
add
push
push
pop
pop
or
add
pop
xor
add
add
add
add
add
add
sub
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
sub
add
push
sub
add
or
pop
add
add
add
add
sub
add
push
sub
add
or
add
add
add
add
push
sub
add
xor
add
add
add
add
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
es
or
add
push
add
push
jae
add
or
adc
push
add
add
add
add
pop
lea
push
push
pop
pusha
pop
pusha
push
jae
add
or
sub
add
xor
add
add
add
add
add
add
add
xor
add
add
add
add
pop
lea
push
push
push
push
push
jae
add
or
sub
xor
add
add
add
add
add
jnp
add
add
push
add
add
or
jnp
add
add
push
add
or
add
sub
add
or
pop
add
add
add
add
sub
add
add
(bad)
(bad)
call
sub
add
and
push
add
push
and
add
jp
mov
or
sbb
inc
add
add
idiv
(bad)
jmp
out
or
add
push
add
push
jae
add
or
add
add
or
add
jge
add
add
add
xor
and
add
push
add
adc
pop
or
inc
add
add
add
add
pop
add
or
push
add
add
add
sbb
add
sub
xor
add
add
add
add
add
add
outs
sbb
add
and
add
sub
add
add
or
adc
add
add
add
add
jge
add
add
outs
sbb
add
jae
add
push
sub
adc
push
add
add
add
add
add
add
sub
add
or
add
add
add
add
test
and
add
add
jge
add
add
pop
sbb
add
add
sub
sbb
add
add
(bad)
(bad)
call
sub
add
and
push
add
push
and
add
jp
adc
or
out
add
push
add
adc
or
int
add
add
add
add
jnp
add
add
or
jnp
add
add
pop
or
jnp
add
add
imul
add
or
push
add
idiv
(bad)
call
sub
add
es
or
add
add
sbb
jnp
add
add
add
add
add
add
pushf
adc
pop
adc
pop
pop
or
lods
add
add
fistp
inc
add
add
idiv
(bad)
inc
and
add
jnp
add
add
jge
add
add
push
jge
add
add
jnp
add
add
jnp
add
add
jnp
add
add
outs
in
add
adc
add
add
add
add
jnp
add
add
jnp
add
add
or
add
add
add
dec
sbb
add
add
(bad)
(bad)
inc
jnp
add
add
jnp
add
add
jnp
add
add
adc
add
pop
add
push
and
adc
add
adc
or
add
and
add
adc
stos
add
add
mov
add
pop
pop
or
inc
sbb
add
add
(bad)
(bad)
inc
pop
or
push
add
add
add
jnp
add
add
jnp
add
add
push
add
pop
add
push
es
adc
pop
or
and
add
push
pop
jge
add
add
and
pop
or
sbb
inc
add
add
idiv
(bad)
jmp
push
or
add
push
add
push
and
add
jp
jnp
add
add
pop
add
push
and
adc
sub
adc
adc
xchg
add
add
add
jnp
add
add
or
adc
push
or
add
push
add
push
and
add
jp
or
pop
adc
adc
pop
or
retf
sub
push
add
call
inc
add
add
idiv
(bad)
inc
sub
add
or
push
add
add
add
add
add
or
add
xor
add
add
pop
add
adc
sub
pop
adc
dec
sbb
add
add
(bad)
(bad)
call
sub
add
es
sbb
add
add
(bad)
(bad)
jmp
dec
add
sub
add
and
add
add
and
add
sub
add
and
add
and
add
jp
mov
sbb
push
sbb
add
add
(bad)
(bad)
call
lea
add
add
push
push
and
add
sub
add
and
add
add
add
or
add
push
add
push
and
add
add
add
and
add
jp
add
add
add
add
add
inc
add
add
add
add
pop
adc
add
add
add
call
push
add
or
jae
add
or
sbb
add
or
add
add
add
inc
add
add
add
add
add
add
add
and
add
and
jnp
add
add
and
add
and
or
adc
and
add
and
add
pop
sbb
add
or
add
adc
and
add
jge
add
add
push
add
mov
add
add
xor
add
add
add
add
add
add
add
es
add
(bad)
(bad)
call
sub
add
add
add
add
add
add
and
add
and
cmp
jnp
add
add
adc
push
push
or
add
pop
pop
or
jnp
add
add
pop
add
and
and
in
inc
add
add
idiv
(bad)
inc
jnp
add
add
jnp
add
add
add
add
add
jnp
add
add
outs
in
add
or
jge
add
add
add
push
add
pop
xchg
add
add
add
and
add
or
add
add
xchg
popa
rcr
add
call
inc
add
add
idiv
(bad)
inc
jnp
add
add
pop
sbb
add
add
(bad)
(bad)
inc
jnp
add
add
add
add
add
or
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
cmp
jnp
add
add
xor
inc
add
add
idiv
(bad)
call
sub
add
es
lea
add
or
jnp
add
add
push
push
outs
and
es
jge
add
add
jnp
add
add
add
or
or
adc
add
add
add
and
push
add
push
and
add
jp
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
add
add
pop
add
or
add
or
pop
add
add
add
add
sub
add
xor
add
add
add
add
add
add
dec
add
push
sub
add
add
or
pop
add
add
add
add
sub
add
sub
add
or
or
add
add
add
add
sub
add
sub
xor
add
add
add
add
add
add
push
add
push
sub
add
add
or
adc
add
add
add
add
jae
add
push
and
adc
add
push
add
add
or
push
add
add
add
add
add
add
add
sub
add
sub
add
xor
add
add
add
pop
jge
add
add
sub
add
or
sub
add
add
(bad)
(bad)
call
sub
add
es
or
add
push
jae
add
or
sub
add
add
(bad)
(bad)
jmp
test
es
add
or
push
xor
and
push
add
sub
add
and
add
jp
add
add
add
add
rol
add
add
push
jge
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
adc
or
stos
add
add
add
add
push
and
add
idiv
(bad)
call
sub
add
es
add
add
push
and
add
jp
jnp
add
add
int3
add
or
sbb
add
add
idiv
(bad)
inc
jnp
add
add
pop
outs
sub
add
add
and
or
add
add
push
or
add
idiv
(bad)
inc
imul
add
or
or
or
push
add
imul
add
push
push
outs
in
add
and
push
or
push
or
xor
sbb
add
add
idiv
(bad)
inc
or
add
xor
add
add
add
jnp
add
add
outs
mov
add
sub
add
add
or
adc
add
add
add
add
add
add
sub
add
and
sub
sub
adc
or
ins
add
add
add
add
jnp
add
add
test
es
xor
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
lods
add
push
add
add
add
test
es
xor
inc
add
add
idiv
(bad)
jmp
lahf
or
add
push
add
push
and
add
jp
jnp
add
add
jnp
add
add
stos
add
push
sub
xor
add
add
add
add
add
jnp
add
add
retf
add
or
add
or
add
add
add
add
push
sub
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
jnp
add
add
movs
add
push
push
add
add
xor
add
add
add
add
add
jnp
add
add
into
add
or
add
or
adc
add
add
add
and
add
push
and
add
jp
add
xor
add
add
add
add
add
add
add
rol
add
sub
xor
add
add
add
add
add
adc
add
push
add
push
jae
add
or
xor
add
add
add
add
add
ss
add
push
add
push
jae
add
or
xor
add
add
add
add
add
lea
add
push
add
push
and
add
jp
add
xor
add
add
add
add
add
fmul
add
push
add
push
jae
add
or
xor
add
add
add
add
add
xor
add
push
and
add
jp
add
xor
add
add
add
add
add
jnp
add
add
sub
add
add
jnp
add
add
push
sbb
add
add
idiv
(bad)
call
sub
add
add
add
add
rol
or
add
adc
or
movs
add
add
add
adc
jnp
add
add
sub
add
sub
and
add
push
and
add
jp
or
jnp
add
add
add
outs
sub
add
and
pop
dec
add
push
pop
pop
or
sub
sbb
add
add
idiv
(bad)
call
sub
add
add
add
add
sub
add
and
inc
add
add
idiv
(bad)
inc
jnp
add
add
sub
add
sub
add
outs
add
push
sub
inc
add
add
idiv
(bad)
jmp
scas
or
add
push
and
add
jp
push
pop
sub
xor
add
add
add
add
add
add
sub
add
sub
add
add
or
sldt
add
add
add
add
jae
add
push
add
push
add
xor
add
add
sldt
adc
jnp
add
add
daa
sbb
add
(bad)
(bad)
call
sub
add
add
add
push
sub
add
add
(bad)
(bad)
call
sub
add
push
or
push
xor
sbb
add
add
(bad)
(bad)
inc
jnp
add
add
add
outs
int
add
add
add
add
sub
add
and
inc
add
add
idiv
(bad)
inc
sub
push
xor
adc
and
add
add
add
add
push
jge
add
add
jnp
add
add
test
es
xor
sbb
add
(bad)
(bad)
call
sub
add
add
add
add
lods
add
push
add
add
add
test
es
xor
inc
add
add
idiv
(bad)
call
sub
add
push
or
jnp
add
add
mov
add
and
das
adc
sbb
push
add
push
and
add
jp
pop
outs
retf
add
push
pop
pop
pop
sbb
idiv
(bad)
jmp
dec
push
add
sub
add
jae
add
push
jp
jnp
add
add
mov
add
and
das
sbb
inc
add
add
idiv
(bad)
jmp
sbb
push
add
push
jae
add
or
and
sbb
inc
add
add
idiv
(bad)
jmp
scas
push
add
sub
add
and
add
jp
pop
outs
retf
add
push
add
add
add
mov
add
and
das
sbb
inc
add
add
idiv
(bad)
jmp
sbb
push
add
push
and
add
jp
push
adc
push
sldt
sub
add
and
add
jp
or
add
push
add
add
add
mov
add
and
das
sbb
inc
add
add
idiv
(bad)
jmp
sbb
push
add
push
jae
add
or
or
add
push
or
loopne
add
pop
sub
and
add
sub
add
and
add
jp
adc
cmp
jnp
add
add
mov
add
adc
sbb
inc
add
add
idiv
(bad)
jmp
sbb
push
add
push
jae
add
or
adc
push
adc
pop
adc
add
xor
sbb
add
add
(bad)
(bad)
dec
sbb
xor
add
push
adc
sub
jnp
add
add
mov
add
and
pop
push
das
adc
sbb
push
add
push
and
add
jp
adc
outs
retf
add
push
adc
pop
pop
adc
adc
sbb
(bad)
sbb
add
add
(bad)
(bad)
inc
jnp
add
add
mov
add
and
sbb
add
add
(bad)
(bad)
inc
jnp
add
add
mov
add
and
sbb
add
add
(bad)
(bad)
jmp
sbb
push
add
push
and
add
jp
jnp
add
add
mov
add
and
jnp
add
add
mov
add
and
or
xor
adc
push
das
sbb
inc
add
add
idiv
(bad)
jmp
sbb
push
add
push
and
add
jp
adc
outs
retf
add
push
push
adc
outs
retf
add
push
adc
push
bound
or
or
adc
sub
add
add
add
mov
add
adc
or
das
adc
sbb
push
add
push
and
add
jp
adc
retf
add
push
adc
pop
pop
adc
adc
adc
xor
sbb
add
add
idiv
(bad)
dec
push
pop
sub
sub
push
adc
push
add
add
add
mov
add
and
push
xor
sbb
add
add
(bad)
(bad)
call
or
inc
add
add
idiv
(bad)
jmp
sbb
push
add
push
and
add
jp
adc
push
or
adc
push
sub
push
adc
outs
retf
add
push
add
add
add
mov
add
and
push
xor
sbb
add
(bad)
(bad)
call
push
push
das
sbb
inc
add
add
idiv
(bad)
jmp
sbb
push
add
push
and
add
jp
adc
outs
retf
add
push
or
pop
cmp
inc
add
add
idiv
(bad)
inc
jnp
add
add
mov
add
and
movhps
adc
sbb
push
add
push
and
add
jp
jnp
add
add
mov
add
and
adc
das
sbb
inc
add
add
idiv
(bad)
jmp
sbb
push
add
push
jae
add
or
nop
adc
movups
push
outs
enter
and
inc
add
sbb
inc
add
add
idiv
(bad)
jmp
mov
push
add
push
and
add
jp
pop
jge
add
add
sub
adc
sldt
add
adc
lea
add
or
jnp
add
add
add
push
adc
jnp
add
add
outs
test
add
add
add
xor
add
and
add
push
add
add
add
push
add
push
push
or
inc
add
add
add
push
or
outs
scas
add
push
and
xor
add
idiv
(bad)
call
sub
add
es
sldt
sub
add
and
add
jp
or
or
xor
add
(bad)
(bad)
inc
push
xchg
and
add
add
pop
xchg
and
add
add
bound
sbb
add
adc
push
sbb
adc
add
jnp
add
add
enter
and
pop
inc
add
add
idiv
(bad)
call
lea
add
add
add
and
add
sub
add
and
pop
adc
add
add
pop
adc
add
push
add
push
and
sbb
jnp
add
add
enter
imul
add
or
add
jp
sbb
add
sbb
add
bound
sbb
and
add
add
adc
push
sbb
pusha
adc
pop
adc
outs
cs
inc
add
add
idiv
(bad)
jmp
js
add
sub
add
and
add
jp
push
jge
add
add
add
xor
add
add
add
add
add
add
add
push
and
add
add
test
add
sub
add
xor
add
add
add
add
add
add
add
add
sub
add
xor
add
add
add
pop
jge
add
add
sub
add
or
sub
add
add
(bad)
(bad)
call
sub
add
and
add
sub
add
jae
add
or
outs
fld
add
and
fwait
adc
add
push
add
push
and
add
sub
add
and
add
jp
sub
add
add
(bad)
(bad)
jmp
les
add
sub
add
and
add
jp
and
add
add
sbb
inc
add
add
idiv
(bad)
jmp
or
add
sub
add
and
add
jp
add
add
add
add
add
add
add
add
int3
add
add
add
add
xor
add
add
add
add
adc
jnp
add
add
rol
add
sub
jnp
add
add
jnp
add
add
add
add
add
imul
or
push
xor
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
sbb
add
(bad)
(bad)
inc
add
add
add
push
sub
jnp
add
add
jnp
add
add
push
outs
out
add
or
jnp
add
add
rol
add
and
inc
add
add
idiv
(bad)
inc
jnp
add
add
rol
add
and
inc
add
add
idiv
(bad)
jmp
mov
push
add
push
and
add
jp
jnp
add
add
rol
add
add
add
add
dec
sbb
add
add
idiv
(bad)
inc
jnp
add
add
add
add
sbb
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
push
and
add
jnp
add
add
pop
add
or
adc
leave
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
push
add
add
add
add
jnp
add
add
int3
add
or
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
sub
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
or
add
add
(bad)
(bad)
inc
adc
enter
sub
add
add
add
add
or
adc
add
add
add
add
add
add
push
add
add
or
xor
add
add
adc
add
push
or
sub
add
sub
add
push
and
pop
adc
and
add
and
add
add
add
xor
jo
add
sldt
adc
add
and
add
push
jle
add
add
sbb
add
idiv
(bad)
call
sub
add
es
add
or
jle
add
add
push
outs
sub
add
add
add
push
and
add
push
add
push
jge
add
add
add
jnp
add
add
add
add
add
push
and
xor
add
add
adc
pop
add
add
add
jnp
add
add
add
add
add
imul
or
push
xor
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
push
add
jnp
add
add
push
sub
jnp
add
add
jnp
add
add
push
outs
out
add
or
jnp
add
add
aam
add
and
jnp
add
add
aam
add
sub
add
sub
add
and
add
jp
add
add
or
add
add
add
add
push
sub
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
add
add
fld
add
sub
xor
add
add
add
add
add
jnp
add
add
int
add
and
add
or
push
add
add
add
add
jnp
add
add
into
add
or
add
or
adc
add
add
add
and
add
sub
add
jae
add
or
xor
add
add
add
add
add
mov
add
sub
add
and
add
jp
add
xor
add
add
add
add
add
xlat
adc
add
push
add
push
and
add
jp
add
xor
add
add
add
add
add
xor
add
sub
add
jae
add
or
xor
add
add
add
add
add
xchg
add
sub
add
and
add
jp
add
xor
add
add
add
add
add
(bad)
adc
add
push
add
push
and
add
jp
add
xor
add
add
add
add
add
inc
adc
add
push
add
push
and
add
jp
add
xor
add
add
add
jnp
add
add
rol
add
add
mov
add
add
add
add
rol
add
sub
add
sbb
or
jae
add
add
add
add
add
add
push
inc
add
add
idiv
(bad)
call
sub
add
add
jge
add
add
outs
test
add
add
add
add
and
inc
add
add
idiv
(bad)
inc
sub
jnp
add
add
pop
add
or
adc
leave
add
add
push
add
add
add
adc
add
idiv
(bad)
inc
jnp
add
add
rol
or
sub
add
add
add
and
xor
add
add
add
or
cmp
add
add
add
add
add
add
add
add
sbb
add
add
(bad)
(bad)
call
sub
add
add
jnp
add
add
add
add
add
push
and
add
add
add
xor
add
add
adc
lea
add
or
push
add
out
add
or
add
add
xor
add
add
add
jnp
add
add
add
outs
(bad)
add
push
add
mov
add
sub
add
add
or
or
add
add
add
add
add
sub
add
add
xor
add
add
add
add
add
jae
add
push
jge
add
add
add
add
add
test
add
sub
add
or
and
add
add
add
add
das
adc
aad
add
sub
add
jae
add
or
jnp
add
add
outs
xlat
add
push
sub
add
add
or
push
add
add
add
add
jnp
add
add
fadd
add
and
adc
or
push
add
add
add
add
jnp
add
add
sbb
add
(bad)
(bad)
call
sub
add
add
cmps
add
push
add
add
add
adc
loopne
add
sub
add
and
add
jp
jnp
add
add
add
outs
int
add
add
add
sub
sbb
push
add
add
add
add
outs
test
add
fiadd
jnp
add
add
cmp
inc
add
add
idiv
(bad)
call
sub
add
add
jge
add
add
sub
es
pop
inc
add
add
idiv
(bad)
inc
jnp
add
add
rol
or
sub
adc
add
add
add
or
inc
add
add
adc
or
add
add
add
add
add
sbb
inc
add
add
idiv
(bad)
call
sub
add
add
cmps
add
push
add
add
add
inc
add
add
sbb
add
add
sub
jnp
add
add
iret
add
push
and
ins
or
jnp
add
add
enter
and
ins
or
lea
add
or
push
pop
rcr
rcr
rcr
rcr
or
push
push
rcr
rcr
rcr
add
add
push
or
add
sub
xor
add
add
adc
jnp
add
add
jl
pop
jge
add
add
or
or
add
sub
add
and
add
pop
pop
jae
add
or
adc
sub
add
or
xchg
cwde
add
imul
add
and
add
rol
or
pushf
or
or
arpl
pushf
or
pop
adc
pushf
or
rcr
int
add
add
adc
imul
add
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
add
dec
add
push
sub
add
add
or
pop
add
add
add
add
sub
add
sub
add
or
or
add
add
add
add
sub
add
sub
xor
add
add
add
add
add
add
push
add
push
sub
add
adc
add
add
add
add
pop
jge
add
add
pop
lea
add
jge
add
add
and
add
add
jge
add
add
and
and
add
jge
add
add
sub
add
or
add
add
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
adc
push
add
add
add
add
adc
add
add
add
pop
outs
in
add
and
xor
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
add
xchg
and
add
add
adc
adc
adc
xor
add
add
add
add
sbb
idiv
(bad)
call
sub
add
add
mov
add
add
add
add
or
inc
add
add
idiv
(bad)
call
jnp
add
add
add
add
add
add
add
add
add
add
add
add
jnp
add
add
add
add
push
add
add
add
pop
add
add
add
or
jnp
add
add
or
jnp
add
add
or
jnp
add
add
or
jnp
add
add
or
jnp
add
add
or
or
push
adc
push
xor
adc
add
add
add
idiv
(bad)
call
push
sub
add
or
add
movaps
add
or
addps
or
add
or
add
or
addps
or
add
add
idiv
(bad)
inc
adc
jge
add
add
push
pop
sub
jnp
add
add
inc
das
adc
inc
add
add
idiv
(bad)
inc
sub
jnp
add
add
xor
sbb
add
add
(bad)
(bad)
inc
jnp
add
add
bound
add
pop
pop
sub
add
add
add
jnp
add
add
add
pop
sbb
adc
add
add
add
add
idiv
(bad)
inc
adc
add
add
add
adc
jge
add
add
adc
jge
add
add
adc
jge
add
add
adc
jge
add
add
adc
jge
add
add
adc
jge
add
add
adc
add
push
pop
sub
or
add
sbb
adc
or
pop
adc
pop
adc
pop
pop
adc
adc
add
jnp
add
add
adc
add
idiv
(bad)
call
adc
pop
pop
bound
pop
sub
adc
adc
pop
pop
bound
pop
adc
add
or
push
and
in
(bad)
(bad)
call
or
adc
adc
add
or
adc
pop
xchg
and
add
add
bound
or
adc
pop
xchg
and
add
add
adc
adc
pop
arpl
pop
pop
adc
adc
or
pop
pop
inc
add
add
idiv
(bad)
call
adc
add
add
xor
sub
add
push
add
push
and
add
add
dec
adc
add
push
add
push
and
add
and
add
jp
adc
or
add
pop
pop
dec
add
adc
pushf
add
add
cmp
add
add
adc
add
add
xor
inc
add
add
idiv
(bad)
inc
jnp
add
add
arpl
inc
add
add
idiv
(bad)
inc
jnp
add
add
pop
push
add
add
add
imul
and
add
add
or
add
bound
adc
or
pop
adc
pop
adc
or
add
adc
pop
pop
bound
pop
adc
add
or
push
adc
call
adc
adc
or
adc
or
mov
add
sbb
add
add
(bad)
(bad)
call
adc
or
push
sbb
add
add
(bad)
(bad)
call
lea
add
add
push
adc
push
and
add
sub
add
mov
adc
adc
sbb
jle
add
sub
add
and
sbb
or
adc
sub
es
add
push
jp
adc
pop
pop
and
pushf
adc
adc
sub
or
or
pop
and
adc
xchg
adc
adc
and
add
add
in
inc
add
add
idiv
(bad)
dec
adc
xchg
adc
add
add
adc
pushf
add
add
or
adc
adc
add
add
add
idiv
(bad)
call
push
sub
add
or
add
pop
sub
add
or
pop
pop
dec
add
add
or
add
or
pop
pop
adc
adc
adc
das
sbb
inc
add
add
idiv
(bad)
inc
adc
adc
sahf
or
or
or
or
adc
dec
sbb
add
add
idiv
(bad)
inc
adc
add
add
add
adc
jge
add
add
adc
jge
add
add
adc
jge
add
add
adc
jge
add
add
adc
jge
add
add
adc
add
push
pop
sub
or
cld
(bad)
call
add
(bad)
(bad)
inc
adc
push
adc
add
cmp
sbb
add
add
(bad)
(bad)
inc
adc
add
add
add
adc
jge
add
add
adc
jge
add
add
adc
jge
add
add
adc
jge
add
add
adc
jge
add
add
adc
add
pop
jge
add
add
push
pop
sub
adc
pop
add
add
add
add
adc
sbb
add
add
add
add
add
add
add
add
add
pop
sub
add
or
and
add
pop
jge
add
add
sub
adc
or
pusha
add
add
add
add
add
add
add
jnp
add
add
jnp
add
add
jnp
add
add
imul
add
add
outs
in
add
and
add
jnp
add
add
xor
sbb
add
add
idiv
(bad)
call
sub
add
add
add
jnp
add
add
jge
add
add
adc
or
sbb
add
popa
add
adc
pop
jge
add
add
lea
add
or
jnp
add
add
push
push
mov
in
add
or
push
das
and
add
idiv
(bad)
call
sub
add
and
push
add
push
and
add
jp
push
xchg
pop
pop
xor
inc
add
add
idiv
(bad)
inc
pop
xchg
and
daa
and
adc
add
push
add
push
push
push
xchg
mov
add
push
pop
xchg
mov
add
sub
es
add
push
jp
push
sbb
add
inc
jge
add
add
push
sbb
out
add
add
jnp
add
add
adc
bound
inc
add
add
idiv
(bad)
call
lea
add
add
push
and
adc
add
push
mov
out
add
add
add
add
adc
add
push
and
pop
adc
or
and
adc
add
push
and
sbb
es
add
push
jp
sbb
xor
inc
add
add
idiv
(bad)
jmp
into
adc
add
push
and
add
jp
pop
add
add
add
pop
pop
bound
add
add
pop
or
add
add
pop
add
add
add
pop
pop
bound
pop
jge
add
add
add
add
add
icebp
add
add
adc
add
push
jge
add
add
add
add
add
adc
inc
add
add
idiv
(bad)
jmp
add
add
sub
add
add
add
pop
add
add
add
pop
pop
bound
jge
add
add
pop
add
add
add
pop
pop
bound
jge
add
add
pop
add
add
add
pop
pop
bound
jge
add
add
add
add
add
imul
inc
add
or
jmp
or
pushf
or
pop
or
sbb
add
add
idiv
(bad)
jmp
add
or
or
add
add
add
add
add
add
retf
add
or
add
or
add
add
add
add
push
sub
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
jnp
add
add
sub
xor
add
add
add
add
add
jnp
add
add
into
add
or
add
or
adc
add
add
add
and
add
push
and
add
jp
add
xor
add
add
add
add
add
add
add
rol
add
sub
xor
add
add
add
add
add
adc
add
push
add
push
and
add
jp
add
xor
add
add
add
add
add
ss
add
push
add
push
and
add
jp
add
xor
add
add
add
add
add
lea
add
push
add
push
and
add
jp
add
xor
add
add
add
add
add
fmul
add
push
add
push
and
add
jp
add
xor
add
add
add
add
add
xor
add
push
jae
add
or
xor
add
add
add
add
add
add
add
aaa
sbb
add
add
(bad)
(bad)
call
sub
add
add
jge
add
add
jnp
add
add
adc
add
idiv
(bad)
inc
jnp
add
add
rol
or
add
or
or
add
add
add
add
add
dec
add
push
sub
add
add
or
pop
add
add
add
add
sub
add
sub
add
or
or
add
add
add
add
sub
add
sub
xor
add
add
add
add
add
add
push
add
push
sub
add
add
or
or
add
add
add
add
add
ret
push
sub
add
add
or
pop
add
add
add
add
sub
add
push
sub
add
or
or
add
add
add
add
sub
add
push
sub
xor
add
add
add
add
add
add
lds
add
sub
add
add
or
sbb
add
add
jle
add
or
add
add
jle
add
or
add
add
sub
add
add
xor
add
add
add
add
jle
add
or
add
add
jle
add
or
add
add
sub
sub
add
add
(bad)
(bad)
call
sub
add
es
pop
add
sub
add
and
add
jp
add
add
add
add
or
aaa
add
add
add
add
jle
add
or
add
add
jle
add
or
add
add
sub
sub
add
sub
add
jae
add
or
add
add
add
add
xor
add
add
add
add
add
add
add
add
sub
add
or
add
jge
add
add
add
add
or
sbb
add
add
add
add
jnp
add
add
sub
add
or
add
jge
add
add
adc
push
add
add
add
add
add
add
add
push
sub
sbb
add
(bad)
(bad)
call
sub
add
es
add
add
retf
add
push
sub
adc
add
inc
add
add
add
add
add
sub
add
jae
add
or
jne
add
add
push
sub
sbb
add
add
idiv
(bad)
call
sub
add
es
jae
add
push
or
or
pop
adc
aad
add
and
add
add
or
pop
add
add
add
add
sub
add
add
(bad)
(bad)
call
sub
add
and
push
add
push
and
add
jp
jne
add
add
sbb
add
add
idiv
(bad)
jmp
sub
add
sub
add
and
add
jp
add
add
push
jae
add
push
sub
add
adc
add
push
add
add
adc
sub
add
add
(bad)
(bad)
call
sub
add
and
add
sub
add
and
add
jp
jne
add
add
push
sub
pop
inc
add
add
idiv
(bad)
inc
jae
add
push
or
or
pop
adc
xlat
add
push
and
add
add
or
dec
add
add
add
add
sub
add
add
(bad)
(bad)
call
sub
add
and
add
sub
add
and
add
jp
jne
add
add
and
add
sub
add
and
add
jp
add
add
push
jae
add
push
sub
add
or
xor
add
add
add
add
add
add
and
inc
add
add
idiv
(bad)
call
sub
add
and
push
add
push
jae
add
or
add
add
add
add
xor
add
add
add
add
add
jnp
add
add
and
inc
add
add
idiv
(bad)
call
sub
add
and
push
add
push
jae
add
or
jnp
add
add
add
add
or
xor
add
add
jnp
add
add
and
add
idiv
(bad)
call
sub
add
and
push
add
push
and
add
jp
add
add
add
add
add
xor
add
add
add
add
add
jnp
add
add
adc
scas
push
add
sub
add
and
add
jp
add
add
add
add
add
or
and
add
add
add
add
add
add
adc
scas
push
add
sub
add
and
add
jp
jnp
add
add
add
add
xor
add
add
add
add
add
jnp
add
add
adc
scas
push
add
sub
add
and
add
jp
add
add
add
add
add
or
and
add
add
add
add
add
add
adc
scas
push
add
sub
add
and
add
jp
jnp
add
add
add
add
xor
add
add
add
jnp
add
add
and
add
idiv
(bad)
call
sub
add
and
push
add
push
and
add
jp
add
add
add
add
add
xor
add
add
add
add
add
add
add
and
add
idiv
(bad)
call
sub
add
and
push
add
push
and
add
jp
add
add
add
add
inc
add
add
add
push
add
add
add
pop
jge
add
add
add
add
or
xor
add
add
add
add
add
add
and
add
idiv
(bad)
call
sub
add
and
push
add
push
and
add
jp
jnp
add
add
add
or
xor
add
add
jnp
add
add
and
add
idiv
(bad)
call
sub
add
and
push
add
push
and
add
jp
add
add
add
add
add
xor
add
add
add
add
add
jnp
add
add
adc
scas
push
add
sub
add
and
add
jp
jnp
add
add
add
add
xor
add
add
add
add
add
add
add
and
add
idiv
(bad)
call
sub
add
and
push
add
push
and
add
jp
jnp
add
add
add
or
xor
add
add
add
add
add
add
and
add
idiv
(bad)
call
sub
add
and
push
add
push
and
add
jp
jnp
add
add
add
or
xor
add
add
add
add
add
add
and
add
idiv
(bad)
call
sub
add
and
push
add
push
and
add
jp
jnp
add
add
adc
add
add
add
add
jnp
add
add
and
add
idiv
(bad)
call
sub
add
and
push
add
push
and
add
jp
jnp
add
add
sbb
inc
add
add
idiv
(bad)
inc
jnp
add
add
jns
add
and
push
add
add
sbb
inc
add
add
idiv
(bad)
inc
jnp
add
add
fwait
add
push
and
sub
add
add
xor
add
add
add
jnp
add
add
and
add
(bad)
(bad)
call
sub
add
add
add
add
outs
imul
jnp
add
add
outs
lea
add
sub
add
add
or
pop
add
add
add
add
outs
icebp
add
push
sub
adc
push
add
add
add
adc
jnp
add
add
and
inc
add
add
idiv
(bad)
call
sub
add
and
push
add
push
jae
add
or
jnp
add
add
add
push
and
or
add
(bad)
(bad)
jmp
add
adc
rol
add
sub
add
add
xor
add
add
add
adc
jnp
add
add
adc
scas
push
add
sub
add
and
add
jp
jnp
add
add
add
push
and
adc
inc
add
add
idiv
(bad)
call
sub
add
sub
add
sub
add
push
sub
add
add
xor
add
add
add
add
add
outs
rol
add
add
sbb
add
and
xor
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
push
sub
add
or
add
outs
adc
add
or
pop
das
jle
add
or
add
or
sub
or
sub
add
and
inc
add
add
idiv
(bad)
inc
sub
add
push
sub
sub
es
sub
add
push
pop
or
add
adc
add
xor
es
add
add
add
and
inc
add
add
idiv
(bad)
inc
add
les
add
sub
add
and
add
push
or
outs
add
or
pop
sub
add
add
add
sub
add
and
add
push
or
add
sbb
add
(bad)
(bad)
call
adc
add
and
jnp
add
add
pop
sbb
add
add
(bad)
(bad)
inc
sub
add
push
and
adc
add
jae
add
or
pop
and
add
lea
add
adc
add
add
add
or
adc
mov
in
add
and
or
xor
add
add
add
idiv
(bad)
call
adc
push
adc
sub
adc
adc
xchg
pop
or
xor
inc
add
add
idiv
(bad)
jmp
mov
add
and
or
or
or
mov
adc
adc
cmp
add
adc
pop
pop
adc
adc
pop
pop
adc
adc
adc
xor
adc
push
adc
outs
out
add
or
ja
(bad)
call
add
add
add
idiv
(bad)
call
pop
outs
cmp
add
sub
push
outs
rol
or
add
xor
add
add
add
sub
add
add
(bad)
(bad)
call
sub
add
and
add
sub
add
jae
add
or
jnp
add
add
sbb
inc
add
add
idiv
(bad)
jmp
scas
push
add
sub
add
jae
add
or
sub
add
add
push
and
add
push
and
add
push
and
add
push
and
add
add
add
out
add
push
ficom
add
nop
add
add
(bad)
(bad)
jmp
push
add
push
fsubr
add
add
add
add
dec
add
jp
adc
add
add
xor
add
add
add
add
adc
add
add
push
and
adc
add
and
add
or
jnp
add
add
inc
sbb
add
(bad)
(bad)
call
sub
add
or
jnp
add
add
push
add
push
or
jnp
add
add
and
add
or
jnp
add
add
sbb
add
or
jnp
add
add
and
add
add
adc
rol
add
add
add
add
mov
add
or
add
push
and
add
sbb
add
add
(bad)
(bad)
inc
sub
add
push
and
add
sub
add
or
cmp
add
or
add
and
outs
cmp
add
and
add
add
or
add
or
add
push
push
adc
mov
out
add
or
add
or
add
or
leave
adc
rol
add
fimul
add
pop
adc
pop
add
or
ficom
sub
sbb
add
add
idiv
(bad)
dec
outs
pop
add
or
or
jae
add
or
push
add
or
add
push
or
pop
add
add
add
xor
add
and
add
add
daa
add
or
outs
sbb
add
and
add
add
mov
add
and
adc
add
adc
add
add
add
inc
adc
sub
add
add
add
jge
add
sub
add
and
cmp
sub
add
add
add
jge
add
sub
add
and
add
push
and
add
and
pop
sub
sbb
add
add
(bad)
(bad)
dec
adc
outs
sbb
add
add
add
add
outs
sahf
add
push
or
add
push
and
inc
add
add
idiv
(bad)
inc
int3
add
add
inc
add
add
idiv
(bad)
dec
outs
sub
add
and
adc
sub
add
or
or
add
out
add
push
adc
pop
pop
adc
adc
adc
mov
loop
inc
add
add
idiv
(bad)
jmp
pop
sub
add
or
add
add
add
or
or
or
adc
mov
in
add
and
or
xor
inc
add
add
idiv
(bad)
inc
jnp
add
add
or
adc
out
add
or
int
or
or
adc
outs
pop
add
or
push
sub
sbb
add
add
(bad)
(bad)
inc
outs
mov
add
and
sbb
add
(bad)
(bad)
inc
sub
add
or
jnp
add
add
lahf
add
push
sub
sub
add
add
add
add
add
stos
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
pop
outs
lock
push
add
fadd
add
sub
add
xor
add
add
add
add
add
add
add
bound
pop
jge
add
add
sub
sbb
add
add
idiv
(bad)
call
sub
add
add
add
add
and
add
(bad)
(bad)
inc
jnp
add
add
rol
add
add
add
add
rol
or
jnp
add
add
adc
add
idiv
(bad)
inc
jnp
add
add
rol
or
add
xor
add
add
add
add
add
pop
outs
lock
push
sub
xor
add
add
add
push
outs
lock
push
fiadd
add
fadd
add
fsubr
add
add
adc
add
add
add
or
pop
add
add
sbb
pop
add
add
push
sub
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
mov
add
and
or
adc
add
push
add
push
and
pop
add
sub
add
and
add
or
add
and
add
push
jp
add
add
adc
add
add
xor
add
add
xor
add
add
adc
sub
add
or
adc
add
outs
int
add
imul
and
inc
add
add
or
pop
outs
in
add
or
or
add
adc
sub
add
adc
adc
add
sbb
inc
add
add
idiv
(bad)
call
sub
add
es
adc
fisubr
adc
add
xor
add
idiv
(bad)
(bad)
ficom
sub
sbb
add
add
(bad)
(bad)
inc
outs
pop
add
or
push
sub
push
sub
add
add
add
or
jns
add
add
add
xor
add
add
add
add
add
and
sub
add
add
add
pop
adc
adc
add
pop
jge
add
add
sub
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
sub
add
jae
add
or
pop
adc
sti
add
push
sub
xor
add
add
add
add
add
add
(bad)
(bad)
call
sub
add
and
push
add
push
and
add
jp
push
xor
and
pop
add
sub
add
and
add
sub
add
and
add
jp
cmc
add
push
or
add
add
add
adc
or
add
add
add
push
push
sub
add
or
xor
add
add
add
add
add
add
(bad)
(bad)
call
sub
add
and
add
sub
add
jae
add
or
pop
adc
std
add
push
and
add
xor
outs
add
add
add
add
add
add
(bad)
(bad)
call
sub
add
and
add
sub
add
jae
add
or
push
xor
sbb
add
add
(bad)
(bad)
jmp
les
add
sub
add
and
add
sub
add
and
add
jp
cmc
add
push
or
adc
or
add
add
add
add
add
add
push
push
sub
adc
push
add
add
add
add
add
jge
add
add
add
add
add
pop
jge
add
add
add
test
push
and
add
jge
add
add
jnp
add
add
sub
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
clc
add
push
and
add
add
jge
add
add
push
jge
add
add
add
xor
add
add
sldt
adc
sub
add
add
(bad)
(bad)
call
sub
add
and
sbb
add
push
add
push
jae
add
or
mov
add
add
adc
sbb
add
sub
add
and
add
jp
or
adc
or
inc
add
add
idiv
(bad)
call
sub
pop
pop
or
and
add
add
jecxz
inc
add
add
idiv
(bad)
call
sub
adc
add
outs
add
add
add
adc
sub
add
add
(bad)
(bad)
call
sub
add
and
sbb
add
push
add
push
jae
add
or
mov
add
add
adc
sbb
add
sub
add
and
add
jp
or
adc
or
inc
add
add
idiv
(bad)
call
sub
pop
pop
or
and
add
add
jecxz
inc
add
add
idiv
(bad)
call
sub
adc
push
add
add
add
add
add
add
add
adc
dec
sbb
add
push
add
push
and
add
jp
jnp
add
add
sub
add
push
and
sub
add
push
sub
add
add
(bad)
(bad)
call
sub
add
and
add
sub
add
and
add
jp
and
add
pop
jge
add
add
add
adc
or
pushf
add
add
jnp
add
add
adc
cmps
sbb
add
push
add
push
and
add
jp
jnp
add
add
sub
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
and
inc
add
add
idiv
(bad)
jmp
ja
add
sub
add
and
add
jp
add
add
lea
add
or
jnp
add
add
jnp
add
add
add
add
pop
push
push
and
add
add
aad
add
add
add
pop
jge
add
add
sub
xor
add
add
adc
jnp
add
add
adc
add
add
sub
add
and
add
jp
push
jge
add
add
or
sub
add
push
and
add
add
add
jnp
add
add
pop
outs
in
add
and
push
push
sub
add
(bad)
(bad)
call
sub
add
es
or
or
or
or
push
xor
sbb
add
add
(bad)
(bad)
inc
and
add
pop
jge
add
add
sub
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
adc
sub
add
add
(bad)
(bad)
call
sub
add
and
sbb
add
push
add
push
and
add
jp
jnp
add
add
sbb
inc
add
add
idiv
(bad)
jmp
sbb
add
push
add
push
jae
add
push
jp
mov
add
add
cs
sbb
add
add
idiv
(bad)
jmp
popf
sbb
add
push
add
push
and
mov
add
and
add
add
sub
or
jae
add
push
jp
jnp
add
add
sub
add
push
xor
sbb
add
add
idiv
(bad)
inc
sub
add
add
add
add
add
jnp
add
add
add
add
pop
and
add
add
aad
add
add
add
pop
jge
add
add
add
adc
or
add
add
adc
add
add
add
add
(bad)
(bad)
call
sub
add
es
add
add
push
add
push
and
add
jp
jnp
add
add
sbb
inc
add
add
idiv
(bad)
jmp
push
sbb
add
push
add
push
and
add
jp
push
xor
sbb
add
add
(bad)
(bad)
inc
mov
sbb
idiv
(bad)
jmp
mov
add
jae
add
or
and
add
add
mov
cmp
inc
add
add
idiv
(bad)
jmp
ret
add
push
add
push
add
add
add
add
add
jnp
add
add
add
add
inc
add
or
push
jae
add
push
jp
jnp
add
add
sub
add
push
xor
add
or
add
add
jnp
add
add
jnp
add
add
add
add
pop
and
add
add
aad
add
add
add
pop
jge
add
add
add
add
xor
add
add
add
add
add
add
add
and
add
idiv
(bad)
call
sub
add
and
add
push
and
add
jp
jnp
add
add
jnp
add
add
add
test
push
and
add
add
add
add
rol
add
add
jge
add
add
and
add
pop
jge
add
add
adc
or
jae
add
sldt
adc
jnp
add
add
and
idiv
(bad)
call
sub
add
es
sbb
add
push
add
push
jae
add
push
jp
jnp
add
add
xor
sbb
add
add
(bad)
(bad)
inc
jnp
add
add
add
add
pop
or
jnp
add
add
add
test
push
and
inc
add
or
sub
add
add
add
add
rol
add
sub
adc
push
add
add
add
add
add
add
add
ds
inc
add
add
idiv
(bad)
call
sub
add
add
or
jnp
add
add
adc
add
idiv
(bad)
inc
jnp
add
add
rol
or
adc
or
add
add
add
add
and
jnp
add
add
adc
add
idiv
(bad)
inc
jnp
add
add
rol
or
adc
or
add
add
xor
add
add
add
add
add
sub
jae
add
push
jge
add
add
add
add
or
push
add
add
add
add
sub
jae
add
push
jge
add
add
jnp
add
add
outs
push
add
push
sub
add
xor
add
add
add
add
add
and
sub
add
add
(bad)
(bad)
call
sub
add
and
add
sub
add
and
add
jp
add
add
push
and
add
jge
add
add
add
adc
or
cmp
add
add
adc
add
push
or
add
add
add
adc
add
add
add
add
push
add
push
and
add
jge
add
add
add
sbb
add
and
add
push
sub
add
xor
add
add
add
adc
add
push
or
jnp
add
add
sub
add
push
push
sub
xor
add
add
jae
add
push
or
push
jnp
add
add
outs
sub
add
push
sub
add
adc
or
aaa
add
add
add
add
add
add
push
sub
sbb
add
add
(bad)
(bad)
call
sub
add
add
sbb
add
and
add
push
and
add
and
add
xor
add
add
add
add
add
sub
add
push
and
add
and
or
add
add
add
add
sub
add
add
(bad)
(bad)
call
sub
add
and
pop
add
sub
add
and
add
jp
outs
sbb
add
and
add
push
and
add
sub
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
xor
add
and
add
or
or
add
add
jnp
add
add
outs
xor
add
sub
add
add
or
push
add
add
add
add
jnp
add
add
aaa
add
push
and
add
or
or
add
add
jnp
add
add
outs
cmp
add
sub
add
add
or
push
add
add
add
add
jnp
add
add
cmp
add
and
add
or
or
add
add
jnp
add
add
outs
cmp
add
sub
add
add
or
push
add
add
add
add
jnp
add
add
dec
add
push
and
add
or
or
add
add
jnp
add
add
outs
dec
add
push
sub
add
add
or
push
add
add
add
add
jnp
add
add
dec
add
push
and
add
or
or
add
add
jnp
add
add
outs
dec
add
push
sub
add
add
or
sldt
add
add
add
add
sbb
add
add
push
add
push
sub
add
or
sldt
add
add
add
add
and
add
add
and
add
sub
add
or
or
add
add
add
add
add
add
cmp
add
or
or
add
add
jnp
add
add
outs
add
push
sub
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
cmp
add
and
add
or
or
add
add
jnp
add
add
outs
cmp
add
sub
add
adc
pop
add
add
add
add
add
add
add
push
add
add
add
inc
add
or
adc
add
push
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
add
inc
add
push
pop
xor
add
add
idiv
(bad)
inc
sub
add
push
and
add
sub
add
and
add
and
inc
add
add
idiv
(bad)
call
sub
sub
adc
and
mov
add
ins
add
adc
sub
add
add
(bad)
(bad)
call
sub
add
and
add
sub
add
and
add
jp
sub
add
sub
add
and
add
jp
add
adc
add
or
sub
or
add
and
inc
add
add
idiv
(bad)
inc
sub
or
add
outs
adc
add
or
jle
add
or
das
outs
xor
add
or
or
pop
outs
adc
add
and
jge
add
sub
add
and
add
and
jle
add
or
add
push
add
outs
xor
add
add
inc
add
or
add
add
jmp
add
outs
add
push
add
xor
push
add
add
push
and
add
and
inc
add
add
idiv
(bad)
inc
outs
xor
add
and
add
push
and
add
and
fild
add
and
sub
idiv
(bad)
inc
add
add
push
and
add
sub
add
and
add
and
add
add
push
cmp
add
sub
and
add
add
add
xor
add
push
add
das
jle
add
or
add
or
add
sub
add
or
add
add
das
jle
add
or
add
or
add
or
add
inc
add
or
add
add
outs
dec
add
push
add
outs
push
add
push
sub
add
adc
add
add
add
add
add
add
and
idiv
(bad)
call
sub
add
add
add
add
inc
add
or
add
add
add
add
add
inc
add
or
imul
sbb
or
or
sub
add
and
add
or
pop
or
push
mov
loope
inc
add
add
idiv
(bad)
inc
sub
add
add
or
or
add
add
jnp
add
add
outs
push
add
push
sub
add
add
or
or
add
add
add
add
push
pop
sub
add
sub
xor
add
add
add
add
sub
add
and
add
jp
sub
add
add
(bad)
(bad)
call
sub
add
and
add
sub
add
and
add
jp
and
add
sub
add
outs
inc
add
or
outs
xor
add
add
sub
add
add
(bad)
(bad)
jmp
rol
jmp
add
outs
add
push
add
outs
cmp
add
add
outs
cmp
add
add
push
cmp
add
add
dec
add
or
add
add
sub
add
add
(bad)
(bad)
call
xor
add
xor
push
add
add
or
add
push
add
add
or
add
push
add
add
or
add
push
add
outs
dec
add
push
add
outs
push
add
push
sub
add
xor
add
add
add
add
add
and
and
add
sub
add
and
add
add
arpl
add
push
and
add
add
add
jo
xor
add
add
add
jo
inc
add
push
add
add
add
cmp
add
add
add
add
cmp
add
add
add
add
dec
add
push
add
add
add
dec
add
push
add
push
cmp
add
sub
add
add
or
cmp
add
add
add
and
pop
push
push
push
push
jae
add
or
and
sbb
add
push
add
push
and
add
sti
sbb
add
push
add
push
and
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
sub
add
sub
add
and
add
jp
add
add
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
push
das
sbb
add
(bad)
(bad)
call
sub
add
and
push
add
push
and
add
sub
add
jae
add
or
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
imul
add
add
add
jle
add
add
dec
add
or
mov
push
add
push
and
add
sub
add
and
add
jp
(bad)
sub
or
dec
add
or
dec
add
or
dec
add
or
add
push
add
or
add
push
add
or
add
jge
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
sub
add
add
(bad)
(bad)
call
sub
add
and
push
add
push
and
add
jp
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
sub
add
add
(bad)
(bad)
call
sub
add
and
push
add
push
jae
add
or
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
sub
add
add
(bad)
(bad)
call
sub
add
and
push
add
push
and
add
jp
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
adc
add
add
sbb
add
(bad)
(bad)
call
sub
add
add
push
pop
and
outs
mov
add
and
add
and
add
jge
add
add
sub
add
and
mov
add
and
push
sbb
add
add
(bad)
(bad)
inc
push
pop
and
add
or
jge
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
sub
add
add
(bad)
(bad)
call
sub
add
add
sti
sbb
add
push
add
push
and
add
add
jge
add
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
or
add
add
add
add
push
add
or
add
xor
add
add
adc
sub
add
add
(bad)
(bad)
call
sub
add
and
add
sub
add
and
add
jp
or
add
pop
sub
add
outs
push
add
or
add
add
pop
fs
or
add
push
sub
add
imul
push
pop
or
add
push
sub
add
and
add
push
push
push
pop
or
add
push
sub
add
and
add
push
push
push
pop
or
add
pop
or
pop
add
push
and
add
push
pop
or
or
add
pop
or
pop
add
push
sub
add
and
add
push
pop
or
or
add
push
sub
add
and
add
add
push
pop
or
add
and
sub
add
add
push
pop
sub
add
and
add
and
add
push
pop
fs
or
add
sbb
pop
add
push
and
add
sub
add
push
sbb
or
add
sbb
pop
add
push
and
add
and
add
push
sbb
add
push
pop
and
pop
add
push
outs
push
add
or
dec
add
push
push
pop
and
add
push
pop
and
pop
add
push
and
add
sub
push
push
pop
and
add
push
push
sub
add
and
add
push
push
push
pop
or
add
push
sub
add
and
add
push
add
sub
add
push
and
add
push
inc
jge
add
add
add
add
xor
add
add
adc
sub
add
add
(bad)
(bad)
call
sub
add
and
add
push
and
add
jp
or
sub
add
push
and
sub
add
and
cmp
add
add
push
sub
add
and
aaa
add
push
and
push
sub
add
and
cmp
add
and
push
sub
add
and
cmp
add
and
or
pusha
add
push
or
sub
sub
push
and
pop
or
pusha
add
push
and
push
or
or
pop
or
and
push
xor
add
and
sub
add
and
inc
add
push
add
pop
sub
add
and
inc
add
push
push
add
sbb
pop
add
push
and
inc
add
push
and
sub
add
and
dec
add
push
and
and
pop
add
push
and
dec
add
push
and
and
pop
add
push
or
sub
add
and
push
pop
inc
add
add
idiv
(bad)
inc
sub
add
pop
xor
cmp
inc
add
add
idiv
(bad)
inc
sub
add
and
push
sub
add
and
dec
add
push
and
push
sub
add
and
add
and
pushf
push
add
inc
add
add
idiv
(bad)
inc
add
bound
add
and
add
jnp
add
add
add
push
sub
add
add
jge
add
add
add
xor
add
add
add
add
add
sub
add
push
and
add
and
and
inc
add
outs
add
adc
jne
add
add
push
cmp
add
add
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
jnp
add
add
das
add
or
add
sbb
add
add
(bad)
(bad)
inc
jnp
add
add
jnp
add
add
mov
inc
add
add
idiv
(bad)
inc
sub
add
push
and
add
push
and
add
add
cmp
add
push
outs
cmp
add
and
add
sbb
add
add
(bad)
(bad)
inc
sub
add
push
and
add
push
inc
push
add
add
inc
add
add
idiv
(bad)
inc
sub
es
outs
cmp
sub
add
and
add
sbb
add
add
(bad)
(bad)
inc
sub
add
push
and
add
push
and
add
sbb
add
add
(bad)
(bad)
inc
sub
add
and
add
push
and
add
sbb
add
add
(bad)
(bad)
inc
sub
add
and
add
push
and
add
and
add
sbb
add
add
idiv
(bad)
inc
sub
add
and
add
push
and
add
and
add
sbb
add
add
(bad)
(bad)
inc
sub
add
and
add
push
and
add
and
add
sbb
add
add
(bad)
(bad)
inc
sub
add
push
outs
dec
add
push
and
add
and
inc
add
add
idiv
(bad)
inc
sub
add
and
add
push
and
add
and
inc
add
add
idiv
(bad)
inc
sub
add
and
add
push
and
inc
add
add
idiv
(bad)
inc
sub
add
and
add
push
and
add
or
add
or
sub
add
xor
add
add
add
add
add
and
add
dec
add
add
and
add
push
add
add
and
add
push
add
add
and
add
push
add
add
add
add
xor
add
add
add
add
add
add
add
dec
add
add
dec
add
add
push
add
add
dec
add
add
push
add
add
dec
add
add
push
add
add
add
add
xor
xchg
add
add
add
add
add
sub
add
and
add
jp
push
pop
or
add
or
or
xchg
sub
sbb
add
add
(bad)
(bad)
call
sub
add
add
xchg
pop
and
adc
inc
add
add
idiv
(bad)
inc
or
pop
sub
add
add
(bad)
(bad)
inc
or
sbb
add
add
idiv
(bad)
call
or
sbb
or
pop
or
pop
pop
or
sbb
add
add
(bad)
(bad)
inc
sub
add
xor
add
add
add
add
add
(bad)
(bad)
call
sub
add
and
add
sub
add
and
add
jp
push
das
sub
inc
add
add
idiv
(bad)
jmp
mov
add
and
add
sub
add
and
add
jp
push
das
sbb
add
add
(bad)
(bad)
jmp
pop
sbb
add
push
and
add
sub
add
jae
add
or
add
add
inc
add
add
idiv
(bad)
jmp
and
add
sub
add
and
add
sub
add
and
add
jp
jae
add
or
add
sub
and
add
xchg
outs
cld
add
or
pop
or
add
xor
sbb
add
(bad)
(bad)
inc
sub
xor
add
add
add
add
sub
add
add
(bad)
(bad)
call
sub
add
and
add
sub
add
and
add
jp
sub
add
add
(bad)
(bad)
jmp
(bad)
add
add
push
add
push
and
add
jp
outs
push
add
or
push
add
pop
add
push
and
or
mov
add
sldt
adc
sub
add
sub
add
and
add
jp
sub
add
sub
add
and
add
jp
or
adc
push
pop
outs
fild
add
rcr
push
add
pop
das
sub
inc
add
add
idiv
(bad)
call
sub
add
add
pop
add
add
or
or
push
pop
pop
or
push
add
icebp
sbb
add
add
(bad)
(bad)
inc
add
or
pop
add
add
add
add
sub
add
add
(bad)
(bad)
call
sub
add
and
add
sub
add
jae
add
or
sub
add
add
(bad)
(bad)
jmp
(bad)
add
add
push
add
push
and
add
jp
outs
push
add
or
add
push
and
add
xor
add
add
add
add
sub
add
add
(bad)
(bad)
call
sub
add
and
add
sub
add
and
add
jp
sub
add
add
(bad)
(bad)
jmp
(bad)
add
add
push
add
push
and
add
jp
push
add
push
and
or
jge
add
sldt
adc
sub
add
add
(bad)
(bad)
call
sub
add
and
add
sub
add
and
add
jp
sub
add
add
(bad)
(bad)
jmp
(bad)
add
add
push
add
push
jae
add
or
or
adc
push
pop
outs
fild
add
rcr
push
add
pop
sbb
add
add
(bad)
(bad)
inc
push
pop
add
add
or
push
add
sub
add
adc
push
add
add
adc
sub
add
sub
add
and
add
jp
pop
pop
or
add
pop
push
pushf
push
pop
pop
or
push
push
dec
sbb
add
(bad)
(bad)
call
sub
add
add
sub
add
pop
pop
xor
sbb
rcr
pop
pop
or
push
xor
push
push
loope
inc
add
add
idiv
(bad)
jmp
or
add
pop
pop
xor
push
das
icebp
sbb
add
add
idiv
(bad)
inc
xor
add
add
add
add
add
add
push
sub
add
xor
add
add
add
add
add
add
add
push
and
pop
sub
add
xor
sub
add
sub
add
push
or
or
or
add
xchg
pop
or
pop
pop
or
add
inc
add
add
idiv
(bad)
call
sub
add
es
sub
adc
add
pusha
add
add
add
push
or
or
or
add
xchg
pop
or
pop
pop
or
and
pop
inc
add
add
idiv
(bad)
call
sub
add
es
or
or
pop
and
or
pop
or
push
xor
pop
inc
add
add
idiv
(bad)
jmp
pushf
add
add
or
pop
or
xor
push
sub
xor
add
add
add
add
verw
sub
add
and
add
adc
sub
add
or
xchg
cwde
add
imul
push
add
add
add
adc
add
add
adc
sub
add
or
xchg
cwde
add
pop
jae
add
or
fimul
es
add
add
fiadd
pop
sub
add
add
add
add
and
add
jae
add
add
or
or
add
add
add
add
pop
adc
add
push
sub
add
xor
add
add
add
sub
add
or
add
add
add
add
sti
add
push
and
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
sub
add
xor
add
add
add
jnp
add
add
outs
push
add
push
sub
add
add
or
push
add
add
add
add
jnp
add
add
retf
add
or
add
or
add
add
add
add
push
sub
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
jnp
add
add
int
add
and
add
or
or
add
add
add
add
add
add
into
add
or
add
or
adc
add
add
add
and
add
sub
add
and
add
jp
add
xor
add
add
add
add
add
add
add
rol
add
sub
xor
add
add
add
add
add
sbb
sub
add
jae
add
or
xor
add
add
add
add
add
test
push
add
push
jae
add
or
xor
add
add
add
add
add
neg
add
push
jae
add
or
xor
add
add
add
add
add
cmp
add
sub
add
and
add
jp
add
xor
add
add
add
add
pop
lea
add
or
push
push
pop
outs
in
add
and
xor
add
idiv
(bad)
call
sub
add
es
sub
xor
add
add
add
add
add
add
sub
add
and
add
jp
or
jnp
add
add
jnp
add
add
adc
add
idiv
(bad)
call
sub
add
es
sub
jnp
add
add
add
add
add
sbb
inc
add
add
idiv
(bad)
inc
jnp
add
add
jnp
add
add
or
jnp
add
add
cmp
add
pop
add
add
add
imul
or
jnp
add
add
imul
add
add
sub
add
or
add
add
add
imul
add
add
(bad)
(bad)
inc
adc
push
add
add
sub
jnp
add
add
imul
inc
add
add
add
jnp
add
add
adc
or
aad
add
add
add
push
add
add
or
pop
or
or
pop
dec
add
cmp
push
add
add
add
add
adc
sbb
add
add
idiv
(bad)
jmp
mov
add
sub
add
and
add
add
mov
add
sub
add
and
add
jae
add
push
jp
imul
imul
push
xor
add
idiv
(bad)
call
add
push
sub
add
or
adc
adc
pop
lea
add
jge
add
add
add
push
add
add
adc
adc
pop
sub
add
or
adc
pop
adc
adc
pop
sub
add
or
adc
pop
or
adc
push
or
push
pop
dec
add
pop
push
push
inc
(bad)
(bad)
inc
and
add
push
jge
add
add
sub
add
or
or
add
add
add
add
add
add
push
add
push
sub
xor
add
add
add
add
add
add
add
add
add
or
push
add
add
add
add
jnp
add
add
test
push
and
add
or
or
add
add
add
add
add
add
test
push
sub
xor
add
add
add
add
add
jnp
add
add
jnp
add
add
sub
add
xor
add
add
ja
add
and
and
add
or
or
inc
pop
push
mov
xor
pop
inc
add
add
idiv
(bad)
call
sub
add
es
imul
or
push
push
or
add
or
xor
sbb
add
add
(bad)
(bad)
jmp
pop
or
or
push
push
mov
add
idiv
(bad)
jmp
add
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
xor
adc
add
js
add
add
add
add
adc
add
idiv
(bad)
call
sub
add
es
add
add
add
adc
inc
add
add
idiv
(bad)
inc
sub
jnp
add
add
add
add
and
adc
idiv
(bad)
inc
pop
jge
add
add
clts
sub
add
push
sub
add
jge
add
add
jnp
add
add
or
adc
pop
add
add
pop
add
jae
add
push
or
push
outs
push
add
push
pop
outs
inc
add
push
sub
add
add
(bad)
(bad)
jmp
int3
push
add
sub
add
jae
add
push
jp
push
push
push
add
add
pop
outs
cmp
add
jge
add
add
or
outs
inc
add
push
and
mov
add
pop
inc
add
add
idiv
(bad)
jmp
add
add
lea
add
or
add
add
clc
add
or
data16
push
adc
mov
xor
sbb
add
add
(bad)
(bad)
call
add
sub
or
add
and
add
inc
add
add
idiv
(bad)
jmp
add
add
sub
add
and
add
jp
or
adc
push
outs
push
add
or
add
or
adc
adc
push
xchg
sbb
add
add
(bad)
(bad)
inc
sub
jnp
add
add
add
add
and
add
add
outs
inc
add
push
and
and
inc
add
add
idiv
(bad)
inc
sub
jnp
add
add
add
add
and
add
add
outs
inc
add
push
and
push
add
add
push
add
add
add
add
add
and
pop
outs
inc
add
push
pop
push
xor
sbb
add
add
(bad)
(bad)
inc
sub
jnp
add
add
add
add
or
dec
pop
outs
inc
add
push
and
cmp
inc
add
add
idiv
(bad)
inc
outs
inc
add
push
and
inc
add
add
idiv
(bad)
inc
outs
inc
add
push
pop
xor
add
push
add
add
add
add
add
and
pop
add
add
sub
push
jae
add
push
jge
add
add
sub
sbb
add
add
(bad)
(bad)
inc
jnp
add
add
outs
push
add
or
add
push
sub
add
add
add
outs
test
add
and
add
push
push
push
add
add
add
add
add
sub
add
and
add
popa
adc
add
push
push
add
add
push
push
push
add
add
adc
pop
add
add
ds
add
sub
add
and
add
add
or
add
and
add
add
add
add
add
add
and
add
adc
outs
dec
add
or
inc
add
or
pop
jae
add
push
jp
jnp
add
add
add
inc
sbb
add
add
add
add
add
add
add
add
add
adc
pop
add
add
jne
add
and
add
lea
add
or
push
push
push
mov
in
add
and
xor
inc
add
add
idiv
(bad)
call
sub
add
sub
push
push
pop
outs
out
add
or
iret
adc
add
xor
add
adc
jnp
add
add
jnp
add
add
or
push
push
sbb
inc
add
add
idiv
(bad)
call
sub
add
add
sub
push
add
sub
add
add
or
pop
add
add
add
add
sub
add
xor
add
add
add
add
add
sub
add
push
sub
add
or
or
add
add
add
add
adc
add
and
add
xor
add
add
add
add
add
jae
add
push
sub
add
or
or
add
add
add
add
pop
adc
mov
add
sub
add
xor
add
add
add
sub
add
or
sub
add
sub
add
and
add
jp
add
add
add
add
std
add
push
and
add
and
add
add
jge
add
add
and
add
add
jge
add
add
add
add
or
push
add
add
add
add
jnp
add
add
add
sub
add
xor
add
add
add
jnp
add
add
outs
push
add
push
sub
add
add
or
or
add
add
add
add
add
add
retf
add
or
add
or
push
add
add
add
add
jnp
add
add
int3
add
or
add
or
or
add
add
add
add
add
add
fld
add
sub
xor
add
add
add
add
add
jnp
add
add
int
add
and
add
or
push
add
add
add
add
jnp
add
add
into
add
or
add
or
or
add
add
jnp
add
add
outs
jmp
add
add
xor
add
add
add
add
add
jnp
add
add
add
sub
add
and
or
or
add
add
jnp
add
add
outs
pop
add
or
add
add
xor
add
add
add
add
add
jnp
add
add
rol
add
and
add
or
adc
add
add
add
add
add
add
add
outs
in
add
and
add
xor
add
add
add
add
add
add
add
rol
add
sub
xor
add
add
add
add
add
sub
es
sbb
add
add
idiv
(bad)
call
sub
add
add
lahf
add
push
add
mov
add
add
or
and
add
add
add
add
add
add
sbb
pop
jge
add
add
sub
jnp
add
add
push
add
push
sub
add
add
or
push
add
add
add
add
jnp
add
add
test
push
and
add
or
or
add
add
add
add
add
add
test
push
sub
xor
add
add
add
add
add
jnp
add
add
jnp
add
add
add
add
xor
add
add
adc
sub
add
add
(bad)
(bad)
call
sub
add
and
push
add
push
jae
add
or
outs
sbb
add
and
add
and
add
pop
fs
adc
add
sbb
add
add
(bad)
(bad)
push
add
push
or
pop
dec
outs
inc
add
push
push
push
outs
xor
add
and
add
sub
add
sub
outs
xor
add
push
push
outs
cmp
add
push
push
outs
cmp
add
push
jb
add
jo
dec
add
push
push
jb
add
jo
dec
add
push
push
jb
add
jo
inc
add
push
push
add
add
push
outs
xor
add
and
add
and
add
push
push
add
add
add
push
add
push
add
add
add
jnp
add
add
or
add
push
or
dec
add
add
add
add
add
add
imul
add
add
push
and
add
pop
add
add
add
and
add
add
pop
add
push
and
add
add
pop
or
jnp
add
add
jnp
add
add
or
add
pop
add
add
push
outs
xor
add
and
add
and
inc
add
add
idiv
(bad)
inc
add
add
add
sub
jnp
add
add
jnp
add
add
or
add
add
push
pop
add
add
add
add
push
and
inc
add
add
idiv
(bad)
inc
outs
sub
add
sub
push
push
pop
add
add
add
add
xor
add
add
adc
jnp
add
add
xor
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
jnp
add
add
jnp
add
add
imul
add
sub
add
add
add
add
jnp
add
add
or
add
add
add
jnp
add
add
pop
jge
add
add
push
jge
add
add
jnp
add
add
jnp
add
add
cmp
inc
add
add
idiv
(bad)
jmp
mov
add
sub
add
and
add
add
ja
add
add
add
add
ja
add
sub
or
jae
add
push
jp
add
adc
push
add
add
adc
pop
lea
add
or
push
add
add
or
add
add
xor
add
add
add
add
add
add
add
(bad)
(bad)
call
sub
add
es
add
add
push
add
push
jae
add
or
push
das
push
and
add
add
push
and
add
sub
add
and
add
jp
mov
pop
add
add
add
idiv
(bad)
jmp
jp
add
sub
add
jae
add
or
push
das
sub
inc
add
add
idiv
(bad)
jmp
rol
add
push
and
add
sub
add
and
add
jp
jnp
add
add
push
add
add
add
sbb
add
add
(bad)
(bad)
jmp
leave
and
add
push
add
push
add
add
jnp
add
add
ja
add
sub
or
rol
add
push
push
jae
add
or
jnp
add
add
and
add
add
add
add
pop
add
add
add
imul
add
add
imul
add
or
jnp
add
add
add
add
add
add
add
add
aad
add
add
jnp
add
add
jnp
add
add
sub
add
or
jnp
add
add
jnp
add
add
or
add
add
add
jnp
add
add
imul
add
pop
pop
dec
add
add
add
add
jge
add
add
xchg
add
add
add
jnp
add
add
jnp
add
add
sub
add
or
add
and
add
pop
jge
add
add
add
add
popa
add
add
imul
jnp
add
add
jnp
add
add
sub
add
or
and
add
pop
jge
add
add
add
add
add
add
or
add
add
add
add
imul
add
push
jge
add
add
or
or
add
pop
dec
add
add
inc
add
add
idiv
(bad)
jmp
add
xor
add
add
add
add
add
jnp
add
add
add
add
add
imul
add
add
add
jnp
add
add
or
add
sub
add
xor
add
add
add
add
add
add
sub
add
add
or
dec
add
add
add
add
sub
add
add
add
and
add
add
sbb
inc
add
add
idiv
(bad)
call
sub
add
and
add
add
or
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
jnp
add
add
xor
sbb
add
add
idiv
(bad)
call
sub
add
add
jnp
add
add
jnp
add
add
jnp
add
add
add
add
add
daa
add
push
add
jge
add
add
add
xor
add
add
adc
push
jge
add
add
jnp
add
add
imul
push
add
jnp
add
add
jnp
add
add
outs
in
add
and
xor
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
pop
jge
add
add
pop
pop
or
push
xor
add
idiv
(bad)
inc
jnp
add
add
xor
inc
add
add
idiv
(bad)
inc
add
add
add
jnp
add
add
add
add
add
jnp
add
add
outs
in
add
or
add
or
add
add
add
add
add
add
add
add
push
add
or
push
add
add
add
add
add
add
add
and
adc
pop
add
add
adc
inc
add
add
idiv
(bad)
call
sub
add
and
sbb
add
push
and
add
jp
or
jnp
add
add
xor
sbb
add
add
(bad)
(bad)
inc
sub
push
xor
push
sub
add
add
add
aam
add
or
jnp
add
add
jnp
add
add
jnp
add
add
add
or
aad
add
push
or
pop
or
add
add
pop
jge
add
add
push
xor
add
idiv
(bad)
inc
adc
pop
add
add
adc
inc
add
add
idiv
(bad)
call
sub
add
and
sbb
add
push
jae
add
or
or
jnp
add
add
xor
add
idiv
(bad)
inc
sub
push
xor
inc
add
add
idiv
(bad)
call
sub
add
add
add
aam
add
and
add
add
jnp
add
add
jnp
add
add
add
or
aad
add
push
or
pop
or
add
add
pop
jge
add
add
push
xor
add
idiv
(bad)
inc
add
add
add
adc
jnp
add
add
xor
sbb
add
(bad)
(bad)
call
sub
add
add
lods
add
push
add
add
add
xor
inc
add
add
idiv
(bad)
jmp
dec
and
add
push
add
push
and
add
jp
jnp
add
add
jnp
add
add
jnp
add
add
xchg
or
and
add
pop
jge
add
add
sub
xor
add
add
add
add
add
sub
add
mov
add
push
bound
add
add
or
adc
add
add
add
add
mov
add
add
mov
add
and
pusha
sub
add
or
adc
add
add
sub
add
mov
add
and
bound
add
add
xor
add
add
add
add
add
add
add
add
jnp
add
add
mov
add
sbb
add
add
idiv
(bad)
call
sub
add
add
add
add
jnp
add
add
cmp
inc
add
add
idiv
(bad)
inc
jnp
add
add
sbb
add
idiv
(bad)
inc
add
add
add
imul
add
add
add
add
add
add
add
add
add
add
add
jnp
add
add
xor
inc
add
add
idiv
(bad)
inc
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
add
add
add
jnp
add
add
jnp
add
add
jnp
add
add
outs
in
add
or
sub
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
and
add
lea
add
jge
add
add
sub
add
xor
add
add
adc
and
add
or
pop
jge
add
add
and
add
xor
and
add
sub
add
and
add
jp
jnp
add
add
and
add
or
pop
jge
add
add
add
pushf
add
add
(bad)
jg
add
outs
add
add
add
xor
add
add
sldt
adc
inc
add
add
add
and
add
or
pop
jge
add
add
add
add
add
and
add
xchg
pushf
add
add
(bad)
jg
add
outs
add
add
and
jg
add
or
add
add
push
xor
xor
add
add
add
add
add
add
pop
and
add
and
add
xor
add
idiv
(bad)
call
sub
add
and
add
sub
add
and
add
jp
jnp
add
add
pop
and
jg
add
and
add
add
pop
or
sbb
add
add
idiv
(bad)
inc
jnp
add
add
das
jo
add
push
sbb
add
(bad)
(bad)
inc
jnp
add
add
add
add
add
jnp
add
add
sub
add
or
and
add
pop
jge
add
add
add
add
add
and
add
or
add
add
add
add
add
and
pushf
add
add
push
xor
sbb
add
add
(bad)
(bad)
jmp
add
add
mov
add
sub
xor
add
add
adc
add
outs
add
add
sub
add
or
outs
les
add
and
add
dec
add
and
add
add
add
add
or
xor
inc
add
add
idiv
(bad)
call
sub
add
add
jnp
add
add
jnp
add
add
outs
mov
push
xor
ins
add
add
add
pop
outs
mov
pop
or
push
add
jnp
add
add
jnp
add
add
outs
mov
or
add
add
add
pop
and
jg
add
outs
add
add
and
add
pop
jge
add
add
sub
xor
add
add
add
add
add
(bad)
(bad)
call
sub
add
and
push
add
push
jae
add
or
jnp
add
add
xor
sbb
add
add
(bad)
(bad)
push
add
or
and
add
xor
sbb
add
add
(bad)
(bad)
inc
add
dec
add
and
add
dec
add
add
jnp
add
add
add
or
add
add
outs
add
add
add
or
or
add
add
add
outs
add
add
sub
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
adc
jnp
add
add
add
add
or
jnp
add
add
or
add
push
add
add
add
jnp
add
add
add
add
pop
or
or
push
xor
add
(bad)
(bad)
call
sub
add
add
add
add
add
add
sub
add
or
pop
dec
add
push
dec
add
add
add
add
add
sub
add
or
and
add
pop
jge
add
add
jnp
add
add
das
adc
inc
add
add
idiv
(bad)
push
add
or
sub
add
xor
add
add
adc
add
and
add
jge
add
add
add
add
xor
add
add
add
add
add
sub
add
xor
add
add
adc
jnp
add
add
cmp
add
add
jnp
add
add
jnp
add
add
adc
add
idiv
(bad)
call
sub
add
es
jae
add
jnp
add
add
and
add
or
pop
jge
add
add
xchg
and
add
add
jnp
add
add
and
add
or
pop
jge
add
add
xchg
and
add
add
bound
jnp
add
add
pop
pop
bound
jae
add
and
add
adc
je
add
jnp
add
add
pop
add
pop
pop
bound
pop
push
imul
add
add
add
add
add
and
add
pop
pop
pop
fs
add
add
and
add
pop
jge
add
add
adc
push
add
add
add
add
adc
add
rol
push
and
xor
pop
inc
add
add
idiv
(bad)
call
sub
add
add
sub
add
push
push
sub
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
jnp
add
add
add
add
add
arpl
add
xor
add
add
add
add
add
and
add
jnp
add
add
pop
pop
pop
pop
fs
add
add
and
add
clc
pop
jge
add
add
add
or
sldt
add
add
add
jnp
add
add
jnp
add
add
add
add
xor
add
add
add
adc
inc
add
add
idiv
(bad)
call
sub
add
and
sbb
add
push
jae
add
or
jnp
add
add
pop
sub
sbb
add
(bad)
(bad)
jmp
xchg
and
add
push
add
push
and
add
jp
or
cmp
add
pop
pop
dec
add
add
add
add
pushf
add
add
fs
add
add
and
add
pop
jge
add
add
pop
pop
dec
add
push
pop
pop
or
jnp
add
add
xor
sbb
add
add
(bad)
(bad)
inc
inc
add
add
idiv
(bad)
inc
add
add
idiv
(bad)
inc
sub
jnp
add
add
jnp
add
add
or
inc
add
add
idiv
(bad)
inc
dec
add
add
add
add
jnp
add
add
add
sub
add
or
and
add
pop
jge
add
add
jnp
add
add
jnp
add
add
pop
pop
sub
sbb
add
add
(bad)
(bad)
inc
add
add
add
and
add
or
pop
jge
add
add
xchg
and
add
add
jae
add
push
jge
add
add
add
adc
push
add
add
add
add
adc
push
jge
add
add
add
push
and
add
and
add
jge
add
add
add
add
xor
add
add
add
add
adc
sub
add
add
(bad)
(bad)
call
sub
add
es
add
add
push
add
push
and
add
jp
push
das
sbb
mov
add
and
add
sub
add
jae
add
or
push
das
sbb
add
add
(bad)
(bad)
jmp
rol
add
push
and
add
sub
add
jae
add
or
jnp
add
add
jnp
add
add
sbb
idiv
(bad)
jmp
aad
add
sub
add
jae
add
or
add
xor
sbb
add
add
(bad)
(bad)
inc
add
inc
add
add
idiv
(bad)
jmp
rol
add
push
and
add
jp
pop
pop
sub
sbb
add
(bad)
(bad)
inc
and
add
add
pop
pop
dec
add
xchg
and
add
add
jnp
add
add
pop
pop
bound
jae
add
and
add
pop
jge
add
add
add
add
add
add
jno
add
push
jge
add
add
add
or
or
add
add
add
add
add
sub
add
add
or
or
add
add
add
add
push
sub
add
push
sub
add
adc
or
add
add
add
and
adc
add
add
idiv
(bad)
call
sub
add
es
or
add
and
add
or
sbb
inc
add
add
idiv
(bad)
jmp
aad
add
sub
add
and
add
jp
jae
add
push
jge
add
add
add
add
add
loopne
add
jge
add
add
add
test
add
push
sub
add
push
add
sub
add
push
add
int
add
sub
add
add
or
xor
add
add
add
add
jnp
add
add
add
sub
pop
adc
add
add
push
push
xchg
add
jnp
add
add
push
add
push
add
add
add
in
add
sub
add
xor
add
add
add
add
add
jnp
add
add
out
add
and
add
or
push
add
add
add
add
jnp
add
add
call
sub
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
and
add
pusha
jge
add
add
add
xor
add
add
add
add
add
and
add
or
jge
add
add
add
or
sbb
add
add
add
add
add
add
push
xor
jnp
add
add
pop
add
push
sub
sub
xor
add
add
add
add
add
jnp
add
add
jecxz
add
and
add
or
or
add
add
add
add
push
add
add
sub
xor
add
add
add
add
add
jnp
add
add
pop
sub
sbb
add
add
idiv
(bad)
call
sub
add
and
and
add
push
add
push
and
add
jp
jnp
add
add
add
outs
loop
add
sub
add
xor
push
add
add
adc
add
add
idiv
(bad)
call
sub
add
es
or
add
sub
sbb
add
(bad)
(bad)
inc
pop
or
sbb
inc
add
add
idiv
(bad)
jmp
aad
add
sub
add
jae
add
or
jnp
add
add
adc
add
add
add
jnp
add
add
outs
jmp
add
sub
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
jnp
add
add
outs
jmp
add
xor
add
add
add
add
add
add
add
add
and
adc
adc
data16
add
adc
add
add
jg
and
inc
add
add
idiv
(bad)
call
sub
add
and
add
sub
add
jae
add
or
jnp
add
add
adc
add
add
add
add
add
add
add
pop
pop
arpl
push
xor
sbb
add
add
(bad)
(bad)
dec
sbb
add
or
or
pusha
or
jnp
add
add
pop
sub
sbb
add
add
idiv
(bad)
inc
pop
and
pop
pop
pop
pop
pop
pop
pop
pop
pop
or
jnp
add
add
outs
push
add
push
add
add
add
pop
sub
sbb
add
add
(bad)
(bad)
inc
jnp
add
add
out
add
or
add
out
add
add
add
add
pop
adc
push
add
push
add
add
add
and
inc
add
push
add
push
add
adc
jnp
add
add
or
pusha
jge
add
add
jnp
add
add
add
outs
sbb
add
and
adc
dec
add
add
add
add
pop
jge
add
add
adc
dec
add
add
add
inc
add
add
idiv
(bad)
inc
jnp
add
add
push
cmp
add
add
jnp
add
add
jnp
add
add
pop
push
inc
push
inc
add
add
add
pop
push
inc
push
inc
outs
loope
add
sub
add
add
(bad)
(bad)
inc
jnp
add
add
adc
push
sbb
add
add
(bad)
(bad)
inc
add
xchg
add
adc
popa
sbb
add
add
(bad)
(bad)
inc
jnp
add
add
inc
sbb
add
add
(bad)
(bad)
call
add
add
add
adc
add
gs
sub
add
pop
or
add
push
adc
add
out
inc
add
add
idiv
(bad)
inc
pop
adc
add
add
sti
(bad)
(bad)
inc
jnp
add
add
sbb
out
(bad)
(bad)
inc
jnp
add
add
adc
add
add
add
add
cmp
inc
add
add
idiv
(bad)
inc
jnp
add
add
out
add
and
jnp
add
add
push
pop
adc
push
add
push
add
add
add
push
and
inc
add
push
add
push
add
push
jge
add
add
xchg
(bad)
(bad)
inc
add
add
or
or
add
add
add
add
push
add
add
sub
xor
add
add
add
add
add
jnp
add
add
sbb
inc
add
add
idiv
(bad)
call
sub
add
es
add
or
pop
jge
add
add
jnp
add
add
add
outs
in
add
sub
add
or
pop
add
add
add
add
sub
add
xor
mov
add
add
add
and
inc
add
sti
inc
add
aam
add
and
add
or
and
add
rol
or
pop
or
and
add
rol
or
pop
or
and
add
rol
or
pop
or
and
add
rol
or
pop
or
and
add
rol
or
sub
add
xor
add
add
sldt
adc
sub
add
push
add
jge
add
add
add
add
push
jge
add
add
jae
add
push
jge
add
add
and
add
add
jge
add
add
and
add
lea
add
jge
add
add
and
add
lea
add
jge
add
add
add
and
add
jge
add
add
add
add
xor
add
add
adc
sub
add
push
add
add
add
add
jnp
add
add
add
add
or
jnp
add
add
pop
inc
add
add
add
add
sldt
add
add
add
and
icebp
add
push
and
add
add
repnz
push
or
pop
add
add
repz
push
and
and
add
sub
add
and
add
jp
jnp
add
add
pop
add
push
sub
sbb
add
add
(bad)
(bad)
call
sub
add
or
ins
(bad)
(bad)
call
idiv
(bad)
dec
sub
adc
add
ret
add
add
adc
sub
add
add
(bad)
(bad)
call
sub
add
es
add
add
push
add
push
jae
add
or
push
das
adc
mov
add
and
add
jp
push
das
sbb
inc
add
add
idiv
(bad)
jmp
rol
add
push
jae
add
or
jnp
add
add
jnp
add
add
sbb
add
(bad)
(bad)
jmp
aad
add
sub
add
jae
add
or
add
xor
push
add
inc
add
add
idiv
(bad)
jmp
rol
add
push
and
add
jp
add
add
add
add
mov
push
jge
add
add
add
add
or
sldt
add
add
add
jnp
add
add
jnp
add
add
add
add
xor
add
add
add
jnp
add
add
add
outs
les
add
add
add
add
sub
add
(bad)
(bad)
call
sub
add
es
and
jle
add
dec
add
and
jle
add
or
add
add
jnp
add
add
jnp
add
add
sub
add
or
sub
add
push
add
add
sub
add
out
add
push
and
jnp
add
add
pop
jge
add
add
pop
pop
and
push
xor
sbb
add
(bad)
(bad)
inc
and
add
pop
jge
add
add
add
add
add
mov
add
add
adc
or
xchg
add
add
add
adc
jnp
add
add
test
push
add
add
add
rol
push
add
pop
and
add
jge
add
add
push
jge
add
add
push
push
mov
push
jge
add
add
sbb
add
add
or
or
add
push
popf
pop
pop
pop
or
and
add
xor
sbb
add
add
(bad)
(bad)
call
sub
add
es
or
or
add
push
popf
or
pop
or
and
add
xor
sbb
add
add
(bad)
(bad)
jmp
add
xor
add
add
add
add
add
add
add
rol
push
sub
xor
add
add
add
add
add
jnp
add
add
rol
push
and
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
adc
or
rol
add
sldt
adc
push
xor
sbb
add
add
(bad)
(bad)
call
sub
add
add
or
adc
aad
add
sub
add
and
add
jp
jle
add
add
xchg
jge
add
add
jle
add
add
xchg
jge
add
add
jle
add
add
xchg
jge
add
add
jle
add
add
xchg
jge
add
add
movs
add
add
xchg
add
add
add
pop
add
add
add
(bad)
(bad)
inc
jnp
add
add
push
inc
add
add
add
add
add
daa
add
add
jnp
add
add
jnp
add
add
cmp
inc
add
add
idiv
(bad)
inc
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
push
outs
stc
add
push
add
jnp
add
add
mov
add
sub
add
push
cmp
add
add
jnp
add
add
jnp
add
add
ret
add
idiv
(bad)
inc
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
push
outs
cli
add
push
add
jnp
add
add
mov
add
add
add
jnp
add
add
and
jnp
add
add
jnp
add
add
jnp
add
add
pop
xchg
and
add
add
cld
add
push
and
mov
add
jnp
add
add
cmp
add
(bad)
(bad)
inc
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
push
outs
cli
add
push
add
jnp
add
add
mov
add
push
jge
add
add
sbb
add
add
jle
add
add
xchg
jge
add
add
add
add
xor
add
add
sldt
adc
jnp
add
add
cli
inc
add
ret
add
inc
add
add
idiv
(bad)
call
sub
add
add
out
add
push
cmp
add
add
jnp
add
add
add
add
add
or
add
add
add
jnp
add
add
xor
sbb
add
add
idiv
(bad)
inc
jnp
add
add
jnp
add
add
or
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
push
sub
add
or
jnp
add
add
jnp
add
add
jnp
add
add
outs
les
add
add
add
pop
jge
add
add
and
add
push
jge
add
add
and
add
pop
jge
add
add
jnp
add
add
push
add
add
sbb
jnp
add
add
jnp
add
add
ds
(bad)
call
inc
add
add
idiv
(bad)
inc
jnp
add
add
xor
sbb
add
add
(bad)
(bad)
inc
sub
add
push
sub
xor
add
add
add
add
add
add
add
add
jnp
add
add
sbb
jnp
add
add
jnp
add
add
pop
xchg
popa
jge
add
add
add
adc
add
add
add
add
add
add
bound
jnp
add
add
jnp
add
add
pop
xchg
popa
and
jg
add
add
add
add
jnp
add
add
(bad)
jg
add
jnp
add
add
xchg
and
stos
add
add
add
add
add
popf
add
jge
add
add
and
inc
add
add
adc
push
add
add
add
add
add
add
add
add
mov
add
and
add
sub
add
or
and
add
add
lods
add
add
and
add
add
mov
add
and
add
add
mov
add
or
inc
add
add
add
xchg
and
inc
add
add
add
add
pop
and
add
das
push
sbb
add
add
(bad)
(bad)
call
sub
add
es
sub
pop
and
add
pop
push
or
and
add
xor
add
idiv
(bad)
call
or
add
add
add
xchg
and
inc
add
add
add
add
or
add
push
sub
or
add
popf
or
pop
or
and
add
xor
sbb
add
add
idiv
(bad)
jmp
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jnp
add
add
adc
jnp
add
add
sub
add
or
jnp
add
add
cli
jle
add
sub
add
or
jnp
add
add
add
add
pop
pop
pop
adc
add
add
add
add
pop
xchg
adc
add
add
add
add
adc
adc
add
pop
sbb
add
add
(bad)
(bad)
call
sub
add
es
sbb
pop
add
add
add
adc
inc
add
add
idiv
(bad)
inc
jnp
add
add
add
add
add
adc
inc
(bad)
add
add
add
(bad)
(bad)
inc
jnp
add
add
adc
adc
inc
mov
inc
add
add
idiv
(bad)
inc
jnp
add
add
xchg
add
add
add
xchg
inc
cdq
add
add
jnp
add
add
pop
pop
xchg
add
add
add
pop
pop
xchg
inc
add
add
inc
add
add
idiv
(bad)
inc
sbb
or
sbb
add
add
add
pop
pop
and
mov
add
or
pop
and
pop
add
add
inc
add
add
idiv
(bad)
inc
jnp
add
add
pop
pop
and
mov
add
or
pop
and
fiadd
add
sbb
add
add
(bad)
(bad)
inc
jnp
add
add
pop
pop
and
mov
add
or
pop
and
mov
add
sbb
add
add
idiv
(bad)
inc
jnp
add
add
pop
pop
and
mov
add
or
pop
and
mov
add
add
add
add
pop
pop
and
mov
add
or
pop
and
jo
inc
add
add
idiv
(bad)
inc
jnp
add
add
pop
pop
and
mov
add
or
pop
and
dec
add
add
add
pop
pop
and
mov
add
or
pop
and
add
add
add
pop
pop
and
mov
add
or
pop
and
adc
add
(bad)
(bad)
dec
adc
aas
(bad)
(bad)
dec
adc
cmp
add
add
add
adc
add
add
add
adc
pop
sbb
add
add
(bad)
(bad)
inc
jnp
add
add
add
pop
xchg
adc
add
add
add
add
adc
add
add
add
or
and
jg
add
and
inc
add
dec
add
adc
xor
sbb
add
(bad)
(bad)
inc
pop
pop
and
(bad)
call
inc
add
add
idiv
(bad)
inc
adc
add
aam
add
and
add
jnp
add
add
inc
inc
sub
xor
add
add
add
add
add
add
sub
and
add
jnp
add
add
jge
add
add
push
jge
add
add
jnp
add
add
jnp
add
add
or
jle
add
add
xor
add
idiv
(bad)
call
sub
add
add
add
add
add
sbb
add
add
idiv
(bad)
inc
and
jle
add
add
sub
add
push
jle
add
add
adc
inc
add
add
idiv
(bad)
(bad)
jle
add
add
push
or
jnp
add
add
jnp
add
add
jnp
add
add
pop
outs
stc
add
push
add
add
pop
jge
add
add
push
inc
sub
sub
xor
add
add
adc
jnp
add
add
push
add
add
add
add
inc
add
add
idiv
(bad)
call
sub
add
add
dec
add
add
inc
add
add
idiv
(bad)
call
sub
jnp
add
add
cmp
add
idiv
(bad)
inc
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
add
cli
add
push
add
jnp
add
add
mov
add
sub
jnp
add
add
cli
inc
add
adc
inc
add
add
idiv
(bad)
inc
sub
add
push
add
add
add
aas
add
add
inc
add
add
idiv
(bad)
inc
sub
add
push
and
adc
inc
add
add
idiv
(bad)
inc
jnp
add
add
cmp
add
add
inc
add
add
idiv
(bad)
inc
jnp
add
add
pop
and
jle
add
add
sub
add
push
and
add
add
add
add
jnp
add
add
jnp
add
add
add
add
add
std
add
push
and
jnp
add
add
jnp
add
add
jge
add
add
jnp
add
add
jnp
add
add
pop
sbb
add
(bad)
(bad)
inc
jnp
add
add
xor
adc
add
add
pop
jge
add
add
sub
add
push
add
add
pop
and
add
push
xor
sbb
add
add
(bad)
(bad)
inc
and
add
pop
jge
add
add
and
and
add
jnp
add
add
jge
add
add
jnp
add
add
xor
add
in
add
push
add
jge
add
add
sub
add
add
(bad)
(bad)
(bad)
cmp
jnp
add
add
jnp
add
add
jnp
add
add
and
add
add
cld
add
push
and
jnp
add
add
pop
jge
add
add
and
add
pop
jge
add
add
jnp
add
add
sti
add
push
and
inc
add
add
idiv
(bad)
inc
adc
add
idiv
(bad)
inc
jnp
add
add
inc
sub
push
or
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
or
add
push
add
jnp
add
add
mov
add
push
inc
sub
jnp
add
add
push
add
add
std
(bad)
call
add
(bad)
(bad)
inc
cmp
inc
add
add
idiv
(bad)
call
sub
adc
adc
sub
add
add
adc
jnp
add
add
push
add
add
add
add
cmp
add
add
sub
jnp
add
add
add
add
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
sub
add
idiv
(bad)
inc
jnp
add
add
jnp
add
add
jnp
add
add
pop
xchg
and
add
add
cld
add
push
and
jge
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
add
cli
add
push
add
jnp
add
add
mov
add
sub
jnp
add
add
cli
inc
add
push
add
out
add
push
add
add
add
add
add
add
add
add
add
aas
cdq
add
add
inc
add
add
idiv
(bad)
inc
sub
add
push
or
jnp
add
add
cmp
add
cmp
add
sbb
add
add
(bad)
(bad)
inc
jnp
add
add
pop
and
jle
add
pop
pop
inc
add
add
idiv
(bad)
inc
or
lock
push
sub
add
add
add
xor
inc
add
add
idiv
(bad)
inc
jnp
add
add
cs
add
add
add
xor
add
idiv
(bad)
inc
jnp
add
add
jnp
add
add
and
adc
add
pop
add
jge
add
add
sbb
cmps
add
add
inc
add
add
idiv
(bad)
inc
jnp
add
add
cmp
sbb
add
(bad)
(bad)
inc
jnp
add
add
jnp
add
add
pop
push
pop
pop
outs
std
add
push
es
sbb
add
add
pop
jge
add
add
and
add
pop
jge
add
add
jnp
add
add
xor
sbb
add
add
(bad)
(bad)
inc
sub
add
push
and
pop
and
add
add
pop
jge
add
add
and
add
pop
jge
add
add
push
jge
add
add
sbb
add
add
push
add
add
add
sub
inc
add
add
idiv
(bad)
inc
jnp
add
add
jnp
add
add
jnp
add
add
pop
xchg
and
add
add
cld
add
push
add
jge
add
add
and
add
pop
jge
add
add
and
add
pop
jge
add
add
jnp
add
add
sti
add
push
and
add
sbb
add
add
(bad)
(bad)
inc
jnp
add
add
jnp
add
add
or
add
push
sbb
add
add
(bad)
(bad)
dec
pop
pop
or
inc
add
add
idiv
(bad)
inc
jnp
add
add
or
jnp
add
add
inc
sub
push
adc
jnp
add
add
jnp
add
add
jnp
add
add
adc
cli
add
push
add
add
pop
jge
add
add
add
inc
sub
jnp
add
add
push
add
add
std
(bad)
call
inc
add
add
idiv
(bad)
inc
cmp
cld
(bad)
call
inc
add
add
idiv
(bad)
call
sub
xor
add
add
adc
adc
and
add
rol
or
pop
adc
and
add
rol
or
and
add
add
or
add
push
add
add
or
add
or
push
jle
add
add
pop
xor
pop
push
bound
inc
add
popf
jle
add
add
and
pushf
push
and
ficomp
inc
add
add
idiv
(bad)
call
sub
add
sub
retf
add
add
and
add
add
pop
sbb
add
and
add
add
and
or
add
aam
inc
add
add
idiv
(bad)
jmp
and
retf
add
add
and
(bad)
(bad)
inc
pop
pop
or
inc
add
and
add
add
and
pushf
push
and
add
add
aam
inc
add
add
idiv
(bad)
jmp
push
jle
add
add
pop
test
pop
push
bound
inc
add
popf
jle
add
add
and
pushf
push
and
add
add
ficomp
inc
add
add
idiv
(bad)
call
push
lea
add
or
add
push
lea
add
or
add
or
push
jle
add
add
push
pop
or
inc
add
and
add
add
sbb
pop
push
xor
sub
adc
or
add
add
add
add
sub
add
add
add
add
push
add
add
add
add
pop
(bad)
add
add
jge
add
add
add
push
pop
pop
(bad)
add
add
jge
add
add
add
adc
sbb
push
jge
add
add
and
inc
add
lea
add
jge
add
add
and
inc
add
lea
add
jge
add
add
add
xor
add
add
add
add
add
push
jge
add
add
push
jge
add
add
jnp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
xor
add
add
add
add
adc
jnp
add
add
push
add
push
add
add
add
push
add
push
add
add
add
push
add
push
add
add
add
jnp
add
add
fiadd
add
add
add
pop
sbb
add
push
add
add
add
jnp
add
add
fiadd
add
pop
sbb
add
push
add
add
add
sbb
outs
adc
or
and
jnp
add
add
jnp
add
add
fadd
add
leave
add
add
xchg
xchg
sbb
add
push
push
pop
pop
or
add
fst
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
jnp
add
add
or
add
add
add
add
jnp
add
add
or
add
sub
adc
or
std
add
add
add
adc
or
iret
add
add
jnp
add
add
xchg
and
add
add
add
add
add
xchg
or
and
popf
add
add
inc
add
add
idiv
(bad)
call
sub
add
es
sub
add
push
and
rol
add
outs
add
add
or
add
sbb
add
add
xor
sbb
add
(bad)
(bad)
call
add
xor
add
add
add
pop
adc
pop
pop
bound
pop
pop
adc
adc
sub
add
push
and
jnp
add
add
add
push
adc
adc
add
xor
add
add
add
pop
adc
pop
pop
bound
pop
pop
adc
adc
or
jnp
add
add
outs
add
add
push
pop
pop
or
add
add
add
and
inc
add
add
idiv
(bad)
inc
jnp
add
add
add
add
outs
add
add
sub
add
adc
push
add
add
add
add
add
add
add
add
add
sub
pop
sbb
add
push
add
add
add
adc
add
add
add
add
outs
adc
add
add
add
add
outs
adc
add
add
add
add
add
outs
adc
add
add
test
push
sub
add
adc
sbb
adc
add
xor
add
add
add
add
xlat
add
add
add
add
(bad)
jne
add
and
push
add
add
add
pop
add
push
add
add
add
pop
add
push
add
add
add
jnp
add
add
or
add
add
add
add
jnp
add
add
or
add
add
add
add
pop
add
push
sbb
pop
adc
sub
add
add
add
fadd
add
leave
add
add
xchg
xchg
push
xor
pop
inc
add
add
idiv
(bad)
call
sub
add
es
pop
pop
or
pop
pop
or
push
xor
pop
push
push
sbb
add
add
add
or
add
and
rol
add
or
add
and
rol
add
or
add
and
(bad)
add
add
or
jnp
add
add
push
adc
and
add
add
add
xlat
add
add
add
jle
add
add
add
pop
pop
or
adc
add
push
add
add
xlat
sbb
add
(bad)
(bad)
call
adc
jnp
add
add
xlat
add
add
add
add
add
adc
adc
sbb
add
add
(bad)
(bad)
dec
or
add
or
push
xor
sbb
add
(bad)
(bad)
inc
arpl
push
sbb
add
add
(bad)
(bad)
inc
add
add
push
sub
or
popa
pop
inc
add
add
idiv
(bad)
inc
jnp
add
add
push
add
or
add
idiv
(bad)
call
sub
pop
pop
sbb
add
push
add
add
add
retf
add
add
int3
add
add
add
jnp
add
add
int
add
into
add
add
add
sub
add
push
add
test
push
sub
jnp
add
add
push
add
or
add
idiv
(bad)
call
sub
pop
pop
sbb
add
push
add
sub
add
push
add
clc
add
push
add
test
push
sub
add
add
or
adc
add
add
add
add
add
add
add
add
add
inc
sub
add
adc
push
add
add
sldt
adc
jnp
add
add
jnp
add
add
popf
add
add
add
and
add
or
pop
jge
add
add
add
pushf
add
add
add
xlat
add
add
(bad)
jne
add
and
push
add
sti
add
push
and
push
add
add
add
add
adc
jnp
add
add
jnp
add
add
push
add
add
and
add
or
pop
jge
add
add
add
pop
rcr
add
push
and
rol
add
xlat
add
add
(bad)
jne
add
and
push
pop
and
add
add
cmp
inc
add
add
idiv
(bad)
call
sub
add
es
and
and
inc
add
add
idiv
(bad)
inc
and
add
and
sbb
jge
add
add
pop
pop
sub
add
push
and
rol
add
xlat
add
add
(bad)
jne
add
and
push
or
xor
inc
add
add
idiv
(bad)
inc
and
add
sbb
pop
pop
jge
add
add
sub
add
push
and
xor
add
add
add
add
add
add
add
pop
maxps
retf
add
sbb
maxps
retf
add
push
arpl
maxps
retf
add
pop
or
xchg
pusha
push
add
add
sldt
adc
and
add
add
sbb
inc
add
add
idiv
(bad)
call
sub
add
and
and
add
add
sub
push
sbb
add
arpl
or
add
push
das
icebp
push
add
adc
add
sub
add
sldt
adc
or
or
sbb
add
arpl
or
add
sbb
icebp
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
add
add
or
add
add
add
add
sub
add
add
add
add
add
push
add
fld
add
add
jne
add
jge
add
add
push
add
add
add
add
add
add
adc
add
sub
add
sldt
adc
or
or
add
push
popf
push
pop
pop
or
add
add
add
imul
fild
add
adc
fadd
add
add
xor
add
add
add
add
add
jnp
add
add
iret
add
add
jnp
add
add
xchg
and
inc
add
jnp
add
add
xchg
outs
adc
add
xor
add
add
add
pop
or
or
adc
jnp
add
add
xchg
sub
push
or
pop
pop
or
add
add
add
imul
add
add
(bad)
(bad)
call
sub
add
es
sub
add
add
(bad)
(bad)
jmp
and
add
push
add
push
and
add
jp
add
or
sldt
add
add
add
add
add
add
add
fadd
add
add
xor
add
add
adc
jnp
add
add
imul
add
or
or
add
add
add
imul
add
or
sbb
or
sahf
pop
add
add
add
xchg
pop
invd
pop
pop
pop
pop
bound
or
pop
or
add
add
add
fcom
or
fadd
add
xchg
adc
add
xor
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
add
push
adc
pop
xchg
sub
add
push
popf
push
adc
pop
(bad)
add
add
adc
pop
pop
pop
bound
or
pop
or
add
add
cmps
sbb
add
(bad)
(bad)
jmp
add
xor
add
add
test
add
add
add
add
imul
add
or
or
or
jne
add
add
add
add
add
adc
sbb
add
add
idiv
(bad)
call
sub
add
or
push
sub
adc
pop
adc
xchg
sahf
adc
adc
adc
push
xor
sbb
add
add
(bad)
(bad)
inc
jnp
add
add
adc
pop
pop
sbb
adc
xchg
xchg
adc
add
add
idiv
(bad)
inc
adc
adc
adc
adc
add
xor
add
idiv
(bad)
jmp
and
sbb
or
add
idiv
(bad)
call
sub
or
and
or
sbb
add
add
idiv
(bad)
inc
or
pop
add
add
add
rol
add
and
add
adc
sbb
pop
sbb
add
add
or
or
pop
lea
add
adc
adc
adc
adc
or
or
adc
adc
sbb
or
sahf
adc
adc
add
push
xchg
push
bound
or
pop
adc
(bad)
sbb
add
add
(bad)
(bad)
inc
push
xchg
adc
pop
or
pop
and
push
adc
pop
adc
sub
or
and
or
adc
xchg
xchg
adc
pop
adc
pop
pop
xchg
xchg
xor
sbb
add
add
(bad)
(bad)
call
adc
pop
adc
pop
adc
pop
adc
xchg
sahf
adc
adc
adc
sbb
pop
adc
adc
or
mov
add
idiv
(bad)
call
or
adc
adc
pop
adc
xchg
sahf
adc
and
sbb
add
add
(bad)
(bad)
call
or
adc
pop
pop
sbb
adc
xchg
xchg
adc
xor
sbb
add
add
(bad)
(bad)
inc
adc
adc
sahf
pop
push
xchg
adc
or
pop
pop
adc
adc
or
adc
pop
adc
sahf
adc
sbb
adc
pop
adc
adc
adc
xchg
and
add
add
or
adc
and
add
add
aam
add
and
or
adc
or
sete
or
adc
pop
adc
adc
sahf
push
adc
pop
adc
sub
adc
pop
or
sub
inc
add
add
idiv
(bad)
call
or
adc
xchg
xchg
adc
pop
adc
pop
pop
xchg
xchg
xor
sbb
add
add
(bad)
(bad)
call
adc
pop
adc
pop
adc
pop
adc
xchg
sahf
adc
adc
adc
sbb
pop
adc
adc
or
mov
inc
add
add
idiv
(bad)
jmp
or
adc
pop
adc
xchg
sahf
adc
and
sbb
inc
add
add
idiv
(bad)
call
or
adc
pop
pop
sbb
adc
xchg
xchg
adc
xor
pop
adc
adc
sahf
or
cmp
sbb
add
add
idiv
(bad)
inc
push
xchg
adc
mov
pop
pop
pop
cs
inc
add
add
idiv
(bad)
jmp
das
inc
add
sub
add
and
add
jp
adc
sub
add
push
sub
xor
add
add
adc
or
or
sbb
add
add
add
xchg
add
add
add
xchg
pop
pop
or
pop
pop
or
add
add
add
imul
adc
add
adc
add
xor
add
adc
icebp
add
add
or
jnp
add
add
xchg
or
mov
add
adc
adc
add
adc
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
add
(bad)
jne
add
and
push
push
or
or
pop
pop
or
pop
pop
pop
pop
or
pop
pop
and
sub
inc
add
add
idiv
(bad)
inc
add
add
add
adc
add
idiv
(bad)
inc
add
add
add
xchg
cs
or
add
xlat
add
add
(bad)
jne
add
and
push
sub
add
add
add
adc
and
push
sub
or
or
pop
sbb
add
add
(bad)
(bad)
inc
jnp
add
add
adc
and
push
sub
add
add
add
adc
and
push
pop
add
add
add
add
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
add
xor
add
add
adc
xor
or
jnp
add
add
xchg
or
inc
add
add
idiv
(bad)
call
sub
add
and
add
adc
add
adc
pop
inc
add
add
idiv
(bad)
inc
or
add
push
push
or
or
pop
pop
or
pop
pop
pop
pop
or
pop
pop
and
xor
add
(bad)
(bad)
inc
add
add
add
pop
sbb
add
add
(bad)
(bad)
inc
add
add
add
xchg
cs
sbb
add
add
idiv
(bad)
dec
adc
add
add
idiv
(bad)
jmp
pop
add
outs
add
add
or
xor
sbb
add
(bad)
(bad)
(bad)
cmp
add
push
sub
pop
inc
add
add
idiv
(bad)
inc
pop
adc
add
push
add
add
add
iret
add
add
sbb
outs
adc
dec
or
or
sub
inc
add
add
idiv
(bad)
inc
pop
adc
add
push
add
add
add
iret
add
add
sbb
outs
adc
sbb
add
add
add
add
add
iret
add
add
pop
or
outs
adc
add
add
add
mov
inc
add
add
idiv
(bad)
jmp
add
add
xor
add
add
add
add
add
add
imul
add
mov
pop
or
pop
pop
sbb
push
or
or
fadd
add
push
sahf
or
pop
or
add
add
jmp
idiv
(bad)
call
sub
add
es
lea
add
adc
add
pop
pop
push
sahf
push
pop
pop
adc
add
sbb
add
adc
add
add
idiv
(bad)
call
add
add
push
adc
add
add
add
push
sbb
add
add
(bad)
(bad)
inc
jnp
add
add
push
or
pop
or
add
sbb
add
add
adc
adc
and
pop
sahf
sub
adc
add
jnp
add
add
or
pop
(bad)
add
add
add
add
add
sbb
add
adc
add
adc
(bad)
call
inc
add
add
idiv
(bad)
dec
sub
add
add
(bad)
(bad)
jmp
add
add
add
pop
adc
add
add
add
or
pop
and
lock
add
add
or
and
add
add
add
or
pop
and
add
add
or
add
add
add
pop
adc
pop
pop
pop
pop
bound
or
xor
sbb
add
add
(bad)
(bad)
call
or
jnp
add
add
pop
xor
add
idiv
(bad)
dec
push
xor
add
jnp
add
add
pop
(bad)
add
add
add
add
add
jnp
add
add
pop
(bad)
add
add
sbb
pop
adc
add
add
add
or
pop
add
add
add
or
pop
xchg
adc
xor
add
or
xchg
pop
adc
pop
xchg
adc
add
add
idiv
(bad)
inc
jnp
add
add
adc
pushf
adc
pop
adc
or
xor
sbb
add
(bad)
(bad)
call
or
pop
adc
adc
sub
or
or
add
add
add
add
add
add
sub
add
or
adc
add
add
add
add
and
add
jge
add
add
add
xor
add
add
add
add
adc
add
push
and
add
and
add
jge
add
add
add
adc
add
add
add
adc
jnp
add
add
and
add
or
pop
jge
add
add
add
pushf
sub
adc
add
add
add
adc
jnp
add
add
and
add
or
pop
jge
add
add
add
pushf
add
add
add
and
add
or
pop
jge
add
add
add
arpl
pushf
sub
adc
add
add
add
add
add
add
and
add
or
pop
jge
add
add
add
pushf
add
add
add
and
add
or
pop
jge
add
add
add
arpl
pushf
add
add
add
and
add
or
pop
jge
add
add
add
adc
pushf
add
add
add
and
add
or
add
add
add
sbb
pushf
sub
add
add
or
and
add
add
add
add
jnp
add
add
jnp
add
add
sub
add
or
and
add
pop
jge
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
adc
jnp
add
add
xor
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
and
add
or
pop
jge
add
add
add
add
add
pushf
add
add
add
xor
pop
inc
add
add
idiv
(bad)
inc
jnp
add
add
and
add
or
pop
jge
add
add
add
add
add
rcr
add
push
jge
add
add
add
adc
push
add
add
adc
and
add
add
add
add
pop
pop
bound
loop
add
and
add
pop
jge
add
add
jnp
add
add
adc
jno
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
and
add
or
pop
jge
add
add
add
add
add
pushf
add
add
add
and
add
or
pop
jge
add
add
add
add
add
rcr
add
adc
add
add
and
add
adc
jecxz
add
add
adc
add
add
add
adc
jnp
add
add
and
add
or
pop
jge
add
add
add
arpl
pushf
add
add
add
and
add
or
pop
jge
add
add
add
pushf
sub
add
or
or
add
add
add
add
add
add
inc
sub
add
xor
add
add
add
add
adc
jnp
add
add
xor
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
and
add
or
pop
jge
add
add
add
add
add
pushf
add
add
fs
add
add
and
add
pop
jge
add
add
add
add
add
jnp
add
add
xor
sbb
add
add
(bad)
(bad)
inc
jnp
add
add
jnp
add
add
dec
add
add
add
add
jnp
add
add
add
sub
add
or
push
jge
add
add
push
jge
add
add
and
jnp
add
add
jnp
add
add
add
sub
add
or
and
add
pop
jge
add
add
sub
add
xor
add
add
add
jnp
add
add
jnp
add
add
lea
add
or
jnp
add
add
jnp
add
add
push
push
mov
aad
add
add
jge
add
add
push
jge
add
add
sub
add
add
or
or
add
add
add
add
add
add
sub
add
or
or
add
add
add
add
sub
add
sub
add
and
add
add
add
jae
add
push
jge
add
add
jae
add
push
jge
add
add
jae
add
push
jge
add
add
add
sbb
add
add
add
add
xor
pop
add
add
add
add
sbb
add
add
rol
or
pop
sbb
add
add
rol
or
pop
push
lea
add
and
add
rol
or
pop
push
lea
add
and
add
rol
or
sub
add
adc
pop
add
add
add
add
add
jnp
add
add
add
sub
sbb
add
add
push
push
std
add
add
push
push
cld
add
add
jnp
add
add
enter
add
add
add
mov
adc
add
add
adc
add
add
adc
add
add
push
jge
add
add
jnp
add
add
rol
push
sub
xor
add
add
adc
jnp
add
add
adc
add
push
and
das
adc
add
idiv
(bad)
call
sub
add
es
sub
jnp
add
add
adc
add
push
push
push
bound
push
arpl
(bad)
inc
add
push
pop
pop
pop
sub
sbb
add
add
(bad)
(bad)
jmp
cmps
and
add
push
add
push
and
add
jp
and
sldt
pop
and
or
add
sbb
inc
add
add
idiv
(bad)
jmp
(bad)
and
add
push
add
push
and
add
jp
pop
and
or
sbb
add
add
lar
jge
add
add
pop
and
add
add
sub
xor
add
add
sldt
adc
push
add
add
add
outs
rol
push
or
push
das
adc
add
idiv
(bad)
call
sub
add
es
sub
jnp
add
add
outs
rol
push
add
jnp
add
add
bound
pusha
jge
add
add
and
add
pop
jge
add
add
jnp
add
add
xor
add
idiv
(bad)
call
sub
sbb
push
add
add
xchg
add
add
add
add
mov
or
xor
add
add
add
add
pop
sbb
add
pop
add
add
add
add
add
add
add
cmp
add
add
jnp
add
add
outs
mov
add
push
pop
pop
and
add
das
add
sub
jnp
add
add
jnp
add
add
cmp
add
and
add
(bad)
call
leave
sbb
add
add
idiv
(bad)
call
sub
add
or
add
add
das
xor
add
(bad)
(bad)
dec
push
das
or
inc
add
add
idiv
(bad)
call
sub
adc
add
add
adc
add
add
sbb
add
add
sub
jle
add
add
and
add
add
jge
add
add
jle
add
add
and
add
add
jge
add
add
adc
and
and
add
push
add
push
jae
add
push
jp
jnp
add
add
xor
add
add
idiv
(bad)
inc
push
jge
add
add
jnp
add
add
jnp
add
add
rol
push
and
das
or
inc
add
add
idiv
(bad)
call
sub
jnp
add
add
jnp
add
add
rol
push
add
add
pop
jge
add
add
pop
or
add
add
jnp
add
add
jnp
add
add
cmp
add
and
das
or
inc
add
add
idiv
(bad)
call
sub
jle
add
add
xchg
jge
add
add
jle
add
add
xchg
jge
add
add
adc
and
and
add
push
add
push
and
add
jp
jnp
add
add
xor
inc
add
add
idiv
(bad)
inc
pop
or
add
add
jnp
add
add
jnp
add
add
rol
push
and
add
das
or
inc
add
add
idiv
(bad)
call
sub
jnp
add
add
jnp
add
add
rol
push
add
add
add
jge
add
add
jnp
add
add
jnp
add
add
jnp
add
add
mov
add
add
add
or
sbb
add
adc
and
add
push
add
push
and
add
jp
and
add
add
std
(bad)
call
inc
add
add
idiv
(bad)
call
sub
add
sbb
add
add
adc
add
add
add
cwde
add
sub
add
adc
or
rol
add
xchg
add
sub
jnp
add
add
outs
rol
push
or
push
das
adc
add
idiv
(bad)
call
sub
add
es
sub
jnp
add
add
outs
rol
push
add
jnp
add
add
bound
pusha
jge
add
add
and
add
pop
jge
add
add
jnp
add
add
xor
add
rol
push
and
test
add
push
sbb
or
push
and
push
add
push
and
add
add
add
rol
push
and
add
add
and
add
push
add
push
and
add
add
add
add
add
add
and
add
jp
pop
or
cmc
add
add
sub
add
xor
add
add
adc
jnp
add
add
push
inc
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
pop
add
push
and
and
add
and
and
add
and
sti
add
add
inc
add
add
add
sbb
add
idiv
(bad)
call
sub
add
add
or
cmc
add
add
sub
jnp
add
add
lds
add
add
and
add
add
pop
or
add
add
sub
jnp
add
add
outs
rol
push
and
das
or
inc
add
add
idiv
(bad)
call
sub
jnp
add
add
outs
rol
push
pop
pop
pop
sub
add
jge
add
add
pop
arpl
inc
add
add
add
add
push
add
add
inc
add
add
add
lds
add
add
jge
add
add
push
add
add
add
add
add
jle
add
add
add
add
sbb
add
xor
jae
add
push
jge
add
add
sbb
cmc
add
add
pop
and
and
add
push
add
push
and
add
add
sub
es
add
push
jp
sub
add
add
add
adc
add
push
and
cli
add
add
push
das
or
inc
add
add
idiv
(bad)
call
sub
jnp
add
add
adc
add
push
add
jge
add
add
jnp
add
add
adc
add
push
and
add
das
add
sub
jnp
add
add
adc
add
push
adc
jnp
add
add
(bad)
inc
add
sbb
inc
add
add
idiv
(bad)
jmp
sti
and
add
push
add
push
jae
add
push
jp
sbb
add
add
jnp
add
add
jnp
add
add
jnp
add
add
mov
adc
add
add
add
add
jnp
add
add
adc
inc
add
add
idiv
(bad)
inc
sbb
add
add
sub
jnp
add
add
mov
push
and
sub
jnp
add
add
jnp
add
add
xor
add
sub
add
add
(bad)
(bad)
call
sub
add
add
add
xor
add
and
add
add
add
add
xor
es
add
add
sbb
add
sub
add
push
and
and
and
add
push
add
push
and
add
jp
add
xor
add
add
add
add
add
push
add
add
sub
xor
add
add
add
add
add
sub
add
add
(bad)
(bad)
call
sub
add
es
add
add
push
add
push
and
add
jp
push
das
adc
addr16
add
push
add
push
jae
add
or
push
das
adc
rol
add
push
jae
add
or
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
jb
add
sub
add
and
add
jp
jnp
add
add
add
outs
les
add
add
add
add
rol
push
and
test
add
sbb
inc
add
add
idiv
(bad)
jmp
mov
push
add
push
jae
add
push
jp
jnp
add
add
rol
push
add
add
add
add
outs
mov
sbb
add
add
add
add
xor
add
add
add
add
add
push
add
add
sub
xor
add
add
add
add
add
jnp
add
add
add
outs
leave
add
push
add
add
push
jge
add
add
add
add
or
add
add
add
add
sub
add
add
(bad)
(bad)
call
sub
add
es
add
add
push
add
push
and
add
jp
add
add
add
and
adc
or
jo
add
sub
add
add
add
add
(bad)
(bad)
call
sub
add
es
add
add
push
add
push
and
add
jp
push
das
sbb
add
add
(bad)
(bad)
jmp
rol
add
push
and
and
add
push
add
push
and
add
jp
push
das
sbb
add
add
(bad)
(bad)
jmp
mov
add
and
and
add
push
add
push
and
add
jp
add
xor
and
and
add
push
and
add
jp
sub
add
add
(bad)
(bad)
inc
sub
add
sub
add
add
(bad)
(bad)
inc
sub
add
push
and
push
or
jnp
add
add
or
pop
add
add
add
add
outs
mov
or
push
xor
inc
add
add
idiv
(bad)
inc
jnp
add
add
add
outs
les
add
add
pop
dec
add
push
pop
pop
or
and
add
push
jge
add
add
pop
pop
dec
add
add
add
add
idiv
(bad)
inc
sub
sub
add
push
and
inc
add
add
idiv
(bad)
inc
jnp
add
add
mov
es
xor
sbb
add
add
(bad)
(bad)
inc
jnp
add
add
or
(bad)
(bad)
call
inc
add
add
idiv
(bad)
inc
sub
xor
add
add
add
add
add
jnp
add
add
mov
push
and
add
or
sub
add
add
add
add
add
add
xor
add
idiv
(bad)
call
sub
add
add
add
add
inc
sub
sub
xor
add
add
add
add
add
jnp
add
add
or
and
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
mov
es
inc
sub
sub
xor
add
add
add
add
add
sub
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
rol
push
and
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
sub
add
push
push
sub
add
or
or
add
add
add
add
add
add
les
add
sub
xor
add
add
add
add
add
sub
add
xor
inc
add
add
add
add
lea
add
and
add
rol
or
sbb
and
add
rol
or
pop
adc
and
add
rol
or
sub
xor
add
add
add
jnp
add
add
push
inc
push
add
add
add
add
add
test
add
add
add
add
fld
add
outs
rol
push
and
add
jnp
add
add
das
adc
add
idiv
(bad)
call
sub
add
es
sub
and
add
add
add
pop
jge
add
add
sbb
add
push
add
jge
add
add
add
outs
rol
push
and
add
jnp
add
add
das
add
sub
and
add
pop
jge
add
add
sbb
add
push
add
jnp
add
add
jnp
add
add
jge
add
add
add
add
add
inc
add
add
add
add
sbb
add
add
add
outs
rol
push
and
add
jnp
add
add
das
or
inc
add
add
idiv
(bad)
call
sub
and
add
pop
jge
add
add
sbb
add
push
add
adc
jge
add
add
push
jge
add
add
sbb
add
add
cmp
sbb
add
push
and
das
add
sub
sbb
add
push
add
add
add
or
jnp
add
add
pop
rcr
add
pop
jge
add
add
jnp
add
add
jnp
add
add
mov
add
idiv
(bad)
inc
add
add
add
aaa
add
push
jge
add
add
adc
push
add
add
push
jge
add
add
sbb
add
add
aas
add
add
add
and
add
or
pop
jge
add
add
add
shl
add
add
add
add
add
add
jnp
add
add
or
inc
add
add
idiv
(bad)
call
sub
jnp
add
add
outs
cmp
add
and
lock
sub
sbb
add
(bad)
(bad)
dec
push
das
or
inc
add
add
idiv
(bad)
call
sub
pop
adc
adc
inc
add
add
idiv
(bad)
inc
push
jge
add
add
sbb
jnp
add
add
adc
inc
add
add
idiv
(bad)
push
add
push
jp
or
adc
push
add
add
sbb
add
add
or
add
jnp
add
add
adc
rol
push
and
push
push
das
add
sub
adc
push
adc
jle
add
add
jnp
add
add
pop
adc
add
add
add
push
pop
add
add
add
xor
inc
add
add
idiv
(bad)
push
add
push
jp
jnp
add
add
and
add
adc
pop
pop
jge
add
add
pop
add
add
add
adc
and
push
xor
sbb
add
add
(bad)
(bad)
inc
jnp
add
add
jnp
add
add
or
inc
add
add
idiv
(bad)
call
sub
sbb
add
add
(bad)
cld
(bad)
inc
add
xor
add
add
add
jnp
add
add
inc
add
add
add
add
add
push
push
add
add
add
aad
add
push
jae
add
push
sub
adc
push
add
add
cmp
jnp
add
add
inc
add
add
add
add
add
jnp
add
add
push
add
add
add
aad
add
push
jae
add
push
sub
xor
add
add
and
add
add
or
or
or
pop
and
pushf
pop
and
lock
inc
add
add
idiv
(bad)
call
sub
add
sub
push
pop
and
or
add
out
sbb
add
add
(bad)
(bad)
jmp
or
pop
and
pushf
pop
and
add
add
lock
push
pop
and
pushf
pop
and
add
add
lock
add
add
(bad)
(bad)
inc
jae
add
push
sbb
add
and
or
or
or
pop
and
pushf
pop
pop
and
repz
add
add
(bad)
(bad)
inc
jae
add
push
sbb
add
adc
and
add
sub
add
and
add
jp
add
add
add
add
mov
add
add
xor
add
add
add
add
add
sub
add
cmp
add
sub
add
xor
add
add
add
adc
or
adc
or
or
sub
or
pop
sbb
add
(bad)
(bad)
call
sub
add
es
or
and
or
pop
or
add
inc
add
add
idiv
(bad)
call
adc
add
add
adc
dec
pop
adc
adc
adc
adc
xchg
pop
adc
push
pop
pop
pop
pop
bound
add
push
pop
or
sub
adc
xchg
and
adc
adc
cmp
add
or
add
pop
pop
adc
push
pop
pop
pop
pop
arpl
add
adc
adc
pop
rdtsc
lods
sbb
add
add
(bad)
(bad)
inc
adc
add
add
add
add
add
adc
pop
movlps
sub
and
adc
adc
adc
xchg
pop
adc
or
pop
pop
bound
add
add
cmp
add
or
or
or
sbb
add
or
push
and
sbb
or
popf
adc
pop
adc
pop
or
pop
pop
bound
or
or
add
or
xor
sbb
add
add
(bad)
(bad)
call
or
pop
adc
adc
pop
or
xchg
inc
add
add
idiv
(bad)
call
adc
cmp
add
add
adc
xchg
adc
adc
cmp
adc
xchg
adc
add
inc
add
and
nop
xor
sbb
add
add
idiv
(bad)
inc
jnp
add
add
adc
push
sbb
punpcklbw
adc
pop
adc
pop
pop
pop
bound
adc
adc
add
add
xor
sub
jnp
add
add
adc
inc
add
pop
xchg
adc
pop
adc
pop
maxps
pop
pop
bound
adc
adc
arpl
adc
jnp
add
add
adc
adc
or
adc
sbb
punpcklbw
adc
pop
adc
pop
pop
pop
bound
adc
adc
adc
xlat
sbb
add
add
(bad)
(bad)
inc
adc
adc
pop
adc
mulps
pop
pop
bound
adc
pop
pop
adc
adc
add
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
adc
adc
adc
add
xor
add
add
or
add
push
and
aas
mov
add
pop
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
xchg
and
add
pop
maxps
add
push
pop
sbb
pop
sbb
or
pop
maxps
add
push
and
xor
sbb
add
add
(bad)
(bad)
inc
jnp
add
add
push
pop
or
xchg
or
pop
pop
maxps
add
push
pop
sbb
add
add
push
and
adc
rol
push
and
sbb
add
push
pop
or
xchg
or
pop
maxps
add
sbb
inc
add
add
idiv
(bad)
inc
pop
pop
maxps
add
push
pop
sbb
adc
add
push
and
adc
push
and
sbb
add
xchg
or
push
xor
sbb
add
add
idiv
(bad)
inc
pop
maxps
add
add
add
idiv
(bad)
inc
pop
pop
maxps
add
push
pop
sbb
adc
add
or
sbb
add
add
add
add
add
add
add
or
pop
add
or
add
add
sub
add
xor
add
add
add
or
jnp
add
add
pop
sub
pop
inc
add
add
idiv
(bad)
call
sub
add
add
loop
add
or
add
outs
clc
add
push
or
add
push
or
sub
xor
add
add
adc
jnp
add
add
push
adc
add
inc
or
sub
add
loop
add
or
add
outs
cld
add
push
or
add
push
and
add
add
xor
add
add
add
or
jnp
add
add
pop
sub
sbb
add
add
idiv
(bad)
call
sub
add
add
add
push
or
add
outs
in
add
push
or
add
push
and
add
add
xor
add
add
add
add
add
add
pop
sub
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
push
or
add
outs
hlt
add
push
or
add
push
and
add
add
xor
add
add
add
or
jnp
add
add
pop
sub
sbb
add
(bad)
(bad)
call
sub
add
add
loopne
add
or
add
outs
call
outs
xlat
add
push
or
sub
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
sbb
add
add
add
add
add
push
jge
add
add
sbb
add
add
sub
add
add
xor
add
add
add
add
add
jae
add
push
jge
add
add
sbb
add
add
sub
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
push
add
add
add
add
jnp
add
add
add
push
and
add
or
or
add
add
jnp
add
add
outs
push
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
sub
add
add
(bad)
(bad)
call
sub
add
add
add
push
jge
add
add
add
jge
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
adc
add
add
add
mov
add
and
add
add
push
sub
add
add
or
adc
add
add
add
add
sub
add
push
add
push
sub
add
xor
add
add
mov
add
add
ss
add
push
add
add
jae
add
jge
add
add
or
jnp
add
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
jnp
add
add
mov
add
add
add
add
sub
push
and
add
push
add
add
push
or
and
add
inc
pop
add
push
jae
add
push
sub
add
or
add
jge
add
add
sub
push
and
inc
add
add
idiv
(bad)
dec
and
add
inc
pop
add
push
jae
add
push
sub
add
or
add
jge
add
add
jnp
add
add
jo
inc
add
add
idiv
(bad)
inc
jnp
add
add
and
add
and
and
add
jnp
add
add
and
add
add
or
add
jge
add
add
jnp
add
add
and
add
sub
inc
add
add
idiv
(bad)
dec
and
add
jnp
add
add
and
add
add
or
add
jge
add
add
add
outs
or
add
ficom
sub
sbb
add
(bad)
(bad)
inc
outs
pop
add
or
sub
inc
sbb
add
add
add
add
add
add
add
add
adc
add
add
add
adc
or
adc
add
add
add
add
add
adc
adc
jnp
add
add
push
add
push
sub
adc
or
pop
add
add
sbb
pop
sub
or
add
push
add
add
pop
sub
add
sub
sbb
adc
add
sub
add
add
(bad)
(bad)
call
sub
add
es
add
adc
(bad)
and
add
push
and
add
jp
pop
jge
add
add
add
add
push
add
sub
add
add
imul
add
add
push
add
push
jge
add
add
push
push
jae
add
push
jge
add
add
push
pop
jge
add
add
add
add
push
and
add
or
jnp
add
add
sbb
idiv
(bad)
inc
jnp
add
add
jnp
add
add
xor
push
add
add
add
or
add
push
add
add
add
inc
add
push
and
add
add
outs
test
add
and
add
or
add
and
jnp
add
add
outs
mov
xchg
add
and
add
and
inc
add
add
idiv
(bad)
inc
jnp
add
add
outs
mov
outs
adc
add
sub
add
sub
push
sub
outs
mov
add
and
inc
add
add
idiv
(bad)
inc
jnp
add
add
outs
mov
outs
adc
add
and
sub
push
and
inc
add
add
idiv
(bad)
inc
or
pop
add
push
add
add
add
and
inc
add
add
idiv
(bad)
dec
outs
pop
add
or
(bad)
call
inc
add
add
idiv
(bad)
(bad)
fimul
pop
sub
pop
outs
pop
add
or
sub
inc
sbb
add
add
add
add
add
add
add
add
add
xor
add
add
adc
loope
add
and
add
add
inc
add
push
and
add
sbb
add
(bad)
(bad)
call
sub
add
add
add
add
and
inc
add
add
idiv
(bad)
inc
jnp
add
add
outs
(bad)
add
push
add
loope
add
outs
aas
add
push
and
xlat
add
push
and
outs
(bad)
add
push
and
add
add
pop
add
or
inc
add
add
idiv
(bad)
inc
jnp
add
add
outs
(bad)
add
push
and
add
or
jnp
add
add
outs
dec
add
add
sbb
adc
repnz
add
jnp
add
add
cmp
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
push
add
add
sbb
inc
add
add
idiv
(bad)
inc
jnp
add
add
push
add
add
add
in
add
push
add
xlat
add
push
and
add
sbb
add
add
(bad)
(bad)
inc
(bad)
add
push
and
sub
or
xor
add
outs
(bad)
add
push
and
add
and
add
add
outs
dec
add
outs
(bad)
add
push
and
add
push
ficom
sub
pop
inc
add
add
idiv
(bad)
inc
outs
pop
add
or
fidivr
or
jnp
add
add
sbb
add
add
(bad)
(bad)
inc
add
add
add
outs
(bad)
add
push
or
add
push
and
add
or
push
jge
add
add
sbb
add
add
add
add
add
xor
add
add
pop
add
cmp
add
add
xor
add
add
add
add
add
add
add
(bad)
(bad)
call
sub
add
es
pop
add
sub
add
jae
add
or
jnp
add
add
sbb
inc
add
add
idiv
(bad)
inc
and
adc
add
jge
add
add
jnp
add
add
inc
add
add
add
pop
add
add
cmp
inc
add
add
idiv
(bad)
inc
jnp
add
add
jnp
add
add
jnp
add
add
pop
add
add
jnp
add
add
inc
add
push
and
add
push
sub
add
jnp
add
add
jnp
add
add
sub
jnp
add
add
push
pop
inc
add
add
idiv
(bad)
inc
add
add
add
outs
add
push
and
add
add
sbb
push
add
add
add
or
jnp
add
add
cs
sbb
add
add
idiv
(bad)
call
sub
add
es
stos
add
or
sbb
add
(bad)
(bad)
inc
jnp
add
add
sub
add
idiv
(bad)
inc
jnp
add
add
sbb
inc
add
add
idiv
(bad)
inc
jnp
add
add
outs
pusha
add
push
and
push
or
cmp
add
add
jnp
add
add
and
add
idiv
(bad)
inc
add
add
add
outs
mov
outs
cmp
es
add
add
jnp
add
add
cwde
add
add
add
(bad)
(bad)
inc
mov
add
and
and
adc
and
adc
add
jge
add
add
jnp
add
add
bound
inc
add
add
idiv
(bad)
inc
jnp
add
add
pop
add
add
dec
sbb
add
add
idiv
(bad)
inc
jnp
add
add
outs
inc
add
push
and
and
jnp
add
add
pop
add
add
jnp
add
add
inc
add
push
and
mov
outs
mov
das
add
push
sub
add
add
add
outs
inc
add
push
and
and
sub
jnp
add
add
and
inc
add
add
idiv
(bad)
inc
add
add
add
outs
mov
outs
add
push
jge
add
add
adc
sub
sbb
add
add
(bad)
(bad)
inc
outs
pop
add
or
add
add
add
sbb
inc
add
add
idiv
(bad)
inc
outs
mov
sub
add
add
push
add
push
sub
sbb
add
(bad)
(bad)
inc
outs
xchg
add
push
and
inc
add
add
idiv
(bad)
inc
outs
xchg
add
push
adc
add
add
idiv
(bad)
inc
outs
xchg
add
push
and
mov
or
or
pop
add
or
xor
add
add
and
inc
add
add
idiv
(bad)
inc
add
add
add
or
add
push
and
add
or
push
jge
add
add
sbb
add
add
inc
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
xchg
add
adc
outs
mov
or
outs
mov
or
sub
add
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
outs
or
add
and
add
add
push
and
jnp
add
add
outs
or
add
and
push
pop
outs
mov
add
push
inc
push
inc
sub
push
or
push
sub
sbb
add
add
(bad)
(bad)
inc
outs
mov
add
and
inc
add
add
idiv
(bad)
inc
or
push
pop
sub
add
or
add
or
cmp
inc
add
or
add
pop
inc
add
add
idiv
(bad)
inc
outs
mov
add
and
inc
add
add
idiv
(bad)
inc
sub
push
and
sub
es
or
jnp
add
add
add
add
push
and
inc
add
add
idiv
(bad)
inc
add
add
add
or
add
push
jge
add
add
push
add
jnp
add
add
or
add
push
jge
add
add
or
push
jge
add
add
sbb
add
sub
sbb
add
add
(bad)
(bad)
inc
outs
mov
es
sbb
add
add
(bad)
(bad)
inc
add
sub
add
sub
adc
add
add
add
jmp
add
or
pop
add
add
add
add
outs
add
or
add
xor
add
add
add
add
add
sub
add
add
or
pop
inc
add
add
idiv
(bad)
call
sub
add
add
pusha
add
or
add
and
sub
sub
add
xor
add
add
add
add
add
pop
pop
jge
add
add
sub
sub
add
sub
add
and
add
sub
add
and
add
jp
add
ins
add
push
sub
add
or
sldt
add
add
add
pop
pop
jge
add
add
sub
add
xor
add
add
xchg
add
adc
pusha
add
or
imul
sbb
add
cmp
jle
add
add
push
mov
aad
add
jle
add
add
pop
pop
pop
sub
add
sbb
aas
popf
jle
add
add
sbb
cmp
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
sub
add
add
(bad)
(bad)
call
sub
add
and
push
add
push
and
add
jp
add
add
add
jge
add
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
adc
or
imul
add
add
sub
add
and
add
outs
mov
add
push
xor
sub
add
or
outs
adc
add
dec
add
add
inc
sub
add
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
sub
and
and
add
push
and
add
jp
sub
add
adc
add
ja
add
add
add
add
sbb
add
add
(bad)
(bad)
call
sub
add
add
jnp
add
add
jae
add
and
add
jnp
add
add
push
sbb
add
add
(bad)
(bad)
inc
sub
add
and
add
jnp
add
add
daa
pop
inc
add
add
idiv
(bad)
inc
jnp
add
add
sub
dec
add
sub
jle
add
or
or
add
sub
adc
pop
add
add
or
add
add
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
or
add
xor
sbb
add
add
(bad)
(bad)
inc
add
pop
sub
add
and
add
and
sub
push
or
sub
add
xor
add
add
adc
sub
add
sub
add
and
add
jp
and
add
sub
add
and
push
add
push
and
add
and
add
and
add
push
add
pop
outs
adc
add
and
add
outs
mov
add
and
add
outs
fild
add
and
ficomp
inc
add
add
idiv
(bad)
call
sub
add
sub
add
or
outs
adc
add
dec
add
add
add
or
sbb
add
(bad)
(bad)
inc
add
add
or
fild
add
and
rcr
add
add
idiv
(bad)
inc
and
add
sub
add
and
add
and
add
pop
outs
adc
add
and
add
and
add
sub
add
and
add
and
das
fstp
inc
add
add
idiv
(bad)
inc
jle
add
add
popa
add
or
xor
inc
add
add
idiv
(bad)
inc
jae
add
or
sub
pop
push
add
add
or
add
add
or
or
adc
jle
add
add
pop
pop
outs
push
or
push
das
aam
outs
push
add
or
add
outs
mov
add
and
add
xor
sbb
add
add
idiv
(bad)
push
add
or
sub
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
sldt
adc
or
and
add
add
xchg
add
adc
xor
add
sub
add
and
add
jp
pop
pop
or
jle
add
add
imul
add
add
(bad)
(bad)
call
sub
add
add
pop
sbb
inc
add
add
idiv
(bad)
inc
pop
das
xor
inc
add
add
idiv
(bad)
jmp
pop
add
sub
add
and
add
jp
add
add
add
add
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
imul
or
add
and
add
outs
outs
add
or
add
add
or
push
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
or
add
or
and
add
add
add
add
add
sub
js
add
and
add
and
outs
mov
sub
add
xor
add
add
add
add
add
sub
add
add
(bad)
(bad)
call
sub
add
es
add
or
add
mov
jp
add
and
or
dec
add
add
add
add
sub
add
add
(bad)
(bad)
call
sub
add
es
add
or
add
add
add
pop
sub
sbb
add
(bad)
(bad)
jmp
mov
or
outs
mov
sub
add
jp
add
sub
add
add
or
dec
add
add
add
add
sub
add
add
(bad)
(bad)
call
sub
add
es
add
or
add
add
add
pop
sub
pop
inc
add
add
idiv
(bad)
jmp
mov
or
mov
mov
sub
add
add
sub
add
add
or
pop
add
add
add
add
sub
add
add
sub
add
sub
add
and
add
or
xor
add
add
add
add
add
add
add
(bad)
(bad)
call
sub
add
es
lea
add
sub
and
or
add
sbb
inc
add
add
idiv
(bad)
jmp
mov
or
add
or
add
jle
add
and
xor
add
add
add
add
add
push
pop
xor
sub
add
or
or
add
add
add
add
add
xor
sub
adc
pop
add
add
add
add
add
adc
add
push
jge
add
add
adc
add
sub
sub
add
add
(bad)
(bad)
call
sub
add
and
add
sub
add
and
add
jp
outs
mov
add
and
add
xor
pop
inc
add
add
idiv
(bad)
jmp
inc
sub
add
push
add
push
and
add
sub
add
jae
add
or
sub
sbb
add
add
(bad)
(bad)
inc
or
sbb
idiv
(bad)
jmp
sub
add
push
add
push
jae
add
or
sub
sub
add
add
add
add
add
add
jge
add
add
push
add
stos
add
add
add
adc
pop
add
add
add
add
add
adc
add
push
jge
add
add
adc
add
sub
sub
add
add
(bad)
(bad)
call
sub
add
and
push
add
push
jae
add
or
add
add
add
mov
add
add
add
movs
add
add
add
add
add
movs
add
add
add
add
add
cmps
add
add
add
add
add
test
add
add
add
add
test
add
add
add
stos
add
add
add
add
add
lods
add
add
add
add
add
cmps
add
add
add
add
add
mov
add
add
add
mov
add
add
add
lods
add
add
add
add
add
scas
add
add
add
add
add
scas
add
add
add
add
add
mov
add
jnp
add
add
cmp
inc
add
add
idiv
(bad)
inc
add
add
add
imul
add
jnp
add
add
add
add
add
add
add
add
imul
sub
add
or
adc
add
add
add
add
add
add
pop
rcl
inc
push
inc
sub
xor
add
add
add
add
add
jnp
add
add
pop
push
inc
push
inc
sub
add
or
and
add
add
add
add
add
add
pusha
jge
add
add
add
add
(bad)
pop
jge
add
add
add
add
or
adc
add
add
add
add
add
add
add
add
pop
push
inc
push
inc
sub
add
or
cmp
add
add
add
add
sbb
add
add
idiv
(bad)
call
sub
add
add
add
add
add
pusha
jge
add
add
add
add
push
(bad)
call
lods
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
sub
add
add
add
add
add
add
adc
sub
add
add
(bad)
(bad)
call
sub
add
es
add
add
add
or
sbb
add
add
add
add
jge
add
add
and
add
adc
jge
add
add
add
or
or
add
add
jnp
add
add
inc
add
pop
sub
add
add
or
pop
add
add
add
add
sub
or
add
and
add
pop
sub
adc
pop
add
add
or
add
push
or
jnp
add
add
adc
sub
add
xchg
add
push
sub
sbb
add
add
(bad)
(bad)
call
sub
add
add
xchg
add
push
and
pop
sbb
add
add
idiv
(bad)
inc
sub
pop
add
add
or
sub
add
xor
add
add
add
add
add
jnp
add
add
arpl
inc
add
pop
sub
add
or
sub
add
add
add
add
add
inc
add
pop
sar
add
add
and
add
and
add
add
(bad)
pusha
sar
add
add
adc
or
stos
add
add
add
adc
jnp
add
add
pop
add
add
add
pop
or
add
scas
add
push
and
sbb
add
add
(bad)
(bad)
call
sub
add
es
xor
cmp
add
add
popf
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
add
add
bndstx
add
add
(bad)
(bad)
call
adc
sub
sub
es
sbb
add
add
idiv
(bad)
call
adc
sub
add
test
add
and
inc
add
add
idiv
(bad)
call
adc
sub
add
sub
es
pop
or
push
sub
adc
or
add
add
add
add
sub
xor
add
cwde
add
push
and
pop
pop
inc
add
add
idiv
(bad)
call
sub
add
add
cwde
add
push
and
inc
sbb
add
add
idiv
(bad)
inc
sub
es
adc
sub
inc
add
add
idiv
(bad)
inc
sub
sub
add
add
idiv
(bad)
inc
sub
es
xor
or
sub
sub
sub
add
or
or
add
add
add
add
jge
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
push
cmp
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
add
add
add
and
inc
add
add
idiv
(bad)
inc
sub
es
sbb
add
(bad)
(bad)
inc
pop
or
pop
or
jnp
add
add
outs
xor
sbb
add
add
(bad)
(bad)
inc
adc
jnp
add
add
sbb
inc
add
add
idiv
(bad)
inc
jnp
add
add
sub
add
add
sub
push
or
sub
xor
add
add
add
sub
sub
add
add
(bad)
(bad)
call
sub
add
add
add
add
outs
inc
inc
sub
sub
add
add
or
sub
add
add
add
add
add
add
pop
shr
add
add
(bad)
(bad)
call
sub
add
es
push
add
add
add
sub
add
add
or
sbb
add
add
add
add
ins
jge
add
add
and
add
pusha
sar
add
add
adc
pop
add
add
adc
cmp
add
add
add
pop
pop
pop
sub
add
or
cmp
jnp
add
add
fs
aas
pop
sub
add
or
pop
add
add
add
or
pop
sub
add
and
or
jnp
add
add
adc
sub
add
and
add
and
test
sbb
pop
and
add
adc
sub
add
and
add
add
adc
pop
sub
add
or
rol
add
and
add
adc
push
add
or
add
add
xor
add
add
add
add
dec
add
or
sub
add
or
add
dec
add
or
sub
add
and
sub
add
adc
add
push
add
or
and
sbb
add
add
(bad)
(bad)
call
sub
add
and
or
or
or
adc
cmp
add
and
add
(bad)
(bad)
jmp
cmp
add
or
or
pop
pop
or
pop
or
pop
cmp
add
pop
add
pop
pop
jg
pop
sbb
pop
adc
adc
or
or
adc
bound
add
sub
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
pop
shr
add
add
(bad)
(bad)
call
sub
add
es
movs
add
add
add
or
pop
add
add
add
add
add
add
add
and
add
pusha
sar
add
add
add
xor
add
add
add
add
add
jnp
add
add
pop
shr
add
add
(bad)
(bad)
call
sub
add
es
cmps
add
add
add
or
pop
add
add
add
add
add
add
add
and
add
pusha
sar
add
add
add
xor
add
add
add
add
add
add
add
pop
shr
add
add
(bad)
(bad)
call
sub
add
es
test
add
adc
xor
add
add
add
add
add
add
add
and
add
add
(bad)
(bad)
call
push
and
inc
add
add
idiv
(bad)
call
sub
add
and
push
add
push
jae
add
or
add
test
add
and
add
pusha
sar
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
sub
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
sub
add
jae
add
or
add
add
add
add
xor
add
add
add
sub
es
xor
add
add
add
pop
arpl
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
(bad)
(bad)
call
sub
add
add
sub
mov
(bad)
inc
add
adc
mov
push
add
push
jae
add
or
add
add
jge
add
add
push
add
add
add
add
add
sub
xor
add
add
sldt
adc
jnp
add
add
push
inc
add
add
add
add
add
add
or
add
adc
add
sub
sub
add
add
and
add
add
and
add
add
and
daa
add
sub
add
and
add
add
add
add
sub
es
add
push
jp
adc
add
push
add
sldt
adc
or
push
cs
sbb
add
add
(bad)
(bad)
call
sub
add
es
and
sbb
inc
add
add
idiv
(bad)
inc
and
add
add
adc
sbb
push
jge
add
add
add
jge
add
add
add
jge
add
add
and
add
sub
add
add
sub
es
add
push
jp
add
xor
add
add
add
add
add
jnp
add
add
sub
xor
add
add
add
add
add
scas
add
push
and
sub
xor
add
add
add
add
pop
or
sub
es
sub
xor
add
add
call
add
add
stc
add
push
or
pop
outs
add
push
and
add
add
jge
add
add
outs
add
push
and
sbb
add
add
(bad)
(bad)
call
sub
add
and
push
add
push
jae
add
push
jp
sub
add
add
(bad)
(bad)
inc
jnp
add
add
outs
xor
sbb
add
(bad)
(bad)
inc
push
outs
push
add
push
and
add
sub
add
add
outs
xor
sbb
add
add
idiv
(bad)
inc
push
outs
push
add
push
jge
add
add
cmp
add
sbb
add
add
idiv
(bad)
inc
jnp
add
add
outs
xor
inc
add
add
idiv
(bad)
inc
push
outs
push
add
push
and
add
dec
add
add
add
inc
add
pop
pop
sub
add
add
idiv
(bad)
inc
jnp
add
add
outs
cs
jnp
add
add
outs
xor
sbb
add
add
(bad)
(bad)
jmp
sbb
add
sub
add
jae
add
push
jp
pop
or
add
push
cmp
outs
add
push
sbb
adc
sub
add
push
add
push
and
add
jp
outs
(bad)
add
and
push
outs
adc
push
and
adc
push
and
xor
inc
add
add
idiv
(bad)
dec
pop
sbb
loope
add
sbb
add
add
idiv
(bad)
inc
outs
push
add
push
and
push
add
push
and
push
add
push
and
sub
add
sub
stos
add
add
or
add
push
push
outs
add
push
and
cmp
push
push
add
outs
add
push
cmp
add
add
idiv
(bad)
inc
outs
add
push
and
outs
adc
push
and
add
sbb
add
add
idiv
(bad)
call
add
xor
inc
add
add
idiv
(bad)
inc
outs
(bad)
add
and
and
pop
push
push
push
jae
add
or
pop
adc
sub
add
and
adc
push
jae
add
or
jne
add
and
or
jbe
add
and
add
add
add
add
arpl
adc
add
(bad)
(bad)
inc
push
sub
add
adc
(bad)
mov
add
adc
and
cdq
add
outs
add
push
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
add
xor
add
add
add
mov
add
pop
inc
pusha
sub
add
push
and
das
sub
scas
sub
add
push
add
push
push
mov
add
and
sub
add
push
add
push
and
add
and
add
jp
outs
adc
push
and
adc
push
and
adc
push
and
adc
push
and
jge
add
add
or
add
add
or
add
add
and
sub
add
push
add
push
and
add
jp
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
or
add
xor
sbb
add
add
(bad)
(bad)
call
sub
add
and
push
add
push
and
add
sub
add
and
add
jp
add
add
add
add
xor
add
add
add
adc
jnp
add
add
mov
add
and
xor
jnp
add
add
pop
pop
outs
fild
add
and
cmp
add
idiv
(bad)
call
sub
add
add
add
add
pop
pop
outs
fild
add
and
push
sbb
add
(bad)
(bad)
inc
pop
adc
xchg
add
push
and
or
sub
add
or
pop
add
add
add
add
sub
or
add
push
and
sub
sub
add
or
push
add
add
add
add
sub
mov
sub
add
xor
add
add
xchg
add
adc
sub
or
add
or
jnp
add
add
inc
sbb
add
add
idiv
(bad)
call
sub
add
es
add
add
add
imul
add
jnp
add
add
push
jnp
add
add
add
add
add
imul
push
sub
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
push
sbb
inc
add
add
idiv
(bad)
call
sub
add
add
inc
sub
sub
add
xor
add
add
add
sub
add
add
(bad)
(bad)
call
sub
add
es
add
or
add
xor
add
and
inc
add
add
idiv
(bad)
inc
add
xor
add
and
add
outs
adc
add
and
add
pop
inc
sub
add
and
add
sub
add
and
add
dec
add
sub
push
pop
outs
adc
add
dec
add
add
add
or
pop
inc
add
add
idiv
(bad)
inc
push
outs
fild
add
pop
das
cs
inc
add
add
idiv
(bad)
inc
sub
xor
add
add
add
add
add
sub
es
add
add
adc
add
sub
jae
add
add
add
add
add
or
sub
add
add
sub
es
add
add
adc
add
sub
add
add
add
jae
add
add
add
add
add
xor
add
add
add
add
add
sub
mov
adc
add
sub
sbb
mov
add
mov
push
add
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
sub
add
add
add
add
jge
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
(bad)
sub
or
add
das
xor
inc
add
add
idiv
(bad)
call
sub
add
and
push
add
push
and
add
sub
add
and
add
jp
add
add
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
or
add
add
add
add
pop
sub
add
push
and
xor
add
add
adc
jnp
add
add
outs
or
add
and
add
or
add
add
add
mov
add
push
or
jnp
add
add
inc
push
inc
or
or
inc
add
add
idiv
(bad)
call
sub
add
add
add
or
add
sbb
add
add
idiv
(bad)
dec
outs
xor
es
add
add
inc
add
add
idiv
(bad)
inc
jnp
add
add
add
add
pop
add
add
add
pop
add
add
add
add
add
add
add
add
add
cmp
add
push
or
add
or
add
cmp
add
push
or
add
or
add
sub
or
add
or
add
sub
or
add
or
add
sub
or
add
or
add
sub
push
or
add
or
add
sub
push
add
add
add
mov
adc
into
sub
add
push
add
push
and
add
jp
or
add
or
add
pop
or
outs
add
or
add
add
or
pop
add
add
add
xor
pop
inc
add
add
idiv
(bad)
inc
add
add
add
mov
sub
sbb
add
(bad)
(bad)
inc
add
add
add
or
pop
outs
xchg
add
push
push
sub
xor
add
add
add
add
add
add
sub
add
push
and
xor
add
add
pushf
add
adc
jnp
add
add
outs
or
add
and
add
or
add
add
add
mov
add
push
push
push
movs
add
push
push
or
add
sbb
inc
add
add
idiv
(bad)
call
sub
add
add
add
or
cmp
add
add
outs
xor
es
add
add
jnp
add
add
or
add
add
add
push
add
add
add
add
add
add
add
add
add
cmp
add
push
or
add
or
add
cmp
add
push
or
add
or
add
sub
or
add
or
add
sub
or
add
or
add
sub
push
or
add
or
add
push
sub
push
or
add
or
add
sub
push
add
add
add
mov
adc
sbb
push
add
push
and
add
jp
outs
add
or
add
add
or
pop
add
add
add
xor
sbb
add
add
idiv
(bad)
inc
add
add
add
mov
add
add
add
adc
or
pop
outs
xchg
add
push
push
sub
add
add
or
or
add
add
add
add
add
dec
add
push
sub
add
add
or
pop
add
add
add
add
sub
add
sub
add
or
or
add
add
add
add
sub
add
sub
xor
add
add
add
add
add
add
push
add
push
sub
add
add
or
push
add
add
add
add
sub
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
add
sub
add
add
(bad)
(bad)
call
sub
add
and
add
sub
add
and
add
jp
add
add
add
add
add
jnp
add
add
add
or
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
cmp
add
add
and
pop
jae
add
or
add
add
and
pop
jae
add
or
add
add
and
pop
jae
add
or
add
add
sub
add
add
xor
add
add
add
add
add
push
push
add
sub
add
xor
add
add
popf
add
adc
add
push
jae
add
or
push
jae
add
pop
outs
rol
add
sar
add
add
jnp
add
add
pop
shr
pop
inc
add
add
idiv
(bad)
call
sub
add
es
inc
add
add
idiv
(bad)
inc
outs
adc
es
and
pop
push
push
push
jae
add
or
add
or
push
push
or
jae
add
or
jne
add
and
add
jbe
add
and
add
jnp
add
add
pop
shr
add
idiv
(bad)
inc
outs
adc
adc
add
pop
pop
push
push
push
jae
add
or
push
adc
sub
add
and
adc
add
sub
add
adc
adc
sub
add
jge
add
add
jnp
add
add
pop
shr
sbb
add
(bad)
(bad)
inc
outs
adc
adc
add
mov
add
pop
pop
push
push
push
jae
add
or
or
or
inc
add
or
adc
push
jae
add
or
jne
add
and
or
jbe
add
and
add
adc
sub
pop
inc
add
add
idiv
(bad)
inc
outs
pop
add
or
ficom
sub
sbb
add
add
(bad)
(bad)
inc
outs
pop
add
or
sub
add
inc
xor
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
or
add
dec
add
add
add
adc
add
add
add
sbb
sbb
push
add
add
jle
add
or
jae
add
push
outs
add
jnp
add
add
fild
add
add
add
add
pop
shr
add
add
inc
add
or
add
pop
pop
push
push
push
jae
add
or
add
inc
add
or
push
add
or
sub
add
imul
outs
sbb
retf
add
add
pop
shr
sbb
add
add
idiv
(bad)
call
sub
add
add
add
inc
add
or
add
pop
pop
push
push
push
jae
add
or
add
add
or
add
and
push
sub
add
and
pop
adc
outs
sbb
retf
add
add
pop
shr
sbb
add
add
(bad)
(bad)
inc
jl
add
add
inc
add
or
add
pop
pop
push
push
push
jae
add
or
or
or
inc
add
or
add
adc
adc
sub
add
imul
outs
sbb
icebp
add
or
or
sub
sub
pop
inc
add
add
idiv
(bad)
inc
outs
pop
add
or
push
sub
sbb
add
add
idiv
(bad)
inc
outs
pop
add
or
adc
sub
add
inc
xor
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
or
dec
add
add
add
add
and
add
pop
or
or
pop
xor
push
add
or
or
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
test
add
pop
adc
pop
push
sbb
or
or
add
sub
sub
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jecxz
add
and
inc
add
add
idiv
(bad)
call
sub
add
and
push
add
push
and
add
jp
and
add
pusha
sar
add
add
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jecxz
add
and
inc
add
add
idiv
(bad)
call
sub
add
and
push
add
push
and
add
jp
and
add
pusha
sar
add
add
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
sub
add
push
sub
add
add
(bad)
(bad)
call
sub
add
and
push
add
push
and
add
jp
and
add
pusha
sar
add
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
xor
add
add
add
add
push
jae
add
and
add
push
push
jae
add
and
add
push
push
jae
add
jge
add
add
sub
add
add
or
add
add
add
add
pop
or
add
xor
add
add
add
add
push
jae
add
or
push
jae
add
outs
adc
es
outs
adc
add
or
outs
adc
add
or
sbb
add
add
(bad)
(bad)
call
sub
add
or
sbb
add
add
inc
add
add
idiv
(bad)
inc
outs
push
add
adc
adc
jae
add
and
add
outs
push
add
adc
jae
add
and
add
outs
push
add
adc
add
push
sub
add
and
add
sub
or
outs
sub
add
and
into
add
or
add
or
(bad)
call
inc
add
add
idiv
(bad)
(bad)
ficom
sub
sbb
add
add
(bad)
(bad)
inc
outs
pop
add
or
ficom
sub
pop
inc
add
add
idiv
(bad)
inc
outs
pop
add
or
sub
add
add
add
add
add
add
add
add
out
adc
add
add
xor
add
add
adc
add
or
push
jae
add
push
outs
add
outs
sbb
outs
pop
add
sbb
add
jl
add
add
add
or
add
pop
add
add
add
or
add
jl
add
add
add
or
add
icebp
add
or
daa
pop
sub
sbb
add
add
idiv
(bad)
call
sub
add
es
outs
pop
add
or
push
sub
push
outs
pop
add
or
or
add
add
sbb
add
add
sbb
add
push
add
add
add
add
sbb
add
adc
add
adc
or
add
add
fiadd
add
sub
add
add
add
add
add
or
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
sub
add
push
and
mov
push
add
push
jae
add
or
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
sub
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
and
push
add
push
and
add
jp
add
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
sub
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
and
push
add
push
and
add
jp
add
add
add
add
xor
add
add
add
sub
sub
add
push
sub
add
add
or
push
add
add
add
add
sub
sub
inc
add
add
add
add
add
jge
add
add
add
add
or
inc
add
add
add
add
sub
add
push
and
add
xor
add
idiv
(bad)
call
sub
add
and
add
sub
add
and
add
jp
jnp
add
add
push
add
or
add
sub
add
add
or
xor
add
add
add
add
add
add
sbb
add
imul
add
idiv
(bad)
call
sub
add
add
lea
add
jge
add
add
add
add
or
or
add
add
add
add
add
add
imul
xor
add
add
add
or
add
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
jnp
add
add
jnp
add
add
jae
add
or
push
sub
adc
push
add
add
add
or
add
add
push
sub
sbb
add
add
idiv
(bad)
call
sub
add
add
jnp
add
add
jnp
add
add
jnp
add
add
inc
add
and
add
xor
add
add
mov
or
or
pop
or
sbb
add
idiv
(bad)
call
sub
add
es
and
add
or
adc
add
push
or
(bad)
fild
add
or
pop
add
add
push
or
add
push
push
sub
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
jnp
add
add
imul
add
add
(bad)
(bad)
call
sub
add
add
add
add
das
sbb
inc
add
add
idiv
(bad)
jmp
mov
add
sub
add
jae
add
push
jp
jnp
add
add
jnp
add
add
add
add
add
sub
adc
or
leave
add
add
add
add
add
imul
push
jge
add
add
push
jge
add
add
jnp
add
add
add
pop
or
aaa
add
adc
add
and
adc
add
and
and
inc
add
add
idiv
(bad)
call
sub
add
add
add
pop
jge
add
add
add
sbb
inc
add
add
idiv
(bad)
inc
jnp
add
add
jnp
add
add
imul
add
and
inc
add
add
idiv
(bad)
inc
jnp
add
add
pop
add
add
add
imul
sub
push
or
sub
sbb
add
add
(bad)
(bad)
inc
add
add
add
xlat
add
add
push
jge
add
add
sub
add
add
or
sub
add
add
add
add
add
sub
add
and
add
jp
add
add
push
and
add
push
and
add
sub
xor
add
add
add
(bad)
inc
add
add
push
das
adc
sub
add
sub
add
and
add
jp
sub
pop
inc
add
add
idiv
(bad)
call
sub
add
es
imul
and
inc
add
sub
inc
add
add
idiv
(bad)
jmp
cmp
push
add
push
and
add
sub
add
and
add
jp
jnp
add
add
imul
add
sub
add
push
and
add
add
push
and
or
and
inc
add
sbb
inc
add
add
idiv
(bad)
jmp
jg
add
sub
add
and
add
jp
add
or
es
lea
add
or
jnp
add
add
push
outs
add
or
jnp
add
add
imul
adc
add
adc
adc
push
sub
sub
add
or
add
or
add
or
or
add
add
add
add
add
or
add
add
adc
pop
add
add
cmp
jnp
add
add
icebp
add
or
add
add
push
sub
add
or
or
add
add
jnp
add
add
outs
fild
add
sub
add
add
or
and
add
add
add
add
add
sub
add
jae
add
or
jnp
add
add
push
add
add
sub
xor
add
add
add
jnp
add
add
shr
add
or
jnp
add
add
push
arpl
outs
fild
add
sub
add
add
or
adc
add
add
add
add
push
push
add
pop
adc
sub
add
push
sub
xor
add
add
add
add
add
add
or
push
add
pop
and
sub
add
push
sub
adc
or
jg
add
movs
add
adc
or
add
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
es
or
jnp
add
add
pop
or
jnp
add
add
imul
push
and
lea
add
or
jnp
add
add
or
pop
sub
add
or
add
add
push
pop
sbb
add
add
add
or
add
add
add
imul
add
add
jge
add
add
sub
adc
or
and
add
add
add
add
sub
add
push
add
(bad)
add
and
pop
add
(bad)
add
and
bound
add
add
xor
add
add
sldt
adc
sbb
adc
push
add
add
add
jnp
add
add
add
add
add
jnp
add
add
pop
xchg
push
bound
jnp
add
add
jnp
add
add
pop
xchg
pop
adc
add
add
add
jnp
add
add
pop
xchg
pop
sbb
or
and
add
pop
jge
add
add
sub
add
adc
pop
add
add
add
add
adc
sbb
adc
push
add
add
add
jnp
add
add
add
add
add
jnp
add
add
pop
xchg
push
bound
add
add
pop
jge
add
add
sub
adc
add
pop
add
add
add
adc
add
add
jnp
add
add
imul
add
add
(bad)
(bad)
call
sub
add
add
add
add
jnp
add
add
add
add
add
sbb
jnp
add
add
jnp
add
add
or
and
add
pop
jge
add
add
sub
xor
add
add
add
add
add
add
adc
push
add
add
pop
jge
add
add
add
adc
add
mov
add
add
jnp
add
add
jnp
add
add
imul
add
add
(bad)
(bad)
call
sub
add
add
add
add
das
sbb
inc
add
add
idiv
(bad)
jmp
mov
add
sub
add
and
add
jp
jnp
add
add
jnp
add
add
jnp
add
add
add
sbb
inc
add
add
idiv
(bad)
jmp
jge
add
sub
add
and
add
jp
jnp
add
add
pop
sbb
sbb
inc
add
add
idiv
(bad)
jmp
mov
push
add
push
and
add
jp
add
xor
add
add
adc
jnp
add
add
jnp
add
add
imul
inc
add
add
idiv
(bad)
call
sub
add
and
add
sub
add
jae
add
push
jp
jnp
add
add
jnp
add
add
add
add
add
jnp
add
add
pop
xchg
push
bound
add
add
pop
jge
add
add
sub
add
add
or
and
add
add
add
add
add
add
dec
add
pushf
add
add
add
dec
pop
pop
add
arpl
pushf
add
sub
add
add
or
daa
add
add
add
add
jnp
add
add
push
sbb
add
(bad)
(bad)
call
sub
add
add
add
add
rol
or
add
xor
add
add
add
add
add
sub
add
or
add
add
add
add
add
or
adc
add
add
sub
add
or
add
add
add
add
fadd
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
push
add
add
add
add
sub
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
and
add
pop
jge
add
add
push
jge
add
add
add
add
or
or
add
add
add
add
jge
add
add
add
or
pop
add
add
add
add
add
add
add
pop
jge
add
add
push
push
jmp
add
add
xor
add
add
add
add
add
add
add
add
sbb
or
jge
add
add
add
add
jge
add
add
and
adc
add
add
add
jae
add
push
jge
add
add
sub
sub
add
add
(bad)
(bad)
call
sub
add
and
add
sub
add
and
add
jp
add
add
add
add
pop
pop
sub
or
add
pop
jge
add
add
sub
or
add
sub
sbb
add
add
adc
add
add
or
or
add
add
xor
add
add
add
sbb
add
add
and
adc
add
add
add
jae
add
push
jge
add
add
sub
sub
add
add
(bad)
(bad)
call
sub
add
and
add
sub
add
and
add
jp
outs
int3
add
or
inc
add
add
idiv
(bad)
jmp
xor
add
push
add
push
and
add
sub
add
and
add
jp
add
add
add
add
add
or
add
add
pop
jge
add
add
sub
or
add
sub
sbb
add
add
add
xchg
add
popf
add
adc
add
sbb
or
mov
add
add
add
sbb
add
add
and
adc
add
add
add
jae
add
push
jge
add
add
sub
sub
add
add
(bad)
(bad)
call
sub
add
es
pop
add
sub
add
and
add
jp
outs
int3
add
or
add
add
(bad)
(bad)
jmp
xor
add
push
add
push
and
pop
add
sub
add
jae
add
or
add
add
add
pop
jge
add
add
jnp
add
add
int
add
and
sbb
inc
add
add
idiv
(bad)
inc
sub
sbb
add
(bad)
sbb
push
lea
add
jge
add
add
pop
jge
add
add
add
add
add
add
mov
or
add
add
xor
add
add
add
add
add
sbb
add
add
and
adc
add
add
add
jae
add
push
jge
add
add
sub
push
lea
add
jge
add
add
pop
jge
add
add
add
xor
add
add
add
jnp
add
add
sub
add
add
add
sbb
push
or
jnp
add
add
push
outs
pop
push
add
outs
sbb
push
and
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
dec
add
add
add
add
sub
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
or
inc
add
add
idiv
(bad)
inc
adc
cli
add
add
add
jge
add
add
add
jle
add
and
add
jge
add
add
add
add
xor
add
add
add
jnp
add
add
inc
push
inc
sub
add
sbb
add
add
add
add
push
outs
add
fiadd
add
fadd
add
fsubr
add
add
adc
add
add
add
or
pop
add
add
add
or
push
add
add
add
add
pop
sub
sub
add
or
add
adc
add
dec
add
add
sub
add
add
(bad)
(bad)
call
sub
add
es
sub
add
push
add
push
and
add
jp
sub
jae
add
push
or
add
add
add
push
jge
add
add
pop
jge
add
add
sub
xor
add
sub
add
add
(bad)
(bad)
call
sub
add
es
sub
add
push
add
push
and
add
jp
outs
fld
add
and
inc
add
add
idiv
(bad)
jmp
add
add
push
add
push
and
add
sub
add
and
add
jp
outs
int3
add
or
inc
add
add
idiv
(bad)
jmp
xor
add
push
add
push
and
add
sub
add
jae
add
or
cs
push
or
add
add
add
sub
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
or
add
add
add
add
add
add
push
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
imul
xor
add
add
add
add
add
jnp
add
add
imul
or
sbb
add
add
add
add
add
add
mov
outs
mov
es
add
add
add
add
xor
add
add
add
add
add
jnp
add
add
adc
pop
sub
add
push
add
push
and
add
jp
jnp
add
add
mov
add
sub
add
xor
add
add
sldt
adc
jnp
add
add
adc
pop
sub
add
push
add
push
and
add
jp
or
cmp
add
add
add
mov
outs
mov
sub
sub
es
add
add
(bad)
(bad)
call
sub
add
es
sub
pop
pop
or
add
add
add
imul
add
add
(bad)
(bad)
call
adc
push
add
add
sldt
adc
jnp
add
add
and
add
idiv
(bad)
call
sub
add
and
add
sub
add
and
add
jp
add
sub
add
or
push
das
add
add
add
add
mov
outs
mov
es
add
add
add
add
xor
add
add
add
add
add
add
add
(bad)
(bad)
call
sub
add
and
push
add
push
and
add
jp
jnp
add
add
sbb
inc
add
add
idiv
(bad)
jmp
pop
sub
add
push
add
push
and
add
jp
outs
lea
add
or
push
push
dec
sbb
add
add
(bad)
(bad)
inc
add
add
add
imul
add
add
(bad)
(bad)
inc
jnp
add
add
aam
data16
add
add
push
and
add
push
and
add
and
inc
add
add
idiv
(bad)
inc
add
add
push
and
add
push
and
push
push
sbb
inc
add
add
idiv
(bad)
jmp
outs
sub
add
push
add
push
and
add
jp
push
sub
add
sub
adc
or
or
add
test
jnp
add
add
and
add
idiv
(bad)
call
sub
add
and
add
sub
add
and
add
jp
add
add
add
aam
data16
add
mov
push
or
jnp
add
add
aam
data16
add
add
push
and
add
add
add
aam
data16
add
add
push
jae
add
push
or
jnp
add
add
aam
data16
add
add
push
and
inc
add
add
idiv
(bad)
inc
or
jnp
add
add
aam
data16
add
mov
push
or
sub
add
add
(bad)
(bad)
jmp
cdq
sub
add
push
add
push
and
add
jp
or
or
xor
sbb
add
add
(bad)
(bad)
dec
pop
jae
add
push
jae
add
push
or
pop
and
sub
add
push
add
push
and
add
add
sub
es
add
push
jp
sub
xor
add
add
add
add
add
push
adc
inc
add
push
and
inc
add
add
stos
add
adc
jnp
add
add
and
add
idiv
(bad)
call
sub
add
and
add
sub
add
and
add
jp
jae
add
push
or
add
add
idiv
(bad)
inc
add
push
add
add
add
(bad)
(bad)
call
sub
sbb
pop
or
or
add
add
add
idiv
(bad)
inc
add
sub
add
and
add
push
pop
outs
and
add
add
add
push
add
or
inc
add
push
and
add
push
and
adc
outs
and
push
add
add
add
idiv
(bad)
inc
add
sub
add
adc
dec
add
or
add
and
add
add
or
inc
add
add
idiv
(bad)
call
or
add
cmp
inc
add
add
idiv
(bad)
inc
cmp
or
inc
add
push
and
add
cmp
sub
sbb
add
add
(bad)
(bad)
inc
sbb
add
push
add
add
push
jae
add
push
adc
inc
add
push
sub
push
adc
and
adc
add
adc
push
push
or
xor
add
or
add
push
add
add
add
idiv
(bad)
call
or
or
adc
push
adc
outs
es
push
add
add
push
adc
adc
push
adc
mov
in
add
and
push
xor
add
idiv
(bad)
(bad)
ficom
adc
sub
sbb
add
add
(bad)
(bad)
call
push
outs
pop
add
or
add
sub
add
outs
cmps
add
push
adc
push
and
inc
add
add
idiv
(bad)
inc
outs
and
push
add
and
add
push
add
push
and
add
add
add
or
or
inc
add
push
outs
mov
add
and
xchg
add
add
jnp
add
add
add
jae
add
push
adc
adc
add
sub
add
outs
pushf
add
push
and
push
add
sub
add
and
add
and
clc
add
push
and
outs
and
push
add
sub
add
outs
movs
add
push
and
hlt
add
push
and
outs
and
push
add
sub
add
and
add
and
test
adc
inc
add
add
idiv
(bad)
inc
outs
and
push
add
outs
and
add
add
add
push
or
pop
or
push
sub
add
push
and
(bad)
call
inc
add
add
idiv
(bad)
inc
outs
and
add
add
add
push
fidivr
adc
outs
and
push
add
add
add
idiv
(bad)
inc
add
sub
add
adc
dec
add
or
add
and
add
fiadd
add
add
add
idiv
(bad)
inc
sbb
add
push
push
adc
and
push
adc
sub
push
push
outs
and
push
and
sub
add
inc
dec
add
add
add
pop
add
adc
add
add
add
push
add
add
add
inc
add
add
add
stos
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
xor
add
add
adc
jnp
add
add
or
jecxz
add
add
pop
push
inc
push
inc
or
pop
push
inc
push
inc
or
jnp
add
add
jnp
add
add
outs
pop
add
and
sub
add
and
test
push
and
add
inc
sbb
add
add
(bad)
(bad)
call
sub
add
and
add
sub
add
and
add
add
outs
pop
add
and
add
add
xchg
add
and
add
jp
sub
push
add
push
and
add
test
push
push
test
push
and
add
test
push
and
add
test
push
and
sub
outs
adc
add
test
push
outs
adc
add
test
push
and
sub
adc
or
adc
add
or
push
adc
adc
add
add
add
push
sub
add
push
adc
jae
add
push
adc
adc
pop
outs
add
push
cmp
inc
add
add
idiv
(bad)
call
movq
add
push
adc
adc
outs
push
add
push
and
add
pop
cmp
or
or
outs
mov
es
inc
add
add
idiv
(bad)
jmp
lods
sub
add
push
and
add
jp
or
or
outs
movs
add
push
cs
sbb
add
add
(bad)
(bad)
jmp
jecxz
add
sub
add
and
add
jp
pop
sub
add
add
idiv
(bad)
call
or
sbb
inc
add
add
idiv
(bad)
call
or
xor
sbb
add
add
(bad)
(bad)
jmp
xor
add
sub
add
jae
add
push
jp
cmp
inc
add
add
idiv
(bad)
inc
outs
mov
mov
add
add
add
push
sub
add
add
(bad)
(bad)
jmp
out
add
sub
add
and
add
jp
pop
xor
sub
idiv
(bad)
dec
pop
adc
sbb
add
add
(bad)
(bad)
dec
pop
sub
add
add
idiv
(bad)
jmp
xchg
add
sub
add
or
xchg
add
and
add
jp
add
pusha
xor
add
adc
cld
add
sub
add
and
add
jp
cmp
add
add
inc
add
add
idiv
(bad)
dec
pop
aas
cmp
sbb
add
add
(bad)
(bad)
dec
pop
or
jecxz
add
or
or
fild
add
sbb
add
(bad)
(bad)
dec
pop
adc
leave
add
add
inc
add
add
idiv
(bad)
dec
pop
adc
add
inc
add
add
idiv
(bad)
dec
pop
sbb
movs
add
add
inc
add
add
idiv
(bad)
dec
pop
sbb
xchg
add
add
pop
sub
add
inc
add
add
idiv
(bad)
dec
pop
cmp
add
sbb
add
(bad)
(bad)
dec
pop
xor
push
inc
add
add
idiv
(bad)
dec
pop
xor
pop
sbb
add
add
(bad)
(bad)
dec
pop
xor
dec
sbb
add
add
(bad)
(bad)
dec
pop
cmp
add
add
idiv
(bad)
dec
pop
ds
aas
sub
inc
add
add
idiv
(bad)
jmp
xchg
das
add
sub
add
and
add
add
xchg
add
and
add
jp
add
adc
add
pop
sub
sbb
add
add
(bad)
(bad)
jmp
add
add
sub
add
and
add
jp
add
pop
sub
sbb
add
add
(bad)
(bad)
dec
pop
adc
sub
inc
add
add
idiv
(bad)
jmp
inc
xor
add
push
add
push
and
add
add
xchg
add
and
add
jp
add
inc
pop
sub
adc
pop
sub
add
add
(bad)
(bad)
jmp
aam
add
sub
add
jae
add
push
jp
pop
xor
daa
pop
inc
add
add
idiv
(bad)
jmp
inc
xor
add
push
add
push
or
xchg
add
and
add
jp
add
and
sub
inc
add
add
idiv
(bad)
dec
pop
sbb
sbb
add
push
add
push
or
xchg
add
and
add
jp
add
outs
mov
add
cs
inc
add
add
idiv
(bad)
jmp
cmps
xor
add
push
add
push
and
add
jp
outs
test
add
add
add
idiv
(bad)
jmp
sti
xor
add
push
add
push
jae
add
push
jp
outs
cwde
add
push
and
and
add
sub
add
and
add
jp
add
inc
pop
sub
or
ds
sbb
inc
add
add
idiv
(bad)
jmp
fwait
xor
add
push
add
push
and
add
jp
add
add
add
pop
sub
adc
sub
add
add
(bad)
(bad)
call
pop
sub
sbb
add
(bad)
(bad)
jmp
or
add
sub
add
and
add
jp
add
pop
sub
add
add
(bad)
(bad)
call
or
outs
cmps
add
push
and
and
add
sub
add
jae
add
push
jp
or
push
xor
inc
add
add
idiv
(bad)
call
or
push
and
or
sbb
add
add
(bad)
(bad)
jmp
mov
push
add
push
and
add
jp
outs
mov
mov
add
and
adc
out
xor
add
push
add
push
and
add
jp
add
or
push
and
adc
outs
mov
sub
add
and
inc
add
add
idiv
(bad)
jmp
and
add
push
add
push
and
add
jp
outs
mov
add
and
add
sbb
add
add
(bad)
(bad)
call
or
push
sbb
inc
add
add
idiv
(bad)
jmp
xchg
add
push
add
push
and
add
jp
outs
test
add
and
inc
add
add
idiv
(bad)
call
or
push
push
xor
mov
push
add
push
and
add
jp
or
push
sbb
inc
add
add
idiv
(bad)
jmp
mov
push
add
push
and
add
jp
adc
sub
sbb
idiv
(bad)
jmp
push
add
push
add
push
jae
add
push
jp
add
pop
sub
adc
push
push
sbb
add
idiv
(bad)
call
or
push
mov
inc
add
add
idiv
(bad)
call
or
outs
mov
es
add
idiv
(bad)
jmp
push
xor
add
push
add
add
push
and
add
adc
mov
add
sub
es
add
push
jp
or
outs
movs
add
push
and
inc
add
add
idiv
(bad)
call
or
inc
add
add
idiv
(bad)
call
or
popf
xor
add
push
add
add
push
mov
add
adc
mov
add
sub
es
add
push
jp
or
or
adc
add
add
add
outs
pop
add
pop
pop
push
push
adc
push
adc
fiadd
push
sub
add
fcom
adc
add
inc
sbb
add
add
add
pop
add
movs
pop
add
pop
add
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
push
and
add
or
or
add
add
jnp
add
add
outs
push
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
sub
add
add
(bad)
(bad)
call
sub
add
add
add
push
jge
add
add
add
jge
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
xor
idiv
(bad)
call
sub
add
and
push
add
push
and
add
sub
add
and
add
jp
jnp
add
add
sbb
add
(bad)
(bad)
inc
add
add
add
adc
add
add
add
xor
add
add
add
jnp
add
add
inc
push
inc
sub
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
sbb
sbb
fadd
add
lods
add
adc
sub
add
sub
add
jae
add
or
sub
add
sub
add
jae
add
or
jnp
add
add
and
add
idiv
(bad)
call
sub
add
and
add
sub
add
and
add
jp
sub
add
push
and
inc
add
add
idiv
(bad)
jmp
mov
add
sub
add
and
add
jp
add
add
add
add
add
add
jae
add
or
add
add
add
add
add
imul
std
add
add
jnp
add
add
push
or
xor
add
add
jnp
add
add
jae
add
push
outs
stc
add
or
add
outs
mov
mov
add
outs
inc
add
or
pop
pop
or
push
mov
lds
jnp
add
add
xchg
add
push
outs
mov
add
push
adc
jnp
add
add
add
add
and
ins
adc
or
add
adc
adc
jnp
add
add
inc
add
and
popa
sbb
add
(bad)
(bad)
call
push
add
add
add
add
pop
outs
mov
add
and
add
outs
pushf
add
push
and
add
and
pushf
add
push
and
add
and
add
push
adc
pop
adc
add
or
inc
add
add
idiv
(bad)
(bad)
ficomp
adc
add
pop
adc
sub
sbb
add
add
(bad)
(bad)
call
pop
outs
pop
add
or
add
jnp
add
add
inc
add
and
add
add
push
jge
add
add
push
jge
add
add
adc
add
add
add
add
or
pop
add
add
add
or
or
add
add
add
add
push
sub
add
sub
add
add
or
inc
add
add
add
add
sub
es
add
add
(bad)
(bad)
call
sub
add
add
add
push
jae
add
push
sub
add
sub
add
add
push
jae
add
push
sub
add
sub
xor
add
add
add
jnp
add
add
and
add
idiv
(bad)
call
sub
add
and
add
sub
add
and
add
jp
sub
jnp
add
add
mov
add
add
add
add
add
adc
add
idiv
(bad)
inc
sub
add
cmp
add
add
add
add
adc
inc
add
add
idiv
(bad)
inc
sub
add
sub
stc
add
add
imul
sbb
add
(bad)
(bad)
inc
jnp
add
add
jle
add
and
jnp
add
add
stos
add
push
or
jnp
add
add
add
push
push
push
push
outs
adc
pop
sub
pop
outs
pop
add
or
fiadd
add
ins
add
push
fsubr
add
add
add
add
or
add
add
add
add
add
add
xor
add
add
add
add
add
sub
push
sub
adc
pop
add
add
add
add
add
add
add
and
add
idiv
(bad)
call
sub
add
and
add
sub
add
and
add
jp
sub
add
add
push
jge
add
add
jnp
add
add
stos
add
push
and
inc
add
and
idiv
(bad)
inc
adc
add
aad
add
sub
add
jae
add
push
jp
pop
jge
add
add
add
adc
adc
cmps
add
add
add
adc
pop
jge
add
add
add
add
push
and
add
sub
add
and
xor
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
outs
mov
add
and
inc
add
add
idiv
(bad)
inc
and
add
push
jge
add
add
jnp
add
add
add
add
or
add
add
add
outs
stc
add
or
add
add
push
jge
add
add
jnp
add
add
outs
pushf
add
push
outs
mov
es
mov
add
outs
inc
add
or
add
adc
str
add
adc
sub
add
sub
add
jae
add
or
jnp
add
add
adc
pop
sub
add
push
add
push
and
add
jp
sub
sbb
add
add
idiv
(bad)
call
sub
add
and
aaa
add
sub
add
jae
add
or
sub
pop
jge
add
add
sub
add
add
add
push
or
add
push
push
add
stos
add
push
add
push
jae
add
push
sub
add
sub
add
xor
add
sub
add
sub
add
and
add
jp
sub
sub
add
sub
add
and
add
jp
sub
pop
jge
add
add
sub
add
and
add
push
and
outs
stos
add
push
add
push
jae
add
push
sub
add
sub
xor
add
add
add
add
add
add
add
(bad)
(bad)
call
sub
add
es
sub
add
push
add
push
and
add
jp
sub
add
sub
add
and
add
push
and
add
sub
add
sub
adc
or
pop
add
add
add
add
sub
add
sub
add
and
add
jp
sub
add
add
(bad)
(bad)
call
sub
add
and
add
sub
add
and
add
jp
sub
add
sub
add
add
arpl
add
jae
add
push
sub
add
sub
xor
pop
add
add
add
add
sub
add
add
(bad)
(bad)
call
sub
add
and
add
sub
add
jae
add
or
sub
add
sub
add
and
add
jp
sub
add
sub
add
add
outs
add
push
and
add
sub
add
sub
add
adc
or
add
sub
add
add
(bad)
(bad)
call
sub
add
and
add
sub
add
jae
add
or
sub
add
add
(bad)
(bad)
jmp
inc
aaa
add
sub
add
and
add
jp
sub
sub
add
and
add
push
and
outs
stos
add
push
add
push
jae
add
push
sub
add
sub
add
xor
add
add
xchg
add
adc
sub
add
add
(bad)
(bad)
call
sub
add
and
add
sub
add
and
add
jp
sub
add
sub
add
jae
add
or
sub
sub
add
and
add
push
and
add
mov
add
push
add
push
add
push
jae
add
push
sub
add
sub
xor
add
add
add
add
add
add
add
(bad)
(bad)
call
sub
add
and
push
add
push
and
add
jp
sub
outs
mov
push
and
inc
add
add
idiv
(bad)
inc
outs
movs
add
push
and
sbb
inc
add
add
idiv
(bad)
jmp
pop
aaa
add
sub
add
and
add
jp
sbb
jae
add
push
sub
add
sub
xor
add
add
add
sub
add
sub
add
and
add
jp
sub
sub
add
and
add
push
and
push
jae
add
push
sub
add
sub
add
xor
add
add
adc
sub
add
add
(bad)
(bad)
call
sub
add
es
sub
add
push
add
push
jae
add
or
sub
or
add
jbe
add
and
xor
jnp
add
add
outs
mov
add
and
inc
add
add
idiv
(bad)
call
or
pop
jge
add
add
jnp
add
add
adc
mov
add
add
add
push
jge
add
add
adc
test
add
sub
add
and
add
jp
sub
add
adc
or
jp
add
sldt
adc
sub
add
add
(bad)
(bad)
call
sub
add
and
push
add
push
and
add
jp
sub
add
jne
add
or
push
xor
sbb
add
add
(bad)
(bad)
inc
pop
jge
add
add
jnp
add
add
adc
mov
add
add
add
push
jge
add
add
and
push
add
push
and
add
jp
add
xor
add
add
add
add
add
jnp
add
add
and
add
add
outs
fild
add
add
add
add
push
arpl
inc
add
pop
shr
add
or
add
add
xor
add
add
add
add
add
jnp
add
add
and
add
add
outs
fild
add
add
add
add
push
arpl
outs
fild
add
sub
add
or
sbb
add
add
add
add
and
inc
add
fs
push
add
pop
adc
fs
push
sub
xor
add
add
add
add
add
add
(bad)
inc
add
sub
add
add
pop
adc
gs
push
sub
add
xor
add
add
add
add
add
add
data16
push
add
pop
and
sub
add
sub
add
or
pop
add
add
add
add
add
addr16
push
add
pop
and
addr16
push
sub
adc
push
add
add
scas
add
adc
outs
popf
add
push
and
jnp
add
add
into
add
or
add
add
add
push
and
add
push
outs
test
es
xor
sbb
add
(bad)
(bad)
call
sub
add
es
outs
mov
es
push
inc
push
push
outs
mov
outs
cmps
add
push
push
push
push
test
add
push
push
outs
stos
add
push
sub
add
and
inc
add
add
idiv
(bad)
inc
and
push
and
outs
mov
add
add
xor
push
and
inc
add
add
idiv
(bad)
inc
pop
outs
xchg
add
push
outs
cmps
add
push
push
push
and
add
(bad)
(bad)
inc
and
push
and
mov
add
sub
push
push
outs
xchg
add
add
add
add
pop
inc
add
add
add
add
add
add
add
add
and
outs
mov
es
push
sbb
inc
add
add
idiv
(bad)
inc
outs
call
outs
call
dec
add
data16
push
add
outs
cwde
add
push
and
add
add
outs
mov
add
sub
push
add
outs
test
sub
push
add
outs
sahf
add
push
imul
push
outs
test
add
and
inc
add
add
idiv
(bad)
inc
add
add
add
into
add
or
add
push
add
sub
add
sub
add
outs
cmps
add
push
and
add
push
push
outs
pushf
add
push
and
inc
add
add
idiv
(bad)
inc
adc
push
add
push
sub
outs
movs
add
push
push
push
push
sbb
add
add
(bad)
(bad)
inc
outs
mov
es
push
adc
add
add
add
into
add
or
add
add
outs
movs
add
push
and
add
push
add
outs
mov
imul
push
outs
mov
add
and
add
push
and
add
and
imul
xor
inc
add
add
idiv
(bad)
jmp
fbstp
add
sub
add
and
add
jp
outs
lods
add
push
jae
add
push
or
add
and
inc
add
add
idiv
(bad)
dec
outs
push
add
push
or
outs
mov
outs
or
add
or
outs
movs
add
push
and
add
or
outs
pop
add
push
sub
or
outs
or
es
or
add
push
and
add
add
mov
fs
push
add
outs
lods
add
push
and
fs
push
or
pop
inc
add
add
idiv
(bad)
inc
jnp
add
add
push
or
add
push
outs
pushf
add
push
sub
sbb
add
(bad)
(bad)
dec
pop
outs
add
push
and
or
add
sub
add
and
add
jp
add
add
add
into
add
or
add
push
and
mov
outs
lods
add
push
and
xor
sbb
add
(bad)
(bad)
inc
jnp
add
add
outs
lods
add
push
and
lods
add
push
and
out
add
or
add
xor
add
add
outs
movs
add
push
and
and
inc
add
add
idiv
(bad)
call
sub
add
and
add
sub
add
jae
add
push
jp
outs
mov
es
push
sbb
inc
add
add
idiv
(bad)
jmp
retf
add
push
add
push
jae
add
push
jp
outs
cmps
add
push
and
sbb
inc
add
add
idiv
(bad)
jmp
aas
cmp
add
push
add
push
and
add
jp
and
add
sub
add
add
xor
fs
push
add
outs
cwde
add
push
sub
push
add
outs
mov
add
and
add
add
outs
test
shr
fs
push
add
outs
sahf
add
push
and
add
push
add
outs
cmps
add
push
imul
add
add
push
and
inc
add
add
idiv
(bad)
inc
outs
movs
add
push
and
adc
inc
add
add
idiv
(bad)
inc
adc
push
sub
add
outs
movs
add
push
adc
data16
push
add
add
push
sub
add
add
(bad)
(bad)
inc
outs
mov
es
inc
add
add
idiv
(bad)
inc
adc
push
sub
add
outs
mov
imul
add
add
push
add
add
push
and
add
and
imul
xor
inc
add
add
idiv
(bad)
jmp
mov
add
sub
add
and
add
jp
push
mov
fs
push
add
add
push
jae
add
push
or
outs
popf
add
push
cmp
inc
add
add
idiv
(bad)
inc
outs
push
add
push
add
add
push
adc
inc
add
add
idiv
(bad)
inc
jnp
add
add
xor
pop
add
add
push
and
add
add
add
push
and
sbb
add
idiv
(bad)
inc
jnp
add
add
xor
sbb
add
add
(bad)
(bad)
inc
add
add
push
and
add
add
add
push
adc
inc
add
add
idiv
(bad)
inc
add
add
push
and
add
pop
pop
outs
pop
add
push
sub
pop
pop
outs
or
es
outs
cli
add
push
and
mov
fs
push
add
outs
mov
add
sub
add
add
(bad)
(bad)
call
sub
add
outs
mov
add
and
add
add
sub
push
add
sub
push
add
add
push
and
sbb
add
add
(bad)
(bad)
inc
add
add
push
and
add
sub
add
add
push
sub
pop
inc
add
add
idiv
(bad)
inc
pop
adc
addr16
push
sub
add
sub
add
add
add
push
adc
adc
push
sub
add
outs
pop
add
and
add
push
push
mov
xor
sbb
add
add
(bad)
(bad)
inc
jnp
add
add
push
push
mov
out
add
or
mov
xor
sbb
add
add
idiv
(bad)
inc
jnp
add
add
push
or
add
add
add
push
and
inc
add
add
idiv
(bad)
call
lea
add
sub
mov
add
add
add
push
and
add
and
imul
add
add
idiv
(bad)
inc
jnp
add
add
push
or
add
pop
cs
mov
or
imul
xor
add
add
add
add
add
add
add
add
add
add
and
add
idiv
(bad)
call
sub
add
add
add
add
fild
push
add
sub
adc
add
add
sub
add
or
sub
add
add
(bad)
(bad)
call
sub
add
add
push
add
add
push
and
add
xor
add
sub
add
and
adc
add
idiv
(bad)
call
sub
add
add
push
add
add
push
and
xor
add
add
add
add
add
jnp
add
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
jnp
add
add
inc
add
add
add
add
jnp
add
add
add
xor
add
add
mov
add
add
sub
add
and
xor
sub
add
or
dec
pop
mov
sub
add
or
push
or
add
or
xor
sbb
add
add
(bad)
(bad)
call
sub
add
es
push
or
add
or
or
sub
and
cmp
add
push
add
push
jae
add
push
jp
push
xor
xor
sbb
add
adc
add
add
idiv
(bad)
call
sub
add
and
cmp
add
push
add
push
and
add
jp
lds
add
or
sub
add
and
or
push
pop
mov
add
add
add
das
bndstx
add
add
(bad)
(bad)
dec
add
adc
outs
in
add
and
add
inc
add
add
idiv
(bad)
dec
add
add
add
idiv
(bad)
inc
pop
push
adc
push
add
push
adc
or
add
add
add
or
add
add
inc
add
add
idiv
(bad)
dec
add
push
jle
(bad)
call
inc
add
add
idiv
(bad)
dec
or
sub
add
idiv
(bad)
jmp
push
cmp
add
push
add
push
or
mov
add
sub
es
add
push
jp
add
add
add
idiv
(bad)
inc
outs
popf
add
push
and
add
push
outs
test
add
sub
add
adc
or
dec
add
add
add
adc
or
outs
pushf
add
push
and
add
and
xor
inc
add
add
idiv
(bad)
call
sub
add
es
or
add
add
push
and
add
and
inc
add
add
idiv
(bad)
call
adc
push
sub
adc
or
add
sub
add
and
push
or
sub
add
and
add
jmp
or
pop
outs
in
add
or
add
dec
outs
jmp
or
or
add
or
or
add
pop
push
push
add
push
dec
add
sub
and
cmp
add
push
add
push
jae
add
push
jp
push
xor
add
(bad)
(bad)
call
sub
add
sub
xor
add
add
add
outs
pushf
add
push
and
add
and
add
push
or
sub
add
and
push
push
add
mov
add
das
pop
sbb
add
add
(bad)
(bad)
call
sub
add
es
imul
dec
outs
jmp
or
adc
or
push
push
xor
inc
add
add
idiv
(bad)
inc
push
adc
outs
int
add
add
add
outs
jmp
or
adc
outs
out
add
or
add
dec
adc
push
push
push
add
push
push
push
adc
push
or
add
push
push
adc
push
push
xor
inc
add
add
idiv
(bad)
inc
push
push
popa
(bad)
(bad)
call
inc
add
add
idiv
(bad)
call
add
cs
add
add
(bad)
(bad)
jmp
push
cmp
add
push
add
push
or
add
ja
add
sub
es
add
push
jp
sub
pop
inc
add
add
idiv
(bad)
inc
outs
popf
add
push
pop
outs
enter
outs
test
add
sub
xor
add
add
add
adc
mov
sub
add
and
inc
add
outs
inc
add
or
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
outs
mov
add
and
add
or
sub
xor
add
add
sub
add
adc
ins
add
push
and
inc
add
outs
inc
add
or
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
outs
mov
add
and
add
or
sub
add
adc
or
fwait
add
add
test
add
add
add
push
sub
sbb
add
(bad)
(bad)
call
sub
add
add
add
mov
push
or
outs
test
or
push
sbb
inc
add
add
idiv
(bad)
inc
push
cs
add
idiv
(bad)
jmp
and
jae
add
push
or
ds
pop
or
jae
add
push
jae
add
push
or
push
outs
xchg
add
or
sub
lods
cmp
add
push
add
push
add
add
push
and
add
sub
es
add
push
jp
sub
sbb
add
add
mov
add
adc
add
pushf
add
push
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
cmps
add
push
or
sub
add
add
(bad)
(bad)
inc
jnp
add
add
outs
pushf
add
push
and
add
push
outs
rol
push
and
or
add
sbb
add
add
(bad)
(bad)
inc
or
outs
int
add
and
popf
add
push
and
add
and
adc
popf
add
push
and
add
push
sub
outs
popf
add
push
and
add
and
and
cmp
add
push
add
push
and
add
jp
add
push
add
add
add
add
into
add
or
add
push
and
add
and
add
add
or
sub
add
fimul
add
pop
adc
pop
add
or
add
add
add
into
add
or
outs
popf
add
push
adc
add
push
add
popf
add
push
and
add
and
xor
sbb
add
add
(bad)
(bad)
inc
jnp
add
add
add
adc
add
popf
add
push
and
add
fisubr
pop
sub
sbb
add
(bad)
(bad)
inc
outs
pop
add
or
add
push
add
add
popf
add
push
push
push
cmps
add
push
sub
add
add
add
add
jmp
or
add
add
add
jmp
add
xor
add
add
add
add
push
add
add
add
add
into
add
or
pushf
add
push
and
add
and
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
lahf
add
push
and
inc
add
add
idiv
(bad)
inc
add
popf
add
push
outs
ja
add
and
outs
pushf
add
push
and
add
and
pop
or
outs
int
add
and
add
push
ficom
sub
sbb
add
(bad)
(bad)
dec
outs
pop
add
or
ficom
sub
pop
inc
add
add
idiv
(bad)
inc
outs
pop
add
or
add
add
add
into
add
or
pushf
add
push
and
outs
cmps
add
push
sub
add
add
add
add
adc
add
add
add
add
cmp
add
adc
sbb
add
or
pushf
add
push
outs
pop
add
and
adc
add
idiv
(bad)
call
sub
add
es
or
sub
add
add
dec
outs
jmp
add
push
add
add
add
into
add
or
push
add
pushf
add
push
and
add
and
pop
or
jnp
add
add
push
outs
sub
add
and
test
push
or
add
and
jnp
add
add
into
add
or
outs
pop
adc
pop
or
sub
sbb
add
add
idiv
(bad)
inc
movs
add
push
and
sbb
inc
add
add
idiv
(bad)
inc
movs
add
push
and
add
pop
pop
sbb
add
pushf
add
push
and
add
and
sub
add
and
push
sub
pushf
add
push
and
add
and
adc
add
jnp
add
add
add
add
push
add
jnp
add
add
pop
sub
add
sub
xor
mov
add
adc
add
push
add
add
pushf
add
push
outs
movs
add
push
push
push
jns
inc
add
add
idiv
(bad)
call
sub
add
es
pushf
add
push
and
add
pop
sbb
or
jnp
add
add
push
outs
sub
add
add
test
push
and
test
push
and
test
add
or
pop
outs
sub
add
add
jnp
add
add
jnp
add
add
outs
pushf
add
push
and
add
and
add
push
add
jnp
add
add
jnp
add
add
jo
add
sub
add
or
cmp
add
add
sub
add
add
(bad)
(bad)
call
sub
add
and
cmp
add
push
add
push
and
add
jp
push
jge
add
add
add
add
add
sub
add
add
xor
add
add
add
add
sub
es
add
add
(bad)
(bad)
call
sub
add
and
add
sub
add
jae
add
or
add
cmp
sbb
pop
sub
or
jl
add
sub
xor
add
add
adc
jnp
add
add
int
add
or
add
add
add
(bad)
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
jnp
add
add
fld
push
and
add
pop
outs
add
test
add
rol
or
adc
test
add
pop
add
add
add
(bad)
add
push
and
pop
inc
add
add
idiv
(bad)
inc
add
add
add
jnp
add
add
fiadd
push
jge
add
add
jnp
add
add
add
and
jnp
add
add
rol
or
adc
test
add
sub
es
add
push
or
or
add
and
inc
add
add
adc
add
push
sbb
inc
add
add
idiv
(bad)
jmp
stos
cmp
add
push
add
push
and
add
jp
and
or
pop
outs
jmp
jnp
add
add
stos
add
push
adc
imul
adc
imul
pop
outs
into
add
or
add
or
adc
sub
sbb
add
(bad)
(bad)
dec
outs
pop
add
or
add
add
add
(bad)
add
push
and
add
add
add
fadd
push
and
add
sub
sub
add
add
add
add
mov
add
add
sbb
push
add
add
adc
push
push
push
push
or
push
add
cmp
push
sub
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
add
test
add
push
jmp
or
jne
jnp
add
add
(bad)
add
push
pop
xor
add
test
add
push
jmp
or
jnp
add
add
xchg
add
push
outs
mov
add
sub
jnp
add
add
xlat
add
push
sub
add
push
and
add
sub
add
outs
push
add
push
add
add
add
sbb
add
jnp
add
add
push
add
or
add
jge
add
add
jnp
add
add
add
add
and
mov
add
or
add
adc
adc
cmp
inc
add
add
idiv
(bad)
call
push
outs
sahf
add
push
and
pop
inc
add
add
add
add
add
add
add
jnp
add
or
pop
inc
add
add
idiv
(bad)
inc
adc
push
adc
sub
add
sub
adc
push
sub
add
sub
add
push
sub
add
sub
sub
add
push
sub
add
add
(bad)
(bad)
dec
sub
adc
test
add
outs
jmp
adc
push
sub
add
or
sbb
add
add
idiv
(bad)
call
add
test
add
into
add
or
outs
pop
add
or
(bad)
(bad)
ficomp
adc
add
or
or
sbb
add
add
idiv
(bad)
call
or
add
or
add
cmp
push
and
sub
pop
inc
add
add
idiv
(bad)
call
add
test
add
outs
jmp
add
test
add
into
add
or
or
jnp
add
add
add
add
adc
sub
adc
outs
test
add
and
add
adc
adc
sub
push
adc
or
add
push
outs
imul
and
adc
outs
pop
add
or
inc
add
add
idiv
(bad)
(bad)
ficomp
adc
jne
add
add
or
or
adc
inc
add
add
idiv
(bad)
call
or
pop
add
or
add
add
add
lar
add
add
jle
add
and
jnp
add
add
stos
add
push
adc
add
add
add
adc
add
add
add
adc
adc
push
fimul
push
sub
adc
outs
pop
add
or
adc
test
add
into
add
or
std
add
add
add
add
and
and
add
adc
outs
test
add
and
add
adc
adc
cmp
add
add
inc
add
add
idiv
(bad)
call
adc
add
push
and
push
pop
inc
add
add
idiv
(bad)
call
adc
add
push
and
add
and
xor
add
idiv
(bad)
call
add
test
add
adc
add
push
outs
jmp
add
adc
add
push
and
add
and
add
push
adc
outs
mov
push
xchg
add
add
idiv
(bad)
call
add
test
add
adc
add
push
and
add
adc
outs
popf
add
push
and
add
and
add
adc
add
push
and
add
and
add
adc
adc
add
push
and
add
and
add
sub
adc
adc
add
push
and
add
and
add
push
adc
adc
add
push
and
add
and
add
push
adc
outs
pop
add
or
(bad)
call
idiv
(bad)
(bad)
ficomp
adc
jne
add
add
adc
adc
sbb
add
add
(bad)
(bad)
call
adc
add
or
fidivr
adc
xor
sub
add
add
(bad)
(bad)
call
add
cmp
es
sbb
add
add
(bad)
(bad)
call
add
cmp
aas
add
or
sbb
sub
adc
test
add
outs
pop
add
or
add
test
add
rol
add
add
jge
add
add
sub
add
add
add
rol
or
add
add
add
fadd
push
and
add
sub
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
xor
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
jnp
add
add
adc
in
add
sub
add
and
add
jp
add
xor
add
add
add
add
add
sub
add
xor
add
add
pop
add
add
add
add
imul
add
push
lea
add
jge
add
add
sub
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
sub
inc
add
add
idiv
(bad)
inc
jnp
add
add
or
jecxz
add
add
add
add
rol
or
pop
push
sub
add
fadd
sub
push
sub
add
adc
add
add
or
add
add
xor
add
add
add
add
add
add
add
sub
xor
add
add
sub
add
add
add
add
rol
add
and
das
adc
and
add
sub
add
and
add
jp
jnp
add
add
rol
add
or
push
das
adc
and
add
sub
add
and
add
jp
rol
push
(bad)
pusha
shr
add
xor
add
add
add
add
add
sub
test
push
pop
adc
sub
add
add
or
adc
add
add
sub
add
test
push
and
bound
add
add
xor
add
add
add
jnp
add
add
add
add
add
or
or
sub
push
outs
pop
add
or
pop
sub
adc
add
add
adc
or
add
add
xor
les
add
test
add
int3
add
or
aas
cmp
add
push
add
push
jae
add
push
jp
and
add
add
add
int
add
and
(bad)
inc
add
xchg
push
or
push
push
and
add
idiv
(bad)
call
sub
add
and
push
add
push
and
add
jp
sub
or
sub
or
sub
outs
or
add
outs
adc
sub
outs
adc
add
and
add
test
push
and
pop
push
xor
idiv
(bad)
call
pop
loopne
inc
add
add
or
jnp
add
add
or
sub
add
add
or
jnp
add
and
add
or
jle
add
or
add
add
adc
pop
and
inc
add
push
or
(bad)
inc
add
dec
sbb
add
add
(bad)
(bad)
dec
and
inc
add
aaa
sbb
add
add
(bad)
(bad)
call
add
(bad)
inc
add
and
add
sbb
add
add
(bad)
(bad)
call
push
adc
add
sbb
add
add
(bad)
(bad)
call
adc
add
push
dec
push
pop
push
push
and
adc
add
xchg
push
and
or
push
sbb
inc
add
add
idiv
(bad)
jmp
jle
add
sub
add
and
add
jp
sub
es
xchg
push
and
sub
es
add
add
or
add
or
sub
outs
adc
or
push
dec
push
push
push
sub
idiv
(bad)
jmp
mov
add
sub
add
and
stos
add
add
xchg
add
and
add
jp
sub
es
test
push
and
test
push
and
test
push
and
test
push
and
xchg
push
and
xchg
push
and
sub
adc
add
and
or
add
add
add
or
add
add
(bad)
(bad)
call
push
push
sbb
add
pop
inc
add
add
idiv
(bad)
inc
push
sbb
add
pop
jge
add
add
jnp
add
add
push
sbb
inc
add
add
idiv
(bad)
jmp
push
cmp
add
push
jae
add
push
jp
jnp
add
add
jnp
add
add
push
pop
push
outs
sub
add
es
push
or
add
sub
and
add
cs
inc
add
add
idiv
(bad)
jmp
dec
cmp
add
push
and
add
jp
sub
add
test
push
and
sub
adc
add
test
push
and
sub
adc
sub
adc
add
test
push
and
add
test
push
outs
adc
add
adc
add
test
push
and
sub
adc
add
test
push
and
test
push
and
test
push
and
sub
outs
adc
adc
adc
sub
add
or
add
adc
add
add
add
sbb
adc
sub
add
adc
adc
adc
sub
push
and
sbb
movups
adc
jae
add
push
adc
outs
adc
add
push
adc
pop
outs
movs
add
push
adc
pop
outs
cmps
add
push
adc
add
push
adc
lahf
add
push
adc
add
push
adc
add
push
adc
add
push
adc
push
pop
sub
add
add
(bad)
(bad)
call
sbb
shr
add
push
sub
adc
and
add
add
outs
mov
add
adc
push
xor
adc
lea
add
adc
add
add
add
push
sub
add
push
adc
add
push
adc
add
adc
push
xor
jnp
add
add
sbb
adc
sub
add
adc
adc
sub
push
and
add
add
add
add
or
data16
add
or
or
push
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
or
or
add
add
add
add
pop
sub
add
and
xor
add
add
add
or
cwde
add
push
and
sub
inc
add
add
idiv
(bad)
call
sub
add
es
mov
add
pop
inc
pop
sub
add
add
(bad)
(bad)
push
add
push
or
add
mov
sub
add
push
add
xor
push
sub
add
add
(bad)
(bad)
jmp
xchg
cmp
add
push
and
add
jp
pop
add
add
add
outs
lea
add
and
add
or
push
add
mov
push
cmp
add
cwde
add
push
and
xor
add
sbb
add
add
(bad)
(bad)
inc
add
mov
sub
add
push
add
xor
push
and
inc
add
add
idiv
(bad)
jmp
out
add
sub
add
jae
add
push
jp
outs
mov
add
and
inc
add
add
outs
in
add
and
add
cs
sbb
add
add
(bad)
(bad)
call
lea
add
add
add
inc
add
sub
add
and
pop
or
adc
add
sub
add
mov
add
add
add
add
or
add
push
jp
lea
add
adc
add
push
push
sbb
add
or
scas
add
push
and
pop
add
add
add
adc
push
jae
add
push
adc
adc
outs
pop
add
push
and
or
xchg
adc
push
xchg
xor
sbb
add
add
idiv
(bad)
call
or
xchg
adc
pop
xchg
cs
inc
add
add
idiv
(bad)
jmp
je
add
sub
add
and
add
jp
adc
push
jae
add
push
or
adc
movs
add
sub
add
and
add
jp
sub
adc
sldt
add
add
or
cwde
add
push
and
and
mov
add
pop
inc
pop
cmp
inc
add
add
idiv
(bad)
call
sub
add
es
add
push
or
add
mov
das
add
push
add
xor
push
and
inc
add
add
idiv
(bad)
jmp
xchg
cmp
add
push
and
add
jp
jae
add
push
pop
add
add
add
outs
and
add
and
add
or
add
cmps
add
push
and
push
sbb
add
add
(bad)
(bad)
inc
mov
add
and
adc
add
sahf
add
push
and
sub
or
add
cmps
add
push
sub
sub
add
xor
add
or
inc
add
add
add
sub
add
push
push
pop
or
add
cs
add
idiv
(bad)
call
sub
add
es
add
sub
add
and
add
jp
add
add
xor
add
add
add
or
inc
add
add
jae
add
or
pop
push
outs
sbb
add
push
pop
or
pop
sbb
pushf
add
push
push
mov
out
add
or
add
add
or
pop
add
add
add
add
sub
add
xor
add
add
add
add
adc
jne
add
add
add
jge
add
or
sub
add
add
(bad)
(bad)
call
sub
add
es
sub
add
add
(bad)
(bad)
call
or
mov
add
adc
add
pop
sub
add
add
(bad)
(bad)
call
or
xchg
add
add
outs
sahf
add
push
and
outs
sahf
add
push
and
pop
sub
push
or
add
and
inc
add
add
idiv
(bad)
inc
outs
sahf
add
push
pop
cs
add
idiv
(bad)
call
sub
push
adc
adc
or
sub
add
push
and
add
and
add
push
outs
pop
add
pop
adc
das
push
sbb
add
add
(bad)
(bad)
call
add
sbb
add
add
idiv
(bad)
call
or
add
or
sub
add
or
xor
add
add
add
add
add
adc
add
adc
add
sub
sbb
add
add
add
lsl
add
add
add
add
adc
pop
add
add
add
add
add
add
adc
add
adc
add
sub
sbb
add
add
add
add
push
jge
add
add
jnp
add
add
outs
stos
add
push
add
jge
add
add
add
add
xor
add
add
add
add
add
add
sub
add
adc
pop
add
add
add
add
add
add
adc
add
adc
add
sub
sbb
add
add
add
add
push
jge
add
add
jnp
add
add
outs
stos
add
push
add
jge
add
add
add
add
xor
add
add
add
add
add
add
adc
add
adc
add
sub
sbb
add
add
add
lsl
add
add
add
add
add
or
add
add
add
add
adc
add
adc
add
adc
add
sub
pop
inc
add
sub
add
jae
add
push
jp
add
xor
add
add
add
add
add
adc
add
adc
add
adc
add
sub
add
add
add
add
mov
es
add
add
add
add
add
add
xor
add
add
add
add
add
push
add
call
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
sub
inc
add
add
idiv
(bad)
call
sub
add
add
jnp
add
add
mov
data16
add
add
add
jnp
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
adc
add
sub
add
adc
add
add
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
rol
push
and
add
add
xor
add
add
add
sub
add
add
add
pop
jge
add
add
add
add
xor
add
add
add
add
add
sub
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
sub
jnp
add
add
imul
add
add
add
add
add
sub
jnp
add
add
push
add
or
add
sub
add
add
or
sub
add
add
add
add
add
add
sbb
inc
add
add
idiv
(bad)
call
sub
add
add
sub
adc
pop
add
add
add
xor
add
add
add
jnp
add
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
jnp
add
add
jnp
add
jge
add
add
add
add
xor
add
add
add
add
add
jnp
add
add
sbb
add
add
(bad)
(bad)
call
sub
add
add
jnp
add
add
jle
add
and
add
add
xor
add
add
add
outs
lods
add
push
add
add
add
add
add
xor
add
add
add
adc
add
sub
add
add
add
add
add
xor
add
add
add
add
add
jnp
add
add
jnp
add
add
data16
add
add
add
or
or
add
add
add
add
add
adc
add
sbb
add
sldt
adc
and
add
pop
and
add
add
add
add
imul
or
push
add
add
add
add
sub
add
or
add
add
add
add
add
or
add
add
add
add
sub
add
add
or
add
add
add
add
push
sub
add
xor
add
add
add
add
add
add
add
rol
add
sub
xor
add
add
add
add
add
jnp
add
add
fld
add
and
add
or
add
add
add
add
push
sub
add
xor
add
add
add
add
add
push
add
xor
add
add
add
add
add
add
add
into
add
or
add
or
add
add
add
add
sub
add
add
or
add
add
add
add
push
sub
add
xor
add
add
add
add
add
push
add
xor
add
add
add
add
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
outs
out
add
or
add
xor
add
add
add
sub
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
test
add
push
add
add
add
and
add
add
pop
jge
add
add
add
add
xor
add
add
rol
adc
jnp
add
add
jnp
add
add
adc
add
idiv
(bad)
call
sub
add
es
add
add
or
jecxz
add
add
add
add
and
add
or
push
jge
add
add
push
outs
sub
add
add
add
add
rol
add
and
push
sub
add
fmul
sub
adc
add
add
add
pop
add
add
add
add
or
add
add
add
add
sub
add
sbb
or
nop
add
add
add
adc
jnp
add
add
or
jecxz
add
add
add
add
jnp
add
add
xor
inc
add
add
idiv
(bad)
call
sub
add
add
add
add
jnp
add
add
imul
sub
inc
add
add
add
jnp
add
add
outs
sub
add
and
push
add
add
add
outs
in
add
and
xor
add
add
push
jge
add
add
or
pop
push
sub
add
fadd
sub
adc
add
add
pop
add
add
add
or
push
add
add
add
add
add
or
add
xor
add
add
add
add
add
add
or
add
xor
add
add
adc
jnp
add
add
add
pop
inc
add
add
add
add
or
add
add
pop
add
add
add
pop
or
adc
jnp
add
add
pop
or
or
jnp
add
add
pop
or
add
add
add
and
add
(bad)
(bad)
call
sub
add
and
push
add
push
jae
add
or
add
add
add
sbb
inc
add
add
idiv
(bad)
jmp
aam
add
sub
add
and
add
jp
push
jge
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
xor
add
add
add
add
add
jnp
add
add
jnp
add
add
sub
add
xor
add
add
jns
add
add
add
add
pop
or
add
add
add
adc
fwait
inc
add
sub
add
and
add
jp
add
add
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
inc
add
sub
add
jae
add
or
push
jge
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
add
add
xchg
add
or
add
or
push
add
add
add
add
sub
add
add
add
add
add
or
adc
add
add
add
add
add
add
pop
pop
sub
or
add
xor
add
add
add
add
add
sub
add
xor
add
or
or
pop
pop
sub
or
push
sub
add
add
or
push
add
add
add
add
sub
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
fadd
push
add
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
and
add
sub
add
and
add
jp
add
add
push
and
add
add
add
xor
add
add
add
add
add
add
sub
add
push
sub
add
adc
push
add
add
add
add
jnp
add
add
sub
add
add
add
sub
add
push
and
add
add
add
add
sbb
sub
or
add
and
sub
add
or
add
add
add
add
add
sbb
sub
or
add
jnp
add
add
sbb
pop
add
add
adc
jnp
add
add
and
inc
add
add
idiv
(bad)
call
sub
add
and
push
add
push
jae
add
push
jp
or
jnp
add
add
sub
add
push
and
add
add
add
rol
or
jnp
add
add
sub
jnp
add
add
jnp
add
add
xchg
add
or
or
sub
add
or
jnp
add
add
pop
pop
sub
or
ficomp
es
or
add
add
xchg
add
or
jnp
add
add
aas
add
or
sbb
sub
adc
add
add
add
add
sub
add
adc
pop
add
add
add
add
outs
rol
or
add
add
add
sub
add
push
jge
add
add
jnp
add
add
jnp
add
add
sub
jnp
add
add
sbb
add
or
add
add
jnp
add
add
adc
push
add
add
pop
add
add
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
or
inc
add
add
idiv
(bad)
inc
sub
sbb
add
add
(bad)
(bad)
inc
outs
rol
or
jnp
add
add
sbb
add
or
sub
add
push
sub
add
add
or
daa
add
add
add
add
jnp
add
add
push
sbb
add
add
idiv
(bad)
call
sub
add
add
add
add
rol
or
add
xor
add
add
add
add
adc
add
add
add
(bad)
(bad)
call
sub
add
sub
add
or
add
add
or
or
es
add
push
add
or
add
pop
pop
or
dec
aas
add
sub
add
and
add
add
mov
add
sub
add
and
add
stos
add
or
inc
add
add
idiv
(bad)
inc
sub
sbb
add
(bad)
(bad)
call
add
mov
add
adc
sub
adc
or
adc
ficomp
sub
adc
adc
sub
add
and
adc
push
cmp
(bad)
call
inc
add
add
idiv
(bad)
inc
sub
add
add
add
or
add
add
add
adc
add
add
or
or
add
add
add
add
sub
add
push
sub
xor
add
add
add
add
add
add
fadd
push
sub
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jae
add
or
add
add
jnp
add
add
add
add
or
dec
add
add
add
add
jnp
add
add
and
add
(bad)
(bad)
call
sub
add
and
push
add
push
jae
add
push
jp
add
add
add
icebp
add
or
add
jge
add
add
jnp
add
add
add
add
or
xor
add
add
add
add
add
or
add
add
push
push
jmp
add
add
add
add
add
lea
add
sub
jnp
add
add
adc
or
push
add
add
sub
add
add
or
add
add
(bad)
(bad)
call
sub
add
es
add
or
add
add
idiv
(bad)
inc
push
push
jmp
push
and
adc
add
sub
outs
rol
or
add
or
sub
add
xor
add
add
add
add
add
add
add
or
jnp
add
add
rol
or
add
or
pop
add
add
add
add
sub
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
sub
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
sbb
add
add
add
add
retf
or
add
sbb
add
or
add
add
pop
jge
add
add
add
or
push
add
add
add
add
sub
add
or
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
push
add
add
add
add
jnp
add
add
retf
add
or
add
or
push
add
add
add
add
jnp
add
add
int3
add
or
add
or
push
add
add
add
add
jnp
add
add
xchg
add
or
add
or
or
add
add
add
add
add
add
int
add
sub
xor
add
add
add
add
add
add
add
into
add
or
add
or
or
add
add
jnp
add
add
outs
jmp
add
add
xor
add
add
add
add
add
jnp
add
add
fld
add
and
add
or
or
add
add
add
add
add
add
rol
add
sub
xor
add
add
add
add
add
jnp
add
add
add
sub
add
and
or
or
add
add
jnp
add
add
outs
pop
add
or
add
add
xor
add
add
add
add
add
jnp
add
add
add
outs
in
add
sub
add
or
sldt
add
add
add
jnp
add
add
add
outs
out
add
or
add
xor
inc
add
add
jnp
add
add
add
add
add
add
sub
add
idiv
(bad)
call
sub
add
es
sub
sbb
add
(bad)
(bad)
inc
push
jge
add
add
outs
rol
or
adc
inc
add
add
add
add
adc
outs
test
or
or
or
and
add
sbb
outs
cwde
add
push
sub
add
outs
mov
add
and
add
add
shr
pop
add
outs
sahf
add
push
and
add
jg
add
pop
inc
add
add
idiv
(bad)
call
sub
add
add
outs
cmps
add
push
and
add
pushf
add
push
and
inc
add
add
idiv
(bad)
inc
adc
push
add
push
cmp
outs
test
add
and
outs
movs
add
push
and
add
add
push
and
pop
sub
add
outs
mov
sub
add
add
sbb
inc
add
add
idiv
(bad)
inc
jnp
add
add
into
add
or
add
push
add
sub
add
sbb
inc
add
add
idiv
(bad)
inc
jnp
add
add
into
add
or
add
push
add
add
push
and
sub
add
push
add
push
sub
add
sub
add
sub
add
mov
add
add
add
push
and
add
and
imul
xor
and
aaa
add
sub
add
and
add
jp
outs
lods
add
push
and
add
adc
outs
pushf
add
push
and
add
sbb
add
(bad)
(bad)
inc
sub
add
add
add
push
add
push
pop
sub
sbb
add
(bad)
(bad)
call
add
outs
mov
outs
or
add
adc
outs
movs
add
push
and
add
sub
adc
add
adc
add
adc
outs
pop
add
push
adc
outs
add
push
sub
add
add
(bad)
(bad)
jmp
cmps
aas
add
sub
add
and
add
jp
sub
sbb
add
add
(bad)
(bad)
inc
add
add
push
and
add
push
sub
adc
outs
or
adc
cli
add
push
and
or
add
add
add
add
imul
add
add
idiv
(bad)
inc
jnp
add
add
push
or
add
add
add
push
sub
sbb
add
add
(bad)
(bad)
dec
sub
pop
inc
add
add
idiv
(bad)
inc
push
and
add
add
into
add
or
add
push
adc
sbb
inc
add
add
idiv
(bad)
inc
jnp
add
add
add
imul
add
adc
or
add
add
add
adc
push
push
add
add
pop
push
push
xchg
add
or
das
push
sbb
add
add
(bad)
(bad)
call
sub
add
es
and
push
outs
sub
add
and
adc
add
retf
sbb
add
(bad)
(bad)
inc
outs
into
add
or
and
jge
add
jns
add
add
add
add
into
add
or
push
dec
push
push
sub
add
sub
sub
add
xor
pop
add
sub
push
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
push
dec
push
pop
sub
add
sub
add
sub
add
sub
add
add
adc
push
add
add
adc
and
inc
add
daa
sbb
add
add
idiv
(bad)
call
sub
add
es
add
outs
xor
sbb
add
add
(bad)
(bad)
inc
add
push
add
push
dec
add
add
add
sub
add
sub
add
(bad)
inc
add
and
inc
add
add
idiv
(bad)
inc
and
inc
add
sbb
(bad)
inc
add
sbb
add
push
push
add
push
push
add
outs
xor
sbb
add
add
(bad)
(bad)
inc
adc
push
sub
add
sub
add
outs
xor
sbb
add
add
(bad)
(bad)
inc
adc
push
sub
add
add
push
add
or
add
idiv
(bad)
call
sub
add
imul
add
xor
sbb
add
add
idiv
(bad)
jmp
in
aas
add
sub
add
and
add
add
xchg
add
and
add
jp
push
sub
add
xor
push
add
imul
add
add
xor
add
add
sub
add
add
add
add
rol
add
and
das
push
jae
add
or
jnp
add
add
rol
add
and
das
sbb
inc
add
add
idiv
(bad)
call
sub
add
es
add
or
pop
push
bound
add
add
xor
add
add
add
sub
add
adc
add
and
pusha
sub
add
add
or
adc
add
add
sub
add
adc
es
and
sub
add
add
or
sub
add
add
add
add
add
add
and
add
add
outs
fild
add
add
add
add
push
arpl
inc
add
pop
shr
add
or
add
add
xor
add
add
add
add
add
jnp
add
add
and
add
add
outs
fild
add
add
add
add
push
arpl
outs
fild
add
sub
add
or
adc
add
add
add
add
sub
add
pop
adc
pop
add
add
xor
add
add
add
add
add
add
(bad)
inc
add
sub
add
pop
adc
sbb
add
xor
add
add
add
add
add
imul
add
pop
and
sub
add
xor
add
add
add
add
add
add
sbb
pop
and
sbb
adc
adc
popf
add
add
add
adc
sub
add
add
(bad)
(bad)
call
sub
add
and
push
add
push
and
add
jp
or
outs
mov
add
push
pop
sub
add
push
dec
pop
or
sbb
outs
cmps
add
push
and
add
pop
or
outs
pushf
add
push
and
add
add
push
and
add
add
outs
mov
sbb
adc
sub
add
outs
movs
add
push
imul
add
outs
mov
sub
add
pop
or
sub
add
adc
adc
test
add
sldt
adc
sub
or
and
pop
or
adc
dec
inc
add
sub
add
and
add
jp
add
adc
es
stc
add
push
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
sub
add
outs
cmc
add
push
add
sub
add
outs
test
sub
es
cmc
add
push
add
sub
es
test
or
sub
add
add
add
add
add
push
jge
add
add
add
jae
add
push
sub
add
add
inc
sub
add
add
add
add
xor
add
add
add
add
add
add
push
jge
add
add
add
jae
add
push
add
push
add
push
sub
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
sub
add
add
add
add
add
add
pop
sbb
add
add
idiv
(bad)
call
sub
add
add
add
add
cdq
add
push
sub
sub
add
adc
xor
cmp
add
add
adc
jnp
add
add
adc
xchg
inc
add
sub
add
jae
add
or
jnp
add
add
sbb
add
(bad)
(bad)
call
sub
add
add
daa
add
rol
add
mov
add
and
push
dec
add
cs
sbb
add
(bad)
(bad)
inc
and
add
inc
add
add
idiv
(bad)
inc
and
add
inc
add
add
idiv
(bad)
inc
and
push
pop
adc
and
push
push
xor
sbb
add
add
idiv
(bad)
inc
outs
rol
or
push
and
xor
adc
inc
add
add
idiv
(bad)
inc
and
pop
or
push
add
add
add
mov
add
and
push
dec
add
cmp
inc
add
add
idiv
(bad)
jmp
mov
push
add
push
and
inc
add
sub
add
push
mov
add
sub
sub
es
add
push
jp
jnp
add
add
mov
add
push
rol
add
mov
add
jge
add
add
add
add
add
mov
add
jge
add
add
jnp
add
add
mov
add
or
jnp
add
add
mov
add
and
jnp
add
add
mov
add
and
add
add
add
add
add
mov
add
and
add
add
jnp
add
add
mov
add
and
jnp
add
add
mov
add
and
jnp
add
add
pop
pop
inc
adc
adc
adc
add
add
add
pop
outs
lods
add
push
add
add
add
pop
sub
add
and
adc
pop
jae
add
push
jge
add
add
jnp
add
add
jnp
add
add
mov
add
add
add
add
jnp
add
add
stos
add
push
add
add
add
pop
sub
add
add
(bad)
(bad)
inc
jnp
add
add
push
outs
pop
outs
test
add
add
add
add
jnp
add
add
outs
pop
outs
movs
add
push
add
add
add
jnp
add
add
outs
pop
outs
cmps
add
push
add
add
add
pop
sbb
inc
add
pop
shr
add
push
cmp
sub
sbb
add
(bad)
(bad)
inc
jnp
add
add
push
outs
pop
outs
test
add
add
add
add
push
push
sbb
add
(bad)
(bad)
inc
jnp
add
add
jnp
add
add
outs
pop
outs
movs
add
push
add
add
add
push
push
sbb
add
add
(bad)
(bad)
inc
jnp
add
add
jnp
add
add
outs
pop
outs
cmps
add
push
add
add
add
push
fs
add
add
outs
mov
add
add
add
add
outs
outs
lahf
add
push
adc
inc
add
add
idiv
(bad)
call
add
add
or
jnp
add
add
or
add
push
and
xor
add
or
add
push
add
add
add
outs
mov
add
add
add
add
movs
add
push
and
sbb
inc
add
add
idiv
(bad)
inc
add
add
add
movs
add
push
jge
add
add
jnp
add
add
mov
es
push
sbb
inc
add
add
idiv
(bad)
inc
add
add
add
mov
xor
add
jnp
add
add
ins
sbb
add
add
idiv
(bad)
call
push
sub
add
add
(bad)
(bad)
inc
jnp
add
add
jnp
add
add
xor
inc
add
add
idiv
(bad)
call
push
sub
sbb
add
(bad)
(bad)
inc
jnp
add
add
or
pop
add
add
add
sbb
inc
add
add
idiv
(bad)
jmp
out
inc
add
sub
add
and
add
jp
jnp
add
add
mov
adc
add
push
sub
xor
add
add
adc
add
push
sub
add
jae
add
add
add
jnp
add
add
adc
ltr
add
add
add
add
jnp
add
add
mov
add
and
pop
or
and
add
idiv
(bad)
call
sub
add
and
add
push
add
push
and
add
jp
jnp
add
add
jnp
add
add
mov
add
and
pop
outs
test
add
add
add
add
pushf
add
push
sub
sbb
add
add
(bad)
(bad)
inc
add
add
add
mov
add
jge
add
add
add
add
add
mov
add
jge
add
add
sub
add
add
add
mov
add
and
add
add
add
add
add
mov
add
and
add
add
jnp
add
add
jnp
add
add
cmps
add
push
add
add
add
jnp
add
add
movs
add
push
sub
adc
or
mov
add
add
sub
push
add
add
add
pop
sub
sbb
add
add
idiv
(bad)
call
sub
add
add
and
push
push
xor
add
sub
pop
inc
add
add
idiv
(bad)
inc
jnp
add
add
enter
and
add
add
add
cmps
add
push
cs
add
cmps
add
push
and
sbb
inc
add
add
idiv
(bad)
jmp
dec
sub
add
push
and
add
jp
jnp
add
add
retf
push
add
add
add
xor
add
idiv
(bad)
inc
jnp
add
add
push
add
push
add
sub
add
adc
adc
cwde
add
add
add
adc
jnp
add
add
and
inc
add
add
idiv
(bad)
call
sub
add
and
inc
add
sub
add
jae
add
or
jnp
add
add
or
add
(bad)
(bad)
jmp
add
add
add
inc
jnp
add
sbb
add
add
(bad)
(bad)
inc
jnp
add
add
pop
sub
sbb
add
add
(bad)
(bad)
jmp
add
add
lea
add
or
push
push
push
mov
in
add
and
sbb
add
add
idiv
(bad)
jmp
add
add
jnp
add
add
das
add
push
and
add
add
jnp
add
add
outs
test
jnp
add
add
xor
add
pop
outs
stos
add
push
add
add
add
test
es
jnp
add
add
cmp
jnp
add
add
push
xor
inc
add
add
idiv
(bad)
inc
jnp
add
add
jnp
add
add
test
es
jnp
add
add
imul
jnp
add
add
add
jnp
add
add
test
es
jge
add
add
jnp
add
add
outs
stos
add
push
sub
add
jnp
add
add
imul
push
and
push
sbb
inc
add
add
idiv
(bad)
jmp
dec
inc
add
sub
add
and
add
jp
and
add
pop
jge
add
add
jnp
add
add
push
mov
add
idiv
(bad)
inc
push
sub
add
xor
add
add
add
add
add
jnp
add
add
adc
add
idiv
(bad)
call
sub
add
es
sub
sub
add
or
data16
add
add
add
jnp
add
add
dec
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
add
mov
es
push
sbb
add
(bad)
(bad)
inc
jnp
add
add
mov
sub
ja
add
sub
add
jae
add
push
jp
int3
inc
add
sub
add
and
add
jp
add
xor
add
add
cmp
lea
add
or
push
push
pop
outs
in
add
and
pop
inc
add
add
idiv
(bad)
call
sub
add
es
and
add
add
add
or
adc
add
add
add
and
inc
add
sub
add
and
add
jp
add
xor
add
add
add
add
add
sub
add
sub
add
and
add
jp
add
xor
test
add
add
adc
sub
add
sub
add
add
(bad)
(bad)
call
sub
add
and
push
add
push
and
add
add
cwde
add
push
or
add
xchg
add
or
add
sub
add
sub
es
add
push
jp
jnp
add
add
test
add
and
add
sbb
add
add
(bad)
(bad)
inc
jnp
add
add
sbb
inc
add
add
idiv
(bad)
jmp
or
push
add
push
and
add
jp
dec
add
push
or
jnp
add
add
jle
add
and
add
and
rol
add
or
lea
add
and
add
pop
or
inc
add
add
add
push
pop
or
scas
add
push
and
or
add
mov
add
and
in
add
sub
add
and
add
jp
jnp
add
add
or
xor
inc
add
add
idiv
(bad)
inc
and
add
or
pop
jge
add
add
dec
add
add
add
mov
add
push
pop
sub
add
add
(bad)
(bad)
jmp
cs
add
sub
add
and
add
add
ja
add
sub
es
add
push
jp
jnp
add
add
outs
mov
add
add
add
add
push
adc
inc
add
add
idiv
(bad)
inc
jnp
add
add
pop
sub
add
add
add
xor
sbb
add
add
(bad)
(bad)
inc
jnp
add
add
test
xor
add
add
add
jnp
add
add
stos
add
push
add
inc
das
add
add
add
add
add
push
and
inc
sub
add
add
add
sub
add
xor
add
add
add
sub
add
add
(bad)
(bad)
call
sub
add
es
add
add
push
add
push
jae
add
or
push
das
sbb
mov
add
and
add
sub
add
jae
add
or
push
das
sub
inc
add
add
idiv
(bad)
jmp
rol
add
push
and
add
sub
add
and
add
jp
mov
pop
add
add
add
idiv
(bad)
jmp
xchg
inc
add
sub
add
and
add
jp
jnp
add
add
add
outs
xor
sub
adc
adc
loope
add
retf
add
adc
jnp
add
add
and
add
idiv
(bad)
call
sub
add
and
inc
add
sub
add
and
add
jp
jnp
add
add
sbb
inc
add
add
idiv
(bad)
inc
inc
add
add
idiv
(bad)
call
sub
xor
inc
add
add
idiv
(bad)
jmp
aam
add
sub
add
and
add
jp
or
jnp
add
add
pop
push
cmp
inc
add
add
idiv
(bad)
inc
push
inc
sbb
add
sbb
add
add
idiv
(bad)
inc
add
push
and
add
add
sbb
add
add
idiv
(bad)
inc
jnp
add
add
sub
add
and
sbb
sub
add
and
add
jp
jnp
add
add
jnp
add
add
xor
add
and
add
add
add
add
pop
cmp
add
add
inc
add
add
idiv
(bad)
inc
jnp
add
add
das
add
push
and
add
add
sub
jnp
add
add
outs
cs
sbb
add
add
idiv
(bad)
inc
jnp
add
add
push
sub
inc
add
add
idiv
(bad)
inc
jnp
add
add
add
push
and
add
add
lahf
add
add
inc
add
add
idiv
(bad)
call
lea
add
add
push
and
add
sub
add
and
add
add
add
ja
add
mov
inc
add
sub
add
and
add
add
add
ja
add
mov
inc
add
sub
add
and
add
add
add
das
add
push
and
add
mov
inc
add
sub
add
mov
rol
add
add
push
and
add
mov
add
and
add
jp
jnp
add
add
push
add
push
pop
or
fwait
add
add
add
add
adc
add
push
or
jnp
add
add
dec
add
add
inc
add
add
idiv
(bad)
inc
jnp
add
add
add
outs
scas
add
push
and
add
inc
add
add
idiv
(bad)
inc
and
add
push
jge
add
add
and
add
push
jge
add
add
jnp
add
add
push
add
or
and
inc
add
add
idiv
(bad)
jmp
jae
add
sub
add
and
add
jp
push
xor
sbb
add
add
(bad)
(bad)
inc
jnp
add
add
add
outs
int
add
push
sub
sbb
add
add
idiv
(bad)
inc
pop
sub
add
add
add
xor
add
add
add
add
add
add
push
sub
add
add
add
adc
xor
add
adc
xor
add
sub
add
sub
add
or
pop
add
add
add
add
sub
add
xor
add
add
add
add
add
sub
add
cmp
add
xor
add
add
adc
pusha
add
or
push
mov
pop
or
lea
add
add
push
push
jle
add
add
push
mov
aad
add
jle
add
add
pop
pop
pop
sub
add
sbb
aas
popf
push
mov
pop
or
lea
add
add
push
push
jle
add
add
push
mov
aad
add
jle
add
add
pop
pop
pop
cmp
add
sbb
pop
popf
jle
add
add
sbb
sub
add
sbb
aas
popf
sub
adc
or
jno
add
add
add
add
sub
add
add
add
add
or
sbb
add
add
(bad)
(bad)
call
sub
add
add
jge
add
sub
add
and
add
and
inc
add
add
idiv
(bad)
inc
and
add
sub
add
sub
or
add
adc
in
add
sub
add
jae
add
push
jp
sub
add
adc
adc
add
add
add
pop
add
add
inc
add
add
idiv
(bad)
call
sub
add
add
add
or
cmp
add
cmp
inc
add
add
idiv
(bad)
inc
add
add
add
fiadd
add
and
inc
add
add
idiv
(bad)
inc
add
add
add
mov
add
and
add
dec
add
add
inc
sub
add
and
add
sub
add
outs
add
or
or
add
sub
add
push
and
add
push
add
pop
outs
adc
add
and
add
outs
mov
add
and
sbb
add
add
(bad)
(bad)
inc
push
outs
fild
add
pop
das
rcr
idiv
(bad)
jmp
adc
add
or
outs
adc
add
dec
add
add
add
or
sbb
add
add
(bad)
(bad)
inc
add
add
or
fild
add
and
rol
call
add
and
add
and
add
pop
outs
adc
add
dec
add
add
call
add
and
add
and
das
fistp
inc
add
add
idiv
(bad)
inc
pop
pop
sub
dec
add
sub
jle
add
or
or
add
sub
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jge
add
add
jnp
add
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
jnp
add
add
cwde
add
or
add
add
adc
or
pop
add
xchg
add
adc
jle
add
add
popa
add
or
xor
add
add
idiv
(bad)
call
sub
add
add
add
or
sub
pop
push
add
add
or
add
add
or
inc
add
add
idiv
(bad)
call
jle
add
add
pop
pop
outs
push
or
push
das
retf
push
add
or
or
add
outs
mov
add
and
add
xor
sbb
add
add
(bad)
(bad)
push
add
or
sub
adc
or
bound
add
or
add
add
add
inc
or
sub
add
sbb
add
add
(bad)
(bad)
call
sub
add
add
add
add
popa
add
or
or
sub
jle
add
add
popa
add
or
sbb
add
add
idiv
(bad)
inc
pop
das
outs
sub
add
push
inc
push
inc
sub
push
or
sub
add
xor
add
add
add
add
add
idiv
(bad)
call
sub
add
add
add
add
popa
add
or
pop
inc
add
add
idiv
(bad)
inc
pop
das
outs
sub
add
push
inc
push
inc
sub
push
or
sub
xor
add
add
add
add
add
add
or
add
add
jae
add
push
jge
add
add
adc
add
push
jge
add
add
push
lea
add
jge
add
add
adc
add
adc
add
sbb
add
add
add
add
sub
add
adc
push
add
add
add
add
add
add
or
add
add
jae
add
push
jge
add
add
adc
add
push
jge
add
add
push
lea
add
jge
add
add
adc
add
adc
add
sbb
add
add
add
add
add
test
add
sub
add
or
or
add
add
add
add
add
add
inc
sub
add
xor
add
add
cmp
sub
add
or
mov
(bad)
inc
add
and
idiv
(bad)
call
sub
add
and
push
add
push
jae
add
or
push
jge
add
add
add
or
adc
add
add
add
add
add
add
outs
xlat
add
push
add
jge
add
add
add
or
or
add
add
add
add
add
add
fadd
add
sub
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
sub
add
add
add
add
add
add
and
add
add
outs
fild
add
add
add
add
push
arpl
inc
add
pop
shr
add
or
add
add
xor
add
add
add
add
add
add
inc
add
pop
adc
inc
add
add
xor
add
add
add
add
add
imul
add
pop
and
sub
add
sub
xor
mov
add
int3
add
adc
sub
add
sub
add
and
add
jp
jnp
add
add
and
idiv
(bad)
call
sub
add
and
push
add
push
jae
add
or
jnp
add
add
adc
inc
add
add
idiv
(bad)
inc
sub
add
add
add
add
inc
add
and
(bad)
(bad)
jg
sbb
inc
add
add
idiv
(bad)
jmp
out
add
sub
add
and
add
jp
outs
test
or
jnp
add
add
add
push
and
add
pop
outs
mov
add
add
jge
add
add
outs
mov
es
push
sbb
add
add
push
and
add
add
push
test
add
push
or
or
pop
add
add
push
and
adc
inc
add
add
idiv
(bad)
inc
outs
test
add
and
or
sub
add
add
(bad)
(bad)
dec
sub
add
push
and
or
or
pop
add
outs
mov
outs
cmps
add
push
add
add
push
and
aaa
pop
inc
add
add
idiv
(bad)
inc
sub
es
add
add
(bad)
(bad)
inc
and
push
and
mov
add
sub
add
jge
add
add
sub
sub
pop
outs
xchg
add
add
add
push
push
push
sbb
inc
add
add
idiv
(bad)
inc
and
push
and
mov
add
add
jnp
add
add
nop
add
push
add
outs
stos
add
push
add
jge
add
add
adc
add
jnp
add
add
sub
outs
mov
es
push
and
idiv
(bad)
inc
jnp
add
add
xor
sbb
add
add
idiv
(bad)
inc
outs
call
dec
add
dec
add
outs
cwde
add
push
and
add
add
outs
mov
add
and
add
add
outs
stos
add
push
and
add
outs
sahf
add
push
and
add
jnp
add
sbb
add
add
(bad)
(bad)
inc
add
add
push
and
add
pushf
add
push
and
adc
push
add
push
cmp
add
add
add
add
push
and
inc
add
add
idiv
(bad)
inc
outs
movs
add
push
and
add
add
push
and
pop
sub
add
add
outs
mov
imul
cmp
jnp
add
add
sbb
add
idiv
(bad)
inc
add
add
add
into
add
or
add
push
sub
add
add
add
add
sbb
add
idiv
(bad)
inc
add
add
add
into
add
or
add
outs
pushf
add
push
sub
add
add
sbb
inc
add
add
idiv
(bad)
inc
adc
push
add
push
sub
add
sub
add
add
sub
add
add
add
push
and
add
push
sub
add
or
(bad)
inc
add
sbb
inc
add
add
idiv
(bad)
jmp
fbstp
add
sub
add
and
add
jp
outs
lods
add
push
and
add
adc
outs
pushf
add
push
cmp
inc
add
add
idiv
(bad)
call
add
push
add
push
or
adc
outs
mov
or
add
adc
outs
movs
add
push
outs
or
add
sub
adc
add
adc
add
adc
outs
pop
add
push
adc
outs
add
push
and
inc
add
add
idiv
(bad)
jmp
cmps
aas
add
sub
add
and
add
jp
jnp
add
add
daa
pop
inc
add
add
idiv
(bad)
inc
adc
add
push
and
add
add
or
add
outs
or
es
add
push
and
add
add
dec
add
outs
cli
add
push
and
or
add
add
add
add
imul
add
add
idiv
(bad)
inc
jnp
add
add
push
or
add
add
add
push
and
inc
add
add
idiv
(bad)
inc
jnp
add
add
sbb
and
add
jnp
add
add
into
add
or
inc
add
add
add
sbb
inc
add
add
idiv
(bad)
inc
jnp
add
add
add
imul
and
add
push
or
mov
push
jge
add
add
outs
scas
add
push
and
sbb
add
add
(bad)
(bad)
inc
and
add
outs
mov
add
and
inc
add
add
add
add
add
jnp
add
add
retf
push
push
push
xor
sbb
add
(bad)
(bad)
inc
jnp
add
add
int
add
add
add
add
outs
xlat
add
push
add
push
inc
add
add
outs
test
add
and
outs
scas
add
push
and
add
sub
add
sub
outs
cmps
add
push
push
push
adc
add
add
push
and
sub
push
sub
add
add
push
and
add
sub
xor
stos
add
add
add
adc
jnp
add
add
adc
and
add
push
add
push
and
add
jp
jnp
add
add
add
add
add
xor
jnp
add
add
push
daa
sbb
add
add
(bad)
(bad)
call
sub
add
add
test
add
add
add
add
rol
add
or
or
jnp
add
add
int
add
add
add
add
scas
add
push
push
xor
jnp
add
add
jnp
add
add
pop
or
add
or
jnp
add
add
mov
es
push
sbb
add
idiv
(bad)
inc
jnp
add
add
jnp
add
add
movs
add
push
sub
jnp
add
add
mov
add
add
add
pop
sbb
add
add
(bad)
(bad)
call
lea
add
add
pop
push
and
push
add
push
mov
inc
add
add
ja
add
mov
inc
add
sub
add
mov
cmp
mov
ja
add
mov
add
and
add
jp
jnp
add
add
movs
add
push
and
sbb
inc
add
add
idiv
(bad)
inc
jnp
add
add
outs
cmps
add
push
sub
jnp
add
add
movs
add
push
and
pop
inc
add
add
idiv
(bad)
call
lea
add
add
push
and
add
sub
add
and
push
mov
add
mov
inc
add
sub
add
and
add
add
add
movs
add
push
and
add
mov
add
and
add
jp
jnp
add
add
cmps
add
push
and
daa
pop
inc
add
add
idiv
(bad)
inc
jnp
add
add
jnp
add
add
enter
and
add
cmp
jnp
add
add
cmps
add
push
and
add
add
enter
and
inc
add
add
idiv
(bad)
call
lea
add
add
inc
add
sub
add
and
add
add
add
enter
and
add
mov
inc
add
sub
add
mov
cmp
cmps
add
push
and
add
mov
add
and
add
jp
and
add
pop
jge
add
add
jnp
add
add
test
add
and
inc
add
add
idiv
(bad)
inc
jnp
add
add
scas
add
push
push
xor
jnp
add
add
outs
movs
add
push
and
add
add
mov
add
and
cmps
add
push
sub
add
add
add
outs
movs
add
push
and
pop
outs
cmps
add
push
add
add
add
hlt
add
add
add
(bad)
(bad)
inc
push
jge
add
add
jnp
add
add
into
add
or
add
jnp
add
add
jnp
add
add
outs
sub
add
add
jnp
add
add
cmps
add
push
and
add
cmp
pushf
add
push
and
inc
add
add
idiv
(bad)
inc
jnp
add
add
push
sbb
inc
add
add
idiv
(bad)
jmp
lods
inc
add
sub
add
and
add
jp
jnp
add
add
jnp
add
add
outs
sub
add
add
jnp
add
add
mov
sub
add
add
jnp
add
add
movs
add
push
and
add
sub
add
jnp
add
add
movs
add
push
and
add
jnp
add
add
mov
sub
add
add
add
add
add
outs
sub
add
add
add
add
mov
add
push
pop
cmp
push
dec
pop
or
dec
add
jnp
add
add
cmps
add
push
and
add
cmp
pushf
add
push
and
add
add
add
movs
add
push
and
add
add
jnp
add
add
mov
sub
add
add
add
sbb
jge
add
add
add
jnp
add
add
movs
add
push
and
add
jnp
add
add
mov
sub
add
add
add
adc
jge
add
add
jnp
add
add
jnp
add
add
stc
add
or
jge
add
add
add
xor
add
add
mov
and
add
or
pop
jge
add
add
add
mov
add
and
add
pop
or
inc
add
add
jae
add
or
pop
push
outs
sbb
add
push
pop
or
pop
sbb
pushf
add
push
push
mov
mov
add
add
add
add
push
push
mov
out
add
or
adc
adc
inc
add
add
add
add
outs
push
add
push
add
outs
or
push
add
inc
inc
add
outs
or
push
add
outs
mov
add
and
add
add
outs
test
outs
or
push
add
add
add
push
sub
xor
xor
add
into
add
adc
add
sub
adc
adc
sub
jnp
add
add
push
push
mov
out
add
or
jnp
add
add
push
pop
mov
out
add
or
adc
or
add
add
add
adc
jnp
add
add
adc
adc
add
push
add
push
jae
add
or
sub
add
add
(bad)
(bad)
call
sub
add
es
add
add
push
add
push
jae
add
or
push
das
sbb
add
add
(bad)
(bad)
jmp
mov
add
and
add
sub
add
and
add
jp
push
das
sub
inc
add
add
idiv
(bad)
jmp
rol
add
push
and
add
sub
add
and
add
jp
mov
pop
add
add
add
idiv
(bad)
jmp
xchg
inc
add
sub
add
and
add
jp
jnp
add
add
add
outs
int
add
add
add
push
jge
add
add
jnp
add
add
push
push
sbb
inc
add
add
idiv
(bad)
inc
push
add
add
add
sub
add
mov
add
and
inc
add
add
idiv
(bad)
inc
add
push
sub
jnp
add
add
add
outs
out
add
or
add
adc
or
add
add
add
and
adc
add
or
push
add
add
sbb
inc
add
add
idiv
(bad)
call
sub
add
and
adc
add
add
push
pop
sub
add
or
push
push
pop
sub
jnp
add
add
push
pop
outs
out
add
or
add
add
pop
dec
add
add
add
add
xor
sbb
add
adc
jnp
add
add
adc
inc
add
add
idiv
(bad)
call
sub
add
sub
jnp
add
add
adc
inc
add
add
idiv
(bad)
inc
sub
add
add
add
add
inc
add
push
push
push
add
add
add
add
add
and
add
add
outs
test
add
and
add
or
add
sub
add
add
xor
inc
add
outs
cwde
add
push
sub
add
add
outs
mov
add
and
add
add
outs
stos
add
push
push
push
add
outs
sahf
add
push
imul
add
outs
cmps
add
push
and
add
fwait
add
push
sub
add
add
(bad)
(bad)
dec
outs
movs
add
push
and
adc
idiv
(bad)
inc
adc
push
sub
add
outs
movs
add
push
and
add
fwait
add
push
and
outs
mov
es
inc
add
add
idiv
(bad)
inc
adc
push
sub
add
outs
mov
imul
or
add
push
and
add
push
and
add
and
add
imul
xor
and
push
add
push
and
add
jp
outs
lods
add
push
and
add
adc
add
and
add
sbb
add
add
(bad)
(bad)
call
add
push
or
add
push
and
inc
add
add
idiv
(bad)
dec
outs
mov
outs
xor
adc
add
and
add
or
add
push
sub
add
push
adc
inc
add
add
idiv
(bad)
call
add
add
and
add
or
add
push
and
sbb
inc
add
add
idiv
(bad)
call
add
add
and
add
adc
add
sub
adc
add
or
add
push
and
sbb
add
add
(bad)
(bad)
dec
adc
push
adc
push
and
outs
mov
add
sub
add
add
(bad)
(bad)
call
lea
add
sub
add
and
add
push
and
add
adc
adc
mov
(bad)
inc
add
adc
dec
inc
add
sub
add
and
add
jp
adc
imul
add
push
mov
inc
add
pop
mov
inc
add
sub
add
add
sub
add
or
add
push
adc
add
add
idiv
(bad)
inc
or
add
push
and
add
sub
or
add
push
sub
sbb
add
(bad)
(bad)
inc
pop
adc
dec
add
add
sub
add
or
add
push
and
adc
inc
add
add
idiv
(bad)
inc
adc
push
sub
add
outs
pop
add
and
add
mov
xor
add
add
add
add
adc
imul
push
mov
xor
add
(bad)
(bad)
inc
jnp
add
add
push
push
adc
mov
out
add
or
pop
mov
xor
add
add
add
pop
push
adc
mov
out
add
or
pop
adc
imul
adc
mov
push
or
outs
pop
add
or
cmps
cld
(bad)
call
inc
add
add
idiv
(bad)
(bad)
ficomp
or
add
add
or
or
sbb
add
(bad)
(bad)
call
or
add
or
add
add
add
add
adc
push
pop
add
add
add
jnp
add
add
adc
adc
sub
sbb
add
add
(bad)
(bad)
call
or
add
or
add
sub
add
inc
xor
add
add
add
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
ins
outs
loop
shl
ins
mov
mov
mov
test
movs
retf
push
fcomp
or
jmp
dec
mov
xchg
loop
loope
popa
mov
lahf
shr
cmp
fld
and
push
mov
iret
pop
dec
xlat
ret
cmp
or
rcr
idiv
xchg
leave
imul
push
scas
mov
fwait
sbb
pushf
(bad)
repnz
jno
inc
xchg
inc
and
xchg
das
dec
push
in
stos
or
gs
push
jge
mov
xlat
dec
inc
movs
imul
inc
fdivr
fdivr
cmp
fsubr
mov
popa
mul
pop
leave
pop
adc
sahf
jo
push
dec
stos
nop
in
dec
retf
push
cwde
cmp
sub
inc
dec
xchg
int3
cmp
popf
adc
loopne
jl
nop
daa
call
scas
fnstcw
xchg
pop
sbb
bound
push
call
adc
cmp
and
imul
ins
jecxz
cmc
jl
mov
push
pop
inc
rcr
push
(bad)
in
loop
scas
mov
pop
ins
das
mov
retf
sub
inc
arpl
mov
add
popa
retf
or
ja
fs
jg
adc
in
imul
loopne
mov
lahf
jae
out
jne
mov
stos
dec
gs
leave
xlat
mov
add
in
add
jne
xor
mov
fmul
sub
push
cmp
jns
sbb
loop
addr16
loope
in
ret
jl
cdq
(bad)
pop
pop
mov
loopne
icebp
fbstp
sbb
pop
cs
mov
pop
cmp
lods
repnz
rcl
jmp
xor
retf
mov
xchg
retf
pop
mov
add
dec
fbld
scas
sbb
jbe
or
adc
push
cdq
lods
int
pusha
jne
cli
mov
ja
pmaxsw
or
dec
or
xor
std
scas
pop
and
push
mov
stos
xor
inc
mov
mov
push
cmc
jno
sub
and
sti
out
cli
mov
xchg
inc
sub
jmp
push
ficom
mov
add
mov
ficomp
lea
repz
adc
mov
jae
xlat
push
(bad)
clc
(bad)
gs
int
sub
dec
movs
stos
mov
push
mov
sub
aas
(bad)
pop
jg
pop
or
adc
fldenv
fist
cmp
add
int
loopne
out
std
retf
aas
popf
js
sub
cmp
cwde
pop
jo
xchg
(bad)
in
into
push
pop
jo
mov
mov
lods
retf
jo
xor
fs
daa
jmp
sub
mov
bound
mov
sbb
idiv
and
enter
xor
inc
into
es
sbb
in
cmp
retf
mov
add
push
inc
test
push
sbb
jmp
dec
mov
cmp
stc
mov
cmp
cdq
and
stos
fist
data16
jns
pushf
aas
dec
xchg
mov
jo
cmp
dec
push
mov
addr16
in
add
xor
mov
in
mov
mov
jmp
xlat
data16
stos
shr
jmp
push
stos
and
nop
sub
mov
mov
pop
pop
gs
ja
stos
mov
adc
cmps
es
psubd
jb
add
mov
mov
push
add
jne
popf
ret
outs
jecxz
clc
mov
ins
xchg
ret
push
mov
out
outs
xlat
pop
lods
cmp
cmp
xchg
inc
fnstsw
js
sbb
add
pop
(bad)
arpl
or
mov
fs
icebp
shl
scas
push
mov
cmps
outs
aam
ret
cmp
inc
push
test
sub
arpl
retf
or
rol
fisubr
jno
stos
add
pusha
pop
loopne
stos
or
scas
mov
xor
push
mov
mov
mov
ret
xor
into
idiv
imul
aam
sub
adc
jne
dec
outs
daa
mov
pusha
adc
or
sar
test
pop
inc
jle
xchg
shr
dec
and
and
iret
les
sub
xchg
inc
lods
cmp
scas
mov
mov
push
mov
fwait
sbb
ja
cwde
adc
out
add
(bad)
out
jg
cwde
in
call
adc
jmp
stos
or
daa
das
rol
jge
movs
shl
out
gs
clc
(bad)
sbb
loopne
dec
xchg
sbb
dec
and
fidivr
scas
shl
sbb
push
ins
add
cwde
pop
xchg
dec
push
loopne
daa
push
imul
stc
mov
xchg
mov
fs
xchg
les
ficomp
jne
jno
jb
movs
dec
jns
in
out
push
xor
stos
ja
mov
or
(bad)
fistp
sub
jne
push
mov
call
mov
and
nop
dec
cld
xor
dec
pop
jb
lea
ins
mov
cmps
pop
retf
dec
xchg
sti
loope
push
int
das
mov
ss
sahf
add
call
int
and
call
leave
adc
sahf
gs
clc
add
sbb
sbb
aad
fild
je
imul
in
xchg
ret
mul
lahf
mov
ficom
xlat
pop
pop
call
push
outs
in
adc
rcl
stos
xor
test
inc
(bad)
div
add
scas
jae
sbb
stc
xor
dec
sub
xor
pop
popa
fisttp
ror
and
pusha
jg
sbb
cli
sbb
push
aam
inc
mov
inc
xor
ret
mov
movs
xchg
or
movs
xchg
pop
pop
cmps
push
test
stc
test
and
ins
mov
jg
retf
push
in
xor
(bad)
jp
sub
inc
into
or
ins
fdivp
scas
je
je
cmp
mov
pop
jno
and
and
cmp
jne
lahf
jmp
jae
adc
(bad)
sub
or
jmp
pop
dec
outs
out
or
xchg
iret
mov
pop
xor
mov
mov
add
fwait
std
les
and
(bad)
jbe
out
je
test
xchg
cmp
movs
fsub
sub
mov
shl
gs
adc
and
ins
outs
push
push
add
and
mov
xor
(bad)
fst
out
xchg
pop
add
cmp
inc
add
mov
and
adc
sub
lock
das
xchg
stos
loop
int
gs
lods
fidiv
add
xlat
stos
jnp
(bad)
popf
jno
fimul
mov
(bad)
addr16
test
push
popa
mov
fimul
ror
sub
arpl
sbb
std
add
out
mov
into
rcl
mov
xchg
jae
sar
inc
les
sahf
mov
icebp
add
pop
or
test
stos
outs
imul
outs
int3
jecxz
push
mov
gs
and
jb
sub
push
movs
in
mov
mov
xchg
mov
std
fdiv
mov
xchg
movs
fsub
pop
scas
out
inc
sub
(bad)
and
sub
ret
push
pop
or
adc
pusha
sbb
fsubr
inc
fimul
and
in
mov
inc
xchg
xlat
jmp
adc
mov
cmp
sbb
add
gs
pop
movs
bound
scas
repz
push
rcl
cli
addr16
cmp
or
fisttp
pop
in
xor
(bad)
popf
and
pop
retf
or
pop
dec
cwde
push
sbb
xchg
cmp
jb
push
or
stos
stos
mov
test
pop
repz
sbb
dec
add
call
cdq
iret
mov
jg
daa
xchg
fist
idiv
retf
test
jo
inc
rcl
call
push
xor
daa
out
xlat
push
xchg
ja
jg
jle
inc
and
aam
pop
fs
mov
add
jle
arpl
fs
mov
(bad)
jle
call
lods
fiadd
adc
pop
call
ret
push
sub
mov
jmp
push
jmp
std
ja
movd
cli
pop
mov
adc
sbb
arpl
mov
ficom
lea
aaa
sahf
and
ins
fwait
mov
(bad)
(bad)
jo
clc
jb
inc
inc
in
cmp
or
sub
pop
jne
mov
cli
mov
mov
dec
out
cmps
and
into
scas
pop
adc
push
xchg
sbb
loop
mov
xchg
or
sub
idiv
ins
mov
pop
xor
hlt
mov
ins
inc
sub
push
je
cli
mov
fadd
add
cmp
mov
je
popf
mov
or
pop
pushf
lds
(bad)
push
xchg
push
sub
inc
adc
in
pop
test
lds
movs
jle
xchg
sahf
enter
popa
lock
call
test
fisttp
mov
add
fbstp
jecxz
fist
jno
fsub
inc
cmp
mov
int
in
inc
(bad)
sbb
xchg
mov
(bad)
cld
mov
mov
test
sub
adc
dec
popa
push
xchg
(bad)
xor
cmc
shl
mov
fsub
jg
mov
gs
int
scas
or
pop
inc
iret
retf
enter
mov
jno
das
pop
mov
aad
and
xchg
hlt
int
pop
jmp
stc
xchg
adc
jg
clc
repz
not
push
ja
pop
dec
out
in
test
fwait
ret
aaa
mov
and
lods
xor
xor
mov
inc
xchg
or
mov
sahf
sub
or
sbb
idiv
mov
dec
mov
js
push
stos
mov
cmp
popf
inc
inc
mov
push
cs
addr16
or
mov
shl
out
jp
or
and
std
cmp
adc
test
or
test
inc
popf
xor
jmp
or
xchg
xchg
mov
xor
xchg
adc
push
add
dec
jb
push
nop
fs
test
pop
imul
mov
or
lahf
in
inc
sub
xor
sub
add
aas
adc
sbb
mov
scas
sbb
jg
adc
fsub
imul
aad
jbe
int3
iret
xor
clc
sbb
jp
push
js
or
add
in
xor
loope
test
push
cld
mov
jno
add
cmp
cmp
jo
(bad)
ds
mov
xchg
and
or
ficomp
gs
pusha
sbb
ror
arpl
adc
rcl
dec
mov
push
push
cmp
adc
xchg
xor
inc
xor
stos
dec
imul
shl
test
cmps
adc
enter
into
inc
add
adc
push
sbb
out
mov
std
fiadd
daa
sahf
arpl
xor
call
pop
add
shr
icebp
les
out
mov
and
inc
cmp
out
(bad)
out
jle
jmp
cmc
xchg
sbb
retf
mov
or
jp
stos
jbe
out
inc
es
mov
xchg
sub
mov
cmp
cld
mov
jp
or
test
sbb
xor
jge
inc
add
scas
push
mov
pop
repz
mov
outs
push
fwait
popa
das
mov
lock
xchg
jle
jmp
or
leave
and
adc
mov
addr16
sahf
les
fmul
test
push
daa
repnz
sub
mov
pop
mov
jb
cmp
mov
mov
(bad)
pop
mov
or
mov
movs
ret
aas
mov
push
pop
or
xchg
sbb
es
popa
jbe
idiv
and
dec
pushf
std
into
cdq
sub
stos
int3
or
fbld
jmp
mov
sbb
push
sbb
shld
jg
pop
mov
cwde
int3
pop
mov
jg
xchg
out
push
pop
cmp
push
imul
adc
push
fxch
fbld
mov
cmp
cdq
pop
fiadd
scas
add
les
mov
retf
mov
clc
dec
cdq
pop
out
xchg
rcl
add
mov
mov
aas
jmp
jge
pop
stos
jmp
inc
int3
adc
xor
jge
jns
push
mov
and
adc
retf
into
and
stc
fstp
ins
pop
mov
cmp
outs
sbb
dec
push
xor
sub
idiv
sahf
fimul
test
or
mov
sbb
push
ja
adc
popa
or
cli
cs
xor
jbe
mov
das
mov
fidivr
sahf
aaa
and
push
pop
repnz
js
test
xor
ds
push
div
iret
sbb
ror
daa
adc
fldcw
mov
fcomp
dec
cs
ret
aam
pusha
fstp
call
aam
stos
and
xor
dec
sahf
bound
mov
xchg
xor
and
dec
mov
ret
ffree
sbb
outs
inc
pop
pop
adc
cld
call
push
add
test
xchg
aaa
outs
xlat
mov
pushf
fs
or
dec
cmps
xchg
(bad)
leave
xor
mov
mov
add
jg
pop
push
dec
inc
dec
pushf
push
push
fsub
mov
mov
test
mov
out
dec
cmp
sahf
mov
cmp
pop
imul
jge
jae
mov
mov
push
add
and
lahf
icebp
mov
push
pop
ins
mov
mov
dec
or
add
movs
mov
jecxz
je
cmp
and
and
gs
or
dec
scas
sub
mov
aas
dec
fld
dec
call
push
ret
xchg
dec
and
jecxz
ds
in
add
jnp
scas
and
xchg
cmp
xor
dec
loope
xchg
das
pop
or
not
jmp
jo
jbe
movs
cmps
into
outs
movs
jecxz
movs
push
or
repnz
fcmovnbe
mov
mov
inc
pop
sbb
test
popa
fldenv
aaa
cmp
imul
pop
mov
(bad)
movs
pop
clc
movs
movs
mov
scas
leave
pop
add
mov
push
movs
cmp
fldenv
sbb
mov
inc
xor
or
popa
pushf
adc
ficom
pop
loope
imul
mov
inc
cmp
(bad)
call
rol
imul
pop
nop
xchg
and
push
cdq
(bad)
jb
popa
mov
aam
jo
ficom
or
push
mov
sbb
fisubr
sti
cdq
cdq
je
xor
mov
or
dec
push
sub
mov
stos
adc
add
dec
gs
loope
lods
inc
inc
ins
adc
int
jp
pop
add
cmp
dec
add
pop
outs
xchg
jns
data16
out
lods
out
dec
in
fstp
pop
add
and
clc
jl
or
and
jle
push
mov
pop
cmc
pop
loop
pop
stos
nop
jge
test
pusha
(bad)
cmp
outs
stc
lods
mov
or
add
add
inc
push
jl
idiv
popf
clc
daa
adc
mov
cld
movs
add
jnp
pop
ds
cmc
pop
cs
push
sbb
adc
jg
shrd
xchg
out
(bad)
pop
sub
mov
lods
lods
test
adc
ret
mov
je
ret
jmp
adc
adc
mov
addr16
xchg
add
cmps
adc
adc
inc
sbb
fmulp
nop
xchg
cmp
mov
out
jle
jb
or
(bad)
sub
mov
pop
loope
(bad)
cld
inc
dec
sub
add
jns
and
mov
ss
test
mov
ins
fcom
imul
cmp
cmp
xor
jnp
dec
call
mov
test
jg
mov
daa
ret
inc
jge
fs
sbb
fld
sub
sar
push
cmc
retf
jbe
js
adc
out
xor
push
or
inc
(bad)
push
(bad)
call
sar
bound
pop
add
pop
retf
sar
inc
cmp
in
push
pop
call
or
cdq
xchg
mov
loop
stos
and
sub
adc
popfw
inc
lods
xlat
outs
jl
cmp
(bad)
std
mov
les
pop
inc
mov
mov
arpl
ins
aaa
and
loop
sbb
js
test
pop
pop
push
push
out
push
pop
outs
enter
test
and
popf
adc
jae
xchg
mov
test
neg
fsubr
cld
loopne
push
dec
dec
xchg
shr
xor
test
iret
xchg
cs
test
push
adc
int3
icebp
adc
shr
jp
xor
xchg
cmp
imul
adc
inc
pop
ss
jo
add
xor
jns
pop
and
add
dec
mov
arpl
(bad)
jg
add
in
xchg
push
popa
jbe
pop
push
popf
ja
jnp
dec
fs
inc
ss
or
mov
xchg
dec
jecxz
mov
fmul
adc
ficomp
cmp
data16
outs
leave
sbb
shl
adc
out
test
sbb
fiadd
or
pop
xor
jo
or
mov
es
scas
jbe
jecxz
nop
out
push
fs
cmp
es
sub
sbb
lods
mov
push
imul
jmp
push
int3
or
lods
push
in
dec
pop
cmps
mov
mov
xor
pop
dec
jo
inc
int
mov
daa
mov
int
cmovg
dec
push
mov
ret
rcr
sbb
mov
fadd
aaa
or
in
dec
xor
cmp
dec
dec
enter
jne
rdtsc
aas
outs
inc
icebp
or
ja
pop
mov
mov
sub
mov
enter
jnp
leave
jecxz
fsub
mov
paddsw
ins
ins
fdivr
pop
int
dec
pop
pop
lods
cmc
add
adc
inc
mov
sbb
jg
xor
xlat
lods
bound
data16
js
fwait
jae
sbb
into
add
loope
(bad)
arpl
fwait
mov
fisubr
test
es
inc
mov
retf
int
pop
fistp
pop
aam
cwde
pop
fcom
out
push
repnz
outs
mov
jmp
aad
imul
xlat
loopne
add
inc
in
push
dec
add
rcl
pushf
call
sbb
push
arpl
jmp
cmp
push
mov
pop
jbe
fs
ror
arpl
cs
movs
xor
fs
jecxz
sahf
mov
xor
lods
adc
sub
dec
xor
push
fild
mov
cmp
dec
(bad)
fsubr
jecxz
xchg
outs
and
or
loope
shl
mov
test
fwait
mov
lock
mov
aad
jmp
es
shl
cwde
add
pop
sbb
push
cmps
jne
jmp
or
jmp
jecxz
nop
mov
arpl
jecxz
nop
push
cs
das
mov
jmp
mov
addr16
cwde
lock
pop
and
pop
outs
ins
mov
sub
int
mov
es
push
std
xchg
pop
shl
cmp
mov
sub
sub
movs
(bad)
xchg
jmp
adc
fs
call
mov
jbe
cmp
test
mov
mov
fst
aam
fist
cmp
jns
xchg
je
pop
imul
or
or
jg
repz
out
mov
jno
inc
xchg
fdiv
(bad)
push
shl
mov
and
sub
mov
and
es
sub
prefetch
int
or
sub
dec
mov
std
in
xor
or
mov
loope
loope
scas
add
jae
ret
or
outs
shl
mov
adc
sub
mov
mov
clc
imul
lods
retf
and
repz
pushf
sub
dec
xchg
mov
push
sub
jmp
nop
shl
push
xchg
xchg
in
add
fcomp
arpl
jo
test
(bad)
nop
add
hlt
jns
add
dec
leave
mov
mov
sub
mov
in
and
jge
stc
add
fldenv
mov
mov
mov
mov
xchg
daa
fadd
jmp
(bad)
das
popa
push
pop
es
cwde
int3
and
pop
call
lods
lock
cmp
mov
jmp
and
sti
scas
xchg
lods
out
ret
(bad)
mov
out
mul
in
dec
in
sbb
cld
inc
mov
std
cli
ins
jnp
mov
imul
(bad)
aam
cmp
(bad)
adc
sbb
fcomp
clc
adc
jo
cmp
cld
or
fstp
jo
cmps
rcl
sub
xor
or
rep
sbb
inc
jmp
cmps
adc
nop
test
sbb
fst
jne
dec
mov
inc
jo
inc
add
mov
cli
jecxz
xor
je
iret
(bad)
cmps
sub
aad
gs
mov
pop
xchg
shl
mov
and
xchg
mov
sar
sti
dec
ins
scas
or
or
xlat
aad
out
icebp
cmps
mov
lock
add
(bad)
idiv
mov
and
jo
sub
mov
push
push
xor
adc
ss
popf
leave
xor
dec
cld
fwait
repz
dec
mov
jg
mov
ins
in
retf
and
ret
ins
mov
jge
icebp
fwait
lds
mov
dec
inc
sub
stos
push
adc
xchg
loope
inc
cwde
cli
sbb
xor
jo
cmps
sbb
std
sbb
cmp
mov
mov
outs
mov
or
xchg
test
ss
es
push
cmp
sti
inc
retf
fsubp
not
push
pop
push
cmp
or
push
adc
ins
aam
push
aas
sub
call
fstp
repnz
inc
nop
fcom
or
call
mov
pusha
(bad)
movs
fcmovne
or
dec
rcl
cmp
add
add
push
adc
arpl
xchg
push
and
mov
stos
daa
mov
lds
add
or
push
or
mov
shl
mov
rcr
lea
ret
popa
cmp
jns
push
xchg
nop
jo
cmc
mov
lods
push
mov
pusha
fadd
jnp
or
lock
and
lea
mov
adc
jp
mov
cmp
sbb
sub
xchg
fwait
iret
jmp
cs
mov
(bad)
xor
rcr
dec
dec
push
cmp
dec
mov
(bad)
xchg
sub
fldenv
dec
push
and
pop
fbstp
int3
cmp
lea
xlat
mov
shr
xor
ds
xchg
mov
dec
popf
mov
stos
je
stos
in
cld
aad
test
cmp
xchg
(bad)
pop
fisttp
out
movs
leave
mov
outs
std
idiv
mov
cmps
push
sbb
mov
int3
xchg
es
inc
cmc
push
mov
mov
gs
mov
(bad)
(bad)
pop
mov
pop
aas
sti
add
pusha
in
repnz
xchg
pop
add
addr16
push
aas
adc
add
sub
sub
outs
cmp
add
ds
aad
inc
adc
jae
out
dec
test
or
add
cmp
popa
pusha
mov
retf
pop
idiv
xchg
pop
(bad)
jno
stos
jmp
inc
xor
fstp
jbe
out
cmp
in
push
push
hlt
xchg
push
jg
stc
mov
(bad)
xchg
cmp
jmp
ds
daa
retf
scas
cmc
jno
imul
dec
icebp
call
inc
push
mov
iret
adc
mov
loopne
cs
test
add
and
jmp
push
pop
out
add
out
add
xchg
fcomp
(bad)
repnz
and
fs
test
fmul
rcl
cmp
mov
adc
jmp
xchg
or
imul
in
pushf
cmp
es
outs
neg
fimul
cdq
dec
mov
inc
adc
cmp
pop
push
rol
or
mov
test
xor
xor
lahf
gs
add
jbe
rcr
mov
jge
mov
rol
mov
enter
adc
pusha
xchg
cli
out
mov
enter
mov
or
push
jmp
mov
ret
xor
add
mov
cmp
pop
repz
test
loope
add
sbb
(bad)
mov
sbb
push
jnp
xor
sub
inc
adc
mov
out
dec
cli
pop
les
fdivr
(bad)
ins
adc
movs
jno
les
cmp
test
cld
pop
push
push
aas
mov
in
xor
and
mov
or
jge
pop
inc
add
daa
xor
cmp
ins
and
ror
and
jns
jle
jle
(bad)
arpl
aad
mov
mov
pop
xchg
pop
ins
xchg
mov
fbld
mov
pop
not
cmp
inc
imul
xor
pop
mov
mov
scas
shl
call
gs
cmp
fisubr
lods
jg
test
dec
mov
push
and
ja
sbb
(bad)
ret
mov
and
in
enter
fistp
dec
popa
mov
cmp
cmp
mov
adc
fwait
repz
sbb
pushf
loopne
outs
in
repz
imul
adc
xor
push
jnp
cmc
sti
mov
mov
aas
lea
pushf
pop
cmp
mov
mov
adc
mov
aam
aas
shl
sub
cli
fidiv
fwait
scas
ins
and
lahf
sub
ss
push
sbb
xchg
movs
jg
pop
jecxz
dec
lds
cmps
dec
std
add
stos
int
ja
xor
repnz
push
mov
pop
jne
push
jne
out
jmp
mov
int
retf
test
shr
leave
pusha
cmps
xor
je
cmp
inc
clc
repz
aas
push
cmp
mov
inc
mov
fadd
push
inc
test
cmp
int3
push
addr16
popa
mov
int3
sbb
sub
test
inc
or
loopne
adc
add
ror
dec
mov
dec
icebp
mov
leave
mov
lods
fist
xchg
jmp
sbb
jns
cmps
out
adc
cmp
mov
or
mov
push
push
ds
mov
cld
lea
sti
mov
repnz
leave
jae
enter
fisttp
stos
in
or
mov
gs
mov
(bad)
jns
ds
outs
jne
adc
adc
pushf
dec
mov
fwait
xor
in
loop
cli
repnz
sbb
cmp
push
lods
pop
push
inc
push
cmp
sbb
(bad)
pusha
lods
or
xchg
jg
lds
es
sub
xor
pusha
inc
xchg
int
add
inc
cmp
dec
movs
nop
arpl
add
mov
mov
out
sbb
or
fistp
arpl
push
movs
dec
lods
stos
scas
pop
ss
adc
sub
or
mov
lea
xor
and
cmp
mov
and
xchg
mov
push
mov
or
add
jge
mov
mov
cmp
aaa
xchg
dec
xchg
push
pop
inc
push
setge
sub
inc
sahf
mov
or
xchg
jb
jecxz
pop
ss
inc
nop
(bad)
mov
dec
sub
fs
and
mov
xchg
repz
pusha
repnz
pop
mov
dec
sar
inc
aad
aaa
push
pop
enter
or
jle
popf
push
pop
daa
sbb
fwait
(bad)
sbb
cmc
cmps
mov
ins
ja
add
pop
rcl
call
xor
xor
dec
inc
sar
mov
xlat
pop
sub
cmp
sar
adc
sbb
sub
hlt
push
das
xchg
cld
call
(bad)
fmul
popf
stos
pop
cwde
gs
stos
ret
pop
push
int
jo
not
enter
cmps
push
cs
nop
shr
mov
pop
jge
jecxz
movs
imul
arpl
xchg
inc
out
fistp
and
and
retf
pop
into
jno
mov
iret
xor
jmp
je
aad
sub
mov
nop
iret
ja
push
adc
and
pop
mov
pop
lods
pop
call
cmc
fnstsw
aam
fwait
jl
pop
dec
data16
stos
inc
ret
mov
mov
cmp
sbb
inc
push
cmp
mov
mov
enter
pop
into
mov
inc
lods
scas
mov
pop
xchg
pop
xchg
sbb
or
loop
xor
hlt
test
fbstp
pop
inc
pusha
test
out
cs
lahf
test
sbb
adc
jnp
pop
push
pusha
pop
mov
xchg
or
shl
and
inc
dec
add
cdq
and
xor
cmps
cwde
fstp
sti
mov
test
jns
repz
add
inc
lds
adc
push
rol
fsubr
cli
shl
loopne
add
xor
into
push
dec
jns
retf
fnstenv
dec
push
movs
mov
dec
repnz
fisubr
cmp
jb
inc
pop
or
sbb
aad
xchg
pusha
adc
bound
cli
bound
out
out
xchg
add
mov
adc
dec
fild
jp
mov
lods
jbe
cli
shr
adc
xor
iret
jbe
sbb
xchg
adc
cmp
jae
sti
sub
cwde
cdq
jbe
sbb
jo
cmps
shl
mov
push
inc
retf
pop
sub
fisub
not
add
xor
push
idiv
jg
xchg
stc
mov
adc
cmp
imul
push
lods
push
jle
std
shl
adc
dec
addr16
jge
sub
sbb
fdiv
or
out
shr
or
gs
mov
pop
sub
clc
push
ss
pop
mov
cs
xchg
loope
adc
lods
cmp
mov
nop
push
daa
cmp
mov
arpl
mov
mov
repnz
hlt
or
ror
push
xor
or
sbb
cmc
and
mov
aas
test
in
scas
xchg
push
push
int3
adc
stos
daa
aaa
xchg
outs
stos
inc
xchg
pop
add
cmp
jmp
jb
ret
mov
add
dec
and
push
sub
fld
push
dec
inc
xchg
rcl
jno
fwait
xchg
jne
pop
cmps
adc
lahf
mov
or
jle
push
push
mov
in
sbb
sbb
rcr
mov
inc
aad
push
icebp
rcr
push
(bad)
pop
aas
shl
cmps
mov
leave
add
mov
sub
mov
and
push
cmp
mov
push
and
or
dec
xor
cld
sbb
call
push
in
jle
ret
stos
adc
jge
xchg
and
lock
int
mov
aas
mov
add
push
inc
dec
dec
cwde
ja
out
bound
test
mov
nop
cdq
sub
clc
push
jae
lahf
repz
add
test
pushf
cmp
dec
nop
xor
pop
lahf
and
leave
or
mov
leave
cli
inc
xor
cmp
cmp
sti
fxch
sbb
lea
or
sub
enter
cmps
inc
inc
xor
pop
cmp
cmp
(bad)
inc
test
es
xchg
sbb
push
pop
out
div
mov
loopne
movs
cmp
mov
repnz
(bad)
and
mov
adc
dec
neg
mov
xchg
cmps
mov
xor
ror
aaa
mov
xchg
xlat
and
ins
outs
dec
lods
add
jae
mov
in
in
lods
js
push
mov
xchg
popf
aad
cmp
add
mov
cmc
mov
xor
call
and
addr16
xchg
ds
fnstsw
or
popa
(bad)
out
cmp
mov
add
in
mov
imul
jns
in
push
retf
into
test
cmp
in
sbb
push
shl
cli
loope
xor
mov
ror
sub
nop
lock
test
fild
aaa
xor
push
(bad)
ss
pop
xor
jo
jle
cli
cmp
imul
xchg
(bad)
jb
adc
jle
test
mov
stos
fsub
lds
jno
lock
inc
fwait
stos
adc
mov
mov
loopne
sub
xchg
push
mov
ss
or
iret
dec
xlat
mov
add
cmp
jne
aaa
dec
cmps
jnp
xchg
cdq
mov
add
sbb
push
movs
add
xor
jb
ror
jne
or
mov
inc
ret
or
mov
xor
sub
sti
les
inc
hlt
push
repz
es
inc
cmp
sub
adc
or
sub
inc
out
test
push
popa
mov
(bad)
jl
mov
bound
jne
(bad)
scas
mov
(bad)
inc
std
sbb
retf
std
sbb
ins
ret
mov
pop
into
stos
popf
(bad)
and
pop
jg
mov
int
xchg
bound
pop
mul
push
sbb
pushf
aaa
stc
out
hlt
push
arpl
fs
sub
dec
dec
push
push
inc
enter
jecxz
xchg
jp
enter
(bad)
pop
rol
(bad)
jl
sbb
xchg
ficom
cmp
xchg
movs
mov
nop
fisubr
es
aad
(bad)
mov
or
shr
mov
mov
loope
rcr
or
pop
dec
xor
ja
mov
int3
and
ja
jne
clc
fs
add
dec
fcmovnbe
rol
pop
xchg
in
pop
xchg
ds
push
and
(bad)
lds
mov
in
push
hlt
mov
call
aad
sbb
sub
fmul
mov
ret
rol
mov
mov
mov
sub
(bad)
lock
push
scas
stos
sub
fwait
push
repnz
and
(bad)
pop
mov
jae
inc
xor
adc
loopne
nop
mov
out
fbld
pop
dec
jae
or
movs
shl
push
cmps
inc
int3
stc
push
jo
out
cmp
shl
push
add
aad
frstor
stos
push
jecxz
pop
xchg
sbb
test
repnz
fbld
mov
push
jnp
push
out
int
mov
cmp
jb
in
cmp
add
aad
sub
mov
movs
mov
mov
add
sub
adc
inc
icebp
mov
daa
pop
cmps
jo
mov
ins
adc
test
aaa
fdivr
movs
lock
mov
idiv
ret
inc
or
not
test
adc
cmpxchg
cmp
imul
pop
mov
xchg
and
call
sub
jo
movs
jns
xor
sub
mov
inc
jns
push
fdiv
(bad)
cli
repnz
add
shr
push
push
inc
les
pop
xchg
inc
cld
sbb
movd
stos
sub
jnp
jmp
leave
mov
mov
mov
(bad)
adc
test
or
cmp
pop
adc
lea
jnp
cmps
pop
bound
xor
sar
inc
inc
inc
add
pop
push
and
cmp
(bad)
popa
test
pop
push
mov
inc
fsubr
fxch
ins
or
adc
imul
iret
loopne
ins
push
popf
shr
fnstcw
xchg
(bad)
fisubr
add
mov
mov
aas
mov
out
fwait
pop
xchg
out
call
cmp
cwde
inc
push
sahf
cld
cmp
fdiv
jbe
pmovmskb
pusha
mov
ins
out
aaa
loopne
enter
in
xlat
into
or
pop
push
xchg
adc
jno
hlt
jb
ds
jns
push
aad
scas
ds
aam
loop
fisubr
loope
jno
cmp
movs
jl
mov
mov
rol
fwait
jl
aaa
fsubp
popa
bound
jge
inc
jmp
adc
xor
call
push
(bad)
outs
xlat
fnstcw
add
nop
mov
jae
xor
out
jmp
cld
push
sub
or
sar
dec
data16
sti
dec
loope
and
push
iret
gs
jb
cmp
add
sub
mov
add
scas
shr
sti
out
mov
pop
lods
aaa
fcomp
repz
and
into
test
sbb
dec
cld
jbe
shl
jge
pushf
jnp
cmp
dec
jecxz
and
je
xchg
pop
xor
icebp
ret
test
xchg
xor
push
dec
mov
and
dec
mov
cwde
inc
loopne
push
dec
iret
cmp
sbb
xlat
xchg
test
inc
in
inc
or
push
xchg
jge
(bad)
nop
jmp
pop
sbb
sbb
in
jmp
mov
jmp
mov
in
xor
mov
pop
ror
lods
movs
ja
call
inc
xchg
add
mov
dec
mov
or
les
and
jp
sar
pop
and
ins
data16
pop
and
inc
out
cwde
out
dec
rol
sub
jp
mov
and
clc
mov
or
loope
sub
fnsave
push
scas
loop
jg
out
or
cld
xor
sbb
bound
fld
dec
sub
fisubr
and
add
outs
fist
push
cli
ffree
int3
push
or
adc
ds
dec
ret
or
and
xchg
loopne
jne
pop
mov
mov
cwde
(bad)
add
mov
xor
cmp
mov
icebp
pusha
lock
mov
xchg
dec
xlat
pop
popa
outs
cmp
arpl
cmps
test
leave
jecxz
push
jl
pop
xchg
sbb
adc
mov
cmp
call
mov
movs
xor
scas
enter
outs
inc
into
mov
or
mov
jmp
adc
fidiv
xor
cmp
(bad)
mov
adc
cmps
cmps
jo
xchg
or
je
or
(bad)
cmps
es
and
dec
movs
das
scas
mov
pop
mov
or
pop
jnp
outs
and
sbb
xchg
mov
pop
and
rol
add
icebp
xor
cmp
inc
fst
lods
in
xchg
push
outs
add
aam
ins
mov
sub
mov
xor
jmp
pop
gs
movs
cmp
pushf
imul
stos
jmp
sbb
arpl
pop
aam
aam
cmp
ret
xor
mov
inc
pop
shl
adc
pop
movzx
stos
sbb
jg
sub
fstp
mov
icebp
pushf
fisub
mov
fidiv
ficom
mov
iret
mov
xlat
mov
sub
(bad)
(bad)
pop
push
push
mov
out
pop
inc
ror
fwait
(bad)
push
outs
pop
pusha
push
mov
retf
in
add
sub
xor
xlat
cmp
fmul
fsub
jp
or
repnz
(bad)
mov
xor
fs
dec
les
pop
sbb
test
or
xchg
into
add
dec
shr
or
mov
mov
pop
jg
rol
aas
mov
pop
jle
mov
rol
dec
popf
stos
sub
push
and
push
mov
lods
push
add
pop
cmc
pop
aad
inc
push
jne
pop
mov
push
cmp
call
push
into
dec
frstor
das
retf
imul
mov
mov
out
and
je
and
xlat
or
mov
ins
mov
push
cld
dec
mov
cmp
in
sbb
adc
movs
dec
jno
cmp
ror
or
mov
mov
in
stos
outs
pop
pop
mov
mov
mov
adc
jecxz
xor
(bad)
movs
and
mov
std
test
inc
mov
cmc
mov
div
je
mov
inc
cli
xlat
shl
in
rcr
stc
mov
fs
or
sub
movs
or
and
dec
fwait
xor
scas
add
ins
cmp
cmps
movs
jae
or
nop
dec
sub
lahf
and
fadd
outs
inc
xlat
mov
mov
outs
mov
aad
fstp
test
sbb
repz
fs
mov
movs
pop
call
jge
ret
push
movs
mov
test
stos
fistp
push
sub
xor
xor
je
mov
mov
mov
aaa
jge
aas
outs
repz
ins
pop
stc
shl
cli
push
jge
(bad)
ret
pop
mov
sti
xchg
test
sbb
fcom
mov
(bad)
js
jno
lock
xchg
ficomp
shr
scas
aas
(bad)
out
inc
ficomp
cmc
push
sub
stos
mov
shl
movs
push
iret
fcomp
add
dec
shr
popf
inc
imul
cmp
sub
pop
arpl
pop
push
outs
fnstsw
fs
scas
pop
mov
lods
pop
xchg
fdiv
idiv
in
dec
pop
in
mov
jmp
push
push
jno
shr
push
mov
leave
(bad)
(bad)
sbb
rcl
les
into
or
sahf
dec
sub
pushf
ins
xor
mov
pop
movs
mov
icebp
in
cmp
mov
call
sti
aaa
outs
retf
cli
adc
push
mov
mov
daa
cli
stos
retf
pop
aad
cmp
pop
ins
dec
sti
cmp
pop
aad
cmc
mov
xor
push
ins
push
mov
(bad)
outs
xchg
adc
xchg
out
je
adc
add
adc
mov
test
aaa
aam
jb
pop
sbb
adc
adc
xchg
movs
and
mov
xlat
xchg
imul
sbb
pop
jl
icebp
test
bound
mov
jbe
mov
ret
xor
pop
and
cli
ins
jnp
cs
add
(bad)
pop
imul
mov
mov
ret
push
lods
iret
xchg
sbb
push
xor
ja
jns
arpl
icebp
dec
mov
bound
adc
jmp
mov
out
adc
mov
push
pusha
cmps
sub
repz
mov
dec
xor
retf
sub
push
ret
cmp
test
mov
sbb
xchg
repnz
jnp
ins
mov
sahf
dec
int
cwde
(bad)
retf
ins
xlat
call
js
sub
jmp
mov
ret
out
cmp
shl
sti
xor
les
mov
adc
fs
test
mul
movs
ficom
mov
jge
and
or
jno
rcl
(bad)
int
xor
fsub
lods
and
and
retf
jle
lods
mov
mov
jb
ss
add
out
pop
add
pop
mov
mov
push
or
ja
rol
(bad)
addr16
inc
cmp
pop
scas
stos
shr
loope
out
or
cs
inc
mov
fnsave
cmp
sub
adc
sub
(bad)
cdq
inc
add
into
popf
bound
xor
mov
out
call
hlt
mov
lock
mov
mov
fmul
mov
outs
(bad)
enter
dec
in
fucomip
mov
and
adc
jb
push
sbb
jp
xchg
loop
or
cli
dec
ins
ds
inc
call
xlat
les
xchg
push
test
int
adc
leave
icebp
cmp
pusha
push
push
out
push
xor
fisttp
gs
jecxz
aas
int
les
out
push
xlat
rcr
test
xchg
or
adc
in
mov
mov
dec
push
les
cmp
aad
les
xorps
or
inc
cmp
inc
cmp
cli
aad
jae
jb
inc
and
call
int3
add
icebp
test
and
(bad)
call
sbb
xchg
(bad)
xor
jp
sub
xor
mov
fist
lods
ficomp
sahf
push
sub
and
mov
pushf
push
adc
jmp
mov
add
mov
mov
pop
movs
adc
in
pusha
aas
add
fsub
dec
mov
clc
push
xor
mov
xor
inc
push
rol
call
es
sub
aas
aad
mov
movs
sub
sub
popf
mov
adc
push
mov
int
and
adc
adc
adc
inc
and
(bad)
dec
xchg
fiadd
out
sub
pop
xchg
jge
push
and
call
cmp
(bad)
in
daa
mov
add
dec
mov
imul
pop
(bad)
xor
pop
lods
out
adc
shr
clc
leave
inc
lea
push
mul
pop
sub
push
and
dec
fist
jbe
test
jne
mov
ret
cwde
push
aam
or
fnsavew
jmp
inc
jle
cmps
cmp
ins
jb
movs
outs
in
add
mov
mov
jmp
out
into
mov
or
mov
xor
mov
retf
xlat
xor
and
ret
(bad)
jbe
jecxz
pushf
pop
mov
pop
fs
cwde
(bad)
in
and
das
rcr
dec
add
pop
pushf
mov
in
mov
sti
dec
imul
jmp
in
outs
sub
adc
test
xchg
push
cwde
xchg
stos
cmps
add
pop
cmc
sbb
outs
call
xchg
and
je
ins
or
push
pop
inc
mov
sub
aam
cmps
daa
add
inc
pop
les
push
or
push
adc
in
call
aad
aas
in
hlt
xchg
imul
add
push
mov
test
scas
das
pusha
das
xor
lods
icebp
je
sbb
mov
cwde
test
inc
or
cmps
mov
mov
nop
aam
push
nop
inc
div
cmp
sub
retf
fwait
out
cmp
sti
js
inc
call
jg
xchg
xor
jae
(bad)
ja
mov
rcl
xor
fcomp
scas
daa
(bad)
xchg
push
xchg
dec
iret
or
pop
cmp
pop
dec
xchg
pop
pop
lea
cs
mov
sbb
pusha
imul
or
jp
cld
shl
xor
pop
and
iret
rcr
xor
jno
push
jae
repz
xchg
mov
pop
xchg
mov
test
xor
scas
fwait
popa
and
jbe
cmps
int
into
mov
fld
movs
push
xchg
jmp
jecxz
mov
adc
dec
inc
jae
stos
and
sbb
sub
shl
jbe
ins
pop
jo
sti
pop
scas
push
xchg
or
in
sub
xchg
mov
les
shl
loopne
and
cmp
ror
cmp
xchg
fist
scas
hlt
pop
popa
adc
and
call
lods
mov
add
sbb
sub
fs
xor
outs
outs
pop
xor
push
jnp
movs
fild
push
sub
jmp
adc
xchg
mov
or
push
jp
neg
mov
push
iret
retf
mov
mul
test
pop
fcomp
hlt
mov
rol
push
mov
(bad)
je
jo
push
loop
ins
inc
mov
xor
fidiv
mov
loope
adc
add
mov
adc
shr
mov
jo
int3
retf
loope
mov
call
rcl
adc
icebp
push
or
dec
push
jmp
nop
cdq
push
hlt
jne
and
sti
dec
jmp
xchg
inc
cs
in
lahf
mov
loope
test
out
adc
mov
pop
xlat
mov
adc
pop
aaa
adc
and
push
(bad)
cmp
mov
sbb
ins
in
jne
pop
mov
jmp
arpl
pop
icebp
test
push
stc
in
ja
lahf
mov
add
fadd
int
call
ret
clc
cmp
pop
neg
stos
jmp
aad
daa
mov
cmp
dec
lea
adc
or
add
lea
inc
dec
fstp
call
outs
and
sbb
aad
xchg
nop
shl
cmp
jge
sub
xor
sbb
mov
mov
push
mov
xor
or
(bad)
shld
mov
inc
mov
(bad)
push
sbb
shl
xchg
lahf
cmp
push
push
adc
mov
mov
addr16
push
pop
pop
xor
lods
cmp
call
mov
outs
xlat
mov
pop
xchg
fcom
add
add
mov
inc
inc
gs
fnstenv
movs
mov
scas
stos
jle
inc
call
retf
fnstcw
sub
dec
inc
push
cwde
sub
(bad)
xchg
mov
call
lds
fdivr
and
aas
jnp
sub
lahf
add
in
jp
out
adc
popf
mov
push
(bad)
out
mov
aad
adc
adc
push
mov
xor
mov
sti
xchg
mov
mov
rcr
retf
push
cmp
movs
jmp
or
mov
js
pop
mov
inc
xchg
into
fdiv
fstp
mov
cmp
and
and
jl
xchg
daa
mov
push
(bad)
enter
stos
test
es
mov
scas
cmp
xchg
inc
pop
jp
xchg
xchg
xlat
pop
sbb
cmp
neg
or
push
ror
int3
rcr
mov
dec
mov
sbb
mov
inc
sbb
add
loop
and
sbb
and
pop
xchg
(bad)
aam
imul
jae
fwait
or
push
fwait
sbb
mov
leave
xchg
cli
lds
pushf
and
inc
(bad)
sbb
add
mov
cmp
in
and
imul
loop
mov
or
ds
pop
lods
mov
arpl
or
inc
mov
mov
test
cmp
(bad)
jno
dec
jns
div
out
push
popa
mov
sar
mov
sub
dec
mov
test
sbb
cmc
adc
test
push
mov
jl
imul
ss
lods
sbb
test
jl
in
cmp
out
lds
push
shr
pop
loope
jno
sub
dec
push
ja
xor
cmps
shr
jb
out
pop
rol
fwait
in
loop
out
call
cmps
rol
xchg
ins
mov
inc
jne
push
lea
stc
icebp
adc
(bad)
and
js
mov
pop
mov
pop
iret
inc
and
cdq
push
cmp
in
inc
repnz
jle
dec
cdq
scas
sub
lds
cs
(bad)
pop
rcl
dec
out
pusha
add
stos
push
sub
ficom
sbb
inc
jmp
mov
jne
loop
push
lea
jl
jns
pop
sbb
out
das
pop
std
jo
xchg
repnz
sub
ja
jae
idiv
and
popa
fidivr
push
imul
lods
aam
and
popa
ins
in
add
add
stos
out
pop
and
xor
inc
mov
lea
retf
jmp
dec
out
and
mov
inc
fucom
fwait
sub
call
cmp
cld
pop
je
push
pushf
xor
retf
scas
sbb
pop
inc
(bad)
pop
jnp
inc
cmp
and
jns
or
xchg
xchg
(bad)
fisttp
jae
or
sbb
dec
sbb
xor
cld
stc
int
mov
jl
clc
push
repz
js
or
lods
sbb
jl
call
and
sub
pop
cli
mov
adc
mov
(bad)
or
retf
sbb
cli
ror
push
sub
ins
pop
movs
mov
push
cmc
xchg
mov
cld
shr
rcl
test
mov
push
push
and
rol
inc
inc
push
sbb
jo
lock
outs
ins
inc
loop
out
iret
xchg
(bad)
int3
jne
loope
(bad)
adc
xlat
popa
xchg
fldenv
fs
fisubr
cmp
iret
mov
mov
fcomp
push
fsub
mov
mov
js
sar
push
fwait
(bad)
sub
pop
cli
add
shr
gs
test
dec
cmp
icebp
fstp
aad
mov
leave
ficomp
inc
or
cmp
shl
inc
lock
pop
pusha
test
add
inc
push
cmps
aas
xchg
call
lahf
push
or
push
lods
push
add
out
fcmovnb
lods
and
or
mov
sub
les
sbb
and
int
movs
scas
icebp
in
out
fwait
xlat
push
dec
jmp
hlt
inc
and
stc
inc
sahf
not
and
dec
or
inc
outs
test
test
outs
push
sub
cmp
and
dec
or
mov
cmp
retf
jp
mov
and
cld
nop
aam
or
mov
mov
lea
jo
sbb
movs
ror
int
inc
(bad)
cwde
xor
jbe
mov
jecxz
mov
inc
add
scas
inc
jb
dec
fs
mov
lds
dec
push
(bad)
icebp
loop
stos
mov
and
clc
les
pushf
js
movs
movs
inc
fwait
loope
(bad)
dec
(bad)
rol
dec
inc
sbb
int3
sbb
test
pop
cmp
das
loop
out
mov
jmp
cs
lods
sub
push
mov
stos
sar
mov
shr
pushf
shl
pop
test
sub
mov
enter
bound
mov
(bad)
jmp
or
fidiv
rcl
xchg
sub
xor
loope
sti
ss
imul
jnp
loop
pop
xchg
mov
lods
sbb
push
push
rol
into
xchg
jmp
dec
push
dec
xlat
mov
loopne
and
repz
addr16
outs
lahf
push
cmps
cmp
jge
retf
(bad)
jmp
ins
(bad)
ror
jnp
add
cwde
inc
push
pop
sbb
sbb
fisub
rol
sbb
jae
mov
mov
fimul
add
movs
lods
xchg
xchg
sub
into
in
jnp
into
test
and
mov
std
nop
mov
outs
fs
sbb
sbb
fadd
fist
cmp
push
and
mov
cli
scas
inc
loop
push
std
test
xchg
lock
leave
sbb
rcl
jmp
nop
inc
mov
or
and
sbb
int
mov
aas
mov
outs
add
stos
and
into
inc
pop
mov
add
dec
mov
test
adc
es
push
stos
jmp
call
rol
push
push
xchg
inc
aaa
out
lea
sar
lock
mov
inc
pop
test
xchg
jmp
jns
movs
lea
xor
lods
mov
xchg
mov
aaa
dec
pop
or
cmp
ror
push
pop
sub
pushf
movs
lods
call
push
popa
inc
(bad)
inc
fcmovne
fild
inc
xor
sbb
jmp
or
lea
mov
movs
push
enter
push
jp
push
lods
add
dec
cmps
mov
push
pop
push
or
push
mov
mov
push
cmp
xchg
push
mov
cdq
cmp
das
pop
xchg
fisubr
aad
out
inc
loope
nop
jno
in
cmc
or
rol
popa
push
adc
mov
or
pushf
sbb
(bad)
hlt
int
xchg
lea
add
jge
mov
mov
(bad)
jecxz
mov
inc
pop
inc
inc
in
sub
add
dec
cmp
sbb
shl
stos
dec
loope
mov
(bad)
out
push
push
fistp
cmp
mov
sbb
js
sbb
mov
or
sbb
ins
jge
stos
xchg
fist
pop
sub
sub
mov
movs
pop
cli
mov
or
test
inc
cli
pushf
sahf
or
pop
fdiv
jmp
popa
push
push
xchg
jp
adc
sub
mov
and
out
mov
push
xchg
pop
std
fcmovu
jo
daa
stos
adc
fisub
cmp
xchg
cmp
dec
jbe
cmps
mov
pop
sub
retf
inc
vpmacssdqh
or
lea
sbb
add
pop
test
adc
sub
mov
push
shr
dec
int3
sbb
jl
aaa
sub
and
mov
rcr
(bad)
cwde
jle
clc
(bad)
in
sbb
icebp
sub
xchg
and
inc
jno
jmp
jns
lods
xchg
fst
movs
dec
add
add
nop
jbe
and
and
psubb
ins
ins
fidiv
loope
mov
out
adc
cmps
xlat
imul
(bad)
mov
out
cli
pop
xor
mov
lods
adc
(bad)
jg
push
cmp
sub
dec
lods
push
shl
pop
cdq
ins
mov
fldcw
test
std
mov
adc
loopne
fwait
mov
pop
sub
or
sbb
jge
sbb
(bad)
loopne
fld
mov
push
pop
xchg
sub
call
je
jp
in
pop
das
jo
mov
sbb
imul
out
push
inc
jp
inc
or
jge
aaa
into
add
in
mov
adc
iret
shl
jnp
push
fimul
push
sub
mov
mov
cmps
sub
and
hlt
js
xchg
inc
mov
and
iret
mov
lods
inc
pushf
daa
jae
xchg
and
mov
add
rcr
movs
loop
push
mov
inc
and
jb
lods
pop
jno
and
int3
push
mov
imul
ret
or
int3
jb
push
out
enter
mov
scas
fwait
jmp
pop
outs
sbb
scas
pop
mov
add
mov
and
mov
pop
sbb
mov
jae
xchg
(bad)
fcmove
ficom
(bad)
popa
cmp
and
lods
mov
call
call
xor
aas
pop
jl
pop
cmp
(bad)
retf
in
popa
mov
jno
leave
popf
cdq
ins
add
lods
cmp
mov
or
sub
leave
je
repnz
pop
add
push
push
fistp
and
icebp
ror
mov
jp
pop
jmp
xlat
add
sbb
xor
fcmovnu
jp
mov
xchg
mov
mov
mov
std
ins
iret
mov
mov
dec
xchg
pop
inc
mov
test
push
push
daa
push
sbb
and
xor
lea
add
loopne
fstp
aad
pop
pop
fbstp
imul
adc
lea
xchg
pop
outs
nop
in
dec
mov
sbb
pop
xor
jg
cmps
je
mov
mov
movs
fdiv
or
pop
fdivr
jbe
push
mov
jo
add
jb
fdiv
adc
inc
out
into
loop
pop
cmp
popa
push
inc
retf
fisub
rol
in
sub
pop
or
adc
sbb
cmc
sub
add
xchg
dec
mov
sahf
(bad)
fisubr
adc
xor
popa
movs
lahf
xor
stc
js
dec
repz
test
inc
loop
push
out
sar
pop
lock
inc
sub
mov
cli
leave
sub
fs
out
out
sub
aam
cmp
adc
(bad)
lods
in
jno
jne
movs
mov
hlt
jns
and
(bad)
jg
lods
jp
(bad)
in
adc
(bad)
mov
lods
and
inc
jns
xor
jmp
movs
movs
cmp
xlat
loopne
jb
push
mov
cli
lods
pop
cdq
adc
cmps
dec
(bad)
cmp
hlt
leave
rsm
ins
pop
and
out
inc
hlt
stc
mov
and
ss
jle
push
adc
test
xchg
bnd
jge
push
fldcw
pop
ins
rcl
xchg
pop
je
jns
xor
jle
push
ja
jg
(bad)
mov
push
and
data16
and
(bad)
mov
xor
add
push
push
dec
mov
in
adc
sbb
lea
adc
mov
jmp
xchg
inc
in
lods
stc
movs
les
(bad)
fisub
rol
push
mov
cmc
sti
inc
xor
stc
fs
push
(bad)
stc
sahf
and
pop
mov
(bad)
mov
call
mov
jnp
jbe
xchg
mov
je
mov
scas
jbe
jb
pusha
or
ror
cmc
cmp
dec
mov
adc
sbb
add
and
cmps
push
jl
ins
mov
cmc
inc
and
pop
add
adc
rcl
aaa
in
out
sbb
stos
jbe
loope
add
int
in
scas
fisubr
stc
cwde
ficom
retf
(bad)
jl
jge
fidiv
das
cmps
jns
push
enter
pop
arpl
cli
and
lods
fs
sbb
retf
xor
push
mov
push
call
neg
sbb
aad
adc
push
push
into
mov
add
push
movs
push
cmp
jae
shr
jmp
iret
push
jmp
pop
mov
div
mov
popa
pop
sbb
(bad)
dec
adc
dec
mov
bound
dec
sbb
xor
movs
dec
jb
cwde
mov
cmp
dec
xchg
das
xor
xor
sub
xchg
cmp
inc
xor
lds
push
imul
inc
jbe
jle
std
jno
mov
out
leave
div
sub
and
cmp
sbb
xor
cmp
pop
lea
cli
ficomp
push
sbb
add
arpl
push
dec
cmp
pushf
ret
push
fisttp
daa
into
push
cmp
dec
mov
test
sbb
or
push
in
iret
pop
in
in
dec
xor
add
scas
sub
xchg
repz
test
jl
jne
scas
stc
mov
push
dec
fisubr
repz
jo
cmp
inc
mov
sti
sbb
jmp
nop
sbb
(bad)
jns
ss
ss
movs
test
xchg
int3
rcr
cwde
jmp
int3
jae
test
outs
ja
call
loopne
idiv
mov
mov
dec
fsubr
pop
test
push
adc
dec
xor
fwait
loopne
push
cmc
jecxz
ja
cwde
xor
cmc
mov
mov
dec
(bad)
jecxz
and
push
mov
and
std
adc
fild
loop
mov
xchg
pop
pop
aad
mov
in
out
jecxz
sub
cmp
clc
das
dec
dec
and
dec
pop
mov
xor
fwait
or
push
add
gs
push
in
addr16
and
push
or
jne
push
add
pop
stos
ds
jge
xor
sbb
xchg
sub
adc
mov
xchg
pop
and
add
lahf
jbe
(bad)
dec
pusha
sar
mov
jl
or
pop
fistp
jmp
push
test
shl
xchg
pop
stos
jl
push
aas
pusha
rol
adc
stc
imul
mov
push
data16
sbb
mov
int3
adc
mov
repz
mov
xor
fimul
push
sbb
xor
jecxz
adc
fimul
lahf
add
aaa
fcmovnbe
fiadd
adc
jno
adc
adc
(bad)
cmc
sub
mov
push
ret
not
dec
out
xor
sti
push
cmc
ficom
pop
mov
xchg
jmp
xor
or
mov
xchg
mov
int
mov
out
icebp
jno
(bad)
in
movs
scas
mov
in
test
xchg
std
push
cld
loop
cmpps
popf
fdivr
loopne
cli
loop
push
cdq
jg
imul
inc
test
ds
sbb
xchg
ror
imul
fs
ret
cmp
xor
dec
adc
pop
inc
mov
(bad)
std
es
mov
jge
mov
pop
sbb
stos
push
nop
pop
push
fdiv
ret
loope
xchg
cli
mov
cmps
mov
clc
dec
stos
xchg
jns
push
and
sar
or
dec
mov
cmp
in
mov
pop
into
test
retf
push
pop
in
mov
jp
mov
dec
push
leave
xchg
cmps
lahf
inc
mov
iret
inc
sbb
push
xlat
popfw
sub
popa
pop
pop
daa
cli
(bad)
mov
jmp
imul
or
mov
nop
inc
pop
sub
jnp
cmp
add
retf
inc
es
mov
sbb
cmp
cs
lea
call
or
cmp
add
mov
sub
pop
and
(bad)
aam
rol
pop
rcr
mov
add
adc
add
inc
(bad)
(bad)
aam
and
shl
mov
mov
dec
add
test
nop
xor
das
(bad)
xor
mov
out
xchg
or
mov
pop
lods
add
dec
sbb
idiv
mov
cmp
fcomi
cs
mov
ret
cmp
pop
ds
retf
out
pop
cmp
(bad)
push
pop
popf
(bad)
stos
pop
sbb
push
popa
retf
sub
inc
xchg
in
scas
jne
jb
dec
mov
fcom
leave
icebp
lea
lods
fst
push
cmp
dec
cmp
ret
stos
adc
xchg
jmp
mov
movs
mul
outs
out
leave
aam
cwde
sub
jecxz
jno
ja
outs
inc
ret
xlat
cmp
dec
jo
ret
jns
jmp
ds
push
xor
push
(bad)
xor
inc
jmp
dec
xchg
mov
push
sbb
imul
ret
inc
(bad)
add
cmc
cli
jne
mov
xchg
mov
xchg
or
mov
mov
fimul
shr
cmp
cdq
xchg
(bad)
movs
imul
add
imul
adc
jmp
mov
pop
jno
inc
scas
mov
cs
cmp
das
aas
(bad)
or
add
stc
mov
cld
sbb
stc
mov
sbb
adc
add
pop
leave
movs
int
jmp
sbb
mov
and
or
mov
addr16
sbb
push
sbb
push
rcr
sbb
push
sub
push
pop
fistp
loop
stos
inc
rcr
call
and
adc
inc
sar
jmp
add
jns
cdq
iret
sbb
nop
mov
call
outs
sub
cmp
icebp
pop
sbb
mov
mov
scas
jns
int
add
sti
aad
jmp
cmp
(bad)
(bad)
jl
inc
and
(bad)
(bad)
inc
jmp
mov
scas
fnstcw
sub
add
stos
fisttp
mov
jae
lds
cmp
inc
jnp
(bad)
mov
inc
inc
movs
push
into
enter
mov
mov
loopne
cmp
xor
push
inc
or
rol
dec
push
mov
(bad)
ds
dec
cli
js
dec
les
in
and
int
outs
pop
cmp
repz
ss
in
mov
mov
cmp
and
xchg
fidivr
call
add
arpl
lds
shl
pusha
xchg
stos
mov
mov
xchg
or
cmp
mov
out
bound
cmp
daa
loope
fnsave
addr16
clc
xchg
or
push
sub
sub
xlat
jmp
pop
in
and
push
icebp
push
lods
sti
mov
icebp
xchg
sub
xor
jg
lods
push
mov
sahf
push
cmp
fstp
push
pusha
fldcw
inc
movs
and
jmp
rcl
out
pop
pop
add
push
or
aas
sahf
aaa
sub
lea
mov
pushf
sbb
out
adc
add
xor
cmps
retf
mov
leave
sub
ss
jo
pushf
clc
dec
xor
dec
jmp
fadd
and
lea
mov
(bad)
out
dec
dec
cs
pop
sar
fidivr
push
push
cli
int
test
fld
mov
mov
cli
and
cmp
mov
mov
mov
fwait
or
popf
mov
stc
sbb
xchg
shr
fwait
pop
(bad)
ds
adc
popf
(bad)
jmp
in
xchg
test
imul
push
and
call
mov
xchg
and
sbb
and
xchg
xchg
add
rcl
iret
jbe
dec
xchg
add
lods
iret
popa
add
mov
arpl
xor
scas
arpl
mov
xlat
outs
inc
jbe
dec
(bad)
gs
jle
jmp
shr
fsub
cmc
outs
outs
xchg
sbb
jmp
fsubr
jnp
mov
jno
adc
outs
sub
(bad)
clc
mov
pop
add
push
inc
dec
mov
or
call
push
aaa
out
shl
cmp
inc
cmc
mov
pushf
ss
add
test
push
fs
addr16
pop
in
mov
lods
test
test
dec
or
push
and
outs
mov
sti
pop
dec
and
stos
pop
jne
push
adc
(bad)
clc
cmp
mov
jne
pop
add
mov
lds
(bad)
pop
scas
popf
imul
sbb
das
aas
mov
stos
into
push
mov
mov
adc
push
inc
mov
pop
fldcw
adc
popf
mov
(bad)
data16
jno
ret
stc
add
jnp
cmp
test
(bad)
xor
sbb
fidivr
call
xchg
sub
jge
lea
mov
das
fbstp
cli
daa
test
je
test
daa
cmps
(bad)
mov
mov
jb
in
jp
xchg
and
jno
popa
dec
gs
pop
call
pop
bound
mov
adc
push
pop
ins
xlat
shl
xor
mov
mov
dec
out
and
jle
mov
out
cwde
lock
(bad)
aas
call
push
clc
ja
out
sar
mov
ret
jmp
adc
cdq
inc
xor
pop
and
test
cld
pop
aas
mov
push
pop
arpl
cmc
imul
(bad)
call
inc
imul
push
setnp
adc
push
inc
hlt
mov
stos
lds
sub
sub
shr
push
inc
inc
push
mov
(bad)
call
mov
inc
dec
lods
adc
or
sti
pusha
cli
sub
mov
arpl
movs
dec
test
fstp
mov
int3
cwde
leave
outs
mov
push
mov
je
imul
pop
push
ins
inc
cli
in
jmp
test
xor
sub
mov
shr
push
or
mov
push
jmp
or
imul
add
icebp
xchg
das
cdq
cmp
jns
loop
call
(bad)
not
mov
test
xor
or
popa
fdivr
ret
mov
dec
cmc
xchg
push
mov
int3
fwait
sub
adc
fdiv
sub
push
in
cmps
jns
push
push
and
inc
pusha
lods
mov
idiv
xchg
rcl
or
xor
imul
scas
pop
cmp
rcr
enter
(bad)
push
jns
daa
push
dec
int
mov
jno
inc
(bad)
adc
fld
sub
(bad)
call
cmp
cli
push
adc
inc
inc
shl
mov
adc
sub
sub
adc
push
mov
mov
pushf
outs
pop
dec
cmp
jbe
ja
idiv
xor
mov
push
cwde
mov
movs
cmp
jge
xchg
lock
addr16
push
icebp
inc
cmc
or
test
iret
repnz
shl
popf
out
int3
add
pop
pop
mov
mov
sbb
mov
mov
clc
push
cld
xor
mov
mov
in
clc
or
or
mov
xor
push
and
jl
xor
push
int
(bad)
call
inc
pop
addr16
mov
loop
jnp
fnstsw
enter
call
add
push
mov
cmp
test
mov
jecxz
inc
cmp
out
js
cmps
xlat
xchg
sbb
sbb
xor
jmp
adc
repnz
cdq
cmp
inc
test
shr
enter
scas
jge
into
sbb
imul
and
pop
lock
xchg
or
popa
sahf
and
inc
push
ins
or
cmp
mov
pop
out
lea
repnz
shrd
jae
mov
ja
push
add
(bad)
adc
ins
push
dec
add
sub
into
xor
cmc
repnz
pop
or
jle
mov
stc
sub
inc
xor
fisttp
or
or
inc
fdiv
out
xchg
ss
add
and
pop
call
and
or
jp
push
sbb
ret
jno
pop
xor
pushf
jbe
add
shl
xchg
imul
shl
cld
addr16
mov
imul
mov
mov
jo
loop
dec
push
mov
ret
mov
or
and
push
xchg
mov
or
js
not
fsub
xor
fnstenv
lahf
adc
sub
or
aad
xchg
lock
ds
mov
sbb
push
cmp
movs
call
jae
cmp
aam
pop
cmps
fnstsw
pop
push
fisub
xor
or
jmp
cmp
mov
out
fwait
test
shl
je
push
xchg
add
mov
and
cmp
mov
(bad)
frstor
mov
icebp
jle
xchg
mov
pop
aad
jae
fidiv
jae
mov
mov
retf
pop
aad
dec
xchg
cwde
cmp
cmp
aam
jg
cli
adc
clc
dec
(bad)
jae
pop
out
retf
std
push
jecxz
popf
jo
pop
fs
pop
adc
or
pusha
(bad)
jae
shr
sbb
das
mov
adc
out
test
push
pop
out
outs
xchg
daa
add
test
outs
sub
scas
in
es
repnz
popa
cs
xchg
jb
fisubr
and
test
push
cmc
pop
and
out
cmp
inc
gs
pop
fwait
mov
cmp
cli
stos
add
out
in
push
shr
add
retf
dec
jge
xor
and
jns
xchg
cmp
push
pop
xchg
idiv
call
jecxz
jge
and
dec
mov
(bad)
(bad)
fild
push
or
cmp
test
pop
or
mov
gs
mov
inc
ds
shr
mov
cmp
push
add
xor
mov
sbb
popa
jp
sbb
pop
icebp
shl
retf
sub
adc
xchg
inc
adc
in
sub
icebp
movs
mov
xor
ficomp
xor
cld
or
cmp
imul
shl
fistp
out
mov
aam
adc
add
rcl
int3
cwde
jne
sub
push
mov
lods
(bad)
fisubr
dec
sbb
cli
cmp
and
jg
ret
idiv
mul
mov
push
xor
sbb
and
ret
xor
nop
hlt
mov
imul
cmp
fld
iret
and
jns
movs
push
jmp
mov
pop
inc
std
cmp
fsubp
enter
test
cdq
mov
je
push
ja
lds
add
sbb
cmc
sbb
ret
jae
lods
adc
pop
cmps
pop
pusha
bound
(bad)
adc
clc
add
in
xchg
hlt
or
pop
icebp
in
outs
or
(bad)
sub
push
in
fmul
push
pop
mov
lea
lock
lock
std
xchg
ret
jno
ds
mov
in
in
pop
xchg
adc
push
push
jb
ror
inc
add
adc
pop
mov
ins
stos
xchg
clc
jnp
inc
mov
stos
push
lock
xor
test
in
push
in
xchg
repnz
jne
mov
aaa
jne
fdivrp
mov
pop
jae
cmp
cmp
or
es
(bad)
mov
push
aad
movs
ret
sub
xor
aad
stc
sbb
pop
add
add
outs
movs
inc
mov
inc
mov
dec
(bad)
push
xor
pusha
inc
inc
es
neg
daa
inc
push
jge
push
xchg
out
stc
mov
test
scas
int
imul
test
rdtsc
jbe
sbb
inc
imul
push
mov
gs
push
clc
jle
call
mov
add
jns
neg
sti
addr16
test
fstp
adc
cmp
out
cmp
(bad)
daa
(bad)
xchg
ja
cmp
stc
arpl
movs
push
fcom
jnp
cmps
adc
je
push
or
outs
daa
fbld
dec
call
xchg
push
sub
inc
aad
test
jecxz
cmp
pop
dec
inc
inc
mov
adc
push
neg
or
jg
sbb
jg
test
retf
xor
push
imul
push
mov
inc
pop
fs
fdiv
shl
pusha
jle
fwait
aam
xchg
inc
add
inc
lods
cdq
lock
cmps
dec
xor
cmp
or
xchg
mov
imul
dec
mov
gs
in
jmp
fisttp
das
das
jecxz
mov
les
daa
and
xchg
pop
sbb
sbb
(bad)
adc
xor
add
push
jl
into
std
or
xchg
fsubr
push
adc
loop
pop
pusha
sub
imul
(bad)
out
call
adc
sahf
test
adc
retf
icebp
xor
mov
pand
xor
loope
gs
aam
add
xor
mov
(bad)
ret
push
shr
jmp
aam
sti
jp
inc
or
push
jmp
fistp
bound
cli
or
adc
sub
inc
mov
retf
ss
pop
aaa
jae
mov
out
push
add
inc
rcr
or
not
stos
outs
pop
stc
fbld
je
sub
fdiv
fsubr
inc
dec
dec
push
or
mov
fs
(bad)
div
jb
stos
dec
cmps
mov
lods
in
fisubr
int
mov
cli
jmp
in
cmps
pop
pusha
mov
dec
inc
adc
repnz
push
xlat
imul
cmp
jne
inc
(bad)
adc
nop
pop
js
scas
cmp
add
mov
in
lods
push
fsub
movs
and
xchg
in
pop
mov
pusha
loopne
mov
fild
jo
push
mov
xor
mov
xchg
js
jns
lahf
jmp
sbb
sub
in
pop
pop
push
adc
cmps
data16
(bad)
push
adc
sub
ds
mov
ja
or
js
sub
loop
es
shl
sbb
fldenv
and
stos
fstp
pop
aad
cmp
lods
fnstenv
pop
push
adc
jl
loop
add
cmp
cmp
dec
xor
bound
lods
adc
sub
fld
or
(bad)
cld
in
mov
xlat
xlat
stc
fwait
adc
xor
rcl
jne
pop
xchg
call
aam
out
sti
(bad)
hlt
out
(bad)
cld
shr
pop
into
add
xchg
dec
out
mov
push
fdivr
mov
popf
mov
sub
ret
sbb
jmp
sar
xchg
retf
xchg
repz
pop
cli
test
inc
adc
push
push
and
mov
je
sahf
pop
scas
pushf
fidiv
in
jmp
mov
and
cmps
rcl
dec
loop
cmp
in
sahf
into
(bad)
retf
into
imul
sahf
(bad)
hlt
sahf
and
sub
dec
xor
jne
dec
mov
cs
cmp
lods
mov
or
ss
cs
cmp
es
mov
sub
dec
cwde
mov
inc
iret
rol
loope
iret
cmp
lahf
inc
jmp
xchg
cwde
sub
adc
dec
pop
push
inc
dec
ss
mov
enter
cmp
push
repz
dec
sub
xchg
dec
out
lods
mov
xchg
sbb
ja
hlt
in
rcl
clc
pop
repnz
mov
cmp
in
and
or
lods
mov
inc
ficomp
(bad)
xor
xor
xor
dec
xor
hlt
inc
scas
(bad)
sbb
es
xchg
inc
jg
fisub
in
jmp
adc
jp
hlt
dec
ret
cmp
test
stos
sbb
loope
mov
ret
dec
repz
inc
sar
fild
in
and
sub
sbb
retf
adc
pop
mov
push
leave
imul
call
bound
adc
and
inc
dec
icebp
xor
sahf
std
add
dec
pop
jl
fdivrp
xor
out
mov
leave
repz
cmp
fwait
mov
repz
std
(bad)
fs
neg
imul
nop
stc
out
stos
push
push
pop
pusha
ins
call
xchg
pop
push
mov
out
pop
cmc
inc
(bad)
rol
and
out
mov
xor
(bad)
stos
mov
nop
pop
in
aas
xchg
bound
mov
sbb
xor
hlt
xchg
adc
push
push
int
movs
mov
cwde
jge
sub
pop
test
bound
std
fwait
sbb
icebp
pop
cmp
aas
mov
out
ret
fisub
rcr
lock
mov
sbb
imul
dec
(bad)
fstp
pop
add
xchg
or
dec
xchg
cli
test
rcl
in
mov
or
inc
jmp
and
shl
xchg
stos
ja
dec
(bad)
(bad)
rcr
adc
mov
dec
mov
ds
push
push
sub
retf
mov
push
clc
in
loopne
cwde
xchg
push
cmps
xchg
cmp
mov
mov
jle
inc
xchg
sti
popa
jge
and
and
sub
push
pop
jno
jg
inc
sbb
ja
in
in
add
mov
and
imul
sub
popa
dec
arpl
cwde
lahf
pop
addr16
ss
lods
retf
add
sti
adc
dec
pop
loopne
jmp
pop
jmp
mov
inc
jle
xor
lock
movs
bound
inc
push
dec
or
aam
jne
mov
idiv
ja
mov
mov
pop
jo
mov
outs
shl
xor
loope
inc
mul
push
push
movs
sbb
and
add
fs
sidtd
mov
sar
push
das
pop
pop
xchg
cmps
retf
nop
dec
ret
pop
test
jno
sbb
shr
mov
icebp
inc
inc
pop
pusha
enter
pop
loopne
mov
cmps
lods
jmp
adc
or
mov
fmul
jp
fsubr
mov
jl
xchg
cs
or
mov
loop
cmp
xchg
sti
mov
sti
jne
fistp
shl
and
ins
mov
addr16
xchg
mov
mov
ins
xor
add
sbb
clc
rol
scas
pop
inc
or
push
add
xchg
inc
out
arpl
test
mov
loop
and
pop
ss
adc
push
gs
dec
xlat
xor
adc
or
inc
sub
ret
add
ret
scas
or
push
fiadd
pop
rol
ret
repz
test
add
or
ja
cmp
pop
cbw
rcr
sub
add
pusha
pop
xchg
lods
add
dec
mov
out
(bad)
(bad)
mov
stos
ss
adc
and
push
cmp
call
in
sbb
adc
xor
inc
(bad)
mov
push
jae
imul
sub
inc
sti
sti
in
jecxz
mov
push
lods
fs
dec
scas
or
push
jb
arpl
cmps
clc
jb
and
inc
fisub
mov
push
cmp
in
movs
adc
xchg
loopne
mov
jnp
sbb
xor
lock
popf
lods
(bad)
rol
test
rol
movs
push
and
outs
in
in
scas
push
es
jne
push
xchg
sub
sar
dec
add
mov
imul
mov
dec
push
test
dec
aas
shr
mov
dec
dec
(bad)
sub
or
cld
jg
iret
mov
enter
mov
sbb
sbb
stos
jl
in
out
adc
imul
xchg
movs
xchg
add
jmp
pop
rcr
xchg
in
repz
pop
sahf
pop
and
scas
xchg
lahf
xchg
(bad)
rol
xchg
aad
adc
dec
mov
cdq
outs
pop
sub
inc
movs
mov
push
xchg
test
aaa
sar
sbb
outs
mov
out
je
fwait
in
test
xchg
fsubr
ror
mov
push
mov
adc
fstp
scas
xchg
sahf
into
adc
sbb
pusha
mov
push
jne
mov
push
dec
lods
clc
mov
sub
add
mov
ss
cwde
xor
mov
cs
push
push
dec
int
mov
in
in
push
daa
enter
test
(bad)
fild
loopne
cld
xchg
sbb
lds
dec
fcmovbe
ja
mov
daa
mov
or
xor
push
push
or
push
xchg
push
(bad)
ret
aad
and
mov
sub
lods
daa
pusha
sbb
hlt
inc
mov
xlat
pushf
cmp
dec
iret
ds
ss
sbb
mov
mov
xchg
(bad)
xlat
inc
add
cmps
dec
fcom
fucom
inc
out
fisub
rcl
cs
out
mov
adc
or
inc
outs
dec
fabs
xor
xchg
xchg
lock
mov
scas
cwde
jge
push
jb
adc
jle
xchg
ret
daa
movs
in
out
and
jo
mov
inc
pop
xchg
pop
xor
mov
jne
dec
arpl
lods
push
fidiv
or
shl
mov
xchg
xor
sbb
dec
test
xchg
push
and
cmp
not
not
mov
push
ficom
outs
icebp
pop
dec
js
ror
jmp
mov
xor
or
nop
arpl
jecxz
call
jmp
xchg
jmp
fmul
cdq
iret
out
xchg
ret
add
jnp
sbb
xchg
sbb
movs
rcr
(bad)
cmp
pop
xor
cli
jb
pop
int
pop
imul
jge
adc
mov
fdiv
repnz
push
pop
dec
mov
cmps
ins
mov
fcom
jmp
ror
lods
pop
popf
inc
xlat
adc
push
inc
pop
push
loopne
sub
test
loop
ds
cmps
popf
adc
inc
int3
jmp
or
or
nop
or
adc
lahf
xchg
inc
or
lods
mov
fdivp
xor
int
cdq
aad
mov
outs
fdivr
and
test
(bad)
mov
ror
adc
sbb
retf
push
loopne
movs
sub
fmulp
test
(bad)
jp
popf
pop
es
xchg
pop
add
(bad)
xor
xchg
mov
imul
jmp
in
mov
mov
mov
aam
cwde
cmp
xlat
mov
mov
scas
adc
jl
xor
loopne
ret
hlt
clc
pop
pop
(bad)
jno
mov
sub
xlat
rol
inc
ins
jge
and
dec
(bad)
and
xchg
call
popa
xchg
sbb
mov
jle
push
loope
nop
fwait
mov
pop
ror
mov
sbb
dec
jno
cmp
scas
jmp
fs
add
dec
sub
test
mov
xchg
rcr
cmp
aaa
sub
add
mov
adc
cmp
fsubr
test
outs
xchg
addr16
out
fxsave
pop
pop
xor
mov
and
dec
pop
xchg
mov
movs
out
xchg
cmps
jmp
imul
add
sbb
cli
stos
inc
cdq
dec
jmp
inc
test
inc
inc
pop
popf
inc
lods
es
dec
mov
dec
loope
xchg
inc
nop
clc
or
repnz
mov
pop
std
push
mov
jmp
leave
sahf
movs
cmp
sahf
mov
inc
sbb
cmps
push
push
xchg
jp
and
inc
loope
pop
mov
idiv
mov
mov
xor
add
mov
dec
daa
fisub
sub
cmp
out
repz
xchg
push
es
ror
cmp
ror
mov
xchg
not
nop
movs
adc
fcom
cwde
std
xchg
jne
jecxz
sub
pop
ss
cmp
dec
jecxz
jns
stos
xchg
into
mov
popf
inc
call
mov
or
fmul
cmps
cmp
imul
add
xor
and
test
jno
dec
outs
cmc
(bad)
gs
dec
adc
cdq
ret
daa
or
xchg
pop
adc
jno
into
test
pop
ret
mov
inc
fst
adc
out
(bad)
pop
daa
and
lahf
mov
fadd
rol
lahf
lds
add
sbb
popa
jp
movs
dec
and
aaa
mov
mov
and
adc
lahf
add
nop
sub
es
scas
pop
cmc
cwde
(bad)
aaa
stos
sbb
cs
shl
mov
(bad)
movs
lods
jmp
pop
xchg
loope
jmp
jmp
enter
and
stc
xor
xor
add
add
mov
mov
(bad)
mov
or
xchg
adc
pop
les
sahf
call
dec
xchg
test
dec
pop
and
cmps
sbb
push
xchg
add
mov
(bad)
or
mov
xor
mov
fwait
and
jne
sub
mov
sbb
add
in
mov
stos
ret
add
pusha
pop
cmp
inc
fcomp
ins
sbb
xchg
cld
mov
dec
loope
pop
pop
scas
jno
xor
mov
add
push
stc
push
inc
xor
or
(bad)
cdq
push
mov
push
jle
mov
out
sbb
jno
jb
ret
mov
pop
cmps
jb
lods
mov
ret
pop
and
rcr
nop
lods
push
sbb
int
mov
mov
xchg
es
adc
jl
sahf
sahf
mov
movs
cmp
and
mov
(bad)
lds
or
jecxz
sbb
in
sub
fcmovne
inc
(bad)
cli
mov
fld
cmp
push
push
mov
sub
push
adc
call
mov
sub
cmp
enter
xchg
outs
ins
scas
adc
lea
pusha
cdq
rcr
jnp
sbb
push
mov
dec
pop
mov
or
jbe
mov
div
sbb
fistp
lock
std
sbb
ins
push
cmc
sub
cmp
dec
daa
dec
cmp
inc
dec
adc
jbe
cli
inc
mov
mov
jmp
sar
shl
(bad)
sub
pop
sub
jne
mov
cmp
pop
adc
(bad)
cmp
inc
mov
dec
jg
pop
xor
or
popf
test
xor
jbe
not
pop
inc
repz
stc
xchg
fldcw
rcr
fstp
sub
add
std
cmp
push
add
jb
loope
mov
sub
fidivr
cmp
les
mov
dec
mov
lods
clc
xor
pop
jg
ret
test
mov
or
xlat
ret
stos
(bad)
or
arpl
jle
pop
pop
daa
dec
pop
out
adc
sbb
aaa
or
rcl
repnz
pop
and
sti
xor
mov
mov
mov
jne
(bad)
(bad)
lods
ds
dec
add
dec
or
push
adc
test
lock
out
mov
pop
cmp
pop
lock
dec
cld
mov
dec
mov
ret
xlat
std
test
inc
call
xchg
xchg
adc
fst
cmps
das
adc
jnp
sub
mov
mov
das
dec
repz
aas
pop
aad
popa
xor
outs
in
push
add
movs
adc
push
popf
outs
and
xor
push
lahf
lea
fild
ss
outs
adc
mov
daa
out
cmps
jo
aas
inc
jb
shr
(bad)
in
shr
mov
cli
pop
mov
fbld
shl
sub
ss
mov
pop
sub
rcl
or
pop
and
(bad)
in
add
xor
dec
dec
sub
mov
int3
adc
push
cmp
retf
add
imul
mov
cmps
xor
or
xor
std
aad
fs
and
outs
jbe
pusha
scas
aaa
mov
icebp
pop
xor
xchg
fwait
xor
sar
inc
cld
xor
aam
sbb
fcom
push
or
fwait
enter
jle
lahf
push
aas
retf
stc
es
push
aaa
mov
dec
test
icebp
push
ss
leave
cmp
aaa
add
stos
sub
mov
mov
aad
inc
popa
xchg
rol
adc
inc
pop
jg
out
adc
into
or
adc
push
dec
fdiv
pop
pop
test
outs
data16
inc
in
movs
imul
xchg
jp
sub
sub
inc
xchg
ss
out
imul
outs
push
sbb
std
and
in
cmp
(bad)
mov
cli
imul
pop
imul
loope
mov
jecxz
push
sbb
sub
das
movs
movs
test
adc
(bad)
cli
ds
push
sub
xlat
icebp
sbb
shr
jp
jno
adc
adc
outs
bound
mov
xchg
jle
jae
lock
leave
hlt
push
jo
sbb
mov
mov
pop
cli
sub
inc
hlt
and
in
outs
aad
cmc
daa
mov
retf
add
push
adc
sbb
pusha
cdq
test
fnsave
jne
jg
push
cmp
sbb
inc
cmp
inc
popf
mov
call
fsubr
mov
jno
cmp
cwde
push
es
movs
ss
imul
add
add
push
sub
jo
cwde
lea
push
push
dec
int3
movs
sahf
mov
cdq
jg
jbe
retf
sar
inc
jmp
(bad)
xor
scas
lds
and
push
sbb
sub
jge
into
loop
jge
hlt
or
jae
add
push
inc
fsubr
fprem
sar
repz
or
mov
mov
sbb
lods
aas
sub
sub
jb
jle
add
xchg
mov
sar
xor
shr
or
sbb
pop
mov
jl
mov
fisttp
aas
jecxz
sub
push
fucomip
adc
in
pop
es
mov
cmp
cmc
loop
popf
pop
xlat
push
mov
std
lahf
test
inc
pop
add
sub
call
inc
gs
popf
pop
mov
scas
push
fwait
sbb
sub
sbb
sub
daa
cdq
pop
sahf
jg
mov
push
xchg
mov
pushf
push
pop
int
push
push
lods
scas
push
add
add
dec
push
ror
sub
ins
out
sbb
jp
or
add
pop
pop
aaa
data16
nop
iret
lds
mov
cmp
push
and
lea
adc
pop
(bad)
mov
ror
sbb
jo
int3
or
fstp
fwait
addr16
sbb
jmp
adc
mov
cmp
xchg
pop
cmp
pop
stos
aam
dec
xchg
scas
mov
fwait
movs
push
sub
loopne
xor
dec
jmp
iret
call
mov
cli
mov
cwde
int
and
mov
mov
xchg
mov
sub
inc
ficom
mov
bound
push
mov
xchg
jnp
psraw
imul
dec
aaa
inc
lods
fmul
pop
mov
sbb
test
js
cmc
mov
cmp
into
cmp
xchg
xchg
pushf
or
ins
mov
repnz
mov
lds
inc
(bad)
cli
xor
jp
xor
jge
xchg
cmp
and
in
jmp
cmp
sub
out
std
sbb
cmc
(bad)
hlt
mov
mov
xor
data16
(bad)
inc
movs
pop
push
aad
fisttp
adc
rep
adc
sub
(bad)
cs
inc
int
imul
and
cdq
mov
sar
aam
dec
movs
fwait
and
sbb
add
cmp
push
retf
movs
push
pop
stos
jg
test
inc
not
outs
sub
lock
sub
push
push
test
xchg
fsub
pop
stc
ret
pop
pop
adc
mov
retf
ja
xchg
inc
pop
mov
mov
les
mov
push
or
and
push
push
ds
fidiv
mov
xor
pop
and
push
pop
mov
cld
xchg
ret
jae
adc
xchg
xor
adc
xor
outs
test
cmc
xor
fistp
cmps
sbb
jle
jne
or
es
add
leave
mov
jl
movs
call
mov
jno
push
adc
sub
jecxz
bound
std
ret
call
mov
pop
and
es
rol
sub
sub
fcomip
mov
in
mov
mov
or
xchg
pop
adc
shr
pop
cmps
jecxz
dec
adc
cmc
pop
jnp
add
aas
shr
int3
xor
cmp
mov
xchg
pop
pop
fwait
mov
xchg
push
test
call
sbb
sti
imul
xchg
outs
(bad)
pop
fisttp
lods
jg
pop
and
cmp
push
iret
cmp
fild
inc
test
jne
fld
sar
dec
je
push
mov
cdq
push
in
pop
inc
inc
rcr
jp
or
stc
push
jmp
sub
add
sti
rol
xchg
psubsw
scas
inc
call
dec
out
test
loope
mov
push
ins
and
jo
loopne
jno
das
and
cmp
rol
adc
or
dec
cmp
call
inc
and
pop
mov
mov
clc
inc
xchg
xchg
push
push
cmc
retf
inc
repnz
out
xor
push
xchg
lds
ss
xchg
and
and
ds
mov
cmp
sbb
xchg
stc
cmp
cmp
out
in
jo
add
fnstenv
es
sbb
(bad)
dec
in
dec
retf
scas
iret
add
cmc
add
pop
data16
cmp
shr
push
outs
cmp
xor
(bad)
dec
or
jnp
enter
ss
pop
retf
(bad)
jl
xor
pop
cmc
aas
xchg
fcomp
ret
jnp
add
xchg
mov
push
pop
stc
ret
cmp
rol
aam
jecxz
jp
or
lds
loopne
add
or
xor
fs
sub
cdq
gs
push
pop
or
lahf
pop
aaa
fisttp
inc
mov
jmp
(bad)
pop
jo
and
cmp
pop
adc
(bad)
pushf
push
ror
aad
pusha
arpl
mov
cmps
dec
aam
cmps
mov
adc
loop
daa
and
cmps
pop
jg
ror
mov
adc
or
mov
outs
mov
adc
dec
xor
xchg
push
in
in
sub
in
dec
xchg
sub
arpl
sub
mov
mov
ret
cli
pop
jnp
retf
jl
cld
sbb
out
cs
lock
(bad)
in
or
inc
jmp
mov
cmp
xchg
shl
stos
and
into
pop
mov
daa
xor
xchg
cmp
pop
dec
out
xor
clc
pop
aas
test
inc
ds
inc
inc
loope
leave
mov
imul
iret
pop
jb
fnstsw
adc
jno
std
inc
repnz
sub
push
daa
aaa
(bad)
loope
inc
xor
into
pop
inc
mov
fld
push
and
mov
jne
fisttp
dec
cmc
jp
pusha
push
lds
pop
mov
iret
or
popf
call
pop
cli
(bad)
imul
fcomp
pop
cmp
jg
fdiv
xor
out
sti
lock
jbe
shl
adc
adc
test
push
addr16
mov
mov
daa
sub
add
jmp
add
mul
mov
jns
bound
pop
leave
jle
repz
cmp
mov
xchg
mov
sbb
xchg
lods
and
pop
xlat
lea
push
push
xchg
jp
pop
fdivr
out
loopne
loope
jecxz
add
adc
call
dec
pop
adc
jp
in
cmp
cmp
pop
add
dec
retf
mov
mov
add
xor
xor
xchg
add
mov
mov
mov
int
sub
mov
shl
call
lds
outs
inc
jnp
mov
das
lea
xchg
jns
inc
dec
xor
and
mov
and
dec
mov
fsub
gs
pop
test
gs
and
(bad)
push
cmp
inc
(bad)
xchg
inc
jmp
xor
sbb
neg
push
mov
(bad)
retf
push
int3
lds
cmp
cmps
dec
fwait
in
std
mov
daa
stos
mov
add
mov
cmps
or
xchg
mov
adc
mov
(bad)
mov
lods
jecxz
jmp
jmp
lahf
jne
or
mov
xor
pop
(bad)
mov
nop
fwait
outs
scas
pop
es
pop
mov
lahf
pop
adc
push
xchg
add
sub
xor
adc
xchg
cmp
pop
mov
nop
and
mov
inc
mov
shl
cmp
mov
mov
pop
or
ret
push
fsub
in
icebp
ret
sbb
push
addr16
js
jmp
jne
pop
xchg
add
and
adc
movs
xchg
fidiv
jbe
mov
xlat
pop
cmc
clc
aad
jns
mov
jmp
pusha
jo
retf
dec
mov
dec
mov
fidiv
mov
outs
jno
out
call
push
loope
ret
cdq
outs
pushf
dec
mov
dec
mov
iret
sub
xchg
xor
push
mov
(bad)
adc
jmp
(bad)
mov
out
clc
adc
(bad)
clc
pop
repnz
loope
aam
push
rcr
sbb
and
jp
lahf
add
not
or
popf
adc
iret
bound
mov
cwde
int
mov
gs
outs
shl
inc
inc
sbb
enter
dec
das
cld
js
pusha
jge
xchg
cwde
pusha
pop
(bad)
out
repz
daa
mov
cmp
shr
std
loope
mov
jmp
(bad)
(bad)
cs
(bad)
adc
jbe
mov
dec
lods
mov
and
fild
mov
ret
test
mov
fistp
xchg
and
xchg
sub
dec
ds
pushf
dec
leave
mov
pop
iret
je
shl
in
not
push
shl
adc
jbe
cli
xor
js
push
ret
repz
fcomp
sti
fcom
call
adc
inc
(bad)
cmps
adc
stos
fcom
adc
sub
fmul
fwait
sbb
hlt
push
mov
mov
mov
fisubr
dec
cs
retf
imul
xchg
and
xchg
mov
outs
int
xchg
sbb
retf
mov
data16
mul
jbe
and
std
fcomp
loop
and
add
adc
arpl
dec
or
retf
in
std
adc
gs
leave
call
pop
out
(bad)
mov
pushf
int3
or
xor
dec
and
movs
push
imul
xor
sbb
adc
clc
ret
ficom
rcr
sbb
pusha
xchg
pusha
push
inc
xor
scas
das
out
aad
aaa
(bad)
out
shl
iret
mov
and
adc
and
rcr
mov
mov
ret
sahf
pushf
ins
ins
repz
out
cmps
out
stc
enter
push
fwait
mov
call
out
cwde
repz
cld
imul
push
cmp
jns
cmp
inc
dec
push
fst
movs
arpl
sahf
pop
push
stos
inc
inc
add
cmp
mov
add
(bad)
and
dec
sub
pusha
ja
push
pavgw
pop
add
fild
push
outs
outs
ds
cdq
aaa
jmp
or
ins
pop
xchg
dec
and
mov
(bad)
out
mov
les
push
push
sbb
scas
outs
inc
xchg
push
sub
and
jp
sbb
mov
jnp
jnp
jle
sahf
adc
loope
mov
test
mov
ss
retf
inc
dec
ss
xchg
icebp
or
ins
mov
sub
scas
(bad)
jne
xchg
jbe
mov
sbb
bound
movs
push
adc
sub
pushf
jl
pop
(bad)
out
xchg
loop
pop
popa
(bad)
sahf
in
popf
leave
inc
lea
inc
or
fwait
call
or
adc
push
cvtpi2ps
popf
inc
add
aam
lods
inc
mov
loop
(bad)
jnp
ins
dec
jecxz
mov
outs
loop
mov
or
aad
dec
shl
xchg
xchg
adc
add
pop
adc
inc
scas
fcomp
or
or
pushf
mov
cmps
mov
(bad)
jmp
inc
pop
mov
sbb
pop
adc
jne
jmp
and
shl
pop
mov
or
inc
push
pop
call
cmp
stos
push
and
ja
xchg
lds
cmp
mov
cmp
mov
push
jae
and
sub
jge
mov
js
(bad)
std
and
cmps
cmps
cmp
mov
stos
xor
mov
pop
std
icebp
movs
jmp
xor
or
xor
mov
inc
fstp
mov
xor
lock
mov
jmp
add
gs
adc
imul
push
xchg
addr16
sub
nop
jp
loop
adc
and
adc
inc
js
pusha
loope
pop
jmp
je
scas
push
hlt
pop
and
shr
or
sbb
lods
aam
loope
sbb
(bad)
xchg
xor
fild
mov
repnz
pusha
pop
add
cmp
mov
les
push
test
xor
cmp
into
pop
jnp
sahf
xor
or
into
icebp
push
fnstsw
rcr
jae
imul
push
pop
ja
out
sbb
outs
loopne
sbb
test
and
mov
xchg
mov
xchg
or
cmp
imul
imul
and
test
mov
sahf
push
mov
dec
aad
mov
sti
fadd
sbb
cmp
bound
sar
sbb
add
pop
or
sahf
mov
out
mov
pop
movs
add
push
xchg
hlt
inc
push
(bad)
into
sbb
(bad)
jbe
mov
sbb
inc
jno
adc
iret
fdivrp
pop
push
and
add
cmp
out
dec
mov
mov
stc
mov
retf
jmp
stos
mov
(bad)
pushf
pop
iret
movs
inc
mov
je
jmp
pop
mov
popa
adc
cmp
test
dec
sahf
push
aas
and
cmp
fwait
dec
repnz
jecxz
stc
pop
or
xchg
bound
es
lods
jno
sbb
push
enter
jnp
test
iret
(bad)
mov
test
and
add
push
mov
inc
fwait
mov
mov
xor
cwde
test
pushf
jmp
jno
outs
pop
in
cld
sahf
ins
and
shl
xchg
sub
or
inc
(bad)
mov
ja
fsubr
mov
cmp
sti
mov
in
xchg
fsubr
mov
xchg
push
fild
aad
xchg
push
aam
pop
mov
cli
xor
ret
movs
add
adc
fnstsw
mov
and
inc
push
dec
jge
mov
cld
mov
pop
push
jge
test
iret
xor
push
dec
mov
xor
cmp
pusha
mov
cmc
pop
cmp
dec
or
cmc
clc
sbb
stc
mov
call
mov
retf
stc
fild
ins
xchg
nop
das
mov
mov
out
out
adc
push
xor
into
push
mov
outs
push
inc
test
and
sub
ins
das
jno
sub
dec
sbb
aad
mov
inc
scas
xchg
cmps
jno
movs
pop
push
adc
mov
loopne
call
rol
jp
dec
pusha
test
and
inc
rol
sbb
mov
sbb
repnz
sahf
jg
retf
sbb
add
inc
movs
test
fidivr
je
sbb
iret
test
fiadd
sbb
adc
jmp
mov
add
sbb
es
call
dec
adc
pop
dec
push
xor
scas
retf
aaa
(bad)
cmps
sbb
(bad)
gs
and
rcr
enter
test
rcl
scas
jle
data16
rcr
fild
sub
retf
enter
mov
push
inc
ud2
lahf
mov
daa
addr16
or
or
clc
xchg
fldlg2
jbe
xchg
data16
test
popa
pop
adc
mov
cmp
aam
dec
in
inc
(bad)
sbb
aam
(bad)
inc
add
xchg
in
sbb
or
inc
sub
std
sbb
mov
call
(bad)
sbb
lock
lds
add
fwait
sub
dec
mov
sti
ins
or
(bad)
out
cmp
cmp
adc
mov
pusha
ret
jae
push
dec
inc
rol
sbb
pop
push
(bad)
idiv
sub
les
mov
add
cld
mov
mul
jnp
inc
mov
pop
aas
test
outs
adc
and
lea
movs
xchg
dec
(bad)
sub
icebp
add
call
jnp
mov
lods
icebp
ret
addr16
sub
cmp
popa
dec
dec
lods
and
lock
pop
fadd
ret
pop
jecxz
adc
aas
test
clc
ret
xchg
push
sti
mov
push
or
pop
mov
xor
and
test
ins
xor
jge
mov
xor
push
lods
std
sbb
mov
add
cmp
lods
sub
int
movs
scas
iret
inc
adc
repnz
or
mov
xor
mov
inc
adc
push
xor
loopne
les
cmp
in
sbb
and
daa
mov
or
mov
dec
(bad)
je
idiv
loop
cmp
adc
mov
mov
mov
std
lea
in
repnz
xor
sbb
or
(bad)
pop
push
mov
dec
inc
mul
dec
jne
enter
sub
cmp
and
push
sbb
adc
cmp
jns
cmp
pop
jl
jo
jns
bsr
cmp
(bad)
jecxz
mov
rol
jo
sub
mov
sti
mov
mov
loope
rcr
loopne
lahf
ficom
mov
ucomiss
out
and
repnz
inc
and
mov
ret
jp
loope
cs
call
push
dec
sbb
push
or
inc
xlat
dec
pop
popa
add
jl
(bad)
push
or
xor
adc
push
mov
push
mov
mov
cmp
or
pop
pop
out
push
in
ins
adc
or
push
jb
sbb
daa
repnz
jne
into
loopne
imul
xchg
mov
mov
jmp
xchg
or
pusha
sub
mov
test
std
mov
pop
frstor
cli
clc
scas
xor
test
inc
leave
cmp
mov
out
add
mov
cmp
adc
cmp
aas
call
adc
mov
mov
fidiv
jle
add
cmps
retf
adc
mov
mov
mov
inc
dec
mov
jmp
fs
stc
not
fsubr
hlt
inc
sbb
sysenter
jb
in
cdq
int
push
sub
ins
add
scas
stos
retf
adc
aas
aad
inc
std
and
push
jmp
mov
stos
clc
arpl
jmp
xlat
sbb
adc
mov
and
sbb
icebp
inc
mov
pop
push
mov
cmp
retf
xchg
pop
das
push
mov
stos
(bad)
push
push
inc
(bad)
fsubp
jl
(bad)
daa
ror
sbb
movs
mov
and
push
nop
pusha
pop
push
fnstsw
cmp
call
push
mov
loop
cmps
xchg
add
inc
nop
xor
pop
mov
adc
push
leave
test
adc
(bad)
lock
adc
pop
cmps
not
retf
mov
sub
and
pop
inc
aaa
adc
shl
mov
push
xchg
xor
mov
adc
jno
and
dec
dec
or
loope
pop
(bad)
jmp
inc
sub
jne
gs
add
mov
push
push
data16
jae
enter
loopne
xchg
and
jnp
jg
loope
or
test
aad
inc
jmp
cmp
push
ror
xlat
or
loop
les
jp
repz
sahf
leave
xchg
ror
mov
outs
jmp
(bad)
in
push
push
xchg
ja
mov
lock
retf
xchg
xchg
clc
adc
mov
jmp
adc
xor
lahf
and
jg
loop
in
ret
pushf
dec
lods
aaa
jmp
push
mov
(bad)
pop
cwde
shl
adc
xor
addr16
aam
fidivr
and
jg
xlat
stc
mov
mov
xchg
mov
xchg
xchg
push
inc
xor
in
inc
gs
mov
mov
(bad)
nop
in
push
jo
xchg
ret
call
sub
xchg
add
mov
push
dec
push
(bad)
cmps
xor
xor
fwait
movs
push
movs
nop
outs
adc
mov
sar
xor
sahf
xor
or
mov
mov
in
mov
fdivr
inc
adc
and
fisub
adc
mov
sbb
pop
arpl
pop
pushf
scas
mov
mov
dec
add
mov
pop
jge
dec
retf
ficomp
dec
pop
out
cmc
ss
rol
inc
fdivr
pop
mov
movs
jae
push
inc
push
retf
call
into
pop
jne
imul
lahf
add
and
pop
dec
sti
icebp
fcmovnbe
lock
or
pop
pusha
(bad)
outs
or
xor
xchg
fcmovu
mov
cmp
adc
ds
mov
daa
add
sub
cmps
mov
das
mov
mov
or
sbb
jmp
push
ja
xchg
movs
cmp
xor
jle
ss
je
jecxz
call
cwde
inc
mov
xchg
jmp
popa
and
sti
jmp
sub
pushf
mov
movs
pushf
cmp
push
push
add
pusha
into
mov
jle
or
mov
aaa
pop
mov
loop
push
jno
mov
sbb
or
fxch
mov
pop
mul
xchg
adc
add
icebp
mov
out
fidiv
cld
or
movs
xor
mov
stos
lahf
pop
pusha
nop
test
jp
inc
xchg
sub
jge
aad
adc
gs
bound
add
xlat
retf
cmp
and
mov
das
ror
inc
dec
jb
push
inc
or
add
int3
scas
xchg
xchg
push
je
jge
je
mov
outs
sti
in
popa
xchg
xor
ss
xchg
leave
popf
fistp
mov
adc
retf
fwait
mov
nop
setns
dec
in
sbb
hlt
sub
add
jmp
ds
(bad)
or
push
ss
cmc
sbb
(bad)
mov
(bad)
imul
leave
(bad)
js
ret
add
popf
(bad)
call
sti
(bad)
int
mov
inc
mov
loop
int
push
xchg
(bad)
push
pop
or
xor
push
enter
enter
inc
push
sub
iret
push
pushf
fwait
pushf
xchg
scas
out
cmc
mov
push
push
pusha
xor
into
mov
xchg
dec
movs
mov
mov
adc
test
(bad)
(bad)
lock
push
dec
xchg
es
sahf
imul
xchg
dec
test
inc
gs
sti
pop
stos
pop
xchg
mov
pusha
push
cs
test
data16
add
mov
dec
xlat
out
xchg
mov
clc
push
fcmovb
lods
mov
mov
and
loope
in
pop
inc
dec
rol
out
sahf
ins
call
pop
dec
js
xor
into
mov
scas
cli
cli
mov
ja
call
adc
mov
jmp
xchg
xchg
arpl
mov
jg
pusha
clc
lahf
data16
daa
pusha
pop
add
int
mov
cdq
js
mov
pop
popf
cmp
(bad)
jb
bound
fstp
xchg
cmp
xor
mov
sbb
je
mov
rcl
test
aam
imul
in
jmp
stos
inc
or
xor
jne
mov
jo
shl
mov
pusha
scas
cmc
iret
int3
push
xchg
xor
imul
or
sti
stos
rcr
jl
or
mov
lods
jo
pop
clc
fucom
add
sub
test
dec
add
adc
sub
loope
fwait
das
inc
xchg
fld
out
xor
pop
push
neg
out
push
fiadd
aas
cli
cmp
daa
cmp
jge
xchg
inc
outs
ret
mov
dec
xchg
into
imul
mov
pushf
xchg
pop
jmp
and
jle
and
push
cmc
ja
push
outs
push
lea
pop
test
jb
loop
ret
sbb
fisubr
or
jp
sbb
jns
pop
add
loopne
aas
shl
mov
aad
ins
cwde
sbb
push
cmc
add
mov
mov
jge
sbb
bound
or
xor
inc
and
iret
fdivrp
sbb
xchg
and
arpl
in
popa
and
test
mov
cld
sbb
test
pushf
movs
repnz
jno
arpl
fcmovnbe
xchg
repz
sbb
adc
xor
ds
or
sub
out
and
mov
mov
jge
dec
int
push
pusha
shl
cmps
pop
popa
clc
push
push
mov
int3
mov
in
xor
jge
mov
aad
(bad)
pop
jo
dec
movs
mov
or
xor
sub
inc
daa
pop
fst
add
(bad)
mov
ret
or
int3
int3
imul
gs
xor
inc
cld
and
sbb
inc
fst
repz
jnp
push
sub
imul
pop
lock
cmp
and
sbb
repz
les
cli
push
jl
adc
xor
push
mov
cld
data16
xor
std
enter
imul
sete
push
mov
lods
es
das
mov
mov
pop
(bad)
fmul
std
cs
lea
out
adc
dec
or
cmp
pop
inc
dec
inc
or
loopne
sahf
repz
popf
cld
imul
jo
movs
ret
push
ins
imul
(bad)
cmp
mov
and
retf
mov
fdiv
lods
mov
psubsw
or
in
mov
xchg
cmp
adc
imul
xchg
sub
ds
outs
and
iret
pop
sti
leave
hlt
(bad)
jae
push
pop
in
dec
mov
push
adc
outs
push
mov
pop
movs
xchg
stc
or
pop
fstp
cmp
add
mov
push
mov
cdq
stos
mov
fnsave
inc
jle
xchg
enter
inc
stos
(bad)
pusha
inc
mov
jnp
mov
xchg
retf
cmp
aas
fcomp
xchg
jbe
pop
sub
jnp
push
pop
pop
ret
(bad)
and
dec
push
adc
adc
and
xchg
push
fidiv
int3
call
jbe
lea
pop
movs
cmp
movs
push
add
call
shl
push
xlat
push
mov
mov
dec
jb
adc
fdiv
fbld
xor
jbe
pop
ins
mov
stc
mov
pop
in
addr16
cs
mov
push
mov
gs
mov
enter
jl
cwde
pop
dec
mov
cmp
mov
sbb
dec
mul
sar
sbb
or
ror
jmp
in
(bad)
cmp
xor
adc
sar
xchg
stc
loop
ror
adc
jle
add
int3
mov
adc
mov
ds
cmp
into
stc
or
ret
mov
push
cld
push
mov
(bad)
xrelease
mov
or
jbe
sub
je
mov
retf
dec
add
loopne
sub
stc
out
and
inc
outs
js
into
aaa
sahf
jecxz
or
adc
outs
sub
cwde
push
stc
dec
mov
sbb
popf
pushf
sbb
add
push
mov
js
sub
adc
sti
push
scas
jo
pop
mov
push
fcomp
xor
rcl
test
inc
adc
addr16
and
jne
sub
outs
js
or
in
cmp
lahf
or
dec
test
inc
sbb
jl
aas
in
push
mov
es
push
xchg
inc
stos
push
mov
xor
ins
pop
adc
adc
jnp
(bad)
hlt
into
sbb
and
cmps
(bad)
sub
or
pop
and
lea
jbe
fisub
mov
aas
in
mov
fsubr
aaa
mov
aas
stc
or
outs
in
nop
and
stos
icebp
lods
xchg
jmp
les
popa
into
mov
loopne
jne
cmp
pop
test
test
mov
repz
and
pusha
xlat
cmp
pop
mov
mov
inc
clc
push
lds
stos
cwde
mov
add
jno
inc
mov
enter
in
out
push
sbb
jnp
dec
mov
jmp
mov
jmp
push
sub
fstp
add
fld
jecxz
xchg
mov
sbb
mov
mov
cmp
and
aas
xchg
add
pop
and
mov
mov
(bad)
sub
cmp
or
icebp
add
dec
imul
cdq
loope
xchg
cmps
je
adc
push
pushf
adc
jb
adc
adc
icebp
retf
popf
stos
add
test
dec
dec
and
jp
pop
cwde
push
inc
test
push
adc
or
cdq
dec
and
and
aad
(bad)
lds
repnz
xor
push
rcr
iret
jl
or
xchg
ret
stos
mov
sbb
xchg
pop
es
mov
(bad)
imul
push
pop
jmp
pop
lahf
test
dec
int
jb
scas
mov
bound
(bad)
jge
arpl
mov
mov
adc
dec
ja
or
and
repnz
mov
add
data16
mov
sti
sbb
push
icebp
mov
or
fwait
pop
mov
(bad)
cmp
pusha
fs
jb
in
mov
mov
hlt
daa
cmp
xor
scas
xchg
mov
push
retf
pop
repz
ret
adc
push
xchg
adc
sub
pop
xor
clc
and
cmp
(bad)
sub
xor
in
jmp
int
jp
sub
cli
call
mov
in
bound
add
dec
mov
ss
xor
gs
into
test
hlt
int
arpl
aas
iret
sti
add
add
aam
lock
pop
mov
imul
pop
test
popf
test
dec
movs
nop
cmps
(bad)
lods
or
pop
cwde
sub
imul
ins
stos
and
cmp
test
dec
stc
mov
xor
xor
test
mov
sbb
mov
sar
out
inc
dec
imul
xchg
adc
pop
int3
xor
jne
imul
ret
jb
dec
imul
adc
das
or
loop
jmp
sbb
cmp
ret
cmc
fs
mov
or
nop
fist
sahf
mov
js
arpl
clc
(bad)
push
aad
xor
je
mov
das
adc
adc
mov
dec
push
sbb
and
dec
and
jbe
(bad)
jp
icebp
add
dec
clc
sub
pop
or
fcmovbe
les
cmp
stos
jno
dec
lea
pop
sub
xchg
xchg
add
rol
mov
jge
add
sbb
fstp
mov
cmp
loope
add
push
xchg
mov
in
int
mov
xor
mov
sahf
shl
mov
fld
(bad)
icebp
ins
mov
fwait
movs
fwait
jnp
or
mov
pusha
xchg
lea
mov
mov
je
xchg
out
loop
push
pusha
xchg
call
cmp
imul
movs
pop
and
icebp
leave
push
call
xor
xchg
mov
fwait
push
pop
test
fdiv
inc
fadd
(bad)
not
add
mov
les
sub
idiv
cmp
out
fnstenv
add
idiv
movs
jns
mov
(bad)
add
test
xor
xchg
dec
fisub
jmp
movs
ins
and
add
ins
ins
cmp
xor
shl
loope
xor
cmps
loope
outs
dec
mov
leave
jle
cwde
jmp
adc
sar
xchg
out
(bad)
leave
repnz
jns
push
or
sbb
or
dec
outs
cwde
aad
jmp
push
push
xor
mov
sbb
cmp
adc
call
push
mov
and
cmp
or
mov
mov
jg
data16
test
ja
cs
(bad)
mov
pop
add
sti
sub
pop
or
(bad)
push
mov
stc
xchg
inc
xlat
fimul
mov
outs
xchg
es
sub
pop
mov
mov
pop
mov
dec
xor
mov
pop
repnz
sbb
xor
retf
ins
push
fadd
mov
out
xchg
setnp
dec
shl
leave
in
out
xchg
jp
int3
fdiv
jecxz
repz
cmps
push
pop
sub
enter
nop
pop
arpl
jp
loope
adc
mov
cmp
sbb
pop
xchg
cli
add
xchg
sbb
xchg
jb
or
loopne
mov
xlat
mov
lods
idiv
mov
and
and
shl
movs
sar
mov
inc
out
cmc
shl
jp
cmc
test
call
xor
sti
inc
sbb
inc
push
jl
jl
shr
hlt
sbb
xor
dec
cmp
rcl
ss
pop
sub
std
cmp
jae
(bad)
movs
popa
aam
jg
jmp
sub
nop
sub
xor
sbb
pop
jl
shl
enter
ins
sub
je
mov
xchg
pop
add
das
or
add
fstp
xchg
cmp
push
pop
sbb
iret
lds
cld
push
or
out
(bad)
cmps
std
inc
paddusb
fs
mov
aas
loopne
cld
add
fmulp
scas
and
mov
jge
call
test
ins
sub
mov
push
lods
and
push
mov
test
test
mov
arpl
push
mov
mov
faddp
inc
and
shl
pop
pop
popa
scas
popa
sbb
jmp
in
out
push
arpl
pop
mov
jnp
call
and
mov
cmc
outs
adc
sbb
pop
sbb
xchg
stos
(bad)
mov
jle
sbb
(bad)
dec
jp
test
mov
cmc
inc
fild
or
inc
imul
test
sahf
outs
dec
mov
inc
mov
aad
xor
pop
xchg
out
adc
pop
jge
movs
pushf
or
bnd
repz
(bad)
jmp
lods
and
popa
es
cmp
xchg
ins
ss
mov
(bad)
sbb
sbb
hlt
into
ror
das
jp
jp
jg
ds
in
push
loop
inc
bound
inc
xchg
aaa
mov
inc
outs
movs
push
pop
sub
inc
outs
in
mov
leave
neg
xchg
call
xchg
fimul
sbb
push
iret
jp
ds
stc
mov
jne
sbb
jns
in
cdq
inc
pop
test
in
jmp
pop
into
jmp
(bad)
cld
test
jmp
or
mov
sahf
adc
scas
or
dec
test
loope
add
jmp
lods
iret
inc
or
out
pop
mov
les
mov
cwde
and
mov
ja
in
(bad)
bound
xor
rcr
dec
call
and
fbstp
loopne
dec
add
arpl
pop
add
ret
cmp
je
addr16
ret
xchg
dec
sbb
cmps
push
or
aaa
je
imul
jl
aad
pop
xor
nop
mov
xor
out
mov
inc
in
pop
sbb
iret
pop
ins
mov
sub
mov
and
sub
cmps
push
xchg
xchg
mov
daa
add
xchg
and
cwde
int3
(bad)
div
cmc
pop
jne
cmp
cmp
scas
popf
mov
sub
sbb
in
sar
arpl
stos
bound
shr
ins
mov
xchg
cwde
add
rol
iret
popf
mov
push
mov
mov
xchg
in
call
pop
fldlg2
dec
xor
add
sub
hlt
outs
loopne
pop
aam
xchg
xor
and
and
mov
mov
rcr
inc
out
shl
imul
mov
sbb
loope
and
fsubr
clc
jne
pop
lods
test
inc
(bad)
int3
add
mov
imul
in
enter
push
pop
fld
sbb
(bad)
test
out
jb
call
pushf
scas
movs
push
retf
xor
pop
pop
dec
or
xchg
retf
loop
ds
jecxz
faddp
sub
mov
adc
(bad)
aaa
out
iret
xor
inc
popf
ret
dec
mov
pushf
cmp
fisttp
arpl
cmps
cdq
fs
sbb
retf
or
in
push
ins
scas
dec
pop
nop
dec
loopne
mov
xchg
stos
dec
jmp
pop
(bad)
imul
sbb
in
cmp
into
and
and
imul
in
dec
sub
dec
ins
pop
jle
jno
stos
test
dec
jo
loop
cmp
loopne
xchg
adc
imul
sub
fnstenv
mov
sbb
push
mov
fcmovu
and
lods
mov
fisub
fsub
inc
mov
or
in
jo
out
test
in
gs
psrad
sbb
int3
imul
mov
(bad)
std
fmul
shl
popf
movs
inc
adc
inc
lods
xor
or
xor
dec
(bad)
cs
mov
sub
or
dec
shl
out
dec
pop
cs
out
jb
push
pop
cmp
inc
mov
int
push
les
sbb
js
lds
mov
fst
and
outs
loop
sbb
xor
fst
inc
dec
sti
nop
lods
cmp
inc
fsubr
test
aas
fs
xchg
push
mov
sbb
adc
xor
jae
fnsave
mov
outs
into
xor
stc
mov
dec
inc
call
adc
or
imul
rcl
out
clc
out
(bad)
or
inc
pop
popf
enter
adc
mov
nop
out
arpl
pop
add
dec
pop
ror
xor
cmp
push
shl
mov
int
imul
sbb
mov
xor
retf
inc
popa
enter
pop
pop
jl
ins
cmp
aaa
and
test
loope
aaa
adc
sbb
mov
stc
out
enter
loope
movs
lds
jnp
cmps
int
push
sub
mov
js
adc
hlt
mov
jp
or
ins
or
loope
(bad)
les
cmps
add
test
movq
test
jecxz
scas
adc
sahf
push
xchg
in
or
push
imul
push
mov
cmc
scas
mov
cwde
jmp
pop
push
sub
mov
push
xlat
lods
push
add
sbb
jmp
cmp
xor
jge
sub
xor
call
rol
inc
mov
adc
dec
add
ror
or
or
mov
cwde
pop
or
xor
rcr
xchg
inc
xor
sbb
xor
inc
cs
mov
ficom
movs
ins
xchg
and
xor
adc
push
jl
jno
imul
push
jns
dec
dec
dec
add
in
mov
es
push
mov
add
jp
stos
push
adc
push
push
mov
xchg
imul
ins
jge
inc
shr
loopne
(bad)
icebp
ins
sti
ins
jl
ffreep
loop
xchg
stos
out
xchg
rol
ds
add
lea
cmp
inc
or
mov
inc
dec
ret
div
fsub
scas
add
jl
add
cmp
fsub
cmp
(bad)
out
jb
jge
dec
repnz
les
cmc
ja
jecxz
rol
dec
fsubr
or
or
les
adc
and
xchg
mov
sub
lods
push
out
mov
rol
aad
std
mov
lods
cli
cmp
(bad)
xchg
cmp
push
xor
mov
add
jge
rol
fnstenv
pop
push
jne
je
shl
stc
xchg
repz
mov
xchg
sub
mov
cmp
push
sub
and
repnz
and
sbb
pop
push
mov
fwait
push
or
pusha
xor
dec
jle
(bad)
xor
push
cmp
push
jae
mov
rcl
jge
mov
nop
js
popf
pop
rcl
jl
daa
sub
loop
ja
and
inc
and
or
inc
and
or
mov
dec
and
fdivr
mov
push
in
and
jmp
push
push
dec
retf
mov
ror
pop
dec
push
or
add
frstor
in
in
sub
cs
jmp
add
call
sbb
inc
call
xchg
or
lods
(bad)
in
xchg
push
sub
outs
call
jo
idiv
arpl
cmp
outs
sbb
shl
cdq
pushf
cdq
xor
push
cdq
pop
push
stos
or
aaa
xchg
(bad)
test
daa
jne
xchg
xchg
adc
ffree
sbb
jo
in
inc
push
add
iret
mov
push
clc
mov
stos
sub
mov
mov
retf
psubusb
or
out
cmps
nop
mov
cmp
mov
cs
call
ins
inc
lahf
pop
stc
mov
lods
sub
out
adc
jl
pop
loopne
lea
adc
into
dec
std
add
iret
xor
inc
dec
mov
jmp
pop
retf
xor
out
cmc
dec
inc
cdq
sbb
call
cld
lahf
ja
shr
dec
xchg
mov
ret
mov
mov
pusha
lods
std
mov
nop
jo
xlat
je
gs
sti
hlt
push
add
imul
dec
add
sub
adc
mov
into
lods
retf
mov
add
sbb
hlt
mov
or
shl
or
and
xchg
sub
push
sbb
lods
arpl
xchg
xchg
dec
shr
imul
push
ja
aas
sub
mov
cld
mov
cmc
movs
js
mov
sbb
ret
loopne
mov
repz
ss
cmp
leave
inc
call
rcr
jp
test
pop
sub
cmc
pop
push
lock
loop
xchg
sub
sub
scas
push
xor
iret
popf
push
sub
(bad)
push
(bad)
and
pop
pushf
lahf
mov
cmp
popa
xlat
std
pop
cmps
adc
sub
(bad)
imul
retf
jbe
adc
ins
mov
ror
push
cmp
pop
sub
outs
ret
fs
inc
inc
aaa
dec
dec
repnz
mov
jecxz
inc
xor
fist
sub
sti
pushf
add
jmp
sub
adc
sub
adc
icebp
fcmove
jb
pop
mov
mov
sbb
sub
add
rcl
pop
hlt
clc
lods
sub
xchg
ins
jmp
adc
fisub
movs
lea
xchg
sbb
std
jno
inc
xor
fs
pop
cs
xchg
xor
sub
jge
test
fld
call
fmul
sub
xchg
ins
jg
loopne
scas
and
push
scas
lods
or
rcr
adc
sub
(bad)
cmp
aaa
rol
adc
sar
lahf
loope
mov
imul
sbb
pop
out
cmp
(bad)
ds
sbb
or
icebp
call
out
jnp
in
dec
xor
ja
mov
mov
ret
push
push
and
ret
inc
mov
std
jle
jo
outs
cmp
cmc
(bad)
fist
mov
inc
lods
lea
push
pop
jb
mov
and
fsubr
scas
add
xor
mov
fs
mov
pop
or
lods
push
dec
mov
push
mov
sub
(bad)
sub
cmp
xchg
in
push
fs
sti
stos
out
adc
and
mov
adc
jmp
mov
fimul
shl
loope
aam
cmp
movs
repnz
test
add
mov
xchg
test
(bad)
cmc
ins
mov
push
mov
sbb
push
add
loope
leave
ret
push
pusha
leave
jecxz
sub
add
dec
sub
(bad)
cmps
ja
xor
ficom
scas
pop
es
pop
dec
or
(bad)
mov
inc
and
sub
and
out
(bad)
ss
mov
stos
icebp
lahf
bound
inc
sbb
and
ja
sbb
dec
jmp
je
(bad)
mov
xchg
adc
in
aas
mov
sar
cmp
or
outs
int
sti
ror
mov
inc
addr16
movs
fdivrp
imul
shl
xor
stos
pop
retf
(bad)
mov
mov
or
mov
js
std
pop
(bad)
out
push
inc
out
inc
adc
pop
shl
fcomip
mov
cmp
out
fs
ret
cmps
hlt
dec
hlt
(bad)
xor
mov
scas
jmp
shl
fst
cwde
sysret
add
cli
lahf
mov
inc
retf
icebp
std
sbb
push
push
jmp
ficom
(bad)
jne
add
and
aas
pop
push
fcmove
and
push
pop
pop
mov
push
out
pushf
sub
add
adc
push
mov
adc
xchg
cmps
arpl
ror
mov
test
loop
icebp
or
push
push
cmp
mov
repz
out
fbstp
sbb
setno
pop
je
out
add
ss
xor
vpunpcklwd
and
(bad)
jmp
mov
and
mov
call
outs
dec
out
daa
xor
inc
mov
lahf
stos
jmp
iret
leave
or
mov
sub
repnz
cmp
add
mov
shl
mov
dec
fcmovnb
mov
sub
sub
adc
movs
je
(bad)
mov
lea
stos
hlt
addr16
aad
sbb
cmp
retf
jp
jns
fnstsw
jmp
mov
fs
xor
dec
dec
sub
jmp
inc
sahf
dec
les
cdq
cmps
test
mov
mov
lahf
enter
(bad)
fimul
inc
xchg
or
ret
lds
add
scas
jecxz
fidivr
int3
pop
xor
xlat
add
sbb
lods
mov
push
inc
inc
scas
in
or
add
in
std
inc
mul
lea
and
add
lea
inc
jg
int3
inc
loop
mov
ins
data16
cmp
addr16
outs
or
and
stc
fwait
push
daa
push
xchg
call
fcomp
xor
sbb
imul
mov
mov
outs
adc
and
(bad)
xlat
pop
out
ja
je
icebp
cmps
sbb
sbb
ja
retf
and
cmp
jmp
loope
jno
or
or
dec
pusha
rcr
mov
pop
add
or
sti
inc
push
js
pushf
mov
imul
mov
mov
jl
adc
outs
jle
adc
in
mov
add
pop
(bad)
int
xor
arpl
sub
loopne
imul
test
cmps
add
and
imul
cmp
push
or
push
popf
arpl
js
mov
lock
mov
pop
nop
xor
mov
mov
cmp
xor
lods
sahf
cdq
mov
rol
arpl
jmp
jmp
xor
jmp
dec
das
ret
cmc
aad
xchg
outs
add
cmp
push
lea
scas
adc
mul
cwde
popf
bound
lods
mov
and
sub
scas
xchg
enter
jmp
adc
jecxz
dec
mov
movs
cmps
xchg
cmp
repnz
xor
and
popf
xchg
inc
dec
sub
push
dec
push
mov
jmp
aaa
daa
and
mov
xchg
sbb
mov
and
fisttp
ja
popf
lock
push
ret
xor
int3
pop
loop
jns
popf
push
imul
mov
cmp
movs
and
ror
mov
cdq
sub
jl
test
sub
dec
dec
popa
xor
icebp
add
dec
scas
pusha
fstp
push
mov
sbb
and
mov
dec
enter
mov
clc
test
inc
ret
loop
pop
cmp
and
jb
or
jbe
in
ret
aaa
or
pop
xchg
add
mov
(bad)
dec
int3
scas
pop
jae
in
sbb
jl
fistp
cmp
push
or
pop
mov
xchg
or
shl
lock
sbb
fwait
pop
nop
dec
bnd
jo
ss
ins
daa
mov
es
sbb
scas
jns
ret
pop
pop
mul
fs
into
cmps
add
mov
jl
sar
fstp
retf
xchg
cwde
movs
dec
cmps
jo
jmp
pop
push
xor
jae
jmp
dec
jne
add
retf
sbb
cmp
push
test
add
popa
jmp
movs
cmps
inc
int
shl
adc
data16
adc
and
add
or
or
sub
sbb
cmp
jge
push
enter
xchg
(bad)
ror
(bad)
aas
inc
lahf
xor
iret
sub
stc
fsubr
pop
aaa
sub
fiadd
jmp
out
jecxz
xchg
outs
jne
int3
es
(bad)
jl
fldenv
pop
adc
inc
mov
leave
popa
outs
pop
lock
xchg
jmp
jp
test
push
cmp
dec
mov
call
es
outs
sbb
mov
push
pop
stos
jae
fist
shr
xchg
sub
call
sbb
dec
fisttp
pop
out
push
lea
jmp
sti
je
jp
ins
push
xor
push
xorps
or
lahf
adc
mov
cmps
sub
add
sub
mov
xor
jp
mov
(bad)
push
into
into
mov
push
mov
aas
jo
dec
cli
push
movs
adc
pop
aas
dec
jo
test
in
sbb
xchg
jns
push
sbb
adc
repz
add
sub
mov
xchg
push
sti
loope
mov
cmc
cmc
scas
add
pop
out
jmp
sub
(bad)
aam
adc
xor
ret
mov
in
scas
test
adc
push
pop
jne
stc
xor
je
pop
in
mov
aad
icebp
and
lods
shl
jg
cmp
test
jne
sub
xchg
pop
shr
fst
mov
mov
pop
push
pop
cwde
dec
dec
cmc
lods
jp
scas
inc
sub
xor
movs
dec
cmp
scas
mov
xchg
xlat
iret
mov
add
mov
movs
fcomip
inc
mov
adc
jmp
cmps
ins
xchg
mov
fidiv
cmp
push
cmp
or
xsave
push
cs
outs
fstp
sub
imul
cmp
fcomp
mov
fnsave
add
rcl
clc
(bad)
push
pop
fstp
pop
adc
or
inc
push
ja
ja
or
dec
outs
xchg
or
xor
arpl
mov
mov
scas
out
fs
xchg
mov
jp
xchg
out
(bad)
fwait
jb
ss
push
push
cmp
mov
loopne
jne
adc
stc
stos
mov
cli
mov
dec
jmp
jge
xor
push
sbb
sub
movq
ins
mov
ret
lds
mov
pop
xor
jb
ds
sub
adc
pop
xchg
jge
xchg
and
sub
mov
sbb
popf
ja
sub
out
les
dec
into
test
mov
icebp
sub
mov
retf
aad
jl
rcr
fisub
mov
mul
jp
pop
sub
cmp
ret
fist
outs
mov
call
xor
addr16
mov
xor
jnp
dec
inc
xchg
bound
adc
inc
movs
pop
pop
xchg
pop
jae
jp
out
retf
mov
stos
mov
fisub
inc
jp
jae
mov
(bad)
ret
jl
pushf
test
stos
xchg
jmp
jg
idiv
xchg
mov
(bad)
rcl
xor
fdivr
xchg
xor
mov
add
int3
hlt
and
add
fbstp
jne
data16
nop
or
xchg
in
ja
aam
fwait
inc
mov
adc
ins
repz
and
xchg
shl
mov
rcl
(bad)
ins
mov
je
cmp
cmp
sub
hlt
scas
out
sub
jno
leave
jg
or
cmps
push
sbb
ud0
sub
or
iret
lock
inc
push
int
les
adc
js
int
aam
push
mov
rcl
and
dec
aad
out
push
ret
cmp
les
inc
mov
inc
jo
shl
ins
and
inc
iret
inc
hlt
rol
pop
pop
mov
or
mov
fwait
scas
inc
retf
cmp
loopne
sbb
dec
fs
retf
push
xchg
xchg
push
push
adc
popa
add
hlt
dec
lods
dec
(bad)
ret
and
pop
pop
mov
loopne
mov
pop
not
popf
inc
xor
push
dec
cmp
sbb
out
inc
adc
sbb
mov
(bad)
pop
and
icebp
in
stos
mov
and
push
repnz
adc
mov
rol
cwde
push
push
ror
and
or
mov
jg
ins
push
sbb
punpckhwd
dec
or
sub
mov
mov
dec
mov
retf
adc
mov
(bad)
fistp
mov
movs
out
stos
jle
push
xchg
pop
stos
in
outs
call
cmc
bound
add
pop
inc
inc
adc
stc
push
pop
sbb
pop
cmp
sub
cmp
xor
pop
lods
repz
jbe
sbb
cmp
mov
rcl
mov
fbld
ja
call
jle
xchg
test
ins
aad
jg
div
jg
mov
xchg
sbb
test
cli
pop
or
inc
and
and
fsub
cmp
imul
add
xor
inc
shl
movs
aaa
data16
fsubr
sub
scas
das
pop
sar
mov
or
inc
mov
fnsave
(bad)
out
aas
pop
or
xchg
and
in
sti
jmp
enter
ret
fidivr
enter
(bad)
sti
loop
cmps
jl
in
icebp
mov
into
clc
xchg
push
retf
lea
rcl
jecxz
(bad)
icebp
cmps
fnstcw
or
(bad)
cmp
cmp
mov
inc
or
addr16
or
rcl
cwde
or
or
fs
cmp
popa
mov
mov
jecxz
fcmovu
(bad)
jp
push
jge
out
movs
test
ret
and
cdq
or
shl
push
nop
fsubr
sbb
in
rol
mov
ja
cvtps2pi
xor
mov
div
xor
shl
mov
sbb
cmp
imul
js
jg
popa
out
sub
stos
add
pop
inc
mov
push
fisttp
sub
xor
cpuid
ficomp
addr16
out
sub
cmps
pop
(bad)
(bad)
popa
push
xor
(bad)
(bad)
and
test
mov
pushf
inc
push
mov
sub
js
sti
xchg
data16
push
mov
dec
push
aam
pusha
adc
push
xor
cdq
movs
adc
cs
xor
imul
sub
add
hlt
and
je
xlat
dec
dec
xchg
daa
in
mov
mov
xchg
into
clc
cmps
mov
out
call
mov
in
std
jbe
sar
dec
cmp
out
adc
data16
cmp
inc
ds
adc
shl
or
js
xor
jg
mov
dec
movs
or
les
mov
cmp
je
dec
into
sub
or
and
xchg
push
pop
xchg
jno
adc
dec
push
push
push
test
cmp
ins
pushf
cmp
cmp
xor
clc
sbb
pop
int3
cs
adc
(bad)
mov
mov
xchg
jnp
repz
js
les
mov
mov
inc
adc
sub
dec
xchg
aam
imul
pushf
push
(bad)
pop
push
mov
inc
stos
and
jmp
cld
stc
fcomp
dec
adc
sub
cmc
sub
and
movs
xor
jge
inc
scas
xor
movs
add
push
mov
cmp
das
out
pop
cmp
adc
xor
xor
xchg
jae
pop
shr
mov
sahf
fsubp
mov
(bad)
(bad)
and
scas
inc
hlt
and
mov
fmul
retf
lock
pop
mov
push
lahf
inc
and
outs
adc
inc
lea
pop
call
iret
mov
lahf
push
cs
cmp
sbb
repnz
movs
mov
sbb
ja
sbb
movs
adc
add
push
(bad)
or
pop
mov
retf
mov
or
dec
test
mov
xchg
mov
xchg
dec
imul
push
dec
fsub
jmp
jg
shr
adc
cld
int3
jg
push
fnsave
and
outs
cmp
xchg
imul
ss
jmp
and
in
mov
mov
pop
inc
adc
pop
es
mov
sub
test
fstp
cwde
stc
jnp
adc
ja
push
test
inc
dec
cld
add
rcl
add
push
lahf
fcmovnb
pop
push
xor
pop
xor
nop
pop
mov
sub
leave
inc
add
mov
retf
btc
and
mov
cli
pop
xchg
shl
in
dec
pop
mov
lods
mov
loop
adc
call
inc
push
jmp
(bad)
add
lea
aad
mov
jae
push
test
dec
cdq
sbb
dec
loopne
fst
xor
neg
daa
or
ret
jbe
cmc
sub
js
gs
scas
popa
je
or
sub
sbb
cmp
push
inc
(bad)
jp
xor
push
aam
outs
in
shl
mov
sbb
popf
lods
push
arpl
sbb
movs
cmc
adc
nop
imul
es
sbb
mov
test
inc
lds
dec
sub
aad
sbb
cmp
adc
fld
add
sub
adc
sbb
pop
mov
mov
sar
(bad)
jnp
je
dec
jge
imul
jbe
fsubp
push
fldln2
jnp
loop
stc
sbb
jae
and
retf
ror
add
adc
int
daa
dec
lea
xor
aam
push
pusha
gs
in
out
sti
and
inc
out
lods
ss
rcl
sub
aad
mov
mov
jo
aaa
movs
scas
fcom
mov
dec
add
ins
cmc
add
test
test
inc
xchg
rcl
icebp
xchg
in
xlat
leave
jp
retf
lods
push
sbb
gs
cmp
or
xchg
push
jge
ret
sbb
cmps
sbb
xchg
imul
dec
ret
lds
nop
ss
mov
test
inc
sti
xchg
add
inc
or
neg
clc
leave
dec
(bad)
mov
pop
lods
and
repz
outs
(bad)
and
push
push
pop
dec
pusha
pop
mov
adc
inc
sub
(bad)
pushf
mov
cli
mov
mov
mov
out
mov
adc
push
adc
xor
xchg
pop
xchg
jecxz
jne
shl
lea
jl
call
add
sbb
xor
add
ins
adc
adc
and
into
out
sbb
cwde
imul
repnz
std
inc
in
dec
xchg
mov
push
and
mov
in
adc
or
ja
jne
data16
sbb
ret
cli
adc
jbe
data16
or
cli
aas
xor
loope
jl
xor
or
aaa
cmp
inc
inc
mov
clc
pop
retf
pop
sub
mov
xchg
sbb
or
mov
daa
fdiv
cli
pop
fsubrp
pop
push
scas
add
shr
mov
inc
jg
sbb
ja
dec
sub
jg
data16
pop
mov
and
mov
jge
push
scas
mov
adc
mov
fdiv
int3
dec
(bad)
mov
cmp
fwait
cmp
mov
mov
cs
ds
cmp
mov
mov
pop
pusha
ror
inc
repz
jecxz
imul
mov
iret
(bad)
call
pop
sbb
ins
sbb
mov
dec
adc
addr16
xchg
dec
shr
daa
cmp
fs
or
mov
xor
cmp
adc
js
(bad)
adc
or
fbld
fild
xchg
xchg
mov
sbb
and
lods
loope
jg
cdq
sti
push
stc
movs
loope
dec
inc
pop
loope
mov
(bad)
jge
sub
aad
xor
imul
mov
pop
mov
call
cmp
cmp
mov
pop
and
(bad)
mov
and
nop
out
bound
or
inc
in
shl
ja
or
stos
cs
call
cmp
add
and
jle
sbb
daa
repz
dec
ins
and
int
retf
pop
loopne
addr16
inc
int
push
mov
in
in
or
inc
enter
pop
and
dec
mov
sub
call
iret
jge
pop
push
sti
test
jg
imul
sbb
cmc
cmp
sub
inc
mov
in
xchg
test
aad
call
out
je
or
mov
sbb
adc
in
sub
mov
cli
xchg
pushf
dec
cmc
call
pushf
push
icebp
sar
xchg
push
or
dec
lods
into
dec
arpl
xchg
cmp
xchg
or
and
setp
repz
and
push
lods
dec
mov
mov
push
or
call
sbb
mov
push
test
and
inc
push
xor
xchg
mov
mov
mov
fadd
scas
jns
mov
mov
fistp
xor
cmps
imul
or
fdivr
(bad)
and
leave
in
pushf
and
cld
or
cs
dec
and
lods
and
mov
(bad)
mov
lds
clc
mov
dec
ja
int
cld
loopne
(bad)
popa
and
sahf
les
dec
inc
cld
test
dec
hlt
mov
je
push
movs
lahf
sub
call
add
shr
xchg
outs
mov
jns
sbb
stos
mov
je
mov
or
cmp
xor
shl
jns
xchg
add
(bad)
mov
push
mov
sub
or
or
ret
popf
sbb
adc
cli
xchg
adc
inc
pusha
jno
push
retf
dec
sbb
jmp
dec
repz
daa
inc
mov
jne
add
push
imul
or
xor
xchg
arpl
scas
jbe
bswap
leave
std
mov
jg
push
fadd
scas
ss
nop
cmps
inc
je
rol
fadd
in
ss
ss
mov
outs
mov
(bad)
mov
cmc
ja
dec
mov
arpl
ja
mov
adc
aaa
call
inc
cmps
mov
and
clc
cmp
push
dec
fisubr
xchg
ja
les
add
cmp
nop
jns
adc
pop
aas
mov
fdivr
retf
cmp
std
sbb
iret
adc
loop
jle
paddsw
xor
arpl
mov
mov
xchg
xchg
je
mov
shr
pop
mov
leave
les
pop
call
pushf
ret
jmp
std
or
neg
ret
jae
cmps
xchg
fstp
(bad)
fiadd
bound
push
js
(bad)
cmp
retf
mov
fcom
jmp
mov
dec
sub
rcl
sbb
fist
mov
sbb
cmp
in
sbb
retf
add
dec
cli
es
sbb
dec
add
in
rcr
push
inc
cmp
inc
(bad)
hlt
mov
pop
dec
inc
sbb
jmp
push
jmp
inc
dec
fcomp
dec
fs
loope
pop
lahf
int3
xchg
imul
out
imul
xchg
dec
(bad)
pop
jmp
adc
or
retf
adc
dec
push
shr
mov
sahf
ss
inc
mov
mov
cmp
sbb
in
retf
stos
cdq
idiv
dec
(bad)
cmp
fcomip
sbb
leave
pop
es
in
and
or
mov
mov
add
jb
jae
mov
test
inc
jmp
shl
or
cdq
adc
mov
jae
push
cmp
pop
push
loopne
jle
pop
sub
outs
jmp
pop
mov
add
xor
mov
sbb
retf
int
pop
ins
repnz
adc
loop
and
rcr
call
ror
and
push
in
pop
mov
in
daa
test
hlt
lahf
mov
fs
es
mov
mov
imul
fild
sub
mov
fucomp
fimul
fmul
repz
leave
test
or
add
mov
jns
lds
or
leave
mov
es
xor
or
int
mov
push
cdq
jmp
mov
dec
jl
(bad)
out
stos
mov
mov
jle
xor
ds
xchg
test
fist
ins
stos
fucomp
fisubr
pop
loopne
test
mov
loopne
(bad)
cmc
ret
(bad)
in
xchg
jecxz
dec
loopne
aaa
cwde
push
xor
mov
jno
mov
mov
sub
stc
xlat
jo
add
jl
adc
push
hlt
adc
mov
mov
jae
fbld
pop
push
push
test
repnz
adc
(bad)
aam
iret
mov
pop
movs
aad
or
arpl
xor
mov
cmp
ror
sub
lods
xchg
mov
fs
or
and
adc
cwde
in
pop
mov
pop
jg
fwait
xchg
jg
xor
pop
in
dec
jne
jb
xchg
cmp
int3
add
lock
mov
mov
sub
jmp
cmp
inc
test
imul
call
out
xchg
jne
jbe
ins
dec
cmp
neg
push
xchg
pop
dec
cmp
ffreep
ss
and
or
adc
add
inc
inc
cmp
or
or
cmovns
data16
push
or
iret
sub
ret
pop
(bad)
mov
inc
jp
cmp
adc
cld
fild
call
(bad)
test
cwde
sub
daa
sbb
dec
imul
arpl
repz
inc
push
jnp
mov
(bad)
fidivr
rcr
mov
or
jmp
mov
mov
(bad)
int3
bndstx
jo
push
sub
test
test
xor
fist
sbb
test
fimul
jb
test
arpl
ret
aad
pusha
push
cmps
dec
add
cmp
ss
push
imul
cmp
stos
dec
fs
sub
mov
or
fisubr
push
data16
pop
sbb
fld
mov
sti
xchg
(bad)
pop
push
push
jp
jbe
les
stc
jl
sbb
ror
outs
xchg
into
clc
or
aad
sub
add
mov
inc
daa
imul
push
ror
aas
push
inc
inc
mov
mov
pop
cmp
mov
cwde
aas
jmp
enter
(bad)
push
dec
imul
mov
inc
xor
add
pop
mov
sub
outs
sub
sbb
mov
lock
mov
stc
fsub
mov
jae
jmp
fstp
jg
fist
repz
outs
sbb
fdivr
inc
pop
mov
ins
mov
cwde
xchg
addr16
fidiv
lahf
aad
xor
imul
add
fild
jl
add
xor
cmp
inc
pop
and
and
retf
iret
stos
daa
xor
adc
inc
mov
lea
rcr
pop
mov
ror
imul
push
adc
(bad)
cmp
or
clc
out
imul
outs
cmps
lock
jp
sub
(bad)
pop
sub
mov
mov
pop
sbb
adc
inc
jmp
adc
hlt
stos
xchg
fmul
xchg
dec
jns
jne
mov
(bad)
je
fwait
jmp
sub
scas
or
es
inc
out
add
add
or
leave
jecxz
repz
mov
popa
stos
pop
push
rcr
mov
jno
push
ret
in
shr
push
and
jle
jns
call
xchg
or
cmc
imul
mov
test
xor
sbb
xchg
in
leave
cmps
ror
push
inc
cmp
add
adc
inc
add
mov
repz
mov
pop
add
sub
je
dec
dec
add
popf
xlat
or
dec
cwde
sbb
repz
cmp
call
(bad)
(bad)
jmp
daa
fisttp
rcr
sbb
push
xchg
std
test
and
xor
neg
jbe
loop
nop
xchg
in
inc
repz
out
sbb
mov
push
imul
popa
jl
cmp
outs
movs
scas
push
cdq
fbld
jge
xor
in
adc
rcr
in
popa
fwait
xor
push
sub
mov
lock
dec
mov
xlat
or
cmps
jmp
iret
xchg
lods
xchg
mov
cmps
or
xchg
jl
aas
rcr
mov
lods
int
jno
push
add
into
fbstp
fdivr
les
jg
sahf
mov
out
xor
xor
pop
pop
pop
je
jmp
pushf
cld
mov
repnz
(bad)
dec
cmp
scas
inc
leave
in
fidiv
mov
cmp
xchg
out
mov
mov
pusha
xor
jle
outs
jp
scas
mov
dec
(bad)
stos
outs
test
cmp
int3
lods
clc
sbb
xor
push
mov
fsub
loope
xchg
sbb
push
sbb
mov
sub
das
rcl
add
lahf
push
in
fild
cwde
mov
lds
mov
test
(bad)
sub
aaa
mov
sbb
inc
rol
adc
dec
into
shr
rol
shr
mov
data16
adc
mov
mov
repnz
ltr
(bad)
cmp
xchg
fst
mov
sub
fild
cmp
leave
sub
inc
or
xchg
pop
xchg
cmp
dec
inc
ret
mov
jmp
ds
xor
popf
jge
imul
and
fcomp
cdq
xor
mov
jbe
sub
repnz
inc
icebp
arpl
xlat
jne
and
pop
mov
mov
mov
xchg
xor
repz
add
mov
cmp
jb
das
mov
adc
sub
cli
aam
xor
sub
xlat
lods
cld
das
test
sbb
fcmovnb
out
call
repz
je
je
push
pop
xor
movs
push
lea
or
adc
push
mov
jg
(bad)
sub
xor
(bad)
adc
movs
add
cmps
out
inc
int
add
mov
js
cmc
sbb
and
mov
sti
(bad)
icebp
repz
inc
and
scas
dec
dec
or
or
jae
and
imul
cmp
pop
add
mov
mov
retf
push
xchg
or
in
(bad)
(bad)
imul
jne
and
mov
xor
stos
adc
mov
retf
setle
imul
jae
or
jp
jmp
repz
add
add
add
int
jo
in
cmps
jbe
push
ds
push
jge
mov
loopne
(bad)
mov
dec
dec
leave
in
mov
rcl
cmp
adc
or
enter
mov
lea
cmp
add
push
cmp
adc
push
add
scas
and
jne
or
fdiv
call
push
inc
jg
inc
inc
mov
out
(bad)
mov
pusha
lock
imul
ins
xchg
jnp
jmp
pusha
mov
xlat
push
sub
in
mov
fcom
shl
mov
ss
jg
mov
sbb
and
sbb
mov
ss
test
mov
pop
dec
sub
dec
dec
stos
test
or
movs
lahf
in
mov
pop
jb
dec
pop
xchg
and
ja
mov
push
xchg
jmp
push
fprem
repnz
mov
push
aas
or
mov
cdq
inc
repz
push
xor
mov
mov
pop
cmp
mov
ja
fcom
stc
mov
mov
in
sbb
arpl
xchg
int3
mov
add
rol
xchg
push
and
nop
outs
adc
xlat
mov
push
lods
test
cmp
push
ret
dec
xor
in
lahf
das
jo
pop
xchg
lods
mov
cmp
inc
retf
dec
(bad)
cmps
(bad)
(bad)
or
push
addr16
mov
dec
xlat
xchg
adc
fnsave
(bad)
cmp
aaa
loope
mov
add
clc
iret
test
dec
xor
retf
rcl
outs
ins
jg
sub
ror
ja
pop
fiadd
test
xchg
loope
pushw
mov
call
out
xchg
inc
lds
xor
inc
jge
lods
test
fnstenv
push
jb
mov
pop
dec
gs
pop
pop
stos
les
mov
add
jg
pop
sub
aas
mov
cld
(bad)
loopne
pop
lock
jp
mov
cmps
arpl
ja
ror
aad
and
dec
or
xor
lods
mov
dec
push
push
(bad)
cli
pop
cmp
mov
add
dec
inc
dec
push
pop
sar
in
(bad)
and
sub
mov
xchg
lods
add
adc
jmp
popa
or
popa
or
(bad)
shl
mov
test
cmps
cmps
cmp
fnsave
(bad)
js
sbb
neg
call
outs
cmp
(bad)
(bad)
call
(bad)
mov
movs
xor
dec
das
dec
les
mov
icebp
push
dec
test
xlat
mov
out
fdiv
add
dec
mov
sub
sbb
retf
inc
mov
jp
sub
sub
adc
ds
mov
in
gs
ja
outs
pop
xor
int
cmp
repz
cdq
xor
aaa
add
cmp
xchg
in
aaa
pop
enter
jmp
adc
adc
sbb
shl
mov
pop
stos
mov
and
adc
sub
in
push
add
call
movs
mov
cmp
jae
call
mov
mov
int3
in
xchg
into
dec
and
adc
push
setg
enter
cmp
adc
lea
retf
(bad)
in
addr16
test
pop
xchg
mov
mov
rcl
scas
aam
sub
jecxz
imul
sar
loope
or
xor
std
or
jne
sub
bswap
inc
push
push
pop
sub
loop
inc
mov
(bad)
je
xchg
mov
push
and
mov
xchg
adc
leave
test
enter
xor
stos
dec
xchg
ins
pop
loopne
jb
mov
pop
push
sbb
std
loope
cmp
jle
mov
test
bound
cs
dec
retf
mov
cwde
xor
ins
jae
adc
hlt
nop
aas
push
fiadd
(bad)
jg
lods
sti
ds
jne
in
aad
cwde
add
cwde
cmp
mov
add
and
fs
ror
lahf
adc
jp
sbb
adc
dec
sbb
jns
in
push
xchg
xchg
pop
xor
mov
and
mov
mov
adc
mov
jo
imul
outs
(bad)
push
inc
pusha
and
adc
popa
sbb
lock
das
mov
xchg
mov
das
pop
test
cld
lock
dec
ss
and
cmp
or
lahf
fidiv
jo
sub
and
xlat
jl
mov
push
repnz
out
(bad)
jge
inc
mov
lds
adc
or
or
js
or
mov
sub
aam
and
mov
in
cmc
push
xchg
leave
(bad)
mov
popa
data16
popf
xor
(bad)
es
xchg
daa
xlat
dec
jmp
or
and
arpl
add
(bad)
jle
jns
mov
(bad)
dec
pop
mov
pop
jmp
sub
adc
add
dec
lods
in
xchg
mov
cmps
xchg
popf
jne
or
or
in
retf
mov
and
pop
dec
push
shl
loopne
inc
cmp
jmp
aam
xor
pop
call
mov
pop
add
movs
mov
pop
es
add
jnp
dec
adc
loopne
je
mov
in
sbb
sti
mov
sub
mov
lock
aad
stos
sub
les
adc
loop
repz
or
sbb
sub
xchg
ret
aas
mov
mov
cmp
fidivr
mov
int
dec
rcl
jp
in
retf
push
cmp
cmp
addr16
jl
mov
rol
xor
lock
xor
arpl
leave
das
call
sbb
shr
jge
mov
cwde
mov
push
inc
enter
xchg
movs
leave
mov
push
add
in
push
xor
jp
aam
hlt
retf
neg
inc
xor
daa
std
xchg
and
or
push
xor
xchg
and
xchg
xor
cld
test
cld
iret
mov
add
cmp
cdq
jbe
(bad)
mov
push
loopne
and
sbb
and
jae
mov
hlt
mov
or
jl
pop
and
ja
bound
sbb
jno
loopne
loopne
xor
mov
loope
or
gs
in
mov
sub
and
ja
sti
(bad)
outs
inc
xor
clc
test
push
sar
rcl
mov
cmc
in
jbe
fsubr
je
out
out
cmp
pop
mov
mov
sar
mov
(bad)
not
sti
inc
ins
inc
and
xchg
sar
mov
bound
ins
or
cmps
xchg
push
jge
xchg
xor
jmp
imul
aam
clc
jo
mov
push
or
mov
fwait
jl
loop
pop
pop
pushf
adc
xor
jmp
pop
sti
hlt
fild
into
adc
rcr
rcr
bound
lea
in
ficom
in
and
popf
imul
scas
mov
push
(bad)
dec
shr
mov
inc
int3
dec
sub
inc
std
retf
inc
shl
xchg
xor
adc
mov
mov
loop
xchg
lods
pop
cmps
push
xchg
out
inc
fbstp
cwde
jle
daa
xchg
push
and
rcl
or
mov
and
and
mov
ins
test
nop
test
cmp
cld
mov
shr
mov
or
call
sub
pop
push
out
xor
push
mov
outs
fisttp
imul
mov
mov
icebp
jbe
jo
and
ds
lods
add
push
mov
inc
sti
div
inc
inc
iret
popa
and
and
clc
rcr
pop
das
stos
cmc
loop
outs
mov
int
nop
xor
retf
call
push
pop
sti
sbb
das
and
pop
mov
push
and
outs
es
data16
mov
in
sub
ins
adc
scas
repnz
cmp
jmp
inc
xor
pop
mov
out
mov
push
jge
xor
push
mov
(bad)
inc
and
add
sub
pop
mov
push
mov
mov
pop
ins
in
sahf
ins
dec
test
add
test
out
cmp
test
or
cmps
rcr
imul
dec
sub
and
mov
pushf
xlat
arpl
in
push
test
inc
dec
mov
and
push
add
inc
int
js
sub
out
xor
popf
aad
sub
mov
jns
xchg
dec
mov
test
lods
ds
jbe
xchg
mov
mov
mov
sbb
lods
(bad)
cmp
frstor
jae
fld
not
add
mov
(bad)
fucomp
adc
das
push
std
inc
xchg
in
inc
pcmpgtd
or
js
jl
cmp
mov
add
imul
or
add
and
mov
push
sar
jg
mov
inc
out
jmp
sub
sub
jnp
adc
add
mov
fisttp
jecxz
adc
xchg
pushf
sbb
out
or
inc
in
lock
jmp
lock
ds
add
and
or
in
mov
jns
pusha
jg
pop
xor
outs
fsub
lds
outs
pop
pop
pop
leave
mov
mov
out
cwde
outs
xchg
and
sti
adc
push
cmp
dec
and
int3
das
into
sbb
mov
movs
jae
outs
rcr
aam
add
mov
test
rcr
xlat
cdq
int3
jae
push
dec
out
add
mov
in
jnp
jmp
shl
xchg
out
mov
xchg
dec
xor
iret
cmp
and
and
mov
fldcw
inc
push
xchg
sub
mov
xlat
xor
mov
ss
retf
ror
addr16
sbb
mov
pop
pop
cld
icebp
xchg
cmp
scas
leave
mov
mov
cmp
add
nop
jge
pop
popa
cmps
ins
mov
pop
or
push
in
and
push
jno
shl
push
mov
xchg
adc
mov
pop
lods
test
fs
(bad)
in
mov
add
popa
sbb
test
mov
xor
push
cmp
push
fs
push
dec
maskmovq
int3
ret
fisttp
in
push
xchg
ja
jg
cmps
sub
jne
lock
aaa
(bad)
cmp
in
push
sub
test
in
cmp
int3
dec
cmp
mov
call
add
xlat
jnp
mov
imul
sub
mov
inc
dec
lea
dec
pusha
and
adc
dec
push
inc
popa
das
imul
add
stos
push
and
pop
push
fild
leave
in
dec
xchg
fmul
lea
and
inc
mov
sub
sti
mov
aam
into
jmp
test
sub
sar
mov
not
rcl
data16
lods
ror
pop
sbb
xchg
ss
add
ins
daa
mov
(bad)
dec
pop
(bad)
ins
push
adc
jle
(bad)
cmp
mov
sbb
xchg
cmp
stc
dec
cmc
jne
xor
cdq
lods
lds
sbb
or
sub
dec
lea
movs
jmp
mov
adc
test
xchg
cmps
loope
enter
pusha
out
dec
jne
sub
mov
xchg
sti
adc
sbb
retf
jge
cmp
xchg
imul
pop
(bad)
(bad)
loopne
push
pop
pop
fadd
ret
or
int3
nop
or
pop
xchg
pop
pusha
mov
inc
pusha
lea
outs
pop
cmp
pop
shr
sbb
ss
jb
sbb
outs
(bad)
adc
ins
jno
stos
push
loopne
push
pop
cmps
push
cmp
aad
dec
outs
adc
popf
dec
mov
ret
sar
adc
test
mov
repz
shr
or
xor
push
psrlq
mov
jno
loope
fwait
cmp
jo
mov
xor
mov
addr16
mov
mov
and
std
push
jo
xchg
test
ds
repnz
repz
jno
sub
ss
in
cmps
jge
mov
cmp
pop
ja
adc
mov
cmp
or
sbb
sbb
jnp
mov
cmps
cmps
pop
fcmove
sbb
mov
xchg
jmp
sub
mov
out
mov
jo
fcom
imul
and
or
xchg
cdq
fimul
scas
pushfw
lea
pop
icebp
xor
mov
stos
sub
loop
(bad)
add
adc
cs
pop
enter
add
into
pop
test
or
push
pop
popf
xchg
aaa
push
mov
(bad)
mov
inc
xchg
xchg
adc
div
into
std
or
xor
adc
sub
xchg
jle
imul
lahf
dec
or
cmp
push
ror
jecxz
dec
and
cmp
mov
inc
(bad)
retf
in
call
fistp
aaa
ins
mov
xchg
in
lahf
into
jb
dec
add
cli
mov
mov
(bad)
popf
sbb
or
cmp
lahf
xor
jns
ror
cmc
loopne
or
leave
mov
xor
rcr
sub
aad
cmp
push
jg
daa
jl
movs
or
mov
addr16
mov
in
and
fbld
mov
adc
xchg
xor
out
stc
push
and
(bad)
jmp
inc
shl
cdq
scas
push
xchg
test
data16
in
mov
dec
mov
jo
adc
arpl
jo
out
int3
pop
js
lods
into
dec
(bad)
imul
enter
lods
(bad)
je
inc
(bad)
or
imul
jg
mov
mov
loopne
push
call
out
cmp
mov
int3
xchg
addr16
xchg
sbb
or
(bad)
pop
cmps
mov
inc
push
test
test
sub
ds
dec
(bad)
lods
jl
adc
not
aad
(bad)
fdivr
jno
sub
dec
adc
cmp
jo
pop
push
pop
lods
jecxz
lea
mov
pusha
pop
xchg
or
sti
mov
inc
cmp
add
or
push
push
(bad)
(bad)
int3
repz
in
leave
mov
push
loope
outs
or
imul
pusha
pusha
pushf
mov
jg
xor
sbb
or
mov
lods
addr16
push
push
leave
out
dec
pop
fst
ror
mov
call
jp
adc
jo
jne
iret
mov
or
add
ins
xchg
fcom
fs
shr
push
fwait
lods
pop
push
int
outs
pop
(bad)
push
mov
aaa
mov
add
bound
or
xchg
or
or
xchg
cmp
jnp
aam
or
jl
or
sub
jecxz
cmp
cmps
cmp
cmp
out
mov
cs
int
ficomp
jmp
pop
push
pop
ins
mov
aad
push
lock
daa
ret
shr
repnz
movs
push
ja
mul
pop
dec
into
out
test
mov
mov
mov
int3
test
mov
test
jae
sbb
(bad)
or
mov
cmc
lock
jle
repz
dec
lods
mov
and
adc
sub
int
imul
add
cmps
scas
ja
jmp
ja
loope
mov
lock
dec
loopne
ins
xor
shl
add
mov
shl
mov
cs
mov
xor
or
int
mov
loope
shr
aam
or
not
movs
into
stos
(bad)
fild
add
xor
into
pop
push
loop
retf
adc
push
pop
mov
pop
push
cmp
loopne
leave
or
push
sbb
and
xchg
xor
mov
cmp
jmp
iret
enter
or
jmp
jge
ins
shl
dec
and
mov
out
repz
clc
push
ss
cmp
ss
retf
jns
fwait
sbb
and
out
aam
xor
in
lods
cli
pop
mov
cdq
test
cmp
imul
fcomp
(bad)
or
outs
stos
pusha
(bad)
test
adc
inc
div
fnsave
mov
inc
push
push
mov
push
and
inc
mov
outs
pop
(bad)
fisubr
inc
jg
outs
fsub
sbb
shl
jmp
inc
fxch
pop
mov
mov
xor
jmp
or
nop
sub
xchg
fcomp
fstp
(bad)
push
fild
push
mov
or
inc
cmps
loope
fidiv
cmp
leave
mov
push
push
xor
xchg
ret
cmp
cwde
mov
mov
out
pop
mov
adc
out
mov
xchg
and
loop
int3
lock
push
jnp
pop
iret
mov
and
jg
sub
gs
and
adc
inc
dec
and
cmp
cmp
cmp
mov
lods
into
pop
adc
pop
icebp
out
or
mov
jo
ror
push
xchg
repnz
push
scas
cdq
ret
push
add
mov
xchg
arpl
mov
inc
call
xchg
cmc
js
xchg
pop
mov
out
ss
mov
mov
cmp
sub
ss
cmp
inc
iret
es
fwait
dec
pushf
popa
add
and
sub
jno
call
inc
xchg
xchg
imul
movs
and
cmp
in
mov
jecxz
sub
adc
cmp
arpl
pop
inc
push
cmps
imul
lods
dec
call
xor
mov
xor
retf
inc
mov
in
mov
mov
xlat
mov
dec
mov
int3
mov
call
cmps
int3
hlt
pusha
mov
dec
inc
in
arpl
aaa
xchg
sub
adc
sub
stos
aam
add
lds
cmp
into
xchg
cmp
jae
inc
adc
mov
xchg
cs
add
xchg
push
adc
cld
movs
jmp
fcmovnbe
or
jge
sahf
inc
in
push
sbb
idiv
xor
int3
fnstsw
pop
mov
cmps
pop
xlat
dec
jno
mov
out
sbb
hlt
dec
mov
and
xlat
pop
adc
out
pop
mov
lods
jae
enter
jo
xor
cmp
push
cmps
call
test
sub
jnp
sub
lods
enter
fistp
aam
push
int3
call
popf
dec
call
jg
popf
xchg
pusha
lock
xor
lods
scas
inc
sub
lea
dec
xlat
addr16
outs
jns
in
fsubr
pop
mov
push
mov
jne
sub
jbe
out
or
cmps
inc
cmp
cdq
jp
pop
jno
adc
test
xor
sub
push
push
or
jb
cmp
lock
adc
into
das
shr
pusha
mov
or
mul
gs
adc
sbb
mov
arpl
mov
out
(bad)
ror
dec
imul
sub
hlt
cmp
(bad)
nop
leave
popa
add
retf
xor
mov
add
or
je
in
cmp
bnd
leave
iret
inc
ds
mov
sbb
fidivr
sti
mov
enter
jae
cdq
inc
lea
sub
push
call
ffreep
push
sbb
stos
sbb
ret
xor
adc
cmp
cmp
dec
mov
je
mul
jae
ja
dec
in
xchg
popa
and
dec
in
mov
bound
jle
ss
mov
ja
jl
imul
jg
arpl
test
jl
jg
sbb
cld
pop
test
cmps
frstor
gs
sti
cdq
out
aas
sbb
xor
shl
mov
sub
sub
cdq
pushf
push
inc
pusha
pushf
cmp
(bad)
adc
or
aad
or
and
adc
out
inc
fidiv
mov
mov
and
outs
adc
cmps
(bad)
in
(bad)
dec
push
dec
test
(bad)
retf
sub
push
mov
sub
iret
mov
sbb
pop
enter
mov
xor
inc
mov
sti
retf
pop
mov
fnstenv
sub
mov
test
icebp
retf
(bad)
aad
and
jp
repnz
(bad)
push
inc
rcl
test
(bad)
iret
es
fdivp
int
ret
je
push
jp
cmp
push
add
ret
sbb
sub
mov
out
(bad)
fsubr
adc
jge
nop
cs
or
sub
inc
(bad)
outs
ja
sub
cmp
pop
int3
cmps
xchg
jae
fisub
test
push
inc
adc
dec
retf
test
addr16
mul
arpl
aaa
adc
ins
mov
test
push
movs
mov
fild
or
mov
lahf
add
ret
shl
in
lock
mov
rcl
aas
outs
sbb
mov
cs
repnz
(bad)
mov
out
mov
or
xor
ins
ds
add
pushw
push
das
ds
jg
imul
repnz
xor
sub
out
cmp
dec
xchg
inc
adc
jmp
dec
fadd
xchg
fs
mov
daa
sbb
mov
add
mov
pop
shl
fwait
mov
sub
retf
pop
push
inc
cmps
imul
cdq
cmps
repnz
push
(bad)
sbb
and
(bad)
aam
push
cmp
push
psrlq
mov
mov
ins
push
jmp
jl
ds
jnp
repnz
shl
or
push
test
add
add
add
dec
mov
mov
mov
(bad)
imul
mov
push
loope
add
xchg
inc
ss
cwde
xor
lds
adc
adc
ins
or
in
adc
jbe
xchg
xchg
jle
retf
add
stc
rcl
out
cwde
ret
ja
clc
arpl
inc
add
xchg
push
fwait
jl
add
scas
push
and
xor
ret
nop
ret
cmp
or
jl
daa
lods
and
retf
jl
imul
dec
or
sbb
and
adc
imul
jmp
stos
pop
sub
out
daa
sbb
dec
cwde
fs
(bad)
xchg
sub
cmc
xor
mov
cmp
xchg
cdq
or
movs
into
pop
sahf
push
or
(bad)
sbb
jmp
jo
out
mov
xchg
inc
stos
adc
xchg
aam
cmp
pop
push
jp
push
push
dec
pusha
les
sahf
sahf
lods
in
or
mul
inc
add
pop
mov
xchg
shrd
out
mov
clc
in
(bad)
(bad)
mov
xchg
push
xchg
(bad)
lock
xor
mov
outs
mov
mov
mov
inc
sub
xor
xchg
dec
or
leave
lahf
jns
pop
loop
shl
fisubr
adc
mov
pushw
les
pop
pop
repz
push
mov
xchg
in
pop
es
(bad)
out
out
push
mov
aaa
jge
pop
mov
jo
dec
cmp
fisttp
dec
adc
and
sub
xor
lea
fidivr
mov
arpl
int3
call
loope
mov
fs
jae
mov
fucomp
(bad)
out
push
xor
out
outs
pop
fsubr
rcr
push
icebp
repz
lahf
into
xchg
add
sbb
mov
std
push
jmp
inc
outs
frstor
cmp
adc
jg
lock
sub
sbb
add
mov
int
out
imul
xor
mov
(bad)
das
pop
push
push
xchg
add
xor
(bad)
fstp
(bad)
ins
add
sahf
adc
mov
dec
(bad)
cli
mov
mov
jne
ret
daa
jmp
jecxz
sub
xor
push
add
push
push
pop
push
push
rcr
movs
adc
in
sbb
ds
call
sbb
adc
in
popa
jg
inc
adc
pop
loopne
lock
call
cwde
mov
stos
int
add
push
xchg
pop
mov
or
imul
jmp
rol
imul
cmp
mov
stos
dec
mov
push
les
test
and
pop
pop
mov
jb
js
ins
pop
xchg
jmp
pop
mov
rcl
lahf
cdq
xor
push
(bad)
adc
movs
(bad)
sahf
and
fidivr
retf
call
dec
aam
fcom
test
out
xchg
sub
ins
ins
sub
mov
retf
es
jb
mov
inc
vpacksswb
ret
in
imul
cs
cmp
inc
stos
inc
jae
(bad)
and
icebp
pop
jns
lea
mov
add
cdq
jnp
sar
mov
lods
movs
mov
xlat
cli
cwde
popf
push
dec
cmp
fldenv
pop
(bad)
test
in
inc
push
popa
addr16
mov
push
add
cmc
adc
ror
sub
add
mov
lea
jae
or
(bad)
daa
sbb
das
retf
call
xor
push
imul
or
mov
mov
std
shl
add
daa
jmp
imul
mov
stos
xchg
sbb
add
xchg
cld
out
jecxz
adc
test
adc
push
jle
hlt
ins
or
xor
or
div
das
cli
add
mov
(bad)
mov
xor
bound
into
fsubp
stos
stos
pop
bound
dec
xchg
or
ds
stos
popf
shr
pushf
outs
(bad)
pop
cmp
sub
inc
mov
ins
adc
jno
fwait
xor
mov
stos
jno
jecxz
dec
adc
pop
push
pop
push
inc
(bad)
ror
sbb
pop
mov
bound
cmp
jge
in
jne
adc
mov
inc
je
inc
sar
out
js
mov
push
sub
pop
ret
call
mov
enter
fisttp
ins
sub
das
lods
mov
pop
and
stos
mov
xchg
into
in
mov
add
add
mov
or
inc
ror
jo
or
and
jmp
or
mov
adc
cmp
dec
mov
fadd
dec
push
test
sbb
mov
or
das
and
lea
clc
or
inc
mov
add
scas
fstp
loop
or
cdq
enter
inc
leave
rol
jp
out
mov
xchg
pushf
outs
test
and
fsubr
data16
cmp
movs
ins
stos
cmp
aaa
dec
hlt
add
xchg
cld
jle
out
arpl
in
sub
sub
adc
aam
pushf
mov
push
jmp
fadd
clc
mov
cmp
jp
in
adc
or
outs
test
inc
add
mov
shl
outs
push
loop
push
retf
xchg
mov
pop
ins
clc
bound
aas
out
imul
mov
dec
cld
push
jb
test
pushf
out
adc
mov
aad
and
jnp
inc
xchg
aam
adc
js
icebp
mov
push
push
mov
lods
outs
mov
mov
pop
inc
sub
xor
in
xchg
lahf
idiv
jne
and
dec
jno
inc
and
mov
adc
dec
push
and
push
jmp
std
or
(bad)
fcomp
jp
daa
mov
stos
jle
out
xchg
dec
lea
mov
push
ja
addr16
adc
and
pop
into
jle
jno
or
xchg
xor
out
and
aaa
bnd
mov
sub
adc
push
ret
push
mov
or
das
gs
sbb
popa
cld
js
inc
(bad)
mov
mov
add
mov
dec
jle
shr
into
fst
sub
mov
js
bound
pop
mov
inc
cmp
rcr
xor
dec
cmc
ss
xor
cli
and
pop
jb
xchg
cli
mov
shl
sbb
jge
xor
sbb
pop
xor
xor
or
sbb
je
(bad)
rcl
adc
add
adc
inc
adc
enter
enter
add
mov
sub
leave
push
mov
js
push
fs
xchg
xchg
dec
inc
daa
mov
add
das
jecxz
es
dec
pop
cwde
fistp
push
retf
hlt
lahf
test
xchg
sub
pop
mov
adc
jge
jno
cmc
sbb
call
movs
arpl
sbb
mov
or
mov
(bad)
mov
sub
add
shr
scas
test
cmp
push
sar
push
sbb
ds
sbb
inc
xchg
mov
arpl
out
mov
push
clc
cli
test
lods
pop
xchg
jp
dec
push
inc
push
jae
xchg
fwait
jg
xchg
add
sbb
sar
pop
xchg
movs
lea
cmc
cmp
xchg
adc
dec
clc
sbb
cmp
(bad)
adc
add
(bad)
push
or
imul
idiv
(bad)
outs
les
or
jb
ds
pop
push
daa
ja
imul
sbb
adc
adc
mov
sbb
and
mov
loope
pop
(bad)
push
mov
retf
or
test
mov
and
xor
loop
and
sbb
jecxz
sti
addr16
cli
push
xchg
rcr
and
mov
outs
fs
test
add
adc
or
arpl
inc
in
(bad)
mov
jnp
xchg
jle
je
xchg
inc
ins
dec
pusha
xor
std
cdq
in
jae
(bad)
pop
adc
test
mov
lea
or
fcmovne
retf
and
int3
clc
mov
leave
imul
pop
or
ret
sub
and
loopne
and
push
xlat
xor
mov
xchg
mov
cld
push
retf
mov
retf
ds
inc
cmp
inc
test
pop
push
pop
lock
out
sar
sbb
clc
mov
icebp
add
pop
push
and
push
cs
adc
retf
shl
rol
cmp
js
data16
inc
outs
jae
and
pop
pop
mov
inc
es
xchg
enter
fldcw
mov
inc
arpl
pop
icebp
stos
mov
push
fs
push
inc
test
pop
es
scas
or
dec
pushf
out
inc
mov
cdq
jne
dec
aaa
popa
lods
and
mov
bound
out
popf
push
sub
mov
inc
or
stc
jns
jge
sub
imul
or
mov
push
or
arpl
pop
xchg
sub
rcl
cmp
fld
adc
mov
xchg
out
fnstsw
ror
jbe
(bad)
xor
shl
retf
xlat
jae
jle
lds
ret
ret
(bad)
mov
iret
xchg
mov
loop
cmp
mov
jmp
retf
adc
push
jmp
repnz
imul
jae
mov
xchg
push
out
leave
mov
jecxz
lahf
data16
sub
stos
outs
mov
int
cmp
xor
dec
les
push
mov
or
fidivr
adc
jge
jo
and
cli
adc
cs
push
retf
inc
sub
pop
add
jo
push
data16
cdq
sbb
dec
int3
sahf
add
lar
xor
in
add
sahf
push
(bad)
add
mov
jno
jno
sti
repnz
dec
hlt
add
dec
rcr
mov
sub
or
and
movs
and
inc
into
sub
sbb
cmps
jl
cmp
xchg
stos
xchg
add
mov
(bad)
loop
repz
push
and
xlat
out
in
pushf
mov
je
mov
sbb
movs
mov
jle
inc
push
cdq
lahf
cmp
fiadd
xchg
inc
into
sbb
xor
cmp
dec
(bad)
int3
push
ins
adc
clc
inc
add
push
adc
pusha
outs
pop
cmp
sbb
and
mov
lods
dec
push
out
or
pop
xor
dec
cmp
pop
push
sub
push
aaa
movs
movs
mov
or
mov
and
xchg
push
jae
lods
xchg
mov
ja
and
leave
out
int3
enter
mov
mov
dec
nop
fs
add
dec
test
aad
cmp
(bad)
fmul
add
std
fistp
ret
xor
int3
dec
ja
iret
fstp
into
outs
jns
xchg
fisub
mov
xchg
cmp
cwd
mov
xchg
or
fwait
pop
bound
das
imul
jp
dec
jns
dec
test
xchg
cmp
adc
xor
sub
mov
sub
push
mov
xor
mov
jmp
in
add
outs
inc
jle
les
inc
pop
call
jg
inc
mov
clc
mov
std
aad
sahf
sbb
sar
pop
jbe
iret
movs
xchg
fld
inc
js
xlat
and
mov
mov
xchg
mov
arpl
out
mov
mov
sbb
neg
pop
ins
jnp
and
es
aad
not
add
sti
mov
pop
gs
xchg
pop
ins
mov
test
aas
fld
xor
popf
cmps
jp
stc
mov
sbb
stos
imul
retf
in
imul
out
bound
mov
and
inc
addr16
pop
jnp
hlt
dec
outs
add
test
sub
add
jge
jne
aaa
popa
jns
int
xor
adc
mov
retf
in
repnz
jp
xchg
and
jae
lock
leave
loop
dec
out
xchg
jp
sbb
dec
and
cmc
shl
outs
jle
add
push
mov
(bad)
fsub
pushf
iret
mov
push
aad
sti
ret
aad
into
xor
enter
xor
push
adc
inc
and
test
push
push
dec
mov
push
jno
sti
or
popf
dec
mov
fsub
loope
in
nop
pusha
add
adc
jb
add
cmp
stos
mov
xlat
xor
rcl
sub
test
cmp
jge
add
lea
retf
jbe
icebp
xchg
lea
push
mov
retf
lods
iret
mov
and
or
push
cmp
and
aam
jl
or
jge
adc
mov
jo
ss
fcmovbe
daa
adc
repz
loop
push
sar
repz
jne
clc
cwde
add
xchg
mov
retf
jnp
(bad)
mov
retf
pushf
es
xor
mov
stc
outs
inc
fwait
imul
lock
inc
push
mov
add
and
lock
mov
lods
or
pop
retf
(bad)
loop
mov
call
add
jge
jmp
arpl
mov
dec
repz
icebp
addr16
pop
out
xlat
xchg
mul
jecxz
xchg
pop
inc
movs
push
and
xchg
dec
push
loop
dec
jmp
in
add
and
adc
dec
lock
pop
sub
dec
push
or
mov
add
add
iret
jnp
movs
sar
xchg
leave
hlt
mov
(bad)
call
arpl
lea
mov
and
out
jp
stos
bound
mov
pop
enter
jmp
cli
sub
rcl
lds
cmp
cmp
jmp
(bad)
jg
icebp
push
jl
dec
cs
sti
lods
scas
arpl
inc
mov
ins
(bad)
adc
cmp
mov
ficom
shr
fisttp
fwait
push
fisttp
bound
add
clc
and
nop
inc
fld
dec
ds
mov
sar
inc
hlt
loop
push
xchg
sub
repz
loop
adc
add
sub
imul
jmp
xor
(bad)
mov
cmc
adc
fdivrp
xchg
jb
mov
xchg
push
imul
(bad)
retf
adc
xchg
lea
dec
cmp
sbb
pop
jl
xchg
cmp
sub
add
mov
cmp
js
and
xor
pop
aam
ret
bound
xchg
inc
push
mov
fwait
popf
jbe
cdq
out
dec
xor
adc
xchg
es
(bad)
xchg
and
inc
cmp
shr
mov
into
adc
xor
dec
popa
imul
mov
or
(bad)
daa
arpl
xchg
mov
or
or
(bad)
push
cwde
scas
ror
(bad)
push
pop
daa
ret
gs
scas
mov
(bad)
repnz
xchg
jl
not
cwde
loop
or
out
mov
repz
fmul
adc
ja
push
pusha
and
nop
dec
(bad)
cli
loop
dec
mov
xlat
mov
xlat
fcomp
xchg
sub
ins
mov
fimul
dec
sub
and
sbb
jge
add
enter
retf
push
pop
and
xchg
pushf
neg
push
(bad)
(bad)
mov
xor
cmps
push
cmps
mov
cmc
adc
test
or
sbb
ds
or
jg
repnz
repnz
aad
cmp
(bad)
mov
jp
adc
xchg
push
and
xor
adc
cmps
mov
push
xor
inc
inc
sub
mov
sub
ret
jbe
cld
or
mov
and
lock
sbb
(bad)
aam
lods
push
mov
cmps
mov
pop
scas
outs
add
adc
sub
cmp
(bad)
repz
jp
jnp
mov
sub
mov
out
mov
xor
sbb
pop
sbb
test
mov
stos
call
pushf
popf
sti
mov
sub
inc
ja
jne
(bad)
pop
(bad)
mov
xchg
rcl
and
enter
lock
cwde
test
mov
jnp
mov
pop
out
(bad)
in
sar
cli
add
xchg
or
stos
and
jge
mov
aam
inc
mov
pop
fimul
(bad)
jae
inc
dec
retf
(bad)
scas
lahf
aas
in
jns
jmp
sbb
mov
imul
je
retf
popa
inc
test
sub
pop
mov
in
jns
imul
jl
pop
je
test
mov
push
xor
mov
dec
fisub
xchg
enter
mov
inc
add
mov
int
call
push
sub
mov
mov
leave
mov
lds
sub
cmp
add
(bad)
xchg
pop
and
lock
adc
adc
les
int3
mov
int3
xor
and
rcr
xor
and
and
cld
cdq
push
ret
cmp
jp
add
mov
dec
icebp
nop
adc
stos
xchg
loope
test
xor
stc
inc
movs
mov
push
pop
data16
mov
shl
push
popf
aam
iret
idiv
stc
les
repz
adc
das
mov
rcl
sbb
arpl
xchg
fsubr
inc
mov
xchg
inc
pop
adc
push
mov
sbb
daa
repnz
adc
sbb
js
pusha
es
inc
stc
mov
(bad)
pusha
ss
cmp
cld
outs
cmp
jne
or
test
inc
add
daa
ds
inc
inc
xchg
sub
cdq
and
icebp
mov
sbb
and
push
xchg
loop
fild
jne
mov
and
xchg
(bad)
jmp
ins
adc
test
adc
sbb
aaa
dec
jg
repnz
inc
fstp
dec
sbb
xor
xor
ficom
bound
cmp
cmp
adc
movs
inc
push
pop
sbb
rol
mov
xchg
dec
mov
ins
out
xchg
push
cmps
push
jnp
leave
and
fistp
xor
call
int3
shl
inc
lods
jmp
or
or
or
xchg
xor
fisub
stos
mov
das
xchg
enter
stc
pop
pushf
inc
div
call
je
out
pcmpeqd
jmp
into
sar
jl
xchg
rcr
cmps
mul
sbb
pop
iret
sbb
dec
dec
sub
push
jp
fisttp
add
std
call
fstp
loopne
test
lock
outs
icebp
int
loopne
inc
pushf
sub
fcomp
jo
sbb
pop
loopne
int3
imul
xor
or
jns
add
pop
pop
or
pop
and
js
sub
out
mov
mov
cdq
sbb
or
mov
lods
aaa
cmp
stc
push
fild
hlt
loopne
push
mov
mov
ss
and
xchg
(bad)
loop
push
xor
jb
adc
sub
and
lds
adc
leave
mov
mov
scas
or
fisub
or
les
dec
inc
inc
stos
(bad)
aam
or
mov
sub
adc
shl
out
xor
sub
loopne
cld
dec
std
std
push
ret
inc
sbb
and
push
jg
dec
add
mov
gs
pop
dec
mov
add
jae
popa
push
hlt
fucomi
rol
int3
mov
or
sti
jb
cmp
out
(bad)
ins
hlt
fisub
xchg
xchg
ret
xor
mov
not
dec
pop
mov
stos
xor
pop
fistp
pop
lods
das
inc
xchg
xor
xchg
das
mov
and
xchg
bnd
mov
and
in
sub
test
push
in
adc
jmp
push
or
mov
xchg
push
or
imul
stos
jle
fsub
aam
outs
push
mov
xor
mov
add
imul
jg
call
cwde
in
fcomp
ror
sbb
sbb
lea
xchg
dec
lods
sbb
pop
xlat
lock
xor
inc
mov
mov
mov
add
mov
es
push
retf
clc
xor
pop
test
push
cs
pop
sub
jne
xor
lock
cdq
mov
and
jne
aam
int3
sbb
cli
idiv
cmps
adc
xchg
sub
xlat
push
in
lods
cdq
sub
leave
pop
or
xchg
mov
sti
add
xlat
cmp
shl
in
xor
repz
push
hlt
add
imul
sbb
mov
dec
mov
mov
ficom
(bad)
das
(bad)
mov
mov
jle
(bad)
stc
mov
pop
mov
mov
lock
int
cmps
add
aad
mov
retf
pop
cld
jle
daa
icebp
repz
pop
sbb
test
mov
cmp
popa
mov
jnp
sbb
and
sbb
adc
repnz
movs
fidiv
cmp
imul
ret
jge
mov
enter
aas
xchg
leave
fwait
es
ret
sub
inc
daa
mov
lods
or
sar
pushf
mov
out
cmp
jle
les
lahf
push
inc
ss
imul
xor
ja
pop
fcom
xchg
movs
push
adc
cmp
retf
sub
add
mov
popa
stos
push
jecxz
fld
mov
ja
fadd
lahf
add
out
inc
loopne
xchg
fnstsw
cli
cli
inc
jp
retf
cwde
jge
icebp
std
sti
enter
fdivr
arpl
gs
mov
xchg
adc
lea
xchg
iret
call
sbb
repz
stc
fwait
add
leave
mov
repz
and
add
or
daa
aam
cmp
push
les
xor
test
push
push
xchg
sub
or
pusha
mov
loop
and
ins
push
fld
lds
adc
and
pop
je
aam
mov
sub
es
push
leave
retf
retf
jbe
cmps
jb
js
scas
jb
sbb
cmp
ret
xor
jmp
aas
in
push
jg
push
add
dec
pop
jmp
es
xchg
lods
not
add
mov
pop
pop
xor
mov
out
mov
ins
pop
das
loope
pop
loop
addr16
fadd
mov
add
pop
cmp
neg
daa
jbe
adc
sbb
jb
and
retf
aam
push
scas
pop
sbb
adc
or
and
add
leave
(bad)
and
ror
pusha
mov
sbb
loope
or
inc
loope
xchg
xor
jno
pop
dec
je
clc
sub
mov
leave
mov
pop
cmp
in
xor
hlt
sti
fnstenv
ret
retf
sub
xchg
ss
and
ret
push
sbb
aam
inc
loop
into
fistp
js
(bad)
repz
test
xor
ja
inc
fsubr
sbb
dec
(bad)
mov
test
jbe
call
lods
repnz
jl
cmp
js
enter
sbb
push
sbb
pop
xor
mov
fsubp
repz
in
mov
cmp
cmps
and
dec
rol
pop
jg
push
in
or
es
fisubr
dec
cli
or
movs
fnstenv
pop
dec
mov
cwde
inc
xchg
dec
push
repz
scas
xor
test
int3
jle
lds
inc
pop
mov
lds
adc
push
ja
fcmovu
(bad)
fwait
mov
and
test
inc
adc
or
lods
mov
stc
rol
call
rcl
push
aaa
dec
mov
push
sbb
adc
and
mov
dec
push
mov
into
add
xchg
mov
mov
scas
es
daa
mov
pop
push
pop
mov
cwde
jmp
pop
call
in
mov
adc
or
or
fnstsw
leave
ins
push
stos
lods
mov
test
stos
lods
xchg
in
or
rcr
cmp
loop
cmp
or
aaa
cmp
(bad)
mov
jae
dec
leave
lahf
lds
jae
sahf
retf
fcom
mov
out
scas
pop
pop
xor
std
adc
out
add
jecxz
push
mov
adc
jg
out
sti
pop
push
xchg
push
test
mov
fsubr
jmp
fs
push
daa
xor
inc
dec
rcr
ja
cs
jno
in
lods
and
mov
dec
push
mov
mov
xor
daa
push
aad
or
addr16
xchg
or
jno
sub
inc
dec
sahf
out
or
mov
pop
sub
mov
je
lock
stos
push
push
sti
add
sbb
cmp
cmp
dec
and
mov
fld
dec
mov
xlat
out
xor
fcomp
cs
div
stos
mov
inc
adc
push
pop
fstp
cmp
icebp
pop
fnstcw
push
pop
push
loope
cdq
sub
jb
pop
add
adc
stos
jp
ja
pop
loope
icebp
mov
neg
aam
inc
rcl
sub
mov
adc
adc
(bad)
in
push
cmps
test
or
push
pusha
mov
jae
iret
imul
add
add
sbb
push
fdivr
movs
outs
fsub
add
add
sbb
push
mov
and
mov
and
jl
mov
fld
inc
dec
scas
ins
int
jp
mov
ins
cmp
xor
xchg
jne
jge
fwait
loop
or
and
ds
mov
push
mov
xor
(bad)
movs
xchg
dec
ins
mov
and
ror
ficom
or
retf
xor
jae
mov
bound
dec
push
push
inc
mov
sbb
xor
push
outs
ins
mov
mov
jecxz
retf
lods
xor
sbb
jne
retf
adc
push
xchg
movs
jnp
test
xchg
not
mov
repnz
sbb
pop
fist
sub
sbb
movs
jp
not
fwait
dec
xlat
push
cld
lods
out
inc
aaa
jno
retf
mov
dec
fild
std
mov
in
out
jae
bound
pop
mov
lea
xor
mov
mov
int3
and
dec
rcl
(bad)
scas
repnz
jp
sbb
arpl
retf
iret
sbb
in
jmp
jmp
and
mov
inc
fist
mov
xlat
mov
or
xchg
jbe
add
imul
pop
add
cmp
push
icebp
inc
icebp
mov
(bad)
inc
mov
jb
pop
(bad)
jle
shl
mov
es
push
pop
dec
shl
mov
clc
jg
sub
popa
mov
pop
push
inc
cs
arpl
jl
jnp
xchg
dec
ds
ret
scas
sahf
rcr
inc
add
shr
jne
into
cmps
sub
aam
dec
nop
int
sar
cmp
and
pop
mov
arpl
dec
mov
xchg
sahf
xor
imul
adc
mov
jecxz
inc
ja
xchg
fidiv
inc
jne
das
xchg
in
jle
ja
arpl
inc
jg
fmul
scas
int3
stos
mov
jns
push
inc
movs
clc
dec
and
imul
stc
sub
inc
mov
sbb
jne
cmp
out
mov
test
scas
fild
xchg
and
jae
fistp
pop
call
sub
(bad)
(bad)
mov
or
mov
es
jecxz
mov
sub
mov
dec
cs
sbb
xor
sub
add
add
xchg
cmp
push
adc
xchg
adc
pop
jge
pop
sub
and
aas
add
je
push
push
call
mov
push
add
cdq
(bad)
xchg
and
mov
jle
test
les
push
pusha
push
mov
jle
adc
push
bnd
pop
wrmsr
or
jp
pop
mov
cwde
and
sbb
xor
outs
sar
and
cmp
mov
sbb
cli
xor
jmp
dec
inc
call
add
outs
jb
mov
cmp
dec
repnz
inc
mov
scas
inc
ins
cmp
jmp
push
in
rol
bound
sti
mov
jl
mov
mov
dec
push
xor
add
rcr
mov
outs
push
int
xchg
fisttp
cmp
cmps
hlt
pusha
call
test
xor
cdq
add
inc
xor
loopne
cmc
retf
xchg
lods
(bad)
ffreep
or
popf
push
inc
shr
ror
jge
sbb
movs
movs
jne
or
es
sub
sbb
inc
retf
ret
gs
js
test
pushf
loop
mov
jnp
mov
cdq
adc
jae
ror
push
sbb
fldenv
sub
call
add
add
jge
xor
mov
cmp
xchg
aaa
cmp
test
shr
inc
cmp
dec
aas
cld
pop
bound
lds
ret
fs
mov
push
retf
mov
out
int
sub
ror
dec
jecxz
add
lods
mov
xchg
mov
pop
call
shl
sbb
xchg
and
mov
ss
and
icebp
retf
jp
dec
lds
stc
mov
loop
mov
add
push
cli
push
enter
jmp
inc
daa
leave
clc
(bad)
hlt
ins
adc
ret
jle
sahf
sub
mov
pop
add
sub
cwde
pushf
popa
sti
fistp
push
inc
lea
push
fnstenv
outs
inc
iret
xchg
pop
imul
dec
fnsave
loop
out
movs
or
push
pop
jg
repnz
loopne
sar
jb
add
dec
xchg
movs
int
sbb
add
int3
push
ret
sti
cli
jmp
dec
icebp
push
adc
jb
js
ret
addr16
sbb
(bad)
in
mov
xchg
loope
xor
mov
aas
aad
sbb
cli
adc
add
int3
ds
data16
popf
mov
add
add
xchg
stos
rcr
sbb
retf
cmovs
push
adc
lock
in
jo
or
pop
push
test
lock
test
mov
push
jae
js
adc
pop
addr16
xlat
inc
ret
ret
jbe
(bad)
or
mov
pusha
pop
fdiv
dec
mov
xor
imul
out
addr16
in
or
xchg
cmp
sub
pop
jnp
je
adc
fldenv
jmp
sub
icebp
ret
popa
cdq
sbb
cmp
or
xchg
pop
push
fdivr
repz
jne
pop
dec
dec
add
push
dec
iret
xchg
add
iret
xchg
sub
cwde
aad
sub
sbb
jo
inc
inc
push
test
inc
repnz
push
mov
(bad)
fs
mov
retf
retf
cmp
xchg
inc
add
xor
inc
dec
dec
and
icebp
xor
ja
mov
add
and
js
das
xchg
pop
mov
jns
mov
pop
ret
sbb
jl
inc
dec
and
iret
mov
scas
add
pop
stos
pop
sub
push
stos
jb
jno
out
pop
dec
stos
jmp
int3
scas
and
lahf
and
add
(bad)
push
or
pop
sar
cmps
(bad)
inc
inc
fs
ret
mov
ds
lock
dec
push
xchg
lea
and
jmp
(bad)
pusha
mov
ins
add
xor
bound
xchg
call
jp
mov
xchg
shl
cmc
dec
pop
std
dec
push
and
xchg
push
lock
outs
outs
sub
add
ins
jle
(bad)
pop
jg
aad
dec
bound
dec
stc
ss
pop
mov
add
lods
and
fidivr
xor
push
xor
sbb
cld
push
out
call
test
xchg
in
call
jmp
push
addr16
pop
or
mov
gs
(bad)
out
push
(bad)
adc
fist
pop
mov
lods
in
push
ror
or
sbb
push
dec
pusha
cwde
(bad)
mov
push
add
mov
jg
xchg
ret
ret
aad
mov
lea
cmps
pop
jp
push
retf
jns
into
sub
mov
and
(bad)
dec
push
fst
cmps
add
sbb
dec
in
xchg
or
sub
adc
lahf
scas
adc
fmulp
adc
aas
jne
adc
int
mov
cmp
les
adc
push
cdq
cmp
mov
shl
int
or
nop
dec
xchg
mov
pop
div
mov
and
or
fs
aaa
cdq
pop
and
out
xchg
xchg
cmp
mov
imul
add
rcr
sbb
fmulp
shr
fmul
sub
js
inc
pop
iret
xchg
lods
lods
jnp
retf
bound
xchg
jae
nop
ret
int
sbb
and
hlt
in
add
and
push
movs
stc
push
mov
or
(bad)
ja
and
jge
push
repz
stc
int3
movs
div
push
jne
cmp
mov
xchg
mov
pusha
out
aam
scas
jecxz
fiadd
mov
inc
pop
pop
xor
push
bound
retf
or
dec
addps
jmp
je
inc
push
cli
repnz
cmp
pop
(bad)
scas
or
(bad)
addr16
and
dec
lock
(bad)
jnp
dec
jl
loopne
addr16
xchg
push
lea
or
je
xchg
(bad)
scas
push
aam
sub
jmp
(bad)
fnstenv
cmp
mov
mov
mov
xchg
repnz
sbb
cmp
clc
push
push
pop
shr
std
sub
nop
dec
xchg
jge
or
fiadd
retf
or
call
sbb
dec
clc
outs
mov
(bad)
xchg
push
adc
loop
inc
mov
xchg
cmp
add
(bad)
jp
mov
js
sub
cdq
sub
mov
sbb
push
sbb
outs
in
out
inc
int3
movs
popf
imul
inc
inc
enter
test
sub
adc
pop
inc
sub
cmp
mov
in
inc
pop
retf
inc
mov
jmp
sub
pop
inc
icebp
jae
imul
std
push
(bad)
pop
data16
aad
mov
btc
push
ret
(bad)
(bad)
xlat
outs
cmps
mov
rol
mov
retf
push
inc
mov
push
test
pop
pop
pushf
aad
jl
inc
cs
adc
pop
xor
pop
mov
inc
ud2
in
xchg
ret
daa
add
lock
and
das
(bad)
mov
inc
dec
scas
add
xor
adc
adc
push
xchg
add
call
iret
adc
gs
rcr
movs
add
and
(bad)
outs
and
mov
dec
in
cmc
dec
dec
sub
pop
mov
add
push
icebp
mov
or
outs
in
(bad)
sahf
dec
imul
stc
xor
adc
sbb
pop
and
push
popa
and
enter
cwde
popf
xor
shl
push
imul
sub
sti
mov
loope
cmps
mov
ror
jbe
push
xlat
(bad)
inc
push
push
(bad)
xchg
or
and
call
sbb
jne
push
clc
imul
loop
pop
or
sub
jmp
push
push
mov
hlt
outs
mov
dec
mov
in
cmps
jl
or
test
(bad)
jo
popf
mov
xchg
scas
cld
jecxz
mov
imul
in
and
xor
ss
imul
movs
or
das
adc
ret
xor
inc
loope
inc
test
fwait
jp
sbb
(bad)
xor
sar
mul
je
sti
jne
rol
mul
out
dec
test
pusha
inc
mov
lods
scas
retf
mov
xchg
test
add
push
cmp
test
add
cmp
daa
std
ds
push
mov
pop
jmp
xor
pop
xchg
pop
add
loope
jno
test
pop
je
cmps
ret
icebp
add
xor
aam
and
sbb
lds
add
xchg
inc
mov
repz
cmps
mov
fcmovbe
mov
mov
or
jmp
pop
push
retf
jns
pop
aam
jp
mov
retf
jbe
and
addr16
scas
pop
daa
jp
sub
or
loopne
lahf
jns
call
jl
inc
sub
aas
add
test
fisub
sbb
pop
in
test
mov
jmp
ret
out
add
and
xchg
shl
jecxz
repz
cli
ja
add
xchg
push
test
inc
lea
push
xchg
fwait
(bad)
mov
cmp
aad
adc
into
mov
jae
ja
pusha
ja
mov
pop
pop
sahf
in
ror
sahf
lea
mov
sub
jp
lods
adc
fiadd
adc
dec
push
leave
imul
(bad)
lods
nop
xlat
xchg
push
jecxz
in
fwait
cld
and
cs
jo
jmp
sbb
push
int3
fisub
inc
sbb
es
push
fiadd
add
pop
push
out
push
(bad)
dec
stos
fcomi
push
hlt
dec
sub
mov
shr
inc
push
es
sar
xor
jb
fwait
jmp
call
sbb
sbb
push
out
push
xor
mov
stc
lock
mov
xor
mov
ret
sbb
test
lds
inc
cli
or
pop
push
dec
sub
adc
jp
iret
sub
scas
lods
mov
pop
dec
sbb
adc
rcl
gs
add
mov
xchg
packssdw
mov
or
lock
xchg
cmp
cmp
sbb
inc
dec
enter
lea
in
stos
call
sbb
or
or
sub
add
(bad)
lahf
and
aad
pop
add
in
jge
out
xlat
(bad)
jb
call
sub
sbb
xchg
cmp
mov
xchg
inc
pop
loop
adc
sbb
fwait
cmp
popf
rcr
adc
dec
and
pushf
movs
mov
(bad)
pop
sub
cli
push
sub
add
ja
dec
push
xchg
adc
ret
mov
and
xor
imul
jae
and
ja
movs
fnstcw
pop
pop
add
rcl
test
mov
mov
fucomp
push
imul
xlat
sub
cwde
inc
mov
mov
iret
add
div
loope
loopne
das
cmps
mov
fisttp
loopne
pop
mov
add
sahf
inc
pop
popa
inc
sbb
xchg
cmps
lock
and
out
mov
and
inc
cs
sub
cmps
mov
jnp
loop
retf
sbb
mov
mul
into
mov
add
leave
cmp
jns
stos
mov
ja
fsubr
repz
ins
mov
mov
aas
sub
inc
pop
jno
sbb
xchg
xlat
mov
jno
std
ins
xchg
mov
je
cmps
inc
sbb
rol
dec
mov
shl
push
mov
push
mov
ins
or
in
push
sti
sub
(bad)
jge
adc
jge
daa
or
inc
loopne
outs
mov
cmp
sbb
or
js
dec
mov
sar
inc
mov
popf
mov
add
in
xchg
or
lock
mov
mov
xchg
test
xchg
xchg
jne
mov
aam
ja
inc
pusha
cmc
inc
stos
popf
ins
cld
add
pop
cmps
xor
(bad)
mov
pushf
mov
loopne
sub
repz
std
call
dec
or
mov
cmps
pop
test
mov
idiv
in
jae
enter
ret
jp
jg
inc
dec
and
je
xlat
mov
push
jnp
cs
push
gs
cmp
xor
movs
aaa
sub
lds
stc
imul
out
sar
push
int
add
jne
sbb
push
cmp
ret
push
inc
movs
or
push
cmc
pop
fidiv
cmp
shl
arpl
sbb
and
or
add
sub
dec
cli
cs
loop
push
sbb
bound
mov
stos
or
mov
push
out
pop
add
ret
xchg
mov
icebp
jl
xchg
mov
jl
mov
pop
int
cmp
clc
cs
push
les
xchg
sbb
add
cdq
jne
jl
das
mov
sbb
adc
push
pop
push
test
mov
adc
ror
stos
xor
cmp
pushf
jge
in
sub
xchg
stos
mov
call
inc
push
jb
add
or
jnp
pushf
pcmpeqw
retf
jge
add
test
cli
sbb
add
mov
push
scas
push
ja
add
daa
xchg
(bad)
fcomp
call
jge
mov
aad
cmc
loope
sbb
mov
jge
add
shl
sbb
sub
test
test
inc
or
jnp
cmps
lds
mov
pop
stos
xor
arpl
test
scas
cmps
nop
cli
xor
das
xchg
mov
dec
cmc
mov
cmps
inc
add
jbe
jp
or
xchg
es
std
fcomp
jne
das
out
aad
jo
mov
imul
inc
in
(bad)
jecxz
out
int
xchg
aam
and
imul
bound
adc
cdq
mov
mov
int
int3
adc
ret
mov
cmp
fidivr
ret
cli
sbb
sar
pop
fmul
mov
shl
test
dec
xchg
fs
xchg
or
test
jg
rcl
and
daa
jae
retf
fbstp
fsubrp
adc
pushf
pop
inc
fild
aam
inc
cmp
jmp
inc
push
push
xor
push
xchg
jae
or
std
call
add
pop
xchg
push
cli
jg
xchg
test
pop
dec
mov
mov
enter
adc
call
and
stos
fldenv
aas
in
fwait
xchg
arpl
push
dec
aaa
or
jecxz
and
mov
add
test
nop
addr16
shr
push
inc
add
ficom
jo
adc
lds
sbb
retf
jnp
cmp
sbb
inc
ret
ret
imul
lock
xlat
sti
mov
stc
out
pop
cdq
and
xchg
rcl
adc
in
cmp
mov
jg
ror
ret
push
mov
cs
gs
movs
mov
in
push
cmp
inc
lahf
outs
dec
pop
push
cmp
sahf
retf
test
dec
dec
pop
mov
sti
ret
int
imul
sub
sub
pushf
shr
mov
ret
mov
mov
jno
sahf
stos
xchg
loope
in
xlat
inc
sub
sti
adc
in
pmullw
add
sbb
mov
sar
and
jbe
push
ret
mov
cld
iret
xor
ins
shl
repz
jecxz
jb
push
mov
pusha
mov
ret
push
mov
cmp
call
test
push
cmp
retf
xchg
cmp
je
fld
xor
xor
idiv
adc
add
mov
scas
mov
outs
daa
icebp
repnz
xchg
sbb
aam
dec
cmp
pop
fst
dec
jbe
adc
mov
sub
sbb
inc
dec
dec
fs
addr16
and
pop
(bad)
mov
je
xor
imul
out
dec
test
dec
and
jge
jmp
push
add
mov
sbb
mov
daa
cmp
xchg
test
lds
add
jo
xchg
(bad)
in
mov
cmp
and
sti
fiadd
xor
xchg
leave
sbb
or
or
push
arpl
in
cs
cli
pop
inc
popa
mov
dec
mov
in
sub
sub
je
dec
cs
mov
push
neg
stc
fcom
cdq
movs
adc
fucomi
xor
out
stos
fs
mov
not
retf
(bad)
out
xchg
leave
or
test
ror
int
pop
fdivr
add
in
xor
pop
into
jae
out
stos
and
pop
xor
rcr
inc
js
movs
mov
and
mov
push
retf
lock
pop
xchg
jl
mov
loopne
mov
fadd
add
mov
adc
and
xchg
and
pop
jge
mov
les
mov
mov
adc
fwait
pop
aad
jae
imul
dec
ss
js
loope
xchg
inc
dec
ds
cmps
xchg
retf
cli
stc
lods
jo
mov
and
sub
cmp
in
pop
or
scas
pop
pop
or
stc
cs
add
xchg
loopne
retf
push
jle
stc
mov
inc
les
mov
aad
lea
bound
popa
pop
or
inc
outs
mov
stc
mov
dec
adc
fimul
shl
pcmpgtd
call
xchg
add
adc
mov
sub
push
pop
rol
cmc
arpl
inc
fwait
and
mov
jmp
sub
nop
(bad)
cmp
push
sbb
push
scas
sub
lock
rcl
or
jb
in
idiv
dec
in
or
dec
mov
pop
jae
pop
icebp
sub
pop
lods
mov
mov
push
xchg
addr16
sar
mov
pop
fcomp
std
sbb
add
dec
mov
jno
xchg
(bad)
sahf
ror
cmp
popa
lods
(bad)
and
mov
test
jp
nop
lds
pop
(bad)
jnp
sub
sub
shr
pop
bound
sti
cs
repz
jb
pusha
jnp
jge
aad
push
bound
mov
adc
mov
lds
movs
jne
push
fsub
xor
and
retf
bnd
das
push
dec
mov
adc
out
test
dec
pushf
mov
add
push
mov
or
lea
lock
aam
bnd
adc
ja
jae
ins
cmovp
cmp
xor
jae
add
and
mov
stos
aaa
nop
jmp
data16
cmpxchg
mov
jecxz
lds
mov
xor
xchg
push
jp
or
jae
or
and
sub
and
cmc
adc
and
or
push
or
mov
jnp
or
(bad)
inc
xchg
dec
or
mov
fnstsw
push
jg
jne
mov
inc
cmp
es
ret
sub
sub
jg
out
mov
loope
add
std
out
sbb
ins
xchg
fiadd
push
repnz
or
ret
mov
add
cmc
xor
mov
xchg
cmc
or
mov
push
shl
sbb
les
cdq
pop
or
call
xor
sahf
pushf
jno
fild
daa
ds
dec
adc
add
add
cwde
scas
fst
in
push
cmp
inc
pop
mov
std
jl
daa
movs
sub
pop
push
and
stos
and
dec
xor
dec
xor
mov
mov
ror
ja
inc
leave
stc
fs
call
push
mov
out
sbb
sbb
loop
or
pop
pop
ja
aam
xchg
mov
(bad)
lock
push
cmp
adc
pop
(bad)
pop
stc
pop
pop
je
stos
test
scas
inc
xchg
imul
inc
jns
mov
sbb
jo
retf
inc
(bad)
fist
aad
pusha
movs
je
fimul
jo
in
ins
dec
stos
push
mov
mov
mov
xchg
int
movs
neg
ins
sbb
pop
xchg
inc
xor
mov
shr
movs
enter
dec
inc
daa
inc
scas
mov
test
js
pop
hlt
fsub
call
in
ins
cdq
test
ins
aas
xchg
jl
xor
mov
jb
cmps
jmp
sub
call
in
ins
ins
ret
sub
in
jnp
loopne
jbe
xor
xor
into
or
cmp
xor
and
jbe
jb
out
push
mov
mov
add
inc
cwde
test
aaa
pop
sbb
cs
or
xor
popf
cdq
dec
and
jmp
mov
mov
inc
arpl
cs
into
fimul
mov
jns
(bad)
fs
icebp
or
ja
or
inc
mov
mov
add
or
and
adc
xchg
mov
cmp
fisubr
push
cs
adc
out
nop
jne
movs
push
mov
xchg
mov
outs
call
cmp
rcl
inc
jbe
ret
lods
xchg
adc
xchg
into
cmps
pop
mov
xchg
pop
xchg
mov
xor
loop
(bad)
xlat
push
pusha
or
jns
push
setne
mov
das
out
dec
ret
jnp
xchg
in
loopne
adc
cmp
stos
push
sbb
mov
je
mov
inc
mov
rcr
mov
bound
push
(bad)
cld
adc
mov
sbb
mov
mov
dec
stos
jl
lods
rol
repz
and
imul
push
or
jnp
xlat
add
movntps
or
(bad)
add
adc
fsubr
dec
ja
retf
or
loope
push
xor
mov
mov
xor
jle
and
jmp
cld
mov
cld
iret
dec
jge
dec
or
std
and
jmp
inc
std
inc
push
push
sub
mov
adc
lea
(bad)
into
xchg
js
pop
xor
cmp
out
ret
stos
jnp
mov
cwde
add
xchg
mov
in
mov
test
repnz
pop
div
and
out
test
sub
mov
ins
push
mov
inc
mov
push
jbe
jg
push
push
das
ret
test
push
fild
in
in
rol
data16
(bad)
ret
dec
lea
(bad)
js
lods
push
adc
fnsave
fxtract
ja
mov
add
pop
je
ror
add
jbe
sar
pop
cmp
mov
mov
xchg
sahf
loopne
out
ss
in
or
scas
(bad)
push
jnp
mov
and
cwde
push
loope
and
jecxz
jae
mov
jae
sahf
in
xor
fsub
cmpps
mov
add
xor
mov
popa
call
shl
out
dec
cmps
and
sbb
fdivr
cmp
adc
nop
cld
mov
inc
cmp
xor
shl
call
stos
pop
and
ins
(bad)
test
test
test
sub
add
fs
xor
mov
and
add
inc
loopne
inc
mov
mov
(bad)
cli
and
cmc
outs
retf
cwde
(bad)
fist
pushw
out
les
fisttp
lods
cmp
out
push
imul
bound
xor
sti
add
inc
adc
pusha
int
cwde
cmp
mov
adc
test
mov
cmp
dec
push
pusha
xchg
icebp
mov
lods
pop
inc
cmps
push
mov
push
ss
xchg
scas
pop
xor
outs
inc
(bad)
sub
je
inc
dec
shl
jp
scas
xor
or
add
jmp
ret
and
cmps
fst
scas
lds
fs
dec
dec
stc
clc
push
mov
icebp
add
(bad)
out
loopne
mov
mov
or
mov
das
or
aam
test
cmps
lahf
and
dec
push
addr16
inc
cs
push
stos
pop
loop
xlat
outs
fs
ja
cmp
mov
int3
dec
mov
xchg
cmp
sub
sti
in
pop
push
inc
fistp
cwde
mov
xor
dec
ja
pop
mov
fs
and
outs
push
out
dec
xor
fldcw
xor
cmc
push
jo
ret
or
xchg
loopne
sub
sbb
adc
inc
pop
mov
pusha
xchg
rol
mov
mov
xchg
(bad)
int
test
mov
xchg
ja
mov
icebp
push
scas
test
push
add
mov
dec
mov
jo
nop
dec
jmp
rcl
mov
xor
xor
pop
lock
jecxz
dec
out
adc
and
pop
cli
popf
(bad)
loopne
push
jb
mov
movs
aaa
jmp
mov
and
push
fistp
xchg
scas
movs
jmp
lahf
adc
xor
xchg
in
outs
int3
test
rol
jl
inc
ins
sbb
das
cmc
cmps
lea
es
(bad)
enter
ins
push
mul
out
pop
mov
fidiv
sub
int
loope
int3
das
(bad)
enter
mov
pop
mov
cdq
mov
adc
loope
jne
stc
and
jns
(bad)
cmp
adc
pextrw
mov
push
in
dec
das
jl
adc
xor
pop
and
mov
inc
cmps
leave
ret
mov
sub
mov
xor
out
movs
inc
out
adc
pop
nop
call
nop
ficomp
ja
cmp
cwde
js
dec
shr
ficomp
add
adc
sub
jno
ror
or
push
inc
bound
mov
or
xchg
cmp
addr16
aas
ror
sbb
mov
cmp
jmp
add
or
jmp
cwde
popf
icebp
jecxz
popf
mov
in
xor
std
push
push
out
sub
out
push
stc
push
int
push
aad
lods
pop
fst
iret
xor
out
jnp
jns
ret
rcr
fwait
adc
dec
pop
add
add
pushf
mov
mov
mov
jne
fiadd
cmp
in
lods
mov
mov
bound
mov
add
jnp
ss
or
dec
loope
sbb
movs
(bad)
nop
push
xchg
dec
and
aad
and
mov
sbb
xchg
fst
mov
pop
call
dec
and
(bad)
push
aas
ins
lahf
arpl
add
paddusb
iret
shr
jle
add
jae
call
pop
cmc
bound
stc
push
loop
fmul
inc
push
jp
inc
inc
sub
mov
xchg
push
gs
xchg
mov
pop
xor
mov
sbb
outs
lods
mov
imul
std
pop
mov
arpl
sbb
out
pop
xchg
push
cmp
ins
cld
stos
fwait
das
(bad)
mov
adc
cmps
adc
xchg
jl
sbb
idiv
test
sar
inc
loopne
addr16
or
(bad)
es
mov
jns
sub
sar
mov
(bad)
or
addr16
xor
sbb
das
xor
scas
enter
xchg
call
ret
in
lds
ror
mov
fild
adc
imul
mov
xor
or
xchg
or
test
fidiv
or
dec
pushf
nop
out
stc
(bad)
mov
sbb
xor
mov
xchg
cs
and
push
test
xor
jecxz
aaa
pushf
call
out
pop
cld
cdq
and
add
movs
and
xor
push
push
adc
in
sub
jecxz
push
mov
mov
xchg
adc
sti
dec
pushf
xchg
stos
sbb
cmps
test
leave
fiadd
icebp
push
cli
dec
sub
add
pop
jmp
popa
and
jo
aas
ins
rcl
inc
xor
mov
fcomip
mov
rcl
jno
ror
(bad)
jns
loop
dec
fdivr
shl
jmp
mov
lock
inc
jle
retf
adc
jmp
shl
xchg
add
in
dec
mov
push
jo
mov
mov
mov
je
mov
inc
inc
(bad)
shr
or
jle
push
sbb
jmp
outs
mov
jns
jns
or
add
sbb
std
jg
jge
or
cmp
js
repnz
loop
jmp
inc
dec
addr16
pop
fdivr
(bad)
popf
outs
sbb
in
add
out
adc
push
inc
xchg
test
push
jo
mov
mov
bound
iret
stc
xchg
cwde
mov
add
adc
mov
xchg
mov
scas
jmp
and
or
pop
jo
neg
pop
jno
fstp
out
xor
imul
mov
sbb
int
leave
imul
xor
test
dec
cmp
retf
std
mov
dec
psubsw
cmp
xor
and
js
mov
pop
(bad)
std
icebp
adc
loopne
fwait
xchg
sub
mov
cmps
into
aaa
ds
cmp
jl
cmp
and
ins
sbb
mov
adc
jle
bound
sub
xor
push
(bad)
iret
add
outs
loope
add
xor
or
xor
ud1
ror
nop
or
aad
sbb
scas
js
mov
cmp
shr
das
push
jmp
jno
or
jno
lods
or
imul
push
push
or
loope
fstp
fisttp
lea
out
outs
cmps
cmp
ss
and
sub
dec
jl
movs
jb
or
mov
clc
mov
jmp
sbb
xchg
das
movs
jp
imul
ins
xor
cmps
call
or
xor
mov
adc
sub
push
ins
loope
sti
jb
push
outs
push
jns
scas
pop
inc
loopne
out
inc
xchg
xor
jnp
div
xor
xchg
sbb
arpl
jle
int
mov
push
pop
mov
sahf
push
cmps
pop
rol
mov
inc
test
sbb
pop
cmp
jo
xchg
dec
ss
aad
jo
pop
outs
lahf
adc
dec
pushf
or
not
cdq
retf
lahf
sub
mov
jae
mov
mov
mov
inc
int
xchg
int
out
pushf
mov
hlt
pushf
dec
cwde
jo
daa
sub
dec
stc
push
clc
xor
std
and
icebp
loop
xchg
sub
lock
inc
adc
das
lds
pushf
lfs
int3
xor
pop
jmp
repnz
xchg
test
pop
jg
xchg
sbb
loop
mov
cmp
inc
out
push
sbb
(bad)
adc
shl
jmp
xchg
(bad)
pop
outs
cli
xchg
loop
xor
outs
mov
dec
or
mov
cmc
bnd
inc
push
xchg
inc
xor
push
in
sub
jge
pop
push
lods
test
test
inc
outs
push
cld
mov
cmp
mov
movs
mov
mov
repz
(bad)
ss
ins
fadd
loopne
xor
adc
es
fsubr
sbb
dec
xchg
aad
cmp
gs
push
(bad)
pop
jb
cld
jmp
(bad)
cmp
jnp
mov
mov
xchg
mov
or
mov
ret
(bad)
fs
xor
dec
aam
jmp
inc
mov
and
retf
dec
out
fstp
test
retf
mov
rcl
shr
push
cmc
jb
xchg
es
rcr
cdq
cmp
xor
ins
xchg
dec
xor
jle
inc
ret
lods
jmp
mov
cmp
data16
inc
sbb
xchg
nop
shl
int
mov
pusha
push
pop
sti
xor
fwait
mov
leave
xor
es
dec
cmc
sub
popf
ss
jmp
std
ins
jae
sbb
out
jmp
popf
not
fimul
popa
inc
sbb
pop
xor
sbb
(bad)
jmp
mov
sti
stos
(bad)
cmp
lea
mov
fisub
or
cld
cmps
jne
mov
mov
fmul
fnsave
add
pop
add
stc
cld
xor
xchg
inc
out
adc
jnp
jg
popf
out
idiv
lock
retf
call
push
jecxz
mov
test
inc
test
std
je
sub
ret
mov
pop
sti
call
call
adc
xor
int
test
pop
xchg
or
fmul
pop
push
jo
es
ins
push
out
scas
push
std
push
in
push
mul
and
shr
sub
xor
jge
mov
push
fsubr
inc
fst
movs
mov
inc
xor
xchg
inc
fnstsw
xlat
cmp
mov
xchg
mov
mov
aaa
push
dec
inc
les
xor
lds
cmp
(bad)
adc
add
and
push
inc
shl
aad
pop
sub
cmp
ror
cld
arpl
leave
cmps
inc
imul
(bad)
iret
icebp
inc
sub
mov
adc
icebp
add
pop
jbe
aam
mov
repz
dec
movs
pop
mov
add
xchg
dec
and
push
out
repnz
les
dec
fidivr
cmc
cs
jb
pop
icebp
mov
jne
fist
stc
dec
fs
mov
jbe
mov
sahf
gs
push
sub
(bad)
and
mov
inc
sub
cs
dec
mov
inc
mov
mov
jns
xor
ins
hlt
push
lea
gs
mov
leave
outs
adc
mov
jge
out
push
xor
pushf
cld
mov
cwde
cdq
pushf
inc
dec
jmp
adc
push
ret
xchg
imul
dec
out
mov
call
std
dec
jns
pushf
pusha
jmp
ret
or
sar
out
or
mov
aam
mov
xchg
cmp
bound
aaa
lock
jb
adc
shl
jp
retf
loope
(bad)
popf
or
push
inc
xor
neg
sbb
xchg
pop
das
jmp
add
mov
push
inc
in
pop
cli
cmp
xchg
call
pop
jmp
inc
ins
test
mov
lahf
jnp
sti
xor
push
jl
les
cmps
fld
jg
xchg
pop
fidivr
add
fmul
pusha
mov
stc
inc
imul
push
cwde
ins
ror
mov
hlt
js
push
repnz
dec
dec
ret
fs
mov
rcr
inc
neg
xor
das
dec
dec
jmp
fld
outs
push
pop
and
adc
jmp
push
clc
fcmovb
mov
fstp
push
(bad)
cli
inc
sbb
mov
into
dec
std
xchg
sbb
mov
imul
mov
cld
fild
cmp
mov
jnp
cwde
push
(bad)
leave
jle
mov
or
dec
(bad)
adc
adc
in
std
bnd
stos
xor
push
inc
pop
mov
cmp
fld
xor
sub
xchg
arpl
sub
jmp
xchg
cwde
mov
and
int
push
add
aas
mov
push
mov
lods
aaa
sub
cli
adc
pop
push
xlat
adc
aaa
inc
enter
into
outs
sbb
jle
ret
jg
or
popf
int3
scas
xchg
jecxz
cwde
and
test
pop
rcr
das
imul
dec
xchg
mov
loopne
xchg
mov
sub
xor
add
push
clc
sbb
scas
mov
mov
adc
mov
mov
cs
sub
lahf
cmp
nop
jmp
cmp
xchg
stos
lds
xchg
xlat
mov
or
sbb
imul
movs
mov
push
pop
retf
mov
jo
into
mov
aad
adc
mov
xchg
and
xor
xchg
das
push
fsub
mov
loop
cdq
or
test
inc
pop
ret
(bad)
(bad)
dec
adc
inc
inc
retf
mov
cmp
sbb
jb
xor
repnz
mov
pop
xchg
rol
pop
pop
fiadd
jp
add
mov
pop
dec
cdq
dec
xlat
into
push
fcomp
in
mov
mov
cli
jp
pop
ins
xor
aam
daa
cwde
mov
pop
cmp
push
dec
mov
jecxz
stc
sti
es
dec
stos
icebp
push
and
dec
mov
mov
sub
or
ds
jge
aaa
dec
sti
inc
pop
aam
sbb
and
add
dec
sub
loopne
outs
enter
pop
mov
pop
lock
leave
cmp
pop
sub
dec
or
cmp
je
js
cmp
loope
ret
loopne
adc
cmp
xchg
xchg
mov
cmc
mov
cmp
sub
int
jne
xchg
dec
mov
sti
mov
shr
imul
sbb
test
adc
ins
cmp
call
enter
ins
ins
push
(bad)
daa
mov
int3
in
arpl
and
mov
mov
ret
test
ins
icebp
test
push
jl
dec
adc
rol
add
push
sar
cli
mov
adc
sahf
cdq
sub
je
addr16
push
cld
mov
sub
movs
dec
push
mov
xor
cli
movs
and
addr16
lahf
pop
mov
hlt
aam
sub
loope
dec
mov
int
js
cmp
and
ror
cmps
add
cdq
in
or
cmp
inc
dec
in
retf
shr
xchg
sub
cmp
mov
cmp
stc
inc
dec
mov
add
outs
inc
jne
and
cwde
mov
shl
xchg
iret
mov
mov
scas
add
pop
and
ins
das
movs
mov
add
int
mov
stc
fmul
mov
pop
dec
pop
and
xchg
(bad)
cmps
cmp
and
xor
pop
(bad)
sahf
loop
lds
movs
loop
ds
and
pop
cmp
shl
fldcw
sti
data16
out
loop
push
pop
or
cs
int3
pop
dec
mov
pop
push
xchg
js
lds
in
xor
sub
cwde
add
jno
pop
fsub
aas
pop
dec
mov
aaa
sub
out
xchg
adc
popf
mov
out
test
add
mov
cs
adc
movs
adc
mov
xchg
icebp
mov
rcr
pushf
outs
jo
push
push
movs
icebp
push
or
leave
mov
out
fisttp
mov
sbb
jg
dec
sti
mov
jle
sub
popf
aam
push
mov
cmc
scas
jbe
sar
out
inc
push
mov
mov
cwde
fs
inc
cli
icebp
mov
push
loope
xor
push
enter
jb
or
push
ins
mov
in
add
jnp
call
or
scas
push
add
xchg
mov
dec
lahf
sub
push
fadd
jmp
sbb
inc
(bad)
sub
fadd
inc
cmp
xchg
retf
xchg
into
sub
std
cli
sub
stos
cmp
xor
xlat
adc
mov
xchg
push
push
inc
in
xchg
fidiv
jmp
mov
sbb
sbb
pop
(bad)
aam
leave
mov
cld
mov
(bad)
fdiv
dec
lods
xor
icebp
(bad)
sahf
jne
jp
popf
dec
mov
aaa
mov
rcl
nop
fs
xor
push
mov
inc
cld
add
xchg
mov
adc
mov
dec
es
(bad)
sub
ja
mov
movs
cmp
pop
mov
vcomisd
xchg
adc
fnstcw
std
push
je
mov
jno
jno
pusha
pop
mov
cli
jl
push
or
and
cmp
dec
enter
aaa
jb
div
aas
jo
push
shr
pop
idiv
test
xchg
xchg
leave
out
fcom
mov
scas
out
push
sub
dec
push
pop
fsub
es
sahf
in
inc
jle
fdivr
data16
xor
aam
push
test
jae
imul
mov
int
dec
or
add
add
cmps
sbb
add
jecxz
daa
cmc
add
fmul
mov
cmc
sub
cmp
call
fmul
jle
in
data16
shl
sub
ja
dec
stos
clc
mov
ja
mov
imul
cli
jne
mov
jno
jmp
(bad)
xor
loopne
cmps
add
stos
and
add
mov
out
shl
pop
ins
mov
mov
cmp
jns
cs
loope
mov
fidivr
faddp
(bad)
sub
lock
inc
push
loopne
push
xor
hlt
sbb
enter
adc
cli
ret
iret
mov
in
ficom
mov
test
sub
dec
push
adc
or
bound
mov
mov
ss
fs
jge
out
ror
mov
imul
into
iret
sbb
dec
(bad)
fimul
test
jbe
xchg
int3
pop
pop
mov
or
les
pop
inc
cmp
push
cmp
adc
loope
dec
test
xlat
push
jg
sub
mov
inc
call
sbb
arpl
mov
imul
(bad)
or
sbb
outs
and
loopne
leave
mov
pop
mov
push
jmp
mov
sbb
jbe
rcr
pop
mov
xchg
fisub
mov
lds
arpl
hlt
pop
mov
test
popf
stc
das
ret
cld
stc
cmp
ins
ret
call
call
sbb
dec
repnz
lods
fst
xor
(bad)
push
(bad)
enter
aad
jbe
sub
push
jae
int
xchg
hlt
push
movs
sbb
push
dec
lds
ja
or
xor
adc
push
sar
not
xchg
fsubp
retf
adc
fild
or
mov
adc
ds
mov
pushf
mov
enter
add
fsub
inc
jle
adc
and
aad
inc
cs
jno
mov
mov
sbb
lock
adc
test
call
sti
repnz
sar
jmp
nop
in
andnps
and
pushf
and
sub
aad
frstor
ret
repnz
daa
mov
aam
jmp
xchg
cdq
aad
mov
cmp
fisttp
outs
add
adc
addr16
je
test
aam
pop
sti
cmp
aad
pop
test
pop
dec
sub
cmp
les
cmp
mov
pop
push
je
push
xchg
cmp
and
push
movs
add
int3
adc
fld
sub
rcr
lock
enter
jp
movs
push
sti
in
pusha
and
pop
push
stos
pop
mov
jne
xor
push
fisubr
mov
jmp
or
sar
retf
ss
(bad)
cmc
stos
retf
outs
xor
adc
lock
out
cmp
cmp
pop
xor
xor
(bad)
mov
pop
in
sub
popa
aad
(bad)
xlat
and
test
push
add
aaa
arpl
in
mov
lods
fisttp
jne
xchg
sub
ret
cmp
ror
jb
jb
jo
fwait
jae
xchg
bound
jne
push
test
dec
movzx
xor
and
pusha
iret
cmp
(bad)
loope
cmc
stc
inc
cdq
repnz
retf
fnstsw
test
sub
push
and
adc
fimul
cmp
mov
xor
jge
cmp
in
mov
jae
cmps
adc
push
xchg
stos
into
arpl
das
mov
inc
scas
mulps
int
push
cmp
scas
outs
ret
mov
aad
js
je
cmps
test
movs
xchg
ret
out
push
adc
outs
popf
push
retf
adc
mov
lds
scas
cmp
ins
push
push
sbb
je
inc
sub
xchg
fimul
test
cmps
cdq
push
into
xor
mov
cli
mov
repnz
mov
pop
jmp
loope
shl
loop
mov
dec
dec
cmp
cmc
ret
mov
sub
inc
inc
outs
push
sbb
mov
imul
mov
ins
iret
aas
jbe
sub
paddq
push
dec
push
adc
inc
movs
int3
loope
sbb
and
push
ins
stos
(bad)
call
ret
xchg
arpl
mov
jnp
jb
and
push
xor
adc
add
push
and
dec
xchg
mov
dec
addr16
imul
test
mov
out
fisttp
sar
nop
inc
sbb
es
bound
movs
dec
xor
sub
rep
add
cmp
ret
int3
call
pop
je
outs
repz
cld
or
pop
(bad)
sahf
hlt
fsub
aaa
cmp
ja
and
sbb
jno
push
jae
adc
and
hlt
(bad)
aam
push
lahf
int
cmp
retf
loop
push
push
ret
inc
jno
and
test
lods
fisubr
(bad)
lods
mov
pop
shl
test
adc
and
call
jmp
pop
(bad)
les
adc
retf
xor
mov
or
sahf
inc
ret
mov
pop
xchg
add
cmc
cli
(bad)
sub
pop
xor
lods
aaa
and
adc
aaa
dec
and
and
movlhps
xchg
rcl
call
push
cmps
std
and
fwait
mov
sahf
sub
push
mov
aam
mov
repz
push
pop
dec
imul
cmp
inc
sub
loopne
cdq
dec
push
inc
push
outs
bound
mov
and
fcomp
and
inc
shl
mov
in
ret
inc
je
xlat
call
push
pop
mov
call
mov
ja
aad
ins
cmps
jb
add
into
mov
dec
pop
cmp
cmp
add
es
pop
push
and
scas
retf
(bad)
cmps
mov
or
or
sti
ja
daa
call
inc
jecxz
mov
arpl
jbe
into
fisub
or
xchg
sub
dec
pop
call
xor
sub
cmp
inc
adc
xor
test
jp
xor
fnstcw
mov
add
shr
(bad)
loope
sbb
lods
scas
xor
pop
out
ds
fdivr
inc
movs
push
xor
inc
adc
xchg
xchg
mov
popf
jp
cmp
icebp
jmp
xor
aas
cdq
cmp
sbb
scas
setno
retf
in
and
loope
push
mov
adc
sub
xor
ss
sar
sbb
mov
sbb
cmp
int3
cdq
or
xchg
mov
movs
jbe
ss
mov
je
push
enter
mov
test
ins
jge
sbb
loope
pop
and
jbe
and
mov
inc
cli
jmp
pop
sbb
int
jmp
ret
add
and
inc
ror
call
mov
mov
pop
push
rcr
sti
aad
inc
push
arpl
mov
pop
jmp
push
mov
das
arpl
int3
mov
(bad)
out
xchg
loope
jmp
xchg
mov
out
int3
add
add
(bad)
in
adc
cwde
pop
cli
out
gs
div
imul
xor
and
stos
inc
leave
mov
clc
mov
jg
inc
ja
stos
or
push
(bad)
sub
pop
inc
mov
xor
ror
arpl
xchg
push
sub
icebp
mov
mov
outs
or
xchg
xchg
mov
jge
in
and
sbb
cld
push
and
fs
jno
inc
pusha
test
out
mov
aam
mov
pusha
fisub
inc
push
jmp
pusha
stos
lahf
imul
sbb
push
add
aam
mov
outs
mov
cmps
inc
leave
mov
out
mov
xor
and
in
adc
mov
dec
xchg
inc
inc
cmovl
adc
das
sub
aas
sub
mul
pop
(bad)
ficom
fimul
dec
cmp
fistp
jecxz
or
push
mov
fst
cmc
xchg
les
adc
mov
neg
popf
inc
enter
xor
add
in
adc
(bad)
lea
icebp
lahf
mov
outs
pushf
dec
dec
jo
das
or
jae
leave
mov
psubd
xchg
or
cmps
add
jmp
push
cwde
clc
ret
dec
mov
mov
scas
(bad)
xor
xor
loopne
aaa
pusha
test
push
mov
inc
rcl
mov
sbb
sti
cmp
cli
nop
push
push
mov
bound
(bad)
inc
aas
int
push
cmp
jo
aaa
xchg
push
push
ja
adc
mov
cdq
cld
mov
dec
lds
jmp
ins
les
imul
cs
out
inc
enter
popf
xchg
mov
rcr
sub
inc
int3
in
into
and
xor
dec
xchg
retf
dec
push
into
sub
sbb
mov
repnz
and
adc
int3
dec
sbb
test
icebp
mov
dec
cld
xor
stos
and
imul
mov
jmp
push
or
add
fiadd
and
inc
hlt
adc
add
(bad)
cmp
jb
loope
mov
sub
into
repz
shl
std
mov
push
sahf
or
mov
jp
cmp
jmp
test
push
pop
mov
xor
mov
movs
sub
and
inc
mov
xor
test
jne
push
retf
pop
add
repz
jge
and
jg
jo
jecxz
daa
push
jb
pop
popf
sub
ins
mov
fincstp
ins
jo
daa
jmp
fcom
xchg
pop
push
sahf
push
ror
aad
dec
and
je
adc
call
clc
icebp
je
jae
adc
out
pop
movs
in
sar
adc
cmp
int3
sbb
xor
jbe
js
fistp
mov
jmp
and
pop
scas
jmp
lahf
mov
call
inc
sahf
ret
xchg
out
inc
cmp
imul
repz
test
fld
clc
jle
lock
outs
jecxz
dec
inc
jne
movs
push
cmps
cmp
pusha
lds
popf
inc
pop
outs
adc
scas
(bad)
or
mov
ror
dec
popa
test
test
push
ret
jbe
mov
popf
pop
fs
cmc
imul
add
inc
(bad)
idiv
loope
ja
jnp
mov
mov
sub
mov
pusha
movs
lahf
loop
lods
cld
popa
adc
scas
dec
les
imul
dec
int
inc
pusha
inc
cmp
mov
xchg
ins
cmps
stc
or
lea
pop
cwde
rol
lods
fdivr
outs
adc
sub
outs
mov
xor
adc
aad
(bad)
out
push
mov
jb
add
mov
jp
xchg
inc
mov
add
mov
mov
sub
inc
xchg
ins
jno
xor
fs
std
add
icebp
jmp
adc
imul
out
mov
imul
in
push
mov
paddsw
mov
xchg
push
loope
dec
push
mov
cmp
jne
jecxz
add
pop
imul
cmp
adc
aad
sbb
xor
lea
bswap
pop
outs
or
sub
jb
inc
rol
mov
push
fcmovu
fst
cdq
xor
cmps
inc
loop
push
idiv
sbb
outs
scas
pop
cdq
mov
jl
popf
icebp
fs
mov
ins
mov
pop
mov
pop
test
aaa
not
push
pushf
mov
out
popa
aam
sbb
push
xor
popf
fisub
lahf
in
sub
pushf
mov
call
adc
ds
jecxz
mov
add
xchg
cwde
(bad)
push
test
enter
call
test
mov
add
and
jmp
iret
mov
rcr
mov
nop
jmp
cwde
fwait
mov
xor
cmps
popf
pop
add
je
fwait
push
inc
push
sub
fisttp
pop
mov
xlat
dec
xchg
pushf
sub
scas
aaa
jno
test
js
xlat
mov
adc
leave
jmp
movs
stos
nop
xor
push
iret
pushf
call
push
fs
cmc
lods
lea
aam
xor
jne
ret
jb
mov
call
loope
(bad)
movs
mov
jno
in
add
(bad)
lock
push
loope
jnp
pop
mov
mov
lods
adc
leave
cli
sbb
push
dec
push
(bad)
iret
push
mov
mov
inc
pop
push
xchg
ja
ffree
sbb
int3
mov
adc
dec
test
jle
sbb
pop
push
pop
push
mov
(bad)
mov
lea
addr16
add
push
loop
xchg
(bad)
xor
xchg
fisub
pop
(bad)
cli
push
shl
rcr
mov
fwait
loopne
push
push
and
jnp
ja
cwde
add
and
xchg
xlat
or
stos
test
dec
int
mov
and
mov
retf
push
mov
mov
cmp
test
cmp
sbb
jmp
cmps
stos
push
addr16
xchg
add
sbb
imul
mov
aas
adc
(bad)
cld
dec
mov
aas
dec
inc
lock
mov
fdiv
push
sub
add
mov
ds
and
in
ret
(bad)
in
dec
inc
cmp
adc
sbb
jecxz
dec
add
cmp
dec
xor
std
cmps
hlt
in
xor
ds
mov
out
sbb
shl
jbe
inc
cs
imul
and
dec
cmp
aaa
(bad)
mov
cmp
inc
(bad)
jbe
dec
add
push
sub
retf
in
jmp
xlat
arpl
inc
cmc
mov
mov
mov
imul
scas
mov
js
add
sub
fiadd
push
ins
cli
inc
(bad)
ds
cmp
movs
sbb
lea
(bad)
(bad)
mov
iret
stos
xchg
xchg
mov
das
fwait
ja
push
shl
mov
fs
lea
ja
sub
es
sbb
push
jmp
outs
dec
dec
mov
push
dec
lea
ins
mov
pop
or
inc
stos
test
jne
outs
mov
enter
jo
aam
repz
lods
aad
shr
xchg
mov
imul
mov
gs
stc
sbb
mov
fidiv
ja
jmp
sub
out
adc
add
fcmovne
sbb
cmp
cs
xchg
ins
dec
xchg
jbe
cmps
push
fild
sbb
push
adc
ss
popa
pop
loop
xlat
(bad)
imul
mov
mov
pop
retf
int
mov
push
(bad)
xchg
cmp
not
out
push
xchg
jno
(bad)
xchg
enter
and
push
fst
out
movs
xchg
sub
call
jbe
and
sub
cmp
enter
ss
es
cdq
jb
int
jmp
loopne
mov
inc
les
and
jge
ficomp
fnsave
std
in
sub
leave
imul
cmp
fldcw
sbb
jg
and
mov
lods
mov
lds
jno
shr
imul
lahf
xor
mov
enter
xchg
mov
xor
cmps
mov
sbb
dec
jb
shl
std
mov
std
fidivr
pushf
pop
mov
push
xor
jge
aas
cmp
lods
mov
jl
sub
mov
shr
in
jge
(bad)
jp
mov
in
ret
ficom
dec
loope
rol
ror
arpl
bnd
repz
bound
push
push
stos
push
adc
cmp
and
out
addr16
mov
(bad)
dec
rol
ja
in
add
movs
add
inc
movs
or
dec
stos
in
pusha
adc
mov
inc
pop
dec
or
inc
(bad)
xchg
dec
mov
pop
fnstsw
int3
adc
das
mov
ins
push
in
sbb
rol
jb
or
pop
imul
jne
fcom
ds
les
rcl
pop
push
inc
retf
push
ret
lock
movs
daa
mov
sbb
out
jnp
repnz
sub
adc
test
mov
mov
ins
test
enter
pop
inc
fiadd
jae
outs
in
push
mov
push
ficom
mov
mov
jns
mov
retf
gs
cmps
mov
fadd
inc
lea
loop
xor
mov
addr16
outs
mov
pop
sbb
push
enter
cmp
mov
stos
dec
xchg
in
xchg
and
call
xor
and
xor
je
xchg
inc
push
or
pop
sti
std
leave
xchg
sti
push
fdiv
sbb
push
cmc
xchg
aad
ins
mov
in
sub
outs
stos
call
popf
and
sub
and
add
xchg
fwait
sub
mov
pop
dec
dec
lea
and
mov
mov
jmp
pop
outs
push
mov
rcr
pop
fadd
call
pop
aad
mov
cmp
push
sbb
dec
xor
xor
out
mov
gs
xor
sub
mov
repnz
fdivp
test
aaa
or
or
nop
aaa
arpl
out
push
idiv
mov
fwait
cmps
mov
jns
lds
or
xchg
cmp
call
sub
repz
in
cmps
cli
ins
out
call
jo
movs
mov
mov
xchg
push
mov
mov
pop
pop
add
jbe
mov
xor
bound
adc
outs
ret
(bad)
jle
mov
inc
std
push
ret
test
into
cmp
scas
clc
pusha
stos
aaa
outs
add
lds
push
imul
mov
(bad)
loop
cmp
pop
lea
add
leave
pop
scas
neg
out
and
sbb
pusha
or
outs
and
dec
inc
sbb
cmp
xchg
jmp
push
xor
and
pop
cs
test
jbe
setl
aas
pushf
cmc
fwait
(bad)
cmps
adc
rcl
and
les
or
mov
cli
es
jecxz
dec
push
or
cmp
jae
sub
jle
mov
in
pushf
aam
and
push
out
cmp
jno
fldenv
in
(bad)
fld
pop
mov
rol
data16
aad
mov
int3
inc
push
sar
outs
cmp
loope
lock
sub
push
inc
aaa
mov
jle
cmp
call
popf
fucomi
scas
fs
hlt
adc
in
xchg
push
sbb
ret
frstor
or
push
xor
pop
sub
sti
les
aad
call
ret
scas
lock
rol
dec
and
js
call
movs
je
or
push
call
aas
(bad)
ja
xor
(bad)
fsub
push
mov
aam
(bad)
stc
sbb
retf
xor
retf
shl
dec
xor
jge
inc
push
ins
out
icebp
cwde
mov
push
clc
repz
adc
mov
(bad)
push
sbb
xor
movs
jo
cmp
push
jne
xchg
push
dec
leave
shr
mov
or
dec
fisttp
jno
lds
sbb
jmp
rcl
mov
sbb
push
mov
movs
js
xchg
ss
imul
cmc
fidivr
and
cwde
popf
ja
sub
or
outs
jnp
clc
in
cmc
or
pop
cmp
data16
stos
add
mov
and
add
pop
jp
push
jecxz
or
bnd
mov
push
xor
push
cmp
jae
xchg
add
mov
popa
jge
ds
fcom
out
jo
cmps
data16
sub
jb
jno
sbb
pop
mov
outs
cmp
pop
aad
iret
scas
jnp
outs
cdq
lar
xchg
cmc
lahf
ds
nop
repnz
dec
jmp
xor
jmp
and
cdq
repz
mov
std
stos
popa
call
out
cwde
jle
out
adc
ret
cmp
mov
mov
sbb
shr
sti
jnp
fmul
jne
adc
inc
xor
das
sbb
jbe
mul
clc
mov
(bad)
mov
fimul
call
imul
jb
push
mov
ins
cmp
fwait
cmp
and
xor
xchg
imul
mov
pop
test
aas
xchg
in
cli
jbe
inc
call
adc
movs
mov
cmp
pop
mov
mov
mov
mov
mov
xchg
ins
jnp
jmp
dec
pop
in
stos
add
cs
jle
out
fsub
jbe
mov
out
add
push
pop
shl
cdq
mov
inc
add
fst
sti
xchg
mov
xchg
adc
(bad)
lds
iret
loope
out
xchg
and
(bad)
xchg
cmp
xchg
mov
rcr
inc
paddusw
xchg
and
cmc
mov
dec
dec
fst
aas
jns
xchg
cmps
pop
out
pop
les
test
dec
(bad)
ret
or
das
push
sbb
cmp
cmp
push
pop
xchg
in
cmp
(bad)
jmp
jle
ja
dec
enter
rcr
adc
jge
into
mov
jno
xlat
aad
les
popf
popa
inc
movs
or
out
add
jb
lods
mov
outs
xor
jecxz
sub
pop
sub
ds
out
pop
push
mov
std
jge
data16
(bad)
adc
cmc
pop
xor
pop
pop
push
ins
fcom
jge
or
jmp
sahf
fmulp
xchg
xchg
(bad)
mov
loopne
sbb
in
pop
jno
inc
div
cmc
mov
iret
aaa
xchg
in
cmp
je
ins
mov
pop
and
mov
lods
inc
loope
push
daa
inc
mov
jbe
xchg
enter
dec
daa
sub
arpl
enter
aad
sbb
jnp
jge
fsubrp
aas
mov
fisttp
cdq
xchg
mov
mov
loope
shr
sbb
fsub
test
sbb
push
xchg
jmp
xor
and
test
int
retf
jmpw
mov
int3
push
cmp
xchg
xor
mov
sahf
mov
ja
mov
pop
sub
mov
cs
mov
stos
out
jns
and
sub
ss
sub
and
out
add
dec
pop
movs
jae
add
inc
mov
xchg
mov
pop
popa
dec
cmp
jbe
xlat
mov
lods
inc
(bad)
dec
cdq
(bad)
out
(bad)
jbe
sbb
call
sbb
mov
repz
in
(bad)
je
movs
stc
mov
fadd
ins
iret
nop
adc
push
jge
jge
lds
push
shl
adc
push
dec
and
fwait
idiv
fisttp
inc
xchg
addr16
push
push
cmp
cmp
xor
lea
mov
push
push
mov
shl
xchg
gs
leave
add
adc
gs
adc
in
je
fild
fistp
inc
cmp
enter
jo
sub
xor
xor
je
jle
mov
popf
or
lods
jno
push
outs
fucom
mov
adc
or
sahf
mov
outs
lea
comiss
stos
mov
sbb
inc
outs
inc
adc
ret
cmp
lea
jo
dec
and
adc
(bad)
fist
shl
push
adc
adc
mov
xchg
in
mov
mov
xor
pop
hlt
outs
pusha
test
popa
or
fwait
push
cld
mov
pop
inc
adc
mov
repnz
stos
out
dec
hlt
imul
sbb
gs
adc
push
fbld
mov
stc
jae
addr16
push
xchg
ret
iret
mov
jmp
jbe
or
mov
je
pusha
xchg
jmp
stos
jbe
es
inc
xor
push
mov
push
iret
sbb
adc
mov
mov
push
jne
pop
jb
cmp
(bad)
push
int3
jns
lods
dec
jo
mov
push
cmps
ret
jg
enter
das
dec
je
dec
sub
aaa
es
push
mov
cmp
dec
retf
inc
or
ds
fbstp
or
pop
out
cmps
retf
mov
mov
and
sti
mov
into
mov
or
rol
mov
xchg
xor
outs
jne
dec
stc
popf
lock
sar
lods
cmp
xor
scas
pop
dec
or
push
cwde
jne
pop
cmps
into
xchg
mov
stc
sbb
dec
mov
xor
fnstenv
mov
stc
inc
sbb
or
cmps
mov
mov
stc
add
inc
jae
mov
ins
push
jb
std
push
pop
stos
cld
in
jp
jns
mov
xchg
fwait
cmp
push
js
dec
push
bound
(bad)
add
xlat
xor
or
jnp
sar
sbb
mov
rcl
imul
(bad)
stc
jg
jb
inc
add
inc
call
sbb
in
push
ror
sbb
cmps
jge
mov
xchg
or
push
mov
push
inc
cli
fistp
fst
lahf
loop
les
pop
lock
jl
push
mov
and
hlt
or
leave
sahf
sbb
or
fild
mov
and
cdq
faddp
push
mul
retf
inc
fidiv
shl
jecxz
cdq
xor
test
mov
push
jge
mov
out
add
inc
sub
jns
(bad)
and
shl
xor
jle
add
sbb
lds
out
jl
fbstp
aam
iret
repz
(bad)
mov
in
fistp
mov
out
xor
fcomip
in
push
push
(bad)
loopne
mov
(bad)
jno
mov
loopne
lods
and
dec
mov
jg
dec
dec
mov
xchg
mov
loope
mov
jmp
jl
inc
cli
xchg
jl
(bad)
(bad)
clc
aam
ins
push
add
and
xchg
xchg
mov
jnp
or
dec
pop
jae
dec
and
imul
mov
cld
pop
mov
mov
or
pop
dec
cmp
lods
inc
push
cli
aad
or
fwait
movs
stc
adc
jmp
xor
cli
inc
enter
in
mov
clc
das
sti
in
adc
bound
sahf
jo
xchg
bound
fwait
xchg
sub
cmp
shr
and
(bad)
sbb
jp
cdq
jg
inc
into
xor
(bad)
bound
sbb
bound
retf
nop
pop
sahf
pop
stc
push
sbb
add
push
cld
dec
pop
xlat
mov
cs
(bad)
retf
mov
dec
and
lea
inc
std
cmp
call
out
pop
test
push
ss
adc
mov
xchg
jp
movs
(bad)
and
jle
xor
rcl
push
sar
ss
sbb
(bad)
jb
(bad)
fcom
sub
add
push
daa
std
xor
fld
xlat
jecxz
ja
sub
icebp
xor
shl
imul
mov
push
or
xor
mov
inc
xor
add
arpl
sbb
dec
mov
xchg
cmp
icebp
inc
loope
mov
popf
sbb
sbb
mov
add
(bad)
out
mov
mov
jg
add
jecxz
mov
pop
push
adc
jmp
fmul
les
js
ds
or
cmps
out
jle
pop
xor
sbb
fild
stc
lods
ret
dec
jns
(bad)
es
ret
aaa
xchg
and
add
cwde
mov
dec
or
rcl
imul
fcomp
fwait
jne
fcomp
mov
mov
vmovq
jnp
or
jg
popa
push
jns
inc
test
std
mov
jge
rcr
xor
lods
je
loopne
push
neg
mov
and
fisubr
lods
mov
les
jns
cmp
cmc
mov
or
pop
mov
loopne
pop
push
ss
int
js
dec
jno
add
popa
and
(bad)
shl
xor
jne
add
and
scas
scas
jns
int3
out
in
xchg
addr16
push
out
xchg
push
adc
xor
and
in
ins
in
and
fcomp
cmp
inc
ins
pop
xchg
mov
fwait
xchg
lea
dec
dec
sbb
fdiv
inc
nop
lods
xchg
repnz
xchg
mov
mov
sahf
pusha
mov
icebp
out
mov
not
aam
cmp
and
int3
test
ins
mov
scas
fbld
inc
in
sub
or
enter
mov
pop
into
xor
cdq
inc
retf
pop
push
pushf
enter
pushf
mov
push
out
mov
test
jl
jbe
sub
xchg
int3
jbe
jo
movs
sub
mov
cmps
sbb
dec
lahf
cmp
xor
fwait
mov
inc
add
jno
bound
sbb
mov
or
mov
fdivr
aas
push
inc
repz
sub
call
or
dec
add
cmp
jg
nop
jne
int3
mov
xchg
(bad)
jl
adc
(bad)
gs
adc
pop
jle
push
out
cmc
addr16
push
xor
les
loope
xchg
ret
mov
jbe
pop
push
loopne
stos
inc
daa
cmp
icebp
sbb
outs
cs
inc
popa
adc
data16
sahf
aas
ss
stc
stos
in
xchg
sbb
xchg
test
push
retf
cdq
je
imul
out
jle
fisubr
lock
outs
adc
fwait
pop
mov
addr16
je
inc
imul
push
hlt
sub
dec
outs
add
push
inc
and
rcr
mov
mov
hlt
adc
in
call
cmc
fistp
stc
jns
xchg
or
scas
loopne
aad
dec
xchg
scas
nop
xlat
jmp
shl
dec
je
scas
adc
aaa
enter
and
jmp
call
jg
(bad)
pop
ins
pushf
movs
imul
xacquire
sar
pushf
xor
loopne
fist
sbb
fisubr
mov
dec
gs
fisttp
aas
in
pop
xchg
sub
call
mov
xor
in
imul
lea
push
mov
mov
jne
and
sbb
push
sbb
xchg
jnp
lods
mov
fcom
pop
inc
fidivr
xchg
lahf
mov
sbb
xchg
pop
mov
sbb
jmp
(bad)
cwde
sti
adc
repnz
iret
cld
xchg
in
xor
idiv
xor
(bad)
jno
xlat
push
in
(bad)
sahf
loopne
pop
in
pop
fsubr
pop
inc
addr16
stos
add
mov
add
mov
inc
mov
dec
add
mov
xlat
int3
aad
mov
cmp
das
ja
cmp
les
xchg
push
jo
xchg
mov
mov
xor
shl
push
adc
sbb
fwait
sbb
shr
mov
and
add
jne
dec
jmp
inc
stos
xor
mov
add
sti
jne
int3
adc
push
xchg
cli
mov
jmp
loop
scas
jecxz
jg
(bad)
ror
aam
pop
xchg
loop
addr16
mov
stos
out
xchg
int3
jg
mov
cwde
das
jg
jne
inc
mov
imul
addr16
ins
push
push
mov
jae
mov
fidiv
ret
dec
and
jbe
movs
sqrtps
xor
stos
adc
mov
mov
mov
adc
dec
dec
dec
mov
mov
mov
js
push
adc
dec
pop
fwait
jle
jbe
jb
cmp
sub
and
(bad)
pop
lods
push
jp
xlat
sbb
pop
xchg
std
push
loope
(bad)
add
pop
sub
dec
retf
cmp
test
jne
push
mov
or
lock
lahf
call
fist
stc
es
clc
push
add
loopne
add
cmp
gs
or
pop
or
push
adc
inc
repz
add
fcom
stc
lds
or
(bad)
(bad)
call
out
sbb
movs
push
mov
(bad)
int
jb
or
xor
and
push
sub
pop
mov
pushf
add
leave
add
test
jmp
shl
jb
aas
sub
mov
pop
es
hlt
xchg
sub
rcr
inc
fs
xchg
into
push
retf
loopne
rol
and
pop
adc
jmp
inc
xchg
(bad)
jmp
test
fld
jne
xchg
inc
inc
imul
popf
push
sub
stos
out
and
fs
cmc
xchg
cwde
(bad)
jmp
movs
leave
outs
idiv
movs
pop
or
mov
xlat
mov
out
add
enter
daa
push
push
pop
mov
push
push
test
shr
sub
cmp
mov
aaa
adc
std
lods
mov
ins
out
sbb
xchg
clc
and
add
mov
out
shr
das
dec
in
push
xor
call
cld
retf
jb
cmp
pushf
adc
xchg
popa
movs
jg
mov
and
retf
cmps
mov
jmp
movs
retf
push
clc
stos
cmc
rol
shl
stos
or
out
add
jmp
jle
xor
mov
retf
push
(bad)
mov
pop
and
gs
mov
lock
scas
bound
xchg
jp
push
xor
adc
mov
or
test
cdq
mov
dec
xor
or
fdivr
sub
sti
cmp
add
or
(bad)
xchg
mov
out
pushf
mov
daa
add
dec
pop
sbb
leave
out
repnz
dec
mov
sti
jp
pop
push
pop
adc
inc
out
xchg
xor
popf
jg
popa
push
xchg
add
jbe
cmp
cmp
sbb
iret
sahf
inc
cli
ds
ret
mov
jb
popa
jb
dec
scas
dec
mov
mov
mov
sbb
adc
push
jecxz
cmp
cwde
mov
repz
dec
clc
push
jbe
inc
dec
into
dec
out
pop
sahf
mov
aaa
jne
icebp
add
sbb
jns
adc
mov
fwait
inc
je
inc
inc
jmp
xchg
xchg
int3
dec
mov
inc
or
pop
mov
in
call
lahf
adc
inc
(bad)
outs
sub
push
pop
sbb
(bad)
jge
lahf
or
mul
shl
xor
lods
adc
mov
aam
mov
xchg
lock
lods
shl
fbld
push
sbb
out
mov
xchg
xor
aad
mov
mov
sar
xor
nop
cmp
xchg
test
mov
shl
add
ficomp
add
ret
call
mov
cmp
cmp
jg
sti
xchg
cld
arpl
jb
sbb
ins
fs
out
cmp
mov
outs
and
je
sub
xor
fstp
cwde
mov
ins
pop
shl
and
mov
sbb
jne
push
into
ins
xchg
(bad)
repz
sbb
dec
jnp
dec
out
lock
mov
mov
ja
push
mov
stos
iret
inc
mov
lock
fwait
add
repz
sbb
je
test
enter
(bad)
fist
fs
pop
jmp
jmp
dec
test
sub
jg
arpl
fiadd
fwait
sbb
bound
in
cmc
cmp
fcom
(bad)
popa
adc
stc
and
xor
hlt
pop
cmps
pusha
dec
int
fnstsw
jmp
and
in
mov
sti
lock
adc
es
mov
(bad)
gs
xchg
mov
enter
or
std
pop
inc
add
stc
and
ss
xchg
xor
sahf
add
nop
push
and
mov
and
ds
mov
mov
jmp
es
scas
jmp
and
mov
repz
loopne
mov
repz
sbb
jecxz
push
mov
or
mov
loope
or
loopne
pop
loope
xchg
pop
push
pop
xor
and
xchg
das
pop
push
push
pop
rep
sub
cmp
push
movlps
dec
sub
rcl
je
cmps
imul
pop
add
enter
mov
fs
stos
jo
int
xor
and
pop
inc
retf
ins
std
inc
in
gs
mov
or
je
pusha
adc
pop
lea
push
push
fist
push
fld
test
adc
popa
sub
retf
adc
iret
and
or
dec
cli
dec
and
cwde
repnz
jbe
push
pop
adc
mov
gs
dec
xor
cmp
xchg
dec
mov
fwait
data16
jmp
sbb
dec
add
in
call
fdivr
xchg
shl
pop
push
mov
movsx
cmp
fstp
jle
jle
cld
pop
(bad)
test
cmp
out
icebp
cmps
cmp
jp
pop
mov
inc
add
xchg
js
xor
dec
cld
cmp
into
popa
leave
mov
pusha
cmp
nop
pusha
or
test
mov
sbb
jmp
sub
fmul
push
call
or
jbe
jmp
pop
dec
cs
adc
test
movs
(bad)
or
retf
repz
xor
js
in
aas
dec
(bad)
push
test
in
pop
mov
(bad)
adc
cmc
cmp
(bad)
push
pop
nop
outs
mov
in
(bad)
movs
js
ins
mov
push
iret
fs
std
mov
mov
aaa
jge
add
adc
or
jbe
sbb
aaa
gs
pop
mov
out
cmps
add
sahf
js
(bad)
fst
clc
xchg
mov
inc
mov
scas
js
daa
inc
and
dec
mov
inc
mov
inc
iret
sar
lock
je
in
in
dec
inc
mov
sahf
xchg
xor
sbb
pop
xor
jge
dec
je
loopne
jp
xchg
mov
add
pusha
fsub
or
adc
adc
inc
jns
xor
(bad)
mov
test
repnz
push
add
xchg
iret
imul
push
retf
cmp
shr
fcmovbe
std
adc
adc
cwde
aad
adc
xchg
push
add
inc
or
push
xor
pop
or
jo
test
add
jbe
jnp
aam
aas
retf
lock
movs
ins
jle
nop
retf
adc
dec
cld
sar
sbb
mov
fs
(bad)
ins
mov
inc
mov
jae
and
push
add
dec
xchg
pusha
pop
out
mov
int3
popf
cmp
ja
outs
xor
cmps
in
rcr
bound
enter
clc
jecxz
jbe
add
or
sti
test
out
inc
inc
jg
cmp
sub
pop
or
jp
pop
and
adc
xchg
xchg
add
imul
push
int3
frstorw
jmp
cwde
icebp
int
inc
inc
jp
and
sub
inc
push
inc
dec
push
mov
in
jle
std
or
test
or
cmps
jns
jp
dec
push
and
sub
add
adc
dec
rcr
xchg
sub
rol
jmp
mov
outs
jb
inc
add
pusha
mov
jns
jo
out
sbb
mov
xchg
outs
es
mov
jnp
pop
jmp
mov
in
ffree
mov
inc
xchg
jmp
add
push
push
jno
push
faddp
xchg
sub
into
jmp
test
add
mov
repnz
add
loop
and
jae
adc
push
and
push
lds
dec
mov
clc
arpl
mov
nop
sub
addr16
inc
retf
ds
ja
lods
sub
retf
popf
out
in
add
fdivr
cmp
mov
inc
and
addr16
scas
or
xchg
mov
lock
shr
jmp
cmp
mov
pusha
ror
dec
in
fmul
push
adc
mov
sbb
add
jns
xor
sub
jecxz
mov
jmp
mov
ins
fist
push
or
(bad)
ss
push
pop
sbb
cs
outs
(bad)
out
scas
lods
cmps
das
cmp
mov
jbe
jbe
out
mov
mov
sbb
jns
inc
add
cmps
mov
outs
mov
inc
shr
xor
xor
and
les
jecxz
pop
lahf
repnz
movs
push
push
fidiv
mov
mov
fldenv
cmps
shr
jmp
add
mov
and
xadd
leave
dec
shl
leave
add
(bad)
adc
(bad)
test
cmp
adc
lods
adc
jo
neg
call
stc
push
(bad)
jno
push
sub
cmp
ja
or
mov
adc
sbb
sbb
retf
enter
mul
movs
mov
xor
aad
aaa
std
xchg
mov
dec
rcr
fdivr
sub
push
pop
mov
rcr
or
dec
popf
inc
add
adc
test
out
push
(bad)
sbb
add
cmp
icebp
aam
mov
es
pop
imul
out
mov
jl
(bad)
cwde
in
stc
mov
stos
ret
pop
adc
jae
add
daa
mov
iret
dec
jno
pop
xchg
into
cmp
test
addr16
mov
(bad)
ss
pop
mov
push
jo
stos
int3
scas
mov
pop
xchg
shl
icebp
popa
pushf
mov
dec
mov
loop
dec
ja
sub
fs
add
mov
bswap
cmp
xor
push
push
add
push
push
mov
aaa
aas
add
cmp
sbb
sahf
adc
(bad)
lods
hlt
repz
cmps
mov
es
xchg
xchg
lods
stos
into
cmps
dec
push
sbb
inc
popf
dec
sub
xor
sub
pop
stos
cmp
add
(bad)
mov
pop
iret
jecxz
or
out
fcom
clc
aad
and
inc
in
ficomp
xchg
outs
popa
mov
adc
or
lahf
(bad)
iret
mov
jns
fdivrp
in
mov
mov
sub
mov
fs
xchg
sub
mov
xchg
scas
jae
add
pop
push
dec
xchg
xor
adc
out
ins
mov
test
int
sbb
inc
dec
sahf
or
xchg
shl
mov
gs
pop
adc
(bad)
ins
(bad)
mov
xchg
test
push
and
pop
dec
ja
add
sub
mov
dec
into
clc
dec
dec
(bad)
scas
xchg
mov
cmp
repz
xchg
inc
ficom
pop
jbe
mov
cmp
mov
xor
jne
and
shl
in
ja
rcl
jbe
sub
mov
add
sub
int3
hlt
dec
aaa
das
sbb
push
xchg
add
cmps
or
hlt
out
rcl
xor
fbstp
or
xor
sbb
inc
mov
pusha
fist
sbb
outs
mov
enter
imul
or
sbb
hlt
xlat
adc
or
dec
fadd
push
cli
dec
addr16
mov
add
xchg
mov
jne
adc
and
xor
fidiv
cmp
cmps
push
mov
and
retf
aaa
jecxz
push
xchg
jno
or
sub
dec
pop
xchg
mov
ret
cmp
add
pop
test
es
xlat
or
nop
imul
mov
stos
dec
xchg
retf
fidivr
int3
lods
(bad)
mov
mov
xchg
pop
retf
mov
or
out
or
push
ins
fmul
jne
jae
idiv
pop
pop
xchg
xor
jle
jns
inc
xor
sub
jg
in
mov
pop
mov
cmps
inc
xchg
mov
fs
push
cld
retf
mov
mov
mov
(bad)
jecxz
fnstenv
add
jl
and
mov
mov
mov
js
(bad)
pop
pop
in
push
shl
dec
jne
leave
(bad)
mov
cmps
xchg
or
sub
mov
and
pop
icebp
jp
loop
sar
mov
out
lds
or
push
cdq
xor
or
mov
rcr
sub
fcmovb
push
mov
add
cli
mov
in
in
es
jne
fwait
cmp
std
inc
pop
bound
std
sub
lods
div
sahf
psadbw
mov
jl
xor
das
mov
mov
add
(bad)
dec
out
or
mov
das
mov
addr16
xchg
sbb
adc
dec
ret
adc
cmp
pop
mov
ret
xor
and
mov
(bad)
add
popa
jmp
xchg
sbb
rol
cdq
inc
jnp
dec
mov
pop
jne
sbb
inc
xchg
sti
cmp
fcomp
or
push
or
jp
popa
sahf
mov
push
or
and
ja
sbb
mov
rol
or
cmp
mov
dec
xlat
div
sbb
sub
mov
fdiv
lods
mov
nop
inc
push
aaa
pop
leave
sub
fwait
test
(bad)
jae
cld
sub
add
lock
rol
push
dec
enter
ficom
aam
cmps
jmp
mov
call
xor
xor
sbb
jmp
arpl
repnz
jns
lods
mov
outs
mov
stc
sbb
xchg
push
inc
jle
mov
in
cdq
cdq
pop
sbb
movs
sbb
inc
addr16
mov
in
push
inc
fwait
xlat
std
shl
jae
jb
(bad)
sub
xor
mov
mov
nop
fstp
pusha
vphaddbq
adc
orps
aam
das
cmp
fstp
inc
or
mov
popa
in
or
out
sub
ret
sar
push
sbb
(bad)
mov
hlt
cmp
jo
xor
cmp
stos
jg
jne
jle
stos
fidivr
push
lods
iret
out
fwait
add
sbb
xor
popf
xor
lods
inc
jbe
sbb
out
fs
xlat
shl
dec
outs
sbb
adc
xor
jmp
jns
aaa
jne
out
inc
cmp
test
jmp
push
fcomi
outs
jae
add
jle
push
mov
imul
jne
repz
repnz
xor
or
(bad)
xor
std
mov
xlat
lds
adc
mov
xchg
xchg
ret
pand
pop
xlat
movs
jno
cdq
ins
scas
in
dec
arpl
mov
jmp
add
push
scas
pop
(bad)
movs
mov
arpl
out
xchg
loopne
cmc
repz
stos
lods
mov
stc
loop
fild
retf
std
call
mov
or
les
pop
stos
pusha
jmp
xor
or
sar
movs
sub
jbe
pop
clc
pop
das
aad
jge
fwait
iret
mov
test
pop
mov
test
jo
(bad)
enter
adc
xchg
pusha
cmp
imul
sbb
push
es
iret
std
xchg
stos
test
cmp
imul
(bad)
out
inc
sbb
jmp
xchg
sbb
xlat
add
(bad)
test
out
jge
jmp
loopne
(bad)
jns
fnstsw
js
or
sbb
std
imul
fwait
stos
ss
push
inc
hlt
or
jnp
mov
ds
mov
adc
aas
repz
jns
jne
fild
cmp
push
addr16
les
je
lea
enter
out
sbb
sysenter
ud2
popf
mov
sub
js
adc
cmc
mov
pop
pusha
and
cdq
rol
adc
fidivr
shl
xor
xor
test
or
mov
mov
imul
adc
aad
mov
mov
or
or
or
int3
lea
jb
sub
sar
ds
mov
mov
addr16
gs
add
fcomp
adc
(bad)
pop
add
mov
call
pop
leave
aam
fsubr
test
or
addr16
popa
cmp
jo
fwait
jb
fldenv
fnstenv
sbb
lock
xchg
inc
lods
repnz
sar
push
out
retf
aad
add
sub
cmp
cld
mov
fcomi
cld
fdivrp
sbb
or
mov
data16
push
idiv
dec
jns
push
and
push
jl
les
leave
stos
fdiv
cmc
or
push
imul
jo
mov
add
mov
push
xor
mov
adc
(bad)
jp
mov
ret
dec
mov
call
(bad)
scas
mov
bound
dec
and
inc
icebp
lahf
pop
aad
mov
ficomp
je
or
mov
pop
mov
das
in
(bad)
sahf
cmp
pop
jns
xor
mov
loop
push
lds
jnp
jle
adc
xor
sbb
fiadd
test
stos
adc
pop
sti
int
push
aaa
lds
mov
loope
scas
ror
push
mov
call
stos
fsub
ror
je
movs
pop
xchg
rcl
cwde
or
xor
cmp
cld
call
push
xor
sbb
mov
lods
add
repnz
xchg
outs
xchg
lock
mov
pop
xchg
jl
cmc
xor
in
les
mov
jge
(bad)
pop
rcr
adc
mov
xchg
dec
cmp
jge
xchg
sub
cmp
rcl
aaa
call
sbb
jp
(bad)
nop
(bad)
fcom
loopne
lods
dec
xor
ja
arpl
jmp
xchg
test
mov
ret
loop
dec
pop
add
jmp
sbb
xor
sub
aas
mov
dec
pop
inc
xor
arpl
sub
pusha
pop
std
fsub
hlt
(bad)
pop
jg
bound
(bad)
cmp
mov
xor
addr16
push
cmps
addr16
xchg
xchg
bound
stos
or
mov
inc
mov
popf
sub
pop
movs
jbe
mov
sbb
(bad)
mov
cs
push
loopne
out
mov
loopne
ror
pop
add
dec
mov
jle
(bad)
mov
push
pop
add
pusha
movs
mov
and
ins
sub
retf
pop
jle
(bad)
cmp
fcom
push
or
push
int3
(bad)
movs
inc
xchg
add
jo
dec
repz
cmp
mov
mov
or
in
jae
mov
xchg
aad
mov
test
out
sar
in
jno
aam
sti
imul
and
cmp
and
inc
jno
cs
jbe
aad
mov
sti
ins
aas
mov
fadd
and
mov
sub
in
adc
adc
pop
dec
jne
pusha
sub
fxch
inc
mov
add
xor
call
adc
xchg
aam
mov
push
or
xor
out
push
add
push
mov
jbe
adc
movs
popa
mov
fwait
xchg
cld
xchg
ret
ss
sub
xor
dec
test
stos
xchg
mov
cli
sub
or
ja
sbb
clc
jnp
or
pop
aam
jecxz
fsub
xchg
jecxz
mov
sub
in
adc
jge
sbb
shl
hlt
ins
add
xchg
popf
push
fist
xchg
sbb
retf
mov
movs
mov
bound
int3
push
in
jge
test
(bad)
dec
push
iret
int3
(bad)
stc
gs
loop
xchg
ret
(bad)
xor
out
sub
xchg
pusha
in
ja
imul
push
adc
xor
jge
sbb
std
push
out
cwde
mov
mov
or
dec
jns
xor
cs
pop
ret
sub
jmp
mov
sbb
xlat
jecxz
(bad)
jne
push
dec
mov
pop
jg
add
jmp
loopne
inc
into
adc
mov
fidiv
cwde
pop
outs
xchg
xchg
cld
mov
sbb
cmc
mov
ds
adc
xor
cmp
lods
dec
(bad)
daa
xchg
mov
sti
(bad)
rcr
and
xchg
fsub
and
or
fwait
ret
jmp
daa
jbe
inc
std
dec
mov
daa
jae
stos
test
fs
jecxz
rcr
(bad)
pop
cmc
bound
adc
xor
rol
fld
cdq
cli
xchg
inc
(bad)
sbb
mov
sbb
cmp
jp
and
dec
movs
xchg
dec
add
stc
sar
aad
repz
(bad)
imul
or
fdiv
in
imul
mov
push
and
ds
jno
xchg
das
int
lods
xchg
add
sbb
mov
lock
lock
sub
popf
lods
movs
arpl
xor
test
ficom
pusha
pop
cdq
xchg
or
mov
call
mov
sub
out
test
push
adc
dec
xor
xchg
jp
and
fs
cdq
add
jge
adc
jecxz
sbb
xor
lock
test
mov
retf
rol
outs
mov
inc
push
jg
out
jmp
inc
xchg
data16
hlt
add
(bad)
dec
jne
jae
pop
push
add
cmp
aas
addr16
sub
push
jle
(bad)
int3
xor
test
aad
or
add
repz
pop
sahf
pop
inc
dec
mov
xchg
push
iret
cmps
xchg
mov
les
cmovbe
push
xchg
jle
lea
ret
add
cmps
cmp
dec
pop
mov
pop
jmp
loop
rcr
rcr
cmps
scas
xlat
fisub
psrld
test
xchg
jno
adc
pop
les
ror
cmp
(bad)
stc
dec
ret
scas
pusha
cmp
movs
adc
arpl
dec
outs
sub
or
and
aaa
fst
clc
sbb
mov
loopne
repz
xlat
lods
ret
test
pop
addr16
mov
mov
xchg
or
ds
les
fwait
pop
or
xlat
sbb
outs
retf
es
fucom
adc
or
mov
xchg
in
push
pop
inc
fild
into
scas
cmps
xor
outs
and
loopne
stc
inc
dec
imul
jns
mov
popa
scas
fadd
mov
dec
xchg
mov
ret
xchg
inc
mov
jp
add
mov
pusha
loope
xchg
addr16
std
loop
jno
add
in
jmp
push
push
xchg
mov
xor
sti
int
hlt
popa
inc
sbb
loop
cdq
les
xor
fnstcw
cmp
dec
movs
inc
in
scas
and
aad
xor
pop
cmc
jnp
adc
sub
daa
dec
outs
mov
push
add
add
data16
sub
push
shl
out
mov
push
arpl
push
mov
sbb
int
sbb
lds
xchg
mov
mov
adc
mov
inc
inc
xor
jmp
mov
dec
pop
cmp
pusha
ja
leave
pop
mov
or
xchg
mov
cdq
dec
push
pushf
out
arpl
add
ins
push
stos
sub
dec
push
add
add
lds
push
lahf
add
fnstenv
inc
dec
popf
shr
dec
arpl
mov
fidivr
jo
adc
stos
pop
repnz
stos
or
mov
and
or
int
sub
fwait
xor
rol
jge
inc
jg
popf
and
push
daa
popf
and
push
xchg
pop
mov
cmp
movs
mov
or
inc
ins
push
out
in
and
popa
dec
repnz
std
es
or
shl
and
and
add
push
ficom
add
cmc
ficomp
xor
cs
push
out
(bad)
test
adc
lods
xchg
push
jne
xlat
push
std
into
jnp
in
push
fisub
jb
push
or
movs
push
and
lods
cmp
sbb
in
popa
es
cmps
xor
fwait
(bad)
fsub
push
call
xor
pop
pop
popf
retf
fisubr
mov
(bad)
ds
daa
dec
xchg
or
test
dec
pop
(bad)
gs
mov
loope
in
jmp
xor
aaa
jnp
(bad)
shr
adc
ins
call
icebp
jb
add
fnstenv
jnp
retf
adc
push
outs
mov
mov
or
inc
xor
cli
or
jmp
sub
mov
int
or
jbe
mov
jg
retf
push
cld
cmps
into
or
aas
xchg
mov
leave
and
mov
xchg
pop
mov
outs
fld
lock
sub
xor
inc
xor
xor
aas
out
xor
jecxz
clc
or
sub
push
jno
push
lea
(bad)
daa
fs
out
pop
add
xor
xor
stos
lds
loopne
pop
mov
jb
jno
sub
jbe
cmp
xchg
push
call
mov
js
mov
repz
pop
xlat
sti
(bad)
push
push
cmps
fcom
xor
mov
and
lds
xchg
adc
sub
test
cmp
dec
pop
mov
ins
adc
jno
push
mov
pop
fist
ret
std
mov
mov
pop
and
daa
js
sub
or
(bad)
(bad)
jnp
sbb
jne
fistp
test
xchg
(bad)
test
mov
sub
jb
ss
xchg
out
stc
cmp
es
retf
lods
stos
fdivr
mov
adc
mov
sbb
dec
mov
lods
int
push
and
mov
inc
pop
cwde
fidivr
je
push
dec
dec
xchg
jl
pop
or
rcl
mov
mov
imul
pop
lods
popf
ss
int3
inc
fwait
loope
gs
pop
xchg
mov
mov
(bad)
inc
ins
dec
pop
pop
add
fnsave
jbe
icebp
add
add
les
nop
or
scas
and
dec
cs
jle
popf
outs
inc
adc
xor
call
adc
in
dec
adc
inc
cli
or
push
aas
adc
jnp
ja
fidivr
imul
jb
loop
jne
shr
cdq
inc
pushf
mov
stc
call
cwde
push
js
sub
add
sbb
push
popa
xchg
retfw
dec
and
mov
xchg
leave
pop
xchg
lods
cs
xchg
pop
(bad)
(bad)
mov
loopne
std
adc
jns
mov
mov
add
lahf
fdiv
push
push
pop
xor
jne
adc
gs
(bad)
test
jp
fs
cmp
or
aaa
stos
push
sbb
push
jmp
dec
lds
inc
scas
cli
push
lods
inc
adc
cmp
sub
fs
jne
sbb
(bad)
(bad)
rcl
retf
je
push
adc
cdq
ds
ror
(bad)
and
mov
adc
jnp
add
mov
and
in
jnp
int3
and
jmp
call
dec
and
adc
neg
jg
inc
add
inc
mov
in
or
dec
cmps
scas
mov
pushf
ss
jg
in
jns
test
cmp
sub
mov
mov
(bad)
and
loope
add
push
cmp
push
stc
lea
cmp
sub
fisub
mov
pop
pop
call
pop
inc
(bad)
push
push
arpl
mov
jecxz
stc
fdivr
mov
xchg
dec
sar
mov
jbe
imul
pop
mov
xchg
mov
in
jle
inc
scas
pop
pop
adc
xor
pop
mov
lds
mov
(bad)
(bad)
mov
xchg
add
outs
(bad)
jno
sub
cmp
sub
les
cli
push
jb
push
ror
inc
xchg
aam
xchg
jns
cdq
inc
or
ins
aas
pop
mov
mov
in
push
and
add
je
sub
in
add
cmps
xor
sbb
out
mov
or
mov
in
loop
pop
(bad)
rcr
or
in
in
xlat
jbe
pop
xor
lods
inc
dec
cmp
dec
or
xchg
push
cdq
loope
call
add
int
ins
enter
or
xor
retf
call
jmp
pop
pushf
test
in
mov
xchg
xor
out
jge
or
dec
mov
fst
loope
mov
adc
nop
sub
gs
jmp
add
mov
mov
mov
stc
mov
and
popf
rcl
inc
xchg
jmp
(bad)
sbb
mov
push
dec
jle
cs
adc
stos
add
jge
mov
and
jg
mov
shr
push
dec
repz
cmp
in
cmp
test
xchg
clc
int3
xor
rcr
mov
hlt
cmp
cli
ret
inc
jo
jnp
xchg
dec
cmps
jge
or
cmp
xor
inc
iret
push
in
mov
dec
dec
mov
(bad)
xlat
pop
sbb
jmp
call
adc
adc
aas
mov
sar
ins
inc
pop
(bad)
adc
sbb
mov
add
inc
dec
out
inc
pop
imul
loope
imul
retf
dec
jp
push
xor
addr16
mov
push
xchg
popa
jmp
test
mov
xor
int
in
fadd
adc
and
daa
enter
scas
dec
pop
in
jge
mov
rcl
stos
jecxz
push
jle
ds
sub
jp
jmp
or
shl
cmp
cmp
xor
ins
sub
xor
stc
or
add
push
and
addr16
lods
neg
adc
das
pop
jmp
and
out
xor
push
mov
outs
pop
mov
jp
fwait
or
pushf
fcmovbe
test
in
and
xchg
dec
push
es
sub
add
sub
ret
xor
mov
loopne
mov
pop
mov
in
fmulp
dec
inc
sub
mov
fst
nop
jecxz
(bad)
add
lahf
dec
jmp
adc
add
call
repnz
xlat
aad
xchg
cmp
jb
and
das
jecxz
(bad)
(bad)
stos
pop
out
fwait
add
pop
aaa
fs
cmps
mov
out
les
outs
rcr
retf
cmc
sbb
xor
retf
cs
xchg
cmps
jl
loop
mov
pop
cmp
pushf
rcr
or
sub
fwait
xor
outs
mov
xchg
cwde
neg
and
add
jbe
mov
arpl
jno
add
jecxz
arpl
push
dec
dec
mov
ds
dec
rcr
repz
rol
cdq
shl
jmp
sbb
pop
xchg
cmp
fidiv
dec
dec
dec
dec
aaa
loope
test
int3
xor
sbb
int
cli
and
daa
test
pop
loope
push
push
aas
xor
fwait
mov
retf
imul
dec
sbb
sbb
aas
lds
add
mov
adc
std
or
sti
sbb
mov
call
push
cmp
add
int3
test
popa
jne
pop
sub
stc
dec
adc
mov
mov
aad
add
test
xchg
or
loope
xor
mov
dec
stos
cdq
sar
and
mov
jle
vpshufd
movs
or
mov
dec
pop
add
mov
ret
xchg
sbb
xor
adc
xchg
cmp
inc
mov
inc
push
cld
inc
or
adc
pop
stc
arpl
or
lods
add
inc
movs
sbb
repnz
inc
call
clc
mov
sti
iret
cmps
jae
hlt
xchg
ja
mov
dec
mov
xor
movs
xor
mov
inc
(bad)
jnp
out
dec
xor
in
xchg
clc
or
fcom
push
fmul
into
shr
loopne
sti
sub
pop
les
inc
or
lea
jmp
sub
xchg
retf
stos
mov
adc
jns
adc
cs
arpl
xchg
pop
shl
pushf
cmp
std
mov
cmp
leave
cmp
lea
jmp
pop
xchg
dec
mov
fwait
cwde
ins
retf
pop
sub
iret
pop
cmp
add
sub
test
sub
sub
mov
cwde
xor
push
outs
jnp
xor
js
xchg
test
icebp
sub
jb
inc
mov
rep
mov
sbb
ins
fisttp
jecxz
popa
add
push
les
xchg
out
les
pop
les
shl
and
xor
sub
and
outs
imul
pop
add
xchg
dec
sbb
lea
sbb
clc
call
push
lock
inc
or
loopne
enter
cmps
cld
iret
test
aad
xor
les
lahf
ins
jne
bound
push
xor
add
into
inc
div
adc
mov
fwait
shl
rol
xor
(bad)
push
(bad)
inc
and
mov
xlat
sar
jl
les
lahf
icebp
hlt
cmp
or
hlt
fwait
mov
sar
movs
push
aad
cs
dec
ins
ret
dec
pop
fisttp
imul
push
out
test
lahf
mov
dec
test
mov
imul
clc
mov
sti
test
or
sub
ficomp
sub
sub
jl
arpl
leave
mov
mov
sbb
jmp
imul
cmc
test
adc
inc
dec
inc
sbb
enter
iret
pop
cmp
mov
adc
push
(bad)
fxam
push
xchg
js
xor
adc
mov
ds
push
xchg
sub
pusha
push
repnz
jmp
cmps
mov
sbb
int
sub
shr
adc
into
sahf
nop
mov
shl
fwait
daa
shl
cmc
(bad)
jmp
out
add
lds
js
mov
jp
ficomp
call
or
or
cmps
fs
les
std
cmp
das
ror
push
or
aam
add
fsubr
pop
xchg
mov
mov
mov
xor
inc
scas
fisub
fadd
add
inc
mov
mov
sbb
jnp
clc
xor
popa
mov
adc
sub
mov
cmp
pop
shl
div
add
mov
add
retf
and
loopne
dec
jae
out
cmp
(bad)
cmp
cmp
cld
out
lods
bound
xchg
push
icebp
lock
call
jmp
and
ret
xchg
ret
cmp
ins
and
cmps
jnp
adc
xor
inc
xchg
pop
mov
pop
push
inc
jno
iret
lahf
or
pop
mov
or
(bad)
pusha
sar
sbb
adc
dec
xchg
mov
loopne
int3
lahf
lea
or
jl
in
or
dec
mov
sbb
inc
repnz
push
cmp
(bad)
sub
rcl
in
push
fisubr
stos
aas
nop
push
fdiv
stos
jae
ret
mov
jb
(bad)
mov
sbb
dec
add
lds
xor
imul
test
adc
fdiv
stc
xchg
cmps
add
mov
pop
inc
lea
pop
mov
cmp
dec
dec
out
jb
sub
add
jno
popa
bound
sbb
pop
sub
inc
pusha
or
inc
iret
int
jle
xor
data16
sbb
pop
push
pop
ds
jmp
add
std
dec
cs
mov
sbb
jae
aam
call
ins
jns
xor
outs
test
lods
sti
mov
loop
or
add
push
test
imul
lods
mov
out
sbb
repnz
(bad)
push
xor
test
call
les
xchg
mov
jl
call
lods
add
fdiv
js
iret
jb
add
les
mov
dec
in
in
sub
pop
or
inc
sbb
sub
jne
push
adc
pop
bound
sub
sub
ja
fld
popa
xchg
sbb
jmp
shl
cmc
jne
jmp
sub
mov
dec
cmc
jo
push
mov
std
push
js
pop
ds
jle
adc
fs
imul
popf
cdq
push
add
mov
jmpw
aad
fistp
dec
cmp
sar
mov
leave
mov
(bad)
dec
ins
lods
das
leave
jb
add
jnp
or
ror
test
inc
(bad)
imul
inc
jmp
in
(bad)
repz
jns
sub
jecxz
stos
pushf
cmp
stos
pop
aaa
cs
push
int3
jns
cmps
sbb
leave
cwde
add
xchg
in
ja
das
pop
int3
pop
cmp
retf
inc
fmul
stos
adc
hlt
test
arpl
addr16
cld
fidivr
fdiv
jg
loope
test
mov
mov
add
mov
or
(bad)
sub
sbb
rcr
or
inc
retf
nop
out
sub
mov
xor
pusha
and
(bad)
std
and
or
jmp
jbe
mov
jnp
mov
in
or
add
xchg
fdiv
stc
stos
daa
clc
jns
dec
out
cs
iret
sbb
cli
ds
jbe
ret
sti
loop
fst
and
into
adc
ficomp
pushf
(bad)
sbb
leave
mov
arpl
sub
scas
jle
retf
and
add
pushf
stos
mov
addr16
xchg
call
sub
sti
inc
push
jecxz
lea
pop
xlat
push
scas
push
or
and
loop
in
sbb
ja
sti
cld
xor
jle
push
jmp
jmp
jmp
das
sub
push
pop
je
push
not
retf
iret
mov
or
aas
and
test
add
dec
or
aas
xor
add
xchg
cmp
hlt
xor
xadd
cmps
push
loope
sub
pandn
push
jge
jle
xchg
jno
mov
call
fdivr
shl
in
or
outs
jl
fisttp
xchg
in
stos
imul
mov
jmp
fstp
sbb
dec
jge
jnp
das
xor
out
ds
pmaxub
fcom
movs
inc
push
dec
inc
push
inc
xlat
stos
dec
mov
cwde
pop
cdq
pop
push
test
pop
popa
jge
mov
or
adc
inc
in
out
dec
pmulhuw
int
sbb
mov
(bad)
repz
cmp
push
pop
cdq
dec
lock
pop
dec
jo
(bad)
lods
add
mov
bound
inc
call
ja
inc
imul
push
enter
imul
imul
and
popf
adc
test
mov
mov
dec
jbe
fiadd
rcr
add
mov
idiv
mov
or
scas
addr16
fwait
retf
xor
or
in
add
ja
jo
add
inc
les
call
shl
dec
sbb
in
push
enter
imul
jnp
mov
mov
in
bts
mov
and
movs
mov
fcos
push
pop
cbw
test
out
(bad)
adc
mov
f2xm1
sbb
and
ds
shl
mov
in
xchg
jge
imul
inc
sbb
mov
add
sbb
(bad)
mov
fld
repz
(bad)
push
push
mov
xor
add
ds
mov
add
gs
sub
mov
lock
push
and
jg
int3
scas
fisttp
push
retf
push
or
push
(bad)
in
mov
mov
jmp
add
inc
in
pop
jg
seta
repz
xor
push
xor
lods
adc
push
adc
mov
adc
mov
cwde
fs
test
dec
lahf
in
add
cmp
(bad)
cmp
add
push
mov
aam
jo
sahf
bnd
cmp
test
div
inc
add
adc
jp
mov
ja
aaa
adc
inc
dec
test
popf
push
mov
fild
dec
out
dec
pop
cmp
mov
sbb
mov
mov
stc
sbb
or
scas
gs
cmps
xchg
and
sub
or
scas
xor
lods
repnz
icebp
sub
mov
jecxz
mov
rep
pop
cmp
jne
idiv
cmps
cli
or
stos
sbb
dec
test
xchg
inc
lods
dec
push
push
mov
jmp
push
mov
iret
stos
cmp
ud1
cli
loope
imul
dec
cmp
fmul
inc
push
inc
outs
pop
cs
cdq
xchg
jmp
or
jns
dec
xor
clc
mov
mov
aaa
xor
cmp
mov
(bad)
(bad)
sbb
adc
shl
xchg
xor
pop
and
loop
or
cmp
push
or
movs
or
xor
jmp
jg
push
fld
imul
mov
and
or
fwait
or
jmp
pop
(bad)
jae
fs
bound
ficomp
pop
loope
pop
stos
jle
fs
push
push
enter
movs
fwait
dec
lods
dec
fisub
lods
mov
pop
mov
push
sbb
mov
xchg
fild
sub
inc
pop
je
adc
cmp
clc
arpl
inc
in
inc
lahf
pop
pop
xor
adc
retf
out
int3
push
test
cld
bound
aam
cs
dec
xor
pop
xchg
pop
push
clc
xor
add
retf
cmc
sbb
shl
mov
call
adc
sbb
sbb
int
adc
mov
test
outs
mov
mov
or
es
loop
add
inc
xlat
out
fcmovnb
adc
js
test
aas
pop
pop
ins
stos
test
test
cmp
jmp
aad
dec
(bad)
jmp
jb
dec
into
adc
xchg
sar
in
xchg
data16
leave
sbb
adc
(bad)
sbb
sti
cmp
add
and
xor
iret
jg
sbb
lods
adc
dec
lods
mov
xchg
sbb
(bad)
jbe
pushf
icebp
icebp
mov
cli
fldcw
aam
(bad)
loope
(bad)
adc
das
enter
test
rol
adc
mov
(bad)
push
in
loope
aam
cli
add
mov
leave
or
iret
add
inc
adc
ss
adc
out
imul
js
and
mov
aad
jmp
into
mov
xchg
cmp
xor
mov
cmps
sub
inc
dec
mov
or
jb
ret
in
in
push
arpl
dec
in
lahf
push
sar
mov
pop
sub
adc
add
repz
int3
cmp
jg
test
out
mov
iret
cs
xchg
test
push
xchg
mov
mov
push
fwait
in
xchg
movs
sub
push
sahf
std
jns
mov
jnp
cld
sti
inc
rol
or
fiadd
sub
rcr
xchg
test
test
test
jmp
clc
sub
mov
ds
outs
lea
repnz
pop
or
(bad)
mov
imul
shl
cdq
fld
adc
jno
xor
das
sbb
mov
mov
rol
pmaddwd
dec
les
adc
pop
test
inc
in
fld
out
in
mov
sbb
clc
xchg
ins
push
outs
sub
lea
sbb
bound
sub
int
(bad)
lods
imul
sub
mov
and
dec
(bad)
fldenv
jecxz
inc
sbb
pop
sbb
mov
mov
into
xchg
leave
adc
in
add
(bad)
cmp
xchg
xor
sbb
test
mov
cmp
out
popf
dec
sub
dec
fst
aad
sub
xor
repnz
(bad)
xor
shr
xor
add
jne
sub
into
xor
pop
leave
jle
neg
ficomp
mov
cmp
xor
cli
push
test
stos
adc
retf
cmp
jbe
sub
push
add
mov
mov
cmp
jle
mov
mov
sahf
test
bound
lods
pop
je
je
jmp
test
es
push
cmp
push
xor
adc
xor
les
pop
ss
or
fld
imul
push
sbb
pop
or
imul
xchg
jl
cmp
aas
add
pop
cmp
dec
sub
dec
and
or
cmp
pop
add
or
test
in
fcom
in
push
outs
arpl
jge
jge
sub
nop
inc
add
adc
add
imul
xchg
sbb
xchg
loop
mov
test
mov
bound
xor
std
imul
das
sbb
jno
jmp
adc
popa
add
nop
out
fdiv
push
cli
loop
mov
repz
outs
fistp
mov
popa
push
js
jbe
sbb
pop
jns
cmp
xchg
add
(bad)
daa
cmp
ins
addr16
mov
aaa
fst
pop
fwait
arpl
ja
je
sub
add
jae
dec
(bad)
loop
dec
mov
add
push
adc
popa
xchg
inc
or
fcomip
stos
add
shl
or
test
xor
jo
mov
js
and
jmp
push
and
daa
mov
adc
or
movs
add
out
fsub
cmp
jb
and
jmp
xlat
pop
adc
and
push
pop
xchg
mov
push
xor
bound
(bad)
scas
ficom
xchg
pop
fild
ret
dec
add
cmp
push
push
xchg
and
test
(bad)
and
imul
je
cli
outs
(bad)
aaa
pop
cmps
jg
cmp
push
rcr
clc
neg
or
mov
gs
(bad)
jo
(bad)
cmp
mov
(bad)
push
rcl
aam
push
push
fs
dec
jo
xchg
cli
movs
ins
add
jo
bound
mov
jno
sbb
jbe
adc
jp
neg
bnd
inc
xchg
push
adc
xor
add
mov
outs
pop
dec
stc
pop
mov
fisttp
in
push
scas
lods
out
xchg
sbb
loopne
ror
cmp
or
in
outs
rcr
push
push
stos
mov
dec
fist
les
adc
clc
cmp
lahf
adc
push
adc
rol
sbb
scas
dec
lahf
mov
stos
and
xchg
push
daa
int3
fnsetpm(287
in
popa
aas
pop
add
nop
cmps
mov
mov
inc
jae
int
sub
or
(bad)
(bad)
call
jle
clc
sar
call
loope
pop
movs
outs
or
nop
dec
das
mov
xlat
fisttp
cmp
xor
jecxz
pop
push
or
xchg
ins
fist
xchg
pusha
aam
aas
mov
(bad)
xchg
fisub
outs
inc
sbb
cmp
mov
mov
mov
enter
push
cdq
mov
jae
adc
xor
sbb
aaa
dec
push
xor
dec
cmp
add
shl
xchg
(bad)
xchg
push
daa
or
out
les
push
ins
test
das
test
not
adc
push
cmp
push
mov
jmp
(bad)
stos
add
mov
mov
adc
popa
jp
repnz
ins
and
jo
test
aam
pop
test
daa
aad
stc
in
outs
sar
addr16
and
fmul
jecxz
or
add
jns
add
fbstp
sub
cmp
xchg
pop
sub
fist
mov
mov
xlat
sub
sub
mov
jae
inc
imul
imul
inc
fmul
pop
sar
aas
ja
inc
sti
fwait
adc
sar
repz
cmp
and
fiadd
cmp
xor
dec
not
cld
pusha
ror
mov
or
(bad)
std
fiadd
scas
ret
push
xchg
cmp
sbb
mov
(bad)
iret
lods
stc
adc
or
pop
das
mov
loop
xchg
push
mov
outs
xor
clc
mov
fcomip
add
sar
rcr
xor
adc
xlat
jge
loop
loop
mov
pop
xchg
dec
jmp
fisttp
sub
cmp
xchg
lods
mov
cmp
mov
xor
mov
jnp
cmp
mov
add
inc
les
mov
daa
xchg
inc
cmc
add
mov
adc
dec
popf
sahf
sbb
jle
mov
ins
push
repnz
add
mov
sbb
dec
inc
mov
fistp
dec
fxch
add
jge
jp
ret
retf
(bad)
xor
xor
jecxz
mov
pcmpgtd
cdq
xchg
push
imul
mov
cmp
lahf
pop
add
in
add
out
sbb
jo
je
rcl
jo
call
into
(bad)
enter
add
xor
sub
or
rol
or
add
mov
(bad)
clc
lock
repnz
xor
bound
ds
rcr
out
xchg
jns
sahf
out
or
jp
imul
jl
xchg
jne
sbb
mov
cld
stos
mov
outs
cmp
mov
pushf
push
loop
add
jl
pop
cmps
xchg
push
test
mov
cdq
push
pop
rcr
cmp
test
loop
ss
or
inc
mov
lds
iret
scas
jae
jbe
cld
test
fs
sub
cmp
mov
pop
xchg
imul
sar
cs
cmc
xor
mov
stc
loop
push
inc
xchg
lods
cs
sub
je
enter
call
les
scas
xor
and
mov
aam
vunpckhps
pushf
(bad)
in
ss
aam
retf
or
out
mov
mov
retf
pop
mov
in
push
pop
popa
gs
push
inc
adc
fldcw
mov
xchg
aaa
data16
dec
cmps
xchg
jmp
maskmovq
neg
add
jns
sar
xchg
mov
mul
sbb
lods
or
push
push
iret
lea
mov
mov
(bad)
dec
call
ins
adc
fidivr
adc
push
fidiv
or
cmp
xor
sar
movs
jp
cmps
ror
mov
cmp
dec
sbb
dec
cld
jge
inc
cmps
gs
dec
sahf
fdivr
rcr
test
sub
in
xchg
mov
sbb
xor
(bad)
imul
xchg
pop
out
add
in
mov
pusha
mov
lods
ret
mov
xor
pop
pop
cmp
idiv
les
jne
adc
add
repz
push
mov
xchg
or
loopne
addr16
imul
pop
add
dec
iret
mov
push
fiadd
jecxz
add
ins
mov
inc
out
mov
ror
cmps
stos
or
sub
pop
xlat
repz
bound
int
mov
push
xchg
fyl2xp1
(bad)
jmp
push
inc
push
fnstenv
pop
lods
or
jmp
push
rcr
icebp
dec
push
out
mov
push
pop
call
and
repnz
pxor
sub
and
call
cld
fild
movs
jo
pop
retf
adc
pop
adc
aad
mov
(bad)
sbb
jo
or
adc
add
dec
mov
in
aaa
out
jle
int
cmp
pushf
(bad)
xor
loopne
push
cli
dec
pop
loope
icebp
jno
iret
fbld
in
add
mov
or
inc
xchg
out
pop
mov
mov
inc
jle
into
add
mov
mov
sahf
clc
mov
jnp
mov
cmp
dec
inc
mov
int
fwait
leave
sub
lds
lahf
call
pop
dec
out
sbb
jl
xor
scas
pusha
inc
pop
mov
hlt
jle
jno
fimul
adc
fcmovnbe
aaa
scas
ret
rol
fldcw
in
ds
lea
pop
call
adc
popa
(bad)
hlt
and
push
cmp
jmp
fucom
daa
les
imul
adc
mov
fdivr
mov
punpckhbw
pop
rol
sub
xchg
out
push
lock
ds
ret
in
mov
scas
fist
aas
dec
push
mov
ficom
cs
aas
(bad)
adc
pop
call
mov
repz
mov
shr
xor
sar
cwde
mov
pop
stos
imul
in
xor
jo
retf
push
mov
loope
sub
xchg
dec
mov
(bad)
gs
test
gs
sbb
mov
add
inc
in
add
jnp
(bad)
xor
dec
dec
in
pop
jecxz
(bad)
pop
sub
mov
mov
lods
cmp
call
dec
cmc
data16
(bad)
xchg
in
sub
pop
adc
scas
pop
(bad)
call
sub
out
jge
je
cmp
jl
or
shr
dec
out
sub
or
in
mov
jecxz
xor
add
jp
es
ret
int
(bad)
icebp
jmp
addr16
xchg
dec
xchg
ds
jg
xchg
sub
retf
dec
fimul
enter
jl
push
xchg
(bad)
imul
repnz
pushf
jne
inc
popf
(bad)
cmp
ret
sbb
aas
and
fistp
push
fidivr
cmp
call
adc
ja
imul
xor
(bad)
retf
pop
aam
fadd
pop
pop
lds
xchg
imul
dec
dec
(bad)
pinsrw
in
jp
or
retf
int3
stos
push
outs
lock
xchg
rcl
mov
mov
ror
ret
jp
pop
or
sti
adc
jl
retf
xchg
clc
scas
je
adc
mov
aam
cmps
jg
imul
out
push
pusha
mov
sahf
jp
cmp
cwde
movs
and
inc
arpl
cld
test
pop
shr
adc
shl
inc
mul
jge
inc
repz
cmc
jmp
cmp
icebp
lock
mov
push
mov
dec
repnz
(bad)
not
test
(bad)
cli
jne
sbb
cmc
inc
enter
test
fidivr
les
add
mov
(bad)
gs
loop
je
sbb
sub
dec
xchg
sti
cmp
cmp
cmp
xor
shl
push
xor
outs
add
fwait
(bad)
push
mov
ja
pop
adc
retf
test
repz
in
xchg
iret
pause
popa
xchg
mov
(bad)
bound
adc
pop
cld
or
xor
aas
ins
add
arpl
daa
sahf
and
inc
jp
daa
add
out
nop
pop
sar
into
sub
mul
repz
sbb
cli
ds
xchg
loopne
fstp
push
xchg
dec
xor
(bad)
outs
push
jg
stc
test
into
retf
ins
xor
sub
dec
sub
jmp
aaa
inc
pushf
cmp
cmp
ror
(bad)
mov
fcomp
rep
cdq
fbstp
inc
sub
(bad)
rcr
push
cdq
add
test
add
pop
mov
cli
cmp
push
loop
sahf
xchg
cmp
xchg
loope
into
pop
aam
mov
inc
call
xchg
cmp
cmc
mov
in
pop
xor
push
sub
repz
jmp
popa
mov
cli
pop
add
jns
add
adc
fcomip
dec
dec
cwde
(bad)
repnz
pop
in
setg
xchg
cld
in
aam
std
xchg
dec
xor
push
bound
out
jno
imul
mov
je
push
push
inc
jnp
test
push
lock
arpl
fidiv
loop
push
call
jo
sub
in
xchg
mov
jbe
imul
mul
stos
xor
icebp
sahf
mov
jecxz
and
nop
push
dec
lods
push
fs
rol
test
imul
movs
clc
cmp
jne
dec
(bad)
ret
xor
cs
ret
add
push
pop
sub
(bad)
inc
dec
sbb
push
pop
xor
test
jb
and
addr16
js
sbb
ins
jg
pop
lods
cmc
test
out
pusha
xchg
adc
sub
lock
hlt
mov
push
imul
add
or
or
or
xor
add
(bad)
fld
lock
fisubr
mov
sbb
outs
jl
jo
xor
hlt
nop
jmp
inc
mov
mov
jno
enter
inc
fiadd
fwait
scas
test
sbb
cwde
cmps
jmp
xchg
dec
dec
aad
into
xchg
xor
add
push
jb
leave
pop
push
cdq
ja
mov
dec
xchg
dec
jmp
mov
lds
and
cmp
mov
push
push
shl
dec
cdq
(bad)
(bad)
int
das
sbb
fdivr
fcmovnb
xor
out
adc
cwde
ret
and
(bad)
mov
imul
cmps
ret
or
(bad)
test
out
addps
jmp
push
int3
nop
and
out
imul
(bad)
pop
mov
enter
ja
push
mov
mov
cmp
push
in
dec
outs
adc
lods
and
loopne
ret
imul
cmps
push
sti
(bad)
dec
mov
in
(bad)
aas
stos
das
cmp
ins
dec
retf
fld
outs
loopne
dec
cmps
jmp
leave
inc
push
xor
fist
call
cld
ins
(bad)
fdiv
xchg
ins
and
imul
add
pushf
sbb
loop
and
ret
push
xor
mov
mov
icebp
mov
xchg
scas
push
outs
fadd
or
inc
movs
push
sub
test
(bad)
enter
icebp
lods
mov
test
ds
mov
xor
push
sub
and
hlt
pop
xchg
daa
and
jne
iret
mov
jns
hlt
hlt
aam
vmovddup
(bad)
(bad)
lahf
clc
(bad)
sbb
push
mov
cs
and
add
mov
sub
push
mov
loopne
xor
pop
or
imul
inc
fisttp
mov
mov
test
int3
ins
mov
out
xor
xor
push
loope
lea
dec
mov
inc
mov
cmp
add
mov
push
fnsave
jge
inc
outs
mov
pop
dec
mov
adc
sbb
cli
fwait
mov
rcl
aad
out
fwait
cli
xchg
or
push
ror
or
pop
int3
fisttp
mov
cmp
and
lods
(bad)
mov
enter
mov
pop
inc
test
fidiv
dec
cmp
pop
inc
pusha
mov
xlat
jns
sbb
pop
fistp
(bad)
xor
aam
jbe
addr16
gs
add
jle
ds
leave
retf
loop
lds
mov
into
pop
scas
ret
xchg
jl
ins
pushf
adc
sti
dec
call
and
das
adc
and
ror
xor
jmp
jge
fistp
pop
repz
addr16
lods
mov
das
or
xchg
stos
popa
dec
sub
cmp
inc
jmp
xchg
push
int3
and
pop
xor
pop
jmp
adc
(bad)
push
(bad)
mov
xor
push
push
aas
push
or
push
call
(bad)
scas
cmps
jecxz
f2xm1
adc
mov
dec
pop
inc
inc
aad
adc
int3
jbe
fcomip
ret
xchg
fisttp
nop
jmp
loope
sub
mov
cmc
icebp
lahf
sti
mov
jmp
dec
lods
fist
adc
ins
dec
and
xchg
pop
aas
xchg
ret
mov
push
(bad)
jg
push
mov
stc
adc
in
and
ret
sub
lea
fdivr
sub
adc
sahf
pop
adc
xchg
lods
xchg
sub
mov
aad
xor
and
sub
sbb
cmp
popf
sbb
clc
clc
imul
(bad)
jns
xor
popf
out
rol
mov
aad
in
push
jbe
fsubr
imul
sub
xchg
add
xchg
scas
add
pusha
neg
fsubrp
mov
lods
sbb
pop
imul
mov
loope
retf
mov
add
or
(bad)
sbb
mov
xor
pop
xor
pusha
gs
aaa
aam
xor
inc
out
jmp
mov
popa
add
and
inc
cmp
sub
clc
and
jne
add
aas
test
mov
imul
es
inc
mov
cs
jno
jb
mov
pop
push
out
ror
in
sub
fsub
dec
mov
ret
sti
jp
lock
sub
and
iret
mov
aas
mov
sbb
pop
repz
push
mov
cmps
dec
pop
mov
xchg
clc
les
test
or
cmp
pop
mov
es
(bad)
push
push
out
xchg
cli
cmps
ss
clc
adc
rcl
xchg
xor
rol
mov
inc
cld
adc
scas
(bad)
enter
mov
jg
fidivr
pop
daa
cwde
pop
outs
xor
test
loope
addr16
jno
out
push
jbe
stos
aas
cmps
add
test
mov
xchg
fsubr
test
xchg
or
push
and
lds
cmp
cmp
xor
xchg
jmp
and
pop
mov
out
ins
mov
xacquire
aas
mov
add
inc
push
int3
(bad)
(bad)
cmp
or
mov
mov
or
pusha
push
add
sub
xchg
pushf
test
add
jge
call
mov
mov
xor
fisubr
xlat
stc
out
pop
div
popa
pop
jb
jg
dec
das
clc
jne
ror
xor
mov
js
and
jmp
repz
std
stos
mov
shl
mov
jge
sbb
jns
inc
fwait
jno
push
retf
add
xchg
ror
xchg
jbe
mov
jae
out
push
fsub
lods
dec
inc
enter
push
dec
xchg
in
pop
pop
push
dec
mov
lock
mov
movs
ins
sbb
fld
loopne
repnz
call
and
imul
add
sbb
or
aad
inc
and
cmps
push
icebp
stos
xor
xchg
pop
jnp
fstp
fidivr
or
(bad)
stc
cmp
cdq
mov
data16
inc
xlat
jecxz
mov
xor
mov
inc
add
fiadd
adc
loop
inc
fst
xchg
and
in
dec
inc
mov
dec
(bad)
push
test
scas
inc
xchg
xor
je
fadd
in
jo
fdiv
sbb
add
frstorw
repz
sbb
xchg
std
xchg
cli
test
mov
les
xchg
pop
push
mov
sahf
mov
jbe
mov
xchg
adc
bound
mov
sbb
xor
es
lods
scas
mov
shr
adc
inc
jns
lods
xchg
mov
xor
stos
sbb
xor
xchg
ss
or
adc
js
xor
pushf
outs
or
pop
stos
das
mov
mov
mov
aad
into
scas
or
mov
mov
push
mov
lods
movs
ror
ja
aam
scas
mov
sbb
ud2
push
and
(bad)
call
mov
addr16
pop
sbb
leave
fisub
cmps
js
cmps
pushf
inc
jo
pop
test
or
xchg
stos
xchg
jl
scas
push
mov
pop
stos
loop
lea
loopne
dec
xchg
pop
adc
hlt
lods
iret
arpl
push
loopne
jne
ins
xchg
cmp
ret
retf
add
outs
mov
loop
pop
xor
ins
push
hlt
mov
aad
adc
dec
rol
ror
sahf
pushf
div
jo
jae
ficom
dec
popa
daa
in
xor
mov
jb
daa
pop
dec
and
lods
inc
je
sub
out
gs
push
stos
pop
pop
shr
dec
jmp
retf
out
(bad)
mov
or
adc
xchg
mov
(bad)
ja
xor
xor
push
test
in
test
xchg
mov
ds
fdiv
mov
outs
jge
jmp
(bad)
ja
mov
ins
icebp
sbb
mov
mov
inc
jle
xchg
jns
xchg
mov
sahf
pminsw
ins
push
shl
test
mov
cmps
fldenv
out
(bad)
adc
in
sar
xchg
inc
cmp
xor
pushf
jnp
dec
pop
(bad)
cmp
test
aam
jge
sbb
mul
push
xchg
aad
neg
movs
xor
pop
jae
outs
fxtract
sub
loope
into
push
addr16
scas
pop
les
pop
aas
adc
test
scas
cmp
stos
retf
stos
call
pop
inc
jns
cmp
int
test
adc
mov
push
ret
sub
loop
adc
inc
in
outs
ds
pop
sbb
stos
rcl
mov
cmp
mov
xor
jle
jge
std
mov
(bad)
fxch
cmp
aaa
jp
jmp
dec
jne
dec
add
xor
cmp
dec
mov
inc
mov
mov
mov
pop
js
inc
arpl
mov
sbb
call
or
cmps
inc
mov
sub
or
adc
aam
mov
jmp
bound
out
loopne
retf
fiadd
adc
cmp
loop
pop
adc
sub
in
(bad)
out
add
gs
sub
sbb
and
imul
jmp
fwait
inc
xchg
or
enter
nop
xchg
inc
mov
push
dec
ins
jmp
fwait
sub
jge
fist
stos
retf
xchg
call
inc
jmp
enter
sbb
das
fld
mov
xchg
inc
dec
es
fimul
mov
xlat
pop
in
(bad)
pop
test
mov
lods
cs
stc
inc
test
icebp
mov
pop
add
inc
xor
mov
pushf
add
loop
in
xchg
loop
in
xchg
and
into
stos
pop
cli
imul
test
inc
outs
inc
retf
mul
lahf
add
mov
mov
add
jmp
mov
lods
pop
fiadd
sub
sub
das
dec
mov
pop
dec
out
sbb
call
pop
mov
pop
dec
pop
scas
ret
sbb
xor
in
jl
adc
mov
fiadd
xor
adc
iret
fwait
and
mov
sub
leave
dec
cld
cs
in
mov
ins
xor
ret
sub
sub
add
cmp
jg
jb
mov
pop
or
xchg
xchg
call
pop
xchg
stc
xchg
pop
shl
test
push
jmp
fstp
pop
sub
loope
arpl
or
jmp
mov
pop
dec
addr16
jae
mov
or
(bad)
cmp
mov
mov
stos
or
push
ss
faddp
pop
inc
hlt
pop
int
mov
xchg
in
xchg
adc
lods
mov
jbe
gs
mov
scas
outs
xchg
mov
ss
cdq
fisub
ja
ds
fcmovnbe
enter
inc
hlt
pop
in
js
or
pop
dec
mov
push
adc
jb
cmp
retf
mov
jbe
movs
pop
xor
(bad)
jbe
sub
sub
int
inc
movs
arpl
cli
dec
add
pop
in
xor
ror
sub
mov
rol
cmps
cmp
sub
adc
or
push
aaa
data16
push
inc
sar
movs
mov
(bad)
std
jno
mov
into
lahf
pop
mov
dec
mov
xor
ror
aam
div
mov
sub
mov
ss
jp
cmp
sbb
xchg
in
cmp
fcmovbe
xor
std
mov
mov
aam
loope
shl
add
and
inc
pop
lea
jbe
popf
test
xchg
adc
and
mov
or
sub
data16
aaa
adc
mov
das
mov
pushf
outs
pop
popf
push
lods
xor
es
mov
push
mov
or
ins
sub
pop
lahf
loopne
cld
pusha
jmp
push
jge
dec
cmp
sar
adc
mov
sub
mov
scas
inc
ret
or
jno
jno
(bad)
jmp
adc
push
sub
test
mov
clc
and
idiv
jge
adc
mov
fimul
enter
cmovle
arpl
das
cld
mov
int
jno
mov
das
js
fist
lds
cmps
inc
add
in
jbe
inc
xor
mov
jnp
inc
or
int
fidiv
mov
out
stos
push
add
retf
adc
cmps
cmp
retf
inc
pop
aaa
cmp
mov
xor
(bad)
sahf
rcl
mov
ficom
jnp
mov
adc
js
xchg
in
sub
cmp
std
mov
push
pusha
test
push
adc
adc
(bad)
inc
int3
adc
mov
loop
or
ds
dec
cli
movs
sbb
xor
aas
shl
mov
mov
enter
ins
(bad)
and
or
das
popf
xchg
adc
rcr
fstp
addr16
cld
cmps
retf
jnp
sbb
push
inc
in
ficom
mov
les
enter
int
call
fs
cmps
sbb
bsr
mov
sahf
cli
into
call
mov
dec
(bad)
mov
in
push
fwait
out
fcomip
fucomi
adc
jg
sbb
dec
push
xchg
push
into
bnd
dec
sbb
mov
fbld
mov
xlat
sub
sub
fsubrp
retf
fmul
(bad)
fist
mov
fst
jp
cwde
loope
(bad)
or
jmp
hlt
jmp
jmp
and
mov
mov
xchg
icebp
jb
das
xor
jb
lds
fnstcw
pop
or
in
or
xchg
cmp
call
adc
mov
add
lock
push
gs
xchg
fidiv
mul
pop
clc
xor
add
test
cmp
or
adc
ds
lds
ins
(bad)
sub
clc
dec
fwait
dec
fs
out
ret
rcr
sti
push
(bad)
mov
cmp
push
test
jae
and
xor
popa
call
xchg
sti
inc
es
mov
mov
mov
stc
sbb
inc
cmps
movs
jmp
sub
(bad)
rcl
sub
or
mov
shr
mov
jne
cs
sub
xchg
push
es
dec
pop
and
cmp
push
jmp
lock
retf
jg
sub
icebp
jnp
mov
cmp
pop
pop
jmp
inc
lods
add
in
movs
jg
(bad)
dec
pop
xor
or
rcl
les
aaa
lahf
inc
mov
ret
push
inc
or
sub
imul
lods
jg
inc
out
inc
outs
gs
inc
test
adc
mov
leave
lods
inc
cwde
scas
sti
outs
mov
xor
mov
push
test
pop
mov
pop
nop
fmul
pop
or
retf
fdiv
push
cmp
add
and
jmp
sbb
out
bound
retf
dec
jmp
add
push
mov
xor
and
rcl
mov
inc
jo
adc
push
add
and
cmp
and
das
(bad)
jl
add
sti
popf
ds
inc
mov
shl
jmp
arpl
(bad)
scas
xlat
(bad)
sbb
add
ins
xor
jecxz
div
fdivp
and
std
cdq
cmc
mov
iret
sub
pusha
jmp
cwde
fst
fsub
int3
mov
outs
and
mov
mov
mov
ret
pop
mov
add
cmps
xlat
pusha
ins
add
push
mov
imul
push
xor
mov
les
cmps
je
repnz
pop
arpl
retf
pop
pop
mov
js
fs
xchg
mov
pop
mov
rcl
and
sar
(bad)
test
ret
jo
fmul
and
push
call
mov
stos
jo
push
fcmovu
sar
sub
sbb
lods
cmp
inc
cmp
lods
adc
jle
sub
lds
loopne
push
fs
dec
out
imul
aaa
add
out
cmp
xchg
pop
pop
test
fcom
sbb
sub
mov
rol
xchg
movs
fld
outs
or
adc
inc
retf
gs
push
jmp
or
pop
icebp
(bad)
clc
mov
pop
lahf
mov
lds
fidivr
rcr
fwait
out
jnp
scas
push
lods
xchg
push
pop
jnp
xchg
fdivr
(bad)
dec
xchg
mov
mov
inc
std
popa
sub
sbb
lock
fisubr
xchg
retf
ins
adc
sbb
add
push
out
adc
xor
jg
add
pop
enter
addr16
in
mov
(bad)
sub
ror
and
push
cmp
sub
pop
rol
sub
mov
inc
cmp
add
mov
sub
jbe
adc
mov
pop
push
fidivr
push
int
shr
add
or
rcr
xchg
shl
pop
ror
scas
shl
adc
lods
std
cs
data16
pop
add
fdiv
sar
out
aam
jle
cmp
outs
stos
stos
mov
in
inc
cld
fisubr
into
lods
pop
and
jp
pop
jo
fwait
mov
aaa
sar
add
add
cwde
icebp
or
stos
scas
pop
mov
sbb
fwait
sub
adc
arpl
dec
stos
sub
div
cmc
mov
mov
jns
repnz
imul
and
ins
push
sbb
aaa
fild
call
ds
fst
ins
sub
movs
add
mov
pop
sub
xchg
sub
mov
xor
ret
mov
mov
cmp
cmp
xor
sbb
jle
cld
jo
in
push
dec
and
loope
fwait
jns
and
dec
xchg
(bad)
aam
rol
ja
ja
sti
or
rep
jmp
inc
adc
inc
mov
cwde
rol
mov
xchg
pusha
lea
add
out
cdq
xchg
add
cmp
ret
cmc
adc
out
cmp
xchg
jbe
dec
mov
aam
(bad)
xor
in
iret
inc
pop
or
push
and
or
loope
nop
push
push
mov
ds
jae
push
pop
or
jae
ss
popf
jp
into
add
(bad)
stos
push
lgs
or
sub
jecxz
sub
shl
fmul
stos
ins
jmp
in
add
loope
sub
repz
iret
ins
push
xchg
and
jl
push
movs
inc
sti
gs
cmc
add
pop
sub
cmc
dec
xor
sub
loop
jg
test
mov
aam
fdiv
xchg
repnz
lea
and
add
jne
shl
fist
pop
cwde
loope
rol
(bad)
and
push
call
out
call
fimul
lea
push
mov
adc
sar
rcl
and
std
push
fidivr
imul
(bad)
je
pop
lahf
loopne
push
lods
ds
pusha
jmp
jns
xchg
lea
icebp
repnz
out
mov
adc
push
sub
sbb
sbb
jmp
popf
jl
cmp
lahf
ins
cmp
xor
cmp
es
(bad)
adc
not
sbb
mov
pop
pop
je
dec
or
dec
fs
pop
ins
scas
xor
jnp
xor
mov
nop
or
or
push
lea
lds
je
sub
push
jmp
pop
cld
add
xchg
jbe
dec
cdq
pop
mov
test
ins
adc
xchg
ds
ins
arpl
test
test
into
fdiv
das
xadd
push
mov
movs
dec
adc
or
(bad)
dec
adc
dec
sub
int
inc
aaa
mov
push
mov
cld
loopne
jmp
mov
pop
jg
or
hlt
or
enter
icebp
xor
xor
out
jg
adc
(bad)
std
add
lock
ffree
pusha
jg
fsubr
es
ficomp
mov
lock
inc
dec
mov
adc
cmp
mov
pop
jo
dec
jmp
add
adc
mov
cmps
push
arpl
push
shl
rcl
and
add
cmp
(bad)
push
hlt
mov
adc
and
daa
jl
rol
cdq
mov
fsubr
push
(bad)
mov
mov
dec
xchg
shl
push
fwait
inc
xor
xchg
leave
xor
or
ins
mov
adc
pop
push
cmp
js
fbstp
fs
push
js
dec
add
(bad)
popa
fbstp
loope
pop
sbb
fist
ret
xchg
repz
mov
push
popa
std
add
push
cmp
lods
mov
xchg
adc
cmp
stos
nop
sbb
mov
aaa
pop
mov
loope
arpl
in
add
sbb
push
and
cmp
test
outs
rcl
pushf
pop
push
bound
adc
sub
sbb
lock
pop
arpl
shr
adc
in
fcom
in
daa
lock
in
fs
cmps
sub
push
xchg
cmovae
sti
into
leave
inc
push
xchg
loope
cmp
js
aaa
fcomip
or
pushf
xchg
jmp
pop
ins
jo
pop
call
cmp
repnz
fsubr
int3
adc
pop
ins
cmovae
mov
jo
imul
push
pusha
adc
ins
and
push
ret
adc
sbb
(bad)
fdiv
push
xor
inc
dec
lahf
push
imul
push
and
ja
cld
adc
mov
movs
in
push
mov
cmp
or
push
push
ins
and
rcl
js
sbb
mov
retf
in
mul
ds
cmps
addr16
add
fwait
add
adc
mov
in
cdq
es
lea
fwait
push
or
stos
dec
div
shr
mov
iret
mov
les
outs
jecxz
mov
mov
cmp
les
mov
xlat
adc
call
pop
mov
push
jl
fst
in
movs
cmp
mov
sbb
loop
and
sahf
aad
xchg
push
or
cmc
sub
sub
sub
sub
int
xor
call
dec
(bad)
jns
test
loopne
out
mov
fld
in
xchg
xor
cmp
fisttp
pop
out
leave
mov
push
push
addr16
call
int3
add
add
fwait
lods
scas
aam
xchg
outs
add
or
mov
stos
test
iret
sbb
jb
daa
add
repnz
ss
repnz
and
mov
or
inc
fxch
js
xchg
jne
push
je
js
scas
clc
(bad)
jle
add
dec
lods
retf
scas
cli
cli
adc
mov
push
xlat
cli
loope
or
scas
popa
imul
lock
cmps
retf
fist
jno
mov
int
loopne
inc
jmp
(bad)
ficomp
arpl
xor
ss
adc
mov
ins
fdivr
mov
mov
add
and
xchg
and
jmp
int
ss
ins
lahf
pop
stos
leave
sbb
test
mov
not
in
jle
jmp
sub
enter
jnp
gs
aas
leave
push
xchg
fwait
rol
mov
sbb
jle
jb
add
stc
dec
sbb
fsubr
sar
ins
adc
mov
mov
and
jle
xchg
inc
mov
mov
scas
jmp
lods
add
xor
dec
scas
clc
cwde
call
xor
lock
xor
fs
dec
sub
cmp
call
push
add
sbb
ret
push
lods
shl
iret
xchg
add
repz
rcr
outs
dec
test
cmps
inc
add
cmp
scas
push
push
push
push
out
adc
neg
jl
jo
out
rcr
push
imul
call
(bad)
cli
mov
movs
pop
lds
add
sub
or
mov
movs
or
sub
push
jecxz
imul
xor
rcl
rcl
sbb
push
push
clc
jl
repnz
xchg
retf
(bad)
xchg
jg
(bad)
xchg
mov
enter
xlat
fmul
pop
xchg
jg
xor
outs
push
ret
js
push
inc
ret
pop
outs
ds
inc
mov
js
dec
das
rcr
inc
lods
xchg
ficom
pop
mov
inc
jnp
or
jmp
sbb
mov
xchg
aas
sub
mov
jg
jecxz
test
jns
rcl
out
xor
jbe
jmp
pop
call
int
inc
sar
pop
jmp
push
loop
ins
test
mov
push
jne
pop
pusha
inc
xchg
mul
jecxz
fcmovbe
inc
mov
xchg
mov
pop
cmps
std
retf
inc
(bad)
adc
sbb
xchg
xor
push
mov
(bad)
pop
shr
mov
sub
icebp
xchg
cmps
mov
xor
push
sub
dec
neg
and
pushf
in
adc
mov
mov
push
lds
inc
data16
push
cli
in
hlt
inc
xchg
or
jl
ret
sbb
sbb
or
inc
stc
into
stos
sub
mov
in
int3
and
jl
sbb
inc
adc
push
mov
or
sub
bound
fistp
mov
idiv
fwait
adc
or
mov
je
mov
shl
or
mov
xor
out
jbe
leave
and
fstp
push
cmps
mov
(bad)
movs
outs
inc
fs
aaa
lds
test
mov
mov
and
ret
xchg
or
rol
cdq
add
dec
fdivr
push
xchg
gs
ret
jmp
idiv
cmp
mov
test
ins
data16
shr
push
cdq
test
sbb
or
mov
sbb
mov
mov
outs
dec
xor
aas
fcomi
shl
push
(bad)
or
fnsave
sti
xor
test
xchg
test
(bad)
mov
popf
stos
in
mov
les
sbb
jmp
mov
pop
pop
mov
mov
inc
clc
test
dec
ficomp
jae
xchg
push
sub
sbb
mov
dec
dec
movs
jg
int3
aas
leave
add
sbb
nop
xor
inc
gs
push
xchg
inc
cmp
fdivrp
push
adc
out
popa
sub
mov
sub
inc
test
jnp
fistp
adc
pusha
scas
inc
sbb
std
movs
and
mov
and
retf
dec
popf
sti
dec
lds
push
add
mov
cld
pop
jno
adc
xor
dec
sbb
mov
xlat
and
sbb
iret
mov
mov
jp
scas
imul
call
cmp
push
nop
fnstsw
sub
add
iret
dec
daa
or
jae
dec
movs
xlat
push
lahf
mov
add
ror
(bad)
push
adc
mov
iret
add
dec
outs
out
mov
jb
inc
mov
xchg
sub
loope
sub
rcr
xchg
sahf
dec
shl
fwait
fs
retf
mov
push
xchg
xchg
jmp
lods
sub
sub
add
(bad)
jecxz
mov
sub
loopne
fldenv
push
xchg
sub
mov
or
mov
daa
cmp
push
pop
dec
stc
das
mov
bound
cmp
xor
aas
aam
xor
adc
add
jne
retf
loope
jns
sti
push
push
ins
mov
repz
mov
or
dec
cmc
fdiv
sub
loop
pop
jl
fild
hlt
cmp
mov
and
mov
cmp
xchg
push
push
push
imul
push
lahf
je
outs
sbb
push
aam
pop
jb
and
in
add
das
fld
xor
lds
sub
push
jg
aas
leave
adc
repz
mov
adc
dec
dec
les
adc
add
inc
sub
ins
mov
jnp
push
ret
jnp
jmp
sbb
pop
aas
dec
js
jmp
adc
loope
gs
mul
and
adc
adc
sub
js
shr
push
fsub
and
xor
mov
ds
cmp
lahf
sti
rcr
mov
push
xchg
cmp
adc
lahf
mov
enter
xchg
(bad)
test
or
call
test
hlt
movs
jle
arpl
xchg
add
popa
jbe
mov
fnstenv
xchg
data16
loope
and
into
daa
push
push
jmp
popa
cdq
jns
or
mov
xchg
daa
mov
or
mov
mov
shl
xchg
test
in
mov
jg
loopne
ja
mov
cmp
les
jb
and
rcr
imul
adc
cmps
jae
pop
and
dec
push
inc
pop
fimul
jmp
clc
movs
je
lahf
movs
inc
jmp
(bad)
jmp
aas
aas
iret
jae
push
jb
adc
mov
repz
mov
repz
xor
cmp
mov
sbb
in
mov
mov
rol
mov
ror
inc
jmp
je
sbb
cmp
ins
mov
cdq
popa
jmp
add
shl
shl
in
push
sbb
int
xchg
jbe
adc
das
mov
loop
popf
leave
loopne
cmp
xchg
mov
aad
outs
mov
add
test
cli
daa
inc
and
mov
scas
inc
adc
fcmovnbe
(bad)
xor
jae
int3
adc
sub
nop
cmp
inc
sti
inc
mov
aas
cmps
mov
imul
stos
or
aaa
or
cmp
push
pop
xor
loopne
cmp
xchg
popa
inc
add
jbe
push
int3
push
ss
mov
les
loop
out
jnp
cs
leave
imul
cmovno
not
nop
out
mov
or
addr16
retf
cld
mov
dec
jmp
jp
mov
fistp
jge
sub
pop
shr
hlt
cmova
push
or
rcr
add
mov
mov
sbb
test
sub
push
(bad)
fcomp
mov
mov
test
inc
out
cmp
dec
or
fs
leave
push
and
es
sbb
dec
push
aad
sub
mov
xor
imul
xchg
stos
or
retf
mov
xchg
(bad)
pop
iret
and
out
sbb
jb
in
jg
fcom
push
les
jno
nop
pop
xor
or
clc
out
and
stc
jp
pop
outs
xor
(bad)
cmps
fmul
cmp
cmp
adc
mov
call
add
dec
mov
push
fcomp
push
call
jne
xchg
inc
and
add
fwait
push
pop
push
mov
call
dec
mov
pop
push
cvttps2pi
mov
push
test
xchg
push
sahf
mov
xor
mov
(bad)
ds
push
aam
ja
out
popf
scas
call
ret
iret
dec
shr
or
sbb
mov
jmp
sahf
ja
mov
sysenter
sahf
cmp
xor
(bad)
jnp
mov
scas
inc
es
shl
push
adc
test
xlat
mov
mov
mov
sub
push
int3
push
xor
outs
add
xlat
aam
sahf
cdq
ins
pop
loope
pop
aas
push
adc
mov
js
imul
cmp
add
arpl
movs
or
push
add
add
adc
ins
shr
pop
out
mov
inc
imul
out
mov
push
adc
retf
and
aam
mov
jns
sub
xlat
ret
sahf
jae
jnp
test
nop
mov
retf
sub
dec
xchg
push
cmp
sar
dec
push
movs
inc
sub
iret
xchg
call
sahf
les
jno
outs
(bad)
fwait
jbe
add
mov
imul
inc
push
nop
sbb
pop
push
inc
mov
xor
sub
add
daa
les
xor
mov
enter
(bad)
into
inc
jecxz
nop
jmp
imul
dec
push
push
mov
out
std
sbb
into
sbb
or
pop
push
lods
mov
test
ins
scas
mov
mov
jae
dec
xchg
addr16
add
jg
xchg
push
dec
hlt
xchg
cmp
aam
jns
or
mov
cmps
pop
xchg
cmp
out
and
cmp
push
or
retf
je
test
clc
test
xor
and
fs
(bad)
out
ja
mov
popf
dec
cmp
inc
or
mov
popa
xchg
push
int
dec
add
inc
enter
outs
mov
pusha
icebp
add
push
push
mov
test
ret
rcl
sbb
xor
inc
(bad)
jmp
ja
push
add
jp
mov
jp
loope
jge
fdivp
aaa
cmps
xor
jne
mov
fimul
dec
mov
ret
paddsb
bound
inc
or
sbb
sbb
mov
mov
ret
cmp
xor
and
js
addr16
(bad)
mov
jb
out
sbb
jmp
cli
lods
shl
ja
xchg
ds
sahf
aaa
pop
test
xchg
fs
call
(bad)
jge
mov
rol
dec
adc
mov
sar
xchg
cmc
adc
test
mov
(bad)
aas
xchg
fucomi
inc
push
adc
sub
paddd
or
xchg
pop
call
mov
sub
jbe
mov
cmc
jp
mov
add
add
rcl
pop
scas
inc
lods
fs
jmp
sbb
mov
jb
add
je
movs
or
cmp
sbb
mov
repz
inc
int
pop
inc
pop
and
jne
xchg
imul
movs
mov
in
ret
sub
lea
mov
test
or
push
sub
dec
shl
mov
jl
test
mov
loop
ja
das
push
mov
(bad)
popf
push
loope
rcl
call
jno
or
clc
popf
jo
or
push
sub
add
out
cmps
cmp
les
push
sbb
cwde
mov
leave
pop
sub
or
das
sbb
jmp
add
push
sub
cmp
adc
imul
aad
data16
xchg
push
xor
popa
cmp
pop
pop
sbb
fldenv
loopne
mov
or
xor
add
loop
dec
mov
fbstp
loope
or
mov
sbb
repz
sbb
push
shl
sub
adc
mov
test
pop
js
push
jbe
cdq
movs
mov
stos
sahf
inc
dec
or
fldcw
inc
mov
sbb
jne
or
(bad)
out
cdq
jl
cwde
mov
test
cwde
sti
lds
push
ret
outs
push
and
xchg
inc
hlt
daa
cli
and
adc
mov
cmps
dec
fst
(bad)
mov
mov
xchg
jp
xor
or
mov
int3
outs
in
pop
out
test
call
imul
adc
jmp
push
sub
push
popa
xor
cmps
lods
movlhps
xchg
dec
mov
mov
adc
pop
mov
ds
rcl
push
add
aam
cmp
pop
mov
add
into
fisubr
rcl
mov
les
cmp
xchg
popf
in
cs
adc
lahf
add
fisttp
sbb
push
jb
push
dec
neg
test
outs
add
mov
div
es
arpl
sub
mov
jb
pop
(bad)
das
sti
sub
add
and
adc
lahf
adc
mov
push
lds
mov
(bad)
clc
hlt
sahf
ret
test
inc
jnp
jge
hlt
rcr
xchg
mov
inc
jno
cmps
shr
imul
fstp
les
pop
(bad)
in
fcom
jo
xchg
jmp
pop
or
cmps
push
sbb
stos
or
mov
cmp
loop
or
js
out
aad
xchg
or
sbb
mov
mov
mov
stc
mov
and
jae
fucomip
or
pushf
inc
sub
inc
push
test
jmp
cmp
stos
add
(bad)
test
sbb
xchg
mul
pop
and
and
vmwrite
xor
cmp
mov
adc
mov
iret
inc
mov
fidivr
out
lahf
mov
hlt
mov
dec
sbb
mov
jbe
ins
inc
mov
dec
int3
and
std
mov
push
push
mov
sbb
imul
or
add
call
addr16
lea
sub
mov
enter
sbb
cmp
inc
dec
repz
sbb
mov
ins
repnz
popa
jno
cmp
and
or
in
je
loop
stos
int3
in
xor
pop
adc
scas
popf
xchg
cmp
cmc
mov
lahf
jmp
and
xchg
and
lock
imul
movs
fwait
in
dec
add
addr16
pop
ja
scas
sub
jae
dec
cmp
xchg
cs
inc
ret
add
popa
inc
lock
jb
and
je
lods
adc
aam
pop
test
lods
fdivrp
nop
popa
test
mov
pop
sbb
or
mov
jnp
pushf
lods
in
popf
add
movs
cmc
pop
add
sub
adc
sbb
int
add
sbb
pop
mov
test
fs
jne
scas
and
or
fs
in
arpl
sbb
sub
neg
fnstcw
and
ret
sub
in
cmp
rol
jb
(bad)
dec
mov
shr
sub
imul
std
test
cmps
loop
jmp
pop
jmp
or
pop
dec
sahf
push
(bad)
sub
sbb
and
leave
add
out
xchg
dec
add
sahf
sbb
(bad)
and
pushf
push
cmp
xor
cmp
pop
mov
data16
mov
add
idiv
inc
adc
xchg
sub
call
mov
mov
mov
jle
ficom
out
jno
jnp
sub
sbb
sti
push
adc
inc
dec
mov
je
fsubr
adc
addr16
in
mov
cwde
add
nop
out
jp
cmps
jo
mov
jecxz
jo
je
xor
jno
adc
jmp
pop
ficom
out
sub
mov
cmp
push
push
xchg
inc
jge
jecxz
(bad)
fucomi
cmp
outs
mov
cmp
pop
and
adc
aaa
bound
lea
mov
sbb
int3
mov
lahf
xchg
pushf
ss
movs
xor
push
out
cdq
arpl
imul
pop
test
shl
and
push
ror
test
mov
mov
test
scas
dec
in
xlat
ds
int3
cmps
xchg
rol
adc
out
add
push
inc
clc
stos
lods
imul
cmps
mov
or
adc
push
mov
lahf
push
int
mov
mov
mov
pop
xchg
add
mov
xlat
mov
inc
jge
repnz
dec
mov
pop
es
jecxz
sub
xor
mov
pop
cmp
(bad)
je
add
inc
ficomp
scas
jb
imul
rcr
test
enter
mov
popf
mov
icebp
es
arpl
scas
or
aas
inc
outs
xor
xor
push
pop
shrd
out
mov
cdq
cwde
cs
test
xor
(bad)
inc
das
inc
fcomp
out
xchg
call
and
nop
movs
hlt
xor
sbb
in
and
xchg
into
push
out
mov
dec
pop
add
pop
sbb
imul
iret
test
mov
out
push
(bad)
mov
bound
xchg
ficomp
mov
xor
pop
cs
ret
and
mov
inc
popf
mov
lds
mov
ficomp
call
sbb
xor
cmp
mov
sub
xor
fcomp
mov
jne
gs
xchg
pop
push
(bad)
out
push
mov
add
int3
mov
repz
cmp
dec
adc
test
sbb
mov
or
dec
in
das
jg
nop
ja
icebp
loope
sbb
xor
in
stc
mov
call
dec
outs
call
xchg
xor
sbb
and
mov
xchg
sbb
outs
mov
mov
mov
retf
pop
mov
sti
out
repnz
and
mov
mov
push
adc
pop
or
and
rcr
pop
mov
add
jmp
pop
sub
je
nop
jae
pop
test
push
pop
push
mov
add
add
test
inc
hlt
movsx
imul
(bad)
push
jne
pop
and
loop
outs
outs
imul
cmp
bound
in
cli
sbb
cmp
iret
sets
movs
mov
adc
test
fstp
mov
jecxz
fsub
jge
xor
jp
out
pop
pop
bound
xor
rcr
inc
data16
add
cmp
vmwrite
add
test
inc
jmp
and
and
cmps
xlat
loop
rol
je
ja
xchg
mov
xchg
lods
das
call
push
pop
cdq
dec
test
punpcklwd
out
std
mov
sahf
xlat
inc
jecxz
jns
mul
xchg
pushf
pop
adc
xlat
cmc
inc
rol
mov
and
fld
dec
mov
adc
popf
lods
inc
jle
xchg
enter
pop
js
xchg
or
jmp
mov
loopne
jae
xor
xchg
dec
hlt
loope
jmp
into
mov
dec
sbb
loope
jne
popf
xlat
push
lods
sbb
fs
mov
push
lods
push
outs
movs
ds
cmp
inc
js
mov
cmps
xor
call
jnp
daa
add
jb
sbb
or
adc
inc
(bad)
and
(bad)
mov
pop
mov
cmp
into
pop
out
cwde
mov
dec
hlt
test
sahf
sbb
adc
enter
mov
loope
push
push
pop
cwde
sbb
arpl
(bad)
jge
nop
out
and
(bad)
clc
ds
jle
(bad)
dec
sbb
(bad)
lahf
mov
faddp
addr16
add
mov
fbld
or
hlt
js
test
aas
ret
outs
out
outs
inc
mov
gs
xchg
fs
lods
xor
dec
gs
add
dec
mov
jg
imul
xchg
sbb
mov
adc
jecxz
ret
cpuid
enter
call
jmp
movs
enter
out
pop
stos
cwde
push
out
(bad)
in
push
int3
jge
xor
vmwrite
mov
popf
jmp
mov
mov
sar
adc
add
(bad)
adc
lock
stc
int3
pop
mov
push
mov
dec
shl
mov
ja
aad
xor
pop
jae
pop
and
sbb
cmp
rcr
sub
inc
leave
jno
stos
int
sbb
add
and
xchg
and
push
clc
jmp
push
test
cmps
in
mov
ja
sbb
pop
dec
pop
jmp
imul
xchg
and
jecxz
repnz
ds
push
shr
adc
(bad)
mov
fstp
jge
out
dec
sub
ss
stos
and
movs
ss
push
loope
lods
stos
mov
sar
or
in
clc
cwde
sbb
out
inc
mov
aam
xchg
retf
in
or
pop
sti
into
hlt
sbb
fnstsw
push
outs
cwde
rcr
add
call
pop
rcr
push
rcr
adc
sub
(bad)
mov
in
lock
call
xchg
fst
mov
mov
ja
mov
fild
push
mov
daa
int3
mov
dec
xchg
mov
pop
or
jge
lea
lods
(bad)
lods
imul
sub
mov
lea
stc
fisttp
inc
sbb
pop
movs
aaa
or
cli
mov
je
les
daa
mov
add
adc
lahf
test
jb
test
mov
fmul
cld
xchg
cmp
xor
adc
add
std
nop
add
and
mov
or
ror
dec
and
(bad)
cmc
and
add
sub
xchg
rcr
add
retf
fwait
aam
or
mov
mov
push
repnz
mov
(bad)
mov
addr16
cmps
lods
pop
movs
(bad)
mov
fwait
or
pop
jg
pop
inc
jbe
add
push
imul
sub
adc
movs
outs
jns
mov
inc
enter
ja
js
push
cdq
stos
push
adc
arpl
aaa
pushf
push
or
xor
sbb
out
inc
not
sahf
mov
push
nop
into
jne
jne
pop
sbb
test
ins
and
sbb
sbb
cmp
shl
add
pushf
test
cmp
inc
or
pushf
add
inc
jo
mov
jb
pusha
call
push
sub
inc
xor
xchg
jle
sub
pop
xor
sub
test
or
movs
outs
cmp
mov
mov
sub
inc
xor
sub
sbb
mov
(bad)
js
sbb
xor
mov
pop
gs
ror
mov
in
and
repz
push
rcl
repz
fs
push
adc
mov
mov
push
int
jb
xchg
adc
mov
test
bound
cmp
je
mov
dec
pusha
(bad)
leave
sti
ret
in
enter
inc
icebp
sub
in
or
(bad)
jecxz
and
inc
(bad)
test
repnz
cmp
loop
or
mov
mov
xor
sub
retf
mov
loop
repnz
pop
cmc
cmps
cmp
cmp
inc
xchg
push
adc
push
sub
test
int
pop
enter
adc
push
ds
pusha
jns
cmp
inc
aaa
and
loop
dec
out
scas
jmp
dec
or
add
or
dec
aam
retf
sbb
pop
xor
retf
jnp
mov
pop
xchg
cmps
call
sub
clc
enter
aad
inc
cdq
mov
push
pop
jns
out
cli
and
xchg
add
push
or
fcom
jecxz
or
in
cmc
fadd
mov
mov
xchg
jns
add
std
sbb
in
mov
or
adc
xchg
xor
inc
loope
pop
mov
or
pusha
cmps
sar
popf
and
jle
aaa
and
jne
cmps
enter
jno
inc
leave
fdiv
sub
adc
pop
push
adc
mov
push
loop
mov
pop
ficom
in
jp
xchg
aaa
pop
(bad)
push
and
push
mov
mov
cmp
and
push
mov
pop
xchg
pusha
lahf
cmove
mov
daa
test
inc
imul
inc
push
push
ins
nop
es
leave
xor
push
int
jae
lods
mov
push
add
int3
neg
mov
jl
in
push
push
dec
add
jbe
aad
xor
adc
out
fdivr
or
jbe
push
lds
jecxz
ror
or
fisubr
cmp
adc
sub
or
scas
and
in
inc
pop
neg
aam
mov
call
je
jno
hlt
repz
(bad)
stos
and
xchg
sbb
shr
mov
inc
ret
or
in
pop
or
enter
aad
call
aaa
push
cmp
leave
xor
mov
inc
and
movs
mov
inc
mov
xor
jbe
adc
sub
sub
(bad)
mov
sub
nop
shl
scas
lea
push
sbb
les
cwde
inc
xor
mov
sub
ins
daa
push
jns
clc
lock
js
and
js
scas
(bad)
cmp
fisttp
sbb
cmp
or
in
cmps
pop
xor
sub
jnp
ss
cdq
arpl
xchg
lods
cmp
and
sub
(bad)
mov
jl
mov
(bad)
xlat
(bad)
cmps
ss
cmp
fsubr
push
inc
movs
xchg
scas
mov
fs
es
addr16
mov
repnz
push
iret
jo
int
sbb
jle
xchg
xor
push
push
mov
aaa
push
and
ins
ja
sar
mov
aas
or
push
adc
xor
iret
rcl
sub
pop
loop
hlt
int3
and
jmp
mov
lods
jmp
(bad)
aam
inc
pop
sub
sbb
sti
jmp
add
mov
sbb
xchg
aam
cmp
mov
add
mov
into
cmps
jmp
push
loope
lods
dec
(bad)
or
in
es
pop
loope
mov
or
mov
mov
push
sub
xor
mov
pop
dec
into
test
shl
das
adc
cli
sbb
fisubr
push
sub
leave
cmp
test
push
xor
mov
mov
add
outs
dec
xchg
hlt
mov
test
cli
inc
inc
xchg
dec
mov
add
add
mov
ins
popa
into
mov
ins
jne
mov
dec
xchg
imul
push
sbb
js
test
mov
jp
cmp
popf
xlat
in
(bad)
dec
xchg
in
cmp
dec
push
sub
cmp
xor
into
sub
sub
(bad)
jmp
adc
in
xchg
lods
mov
inc
cmps
into
ins
sub
aad
and
test
add
jl
push
push
stos
pop
aas
mov
fstp
ins
cli
retf
push
mov
xchg
pop
jo
fidivr
enter
out
es
ins
jnp
enter
pop
push
iret
out
cmp
iret
mov
jl
retf
mov
fucompp
loope
retf
in
sbb
mov
outs
pop
dec
mov
cmp
(bad)
repnz
leave
jns
sbb
cmp
in
lods
cmp
jmp
dec
cs
call
mov
jnp
mov
xchg
mov
cmp
add
pop
inc
mov
xchg
call
movs
mov
sbb
data16
jne
xchg
dec
js
mov
mov
jns
arpl
mov
cmp
cwde
rol
cs
jbe
aam
cmps
(bad)
push
popa
xchg
or
jp
or
mov
scas
das
(bad)
fwait
inc
es
xor
xor
cdq
repnz
dec
retw
daa
push
mov
adc
retf
jg
imul
adc
dec
jl
clc
(bad)
bound
and
xchg
rol
fiadd
or
sub
jb
ret
cmps
popf
clc
xor
out
inc
popf
cmps
cs
mov
(bad)
sub
ficom
jg
jns
adc
dec
xchg
aaa
push
dec
pop
xchg
adc
mov
fs
rcr
sbb
sbb
fcom
fisttp
out
mov
push
xor
and
out
daa
(bad)
jg
sbb
adc
cmc
pusha
add
push
and
and
(bad)
mov
nop
int3
sbb
imul
add
push
ss
xor
loopne
mov
call
jno
out
in
inc
inc
dec
mov
lods
outs
sbb
stc
int
es
shr
mov
adc
mov
sbb
sub
xor
repz
xlat
imul
popf
movs
push
sbb
jo
or
gs
les
xor
cmp
sbb
cli
dec
(bad)
jno
popf
cld
mov
scas
dec
rol
add
nop
push
pop
call
or
push
cmp
adc
retf
cmp
lods
mov
ret
inc
mov
cmp
dec
in
add
mov
adc
mov
mov
out
sbb
shl
test
mov
adc
add
lods
fistp
push
(bad)
dec
xchg
dec
scas
jecxz
jae
cmps
cmp
retf
inc
gs
and
enter
xchg
scas
jbe
imul
loopne
js
mov
arpl
(bad)
bound
sbb
scas
je
ds
sub
jg
(bad)
mov
lods
into
pop
scas
out
ret
sbb
repnz
and
daa
mov
mov
push
(bad)
in
xor
cmps
clc
xchg
add
ins
jecxz
and
and
push
add
inc
test
add
pop
scas
cmp
popa
cmp
int
dec
adc
mov
xchg
in
leave
(bad)
dec
mov
shr
gs
gs
or
fnstsw
xchg
mov
adc
xlat
js
adc
mov
push
adc
mov
sub
(bad)
mov
pop
lock
push
inc
leave
ins
ficomp
lods
ret
add
dec
pusha
sbb
fistp
dec
stos
push
dec
inc
cmp
fcomi
xor
mov
and
lods
add
adc
aas
and
dec
pop
jbe
rcr
push
xchg
inc
cmp
outs
leave
mov
adc
sub
shr
mov
xchg
fnstenv
adc
xor
btc
sbb
jne
mov
push
stos
push
mul
enter
mov
retf
ret
cld
in
movs
and
movs
sbb
adc
in
mov
and
push
xchg
cmp
push
mov
mov
sbb
test
cmps
loope
pop
fisubr
cmps
out
pop
retf
add
xchg
outs
movs
bound
jbe
adc
pop
in
and
lock
(bad)
icebp
pop
in
dec
fld
inc
retf
hlt
aam
test
ret
cmp
adc
inc
outs
pop
xor
ret
aad
out
push
xchg
das
jo
mov
cmp
mov
or
jp
leave
imul
cmp
call
rol
pop
adc
daa
or
ins
xchg
nop
mov
in
popf
out
adc
sub
inc
ret
cmp
ret
pop
pop
mov
js
retf
or
xor
xor
mov
mov
xor
sub
inc
mov
adc
sbb
dec
fild
push
div
leave
push
mov
in
cmp
hlt
imul
(bad)
ucomiss
add
aad
imul
jae
dec
mov
or
mov
lahf
jo
xlat
mov
mov
sar
jecxz
(bad)
jbe
jge
pop
or
adc
adc
jmp
lahf
mov
lds
sahf
xchg
push
iret
jne
xchg
sub
and
pop
inc
or
sbb
dec
cmp
stos
or
xor
mov
jecxz
mov
xor
rcr
outs
mov
aad
and
push
lods
jbe
mov
pop
pop
sub
or
lahf
(bad)
cdq
jecxz
add
sub
mov
or
mov
into
pop
enter
mov
ret
nop
nop
das
mov
ror
test
out
mov
inc
ror
sub
dec
fiadd
adc
mov
hlt
xchg
fdivr
adc
imul
mov
cli
scas
jl
clc
test
lds
loop
(bad)
xor
mov
fcom
jno
enter
out
pop
and
cdq
(bad)
aam
mov
or
scas
xchg
sbb
aaa
shl
leave
sub
inc
icebp
pusha
sub
(bad)
and
ins
adc
loopne
jmp
loop
cmp
dec
fcmovbe
enter
dec
and
mov
test
imul
inc
fimul
jnp
push
xor
and
or
cmc
push
aad
out
cmp
mov
mov
mov
iret
mov
(bad)
je
adc
lock
out
call
mov
sbb
mov
(bad)
and
cmp
inc
ins
xchg
pop
sub
rcl
ds
mov
sub
sub
imul
jns
aas
lods
into
ret
sbb
and
sbb
loop
or
fstp
je
mov
out
dec
test
mov
rcl
sbb
push
pop
adc
jne
cld
and
fwait
loope
jp
into
dec
xchg
mov
and
jg
add
int
mov
adc
sbb
mov
in
stos
daa
sbb
xor
into
cmps
iret
aaa
stos
not
inc
xchg
pop
sahf
jl
dec
jl
pop
inc
sbb
adc
push
stc
lock
or
pushf
sub
xchg
dec
mov
pusha
lea
jl
in
test
aam
mov
dec
lahf
jl
sub
inc
ds
mov
daa
jecxz
sti
mov
push
dec
xor
or
outs
aas
sbb
adc
addr16
addr16
xchg
push
xchg
inc
jmp
mov
cld
mov
jne
cmps
adc
add
fist
sub
mov
test
cmp
mov
sub
sub
sbb
(bad)
jp
push
ret
jae
movs
xor
mov
shl
js
call
push
jecxz
cmc
loopne
sbb
aaa
ins
(bad)
repnz
cmps
pop
and
fiadd
jb
adc
sti
jae
inc
fwait
inc
ds
int
js
aad
dec
add
fidivr
les
jo
mov
stos
mov
mov
in
mov
pop
(bad)
or
test
es
and
xor
into
ins
jle
xchg
out
add
inc
sub
xchg
jle
pop
pop
cmp
pushf
stos
mov
imul
pop
xchg
popa
push
int
(bad)
pop
mov
xchg
rcl
in
add
sbb
jbe
shr
je
add
repnz
pop
pop
pop
int
je
shl
pop
add
das
outs
push
ja
cmp
das
shl
bound
xchg
cmp
sbb
call
xchg
mov
stos
push
push
and
sbb
call
repz
pop
push
jmp
xchg
nop
or
xor
fcmovnb
in
push
pop
jge
ja
pop
lock
mov
jo
adc
mov
lock
sub
hlt
int
lock
test
jo
retf
pop
dec
movs
xchg
(bad)
mov
pop
int3
add
cmc
in
lods
or
popf
ret
jns
push
cmc
stc
mov
loope
fisub
jmp
loope
adc
(bad)
aam
shl
call
cmc
cmp
call
pop
sbb
cwd
mov
int3
ins
adc
rcl
or
cs
jbe
ror
retf
mov
mov
jb
fwait
inc
aad
and
push
mov
inc
xchg
add
sub
jb
xlat
xchg
jns
ja
mov
aas
enter
cmp
mov
and
movs
out
lods
push
jl
cmps
xor
mov
clc
std
jmp
adc
pop
call
or
fcomp
sbb
in
xchg
xchg
lea
dec
fs
push
sub
and
inc
dec
and
xchg
clc
pop
sub
pop
cmp
gs
jo
adc
cmps
cmc
div
popf
push
add
add
or
outs
sub
push
sub
in
sahf
fadd
mov
dec
leave
mov
gs
cli
call
stos
jmp
mov
jmp
push
add
ss
mov
lds
add
cdq
mov
scas
mov
ins
push
(bad)
xor
xchg
xor
push
stos
icebp
pop
jl
test
lea
or
lods
fs
(bad)
pop
jbe
mov
gs
inc
sub
movs
test
movs
ins
in
nop
dec
push
or
neg
stos
jae
jge
scas
mov
into
das
inc
lods
movs
mov
idiv
mov
push
pop
mov
adc
cmp
sub
push
add
xor
xor
aam
adc
push
inc
pop
inc
fs
in
fist
addr16
push
xchg
adc
push
dec
shr
es
sbb
jmp
das
adc
adc
dec
mov
mov
dec
fs
call
cmp
push
sub
push
retf
adc
mov
cdq
cmp
jae
mov
call
mov
push
pop
pop
sub
push
cmp
push
xchg
push
push
xor
pop
push
xchg
aas
fisub
mov
lock
fwait
sbb
jb
hlt
xchg
aas
retf
cmps
xchg
pushf
jnp
ds
xchg
mov
xor
xlat
xor
sub
and
push
movs
jmp
pop
pop
cld
sub
or
fld
mov
cli
and
sub
sti
push
fcmovnu
adc
lea
sti
aam
xchg
mov
mov
xlat
ins
fs
fs
add
(bad)
xor
sub
push
add
xchg
(bad)
xor
shl
xor
pop
xor
add
mov
mov
push
and
out
dec
retf
pusha
fdiv
aad
xchg
mov
jecxz
cmc
mov
fsub
js
jae
add
sub
dec
pop
es
xchg
xchg
daa
xchg
pop
sbb
ret
xchg
sbb
mov
xchg
mul
(bad)
pop
push
mov
sub
cmp
or
mov
in
adc
inc
push
je
in
pop
jmp
(bad)
fxtract
dec
repnz
adc
mov
movs
pop
repnz
pushf
fnstsw
mov
mov
add
(bad)
xchg
inc
sub
popf
mov
shl
cmp
rcr
dec
data16
sub
mov
jbe
pop
adc
daa
imul
loop
into
shr
mov
stc
inc
cmp
(bad)
(bad)
jae
test
mov
nop
(bad)
mov
jl
inc
(bad)
int3
dec
mov
xor
call
scas
dec
aaa
and
aam
mov
scas
mov
cld
cld
adc
mov
fild
mov
and
cmp
inc
cmp
(bad)
cli
pusha
jno
ror
mov
outs
push
test
push
fs
sbb
lods
add
sub
cdq
push
or
jp
movs
(bad)
hlt
repz
inc
aam
mov
xlat
sub
lea
popa
pop
(bad)
jecxz
out
in
sti
jbe
scas
or
mov
xchg
adc
inc
jnp
inc
dec
jmp
scas
retf
(bad)
mov
mov
adc
and
xor
(bad)
jle
push
cmp
jle
inc
call
int3
vmwrite
stc
xlat
out
mov
xor
cwde
shl
cdq
cld
(bad)
mov
stos
in
pop
jnp
xor
mov
mov
aam
xchg
in
mov
scas
ret
sbb
inc
movs
mov
pop
shr
test
mov
nop
dec
push
sbb
mov
je
lea
add
ret
jno
add
mov
mov
outs
stos
nop
in
push
pop
adc
xlat
mov
dec
and
pop
je
mov
cmp
xchg
dec
call
cmp
pop
jle
xor
mov
or
test
or
outs
imul
pop
std
pusha
fcomp
es
mov
sbb
(bad)
(bad)
adc
mov
jno
mov
popa
in
cli
cmp
add
stos
mov
push
es
mov
mov
fcomp
sahf
or
xor
mov
loopne
xchg
stos
jp
fcmovu
mov
leave
mov
mov
outs
mov
mov
fstp
xchg
ins
pusha
aad
fcomp
cwde
scas
pop
xchg
cwde
cwde
(bad)
outs
mov
push
in
mov
dec
cmps
rol
dec
sbb
retf
adc
jle
pop
jno
stos
and
test
jne
and
invd
sbb
jae
pop
loop
adc
push
or
scas
pop
jecxz
push
jbe
xchg
repnz
xor
xchg
push
ficom
sub
sub
retf
pop
push
sahf
push
mov
dec
(bad)
loop
push
adc
add
fst
cmp
xor
or
jecxz
add
sub
nop
sub
push
fidiv
mov
pop
std
mov
lea
or
and
inc
push
and
mov
add
pop
in
and
push
cmps
xchg
test
xor
sub
scas
push
clc
rcl
inc
dec
scas
dec
adc
jb
jb
adc
xchg
xchg
jl
cwde
popa
arpl
je
ret
popa
ins
sub
dec
dec
rol
pop
imul
test
shr
xchg
(bad)
cmps
mov
(bad)
push
dec
sub
cld
and
shr
jnp
xchg
adc
adc
ja
jns
push
push
in
mov
in
jb
cdq
pop
das
mov
or
push
push
shr
adc
dec
out
and
(bad)
pop
clc
mov
ja
aad
jns
or
or
mov
cwde
cli
lock
xchg
ja
fwait
mov
xor
fld
sbb
adc
movs
fld
cmp
jl
mov
jl
test
push
stos
movs
leave
movs
xor
repz
neg
dec
add
xchg
mov
push
mov
push
inc
int3
fstp
xlat
ins
into
repz
sbb
mov
jmp
(bad)
pop
jmp
cmp
jmp
fadd
jg
xor
sub
jae
xor
ss
test
imul
xor
fldenv
xor
ffreep
cmp
or
dec
into
sub
cmp
adc
fwait
dec
repnz
cld
push
xor
mov
jo
jg
jno
push
add
sbb
push
jmp
pusha
or
or
cmp
xchg
les
test
push
jae
loopne
xchg
xchg
out
cmp
les
iret
call
mov
cwde
into
les
sub
mov
xor
int3
dec
jmp
dec
pop
fcomp
inc
inc
les
(bad)
fstp
stc
mov
lods
pop
mov
les
ficom
int3
mov
push
mov
scas
cld
popa
push
pop
test
imul
pop
test
or
add
sub
js
out
(bad)
sub
jne
mov
loope
and
cmp
pop
mov
mov
jns
push
add
mov
enter
push
aaa
jae
or
dec
cwde
aaa
mov
shr
jecxz
into
mov
mov
lahf
test
stc
xor
mov
inc
int3
pop
les
xor
stc
movs
pop
retf
ins
mov
and
adc
sbb
into
cmps
cdq
jge
jmp
sbb
into
adc
inc
cmc
pop
neg
jp
std
rcr
pop
add
rcl
ss
mov
test
dec
out
xor
outs
cs
mov
mov
or
test
cmp
inc
(bad)
lock
mov
movs
fsubr
jl
cmp
ss
mov
call
jbe
es
mov
cmp
out
mov
movs
aaa
sti
fwait
js
xor
iret
rcl
inc
inc
cmp
retf
jbe
dec
js
push
jno
or
nop
inc
imul
stos
xchg
or
retf
stc
dec
(bad)
rcl
es
jmp
loopne
dec
pop
neg
into
fld1
cmp
sbb
movs
cmps
cli
mov
outs
push
mov
xchg
xchg
loope
and
pushf
fnsave
dec
icebp
adc
mov
push
shr
fadd
sbb
fnstsw
jp
inc
icebp
sbb
jnp
xor
sar
inc
sbb
js
dec
push
xchg
fstp
test
cmp
adc
imul
ds
or
jge
and
lds
jmp
push
add
int
adc
mov
cmp
mov
dec
xor
jge
push
or
fsub
push
cwd
cmp
add
sub
arpl
ficom
cmps
fbld
mov
or
stos
int3
lds
enter
or
sbb
sahf
fstp
out
cmp
(bad)
and
add
scas
pop
mov
cmp
gs
imul
call
ins
fcom
mov
sbb
lds
out
or
mov
xchg
or
or
mul
push
sbb
xor
fld
movs
pop
imul
sbb
pop
sub
mov
sub
lock
xchg
sub
leave
add
mov
mov
scas
mov
into
mov
cmp
adc
rcr
popa
jmp
clc
cli
test
add
push
push
jno
cmp
shl
sbb
push
mov
mov
nop
sti
dec
xchg
xor
inc
arpl
dec
mov
inc
(bad)
rol
mov
jb
retf
adc
shl
addr16
mov
lods
test
fs
test
xor
sahf
fcom
xor
lea
stos
and
aas
jae
cmp
repz
and
xlat
mov
loope
add
stc
cmp
into
ret
mov
mov
fwait
inc
outs
dec
xor
add
jp
dec
mov
fbstp
sbb
mov
pop
into
rcl
test
(bad)
xchg
pop
mov
jb
into
xchg
std
pop
hlt
je
xchg
fcom
sbb
pop
mov
sbb
arpl
in
xor
jl
mov
loop
mov
(bad)
mov
sub
push
xchg
in
xchg
icebp
xchg
add
pop
rcl
out
push
sub
inc
and
out
shl
jo
enter
mov
or
call
jl
jo
(bad)
call
fdiv
div
mov
mov
xchg
jns
xor
mov
(bad)
arpl
xchg
lods
mov
mov
inc
mov
pop
lahf
sbb
add
(bad)
ficom
fsubr
mov
mov
ds
jnp
icebp
lods
push
xor
dec
mov
adc
pop
clc
mov
aas
xchg
mov
movs
push
or
lahf
out
push
add
mov
cmps
xchg
push
mov
in
scas
xor
xor
xchg
jg
xlat
popf
jno
jl
jg
mov
mov
ret
mov
(bad)
xlat
sti
(bad)
loopne
lock
std
test
cmp
repz
popf
and
pop
loope
pop
and
ror
mov
jbe
and
test
not
cmps
push
jnp
mov
pop
jae
mov
push
push
pop
movs
imul
mov
xchg
stos
adc
loopne
pushf
mov
xchg
cmovne
sbb
jle
mov
pop
xchg
loope
ja
inc
retf
iret
mov
popf
movs
add
jecxz
add
(bad)
adc
xor
jb
xchg
loopne
gs
mov
les
or
data16
(bad)
xchg
dec
enter
cli
cmps
cdq
cs
sbb
cmc
aam
mov
or
cmp
stos
sbb
mov
mov
(bad)
mov
arpl
bound
jno
out
movs
(bad)
push
lock
jnp
scas
pop
inc
cmp
stos
pop
call
pop
fstp
dec
cmp
jecxz
scas
jmp
dec
ret
cmp
xchg
fnstcw
and
enter
cmp
adc
jne
and
lock
daa
iret
lock
pop
ins
lea
mov
je
jecxz
outs
sbb
(bad)
in
push
imul
mov
ss
push
and
dec
xlat
jo
mov
or
dec
popa
push
push
mov
push
movs
(bad)
xlat
add
push
bound
xor
test
dec
in
adc
mov
std
push
lods
pusha
push
sub
(bad)
retf
imul
jb
jp
dec
aaa
lods
jmp
jg
movs
jmp
les
fucomip
sbb
std
jno
dec
xor
push
out
lahf
push
clc
xchg
mov
or
xchg
out
or
add
popa
xchg
xchg
cwde
movs
ret
add
test
pusha
xor
jns
ror
inc
sbb
popf
adc
push
mov
shl
sub
xor
stos
repnz
pusha
push
jg
mov
jle
and
or
mov
pop
scas
arpl
div
or
jg
out
jne
xchg
popf
inc
repz
loop
test
mov
fcmove
lgs
js
(bad)
not
(bad)
push
xor
xor
xor
movs
js
pop
xor
addr16
iret
out
jecxz
push
sti
dec
mov
push
xchg
mov
bnd
repnz
dec
stc
mov
sbb
dec
push
jne
loope
jecxz
icebp
ja
cmps
push
(bad)
int
sbb
dec
mov
adc
push
cmp
iret
jg
and
pop
ds
mov
sub
xchg
cdq
retf
pushf
loop
inc
cmp
dec
inc
pop
or
inc
dec
pushf
scas
mov
enter
js
daa
xor
imul
(bad)
fldenv
call
pop
fcmovbe
xor
dec
cdq
sbb
les
into
dec
icebp
retf
cmp
scas
js
inc
pop
inc
into
mul
adc
cmp
push
movs
nop
dec
fninit
les
aaa
iret
pushf
push
call
outs
and
dec
cwde
xchg
xchg
dec
inc
pusha
ror
popf
push
loop
xlat
push
popf
hlt
daa
out
stc
ins
fistp
stos
xchg
bound
fisttp
leave
outs
add
ja
xor
cmp
popa
xchg
cmp
push
or
push
jno
pop
pop
pop
inc
(bad)
frstor
mul
push
lds
inc
mov
call
aas
outs
shr
cld
popa
cmp
scas
retf
cmp
(bad)
int
fld
shl
pop
int3
ja
xor
sbb
xor
adc
scas
jnp
mov
xchg
adc
dec
dec
mov
dec
jmp
fisttp
(bad)
addr16
cmp
cs
lods
pop
daa
xchg
adc
push
dec
mov
mov
dec
jno
xor
pusha
sbb
dec
jg
out
imul
jmp
stos
or
push
cmp
jbe
sbb
xchg
cmc
mov
shr
shl
fdiv
sub
adc
das
xor
mov
sbb
inc
push
enter
call
hlt
and
xor
test
jnp
jle
into
add
addr16
dec
mov
loop
outs
gs
outs
ret
mov
sbb
pop
sub
ins
iret
cmp
pop
mov
jmp
test
in
out
sbb
adc
push
cmp
jmp
pop
mov
shl
in
ss
hlt
arpl
les
(bad)
push
or
sub
inc
inc
inc
xor
xor
jmp
mov
xchg
cmp
fdivp
pop
outs
out
loope
xlat
push
mov
jecxz
or
add
loope
adc
jne
jae
and
inc
push
dec
test
das
aam
pop
push
jbe
bound
dec
std
sub
loop
stos
push
mov
into
inc
lods
je
fcomp
cmc
fbld
jp
pop
push
out
sub
imul
out
or
je
scas
loope
daa
mov
(bad)
xlat
popf
dec
repnz
jb
fbld
or
call
int3
xor
add
repnz
call
jb
push
ret
mov
call
(bad)
sar
sub
outs
and
mov
in
pusha
cmp
xor
rol
loopne
clc
jbe
jmp
adc
test
jo
or
xchg
sbb
mov
mov
jbe
mov
sub
addr16
mov
scas
cmp
test
mov
add
and
push
add
cmps
fucomip
repnz
lds
mov
xor
push
push
imul
popf
sbb
pop
les
adc
icebp
inc
rol
and
sbb
fisub
cdq
xchg
mul
dec
mov
outs
arpl
inc
mov
lods
or
mov
jns
mov
mov
mov
cmps
add
mov
mov
rcl
ja
mov
or
pusha
sbb
int3
xchg
xchg
add
int3
mov
xor
pop
sahf
sub
jmp
sbb
xor
push
or
mov
inc
fs
fmul
test
mov
xchg
sub
sbb
xor
cmc
dec
outs
sub
or
mov
inc
(bad)
fcmovne
data16
add
adc
cmp
sar
xor
dec
jge
inc
mov
push
jecxz
xor
push
test
out
and
js
popa
dec
sbb
inc
xor
stos
(bad)
cmc
and
or
lds
sub
leave
xchg
push
mov
leave
fcomp
out
and
mov
fiadd
pushf
mov
dec
ja
rol
repz
adc
dec
popa
cmp
jae
adc
leave
aam
add
shl
xor
jo
adc
(bad)
lea
xchg
popa
mov
std
outs
pusha
test
retf
lea
(bad)
xchg
outs
scas
mov
(bad)
mov
jp
push
mov
jbe
fisubr
mov
cmp
into
sbb
jmp
mov
test
or
outs
cmc
in
mov
out
je
mov
mov
inc
cwde
push
retf
dec
stos
in
sbb
scas
pushf
cmp
or
xchg
or
push
dec
mov
mov
dec
adc
sti
std
ret
mov
out
pop
cmp
fadd
js
jg
mov
rcl
xchg
push
or
hlt
ret
inc
in
ficomp
in
cs
shl
add
push
movs
mov
and
and
add
mov
jb
mov
fsub
lds
sbb
xor
push
inc
pusha
mov
fisub
repnz
and
test
push
inc
sub
or
sti
add
or
mov
xor
cmp
and
xor
push
sub
inc
inc
pop
fild
xlat
xchg
stos
dec
(bad)
dec
mov
movs
bound
xchg
pop
mov
sbb
sbb
cmp
sbb
or
dec
pop
sub
in
repnz
sbb
mov
mov
push
push
in
jae
jae
pop
iret
(bad)
movzx
and
or
xchg
mov
icebp
cs
sub
pop
shl
fld
and
inc
push
rcr
dec
xchg
add
push
sbb
dec
push
shr
or
cmp
out
mov
or
xchg
retf
lds
cs
cdq
push
outs
aam
test
sub
sahf
mov
mov
loopne
dec
popf
int3
fistp
retf
fisubr
ins
push
ins
mov
or
mov
test
adc
push
les
jo
mov
cli
jns
fwait
mov
test
push
add
cmp
sub
retf
adc
in
jge
cmp
das
pop
stos
lahf
adc
movs
and
mov
aaa
lahf
movs
and
mov
cwde
dec
mov
or
fucomi
push
cs
sbb
(bad)
pop
mov
fidivr
inc
fadd
xor
cwde
jno
gs
out
sahf
push
in
sar
mov
aas
aas
mov
gs
mov
stos
xor
iret
adc
push
and
out
stc
mov
aaa
sbb
inc
pushf
sub
add
gs
mov
inc
xchg
ret
lock
sub
cdq
cmps
imul
cmp
imul
mov
icebp
(bad)
xor
nop
xchg
mov
and
sub
sar
xor
mov
jecxz
jnp
(bad)
in
adc
xor
mov
sub
mov
adc
mov
sub
lods
std
rcr
mov
js
(bad)
or
adc
cmc
or
or
adc
call
xor
and
add
popf
jb
int
dec
mov
sbb
push
push
pop
jmp
dec
jecxz
test
mov
or
aam
sbb
jne
jmp
sbb
push
es
jns
add
cmp
xor
stos
lock
pop
mov
dec
xor
jb
ins
push
mov
mov
sbb
xor
adc
cdq
xor
ss
das
jmp
ja
cmove
xchg
push
in
cwde
ret
jmp
ins
mov
arpl
xchg
adc
jo
push
cmp
or
jg
loop
dec
shl
add
push
popa
repz
jae
loope
jp
loope
jle
lods
sub
adc
lods
mov
adc
mov
jno
cmp
hlt
add
ret
mov
mov
fs
(bad)
out
(bad)
ror
stos
mov
push
sbb
ins
mov
imul
lds
inc
sbb
hlt
push
add
lods
inc
std
push
imul
bound
repz
xor
push
inc
or
mov
xor
shl
and
xchg
mov
aam
pop
mov
adc
pop
push
pop
outs
cmc
bound
shl
push
add
mov
cmps
push
pop
aaa
sub
pop
or
mov
sbb
xchg
mov
rcr
mov
sbb
push
out
mov
leave
retf
movs
clc
cdq
sti
pop
stos
inc
dec
int3
xor
add
cmp
scas
(bad)
mov
mov
xacquire
mov
add
push
jns
push
add
popf
popa
movs
out
sbb
jp
pushf
sahf
cmp
cmp
dec
dec
pop
ret
sti
loope
std
sub
adc
cdq
call
ja
push
sbb
sub
scas
stc
(bad)
fs
scas
idiv
clc
add
pop
ins
mov
out
mov
imul
pop
push
add
xchg
in
pop
jge
nop
inc
xchg
push
xor
jp
xchg
lods
fistp
out
mov
(bad)
(bad)
sub
dec
fidiv
mov
test
add
mov
jp
xor
outs
clc
inc
jo
sar
cli
hlt
out
adc
xor
mov
ret
xor
aad
in
(bad)
sub
das
(bad)
mov
mov
push
loope
das
sub
push
repz
dec
out
xor
mov
sti
shl
mov
sbb
cmp
jge
inc
dec
popf
cmp
push
(bad)
fsubp
adc
and
adc
mov
cmp
inc
mov
mov
ret
cmp
data16
sub
mov
push
jno
and
arpl
add
or
push
jg
push
minps
(bad)
sbb
sbb
int3
loope
test
retf
push
and
mov
pop
mov
mov
push
xor
jl
lods
dec
jg
ror
shl
xchg
ins
mov
sahf
loop
mov
dec
stos
pop
mov
xor
xchg
pop
dec
repnz
xor
iret
loope
mov
sub
movs
(bad)
jecxz
pop
jl
mov
fisubr
int
aas
adc
(bad)
pop
dec
xchg
out
sbb
lods
lahf
shr
lahf
push
jmp
sub
push
fsubr
xchg
mov
scas
dec
popa
dec
mov
popa
or
and
in
test
jle
retf
mov
mov
stos
shl
pop
mov
fmul
in
xchg
cmps
mov
(bad)
xchg
(bad)
fwait
cwde
mov
pop
cmp
or
xchg
frstor
test
stc
sbb
jecxz
mov
add
ins
fldenv
or
inc
add
sub
pop
cmp
sbb
popf
(bad)
pop
ins
dec
jecxz
adc
frstor
lods
imul
daa
and
int3
shl
pusha
nop
xchg
stos
cld
jb
sahf
fadd
js
repnz
mov
jbe
sbb
and
dec
adc
cmps
push
addr16
scas
and
jnp
sub
xor
xlat
addr16
push
xchg
pop
aam
sub
in
hlt
outs
push
mov
cmp
jns
popa
repz
loop
ficomp
sub
xchg
lods
xlat
mov
in
xchg
mov
lds
(bad)
out
retf
fsubr
jle
psllw
popa
jmp
sti
adc
hlt
dec
movs
shl
or
jmp
sbb
xchg
stos
cli
xchg
pop
or
lods
pop
(bad)
in
mov
lods
add
jle
mov
pop
aas
int
cmp
cdq
sbb
and
call
scas
push
dec
gs
imul
sar
dec
fdivr
sbb
lods
inc
scas
xor
in
scas
inc
pop
out
pop
rcr
and
xchg
in
push
mov
adc
popa
xor
cmp
push
pop
scas
push
sbb
sub
outs
enter
xchg
fcmovne
add
retf
repnz
bnd
cmp
xor
pop
push
or
movs
lock
call
out
leave
arpl
ficomp
gs
cwde
mov
add
adc
mov
jae
mov
jp
pop
outs
fwait
and
ds
inc
jbe
(bad)
mov
or
xchg
pop
lock
fbld
xor
jno
jge
in
(bad)
fwait
xchg
dec
xlat
mov
sbb
es
and
add
out
div
(bad)
lahf
call
mov
mov
jl
cmp
ins
pop
arpl
mov
inc
fmul
dec
adc
pop
fstp
add
(bad)
adc
sbb
mov
in
pusha
div
cmp
push
rol
movs
cmp
pushf
jge
shr
dec
cli
loop
and
shl
ret
lea
ja
enter
test
sub
fild
movs
adc
cmp
lods
push
fdivr
sub
dec
xor
inc
ins
dec
sub
ror
ins
push
ficom
cs
sbb
nop
dec
or
add
shl
cmps
inc
mov
xor
xlat
stc
js
rcl
inc
jnp
fcmovbe
hlt
nop
and
xor
pop
push
lods
mov
pop
dec
adc
jns
retf
rol
int3
and
and
in
add
(bad)
icebp
mov
xchg
cld
or
shl
or
icebp
or
xchg
test
popf
push
int3
in
or
rcl
outs
ins
push
push
ret
enter
cmp
add
push
cli
fstp
inc
outs
lock
inc
je
call
xlat
cmp
xchg
jl
ret
push
pop
fcmovbe
jns
push
inc
xchg
dec
push
xchg
test
aam
test
jmp
out
test
push
(bad)
fdiv
dec
push
xchg
loopne
call
lds
imul
mov
or
add
pop
out
fwait
cmp
scas
xor
mov
shl
ins
imul
add
test
sub
shl
lods
adc
add
mov
dec
lea
cdq
lock
fdiv
loope
push
xor
or
mov
jl
xor
daa
mov
push
and
pop
imul
sub
scas
loopne
pusha
mov
adc
ret
pop
mov
data16
sar
inc
cmp
or
call
jg
dec
in
loopne
enter
pushf
ds
sahf
cmp
jne
lds
or
xor
xor
test
data16
(bad)
std
loope
mov
push
mov
mov
mov
outs
in
xor
add
xchg
addr16
xor
sub
jge
xor
test
stos
popa
sub
out
lods
shr
pop
hlt
mov
sbb
les
push
imul
lea
push
int3
xor
xchg
sub
xchg
jmp
(bad)
popa
ins
adc
xor
push
ret
aad
stc
sbb
inc
repnz
cmp
out
in
pop
inc
out
out
mov
sub
sub
mov
xchg
inc
xchg
das
(bad)
mov
rcl
sub
repz
xchg
xchg
outs
outs
out
loopne
dec
ins
sub
adc
xor
and
pop
ins
sbb
add
xchg
cmp
stc
push
mov
ret
sbb
adc
or
push
int3
mov
mov
fldenv
add
movs
xor
ds
jp
in
and
pop
nop
test
cmps
xchg
mov
out
pop
and
jle
stos
push
mov
mov
mov
mov
jg
mov
mov
cmc
xlat
add
cli
pusha
xchg
sbb
push
pop
ja
add
cmp
stc
shl
daa
mov
dec
in
mov
pop
rcr
fs
out
icebp
scas
mov
add
push
inc
inc
mov
aad
mul
push
hlt
mov
call
and
dec
dec
add
stos
fstp
xor
cmp
in
push
mov
mov
dec
push
fild
xbegin
cwde
mov
xor
jl
mov
cdq
cmps
jge
int
int
pop
xchg
pop
repz
inc
test
sbb
push
pop
push
dec
loopne
adc
stc
add
test
(bad)
out
retf
pop
popa
jl
and
xor
jge
push
cmps
retf
iret
scas
sbb
mov
add
jae
repz
sub
fidivr
js
and
mov
mov
mov
retf
and
cdq
xchg
pop
cmp
xchg
jl
repz
in
jge
popf
inc
inc
xchg
ret
add
in
addr16
add
(bad)
daa
iret
mov
aad
xor
rcl
ret
jl
sub
retf
cmps
or
add
xchg
or
jmp
les
daa
add
fwait
ret
addr16
std
and
in
jb
aas
and
rol
add
jle
(bad)
sub
nop
cs
cmp
dec
and
mov
cwde
lahf
pop
push
dec
dec
inc
pusha
jg
iret
sbb
jg
mov
mov
cdq
jmp
iret
xchg
xor
stos
xchg
inc
push
pop
pop
imul
push
cdq
jno
cmp
jns
mov
sbb
push
popa
push
and
inc
pop
inc
mov
jo
pushf
jecxz
movs
fnsave
mov
push
lds
xchg
jbe
cli
nop
push
outs
rcr
xchg
mov
pop
fs
mov
ja
add
outs
fmul
ret
pop
cdq
inc
mov
or
pop
push
jp
mov
cmp
gs
inc
cmp
jecxz
ja
mov
and
iret
dec
sub
xor
xlat
rcr
out
sbb
jecxz
stc
test
jnp
outs
aas
repnz
and
into
mov
fs
push
out
stc
add
mov
dec
cmps
pop
mov
sar
mov
addr16
xchg
in
push
cmc
or
xchg
pusha
xchg
xchg
dec
jb
nop
mov
xchg
inc
dec
(bad)
jne
outs
daa
add
test
xchg
pop
or
and
ret
cmp
xchg
or
fwait
pop
icebp
sbb
add
mov
in
jns
in
mov
ja
cs
jge
ins
mov
test
fild
adc
int3
push
pop
stos
push
sub
mov
mov
cmp
outs
call
jmp
sub
repnz
lds
push
sti
fld
push
cmp
pop
inc
out
pop
loop
aam
loope
inc
xchg
repz
loop
dec
cmp
xor
fwait
add
inc
or
bound
les
cmp
stos
lahf
ins
pop
adc
in
or
out
rol
fld
cmp
(bad)
pop
push
and
test
sub
sahf
retf
data16
push
xchg
stc
mov
dec
ds
jns
mov
loope
out
rcl
pop
loope
movs
inc
jmp
sti
test
pop
mov
rol
pop
mov
xchg
es
nop
in
mov
idiv
jo
popa
add
inc
out
mov
enter
sub
out
pop
mov
inc
es
jae
jp
loopne
gs
popf
xchg
xor
and
jmp
into
jbe
clc
cmp
test
test
sahf
mov
push
cmp
mov
sbb
cmp
inc
pop
or
mov
std
add
jp
sub
xor
jmp
sub
jecxz
and
retf
xchg
mov
enter
js
sbb
sahf
dec
push
rcl
je
add
(bad)
imul
add
push
and
les
mov
pop
cmp
cs
scas
sti
aas
jle
in
popa
(bad)
leave
dec
ds
imul
dec
pop
dec
out
stos
mov
xchg
add
in
lods
and
pop
push
(bad)
and
test
push
cmp
inc
push
iret
push
push
push
jmp
scas
loop
push
les
lock
sub
push
std
mov
dec
xor
mov
push
mov
and
push
and
push
sbb
stos
xchg
mov
out
nop
push
lock
ss
and
jle
(bad)
cmp
jmp
inc
fstp
fdiv
push
mov
lock
mov
in
or
inc
and
inc
retf
movs
loope
pop
jp
mov
mov
dec
jg
test
outs
dec
adc
mov
xchg
xchg
popf
loope
adc
data16
out
ins
mov
scas
js
sbb
(bad)
out
inc
std
push
xchg
mov
or
pop
inc
sbb
mov
push
dec
retf
xor
addr16
outs
pop
mov
xor
pop
test
je
cmp
shl
jno
ins
ror
test
cmp
(bad)
adc
loope
jbe
mov
fstp
(bad)
sbb
inc
test
push
(bad)
inc
es
gs
sbb
add
cmp
enter
mov
xor
xor
sbb
and
ins
mov
test
in
adc
mov
das
je
shr
ins
shl
xlat
cwde
cmps
retf
pop
icebp
push
jg
xor
shr
adc
dec
enter
sbb
mov
and
rcl
adc
arpl
mov
sub
mov
es
cmp
jmp
cmp
pop
shr
repz
and
loope
dec
(bad)
dec
aam
lods
dec
stos
or
scas
dec
leave
or
mov
addr16
push
sbb
mov
cmp
pop
retf
jnp
cmp
es
loopne
scas
inc
repz
cmps
cs
in
mov
pop
push
cmp
cdq
ins
lods
xchg
popf
into
inc
clc
xor
or
lea
pushf
mov
repnz
xchg
stc
in
pop
xor
pop
sub
mov
push
mov
js
dec
test
and
xor
lods
sub
or
rcr
rol
adc
cli
lods
mov
add
mov
mov
das
loop
dec
inc
adc
fisttp
fcomp
int
iret
movs
mov
adc
push
jmp
xor
pop
aam
out
sub
push
fcmovnb
inc
and
bound
popa
xlat
call
xor
sub
sub
push
and
leave
add
sub
add
shl
popf
inc
fmul
inc
adc
dec
adc
cmp
cmp
cmp
add
jle
in
cmp
ins
jl
or
push
xor
fcmovbe
push
loope
cld
data16
int
loop
lea
lods
and
retf
push
std
dec
xchg
mov
fcomp
cmp
(bad)
adc
push
and
push
jl
sbb
inc
pop
stos
not
add
sahf
dec
lock
iret
jbe
xor
test
cmp
jae
cmp
cmps
jo
pop
mov
ror
repz
push
add
fwait
inc
(bad)
xchg
mov
xor
or
ret
fld
clts
pushf
aad
mov
mov
cld
stos
xchg
pop
cmp
loop
cmp
xor
fadd
pop
mov
pop
fwait
xor
adc
cmp
arpl
pop
pop
mov
mov
ins
mov
push
xchg
(bad)
icebp
retf
call
test
in
jmp
inc
fidivr
add
lea
dec
pusha
ins
idiv
out
fs
es
add
jns
int3
dec
test
addr16
xchg
into
cdq
sub
pop
test
push
stos
mov
cmps
xor
fiadd
test
pop
and
sbb
or
mov
adc
outs
xchg
push
pop
inc
add
dec
cli
pop
or
pop
inc
xor
idiv
dec
ret
shl
jecxz
addr16
pop
sub
clc
dec
es
sti
scas
repnz
push
or
sbb
lahf
out
popa
jno
dec
dec
jns
and
mov
popf
jb
in
into
mov
jmp
push
pop
adc
jp
adc
popf
retf
ja
clc
lods
sti
call
repnz
or
fwait
dec
jl
push
clc
cld
je
addr16
mov
data16
hlt
adc
inc
jecxz
stos
inc
(bad)
xchg
mov
pop
mov
in
jl
cmp
scas
js
or
fcmovne
fnstsw
sub
push
push
hlt
mov
xor
push
aas
adc
pop
inc
clc
call
xlat
bound
push
push
call
mov
scas
add
bound
(bad)
icebp
gs
dec
pop
sbb
jno
mov
sahf
(bad)
mov
scas
pop
cld
fdivp
mov
push
ja
es
out
lds
das
imul
xchg
cmp
into
arpl
(bad)
mov
test
call
sbb
xlat
arpl
pop
retfw
fs
xor
inc
js
sti
imul
push
xor
dec
push
xchg
mov
xchg
xor
xchg
push
add
shr
outs
or
adc
lahf
jmp
xchg
push
jae
add
(bad)
aas
dec
dec
jmp
xchg
mov
and
out
in
inc
ficom
pop
lds
out
daa
test
arpl
and
sub
retf
dec
cmp
(bad)
out
inc
sub
mov
jmp
or
pop
pop
fs
test
jae
sbb
bound
lods
add
ins
dec
icebp
pop
sbb
push
hlt
dec
or
mov
popf
dec
cld
cmp
push
cwde
add
sar
(bad)
jmp
cmp
jp
(bad)
stc
leave
repnz
iret
add
adc
push
push
imul
fs
shr
(bad)
loopne
(bad)
jg
jecxz
and
movs
cwde
mov
and
in
dec
bound
addr16
retf
xchg
int3
pop
shr
and
ja
rcl
pop
je
sahf
cmps
add
add
cmc
add
hlt
mov
ret
ins
lods
(bad)
imul
inc
out
mov
inc
fimul
rcr
push
xor
add
pop
lahf
int
sahf
pusha
int3
lds
mov
sub
cmp
movs
leave
iret
mov
scas
test
not
test
ficom
(bad)
addr16
add
(bad)
lods
nop
sub
adc
jl
pop
jb
cli
js
push
pusha
mov
and
inc
mov
mov
(bad)
xchg
ins
add
retf
jle
mov
movs
mov
and
jmp
and
jg
pop
and
mov
sbb
imul
in
pop
es
inc
push
dec
xchg
fcmovne
(bad)
sbb
mov
icebp
popa
dec
adc
loop
dec
into
(bad)
lods
xor
push
lea
inc
push
pop
(bad)
in
mov
jne
xor
lods
push
sub
add
inc
inc
jp
dec
xor
xchg
(bad)
dec
jmp
push
xchg
mov
repnz
push
(bad)
ss
pop
mov
adc
sub
mov
call
clc
mov
and
push
xchg
inc
ret
pop
retf
test
movs
test
push
mov
mov
add
repz
jno
push
cmps
repz
xchg
cmp
pop
ret
test
addr16
jge
xchg
cmc
xor
push
adc
push
pusha
fnstsw
fwait
sub
sbb
sbb
jno
xor
data16
lea
pusha
stc
cmp
adc
loop
mov
icebp
and
int3
ss
stos
sub
ins
adc
or
sub
ds
sbb
jmp
push
pop
pop
inc
add
pusha
inc
les
or
sbb
dec
add
shl
add
jmp
mov
pop
pop
fmul
sbb
lds
and
int3
xchg
loop
cmp
jmp
xchg
dec
sti
(bad)
cmp
xchg
cdq
jne
hlt
jbe
dec
add
pop
xlat
xchg
mov
std
out
out
mov
retf
int
jle
push
inc
pop
movs
shr
xor
and
test
push
xchg
adc
push
add
xchg
ja
sub
adc
aad
add
add
call
add
loop
mov
fbstp
inc
call
cld
(bad)
dec
mov
mov
push
cwde
inc
lds
lods
aam
xlat
dec
mov
xor
je
daa
sbb
jp
xchg
mov
into
inc
cmp
cmp
enter
pop
outs
pusha
sub
hlt
cmps
shl
and
or
mov
push
(bad)
mov
das
xor
sub
cs
push
cmp
push
add
aaa
fisttp
or
push
movs
ins
pop
push
mov
fstp
inc
cs
jge
call
ror
cmp
sar
(bad)
in
cs
add
xor
pop
or
mov
jae
mov
fisttp
xor
rol
pop
call
pop
dec
cmps
dec
push
mov
cmp
add
push
push
mov
mov
mov
or
sbb
repnz
cmc
cmp
mov
jg
cmp
(bad)
push
sar
jl
or
adc
push
and
inc
arpl
in
push
xchg
inc
and
cmp
fcomp
fld
xchg
aas
pusha
mov
pop
xchg
lods
pop
xchg
ins
int3
fdiv
cmps
cdq
daa
or
xchg
xchg
das
cs
add
xor
ins
mov
jecxz
inc
xor
in
push
imul
js
loope
jno
sub
push
int
sub
jne
mov
addr16
or
hlt
retf
fs
fidiv
sbb
lods
mov
(bad)
adc
jmp
adc
mov
movs
dec
(bad)
in
mov
cmp
jge
jmp
ss
xor
fwait
addr16
jp
cdq
inc
js
xor
fdivrp
adc
shl
adc
(bad)
adc
pop
(bad)
jg
mov
mov
gs
ins
adc
inc
test
push
test
repz
push
fdivr
mov
mov
lock
call
ins
icebp
call
lock
test
xor
inc
and
out
dec
out
enter
pop
cli
mov
push
pop
fcomi
ins
sbb
sub
mov
push
add
and
mov
into
inc
stc
fwait
nop
sbb
test
add
fsubr
sbb
inc
pop
pop
push
lods
je
lds
sbb
mov
gs
or
js
aaa
mov
ficom
jno
xor
ins
inc
(bad)
pushf
mov
inc
cmp
pop
add
jne
aam
fistp
cmc
mov
adc
jae
sti
lods
outs
rcl
fst
fcomp
sbb
(bad)
sar
xor
gs
bound
and
(bad)
outs
out
das
std
loop
push
jp
mov
jmp
retf
cmp
enter
popa
shl
sub
add
inc
(bad)
outs
ss
jge
mov
mov
and
xor
pop
mov
jg
ds
pop
ret
jne
bound
pop
in
test
jo
add
push
clc
pop
add
es
and
sub
fidiv
sti
nop
sub
pop
cmc
xor
mov
mov
jo
sbb
(bad)
retf
add
push
int3
cmp
dec
cmps
inc
in
int3
cli
or
ss
stos
inc
pusha
dec
jb
rcr
(bad)
sub
inc
sahf
xor
push
pusha
or
out
push
sub
mov
sub
clc
lea
in
cld
xor
xor
jno
dec
out
push
repnz
sub
out
ficom
inc
or
mov
fwait
retf
inc
pushf
push
xor
scas
mov
sub
xchg
outs
in
sbb
lods
mov
rol
dec
xor
shl
fadd
inc
pop
push
pop
repnz
inc
xchg
mov
call
jge
lock
mov
es
pop
fs
mov
div
int
mov
dec
cs
mov
cld
enter
cmp
add
pop
push
mov
pop
cmps
xchg
lock
ror
(bad)
outs
mov
cmp
cmp
mov
mov
mov
xor
xor
test
cmp
fisub
ret
test
or
sbb
imul
dec
dec
aam
jo
ret
test
cmp
rcl
paddsb
js
ret
icebp
ja
es
in
sbb
or
call
fnstsw
mov
jmp
outs
xchg
ret
pop
cmc
xor
scas
icebp
sbb
jnp
xchg
popf
push
stc
(bad)
aad
leave
xchg
in
sub
das
aaa
std
xchg
add
movs
scas
push
test
sbb
(bad)
fbstp
sub
in
or
add
pop
aaa
lahf
and
jne
(bad)
jne
jns
dec
dec
dec
pop
hlt
and
test
std
push
in
adc
cmp
(bad)
mov
sub
loopne
cs
popa
jge
lea
and
cs
sub
test
mov
icebp
xchg
lods
and
sbb
fmulp
in
cwde
push
hlt
into
pop
cmp
adc
call
pop
pop
dec
pop
das
mov
pop
dec
xchg
mov
sub
das
stos
sub
push
repz
adc
call
or
cmp
cmp
shr
inc
and
push
pop
mov
mov
outs
mov
mov
push
mov
dec
in
xor
cmp
push
pop
jns
call
popa
ds
or
stc
pop
xchg
inc
push
cmp
sti
sti
test
xchg
pushf
cmc
es
cmc
mov
retf
xchg
les
push
adc
aaa
cmp
scas
jg
cmp
push
add
stc
(bad)
sbb
ret
pop
(bad)
jl
daa
scas
xchg
sub
xor
(bad)
mov
fmul
inc
mov
fdivrp
pop
dec
xor
mov
out
aaa
sbb
les
sbb
shr
fistp
sbb
dec
inc
and
in
mov
jb
push
xchg
inc
outs
pop
jge
sahf
fsubr
cmp
pop
jo
je
xor
jmp
add
nop
adc
ins
retf
pop
mov
(bad)
loopne
retf
push
jno
mov
hlt
cmp
adc
aas
dec
(bad)
sbb
or
sbb
inc
cmc
dec
and
(bad)
in
test
outs
mov
cmps
cs
fld
int3
dec
xchg
jo
mov
jmp
adc
jae
cmp
jg
sbb
popa
and
or
add
push
scas
mov
inc
into
(bad)
sbb
outs
sbb
push
or
and
mov
enter
mov
pop
cmp
stos
scas
or
inc
cmps
jecxz
stos
push
xchg
push
mov
pop
jbe
mov
jp
mov
lahf
aas
fsubr
add
ss
gs
fild
mov
inc
pop
jle
cs
inc
ja
or
cli
inc
inc
add
mov
out
adc
jmp
mov
dec
neg
dec
jno
test
xor
mov
aaa
mov
add
and
sub
int
cs
xor
jno
dec
call
xor
mul
jge
(bad)
hlt
inc
imul
push
mov
mov
sub
rcr
iret
sbb
cdq
loop
inc
arpl
lds
(bad)
cmp
cmp
or
lea
je
jno
gs
jle
adc
movs
inc
cmp
pop
mov
jb
sbb
xchg
test
push
movlps
inc
push
les
adc
aad
stos
mov
vorps
dec
sub
mov
or
xchg
mov
cdq
(bad)
mov
mov
sub
stos
fst
mov
pop
loopne
or
mov
jo
jae
push
pop
loop
pop
mov
cmps
(bad)
dec
mov
sbb
pop
jo
cmp
or
mov
out
push
jge
ret
cmps
pop
jbe
and
in
mov
push
pop
jp
cli
loop
addr16
imul
push
dec
fidiv
(bad)
lock
(bad)
nop
add
xor
and
dec
add
jnp
outs
call
xchg
jmp
div
mov
pop
pushf
fs
pop
(bad)
pop
hlt
adc
dec
scas
cli
sub
push
cmp
jb
sar
test
inc
push
or
and
rcl
data16
add
imul
cmp
not
(bad)
xor
push
cmc
jp
and
adc
push
sbb
inc
or
sar
ss
sahf
aaa
pusha
jmp
inc
xor
push
ficom
mov
dec
leave
and
mov
cmp
aad
or
loope
mov
pop
call
popf
outs
push
mov
sub
pushf
retf
fld
pop
dec
mov
adc
adc
pushf
arpl
test
(bad)
jbe
neg
in
mov
or
cld
mov
(bad)
mov
hlt
add
enter
mov
xor
retf
lds
sahf
out
xor
cli
add
cmp
dec
into
inc
scas
dec
inc
aaa
imul
xor
add
ja
fwait
pop
out
sub
jl
out
outs
xor
adc
call
jo
and
gs
inc
xchg
cmp
xchg
push
jmp
dec
fcmove
scas
cmp
xchg
adc
jnp
push
dec
aam
adc
pushf
sbb
mov
xor
mov
int
cmc
shl
sar
ja
xchg
outs
xor
imul
outs
pop
aas
fwait
push
cmp
xor
es
dec
jns
addr16
ja
idiv
push
push
call
aaa
jl
pop
or
das
call
fnclex
es
enter
jp
jno
into
in
xlat
scas
cmp
sbb
and
outs
mov
outs
cmp
inc
xchg
sub
stc
mov
mov
sbb
jg
int3
lea
push
sti
enter
jmp
(bad)
sub
sti
xchg
test
ds
fldcw
and
xor
mov
mov
inc
jo
iret
xor
in
mov
and
sub
inc
dec
fidiv
enter
sti
loop
mov
cmp
out
imul
fsubr
xchg
cld
sub
sub
or
in
pop
cmp
mov
inc
jge
adc
ja
aam
ja
and
imul
adc
pop
sub
push
(bad)
repnz
cdq
gs
mov
push
aaa
ror
mov
sbb
jno
mov
retf
scas
push
jle
pop
aas
dec
adc
call
pop
mov
add
or
push
(bad)
std
ficomp
jnp
adc
faddp
aaa
imul
sub
mov
cld
aas
mov
jb
out
jae
dec
ds
iret
retf
and
jle
or
cmc
xor
or
ja
cmc
xchg
inc
sub
mov
push
push
pop
and
push
or
jo
icebp
das
js
inc
fidivr
inc
adc
test
sub
movs
jmp
xchg
loope
mov
in
and
jecxz
ret
shl
and
cmp
pop
in
mov
cmp
adc
loop
jle
mov
mov
not
add
jnp
les
ss
sub
add
repz
arpl
mov
js
pop
lahf
sbb
and
dec
adc
cdq
addr16
out
cvtpi2ps
xor
gs
ins
ins
sbb
mov
aaa
add
and
outs
xlat
(bad)
int3
sar
or
sbb
(bad)
pop
int
add
pop
mov
xchg
rol
mov
lea
jns
mov
mov
push
jae
ds
aaa
xor
cld
cmp
dec
xchg
je
xor
stc
xor
lea
stos
push
inc
neg
or
addr16
jns
inc
mov
and
aaa
adc
xchg
add
out
dec
push
inc
pop
call
inc
test
pop
ficomp
call
push
aas
popa
dec
fs
push
xchg
sahf
mov
inc
jne
jecxz
pop
seto
in
popf
loopne
mul
jecxz
inc
adc
xchg
pop
gs
fs
lds
jo
fs
push
stos
dec
dec
add
pop
jg
aam
pushf
add
mov
mov
sahf
stc
xor
and
cli
xor
dec
daa
xor
pop
jg
retf
cdq
mov
in
jp
fs
lahf
mov
push
or
push
fdiv
jno
xchg
xchg
pop
arpl
pusha
jl
xchg
imul
sub
faddp
arpl
pop
call
sti
xor
out
xchg
and
lods
mov
mov
xchg
mov
retf
cwde
push
dec
das
fxrstor
adc
bound
repnz
jl
ss
mov
ret
pushf
sbb
outs
scas
add
dec
popf
or
pop
mov
push
js
dec
mov
adc
xor
adc
sub
inc
mov
jbe
xchg
jo
ret
mov
jae
in
fist
test
mov
pop
push
xlat
test
call
out
fadd
add
lods
add
add
test
cmp
movs
or
cwde
push
imul
inc
mov
or
inc
add
push
cmps
lods
ja
xchg
bound
pop
mov
test
adc
cs
pop
mov
mov
pop
int
ret
mov
xor
fs
cmp
sbb
test
xor
push
fisubr
cdq
stos
lea
out
sub
icebp
push
mov
movs
and
sub
movs
push
ss
cmps
loope
xor
in
cmc
add
xor
or
pusha
imul
ds
in
or
dec
or
ins
shl
sub
and
in
push
lock
rcr
push
pop
add
push
jbe
xor
or
pop
jecxz
aaa
movs
cs
xchg
fld
pushf
adc
pop
loop
inc
jae
jg
sti
or
dec
xchg
jp
or
jns
call
cmc
dec
cld
mul
lods
inc
cwde
mov
adc
cmp
xchg
sbb
daa
cmp
xchg
xor
loop
fstp
stos
dec
fdiv
adc
mov
das
popf
mov
mov
inc
stos
or
lods
push
je
fs
arpl
outs
dec
and
cwde
call
rep
and
xchg
dec
test
stos
mov
jb
mov
aad
into
(bad)
and
aad
add
mov
jmp
sbb
xchg
jmp
cwde
test
sahf
outs
or
pop
clc
push
push
mov
cmc
inc
push
mov
stc
nop
pop
adc
push
inc
sub
or
jb
and
scas
jmp
daa
pop
daa
shl
fnstsw
and
inc
mov
fsub
pop
jb
sbb
and
sbb
popa
in
shl
movs
pop
mov
add
fdivr
test
scas
xchg
pop
imul
pop
popa
push
fwait
je
mov
push
xor
cmc
xor
ja
bnd
adc
or
cmc
mov
ret
mov
mov
sbb
add
push
out
mov
mov
pop
jge
rcl
enter
dec
xchg
push
retf
mov
adc
in
add
dec
sub
jle
loope
jb
dec
mov
lods
cmp
daa
ret
loopne
fs
ret
pop
pop
adc
push
loopne
pop
lock
pop
fcom
int
xor
mov
cmp
or
push
dec
and
adc
bound
pusha
int3
xchg
xchg
nop
retf
jmp
cld
adc
and
add
jmp
dec
fsubr
inc
and
and
sub
lea
xchg
xchg
jmp
jns
ret
or
xchg
icebp
or
mov
pop
ins
xchg
fisub
add
dec
nop
and
and
jmp
xchg
fsub
iret
fistp
sbb
mov
push
mov
call
retf
in
and
pop
repz
out
aas
jns
lods
inc
add
arpl
add
jmp
mov
jbe
lods
mov
xchg
adc
pop
sbb
xlat
push
pop
dec
lahf
xor
jl
aas
popf
clc
dec
jle
dec
xor
fist
out
adc
test
mov
ds
ja
mov
test
in
repnz
movs
inc
retf
shl
xor
cmps
inc
das
jns
pop
das
ret
mov
push
mov
shr
jbe
add
sbb
xor
shl
push
xor
shr
fsubr
lahf
push
fcomi
sub
dec
push
pop
mov
stc
mov
inc
pop
mov
fidivr
xor
or
lea
sti
xor
mov
cmp
xor
jg
lahf
sub
jmp
adc
pop
inc
xor
cmp
nop
mov
fwait
xor
ss
and
sbb
(bad)
hlt
pop
arpl
mov
fisub
cwde
cmp
ret
out
out
movs
sbb
lods
jae
and
cmc
arpl
xchg
imul
cdq
inc
aaa
adc
cld
sub
fwait
pop
or
pop
adc
cmp
mov
mov
bound
je
imul
loopne
int
jmp
push
and
(bad)
xor
adc
jp
dec
popa
dec
xchg
sbb
dec
data16
fwait
inc
mov
pop
popf
fucomi
xor
call
mov
inc
stos
xchg
nop
mov
(bad)
sub
pop
stos
outs
mov
lock
mov
pop
loopne
add
lds
sahf
stos
cmps
mov
or
div
addr16
xor
xchg
lock
cld
xchg
ja
daa
xor
fiadd
or
fwait
rol
push
cmp
cmp
(bad)
in
rep
cmc
jp
stc
and
test
push
data16
push
ss
adc
out
jo
jne
enter
dec
mov
adc
in
ins
pop
mov
shr
sbb
aam
and
dec
cwde
bound
xlat
sub
push
push
aam
add
xor
mov
add
inc
jmp
jle
call
xor
dec
repz
cmp
pop
pop
inc
mov
aas
imul
(bad)
jp
lods
nop
or
adc
mov
cmps
mov
mov
fild
ds
xchg
xchg
cli
div
daa
and
xchg
mov
mov
or
inc
push
in
jno
xchg
jns
into
jne
retf
cs
das
std
and
not
ins
ins
and
jmp
pop
sub
and
iret
mov
cmp
retf
dec
(bad)
push
and
cwde
fst
cmp
sbb
mov
clc
push
sti
sbb
in
stos
icebp
popa
fist
popf
jmp
mov
xchg
popf
out
and
xchg
js
sahf
add
jnp
out
cmp
add
out
pop
aad
sub
data16
pop
sbb
add
imul
jp
dec
movs
jmp
retf
adc
rcr
in
out
mov
ds
xchg
fist
inc
pop
sbb
inc
add
sbb
jne
push
jmp
loope
dec
mov
mov
movs
(bad)
adc
lock
lods
mov
cmps
icebp
xchg
mov
sub
push
fidivr
pop
xchg
sbb
lahf
into
shr
aam
lock
jmp
bound
adc
adc
adc
sbb
sub
dec
cmps
ss
adc
dec
mov
and
icebp
ret
ss
loopne
jne
and
push
pop
movs
lods
cmp
inc
test
aam
sbb
jl
sbb
repnz
push
loop
adc
xor
add
(bad)
call
cmps
jl
push
and
add
xlat
(bad)
cmp
inc
fisubr
sub
jl
in
je
xchg
loopne
fbld
out
(bad)
mov
cmp
movs
imul
inc
sbb
pushf
(bad)
outs
in
icebp
les
es
mov
retf
out
stos
xor
out
pop
call
jl
or
mov
cmp
inc
push
sbb
mov
xchg
ja
inc
sub
or
mov
dec
pop
or
int3
xor
jecxz
cmp
sub
mov
nop
push
adc
xor
loope
pop
mov
bound
sahf
aas
mov
ja
fldcw
retf
cmp
(bad)
out
cmp
sbb
and
fsub
pop
das
sub
pop
add
mov
and
and
jno
dec
jmp
dec
or
movs
xchg
test
test
pop
lods
pop
or
mov
loopne
jp
mov
in
lods
and
hlt
popf
add
or
pushw
xchg
adc
push
inc
cmp
addr16
stos
fcom
and
dec
out
gs
push
add
fcomp
mov
sahf
test
push
push
adc
fmul
mov
xor
fstp
mov
mov
repz
sub
(bad)
or
mov
cmp
lods
sbb
movs
xchg
shl
xor
mov
jp
sahf
jl
adc
or
mov
xchg
pop
dec
out
dec
(bad)
outs
jbe
test
cmp
xchg
shl
rcr
lods
inc
xchg
pop
call
push
dec
xor
add
pop
sub
sahf
fist
cmp
adc
push
add
sbb
movs
and
sbb
mov
add
or
out
mov
mov
imul
das
cmps
arpl
mov
lods
retf
inc
scas
jnp
cmp
or
pop
add
xor
neg
data16
cs
mov
sub
nop
pop
mov
out
data16
scas
int
or
or
addr16
sbb
mov
outs
ins
mov
movs
mov
mov
mov
stos
int
sub
iret
mov
push
(bad)
sti
movs
sub
adc
mov
call
movs
into
sbb
sar
adc
jo
xchg
push
mov
mov
cwde
leave
cmp
and
es
xor
add
or
sbb
sbb
inc
pop
jno
cmp
jno
push
icebp
xor
int
ror
pop
popa
lock
and
test
adc
imul
addr16
daa
jo
lods
push
ins
inc
or
out
shl
or
les
std
js
test
pop
dec
scas
or
sbb
dec
std
pushf
loop
jge
push
xchg
out
sbb
jle
scas
mov
sub
adc
bswap
push
ror
shl
loopne
lea
cmp
cmp
nop
mov
cmps
int3
daa
popa
mov
mov
pop
(bad)
add
push
xchg
jmp
leave
fwait
daa
cwde
fdiv
popf
jle
mov
lds
add
test
fbstp
stos
loopne
and
cli
pushf
mov
popa
lea
mov
push
inc
dec
into
(bad)
hlt
pop
dec
es
adc
or
xchg
js
jno
sar
aad
push
movs
adc
adc
(bad)
hlt
test
ret
inc
ja
jp
fst
movs
in
jmp
mov
(bad)
pop
sahf
sub
repz
pusha
xchg
jmp
pop
dec
xor
ins
popf
pushf
mov
fidiv
pop
addr16
ja
push
or
push
add
retf
xchg
out
ds
pop
xor
jo
(bad)
fwait
adc
jmp
shl
in
mov
ja
jecxz
adc
ret
stos
ins
not
retf
lds
mov
push
and
mov
(bad)
mov
pop
ja
add
xlat
pop
sub
(bad)
dec
lods
cs
sahf
mov
call
mov
dec
movs
push
jle
jl
xor
fmul
jo
(bad)
in
stc
jmp
mov
mov
mov
cs
dec
cld
lfs
push
shl
jns
(bad)
data16
jo
ss
test
pop
(bad)
lock
dec
bnd
push
push
out
push
jmp
fcom
mov
xchg
cmc
jnp
ss
inc
call
xchg
xchg
lock
push
mov
mov
dec
push
pushf
fbstp
dec
or
dec
adc
or
and
dec
adc
mov
repz
adc
je
xor
inc
ret
cmp
shl
mov
cmp
mov
(bad)
icebp
imul
(bad)
fstp
sub
mov
or
nop
cmp
or
rol
test
jbe
pop
pop
pop
mov
int3
pop
push
imul
sahf
dec
aam
sub
repnz
adc
repz
scas
xor
test
stos
cwde
stos
or
mov
push
push
stos
push
adc
xor
jae
push
nop
jno
inc
ss
and
lods
jae
stos
jp
jb
test
inc
jno
xchg
push
popa
sbb
and
es
push
dec
mov
cmp
mov
retf
sti
or
clc
dec
icebp
mov
repz
sub
cmp
pop
mov
or
xchg
cmc
cmp
mov
sbb
pop
pop
jbe
loope
pop
cli
xchg
mov
in
cld
dec
push
push
int3
add
jb
adc
dec
(bad)
dec
sbb
push
mov
push
mov
inc
mov
dec
inc
dec
icebp
jge
mov
cmp
inc
push
scas
mov
adc
xor
std
add
int
xor
sub
adc
out
push
or
pop
mov
sub
jl
stc
mov
enter
pop
add
dec
cmps
shr
rcr
rol
fsub
cs
lods
mov
and
xor
sub
jge
scas
inc
test
pop
lods
ja
daa
fld
sahf
lea
push
iret
retf
aaa
cmp
sub
pop
dec
sbb
test
pop
sub
mov
cs
inc
inc
mov
and
pop
push
repnz
pop
sbb
leave
(bad)
je
fs
test
stos
hlt
retf
or
jo
adc
jmp
leave
cpuid
or
(bad)
and
push
popf
fucomi
dec
ror
xlat
or
xor
(bad)
adc
sub
inc
add
push
test
jg
jae
out
les
sub
outs
mov
dec
sahf
movs
dec
mov
jne
cmp
adc
stc
je
out
cli
sar
fisttp
add
(bad)
mov
mov
mov
repnz
pop
push
aad
or
push
mov
ins
aas
push
jmp
mov
mov
or
add
pop
mov
js
dec
test
and
dec
jg
test
repz
addr16
inc
jno
stos
test
aaa
xor
(bad)
lods
add
push
sbb
out
mov
jmp
xchg
test
test
xchg
shl
mov
ror
or
je
dec
lds
stos
in
in
outs
movs
ror
jns
sub
fs
jnp
ror
out
dec
jbe
mov
push
jmp
outs
leave
pop
lahf
xchg
or
jbe
in
and
mov
gs
test
and
mov
in
lahf
lock
xor
mov
xor
in
or
sbb
push
arpl
(bad)
push
pop
shr
fcomi
xor
popf
jae
ret
lods
and
push
shl
add
adc
fs
pop
pusha
test
aaa
call
imul
mov
and
mov
(bad)
dec
pusha
lods
mov
pop
dec
in
repnz
shl
imul
push
mov
loopne
mov
add
dec
mov
xchg
or
fidivr
mov
ins
aas
cld
push
sahf
mov
sub
test
fadd
mov
movs
mov
mov
jecxz
dec
lds
das
fnstsw
sahf
test
ret
mov
ins
sahf
adc
mov
ins
and
jg
repz
lea
inc
cmova
retf
adc
fwait
lods
movs
shl
xchg
leave
dec
cmps
sti
jne
xor
xchg
mov
sbb
push
neg
and
dec
push
mov
push
inc
imul
ror
pop
add
ret
out
push
pop
push
shl
jl
outs
pushf
out
mov
sub
mov
sbb
pop
test
inc
mov
cmp
test
add
pop
lahf
add
ficom
pop
mov
xor
pop
iret
dec
frstor
pop
adc
(bad)
pop
xchg
arpl
daa
mov
and
in
add
imul
fsubr
in
xchg
cmp
mov
xor
icebp
push
fdivr
jge
das
adc
mov
or
imul
sbb
fst
pop
jp
or
in
mov
sub
or
jbe
std
mov
jnp
enter
test
xchg
movs
inc
or
es
dec
int3
sbb
ret
inc
call
sbb
inc
xor
jnp
inc
arpl
test
mov
fst
das
stos
movs
add
sub
xchg
(bad)
xor
ficom
jae
jns
ja
das
adc
icebp
xchg
mov
inc
xor
pushf
cmps
retf
add
mov
test
ficomp
sub
pop
mov
cmp
sub
popf
cmp
add
ss
movs
icebp
je
cmp
ds
mov
fnstenv
jecxz
push
cmp
jge
mov
and
cmp
push
in
adc
mov
sub
push
jno
(bad)
(bad)
out
popa
pop
mov
arpl
in
leave
jo
inc
cmp
sbb
and
enter
fbstp
xchg
mov
or
int
cmps
in
ffree
sbb
arpl
jbe
ss
jb
cli
inc
xchg
enter
add
push
sbb
aas
bswap
mov
mov
sti
mov
sub
push
aam
loop
nop
(bad)
aaa
or
faddp
paddq
xchg
jmp
popf
cmps
pop
pushf
inc
aaa
dec
pop
pop
ja
add
cmp
ja
retf
dec
pop
dec
push
pop
(bad)
push
adc
pop
pop
dec
dec
mov
pop
add
xor
iret
jecxz
leave
das
bound
push
cwde
dec
je
xor
xchg
push
rcl
jmp
es
pop
sbb
leave
ror
dec
sbb
mov
jae
clc
mov
or
lods
push
push
sub
push
mov
pop
sti
js
icebp
cmps
adc
sti
ins
push
and
mov
rcl
mov
movs
movs
jge
imul
dec
fsub
push
imul
rcl
in
(bad)
nop
js
push
adc
pop
sahf
mov
sti
retf
pop
sbb
inc
dec
sar
or
xor
mov
clc
(bad)
xchg
fs
cmp
pop
jp
dec
idiv
jne
retf
cmp
sub
vxorpd
xor
test
enter
xor
popf
push
and
cdq
add
push
rcr
add
mov
sbb
jnp
stos
sbb
cdq
ds
cmp
mov
rdpmc
es
xor
sbb
cmc
int
mov
xchg
mov
xchg
and
cmc
ja
xor
jmp
add
test
je
cmp
push
push
pop
retf
xchg
iret
hlt
sbb
imul
scas
mov
fnstenv
lahf
dec
popf
repnz
ret
pop
jbe
cwde
inc
add
add
jecxz
ret
lea
xchg
xchg
xchg
fdiv
sub
sub
test
jnp
or
int3
or
xor
cmp
outs
xor
jge
sub
ins
fwait
mov
ja
lds
cwde
pop
adc
sbb
mov
sub
imul
inc
xchg
shl
jae
inc
mov
out
arpl
lods
or
add
rcl
(bad)
mov
push
jnp
call
pop
xchg
push
mov
out
sti
arpl
pop
dec
je
xchg
or
cdq
push
or
loopne
icebp
dec
in
call
stc
and
push
mov
push
cli
fcmovnb
pop
xor
jg
shl
or
jbe
xchg
push
add
adc
inc
and
inc
das
enter
mov
je
out
fmul
add
in
mov
ficomp
pop
in
mov
push
js
add
test
dec
scas
mov
mov
cmp
add
je
pop
cmps
cmp
add
push
push
stc
mov
xor
sub
sub
and
add
sub
mov
ds
mov
or
mov
mov
fisubr
jmp
pop
adc
xor
jmp
and
and
shl
cdq
and
push
pop
add
xor
mov
pop
inc
std
xchg
clc
repz
ins
jl
jb
xor
pop
push
sbb
adc
std
or
pop
jb
les
mov
push
push
(bad)
dec
bound
(bad)
rcr
mov
push
jne
lea
stos
mov
cmp
outs
xchg
fistp
or
and
or
or
mov
xlat
test
ss
shl
retf
push
mov
sub
pop
sbb
gs
movs
ds
int
loop
call
imul
mov
mov
js
jmp
imul
test
cmp
or
outs
xor
mov
pop
adc
dec
or
pop
sub
or
mov
iret
sub
xchg
mov
repnz
xchg
(bad)
jbe
retf
dec
jecxz
lods
clc
ret
stos
in
ret
out
jb
xchg
mov
call
lahf
jmp
dec
int3
and
xchg
ss
jae
(bad)
mov
dec
add
jg
cmp
icebp
jmp
aaa
pop
call
pop
sar
into
es
pop
or
cmp
xchg
mov
mov
cdq
jg
nop
aas
xor
gs
arpl
jl
mov
xchg
in
les
daa
bnd
mov
retf
shl
mov
sub
stc
cmp
cmp
fidiv
mov
mov
jae
outs
xor
pop
pop
cmp
xchg
loop
out
mov
mov
fcom
cmp
xchg
xchg
jl
aas
add
loop
cwde
ret
jg
mov
cmps
ins
mov
pop
jge
clc
inc
adc
inc
and
in
mov
jbe
push
mov
inc
int3
dec
ins
mov
push
retf
ret
hlt
add
out
outs
pop
lock
or
push
lock
das
sub
jo
jns
out
mov
leave
cmps
mov
inc
clc
push
cmp
cmp
jl
call
out
ret
(bad)
(bad)
retf
inc
push
lods
shl
dec
mov
iret
ror
adc
inc
je
pop
(bad)
arpl
retf
lea
inc
addr16
mov
call
(bad)
dec
pushf
pop
leave
jo
mov
jae
jmp
mov
gs
adc
bound
ja
adc
or
repnz
jae
mov
mov
mov
sahf
outs
mov
rol
cs
nop
dec
addr16
adc
je
lods
jne
imul
nop
inc
or
sahf
or
callw
cld
push
stos
mov
jecxz
pop
jmp
test
and
cmp
add
lahf
movs
cmps
add
sar
lock
mov
xchg
cs
mov
dec
cmp
mov
call
out
mov
jecxz
fild
nop
and
and
push
mov
gs
dec
arpl
ja
loope
add
call
sub
clc
and
xor
aam
and
cli
pop
add
lds
inc
xor
jnp
jb
jmp
sahf
cwde
mov
out
cmc
stc
cdq
dec
cmp
inc
jo
push
mov
or
fldcw
pop
stc
sub
lsl
xlat
fs
lea
mov
or
dec
leave
fdiv
sbb
cmp
mov
xchg
dec
mov
enter
or
gs
scas
mov
inc
xor
stos
jmp
mov
inc
add
xor
or
jecxz
cmp
xchg
ss
out
ds
mov
add
mov
movs
sbb
pop
cmp
lea
jle
dec
adc
cld
mov
or
or
clc
in
lea
xor
data16
lods
xor
lea
add
ss
dec
fs
out
fwait
out
mov
mov
(bad)
fimul
movs
lock
js
mov
sar
leave
cld
repnz
sete
(bad)
pop
out
xor
aam
push
jp
inc
es
lock
push
outs
(bad)
cmp
je
hlt
add
adc
(bad)
stc
loopne
xor
dec
int3
(bad)
sti
and
(bad)
push
pushf
pop
xchg
sub
pop
xor
push
cdq
dec
daa
shr
out
sti
inc
xor
dec
or
jmp
cmp
or
sub
mov
enter
push
ins
mov
mov
repz
mov
add
fist
aad
in
iret
add
(bad)
daa
mov
mov
xlat
mov
mov
jl
(bad)
(bad)
cmp
call
mov
(bad)
adc
in
in
aad
in
pop
outs
pop
aas
mov
(bad)
imul
idiv
mov
or
and
stos
fild
dec
jmp
xchg
mov
pusha
aaa
sbb
cmp
fild
xor
and
jp
or
jmp
ins
fdivr
inc
push
test
xor
sbb
add
jmp
fbld
add
repz
sti
mov
stc
aam
xor
call
es
rcl
sub
jg
test
shl
inc
(bad)
mov
aad
daa
jmp
dec
mov
fstp
pop
add
scas
in
and
dec
sub
movs
fwait
in
(bad)
out
call
outs
mov
dec
fcomp
mov
xchg
or
test
shl
out
dec
clc
cmps
cli
fsubr
test
movs
add
js
sti
mov
jecxz
push
hlt
stos
ins
test
add
dec
push
sahf
lea
or
push
sub
xchg
movs
scas
das
or
fistp
dec
mov
pop
and
adc
into
sbb
mov
dec
pop
cmp
loop
js
xchg
sub
and
aad
imul
ins
adc
xchg
scas
jne
and
sbb
ins
(bad)
mov
dec
repz
inc
in
ds
and
mov
test
clc
push
cmps
lods
xor
mov
imul
push
inc
and
pop
cld
aas
jmp
cmp
js
push
add
rol
push
and
adc
icebp
add
cmp
xor
ficom
jne
fiadd
cmc
aad
out
adc
adc
and
inc
mov
inc
jecxz
aad
pop
into
fst
sbb
or
scas
pop
pop
sub
fisttp
loopne
outs
sti
movs
jecxz
(bad)
mov
dec
cwde
daa
arpl
push
arpl
outs
mov
leave
(bad)
rcl
mov
imul
jo
out
push
mov
add
or
sbb
ret
push
shr
mov
test
lods
imul
sub
movs
in
cmp
jb
aaa
push
data16
xlat
cwde
ins
ret
sbb
inc
pop
dec
inc
mov
and
xor
push
jae
xor
inc
sub
aad
js
loopne
les
aad
iret
icebp
mov
sbb
retf
cmps
add
jge
mov
sub
scas
sub
add
xchg
das
adc
lds
mov
fisttp
nop
or
jecxz
pop
add
test
std
cmp
mov
add
sbb
add
mov
lea
loope
mov
fwait
jb
cmp
mov
pop
scas
pop
lods
aas
xor
ret
movs
cmc
mov
rol
cmp
push
dec
xor
add
cmps
mov
mov
add
mov
bound
sub
and
lahf
and
cmp
repnz
sbb
mov
fs
adc
ret
imul
pop
rcr
xchg
clc
sahf
jle
js
in
sub
adc
add
mov
scas
xchg
hlt
and
jmp
xchg
movs
jb
sbb
mov
jle
adc
adc
call
jmp
and
and
js
and
mov
xor
std
in
retf
adc
dec
iret
js
into
push
imul
xchg
mov
push
or
dec
ret
inc
in
(bad)
scas
inc
jmp
daa
mov
ins
cli
inc
mov
pop
out
lahf
out
fwait
loop
push
(bad)
(bad)
fadd
in
jnp
pop
out
cld
push
pushf
add
mov
and
cmps
loopne
add
fwait
sub
mov
cmp
add
out
dec
mov
mov
push
adc
pushf
scas
stos
cmp
je
add
scas
lahf
imul
mov
adc
xlat
xor
xor
(bad)
mov
(bad)
xor
jmp
popf
and
jb
jnp
stc
adc
js
dec
cdq
and
test
xor
push
jo
xchg
jg
mov
fsubr
mov
mov
mov
div
(bad)
jmp
ja
inc
rcr
mov
mov
arpl
pop
cmps
or
adc
pop
adc
push
addr16
adc
xchg
retf
sbb
add
push
(bad)
xor
fs
or
pop
push
int3
or
add
sbb
xor
imul
xor
add
push
fcmovnb
hlt
add
fs
push
imul
aad
gs
fistp
or
pushf
arpl
fisttp
sbb
ficomp
mov
hlt
popa
scas
xor
gs
pop
fdiv
cmp
bound
inc
fwait
xor
sub
clc
xlat
push
inc
ins
mov
dec
in
adc
sub
adc
and
aaa
sub
data16
mov
add
or
std
sahf
arpl
jne
mov
mov
idiv
mov
jnp
or
pop
push
mov
push
fiadd
or
dec
mov
jle
mov
mov
cmps
jae
jnp
scas
push
(bad)
psubq
test
pusha
pop
pop
mov
hlt
xor
push
mov
mov
sub
loope
imul
add
jmp
cmps
or
push
push
test
cmps
sub
out
stc
add
mov
leave
add
add
push
iret
in
sbb
lods
cs
stos
cmp
movs
or
push
jl
test
mov
mov
jl
imul
sar
adc
pop
out
inc
and
jle
jmp
or
sbb
nop
sti
sub
ss
and
cmp
xlat
sbb
jge
and
inc
test
shl
bound
xchg
sub
out
in
imul
xchg
push
jbe
ftst
into
jns
add
cmp
icebp
mov
fistp
je
popf
and
movs
mov
(bad)
adc
loop
cmp
fdivrp
pop
addr16
pop
pop
sub
sub
nop
push
jo
mov
pop
add
icebp
es
pop
or
xor
data16
mov
outs
ret
fcom
(bad)
fisubr
adc
mov
xor
ins
sbb
sahf
popa
popf
dec
mov
call
mov
or
inc
adc
ror
and
std
adc
mov
rcl
call
lods
mov
sbb
inc
arpl
xor
imul
jmp
xor
inc
je
(bad)
cdq
cmp
jno
outs
imul
sub
mov
call
outs
lods
and
push
aam
fdiv
popa
ds
leave
cmps
retf
add
mov
movs
mov
add
mov
mov
data16
push
mov
xchg
das
repz
push
cmp
and
loop
xor
(bad)
shr
scas
adc
cmps
push
inc
and
inc
lock
adc
xor
lock
into
adc
mov
push
test
scas
(bad)
or
push
les
icebp
lods
test
(bad)
out
retf
mov
cwde
xchg
pop
adc
pop
jno
out
ret
sub
cmps
popa
stos
push
aad
test
addr16
std
xor
jo
xchg
cdq
add
shl
arpl
test
jne
xchg
xor
mov
in
aas
repz
cmp
lds
pop
loop
out
jb
pop
rol
out
mov
imul
test
pop
int
rcl
jo
in
push
daa
or
ins
mov
pop
cmp
clc
clc
sbb
sub
imul
fistp
loopne
cmp
repz
xchg
mov
sti
dec
jle
not
inc
scas
sbb
aaa
pop
lods
retf
fwait
dec
cmp
or
xchg
enter
ins
fdivr
jl
mov
fcom
or
std
xor
fyl2x
fdiv
enter
stos
or
push
jne
sbb
xchg
data16
mov
les
adc
lods
cmp
repz
pop
scas
xor
mov
ins
and
xor
in
adc
add
sub
xor
mov
inc
outs
mov
cmp
neg
out
cs
inc
push
(bad)
cmp
mov
cmp
mov
pop
and
mov
sub
test
pop
in
sbb
mov
mov
xchg
mov
mov
loopne
das
out
add
jno
test
sub
lds
aas
push
cld
and
jl
mov
push
jnp
je
(bad)
adc
out
and
ins
push
push
jbe
xor
add
ins
xchg
inc
dec
inc
(bad)
loope
int3
sub
push
sbb
pop
stos
fs
dec
mov
xchg
repz
imul
or
pop
outs
fcom
push
sub
sub
arpl
push
jae
in
je
mov
pop
iret
lods
cmp
out
icebp
int
mov
cmps
and
(bad)
mov
ins
pop
aaa
int3
(bad)
int3
sti
int
icebp
adc
fdivr
push
jnp
outs
cmp
or
int3
(bad)
aaa
mov
sub
call
and
out
lods
pop
ja
daa
cmp
fisubr
cmps
movs
test
in
xor
(bad)
adc
aas
adc
out
bound
and
mov
xchg
mov
push
mov
dec
loope
rcr
inc
mov
pop
outs
xchg
mov
sbb
int
xor
pop
dec
repz
sahf
inc
cmp
std
fistp
test
shl
lea
jp
push
xchg
jae
inc
sbb
push
dec
stc
outs
in
pop
inc
or
into
retf
mov
dec
mov
hlt
hlt
ftst
push
push
mov
jg
shl
push
mov
inc
mov
push
stos
in
xchg
and
ror
icebp
pusha
neg
sbb
mov
xlat
pop
out
pop
add
jmp
pop
push
push
inc
rol
scas
rcr
pop
xor
(bad)
mov
lods
or
mov
call
cmp
out
jle
outs
cld
pop
xchg
sbb
test
mov
sti
into
and
addr16
xchg
inc
ins
push
mov
xchg
dec
(bad)
xor
push
repz
inc
(bad)
in
fnsave
rol
ss
ret
jo
inc
mov
and
jo
inc
in
jnp
frstor
aaa
mov
es
cwde
(bad)
pusha
addr16
lea
pop
or
leave
div
dec
shr
leave
inc
fwait
pop
aaa
test
pop
and
sub
and
aam
dec
lods
adc
in
and
ret
xchg
das
(bad)
and
int3
ret
jnp
mov
sub
and
mov
ret
pop
loopne
mov
call
jmp
sbb
and
rol
pop
dec
popf
and
stc
mov
xchg
fdivr
ret
dec
cmps
int3
les
(bad)
pushf
xchg
sub
sbb
mov
pop
test
jb
jo
inc
out
mov
daa
(bad)
jne
outs
bound
and
out
cmp
ins
adc
inc
fbstp
push
inc
clc
cmp
pop
lods
dec
jo
cdq
(bad)
fidivr
mov
das
jne
iret
jge
leave
cmp
rcr
pop
adc
jnp
xchg
jle
jmp
sub
sub
jne
push
iret
sbb
shld
mov
sub
push
loop
sbb
and
cmp
es
and
les
popa
(bad)
mov
sar
push
fld
aad
test
or
push
push
daa
je
sahf
or
push
push
into
in
dec
(bad)
and
push
jo
popf
adc
outs
pop
fcmovnu
push
adc
mul
cli
inc
or
or
aas
sbb
pop
shl
cli
jecxz
and
in
mov
jno
repz
fwait
ss
repnz
daa
jns
jo
mov
mov
fs
mov
sbb
leave
mov
or
and
fcmove
pop
test
out
mul
sub
and
mov
jno
popf
add
push
dec
(bad)
mov
sub
bound
cli
push
bound
mov
mov
dec
and
shl
pop
popf
jle
sub
push
jl
mov
jbe
stos
and
popa
outs
dec
xchg
stos
mov
out
and
mov
dec
mov
xor
mov
mov
push
pop
sub
std
pop
adc
(bad)
fs
rcl
xchg
dec
(bad)
rcr
cmps
pop
pop
pop
out
and
mov
test
outs
aam
push
mov
dec
bound
cwde
xor
data16
ror
cld
push
jb
cmps
pop
adc
xchg
fisttp
cdq
ficom
int3
xchg
or
enter
ror
ja
js
mov
rcr
call
stos
and
mov
out
int
xor
outs
inc
lahf
or
(bad)
adc
mov
cmc
or
(bad)
sub
cmp
push
not
mov
xor
sbb
cmp
jo
xor
inc
jg
mov
push
and
sbb
test
jg
sbb
dec
jle
add
mov
loope
inc
aad
cmp
and
sbb
cmp
sbb
mov
data16
inc
dec
push
push
out
scas
test
mov
sti
(bad)
shr
mov
movs
jl
sbb
xor
mov
mul
fld
mov
aaa
icebp
sti
xor
and
in
out
repnz
and
push
ret
sub
fucomip
enter
xor
daa
inc
jmp
push
mov
fwait
push
dec
mov
and
outs
mov
pop
scas
xchg
mov
leave
jecxz
es
or
lds
outs
call
sub
jns
sub
enter
mov
aaa
jae
xor
xchg
mov
adc
fst
mov
icebp
das
pop
cmp
sbb
loopne
xchg
and
test
(bad)
ret
mov
sub
mov
dec
mov
cmp
movs
in
add
(bad)
fnsave
add
jns
in
fisttp
mov
sahf
or
dec
call
cdq
mov
add
adc
add
loopne
in
mov
test
xor
add
push
xchg
addr16
xchg
and
bound
sub
adc
xchg
scas
xor
imul
sub
mov
dec
stc
or
test
xchg
pop
out
pop
mov
xchg
xchg
sub
dec
push
dec
sbb
outs
xchg
xchg
retf
call
jo
(bad)
and
fwait
pop
int
pop
aam
mov
mov
sbb
mov
int3
jbe
dec
cmp
dec
dec
inc
retf
xchg
stc
mov
pop
dec
repz
sbb
cmp
mov
push
cmp
jnp
mov
jecxz
gs
out
pop
pop
xor
sub
and
jno
icebp
movs
mov
les
shl
ffree
gs
std
mov
lds
xor
push
sub
out
aad
jb
stos
and
mov
fcmovu
std
stc
movs
mov
out
and
(bad)
into
xlat
mov
sub
dec
std
push
out
nop
ins
not
jmp
mov
hlt
(bad)
mov
dec
es
adc
hlt
inc
ss
cmp
sar
mov
lea
and
popf
out
jne
dec
mov
rcl
mov
or
xor
mov
xor
and
ins
repz
les
leave
pop
in
cmps
and
shr
mov
les
xchg
lahf
mov
pop
jecxz
in
adc
inc
pop
inc
hlt
sbb
int
jle
inc
push
xor
push
pop
or
push
gs
sbb
fsubr
cmps
scas
mov
inc
xchg
xchg
sbb
outs
sti
jb
xchg
icebp
mov
pop
int3
std
jo
cmp
pop
pusha
dec
push
pop
std
cli
dec
and
lods
adc
sbb
sub
mov
mov
dec
cmp
add
lar
aas
jb
stc
loop
inc
rcl
data16
es
test
add
fdiv
(bad)
std
cmps
lock
push
nop
mov
aaa
int
stos
and
push
loope
mov
loopne
push
(bad)
stos
and
popa
sbb
push
ret
outs
jp
adc
mov
push
xor
pusha
sahf
mov
mov
pop
mov
mov
stc
add
push
out
test
adc
stc
fst
or
popf
dec
js
inc
adc
mov
shr
jb
int3
jb
out
test
(bad)
and
dec
mov
jno
cld
dec
popf
scas
and
or
or
xchg
out
push
jle
push
ins
cs
dec
mov
fmul
movs
cld
mov
fcomp
jmp
lahf
cmps
pushf
push
(bad)
popa
enter
mov
shr
mov
add
arpl
add
cdq
push
call
out
retf
xchg
pushf
inc
mov
rol
test
ret
aam
test
jmp
mov
cmp
pop
repnz
mov
cmp
mov
push
jns
jno
adc
mov
jmp
icebp
ja
fist
pushf
stos
popf
mov
jnp
mov
test
cmp
clc
sti
lds
ret
dec
adc
pop
movs
cmps
mov
mov
rcr
xchg
pop
dec
data16
sbb
and
jno
cdq
and
(bad)
std
and
dec
fmul
mov
fnstsw
seta
xor
adc
mov
sub
retf
xor
lock
out
jo
jnp
sub
xchg
enter
pushf
inc
jg
int3
xchg
(bad)
gs
shr
cmp
jmp
mov
rol
inc
cs
pop
gs
adc
sub
and
cmps
mov
add
popf
add
jmp
dec
movs
mov
mov
jp
mov
xor
ror
cmps
mov
fadd
retf
sub
dec
sub
cld
rcl
xor
and
adc
ja
ror
dec
out
dec
cdq
fwait
mov
mov
popa
or
movs
jle
loope
ja
push
dec
daa
outs
mov
dec
sbb
inc
xchg
mov
mov
int3
xlat
cmp
test
xor
call
loope
movs
add
cmp
mov
mov
(bad)
nop
mov
fdivrp
push
inc
pop
jmp
add
mov
adc
mov
and
sbb
mov
(bad)
stc
xor
and
test
xor
and
movs
mov
std
icebp
jne
clc
fwait
inc
outs
imul
cld
inc
mov
cmp
call
ds
enter
movs
dec
cli
dec
lea
inc
dec
in
int
jb
push
fsubr
or
aas
adc
xor
mov
dec
clc
rol
ins
xor
frstor
sti
fs
mov
ins
scas
movs
in
iret
pop
out
sahf
and
mov
pop
pop
inc
aad
cmc
push
les
jb
(bad)
cmc
sbb
xchg
retf
jmp
xchg
test
fistp
mov
(bad)
xchg
or
push
mov
idiv
mov
mov
ja
les
xchg
and
(bad)
pop
mov
jle
adc
xor
sbb
inc
out
jmp
or
jg
gs
xor
add
repnz
arpl
in
(bad)
test
lock
clc
pop
(bad)
call
mov
push
xchg
or
jle
inc
cmp
or
fild
or
sub
imul
cwde
sar
and
push
push
sub
js
add
jecxz
xchg
ret
cwde
fldcw
inc
retf
mov
leave
mov
mov
jle
xchg
mov
dec
add
test
cmp
xchg
dec
xor
iret
dec
repz
fisttp
push
(bad)
rcr
add
(bad)
into
and
sbb
sub
push
jns
ror
sar
and
push
jmp
aam
ins
enter
fcom
in
das
jns
icebp
adc
int
outs
or
in
mov
repz
fidiv
dec
cmp
iret
aas
or
push
add
ds
push
sti
jo
mov
push
test
fild
retw
sbb
cli
out
dec
in
xchg
xchg
and
sbb
repz
js
dec
and
mov
ret
mov
in
stc
jmp
sbb
xchg
mov
inc
int3
call
pop
mov
jl
in
stos
retf
in
stos
xchg
sub
push
rcl
lods
hlt
jno
cmp
sbb
add
mov
stos
fdivr
mov
mov
dec
mov
(bad)
scas
push
adc
ss
ret
test
stos
enter
arpl
hlt
push
rcl
add
inc
out
dec
stc
pushf
jg
mov
cmp
dec
sub
out
outs
mov
rcl
jmp
jmp
adc
push
jle
or
int
rcl
bound
xchg
or
cmp
or
mov
xlat
retf
fistp
mov
dec
loopne
push
and
mov
jnp
xor
fcmovbe
(bad)
imul
sub
jge
and
sahf
inc
or
clc
sti
pop
push
adc
jo
in
or
out
xor
imul
adc
stc
xor
ror
jae
dec
mov
sti
inc
xchg
jb
pop
xchg
pop
lds
xchg
cld
add
sub
mov
mov
push
inc
les
vandps
test
sub
inc
and
inc
fdiv
je
sbb
inc
inc
jae
pop
je
scas
(bad)
mov
scas
push
rcl
cli
rol
or
in
jg
ret
test
mov
dec
aad
adc
(bad)
popf
enter
adc
sbb
fbld
push
xchg
fisubr
std
inc
into
mov
stos
inc
in
jl
dec
shl
jb
dec
push
dec
sbb
fst
nop
push
popf
mov
mov
push
sti
xlat
dec
and
mov
sub
or
mov
mov
mov
cmps
mov
sbb
inc
test
dec
push
cmps
lods
aas
dec
addr16
inc
or
test
mov
ret
test
mov
stos
sti
mov
dec
popa
enter
fisubr
sar
ds
inc
std
pop
cmp
cmp
out
jge
daa
ret
js
cmps
cmp
test
scas
(bad)
pop
push
add
outs
mov
sahf
push
test
jbe
test
shl
sbb
mov
mov
int3
fistp
in
mov
enter
int3
rcr
fcom
lock
push
hlt
aad
push
in
dec
dec
xchg
dec
enter
sub
ror
mov
add
test
and
aam
cmp
shl
das
cmp
dec
popa
mov
add
inc
pop
sub
adc
int
sub
sub
pop
mov
mov
(bad)
ret
mov
jae
outs
push
cmps
pop
test
push
lods
lahf
xchg
adc
fdiv
push
(bad)
(bad)
jg
xchg
adc
jmp
or
cmp
js
fdiv
mov
fsub
fxch
xchg
pop
add
mov
mov
push
mov
loop
mov
pusha
aaa
lods
rol
stc
(bad)
or
jp
sbb
adc
mov
mov
lahf
test
pushf
push
inc
xchg
mov
jnp
xchg
mov
aad
repz
jbe
mov
sub
cmp
sub
jecxz
scas
lea
mov
ss
ins
mov
jmp
iret
pop
repnz
cmp
xlat
sub
add
xor
pop
sub
jg
jns
xchg
movs
push
mov
fcomp
and
sbb
push
inc
outs
pop
push
idiv
jmp
jbe
mov
push
retf
or
out
pop
mov
call
lahf
or
retf
movs
fild
or
pop
or
mov
xchg
test
jns
xor
xor
mov
mov
aad
ja
xchg
add
lods
and
dec
cli
adc
(bad)
sbb
jp
ss
daa
inc
stos
pop
lods
adc
cmp
pop
add
fidiv
mov
test
outs
xchg
mov
and
xchg
(bad)
cmp
shl
sbb
pop
xor
xor
aaa
xor
jmp
cmps
jb
dec
adc
push
frstor
aaa
ss
test
mov
mov
xchg
push
sbb
sbb
mov
pop
mov
fstp
hlt
xlat
popf
repnz
mov
cli
and
mov
aam
sbb
jmp
jl
out
push
out
sbb
fldlg2
out
fldenv
lods
inc
(bad)
imul
lock
icebp
cmps
cmps
int
jmp
ja
jne
aam
or
push
test
pop
fdiv
cmp
ja
add
push
arpl
pop
ret
ret
and
cmp
ror
and
sub
fisubr
lahf
addr16
sub
(bad)
inc
addr16
mov
mov
pop
std
jecxz
fstp
xor
mov
mov
inc
mov
ins
pop
dec
add
das
sbb
shl
ja
mov
sahf
jmp
dec
arpl
sub
(bad)
cmp
or
fwait
add
out
mov
mov
sbb
(bad)
mov
push
add
mov
jl
or
jo
sub
addr16
outs
sub
sub
ja
dec
push
xor
sub
xchg
ins
and
ret
fadd
push
(bad)
daa
(bad)
ror
ss
jmp
push
popa
xchg
and
(bad)
sar
mov
pop
cmp
mov
mov
xchg
ins
adc
daa
imul
int
and
pop
repz
scas
pop
outs
push
rcl
lahf
inc
das
cmp
xchg
push
hlt
pop
dec
pop
adc
out
xor
outs
inc
and
sahf
mov
mov
mov
out
pop
cmps
inc
mov
jp
ror
jae
sti
stc
or
pop
cdq
jmp
aas
and
mov
shr
cmp
and
and
pop
sbb
pop
mov
js
mov
xchg
mov
iret
hlt
fld
xor
outs
rcl
fisubr
or
inc
inc
data16
xchg
hlt
out
in
test
stos
push
pusha
stos
aad
sbb
and
les
add
pushf
mov
loope
dec
pop
push
mov
sub
add
int
ror
mov
xchg
jp
lock
gs
test
dec
cmp
or
add
xor
cmovnp
cmps
outs
jns
and
sub
xchg
lds
mov
and
iret
add
in
test
clc
ret
outs
sub
shl
inc
dec
retf
sahf
iret
retf
or
cmp
mov
mov
push
xor
fild
mov
sbb
inc
xor
inc
or
shl
hlt
scas
out
cmp
sahf
aas
in
dec
scas
jmp
push
mov
mov
sbb
repz
mov
ret
jmp
pop
cmp
add
das
pop
retf
lock
jl
add
or
cmp
aam
ror
in
inc
scas
mov
or
cmp
jmp
sbb
mov
mov
mov
fs
test
ja
ins
cmp
cs
ins
fs
lock
cli
push
xor
mov
inc
cs
mov
inc
scas
rcl
sub
push
jae
test
test
sub
mov
xlat
push
popf
dec
mov
pop
xchg
sar
inc
adc
outs
shl
inc
nop
push
stc
ds
and
push
sbb
out
mov
jb
adc
fs
loope
adc
and
sbb
cmp
or
nop
cmp
lahf
xor
push
xchg
fwait
sub
call
push
inc
jmp
xor
arpl
dec
adc
lahf
imul
shr
dec
dec
xor
jmp
xchg
mov
jbe
jecxz
daa
cmovs
mov
das
add
addr16
or
pushf
hlt
and
popf
ins
cmps
call
sbb
jnp
xchg
inc
push
cmp
js
xchg
(bad)
mov
stc
or
clc
mov
xchg
aaa
or
(bad)
fisttp
xor
push
push
jno
test
dec
loopne
cmp
test
sbb
xchg
adc
retf
xchg
add
mov
and
ds
les
jae
pusha
xchg
cwde
mov
xor
lods
xchg
cmps
and
add
test
inc
mov
repz
sbb
out
jo
lods
outs
push
push
cmp
pushfw
mov
std
cmc
mov
cmp
mov
pop
sub
mov
out
cmp
cs
(bad)
out
mov
xor
mov
mov
xchg
dec
push
in
mov
and
xchg
xchg
hlt
add
lds
pop
test
rol
std
mov
push
jp
retf
jle
scas
inc
xor
adc
adc
inc
loopne
jo
xchg
mov
cmp
out
sbb
fisttp
data16
mov
or
cmp
cmp
jp
xchg
fidiv
std
dec
mov
loope
in
imul
jmp
(bad)
cld
push
cmp
mov
mov
jg
jmp
in
mov
dec
sub
mov
pop
pop
mov
jmp
cli
aas
mov
xor
sub
jbe
and
(bad)
xchg
fwait
icebp
mov
dec
das
rcr
mov
xor
icebp
xchg
mov
(bad)
pusha
in
enter
push
out
add
sub
and
dec
xor
add
mov
sbb
scas
daa
ret
cmp
out
pop
lods
ins
daa
cmp
aam
in
in
dec
mul
ss
pop
fiadd
dec
ss
in
pushf
mov
mov
dec
cmp
mov
push
xchg
push
dec
in
jne
sub
ret
push
mov
mov
(bad)
retf
and
mov
adc
sbb
dec
xchg
aas
xor
or
out
mov
sub
hlt
loope
xor
sahf
dec
repnz
retf
loope
jmp
shl
or
setg
cli
mov
(bad)
jmp
test
push
mov
or
std
dec
cs
sbb
popa
push
xchg
fwait
cmps
pushf
mov
mov
xchg
fimul
mov
or
sub
shr
out
xor
push
in
in
fsub
push
enter
mov
push
inc
mov
js
pop
mov
ss
jne
mov
pop
fild
sub
nop
(bad)
aaa
jl
lods
mov
stos
dec
test
mov
mov
pop
lea
xchg
cdq
test
mov
lods
and
pop
jg
cmp
repz
or
retf
lods
push
cmp
sub
push
int
push
loop
shl
mov
inc
movs
push
arpl
addr16
jp
(bad)
adc
movs
cwde
mov
inc
add
add
fcom
push
fld
pop
jg
push
loop
ins
pop
jb
shr
jne
sub
mov
cmp
mov
fistp
sub
cli
mov
fmul
sub
cmp
mov
push
or
xor
std
jge
(bad)
cmp
in
clc
jno
in
pop
and
jmp
sar
mov
fcom
dec
ins
sub
test
cmp
xchg
fdiv
pop
pop
dec
cmp
lods
daa
sbb
xor
mov
push
xchg
sbb
(bad)
push
push
mov
and
(bad)
cwde
mov
jo
int
sbb
movs
(bad)
lock
out
xor
lods
jmp
sub
call
nop
aaa
sbb
arpl
fild
push
adc
mov
vmovlps
ins
mov
sub
inc
push
push
in
jle
add
sbb
mov
dec
push
fistp
(bad)
stc
cmp
jle
call
jne
sub
sub
push
jle
dec
fisubr
scas
sar
fbstp
pop
xchg
out
enter
(bad)
dec
xor
push
and
dec
mov
pop
and
addr16
push
into
add
jnp
mov
mov
mov
jp
pop
call
fwait
mov
jne
push
dec
sahf
adc
out
cmp
sbb
ins
dec
call
clc
bound
pop
inc
shr
(bad)
dec
adc
jp
xor
add
pop
dec
dec
and
jnp
sbb
pop
sti
dec
rcr
arpl
and
js
movs
in
es
sub
sub
movnti
fiadd
pop
adc
shl
add
inc
push
gs
cld
xlat
push
rol
mov
ins
push
int
in
call
xor
jp
sbb
or
aas
sbb
cmp
xchg
repz
shl
jne
push
dec
leave
pushf
aam
dec
mov
cmp
ins
ret
inc
(bad)
pop
outs
inc
test
sti
(bad)
jmp
mov
lods
sbb
add
daa
js
aas
pop
fwait
retf
call
rol
fimul
ret
mov
inc
loopne
push
cmps
bound
jmp
inc
mov
cmps
sub
dec
xchg
cwde
push
sub
inc
iret
adc
daa
adc
add
shr
mov
sub
inc
xchg
pop
sbb
adc
lahf
xor
mov
mov
arpl
xor
push
pop
xchg
sub
inc
sti
pop
jns
inc
push
sub
cmps
into
jno
or
mov
push
call
adc
movsx
clc
and
dec
add
push
pop
add
mov
jecxz
or
push
cmps
sbb
mov
mov
mov
cmps
stos
mov
ss
adc
cmp
into
cwde
iret
and
mov
dec
sub
cwde
sbb
mov
xchg
popa
scas
stos
jnp
cmp
dec
mov
mov
mov
mov
repnz
retf
not
sbb
mov
add
in
xchg
xchg
outs
jmp
sub
mov
jle
xor
call
dec
sbb
loopne
cmps
push
and
shr
out
in
or
add
hlt
cmps
enter
cmp
(bad)
mov
xor
test
jle
xchg
push
push
add
pop
fwait
add
test
test
rcl
xor
dec
or
pop
pop
pop
sub
pushf
sub
cmp
int
xchg
adc
cs
xchg
aad
push
xor
aam
outs
popf
push
or
cmp
in
scas
lahf
bound
jle
jns
adc
pinsrw
fwait
cmp
out
lods
mov
lods
sbb
fistp
mov
push
ins
xor
cmp
(bad)
mov
cmp
sti
out
addr16
xchg
or
push
inc
ror
pop
inc
push
jp
fwait
xchg
aad
dec
scas
jo
inc
push
adc
mov
mov
enter
jbe
call
sbb
jmp
(bad)
shr
cld
xchg
mul
xor
or
lea
mov
lds
js
ss
ja
fiadd
icebp
daa
loope
repnz
pop
add
sbb
push
sub
inc
in
shr
fwait
nop
loope
arpl
sub
pop
jb
into
mov
mov
xor
or
clc
or
imul
into
pushf
and
in
mov
add
mov
cmp
lahf
or
clc
push
bound
int3
and
mov
push
adc
cs
pxor
in
adc
xchg
mov
ds
mov
cmc
ret
mov
int
sbb
adc
fisttp
lods
shl
xor
loopne
pushf
sbb
inc
fs
xor
inc
mov
pop
jg
mov
dec
ss
jge
lea
add
aad
push
jge
jmp
jnp
add
pop
jo
scas
int
xor
cwde
xchg
mov
rcl
mov
ins
ficomp
mov
mov
movs
fcomp
and
inc
mov
idiv
jbe
out
or
inc
out
addr16
jbe
xor
sub
(bad)
push
add
jb
cmp
stos
sub
mov
test
mov
mov
xchg
loop
loope
aas
stc
pop
pop
push
loopne
lods
test
call
mov
sub
mov
mov
repnz
into
inc
pop
popa
or
(bad)
add
push
test
xchg
daa
inc
out
jl
xor
cmp
xchg
xchg
fild
adc
repnz
aaa
inc
mov
in
adc
jne
adc
pop
push
cmp
aam
call
out
mov
sbb
sbb
mov
xor
and
movs
mov
iret
arpl
fisubr
fsubr
shr
popf
hlt
adc
ret
mov
or
scas
xor
mov
clc
dec
sbb
clc
repnz
loop
dec
popf
pop
lahf
mov
ins
jnp
push
fsubr
and
in
(bad)
mov
mov
xchg
in
jg
sti
js
xor
movs
leave
cwde
sbb
cmp
test
jb
(bad)
clc
xor
push
popf
mov
test
push
imul
repz
call
call
ja
cmp
dec
pushf
aam
scas
and
push
shr
pop
outs
jecxz
lods
jo
push
imul
or
fwait
push
xor
dec
in
pop
jbe
mov
or
cld
jbe
enter
lods
or
call
call
lock
repnz
xor
add
inc
sub
lahf
sbb
(bad)
cmp
(bad)
out
push
jp
dec
das
xchg
mov
or
(bad)
repz
dec
imul
jle
mov
addr16
sahf
gs
or
jp
adc
loopne
mov
inc
fst
mov
jl
retf
xchg
add
lods
adc
push
xchg
ins
in
loopne
or
stos
sbb
push
sbb
adc
cmp
cwde
push
sbb
adc
push
pop
fistp
and
or
imul
cmp
mov
ins
jge
mov
sbb
shl
outs
in
cmp
dec
jmp
test
dec
xor
sbb
ds
bound
inc
stc
pop
int3
jle
jg
jecxz
rcr
push
sbb
pop
sub
popa
sahf
lods
cs
dec
pushf
cmp
pop
sub
(bad)
shr
pushf
xor
shl
repz
push
add
xor
mov
repz
mov
xchg
xor
xchg
pop
ins
lods
movs
lods
adc
inc
sub
adc
inc
mov
fsub
sar
pop
fucom
mov
pop
and
jle
pop
or
pusha
and
fdivp
addr16
or
or
cli
xor
jge
add
sbb
imul
adc
outs
js
cmp
lahf
and
je
mov
movs
xchg
imul
dec
sti
rcl
dec
mov
mov
inc
retf
fild
test
in
bound
jne
aad
dec
cwde
sub
mov
fwait
daa
(bad)
pop
cmp
pop
mov
cmp
sub
jle
dec
jmp
aam
inc
data16
pushf
stos
jmp
or
jle
jo
push
jnp
pop
int
mov
icebp
ins
out
mov
sub
and
cmp
pop
jp
or
jne
push
xchg
sbb
push
xor
iret
lea
pop
adc
retf
adc
and
dec
push
cmp
jle
pop
pop
imul
pop
inc
sbb
pop
or
aaa
int
cmp
cli
ins
ret
adc
lahf
scas
pmullw
xchg
adc
imul
out
(bad)
mov
add
cld
xor
xor
xchg
sbb
cmp
xor
mov
in
mov
jns
retf
retf
lods
test
and
mov
int
scas
mov
add
shr
xchg
and
sti
retf
js
mov
jnp
push
imul
push
inc
adc
fst
xlat
cwde
xchg
jno
dec
cmp
ds
or
dec
and
sub
repz
scas
jne
mov
minps
retf
sub
xor
outs
mul
add
scas
pop
inc
mov
(bad)
jp
cmp
ss
fstp
mov
inc
pop
pop
adc
gs
xor
mov
(bad)
pop
loope
jns
cmp
loope
sub
adc
mov
sar
inc
out
cmps
xor
mov
sbb
pop
out
repz
adc
jo
jl
ja
dec
stos
in
adc
fisubr
cwde
neg
pop
shl
lods
xchg
jp
push
das
jmp
and
add
call
and
sub
ret
sar
int3
jno
mov
jecxz
mov
sahf
sub
call
inc
jg
xchg
clc
mov
xor
sub
pop
lea
pop
and
fld
dec
out
call
in
ja
ja
mov
(bad)
scas
adc
jmp
and
pop
jmp
pushf
or
jp
jecxz
mov
sub
push
jo
dec
dec
ffreep
mov
dec
mov
std
inc
clc
lock
cmp
call
cmp
mov
lds
inc
in
inc
jecxz
ret
xlat
stos
push
ret
(bad)
sbb
jnp
sahf
cmp
stos
cmps
rcr
and
dec
pop
nop
stos
mov
(bad)
bound
sub
mov
add
hlt
pop
dec
inc
out
push
push
sub
je
sub
out
mov
pusha
mov
mov
lock
loopne
mov
dec
jne
pushf
sub
imul
ficomp
sbb
call
test
fisttp
xchg
adc
shl
clc
in
add
fdivp
test
mov
or
pop
xor
jno
div
loopne
jns
jl
(bad)
fimul
push
and
aam
imul
add
fs
push
dec
xchg
push
inc
mov
in
stc
sbb
or
mov
mov
jnp
int3
mov
adc
repnz
lahf
or
ins
mov
xor
cwde
push
loop
add
ret
das
jae
sbb
jmp
les
outs
xchg
rcl
es
ds
pop
ja
adc
xlat
(bad)
imul
xchg
out
inc
push
js
or
sbb
aaa
lods
jb
push
movq
(bad)
mov
push
mov
cmp
inc
sub
add
shl
push
pop
fnsave
push
sub
and
dec
sbb
imul
sub
fcom
and
xor
ficom
in
popa
ret
sbb
sar
scas
or
out
or
ret
or
mov
loop
pop
cmp
xor
xor
ret
sbb
mov
mov
dec
pop
(bad)
cmp
sbb
adc
pop
in
xchg
in
rcl
push
mov
in
retf
jmp
mov
add
sbb
dec
inc
or
xchg
imul
retf
and
cmp
int
push
aam
cs
pop
adc
push
mov
inc
mov
test
mov
inc
into
xor
lahf
mov
and
cmp
jbe
int3
pusha
push
ffree
xor
(bad)
lods
sub
repz
int
xchg
popa
xchg
out
lods
je
inc
mov
add
xor
mov
cmp
sbb
retf
lahf
push
jg
(bad)
stc
out
sub
xchg
mov
fcmovnbe
and
cmp
xchg
nop
int3
iret
mov
pop
pop
ja
bound
cmp
fild
push
(bad)
test
adc
pusha
push
jp
lea
sbb
mov
gs
hlt
pop
fdivrp
sbb
into
lods
fsubr
push
push
xor
mov
mov
pop
neg
mov
popaw
pop
cmp
in
cmps
rcl
test
rcl
dec
adc
repnz
gs
repnz
jmp
popa
in
movs
push
sbb
leave
rcl
push
pop
ret
pop
push
xchg
in
jg
xchg
sbb
cvtdq2ps
xor
clc
into
(bad)
stos
mov
mov
stos
nop
scas
mov
sub
or
xchg
pop
cmc
push
jle
loop
arpl
fsubr
jge
push
repnz
push
xchg
addr16
fwait
sub
mov
ret
mov
pushf
test
cwde
mov
cli
fmul
add
or
xchg
daa
jns
das
call
mov
mov
data16
in
push
mov
dec
lds
lock
clc
repnz
daa
data16
cmps
into
sub
aas
sbb
out
outs
or
ret
xlat
ins
xlat
add
mov
jge
xor
xchg
push
push
sub
or
rcl
xchg
sbb
mov
ds
pushf
imul
es
add
lds
fst
inc
and
xor
push
dec
jl
xchg
fstp
mov
xchg
outs
int
inc
sti
in
cmc
or
adc
adc
in
call
movs
jle
push
stos
stos
(bad)
sub
into
enter
jg
sbb
cmc
mov
adc
frstor
or
jb
xchg
retf
adc
fist
sbb
leave
mov
ret
jnp
fdivrp
movs
sahf
sub
pop
pop
sar
pop
hlt
push
cdq
pop
jne
outs
inc
ret
fisttp
cmp
push
loop
mov
xchg
dec
add
xchg
mov
push
mov
jne
and
fild
cld
push
test
and
lods
adc
jmp
cwde
adc
cwde
fnstcw
jb
xor
xor
ficom
and
mov
rol
out
jmp
aaa
cli
jmp
jo
mov
pushf
sahf
stos
pop
retf
fist
xor
add
jmp
mul
stc
adc
push
xchg
sbb
scas
mov
push
out
mov
push
push
fwait
or
mov
dec
repnz
ret
push
outs
enter
sub
push
jge
cld
xchg
sbb
aaa
rcl
inc
scas
inc
das
and
fimul
jp
repz
mov
push
sub
cld
jp
and
js
repz
daa
adc
test
scas
enter
pop
jb
lahf
or
xchg
xor
jb
ret
jne
inc
sub
movs
(bad)
dec
pop
loope
mov
cmp
xchg
mov
loope
mov
inc
outs
mov
push
add
int3
cwde
xchg
(bad)
dec
jne
aas
popa
out
pop
xor
xchg
and
mov
mov
outs
sbb
inc
adc
adc
aam
push
inc
jle
fadd
repz
lds
mov
pop
push
mov
mov
jle
shl
call
inc
js
lahf
adc
loopne
movs
pop
rcr
stos
push
mov
dec
(bad)
enter
cmp
repz
loopne
lods
lods
dec
jae
pusha
sbb
arpl
cwde
sahf
and
scas
mov
test
mov
stos
jnp
dec
push
out
push
test
fldenv
ins
ror
cmp
sub
out
sbb
and
fs
imul
mov
sbb
mov
repz
ins
and
cmp
(bad)
enter
lods
mov
xchg
ret
push
bound
pop
ret
pusha
in
fld
rol
ins
clc
sub
sub
retf
faddp
jge
fnsave
and
bound
mov
xchg
adc
dec
mov
cmp
pushf
fadd
test
and
hlt
loopne
in
push
aad
out
pop
or
daa
pop
es
enter
stos
cmps
leave
ret
cmc
out
test
mov
imul
add
aas
inc
cmps
and
imul
popf
cmps
data16
add
mov
pop
adc
cmp
mov
addr16
popf
idiv
fs
adc
pop
mov
pop
stc
mov
pop
sub
xchg
mov
je
out
jmp
pusha
cli
ror
jecxz
mov
(bad)
bound
push
adc
or
cdq
add
sahf
jecxz
in
cmp
add
bound
loope
xchg
mov
sub
pusha
imul
dec
movs
or
xlat
push
sub
mov
jmp
jp
push
mov
mov
and
jmp
push
lahf
mov
shl
rol
cli
jae
adc
mov
retf
and
dec
xor
loopne
push
in
fwait
push
xor
fsubr
jp
inc
or
test
movs
jmp
in
dec
sub
mov
movs
sbb
iret
addr16
cmp
jp
cmps
in
cmps
aad
jmp
(bad)
push
jns
or
call
push
dec
movs
jmp
push
and
push
out
add
push
ins
std
push
adc
stc
pop
retfw
popa
or
or
int
jl
rol
mov
jns
dec
mov
retf
icebp
sub
pop
iret
and
lds
stos
push
fwait
pop
cli
gs
in
pusha
push
pop
daa
sub
pop
pop
adc
aas
push
cmp
sbb
pusha
nop
pop
mov
mov
(bad)
xor
push
sub
cmp
ja
fidiv
cld
adc
jle
movs
or
mov
and
mov
loopne
lock
xchg
and
inc
shr
int
repz
iret
neg
fstp
add
sbb
push
xchg
test
cmps
xchg
inc
cmc
dec
cmp
adc
jnp
es
lods
and
push
add
jge
arpl
sbb
pop
mov
add
aad
or
cli
aas
mov
cmp
leave
or
test
ins
iret
push
mov
jmp
or
ds
lahf
pop
movs
fisttp
fdivr
push
gs
fidivr
jle
mov
cmps
push
adc
push
pop
pop
mov
pop
lods
aam
test
sti
push
xchg
mov
or
xlat
aas
mov
lahf
push
in
mov
xchg
push
sub
add
mov
and
lods
call
mov
cmc
repnz
dec
mov
xchg
arpl
xchg
ja
cmp
pop
clc
ins
xor
or
push
sbb
fdivr
lods
scas
xchg
shl
fdiv
(bad)
cs
mov
jmp
fild
xor
clc
popa
aas
push
sub
push
pop
dec
and
add
jp
push
jp
mov
xchg
sti
(bad)
repnz
add
mov
loope
cmp
pop
jmp
cmp
xchg
cli
push
les
bswap
sahf
loope
stc
xchg
xchg
loop
push
pop
ret
sti
mov
xchg
test
mov
jmp
cmp
icebp
jmp
add
fucomip
bound
xor
push
mov
daa
mov
pop
out
ret
in
lods
push
mov
xor
dec
mov
outs
jmp
adc
js
cmp
stc
mov
jae
loope
mov
push
cmp
ds
add
lods
xchg
imul
mov
lods
dec
shl
or
pop
js
push
hlt
or
in
add
xor
data16
cs
out
loope
stos
imul
and
pushf
dec
cmp
mov
lock
nop
in
lahf
mov
xchg
add
nop
call
fnstsw
hlt
xchg
into
push
add
dec
outs
and
in
cld
in
rol
(bad)
sbb
inc
jns
lods
fs
pop
aas
das
add
imul
sar
into
mov
out
(bad)
fcom
and
ja
fcomp
mov
out
test
jo
cmp
(bad)
mov
clc
movs
stos
aas
pop
out
ins
popa
dec
dec
xchg
and
jb
adc
into
nop
lods
push
mov
mov
mov
sbb
cli
jecxz
jp
jecxz
repnz
jecxz
sub
xchg
pop
inc
xchg
or
(bad)
outs
jl
mov
or
sub
pusha
sbb
lods
iret
popa
hlt
sub
xchg
or
jg
call
icebp
sub
xchg
and
test
dec
pop
sahf
aad
mov
retf
mov
out
push
leave
add
mov
inc
jbe
fistp
inc
fwait
sbb
mov
adc
pop
loop
pop
repz
mov
iret
jle
cmc
out
sbb
ss
ins
js
pop
fwait
into
dec
or
mov
xor
sbb
add
xlat
push
mov
enter
push
jle
lods
push
hlt
inc
push
scas
add
and
mov
and
test
cli
dec
rcr
call
pusha
adc
cmp
aaa
cmps
jl
in
add
retf
ss
adc
jp
fimul
cmc
or
dec
fidivr
sbb
xor
pop
(bad)
sar
test
xor
xchg
(bad)
or
mov
fsubr
or
xchg
in
inc
test
ret
out
jp
or
xor
bound
or
cmp
adc
cdq
inc
or
xor
inc
call
or
inc
push
aaa
imul
jle
cmp
std
add
enter
dec
int
push
stc
push
jne
jmp
sar
jmp
cmp
mov
cli
cwde
and
mul
jno
mov
scas
inc
fwait
cdq
jb
and
retf
inc
xlat
fistp
pop
cmp
mov
rol
or
sub
adc
cld
adc
mov
pop
test
inc
and
sub
stos
mov
add
mov
cmp
xchg
(bad)
mov
(bad)
jns
aaa
test
adc
jno
sbb
lahf
jle
stos
and
bound
lahf
mov
jns
pop
jle
xor
sbb
retf
push
hlt
mov
data16
shr
fisttp
out
dec
ins
mov
xchg
mov
jmp
mov
add
int3
inc
cli
rol
fnstenv
ds
push
daa
add
loop
xchg
dec
pop
std
jo
adc
js
jb
arpl
mov
sbb
mov
sub
inc
int
sub
cmp
out
sbb
dec
fxsave
in
cwde
test
mov
adc
gs
or
in
rcr
pop
into
pushf
arpl
cli
in
pop
push
cdq
call
jmp
push
mov
das
test
mov
call
stos
in
cmp
js
xchg
push
int3
xor
mov
mov
sbb
int3
add
call
sub
add
pop
les
sbb
loop
cmp
fdiv
movs
and
in
mov
mov
adc
and
xor
and
repnz
add
(bad)
jecxz
or
test
mov
in
mov
xor
mov
out
add
je
mov
outs
mov
imul
imul
jo
test
out
inc
shr
scas
fldcw
fld
ret
and
mov
mov
(bad)
lods
lods
xchg
not
and
xchg
stos
xchg
mov
add
mov
stos
in
cmp
sbb
loopne
(bad)
add
mov
add
int3
clc
mov
or
int
push
mov
fild
sub
loope
lock
std
outs
mov
pusha
mov
jno
ffreep
mov
xchg
mov
stc
xor
pusha
scas
mov
sbb
mov
xchg
lods
pusha
or
fisubr
xchg
push
aam
loop
sub
scas
test
(bad)
inc
mov
rcl
pop
mov
add
adc
mov
sar
pop
jmp
cmp
jns
js
mov
mov
xor
test
jno
fisubr
add
jl
xchg
mov
mov
leave
mov
xchg
loope
loope
shl
push
push
pushf
imul
pop
fld
int
pushf
leave
out
xor
sar
inc
je
jno
ja
pop
inc
sub
out
not
aam
mov
fs
push
(bad)
mov
xlat
xchg
imul
pop
or
addr16
mov
inc
fs
inc
dec
pushf
pop
bound
mov
es
out
pop
mov
pop
(bad)
in
ins
xchg
or
inc
shl
mov
(bad)
lock
mov
mov
mov
aam
mov
sub
jne
dec
bound
or
ret
ss
mov
and
pop
imul
arpl
lahf
or
in
add
jne
adc
fdivr
dec
push
push
mov
jg
leave
jo
stos
adc
gs
or
xor
cdq
ret
push
test
fbstp
outs
sbb
dec
lods
test
xlat
fisttp
inc
test
dec
std
pop
xor
jne
shl
test
gs
sar
adc
or
push
sbb
inc
aaa
jl
stos
pop
and
fs
int
xor
int3
jne
push
mov
push
mov
push
and
iret
jmp
fstp
call
cmp
les
(bad)
mov
mov
pop
xchg
and
dec
call
lods
call
inc
iret
das
jmp
shr
or
shl
out
mov
mov
sbb
jp
ror
icebp
sahf
sub
push
pusha
loope
ret
ja
mov
retf
inc
jae
(bad)
or
add
mov
jg
xchg
fcomp
push
jns
adc
push
(bad)
xor
dec
dec
sahf
push
movs
es
pop
adc
scas
and
in
mov
loopne
ficom
mov
ins
or
(bad)
sub
fsubr
adc
cmp
mov
cmps
push
adc
push
push
mov
mov
fdiv
jmp
call
cmc
ror
sbb
bound
popf
and
mov
sub
xor
jmp
fcomp
(bad)
std
xor
repnz
inc
rol
frstor
xor
pop
pop
pop
mov
frstor
and
ret
test
pop
popa
iret
ins
outs
fcmovnbe
ins
cld
or
inc
imul
mov
jnp
clc
jb
dec
das
hlt
idiv
data16
push
xchg
dec
sub
movs
adc
adc
movs
inc
ins
mov
inc
sbb
aaa
or
or
add
sub
addr16
adc
cs
jecxz
jl
add
mov
jmp
adc
js
inc
push
sbb
test
test
outs
loop
and
xchg
icebp
add
repnz
push
mov
xchg
or
clc
into
push
sub
loop
shl
aaa
loope
stos
dec
adc
pop
mov
xchg
popf
push
div
rol
loopne
or
mov
inc
lds
pop
mov
xchg
sbb
in
fnstsw
inc
mov
pop
iret
jns
xchg
rcr
lock
mov
loopne
ret
pop
mov
mov
jne
in
dec
test
xchg
loopne
cmc
cmc
ins
je
mov
aam
sub
rcr
push
xor
sahf
cmc
pop
mov
sbb
iret
arpl
mov
es
ds
aad
lods
mov
daa
or
mov
(bad)
fs
sub
adc
retf
stos
fstp
cmp
xchg
or
lods
mov
mov
add
jg
xchg
fbld
int
loopne
jg
jb
lods
shl
add
ja
dec
inc
cld
aam
jmp
or
arpl
sub
adc
cmc
adc
push
pop
jg
iret
lahf
(bad)
cdq
xchg
ins
pop
push
out
out
scas
pop
sbb
jnp
arpl
push
sbb
pop
mov
(bad)
xor
fstp
call
mov
fs
adc
(bad)
mov
adc
fadd
(bad)
seto
mov
sbb
lock
xor
push
cmp
clc
and
xchg
fdiv
pop
arpl
les
or
xchg
mov
or
and
sub
mov
in
and
(bad)
jp
ins
loopne
jl
enter
fist
push
inc
ins
das
pusha
lods
imul
movs
dec
xor
fsub
cmps
mov
dec
scas
mov
dec
inc
adc
jbe
pushf
jae
je
and
stos
sahf
push
dec
add
push
lock
dec
dec
femms
jo
xchg
test
add
js
sub
xlat
mov
ret
pop
mov
mov
outs
xor
arpl
pop
pop
shl
xchg
and
push
mov
das
pop
fldenv
loop
ret
push
or
call
clc
int3
(bad)
cmp
cmc
ja
in
loop
mov
and
sbb
xlat
movs
pop
xor
mov
scas
call
or
mov
loopne
retf
pusha
into
mov
cmp
cmp
jnp
out
xor
pushf
push
fcmovnb
mov
add
cmp
pusha
loopne
jns
jae
cmps
je
test
(bad)
loopne
mov
jmp
cmp
inc
mov
dec
pop
das
sbb
lods
int3
or
xchg
push
out
fcomp
scas
test
or
jle
shl
or
xchg
xchg
cmp
push
xchg
retf
mov
aam
jmp
add
or
push
sub
in
jnp
movs
neg
fdiv
popf
and
sbb
mov
push
icebp
and
mov
pop
mov
std
test
ror
jnp
jg
scas
retf
enter
jl
retf
jno
ret
cmp
push
jmp
sbb
jb
mov
repnz
mov
xchg
sub
and
mov
lahf
into
sub
and
push
sti
jae
sti
cwde
rol
mov
aam
nop
out
cmp
fiadd
pusha
lahf
inc
or
mov
mov
cmp
cwde
nop
es
test
mov
inc
pusha
xlat
sub
enter
aaa
jno
inc
lahf
sub
lea
nop
adc
mov
xor
fwait
aaa
mov
std
popa
ds
fdivp
jb
(bad)
gs
push
pop
xor
ds
xor
inc
imul
fbstp
retf
xchg
in
in
or
call
ret
push
lea
xor
or
retf
pop
frstor
pop
lods
pop
pop
in
popf
jb
jg
retf
das
sbb
ins
fwait
arpl
mov
cs
jne
and
mov
repnz
mov
shr
jmp
jmp
das
mov
repz
fs
je
out
add
(bad)
mov
(bad)
shl
jge
cmp
mov
retf
call
adc
jl
in
mov
mov
push
loope
cmp
cli
push
jns
mov
sub
inc
pushf
test
push
ret
and
mov
mov
xor
(bad)
jmp
add
pop
ja
pop
pop
jo
xor
ins
into
mov
(bad)
stc
pop
sbb
cmp
inc
icebp
out
fmul
movs
std
jb
test
iret
pop
call
sub
pop
(bad)
movs
jmp
lods
xor
jl
mov
cli
mov
inc
cmp
xlat
nop
neg
in
push
ja
or
repnz
dec
pop
jl
inc
inc
push
stos
xchg
enter
call
cmp
in
and
popa
mov
inc
bound
out
pusha
cmp
imul
jb
stos
fs
cmps
inc
int
cmps
mov
mov
jo
xor
mov
mov
mov
sbb
xor
retf
movaps
dec
sub
sub
scas
sub
inc
retf
pop
out
fcmovbe
adc
int3
adc
or
mov
popa
retf
js
rcl
push
out
and
push
xchg
push
(bad)
in
dec
xlat
push
loopne
or
fs
lods
ins
sub
ins
es
ss
imul
dec
sbb
pop
mov
fist
sahf
scas
and
aam
cmps
and
and
jmp
retf
in
int3
in
and
xchg
in
nop
dec
bound
dec
mov
inc
(bad)
ins
mov
ins
add
xchg
add
ficomp
push
mov
fisub
(bad)
imul
push
out
fldenv
mov
mov
ror
ins
pop
repnz
cdq
sub
xor
sub
inc
por
xor
aam
jns
inc
lds
and
fdiv
xchg
jl
clc
test
popa
pop
pop
jge
mov
outs
cmp
mov
fld
push
jo
imul
pop
mov
push
pop
in
js
or
mov
jl
push
movs
push
sub
sub
stos
daa
cwde
mov
mov
add
or
and
fist
mov
inc
(bad)
das
sub
jg
jbe
xor
aam
and
imul
bound
xchg
and
push
dec
std
sub
fnstenv
cmps
iret
dec
stc
movs
sub
call
lods
jnp
push
and
pop
pop
lea
mov
scas
addr16
pop
adc
mov
lods
sbb
rcl
push
or
xor
pop
mov
sub
ja
inc
and
sbb
dec
xchg
push
jmp
jmp
xchg
sub
test
cmp
cli
add
jmp
xor
jo
inc
ins
lock
add
xor
and
rcr
push
or
sub
adc
add
retf
cmps
mov
ds
mov
cmp
mov
ret
pop
in
mov
jle
mov
pusha
std
mov
push
push
(bad)
ss
mov
or
scas
sub
int3
shr
pop
dec
sbb
data16
mov
dec
pop
jecxz
jecxz
daa
int3
ds
xor
or
ins
dec
nop
mov
push
xor
xchg
aam
retf
jns
cmps
jbe
retf
mov
push
push
pop
loope
ja
pop
pop
mov
popf
mov
jmp
rol
(bad)
push
int3
sbb
dec
jmp
shl
dec
inc
mov
in
std
dec
test
or
inc
je
clc
call
jno
in
mov
xor
mov
inc
loope
add
sbb
push
dec
mov
fnstcw
sahf
imul
mov
mov
inc
movs
ret
popf
mov
push
mov
cmp
call
out
in
mov
add
data16
loope
mov
dec
inc
pop
ds
mov
push
sub
jns
aam
enter
dec
das
jge
leave
je
or
mov
mov
rol
xor
push
test
mov
cdq
lahf
adc
and
add
pop
aad
jmp
or
dec
movs
test
lea
lods
jo
cmp
mov
sbb
xchg
bound
cmp
aad
mov
int
mov
dec
adc
add
jo
jns
mov
ror
dec
movs
jmp
push
inc
(bad)
div
mov
and
jg
outs
or
xchg
stc
rol
test
inc
sbb
cmp
shl
dec
jle
iret
or
aas
lods
dec
adc
push
and
sub
(bad)
jge
inc
jnp
xchg
loope
fwait
jp
push
xchg
popf
sbb
loop
mov
das
test
ja
pop
test
mov
ja
paddsb
adc
scas
jmp
bound
bound
push
test
call
inc
lods
mov
or
jns
test
ror
pavgb
pushf
test
jcxz
dec
or
sbb
xchg
xor
sbb
test
and
cmps
ja
xchg
xchg
std
jge
inc
jne
sbb
outs
add
xchg
shl
cld
icebp
popf
pop
int
loopne
xchg
mov
inc
mov
fisttp
(bad)
data16
mov
rcr
jne
dec
dec
sub
pusha
inc
addr16
or
test
into
loope
call
pop
data16
hlt
sahf
(bad)
ins
sub
inc
in
sete
xor
jae
add
movs
cmps
daa
(bad)
rcr
pop
iret
popa
mov
test
sub
sbb
mov
fsubr
xor
out
push
push
push
idiv
jge
dec
xor
mov
cmp
mov
sbb
stc
add
in
ror
(bad)
or
icebp
lahf
and
icebp
xchg
mov
bound
and
retf
dec
out
loop
nop
lock
(bad)
neg
xor
cmp
adc
outs
xchg
mov
cmp
fiadd
mov
das
das
cmp
pop
lock
jmp
(bad)
cmp
adc
push
jecxz
mov
or
and
mov
pop
mov
adc
sbb
jmp
mov
dec
fidiv
test
push
dec
and
pop
popf
ds
test
scas
pop
jno
ficom
jnp
push
sub
sub
das
sbb
pop
or
xlat
in
test
jge
popf
pop
mov
(bad)
call
mov
cmp
cmp
add
lahf
psadbw
xchg
sub
inc
jl
lods
add
push
or
nop
dec
sub
(bad)
retf
push
mov
out
xor
outs
daa
popa
or
fs
inc
xchg
sub
dec
jo
dec
adc
rcr
xchg
cmp
push
sahf
xchg
sbb
mov
cmp
sub
scas
mov
sub
inc
mov
je
xchg
bound
xchg
pop
push
mov
mov
adc
pop
fild
(bad)
mov
loope
icebp
push
jne
mov
jle
xchg
inc
push
rol
stos
dec
xchg
inc
rcl
jge
adc
lds
imul
push
mov
jle
jo
es
push
adc
mov
jmp
adc
jp
dec
xchg
movs
mov
into
fwait
and
cmc
pop
sub
test
cmp
push
and
imul
ret
mov
add
mov
dec
sub
jg
cwde
dec
mov
sub
jnp
js
xor
cmc
cmc
cmps
repnz
mov
into
stos
cmp
inc
and
inc
add
inc
imul
push
movs
lods
mov
test
xlat
and
les
jno
xchg
sbb
mov
das
jmp
or
or
mov
cmps
jo
lods
in
ss
jnp
mov
inc
and
cmc
out
sti
inc
sbb
sbb
cmps
add
push
jbe
aas
add
add
cmp
xchg
add
ins
dec
cli
retf
add
jns
cmp
jo
jmp
pop
ror
rcr
int
mov
add
pop
or
lods
call
fbstp
xor
xchg
ffree
xchg
jae
inc
outs
or
xchg
sbb
xchg
pop
aad
mov
inc
imul
daa
mov
in
retf
push
sbb
jle
push
pop
test
mov
mov
adc
cmp
sahf
sub
xchg
adc
imul
adc
into
or
mov
test
fs
lods
push
pop
aad
lods
(bad)
scas
inc
cmps
or
icebp
dec
sbb
(bad)
jmp
mov
bound
in
xlat
lock
cmp
mov
test
cld
sbb
loop
jnp
js
dec
retf
jae
(bad)
xor
jno
jb
dec
jle
std
add
sub
sub
stos
or
xchg
push
jl
mov
jmp
sub
push
(bad)
and
call
adc
xor
mov
clc
xchg
jbe
ins
jo
jmp
scas
xchg
sbb
and
add
sbb
cdq
nop
adc
xor
adc
pop
jle
xchg
hlt
fisttp
hlt
jg
and
stos
cmp
iret
xor
fsubr
lods
ja
js
xor
inc
inc
dec
mov
inc
hlt
mov
pop
inc
jbe
xchg
xor
fs
xchg
adc
ss
mov
mov
jmp
test
shr
dec
adc
int
pusha
jae
pusha
pop
push
nop
and
mov
mov
xchg
shr
jo
sub
jb
aad
outs
out
cmp
pop
add
in
jmp
sbb
mov
test
es
jmp
inc
retf
add
shr
repnz
mov
cmp
aas
inc
cli
xlat
pop
sti
repnz
sbb
xor
push
and
popf
and
scas
(bad)
jmp
mov
jmp
scas
je
stos
fiadd
jne
adc
mov
mov
dec
fs
in
stos
sub
loope
inc
bound
out
or
dec
daa
mov
inc
ja
aam
xchg
push
xchg
fcompp
or
inc
and
inc
pop
call
ror
in
dec
mov
pop
fwait
cwde
mov
xchg
test
mov
push
mov
and
push
test
lods
hlt
push
int
cmp
addr16
sbb
mov
jecxz
mov
mov
cmp
test
(bad)
xchg
and
ss
hlt
pushf
cli
add
or
and
call
or
loope
fldenv
mov
bound
psrlw
xor
fs
outs
inc
sub
pop
test
xor
fcom
xchg
jg
mov
int3
adc
xor
cmp
je
dec
or
add
jmp
xchg
retf
xchg
mov
(bad)
movs
lock
frstor
repz
jle
sub
shl
add
or
fstp
mov
jg
push
pop
iret
retf
sub
jle
dec
mov
jns
test
add
popf
into
pop
in
mov
jmp
fst
mov
push
xchg
js
adc
pushf
(bad)
fdiv
xchg
imul
repz
sbb
mov
jmp
adc
daa
pop
xor
and
aas
xor
out
dec
dec
pop
call
pop
fnstenv
xor
xor
sub
sub
ret
add
cmp
test
wrmsr
mov
rcl
push
add
int3
adc
push
push
jg
pushf
and
mov
push
jg
pushf
daa
xor
or
aas
popf
test
mov
hlt
movs
ja
pop
dec
add
add
sub
stc
imul
jne
fisttp
mov
(bad)
mov
imul
jmp
cmp
inc
sub
stos
test
xchg
jl
jae
sbb
jecxz
jae
test
das
icebp
mov
test
xchg
mov
fimul
sub
add
fs
xor
imul
xchg
xor
sbb
into
mov
adc
push
sbb
popf
xlat
out
or
inc
xor
std
pop
add
cmp
repz
inc
stc
ins
scas
out
sub
mov
mov
mov
add
and
repz
pop
sar
xchg
or
inc
loop
jae
ja
push
arpl
xchg
push
dec
adc
test
xchg
mov
scas
inc
aaa
or
sub
add
mov
outs
add
cmp
or
mov
leave
cmp
pop
push
mov
sub
and
aam
or
gs
out
(bad)
push
xor
loopne
pushf
aam
div
push
in
daa
stc
cld
pop
ds
daa
retfw
cld
enter
cmp
add
fld
cmp
xor
inc
mov
pop
inc
nop
dec
ins
movs
cmp
repz
bound
sahf
push
sar
ret
xchg
in
xchg
and
jns
sbb
(bad)
pusha
xchg
jo
sbb
stc
and
sbb
fadd
cli
adc
add
mov
inc
jno
pop
jne
xchg
jb
mov
fcomp
das
mov
mov
or
dec
ins
ret
movlps
(bad)
in
retf
cdq
mov
or
mov
xor
sbb
cli
jle
mov
sbb
dec
cli
ins
lea
mov
retf
lahf
retf
std
cmps
cmc
mov
jl
jno
fisttp
add
mov
adc
out
fs
fild
add
or
push
mov
sar
inc
in
push
cmp
sub
mov
pop
pop
or
dec
xchg
out
jno
in
test
xchg
mov
out
sub
mov
int
mov
mov
push
rcr
add
pop
pop
inc
ret
fidivr
mov
out
aad
clc
data16
adc
ret
sbb
sbb
neg
lock
call
and
mov
sub
retf
mov
cs
xchg
adc
fstp
repz
add
cmps
(bad)
js
and
repz
popf
call
mov
fsubrp
hlt
jb
push
push
push
cmp
ror
lock
stos
adc
repnz
imul
push
movs
inc
cmp
mov
cmp
fidiv
js
enter
adc
add
call
jns
call
jne
out
jno
mov
xchg
(bad)
popa
(bad)
jp
add
and
fisub
adc
jp
pushf
(bad)
sbb
pop
push
stos
je
push
add
inc
in
cwde
jno
jp
xchg
push
into
dec
sar
dec
shr
daa
add
jmp
or
push
imul
dec
je
cmp
jo
ss
jbe
inc
push
into
pushf
adc
push
xchg
add
sub
add
mov
jno
dec
shr
xor
pop
fild
imul
sbb
push
scas
push
sbb
adc
test
inc
inc
pusha
arpl
sub
fidivr
mov
add
jmp
(bad)
or
lea
in
push
test
adc
bswap
jmp
ins
test
jnp
cmp
sub
sub
(bad)
clc
lahf
movs
adc
neg
mov
int
enter
fbstp
outs
lahf
jno
ror
pop
sbb
mov
movs
mov
dec
and
sbb
test
mov
cdq
mov
push
pushf
cwde
fst
jle
ret
mov
bound
js
call
xchg
cmps
test
in
cmp
add
ins
call
jnp
mov
jge
pop
outs
adc
(bad)
xchg
add
xchg
les
sbb
fist
je
not
inc
pop
mov
les
leave
nop
imul
mov
sub
jb
dec
popa
fldcw
pop
fucom
mov
mov
push
cmc
add
ds
push
cmp
aas
test
loopne
and
push
mov
cli
pcmpeqw
test
int3
sti
sbb
enter
push
movs
jp
sub
mov
aas
iret
sub
xor
add
dec
sub
add
fs
dec
aas
enter
and
jne
push
cmp
mov
rcl
push
dec
out
test
inc
and
inc
jno
jnp
mov
repz
vmovd
mov
ret
or
push
int3
dec
or
ins
dec
cmp
fld
sub
xchg
pop
and
stos
(bad)
out
stc
neg
enter
xchg
test
in
xchg
out
cmps
shl
jns
sbb
scas
js
dec
icebp
inc
push
sub
xchg
mov
dec
sbb
add
outs
or
mov
lea
(bad)
adc
out
ret
lods
xchg
(bad)
movzx
test
dec
pop
enter
fld
leave
push
pop
push
sbb
pop
push
in
outs
jno
and
mov
sbb
sbb
je
(bad)
xchg
(bad)
mov
cvtps2pd
fcomp
out
jb
jnp
lock
mov
pop
mov
mov
xor
xor
enter
and
mov
adc
adc
xchg
sar
leave
cdq
movs
call
(bad)
mov
jp
and
sbb
mov
sub
jns
lea
and
jmp
stc
lods
mov
mov
imul
push
cmps
xchg
data16
add
fisubr
jb
push
addr16
pop
ins
push
xor
into
loopne
cmp
xor
jmp
cdq
dec
mov
fimul
pop
inc
pop
fsub
xchg
arpl
imul
mov
mov
jge
inc
in
(bad)
arpl
addr16
stos
popf
dec
jo
lea
rcl
jp
cdq
pop
fidivr
pop
mov
daa
es
ret
sub
mov
loope
ds
rcl
cmps
cmps
in
cmp
rol
out
pop
sub
adc
xor
mov
jmp
mov
mov
call
aam
mov
add
cmps
retf
xor
(bad)
rcr
mov
dec
jnp
scas
aad
cmp
out
fidivr
stos
lods
(bad)
loopne
lahf
push
dec
scas
es
push
mul
ficomp
mov
daa
jecxz
sub
inc
dec
mov
btr
(bad)
xchg
shl
pop
or
fild
retf
xchg
dec
(bad)
adc
hlt
(bad)
mov
adc
push
ret
dec
cmps
sbb
add
xchg
xchg
pusha
movs
test
in
leave
rcr
jmp
xor
cmps
pop
in
mov
sbb
jp
aad
add
scas
sub
xor
enter
in
stos
push
mov
mov
mov
outs
xchg
jle
xor
fiadd
mov
neg
xor
inc
icebp
fcmovbe
mov
mov
les
fwait
stos
bound
js
mov
or
and
mov
pop
aad
mov
outs
les
dec
inc
xor
stc
fsub
add
shr
jo
xor
jo
cmp
sub
cli
xchg
cdq
icebp
jmp
mul
mov
test
pop
cmp
sbb
mov
mov
add
popf
in
adc
sbb
(bad)
mov
push
cmp
and
pop
push
ins
mov
push
dec
mov
sbb
mov
pop
jmp
jbe
push
scas
push
and
mov
shl
push
mov
xor
retf
pop
sub
dec
mov
mov
fstp
mov
sub
lods
mov
xchg
cmp
sub
mov
xchg
test
mov
test
imul
jnp
mov
jbe
cli
(bad)
mov
adc
jb
mov
sub
nop
jp
sub
push
dec
cmp
push
lahf
loop
jle
clc
les
outs
pop
fst
pop
add
not
or
std
arpl
xchg
xor
shl
mov
shl
xor
cmc
mov
push
sub
pop
mov
cmp
push
add
adc
xor
xchg
into
cmp
ds
mov
add
mul
xor
fidivr
mov
pop
push
lds
pop
and
sub
inc
inc
loopne
cmp
je
scas
repnz
pop
sbb
add
xor
push
(bad)
or
jge
pop
push
fidiv
mov
or
mov
mov
push
das
cdq
retf
mov
hlt
jmp
adc
sub
sub
iret
mov
jmp
fwait
sub
cwde
lea
dec
retf
aam
addr16
rcl
add
and
push
sbb
adc
jno
ror
(bad)
addr16
dec
in
pop
inc
mov
push
(bad)
mov
add
aad
jp
nop
outs
adc
cli
add
pop
jb
and
dec
and
int
scas
adc
mov
add
mov
mov
jnp
adc
enter
xor
ficomp
data16
lods
push
add
in
addr16
push
sahf
xchg
sbb
cld
(bad)
sbb
jns
jnp
jns
pop
lods
into
mov
enter
sub
(bad)
(bad)
mov
pop
inc
sub
rcr
out
retf
cmp
in
sbb
and
mov
cpuid
push
adc
call
rcr
ja
push
pushf
sub
push
ret
mov
stos
jp
lds
cmps
pop
xchg
cwde
and
xor
adc
dec
ror
pop
sbb
jnp
jmp
jge
inc
(bad)
inc
cmp
(bad)
(bad)
popa
or
loope
inc
adc
xor
sti
sbb
(bad)
(bad)
jecxz
xor
fstp
pop
xchg
push
je
push
out
shl
pop
push
cmc
call
mov
pop
outs
adc
ficomp
mov
in
xchg
jmp
jmp
rcl
push
pop
mov
mov
dec
mov
dec
pop
pop
mov
and
push
lea
add
cdq
push
jmp
in
nop
call
pop
dec
into
push
call
(bad)
mov
dec
fadd
(bad)
xchg
rcl
sbb
or
xor
mov
sar
arpl
sbb
(bad)
ja
test
xor
xor
cmp
xchg
(bad)
push
adc
push
(bad)
sar
pop
popa
push
out
mov
enter
inc
imul
inc
pop
dec
ds
pop
dec
das
jmp
xchg
pop
aaa
mov
push
fwait
xor
outs
mov
shr
mov
aas
push
setno
mov
adc
stc
push
in
aas
inc
mov
or
(bad)
pushf
jp
(bad)
fucomp
fnstenv
jp
mov
adc
scas
cli
dec
or
inc
call
retf
rcl
in
xor
int
jmp
sbb
inc
mov
dec
and
out
iret
ret
comiss
dec
in
mov
add
mov
ret
sub
jge
aad
inc
dec
imul
lods
int3
jae
pusha
out
icebp
pop
push
rcl
es
jmp
adc
in
mov
(bad)
mov
add
add
xchg
rcl
das
lods
push
sub
jb
mov
jp
arpl
stos
lea
mov
ins
dec
ss
jle
cmps
xchg
cmp
sbb
repz
vphaddudq
cmp
inc
sbb
repz
jbe
and
not
test
fistp
pop
cmp
scas
pop
shl
mov
enter
cmp
or
stc
adc
fst
add
mov
(bad)
rcl
push
cli
sub
pop
sub
pop
jae
dec
sub
and
mov
retf
ds
mov
sbb
hlt
inc
inc
adc
cwde
mov
imul
push
add
pushf
in
pop
lahf
popf
inc
in
in
cs
or
or
xchg
popf
cmp
xchg
jae
icebp
sbb
das
int
nop
loope
hlt
leave
jp
mov
push
iret
repnz
jmp
xor
jmp
mov
and
inc
mov
or
and
xchg
imul
sub
inc
mov
(bad)
xor
jge
add
clc
push
test
(bad)
sahf
inc
outs
or
inc
push
fdiv
pop
(bad)
scas
sub
mul
int
aam
sub
fistp
cld
fstp
mov
xor
outs
adc
ss
pop
(bad)
xor
test
cs
xor
daa
jo
dec
mov
enter
pop
aaa
int3
in
mov
xchg
rol
xor
mov
fs
mov
cmp
xchg
xchg
adc
mov
aam
jns
inc
jp
mov
push
mov
dec
in
xchg
mov
pop
cmp
pop
arpl
xor
and
mov
push
daa
scas
and
sub
mov
xor
or
mov
out
jp
cmps
mov
push
inc
push
aad
and
mov
(bad)
cs
and
and
mov
(bad)
call
iret
sbb
add
sbb
fnstenv
sub
jle
dec
sbb
mov
xchg
std
sub
fdivr
outs
out
scas
mov
push
xchg
mov
ds
in
mov
push
or
clc
mov
in
pop
add
shl
sti
test
and
popf
push
fdiv
dec
inc
pop
sub
push
in
mov
test
cld
mov
pusha
sub
mov
jl
xlat
xor
jnp
inc
movs
rcr
cwde
and
(bad)
xchg
lock
mov
dec
sbb
adc
outs
sub
inc
jmp
mov
push
daa
lahf
enter
xor
and
and
shl
push
cmc
aaa
adc
fs
aad
sbb
retf
push
out
imul
dec
arpl
pop
popf
(bad)
push
inc
push
cwde
xchg
mov
lahf
or
dec
movs
cmp
sub
or
jmp
push
outs
out
aad
dec
pop
aaa
bound
in
pop
jmp
add
push
push
sub
sub
sbb
mov
xchg
fcmovb
out
jbe
nop
(bad)
repnz
push
fstp
cmp
cli
bound
cs
dec
dec
and
sub
xchg
out
scas
mov
je
sar
jns
and
pop
ins
fs
call
test
adc
icebp
je
cmp
pop
adc
mov
sbb
mov
sahf
(bad)
push
or
push
inc
fdivr
and
js
jle
(bad)
jmp
rol
iret
inc
and
sbb
iret
inc
movs
int
jge
fsubr
xchg
sbb
cmp
mov
retf
sahf
icebp
cmps
pop
ins
inc
stc
add
stos
jecxz
imul
data16
jne
stos
mov
stc
shl
mov
mov
popf
mov
and
aas
js
jp
out
mov
test
sbb
fcom
call
adc
cdq
js
mov
cdq
fisttp
imul
push
mov
repnz
loope
add
xor
je
jo
xor
pop
repnz
int
xchg
icebp
inc
bound
ret
out
pop
xor
mov
pop
into
in
cmc
xor
cs
ins
es
xor
call
push
mov
imul
push
fdivr
xchg
push
sub
cwde
pop
and
mov
cmp
arpl
add
loope
int3
sbb
jl
dec
sbb
xchg
fadd
stos
scas
sub
pop
sub
sub
mov
adc
and
xlat
push
mov
jle
out
push
sbb
inc
retf
mov
ja
aam
xchg
(bad)
loope
push
loope
in
in
xchg
lock
ja
inc
ins
push
push
mov
pushf
mov
bound
stos
sub
call
xchg
jns
int
stos
mov
std
aaa
jb
mov
test
xchg
dec
stos
ret
test
dec
mov
adc
or
pop
lahf
cmps
dec
xor
lock
add
leave
sbb
retf
sahf
adc
iret
lods
(bad)
je
push
pop
in
mov
mov
inc
pop
ja
cld
jo
pop
aaa
adc
loope
in
mov
adc
enter
sub
jge
(bad)
loopne
cld
fsubr
idiv
dec
jns
inc
xchg
adc
adc
mov
mov
mov
sub
cmps
bound
add
cdq
jle
dec
das
xchg
pop
ss
mov
movs
push
pop
fistp
loop
out
add
sbb
nop
int3
(bad)
pop
lds
aad
aad
rcl
arpl
xchg
aaa
cmp
jae
cmps
sub
push
inc
lods
retf
fadd
pop
xor
scas
xlat
retf
inc
fld
sub
ss
cmc
js
(bad)
lods
mov
jp
mov
sub
aam
mov
and
jbe
rol
mul
jne
fdivr
mov
mov
ds
jb
cld
les
push
pop
push
sub
idiv
add
push
xchg
push
mov
add
adc
popf
jge
pop
adc
ror
dec
xchg
inc
push
leave
stos
sbb
dec
xor
mov
mov
pop
mov
(bad)
xor
popf
(bad)
jb
jl
mov
push
jl
imul
in
dec
xchg
inc
push
sar
int3
pop
mul
ror
and
add
inc
and
gs
movs
repz
mov
rol
retf
in
stc
push
cli
jmp
pop
test
jmp
push
shl
push
pushf
dec
or
ret
push
stc
jae
lea
push
lods
dec
add
pop
sub
push
inc
sahf
xchg
inc
das
cmp
cmp
and
fld
pop
int3
pop
iret
out
xor
imul
cmp
jae
aas
scas
mov
dec
add
jge
jl
cdq
inc
movq
or
rcr
arpl
add
cmp
outs
lea
pushf
int3
mov
movs
je
ror
call
es
sub
aaa
jp
jae
xor
or
ficomp
(bad)
aad
adc
scas
or
in
cmp
pusha
or
aas
jne
and
adc
fwait
or
arpl
cmp
xor
psubsb
test
jl
(bad)
dec
fcmovnu
movs
jp
or
sbb
or
mov
ins
cmps
inc
sub
pop
cdq
pop
sub
push
out
sbb
push
es
sub
fisubr
idiv
xchg
and
mov
xchg
mov
in
ror
aam
jl
dec
xor
mov
xchg
mov
and
jle
push
test
pop
xor
leave
fst
cmp
and
add
sbb
lea
imul
mov
push
pop
fsub
imul
inc
pop
add
add
test
or
jmp
jnp
not
sub
mov
xor
(bad)
nop
cmps
lods
cli
xchg
mov
shl
mov
sub
jno
pop
es
in
std
in
sub
test
outs
sti
int
mov
jle
lea
mov
cmp
scas
sbb
adc
mov
mov
mov
imul
fisub
div
add
test
into
fimul
imul
mov
dec
jmp
inc
out
fnstsw
jb
inc
inc
cdq
cmp
xchg
dec
pop
ret
xor
cmp
xchg
into
int3
jp
sbb
mov
adc
adc
sbb
aam
mov
iret
mov
and
popf
loope
mov
mov
xor
dec
push
fstp
pop
sbb
jno
popf
div
fdivr
add
or
leave
jno
outs
aas
dec
add
(bad)
push
pop
test
mov
rcr
add
jge
sbb
jl
nop
add
push
inc
arpl
push
mov
data16
pushf
stc
test
mov
cmp
and
fst
retf
leave
mov
arpl
push
adc
sbb
call
in
outs
dec
lea
int3
popa
cmps
mov
inc
and
push
imul
push
in
scas
jmp
out
test
adc
(bad)
jmp
aam
mov
enter
or
pop
sbb
sti
imul
mov
adc
add
stos
out
mov
ins
xor
shl
mov
dec
mov
scas
daa
loope
pushf
pop
loopne
sub
inc
push
inc
out
out
inc
mov
test
and
jo
out
cs
into
stc
push
imul
pop
push
mov
mov
cmp
out
std
cli
mov
dec
dec
loopne
in
xor
cli
mov
mov
pop
rol
sti
cli
mov
int
sbb
(bad)
pusha
mov
arpl
rcl
out
ss
cmp
adc
cmps
xor
xchg
aaa
xor
xadd
cmp
dec
sbb
or
sbb
xchg
mov
popf
adc
mov
jnp
popa
pusha
or
push
lahf
loope
pop
sahf
mov
push
xchg
mov
sub
add
add
fld
imul
es
daa
rol
ret
daa
out
xchg
mov
sub
sbb
lods
mov
(bad)
ret
sbb
fcmovnb
adc
(bad)
cmc
cmp
jno
aas
mov
inc
pop
hlt
pusha
rol
or
cmps
gs
cs
call
mov
push
inc
xchg
cmps
inc
mov
mov
or
mov
sbb
call
mov
repz
out
enter
loopne
cmp
fsin
sti
aad
sub
push
mov
in
xor
adc
mov
adc
loope
test
fst
scas
daa
cdq
mov
xchg
jle
and
ror
ds
jecxz
jp
(bad)
ror
call
and
sti
(bad)
add
pop
cmps
in
push
and
xlat
shl
fdivrp
cmp
or
or
mov
jnp
rol
add
sbb
fadd
and
outs
sbb
les
jo
push
mov
cmps
icebp
jg
jne
push
retf
or
or
adc
xlat
idiv
cmp
push
in
sub
and
push
mov
mov
push
iret
cli
jne
adc
pushf
cmps
jmp
jb
(bad)
(bad)
repz
or
scas
stos
std
fld
pop
fiadd
dec
mov
rol
jp
std
jmp
in
ficomp
out
cld
add
mov
lahf
jge
aas
cmp
stc
loop
leave
fsub
daa
sbb
push
xor
aaa
jbe
sti
test
cdq
loopne
in
xor
imul
ret
inc
js
data16
retf
jmp
mov
and
jmp
call
jp
push
jnp
test
xchg
or
mov
ret
fist
jb
(bad)
jmp
cmps
cmp
xchg
into
loop
sbb
ins
test
jmp
fisttp
out
xchg
sub
push
repz
out
jmp
jno
inc
dec
outs
sbb
inc
or
mov
and
mov
das
in
mov
aaa
je
jmp
sbb
clc
xor
jle
and
xchg
jns
add
inc
dec
ffreep
sahf
mov
leave
sbb
(bad)
ins
xor
outs
inc
or
cdq
lds
loope
retf
daa
rcr
jbe
cmp
jl
xchg
out
or
dec
addr16
cmp
repz
stos
daa
jp
push
sub
cwde
fs
xor
pop
push
push
xlat
jnp
shr
lahf
fyl2x
adc
push
mov
mov
fisttp
mov
popf
movzx
mov
inc
lea
jb
xchg
movs
ret
cmp
loopne
xchg
push
aas
mov
mov
(bad)
ins
fwait
cmp
idiv
or
xor
sub
movs
cmp
std
shr
sub
pop
xchg
push
inc
mov
mov
or
sahf
ins
xor
aam
add
shl
leave
cmp
iret
xlat
and
push
and
mov
sti
and
jns
sbb
call
loop
mov
and
(bad)
call
scas
arpl
sub
clc
jmp
jo
adc
adc
nop
add
mov
pop
push
pushf
pushf
jmp
mov
(bad)
jl
jb
shr
das
rcl
pop
sub
retf
xchg
lds
scas
xor
ret
xchg
xlat
sbb
push
nop
and
imul
add
xchg
push
neg
or
pop
cdq
dec
mov
stos
outs
enter
adc
repz
jnp
std
shl
call
stc
jbe
xchg
pop
gs
mov
inc
mov
cmps
ret
(bad)
in
rcl
and
inc
dec
aam
mov
cdq
lods
push
jnp
mov
loop
xlat
xlat
or
inc
add
shl
nop
push
sub
add
mov
fcom
out
test
dec
out
mov
mov
jge
dec
xor
hlt
movs
int3
and
sub
fdiv
mov
jecxz
xchg
jmp
fild
adc
dec
jo
and
xor
stc
xchg
out
sar
arpl
jae
mov
adc
stc
in
dec
inc
out
fistp
mov
enter
xchg
pcmpeqb
xor
jbe
cmc
dec
mov
stos
lods
lds
mov
inc
mov
sub
pop
lock
lahf
xchg
pop
push
les
xor
sub
mov
mul
enter
or
popa
mov
jmp
je
enter
ss
cmc
cmp
cmp
aad
jecxz
sbb
inc
cdq
in
and
je
inc
push
loop
adc
movs
mov
xor
jmp
into
neg
xchg
dec
pop
add
mul
xor
lods
push
xor
idiv
retf
jl
aaa
imul
sbb
out
out
test
(bad)
adc
cmp
test
mov
inc
pushf
popa
fwait
and
fbld
mov
push
outs
les
mov
mov
stos
test
stos
ss
aaa
push
les
xlat
xor
outs
jo
add
pop
jne
in
mov
popf
rcr
sbb
inc
pop
add
jb
push
push
or
add
cdq
lock
mov
mov
dec
das
and
push
rcr
add
adc
pusha
dec
inc
ficom
and
sahf
xchg
mov
and
inc
rcl
dec
(bad)
test
rcl
jo
pop
data16
mov
out
sbb
call
js
xchg
cli
in
sbb
das
fwait
ret
and
jp
jg
and
inc
mov
or
and
fs
retf
lds
or
adc
ja
sbb
mov
adc
add
(bad)
dec
and
cmp
or
adc
or
out
cdq
push
das
cli
or
test
stos
mov
cs
jns
xor
mov
xchg
lock
fadd
mov
test
dec
sbb
xor
shl
mov
mov
dec
or
dec
fstp
daa
pushf
xlat
fst
sbb
and
out
dec
cmp
arpl
inc
jb
mov
pop
cmp
or
out
or
cmp
jmp
or
push
jl
int
ins
inc
movs
mov
lods
push
or
xor
repz
inc
fisub
jmp
xor
mov
sub
or
es
scas
jne
xchg
fnsave
add
inc
cmp
and
push
stc
mov
sub
xor
cmp
ret
mov
inc
xchg
jb
mov
clc
fsubr
ret
sub
rcl
rcr
in
xor
mov
and
mov
fwait
in
mov
sbb
cmp
pop
aad
or
outs
ins
(bad)
aad
int3
(bad)
aam
(bad)
mov
js
adc
adc
movs
les
jno
or
stos
mov
or
adc
fisttp
out
pop
repz
in
lods
popf
sbb
repz
cmp
pop
inc
mov
shl
out
push
cwde
das
cmps
mov
retf
in
mov
mov
scas
fistp
(bad)
fbld
jae
sbb
fist
out
inc
nop
pop
xchg
out
pop
fidiv
stc
call
repz
jne
push
xchg
addr16
outs
pop
call
add
or
sub
pop
and
xchg
outs
popf
les
sbb
in
and
cmp
leave
lods
or
add
jnp
test
or
jns
and
dec
aaa
in
enter
or
mov
inc
das
ret
mov
rcl
mov
(bad)
ins
pop
pop
or
outs
jp
sub
push
mov
retf
xor
pop
sbb
sti
ret
add
adc
pop
pop
push
in
out
sbb
jb
adc
jecxz
or
lahf
cdq
pop
mov
imul
inc
dec
and
nop
inc
in
ret
xor
(bad)
mov
mov
nop
inc
mov
sbb
pop
cmc
cs
xor
ror
imul
add
or
jge
or
mov
xor
sahf
ins
bound
in
cmp
(bad)
ret
outs
out
mov
add
icebp
sbb
int
loopne
repnz
(bad)
icebp
aas
lods
es
dec
stos
mov
inc
imul
ins
cwde
mov
loopne
(bad)
in
rcr
scas
sbb
add
inc
mov
xor
jbe
stos
aad
inc
xor
xchg
jne
inc
mov
and
xchg
jne
clc
pop
jle
and
add
mov
dec
jmp
and
leave
out
mov
call
xchg
lods
jbe
mov
and
loop
es
int3
mov
das
repz
pusha
loope
mov
lods
jle
(bad)
adc
xchg
test
stos
call
rcr
xor
sti
arpl
sub
outs
into
loop
cli
ins
push
imul
aaa
dec
adc
(bad)
rcr
cdq
shl
jns
fldenv
and
std
aas
mov
push
add
add
add
cmp
cmc
adc
xchg
fxch
add
into
pop
and
call
in
push
push
mov
mov
iret
jmp
mov
daa
(bad)
ret
pop
and
xchg
inc
xor
or
cld
shl
sub
cmc
pop
neg
fist
les
loopne
out
aam
aad
jge
jmp
test
stos
pop
rcl
xchg
push
dec
stc
xlat
sbb
enter
sbb
js
nop
(bad)
fcmovnbe
je
pop
dec
adc
loop
xlat
cmp
addr16
cmps
xlat
das
shl
xchg
lock
ss
ja
clc
in
xchg
in
movs
xchg
jb
push
push
lods
iret
inc
xor
and
sbb
in
adc
mov
jmp
jbe
lea
push
jecxz
movs
jecxz
mov
jmp
lea
sbb
(bad)
je
or
xor
jp
jecxz
aad
sub
cmp
in
adc
loop
test
bound
mov
dec
cdq
dec
push
not
mov
inc
repnz
push
pop
icebp
push
retf
aad
inc
ja
mov
mov
add
xchg
test
je
dec
dec
test
push
xchg
fcom
jge
call
sbb
sub
dec
dec
(bad)
jmp
pop
in
div
push
aam
or
and
jmp
xchg
sbb
test
repz
add
dec
out
sub
aam
in
not
mov
fdivr
inc
in
ror
cld
test
jno
addr16
push
fcomip
mov
mul
or
stos
add
ins
std
ret
sub
cmc
fistp
dec
add
or
int3
mov
and
aaa
dec
loopne
out
fsubr
sub
mov
rcr
add
cmps
xor
sbb
xchg
sbb
inc
into
shl
mov
sub
xchg
test
imul
xor
mov
(bad)
pusha
push
aas
xchg
mov
enter
mov
jne
jp
jb
jo
inc
popf
loope
inc
mov
shl
cmp
mov
movs
pop
add
sub
or
or
pop
scas
fild
mov
aam
or
call
pop
jo
push
or
in
mov
lahf
sbb
jmp
inc
es
movs
(bad)
jl
add
fucom
mov
dec
push
loop
jg
outs
mov
mov
loopne
dec
pusha
shl
pop
and
xlat
arpl
ffree
xor
add
cmps
outs
imul
jnp
and
cmc
xchg
jecxz
adc
repz
jecxz
adc
outs
fidiv
sub
jge
idiv
dec
ja
inc
or
movs
lds
fwait
mov
or
mov
push
lods
cli
lds
xlat
mov
xchg
xchg
fbstp
(bad)
imul
popf
loopne
(bad)
mov
popa
sub
(bad)
sub
test
cmps
(bad)
dec
jbe
mov
add
call
retf
fsubr
retf
dec
ja
popf
push
inc
mov
aam
mov
hlt
jno
loopne
cmps
repnz
sbb
repz
je
pop
mov
cmps
call
daa
push
xchg
push
mov
pop
popa
retf
icebp
in
pushf
shl
cmc
pushw
ja
mov
(bad)
out
lds
fmul
call
adc
xor
push
pusha
adc
sahf
xor
or
mov
mov
lods
or
jb
cmp
js
cmps
je
cmp
cmp
outs
bound
popf
add
sahf
mov
mov
adc
je
pop
mov
shl
aam
daa
into
shl
xchg
inc
xor
cdq
and
(bad)
xor
and
xchg
das
daa
add
rcr
shr
lods
sbb
idiv
mov
(bad)
and
jns
hlt
jo
mov
pop
neg
ds
pusha
xchg
mov
fstp
inc
mov
mov
repnz
pop
loopne
loope
pop
loope
shr
in
fadd
inc
movs
aam
pop
dec
int
vandps
or
jmp
ds
and
cli
mov
aam
popa
popfw
mov
fistp
xor
popf
test
aam
sahf
loope
in
inc
icebp
scas
mul
and
dec
pop
mov
clc
pop
xor
or
pop
sar
shr
out
push
sub
or
inc
mov
ins
lahf
ds
pop
leavew
and
xchg
and
imul
fbstp
adc
xor
or
pop
adc
xlat
cmp
and
lahf
std
repnz
add
ins
sbb
lahf
add
pop
out
lds
repnz
and
xchg
push
ror
mov
pop
sahf
xor
repnz
(bad)
cmp
sbb
cmp
xchg
sbb
ins
mov
lods
test
inc
or
mov
xor
mov
scas
push
fdivp
loope
sti
dec
repz
in
and
rol
call
jmp
aas
xor
cmp
xchg
nop
pop
or
jno
dec
push
sbb
iret
mov
and
(bad)
stc
mov
adc
das
loopne
rcl
test
sub
rcr
clc
ret
loopne
adc
mov
add
xchg
in
fmul
(bad)
int3
icebp
mov
scas
js
mov
out
cli
nop
stos
sbb
ins
pusha
mov
inc
mov
ret
or
lods
(bad)
mov
inc
loop
fwait
(bad)
loope
in
xchg
inc
adc
loop
out
inc
xchg
and
cmp
push
dec
test
or
(bad)
out
cld
and
pop
loope
pop
hlt
(bad)
jmp
outs
jle
into
data16
jns
xchg
push
(bad)
jmp
xor
fmul
loop
addr16
sti
sub
arpl
imul
push
jbe
mov
push
repnz
dec
ins
repnz
cli
pop
aad
jmp
rcl
push
lods
aaa
pop
jbe
mov
pusha
out
fsubr
add
dec
push
les
fadd
and
mov
retf
pop
movd
sti
jb
mov
(bad)
repnz
imul
push
dec
adc
push
xor
push
dec
mul
jo
pop
lahf
les
int
add
fwait
test
jno
xor
addr16
inc
jmp
mov
int
inc
mov
pusha
ret
add
dec
outs
(bad)
push
mov
push
dec
mov
push
adc
call
mov
push
inc
addr16
push
add
fild
cmp
(bad)
adc
les
sahf
mul
dec
mov
cmp
push
scas
daa
xchg
repz
mov
repnz
xchg
int3
idiv
pop
fwait
mov
mov
aad
shr
jp
shr
ret
enter
daa
push
test
push
iret
xor
outs
fist
je
xor
shr
sub
movzx
enter
or
stc
das
pop
repnz
bound
leave
push
int
(bad)
sbb
xchg
cmp
ret
in
lods
dec
mov
fs
xor
push
jbe
fistp
retf
mov
fcomp
fs
mov
push
loope
cmp
clc
or
fstp
int3
jmp
das
mov
ror
mov
push
mov
jne
push
inc
outs
lods
out
hlt
pop
mov
mov
add
rcl
jno
sub
rol
pop
test
inc
mov
aad
stos
cwde
mov
cdq
shr
mov
iret
outs
jmp
retf
arpl
retf
sahf
jmp
mov
adc
xor
push
cmp
mov
mov
or
sub
nop
and
mov
daa
mul
and
lods
and
inc
stos
shl
fs
mov
retf
sti
and
mov
imul
arpl
xchg
cwde
mov
push
mov
mov
pop
ficomp
and
call
sub
sbb
push
prefetchwt1
or
pop
icebp
mov
ror
(bad)
pop
sub
outs
dec
pop
xor
mov
loop
jp
pop
xchg
jl
outs
jmp
sub
ins
ror
or
cli
loope
ja
mov
push
mov
jmp
scas
mov
and
ficomp
cdq
jg
or
jbe
or
lahf
xchg
inc
mov
and
cmps
adc
jo
push
movs
xor
inc
retf
popf
shr
les
lahf
mov
ds
adc
mov
icebp
mov
popf
ret
movs
movs
mov
outs
or
jecxz
iret
inc
cld
pop
arpl
mov
pop
call
push
pop
or
push
stos
jecxz
jmp
jmp
stos
(bad)
nop
mov
imul
imul
mov
jno
pop
jnp
inc
stos
xchg
mov
mov
aas
inc
es
(bad)
fwait
data16
enter
xchg
xor
mov
lea
outs
jno
sub
xor
ins
push
sbb
out
mov
pop
cmps
dec
mov
and
and
test
cmp
pop
or
ret
aad
adc
fist
xchg
cdq
jns
jmp
push
push
and
inc
mov
mov
ror
cdq
sbb
push
aad
imul
ror
pop
push
cli
inc
jmp
popf
push
mov
mul
into
outs
and
sbb
mov
rcr
out
mov
jne
xor
mov
jg
in
push
push
and
out
sbb
mov
push
cmp
ret
cmps
mov
scas
xor
adc
shl
push
mov
ds
or
mov
bnd
mov
sub
movs
imul
sbb
xchg
xor
retf
add
outs
and
out
test
or
inc
fsubr
aaa
sti
popa
add
das
dec
nop
sub
adc
popf
retf
dec
ror
inc
sti
inc
cdq
or
jle
sbb
ror
pop
test
jmp
dec
call
xchg
sub
mov
gs
xchg
add
into
and
adc
sbb
in
nop
ret
jns
jmp
add
or
pop
fadd
fwait
ret
mov
inc
xlat
adc
in
addr16
mov
outs
and
stos
popa
cwde
pop
jmp
inc
and
mov
push
cmps
inc
mov
outs
cmp
jl
sbb
adc
xor
sub
loopne
xor
test
pop
jns
test
repnz
sti
sub
sub
add
xchg
push
inc
and
mov
jmp
jns
xchg
fdiv
out
pushf
pop
int3
and
pop
cmp
add
fs
(bad)
in
movs
ror
loopne
int3
adc
or
pusha
into
mov
sub
mov
fwait
movs
rol
adc
(bad)
or
add
mov
and
cmc
ja
or
enter
dec
fdiv
mov
xchg
xor
mov
lea
jmp
outs
fisttp
mov
lahf
mov
sahf
ja
and
lahf
out
mov
mov
mov
scas
mov
int3
ret
sbb
xchg
pop
lahf
and
std
dec
lds
out
lea
call
les
mov
add
aad
scas
iret
adc
into
push
or
push
sub
arpl
ret
das
loop
push
mov
sbb
std
pop
aam
lea
arpl
xor
loope
call
in
mov
mov
inc
add
dec
cmps
dec
dec
shl
shr
mov
mov
daa
or
sub
in
jmp
dec
inc
mov
or
mov
push
loopne
inc
xor
mov
test
nop
mov
jge
out
leave
jmp
pop
test
ror
cmp
jbe
mov
dec
push
sbb
sub
mov
xchg
jne
mov
inc
sbb
js
mov
xor
adc
xchg
(bad)
jnp
out
or
loop
xchg
fdivr
push
fs
stc
inc
imul
loope
repz
xchg
cmp
adc
movs
push
cwde
(bad)
xor
push
cmps
xor
mov
pop
ds
cmp
mov
in
xchg
out
mov
xor
xchg
addr16
xchg
scas
add
jns
push
daa
mov
dec
test
mov
push
fucomi
pushf
dec
push
dec
shl
sbb
mov
push
mov
jo
out
pop
mov
ret
cmp
mov
retf
inc
add
mov
xor
sub
inc
lods
rol
and
xor
imul
jb
pop
push
std
mov
or
jmp
test
sbb
rcr
push
push
add
and
fwait
scas
xchg
test
gs
pop
sahf
repz
popf
pop
ins
pop
jo
icebp
dec
in
dec
add
sub
or
data16
imul
mov
int3
mov
xor
adc
(bad)
out
std
mov
push
inc
jne
jmp
out
and
test
outs
in
in
aam
pop
sub
(bad)
and
sub
add
and
xchg
xor
xor
cmp
mov
cwde
lahf
iret
xor
outs
loopne
test
inc
mov
jle
in
ins
ins
bound
add
xor
repnz
rcl
call
lock
leave
cli
mov
mov
stos
push
push
mov
dec
arpl
loop
inc
add
xchg
mov
(bad)
out
daa
ret
pop
and
lock
pusha
ins
cmp
xchg
scas
jmp
xor
jp
int3
and
add
cwde
jmp
sar
sub
or
sbb
adc
nop
and
add
call
mov
data16
aaa
jle
dec
pop
fisttp
nop
push
mov
loope
or
dec
cld
ins
jno
daa
int
lahf
mov
nop
outs
fucomp
jae
or
lods
inc
shr
(bad)
mov
adc
and
int
in
(bad)
xchg
and
push
mov
bound
nop
push
ficom
jo
add
jle
call
cmps
pop
imul
xchg
sub
pop
jl
dec
stc
mul
pop
in
fadd
out
(bad)
xor
(bad)
retf
in
cld
cmp
and
mov
mov
mov
stos
shr
inc
add
les
das
ficom
bnd
dec
movs
lahf
je
jecxz
adc
ds
call
sub
mov
mov
pop
fistp
sbb
mov
mov
mov
push
dec
inc
dec
push
nop
mov
or
xlat
outs
cmp
sbb
and
movs
out
or
xchg
or
retf
mov
imul
jmp
push
sbb
adc
cmps
push
and
adc
push
dec
jne
cwde
sub
mov
sub
retf
dec
pop
sub
sub
inc
fdivr
push
add
(bad)
inc
test
cdq
sub
push
loopne
or
cmps
xlat
jle
pop
in
shr
shl
push
mov
lea
xchg
call
and
ror
xchg
and
adc
xor
add
stos
aam
dec
lock
call
gs
jnp
ins
stos
push
lea
mov
push
sub
mov
call
sbb
aad
jge
cld
in
stc
jmp
je
pop
clc
enter
xor
das
xchg
push
lock
push
bound
push
mov
out
pusha
xchg
(bad)
stc
xchg
movs
out
mov
mov
sbb
jns
adc
cmp
in
jge
jb
inc
pop
dec
cs
fild
in
jp
adc
mov
and
jb
pop
(bad)
retf
(bad)
mov
sbb
lea
cmp
shl
jno
xor
popf
mov
(bad)
jbe
jge
xor
lods
push
(bad)
test
jns
fist
mov
cmp
mov
cli
dec
js
test
lock
in
out
cmp
fsin
loopne
cmp
jmp
int
out
sbb
adc
fwait
and
ret
(bad)
pop
adc
xor
push
mov
mov
sbb
jbe
aad
pop
xor
imul
inc
or
fistp
ret
(bad)
mov
in
mov
out
sbb
cmp
mov
int
mov
jecxz
call
mov
dec
aad
pop
lock
sub
dec
cmp
rol
loope
inc
mov
sbb
adc
jne
daa
mov
retf
push
mov
repnz
jg
and
push
mov
add
pop
mov
mov
lahf
sub
leave
or
jge
jae
inc
rol
pop
icebp
cmc
popf
in
pop
and
adc
mov
mov
adc
mov
es
call
xchg
outs
adc
test
add
loopne
ja
sub
sti
mov
cmp
(bad)
jg
mov
sub
fdivr
pop
pop
aaa
rcl
sbb
mov
fidiv
into
push
repnz
xor
clc
mov
rcr
sbb
or
in
push
and
into
mov
iret
ins
fwait
pop
dec
fimul
add
call
xor
enter
sub
pushf
pop
push
jmp
in
dec
hlt
addr16
fiadd
adc
jno
xchg
xlat
adc
push
jmp
pop
mov
push
outs
cdq
push
int
fsubr
rol
sub
sub
jno
sbb
ficom
cwde
in
out
jbe
gs
jae
mov
mov
push
cmp
add
pop
mov
pop
fsub
ins
enter
fsub
scas
mov
out
sbb
push
loop
or
xor
xor
cmp
push
jge
icebp
in
push
pushf
mov
cdq
cli
loope
cmp
wbinvd
fstp
dec
inc
(bad)
ja
mov
push
dec
test
imul
xchg
movs
or
nop
pop
sub
imul
call
xor
inc
mov
not
xchg
mov
out
div
rol
movs
mov
test
sub
sub
add
mov
mov
cmc
xchg
into
in
jl
cmp
sbb
loopne
addr16
adc
cmp
pop
repz
and
sub
out
test
mov
sbb
aam
xlat
jb
adc
popa
inc
test
rol
mov
lods
xchg
call
aaa
adc
push
cs
jecxz
or
fnstenv
or
repz
push
fistp
les
retf
(bad)
stc
mov
jmp
leave
sti
pop
mov
(bad)
xlat
pop
mov
push
or
aad
fist
loop
lods
test
cmps
loope
shl
(bad)
cmc
and
mov
pushf
sub
(bad)
xchg
hlt
bound
adc
enter
xchg
out
and
int3
movs
ret
sti
adc
pop
inc
push
aaa
std
dec
mov
pop
sahf
(bad)
xchg
lock
rol
fst
lods
xor
popa
sahf
loop
adc
sub
into
cmp
aad
jmp
push
mov
pop
test
dec
dec
test
xor
out
fmul
push
sbb
out
push
lods
bnd
outs
lea
jno
fimul
fdiv
out
aam
push
fucomi
adc
or
xor
hlt
daa
and
jae
pop
xor
loop
sub
or
out
xor
adc
clc
bound
pop
mov
jmp
and
push
jo
outs
test
fisubr
in
push
ret
fs
in
push
stc
cli
aas
in
fwait
daa
rcr
jle
and
xchg
sub
inc
inc
gs
fidiv
repnz
xchg
adc
in
mov
ret
iret
movs
das
adc
mov
call
ins
and
inc
xor
out
aam
in
inc
xchg
shr
ja
int
mov
jg
push
stos
push
push
int
div
sbb
or
sub
imul
xchg
pop
repz
or
mov
cmp
jne
stc
mov
lahf
and
imul
cmp
mov
(bad)
movs
push
mov
push
outs
add
xor
xor
pop
sbb
xchg
test
push
test
in
pusha
test
jl
test
dec
jge
xor
jl
dec
or
sub
cld
aam
and
pop
mov
das
popf
call
push
inc
popa
pop
pop
xor
mov
jl
push
add
dec
sub
pop
outs
mov
jg
test
mov
popf
cld
mov
push
int
mulps
rcr
lock
pop
and
jge
xlat
into
push
or
pop
mov
mov
dec
sub
cmp
sub
pop
fs
inc
movs
and
sbb
adc
shl
cmps
les
std
xor
and
js
and
push
mov
cdq
je
mov
or
jle
sub
cs
jmp
adc
sub
xchg
adc
pop
lahf
inc
jl
out
or
mov
stc
sub
adc
les
stos
rcr
push
jg
in
ror
test
inc
dec
fbld
mov
mov
stc
add
add
jns
or
pushf
jae
icebp
ror
mov
adc
sbb
inc
pop
mov
shl
cmp
pop
jns
(bad)
daa
pusha
ins
or
data16
fwait
stos
jmp
inc
add
fisttp
(bad)
cmp
push
jp
imul
adc
mov
pusha
cmp
pop
jle
(bad)
or
dec
not
jmp
or
loopne
xchg
mov
dec
nop
clc
mov
push
mov
in
cmp
loope
cmps
stc
adc
or
test
xchg
cwde
repz
and
dec
mov
leave
pop
push
ins
xor
movs
les
inc
(bad)
and
loop
push
ficom
pop
inc
push
int
(bad)
mov
sbb
jae
shl
(bad)
je
xchg
add
xchg
aam
mov
leave
or
movs
cs
(bad)
aas
adc
(bad)
push
mov
pop
inc
sbb
xchg
inc
push
sbb
lahf
fld
cmps
repnz
cld
sti
push
pop
rcr
sahf
(bad)
std
push
cmps
dec
adc
pop
cmp
jae
mov
in
add
xchg
sub
repz
gs
jnp
adc
jno
(bad)
fwait
call
or
pop
idiv
mov
mov
sahf
mov
leave
(bad)
fsubrp
jge
lods
ret
pop
imul
retf
sbb
mov
in
sub
add
(bad)
and
xor
jmp
xor
les
dec
aas
fnsave
ret
hlt
and
or
lods
out
push
pop
pop
aas
test
dec
mov
and
ja
outs
stos
mov
xor
inc
push
jo
call
sbb
(bad)
pop
fcmovbe
jb
lea
cmp
adc
jnp
loopne
cmps
test
sub
cmc
push
scas
(bad)
adc
xor
test
retf
mov
mov
mov
rcr
(bad)
adc
adc
pop
aaa
adc
stc
into
xor
and
test
retf
ja
jns
ret
xchg
fimul
leave
sub
ret
je
sbb
mov
mov
scas
jae
and
jmp
or
dec
nop
fcomp
add
sub
jmp
fbld
xchg
mov
imul
sbb
shl
imul
xchg
call
inc
cmp
int
iret
or
aad
push
pop
jo
rcl
add
jmp
and
mov
fistp
in
mov
fs
sbb
mov
mov
hlt
sti
iret
leave
adc
test
aas
xor
jl
xchg
pop
call
xchg
mov
das
mov
js
add
fst
xor
jmp
xor
stos
addr16
stc
mov
daa
adc
or
sub
idiv
shl
ret
cmp
int3
test
mov
in
mov
ins
dec
rol
mov
mov
imul
fcom
leave
and
leave
aam
cmp
daa
in
loope
in
dec
and
rcl
cmc
call
js
add
test
adc
fidivr
mov
fidiv
daa
xchg
sub
test
sub
or
sub
mov
out
(bad)
popf
movs
and
sub
test
mov
jmp
leave
xor
retf
xchg
(bad)
imul
sub
(bad)
arpl
mov
or
loop
mov
mov
std
sub
sbb
sbb
sbb
(bad)
and
mov
not
dec
mov
je
jno
popa
pop
push
mov
sub
(bad)
fbld
sbb
mov
jbe
sub
push
add
rcr
aad
es
jae
or
test
bound
mov
mov
add
jbe
jb
ror
jns
mov
mov
into
outs
adc
adc
jae
div
fsub
stc
mov
gs
pop
pop
push
lock
ins
push
jecxz
aad
cld
xlat
fwait
pushf
mov
and
sub
(bad)
outs
mov
adc
dec
rol
addr16
sub
in
mov
jmp
pop
lahf
xchg
(bad)
and
fcmovb
mov
pop
jns
nop
add
pusha
adc
imul
cdq
outs
mov
xchg
cmp
push
leave
jp
mov
pop
movs
and
nop
and
ins
cld
in
fs
enter
sub
rcr
sub
mov
inc
outs
mov
lea
popa
sahf
sub
cmps
and
int3
or
lods
adc
outs
cmp
repnz
pop
stos
fmul
cmc
sub
and
icebp
or
bnd
sbb
dec
out
cmp
inc
arpl
dec
test
or
test
push
popf
loope
out
pop
loopne
mov
inc
and
jb
out
adc
cmps
gs
fcom
cmp
cwde
or
or
imul
push
adc
sar
or
stos
push
inc
adc
lock
mov
outs
jmp
into
push
xor
xchg
push
js
cmp
dec
sbb
rcl
aam
push
cld
or
cwde
nop
mov
retf
movs
cmp
mov
and
cmps
push
stos
sbb
cwde
jmp
ds
in
and
rcr
pop
int3
pop
dec
inc
push
mov
aam
fs
es
outs
and
adc
mov
call
sub
xchg
icebp
gs
jo
adc
jnp
iret
cmp
int3
stos
pop
cmp
aas
test
loop
int
mov
leave
sbb
push
cmc
pop
rcl
xor
mov
cmp
sub
div
cmc
jo
xchg
mov
sub
or
out
adc
push
cs
jne
jns
lahf
jge
add
(bad)
cmp
cmp
sub
mov
idiv
pop
rcr
sub
lods
lods
int3
add
cmp
daa
imul
frstor
loopne
mov
sbb
cmps
stos
mov
fs
ds
push
xor
mov
mov
push
and
cmp
dec
pusha
lods
cmps
xor
fcomp
add
pop
lock
mov
pop
jbe
and
daa
xchg
jmp
lea
iret
sbb
mov
jae
add
aad
adc
xor
cwde
xchg
inc
jno
lds
mov
add
xor
les
mov
or
sbb
mov
scas
fimul
cmp
pop
rcr
ror
bound
or
adc
nop
in
pop
adc
mov
jp
sub
cmp
retf
jmp
bound
fwait
ins
dec
pop
and
shr
jb
cmp
push
test
cmps
mov
shr
inc
stc
xchg
mov
enter
sbb
pop
xchg
cmps
mov
xlat
movs
in
outs
div
pushf
jl
into
mov
push
data16
sub
(bad)
out
inc
aad
in
int
repnz
sbb
adc
scas
sub
jno
inc
and
iret
fs
jg
ja
jne
call
jo
call
repz
push
std
cmc
push
cmp
cmp
sbb
mov
in
mov
hlt
xor
imul
jmp
jns
xlat
ror
nop
mov
adc
mov
xor
push
outs
arpl
ds
adc
add
hlt
test
jne
test
mov
cmp
jo
cwde
shl
sar
jl
cmc
fnsetpm(287
push
or
ret
iret
jbe
pop
loopne
sbb
pop
outs
int
cmps
icebp
jne
mov
in
inc
inc
mov
ja
(bad)
jge
inc
mov
adc
into
dec
mov
sub
addr16
xlat
iret
or
clc
out
jp
push
jb
aaa
xchg
das
test
cmp
adc
popf
lock
lds
repz
inc
je
inc
sbb
push
push
xchg
pop
in
ror
mov
fstp
jnp
cmp
sbb
pop
cmp
sar
jecxz
in
lock
jno
dec
repnz
xor
sete
mov
mov
push
gs
(bad)
sbb
dec
test
in
clc
mov
sar
out
push
retf
and
out
daa
popa
fstp
xor
or
dec
lahf
sbb
sub
shr
bnd
mov
out
inc
push
adc
xor
cmp
cli
retf
std
cmp
mov
mov
daa
push
jb
and
cmp
cld
jmp
inc
cmp
outs
ds
shl
cwde
dec
push
cmp
jb
inc
lock
fisub
xor
not
inc
mov
ficom
xchg
fstp
lock
mov
sub
sbb
jecxz
sub
mov
jne
bound
xchg
out
cmp
shl
test
xor
push
gs
sub
cmp
push
push
xchg
daa
xchg
pop
fsubr
out
pop
data16
push
sbb
cmps
pop
sahf
(bad)
adc
fwait
sub
imul
ss
push
jle
aad
retf
sbb
popa
loopne
mov
pop
stos
dec
cmps
jb
out
push
sbb
adc
out
inc
retf
scas
sub
add
gs
in
call
fadd
mov
dec
add
pop
popa
and
jmp
lods
push
repz
fild
jbe
cmps
cmp
inc
or
test
lock
inc
mov
xor
and
pop
retf
ss
or
dec
and
mov
ret
sub
std
ror
lods
scas
mov
xlat
scas
outs
cdq
dec
(bad)
cmp
push
cmp
push
out
ja
sbb
fld
xor
inc
add
rcl
or
pop
pop
fild
or
add
in
pop
mov
jnp
(bad)
shr
inc
daa
jbe
mov
push
test
jnp
pop
fsub
cmp
imul
adc
jb
bound
mov
adc
and
jmp
xlat
pop
(bad)
lods
push
pop
inc
mov
mov
lock
xchg
dec
jg
mov
outs
sub
les
fiadd
leave
or
adc
repz
cmc
pushf
sahf
out
dec
std
jg
inc
cmp
fmul
test
jbe
bswap
mov
repz
clc
sub
loop
xor
repz
pop
data16
ins
loopne
retf
mov
clc
cmp
repnz
cmps
arpl
dec
sahf
inc
scas
inc
cmps
jp
xor
iret
jecxz
adc
xor
inc
adc
mov
clc
adc
ins
dec
and
and
ret
push
rol
xor
jns
sub
out
xchg
xor
add
out
sub
aaa
pushf
imul
adc
in
pusha
xchg
cld
pop
mov
sbb
in
jmp
nop
pop
(bad)
(bad)
retf
daa
mov
jo
in
call
push
mov
mov
push
push
out
arpl
ja
push
lock
mov
dec
and
xor
pusha
mov
add
jbe
inc
frstpm(287
aam
cs
das
bound
fmul
cmp
ds
(bad)
loopne
mov
stos
test
loop
fisttp
call
packsswb
jmp
push
jl
and
push
shl
and
lds
ins
in
aam
jl
cmp
jmp
dec
adc
fisub
push
xchg
xchg
push
push
sahf
das
sahf
nop
push
xor
lock
iret
push
cli
int3
mov
add
dec
push
jo
ins
mov
and
inc
xchg
sbb
jb
mov
mov
pop
movs
loopne
aam
outs
pop
and
ror
outs
cmp
push
push
and
fs
ror
test
mov
bound
push
fdivr
add
mov
jg
and
xchg
fidivr
jnp
and
ds
xchg
jle
mov
cmp
dec
adc
push
push
sbb
mov
adc
sub
sub
enter
sahf
(bad)
mov
jmp
xchg
pop
add
or
dec
mov
mov
js
jbe
push
add
and
inc
and
mov
or
sbb
xchg
inc
sub
add
adc
arpl
outs
js
jecxz
rcl
pushf
fisub
rcr
test
and
in
jecxz
cld
pop
es
jae
js
imul
inc
push
(bad)
clc
loop
data16
call
les
mov
nop
sub
popa
dec
(bad)
push
aad
std
lahf
mov
jae
pop
add
adc
adc
mov
call
jnp
mov
call
or
push
mov
sbb
cmp
rol
dec
sub
xor
sbb
sbb
adc
(bad)
int3
addr16
cli
jge
mov
cs
mov
cmc
adc
sub
stos
push
(bad)
enter
xor
xlat
es
icebp
adc
sbb
daa
cmp
(bad)
retf
jmp
ins
repnz
out
daa
adc
push
repnz
int
pop
mov
lods
mov
pop
jecxz
jnp
loopne
cmp
das
cs
cli
sar
adc
mov
in
pop
les
out
inc
das
xor
mov
ret
sub
call
xchg
xor
and
bound
div
mov
xor
(bad)
repnz
popf
sbb
add
and
and
pop
cmp
pop
out
pop
jae
repz
not
hlt
mov
mov
aad
mov
sahf
jae
scas
pushf
push
pop
mov
inc
in
pop
aad
jmp
ja
ret
inc
ret
mov
test
mov
test
and
mov
xchg
bound
das
arpl
cmps
repnz
dec
jp
and
cmp
cmps
sub
adc
jno
cmp
push
inc
mov
mov
pusha
and
lods
(bad)
das
inc
dec
cmp
aaa
out
push
es
retf
icebp
mov
sar
popa
fwait
push
dec
inc
jle
mov
(bad)
fstp
sbb
sub
sbb
lods
xchg
cmp
adc
mov
sti
sbb
jno
stos
mov
mov
enter
fistp
je
mov
jmp
jmp
add
add
sahf
stc
movs
xor
cmps
mov
gs
shl
and
dec
out
arpl
inc
xor
test
dec
and
ret
shr
add
cli
(bad)
cwde
pop
inc
arpl
and
push
mov
pop
sbb
test
inc
loopne
adc
outs
xchg
dec
mov
sbb
sub
adc
arpl
xchg
push
mov
jne
dec
stc
out
jl
int
js
jecxz
mov
xor
movs
and
dec
int3
jbe
push
leave
mov
pop
aad
data16
int
push
arpl
push
mov
(bad)
imul
cmp
jecxz
pop
mov
aas
dec
push
(bad)
jmp
fs
mov
and
sbb
imul
pushf
fbstp
xchg
cwde
ret
aas
push
jp
push
enter
sbb
jmp
out
fdiv
mov
push
ret
inc
mov
cwde
stos
xor
add
jmp
loope
adc
mov
scas
nop
int
mov
loop
daa
outs
mov
jnp
push
retf
jecxz
lock
cmc
add
mov
dec
pop
cmp
and
inc
leave
cmp
sub
xchg
or
ins
mov
push
stos
lods
inc
adc
xor
icebp
push
mov
mov
pop
mov
sub
stc
adc
std
adc
inc
jg
fistp
jmp
pop
in
into
cmps
mul
xor
mov
pop
int
mov
js
pusha
mov
sub
bound
push
add
inc
cmp
lds
jno
push
cli
fisub
repz
and
xor
(bad)
and
enter
addr16
retf
ins
sub
into
hlt
test
cmp
jb
jp
add
push
add
xchg
sbb
fsub
mov
mov
stos
int
jge
xor
mov
scas
or
inc
hlt
inc
and
jecxz
sub
cmp
or
adc
cmp
push
push
xchg
repz
push
sar
adc
pop
call
mov
xor
mov
ja
fdivr
jmp
pushf
cmps
push
mov
out
fdivr
adc
movs
add
lahf
or
cmp
(bad)
test
aam
jp
fsub
mov
xchg
push
push
push
leave
jns
xchg
add
or
jle
mov
lods
xchg
retf
imul
in
dec
shr
icebp
fild
in
mul
fs
mov
push
mov
aaa
ds
(bad)
arpl
mov
(bad)
push
dec
dec
xchg
mov
xor
cmp
pop
sub
ins
pop
mov
in
shl
out
out
lods
cmp
inc
and
imul
(bad)
icebp
mov
js
movs
xor
addr16
imul
das
das
lods
mov
ss
pop
adc
pop
push
and
stos
xchg
mov
fild
pushf
icebp
movs
ins
out
in
arpl
es
dec
push
movs
add
das
cdq
movs
push
shl
mov
adc
dec
(bad)
jmp
mov
mov
hlt
or
jmp
hlt
mov
jmp
hlt
jle
push
or
pop
pop
cmp
jmp
fbld
test
pop
movs
jmp
retf
fwait
add
inc
pop
rcl
sub
mov
stos
add
adc
inc
enter
aas
mov
pop
jg
mov
fnstcw
jns
jne
or
jge
in
iret
sub
sahf
std
sahf
mul
pushf
push
pop
mov
sti
fsubr
sbb
cmc
stc
mov
mov
data16
daa
push
loop
pushf
dec
setns
adc
movs
push
aaa
sub
pop
das
jmp
cmp
add
inc
push
xor
outs
enter
xchg
fcomp
test
fist
shl
sub
iret
imul
imul
ret
jne
or
ds
les
mov
sub
jg
or
mov
jl
sub
pop
mov
loope
or
and
cmp
aaa
push
in
inc
sbb
adc
mov
pop
out
pop
xchg
mov
mov
mov
jle
in
call
pop
push
sbb
jns
sbb
dec
xchg
pushf
in
hlt
das
adc
cwde
sub
add
jl
hlt
pop
jno
inc
popa
sbb
jo
adc
and
cdq
pop
shl
bnd
dec
xchg
fadd
rcr
fcomp
xchg
inc
ds
xchg
cmp
mov
mov
push
(bad)
xchg
add
xor
sahf
leave
movs
push
repnz
psllq
addr16
push
inc
or
sub
dec
cld
pop
push
hlt
mov
sub
mov
xchg
pop
imul
add
mov
bswap
cld
push
fnsave
sub
push
div
push
mov
dec
aad
adc
xchg
sbb
sub
lock
dec
mov
mov
in
xchg
jp
dec
push
mov
jne
fiadd
adc
mov
xor
xchg
ds
test
dec
mov
mov
test
popa
pop
and
or
jl
arpl
mov
add
dec
mov
pop
ret
xchg
and
mov
xor
or
test
cmc
dec
mov
je
jle
(bad)
fwait
icebp
push
inc
out
je
mov
pop
lods
push
dec
rcl
lods
sub
test
xor
inc
daa
jb
neg
movs
and
dec
nop
jns
icebp
xchg
ja
mov
out
in
cmp
in
es
mov
dec
cmp
mov
retf
mov
into
sub
in
and
xor
stc
cmp
ret
movs
popf
(bad)
aam
xchg
movs
and
test
test
and
in
push
pop
adc
jmp
inc
dec
mov
inc
jle
cld
mov
jmp
adc
xchg
inc
sbb
ss
aas
cwde
fild
aaa
out
mov
jge
in
pop
vpcmpgtw
add
test
rcl
cmp
jo
mov
fwait
movs
or
push
xchg
fs
rol
dec
mov
or
sbb
jb
xor
aaa
out
dec
inc
jmp
fist
inc
ds
je
xchg
loop
xlat
dec
mov
inc
stos
pop
in
jnp
push
aas
(bad)
loope
cmp
or
pusha
aas
sbb
sbb
ret
sbb
dec
or
mov
(bad)
push
mov
aam
cmps
(bad)
xchg
xchg
pop
pop
sti
mov
mov
out
sub
jmp
dec
(bad)
cld
or
nop
pop
cmp
aad
das
int
and
aad
sbb
jg
test
mov
pop
or
cmp
jnp
sbb
pop
out
call
lods
pop
rol
fwait
sahf
mov
out
stos
add
mov
inc
sahf
pop
daa
sub
scas
or
je
aaa
sbb
xor
jae
xor
ja
in
lock
call
aad
add
hlt
hlt
xor
(bad)
mov
push
mov
outs
jle
fsub
(bad)
cmc
and
ja
or
sbb
xchg
xchg
mov
xlat
stc
add
(bad)
je
xchg
push
sbb
test
out
xchg
xchg
dec
call
jg
add
icebp
das
mov
and
pop
in
mov
adc
jmp
fldcw
inc
push
dec
ins
mov
jg
mov
leave
div
out
mov
cmp
or
push
mov
xchg
push
fwait
mov
lds
dec
push
scas
ficomp
add
jecxz
or
push
sbb
push
sbb
inc
ret
jmp
sbb
push
ffreep
xchg
mov
adc
outs
aas
dec
xor
pop
xor
xor
pop
retf
xchg
mov
sbb
(bad)
(bad)
(bad)
test
adc
fbld
and
inc
dec
stc
dec
movs
es
mov
sub
inc
inc
out
dec
and
int3
mov
in
movs
imul
xor
mov
repnz
fidiv
jle
aam
into
jg
jnp
movs
jno
xor
pop
cmp
adc
rcl
addr16
vmread
mov
dec
adc
out
mov
call
jmp
jno
mov
or
aam
jnp
xchg
mov
ds
retf
idiv
test
leave
popa
jp
ret
cmp
enter
scas
cmc
pop
mov
jge
pop
mov
popf
imul
push
out
cmp
mov
mov
xchg
pop
call
pusha
mov
jae
stc
inc
dec
pop
cld
jg
mov
out
mov
add
jg
sbb
push
imul
mov
leave
leave
mov
test
push
mov
xor
out
hlt
inc
or
test
outs
jle
scas
daa
mov
jecxz
sbb
jne
stos
iret
inc
jmp
inc
inc
mov
adc
jmp
sbb
and
adc
loop
mov
sbb
jmp
loopne
push
mov
pusha
sub
shl
call
movs
nop
or
(bad)
jge
cwde
out
adc
ins
dec
pop
rcl
mov
imul
pusha
and
cmps
push
test
and
cli
in
fld
sub
dec
(bad)
psadbw
scas
pop
xchg
retf
adc
movs
ins
cmp
add
nop
scas
sbb
cmp
in
fcomp
pop
arpl
int3
stos
test
add
in
data16
jns
pop
inc
pop
fwait
rep
hlt
cli
push
sti
int3
mov
mov
pop
icebp
mov
jmp
cwde
(bad)
mov
mov
bound
shl
arpl
cmp
xor
cmc
mov
add
ret
add
lods
ror
cdq
sti
and
out
add
adc
ret
dec
push
push
push
pusha
das
sbb
mov
or
adc
xchg
call
jge
mov
xchg
mov
outs
push
mov
pop
pop
fist
bound
jb
lahf
pop
cmp
push
int3
push
jns
std
std
mov
jbe
mov
mov
jmp
imul
jg
inc
cs
ds
cmp
stos
push
or
mov
pop
out
jmp
fisttp
aad
push
fcomp
xchg
mov
cmp
pop
iret
mov
lea
cdq
mov
xchg
push
adc
mov
and
loopne
push
xchg
jmp
rol
dec
jns
xchg
mov
xlat
int3
aaa
(bad)
movs
push
dec
lock
adc
mov
fisub
mov
push
adc
cs
and
jmp
std
dec
nop
push
cdq
mov
fdivr
lahf
pop
add
shr
iret
les
(bad)
push
cmp
pop
js
lahf
xchg
cmp
test
jle
jge
xchg
push
xchg
leave
call
outs
bound
push
xor
shl
ja
mov
popf
jno
js
fistp
fisttp
leave
and
lea
(bad)
mov
test
mov
ss
outs
mul
das
nop
test
test
faddp
xchg
out
dec
inc
popa
jp
jecxz
ret
outs
(bad)
daa
adc
mov
fldcw
jnp
adc
sbb
jb
icebp
push
(bad)
push
xor
arpl
(bad)
cmps
sub
mov
int3
into
push
mov
push
bound
ror
stos
pop
cwde
cmp
ret
test
or
mov
inc
or
xchg
pop
pusha
and
add
sub
sti
dec
nop
xchg
jae
cs
pop
jle
and
out
or
cdq
dec
cmps
mov
iret
xchg
cdq
icebp
iret
lock
fsub
fsubrp
adc
imul
sbb
mov
sbb
xchg
or
(bad)
sub
out
outs
gs
inc
enter
test
pop
imul
push
out
in
jp
dec
cmps
call
and
mov
clc
loopne
test
and
iret
aam
daa
jno
stc
cmc
std
inc
setns
out
dec
ins
test
gs
mov
fwait
push
fwait
aas
leave
lods
jno
movs
mov
repnz
int
ret
mov
inc
and
inc
leave
mov
sub
ret
add
sbb
rol
int3
xor
in
push
add
call
push
mov
ss
jge
and
mov
add
sbb
push
aas
mov
cmp
mov
fnstcw
ror
jno
xchg
cmp
hlt
mov
aad
iret
imul
inc
xchg
xchg
jnp
and
jmp
(bad)
pusha
xchg
fnstenv
addr16
mov
xchg
mov
pop
aam
cmps
adc
xor
mov
xlat
xchg
movs
out
pusha
gs
fild
and
pop
les
xor
cld
pop
ret
pop
add
popf
addr16
loopne
test
xchg
leave
sbb
pop
sub
jbe
push
(bad)
(bad)
adc
aaa
imul
call
std
pop
inc
jl
add
cmc
pop
mov
pop
popa
ss
add
add
add
and
aam
xchg
mov
push
dec
sti
jle
or
call
clc
xchg
sbb
and
xchg
ds
or
in
mov
mov
xor
add
outs
shl
call
dec
in
xchg
call
mov
mov
fndisi(8087
pop
aaa
cdq
pop
and
fidiv
inc
das
add
or
cmps
add
lahf
add
(bad)
lahf
rcl
pop
xchg
pop
loopne
xchg
int
pop
cmp
cmp
sbb
cmps
ins
gs
sbb
call
sbb
shl
fwait
sub
xor
lock
test
xchg
or
inc
out
outs
push
test
into
mov
jne
outs
(bad)
aas
out
ret
retf
pop
fisub
sub
sub
pop
cs
das
push
and
out
xlat
in
into
cmp
pushf
nop
clc
cmps
lock
or
(bad)
or
sahf
xor
sbb
into
ret
not
mov
mov
push
arpl
jno
jo
sub
sti
(bad)
fimul
cmp
pop
bnd
pop
jl
dec
les
test
sbb
add
pop
xchg
in
mov
inc
mov
jbe
dec
xchg
ins
pop
and
test
das
sub
sbb
inc
pop
and
push
nop
xor
test
leave
mov
push
jo
enter
xchg
xor
retf
sub
jns
in
fwait
sbb
pop
les
mov
mov
repz
push
aam
mov
add
mov
aas
mov
cwde
push
mov
inc
xor
and
ficom
addr16
cmc
cdq
jmpw
cmp
mov
rcr
adc
mov
jecxz
iret
cmc
inc
jns
adc
in
mov
push
cmp
loope
in
ret
scas
out
cmps
push
repz
or
mov
push
mov
call
and
ins
adc
int
out
inc
or
shl
inc
(bad)
adc
test
pop
adc
aaa
sbb
xchg
inc
xchg
inc
or
pop
fadd
and
xor
ds
inc
ins
pop
xchg
inc
xchg
xchg
imul
ins
scas
(bad)
lock
add
cmc
cmp
fldcw
sbb
cdq
dec
in
shl
nop
or
fcomp
or
fs
jecxz
mov
inc
lea
push
jmp
adc
xor
test
jmp
leave
inc
and
movs
push
jb
sub
add
jge
fwait
jno
xchg
cmp
pop
xchg
mov
jmp
jmp
shl
dec
xlat
sub
mov
push
push
mov
sub
test
cmp
fldcw
push
adc
in
repz
pop
out
cwde
cmp
push
xchg
movs
pop
sub
push
hlt
xchg
add
pushf
dec
adc
ins
test
inc
daa
ins
sub
leave
jp
sbb
push
inc
cmp
scas
addr16
add
cwde
jne
add
or
ds
sub
repz
ja
rcl
mov
add
xor
pop
cmp
test
mov
and
push
dec
shl
pusha
push
add
mov
adc
add
xlat
shl
in
stc
jmp
aas
lds
ds
out
adc
loope
jbe
cdq
ret
dec
cmp
jo
pop
mov
pop
push
sub
cmps
xor
ins
lods
mov
jmp
adc
mov
repz
imul
ret
mov
rol
inc
add
out
and
push
rcr
clc
pusha
jns
fs
mov
pop
sub
fwait
dec
(bad)
jb
sub
aad
dec
mov
inc
inc
pop
sub
jae
mov
or
inc
inc
push
sub
adc
pop
retf
stos
mov
xor
or
dec
mov
inc
vcvtpd2ps
loopne
xchg
sbb
xchg
adc
scas
sbb
out
mov
and
call
rcr
mov
loop
jns
sti
arpl
mov
in
aam
ja
xor
movs
mov
inc
push
mov
retf
push
jg
out
icebp
add
mov
push
dec
sti
mov
mov
(bad)
mov
test
jl
nop
std
into
push
or
enter
gs
add
xchg
into
pop
data16
push
push
add
jecxz
sbb
int
lods
or
inc
jmp
add
inc
push
adc
cmp
sub
outs
loopne
add
cmp
and
mov
imul
ror
repnz
leave
cmp
sbb
push
or
sub
or
repz
push
loope
mov
pushf
and
stos
xor
fwait
inc
pop
push
cmp
xchg
or
xlat
fadd
adc
adc
or
sub
ret
std
rol
adc
xchg
or
test
jno
fwait
int
in
imul
mov
mov
enter
and
int3
adc
xchg
and
scas
pop
push
je
sbb
xor
scas
mov
dec
cdq
clc
pop
stos
push
(bad)
pusha
scas
ror
clc
push
sbb
aad
mov
inc
push
fsub
test
pop
mov
(bad)
mov
mov
xor
push
jnp
cmps
pop
mov
sub
dec
(bad)
int
aaa
and
xchg
mov
jne
xor
fwait
mov
dec
ja
lahf
pop
or
cwde
sub
cld
jge
mov
in
mov
leave
dec
xlat
push
xchg
and
xchg
sbb
push
xchg
sbb
adc
pop
(bad)
cmp
add
repz
mov
scas
or
mov
pop
xchg
sbb
jmp
mov
ret
sub
or
(bad)
out
int
cmps
jp
imul
(bad)
stc
(bad)
adc
movs
loop
mov
scas
and
mov
test
fdiv
xor
mov
stos
clc
call
int
jecxz
xlat
push
xchg
enter
mov
cmp
pop
mov
xchg
js
cmp
out
or
mov
adc
loopne
cmp
aas
jecxz
lods
(bad)
jmp
adc
fwait
push
fistp
jb
push
loopne
shr
xchg
outs
or
cmp
ret
mov
mov
mov
pop
arpl
sbb
xchg
dec
fucomp
popf
jo
add
sbb
push
xchg
add
push
retf
hlt
call
arpl
nop
std
add
cmp
cmps
jmp
into
and
jns
cmp
mov
ins
lods
xchg
mov
mov
xchg
leave
das
fdivr
cwde
or
cld
jnp
pop
adc
fwait
out
jns
fadd
pop
mov
in
and
hlt
fild
mov
ja
clc
jge
out
enter
shl
scas
ja
pop
mov
jle
inc
cld
pop
outs
imul
(bad)
rcl
mov
lods
push
pop
or
add
adc
mov
ins
bound
in
push
inc
test
cmc
dec
adc
cmp
jnp
jnp
jle
mov
or
push
pop
mov
aam
mov
movs
and
mov
test
mov
inc
mov
push
xchg
rol
xor
mov
test
lods
and
fs
or
cs
mov
lods
pmuludq
and
psrlw
and
cmp
bound
inc
mov
mov
lea
mov
pop
cdq
loopne
pop
dec
fwait
jae
sahf
dec
test
jp
jmp
(bad)
daa
and
inc
ret
retf
mov
aad
std
inc
dec
in
movs
cwde
add
fcmovb
add
fbstp
jl
mov
ret
fdivr
loope
aam
fs
in
bound
pop
fdiv
aad
xor
pop
or
sub
sbb
or
movs
jnp
sub
pop
cmps
not
push
or
div
mov
retf
(bad)
frstor
or
push
popa
mov
loopne
dec
cmp
adc
jae
sahf
push
jmp
pop
out
and
enter
(bad)
or
mov
retf
jge
outs
jmp
dec
and
jb
fdiv
pop
mov
push
scas
xor
or
and
mov
xchg
jns
sbb
fcmovnu
and
adc
inc
(bad)
stc
iret
xchg
in
cmp
fstp
jmp
push
fild
outs
cwde
inc
call
ficom
aad
xchg
out
test
clc
and
and
in
pushf
daa
fs
xor
jg
push
loope
fnstcw
(bad)
jle
cmp
inc
inc
mov
popa
inc
fnstenv
cmp
cmp
rcl
adc
jge
jne
sbb
imul
cs
imul
shr
in
fcmovnb
add
jne
div
and
imul
xchg
pop
add
out
jmp
adc
push
push
or
pop
cmp
ds
sbb
enter
sub
mov
(bad)
sub
mov
out
fldenv
mov
rcr
call
repnz
sub
rcr
retf
loope
add
sti
iret
popf
movs
or
outs
push
mov
lock
es
or
xor
cmp
inc
test
push
jmp
aam
pop
fmul
sahf
xor
dec
enter
sbb
rcr
xor
adc
lock
jmp
inc
(bad)
pop
jo
sbb
pusha
adc
ror
sti
cld
jmp
xor
arpl
mov
xchg
fwait
shl
sub
scas
dec
in
lods
imul
daa
ret
push
xchg
test
in
aaa
int
inc
outs
call
fmul
and
sahf
xor
push
popf
or
scas
stos
mov
jge
push
scas
push
retf
xchg
pusha
jecxz
cmp
push
leave
rol
cmc
cs
pop
jl
mov
imul
push
push
jmp
sahf
nop
inc
xchg
jge
xor
mov
push
add
adc
pop
pop
mov
add
sbb
jne
repz
cmps
(bad)
jp
push
pushf
bound
retf
inc
add
stos
les
fistp
and
mov
cli
test
inc
push
rcr
mov
inc
dec
push
jb
jmp
push
push
dec
bnd
adc
xor
lods
test
xor
fist
mov
fsubr
sub
cmps
cmp
stos
inc
jbe
dec
lock
dec
add
imul
cmp
and
aam
pop
push
jno
test
dec
sbb
mov
mov
or
cmp
mov
and
mov
lock
adc
sar
xor
cmps
jg
jno
das
and
pop
or
ja
imul
nop
mov
and
add
es
ficom
pusha
mov
add
push
sub
dec
rcl
sbb
(bad)
test
jg
sbb
and
cmp
(bad)
hlt
sub
add
loope
mov
and
sub
test
mov
adc
sub
jmp
sub
mov
pop
or
mov
dec
add
rcr
xor
iret
jmp
jmp
xor
sahf
mov
retf
sbb
shl
lock
xchg
aaa
dec
loop
into
jnp
test
or
cmps
jbe
aaa
sub
or
push
or
out
xor
pop
and
lods
sti
dec
push
sbb
add
mov
push
ss
adc
out
rol
(bad)
xlat
cmp
test
xor
mov
jg
cmp
jne
dec
pop
xor
mov
adc
bound
xchg
loopne
in
add
pop
xchg
xor
aas
aad
mov
cld
xchg
enter
push
loope
xchg
call
fidivr
lea
repnz
out
inc
test
inc
pop
sbb
dec
push
in
mov
push
inc
xor
and
mov
dec
mov
shr
fimul
inc
rcr
sub
(bad)
inc
ins
mov
adc
push
adc
outs
jecxz
pop
xor
cmps
jmp
push
test
lods
jb
pop
(bad)
fadd
neg
es
ror
into
sbb
ret
sar
dec
or
pusha
(bad)
ins
popa
in
lods
je
(bad)
pop
dec
cmp
in
or
push
aad
hlt
pushf
sbb
push
cmp
push
pop
iret
retf
jle
mov
push
cmp
mov
add
fidivr
int3
inc
xor
cmp
outs
jmp
pop
xchg
push
out
add
cmp
pop
rcr
sub
dec
cli
push
or
mov
enter
dec
cmp
mov
inc
gs
dec
xchg
mov
mov
(bad)
and
ror
out
pop
mov
jbe
inc
shr
inc
xchg
call
add
dec
(bad)
movs
dec
mov
pop
stc
or
add
adc
leave
mov
cld
add
mov
xchg
test
rcl
jl
pop
pop
pop
mov
stc
sbb
(bad)
lock
mov
in
std
add
and
icebp
mov
adc
out
scas
lahf
retf
xor
inc
jne
sbb
ffree
cmps
mov
add
outs
cmp
or
pop
fisttp
inc
pop
mov
jb
aad
je
aad
xor
xchg
mov
cmc
les
push
sbb
push
call
mov
mov
xchg
xchg
jnp
mov
in
or
scas
nop
mov
call
pop
push
xor
repz
gs
lds
sub
jle
nop
xor
cmc
push
sbb
push
ret
xchg
or
fsub
xlat
adc
clc
dec
jae
cwde
ret
shr
or
(bad)
cli
dec
jo
cwde
lock
ret
mov
xchg
xor
pushf
push
movs
ret
cmps
dec
sti
cmps
test
push
cmps
enter
xor
lock
lds
mov
pop
dec
ds
xchg
fsubr
out
imul
int
sbb
mov
push
push
jno
adc
mov
push
push
xor
cmps
jbe
shl
fs
jmp
sbb
push
ds
mov
dec
int
inc
and
dec
jae
call
or
mov
lods
pusha
sbb
cmps
in
cdq
or
dec
mov
mov
fwait
or
je
or
jl
mov
xchg
not
cmp
das
mov
and
loop
enter
pop
mov
scas
pop
fs
dec
hlt
repnz
icebp
inc
ret
fdiv
push
add
xchg
jns
and
mov
push
push
jle
das
xchg
mov
xor
mov
mov
ret
pusha
or
mov
loopne
jg
pop
fistp
mov
push
(bad)
lock
in
xchg
xor
outs
int
jp
xor
sub
adc
or
in
adc
and
fs
pop
call
pusha
ror
and
call
movs
lods
add
jo
ins
fnstenv
adc
jbe
mov
leave
mov
setbe
scas
test
cli
lahf
cs
cmp
mov
pop
popa
push
cmp
jl
inc
(bad)
pop
push
push
or
sbb
xchg
xchg
bound
lahf
push
xlat
mov
or
dec
fdiv
es
or
shr
cmp
lea
jl
aaa
fdivr
aaa
inc
fisubr
stos
stos
add
add
popf
aas
test
xor
sub
push
(bad)
cmp
inc
dec
cmps
and
mov
adc
fsub
push
jmp
cmc
pop
push
mov
xor
inc
push
xchg
xchg
pop
xchg
dec
ins
dec
loop
xor
cmp
dec
xor
push
and
shl
pushf
dec
aad
adc
sbb
mov
fiadd
add
sub
stos
scas
xchg
retf
rep
inc
into
test
jo
pop
pop
daa
add
call
fdiv
cld
imul
or
pop
not
ja
or
scas
inc
sbb
xchg
push
pop
rol
xchg
push
pop
inc
xchg
imul
rcl
lods
aaa
mov
sti
movs
jg
in
xchg
jo
imul
dec
das
mov
jmp
sub
sub
loop
sbb
(bad)
cmp
es
add
pop
jo
ret
mov
pusha
loopne
inc
sub
xchg
or
push
inc
dec
mov
inc
cmps
mov
call
mov
xchg
in
inc
inc
and
mov
mov
jmp
dec
pushf
xchg
imul
cmp
lds
(bad)
out
sub
push
push
aad
scas
popf
adc
dec
mov
jno
xchg
shl
shl
mov
mov
pop
dec
cmp
into
xchg
push
fisubr
jae
pop
arpl
mov
mov
cmc
jge
inc
lods
mov
call
repz
popa
inc
adc
sbb
enterw
xchg
mov
cmp
aas
add
cmp
pop
push
aaa
rol
retf
iret
mov
retf
retf
mov
xchg
jnp
(bad)
jle
push
and
cmp
cmp
leave
fmul
(bad)
test
aad
loop
cmp
aaa
jnp
rcr
or
mov
pop
xchg
sub
test
xor
scas
cmp
les
mov
add
ss
xor
push
aas
aam
push
jp
xchg
sbb
outs
sub
sbb
retf
adc
retf
lds
stos
cmp
and
push
push
fwait
dec
mov
(bad)
mov
jne
jbe
test
bound
inc
daa
int3
jns
xlat
ret
inc
in
movs
push
dec
cmc
ss
jbe
repnz
and
xor
imul
hlt
das
dec
test
test
outs
gs
xchg
push
popf
push
rol
outs
arpl
xor
in
imul
(bad)
adc
test
gs
push
mov
jle
sbb
mov
and
push
mov
adc
je
inc
les
pop
lods
stos
cld
sub
pop
mov
dec
mov
shr
dec
popf
dec
je
mov
push
not
add
mov
xchg
xchg
xchg
sub
call
xor
sub
aaa
mov
cmp
out
inc
outs
sbb
ja
dec
xchg
pop
fst
or
iret
in
jne
cmp
fldenv
test
xor
mov
adc
xor
dec
pushf
inc
xor
(bad)
mul
ss
pop
sub
and
push
mov
fwait
(bad)
hlt
nop
push
movs
inc
dec
gs
xor
fwait
mov
imul
mov
stos
popa
call
sub
cmp
xor
mov
cld
dec
jbe
push
and
iret
xchg
adc
pop
movs
cmp
or
popf
add
dec
xchg
mov
(bad)
std
xchg
and
adc
xchg
add
dec
push
jno
shl
call
sbb
dec
outs
add
jecxz
or
pusha
sbb
test
inc
and
fcom
outs
xor
bound
adc
cwde
test
pop
or
repz
sub
push
xchg
std
xchg
lahf
or
scas
mov
and
xchg
nop
iret
adc
neg
imul
ret
ins
(bad)
loop
enter
xor
jns
jge
scas
xchg
popf
pop
jge
and
shl
and
popa
ins
into
jle
push
and
and
push
cld
ds
and
lods
call
nop
or
test
xor
mov
out
xor
loop
div
pop
enter
stos
imul
out
mov
inc
cmp
add
adc
sub
mov
add
inc
hlt
mov
and
and
loop
jmp
adc
fucomp
lea
rcl
dec
cld
retf
scas
mov
sub
int
xor
(bad)
sti
fwait
(bad)
fs
packuswb
test
or
mov
sub
iret
add
cmp
xor
shr
mov
call
dec
scas
fnstenv
add
je
xchg
pop
mov
push
test
and
mov
iret
and
popf
sbb
pop
and
jmp
adc
sbb
cli
rcr
mov
movs
popa
mov
(bad)
mov
sbb
sub
adc
add
leave
pop
adc
js
sbb
(bad)
mov
inc
psubusw
imul
mov
sti
add
pop
outs
pop
xor
stos
jl
popa
inc
repnz
sbb
shl
adc
jl
fbld
sar
mov
or
sbb
into
and
(bad)
rcr
push
imul
mov
jmp
xchg
loope
dec
aam
ja
pop
retf
popf
inc
mov
je
gs
pop
lods
add
adc
loope
nop
cmp
xchg
sbb
imul
repz
push
enter
mov
mov
and
mov
mov
or
iret
and
stos
push
push
cmp
sar
test
and
mov
lods
mov
mov
test
or
cdq
out
in
mov
imul
push
mov
(bad)
sti
cmp
lea
sub
xchg
mov
mov
das
mov
cli
imul
iret
pop
xchg
push
imul
fist
sub
jns
imul
inc
das
push
xor
into
push
ins
or
mov
pop
lods
aam
fwait
arpl
int3
inc
das
test
xchg
mov
and
and
aaa
pop
pop
(bad)
cmp
aas
push
mov
std
xchg
clc
in
mov
mov
inc
pop
(bad)
jae
pop
jecxz
ret
nop
jns
sub
shl
test
cmp
push
fadd
div
les
stc
enter
pop
adc
or
aad
in
inc
jl
push
xor
adc
pop
pop
xor
sub
dec
xchg
(bad)
xor
xor
cld
or
fs
mov
inc
stos
out
mov
lods
dec
inc
leave
pop
mov
xor
and
aad
inc
push
fist
in
es
iret
xchg
cmp
fcomp
sti
xchg
adc
outs
mov
cli
test
adc
jle
sub
pop
push
sub
and
jmp
and
repz
mov
repz
xchg
test
xchg
sahf
mov
stos
jl
retf
(bad)
rol
movs
stc
shr
sbb
inc
mov
call
xchg
pop
pop
cmp
jae
mov
ret
adc
mov
inc
fadd
fist
stos
pop
retf
mov
mov
(bad)
push
popa
xchg
xchg
inc
push
idiv
cmp
xor
jbe
stos
lahf
iret
push
push
jo
iret
lds
add
cmp
movs
cmps
pop
mov
stc
dec
retf
mov
hlt
test
lods
push
jo
cmp
mov
clc
out
sub
xchg
les
outs
cmps
cmp
jl
shr
shr
test
sub
fdiv
aad
pop
adc
pop
out
jecxz
mov
xchg
ret
mov
inc
mov
ds
into
ins
mov
push
popa
stc
inc
addr16
dec
jmp
mov
sar
or
leave
fs
push
(bad)
cmp
es
loopne
inc
push
mov
cld
mov
fisubr
push
jmp
jl
mov
sub
mov
xchg
sub
pop
(bad)
sbb
out
mov
jne
test
outs
cwde
and
mov
mov
popa
push
in
inc
mov
dec
dec
mov
mov
mov
push
mov
dec
and
lods
repz
dec
push
sub
movs
jle
(bad)
mov
mov
les
mov
jnp
adc
aas
fwait
sbb
xor
push
lock
xlat
les
sar
pop
jmp
jae
sbb
shr
(bad)
jp
jb
mov
jge
pop
or
cmp
pcmpeqw
jbe
or
in
icebp
int
and
lahf
push
mov
fldenv
sub
mov
sbb
shl
ret
jo
mov
nop
neg
cmp
jbe
js
mov
cmps
stos
lods
fst
icebp
pop
pop
push
adc
mov
xchg
or
addr16
push
or
sbb
jl
jbe
inc
pushf
fdiv
or
xor
je
mov
es
mov
adc
pop
mov
dec
cmp
push
jmp
push
cmp
loop
or
cli
gs
sti
xchg
jo
aam
enter
ds
es
bound
dec
push
xchg
adc
imul
out
cli
mov
fwait
lahf
mov
enter
dec
lsl
js
sub
xchg
fbld
leave
or
add
cmp
mov
icebp
xchg
aaa
cli
and
push
lods
mov
xchg
or
in
test
sbb
daa
dec
adc
push
fbld
and
in
xchg
jmp
and
cmps
shl
test
enter
jp
or
movlps
aaa
rcl
ret
icebp
lds
rcr
mov
mul
outs
outs
push
stc
xor
sbb
in
cdq
sar
sub
cmp
popa
add
push
bound
mov
movs
xchg
repnz
aaa
xchg
popa
fwait
xor
mov
ss
ja
aas
or
pop
add
(bad)
pop
(bad)
movs
add
loopne
mov
in
mov
or
inc
enter
fs
in
shl
or
cmp
and
scas
cmps
(bad)
sbb
jae
pop
xor
sub
cs
mov
sbb
ret
test
cmps
dec
mov
aad
mov
sub
jmp
retf
jmp
icebp
out
adc
sbb
ins
xchg
push
mov
xor
sbb
push
retf
loope
pop
jecxz
push
sbb
dec
out
fidiv
mov
ficomp
jmp
or
in
pop
cmc
xchg
shl
sbb
ja
iret
ins
jmp
pop
mov
mov
stos
popf
retf
ret
pop
pop
jbe
cld
jp
repnz
popa
adc
outs
sbb
add
and
inc
mov
(bad)
bound
test
xchg
js
out
sub
jmp
hlt
push
pushf
lods
loop
dec
mov
jno
sahf
popf
lea
xchg
jno
std
fdiv
nop
test
push
xchg
addr16
sbb
je
lds
or
movs
xchg
mov
in
inc
lock
inc
push
fst
movs
or
sbb
(bad)
push
adc
pop
adc
pop
in
jl
inc
fcomp
push
xor
mov
cli
xlat
dec
xor
cmp
mov
ret
(bad)
or
arpl
out
dec
iret
into
dec
and
pop
fldcw
adc
mov
adc
(bad)
ins
ja
dec
loope
and
or
repnz
lahf
stc
dec
popa
aas
adc
clc
pop
arpl
es
pop
xor
(bad)
pop
and
test
push
inc
inc
nop
or
pop
lods
icebp
arpl
jmp
xor
in
or
jg
xchg
fld
imul
leave
fsubr
or
pushf
sbb
and
call
jne
push
outs
test
pop
addr16
int3
xor
xor
aaa
pop
adc
xor
clc
xchg
lods
inc
cmpxchg
mov
add
xor
ins
in
mov
adc
push
std
(bad)
mov
stc
pop
push
outs
retf
sub
push
test
fwait
cmp
int
iret
repz
pop
mov
pop
ret
bound
mov
adc
and
int
add
dec
loop
mov
nop
mov
(bad)
icebp
ss
in
cmp
fcomp
add
out
push
fucomip
xor
and
sub
sub
gs
jge
push
ja
ror
adc
out
jb
push
pop
dec
outs
gs
jg
sub
push
xchg
hlt
sbb
aad
nop
ds
lahf
dec
test
shr
retf
neg
lahf
ja
and
call
cmp
mov
cs
nop
xchg
retf
mov
cs
sbb
jmp
outs
pusha
mov
popf
retf
mov
add
into
mov
movs
pop
call
add
mov
mov
imul
inc
neg
sbb
call
sub
xlat
sub
icebp
int3
scas
movs
sub
(bad)
dec
dec
fldenv
je
jecxz
xor
out
sub
sbb
popf
and
idiv
xor
sbb
aaa
fdiv
pop
test
jle
repz
pop
push
idiv
push
jg
iret
xchg
mov
hlt
out
das
pop
push
repz
addr16
fdivr
adc
(bad)
ja
push
lea
div
lds
mov
(bad)
inc
lods
ret
mov
xchg
out
sbb
xchg
hlt
test
mov
popf
xchg
rol
jbe
test
add
and
pop
mov
int3
pop
mov
add
dec
xor
push
hlt
movs
jg
xor
adc
cli
icebp
ja
cmp
(bad)
enter
xchg
je
sub
pop
popf
push
pop
adc
cmp
pop
mov
in
sbb
mov
push
xor
jmp
adc
dec
cld
mov
mov
shl
pop
dec
or
push
push
sahf
cwde
out
nop
or
retf
mov
int
popa
cmp
gs
fadd
idiv
loope
ins
mov
jne
mov
and
push
adc
cmc
jae
jmp
xor
pop
sub
lock
sub
jbe
push
jle
int
call
adc
mov
jo
mov
xchg
mov
mov
ins
mov
adc
scas
sub
ret
stos
dec
xchg
or
ret
push
jl
and
pop
popa
fcom
(bad)
push
mov
push
imul
daa
jecxz
jns
sbb
std
jnp
ins
call
mov
mov
dec
arpl
dec
inc
int3
xchg
psllq
jge
add
dec
or
add
pushf
or
push
jb
ficom
and
test
cmp
push
frstor
hlt
adc
jg
imul
into
sub
ficomp
enter
pop
in
loopne
call
push
and
out
repz
cdq
sahf
mov
dec
fs
dec
pushf
mov
dec
lds
(bad)
pusha
pusha
and
adc
(bad)
js
inc
icebp
cwde
cmps
mov
xor
jecxz
test
ret
neg
mov
cmp
mov
ins
ins
or
xchg
pop
es
or
add
neg
add
push
(bad)
es
das
pop
dec
push
idiv
movs
sub
and
(bad)
xlat
sub
gs
jg
lods
adc
and
and
pop
enter
push
xchg
cwde
push
mov
mov
inc
mov
scas
xor
popf
cs
mov
fild
lods
bnd
mov
ss
outs
lock
adc
mov
xor
cmp
fldcw
jmp
mov
adc
and
pop
jmp
cdq
xor
outs
xchg
jmp
in
ja
outs
fisub
mov
mov
push
cmps
mov
aad
gs
fistp
repnz
imul
call
enter
add
or
sub
sub
mov
mov
jl
cs
lds
dec
out
repz
sbb
push
cld
push
iret
push
add
inc
cli
add
mov
pop
movs
push
jbe
arpl
push
sub
push
mov
not
sub
pusha
icebp
push
lods
imul
or
pop
arpl
push
test
out
pop
cmps
lahf
std
rcr
sbb
lea
ss
retf
sub
fst
jbe
lods
mov
xchg
xchg
clc
mov
popf
cmp
jmp
in
pop
mov
in
jmp
sub
and
out
sub
xor
ret
sub
push
add
adc
loopne
add
dec
push
rcr
mov
sub
and
xchg
imul
sti
adc
mov
aam
jle
sbb
sub
pop
int3
cmp
cdq
and
push
cs
mov
bound
add
aad
mov
xor
xchg
jge
fild
cmp
pop
ins
jmp
adc
xchg
or
stc
dec
cdq
cmc
scas
test
mov
pop
mov
inc
pop
(bad)
pop
push
push
dec
ret
jbe
cli
mov
icebp
mov
les
push
sbb
and
out
mul
outs
es
push
push
xchg
cmps
adc
out
repz
jo
add
idiv
push
fiadd
or
adc
sub
cmp
cwde
mul
imul
mov
(bad)
hlt
pop
push
or
scas
cs
stos
call
iret
in
outs
pop
jle
call
cdq
sbb
and
pop
cmps
test
std
fistp
jns
hlt
fnstcw
sub
fdivr
in
fdiv
fild
mov
mov
pushf
mov
rcl
jp
add
bound
xor
adc
push
in
addr16
popa
sub
out
pusha
add
xchg
jae
das
mov
test
ret
movs
pusha
into
cwde
or
out
sub
pop
sar
lods
stc
jge
sar
les
scas
jle
test
popa
test
add
test
dec
or
ins
and
add
sahf
jb
outs
es
stos
call
fcmovnb
cmp
pop
movs
arpl
sbb
lahf
mov
push
and
inc
cmps
retf
pop
stos
arpl
cwde
ss
loope
arpl
push
adc
sbb
out
out
ds
mov
and
pusha
std
pop
cmp
or
sbb
in
repnz
push
and
cmps
jl
push
mov
cwde
int
inc
jno
jmp
jno
icebp
push
sub
add
shl
ror
inc
stc
fnstenv
xor
iret
push
outs
pop
jl
ins
or
inc
xchg
xor
rcr
movs
mov
jbe
scas
iret
jge
scas
xchg
jecxz
(bad)
mov
hlt
js
fs
inc
ja
in
inc
rcl
mov
jmp
lods
outs
xor
into
or
retf
call
xchg
jbe
sahf
xchg
mov
sti
push
pop
loopne
ret
mov
mov
dec
bound
imul
std
jp
imul
push
dec
nop
mov
jmp
xchg
mov
xchg
dec
xchg
jle
gs
jae
push
scas
lock
int3
int
push
outs
in
fadd
push
pop
inc
push
(bad)
lods
inc
cmc
jbe
retf
mov
lods
xchg
aaa
lods
cmp
imul
adc
pop
retf
sar
sbb
jb
in
aam
cmp
inc
test
sub
test
mov
in
out
loop
leave
jb
stos
sub
pop
(bad)
mov
ret
cmps
or
sub
mov
(bad)
pop
fwait
out
jmp
add
inc
retf
jmp
mov
cmc
shr
jbe
push
mov
ins
cwde
add
nop
mov
inc
sbb
enter
inc
test
fsub
stc
push
dec
fisttp
dec
and
bound
popf
fmul
add
or
pop
fcomp
push
shr
add
xor
adc
popa
outs
add
mov
mov
xor
add
lea
test
lods
fcomp
popa
jns
(bad)
aad
adc
sbb
mov
pop
push
fstp
push
(bad)
fiadd
fldenv
lea
sbb
push
sub
sbb
mov
iret
push
daa
and
stc
cs
enter
out
test
add
mov
int3
enter
xor
aad
push
and
adc
int
xchg
mov
mov
mov
outs
mov
loopne
jae
jle
fdiv
inc
mov
sub
xchg
pop
cs
shl
(bad)
inc
mov
jge
sbb
or
add
adc
ror
sbb
pop
movs
sbb
test
fwait
mov
pop
mov
je
in
xchg
dec
cs
repz
stc
sti
adc
cmp
addr16
adc
jnp
push
jl
enter
imul
not
popf
(bad)
(bad)
xor
push
mov
dec
ret
and
adc
ret
xor
sbb
imul
(bad)
iret
push
test
fsub
es
retf
sub
scas
test
ja
ficomp
cmp
call
imul
jge
sub
fsub
ffreep
add
aam
in
xor
push
mov
aam
and
icebp
in
and
mov
xchg
jg
ss
out
fdivr
mov
adc
sbb
xchg
push
adc
in
out
fsub
imul
mov
xchg
dec
mov
aaa
mov
inc
xor
in
ret
mov
loopne
mov
sub
jmp
mov
mov
test
je
popf
push
or
push
dec
cmps
out
cmp
daa
std
call
adc
sub
cmp
cmp
and
xor
outs
cmps
jmp
lods
into
or
sbb
(bad)
popf
fwait
jmp
loop
stc
movs
pop
inc
loop
call
das
out
fbld
fimul
sar
icebp
sbb
(bad)
cmp
outs
loopne
pop
mov
add
adc
inc
and
out
mov
mov
je
in
sub
pop
jo
fcmovnbe
or
push
outs
xchg
inc
test
sbb
jl
jmp
mov
pop
mov
pop
cdq
xor
jne
in
xchg
ret
loop
mov
mov
mov
or
xchg
mov
in
(bad)
xchg
push
dec
dec
retf
jl
jecxz
cmps
stos
fsub
js
cwde
xchg
test
jbe
lds
xchg
inc
xchg
jl
mov
pop
jge
repz
adc
mov
icebp
inc
push
xchg
hlt
fadd
bound
inc
mov
xor
sbb
scas
inc
(bad)
sub
into
mov
jo
xchg
xlat
daa
cmp
and
jne
xchg
xor
pusha
adc
dec
outs
xchg
mov
or
dec
lock
or
add
pop
mov
pop
xchg
pop
std
lods
stos
mov
dec
add
mov
aas
pop
jge
lds
or
cmp
mov
push
xor
imul
mov
sub
fwait
hlt
ror
fdivr
retf
test
dec
xlat
call
shl
mov
jp
in
in
xchg
cdq
dec
mov
jmp
cli
ds
leave
sub
adc
out
pop
and
data16
in
push
loope
xchg
outs
cmc
nop
movs
jo
in
lods
push
push
pop
fs
(bad)
cld
sahf
push
inc
mov
sub
loop
setge
adc
push
ret
xchg
pop
jmp
xchg
or
dec
rcr
call
in
cdq
pop
adc
test
popa
add
xor
or
loope
sbb
je
xchg
ret
int
sub
xchg
push
mov
add
cmps
mov
psrlw
adc
stc
inc
popa
fmul
in
cld
(bad)
std
movs
call
enter
les
pop
arpl
mov
inc
xlat
xchg
retf
mov
movs
fadd
xor
js
ror
jp
pop
mov
rcl
aad
push
les
push
pop
call
add
call
mov
mov
ja
inc
(bad)
mov
cmp
fist
inc
adc
popf
inc
popf
ins
pop
cs
mov
dec
xchg
jecxz
inc
inc
repnz
loope
in
shl
jbe
lds
mov
jns
ins
mov
jae
ins
pop
jbe
pop
adc
(bad)
mov
shr
adc
popa
or
out
nop
ret
xchg
jl
rcr
ins
nop
repz
leave
(bad)
test
std
xchg
(bad)
aaa
rol
shr
stos
retf
xor
out
inc
clc
sub
aaa
cmp
test
nop
sub
add
jno
lock
and
into
fwait
js
pop
repz
and
loopne
xchg
enter
jmp
cmp
cmp
stos
loopne
sub
in
imul
es
fyl2x
enter
aam
into
mov
dec
mov
mov
popf
jl
test
push
enter
xchg
pushf
popa
jne
imul
cmp
iret
fadd
xchg
push
test
cmps
nop
clc
out
pop
mov
test
mov
outs
scas
or
jbe
icebp
mov
xchg
cwde
xchg
sar
movs
cdq
pop
mov
push
fist
fcom
sub
fs
loope
inc
adc
mov
sub
jg
xchg
cld
int
movs
stos
mov
loop
popf
lea
mov
adc
push
rcr
jnp
inc
aad
pop
jp
adc
mov
sub
(bad)
repz
out
mov
shl
dec
inc
out
and
mov
cmp
ins
(bad)
xor
ja
loop
dec
xor
aam
out
test
sar
mov
mov
ja
cwde
mov
sahf
cmps
mov
cs
or
fidiv
lock
and
cmp
mov
nop
mov
mov
ds
int3
dec
mov
push
loop
ins
vfnmsub213pd
ins
repz
iret
(bad)
fisub
and
mov
stos
imul
jbe
mov
mov
and
sub
call
pop
fsubr
adc
cmp
pop
data16
inc
mov
je
jae
dec
mov
int
jns
sbb
mov
mov
cmp
push
lds
or
retf
lods
inc
mov
popf
sbb
and
inc
mov
mov
dec
xor
int
test
dec
ins
dec
or
jge
mov
cmp
std
call
nop
or
mov
mov
add
push
(bad)
adc
sub
cdq
in
jbe
loop
movs
repz
mov
and
pushf
jecxz
sbb
or
jge
xchg
or
xor
push
and
push
inc
(bad)
cmps
popf
mov
jl
mov
or
mov
rcr
push
aaa
and
jae
in
imul
inc
jb
mov
mov
adc
jno
lock
push
pop
mov
mov
and
push
sbb
je
sbb
lahf
cmp
mov
fdivr
dec
jmp
mov
fidiv
popf
clc
pusha
inc
jb
(bad)
sub
ja
cli
(bad)
cmp
mov
mov
icebp
jnp
and
test
jecxz
cld
inc
jno
das
and
test
mov
xchg
mov
sub
(bad)
xchg
mov
add
jp
imul
loopne
sub
xor
clc
int
clc
jle
repnz
dec
pop
aas
lods
mov
test
mov
scas
(bad)
repnz
xor
jge
mov
popf
es
popf
sub
fsubr
rcl
push
mov
xor
xchg
or
cmp
nop
or
aas
lock
fnstsw
cwde
push
pop
jbe
xlat
(bad)
cmc
mov
adc
jo
mov
or
(bad)
mov
scas
or
adc
lods
ja
das
xor
lahf
inc
sub
std
dec
gs
mov
sub
mov
add
int3
leave
jbe
xor
daa
movs
jae
clc
xchg
cdq
sub
in
mov
pop
popa
outs
mov
inc
mov
imul
call
mov
inc
rol
fsub
out
push
pop
pop
cmps
leave
sub
jl
(bad)
sbb
movs
mov
es
and
test
push
loope
push
push
or
in
test
lods
or
add
sbb
push
hlt
dec
mov
and
jo
mov
leave
pop
retf
jmp
xchg
or
lds
mov
adc
rol
les
ror
leave
sbb
(bad)
pop
or
out
adc
inc
arpl
xchg
pop
hlt
pop
arpl
push
dec
mov
test
in
inc
dec
adc
cmp
sar
jne
cmp
dec
jne
and
jbe
aaa
les
mov
ret
fwait
xchg
aam
add
fwait
jge
add
mov
fmul
(bad)
call
dec
xchg
cs
ret
stos
aad
pop
adc
cld
pop
ret
rcl
jg
fldcw
inc
or
in
or
mov
aam
fsubr
es
and
icebp
dec
push
mov
and
dec
inc
lds
outs
xchg
add
mov
push
icebp
xor
push
scas
inc
pop
cmp
test
lods
adc
or
and
jnp
test
sub
scas
add
jbe
lock
ja
stos
popf
repz
mov
iret
xchg
jmp
xchg
and
inc
cld
daa
ss
inc
push
sar
or
in
or
ss
sbb
sbb
xchg
jo
add
test
cmc
test
dec
mov
mov
adc
call
jl
sub
outs
std
xor
pop
arpl
mov
jecxz
ins
pop
push
rcr
sub
sub
aas
add
xor
mov
jp
call
das
in
icebp
daa
stc
push
idiv
jno
xchg
mov
mov
mov
pop
iret
(bad)
sbb
mov
cmp
outs
je
mov
mov
jnp
stos
sub
ret
loopne
iret
imul
mov
sbb
(bad)
push
movs
shl
ret
imul
xchg
pop
out
sub
int
fdiv
cmps
rol
mov
idiv
adc
das
not
mov
inc
ss
lea
jmp
lds
inc
and
das
inc
cmps
xchg
lods
mov
inc
ret
rol
jno
mov
ds
jo
add
or
mov
shl
dec
sub
inc
lods
xor
pop
adc
imul
pop
dec
cli
ret
pop
js
lahf
mov
cdq
mov
loopne
in
inc
push
sbb
xor
fcom
xchg
or
repz
ss
sub
(bad)
call
(bad)
mov
and
call
mov
ss
add
or
inc
mov
dec
pop
out
out
jge
int3
retf
out
inc
not
cmps
mov
cdq
xchg
jmp
mov
sahf
sbb
ror
ret
xor
hlt
pop
cmp
jp
(bad)
mov
sbb
push
stc
jae
xchg
or
dec
xchg
and
cmps
cli
jne
out
sbb
cmps
mov
outs
imul
and
and
aam
cmp
push
lahf
cmp
test
fnstenv
icebp
mov
icebp
(bad)
dec
ret
ret
xchg
inc
ret
inc
cwde
cmc
jne
pusha
inc
xor
fldenv
popa
dec
mov
int
sahf
and
or
cmps
nop
movs
call
sti
pop
or
add
add
mov
scas
(bad)
sti
call
dec
dec
jp
int
dec
pop
push
inc
dec
test
out
xchg
jmp
js
mov
adc
push
push
sar
(bad)
jl
xlat
std
das
test
xchg
outs
push
dec
fst
jns
out
fimul
fsub
shl
xchg
loop
cmp
cmp
dec
sub
jnp
not
jecxz
fbld
lea
fiadd
outs
in
(bad)
pop
cwde
mov
mov
outs
push
mov
daa
sub
inc
(bad)
stc
pop
jo
sub
fld
stc
or
or
in
pop
push
mov
sbb
mov
mov
js
push
inc
xor
cmp
pop
inc
mov
ins
adc
mov
ficomp
push
mov
js
loop
fbld
jno
push
fld
mov
add
(bad)
clc
retf
scas
lods
pop
mov
or
adc
cmps
pop
sbb
out
and
cwde
sub
cmpxchg
jae
out
retf
cmp
(bad)
fild
fwait
out
inc
add
jae
sub
xor
mov
cld
ficom
fsub
enter
add
aaa
stos
cld
in
or
mov
mov
add
ins
std
add
mov
cmp
pop
data16
ror
sbb
stos
push
and
push
out
leave
add
cmp
sub
add
fcomip
xor
loope
inc
mov
xchg
psrld
or
sub
ret
xchg
jne
pop
push
fld
nop
lods
jmp
pop
fst
lods
dec
outs
sbb
dec
push
fist
push
xchg
cmp
mov
push
jge
push
cld
loopne
sbb
sbb
outs
repnz
loope
xchg
ins
arpl
ja
jle
cmp
adc
fwait
mov
sbb
adc
or
dec
lea
inc
mov
xchg
rcl
xor
pop
inc
int
cmp
je
add
mov
popa
xchg
ja
mov
ret
(bad)
in
mov
pop
scas
lds
push
(bad)
pop
movs
cdq
sahf
je
dec
and
xchg
scas
loop
ss
xchg
dec
iret
test
outs
out
inc
dec
outs
push
add
hlt
mov
fldenv
cmp
ins
pop
repnz
mov
cli
in
xor
movs
mov
add
nop
fist
pop
mov
ins
inc
jle
shl
fbld
(bad)
dec
jle
fsub
xchg
push
mov
and
jno
push
mov
pop
shl
mov
(bad)
xor
data16
inc
jnp
loope
jbe
inc
fnsave
ja
jecxz
jp
adc
imul
fisttp
jb
xchg
jae
int
jb
adc
jns
(bad)
movs
xchg
and
sub
cmps
adc
cdq
test
mov
(bad)
and
mov
dec
adc
or
xchg
xchg
cwde
shl
ja
test
cwde
jo
mul
rcr
retf
jg
mov
sub
xchg
dec
aad
push
cli
xchg
xchg
push
sub
(bad)
xor
stc
int
(bad)
mov
add
scas
(bad)
stc
dec
inc
add
xor
ret
ret
jmp
nop
cmp
inc
shl
lahf
cli
retf
ja
push
jnp
mov
mov
pop
adc
mov
es
push
cld
pop
mov
ja
and
and
adc
(bad)
daa
jmp
jge
lods
test
sbb
pop
int3
pop
sub
in
push
xlat
adc
xor
or
rol
cmc
push
icebp
mov
mov
pop
in
jae
mov
pop
and
mov
jne
icebp
jnp
sbb
xchg
and
mov
dec
repnz
je
mov
popa
les
retf
pop
popf
sbb
sub
adc
pop
dec
ins
jl
in
test
ja
ins
sbb
test
jle
(bad)
cmps
ret
jmp
mov
and
pop
aaa
fidiv
and
mov
scas
add
scas
js
(bad)
and
retf
jnp
shl
test
mov
push
adc
mov
or
test
xor
cdq
mov
and
lea
sbb
call
push
fsubrp
jbe
test
in
mov
pop
mov
add
ret
dec
rcr
jbe
icebp
pop
dec
aam
pop
fdivr
mov
aam
add
pop
or
mov
cmp
leave
cwde
mov
popa
retf
pop
dec
pop
ret
sbb
outs
inc
inc
lds
pop
jp
cs
jb
and
dec
sahf
movs
mov
frndint
xchg
sbb
movs
outs
push
mov
xor
sub
inc
mov
and
and
imul
clc
das
push
pop
adc
adc
fs
shr
retf
mov
cld
mov
cmp
call
mov
in
adc
out
out
xor
sub
fucomi
daa
jmp
test
mov
push
clc
and
js
sbb
inc
add
sub
and
cmc
mov
or
adc
leave
sbb
clc
lods
sti
aaa
bts
in
stos
pop
out
or
retf
cli
xor
jp
(bad)
jne
mov
add
stos
fcomp
push
stos
ret
cmp
popa
stc
cmp
mov
inc
rcl
mov
mov
sbb
jmp
das
jecxz
or
xor
outs
mov
xor
pop
mov
retf
push
add
imul
mov
cli
popa
pop
(bad)
dec
add
aad
xor
sbb
gs
push
sbb
cmps
movs
cdq
shl
ret
pop
sbb
lahf
cmps
lods
dec
(bad)
out
and
xchg
dec
or
cs
and
sbb
dec
lock
cmp
jg
cmp
jo
mov
jle
push
ret
sub
cmp
pop
xor
(bad)
in
jmp
ret
loop
imul
jnp
aam
(bad)
xor
push
pop
jnp
mov
not
popf
add
fs
or
stos
scas
add
lahf
xchg
ins
test
inc
sbb
(bad)
pop
jnp
loopne
cs
es
ficom
leave
push
xchg
dec
xor
fs
inc
enter
add
into
xchg
xor
dec
mov
repz
call
div
repz
jecxz
or
inc
jb
add
dec
hlt
xor
add
xchg
stos
clc
cmps
and
mov
dec
fidivr
pop
daa
push
rcl
ret
sahf
add
movs
mov
aam
jp
cs
stos
aad
(bad)
mov
push
xchg
mov
cmp
shl
mov
adc
out
inc
adc
imul
ret
pop
xor
adc
adc
mov
xchg
mov
sub
cmps
cmp
jle
(bad)
cmps
mov
push
cmp
movs
mov
addr16
mov
add
dec
pop
mov
sbb
and
adc
pop
adc
mov
mov
push
cmp
add
inc
or
repnz
push
cld
xchg
push
and
out
sbb
call
push
shr
daa
gs
mov
rol
and
fs
rol
aaa
shl
test
out
adc
es
sub
out
mov
and
mov
and
xor
out
cwde
dec
jg
lahf
dec
jb
xor
mov
fsub
cli
in
or
mov
gs
dec
pop
inc
dec
retf
mov
or
(bad)
jmp
pop
das
cmp
mov
mov
xor
and
sahf
test
lds
sub
jno
sbb
lds
jne
movs
aam
cmp
inc
add
mov
mov
xor
mov
mov
dec
(bad)
out
div
add
ds
js
mov
mov
cdq
imul
pop
les
mov
daa
jmp
scas
es
xlat
xchg
loop
sahf
call
repz
cmp
mov
sub
push
(bad)
stc
sub
push
cmp
test
aaa
mov
xchg
push
add
sbb
ins
push
push
adc
cs
mov
cmps
cdq
dec
retf
jmp
mov
push
mov
xchg
and
test
jae
movs
(bad)
shr
lahf
mov
adc
pop
push
xchg
pushf
inc
jl
clc
inc
std
sub
xchg
call
jmp
fs
mov
int
mov
stos
lods
cmp
inc
pop
aaa
mov
push
ror
(bad)
out
adc
das
aam
dec
jmp
sbb
ins
push
dec
push
pop
mov
jb
dec
jne
aad
or
xor
fdivr
sbb
movs
sbb
adc
xor
mov
cmc
pop
jmp
mov
mov
xor
add
mov
and
pop
mov
adc
mov
stos
inc
cmp
add
sti
sub
sbb
push
movs
push
gs
popa
push
addr16
jecxz
(bad)
lods
iret
dec
std
pop
cdq
or
and
dec
jo
jnp
mov
(bad)
stc
fnstenv
push
inc
push
loopne
or
and
not
das
xchg
jmp
xchg
stos
jne
dec
addr16
inc
mov
adc
add
stos
push
push
iret
inc
int
pop
cld
enter
or
push
aas
dec
pop
(bad)
div
push
inc
xchg
and
addr16
ret
sbb
xor
into
add
pop
cmp
loope
out
retf
in
(bad)
mov
das
jle
xchg
push
jae
js
ret
push
in
fdivr
xor
push
mov
jne
mov
jle
inc
sbb
call
lock
mov
xchg
call
aam
iret
lds
pop
es
pop
shl
retf
jnp
xor
ror
test
jg
adc
rol
retf
fisubr
inc
cmp
dec
out
push
adc
test
(bad)
or
pop
imul
les
cmp
fcmovu
enter
(bad)
popf
pusha
mov
xor
xor
ds
lods
rcl
cmp
les
jmp
mov
div
cmp
jmp
aam
fucomip
and
sub
lea
icebp
jne
and
(bad)
stos
push
aaa
call
fnsave
fcmovne
push
cmp
sbb
push
adc
dec
pushf
lahf
mov
stc
pop
das
add
je
and
mov
push
jo
pop
xchg
push
add
sub
lds
(bad)
sub
int3
dec
shr
popa
daa
xchg
int3
(bad)
shl
or
rcr
cmp
adc
js
inc
dec
repnz
and
out
pop
stc
test
push
sub
xchg
int
dec
xchg
je
or
push
jae
add
cmp
ss
cmp
fcomi
fdiv
sbb
and
aaa
push
mov
push
clc
les
jmp
adc
les
icebp
repnz
icebp
ret
push
cld
int3
add
out
add
retf
(bad)
iret
sbb
inc
xchg
in
les
fnstenv
(bad)
mov
js
jge
jns
sbb
push
inc
dec
xchg
adc
jno
pop
add
popf
xchg
push
mov
(bad)
stc
rcl
int3
jnp
sar
int3
jge
out
mov
ret
mov
repnz
ja
add
jo
push
mov
push
pop
pop
jne
addr16
mov
iret
mov
fwait
sti
repnz
xchg
mov
push
and
push
fs
and
lock
dec
mov
dec
and
cmps
mov
mov
push
movs
es
pop
mov
pop
and
adc
aas
mov
mov
xor
mov
repnz
push
pop
or
pop
push
adc
mov
jmp
shr
shr
pop
out
jns
push
cmps
dec
ds
xor
sbb
call
ins
mul
sbb
or
loope
xor
daa
call
jle
push
(bad)
cmc
adc
(bad)
sbb
std
ins
mov
jl
sub
movs
jne
add
push
jmp
xchg
dec
xor
fs
add
jl
es
and
pop
adc
stos
inc
adc
movs
mov
outs
sub
sbb
sbb
or
xchg
pop
fldcw
sub
cmps
cmc
xchg
jp
retf
adc
cmp
or
jbe
add
jl
pop
cmp
idiv
or
dec
push
aas
and
xchg
in
sbb
ins
lds
xor
(bad)
mov
(bad)
out
mov
push
iret
repnz
aaa
(bad)
std
dec
lods
adc
or
mov
or
sub
icebp
cmp
mov
lock
clc
push
fdivr
add
js
nop
and
jmp
lea
(bad)
lods
js
call
mov
pop
push
jecxz
jbe
aam
out
xchg
cmps
dec
cmp
mov
sti
fstp
pop
pop
mov
fdivr
fst
nop
push
and
(bad)
fdivr
push
bound
and
pop
jl
lahf
imul
sub
icebp
inc
and
or
outs
mov
and
shl
stc
lea
jge
(bad)
mov
mov
sti
jb
dec
dec
mov
sub
imul
jge
(bad)
iret
pop
inc
add
xor
clc
popf
gs
jg
clc
and
add
addr16
xchg
adc
rcl
retf
jecxz
gs
retf
(bad)
adc
outs
ja
cmp
fimul
push
mov
sbb
loop
xchg
pop
(bad)
mov
in
add
adc
inc
jnp
sub
add
adc
int3
add
mov
pop
inc
daa
mov
leave
lds
(bad)
fmul
and
(bad)
sub
adc
and
or
mov
jecxz
cs
or
in
loop
cmc
nop
or
pop
sub
push
aad
jae
adc
sbb
cmp
mov
loop
mov
iret
jne
dec
imul
cli
fcomp
(bad)
pusha
sbb
mov
jmp
jle
mov
(bad)
retf
push
aam
pop
sahf
in
(bad)
fmul
add
stos
aas
and
loop
stos
dec
xchg
pop
imul
jg
(bad)
shl
inc
clc
inc
inc
dec
dec
fs
aaa
sar
jne
push
or
jb
xor
retf
cmps
mov
adc
inc
jnp
fimul
mov
mov
mov
mov
or
mov
and
or
adc
xchg
aad
test
sbb
xchg
and
cmc
mov
ins
dec
sub
inc
adc
imul
xor
inc
dec
or
in
xchg
retf
fcomi
cmp
imul
leave
xchg
js
cmps
cmovne
inc
stos
xor
xchg
jle
push
jbe
outs
pop
std
ins
sbb
inc
pop
pop
not
jecxz
call
push
lods
xlat
outs
test
pop
mov
cmps
mov
es
out
adc
and
jp
shl
push
clc
push
je
mov
jl
jmp
xor
ret
loopne
mov
and
fwait
mov
xchg
ret
and
add
pop
sbb
ins
icebp
jb
les
xchg
inc
adc
push
cs
push
mov
into
fcomip
inc
and
push
cmp
dec
sahf
ds
into
movs
adc
pop
sub
les
inc
cmps
push
inc
xor
mov
sub
inc
test
xchg
imul
test
shr
pop
int
xchg
xor
(bad)
sbb
imul
lods
dec
xchg
push
add
in
push
mov
cmp
ins
js
pop
es
scas
sub
retf
xchg
test
rcl
clc
push
dec
xlat
mov
test
rcl
mov
jns
movs
dec
dec
mov
xchg
les
push
ret
mov
cmp
pop
adc
iret
fcomp
push
xor
push
inc
add
out
sub
test
ins
jbe
div
sbb
sub
inc
cmp
dec
push
outs
outs
mov
pop
mov
out
xchg
out
in
push
pop
adc
call
stc
enter
cmp
lods
hlt
test
sub
(bad)
ret
and
rcr
xor
fiadd
push
js
xor
dec
dec
mov
jnp
ds
daa
xchg
call
out
ds
mov
cmps
and
mov
push
inc
mov
ror
ins
and
hlt
(bad)
(bad)
fistp
pop
or
jnp
hlt
fidivr
bnd
loopne
sbb
stc
adc
not
mov
ja
aaa
mov
xchg
out
jns
aam
fwait
popf
jo
pop
ss
dec
mov
fisub
adc
ds
(bad)
dec
sbb
test
mov
in
(bad)
bound
in
in
nop
dec
xor
dec
or
push
or
inc
mov
jmp
push
hlt
cmp
push
out
adc
(bad)
mov
sbb
rcr
rol
and
xchg
mov
push
fist
rol
push
adc
and
cmc
xchg
test
inc
imul
call
pop
stos
sbb
enter
inc
pop
mov
sti
sbb
jle
mov
daa
add
mov
or
xor
and
cwde
ret
jp
(bad)
cmp
shl
xchg
outs
inc
mov
push
mov
sub
stos
popa
jl
mov
adc
jmp
sti
sub
outs
mov
lods
in
(bad)
mov
pop
mov
dec
jne
enter
movs
gs
out
mov
out
movs
xor
fs
xor
int
mov
xlat
push
rol
sbb
aas
loop
aad
fwait
int3
pop
test
shr
xchg
int3
xchg
sbb
adc
sub
dec
cmp
push
lods
(bad)
fiadd
mov
pop
in
popf
loopne
add
mov
sub
dec
sbb
cmps
push
pop
outs
enter
adc
cmp
push
and
test
mov
adc
inc
call
ror
jae
push
push
loopne
mov
ficom
mov
test
xchg
in
add
push
loopne
popf
scas
test
push
mov
jg
xchg
and
hlt
xchg
cmp
pushf
cmp
dec
retf
out
imul
jl
cmp
mov
cmc
pop
pop
(bad)
xchg
ss
cwde
jle
ins
leave
xchg
popf
in
inc
imul
jl
aam
aam
push
test
addr16
cmps
in
pop
push
aas
add
xlat
pusha
cs
mov
test
pop
or
cmp
pop
repz
cwde
mov
mov
xor
dec
dec
and
xor
sub
cld
shl
hlt
add
rol
or
stc
test
mov
inc
jg
xor
mov
cmp
add
dec
dec
and
cs
mov
adc
sbb
adc
xor
pop
in
cld
(bad)
adc
add
or
lahf
sbb
xor
dec
sub
(bad)
repz
mov
adc
and
aad
iret
cmp
fadd
sub
in
ds
xor
sub
in
hlt
push
dec
sbb
push
imul
xchg
je
call
xor
push
or
sbb
cmc
cmp
in
inc
outs
xchg
loopne
lea
ins
add
mov
int3
jge
pop
enter
and
xor
int3
movs
aad
enter
bound
iret
and
(bad)
scas
xchg
jge
adc
cdq
in
cdq
cmp
lahf
and
loop
and
push
jge
inc
sbb
xchg
adc
call
(bad)
into
xchg
sub
add
aaa
pushf
xchg
cmp
cmp
ror
mov
xor
test
shr
xor
mov
jmp
add
push
inc
xchg
xchg
enter
mov
lds
into
cmps
or
sbb
shr
sub
retf
mov
xchg
in
imul
shl
push
pop
cmp
in
ja
js
inc
popa
sbb
sub
pop
cs
mov
nop
shl
inc
cmc
xchg
xchg
in
mov
clc
sbb
ret
mov
pop
sub
cmc
push
iret
mov
cmps
mul
leave
out
cmp
popa
jecxz
mov
mov
popa
mov
xor
xchg
sbb
and
mov
popf
nop
sbb
jl
xchg
(bad)
pop
pop
inc
sti
lea
lahf
sub
aas
fsub
jmp
and
ds
ins
mov
dec
retf
push
inc
cdq
cmps
call
popa
dec
push
stc
add
dec
pushf
push
dec
pop
fwait
and
test
dec
inc
test
dec
in
push
jae
mov
aas
sbb
out
sub
inc
repnz
dec
jle
cs
mov
mov
xchg
sti
sub
xor
dec
pop
jg
je
mov
sahf
mov
imul
jmp
push
pop
sbb
ins
shl
cli
pop
retf
fisttp
cmp
int3
pop
jbe
retf
jle
sbb
cwde
jne
ret
(bad)
sbb
fadd
bnd
test
jb
mov
rcr
fimul
push
inc
repz
fcomip
mov
cdq
inc
lahf
clc
adc
sub
dec
pop
push
add
(bad)
or
mov
mov
mov
std
mov
mov
xchg
jp
cmp
jns
scas
xchg
and
adc
enter
imul
push
pop
scas
fbld
xor
xor
add
dec
or
dec
gs
jmp
and
repz
retf
jg
dec
sub
mov
call
jmp
mov
shl
and
into
jae
enter
shr
sahf
clc
inc
aaa
int3
mov
arpl
dec
adc
sbb
push
aaa
push
jo
sub
add
rol
pop
push
dec
push
imul
add
ins
push
popa
or
sub
cmp
retf
fst
(bad)
sbb
xor
mov
mov
in
cdq
loope
xchg
push
jnp
pop
rcr
fmul
test
jns
aaa
xor
push
into
int
jno
out
xchg
and
xor
mov
fisubr
in
adc
jl
sub
jmp
push
adc
mov
mov
pop
push
pop
push
ja
inc
dec
clc
test
push
and
lds
sub
pop
outs
cmp
sbb
stos
and
push
mov
movs
lea
pop
jge
lds
popa
sub
movs
jl
das
pop
dec
ss
cld
mov
sbb
kmovw
loop
mov
retf
xchg
dec
sbb
fisubr
mov
mov
xor
cdq
pop
sbb
call
call
jb
nop
pop
mov
mov
push
dec
jp
stc
fcomp
jge
retf
and
sbb
and
das
add
test
push
leave
add
sar
sbb
aad
add
ret
push
repz
adc
ss
lahf
loop
and
inc
loopne
sbb
int3
mov
or
mov
dec
push
out
or
pop
mov
pop
push
cld
clc
stos
push
jmp
aas
imul
addr16
lea
xchg
push
aam
pop
mov
mov
pusha
adc
mov
test
test
mov
mov
sub
jecxz
pusha
xchg
dec
adc
sub
add
add
call
test
repz
adc
stc
and
add
adc
pop
push
xchg
xor
adc
push
jecxz
cmc
sbb
push
mov
dec
add
mov
xchg
inc
hlt
test
fcmove
test
sbb
fadd
stc
(bad)
fsub
scas
ja
outs
lahf
(bad)
mov
cs
test
cmp
iret
dec
jno
ret
lds
xor
or
inc
jbe
jae
dec
add
in
dec
sub
add
out
mov
dec
mov
adc
inc
inc
pop
lods
loop
jecxz
repnz
loope
mov
sub
jle
or
mov
call
loop
jmp
adc
hlt
and
mov
jge
daa
test
rol
call
int
rcl
pushf
(bad)
jmp
inc
sahf
jmp
fs
and
mov
ins
call
jns
jb
call
pusha
jle
repnz
cmp
push
xor
jno
sub
inc
and
jae
sub
lds
cdq
adc
pop
adc
cmp
in
cmp
fld
mov
ins
mov
pop
aad
call
adc
in
loope
or
popf
pushf
nop
fisubr
fdiv
pop
inc
push
xchg
sbb
xchg
(bad)
loop
shr
cmp
xchg
std
mov
(bad)
cli
dec
jge
mov
lds
std
push
push
jmp
cmp
nop
push
ret
ja
nop
add
nop
ja
pop
shl
xchg
jge
(bad)
add
nop
retf
sti
mov
mov
xchg
cld
xor
jb
iret
int
mov
pop
lods
into
cli
aad
jbe
mov
jbe
inc
xchg
cmps
mov
xchg
or
mov
mov
in
arpl
adc
mov
xor
push
retf
cmp
aas
int
les
cli
push
movs
dec
sbb
movs
mov
cwde
sbb
fidivr
jle
or
retf
sbb
stos
shl
aad
jns
mov
inc
and
sbb
dec
popa
mov
stc
scas
push
bnd
mov
dec
adc
xor
lods
xchg
or
lods
jle
mov
jge
jno
dec
sbb
scas
push
sub
and
rcr
lahf
pop
or
sbb
leave
ret
dec
lahf
loope
mov
ficomp
push
add
nop
sbb
adc
sub
add
xchg
and
popf
or
outs
int
call
lock
add
ds
sahf
xchg
ins
mov
rol
pop
leave
div
add
enter
push
repnz
popf
jl
adc
or
mov
(bad)
or
outs
or
cwde
push
adc
in
xchg
and
xor
ror
pop
int3
inc
dec
out
cmp
push
call
call
std
push
xor
cmp
dec
(bad)
mov
add
sbb
sbb
call
push
ja
sub
in
es
lock
ins
call
inc
lea
in
sub
push
daa
xor
push
test
loop
sti
mov
loop
mov
cwde
lods
xlat
scas
jae
ss
gs
(bad)
mov
and
nop
aam
sahf
mov
sbb
xchg
rep
mov
sar
pop
inc
in
mov
inc
enter
dec
jmp
push
arpl
fimul
inc
sbb
xor
dec
add
mov
mov
(bad)
xlat
cmp
adc
xor
mov
repnz
and
cmps
(bad)
mov
xchg
fs
pushf
jecxz
push
ja
sub
shl
loope
mov
shl
outs
fnstenv
push
dec
mov
xlat
(bad)
jle
jecxz
rol
(bad)
(bad)
sub
adc
inc
repnz
loope
mov
push
push
jbe
jnp
loop
pop
sbb
dec
push
cmp
add
loope
aaa
xor
jg
cmp
imul
mov
jecxz
mov
sub
or
in
inc
or
push
xor
clc
push
inc
xchg
add
xchg
mov
nop
cmp
cmc
bound
jb
adc
mov
jmp
sbb
mov
sub
mov
adc
jmp
retf
div
hlt
cmp
inc
dec
out
jnp
ja
aad
xchg
repz
bound
inc
les
and
rcr
mov
dec
nop
push
jno
xor
cld
outs
dec
push
cmc
cld
out
cmps
fisubr
(bad)
cld
ret
aam
jp
icebp
jle
or
js
(bad)
lock
pop
or
jg
mov
or
jae
lahf
popf
(bad)
out
dec
inc
xor
or
mov
ins
loope
int
mov
mov
push
xor
nop
pop
and
xchg
cmp
dec
jmp
inc
dec
(bad)
and
and
into
call
mov
(bad)
cli
out
imul
aaa
push
les
cmp
gs
lahf
ficom
and
mov
test
mov
or
xchg
cmp
inc
stos
aam
icebp
adc
mov
pop
es
and
push
inc
add
hlt
inc
mov
loopne
inc
call
je
and
loopne
and
sub
adc
mov
xor
jge
outs
xor
scas
mov
pop
pop
loop
xor
in
pop
sbb
jno
shl
dec
std
xchg
dec
out
add
and
sti
push
scas
movs
mov
bound
sbb
pop
sub
ss
xchg
sbb
adc
push
xchg
pusha
data16
add
stos
xor
cmps
add
add
clc
pop
(bad)
mov
push
ins
rcl
je
jbe
jo
pushf
sbb
xor
loop
in
idiv
mov
mov
scas
call
imul
pushf
and
sub
xor
pushf
ds
inc
add
setbe
inc
out
pop
mov
mov
add
and
fsub
lods
retf
test
mov
xor
(bad)
add
xor
mov
xchg
sub
(bad)
xchg
dec
mov
push
push
add
cmp
pop
cwde
das
adc
inc
or
jbe
push
shl
rol
xchg
frstor
popa
pop
dec
cmps
cmp
leave
jnp
jmp
push
mov
movs
dec
add
scas
iret
cdq
ror
in
repnz
push
(bad)
xchg
cmps
aas
cwde
mov
stos
mov
pop
in
(bad)
(bad)
fwait
out
inc
and
fcomp
sbb
jo
into
push
cli
stos
mov
add
fsubr
mov
popf
add
xchg
ss
in
ds
js
mov
arpl
adc
xchg
mov
jbe
jge
(bad)
adc
cmp
jecxz
push
dec
push
retf
jne
lock
jmp
mov
xor
sbb
adc
sub
movs
test
shl
jp
cli
push
aad
mov
pop
add
out
test
xor
add
pop
mov
jo
push
in
fisub
mov
(bad)
mov
stc
cmp
pop
test
mov
xchg
add
sub
stc
inc
test
jg
mov
sub
mov
aas
cmp
xor
mov
cmp
mov
inc
xor
sbb
dec
cmp
stos
cmp
daa
cmp
sub
pop
ja
ret
icebp
or
inc
fwait
shr
cs
sub
aaa
rol
int
(bad)
xor
xor
xchg
mov
mov
hlt
imul
daa
jo
jns
mov
xor
call
in
jae
ja
ret
dec
mov
jo
push
dec
out
mov
xchg
pushf
fistp
(bad)
mov
sub
inc
iret
(bad)
xor
sub
or
addr16
xchg
dec
mov
mov
cwde
adc
push
jmp
dec
jo
mov
(bad)
aam
hlt
add
shr
in
adc
jne
jns
gs
pop
in
outs
add
add
pop
push
mov
fstp
scas
cmp
jecxz
dec
(bad)
das
xor
je
das
enter
iret
inc
mov
outs
cmps
aaa
bound
test
je
add
pop
jmp
loopne
call
ficomp
jg
push
call
daa
add
dec
push
popf
inc
mov
inc
or
sub
mov
dec
fs
dec
imul
int3
push
jno
popf
inc
addr16
lea
ja
or
and
xor
sbb
pop
int3
cmc
cwde
pop
cmp
fsubr
pop
and
xchg
(bad)
ficom
lds
pushf
or
xor
cmp
jne
cmp
sbb
push
outs
cdq
inc
cdq
mov
adc
jnp
mov
jg
jnp
movs
pop
xchg
and
push
xchg
pop
mov
add
push
mov
out
lods
and
call
out
in
adc
je
mov
lods
fwait
xor
lock
mov
mov
add
mov
mov
add
cmp
mov
mov
mov
push
(bad)
int
movs
dec
xchg
fisttp
loopne
rcr
rol
or
pop
std
add
xor
pop
pop
inc
scas
dec
jp
mov
(bad)
in
mov
jbe
stc
cmc
mul
pop
xchg
xchg
test
push
pop
push
xchg
or
int
jnp
xchg
lods
aaa
xchg
ds
mov
aad
aas
xchg
sub
mov
stc
scas
fstp
sbb
fld
cmp
inc
(bad)
jmp
in
push
cmc
cmp
loope
(bad)
les
push
shr
push
icebp
push
pop
cmp
mov
(bad)
sar
outs
(bad)
pop
xor
enter
inc
push
movs
jecxz
clc
sub
dec
aaa
icebp
push
pop
pop
and
xor
scas
dec
repnz
pop
mov
push
enter
mov
lea
int3
jle
and
xor
stos
movs
mov
scas
sti
fcmovbe
sbb
lock
ss
lods
enter
imul
push
xor
pop
mov
add
test
inc
ret
(bad)
loopne
inc
mov
mov
loope
or
popf
shr
or
mov
out
mov
out
fwait
pop
cwde
cmp
mov
mov
mov
lock
aad
pop
shr
test
xor
cmps
(bad)
xchg
add
or
jp
pop
jmp
movs
lea
imul
shl
inc
loop
inc
int3
push
adc
sbb
into
leave
mov
(bad)
push
add
pop
stos
or
adc
adc
inc
mov
movs
clc
xor
jg
ja
fidiv
clc
push
sub
fxch
aaa
pop
pop
push
(bad)
clc
jmp
fwait
adc
pop
icebp
push
cs
xchg
push
enter
ins
mov
test
aaa
daa
call
rcr
sbb
cmp
cmp
movs
sbb
hlt
or
(bad)
aaa
int3
ins
jae
xlat
mov
jmp
mov
cmp
mov
push
adc
jno
mov
or
mov
lds
mov
aas
addr16
imul
mov
lea
cmp
mov
sub
mov
shl
push
test
aam
jns
and
retf
xchg
or
mov
ss
ds
leave
jo
mov
enter
rol
sub
cmps
nop
push
dec
(bad)
fist
jno
jns
mov
xchg
adc
cld
fisttp
xor
pop
jmp
jecxz
jbe
fisttp
xor
mov
call
dec
jne
(bad)
aaa
ret
mov
pop
(bad)
dec
ds
movs
shl
icebp
in
lods
shl
dec
dec
ins
xchg
scas
sub
xchg
test
idiv
cmp
adc
adc
inc
retf
jecxz
or
push
jg
pop
test
sti
or
xor
jb
mov
(bad)
and
test
loope
mov
dec
jg
pop
ss
aam
cmp
stos
cli
stos
inc
and
jge
pop
stos
icebp
enter
in
into
inc
aas
dec
cmp
inc
jns
fst
fstp
test
mov
mov
ror
cmp
cmp
jbe
dec
pusha
xor
test
dec
fadd
sbb
icebp
std
dec
movs
in
ja
xchg
ins
mov
lahf
sbb
bound
sahf
cdq
pop
loopne
pop
ficomp
std
sub
add
add
mov
pop
lods
xor
sub
sub
aad
and
(bad)
and
xor
push
clc
and
js
inc
jecxz
xchg
ins
sub
std
loopne
mov
ins
(bad)
xor
leave
in
sub
cdq
inc
test
movs
dec
pop
mov
or
aam
fisub
push
repnz
sbb
cwde
lods
lahf
or
movs
in
inc
nop
push
and
(bad)
dec
inc
fdiv
mov
sbb
into
push
jnp
scas
cs
mov
or
push
sbb
push
push
fld
ret
lods
cwde
(bad)
into
mov
cmp
ds
es
adc
test
ins
add
ins
pop
arpl
pop
xor
fcomip
das
sbb
adc
lods
xchg
mov
jae
popf
cld
dec
div
and
test
lock
jge
mov
leave
call
xor
pushf
push
sahf
sar
ret
aad
push
scas
mov
in
jbe
jp
repnz
pop
jmp
(bad)
test
mov
mov
inc
adc
mov
mov
pop
or
fild
movs
es
cmps
loop
ret
sub
xchg
mov
sar
push
xor
mov
shl
mov
loop
cmp
push
push
ins
pop
sar
rcr
adc
cli
cmp
jle
nop
and
xlat
xor
daa
and
push
ror
aas
ret
dec
xchg
push
jp
cmp
sub
aaa
sub
jns
ret
nop
xchg
mov
scas
and
(bad)
mul
and
xchg
rep
ds
test
data16
mov
jo
not
pop
adc
sbb
ficom
aas
add
shl
outs
data16
cmp
dec
(bad)
repnz
call
push
call
cmp
jg
adc
iret
daa
cmps
fmul
dec
mov
jle
and
ins
leave
ja
enter
mov
add
outs
les
mov
mov
cdq
ja
fst
inc
(bad)
and
and
jnp
mov
pop
jne
dec
mov
(bad)
jge
mov
mov
push
xchg
inc
inc
(bad)
ds
mov
xchg
int3
in
shl
xchg
es
in
outs
and
xchg
out
(bad)
sub
fbstp
cmp
cmps
add
mov
dec
xchg
add
pop
ror
imul
shl
sub
xor
mov
and
mov
imul
fistp
dec
mov
cmp
pushf
pop
popa
je
add
dec
cmp
mov
pop
sub
cmp
or
xor
push
pushf
ficomp
addr16
cmc
scas
jp
jno
xor
inc
lock
jno
popf
dec
dec
mov
mov
call
(bad)
jo
(bad)
and
mov
retf
retf
sub
and
xchg
inc
mov
add
push
cmp
jb
push
push
leave
pushf
push
mov
ds
adc
jb
inc
adc
cmp
es
cmc
outs
data16
adc
lahf
pop
mov
ficomp
mov
xor
sbb
xchg
sahf
adc
rcr
inc
and
out
sbb
xchg
imul
retf
jmp
xchg
jnp
fwait
adc
adc
or
push
(bad)
scas
ss
dec
mov
jge
push
js
(bad)
push
jge
dec
or
prefetcht1
movs
jnp
inc
push
lahf
aad
sub
mov
into
daa
pop
pop
mov
jp
adc
or
ret
iret
call
sbb
cmp
inc
idiv
pop
or
jnp
mov
pusha
xchg
sub
out
push
and
xlat
jle
mov
push
mov
ss
mov
rcr
test
push
popf
icebp
ins
cmp
mov
add
dec
jbe
fcom
xchg
aam
add
sub
cmp
loop
push
je
pop
and
or
xor
jae
push
sub
fsub
lods
jne
js
les
pusha
inc
push
dec
add
mov
retf
mov
(bad)
sub
dec
sbb
ja
stos
jg
loopne
pop
dec
test
ret
shr
test
jp
mov
xchg
das
dec
pop
fiadd
mov
data16
cmp
fstp
mov
and
or
sar
mov
call
mov
test
push
js
and
cmp
sub
cmp
pop
jp
and
lea
aas
aam
ficom
mov
push
mov
hlt
add
pop
test
cld
mov
addr16
mov
sub
xchg
add
mov
rcr
fs
out
and
aaa
loopne
(bad)
outs
aaa
sar
mov
sbb
sub
mov
in
pop
mov
in
lods
push
in
retf
push
mov
or
clc
das
push
retf
imul
in
cmps
jne
ins
dec
in
push
fnsave
stc
push
mov
jl
aad
push
adc
daa
es
popf
sbb
(bad)
jb
and
mov
and
adc
xor
sbb
int3
jne
lods
mov
pop
cmc
pushf
int3
push
loope
sub
test
jnp
push
xlat
(bad)
sbb
or
jmp
sub
mov
mov
scas
jle
inc
sub
lods
fimul
in
jmp
lods
adc
jnp
push
dec
push
sub
scas
jmp
xchg
imul
xchg
inc
jcxz
or
out
rcl
jp
scas
dec
inc
adc
imul
adc
mov
jg
outs
or
or
or
stos
cmp
and
jnp
xchg
retf
and
pop
lock
pop
add
xlat
neg
loopne
fldenv
lock
mov
cld
ret
out
ss
jl
pop
int
add
xchg
jmp
ss
pop
stos
or
bound
(bad)
jmp
and
dec
cs
loop
cmp
hlt
ret
mov
shr
mov
lds
fwait
pop
inc
mov
test
in
jg
arpl
cli
sub
push
dec
pop
xor
sub
mov
shr
push
mov
mov
ins
sahf
retf
je
adc
mov
sbb
les
push
outs
cmc
cdq
mov
retf
outs
imul
test
out
cmp
ds
lahf
or
hlt
push
xchg
mov
ja
add
sub
adc
push
ins
dec
cli
pop
dec
jmp
add
in
loopne
mov
(bad)
loope
leave
jns
mov
fisub
cdq
mov
test
in
sahf
mov
inc
ins
rcl
jb
lods
and
push
dec
xchg
sub
cmp
xor
jmp
pop
loopne
repnz
ror
mov
sbb
stc
(bad)
dec
jns
sahf
mov
jl
jae
(bad)
pushf
dec
iret
sub
jge
out
jnp
in
jo
jae
mov
ret
std
cmovne
push
sbb
out
lods
iret
sub
xchg
inc
jne
sbb
(bad)
fist
xor
sub
mov
push
sub
jecxz
js
push
pop
jns
mov
leave
jge
and
retf
and
outs
lods
aam
pop
jne
cwde
ror
cmps
pop
int
push
sub
cdq
je
or
mov
or
fadd
mov
call
fadd
cmc
mov
sbb
pop
and
loop
xchg
sbb
cvttps2pi
push
shr
pop
mov
adc
cmc
dec
xchg
mov
mov
pop
fadd
xchg
fild
lds
imul
jmp
movs
push
out
inc
je
scas
xchg
sbb
ins
neg
mov
sbb
addr16
and
(bad)
and
xor
cmps
call
es
in
dec
cmp
xchg
xor
addr16
inc
jnp
imul
ret
loopne
lock
cmps
push
ja
call
dec
les
loopne
pop
scas
adc
sub
mov
xor
or
pop
scas
push
into
and
bound
ja
xchg
inc
sar
and
ss
(bad)
pushf
outs
dec
or
cmps
sub
out
call
fmul
mov
sbb
(bad)
shl
xor
iret
mov
mov
mov
xchg
pop
jns
cmp
push
push
xchg
arpl
addr16
jmp
(bad)
sub
xor
sub
hlt
xlat
sbb
push
jg
repz
in
daa
lahf
cmps
fcomp
jbe
(bad)
xor
push
jae
loope
(bad)
cmps
repz
sbb
daa
(bad)
loopne
jbe
or
fisttp
fist
ins
cmp
mov
mov
push
pop
sbb
push
inc
loopne
stos
add
sub
dec
cli
repnz
in
dec
fistp
ds
jle
nop
mov
ret
mov
dec
add
ficomp
sub
aad
xor
cmp
iret
stos
fs
iret
es
or
nop
jle
pop
jl
pusha
mov
and
div
sbb
xor
sub
je
adc
int
mov
(bad)
push
imul
mov
cmp
out
(bad)
lock
and
push
xchg
sub
in
loop
jo
cmp
sahf
sub
mov
pop
ror
inc
mov
mov
mov
push
pop
mov
stc
and
mov
pop
pop
(bad)
std
test
xchg
pop
and
lock
sub
bound
fsub
int3
lahf
jmp
fwait
mov
(bad)
bnd
mov
addr16
pop
call
test
not
ss
into
xor
pop
inc
call
inc
js
psubsw
jbe
mov
jmp
pop
and
mov
enter
add
(bad)
mov
xchg
movs
push
movs
cmp
jns
fwait
aad
sub
push
cwde
jg
fs
stos
mov
fistp
sub
push
push
and
test
inc
adc
adc
mov
int3
and
sub
pop
adc
test
mov
mov
loopne
jmp
ror
lahf
out
or
adc
int
lods
push
adc
mov
in
(bad)
femms
out
dec
sbb
call
stc
pop
(bad)
idiv
mov
(bad)
shr
xchg
into
sub
sub
pop
jge
(bad)
mov
(bad)
mov
inc
jbe
adc
jle
sbb
out
cdq
mov
outs
dec
jecxz
push
jge
mov
push
cmp
push
nop
sahf
cmc
das
ja
xchg
push
mov
imul
adc
jo
xchg
hlt
and
mov
stos
push
push
push
dec
out
in
out
cwde
into
lods
shl
cs
fmulp
and
out
push
mov
in
popa
fcmovne
add
adc
fisttp
call
push
hlt
mov
and
idiv
retf
or
dec
(bad)
cli
shl
inc
xor
mov
jo
mov
xchg
xor
xchg
ja
out
and
xchg
sub
pshufw
out
out
iret
mov
xchg
jmp
push
adc
xor
push
mov
and
mov
sbb
sub
aad
mov
mov
mov
jnp
outs
clc
jg
je
lds
test
jns
sub
pusha
jmp
leave
xor
cmp
jo
(bad)
inc
popf
add
out
pop
or
rcl
cmp
push
aam
daa
inc
pop
mov
jne
jmp
jmp
repz
sbb
out
mov
pop
push
dec
fldcw
sbb
in
scas
push
mov
ret
pop
enter
enter
pushw
cmp
xchg
cmove
inc
lea
int3
xor
mov
inc
stos
test
jmp
imul
mov
popf
jae
fs
jmp
adc
xor
pusha
lahf
pop
add
pusha
mov
outs
add
cmc
pop
add
and
pop
adc
shr
setp
out
idiv
mov
lods
(bad)
push
cmove
inc
adc
push
aad
xchg
jnp
and
mov
inc
add
and
push
mov
jge
xor
mov
shr
cmps
arpl
inc
or
pop
adc
repnz
jbe
or
bound
mov
mov
outs
loopne
jge
cmp
jbe
test
xchg
cmp
test
aad
aas
jno
test
adc
dec
imul
xchg
cli
cmc
dec
loopne
and
mov
addr16
mov
cmps
fwait
(bad)
lds
sub
xchg
cmps
fmul
sar
cwde
aam
cli
add
inc
ss
inc
test
jp
dec
js
xchg
sbb
or
clc
jg
or
test
push
sbb
inc
imul
stc
push
into
fimul
fidivr
inc
xchg
rcl
jmp
jno
push
rcr
gs
arpl
fidiv
add
pop
xor
mov
add
xchg
stos
or
sbb
push
in
sbb
ret
inc
xchg
imul
dec
in
xor
jns
jp
outs
xchg
ins
not
retf
je
fs
ss
retf
(bad)
dec
mov
xchg
mov
mov
xor
arpl
mov
jmp
jnp
popf
cmp
ins
add
(bad)
(bad)
sbb
and
int3
xlat
fsub
data16
ret
scas
cmp
lods
sub
or
pop
bound
mov
and
adc
lock
jns
(bad)
out
ds
in
nop
out
pop
adc
cs
(bad)
mov
or
test
mov
out
add
mov
enter
lock
pop
call
int3
push
push
xchg
outs
pop
xor
fstp
test
das
leave
mov
or
xchg
popf
retf
cmps
jmp
inc
push
xor
mov
js
enter
popa
xor
test
push
cmps
mov
xchg
push
pop
mul
dec
or
data16
or
jge
pop
sbb
lods
in
ret
inc
mov
cmps
adc
xchg
xor
scas
retf
in
jne
pop
adc
imul
sbb
sti
jecxz
add
lock
jge
mov
ja
xor
sbb
pop
sub
xor
pop
mov
repnz
(bad)
mov
cmp
fcmovnb
enter
cmp
ins
sar
cmp
jp
mov
add
int3
push
bnd
adc
xchg
je
test
add
cld
mov
(bad)
push
cmc
sahf
inc
push
mov
jb
dec
push
(bad)
push
in
idiv
call
jno
pop
out
lods
and
xor
and
test
cwde
(bad)
xor
cmp
popw
je
sub
mov
icebp
cmp
or
ret
sub
push
xor
and
nop
lods
add
mov
dec
nop
aas
popf
push
add
jmp
clc
mov
loop
and
or
inc
loope
cmp
mov
in
xchg
cmp
xchg
push
and
movs
fnstenv
js
rcr
mov
loopne
xchg
ss
loop
icebp
inc
sbb
je
inc
sbb
mov
in
xchg
cwde
mov
sbb
verr
dec
aas
adc
add
xchg
aaa
and
jecxz
enter
mov
mov
jge
jbe
jecxz
mov
scas
xchg
sahf
jle
push
mov
fnstsw
icebp
adc
pop
outs
aam
cdq
inc
sub
pushf
dec
pop
mov
pop
cmc
fsub
fcmovu
adc
ror
mov
adc
lods
das
push
dec
(bad)
ret
sbb
data16
clc
inc
dec
mov
pmaxsw
lods
jae
or
cdq
push
repz
pop
cmps
cdq
jb
mov
mov
push
dec
in
std
mov
nop
pop
dec
sbb
adc
out
xor
scas
adc
pushf
test
mov
inc
mov
pop
lock
xor
aas
inc
rcr
jecxz
lahf
sbb
enter
sub
mov
dec
shl
(bad)
frstor
fs
fs
jae
xchg
sbb
push
push
enter
js
test
shl
adc
movs
jmp
cdq
xchg
add
ja
gs
or
mov
shl
lock
mov
sbb
mov
ss
push
add
shr
data16
stos
add
stos
adc
and
(bad)
arpl
adc
add
scas
push
test
mov
push
sbb
cmp
mov
mov
push
loop
sbb
dec
lahf
in
and
loope
imul
pop
mov
sahf
sub
ins
or
mov
int3
aad
push
mov
mov
jp
push
daa
call
xchg
cwde
jle
push
mov
add
cmc
pusha
adc
mov
push
mov
arpl
mov
and
mov
pop
mov
xchg
or
aam
loop
sar
sbb
add
mov
sbb
xor
imul
mov
mul
pop
mov
fiadd
loop
repnz
dec
aaa
add
addr16
pop
test
loopne
(bad)
sar
int
and
add
sub
in
jb
xchg
mov
(bad)
cli
jae
cmp
push
cmp
retf
dec
pushf
xlat
pop
adc
adc
lea
inc
dec
out
fs
mov
push
jmp
cwde
inc
and
jp
jbe
sbb
mov
xchg
mov
popf
nop
std
out
and
mov
add
mov
in
jle
out
jns
push
js
mov
add
cmps
arpl
addr16
mov
sub
push
in
test
mov
loope
mov
jmp
dec
pop
pop
cmp
test
jo
frstpm(287
xchg
and
mov
or
xchg
scas
retf
test
jle
fwait
dec
sets
(bad)
cmps
inc
xabort
stos
mov
inc
jmp
cmp
dec
shl
xchg
mov
xchg
adc
loope
in
fwait
xor
bnd
pop
or
loope
out
push
mov
adc
in
jns
retf
sbb
mov
or
dec
jo
pusha
mov
pushf
bound
and
fwait
les
pop
dec
pop
ror
stos
inc
jmpw
int3
push
leave
pop
fs
push
add
aad
jge
lea
inc
cmp
ret
jmp
xchg
pop
ror
pop
shr
(bad)
outs
adc
(bad)
leave
fwait
xor
repnz
pop
fsub
out
sbb
adc
or
mov
sar
adc
mov
pop
repz
in
out
stos
std
fst
push
mov
jo
neg
scas
mov
sub
into
ret
(bad)
stos
movs
in
xchg
mov
mov
stos
jns
pop
fcmovb
pop
jb
loope
pop
jo
shl
je
lahf
dec
popfw
mov
pop
popf
aam
ret
sub
rol
repz
lds
outs
push
add
mov
xor
hlt
and
push
ins
(bad)
mov
in
inc
shl
fild
clc
sub
or
fldl2t
cmc
sahf
call
jne
pop
sub
add
mov
popf
ds
pusha
push
or
xchg
jmp
sbb
popa
mov
hlt
in
in
aas
cmps
mov
pop
sbb
jno
cmps
dec
enter
int
addr16
and
sbb
add
lods
pop
je
pusha
inc
mov
mov
call
aaa
pop
dec
sub
test
jbe
stc
int
sbb
add
jae
inc
cwde
cmp
aam
jns
stos
cmp
mov
jo
pop
mov
fisub
test
xchg
(bad)
jmp
jl
das
je
adc
arpl
iret
lods
fs
sub
out
push
rol
push
jmp
sbb
paddusw
cdq
xor
xlat
lods
sbb
mov
lahf
and
push
mov
jge
out
mov
xchg
out
push
cmp
int
push
and
add
cli
cli
lods
mov
or
lock
mov
iret
out
pop
push
arpl
dec
inc
or
xchg
jecxz
mov
jae
sbb
outs
test
shl
jl
jb
push
sub
gs
sub
inc
xlat
sub
cmp
and
pop
or
cmp
popa
imul
aaa
out
pop
out
std
fdivr
loope
push
std
xchg
push
cdq
mov
adc
jb
cdq
mov
mov
movs
outs
sub
jne
rcr
or
mov
aad
outs
or
jno
lods
jo
sbb
add
xchg
sub
push
mov
push
adc
out
push
in
and
xchg
jbe
out
fcom
inc
pop
into
add
repz
sbb
mov
in
dec
ins
sub
jp
mov
or
adc
sub
push
sbb
xor
push
out
out
stc
mov
and
push
mov
mov
pop
and
scas
gs
mov
aam
bound
scas
fwait
jle
cmps
aaa
mov
loop
pushf
aad
(bad)
test
stc
(bad)
loopne
xchg
outs
test
sbb
hlt
jmp
xor
ja
mov
cmp
stc
shl
ins
ret
mov
fs
out
cmp
pop
dec
mov
in
cmc
and
mov
dec
mov
mov
cld
in
ret
jns
add
mov
push
jnp
cmp
repz
stos
icebp
xchg
pop
mov
push
jnp
into
push
lods
push
mov
mov
outs
fdiv
mov
clc
jge
stos
and
ja
daa
dec
mov
cmp
mov
test
mov
mov
arpl
aaa
cmp
jge
cli
inc
mov
out
sar
rcr
add
gs
jmp
lahf
xchg
inc
inc
hlt
or
into
xchg
fild
xor
idiv
loopne
ss
in
xchg
adc
ror
add
hlt
sub
xor
iret
sbb
sahf
dec
fst
rcl
into
retf
mov
fisub
adc
push
add
(bad)
jg
add
ins
in
add
rcl
loope
in
(bad)
push
mov
repz
add
fild
xchg
mov
jp
sbb
jo
inc
std
bound
jge
push
push
jnp
pusha
mov
xlat
pushf
sub
mov
jl
loopne
sub
cmp
ret
aas
mov
push
inc
sub
inc
das
popa
pop
sub
popa
jle
xlat
popf
mov
outs
ins
cmp
cmp
sub
inc
cs
(bad)
fsubrp
mov
ror
sub
es
dec
add
cs
xor
retf
mov
test
mov
add
push
leave
mov
pop
pusha
rcl
out
int
jnp
mov
test
out
inc
addr16
leave
and
xor
(bad)
cmp
push
and
jecxz
push
jmp
add
je
dec
aas
lods
loop
pop
push
sti
pop
xchg
ds
xor
pushf
out
call
sbb
hlt
clc
push
sbb
aam
nop
icebp
or
mov
mov
mov
jge
test
add
and
push
jecxz
add
xor
dec
(bad)
pop
mov
inc
popa
mov
iret
idiv
mov
jp
je
aam
scas
js
push
jae
sbb
in
sbb
fadd
daa
out
fwait
in
xor
jg
jnp
or
inc
jb
mul
mov
mov
and
inc
(bad)
shl
pop
gs
fnsave
sbb
(bad)
in
sub
cdq
mov
nop
xor
inc
(bad)
das
cli
mov
and
and
mov
xor
and
fs
out
mov
push
inc
xlat
repnz
(bad)
repz
adc
mov
add
xchg
jns
and
stos
sub
fmul
aam
or
mov
pop
(bad)
out
cmp
das
enter
jg
add
aam
sbb
aad
mov
ds
sub
mov
fiadd
lahf
dec
sbb
mov
jg
int3
daa
mov
movs
ret
cwde
mov
and
jge
in
stos
retf
xchg
sbb
dec
mov
cmp
jo
xchg
push
xor
cwde
jbe
sbb
je
adc
pop
aaa
test
jg
sbb
xor
mov
in
ret
push
push
fst
and
div
std
xor
jg
in
inc
sahf
fist
loop
out
sar
cmp
inc
jae
cmp
or
js
xchg
mov
jmp
push
inc
fidiv
or
mov
fbld
idiv
sub
or
add
or
push
mov
std
or
sub
push
call
inc
pop
outs
scas
ds
or
mov
mov
mov
retf
mov
mov
jp
xor
inc
sub
pop
stos
outs
out
repnz
pop
mov
shl
out
pop
out
sbb
xchg
sbb
leave
jns
adc
cmp
xchg
mov
jmp
adc
mov
test
sahf
mov
popa
movs
das
sbb
lock
lock
add
sub
loope
mov
mov
add
in
shl
jne
mov
mov
pop
test
cmps
out
lods
sbb
mov
push
cdq
test
xchg
push
jbe
inc
push
outs
jno
repnz
fld
je
cmc
xor
mov
mov
lods
dec
or
or
dec
xchg
xor
add
popf
int3
test
shl
xchg
fild
pop
fnstenv
dec
sbb
enter
dec
xchg
imul
pop
add
js
jno
mov
add
push
jmp
aas
sti
enter
jg
test
(bad)
fisttp
into
retf
movs
adc
mov
cmp
je
inc
push
outs
cmp
cld
xor
(bad)
sbb
mov
fcomp
inc
mov
jecxz
fidiv
or
fcom
aaa
or
outs
add
cdq
push
dec
div
mov
mov
push
xor
pop
test
pop
sub
loope
xchg
int3
ins
fstp
in
arpl
test
into
sub
push
std
dec
rcr
xlat
into
sahf
pop
(bad)
jbe
add
jb
pushf
push
shl
cmps
xlat
rcr
loope
cmp
mov
pop
aam
xor
gs
jl
repz
lods
imul
lods
sub
fiadd
movs
mov
xchg
pop
dec
and
xchg
xlat
push
jbe
mov
mov
enter
push
pcmpgtb
push
js
std
jo
stc
jp
ret
int3
dec
or
add
icebp
push
mov
mov
jecxz
imul
out
in
add
lods
mov
jmp
test
test
cmp
dec
mov
xor
(bad)
or
push
mov
mov
in
dec
mov
and
or
fadd
and
out
(bad)
lock
mov
xchg
mov
pop
call
fdiv
jns
xor
or
mov
jns
adc
cmp
fcomp
fild
outs
ss
cmp
lods
popa
fnsave
mov
ror
mov
jge
out
rcr
xchg
test
jno
retf
ja
iret
test
fcomp
fwait
sbb
mov
push
int3
pop
cmp
pop
mov
je
stos
jmp
inc
fbstp
test
repnz
mov
mov
rol
leave
(bad)
jge
in
xor
push
cwde
mov
ins
outs
jecxz
or
fisubr
mov
ss
xchg
fyl2x
mov
add
ror
or
stos
inc
pop
cmp
repnz
or
jae
and
jno
sub
outs
push
pusha
pop
fs
cmp
push
pop
dec
je
fs
or
loop
add
bound
jmp
fstp
in
in
cmp
cmp
das
aad
push
mov
mov
cli
mov
into
jmp
bound
push
jl
pop
dec
icebp
lods
fndisi(8087
bswap
mov
popa
inc
test
jmp
mov
ror
jl
pop
scas
and
fcom
in
inc
mov
push
aad
cs
sbb
imul
ins
mov
mov
sbb
mov
mov
xchg
push
shr
adc
ins
adc
jbe
jge
push
loop
sar
ret
ss
in
dec
mov
sub
push
shl
outs
sar
cmp
dec
cwde
mov
fstp
shl
int
or
es
mov
add
cmps
xor
jb
sub
cmc
xor
lock
jbe
cmp
data16
pop
sbb
push
push
mov
sub
fs
stos
iret
adc
aaa
das
out
daa
adc
retf
movs
adc
test
and
ffree
test
jb
xlat
add
inc
call
push
pop
into
mov
dec
cli
in
jecxz
pop
xchg
shr
add
inc
loopne
jnp
movs
inc
mov
inc
xor
mov
jbe
popa
and
mov
push
fdivr
jb
and
cmc
sbb
sub
jl
add
mov
fidivr
icebp
and
pop
xchg
cld
jl
jb
std
jbe
cli
ret
push
daa
sbb
inc
xor
sbb
push
out
cmp
pop
jae
adc
add
pop
retf
(bad)
imul
push
jae
push
xor
(bad)
ror
push
mov
jg
sbb
sub
xchg
pop
mov
add
cmp
ret
loop
sub
movs
pop
call
lds
(bad)
or
pop
jecxz
imul
mov
mov
fprem
jl
or
add
ins
(bad)
lock
shl
mov
xor
neg
cmp
xor
cmps
jae
jge
cld
fcomp
aaa
cmp
bound
xor
jg
sti
lahf
mov
jg
or
pop
out
xchg
pop
and
adc
js
jb
mov
lods
mov
jg
xor
or
add
sbb
dec
jl
sbb
mov
int3
bound
stos
jmp
in
mov
popa
push
mov
sbb
enter
jae
mov
imul
es
sbb
loope
into
sbb
fstp
into
int3
sub
clc
sub
int
outs
aaa
jnp
add
movs
and
scas
pop
popf
mov
scas
add
fs
inc
adc
or
dec
into
mov
mov
add
and
dec
and
or
cmc
sub
pop
call
aas
dec
cdq
mov
mov
mov
push
out
jge
jle
sub
das
mov
cmp
imul
push
test
push
out
mov
mov
sbb
jns
push
jnp
mov
(bad)
out
stos
xlat
pop
dec
fsubr
cdq
cli
punpckhdq
stc
jmp
mov
inc
cwde
inc
pushf
shl
pop
xchg
mov
or
cwde
inc
out
push
adc
mov
loope
or
stos
js
jmp
pop
out
and
test
pushf
inc
(bad)
rcr
ror
les
es
xchg
lahf
sbb
cmps
out
sbb
jecxz
dec
inc
(bad)
xchg
(bad)
outs
mov
pop
retf
test
sbb
aad
mov
cmp
mov
push
mov
das
mov
fs
aas
mov
add
push
loope
add
aas
inc
pop
sub
inc
je
and
popf
fiadd
fmul
pop
(bad)
dec
mov
jmp
inc
loopne
pextrw
jmp
jmp
mov
out
retf
adc
test
lods
cmp
fld
pop
mov
adc
push
cmc
loope
push
sbb
dec
mov
(bad)
bound
inc
and
scas
and
push
mov
test
mov
fwait
out
inc
aaa
imul
sbb
loope
mov
das
mov
clc
gs
lds
xor
sub
sar
pop
add
ins
pop
not
sar
cdq
pop
jmp
js
xor
movs
int
adc
cmc
call
mov
add
cs
adc
mov
cwde
xchg
jnp
pop
imul
xchg
pop
add
rcr
jg
jl
mov
push
inc
popf
data16
clc
scas
hlt
fistp
rcl
in
mov
push
popa
mov
(bad)
or
lock
push
setnp
xchg
(bad)
iret
cmc
sahf
in
or
leave
pop
mov
(bad)
mov
pop
jp
sub
ror
add
aad
adc
scas
(bad)
retf
mov
dec
adc
call
(bad)
jl
inc
pop
mov
push
fisttp
ficomp
retf
cli
sub
sub
jp
push
or
rol
das
pop
xor
xchg
xchg
aas
mov
enter
fild
test
mov
jmp
sbb
pop
imul
fwait
(bad)
out
dec
stc
or
xchg
iret
mov
or
(bad)
(bad)
push
cmp
call
mov
rcl
icebp
mov
mov
aaa
cmp
in
adc
mov
mov
lea
mov
nop
jmp
sub
mov
in
sbb
(bad)
mov
mov
lods
dec
repnz
in
pop
sub
xchg
xor
pop
inc
or
push
mov
std
icebp
repnz
mov
test
pop
pop
stos
cmp
inc
rcr
adc
sbb
cwde
pushf
push
add
fadd
repnz
cmps
jbe
js
push
shr
mov
loope
pop
aad
or
jmp
ds
movs
cmps
out
push
fild
inc
jg
mov
add
mov
jo
xor
test
dec
mov
sbb
mov
cmps
ss
repz
xchg
add
cmps
mov
lods
test
xchg
cdq
mov
sbb
not
add
or
cmp
pop
or
fnsave
loopne
cmc
push
jae
scas
out
xchg
fnsave
loop
mov
jmp
mov
fst
mov
(bad)
loope
or
imul
dec
scas
lock
and
popa
push
rol
movs
xchg
jp
push
sbb
enter
stc
cwde
sub
sbb
in
cdq
dec
cmp
arpl
test
imul
mov
mov
dec
push
(bad)
rcr
jmp
xor
clc
pop
leave
push
add
sub
xor
repnz
xlat
nop
div
pop
das
icebp
ficomp
xstore-rng
cmps
sub
sbb
test
mov
sub
shl
sar
push
aad
ror
icebp
sub
xchg
mov
sub
mov
fld
mov
cmp
enter
cmp
test
ret
add
dec
sahf
mov
mov
xchg
adc
mov
and
xchg
icebp
repnz
pop
mov
ins
cmp
jg
fnstsw
adc
lods
xchg
fs
ss
xchg
bnd
out
pop
retf
inc
(bad)
cmc
popa
iret
adc
sub
outs
dec
and
push
je
adc
jns
mov
cwde
mov
sbb
jle
cld
pusha
mov
push
ins
jg
jb
add
ins
(bad)
int3
dec
movs
mov
lock
sbb
pop
sub
mov
jns
leave
pop
cwde
xor
xchg
out
jb
ja
ins
shl
and
xchg
ret
mov
test
mov
loope
and
mov
jecxz
push
stos
mov
out
jns
pop
out
cmp
icebp
push
in
adc
push
push
mov
inc
jb
mov
cs
cs
aaa
dec
push
stos
dec
popa
scas
pop
xchg
stc
call
cmps
out
or
pop
ret
and
push
ds
jbe
vmread
dec
gs
pushf
mov
sar
jp
and
mov
ja
scas
or
mov
frstor
add
hlt
cmps
fsub
dec
or
adc
aas
fst
lahf
dec
iret
pop
pop
sbb
movs
stc
xlat
cli
sub
pop
mov
sub
rol
mov
ror
dec
mov
pop
or
jnp
cmp
fidivr
cmp
daa
call
inc
fsub
jg
idiv
pop
mov
int
leave
mov
dec
sbb
add
cli
dec
dec
imul
nop
test
ds
sbb
es
push
cmp
sub
adc
adc
fsubr
xor
mov
outs
and
dec
fmul
out
outs
scas
arpl
fldcw
sar
xchg
scas
js
add
pop
sub
dec
mov
fwait
push
cmps
adc
ds
shl
nop
or
mov
mov
mov
lods
jmp
xchg
fmul
call
jns
test
mov
in
xorps
test
sbb
leave
retf
xor
jecxz
es
lds
pushf
lds
jp
(bad)
stc
fwait
and
outs
das
mov
or
ja
ins
popa
add
ret
dec
es
push
fiadd
(bad)
cmps
pop
xchg
adc
sbb
pop
xchg
sbb
add
or
shl
scas
aas
rol
xor
xchg
sti
repz
imul
mov
dec
xchg
xchg
inc
pop
pop
adc
daa
jb
and
dec
mov
mov
lahf
mov
ins
(bad)
jge
rcr
(bad)
push
rsqrtps
adc
mov
test
push
gs
ins
cld
cwde
xor
sbb
pop
scas
and
les
xor
or
repz
lods
mov
mov
push
ror
adc
daa
xchg
inc
pop
cdq
jno
int3
xchg
icebp
xor
out
(bad)
mov
inc
cwde
in
mov
(bad)
cli
mov
push
outs
out
loopne
out
xchg
aas
cmp
mov
cmp
xor
push
cmc
push
mov
xchg
sbb
leave
mov
add
xchg
add
fs
dec
imul
rol
aaa
jmp
cs
sbb
cmpxchg8b
(bad)
enter
not
inc
es
aam
inc
cmp
push
jg
mov
imul
jb
mov
cmp
in
cmp
cmps
sub
sub
xchg
add
dec
dec
ret
mov
test
in
and
inc
pop
nop
inc
push
scas
xchg
popa
dec
lahf
pop
in
sbb
in
lds
cmp
(bad)
lock
ja
popf
dec
inc
push
jmp
sar
or
shl
push
sbb
add
es
or
lods
cli
jbe
lock
into
xor
pop
dec
popf
pop
cmp
mov
add
imul
(bad)
push
(bad)
in
and
dec
mov
je
sar
fisttp
mov
aas
lods
and
xor
cdq
add
mov
clc
mov
add
lods
xchg
mov
inc
adc
push
jl
(bad)
mov
mov
and
nop
push
(bad)
movs
push
xchg
addr16
call
push
push
push
xchg
fadd
mov
call
add
pop
loope
clc
data16
ds
mov
call
sahf
sbb
(bad)
cmp
retf
fwait
cmps
mov
imul
xchg
push
movs
jge
in
cs
sti
mov
bound
jmp
push
mov
(bad)
push
ja
jle
sub
dec
push
mov
test
push
rol
stc
inc
and
es
test
add
scas
leave
fidivr
xor
ins
push
in
xchg
xchg
mov
cmc
out
push
idiv
push
xchg
hlt
pushf
lea
sti
fimul
call
xchg
nop
daa
fnop
in
inc
jns
bound
or
gs
data16
pop
add
test
push
fisttp
imul
cs
cs
pop
or
aaa
mov
dec
xchg
and
jmp
stc
push
adc
sti
adc
mov
shl
jnp
shl
or
cli
push
and
mov
push
add
pop
push
pop
dec
cwde
xor
dec
xor
enter
xor
add
add
in
imul
xchg
in
xchg
fild
fdivrp
lods
inc
test
cmp
or
push
(bad)
movs
shl
hlt
sub
(bad)
lahf
aas
scas
imul
inc
frstor
pop
sub
rcr
sahf
ss
div
(bad)
rol
and
jmp
xchg
xor
inc
pop
ja
aaa
hlt
adc
pop
and
push
sbb
xor
lods
lds
xor
sbb
test
sar
mov
add
stos
leave
cwde
mov
push
add
(bad)
std
shr
(bad)
retf
pushf
sbb
cld
sub
movs
xchg
xor
ffreep
xchg
mov
std
shl
push
xchg
sti
scas
add
sbb
inc
test
cmp
and
pop
gs
call
and
mov
mov
adc
push
xor
cmp
add
mov
pop
addr16
xchg
(bad)
mov
aas
popf
popf
push
adc
sahf
mov
fsubr
pop
sar
pop
std
(bad)
mov
aaa
xchg
mov
adc
rcl
jbe
jp
jns
mov
js
rol
mov
out
jnp
mov
cmps
lods
stos
(bad)
jle
mov
jno
(bad)
jl
cmp
or
mov
fild
and
mov
cmp
push
ja
or
mov
push
into
xchg
cld
or
mov
push
and
cmp
popa
lods
imul
js
push
movs
iret
ss
outs
and
(bad)
push
pushf
dec
movs
push
inc
xor
pop
pop
lods
int
retf
ror
sbb
adc
add
and
bndldx
call
jno
pop
sub
push
ds
jo
daa
adc
mov
inc
adc
imul
jbe
lock
add
dec
retf
add
jmp
out
and
jmp
cmp
mov
arpl
es
aam
js
bound
xchg
mov
jae
cmp
fmul
dec
rdtsc
sti
addr16
add
xchg
push
xor
aad
mov
aam
adc
sub
(bad)
cmp
movs
sbb
dec
(bad)
xchg
aaa
xchg
or
adc
pop
jge
sbb
loopne
inc
dec
pop
or
add
push
std
pop
push
lea
jne
and
mov
pop
inc
pop
(bad)
in
fsub
mov
add
bswap
hlt
retf
pushf
push
mov
adc
daa
push
hlt
iret
fwait
gs
test
push
and
inc
push
xchg
icebp
movs
fild
add
cmp
imul
outs
mov
mov
aaa
retf
fs
jp
or
add
fs
outs
inc
out
out
jmp
rcl
movs
xchg
cmp
xor
inc
cli
mov
stos
(bad)
pop
mov
lea
push
inc
jle
jge
fstp
xor
mov
js
mov
into
fdivr
rol
or
mov
mov
xchg
pop
daa
nop
(bad)
sar
ja
mov
add
retf
test
push
add
sub
enter
pop
(bad)
pop
and
aas
xchg
sbb
imul
pop
inc
aad
out
push
jne
les
pop
stos
aam
into
aad
sbb
and
(bad)
mov
jae
inc
mov
das
sar
clc
fdivr
dec
out
imul
mov
xchg
push
scas
xchg
ja
cdq
dec
mov
add
and
ins
jae
cmp
xchg
dec
std
and
pop
sbb
sbb
pop
inc
mov
dec
call
iret
shl
sub
dec
out
stos
aad
or
repnz
arpl
lock
xor
and
idiv
cmc
fsub
cmp
pop
aas
dec
xor
push
fidiv
push
push
mov
push
sub
scas
sbb
imul
mov
pop
mov
addr16
in
cdq
(bad)
dec
clc
mov
pushf
ins
mov
aad
std
cmp
je
jae
dec
or
hlt
cmc
add
aaa
mov
push
xchg
leave
adc
mul
xor
pop
stos
jge
ds
(bad)
or
mov
int
inc
or
pusha
push
push
jmp
das
jle
fst
ds
add
ret
push
clc
loopne
js
dec
jno
add
ret
cmp
fnstenv
popf
stos
cld
or
xchg
jp
shl
sti
(bad)
mov
jg
cmp
push
cwde
je
adc
add
lods
(bad)
dec
jb
jb
mov
adc
je
lods
loop
adc
ret
cmps
shl
ret
leave
cmp
add
jo
xor
outs
add
loopne
mov
cmp
cmp
xchg
jno
(bad)
pop
loope
cwde
push
mov
dec
xchg
fdivr
clc
hlt
jmp
dec
jmp
mov
ret
aas
sbb
pushf
retf
mov
cmp
(bad)
sbb
jle
adc
cmp
in
scas
ins
push
das
xchg
push
scas
xor
dec
les
imul
test
lahf
sub
test
lods
in
pop
dec
jge
jae
ror
mov
(bad)
cli
inc
stos
jge
add
gs
jmp
imul
je
cs
jp
addr16
sbb
aam
mov
mov
lock
dec
je
push
xor
retf
(bad)
or
int
push
call
or
inc
and
pop
pop
push
popf
mov
sbb
dec
sbb
jns
loop
fadd
pop
test
adc
and
and
lahf
sub
ffree
mov
push
fstp
into
stc
xchg
movs
stc
je
mov
xchg
inc
aas
xor
(bad)
ins
push
sti
mov
addr16
add
xor
retf
scas
in
sbb
jo
xchg
mov
int
xor
cs
jp
adc
jae
call
mov
clc
aas
fmul
enter
sub
test
sti
fstp
call
xchg
cmp
add
jo
sbb
js
aaa
sub
fidiv
outs
sub
ja
xlat
sbb
test
outs
das
daa
int3
push
pop
dec
mov
cs
push
push
jp
mov
xor
jae
jl
mov
stc
call
les
mov
mov
cmp
stos
in
mov
retf
xor
jo
mov
inc
adc
push
hlt
add
rcl
adc
fucomp
jle
mov
cdq
outs
sbb
cmp
sbb
das
movs
lahf
mov
iret
add
mov
jb
cwde
sbb
dec
jnp
je
inc
push
cli
add
repz
sti
gs
cmc
pop
jg
std
in
mov
cli
arpl
shl
cmps
push
push
cmp
and
loopne
sbb
stos
push
sbb
xor
loope
push
xchg
push
adc
lds
dec
sbb
out
mov
jns
cs
adc
outs
push
je
lahf
scas
repz
fcomp
cmps
sub
loope
mul
sub
not
test
cmc
leave
lds
sub
rcr
out
and
add
movs
inc
stc
sub
jne
jle
push
cmp
sub
sbb
push
jb
or
adc
in
shl
sbb
jmp
sbb
fcom
cwde
inc
dec
loope
clc
imul
and
mov
or
(bad)
dec
fld
pop
mov
adc
scas
scas
into
int
xor
(bad)
div
aam
pop
xchg
in
or
adc
xchg
and
inc
mov
repz
adc
sub
xchg
jl
mov
call
sbb
xor
jmp
mov
lea
push
dec
or
adc
cmp
fs
and
xor
ins
dec
cmp
movs
fucom
fprem
or
and
pop
sti
aas
dec
pop
in
and
cmp
dec
cmps
mov
jo
outs
fsub
loopne
in
and
jae
popa
mov
pop
(bad)
or
lahf
inc
inc
outs
dec
bswap
fiadd
mov
jmp
dec
sub
push
fadd
add
or
cmp
adc
sti
xor
mov
push
jb
inc
mov
lods
js
and
cmp
popf
pop
push
test
cmp
sahf
mov
push
ins
xchg
cmp
add
test
mov
(bad)
push
mov
push
mov
pop
add
(bad)
not
jmp
ins
push
adc
daa
(bad)
fistp
add
cmps
fadd
add
pop
add
ins
test
das
push
or
push
mov
or
push
pop
jmp
or
lods
adc
cmp
rcl
mov
fdivrp
js
out
xor
int
push
aas
mov
(bad)
jmp
xor
push
sub
out
push
mov
jne
xor
xor
pop
cs
or
into
push
xchg
stos
pop
jns
inc
out
outs
test
jo
pusha
add
das
sbb
repz
(bad)
mov
call
xor
fld
in
gs
push
sub
loope
mov
mov
or
add
mov
sbb
lods
outs
ins
adc
mov
out
cmc
fsub
(bad)
jg
or
jecxz
sub
and
cwde
xor
ins
and
pop
scas
adc
cmp
push
(bad)
pop
cmp
fbld
shr
(bad)
cmp
push
mov
in
icebp
test
add
push
and
cdq
call
cmp
push
xor
dec
lods
pop
dec
in
dec
out
mov
cmp
or
(bad)
mov
jbe
in
pop
mov
das
addr16
push
neg
pop
fisub
test
test
cld
scas
ret
cmp
add
outs
xchg
loop
xor
jbe
das
pop
shl
mov
lods
cmp
push
xchg
or
out
scas
fiadd
pop
xchg
fmul
mov
scas
and
imul
lods
aam
add
xchg
push
inc
mov
scas
cld
retf
sub
sahf
xchg
sub
out
das
pop
stc
lods
xor
push
ret
adc
icebp
lods
out
shr
jmp
add
mov
shl
lahf
lahf
cmp
aad
add
outs
or
leave
inc
jae
(bad)
xchg
push
push
lea
in
sub
data16
dec
stc
xor
mov
stos
int3
pop
push
sub
pop
cmp
sbb
push
(bad)
in
xchg
call
in
mov
dec
in
xor
adc
adc
xchg
fwait
push
mov
or
int
in
inc
xchg
pop
outs
mov
fadd
sub
in
inc
jecxz
jle
mov
div
rcr
(bad)
in
push
push
sub
mov
push
adc
sahf
in
fcomp
xlat
jg
push
cli
xor
test
daa
mov
in
xchg
mov
je
lods
outs
push
shl
fdivr
lods
sbb
pushf
cwde
int
ja
sbb
rcr
fcomp
lods
clc
stos
out
or
mov
jge
cwde
out
cs
pop
adc
lahf
test
fldenv
mov
stos
in
pop
pop
ror
push
outs
sbb
xor
imul
fcmovnb
fs
mov
xchg
cmp
cmp
out
pop
add
mov
mov
repnz
or
pop
mov
ficomp
adc
push
(bad)
(bad)
frstor
add
jl
push
mov
pop
int3
pop
stc
in
mov
push
pop
shl
and
shr
jmp
(bad)
pusha
(bad)
mov
mov
xchg
fcom
mov
jnp
push
jmp
and
retf
xor
inc
mov
fistp
cwde
cld
in
shr
xchg
bound
cdq
and
pop
ror
push
xor
xor
add
push
enter
xor
jmp
sub
pusha
jb
inc
jno
rcl
cmp
bound
jne
bt
push
dec
fwait
(bad)
dec
inc
repz
mov
jo
push
push
jge
fcmovnu
iret
(bad)
es
fst
adc
iret
jle
or
test
scas
cmp
mov
or
loop
inc
je
arpl
pop
pop
inc
mov
addr16
shl
push
sbb
shl
push
bound
daa
cmp
push
inc
cmp
sub
sbb
retf
stos
movs
lock
stos
ror
rol
pop
mov
int
cmps
dec
loopne
sbb
(bad)
mov
mov
mov
scas
imul
mov
mov
lods
in
sbb
pop
stos
scas
mov
jmp
(bad)
aad
repz
and
adc
mov
pop
mov
aam
shl
cmp
xor
fidiv
(bad)
cmps
ds
xor
daa
xor
push
dec
and
int3
pop
data16
neg
jnp
inc
dec
ja
test
push
inc
loopne
and
fst
sbb
mov
xchg
loop
in
mov
push
mov
xchg
pop
data16
mov
push
in
repnz
xchg
push
mov
leave
pop
pushf
hlt
div
add
cs
pop
jmp
lahf
in
adc
adc
lods
sti
clc
mov
add
cmp
inc
fstp
pushf
or
cdq
imul
cmp
test
sub
pop
or
in
cmps
mov
fstp
push
sub
add
xchg
add
fistp
sti
jmp
xchg
(bad)
fistp
xchg
adc
outs
jb
jo
je
cmp
push
mov
mov
pop
(bad)
ins
push
sahf
pop
imul
les
or
pop
mov
sar
mov
mov
mov
or
int
dec
sbb
out
(bad)
(bad)
imul
enter
fldenv
into
pop
mov
jge
rcl
push
sub
inc
xchg
xor
mov
inc
xor
mov
imul
int
out
in
and
mov
int
mov
xlat
mov
push
add
(bad)
ror
mov
sub
out
mov
adc
adc
jnp
xor
dec
jp
xlat
je
adc
pop
les
rcl
scas
mov
pop
nop
sbb
(bad)
pop
adc
out
sbb
ins
push
sbb
cdq
sub
pop
inc
mov
sub
(bad)
movs
sub
pop
stc
xchg
add
pop
jl
ret
daa
mov
pop
or
lods
push
add
jecxz
imul
pop
jb
popf
ret
and
ss
sbb
jo
cwde
mov
jecxz
stos
ds
mov
cmp
jl
cmp
lea
rep
aad
iret
inc
pop
push
jmp
sub
mov
push
push
and
sbb
cmp
dec
jmp
ret
and
fadd
mov
in
and
fnstenv
scas
movs
xchg
mov
aaa
and
fiadd
pop
vpaddd
test
adc
mov
pop
loopne
movs
in
push
ss
mov
push
fucomp
aas
pop
pop
adc
in
retf
push
mov
imul
(bad)
and
mov
mov
pop
ins
cli
enter
ret
(bad)
sbb
ret
xchg
mov
stos
sbb
call
push
xor
call
and
loope
xor
imul
dec
sahf
xchg
push
xchg
add
jge
out
ins
adc
or
add
xchg
dec
jb
xor
mov
lds
xor
gs
js
push
inc
mov
cmps
loope
es
scas
inc
xchg
adc
sbb
sbb
lock
pop
pusha
pop
pop
das
cli
or
jl
cmp
push
sbb
ret
mov
mov
loopne
inc
aas
sbb
xor
push
pop
mov
mov
popa
mov
and
or
inc
mov
(bad)
mov
enter
or
jl
cld
mov
and
ret
nop
inc
mov
enter
das
adc
push
cmp
sti
adc
call
ss
nop
out
mov
or
imul
pop
cmp
sub
rol
or
add
in
sub
mov
sbb
lock
jg
push
or
xor
mov
ja
leave
adc
jne
dec
lds
ins
mov
pushf
outs
inc
jb
in
push
adc
mov
inc
data16
dec
rcl
adc
inc
mov
xor
out
test
pop
dec
fisttp
iret
retf
pop
push
mov
out
push
or
lods
pop
adc
dec
icebp
add
les
popw
inc
pop
mov
push
js
pop
pop
pop
mov
retf
sub
mov
inc
add
push
dec
adc
cwde
inc
xlat
xchg
fcmovne
sub
push
jo
cmp
jl
mov
mov
out
dec
push
fwait
cmps
and
int
sub
xchg
dec
or
mov
jge
adc
inc
mov
(bad)
jae
inc
push
(bad)
sbb
cmp
sahf
fs
mov
cmps
mov
add
dec
sub
imul
inc
gs
int3
rcr
sub
push
sahf
adc
xor
fcomi
lods
hlt
jg
xchg
out
jp
mov
mov
(bad)
ret
mov
retf
popa
cmp
xchg
jl
push
rcl
loop
xchg
adc
(bad)
jae
enter
adc
mov
jbe
icebp
shl
pusha
imul
leave
out
jmp
push
push
test
xor
clc
out
adc
repnz
mov
push
xlat
out
mov
lods
add
pop
pop
rcl
lock
(bad)
sti
hlt
test
pushf
push
les
jg
psadbw
aam
jmp
jmp
add
and
leave
sub
or
es
mov
pop
nop
xor
dec
sub
mov
push
inc
and
adc
pop
pop
in
adc
and
mov
cmp
icebp
mov
xor
pop
pop
dec
pop
push
inc
adc
jmp
(bad)
out
push
repnz
add
loopne
xor
mov
int3
lea
push
daa
les
mov
daa
and
out
xchg
(bad)
inc
push
sbb
jmp
data16
sub
icebp
add
cmps
and
and
ins
movs
aaa
loope
aam
mov
shr
push
cmc
fdivr
add
fnstenv
std
sub
cmp
loopne
in
xlat
cvtps2pi
mov
jb
ins
icebp
cmps
mov
repnz
ror
add
repnz
test
(bad)
int
cmp
push
cmp
jg
adc
fnstsw
mov
fild
fnsave
add
stos
aaa
sub
shr
imul
mov
fs
loopne
ficomp
mov
pop
jl
add
scas
pop
mov
inc
out
and
xor
sub
mov
pop
loopne
jecxz
cmps
gs
mov
mov
sub
mov
jge
jmp
sbb
aaa
inc
xchg
or
sbb
mov
(bad)
in
xor
xor
icebp
sbb
adc
in
movs
aas
loopne
push
nop
dec
das
(bad)
mov
sbb
push
sub
inc
and
dec
imul
in
mov
inc
and
loopne
sti
jbe
fidivr
jmp
xchg
add
int
inc
inc
jae
and
mov
cmp
sub
sti
(bad)
sar
mov
jne
cmc
mov
mov
aam
test
adc
lahf
xor
lahf
or
loop
jns
out
test
xor
or
add
pop
(bad)
mov
lea
mov
push
mov
cmp
inc
push
add
inc
aam
jnp
jg
pop
mov
fwait
jbe
int3
ds
jmp
shl
and
push
pop
aam
cmp
iret
or
repz
and
add
mov
jns
stos
jne
lock
and
push
ss
xor
data16
mov
push
ror
mov
adc
pop
and
in
sbb
or
push
arpl
int
and
inc
push
out
in
loop
jae
frstor
or
mov
gs
(bad)
cli
popa
jl
jb
pusha
push
push
xlat
inc
inc
les
call
sti
adc
in
jg
repnz
and
fs
enter
push
cmp
repz
fiadd
rol
cdq
int
inc
(bad)
jg
fst
push
mov
mov
sbb
inc
push
test
push
mov
sub
dec
mov
xchg
mov
sbb
inc
fisttp
pop
adc
rcl
and
pop
test
fwait
leave
adc
arpl
mov
adc
sbb
iret
shl
es
fst
jle
push
hlt
and
shr
adc
(bad)
into
enter
pop
std
mov
and
push
push
dec
add
adc
xchg
ret
mov
sar
(bad)
add
int
clc
stos
mov
aas
inc
stos
sub
enter
sbb
cmp
xchg
mov
add
push
cmp
mov
rcr
pop
xchg
stos
xor
rcl
mov
fadd
push
out
sbb
xchg
int3
std
sbb
adc
xchg
sbb
jb
in
mov
pop
out
or
sub
je
add
rcl
mov
dec
sbb
mov
push
faddp
hlt
adc
je
pop
pop
out
stos
sub
sti
popf
jno
int3
pop
int3
push
mov
cmp
cmp
aas
cmps
shl
mov
dec
popa
imul
mov
scas
adc
fisubr
dec
(bad)
pop
movs
inc
aaa
dec
pop
fdiv
inc
push
shr
push
mov
mov
dec
(bad)
and
or
xor
cmp
jg
push
inc
cmp
xchg
ds
jae
lock
xchg
jl
pop
adc
xor
sub
cmovae
mov
mov
xchg
test
daa
mov
test
push
add
pop
mov
repnz
mov
xor
sbb
mov
or
inc
mov
mov
mov
push
in
dec
cwde
cmps
or
cbw
mov
fcmovne
in
mov
test
or
sbb
push
pmaddwd
mov
imul
mov
mov
jmp
pop
cmps
js
bound
out
dec
aam
dec
sbb
xchg
clc
jae
jecxz
je
xchg
jmp
push
adc
xor
mov
lods
jmp
xchg
fwait
mov
pushf
add
jecxz
shr
ins
mov
js
or
jno
daa
aaa
sar
ret
sub
sbb
xchg
dec
ret
dec
movs
repz
push
or
xchg
dec
pop
cmp
mov
dec
hlt
aad
cmp
aam
xchg
fidiv
adc
fcmovu
xlat
movs
mov
mov
aad
(bad)
bound
ret
xor
cmp
pop
nop
das
popf
push
mov
mov
pusha
inc
adc
jo
push
sbb
xchg
aas
jmp
cmc
cdq
push
push
test
sub
mov
fcomip
jge
hlt
mov
test
inc
daa
mov
leave
inc
push
in
(bad)
dec
jns
mov
jle
and
daa
fisttp
xchg
add
inc
lahf
xchg
cld
adc
test
inc
loope
inc
fist
jmp
pop
jno
dec
sbb
jae
and
xor
dec
cmp
cld
test
and
call
jbe
sub
and
push
dec
inc
xchg
jo
and
xor
lods
lds
lahf
call
mov
xchg
frstor
shr
sbb
call
cmps
cdq
pop
and
rcl
sub
je
sub
adc
adc
add
sbb
add
or
sti
jno
and
and
jge
fisubr
stc
in
dec
jbe
int
pop
and
adc
stos
inc
cmp
test
bswap
jo
and
sub
push
push
popa
xchg
mov
call
in
lea
fcom
fnstenv
(bad)
jl
idiv
shl
call
out
jmp
lds
dec
mov
fucomp
push
test
fld
aad
loopne
ds
stos
pop
aad
jno
and
xchg
les
sahf
test
ret
hlt
(bad)
jg
xchg
inc
xchg
ss
push
lock
xchg
sub
(bad)
cmp
leave
mov
aaa
push
xchg
and
dec
fucomp
mov
mov
mov
lods
sahf
fs
cmp
aas
fnstenv
dec
inc
pop
pop
ret
shr
leave
data16
push
xor
movs
push
in
test
pop
adc
xchg
add
in
mov
add
cmp
pop
bound
lods
mov
imul
aaa
out
cmp
pop
xchg
dec
cmps
les
lods
aaa
inc
dec
xchg
push
(bad)
pop
jp
pop
ds
adc
call
cmp
jmp
and
test
sbb
jecxz
les
and
mov
jae
movs
cmp
adc
jno
pop
ret
or
std
(bad)
mov
push
pop
lea
cmc
mov
je
test
hlt
pop
dec
imul
and
fist
and
push
lea
add
std
add
jle
sub
dec
jge
call
fcmovbe
imul
(bad)
inc
aad
aaa
arpl
shl
push
ret
ins
imul
fild
shl
iret
add
ins
dec
lods
fist
aas
pushf
xor
(bad)
test
cli
xor
mov
and
or
daa
inc
add
(bad)
jl
push
nop
in
pop
in
mov
(bad)
cmc
mov
leave
mov
pop
mov
popa
or
fst
daa
(bad)
jbe
xlat
popf
xchg
adc
jl
push
mov
movs
jmp
neg
fidivr
inc
sub
add
cmp
loope
dec
les
gs
mov
mov
jecxz
mov
fidivr
mov
imul
sub
sub
lds
ds
dec
repnz
push
mov
sbb
or
jnp
test
push
lahf
or
bound
pop
fld
fnstenv
outs
fimul
and
(bad)
sti
xor
adc
(bad)
pmaxub
rol
pop
inc
inc
enter
dec
loop
ret
xchg
jp
jmp
lahf
mov
sti
popa
pop
cmp
mov
mov
pushf
lods
mov
jmp
adc
sar
fadd
pop
pusha
stc
stos
sar
mov
hlt
jmp
xchg
or
dec
xchg
retf
fisub
bound
cmps
icebp
push
cmp
into
push
or
outs
xchg
inc
xchg
hlt
popf
lock
ror
dec
pusha
sub
enter
and
int3
dec
pop
inc
jne
rcl
movs
lea
jecxz
bound
mov
sti
sbb
scas
ror
push
aam
and
add
xchg
aas
mov
or
sbb
inc
int3
test
and
test
enter
mov
sahf
das
mov
rol
or
mov
fistp
and
inc
push
cmps
aam
rol
shr
jp
ds
or
or
or
push
xor
(bad)
mov
cs
test
das
add
pushf
mov
mov
jo
out
cmps
dec
cli
dec
out
call
pop
fstp
and
popf
pop
jns
mul
fwait
and
out
pusha
or
or
sbb
mov
fs
mov
into
jmp
sbb
jge
inc
movs
(bad)
mov
jo
ret
push
dec
mov
fwait
ins
or
not
xor
push
ret
mov
push
mov
out
frstor
jge
aad
and
sub
cmp
icebp
jnp
aaa
mov
inc
jmp
loope
or
daa
outs
cs
je
mov
fwait
retf
pop
or
dec
les
out
lods
mov
outs
fbstp
neg
in
xor
movs
sub
sbb
fbld
jecxz
cwde
sahf
test
jno
shl
push
add
xlat
aas
mov
sub
ja
cmps
scas
mov
push
pop
cdq
sbb
loope
fs
push
sbb
xchg
xchg
sbb
cwde
sahf
jo
inc
sub
mov
xchg
jp
dec
and
loop
cmp
mov
xchg
xor
mov
sub
lea
lods
jno
(bad)
jecxz
xchg
add
xabort
cmp
sub
cmp
mov
das
mov
call
jmp
xor
not
adc
repnz
cmp
dec
mov
cmps
enter
adc
dec
and
lods
sbb
sub
repz
or
(bad)
pushf
dec
xchg
xor
add
ja
xor
adc
dec
add
(bad)
pop
sti
and
jbe
ret
jbe
sbb
leave
lahf
add
mov
cmp
aad
inc
lahf
jmp
loope
ret
pushf
and
fs
fucomp
cmps
into
int3
js
cmp
(bad)
repnz
dec
out
add
cld
ret
mov
push
arpl
imul
push
movs
add
fs
adc
jnp
cmp
ror
cmp
clc
xor
or
jecxz
adc
icebp
inc
repz
cmp
(bad)
loop
xor
out
pop
dec
(bad)
das
mov
add
aas
fsub
push
jecxz
push
es
jo
xchg
jbe
outs
mov
mov
sub
rcl
mov
xlat
cmps
stc
add
sub
jae
add
lea
push
ret
idiv
shl
inc
mov
and
inc
out
or
dec
pop
adc
mov
and
in
mov
stos
fistp
push
pop
fbld
push
rcr
pop
std
nop
cmp
stos
jmp
hlt
inc
or
mov
mov
push
push
stos
jecxz
in
push
and
dec
or
cmp
mov
jnp
xor
fisttp
xlat
jmp
mov
(bad)
sbb
test
shl
push
add
stos
pusha
xlat
ins
xchg
push
inc
je
jmp
mov
frstor
cmc
leave
add
pop
fimul
ror
in
shl
rol
xor
inc
mov
fs
mov
lods
test
test
sub
mov
pop
les
(bad)
ins
dec
mov
jg
inc
lds
mov
addr16
sub
and
push
shr
outs
push
mov
inc
out
sub
retf
lock
pop
nop
mov
xor
outs
ret
mov
push
push
mov
ret
lods
lods
cdq
pop
mov
push
imul
push
pop
mov
push
cmps
or
sbb
inc
out
mov
enter
(bad)
xlat
je
push
push
lods
dec
loope
int3
sub
lods
pop
lahf
push
pop
cmps
ret
sbb
fst
hlt
sbb
imul
loop
inc
fs
rcr
pop
sahf
fwait
jb
stos
cmp
and
pushf
inc
or
nop
stos
xor
or
rcr
(bad)
xor
adc
out
sbb
pushf
xor
push
pop
loop
pop
hlt
sbb
sti
xchg
sub
shl
imul
imul
jg
std
jo
push
stc
ror
ins
stc
mov
stos
xor
sar
push
cmps
sub
in
or
and
mov
and
mov
ret
xchg
jb
push
iret
je
jnp
fnsave
fs
stos
aas
adc
mov
cwde
and
push
data16
jmp
lods
mov
shl
ja
ror
rcr
pop
stos
jp
xor
test
pop
adc
xchg
call
lock
xor
sbb
mov
sbb
dec
push
fsub
mov
aas
leave
or
push
jo
mov
call
retf
xor
fst
push
cmp
cmp
enter
cmc
sub
xchg
cmps
lds
mov
sbb
inc
imul
xchg
xchg
or
jae
aam
(bad)
mov
push
test
cmp
sub
inc
sbb
scas
leave
shl
iret
arpl
push
sub
dec
add
stos
and
cli
inc
std
mov
cli
scas
or
imul
(bad)
adc
mov
mov
sbb
sbb
adc
aaa
xor
pop
cld
dec
add
mov
mov
mov
sub
addr16
outs
je
mov
addr16
push
arpl
jmp
mov
sbb
dec
adc
sbb
sbb
retf
imul
sbb
ret
ds
fucomp
cmp
mov
mov
push
clc
cmc
scas
cli
imul
sub
pushf
xchg
pop
and
mov
popf
lahf
out
rcl
in
cld
test
mov
mov
loope
repz
imul
xor
call
je
(bad)
sub
lods
mov
enter
mov
xchg
ins
ja
(bad)
push
jnp
dec
ss
pushf
stos
mov
pop
popa
inc
mov
adc
xchg
mov
cmp
sub
in
push
icebp
mov
in
popf
xchg
jl
xchg
inc
sahf
ret
xlat
mov
and
pushf
jae
cmc
sti
and
push
xor
pop
js
xor
js
jge
aam
(bad)
ins
pop
pop
outs
test
jmp
dec
das
jge
jg
stos
es
(bad)
scas
retf
cs
mov
cmc
push
jmp
jo
xchg
sbb
mov
imul
rdtsc
aaa
scas
das
mov
sar
ss
xchg
sbb
xchg
mov
xchg
xor
sub
sub
xchg
fiadd
xchg
scas
add
push
cs
ja
cmp
mov
push
dec
jae
or
aad
or
jbe
adc
push
in
mov
das
mov
adc
ins
fisttp
out
jmp
inc
xchg
stos
(bad)
hlt
hlt
jmp
in
dec
adc
out
stc
pop
js
mov
jg
cmp
mov
jnp
push
jl
icebp
jl
cli
imul
jnp
(bad)
pop
les
cld
dec
dec
mov
bnd
(bad)
xor
mov
lahf
push
sub
mov
dec
shl
or
and
adc
jp
iret
fld
xchg
lods
rol
test
add
push
dec
iret
mov
add
cmps
cmp
loope
adc
jmp
fisub
clc
imul
stc
aas
dec
sub
jge
outs
call
(bad)
ja
sub
jnp
ins
or
sahf
push
xchg
cmp
dec
loop
loope
call
mov
cmp
scas
jl
pop
jge
xor
adc
mov
cwde
mov
fisub
or
or
dec
loope
addr16
outs
cwde
sbb
or
jecxz
push
pop
inc
jae
mov
repz
fld
pop
push
pushf
stc
jmp
in
enter
(bad)
out
imul
das
mov
add
sbb
cmps
xlat
push
rcl
and
dec
mov
ss
je
gs
ja
loope
cmovb
(bad)
and
jae
(bad)
pop
cdq
mov
lods
jg
pop
into
cwde
icebp
cdq
jmp
rcl
xor
and
(bad)
and
add
lods
ds
cwde
push
or
cdq
aad
int
and
mov
and
and
dec
sbb
jg
hlt
lock
push
jae
xor
fild
test
idiv
pcmpgtd
adc
add
mov
push
mov
popf
cs
push
arpl
mov
imul
and
mov
sub
add
leave
mov
out
scas
push
and
(bad)
mov
(bad)
jmp
repz
xchg
jmp
emms
pop
push
mov
mov
pop
imul
cmp
sbb
mov
jmp
int
repz
jecxz
mov
adc
aaa
es
jmp
pop
aad
xchg
daa
ins
movs
sub
sbb
xor
mov
jmp
pop
mov
(bad)
inc
sar
xchg
xor
mov
fs
sub
addr16
dec
mov
sbb
sar
mov
(bad)
retf
and
mov
dec
cmp
pop
push
jne
push
push
stc
jne
ds
std
movs
fistp
cmp
aaa
dec
mov
and
mov
sub
xor
mov
mov
into
gs
pop
sub
xor
dec
adc
or
and
es
mov
jns
std
das
shl
das
sub
add
push
dec
stos
inc
mov
fbstp
mov
mov
xchg
hlt
(bad)
adc
ins
add
sub
xchg
ds
adc
or
xor
inc
pop
and
mov
imul
jno
imul
std
dec
cdq
shl
mov
dec
inc
call
fcomp
dec
sbb
jp
or
mov
jp
or
shr
cwde
mov
inc
aad
pop
out
test
jns
and
popf
mov
dec
add
mov
sub
icebp
mov
xor
leave
cs
bound
jle
jns
cwde
jge
frstor
lods
test
pop
popf
push
lahf
mov
xor
jg
adc
cmp
mov
test
jg
aas
xor
jbe
mov
add
dec
sbb
cmp
pop
sti
inc
icebp
ins
gs
outs
push
call
mov
in
mov
pusha
lods
loope
mov
cs
sbb
and
dec
aad
cs
inc
cmp
outs
in
sbb
cmp
and
test
dec
xor
cmp
mov
mov
stc
cmp
sub
pusha
inc
mov
cmp
aad
shr
and
xchg
push
dec
aam
mov
(bad)
test
outs
movs
dec
sbb
lds
std
cwde
sbb
out
xchg
jae
xchg
adc
lds
enter
mov
mov
aaa
jnp
movs
push
cdq
fdivr
mov
jbe
int3
adc
cli
(bad)
out
pop
jge
stos
std
pop
xor
xor
shr
mov
retf
aaa
jnp
cmc
shr
(bad)
jg
cmp
cs
div
mov
cmps
mov
adc
out
mov
adc
xor
mov
iret
addr16
lds
lods
xchg
push
test
and
pusha
mov
jmp
dec
aas
push
pop
mov
enter
mov
and
les
and
out
aaa
cmc
and
add
aam
mov
jge
jecxz
add
mov
or
imul
mov
xchg
js
pop
and
inc
daa
pop
enter
jmp
mov
sar
push
push
outs
in
outs
inc
jno
movs
add
pop
sbb
jecxz
mov
inc
cmp
sub
dec
daa
lea
mov
fdiv
mov
jmp
or
or
xchg
or
int
or
sbb
and
out
lods
push
pop
adc
jl
retf
icebp
sub
mov
xor
loope
gs
dec
sub
pop
cld
imul
inc
mov
sbb
not
icebp
fsubr
push
mov
nop
es
jne
xchg
mov
xor
push
rol
outs
out
mov
pop
and
jns
jo
and
ror
loopne
fbld
inc
sahf
or
adc
xchg
pop
movs
sbb
test
jge
mov
mov
add
dec
mov
mov
call
dec
fdivr
imul
fisub
mov
cs
mov
sahf
xchg
mov
mov
mov
fld
pusha
mov
jmp
dec
(bad)
push
es
ins
push
adc
mov
aaa
pop
aad
adc
pop
and
loopne
retf
scas
push
push
out
sbb
sbb
xchg
mov
ss
rol
js
jecxz
jae
jp
mov
xchg
test
shl
and
jae
(bad)
dec
outs
xchg
imul
popa
sub
int3
pop
mov
call
out
mov
and
in
daa
cmp
jbe
rol
xchg
mov
daa
xchg
or
push
and
in
push
jb
in
ins
pop
push
add
ins
xor
sahf
jmp
add
push
in
das
and
retf
xlat
adc
cmp
jb
fisub
cmp
aad
sub
in
dec
add
mov
sbb
mov
cmp
xor
sbb
dec
jle
jge
dec
and
xchg
dec
or
in
inc
sub
mov
retf
cli
inc
add
lods
shl
mov
in
inc
out
fucomi
mov
mov
lock
mov
sub
imul
inc
xchg
adc
lea
cli
add
fisttp
pop
rcr
sbb
iret
xchg
inc
push
sub
or
inc
pop
lock
fisttp
out
test
sub
stos
jmp
mov
cdq
fwait
jge
adc
sbb
icebp
fidivr
dec
mov
xor
push
aad
(bad)
inc
fs
push
mov
cwde
jg
fs
xchg
jbe
pusha
ja
dec
ss
jne
aad
enter
nop
jle
dec
out
push
lods
cmp
fst
int
dec
and
je
jmp
lods
mov
fdivr
jg
retf
dec
dec
in
(bad)
dec
jbe
or
or
or
ja
(bad)
(bad)
mov
shr
clc
bound
call
call
loop
cmp
add
rol
cwde
inc
sbb
int
adc
aad
cmps
ins
not
sbb
cmps
inc
adc
ss
movs
stos
mov
enter
mov
dec
fmul
sbb
les
cmp
push
or
xor
dec
out
jbe
jmp
cwde
jg
shr
dec
mov
push
ss
clc
push
cmps
nop
std
mov
pop
xchg
push
lods
cld
mov
xchg
mov
and
int3
sub
add
out
les
or
pop
sar
add
out
add
push
pop
fld
adc
lods
sub
or
add
nop
push
jl
les
nop
pop
aaa
xchg
std
cli
shl
fs
cmp
out
mov
xlat
repz
stos
sbb
inc
rcr
in
inc
jmp
(bad)
lock
mov
or
arpl
frstor
lock
xor
mov
push
mov
mov
adc
loope
xlat
and
pop
(bad)
ins
daa
xor
scas
cmc
inc
cmp
cwde
inc
hlt
mov
scas
into
popa
xor
push
mov
dec
cli
pushaw
loope
sbb
sbb
push
imul
fdivr
xchg
fs
scas
pop
jns
ffree
addr16
outs
in
outs
pop
xchg
stos
dec
and
sbb
or
cmps
cld
and
and
pop
(bad)
cmp
gs
jge
fbld
mov
add
jmp
loopne
add
sahf
shr
out
retf
outs
sbb
pop
jg
(bad)
cmp
xor
dec
pushf
sbb
pop
(bad)
fwait
push
inc
xchg
jmp
and
jmp
jmp
push
xor
mov
scas
sub
rcl
lock
sub
push
lods
sub
movs
aaa
jno
sti
repnz
sub
or
sub
add
cmps
(bad)
bound
sub
xor
je
jl
cmp
mov
pop
mov
in
nop
ss
mov
(bad)
out
xchg
mov
pushf
cmp
or
loopne
pop
scas
in
outs
into
in
add
call
into
addr16
pop
fnsave
fadd
loope
icebp
imul
push
jb
and
jae
jg
retf
gs
add
test
xor
cmps
stos
xlat
cdq
cwde
and
fstp
(bad)
test
push
add
xchg
lods
call
jb
inc
sub
and
nop
mov
sbb
xchg
xchg
mov
inc
push
(bad)
aas
out
mov
inc
clc
scas
js
aam
retf
mov
push
jle
cmp
mov
sbb
and
xor
sbb
mov
jb
ret
cmp
sub
xchg
test
adc
gs
int3
jae
sbb
jg
xchg
das
call
outs
es
addr16
ja
push
and
and
pop
loope
jge
dec
stos
pop
xor
iret
cmc
arpl
push
xor
ffree
std
push
ja
les
(bad)
call
loop
pop
cld
es
leave
mov
sub
imul
leave
xlat
inc
add
xor
test
mov
retf
aam
pop
or
or
pop
jno
mov
xor
sbb
inc
shr
mov
mov
pop
mov
fidivr
cmp
mov
jle
in
gs
adc
cmps
push
stc
in
shl
push
in
(bad)
xchg
scas
mov
scas
shr
std
xlat
test
out
int3
mov
add
xor
pusha
shr
fisubr
mov
enter
inc
mov
jno
call
mov
add
and
icebp
xchg
xor
sub
inc
fdivp
jno
repnz
xor
jp
std
mov
sub
add
fnsave
mov
data16
cmp
inc
jmp
push
in
movs
dec
add
dec
add
std
sbb
jnp
aam
fiadd
mov
xor
sub
add
xchg
fwait
add
jae
cmp
or
rcl
stos
adc
aas
mov
lods
or
fnsave
push
shl
in
in
inc
shl
inc
and
cdq
dec
xchg
ss
add
inc
push
sar
mov
pushaw
(bad)
pop
mov
inc
mov
cli
push
xlat
fnstcw
mov
ret
loope
jp
push
stc
push
outs
in
or
and
mov
jle
sbb
mov
es
stos
out
movs
sub
mov
cmp
bound
pop
pusha
xor
es
or
test
fmul
mov
xchg
mov
movs
pop
imul
add
cmp
ss
cmc
and
adc
mov
(bad)
xor
jl
dec
cmps
sub
xor
cmp
std
inc
pop
sub
call
mov
rcr
loop
in
jmp
push
push
fimul
sbb
in
movd
adc
sub
jno
loope
cmp
pop
mov
jnp
xchg
imul
call
xchg
add
sub
and
pop
hlt
mov
loopne
in
test
xor
xchg
and
jl
mov
cmc
inc
popa
hlt
addr16
cwde
mov
cwde
call
adc
in
mov
or
jo
fst
stc
aas
in
pop
adc
aad
pop
ror
jne
mov
data16
jmp
(bad)
push
outs
fs
cmps
in
jge
xor
jnp
(bad)
lods
sti
cmp
fisubr
ds
mov
jno
iret
add
das
jmp
ret
outs
hlt
jmp
sub
jg
mov
mov
aam
and
cmp
pop
retf
pop
jl
in
dec
inc
push
dec
xchg
shr
xor
call
mov
adc
cmp
dec
sbb
xor
adc
outs
mov
ficomp
pop
add
rol
mov
adc
(bad)
in
into
out
ret
adc
fidiv
(bad)
popf
mov
les
push
bound
(bad)
push
int3
imul
xchg
xchg
repz
ss
xchg
dec
or
xor
push
or
xor
xchg
call
retf
popa
jo
inc
push
pop
xlat
imul
inc
pop
es
mov
loope
or
xor
push
das
je
pop
add
add
cmp
xor
mov
and
in
jmp
out
call
jns
mov
lds
imul
pusha
jmp
outs
mov
retf
or
or
dec
and
inc
in
mov
call
in
(bad)
in
hlt
dec
cdq
cmps
sbb
pop
outs
ins
aas
dec
dec
mov
sbb
popf
cmps
sub
repz
fld
xchg
inc
out
push
or
lods
dec
fdivr
pop
(bad)
cmp
sbb
rcr
loopne
sub
sub
(bad)
stc
push
cmps
cs
pop
xor
or
into
loop
dec
mov
pop
lea
jg
sbb
aad
adc
retf
jge
mov
sub
dec
retf
push
or
test
sub
mov
jge
mov
jo
enter
inc
test
mov
mov
push
sti
xor
scas
push
imul
dec
outs
scas
cld
sti
cmp
jl
jl
pop
or
ret
push
sbb
hlt
pop
add
stc
shl
ds
push
jne
sbb
or
pop
mov
imul
cmp
ins
mov
inc
ror
(bad)
pop
in
sub
sub
sbb
outs
jecxz
push
cli
push
cmps
cmp
push
jmp
lahf
adc
and
dec
sbb
ins
inc
test
inc
inc
mov
sbb
and
std
and
int
leave
les
dec
jb
stc
add
xchg
jae
dec
pop
shl
bnd
mov
mov
pop
xchg
lock
sahf
cld
or
jae
or
repnz
ss
dec
aas
jne
jmp
xchg
shl
lds
mov
into
xchg
dec
pop
mov
fdiv
xchg
sbb
add
clc
outs
and
out
(bad)
loop
scas
sbb
push
xor
lahf
retf
push
cmps
aad
ins
mov
jge
lahf
in
(bad)
call
fxch
inc
push
xchg
dec
pop
push
push
icebp
dec
sbb
outs
sub
and
nop
test
or
repnz
pop
or
push
leave
stc
ret
mov
xchg
into
sbb
into
clc
mov
fist
add
mov
dec
in
out
scas
ins
xchg
js
not
rol
cmp
lods
adc
aas
xchg
sahf
push
and
jp
cmc
sbb
nop
cmc
cli
jnp
rol
cmps
cld
inc
pop
lea
push
cmp
jb
push
pop
push
mov
fs
call
movs
imul
inc
pop
aad
pop
mov
xchg
loope
hlt
dec
add
ja
fdivp
stos
in
out
pushf
cmp
jns
push
sub
out
loopne
xor
outs
ja
in
ret
les
stos
in
in
cmp
adc
push
xlat
aas
add
in
pop
movs
push
ret
sahf
in
lea
ins
cmc
xor
pop
xchg
pop
xor
mov
movs
fdivr
jno
sar
xor
or
lea
jb
jecxz
mov
push
lods
popa
cli
dec
sar
mov
jns
repz
pop
(bad)
movs
cmp
and
test
fmul
mov
push
and
sar
shl
inc
neg
js
in
fcom
mov
in
and
and
sbb
push
sbb
shr
cwde
lods
mov
xchg
adc
loopne
pop
mov
pop
std
xchg
push
stc
outs
jnp
dec
loope
pop
dec
std
jg
ins
in
sahf
in
in
dec
xchg
loop
aam
out
in
mov
mov
inc
inc
das
dec
or
push
in
pop
mov
xchg
xlat
push
jns
ret
dec
outs
les
fimul
push
icebp
push
ret
mov
inc
mov
add
pop
push
xchg
mov
jno
gs
lods
inc
enter
xchg
cmp
test
popa
sbb
std
ins
sti
dec
or
(bad)
hlt
cmp
xor
mov
add
or
jne
mov
mov
xor
xchg
inc
in
mov
jns
xor
imul
mov
cmc
sub
inc
pop
pop
mov
call
mov
ror
fst
push
xor
mov
adc
pusha
ja
dec
push
mov
jmp
fwait
and
jae
mov
and
cld
les
push
push
mov
pop
xchg
sub
out
(bad)
in
ins
outs
push
mov
xchg
adc
mov
imul
add
in
mov
dec
push
addr16
push
aad
movs
scas
jbe
jp
outs
xor
mov
pop
lods
push
sbb
jmp
(bad)
fimul
repnz
xchg
inc
and
sti
xor
dec
scas
pop
xchg
mov
aaa
pop
pushf
or
mov
outs
mov
mov
sub
mov
fsubr
xchg
(bad)
pop
in
ds
bound
cmc
xor
inc
dec
(bad)
pop
and
and
push
fadd
push
movs
call
cmp
sub
add
ins
sbb
xchg
test
and
popf
push
push
int
ficomp
jmp
pop
mov
cmc
test
add
jmp
fwait
movs
cld
dec
pusha
das
xchg
popa
adc
adc
jns
mov
pop
scas
sub
outs
mov
rcr
push
shl
ror
frstor
xor
(bad)
hlt
ror
mov
outs
push
mov
ds
jnp
sub
fld
push
(bad)
cmp
and
add
daa
stc
nop
or
clc
aad
stos
push
out
xor
dec
pop
xor
jmp
jl
scas
dec
(bad)
jnp
xchg
mov
sar
push
push
mov
jno
imul
shl
xchg
sub
xlat
rcl
adc
in
js
cmp
loopne
(bad)
mov
ja
js
pop
jmp
cwde
mov
or
or
ins
xor
les
mov
fs
fwait
push
mov
adc
xchg
xor
lock
cwde
mov
jbe
mov
test
push
inc
dec
adc
(bad)
jge
(bad)
cmp
mov
out
inc
inc
pop
and
adc
je
mov
scas
and
jnp
cld
enter
push
sbb
loop
fbstp
rol
js
repz
jo
dec
sub
cmp
(bad)
gs
sbb
adc
rcl
sbb
sbb
ss
xor
(bad)
out
pop
and
cmp
fidiv
xor
es
jns
sbb
sbb
push
daa
fisubr
xor
imul
push
add
dec
shl
jno
xchg
lods
mov
xchg
ret
add
mov
pop
in
scas
inc
out
lock
cld
pusha
mov
mov
and
push
sbb
adc
mov
mov
(bad)
cmps
int
data16
lods
pop
ss
xchg
push
(bad)
bound
shl
ret
add
inc
jno
pushf
pop
mov
pop
loop
ret
and
test
call
push
mov
iret
arpl
add
test
cmps
sbb
popf
ret
pop
sbb
cmps
stos
inc
and
outs
dec
ja
test
hlt
lahf
ficom
lods
ss
je
fucom
dec
ror
jbe
jp
push
not
fidiv
popa
or
sbb
leave
sbb
cmp
and
push
icebp
pusha
lea
cmps
mov
fbld
mov
ins
mov
xchg
push
add
mov
les
hlt
test
sub
retf
jge
pop
lds
cmps
sbb
xchg
cwde
sbb
or
sub
ret
mov
scas
pop
adc
movs
dec
cmp
lock
sti
rcl
pop
jae
push
cli
xchg
mov
test
or
inc
cwde
cs
ss
sub
repnz
aad
into
mov
adc
push
je
neg
cwde
xor
mov
push
mov
mov
nop
pop
in
mov
or
cmp
out
lock
icebp
push
(bad)
push
mov
std
xchg
mov
ss
push
xchg
inc
push
mov
in
pushf
jae
repnz
mov
neg
adc
mov
push
imul
stos
push
retf
or
dec
cmp
add
mov
ret
rcr
test
jl
cmp
add
pusha
mov
aaa
sub
ficom
xor
pushf
sbb
out
or
pop
pop
(bad)
xor
sbb
in
in
popf
sub
xchg
push
in
mov
ja
mov
(bad)
fcmovbe
inc
lds
in
push
xor
ins
sahf
or
shl
sbb
pop
cmp
fwait
lock
in
shr
pop
outs
pop
aam
add
clc
jbe
pop
popf
push
(bad)
ja
jle
popa
stos
gs
movs
mov
rcl
mov
sub
jmp
xor
xor
mov
ffreep
mov
int
mov
xchg
mov
xor
push
inc
lock
mov
imul
call
sar
mov
jae
dec
mov
(bad)
iret
push
xor
mov
ins
mov
repnz
adc
cdq
pop
cld
ins
mov
test
mov
nop
ss
sbb
mov
adc
scas
sar
mov
(bad)
jmp
jne
outs
mov
inc
adc
push
fmul
mov
pop
std
add
hlt
xor
scas
mov
into
or
mov
pop
add
das
mov
sbb
xor
cwde
mov
sti
push
(bad)
fidiv
jmp
push
xchg
mov
pop
pop
mov
pop
ror
enter
cld
xchg
clc
adc
jo
push
cdq
imul
jecxz
sti
dec
jge
lea
ficomp
nop
je
jge
mov
jmp
pop
mov
fnstcw
stc
xchg
stos
loop
pop
outs
mov
test
jecxz
leave
cmp
jg
push
gs
aam
push
xor
push
les
inc
das
retf
adc
ror
(bad)
mov
mov
fwait
mov
mov
(bad)
dec
in
mov
push
repz
push
pop
aad
and
adc
imul
movs
test
call
or
dec
adc
cmp
outs
call
and
xchg
js
mov
ds
out
js
mov
mov
dec
imul
jp
mov
cmp
jae
lock
cwde
mov
xchg
inc
cmc
clc
dec
shl
or
ins
add
sub
int3
mov
sti
fimul
fdivr
repz
in
scas
inc
ret
inc
idiv
mov
inc
int3
mov
stos
aam
sub
mov
add
in
in
dec
ja
vandnps
sbb
dec
inc
mov
dec
fwait
push
dec
sbb
(bad)
pop
add
outs
cs
pop
mov
xor
fst
adc
mul
jbe
test
inc
test
pop
cli
and
pushf
into
and
cdq
xor
(bad)
sbb
mov
leave
jbe
adc
cmps
pop
sbb
jbe
and
mov
rcl
mov
in
scas
aad
retf
mov
sub
in
mov
mov
call
jnp
test
shr
cwde
cmp
mov
scas
xor
sbb
mov
sbb
mov
out
stos
cmc
add
lods
js
arpl
adc
lds
xchg
test
push
popf
adc
hlt
mov
sub
movs
(bad)
xor
xor
push
mov
fwait
popf
lods
retf
adc
mov
(bad)
sbb
out
jecxz
jl
mov
pop
das
cmps
mov
neg
test
inc
outs
fcmovnu
mov
repnz
(bad)
sti
inc
mul
test
or
xchg
xchg
xor
inc
xchg
pop
mov
lds
jae
call
sbb
jg
xchg
das
movs
push
adc
push
mov
pop
fistp
lea
jo
(bad)
xor
adc
js
(bad)
hlt
xor
retf
pop
(bad)
not
xchg
mov
lock
mov
adc
out
push
pop
out
xor
xor
ds
test
dec
mov
scas
in
mov
jno
pop
adc
das
add
lea
ss
jle
das
aad
jns
nop
into
pop
dec
nop
fdiv
mov
inc
mov
gs
xor
addr16
pop
frstor
mov
ins
int
push
int3
jb
add
xchg
sbb
pop
mov
xchg
ja
pop
jp
xchg
and
mov
mov
sub
xchg
and
popf
aas
sbb
outs
outs
ror
sbb
shr
jmp
retf
repz
enter
sub
dec
mov
xlat
pop
(bad)
xchg
retf
adc
push
arpl
pop
in
lds
loope
and
call
fnstsw
pop
bsf
cmp
sub
mov
out
sbb
rol
cld
cmp
scas
sbb
imul
repz
stos
adc
or
sar
cmp
pusha
sub
das
sbb
(bad)
jns
lea
ins
mov
repz
jae
xchg
mov
mov
mov
xchg
xchg
push
lahf
cli
pop
daa
mov
(bad)
dec
jmp
push
dec
push
push
data16
lea
stos
pop
daa
xor
mov
ret
lock
pop
aam
push
add
mov
mov
and
mov
mov
icebp
jl
push
and
(bad)
sub
jo
daa
or
pop
ds
ror
mov
sub
dec
jae
popa
dec
popa
nop
jge
les
out
mov
xchg
xor
add
(bad)
sub
mov
mov
jbe
mov
adc
std
xchg
packsswb
sbb
dec
retf
das
mov
adc
loopne
xor
ins
dec
scas
cld
cmp
push
std
push
fwait
xchg
fxtract
and
inc
(bad)
push
ror
mov
xchg
cmp
adc
cmp
xchg
xchg
mov
or
mov
fcmove
(bad)
cwde
add
(bad)
push
mov
xchg
xchg
lahf
repnz
inc
test
sbb
mov
(bad)
or
addr16
and
ds
aas
mov
movs
cmps
cli
scas
sti
and
loopne
xchg
call
jecxz
in
pop
mov
sub
add
sbb
daa
jle
mov
fwait
imul
xchg
push
in
xor
in
cld
push
push
shl
inc
adc
jbe
and
jne
mov
sbb
pop
jp
dec
ror
ins
gs
rol
sbb
add
lods
cwde
lods
fistp
xchg
cmp
in
movs
cwde
push
(bad)
sub
cmp
mov
sub
pop
ds
fldcw
xchg
shr
dec
lods
pusha
sbb
int3
je
xchg
cmp
adc
aad
(bad)
fild
lea
xor
sub
addr16
test
movs
adc
or
push
sbb
sbb
sbb
lock
pop
sbb
in
ins
inc
jbe
repz
mov
jmp
and
stc
aaa
arpl
repz
ret
dec
pop
aad
ret
ds
jbe
arpl
loop
push
frstor
cli
cmp
and
adc
nop
mov
jl
adc
(bad)
fs
in
out
cmp
sar
and
cmp
retf
scas
xor
cwde
ds
lahf
(bad)
clc
mov
scas
idiv
ins
imul
popf
in
mov
cmp
lods
pop
dec
fcomi
and
loop
aas
pop
and
test
imul
mov
push
mov
fsubr
sbb
jae
aad
shl
mov
sub
mov
xchg
or
jae
xchg
pop
cli
jne
dec
stc
or
push
repnz
cmp
retf
pop
ret
jno
imul
es
pop
repnz
mov
repz
fst
mov
imul
mov
lods
jge
call
xchg
aad
je
sahf
push
push
ins
retf
and
mov
adc
jbe
mov
cwde
and
(bad)
mov
fistp
mov
sbb
xor
fcom
movs
cdq
mov
je
cmp
arpl
mov
retf
jl
cmps
jno
loopne
retf
add
or
mov
out
mov
test
xchg
mov
xchg
ds
lods
sbb
dec
test
fisttp
test
imul
mov
pop
push
push
es
loop
outs
adc
ja
call
out
sbb
repz
cmps
mov
popf
js
ss
in
es
shl
sbb
pusha
mov
xchg
xchg
xor
push
mov
sbb
pop
aam
push
or
es
dec
dec
addr16
repnz
(bad)
xchg
inc
pop
sbb
inc
rol
and
mov
stc
sbb
pop
jnp
xchg
(bad)
add
ins
mov
push
xor
cwde
pop
out
out
dec
push
push
sbb
movs
pop
mov
mov
pop
adc
xor
sub
int3
test
imul
pop
(bad)
or
mov
(bad)
fisub
xchg
pop
mov
dec
jp
(bad)
iret
pop
mov
pop
xchg
or
push
xor
dec
mov
call
mov
push
mov
sbb
sbb
ds
push
mov
pop
and
ins
inc
lea
mov
inc
or
aad
sub
mov
mov
repnz
sbb
mov
dec
pop
dec
scas
adc
jno
mov
inc
int3
movs
pusha
ret
aad
test
mov
retf
retf
push
and
mov
into
shr
imul
cmc
push
lahf
div
dec
or
add
xchg
mov
ds
mov
into
jmp
and
mov
outs
jb
int
or
in
out
sub
inc
out
jp
fadd
cmps
cmp
sub
sbb
or
imul
lods
(bad)
inc
push
ds
or
pop
loop
dec
pop
push
rcl
outs
lahf
leave
gs
and
clc
fstp
stos
and
rep
cmp
iret
pop
out
jl
mov
cmp
add
out
nop
mov
in
jle
test
sbb
dec
or
sbb
cmp
fild
out
or
(bad)
xor
push
add
mov
fisub
js
jp
jmp
shl
mov
js
into
(bad)
dec
add
test
aad
outs
inc
mov
pusha
movs
push
or
xor
inc
jg
cmps
add
lock
addr16
or
push
pusha
stc
addr16
out
cmp
pop
add
loope
mov
mov
mov
call
push
jae
pushf
shr
sub
mov
sbb
add
mov
movs
xor
mov
adc
fidivr
or
jbe
cmp
or
jmp
mov
out
mov
inc
bound
cdq
je
pop
or
inc
dec
jecxz
lea
movs
push
cmp
jne
(bad)
in
pop
in
test
inc
pop
(bad)
imul
call
lock
add
mov
lea
call
inc
popf
stos
in
cmp
shl
lds
xchg
adc
sbb
pop
xchg
push
aas
and
pop
or
inc
ret
in
stos
loopne
nop
pop
adc
push
push
retf
push
shl
stc
mov
cli
repz
mov
movs
push
push
jnp
xor
outs
add
lods
xchg
pushf
cmp
pop
and
pushf
out
xchg
sub
stos
mov
and
mov
jo
jg
xor
out
or
dec
cdq
jl
xor
rcr
xchg
shl
xor
xchg
adc
mov
(bad)
retf
or
movs
or
(bad)
sub
ds
in
push
fwait
mov
test
lea
ins
mov
adc
retf
popf
pop
ret
frstor
mov
jnp
add
add
jmp
fadd
push
addr16
sbb
sub
scas
stos
mov
lods
mov
mov
add
mov
retf
daa
push
fsub
inc
mov
sbb
rol
pop
adc
outs
int3
je
call
dec
lods
pop
and
and
inc
repz
out
cmc
pop
in
mul
popa
aam
int
xor
sbb
out
adc
pop
aad
test
pop
jmp
jnp
stos
jp
xor
xor
mov
iret
test
push
arpl
ret
dec
movs
(bad)
ret
cli
add
out
fistp
icebp
add
scas
or
sahf
ins
rcl
inc
stos
outs
retf
jb
loope
mov
and
mov
dec
sbb
in
cmp
push
mov
mov
rol
xchg
pop
cwde
jg
inc
(bad)
aad
push
add
stos
inc
shr
es
dec
push
sbb
ins
inc
scas
bound
call
push
jo
loope
cmc
call
(bad)
outs
pop
jmp
repz
lds
icebp
add
push
nop
ret
cmps
cs
int
mov
and
pop
fild
stos
pop
test
add
or
out
push
cmp
loopne
stos
fdivr
(bad)
repz
daa
xchg
(bad)
mov
xchg
cmp
into
int
jno
popa
ins
jo
jns
outs
push
rol
xchg
scas
sbb
and
lea
xchg
and
xor
mov
push
xor
(bad)
rcr
call
and
adc
cmp
pop
lahf
pushf
cmp
rcr
adc
ds
sbb
retf
dec
shl
mov
or
xchg
sahf
lds
pop
dec
xchg
adc
pop
pop
xchg
es
sub
adc
cmp
xchg
es
rol
push
ror
push
xor
repz
inc
stos
int
xor
and
sbb
inc
dec
in
ss
jg
nop
push
mov
mov
addr16
gs
les
fnstenv
sbb
jmp
in
pop
in
aaa
pop
adc
pushf
stc
dec
sub
xlat
mov
hlt
jmp
shr
mov
iret
daa
pop
or
jmp
jno
out
or
out
mov
aad
scas
add
mov
add
pop
mov
fdivp
aas
stos
imul
(bad)
js
cmc
jmp
jno
repnz
xchg
xor
rcr
sar
xchg
pop
sub
fsub
call
in
arpl
sbb
xlat
fmul
(bad)
jmp
sub
out
sub
aam
out
mov
push
mov
repz
hlt
cmp
pop
scas
shr
mov
pop
mov
fwait
test
push
or
or
pop
imul
jecxz
cmp
cbw
jecxz
cmp
out
out
add
aad
adc
retf
mov
js
call
mov
mov
ret
(bad)
lds
inc
push
cwde
add
cmp
push
leave
lods
xor
sahf
test
retf
adc
and
call
jle
sbb
push
sbb
int
rcr
out
adc
cmp
mov
inc
or
sbb
rcr
sahf
(bad)
aam
and
jle
mov
xor
retf
lock
or
imul
in
mov
stc
mov
retf
pop
cmps
daa
test
jnp
ins
dec
cmc
arpl
mov
pop
mov
dec
push
cmc
fidivr
pop
dec
jg
adc
loopne
aad
xor
fdivr
lock
cdq
xchg
scas
sub
push
outs
pop
or
fcmovb
div
push
push
xlat
or
cs
test
cs
or
cmp
in
cmc
repnz
int
sub
inc
mov
mov
cs
inc
adc
add
out
aam
fild
add
iret
lock
pop
retf
out
mov
ins
ja
cmp
mov
cmp
jp
push
dec
push
fcmovnu
jle
adc
adc
test
sbb
jb
in
jnp
ror
mov
and
int
neg
xor
cmp
inc
xor
jmp
rcl
popf
leave
std
jns
mov
cmp
inc
jb
xchg
call
jns
mov
call
mov
jmp
cmp
dec
imul
mov
mov
aad
sbb
inc
push
inc
shl
movs
retf
iret
arpl
mov
lods
push
ins
push
or
adc
fidivr
xchg
out
call
cmp
out
pop
fmul
adc
xchg
lahf
or
mov
push
jbe
test
jecxz
mov
(bad)
sub
xchg
in
retf
xor
cmp
jno
mov
test
leave
fcmovbe
fstp
add
cmp
enter
and
and
cmp
pop
dec
or
jmp
aas
popa
in
jnp
jno
cmp
and
sub
(bad)
mul
mov
(bad)
movs
lock
les
push
call
mov
mov
add
jne
out
or
movs
xchg
mov
or
xor
inc
das
or
pop
mov
push
gs
mov
pop
mov
push
or
std
js
xor
sbb
sbb
xor
int3
ja
popa
mov
mov
cmps
popa
mov
cmp
push
sub
jo
push
xor
xor
push
test
jnp
add
add
push
inc
jmp
add
cmp
es
stc
mov
push
hlt
stos
pop
mov
inc
out
out
pop
xchg
cmc
xor
jnp
mov
push
lock
into
xor
out
add
pop
pop
pushf
addr16
mov
push
pop
fidivr
daa
clc
mov
inc
xor
xchg
and
mov
sahf
sbb
call
sti
sbb
enter
icebp
jae
daa
ret
inc
fs
ins
add
ficomp
inc
lahf
lods
adc
and
inc
dec
lds
dec
pop
test
test
fwait
adc
pusha
mov
jbe
in
cmp
jae
mov
push
ret
xchg
pop
outs
sar
and
adc
out
mov
push
mov
mov
ret
cld
xor
es
pop
or
push
mov
pop
mov
xor
(bad)
and
iret
or
inc
je
shr
dec
(bad)
fisttp
mov
jnp
xor
jp
pop
xor
std
push
(bad)
rcl
iret
test
pop
popa
sbb
sahf
or
dec
jmp
jnp
inc
jmp
test
mov
nop
dec
ret
leave
gs
outs
std
xchg
lds
out
pushf
fs
lahf
fstp
dec
outs
fdiv
test
fld
call
jns
adc
or
fdivrp
(bad)
dec
or
xchg
xor
je
or
dec
mov
mov
mov
adc
pushf
or
mov
retf
and
das
mov
pusha
test
jae
popf
mov
dec
hlt
icebp
sub
xchg
and
mov
test
inc
mov
jmp
push
jbe
call
inc
jo
sbb
dec
jmp
outs
fimul
sti
sbb
(bad)
sub
sub
jbe
sub
(bad)
movs
mov
xor
sub
sub
mov
jmp
into
inc
hlt
aad
arpl
(bad)
ficomp
dec
shl
aam
ret
add
adc
scas
popa
outs
and
ror
scas
lods
popa
add
mov
dec
or
ret
jle
xor
fnstsw
or
mov
xchg
cmp
loop
lea
push
lds
jne
fistp
push
sub
mov
js
jb
ret
hlt
mov
xchg
in
dec
outs
retf
and
or
test
out
cmp
adc
xchg
jge
popa
push
arpl
and
(bad)
loop
ret
cwde
loopne
hlt
fmul
jp
push
push
pop
sub
push
imul
sub
les
xor
sbb
mov
add
out
or
jle
sbb
aam
mov
dec
cs
or
stos
stos
sbb
lahf
push
pop
pop
call
mov
nop
inc
or
inc
jmp
xor
push
inc
leave
daa
test
and
(bad)
pop
cmp
jae
pop
xor
dec
scas
lods
mov
mov
inc
jmp
xor
ret
in
mov
jne
sbb
xchg
mov
mov
push
test
adc
push
and
in
test
jmp
cs
bound
jb
shl
mov
(bad)
pop
or
mov
dec
add
lods
push
cdq
sahf
jbe
xchg
ror
(bad)
push
das
xchg
leave
push
mov
lds
pop
mov
xchg
inc
inc
ret
mov
stos
aam
jge
pop
aad
and
nop
sub
mov
sub
mov
inc
pop
sbb
inc
xchg
jl
scas
std
or
adc
mov
add
push
or
push
hlt
cmp
xor
ror
jb
push
xor
dec
cmp
xlat
cld
lock
jmp
jae
rcl
dec
mov
(bad)
cmp
jecxz
imul
outs
retf
xchg
mov
mov
or
pop
mov
jge
adc
repnz
or
scas
push
call
lahf
test
lock
adc
imul
(bad)
popf
movs
fild
cmc
push
push
sub
scas
sub
imul
or
mov
xor
push
jo
retf
inc
dec
adc
mov
repnz
rcr
sahf
je
fdivr
inc
clc
ins
mov
pop
jl
mov
cmp
and
xor
loopne
pusha
jno
out
pop
jmp
jge
and
sar
fdiv
movs
pop
and
inc
pop
inc
fxch
mov
stc
dec
mov
mov
cmps
in
pop
xchg
jmp
rol
aas
add
call
sti
ss
xlat
xlat
adc
push
pop
repz
xchg
pop
sbb
pop
push
(bad)
repz
mov
fwait
sub
into
adc
ror
or
outs
cmps
data16
out
adc
daa
fs
dec
shl
cwde
mov
sub
popa
xchg
and
pop
stc
mov
ds
in
mov
and
jbe
or
in
imul
daa
fs
adc
adc
dec
mov
pop
dec
jnp
imul
(bad)
adc
mov
repnz
mov
js
daa
xor
and
mov
mov
cld
pop
jg
push
xor
nop
sub
je
call
addr16
cmp
jge
jecxz
imul
out
xchg
lds
je
lods
inc
div
inc
mov
push
cmp
mov
mov
mov
ins
mov
cwde
jmp
mov
mov
shr
fldpi
push
fsubr
pop
(bad)
popf
mov
pop
pusha
fwait
xor
push
and
das
(bad)
mov
stos
mov
dec
retf
bt
data16
clc
inc
push
inc
mov
mov
test
or
and
sub
and
les
xlat
xor
(bad)
hlt
jmp
pushf
pop
jl
mov
push
lahf
cmp
push
std
pop
fs
shl
ret
or
test
mov
jns
inc
js
mov
sub
std
ret
xchg
fidiv
mov
push
sub
cld
outs
sbb
cmps
mov
mov
or
imul
lock
sub
les
cs
jo
cld
in
pop
fisttp
push
(bad)
out
ss
fdivr
jmp
ror
add
push
iret
or
cmp
push
sbb
fs
xor
popf
addr16
or
fs
je
mov
mov
test
xchg
push
sbb
dec
pop
imul
out
push
adc
inc
dec
sti
call
bnd
cmp
xor
xchg
dec
dec
pop
pop
add
imul
popa
and
adc
arpl
cli
cmp
(bad)
inc
fwait
ror
ret
jecxz
jg
xchg
bound
int
mov
push
shr
imul
fwait
neg
test
iret
push
xchg
lds
jbe
dec
out
lgs
(bad)
loopne
aam
xlat
cdq
mov
in
sub
adc
(bad)
inc
cdq
and
add
test
pop
mov
sub
ins
pop
pop
dec
sbb
add
movntq
scas
pusha
xchg
push
pmulhw
jns
jno
(bad)
mov
pop
or
xor
adc
retf
xchg
pop
aam
das
jle
xor
aas
mov
jmp
xchg
add
inc
ins
clc
adc
pop
rcl
rcl
dec
inc
xrelease
sub
inc
mov
stos
jg
mov
and
xor
cs
jns
and
mov
mov
scas
mov
std
cmp
push
jg
jns
and
mov
push
push
jmp
jmp
xor
adc
xchg
rcr
rcl
movs
jnp
repz
ret
out
ins
pop
cmps
sahf
jp
mov
jo
and
mov
(bad)
mov
rcr
jmp
(bad)
outs
and
xchg
sbb
out
jecxz
mov
clc
cwde
mov
mov
loop
and
retf
jne
stc
xor
fs
cmp
dec
gs
pusha
leave
push
cdq
js
xor
adc
fistp
jl
sti
mov
or
leave
imul
xchg
outs
movs
jge
push
cdq
mov
xchg
sub
dec
jmp
dec
mov
sub
test
push
inc
sbb
jne
dec
mov
sub
fild
les
mov
fld
add
fidivr
xchg
and
ja
adc
ret
push
mov
div
cmps
sar
out
adc
sub
cmps
fsub
dec
cli
setg
imul
lock
pop
xchg
mov
push
push
inc
rcr
adc
add
or
adc
add
pop
xor
jmp
fiadd
data16
xor
neg
xchg
and
add
(bad)
data16
jp
imul
xchg
pop
test
call
sbb
outs
jecxz
mov
add
test
call
sbb
push
sbb
and
sahf
test
stos
xor
add
cmp
fidiv
cmc
stos
nop
add
inc
and
cmps
xchg
in
dec
fisubr
push
cmc
movs
retf
sbb
cmc
cmps
cdq
xchg
mov
sti
adc
lds
dec
and
shr
cmp
xchg
add
adc
stc
inc
outs
cmp
mov
gs
stos
push
dec
or
ss
arpl
out
es
mov
cmps
push
sbb
jle
cmp
jmp
dec
test
in
and
mov
pushf
addr16
aaa
and
push
ds
test
push
or
push
mov
mov
inc
loope
inc
mov
movs
xlat
dec
pop
jp
adc
push
xchg
or
pop
scas
int3
data16
add
mov
push
mov
xchg
mov
fist
sbb
cmp
jl
xor
idiv
xor
or
test
push
das
into
(bad)
mov
xor
rcl
mov
sahf
mov
inc
jmp
mov
xor
inc
xchg
lahf
shl
cmp
fadd
sbb
retf
pusha
stos
js
add
repz
push
adc
into
pop
fiadd
inc
or
or
sbb
inc
pop
(bad)
jmp
or
mov
push
cwde
das
sahf
dec
lds
test
cmp
cmps
ret
(bad)
out
adc
call
push
jns
scas
ins
mov
xchg
ret
pop
jae
push
test
sub
rcl
sub
mov
stos
xor
inc
inc
and
pushf
fcomp
outs
push
bound
and
jbe
ds
lahf
jg
nop
inc
aam
mov
sbb
and
popa
mov
lock
push
ss
sub
fs
mov
mov
ficom
fwait
or
jp
imul
stos
fisubr
dec
scas
inc
enter
sbb
pusha
xchg
and
out
prefetcht2
mov
jmp
inc
cmp
mov
mov
push
dec
rcl
or
xchg
mov
daa
in
cmc
cmp
inc
not
imul
mov
mov
inc
jbe
pushf
in
fwait
add
mov
cmp
sbb
cli
xor
ss
push
cld
dec
cld
adc
aas
jmp
cdq
ins
cmp
xchg
out
enterw
push
sbb
fxch
rol
ror
iret
(bad)
stos
sbb
jnp
int3
mov
push
scas
inc
into
int3
imul
mov
test
test
loop
cmp
scas
outs
mov
add
pop
pop
cmovg
call
adc
popf
mov
dec
fsub
sbb
ret
cmp
imul
mov
dec
iret
or
std
cmp
das
fst
dec
dec
dec
mov
sti
and
xor
stos
add
xchg
cmp
dec
rcl
gs
push
push
sub
and
aad
and
push
cmp
dec
out
and
inc
xchg
cmp
jle
pmullw
pop
adc
inc
xor
sti
adc
aaa
scas
ret
push
sub
inc
daa
fs
ret
sti
ret
mov
push
pop
retf
fcomi
add
enter
add
inc
dec
stos
inc
rcr
push
jnp
(bad)
ins
xchg
fwait
jne
mov
mov
es
daa
hlt
inc
inc
loop
jb
xlat
pop
addr16
add
in
pop
(bad)
or
data16
stos
jnp
(bad)
sub
stos
jl
jle
pop
hlt
popf
mov
jno
neg
xor
push
push
daa
int3
mov
mov
(bad)
retf
retf
daa
xchg
add
inc
mov
push
mov
sbb
loopne
enter
ret
and
sbb
sub
(bad)
push
xlat
lahf
nop
fmul
out
popf
loopne
out
(bad)
push
mov
nop
jmp
inc
or
fsub
lds
dec
fadd
test
(bad)
out
inc
or
ret
pop
cwde
xor
out
jne
push
enter
jmp
dec
fmul
add
jge
dec
mov
inc
out
gs
out
stos
stc
ja
cmps
pop
sub
jge
jp
xchg
cli
ds
scas
aad
daa
addr16
or
xor
ins
push
dec
loop
(bad)
mov
pop
dec
jmp
xor
fst
xlat
arpl
sub
pop
retf
dec
push
and
std
and
mov
and
push
xor
dec
aaa
or
test
fimul
cli
adc
mov
mov
pop
int3
sahf
adc
xor
movs
mov
adc
cld
or
dec
int
(bad)
fistp
mov
xchg
ins
idiv
pop
daa
ins
mov
into
cmp
in
or
dec
sub
les
out
jbe
mov
push
js
sub
sahf
stos
fs
xor
hlt
aam
mov
add
push
sbb
clc
mov
fisttp
fbstp
mov
xor
jle
popa
mov
cs
cmp
cld
push
inc
jb
cmp
cmp
add
clc
mov
scas
stos
cwde
scas
ss
int3
inc
in
out
lods
(bad)
gs
cmp
lods
sub
dec
pop
lods
push
cmp
sti
mov
in
fmul
and
shl
dec
jecxz
xchg
mov
les
xor
loope
movs
sub
loopne
leave
aas
fwait
les
inc
scas
inc
pop
mov
mov
inc
mov
iret
repz
mov
sbb
ss
pushf
mov
imul
xor
or
cmps
lea
push
dec
jle
stc
mov
xchg
and
loope
xchg
cli
jbe
das
jge
inc
or
adc
xlat
rep
and
ret
mov
je
mov
adc
add
stc
fisubr
mov
dec
xor
out
js
sub
push
jmp
iret
or
pop
push
out
inc
arpl
inc
bound
or
xor
push
dec
dec
stc
leave
daa
xchg
mov
cmp
fstp
lods
jne
cmps
push
aam
rcr
sbb
xchg
mov
or
sub
xchg
mov
outs
or
inc
into
sub
xchg
xor
push
or
sbb
mov
shr
xchg
mov
shl
jecxz
out
imul
xchg
enter
xor
jae
dec
movs
jge
loopne
adc
aas
shr
xchg
xor
pop
stc
xchg
fnsave
enter
sbb
aad
sub
mov
add
mov
retf
mov
mov
clc
ja
mov
push
mov
je
xchg
sahf
inc
dec
in
push
das
leave
mov
push
pusha
loope
ins
fs
add
into
pop
sub
push
jmp
pushf
call
jecxz
push
mov
jge
push
sub
inc
test
add
inc
inc
inc
lods
int3
jg
dec
cmp
in
or
xor
lds
iret
loope
xchg
retf
mov
jbe
add
out
int
and
rcr
dec
fnstsw
push
jmp
shl
bound
mov
jge
and
arpl
retf
sub
out
dec
pusha
pop
sub
(bad)
xor
pop
jp
cdq
push
ja
retf
xchg
into
ds
mov
cmp
pop
test
xor
cwde
hlt
pop
retf
dec
enter
push
jo
and
cmps
mov
imul
cld
dec
push
es
fsub
mov
and
or
ret
cmp
cli
outs
enter
(bad)
push
xchg
ins
inc
and
mov
and
stc
push
cmp
mov
pop
adc
out
ret
(bad)
out
mov
sub
xor
imul
shr
sbb
mov
xchg
sar
mov
pop
(bad)
std
or
jmp
sub
and
jnp
mov
jecxz
pop
pushf
cli
and
mov
dec
(bad)
repnz
mov
lahf
mov
push
aad
sbb
sti
cmp
pop
mov
sbb
add
sbb
mov
adc
mov
mov
mov
jp
popf
jg
hlt
jae
shl
sub
xor
pop
jmp
mov
push
fwait
aaa
xchg
inc
ret
pushaw
mov
pushf
mov
out
push
xchg
daa
fadd
mov
pop
ins
daa
movs
je
loop
adc
inc
loopne
push
(bad)
jle
fs
push
call
mov
jl
mov
retf
ds
es
(bad)
mov
add
(bad)
cmp
or
bound
push
les
add
cmp
jbe
mov
aad
push
pop
mov
jnp
add
clc
pop
retf
xchg
outs
or
pop
test
iret
retf
jmp
pop
push
mov
inc
outs
retf
aas
retf
jp
xor
call
int
push
xchg
mov
dec
lods
pop
das
sub
icebp
add
push
clc
scas
loop
in
fsubr
and
push
lods
loope
dec
or
mov
or
shl
fmul
test
(bad)
mov
inc
out
aaa
daa
xchg
scas
jns
jge
movs
push
leave
jbe
retf
fiadd
pop
xor
movs
into
clc
test
sbb
pusha
leave
sbb
lds
add
out
and
cmp
leave
cmp
push
out
adc
xlat
push
add
sahf
push
sub
dec
sbb
frstpm(287
rcr
jp
dec
mov
mov
cmp
fdivr
mov
and
fs
pop
ins
inc
jno
adc
push
imul
and
xor
jns
icebp
xor
cmp
movs
adc
cmp
ret
aad
lods
add
or
repnz
adc
in
add
xchg
mov
lds
push
lods
mov
test
das
out
pop
mov
push
adc
or
pop
mov
xchg
mov
adc
clc
or
push
mov
inc
cld
push
mov
ins
xor
sub
or
std
mov
outs
ja
xchg
inc
mov
sub
cmp
outs
adc
fcmovnb
xchg
mov
stc
in
lahf
scas
ja
mov
sub
xor
les
out
mov
inc
push
push
sub
mov
repnz
fadd
xor
jge
aam
ins
cmp
stos
call
pusha
clc
arpl
jg
jle
aam
ins
fwait
add
pusha
movs
in
mov
jno
out
test
sbb
pushf
inc
pop
and
fcmovnb
fwait
mov
pop
mov
ret
ret
js
push
pop
pop
cmp
push
cli
xchg
fsub
add
aam
leave
sar
adc
mov
int3
and
loopne
aas
ret
push
add
mul
push
clc
in
mov
dec
out
data16
(bad)
ret
dec
mov
mov
arpl
mov
(bad)
fiadd
movs
push
and
test
out
push
leave
mov
xchg
jmp
add
cmp
lea
inc
test
pop
in
jle
sub
jns
mov
mov
in
mov
stos
pop
jl
sahf
jle
pop
pop
dec
xchg
mov
xor
sub
retf
xchg
cmps
cmp
int3
pop
jg
add
inc
jg
scas
jge
xor
into
bound
fsub
ins
mov
sub
push
add
iret
(bad)
xlat
cmps
sbb
inc
ins
push
adc
es
sbb
rcr
xchg
mov
adc
xchg
rcr
push
test
leave
adc
pushf
pop
cli
adc
push
mov
pop
retf
inc
ins
mov
cmc
test
std
inc
out
jne
add
ret
mov
call
add
pusha
mov
push
xchg
sbb
(bad)
xlat
std
jo
xor
ret
xchg
mov
inc
iret
popf
push
adc
sub
sbb
aas
mov
dec
ret
xchg
jl
mov
(bad)
idiv
pop
add
inc
lods
lahf
outs
lods
mov
jmp
and
mov
push
call
int
pop
pop
sub
xor
add
jle
mov
daa
(bad)
test
ret
mov
and
xor
movs
dec
jg
and
scas
push
push
out
mov
jae
loop
push
cmp
xor
mov
fbld
xchg
inc
mov
mov
add
shl
pop
mov
icebp
and
dec
mov
test
or
mov
sub
inc
sti
adc
aaa
adc
sub
ds
fistp
pop
sbb
sub
iret
imul
jae
cld
xchg
sahf
or
test
dec
mov
test
int3
and
js
outs
mov
xchg
mov
pop
mov
test
jmp
inc
push
mov
nop
pop
retf
int3
scas
adc
push
sbb
dec
sbb
out
mov
cmp
adc
popa
aam
je
or
xor
test
rcl
inc
jae
mov
sub
(bad)
dec
cmp
call
or
in
jecxz
lods
cwde
inc
sbb
sbb
inc
xor
nop
add
in
sub
pop
aaa
pop
ins
inc
movs
js
add
hlt
push
or
mov
imul
sbb
inc
cld
loopne
xor
cmp
nop
jmp
(bad)
test
push
loopne
cli
add
jle
data16
test
xchg
adc
test
(bad)
into
shr
jnp
jno
mov
jmp
and
movs
sbb
je
jmp
pop
cmp
xchg
mov
mov
push
add
(bad)
sub
stos
cmp
add
sbb
sbb
adc
fnsave
movs
jns
(bad)
sbb
cmp
cmp
test
in
movs
(bad)
fnsetpm(287
aad
imul
and
inc
(bad)
sub
inc
fcomp
jae
aam
fsubr
inc
xor
addr16
aas
repz
in
rcr
pop
push
inc
cdq
in
add
pop
adc
sbb
jno
shl
mov
sbb
bound
inc
push
and
mov
cdq
hlt
xor
cmp
sbb
push
adc
push
sbb
retf
js
mov
xlat
cmps
sub
shr
jmp
mov
sahf
fwait
xchg
mov
mov
popf
jmp
adc
xchg
mov
jp
cmp
aad
add
int3
outs
popa
loopne
or
loope
fisttp
ins
add
shl
mov
add
(bad)
retf
jp
xlat
retf
mov
jl
sub
cdq
ss
or
shl
sbb
das
mov
(bad)
out
sbb
and
cmp
(bad)
xchg
cmp
cmps
pop
pop
add
mov
pop
cmp
fs
sti
push
mov
out
mov
pop
push
sub
ror
test
enter
cwde
test
sbb
adc
xchg
cmc
jp
retf
dec
xchg
mov
test
push
add
lds
push
outs
and
or
cmp
push
xchg
addr16
xor
mov
xchg
sbb
or
sub
outs
bound
fld
or
sti
push
jns
mov
xlat
xor
xchg
adc
rcl
(bad)
pop
out
aas
jmp
mov
repz
les
std
stos
int
mov
jp
into
push
movs
leave
cmp
mov
mov
imul
mov
les
cmp
out
cmp
push
push
push
(bad)
(bad)
sbb
inc
jmp
xchg
push
jae
mov
dec
sbb
mov
mov
cmp
ss
push
jb
bound
cmps
lock
or
and
call
jge
fistp
dec
ja
jge
and
xchg
push
into
inc
or
sbb
ds
xor
dec
and
pop
push
retf
mov
fidiv
mov
mov
cmps
pop
adc
pop
fs
mov
inc
rol
and
xchg
movs
movs
ret
mov
es
daa
pop
std
in
dec
imul
ret
adc
shl
cwde
popf
pop
jmp
sub
sub
xor
pop
pop
mov
loop
or
pop
ret
(bad)
jo
push
dec
xor
xor
cvtps2pd
mov
repz
std
pushf
(bad)
adc
pop
xchg
fdiv
xchg
idiv
xlat
mov
movs
outs
cmp
and
adc
pop
or
dec
sub
dec
sbb
mov
(bad)
push
dec
mov
add
repz
add
sbb
and
xor
sub
outs
out
pop
push
int3
imul
mov
daa
jmp
jle
outs
and
adc
scas
dec
jg
inc
in
mov
in
push
mov
mov
icebp
mov
and
jnp
rep
(bad)
cdq
in
push
mov
fld
mov
ror
hlt
cmc
ss
lods
std
dec
test
mul
push
mov
mov
ss
nop
ins
iret
pushf
dec
jle
ret
mov
jmp
sti
dec
arpl
clc
push
cld
mov
mov
push
pop
pop
aaa
in
hlt
xor
jnp
mov
stos
sbb
mov
add
add
xor
push
enter
cli
out
mov
jge
imul
mov
iret
pop
lea
sbb
pop
jge
cwde
add
les
(bad)
movs
mov
data16
out
dec
mov
jecxz
fist
add
(bad)
in
ret
ss
jp
repnz
jbe
push
push
xor
call
pop
pusha
je
outs
jae
jns
push
shl
fild
stos
sbb
xchg
shl
mov
inc
icebp
pusha
mov
adc
add
mov
inc
add
stos
test
fimul
sub
xchg
hlt
shr
and
and
iret
push
push
ss
mov
inc
jmp
add
aas
cmp
jno
xlat
in
(bad)
retf
xchg
mov
ret
pop
push
cmp
neg
icebp
adc
mov
pushf
jecxz
les
call
out
cmp
ins
lods
fst
loopne
sub
mov
adc
jae
mov
out
scas
pusha
(bad)
ror
test
jmp
inc
sub
aam
or
xlat
dec
les
les
mov
push
adc
pop
xor
mov
arpl
jo
stos
cmc
and
nop
xor
sbb
xchg
or
push
int3
fsubr
xchg
mov
sub
jbe
pop
mov
femms
xchg
and
rep
out
xchg
call
cmp
push
retf
mov
dec
push
repz
enter
scas
in
call
fisttp
xor
xor
adc
lea
lods
dec
mov
push
idiv
fs
cmp
xlat
gs
inc
test
add
scas
cmc
jae
ins
xor
pop
sbb
fs
or
scas
sub
mov
fnstsw
bound
cmps
mov
inc
ror
jl
xchg
jle
jp
(bad)
mov
push
xchg
fisub
stos
xor
pusha
xchg
sbb
xor
in
push
dec
push
call
push
push
mov
js
loop
jge
push
push
cmc
add
adc
test
popa
pop
cmp
ja
sbb
cmp
or
sar
mov
xchg
test
stos
and
jge
out
push
mov
aad
push
aam
imul
jecxz
popf
xchg
das
jmp
std
std
jae
push
call
cmp
pop
imul
js
or
mov
xchg
test
pop
aad
push
loop
mov
pop
int3
stos
add
mov
mov
add
jbe
push
addr16
and
shl
or
movs
xor
test
(bad)
lahf
xor
jge
out
jg
fnstenv
lahf
jne
mov
or
inc
imul
jmp
ins
into
daa
sti
test
inc
dec
movs
scas
cmp
push
scas
arpl
push
and
and
das
or
(bad)
popa
inc
dec
sbb
hlt
shr
dec
or
shl
xor
push
lds
fdiv
shl
sub
sbb
and
bound
jg
int
imul
mov
dec
and
xor
pop
inc
jg
aam
popf
push
cli
aad
jne
cmp
les
lock
cmp
(bad)
cs
div
frstor
inc
xchg
and
jp
pop
aaa
call
cmp
dec
xor
inc
add
jmp
fisttp
fsubr
and
or
mov
stos
rol
dec
test
movs
(bad)
nop
pop
and
cmp
inc
xchg
not
xchg
ret
pop
dec
cmp
sar
xchg
imul
inc
in
scas
push
dec
sahf
jno
leave
xchg
nop
repz
jbe
jmp
dec
mov
cmp
movs
movs
xchg
dec
pop
mov
xor
sbb
push
push
pop
add
fs
data16
mov
cli
daa
add
sti
mov
sbb
sbb
push
push
jge
inc
cdq
mov
pop
sbb
jns
lods
cli
add
add
sub
sub
rcl
xchg
ss
add
shr
mov
jns
sti
cdq
sub
jae
add
xchg
mov
daa
mov
and
cs
(bad)
stos
lods
cmp
in
adc
lods
call
xchg
pusha
dec
out
mov
or
inc
call
jmp
push
stos
inc
iret
and
pop
sbb
cdq
push
or
xchg
lahf
call
sub
cmc
add
cmp
lds
mov
cs
rcl
jle
jmp
sbb
inc
loop
ret
xchg
bound
arpl
mov
not
jae
sbb
dec
push
sub
dec
pop
mov
push
mov
push
out
ficom
pushf
pop
leave
test
pushf
mov
sbb
add
xor
enter
fwait
adc
jbe
out
retf
out
sub
mov
loop
jno
aam
jge
and
cmp
pop
mov
dec
xchg
xor
in
inc
sub
mov
push
dec
ror
rol
imul
ret
cmc
push
cmp
stos
in
xor
sbb
mov
adc
cdq
lea
repz
xchg
mov
jp
jmp
test
xchg
rol
fstp
aaa
movs
ja
xchg
jne
dec
pushf
lock
cmp
and
pop
into
(bad)
pop
in
push
pop
ret
adc
js
out
clc
mov
sub
cmps
add
inc
movs
and
mov
call
inc
xchg
adc
shl
pop
mov
or
cmp
xor
or
ins
mov
bound
cmp
and
mov
dec
out
mov
popf
adc
push
mov
sti
sub
xor
sub
mov
fild
pop
loop
push
mov
mov
mov
out
aas
enter
ins
(bad)
imul
mov
sub
test
retf
mov
inc
mul
repz
fisub
sub
loope
idiv
push
dec
rol
cli
jecxz
cmp
arpl
shl
lods
sbb
mov
adc
pop
retf
pop
xchg
add
gs
sub
pop
popf
stc
retf
xor
(bad)
add
sub
std
sub
push
call
mov
dec
push
movd
inc
xlat
xchg
jae
fs
add
sbb
pop
(bad)
popf
lea
cmps
mov
pusha
popf
mov
shr
push
push
dec
cwde
inc
mov
repz
push
pop
in
and
outs
mov
fmul
movs
or
push
ss
out
mov
inc
inc
fcomp
adc
sar
push
mov
dec
popf
inc
inc
fnsave
inc
push
add
or
fidiv
jo
jg
dec
icebp
mov
push
push
out
jo
push
adc
adc
cmps
push
or
sbb
dec
xchg
test
push
adc
or
push
nop
pop
push
out
mov
mov
test
into
repz
jg
mov
leave
daa
ud1
or
and
imul
xchg
imul
jb
fnstenv
fld
mov
call
push
je
cmp
mov
or
ss
arpl
gs
fdivr
dec
call
or
enter
inc
and
ror
lea
xor
sub
in
pop
stos
and
add
sbb
iret
std
pop
pop
xchg
(bad)
retf
loope
push
ror
cmp
xor
jns
adc
call
lahf
mov
adc
push
(bad)
pop
add
inc
push
jp
jecxz
push
dec
inc
dec
test
loopne
movs
or
pop
xor
cmc
stos
aaa
xchg
adc
dec
lock
mov
rol
lahf
imul
daa
inc
movs
cwde
mov
(bad)
test
movs
lds
in
daa
daa
jmp
jp
cmp
dec
cmp
aaa
mov
jb
jnp
rcl
xchg
push
xchg
mov
stos
mov
aas
cli
lods
xchg
mov
mov
test
jmp
add
stos
fdivrp
jg
cmp
mov
loope
scas
mov
adc
jmp
fnstsw
dec
fist
inc
fistp
sti
and
mov
test
cmc
pop
pop
mov
cmps
(bad)
cli
or
out
inc
mov
jecxz
repnz
pop
sub
push
push
sbb
dec
test
jl
in
jg
jbe
pusha
or
pop
add
xor
or
ins
push
iret
cmps
xor
adc
stc
cmp
out
or
mov
cwde
pusha
js
movs
fmul
ins
leave
or
mov
adc
repnz
idiv
push
imul
lock
mov
pop
inc
imul
(bad)
or
iret
test
pop
and
jbe
jbe
test
pop
aad
test
dec
ret
jns
out
and
sar
sub
(bad)
or
sbb
cmps
jecxz
pushf
push
jns
sub
aam
cmp
adc
add
sahf
mov
and
push
push
xchg
stos
pushf
push
add
ja
hlt
sub
mov
mov
les
(bad)
jmp
das
jo
nop
cmp
and
jae
neg
mov
sbb
int3
inc
or
jg
xor
and
test
nop
xchg
int
lock
mov
mov
mov
idiv
sub
out
lods
push
dec
mov
pop
pushf
sti
xor
das
jecxz
mov
sar
mov
(bad)
sub
and
push
mov
inc
movs
loope
dec
push
loope
mov
in
cmp
sbb
lock
mov
imul
in
mov
push
std
mov
and
pusha
popa
retf
pop
imul
adc
jns
ror
xor
cmp
mov
mov
out
int
fwait
mov
mov
pushf
lahf
sub
xor
mov
cmp
test
int
mov
cwde
iret
ins
cmp
push
mov
fmul
mov
jecxz
daa
adc
int3
mov
lahf
sub
in
pop
adc
inc
xchg
mov
movs
or
cdq
mov
xchg
xor
lods
cmp
cmp
jb
das
cmp
dec
pushf
sbb
add
enter
mov
movs
pop
add
shl
mov
dec
and
call
jno
push
jmp
sub
aad
adc
cmp
xor
popa
and
mov
(bad)
les
push
dec
fisttp
cmps
sub
or
pop
mov
or
ja
cmp
psubb
fs
push
add
dec
mov
inc
push
imul
jmp
and
mov
test
mov
fsub
pop
test
pop
adc
ss
fs
jb
and
jno
adc
outs
call
and
add
jb
shl
lea
inc
jo
inc
loop
sub
(bad)
xor
cmps
ror
out
cld
and
(bad)
jp
retf
or
xlat
pop
ret
xchg
dec
add
rol
adc
scas
les
add
fistp
jmp
jne
scas
outs
adc
enter
dec
nop
xchg
fwait
movs
(bad)
mov
dec
sub
pop
cmp
shl
pop
xchg
and
fstp
mov
inc
xchg
cmp
mov
xor
(bad)
jge
or
add
lods
hlt
adc
cdq
aaa
mov
ret
mov
scas
mov
jge
fcmovbe
mov
push
int
mov
pop
mov
mov
xchg
call
scas
cli
cmp
jmp
test
adc
test
data16
cmp
cmp
stos
hlt
or
adc
mov
aad
jmp
sti
jmp
lahf
(bad)
mov
repnz
pop
mov
or
jb
adc
ins
mov
and
mov
or
(bad)
fdiv
mov
lock
int
jmp
stos
push
ror
mov
pop
mul
imul
(bad)
and
out
mov
sbb
test
jl
movs
shl
pushf
jb
and
dec
pop
clc
adc
adc
fadd
popf
mov
(bad)
sub
iret
jns
pushf
outs
add
in
or
push
cmp
popf
(bad)
out
mov
stc
(bad)
cmp
(bad)
(bad)
jb
xchg
push
out
ins
pop
cmp
cdq
xchg
add
movs
icebp
mov
push
cmp
mov
xor
inc
(bad)
stc
xchg
mov
and
nop
(bad)
jmp
xor
mov
mov
into
jecxz
mov
pushf
push
in
xchg
stos
daa
mov
xchg
mov
or
lahf
push
add
mov
pop
test
xor
mov
sub
dec
jo
inc
and
cmp
(bad)
mov
xchg
sub
out
fdiv
pop
push
xor
jae
fdiv
call
repz
jle
mov
mov
xchg
jnp
cdq
adc
adc
jle
(bad)
jb
aam
inc
fisttp
movs
cmp
or
out
shl
cmp
repz
pop
or
aad
jae
inc
stos
repz
mov
fist
in
mov
jne
fwait
xchg
jnp
sbb
movs
je
jl
sbb
mov
ds
cmp
je
addr16
add
rcl
stc
mul
mov
gs
mov
imul
xchg
(bad)
fs
cmp
enter
hlt
rcr
inc
inc
xchg
mov
cmp
inc
xor
and
or
push
mov
in
nop
inc
dec
data16
add
(bad)
ret
xchg
cmp
aaa
ds
pop
mov
inc
or
std
mov
std
mov
clc
xchg
mov
aas
ficom
add
push
fs
repz
sub
sbb
shr
sub
xchg
sub
mov
call
ret
aam
stos
dec
jg
hlt
and
and
mov
add
les
jecxz
pop
(bad)
movs
push
fwait
(bad)
cmps
mov
push
jge
outs
jno
xor
in
popf
xor
fidiv
xchg
inc
repz
out
push
(bad)
call
pop
mov
(bad)
sub
call
mov
cmp
pop
xchg
mov
scas
mov
jmp
lahf
fstp
cli
xor
addr16
arpl
pop
jg
arpl
mov
fidivr
push
and
mov
xchg
ror
sbb
sbb
gs
test
cs
dec
fstp
add
call
sti
test
(bad)
rcl
and
lea
or
test
pop
mov
mov
fldz
jle
xchg
jne
xchg
push
jle
xchg
cmp
sti
or
(bad)
je
jg
data16
lea
outs
mov
in
retf
lods
push
nop
shl
loope
dec
sub
or
pop
(bad)
ja
mov
sahf
jno
imul
movs
inc
ror
pusha
leave
mov
ja
adc
(bad)
jmp
pop
gs
and
lods
xchg
mov
dec
popf
mov
ret
adc
pop
mov
mov
pushw
leave
jne
jp
mov
cdq
cwde
fmul
and
mov
xchg
xchg
dec
shl
ror
mov
retf
mov
push
mov
mov
sub
mov
and
add
or
cld
xchg
or
iret
iret
jp
mov
mov
cwde
sbb
mov
inc
sub
pop
out
mov
xchg
inc
mov
es
leave
push
aaa
or
rol
aam
pop
dec
add
jmp
mov
sbb
ret
ins
cwde
stos
fnstsw
clc
xchg
test
call
lock
cmp
outs
push
pop
and
rol
retf
jb
xor
stc
stos
int
leave
rol
xchg
loopne
aam
push
ins
sub
xchg
mov
cmp
ror
and
in
add
dec
add
or
imul
into
xchg
mov
jl
cmps
adc
mov
(bad)
scas
(bad)
ins
mov
hlt
int
mov
push
icebp
push
mov
fisttp
mov
mov
jle
scas
dec
mov
scas
and
xor
test
je
sub
imul
out
pop
jle
sub
sahf
inc
mov
add
cmps
fs
(bad)
stos
es
jns
subps
cs
push
idiv
push
and
in
outs
loope
jp
scas
je
out
push
sahf
jl
vunpcklps
or
imul
jno
push
xor
sar
push
loopne
(bad)
sar
ins
pop
ss
ret
fwait
gs
mov
and
cmp
push
xrelease
inc
outs
in
xchg
inc
add
pop
push
mov
push
cmp
mov
mov
jmp
ret
pop
xchg
cmp
push
push
pop
push
fnstsw
and
retf
dec
addr16
adc
dec
js
add
test
sub
inc
add
scas
push
cmp
cmp
dec
jp
cmp
das
aas
sub
stos
adc
adc
stos
add
mov
scas
es
out
push
jns
jnp
enter
loope
sub
aaa
paddb
pushf
inc
retf
and
jmp
pop
pop
or
jle
data16
dec
(bad)
or
lods
aad
cmps
inc
cmp
je
xchg
rol
cmc
sbb
and
in
push
or
mov
mov
cs
movs
test
and
cld
dec
inc
add
adc
mov
test
and
stos
mov
jmp
in
(bad)
xchg
vorps
mov
mov
jg
mov
push
push
call
xchg
out
out
jne
add
cmp
inc
dec
cdq
jnp
push
add
mul
or
test
sti
out
movs
and
pop
sub
mov
pop
xor
ret
mov
aas
pop
arpl
std
add
mov
mov
jl
test
sub
fwait
mov
xchg
loop
scas
cwde
addr16
(bad)
jmp
fdivr
jle
jo
mov
sub
das
jp
cwde
out
add
mov
ror
cdq
test
push
dec
sbb
cs
pusha
or
push
push
sub
fistp
ja
cmp
add
mov
(bad)
js
sub
aam
xchg
xchg
scas
fbld
or
ins
in
clc
pushf
mov
cs
push
and
push
mov
cmp
pop
pop
pop
pushf
pop
or
in
cdq
sti
mov
inc
cli
rcr
sub
in
add
add
(bad)
bound
stc
hlt
lods
jg
shld
(bad)
sbb
mov
rol
out
dec
iret
fdivr
mov
mov
cmc
retf
add
fld
sti
xchg
add
jecxz
jle
or
dec
dec
adc
and
jle
dec
loop
mov
test
(bad)
mov
lds
pop
push
call
mov
aad
mov
pop
mov
js
pusha
and
stos
mov
adc
sub
and
mov
pop
cmp
in
in
cmps
ret
fiadd
inc
das
sbb
lock
pusha
inc
dec
mov
and
dec
dec
mov
jne
(bad)
enter
cmp
xor
jl
mov
movs
push
je
or
xchg
cmp
jg
popa
and
jae
aam
movs
jne
pop
xchg
inc
or
mov
icebp
push
xchg
aam
dec
jne
retf
dec
mov
pop
pop
cmp
rcl
mov
cmp
adc
shl
or
popf
adc
push
xchg
scas
mov
cmp
push
inc
adc
dec
(bad)
pop
cmps
jae
stos
jae
scas
jbe
or
out
cmps
jae
adc
sbb
mov
push
mov
fstp
iret
dec
or
xlat
inc
arpl
shl
jecxz
sti
cmp
nop
and
sbb
mov
gs
or
xor
sub
imul
sbb
or
in
jl
iret
jo
xor
int3
in
mov
adc
test
sub
pushf
shr
add
jnp
ds
(bad)
xor
inc
mov
outs
shr
xor
fild
push
imul
jge
adc
xor
ret
imul
and
test
mov
shr
cwde
fimul
push
push
xchg
std
mov
(bad)
loopne
es
mov
push
lds
sub
mov
adc
mov
cmps
xchg
fcom
shr
es
sbb
push
sub
and
inc
(bad)
push
push
(bad)
dec
dec
pop
je
mov
icebp
in
sahf
mov
sub
xor
cli
add
jmp
pop
adc
and
stos
out
inc
xor
xor
pushw
ins
adc
xor
fisubr
out
pop
or
in
test
xchg
out
mov
add
shl
mov
in
lods
adc
mov
inc
mov
nop
sbb
dec
and
lock
popf
jmp
push
icebp
and
mov
sub
popf
pop
xor
xchg
movs
in
(bad)
mov
(bad)
mov
loop
aas
movs
adc
js
xor
sbb
pcmpgtd
xor
daa
je
push
imul
inc
and
jmp
xchg
loopne
les
inc
js
movs
or
dec
ss
nop
sar
test
sub
inc
xchg
xchg
sub
pushf
fldenv
ret
sbb
(bad)
pop
dec
sbb
loope
pop
xor
jne
and
jo
xchg
test
add
iret
cdq
hlt
jp
and
xchg
rcr
inc
movs
or
sbb
mov
jb
push
pop
mov
fnstcw
imul
adc
jne
addr16
jmp
and
add
test
out
cmp
dec
lahf
leave
test
push
add
or
cmp
xor
push
mov
mov
imul
clc
call
cmp
and
nop
and
sbb
push
ja
test
int3
xchg
call
sbb
fstp
imul
into
xor
and
xchg
(bad)
mov
stc
repnz
(bad)
dec
mov
push
or
jbe
lock
fimul
adc
inc
gs
mov
cmp
js
inc
(bad)
sub
add
movs
jnp
adc
outs
cmp
cmp
sub
xrelease
call
mov
mov
mov
mov
ret
push
jbe
leave
cmp
(bad)
sahf
jmp
fidiv
adc
mov
push
mov
bound
in
mov
out
movs
enter
frstor
popf
fisub
call
xchg
jecxz
jb
mov
xchg
lea
sub
mov
retf
push
(bad)
xchg
jmp
jne
movs
jl
std
scas
je
push
cmp
mov
pop
push
cmp
iret
add
call
mov
add
les
pop
pop
mov
popa
movs
jle
jle
mov
push
adc
imul
xchg
xchg
and
daa
xchg
adc
movs
adc
cmp
in
ror
jmp
adc
jno
ret
lods
test
and
loop
mov
mov
cmc
ret
leave
cmps
mov
inc
loop
push
adc
or
jno
push
or
sbb
cmps
push
cmp
test
push
inc
loop
dec
rcr
retf
(bad)
cdq
arpl
push
sbb
dec
out
cmp
inc
pop
or
rcl
popf
jg
loop
aam
xchg
add
mov
xchg
and
in
test
mov
jl
push
xchg
lods
push
je
mov
push
sub
retf
sahf
sbb
adc
sbb
and
push
jecxz
rcl
mov
imul
call
loop
dec
icebp
lahf
jno
in
jae
xchg
jecxz
sar
lods
and
iret
mov
shl
xchg
mov
sub
mov
push
lea
jmp
mov
movs
(bad)
mul
xchg
enter
cmc
xlat
push
popf
add
into
xchg
mov
cmp
or
shl
lods
repz
out
fs
xor
push
sti
sbb
movs
repz
fdivr
in
inc
fs
push
adc
pushf
scas
jno
push
inc
pop
cld
rep
xchg
hlt
pop
jmp
cmp
(bad)
in
pop
dec
adc
cmps
xor
ja
mov
push
mov
fs
push
cs
fadd
pushf
bound
adc
jno
lds
icebp
jae
ss
cmps
ret
repz
add
and
sahf
add
out
inc
test
push
sub
lea
sbb
pop
movs
jne
push
dec
cmp
imul
add
mov
jnp
mov
leave
mov
aad
jl
int
pop
xchg
jp
add
int3
cwde
mov
jo
mov
push
aad
ret
push
push
lahf
daa
inc
pushf
jns
add
pop
adc
aam
jp
push
jne
test
lods
fadd
aam
(bad)
in
adc
sub
or
aad
popa
mov
mov
xchg
mov
je
ss
and
lds
les
lahf
cmp
gs
addr16
mov
add
xor
sbb
jb
inc
nop
(bad)
aaa
mov
pop
out
xor
ins
mov
sbb
outs
xchg
pop
imul
jp
add
push
cs
mov
cs
(bad)
stc
adc
pop
lahf
sbb
enter
iret
mov
or
rcr
fild
pop
rol
stc
cli
(bad)
and
les
test
mov
(bad)
ficomp
adc
cmp
xchg
pop
add
(bad)
xchg
aad
shl
scas
call
dec
dec
jae
sbb
cmp
div
jb
movs
inc
sub
or
xchg
fiadd
stos
aaa
cdq
jmp
mov
js
cmps
out
sbb
fs
push
arpl
fsubr
mov
jmp
and
push
lock
fistp
aas
leave
imul
mov
popa
xlat
ins
mov
or
popf
test
push
loop
adc
mov
addr16
jo
in
test
sub
mov
fisttp
aad
pusha
jne
mov
pop
loopne
mov
test
xchg
fild
xor
push
cmp
inc
repnz
movs
mov
loope
add
or
sbb
aas
imul
cmp
repz
dec
cmps
loop
mov
test
add
or
pop
push
(bad)
mov
repz
cmp
or
sbb
xor
mov
movs
push
sbb
into
push
sub
mov
jle
cwde
leave
call
sbb
jg
sti
mov
pop
xchg
repz
sbb
dec
push
mov
or
or
(bad)
mov
ins
popa
out
and
clc
and
icebp
loope
dec
sahf
and
sbb
xchg
call
mov
xchg
and
jmp
lock
(bad)
sahf
push
movs
out
cmp
or
fidiv
sub
psubq
clc
inc
test
imul
(bad)
jl
stos
aad
imul
push
mov
cmp
push
mov
sti
outs
cli
sub
in
enter
out
jbe
push
jmp
cmp
dec
mov
adc
mov
loopne
inc
push
frstor
pop
dec
mov
fnsave
repnz
pop
or
fist
push
inc
or
(bad)
jne
adc
mov
(bad)
stc
push
imul
out
(bad)
fisttp
stos
aad
sbb
push
jns
xlat
das
mov
int
fidiv
mov
fisub
push
jl
or
out
adc
ds
jmp
and
mov
mov
xchg
adc
clc
test
mov
cmps
push
xor
mov
int
cmp
fild
(bad)
jmp
aaa
dec
sahf
sbb
sbb
loop
in
add
lock
dec
pop
popf
xchg
pop
cmps
push
and
mov
in
jo
inc
cmp
jp
int3
popf
retf
mov
out
enter
scas
pushf
out
jle
push
pop
xor
sbb
push
jnp
ja
int3
mov
test
mov
repz
cdq
mov
add
mov
mov
or
cmc
outs
jg
xor
call
outs
out
mov
cmp
xlat
sbb
pop
add
je
retf
nop
sub
cmp
sbb
aam
shl
add
sbb
mov
mov
add
ficomp
clc
jle
and
xchg
adc
sbb
rol
adc
xchg
shl
imul
mov
jle
push
push
sub
inc
sti
cmps
movs
jno
sti
inc
stc
rcr
xchg
jno
movs
mov
xor
lea
push
out
hlt
jge
enter
add
add
cmc
dec
and
fdivr
mov
push
or
out
pop
sti
sbb
stc
adc
daa
sbb
rcr
psllw
dec
inc
sub
pop
repnz
in
jno
std
push
addr16
data16
shl
sahf
icebp
xchg
popa
mov
mov
mov
xor
dec
or
addr16
popa
push
loop
xchg
dec
and
inc
ror
movs
jecxz
dec
sti
fld
xchg
bound
in
loope
sbb
fsub
out
into
sub
ror
xchg
cmp
mov
out
pop
sub
pusha
adc
adc
pop
in
cmp
mov
loop
das
jge
lds
std
push
retf
jge
cli
ins
dec
inc
test
inc
outs
inc
shl
jo
jbe
aas
mov
mov
sub
dec
cmps
push
add
and
arpl
out
adc
jg
loop
stos
push
mov
jns
and
outs
mov
(bad)
and
stos
jge
and
dec
scas
pop
mov
loopne
and
movs
ja
scas
iret
retf
dec
sub
clc
mov
cli
sub
dec
arpl
cmp
nop
and
mov
(bad)
fisub
jno
mov
mov
mov
ins
pop
aas
or
idiv
sub
out
jno
loop
cmp
mov
dec
adc
push
xchg
daa
adc
mov
jns
sub
xor
jg
sub
mov
sbb
mov
call
cmp
or
push
push
inc
fwait
(bad)
or
test
dec
rcr
xchg
jmp
mov
lock
retf
sub
paddusw
pop
xchg
nop
pop
ret
sahf
(bad)
xor
sbb
mov
jns
call
mov
inc
mov
call
sahf
in
ret
fdiv
add
ss
xlat
int3
push
fsub
pop
mov
shr
out
int3
test
xor
xchg
inc
mov
cmc
sbb
fs
push
and
mov
mov
test
sbb
xchg
and
xchg
sbb
push
scas
jae
mov
(bad)
and
or
and
int
adc
cmp
aad
inc
mov
jne
bound
jle
xchg
mov
push
pushf
fcmovnb
cs
add
(bad)
shl
or
cmp
jbe
xchg
lahf
imul
imul
push
inc
rcr
sbb
out
loope
jbe
repnz
xor
mov
lahf
aam
adc
pop
pop
bound
aas
pop
mov
int
(bad)
leave
push
out
cs
sbb
sub
mov
in
pop
sahf
jne
out
fisttp
push
js
inc
jae
cmp
mov
or
ret
xor
bound
jge
push
sbb
inc
mov
add
icebp
inc
xchg
jmp
out
cmps
push
clc
inc
pusha
out
push
adc
loop
sahf
push
popa
mov
aam
cmp
inc
xor
push
lods
push
dec
mov
dec
xor
or
dec
inc
out
and
xor
fs
jge
jl
dec
adc
fdivrp
inc
add
push
or
int
ds
in
in
pop
xchg
or
mov
jns
and
mov
dec
jo
jne
add
js
push
sbb
(bad)
fidivr
fld
js
inc
std
out
mov
mov
ret
cwde
and
retf
sbb
add
stos
jl
outs
retf
mov
fwait
jmp
dec
or
xchg
jns
ds
jno
into
ficomp
jmp
sbb
sbb
ins
in
dec
das
push
cmp
xor
adc
add
xchg
sub
bound
popa
jnp
push
add
xchg
fnsave
mov
test
sar
stos
into
jnp
inc
(bad)
xlat
dec
inc
add
pop
mov
and
xchg
pop
adc
jecxz
and
test
jo
rol
scas
call
fwait
push
add
jno
xor
xlat
stos
dec
cs
sbb
fidiv
out
push
(bad)
je
and
mov
retf
sahf
inc
push
pushf
jmp
int
adc
xchg
pop
int3
aad
mov
les
pop
adc
and
xchg
idiv
cld
nop
out
or
jmp
jmp
aas
ja
mov
ins
and
lods
ins
pop
dec
cmp
xchg
ret
mov
clc
std
mov
mov
out
cmp
sub
pop
repz
ja
xchg
cwde
pop
shl
jbe
lock
cmp
sub
and
jne
cld
out
or
(bad)
stos
pop
xchg
repz
dec
sub
adc
movs
dec
(bad)
xlat
cmp
xor
add
mov
jns
xchg
sti
movs
retf
and
inc
inc
mov
ja
sti
jecxz
add
dec
je
lods
sbb
dec
repz
lock
sbb
daa
jmp
loop
arpl
jo
out
mov
inc
add
add
xor
adc
cmp
dec
aas
shl
fisub
test
retf
jg
test
frstor
jno
mov
push
jb
retf
cmp
sbb
push
popa
xchg
pop
movs
je
pop
sti
push
shl
icebp
int3
ret
mov
int
lahf
js
pop
pop
ss
push
adc
rcr
aaa
data16
xor
jg
mov
add
and
cs
xor
pusha
sbb
xchg
mov
les
and
fcmovu
scas
int3
xchg
jae
std
scas
pushf
xor
adc
rol
xchg
rcl
js
mov
add
xchg
mov
push
sub
xor
test
and
cmps
push
fld
daa
push
bound
call
inc
into
and
pop
pop
lods
out
mov
dec
addr16
inc
test
sub
int
dec
push
adc
pop
jmp
mov
lock
mov
mov
lock
outs
cmp
inc
or
hlt
imul
pop
pop
ret
test
pop
pushf
out
push
sub
pushf
mov
gs
add
or
fld
inc
arpl
stc
jb
inc
das
xchg
add
and
enter
sub
mul
fcomp
lahf
xlat
in
mov
and
sbb
mov
or
test
scas
hlt
cmps
les
inc
or
daa
mov
xor
sub
jno
adc
test
mov
test
push
jge
in
test
in
cs
fs
popa
or
outs
call
or
jp
fdiv
ins
jp
pusha
mov
push
mul
out
rcr
stc
adc
cmp
mov
jmp
ror
movs
jbe
outs
pop
xchg
lea
pushf
leave
aad
in
sub
je
stc
inc
cmps
clc
sub
sbb
mov
repnz
pop
call
lods
mov
mov
sub
daa
cmps
mov
stos
inc
les
dec
or
and
push
lods
test
add
ficom
scas
mov
aam
out
cmp
addr16
mov
(bad)
xchg
clc
cs
push
dec
push
ss
xor
jbe
fnstenv
xchg
and
mov
push
cwde
dec
mov
mov
dec
(bad)
or
adc
jmp
and
clc
(bad)
sbb
cli
sub
mov
out
paddq
xor
cmps
daa
jp
dec
jb
repnz
lods
inc
sbb
jl
repz
push
sbb
minps
cmp
mov
scas
xchg
test
jmp
sar
cmps
cmps
cmp
imul
jp
or
xor
cmp
mov
fwait
outs
inc
popf
adc
in
jb
inc
repz
or
sbb
jmp
or
lahf
out
into
test
inc
cli
inc
mov
cmps
pop
dec
fcmovu
rol
xor
js
xor
lods
(bad)
push
pop
in
mov
inc
dec
outs
adc
add
inc
or
jmp
mov
shl
lods
cmp
(bad)
retf
mov
movs
test
inc
in
pop
repnz
cmp
jno
pop
pop
push
sub
push
popa
inc
jmp
les
aas
cmp
in
jmp
xchg
repnz
jle
lea
shr
cwde
iret
imul
dec
or
retf
pop
cmp
mov
and
jl
jnp
loopne
sub
mov
scas
jbe
dec
mov
mov
(bad)
mov
movs
jae
dec
adc
jb
fwait
call
jns
call
les
cs
adc
pop
add
jl
lahf
xlat
in
fs
pop
sub
jge
out
ret
inc
mov
xlat
call
xor
repnz
mov
mov
pop
call
jecxz
ss
mov
xchg
idiv
xchg
adc
jno
xor
in
div
add
pushf
scas
aas
je
or
cwde
enter
sbb
aaa
(bad)
lds
xchg
mov
shl
daa
jbe
adc
mov
outs
rol
mov
inc
(bad)
or
hlt
mov
ds
adc
add
fchs
daa
adc
push
gs
sub
mov
popa
pop
in
push
ja
addr16
retf
rcl
pop
push
call
rcl
jecxz
movs
mov
dec
(bad)
stos
aam
sbb
xchg
and
cmp
fidiv
cmp
add
jae
loop
xchg
int
lds
rol
pop
xchg
(bad)
and
leave
jmp
repnz
daa
mov
pcmpgtb
adc
in
dec
jb
(bad)
frstor
sub
inc
fcomp
test
pushf
mov
jl
ret
retf
popf
mov
pop
add
mov
and
pop
mov
out
mov
cmps
iret
sbb
in
in
popa
xlat
pusha
adc
ret
sbb
test
pop
and
imul
lock
nop
jg
mov
dec
lea
(bad)
mov
jle
gs
dec
enter
leave
mov
sub
cs
sub
jns
pop
aaa
sbb
push
sbb
xor
rcl
fwait
lock
ja
sub
cmp
or
ret
jmp
in
jmp
cmp
pop
rol
mov
rcr
aas
pop
jmp
add
xchg
div
cmp
loopne
or
mov
inc
adc
popa
sti
mov
aaa
out
adc
test
and
lahf
int3
movs
push
aad
arpl
inc
xchg
mov
push
iret
(bad)
aas
mov
fimul
push
sbb
(bad)
call
shl
shl
inc
repnz
pushf
inc
std
jle
cmp
jge
push
in
push
sti
jb
adc
addr16
xlat
cmp
test
daa
hlt
sbb
movs
or
dec
popa
sub
xchg
cvtps2pd
mov
out
adc
outs
cmp
sub
int3
xor
cld
adc
and
sub
(bad)
(bad)
mov
in
inc
pop
adc
aas
movs
inc
add
add
mov
mov
push
mov
call
push
adc
(bad)
loope
call
cs
outs
and
jo
and
in
fsubrp
xchg
or
(bad)
and
jbe
adc
ins
and
rcl
loope
or
xor
and
out
dec
xchg
fisub
jl
and
sbb
cmp
jmp
mov
adc
cmc
jecxz
xor
ja
add
mov
push
int
in
inc
lds
pop
int3
mov
and
jmp
mov
call
dec
sbb
sbb
add
es
xor
fsubr
mov
and
xchg
std
rcpss
mov
cld
mov
or
aaa
adc
xchg
into
call
cli
hlt
pusha
arpl
aad
cli
mov
js
and
sahf
adc
out
ins
das
out
fstp
in
enter
cwde
test
cli
cmp
mov
jge
(bad)
push
inc
dec
sub
xchg
sub
fsubr
push
addr16
add
lock
mov
mov
in
push
pop
fbstp
mov
aad
push
mov
sti
push
xor
and
ja
loop
pop
mov
fadd
int
rcr
iret
das
call
out
pushf
lods
jecxz
jecxz
ret
jb
xlat
push
rol
mov
lods
sub
jl
out
mov
push
imul
xlat
inc
push
cmps
bound
call
sbb
fisubr
gs
jo
icebp
stos
pop
or
ins
jp
iret
sub
aad
inc
mov
ret
sbb
fmul
fcomp
xchg
push
inc
ret
or
sub
mov
retf
or
js
bound
dec
into
pusha
mov
and
cmp
repnz
gs
and
lea
inc
and
add
adc
sbb
jbe
enter
call
das
data16
inc
mov
lock
xor
lds
inc
ror
call
xor
dec
and
inc
rcr
or
scas
in
rol
or
cdq
inc
sub
es
iret
rcr
push
ins
das
dec
and
retf
jge
aas
or
dec
adc
std
(bad)
daa
popa
data16
gs
aas
sub
pop
retf
push
mov
mov
scas
shl
call
mov
cmp
push
or
sahf
push
arpl
sbb
loopne
mov
push
mov
cwde
xchg
arpl
movs
jo
fmul
rcr
ins
sbb
scas
mov
sbb
jl
(bad)
sub
jae
ja
test
add
add
xlat
jnp
mov
daa
stos
jnp
ret
jl
xor
movs
adc
mov
ret
push
mov
rcr
lods
adc
lea
or
leave
(bad)
xchg
mov
or
ss
aas
mov
sbb
push
mov
icebp
mov
push
pop
les
add
and
sub
cmc
push
mov
jl
mov
mov
sub
pop
scas
add
xchg
xor
retf
jae
test
push
movs
push
movs
mov
nop
add
sbb
sub
fdivr
imul
and
in
fs
pop
push
mov
pop
popa
xchg
add
leave
sub
repz
xor
mov
push
addr16
in
cmp
mov
cs
je
push
out
(bad)
fst
shr
and
cwde
leave
xchg
xchg
ds
int
fnsave
add
and
or
xor
or
sbb
dec
push
dec
stc
test
push
arpl
int3
or
sbb
dec
or
fidiv
adc
adc
ret
cmp
cmp
cmp
(bad)
scas
test
clc
test
dec
pop
push
push
sub
sub
and
fs
stos
rol
fidiv
nop
push
retf
add
pop
mov
sub
dec
out
mov
lea
not
lea
out
fcom
int
cld
in
int3
fcomp
pop
or
pop
fmul
out
jge
scas
outs
jle
mov
ret
ss
aas
push
fld
add
repnz
sub
and
mov
jecxz
outs
sub
xchg
xchg
sub
(bad)
les
xlat
mov
inc
dec
mov
and
ss
movs
dec
mov
std
sub
add
jae
jmp
sbb
pop
stos
shl
xchg
cld
cmp
inc
dec
xchg
dec
shr
or
jo
pop
mov
lods
push
cdq
jnp
out
cmp
xchg
cmp
pop
mov
aas
dec
xor
mov
mov
xor
in
inc
int
or
rcr
pop
outs
push
out
adc
in
xchg
cli
mov
add
adc
mov
jecxz
inc
movs
mov
dec
fist
adc
add
sahf
push
sub
sub
pusha
loopne
push
jmp
jnp
movs
xchg
dec
sbb
xchg
jns
outs
xchg
push
xchg
xlat
popf
inc
fldcw
push
mov
cmps
sub
fidiv
pop
es
shl
add
out
dec
mov
pop
in
jecxz
enter
enter
and
cmp
jns
lods
pusha
in
ja
adc
leave
scas
push
xor
push
leave
call
in
or
cmp
adc
hlt
pushf
lock
mov
push
fwait
push
push
xor
out
jmp
inc
sti
xor
push
scas
cmp
movs
sub
push
in
jbe
push
(bad)
ficom
dec
cmp
mov
cmp
aam
int3
pop
test
lea
jns
sbb
sub
mul
and
jge
push
cli
add
bound
shl
stos
xor
mov
int
xchg
fs
pop
fnstenv
imul
movs
sbb
into
jns
cld
mov
shr
and
mov
leave
std
inc
fistp
sbb
mov
mov
mov
stos
loope
sti
arpl
in
push
jl
xor
out
ja
lds
dec
cld
push
popf
xchg
scas
mov
(bad)
int3
sti
xchg
nop
sbb
sub
jnp
jb
push
sub
mov
or
movs
jo
pop
es
cmp
or
in
mov
fmul
int
sar
jmp
adc
pop
movs
inc
(bad)
idiv
lds
sub
jmp
(bad)
xchg
in
xchg
test
mov
mov
jno
jns
sar
mov
jb
js
pop
fmul
outs
pop
repz
cmps
stc
pop
fninit
popa
(bad)
or
jno
cmp
ret
jne
pop
bswap
push
and
sub
adc
std
sahf
push
cmps
fcomp
popa
call
push
outs
call
mov
(bad)
out
outs
xor
(bad)
call
movs
push
popa
dec
or
je
scas
sub
cmps
pusha
xchg
adc
ins
sar
push
in
jno
mov
xchg
jle
in
loope
mov
movs
loopne
adc
push
sub
mov
and
sahf
adc
jnp
fisttp
fstp
pop
push
mov
and
adc
jbe
(bad)
repz
jmp
neg
hlt
add
out
es
retf
test
int
fbld
mov
mov
mov
(bad)
movs
test
mov
push
imul
dec
nop
int
les
and
add
xchg
push
stos
pop
or
fdivr
aam
cld
inc
pop
rcr
adc
xor
ins
mov
fstp
pop
pop
clc
lods
push
jmp
shl
mov
loopne
push
movs
fstp
pop
daa
imul
mov
imul
inc
mov
iret
inc
sub
pusha
mov
xchg
jmp
and
lock
push
cdq
movs
ror
pop
in
adc
sub
cmps
mov
inc
mov
push
es
xchg
ss
jo
jmp
repnz
jbe
dec
cmp
mov
jl
scas
jmp
(bad)
(bad)
or
mov
pop
xlat
aaa
cmp
aad
fild
loop
mov
stos
jp
aam
pushf
dec
movs
pushf
movs
test
pop
icebp
dec
sahf
loopne
fimul
sbb
and
xchg
stc
push
fisub
popf
scas
jne
sbb
inc
sbb
inc
repnz
sti
mov
mov
xor
inc
mov
pop
and
pcmpeqd
xchg
test
xchg
nop
popa
ret
dec
xchg
mov
jns
out
mov
mov
jle
loopne
cmp
mov
jecxz
or
xchg
lods
rcr
pusha
cmp
sub
fs
into
iret
mov
fwait
push
lock
sbb
cmp
daa
xor
sub
jp
xor
ins
les
ja
imul
mov
ffree
jb
push
cdq
scas
int3
sbb
and
mov
pop
sub
adc
jle
ja
push
and
lock
sbb
pop
aaa
push
(bad)
ins
xlat
xor
imul
and
clc
jbe
std
xor
stos
retf
sub
aad
dec
pop
fwait
or
mov
shl
pop
pop
and
mov
mov
cli
cmps
ret
jmp
dec
push
jnp
xchg
xacquire
cmps
(bad)
push
int3
or
mov
cs
mov
fld
les
mov
mov
xor
push
icebp
fiadd
push
aam
push
lods
mov
jmp
mov
pop
xor
xor
out
popf
or
test
fdiv
fxch
(bad)
mov
mov
xchg
pop
inc
mov
jne
xor
xchg
mov
jno
or
fnsave
and
push
daa
xchg
rcr
pop
xchg
pop
jne
(bad)
test
xlat
ror
jno
stos
sub
pop
dec
mov
cmp
retf
pop
mov
scas
mov
sub
ss
ins
shr
xchg
jns
dec
push
mov
mov
pop
mov
outs
jmp
adc
mov
pop
call
mov
jmp
add
or
jae
pusha
pop
add
adc
ret
adc
add
icebp
sar
xchg
repnz
push
arpl
xor
hlt
out
jge
add
push
mov
and
outs
out
xlat
xor
adc
sub
(bad)
fidiv
int
dec
out
hlt
clc
in
enter
xor
adc
sbb
inc
jge
inc
xlat
sub
dec
push
pop
ret
adc
xchg
out
push
push
dec
js
inc
clc
sbb
push
and
mov
mov
jecxz
xchg
mov
ins
adc
in
call
das
dec
sub
stc
(bad)
push
push
sub
inc
(bad)
aad
sub
jle
test
push
fsubr
or
sti
aad
add
mov
loopne
int
inc
add
jmp
xchg
xchg
pop
xchg
add
stos
test
mov
push
push
jmp
imul
mov
movs
jbe
jbe
je
outs
(bad)
add
sub
std
mov
leave
mov
rcl
into
add
sbb
inc
(bad)
adc
ins
outs
aaa
mov
and
stc
loop
pop
xor
ins
push
dec
call
pop
cld
jbe
mul
adc
xor
cmps
or
rol
in
shl
fadd
push
daa
loopne
inc
cmps
or
mov
mov
sub
inc
or
pop
int
xor
jns
sub
retf
lods
stos
stc
jo
xlat
movs
mov
or
add
call
out
repnz
or
call
aaa
vmread
fldenv
jp
cmp
push
mov
adc
dec
and
xor
into
test
outs
add
sub
adc
mov
stos
cld
pop
dec
push
loopne
mov
xchg
or
scas
xchg
xor
mov
mov
mov
xchg
outs
cmp
inc
mov
rcl
jp
into
rol
cwde
in
mov
mov
ret
in
stos
pushf
mov
repz
xor
or
fsubr
lods
push
mov
daa
add
fwait
aas
jmp
stos
int
outs
xor
push
pop
inc
pop
jle
mov
mov
mov
pop
mov
in
cmp
push
mul
xor
jg
cmps
xchg
cmp
and
push
fcmovu
ja
cwde
pop
cmp
repz
mov
and
mov
icebp
jb
add
push
xchg
iret
add
mov
int
dec
sub
pop
xchg
sbb
aaa
jnp
sbb
jb
jecxz
add
fadd
jae
xor
inc
les
jno
cmp
xchg
repnz
mov
retf
inc
dec
arpl
mov
int
jmp
nop
icebp
movs
dec
cmp
add
lds
mov
outs
sub
jne
shr
ds
jp
sub
repnz
les
loope
xchg
sbb
jmp
dec
lahf
dec
aam
lods
adc
mov
lahf
rol
ds
xor
popf
cmp
gs
loop
inc
rcl
xchg
and
in
jno
imul
and
push
adc
or
xor
jl
lods
popa
mov
and
shl
std
mov
repnz
jmp
call
mov
inc
rol
fldl2t
mov
pop
arpl
cmp
data16
sbb
sar
jo
call
dec
lock
adc
fst
mov
push
pop
cmp
ins
mov
push
pop
shl
cmc
adc
lahf
movs
(bad)
push
push
push
and
dec
jbe
gs
mov
fistp
xor
js
and
fistp
in
xor
outs
scas
and
dec
xor
jbe
pop
lods
cdq
xchg
inc
mov
gs
cmps
sbb
mov
cmp
inc
add
cwde
inc
xor
repz
cwde
fs
popa
outs
jbe
retf
inc
iret
mov
sbb
push
cmp
fs
jle
dec
or
loopne
adc
and
fcomp
inc
sub
push
sub
jg
pushf
add
and
push
adc
or
mov
aad
sbb
ret
sub
pop
shl
shl
pop
and
pop
and
jo
or
inc
jns
fld
xchg
and
xchg
(bad)
popa
mov
cmp
aam
enter
fdiv
mov
sub
dec
xchg
xor
addr16
sbb
in
repnz
sbb
inc
cmp
xchg
mov
dec
popf
xsave
into
fistp
jl
add
scas
test
ins
fadd
mov
push
fnstcw
add
hlt
jno
jo
std
mov
mov
(bad)
call
sar
xlat
and
fild
pop
inc
rcr
cmc
jb
out
push
sbb
add
dec
mov
xor
sub
movs
icebp
loope
ret
inc
and
xor
mov
jne
mov
nop
frstor
sbb
sbb
add
shl
sbb
in
mov
sbb
cmp
(bad)
xlat
(bad)
sub
push
das
sub
ret
xchg
out
sti
sar
sahf
sub
inc
push
mov
nop
pop
out
ret
sahf
frstor
ins
mov
mov
(bad)
enter
js
shl
xchg
sbb
mov
sbb
adc
add
fcmovnbe
loope
xchg
jne
and
push
scas
sbb
mov
cdq
iret
cli
imul
stos
jbe
jmp
lods
mov
pop
(bad)
nop
and
cmc
imul
shl
and
movs
and
fisttp
xlat
test
xlat
xor
(bad)
frndint
inc
or
inc
retf
sub
scas
mov
mov
lods
and
pop
xor
pop
sbb
ret
sub
test
imul
pop
or
out
xchg
addr16
mov
inc
pop
icebp
lods
push
or
pop
jae
bound
xor
daa
xor
in
aaa
das
pop
clc
aaa
jae
pop
mov
mov
mov
cmps
(bad)
lea
ret
sub
ds
mov
jl
mov
cli
ins
sub
scas
pop
fld
fsub
outs
pop
(bad)
sub
push
popa
aam
pop
sar
add
sub
loopne
mov
jo
mov
js
sub
gs
jle
pop
dec
faddp
add
mov
mov
aam
int
dec
gs
movups
dec
in
mov
sub
cmp
pop
pop
or
mov
out
out
sahf
int
push
or
push
int3
stos
rcr
imul
lods
lods
cwde
or
test
push
lods
std
out
adc
arpl
push
lahf
or
in
xchg
pushf
dec
pop
mov
dec
add
and
loop
clc
(bad)
mov
imul
in
pop
dec
pop
sub
inc
jle
jle
leave
or
mov
imul
push
pop
hlt
dec
sar
add
xchg
xor
rcr
mov
rol
jo
std
loopne
call
loopne
mov
ds
je
xor
sub
sub
in
test
std
bound
dec
cdq
sbb
sub
inc
fmul
cmp
aaa
pop
jbe
dec
dec
push
adc
mov
mov
(bad)
sahf
pop
add
fsubp
lods
ins
pusha
clc
stos
dec
cmp
jecxz
dec
mov
adc
cmc
out
cli
repnz
sbb
add
shl
sub
mov
imul
inc
lods
movs
cld
mov
fs
dec
and
jge
les
in
sbb
inc
or
outs
adc
and
or
icebp
icebp
sbb
pop
mov
movs
stc
mov
inc
cmps
mov
lods
mov
mov
pop
sub
movs
sub
push
pop
push
aaa
mov
add
push
or
mov
popfw
imul
jl
xor
mov
fistp
repz
imul
cdq
ror
or
adc
mov
cld
adc
cmp
fnstsw
popa
test
push
pand
push
ss
neg
lods
out
push
loop
add
or
and
or
cld
cmp
jae
pop
cmp
inc
or
nop
dec
fistp
shl
adc
bound
retf
dec
pop
mov
data16
sub
in
mov
push
imul
or
not
icebp
sub
cmp
clc
addr16
lods
ins
xchg
(bad)
lock
sub
xor
or
popf
mov
fisttp
dec
std
data16
test
push
xor
mov
ret
lock
mov
stc
int3
jmp
and
fwait
dec
loope
jo
pop
inc
leave
shl
xlat
(bad)
ss
in
push
idiv
xor
jle
test
lock
movs
pop
inc
shr
push
fcom
sbb
dec
data16
fisub
jle
inc
cmp
aaa
movs
xchg
idiv
sbb
(bad)
imul
cs
xchg
(bad)
frstor
sub
or
std
sub
dec
adc
sbb
mov
xor
bound
mov
cli
repz
mov
lods
loop
mov
out
in
xor
xchg
mov
aam
and
mov
sub
xchg
jg
xchg
mov
adc
cmps
pop
xchg
mov
add
pop
xchg
push
jnp
mov
inc
dec
inc
jp
sub
cli
int
js
push
in
pop
icebp
push
rcl
daa
int3
push
xor
and
into
mov
movs
outs
jecxz
cli
xor
xor
nop
cld
cs
cwde
aad
sub
add
ror
cmps
mov
xchg
mov
je
or
cld
repnz
(bad)
dec
xor
ss
mov
shl
fstp
daa
pushw
pushf
cmps
inc
jmp
test
movs
jb
out
in
jle
and
or
pop
sbb
dec
xchg
data16
add
mov
xchg
cmp
push
fist
test
jmp
maskmovq
fs
mov
jg
xchg
sbb
in
in
xchg
add
repz
imul
xchg
ins
movs
push
retf
add
test
outs
sub
push
push
sub
dec
imul
in
push
(bad)
gs
sbb
push
addr16
mov
cwde
dec
dec
and
cwde
adc
(bad)
pop
push
aad
ja
mov
mov
cwde
push
das
adc
push
movs
rcr
nop
(bad)
pop
(bad)
ja
mov
dec
fcomip
in
push
dec
out
scas
and
pusha
dec
movs
in
ss
(bad)
test
retf
adc
cmp
rcl
fisttp
mul
pop
push
or
out
fisub
in
inc
ja
arpl
popa
xlat
out
aam
add
(bad)
call
sbb
mov
mov
out
loopne
aas
lods
fwait
test
ins
xlat
and
loopne
xchg
loopne
call
push
loop
sbb
mov
pop
fld
pop
icebp
add
and
sbb
dec
and
call
ja
jl
push
pop
push
add
xchg
dec
sub
mov
sub
xor
cmp
or
mov
loope
retf
push
icebp
push
mov
xchg
pop
data16
xchg
addr16
pop
cmp
das
aad
aas
std
pop
sbb
jae
sbb
mov
enter
stc
loopne
sbb
sub
sbb
adc
sahf
adc
sbb
frstor
mov
out
retf
dec
ret
adc
test
sbb
sar
in
pop
cmps
inc
push
cwde
inc
sbb
jecxz
cmp
xchg
adc
nop
fisubr
xchg
or
adc
scas
or
adc
add
mov
or
and
push
add
cmp
enter
sub
dec
imul
sbb
mov
cmp
jecxz
ja
pop
pop
dec
inc
add
aam
mov
and
mov
xchg
and
jae
cmp
mov
xchg
adc
mov
sahf
out
jmp
xor
push
jb
rcr
mov
scas
lods
inc
push
xor
cmc
in
nop
push
aas
das
(bad)
movs
dec
ins
xor
ins
mov
pop
pushf
ja
stos
xor
xchg
imul
hlt
fisubr
xchg
mov
pop
dec
pop
in
sahf
xchg
dec
out
loope
mov
ja
nop
mov
jg
pushf
cmps
ret
in
mov
mov
inc
pop
test
popa
push
ja
add
(bad)
push
xchg
lahf
mov
mov
inc
out
addr16
jne
xchg
scas
mov
das
xchg
cmp
movs
pop
mov
add
inc
push
je
addr16
ret
sbb
inc
pop
dec
(bad)
sbb
inc
dec
fmul
out
xchg
dec
add
or
lods
mov
mov
jmp
cs
mov
mov
jmp
enter
pop
cs
retf
dec
test
xor
inc
comiss
dec
mov
and
(bad)
mov
ins
stos
in
scas
ins
mov
fst
hlt
sub
dec
lds
pop
pop
in
(bad)
jp
pop
and
cmp
sbb
outs
push
or
outs
mov
lock
fisttp
lods
rcr
mov
jmp
jmp
mov
xor
and
pop
jmp
pop
mov
push
adc
int3
mov
int3
leave
ss
mov
rol
retf
lahf
fstp
and
out
xor
inc
cmp
ret
je
mov
hlt
imul
adc
das
mov
in
stos
aas
call
das
adc
add
push
enter
scas
mov
jnp
das
pop
sbb
mov
adc
dec
imul
sub
enter
dec
add
or
popa
cli
pop
movs
jg
scas
pop
or
cmc
sti
cs
sub
sub
ins
retf
adc
mov
push
outs
test
push
aad
cwde
add
add
pushf
pop
and
xchg
cdq
aaa
jo
shl
or
xor
fs
rcl
sbb
loope
(bad)
adc
mov
jmp
sbb
scas
stc
mov
and
xor
xor
das
xor
push
cs
pop
movs
call
pop
push
and
inc
mov
dec
xchg
popa
adc
push
mov
shr
mov
sar
sub
fiadd
inc
mov
or
ror
rcl
xchg
movs
and
stc
jg
movs
push
dec
and
mov
xchg
shl
xor
push
aas
sub
pusha
cmp
retf
inc
inc
rcr
arpl
adc
int
or
(bad)
push
cmp
sbb
xor
jno
sbb
sub
mov
inc
and
repnz
lea
cwde
cdq
mov
inc
dec
jl
jb
int3
fwait
lock
add
shl
cdq
cwde
repz
enter
inc
aam
mov
jecxz
xor
movs
inc
xor
lahf
fisub
ror
mov
out
ins
(bad)
xchg
push
inc
or
retf
jecxz
mul
ins
jb
inc
cmp
mov
sbb
shl
mov
out
add
outs
mov
int3
cmp
xchg
or
pop
out
icebp
cmp
xchg
jnp
test
push
enter
xchg
dec
loopne
inc
fs
push
aaa
jnp
mov
jecxz
ror
pop
fldenv
add
shr
push
outs
aas
adc
inc
xchg
lods
(bad)
or
push
es
(bad)
push
mov
nop
or
push
adc
inc
jmp
mov
ss
mov
xchg
pop
mov
pop
out
in
pushf
(bad)
std
xor
rol
out
aam
mov
pushf
sub
add
inc
jl
js
aad
je
setne
imul
ficomp
jae
sub
adc
loope
stos
mov
lds
fsubr
(bad)
xchg
ja
push
aam
repz
sahf
sub
inc
ds
xchg
cmp
pop
mov
jge
add
or
mov
jmp
push
test
push
aad
clc
fistp
mov
ja
sbb
pushf
je
or
arpl
scas
pop
inc
pushf
fs
or
shr
and
dec
movs
addr16
pop
push
or
mov
pusha
push
fimul
mov
xchg
xchg
xor
push
pop
ins
mov
mov
dec
mov
push
push
in
imul
jmp
sub
mov
mov
les
lods
bound
push
in
cmp
inc
clc
mov
fdiv
das
mov
and
and
bound
push
out
add
ror
cmp
shl
push
mov
cmp
dec
scas
cmp
int
ret
retf
int
adc
xchg
xlat
pushf
add
fsubr
out
pop
adc
stc
inc
js
dec
mov
push
jne
mov
add
sub
xchg
mov
fisttp
push
cmp
mov
add
call
cmp
bound
pop
in
bound
add
xor
mov
imul
adc
push
jbe
int
jg
adc
inc
sub
add
and
sub
sahf
mov
mov
push
sub
inc
idiv
xlat
in
xchg
cli
stc
(bad)
ins
sub
mov
add
aas
mov
jl
push
call
fisttp
push
imul
and
dec
fcomi
cmp
mov
push
in
push
mov
retf
cs
div
mov
mov
repnz
ret
push
pop
(bad)
lods
push
and
aad
mul
mov
into
fwait
pop
adc
xchg
xchg
sub
imul
retf
mov
mov
add
sbb
sti
test
(bad)
neg
sti
push
pop
(bad)
jmp
in
inc
cmps
dec
sahf
add
mov
add
sti
inc
and
and
(bad)
pop
push
call
sub
inc
pop
mov
movs
pop
pop
aas
mov
sbb
stos
in
cwde
ins
in
inc
lock
push
jnp
mov
jecxz
std
mov
scas
inc
jne
mov
sub
stos
sti
add
sar
sahf
inc
pop
or
mov
loop
mov
dec
retf
out
pop
(bad)
mov
push
and
das
mov
in
retf
cmp
dec
popa
or
jge
push
jmp
sub
fnsave
cmp
add
adc
ins
xchg
jbe
imul
(bad)
(bad)
xor
shl
ror
sub
jle
pop
repnz
xor
cmc
ror
cmp
cmc
lock
mov
in
add
aaa
(bad)
lahf
mov
or
inc
(bad)
outs
and
sbb
cs
test
jns
or
jecxz
push
aas
jle
addr16
adc
xchg
les
loop
mov
mov
rol
mov
mov
cmps
stos
xor
test
mov
test
mov
sbb
inc
stc
in
cmp
std
bound
xchg
add
sahf
mov
or
adc
call
add
inc
inc
ret
adc
jb
mov
and
or
test
xor
hlt
in
dec
(bad)
jae
icebp
ret
test
pop
pushf
adc
jge
mov
dec
out
push
popf
not
lods
inc
cmps
cmp
jne
jbe
call
xchg
pop
fild
aas
add
std
lds
jge
je
jns
jmp
xchg
mov
icebp
call
cmp
inc
sbb
lock
(bad)
das
pop
mul
not
mov
push
lods
mov
ja
loopne
dec
stos
je
cmps
(bad)
mov
in
inc
jne
adc
mov
jo
outs
push
ins
mov
jecxz
shl
add
push
dec
or
repnz
ret
nop
inc
xor
xchg
mov
push
push
retf
pop
sahf
pushf
xchg
inc
inc
shr
inc
imul
mov
aam
fmul
push
aam
push
inc
or
movs
jg
jp
and
pop
mov
(bad)
inc
xor
or
arpl
lods
cmc
dec
cmps
sbb
jl
jmp
pop
popa
xchg
xchg
int3
xor
sub
xchg
(bad)
lods
jg
(bad)
in
inc
gs
mov
xchg
mov
aaa
shr
jnp
sub
jl
stc
cmp
push
jo
and
push
mov
jb
push
inc
dec
mov
outs
imul
jge
xor
stos
in
mov
pop
sbb
rol
pop
inc
sahf
ins
add
xor
jle
dec
(bad)
fild
mov
add
sahf
rol
xor
dec
js
xchg
mov
push
push
adc
inc
or
jns
shl
and
sub
test
inc
out
push
jmp
es
in
pushf
repz
xlat
ss
sub
xchg
cmp
div
mov
or
inc
and
cmps
mov
sbb
idiv
jmp
push
push
pop
mov
xor
sub
pushf
mov
mov
add
rcr
test
lods
mov
pop
call
push
xchg
jno
enter
mov
icebp
jmp
add
jge
and
and
or
or
pop
pop
mov
mov
mov
mov
aad
fistp
mov
cmp
retf
outs
test
aas
in
xchg
fdivrp
es
mov
sti
fsub
xor
push
in
nop
adc
test
pop
xchg
cmp
inc
and
xlat
scas
sbb
into
inc
lods
xchg
sub
sub
cmps
clc
pop
aam
js
and
shr
mov
inc
jmp
std
add
aad
jmp
inc
push
shl
hlt
xchg
test
add
int3
xchg
(bad)
cmp
cld
push
inc
or
mov
bound
mov
lods
nop
frstor
mov
adc
mov
movs
retf
enter
ja
les
and
push
out
in
adc
rcr
jo
fwait
pop
xchg
push
test
ja
jp
std
cdq
jb
jmp
retf
adc
mov
loopne
pop
mov
rcl
cld
int
int
out
nop
mov
push
sbb
or
imul
sbb
loope
int3
sub
retf
aaa
neg
push
pop
sub
add
cmps
lahf
sbb
shl
xor
(bad)
addr16
and
das
out
jp
mov
mov
cmp
xchg
push
imul
(bad)
test
ins
cmp
stos
sti
aam
and
jne
ret
and
outs
popf
fdiv
fisttp
or
call
and
mov
rol
mov
lock
loop
xchg
sub
dec
mov
mov
mov
test
push
call
cmp
adc
add
cli
(bad)
xchg
mov
xchg
push
test
and
jl
fsub
pop
mov
int
cmp
cmp
sbb
inc
loopne
mov
shl
jle
movs
cmp
jno
(bad)
xchg
pop
cmp
add
cmp
cmc
mov
jb
and
mov
sbb
adc
pop
jecxz
das
outs
out
adc
loop
int
mov
test
imul
xor
test
rcl
mov
jbe
pusha
shl
dec
mov
and
and
stos
dec
clc
loopne
xchg
mov
jle
sbb
dec
push
into
fsubr
dec
dec
add
mov
mov
enter
outs
sbb
je
(bad)
jno
pop
les
add
inc
test
je
mov
not
cmc
pop
dec
aaa
cmp
sbb
sbb
iret
pop
rol
out
stos
inc
lds
inc
outs
rcl
push
adc
inc
mov
lods
out
pop
(bad)
rcl
mov
cmp
sbb
cli
xor
jns
fbld
add
fnsave
add
xor
sub
jge
les
mov
dec
cmp
gs
cld
add
inc
adc
into
int
sub
stos
xor
mov
xchg
pop
mov
loopne
and
xchg
inc
push
call
shl
or
inc
aaa
lahf
in
in
aam
push
movs
or
pop
dec
add
jae
mov
stos
mov
push
mov
push
jmp
jnp
imul
inc
loop
jg
ret
dec
retf
mov
fwait
leave
jnp
sub
ins
test
ret
mov
sti
idiv
add
jno
xchg
adc
adc
mov
xchg
ret
pushf
push
stc
sub
sub
popf
and
movs
fdiv
fs
loope
pop
cmp
gs
in
cmp
stc
mov
aaa
xor
ds
in
mov
cmps
jns
popa
(bad)
xchg
fs
(bad)
clc
loope
and
jp
sub
sbb
xor
test
xlat
dec
js
outs
movs
and
ins
repnz
aad
aaa
and
cmp
(bad)
push
cmp
jae
xor
push
inc
mov
push
dec
(bad)
pop
not
pop
cs
ja
cmp
jbe
add
(bad)
sbb
dec
add
mov
(bad)
jo
adc
aas
add
cmc
cli
es
das
mov
lock
bound
xchg
adc
pop
(bad)
jne
ror
push
stos
adc
fcom
data16
or
stos
inc
stos
fld
mov
rcr
ss
popf
enter
mov
mov
jg
(bad)
jnp
fdivr
xor
push
je
jle
cmp
mov
cmps
xchg
jnp
jno
pop
bound
lock
inc
repnz
daa
das
in
jecxz
scas
jmp
dec
inc
mov
cld
mov
fwait
inc
aam
shl
inc
xor
pop
test
xchg
pop
xchg
inc
pop
or
add
dec
add
xor
(bad)
fnstcw
and
movs
les
cli
pop
inc
data16
push
loopne
pop
push
daa
inc
rcl
fcomp
loopne
pop
adc
xchg
ffree
in
fcomp
pop
cmp
ret
and
jecxz
xchg
out
or
dec
dec
js
xor
push
fwait
(bad)
and
push
pushf
sub
pop
(bad)
sti
(bad)
arpl
jb
clc
jmp
push
out
scas
adc
add
and
popa
(bad)
jo
xor
test
xlat
push
rcr
nop
lods
mov
adc
and
jge
push
fiadd
push
xor
imul
in
loope
adc
add
test
mov
scas
mov
jns
int3
retf
inc
push
cmps
lods
mul
add
mov
mov
xchg
mov
leave
xor
outs
mov
push
adc
int
mov
leave
add
scas
test
mov
mov
xchg
or
out
pop
out
dec
push
pop
cmp
add
dec
xchg
sahf
vucomiss
loope
leave
outs
bound
ret
cmp
in
jo
sbb
push
sub
test
iretw
add
popa
add
arpl
sbb
push
cmps
imul
outs
sub
ins
bound
clc
push
push
fmul
shl
push
xchg
es
fdivr
cdq
(bad)
cld
jle
pop
ins
and
in
sar
and
mov
call
mov
push
pop
test
mov
shl
outs
mov
cmc
jnp
call
push
outs
lock
jae
mov
pushf
jp
les
test
mov
jbe
retf
lock
mov
mov
push
sub
int
jne
sub
bound
or
sar
add
mov
or
dec
mov
pusha
adc
pop
adc
icebp
or
pusha
loop
rcl
fdivr
mov
in
(bad)
mov
xchg
fisubr
add
in
cmps
inc
pop
clc
or
push
xchg
aas
cli
mov
and
shr
add
fst
lods
dec
enter
into
inc
rol
mov
sbb
(bad)
mov
jge
pop
add
add
iret
mov
mov
movs
movs
and
inc
and
or
cmps
stos
and
lods
xchg
jmp
xchg
repnz
in
push
and
or
sub
fidiv
dec
inc
sahf
or
inc
mov
and
xchg
jmp
sub
outs
(bad)
xchg
ja
push
push
mov
ins
xor
pushf
inc
sti
sbb
mov
cmp
mov
and
adc
push
lahf
fnstsw
mov
hlt
popf
aad
mov
pop
cmp
or
in
(bad)
lahf
add
stos
rol
jns
jmp
pop
fs
cmp
or
mov
push
ins
mov
dec
jmp
jmp
or
pop
fisub
add
push
and
ficom
jmp
out
fistp
iret
xor
ror
pop
les
mov
jmp
in
(bad)
fistp
push
xor
xor
push
out
in
hlt
push
fwait
push
je
int
cld
sub
mov
ret
adc
out
call
jae
inc
loope
xchg
adc
jp
pop
dec
call
dec
xlat
add
cld
mov
jns
cmps
cmps
inc
push
test
js
pop
mov
jns
sub
and
lods
jp
mov
sub
and
clc
jnp
and
pop
push
push
imul
and
push
fcom
sbb
pop
pop
xor
mov
cwde
cmc
xchg
pop
add
mov
addr16
pop
rol
add
mov
sbb
test
mov
push
test
mov
out
es
inc
daa
int
sahf
sbb
jmp
es
xchg
mov
xor
fwait
icebp
bound
adc
sbb
adc
arpl
aaa
lods
push
out
mov
push
xor
repnz
pop
test
xchg
xor
inc
nop
icebp
adc
(bad)
hlt
inc
les
xchg
sahf
xchg
sahf
clc
add
pop
jecxz
push
stos
xor
xor
dec
or
lods
jae
dec
shl
sbb
and
test
loope
pop
jmp
leave
jno
std
or
sub
push
cli
fidivr
ins
out
imul
retf
das
retf
sbb
add
and
lods
cmps
mov
pop
(bad)
pop
repnz
sbb
xor
ja
aam
jp
jg
push
pop
cs
xchg
movs
or
inc
cmp
test
loopne
(bad)
sub
mov
out
dec
push
fist
mov
in
mov
sahf
stos
loopne
mov
sahf
or
retf
pop
paddsw
(bad)
cld
cwde
int3
mov
or
inc
mov
xor
fisub
jo
cmp
ds
cdq
pushf
daa
jbe
out
xchg
das
shl
(bad)
popf
shl
cs
sbb
mov
xchg
jp
mov
push
sbb
cs
(bad)
data16
cmps
jnp
mov
cwde
sub
mov
xchg
jl
jg
sbb
push
aaa
test
inc
jae
mov
aad
pop
jo
xchg
scas
ins
movs
lods
fisttp
pop
inc
retf
not
mov
jle
popw
pop
lea
push
add
inc
test
sbb
pop
ins
div
pop
xchg
es
push
xor
int3
lahf
add
or
(bad)
sub
xor
retf
stos
popaw
cld
sbb
pop
or
xchg
cs
push
inc
jns
mov
push
pusha
mov
xor
jno
mov
sbb
mov
int3
inc
adc
inc
xchg
pop
pop
imul
xor
xor
test
add
jl
cld
(bad)
mov
xchg
pop
sub
lods
ins
or
add
adc
sub
ja
mov
cmp
mov
inc
test
jmp
fwait
daa
popf
push
add
clc
cdq
add
rcl
cmps
jl
adc
shl
dec
mov
xor
lea
icebp
ror
nop
fld
sahf
xchg
iret
mov
test
(bad)
pop
popa
test
das
das
adc
in
(bad)
mov
cmc
inc
cmc
std
jae
stos
add
push
sub
js
add
in
lds
jl
test
fnstsw
call
out
push
dec
arpl
xor
mov
xor
aas
and
adc
outs
pop
cmp
xchg
(bad)
jp
mov
ja
sub
push
cmp
mov
xchg
sbb
(bad)
stc
or
cmc
imul
jne
fcmovne
loop
jb
out
xchg
dec
sub
lods
mov
mov
test
call
push
loopne
aam
cdq
push
and
stos
lods
mul
jecxz
sub
jo
mov
push
pop
int
sbb
xchg
shl
(bad)
pop
daa
in
sti
aaa
sub
mov
dec
xchg
neg
pop
pop
sub
movs
sub
cmps
cmp
mov
push
jg
add
stos
cwde
push
cdq
dec
loopne
sub
jle
cmp
mov
xchg
xchg
jne
shl
inc
and
das
pusha
retf
idiv
jmp
xchg
mov
test
jnp
(bad)
jbe
(bad)
push
push
fnsave
and
add
stc
lahf
mov
dec
xor
mov
sti
jge
push
push
xchg
sbb
in
mov
aas
inc
in
mov
push
inc
push
sub
xchg
enter
ret
and
(bad)
idiv
inc
push
in
mov
test
jmp
(bad)
loope
mov
dec
imul
jno
pop
add
add
dec
sub
mov
mov
lea
push
mov
xchg
push
adc
dec
call
inc
fiadd
xchg
mov
mov
sbb
mov
neg
dec
gs
ss
lea
(bad)
dec
sti
or
adc
mov
mov
and
or
jbe
push
mov
mov
mov
mov
sub
outs
hlt
sub
arpl
das
jns
push
inc
dec
jns
rcr
mov
les
pop
and
push
lock
and
sub
xchg
pop
(bad)
mov
and
push
(bad)
fcom
popa
rcl
fwait
stos
jg
mov
ss
xchg
pusha
adc
ror
xchg
pop
inc
fcomp
adc
ret
cmp
pop
ror
and
inc
cmc
call
ds
and
inc
mov
mov
dec
add
jae
mov
fwait
pop
cmp
(bad)
rcl
mov
int
xor
mov
mov
sub
add
pusha
jmp
xchg
cmp
test
jns
and
call
pop
icebp
lahf
repnz
dec
or
xchg
pop
arpl
fwait
icebp
into
retf
inc
rcl
sti
movs
push
in
adc
popa
(bad)
cmp
mov
sar
lods
inc
sti
mov
sub
jne
test
(bad)
repz
adc
mov
out
shr
lds
into
xor
inc
inc
cmps
iret
je
cmc
(bad)
stos
push
sub
inc
cmp
mov
fisubr
(bad)
jmp
mov
mov
loope
dec
call
test
cmp
(bad)
pop
sbb
addr16
inc
inc
cmp
push
sahf
inc
bound
cmp
stos
ss
(bad)
je
lea
sbb
stos
cmp
out
xor
mov
std
mov
daa
aaa
lods
pop
jnp
push
add
mov
xor
clc
add
dec
mov
in
ja
sub
lods
loopne
jns
adc
jge
inc
in
add
movs
test
(bad)
jns
mov
jecxz
push
daa
jg
mov
mov
cld
mov
loopne
fidiv
cs
repz
clc
mov
mov
out
test
sbb
sbb
mov
dec
movs
pop
cmp
sub
arpl
in
push
fsubr
cmc
out
(bad)
adc
push
adc
mov
stos
jle
pop
dec
dec
(bad)
push
jne
mov
mov
jecxz
sbb
pop
bound
xchg
ret
aas
push
es
loopne
push
shl
and
shl
push
jnp
arpl
pop
cmp
cmc
push
repz
push
(bad)
test
outs
into
sbb
inc
cmps
gs
sub
push
ret
and
lds
adc
(bad)
mov
mov
or
sub
ja
call
in
xor
pop
stos
clc
(bad)
jne
mov
int3
xchg
lods
sar
aam
mov
jecxz
pop
mov
jg
xchg
or
add
nop
push
cmps
push
sbb
aad
stc
push
pop
pushf
ins
lahf
icebp
fs
adc
jae
push
mov
mov
mov
aaa
fld
xor
xor
sbb
(bad)
aad
data16
xlat
pop
sbb
cdq
iret
cmp
pop
stc
xor
stc
mov
call
mov
nop
cld
cmp
mov
fnsave
pop
mov
cmp
cmc
mov
xchg
not
xchg
adc
push
xor
les
push
dec
xchg
and
or
jne
mov
test
pop
into
mov
jae
ror
or
add
in
pop
aaa
div
pop
add
mov
and
and
test
mov
(bad)
js
cs
in
fwait
ror
xor
fist
shl
movs
dec
ror
add
cmp
inc
out
aad
hlt
adc
rcr
ja
or
mov
hlt
xchg
add
pop
ins
fnsave
jg
sbb
mov
test
cmp
and
ret
pop
fiadd
dec
dec
jge
and
sahf
jge
mov
jo
sub
dec
xor
sub
stos
add
ja
scas
mov
add
popa
jnp
mov
ins
jl
(bad)
call
imul
aaa
ror
stos
jno
repz
cmp
cld
mov
in
pop
mov
pop
inc
cld
addr16
jge
mov
sub
std
push
xchg
and
loope
or
lds
push
ds
gs
cmp
xor
shl
js
mov
xchg
mov
jge
scas
ins
clc
pop
xor
xor
(bad)
aam
sar
pop
sbb
dec
cdq
cmp
lods
mov
push
add
rcl
retf
sbb
mov
imul
repz
xor
cdq
sub
ja
adc
lock
and
mov
es
adc
data16
mov
mov
mov
xor
fwait
into
xchg
dec
addr16
pusha
mov
mov
mov
push
scas
mov
jo
ret
mov
push
or
stc
add
movs
inc
lahf
pop
in
(bad)
inc
nop
push
pusha
jp
mov
and
pop
fdiv
or
clc
hlt
ja
pop
lods
pop
and
xor
call
popf
lods
icebp
jne
cmp
push
add
lds
jns
cwde
std
ins
mov
mov
sub
ret
ret
inc
pop
mov
sar
xchg
cmp
mov
and
pop
adc
loop
push
cs
ret
ficom
xchg
cld
jmp
lahf
cwde
(bad)
mov
loop
push
out
cmp
sbb
into
scas
push
jmp
daa
sbb
mov
adc
ins
xchg
mov
in
retf
aad
daa
mov
mov
and
mov
pop
pop
out
pop
jmp
or
call
mov
loopne
sahf
dec
test
sbb
mov
or
sbb
pop
mov
or
inc
push
cmp
mov
xchg
mov
jmp
push
push
sub
mov
iret
fwait
adc
in
inc
in
dec
jmp
xchg
scas
(bad)
lds
adc
in
inc
jo
inc
push
dec
shl
dec
sbb
js
mov
fs
mov
and
shr
jae
jmp
mov
aaa
pop
shr
push
sar
add
lods
mov
fwait
loop
pop
sbb
ins
ret
mov
mov
xor
sub
hlt
mov
mov
cmp
(bad)
(bad)
jecxz
je
xchg
add
jmp
add
and
ds
add
adc
adc
jno
add
call
lock
out
jp
or
cmc
loop
cs
hlt
(bad)
pop
add
mov
dec
push
jo
mov
js
adc
ficom
xchg
add
push
enter
inc
mov
(bad)
pop
jmp
and
sbb
inc
js
jo
pop
xchg
sbb
and
cmps
rol
mov
jnp
inc
iret
adc
cmp
rcl
cmp
ds
jl
call
sbb
sti
shl
xchg
mov
mov
aam
(bad)
sub
stos
adc
daa
sbb
mov
push
mov
jne
push
ins
jne
xor
jmp
mov
lds
gs
ds
rcr
push
aaa
loop
mov
and
jno
fimul
js
aas
adc
inc
jb
jg
shl
dec
push
mov
ss
shr
xchg
std
dec
sub
push
scas
add
mov
xchg
jge
(bad)
loopne
repz
adc
movd
scas
(bad)
ficomp
push
cdq
mov
sbb
push
gs
test
mov
xchg
sbb
in
(bad)
jmp
stos
mov
ret
mov
push
mov
pop
lea
test
loopne
loop
test
int
xchg
fwait
mov
sub
daa
xchg
mov
sub
dec
jle
jecxz
outs
aas
sbb
scas
mov
jmp
das
pop
fcmove
sub
inc
and
test
cmp
hlt
cdq
stc
aaa
call
or
xor
pop
jne
enter
mov
jle
and
outs
cmp
add
in
dec
xchg
pushf
jmp
ja
jbe
adc
xchg
mov
sbb
mov
(bad)
popa
push
fs
xchg
lock
add
push
fwait
and
sti
ret
cmp
mov
mov
(bad)
in
sbb
cmp
inc
enter
sub
mov
xchg
cmp
or
nop
loope
out
stos
add
jecxz
ficomp
mov
(bad)
jecxz
test
jae
add
je
adc
shl
xchg
lea
iret
add
push
outs
jnp
or
push
into
sbb
or
cmp
dec
cmps
ins
sub
mov
clc
aas
stos
push
movs
or
jo
hlt
into
cwde
iret
push
arpl
mov
and
mov
cmps
cmp
xor
fcom
call
mov
(bad)
scas
enter
mov
xchg
lods
pushf
mov
cmc
cdq
mov
out
xor
neg
jge
jnp
pop
not
push
ja
cld
(bad)
std
mov
es
test
in
leave
mov
inc
jl
or
sbb
or
mov
jne
inc
loopne
cwde
jae
addr16
mov
mov
jne
ret
lods
xor
or
adc
icebp
cmp
nop
inc
mov
loopne
xor
xlat
sub
mov
imul
cmp
jo
jnp
pop
(bad)
std
jno
pop
inc
(bad)
call
popf
lods
pushf
cmp
daa
sbb
cmps
and
lds
or
sbb
sub
(bad)
aad
mov
lahf
adc
cld
aam
into
push
mov
adc
pop
stc
fwait
xchg
pop
mov
enter
cdq
dec
cmp
pop
adc
jge
pop
je
inc
into
xor
mov
or
push
or
or
gs
scas
test
dec
fst
jnp
sbb
sub
dec
pop
das
mov
push
fsub
out
adc
dec
ins
xchg
pop
inc
repz
int
push
push
imul
or
(bad)
imul
sub
gs
(bad)
adc
add
call
sub
mov
xlat
pop
shr
xchg
loop
sub
pop
outs
pop
add
aad
push
arpl
cmp
test
neg
mov
cmp
dec
mov
(bad)
and
loope
jo
xchg
adc
and
xchg
or
inc
fild
nop
xchg
mov
and
pop
(bad)
xor
pop
sbb
xchg
add
push
cmp
inc
jbe
jl
lahf
xlat
in
retf
int3
mov
sub
xchg
inc
es
popf
lods
movs
jmp
test
pop
or
ins
cmp
lea
popa
or
add
outs
aad
push
dec
sbb
loope
outs
add
lods
aam
push
sar
and
xor
(bad)
sub
push
jge
xor
mov
xchg
pushf
inc
pushf
xchg
clc
push
sub
push
adc
out
pop
and
cmc
movs
rcl
idiv
jno
jg
lahf
mov
xor
cmp
xor
mov
adc
add
jnp
sbb
mov
(bad)
icebp
shr
outs
mov
xor
popf
pop
pushf
mov
ins
jb
mov
mov
mov
cmp
jo
inc
xchg
sub
xor
sub
and
test
add
mov
ficomp
or
pop
aas
mov
enter
jge
or
xchg
sbb
push
jge
add
les
dec
int
push
lods
outs
int3
(bad)
mov
pop
xchg
cdq
add
je
neg
retf
mov
sub
sub
mov
pop
xchg
cmp
pop
(bad)
dec
jmp
mov
or
clc
add
rol
and
(bad)
sbb
ja
out
outs
cmp
in
rcr
add
ja
cmc
loop
inc
imul
sbb
sbb
pusha
pop
aas
push
or
and
iret
xor
mov
sbb
dec
sbb
popa
dec
lahf
adc
or
call
xor
hlt
jg
mov
push
daa
cmps
jae
data16
int3
jl
lahf
sbb
adc
repz
mov
jge
sbb
dec
mov
mov
movs
fimul
les
and
movs
call
xlat
out
ffree
mov
jbe
(bad)
cmp
push
fadd
xchg
in
sbb
adc
dec
nop
sti
mov
cmp
dec
bound
jo
jmp
sbb
das
test
cmp
dec
loopne
sti
arpl
cmp
adc
xchg
jmp
cmps
dec
test
ret
xor
cld
sti
pop
pop
jl
js
and
mov
loop
push
push
test
inc
mov
sbb
(bad)
out
mov
cli
sbb
xchg
daa
sub
loop
mov
fcom
inc
add
hlt
dec
push
and
mov
ja
bound
test
push
pop
ins
mov
mov
int
retf
int
pop
mov
push
xor
aam
xlat
mov
leave
pop
inc
cmp
add
add
push
lock
inc
inc
mov
pop
push
adc
lods
in
call
(bad)
and
mov
pop
bound
shl
adc
dec
imul
cmp
std
xor
jo
mov
icebp
mov
jp
movs
xor
add
sub
cli
scas
push
push
out
dec
xchg
in
aad
or
repz
dec
mov
js
jmp
dec
leavew
inc
sub
lahf
(bad)
(bad)
out
fisttp
sar
push
clc
push
inc
scas
fwait
mov
scas
pop
sbb
cmp
mov
adc
mov
dec
cmp
xchg
imul
mov
mov
xchg
cmp
push
and
xchg
shl
lea
cmp
xor
shl
pushaw
out
and
mov
shl
mov
dec
mov
mov
js
add
mov
mov
xor
dec
enter
(bad)
and
test
and
dec
int
test
sahf
pop
inc
add
push
jg
adc
xor
xlat
jns
bound
inc
iret
dec
pop
jmp
loop
xchg
xchg
in
cs
inc
imul
fadd
into
jmp
jae
popf
jnp
int3
or
add
fdiv
addr16
retw
mov
dec
or
jbe
arpl
scas
nop
sbb
or
push
jp
push
out
mov
out
adc
xor
jnp
cdq
imul
xor
inc
mov
adc
dec
leave
mov
add
js
sub
test
rcr
push
xlat
push
int3
jge
stc
das
das
outs
or
xchg
rcr
cmp
leave
(bad)
adc
cmps
(bad)
mov
pushf
int
stc
jle
add
addr16
jl
rcr
xlat
popf
sbb
in
popf
(bad)
cld
or
cdq
jp
adc
xor
dec
pop
pop
cmp
mov
movs
and
sbb
and
imul
cdq
ins
pop
cwde
data16
adc
xor
daa
retf
(bad)
or
sub
pand
push
call
xchg
scas
call
dec
or
stos
cmp
dec
rcl
xor
pop
dec
sbb
mov
loop
jno
mov
aas
mov
pop
ret
jmp
test
jge
mov
movs
cmp
dec
(bad)
and
cld
or
ds
mov
and
push
or
cld
and
idiv
mov
fldenv
adc
mov
sbb
add
sub
popa
xchg
ret
(bad)
aad
xchg
and
mov
inc
pop
push
cmp
arpl
or
dec
je
add
and
out
sbb
pop
inc
(bad)
sub
adc
mov
cmc
adc
and
cmp
retf
sub
cs
dec
push
cwde
aam
mov
loopne
jecxz
dec
outs
push
data16
xchg
or
push
and
fs
aaa
or
shl
imul
mov
and
sahf
xchg
add
sti
jg
stc
mov
cmc
and
jg
dec
inc
and
push
adc
jno
xchg
or
(bad)
adc
jmp
sbb
and
stos
pop
stos
inc
inc
jo
das
xchg
sar
rol
in
ins
das
das
stc
dec
test
pop
bound
pop
loop
iret
in
fsubr
pushf
inc
cli
jecxz
cmps
adc
inc
adc
fs
test
test
and
jnp
add
inc
sub
push
out
add
mov
cmps
scas
mov
adc
jne
std
inc
in
xchg
adc
imul
mov
enter
lahf
movs
and
icebp
clc
cmps
and
out
mov
sbb
sar
push
daa
lods
repnz
xor
(bad)
imul
movs
add
out
test
xchg
jo
stos
or
inc
jae
mov
fcomp
and
bound
inc
ins
mov
js
sbb
data16
call
or
bnd
test
dec
jmp
pop
mov
cmp
mov
cmps
mov
paddsb
sahf
xor
adc
fs
xor
cmps
aas
ja
lock
cld
movs
cmps
in
retf
mov
pop
lds
xchg
mov
mov
inc
stos
fst
mov
test
mov
fcom
movs
push
ret
and
add
hlt
imul
cmps
popf
movs
sbb
lods
sub
cmc
add
icebp
cmp
nop
jg
lods
sbb
out
mov
adc
cmp
sti
dec
movs
jmp
sub
je
cld
jp
mov
cmp
test
cmc
xchg
pusha
test
mov
leave
jo
inc
push
pop
out
mov
adc
ss
das
cld
daa
jg
xchg
mov
in
inc
lods
addr16
lods
sub
jge
in
clc
sbb
lods
imul
aam
xchg
push
sbb
ret
call
sub
xor
cmps
std
cmps
dec
jmp
mov
movs
sbb
mov
pop
xlat
aad
sbb
mov
mov
cmps
addr16
das
adc
cmp
loopne
mul
xchg
int
nop
push
call
lds
mov
xchg
scas
clc
in
xchg
mov
retf
lahf
das
icebp
lods
test
arpl
and
and
test
jp
cs
mov
jnp
mov
inc
test
mov
cdq
out
mov
mov
xchg
fs
cmp
mov
ja
push
mov
or
xchg
adc
in
inc
pop
push
pop
jl
js
cmps
int
ror
sbb
xor
or
push
inc
sahf
jnp
push
mov
cs
adc
and
mov
gs
in
not
repnz
loop
dec
in
adc
pop
mov
sub
xor
push
pop
test
sbb
in
mov
pop
push
push
and
in
lock
xor
jo
cmps
lods
inc
xor
push
add
pop
push
pop
push
pop
leave
ja
ins
pop
jmp
jae
lds
lock
test
mov
pop
ss
xor
jle
push
arpl
and
sub
push
jl
push
pop
je
cwde
xchg
add
dec
fadd
pushf
jae
jmp
sub
lea
and
or
icebp
popa
push
daa
cmp
pop
cwde
sub
jbe
pushf
inc
push
push
scas
pop
or
clc
cli
in
out
jb
jl
pop
inc
mov
xor
xor
add
sar
lds
cmp
dec
js
push
push
ss
(bad)
pop
ret
jne
std
xlat
or
daa
add
leave
adc
adc
lock
mov
cmp
jmp
cmps
mov
aaa
push
xor
jnp
jno
pop
add
xchg
into
push
jne
fadd
jnp
stc
clc
or
sbb
dec
xor
stos
fwait
cmp
aaa
stos
out
sub
movs
push
jb
jl
push
inc
sbb
push
adc
hlt
xlat
jmp
inc
lods
test
jae
mov
xor
sub
ds
cmp
nop
sbb
inc
xchg
test
xchg
sbb
push
fst
fmul
sbb
out
mov
shr
aaa
(bad)
stos
fwait
out
push
dec
inc
shl
ds
ins
cmp
neg
std
out
ins
mov
stos
cdq
dec
mov
xor
(bad)
mov
jp
add
lods
dec
and
adc
mov
pop
xchg
cmps
or
jno
fstp
jg
repz
jns
int3
mov
out
adc
jge
fsubr
xor
mov
pop
movs
ins
xchg
fisubr
test
sub
cmps
mov
in
fs
pop
loope
imul
fdiv
mov
xchg
(bad)
shl
or
inc
ds
(bad)
rol
into
sbb
ds
shl
lea
popa
mov
cld
cld
xor
sbb
or
js
dec
in
in
in
dec
mov
std
outs
jbe
(bad)
and
mov
inc
xor
inc
pop
sub
fdivr
popa
out
and
pushf
sbb
sahf
sar
xor
xchg
(bad)
mov
mov
cmp
cmp
jo
cmps
ror
inc
push
fcom
sub
push
xchg
jmp
xor
sbb
bnd
mov
adc
stc
in
fistp
and
pop
jecxz
push
adc
mov
push
pop
in
xchg
fist
out
aad
mov
lock
loopne
(bad)
fwait
and
outs
outs
neg
outs
pop
ret
xchg
jb
fwait
inc
mov
sub
mov
rol
adc
stos
lahf
imul
sub
adc
repnz
mov
cwde
inc
test
scas
and
(bad)
in
cmp
cdq
add
cmp
jnp
das
out
or
or
add
jmp
adc
addr16
pop
cmp
movs
imul
xchg
lock
or
cwde
mov
imul
cmc
mov
loop
add
mov
push
jmp
mov
fwait
adc
push
mov
inc
stc
lock
xor
jbe
mov
jl
jg
and
or
mov
xchg
iret
sbb
sbb
icebp
shl
xor
jp
and
add
adc
mov
adc
jmp
xchg
in
lahf
test
mov
rcl
pop
cmp
dec
sbb
push
int
mov
mov
cwde
xchg
fidiv
aas
int
dec
and
mov
xor
jmp
xor
jo
push
mov
in
hlt
test
xor
xor
not
call
push
push
dec
add
adc
int
dec
cmp
dec
int
(bad)
sahf
mov
ss
(bad)
sbb
cmp
xchg
(bad)
push
outs
push
es
xor
inc
retf
sar
xchg
int
(bad)
dec
or
jae
cdq
or
scas
dec
into
mov
jbe
push
xchg
data16
cmps
js
mov
(bad)
cmp
enter
inc
push
push
cmps
scas
cmp
lock
pop
xchg
sbb
push
push
out
cdq
or
push
mov
fs
inc
aas
cmps
int
out
mov
cdq
mov
jnp
mul
scas
test
jp
icebp
xchg
lds
iret
mov
mov
rcr
lea
arpl
int3
push
jno
jle
adc
and
and
sbb
gs
cmc
fdiv
xchg
mov
mov
and
add
mov
dec
popf
popa
mov
mov
dec
mov
shl
retf
jmp
hlt
retf
lock
mul
in
(bad)
xchg
mov
xchg
enter
loopne
cmp
sbb
xor
pop
call
mov
ror
mov
or
mov
popf
leave
cdq
jl
cwde
mov
and
stos
add
pop
aaa
pop
or
addr16
es
push
sub
cli
scas
pop
sar
pop
inc
nop
in
xor
(bad)
in
in
xor
pushf
out
cmp
retf
sbb
and
cmp
cmc
mov
xchg
pop
push
pop
cmp
push
jl
shr
and
jo
retf
xchg
enter
test
pop
mov
icebp
mov
ins
fcom
jle
xchg
cmps
stos
jbe
and
push
jno
fnstcw
mov
xchg
add
push
das
mov
push
jo
push
test
dec
cdq
xor
xor
movs
pop
icebp
push
lods
mov
iret
shl
xchg
add
sbb
mov
daa
fs
sbb
sbb
mov
retf
fistp
mov
test
or
ret
jb
push
dec
sub
mov
xor
sbb
push
call
repnz
cmp
fisttp
or
js
cmp
int3
xchg
xchg
mov
popa
inc
sahf
cli
inc
retf
std
inc
cmp
ret
inc
jne
aam
push
jnp
xor
mov
stos
adc
js
sub
fild
push
mov
jmp
fcmovnb
mov
xchg
sub
out
data16
syscall
dec
loop
pushf
cmps
rcr
imul
outs
fadd
adc
or
dec
mov
lds
or
popf
mov
scas
xor
inc
jbe
mov
push
lds
xor
adc
shr
int
mov
into
sub
mov
inc
and
scas
cs
sti
xchg
popa
cmp
xchg
scas
pop
cwde
(bad)
stc
xor
and
cld
mov
test
xchg
retf
js
sub
mov
xchg
out
inc
test
or
mov
stos
jae
jle
xor
rcl
in
int
xchg
mov
jg
mov
add
mov
es
push
sbb
dec
jne
cs
cmps
xor
sub
mov
loope
jg
aam
xchg
cmp
jmp
push
push
popf
pop
push
pop
call
xor
ret
cmps
dec
sbb
loope
pop
jecxz
(bad)
movs
sbb
jne
arpl
xor
xor
lea
pop
rol
repnz
push
pop
push
and
lock
cld
popf
repz
jmp
cmp
adc
les
pop
xchg
ficom
stc
int
dec
jp
dec
inc
mov
jmp
adc
nop
mov
and
pop
xor
loopne
fnsave
xor
rcl
test
fwait
lock
loope
pop
xchg
sub
pop
jl
daa
pop
push
scas
mov
lahf
mov
ins
lods
ds
sbb
push
sub
sbb
shl
enter
addr16
pop
popf
clc
ror
popa
in
arpl
test
(bad)
or
push
int3
daa
in
inc
mov
pusha
add
mov
aas
test
push
fwait
sbb
add
ds
xor
mov
and
xor
dec
mov
sbb
pop
(bad)
gs
jo
mov
(bad)
cmc
dec
push
sub
push
aaa
push
xchg
xor
sbb
adc
stos
out
sbb
xor
jb
fwait
pop
fisttp
ins
jns
pop
(bad)
pop
imul
cdq
push
(bad)
sbb
ds
mov
or
pop
or
jb
xchg
sbb
daa
lds
call
cmp
cld
in
or
aas
imul
ret
mov
aad
push
mov
enter
pop
retf
retf
(bad)
pop
pop
repz
js
fild
out
sti
cmp
pop
mov
sar
lds
push
add
mov
and
dec
mov
pop
jno
lods
in
cli
or
icebp
aaa
retf
arpl
xor
rcl
adc
test
sub
sbb
dec
jnp
xchg
jo
out
mov
sub
int3
or
loop
in
jae
xor
push
and
push
push
call
xchg
mov
(bad)
fmul
(bad)
xchg
push
test
pop
arpl
sbb
fmul
leave
mov
or
adc
int3
stos
push
into
es
bound
mov
mov
dec
or
xchg
fwait
in
adc
push
test
adc
sbb
stos
mov
xchg
les
xchg
stos
push
xchg
push
inc
mov
cld
sub
jns
icebp
mov
pop
ror
fnstenv
mov
iret
repz
leave
hlt
icebp
xlat
into
jge
or
jno
mov
ja
sti
out
(bad)
fidivr
into
jns
out
xchg
test
or
cli
dec
cdq
mov
xor
mov
in
stc
pop
or
mov
aad
mov
pop
aaa
xchg
js
scas
loope
loope
xor
std
data16
cmp
adc
mov
lds
fnstcw
mov
sbb
inc
ins
sub
test
sub
pusha
adc
push
push
mov
lea
mov
or
iret
push
cmp
sub
or
add
pushf
push
pop
and
mov
enter
push
mov
xchg
fild
xchg
lods
shl
lods
xor
cmp
out
imul
rcl
sbb
fwait
rcl
pop
das
inc
or
mov
cdq
idiv
ret
mov
(bad)
mov
hlt
hlt
pop
sbb
aam
cdq
fdivr
jne
in
xchg
inc
aaa
cmp
fldl2t
add
mov
pop
jns
jno
in
mov
sti
arpl
jae
stos
sbb
add
xchg
test
cs
aas
fwait
or
adc
popa
dec
dec
in
and
(bad)
fild
pop
add
fiadd
loop
lahf
inc
jl
jnp
push
repnz
pop
xchg
add
mov
mov
pop
js
pop
or
scas
call
xchg
leave
xor
inc
push
test
ror
daa
push
push
or
mov
add
xchg
mov
pop
std
sub
arpl
cld
addr16
pop
shr
sbb
dec
stos
in
push
clc
cmp
xor
xor
fld
or
aam
mov
inc
mov
fsubr
fiadd
pop
mov
enter
sbb
popf
rcr
sbb
fist
and
aad
sub
and
or
push
sub
rcl
mov
call
sub
mov
(bad)
xchg
jb
and
pop
jne
xchg
(bad)
mov
ins
adc
and
cmp
cmp
pop
lds
jnp
(bad)
jne
into
adc
adc
dec
adc
cwde
sub
pop
mov
push
mov
addr16
je
jno
or
mov
lea
add
dec
(bad)
xlat
test
ins
pop
jge
into
lods
ret
push
nop
mov
mov
and
out
add
push
pop
or
jp
in
or
repnz
(bad)
cmp
push
in
jnp
sub
ja
repz
or
jne
sbb
and
stc
ss
and
adc
js
adc
es
cmp
(bad)
sbb
push
femms
inc
das
(bad)
stos
sbb
mov
retf
push
dec
rcl
in
inc
adc
outs
jb
or
xlat
push
mov
or
shr
sbb
(bad)
dec
and
in
inc
lods
mov
adc
push
add
mov
and
mov
gs
repz
cmp
int
scas
out
sbb
in
xchg
stos
(bad)
xchg
bound
sub
xor
mov
push
rcl
sbb
xor
mov
and
movs
sar
fdiv
popf
jmp
sbb
mov
dec
push
int
mov
xchg
and
aad
and
mov
loop
ins
pop
stos
sub
push
push
mov
idiv
outs
mov
xchg
mov
push
leave
jmp
jecxz
das
mov
adc
pop
push
out
imul
pop
lock
push
inc
jo
sub
mov
bound
lock
sbb
outs
fwait
cmps
les
adc
dec
dec
out
mov
imul
xchg
lahf
test
sub
test
mov
mov
sub
pop
addr16
push
fadd
mov
inc
xor
(bad)
sub
mov
or
or
movs
stos
push
aad
pop
mov
and
push
jecxz
or
enter
add
fs
clc
jae
mov
jp
and
(bad)
leave
shl
aas
dec
iret
cmp
loopne
call
pop
sub
xlat
sub
in
xchg
in
fstp
dec
bound
int
sbb
popa
or
add
(bad)
mov
xor
lahf
jge
xor
xor
xchg
fwait
dec
pushf
bound
out
call
mov
and
jle
(bad)
test
(bad)
mov
xchg
or
mov
test
ficomp
data16
add
ficom
mov
jecxz
lods
cmps
xor
mul
mov
mov
dec
xor
repnz
stos
add
or
jge
lods
lea
jl
lods
stc
dec
jbe
pop
mov
ins
push
add
ret
cmc
lods
mov
pop
dec
popa
cs
jne
cmps
jno
adc
dec
popf
clc
pop
fwait
lods
ror
stc
cmps
sub
loop
cmp
dec
scas
icebp
and
scas
fwait
and
mov
sbb
repnz
es
movs
cwde
pop
xlat
mov
pop
push
fcomp
leave
or
enter
iret
xchg
push
cmps
imul
pop
ds
mov
sub
cmc
jmp
sar
cmp
outs
in
into
xor
imul
ja
(bad)
loope
neg
mov
cmps
scas
iret
add
dec
xor
push
inc
mov
inc
mov
rol
add
mov
cdq
adc
(bad)
jmp
cmp
sbb
sbb
mov
mov
push
jnp
daa
jge
cmp
cmps
jae
dec
xchg
test
imul
mov
mov
mov
and
cs
hlt
icebp
je
cmp
mov
inc
clc
js
je
push
test
adc
pop
jge
and
lock
(bad)
call
and
xor
loope
sub
inc
mov
pop
repnz
and
mov
dec
xor
mov
and
mov
jmp
movs
pop
call
mov
and
push
push
iret
(bad)
dec
or
jne
out
std
sar
je
lock
dec
cs
ja
(bad)
(bad)
jb
or
popa
aas
inc
out
es
loopne
pop
stc
sti
jae
xchg
ror
sbb
push
add
ret
mov
sub
and
pop
inc
adc
dec
pushf
fsub
in
mov
ins
test
sub
ins
mov
movs
aam
test
dec
adc
in
jmp
mov
xchg
fmul
fist
cli
dec
mov
dec
test
xor
inc
test
sub
outs
push
rol
pop
ss
xchg
cmp
data16
cli
pop
mov
mov
lock
jno
dec
int
arpl
push
or
or
xor
xlat
or
add
je
push
jecxz
movs
loopne
push
cld
ficomp
and
popa
push
jae
xchg
outs
fld
push
dec
test
test
lock
sti
je
jnp
icebp
inc
push
aas
inc
ss
push
or
aaa
mov
inc
mov
mov
imul
jns
inc
mov
sub
aas
lods
sub
scas
mov
dec
aad
push
inc
or
push
jae
mov
mov
imul
sub
and
cmp
fwait
dec
jo
shr
push
fbstp
iret
xchg
add
pop
mov
inc
jns
jns
xchg
mov
or
xor
mov
repnz
dec
and
adc
cld
jae
mov
stos
ret
lods
icebp
xor
sub
sub
push
push
sbb
mov
jmp
scas
addr16
xchg
es
pop
cmp
call
jle
add
and
jno
pop
mov
and
icebp
outs
outs
mov
movs
ja
je
or
mov
dec
push
mov
aaa
sti
xchg
(bad)
xlat
fimul
(bad)
sub
jo
sar
or
pop
stos
push
jne
dec
push
loope
mov
stc
call
fsubr
imul
pop
inc
or
push
mov
(bad)
pop
pushf
pusha
ficom
or
aas
lds
frstor
jns
loopne
mov
cmc
loope
mov
outs
xor
lods
pop
mov
adc
jae
scas
lahf
adc
push
ret
popf
ss
add
in
or
shr
cs
cdq
sbb
leave
scas
stos
ins
sar
(bad)
enter
cmp
jecxz
adc
bound
aas
lods
cdq
popf
jl
lods
inc
or
arpl
or
dec
stos
mov
push
push
out
test
movs
jne
inc
mov
dec
stos
jecxz
inc
xchg
xchg
sbb
jae
repnz
mov
cld
daa
adc
mov
dec
test
push
mov
pushf
xchg
push
stc
movs
xor
or
cs
mov
xor
xor
jae
cmp
jmp
movs
and
rol
inc
mov
imul
(bad)
mov
fistp
jecxz
mov
and
inc
adc
xchg
add
out
idiv
xchg
popa
mov
adc
lock
cs
lea
and
lods
adc
jp
rcl
adc
xor
push
adc
popf
inc
test
jg
es
jmp
sub
(bad)
outs
cmp
and
or
pop
(bad)
fdivr
xchg
in
ds
mov
cmp
dec
adc
inc
enter
sbb
imul
mov
xchg
fstp
mul
pusha
dec
scas
movs
push
js
stos
fcomp
inc
and
cld
sti
out
adc
das
or
xor
(bad)
fdiv
mov
push
pop
xchg
(bad)
xor
lock
jp
cmp
movs
sub
dec
inc
shl
sub
je
mov
in
scas
std
sub
ret
or
mov
stc
add
bound
fs
mov
pop
icebp
xor
and
ds
jb
pop
ret
adc
xchg
mov
and
fld
xor
into
cmp
mov
pop
fwait
stos
imul
test
cli
lds
dec
ror
sub
sbb
push
jns
(bad)
in
retf
dec
mov
push
cs
loop
jmp
push
(bad)
scas
(bad)
push
add
das
pop
inc
push
into
xchg
xchg
adc
sbb
inc
sub
push
out
clc
cdq
pop
mov
pop
frstor
cmp
test
xlat
jge
mov
or
mov
repz
pop
pop
add
je
sub
adc
(bad)
jns
into
popa
and
dec
add
cmp
shr
sub
fild
scas
pop
frstor
rcr
lahf
jae
and
dec
cmp
cmp
mov
mov
pop
mov
jae
or
jmp
sbb
dec
cmc
je
cmp
lods
dec
int3
xchg
push
aam
dec
es
sbb
mov
xor
call
jg
xchg
jmp
out
(bad)
(bad)
sti
inc
xchg
xor
data16
adc
mov
sub
lods
bound
xchg
push
push
xchg
adc
fnsave
ds
jno
dec
adc
shr
ja
loop
and
in
xchg
xchg
pop
xor
shr
push
hlt
sti
(bad)
ret
retf
(bad)
ffree
and
loopne
js
push
pushf
es
jmp
enter
inc
mov
xor
xchg
fsub
rcr
cld
xor
pop
mov
inc
add
shl
cli
sbb
stos
in
jl
mov
push
and
xchg
scas
mov
mov
sar
das
mov
xor
inc
and
and
stc
or
dec
adc
das
add
cli
or
sbb
movs
cmp
ret
ins
jne
xor
or
xchg
xchg
pop
push
repz
mov
push
or
mov
test
jno
jle
sar
mov
int3
mov
test
(bad)
aad
mov
dec
inc
mov
cdq
out
or
dec
test
test
mov
adc
cmp
dec
stos
in
outs
sbb
(bad)
lahf
push
arpl
pop
ja
pop
test
dec
mov
mov
adc
mov
push
mov
push
in
je
xor
rcr
mov
aas
jl
cli
and
inc
xchg
push
nop
jg
fsubr
stc
mov
inc
mov
jmp
add
push
(bad)
retf
test
sar
stc
mov
das
loope
clc
pop
(bad)
mov
jbe
outs
mov
popa
pop
cmp
pushf
add
mov
fstp
or
out
(bad)
aas
mov
cld
mov
mov
adc
mov
push
retf
add
adc
sub
fidivr
pop
movs
pop
xchg
(bad)
(bad)
jb
sub
xor
inc
pop
pusha
retf
fcom
jmp
jge
ins
pop
es
pop
inc
lahf
out
ds
xchg
mov
int3
popa
dec
sbb
inc
jnp
jnp
out
test
pop
mov
xchg
push
test
fcomi
push
sbb
cmp
fs
add
ret
int3
mov
mov
push
loopne
jo
mov
fbld
or
lods
or
push
cli
aas
pop
cmp
mov
xor
xchg
jge
imul
pop
inc
xor
jmp
and
cmp
int
xor
sub
xchg
mov
jle
push
shr
shl
jno
ins
outs
add
not
or
pop
fisub
jp
fnstcw
in
retf
in
test
lods
jmp
add
xchg
xlat
lods
sbb
adc
adc
adc
enter
addr16
ret
je
jmp
mov
aam
mov
sar
adc
in
xchg
(bad)
cmc
loopne
add
xor
ficom
std
cmc
adc
push
push
ss
stos
push
inc
popa
inc
or
(bad)
fst
adc
in
ficomp
pop
sub
aad
push
aaa
sub
cld
cmps
and
push
(bad)
and
xchg
jne
and
sub
xchg
in
push
aaa
js
cmp
inc
je
push
leave
sbb
dec
popa
xor
movs
(bad)
inc
jb
fadd
adc
or
lea
jmp
add
sub
ss
adc
pop
imul
push
fstp
rcr
xchg
inc
inc
or
dec
(bad)
frstor
add
iret
pop
jb
push
cmp
and
pop
jo
ds
imul
sub
adc
daa
jge
sbb
das
ds
or
mov
outs
fistp
hlt
jmp
add
adc
out
xor
popf
cmp
scas
(bad)
cmp
xor
inc
movs
jbe
call
xor
hlt
repz
dec
xchg
das
dec
test
dec
hlt
addr16
shl
js
loop
shl
shl
mov
test
add
imul
cmp
loope
mov
out
push
lahf
cmc
add
fcom
push
dec
in
out
sahf
jecxz
push
jmp
scas
add
das
repnz
int
gs
retf
test
fcom
loop
jl
pushf
cmc
aam
jp
and
push
push
stc
addr16
inc
inc
(bad)
stos
loop
add
fst
mov
pop
add
icebp
xchg
xchg
jge
ficom
fldenv
mov
ins
rcr
fadd
or
sub
aam
out
jl
(bad)
cmps
cmp
jno
loope
or
cmc
jmp
push
or
adc
mov
mov
or
rcl
dec
sub
or
cmp
or
test
pop
int3
div
inc
mov
in
add
data16
mov
adc
sti
and
inc
push
out
fbld
add
jp
ret
test
iret
mov
addr16
popa
mov
jmp
ret
and
cli
sbb
cmps
pop
and
loope
fmul
dec
inc
std
xchg
retf
in
cmp
cmp
invd
(bad)
pop
enter
dec
lock
mov
(bad)
sbb
sbb
loopne
mov
dec
test
arpl
sbb
cwde
out
mov
push
std
mov
(bad)
clc
jbe
push
das
mov
inc
mov
call
fstp
cld
mov
shl
adc
stos
sar
mov
push
pop
pushf
add
add
in
sub
pop
aaa
test
aas
mov
mov
les
shl
rol
gs
sbb
shr
push
aaa
dec
outs
pusha
push
or
push
mov
call
gs
sub
pop
cmps
xor
ficomp
sbb
rol
fldenv
ret
es
ins
xchg
or
bound
cmp
inc
loop
adc
test
adc
addr16
shr
jg
xchg
inc
leave
lahf
pop
ret
jne
test
cs
loopne
jae
call
or
xor
add
shr
or
cmp
int
mov
fucomp
pop
xor
pop
dec
test
repz
mov
push
(bad)
lods
and
and
nop
iret
ret
gs
adc
add
shl
jmp
cmp
jne
and
sbb
jmp
add
adc
mov
inc
mov
retf
or
and
aaa
jno
stos
retf
xchg
push
cmp
cmp
sub
jne
mov
lods
sti
data16
lods
fs
retf
sub
bound
adc
mov
pusha
retf
mov
or
in
mov
inc
outs
nop
scas
pop
icebp
push
pushf
(bad)
mov
fwait
dec
ret
fwait
sahf
ret
ret
and
push
or
div
or
pop
mov
cld
test
lods
lds
push
pop
lahf
int3
aad
push
test
xchg
je
mov
sub
in
fld
inc
pop
add
push
jno
rol
loope
(bad)
and
(bad)
adc
xchg
ss
add
inc
dec
inc
xchg
retf
cld
mov
xor
push
cdq
addr16
in
pusha
or
in
(bad)
mov
(bad)
mov
xchg
dec
in
in
xchg
push
inc
ret
add
or
cmp
fisubr
inc
sbb
jmp
jb
jecxz
je
mov
jp
inc
xlat
push
cdq
lods
pop
retf
dec
xchg
pusha
(bad)
jge
lods
popf
mov
lock
jae
push
in
push
inc
shl
shl
cmps
dec
xor
outs
stos
cdq
lock
mov
dec
mov
jl
adc
jg
jnp
aam
xchg
add
cs
mov
jo
clc
pop
cmp
or
ret
cmp
mov
lods
pop
add
cmp
inc
pop
jle
jbe
mov
dec
or
adc
rcl
cmps
sub
pop
mov
(bad)
mov
shr
cmps
dec
aas
fnstcw
call
adc
dec
pop
xor
lea
xbegin
es
lahf
sub
mov
or
out
adc
xchg
dec
inc
mov
sbb
popf
pop
push
imul
mov
xor
adc
jmp
mov
into
jecxz
pop
xchg
dec
mov
push
das
push
cmp
les
dec
data16
adc
mov
add
mov
jbe
adc
or
call
or
das
inc
sar
inc
push
fcom
cmp
mov
pop
mov
xlat
cmp
sahf
aas
cli
pushf
xchg
ja
loop
mov
push
outs
(bad)
mov
add
sbb
jns
jae
popa
aam
pop
iret
stc
popa
loop
dec
dec
test
and
push
mov
push
push
or
nop
and
and
(bad)
and
sub
mov
xor
sub
adc
dec
mov
jb
xchg
or
dec
mov
mov
adc
add
xor
in
jg
add
add
sub
cmps
mov
jp
(bad)
cwde
fcmovnb
stc
xor
imul
int
jbe
sbb
jmp
pop
fdivr
leave
(bad)
out
push
mov
cmp
push
or
bswap
mov
(bad)
pop
mov
dec
inc
cmp
lods
mov
sub
nop
xlat
push
xchg
mov
and
or
clc
in
mov
inc
xor
(bad)
fst
in
shl
add
sub
lods
repz
rcl
test
jae
out
pop
add
loop
(bad)
out
aas
jae
daa
call
pushf
or
and
pushf
shr
jns
jae
sahf
or
dec
dec
fxch
mov
addr16
add
lds
hlt
jnp
test
jo
fnsave
int3
fmul
shr
test
xchg
dec
scas
add
adc
push
shr
arpl
bound
pop
rol
(bad)
jecxz
push
jno
cld
into
stc
movs
out
lock
push
push
les
jle
in
ja
cmp
xor
imul
sbb
outs
shl
fwait
imul
push
push
adc
sahf
pop
mov
mov
sbb
and
popa
clc
je
xchg
cmp
es
imul
ins
jns
repnz
adc
push
sar
mov
repnz
daa
daa
stos
mov
jo
push
div
xlat
jp
jnp
lea
pop
xchg
inc
pop
bound
aam
shl
imul
xchg
add
sti
add
cs
iret
enter
xor
gs
repz
pop
push
sbb
xor
mov
int
rol
dec
mov
xchg
retf
enter
popf
enter
cmps
out
ficomp
mov
pop
mov
mov
mov
dec
bound
mov
push
mov
fisub
test
mov
and
mov
into
jp
lea
sbb
jg
movs
or
and
inc
jl
lock
mov
shl
(bad)
out
push
(bad)
ss
mov
das
mov
sbb
push
push
mov
and
lea
push
cmp
sbb
or
mov
sbb
int
addr16
dec
sub
gs
push
xchg
cmps
mov
retf
(bad)
xchg
movs
int
mov
sar
shr
pop
fld
push
(bad)
int
in
call
cmp
out
cld
shl
pop
lds
mov
pusha
and
and
(bad)
xchg
inc
pop
pop
cmps
mov
ror
or
les
dec
inc
jg
jecxz
cmp
add
popf
pop
adc
mov
xlat
imul
stos
sti
mov
or
mov
xchg
jnp
shl
(bad)
ja
xchg
or
iret
jmp
arpl
fdiv
sub
dec
xchg
outs
sbb
jp
lock
in
adc
lds
xor
mov
data16
call
jp
sub
cmp
test
lahf
and
pop
(bad)
stos
adc
lahf
and
in
jb
pop
or
outs
cld
jne
dec
jp
dec
rol
test
(bad)
cmp
stc
sbb
fld
aad
sahf
ins
push
popf
popa
sbb
scas
mov
sbb
mov
gs
stc
xchg
sbb
pop
inc
jl
dec
cli
adc
cmc
rcr
cmp
in
iret
and
js
mov
mov
push
inc
test
xor
into
into
mov
ss
cdq
call
and
cli
mov
idiv
mov
jb
adc
jmp
movs
or
ins
push
cmps
pop
into
mov
adc
or
pushf
(bad)
jbe
arpl
pop
iret
daa
fdiv
icebp
dec
or
and
lock
jmp
arpl
int
(bad)
or
fwait
pop
push
cmp
mov
lahf
add
call
pop
dec
ds
and
into
mov
loop
mov
mov
or
adc
sti
imul
and
add
pop
push
fwait
jmp
push
xchg
jnp
aad
mov
outs
pushf
or
shl
or
push
idiv
jnp
(bad)
adc
mov
stc
and
jl
cmp
enter
and
(bad)
xchg
in
leave
push
stc
sete
in
leave
cmp
call
outs
stc
shl
mov
shr
ss
stos
inc
or
mov
inc
and
mov
scas
es
xlat
test
push
mov
outs
fwait
xchg
nop
icebp
sub
jmp
lock
ret
cdq
enter
cmp
sbb
jecxz
(bad)
sbb
mov
jp
mov
xchg
test
mov
pushf
mov
(bad)
cmps
jns
(bad)
call
and
aam
fcmovbe
pop
scas
sbb
cwde
sub
adc
sub
fld
and
mov
ins
jp
mov
leave
sbb
jno
sub
inc
in
test
or
mov
cmp
mov
or
test
(bad)
mov
mov
adc
cmp
inc
shr
xchg
scas
mov
jl
mov
inc
push
sbb
jae
sub
or
in
gs
and
retf
dec
dec
ret
imul
movs
sbb
lods
sbb
outs
add
je
jb
das
cmp
movs
add
mov
jg
lods
ss
add
mul
in
push
cmps
add
cmc
loope
push
jo
pop
add
mov
je
push
pop
sub
inc
mov
arpl
(bad)
push
cmps
cmps
mov
mov
into
sbb
or
cmp
ror
jo
or
pop
fwait
sbb
aas
ror
bound
mov
in
xor
or
fwait
pop
mov
sub
fbstp
cdq
and
sbb
and
mov
and
iret
xchg
mov
jge
cmp
pop
inc
fbld
sub
aaa
hlt
and
ja
lea
push
lods
jbe
pop
push
imul
jle
pop
fbstp
mov
push
mov
jle
stos
xchg
mov
lea
adc
adc
pop
or
sub
sbb
cdq
aad
lock
aam
xchg
mov
clc
add
lock
dec
fdivr
xor
xchg
dec
jns
push
gs
mov
push
add
mov
push
add
(bad)
aam
cld
retf
jo
and
pop
loop
xchg
pop
xor
cmp
popf
in
xor
enter
bound
mov
sar
inc
dec
lods
rcr
cmp
dec
pop
xchg
in
cli
(bad)
ds
mov
mov
jl
xchg
or
(bad)
mov
repnz
xor
das
push
repnz
sbb
stos
dec
pop
or
xor
jns
scas
ja
in
arpl
gs
and
repnz
sub
mov
lods
inc
adc
cmc
addr16
in
xor
rcl
imul
push
mov
mov
or
add
dec
into
push
dec
mov
xchg
int3
cmp
mov
ss
cmps
icebp
lea
pop
and
sbb
std
call
pop
cmp
fs
imul
lods
out
mov
ror
mov
dec
cld
mov
push
fidivr
ret
sbb
dec
mov
aaa
in
sbb
xor
and
mov
xor
fcomp
push
mov
lods
ins
in
and
sbb
fs
cmp
mov
and
inc
dec
addr16
jno
mov
dec
or
mov
psubsw
mov
sti
loope
lea
sub
imul
push
sub
sahf
lea
cmp
xchg
xor
cli
sub
cmps
mov
call
push
jns
jne
or
sub
xchg
pusha
int3
pop
adc
mov
iret
xchg
std
jle
cmps
xchg
dec
push
cmps
fs
fistp
xchg
or
lahf
stos
and
mov
mov
out
push
mov
pop
inc
add
mov
in
mov
stos
es
lock
in
in
xor
hlt
mov
rol
sar
adc
mov
clc
mov
lods
xchg
clc
sbb
mov
test
imul
repz
pusha
aas
jne
xor
cmp
push
xor
and
sub
inc
inc
repnz
test
out
aas
ds
nop
je
jle
enter
cmp
mov
ins
pop
xor
xchg
mov
into
xor
call
adc
js
nop
stos
xor
cmc
imul
pop
xor
xchg
and
xchg
pushf
xor
test
mov
and
addr16
fcmovnbe
leave
jg
ror
mov
ret
sbb
sub
xor
xchg
(bad)
in
dec
sbb
jge
ret
or
fxch
push
shr
mov
js
shl
call
sub
or
imul
loope
sbb
push
cld
mov
cmp
mov
popf
(bad)
jge
std
test
xor
js
jb
lods
loopne
fcomp
jmp
mov
adc
push
icebp
lods
sbb
neg
xcrypt-ctr
cmps
pop
cmp
inc
stos
mov
dec
in
sbb
scas
mov
cmp
(bad)
sub
aam
mov
scas
mov
sub
push
lds
das
les
jecxz
mov
sahf
sub
push
dec
pop
lods
adc
inc
push
icebp
push
ficom
jb
rol
xchg
jae
mov
pop
mov
aam
cmp
inc
pop
nop
mov
rcr
pop
mul
or
scas
into
or
xchg
in
pop
movs
adc
sahf
add
or
inc
xor
or
dec
sbb
inc
push
mov
loopne
fild
pcmpgtw
cdq
mov
pushf
imul
(bad)
jmp
cmp
or
sub
jno
or
mov
or
or
aaa
push
push
or
enter
aam
add
mov
xor
ins
inc
cld
or
lea
cmps
int
inc
inc
or
jb
jmp
imul
mov
aam
iret
mov
jnp
test
ja
movs
and
mov
or
jmp
inc
movs
jl
arpl
neg
out
out
and
fwait
mov
mov
loopne
adc
mov
fadd
mov
xor
sbb
jb
lea
or
mov
icebp
pop
sbb
pop
es
push
push
and
fdivr
adc
xchg
cld
nop
sbb
mov
push
sub
arpl
lea
mov
push
enter
and
out
jmp
jo
dec
pop
pop
add
hlt
test
add
or
rcr
inc
les
popa
mov
sub
test
(bad)
ret
(bad)
fcomp
ins
sub
jl
push
aad
add
xor
outs
and
push
int3
mov
push
sub
inc
cld
dec
dec
jb
sbb
sti
loope
xchg
pop
cmp
stc
mov
pop
dec
or
loopne
outs
adc
mov
nop
or
outs
stc
mov
push
lods
into
das
addr16
ss
mov
add
or
push
xchg
mul
dec
push
cdq
shl
mov
sbb
inc
les
cli
mov
scas
mov
ror
pop
stos
(bad)
mov
out
inc
inc
loop
sub
stc
daa
jbe
jmp
sub
mov
movs
fwait
mov
stos
push
xchg
cli
das
or
retf
lods
ret
jne
mov
ja
adc
lds
mov
inc
xor
mov
xchg
jge
lea
add
call
push
arpl
das
into
push
and
push
cmps
dec
ds
pop
(bad)
adc
dec
int3
inc
xchg
jae
dec
inc
aaa
adc
xor
xchg
fcom
je
outs
(bad)
(bad)
cmp
cli
pop
add
pushf
aaa
xchg
mov
jl
add
pop
shr
mov
aam
jecxz
(bad)
mov
cmp
into
call
(bad)
aam
pop
jbe
arpl
pop
dec
scas
(bad)
fiadd
jnp
outs
inc
aad
loopne
std
mov
(bad)
iret
sub
ins
cmp
test
add
and
(bad)
ins
xor
sbb
mov
aaa
xor
sti
lods
(bad)
mov
cdq
jb
in
inc
pop
mov
add
fisttp
adc
and
test
add
loope
ror
mov
sar
cmp
fcomp
mov
fistp
add
rcr
stc
je
cmps
inc
(bad)
popf
mov
and
jge
cdq
push
cmp
hlt
cld
sahf
mov
nop
outs
lods
pop
movs
adc
ret
clc
sbb
dec
mov
and
cmp
dec
cmc
lahf
pop
mov
fcomip
ss
push
stos
das
mov
pop
jge
(bad)
loopne
mov
cmp
ret
lock
jno
jns
aaa
push
xor
div
cmp
(bad)
cdq
sub
sbb
sub
cmps
retf
repnz
add
in
in
cdq
shl
ds
mov
scas
outs
pop
and
test
adc
push
dec
(bad)
fldcw
addr16
sub
sbb
and
mov
popf
add
enter
mov
sahf
fsubr
daa
mov
inc
sbb
js
movs
in
mov
popf
dec
xor
ins
repz
imul
sbb
pop
test
mov
push
mov
push
mov
mov
not
sbb
out
mov
(bad)
xlat
pop
and
aam
dec
sbb
loope
outs
das
push
or
jmp
cmp
push
movq
xchg
(bad)
fiadd
inc
pushf
(bad)
sub
data16
pushf
xchg
(bad)
scas
imul
mov
or
xor
in
add
sbb
add
std
test
leave
sbb
sub
scas
lock
loope
xor
sbb
rol
aaa
fild
push
aam
add
lahf
test
jne
fdivr
or
jg
mov
fsub
int
inc
and
pop
dec
xor
lods
js
jp
mov
jae
scas
xchg
push
nop
mov
fisub
cmps
hlt
and
and
mov
jmp
adc
clc
jb
int
daa
cdq
ss
rcl
pop
dec
xor
repnz
mov
ins
add
sub
pop
leave
ds
xor
jmp
test
adc
fiadd
leave
test
push
sub
mov
pop
div
xlat
pop
jle
sub
pop
push
xlat
pop
(bad)
or
jge
pop
aad
outs
test
dec
push
xor
int3
into
std
jns
push
inc
cld
mul
neg
arpl
push
cmp
aaa
adc
and
leave
pusha
push
ja
jle
jl
int3
ins
not
sub
lahf
repnz
mov
mov
pop
popa
test
lea
dec
xor
or
mov
mov
(bad)
jae
fmul
and
stc
js
cmp
dec
shl
ror
add
sbb
idiv
xchg
push
jle
test
nop
(bad)
hlt
(bad)
(bad)
pand
aad
mov
xchg
and
movs
xchg
lea
cs
push
push
mov
pop
call
jecxz
and
rcr
xchg
outs
mov
xor
push
cmp
inc
jns
std
scas
pop
mov
imul
cmp
and
sbb
push
jp
xor
add
adc
mov
adc
inc
in
or
mov
sub
pop
js
enter
jo
ds
inc
sbb
pop
pop
movs
push
cmp
jle
shr
cmp
cmps
out
nop
push
jbe
cmp
mov
mov
(bad)
icebp
pop
and
mov
and
pop
mov
popf
call
inc
dec
lea
adc
test
push
cwde
into
repnz
add
lods
scas
add
pop
data16
(bad)
jle
jns
ret
adc
jmp
sbb
pop
es
mov
fnsave
mov
scas
pusha
mov
mov
inc
xchg
popf
popf
xor
test
std
jge
and
inc
loopne
stos
es
lahf
aam
imul
xchg
lods
add
pushf
add
pop
int
mov
mov
xor
ss
ins
jmp
mov
call
jl
push
or
pop
out
and
add
out
icebp
lea
lahf
mov
out
(bad)
gs
cdq
push
loope
jecxz
mov
add
and
and
and
jae
jecxz
outs
leave
xor
dec
inc
jecxz
adc
inc
movs
or
or
pop
dec
movs
pop
or
repnz
movs
add
jmp
mov
(bad)
es
push
jb
or
xchg
test
mov
adc
mov
sub
push
ds
call
test
fs
imul
stc
stos
or
mov
out
into
int
in
pop
xor
jbe
jae
adc
cmp
and
inc
inc
add
add
stc
fisttp
cli
adc
jmp
mov
rcl
mov
(bad)
out
dec
adc
add
stc
inc
dec
add
pop
(bad)
adc
xchg
addr16
(bad)
cmps
pop
test
cmp
mov
jo
and
ds
mov
adc
jno
xor
fwait
push
add
inc
(bad)
pop
imul
das
shl
jo
sub
sbb
test
fisubr
mov
mov
mov
bound
lahf
enter
cmps
loopne
mov
mov
jbe
sar
fnsave
arpl
sub
arpl
cmp
pop
add
cmps
push
push
gs
iret
(bad)
or
and
mov
dec
mov
enter
mov
or
(bad)
fisttp
into
std
xor
aad
and
xchg
into
repnz
popa
imul
ret
or
cmp
sbb
or
mov
inc
(bad)
mov
pop
sub
push
or
das
push
dec
jecxz
jg
ror
lods
jmp
ins
in
retf
sar
dec
ret
sahf
pop
push
test
int3
inc
pop
rol
inc
pop
(bad)
out
outs
dec
xor
out
loopne
std
mov
push
sbb
fstp
adc
sub
add
mov
ins
jbe
dec
add
into
xor
stos
sub
push
aaa
jb
outs
or
lahf
sub
sbb
cmp
jge
movs
stos
jns
or
retf
es
mov
ret
jecxz
(bad)
std
adc
cs
daa
(bad)
je
fst
pop
dec
addr16
(bad)
sub
bound
retf
cmp
xchg
mov
xchg
jbe
out
lods
shl
nop
dec
mov
test
fdiv
std
mov
cmp
ins
adc
mov
pop
mov
xchg
xchg
and
inc
(bad)
xchg
xchg
pop
pop
pop
xchg
jae
mov
push
out
xlat
mov
xchg
mov
and
scas
hlt
test
(bad)
push
lea
mov
shr
pop
xchg
loopne
sbb
cs
mov
push
cmp
xchg
mov
clc
int
mov
sbb
aad
imul
out
and
xchg
push
les
arpl
lds
or
icebp
pop
test
or
jle
imul
push
and
jae
mov
mov
(bad)
fwait
xchg
mov
sub
cmp
mov
jle
push
dec
les
in
inc
mov
xchg
sti
les
aas
jl
es
out
mov
add
inc
and
stc
ret
add
or
jmp
stc
push
xchg
pop
mov
adc
loope
xchg
sbb
(bad)
mov
adc
jl
shr
loope
jg
mov
ud1
pop
adc
mov
jl
stos
test
daa
adc
mov
inc
ins
xor
dec
and
add
jo
jl
push
mov
adc
leave
aam
loope
dec
cld
stos
mov
ja
and
popa
inc
push
pusha
mov
mov
mov
dec
add
cmp
das
sbb
lock
pop
fwait
dec
lahf
and
aad
(bad)
sub
add
enter
xchg
xor
shl
dec
push
mov
outs
movs
and
fmul
pop
and
movs
(bad)
sbb
and
pushf
das
mov
sbb
aam
mov
in
mov
mov
jle
cmps
and
adc
cmp
mov
sub
xchg
mov
mov
in
pop
neg
inc
ret
aam
mov
arpl
xor
out
nop
rcl
pop
fsubr
scas
add
sahf
outs
dec
popa
mov
cmp
sar
jns
sub
arpl
iret
adc
sar
aad
addr16
push
inc
test
ficomp
aaa
sbb
pop
rol
sbb
sub
cmp
or
dec
pushf
stos
xchg
jno
or
leave
jl
and
std
pop
mov
pushf
std
jecxz
mov
mov
sbb
mov
ja
stc
ret
sub
dec
push
cmp
cmp
xchg
mov
stc
loope
es
jbe
cmps
hlt
fisttp
das
mov
or
adc
cld
sar
push
or
lods
(bad)
adc
pop
rep
addr16
popa
test
xor
repnz
fbstp
test
inc
or
and
stos
and
(bad)
sub
(bad)
xchg
push
rol
cwde
pop
jg
mov
inc
stos
out
add
sub
add
mov
fisttp
add
mov
pop
in
rcr
std
fiadd
mov
mov
sub
repz
stos
out
dec
push
or
jb
dec
cmps
pop
lods
sub
in
retf
jp
bound
add
xor
leave
cdq
jne
mov
dec
popf
(bad)
and
mov
lods
pop
(bad)
xchg
imul
pop
call
ins
retf
je
mov
stos
add
xlat
sbb
push
push
mov
pushf
out
repz
adc
shl
and
push
mov
jb
test
aad
repnz
(bad)
aaa
push
out
push
push
(bad)
and
call
push
jo
stc
pusha
xor
in
pop
icebp
inc
fdivr
loop
lods
test
jp
jl
cmps
sub
and
jecxz
mov
inc
fucomp
jb
and
inc
xchg
lods
pop
xchg
outs
loope
std
std
sbb
inc
cmps
push
pop
mov
xor
ins
imul
mov
xor
daa
movs
(bad)
enter
fs
mov
retf
jae
movs
popf
sub
jp
gs
outs
and
jge
xor
mov
pop
mov
add
js
mov
mov
inc
lea
adc
fwait
out
sub
dec
loope
jmp
xchg
mov
mov
ja
inc
out
adc
push
mov
mov
(bad)
outs
xor
push
add
add
mov
or
pop
lahf
inc
xchg
outs
mov
sub
loopne
add
sbb
imul
outs
int3
les
sub
stos
in
push
xchg
daa
push
sub
inc
mov
call
add
cmp
pop
dec
and
(bad)
mov
pop
arpl
int
shr
jb
inc
ss
sbb
test
push
sbb
xchg
stos
xor
lahf
out
add
push
jno
(bad)
fld
fisttp
jmp
js
jns
cli
jg
cwde
outs
xchg
dec
mov
sub
jecxz
mov
inc
xor
jle
mov
mov
(bad)
daa
dec
loope
or
fsubr
jae
sub
jae
lahf
xchg
pop
push
sub
cmps
popa
xchg
sub
adc
movs
movs
or
and
xchg
in
fdiv
cmp
(bad)
and
out
outs
jecxz
clc
cmps
addr16
data16
lds
and
add
and
inc
cmp
pop
xor
fimul
shl
jp
fmulp
aad
ret
push
mov
enter
js
pop
dec
xchg
mov
stos
je
cmp
push
mov
(bad)
pop
out
mov
adc
es
or
dec
mov
inc
mov
dec
cwde
loopne
inc
lahf
cld
lods
sbb
mov
mov
loope
ins
hlt
mov
sahf
aaa
pop
or
inc
add
ds
push
mov
inc
idiv
aad
in
mov
pop
jns
adc
or
dec
xchg
pop
repnz
(bad)
ins
jmp
add
add
out
cmc
or
xor
xchg
xchg
adc
push
mov
hlt
aad
or
jb
xchg
fbstp
mov
and
mov
fcom
jae
rcl
icebp
push
(bad)
loopne
cwde
in
jno
mov
mov
rol
xor
outs
mov
retf
ins
mov
loope
or
and
add
mov
fisubr
adc
inc
and
ret
add
in
push
les
pop
retf
push
ins
pop
push
cli
add
in
push
out
retf
jo
sbb
inc
xor
xor
mov
(bad)
cli
push
pusha
rcl
pop
pop
sbb
cmc
mov
in
pop
pop
jb
mul
(bad)
jns
in
scas
sbb
ja
mov
(bad)
cmp
mov
mov
pop
pop
adc
mov
fs
sti
outs
xchg
test
mov
pop
sub
inc
fwait
bound
jmp
in
js
jb
mov
or
cmp
sub
out
cmp
add
in
sub
aad
mov
data16
jno
inc
shl
and
into
je
jle
out
(bad)
push
test
mov
mov
out
in
das
lea
ins
add
std
sti
adc
pop
pop
and
cld
mov
mov
mul
push
cmp
je
xor
ins
(bad)
out
xchg
jp
xor
xchg
int3
jno
out
outs
inc
mov
js
pop
adc
(bad)
shl
mov
cdq
mov
mov
call
fild
pop
adc
fstp
jo
call
mov
ins
push
aaa
pop
movs
xchg
int3
std
push
add
rcr
sets
lods
add
add
jnp
mov
in
add
fmul
mov
and
pop
lock
mov
or
pop
mov
repnz
shl
frstor
les
je
dec
lods
mov
adc
and
mov
push
mov
jns
jae
outs
jecxz
rcl
adc
lahf
and
xchg
leave
push
not
retf
(bad)
jae
xchg
adc
pop
fidivr
lea
test
fbstp
sub
cld
(bad)
fwait
sbb
aaa
popa
adc
jmp
xchg
adc
xchg
push
fs
imul
and
mov
mov
sbb
dec
mov
fcom
out
(bad)
(bad)
outs
jmp
add
popa
mov
mov
xor
push
in
sub
mov
mov
jecxz
pop
sti
pop
fldenv
aam
sbb
pop
shr
dec
mov
mov
or
in
pop
loop
in
mov
push
test
xchg
adc
adc
ret
gs
dec
outs
pop
mov
cmp
pusha
test
xchg
dec
and
or
jmp
jmp
xchg
jmp
ins
fisttp
adc
mov
stc
sbb
sub
xchg
mov
cmp
scas
cld
push
ret
jbe
and
shr
cli
rcl
sub
idiv
nop
test
loop
cmp
cmp
fbstp
repz
push
jbe
gs
add
dec
in
fwait
clc
dec
ins
mov
call
inc
pop
add
add
icebp
out
leave
mov
loopne
or
sbb
(bad)
push
loopne
xchg
pop
xor
and
fstp
lds
sahf
xor
mul
mov
test
inc
push
not
scas
jge
mov
cmc
xchg
imul
mov
rol
test
outs
sub
rol
mov
int
sub
jnp
leave
(bad)
mov
mov
fimul
dec
jmp
aas
call
inc
xor
jmp
push
xor
sahf
cmp
jae
sub
xchg
mov
fs
cmp
sahf
and
leave
(bad)
mov
mov
(bad)
(bad)
mov
js
test
cs
sub
je
pop
hlt
add
cmps
jg
data16
sti
repnz
push
aaa
push
mov
sysret
sub
push
into
mov
in
xchg
call
fld
popa
ror
fisttp
shr
sbb
jne
adc
mov
mov
dec
ins
push
xor
pop
cld
mov
xor
mov
mov
and
(bad)
cmp
mov
xor
imul
outs
pop
push
loop
movs
icebp
pop
(bad)
jne
sub
mov
mov
test
mov
pop
mov
out
lock
daa
test
mov
xor
push
jecxz
fstp
or
jp
add
in
push
push
ror
adc
mov
lds
and
iret
mov
hlt
sub
leave
sbb
jmp
dec
mov
mov
push
or
dec
(bad)
cmc
pop
les
pop
inc
push
shr
out
movd
pop
sbb
pop
loop
repnz
pusha
add
scas
outs
imul
ficom
pop
xchg
mov
jbe
lods
adc
outs
int3
pop
xor
outs
sub
pop
movs
mov
pusha
push
inc
mov
inc
mov
inc
call
test
mov
pop
leave
not
ror
popf
jp
inc
fidivr
push
pop
pop
aam
es
sub
shrd
std
fdivr
lea
mov
sub
cli
sub
in
pusha
lds
pop
xchg
mov
pop
fldln2
inc
and
inc
mov
add
mov
mov
int3
ss
xchg
push
push
cmps
jmp
in
out
dec
pop
fwait
call
cmps
dec
fld
retf
js
inc
mov
dec
sub
test
adc
or
cs
push
jo
arpl
push
das
scas
repnz
lea
je
xor
dec
sbb
aas
dec
or
(bad)
xor
cwde
rol
dec
cmp
jl
in
add
xchg
popa
inc
push
xor
cdq
stos
dec
pop
dec
xor
jno
fadd
sub
xlat
push
stos
cmps
stos
push
pop
adc
xor
cdq
xchg
cmp
ret
pop
ficomp
push
add
pop
aas
pusha
pop
xchg
xrelease
inc
ins
out
test
inc
retf
(bad)
mov
jbe
fsubr
inc
out
sbb
jmp
sub
shr
in
lods
popf
pop
dec
cmp
xchg
cmc
and
lds
push
dec
sub
(bad)
ret
(bad)
mov
(bad)
(bad)
mov
mov
xor
fcmovnu
add
mov
push
sbb
jns
mov
(bad)
fstp
rcr
push
push
jae
mov
sbb
ret
push
sti
sbb
sahf
loop
jmp
(bad)
ror
in
popf
leave
adc
aaa
je
fbstp
pop
push
sbb
push
ins
adc
sub
push
pop
adc
xchg
stos
xchg
shl
cmp
mov
cmp
xor
das
xor
push
inc
push
movs
call
data16
fs
xor
jno
and
push
dec
popa
xor
jns
or
xchg
arpl
push
and
jl
(bad)
mov
add
dec
cld
cld
in
jb
mov
sub
xchg
push
xor
xor
cmps
or
lds
fcom
out
jmp
out
enter
loopne
adc
ror
stos
mov
adc
dec
fstp
scas
mov
rcr
in
mov
mov
loope
jp
push
jno
jae
(bad)
cmps
(bad)
cli
retf
add
xchg
jl
mov
jl
jmp
imul
iret
jno
or
push
mov
xor
xchg
pop
push
in
cmp
test
add
xchg
pushf
outs
fs
xchg
sub
mov
jmp
into
push
fdivr
push
ret
add
jb
dec
mov
int
jo
mov
jmp
xchg
mov
inc
push
stos
xor
jp
pop
push
imul
idiv
pop
(bad)
xchg
pop
int
idiv
pop
jmp
stos
adc
pop
aas
rcl
pop
pop
cmp
mov
fdivr
and
inc
cmps
(bad)
retf
test
mov
sub
sbb
push
push
out
push
jge
cmps
or
jmp
add
xor
sbb
inc
push
xor
add
ror
stos
retf
js
enter
push
nop
mov
dec
pushf
loopne
(bad)
mov
lds
xlat
out
and
add
and
pop
lds
in
sub
xchg
mov
xchg
mov
fdivr
dec
pop
xor
xor
mov
pusha
mov
add
mov
fsub
mov
or
pop
dec
rol
pop
xor
inc
test
jl
push
jb
and
test
and
(bad)
and
push
xchg
or
out
bound
repnz
lock
inc
mov
mov
push
mov
pop
xlat
fidivr
and
(bad)
in
int3
adc
mov
xchg
xchg
es
cs
dec
pop
sbb
mov
cmp
sub
pop
sbb
popf
mov
stos
popa
sub
cmc
idiv
test
fs
mov
dec
in
adc
ret
sbb
and
call
test
enter
adc
pop
push
sbb
pop
xchg
xchg
mov
add
push
in
dec
sub
pop
stos
pop
in
mov
sbb
in
test
mov
js
lds
outs
mov
pop
call
sbb
sub
call
or
add
rol
(bad)
(bad)
xor
mov
popa
call
adc
leave
out
(bad)
imul
push
add
loop
add
ds
sub
push
dec
push
cmp
push
sahf
test
pop
fiadd
movs
push
stc
lods
mov
ret
loop
mov
mov
sar
test
push
inc
mov
sbb
in
sbb
fstp
pop
sbb
mov
clc
fnstenv
cmp
repz
retf
mov
xor
(bad)
std
adc
loop
cmp
inc
fwait
xor
push
popf
add
fstp
aas
je
(bad)
mov
and
jle
fcmovb
jl
jl
daa
(bad)
jmp
sub
or
mov
dec
out
mov
es
stos
pop
mov
and
inc
pop
or
sub
sahf
mov
pop
xchg
in
push
xchg
das
aad
test
fs
stos
and
or
mov
pop
pop
mov
adc
int3
retf
dec
es
cmps
push
sbb
pop
and
repz
inc
jle
inc
push
and
and
test
xchg
gs
mov
sbb
into
mov
fmulp
mov
fld
sbb
fucomi
xor
ret
ins
hlt
add
sti
into
mov
fld
stc
mov
ins
(bad)
cwde
dec
and
int3
ror
in
xchg
leave
mov
test
aas
pusha
test
add
adc
cdq
xor
mov
dec
mov
dec
push
or
mov
leave
jns
inc
mov
jbe
movs
mov
jge
push
or
int
add
sub
or
add
bound
or
xlat
xchg
inc
push
test
cmp
rcl
pop
adc
test
enter
leave
test
fs
rcr
pop
xor
dec
add
inc
push
in
pop
add
jg
sbb
sbb
mov
addr16
push
inc
mov
jno
xchg
push
mov
adc
sbb
pop
repz
add
js
xchg
in
inc
add
dec
repnz
jmp
hlt
pop
loopne
lea
sbb
nop
mov
loop
icebp
pop
cwde
jo
push
mov
mov
push
(bad)
out
or
aam
mov
mov
iret
xchg
push
ins
mov
ficomp
movs
add
xchg
xor
cmps
sub
xor
stos
and
inc
mov
sar
imul
in
jns
mov
mov
sub
fidivr
jne
inc
mov
xchg
(bad)
in
add
xchg
sub
loope
arpl
scas
or
mov
add
and
xchg
and
inc
adc
pop
shl
sub
mov
jo
repnz
cdq
sub
rcr
jge
push
int
ins
imul
fcmove
or
mov
add
and
call
ins
outs
in
mov
aas
add
adc
shr
xor
pop
pop
sahf
add
mov
xor
pop
mov
mov
cdq
div
sar
inc
or
cmps
or
mov
sbb
mov
mov
retf
sub
mov
popf
pop
pop
jae
cmps
pop
mov
mov
mov
stos
add
dec
inc
jg
ins
popa
pop
and
scas
and
lods
call
cmp
into
dec
push
shl
dec
dec
ret
cmps
leave
jl
cld
iret
inc
std
(bad)
jle
ret
mov
rcr
sti
mov
jmp
imul
mov
mov
dec
int
pop
popf
sbb
mov
mov
cmp
adc
xchg
dec
loop
or
(bad)
lea
fsub
adc
inc
mov
cdq
cmp
in
(bad)
rcl
mov
ins
scas
sub
dec
xchg
loopne
add
or
dec
daa
cmc
cmps
dec
popa
ja
sbb
retf
ds
mov
jno
pop
test
(bad)
cmp
idiv
cmp
les
repz
pop
leave
ret
movs
jne
dec
or
adc
add
jecxz
ins
ds
aaa
mov
push
shl
add
addr16
dec
mov
add
lock
aas
and
ret
div
fld
test
dec
dec
xchg
cmp
inc
add
stos
or
ret
test
sbb
ds
cmp
loop
pop
add
stos
fst
dec
pop
in
add
jmp
test
retf
cmp
mov
jns
and
cmps
aaa
ret
call
or
in
jae
inc
mov
jmp
int
add
dec
or
lods
je
mov
mov
add
mov
or
sub
frstor
pop
lahf
lods
fcom
lods
pop
das
jp
mov
pop
call
test
test
test
lea
xchg
pop
sbb
mov
push
fisttp
aas
mov
jmp
pop
push
jo
pusha
adc
ror
push
inc
push
pop
inc
nop
cmc
jo
jmp
jb
pushf
xchg
dec
test
mov
cs
push
aaa
dec
out
cs
jbe
xor
sbb
test
addr16
fisttp
xchg
pop
adc
lahf
imul
mov
cs
(bad)
xchg
fwait
test
inc
xor
xchg
add
popf
out
movs
mov
add
mov
lods
fistp
cdq
arpl
imul
fmul
out
push
pushf
popa
out
pop
pop
push
outs
add
sbb
cmc
mov
add
addr16
imul
(bad)
pop
adc
fwait
cmp
pop
mov
cmp
push
pop
xor
jne
fisttp
data16
loop
xchg
add
mov
fidivr
les
daa
sub
xchg
fsub
retf
cmp
fdivp
pop
imul
mov
push
(bad)
dec
mov
hlt
fstp
aam
or
cmp
dec
lods
std
ja
(bad)
xchg
mov
arpl
dec
jg
rol
cmp
inc
push
xor
jnp
mov
mov
sub
mov
cdq
mov
xor
pop
ficom
adc
pop
cmc
dec
jmp
pop
mul
loopne
sub
gs
sbb
outs
dec
mov
lods
pop
ins
jle
pop
xor
push
push
mov
adc
test
sbb
mov
les
outs
jne
(bad)
xchg
jae
ror
js
xchg
adc
icebp
outs
enter
push
mov
add
push
std
outs
adc
out
lods
push
mov
jno
es
retf
push
rcr
add
dec
mov
pop
aam
push
call
stos
out
mov
jbe
add
lds
aad
ins
cmps
js
pop
mov
xchg
repz
stc
mov
mov
adc
gs
out
sar
movs
xchg
pop
sbb
(bad)
jmp
xor
fwait
loopne
fwait
mov
cmp
das
push
dec
mov
or
int
pop
outs
add
push
push
lea
mov
loope
cdq
and
in
imul
or
mov
cmp
xchg
jbe
jne
dec
mov
inc
dec
dec
push
fimul
sahf
lds
xor
xchg
inc
sbb
dec
dec
jnp
cmp
xchg
dec
push
cmp
mov
mov
ret
call
cmps
jmp
xchg
loope
sbb
fild
sub
lea
rol
xor
dec
inc
push
ret
pop
pop
inc
add
mov
inc
retf
int
call
mov
jb
outs
cmc
pop
imul
dec
jns
dec
or
movs
mov
dec
inc
dec
dec
fs
repz
push
dec
call
jb
pushf
adc
es
push
lods
out
pop
cs
cmps
push
outs
add
lods
test
leave
pop
xchg
or
imul
(bad)
pop
mov
or
and
addr16
in
and
adc
xor
sbb
test
jg
sub
cmps
xor
and
int
repnz
addr16
pop
dec
and
dec
imul
aam
pop
mov
ret
pop
popf
mov
bound
fidivr
nop
mov
jl
aam
sbb
repnz
xor
pop
retf
mov
inc
(bad)
jmp
cmps
out
mov
jg
int3
mov
rcl
jle
xor
in
cmps
dec
mov
and
(bad)
jmp
pushw
mov
cwde
dec
fsub
push
sbb
(bad)
adc
xor
inc
aad
pusha
les
test
sbb
fwait
dec
xchg
xchg
mov
and
dec
xor
cli
jae
sahf
mov
mov
fisttp
xchg
add
ds
pop
add
in
mov
dec
mov
sub
push
ja
clc
mov
daa
mov
mov
lea
mov
mov
dec
xor
add
pusha
retf
xchg
xor
or
pop
lahf
dec
imul
sar
jb
out
fcomp
mov
mov
xor
pop
out
into
inc
dec
xor
pop
in
add
xor
sbb
inc
cdq
dec
and
fisub
xor
inc
mov
(bad)
loopne
ins
xor
inc
push
add
out
mov
sub
pop
(bad)
mov
jge
xor
inc
ror
jnp
call
pop
repz
ret
adc
jmp
jo
enter
cmp
aad
push
mov
mov
sbb
mov
imul
addr16
and
popf
test
mov
adc
inc
arpl
ds
and
mov
out
dec
mov
cmc
and
add
into
pusha
stos
inc
jecxz
mov
adc
nop
cmp
sub
loopne
pop
sub
xor
inc
jmp
scas
mov
and
(bad)
pusha
in
ret
fwait
popf
mov
and
xlat
lahf
rcr
je
sub
call
sbb
out
dec
dec
mov
push
test
dec
dec
iret
push
out
pushf
out
mov
xchg
mov
mov
mov
cmp
shr
fisttp
add
jle
repnz
push
fild
dec
sbb
cmp
xor
mov
pop
jmp
lods
adc
and
inc
aad
inc
dec
cmps
clc
std
not
enter
int
mov
pusha
add
add
gs
jnp
mov
sbb
ins
and
inc
sti
jo
jmp
(bad)
aaa
jecxz
dec
fidivr
push
add
and
fdivr
push
repnz
bound
mul
mov
rcl
fs
mov
dec
frstor
ror
sti
mov
jg
xor
dec
lods
gs
jecxz
test
fisubr
out
cmp
iret
cs
pop
(bad)
call
aaa
xor
push
arpl
fisub
mov
mov
push
mov
pop
fisttp
sub
push
mov
add
inc
push
(bad)
or
or
sahf
push
ficom
stos
xor
and
test
dec
lods
mov
inc
jo
xchg
mov
ins
or
xlat
and
stos
sti
jno
(bad)
cld
or
cmp
in
inc
je
mov
xchg
mov
cmps
dec
fwait
dec
fiadd
xchg
cwde
inc
xor
push
pop
movs
lea
ret
mov
push
ret
or
rol
sub
ds
sub
or
mov
daa
pop
fucomp
orps
dec
mov
(bad)
fcom
lds
sub
rol
imul
adc
adc
data16
adc
sub
scas
xchg
fnstenv
mov
mov
adc
or
cmp
or
or
hlt
push
mov
add
imul
popa
arpl
and
inc
adc
mov
mov
xchg
dec
(bad)
aas
inc
ins
test
inc
ins
stos
stc
cmp
mov
add
pop
xchg
push
(bad)
cmp
xchg
popf
xor
aaa
lahf
mov
jbe
lahf
and
cli
cwde
pop
xlat
sub
aas
addr16
popf
mov
mov
pop
dec
dec
jl
xor
ret
xlat
jmp
push
mov
pushf
lahf
inc
ins
into
jmp
(bad)
adc
adc
push
addr16
(bad)
test
ds
or
ins
mov
enter
in
pop
ins
cwde
dec
(bad)
adc
in
lock
shl
dec
es
sbb
fistp
fadd
div
add
icebp
sub
push
push
das
addr16
adc
push
int3
arpl
fiadd
in
imul
pop
push
test
(bad)
cmc
aaa
cli
ja
xchg
xor
mov
popa
imul
dec
push
mov
mov
stos
in
scas
das
xor
cmps
movs
aas
adc
inc
in
adc
mov
push
dec
xchg
test
les
xchg
rol
ret
mov
sub
into
jecxz
mov
(bad)
mov
push
loope
ja
push
imul
push
shr
pop
jb
xchg
jne
sahf
mov
jbe
mov
cmp
fmul
sub
movs
bound
ret
out
mov
xchg
mov
movs
pop
mov
ins
push
dec
push
cmp
adc
jle
pop
push
(bad)
mov
jns
mov
mov
scas
(bad)
push
not
lds
pop
xor
stc
mov
das
add
jp
push
enter
jmp
fsubr
leave
xchg
(bad)
call
adc
hlt
test
mov
and
xchg
dec
mov
or
lods
pop
cmp
jecxz
xchg
lods
dec
mov
push
pushf
bound
sbb
mov
cmp
out
jns
popa
int3
inc
jmp
jns
out
xor
jp
movs
inc
add
push
fsub
aam
or
jno
nop
inc
adc
cmc
retf
sbb
adc
lock
(bad)
or
les
cmps
test
dec
xchg
mov
add
ficom
mov
aam
adc
(bad)
add
loope
sbb
adc
mov
aad
int3
xchg
jbe
cmp
into
mov
(bad)
push
ins
dec
xchg
scas
fxch
jbe
mov
inc
test
in
js
repz
adc
das
inc
std
movs
iret
mov
in
loop
cmps
dec
out
cmp
stos
repz
add
mov
ja
aaa
add
xchg
neg
push
lock
popa
or
aaa
xchg
inc
xor
push
sbb
adc
and
and
daa
not
sbb
jns
xor
ins
jle
repnz
fild
arpl
repnz
mov
jb
pop
aaa
or
stos
push
movs
adc
shr
ret
sti
(bad)
ss
movs
add
jl
sbb
imul
xlat
add
rcr
pop
cmp
or
cmp
pop
sbb
outs
je
outs
retf
jmp
mov
pop
xor
xor
jle
mov
gs
mov
aaa
cmps
inc
dec
retf
jge
test
or
addr16
(bad)
push
fisub
in
(bad)
push
shl
mov
sbb
sub
mov
or
and
arpl
cmps
outs
js
push
push
gs
xchg
push
repz
mov
push
outs
push
cmp
lods
sbb
mov
cmp
cmp
inc
ror
ror
mov
shl
push
pmulhw
neg
cmp
mov
cmps
arpl
adc
mov
add
jl
jne
pop
jb
dec
fdivrp
(bad)
lock
inc
cmps
iret
adc
je
fadd
retf
jmp
xor
sar
xor
call
sub
fucomip
(bad)
fmul
inc
fs
cld
sti
repnz
cwde
lods
jne
les
shl
xchg
stos
jb
inc
aad
xor
outs
(bad)
loope
in
mov
mov
mov
push
cli
rcr
mov
jl
movs
sub
add
outs
or
or
sahf
mov
jbe
xchg
cmp
jo
adc
call
push
sub
add
dec
out
mov
loop
(bad)
cmps
dec
jns
mov
outs
push
cmps
movs
ret
ins
push
outs
stc
bound
push
shl
neg
xor
mov
dec
inc
and
imul
shl
xor
inc
sbb
cmc
xchg
mov
push
cmp
mov
mov
cld
aad
xchg
mov
sbb
dec
bound
movs
sbb
push
shl
dec
int3
mov
mov
add
mov
pop
daa
mov
fisttp
leave
add
(bad)
sahf
xchg
out
jp
daa
test
push
inc
(bad)
fs
sbb
mov
mov
pop
sub
dec
push
scas
mov
xchg
pusha
and
test
jle
arpl
repz
mov
jmp
js
sbb
xchg
mov
in
imul
pop
or
add
mov
mov
cmp
imul
int3
mov
jl
mov
xlat
xor
mov
adc
add
stc
arpl
frstor
fcomp
xor
cmps
or
xchg
or
aad
mov
and
cmp
popa
sub
adc
into
mov
cmps
sbb
cmp
cmc
sbb
sbb
test
pop
inc
into
mov
or
mov
mov
or
call
sub
xchg
pusha
pushf
les
fs
push
fild
xlat
js
push
or
cmp
fcomp
int3
loope
mov
jp
icebp
sub
lods
xor
pop
push
in
test
lods
cdq
fild
outs
sub
pusha
jne
sbb
repz
pop
iret
sar
imul
push
mov
fst
cmps
js
and
xchg
mov
mov
ret
sub
test
aas
jmp
and
cmp
out
xchg
loope
and
sub
jne
push
mov
jno
pop
mov
mul
cmp
jp
je
sub
jb
lods
repnz
je
and
(bad)
daa
cmp
adc
pushf
ds
stos
call
dec
xor
call
dec
or
dec
jge
jbe
pop
push
add
movs
out
inc
xor
int
enter
imul
movs
mov
mov
jle
cmp
xchg
sbb
push
dec
clc
aam
lods
sbb
aaa
push
jmp
jae
sub
aam
mov
inc
retf
xchg
das
push
test
out
imul
clc
icebp
imul
sub
dec
push
cmp
sbb
push
mov
rcl
pop
cmp
or
gs
mov
sbb
mov
jmp
scas
dec
fnstsw
push
pop
cli
ds
xlat
cld
in
pop
dec
adc
fdivp
out
and
dec
or
sub
cs
rcr
outs
mov
popf
push
sub
repz
jecxz
fild
inc
push
adc
mov
cmp
test
loope
dec
jmp
mov
stos
cwde
stos
add
retf
push
lds
sbb
loope
scas
sub
fstp
test
mov
xchg
mov
or
adc
dec
inc
clc
adc
mov
ret
add
xchg
ficom
xor
jo
xor
adc
std
cld
jns
into
push
movs
ins
or
cli
jl
add
repz
push
sbb
(bad)
sub
push
scas
inc
std
mov
mov
sti
stc
cdq
addr16
xchg
pop
loop
xor
cs
out
(bad)
lods
repz
mov
pop
test
push
inc
ins
and
and
cmp
jns
push
mov
mov
add
(bad)
dec
dec
fnsave
and
aad
mov
stc
jge
stos
jbe
pop
cmp
cdq
out
test
shl
rcr
mov
inc
pop
push
sbb
adc
xchg
jmp
(bad)
(bad)
dec
cld
enter
add
inc
mov
fnstcw
pop
out
out
or
sbb
mov
das
add
pusha
or
push
adc
xchg
pop
fadd
push
retf
retf
cmp
popf
lock
call
pop
dec
and
(bad)
in
push
xchg
dec
fistp
es
stos
(bad)
sub
(bad)
and
cs
mov
int3
mov
adc
(bad)
mov
popf
(bad)
cmp
xchg
out
push
push
cmp
lds
and
rcr
pop
fstp
fcmove
dec
push
test
fs
sahf
aad
fwait
inc
or
inc
sets
xor
scas
gs
iret
fs
shl
mov
mov
cmp
mov
push
add
(bad)
lahf
pop
icebp
mov
jbe
les
mov
out
inc
sar
xor
xchg
into
pop
mov
pop
sti
ret
stos
aaa
add
or
clc
push
and
pop
push
push
push
add
dec
add
or
pop
jb
aam
movs
in
xor
add
(bad)
test
pop
xor
jge
xchg
cli
loope
loopne
(bad)
push
into
jbe
adc
cmp
sbb
jns
das
jl
out
adc
inc
sub
jbe
js
loopne
sbb
loopne
sub
cmp
jne
adc
sbb
sub
shr
repz
sub
mov
int3
cmps
xor
into
out
out
cmps
in
mov
sbb
std
es
retf
pop
addr16
mov
xchg
sbb
inc
inc
mov
push
xchg
mov
(bad)
ins
shr
mov
stos
(bad)
mov
pop
outs
adc
and
ror
in
xor
jb
and
test
mov
pavgw
ins
push
dec
dec
mov
sbb
dec
nop
jecxz
pop
add
or
sub
retf
inc
jmp
loopne
les
fs
push
inc
pop
ins
call
and
jns
inc
pop
lods
jnp
adc
aad
xor
mov
stos
scas
xor
cs
pop
cmp
xchg
push
pop
aam
icebp
fld
xor
and
jo
(bad)
dec
push
sub
and
xor
js
daa
add
or
cmp
loope
(bad)
jmp
jbe
les
sti
scas
test
nop
shr
jbe
mov
popa
sub
dec
sahf
jno
dec
cmps
sbb
es
add
movs
lea
outs
iret
inc
je
push
and
sahf
pop
sbb
push
in
dec
cmps
pop
(bad)
jl
adc
fwait
jbe
dec
jle
loop
sub
adc
add
stc
bnd
popa
pop
push
mov
push
mov
call
xor
dec
jl
jmp
sahf
push
ja
pop
push
adc
xchg
cwde
mov
jb
les
shr
fcomp
fdiv
movs
jl
or
lods
mov
dec
xor
aam
daa
ror
pushf
cmp
jecxz
pop
push
add
adc
cli
dec
test
jmp
jno
enter
dec
jl
add
shl
mov
add
jnp
shr
loope
lods
ins
sbb
push
popf
mov
xchg
scas
sub
test
iret
mov
mov
add
sbb
fdiv
sbb
and
push
outs
mov
test
sbb
pop
push
xlat
add
inc
lods
outs
dec
dec
xchg
outs
loop
gs
or
retf
loopne
fwait
scas
dec
stos
nop
lock
pushf
imul
sbb
imul
cmc
mov
ja
ror
test
push
enter
sbb
aam
dec
pop
add
dec
cs
cwde
(bad)
idiv
mov
sub
aad
rcr
and
xor
enter
in
jl
push
push
mov
in
sbb
loope
lea
push
mov
push
jnp
mov
pushf
ins
jmp
push
adc
cmp
mov
in
adc
out
xchg
xor
add
(bad)
pop
xor
add
mul
ins
nop
adc
pop
add
daa
push
ror
fadd
mov
mov
fldenv
mov
int3
jp
or
xchg
pop
clc
pop
xchg
or
jecxz
rol
aaa
pop
cmps
mov
shl
daa
jmp
outs
inc
push
mov
pop
mov
and
xchg
cmp
loopne
pop
jecxz
wbinvd
dec
scas
inc
lahf
lods
jmp
aaa
dec
mov
rol
lahf
ds
out
sbb
lds
dec
sbb
mov
outs
(bad)
nop
nop
inc
fisubr
xchg
arpl
loopne
mov
pop
sar
(bad)
mov
cmc
inc
aad
cmp
data16
shl
pop
ficom
add
push
rol
fnstsw
inc
cmp
dec
aas
pop
int
and
seto
ror
aas
dec
push
in
dec
xlat
mov
mov
push
leave
pop
lock
mov
sbb
push
mov
imul
fneni(8087
test
sbb
push
int3
adc
stos
push
cld
dec
mov
gs
mov
xchg
std
jg
test
xor
or
in
je
pop
rcr
cmc
mov
or
jge
(bad)
loopne
and
or
test
shl
push
sub
push
pop
or
scas
adc
in
dec
out
xchg
add
adc
int3
and
ins
(bad)
cmc
shl
xor
adc
mov
and
xor
cmp
lahf
mov
out
or
jp
lahf
call
cmps
fwait
rol
push
test
in
xor
fsub
xchg
(bad)
add
push
pop
out
mov
cmp
adc
daa
in
movs
stos
pusha
and
xchg
sub
adc
xchg
push
or
bound
xor
add
push
xchg
sub
mov
lahf
push
add
(bad)
jmp
cdq
or
xchg
dec
xchg
pop
mov
xchg
mov
repnz
hlt
dec
mov
dec
pop
adc
rol
(bad)
mov
xchg
scas
dec
fcomp
cs
aaa
xor
ret
push
adc
lea
pushf
cmp
aas
ja
test
div
movs
or
dec
arpl
adc
push
cdq
pop
imul
inc
clc
mov
push
push
inc
sub
sbb
mov
mov
mov
pop
mov
test
mov
ret
dec
fisubr
jg
sar
lods
enter
and
xor
xchg
call
pop
popf
cld
movs
push
and
cld
adc
dec
pushf
jno
mov
rol
lea
inc
gs
xor
call
stos
sub
pop
mov
sbb
inc
pop
aad
retf
jbe
cs
(bad)
jmp
fwait
iret
inc
sbb
je
dec
repnz
sub
adc
dec
pop
mov
and
cmp
sbb
cmp
jle
or
pop
pop
xor
adc
cdq
or
rcl
das
adc
push
adc
ins
and
fldenv
gs
add
int3
xchg
(bad)
into
push
mov
and
scas
cmp
ud2
iret
mov
jecxz
pop
cmp
cli
aam
data16
and
jo
pusha
ret
sbb
fisttp
xor
or
mov
push
xchg
cs
cmp
ret
rcr
rcr
inc
cmp
mov
xlat
sbb
cli
cmps
and
cmps
test
cmp
inc
lock
mov
and
sub
fst
inc
in
in
dec
adc
jb
jbe
pop
xchg
aaa
mov
sub
(bad)
fisubr
test
jmp
push
jmp
pop
lds
xchg
fmul
mov
daa
sbb
jne
cmc
sub
jmp
dec
stos
cs
and
iret
sahf
call
and
xchg
sub
xlat
xor
mov
cmp
or
inc
jb
fldenv
mov
jecxz
push
retf
sbb
pusha
cld
test
(bad)
fist
push
sbb
mov
sbb
repnz
push
xlat
dec
daa
in
sub
sahf
sahf
mov
fstp
test
mov
fmul
mov
add
push
scas
adc
in
js
or
xchg
cmps
dec
js
jl
sbb
or
addr16
dec
ins
pop
stc
bound
inc
enter
add
or
jae
sti
sbb
cli
or
mov
hlt
inc
icebp
dec
ret
sbb
push
arpl
inc
mov
xchg
mov
dec
inc
aaa
jmp
or
(bad)
xchg
pop
jo
push
and
lds
ins
fstp
push
and
setae
cld
pop
(bad)
les
or
mov
nop
and
jecxz
enter
add
outs
adc
fbld
call
test
mov
test
fidivr
jnp
outs
repz
sbb
loope
push
jl
lods
push
ss
push
addr16
xor
inc
jl
gs
push
je
sub
push
cmp
rol
or
or
push
jnp
leave
sbb
test
int
scas
xlat
cmps
mov
(bad)
call
xlat
outs
xor
sub
mov
in
out
xor
add
int
rcl
adc
xchg
fs
outs
addr16
mov
xchg
push
call
dec
les
cmp
push
cmp
call
pop
mov
mov
sub
mov
jbe
or
fnsave
ss
iret
jne
inc
mov
adc
out
xchg
cmp
lock
jb
inc
jl
add
in
imul
lods
sbb
sbb
mov
lea
out
data16
mov
push
jmp
xchg
jno
xchg
loope
dec
in
adc
ja
ss
add
mov
pop
call
pop
mov
cdq
sbb
mov
scas
outs
xchg
dec
sub
fist
lods
mov
out
fst
xchg
inc
fisub
dec
test
jmp
xlat
shl
cmps
repz
mul
jmp
dec
imul
lds
arpl
out
add
cmp
clc
loopne
ins
sub
shl
and
jbe
pop
jmp
pusha
sub
mov
push
push
sub
outs
ror
sbb
pushf
inc
pop
into
jno
adc
jge
sbb
js
stc
(bad)
imul
jo
sar
dec
and
xchg
outs
pop
or
push
cld
in
or
rcr
(bad)
data16
jecxz
adc
scas
jmp
cmp
push
repz
or
cli
gs
stos
daa
push
mov
mov
inc
ds
inc
xchg
cs
inc
push
push
pop
push
icebp
(bad)
fwait
lea
lds
shl
sub
and
daa
xor
shl
mov
les
push
sub
xlat
mov
call
or
loope
mov
scas
jmp
adc
dec
push
jecxz
sub
test
dec
mov
out
xchg
sti
xchg
push
div
iret
mov
fst
nop
xchg
in
mov
push
jg
xor
jge
jp
fmul
cmp
mov
out
jg
aam
dec
jle
adc
outs
fimul
ret
lock
lahf
pop
int
sub
jle
fwait
fwait
lea
jb
and
loop
outs
xchg
cmps
lock
cld
mov
xor
pop
sbb
and
aaa
mov
inc
xor
pop
ins
sub
and
mov
dec
dec
sbb
or
mov
mov
aad
push
loop
mov
aas
or
test
repz
cmp
sbb
clc
cmps
stos
adc
push
out
cs
je
shr
in
pop
pop
jbe
pop
jle
sub
xchg
sbb
and
int
sti
repnz
outs
push
jae
xchg
mov
and
jl
mov
sti
ins
jbe
fwait
ins
sub
adc
fisub
in
jnp
adc
mov
xor
mov
and
mov
push
es
dec
mov
retf
aad
and
inc
xchg
shl
jmp
inc
ja
mov
popf
lds
xchg
lods
call
mov
mov
jmp
jno
or
(bad)
push
push
fidiv
aaa
out
xor
ror
pop
bound
inc
(bad)
out
push
das
std
inc
jg
pop
or
ja
sbb
add
and
inc
mov
push
xlat
adc
sub
aad
sub
cmps
int3
daa
push
jne
shr
in
mov
jne
sahf
and
cmp
inc
das
btr
push
addr16
pop
mov
out
pushf
test
jae
mov
jecxz
aad
cld
push
(bad)
push
xor
mov
sbb
inc
adc
ss
or
sub
sub
fistp
dec
das
mov
mov
adc
out
add
or
fadd
mov
sub
adc
lock
sbb
outs
mov
sub
mov
std
xchg
mov
sbb
mov
ins
push
pop
push
leave
mov
xchg
fisttp
sti
ds
fstp
sbb
scas
sbb
jecxz
cmps
fild
sbb
int
dec
clc
bound
or
cld
inc
pop
out
push
cs
fs
mov
jnp
pop
jp
ins
jb
mov
iret
push
rcl
or
enter
sub
out
or
inc
inc
xor
add
and
xlat
imul
repnz
adc
mov
sub
pop
dec
xchg
pop
dec
pop
cmp
xor
mov
jecxz
mov
gs
mov
add
outs
mov
cmp
(bad)
pop
pushf
fadd
(bad)
int
mov
repz
or
ins
add
(bad)
and
mov
setg
jbe
fidiv
xchg
push
jb
cs
adc
dec
mov
add
push
call
cli
in
das
sub
jae
xor
sub
mov
pop
(bad)
cmp
jne
fist
enter
mov
mov
mov
ins
gs
mov
adc
gs
dec
shl
add
lahf
pushf
adc
dec
mov
push
retf
pushf
popa
push
jp
stos
mul
shld
scas
and
ins
pop
outs
pop
rol
pop
push
gs
aas
inc
dec
push
pop
sub
out
addr16
loopne
iret
mov
jmp
outs
scas
adc
xchg
rcr
loop
test
xor
ret
std
dec
lahf
test
pop
movd
int
movs
(bad)
jmp
(bad)
hlt
mov
clc
pushf
iret
and
jl
aad
pop
add
sub
inc
test
loop
aas
fwait
pop
pop
or
fs
ret
callw
xchg
pop
xchg
push
loopne
cmp
jae
pop
sbb
imul
add
jp
mov
mov
and
sub
jmp
(bad)
adc
xchg
xor
int3
cmp
cmp
mov
movs
or
xchg
push
test
and
lods
xchg
or
(bad)
cs
push
lahf
mov
jge
stos
xchg
ins
pop
pop
or
jmp
mov
sub
sahf
stos
inc
(bad)
pop
push
out
and
lahf
das
cmps
fwait
in
cmp
imul
and
xchg
sar
push
mov
mov
push
add
pop
cmps
pop
dec
test
or
dec
add
(bad)
and
xor
add
cmp
jnp
call
mov
repnz
fidivr
clc
sbb
popf
enter
loop
daa
das
loope
cmp
inc
xor
xor
mov
mov
in
jmp
loop
mov
lahf
call
dec
mov
cld
push
pop
loope
addr16
in
mov
sub
int3
mov
(bad)
(bad)
sub
mov
adc
jb
mov
or
outs
rcr
sub
clc
lods
imul
aas
pop
movs
and
shr
shl
mov
mov
(bad)
clc
push
lods
arpl
xchg
cmp
test
xchg
jb
cmps
sub
aad
jno
adc
add
xor
adc
loope
pop
xlat
mov
mov
xchg
cmp
add
ret
ja
into
adc
jo
inc
lahf
mov
sub
mov
sub
repnz
call
xor
fst
sub
popa
mov
in
pop
fidiv
inc
sub
lods
push
inc
retf
xchg
enter
ror
add
push
icebp
xchg
or
lods
jo
(bad)
mov
repnz
ror
jp
cwde
mov
hlt
jle
add
and
xor
mov
sbb
popa
push
mov
mov
jae
xor
inc
das
cmp
loop
(bad)
retf
mov
dec
and
sbb
dec
lock
test
jmp
cmp
mov
jb
or
and
dec
xchg
mov
xor
fisub
jp
pop
rep
outs
sbb
dec
dec
dec
mov
repnz
push
xchg
push
and
mov
xor
retf
and
jne
mov
loop
jnp
mov
scas
dec
bswap
pop
or
test
jg
lahf
mov
dec
jnp
pop
sbb
inc
or
adc
or
push
jne
int3
int3
mov
adc
mov
rcr
mov
push
add
retf
adc
leave
xor
movs
in
jge
test
sbb
jecxz
xchg
mov
in
ja
xor
stos
and
xchg
pushf
jmp
retf
stc
fdiv
cmp
xor
jb
into
jmp
jbe
lods
cmp
fld
pop
mov
push
mov
aam
jg
add
imul
cmp
jmp
test
jbe
cmp
fwait
sbb
jp
xchg
cli
push
xchg
add
(bad)
jl
adc
rcr
loop
jmp
jns
pop
into
cmp
and
repnz
mov
dec
mov
pop
bound
pop
(bad)
mov
mov
into
fisttp
or
repz
cmp
scas
daa
ins
mov
push
add
leave
or
gs
div
mov
inc
lods
pop
(bad)
sbb
pop
aam
xchg
addr16
jle
push
adc
mov
xor
push
bound
lods
lods
retf
jno
mov
(bad)
cwde
mov
pop
or
sbb
push
pop
loope
js
mov
cmovno
mov
repnz
xchg
xchg
mov
mov
stos
dec
mov
jecxz
scas
add
cdq
retf
(bad)
cmp
add
std
out
ror
sbb
jecxz
mul
ins
cmps
or
inc
aam
js
add
test
les
imul
xchg
mov
mov
pop
movs
arpl
mov
pop
outs
adc
(bad)
mov
fcmovb
in
xlat
mov
(bad)
and
inc
cmp
wrmsr
into
pand
jae
fwait
cdq
xchg
xchg
repz
hlt
jae
adc
and
out
nop
dec
cmp
fsub
mov
cmp
dec
ret
in
jbe
sbb
ret
push
xchg
add
sti
dec
into
jbe
lods
out
popf
xor
fidivr
cwde
fmul
cmps
rep
popw
enter
mov
xchg
ds
dec
clc
and
out
fsub
dec
mov
cli
imul
xlat
jp
imul
and
inc
cmc
pop
shr
mov
xchg
xchg
test
sub
imul
sub
nop
in
mov
fcmovnbe
or
mov
sbb
in
push
ja
and
idiv
(bad)
cmp
sub
lea
mov
cmp
imul
mov
jns
or
mov
fimul
mov
clc
je
xchg
enter
call
xchg
sub
jmp
adc
popa
sbb
int3
retf
pop
into
add
pop
into
jbe
daa
call
cld
call
inc
adc
inc
jmp
push
jmp
out
xchg
xchg
pop
clc
cwde
jns
call
inc
retf
imul
jmp
pop
int
cmp
cwde
fmulp
mov
cli
mov
mov
xchg
dec
mov
call
gs
xor
inc
sbb
mov
xor
into
sub
and
fcomp
fwait
xchg
dec
inc
iret
test
ja
xchg
xlat
ret
es
fwait
sub
and
retf
mov
mov
inc
aam
pushf
sbb
mov
popf
gs
fldenv
mov
inc
pop
jecxz
xchg
movs
mov
icebp
lock
sub
xchg
pop
xchg
xor
test
mov
test
je
cmc
pop
jne
in
pop
push
lahf
ret
clc
sub
ins
cmp
xchg
scas
cli
test
shl
pop
sti
out
pop
pop
pop
jle
std
in
dec
push
xlat
xchg
nop
mov
sti
inc
dec
sbb
test
icebp
xor
mov
movs
stc
sti
sub
ins
jbe
add
mov
adc
test
movs
shl
leave
ret
js
add
repz
add
or
retf
xor
das
sbb
sar
loopne
cmp
popf
ja
(bad)
je
je
jae
push
in
and
xchg
cmp
jno
adc
xchg
dec
adc
pusha
ja
cmp
mov
sub
xchg
xor
push
rcr
pop
gs
(bad)
neg
outs
add
retf
shl
imul
and
test
aad
cmp
icebp
ins
push
pop
je
fsubr
stc
xchg
pop
mov
adc
ins
pop
shr
data16
or
outs
in
jne
pushf
repnz
adc
cmc
jbe
cmp
loop
mov
mov
retf
sub
xchg
pop
nop
jecxz
bswap
xor
retf
mov
sub
sub
out
pusha
lock
sub
mov
inc
rcl
xor
shl
mov
fidivr
jns
mov
add
arpl
cmp
push
xchg
aad
sbb
stos
dec
imul
jecxz
cmc
ss
add
rcr
into
jle
lock
dec
cwde
cld
mov
lds
mov
imul
mov
neg
sar
aas
add
je
aaa
stc
cmps
jg
cld
adc
cmp
xor
mov
jo
mov
addr16
fstp
pusha
out
retf
sub
shl
lods
adc
sub
ret
sub
cmovg
imul
cmps
pusha
fisubr
pusha
add
inc
paddq
add
frstor
cmp
in
in
add
int3
mov
cwde
test
pop
jae
inc
lea
test
addr16
dec
sbb
fimul
sub
clc
scas
jbe
fild
jp
out
mov
in
mov
ja
add
mov
xchg
div
adc
retf
fadd
pop
popf
cmp
rol
sub
frstpm(287
push
pop
(bad)
sub
aad
sub
push
int3
loope
test
jbe
pop
jge
aad
arpl
mov
xchg
or
lods
jb
fwait
sub
sbb
arpl
fisttp
lds
jmp
lods
fdivr
sub
xchg
or
out
(bad)
sar
jmp
sub
pushf
inc
cmp
jmp
adc
add
xor
push
std
lods
js
scas
dec
js
sub
push
xchg
mov
pop
sti
dec
lea
test
sbb
mov
sbb
jl
(bad)
mov
cmp
ja
loope
fs
mov
test
daa
sub
mov
mov
ins
cmps
pop
call
mov
push
mov
clc
retf
pushf
out
mov
cmps
xor
js
in
adc
push
iret
iret
ins
mov
jmp
and
(bad)
rol
mov
pop
fcmovnu
xor
out
ins
scas
jmp
hlt
adc
div
jns
ins
jb
adc
repz
pop
mov
xor
bound
mov
add
sbb
mov
inc
inc
in
div
bound
sbb
outs
mov
inc
cld
jg
mov
cs
adc
sub
add
fstp
mov
pop
add
fidivr
addr16
cmp
jp
lahf
dec
scas
mov
enter
cs
stos
sbb
and
cmp
leave
cmp
mov
sahf
icebp
and
and
jecxz
cmp
mov
retf
sbb
rcr
loop
and
call
je
mov
mov
rcr
push
shl
push
add
(bad)
fild
and
dec
fs
cmp
retf
jecxz
jb
test
adc
mov
push
les
(bad)
push
sub
ret
lahf
push
ja
aas
xor
cmps
aas
fcomp
in
repz
(bad)
mov
pop
push
pop
iret
das
mov
aam
adc
out
jp
test
add
mov
jae
and
xchg
in
out
js
and
mov
ds
inc
(bad)
int
push
mov
pop
mov
push
pop
adc
adc
mov
and
lds
(bad)
dec
push
and
sar
lock
push
pushf
mov
mov
adc
or
call
(bad)
push
sbb
mov
add
jnp
pop
pusha
retf
mov
fmul
(bad)
mov
and
loope
lahf
call
test
repz
mov
push
pusha
pcmpgtw
ja
cwde
aad
or
nop
(bad)
aam
sbb
ror
fisttp
outs
or
lahf
jmp
add
lods
leave
ins
inc
pop
mov
jns
adc
push
outs
arpl
xor
lds
push
push
xor
jb
cmc
xchg
shr
pop
aam
loop
or
cmp
dec
fucomp
std
gs
inc
adc
mov
inc
mov
ds
out
mov
test
or
loope
cmps
test
or
mov
sbb
addr16
jl
in
aaa
in
ret
in
jbe
xor
dec
repnz
or
inc
rol
sbb
xor
iret
or
sbb
fs
xor
cmp
outs
lods
jg
mov
in
imul
push
mov
or
inc
mov
(bad)
imul
icebp
inc
sub
js
rcr
fild
mov
pop
jbe
mov
mov
cmp
inc
rcr
add
sbb
or
mov
xchg
jb
test
jle
pop
jns
mov
stos
mov
jns
and
fdivr
fdivr
sbb
push
xchg
or
jecxz
std
fadd
adc
and
scas
jo
pop
mov
icebp
out
xor
or
and
mov
jmp
iret
mov
mov
pop
dec
aaa
mov
adc
cs
fwait
scas
aam
(bad)
aas
mov
add
retf
out
(bad)
jbe
push
inc
add
mov
inc
imul
cli
(bad)
dec
mov
or
pop
xor
test
mov
push
js
nop
or
rcl
mov
mov
imul
mov
int
movs
pop
and
add
iret
or
jl
adc
push
(bad)
shl
stos
mov
xor
jb
mov
sub
mov
fild
aad
in
mov
gs
stos
test
sub
test
mov
cmp
jp
mov
sbb
cmc
add
sbb
fidivr
xchg
xchg
dec
imul
or
fstp
scas
inc
adc
lock
xchg
sub
dec
gs
mov
dec
push
adc
fimul
xchg
jg
retf
mov
js
data16
mov
fdivrp
mov
int
mov
fild
mov
and
aaa
dec
dec
das
std
cmps
push
(bad)
js
dec
mov
imul
jbe
fnstsw
cmc
add
outs
jl
jge
xchg
std
sbb
pushf
mov
jno
sbb
ret
scas
in
push
shl
mov
inc
xor
mov
mov
popf
mov
or
and
out
call
das
enter
fmul
xor
push
cmp
push
mov
js
addr16
push
mov
fwait
mov
mov
adc
pop
test
mov
xchg
fmul
inc
pop
jne
cmp
cld
out
push
xor
xor
aam
ret
cdq
cmp
pop
pop
xlat
jbe
push
cmp
push
inc
leave
pusha
inc
sub
nop
sub
adc
repnz
xor
mov
ror
enter
jle
in
jb
xor
add
ins
enter
xor
jo
xchg
das
inc
pop
out
ins
dec
loop
out
test
hlt
push
outs
pop
sub
inc
cmps
add
fstp
leave
jbe
xor
in
cld
xchg
sub
icebp
icebp
test
in
cs
sbb
clc
push
call
fnsave
xchg
ret
xchg
xor
pop
inc
ja
arpl
xor
je
cmp
int3
adc
or
jg
stos
lods
push
mov
sar
cmp
repnz
cmps
popf
dec
mov
inc
push
lods
push
mov
fs
cmp
sub
loop
pop
js
retf
sbb
sbb
sub
inc
bound
mov
pop
or
mov
ror
cmp
mov
push
mov
sbb
xchg
xor
push
mov
cmps
arpl
bound
dec
jmp
pop
fcmovne
inc
sub
sub
ret
lahf
or
movs
pop
(bad)
nop
cmp
add
lea
ins
in
lods
push
dec
xchg
jp
fild
das
sub
mov
sbb
mov
inc
or
retw
stos
xor
mov
popf
enter
mov
xor
call
mov
pusha
jns
push
mov
iret
fcom
cld
sub
adc
push
fcmovnu
scas
not
mov
cdq
mov
(bad)
dec
aas
das
into
sbb
repz
adc
mov
in
rol
cmp
xchg
mov
stc
jmp
lea
adc
imul
xchg
sub
retf
lods
test
sbb
add
dec
fisttp
mov
pop
imul
sbb
out
test
pop
int3
jge
xchg
loope
jo
mov
mov
jno
xchg
push
xlat
(bad)
js
bound
mov
push
jae
std
sub
mov
bts
mov
in
mov
adc
dec
pop
add
in
loop
adc
inc
push
ins
mov
push
or
ror
sbb
sbb
inc
stc
mov
mov
movs
ret
fwait
mov
out
(bad)
pop
xchg
sbb
or
out
neg
cmp
(bad)
mov
pop
movs
jp
les
dec
dec
push
mov
xchg
int3
cmp
es
dec
or
mov
xchg
inc
and
pop
mov
pop
jne
hlt
faddp
cwde
leave
int3
cmp
or
into
sub
not
and
push
shr
mov
pop
ss
and
imul
mov
inc
cmp
or
(bad)
sbb
or
xchg
inc
jae
rcr
call
cdq
mov
mov
daa
xor
dec
pop
inc
mov
lods
cmp
sub
sub
xchg
loop
sub
jecxz
adc
jb
cli
iret
mov
inc
dec
mov
mov
and
test
dec
sub
nop
aam
or
lock
aad
call
xor
test
shl
bound
popf
xchg
xor
sbb
pop
iret
(bad)
retf
in
inc
mov
mov
lahf
jle
inc
inc
in
out
add
popf
cs
icebp
or
sti
cmp
inc
pop
cmps
push
daa
data16
xchg
out
test
push
jmp
scas
xchg
adc
mov
daa
data16
ret
mov
sbb
xchg
mov
mov
mov
icebp
add
push
ror
fild
scas
dec
lds
add
fstp
xor
loop
(bad)
jmp
cld
lods
popa
push
adc
cmp
xchg
or
(bad)
hlt
lahf
lea
cs
mov
xlat
lods
icebp
jl
push
clc
sub
add
into
cmp
out
jge
pop
cld
aam
jg
fist
mov
cmps
pop
cmps
arpl
(bad)
jmp
mov
int
ds
or
rcr
adc
mov
loop
aad
inc
cdq
mov
sbb
push
enter
mov
add
loope
out
int
or
xor
jbe
sbb
xor
push
or
xor
scas
adc
pop
sub
and
pop
jbe
pushf
inc
sbb
push
add
adc
mov
and
xchg
cmp
mov
sub
call
out
lahf
cmp
mov
dec
scas
jbe
fs
cli
stc
add
dec
push
and
je
sub
(bad)
jmp
xchg
cmc
pop
rol
in
dec
cld
or
loopne
mov
in
push
cs
cld
pop
fnstcw
add
loope
rcr
pop
das
dec
call
push
dec
or
stos
(bad)
jecxz
lds
fcomp
mov
loope
(bad)
mov
fs
add
mov
popa
and
fadd
pop
mov
pop
dec
add
es
sti
mov
sub
add
sbb
out
pop
xlat
psraw
fwait
out
or
das
mov
inc
sti
mov
and
sbb
imul
fimul
icebp
sub
xchg
sub
nop
mov
sbb
inc
movs
test
xchg
xchg
push
and
dec
outs
test
out
jmp
cdq
enter
xor
mov
cld
add
adc
dec
xchg
pop
push
cmps
pusha
mov
cmc
mov
sahf
xor
pop
aad
add
fld
push
xor
push
ret
out
pop
xchg
movs
in
stos
fild
test
push
sbb
mov
fs
sti
ror
clc
xor
outs
jns
push
and
sub
inc
(bad)
(bad)
rcr
jmp
add
aam
arpl
les
or
(bad)
shl
or
add
xchg
test
in
inc
cs
cmp
(bad)
gs
mov
(bad)
nop
push
inc
icebp
mov
nop
ret
sahf
jb
or
adc
mov
aad
cmp
clc
lahf
scas
stos
fild
fidiv
movs
pop
aas
jo
cmp
(bad)
xor
mov
int3
sub
mov
retf
ror
adc
xchg
pop
xchg
and
sub
shl
je
jl
mov
fwait
mov
and
and
fild
popa
jb
mov
mov
xchg
or
push
sub
in
clc
out
pop
fidiv
fisttp
push
cwde
(bad)
in
fwait
dec
or
ds
or
inc
cli
cwde
add
push
dec
sbb
shl
(bad)
ret
pop
cmp
inc
add
(bad)
cmp
cmp
xchg
sub
jb
hlt
mov
test
xlat
adc
mov
sbb
clc
cld
ins
out
es
ret
mov
add
cmp
sbb
mov
add
(bad)
imul
jg
cwde
ja
cmp
sub
bound
rol
aaa
ds
(bad)
hlt
cdq
aas
mov
lds
mov
pop
push
sbb
inc
push
mov
loop
mov
movs
stos
cdq
xchg
dec
xchg
mov
fimul
stc
ds
jb
pop
pop
loopne
imul
scas
xor
ss
xchg
cmp
mov
outs
std
jns
ins
inc
xor
adc
out
imul
mov
add
neg
sub
push
std
daa
sbb
add
aas
mov
lock
out
dec
nop
mov
pop
mov
mov
neg
leave
sub
xlat
fidivr
pop
scas
jne
push
aad
addr16
xchg
mov
and
pop
mov
dec
dec
inc
mov
inc
cmp
add
push
pop
push
cmps
cmp
pop
movs
mov
sub
adc
mov
stos
adc
pop
mov
movs
or
(bad)
xchg
mov
dec
lods
and
hlt
cld
ror
xchg
jbe
cwde
sub
imul
mov
dec
or
push
out
nop
out
sbb
sahf
add
cli
xor
mov
xchg
test
test
fcomp
mov
pop
jnp
mov
mov
or
adc
push
or
stc
mov
aad
js
cmp
leave
test
mov
mov
icebp
fcom
sub
xchg
test
aaa
fwait
pop
adc
(bad)
call
bound
adc
jo
add
repnz
aaa
pop
dec
stc
xor
ins
popa
sahf
dec
out
ret
arpl
out
lods
ret
jl
shr
and
jno
je
cmp
inc
cld
je
out
jmp
push
sbb
mov
jno
sub
test
add
jge
xchg
test
popf
enter
mov
inc
sub
push
mov
push
push
adc
pcmpeqb
dec
sub
sub
ror
enter
push
xchg
jns
push
adc
iret
movs
cmp
fisttp
shl
int
dec
int
aaa
outs
retf
jge
inc
push
mov
xlat
jmp
data16
mov
sahf
xlat
pop
popa
inc
fimul
cmp
jae
imul
test
(bad)
enter
jp
or
out
js
fidiv
mul
stc
pop
mov
ja
into
cmc
jmp
stc
loope
and
lock
xchg
mov
inc
mov
cmp
add
inc
mov
sti
pop
mov
cwde
mov
shr
mov
inc
sahf
pop
mov
add
mov
xor
sub
pop
push
or
aam
mov
ds
cmp
pop
or
bound
sbb
call
mov
mov
jecxz
clc
dec
js
push
pushf
adc
cmp
mov
test
cmp
add
and
cwde
ins
and
leave
imul
dec
test
mov
idiv
into
cmp
(bad)
popf
cmps
lahf
mov
ds
inc
les
lods
aas
jecxz
mov
sbb
cmps
test
shl
xchg
mov
enter
ret
repnz
push
mov
(bad)
rcl
scas
imul
pusha
jle
inc
push
adc
jecxz
cmp
inc
(bad)
add
mov
jge
rol
mov
cld
sti
leave
mov
xchg
(bad)
aas
push
push
mov
cli
(bad)
iret
test
sub
cli
inc
sub
cmp
pusha
xor
cwde
fs
mov
ret
and
mov
sbb
xor
std
dec
in
jle
fisub
das
aad
ja
test
lock
sbb
rcl
fdiv
sti
and
in
adc
sbb
daa
bound
inc
mov
stos
add
shl
lock
xchg
leave
fdivr
lds
data16
jbe
cdq
jbe
xchg
jmp
sub
imul
cmps
dec
fldcw
ss
es
xchg
fld
fucom
ret
out
jg
adc
push
adc
js
jno
(bad)
into
xor
cmp
jmp
dec
sub
and
int3
mov
inc
out
fstp
outs
sti
popa
test
jge
out
mov
or
jl
cvtdq2ps
imul
int
xchg
jb
invd
sbb
adc
dec
mov
add
pop
(bad)
push
add
adc
sub
xor
mov
sbb
mov
cdq
jmp
jecxz
mov
mov
push
cmp
dec
jmp
and
test
mov
mov
ret
mov
dec
jmp
jle
pop
shr
add
pop
push
push
dec
pushf
push
ret
cmp
nop
dec
add
imul
push
ret
test
pop
popa
jl
je
(bad)
int3
stos
mov
push
std
cmp
push
push
pcmpgtd
bound
dec
out
dec
xchg
mov
add
push
jge
fadd
xchg
out
cmp
je
dec
packssdw
sbb
add
fcmovb
das
dec
out
cmps
push
ins
sti
gs
scas
js
inc
jl
mov
in
imul
fs
pusha
loope
pop
neg
mov
int
jle
jbe
bound
retf
lods
ins
out
out
fbstp
fdivr
pop
inc
repz
and
pop
dec
jnp
dec
sub
les
pop
cmps
dec
das
dec
jno
ss
or
inc
popa
out
jl
push
sub
mov
lods
loope
shr
icebp
(bad)
jno
inc
inc
aaa
xchg
and
xchg
(bad)
retf
mov
inc
je
mov
cmp
pop
add
mov
jl
retf
pop
sbb
xchg
les
mov
stos
add
mov
inc
adc
inc
es
test
js
adc
and
test
out
enter
adc
inc
int
xor
in
out
push
leave
mov
sub
xchg
int
pop
out
dec
jne
push
cmp
cld
xchg
loopne
js
lds
leave
popf
and
sbb
mov
std
xor
pop
xchg
xchg
into
or
fbstp
pop
mov
xor
lahf
push
call
mov
cmp
pop
loope
mov
or
call
fld
test
(bad)
retf
into
in
inc
imul
xlat
mov
adc
push
dec
push
xor
rcl
arpl
sub
xchg
cli
mov
jno
push
adc
xchg
std
cmps
xchg
out
adc
xchg
jns
jnp
addr16
add
(bad)
mov
inc
ret
ins
mov
test
push
xchg
jecxz
out
rcl
sbb
leave
inc
inc
cmp
sahf
(bad)
clc
jge
pusha
xchg
mov
add
push
iret
or
xchg
pusha
fist
retf
das
test
(bad)
call
jns
iret
dec
inc
(bad)
(bad)
test
ja
test
ins
imul
sub
sub
arpl
push
xchg
push
or
push
push
jne
mov
retf
out
out
sub
push
dec
mov
sar
or
aam
inc
cs
push
push
mov
dec
shl
mov
cmp
clc
mov
jb
stc
mov
stos
stc
retf
out
loop
bnd
retf
fst
mov
scas
or
inc
(bad)
push
aam
in
xor
mov
push
adc
pusha
int
into
retf
inc
ja
mov
ss
pop
jge
xchg
test
jbe
xor
scas
cmp
jnp
hlt
jns
adc
dec
cmp
mov
outs
and
and
add
mov
jmp
jo
mov
dec
mov
and
jmp
fucom
xchg
sub
std
mov
shl
or
out
and
inc
lods
and
jp
imul
stc
mov
pop
enter
sahf
cmp
mov
arpl
outs
push
test
and
jne
sub
push
mov
shl
xchg
adc
fcmovb
mov
dec
and
mov
mov
loopne
es
sbb
outs
(bad)
dec
mov
and
div
fs
das
gs
and
retf
call
leave
mov
jge
mov
dec
ins
out
cmp
out
cmp
mov
or
std
stos
retf
cmps
adc
push
jne
pop
sbb
cwde
push
sti
jmp
mov
pop
pop
cmp
pop
inc
inc
dec
xchg
sbb
loopne
sub
(bad)
dec
push
mov
cld
inc
xor
ficom
push
sbb
sbb
jp
lods
pop
mov
(bad)
loopne
ret
mov
pop
dec
mov
fdivr
mov
mov
sub
and
call
cmp
push
inc
xchg
xchg
xchg
xchg
mov
add
retf
pop
repnz
fcomp
psubsb
or
rcl
xchg
test
gs
pop
shl
mov
dec
jne
xor
xchg
cmp
(bad)
ins
(bad)
out
cmps
int3
xchg
sub
fs
jmp
mov
adc
add
mov
xchg
push
xchg
mov
sub
pusha
nop
scas
inc
(bad)
push
popf
jp
mov
cmp
out
pop
xchg
adc
(bad)
call
inc
jnp
(bad)
jmp
out
pop
aad
inc
ja
sbb
dec
jae
lock
mov
imul
lds
jmp
(bad)
ds
add
inc
in
xchg
test
cmp
push
inc
sub
mov
push
push
jg
fistp
shl
(bad)
loopne
in
xchg
xor
mov
xchg
aas
mov
pop
and
lods
mov
les
(bad)
mov
fidiv
lods
sbb
cmp
enter
sbb
imul
mov
jne
pushf
lahf
cmp
push
sub
imul
repnz
popf
xchg
lock
in
or
xchg
cmc
jl
sub
and
mov
fadd
and
jb
and
(bad)
mov
sar
or
mov
cmc
inc
mov
push
xchg
xor
aad
out
sbb
daa
jnp
test
inc
jno
sbb
sar
cmp
sub
or
in
push
xor
and
pop
add
call
push
int3
scas
xchg
cmc
jne
sub
jo
data16
fldenv
arpl
push
stc
inc
add
sub
cwde
test
and
sbb
lahf
bound
pop
or
sbb
and
xor
out
xchg
hlt
pop
aas
aas
xchg
sti
call
jle
arpl
mov
je
pop
ret
adc
or
mov
xchg
(bad)
mov
push
adc
movs
icebp
lods
xor
jbe
jns
add
xchg
cdq
shr
ins
imul
ins
lock
(bad)
pop
ds
rol
push
mov
jnp
js
fidivr
aas
sbb
mov
inc
pop
mov
arpl
int3
or
inc
outs
sar
test
scas
jno
addr16
outs
cmc
retf
xor
mov
jae
inc
mov
cmp
repnz
repz
imul
fimul
sub
imul
mov
push
sbb
aas
ins
sub
fild
xlat
or
adc
inc
xchg
mov
and
mov
jl
out
pop
adc
call
mov
fcmovb
mov
pushf
mov
(bad)
mov
jp
xchg
(bad)
loope
cdq
inc
ds
and
dec
test
cmp
call
mov
out
test
fmul
pop
push
pop
icebp
in
stos
lea
imul
jbe
xchg
bound
xchg
push
push
loopne
hlt
mov
inc
inc
adc
iret
and
sbb
ror
ret
xchg
repz
sbb
cmp
mov
mul
mov
or
jmp
(bad)
jmp
xor
xchg
clc
shr
jno
gs
or
es
call
loope
xchg
lahf
imul
push
pop
pusha
lahf
mov
dec
dec
imul
pop
cld
pushf
out
mov
jecxz
mov
xchg
outs
popa
xor
add
push
daa
fdiv
mov
pop
dec
push
xchg
jecxz
mov
jo
adc
cmc
lock
mov
test
shr
xchg
add
jmp
out
xor
mov
icebp
or
loope
in
pop
mov
add
push
xor
pop
and
push
cmp
mov
dec
adc
cld
mov
test
and
in
adc
out
add
imul
hlt
std
aam
or
xlat
bound
scas
test
outs
addr16
(bad)
push
dec
or
mov
sar
idiv
adc
call
int
out
out
jns
retf
(bad)
adc
ss
icebp
or
sbb
ror
inc
push
dec
inc
leave
sahf
add
iret
sub
(bad)
adc
push
ins
into
adc
cmps
mov
lea
sub
dec
and
out
out
xchg
lock
je
add
(bad)
dec
aad
ficom
xchg
in
popf
ss
icebp
mov
out
test
outs
jb
inc
mov
js
sahf
sub
adc
(bad)
(bad)
xor
out
adc
mov
push
sub
xor
rcr
aas
int3
and
push
pop
push
loopne
inc
xor
adc
loopne
dec
test
das
int
imul
dec
push
xlat
ins
repz
in
inc
inc
sub
xchg
push
aad
dec
pop
mov
loope
xchg
sahf
call
xchg
clc
mov
cmps
adc
add
(bad)
in
cmp
aas
pop
jl
mov
repnz
xor
ds
into
sti
mov
xchg
movs
sub
push
repnz
gs
or
stc
mov
outs
push
sbb
jle
xlat
test
mov
jmp
xchg
mov
adc
lock
ror
sbb
cwde
inc
movs
mov
not
retf
fisub
(bad)
lods
sub
xchg
test
add
mov
and
cli
jb
loopne
dec
xchg
sbb
das
cmp
push
je
rcl
mov
or
jg
mov
fisttp
and
ins
in
dec
mov
std
jge
scas
popa
push
sti
aam
xor
pushf
sbb
cmc
sar
ins
jo
lds
xchg
mov
cld
jnp
and
or
and
fild
je
push
aaa
test
outs
jno
and
pop
jae
inc
or
fisub
and
inc
push
jne
push
mov
ret
lea
call
ror
jnp
mov
push
loope
aas
and
sbb
je
lods
mov
jge
xchg
pop
jbe
jb
xor
popf
pop
ror
in
loope
mov
xchg
add
hlt
mov
xchg
xor
or
std
or
(bad)
xor
or
xchg
push
jg
pop
adc
dec
sbb
arpl
or
inc
inc
mov
sti
bound
pop
pop
sahf
pop
aaa
or
pop
cli
mov
jo
icebp
in
es
icebp
sbb
mov
rol
sub
std
fidiv
or
or
in
jno
push
int3
sbb
fnstenv
xor
sbb
xor
imul
ins
push
dec
jbe
xchg
jb
jnp
ins
mov
xor
dec
dec
pushf
push
in
mul
test
jl
es
outs
retf
scas
jp
cmp
repnz
adc
ds
push
pop
dec
fcomp
(bad)
enter
fcmovne
inc
push
aas
jge
call
adc
ja
dec
xchg
mov
dec
repnz
xchg
aaa
sbb
xor
mov
fcmovnbe
loope
mov
and
cmp
dec
lea
shl
cmp
ficom
outs
cmp
xchg
add
pop
cmc
ror
and
lods
test
das
gs
jmp
mov
jecxz
push
dec
lea
pop
mov
enter
or
push
sbb
mov
clc
pop
hlt
push
sbb
in
imul
test
imul
enter
and
mov
loop
push
push
pop
cmp
iret
push
enter
call
mov
(bad)
xlat
and
icebp
push
out
jle
movs
out
aaa
in
jmp
xchg
mov
jmp
xchg
push
ds
dec
push
stc
or
adc
add
mov
gs
ds
push
in
push
pop
test
dec
(bad)
cld
jmp
xor
inc
test
cmc
mov
mov
xor
movs
ins
jl
es
outs
inc
cmp
es
ficom
lahf
movs
xor
addr16
aad
hlt
cmp
and
dec
loop
mov
xlat
jmp
and
mov
and
sub
jno
gs
push
jl
repnz
gs
pop
xor
movs
and
cmp
xchg
sub
or
adc
test
push
aas
mov
popf
jo
inc
push
dec
xor
cmp
xchg
mov
mov
or
pop
fwait
mov
jns
push
inc
je
inc
mov
loopne
and
xor
adc
inc
xor
sbb
inc
aam
adc
fistp
or
fdivr
and
in
adc
test
sbb
test
push
sub
imul
and
dec
fnstsw
int
ins
arpl
inc
xchg
sti
inc
hlt
and
cwde
xor
mov
adc
sub
cmps
jg
in
shl
xor
call
xor
pop
lods
daa
inc
dec
inc
in
lahf
jmp
lods
push
out
pusha
sbb
xor
xchg
pop
jg
jno
sbb
das
or
cwde
mov
ins
push
sub
mov
sbb
mov
add
mov
adc
fst
fisub
retf
les
cwde
cmp
or
pushf
xor
jg
stos
mov
pop
arpl
mov
dec
cmp
fstp
mov
cmp
pop
dec
sub
jbe
inc
and
sbb
adc
jmp
cmp
fwait
pop
cs
stos
sti
mov
add
xchg
jnp
pop
xor
jg
and
xchg
into
adc
lds
pop
cmp
lds
in
clc
(bad)
sbb
mov
leave
mov
imul
repnz
push
imul
es
mov
pop
xor
mov
ret
mov
aaa
call
mov
std
mov
jne
fisttp
adc
retf
mov
jcxz
int3
dec
jbe
lods
push
imul
lods
dec
mov
or
mov
fidiv
jne
dec
sar
les
ret
out
mov
cld
sahf
mov
adc
push
adc
mov
sbb
mov
push
fwait
int
mov
adc
adc
cmps
ins
pusha
jp
dec
lea
xor
leave
push
pushf
retf
mov
xchg
cld
test
pop
push
mov
xor
fs
sbb
out
icebp
xor
push
int
adc
jo
mov
xor
mov
aam
(bad)
loop
pop
mov
mov
mov
dec
jo
jbe
cmps
adc
fisub
mov
mov
pop
popf
clc
in
pop
push
(bad)
(bad)
mov
call
xchg
cmp
test
xchg
jno
imul
sbb
je
push
outs
push
or
sub
inc
or
adc
and
mov
scas
cwde
test
jg
xlat
cmp
inc
fucomip
pop
leave
jo
inc
mov
mov
pop
shl
mov
sub
mov
push
cmp
aas
cmp
fisub
push
push
pop
cmps
xlat
inc
dec
bound
xchg
pushf
mov
adc
adc
sub
mov
jne
clc
pop
clc
pop
stos
cmps
lock
in
or
(bad)
dec
add
cld
fsub
dec
ret
or
in
xor
xor
cmp
jb
xchg
(bad)
loopne
jp
mov
mov
push
loopne
je
and
bound
icebp
mov
jge
call
push
ffreep
inc
enter
test
xor
or
cs
jno
in
ss
add
xor
(bad)
loop
les
popa
ds
adc
or
xchg
add
jl
in
pop
mov
js
aam
mov
pop
inc
sbb
jne
or
xchg
rol
rcl
jmp
lea
inc
movs
sub
fadd
push
outs
dec
fdiv
rcl
cmp
mov
and
mov
sub
movs
xchg
push
xor
sbb
int
jb
mov
repz
fbld
dec
sub
mov
adc
sbb
inc
stos
mov
jbe
call
lods
ret
sub
xor
inc
retw
pop
inc
rol
in
lods
sub
mov
xchg
xor
sti
add
mov
shl
push
loop
mov
ror
push
std
sub
int
adc
push
mov
fs
add
pop
out
jne
inc
sub
adc
lahf
cmps
push
jns
and
cmp
mov
int3
mov
outs
xchg
imul
xchg
loope
xlat
inc
inc
mov
adc
xor
push
in
mov
cmp
xor
(bad)
ret
outs
inc
mov
into
mov
cli
out
mov
stc
stos
repz
mov
lods
enter
cmps
call
jmp
ins
jmp
cs
jae
jno
shr
xchg
pop
mov
sub
xor
movs
aaa
ins
inc
dec
jo
add
pop
sbb
mov
popa
(bad)
clc
hlt
lahf
push
mov
jbe
ja
shl
shl
inc
xor
in
iret
sbb
jmp
sbb
shr
push
xor
push
xchg
fs
outs
jl
(bad)
sahf
xlat
ret
lods
mov
mov
adc
scas
cmp
xor
cmp
rcr
pushf
ss
mov
xor
fnstenv
sub
ror
imul
fdiv
or
cmp
(bad)
cmps
sub
add
push
adc
out
push
cmp
mov
push
adc
scas
mov
pusha
mov
adc
jns
push
in
fbld
test
mov
and
cmp
dec
xor
cdq
inc
ret
outs
dec
jns
addr16
aaa
sbb
mov
std
mov
shl
mov
shr
ret
push
mov
sbb
fs
xchg
mov
sub
dec
mov
or
push
mov
mov
dec
loopne
mov
sti
fadd
add
jmp
jno
xlat
mov
add
jg
jmp
mov
add
jmp
sbb
xor
pop
xchg
lahf
pop
dec
dec
inc
in
call
inc
inc
xor
aas
je
in
shr
cld
cmp
mov
pusha
mov
push
nop
aad
stos
pop
shl
jl
xchg
icebp
mov
inc
mov
ror
add
(bad)
pop
and
pusha
fnstsw
leave
mov
jbe
data16
xor
pop
clc
jbe
xchg
shl
and
xchg
fcom
andps
or
imul
popf
cmps
adc
addr16
push
lods
dec
imul
jno
les
cli
cmps
repnz
(bad)
sti
pop
xchg
pop
pop
mov
jl
xchg
mov
inc
inc
inc
mov
pushf
adc
outs
sub
out
test
mov
inc
call
mov
xchg
mov
and
sbb
fbld
leave
mov
or
push
sub
adc
jae
add
jb
pusha
jl
cwde
sbb
inc
out
mov
mov
adc
repnz
cli
iret
mov
out
popa
repnz
(bad)
sub
rcl
addr16
xchg
pop
int
sbb
add
sbb
pop
xchg
call
and
cmp
push
dec
cld
pop
dec
out
add
imul
sahf
test
fcom
scas
push
call
xor
fnstcw
int3
test
inc
enter
inc
cmp
add
or
cmp
dec
arpl
mov
push
fdiv
cdq
into
mov
outs
jecxz
scas
out
stos
jns
pop
(bad)
(bad)
mov
push
xchg
push
(bad)
leave
dec
out
push
cli
mov
xor
mov
in
addr16
lea
cs
dec
or
inc
xor
sub
pop
ret
mov
das
or
pop
jns
fmul
lods
mov
dec
dec
mov
jl
or
lods
call
push
out
mov
clc
jp
out
mov
les
pop
ror
mov
xor
loope
das
inc
dec
test
shr
fcomp
cli
add
or
jo
pop
cs
and
enter
inc
mov
lods
xchg
mov
lea
fdivr
ds
jne
cmp
repnz
and
dec
adc
dec
xor
pop
lahf
fwait
jmp
mov
iret
jno
out
adc
xchg
out
inc
repnz
cmp
scas
add
std
or
out
test
out
lods
and
mov
push
out
pop
pop
sub
sahf
adc
mov
cmp
cmps
cmp
imul
(bad)
dec
push
add
adc
xor
aad
mov
mov
sti
jnp
bound
mov
mov
data16
mov
xchg
mov
cmp
xchg
mov
inc
daa
xchg
repnz
pop
imul
call
call
pop
or
xor
xchg
test
or
test
dec
jg
mov
sub
adc
push
sar
in
xor
mov
mov
and
cmps
jge
push
call
test
jl
and
jne
xor
jo
movs
sti
pop
cmp
sub
out
(bad)
mov
cmp
clc
sub
fidivr
cdq
add
bound
inc
out
imul
int3
imul
pushf
stos
pop
xor
or
out
jae
into
pop
pop
in
mov
es
mov
jg
js
mov
sub
inc
push
lss
sahf
mov
fucomp
out
(bad)
cdq
add
adc
(bad)
out
and
push
jge
scas
or
fldcw
push
sub
retf
mov
dec
fcomip
inc
hlt
jnp
pop
or
push
mov
ja
js
mov
adc
push
xchg
and
jb
and
lock
(bad)
(bad)
jge
loopne
cmp
xchg
fst
lock
mov
sub
hlt
adc
shl
dec
out
(bad)
push
push
dec
xor
mov
mov
cs
and
aad
fld
repz
(bad)
push
push
xchg
xchg
mov
ret
jl
sti
imul
push
pop
cmps
test
add
lea
xchg
adc
repz
xchg
pop
xchg
xchg
es
pop
jb
ins
mov
push
xchg
movs
adc
int
mov
clc
imul
push
retf
pop
ins
outs
daa
(bad)
mov
add
adc
rcl
rcl
test
mov
retf
cmp
push
call
sar
xor
cmps
std
loope
push
pop
mov
sub
leave
call
loop
out
int
in
test
lock
dec
out
xchg
push
or
mov
push
ins
mov
nop
(bad)
xchg
dec
int
mov
mov
xchg
or
inc
xchg
movs
js
jae
jb
jae
out
shr
xchg
in
or
ja
xchg
out
gs
jmp
add
loope
ss
inc
and
sub
xor
mov
mov
cmp
std
ins
jmp
xchg
call
call
popf
das
pusha
lds
or
lock
sub
push
stos
stos
dec
push
in
inc
mov
jae
mov
fistp
ficomp
add
xor
ret
std
mov
xor
nop
sub
mov
test
into
jo
retw
jg
(bad)
cli
stc
or
push
adc
test
add
fstp
arpl
dec
les
sbb
push
xchg
(bad)
movaps
mov
add
cli
lds
sbb
(bad)
data16
sub
out
dec
pushf
jmp
call
ds
outs
jmp
or
mov
sahf
pop
es
inc
gs
sbb
data16
in
mov
add
cmp
mov
movs
mov
in
hlt
imul
sub
mov
js
inc
out
sbb
xchg
icebp
stos
push
ins
push
fs
mov
mov
push
rcr
pop
push
fistp
xor
xor
fiadd
sub
cmps
out
or
mov
and
pusha
adc
outs
mov
add
or
lock
fistp
pop
shr
cdq
mov
push
push
shl
mov
ins
iret
cmp
and
in
push
mov
out
hlt
pop
aad
adc
cmp
loope
ret
sub
loop
jmp
xchg
js
sbb
and
or
sti
fs
fldcw
pop
jmp
je
and
dec
popf
or
sahf
push
mov
add
(bad)
shr
mov
mov
mov
push
in
xor
rcl
sahf
rol
xchg
pop
inc
and
lods
add
jno
repz
pop
call
xlat
jae
jno
jg
retf
data16
and
das
add
aaa
jp
jmp
movs
retf
cmovbe
cdq
shl
dec
cs
sti
mov
out
cdq
pop
dec
or
inc
hlt
adc
mov
out
outs
mov
movs
mov
aam
push
mov
inc
xchg
test
fistp
shl
adc
xchg
scas
add
call
or
push
xor
push
sbb
sbb
or
les
cmps
jp
push
jl
out
sar
sbb
pop
cmp
cmp
sbb
cmp
test
jl
shr
(bad)
cmp
mov
int
inc
sbb
xor
dec
dec
(bad)
movs
(bad)
xor
shr
ins
popa
cmp
fcomip
jmp
mov
mul
mov
xchg
add
frstor
pop
stc
cwde
enter
fimul
jecxz
xor
or
repz
jo
and
lahf
loopne
xor
push
repz
and
idiv
ficomp
sub
(bad)
enter
jl
lahf
lods
ja
aad
mov
cmps
jne
sbb
xchg
iret
and
div
pushf
push
jmp
ins
daa
in
arpl
stc
fwait
scas
popa
jp
cwde
cmp
dec
push
out
jbe
xlat
jb
js
stos
imul
ret
or
sub
push
xlat
arpl
mov
xor
lds
adc
fldcw
lods
out
push
leave
outs
out
push
xchg
xchg
nop
jo
mov
sub
add
dec
dec
rcr
pop
xor
push
jo
dec
and
sbb
jns
jle
inc
pop
fiadd
mov
pushf
mov
xchg
dec
or
xchg
inc
jl
mov
xor
out
xchg
movs
test
daa
dec
mov
sbb
shl
and
inc
fdivp
cdq
scas
leave
jmp
xchg
mov
loope
push
dec
sub
mov
fs
stos
inc
cmp
ss
inc
inc
gs
ror
push
xchg
xor
xor
jne
inc
or
mov
mov
loopne
mov
cmp
dec
pop
sbb
fiadd
idiv
rcr
icebp
lahf
add
mov
in
mov
mov
ja
mov
push
jg
jb
repz
or
jle
cli
jp
push
pop
lods
push
sub
sbb
add
jp
jge
mov
cmps
xor
lahf
into
jp
xchg
fidivr
fldcw
fstp
dec
jmp
js
pop
iret
pop
xchg
xor
in
xchg
fadd
xchg
pop
push
cmc
mov
push
cld
xchg
in
sub
dec
xor
mov
pop
add
push
std
movsx
lods
xor
mov
out
hlt
lahf
fild
enter
hlt
mov
test
adc
pop
add
stos
mov
fist
cld
rcr
jg
dec
push
outs
lods
aas
(bad)
js
mov
xor
push
jo
mov
xor
sbb
jnp
push
cmc
fcmovb
or
pushf
sub
push
fadd
mov
or
arpl
(bad)
mov
inc
bound
mov
mov
xor
add
add
shl
adc
outs
(bad)
test
pop
mov
pop
pop
iret
xchg
lds
cmps
pop
popa
popa
in
lods
lock
and
inc
add
sar
pop
mov
xor
mov
inc
cs
add
movs
leave
jmp
and
hlt
mov
test
loopne
xchg
pop
nop
ins
outs
addr16
mov
jno
repnz
outs
ins
jp
loop
mov
pop
cmp
pop
not
sub
add
stos
and
adc
ja
pop
cmp
push
mov
and
mov
xchg
repz
add
call
repz
push
in
or
inc
add
mov
sub
jnp
xchg
fld
mov
mov
sbb
je
test
ss
lahf
cli
shl
in
iret
pop
xor
pop
jmp
test
cld
or
sbb
adc
mov
aad
push
sbb
inc
enter
fxch
mov
cmp
ror
adc
pop
cmp
fisubr
(bad)
dec
dec
pusha
inc
mov
add
repz
jmp
retf
(bad)
in
cs
inc
and
frstpm(287
jmp
test
popa
scas
jb
ja
mov
mov
js
dec
dec
repnz
xchg
mov
mov
test
pop
cmc
mov
or
xchg
xor
mov
jecxz
inc
pop
jecxz
fs
popw
lods
ins
mov
aaa
mov
pop
xchg
cli
adc
and
jmp
sub
call
cmp
jge
push
cmps
push
jl
xchg
dec
xchg
stos
dec
movs
fist
inc
xor
mov
cmps
pop
xchg
xchg
dec
adc
add
add
mov
movs
aas
jecxz
fwait
test
retf
inc
std
loope
aam
push
aas
inc
sahf
fisttp
jae
inc
jae
xchg
cmp
cs
(bad)
push
mov
movs
sbb
xor
sub
out
cmp
pop
call
pop
imul
mov
iret
out
pusha
xlat
rcl
mov
pop
leave
aas
retf
dec
enter
cli
pop
retf
mov
es
push
in
cmp
or
stos
daa
clc
mov
push
imul
pusha
or
cmp
loopne
push
xlat
dec
lods
sub
test
neg
je
add
mov
mov
mov
ja
popf
inc
xchg
push
sbb
pop
adc
push
movs
mov
jo
in
mov
out
add
dec
nop
mov
repz
and
inc
jg
sub
sub
push
shl
fidivr
mov
(bad)
test
adc
pop
push
sbb
bound
lds
or
sub
aas
stos
loope
aad
dec
xchg
and
cdq
jp
xchg
sub
mov
add
test
stos
iret
(bad)
js
in
push
mov
jns
xor
movs
pushf
dec
mov
mov
les
hlt
aas
or
fild
test
sub
js
push
shl
fld
sbb
arpl
adc
adc
outs
add
cs
mov
jmp
pop
icebp
add
push
dec
ficomp
sub
imul
add
paddd
sbb
movs
jnp
dec
adc
mov
movs
mov
and
dec
add
cld
mov
push
popa
inc
bound
jp
xor
aad
or
mov
jns
ret
repz
adc
vdivpd
hlt
dec
call
xor
out
pop
ins
cmp
sub
inc
and
pop
inc
cmp
sub
xor
ror
scas
push
inc
pop
lahf
loope
sub
sbb
scas
enter
mov
imul
push
int
or
mov
xchg
test
aas
in
cwde
jo
pusha
cmp
mov
lods
and
dec
in
jp
movs
xor
dec
adc
and
push
push
in
or
arpl
fs
jnp
fstp
xor
(bad)
lds
mov
retf
add
lahf
add
mov
js
inc
ret
aam
and
loop
les
pop
(bad)
(bad)
loop
aam
mov
jnp
loop
ins
fdivr
and
mov
lods
mov
leave
je
popf
addr16
sti
les
push
mov
or
sbb
cmp
mov
ins
fild
xchg
fbstp
add
movs
leave
push
test
(bad)
cmp
or
xchg
lahf
xchg
cld
inc
sbb
jmp
fldln2
stc
mov
mov
xor
scas
xchg
push
or
imul
lea
ds
mov
rcr
pop
out
or
icebp
jns
cmp
test
and
gs
ins
adc
fisttp
inc
mov
les
add
mov
push
iret
or
rcr
mov
aas
jg
cs
std
mov
xchg
sub
pop
fsub
ret
sub
cmp
mov
mov
add
hlt
fwait
add
sbb
ret
movs
pop
cmp
mov
call
cs
add
jae
push
push
adc
sub
adc
mov
push
out
pop
or
or
mov
jbe
lods
(bad)
and
inc
jge
icebp
cwde
outs
popf
xchg
and
in
test
int3
fidiv
ins
mov
sub
cli
pushf
leave
fwait
cmp
hlt
mov
dec
xor
mov
fwait
loope
popw
fbstp
cmp
scas
jbe
and
aas
test
sbb
sbb
rcl
lods
bsf
in
jecxz
pop
add
out
aam
xchg
pop
pushf
push
(bad)
jge
jb
ret
mov
pushf
push
clc
ss
(bad)
loop
test
or
fs
and
inc
cmps
sti
(bad)
xor
mov
bound
repz
unpckhps
mov
inc
aam
push
ins
sbb
fs
xchg
inc
psrad
(bad)
xlat
int
shl
pusha
pop
lods
mov
inc
cmp
inc
inc
hlt
pop
push
arpl
dec
jl
fisub
add
ss
(bad)
out
inc
mov
scas
nop
jg
call
jns
clc
imul
ja
mov
mov
push
lods
jb
int
in
mov
jmp
rol
sub
pop
sub
out
pop
add
add
movs
lods
call
sub
xchg
fs
mul
repz
or
mov
ficomp
sub
scas
dec
xor
(bad)
iret
jne
and
das
mov
fnstsw
and
aaa
push
jg
shr
fnsave
inc
shl
adc
in
inc
(bad)
cmp
ret
(bad)
in
jl
repnz
cmc
xchg
jb
dec
addr16
sbb
mov
rcl
sub
cmp
jl
xor
daa
adc
sbb
or
out
mov
jmp
or
dec
int3
out
jb
jnp
ret
lea
leave
js
mov
pop
jmp
mov
sub
xor
xchg
adc
mov
or
jns
add
mov
out
jb
or
sub
loopne
repz
cmp
push
fcmovbe
lods
hlt
jle
mov
push
mov
sahf
jmp
cmp
xor
nop
xor
(bad)
retf
dec
movs
pop
mov
pop
or
loop
and
add
loope
dec
mov
pop
pusha
jmp
xchg
nop
cmp
push
cld
jae
mov
inc
push
xchg
mov
dec
mov
fisttp
iret
outs
push
stos
test
and
popa
sti
arpl
inc
xchg
in
xor
sub
inc
shl
div
jp
sbb
sbb
cli
sbb
nop
xchg
adc
popa
mov
cmc
pop
outs
aam
mov
pop
xor
jne
mov
fcmovnbe
jae
cmp
pop
cmp
lahf
das
aam
test
pop
daa
into
ficom
scas
mov
add
push
cwde
iret
pop
jecxz
sub
enter
rcl
add
mov
jb
rcl
orps
pop
pop
movs
inc
scas
mov
popf
loop
xchg
sbb
mov
shr
movs
cmp
xchg
sub
cmp
leave
xlat
sahf
leave
push
pop
gs
stos
mov
(bad)
adc
loope
lock
cmps
arpl
mov
div
popa
push
cli
rcr
adc
push
adc
gs
jmp
add
and
pop
jae
cmps
arpl
xchg
xlat
shl
sbb
setne
or
mov
pop
or
xchg
test
push
adc
scas
xchg
pop
inc
jae
rol
xchg
mov
and
pop
mov
pop
out
or
outs
mov
push
xchg
sbb
gs
mov
ret
jb
jnp
xchg
rol
(bad)
cmp
mov
sbb
mov
inc
movs
outs
mov
into
push
xchg
lahf
ins
jecxz
ficomp
imul
fs
test
cmp
push
mov
aad
or
test
jecxz
and
and
outs
cli
add
cmpxchg
push
clc
or
push
cld
fcom
cmp
mov
jl
test
mov
dec
into
imul
cli
xor
mov
pop
xor
pop
or
or
pop
fiadd
dec
mov
dec
repnz
or
mov
or
xlat
jbe
mov
imul
icebp
inc
mov
scas
jmp
test
and
sub
xlat
jecxz
jge
xor
push
imul
or
inc
push
sub
jmp
js
push
mov
cs
or
sbb
data16
dec
push
or
cmp
add
js
cs
mov
retf
loop
mov
iret
pop
jae
outs
shl
aaa
adc
mov
xlat
in
mov
xor
sbb
stos
dec
ins
enter
add
push
pop
pop
add
xor
ss
adc
add
packuswb
stc
dec
stos
or
jecxz
xchg
mov
push
inc
aam
mov
aad
in
shl
or
int
cdq
pop
inc
push
mov
cwde
pop
dec
jb
dec
jnp
ja
pop
sub
dec
shl
and
lods
(bad)
mov
sub
ins
aad
clc
hlt
mov
sbb
inc
pop
mov
aam
sti
hlt
push
and
sbb
sub
push
sbb
ins
cmp
(bad)
lods
loope
enter
xchg
pop
xchg
aas
add
xor
pop
pop
(bad)
repnz
gs
fwait
mov
jb
pop
pop
jecxz
scas
dec
(bad)
js
or
jge
jl
push
or
sub
pop
fdiv
fadd
sub
stos
nop
rcl
pop
pop
ret
nop
paddd
sbb
cld
xchg
stos
int
cli
dec
cs
pop
and
aam
mov
cld
mov
inc
loopne
xor
stc
cmp
adc
bnd
(bad)
rcl
fndisi(8087
lock
repnz
sahf
xchg
dec
mov
adc
or
(bad)
not
in
and
push
cs
bound
xchg
aam
js
mov
mov
or
lods
add
aas
and
mov
mov
add
fldcw
xchg
jmp
mov
inc
jge
cs
mov
inc
lds
jno
pop
push
hlt
aam
pop
aad
ds
lock
sub
add
lods
sub
sbb
pop
push
shl
fdiv
jg
cmps
sub
movs
mov
pop
push
pmaxsw
icebp
jbe
jo
mov
dec
(bad)
xchg
int3
pop
push
stos
outs
or
jmp
bound
mov
adc
je
xor
mov
xchg
lahf
scas
loope
lea
pop
push
loope
pop
shl
xchg
(bad)
cld
mov
sbb
sbb
pop
in
ins
sub
aaa
addr16
les
cmps
in
scas
dec
cmp
jmp
jnp
inc
les
mov
aas
push
fmul
(bad)
or
pop
jmp
(bad)
sbb
les
sbb
xchg
outs
stc
test
mov
movs
repnz
xor
pop
dec
adc
mov
mov
sub
in
ins
xor
icebp
jp
ret
std
inc
jmp
or
(bad)
int
xchg
daa
dec
out
fcom
xor
and
cli
lahf
fisttp
dec
mov
mov
mov
stos
(bad)
jl
rol
not
mov
push
test
sbb
pushf
(bad)
out
scas
scas
out
push
mov
sbb
nop
jnp
adc
pop
lds
iret
mov
sbb
mov
jmp
aaa
dec
icebp
add
or
idiv
cmp
out
movs
lock
and
xor
pop
ds
jmp
int
in
jg
and
mov
sahf
or
push
xor
adc
xchg
ds
or
adc
(bad)
repnz
out
jne
mov
push
sti
mov
nop
inc
movs
jp
(bad)
xlat
mov
repnz
out
fst
outs
fcmovne
mov
jbe
dec
sbb
jo
ins
and
xor
xchg
mov
div
jmp
fstp
push
shl
unpckhps
sub
pusha
xor
in
outs
fidiv
jle
int
add
dec
gs
test
lods
popa
adc
out
call
in
jno
xor
add
mov
lahf
aam
pop
add
imul
xchg
dec
fnstcw
sbb
aad
mov
call
ffree
aas
pop
std
inc
inc
add
in
xor
retf
fwait
mov
leave
mov
call
ret
sub
scas
leave
add
fs
fadd
mov
push
or
outs
dec
mov
ret
aaa
mov
imul
jne
sbb
test
movs
xor
and
(bad)
xchg
retf
mov
lods
pusha
xlat
and
jmp
arpl
ins
int3
mov
add
pop
adc
mov
push
cmp
out
cmp
outs
adc
push
push
lods
pop
in
fstp
not
mov
mov
cs
in
cmc
xor
cmps
call
in
jle
mov
retf
pop
icebp
rol
inc
jmp
sub
and
call
out
(bad)
cli
dec
retf
lds
mov
(bad)
mov
pop
push
cdq
mov
push
jp
mov
cmp
ins
sbb
or
sbb
scas
sub
clc
push
pop
js
arpl
das
sbb
lods
sub
loop
stos
stos
jo
out
sbb
icebp
dec
sbb
inc
mov
push
mov
sub
(bad)
idiv
mov
jmp
jae
sahf
mov
sbb
xor
or
jp
cmp
lahf
xor
mov
mov
xor
pop
mov
xchg
jmp
mov
jne
inc
xchg
cmp
sub
xchg
test
xchg
push
pop
pop
cmc
jg
bound
jg
push
movs
or
mov
xor
add
pop
popf
adc
btr
mov
xlat
stos
lahf
nop
rcl
and
int3
mov
pop
adc
(bad)
aaa
mov
dec
int3
test
or
pop
push
sbb
jmp
inc
test
xchg
neg
das
sub
ins
jb
dec
xor
cmc
fist
inc
outs
sbb
xor
push
or
icebp
pop
inc
dec
or
add
pushf
mov
pop
pop
jne
lods
enter
scas
cmps
push
imul
psubusb
xor
adc
imul
mov
out
push
mov
lahf
xchg
sbb
mov
lods
icebp
sbb
dec
enter
or
lods
inc
outs
fstp
mov
sbb
cmp
dec
xchg
push
cmc
sbb
outs
and
inc
sbb
jge
cmp
outs
mov
mov
sub
call
and
inc
jae
pop
jns
mov
jno
mov
sbb
mov
lock
sbb
std
and
inc
dec
jp
cmp
xor
(bad)
stos
test
pop
push
lock
mov
sbb
xor
xor
dec
loope
icebp
or
adc
push
xor
lds
dec
pop
stos
pop
push
in
test
mov
jl
test
dec
popf
mov
xchg
cmc
jo
into
ja
int3
fild
jle
push
in
dec
mov
test
loop
idiv
mov
add
imul
mov
lock
sbb
rcr
jb
mov
push
xchg
or
(bad)
jecxz
or
in
sti
add
mov
fwait
xor
push
push
arpl
mov
iret
cmp
fdivr
not
push
movs
in
and
xchg
mov
test
jmp
mov
cwde
je
ja
jae
bsr
stc
test
mov
cwde
cwde
(bad)
and
out
inc
out
scas
mov
adc
mov
add
cmp
inc
js
pop
jle
pop
popf
call
add
cwde
jb
jmp
cmp
dec
outs
jno
ror
xchg
enterw
jns
xchg
and
add
jae
cli
int3
mov
pop
pop
mov
push
push
cld
js
jge
or
sbb
jecxz
popa
jmp
mov
into
popa
or
dec
sti
mov
jp
adc
pop
outs
or
aaa
movs
addr16
test
pop
cmp
call
inc
jo
adc
push
sbb
or
pushf
shr
adc
outs
push
push
jle
cmp
cmps
cdq
scas
leave
mov
add
or
fiadd
out
push
ret
test
addr16
out
retf
dec
clc
and
xor
xor
xchg
mov
dec
and
test
jecxz
fdivr
fwait
mov
outs
pop
xor
jmp
sub
cmc
ret
(bad)
pop
add
xor
and
push
call
aad
xor
adc
test
add
shr
mov
ror
adc
cs
sub
jp
mov
outs
mov
and
out
mov
or
mov
iret
cmps
in
loope
imul
pop
lock
cmp
in
into
scas
inc
sbb
or
ins
adc
add
fdivr
mov
jne
fwait
lahf
stos
adc
pop
test
push
cmp
and
sbb
mov
fdivr
jecxz
(bad)
sub
adc
inc
std
or
lahf
in
je
cmps
jb
std
aas
test
xor
iret
scas
xor
(bad)
jae
xchg
xchg
cs
xchg
icebp
popf
arpl
dec
hlt
mov
mov
js
idiv
rcl
repnz
sbb
call
rcr
jbe
cmp
outs
adc
mov
or
pop
sbb
fs
enter
cmp
xor
mov
lds
repz
(bad)
jp
xor
js
dec
lahf
dec
pop
neg
out
sbb
fs
into
and
xchg
dec
retf
movs
sbb
dec
mov
fidivr
push
inc
pop
pop
inc
jge
(bad)
push
sbb
xor
ret
sahf
mov
adc
clc
pop
(bad)
mov
sti
iret
jmp
mov
sahf
mov
add
dec
xchg
jbe
test
add
pop
addr16
xor
push
in
sahf
test
repz
xor
jmp
cdq
sbb
arpl
push
pop
int3
mov
lods
cmps
push
push
cmp
mov
icebp
xchg
cmp
jns
idiv
jmp
into
cmps
dec
iret
and
inc
sti
inc
repnz
ret
ret
arpl
loop
test
fmul
cmp
lods
push
ret
imul
es
shl
add
cwde
test
data16
pop
pop
pop
test
imul
cmc
xor
mov
pop
push
retf
dec
pop
pop
dec
call
mov
push
adc
and
adc
movs
xor
sbb
out
sub
dec
inc
lock
dec
cwde
sbb
jnp
(bad)
arpl
fisttp
inc
dec
das
inc
popf
mov
sbb
mov
mov
and
loopne
clc
sub
inc
aad
mov
xlat
in
hlt
pop
fs
add
(bad)
mov
pop
push
retf
jmp
adc
movs
dec
adc
sub
sbb
(bad)
out
push
or
sbb
(bad)
or
clc
test
es
adc
jbe
jecxz
arpl
test
into
sbb
mov
fsubr
in
popa
pop
pop
push
js
shr
movs
jb
int
dec
mov
add
cli
pop
jmp
fisttp
(bad)
pop
js
in
jb
fsubr
mov
das
xor
stos
ja
enter
mov
or
jg
inc
fistp
ret
or
mul
push
mov
xor
xor
mov
scas
pusha
enter
mov
sbb
outs
pop
xchg
and
and
loop
jle
cmp
jge
ins
mov
into
push
ret
rcr
jmp
pop
cmp
fidiv
cmp
neg
add
sbb
sbb
in
lds
es
mov
lea
sub
mov
cmp
mov
ins
inc
je
lds
push
xchg
in
push
sub
sub
std
add
icebp
retf
fistp
mov
xchg
nop
adc
cmp
rcr
leave
cmps
shl
mov
cmp
pop
cld
sbb
mov
cmp
rcr
mov
hlt
or
inc
cmp
retf
ins
push
fisubr
xchg
leave
mov
inc
adc
popa
xchg
pop
mov
xchg
jae
sti
push
xor
aam
jmp
adc
ja
lahf
inc
rol
mov
mov
sub
nop
push
mov
cmp
xchg
lods
and
sub
test
sti
inc
pop
xchg
mov
xchg
cld
pop
out
mov
xor
loopne
shl
push
into
test
and
cs
add
lahf
inc
push
ja
push
push
mov
rcr
xor
ins
into
xor
sbb
jnp
push
adc
sbb
movs
jne
daa
jno
js
push
mov
sbb
scas
inc
test
js
inc
xor
fbld
mov
lahf
rol
in
xor
arpl
add
push
adc
shl
add
add
sub
xor
sub
pop
rcl
pushf
jmp
adc
adc
mov
scas
jnp
repnz
loopne
mov
or
stos
add
mov
and
or
xacquire
dec
xor
pop
stc
push
mov
lods
rcl
mov
mov
jns
inc
xchg
bound
loope
test
div
test
add
sbb
test
aad
fldenv
ins
test
or
jmp
shl
fisttp
(bad)
sti
je
in
jnp
sbb
mov
pop
int3
ds
xchg
inc
add
je
cmp
push
fwait
mov
cmp
pushf
stc
gs
clc
adc
or
movs
sbb
retf
dec
dec
cmp
xor
sar
mul
and
or
test
(bad)
int
ret
pop
fcom
gs
int3
and
jns
fiadd
ffree
mov
pop
add
pop
test
mov
int3
dec
je
jl
rcr
jge
cs
mov
fst
jmp
int
inc
scas
xor
adc
push
xlat
movs
lea
fld
jp
test
pop
shl
adc
out
dec
mov
not
cli
xor
cs
mov
addr16
sbb
jbe
sti
push
sub
cmp
rol
lock
add
ja
out
jge
or
(bad)
popf
(bad)
mov
mov
sbb
aam
mov
xchg
mov
jp
add
loope
xchg
sbb
test
(bad)
aad
das
call
(bad)
cli
xor
test
cmp
add
imul
shl
lds
xor
and
jno
scas
test
xor
xchg
icebp
shl
ins
sar
je
mov
pusha
sbb
shr
mov
jmp
push
sbb
xchg
pop
out
pushf
dec
out
inc
cdq
in
mov
std
movs
dec
push
xor
sbb
push
icebp
jl
pop
int
test
pop
mov
idiv
int3
xchg
sbb
scas
fild
push
sub
push
and
ss
cmp
xlat
and
scas
std
dec
xchg
dec
xchg
adc
xor
ret
mov
sar
pop
pop
add
addr16
and
xchg
xchg
test
(bad)
std
sbb
sbb
xrelease
xchg
add
push
stos
inc
sub
push
push
fnstsw
leave
retf
sub
sub
cld
shl
inc
jecxz
stc
jnp
xchg
clc
or
out
cmps
nop
push
mov
dec
rcr
out
loop
mov
lds
lods
rol
mov
push
fistp
dec
retf
les
test
(bad)
fdivrp
loopne
or
or
adc
jo
ins
dec
popf
call
int
mov
add
mov
into
cs
cmp
push
pop
inc
mov
and
into
or
imul
aam
jae
pop
push
add
stc
retf
das
sbb
fcomip
out
xchg
mov
sti
rol
jl
push
push
in
and
cmp
xchg
xchg
lods
mov
and
sahf
ror
add
stc
pop
ss
xchg
sbb
mov
enter
ja
jle
stos
es
push
sub
pop
ds
sahf
mov
addr16
add
retf
loop
nop
add
jnp
movs
and
push
in
jne
add
xor
sbb
fidivr
dec
sbb
hlt
ins
sti
jp
or
mov
inc
sub
xchg
or
jmp
xchg
add
movs
cmp
in
jo
and
(bad)
push
imul
and
arpl
inc
test
out
cli
cmp
adc
bound
dec
(bad)
mov
lods
aam
call
or
(bad)
jl
push
inc
mov
cmp
and
fimul
cmp
inc
out
aaa
cmp
mov
sbb
cmps
call
adc
mov
and
and
cmps
jecxz
pop
mov
xchg
xor
stc
mov
es
inc
shl
int3
mov
std
or
lahf
test
xchg
push
add
lock
into
cmp
fistp
(bad)
xor
fdiv
pop
add
shld
imul
push
xchg
or
stos
sbb
add
retf
mov
cmps
je
mov
pop
js
aas
outs
mov
adc
mov
mov
data16
test
jnp
gs
aaa
arpl
mov
test
inc
mov
or
mov
enter
or
xchg
loope
cs
lahf
(bad)
(bad)
out
jl
xor
cmp
ins
icebp
stos
sar
push
cmp
cmp
jo
mov
add
jbe
inc
(bad)
mov
mov
jl
shr
mov
stc
imul
cmps
push
rcr
dec
out
jge
xchg
or
es
jg
fnsave
out
repnz
jge
daa
test
push
push
mov
push
mov
mov
mov
shl
nop
mov
mov
shl
and
test
int3
adc
test
out
pop
and
loope
xchg
or
xor
mov
fldcw
ds
scas
outs
pop
mov
fld
jle
or
lds
inc
cmp
cmps
jno
fbstp
jp
pop
push
mov
add
mov
jae
cmps
das
or
mov
mov
in
fcomp
popa
add
sar
pop
test
mov
cld
dec
xchg
mov
dec
sahf
dec
fnstcw
mov
movs
fs
lahf
xchg
lds
idiv
inc
ficomp
mov
jl
xor
ins
inc
jg
(bad)
push
or
stc
in
mov
movs
jecxz
pushf
dec
cmp
je
ret
stc
push
pop
pushf
dec
and
add
inc
xor
push
outs
stos
mov
(bad)
cmp
mov
shl
inc
adc
pop
dec
pop
das
movs
cld
cmp
inc
les
jg
jns
hlt
dec
pop
pop
and
je
dec
pop
mov
imul
xchg
pop
push
jmp
xchg
dec
(bad)
arpl
aaa
xchg
or
mov
scas
sbb
pop
pop
sub
gs
jbe
jns
lahf
add
jg
inc
popf
fnstsw
inc
sub
fdiv
adc
and
jle
jno
jo
jne
sub
lods
sub
pop
bound
or
push
rol
inc
in
dec
push
movs
fnstcw
in
loop
ins
mov
mov
jns
adc
hlt
movs
gs
mov
loopne
and
imul
ins
or
out
pushf
adc
stc
and
xchg
shr
push
(bad)
out
xchg
stos
xor
mov
cmc
push
mov
push
rol
adc
mov
push
push
fs
sbb
push
dec
xchg
(bad)
dec
adc
adc
iret
rcr
xchg
pop
data16
mov
mov
rcr
mov
rcr
lea
scas
and
dec
inc
sahf
sbb
mov
test
mov
mov
jg
adc
adc
inc
add
push
push
and
push
push
aad
sub
pop
mov
addr16
imul
(bad)
jb
jnp
jnp
add
das
rcr
popa
push
ins
test
not
jmp
sub
cmps
retf
cmpxchg
ins
aas
dec
jecxz
sbb
shr
aaa
retf
or
adc
in
int3
push
jle
les
loope
js
cmp
or
ror
imul
adc
jno
sub
fwait
sbb
or
imul
jg
sub
test
stc
mov
out
cmp
cdq
in
pop
jnp
ss
mov
shr
xor
adc
dec
push
das
ss
lock
retf
xor
test
mov
lock
cmp
or
test
mov
xchg
or
lahf
mov
cwde
adc
xchg
stos
jmp
sbb
xchg
in
mov
sub
xor
cwde
ret
cs
shl
pop
push
test
cmp
retf
out
dec
retf
movs
in
mov
or
aaa
outs
pop
xchg
adc
cmp
hlt
dec
sub
fs
lea
call
ja
pop
jne
cmp
xor
mov
xor
repz
sub
sbb
(bad)
mov
rcl
jmp
or
dec
test
mov
fwait
pop
mov
int3
jb
cmps
loopne
outs
sbb
and
sbb
ins
jg
adc
test
pushw
adc
inc
xor
xchg
das
pushf
sub
dec
jno
mov
leave
pop
icebp
or
ins
sbb
icebp
inc
xchg
stc
mov
bound
mov
(bad)
sub
cli
xor
daa
adc
dec
dec
std
retf
int3
dec
mov
shr
sbb
cmps
xor
dec
mov
add
mov
iret
dec
jmp
pop
dec
jp
arpl
jmp
and
sbb
scas
jnp
outs
cmp
inc
sbb
mov
or
fucomi
or
push
jb
div
dec
cmp
in
push
mul
fprem
cmps
enter
in
mov
mov
xchg
mov
(bad)
psrld
or
push
movs
add
sbb
dec
clc
repnz
loope
mov
mov
and
push
adc
ins
xchg
sbb
scas
(bad)
sbb
fistp
push
jae
retf
cmp
xor
pop
int3
(bad)
xchg
and
jnp
dec
call
mov
cmc
pop
cdq
ja
cmp
or
fwait
xchg
pop
iret
cmc
and
lea
outs
inc
mov
fcom
xor
cli
sub
and
push
pop
pop
hlt
test
cli
retf
lea
mov
xor
popf
nop
es
ja
sti
std
(bad)
mov
adc
inc
adc
push
push
sbb
and
jns
retf
pop
xor
xor
call
test
sub
aaa
iret
mov
mov
lahf
imul
jg
mov
cmp
mov
sbb
pop
cmp
scas
sbb
ss
pop
sbb
jnp
pusha
(bad)
pop
sbb
cmp
jb
call
xor
stc
adc
test
data16
sub
xadd
cmp
mov
jae
sbb
in
inc
mov
lahf
test
xchg
psllw
clc
mov
cmp
inc
gs
dec
sbb
sub
ins
test
int
into
ins
retf
pushf
loop
test
sbb
bound
inc
dec
aad
jecxz
xchg
cmp
out
scas
popa
mov
adc
scas
sti
repnz
pop
push
jecxz
mov
nop
pop
imul
outs
adc
xchg
fs
mov
cmp
cli
outs
sbb
popa
sahf
cmps
inc
push
mov
jno
int
imul
or
fwait
jp
ror
push
retf
inc
loopne
test
cdq
mov
sub
sub
adc
sbb
test
mov
stc
ins
icebp
push
push
ret
jno
push
shl
fisttp
jmp
or
pop
dec
add
ins
pop
cmp
xor
lea
add
enter
jge
jmp
xchg
es
popa
push
fld
es
mov
leave
test
fxch
fwait
mov
jp
pusha
popa
cmps
adc
sbb
xchg
mov
aad
jle
jge
xor
clc
and
cmc
mov
add
ds
mov
pop
and
xor
sub
or
push
cmps
test
sar
into
push
mov
scas
dec
push
nop
push
test
lock
push
xchg
ins
iret
aad
pop
call
mov
(bad)
fmul
xchg
out
add
cmps
and
cli
iret
cli
xor
sti
(bad)
aas
mov
shl
push
idiv
sbb
jecxz
inc
mov
inc
outs
lock
popf
(bad)
in
out
(bad)
cld
push
mov
cmp
cld
add
adc
xchg
aam
sub
jb
out
aam
es
dec
mov
cmp
data16
mov
mov
mov
jae
jnp
adc
call
loopne
(bad)
xchg
xchg
mov
fbstp
adc
xor
std
inc
inc
sub
adc
rcl
dec
mov
popa
mov
inc
pop
sub
jns
scas
mov
pop
pop
and
push
adc
mov
add
mov
sbb
inc
sti
scas
aam
mov
or
test
int
shl
shl
les
cli
dec
sbb
inc
push
xchg
cmps
xchg
mov
push
loop
inc
rol
int
xor
cli
popf
or
cli
(bad)
cld
(bad)
popf
or
movs
mov
xlat
mov
sbb
retf
jp
or
jbe
push
jnp
sub
cmps
xor
mov
cmp
loope
(bad)
sbb
sbb
inc
jl
test
icebp
rcr
xchg
jnp
hlt
in
cld
test
ss
mov
or
pop
(bad)
mov
enter
jecxz
inc
mov
sub
mov
sbb
stos
dec
push
fldcw
hlt
les
das
lea
fimul
ss
or
pop
jb
not
jl
cmp
into
sub
outs
push
push
or
xor
sbb
stos
mov
fst
gs
icebp
jnp
pop
pop
mov
sbb
pusha
imul
and
repz
mov
sbb
mov
push
add
jnp
or
(bad)
mov
jmp
sbb
aam
pop
je
aad
mov
sub
cdq
or
adc
ror
and
sub
sub
or
fs
test
clc
xlat
retf
(bad)
push
jnp
inc
outs
xadd
sub
mov
pop
retf
dec
inc
inc
(bad)
scas
jbe
cs
shl
iret
iret
(bad)
mov
mov
push
jbe
into
shr
lods
ror
jmp
push
cmc
sub
mov
stc
scas
mov
call
(bad)
adc
es
jmp
pop
dec
lods
mov
cmps
inc
mov
pushf
sub
inc
push
retf
cdq
xchg
pop
outs
push
scas
jecxz
xchg
sbb
das
sbb
in
in
fdivrp
sbb
into
and
jmp
leave
pusha
scas
adc
or
imul
mov
pop
xor
int
mov
and
xor
jmp
jae
xor
pop
xchg
sbb
imul
or
sub
adc
xchg
add
in
jo
push
jl
(bad)
adc
cmps
sti
pop
loope
mov
pop
outs
(bad)
dec
call
mov
pop
jnp
pushf
adc
and
sub
ret
stos
mov
mov
ja
repz
arpl
and
popf
and
js
sub
cld
pop
push
in
retf
and
fidiv
push
xor
push
pop
cmp
jl
mov
mov
imul
push
add
xchg
lods
or
hlt
add
inc
sbb
(bad)
mov
push
push
stc
out
and
sti
sbb
in
cmp
mov
pushf
or
push
sahf
mov
cmp
xor
sar
call
sub
inc
std
sub
jge
sbb
push
mov
imul
pop
test
jmp
sub
aam
inc
les
xor
repnz
jo
xor
lea
pusha
mov
into
lahf
test
or
(bad)
in
dec
jae
in
sahf
ins
repz
mov
mov
lock
or
jge
xchg
lahf
xor
bound
xchg
xlat
(bad)
out
popf
(bad)
cmc
into
xchg
imul
ss
adc
test
js
mov
loopne
xor
jns
pop
xchg
mov
sbb
mov
push
jmp
add
out
xchg
sbb
pop
adc
jns
cld
cmp
mov
or
pop
ins
test
(bad)
adc
aam
dec
bound
imul
push
and
mov
mov
mov
or
lods
pop
push
call
(bad)
shl
pop
inc
idiv
sahf
and
fs
aam
inc
stc
movs
push
mov
shl
dec
adc
fcmovnu
(bad)
out
sar
je
mov
icebp
je
out
(bad)
sub
mov
outs
jo
repz
repz
mov
cmp
and
mov
test
mov
bound
mov
stc
xor
out
shr
(bad)
cmc
je
int
test
pop
lock
retf
pusha
cmps
js
jnp
aad
lea
rcr
movs
sub
or
out
cdq
fucomi
leave
xlat
ins
shl
lock
in
push
scas
sbb
int
pop
dec
aad
ja
fiadd
imul
call
leave
sub
xchg
mov
adc
sub
mov
rcl
ror
mov
stos
pushf
xor
or
push
nop
cwde
dec
sub
fwait
(bad)
aas
fidivr
call
test
xchg
retf
repz
xchg
jb
mov
(bad)
mov
fstp
mov
xor
js
into
cmp
out
shr
add
cmp
(bad)
push
test
pop
jo
iret
fstp
jno
sub
push
pop
cmps
stos
inc
xchg
pop
add
outs
imul
shld
repnz
adc
data16
sub
mov
xor
lods
inc
stos
(bad)
xor
jnp
retf
dec
xor
dec
dec
inc
js
fcom
sbb
ins
xor
push
add
dec
xlat
pop
nop
sar
mov
adc
inc
and
jle
adc
ja
aaa
or
dec
es
jb
sub
std
popa
inc
sbb
ds
and
mov
pop
clc
fwait
inc
retf
jnp
(bad)
(bad)
xor
pop
(bad)
pop
dec
push
out
push
sbb
xchg
sbb
push
pop
es
pop
rcr
pusha
aam
mov
jg
mov
idiv
lea
sbb
call
test
stos
mov
in
ficom
lods
cld
into
int3
nop
add
push
(bad)
stc
add
inc
pop
inc
loopne
dec
call
or
inc
cmp
test
(bad)
aam
jg
movs
addr16
lods
repz
push
xchg
mov
xchg
pop
(bad)
mov
das
add
jge
mov
sar
sahf
dec
(bad)
cwde
test
nop
fcom
movs
nop
mov
mov
pusha
mov
out
ret
cmp
dec
jp
mov
test
pop
out
push
mov
jo
xor
cli
ds
cmp
mov
jbe
test
and
dec
adc
mov
retf
std
in
fldenv
(bad)
loopne
(bad)
repz
and
jge
outs
push
jp
inc
hlt
pop
jle
sub
lds
dec
aas
or
or
mov
lods
cs
adc
adc
fs
sub
int3
iret
stos
jle
(bad)
mov
mov
add
fdivr
js
adc
scas
dec
retf
jne
add
out
cmp
mov
xor
and
enter
or
push
loopne
add
and
shr
push
movs
(bad)
ins
jmp
in
pusha
repz
mov
hlt
mov
mov
lock
test
(bad)
xlat
imul
mov
mov
in
dec
int
push
pop
push
lahf
ins
jmp
pop
loope
dec
arpl
addr16
fistp
test
lock
cmp
ss
stos
shl
jbe
stos
mov
enter
or
ins
lods
add
test
xor
push
lea
adc
jae
xchg
lods
kunpckbw
mov
and
neg
jp
jne
mov
outs
fsubr
mov
sbb
loopne
pop
lods
stc
mov
jo
adc
in
retf
push
xor
outs
addr16
rcl
je
cdq
mov
sub
aad
call
pop
fs
dec
movs
int3
mov
dec
push
fisttp
inc
(bad)
xchg
mov
mov
add
(bad)
or
jl
inc
retf
xor
inc
dec
and
aaa
mov
scas
pop
(bad)
frstor
mov
xchg
lods
mov
loop
sbb
nop
push
stos
movs
or
loopne
adc
sar
jg
lods
adc
cdq
pop
xchg
add
out
pop
ins
ja
mov
cmp
mov
aam
pop
leave
pop
repnz
mov
push
inc
add
pop
inc
cmps
cwde
xor
or
jne
(bad)
(bad)
sub
xor
adc
jnp
adc
inc
mov
push
sub
mov
dec
pop
fwait
push
addr16
sub
mov
cwde
repnz
dec
addr16
jo
mov
sub
xor
and
mov
pusha
cmp
cmp
inc
jno
cmps
push
pop
int3
jmp
stc
in
push
test
add
lahf
add
jle
xor
stos
jns
dec
test
test
or
or
(bad)
jno
dec
fs
enter
sub
push
cmp
jp
nop
cmp
lock
push
xchg
aam
mov
test
shl
sbb
add
(bad)
in
(bad)
or
lods
lds
pop
cs
xor
popf
cmp
pop
clc
(bad)
repnz
out
or
nop
and
cld
dec
xchg
push
xchg
sub
and
pop
jnp
dec
and
mov
xor
push
fucomip
jp
iret
ds
(bad)
loopne
or
fdivr
cli
mov
jne
jmp
fst
loop
cwde
adc
dec
ds
inc
in
xchg
int3
outs
pop
loop
neg
dec
data16
fistp
mov
mov
daa
adc
mov
mov
and
aam
push
ret
mov
daa
mov
pop
add
dec
push
jno
mov
es
(bad)
out
fstp
mov
pop
retf
inc
inc
cwde
ins
jp
repnz
int
jl
pop
mov
sub
or
cdq
test
outs
xchg
cmps
and
add
jb
push
out
dec
sub
ins
lock
ja
mov
push
repnz
fdivr
ins
fcmovne
das
add
mov
mov
stc
and
(bad)
scas
fs
sbb
xchg
mov
mov
and
or
hlt
dec
(bad)
jge
sbb
ds
pop
add
mov
and
sbb
loopne
and
and
je
loope
push
into
or
sbb
cli
push
and
adc
das
mov
addr16
clc
aam
mov
mov
push
push
call
retf
adc
cmp
mov
sbb
add
pop
inc
aaa
ficom
cmp
test
fwait
iret
sbb
leave
pusha
cli
enter
jmp
ret
ja
cmp
inc
in
cmps
jbe
cmp
sub
in
dec
dec
mov
jg
popf
and
das
lods
push
adc
mov
stos
inc
inc
fwait
jbe
xor
cld
out
push
push
sbb
push
mov
adc
stos
adc
call
sub
cmps
shl
sub
dec
mov
ss
lock
add
sahf
in
mov
or
push
jmp
xchg
rcr
jmp
out
or
mov
mov
les
scas
xchg
mov
mov
mov
lea
sub
xchg
scas
imul
jbe
ror
xor
into
out
mov
push
dec
dec
mov
xlat
addr16
pop
loop
dec
ret
scas
shl
or
call
scas
push
scas
test
or
addr16
push
jae
jns
lea
pop
or
mov
dec
jnp
pusha
std
push
xchg
add
js
pop
mov
jnp
xchg
push
out
pop
and
(bad)
imul
out
sti
fisubr
fnstcw
repnz
adc
jnp
pop
xchg
std
jmp
daa
dec
ins
lea
cmps
jne
and
push
sub
or
(bad)
imul
push
lds
inc
add
jbe
push
js
sar
mov
out
lahf
jmp
ins
sbb
jge
mov
and
jbe
arpl
call
fnstcw
pop
(bad)
cld
addr16
or
je
sub
iret
push
jg
out
js
mov
hlt
mov
xchg
sbb
mov
call
(bad)
sub
xchg
nop
push
int
mov
test
adc
push
out
sub
test
pop
and
out
sub
adc
push
cmp
sbb
mov
pop
repz
and
(bad)
jle
fldcw
cmps
dec
sub
push
adc
mov
icebp
cmp
pop
jmp
push
popf
je
jl
test
leave
das
pandn
sar
xchg
out
ins
sbb
arpl
mov
and
pop
add
mov
mov
xchg
adc
push
fisubr
mov
sbb
and
movs
in
pop
xor
jo
adc
inc
mov
pop
pop
js
cmp
leave
pop
push
ret
sti
sbb
jmp
xlat
leave
push
xchg
xor
fucom
imul
(bad)
fwait
cs
adc
push
div
cmp
or
test
(bad)
sub
mov
addr16
(bad)
jecxz
sar
ja
pop
das
or
push
mov
jp
mov
es
pop
pop
(bad)
stos
pop
pop
js
out
pop
loop
out
and
sti
jp
xchg
mov
jmp
push
mov
sbb
loop
out
pop
mov
es
inc
and
adc
lods
mov
sahf
xchg
inc
or
js
gs
lahf
lock
(bad)
push
xor
push
mov
dec
gs
std
or
ret
pop
das
rol
add
movs
push
cmps
outs
cmp
push
mov
imul
hlt
mov
jae
(bad)
fist
mov
mov
adc
dec
test
addr16
mov
mov
inc
pop
js
xor
jge
iretw
sub
mov
inc
sub
dec
hlt
in
jno
je
mov
fnstsw
mov
lods
push
jp
add
lahf
cmps
js
shr
pop
out
inc
cmp
mov
daa
push
push
push
mov
js
int3
daa
hlt
adc
jb
sub
jbe
mov
mov
mov
inc
push
push
popa
xor
(bad)
mov
js
cwde
cs
push
push
cmp
shl
xor
dec
shl
push
mov
mov
dec
xor
lods
test
dec
js
dec
pop
add
adc
sbb
jle
daa
dec
xchg
push
mov
pop
and
pop
call
add
imul
outs
test
in
adc
(bad)
mov
jns
dec
imul
jge
pop
nop
mov
xchg
cmc
lods
xchg
not
imul
sbb
inc
sub
xor
std
test
mov
mov
jmp
mov
adc
xor
sub
popf
jmp
ss
jl
or
inc
mov
xchg
dec
mov
jecxz
in
xchg
sub
jb
dec
add
pusha
clc
or
and
cmp
retf
xor
add
shr
push
push
(bad)
mov
aam
outs
stos
les
xor
test
arpl
pop
fdivr
mul
ror
pop
or
lea
mov
fisubr
mov
fxch
cmp
fistp
mov
in
daa
mov
movs
gs
pop
fcom
push
dec
xor
pop
in
inc
call
adc
xchg
mov
clc
jo
inc
sub
(bad)
jmp
movs
mov
xor
cwde
pop
ret
mov
add
movs
or
pushf
shl
leave
jae
cmp
jno
(bad)
mov
test
dec
mov
inc
add
sahf
cmps
cmp
and
retf
or
pushf
mov
stc
test
mov
lahf
mov
movs
ret
shr
fs
fdiv
cwde
mov
sub
adc
mov
sar
sbb
fmul
ja
push
push
jno
jb
jne
sbb
lods
lds
cs
stos
outs
jbe
jno
push
sub
cmp
cmp
cmps
shr
out
xor
or
loopne
ins
mov
dec
jle
inc
aam
or
fcmovnbe
fist
out
cmp
pop
lock
div
jnp
push
or
retf
sbb
imul
lods
pop
push
cmp
test
adc
xor
loope
mov
xlat
ror
xchg
test
cmp
stos
mov
scas
dec
cld
test
out
pop
movs
dec
sbb
int3
pop
adc
dec
mov
xor
mov
sti
loope
pop
icebp
dec
loopne
xlat
cmp
movs
out
imul
mov
div
ror
neg
push
lock
mov
js
mov
fidiv
(bad)
(bad)
xor
shl
imul
fadd
jae
ror
fld
std
push
inc
cdq
std
(bad)
jne
mov
sbb
test
imul
mov
popf
xchg
aas
movs
jmp
sub
cmp
pop
adc
cmp
ret
(bad)
push
call
mov
and
inc
adc
xchg
inc
repnz
add
fwait
cwde
pop
xchg
fstp
sahf
aad
mov
iret
aam
or
and
into
loopne
or
aad
sub
rcr
les
sub
sub
push
adc
rcl
mov
sub
pop
not
sub
jge
dec
loope
(bad)
test
push
or
mov
sbb
adc
call
sub
add
ins
aas
aas
ret
jo
aad
add
xchg
cmps
sub
outs
stos
fcomi
jae
add
and
jmp
ret
inc
es
movs
sar
and
pusha
xchg
repnz
xchg
aas
inc
out
iret
xor
jmp
dec
adc
xor
repnz
adc
pop
cmps
repz
xchg
aas
mov
rol
fs
lock
in
and
pop
popa
cmps
out
das
inc
mov
add
jecxz
jl
pusha
movs
mov
jne
jle
leave
add
fstp
mov
imul
ret
cmp
mov
sahf
loopne
pop
ins
sub
enter
xor
mov
inc
(bad)
mov
push
repz
add
sub
and
bound
stc
jle
jge
rol
pop
add
stos
xchg
or
pop
shr
adc
dec
cmp
jo
outs
ds
mov
push
add
in
or
add
xchg
push
push
lds
and
icebp
mov
into
test
jmp
jmp
inc
sub
adc
push
xchg
cmp
pop
iret
or
fcmovnbe
in
call
lods
js
ficom
(bad)
pop
shr
adc
fwait
loope
or
xchg
cmps
or
lea
fist
pop
sbb
xor
mov
dec
sti
sub
cli
xor
mov
sub
rcr
cmp
enter
mov
test
lock
pop
cld
adc
out
je
jle
dec
cmp
mov
inc
in
scas
xor
add
lock
rcr
scas
adc
mov
lock
pop
int3
neg
mov
cs
ffreep
pop
mov
and
into
and
add
rcr
mov
or
scas
push
pusha
lods
inc
mov
stos
add
cmp
dec
adc
stos
pop
js
out
jae
test
imul
mov
sbb
ds
pop
data16
fdivr
clc
jno
jmp
inc
push
gs
jno
xor
or
sub
mov
shl
(bad)
sahf
repz
cmp
js
mov
xchg
sub
retf
xor
shl
inc
movs
push
dec
cmps
cmp
pop
push
aad
mov
(bad)
xchg
sbb
adc
mov
jmp
sbb
(bad)
push
cmc
sub
movs
dec
dec
mov
pop
pusha
fwait
pop
pop
imul
inc
dec
or
(bad)
push
data16
pop
pop
imul
dec
jecxz
sbb
cmp
sbb
jmp
mov
cmp
(bad)
mov
push
cli
sahf
mov
movs
mov
mov
push
pop
repnz
dec
xor
cld
leave
out
xchg
xor
ss
sahf
cmps
scas
loop
call
mov
fsubr
sbb
outs
sbb
xchg
(bad)
fsubr
pop
pop
sub
cmp
dec
pop
mov
arpl
xor
pusha
shr
out
cli
and
enter
fild
sbb
adc
test
adc
sub
fisubr
xor
add
adc
push
movs
shl
stos
pop
cmps
and
call
ficom
jns
test
cmp
sub
and
sar
stc
loope
mov
loope
aad
lock
aad
(bad)
(bad)
movs
mov
lods
jae
cld
(bad)
xchg
aas
fst
stc
pop
and
nop
fadd
push
inc
call
dec
sahf
mov
(bad)
(bad)
ror
ins
out
xor
xchg
cmps
loopne
aas
lock
cmp
imul
push
repnz
jl
sbb
aaa
in
pushf
add
xor
in
adc
xchg
aam
mov
jb
loopne
lock
jb
sti
mov
ret
call
(bad)
(bad)
mov
mov
add
pop
nop
push
push
fistp
mov
je
dec
xchg
mov
mov
std
ret
add
jp
out
push
pop
sbb
dec
mov
loopne
pop
stc
xchg
pop
ss
int
lds
push
inc
adc
fldpi
clc
aad
icebp
mov
lds
dec
xlat
dec
mov
xor
cwde
add
cmp
(bad)
rcr
out
cmc
and
mov
mov
daa
outs
jo
rcl
sub
sbb
pop
mov
ret
movs
je
test
inc
shl
add
mov
ins
je
outs
cmps
sub
adc
inc
sbb
add
cmp
sbb
(bad)
imul
pusha
jg
ja
lahf
sub
sub
(bad)
push
jmp
in
(bad)
dec
add
cli
fidiv
jge
fild
aam
(bad)
lock
popa
(bad)
stos
imul
shl
repz
cld
sar
adc
mov
outs
pop
ror
outs
xchg
mov
push
fldcw
nop
cmc
out
pushf
cmc
jnp
iret
and
shl
lods
int
fldl2t
mov
sbb
out
push
jecxz
mov
cmp
adc
nop
add
sub
xor
mov
inc
adc
or
leave
test
frstor
jge
xchg
inc
pop
push
loope
mov
push
inc
and
cs
and
sti
bound
icebp
pop
mov
cmp
test
xchg
sbb
sar
call
lods
mov
(bad)
cmp
and
jbe
and
sub
sub
add
push
fwait
jne
das
mov
xor
xor
mov
pop
jp
pop
adc
cmps
sub
out
or
add
mov
rcr
stc
jmp
inc
lds
push
ror
adc
ror
or
cwde
enter
repnz
inc
push
sbb
shr
push
xor
cmp
imul
lods
sbb
sbb
leave
int
sub
xor
fcomp
inc
sub
sti
(bad)
imul
ret
xchg
push
jo
lock
ficom
gs
not
dec
leave
ds
add
sub
(bad)
leave
mov
sub
add
loopne
daa
int3
cmps
loop
mov
xchg
push
jg
rcl
leave
push
xchg
mov
pushf
movs
mov
jmp
adc
sub
inc
out
add
loopne
aaa
sub
inc
aaa
sub
dec
aad
xor
push
sub
cwde
inc
ret
pop
jae
stc
dec
je
repnz
xchg
sub
mov
mov
or
xchg
retf
cmp
sahf
test
bound
or
ins
sbb
sbb
addr16
push
sub
pop
rol
loopne
mov
je
fs
xchg
adc
outs
out
cmc
mov
hlt
xor
xor
add
pop
sbb
sahf
test
aaa
cmp
push
pop
pop
adc
ret
sub
arpl
dec
mov
icebp
cmp
or
push
gs
add
cmove
sub
xchg
xlat
inc
sbb
inc
cmp
and
rol
push
mov
mov
push
and
cli
retf
mov
pop
mov
xchg
jmp
xlat
xchg
xchg
cdq
sbb
push
mov
lock
xchg
vandnpd
setb
scas
in
out
out
fwait
mov
inc
clc
push
jmp
cmp
jo
fidivr
scas
dec
adc
inc
out
push
cmps
pop
inc
test
in
mov
pop
mov
in
icebp
jecxz
icebp
bnd
xor
pusha
or
xlat
sbb
movs
jmp
retf
cli
repz
cs
pop
outs
popf
cmp
sbb
sti
out
retf
movs
arpl
cmps
push
mov
or
div
call
add
sbb
pop
lods
lock
int
sbb
fisub
mov
cmp
popf
test
and
mov
sub
xor
sti
cmp
icebp
loopne
aam
retf
sbb
or
mov
shl
icebp
(bad)
jmp
or
stos
dec
adc
call
push
jbe
bound
lock
or
inc
mov
addr16
test
or
mov
dec
sub
cmp
popf
inc
add
or
stos
repnz
cld
cld
retf
cdq
js
mov
(bad)
cmc
imul
xchg
(bad)
lock
or
push
sub
or
movs
xor
(bad)
movs
and
pop
es
jb
lods
add
sbb
jle
jbe
lahf
mov
fwait
out
bound
push
mov
inc
mov
jp
mov
cmps
add
fcom
ins
int3
mov
inc
leave
(bad)
sbb
dec
mov
movs
mov
ins
and
xchg
jg
mov
inc
mov
pusha
pop
enter
dec
cwde
add
and
pop
enter
cs
div
aaa
or
hlt
cwde
mov
jl
mov
and
aad
aaa
sub
xchg
inc
leave
mov
or
mov
push
sar
je
int
mov
call
add
jo
push
xchg
xchg
mov
cmp
jns
jns
mov
cmp
and
sbb
sub
pop
addr16
cwde
xlat
pop
hlt
pop
dec
push
push
xor
fnstsw
sub
div
rol
into
lds
pop
sbb
daa
addr16
sbb
jne
in
fstp
das
or
xchg
xchg
cld
(bad)
add
xlat
dec
out
test
mov
sub
mov
cmps
pop
adc
mov
dec
dec
loopne
cs
dec
fisttp
rsqrtps
dec
call
add
mov
shr
mov
loopne
pop
stc
pop
fst
jnp
test
push
ret
test
je
and
cld
push
mov
test
cmp
ret
add
mov
(bad)
int
dec
jmp
in
and
dec
les
xor
mov
xchg
xchg
jecxz
je
ss
iret
in
push
outs
mov
loope
jae
mov
into
fsubp
enter
jb
adc
jl
and
mov
fild
or
or
cmp
adc
and
inc
dec
sub
jecxz
test
sub
add
mov
stc
dec
mov
xor
mov
cmp
lods
loopne
out
pop
stos
jge
lods
jne
addr16
pop
mov
arpl
ret
push
mov
cdq
jp
add
jg
mov
(bad)
int
cmp
rcr
mov
das
inc
dec
call
cwde
jns
mov
pop
mov
adc
adc
mov
inc
nop
dec
inc
or
ja
xchg
repnz
loopne
mov
jp
sahf
sbb
pop
movs
adc
sbb
scas
sti
mov
shl
outs
pop
mov
jno
or
jecxz
sub
dec
retf
pop
not
add
stos
fcom
int
and
test
push
in
cdq
or
sub
xor
mov
jmp
stos
inc
sub
addr16
std
pop
(bad)
dec
adc
xor
jns
add
mov
imul
ror
ror
cmp
dec
imul
mov
ja
mov
pop
push
retf
test
rcl
xchg
lahf
xor
adc
mov
inc
xchg
lods
pusha
shl
or
leave
jns
sbb
mov
cmp
dec
add
ja
ret
mov
outs
adc
inc
cmp
shl
jae
and
mov
fs
sbb
or
test
mov
pop
ss
movs
push
nop
in
daa
adc
das
mov
icebp
aad
push
pop
pop
xchg
cmp
sub
dec
inc
mov
enter
mov
and
shl
cmp
pusha
test
popf
and
inc
jle
mov
push
pop
fisub
(bad)
call
stos
scas
icebp
leave
cmps
and
dec
sub
je
cwde
js
daa
dec
int3
jmp
mov
inc
jp
sti
clc
and
xchg
jge
data16
cmp
hlt
mov
mov
mov
push
mov
sub
mov
inc
(bad)
jnp
mov
out
into
(bad)
pop
scas
sbb
pop
int3
das
mov
fsubp
push
ficomp
xchg
inc
pand
xchg
adc
pop
ror
add
rol
cmp
data16
mov
pop
sub
out
xchg
and
sbb
aas
jge
clc
aaa
cmc
cmps
mov
fsubr
gs
mov
out
cmps
sbb
and
repz
ja
ror
loopne
sbb
movs
jbe
jmp
jo
mov
pop
test
pusha
jecxz
shr
(bad)
in
or
in
mov
es
pop
(bad)
stc
cld
sub
or
aas
jbe
(bad)
dec
xchg
repnz
mov
xchg
inc
pop
dec
sbb
sub
arpl
in
mov
int3
scas
out
sub
imul
push
int
and
retf
and
mov
(bad)
(bad)
dec
popa
or
shr
lock
dec
push
into
pop
pop
pop
sub
mov
mov
pop
push
daa
xor
rol
mov
dec
sub
cdq
jb
in
or
mov
outs
pop
mov
cwde
outs
inc
loopne
mov
fwait
mov
(bad)
push
sbb
dec
xor
and
into
xor
pop
or
pop
pop
pop
ins
cmp
test
pushf
mul
pop
or
stc
cli
pop
movs
mov
call
sub
test
(bad)
pop
out
paddsw
fcomp
jae
mov
iret
xchg
stc
jbe
sbb
jno
mov
add
xchg
mov
call
ret
mov
push
add
pusha
jecxz
cmc
xchg
fadd
add
sub
mov
and
pop
pop
push
clc
adc
cmp
pop
jecxz
jae
dec
jl
fisub
not
(bad)
dec
nop
fs
inc
push
test
jle
inc
mov
clc
les
xor
add
sub
pop
(bad)
int3
cmp
push
ins
xor
cmp
mov
cmp
int3
jecxz
add
sub
dec
sbb
jno
ret
fs
movs
jae
bound
daa
pop
call
movs
dec
lds
mov
rcr
xchg
jmp
mov
fcmovb
stc
je
hlt
lahf
fs
cs
or
sbb
jecxz
jne
cmc
bound
push
cwde
shl
cli
cmp
xchg
sahf
aam
cmps
jbe
push
jmp
inc
jb
pop
xlat
jecxz
arpl
int
jge
jo
xchg
fcmovnb
mov
mov
jmp
retf
test
mov
bound
cmp
fld
les
and
xchg
je
fmul
xorps
addr16
movs
mov
fbstp
jne
push
and
jo
aaa
dec
aam
retf
push
dec
(bad)
clc
nop
mov
test
cli
push
inc
xchg
int3
xchg
cs
pop
mov
test
add
add
stos
arpl
arpl
fsub
aaa
cmp
sahf
pop
mov
in
(bad)
fcomp
xor
fadd
loop
mov
(bad)
lods
in
adc
inc
xor
push
jno
add
sbb
xor
cmp
cmp
out
iret
jg
cmp
mov
push
outs
inc
lods
mov
lahf
xlat
(bad)
jmp
push
sbb
popf
xor
fdiv
test
enter
sbb
mov
or
mov
pop
cmp
les
or
fnsave
inc
retf
test
mov
and
ja
pushf
sub
inc
cmps
lods
loope
(bad)
pop
js
not
fwait
repnz
xor
das
ins
pop
fimul
fmul
add
ins
out
cld
xchg
adc
mov
push
cld
sub
ja
ins
popf
out
jp
and
fbstp
movs
push
or
push
movs
push
jno
in
popa
dec
mov
fistp
mov
xchg
iret
pop
mov
push
std
sub
(bad)
inc
rcr
jecxz
sub
shr
sub
xor
js
loope
hlt
inc
xlat
push
das
sbb
retf
jbe
ds
shr
(bad)
retf
pop
cmc
pushf
dec
jl
xor
out
mov
mov
pop
ror
(bad)
push
mov
inc
jae
adc
movs
push
xchg
and
xlat
mov
sahf
ins
fst
cmp
stos
or
adc
pop
adc
jne
rcl
stc
test
enter
pop
in
stos
cli
sub
push
sub
xchg
hlt
mov
sub
mov
push
sub
sbb
jmp
rol
and
cmp
cmp
jno
loopne
mov
pop
mov
popf
jbe
repnz
sbb
pop
mov
outs
push
xlat
cwde
inc
push
pop
cdq
mov
and
stos
sbb
cmp
xor
std
fwait
adc
stc
mov
add
xchg
mov
jae
pop
or
xor
rcl
or
bound
pop
imul
xchg
cmp
cmp
in
and
cmp
(bad)
retf
ins
cld
dec
xor
xor
imul
sar
ret
xor
sub
jl
mov
mov
cmp
sbb
mov
jns
mov
retf
es
out
sbb
inc
enter
outs
sub
hlt
test
pushf
and
xchg
jle
sbb
mov
mov
or
pop
mov
ja
mov
pop
std
ja
rcr
sub
addr16
es
push
lock
push
mov
pop
imul
and
fnstenv
data16
aas
adc
cmp
jg
jge
int
xchg
ret
test
lods
jb
push
push
mov
cmps
sub
scas
push
jmp
movs
jl
data16
cmp
ror
ret
cmp
and
sub
(bad)
cmp
and
push
dec
mov
fisttp
dec
gs
enter
es
ss
push
bound
add
cwde
icebp
jmp
mov
xchg
popf
jge
push
push
jne
sbb
call
push
xchg
fistp
out
popf
inc
aas
sub
cs
fcmovnb
cdq
pop
fcom
sub
call
or
mov
cmp
jp
lahf
inc
mov
mov
int
dec
aaa
jne
cwde
pinsrw
mov
cmp
rcl
adc
repnz
jg
inc
test
mov
add
and
stos
and
int3
retf
xchg
repnz
dec
adc
adc
fisub
(bad)
jmp
popf
sbb
mov
sub
aam
add
cmps
sbb
push
xor
jmp
push
ss
xor
xchg
mov
rcr
cmp
in
dec
loop
push
sbb
sub
and
test
push
xchg
xchg
adc
aam
jp
popa
xchg
xor
and
pushf
jmp
adc
lods
cli
es
cdq
fisubr
into
aam
(bad)
adc
push
adc
push
ret
xchg
jg
xlat
loope
aad
cwde
test
adc
or
iret
inc
mov
jno
out
mov
cmp
cmps
nop
lods
sbb
or
rol
ds
pushf
pop
mov
mov
sub
dec
xchg
push
std
lods
sbb
sbb
popf
aas
stos
(bad)
movs
sbb
mul
mov
in
mov
push
pop
dec
jb
jnp
dec
scas
retf
and
mov
leave
arpl
cmp
inc
cmovbe
imul
(bad)
mov
out
jg
jne
mov
and
sub
stc
lods
jb
sbb
and
inc
jno
mov
cld
ss
je
outs
sub
sti
int
rol
inc
push
out
and
cmp
loopne
inc
add
sbb
jbe
mov
into
xchg
xor
ret
popf
mov
std
mov
dec
movs
inc
ss
ss
adc
stos
jb
fnsave
adc
into
or
push
outs
ja
mov
hlt
xchg
or
ds
pop
js
cs
leave
ds
fst
xchg
inc
ret
jmp
outs
jno
mov
cmc
mov
sbb
test
outs
movs
shl
pop
xchg
aaa
ret
push
xor
mov
cmp
and
mov
rol
sbb
xchg
pop
or
loope
mov
fidiv
or
inc
aas
mov
jne
dec
cwde
add
aas
loope
mov
leave
fisub
loopne
jae
(bad)
sti
pop
sub
mov
in
loopne
stos
sbb
adc
sbb
or
out
jmp
sti
adc
icebp
fs
xor
ja
xchg
shl
pop
jne
dec
mov
in
sbb
inc
inc
xchg
cmps
and
sar
pop
push
mov
adc
and
inc
fcmovnbe
jmp
ds
jnp
sub
gs
out
mov
fiadd
aam
mov
mov
mov
adc
cld
pop
inc
(bad)
push
jns
ins
jmp
mov
int3
out
repnz
mov
jb
adc
retf
mov
mov
mov
mov
int3
dec
test
push
pushf
fild
out
or
cmp
cmp
xlat
xchg
jb
ds
fbstp
pop
imul
cmp
cdq
nop
jg
(bad)
and
push
mov
adc
test
lods
jmp
retf
push
repnz
stos
mov
pusha
clc
mov
loop
rcl
shl
mov
fdivrp
add
aam
and
or
sub
nop
mov
hlt
rol
call
xchg
vxorps
pop
cs
push
icebp
mov
or
ficomp
cmps
push
jne
ja
lahf
out
cmps
inc
retf
mov
jp
fsub
jb
pop
push
mov
jb
out
sub
pop
mov
jno
push
dec
mov
retf
scas
cmp
pop
cdq
or
loopne
leave
into
icebp
call
fs
repz
sbb
fisubr
int
xchg
(bad)
pop
iret
mov
lock
pop
jl
daa
lahf
test
outs
xor
push
xchg
mov
cmp
inc
popa
mov
inc
ret
pop
test
sbb
(bad)
add
xor
cmp
aad
xchg
or
dec
pop
fmul
add
scas
imul
pop
mov
xchg
cmps
addr16
jg
sub
push
lods
out
js
xlat
sbb
fiadd
stos
retf
add
add
jae
sub
mov
sbb
fidiv
ret
mov
or
add
frstor
jnp
inc
mov
sub
pusha
aam
jo
outs
and
popf
push
xchg
retf
sahf
enter
xor
into
stc
scas
mov
dec
or
call
arpl
stos
repz
clc
inc
dec
jne
stos
retf
adc
leave
jbe
mov
push
pop
pop
ins
push
stos
dec
dec
sub
icebp
gs
sub
iret
mov
add
js
mov
in
cmp
(bad)
jmp
mov
add
cdq
int3
push
and
xor
xor
jmp
mov
mov
into
xlat
clc
mov
hlt
xor
cli
data16
xor
out
retf
add
mov
inc
sbb
jecxz
cmc
sbb
xchg
into
sahf
js
pop
gs
mov
lock
jb
xor
push
(bad)
dec
lods
cmc
or
xor
fild
xchg
rcr
sub
lahf
cli
lock
repnz
pop
into
fwait
push
sub
ret
jp
mov
or
(bad)
(bad)
imul
shl
xor
aaa
jae
add
and
inc
or
lock
pop
jmp
test
cmp
inc
scas
inc
dec
push
test
mov
int3
mov
sbb
cmp
mov
pushw
mov
mov
mov
leave
cdq
ud0
lock
cmp
pushw
push
cmp
dec
in
xor
inc
mov
mov
dec
leave
mov
ror
test
retf
sub
neg
fcomi
fnstcw
mov
sub
jbe
cmp
mov
mov
xchg
popf
mov
xchg
mov
sub
les
pop
xlat
sbb
fwait
xor
dec
push
xchg
xchg
cmp
lds
and
sub
loopne
pop
jg
push
mov
idiv
cmp
add
sub
add
xor
fsubr
test
push
data16
pushf
sub
cmp
sbb
int3
add
fidiv
stos
xor
adc
jmp
mov
loope
std
js
mov
jp
stos
jbe
in
lods
rcl
pop
jmp
icebp
and
jmp
pop
lods
jl
pop
dec
xlat
in
lea
lahf
push
icebp
(bad)
int
aam
pop
mov
(bad)
call
pop
fst
cmp
mov
push
inc
out
lods
int3
add
mov
and
xor
cmps
push
out
xor
scas
test
out
fbld
jge
movs
loopne
cs
xchg
out
fidiv
inc
test
adc
mov
add
adc
out
or
and
les
mov
or
push
into
out
retf
mov
cs
add
out
jo
fimul
cmp
repnz
pop
popf
ins
and
pop
inc
jecxz
out
retf
cmp
mov
sub
into
sub
mov
or
jbe
add
adc
pop
mov
inc
bnd
and
mov
xchg
lock
jmp
cmps
inc
aaa
xchg
xchg
(bad)
in
fimul
sub
cmp
(bad)
rcr
addr16
shr
jmp
and
sub
aaa
jmp
out
movs
or
lds
gs
mov
aad
(bad)
inc
sbb
pop
sub
lods
call
or
gs
cmp
test
icebp
xchg
lock
jmp
loopne
test
add
(bad)
fdiv
fs
mov
xchg
ins
add
mov
retf
je
and
mov
xor
and
sbb
loopne
dec
and
adc
ds
cmp
add
cmp
je
adc
sub
ins
cs
imul
cmps
sbb
dec
or
lods
loope
push
in
out
jnp
pop
and
mov
shl
repz
jne
adc
sub
cld
in
cld
gs
les
inc
in
or
jecxz
cdq
in
lods
push
sbb
aad
fnsave
jle
es
outs
lods
push
xchg
cld
repnz
mov
call
mov
sbb
pop
mov
sub
test
xchg
jl
xor
mov
(bad)
ja
bound
out
std
cmp
or
(bad)
cmp
stc
xchg
inc
gs
mov
jnp
sub
xor
xlat
call
jo
repnz
cmps
outs
sub
sbb
pop
cmp
mov
(bad)
std
xchg
mov
push
js
pop
(bad)
fs
lods
es
sbb
pop
cmps
jecxz
inc
push
jge
bound
inc
sub
xchg
out
(bad)
dec
push
dec
mov
push
mov
fstp
cmp
sub
lock
xchg
in
xor
or
loope
test
out
sbb
std
fidiv
(bad)
mov
cmc
add
cmps
or
popf
les
out
clc
or
call
mov
inc
and
out
and
scas
pop
dec
mov
sbb
pop
pop
fdivp
pop
or
sti
pusha
leave
movs
mov
cs
pop
xor
sub
push
lock
shl
imul
jp
mov
nop
ins
lds
fs
ss
lock
adc
fistp
adc
xlat
into
loop
mov
mov
out
pop
mov
pop
cmps
jecxz
bound
mov
mov
xchg
xchg
scas
enter
adc
pop
xor
or
sbb
stos
pop
loopne
xor
cdq
add
int
or
rcl
ja
jmp
dec
(bad)
jle
inc
call
cmpxchg
xor
push
mov
out
nop
xchg
(bad)
cmp
bound
push
sbb
jecxz
jecxz
pop
pop
and
test
add
sub
pop
pop
je
data16
xor
fdiv
js
push
mov
mov
or
and
push
gs
out
and
mov
movs
or
data16
std
jno
xchg
es
test
and
aaa
jg
jmp
cmps
enter
lahf
aaa
mov
xchg
jg
push
xor
push
sub
repz
lods
adc
sbb
dec
movs
lods
mov
in
imul
and
mov
inc
xchg
or
je
js
mov
jg
out
or
pushf
aas
data16
cmp
in
jl
sub
fstp
fld
das
cmp
sbb
pop
mov
out
retf
sub
sub
mov
mov
into
xor
repz
add
adc
or
test
cld
pusha
mov
aas
xchg
js
scas
ins
and
mov
pop
xor
int
gs
push
pusha
nop
les
mov
imul
into
jbe
jl
sbb
loopne
aaa
dec
neg
add
fdiv
loop
add
jmp
mov
mov
jb
or
addr16
mov
aad
or
lahf
push
or
clc
out
jno
pop
lock
inc
jne
add
ror
cmp
xor
rol
sbb
in
adc
jbe
sub
xor
out
dec
sbb
lahf
arpl
add
pop
popf
mov
and
fsub
cdq
xchg
addr16
push
push
(bad)
xchg
xor
addr16
push
clc
mov
dec
push
or
in
and
js
cwde
sbb
movs
mov
mov
clc
jmp
cdq
sub
lea
lods
sub
pop
es
xchg
inc
popa
pop
repnz
imul
aad
stos
mov
(bad)
cmc
add
fiadd
(bad)
pop
xchg
cwde
cmp
bound
inc
mov
data16
sahf
add
jecxz
iret
pop
pop
push
inc
mov
adc
cwde
and
push
mov
or
xor
dec
pusha
pop
(bad)
cmp
(bad)
in
dec
pop
mov
loope
mov
adc
jecxz
les
jg
mov
jle
shl
sub
pushf
and
jmp
lds
pop
shl
out
sbb
sbb
sbb
les
adc
mov
loopne
pop
popf
cld
add
jne
cmp
push
js
inc
es
jl
test
imul
or
sbb
inc
xor
cmp
push
sar
inc
xchg
les
cld
ss
icebp
stos
jno
inc
mov
cmp
mov
test
push
stos
call
outs
cmp
mov
es
(bad)
fdiv
jne
dec
xor
and
sbb
fcom
test
mov
inc
xchg
pop
mov
fs
mov
data16
ds
inc
ret
sub
add
fld
fisttp
sbb
mov
push
(bad)
movs
jge
and
push
or
ret
daa
test
fist
cmp
jg
in
mov
aam
dec
push
or
(bad)
and
sbb
add
cmp
cmp
jecxz
arpl
cmps
xchg
cmc
cmp
cld
pop
gs
aam
add
or
fs
mov
sbb
test
push
clc
pushf
mov
cwde
mov
jp
mov
ret
jbe
dec
push
dec
popf
dec
ins
int3
jmp
lock
(bad)
(bad)
sub
and
adc
test
sbb
leave
data16
cli
mov
ins
sub
dec
lock
push
lea
xchg
add
pop
rcl
sub
cdq
in
test
mov
and
push
mov
ins
xchg
jg
jl
or
xchg
mov
mov
scas
pop
cmp
or
loope
push
inc
push
xor
movs
or
inc
cs
xchg
cmc
cmc
shr
push
ret
test
inc
stos
call
cmp
xor
and
test
int3
pop
mov
in
clc
fldcw
inc
pop
ror
daa
mov
pop
mov
mov
cs
fstp
sti
jmp
les
fisttp
repz
sub
ror
stc
int3
sbb
add
aam
mov
xchg
add
and
outs
jae
add
fwait
mov
jge
add
mov
xor
push
sar
dec
je
aaa
mov
push
inc
mov
jmp
inc
pop
in
test
(bad)
push
int3
movs
clc
pop
pop
jmp
mov
cmps
ins
hlt
inc
add
fbstp
data16
test
sub
mov
jo
movs
(bad)
jae
and
(bad)
jmp
sbb
jne
test
outs
inc
xchg
(bad)
cli
push
push
xor
pop
xor
addr16
sbb
or
mov
mov
mov
sbb
fsubr
ja
fisttp
int3
imul
sbb
xor
jb
test
stc
jne
sahf
gs
popf
clc
ins
sub
push
data16
in
sub
mov
dec
(bad)
adc
test
pop
in
lods
retf
hlt
in
jne
add
cs
aad
jmp
dec
xchg
mov
or
loope
sub
sub
inc
arpl
jl
sahf
sub
in
sub
retf
in
pop
out
and
in
lods
hlt
fwait
ins
sti
mov
in
adc
cwde
mov
aam
mov
mov
sub
ret
xchg
sbb
daa
icebp
sti
inc
mov
loop
or
inc
loopne
test
mov
jae
jl
mov
aad
add
jno
sub
outs
xchg
or
arpl
ret
jne
xor
scas
push
and
movs
outs
sub
mov
addr16
out
inc
cmp
add
mov
js
inc
push
pop
popf
es
adc
cdq
loopne
cmp
rcr
test
jb
push
dec
aad
test
in
outs
ins
stos
popa
idiv
jne
std
mov
sub
daa
sahf
loope
adc
and
mov
ror
sub
push
xchg
mov
out
jl
xchg
fistp
cmps
jg
mov
add
rol
jmp
dec
mov
push
ds
sbb
aaa
sub
aas
push
ror
call
scas
add
ins
outs
lds
call
jnp
sbb
jp
dec
mov
pop
jb
js
gs
xchg
cmp
push
(bad)
jg
cmps
hlt
(bad)
pop
cmps
xchg
loop
sbb
leave
jne
dec
(bad)
(bad)
pop
js
stc
jmp
jg
add
xor
pop
sbb
frstor
dec
xchg
adc
ja
sbb
pop
in
jl
sbb
std
pop
shl
push
das
add
and
mov
pop
fsubr
iret
adc
and
adc
add
mov
lods
sub
add
in
add
(bad)
test
or
xchg
mov
mov
mov
fucomi
ret
fwait
xchg
push
inc
outs
test
xchg
movs
mov
cld
popf
cmps
iret
rol
xchg
dec
sub
pushf
sbb
mov
ins
mov
and
scas
pop
add
in
(bad)
out
dec
xchg
in
popf
jge
or
push
rol
jmp
gs
repz
lods
dec
sub
xlat
mov
dec
mov
and
sbb
iret
in
xor
std
mov
or
push
xlat
dec
daa
fidiv
cmps
ins
mov
inc
or
test
pop
popa
call
xchg
jmp
aam
add
jge
arpl
mov
push
cmp
pop
movups
xchg
fnsetpm(287
mov
lahf
stos
stc
lock
mov
mov
ja
addr16
out
mov
cmp
mov
lods
jb
sbb
icebp
sbb
sbb
loop
mov
loope
test
sub
aaa
add
or
xor
cwde
jmp
sub
pop
call
outs
jno
inc
retf
push
shr
repnz
rol
imul
sti
mov
ins
addr16
xchg
aaa
add
add
adc
and
xor
push
fdivr
mov
mov
mov
fimul
or
mov
int3
int
jl
mov
bound
dec
push
push
jg
mov
loop
fcmovb
fsubr
ret
ret
pop
sahf
in
repnz
sar
pusha
jo
xchg
ins
das
xchg
daa
xor
add
or
gs
jbe
pushf
xchg
lahf
mov
test
dec
pushw
adc
push
or
push
bnd
movs
sub
mov
aad
rcl
clc
push
idiv
xor
adc
jle
iret
fs
in
cmps
(bad)
jmp
push
sbb
dec
pushf
frstor
retf
sub
mov
das
pop
fimul
push
sub
dec
cmc
pop
ds
sbb
sahf
sbb
push
push
sbb
mov
xchg
mov
cwde
mov
xchg
daa
sbb
out
xchg
fs
dec
pop
leave
and
je
arpl
(bad)
dec
es
pop
std
mov
mov
ficom
adc
jnp
jg
lock
iret
leave
and
ret
mov
add
icebp
cmc
lds
jl
out
xor
hlt
out
stos
jnp
and
jne
out
push
movs
jo
xchg
mov
test
add
movs
jnp
rcl
loope
dec
cld
daa
lock
mov
mov
sub
jne
aaa
test
gs
not
jle
pop
or
sbb
pop
cli
ins
inc
int
pop
data16
xor
sbb
cld
loopne
or
outs
and
xor
cmps
inc
inc
call
mov
sbb
popf
retf
(bad)
fdivrp
xchg
add
sub
sub
xchg
stc
rcl
(bad)
mov
mov
jp
fwait
scas
pmaxub
or
xor
and
mov
stos
jp
iret
or
and
jecxz
or
es
leave
pop
adc
push
out
sahf
mov
(bad)
shl
lea
ss
outs
xorps
(bad)
mov
and
(bad)
mov
mov
jp
push
(bad)
jecxz
pushf
or
xchg
cmp
cmp
out
mov
xor
inc
xor
imul
fs
lods
add
mov
loopne
dec
sbb
jnp
leave
sub
ins
jns
pop
cld
daa
dec
xlat
mov
in
jnp
das
ret
xor
cmps
enter
ficom
mov
xchg
icebp
(bad)
movs
xchg
mov
fs
sub
mov
and
push
xchg
mov
stos
cmp
or
mov
hlt
movs
les
jmp
xchg
leave
pusha
pop
mov
fcmovnu
out
push
pusha
inc
scas
inc
jge
push
sbb
mov
scas
mov
mov
popfw
dec
pop
xor
icebp
fisttp
pusha
push
or
pop
fs
mov
dec
and
mov
popa
into
pop
xchg
pop
push
cs
fs
sbb
lds
mov
jne
fld
xor
push
rcr
cmps
jmp
xchg
push
das
(bad)
mov
add
xor
stos
cmp
ret
add
(bad)
call
xchg
mov
jb
repnz
push
fwait
mov
mov
mov
cmp
test
(bad)
add
es
inc
loop
cmp
cld
sub
lods
add
adc
aaa
inc
push
fnstcw
fstp
imul
jno
rcl
ret
dec
cmc
sub
mov
and
push
mov
cmc
(bad)
pop
das
adc
mov
add
push
mov
mov
mov
pop
mov
and
push
add
mov
stc
or
fstp
retf
push
adc
inc
(bad)
out
sbb
stc
xor
cmp
jo
retf
or
loop
lahf
adc
stos
xchg
xchg
std
test
fucomip
or
jns
mov
in
push
push
fs
dec
cdq
pop
inc
xchg
pop
fst
xchg
mov
xlat
or
xchg
je
data16
mov
mov
cmp
call
jns
mov
cmp
fchs
inc
push
push
inc
rcr
shl
nop
pop
daa
dec
imul
push
bound
sahf
test
ja
bound
pop
in
pop
jnp
mov
and
xchg
test
jns
out
sti
dec
cmp
scas
inc
popa
mov
ret
iret
and
or
and
out
push
add
scas
fisub
jne
sti
and
es
pop
add
mov
call
adc
cmp
jp
enter
jecxz
push
scas
jp
adc
add
clc
pushf
xor
xchg
adc
call
or
retf
xor
inc
loop
or
sbb
out
jmp
jl
pop
mov
push
retf
adc
pushf
sub
cmp
pop
xchg
out
jo
mov
loopne
sbb
jo
jge
push
ja
adc
cmc
add
jmp
stc
cmp
mov
nop
pop
dec
push
outs
and
sahf
jecxz
jb
jno
push
mov
nop
inc
inc
mov
ja
add
xor
std
push
xchg
movs
out
imul
adc
not
cmc
mov
mov
mov
or
sub
mov
or
fsub
add
xchg
adc
xor
adc
dec
jb
cmp
gs
pusha
lods
push
cmpxchg
jne
inc
or
fbstp
mov
mov
shl
cld
push
in
shr
jo
dec
inc
sar
and
cmp
mov
pop
mov
dec
or
stos
sbb
fst
cmp
inc
cmp
ss
push
xlat
in
fs
sub
ins
aad
outs
xor
ret
pop
push
mov
(bad)
xor
or
fwait
and
and
daa
inc
call
pop
cs
push
mul
cmovle
pop
arpl
push
adc
push
cmp
pop
scas
leave
scas
inc
ins
xlat
xchg
stc
retf
mov
push
xchg
mov
mov
jmp
sahf
pop
aas
ror
xchg
pop
adc
mov
xchg
mov
or
sbb
rcr
cdq
push
loopne
push
xchg
pop
jl
dec
out
call
mov
aas
jb
sar
pusha
add
bound
mov
not
sbb
loope
jle
and
fmul
mov
sbb
stos
push
gs
xchg
add
out
sar
and
inc
add
sub
call
mov
iret
jp
cmp
and
adc
rol
das
call
xchg
or
lea
dec
push
adc
push
mov
ja
pop
xchg
sub
dec
jnp
scas
(bad)
and
inc
movs
in
push
and
mov
xchg
xor
ret
dec
jg
pop
adc
dec
dec
(bad)
enter
mov
mov
xchg
xor
(bad)
rcl
sahf
iret
cli
inc
sbb
mov
jecxz
sbb
xchg
lahf
xor
std
jecxz
pop
cmps
sti
rep
loop
inc
cli
xchg
sbb
outs
(bad)
cli
pop
push
sahf
jno
cmp
das
(bad)
jecxz
(bad)
add
dec
stos
ins
inc
push
jp
out
fnsave
mov
pop
xlat
push
or
js
rcr
mov
test
jnp
or
stos
fwait
test
add
push
in
sub
std
cmpps
jp
cmp
clc
out
sbb
pop
sbb
pop
jno
cmp
mov
leave
push
sti
jecxz
sub
jg
fcomi
movs
not
inc
(bad)
repnz
test
adc
sbb
and
leave
hlt
pop
jmp
addr16
call
pop
mov
lds
dec
add
aam
push
dec
sub
cmps
aad
xor
stos
dec
push
pushf
adc
xchg
pop
call
mov
int
and
dec
and
pop
(bad)
fcom
enter
out
inc
sbb
dec
neg
movs
lea
xchg
into
fist
inc
test
mov
cmp
call
mov
ja
xor
xchg
mov
jbe
cs
and
dec
jno
inc
xor
(bad)
xchg
jge
(bad)
push
gs
xor
mov
mov
dec
and
shr
movs
pusha
sti
repnz
jns
adc
lods
push
mov
aas
(bad)
mov
jo
cs
mov
arpl
mov
es
cmp
dec
push
push
add
push
loope
jl
jb
mov
(bad)
mov
out
push
mov
mov
iret
pop
hlt
pop
sar
xor
imul
jns
push
add
xchg
jmp
movs
fs
pop
mov
sbb
in
pushf
dec
xor
mov
mov
inc
jecxz
dec
cld
dec
sub
and
in
inc
nop
out
cli
(bad)
xchg
in
dec
cli
sbb
bound
lds
mov
inc
push
cmp
cmps
dec
js
fidiv
pop
retf
mov
hlt
test
ja
jns
aaa
mov
or
into
aam
mov
dec
sub
mov
ja
mov
mov
in
jmp
aas
sub
xchg
mov
add
inc
pusha
cmc
push
inc
add
mul
in
pop
pushf
xor
in
les
idiv
inc
out
add
js
or
lods
jmp
idiv
stos
xchg
jns
xchg
adc
(bad)
mov
and
xor
test
repz
mov
or
cmp
xor
jecxz
out
cwde
clc
cmp
or
div
sub
int3
and
inc
add
scas
repnz
lods
sbb
mov
fsub
ins
fistp
test
icebp
das
test
fild
loop
les
jns
pop
sbb
mov
ins
aas
sti
out
fwait
pop
fimul
ins
loopne
je
je
mov
mov
push
stos
xchg
push
icebp
dec
addr16
mov
push
imul
jge
push
mov
jne
ins
ins
ss
and
adc
les
ins
push
mov
stos
cmp
jnp
or
add
xlat
xchg
or
adc
icebp
push
lahf
or
xlat
inc
or
pusha
test
mov
add
loop
add
jmp
or
retf
arpl
mov
sub
aas
movs
imul
inc
sub
xor
ret
and
cdq
cmc
lods
movs
mov
fwait
jne
add
mov
add
sahf
jge
cmps
or
leave
ja
mov
out
dec
jae
xchg
loope
int
nop
bound
dec
fisub
adc
adc
call
xor
call
dec
xor
dec
xchg
mov
bnd
std
sar
sbb
sub
mov
pop
inc
add
jne
push
test
xchg
lods
push
sub
and
inc
dec
outs
test
push
mov
jle
sbb
sbb
jno
lds
ret
adc
test
repz
bound
dec
mov
jnp
jecxz
inc
cli
xchg
sub
or
xor
dec
in
and
shl
add
scas
mov
movaps
cmps
mov
movs
bts
sub
cdq
cmp
test
mov
int
cmp
sbb
push
(bad)
stos
mov
(bad)
leave
adc
cs
rol
retf
mov
jmp
dec
outs
jb
sub
adc
mov
js
sbb
jo
cmp
popa
out
test
lods
pop
sbb
jb
jns
push
lds
movs
out
loop
popf
mov
pop
xchg
mov
mov
bound
pop
pop
pushf
call
jo
jg
cmp
mov
ja
mov
arpl
and
push
inc
jne
pop
pop
adc
retf
push
test
sub
rcl
jg
sbb
outs
or
mov
inc
dec
xor
fs
pop
gs
xchg
cs
stc
call
cmp
and
jp
or
jo
xlat
(bad)
adc
and
das
fsubr
in
xor
js
cmp
adc
pop
loopne
push
pop
mov
in
push
cmc
loop
inc
cmps
xchg
hlt
mov
clc
int
push
or
idiv
cmp
in
loope
ins
bound
add
dec
push
pushf
scas
(bad)
into
pop
shl
call
or
and
adc
sbb
jge
mov
mov
cwde
add
cwde
ds
popa
aaa
in
popf
adc
adc
mov
int
data16
adc
retf
adc
dec
or
das
push
fucom
jne
pop
mov
pushf
sbb
fstp
popa
scas
sub
inc
imul
(bad)
pop
bound
push
jo
cmc
test
lock
mov
shl
enter
test
shl
lea
leave
(bad)
cmps
jb
jl
cdq
cmp
movs
mov
add
lods
arpl
jmp
imul
push
lahf
inc
mov
xchg
pop
inc
jg
jg
xor
pop
int3
add
bound
inc
pop
in
in
jmp
pop
scas
pushf
dec
mov
jecxz
dec
sbb
clc
add
xchg
icebp
dec
dec
add
cmp
retf
pop
mov
push
mov
imul
dec
repnz
jmp
pop
push
mov
or
xor
loopne
retf
xor
out
in
retf
iret
cmp
xchg
lods
xchg
enter
sub
mov
inc
int
fiadd
add
sub
jecxz
mov
stos
iret
sbb
jmp
sub
aas
jb
cmps
cmp
popa
pop
ja
pop
cmc
daa
dec
or
into
sub
inc
dec
lds
jmp
or
mov
ror
and
adc
cli
enter
cmp
pop
test
mov
jno
imul
into
and
fisubr
push
add
jecxz
push
and
xchg
xor
jns
clc
mov
xchg
daa
icebp
pop
pop
xchg
mov
sub
or
jecxz
pop
mov
je
test
push
repnz
mov
gs
jmp
add
pop
imul
imul
pop
mov
push
adc
mov
push
jmp
idiv
dec
mov
mov
fcomip
mov
inc
outs
add
push
and
sub
xlat
imul
pop
mov
aam
arpl
adc
cdq
mov
and
loop
cmp
rcr
popf
push
mov
cmps
jno
lahf
popa
inc
dec
jo
fnstcw
cmp
call
fucomp
sub
cmp
leave
sbb
(bad)
int3
in
(bad)
jmp
addr16
shr
mov
(bad)
pop
pop
mov
gs
hlt
out
mov
ror
jo
xchg
cmp
mov
cmp
mov
adc
xchg
sbb
je
(bad)
out
js
outs
inc
and
jp
jo
aad
push
sbb
sbb
neg
mov
leave
int
retf
inc
and
int
sub
test
dec
dec
xor
or
scas
mov
pop
push
pop
jmp
inc
mov
push
inc
add
mov
jmp
aam
or
mov
inc
jo
mov
jb
lods
test
hlt
sub
sub
dec
retf
adc
jp
std
in
jmp
sahf
sub
xchg
and
push
test
ret
dec
or
add
sub
nop
dec
pushf
aaa
mov
aam
outs
add
mov
cwde
add
pop
in
(bad)
push
adc
aad
popf
(bad)
jle
stos
(bad)
xor
imul
mov
aaa
adc
(bad)
xchg
xchg
fistp
push
jl
repz
or
xchg
or
sub
adc
rcr
aad
loopne
aas
ret
and
scas
stc
xchg
cs
mov
dec
int3
inc
out
mov
daa
js
pop
jne
mov
scas
aad
or
push
or
or
add
add
dec
mov
repz
jo
and
(bad)
int
jnp
das
inc
mov
jmp
(bad)
loopne
mov
cmc
adc
mov
or
call
fmulp
xchg
add
jmp
push
xor
fstp
scas
inc
in
cmps
inc
movs
pop
dec
loope
mov
enter
(bad)
jmp
mov
add
xor
sbb
test
lods
add
and
int
lock
fst
out
repnz
jb
mov
loop
into
int
push
jne
add
gs
(bad)
ss
mov
vpshufbitqmb
outs
pop
loop
pushf
xlat
cs
cmc
(bad)
add
aad
in
call
jp
repnz
pop
inc
movs
les
mov
scas
mov
aas
stc
mov
rol
daa
push
pop
jae
jecxz
shl
int3
fwait
jmp
iret
std
outs
push
ror
and
mov
and
scas
int
mov
retf
lahf
stos
popf
loop
lods
std
add
sub
jp
xsavec
dec
(bad)
push
sub
sti
mov
aaa
sbb
ins
jge
jae
stc
mul
mov
sub
and
(bad)
dec
lods
stos
jle
pop
mov
cmp
jp
ror
xchg
add
jmp
rol
fistp
xor
jns
jg
mov
sbb
add
cwde
ret
lea
imul
mov
(bad)
sbb
inc
test
outs
arpl
pop
mov
faddp
int3
scas
xor
cli
lea
pop
dec
iret
mov
dec
int3
mov
mov
jl
sar
mov
popf
shl
mov
shl
in
cmp
jae
outs
mov
mov
repnz
mov
clc
pop
dec
int
repnz
xchg
in
pusha
push
test
cmp
popa
cld
mov
dec
aad
inc
inc
cli
out
fs
jg
push
retf
int
sbb
adc
sbb
in
adc
adc
idiv
jb
jmp
mov
in
std
push
cmp
cdq
dec
xchg
ret
ret
les
dec
jb
(bad)
sahf
lods
push
es
test
loopne
pop
xchg
mov
pop
retf
les
jno
jnp
cmc
into
sbb
fwait
pop
mov
jbe
mov
loop
push
outs
jbe
mov
test
shl
sbb
add
inc
mov
pop
dec
fcom
leave
int
and
shl
sub
adc
jno
pushf
xchg
pop
xor
push
jp
fnstcw
stos
(bad)
pop
imul
sub
or
leave
imul
or
retf
out
jnp
leave
pop
dec
ins
xchg
mov
fsubr
and
sahf
sub
cmp
popf
add
push
outs
push
pop
mov
retf
jbe
pop
and
push
jns
gs
mov
js
pop
mov
and
sti
out
mov
sbb
sbb
fsubr
daa
out
sub
stos
sbb
mov
call
push
mov
mov
int3
mov
jecxz
jmp
mov
pop
push
iret
add
sahf
cmp
lds
cmc
cmp
aam
sbb
(bad)
fild
and
mov
inc
inc
jns
jg
ins
cwde
(bad)
jmp
push
jmp
ins
add
(bad)
or
or
jae
xchg
fs
aam
icebp
aaa
or
cmps
mov
mov
sub
mov
test
in
and
cmp
sbb
call
mov
fadd
push
call
jg
loop
jecxz
nop
shr
adc
test
jmp
adc
out
jecxz
jmp
dec
push
dec
cdq
mov
(bad)
cmp
add
xchg
imul
out
fwait
stos
jmp
mov
ds
cli
push
enter
cld
imul
push
in
jg
in
out
(bad)
fist
(bad)
push
xchg
xor
mov
ret
push
imul
mov
imul
mov
cld
cmps
cmp
and
fdivp
and
sbb
push
and
outs
test
rcr
cmps
mov
imul
movs
imul
das
es
push
mov
cmp
pusha
in
out
cmps
popf
inc
icebp
push
not
jnp
das
pop
or
mov
icebp
(bad)
xchg
push
ficom
cwde
and
dec
cmp
xor
cwde
xchg
add
repz
arpl
sub
(bad)
into
test
jl
repz
adc
scas
aas
mov
inc
jmp
mov
push
mov
sbb
cmps
lods
lds
or
pop
ins
es
dec
and
mov
push
retf
push
popa
xchg
retf
mov
push
push
mov
lahf
inc
jb
mov
and
mov
xchg
adc
(bad)
out
jle
fwait
cmps
mov
push
ds
test
cmp
dec
mov
ret
dec
mov
mov
inc
inc
xchg
or
jmp
pop
push
int3
movs
js
fldpi
jecxz
sub
nop
icebp
repz
sbb
adc
icebp
mov
cmc
(bad)
ficomp
jne
sti
call
cmp
hlt
pusha
loop
bound
and
lods
xor
xchg
add
jbe
mov
aaa
dec
leave
adc
das
add
in
push
(bad)
mov
and
add
inc
mov
retf
or
shl
jecxz
mov
mov
jno
test
lods
test
aam
stos
imul
int3
push
cmp
pop
and
dec
xor
inc
mov
xlat
(bad)
sbb
sub
fnstcw
cli
mov
fsubp
push
add
hlt
push
sbb
pop
xor
jg
mov
pop
test
(bad)
sub
out
out
out
fstp
jb
jbe
and
in
or
or
adc
gs
pop
iret
or
pushf
push
sbb
clc
psubb
jg
pop
int3
in
dec
dec
dec
and
inc
stos
mov
or
pop
pushf
cmp
ss
inc
arpl
sahf
rcr
mov
xchg
repz
test
push
shr
jle
and
lahf
mov
push
dec
cld
xor
mov
inc
sbb
clc
js
ret
cld
sbb
scas
fnstcw
arpl
int
stos
sub
xor
jmp
add
inc
and
add
inc
add
mov
sbb
movs
and
shr
outs
xor
pushf
mov
or
(bad)
lods
mov
clc
(bad)
stc
jge
into
(bad)
test
or
lods
dec
ror
xlat
pop
dec
stc
sub
and
adc
mov
xor
leave
sub
jge
push
xor
jb
dec
pop
mov
frstor
movs
sbb
sar
fwait
mov
stos
(bad)
ins
mov
sub
jl
in
nop
add
sar
stos
cmps
ins
fcomi
xchg
(bad)
xor
fidivr
ret
icebp
cmps
mov
sti
xchg
mov
jb
rol
inc
push
pop
xor
and
enter
cmp
pop
shl
and
hlt
cmp
test
push
push
sti
iret
or
push
retf
fsub
call
pop
mov
retf
dec
scas
cmp
fisttp
mov
es
cmp
mov
mov
mov
jo
dec
repnz
inc
jmp
push
repnz
clc
mov
and
mov
rcpps
call
rcl
test
lock
dec
jmp
loop
aad
push
scas
cdq
sar
sub
stc
or
sti
sbb
mov
inc
xchg
frstor
cld
dec
mov
or
push
pusha
aaa
std
jns
push
add
pop
adc
jecxz
sbb
sbb
call
mov
popf
scas
sti
ret
cwde
scas
lea
daa
ss
push
push
sahf
inc
mov
add
mov
pop
inc
scas
adc
push
inc
outs
(bad)
and
mov
cs
push
repnz
outs
rcl
xor
test
add
jae
das
sbb
sar
dec
call
jno
aam
bnd
push
aam
push
push
inc
and
call
scas
rcl
hlt
retf
mov
or
or
aam
mov
jp
(bad)
jl
in
sbb
and
jno
cmps
pop
pop
sbb
in
mov
xchg
mov
pop
mov
outs
dec
push
js
pop
arpl
popf
jmp
fnstsw
loop
and
inc
sbb
mov
ds
in
add
add
icebp
pop
outs
adc
pusha
ins
int
mov
pusha
je
mov
sti
inc
repnz
mov
or
sub
jbe
das
popa
sub
ror
xor
jp
inc
retf
add
(bad)
fistp
iret
loopne
cmp
scas
xchg
inc
mov
xor
lahf
stos
ds
lods
aaa
cmps
in
in
pop
cld
mov
push
mov
cmps
movs
punpckhwd
xchg
cmp
dec
loop
dec
popf
out
stc
xor
push
fs
je
mov
call
int
pop
data16
push
sti
ror
mov
in
cmps
push
dec
stos
out
dec
cmps
scas
cmp
je
lea
add
jle
or
mov
int3
sub
sahf
inc
mov
mov
or
pop
cmp
sub
jmp
or
sahf
retf
push
inc
aad
mov
inc
mov
push
loop
ss
nop
out
mov
and
in
test
out
bt
inc
dec
pop
jg
jns
hlt
in
and
ins
(bad)
fwait
ror
push
fisub
mov
es
inc
movs
ins
js
mov
fcom
or
sti
jne
push
ffreep
data16
shl
and
fcom
push
dec
sbb
call
adc
pop
pop
push
or
das
rcl
mov
cdq
fnsetpm(287
cli
inc
add
enter
push
sub
pop
clc
je
nop
ficomp
mov
pop
push
push
movs
push
adc
outs
(bad)
dec
call
dec
pop
out
js
repz
mov
ss
fdiv
fwait
and
scas
inc
ins
(bad)
mov
xchg
lods
and
imul
cmp
adc
xchg
stos
loop
data16
enter
mov
add
xchg
daa
fld
fadd
sub
sub
xor
lods
sub
jle
cmc
xchg
sti
sar
push
ins
mov
ins
movs
inc
fwait
inc
stos
inc
or
pop
cmp
arpl
enter
inc
xchg
pop
cs
cmp
cmp
pop
std
mov
lahf
sar
xchg
int3
sbb
xchg
stos
mov
mov
rcl
push
cmp
ins
daa
imul
and
add
mov
in
lods
sti
mov
jo
enter
mov
mov
nop
xor
push
lahf
jno
(bad)
mov
mov
imul
(bad)
sbb
int3
sbb
popa
iret
shl
out
aaa
inc
mov
call
mov
dec
pop
push
sub
fist
das
mov
mov
cmp
push
sub
mov
cs
loope
inc
mov
mov
sub
add
jns
sbb
fisubr
mov
sub
push
outs
retf
popa
mov
daa
ins
adc
daa
xchg
cld
pop
in
mov
jb
loopne
imul
outs
loop
mov
test
retf
ret
xchg
pushf
and
xchg
adc
sub
ins
xlat
pop
sti
(bad)
(bad)
iret
mov
or
jae
aad
fwait
bnd
dec
xchg
push
push
cmp
(bad)
lods
jl
out
push
sbb
iret
jmp
das
cmp
inc
outs
mov
pop
mov
or
dec
js
(bad)
jg
mov
dec
enter
xor
add
ret
pop
ins
cwde
les
inc
call
(bad)
cld
mov
pop
ins
cmp
push
aad
cmp
ins
sub
bsf
test
jl
shl
(bad)
sbb
mov
xchg
mov
adc
pop
frstorw
jp
inc
adc
or
mov
adc
movs
lock
mov
xor
fcomp
les
test
jg
or
stc
fnsave
add
xchg
nop
out
xor
call
inc
adc
fcomp
cld
call
sub
sub
jle
enter
js
or
push
mov
icebp
nop
xor
lods
add
xchg
imul
mov
ficom
pop
cmp
retf
scas
(bad)
test
jecxz
(bad)
fistp
jae
in
cmp
stc
jmp
mov
call
xchg
inc
or
into
mov
lock
shl
add
out
test
movs
dec
push
ds
lods
test
dec
or
in
inc
test
cmp
in
mov
add
jge
leave
cmovle
mov
pop
dec
mov
inc
xchg
inc
movs
dec
push
scas
stos
pop
add
inc
inc
scas
lods
pop
mov
fidiv
push
imul
cld
cmp
fnstenv
scas
rol
je
imul
mov
repnz
pop
cmp
cmps
sbb
inc
ret
mov
adc
push
int
loopne
sub
scas
call
and
dec
aad
hlt
gs
and
push
adc
or
(bad)
adc
jle
xchg
retf
push
sbb
pushf
cmps
stc
jae
imul
pop
sbb
add
dec
dec
sub
push
rcr
adc
lea
call
dec
into
es
add
aas
jge
repnz
adc
pop
xor
mov
mov
jp
lods
jge
aas
push
shr
dec
push
arpl
sbb
stos
nop
aaa
push
sub
iret
popa
outs
aam
clc
mov
shl
xchg
push
sti
inc
push
(bad)
pop
cmp
sbb
or
jl
xchg
inc
fucom
push
pop
popf
je
or
mov
fcomp
xchg
xor
js
call
mov
daa
sbb
gs
pop
pusha
(bad)
(bad)
daa
hlt
or
cdq
(bad)
fsub
lds
mov
aas
xor
sahf
sub
mov
(bad)
mov
sahf
cwde
mov
lds
cld
call
mov
repz
mov
call
into
das
jbe
add
js
test
lahf
sub
jge
neg
mov
mov
in
ins
pop
data16
xor
sub
cmps
rcr
or
call
dec
sar
test
or
xchg
in
cmc
cmc
mov
jo
sbb
jo
lahf
push
add
dec
mov
dec
shl
add
out
mov
nop
fdiv
loope
and
clc
mov
cmp
xchg
pop
lds
xor
ins
fnstcw
jnp
(bad)
lock
and
out
fldenv
addr16
xchg
bound
adc
mov
pop
outs
imul
add
jmp
and
add
sub
call
sahf
daa
mov
inc
sti
adc
jnp
inc
pop
cdq
jle
and
sahf
stos
dec
stos
jp
test
je
retf
or
sbb
and
or
je
sub
or
push
repnz
mov
test
shl
mov
mov
inc
pop
mov
cmp
cmps
jae
rcr
xchg
in
imul
or
push
push
push
add
mov
dec
cmc
or
push
push
iret
sbb
push
pop
ret
cmp
cmp
fadd
leave
and
jno
lock
mul
pop
jo
xor
jb
stc
mov
push
xor
mov
shr
xor
stos
mov
sti
stos
pushf
sbb
jns
push
add
movs
inc
popa
int3
imul
fdiv
sbb
sbb
loop
xor
out
jmp
sbb
int3
stc
xchg
cmp
pop
pop
push
rol
int
hlt
out
mov
cmps
cmp
cmp
iret
cld
pop
ror
push
and
jle
push
sub
out
sub
imul
outs
or
ficom
xchg
push
jl
xchg
push
loope
movs
dec
xchg
mov
xchg
push
dec
fwait
and
pop
out
(bad)
jl
and
inc
push
jg
jnp
rcl
sahf
xor
and
pop
movs
hlt
sbb
add
rcr
ds
sar
in
cli
retf
lea
jp
mov
jb
dec
pop
test
in
jmp
or
aaa
enter
in
and
scas
ja
xchg
not
loop
cmps
jmp
mov
out
cmps
popf
rcl
mov
les
dec
sub
pop
pop
call
cmc
fadd
push
(bad)
mov
stos
ja
adc
aaa
das
in
pop
jo
jno
das
iret
push
xchg
xchg
(bad)
movs
jns
lahf
mov
xor
mov
cs
stc
sub
cs
mov
aaa
(bad)
lock
fist
mov
imul
add
into
or
rcr
sub
fdivr
jns
adc
lahf
add
inc
mov
dec
jbe
push
pop
movs
jecxz
dec
out
and
xchg
jbe
retf
push
sbb
ins
push
or
inc
mov
cld
mov
cmp
mov
cmp
pusha
cmp
inc
xor
int
leave
jmp
out
add
add
push
or
jmp
dec
shl
mov
data16
inc
or
aaa
push
add
add
pop
sahf
adc
and
fsubr
sub
jb
out
add
jne
add
int
sbb
inc
add
dec
test
mov
pop
mov
jbe
popa
hlt
jp
mov
jecxz
fiadd
inc
or
ficom
fmul
and
jle
sub
rol
pop
movs
pop
popa
ror
push
dec
sti
inc
shr
or
(bad)
ins
lea
hlt
outs
and
(bad)
nop
xor
sahf
rcr
sbb
cmp
repz
xchg
or
das
inc
xor
nop
in
adc
add
and
mov
imul
in
or
test
or
movs
add
lock
or
loopne
enter
mov
(bad)
fistp
mov
inc
pop
scas
sbb
jg
sbb
and
les
pop
dec
rol
sub
sub
jge
cmp
into
dec
icebp
mov
imul
lds
pop
cmps
clc
adc
inc
mov
imul
pop
mov
mov
ds
or
rcl
push
addr16
cmp
jle
sar
cwde
mov
push
adc
inc
enter
adc
addr16
mov
pop
mov
stos
outs
xchg
into
pusha
push
jno
mov
mov
dec
xor
cmp
ret
pop
ins
lock
and
fcom
add
sbb
sbb
loopne
leave
add
dec
push
inc
iret
out
pop
push
ret
sbb
xor
sar
xchg
sbb
adc
popa
dec
in
add
and
in
arpl
jnp
adc
adc
cmp
(bad)
loope
in
add
pop
(bad)
xchg
sub
add
(bad)
mov
pop
iret
and
out
xchg
bnd
fwait
fwait
outs
and
js
mov
jp
(bad)
sub
mov
pop
repnz
fwait
jecxz
mov
jb
les
fwait
pop
xor
pop
mov
sahf
lahf
xlat
aam
jp
mov
fstsw
shl
test
leave
pop
push
adc
call
xchg
jbe
mov
and
jle
pop
xor
hlt
aas
pop
dec
jge
sbb
xchg
lahf
adc
dec
clc
push
inc
xchg
aas
add
ins
mov
mov
pushf
out
test
push
cwde
lods
cmp
fimul
add
cmps
test
pop
cmp
ins
gs
cmps
push
mov
or
jb
fidivr
mov
addr16
rol
xor
hlt
addr16
in
repnz
jmp
scas
xchg
bound
cli
movs
and
pop
sbb
mov
mov
aas
push
sbb
or
repnz
inc
dec
retf
adc
add
add
adc
mov
pop
ss
cdq
jp
sbb
dec
ss
xchg
mov
cmp
call
test
push
outs
(bad)
dec
jne
pop
sti
in
arpl
sbb
(bad)
lock
and
mov
(bad)
ins
or
sbb
xor
push
mov
xchg
pop
add
sub
bound
jae
dec
ret
stos
frstor
repz
mov
push
push
adc
pop
jmp
rcl
imul
bound
dec
sti
cmc
outs
mov
out
sub
xchg
and
je
cmp
xor
dec
dec
sub
lds
xchg
test
sbb
ds
sbb
lahf
push
lahf
push
cli
push
and
and
xchg
sub
xor
test
mov
xor
xlat
mov
dec
pop
out
lea
mov
inc
rcr
std
cmp
xchg
test
out
scas
mov
pop
mov
dec
sub
inc
aad
(bad)
movs
sahf
push
mov
pop
repz
mov
adc
arpl
xchg
adc
fild
push
shl
into
and
test
sbb
cmp
loope
xor
jp
dec
nop
adc
inc
rol
mov
xor
in
xchg
cwde
push
daa
pop
out
push
syscall
or
cmp
mov
and
push
imul
xlat
push
rcr
shr
push
cmp
addr16
jnp
add
adc
xchg
cmps
and
jo
punpckhwd
lock
imul
out
arpl
cs
cmp
mov
xchg
out
data16
sbb
jg
in
pop
cmp
adc
add
shl
pop
stos
inc
pop
je
fwait
dec
hlt
mov
jmp
ficomp
test
or
jp
pop
retf
dec
dec
inc
nop
(bad)
int3
sub
hlt
scas
and
xchg
sbb
adc
outs
ror
int3
movs
aam
dec
xlat
(bad)
cli
sti
jl
in
and
cmc
xchg
sub
in
mov
lahf
sbb
rcr
mov
push
(bad)
pop
xchg
mov
pop
sbb
jmp
movs
call
mov
jb
or
inc
add
mov
das
cs
stos
shl
fwait
inc
cmp
cmp
loope
mov
pop
sub
and
add
data16
ds
fst
push
inc
jl
xchg
call
xor
ror
push
stos
cmps
stos
pop
mov
mov
dec
push
je
mov
int3
dec
mov
or
lods
mov
mov
jb
das
add
div
or
mov
aaa
and
lahf
mov
xlat
pop
and
scas
pop
adc
leave
fs
das
(bad)
or
jne
cmps
pop
nop
jl
xchg
daa
add
aam
out
jbe
ret
mov
or
in
sub
jb
add
sbb
daa
mov
les
xor
test
stc
cmps
lods
mov
sbb
adc
pop
mov
in
cwde
dec
xor
push
js
mov
stos
mov
dec
nop
mov
fbstp
sti
stc
or
pop
test
xor
cmp
lods
cmp
sub
ja
push
mov
out
pop
aad
cs
les
sbb
aas
lahf
test
pusha
shl
aam
aad
shl
imul
xchg
and
push
jge
and
retf
mov
ret
inc
cmp
mov
adc
call
push
imul
dec
and
jle
jmp
xor
sbb
int3
cwde
movs
jno
pop
xlat
dec
(bad)
mov
cmps
(bad)
call
add
add
add
call
lock
call
fwait
das
add
retf
out
lahf
call
mov
pop
outs
or
lods
xchg
test
jae
icebp
mov
or
out
xchg
and
mov
sub
cmp
pusha
adc
ins
jae
pop
add
xchg
cwde
in
shl
jmp
jnp
sub
test
call
mov
scas
push
jecxz
es
cmp
jbe
lahf
fwait
cmp
push
inc
pop
cdq
ret
dec
and
sub
xor
rcr
das
pop
lahf
xchg
(bad)
mov
cmp
mov
inc
cmc
or
in
cmp
inc
outs
loopne
es
mov
pop
daa
cli
adc
loope
cmps
je
xor
sbb
in
or
out
retf
aaa
jmp
mov
mov
mov
pop
sub
cmps
sub
sub
lock
scas
push
test
lods
stos
xchg
fiadd
clc
lock
pop
cmps
mov
sbb
pop
cmps
std
(bad)
adc
xor
(bad)
sub
cmp
pop
push
xchg
mov
fisttp
sbb
cli
cmp
loope
or
adc
outs
add
clc
pop
xchg
xlat
sub
test
push
fst
and
or
test
cmp
sbb
push
adc
fidivr
sti
jmp
stc
ficom
int
(bad)
and
das
push
loopne
xlat
and
inc
lds
dec
ins
test
xchg
(bad)
lea
add
out
mov
xlat
jp
movs
cdq
jle
push
(bad)
or
lahf
loop
dec
and
gs
mov
test
jnp
cmp
sbb
inc
shl
mov
mov
mov
push
mov
test
mov
sub
ret
cs
jg
shl
retf
adc
test
jae
out
inc
sbb
(bad)
jge
retf
mov
clc
cdq
or
and
adc
lods
scas
pusha
call
imul
pop
test
ja
(bad)
xchg
mov
push
jo
and
mov
sbb
inc
push
jp
xchg
xor
push
ret
dec
(bad)
xor
movlps
(bad)
movs
jns
call
or
or
pop
pop
ja
sub
nop
mov
cmp
inc
loopne
jecxz
push
pop
out
inc
push
mov
inc
dec
mov
and
mov
out
sti
push
mov
inc
in
das
ss
mov
mov
jb
imul
movs
sub
xor
rcl
sbb
shl
cmp
(bad)
cmp
push
mov
fcomp
std
pop
enter
test
push
dec
jecxz
and
xchg
adc
popa
inc
iret
mov
es
jl
in
jecxz
mov
das
call
test
aam
lds
push
and
pop
cmp
in
jo
add
sbb
dec
push
loope
aas
jb
jae
mov
jecxz
iret
xchg
ficomp
ds
ret
(bad)
sub
xchg
inc
out
das
retf
sahf
shl
outs
test
dec
pop
dec
js
cli
enter
pop
mov
loopne
(bad)
stc
jo
jg
cmp
cmp
popa
movs
retf
ficom
fwait
cmp
stos
mov
imul
inc
mov
jmp
jnp
jnp
jge
xor
nop
mov
mov
data16
outs
repnz
mov
jmp
movs
cmp
mov
mov
or
cli
inc
mov
adc
push
fstp
mov
inc
popf
dec
xor
aas
mov
pop
std
jmp
adc
pop
jg
imul
sar
outs
mov
out
call
fimul
mov
mov
mov
sbb
fdivr
nop
call
dec
inc
out
adc
mov
lock
mov
cmc
mov
jle
loop
ffree
push
push
jl
aad
mov
cld
jge
xor
lods
retf
stos
icebp
in
int
xchg
mov
hlt
int
test
icebp
jo
mov
pop
test
or
ss
or
cmp
(bad)
out
lea
cmp
stos
and
pop
das
inc
push
jno
popf
repnz
adc
xchg
push
test
sbb
mov
mov
jecxz
jb
push
sbb
inc
add
adc
pop
sub
icebp
push
fcmovnbe
cld
cmp
add
sub
rcl
pop
jnp
cmp
cmp
inc
xchg
fild
pop
dec
and
and
sbb
movs
mov
stos
jge
and
jns
aam
mov
push
cmc
(bad)
xor
mov
push
xor
mov
test
out
jbe
adc
test
sub
dec
sub
rcl
test
test
mov
sbb
pop
push
aad
shl
in
js
iret
lahf
les
ds
cmp
dec
dec
neg
mov
push
push
(bad)
ret
inc
cmp
and
jno
push
jnp
push
in
inc
xor
pop
lahf
dec
xor
xchg
xchg
popw
into
mov
push
scas
mov
cmp
cmp
add
jae
mov
dec
les
jle
mov
call
cmp
aas
lods
popa
test
pusha
cld
cwde
mul
pop
dec
jns
and
dec
and
popa
push
sbb
pop
inc
out
sbb
gs
adc
ss
mov
xchg
cmps
ss
mov
mov
sbb
adc
sbb
adc
or
add
inc
or
jmp
xor
xchg
js
pop
call
xor
fistp
jl
cmp
pop
mov
mov
add
mov
dec
sahf
ins
movs
cmc
stos
mov
outs
adc
je
jmp
bound
mov
mov
mov
leave
xchg
jmp
add
push
or
cmp
add
adc
dec
or
push
push
sbb
out
add
adc
aam
jle
pop
fstp
cld
mov
enter
ficom
imul
xchg
in
mov
cmp
jb
ja
retf
fcom
xor
lods
push
fiadd
inc
push
das
sbb
jbe
mov
cmp
inc
loop
bound
xor
mov
jne
pop
pop
add
jne
sub
fcom
movs
cmp
mov
sar
sbb
dec
xchg
mov
push
sti
jge
in
mul
ret
mov
sbb
retf
mov
mov
cmp
(bad)
jecxz
arpl
mov
sbb
std
fdivr
cmc
push
enter
jns
aaa
xor
mov
dec
push
push
or
sub
repz
movs
in
mul
outs
lods
stc
dec
xor
outs
in
jno
xor
sti
xlat
lds
lock
ror
and
ja
mov
retf
into
cmp
scas
xchg
inc
sbb
fst
int
retf
mov
loopne
outs
int3
iret
push
inc
ds
add
inc
pop
push
(bad)
sbb
adc
repnz
sub
pop
mov
mov
mov
sub
inc
inc
ret
mov
mov
pop
jae
cmps
mov
inc
(bad)
das
push
add
mov
xchg
xchg
sub
mov
test
cmp
fstp
outs
loop
adc
adc
push
(bad)
push
sub
xchg
(bad)
je
push
push
jbe
pop
(bad)
pop
cmp
xchg
mov
cdq
hlt
lods
enter
aaa
scas
push
cmp
out
ja
imul
loop
mov
jp
outs
push
out
ss
ret
mov
or
pop
arpl
and
out
mov
mov
imul
ret
jno
xchg
and
pop
sub
add
out
inc
scas
jg
mov
sti
ror
stos
jmp
add
ds
div
pop
(bad)
ds
adc
mov
inc
shl
out
sub
retf
stc
mov
rcr
test
stc
out
mov
add
dec
and
push
and
pop
ficomp
scas
arpl
add
pop
sbb
sbb
sub
push
in
stos
push
xchg
push
adc
cwde
fdivrp
mov
test
jl
sub
iret
loope
mov
inc
mov
push
js
dec
sub
fstp
outs
jbe
std
jle
cmp
mov
cwde
xor
inc
mov
lods
cmp
fdiv
sbb
push
xchg
and
daa
(bad)
ret
adc
mov
jg
stc
add
sub
aaa
adc
pushf
inc
(bad)
out
pop
clc
shr
xor
xlat
call
lock
std
pop
test
sahf
jo
out
inc
cli
shl
call
call
adc
mov
(bad)
push
aaa
cdq
not
pop
das
xchg
mov
jl
adc
(bad)
pop
mov
jbe
xchg
push
js
xor
adc
inc
pop
mov
mov
arpl
test
adc
mov
fnsave
into
jmp
test
pop
xor
lock
jmp
stos
or
mov
es
mov
xchg
cmp
xor
call
hlt
loop
mov
cmp
push
sub
(bad)
aam
inc
adc
and
mov
mov
xor
bound
ds
mov
leave
mov
cmp
pushf
loop
dec
jle
movs
push
ror
int
fs
inc
ret
cdq
jmp
dec
and
jmp
loopne
daa
xor
mov
pop
xor
into
mov
add
dec
outs
mov
call
jo
(bad)
cli
cmp
clc
pop
ret
cmp
xchg
pushf
sbb
(bad)
repnz
cmps
std
pop
mul
jo
jno
sbb
add
fbld
pop
or
test
pusha
pop
int3
cmp
cmc
jge
mov
sar
jb
cmp
rcr
pop
adc
aad
movs
(bad)
cmp
leave
or
inc
in
push
or
or
shr
xchg
call
xor
and
add
icebp
loope
xor
fist
rcl
pop
and
xor
inc
xor
pop
in
lds
xchg
(bad)
pop
jae
sub
mov
pop
stos
mov
sub
ret
sub
bound
mov
push
and
cmps
pop
mov
mov
cs
(bad)
test
or
pushw
jg
std
adc
stc
imul
mov
aad
mov
in
pusha
ja
jl
xor
mul
adc
push
or
popf
sahf
ret
out
mov
inc
mov
(bad)
xchg
jno
mov
sub
xor
daa
shr
cmc
in
and
ret
mov
stos
aad
sbb
rcl
in
outs
push
repnz
mov
lock
out
in
xor
xlat
xchg
das
retf
jecxz
jbe
lods
push
fsubr
xor
pop
pop
sub
inc
rcr
retf
je
xchg
add
jnp
bound
mov
push
fs
pop
aam
out
sbb
dec
sub
adc
add
push
call
mov
inc
imul
push
fucomp
dec
and
jns
(bad)
jnp
jmp
scas
sbb
mov
cmps
push
mov
xor
sub
xchg
std
adc
cdq
ret
add
xchg
pop
mov
mov
and
mov
inc
call
cmp
rol
push
xchg
sub
xchg
dec
ins
cwde
fild
(bad)
popf
shl
ins
xchg
xchg
repz
mov
push
pop
or
cli
jle
je
mov
scas
push
mov
cli
xor
and
push
out
retf
jno
repnz
or
mov
xor
inc
mov
lods
xchg
jecxz
nop
jnp
inc
pop
cdq
je
cmp
or
sub
pusha
jle
cli
repnz
sbb
aam
pop
test
out
pop
pop
mov
dec
or
or
fs
in
shl
test
pop
inc
pop
add
addr16
inc
jp
push
jno
aam
sub
dec
js
sub
cld
into
div
gs
pop
out
lods
and
cmc
xor
push
lods
xlat
add
and
lds
pop
mov
lods
xchg
xchg
dec
xor
inc
sbb
(bad)
(bad)
(bad)
mov
or
jae
adc
push
shl
mov
call
inc
jae
sub
push
icebp
xchg
scas
push
pop
pop
std
and
rcr
call
push
pusha
pusha
rol
stos
jb
cld
repnz
in
sbb
pusha
hlt
sub
dec
dec
sahf
aas
inc
js
pusha
add
or
call
jb
les
jl
arpl
loop
cld
fisubr
out
xchg
mov
mov
cwde
inc
dec
pop
dec
jge
or
push
xchg
mov
push
scas
sbb
scas
push
loopne
or
and
leave
add
stos
movs
shl
stos
mov
sub
jno
push
pop
stos
pop
enter
jne
sbb
pop
test
xor
and
retf
add
add
push
push
jnp
call
push
cwde
mov
push
inc
cli
sub
pop
adc
lods
push
data16
daa
pop
mov
dec
sahf
bound
gs
js
imul
push
mov
or
mov
push
out
push
sbb
xor
dec
or
jmp
aaa
sbb
test
mov
test
xchg
(bad)
mov
pop
fcom
adc
and
dec
adc
dec
push
push
out
movs
mov
push
dec
arpl
lock
es
rol
mov
mov
arpl
rcl
hlt
aad
mov
pop
mov
inc
std
cmps
aaa
ins
mov
add
dec
ret
inc
mov
xor
in
(bad)
fldlg2
mov
jmp
adc
popf
jbe
adc
(bad)
adc
fist
mov
add
test
stos
nop
loop
jmp
outs
pusha
clc
pop
xor
(bad)
int3
mov
lods
mov
cmps
js
jae
stos
mov
cmovs
call
popa
je
sahf
push
cmps
scas
pop
ficomp
mov
push
iret
mov
dec
or
jle
fwait
mov
or
cmp
jp
js
inc
and
mov
add
or
cli
repnz
and
inc
lods
and
and
push
fsubr
adc
sub
mov
rol
xor
jne
mov
(bad)
sar
daa
js
xchg
push
adc
push
mov
(bad)
push
lods
dec
scas
adc
into
and
jmp
adc
int3
cmc
pop
icebp
stos
in
mov
out
mov
sar
jl
dec
push
push
mov
ja
cld
push
scas
sub
pop
add
mov
scas
push
jae
dec
mov
cmp
jo
outs
into
push
jnp
popa
dec
pop
dec
mov
fwait
adc
pop
mov
sbb
cmp
lods
lds
push
(bad)
cmp
xor
in
inc
repz
stos
add
xchg
mov
sub
mov
xor
cmp
sbb
sub
repnz
ins
loop
fistp
iret
mov
lock
xor
dec
dec
cli
sahf
adc
jnp
scas
ret
fsubrp
fild
fs
out
xchg
mov
loop
mov
cwde
retf
jno
push
in
adc
gs
pusha
sbb
inc
push
add
push
mov
jmp
daa
dec
in
jp
push
xor
je
inc
std
mov
dec
mov
int
add
add
xor
xchg
jno
lods
das
cmc
cli
inc
cmp
and
xchg
lds
mov
sub
sbb
popf
(bad)
push
or
mov
loope
cmps
jle
push
sub
push
fld
xchg
(bad)
loopne
jge
test
stos
(bad)
lods
popf
mov
adc
inc
push
fwait
or
nop
rcl
je
test
and
push
sub
cmp
dec
xor
clc
add
xchg
push
lock
jno
cwde
jnp
fisub
enter
fnsave
(bad)
in
push
neg
sub
mov
xchg
lods
jmp
or
push
ret
mov
push
or
shl
pop
pusha
hlt
shl
cdq
or
add
adc
dec
inc
popa
cmp
mov
sub
inc
pop
addr16
mov
xor
mov
ins
inc
loopne
mov
pop
dec
push
call
xchg
xchg
push
test
jo
lock
neg
pop
call
in
cmc
xlat
retf
xchg
sbb
add
jae
jl
xor
mov
in
aad
cmps
fadd
push
rcl
or
mov
clc
ins
pop
inc
push
ins
adc
ins
push
mov
and
mov
mov
je
push
ror
xor
mov
sar
push
mov
aas
push
dec
fdiv
fwait
shl
mov
cmps
fcom
ins
add
adc
test
pop
xchg
and
xor
cmp
ret
in
inc
leave
mov
dec
sub
push
mov
dec
sbb
and
sar
test
shl
fs
ja
cwde
jns
data16
xchg
lods
cs
push
push
mov
icebp
and
retf
and
sahf
mov
outs
xor
cmp
mov
(bad)
std
int3
mov
jl
fistp
adc
test
pop
adc
dec
clc
out
shl
sbb
xchg
scas
retf
addr16
sbb
xor
inc
aad
push
jno
mov
or
cmps
daa
mov
or
mov
mov
add
stos
adc
pop
cmp
xor
jb
inc
xor
jmp
jo
jp
test
inc
test
inc
div
and
lods
push
dec
jmp
cmp
js
cmc
push
ins
test
repz
inc
rol
out
popa
mov
ja
cdq
(bad)
pop
dec
pop
push
mov
or
adc
jb
out
and
mov
imul
retw
and
arpl
sub
or
jge
imul
add
mov
xchg
push
in
stc
mov
out
or
sub
cld
mov
cmp
jmp
retf
mov
jb
leave
adc
mov
inc
sar
std
imul
in
in
movs
ja
cmp
and
inc
inc
ins
sbb
jo
mov
inc
add
dec
xor
cmp
clc
sbb
repz
es
jmp
pusha
shr
stos
rol
mov
push
test
add
out
or
(bad)
pop
(bad)
mov
ds
cmp
or
dec
jg
jae
clc
in
(bad)
repz
mov
or
cld
push
jp
dec
dec
xchg
dec
jne
ins
add
push
jp
pop
cmp
mov
adc
xor
xor
cmp
add
mov
jmp
add
xor
push
pop
imul
lock
mov
push
imul
adc
popa
retf
nop
sbb
xor
xchg
fdiv
dec
es
mov
pop
test
cdq
fdiv
dec
mov
mov
jp
loope
sbb
loop
sub
pop
cmp
repz
lock
in
fldlg2
mov
jno
sub
push
fild
iret
xor
adc
sar
rol
pop
mov
push
mov
cld
cmps
test
inc
add
adc
sub
mov
mov
add
add
out
push
scas
mov
clc
lea
cmp
icebp
push
adc
fidivr
cmc
test
rcr
inc
dec
pop
jle
and
enter
dec
out
test
pop
movs
jb
nop
fstp
push
leave
mov
sub
xchg
daa
ds
and
xor
rol
mov
aam
cmp
or
inc
xchg
or
xor
out
out
mov
nop
mov
shl
and
daa
cmps
sbb
ins
push
inc
xlat
inc
(bad)
movs
test
xchg
cmp
jbe
mov
repz
jmp
jne
sar
inc
sub
add
sahf
jmp
(bad)
mov
mov
xchg
mov
or
(bad)
in
mov
mov
test
imul
pop
mov
jle
mov
cmp
or
(bad)
loope
mov
mov
pusha
stos
out
dec
loop
mov
sub
dec
ins
xchg
hlt
fdivr
out
xchg
stos
sahf
cmp
mov
add
or
xor
jge
xchg
inc
pop
cld
push
cmp
(bad)
xor
push
mov
pop
mov
adc
mov
sbb
push
adc
std
xchg
add
rcl
cmps
dec
and
ficom
mov
(bad)
test
sbb
sar
mov
cmc
jl
sub
out
jge
xchg
sbb
mov
aas
cwde
sub
mov
xor
rcl
scas
cmps
ins
es
cmp
cmps
add
xchg
outs
mov
push
repnz
mov
mov
into
mov
sub
pop
mov
das
test
(bad)
jns
pop
mov
mov
(bad)
inc
sub
sbb
sbb
push
imul
jmp
repz
fs
es
call
xor
sub
aad
fild
mov
sub
xor
pop
ds
mov
mov
ins
mov
std
push
mov
push
ret
mov
sub
add
jne
test
mov
dec
cmp
mov
cwde
pop
js
adc
(bad)
ds
(bad)
in
adc
(bad)
dec
push
xchg
add
(bad)
sbb
push
test
hlt
mov
adc
bound
or
mov
mov
xchg
ret
icebp
inc
jo
pop
pushf
jmp
fwait
push
dec
mov
adc
adc
mov
adc
ss
cmp
repnz
ret
int
cmp
add
shl
mov
jbe
jo
cmp
leave
loop
and
xchg
xchg
or
fadd
in
jbe
lods
cmp
sub
mov
sbb
sbb
enter
xchg
xor
fmulp
adc
jp
mov
cmp
mov
pop
add
inc
mov
add
adc
push
inc
sbb
movs
icebp
sbb
(bad)
ss
jb
push
inc
out
add
fistp
dec
push
daa
jns
ror
inc
push
loop
jecxz
add
(bad)
test
jmp
in
or
(bad)
fcmovnu
aas
adc
iret
lods
sbb
adc
aam
xchg
adc
js
push
cmps
data16
hlt
jle
js
xchg
cld
cld
mov
jne
pop
cwde
jmp
loop
jl
aas
popf
fld
xchg
dec
nop
mov
jecxz
mov
xchg
(bad)
out
xchg
repnz
lea
xchg
gs
jle
test
jmp
movs
or
lds
ror
mov
in
xchg
pop
fnstcw
xchg
jne
xchg
and
sti
jb
movs
cmp
add
jmp
xor
popa
imul
cmp
and
ds
cwde
sbb
mov
mov
popa
push
es
pop
xlat
sbb
mov
shl
inc
arpl
idiv
pop
ficom
inc
int3
or
xor
jmp
pop
mov
jb
mov
mov
xchg
icebp
cmp
dec
mov
and
push
shr
outs
push
lods
jmp
stos
mov
sar
push
pop
mov
in
and
jae
fcmovb
les
adc
lea
in
mov
sub
fcmovne
in
inc
mov
pop
(bad)
call
test
mov
xor
xor
retf
add
add
or
lods
cmp
mov
inc
sbb
push
shl
mov
fldenv
shr
push
push
or
leave
out
movs
add
les
add
xor
ror
outs
mov
daa
dec
leave
ins
jmp
mov
nop
xchg
mov
jecxz
add
inc
xchg
mov
ffree
add
daa
cwde
nop
and
xor
adc
inc
mov
inc
pop
and
inc
xor
add
pop
shr
cmp
stos
mov
ror
pop
pop
cmp
por
cmp
sbb
xchg
jle
mov
jle
repz
push
outs
mov
ins
add
mov
scas
add
fadd
cmps
nop
jmp
jmp
cmp
dec
push
mov
jg
cmps
imul
test
inc
xor
imul
loop
cdq
rcl
adc
or
repz
(bad)
fcomp
and
fwait
icebp
sbb
and
adc
bound
pop
push
inc
pop
xor
sub
and
out
pop
and
(bad)
int
imul
enter
fcom
add
jge
pop
je
cmp
in
(bad)
outs
enter
mov
sub
call
push
xchg
adc
push
and
xchg
scas
xchg
adc
xor
mov
aas
inc
mov
jmp
pusha
pushf
call
and
jnp
add
mov
add
cmovs
neg
lock
imul
icebp
not
lods
lock
cmp
out
lahf
ret
call
or
mov
add
jo
add
xchg
addr16
jg
ret
cmp
repz
or
ficom
frstor
lock
in
dec
ins
in
mov
aad
pop
add
ds
inc
sub
pop
std
nop
stos
ins
cmp
daa
or
cmp
jae
cmp
lods
(bad)
cmc
shl
out
(bad)
loope
adc
stc
add
inc
mov
mov
pop
pop
icebp
rol
mov
test
call
out
movs
out
shr
add
xchg
int3
xlat
inc
xor
je
jno
stos
mov
int
gs
addr16
mov
push
fwait
sbb
cmc
mov
sti
add
inc
mov
pop
or
pop
stos
clc
jae
xor
adc
div
jno
sbb
sbb
fimul
popf
mov
jmp
(bad)
xor
pop
dec
outs
fld
out
xchg
aas
push
out
adc
sbb
jo
mov
xor
in
das
jbe
pusha
push
jne
ret
jae
and
or
or
xor
addr16
dec
mov
test
sub
push
mov
add
(bad)
je
mov
xlat
mov
mov
lahf
fistp
dec
push
push
xor
pextrw
add
sub
dec
mov
mov
pop
mov
jmp
and
mov
and
paddw
iret
idiv
and
push
data16
xor
jp
mov
shl
add
dec
cmp
jp
les
test
test
inc
imul
retf
add
in
retf
jb
pusha
dec
mov
jne
ficom
repnz
pushf
cmc
popa
inc
xor
in
popf
xor
int3
call
iret
lea
inc
rol
or
sbb
les
test
addr16
cmp
mov
pop
fisttp
jo
mov
cli
cwde
jne
std
pop
inc
xor
ret
and
lds
mov
jne
jo
enter
popa
cmp
xor
or
ret
iret
call
test
push
inc
out
hlt
adc
cmp
call
pushf
cli
push
mov
in
shl
adc
and
adc
push
xchg
mov
or
out
int3
jns
repnz
popf
cmp
pop
and
into
data16
cmp
cs
scas
sub
pushf
xchg
add
jne
mov
mov
xor
neg
add
cld
jp
dec
call
xor
bound
xor
leave
push
inc
add
fnstenv
ss
test
push
jg
mov
pushf
jl
aad
xor
pop
repnz
xor
ins
icebp
rcl
mov
mov
bnd
pop
sbb
add
mov
push
out
or
ret
mov
jmp
push
ret
pop
ret
shl
adc
mov
clc
adc
out
xlat
push
add
push
sbb
inc
(bad)
sub
inc
outs
pop
sahf
icebp
int3
or
jbe
lea
mov
pop
out
jge
cmp
inc
std
jg
mov
shl
xor
das
jnp
mov
inc
mov
outs
pop
lea
cmp
out
mov
push
push
push
and
xlat
std
cld
adc
mov
adc
mov
push
mov
inc
cli
shr
jge
pop
in
xchg
repnz
stos
popa
mov
lock
pop
xchg
mov
dec
retf
mov
xor
outs
pop
sbb
into
cmp
sbb
and
(bad)
mov
sbb
aad
pop
cmp
out
mov
rcr
xchg
stos
sub
mov
mov
cmp
jb
clc
pop
leave
cmps
movs
mov
test
dec
cmp
mov
(bad)
jmp
mov
shr
jno
enter
retf
mov
push
push
leave
retf
shr
xchg
sub
add
xor
loop
jno
(bad)
xlat
sbb
pop
xchg
in
pop
add
lods
mov
int3
iret
stos
ficomp
sbb
hlt
inc
mov
arpl
icebp
xor
inc
sbb
jno
jbe
dec
jns
test
adc
inc
icebp
in
jmp
sbb
lods
retf
aad
cmps
imul
cmp
adc
or
push
lea
sahf
xchg
shr
adc
icebp
jb
mov
inc
ds
xor
adc
push
sbb
fld
aam
lds
mov
icebp
loopne
jo
das
add
sub
into
cmp
(bad)
rcl
test
enter
jo
jmp
push
ret
(bad)
and
or
shl
cli
jge
or
pusha
xlat
sub
xor
imul
mov
sbb
sub
test
mov
sub
or
mov
iret
cmps
sub
idiv
dec
sahf
cld
mov
fistp
imul
(bad)
jo
in
es
xchg
out
adc
xchg
cmc
push
sahf
pop
push
lea
pop
fdivr
jae
push
dec
or
out
fcomp
xor
js
ret
lea
xchg
pop
or
rcl
lds
push
cmp
not
test
ja
(bad)
cmp
popa
cmps
and
mov
cmp
cli
rcl
add
push
(bad)
jmp
repz
inc
retf
sbb
pop
inc
in
sub
fs
jno
test
push
mov
and
adc
pop
scas
enter
nop
sbb
jo
and
fst
jbe
sub
xchg
idiv
inc
cmp
adc
sub
mov
and
idiv
ret
sub
push
or
cmp
pop
inc
adc
arpl
fild
adc
es
rcl
dec
int3
ss
xchg
fisubr
inc
lahf
or
sub
clgi
je
xchg
and
mov
iret
cmps
cmp
ins
iret
inc
iret
jb
ins
ret
into
lock
xchg
mov
in
mov
sahf
push
scas
outs
cmp
jg
push
adc
cmps
repnz
or
cmps
shr
test
fwait
and
pop
push
outs
inc
sbb
and
je
dec
out
xchg
js
lods
std
dec
es
es
adc
mov
std
call
mov
lock
std
aaa
aas
int
arpl
mov
jnp
(bad)
stos
loop
dec
leave
fcmovu
push
ret
not
stos
sbb
xchg
outs
das
add
sbb
mov
sbb
daa
mov
xchg
popa
pop
push
retf
into
ret
push
int
in
jg
adc
arpl
scas
sub
xor
je
xchg
(bad)
sti
mov
adc
jl
js
mov
cmp
fistp
ret
sbb
fs
and
xchg
stos
dec
lock
xchg
lods
cld
sub
inc
and
lahf
fnsave
inc
inc
pop
pushf
jno
mov
addr16
aad
sbb
repz
ret
lahf
sub
pop
adc
mov
imul
add
es
jns
pushf
sub
jo
xchg
sub
push
(bad)
mov
out
clc
addr16
cmp
mov
jnp
cld
push
mov
jle
adc
sub
xchg
xchg
cli
outs
and
ja
fmulp
mov
lods
cs
repnz
nop
gs
cmp
lods
inc
sbb
sub
repnz
pop
dec
sbb
fadd
outs
cli
jo
inc
ins
add
or
scas
xchg
adc
xchg
mov
push
pop
mov
cmp
mov
icebp
dec
sub
pop
inc
test
stos
call
lods
div
jb
aad
xchg
ficomp
mov
fwait
cmp
mov
add
psubusb
jp
call
test
idiv
mov
mov
jbe
test
or
dec
push
shl
push
cmp
daa
and
js
pop
pop
mov
movs
jmp
push
popf
aam
pop
adc
stos
push
adc
push
inc
out
jb
stc
leave
or
aam
add
ins
dec
ins
pop
xor
sbb
pop
pushf
sub
into
sub
and
popf
outs
imul
out
fld
pop
ins
and
and
stos
or
sahf
xchg
pop
pop
sar
cmps
js
bound
(bad)
xchg
iret
out
dec
out
mov
fadd
call
jmp
inc
test
sbb
xchg
push
cld
cmp
mov
mov
xor
outs
cwde
add
push
and
push
(bad)
sbb
dec
xchg
jae
dec
shl
or
sub
jp
jecxz
mov
and
shl
xchg
xor
shl
test
leave
xlat
inc
scas
cli
jb
add
leave
aaa
cld
jmp
mov
test
pop
xchg
rcr
mov
adc
add
push
sub
out
data16
push
adc
inc
fcmove
dec
xchg
pop
and
xor
push
jecxz
dec
aam
stos
mov
push
ds
cmps
dec
inc
sbb
inc
iret
inc
popa
(bad)
icebp
cmp
aas
dec
xchg
jnp
cs
mov
jmp
mov
aad
xor
out
ins
mov
fstp
or
pop
dec
dec
(bad)
nop
fist
and
adc
xor
mov
sub
div
imul
jbe
xchg
fldenv
pop
push
push
add
loop
xlat
push
in
gs
rcr
xchg
mov
xchg
pop
pop
cld
mov
jecxz
pop
dec
mov
lods
push
popa
adc
mov
loop
sbb
les
jns
mov
inc
repz
aas
push
addr16
cmps
loopne
mov
lods
push
sbb
or
test
daa
mov
and
xor
icebp
cmp
es
jmp
les
xlat
(bad)
cmps
mov
dec
xor
jns
daa
inc
pop
or
cmp
mov
add
xchg
in
push
or
mov
mov
inc
in
dec
cmps
sub
xor
(bad)
xchg
leave
mov
xchg
fsubr
out
mov
and
(bad)
jle
xor
mov
cmp
mov
xlat
xor
inc
fsub
es
jmp
or
and
fs
gs
div
xor
retf
imul
(bad)
popf
mov
push
neg
cmpxchg
and
aaa
test
dec
repnz
cmp
lahf
scas
aam
jo
mov
ss
xchg
pusha
cdq
jle
scas
nop
sti
mov
test
or
dec
bound
rcl
dec
push
sbb
mov
jne
sub
ret
mov
jge
push
pop
cmps
fld
leave
pop
pop
mov
mov
mov
pop
dec
or
mov
adc
scas
adc
jne
xchg
outs
push
outs
jns
add
or
mov
mov
xor
repnz
ins
inc
lock
cmp
xor
xor
aad
fmul
clc
inc
jne
and
sub
cmp
adc
xor
test
movs
sbb
mov
sbb
mov
test
in
jmp
fnstenv
pop
pop
push
aas
(bad)
sbb
adc
sbb
es
jns
call
int3
pop
hlt
or
imul
ror
(bad)
out
xlat
inc
pop
mov
inc
sub
daa
jl
pop
or
or
inc
bound
(bad)
cvtpi2ps
and
lods
and
mov
scas
inc
enter
div
sub
add
jmp
dec
mov
push
jl
popa
inc
out
data16
in
enter
pop
aas
inc
fcmovnu
or
lock
mov
sbb
cld
add
mov
(bad)
loopne
out
shr
cmps
shr
test
movs
loopne
test
sub
pop
gs
sbb
mov
pop
in
inc
(bad)
fwait
pop
or
mov
and
cs
cdq
movs
aas
call
pop
in
idiv
(bad)
cmps
add
jle
rep
xchg
mov
leave
xor
nop
mov
lahf
push
cdq
jne
jge
loope
and
fidivr
mov
sub
adc
add
and
cmp
iret
ins
jmp
xor
jnp
sti
out
xor
xor
add
mov
push
nop
xor
arpl
push
xor
test
arpl
xor
mov
stos
das
retf
jb
or
mov
aaa
ds
out
test
cmp
mov
ja
sbb
gs
jge
jl
popa
int
aam
out
push
inc
cmps
adc
mov
cmps
cmp
out
push
sub
cmc
mov
jg
add
xor
push
mov
dec
cmp
xchg
aam
in
test
fld
adc
xchg
jecxz
or
xlat
fsubr
jg
sub
cli
xor
xchg
(bad)
xchg
out
fdivr
not
pusha
adc
cli
dec
movs
dec
fsub
mov
push
or
shl
and
fbstp
xchg
stc
sbb
ja
and
fistp
movs
enter
inc
cmp
jnp
mov
sub
dec
clc
xchg
or
scas
mov
dec
and
repz
loopne
and
out
jmp
int
int3
aaa
cmp
iret
jb
inc
fsub
adc
fistp
or
clc
xchg
xchg
cwde
mov
jle
data16
push
pop
outs
push
popa
std
in
xchg
mov
adc
rol
mov
cmp
repnz
mov
mov
mov
fimul
adc
out
adc
mov
aad
push
mov
dec
xor
fnstcw
sbb
sti
and
ins
dec
mov
ss
push
inc
outs
(bad)
idiv
mov
loope
add
ficomp
aam
or
push
mov
mov
dec
cmp
imul
cs
cmp
(bad)
movs
pop
stos
push
nop
and
add
fiadd
sbb
pop
jp
xor
std
ja
and
and
ins
push
sub
pop
add
lea
ja
dec
fbstp
loopne
imul
xchg
movhps
inc
jo
mov
mov
sbb
mov
mov
clc
mov
(bad)
call
sbb
ror
(bad)
(bad)
mov
push
cmp
mov
pop
xor
pop
jl
test
loopne
mov
cli
dec
mov
retf
div
inc
das
rcl
adc
jnp
push
jge
xor
addr16
inc
loop
je
mov
aas
in
inc
jno
pop
push
dec
mov
mov
lahf
imul
ror
(bad)
outs
cmp
mov
mov
dec
movs
cmp
out
scas
neg
mov
adc
xor
outs
push
inc
(bad)
sub
jns
data16
imul
fdivr
xchg
add
sub
ds
aam
cmc
cwde
std
xor
popw
sbb
xchg
xchg
in
fsub
retf
mov
sub
sbb
je
jne
(bad)
rcr
mov
mov
xlat
dec
or
cmp
push
or
mov
push
add
inc
(bad)
fldcw
mov
scas
cmc
mov
ins
arpl
cmp
aas
push
adc
in
pop
pusha
jge
(bad)
pop
lods
mov
ret
lea
std
jae
aam
xor
aam
dec
inc
dec
push
scas
push
cmps
mov
fld
push
rcr
cmp
shl
fldpi
xor
es
mov
ds
jge
jae
jno
mov
imul
push
cmp
sub
jge
mov
pop
(bad)
icebp
bound
pop
add
dec
aad
mov
jl
fwait
mov
adc
fsub
movs
pusha
in
push
mov
into
iret
(bad)
arpl
mov
mov
aad
mov
scas
fbld
(bad)
data16
gs
movs
jmp
dec
data16
cmp
call
cmp
adc
cmp
xlat
sbb
push
adc
jb
jns
lock
dec
jbe
mov
jb
add
lea
in
push
std
mov
cmp
outs
sub
xlat
mov
cmp
dec
in
ja
pop
fisubr
(bad)
fcmovb
bound
dec
scas
test
(bad)
shl
cmp
jbe
xchg
int3
cld
jo
dec
(bad)
adc
movs
jno
mov
cmp
outs
sub
sbb
push
aaa
test
sbb
add
bound
(bad)
cmp
mov
hlt
xchg
push
repz
or
loop
ds
inc
pop
adc
fst
(bad)
push
fiadd
mov
mul
cmp
fist
xchg
xor
loop
(bad)
out
outs
(bad)
retf
movs
aaa
aas
test
stos
imul
jnp
jge
pop
sub
jp
gs
arpl
nop
ds
ret
inc
jecxz
aam
inc
mov
call
cli
inc
inc
xchg
or
inc
or
and
call
test
dec
dec
out
pop
iretw
inc
les
(bad)
mov
sub
call
mov
jl
in
jb
ds
out
pop
dec
pop
mov
cmp
movs
lods
xlat
movs
jl
add
movs
sbb
cmc
inc
ss
mov
sbb
xchg
inc
test
xlat
mov
test
jmp
sahf
hlt
lea
mov
out
xchg
pusha
int
mov
xchg
jb
(bad)
adc
pop
adc
cli
and
fcomp
dec
(bad)
dec
xor
mov
call
fcom
js
xor
fidiv
test
and
nop
jecxz
cmp
mov
xor
xlat
jle
repz
xchg
sub
adc
fwait
rcr
inc
mov
ret
jnp
cld
out
mov
in
movs
push
or
jb
mov
je
lods
jg
cmps
lods
cwde
cmp
ja
lahf
jns
mov
and
dec
sbb
jl
and
dec
or
adc
mov
sbb
push
repnz
add
shl
xor
enter
dec
jge
ins
inc
pop
xchg
and
lods
cs
or
repnz
push
jbe
cmp
pop
out
cmps
xchg
ins
ror
sahf
push
xchg
icebp
jp
xchg
push
xchg
and
add
(bad)
pop
jae
inc
repnz
or
cdq
push
mov
pop
shr
(bad)
cmp
loopne
push
pop
mov
mov
jnp
sbb
xchg
ja
mov
call
test
push
mov
jmp
dec
shr
gs
in
outs
mov
cld
add
fmul
sub
mov
cmc
mov
sbb
fwait
xchg
retfw
test
scas
ds
fidiv
or
outs
mov
cs
jl
adc
(bad)
jne
fs
sbb
(bad)
scas
aas
jns
mov
movs
pop
add
xchg
xor
enter
pop
cmp
ins
in
xor
push
call
lea
mov
popa
inc
ja
xchg
(bad)
jecxz
fistp
je
or
arpl
jmp
ret
ins
jns
inc
cli
push
dec
lods
arpl
or
mov
and
movs
mov
jbe
sub
rol
cmp
sbb
fwait
push
imul
frstor
pop
push
xor
popa
adc
inc
push
mov
in
call
shl
popf
sbb
ror
mov
int
jl
scas
lahf
adc
enter
cmp
add
cmp
ins
das
repz
mov
fwait
mov
mov
mov
cmc
push
inc
pop
mov
pusha
pcmpeqd
(bad)
sbb
test
cmc
cmc
push
rcr
cmp
dec
sub
shl
leave
les
or
mov
pop
push
jns
inc
dec
cmp
in
das
cmps
das
div
xor
mov
jno
sti
sbb
inc
and
inc
icebp
pop
nop
rcl
inc
xor
sti
aad
inc
repnz
ins
jl
xor
ror
or
inc
add
pop
rcr
std
or
test
mov
outs
fs
sti
fstp
(bad)
imul
adc
ret
cdq
xor
out
retf
in
mov
movs
jb
data16
xchg
mov
ror
xchg
aaa
arpl
xor
push
xlat
jmp
popa
fs
mov
add
rcr
imul
cmp
inc
aas
into
inc
add
ins
clc
xor
pusha
xchg
bound
sbb
push
and
mov
mov
(bad)
mov
mov
mov
mov
lea
ins
sub
idiv
sub
jo
xchg
xchg
or
push
xor
dec
outs
imul
loope
inc
mov
or
clc
adc
(bad)
outs
add
sbb
imul
fstp
or
xchg
mov
sbb
push
(bad)
sbb
cdq
test
pushf
test
or
adc
leave
mov
jmp
ret
cmp
pop
(bad)
jg
loopne
pop
cmp
dec
lahf
pop
(bad)
jnp
or
cmp
pushf
adc
addr16
in
sbb
adc
ss
ss
xchg
loope
sbb
adc
lods
push
push
jmp
retf
or
or
mov
je
mov
movs
pop
mov
call
into
out
(bad)
xchg
fisttp
loop
push
fist
or
adc
cmp
mov
mov
mov
addr16
inc
pop
push
retf
mov
pop
scas
adc
pushf
(bad)
arpl
push
sahf
pop
sbb
(bad)
addr16
cld
mov
xchg
mov
add
aas
jnp
cmp
not
xchg
push
scas
xchg
movs
mov
shl
and
jg
dec
repnz
cs
mov
rol
les
stos
pop
je
stos
or
aam
cmp
inc
sub
std
pop
push
inc
inc
sub
or
dec
push
fsubrp
imul
sub
pop
sub
add
push
sub
cmp
mov
xor
int
fdiv
fwait
cwde
push
clc
push
jo
lods
hlt
in
fistp
aad
outs
fiadd
into
pop
ffreep
hlt
retf
cwde
dec
push
std
xchg
xor
das
push
ret
fisubr
cmp
fisttp
xchg
pop
sub
daa
in
out
gs
xchg
popa
outs
scas
mov
xchg
sbb
dec
push
std
jb
sub
xchg
sub
shr
inc
loope
jp
xchg
sub
mov
jl
(bad)
(bad)
adc
mov
mov
es
dec
pop
loopne
push
in
nop
arpl
popf
ds
stos
lahf
xchg
pop
mov
cwde
push
or
mov
call
add
jb
add
sbb
aas
and
test
ret
aad
popa
mov
inc
stos
scas
sub
xchg
jmp
fcomp
mov
out
fcomi
fisubr
cmp
xchg
dec
inc
call
mov
subps
and
call
mov
push
psraw
xor
and
in
into
jne
or
push
jl
sub
adc
std
mov
mov
pop
cld
push
push
mov
push
stos
jecxz
mov
jge
fiadd
xor
bound
pop
xlat
test
jbe
cs
push
sub
mov
fimul
bound
jne
leave
test
mov
xchg
icebp
es
lock
cli
bound
push
cmps
push
mov
lahf
ret
movhps
test
mov
xchg
test
dec
inc
push
ds
gs
push
(bad)
in
leave
test
xor
adc
mov
add
push
mov
inc
mov
sahf
out
jbe
movs
pop
in
push
dec
(bad)
adc
rcl
mov
mov
push
inc
inc
pusha
add
xchg
stc
aad
retf
outs
les
es
movs
cmp
repz
cli
out
jp
clc
ret
retf
mov
je
pop
inc
and
in
jae
dec
dec
das
imul
sbb
sbb
dec
jo
push
push
ret
fcmovu
inc
jg
mov
adc
dec
fdiv
outs
stc
test
sbb
shr
push
or
lds
inc
mov
daa
push
and
sub
xchg
stos
mov
inc
repnz
inc
aad
cmc
ss
adc
adc
jg
mov
mov
lock
adc
and
add
dec
mul
adc
push
cli
int3
xchg
jg
sub
add
loop
mov
push
push
cmc
dec
or
mov
std
clc
rol
fdiv
sti
arpl
add
repz
push
jno
ss
pop
rol
sub
push
gs
adc
cmc
cld
repnz
cmp
aad
mov
iret
pop
mov
sbb
out
push
sbb
jne
inc
retf
mov
lahf
aam
mov
repz
(bad)
fs
scas
mul
test
jmp
movs
cmp
aaa
xchg
popa
fadd
sub
pop
adc
mov
jmp
inc
cld
ja
fidivr
cwde
imul
push
dec
mov
daa
jle
fistp
pop
add
mov
in
xlat
jbe
mov
jbe
mov
ins
inc
mov
adc
retf
sub
mov
sbb
xchg
stos
jle
cmp
mov
sub
fs
inc
call
adc
xchg
sbb
repnz
adc
movs
cmp
sbb
pop
xchg
pop
into
ja
adc
inc
sub
call
ss
push
mov
aaa
add
ror
lds
enter
mov
pop
call
and
cs
test
test
cmps
push
hlt
std
adc
fsub
cdq
sahf
lods
sbb
jne
sbb
das
dec
int3
mov
inc
jns
cmp
or
(bad)
jmp
pop
cmc
mov
fcomp
adc
dec
aas
mov
xor
in
in
or
sbb
loop
cmps
fimul
sub
and
cmp
add
std
dec
ret
(bad)
sbb
fcmovb
(bad)
daa
shl
xor
cdq
lods
dec
cli
jmp
xor
ja
int3
adc
aad
xchg
fadd
lods
cmp
out
cs
lds
xor
sbb
sbb
push
mov
lods
scas
jmp
push
cmp
xor
push
sbb
ss
mov
inc
xor
neg
or
jle
mov
mov
add
pop
jnp
das
cmps
pop
int
outs
adc
inc
sahf
lsl
mov
mov
sub
push
fiadd
cld
xchg
adc
sub
fstp
mov
mov
das
fisubr
add
adc
or
es
addr16
test
not
ja
inc
push
stc
pop
or
and
xchg
or
(bad)
ss
mov
in
aas
cmc
sub
mov
in
ins
jg
aad
je
or
in
out
fwait
inc
xchg
dec
int3
or
popf
sbb
mul
mov
nop
outs
fbld
sbb
ret
or
dec
cmp
push
jecxz
ins
sub
inc
sbb
arpl
test
cld
out
iret
mov
movs
sub
ficom
jecxz
outs
xchg
loope
nop
sbb
mov
imul
sub
ja
lds
xchg
mov
push
loopne
int
mov
adc
adc
ds
push
dec
arpl
sbb
xor
es
popa
mov
pusha
cmps
mov
jp
sub
inc
mov
neg
push
dec
shl
(bad)
push
pop
add
pop
sub
jmp
jecxz
add
xchg
mov
out
and
add
iret
xchg
push
inc
pop
mov
shr
std
cld
das
enter
enter
hlt
pushf
cmp
sbb
(bad)
sbb
jbe
or
lods
mov
ja
iret
xor
push
call
push
inc
add
jmp
jnp
sbb
cmp
dec
(bad)
repnz
sar
sbb
fild
mov
inc
pushf
fcom
and
xchg
jne
rcr
ret
ret
jns
movs
iret
cli
int3
xchg
(bad)
xchg
repnz
dec
push
sub
mov
in
mov
push
scas
sti
retf
outs
xor
sbb
dec
(bad)
rcr
inc
pop
aas
rcl
std
(bad)
cmp
int3
xchg
pop
cmp
dec
push
pop
mov
fisub
or
lahf
or
push
cmps
adc
dec
inc
adc
push
test
ror
cmp
repnz
mov
out
outs
mov
ins
mov
mov
out
push
in
xchg
xor
sub
push
data16
stc
mov
(bad)
xor
push
jnp
or
popf
mov
clc
jae
adc
mov
sbb
fld
repnz
sbb
push
loop
inc
xchg
loope
addr16
test
push
cmp
cli
gs
push
mov
xlat
(bad)
mov
in
les
and
dec
mov
jmp
data16
add
or
fld
cwde
iret
nop
push
mov
cmp
adc
fucom
movs
sub
(bad)
fwait
mov
mov
fsubrp
sbb
xchg
int
aam
jno
ret
repz
xchg
add
sbb
(bad)
call
or
cmps
mov
dec
jl
outs
add
cmps
inc
cmp
pop
scas
daa
cmp
lea
retf
add
lea
or
neg
jo
push
xchg
movs
xchg
mov
mov
add
div
(bad)
addr16
cmp
inc
aaa
ja
dec
jmp
add
push
imul
ror
sbb
leave
call
sbb
dec
sbb
mov
rcr
(bad)
dec
pop
rol
mov
imul
addr16
mov
and
(bad)
jno
fcomp
es
outs
into
jle
xchg
or
out
sbb
mov
mov
imul
mov
(bad)
mov
inc
mov
js
xchg
jne
mov
scas
mov
cmp
xchg
ret
sub
pop
xchg
mov
inc
in
sahf
sub
repz
jne
std
js
mov
dec
or
sub
fstp
nop
or
or
inc
popf
dec
mov
fcom
movs
shl
mov
cmc
and
adc
jo
add
rcr
cmps
cmc
lds
movs
mov
jne
xchg
lods
les
outs
push
push
leave
jle
call
scas
mov
cmp
es
ret
pop
retf
sti
(bad)
pop
cwde
nop
gs
addr16
mov
mov
jno
daa
mul
je
les
push
inc
les
into
jb
aas
adc
test
mov
fdivr
loopne
dec
and
sbb
or
sahf
push
cdq
dec
test
leave
dec
addr16
in
mov
fld
sbb
push
int3
mov
mov
and
jle
jp
aam
push
or
mov
out
ret
or
sbb
mov
clc
outs
pusha
push
arpl
sbb
inc
mov
shl
fsubrp
int3
mov
hlt
cld
mov
mov
ins
and
xchg
sub
sar
dec
sar
push
xor
jae
mov
mov
pop
sbb
cld
mov
lahf
inc
pop
push
ins
imul
xor
in
jbe
dec
pushf
cli
push
mov
xlat
outs
shl
clc
cmp
shr
xchg
jno
idiv
scas
xchg
xchg
sub
pop
pusha
loop
out
push
jbe
xlat
loopne
je
movs
jnp
loop
pop
xchg
add
pop
aad
bound
mov
mov
xchg
sub
pop
das
out
dec
xor
test
push
jb
mov
gs
cmp
cld
addr16
nop
imul
stos
in
sbb
sub
movs
inc
lea
dec
in
jno
dec
fwait
and
dec
rol
cs
jbe
rcr
xchg
ins
jp
sahf
call
mov
stc
add
add
jne
push
pop
inc
mov
ds
cld
es
popf
loopne
jno
mov
xchg
mov
out
stc
cwde
test
inc
dec
sbb
inc
inc
push
shl
popa
push
imul
cmps
cmps
jb
cmp
xor
sub
xor
cmp
adc
xlat
jg
jb
inc
in
cmps
mov
push
dec
xor
xor
mov
mov
push
popf
mov
jnp
outs
pop
jle
or
stos
add
jmp
sub
inc
popf
cmp
mov
imul
push
inc
lock
dec
xchg
outs
cmp
sbb
retf
inc
pop
jns
data16
sbb
inc
push
loop
dec
inc
cmp
mov
or
cli
int
or
sub
sub
ret
test
jmp
and
test
fdivr
shr
mov
push
enter
mov
mov
mov
test
mov
push
aas
adc
in
je
inc
lds
rcr
mov
pop
mov
add
jmp
mov
rol
jecxz
pop
cmps
jno
pop
dec
ror
mov
fwait
sub
out
scas
pop
push
push
cmps
adc
adc
jo
pop
and
cwde
aaa
loope
mov
push
sbb
pop
fisubr
jmp
push
pop
loope
cmps
std
inc
sahf
push
sub
xchg
(bad)
adc
ret
(bad)
mov
jmp
xor
cmps
push
sahf
sahf
(bad)
sub
mul
(bad)
(bad)
das
int3
xor
in
push
fxch
daa
dec
jae
cmps
(bad)
fild
xor
xchg
clc
xchg
xor
push
lea
add
aaa
sub
xor
ret
adc
mov
mov
add
pushf
in
mov
mov
shl
aas
out
ja
inc
movs
leave
fidiv
loopne
mov
inc
sub
lods
ins
mov
lea
cmp
and
lods
and
rcl
and
jmp
fist
add
ret
mov
dec
fldenv
outs
pop
fistp
inc
cmps
rcr
dec
dec
mov
shr
scas
inc
pop
inc
xchg
daa
jp
dec
test
mov
xchg
fist
stos
repnz
xchg
jae
stos
imul
adc
pop
xchg
aad
rep
inc
sbb
call
mov
call
lods
lock
(bad)
push
inc
(bad)
mov
adc
sub
lods
nop
ins
fnsave
pop
leave
xchg
retf
imul
popf
mov
gs
in
jae
stos
call
rol
pop
stos
movs
add
aad
xor
aaa
mov
dec
ret
mov
in
sub
int
call
mov
push
inc
ror
adc
imul
fld
push
gs
push
pop
es
sbb
outs
or
dec
lods
sub
(bad)
das
loop
(bad)
and
cmp
loope
(bad)
ins
imul
sbb
xor
mov
dec
push
mov
push
mov
clc
mov
dec
out
stos
push
int3
in
daa
leave
fist
add
xor
mov
or
push
dec
jp
push
add
icebp
movs
xor
movs
push
stos
aad
out
jns
sahf
ja
push
cdq
cmp
sbb
push
test
clc
inc
retfw
sbb
push
cmp
ins
jbe
mov
les
inc
adc
mov
das
add
push
pop
dec
xor
xor
cld
(bad)
or
dec
in
out
icebp
cmp
xor
cmc
in
jle
ror
push
inc
cmps
sbb
ds
inc
int
pop
retf
aaa
inc
jl
pop
rcr
inc
jg
call
stc
ror
aas
movs
xor
dec
jno
xor
test
mov
jecxz
push
dec
mov
dec
imul
icebp
fst
sbb
jbe
imul
je
retf
int3
add
loop
fsubr
fnstcw
push
lds
pushf
dec
ins
pop
xchg
mov
push
inc
(bad)
fcom
aad
mov
mov
scas
jmp
retf
test
in
fstp
std
fdiv
mov
retf
inc
mov
mov
sub
pop
cld
sub
xchg
dec
lods
dec
mov
clc
push
test
mov
fdecstp
mov
pushf
mov
jmp
dec
add
sbb
out
or
sti
cli
inc
sbb
fstp
inc
lahf
sti
mov
ds
push
(bad)
pushf
aaa
mov
std
(bad)
and
mov
push
clc
add
pop
aad
out
(bad)
dec
add
or
sbb
xlat
or
cmps
test
pminsw
add
outs
test
int3
jl
out
mov
xchg
push
ins
xchg
sub
mov
mul
(bad)
out
ds
js
dec
lahf
adc
sub
xlat
and
and
cmp
push
fiadd
cmp
mov
js
and
rol
stos
gs
pop
fbld
mov
xor
xchg
xchg
pop
dec
adc
neg
jo
and
in
mov
iret
pop
jle
sub
gs
das
inc
retf
ss
imul
je
mov
aad
or
and
aad
les
jns
icebp
adc
aam
jp
shl
in
stos
jbe
scas
out
inc
(bad)
push
or
inc
mov
(bad)
cld
dec
pusha
push
mov
adc
rol
ds
movs
and
adc
pop
add
inc
mov
inc
push
add
out
scas
push
jmp
pop
xlat
popa
pusha
xor
cmps
fs
(bad)
retf
inc
shl
jb
inc
cmp
ins
adc
clc
popf
mov
mov
(bad)
jae
add
cmp
retf
sahf
push
cmc
les
movs
lds
inc
xchg
repnz
push
push
and
out
xchg
cdq
shr
rcl
push
lods
pusha
lds
mov
mov
mov
jbe
mov
mov
or
adc
or
mov
cmp
add
cdq
mov
cmp
fild
cli
lods
aad
sbb
(bad)
pop
xlat
and
jmp
pop
pop
pop
cld
pop
fstp
sub
icebp
movs
mov
inc
mov
pop
mov
mov
clc
xor
sbb
mov
push
xchg
not
loopne
adc
dec
xor
loop
shl
(bad)
out
shr
aam
ret
xor
push
mov
xor
xchg
pop
pop
pop
loop
loope
lds
int3
push
cld
data16
popa
xor
sbb
lods
mov
dec
jmp
pop
push
pop
mov
mov
mov
shl
jmp
das
and
retf
or
fcomi
mov
jge
sub
hlt
push
sbb
sbb
idiv
mov
cdq
or
sbb
leave
rcl
mov
(bad)
xor
lea
pop
adc
cmc
in
dec
vphadduwd
arpl
or
adc
pop
sbb
or
out
int
test
xchg
lea
push
jmp
jle
test
out
rcl
dec
scas
jle
sar
or
leave
cli
imul
pop
pop
in
jne
sti
lods
loope
inc
shl
mov
test
xor
mov
int
sub
push
stc
pop
shr
push
mov
dec
jle
call
cli
or
adc
xchg
adc
jnp
and
aam
jns
xor
mov
rol
ficom
call
(bad)
rcr
pop
xor
add
mov
adc
ja
ret
loop
and
lahf
add
inc
ret
xchg
or
mov
mov
dec
out
xor
(bad)
stc
jle
retf
sbb
das
push
gs
or
cwde
cli
push
mov
mov
inc
and
push
mov
fcmovne
lahf
xlat
dec
mov
ja
lods
(bad)
sbb
add
mov
idiv
stc
bound
jb
test
ins
and
in
aad
add
mov
out
(bad)
or
push
cmps
mov
cmps
inc
es
mov
enter
adc
int3
fldpi
mov
push
ficom
mov
add
hlt
sti
push
xchg
add
cdq
push
call
fstp
retf
push
movs
out
mov
mov
add
lahf
(bad)
fcmovne
fs
jmp
scas
pop
or
sti
push
or
mov
adc
jp
cmc
xor
inc
push
sbb
pop
pusha
jmp
jge
cwde
push
ret
push
leave
jp
mov
leave
loop
(bad)
add
hlt
rcr
dec
iret
call
fst
xor
out
cmc
ret
adc
mov
out
ja
test
mov
dec
and
sbb
push
pop
jl
in
sbb
pop
sbb
dec
mov
jnp
or
jmp
cmp
mov
ret
popa
(bad)
push
push
cld
push
aad
sub
rcr
jp
and
(bad)
mov
pop
inc
lods
adc
inc
adc
xlat
or
mov
sbb
jmp
ins
popa
out
push
fsubr
pop
jo
pop
and
xchg
(bad)
pop
dec
mov
pushf
add
shr
es
dec
push
xor
in
jmp
sahf
sub
sti
push
popf
and
mov
inc
shr
mov
jg
and
popa
push
push
or
enter
stc
cmc
pop
cmps
call
mul
push
lahf
hlt
adc
call
sar
mov
inc
jl
lock
ins
cwde
pop
loope
repz
push
js
push
ret
or
push
leave
pushf
mov
jmp
inc
pop
xor
adc
dec
mov
cs
pop
mov
neg
and
pushf
mov
sbb
lahf
dec
in
outs
cmps
cli
add
pop
inc
inc
adc
adc
and
inc
xlat
data16
mov
mov
aaa
push
ins
arpl
mov
and
imul
pop
ja
inc
lds
das
test
jnp
sub
dec
(bad)
cmps
imul
jne
xlat
leave
push
and
push
nop
sti
(bad)
scas
lock
inc
cmps
sub
imul
cmp
dec
adc
ret
add
pop
mov
cmp
xor
in
sub
and
dec
jne
in
in
sbb
inc
sub
adc
or
fwait
je
icebp
movs
inc
in
cmps
jp
pushf
ret
(bad)
jmp
mov
retf
push
dec
nop
xor
pop
xchg
add
fadd
pop
xor
hlt
out
mov
inc
retf
inc
in
jnp
inc
pop
cmp
cmp
mov
out
stos
loope
neg
push
ror
call
paddsb
xor
fsub
in
and
daa
bound
fstp
mov
jge
repnz
cmps
adc
pop
shl
rcl
cmc
out
or
daa
jnp
jae
jns
push
jl
das
pop
imul
mov
setl
push
dec
stos
stc
pop
leave
cli
mov
rcr
in
scas
popf
aam
push
push
pushf
std
test
inc
xor
bound
and
int
out
hlt
xchg
xchg
add
repz
out
cmp
into
pushf
sti
mov
xor
(bad)
and
xor
jecxz
mov
push
out
fist
movs
std
ja
mov
adc
sahf
inc
aaa
inc
and
mov
push
push
lahf
sbb
outs
bound
add
dec
jo
adc
in
lods
push
push
and
cmp
or
ins
in
add
jp
fist
cmps
fstp
in
sub
push
imul
sub
mov
pop
pushf
dec
inc
mov
out
retf
rol
(bad)
fmul
or
ror
fst
or
pop
mov
cmp
out
sub
pop
push
rcl
scas
sub
xchg
mov
iret
mov
push
int
neg
ficomp
mov
or
call
dec
inc
xchg
mov
xor
mov
cmp
shl
push
add
push
movs
in
adc
les
out
push
shl
and
xorps
xor
xchg
pop
jg
cmps
mov
adc
and
pop
fst
popf
xor
mov
dec
adc
int3
loop
fnstenv
imul
ss
dec
(bad)
xor
inc
(bad)
sbb
arpl
in
popf
movs
jmp
repnz
inc
lds
add
cdq
mov
out
aad
pop
fwait
out
add
(bad)
and
ret
add
addr16
fnstcw
xchg
xchg
jnp
jmp
xchg
int3
fwait
or
mov
ja
jg
neg
aad
cdq
xor
call
loop
loop
jmp
ja
add
jnp
shl
mov
lods
scas
sub
xor
fs
xchg
sub
jnp
xor
call
jns
test
cmp
aam
mov
or
cmps
mov
add
sbb
outs
shl
int3
retf
stos
xor
jo
iret
pop
leave
or
adc
dec
mov
lods
push
or
and
push
mov
int3
sbb
xor
data16
mov
or
push
sub
ror
loope
mov
or
int3
jmp
adc
sbb
mov
pop
repnz
adc
lods
lea
ins
xchg
aas
enter
mov
mov
fldcw
or
and
(bad)
addr16
rcr
(bad)
repnz
iret
sbb
aaa
stc
out
rcr
les
fstp
pop
les
fistp
mov
fs
shr
cmp
sar
nop
mov
mul
stos
sahf
gs
sub
sbb
stos
push
lods
aam
test
movs
sbb
mov
inc
sub
fdivp
pop
icebp
stos
inc
packssdw
in
xchg
pop
ins
mov
sbb
sub
push
jecxz
je
adc
mov
aas
aaa
mov
lock
bswap
movs
pop
scas
push
nop
sahf
cmps
mov
mov
dec
je
and
inc
out
jl
xor
movs
pop
adc
mov
mov
and
push
je
mov
dec
icebp
arpl
pop
cmps
out
rep
mov
mov
jle
das
inc
or
ins
gs
mov
nop
repnz
xor
gs
in
test
mov
pop
jecxz
and
lea
daa
or
pop
jns
add
rcr
dec
and
sbb
fwait
sar
int3
dec
jo
es
xor
icebp
inc
idiv
jp
stos
jno
cmp
jo
fldcw
scas
jae
ret
xchg
dec
pop
push
push
xchg
jb
push
out
(bad)
(bad)
mov
xchg
pop
xchg
in
push
and
pop
fs
or
repnz
jp
add
adc
adc
push
push
push
mov
call
ss
push
out
inc
inc
movs
in
mov
pop
adc
cmp
sahf
jle
xor
xchg
sbb
mov
lahf
ja
pop
ja
scas
test
fdiv
inc
int
fisubr
add
cld
inc
sbb
cld
xchg
sub
or
inc
mov
pop
jns
xlat
int3
ins
ror
mul
add
jmp
sbb
ret
or
cmps
and
push
inc
dec
dec
test
inc
frstor
or
mov
lea
aad
mov
popf
cwde
pop
in
pushf
cld
cwde
pop
cld
dec
xlat
bnd
mov
shl
test
and
sbb
shl
pushf
xchg
inc
xchg
call
add
push
xor
mov
arpl
sbb
and
out
xchg
dec
mov
mov
xor
push
ins
movs
jb
inc
cmp
(bad)
loopne
addr16
push
data16
mov
push
xchg
mov
pop
mov
inc
push
lahf
fild
mov
test
ret
sbb
pop
jb
mov
pop
(bad)
xor
icebp
fcmovne
xor
or
(bad)
xchg
push
test
add
jns
or
push
mov
xor
addr16
test
mov
mov
jg
das
mov
add
retf
xor
mov
inc
mov
mov
and
loope
mov
out
pop
pop
or
je
daa
xchg
mov
mov
xor
push
popa
jle
jbe
stos
and
lahf
cwde
das
addr16
jo
rol
push
fdiv
loop
daa
cmc
jno
(bad)
shl
jbe
dec
pop
cld
dec
retf
enter
js
cdq
mov
jns
das
lods
lods
je
popa
sub
sbb
ss
rcl
movs
xor
xchg
and
imul
jnp
dec
jle
xchg
scas
fcom
sub
add
adc
mov
mov
ins
and
inc
js
cmp
std
(bad)
jmp
add
outs
test
sub
cs
(bad)
lods
push
out
and
cmps
jmp
stc
jne
outs
pop
inc
mov
or
jmp
inc
add
xchg
movs
xchg
loope
lods
dec
(bad)
jecxz
pop
int3
fdiv
mov
sar
xchg
xor
push
cdq
sbb
addr16
mov
stos
cld
retf
ja
iret
pusha
test
pusha
scas
inc
or
adc
cmp
bound
pop
aam
shl
cmp
xchg
sub
mov
mov
cdq
jne
call
out
mov
add
gs
jp
rcl
lods
out
in
nop
repz
mov
jne
adc
and
inc
sub
sbb
mov
add
mov
cmps
inc
loope
mov
fucom
mov
cmps
mov
imul
fwait
xor
sub
inc
jg
mov
ins
or
lock
xor
jnp
fsubrp
ins
int
push
xor
mov
jl
out
sbb
add
lods
aaa
hlt
push
jg
call
cmp
mov
into
(bad)
sbb
pusha
je
dec
cmc
lds
in
pop
aaa
xchg
add
or
retf
cmps
aaa
es
fiadd
adc
mov
sub
jmp
in
repnz
pop
inc
xchg
push
and
push
cmps
adc
adc
outs
ins
loope
push
inc
and
cmp
inc
sub
push
cmovg
jns
call
pop
repz
push
shl
ins
lock
and
push
pop
mov
cmp
sub
fcom
lahf
mov
dec
stos
in
(bad)
cdq
std
push
or
ins
shr
inc
push
adc
outs
add
sahf
repz
ins
dec
jg
mov
xor
out
push
xor
adc
loope
scas
pop
xor
and
movs
es
in
pop
mov
pop
adc
adc
cmc
push
inc
inc
pop
or
jb
je
pop
pop
iret
test
or
jmp
jecxz
mov
adc
mov
mov
sbb
sti
stos
push
mov
(bad)
fcomp
fs
inc
js
aad
push
or
pushf
push
mov
add
in
lods
add
adc
lahf
dec
pop
push
xor
(bad)
ja
inc
shl
fistp
stos
out
pop
in
push
in
add
out
(bad)
shl
bound
sub
bound
mov
dec
xchg
test
cmps
inc
push
pop
arpl
lds
or
sbb
and
xchg
xor
pusha
imul
pusha
sbb
sub
pop
adc
gs
movs
push
stos
mov
push
mov
sbb
dec
fild
add
popf
xor
(bad)
je
out
mov
sar
mov
jg
push
lods
movs
xchg
jo
fs
int
xchg
mov
add
pop
jae
sbb
add
mov
imul
add
repz
fmul
in
and
(bad)
mov
push
fldenv
outs
add
xchg
dec
and
icebp
jmp
les
loope
cmp
push
(bad)
pop
add
shl
sbb
mov
sbb
bnd
jbe
repnz
xchg
adc
call
pop
fnsave
call
test
push
lock
fidiv
cmp
sbb
ins
and
and
enter
sbb
and
popf
mov
push
cmps
jae
gs
outs
scas
push
dec
inc
(bad)
in
sub
push
mov
movs
jecxz
lahf
scas
popf
outs
ret
cmp
out
xchg
xor
or
test
adc
(bad)
sub
retf
mov
iret
mov
mov
fdivr
add
pop
mov
inc
push
ins
ins
sub
out
ror
jb
lock
inc
repz
push
dec
mov
je
cli
sub
movs
shl
xchg
cld
dec
shl
adc
pop
pop
cld
dec
sub
cmps
push
loop
push
int
test
pop
aas
mov
xor
xlat
mov
or
push
fist
pop
cmc
mov
test
mov
stos
add
cs
gs
jp
pop
sbb
fild
shl
pushf
cmc
or
scas
adc
push
stos
add
mov
out
jnp
jne
das
test
(bad)
les
aas
push
inc
push
adc
push
fwait
and
pop
xchg
push
adc
dec
push
mov
xor
and
into
sub
inc
stos
dec
cmp
inc
mov
sub
mov
stc
icebp
xchg
js
addr16
jmp
mov
jmp
inc
stos
jmp
mov
xchg
movs
or
mov
test
aas
pop
aad
(bad)
(bad)
mov
lock
gs
mov
add
push
sub
idiv
ficomp
loope
inc
(bad)
jmp
fsub
dec
mov
enter
lahf
pop
retf
sub
jns
jecxz
or
sub
lods
push
add
(bad)
push
inc
enter
repnz
add
sub
mov
sub
cmp
cld
jae
or
cs
movs
rol
adc
mov
shl
ja
outs
pop
repz
mov
or
xlat
scas
and
pop
xor
repnz
pop
repnz
rol
not
lods
jmp
repnz
icebp
xchg
fisubr
inc
enter
xchg
jge
out
dec
inc
xchg
mov
xor
pop
or
push
scas
movs
lock
cmps
mov
cmp
retf
xchg
mov
or
push
xor
xchg
adc
sbb
dec
in
xor
out
xlat
push
cmps
xchg
jne
mov
xchg
and
jecxz
sub
leave
ins
add
fmul
push
scas
lods
mov
and
sub
das
ret
sbb
mov
push
add
push
fidivr
popf
xor
pop
lea
std
pop
mov
popf
mov
(bad)
jmp
add
out
pop
mov
call
inc
dec
push
aam
outs
add
sbb
dec
call
push
jae
pop
dec
jge
jl
ins
das
pop
aam
(bad)
jns
cmp
ret
mov
adc
movs
nop
xor
add
push
inc
int3
mov
je
push
not
lea
dec
jmp
add
xchg
pop
xchg
imul
aas
dec
sbb
out
push
aad
jno
xor
sub
test
mov
outs
and
stc
pop
loope
mov
sbb
adc
fimul
pop
arpl
add
jge
repz
cmp
clc
ja
adc
mov
repnz
mov
mov
mov
pop
jne
pusha
loope
in
rcr
xchg
imul
mov
adc
ror
pusha
jae
loopne
mov
pop
stos
in
xor
jbe
mov
mov
movs
or
push
jecxz
add
mov
(bad)
mov
cdq
pop
sbb
scas
fsubr
inc
mov
aas
dec
arpl
gs
gs
lods
adc
add
call
push
pop
clc
cdq
sbb
mov
mov
and
inc
sub
xor
push
add
mov
mov
and
and
and
inc
sbb
fs
and
iret
repnz
loope
ins
test
lea
lock
mov
sub
repnz
push
and
jb
pop
int3
push
xchg
fbstp
pop
lahf
(bad)
mov
(bad)
iret
push
mov
push
popf
adc
mov
in
pop
popa
mov
sub
cmp
pop
xlat
push
sbb
(bad)
or
bound
mov
jns
daa
and
outs
cli
add
pop
xor
xchg
inc
xchg
rcr
stc
add
inc
out
and
adc
test
inc
(bad)
dec
xor
movs
push
imul
leave
in
sub
pop
jne
xor
js
pop
and
out
iret
mov
test
mov
(bad)
out
dec
lods
cmps
mov
lock
inc
adc
in
rcl
hlt
sbb
xchg
sub
mov
inc
inc
mov
fsubrp
je
loope
jns
aaa
bound
inc
shl
cs
fistp
fcmovnb
lds
lock
cmps
scas
mov
daa
adc
xor
fidiv
or
push
xor
pop
rcl
mov
retf
into
dec
cdq
adc
pop
stc
sub
fwait
(bad)
dec
dec
sub
add
pop
leave
or
ret
add
cli
in
mov
sbb
cmp
fcomp
ins
pop
mov
lds
clc
pop
inc
lods
data16
sub
mov
cmovg
and
xchg
loopne
jae
jbe
push
test
xor
ror
mov
fist
(bad)
aam
in
jae
dec
pushf
dec
mov
sub
fdiv
arpl
cmp
and
ss
rol
and
add
xor
imul
ins
mov
dec
push
xchg
fwait
cmp
pop
sbb
test
dec
sub
mov
mov
and
repnz
aas
pusha
adc
nop
cdq
push
int
scas
xchg
leave
mov
mov
stos
mov
push
cwde
leave
ret
push
mov
sbb
push
or
inc
adc
outs
loope
xor
movs
in
pop
js
retf
inc
mov
outs
inc
jns
int
dec
mov
je
loopne
aad
es
idiv
push
jb
jmp
lea
(bad)
movs
xchg
fs
mov
add
lds
inc
es
sti
jo
mov
test
ins
leave
pop
or
fsub
push
sbb
push
lods
mov
inc
push
(bad)
cmp
push
and
push
mov
push
ins
sub
xor
test
adc
addr16
test
mov
dec
cmp
into
and
sbb
xchg
inc
fst
(bad)
(bad)
lods
sbb
xchg
push
fwait
test
pop
and
sub
movs
js
cld
and
mov
mov
inc
les
fwait
mov
movs
xchg
scas
xchg
mov
or
mov
ror
add
shl
jno
shl
retf
movs
fwait
inc
retf
repnz
in
fisubr
sbb
push
add
repz
call
cdq
jo
sysenter
ins
lea
push
mov
mov
jp
pop
mov
sub
inc
jecxz
dec
jg
dec
lea
add
scas
or
sbb
xor
(bad)
outs
inc
inc
push
nop
or
rcl
inc
leave
in
xor
aad
mov
jp
cwde
mov
leave
sti
enter
lock
lock
jb
imul
bound
iret
mov
gs
pop
lods
addr16
jns
nop
lea
push
pop
pop
leave
outs
or
dec
xor
call
mov
xor
fadd
mov
je
push
jge
ja
jb
dec
in
push
dec
scas
sahf
sbb
mov
inc
inc
lds
shl
outs
xor
call
adc
fdiv
hlt
pop
mov
sahf
mov
movs
cwde
ds
add
adc
mov
nop
sbb
mov
jae
int
arpl
out
icebp
xchg
in
adc
ds
ins
dec
test
cmc
cdq
xchg
and
mov
retf
sbb
or
movzx
mov
lahf
jge
mov
mov
inc
jmp
mov
stc
push
push
or
clc
in
inc
test
pop
in
fbld
data16
iret
jmp
dec
mov
les
jmp
xchg
lahf
es
mov
dec
das
movs
mov
adc
and
or
add
scas
inc
(bad)
ss
repnz
cmp
jmp
jae
mov
sar
dec
loope
pop
mov
xchg
sub
mov
xor
xor
xor
mov
add
ror
repz
mov
xor
(bad)
mov
dec
sub
icebp
fdiv
(bad)
pop
adc
jg
shl
inc
sub
clc
mov
or
cdq
lea
hlt
jb
mov
xchg
inc
fild
hlt
mov
rcl
packsswb
ins
dec
loop
and
mov
int
jno
sbb
pop
cmp
dec
push
mov
jmp
inc
cwde
sti
mov
mov
push
pop
repz
icebp
(bad)
jmp
dec
retf
shl
mov
mov
nop
dec
fcomp
cmp
je
mov
aam
xchg
and
popf
movs
cli
jb
rcl
xchg
loopne
ins
pop
aam
jns
push
xor
sbb
pusha
xchg
adc
fst
jnp
jg
sahf
inc
sbb
pop
stos
xchg
inc
sub
adc
xchg
mov
aad
scas
pushf
scas
sbb
xor
mov
sbb
sar
or
into
movs
shr
jl
(bad)
(bad)
xchg
dec
in
ret
hlt
retf
loop
sbb
push
sbb
add
jne
sti
call
test
xor
and
add
fdiv
out
sub
mov
scas
add
jl
ja
mov
nop
mov
pop
mov
sbb
movs
jg
push
mov
out
(bad)
div
enter
cmp
mov
xchg
mov
fsub
ja
imul
aas
pop
lods
inc
xor
push
sbb
mov
xor
pop
loope
retf
jbe
test
inc
and
imul
cmp
xchg
loopne
fisttp
rcr
inc
retf
out
call
and
add
push
test
adc
push
or
aas
cmp
push
and
mov
pushf
ret
outs
pop
stos
dec
jne
fsub
jae
adc
pop
xor
das
mov
xlat
and
cs
xor
mov
cmp
sub
push
popf
sbb
js
jns
cmp
test
or
test
loope
ss
add
push
xor
pusha
mov
hlt
adc
add
fucomi
sahf
cmp
pop
(bad)
aam
arpl
ss
inc
pop
(bad)
push
xor
fcom
dec
das
iret
pushf
push
shr
pushf
outs
and
xor
fs
mov
cmp
test
scas
xlat
mov
mov
in
jns
cld
jmp
mov
aam
pop
sub
adc
adc
retf
loopne
xchg
sbb
adc
adc
push
test
ins
push
push
popf
push
aad
or
mov
test
mov
push
gs
and
sub
push
mov
in
(bad)
cmp
dec
add
mov
dec
adc
in
(bad)
push
sahf
popa
and
(bad)
cmova
leave
pop
lahf
rcr
daa
mov
lods
or
sbb
lods
scas
sbb
in
add
sbb
lahf
(bad)
int3
ss
push
xor
pop
pop
cmovo
mov
inc
xchg
(bad)
mov
pop
call
stos
sbb
jmp
loope
adc
dec
lahf
mov
xchg
jb
push
faddp
mov
cdq
aad
jle
xor
mov
and
dec
sbb
dec
dec
(bad)
cmp
adc
push
or
add
cmp
cmp
or
or
ins
push
iret
cmp
sub
xor
or
cli
inc
jno
aad
cmp
jo
sub
cmp
or
mov
add
and
push
push
push
xchg
and
(bad)
arpl
inc
(bad)
pusha
add
das
vmaxps
aam
jmp
jge
shr
adc
adc
imul
jo
jge
cmp
mov
cmp
repnz
(bad)
outs
pusha
mov
and
inc
adc
(bad)
jno
test
arpl
lods
loop
add
(bad)
fisubr
jo
xchg
loop
cmp
jge
dec
dec
movs
pop
adc
pop
pushf
pop
retf
cdq
xor
(bad)
fadd
jbe
mov
daa
inc
int
mov
ror
adc
pop
mov
sbb
hlt
mov
cmp
cmp
mov
in
sub
cmp
out
and
pop
jb
mov
push
rcl
xchg
int
push
mul
mov
shl
gs
cli
pop
mov
test
add
or
outs
jge
leave
outs
mov
int
jne
inc
xchg
jle
popf
movs
in
add
adc
hlt
dec
mov
retf
push
int3
fsub
pop
ror
stos
cli
add
(bad)
mov
mov
add
jmp
(bad)
in
dec
cmp
xor
call
ss
jne
add
repnz
hlt
ins
adc
fsubr
outs
dec
pop
jecxz
push
lahf
out
sbb
(bad)
fsub
fcom
leave
ret
movs
(bad)
std
(bad)
inc
and
sahf
dec
mov
frstpm(287
into
lods
fwait
lds
or
xchg
movs
xchg
sub
loop
mov
fiadd
sub
jmp
cmp
sahf
repnz
movs
mov
imul
dec
mov
je
sti
sub
mov
xchg
mov
loope
adc
jmp
jno
push
sub
pop
int
xor
jnp
mov
ss
ror
jnp
xor
jbe
inc
mov
bound
or
or
frstor
jb
mov
jge
and
sahf
std
je
cmp
and
sub
mov
xlat
jbe
xor
jae
mov
mov
jle
jl
test
ret
loop
inc
dec
jmp
cmp
outs
mov
mov
and
adc
and
mov
rcl
add
retf
movs
(bad)
mov
imul
jne
mov
retf
xchg
xchg
xor
stos
ror
ficom
mov
pop
int
call
push
das
lea
(bad)
mov
lods
sub
popa
sub
inc
add
xor
adc
push
cs
xor
cs
sub
out
rcr
or
in
add
retf
out
inc
push
sbb
or
sti
ds
pop
loop
into
push
loop
push
js
mov
rcl
pop
dec
cmc
add
jmp
(bad)
pop
xor
dec
outs
aaa
push
test
in
jnp
push
nop
fiadd
sub
jp
mov
adc
dec
addr16
out
mov
jg
cmp
outs
pop
leave
(bad)
js
jb
push
popf
div
repnz
test
into
ror
and
mov
lea
dec
stos
mov
jno
into
add
cmps
adc
mov
enter
pop
loop
(bad)
std
sub
cmp
mov
sbb
pop
sub
fs
fist
sbb
cmps
js
cmp
repz
test
imul
lahf
ss
in
push
shl
std
dec
mov
and
inc
lods
repz
xor
dec
dec
xchg
(bad)
ds
inc
mov
daa
cmp
mov
mov
mov
dec
xor
cli
add
es
mov
push
shr
jne
aas
lea
outs
mov
mov
inc
iret
std
loopne
test
pusha
push
or
sub
push
jno
cs
loop
and
xchg
shl
xchg
int3
inc
in
jmp
scas
rcr
fucomi
js
xor
inc
lods
enter
repnz
mov
cmp
mov
xor
imul
(bad)
xor
add
clc
push
pusha
xchg
xchg
call
daa
mov
outs
test
push
sub
jmp
gs
cmps
jmp
mul
or
ins
or
mov
inc
sub
inc
stc
dec
jne
jecxz
push
je
test
mov
(bad)
adc
push
retf
mov
sahf
inc
loope
hlt
add
xchg
adc
cld
iret
(bad)
or
and
cmp
imul
sbb
and
icebp
mov
das
or
cld
int3
ret
xchg
cmp
shl
mov
or
push
adc
dec
push
mov
xchg
les
cmc
icebp
das
push
xchg
mov
test
inc
xchg
movs
adc
sbb
lods
stos
xchg
sti
lahf
pop
cmps
into
fdiv
scas
fstp
pop
adc
popf
add
xor
sti
xchg
xchg
test
je
push
ret
push
addr16
and
jl
leave
int3
fs
fcomi
xor
(bad)
push
adc
push
adc
mov
pop
rep
cmp
adc
paddb
jns
addr16
mov
cmp
sbb
or
xchg
xor
mov
fisub
rol
adc
aam
std
fnstcw
push
mov
push
mov
(bad)
(bad)
xchg
sbb
jnp
push
jl
pop
mov
fld
dec
sub
pop
retf
sbb
mov
rcr
cmp
mov
enter
jno
mov
mov
and
dec
scas
jle
out
test
in
js
repz
jg
std
es
pop
ficomp
mov
imul
into
inc
ins
push
jnp
add
int3
fld
enter
inc
jns
fistp
in
jae
mov
rcl
pop
mov
(bad)
mov
push
ins
movs
mov
(bad)
mov
rcr
push
jp
test
sbb
push
stos
mov
cdq
mov
pop
(bad)
outs
lahf
test
ins
push
scas
call
pop
dec
aad
rcl
mov
dec
mov
mov
imul
repz
lods
fldenv
ffree
inc
mov
adc
mov
fst
sub
mov
stc
cmp
jmp
das
push
fwait
xchg
ins
and
xor
imul
cmp
mov
mov
inc
or
jmp
or
and
jno
dec
loope
stos
cmp
popf
sbb
ja
sub
sbb
cmp
mov
mov
int
int3
xlat
cmp
lods
add
mov
xchg
in
inc
inc
push
out
jo
pop
test
test
sbb
test
add
cs
pop
das
sbb
ret
jp
and
push
ror
sub
and
pop
push
xlat
mov
pusha
adc
push
(bad)
fxch
out
repnz
cwde
jg
imul
inc
out
daa
fcom
idiv
loopne
arpl
aaa
xchg
mov
imul
mov
mov
dec
sbb
nop
xchg
xor
mov
pop
sub
iret
push
push
and
push
push
mov
push
in
arpl
in
push
mov
and
cli
mov
fstp
scas
jecxz
outs
mov
std
pop
mov
pop
data16
arpl
xchg
jbe
dec
retf
pop
test
fisttp
pop
inc
pushf
mov
mov
jmp
stos
mov
jmp
repz
push
js
(bad)
mov
inc
adc
and
xchg
clc
mov
inc
jle
aam
popf
lds
test
addr16
inc
enter
push
push
fwait
mov
add
xlat
xchg
cs
jecxz
sub
mov
lods
mov
pushf
mov
sub
sub
mov
dec
imul
sub
inc
pop
jp
add
or
(bad)
imul
(bad)
mov
es
adc
in
stos
mov
sti
dec
xor
pusha
fldenv
addr16
out
xor
dec
sahf
pop
popa
aam
mov
jbe
sub
cmc
lea
xchg
xor
fcomp
fist
popf
dec
pop
and
sub
xchg
adc
mov
ret
sub
ret
rol
in
in
jle
lods
sbb
out
dec
les
mov
jge
movs
push
and
outs
shl
push
repnz
jnp
sbb
int
loope
nop
or
pop
loopne
mov
int3
sub
repnz
sar
pop
and
jmp
shr
mov
mov
cmp
add
push
jno
push
dec
cmp
cdq
int3
(bad)
cmp
out
lds
scas
dec
mov
mov
js
rol
dec
jnp
dec
sub
sub
je
cli
clc
into
(bad)
ss
jmp
retf
xor
popf
mov
mov
in
(bad)
jle
adc
jmp
sub
dec
fldenv
xchg
sbb
pusha
jmp
sbb
xor
ror
dec
pop
sbb
movs
inc
mov
out
mov
dec
inc
sahf
(bad)
cmc
mov
mov
pop
(bad)
and
or
movs
sbb
call
mov
sub
cmps
iret
and
mov
jmp
rol
push
test
repz
fcmovbe
bound
cmp
imul
pop
(bad)
in
mov
rcr
fild
call
lods
adc
outs
or
lock
(bad)
sub
mov
ds
push
ins
mov
inc
and
push
rol
pop
adc
mov
inc
jle
in
js
xchg
das
sub
enter
or
ins
sti
add
mov
scas
out
test
xor
std
fcomp
lods
cmp
les
adc
iret
sbb
sub
or
ret
sub
and
mov
cmp
jle
popf
sub
into
jbe
jae
jle
mov
or
jae
popfw
iret
and
loope
ja
sti
inc
mov
sub
adc
retf
scas
punpckldq
and
(bad)
inc
pop
inc
xchg
pop
pop
lahf
push
and
aas
pusha
test
xor
push
jg
and
es
push
aaa
in
shl
lahf
add
pop
aas
arpl
jmp
bound
in
mov
inc
out
inc
xor
dec
add
scas
rol
retf
mov
xor
cdq
arpl
lods
cmp
dec
(bad)
icebp
ror
jns
mul
xchg
scas
aam
jmp
out
test
adc
dec
ins
sub
mov
cmps
clc
ins
jmp
rol
popf
push
push
ins
push
int
out
cmc
or
mov
scas
or
cld
(bad)
retf
xor
fs
std
push
dec
and
xor
push
mov
cmp
dec
jmp
cmc
adc
inc
xchg
mov
(bad)
aaa
xchg
movs
(bad)
xchg
mov
sub
lods
mov
sub
sbb
daa
pop
repnz
fimul
out
mov
inc
jmp
xchg
ret
mov
dec
sbb
and
inc
dec
mov
adc
sub
pop
movs
push
mov
inc
sub
jbe
ja
push
dec
sub
mov
pop
mov
leave
rol
repnz
int
pop
fs
ins
lahf
adc
inc
push
mov
repnz
sub
imul
aas
pop
jnp
xchg
je
dec
add
jmp
jns
sbb
inc
and
outs
daa
pop
es
test
stos
mov
ins
test
outs
and
arpl
in
xor
pop
hlt
inc
xor
xor
stos
pop
pop
and
adc
js
xchg
pop
ins
mov
imul
pop
jne
xchg
push
ds
out
cs
dec
xor
push
lock
fcmovu
inc
adc
retf
mov
pop
in
push
test
(bad)
pop
stos
addr16
cli
mov
xchg
push
sbb
adc
pop
iret
mov
xor
mov
out
lds
dec
inc
test
xchg
in
test
mov
lods
push
sti
jecxz
jbe
mov
inc
int3
ret
scas
mov
in
hlt
pop
ds
fisttp
lea
push
mov
push
sbb
xchg
rcr
scas
maskmovq
test
and
(bad)
jmp
xchg
hlt
jno
pusha
pop
stos
out
ret
pop
mov
lock
cmp
fadd
cld
cmps
nop
push
retf
data16
mov
imul
xor
fs
(bad)
push
xchg
repz
enter
jbe
std
out
xchg
dec
mov
mov
ins
jno
mov
in
dec
push
push
add
pop
pop
es
adc
aad
les
mov
popa
add
pop
lea
in
test
jne
cmp
sbb
xchg
das
enter
push
cmp
adc
scas
push
fs
pop
push
(bad)
scas
ret
and
fld
lock
mov
jns
ins
mov
aad
fwait
retf
jnp
scas
xchg
dec
dec
stc
jge
out
lds
imul
es
mov
retf
push
fcom
enter
scas
cmp
jp
inc
mov
loopne
or
ins
xchg
rcr
bound
xchg
cli
cmp
jnp
xchg
retf
xor
dec
and
hlt
clc
xor
add
fwait
cs
push
es
push
pop
out
gs
retf
xchg
jae
iret
pandn
xchg
mov
sbb
sub
call
rol
xchg
adc
mov
test
shr
out
mov
arpl
sti
and
dec
rol
xlat
sub
(bad)
push
int
shl
fistp
mov
shr
jne
jns
cwde
scas
mov
xchg
inc
push
jge
not
jl
xor
dec
xor
cwde
xchg
and
shl
or
repnz
mov
call
call
ror
ins
mov
jecxz
xchg
loop
fist
lods
add
cmp
add
cmps
sbb
inc
mov
popf
xchg
xchg
fcmovnbe
pop
not
sbb
cmps
mov
loop
cmps
sbb
push
ret
shr
imul
add
dec
or
popa
(bad)
iret
cwde
mov
idiv
inc
leave
test
loope
and
outs
xchg
push
fcomp
stos
xlat
push
jge
and
cmp
out
mov
dec
arpl
xchg
cmps
mov
cmps
into
fiadd
sbb
fiadd
fisttp
js
test
in
out
ror
inc
fadd
cli
mov
mov
(bad)
adc
out
loopne
aam
cmps
out
or
call
pusha
mov
rcl
and
cmps
neg
clc
test
jmp
cmp
ret
jno
out
pop
sahf
mov
mov
sub
sub
jmp
adc
pop
cmp
inc
or
retf
mov
dec
loope
int
and
mul
hlt
mov
loopne
pop
jle
(bad)
fdivr
sbb
mov
xchg
xchg
sub
inc
test
inc
mov
inc
or
popf
add
adc
ins
daa
push
inc
dec
(bad)
aaa
mov
mov
test
add
icebp
shr
mov
xchg
es
mov
dec
fst
xlat
cmp
dec
xchg
xchg
retf
xor
test
inc
daa
hlt
adc
and
mov
loope
push
dec
pop
ficomp
jmp
nop
test
jns
(bad)
retf
and
jle
inc
mov
(bad)
aas
jmp
aam
pop
adc
pop
xor
lds
es
call
mov
jae
cmp
enter
mov
and
jno
pop
out
outs
call
push
mov
pop
es
outs
dec
pop
ror
push
scas
test
ss
inc
push
jmp
imul
and
(bad)
lods
jo
push
sub
pop
pop
sar
xor
inc
pop
fldcw
shr
leave
push
mov
out
pop
jae
xchg
cmp
sti
xchg
jae
mov
ins
pop
js
les
nop
daa
pop
and
sub
jno
nop
push
xchg
xchg
gs
iret
es
js
(bad)
cli
jecxz
mov
pop
xor
ins
adc
mov
jg
rol
sub
clc
or
jnp
mov
in
push
mov
sub
sub
call
mov
test
test
xchg
xchg
sub
cdq
pop
repnz
inc
push
ss
cmc
and
pminsw
jo
xlat
mov
or
(bad)
adc
shl
scas
xchg
int3
popa
jg
(bad)
push
out
xchg
(bad)
adc
sbb
sbb
jnp
clc
in
(bad)
clc
enter
mov
pop
jb
aad
scas
arpl
sar
and
hlt
daa
(bad)
mov
pop
(bad)
dec
xor
pop
inc
mov
adc
sub
fstp
aas
add
imul
push
ins
jnp
mov
out
fnsave
xchg
repz
mov
(bad)
push
mov
push
add
xor
mov
push
push
jns
fwait
pusha
sbb
cs
hlt
lods
fisub
pop
stos
pop
(bad)
inc
lahf
icebp
mov
and
ror
push
xchg
test
cmp
mov
pop
jp
in
add
xchg
push
pop
int3
fs
out
dec
sub
push
pushf
rol
mov
push
call
je
cwde
test
les
shl
adc
cmps
test
mov
aad
inc
lods
int3
test
xor
cli
in
call
or
sbb
dec
xchg
push
push
inc
les
jno
dec
xor
ins
and
push
imul
push
mov
fcomip
mov
dec
ss
push
and
mov
fnstenv
mov
jmp
mov
sbb
adc
dec
std
push
xor
fidivr
or
cmp
jnp
pop
paddq
sbb
arpl
mov
add
je
or
scas
lds
repnz
mov
xchg
jmp
adc
ret
loope
(bad)
pusha
ja
push
cmp
ret
pop
sub
pop
movs
loopne
cmp
lds
lds
int
sub
jbe
outs
sar
std
sbb
in
aas
pop
idiv
mov
out
dec
ja
pop
dec
rol
(bad)
push
sbb
pop
call
ds
jmp
push
jmp
inc
aam
sub
rol
push
adc
iret
adc
ss
mov
mov
xor
jns
jne
adc
or
jg
pop
or
or
arpl
ret
adc
push
jae
fmul
adc
mov
popa
scas
push
xor
data16
test
sti
pminub
mov
gs
cmp
aas
retf
mov
cli
add
lea
adc
pusha
dec
xchg
cmp
imul
in
add
inc
rol
test
inc
pop
inc
inc
xor
adc
sbb
mov
mov
xchg
mov
fidivr
retf
mov
inc
cmp
pop
ins
sub
jo
enter
and
xchg
and
add
mov
cmp
les
inc
retf
aam
sub
cmps
sbb
or
xchg
push
fst
sbb
jb
cmp
mov
cmp
aam
add
outs
bound
adc
hlt
sub
xchg
jge
gs
add
adc
mov
stos
pop
clc
hlt
xor
shr
retf
aas
dec
jae
mov
ret
xor
hlt
add
dec
(bad)
(bad)
sbb
popa
and
jg
mov
ins
xchg
dec
xor
and
sub
jbe
dec
mov
mov
bnd
aad
in
cwde
stos
xchg
jp
cmp
inc
cmps
repnz
pop
jns
jns
fidiv
sub
ins
push
sahf
cmp
out
int3
into
xor
out
push
xor
sbb
retf
cmp
add
pusha
or
out
xchg
jo
out
or
aam
lahf
dec
xchg
inc
sbb
cdq
adc
(bad)
shl
mov
xchg
inc
sub
sub
in
ins
cli
scas
mov
loop
adc
jbe
mov
cmovae
pop
call
int
cmp
mov
int3
mov
inc
xchg
fadd
pand
jp
ror
add
cmps
cdq
mov
mov
sahf
outs
inc
jno
inc
dec
dec
lods
lock
or
adc
add
fcmovne
dec
repnz
mov
sub
push
mov
jl
ins
out
icebp
push
push
add
and
aam
test
enter
mov
xor
cwde
mov
and
or
lods
pop
(bad)
aad
pop
cmp
js
aam
lahf
fwait
dec
movs
fidivr
adc
xchg
loope
push
movs
rol
cmps
or
push
hlt
pop
mov
fmul
xor
(bad)
scas
jmp
xchg
in
ins
nop
pop
adc
xchg
sub
sbb
fild
sub
shr
xchg
bound
pop
mov
arpl
xchg
addr16
or
pop
jle
or
call
add
hlt
sub
stc
or
xor
jb
sti
and
divps
std
rol
dec
pushf
fwait
rol
push
or
in
lock
aas
push
xchg
call
mov
movs
and
inc
sbb
pop
call
fidiv
repz
aaa
call
les
out
dec
enter
popf
out
mov
inc
retf
adc
dec
cld
or
xor
les
inc
adc
or
stos
jmp
and
int
xor
inc
mov
and
daa
sub
xchg
sub
push
addr16
sub
inc
sbb
pop
inc
or
out
test
mov
pop
jnp
frstor
loope
dec
pop
cmps
mov
jb
popa
gs
in
add
jo
or
and
sub
ret
xchg
std
fs
ja
sub
xchg
mov
inc
daa
pop
sbb
icebp
imul
push
xor
mov
jle
enter
inc
jle
and
clc
mov
repnz
mov
pop
jae
outs
dec
in
mov
add
pop
(bad)
retf
in
sar
in
jae
js
xor
mov
call
mov
xchg
in
aad
push
and
cmps
cmps
mov
fs
cmp
dec
movs
gs
retf
out
retf
addr16
xchg
daa
cs
dec
fwait
pop
out
int3
jmp
lods
inc
cmp
fwait
cmp
cmp
push
fadd
push
pop
mov
mov
cmps
retf
nop
adc
out
pop
inc
ficomp
and
add
in
ins
imul
aad
enter
fwait
push
xor
call
dec
aam
xchg
inc
or
jbe
ins
sbb
stc
cmp
mov
or
rcl
loope
and
cmp
popw
xor
xchg
out
xchg
(bad)
dec
cmp
mov
fadd
xlat
sbb
xor
mov
mov
and
xor
movs
sub
cmps
dec
popf
(bad)
idiv
icebp
fs
enter
rcl
adc
jge
scas
dec
mov
lods
fbstp
movs
mov
push
xlat
jp
xor
imul
xchg
mov
xor
inc
aaa
nop
rcr
push
mov
shr
sub
xchg
pop
cwde
retf
aam
popf
fsubr
mov
stos
movs
mov
icebp
aaa
xchg
jp
inc
push
mov
and
xchg
push
shl
lods
out
mov
dec
scas
int
push
cmovl
aaa
fmul
ret
add
test
fcmovne
push
movs
test
fmul
retf
cs
std
push
in
stos
xchg
jno
sub
mov
sub
ret
adc
jge
xchg
dec
push
mov
test
sahf
lock
aaa
out
movs
or
add
mov
(bad)
outs
jno
fild
adc
gs
or
xchg
enter
mov
test
or
inc
lds
jmp
and
cmp
sbb
call
jns
or
sbb
sbb
ins
out
cmp
addr16
add
(bad)
lods
mov
aaa
lahf
ins
ja
xor
fisub
movs
and
jecxz
push
mov
jecxz
mov
cmc
stos
xchg
movs
aaa
xchg
into
or
dec
add
(bad)
mov
jb
ja
jb
pop
sbb
inc
jnp
adc
push
jge
lods
fisubr
and
xor
pop
int
imul
mov
adc
pop
repnz
mov
fcmovne
push
ja
mov
jle
inc
mov
call
and
cmps
jb
ds
inc
cmps
pop
push
fstp
mov
es
cld
in
push
xor
inc
jge
nop
mov
stc
and
lahf
mov
fdiv
(bad)
sahf
in
outs
call
sbb
jb
adc
add
leave
adc
call
xor
and
and
xchg
shl
repz
int3
(bad)
push
jae
xchg
shl
cmp
xchg
out
sar
xchg
test
dec
(bad)
mov
gs
ins
inc
mov
aam
retf
and
mov
push
rol
dec
mul
inc
jns
sbb
icebp
into
inc
stos
fnstenv
lahf
enter
jb
ins
adc
scas
inc
rcl
and
arpl
cmp
inc
xchg
jo
xor
pop
pop
pop
cmp
cli
pop
and
or
push
ds
in
push
cmp
mov
jo
imul
mov
je
pop
jle
sbb
into
push
push
add
dec
gs
gs
add
loop
mov
jecxz
nop
xchg
mov
(bad)
fadd
movs
daa
js
push
adc
mov
test
push
int3
lock
xchg
pop
ret
rol
inc
imul
out
dec
popa
or
scas
dec
mov
pop
inc
add
sbb
adc
mov
jbe
out
sub
push
mov
lods
and
xor
cmp
in
pop
xor
dec
or
mov
or
nop
push
out
pop
jge
in
push
cli
xor
mov
add
add
dec
inc
mov
push
popf
call
mov
enter
fucom
jns
mov
sbb
repnz
push
mov
loopne
push
ret
mov
int
adc
les
add
sbb
vmread
(bad)
test
or
fst
xor
jne
push
outs
test
mov
mov
(bad)
mov
mov
call
cld
push
cdq
test
icebp
jecxz
std
ds
and
jmp
popa
xor
call
pushf
xor
outs
fs
lea
in
dec
and
fcom
data16
xor
mov
and
or
mov
in
imul
out
lock
push
in
gs
adc
jle
fxch
mov
xor
repnz
jns
aad
out
cmp
retf
mov
call
or
rol
push
cmp
sbb
and
pop
xchg
hlt
iret
ret
ret
sbb
retf
test
inc
or
sbb
cmc
fisttp
sbb
mov
fidivr
ja
cmp
or
aam
sbb
jg
sub
or
and
adc
ja
ror
add
jnp
fisttp
repz
enter
daa
aad
fistp
adc
stc
cmps
sbb
out
jle
movs
jp
sahf
sub
ins
add
jo
sub
loop
leave
xchg
in
mov
sti
mov
sbb
jno
fcmovne
ficom
mov
cli
js
fcmovne
les
jmp
or
inc
dec
ins
mov
push
fwait
sub
push
and
mov
std
jge
jno
mov
mov
leave
icebp
ror
sub
fld
mov
cmp
pop
rcl
jae
ss
mov
(bad)
aad
or
xchg
cmp
jno
inc
shr
loop
js
push
adc
mov
popa
sti
push
aad
dec
adc
pop
aad
xor
pop
pop
add
sub
fidivr
daa
pop
mov
inc
in
lock
lds
jo
inc
add
xor
test
add
fistp
(bad)
dec
movs
in
stos
nop
test
lods
push
jb
fs
adc
mov
push
into
xchg
jg
push
mov
sub
xor
push
adc
in
pop
rcr
push
sbb
push
xor
push
movs
pop
pop
sub
in
(bad)
nop
pxor
and
xor
push
mov
dec
shl
into
(bad)
mov
clc
push
xor
rcl
xchg
sbb
or
fld
pop
mov
and
mov
ret
push
add
icebp
pop
sub
xlat
xchg
je
xchg
adc
popf
lahf
mov
js
hlt
sub
sar
sub
sub
daa
mov
imul
sbb
popw
addr16
(bad)
add
jg
xor
stos
xor
in
jns
inc
out
dec
or
lsl
outs
repnz
fnstenv
ja
jb
xor
ror
xchg
out
arpl
xchg
add
enter
test
gs
int3
cmp
cmp
or
fsub
cmps
sahf
mov
mov
ret
pop
ja
std
mov
aad
mov
sti
test
fwait
xchg
in
sbb
inc
jg
sbb
xor
ins
add
cwde
jge
shr
je
mov
out
fistp
pop
arpl
cmp
mov
leave
push
mov
loop
fcomp
mov
leave
pop
fwait
scas
fwait
es
mov
xor
imul
pop
fcmovne
imul
(bad)
add
inc
push
xor
inc
adc
sbb
dec
mov
cdq
in
frstor
in
cmp
rcl
movs
jmp
sbb
inc
fsubr
adc
movs
call
xchg
imul
into
int3
repnz
push
push
movs
mov
rcr
mov
inc
adc
push
(bad)
jbe
push
fld
mov
test
aaa
sbb
pop
xchg
or
adc
in
fnstenv
sar
mov
int3
loope
xor
add
mov
adc
sub
push
jmp
push
pop
rol
push
ret
mov
pop
sbb
shr
cmps
pop
out
pop
icebp
adc
popa
pop
loope
adc
outs
fwait
jl
xchg
ret
pushf
in
leave
mov
cmps
dec
rcr
ror
js
jb
mov
aas
mov
xor
repnz
aaa
sbb
rcl
cmps
or
mov
add
pop
pop
inc
and
test
dec
inc
xchg
jl
add
sub
xchg
retf
pushf
dec
cmp
das
not
pop
sahf
jne
xor
add
clc
(bad)
cwde
add
cs
rol
pop
ins
cmp
sub
xchg
jg
add
in
neg
inc
cmps
cdq
mov
sti
pop
jp
shl
pop
pop
lock
fisub
sub
in
cwde
call
repnz
and
push
add
mov
gs
jmp
aad
inc
mov
dec
nop
cdq
in
test
lahf
push
out
test
ins
mov
push
(bad)
cmp
or
popf
push
enter
add
or
add
sub
mov
add
push
je
das
add
pop
into
push
sahf
adc
sbb
std
test
sub
jne
ss
push
loopne
mov
dec
jmp
inc
cmp
pop
repz
mov
sar
ret
daa
xor
mov
loopne
pop
mov
dec
out
cmp
xchg
pushf
mov
push
mov
fdivr
ds
mov
xchg
test
inc
pop
aam
mov
jne
push
dec
add
leave
outs
out
test
(bad)
stos
stos
push
test
rcr
retf
dec
shr
adc
mov
sbb
icebp
repz
pop
sti
pop
mov
jbe
inc
fisub
dec
gs
rcr
adc
mov
inc
pop
inc
arpl
adc
out
cmp
ins
pushf
push
fild
outs
aaa
jge
mov
pop
xchg
adc
(bad)
(bad)
add
and
cmps
mov
lahf
adc
mov
loopne
mov
shl
jecxz
repnz
sbb
enter
mov
fs
cmp
mov
pop
sub
jl
xor
mov
(bad)
adc
dec
into
xchg
mov
pop
addr16
cmp
jg
push
and
mov
loopne
clc
jp
mov
pop
cmc
or
push
out
ins
pushf
mov
stc
leave
and
jb
fwait
dec
mov
aaa
sub
cmp
jg
aad
push
adc
outs
cmps
add
sub
fld
(bad)
in
(bad)
je
jle
xor
mov
xchg
ret
dec
mov
leave
jmp
pop
lea
fist
jg
test
xchg
push
xchg
push
call
pop
xor
fstp
call
stos
stc
push
adc
aaa
movs
rol
or
mov
jo
(bad)
cli
fsub
das
cmps
adc
aas
cwde
jg
or
sub
mov
mov
mov
jle
mov
(bad)
pusha
mov
add
jle
movs
fdivr
loope
push
jecxz
jg
mov
add
ds
add
mov
repnz
das
mov
sbb
gs
mov
mov
or
mov
in
lods
fsub
rcl
jmp
mov
pop
aaa
outs
xor
and
adc
jno
nop
xchg
xor
cmp
mov
jo
into
sub
mov
movs
and
cli
je
push
push
loop
fwait
ror
jecxz
mov
cmp
int
or
outs
(bad)
not
cmp
add
push
test
ret
mov
xlat
(bad)
arpl
addr16
adc
pusha
xor
or
or
cdq
ret
push
adc
cld
mov
lahf
into
xchg
or
jbe
mov
mov
sbb
sbb
pop
mov
mov
mov
scas
cdq
out
mov
es
fs
pop
mov
mov
hlt
sbb
jne
in
add
(bad)
push
dec
sub
scas
sub
lock
adc
mov
inc
xlat
push
(bad)
fiadd
cmp
add
xchg
cmp
xor
addr16
les
dec
add
scas
mov
mov
movs
cmp
bound
xchg
aad
dec
fwait
stos
ds
add
adc
aas
lods
je
call
repz
xchg
cmp
mov
outs
stos
push
fsub
xchg
mov
xor
jmp
push
mov
dec
sub
pop
mov
sbb
sub
fidivr
addr16
fimul
jns
fsubrp
xchg
mov
xor
xchg
and
repnz
and
cmp
lahf
mov
pusha
dec
and
add
jne
test
test
mov
jle
(bad)
mov
sbb
pop
or
xchg
repz
adc
xor
pop
add
jmp
js
mov
arpl
repnz
stos
cmp
aas
push
pop
xor
lods
(bad)
ror
jmp
sbb
mov
dec
inc
movs
xor
xchg
lea
adc
shr
call
pop
jb
mov
xchg
and
adc
dec
js
or
mov
ficom
ret
cmp
scas
lods
mov
fcomp
adc
dec
and
stc
sbb
sbb
xchg
into
push
test
cli
cs
push
loope
fcmovb
aad
push
mov
dec
push
daa
mov
arpl
bnd
sbb
movs
aam
xor
popa
(bad)
loope
sar
sar
cmps
pop
sahf
lahf
mov
xchg
bound
push
cmp
pop
sbb
cdq
pop
mov
ret
frstor
out
push
inc
in
sbb
xchg
push
fisttp
test
pop
(bad)
mov
adc
dec
aaa
mov
sub
mov
add
mov
das
pop
or
mov
scas
mov
retf
lods
loopne
dec
in
dec
cwde
push
fld
and
retf
imul
loopne
xchg
push
mov
push
push
dec
mov
adc
out
inc
sbb
xchg
(bad)
push
stc
stos
mov
cmp
dec
pop
je
fwait
inc
jo
push
xchg
ds
add
sti
push
push
mov
sub
and
adc
pop
push
pop
push
repz
push
sub
dec
lea
mov
add
inc
lahf
jge
jbe
mov
add
sbb
in
retf
adc
into
rcr
sbb
clc
sbb
push
cmps
push
dec
xor
add
and
test
mov
arpl
or
sbb
fild
ss
jno
add
dec
push
xor
cmp
push
xchg
mov
sbb
and
adc
push
push
shr
pop
out
cmp
pop
int3
sub
in
add
cmps
jbe
add
(bad)
outs
cmp
div
out
out
scas
data16
iret
call
pusha
add
inc
cmp
push
inc
push
and
dec
add
or
ret
sbb
sbb
fistp
and
sub
std
pop
sahf
push
cdq
ret
imul
sti
mov
mov
and
mov
dec
ins
jnp
loope
cmp
(bad)
daa
sub
lods
xchg
inc
pop
outs
sub
lahf
(bad)
aam
nop
sbb
(bad)
dec
(bad)
into
in
xchg
(bad)
jo
outs
hlt
fist
or
cdq
xchg
inc
sahf
fwait
ja
jb
inc
cld
mov
retf
push
jg
mov
add
mov
add
dec
ror
or
inc
jno
(bad)
loopne
xchg
add
(bad)
je
dec
jg
test
fldcw
pop
arpl
dec
fdiv
xor
add
cld
rdpmc
jns
and
mov
adc
xlat
fimul
or
xor
int
aad
bnd
xchg
mov
(bad)
aam
xchg
sbb
fist
cmc
pop
ds
cmp
test
repnz
sti
cmp
aas
aaa
popf
dec
push
aaa
mov
ss
jmp
cmp
push
fucom
retf
pop
aas
rcr
in
mov
mov
add
pop
cmp
test
(bad)
ror
jge
push
push
add
jo
lahf
sub
call
add
xor
pop
es
mov
icebp
mov
and
ficom
pop
cli
cmp
popf
mov
push
test
sahf
add
jp
lahf
sbb
and
fstp
sbb
jo
idiv
enter
std
lds
push
popa
inc
jno
(bad)
gs
cmc
mov
mov
push
sub
inc
fmul
aaa
adc
test
cs
jle
xor
pop
aad
xchg
inc
cli
push
fsubr
repz
inc
push
xor
scas
das
shl
sbb
inc
push
scas
inc
nop
mov
repz
mov
inc
repz
fdivrp
sahf
mov
sub
ins
inc
push
mov
xor
sub
imul
mov
adc
jmp
je
ror
xchg
rcl
sahf
fidivr
fs
add
call
aam
xchg
std
das
and
mov
(bad)
repnz
push
les
(bad)
sbb
cmp
adc
test
push
and
or
pusha
aas
or
adc
cli
push
and
inc
inc
pushf
mov
movs
adc
add
lods
push
aad
inc
sub
sub
cmp
mov
xchg
add
ror
jmp
aad
sbb
push
xor
xor
or
popf
pop
loop
test
out
or
lock
js
ret
cmps
mov
cwde
pop
lods
fwait
push
movs
(bad)
in
out
mov
adc
or
stos
mov
sbb
inc
push
int
sbb
adc
je
retf
loop
dec
dec
scas
add
xor
imul
aaa
aad
mov
xchg
test
jp
ret
pop
sahf
or
mov
mov
scas
ret
mov
cwde
sbb
(bad)
out
jb
jl
fcomp
(bad)
hlt
sub
cmp
mov
jp
jb
mov
test
imul
lahf
retf
pop
or
ret
xchg
call
ficom
pusha
adc
cmps
loop
mov
push
and
inc
jl
mov
mov
jo
call
stc
shl
or
mov
or
inc
mov
xor
xor
pop
inc
pop
push
xchg
mov
pop
add
mov
test
dec
pop
or
shl
mov
adc
sbb
jl
(bad)
arpl
pop
mov
gs
pop
call
test
(bad)
arpl
lods
cmps
or
aaa
mov
dec
lea
imul
pop
mov
xor
add
push
imul
push
icebp
dec
popa
push
scas
push
popa
or
and
ds
dec
out
js
(bad)
in
mov
pop
xchg
and
push
into
loopne
xchg
and
aam
inc
neg
jg
and
inc
ss
out
and
mov
cmps
lods
sub
addr16
mov
gs
fstp
pop
jo
add
adc
add
xor
and
xchg
add
pop
ror
xchg
lods
cmc
mov
imul
sub
scas
jbe
add
std
jp
call
test
dec
sahf
into
pop
cmps
add
mov
popf
add
in
sbb
mov
dec
test
and
mov
fbld
xor
nop
sub
add
and
mov
stos
jmp
inc
dec
push
ret
pop
mov
frstor
and
xlat
loope
push
out
push
cld
pop
lods
mov
pusha
ds
fimul
sub
or
fld
cs
mov
add
loopne
not
movs
push
in
mov
(bad)
test
sub
inc
jns
push
pop
lock
cmp
push
cmp
xchg
and
or
push
sbb
adc
sahf
pusha
inc
dec
in
fwait
sbb
adc
les
sar
sbb
xchg
mov
clc
adc
leave
push
fidiv
push
push
push
enter
or
jge
push
ss
int
std
or
cmp
data16
pop
sub
imul
test
adc
cmp
xchg
in
mov
leave
pop
inc
icebp
int
jbe
mov
and
mov
cwde
call
push
call
popa
cmp
xor
mov
ja
add
cli
ins
pushf
push
in
mov
cs
repz
jmp
jo
xor
mov
aad
mov
in
xor
or
and
aas
scas
je
pand
int3
push
adc
lds
xchg
mov
out
jbe
xchg
pop
pushf
mov
shr
lods
xor
rol
add
jne
rcl
sub
pushf
cmc
pop
daa
or
adc
cmp
push
leave
cmp
push
cmp
mov
loope
jp
push
clc
pop
mov
inc
imul
push
mov
or
cmps
dec
out
cmps
and
arpl
call
inc
inc
sub
push
mov
cmp
mov
neg
mov
jbe
data16
xchg
nop
pop
and
sahf
sub
rcr
lock
sub
setbe
out
add
push
ficomp
sahf
adc
das
adc
dec
or
jbe
cwde
int3
fld
aaa
jnp
dec
ror
jns
mov
ja
into
push
jmp
pop
out
ror
fs
jecxz
cwde
xchg
jge
in
sahf
imul
fist
pop
in
rcr
stc
lahf
xlat
xor
cmp
dec
sar
outs
in
es
push
mov
mov
push
imul
test
not
mov
pop
push
push
loopne
in
pop
inc
mov
xchg
push
xchg
je
mov
sbb
xchg
cmp
mov
inc
aas
cmp
dec
ds
popf
add
and
mov
(bad)
ror
popa
popf
loope
adc
mov
adc
in
xor
sahf
addr16
shl
sub
lock
inc
mul
push
cmps
dec
dec
bound
movs
repz
sub
cmp
sub
and
inc
imul
enter
xchg
and
outs
cmp
mov
int
xchg
punpckhbw
cli
mov
test
pop
inc
popa
dec
jmp
xor
dec
push
es
adc
clc
ret
xchg
pop
ret
jb
hlt
sti
pushf
loop
inc
and
inc
mov
or
sub
out
imul
sahf
mov
in
or
fiadd
fsubr
outs
sbb
sub
mov
stc
ss
push
in
out
xor
dec
dec
cdq
inc
sub
test
das
loop
mov
fs
adc
xor
or
jmp
popf
popf
mov
push
stos
test
push
jge
or
test
lods
fisubr
fimul
icebp
inc
cmps
or
sahf
mov
push
call
fcomp
jmp
and
mov
xchg
mov
daa
sbb
mov
enter
test
adc
sub
lods
repz
out
and
out
mov
inc
dec
inc
xchg
xlat
ret
mov
push
mov
repz
xlat
jp
fs
adc
enter
sub
shl
aaa
jmp
lahf
imul
xor
shl
inc
rol
cwde
mov
xchg
cmps
stos
jo
stc
mov
fstp
repz
aad
mov
adc
sbb
iret
xor
fisttp
fstp
inc
imul
cmc
ror
sub
ret
aas
mov
inc
mov
test
jb
xlat
cmp
cdq
inc
mov
mov
imul
mov
or
(bad)
in
lea
jp
out
sub
xchg
push
fimul
mov
stos
pop
mov
cmp
ins
lock
and
sahf
cs
mov
mov
inc
cmps
lds
sub
mov
loopne
push
int3
lods
lock
(bad)
mov
jmp
aaa
(bad)
sar
loop
call
jle
or
out
cmp
ins
xor
pop
addr16
enter
mov
cmps
rcr
rol
lock
vphaddudq
xor
inc
and
lahf
mov
xchg
in
cdq
loop
mov
enter
fnstenv
sbb
(bad)
scas
sub
add
imul
es
cmp
movs
or
push
sub
dec
and
mov
mov
add
mov
and
rcl
neg
addr16
aas
jo
loopne
pop
stos
inc
enter
mov
das
jmp
loopne
mov
cmp
pop
sub
adc
ret
in
fbstp
lahf
test
pop
das
bound
xchg
sub
sbb
mov
aad
mov
movs
inc
neg
cmp
pusha
imul
inc
loope
fcmovnu
lods
inc
dec
repz
cmp
call
std
nop
in
add
jae
pop
cmc
bound
mov
cli
and
add
stc
jp
fist
pop
jmp
(bad)
aaa
enter
push
fwait
test
pusha
and
in
xchg
(bad)
jmp
xor
inc
jle
ins
push
in
mov
mov
popa
fidiv
cmp
add
inc
pop
into
int
pop
xchg
lds
out
aaa
arpl
das
and
mov
cmps
pop
push
adc
xchg
lahf
imul
dec
add
inc
push
push
or
jb
pushf
or
cwde
cmc
out
sub
mov
aam
leave
(bad)
jle
out
out
cmp
and
jp
imul
add
jae
pop
and
jg
stc
pop
outs
aad
jo
hlt
or
jb
das
sbb
pop
lahf
lahf
in
mov
loop
push
xchg
sbb
in
add
call
popf
mov
inc
pop
mov
push
push
scas
mov
scas
or
aam
movs
push
fsub
jmp
xchg
inc
enter
(bad)
xor
mov
mov
jmp
aam
into
(bad)
arpl
arpl
bound
enter
and
dec
rcl
inc
leave
popa
sbb
pop
jg
dec
add
jl
adc
in
mov
adc
jecxz
adc
or
out
cwde
jg
jae
cld
push
push
cmps
les
dec
loop
arpl
pop
push
xor
inc
inc
jge
stc
mov
outs
xor
sbb
in
jl
xor
test
pop
sub
sbb
int
and
cdq
js
cld
add
ss
ret
ins
lods
retf
sub
jmp
mov
or
jnp
lea
pop
mov
or
int3
iret
fdiv
das
mov
mov
sbb
jg
pop
fwait
pop
out
lahf
push
dec
dec
sub
icebp
mov
ins
push
or
pop
xchg
mov
inc
mov
gs
bound
mov
jp
fisubr
inc
sti
mov
js
fcmovb
into
push
ret
ror
stos
xor
pop
ins
stc
push
rcr
add
jae
mov
xchg
add
xchg
push
dec
xor
(bad)
pop
fldcw
inc
(bad)
fld
dec
int3
jecxz
mov
xchg
and
fcomp
aas
cmp
dec
rcr
mov
xlat
mov
mov
dec
stos
jnp
or
inc
and
push
sbb
cli
inc
pop
xchg
call
xor
and
push
cmp
xor
jmp
out
dec
mov
mov
movs
add
ss
cmps
push
test
sub
sti
xor
jp
pusha
add
cmp
aaa
call
jecxz
cld
mov
sbb
jp
xchg
ja
mov
daa
lock
sub
add
sbb
scas
cmp
adc
cs
movs
mov
int3
add
das
rol
dec
in
xchg
js
es
int
stc
xor
mov
adc
cmp
xor
in
dec
push
and
mov
push
and
inc
xor
cmp
stos
pop
clc
dec
push
hlt
adc
je
cmps
add
or
lea
test
(bad)
sahf
(bad)
mov
xchg
je
les
rcr
into
mov
or
(bad)
retf
aaa
cpuid
jmp
adc
sbb
dec
xor
mov
xchg
mov
in
lods
or
jbe
or
jno
enter
mov
and
test
hlt
cmp
dec
xchg
fisubr
fcom
mov
cmps
clc
xchg
xlat
mov
fs
addr16
and
into
data16
outs
or
dec
mov
add
popf
out
mov
cmp
dec
jnp
xchg
enter
adc
(bad)
imul
mul
pop
ss
or
pop
pop
jnp
rol
js
dec
imul
jl
mov
inc
mov
enter
test
ss
push
and
or
cmp
retf
jne
mov
lock
rcl
add
fidiv
iret
and
sub
xchg
mov
and
aam
rcl
push
sub
xchg
pushf
jo
fld
mov
aam
jae
add
push
mov
push
ret
ss
leave
add
mov
ins
mov
js
repz
popf
push
fwait
lock
and
pushf
lea
repnz
xor
push
jp
ret
shr
add
sub
shr
mov
es
fst
ror
popa
pop
les
retf
test
adc
fwait
lds
jbe
mov
adc
ja
mov
repnz
cmp
js
in
push
fild
push
mov
push
(bad)
sub
xlat
aad
fist
mov
add
push
ins
pop
bnd
test
inc
rcr
pop
mov
adc
mov
les
outs
and
adc
ins
scas
in
inc
dec
das
push
call
adc
adc
sbb
js
pop
and
and
xchg
fcomp
loope
adc
xchg
xor
mov
je
mov
jbe
jne
imul
fld
imul
in
pop
out
pop
dec
or
out
jno
scas
test
mov
rcr
mov
test
xor
in
mov
ins
jne
(bad)
aas
dec
xchg
fucomip
fdiv
repnz
adc
pop
imul
(bad)
and
dec
inc
retf
xor
and
mov
lds
jb
push
adc
pop
add
mov
pusha
sbb
mov
adc
xchg
stos
stc
rcr
mov
adc
rcl
int3
sahf
jmp
sub
cli
mov
out
mov
into
stc
push
ror
xchg
or
cmp
movs
push
adc
inc
xor
inc
adc
lock
adc
pop
push
xchg
imul
xlat
pushf
addr16
in
leave
retf
and
mov
jmp
cwde
cld
in
push
dec
dec
cli
aad
pop
xor
dec
cmp
fild
jae
stos
lods
stos
lock
sti
cli
pop
imul
loope
and
mov
mov
icebp
adc
test
lea
jae
mov
loop
cmp
or
or
aaa
test
dec
sbb
rcr
aam
cmp
push
aad
repnz
dec
dec
jbe
mul
iret
shl
cwde
frndint
int3
pop
jle
pop
std
pop
sub
cmp
fs
mov
popf
sti
cmp
loopne
dec
btr
scas
xlat
out
jecxz
in
stos
jmp
pop
jl
and
lods
inc
lods
sub
arpl
xchg
ret
jae
enter
rcr
push
ds
loopne
mov
dec
call
fs
push
dec
adc
dec
push
stc
push
sbb
inc
not
sti
(bad)
shl
pop
sbb
xchg
mov
mov
xor
pop
dec
test
add
and
dec
in
mov
and
loope
jae
push
loopne
xor
pop
loopne
popf
or
test
mov
test
dec
lods
jp
fisttp
inc
int3
pop
dec
push
out
bound
sbb
adc
(bad)
lock
icebp
push
sbb
iret
mov
into
iret
pop
out
adc
adc
in
xchg
repnz
mov
sahf
fstp
(bad)
cmp
mov
mov
movs
jae
sbb
push
scas
inc
or
mov
hlt
push
mov
icebp
stos
push
cwde
inc
jno
out
loopne
ds
in
and
adc
fcmovu
cmp
jmp
rol
mov
nop
jmp
or
movs
jg
pop
call
dec
xchg
inc
xor
inc
adc
bound
sar
das
test
inc
adc
push
or
pusha
outs
push
outs
dec
xchg
xor
inc
mov
adc
jno
aaa
mov
xchg
shl
and
les
mov
and
mov
xchg
cmp
xor
ret
sbb
push
test
push
push
ss
cld
push
cmp
sbb
xchg
cmp
jl
jno
push
stc
fbstp
or
or
sbb
xadd
mov
es
push
lds
lods
adc
fnstcw
ss
test
xchg
or
inc
sahf
adc
lods
sbb
pop
fcom
push
int
fisub
push
arpl
neg
leave
out
iret
push
dec
(bad)
outs
hlt
bound
loopne
and
frndint
cmps
add
ret
in
lds
and
fnstcw
jmp
cmp
stos
mov
(bad)
dec
iret
sti
push
inc
or
push
dec
sbb
jmp
pop
int
ja
fbstp
xchg
adc
imul
jns
ret
jmp
xchg
jmp
sbb
and
push
mov
mov
xchg
dec
(bad)
xor
lock
fwait
inc
dec
stc
into
loop
cmp
mov
sbb
inc
(bad)
cmps
mov
pop
rcl
mov
pop
push
sub
mov
xor
fadd
(bad)
push
std
nop
push
xchg
or
outs
xchg
or
jbe
icebp
xchg
jnp
das
cmp
frstor
and
push
xchg
lds
xor
xchg
test
push
push
ja
rol
mov
pop
(bad)
imul
inc
hlt
mov
movs
mov
mov
or
retf
call
je
adc
loopne
ins
test
sub
mov
and
stos
ja
movs
and
imul
dec
mov
in
mov
sub
xor
ds
mov
sbb
inc
xor
inc
(bad)
dec
stc
adc
jnp
neg
or
stos
pop
in
fnsave
aaa
outs
mov
pop
jge
inc
sub
jp
cmps
aad
in
inc
pop
nop
std
shl
lods
popa
mov
sub
and
mov
test
inc
rcr
mov
iret
jl
pop
xor
neg
ins
mov
int
or
sbb
pop
mov
fnstsw
out
test
adc
nop
(bad)
xchg
mov
xlat
shl
fmul
jp
sub
(bad)
jecxz
out
bswap
or
icebp
int3
stos
stos
jns
mov
xor
hlt
mov
cmp
enter
mov
scas
shl
daa
cmp
jnp
or
jg
fwait
pop
and
sbb
push
xchg
stos
aas
dec
sub
xlat
shl
imul
add
jmp
or
pop
or
daa
popa
adc
cmps
aad
xor
sbb
mov
ins
aam
xchg
cld
pop
inc
and
pop
stos
stos
in
pop
mov
lds
adc
das
xchg
xor
enter
inc
lahf
dec
or
sub
pop
imul
dec
and
push
pop
dec
in
xchg
mov
jmp
xor
sbb
dec
adc
pop
lock
mov
push
outs
jno
ss
outs
xchg
push
add
(bad)
jo
(bad)
out
fdiv
sub
add
out
out
push
pop
push
mov
retf
cli
inc
jmp
mov
inc
and
sbb
retf
jle
movs
or
mov
sbb
pop
das
out
inc
lea
xchg
push
hlt
test
mov
xchg
xor
jo
test
dec
sbb
pop
xchg
push
clc
push
ret
mov
out
and
xor
xchg
jp
xchg
std
fnsave
add
dec
clc
pusha
jp
inc
dec
adc
cdq
outs
sahf
jle
jle
jge
(bad)
push
mov
shr
cmp
(bad)
jle
push
(bad)
imul
repnz
xchg
add
ja
sub
dec
lahf
add
xchg
add
xor
(bad)
xchg
out
movs
cdq
ds
xchg
pop
sub
cmps
push
stc
cwde
retf
test
jmp
fadd
pusha
pop
push
cmp
xor
stos
xor
je
add
push
out
cwde
lea
popf
cli
(bad)
pop
or
nop
xchg
aad
into
adc
push
mov
and
push
xlat
and
sub
in
jo
out
outs
aad
inc
pop
xor
call
pop
jmp
mov
inc
(bad)
iret
jle
xor
jb
popf
pop
imul
or
retf
(bad)
pop
test
retf
pop
and
inc
xlat
fdivp
stos
xor
mov
inc
push
mov
mov
adc
xor
inc
ror
pushf
out
jnp
xor
mov
adc
sub
fistp
push
pop
jns
jp
xchg
inc
add
sub
jp
mov
in
inc
shl
add
mov
mov
sbb
sar
std
xlat
sub
xchg
ins
sbb
pop
cmp
sbb
or
stc
inc
pop
adc
lea
in
dec
and
add
pop
lahf
das
(bad)
call
cld
push
popf
jnp
adc
and
sbb
jae
lds
sub
jns
cli
sub
ins
idiv
arpl
xor
stos
mov
scas
jle
pop
loope
jl
push
jmp
js
sub
scas
repz
popa
dec
outs
adc
popf
mov
fcomp
sbb
push
repz
fistp
icebp
pop
jp
pop
test
ja
repz
lea
ins
out
ja
add
inc
sbb
sub
popf
pop
sbb
cmp
fimul
xor
out
jecxz
ucomiss
mov
(bad)
sbb
adc
cmps
cmp
xor
cwde
outs
mov
fldcw
mov
test
fisttp
mov
retf
mov
sahf
adc
pop
mov
cli
xor
and
add
in
push
ror
std
mov
jnp
cmp
call
push
sub
jl
dec
and
mov
jmp
add
jmp
xchg
daa
jns
add
push
jno
movs
jae
mov
or
mov
cwde
rcl
retf
add
mov
nop
sbb
repz
mov
mov
bnd
adc
les
xor
icebp
nop
jge
pop
das
mov
rol
sub
dec
xor
adc
test
adc
paddd
out
pop
gs
daa
xor
cdq
cmp
lea
or
int3
xor
xor
jnp
fsubr
mov
xor
retf
cmp
cdq
test
leave
inc
imul
inc
push
(bad)
(bad)
(bad)
cmc
lock
mul
loop
sub
add
ds
mov
test
rcl
jno
inc
ror
sbb
cs
and
and
into
out
mov
jl
std
lock
mov
or
xor
pop
shl
arpl
pop
(bad)
cdq
xor
sahf
pop
pop
movs
jno
push
shl
enter
lea
addr16
inc
dec
add
sbb
shr
stc
adc
xchg
lods
pop
pop
xlat
imul
xchg
mov
mov
sub
and
xchg
pop
mov
loop
adc
push
cld
scas
xor
pop
dec
push
imul
pop
xchg
mov
add
push
push
pop
and
test
shr
(bad)
in
or
(bad)
ins
pop
retf
mov
and
in
or
sbb
sahf
jne
sub
and
sbb
aam
push
or
shr
mov
push
fstp
sub
mov
sahf
loopne
sbb
xchg
outs
dec
push
mov
cli
call
call
out
add
int3
loope
loop
mov
call
loopne
pop
test
data16
sub
pop
fld
sub
push
pop
fnstenv
dec
sub
jmp
push
cwde
jne
pop
ja
mov
fwait
or
into
add
(bad)
jb
pop
call
mov
pop
fsubr
or
pusha
cwde
pop
ja
mov
sar
fstp
aam
inc
call
popa
popf
sbb
jbe
mov
xor
pop
(bad)
pop
adc
stc
lods
mov
xor
xlat
test
cdq
(bad)
in
call
jg
push
xor
inc
dec
and
mov
mov
pushf
(bad)
cmp
arpl
sbb
dec
in
sbb
out
test
jne
pop
in
and
mov
pop
sub
sub
adc
lds
jns
jecxz
jb
mov
jae
pop
fsubr
retf
test
sti
mov
mov
lds
jmp
sub
mov
aaa
(bad)
into
ja
sub
xchg
cdq
ss
fiadd
mov
lea
imul
or
mov
dec
add
dec
inc
xchg
out
sahf
repz
dec
imul
cli
pusha
ins
ffreep
sub
not
test
call
packsswb
les
or
ror
xchg
jmp
arpl
hlt
inc
stos
in
mov
sbb
or
or
inc
or
jg
mov
jnp
dec
jmp
sbb
or
pop
pop
scas
fisubr
and
aam
leave
or
cmp
sub
loop
inc
fnsave
ins
pop
xor
cs
leave
idiv
mov
stos
jo
mov
cdq
mov
(bad)
js
imul
ds
je
movs
imul
es
mov
xchg
pop
mov
rol
add
or
add
sub
(bad)
and
sub
sbb
xchg
push
push
hlt
lea
pop
jge
push
xchg
mov
jl
mov
loop
pop
mov
pop
and
out
push
(bad)
repz
jmp
mov
int3
adc
inc
or
jg
call
pop
add
jmp
cmp
mov
mov
add
or
int
fidivr
in
shr
push
xchg
ret
push
xchg
cs
add
inc
jns
sbb
or
gs
and
cmps
mov
inc
je
stos
jmp
and
(bad)
jg
jno
test
add
cs
(bad)
xor
stos
outs
aas
cmc
sahf
mov
movs
dec
mov
inc
and
xchg
ins
imul
test
push
std
jno
movs
inc
sbb
push
retf
adc
mov
push
dec
pop
inc
add
ss
(bad)
inc
xchg
cmps
(bad)
ss
push
in
(bad)
adc
loope
mov
lods
push
int3
jl
jecxz
cmp
sub
xor
mov
inc
jmp
dec
xor
push
inc
add
xchg
mov
(bad)
lods
xchg
aas
lods
xor
ret
mov
test
xchg
ins
pushf
jge
dec
jmp
out
clc
pop
js
add
cmc
call
add
leave
inc
loope
or
jg
daa
enter
xchg
cmp
sbb
push
pop
cmp
inc
movs
jno
xor
shl
pusha
out
test
cwde
mov
or
sbb
jae
bound
cmp
movs
test
xor
movs
mov
aaa
scas
mov
push
clc
stc
inc
cmp
xor
jle
addr16
(bad)
scas
push
mov
push
repnz
add
push
push
in
jns
mov
cmc
lea
mov
daa
mov
repnz
outs
test
mov
fnstcw
(bad)
sbb
adc
and
mov
hlt
xchg
or
mov
pusha
sub
inc
pop
add
imul
lods
out
not
adc
inc
xor
xor
mov
lods
dec
cmp
dec
mov
rol
xchg
push
aam
xor
fnstsw
(bad)
cwde
dec
cs
sahf
out
ins
data16
xchg
shl
scas
push
pop
jge
xor
and
fstenv
mov
pop
sar
fisubr
dec
push
test
cmps
cmp
aaa
cwde
fst
loope
mov
push
jmp
xor
push
inc
mov
dec
mov
mov
xor
test
push
test
sub
mov
and
inc
xchg
sbb
or
test
adc
pushf
(bad)
ins
mov
adc
dec
test
xor
sbb
jmp
inc
inc
arpl
in
adc
dec
ror
cmp
push
or
inc
int3
in
(bad)
mov
rcr
sbb
mov
das
nop
jb
xchg
mov
jno
dec
xchg
inc
popf
shl
inc
das
or
data16
pop
test
push
mov
xchg
pop
jno
test
xlat
mov
sbb
fistp
mov
out
ror
inc
jbe
mov
jno
div
rcr
add
inc
pop
(bad)
xor
pop
mov
lea
ins
and
lds
cmp
inc
mov
icebp
pop
cwde
les
jge
or
and
cmp
std
jp
jns
mov
sbb
mov
adc
inc
mov
mov
out
xchg
or
or
adc
adc
and
add
fistp
retf
fwait
adc
cs
sti
mov
xchg
cmp
jne
adc
xchg
loope
cmp
js
repz
hlt
les
ins
sbb
mov
cmp
pop
cmp
mov
dec
dec
out
iret
or
pop
popf
fld
stc
dec
cli
xchg
bound
out
sbb
daa
jbe
push
je
sbb
retf
cmp
fisub
mov
fild
push
cwde
xchg
std
adc
(bad)
out
out
out
push
daa
enter
fadd
mov
cmps
sub
and
mov
lods
aaa
fwait
gs
(bad)
jo
cli
mov
inc
mov
sar
push
mov
push
mov
and
call
mov
inc
cmps
mov
test
xlat
xchg
sub
or
add
cmps
rcr
jl
mov
xchg
push
cs
xor
daa
inc
cmps
imul
dec
pop
movs
dec
inc
aaa
out
push
dec
mov
xor
aas
sub
fnstcw
lock
dec
rcl
mov
test
and
mov
and
into
sahf
jle
jge
call
gs
int3
push
push
outs
rol
cmc
fimul
dec
lea
mov
hlt
test
push
loope
fisub
jnp
jo
imul
or
xor
pop
fadd
jmp
in
(bad)
xor
repz
repz
jne
xor
std
rcl
jge
out
jns
pop
add
imul
xor
jnp
in
dec
les
push
scas
aam
xor
adc
cmp
cld
sub
cmp
lods
in
mov
aas
test
sbb
sbb
jmp
pop
(bad)
and
jp
push
xor
addr16
push
call
in
cmp
dec
rcl
and
adc
stos
pop
jp
into
push
push
ins
push
jecxz
inc
in
cmp
cmc
jecxz
pop
cs
jmp
aad
ss
or
inc
fimul
add
xor
int
sbb
lea
test
in
mov
mov
or
jmp
xor
xor
push
adc
mov
push
lea
popa
fidiv
adc
outs
sub
jmp
add
or
xchg
xchg
shl
sub
(bad)
cli
cs
cmp
je
out
mov
cmp
dec
pop
sub
xchg
(bad)
clc
sbb
ficom
jb
cmp
mov
xchg
jmp
xor
dec
mov
sahf
dec
xor
add
or
xchg
jl
lods
mov
jns
mov
pop
push
out
xchg
xchg
popa
and
jne
retf
and
jbe
dec
adc
stc
mov
xor
mov
jae
xlat
(bad)
std
lahf
sbb
outs
add
movs
pop
sbb
js
ret
sub
inc
xor
xchg
ins
mov
and
mov
jmp
lods
fadd
push
stos
xor
(bad)
std
xchg
xchg
sbb
cmp
rcr
push
fyl2x
inc
jnp
scas
push
ret
push
imul
and
mov
lahf
shr
fist
push
and
imul
sbb
(bad)
rcl
or
leave
repnz
mov
xchg
inc
adc
jae
xchg
pop
mov
outs
jmp
lea
push
daa
cwde
jmp
imul
pop
mov
xchg
pop
lahf
add
imul
sub
cli
scas
mov
push
adc
imul
push
rcl
or
lds
mov
ins
lahf
(bad)
imul
je
out
and
mov
ret
sbb
dec
sbb
xchg
popf
xor
xor
cmps
fild
and
arpl
sub
push
pop
aad
xor
aam
push
rcr
outs
mov
imul
arpl
in
popa
mov
mov
xor
adc
leave
fidivr
sub
jp
xchg
mov
cld
push
mov
into
lds
loop
lahf
and
xor
xchg
(bad)
dec
cmps
fldcw
ss
jne
pop
push
inc
mov
sub
vmovss
cmp
add
cmc
outs
mov
loopne
cmps
scas
xchg
or
xor
add
fisub
loop
imul
xor
fstp
fnstsw
xlat
xor
mov
jge
(bad)
cli
jg
xor
xchg
mov
stos
jmp
sbb
inc
fs
mov
push
push
lods
push
push
push
clc
push
dec
add
addr16
arpl
(bad)
jo
data16
inc
in
sub
jg
add
push
je
pop
rcr
call
jmp
lods
inc
cmc
mov
adc
test
mov
xor
sbb
mov
in
ins
sbb
jnp
cmp
dec
add
and
sub
mov
pop
mov
sar
imul
ret
mov
inc
ins
mov
sub
nop
call
dec
inc
and
jnp
cmps
stc
xchg
out
lock
inc
mov
jmp
jbe
xchg
nop
repz
pop
pop
mov
inc
cs
mov
mov
mov
add
je
sub
push
fcmovnbe
sub
sbb
je
imul
(bad)
xlat
mov
(bad)
jg
popf
outs
ds
(bad)
cmp
sbb
and
mov
cmp
push
jmp
repnz
mov
aam
test
or
aad
push
sub
enter
sbb
shl
push
pop
mov
jno
into
daa
cmc
xor
push
lods
cmp
push
mov
ret
and
je
pop
test
adc
add
add
mov
dec
push
ss
mov
in
jmp
dec
and
hlt
jge
fld
mov
xor
inc
mov
jmp
mov
(bad)
cwde
inc
xchg
jae
pop
ret
mov
jecxz
fnstenv
inc
bound
test
xchg
mov
es
mov
es
sti
(bad)
mov
call
adc
scas
stos
rcl
rcl
inc
aaa
int
mov
mov
in
scas
pop
mov
test
sbb
mov
in
pusha
sub
gs
aas
jp
or
stos
(bad)
mov
mov
jae
in
dec
leave
xor
(bad)
out
dec
mul
sub
and
mov
pop
or
pop
mov
sbb
outs
bound
xor
stos
call
enter
addr16
lods
dec
aad
xchg
in
xchg
push
mov
fs
push
sbb
adc
cs
std
mov
jmp
sub
dec
fild
stos
xor
hlt
and
ficomp
cmps
sub
not
mov
push
pop
(bad)
mov
stos
ins
push
mov
mov
push
(bad)
cli
jns
mov
psubusw
dec
inc
jo
jno
lods
mov
in
and
inc
cmps
dec
sti
je
retf
or
sbb
push
add
pop
out
sbb
jne
add
fidiv
(bad)
cmp
dec
mov
mov
push
sub
xchg
ret
or
div
test
sbb
mov
jg
dec
sbb
cld
mov
cmp
lea
jbe
movs
sbb
xor
mov
xor
fist
or
xor
inc
and
psrlq
jmp
inc
pop
sti
sbb
pop
push
rol
mov
sbb
or
es
inc
mov
xor
xor
xchg
dec
inc
cld
lock
jg
clc
mov
into
mov
jmp
dec
mov
int
push
int
adc
stos
adc
call
xor
fcom
dec
push
lds
add
pop
pop
cmp
xor
and
leave
xor
repz
pop
push
pop
xor
mov
xchg
(bad)
mov
ret
cs
shr
fisub
sti
clc
lea
test
sti
lods
dec
xchg
mov
inc
mov
inc
or
sbb
retf
mov
mov
mov
arpl
adc
mov
xchg
sbb
push
pusha
adc
add
push
dec
jbe
jmp
data16
jg
addr16
jmp
mov
test
cmp
std
sahf
cli
sub
jb
test
mov
mov
xor
push
cmp
xor
bound
push
xchg
push
jbe
mov
adc
add
scas
cwde
in
les
shl
fs
sahf
not
clc
rcr
hlt
sub
movs
cwde
inc
frstor
in
and
push
xor
(bad)
je
cmp
mov
mov
sbb
pop
test
pushf
inc
stc
test
and
mov
add
mov
jbe
(bad)
mul
int
mov
xor
fild
xor
jp
pop
cmps
xchg
popf
xor
push
mov
cld
or
movs
ss
jnp
mov
imul
mov
jmp
pushf
push
jecxz
iret
rol
nop
dec
lock
mov
mov
ins
les
inc
xlat
sub
cmp
xchg
ret
pop
mov
ins
rcr
mov
out
sar
(bad)
jl
push
xor
xchg
outs
xchg
jmp
add
mov
out
and
mov
sub
push
jge
cld
pop
sbb
fs
inc
(bad)
and
mov
pop
imul
fidivr
push
or
outs
dec
mov
pusha
xor
outs
rcr
(bad)
mov
jns
cwde
adc
mov
repnz
fcomi
ret
aad
movs
pusha
jmp
push
push
out
pop
mov
(bad)
cdq
lock
sbb
(bad)
mov
fsub
outs
sahf
pop
fldenv
dec
sbb
and
div
jb
scas
(bad)
aad
(bad)
jb
sbb
sub
loopne
jmp
mov
or
test
xor
or
adc
or
aas
mov
test
pop
jp
jno
fmul
call
jo
add
nop
add
fs
addr16
pusha
and
test
rol
lahf
mov
dec
sub
int3
lods
jae
push
xlat
or
ins
repnz
out
dec
dec
(bad)
clc
xor
jp
cmp
cs
pop
inc
jmp
adc
in
push
(bad)
rcr
les
test
jns
mov
mov
test
mov
sub
call
movs
test
ins
test
push
out
mov
inc
dec
sub
(bad)
cmps
cld
into
mov
sbb
call
dec
pushf
sbb
push
imul
iret
push
or
mov
dec
in
test
nop
int
jmp
sub
cs
jge
(bad)
stos
sbb
xor
sahf
sysexit
das
push
adc
call
fdivr
jbe
jmp
popa
outs
test
fwait
jmp
jb
add
addr16
cmp
ror
into
mov
mov
test
add
loopne
lea
mov
xor
into
jnp
push
fs
push
mov
movs
jnp
fcmove
out
cmp
ins
adc
popf
cs
into
cmps
fisubr
inc
adc
jb
add
aam
jmp
push
push
sbb
movs
xchg
sub
mov
leave
sub
in
(bad)
aam
loop
sub
jle
sub
dec
mov
scas
add
sti
jbe
inc
jge
cmp
mov
(bad)
leave
add
jb
movs
xor
or
adc
test
call
sar
gs
pop
xchg
fpatan
int
out
rcl
dec
fidiv
bnd
jae
ds
push
inc
jb
xchg
cwde
jg
sti
inc
or
daa
in
pop
das
rol
sbb
mov
jb
jecxz
repz
shr
jmp
mov
cmps
addr16
jne
stc
in
or
pop
out
push
xchg
inc
and
push
pop
cdq
repnz
mov
sbb
(bad)
in
fwait
mov
out
lock
jb
pop
pop
push
or
shr
js
xchg
ja
push
fmul
retf
sub
pushf
cdq
cld
out
add
mov
sub
mov
push
and
cmp
cdq
fwait
mov
inc
test
adc
call
test
sbb
out
retf
dec
aaa
inc
pop
aaa
cld
rep
push
out
scas
in
cmp
push
xchg
xor
enter
mov
js
popa
mov
sub
icebp
mov
(bad)
scas
push
cwde
stos
sub
push
retf
xor
sbb
sub
adc
push
leave
movs
sbb
push
push
and
int3
hlt
stos
sub
sbb
outs
dec
test
sti
cld
imul
inc
mov
xchg
cmp
or
mov
pushf
xor
and
adc
aas
mov
mov
cmp
jmp
mov
push
cmp
pop
pop
shl
xchg
call
sub
mov
dec
(bad)
mov
cmp
es
aas
sbb
cld
push
not
adc
jecxz
aaa
sbb
inc
sbb
push
jp
ins
fwait
jge
jecxz
arpl
int3
push
inc
fnsave
jmp
jbe
adc
sbb
add
add
in
add
stos
repz
mov
sar
ss
jns
mov
xchg
and
lds
cmp
mov
in
in
repnz
jge
stos
xor
sub
push
retf
cwde
cld
xor
push
cmp
or
lea
add
sub
jle
xlat
stos
xchg
outs
fdiv
js
cmps
add
jg
xchg
sub
fwait
push
js
jmp
into
jmp
mov
sbb
fmul
jo
(bad)
xchg
outs
xchg
push
(bad)
and
add
inc
push
clc
bound
pop
in
push
jbe
cli
enter
fnstsw
jno
mov
sbb
mov
xchg
push
dec
adc
jnp
pusha
cmp
mov
xor
es
mov
and
aas
aam
pop
sub
sbb
rol
arpl
push
fst
cwde
call
push
xor
test
xor
arpl
sub
push
rol
sub
imul
mov
push
adc
and
aaa
push
pop
cs
dec
mov
pushf
les
int3
cmps
adc
lods
sahf
sbb
xchg
rcr
fsub
iret
xor
call
adc
aaa
push
dec
or
stc
pop
cs
ret
std
mov
pop
cmc
cli
dec
pop
sbb
push
push
ret
dec
push
mov
(bad)
int3
pusha
jmp
mov
inc
jg
ret
or
adc
push
mov
xor
mov
mov
mov
jbe
mov
fild
cdq
push
push
loopne
aaa
outs
shr
jae
nop
pop
dec
cmp
sub
test
dec
inc
xchg
inc
std
pop
mov
or
cmp
dec
fsubp
nop
addr16
and
aaa
sbb
ins
movs
fwait
and
into
mov
loope
push
inc
cmp
push
shr
xor
shr
daa
cmps
inc
dec
clc
pop
xor
ret
xor
sar
push
xor
cmps
add
dec
lods
xchg
pop
inc
dec
ret
mov
sbb
(bad)
cwde
mov
nop
mov
jecxz
mov
add
add
push
loopne
mov
push
xor
int3
inc
xchg
add
es
push
jae
mov
xchg
xchg
jmp
in
retf
adc
scas
dec
mov
add
out
popa
xchg
fimul
int3
bound
jecxz
jo
mov
clc
or
ins
stos
pop
inc
cs
sbb
idiv
sbb
aam
and
push
push
ins
and
and
shr
arpl
jmp
popa
fwait
mov
stc
add
pop
lahf
ds
in
pop
and
xlat
bnd
mov
hlt
mov
pusha
mov
arpl
out
sbb
add
mov
or
in
test
xchg
adc
xchg
sbb
xor
adc
inc
repz
in
dec
out
div
jne
push
pop
mov
jbe
sbb
pusha
xlat
xor
imul
mov
into
leave
into
jg
(bad)
mov
movs
xchg
cmp
out
repz
add
rol
lods
dec
pop
fs
mov
pop
dec
adc
cmp
or
pop
cmp
fsubr
push
xchg
int
mov
and
cdq
adc
stc
mov
mov
adc
sbb
jle
cld
push
xor
fisubr
addr16
ins
sbb
mov
pop
xor
cdq
push
ficom
xor
cld
cs
test
and
mov
mov
cmp
cli
sbb
cld
mov
mov
mov
pop
mov
retf
xchg
aad
cmp
adc
test
adc
xor
(bad)
mov
push
outs
dec
mov
sti
and
and
fnstenv
adc
jmp
mov
fadd
jl
mov
jno
or
push
ror
jge
sbb
loope
dec
jne
push
push
test
(bad)
lods
push
test
(bad)
(bad)
in
test
mov
sbb
xchg
lea
mov
push
scas
lds
cmp
pop
sahf
and
stc
or
test
(bad)
jmp
sbb
es
fsubr
std
and
mov
mov
iret
add
adc
sbb
mov
test
pop
mov
dec
cmp
dec
cmp
mov
scas
cmp
call
cmp
add
pop
inc
dec
shr
aad
inc
fucom
outs
xchg
movs
add
or
mov
push
in
enter
mov
mov
sbb
outs
xchg
ins
ficomp
ret
rol
in
cmc
and
movs
inc
dec
in
push
push
repz
pop
dec
pop
in
in
in
dec
xchg
out
or
and
scas
js
in
and
adc
je
test
sbb
mov
mov
push
arpl
aas
push
push
xchg
daa
in
fbstp
cmps
jbe
(bad)
push
cmp
inc
test
ss
sub
pshufb
sar
(bad)
pushf
xchg
jp
mov
lods
inc
les
pop
inc
addr16
dec
aaa
pop
lock
or
dec
jecxz
push
dec
fchs
test
enter
dec
div
push
ret
and
add
ja
jnp
inc
push
dec
sub
movs
push
mov
jne
and
shr
inc
mov
pop
lock
mov
mov
adc
aam
out
jae
jge
sbb
aam
clc
lods
sahf
or
cmps
push
cwde
dec
call
adc
add
js
fwait
dec
cmp
pop
(bad)
imul
rcr
jo
movs
or
mov
cld
std
out
pop
cmps
fsubr
mov
mov
jnp
mov
icebp
inc
xor
mov
icebp
imul
test
sbb
and
sar
cdq
mov
aaa
ins
pop
jecxz
push
jg
mov
pop
shl
sbb
adc
push
imul
jp
movs
and
dec
mov
ins
pop
inc
dec
add
or
jmp
mov
in
mov
xchg
mov
lsl
jge
and
jbe
inc
or
(bad)
inc
xchg
lahf
lds
jnp
lock
sub
pushf
pop
xchg
and
mov
es
cmps
shl
adc
data16
cmp
mov
retf
mov
push
daa
add
add
xor
popf
mov
sub
inc
mov
loop
mov
and
mov
add
out
pop
push
lahf
or
fcmovu
es
add
(bad)
adc
inc
lahf
les
and
mov
xchg
cmc
cmp
xchg
xor
je
jmp
daa
lock
mov
cmp
fwait
rcl
shl
mov
jge
cmc
jb
sbb
popa
inc
imul
jge
mov
xchg
jb
cmp
pushf
cmps
inc
push
iret
les
cmp
imul
inc
(bad)
jbe
pop
icebp
lahf
sub
clc
cmp
mov
xchg
dec
stos
push
addr16
fst
leave
and
fcmovb
test
pop
sti
xor
repz
hlt
mov
push
arpl
popa
scas
rcl
cs
mov
pop
les
js
pop
ficomp
out
push
mov
(bad)
mov
and
mov
mov
sti
bound
fmul
inc
mov
mov
into
std
cmp
lods
push
dec
push
sub
lock
and
fst
or
shl
sub
(bad)
pop
test
mov
sti
sbb
aad
retf
inc
test
retf
test
add
adc
push
(bad)
mov
mov
dec
test
(bad)
xor
call
lds
sub
lods
cmps
loop
mov
sbb
adc
in
pop
ss
fisubr
loopne
xor
ficom
sbb
sbb
xchg
shr
aam
add
fld
or
add
div
in
or
jle
or
sar
and
loopne
xor
leave
out
call
inc
or
dec
(bad)
pop
xchg
lods
out
push
push
mov
mov
sbb
int3
mov
movs
jg
sar
xchg
retf
in
mov
(bad)
mov
adc
ja
jbe
mov
cs
in
mov
pop
jmp
test
xchg
adc
inc
inc
icebp
sar
mov
dec
mov
ret
inc
pop
push
and
repnz
push
pop
je
cli
or
int3
scas
es
aas
aaa
(bad)
iret
xchg
xchg
jo
sti
ds
out
mov
jmp
pop
aam
fld
xor
test
call
mov
inc
ins
lahf
leave
in
xchg
int
fidiv
add
cdq
test
mov
stos
lds
and
mov
test
pop
jg
adc
mov
in
call
sub
and
push
int
popa
fimul
addr16
popf
xchg
jge
or
mov
je
out
ins
je
adc
and
dec
sbb
mov
outs
popf
dec
(bad)
retf
mov
or
pop
sub
jne
aam
xlat
ja
push
pop
mov
cmp
or
xchg
pop
sbb
std
and
mov
movs
in
mov
(bad)
pop
dec
int3
pop
addr16
xor
xchg
sbb
aam
push
dec
test
pop
mov
inc
stc
(bad)
stos
fucomp
fs
ins
out
pop
or
push
jbe
xor
int3
cld
adc
je
mov
inc
cdq
mov
bnd
jp
pop
mov
push
retf
mov
imul
sbb
outs
data16
or
not
(bad)
lds
adc
cmp
mov
push
cdq
sub
mov
add
aaa
cmp
add
hlt
mov
imul
push
dec
outs
aam
adc
adc
movs
loope
test
sub
ss
sbb
fmul
outs
adc
pop
jmp
(bad)
xor
std
pop
add
sbb
test
sbb
pop
pop
push
push
(bad)
out
aaa
inc
js
and
xstore-rng
cmps
sub
inc
push
mov
jmp
js
in
sbb
in
push
sub
int3
fcomp
pop
dec
xchg
fdivp
jb
adc
(bad)
mov
popf
pop
and
enter
xchg
push
shl
inc
xlat
daa
xchg
sahf
shl
lock
ins
clc
js
cmp
xor
jmp
inc
sub
pop
mov
xchg
push
and
jg
into
imul
inc
mov
ficomp
loope
(bad)
dec
lods
cs
aas
mov
(bad)
jmp
dec
pusha
add
rcr
ins
sub
pop
jmp
dec
jns
inc
div
out
xchg
xchg
inc
pop
xor
push
mov
shr
xlat
retf
and
imul
nop
(bad)
aas
in
inc
mov
push
std
jmp
call
popf
or
repnz
mov
inc
xor
and
xchg
sub
pop
repnz
xchg
fbstp
mov
xor
adc
and
mov
mov
jmp
icebp
in
retf
leave
adc
int
push
mov
xchg
ret
xor
std
xor
fisub
fmul
inc
gs
pop
loopne
xor
cmp
aam
(bad)
dec
jg
sbb
adc
dec
jns
test
stos
adc
add
js
or
cmp
retf
ret
or
xor
popf
loopne
mov
adc
hlt
aas
xchg
cmc
repz
pop
sbb
sti
movs
scas
aam
pop
rcl
ret
arpl
mov
mov
cwde
pop
add
mov
hlt
sbb
mov
(bad)
cld
cmp
jmp
pop
adc
jg
mov
loope
repnz
fsub
clc
stos
std
pop
mov
jbe
xor
scas
and
pop
mov
sti
scas
lahf
mov
aaa
dec
sbb
das
sbb
stc
push
movs
aas
fisttp
cmps
inc
cmp
jmp
dec
leave
aam
aam
mov
xchg
xchg
push
push
das
push
sti
add
dec
adc
lahf
std
aad
or
sub
mov
xor
push
outs
loopne
cli
mov
das
mov
data16
retf
(bad)
enter
and
sbb
mul
and
cmp
push
mov
ja
bound
jbe
mov
mov
xchg
jmp
fdiv
call
loopne
mov
dec
call
or
mov
arpl
mov
pop
pop
or
in
mov
cmp
jecxz
aam
mov
jb
stc
shl
call
inc
mov
cmp
or
adc
lds
push
inc
or
pop
push
loop
mov
adc
xchg
xchg
sub
dec
jo
pushf
loopne
dec
enter
iret
fidiv
add
cs
mov
pusha
mov
adc
push
adc
lds
mov
mov
mov
movs
jnp
sub
aad
sbb
jmp
hlt
iret
int3
push
je
icebp
pop
push
popf
adc
test
mov
test
(bad)
test
dec
frstor
push
les
mov
aas
mov
mov
idiv
sti
cld
test
int3
ret
xchg
mov
ja
xor
ja
mov
jnp
movs
and
sbb
ins
dec
arpl
mov
pop
loopne
imul
enter
repz
xchg
sub
cmp
jns
xlat
call
and
ret
jne
cwde
fcomp
fcmovb
ret
in
jae
pop
repz
in
pop
sbb
imul
scas
pop
jnp
out
arpl
scas
or
sbb
stos
leave
icebp
xchg
jmp
(bad)
iret
dec
add
sub
lods
cmp
mov
fst
cmp
lods
xchg
adc
ins
push
fnstenv
mov
push
push
(bad)
cmp
jmp
add
outs
popa
pop
in
push
fst
or
data16
int
outs
xchg
mov
jp
popa
sbb
jge
test
pop
(bad)
in
xor
jp
jmp
mov
fcmovne
addr16
mov
adc
test
emms
jae
aad
ins
sar
mov
cdq
jnp
int
jo
pop
loopne
xchg
adc
mov
mov
sub
hlt
and
xchg
pop
or
jle
popf
in
scas
xchg
dec
outs
cmp
adc
imul
cmp
pop
fstp
mov
cmps
adc
xchg
dec
cdq
push
outs
test
daa
add
retf
sbb
add
mov
mov
jae
test
and
ja
in
adc
ficomp
imul
mov
test
sahf
je
lods
pop
cmp
fadd
loope
jmp
mov
mov
shr
fidiv
loop
pusha
cmp
xchg
scas
mov
jmp
ins
fld
sahf
fwait
dec
and
mov
mov
outs
mov
cwde
das
adc
xor
sbb
cli
inc
mov
pop
packssdw
jb
mov
pop
pop
mov
cmp
sub
retf
xor
jecxz
pop
imul
xchg
sti
out
out
loope
fst
call
fisub
movs
or
fcomp
or
sbb
push
stos
jbe
mov
lock
or
(bad)
es
pusha
lods
push
mov
imul
push
push
adc
pcmpeqb
ja
push
lods
add
sub
leave
hlt
ins
jae
imul
dec
or
mov
jmp
loopne
(bad)
shr
scas
mov
jb
(bad)
iret
sbb
stos
fist
push
xchg
push
sbb
sar
call
sbb
test
rol
retf
mov
test
les
sbb
pop
iret
stos
add
pop
xlat
jnp
add
pop
aaa
in
sub
test
push
jle
mov
xchg
xor
jecxz
pop
mov
dec
mov
jnp
iret
das
(bad)
imul
mov
repnz
js
dec
pushf
xchg
jnp
mov
fdivr
(bad)
(bad)
std
ins
ret
and
int
add
push
adc
test
and
out
gs
out
mov
ss
adc
adc
scas
cwde
sbb
xchg
add
fstp
in
dec
jl
ja
test
mov
(bad)
mov
(bad)
stc
jmp
out
rcr
pop
sbb
push
in
add
xchg
jl
aam
(bad)
out
adc
fsubr
es
lods
sub
fisttp
jbe
fucomip
xchg
xor
cli
push
ret
fistp
retf
xchg
das
cdq
and
test
cwde
out
pop
les
mov
clc
push
leave
dec
mov
clc
cmps
push
mov
lods
dec
adc
pop
dec
mov
xchg
shr
retf
leave
dec
js
adc
into
pushf
and
je
out
dec
jmp
enter
into
jge
and
mov
mov
inc
je
sti
fwait
jle
pop
add
jmp
cdq
rcr
dec
aad
mov
xor
fs
xor
push
mov
jae
and
scas
xchg
mov
cmp
daa
mov
push
dec
outs
fcom
sbb
jb
xchg
mov
mov
mov
or
aam
daa
jb
push
js
jae
or
sahf
out
call
mov
mov
bound
jmp
add
lds
movs
cmp
in
mov
sbb
out
movs
neg
es
ins
cdq
pop
(bad)
inc
lods
mov
scas
pop
js
sbb
push
xchg
shl
in
sti
jne
push
xchg
inc
and
jl
mov
pop
dec
pusha
stos
xor
cmps
std
iret
push
outs
aas
sbb
sbb
mov
xchg
jl
xor
pop
das
xor
in
out
shl
loopne
gs
cld
xchg
das
jp
push
adc
dec
sub
push
xchg
cwde
out
and
mov
call
aam
int
pop
sbb
hlt
jp
loop
test
nop
xchg
mov
call
cmc
push
iret
pushf
add
xor
mov
scas
movs
je
ficom
aaa
sbb
pusha
dec
clc
iret
mov
pop
mov
mov
mov
nop
sar
push
push
dec
dec
or
mov
push
push
pop
and
adc
mov
cmc
xchg
addr16
dec
xor
inc
retf
xchg
add
inc
mov
cwde
fwait
pop
sti
xchg
inc
lock
psrad
mov
and
(bad)
lea
loope
jae
or
sbb
retf
ins
add
adc
iret
and
push
fsubr
aad
jno
(bad)
stos
test
(bad)
sahf
cmps
jmp
push
sub
aam
cmp
ret
cmp
out
jo
and
cmc
xor
xchg
inc
xchg
mov
ins
scas
sub
repnz
das
cmp
push
xor
not
addr16
xchg
jb
iret
fsubr
int3
(bad)
test
dec
daa
idiv
sub
mov
mov
push
xchg
mov
mov
add
mov
adc
rol
ds
dec
mov
xchg
pop
jp
sub
push
mov
push
stos
les
ds
popa
push
ja
js
(bad)
cmp
dec
mov
dec
ja
iret
sbb
or
pop
aam
push
fcmovnu
jbe
and
mov
nop
pop
push
inc
fld
or
jmp
icebp
mov
and
inc
stos
in
aas
push
mov
sub
push
add
or
ret
out
cmp
and
mov
pop
push
or
inc
dec
cmp
mov
leave
int
lahf
outs
rol
arpl
mov
loop
into
adc
xor
outs
push
jne
out
int3
loop
xor
jge
adc
jecxz
cwde
sbb
cmp
call
mov
fidiv
sti
sub
and
test
lock
dec
jno
mov
cwde
loop
sub
int3
sbb
jo
jbe
aam
loopne
push
adc
mov
push
rol
(bad)
lea
outs
mov
xchg
aam
fadd
and
es
push
f2xm1
test
push
out
or
stos
xchg
mov
pop
push
xor
push
(bad)
sub
mov
mov
add
popf
xor
fistp
or
mul
test
ror
cs
pop
or
adc
mov
ficomp
lods
push
loope
repz
xchg
sbb
in
aas
clc
xchg
mov
push
and
out
jns
retf
mov
sub
call
cs
sub
jmp
inc
js
xor
sar
ins
sahf
call
mov
pop
xchg
imul
jb
jmp
fld
sub
xchg
adc
xchg
(bad)
das
push
push
ja
jno
jl
jg
jmp
(bad)
lock
adc
mov
dec
cmp
and
pop
jp
mov
inc
sar
scas
push
popf
xor
aam
adc
add
test
jae
fldcw
xor
adc
idiv
call
call
mov
pop
jle
and
dec
fidiv
xlat
ss
dec
aam
mov
imul
push
int3
inc
or
fild
pop
popf
sar
adc
dec
push
ret
or
xor
xor
jmp
int
ins
adc
and
cdq
out
ins
test
lahf
push
scas
out
cmp
xor
mov
pop
sar
mov
push
pusha
push
scas
inc
shl
(bad)
add
add
cld
push
adc
adc
pop
(bad)
iret
fs
jmp
in
mul
jmp
mov
sar
stos
xchg
sub
js
mov
lea
les
xchg
pop
imul
ja
jmp
adc
pushf
movs
or
pop
add
mov
movs
nop
mov
pusha
out
mov
dec
movs
jge
ret
pop
call
pushf
push
push
jle
mov
push
pop
jne
lea
xchg
push
ds
add
push
fisubr
bound
repz
dec
daa
scas
movs
into
sbb
repz
ins
cmp
adc
pop
test
xchg
xor
repz
mov
shl
rcl
and
jge
das
jo
stos
cwde
stos
data16
cmp
fstp
cdq
inc
outs
jb
ds
add
aaa
mov
int
or
adc
cmp
sahf
jge
and
mov
sbb
mov
ds
pushf
pushf
out
jns
int
lea
xchg
mov
test
call
inc
sbb
xor
adc
inc
daa
mov
xchg
mov
sar
dec
mov
loopne
sub
out
inc
mov
and
das
stc
loope
mov
mov
push
ja
call
cmps
loop
and
data16
mov
jo
scas
cmps
pop
add
or
cmp
(bad)
stos
js
test
nop
sub
pop
xchg
mov
add
(bad)
(bad)
fst
push
ss
add
and
ins
fild
int3
xor
mov
fld
mov
inc
mov
inc
jl
mov
sbb
add
movs
gs
xchg
inc
js
push
or
int
push
mov
iret
lds
loope
packsswb
cwde
mov
push
adc
jp
out
pop
movs
xchg
mov
cwde
push
add
in
xlat
shl
ss
sub
xor
bound
xchg
inc
(bad)
mov
lods
pop
cmps
fsubr
or
test
movs
mov
cs
test
fistp
sub
enter
xchg
sub
cmp
femms
scas
sbb
test
je
add
sub
inc
imul
out
(bad)
cld
sub
adc
cld
imul
lods
mov
inc
inc
xchg
popf
sbb
dec
in
out
outs
or
jmp
shl
mov
int
test
ret
retf
mov
js
mov
jo
ds
add
inc
inc
sub
iret
ins
xchg
bound
ror
pop
xchg
dec
pop
mov
cdq
jb
lock
inc
cmp
mov
xchg
inc
add
js
mov
shl
aaa
rcl
in
call
and
push
mov
jmp
pop
in
fdivr
jno
ins
dec
mov
out
call
hlt
adc
mov
xchg
mov
mov
(bad)
dec
sar
cli
sbb
sub
or
jmp
cmps
inc
stos
aam
or
fld
cmp
mov
xor
push
idiv
shr
iret
cmp
dec
(bad)
or
inc
fcmovnbe
cmp
jl
jle
pop
lea
pop
mov
jns
mov
mov
nop
pop
cmp
bound
mov
outs
jb
adc
sti
ror
push
jno
test
fld
mov
and
cmp
ror
or
xor
cmps
jl
sub
jmp
bound
pop
mov
xchg
lods
mov
cmps
stos
pop
out
sbb
mov
stc
call
call
add
pop
mov
lahf
push
movs
fisttp
inc
mov
out
inc
cmp
lahf
(bad)
mov
inc
mov
into
xchg
mov
jne
jp
and
enter
shl
inc
mov
or
cmp
fist
lods
in
in
inc
sub
shr
sub
sub
jae
or
popf
jmp
daa
addr16
bswap
shl
sar
cmps
call
inc
xchg
cmp
cli
jge
xor
div
cmp
xchg
inc
cli
ret
sub
adc
push
cld
movups
cmc
adc
push
(bad)
jmp
(bad)
fidivr
sub
pusha
jbe
les
scas
mov
cmps
xchg
lock
sub
pop
setbe
dec
adc
mov
push
ins
aad
jmp
shl
bound
pushf
rol
jecxz
sbb
cmp
dec
xchg
in
data16
pop
xor
inc
loope
cli
sbb
and
xlat
mov
cmp
add
mov
dec
outs
retf
xchg
or
or
imul
mov
stc
mov
jne
or
test
dec
pop
jmp
fwait
jno
inc
jne
shl
sub
in
mov
add
outs
push
out
xchg
imul
mov
add
mov
(bad)
ins
ret
in
mov
aaa
or
pushf
dec
sti
js
popa
jnp
adc
mov
dec
scas
push
leave
pop
mov
xor
mov
shl
mov
xchg
mov
neg
shl
lds
adc
xchg
popf
movs
mov
aas
rcl
mov
jno
mov
scas
enter
arpl
sub
jae
xchg
cdq
loope
jmp
nop
add
mov
jns
sar
fs
(bad)
xlat
in
lahf
inc
adc
ret
retf
fs
data16
ins
mov
nop
cmc
fstp
xor
in
cwde
add
mov
xlat
xchg
push
push
repz
mov
loop
xor
dec
or
stc
mov
xor
inc
shl
test
loopne
ror
inc
leave
stc
push
cmp
xor
rcl
push
jo
cmp
in
les
fs
bound
jb
shr
xchg
jge
sub
test
dec
or
shl
mov
dec
int3
xchg
mov
in
mov
daa
iret
push
in
mov
jle
lods
cmp
mov
cwde
xlat
and
dec
sub
inc
and
fs
or
push
push
lahf
push
js
mov
mov
and
pop
add
add
add
and
xchg
adc
pop
mov
mov
adc
mov
sbb
out
neg
popa
or
pop
jnp
jno
xor
mov
ja
loop
aas
out
(bad)
in
shl
pop
in
rcl
adc
mov
call
loope
cmp
das
and
lock
add
dec
cli
test
adc
sbb
add
mov
(bad)
out
mov
dec
sahf
push
mov
xchg
loop
hlt
ds
icebp
pusha
xor
lock
adc
(bad)
repnz
bound
dec
xchg
sahf
adc
cmc
int
jge
retf
push
xor
mov
inc
mov
or
add
sbb
mov
out
pop
loope
inc
inc
sub
mov
xchg
dec
popa
add
ror
(bad)
retf
imul
jge
xor
jbe
je
sub
mov
sar
int
sbb
add
mov
inc
int3
outs
fld
bound
and
add
out
jb
cmovae
shl
sar
jle
aaa
and
mov
mov
fldcw
add
call
mov
inc
bnd
and
cdq
loop
add
in
stos
pop
dec
pop
inc
xor
xlat
pop
leave
or
int3
shl
or
aas
jge
pop
xchg
push
loopne
sar
lods
xor
stos
hlt
lods
push
movs
jns
(bad)
pop
mov
aam
cmps
sar
push
iret
adc
push
jb
nop
das
sub
retf
mul
sbb
retf
cmovbe
pop
popa
xchg
shr
pop
rol
popa
dec
aas
sbb
push
jnp
jmp
jae
inc
inc
pop
pop
sbb
inc
xchg
pop
jae
cmp
lahf
mov
cwde
pushf
xchg
fwait
pop
push
call
outs
aaa
and
jecxz
fsub
pop
xchg
mov
loopne
jg
push
shl
(bad)
daa
paddsw
jae
mov
fdivr
and
sbb
fbld
or
jmp
xor
cmp
jg
imul
adc
js
mov
imul
shl
or
mov
xor
repz
mul
cmps
ficom
nop
mov
jne
push
add
adc
sbb
rcl
jnp
or
mov
mov
dec
mov
retf
aaa
add
ss
outs
jmp
loopne
loop
icebp
dec
ret
cmc
push
jmp
mov
fcmovnb
or
dec
daa
push
mov
(bad)
sub
(bad)
mov
bound
inc
mov
adc
dec
out
retf
fwait
in
stos
inc
push
jns
push
retf
outs
movs
sbb
or
arpl
push
(bad)
xchg
test
dec
imul
in
in
dec
dec
pushf
dec
shl
test
jl
jb
push
out
xchg
inc
inc
cbw
jmp
movs
adc
cld
stos
shl
mov
fmul
pushf
jnp
cwde
stc
mov
leave
icebp
les
push
lods
sahf
jmp
add
and
test
test
sar
(bad)
jle
xor
cli
sbb
xor
cmps
cmp
movs
aaa
mov
cmp
retf
xchg
ja
lahf
jmp
sub
xor
lods
inc
std
dec
mov
xor
and
dec
fs
aaa
mov
jmp
dec
fidiv
inc
in
jns
mov
pop
cli
ficom
ficom
cli
push
or
(bad)
fs
xchg
sub
dec
pop
add
in
cmp
je
mov
jns
movs
sbb
ins
inc
mov
dec
adc
and
add
fsubp
mov
mov
add
add
push
jnp
jne
jns
out
mov
rcr
xor
dec
jns
test
cs
pop
into
fs
ins
cmp
rol
xchg
bound
cs
cmp
fs
add
xchg
ret
mov
clc
xor
test
dec
lds
cli
hlt
xlat
out
lock
loopne
sub
ss
rcr
outs
inc
movs
retf
jmp
jle
mov
(bad)
sub
dec
out
dec
in
jl
in
mov
dec
repz
mov
les
stos
add
rol
mov
mov
leave
add
jmp
mul
imul
(bad)
and
or
sub
jnp
dec
push
je
add
xchg
cmp
ins
sub
inc
pop
lahf
sbb
(bad)
rcr
sub
mov
aam
pusha
cdq
xchg
inc
xchg
mov
add
push
mov
in
jp
das
cwde
pop
clc
(bad)
lea
push
into
cmp
push
adc
add
stos
cmp
sub
push
mov
cli
jge
dec
repnz
ja
in
(bad)
ret
inc
stos
cwde
jae
dec
jmp
cmp
cmp
inc
inc
enter
test
test
bound
sar
cmp
push
std
data16
imul
cmp
dec
mov
mov
inc
dec
fstp
sahf
jp
mov
test
(bad)
mov
mov
enter
cmps
sub
jmp
add
push
test
mov
ficom
repz
stc
mov
jmp
dec
mov
jle
ficomp
xchg
shr
pop
mov
jle
loopne
mov
retf
push
mov
mov
ret
call
mov
loop
pop
sub
push
push
or
pop
add
lahf
out
sbb
leave
push
xchg
out
add
les
out
inc
xor
mov
mov
push
and
gs
jbe
and
mov
pop
fld
nop
sub
out
pop
lods
xchg
in
push
lock
mov
sub
addr16
cmps
retf
mov
push
ret
lods
inc
lahf
rcl
int3
test
les
push
aas
(bad)
rcr
or
ficomp
sar
or
pop
sar
ins
in
fbld
dec
cmc
inc
pop
inc
sbb
test
jmp
or
std
push
daa
push
or
bound
call
jecxz
iret
fstp
cwde
pop
movs
sbb
mov
sub
ins
fbstp
push
stos
pop
(bad)
nop
push
and
mov
jmp
das
sub
call
scas
push
push
push
pushf
daa
inc
ffree
aaa
imul
mov
mov
xor
ds
jg
jnp
add
cmps
cmp
ret
cmp
mov
pop
fst
push
pop
(bad)
mov
inc
lea
lods
mov
push
or
scas
das
sbb
aam
loopne
mov
out
jecxz
test
in
push
cmp
xlat
stos
mov
sub
push
mov
fcomi
sub
jo
sbb
into
mov
int
nop
and
int3
adc
cdq
sti
jge
xchg
jne
sbb
mov
cmp
(bad)
cld
mov
out
cdq
rcr
sub
adc
(bad)
jbe
and
jmp
sar
push
sbb
aad
xchg
jmp
shl
mov
lock
movs
lods
jno
mov
dec
inc
arpl
jne
push
arpl
jbe
cdq
sti
arpl
dec
sub
push
(bad)
not
pop
dec
or
fs
inc
push
push
jmp
movs
push
test
push
dec
xor
mov
mov
mov
sbb
mov
dec
cmp
hlt
sbb
or
dec
jo
lods
adc
ins
hlt
retf
xor
ja
leave
aad
ret
add
dec
and
mov
(bad)
les
cld
sti
repz
pop
mov
push
mov
mov
les
or
push
inc
fisttp
loop
cmc
icebp
xchg
xchg
in
fld
jne
fwait
fs
xchg
cld
or
call
mov
mov
daa
in
jnp
push
xchg
popa
mov
push
cmp
pop
jge
(bad)
push
jns
mov
xchg
add
aad
jmp
loop
pop
jmp
addr16
push
(bad)
adc
ins
mov
lods
cli
dec
bnd
ss
pop
cld
ins
outs
sbb
call
ja
sti
ss
mov
mov
jmp
xchg
sub
inc
leave
dec
fsubr
rol
ss
sti
add
xor
lods
stc
jnp
in
hlt
mov
cmc
(bad)
mov
ret
xchg
stos
mov
lods
push
xchg
fistp
or
and
rol
jmp
cmps
mov
shl
sar
jbe
in
add
mov
cmps
mov
mov
and
btc
loop
or
sub
dec
xchg
jge
pop
inc
cmp
pop
scas
or
je
sub
fstp
dec
iret
ins
pop
add
jo
(bad)
shl
push
pop
mov
sbb
xchg
ja
adc
stos
mov
es
lea
ja
inc
imul
push
fadd
mov
and
outs
and
push
xchg
xlat
mov
push
cs
cmp
je
and
sahf
push
int3
loopne
or
adc
imul
jne
push
mov
mov
xor
mov
cmp
push
stos
dec
mov
shl
ds
bound
xchg
jbe
int
xor
and
jmp
retf
test
pop
mov
mov
or
or
stc
or
aas
(bad)
push
out
push
pop
movs
dec
dec
ins
inc
xchg
inc
mov
lea
push
cmp
lahf
pusha
cli
cs
and
sar
pop
cmc
add
push
push
xlat
and
sbb
sahf
dec
jmp
inc
xor
aam
retf
dec
push
or
arpl
les
repz
aad
movs
jns
repnz
and
sbb
fadd
pop
cmp
jmp
push
sub
popa
in
lods
les
mov
or
popf
ja
iret
imul
mov
pop
jne
mov
out
jle
stos
popf
fwait
(bad)
movs
dec
cmps
pop
cwde
or
pop
mov
cmp
push
pop
ror
in
push
xor
aas
dec
sbb
pop
ins
sub
or
jp
call
xchg
inc
pop
(bad)
push
add
pop
or
sub
in
push
repnz
je
rcl
push
out
xor
jno
std
fistp
call
retf
jo
xor
std
lods
sbb
mov
(bad)
push
scas
dec
repz
mov
xor
pop
gs
mov
fwait
hlt
sub
mov
out
inc
mov
xor
or
inc
(bad)
sar
sub
jbe
xchg
or
mov
sbb
(bad)
sti
push
sbb
hlt
xchg
out
jecxz
loop
pop
fsubr
dec
and
xchg
xchg
popf
jae
stc
mov
lods
clc
dec
xchg
mov
xlat
or
mov
xchg
mul
xchg
add
xor
jno
inc
stos
xor
mov
pop
mov
repz
loope
lock
and
dec
ins
ins
mov
jmp
add
jb
mov
dec
jne
enter
not
jl
push
xchg
lea
out
mov
scas
test
xor
mov
in
out
(bad)
cwde
mov
popf
dec
(bad)
arpl
xchg
aaa
sub
mov
dec
adc
dec
mov
and
mov
push
cmc
mov
shr
clc
popf
outs
inc
call
cwde
ja
pop
ds
mov
adc
cmp
sub
pusha
shr
or
cdq
sar
inc
adc
mov
mov
jno
xchg
mov
add
push
(bad)
pop
(bad)
hlt
sar
mov
dec
xor
xchg
jle
lock
pop
lahf
inc
mov
into
scas
dec
nop
adc
scas
enter
shl
mov
retf
retf
(bad)
imul
jge
in
dec
jp
gs
imul
aas
icebp
pop
ret
mov
mov
mov
stc
scas
pop
push
retf
sub
mov
xor
xchg
inc
repz
inc
aas
sub
es
not
stos
hlt
cmp
mov
fld
stos
pop
test
jae
xor
outs
repz
xor
std
pop
add
lock
push
xchg
loopne
cmp
fwait
mov
in
mov
aas
lock
dec
addr16
push
mov
ficom
xor
sbb
test
inc
enter
int3
(bad)
mov
xor
dec
int
lahf
je
mov
cmp
fisubr
repz
dec
or
cmp
les
add
jmp
lds
push
shr
movs
data16
rcr
adc
mov
mov
push
or
add
add
addr16
mov
fstp
sub
vpmacssww
and
rcr
dec
jl
add
xor
jbe
cli
js
xor
mov
test
sub
outs
sub
pop
mov
ja
cmps
ins
dec
das
mov
pop
shld
or
popf
pop
and
mov
ss
js
call
or
test
loope
or
jp
retf
push
add
xchg
dec
pop
nop
push
pop
in
sub
call
sbb
mov
jl
cwde
mov
mov
js
nop
lods
aad
adc
sbb
es
sub
jne
fcomp
mov
aaa
sbb
mov
push
cli
sub
cs
addr16
xchg
loopne
inc
jg
lahf
add
icebp
adc
inc
fsubr
fwait
stos
shl
enter
cmp
imul
rol
and
or
test
jle
sbb
xor
outs
mov
out
mov
jge
inc
fldenv
fcom
mov
test
sbb
jnp
fldln2
(bad)
fwait
push
push
jle
push
out
xchg
rcr
clc
shl
sub
cwde
ficomp
mov
ins
jge
bound
xor
cwde
xor
jl
mov
jne
jbe
fistp
in
loop
sbb
call
data16
popf
cmovs
ins
add
pop
(bad)
test
scas
dec
mov
sub
test
jbe
jle
pop
cmp
sahf
cmova
jbe
call
add
mov
je
lds
jbe
bound
popf
inc
js
call
mov
mov
xor
stc
push
mov
pop
retf
xchg
adc
test
fsubr
adc
(bad)
iret
push
retf
std
add
pop
jbe
or
(bad)
ja
jmp
gs
mov
xor
mov
inc
push
cmp
mov
mov
test
dec
imul
cmc
pop
movs
fdivr
push
xchg
push
pushf
test
daa
call
rol
stos
in
mov
cmp
retf
xchg
in
add
cld
mov
push
cwde
addr16
jg
inc
xlat
xchg
xchg
pop
push
inc
not
xchg
mov
mov
jl
push
rol
out
and
mov
std
inc
xor
and
sti
ja
adc
or
push
int
(bad)
stc
lods
mov
cmp
repnz
add
lods
inc
sbb
mov
lods
daa
cmc
jmp
push
pop
dec
lods
push
in
cmp
xchg
shl
sub
fsubr
lds
cdq
fadd
and
mov
cmp
out
xor
sub
in
xor
out
lea
mov
sahf
fisub
push
mov
and
into
or
gs
sub
and
sub
mov
cs
adc
xchg
(bad)
out
add
fist
(bad)
fucomi
lahf
sub
je
push
aam
leave
test
(bad)
xlat
arpl
addr16
dec
imul
repnz
shr
pushf
xchg
fldcw
repnz
xchg
fidiv
pop
repz
adc
push
jl
inc
(bad)
repnz
test
cmp
mov
push
sub
addr16
add
xlat
(bad)
or
mov
shl
outs
ror
inc
in
inc
retf
mov
mov
popf
imul
sbb
sub
xor
xchg
(bad)
and
and
ins
cmp
sbb
xor
inc
and
int
inc
mov
add
mov
shl
addr16
jge
pop
push
adc
mov
mov
jl
test
jmp
retf
fmul
pop
cmove
pop
fild
mov
je
pop
push
lock
lahf
inc
shl
xchg
test
fldcw
xchg
inc
mov
push
cwde
mov
lahf
sbb
mov
or
inc
inc
arpl
mov
stos
jo
clc
lock
sub
jbe
jg
test
(bad)
loope
jns
ror
jne
enter
(bad)
sub
cmp
fwait
push
inc
or
sti
dec
ficom
and
push
stc
nop
xor
aas
pop
icebp
dec
pop
pop
mov
and
push
inc
xor
or
add
shr
dec
add
dec
jbe
fprem1
arpl
ret
btc
or
test
jno
sub
adc
inc
cmp
aam
inc
pop
into
cdq
icebp
adc
push
cmps
adc
pop
test
inc
sub
movs
out
adc
test
pop
sub
and
push
jns
xor
mov
bnd
dec
xchg
dec
ror
cld
sbb
sub
ret
mov
push
push
test
dec
jmp
test
(bad)
sbb
aas
fs
addr16
movs
iret
das
add
imul
rcr
nop
pop
sub
mov
jle
dec
xor
mov
xlat
add
and
scas
dec
imul
inc
cs
fadd
fisttp
jae
sbb
xor
rcr
xor
and
adc
loop
sbb
fild
jl
mov
test
push
or
inc
call
bound
mov
idiv
jge
sub
shr
idiv
fistp
scas
lahf
push
ret
movs
cmps
jno
(bad)
(bad)
inc
adc
ret
xor
dec
into
mov
inc
push
(bad)
ds
sbb
mov
retf
in
mov
pop
movs
jecxz
adc
icebp
add
ffree
xchg
pop
mov
jl
sub
push
sub
lea
dec
into
sar
mov
leave
pop
call
in
and
dec
pop
push
int
lods
imul
or
sar
outs
xchg
int
and
adc
push
mov
adc
push
push
dec
outs
or
sbb
push
iret
and
fnstcw
aam
sti
(bad)
dec
lods
or
out
dec
push
push
jae
mov
inc
or
dec
inc
xchg
fidiv
pop
nop
xchg
mov
jnp
inc
ja
jle
dec
and
or
and
cld
shl
rcr
mov
push
inc
aam
xlat
jmp
push
mov
sub
iret
test
or
cmp
fld
and
pop
mov
test
adc
cmp
mov
and
out
dec
rcl
push
cmps
in
xor
cwde
inc
(bad)
mov
pop
lods
inc
pop
push
adc
pop
mov
push
int3
jmp
cdq
mov
repz
mov
call
jo
pushf
push
stos
rcl
pop
pop
inc
sub
push
xlat
not
inc
mov
or
jp
ins
neg
push
gs
sbb
lea
ss
push
cmp
mov
lods
shl
das
xchg
shl
hlt
fild
xchg
mov
inc
js
push
mov
aaa
sbb
mov
dec
cmps
push
cmp
in
cmps
and
jle
outs
das
jae
push
pusha
sub
mov
xchg
lods
mov
dec
jmp
mov
leave
(bad)
xchg
js
in
mov
mov
div
das
cld
ins
pop
fisub
jmp
loop
add
or
cmp
cmc
inc
test
push
test
mov
and
mul
cmp
(bad)
bound
outs
xchg
fdiv
icebp
ins
ficom
dec
into
mov
jp
mov
clc
jmp
and
fstp
or
loopne
lods
mov
jnp
ss
adc
mov
sub
and
lods
jge
adc
xor
push
adc
scas
repnz
jmp
mov
mov
pop
and
xchg
je
shl
xchg
inc
push
jo
inc
xlat
jle
mul
es
mov
cmp
mov
and
js
fsubr
mov
mov
mov
xor
add
fnsave
or
ins
push
xlat
scas
inc
add
add
pusha
aaa
cmp
clc
int
jecxz
xchg
mov
clc
pop
sti
mov
je
mov
pop
pop
jae
fsub
mov
mov
daa
cmp
and
jle
xchg
push
pop
jno
xchg
in
mov
ins
push
out
in
and
sub
mov
push
lods
sub
sti
xor
mov
push
sub
fcom
and
rcr
out
lahf
inc
mov
inc
ror
push
ins
mov
mov
out
pop
dec
and
push
mov
inc
test
cmp
(bad)
cld
fcmovne
aas
mov
clc
xchg
aaa
shl
mov
aam
mov
ds
stos
data16
mov
inc
inc
xor
mov
mov
cli
lods
hlt
or
dec
mov
jl
pop
pushf
aaa
pop
ja
xchg
xchg
mov
adc
mul
add
arpl
xor
adc
shl
clc
scas
fldenv
xor
inc
cmovg
sub
lods
and
push
jl
jns
das
arpl
test
fsubr
(bad)
and
pop
push
sub
cmp
or
or
cmp
dec
jmp
js
(bad)
fld
sar
dec
push
dec
pcmpgtb
jo
lods
push
arpl
out
adc
inc
pushf
xchg
(bad)
jo
enter
sbb
cmp
shl
icebp
cdq
dec
stos
pop
inc
outs
retf
int
xor
add
inc
adc
fistp
lds
cmp
jl
xchg
stos
jbe
int3
xor
or
mov
mov
neg
dec
adc
mov
mov
movs
adc
stos
or
and
pop
add
test
mov
inc
js
cs
jmp
test
mov
outs
pop
test
push
sub
inc
pop
into
dec
lods
(bad)
and
sbb
add
retf
popf
pop
lock
sbb
sar
lea
lods
or
popf
push
sub
lds
jns
js
pop
call
push
rcr
addr16
pop
jecxz
inc
jl
movs
cmp
dec
mov
pop
sahf
lea
xor
pop
call
out
fisttp
mov
pop
(bad)
jno
std
out
mov
ret
cmps
push
xlat
ret
mov
out
inc
add
inc
push
stos
jmp
scas
stos
inc
push
je
or
in
mov
push
shl
add
pop
or
into
loop
int
mov
xchg
mov
call
and
mov
daa
dec
push
ds
(bad)
aaa
xor
(bad)
(bad)
icebp
mov
mov
adc
lods
mov
push
jnp
cs
call
mov
and
xchg
xchg
dec
test
mov
daa
movs
leave
idiv
jns
inc
ins
dec
test
imul
js
div
adc
push
cli
or
out
(bad)
fnstsw
ret
push
inc
jl
cld
xchg
ficom
xor
outs
xchg
mov
fist
add
xlat
(bad)
int
cmps
sti
fnstsw
mov
dec
pop
mov
or
cmp
mov
mov
mov
cmp
mov
jae
jnp
pop
add
add
fdivr
movs
fimul
in
in
stc
adc
add
sub
inc
in
cwde
mov
push
cmp
cvtps2pi
aaa
sbb
in
jl
push
stc
mov
loop
js
jp
out
sub
outs
sbb
icebp
stos
call
cwde
ja
adc
push
cmp
sbb
jmp
test
adc
push
repz
stos
das
std
adc
or
nop
jnp
bound
out
mov
sub
xor
mov
inc
jo
cmp
sbb
jno
dec
fisttp
xor
add
daa
cdq
push
add
mov
mov
push
add
ins
es
fimul
lahf
sub
gs
xor
xrelease
xor
int
pop
xchg
loop
ss
gs
xadd
lods
lds
mov
or
popf
shl
leave
pop
sub
push
mov
cmp
fild
retf
adc
sbb
in
cwde
push
test
popf
loope
sbb
push
sbb
shr
push
jge
data16
ins
arpl
leave
out
or
jle
push
in
sub
pop
jecxz
pushf
jmp
add
or
xchg
stos
fdiv
inc
jmp
cmp
(bad)
je
scas
out
xchg
test
xor
or
je
xor
imul
sbb
mov
fcmovnbe
push
(bad)
into
cmp
out
ins
xor
push
cli
pop
scas
jg
mov
add
retf
sbb
mov
or
pushf
pop
js
mov
in
push
push
inc
push
loope
imul
sub
test
sbb
ficom
push
ins
nop
jns
loope
aas
inc
cld
in
mov
(bad)
inc
scas
pop
push
out
test
imul
or
mov
xor
loope
test
or
imul
retf
ss
sti
mov
fsub
and
xor
in
leave
cmp
daa
addr16
out
repz
mov
sar
mov
jo
xor
int
in
call
sub
pop
or
push
fisubr
or
in
mov
dec
mov
shl
xchg
shl
movs
call
outs
(bad)
mov
ds
mov
and
fs
sub
jae
into
jno
mov
stos
divps
xchg
add
cmp
ins
cli
and
das
mov
std
pop
je
sar
xchg
rol
mov
mov
movs
push
imul
cdq
xor
(bad)
pop
retf
xchg
adc
ror
dec
(bad)
pop
das
popf
dec
lods
cmp
mov
repz
sar
jne
fld
jns
xor
les
lods
ret
lods
jg
in
mov
sbb
cmp
fsub
sbb
(bad)
mov
rcl
adc
sti
mov
(bad)
fadd
stos
lahf
xor
adc
retf
sbb
dec
fcomp
pop
sbb
xchg
sub
lods
shr
cld
lock
pop
mov
pop
pmulhuw
jb
dec
sub
sbb
loope
add
sub
call
fcomp
fldenv
jmp
pop
repnz
les
pushf
call
jle
cmps
xchg
out
sub
mov
lods
jmp
xchg
cwde
xchg
int
aam
test
mov
les
ss
sbb
push
mov
mov
cli
jp
enter
pop
pop
adc
jno
fwait
ror
add
xlat
call
lods
or
xchg
xchg
mov
and
div
jnp
mov
popa
fbld
aas
fstp
jmp
xchg
cmp
fisttp
push
mov
xor
in
xchg
cmp
adc
ror
mov
inc
mov
jle
or
jae
add
jno
mov
xor
sahf
mov
push
lahf
(bad)
stc
mov
mov
xor
cmp
fdivr
mov
cmp
nop
jle
jmp
mov
xlat
sub
push
ss
(bad)
jmp
std
cmp
(bad)
outs
push
pop
dec
mov
bound
xchg
enter
push
lock
ins
jg
ja
gs
mov
pop
call
in
jo
jae
cs
movs
jmp
nop
mov
sahf
mov
clc
xchg
jg
test
adc
scas
push
cmps
cmps
shl
adc
cmp
sub
pop
scas
sub
ss
popa
icebp
int3
add
mov
xlat
push
jo
outs
mov
lods
mov
inc
call
inc
or
fs
xchg
lds
push
inc
lock
lods
loopne
xchg
or
mov
jecxz
jo
sbb
popf
jns
movs
pop
test
clc
repnz
jmp
xchg
sbb
xchg
or
cmp
data16
pop
(bad)
push
xchg
and
ins
jmp
mov
add
ja
ss
jne
inc
sub
xchg
cld
adc
jnp
pop
and
scas
xchg
(bad)
jmp
or
cmps
icebp
adc
inc
jo
in
sahf
xchg
lds
add
lods
arpl
push
jae
dec
mov
xchg
lds
jns
push
sbb
imul
cmps
xchg
adc
ins
mov
imul
jbe
shr
out
or
std
stc
ror
cmp
dec
cli
lahf
sbb
xchg
add
(bad)
repz
pop
test
xchg
inc
cmp
test
add
push
inc
push
lock
mov
aaa
pop
pop
pop
mov
add
mov
xor
fdiv
daa
fld
xor
aad
pop
pop
push
cdq
fwait
push
(bad)
test
jp
pop
push
arpl
jge
fsub
sar
or
sub
push
inc
adc
cmp
ret
popf
adc
cmc
push
stos
or
push
mov
pushf
sbb
fisub
adc
xchg
test
ss
jle
or
icebp
mov
aam
and
lds
cmp
fdiv
int
mov
not
mov
test
inc
jmp
jb
or
imul
push
sbb
arpl
push
push
stc
cmp
sar
pop
neg
or
in
icebp
and
dec
pop
(bad)
add
push
mov
jns
inc
jno
push
retf
push
ja
cs
pop
mov
adc
add
sbb
scas
addr16
xlat
mov
cdq
inc
jl
repz
(bad)
fistp
int3
push
adc
fisttp
fidivr
push
mov
gs
adc
out
dec
push
test
mov
inc
jnp
(bad)
into
and
scas
(bad)
sub
bnd
retf
sbb
mov
cmp
rcr
push
imul
lock
cmp
rcl
jns
cmp
imul
and
mov
push
lock
scas
mov
pop
jne
inc
push
push
inc
arpl
pusha
repz
gs
push
ja
cs
mov
cwde
jle
popf
cmp
sub
outs
movs
pop
ins
into
or
in
sbb
(bad)
xchg
mov
mov
dec
and
pop
jno
push
mov
dec
pusha
fdivr
ja
pop
sar
push
push
test
xor
ss
and
xor
ret
(bad)
ds
das
cmp
in
cmps
nop
icebp
mov
mov
jne
scas
add
sbb
sbb
or
cmps
mov
(bad)
sbb
test
ins
cmp
ficomp
movs
push
jo
push
ret
mov
aam
nop
cmps
xchg
cld
cmps
fist
das
and
mov
das
leave
js
popa
shr
or
lock
loopne
std
ffreep
cmp
pop
or
fisub
les
rcl
xchg
pop
xchg
das
jge
pushf
bound
sub
(bad)
mov
fs
sahf
xchg
pop
lods
sahf
dec
push
and
nop
cs
sub
and
iret
mov
mov
mov
out
push
push
jmp
mov
or
mov
mov
cmc
push
in
jo
add
dec
rol
xor
call
ror
lods
es
adc
xchg
into
jmp
push
pop
mov
pusha
mov
xor
sbb
les
push
and
mov
jle
int
sub
mov
lods
rol
sbb
jge
cmp
rcr
pop
aad
rol
scas
scas
jno
lock
(bad)
aad
cwde
je
bound
xchg
scas
cs
adc
jo
and
aad
outs
pop
pop
push
or
(bad)
push
adc
int
sub
fsubr
cmp
and
jge
and
pop
in
adc
test
imul
sbb
mov
sahf
adc
in
rol
iret
xchg
push
dec
(bad)
int
sub
jo
cmp
das
pushf
popa
or
xchg
xchg
dec
add
xor
mov
lahf
jae
push
pop
packssdw
sub
neg
outs
sub
loope
rcl
into
mov
jmp
mov
ins
push
in
add
adc
inc
jbe
push
pop
test
jge
movzx
and
mov
addr16
jle
sbb
dec
xchg
mov
mov
sub
push
and
sahf
prefetch
cmp
dec
sub
mov
sub
dec
jmp
bound
dec
push
out
aaa
ins
sub
call
add
cs
lods
push
fimul
fisttp
inc
push
icebp
and
cmp
xor
(bad)
leave
or
shr
adc
mov
jmp
and
push
outs
jle
js
shl
ja
inc
sbb
mov
ficomp
lock
repz
lods
hlt
clc
(bad)
jmp
xchg
lods
loop
imul
(bad)
scas
pop
repz
shr
pop
jle
push
mov
cmp
jae
mov
pop
mov
aas
inc
fistp
outs
xchg
bound
fstp
lds
cmp
xor
or
aad
(bad)
sub
dec
and
aas
xor
aad
js
jbe
cmps
mov
arpl
mov
xor
sbb
cmp
div
push
ss
cmp
nop
sahf
ret
arpl
jbe
mov
mov
cmps
jmp
lds
les
add
pop
mov
popa
cld
adc
xor
repz
mov
mov
xchg
push
adc
cmc
iret
in
ins
or
dec
lods
mov
mov
jl
cmp
xor
aas
inc
xor
sahf
imul
add
lock
iret
arpl
adc
in
jl
aaa
or
daa
lods
pop
jns
jbe
dec
lds
repz
pusha
add
cmp
mov
and
mov
xchg
push
jb
mov
mov
fidivr
sbb
scas
in
and
dec
adc
sahf
int
fdiv
cmp
mov
add
push
and
cmp
mov
mov
mov
mov
jl
mov
jbe
cmp
cmp
sub
(bad)
iret
cmps
test
push
pop
dec
mov
sbb
push
pop
fwait
push
mov
ins
addr16
xchg
test
or
retf
cld
mov
in
mov
(bad)
push
test
mov
inc
scas
fistp
int
aad
popf
or
out
cdq
pop
xor
adc
test
push
or
push
xor
imul
repz
retf
sub
and
mov
sahf
dec
and
cmp
pop
push
pop
icebp
sar
add
or
fcom
adc
mov
and
frstor
enter
push
xchg
dec
and
add
idiv
push
xchg
pop
hlt
mov
je
jge
jg
inc
jle
mov
lods
shl
into
inc
sub
test
iret
aad
sub
push
shl
xor
pusha
in
sub
or
cld
rcr
lea
pusha
push
nop
mov
(bad)
jecxz
or
(bad)
sub
ror
mov
stc
dec
movs
and
mov
sbb
cdq
dec
pop
lds
inc
movaps
pop
ins
shl
jmp
adc
add
daa
mov
dec
shr
mov
cwde
jo
int
lock
lods
je
in
test
dec
cmc
scas
adc
xchg
aas
popf
call
sti
das
out
jge
inc
mul
je
add
xor
out
push
adc
loop
mov
ja
xchg
shl
rcr
xchg
repz
in
and
or
xor
fnstcw
adc
push
and
push
add
and
call
cwde
test
movs
mov
jae
adc
add
in
dec
fadd
xchg
enter
and
push
adc
sar
stos
add
call
sub
ins
ds
xchg
and
sbb
xchg
iret
in
jl
cld
ds
inc
xchg
popf
jns
inc
loope
jmp
repnz
fld
es
xor
push
out
pusha
push
sub
lds
fdivr
mov
sub
sar
out
mov
mov
test
stc
mov
mov
push
mov
into
push
fild
sbb
sbb
jno
mov
sub
scas
test
lock
adc
call
cmp
out
call
xor
push
stc
lods
cmp
int
adc
into
dec
inc
cmp
sbb
ins
std
inc
pop
inc
stos
mov
mov
xchg
arpl
js
inc
push
mov
inc
aam
dec
adc
and
mov
mov
adc
(bad)
ss
jo
mov
xlat
sbb
mov
repz
sahf
sub
or
dec
xchg
push
scas
sub
and
mov
or
sbb
mov
lods
mov
retf
dec
cmps
test
inc
outs
inc
add
sahf
mov
pop
jmp
jnp
mov
ss
pop
cs
jne
leave
seto
or
dec
jbe
push
pop
sti
inc
jp
cmc
shr
mov
mov
out
and
push
sbb
push
ins
adc
fisttp
js
and
dec
imul
mov
sbb
inc
xchg
push
bnd
jne
and
shld
mov
xchg
dec
les
dec
in
outs
imul
and
jne
cmps
jnp
fst
sub
pop
clc
pop
retf
push
fcomi
cs
push
push
inc
out
push
ror
lea
jo
and
fimul
or
cmp
jg
pop
out
pop
cmp
nop
sti
dec
xlat
inc
sbb
mov
jmp
inc
add
clc
sub
jl
loope
and
pusha
fidiv
rol
int3
test
aam
add
push
cmp
inc
push
mov
mov
mov
cwde
mov
in
aam
arpl
adc
loopne
xchg
je
scas
popf
in
icebp
mov
jbe
dec
push
int
jecxz
int3
mov
add
push
adc
enter
inc
dec
gs
adc
retf
shl
inc
fs
cmc
jne
pop
inc
cwde
stc
xchg
rol
(bad)
int3
adc
inc
push
int
cwde
adc
std
repnz
and
outs
xchg
and
pop
pop
cli
push
sbb
outs
int
or
push
pop
fnsave
jl
mov
loopne
mov
mov
xchg
test
repz
and
ja
fstp
inc
(bad)
cmps
loope
ins
stos
or
adc
out
inc
mov
or
imul
cmp
xchg
iret
jno
or
add
stos
(bad)
fisubr
push
mov
aas
add
hlt
test
mov
loope
or
adc
fstp
pop
adc
inc
out
xor
cmp
imul
mov
js
mov
rcr
popa
push
out
jne
jns
popf
call
xlat
add
js
loope
icebp
cmp
out
jnp
loope
aas
js
add
xchg
pop
sbb
mov
dec
adc
daa
cmp
pop
push
jmp
ins
(bad)
std
or
xchg
jl
inc
push
add
mov
jae
stos
inc
or
jns
xchg
ins
cmps
and
sbb
fist
outs
adc
sar
mov
(bad)
adc
push
xchg
add
ret
xchg
ret
gs
xchg
popa
dec
es
cmc
sbb
adc
lds
sahf
jns
je
inc
dec
sbb
adc
cmp
scas
add
xor
jno
not
int
out
mov
enter
sbb
xlat
lock
aaa
sbb
scas
mov
pop
add
xor
aad
cwde
out
jne
or
mov
push
jbe
iret
stc
lods
fstp
xchg
add
adc
jl
dec
or
cmp
cli
adc
(bad)
mov
fistp
jo
fcom
pop
sbb
aad
xor
mov
mov
sub
push
jo
sub
pop
sub
fs
clc
out
dec
fs
sub
test
mov
add
das
jns
dec
(bad)
push
mov
adc
dec
out
mov
fwait
add
add
mov
mov
adc
or
out
inc
mov
sub
mov
sub
je
inc
ins
push
cmc
repnz
xchg
pusha
(bad)
push
cmps
in
icebp
ja
dec
or
add
(bad)
pop
cmp
jnp
cmps
fld
and
pusha
xchg
pop
in
aam
dec
xor
stos
scas
xchg
mov
jno
mov
not
pop
push
mov
cmp
pop
fst
jnp
test
mov
adc
scas
xchg
or
vpsubsb
inc
push
sub
mov
and
ins
adc
cmps
enter
xor
fstp
enter
fsub
ja
pop
pop
lock
(bad)
daa
sbb
leave
cld
mov
push
or
xor
dec
mov
div
mov
test
sbb
(bad)
ds
repnz
movs
xor
sbb
jb
ja
ret
mov
or
iret
push
lods
sar
mov
xchg
aad
in
xor
cmp
mov
ds
jne
inc
jmp
pusha
cmc
clc
data16
pop
push
outs
or
mov
pop
cmp
(bad)
cdq
jg
rol
mov
jge
pop
bound
shr
cmp
call
ds
lods
shl
or
out
(bad)
jecxz
out
shl
mov
cmps
sbb
mov
retf
shr
(bad)
jmp
aaa
xchg
inc
aad
int
(bad)
jl
pop
cmp
push
imul
leave
jb
ins
shl
cmps
mov
shr
into
rol
push
pop
leave
or
jne
xor
xor
dec
jmp
bnd
mov
idiv
jle
push
popf
ss
xor
mov
movs
stos
add
mov
out
mov
cwde
nop
add
stc
call
out
cs
jo
loopne
push
pop
add
(bad)
jo
mov
adc
arpl
ret
xchg
mov
jl
pop
cmp
enter
popa
fdiv
leave
sti
call
xchg
cld
js
xchg
outs
stos
call
mov
(bad)
mov
rcr
ja
xor
push
or
cmp
jecxz
fmul
mov
push
jg
scas
rcr
push
mov
fsubr
ret
adc
sbb
test
cli
adc
jl
push
test
xchg
cmp
out
test
cmp
jle
test
cli
js
mov
ins
add
pop
pop
outs
loope
sub
in
xor
in
or
test
cmps
retf
aas
rol
sbb
out
sub
enter
mov
mov
adc
aad
imul
sbb
fld
add
and
jge
aas
lahf
and
aas
mov
lods
rol
cs
pop
in
hlt
sbb
add
inc
cmp
aaa
sub
adc
nop
and
pop
pop
lock
imul
mov
mov
mov
dec
pop
jg
rcl
fisttp
movs
pop
sub
dec
out
adc
(bad)
cmp
out
icebp
and
push
mov
outs
call
cmp
mov
lahf
repz
jmp
lods
xor
bnd
(bad)
sub
add
push
out
jmp
xlat
inc
pcmpgtd
int
xor
or
jle
in
push
jno
adc
scas
push
cmp
push
mov
push
dec
pop
call
push
sub
repz
push
push
cmc
xchg
or
and
and
jae
jl
aad
mov
ins
dec
das
iret
push
out
xchg
stc
adc
and
inc
fild
movs
jle
stos
nop
lock
lods
iret
xlat
sub
sub
push
in
aas
sbb
cwde
pop
cmp
cdq
xor
das
and
xor
sbb
and
aaa
xlat
adc
call
mov
xchg
sbb
lahf
outs
es
cmp
mov
and
ds
lock
jle
xchg
sti
jbe
lds
mov
and
fisub
cmps
outs
or
cmp
adc
pop
xchg
(bad)
mov
xor
std
in
nop
xor
or
iret
stos
adc
inc
fcom
fisttp
xor
fsubr
(bad)
mov
sub
xor
int3
outs
xchg
adc
loop
daa
pop
clc
mov
mov
xor
adc
adc
add
int3
jmp
fild
dec
test
cmps
pop
inc
rcl
add
inc
movs
dec
stos
fisttp
sbb
cmp
lods
inc
push
push
xor
(bad)
jge
cmp
icebp
ficom
or
(bad)
sub
xor
jge
adc
lods
stos
out
ins
jns
out
(bad)
movs
fst
xchg
push
dec
std
cmp
in
pop
sub
outs
pop
push
or
jae
loopne
jl
rcl
inc
out
dec
lock
fldln2
movs
pop
xchg
enter
fmul
repnz
fwait
mov
and
jno
test
mov
pop
jp
or
jns
inc
cmp
movs
add
or
pop
seto
or
cmp
jae
je
xchg
push
es
inc
jmp
push
mov
mov
push
popa
cmp
sbb
cmp
clc
cmp
in
mov
rcr
fidivr
xchg
mov
sub
(bad)
adc
dec
aad
xchg
and
stos
and
fsub
dec
and
pop
pushf
test
sbb
or
pop
jns
add
and
mov
sbb
and
ja
fnsave
cmp
(bad)
sar
add
std
mov
mov
mov
jbe
test
mov
loop
movs
xor
add
ins
jge
aas
and
repnz
jp
cmps
cwde
xor
dec
repnz
xor
or
scas
rcl
in
push
lods
xor
nop
sbb
mov
dec
leave
add
in
or
xchg
jmp
add
dec
into
push
push
dec
fild
inc
jmp
stos
pop
inc
rcr
xchg
(bad)
fstp
dec
nop
xor
pop
sbb
xchg
mov
jno
jle
adc
or
mov
adc
scas
out
jl
dec
mov
dec
(bad)
daa
add
shl
sbb
push
inc
lea
scas
leave
sub
ins
and
test
lods
bound
and
es
or
jbe
xor
lds
bound
pop
sub
jne
or
mov
push
bound
jae
int
clc
and
popa
inc
cmc
sub
push
dec
inc
mov
lock
cmp
push
fmul
out
out
and
int3
jg
ret
ret
sbb
xor
sahf
loop
xor
ss
or
add
fcmove
sbb
int
fdivr
pop
sub
mov
jmp
push
rcr
movs
mov
pop
fst
mov
cmc
in
ins
icebp
or
hlt
fisttp
iret
mov
or
pusha
and
xchg
mov
in
xor
in
and
add
mov
add
cmp
dec
dec
cli
addr16
leave
sbb
jb
out
mov
mov
leave
mov
cmps
leave
call
sbb
div
call
add
dec
jae
inc
imul
fdiv
(bad)
shr
or
pop
call
mov
icebp
lds
or
and
mov
dec
cmp
bound
aam
popa
leave
sub
jno
xchg
sbb
sbb
mov
cli
das
fcmovnb
pop
bound
lds
mov
mov
mov
push
iret
add
push
pop
push
cdq
in
iret
jge
add
lock
test
arpl
mov
add
mov
mov
out
dec
test
call
pop
inc
add
push
adc
aas
loopne
cmc
pushf
pop
dec
cld
mov
push
pop
dec
add
movs
inc
(bad)
adc
out
jb
dec
jnp
lahf
push
cld
and
inc
sti
fistp
ds
dec
cmps
iret
pop
popa
ja
icebp
out
gs
pop
sbb
faddp
repz
sub
xchg
rcl
pop
add
pop
jmp
jge
aas
sub
inc
(bad)
xchg
scas
xor
push
xor
xor
fs
xor
jbe
cs
inc
and
xor
cmps
mov
pop
leavew
in
sbb
inc
out
pop
out
(bad)
shr
lds
sbb
push
loope
rol
pusha
aas
shl
lods
fistp
xor
cmp
dec
ins
or
pop
aaa
jge
mov
mov
popa
xor
out
stos
fstp
das
jo
(bad)
sti
popf
outs
stos
(bad)
mov
push
mov
repnz
xchg
pop
mov
cdq
retf
and
rol
jnp
movs
push
add
xor
mov
push
jnp
add
popf
aaa
cmps
rcl
add
ficom
push
add
and
pop
leave
fxch
jae
clc
adc
adc
mov
or
add
ss
in
cmp
adc
rol
repnz
enter
mov
fs
sub
lock
shl
mov
les
mov
add
fstp
add
ror
cmc
sub
mov
out
sub
sbb
(bad)
in
or
imul
dec
mov
xchg
in
mov
test
jmp
pop
scas
pop
and
jl
mov
shr
pushf
mov
or
imul
dec
arpl
inc
ret
in
in
daa
aam
arpl
jmp
aas
adc
mov
pop
xor
lds
inc
mov
cmp
jnp
sbb
pushf
call
ret
sbb
xor
arpl
(bad)
and
or
sub
cmp
sahf
enter
rcr
jp
pop
adc
das
stc
mov
popf
push
or
or
repnz
retf
ret
mov
add
daa
mov
sbb
sahf
push
sbb
push
add
jmp
mov
mov
scas
dec
popa
aam
or
ja
xlat
ja
xor
push
inc
int3
inc
imul
cli
mov
inc
outs
xor
xchg
jo
dec
adc
add
fadd
mov
lods
and
add
pop
cmps
fnstsw
repnz
repnz
aam
mov
cmp
push
mov
or
int3
fucom
mov
pop
jb
push
sub
dec
sub
out
and
je
les
mov
lea
dec
ror
int3
sahf
(bad)
leave
inc
push
test
jmp
push
and
mov
jg
(bad)
mov
cs
or
fisttp
dec
repz
cdq
mov
jmp
jmp
mov
les
cs
ins
and
sub
inc
or
add
dec
pop
out
mov
add
bound
stos
mov
mov
fcomip
pop
das
je
sbb
daa
inc
out
fisubr
sbb
out
arpl
std
test
int3
popf
es
scas
inc
fmul
and
add
cmp
mov
dec
sahf
sbb
mov
mov
out
int3
adc
arpl
and
mov
mov
popf
mov
idiv
mov
xchg
fnstcw
lgdtd
cwde
movs
scas
xchg
mov
ja
fcmovu
jmp
mov
stos
dec
mov
ins
sahf
outs
fistp
sub
stos
(bad)
je
ficomp
(bad)
sar
mov
fwait
int3
add
xchg
movs
(bad)
in
jbe
cli
addr16
out
clc
test
mov
jb
out
push
movs
inc
mov
fcomp
sbb
xchg
xchg
cmp
xchg
fnsave
js
mov
or
dec
jmp
cmp
fdivr
(bad)
fmul
hlt
or
ficomp
pop
add
pop
test
out
and
cli
lock
in
pop
adc
jnp
imul
(bad)
(bad)
dec
jp
inc
jge
rcl
test
pop
out
sahf
jb
xor
lods
xlat
repnz
sub
call
lods
mov
pop
xor
mov
aas
ins
sbb
mov
add
sahf
inc
pop
retf
mov
ins
fwait
test
inc
pop
xchg
sbb
mov
jmp
lds
xchg
call
push
mov
jge
loope
sbb
ins
mov
or
pop
and
pop
xchg
mov
fs
nop
sar
jb
and
movs
push
sar
call
dec
xchg
imul
add
fwait
repnz
xor
nop
mov
pop
cdq
stc
mov
or
repz
sbb
jg
ds
mov
push
sub
inc
adc
sar
pop
je
mov
add
push
fldcw
jg
or
stos
out
cmp
and
push
push
or
ror
mov
push
add
cli
lock
inc
fist
sbb
mov
fwait
push
mov
repnz
(bad)
in
retf
jmp
fisttp
out
cmps
or
mov
js
jbe
mov
mov
aas
sbb
xor
leave
pusha
cld
fstp
and
outs
cwde
sub
xor
push
aas
fidivr
push
hlt
ret
arpl
scas
fbstp
dec
sub
fnstsw
jnp
data16
push
shr
movs
xchg
push
and
in
imul
mov
adc
dec
rcl
xor
arpl
mov
sbb
shl
repnz
xor
mov
and
push
aas
xor
push
mov
jbe
cs
mov
and
xor
xor
jmp
ret
inc
or
ret
dec
enter
adc
pop
mov
inc
stos
jge
dec
daa
aam
fnstcw
int3
adc
adc
jmp
dec
pop
ret
in
addr16
sub
cmp
mov
mov
inc
add
sub
dec
inc
jnp
dec
mov
hlt
aaa
inc
push
xor
push
jmp
(bad)
dec
push
(bad)
mov
mov
dec
push
push
or
sti
mov
jbe
pop
cmp
or
nop
(bad)
sbb
pop
fisubr
or
fldlg2
(bad)
sahf
sub
into
cs
out
(bad)
cmp
cmps
cli
xchg
jnp
ret
jge
and
pop
xor
out
daa
jle
ds
leave
out
call
cli
pop
mov
js
aam
lods
mov
pop
jmp
aas
(bad)
dec
jmp
stc
mov
aas
dec
push
(bad)
jl
lods
add
dec
mov
shl
stos
sbb
jae
inc
pop
jl
pop
fs
outs
int
dec
or
xchg
iret
xchg
pop
fdivr
jmp
push
movs
std
call
(bad)
xor
cmp
add
dec
out
xchg
daa
xchg
(bad)
out
lds
add
adc
adc
push
popf
ret
mov
cld
sbb
cmp
fnsave
fwait
mov
stc
adc
sti
stc
mov
jecxz
inc
pusha
inc
push
pop
outs
cmps
add
je
sub
movsx
mov
mov
aaa
sub
or
pop
mov
push
ret
stos
(bad)
cmc
test
mov
adc
hlt
push
sub
movs
sbb
in
scas
retf
xchg
pop
stc
cli
fisub
je
pop
sti
gs
cdq
xor
outs
sbb
sar
add
data16
fs
pop
mov
xor
push
jo
(bad)
sub
and
inc
jb
inc
cmps
inc
dec
cs
push
pop
sbb
jmp
jle
sbb
and
lea
jo
push
imul
and
cmp
xor
ror
cmp
jl
xlat
or
es
adc
lock
sub
jmp
jnp
fidivr
inc
aad
fnsave
sbb
icebp
sbb
lock
das
fisttp
mov
pushf
pop
gs
js
hlt
mov
test
mov
mov
cmp
cmps
call
push
ins
jecxz
out
mov
loopne
or
jg
sar
push
sub
jne
and
or
addr16
popa
or
out
and
xchg
adc
adc
pop
cmp
adc
cmp
mov
fist
or
ror
test
cdq
mov
add
cmps
jecxz
xlat
lods
jmp
inc
out
mov
inc
mov
adc
jp
sbb
jge
pop
sbb
sub
(bad)
xor
push
mov
pop
cdq
(bad)
adc
cmp
xchg
xor
fldenv
imul
mov
cmova
movs
mov
retf
pop
pop
in
mov
shr
retf
js
jecxz
and
adc
imul
popa
xchg
pop
jb
cmps
in
add
adc
test
mov
int3
mov
pop
das
cdq
dec
push
call
movs
or
in
inc
fwait
push
aam
fs
cmp
out
jns
inc
sub
or
inc
gs
dec
xor
add
subps
dec
xor
loope
cmp
and
(bad)
je
jp
pusha
and
cmp
xor
mov
sbb
jo
aam
fcmovb
stc
mov
int3
add
sub
jle
mov
repz
sub
test
stc
mov
fisttp
stos
adc
aas
adc
hlt
mov
xor
mov
loop
sub
sub
dec
idiv
and
dec
cmp
and
ret
jo
push
adc
lea
mov
jge
cmp
xor
adc
mov
xor
dec
imul
cmp
pop
mov
data16
into
outs
inc
or
mov
adc
mov
pmulhuw
mov
adc
test
lock
mov
and
dec
push
and
jl
pop
xchg
add
adc
or
jo
mov
outs
xor
imul
pop
mov
xor
in
jns
and
outs
jle
or
rcl
(bad)
xchg
jecxz
push
mov
xor
in
(bad)
cmp
mov
cmp
movs
add
int
and
sbb
pushf
cmps
pop
cmc
sar
arpl
inc
mov
sub
mov
mov
or
fwait
sub
stos
lock
or
dec
int3
and
outs
loopne
adc
pop
xlat
mov
dec
les
cmps
or
lea
sahf
mov
outs
dec
push
xchg
mov
xlat
push
loop
sbb
std
add
push
out
adc
cmc
inc
inc
xchg
add
mov
dec
mov
scas
call
(bad)
movs
add
rcr
dec
and
mov
cmp
mov
xlat
mul
mov
xchg
adc
xchg
sub
inc
movs
inc
fstp
scas
js
xchg
push
push
mov
les
(bad)
div
fwait
jg
sbb
sahf
push
in
mov
inc
pop
daa
daa
aaa
jae
(bad)
clc
push
ret
dec
jl
fmul
add
dec
xchg
sub
jg
sahf
cmp
cli
push
jg
ds
ds
movs
adc
aas
pop
sub
into
outs
add
cwde
xor
xchg
lods
cmp
inc
push
mov
lea
nop
cmp
out
push
sbb
rol
int3
push
jp
jmp
mul
fist
dec
and
push
pop
dec
(bad)
lahf
inc
sub
popa
mov
lods
lea
out
in
and
inc
es
cdq
jne
mov
mov
test
jg
pop
dec
pop
mov
xor
int3
mov
pop
jg
shl
mov
leave
xlat
adc
push
int
stos
lea
adc
mov
out
pushf
retf
dec
jns
rol
shl
shl
push
sbb
xchg
lods
xchg
cmp
js
jmp
xlat
cmp
jmp
in
int
add
fst
mov
sti
xor
rol
mov
mov
push
mov
in
gs
bound
push
push
ins
and
add
cmp
mov
aas
jmp
or
mov
fs
xor
adc
sbb
xchg
jmp
mov
jo
fs
pop
dec
out
test
or
ret
fwait
mov
xor
inc
jb
mov
addr16
and
push
fwait
int
stc
jnp
fwait
mov
jle
test
jge
fadd
scas
repnz
dec
(bad)
jmp
into
dec
jb
ret
popa
and
idiv
pop
inc
test
ss
jns
nop
and
imul
xor
rol
mov
xchg
scas
mov
adc
sbb
xchg
xor
(bad)
mov
xor
in
pop
lock
out
adc
jecxz
icebp
(bad)
jbe
fmulp
leave
lods
(bad)
cmp
movs
cmps
ror
adc
or
xor
mov
scas
jns
(bad)
push
or
and
and
add
pusha
clc
or
xchg
gs
shl
sbb
pop
cmp
mov
inc
lods
mov
cld
mov
into
adc
push
fild
call
jne
fadd
leave
jle
fs
movs
inc
cmp
cmp
jl
xchg
jb
cmp
dec
xchg
mov
adc
sbb
ror
and
or
daa
ja
and
xor
xchg
outs
xchg
or
jmp
xor
(bad)
pop
mov
dec
push
sub
(bad)
jmp
adc
daa
neg
push
xchg
push
ins
inc
int
mul
add
add
pop
pop
sbb
sti
pop
add
xor
fcmovu
jmp
mov
xchg
inc
cmc
ss
fxch
shr
push
leave
xor
lods
mov
ret
nop
push
ja
imul
out
sbb
push
in
mov
test
and
jbe
mov
pop
push
mov
pop
cmp
or
or
movs
dec
add
mov
dec
movs
push
lahf
xor
nop
pop
mov
hlt
mov
dec
scas
dec
xchg
(bad)
ror
std
idiv
sbb
repz
dec
mov
neg
enter
sbb
lods
es
inc
cmp
xor
ror
(bad)
mov
je
add
retw
adc
pushf
imul
or
sub
in
ret
xor
mov
mov
mov
ror
leave
out
pop
push
sbb
aad
sbb
xchg
and
out
shl
xchg
mov
adc
in
fsub
scas
sahf
jnp
xor
sti
push
ds
push
mov
xor
ja
jmp
hlt
dec
push
loope
cs
add
mov
in
xor
outs
pop
fisub
add
adc
mov
sub
inc
push
sub
loopne
call
cmp
sbb
add
jp
(bad)
vmread
sbb
or
sar
dec
scas
sbb
adc
popa
lea
inc
lods
push
aaa
in
sub
sbb
inc
push
lock
and
addr16
mov
mov
ins
iret
popa
fidivr
clc
xchg
push
push
movs
cdq
jb
ins
add
add
aam
cdq
mov
mov
sbb
shr
cwde
or
push
push
pop
test
mov
test
push
test
and
cmp
mov
xor
int
mov
xor
call
cmp
mov
mov
repz
xchg
ss
nop
sbb
ror
ret
and
jl
push
inc
sbb
mov
mov
jae
js
inc
addr16
xor
neg
scas
and
inc
mov
xchg
cdq
dec
xchg
addr16
jae
imul
jle
pop
pop
mov
adc
out
mov
or
imul
bound
shl
addr16
jo
jmp
hlt
(bad)
jo
loopne
cmp
(bad)
out
mov
cs
mov
mov
fwait
inc
jbe
jecxz
mov
cmp
imul
shl
outs
pop
mov
ss
lods
pusha
push
imul
pop
sbb
mov
xchg
nop
jmp
and
ror
es
xchg
pop
ss
cli
xor
inc
xchg
lds
sub
jb
fst
ins
je
nop
es
rcl
mov
cmp
mov
daa
sbb
pop
cs
xchg
cmp
sub
adc
sub
fcomp
or
inc
sbb
dec
mul
test
push
fsubr
cmps
and
cmp
sub
in
ror
ins
sub
lods
sub
div
cdq
mov
adc
sbb
lock
jecxz
xor
stc
mov
fnstsw
aas
inc
mov
inc
push
scas
sub
(bad)
sub
xchg
inc
jg
in
daa
test
fstp
pop
add
adc
test
mov
xchg
movs
(bad)
sti
inc
(bad)
cmp
or
push
xchg
jecxz
not
dec
sar
xchg
dec
ja
add
jge
ret
sub
jmp
xor
gs
mov
repnz
sub
jae
enter
xchg
adc
test
sbb
dec
rcr
xor
adc
aaa
mov
or
cmp
rcl
stc
fwait
dec
jb
adc
jb
rcl
pop
xor
loopne
xchg
cmovle
fild
gs
mov
dec
jne
mov
push
or
daa
or
scas
rcl
dec
lahf
sbb
pop
dec
push
sbb
test
sub
stos
dec
sbb
lds
(bad)
add
mov
nop
fs
stos
sti
shl
scas
retf
popf
push
and
hlt
and
or
and
rcl
jl
scas
push
mov
and
mov
jmp
or
fistp
mov
sahf
scas
icebp
es
imul
les
adc
outs
jae
sbb
outs
xchg
mov
adc
mov
jle
and
out
push
sub
popf
not
jb
pop
mov
push
bnd
mov
(bad)
cmp
add
aam
mov
add
aaa
dec
lea
sub
icebp
jge
call
sbb
sbb
(bad)
repnz
loope
xor
pop
mov
mov
xchg
(bad)
mov
pop
ins
mov
ja
int3
bound
mov
call
(bad)
mov
mov
aaa
jmp
dec
movs
cmp
inc
test
bound
jge
mov
and
into
or
add
sti
out
jo
in
mov
arpl
push
cli
enter
clc
adc
in
xchg
popf
mov
mov
fidivr
scas
dec
cmps
pop
cld
ja
aas
mov
jg
xor
and
or
pop
sbb
jno
out
inc
je
sbb
lea
mov
cmps
imul
xchg
popa
into
dec
add
cmp
imul
dec
adc
add
sbb
mov
inc
mov
sbb
xchg
imul
mov
sbb
imul
cmp
test
fs
arpl
sti
icebp
pop
dec
xor
add
xchg
(bad)
jmp
cwde
mov
clc
stos
sahf
adc
pop
and
in
call
test
push
scas
mov
loope
(bad)
sub
pop
jae
je
test
fwait
daa
mov
adc
test
fdiv
inc
sbb
push
sbb
xor
repz
push
xor
mov
fsubr
shr
sti
mov
jae
out
cmp
xor
xor
nop
js
test
aam
or
jmp
ds
shl
add
sub
cmp
pop
push
(bad)
out
repnz
lock
fld
inc
test
cmp
cmp
sbb
push
sar
inc
out
retf
and
inc
xor
in
dec
and
sahf
inc
adc
xlat
jge
cmc
xchg
retf
sar
sub
fs
cmp
mov
push
sub
int
retf
stc
bswap
sbb
es
mov
cmp
getsec
sti
(bad)
rcr
ins
jo
sub
imul
pop
gs
or
or
sub
inc
xchg
fdivr
fstp
mov
cmp
jb
xchg
inc
cmp
jle
test
jae
test
(bad)
ffreep
and
sbb
mov
daa
mov
test
jno
mov
bound
inc
int3
lods
dec
jmp
adc
sub
sub
sar
or
repz
imul
push
mov
cmps
jmp
les
add
push
xor
mov
loopne
pop
push
sti
(bad)
ins
mov
mov
fild
add
mov
push
mov
js
adc
cs
mov
jae
push
in
pop
or
fstp
lods
into
loopne
repz
js
xchg
mov
sti
lock
sub
popf
push
pop
mov
cmc
(bad)
xor
int3
xor
push
nop
in
(bad)
xor
data16
ds
retf
pop
mov
cmc
sbb
add
jns
adc
dec
out
jo
leave
fist
jbe
xor
ror
jo
and
data16
inc
mov
sbb
push
sbb
jo
cs
add
shl
lock
add
mov
mov
mov
sar
mov
push
fldenv
loopne
xor
add
push
sub
xchg
hlt
stos
leave
or
ins
sbb
inc
mov
popa
out
call
xor
adc
aaa
adc
jb
cmp
mov
or
pop
mov
xor
add
pop
sahf
es
mov
sbb
push
jl
push
cmp
test
xor
scas
repz
xor
ret
mov
lea
in
xor
out
scas
(bad)
mov
cmp
xor
push
xchg
shl
pushf
inc
adc
fisubr
lods
jmp
outs
pop
mov
sti
ret
jnp
dec
mov
inc
sub
in
clc
jmp
fdiv
test
mov
add
stc
in
sbb
cmp
out
mov
sub
mov
inc
je
mov
add
pop
pop
(bad)
mov
test
jns
xor
lods
mov
and
push
cmc
cmp
cmc
ja
out
mov
adc
int
ins
fwait
cmp
cld
retf
shl
pop
mov
in
xchg
inc
nop
pushf
push
sub
jmp
sbb
jle
cmp
fs
retf
les
xchg
jg
cmp
adc
add
push
ins
adc
and
addr16
cwde
mov
mov
add
imul
pop
movs
cmps
arpl
inc
dec
and
imul
mov
xchg
sbb
call
and
sbb
ror
push
mov
cmc
cmp
xchg
fs
aam
xchg
cmps
aad
ins
int3
jmp
or
test
in
adc
loop
ffreep
mov
pop
aaa
dec
fadd
(bad)
ins
mov
sub
imul
jne
movs
push
test
jbe
mov
jno
jns
nop
cmp
imul
mov
stc
lahf
aad
ja
fnstcw
ja
add
sub
sub
aad
xor
xchg
push
dec
add
sbb
xor
sbb
adc
jmp
jecxz
fdivr
daa
push
jmp
dec
ds
mov
(bad)
inc
sub
mov
pop
dec
inc
cs
(bad)
cmp
sub
xchg
push
rcl
or
inc
(bad)
popa
(bad)
adc
in
fsub
adc
in
rcr
cmps
push
ins
lds
cmp
(bad)
icebp
arpl
es
dec
xlat
push
lods
aas
jmp
sahf
lods
mov
rcl
out
and
rol
loopne
fcom
sbb
pop
pop
cmps
leave
mov
aad
pop
add
repz
adc
xchg
xchg
push
lea
inc
dec
inc
test
enter
jae
aam
or
pushf
pop
jae
dec
out
enter
stos
add
inc
cmc
std
jb
std
sahf
pop
sub
sbb
mov
ret
add
loope
xor
enter
addr16
add
aaa
outs
movs
mul
jle
mov
je
pushf
in
ja
mov
or
sbb
pop
jnp
ror
mov
test
jb
adc
sub
push
and
das
pop
and
ret
movs
jne
mov
arpl
cmp
arpl
xlat
inc
jns
icebp
inc
js
inc
dec
pop
lods
sbb
mov
in
push
mov
das
sub
jp
add
push
(bad)
loopne
sbb
sbb
mov
xor
mov
add
add
xor
jbe
(bad)
adc
cmp
sbb
movs
not
mov
pop
ds
mov
xor
xor
aas
cmp
stos
popa
je
sar
adc
and
xchg
push
adc
in
xchg
shl
jne
xchg
scas
scas
ja
adc
pop
xor
gs
jle
mov
cmps
push
xchg
inc
adc
dec
test
into
push
imul
jle
cmp
sbb
xor
je
add
ss
repnz
cmps
mov
daa
shl
clc
push
out
rcl
push
jne
in
lock
dec
push
retf
mov
ret
ror
mov
xchg
inc
or
in
rcl
lock
stos
inc
lea
push
mov
fs
out
xchg
rcr
mov
aaa
gs
pop
push
dec
sub
(bad)
scas
xchg
mov
lods
cmps
jge
inc
adc
out
sbb
dec
pop
mov
cmp
and
(bad)
sub
cdq
jg
jbe
(bad)
adc
add
mov
call
std
dec
arpl
and
mov
push
sti
popa
cmps
outs
sub
jb
aas
mov
push
push
movs
mov
lahf
imul
inc
int
sbb
cmp
inc
xor
xor
dec
add
scas
or
adc
pop
pop
movs
add
(bad)
or
ins
pop
test
aam
sbb
retf
xor
xchg
pop
jo
sahf
sub
jle
mov
les
pop
cmp
sub
and
iret
inc
sub
movups
add
daa
dec
aaa
in
sbb
add
mov
repnz
out
(bad)
dec
adc
mov
add
mov
js
iretw
cld
cmp
in
jmp
in
mov
cmp
or
push
(bad)
ret
es
inc
mov
ss
push
leave
retf
xlat
ror
ds
(bad)
mov
adc
xchg
sbb
push
dec
gs
ds
mov
add
pop
stc
in
jp
push
lods
outs
mov
cmps
push
je
mov
pop
icebp
ds
fwait
bound
or
call
xchg
sub
mov
ror
cld
out
sub
and
mov
rcl
adc
leave
jle
outs
daa
test
pop
push
imul
pop
sub
test
mov
ror
sbb
sbb
not
pop
mov
std
mov
mov
jge
cmp
ror
mov
in
bound
cmp
arpl
imul
and
or
pop
iret
(bad)
ss
lahf
dec
dec
out
scas
pop
mov
fidivr
or
out
xchg
mov
mov
test
outs
dec
retf
add
sbb
xor
lahf
std
repnz
or
cmp
jge
(bad)
pop
in
add
sahf
es
scas
cmp
sub
scas
je
cdq
js
(bad)
xchg
sbb
sub
int3
aad
add
lods
imul
and
pop
and
sbb
jle
adc
inc
sbb
sahf
push
test
jnp
mov
in
pop
sub
pop
clc
mov
mov
or
repnz
inc
cmp
imul
adc
and
sbb
sbb
jb
mov
in
sub
out
das
in
or
cs
jns
shr
scas
loope
ins
jno
mov
cmp
xchg
call
xchg
or
out
push
test
push
test
mov
inc
jl
mov
cmp
cmp
scas
xchg
call
cmp
(bad)
jmp
movs
rol
push
push
bound
outs
and
sbb
cmp
rcr
sbb
xor
jnp
retf
mov
lock
and
xchg
aaa
ds
push
aad
aam
fcom
push
mov
push
cmp
jnp
movs
jecxz
loopne
add
pop
add
repnz
pop
mov
fsub
pop
and
adc
aad
pop
ins
mov
mov
ds
or
sub
mov
push
pop
cld
jmp
call
or
or
adc
push
lahf
ret
mov
loop
in
shl
push
and
cmp
into
es
cmp
jp
fsubr
cmp
xor
adc
xlat
sti
lea
cmp
push
jne
xor
mov
push
mov
cwde
jecxz
popa
retf
popf
aaa
mov
mov
rcr
pop
lods
pop
(bad)
cmc
pusha
cwde
imul
xor
pop
iret
out
inc
mov
out
push
dec
sbb
fist
jno
shl
mov
push
mov
iret
mov
mov
cs
push
and
ins
int3
(bad)
mov
fdivr
test
mov
jns
mov
test
xchg
out
push
popa
xor
fild
pop
clc
xchg
ja
jae
cmps
icebp
xor
cmp
mov
and
dec
stc
xchg
outs
gs
jb
push
call
popf
adc
sbb
jmp
daa
pop
jle
sbb
call
int3
(bad)
xchg
rcl
icebp
and
xor
mov
lds
mov
pop
sbb
adc
dec
sbb
cmps
push
mov
mov
call
mov
test
fbld
(bad)
retf
xchg
inc
cmp
loop
call
push
popa
ja
fmul
and
inc
or
sub
mov
xchg
and
sar
sub
test
xor
sub
add
cmps
test
stc
retf
dec
pop
mov
arpl
aaa
pusha
sbb
inc
cmps
xor
aad
retf
jne
inc
loop
jle
jg
addr16
div
adc
je
imul
xchg
fld
call
pop
pop
psrld
mov
adc
loop
dec
(bad)
sti
jb
sub
and
push
xchg
add
and
cmp
scas
fs
fimul
mov
stc
mov
fdivr
ss
mov
mov
aad
rol
ret
aas
lahf
mov
pop
sbb
cwde
mov
sar
es
arpl
test
mov
add
in
jp
(bad)
push
enter
cmp
ins
or
(bad)
leave
push
push
xchg
pop
or
sbb
pop
cli
retf
cs
xor
lea
lock
into
jmp
shl
mov
jo
or
(bad)
retf
mov
push
int3
add
pop
mov
mov
xchg
fsubr
and
xchg
push
adc
or
sub
(bad)
sub
pop
xchg
adc
(bad)
daa
dec
jae
mov
sbb
mov
mov
jb
mov
mov
je
adc
push
cmp
cmps
les
scas
sti
out
xor
retf
pop
es
sub
or
rol
into
add
push
test
clc
mov
xchg
enter
xchg
push
es
mov
addr16
sub
jmp
fistp
push
cmp
loopne
jbe
cmp
push
lds
push
and
test
mov
(bad)
xchg
scas
(bad)
fwait
sti
pop
mov
xchg
cmp
popf
inc
rcr
mov
adc
addr16
cwde
mov
dec
cmp
cmps
or
das
sti
loop
movs
fild
arpl
or
(bad)
mov
xor
test
ins
and
pop
enter
pop
xchg
push
add
ror
pslld
outs
(bad)
repz
scas
jle
add
mov
sti
pop
jbe
fcmovu
adc
sub
mov
pop
imul
cdq
out
aas
xchg
rcl
add
mov
iret
inc
lock
xor
jne
retf
lahf
jnp
arpl
mov
cmp
dec
imul
pop
pop
jnp
ret
stos
popa
cwde
js
cmp
mov
scas
push
aam
aad
inc
imul
mov
mul
hlt
scas
and
lahf
jne
adc
and
inc
in
aad
adc
jne
cdq
mov
sbb
repz
fsubr
or
sti
retf
add
(bad)
movs
out
aam
fld
lds
(bad)
xor
or
lds
jbe
sbb
add
in
cmp
inc
(bad)
push
(bad)
pop
push
test
pop
inc
cmp
(bad)
rcr
and
ret
push
cmp
jns
sbb
inc
pushf
js
sub
cwde
push
dec
cmp
(bad)
sbb
pop
movs
add
pop
xchg
mov
test
jb
popf
xchg
js
or
xchg
xchg
xchg
adc
jle
sub
inc
or
dec
xor
into
sub
mov
mov
rcr
cmps
pop
xor
inc
mov
and
js
dec
mov
pop
adc
movs
scas
pop
xchg
sar
mov
xor
inc
hlt
push
dec
xchg
call
xor
pop
push
inc
hlt
cwde
xchg
arpl
push
aaa
sti
rcr
mov
add
pop
and
jecxz
jg
dec
mov
pop
pop
mov
mov
ss
xor
sbb
mov
sub
jo
cld
imul
movs
fisttp
jnp
cmp
in
pop
daa
nop
ja
xor
mov
sub
mov
xor
test
loop
sbb
xchg
fstp
out
repnz
fild
and
clc
mov
int3
mov
retf
ret
cmp
(bad)
sti
mov
(bad)
test
mov
scas
fcomp
and
lock
loop
daa
mov
push
mov
cmp
lods
mov
inc
out
sbb
mov
adc
mov
sahf
dec
movs
sbb
(bad)
(bad)
iret
psubd
add
add
mov
sbb
cmp
into
mov
pop
mov
repnz
xor
pushf
mov
push
cmc
scas
outs
mul
iret
sti
jbe
sub
mov
mov
adc
xchg
shr
in
ds
lea
add
pop
out
sub
xchg
mov
(bad)
jns
lock
daa
out
lea
outs
sbb
shl
outs
mov
pop
cs
neg
loopne
pop
rcl
das
mov
xchg
stc
jg
pop
scas
out
cmps
jb
mov
test
pop
mov
popa
call
mov
pop
or
cmp
shl
dec
pushf
push
add
mov
(bad)
push
xchg
push
xchg
and
cmp
or
nop
ins
lods
ins
frstor
xchg
imul
ss
sbb
aad
xor
and
cmp
sub
pop
mov
pop
sbb
out
and
or
out
test
mov
jns
retf
sub
lahf
test
out
lods
aas
jg
loope
in
leave
popa
dec
loopne
sub
dec
(bad)
std
inc
add
test
adc
test
mov
daa
shl
jae
inc
repz
test
cli
jne
pop
mov
xor
daa
lahf
mov
push
adc
sbb
cmc
dec
sbb
pop
mov
mov
loopne
dec
push
inc
lods
mov
push
enter
adc
xor
mov
frstor
sbb
mov
in
in
std
xor
in
jge
stos
inc
push
out
mov
mov
in
and
fistp
sub
movs
fimul
cs
sbb
fwait
movs
jae
stos
lds
call
sahf
scas
jmp
mov
mov
(bad)
sbb
jg
imul
lock
lods
test
pusha
(bad)
adc
cmp
hlt
jae
(bad)
rcl
fldcw
inc
int3
pop
push
outs
scas
add
add
imul
lea
fidiv
pop
fdiv
jns
dec
sub
adc
(bad)
mov
jo
xor
sbb
outs
ds
pushf
push
and
(bad)
bound
imul
mov
xchg
jge
xor
and
fs
sbb
fsubr
shl
push
out
add
pop
test
jle
in
pop
into
dec
xchg
(bad)
cli
jl
jns
dec
mov
dec
xchg
mov
jo
fwait
imul
xor
movs
cmp
sbb
gs
sbb
mov
xchg
xchg
stos
cs
push
out
stc
bound
cli
mov
fild
cmp
movs
mov
aad
cli
pop
sete
inc
mov
and
pop
dec
xor
adc
mov
call
cmp
mov
xchg
sbb
cmp
sub
stos
stos
pop
aam
mov
gs
jmp
add
daa
push
into
aad
adc
cmp
icebp
mov
add
jecxz
add
xor
sar
jge
cmp
fdivrp
xchg
ins
lahf
lock
pop
ss
inc
mov
lods
les
and
sbb
mov
xchg
fwait
cmps
movs
loop
xor
xchg
ficomp
or
clc
in
and
inc
mov
test
sbb
mov
mov
imul
mov
push
xor
sub
dec
and
cmps
test
sub
push
mov
mov
sbb
push
mov
rcl
adc
test
or
(bad)
and
inc
mov
inc
ret
retf
repz
out
sti
fwait
cmp
or
loopne
ins
dec
pop
and
add
(bad)
iret
retf
lods
fs
inc
arpl
in
adc
je
daa
movs
iret
and
or
cmps
pushf
fstp
adc
fisub
out
mov
cmp
xchg
cmps
xchg
out
xor
dec
imul
and
pop
mov
out
dec
in
inc
adc
in
ret
jecxz
add
jne
sbb
and
mov
and
xor
das
cmp
push
rol
cmp
or
fs
shl
xchg
daa
and
mov
movs
dec
jns
imul
mov
frstor
push
xor
push
pop
out
int3
es
aaa
cmps
popf
mov
xlat
and
sub
dec
sbb
push
sub
push
div
ja
(bad)
shl
ror
movs
jmp
outs
jnp
(bad)
loope
loop
bnd
add
sub
call
outs
xor
mov
jge
jno
call
into
gs
cmc
sbb
jo
outs
push
add
clc
mov
sub
sbb
das
pop
jl
push
stos
ret
repz
bound
aaa
das
pop
push
or
imul
test
adc
mov
and
outs
imul
in
jle
xor
and
pop
imul
addr16
cmc
call
imul
lahf
xor
pushf
jge
(bad)
mov
scas
in
mov
repz
jbe
cmp
jl
mov
out
push
cmp
mov
sub
cli
dec
call
inc
mov
std
lods
popf
fsub
sub
jle
push
out
inc
push
in
shr
test
int3
mov
dec
mov
out
shr
mov
call
mov
fcom
js
fwait
dec
shr
push
ss
fs
push
dec
mov
jle
add
int3
jecxz
xchg
dec
lock
pop
add
push
in
jno
dec
mov
fst
sbb
jo
lock
mov
jno
pop
shl
jmp
dec
xor
push
cwde
rol
fnstenv
and
adc
dec
loope
arpl
push
mov
push
retf
imul
mov
pop
sbb
sbb
or
gs
rol
mov
push
push
pop
mov
sub
add
mov
cli
jo
dec
std
dec
hlt
cmp
push
xchg
fnstenv
jmp
into
in
jge
es
into
retf
add
or
sahf
fsub
movs
ret
xor
fld
xchg
cmp
mov
xor
test
xor
nop
push
pushf
adc
dec
ror
add
movs
ror
xor
add
mov
stos
es
inc
dec
jbe
add
jp
cld
stos
scas
outs
sub
adc
loopne
pop
outs
sahf
mov
push
and
icebp
cmp
mul
mov
mov
sbb
adc
retf
popf
jb
push
lea
xchg
mov
loopne
xchg
inc
out
xor
lds
retf
push
lods
leave
fld
dec
push
arpl
(bad)
cli
mov
xchg
mov
inc
mov
push
retf
mov
ins
jg
jecxz
cmp
arpl
jl
mov
clc
shl
cmp
je
sub
dec
test
imul
gs
int
je
out
mov
add
cld
(bad)
sbb
(bad)
push
out
jg
sahf
pushf
lea
or
pop
mov
(bad)
ss
and
retf
test
ds
fwait
adc
call
in
popa
mov
and
in
mov
mov
dec
movs
fcomp
or
adc
dec
adc
jnp
cmp
aaa
xchg
ret
std
jecxz
inc
adc
repz
cmp
jae
fcom
fwait
les
aaa
ins
jecxz
fcom
and
mov
sub
jbe
lea
(bad)
popf
(bad)
ds
lea
add
out
aaa
add
gs
or
jg
les
dec
scas
rcr
mov
movs
cmp
xor
cdq
sub
fnstenv
adc
retf
push
jno
loopne
call
cmp
fs
jmp
adc
sub
mov
outs
ror
xor
sbb
jnp
imul
jns
push
add
jb
mov
cwde
leave
add
sahf
jae
push
pop
jmp
jge
ins
pushf
push
das
rcl
fwait
ja
mov
or
ds
adc
mov
shr
xchg
rol
ja
mov
es
(bad)
sbb
dec
pop
cmp
(bad)
sar
repz
sbb
imul
push
leave
cmc
jae
jno
aam
cmps
clc
mov
dec
mov
jnp
push
(bad)
dec
bound
leave
fst
xchg
push
icebp
fmul
std
push
pop
push
into
addr16
mov
push
xchg
gs
lock
dec
bswap
ret
xor
std
call
xor
bound
xchg
clc
arpl
xchg
xchg
cld
out
xor
push
inc
(bad)
sbb
fst
cmp
fsubr
fcomp
sbb
out
dec
sub
add
jg
dec
mov
(bad)
cs
xchg
test
xchg
adc
jne
sbb
jg
and
push
ins
cmp
inc
and
mov
ins
sub
ins
mov
(bad)
mov
sub
into
iret
js
jle
sub
cwde
sbb
iret
cmps
ins
lods
push
sbb
and
xchg
sub
aaa
popf
icebp
mov
fsub
and
cmps
test
xchg
and
sub
dec
inc
div
lods
in
push
mov
cwde
jo
xor
cmp
sub
mov
adc
jbe
(bad)
xchg
adc
imul
leave
ds
and
or
dec
aaa
stos
cmp
xchg
(bad)
dec
ss
cwde
pop
sub
cli
ins
mov
scas
adc
mov
es
sbb
inc
rol
(bad)
shr
(bad)
mov
dec
(bad)
in
xor
pop
push
mov
into
test
jge
and
push
icebp
cs
(bad)
sti
dec
inc
ds
fdivp
jnp
jge
rol
in
ficomp
dec
test
in
xchg
jns
xor
loopne
sub
ins
pop
cmps
cmps
cmc
cld
int
push
out
cmc
inc
shr
cmp
cmp
push
mov
dec
sub
or
daa
adc
(bad)
inc
push
or
popa
or
mov
and
mov
js
adc
and
out
adc
test
dec
inc
and
push
les
mov
addr16
out
mov
add
aam
sahf
stos
mov
xchg
int3
dec
jge
add
out
lods
fcomp
fistp
test
std
sbb
or
adc
push
dec
sub
jecxz
mov
jne
out
hlt
ja
cdq
pop
push
mov
jmp
adc
pusha
jno
ins
(bad)
fdivr
jns
xchg
inc
mov
loopne
test
shr
addr16
iret
push
add
stc
mov
lahf
jbe
cmp
add
in
cwde
xchg
fbstp
adc
ins
push
ds
dec
inc
daa
fwait
xor
fimul
add
cmp
aaa
jp
jmp
adc
inc
inc
fsubr
retf
les
sti
inc
mov
out
jmp
or
pop
loop
ret
enter
cmp
pop
adc
pop
dec
fwait
aam
mov
xor
jne
mov
inc
jno
and
outs
xchg
jo
mov
xchg
les
clc
jno
fbld
xor
lea
mov
mov
movs
pop
lock
xchg
jo
mov
pop
xor
data16
xlat
xchg
xor
jae
sti
jno
mov
jmp
dec
sbb
and
mov
push
repnz
adc
movs
call
xchg
rcr
mov
mov
jo
out
neg
pop
adc
data16
adc
mov
sub
and
sub
sbb
jbe
inc
outs
mov
push
xchg
lods
and
pop
imul
push
cli
pop
jl
xchg
sbb
movs
(bad)
mov
xlat
inc
cmp
nop
popa
jp
fcmovb
pop
inc
int
mov
aaa
es
adc
adc
retf
iret
lahf
movs
inc
jmp
mov
mov
sahf
test
xchg
jle
sub
mov
push
shr
push
xchg
out
pop
scas
jecxz
inc
push
sbb
adc
xlat
mov
dec
adc
jo
movs
mov
cli
cwde
or
clc
addr16
mov
je
ss
cmp
into
test
mov
out
xchg
or
adc
xchg
cmps
dec
(bad)
movs
das
imul
mov
xor
pop
outs
pop
add
and
pop
sbb
sub
movs
mov
fcmovnbe
and
sbb
sub
and
mov
cdq
and
(bad)
xchg
or
xor
inc
lds
xor
repz
dec
dec
adc
add
mov
lea
lock
jmp
xchg
mov
jb
call
cmp
sahf
adc
shl
rol
aam
jecxz
jmp
(bad)
rol
jg
in
inc
push
dec
push
jp
rcl
stos
fnstsw
ds
ret
cmp
or
add
js
bound
mov
lods
out
or
xchg
pop
push
ret
retf
cmp
repnz
add
addr16
jl
pusha
and
xlat
mov
(bad)
xor
push
(bad)
sbb
mov
mov
mov
and
xchg
pop
fistp
pop
cmps
jecxz
xchg
mov
stos
sbb
mov
sub
loopne
push
push
pop
dec
ins
push
mov
pop
std
add
or
pop
stos
mov
cwde
pop
scas
push
dec
add
push
in
out
xchg
int
aam
cdq
shl
out
jge
jp
add
test
push
sub
xchg
test
add
push
es
cld
(bad)
mov
add
mov
setge
and
jl
push
ret
fwait
outs
pop
fld
loop
add
stos
add
dec
or
stos
pop
xchg
inc
jecxz
aaa
imul
or
mov
je
or
into
loope
pop
lods
mov
mov
jne
push
pushf
or
adc
test
push
and
inc
in
popf
sbb
dec
hlt
ror
adc
jmp
jle
push
stos
cmova
inc
mov
aas
inc
inc
pop
mov
push
data16
cmp
(bad)
jno
in
cdq
sbb
aaa
push
adc
fmulp
xchg
shl
xor
mov
add
push
inc
mov
leave
std
jnp
out
gs
cmp
ss
xchg
dec
inc
jge
scas
(bad)
imul
ficomp
jmp
pushf
ins
adc
adc
sahf
movs
pusha
cdq
scas
mov
cmc
imul
xchg
mov
jmp
shl
es
xchg
les
mov
mov
lock
out
xchg
ret
jmp
imul
test
mov
es
and
inc
paddd
mov
jnp
inc
fs
call
rol
jecxz
inc
mov
push
sub
add
(bad)
push
(bad)
lock
imul
push
inc
lahf
and
int3
jl
mov
push
xchg
inc
xchg
std
xchg
int3
pop
xlat
lods
adc
lea
(bad)
aas
lock
stc
jne
mov
sbb
inc
int
inc
repnz
(bad)
addr16
jg
retf
jg
loopne
lea
push
cvtpi2ps
jmp
mov
sub
pop
fucomi
repz
call
test
out
add
stc
jmp
aas
mov
jle
adc
inc
jmp
sbb
sbb
jns
mov
in
pop
and
fild
jnp
rcr
or
dec
mov
rol
cmp
in
stc
xchg
xor
or
cli
mov
sbb
lahf
jmp
shl
repnz
mov
mov
jecxz
call
call
call
imul
xchg
popa
and
fwait
movs
xchg
outs
je
mov
cmps
retf
sub
arpl
out
xor
cmp
mov
mov
ins
jae
out
push
xchg
mov
sbb
ja
pop
or
mov
mov
mov
push
es
lea
dec
sbb
aam
outs
adc
mov
int
ss
and
ins
mov
das
gs
pop
mov
mov
ret
ins
stc
jmp
adc
mov
sbb
shl
repz
push
imul
add
jmp
pusha
mov
lds
cmp
mov
sbb
in
xor
movs
xchg
cmp
enter
repz
add
adc
jge
ja
xchg
call
lock
mov
into
loop
adc
sub
dec
adc
lds
jmp
cmp
fcmovb
xor
pusha
repz
bnd
add
pop
or
mov
rcl
mov
mov
add
lahf
pop
fstp
test
out
sub
sbb
inc
ss
mov
pop
push
enter
fnstcw
std
test
or
cmp
pushf
xchg
enter
and
lods
sub
add
in
dec
int3
inc
addr16
ss
inc
sbb
aad
pop
es
in
popf
cmps
add
fnsave
stos
sbb
push
cdq
xor
xchg
loopne
xchg
xchg
test
mov
int
fstp
xor
fcomp
movs
add
or
xchg
pop
xor
inc
jno
repz
fdiv
push
pop
(bad)
in
sub
sbb
(bad)
bound
shl
mov
pop
jl
and
(bad)
dec
and
js
(bad)
cli
xchg
xor
mov
mov
inc
arpl
inc
outs
jmp
mov
pop
scas
cdq
cwde
stc
faddp
sub
std
mov
mov
dec
push
cmp
cmc
push
pop
mov
pop
(bad)
push
cwde
mov
test
mov
(bad)
fidivr
xor
lmsw
fstp
jge
popf
fs
scas
(bad)
dec
xchg
aam
mov
cdq
add
movs
out
push
pop
cmp
dec
dec
inc
push
ds
xchg
fbstp
in
push
push
push
adc
mov
loope
sbb
rcl
leave
jae
or
jo
ds
rol
mov
xchg
retf
jmp
sbb
ss
adc
inc
in
pop
retf
and
pmaxub
retf
dec
sbb
push
xchg
xor
jno
(bad)
xchg
jmp
or
shr
fild
(bad)
mov
popa
js
push
xchg
pop
and
adc
adc
pop
cmp
adc
enter
adc
push
arpl
sbb
sbb
jne
xchg
sub
int3
mov
cs
ds
lea
in
pop
imul
mov
xor
push
ins
xchg
xor
test
dec
addr16
inc
adc
addr16
in
loopne
mov
ja
mov
cmps
mov
push
cwde
push
cmp
(bad)
(bad)
retf
adc
ds
loopne
xor
out
iret
xor
(bad)
repnz
and
sbb
daa
dec
xchg
inc
cmp
cwde
add
fcomp
lock
shl
fnstsw
clc
jle
dec
pop
push
sub
mov
mov
mov
jo
iret
imul
adc
pop
bound
xor
(bad)
cld
pop
jge
xchg
and
out
fs
cmps
ror
or
add
aaa
adc
xlat
retf
icebp
fsubr
xchg
mov
mov
popa
imul
popf
xor
inc
push
add
popa
inc
mov
push
in
fwait
ds
mov
cmps
dec
xchg
shr
out
das
push
imul
mov
xor
mov
inc
add
in
pop
ja
mov
enter
repnz
cmp
mov
dec
addr16
hlt
and
dec
dec
dec
xchg
xchg
aas
test
and
sub
and
outs
arpl
mov
jno
jns
fidiv
(bad)
mov
popa
mov
(bad)
or
adc
scas
outs
cmps
mov
loop
adc
ja
jmp
jp
lds
sti
mov
fldenv
test
mov
mov
out
push
fwait
mov
jecxz
xor
mov
cld
jo
mov
fsub
scas
stos
mov
inc
pop
aas
test
outs
daa
cmc
pop
loop
sbb
cmp
mov
mov
imul
sbb
out
in
out
cdq
mov
test
mov
stos
ins
dec
add
xchg
lahf
or
sub
fcomp
fidiv
stc
test
xchg
cwde
jge
lahf
mov
sub
inc
adc
xchg
repnz
and
(bad)
sub
sbb
nop
rcl
sbb
mov
dec
xor
call
mov
call
shl
pushf
jge
adc
mov
popf
pop
dec
jmp
adc
pop
test
arpl
not
mov
into
xchg
push
push
push
js
push
js
int
popf
mov
or
add
cmp
inc
mov
outs
mov
mov
in
(bad)
pop
int3
and
gs
std
inc
push
adc
out
mov
fnsave
pop
pop
sub
dec
mov
neg
inc
xchg
lods
jp
jmp
jae
idiv
and
mov
test
xchg
rcl
mov
pop
push
and
cmc
js
dec
outs
cmc
stos
inc
stos
dec
push
call
test
daa
lock
in
enter
push
mov
jecxz
adc
inc
cmps
inc
test
loopne
stos
stos
aad
inc
pop
cmp
and
mov
mov
xor
jno
jle
xor
dec
push
addr16
dec
jmp
lods
imul
xchg
pop
push
push
inc
addr16
add
pusha
mov
jns
popa
mov
add
jne
cmp
xlat
es
pop
repz
dec
adc
mov
test
dec
push
aas
xchg
das
jnp
loopne
addr16
sub
dec
cwde
(bad)
mov
jnp
xchg
mov
push
aas
dec
add
mov
pop
in
in
ret
int
and
xchg
push
inc
or
punpckhbw
mov
fld
(bad)
mov
sub
(bad)
jnp
sub
shl
ret
cmp
inc
jnp
mov
pop
rcl
shl
aam
aad
test
scas
sub
stos
jge
mov
jnp
cmp
call
pop
repz
sti
mov
dec
xor
leave
push
xor
cmc
loop
xchg
ret
cmp
cmp
les
sahf
sbb
push
jae
or
mov
pop
sar
xchg
push
mov
int3
arpl
mov
test
pop
in
jmp
jge
adc
jo
dec
js
mov
outs
inc
inc
sub
addr16
ss
jne
outs
(bad)
dec
adc
retf
jmp
lods
out
and
adc
outs
sbb
jmp
rcr
cmc
lock
ja
movs
mov
mov
mov
mov
xor
dec
mov
mov
xchg
in
hlt
sub
test
xlat
js
xor
retf
cmp
arpl
jle
pop
jp
mov
sar
inc
gs
cmp
add
dec
xlat
push
xlat
pop
pop
mov
fimul
lahf
cmp
(bad)
xchg
retf
or
(bad)
shl
int
test
adc
xor
lea
cmp
cmp
dec
pop
into
into
inc
clc
pop
pop
sbb
jbe
adc
pushf
imul
stos
retf
sar
ja
dec
jp
sub
xchg
fwait
gs
dec
xchg
test
jl
or
pop
cdq
ja
seto
popf
add
jmp
dec
inc
cmps
or
or
adc
add
ja
xchg
imul
jecxz
push
xor
ss
ret
cdq
inc
lods
add
pop
or
(bad)
mov
aaa
fsubrp
mov
retf
inc
and
cmp
dec
(bad)
xor
in
clc
pop
cdq
lock
cmc
fwait
xor
mov
nop
in
pushf
shl
or
mov
cmps
xlat
or
mov
push
jno
mov
sar
imul
dec
and
pop
jle
fidivr
cmp
std
neg
test
xchg
(bad)
mov
icebp
add
mov
adc
xchg
jne
in
mov
inc
mov
xor
sbb
pop
loop
xor
push
or
and
push
jmp
xor
mov
dec
scas
ret
fwait
mov
in
not
or
inc
sub
sahf
push
(bad)
xchg
mov
popa
in
les
adc
xlat
push
push
test
dec
add
cli
sub
push
jns
lock
movs
outs
mov
in
jg
scas
(bad)
xor
and
mov
sbb
add
cwde
pop
out
es
(bad)
loope
push
jg
(bad)
mov
fimul
jecxz
mov
xor
jo
add
(bad)
std
fs
call
mov
aaa
lods
dec
imul
movs
into
sub
add
int
ficomp
daa
call
sbb
mov
ret
and
pusha
xor
test
sub
mov
cmp
sbb
pop
xchg
or
scas
fisubr
and
inc
xchg
jecxz
sar
jecxz
movs
mov
mov
in
or
inc
cmp
sub
leave
popf
jl
sbb
cmc
sub
and
scas
imul
scas
jmp
jl
mov
sbb
psadbw
cwde
out
inc
in
cmc
jl
(bad)
cmp
retf
cli
cwde
ins
outs
push
push
fs
lods
outs
(bad)
cmc
in
dec
jo
ins
aad
jo
add
ja
pop
xor
cdq
jnp
(bad)
icebp
leave
xchg
push
mov
int3
pop
sahf
mov
and
pop
and
jl
jg
adc
sub
xor
push
adc
fwait
mov
lods
sbb
cmp
pop
repz
jb
push
in
in
ret
xchg
icebp
retf
mov
outs
add
(bad)
inc
pop
jne
add
frstor
inc
in
cmp
jb
mov
(bad)
adc
dec
xor
and
sbb
mov
adc
mov
cmps
cwde
mov
ret
dec
sub
adc
xor
mov
mov
addr16
cli
sbb
xchg
ja
rol
mov
or
test
dec
pop
gs
cmps
lods
pop
and
movs
push
not
out
inc
xchg
mov
arpl
inc
out
dec
test
xchg
and
xor
fsub
or
jnp
inc
sti
sbb
aas
ficom
(bad)
xchg
sub
pushw
and
dec
out
jecxz
adc
fcom
scas
pop
inc
rcr
movs
loopne
xlat
std
mov
sti
stos
xchg
movs
div
push
les
aas
dec
add
ja
ds
and
lea
(bad)
pop
lahf
scas
xchg
clc
loopne
cdq
outs
test
out
or
stos
rcl
xor
and
cli
in
adc
adc
push
test
dec
sbb
in
push
sub
outs
or
test
xchg
adc
dec
call
enter
and
stc
push
fxch
mov
add
test
imul
pop
and
hlt
xor
iret
xor
leave
dec
dec
dec
ins
xchg
out
addr16
pop
dec
mov
rcr
lods
outs
loope
out
push
mov
pop
stos
push
mov
pop
fcomi
cld
adc
inc
repz
outs
sti
int
repnz
movaps
or
fbstp
mov
lea
add
movs
xchg
enter
fisttp
jnp
(bad)
lahf
imul
data16
neg
adc
add
cmp
mov
xchg
call
jl
rcl
inc
out
pop
test
sub
mov
push
pop
in
adc
aad
ins
mov
mov
out
xor
add
ret
outs
jnp
jmp
movs
mov
jb
sub
pop
mov
push
mov
loope
mov
test
mov
or
in
test
retf
add
test
sub
xchg
in
(bad)
dec
data16
in
fcmovu
push
repnz
imul
into
xchg
and
fwait
ins
pusha
jmp
arpl
xchg
sbb
mov
sbb
adc
cmp
add
outs
fstp
into
adc
shl
adc
or
mov
xchg
sar
mov
sbb
ret
mov
jnp
mov
xchg
sub
repz
xlat
push
hlt
fs
mov
jg
inc
lods
iret
in
test
xchg
xor
sub
jecxz
or
cmp
imul
fwait
jno
and
call
xor
xchg
retf
push
imul
pop
inc
mov
xchg
frstor
mov
enter
mov
call
inc
add
cwde
xchg
fcmovu
pop
and
or
fidiv
js
gs
retf
imul
scas
arpl
jns
repz
nop
pop
sbb
push
fadd
mov
xor
fild
scas
aaa
jecxz
mov
fdivr
mov
out
sub
mov
sub
(bad)
mov
sub
div
ss
aam
mov
pop
lds
push
and
cmp
sub
out
out
xchg
and
push
push
pop
(bad)
std
cld
imul
imul
jle
xchg
dec
dec
popa
arpl
pop
sbb
jl
arpl
sbb
pop
pop
ror
mov
cs
cli
out
(bad)
mov
stos
dec
pushf
outs
int
jge
cld
fdivr
fistp
and
adc
call
fucomi
push
or
into
mov
setno
jge
adc
out
sbb
xchg
std
loop
dec
lds
out
int
mov
push
jle
out
scas
cmp
lock
cld
popf
dec
xor
cmp
lock
shl
ss
and
scas
fstp
mov
inc
add
test
div
cmp
icebp
mov
es
fisubr
popa
popf
sub
ror
lds
push
or
jmp
inc
xor
inc
sub
retf
sbb
out
adc
mov
add
cmp
mov
in
loopne
xchg
adc
icebp
call
adc
jns
and
sub
retf
and
js
retf
loop
mov
inc
push
bound
cdq
jbe
push
add
movs
xor
int
xchg
xor
out
adc
mov
add
daa
push
cmps
mov
jnp
ja
xchg
mov
xor
inc
push
xor
in
int3
lahf
xchg
dec
fs
sbb
push
sub
dec
sbb
cmp
mov
jl
call
xlat
ss
in
outs
daa
ds
mov
je
cmp
fdivp
xchg
push
leave
add
mov
and
inc
adc
sbb
lock
daa
pop
xchg
or
fidivr
int
fucomi
pop
and
cmp
ds
pop
pop
rol
sub
cmp
cmps
xor
test
leave
aam
(bad)
cmp
int3
sbb
lock
xor
or
aaa
call
mov
pop
test
stos
cdq
frstor
iret
lods
pop
test
ds
mov
in
push
pop
(bad)
pop
or
mov
mov
dec
ret
push
movs
mov
rcl
cmps
sub
mov
xlat
arpl
push
mov
adc
sbb
or
(bad)
dec
xlat
pmaxsw
sar
adc
test
mov
aas
std
jae
mov
je
sbb
je
hlt
sub
fcomp
loopne
out
(bad)
test
mov
and
xchg
xchg
jge
icebp
adc
mov
fisubr
sub
in
inc
sbb
xchg
iret
(bad)
adc
cdq
xor
rcl
(bad)
pop
outs
icebp
mov
push
pop
xchg
push
jmp
pop
icebp
sahf
add
fcmove
cmps
and
ins
mov
and
jo
cmp
retf
mov
xchg
mov
xchg
mov
push
mov
and
mov
pusha
sar
stos
repz
fiadd
sti
mov
bound
inc
and
xchg
ins
dec
pop
(bad)
push
jae
shr
inc
push
ja
or
nop
sbb
aaa
add
aad
ror
mov
push
mov
xor
mov
loope
sub
repnz
add
add
add
clc
loopne
mov
mov
aad
shl
call
movs
fsub
pop
maskmovq
mul
jmp
int3
je
mov
cmps
push
mov
(bad)
imul
pop
repz
push
iret
not
bound
sti
in
repnz
xor
adc
popa
rsm
or
push
mov
das
mov
(bad)
es
add
dec
addr16
rol
movs
mov
jne
in
std
aam
je
lods
push
xor
add
cmova
or
xor
loope
dec
and
cmp
fdivr
jnp
out
add
retf
fwait
popa
or
xchg
(bad)
pop
push
adc
out
lods
in
fild
jns
cmp
pop
sar
nop
imul
pop
or
cmp
imul
add
jns
clc
cld
jne
xchg
jo
out
add
jne
xor
push
push
mov
pop
inc
adc
adc
xor
ja
addr16
push
fwait
or
and
pop
jg
retf
pusha
fdiv
add
sub
mov
xor
sbb
(bad)
out
cmp
dec
pop
loope
and
hlt
sub
std
jl
loope
pop
(bad)
loope
bound
lahf
xor
inc
out
into
push
xor
xchg
retf
mov
sbb
push
and
jle
dec
xor
xor
lds
js
mov
je
jnp
js
js
scas
xlat
(bad)
ret
(bad)
jl
imul
sub
pop
or
cmps
addr16
lods
sub
mov
in
rol
pop
xchg
xchg
cmp
and
leave
neg
add
out
shl
mov
into
xchg
clc
inc
xchg
dec
add
in
cld
jns
call
jp
lods
(bad)
into
cdq
sub
dec
jge
fsub
je
je
add
dec
ins
push
jp
sub
les
dec
xchg
cld
arpl
push
gs
sti
mov
(bad)
(bad)
cmp
in
movs
pop
and
push
aad
cmps
inc
xchg
fnsave
outs
in
scas
push
add
sub
rcr
inc
sub
push
xlat
adc
mov
push
lea
mov
xor
xchg
(bad)
fisttp
lods
xor
mov
rcr
add
mov
lods
and
sub
imul
cld
sti
daa
push
(bad)
jbe
ja
iret
sub
lea
es
pop
(bad)
mov
mov
mov
retf
dec
fbld
add
fisub
fldcw
aaa
dec
dec
aas
lahf
fcomp
rol
add
ficom
and
in
jns
mov
hlt
movs
xchg
into
xchg
(bad)
sbb
push
dec
gs
add
jmp
in
and
lods
jo
mov
loop
inc
mov
pop
sub
xor
dec
dec
fcmovu
cld
pop
out
ss
and
and
pop
(bad)
add
dec
sub
mov
pop
out
loopne
call
leave
jge
aam
outs
dec
(bad)
push
mov
lea
test
sbb
cdq
adc
movs
pop
fwait
sub
repnz
lods
inc
jb
sub
pushf
cld
dec
(bad)
and
add
mov
stos
sbb
inc
jle
sub
and
cmp
jo
imul
imul
imul
lods
and
jae
rol
mov
mov
push
xlat
call
adc
icebp
(bad)
movs
sub
movs
adc
xor
sbb
ins
rol
mov
mov
mov
adc
sti
and
mov
aad
inc
out
or
jnp
cmc
fldenv
mov
test
call
or
loop
push
mov
xor
mov
test
adc
lods
int3
xacquire
loop
cmps
lds
ins
dec
outs
pop
inc
cmp
adc
xchg
adc
pushf
outs
pop
mov
pusha
sub
data16
adc
mov
jbe
lock
lods
inc
cmp
fld
jo
xchg
pop
jb
fnstenv
call
pop
sub
mov
icebp
test
mov
adc
loope
ret
mov
int3
ret
inc
aam
sbb
mov
stos
sub
rcr
inc
loopne
add
call
mov
jno
lds
scas
cmp
sahf
ror
je
inc
dec
inc
sbb
movs
into
mov
xchg
mov
jmp
ret
sub
dec
or
inc
inc
movs
mov
or
into
jmp
push
pop
das
aas
clc
nop
cmc
and
scas
dec
or
fwait
mov
mov
rcl
or
jbe
add
sbb
sar
push
push
pop
sub
(bad)
aas
adc
out
cs
aam
xlat
fimul
ins
neg
sub
jl
push
fsub
and
jle
test
xchg
cmp
add
scas
add
jl
sbb
dec
or
inc
fild
dec
or
sub
je
aas
xor
ja
xor
sbb
nop
popf
push
ja
jb
push
dec
movs
jns
dec
xor
(bad)
fist
jmp
mov
jg
pusha
xchg
out
xchg
add
fsubr
mov
into
jge
jecxz
jno
jnp
pop
add
dec
lods
test
xchg
inc
jnp
in
mov
icebp
cdq
xchg
xchg
and
cmps
and
int
xchg
je
sbb
std
and
mov
dec
mov
inc
mov
adc
and
(bad)
out
mov
and
xchg
and
and
mov
mov
in
dec
sub
lds
jle
cmp
test
mov
cmp
mov
add
pop
test
setbe
xchg
sbb
dec
cwde
mov
xlat
(bad)
mul
or
and
or
mov
add
sbb
add
pop
div
outs
mov
into
imul
iret
(bad)
adc
cmc
push
enter
push
movs
stos
and
sahf
ret
xchg
push
pop
add
(bad)
or
mov
sub
xchg
ja
out
jne
dec
xlat
pop
test
xchg
pop
pop
xlat
sbb
iret
and
enter
fs
lock
movs
into
not
dec
push
sub
and
in
and
in
xor
lds
cmc
mov
inc
mov
or
mov
cld
scas
adc
xchg
ins
jae
int3
(bad)
ins
cs
aad
push
adc
pminub
imul
sub
icebp
adc
jp
test
lock
xlat
pop
pop
imul
cs
int
push
ficomp
test
pshufw
inc
jl
retf
cmp
bound
xor
mov
jmp
ficom
sbb
int
mov
daa
sub
lods
or
push
jmp
es
jle
fst
mov
arpl
lods
outs
pusha
jg
hlt
addr16
sub
sub
out
xor
(bad)
rol
xlat
pop
inc
pop
or
popf
cmps
test
sub
nop
lahf
lods
mov
adc
dec
adc
and
sub
mov
xlat
adc
and
dec
movs
adc
jo
mov
cmp
mov
mov
imul
pop
and
inc
leave
scas
js
adc
or
repnz
cs
inc
ds
pop
rol
outs
sub
jge
outs
jl
push
or
cs
(bad)
ror
(bad)
lods
movs
sbb
(bad)
cli
call
pop
mov
lods
dec
sub
jb
mov
push
out
fs
mov
jnp
sahf
pop
xor
ret
call
mov
jae
les
scas
fist
aas
add
fwait
sbb
ret
mov
jns
or
jge
dec
ja
fstp
jmp
dec
push
in
inc
add
push
inc
jb
retf
sbb
popa
dec
fdivp
sbb
popa
pop
or
lods
(bad)
in
mov
imul
dec
cmp
lods
pop
inc
mov
(bad)
int
retf
movs
push
lock
cli
sub
and
or
mov
hlt
ret
ror
arpl
sbb
dec
sub
mov
mov
pop
sbb
add
cmp
sub
not
sbb
ds
cmps
test
les
mov
inc
dec
packuswb
cmp
scas
imul
test
mov
imul
jge
retf
push
and
pop
stos
adc
fwait
inc
cmp
test
pop
ss
sub
mov
enter
lahf
xlat
mov
(bad)
fwait
aad
scas
xor
ret
cmp
call
adc
test
ret
das
mov
icebp
and
pop
xor
(bad)
js
push
lds
test
gs
(bad)
xlat
or
ins
rep
push
cdq
cwde
div
int3
xchg
xor
lods
daa
leave
std
mov
dec
aaa
loopne
stos
aaa
cmps
cmps
xchg
jp
xor
out
dec
leave
ret
and
sbb
or
cmp
adc
mov
pop
sbb
mov
xchg
mov
jle
jmp
fwait
jae
xchg
inc
shl
into
jl
mov
shl
dec
jmp
mov
(bad)
sub
sar
mov
test
shr
jae
popa
(bad)
xor
or
dec
push
retf
int
mov
jb
scas
iret
adc
add
sub
jb
(bad)
imul
adc
add
daa
jns
aaa
scas
or
xchg
mov
mov
aam
pop
arpl
in
in
mov
mov
add
adc
xchg
sbb
xchg
or
sbb
and
icebp
push
bound
xchg
loope
ins
sbb
mov
addr16
in
loope
aaa
aas
xchg
js
xor
adc
enter
sbb
xor
push
mov
mov
and
push
inc
aad
add
sub
test
gs
nop
repnz
xchg
mov
fst
pushf
hlt
test
test
inc
addr16
(bad)
bound
outs
and
adc
into
bound
stos
xor
mov
adc
addr16
mov
jns
lds
add
mov
or
test
pop
adc
jecxz
into
xor
test
inc
pop
lea
pop
in
add
jbe
inc
mov
pop
fmul
adc
fnstcw
push
lods
fxch
sahf
call
lahf
scas
icebp
inc
jle
mul
in
sbb
xchg
xor
pop
jecxz
mov
in
mov
outs
pop
mov
adc
ret
movs
into
mov
jp
dec
mov
xchg
push
jl
adc
jmp
pop
push
push
inc
test
test
out
repz
dec
data16
retf
jne
push
lahf
in
cmp
imul
scas
or
mov
ja
shl
cmc
cli
stos
mov
mov
loopne
jne
sub
or
and
and
adc
or
mov
outs
ja
leave
jnp
imul
stos
or
icebp
out
push
jb
sub
cmovbe
adc
pop
scas
(bad)
hlt
xchg
sbb
pop
sbb
sub
dec
in
icebp
lea
jbe
ins
or
sbb
popa
gs
xor
out
pop
aaa
test
adc
fisub
test
mov
inc
mov
aas
retf
push
fmul
sbb
mov
(bad)
fcmovnu
xchg
jecxz
push
jmp
ins
nop
int
or
inc
mov
adc
jmp
pop
outs
aaa
arpl
stc
inc
push
dec
icebp
push
repnz
(bad)
pop
and
mov
mov
loope
sbb
dec
je
fsub
mov
clc
and
gs
aas
das
aas
clc
lock
jae
xor
bound
pushf
addr16
sbb
sbb
lods
pop
shl
mov
adc
pusha
push
pop
rcr
mov
in
lods
sar
test
pop
sub
lds
cmp
or
nop
lock
div
or
jne
es
(bad)
cmc
jb
mov
jnp
stc
lahf
push
leave
or
ins
sub
and
jo
cld
rcr
jnp
mov
push
sbb
push
iret
pop
enter
xor
jns
aas
ins
out
or
dec
sub
add
mov
xlat
mov
mov
ja
in
scas
das
add
in
push
or
adc
aaa
and
neg
jl
aad
mov
icebp
mov
pop
pop
pop
pop
test
add
inc
fwait
test
pop
xchg
xor
fyl2xp1
cmp
ficom
test
bound
adc
xchg
scas
repz
jp
std
xchg
cdq
cmps
sub
inc
cmp
xor
inc
inc
inc
push
mov
sar
fistp
sub
sub
inc
aaa
popa
enter
lods
mov
outs
push
(bad)
call
xchg
movlps
xchg
jg
xchg
cmp
(bad)
push
cdq
cmp
mov
popa
pop
aam
jns
cli
dec
ss
mov
das
hlt
mov
out
mov
and
sub
pop
xor
sub
dec
push
leave
sar
and
data16
cmps
shr
enter
jae
fistp
sahf
add
or
stc
mov
ret
cmp
ins
fstp
jb
cmp
outs
sbb
outs
test
push
inc
mov
push
jno
daa
sti
dec
push
test
scas
aam
push
push
pop
lods
rcl
data16
cdq
(bad)
(bad)
nop
mov
into
in
enter
fstp
push
mov
or
repnz
jle
mov
xchg
shl
mov
jmp
adc
daa
pop
sub
push
dec
mov
jmp
stc
jmp
sbb
and
jmp
mov
movs
stos
pushf
push
iret
lds
in
dec
dec
retf
and
(bad)
call
pop
outs
repnz
test
lds
push
and
add
rcl
imul
push
shl
fisttp
dec
out
pop
inc
sub
jns
lahf
push
out
sub
push
pop
sahf
mov
and
in
adc
ds
inc
add
repz
loope
shr
push
mov
cmc
cmp
dec
xor
out
push
shr
fwait
out
gs
push
leave
push
jo
ret
daa
push
push
jno
fs
inc
xor
adc
jno
ficomp
call
mov
in
push
shr
hlt
push
xor
mov
out
mov
loopne
push
adc
jns
popf
dec
enter
mov
xchg
push
in
sbb
fwait
div
ss
out
cli
cmp
jnp
lock
ss
std
pop
fcomp
ins
jge
mov
hlt
into
shr
mov
dec
cmp
adc
or
sub
int3
xchg
in
pushf
aad
mul
or
aad
sub
inc
inc
outs
cld
and
movs
pop
mov
push
lods
sbb
push
pop
mov
sti
jmp
cmp
xlat
dec
sub
jb
xchg
sti
dec
add
in
sar
stc
mov
es
shr
popf
lods
or
hlt
sub
pop
adc
xor
inc
add
cmp
xchg
movs
leave
fs
les
cmp
lock
mov
mov
inc
js
sub
adc
mov
ja
and
fcmove
sbb
add
stos
into
in
push
lds
sub
mov
xchg
(bad)
pop
loope
cmps
arpl
fs
xor
sub
mov
mov
(bad)
jo
mov
cmc
dec
xchg
add
mov
or
sbb
out
imul
(bad)
xor
out
stos
add
call
xchg
cwde
lea
sub
xchg
xchg
cdq
mov
mov
mov
mov
cli
mov
popa
cmp
loop
xor
mov
fmul
loope
dec
ins
loop
jns
inc
or
imul
ret
aas
dec
or
dec
test
fnstcw
mov
cmp
imul
cdq
jge
jecxz
jp
sbb
xor
or
push
fidivr
ret
and
pop
imul
pop
push
outs
and
xor
in
add
inc
mov
or
outs
xor
dec
leave
aad
xchg
leave
ins
and
cmp
push
iret
out
pop
pop
sbb
inc
mov
adc
icebp
push
repz
sub
(bad)
jl
int3
xor
and
and
call
cmc
push
mov
aam
pushf
out
inc
popa
test
xlat
test
and
and
(bad)
aam
inc
cld
mov
mov
or
add
ja
fs
cmp
call
hlt
push
xor
jl
cmp
es
mov
lods
xor
aas
shl
cwde
jo
fdivr
adc
lds
and
mov
cmovs
xlat
test
sub
inc
std
loope
aas
xchg
cdq
add
inc
(bad)
cmp
cmc
ror
inc
or
xor
(bad)
sbb
adc
cmp
scas
je
sub
or
sbb
iret
mov
mov
xchg
fs
daa
jmp
xor
loopne
in
sub
retf
lahf
stos
add
mov
lods
inc
cwde
rcr
in
push
outs
and
pop
loope
adc
lods
(bad)
mov
sbb
mov
inc
retf
or
mov
adc
aaa
fadd
mov
aaa
and
mov
cwde
sub
jle
inc
in
std
(bad)
call
add
mov
test
pop
and
jb
inc
imul
ins
aad
xor
aad
outs
and
add
les
shr
add
jl
ja
cmp
push
sub
and
fsub
stc
pop
mov
jge
hlt
icebp
pushf
jne
dec
and
or
adc
sbb
in
mov
push
hlt
mov
jne
in
mov
mov
ja
mov
scas
inc
fst
dec
cld
pop
cwde
cli
mov
loope
inc
out
sub
dec
scas
ror
test
and
push
shl
fdivr
retf
vmovd
pop
push
leave
mov
sti
mov
mov
imul
add
sbb
adc
jnp
and
int3
lahf
lea
pop
xchg
fdivp
sub
add
(bad)
xchg
test
cmp
push
mov
retf
mov
or
add
mov
aam
mov
xchg
mov
inc
iret
pusha
mov
sub
stos
mov
mov
push
jns
std
int3
dec
jecxz
in
dec
xor
mov
mov
mov
sbb
ret
out
mov
dec
shl
mov
ret
je
(bad)
and
mov
arpl
pop
push
mov
mov
cmp
add
push
mov
mov
aad
shl
xlat
mov
push
fidiv
imul
popf
lods
std
popf
cmp
popf
pop
jo
jle
add
mov
mov
sbb
add
mov
fisubr
repnz
das
mov
cmp
or
cmp
loope
jo
dec
add
test
je
enter
test
(bad)
es
in
cwde
fsub
and
bound
dec
xchg
leave
jp
dec
add
les
fs
(bad)
int3
mov
mov
(bad)
out
xor
pop
mov
in
fsubp
mov
sar
cmp
mov
lahf
xor
ds
cmc
mov
sbb
mov
inc
pop
pop
pop
add
in
mov
sbb
mov
leave
fwait
xor
and
pop
mov
in
std
mov
mov
pop
jb
pop
in
fistp
int3
mov
or
test
retf
sbb
mov
call
sub
sub
movs
dec
inc
js
mov
jbe
or
pop
sbb
ins
mov
rcl
jp
mov
fdivr
cmp
add
lea
aad
or
scas
cmp
cwde
dec
stos
cmp
mov
fisttp
sbb
ss
xor
push
xor
cmp
sbb
fild
neg
test
sub
jle
jno
les
push
cdq
clc
pop
mov
mov
retf
ja
fistp
rcr
jle
and
rcr
jne
retf
fld
cmp
mov
jle
pushf
mov
add
inc
push
scas
inc
mov
sbb
loope
mov
xchg
dec
mov
inc
jmp
jns
dec
mov
dec
mov
adc
shl
into
mov
add
xchg
repz
adc
stos
and
pop
sub
jl
mov
xchg
xor
jo
pop
repz
xor
leave
shl
call
dec
adc
dec
adc
sub
not
mov
aaa
pop
punpckhwd
dec
cmp
mov
mov
cmp
inc
xor
aad
and
cmp
arpl
inc
loopne
lock
adc
in
push
sahf
mov
clc
nop
cld
test
pop
fmul
mov
fldenv
add
nop
int3
shl
inc
cmps
outs
gs
and
push
ss
std
sub
push
inc
sub
xchg
add
xchg
stos
rcr
pop
cld
ins
or
adc
rcr
jmp
dec
add
inc
jns
ss
cmp
cld
(bad)
push
outs
jbe
lock
jnp
dec
pop
loopne
pop
mov
sub
sub
add
outs
sar
xchg
and
push
xchg
mov
movs
lock
in
mov
sar
xor
mov
jns
cdq
loop
inc
sub
fs
pop
add
and
mov
push
jg
mov
add
xchg
inc
test
ror
loopne
test
sahf
push
mov
test
jnp
inc
loop
dec
daa
dec
push
pop
sar
xchg
repz
mov
pop
dec
cmp
pushf
hlt
rol
in
retf
pop
clc
sbb
xlat
pushf
imul
(bad)
fwait
sar
pop
test
packuswb
and
out
(bad)
leave
jne
mov
inc
ret
sbb
sub
pop
fwait
test
push
shl
inc
cmp
pop
out
movs
xor
std
or
xchg
push
jo
aad
and
or
or
jb
sbb
dec
retf
dec
jg
mov
retf
xor
jne
sbb
jmp
arpl
pop
sbb
jmp
xor
mov
jmp
mov
sti
sti
mov
pop
pop
loope
mov
aad
jle
dec
mov
dec
dec
jle
aas
out
xchg
cdq
and
icebp
lods
stos
fiadd
aas
mov
ins
sbb
inc
(bad)
lods
outs
jne
mov
mov
or
dec
xor
mov
push
push
mov
inc
das
aam
pop
xchg
sti
in
pop
gs
mul
inc
pushf
cmp
jnp
imul
ss
das
push
movs
cmp
push
dec
inc
cmps
pop
cli
mov
or
or
popf
mov
xor
pusha
push
loop
stc
mov
mov
gs
jle
pop
cmp
dec
add
sub
jae
push
adc
adc
in
push
daa
lods
movs
fwait
sub
xor
mov
pop
adc
cli
xchg
or
push
inc
(bad)
cmp
cmp
movs
add
inc
jo
pop
sbb
mov
pushf
adc
std
mov
mov
rcr
adc
jne
xor
and
jg
(bad)
or
pop
mov
mov
stos
push
dec
jle
test
xchg
push
loopne
call
cs
fldenv
inc
int
pop
and
and
lds
mov
jmp
cmp
cmc
xchg
shl
inc
loopne
ror
sbb
and
inc
repz
mov
cwde
pop
in
dec
xor
loopne
popf
mov
mov
dec
mov
cmp
(bad)
out
out
addr16
adc
sbb
xchg
xor
mov
ffreep
jno
cmps
add
jbe
stos
hlt
or
adc
in
fisub
cmp
int
push
jns
pop
lods
rcl
sbb
and
dec
fldenv
jmp
pusha
ja
mov
jmp
lahf
shr
sub
aaa
sti
sub
jmp
dec
adc
aas
repnz
mov
dec
in
inc
xchg
mov
inc
shr
or
hlt
(bad)
(bad)
(bad)
hlt
mov
mov
mov
in
cld
fisubr
stos
inc
imul
sbb
mov
and
pop
arpl
outs
cmp
loopne
fsub
fld
dec
(bad)
scas
add
cmp
push
jle
dec
(bad)
sti
aas
shr
push
mov
push
ins
clc
mov
cwde
sub
mov
add
and
lea
or
(bad)
mov
mov
out
adc
mov
ror
(bad)
icebp
repz
push
jae
mov
adc
xor
inc
movs
or
fdiv
xor
push
retf
rol
cmps
and
sbb
jmp
pop
mov
and
xor
push
push
(bad)
fucomi
test
cmp
mov
sub
gs
jns
mov
gs
popf
sbb
xor
pop
pop
jns
add
sbb
dec
sbb
sbb
fstp
cwde
shl
shr
push
sub
aam
inc
sub
fist
xlat
push
ret
sti
mov
vcvtps2dq
ret
cmp
movs
mov
mov
and
adc
mov
or
jns
loop
sub
int
daa
cmp
pop
xchg
sbb
test
adc
or
add
nop
(bad)
(bad)
fnstcw
or
mov
adc
cmp
aaa
fild
and
push
inc
push
pop
into
inc
es
in
js
jo
push
cwde
repz
push
or
ds
(bad)
ja
inc
test
retf
mov
adc
test
mov
inc
dec
retf
adc
loopne
mov
shl
and
and
retf
xchg
sbb
lahf
mov
xchg
addr16
pop
pop
mov
pop
ins
popa
(bad)
xchg
push
xlat
sbb
sub
inc
xor
mov
push
out
dec
mov
call
int3
jno
cmp
outs
inc
xchg
neg
lds
in
inc
and
and
xor
pop
idiv
push
js
call
cmp
jg
ins
pop
cmp
inc
cmc
xchg
ss
(bad)
inc
and
nop
dec
nop
jo
and
sub
cmc
xor
call
jg
out
cmp
mov
mov
outs
repz
pop
cmp
add
jno
and
xor
in
movs
dec
inc
cmps
out
pop
or
(bad)
sahf
mov
sar
dec
cmp
adc
call
in
jns
push
lahf
test
adc
adc
bound
push
movs
scas
push
mov
fcmovnu
cld
xchg
pop
push
gs
and
call
test
call
xchg
mov
inc
push
sbb
imul
inc
call
dec
aaa
cld
popf
repnz
fs
in
jns
sub
xor
test
fldenv
ret
inc
lahf
push
mov
add
ins
js
inc
jns
loope
scas
sbb
retf
mov
pop
pop
aam
jb
sub
pop
or
ins
jecxz
adc
test
mov
xchg
jecxz
or
loope
and
mov
iret
xchg
xchg
and
loopne
call
imul
push
ret
jno
jg
fwait
cdq
fist
or
add
cmp
in
adc
sub
and
pop
add
movs
hlt
push
popf
jp
hlt
sbb
sbb
nop
(bad)
add
adc
in
rcl
and
out
mov
call
out
ins
scas
fcomp
int3
(bad)
jge
popa
xchg
xor
outs
mov
nop
ins
(bad)
inc
mov
dec
mov
xchg
cmps
push
mov
inc
add
inc
pop
inc
mov
dec
mov
mov
es
and
sub
std
nop
add
mulps
aaa
xchg
pop
and
nop
pop
push
in
mov
psubq
ds
scas
fisttp
sbb
mov
xor
cmp
jge
push
dec
mov
cmc
cmp
inc
mov
ss
pushf
out
lea
std
xor
jo
outs
cmps
imul
ins
adc
mov
sbb
(bad)
rcl
enter
sub
adc
fsub
xchg
mov
dec
mov
jmp
jbe
add
and
inc
push
add
das
(bad)
test
adc
xor
sub
mov
sub
(bad)
loop
inc
loope
pop
stos
or
or
repz
push
(bad)
xor
push
repnz
push
dec
bound
repz
(bad)
into
xor
leave
fistp
jb
stc
test
enter
mov
and
jecxz
mov
shl
dec
fidiv
pop
fsub
pop
dec
ss
and
loope
cmp
pop
popf
mov
movs
jbe
sbb
pop
sbb
lods
lds
out
ffree
movs
xor
cmp
es
pop
push
or
call
add
push
or
test
jmp
sbb
pushf
gs
cdq
pop
mov
aaa
mov
and
das
in
pop
xor
or
repnz
dec
dec
ret
xchg
xchg
add
xor
imul
jne
xchg
mov
mov
mov
out
in
pop
in
arpl
and
icebp
imul
cs
jo
inc
dec
mov
cwde
add
in
xchg
lock
mov
mov
lds
pop
psrld
mov
aad
mov
adc
sub
xchg
movsx
push
add
or
add
sti
lahf
(bad)
aas
loopne
sbb
and
shr
sub
mov
lds
outs
jl
pop
pop
or
jmp
fmul
fiadd
ret
call
or
fisub
mov
jns
mov
and
out
test
jmp
test
icebp
add
sbb
iret
test
cmp
push
sbb
jno
cmp
cmp
pop
scas
push
movs
dec
dec
or
rcl
mov
sahf
std
test
fs
in
out
scas
pusha
fadd
int
xor
sbb
mov
jae
in
mov
or
fisttp
cwde
mov
add
scas
stos
fisubr
and
pop
(bad)
ss
scas
cmc
stc
(bad)
stc
inc
or
sub
push
lods
xchg
nop
or
sub
cmps
cmp
and
stos
sbb
stos
test
test
popf
fdiv
stos
test
cmp
xchg
push
or
fs
xor
outs
popf
mov
js
mov
xor
mov
mov
call
sub
loop
pushf
add
or
(bad)
add
in
(bad)
pop
jo
or
gs
push
cmp
jns
mov
dec
inc
clc
cmc
fimul
lahf
push
lods
int
pop
sub
jne
xor
aas
or
xchg
scas
sbb
ret
sbb
mov
loope
adc
push
mov
rcr
into
cmp
add
sub
nop
mov
(bad)
mov
nop
cli
dec
xor
sub
ds
cmps
jbe
dec
sar
mov
adc
xchg
out
arpl
inc
leave
inc
js
fs
and
sub
pusha
cmp
and
das
ds
std
dec
push
arpl
shr
outs
pop
call
(bad)
aad
retf
mov
cmps
push
ds
mov
movs
aas
test
jne
popf
rcr
cmp
nop
or
cmp
in
int3
inc
xchg
fdivrp
xchg
cmp
jo
or
(bad)
clc
and
sbb
jecxz
test
out
imul
xor
push
add
(bad)
loopne
stos
(bad)
fimul
jno
daa
jmp
mov
and
cld
loopne
std
xchg
sub
pop
push
push
in
(bad)
aam
adc
sub
push
test
adc
dec
jnp
inc
les
mov
fdivp
add
add
rol
and
ret
mov
pop
pop
loope
inc
dec
inc
mov
dec
sbb
pop
(bad)
mov
sub
cmps
jbe
repz
(bad)
aaa
out
(bad)
cmp
repnz
jnp
jmp
mov
ficomp
movs
in
mov
out
push
in
dec
cs
pushf
add
lods
mov
ins
cmp
clc
mov
pop
cmp
xor
pushf
out
or
add
shl
mov
popa
and
pop
loope
enter
cmp
jae
clc
mov
mov
mov
jl
aam
add
push
cli
je
mov
test
leave
mov
ss
cwde
mov
mov
and
inc
in
inc
in
mov
bound
je
or
dec
nop
xor
mov
or
movs
pusha
xor
lahf
lods
pop
ins
jmp
pop
out
out
mov
fcom
inc
pop
mov
in
ss
or
mov
pop
mov
ins
sahf
call
xor
nop
xor
les
or
adc
(bad)
xchg
xchg
sti
cld
nop
ins
out
or
mov
xchg
xchg
sbb
std
sub
cwde
add
xchg
push
scas
arpl
cli
data16
(bad)
mov
xor
out
sub
xor
addr16
(bad)
mov
lods
cmc
mov
outs
pop
test
push
push
mov
or
jle
loope
sahf
nop
adc
or
ret
adc
(bad)
retf
dec
jae
jmp
mov
into
mov
clc
and
xchg
pop
push
adc
inc
mov
sahf
call
xor
xchg
xlat
mov
pusha
sbb
adc
rcr
test
add
dec
jae
mov
std
and
mov
inc
adc
and
or
hlt
nop
sbb
or
xchg
test
mov
xchg
dec
push
inc
(bad)
cmp
jae
sub
add
pop
jnp
lahf
pop
mov
push
cmp
xlat
sub
movs
add
jo
stos
mov
ds
enter
adc
mov
mov
mov
pop
jmp
cmc
hlt
loopne
ins
cmps
or
and
push
ins
inc
sbb
xor
xor
arpl
and
sbb
repz
sbb
leave
mov
mov
push
push
in
loop
shl
xor
adc
sbb
sub
push
fist
sti
xor
inc
enter
fild
xchg
(bad)
daa
popf
popf
ds
lahf
daa
test
icebp
movs
pusha
cs
mov
xchg
iret
xchg
loopne
sub
cmp
cmp
in
xor
mov
pushf
sub
(bad)
and
sbb
jl
inc
or
push
mov
xor
out
data16
add
cmp
xchg
jl
pop
popa
addr16
mov
jl
push
lods
cld
inc
inc
ss
jle
cmp
push
mov
jmp
pmulhuw
dec
xor
sub
pop
xor
push
fucomp
ret
dec
sub
inc
sub
fidivr
inc
jae
inc
mov
pop
imul
dec
or
std
out
lea
lahf
adc
(bad)
aaa
repz
retf
sub
inc
aas
xchg
mov
retf
ins
or
test
dec
jg
adc
bnd
mov
scas
inc
shl
and
es
mov
jne
ins
push
daa
scas
push
xchg
fldenv
test
jne
push
dec
add
cmps
loop
and
cmc
adc
push
(bad)
(bad)
fild
sub
popa
mov
cmp
(bad)
cmp
pop
push
sahf
in
xor
push
dec
pop
out
pop
call
js
add
loopne
imul
push
dec
lods
add
add
std
test
mov
pop
repz
xlat
cmp
inc
inc
cmps
xchg
pushf
aam
xor
inc
push
test
dec
inc
mov
(bad)
jmp
out
mov
ret
ret
xor
jns
inc
xor
fucomp
xor
lahf
dec
dec
(bad)
lods
dec
mov
rcr
jge
bswap
xor
add
sbb
les
loopne
mov
cmp
cmc
jns
not
dec
adc
xchg
movs
pop
in
(bad)
add
das
xor
ror
and
inc
jge
lds
dec
movs
xchg
in
mov
outs
jb
xchg
scas
or
loopne
jmp
in
cld
out
repnz
aaa
out
ret
scas
imul
or
jns
cmp
or
fstp
jg
push
xchg
shl
rol
adc
gs
(bad)
rcl
push
sti
dec
push
and
push
push
fs
dec
push
jmp
pop
and
in
mov
in
call
mov
ins
xchg
jp
rcr
push
mov
outs
inc
fnstenv
sbb
jmp
or
sbb
(bad)
sbb
xchg
cmp
es
fstp
std
xchg
mov
add
int
sar
push
jp
dec
ss
push
dec
xor
push
jne
cld
cmps
(bad)
cmp
imul
rcl
adc
fadd
out
daa
mov
xchg
push
mov
cwde
and
mov
inc
pop
scas
push
and
pusha
add
cmp
mov
std
mov
jae
or
cmp
out
adc
int
rol
(bad)
out
sbb
or
inc
das
sub
push
fwait
loope
sub
add
cmp
fldenv
mov
and
add
js
mov
out
call
test
sub
add
xor
sbb
in
mov
inc
pop
mov
out
sub
add
jo
jo
xchg
mov
mov
fs
fdivp
and
dec
cli
idiv
cmp
inc
(bad)
add
outs
outs
dec
push
inc
add
leave
sub
pushf
mov
(bad)
fmulp
push
mov
mov
xor
cwde
pop
or
add
cdq
out
mov
cld
sub
les
mov
cmp
nop
bound
retf
mov
xchg
xchg
cmp
jmp
nop
dec
pop
cmp
cmp
sahf
int
mov
pop
(bad)
dec
sub
adc
xchg
fcomi
pop
add
ins
fst
arpl
or
mov
cmp
mov
pop
in
jmp
in
sbb
pop
sub
add
test
ficomp
fisub
mov
fwait
mov
push
aas
jg
xchg
std
aaa
dec
in
aam
add
scas
out
icebp
push
sub
es
mov
sbb
stos
scas
sub
xor
sbb
in
adc
mov
cmps
inc
aad
(bad)
cli
dec
dec
scas
inc
or
sahf
mov
sub
std
stos
dec
cmc
jo
lods
lods
mov
(bad)
mov
sub
adc
add
inc
dec
push
pop
cmp
mov
add
(bad)
mov
std
sti
xchg
imul
(bad)
sbb
xor
iret
lock
inc
and
std
push
div
xor
(bad)
push
mov
das
jae
pop
xor
repz
sub
jns
push
cmp
sub
lods
(bad)
das
xor
xor
add
arpl
test
shl
je
lock
(bad)
out
adc
jle
or
inc
movs
xchg
in
mov
in
pushf
mov
and
dec
sub
and
pop
(bad)
push
sar
sti
mov
mov
adc
inc
pop
mov
lods
fcom
pop
call
ret
xchg
xchg
fld
hlt
in
cmp
imul
cwde
pusha
cdq
jo
sbb
push
cmp
push
sbb
(bad)
mov
fsubr
cmp
push
sbb
push
push
mov
das
cmps
and
mov
jge
push
add
or
mov
cmc
rcl
cmp
pop
push
mov
cmps
add
sub
sbb
push
sbb
scas
jge
mov
pop
xor
xor
leave
mov
aad
dec
mov
push
fnstenv
ficomp
dec
(bad)
pop
call
mov
jo
sbb
mov
out
imul
(bad)
sub
arpl
retf
in
mov
in
mov
bound
jno
je
cmp
mov
add
imul
sub
retf
push
fild
pusha
in
xor
cmp
stc
je
ja
mov
cmc
push
dec
mov
xchg
pop
retf
out
jmp
loope
inc
mov
dec
adc
cwde
jl
in
sbb
lahf
xchg
xchg
shl
test
dec
or
test
sbb
push
push
mov
mul
(bad)
xchg
lods
into
add
fisttp
xor
sub
hlt
sub
jmp
xchg
xor
mov
push
push
enter
xchg
jno
outs
xchg
lods
adc
jae
cli
inc
imul
sbb
cmc
outs
pop
popf
sub
pop
ja
mov
mov
and
push
mov
mov
mov
fs
xchg
sub
es
or
mov
movs
leave
adc
and
loopne
ret
test
adc
in
les
sbb
xor
clc
mov
ror
das
mov
xor
add
inc
lahf
sti
jmp
or
jb
stos
xchg
push
sub
sub
out
mov
sub
sbb
sub
movs
mov
jmp
or
push
ja
xchg
sub
mov
test
daa
add
add
(bad)
in
ds
pop
rol
jge
inc
adc
mov
jl
out
pop
cmp
pushf
lahf
xchg
and
adc
jecxz
dec
dec
outs
cmps
stc
test
mov
mov
jo
mov
lock
ins
fucomip
cmp
fwait
call
retf
fcom
mov
cs
mov
xchg
add
jmp
sub
jno
das
mov
xor
xchg
cmp
call
inc
ds
jo
inc
pop
sahf
out
jmp
push
fmul
mov
jno
fisubr
pop
popa
xlat
fidiv
xor
pop
adc
xchg
mov
dec
xlat
out
pop
adc
mov
repnz
aam
fld
out
(bad)
and
scas
aaa
stos
mov
mov
and
or
mov
daa
lahf
fcompp
ror
fucomp
stos
lahf
push
dec
mov
inc
sahf
pop
stos
cdq
retf
and
fisubr
test
jecxz
jmp
jns
repnz
pop
sub
cmp
or
jmp
push
retw
je
mov
jne
and
icebp
(bad)
in
cmps
ret
adc
sbb
mov
(bad)
xor
xor
cli
pop
jmp
and
push
xor
inc
add
pop
and
addr16
mov
test
xchg
and
sbb
dec
call
dec
inc
popf
mov
sar
mov
fisubr
das
popa
hlt
rcl
mov
iret
xchg
jnp
pop
xchg
dec
push
adc
cmps
repz
xor
jle
imul
std
push
or
es
push
fcomp
and
adc
jle
jno
icebp
gs
imul
repnz
rol
lods
pop
inc
cld
sub
mov
mov
push
add
arpl
clc
fisubr
pop
and
adc
repz
stc
inc
dec
push
sar
jmp
stos
cs
(bad)
ins
xor
sbb
icebp
jmp
mov
pop
pusha
cmp
(bad)
(bad)
call
mov
aad
sub
out
repz
jmp
in
movs
frstor
arpl
mov
cmp
cwde
push
jg
mov
fnstcw
outs
pop
xor
imul
cs
and
mov
xchg
(bad)
popf
xor
shl
int3
dec
add
mov
lock
arpl
pop
mov
pop
test
sbb
into
mov
addr16
inc
je
dec
mov
or
popa
push
add
retf
popf
pop
sbb
or
daa
bound
inc
bound
mov
mov
mov
inc
pushf
dec
(bad)
pop
xchg
popf
mov
and
inc
(bad)
adc
mov
popf
xor
lahf
je
fwait
add
fmul
jb
or
test
ss
aad
ds
sete
sub
and
and
call
xchg
popa
in
loope
sti
mov
cld
rcl
je
and
pop
and
pop
add
push
(bad)
test
xor
dec
mov
jne
out
fidiv
xrelease
push
push
loopne
pushf
push
jmp
adc
push
inc
popa
lea
sbb
mov
loope
mov
push
jg
add
push
lods
add
es
mov
cli
and
xchg
rcl
or
fadd
jle
cwde
cmp
ja
mov
imul
and
lds
xchg
xchg
aad
and
inc
pop
mov
ret
xchg
adc
aas
sti
lahf
add
push
pusha
bound
xchg
das
ret
pushf
and
aas
ret
xor
mov
jge
jl
add
je
inc
push
jecxz
(bad)
mov
in
mov
aaa
adc
shl
sub
inc
test
lock
out
cmp
jb
ret
ficom
in
(bad)
mov
in
or
je
das
push
push
push
aad
inc
lods
xor
icebp
cmp
out
fisttp
sbb
jbe
xchg
pop
xor
ficomp
test
pop
sub
jns
fst
pop
fbstp
sbb
dec
inc
and
ret
jp
jo
mov
mov
xchg
aaa
or
xchg
lahf
setp
jle
adc
and
push
cmp
aad
mov
adc
dec
ret
xchg
test
(bad)
xor
and
and
shr
cmps
loopne
mov
call
mov
mov
loopne
ficom
xchg
repz
leave
out
cwde
popa
or
cmps
gs
or
test
add
xchg
out
adc
loopne
jmp
add
sbb
out
mov
add
lea
sahf
call
push
xor
cdq
push
addr16
cld
cmp
adc
mov
and
into
pop
or
or
adc
adc
lds
inc
cmps
outs
sub
outs
pop
call
adc
loop
loope
scas
or
push
add
sbb
lea
gs
fcomip
nop
mov
call
jle
loop
xor
dec
mov
test
ficomp
imul
xor
xchg
movs
rcr
push
inc
iret
and
or
cmc
xchg
sbb
test
jbe
adc
stc
add
lods
mov
jl
pop
xchg
out
pop
inc
in
push
push
inc
int3
imul
dec
int3
and
push
pusha
test
pop
dec
inc
and
xchg
jo
xlat
sbb
out
pusha
jmp
ss
fwait
xor
inc
or
xchg
mov
ret
outs
rcr
mov
fdiv
sub
push
jl
shl
arpl
mov
lock
inc
jle
dec
pushf
sub
js
sub
add
mov
sti
movs
pop
mov
mov
dec
cmp
js
cmp
ins
sbb
xchg
mov
cs
mov
xchg
lods
(bad)
cli
movs
in
ret
inc
sbb
mov
jle
jge
adc
adc
icebp
fist
mov
sub
outs
push
sub
mov
jno
pusha
jbe
add
in
push
loop
xchg
adc
pop
leave
adc
sub
cmp
pop
aas
sbb
ret
stos
sti
xor
mov
cmps
in
jbe
jp
stc
mov
inc
neg
jnp
loopne
mov
push
jmp
mov
aas
ja
loope
pusha
jle
retf
mov
mov
(bad)
xor
jno
pushf
test
out
int3
inc
and
cmp
retf
sub
push
daa
out
sub
ss
pop
pop
aam
pop
adc
jbe
call
outs
inc
pop
lds
call
xor
nop
ss
rcr
pop
push
icebp
mov
xor
push
loope
mov
es
(bad)
cmp
imul
mov
mov
jp
fdiv
mov
mov
and
push
sub
add
dec
inc
sub
inc
xchg
mov
test
stos
xchg
call
mov
sbb
inc
fcom
and
imul
pop
add
xor
jb
pop
jmp
and
das
xor
cmp
dec
jge
mov
ret
inc
or
popa
mov
cmp
mov
iret
fcomi
sub
movs
je
int3
mov
pusha
cld
(bad)
test
pop
(bad)
aaa
mov
out
push
shr
in
or
cdq
cmp
outs
jns
jnp
inc
push
jp
dec
lea
shl
dec
and
add
cmp
add
adc
repnz
or
or
(bad)
in
add
lahf
dec
push
rol
imul
inc
jnp
leave
pop
jl
push
mov
push
jno
(bad)
enter
lods
mov
rcl
mov
pop
pushf
in
push
or
sbb
mov
shl
inc
adc
ins
pushf
or
xchg
gs
les
test
cmc
mov
mov
and
xchg
mov
outs
push
retf
lock
test
dec
cld
sbb
in
lods
and
iret
mov
jge
ficomp
loop
stos
xchg
icebp
cmp
xor
sub
imul
cmp
fcom
shl
inc
ret
iret
pop
clc
ins
cs
das
jae
cmps
repnz
xchg
inc
pusha
rcr
inc
mov
inc
push
fs
jp
imul
pop
jl
pusha
pusha
pop
stc
sub
sti
ins
test
add
mov
cmp
xor
(bad)
test
jp
lock
xchg
cmp
stos
or
or
fisub
push
sahf
aas
push
call
lahf
jge
adc
push
sub
jne
inc
adc
sbb
sub
jno
popa
dec
repz
stc
xchg
xor
aad
movs
mov
add
std
sub
mov
test
push
jp
mov
popf
xor
xchg
jle
cmp
inc
mov
lea
sub
sti
inc
xchg
js
mov
test
push
mov
adc
aas
(bad)
pop
inc
push
xor
add
and
in
ins
mov
fistp
mov
jae
out
int
xchg
stos
jg
sbb
js
and
pushf
jne
push
pop
fstp
fcom
repz
out
mov
pop
retf
jle
push
sbb
shl
lods
cmp
js
add
mov
jmp
cdq
dec
inc
xor
inc
add
lods
enter
mov
and
mov
or
imul
fwait
mov
nop
jno
scas
cmp
ficomp
fwait
shl
sti
and
sbb
ret
scas
add
fcomp
in
aas
out
adc
cli
jno
(bad)
loopne
in
pop
out
stos
ret
pushf
jge
mov
(bad)
pop
repz
retf
inc
adc
inc
leave
inc
push
jno
ret
sbb
jne
inc
xchg
aaa
and
pop
or
cmp
stc
ret
ds
int3
xchg
and
sbb
mov
mov
ror
(bad)
jno
retf
sbb
bound
ja
leave
shr
mov
cmp
aam
mov
dec
lods
bound
add
ins
(bad)
push
bsf
fistp
mov
loop
adc
clc
mov
xor
mov
mov
inc
mov
retf
mov
xor
shr
daa
fiadd
fwait
ror
mov
ficomp
(bad)
ficom
cwde
adc
ret
js
shl
clc
cld
xor
test
movs
jb
or
sbb
mul
mov
retf
pop
mov
sti
test
or
out
jae
(bad)
pop
fistp
jp
cwde
add
mov
lahf
sbb
pop
pop
sbb
mov
jo
lea
std
pop
cwde
mov
shl
sub
pop
loop
repz
repz
icebp
sub
sti
jg
or
push
pop
icebp
or
or
xchg
xchg
mov
loope
pushf
mov
out
loop
dec
daa
adc
lods
add
mov
ret
or
ret
arpl
dec
xor
inc
xor
fidiv
call
inc
pop
and
cdq
and
xor
fnstsw
data16
cmp
push
mov
sbb
add
adc
mov
aam
and
add
nop
icebp
add
int3
xchg
shl
dec
cmp
dec
and
inc
lods
sub
sbb
xor
or
or
mov
ret
mov
js
inc
push
dec
jmp
jmp
push
js
(bad)
stc
fisttp
xchg
mov
mov
gs
fmul
cmp
sub
and
test
mov
(bad)
fisubr
add
div
stos
push
shl
jnp
shr
sbb
fwait
das
nop
imul
dec
out
test
aaa
retf
aaa
sahf
cmp
and
shl
jo
mov
sahf
jecxz
xchg
inc
loope
xor
pop
in
int3
xor
ins
fisubr
push
pop
sub
test
xor
adc
cli
mov
gs
mov
push
lahf
fistp
jp
daa
repnz
ret
call
add
pusha
inc
cmc
sbb
repz
xor
push
leave
xchg
push
add
push
mov
rcr
push
push
xchg
fild
cld
fidivr
test
jb
pop
sbb
sahf
pushf
xchg
sar
push
inc
pop
pop
sar
icebp
cmp
mov
inc
fld
int
mov
dec
cmps
gs
pop
xor
jl
das
xor
fist
mov
xlat
or
mov
sbb
sub
add
mov
mov
popa
xchg
adc
and
ds
and
sti
imul
in
in
mov
lahf
ret
push
test
aad
xor
repnz
xlat
daa
out
push
push
popf
xor
fnstcw
mov
dec
hlt
push
xchg
or
ror
imul
adc
inc
sbb
sub
mov
push
xchg
mov
adc
or
or
add
push
xlat
fiadd
dec
mov
aas
test
mov
scas
xor
ds
dec
retf
pushf
sbb
jg
inc
mov
xchg
push
scas
scas
icebp
cs
xchg
call
out
sbb
push
ficomp
push
dec
sbb
retf
js
pusha
fnstcw
add
into
lea
jg
cmp
dec
ins
pusha
bswap
inc
in
jbe
shl
inc
jl
sbb
sbb
add
adc
push
xor
mov
sbb
pop
enter
dec
add
clc
and
rcl
dec
sahf
cmps
pop
sub
aam
mov
pusha
enter
push
in
pop
jb
adc
jnp
loope
jp
mov
lds
and
sbb
jge
add
push
or
mov
xor
adc
rcr
xchg
(bad)
mov
mov
inc
mov
jne
loop
mov
adc
pop
mov
dec
enter
repnz
push
xchg
fmul
xchg
mov
movs
xchg
dec
and
fcmovnu
xor
ins
mov
cmps
jg
mov
js
div
mov
icebp
imul
and
inc
cmp
or
(bad)
shl
cmp
adc
jne
add
inc
dec
pop
clc
sub
adc
loop
ror
push
and
fcomi
(bad)
jb
cmc
or
cli
fxch
bt
into
push
jl
mov
int
pop
adc
sbb
movs
mov
add
mov
addr16
pop
inc
loopne
ficom
xor
sahf
fnstenv
pop
cmp
shr
imul
fucom
xor
sti
dec
pop
xor
adc
rol
movs
cmc
jno
in
xor
xchg
jmp
push
xor
mov
inc
pop
cmp
cmp
or
lods
cmp
inc
sbb
jae
cmc
je
or
xchg
fldcw
daa
pop
rol
xor
ret
add
bound
fsub
lahf
(bad)
cwde
popa
movs
iret
rol
dec
add
mov
pop
jae
mov
retf
mov
cmp
fbld
inc
mov
cmps
xchg
retf
and
mov
(bad)
sahf
pusha
(bad)
jnp
push
rol
sahf
mov
cmp
scas
sub
mov
test
mov
outs
cmp
cdq
cmps
je
movs
call
mov
push
sub
cmp
xchg
clc
pushf
push
cwde
add
add
adc
outs
sub
pop
dec
and
cmp
xchg
dec
push
adc
mov
das
icebp
add
jmp
sbb
xor
adc
cld
push
pusha
fdiv
push
idiv
pop
sahf
xchg
call
fucomp
jl
jne
xchg
sub
cmps
jnp
add
dec
cmps
and
scas
jp
mov
mov
outs
shl
xor
mov
iret
or
xor
jo
mov
mov
call
mov
fst
call
xor
xchg
shl
jmp
sbb
mov
push
outs
imul
cmp
or
xchg
mov
mov
out
mov
ret
add
adc
sub
pop
adc
leave
push
mov
dec
in
pop
sub
in
push
pop
push
push
mov
mov
push
hlt
or
daa
adc
jno
leave
(bad)
or
sbb
stos
shr
sbb
and
pop
pop
fistp
imul
or
out
sti
ds
daa
clc
dec
mov
cmp
loope
sub
or
cmp
iret
mov
inc
ds
mov
mov
in
mov
sbb
add
into
daa
inc
mov
jp
and
ins
sbb
xchg
jmp
pushf
xchg
fwait
adc
fsub
xchg
pushf
pop
sbb
sbb
sub
mov
pop
pop
push
inc
and
mov
xor
cmp
addr16
add
iret
push
loop
dec
push
inc
add
sub
pshufw
sbb
scas
cmp
push
ds
sahf
cmp
sub
and
mov
aaa
cmps
add
inc
mov
add
outs
test
iret
xchg
pop
push
in
gs
(bad)
mov
pop
cmp
lahf
stos
push
fwait
sub
out
cmp
mov
xchg
fwait
pop
lods
shl
jns
jmp
sbb
popa
add
mov
xor
in
(bad)
pop
out
dec
mov
xchg
int3
jge
daa
adc
sar
and
mov
cmp
sub
sub
cmp
add
movs
ret
in
in
jbe
jae
sub
popf
outs
test
cmp
mov
inc
jp
jno
fwait
cdq
sub
ret
dec
mov
dec
mov
js
mov
sbb
lock
cs
popf
out
out
rcl
(bad)
in
outs
push
xor
test
adc
inc
inc
xchg
inc
adc
cld
push
pushf
ficom
and
lea
jnp
mov
dec
rcl
mov
fld
bound
dec
mov
jb
dec
and
adc
mov
mov
(bad)
push
dec
(bad)
push
fisttp
or
pop
xor
xor
retf
repz
or
das
push
inc
add
cdq
ja
jb
nop
mov
out
cmp
fstp
sub
stos
ins
xchg
jge
addr16
stos
mov
call
out
cmp
xor
inc
pop
push
loope
test
sub
push
inc
xchg
adc
fcmovbe
xchg
test
cmps
pop
push
jl
sbb
repnz
jl
mov
stc
pop
jp
stos
cmc
sbb
add
xchg
data16
push
and
std
jge
cli
push
jbe
shl
mov
imul
push
mov
mov
repnz
pusha
(bad)
adc
push
mov
pop
cdq
push
add
adc
push
imul
sub
jb
(bad)
movs
xchg
aam
stos
push
popf
mul
jmp
(bad)
sbb
out
fild
rcr
popa
pushf
mov
sub
push
jb
add
out
movs
pop
xchg
mov
inc
push
clc
iret
add
push
pop
mov
cmp
loope
push
ds
jl
aas
mov
add
mov
or
popa
mov
cmp
lock
add
dec
ins
mov
ror
jl
imul
xchg
leave
sbb
fdiv
shr
inc
sahf
clc
out
imul
sbb
mov
jmp
or
(bad)
xchg
or
or
ins
pop
movs
js
push
fs
out
or
add
enter
bound
into
aad
pop
xchg
mov
out
ror
xor
xor
lods
push
pop
loopne
js
mov
cdq
outs
jbe
pop
push
sahf
sub
(bad)
out
mov
cmp
ins
or
pop
add
mov
jecxz
jge
pop
mov
stos
xchg
aas
addr16
mov
sbb
frstor
push
sub
add
inc
pop
(bad)
test
or
lahf
mov
sbb
inc
inc
sub
fiadd
inc
mov
xchg
sub
retf
mov
hlt
or
aam
adc
pop
inc
pushf
(bad)
jge
pop
mov
enter
aad
xor
stos
fsubr
sub
mov
mov
jno
mov
adc
sub
les
pop
es
mov
xchg
jbe
mov
rol
jle
sbb
or
repz
cmps
stos
retf
or
fstp
sub
shr
call
clc
cmp
out
xor
or
dec
xor
sbb
pop
and
shr
out
sbb
(bad)
fidiv
xchg
cmps
or
or
xor
and
es
clc
repnz
aad
in
cmps
repnz
clc
cmp
mov
xor
pop
rcr
jno
mov
scas
enter
or
int3
lea
lock
rcl
pushf
in
add
mov
hlt
mov
mov
or
popa
mov
sbb
loop
mov
cli
mov
add
xchg
stos
mov
push
cmp
retf
push
lds
mov
movs
pop
push
xor
je
xchg
repz
cmp
clc
adc
cmc
sub
movs
cld
mov
push
pushf
shr
loop
xchg
push
push
cmp
push
clc
fisub
push
ins
ja
mov
test
dec
and
loopne
fistp
inc
sub
mov
cli
mov
cdq
lea
std
cs
int
jge
jmp
or
test
out
push
dec
or
pusha
xor
push
sbb
push
mov
xlat
or
push
(bad)
mov
(bad)
or
mov
or
add
loop
inc
jg
js
in
test
mov
(bad)
mov
hlt
push
repnz
pop
out
mov
jle
or
jecxz
lock
cmp
add
(bad)
xor
adc
xor
int
mov
imul
out
lock
iret
outs
lds
cmp
cwde
inc
scas
in
icebp
cwde
mov
sub
mov
in
fwait
cwde
sti
add
inc
std
mov
mov
ins
loop
push
xor
iret
lahf
and
fwait
inc
jmp
lds
adc
ret
pop
mov
cmp
inc
jmp
jbe
cli
mov
inc
mov
jo
sbb
fsubr
dec
sbb
xchg
sub
imul
adc
pop
(bad)
jl
pusha
pop
xor
pop
fs
cs
jns
mov
bnd
dec
mov
cmp
iret
ins
nop
xlat
pop
test
pusha
mov
test
xchg
add
sbb
pop
movs
fdivr
mov
fwait
loopne
add
retf
(bad)
sub
sbb
js
jge
loopne
(bad)
lds
mov
pop
std
xor
out
fisub
xchg
mov
js
into
jle
arpl
or
in
dec
js
sahf
ins
lahf
mov
ret
jno
ficom
sub
jae
neg
adc
dec
loop
pop
mov
shr
les
and
mov
pop
mov
pop
fild
mov
test
fnstenv
inc
pop
lahf
retf
sbb
dec
jmp
popf
adc
sbb
mov
or
jae
push
sub
xor
push
clc
outs
retf
arpl
icebp
cmp
mov
addr16
xchg
ret
fs
outs
aam
int
fdiv
push
(bad)
pop
mov
mov
movs
sbb
adc
data16
aad
jmp
das
fcom
fs
push
push
mov
sar
sbb
sub
xchg
dec
mov
retf
mov
inc
scas
pop
sub
jo
cmp
push
aaa
imul
add
and
or
xor
inc
dec
add
into
sub
jno
dec
pop
cld
cmps
jne
mov
das
cli
jae
sbb
sub
add
sar
push
ds
sbb
cwde
inc
and
mov
push
addr16
mov
adc
movs
loop
imul
xchg
aaa
pop
dec
shr
adc
fbstp
cmp
cdq
and
test
hlt
jmp
pushf
mov
mov
cmp
sbb
xlat
stos
mov
das
cmp
hlt
adc
js
leave
fsub
fs
addr16
in
pusha
inc
mov
gs
cmp
and
pushf
xlat
rcr
lock
test
xlat
and
and
pop
add
fnstsw
pop
pop
inc
add
adc
cmps
xlat
add
xchg
xchg
test
outs
mov
adc
add
stc
push
xsaveopt
aad
sti
push
stos
test
inc
das
adc
mov
mov
jecxz
jns
xchg
sbb
mov
movs
dec
hlt
rcr
cmps
adc
loope
jg
and
xchg
jmp
sti
ror
jb
adc
xchg
mul
dec
ja
xchg
fadd
push
mov
cmp
call
jae
inc
push
xchg
cmps
(bad)
imul
adc
icebp
pusha
sti
popf
fnstcw
inc
(bad)
cmc
cmps
xor
inc
xlat
aaa
div
mov
les
add
popa
fwait
mov
aad
sub
ret
sahf
sti
repz
hlt
jne
jb
in
in
scas
cmp
and
test
test
cmp
cmc
jge
jbe
cmp
aas
rcl
xchg
cmps
popa
sbb
push
xlat
sar
jge
call
jg
sar
stos
test
dec
or
mov
scas
mov
pop
cs
scas
mov
call
xor
pop
and
std
jge
out
dec
std
cmps
mov
jmp
gs
mov
mov
or
sbb
xchg
gs
pushf
inc
mov
push
lods
mov
mov
mov
out
fld
jl
test
pop
mov
xlat
dec
or
cmp
shl
and
pop
js
and
mov
adc
mov
fbld
inc
imul
xchg
(bad)
out
or
xchg
cmp
xchg
je
xchg
aam
iret
and
dec
fild
dec
aas
pop
sub
inc
out
hlt
(bad)
pop
movs
fisttp
div
fwait
inc
sub
dec
push
pop
loop
add
mov
adc
pop
jecxz
fs
shr
stos
xchg
(bad)
outs
mov
push
(bad)
or
sub
xchg
mov
js
sub
mov
dec
std
cmps
fucomp
xchg
cmc
adc
fldcw
cmc
mov
jnp
adc
cmp
cdq
xchg
add
and
mov
fst
hlt
pop
cmc
sub
stc
and
mov
int3
mov
and
test
std
imul
add
add
pop
ins
cdq
jl
scas
jmp
inc
push
add
int
cwde
mov
fidivr
addr16
sub
stos
outs
mov
loope
shl
inc
push
sub
jb
retf
idiv
std
xchg
fs
lods
xchg
mov
xchg
stc
in
add
mov
pushf
push
push
adc
retf
bound
push
dec
mov
dec
call
mov
mov
mov
mov
adc
and
stos
out
jecxz
adc
pushf
int
fs
cmps
lods
sub
cwde
xchg
sbb
js
cmc
mov
in
test
jp
int3
jl
daa
loope
dec
je
push
jmp
jns
xchg
mov
imul
xchg
mov
mov
sub
call
neg
xchg
xchg
ins
dec
arpl
fdivr
arpl
aaa
cmovp
jmp
in
retf
int
sub
push
xlat
push
sub
inc
sti
shr
lods
or
scas
retf
add
mov
and
mov
sub
push
cmps
dec
(bad)
cs
or
mov
xchg
iret
aad
push
(bad)
stos
jle
xchg
dec
mov
push
mov
int3
xchg
adc
(bad)
xor
stc
ins
imul
fwait
jg
in
dec
not
mov
popf
mov
(bad)
jbe
xchg
sbb
loope
adc
dec
and
pop
cdq
push
mov
movs
pop
imul
adc
mul
pop
(bad)
mov
ficomp
sub
sub
ret
das
gs
scas
xlat
push
pop
jno
or
sbb
xor
mov
sbb
pop
fistp
mov
(bad)
or
adc
cwde
cwde
mov
jle
icebp
mov
pop
dec
mov
(bad)
mov
pop
mov
pop
fwait
int
adc
lea
nop
jae
scas
pop
(bad)
fidiv
jl
jo
mov
adc
cmps
ss
dec
and
push
call
(bad)
aam
mov
sbb
xor
jge
loope
fsub
and
cmp
fstp
aaa
adc
mov
push
repz
je
dec
lea
cmps
cmp
les
sbb
add
mov
iret
sub
push
inc
leave
icebp
jg
sar
in
aad
outs
jmp
shl
aad
ds
sbb
sar
movs
mov
add
fistp
pop
lock
and
xchg
aas
aaa
adc
sub
sbb
pop
aaa
mov
push
addr16
xchg
es
push
sti
sti
adc
sahf
cmp
movs
pop
loope
mov
sbb
jo
cld
jne
rcl
cmp
(bad)
jle
rcr
jg
dec
(bad)
loop
mov
(bad)
mul
mov
jl
inc
das
jl
sbb
adc
cmc
sbb
jbe
pop
pop
iret
cmp
sti
out
fdivr
xchg
jno
pop
xor
out
ror
sub
sub
sub
lods
mov
hlt
sub
(bad)
xchg
dec
or
push
adc
addr16
mov
adc
xlat
mov
retf
cmps
shl
fimul
aas
stos
jmp
scas
out
xchg
test
mov
xor
in
fcom
sub
or
outs
lods
out
xchg
ret
fidivr
(bad)
xchg
mov
pushf
(bad)
jo
mov
push
jmp
outs
lods
dec
inc
aaa
jmp
(bad)
xlat
mov
adc
lahf
fistp
scas
loope
test
xor
xchg
fucomip
ror
jge
sub
xor
jle
lods
in
out
adc
outs
je
pop
mov
dec
jnp
pop
pop
outs
push
out
inc
or
out
push
out
mov
dec
cmp
push
mov
jg
jnp
xchg
es
lods
das
call
stos
push
(bad)
sub
xchg
cli
adc
add
sbb
data16
and
push
inc
retf
mov
pop
push
nop
cmp
imul
loope
pop
outs
sub
cwde
lods
mov
inc
ja
retf
or
sbb
mov
cmp
sub
add
dec
shl
scas
mov
aaa
frstor
out
leave
lahf
iret
xor
adc
inc
jbe
inc
hlt
pop
in
pop
jno
jl
arpl
mov
iret
lock
push
pop
push
push
fucom
xor
xor
mov
mov
(bad)
aam
xlat
loop
call
rol
inc
xor
mov
push
adc
sub
pushf
mov
cwde
adc
jb
and
and
(bad)
stos
lahf
mov
shl
fldenv
ret
mov
(bad)
jno
nop
cmps
loopne
jae
js
fimul
popf
lods
dec
mov
icebp
lds
lahf
pop
lock
mov
sub
(bad)
in
sub
cmps
push
(bad)
test
nop
cmps
jge
and
dec
jae
inc
inc
scas
inc
test
push
mov
mov
add
jae
push
push
scas
jno
sbb
pop
sub
add
lea
ins
xchg
pminub
fcomi
add
std
add
pop
dec
imul
jae
clc
sahf
mov
std
sub
out
pop
add
push
cs
nop
fmul
sub
data16
dec
bound
cmp
lock
xor
sbb
xchg
add
rcl
push
dec
push
sbb
leave
adc
fcmovb
enter
popf
stos
loop
(bad)
mov
jae
ss
and
mov
mov
aaa
(bad)
sbb
or
mov
test
pop
in
jl
lods
icebp
arpl
sub
das
push
je
jo
mov
mov
fmul
pop
mov
fnstsw
cmp
jbe
adc
test
shl
and
xchg
in
pop
adc
leave
xor
cmp
dec
sub
xlat
mov
sub
jno
sbb
scas
pop
pop
in
(bad)
aaa
je
add
retf
ja
mov
mov
xchg
sub
xlat
lods
int3
mov
cmp
imul
pop
push
rol
push
cmps
sub
loop
cdq
push
cdq
clc
out
cmp
dec
inc
and
xchg
cmp
mov
adc
cmp
cdq
pop
xor
xchg
pop
(bad)
dec
or
sbb
imul
jmp
out
dec
mov
sar
xor
mov
add
mul
mov
xor
les
push
out
fidivr
ret
je
mov
push
mov
les
int3
cmp
cdq
sub
scas
imul
out
je
pop
retf
(bad)
xor
nop
in
sub
jo
in
in
cmp
popf
sbb
and
xor
cmp
mov
stc
dec
push
mov
push
fnstcw
aad
test
(bad)
jp
(bad)
clc
and
and
pop
fadd
ds
add
(bad)
jb
and
xchg
jb
les
sub
mov
pop
push
sti
push
repz
lods
mov
pop
jno
rol
mov
addr16
jmp
xchg
lahf
add
stc
mov
out
jle
adc
mov
xchg
pop
mov
inc
push
push
xchg
mov
and
loope
xlat
sbb
movs
add
and
sbb
mov
outs
push
test
das
call
cmp
test
xchg
jns
out
frstor
and
sbb
cmp
retf
adc
mov
outs
mov
pop
mov
inc
fidivr
xor
push
add
jmp
cmp
adc
lahf
xor
les
cmp
icebp
sar
loopne
(bad)
or
adc
ror
jp
lds
loop
cs
dec
int
mov
sti
mov
mov
aaa
xchg
fld
out
jae
rcr
or
pop
(bad)
inc
clc
xchg
mov
js
or
ret
add
jmp
stos
mov
lods
jp
pop
out
retf
sbb
sti
std
xchg
lods
repnz
or
neg
scas
cli
mov
or
mov
inc
push
fmul
lods
shl
dec
push
mov
pop
mov
add
mov
in
adc
ret
(bad)
clc
sub
sbb
mov
push
or
mov
lods
jl
ds
int3
adc
add
mov
xor
jae
(bad)
stos
lds
(bad)
int3
outs
test
mov
mov
pop
(bad)
div
jp
mov
dec
jecxz
xor
arpl
jae
into
sub
add
xchg
ins
ds
sbb
sahf
mov
jnp
scas
loope
adc
fnstenv
and
cs
pop
jae
xchg
inc
jno
jbe
xchg
mov
mov
pop
aam
das
popa
or
bound
call
jno
xlat
lods
cmp
fsub
out
out
call
pop
sbb
lahf
js
cmp
sub
daa
(bad)
inc
sti
shr
push
mov
and
inc
and
xchg
cmps
out
fst
and
or
mov
dec
inc
mov
push
in
or
call
xchg
sub
(bad)
imul
mov
cmp
jle
repnz
loop
adc
ss
repnz
xchg
mov
jo
test
and
xor
out
(bad)
in
es
rcr
pop
pop
jb
add
mov
add
(bad)
mov
jge
aad
scas
mov
cmp
std
ds
push
pushf
pop
(bad)
aas
fs
sub
and
and
les
in
push
nop
dec
adc
arpl
jns
imul
fnstsw
popa
mov
mov
xor
wrmsr
lds
xlat
inc
mov
or
mov
or
mov
mov
into
ficomp
jbe
jo
inc
inc
fimul
sub
rcl
adc
or
outs
inc
mov
and
sbb
(bad)
retf
pop
jne
(bad)
xor
adc
jnp
cmp
sub
(bad)
(bad)
jmp
cli
pusha
mov
sbb
je
(bad)
sub
mov
sub
mov
inc
sub
sti
dec
pop
push
pop
mov
add
jecxz
retf
pop
test
das
pop
push
dec
xor
jne
ret
lods
outs
shr
not
push
lods
sbb
dec
add
or
je
xchg
stos
inc
adc
xchg
sbb
mov
mov
mov
inc
mov
push
jle
cmc
dec
(bad)
sbb
dec
push
push
sub
xor
int3
aam
mov
jg
add
sbb
rol
xlat
add
mov
or
mov
rcr
or
add
inc
xor
ficom
push
test
out
add
sbb
push
mov
mov
ss
imul
dec
mov
dec
sub
setge
push
ret
out
adc
dec
test
dec
in
aad
mov
cmps
dec
push
fs
mov
ds
cmp
pop
fwait
jl
pop
cli
test
push
sub
add
mov
sbb
mov
jecxz
faddp
jbe
repnz
retf
int3
cmp
mul
xchg
push
pop
repz
aaa
and
and
cmps
sbb
repz
fdivr
xchg
sahf
test
ins
mov
int
mov
lock
adc
inc
add
push
test
or
mov
mov
xlat
ins
mov
ins
inc
mov
ds
sub
sub
fs
outs
xor
aam
adc
mov
scas
rcr
jmp
cmp
mov
adc
cmp
out
mov
push
inc
call
stc
pop
push
(bad)
shr
gs
addr16
pop
aas
sbb
test
fisub
xor
add
and
ins
cmp
dec
out
pop
mov
jnp
test
sbb
push
mov
int3
cmp
repnz
sahf
rol
in
retf
cmp
pop
push
aas
jo
or
cli
adc
dec
js
cmp
(bad)
jmp
pop
ret
xchg
ins
popa
aam
jno
cmp
adc
cmp
and
(bad)
in
inc
(bad)
enter
arpl
inc
fwait
gs
jb
inc
jl
rol
xchg
jnp
mov
dec
add
cmc
xor
aad
mov
sub
push
cli
hlt
dec
daa
push
pushw
jnp
loop
inc
ret
out
xor
das
stos
xchg
cwde
inc
jp
ds
adc
jnp
xchg
mov
mov
fcomp
scas
sub
in
fs
adc
add
es
ins
adc
mov
mov
lds
nop
cmps
jo
jge
int
scas
jmp
out
call
xor
(bad)
das
jl
popa
jnp
sahf
imul
dec
movntq
in
sahf
add
addr16
mov
out
adc
cmp
rcr
pop
sbb
fnsave
mov
xchg
stos
mov
in
call
cmp
xchg
xchg
jecxz
int
sbb
cmps
repnz
rol
adc
mov
aas
dec
inc
jae
imul
shl
retf
out
or
in
cmp
mov
loopne
jae
fst
mov
dec
push
dec
lock
cli
sbb
fadd
mov
lods
mov
add
cmp
pushf
push
add
retf
stos
or
ds
xlat
push
jae
(bad)
out
cmc
fist
bound
mov
pop
push
stos
mov
xor
mov
lds
mov
call
ins
sub
mov
std
jl
ins
pmulhw
mov
and
rol
fidivr
sub
mov
and
sub
mov
icebp
mov
add
push
adc
sub
out
fcomp
std
add
pop
or
jmp
out
mov
rcl
fldenv
push
ret
sbb
ss
pop
pop
fimul
outs
and
dec
xchg
cmp
ja
add
adc
and
dec
out
sbb
add
mov
aaa
jnp
movs
mov
enter
daa
outs
popa
dec
sbb
inc
stos
loop
push
hlt
jp
fwait
push
idiv
cmp
mov
sbb
outs
fld
xchg
push
mov
int3
or
mov
sbb
es
xchg
fmul
in
in
(bad)
push
pop
adc
xchg
ins
push
jno
in
xchg
mov
test
push
and
sub
sbb
fdivr
pop
xchg
push
arpl
pop
ins
popf
repnz
or
pop
lods
xchg
(bad)
mov
jae
pushf
retf
cli
mov
mov
jmp
pop
and
in
test
push
(bad)
es
fild
ss
mov
jp
xchg
ror
jmp
or
stos
pop
jo
inc
mov
push
(bad)
fadd
clc
cmc
out
mov
ficomp
stos
push
gs
sub
stc
sub
stos
mov
and
sbb
xor
sub
mov
jmp
(bad)
or
mov
adc
xchg
mov
mov
push
ins
fisubr
loope
jne
jp
fwait
rcl
pusha
mov
addr16
into
rol
test
pop
imul
imul
dec
ret
(bad)
and
xor
adc
adc
mov
push
pop
mov
nop
push
mov
jg
xchg
jle
xchg
or
dec
jbe
in
sti
inc
(bad)
fistp
fdivr
and
imul
repz
int
div
cwde
dec
enter
leave
mov
xor
mov
inc
adc
jecxz
fstp
jne
cmp
gs
lods
and
pop
mov
nop
mov
and
into
inc
or
pop
cpuid
daa
jnp
push
mov
fild
(bad)
pop
dec
sbb
lds
push
aad
xchg
shr
and
jnp
jmp
lock
aam
into
mov
and
pusha
sub
mov
inc
add
mov
mov
out
ins
push
adc
pop
hlt
stos
mov
fidivr
sub
push
adc
push
sbb
cli
or
pop
or
xor
xor
xchg
adc
sub
dec
push
leave
pop
loopne
imul
sbb
loopne
dec
into
jae
je
jns
sub
adc
dec
stc
fidivr
aas
retf
cwde
add
(bad)
and
aam
xchg
xchg
pop
into
xchg
repnz
adc
mov
mov
mov
sub
xchg
rol
push
xlat
dec
push
jne
fsub
jne
xor
dec
pop
sbb
push
inc
nop
xor
ret
xchg
out
enter
xor
fidivr
popa
dec
mov
push
push
sub
bound
dec
in
jp
dec
push
push
fmulp
xor
shr
pop
add
mov
inc
mov
call
mov
sub
dec
loope
or
loope
or
sub
stos
imul
imul
call
cmps
sahf
into
mov
retf
dec
dec
push
jb
xor
mov
inc
rcr
fsubp
jge
fcomp
sbb
sahf
push
xchg
outs
int3
push
in
or
mov
unpckhps
int3
js
add
call
fdiv
punpckhdq
retf
ret
mov
ins
sbb
xchg
retf
fcom
shl
(bad)
mov
inc
or
leave
push
xchg
or
out
movs
inc
jbe
movs
(bad)
outs
int
xchg
je
cmp
shl
shr
rol
push
outs
inc
push
ss
jmp
mov
into
arpl
bound
xor
sbb
bound
xlat
mov
mov
fwait
iret
and
test
fimul
inc
dec
stos
push
dec
nop
dec
mov
in
cld
or
mov
or
inc
aaa
add
repz
movs
push
mov
movs
repz
mov
repnz
xchg
imul
push
js
aas
test
ja
and
ja
das
cmp
(bad)
xchg
movs
jmp
xor
sub
and
out
fsubr
scas
dec
repz
data16
aas
popa
pop
es
clc
push
dec
push
loopne
adc
inc
dec
outs
jl
mov
not
or
les
pop
pusha
mov
pop
push
mov
push
inc
in
xor
and
cli
test
xor
push
push
mov
outs
add
mov
fsubr
cmp
shl
lea
push
mov
pop
sahf
mov
push
loopne
xchg
clc
cwde
call
xchg
and
dec
cwde
adc
mov
jb
inc
xchg
je
jmp
add
inc
neg
xor
call
(bad)
mov
add
mov
jnp
lea
or
pop
push
call
and
imul
lea
or
in
cli
inc
sbb
pop
xchg
mov
nop
sub
jmp
shl
call
mov
sub
cli
sbb
aaa
push
mul
int3
das
pop
scas
les
imul
xchg
push
daa
dec
sbb
push
(bad)
push
and
aaa
aaa
popa
sub
pop
call
stc
je
pop
loop
je
or
test
lock
inc
retf
movs
push
jb
push
cld
pop
mov
mov
xchg
dec
call
in
and
cmp
xor
mov
movs
push
sbb
cli
jo
mov
sbb
sbb
mov
sbb
ins
inc
dec
sbb
(bad)
push
push
dec
or
sahf
aad
adc
or
pop
inc
or
mov
inc
add
nop
rol
xor
call
outs
mov
mov
and
jb
fdivr
sbb
pop
adc
xchg
xor
fmul
push
jp
test
pop
mov
push
retf
push
pop
adc
and
or
nop
xor
xchg
shr
out
or
xchg
mov
and
paddb
shl
rcl
ins
pop
jle
into
(bad)
jmp
outs
cmps
daa
(bad)
mov
aad
mov
rcl
in
mov
dec
outs
adc
pop
movs
jno
jb
xchg
xor
mov
stos
daa
jle
loop
pop
aaa
dec
xor
jno
(bad)
jmp
shl
int3
sub
jle
pop
or
gs
pop
repnz
or
dec
push
test
rcr
rol
mov
cmp
mov
ins
lds
bnd
ret
outs
in
sub
gs
adc
les
jb
mov
mov
inc
call
mov
jne
inc
(bad)
scas
in
inc
daa
mov
mov
loope
ds
cmp
clc
fistp
pop
scas
xchg
aas
scas
js
xchg
xchg
cdq
inc
sbb
jb
pop
loopne
sub
js
sub
test
mov
int3
test
jmp
aas
sbb
mov
test
cmp
cdq
std
adc
dec
mov
cmp
inc
mov
jmp
(bad)
xor
lds
movsx
lds
mov
inc
ret
out
retf
add
aam
xor
sub
(bad)
pusha
sub
mov
clc
jmp
outs
xor
mov
sub
adc
xchg
push
xchg
fisttp
push
daa
push
sub
add
jbe
stc
dec
jo
out
fcom
and
(bad)
ins
out
push
js
inc
lods
cwde
popf
jecxz
or
retf
add
xchg
out
mov
jmp
mov
sub
mov
ins
sbb
loop
jbe
add
mov
sub
mov
sub
test
(bad)
adc
push
pop
cmp
xor
sbb
pop
aaa
jo
retf
cld
sbb
pop
mov
xor
xor
inc
cdq
clc
dec
dec
sub
icebp
add
xor
add
fadd
and
push
mov
push
rcr
cmp
icebp
lock
fs
push
test
repz
(bad)
jmp
retf
gs
cmp
jmp
aas
sub
xor
retf
das
(bad)
stc
fs
xor
cmp
shl
xor
mov
jecxz
repnz
js
inc
in
xchg
fs
mov
xchg
nop
inc
jb
sbb
clc
cmp
movs
jl
sahf
pushf
xor
mov
push
test
mov
jo
movs
movnti
inc
lahf
xor
(bad)
sbb
aaa
fs
xor
scas
mov
push
jg
jmp
and
push
or
sbb
xor
dec
cmp
jp
inc
inc
mov
ret
mov
add
jb
dec
push
cmp
xor
add
shr
mov
test
ret
leave
mov
add
add
xor
adc
dec
or
and
xor
sub
sbb
push
sti
or
lea
jae
jo
mov
dec
cli
push
and
push
inc
ja
push
or
dec
and
dec
or
mov
fmul
dec
or
bound
dec
sbb
push
and
leave
cmps
inc
pop
test
in
xor
scas
jge
movs
call
mov
jnp
mov
sub
fnstcw
fbstp
das
jmp
mov
pop
das
sub
pop
nop
and
test
inc
jbe
dec
xor
lea
fcmovb
aas
jae
dec
mov
xchg
inc
daa
pop
out
mov
mov
ss
add
mov
pop
jg
nop
outs
ficomp
test
xor
fstp
dec
add
fadd
aas
or
setnp
fst
jbe
jl
or
retf
jmp
shl
aad
aas
jmp
imul
fsubr
and
push
mov
sti
fmul
or
jle
loopne
test
and
sbb
int
push
fs
adc
ret
add
add
int3
shl
and
ins
jae
xchg
mov
lea
es
inc
repnz
jmp
cmps
fadd
mov
dec
stos
std
mov
es
mov
push
cmp
cmp
daa
out
adc
ss
push
movs
test
add
movs
adc
repnz
jb
enter
addr16
lahf
repz
inc
pop
mov
or
add
mov
imul
jmp
mov
aas
xchg
add
dec
call
xchg
bound
dec
add
add
sbb
cmp
jb
cmp
or
fldenv
in
dec
mov
movs
ins
add
cwde
ds
call
xchg
les
or
movs
dec
mov
inc
add
jl
stos
or
inc
int3
dec
ss
rol
dec
mov
or
sbb
jl
lahf
push
xchg
xor
push
jns
ins
mov
daa
mov
push
fadd
jns
nop
jae
pop
inc
lea
in
(bad)
xor
lds
cli
shl
mov
pop
lds
shr
sbb
(bad)
in
dec
inc
repz
or
scas
cmps
imul
not
fdiv
test
xchg
rol
cmp
ret
ss
or
arpl
cmp
pop
mov
sub
inc
(bad)
fnstsw
test
dec
in
sub
gs
xchg
adc
not
push
mov
mov
inc
jb
xor
xor
lahf
ret
jle
inc
fisubr
out
imul
popa
and
nop
mov
scas
sub
loop
mov
stos
(bad)
adc
sub
rol
js
in
xchg
stc
les
fistp
dec
mov
mov
xor
inc
cmp
retf
jae
aas
push
loop
pop
adc
sub
fld
lock
in
push
add
sub
push
pop
test
cmp
std
mov
cmps
sub
dec
jl
iret
cmp
scas
push
out
xor
add
in
push
mov
add
imul
mov
adc
sbb
call
mov
dec
aaa
fs
cmp
jp
test
adc
push
push
jmp
repnz
xchg
jecxz
cmp
jno
arpl
add
scas
sub
js
mov
and
push
jge
fs
cdq
jmp
cvtps2pi
add
loopne
lea
cmps
or
loopne
sahf
ret
xchg
lods
sub
ins
or
mov
push
cmp
mov
frstor
fwait
(bad)
push
imul
repz
and
push
xor
into
pop
lds
xchg
lea
(bad)
ficom
jmp
mov
jno
outs
cmc
ins
fisttp
and
out
and
sbb
xchg
xchg
pushf
aaa
mov
sahf
das
movs
addr16
dec
and
ret
in
add
mov
and
loop
xor
mov
push
nop
mov
xor
push
pop
lods
sbb
retf
cwde
stos
fstp
loope
cmp
add
jns
xlat
(bad)
fdivr
cmp
pop
int
jmp
out
xchg
pop
dec
adc
cmps
fucomip
xor
pop
outs
xchg
retf
call
cwde
imul
adc
add
xlat
push
mov
xchg
sbb
cmc
cmps
or
(bad)
je
pushf
cld
iret
jecxz
pop
adc
(bad)
cmc
sub
aaa
call
push
dec
int
shr
adc
mov
adc
outs
add
add
(bad)
setg
add
push
nop
adc
jl
pop
out
lods
mov
lock
inc
jnp
loope
das
sbb
push
(bad)
shr
sbb
sub
clc
and
data16
stos
mov
icebp
sti
jmp
add
xchg
arpl
js
data16
fs
test
and
jne
outs
fistp
or
mov
mov
aas
(bad)
je
sub
mov
sub
mov
and
shl
cmp
pop
mov
or
push
pop
stc
ins
jns
sbb
les
inc
ret
sbb
iret
mov
mov
das
lahf
sti
inc
push
bound
sbb
cmp
loopne
add
arpl
(bad)
pop
ret
cmps
pop
xchg
mov
test
cmc
sub
pusha
into
mov
cmp
cwde
xchg
dec
ins
xchg
popa
pop
test
and
int
test
int
mov
and
mov
mov
mov
dec
add
pop
je
mov
or
xchg
mov
xchg
je
xor
inc
shl
cld
int3
leave
fadd
scas
dec
ds
std
mov
icebp
push
push
jl
mov
push
mov
push
jl
scas
mov
cmp
and
aam
adc
mov
mov
push
or
aad
stc
or
(bad)
adc
jecxz
pop
adc
ret
std
push
aaa
fidiv
and
loopne
je
xchg
fst
add
add
lds
fldenv
std
jmp
push
ins
inc
ins
test
jmp
inc
sbb
ror
sbb
xor
add
dec
pop
imul
stos
mov
jnp
cmp
retf
aaa
add
push
stos
call
or
pop
fistp
mov
popf
jp
ror
leave
add
pop
jmp
retf
dec
jbe
sbb
(bad)
into
xchg
inc
cmp
lods
mov
pop
jl
shl
stc
shl
and
sbb
ins
mov
jnp
add
and
xchg
inc
addr16
out
ret
adc
pop
lds
dec
(bad)
(bad)
push
xor
fst
xchg
lea
mov
jle
lods
das
aam
cmps
(bad)
dec
jne
sbb
pop
jmp
in
mov
idiv
cmc
test
sti
ja
nop
dec
inc
or
ja
cmps
icebp
aam
test
aaa
jne
fdiv
or
cmp
movs
add
and
daa
or
jno
mov
pop
jmp
outs
and
sbb
das
ror
add
inc
arpl
cli
push
mov
cmp
ins
pop
icebp
nop
shr
xchg
add
dec
fisub
push
mov
mov
add
push
rol
add
pop
add
(bad)
mov
lahf
jle
xor
pop
mov
popa
out
inc
mov
dec
out
mov
sbb
hlt
xchg
hlt
ror
xor
xlat
lds
inc
movs
sub
(bad)
retf
inc
jnp
addr16
cli
xor
and
push
sbb
and
add
mov
cmps
xor
xor
retf
aas
(bad)
sbb
aad
or
push
out
jne
out
mov
loope
scas
pop
add
leave
in
fisub
xchg
push
or
inc
jbe
ins
lds
add
repnz
pusha
ins
xchg
sub
outs
fisubr
xlat
leavew
shl
pop
add
adc
shl
or
jnp
rcr
dec
push
sub
cdq
xor
jns
mov
scas
nop
fidiv
(bad)
cmps
stos
pop
jns
inc
xchg
xlat
das
(bad)
mov
xor
mov
pop
mov
lds
in
mov
xchg
lahf
and
mov
xor
mov
jmp
mov
arpl
adc
fidiv
xchg
repnz
sub
or
inc
fild
push
gs
out
test
jp
(bad)
lods
xor
mov
fbstp
adc
div
xor
nop
inc
or
adc
iret
push
adc
push
add
shl
sar
jbe
leave
push
cld
xor
into
pop
test
cwde
(bad)
mov
scas
arpl
push
loopne
jecxz
or
or
pop
and
icebp
add
test
mov
jbe
push
sub
fdiv
mov
iret
mov
fisttp
sub
(bad)
pop
sub
xchg
leave
inc
not
fiadd
loop
movs
shr
adc
ffreep
mov
xchg
sbb
pop
or
lock
ficom
cmp
inc
add
add
sbb
xor
pusha
js
pop
sub
icebp
push
mov
add
scas
sbb
jmp
psllw
sbb
add
cmp
loope
cmps
mov
xor
loop
sbb
shr
ss
daa
pop
mov
cmp
jle
pop
iret
adc
int3
mov
jge
xchg
pop
ja
movs
push
ret
sbb
cmp
icebp
adc
dec
mov
pushf
add
movs
mov
enter
jmp
mov
add
ja
pop
mov
fisub
mov
inc
inc
and
jnp
pop
xchg
sub
sbb
stos
sub
std
jmp
cmp
mov
xchg
or
fwait
inc
adc
dec
push
mov
push
int
fs
mov
jecxz
call
dec
push
ins
ss
and
sub
imul
push
int
dec
inc
dec
jno
repnz
repz
pop
fmul
mov
lods
xlat
push
and
push
xchg
cmp
fst
mov
inc
fs
push
mov
movs
or
loopne
xor
hlt
dec
or
loop
adc
aaa
mov
inc
movs
bnd
sub
sub
dec
push
shl
mov
inc
dec
xchg
imul
xlat
cmp
xchg
jmp
mov
mov
ficom
out
push
fst
xor
or
mov
call
movs
out
cmps
int3
cmp
xchg
mov
and
call
stos
(bad)
test
adc
sub
ss
scas
push
fst
(bad)
loopne
or
std
int
adc
fdivr
push
ins
mov
or
lods
xchg
dec
push
call
enter
rcl
inc
repnz
xchg
fistp
jmp
js
xor
data16
mov
lahf
int
jmp
and
push
mov
ss
loop
lea
inc
repnz
inc
bound
mov
aam
lahf
jmp
cmp
mov
fcmovnbe
lods
xor
rol
repnz
push
mov
clc
(bad)
xor
cmps
sbb
xor
jno
cli
aaa
stos
xchg
test
stos
iret
daa
iret
adc
jmp
cli
mov
cmp
(bad)
popa
stc
mov
in
into
jb
mov
sbb
fdivr
mov
xchg
adc
movs
xor
inc
jmp
inc
xor
xor
adc
hlt
xor
xor
daa
xor
arpl
ins
dec
cmp
loop
adc
fmul
mov
ins
out
add
fsub
gs
cli
push
jns
pop
mov
adc
inc
mov
add
adc
test
fsub
jae
repnz
test
in
stc
lock
test
or
loope
cmps
or
mov
xor
jne
pop
outs
fwait
add
enter
or
(bad)
mov
leave
pop
into
fnstsw
leave
jge
push
jmp
pop
inc
daa
sbb
jge
movs
sbb
outs
and
inc
jmp
push
mov
cmp
cmp
push
repz
icebp
jmp
pop
dec
and
and
cmps
push
jo
cmp
push
ret
outs
mov
int3
loope
addr16
std
mov
call
cld
dec
mov
cld
mov
les
loope
adc
popf
mov
mov
(bad)
in
inc
not
fcom
sbb
imul
sub
(bad)
mov
gs
inc
icebp
jne
sub
mov
mov
cmp
out
sub
push
dec
fcmove
cwde
ret
int3
fnstsw
test
retf
push
xor
in
sub
adc
test
rcl
pop
cld
fmul
mov
fs
je
mov
inc
dec
xchg
sbb
bound
es
xchg
push
es
jmp
ds
or
fiadd
cld
aam
adc
dec
outs
pop
add
leave
ds
ins
jmp
mov
adc
imul
(bad)
sbb
and
sub
(bad)
in
mov
shl
stos
mov
mov
xor
sub
scas
not
jl
fcom
dec
push
mov
mov
fistp
xchg
movs
add
call
in
jnp
ins
sub
repnz
mov
cmp
in
ss
cmp
es
out
outs
pop
lods
(bad)
xchg
mov
sbb
lods
xchg
and
sub
out
mov
push
dec
dec
pop
ins
push
xor
xlat
add
nop
scas
push
(bad)
adc
(bad)
cmp
cmp
or
jbe
add
fldcw
retf
rcl
gs
mov
mov
jbe
fdiv
cmp
repz
rol
push
add
jns
int
adc
loope
jne
xlat
xor
push
and
xchg
int
xor
call
lods
xchg
(bad)
cmp
mov
sub
pop
push
outs
push
push
and
mov
mul
lods
lahf
(bad)
xchg
and
mov
xchg
ret
hlt
dec
test
sbb
cwde
addr16
sub
daa
xchg
lahf
aam
fadd
sahf
mov
sub
in
xchg
out
sub
pop
inc
cld
cwde
test
mov
push
aaa
fsub
cmp
xchg
icebp
mov
out
sub
stc
mov
loop
cmp
cmps
pop
jae
sbb
mov
ins
imul
bound
sub
sbb
cmp
cli
add
jp
or
xchg
mov
sub
xlat
pop
push
jmp
ror
dec
mov
xchg
icebp
dec
jbe
mov
cmps
add
sti
mov
xor
dec
call
pop
ins
in
cmc
jp
scas
(bad)
mov
(bad)
jmp
mov
retf
ret
push
fwait
jmp
xchg
add
mov
pop
and
jp
les
xchg
das
mov
jmp
sbb
rcl
jmp
xchg
lods
scas
xchg
mov
sub
shl
cdq
mov
lods
iret
sbb
stos
push
mov
daa
lahf
inc
out
icebp
movlps
push
es
bound
inc
and
test
dec
repnz
mov
lods
xor
fdiv
mov
movs
and
xor
bound
sahf
add
(bad)
push
lahf
mov
xchg
fst
mov
jae
inc
add
push
jb
jp
call
fs
sti
test
and
sysenter
or
sub
adc
aam
shr
rol
mov
pop
idiv
and
adc
stos
aad
fistp
pop
jle
ins
cmp
mov
call
neg
outs
pop
out
sbb
repnz
stos
aas
cdq
mov
mov
popf
cmovl
push
push
fadd
sti
pop
adc
mov
push
xor
sub
stos
popf
push
test
and
mov
xor
or
dec
mov
in
retf
lahf
loop
mul
push
push
sub
add
fadd
or
(bad)
pop
test
ins
mov
mov
into
lock
sbb
and
mov
int3
(bad)
sub
cmp
dec
data16
ins
adc
sub
movs
sub
mov
pop
mov
add
mov
mov
pop
and
jmp
sub
loopne
sbb
loope
sub
cmp
pusha
mov
je
add
adc
cwde
push
xor
inc
inc
xlat
data16
std
retf
js
data16
inc
mov
sbb
push
xor
add
xchg
add
xor
mov
shr
aaa
jb
lods
pushf
scas
daa
movs
lahf
dec
dec
xchg
inc
or
adc
cmp
xchg
pop
inc
mov
xchg
stos
pop
sub
mov
cmc
lahf
xor
jmp
fild
shr
add
test
inc
ret
push
test
add
jne
aam
lods
scas
outs
mov
and
hlt
inc
jnp
or
push
xchg
lods
push
int3
imul
push
push
leave
fisttp
fist
push
ds
jns
adc
(bad)
in
inc
mov
sub
and
mov
mov
mov
push
adc
xor
loope
inc
or
xchg
push
loope
jmp
adc
xchg
pop
sbb
or
gs
lods
cmps
stos
(bad)
mov
ja
fmul
mov
lea
std
or
ss
test
sub
ins
daa
jmp
xchg
lea
jmp
inc
push
push
mov
fisttp
sahf
mov
mov
repz
adc
jg
mov
call
int3
mov
cmp
scas
lahf
hlt
xor
imul
mov
jmp
dec
and
ja
fcomp
mov
popf
fld
js
popf
inc
lds
jmp
in
nop
xchg
mov
sqrtps
int
enter
jno
pop
iret
mov
ja
xchg
mov
fwait
and
cmp
push
aad
or
sbb
and
mov
push
sti
sbb
jp
mov
cld
pop
call
iret
xchg
cs
mov
mov
mov
test
outs
mov
sub
bound
jno
call
mov
mov
mov
stos
push
pop
mov
rcl
out
xchg
mov
shr
sbb
(bad)
dec
and
xchg
jae
xor
aad
mov
lods
ffreep
lea
add
(bad)
or
sahf
(bad)
stos
bound
dec
mov
fsubr
jo
fld
ins
mov
pop
je
leave
dec
cmps
pop
mov
ja
cmp
push
jns
fucomp
jno
mov
popa
sar
sbb
mov
inc
iret
or
xchg
fs
in
xor
xchg
pop
ret
add
leave
and
add
les
and
sub
jmp
xchg
jmp
add
loop
gs
adc
arpl
mov
xchg
call
gs
xor
lea
inc
xchg
repnz
nop
ficom
pop
push
sub
arpl
es
sahf
test
mov
fstp
xchg
jae
dec
cmp
xor
call
xor
nop
pop
rol
(bad)
or
mov
adc
sbb
std
aam
pop
(bad)
push
cmp
out
cmp
add
jp
pop
retf
sbb
pop
outs
nop
pop
mov
shr
xor
inc
push
fdivr
sbb
imul
int3
cmp
xadd
dec
leave
mov
cwde
test
pusha
jge
fdivr
lahf
jmp
aas
das
shr
movs
cmc
push
outs
jle
inc
pushf
xor
(bad)
sub
outs
inc
ror
jne
or
push
jmp
jmp
(bad)
mov
(bad)
lods
pop
cmps
xor
adc
cmc
fiadd
(bad)
call
or
lock
in
test
cmc
jecxz
mov
pusha
sar
ret
mov
ror
and
ss
retf
setg
out
dec
sub
mov
and
or
(bad)
pop
lods
sub
rcr
out
pop
hlt
(bad)
div
sub
in
dec
sub
imul
mov
push
xchg
stos
jb
aam
mov
jmp
paddw
fsubr
sbb
inc
cld
xchg
lods
out
ret
dec
shl
scas
test
stos
and
aad
push
cmc
xchg
mov
sbb
fnstcw
test
xchg
(bad)
icebp
stc
enter
leave
and
xchg
shr
mov
arpl
xchg
loopne
add
mov
jae
repz
ja
jbe
add
inc
ror
sti
call
loopne
push
sbb
cdq
sbb
jo
icebp
fisub
inc
inc
scas
jnp
push
rol
inc
loop
addr16
sahf
xor
nop
inc
dec
outs
mov
mov
hlt
aam
jae
stos
mov
inc
dec
jmp
int3
jp
pop
inc
js
lds
iret
inc
xchg
cwde
repnz
nop
pusha
(bad)
call
mov
mov
loop
add
movs
mov
daa
lods
xor
mov
(bad)
pop
(bad)
loopne
das
and
(bad)
int3
mov
push
mov
imul
aaa
out
cmps
cmps
test
cmc
popf
leave
movs
xor
hlt
sbb
nop
add
dec
ja
inc
pop
js
mov
scas
dec
jne
ins
jb
in
cmp
jg
mov
adc
sub
lahf
and
add
iret
sbb
scas
inc
popf
jne
mov
mov
test
div
sbb
pop
dec
ror
add
mov
jp
fbstp
cmp
sbb
or
dec
ins
ins
repz
mov
mov
daa
jmp
fstp
mov
add
sub
cmp
in
in
(bad)
cmc
lock
loopne
ja
mov
dec
and
cmps
adc
push
jne
push
fdivr
shl
jecxz
jbe
adc
pop
(bad)
(bad)
jbe
add
fisub
adc
mov
ret
adc
loopne
std
jmp
sbb
fisubr
pusha
cmps
sahf
mov
mov
pusha
pop
xor
out
out
pop
sti
mov
in
jecxz
mov
or
int
jb
jg
push
leave
pop
out
inc
(bad)
push
cmp
fcmovbe
ins
and
mov
imul
neg
call
ins
test
(bad)
inc
cmp
mov
xchg
pusha
imul
(bad)
es
and
push
fidivr
add
mov
out
in
fcom
icebp
cmp
lock
mov
xor
add
mov
sub
push
aam
aad
xor
(bad)
jg
and
pop
pop
xchg
pop
add
mov
jb
ds
fs
mov
out
das
lods
ins
out
mov
inc
adc
in
fmulp
sbb
dec
loop
stos
cmp
mov
in
call
cmp
jno
fst
pop
xor
sub
mov
outs
mov
fwait
imul
cmp
inc
std
inc
(bad)
mov
fs
iret
mov
out
jbe
xor
rcr
mov
or
arpl
sub
in
lods
in
repz
push
xchg
push
mov
push
pop
and
ja
mov
sub
sub
cmp
in
sub
and
inc
jge
out
fidivr
mul
rcr
mov
adc
mov
outs
add
ret
stos
in
fst
inc
not
push
or
in
out
scas
cmp
ficomp
cld
or
pop
pop
push
fxch
dec
mov
into
ss
mov
cdq
ror
adc
out
shl
mov
sahf
mov
xchg
fld
pop
or
aas
ja
stos
add
pop
mov
rol
jle
js
add
mov
xchg
or
movs
sbb
mov
sbb
(bad)
data16
sbb
hlt
das
repz
das
stos
retf
ja
and
iret
mov
sub
sub
xor
dec
inc
sub
xor
pop
xor
in
das
xchg
xchg
dec
rol
movs
push
xor
bound
call
jmp
mov
in
jle
fwait
call
into
mov
stc
rcr
mov
or
sbb
cld
pop
push
movs
add
loopne
div
int3
ret
jb
test
inc
sub
ret
push
xchg
(bad)
cmp
xchg
and
and
stos
inc
retf
pop
inc
pop
loop
mov
sbb
icebp
mov
xor
mov
loopne
mov
shl
outs
in
movs
fistp
dec
mov
rol
add
aas
sbb
(bad)
mov
aad
call
fcomp
sar
pop
mov
stos
mov
mov
cmp
gs
je
and
or
es
inc
stc
mov
jl
jecxz
jb
push
dec
int
outs
cmp
fwait
and
nop
loop
test
iret
xor
xor
cmc
stc
inc
xchg
stc
test
pop
(bad)
out
int3
mov
add
cwde
push
sbb
adc
je
adc
fwait
jle
or
pop
js
xor
push
jl
pop
pop
add
xor
mov
sub
add
outs
xor
ins
rol
sahf
into
jmp
rcl
scas
imul
dec
rcl
stos
ror
push
stos
test
xor
xor
retf
inc
clc
js
in
jbe
and
lea
test
dec
(bad)
push
pop
mov
inc
in
jle
cmp
shl
inc
das
dec
jg
push
fdiv
dec
xchg
fisttp
push
and
pop
call
push
mov
lods
cmp
shr
dec
mov
cwde
dec
xor
pop
into
inc
mov
push
sahf
sub
mov
add
retf
lods
call
add
test
jp
push
dec
ss
jle
ins
or
in
or
jmp
cmc
hlt
test
xor
popf
test
in
inc
add
sahf
sbb
test
clc
test
leave
pop
rcl
pop
dec
jle
lds
xchg
out
in
jp
and
jl
sub
pop
pop
bound
popf
xor
cmc
retf
mov
stos
mov
sahf
outs
pop
iret
sbb
xor
jp
je
sahf
dec
lods
stc
adc
or
jbe
sar
lahf
sbb
ja
das
xchg
xchg
xchg
cmp
sbb
dec
shl
jb
jle
cmps
mov
cmp
or
jl
cmp
neg
mov
mov
cmp
(bad)
cli
and
outs
mov
pop
les
test
movs
dec
xchg
inc
ret
jg
lods
mov
sbb
test
cmp
mov
pop
xor
stos
push
or
mov
jns
sti
adc
xchg
sbb
outs
aad
xor
imul
dec
mov
and
(bad)
xlat
(bad)
test
js
xchg
(bad)
sbb
xchg
pop
clc
sub
mov
cmp
jnp
push
ficom
jecxz
je
inc
mov
lea
and
sub
sub
adc
pop
out
lahf
iret
dec
sbb
xor
ret
and
xchg
loope
adc
aaa
daa
jge
movs
fnop
cli
add
xchg
mov
popa
test
ins
adc
or
xchg
js
dec
jg
and
mov
add
sbb
jb
loope
xchg
or
fs
cdq
mov
mov
test
shl
dec
retf
pop
push
sbb
jg
std
lds
shl
mov
xor
std
dec
bound
cmps
xor
test
sub
icebp
ds
sub
(bad)
sti
mov
jae
ss
mov
fnstenv
call
jno
dec
pop
(bad)
ja
cwde
loopne
jae
xor
js
push
xor
xchg
sub
dec
faddp
(bad)
cmc
fs
sub
pop
addr16
adc
push
adc
popf
jmp
stos
push
mov
out
push
ja
enter
jbe
adc
inc
push
(bad)
repz
test
inc
adc
popf
xlat
daa
cmp
or
mov
xlat
dec
cmc
loope
dec
movs
(bad)
(bad)
inc
in
or
out
sub
push
adc
adc
iret
test
and
cmp
out
dec
pusha
adc
shl
fist
int
lahf
cmc
xchg
aad
xor
outs
mov
mov
stc
popf
icebp
loop
cmps
cmps
mov
fdiv
mov
retf
xchg
sbb
push
sar
mov
xor
cmp
adc
sub
cs
call
test
lock
mov
daa
mov
mov
retf
jecxz
(bad)
fsubr
push
enter
add
nop
stos
add
sub
sbb
xchg
push
and
imul
stc
nop
inc
mov
neg
mov
retf
xlat
fild
cdq
or
test
mov
retf
test
(bad)
and
repnz
rcr
cmp
test
ror
mov
stc
ins
ss
cmp
jmp
jns
ficom
test
xchg
jle
mov
in
mov
and
sub
mov
add
mov
cmp
add
lock
push
out
jb
inc
mov
orps
addr16
nop
cmp
or
call
cwde
ins
sub
daa
je
adc
jmp
push
or
sub
js
cwde
or
inc
test
sub
fdivr
jp
cli
out
push
pop
and
mov
out
popa
cmp
push
test
mov
xchg
or
or
jl
jmp
arpl
mov
push
xor
sub
call
nop
push
dec
pop
ins
pushf
mov
cdq
hlt
mov
push
and
jmp
out
inc
dec
call
int3
xchg
test
push
adc
xchg
enter
xor
xchg
cli
(bad)
out
fdiv
(bad)
out
cmps
and
mov
mov
push
pop
js
xchg
dec
cmc
nop
fwait
xchg
cmps
lods
xchg
pop
xchg
das
sub
imul
dec
mov
or
sbb
rcl
(bad)
or
xchg
sbb
mov
dec
movs
(bad)
jns
xor
mov
(bad)
fwait
and
lahf
and
xchg
jecxz
pop
push
in
pop
adc
fdiv
ss
lods
mov
data16
frstor
fbld
mov
fs
fcmove
mov
(bad)
faddp
mov
test
je
pushf
pop
push
test
out
xchg
inc
test
dec
or
clc
je
and
add
mov
outs
aam
xchg
(bad)
test
lods
movs
adc
xchg
mov
inc
and
test
fnstsw
xchg
retf
outs
inc
les
sbb
out
pop
add
sbb
dec
cmp
dec
fs
cmps
mov
xchg
xor
arpl
ins
and
test
popa
mov
sub
(bad)
jmp
cwde
xchg
out
shr
pop
sbb
loop
push
push
jnp
inc
cmp
cmp
adc
add
xor
jmp
push
enter
cmp
cmp
call
sub
sub
stc
bound
div
add
jae
es
sbb
in
dec
stos
xor
push
and
jmp
cmp
sahf
mov
adc
lods
(bad)
push
cmps
xor
inc
ja
pop
mov
sub
icebp
outs
cmc
xchg
cmp
dec
hlt
cmc
fst
mov
lods
movs
in
fbstp
test
imul
test
sub
icebp
mov
retf
pop
movs
in
xor
and
xchg
call
pusha
pop
push
stc
js
arpl
mov
bnd
push
pushf
inc
test
push
adc
mov
cmp
dec
leave
not
jae
mov
fcom
iret
jecxz
adc
dec
dec
dec
dec
jo
fdiv
sbb
mul
mov
cmp
jle
cld
and
iret
idiv
fsubp
add
add
or
sti
in
aaa
inc
jg
dec
popa
pop
jmp
fsub
push
push
imul
test
mov
inc
ss
ss
ds
add
cmc
jle
cmp
push
frstor
retf
cmc
pusha
cmp
into
or
int3
ds
cs
sar
or
xor
dec
dec
arpl
not
xchg
xor
shl
pop
retf
scas
call
pop
repz
xchg
inc
stos
add
adc
les
sbb
and
and
out
sbb
dec
loopne
cli
loop
mov
jne
inc
add
push
jmp
popf
adc
mov
call
retf
stc
cld
pop
add
lahf
pop
sub
ds
mov
pop
inc
mov
shl
jl
push
and
sbb
dec
lock
add
or
jo
push
popa
pop
or
cmc
imul
cmc
lds
xchg
mov
dec
rcl
cmp
sbb
out
sbb
xor
or
xchg
sub
call
sbb
pusha
shl
inc
outs
sbb
push
adc
fcomp
(bad)
clc
pop
jno
aam
add
div
bsr
test
and
add
fcmovb
dec
mov
fstp
imul
(bad)
hlt
aaa
cmp
xchg
stos
das
dec
sbb
je
xchg
fidivr
aas
scas
cli
mov
rol
xor
ret
out
call
xchg
scas
adc
test
out
or
gs
or
xor
imul
mov
popf
push
mov
add
and
push
outs
bound
xor
add
sbb
dec
and
daa
sub
cmp
fnstcw
sbb
mov
add
out
adc
pop
stos
pop
inc
jnp
add
or
push
mov
fidivr
cmp
ret
je
in
dec
push
xor
and
mov
(bad)
jmp
cmp
jecxz
adc
pop
ins
popf
sub
or
mov
xchg
loopne
jg
sub
ins
lahf
mov
sbb
pop
aaa
mov
ins
mov
cmp
sbb
push
mov
fldenv
out
inc
push
mov
xchg
data16
jbe
mov
stos
or
popf
cmps
mov
inc
jmp
pop
shl
dec
fcmovu
dec
adc
ins
xor
dec
mov
sbb
pop
jge
pop
pop
outs
sbb
iret
mov
pop
dec
stos
jbe
fidivr
je
outs
lock
fdivr
mov
nop
and
repz
ret
mov
mov
mov
mov
out
mov
lods
jle
inc
repnz
jmp
daa
lahf
icebp
out
popf
xchg
int
mov
sbb
dec
hlt
in
cmp
sub
ins
adc
push
popa
ficomp
test
int3
sar
ss
outs
sbb
jg
sub
mov
pop
jg
(bad)
aas
hlt
pop
dec
mov
outs
movs
es
leave
dec
clc
movs
mov
mov
xor
mov
mov
sbb
data16
pop
fistp
adc
jae
repnz
movs
pop
daa
inc
fnstenv
(bad)
xor
mov
xchg
sbb
jl
mov
cmp
stos
test
ins
ror
iret
popa
fwait
sar
cli
into
inc
push
push
in
xchg
pop
scas
sub
mov
cwde
adc
and
stos
push
cmp
in
fist
adc
sbb
mov
cdq
mov
inc
push
adc
movs
push
hlt
popa
xor
dec
cmp
aad
inc
add
hlt
lea
test
mov
lahf
push
push
add
mov
xor
das
retf
inc
jp
call
rcl
fisubr
les
inc
pusha
mov
push
xchg
adc
fisubr
mov
rcl
pop
mov
mov
movs
stc
mov
gs
cmps
sub
pusha
mov
mov
sub
lods
add
or
int3
adc
xor
and
fidivr
arpl
(bad)
cmp
mov
adc
push
scas
scas
jmp
shl
add
mov
lahf
gs
imul
push
or
push
jl
ins
sbb
leave
movs
jns
xchg
push
xchg
mov
bound
sar
movs
inc
dec
push
push
pop
add
sahf
into
test
mov
xchg
sbb
dec
dec
adc
nop
icebp
fcmovnu
mov
push
aas
retf
or
push
movsx
pop
jecxz
sbb
mov
fcmovu
jb
push
pop
in
pop
inc
or
scas
mov
and
ins
aas
xor
xchg
mov
pusha
cld
(bad)
iret
mov
cld
pop
mov
retf
sub
bound
in
and
(bad)
(bad)
shl
(bad)
sub
push
xchg
ficomp
sbb
(bad)
(bad)
adc
pop
cmps
aas
xchg
jg
ins
idiv
mov
cmp
sbb
mov
push
sbb
jp
pop
jns
(bad)
hlt
adc
repnz
pop
add
and
sbb
jmp
ret
mov
int3
mov
scas
add
push
jno
jns
adc
adc
cdq
mov
shl
dec
pop
push
outs
mov
es
mov
sbb
push
stos
push
and
popf
aaa
loope
pop
out
in
loope
outs
shr
outs
sbb
mov
dec
dec
or
dec
mov
jmp
(bad)
(bad)
and
fild
std
outs
pop
ja
pop
dec
sbb
push
sub
jmp
push
push
pop
ficomp
sub
jmp
(bad)
mov
loop
xchg
sub
adc
outs
lock
lods
dec
test
cmp
ret
push
cs
xor
sbb
push
cld
daa
sbb
jnp
rol
mov
mov
sbb
xlat
pop
cmps
cmc
jl
mov
mov
pop
xchg
call
mov
cmp
mov
sub
xlat
xchg
mov
inc
push
add
adc
mov
pop
jne
pushf
fiadd
push
xchg
jne
or
das
cmps
add
jbe
es
jbe
fistp
jnp
cwde
or
das
sub
cmp
sub
fisubr
cli
icebp
mov
push
enter
(bad)
retf
hlt
das
mov
mov
cdq
mov
repnz
out
sbb
mov
shl
jle
push
dec
mov
ins
retf
push
cmp
jbe
xchg
and
xchg
jo
div
mov
push
push
inc
jecxz
push
xor
jmp
mov
lds
xchg
mov
and
mov
iret
sbb
std
pop
sti
inc
xor
cs
stc
test
sbb
mov
mov
pop
xchg
inc
std
jp
fisttp
inc
mov
fiadd
adc
test
(bad)
sbb
popf
jg
xchg
mov
jae
xor
fcmovb
fld
mov
cdq
cmc
call
add
in
(bad)
popf
shl
shl
daa
inc
and
ror
pop
test
pop
push
mov
jmp
sbb
pop
out
adc
fcmovnu
outs
stc
inc
xor
mov
iret
sub
movs
sub
push
inc
mov
test
add
outs
icebp
xor
cmp
sbb
or
outs
add
lods
pusha
xchg
xchg
ss
std
mov
push
loop
mov
xchg
and
aam
add
add
inc
into
inc
xlat
scas
push
cmps
push
xchg
jecxz
sub
in
das
scas
jmp
dec
xchg
push
push
mov
ja
push
inc
ret
adc
push
cmp
jo
mov
shl
in
into
xchg
pop
sbb
xor
cdq
adc
mov
mov
and
aaa
cwde
adc
fldlg2
sub
daa
(bad)
push
int
(bad)
call
aas
jg
hlt
arpl
pusha
mov
push
dec
shr
pushf
mov
mov
addr16
popf
pop
movs
test
fcom
loop
in
das
test
aaa
inc
sbb
inc
sub
push
iret
xor
xlat
out
cmp
fdivp
mov
fs
mov
push
stos
mov
out
sub
xchg
fstp
ret
sbb
out
and
(bad)
pop
lahf
aaa
cmp
cmp
into
icebp
inc
mov
(bad)
cmps
mov
arpl
pushf
jbe
mov
cli
loop
and
pop
cmp
or
sub
icebp
dec
mov
pushf
(bad)
mov
sub
pop
ret
out
lea
mov
lock
repz
add
push
shl
push
test
mov
ror
leave
icebp
mov
xchg
int3
mov
sbb
jo
ins
inc
nop
clc
push
lds
test
cli
cmp
cmc
cdq
add
and
sub
ficom
cmp
pop
in
pop
int3
rol
cdq
scas
push
mov
cmps
xchg
div
arpl
jecxz
jmp
jge
mov
and
rcl
ins
adc
cld
data16
jmp
add
add
add
call
outs
fisttp
add
adc
add
nop
mov
sti
push
dec
jo
ja
jmp
lods
jbe
mov
call
dec
jge
jp
jecxz
push
out
movs
xchg
xor
sub
lea
sti
mov
xor
xchg
xor
xlat
jecxz
cmp
and
(bad)
mov
and
dec
test
lods
push
pop
bound
ja
sbb
jmp
or
std
jmp
outs
pop
ror
enter
(bad)
adc
mov
mov
dec
ins
push
jns
in
mov
repnz
mov
adc
data16
sub
daa
pusha
mov
or
add
jns
jo
inc
loope
sub
adc
mov
lar
push
mov
mov
js
lods
sahf
mov
outs
sub
repz
mov
(bad)
pop
and
sub
add
dec
mov
enter
ret
nop
arpl
lahf
shl
mov
jmp
inc
cs
sbb
pop
xor
add
sub
pop
mov
inc
pop
sub
(bad)
adc
bound
xchg
in
shl
add
popa
pop
push
adc
cs
adc
fdiv
mov
js
mov
cdq
mov
pop
mov
icebp
inc
out
leave
sbb
ss
aam
and
dec
out
or
cmp
in
imul
push
add
mov
aas
ins
mov
iret
movs
outs
jne
xor
add
(bad)
jp
lods
jp
and
test
mov
jecxz
push
mov
popa
add
push
add
fiadd
bound
xor
and
or
push
xchg
aam
pop
scas
inc
and
adc
lods
cmp
jl
loop
loope
jbe
les
adc
sahf
in
adc
mov
in
inc
push
cld
xor
jae
sbb
mov
xchg
ror
mov
xchg
repnz
jae
in
nop
jae
into
mov
mov
test
pop
pop
and
das
xchg
movs
loop
test
popa
push
or
arpl
lock
fst
sti
cwde
adc
pop
jmp
aas
mov
loop
out
sub
fadd
pop
outs
sahf
and
dec
dec
loopne
les
fwait
ss
les
cmp
adc
aam
or
mov
sub
pop
sub
xor
cmp
fs
(bad)
repz
call
push
mov
fs
pop
xchg
aaa
mov
dec
push
(bad)
fld
bound
or
inc
add
jbe
push
lods
call
and
in
xchg
out
or
out
mov
sub
xchg
xchg
add
jl
mov
mov
cmps
sahf
add
jge
xchg
into
add
or
nop
movs
xor
shr
cli
push
mov
(bad)
bnd
leave
inc
push
mov
sub
mov
mov
pop
in
call
sti
adc
xlat
jns
es
dec
mov
fstp
xchg
xchg
out
jne
sub
jnp
mov
cmp
imul
mov
xchg
push
hlt
cmp
pop
idiv
dec
add
ret
fdivr
enter
(bad)
jae
cmp
mov
inc
lods
xchg
mov
push
xchg
shl
xchg
sbb
sub
and
mov
xor
and
adc
mov
scas
jmp
pop
lahf
xchg
pop
repz
or
ror
pop
dec
aad
jle
ret
mov
fs
or
push
xchg
xor
ins
arpl
push
mov
xchg
add
rcl
loop
add
push
(bad)
sub
ror
loope
xchg
stos
and
test
out
test
inc
gs
shl
mov
inc
out
jl
sub
ret
sbb
inc
mov
fnstsw
pushf
push
out
jbe
ins
(bad)
rol
sbb
or
daa
pop
fdiv
and
pop
push
imul
sbb
fist
(bad)
ret
icebp
xchg
push
xor
das
xor
mov
aaa
enter
mov
cmp
push
popf
sub
push
iret
repz
in
pop
fisub
and
jp
sub
dec
lahf
adc
push
test
into
push
cs
inc
cwde
sahf
xor
xchg
mov
mov
das
and
pusha
(bad)
ja
jl
retf
pop
je
mov
push
jecxz
nop
mov
mov
loope
out
pop
fidiv
sub
cmps
in
(bad)
imul
jae
inc
retf
mov
sbb
mov
adc
sub
test
push
mov
lahf
push
cmp
mov
rol
pop
fsub
fcmovnbe
add
gs
clc
xor
or
(bad)
jmp
mov
dec
lahf
out
pusha
dec
ror
sub
ret
adc
es
mov
fiadd
adc
or
pop
retf
(bad)
movs
jmp
and
push
aad
sti
dec
(bad)
stos
lds
xchg
(bad)
js
sti
ins
idiv
in
add
add
and
sub
jae
shl
or
stos
mov
pop
inc
mov
mov
fcomp
xchg
cwde
or
mov
stos
call
xchg
movzx
dec
cmp
add
jmp
fnstsw
sbb
add
aas
ret
jnp
jmp
pushf
sbb
push
movs
shl
jle
movs
push
mov
push
cwde
dec
add
dec
or
add
push
lods
pop
shr
adc
adc
mov
push
sub
ds
xlat
add
out
sbb
mov
repnz
mov
mov
mov
clc
jecxz
cmc
daa
leave
inc
mov
sti
in
xchg
add
std
pusha
das
or
ins
leave
sub
inc
jp
sbb
xor
mov
fcom
inc
popa
pop
dec
mov
ins
(bad)
ins
outs
pop
(bad)
loope
movs
dec
sub
movs
enter
cmp
shr
hlt
hlt
out
pop
test
and
mov
repnz
mov
cld
xor
call
repz
rcl
test
sar
cmp
inc
daa
xchg
pop
jmp
lea
xchg
in
or
or
jle
xchg
jl
pop
jmp
or
fs
jb
xchg
mov
outs
adc
jg
(bad)
ins
nop
bound
sar
sub
scas
in
push
mov
add
in
jl
test
cmp
inc
mov
(bad)
cdq
pop
mov
arpl
in
xor
addr16
lock
ret
xchg
mov
sbb
lahf
std
fs
icebp
mov
lds
jb
ror
inc
xor
shr
mov
push
mov
sub
cmc
adc
xchg
xchg
scas
jge
cmps
(bad)
retf
das
test
cmp
pop
rcr
or
cmp
or
mov
daa
jno
retf
sar
push
clc
daa
xchg
retf
cmp
movs
pusha
and
mov
jbe
jmp
xchg
scas
xchg
pop
mov
ins
and
dec
das
adc
int3
retf
es
sub
and
or
dec
adc
cdq
jae
sbb
jecxz
adc
jmp
pop
add
mov
imul
les
pop
mov
scas
adc
sub
push
test
jns
outs
jne
mov
jnp
jo
out
cs
cmp
repz
adc
mov
sub
das
rol
les
mov
fist
push
int3
dec
sti
movs
pusha
sbb
stc
sbb
inc
jb
gs
(bad)
out
ins
xor
cmp
mov
pop
mov
cmp
test
(bad)
push
inc
cwde
sti
stos
jp
xchg
into
aas
mov
adc
sbb
mov
pop
std
cdq
jnp
mov
or
pop
ja
mov
loopne
cmp
mov
sub
pop
ins
pop
sub
shl
lock
fist
sub
mov
ret
sub
xchg
sbb
ins
div
sub
(bad)
(bad)
xor
fs
lock
mov
dec
cld
(bad)
inc
les
dec
loopne
inc
and
xor
sub
mov
or
sub
in
dec
pop
and
xor
mov
jle
movs
pop
mov
ds
cmps
add
pop
push
stos
sub
pop
addr16
jmp
or
add
push
retf
test
sbb
popa
(bad)
loope
scas
lock
(bad)
cmp
sub
jmp
cwde
sub
in
ror
or
mov
add
mul
mov
fsubr
mov
inc
fidivr
dec
fwait
jb
fnstcw
adc
push
jo
or
icebp
jle
in
into
pop
ss
jp
das
push
jp
xor
inc
sbb
dec
popa
pushf
sbb
outs
(bad)
test
xchg
and
jmp
dec
repnz
jecxz
ins
sbb
fcmovnb
mov
pop
push
inc
dec
in
mov
or
mov
jo
in
imul
fs
jmp
ds
js
test
rol
sar
dec
xchg
cmp
(bad)
or
mov
pop
call
dec
retf
push
push
out
ss
pop
das
jne
adc
xor
dec
in
les
inc
(bad)
aad
scas
mov
xchg
(bad)
imul
add
dec
sbb
out
mov
sti
call
mov
sub
inc
push
add
mov
repz
gs
jne
and
out
pusha
jl
sbb
xor
jl
add
ins
pop
dec
push
call
xor
push
cmp
and
or
jae
scas
aam
push
outs
popf
cmp
jne
sub
popa
je
fucom
jg
sysenter
aaa
aaa
mov
imul
and
daa
or
push
add
xor
cmp
ror
and
xchg
mov
shl
call
cli
push
mov
fst
lahf
sti
fs
stc
(bad)
or
mov
sbb
fisub
pop
or
xchg
pop
(bad)
pusha
clc
xor
dec
outs
push
fwait
imul
pop
cmp
outs
mov
in
push
dec
mov
push
js
sbb
iret
scas
mov
in
mov
ins
mul
movs
xor
movs
adc
dec
pop
out
push
cmps
movs
jmp
lods
loopne
dec
cmps
mov
lea
sti
sbb
into
pop
js
pop
(bad)
(bad)
out
add
mov
int
xchg
pop
mov
fcom
pop
test
and
div
lahf
lds
fdivrp
xor
add
and
cwde
xor
lahf
cdq
cmp
and
lods
movs
push
mov
jae
pop
cs
sub
enter
push
inc
jp
scas
mov
imul
xchg
repnz
aam
cmp
mov
mov
jmp
ret
sahf
test
sub
push
mov
mov
sub
push
and
ins
xor
mov
adc
stos
retf
mov
nop
or
hlt
push
cmp
mov
scas
jmp
add
repz
daa
or
movs
inc
sub
jae
(bad)
mov
icebp
es
ja
jae
mov
sbb
outs
push
test
pop
xor
fld
lea
test
or
jns
ja
adc
cmp
adc
mov
out
or
ror
test
ja
outs
fucomp
rol
xor
fsub
add
outs
mov
shl
jae
jne
(bad)
fwait
xchg
mov
je
jns
dec
ins
int3
outs
push
sub
and
add
and
into
lock
or
sbb
mov
push
je
push
stos
ins
xlat
leave
scas
ret
out
sub
push
push
loopne
daa
adc
dec
scas
jg
adc
jns
mov
push
xchg
bound
add
adc
cmp
enter
test
sahf
xchg
aas
cmp
loope
cmc
mov
ins
mov
push
stos
ud1
imul
retf
mov
cmp
pop
mov
pop
mov
xor
jnp
pop
loope
xor
movs
mov
idiv
test
gs
clc
cmp
movs
sbb
jb
push
fild
xor
fistp
mov
xchg
icebp
xor
outs
xor
jl
(bad)
pop
std
lods
lock
cmps
sbb
ret
push
mov
xchg
aad
fisttp
dec
fwait
(bad)
out
add
fwait
push
in
sar
mov
push
mov
shr
push
jmp
push
mov
adc
mov
or
fwait
sub
stos
ins
retf
in
gs
leave
dec
mov
or
pusha
xor
pop
retf
adc
ins
lods
jbe
sbb
push
in
mov
push
pop
aaa
mov
pop
cld
jge
dec
mov
push
inc
dec
pop
push
sub
xchg
mov
movs
das
(bad)
and
xchg
xor
adc
and
and
test
mov
push
stos
xchg
das
cmp
test
in
mov
stos
inc
jbe
sbb
test
loop
jge
pop
inc
cld
mov
ins
xchg
int3
shl
outs
inc
or
sbb
or
es
loop
fld
imul
mov
lahf
add
sbb
cli
and
mov
daa
loop
scas
push
or
pushf
and
xchg
sti
cld
xchg
sbb
pop
mov
(bad)
jecxz
xchg
or
fisttp
mov
xchg
jmp
cwde
rcl
mov
mov
popf
jno
and
popf
cmc
jo
arpl
inc
cmc
mov
pop
xchg
iret
clc
or
mov
addr16
clc
js
ja
or
inc
movlps
xchg
popf
lahf
xchg
push
sub
sbb
pop
push
jl
xor
inc
sti
cmp
lahf
int3
or
imul
and
punpckldq
mov
jmp
cmc
mov
add
pop
mov
(bad)
dec
shr
js
pop
dec
in
scas
repnz
retf
mul
shr
js
add
ja
mov
imul
out
mov
pop
in
or
jbe
repz
iret
add
jmp
sub
push
test
push
inc
inc
loopne
push
retf
pop
in
pop
mov
popa
mov
mov
inc
sbb
jbe
(bad)
xchg
addr16
(bad)
xor
ret
cwde
subps
rcr
fwait
or
cmp
dec
mov
jg
or
retf
imul
cs
or
adc
sub
sbb
pop
stos
adc
dec
xchg
adc
mov
neg
mov
sub
inc
push
hlt
push
adc
imul
imul
xor
add
dec
ja
push
dec
cli
xor
(bad)
fs
cmp
mov
aam
or
xor
dec
call
lea
daa
xor
int3
pop
sbb
add
sar
aam
sbb
or
pop
in
stc
inc
in
imul
adc
xchg
pop
adc
inc
div
aam
scas
jp
(bad)
pop
mov
lds
pop
les
or
stc
call
dec
xor
inc
fadd
sub
or
sub
add
lods
mov
scas
mov
xor
push
cld
shr
and
pushf
je
mov
jmp
mov
push
dec
lea
dec
fs
out
or
or
xor
add
mov
mov
(bad)
std
outs
std
jmp
and
push
pop
(bad)
jge
data16
xchg
ja
(bad)
dec
aaa
lods
bound
sub
sub
mov
cmc
or
push
cmp
mov
pop
loopne
imul
inc
dec
and
cdq
popf
add
scas
gs
ins
into
test
fldl2e
in
mov
mov
push
jne
push
pop
sbb
stos
imul
gs
outs
dec
aad
add
sar
xor
mov
jl
pusha
jno
lds
mov
push
or
push
pop
mov
es
imul
(bad)
xor
xor
cwde
shr
mov
push
aaa
scas
test
xor
cmp
je
bound
mov
push
jmp
stc
shr
sbb
jp
xor
cwde
xchg
pop
and
test
push
mov
fwait
loope
mov
mov
or
jbe
idiv
cmp
mov
push
mov
aaa
mov
cmp
repz
test
test
mov
pop
call
std
into
sub
xchg
nop
lods
ja
sar
and
addr16
test
std
repnz
out
popf
xchg
rol
mov
(bad)
jp
cmp
ficomp
bound
sbb
mov
pop
aam
push
std
popa
clc
jns
mov
mov
fsub
cmp
aad
jno
mov
stos
inc
jbe
sbb
mov
out
movlps
imul
lods
hlt
xor
push
lahf
push
js
pop
cmp
scas
rcr
sbb
pop
fadd
cs
ss
fwait
imul
xor
jbe
mov
push
cmp
jmp
fild
inc
mov
and
rol
popa
int3
push
add
dec
mov
sti
addr16
fs
xor
dec
ds
dec
imul
iret
call
nop
push
or
add
cmc
jg
loope
jecxz
cmp
sub
push
mov
movs
jge
cmp
xlat
movs
xchg
jmp
push
xor
dec
rcl
mov
enter
adc
pop
leave
cmp
fwait
jp
xor
cwde
sub
in
mov
xchg
(bad)
cmp
xor
popf
mov
jg
adc
pop
bound
mov
lahf
fst
arpl
scas
(bad)
push
mul
or
mov
xchg
loop
movs
fadd
xchg
lea
or
rcl
cli
(bad)
rcr
scas
mov
pop
lds
ja
or
jo
lahf
add
inc
jo
push
fdiv
inc
ins
data16
or
imul
mov
cmp
sbb
jb
cmp
dec
xchg
je
cs
sbb
xchg
xchg
repnz
pop
stos
popf
iret
gs
loopne
mov
(bad)
push
js
fsubr
xor
gs
popa
dec
or
in
and
xchg
out
mov
rcl
sbb
fmulp
sbb
cmp
push
pop
adc
adc
arpl
das
aad
lea
mov
fisttp
mov
pop
lods
js
out
mov
hlt
ds
mov
scas
sub
lahf
or
mov
into
in
jbe
xlat
cld
jle
fld
pusha
aaa
lea
inc
sub
mov
inc
mov
pop
jne
cvttps2pi
jle
cmp
xor
lods
or
mov
jae
sbb
jae
dec
ins
lahf
retf
test
ja
pop
xchg
outs
lds
mov
push
pop
jns
pop
fild
popa
mul
fwait
test
xor
inc
data16
sbb
gs
xor
repz
adc
push
sub
dec
xor
or
dec
fwait
or
std
aad
jmp
mov
loope
scas
add
push
push
pop
or
jnp
loop
lods
add
mov
popa
aas
arpl
inc
test
stos
jns
sbb
daa
outs
pop
mov
fsubr
or
xchg
test
outs
add
xor
shl
addr16
jmp
mov
stos
push
xchg
gs
sbb
mov
sbb
mov
cdq
je
dec
call
sbb
mov
dec
fmul
sar
lds
lods
stc
lahf
pop
add
add
xchg
pusha
(bad)
call
daa
xor
push
sub
cmp
jno
sti
std
out
xlat
movs
(bad)
mov
add
mov
scas
retf
add
addr16
dec
and
stc
xor
and
push
mov
mov
mov
mov
mov
nop
ss
sbb
xchg
cli
cmc
sti
mov
ror
lahf
xor
sub
inc
mov
jns
mov
test
stc
mov
outs
inc
sub
leave
push
nop
test
or
imul
sbb
cmp
or
adc
jle
push
sub
xor
cmp
retf
popa
fnstenv
enter
pop
xchg
jg
sar
xchg
push
push
mov
into
cmp
les
jne
pop
cmp
and
mov
imul
lods
aaa
pop
sub
pop
mov
jecxz
mov
js
jns
test
push
out
adc
xchg
sbb
in
inc
mov
xor
sub
sbb
ss
loope
fisttp
and
nop
repz
retf
mov
cmps
and
xor
retf
rcl
adc
mov
mov
and
dec
mov
or
fisubr
push
stc
add
jmp
aam
ret
pop
ss
sub
jp
mov
mov
push
rol
or
fwait
mov
mov
inc
mov
ret
je
dec
jp
cli
int
shl
pushf
xor
mov
sub
add
or
clc
lds
dec
dec
sub
jns
shl
jmp
pop
jno
xor
es
or
add
pop
hlt
test
jg
mov
and
movs
outs
add
inc
rol
jbe
jmp
jle
and
cwde
dec
inc
out
adc
fs
dec
jle
clc
xor
rcr
pop
mov
lahf
jecxz
std
pop
sar
rol
xchg
inc
jae
lea
imul
adc
jp
jmp
cld
je
ins
call
mov
mov
sub
(bad)
push
fsubr
lahf
mov
dec
xchg
mov
(bad)
(bad)
mov
cmp
adc
adc
inc
enter
fimul
sub
data16
push
aam
lods
cmp
jecxz
pop
push
ss
jnp
jnp
sub
jno
jns
lds
add
outs
mov
jmp
imul
sbb
mov
test
sar
mov
adc
or
jnp
ret
dec
fcomi
mov
sub
jno
add
pop
and
pop
stc
rcl
pop
test
mov
hlt
aas
(bad)
icebp
pop
cmps
(bad)
aad
mov
cmp
adc
lods
lds
xchg
xchg
cmp
xor
int3
jne
mov
movs
sbb
test
xchg
dec
dec
in
ins
es
jmp
ud0
add
push
fs
xor
daa
ins
xchg
mov
mov
popf
(bad)
pop
xor
cld
ret
mov
inc
call
ja
scas
jbe
cmp
movs
into
dec
in
pop
sbb
fidiv
mov
sub
push
repnz
test
mov
push
out
leave
xchg
inc
shl
xor
mov
scas
mov
ret
xchg
ins
mov
and
add
and
movs
(bad)
push
ja
jae
and
inc
and
sahf
fs
sub
call
ror
mov
adc
fdiv
data16
adc
push
inc
dec
test
retf
loopne
mov
mov
int3
and
pop
test
jecxz
jmp
stos
or
inc
lea
jecxz
dec
mov
mov
mov
mov
mov
push
inc
call
adc
lock
lea
stc
xchg
in
cmp
enter
jbe
aaa
and
cmps
in
nop
and
or
add
mov
sub
mov
mov
inc
jmp
aam
inc
nop
inc
dec
or
sub
lods
cmp
pop
leave
xor
ja
add
sub
in
jns
jbe
push
xchg
loopne
fst
jno
cmp
xchg
imul
mov
iret
xchg
and
inc
fldcw
mov
outs
pushf
or
jb
mov
cmp
jl
or
jmp
pop
cld
pop
fistp
sbb
dec
mov
push
ins
cmp
retf
add
inc
and
mov
add
cmp
out
sbb
mov
cdq
fldcw
xchg
inc
xor
test
aaa
mov
cmp
and
js
fist
neg
lds
test
jbe
jo
mov
dec
xchg
pop
outs
mul
popf
push
jae
cdq
adc
inc
xchg
jne
loopne
add
pop
ret
adc
sub
and
pop
dec
rcr
fstp
retf
call
push
loop
and
push
jbe
(bad)
sahf
and
jb
adc
xlat
mov
sub
lea
loope
ror
xchg
xchg
leave
lahf
xchg
mov
adc
mov
pusha
sbb
sub
push
cmc
mov
fld
jg
int
nop
add
mov
fst
sbb
jno
ss
cmp
clc
mov
cmp
xor
in
stos
push
pop
cmps
(bad)
mov
or
mov
pop
vpsubsw
das
outs
xchg
gs
xchg
fnstenv
(bad)
cdq
cmp
mov
mov
mov
dec
movs
fist
out
add
outs
mov
neg
jmp
cmp
mov
cmp
mov
in
fs
or
retf
push
(bad)
(bad)
aam
(bad)
stc
push
push
sbb
xchg
inc
cli
xchg
aas
push
jmp
fld
out
fistp
mov
out
xchg
movs
cmp
mov
dec
stc
mov
(bad)
out
pop
repz
mov
scas
pop
mov
and
dec
ret
mov
adc
jl
jmp
out
int
or
mul
xchg
(bad)
add
dec
ret
rep
std
stos
movs
push
not
and
mov
shl
sub
int
cmp
jbe
iret
mov
jge
pop
dec
je
mov
gs
sub
mov
jns
hlt
push
mov
mov
test
dec
xchg
pop
rcl
fdivr
dec
imul
pop
xchg
scas
dec
lock
jae
pop
push
into
je
and
cld
fadd
mov
and
in
pop
ja
repz
inc
pop
movs
fimul
mov
adc
ins
push
lods
jmp
dec
mov
push
sbb
and
cmp
(bad)
nop
ins
xchg
in
sub
pushf
jl
stos
mov
pop
int3
jp
fwait
rcr
xor
adc
mov
sub
repz
and
xor
cdq
out
push
mov
xor
and
sub
imul
popf
mov
lea
int3
sub
mov
je
dec
icebp
pop
shl
adc
jne
adc
or
loop
jno
ins
mov
ss
loope
rep
fwait
int
retf
stos
sbb
stc
dec
cmps
add
call
icebp
jg
dec
out
stos
mov
sahf
push
aad
pusha
cmp
retf
ret
xchg
dec
fprem1
not
mov
pusha
jne
add
xlat
pop
out
pop
enter
stc
pop
jp
sbb
imul
aam
push
xchg
rol
mov
jae
test
pop
adc
in
mov
loope
add
jle
and
sub
add
(bad)
in
pop
sahf
out
add
push
aad
int3
movs
stos
scas
xor
or
(bad)
scas
jbe
in
adc
int3
rcl
in
mov
cld
and
rcr
scas
add
repz
mov
cmp
mov
jmp
and
dec
pop
sub
out
and
xchg
mov
cmp
iret
outs
push
cs
outs
ret
adc
push
sbb
jmp
mov
and
aam
jmp
jnp
inc
adc
icebp
test
sub
(bad)
or
dec
retf
stos
jp
jno
cmp
in
jb
fdivrp
nop
lock
daa
pop
lock
loop
icebp
sub
sbb
and
jl
jg
enter
cs
mov
out
sub
in
push
lds
and
sbb
push
pop
cmp
outs
add
or
adc
mov
inc
mov
mov
mov
lahf
xchg
adc
jae
ds
loope
dec
pushf
fisub
pop
sbb
ds
fisubr
inc
or
(bad)
(bad)
aam
xor
mov
inc
mov
inc
loopne
jp
push
lds
ss
repz
(bad)
pop
jge
add
push
sbb
pop
imul
stos
push
mov
mov
jae
ja
mov
repz
mov
and
pop
int3
jl
fcom
es
cmc
(bad)
sbb
lahf
and
inc
ins
or
(bad)
adc
and
push
pop
or
ja
pop
out
call
movs
dec
mov
call
pop
mov
pop
cmps
jmp
xchg
cmp
mov
int3
xor
cmp
out
aas
jg
adc
xchg
dec
and
mov
adc
sbb
sub
adc
dec
xchg
les
mov
cld
or
add
out
xor
jmp
cmp
mov
push
enter
mov
dec
cmp
cmps
add
addr16
dec
mov
cmps
mov
or
sbb
test
jg
imul
jne
jnp
scas
(bad)
leave
mov
mov
sbb
pop
call
and
or
in
test
ret
mov
xor
inc
push
nop
aam
(bad)
mov
jno
(bad)
fsubr
jns
pop
stc
and
vmread
popa
cmp
mov
mov
sub
mov
shl
scas
sub
shl
out
in
jae
das
cmc
aad
push
dec
repz
ins
dec
xor
fwait
mov
push
sbb
push
clc
shr
test
pop
mov
cmp
push
stos
xor
icebp
add
lahf
(bad)
pop
cmc
mov
sub
push
mov
xchg
cmps
or
pusha
or
or
jno
ss
call
jmp
out
enter
inc
inc
repnz
stos
add
jg
(bad)
icebp
mov
clc
lods
pop
xor
push
pusha
(bad)
hlt
nop
dec
loope
push
mov
and
pop
lods
repnz
pop
out
sub
push
push
cmp
jp
mov
(bad)
aad
sbb
sub
mov
cmp
test
popf
push
sub
retf
outs
cmp
xchg
adc
loop
push
ret
in
lods
out
or
call
and
sahf
fbstp
iret
jne
shl
fs
adc
clc
ret
es
in
xchg
aaa
sub
xchg
ss
cwde
or
xchg
mov
mov
enter
adc
cwde
mov
jnp
jae
repnz
sub
adc
les
rol
push
stc
xor
ret
(bad)
leave
icebp
sbb
rol
arpl
lods
iret
sbb
lea
fild
pop
scas
and
mov
pushf
cmp
xchg
dec
retf
push
lods
in
inc
in
test
fmul
xor
xchg
dec
pop
stc
daa
dec
imul
xchg
add
scas
lods
cmp
les
scas
aas
xchg
pop
out
adc
xchg
test
fadd
xor
(bad)
test
push
adc
sahf
mov
cs
loopne
test
and
movs
sub
stc
inc
mov
mov
inc
daa
imul
arpl
(bad)
mov
loop
cmps
pop
xor
mov
aaa
and
add
ret
retf
pop
jge
push
prefetchwt1
(bad)
shl
jmp
das
ja
pop
mov
pop
data16
gs
jno
ins
icebp
arpl
sub
fisttp
fidiv
movs
jp
out
into
scas
test
pop
popa
xor
stos
sar
dec
pop
fadd
jmp
icebp
push
es
pop
xchg
clc
xchg
movhlps
mov
mov
push
aad
(bad)
ja
addr16
dec
fdiv
or
xlat
push
sub
mov
push
aad
pop
inc
out
aaa
jmp
dec
add
sbb
sahf
test
add
sub
push
in
fwait
dec
and
lds
inc
add
sar
arpl
jb
mov
loope
push
adc
push
sub
call
repz
(bad)
cli
inc
lods
add
push
sbb
and
or
leave
add
jg
xchg
test
cmp
jmp
mov
mov
or
adc
jp
add
mov
add
pop
fisub
retf
loop
jp
jmp
mov
mov
stos
push
outs
lds
mov
sbb
jle
imul
pop
jmp
mov
inc
jmp
movs
clc
fstp
pop
or
inc
add
call
jecxz
and
in
mov
out
fwait
sub
add
std
in
mov
test
in
shl
daa
sub
mov
xchg
inc
out
sub
sahf
shl
cmp
popa
jge
jge
lock
ret
cmp
int
(bad)
cmp
cmp
(bad)
rcl
inc
sub
or
inc
pop
sbb
es
fmulp
fcom
push
in
ja
aaa
push
mov
pop
clc
lea
(bad)
enter
enter
popf
push
jb
mov
ficom
sbb
imul
adc
sbb
ins
push
mov
and
lea
imul
call
in
inc
sub
cmps
mov
pop
xor
jg
add
aad
sbb
inc
outs
mov
mov
inc
je
push
rol
or
and
dec
sar
stc
cmp
sub
mov
mov
retf
dec
fld
jmp
iret
adc
mov
cmp
xor
xor
je
jne
xor
pushf
dec
popf
test
push
shl
int3
shl
xor
pop
dec
sbb
mov
add
mov
jl
push
add
cmp
or
out
inc
cvtps2pd
inc
sar
adc
ja
xchg
scas
nop
sbb
outs
xchg
and
add
dec
fwait
push
hlt
outs
xchg
jp
jns
sbb
out
scas
neg
loop
inc
sbb
in
sub
cli
std
mov
mov
jmp
jge
mov
jns
inc
fcom
xchg
sub
pop
sub
pop
adc
add
cli
scas
mov
inc
cmovns
hlt
sbb
popf
fdiv
jo
push
xchg
fiadd
out
push
add
in
xor
dec
inc
cmp
sub
ja
cwde
mov
retf
sar
inc
ror
xlat
lds
mov
pop
sbb
adc
cmp
enter
arpl
dec
mov
jno
outs
push
in
and
add
mov
pusha
popa
test
jbe
inc
and
std
cmp
shl
jg
je
leave
clc
loope
pushf
leave
into
mov
es
push
addr16
jb
sbb
neg
aad
rcl
idiv
sti
add
cmps
(bad)
mov
xchg
xchg
dec
lahf
sti
outs
jl
mov
fwait
pop
jmp
lods
or
push
popa
adc
fidiv
or
push
lahf
scas
std
gs
cli
jb
mov
lock
xchg
fcmovne
out
cmp
jbe
movs
mov
int
pop
and
ss
mov
pop
sbb
xor
add
mov
sub
dec
(bad)
retf
xchg
xchg
xor
adc
sbb
repz
xor
aam
sub
lea
pop
jmp
das
aam
mov
addr16
adc
shl
mov
inc
push
sar
cmp
call
mov
(bad)
sti
jge
push
mov
in
jno
pop
ss
inc
aam
arpl
and
push
fwait
adc
jnp
dec
push
or
fwait
and
loop
xchg
mov
xchg
or
push
popf
dec
(bad)
movs
leave
cmp
stos
(bad)
mov
jl
mov
dec
add
cmp
add
mov
jecxz
sub
ficom
ins
lock
mov
cmp
loope
call
dec
pop
scas
mov
imul
push
sbb
jmp
movs
and
jbe
xlat
and
fwait
jnp
cmp
(bad)
dec
mov
aad
adc
inc
xor
dec
(bad)
mov
jl
ror
mov
push
shr
xor
cli
or
inc
mov
mov
fld
mov
and
enter
test
aad
aas
dec
(bad)
out
pop
mov
push
loop
mov
data16
mov
(bad)
sub
cmp
leave
xchg
rcl
rcl
rol
std
mov
xchg
in
jbe
mov
push
out
xchg
and
out
xor
fistp
out
fisub
dec
inc
cmp
adc
movs
inc
aam
and
xor
out
enter
mov
push
inc
bound
js
push
cmp
daa
ds
xor
lds
out
jecxz
push
adc
rcl
and
sub
repz
push
cld
mov
and
xchg
push
mov
mov
mov
cli
push
fwait
inc
or
out
retf
mov
inc
cmp
jmp
xadd
pop
rcl
pop
shl
dec
aaa
fs
pop
inc
sub
inc
jecxz
dec
add
out
pop
mov
push
rcl
inc
lock
push
inc
push
imul
and
out
fisttp
in
jno
in
aas
pop
pop
push
jmp
popa
shl
fld
jmp
mov
je
xchg
shl
sub
es
mov
lock
lods
fldcw
lock
daa
outs
movs
cmp
add
les
call
hlt
int3
data16
stc
mov
jo
dec
xor
pop
xchg
sbb
fdivr
xchg
fwait
xor
arpl
mov
cmp
das
push
aam
add
adc
mov
add
mov
fwait
pop
test
in
xchg
mov
pop
mov
xlat
and
scas
xchg
mov
adc
scas
sbb
sti
pusha
xchg
sbb
and
addr16
add
into
xlat
jmp
clc
fidiv
js
ins
or
xor
fist
fisttp
les
ret
call
das
push
and
icebp
inc
dec
icebp
fcom
dec
jmp
and
pop
arpl
das
and
ret
int3
loopne
clc
aas
pop
pop
or
jmp
jns
ret
fsubr
jne
xchg
xchg
add
push
jle
fsub
outs
call
fst
xor
out
pop
outs
push
(bad)
jp
or
test
jmp
sub
loop
paddb
jmp
jge
push
out
into
cmp
dec
adc
mov
push
mov
jg
jnp
xchg
dec
pop
popa
sub
add
pop
lods
cmp
inc
add
ret
push
add
clc
sub
out
ds
outs
xor
xlat
xchg
movs
or
pop
mov
or
add
adc
cmp
add
es
mov
das
sub
sbb
add
jecxz
sub
ja
cmp
dec
push
mov
cmp
enter
pop
pop
std
call
ficom
(bad)
xor
push
mov
(bad)
mov
imul
cld
sbb
mov
mov
mov
daa
xchg
scas
sub
add
jmp
bound
inc
mov
adc
movs
pusha
idiv
adc
cmp
push
nop
and
mov
mov
mov
in
mov
ficom
pusha
xor
rcr
test
ja
or
mov
(bad)
scas
repnz
(bad)
aad
mov
mov
add
call
jns
and
pop
and
(bad)
js
fstp
popf
jno
xor
dec
dec
aas
inc
sub
jecxz
mov
(bad)
cli
std
mov
or
add
xchg
sub
daa
dec
cmp
mov
mov
sbb
(bad)
xor
mov
dec
mov
daa
ss
hlt
dec
or
add
gs
dec
ret
jmp
call
sbb
(bad)
enter
sti
bound
test
or
dec
and
inc
mov
sub
jp
adc
aam
mov
(bad)
stos
mov
jno
outs
sbb
or
sub
pop
push
xchg
cmp
sub
stos
gs
popa
ss
test
fisub
jnp
nop
imul
sbb
std
pop
loope
ss
aad
enter
add
xor
sub
pop
sub
leave
inc
push
add
enter
add
std
stc
jno
push
jg
loope
xchg
pop
push
(bad)
sbb
xor
ret
jl
push
test
jmp
sub
pushf
dec
ret
jno
pop
pop
or
inc
test
(bad)
mul
cmp
jb
leave
sbb
push
movs
dec
adc
push
pop
cs
dec
mov
(bad)
js
jno
cmps
outs
jp
dec
call
push
xor
or
out
icebp
test
pop
bound
push
jg
dec
adc
(bad)
shl
jge
js
add
test
cwde
prefetch
cs
fsub
das
retf
(bad)
out
lahf
lods
xlat
popa
test
inc
adc
jnp
cmp
adc
nop
std
pop
xor
inc
jne
adc
inc
lods
in
mov
pop
mov
pop
test
jmp
and
fldcw
daa
fucomi
inc
les
pop
mov
leave
jle
aas
cmc
shr
and
jmp
ja
or
mov
je
out
jl
push
outs
cs
aaa
addr16
inc
test
ins
or
inc
nop
dec
and
lods
popa
sbb
repnz
fldenv
jmp
dec
xchg
xchg
dec
and
je
inc
rol
mov
ud1
xchg
mov
test
push
test
mov
pop
fcomi
dec
xchg
in
shl
sub
out
sbb
cmp
and
mov
mov
and
sub
loope
in
dec
rcr
mov
inc
das
and
mov
shl
lock
test
pop
cld
pop
into
scas
stc
jmp
mov
movs
sbb
and
adc
dec
push
sti
repz
mov
cmp
retf
push
add
bound
jecxz
jecxz
jge
data16
add
mov
jae
aas
jae
cld
lods
xchg
fdiv
(bad)
das
ins
mov
sub
dec
sbb
movs
pop
adc
jp
addr16
jns
adc
outs
jnp
(bad)
cmc
scas
dec
pusha
jge
mov
push
push
inc
icebp
cmps
mov
xchg
mov
pop
and
dec
adc
inc
rol
xor
icebp
cli
dec
pop
icebp
jle
cli
in
or
addr16
xor
push
xchg
retf
mov
sub
mov
shr
out
cmp
push
pop
cmps
push
mov
ss
inc
loopne
movs
cmp
test
sti
call
jae
pop
sti
mov
push
mov
stc
xlat
sub
ret
mov
adc
xchg
fsubr
call
push
xchg
mov
mov
mov
adc
nop
mov
xor
push
std
(bad)
mov
push
xlat
push
push
mov
(bad)
pop
cmp
or
lds
dec
add
jl
add
hlt
xchg
dec
or
push
push
inc
xor
jmp
inc
jecxz
xlat
sub
mov
hlt
or
test
data16
cmp
cmp
dec
mov
lea
in
inc
jecxz
stos
inc
test
xchg
and
test
loopne
jae
inc
pop
pusha
ror
sub
adc
inc
into
mov
cmp
jbe
out
adc
icebp
lods
xchg
fs
test
push
adc
push
dec
sti
pusha
hlt
sub
adc
mov
test
aaa
push
addr16
xor
pop
or
add
xchg
or
xchg
xchg
addr16
xor
sub
jnp
jmp
and
cmp
jo
cmp
jb
mov
fstp
pop
xor
jae
ror
push
aaa
pushf
in
or
push
xor
xchg
jne
pop
mov
in
and
aas
aam
push
sbb
pop
int3
cli
mov
fwait
les
aaa
aaa
mov
adc
add
dec
sbb
lahf
mov
cs
jae
daa
mov
sub
push
ss
xchg
in
fsub
lds
int
cli
jle
hlt
inc
sbb
push
jae
js
dec
sbb
pop
pop
lea
movs
leave
cmps
adc
sbb
inc
cmps
push
data16
adc
(bad)
push
push
clc
cwde
jl
dec
sbb
ds
push
push
pop
fld
jle
(bad)
lods
pop
push
jl
push
inc
fild
lahf
hlt
or
ret
dec
call
pop
ror
call
inc
nop
and
sub
sar
push
jae
ins
cld
add
shl
mov
cmp
xor
loope
cmp
fwait
push
push
jmp
push
or
or
cmp
aam
arpl
shl
cli
pop
mov
jno
fdiv
xchg
or
into
mov
in
scas
shl
pop
or
mov
mov
add
stos
shufps
xchg
shr
(bad)
call
mov
pop
mov
dec
sub
mov
push
nop
add
cmp
in
es
push
inc
fisub
aaa
cmp
lds
mov
add
call
js
mov
jmp
mov
(bad)
punpcklwd
dec
and
xchg
mov
adc
pop
xlat
add
pop
lahf
bound
adc
js
mov
mov
mov
sbb
rol
sbb
lahf
or
shl
in
pushf
(bad)
loope
ja
cmp
fs
add
xchg
jno
inc
es
stc
pusha
ja
xor
sbb
fsub
loop
sub
dec
fild
cmp
data16
cs
fst
mov
adc
mov
adc
mov
ins
or
inc
push
test
ret
jb
or
adc
pushf
bound
ja
das
stc
push
dec
sbb
and
mov
xor
cmp
(bad)
xchg
test
popf
je
loopne
fsub
xchg
std
mov
dec
sub
nop
aad
loopne
out
enter
call
or
pop
scas
xchg
fist
jmp
xchg
and
xchg
mov
mov
rcr
and
mov
push
push
jg
cmp
xor
js
sbb
inc
fcomip
mov
(bad)
pop
int
mov
das
retf
dec
push
cmp
jmp
mov
pop
dec
stos
push
aam
sub
js
cmps
mov
shl
mov
(bad)
mov
inc
mov
lods
mov
aam
inc
int3
mov
push
(bad)
and
inc
sub
sahf
mov
nop
arpl
pop
cmp
and
push
ret
xor
mov
(bad)
adc
cmp
cmp
cld
ret
fnsave
out
pop
lea
pop
ret
retf
das
sbb
xchg
add
rcl
adc
pop
cdq
inc
push
push
test
and
mov
movs
inc
inc
pop
pop
push
cs
test
and
mov
shl
lods
shr
pop
mov
popa
dec
adc
mov
xchg
mov
addr16
lahf
imul
or
rcl
out
pop
outs
or
pop
add
or
jmp
lock
add
ins
jno
cmps
and
les
icebp
mov
ret
xor
lahf
pop
or
inc
stos
sub
add
jmp
xor
add
adc
mov
ja
imul
rcr
ret
les
ja
cdq
nop
mov
mov
sbb
add
in
in
mov
in
add
test
push
dec
inc
aaa
and
and
push
les
nop
cwde
inc
jns
data16
pop
(bad)
xchg
jecxz
out
inc
cmp
mov
movs
(bad)
adc
stos
pushf
push
enter
jg
sbb
outs
(bad)
(bad)
fstp
jecxz
add
cmp
or
push
inc
pop
(bad)
and
dec
xchg
out
pushf
mov
call
movs
es
push
popa
jne
test
mov
cld
test
mul
or
xor
loopne
jne
out
mov
jl
pop
sub
fucomp
fld
dec
mov
sbb
xchg
and
ds
rcr
jle
pop
mov
or
sbb
lods
cmc
cld
(bad)
lahf
inc
xor
adc
xor
push
jge
add
pop
add
iret
and
xor
imul
outs
jge
sbb
jl
mov
clc
sub
(bad)
int
push
push
and
mov
call
cmp
out
jp
cmps
retf
inc
cmp
pop
mov
xor
shl
sbb
pop
pop
popa
or
inc
mov
or
and
inc
popa
mov
nop
sub
pop
test
int
loope
inc
adc
mov
jns
pop
push
daa
push
xor
add
inc
sub
in
jnp
push
rol
pop
nop
mov
mov
add
popf
push
cdq
sbb
pop
sti
xor
dec
(bad)
mov
mov
stos
xor
shl
sar
adc
sub
or
(bad)
mov
push
or
(bad)
out
gs
cmp
xlat
xchg
push
add
pop
aaa
adc
out
sub
mov
bound
mov
push
push
sub
mov
dec
aas
mov
repz
adc
inc
stos
repz
fdivr
popa
push
sbb
xchg
xlat
cld
pusha
push
dec
add
pop
jecxz
ror
outs
and
test
scas
adc
pop
sbb
jnp
mov
jle
pop
pop
mov
clc
out
cld
or
cmp
fisttp
call
sar
xor
jle
xchg
pop
mov
cmps
out
mov
clc
mov
xor
pushf
leave
and
int3
sbb
ret
(bad)
out
test
ret
or
vpackuswb
mov
das
(bad)
xor
enter
in
adc
scas
dec
mov
loope
aam
into
fld
jb
pop
ret
icebp
cld
inc
xchg
pop
(bad)
js
and
cli
xchg
jno
test
sub
pop
push
or
pusha
fwait
xchg
xchg
pop
inc
pop
jge
push
clc
add
adc
push
jbe
add
pushf
in
icebp
(bad)
jmp
enter
das
push
sbb
lock
mov
retf
push
jo
inc
mov
es
daa
xor
arpl
sub
iret
lea
push
inc
xor
and
mov
dec
jmp
dec
push
nop
push
dec
sub
cmp
sahf
out
cwde
mov
call
(bad)
test
pop
fucompp
arpl
cld
rcr
mov
xchg
pop
stos
ror
jne
outs
je
push
cmp
popa
sub
jbe
xor
jnp
and
jae
test
movlps
imul
sbb
cld
in
fdiv
sub
movs
out
mov
std
movs
iret
jmp
ss
jmp
test
jle
jbe
test
ins
fiadd
retf
lahf
adc
push
inc
push
xchg
dec
stos
mov
ss
dec
jnp
out
pop
adc
add
out
test
jno
das
and
fwait
jne
xchg
sub
pop
repz
ret
push
cmp
xchg
add
loop
hlt
sbb
push
push
es
and
xchg
das
and
aas
call
ret
pop
xchg
pop
pop
jo
mov
mov
outs
daa
mov
aad
out
push
outs
cs
mov
fs
out
sbb
xchg
jae
cmp
into
jmp
xchg
pop
jnp
add
sti
outs
jmp
pop
nop
push
sub
jecxz
out
xor
push
sub
cmp
and
inc
push
dec
mov
sbb
shl
sub
mov
pop
sbb
ror
in
sub
int
push
aam
inc
loope
add
cmp
cmc
(bad)
push
mov
jo
sub
dec
in
icebp
xchg
pop
fcomp
repnz
adc
mov
mov
std
jbe
pop
cmp
adc
in
pop
in
outs
jp
bnd
and
hlt
je
inc
xchg
imul
or
dec
xchg
jae
jp
iret
adc
jmp
inc
packsswb
leave
retf
loop
add
dec
sub
sbb
jle
mov
sbb
sbb
jle
sub
jnp
(bad)
cdq
add
ficom
ret
test
neg
in
repz
push
mov
out
inc
inc
pop
or
sbb
movs
mov
push
fbld
or
mov
mov
pop
jae
xchg
add
adc
mov
ja
test
mov
mov
or
pop
out
out
mov
mov
mov
sub
js
repz
(bad)
into
mov
push
adc
jge
push
mov
test
nop
sbb
aad
or
adc
and
push
adc
push
out
xchg
cs
es
xchg
sub
cmp
fwait
mov
push
push
ja
ss
push
push
xchg
jbe
mov
mov
lods
std
inc
retf
int3
leave
jg
pop
retf
in
jo
sahf
lods
in
xchg
inc
iret
addr16
cmp
push
push
jle
inc
fisttp
mov
movs
jne
xor
pop
in
xlat
cld
inc
pop
mov
xchg
jmp
sbb
mov
xchg
and
push
shr
retf
mov
and
aas
cmp
xor
mov
inc
cs
dec
mov
fcomp
sbb
lods
int3
vshufpd
aas
xor
pop
and
mov
call
jno
xchg
xchg
pop
push
ds
sbb
cdq
movs
pop
lea
xor
push
addps
movs
adc
inc
mov
ffree
mov
pop
lods
sbb
pop
cld
aas
xchg
mov
pop
dec
inc
inc
std
mov
test
stos
repnz
fdivr
in
lods
in
push
jg
cli
or
imul
xor
inc
leave
leave
ins
xchg
setnp
js
or
hlt
fwait
cmp
inc
mov
lds
mov
xchg
jle
movs
out
adc
out
mov
shr
fnstcw
mov
inc
and
xor
in
popf
push
push
arpl
retf
(bad)
cwde
sub
mov
ret
sbb
mov
pushf
or
jg
mov
stc
xor
pop
outs
dec
or
xor
loopne
jmp
xchg
shl
movs
cmp
pop
mov
loopne
lahf
and
xchg
in
add
dec
cld
das
and
mov
iret
in
xchg
dec
inc
mov
mov
and
(bad)
es
xchg
adc
dec
mov
js
retf
sub
movs
cdq
mov
shl
inc
xchg
mov
in
addr16
sti
mov
or
pop
lods
add
inc
shl
inc
ins
(bad)
cmp
ins
shl
lahf
pop
pop
int
sbb
jbe
and
sub
cmp
fldcw
(bad)
dec
sub
sbb
xor
jne
and
in
mov
jns
call
in
xor
cli
retf
lods
push
adc
(bad)
cli
ror
xchg
push
mov
gs
adc
pusha
sub
cmc
adc
mov
inc
and
test
inc
inc
or
dec
das
pop
mov
and
push
dec
ja
movs
enter
xchg
addr16
dec
retf
adc
ficom
loopne
mov
mov
lods
in
aad
pop
in
dec
shl
popf
cdq
sbb
mov
clc
adc
push
jg
aas
lea
push
dec
hlt
pop
sbb
inc
push
cli
add
jg
cmc
jmp
retf
mov
pop
cmp
add
popa
mov
stc
sub
push
ror
dec
xchg
jae
cs
mov
in
fcmovu
nop
int3
iret
sub
jmp
dec
xchg
int3
aad
push
cs
mov
ret
inc
jl
mov
jl
push
push
adc
adc
sbb
test
push
mov
in
enter
cmp
into
ret
jmp
push
cmp
aas
hlt
jae
fisubr
cmp
add
stos
(bad)
(bad)
sqrtps
add
push
jno
addr16
je
xor
pop
sub
push
mov
xor
cmp
icebp
stc
(bad)
fwait
inc
inc
sub
cld
mov
leave
mov
push
cmp
mov
stos
mov
mov
leave
push
mov
xchg
pop
stc
in
sbb
jl
aam
push
cs
repz
into
cmp
and
sbb
fild
push
xchg
dec
jecxz
int3
xchg
adc
into
ins
fsubr
xchg
push
inc
call
mov
out
mov
mov
xor
aaa
sub
mov
push
loop
retf
ja
fimul
ja
shl
xchg
push
outs
dec
inc
add
push
xor
cmp
ins
(bad)
mov
mov
mov
adc
pop
sbb
push
addr16
mov
push
push
adc
(bad)
out
mov
into
lods
mov
xchg
fidiv
pop
xchg
push
inc
mov
retf
popf
enter
xchg
aam
push
imul
fdivr
and
out
add
or
or
daa
jne
pop
jns
repnz
aam
movs
out
or
dec
pop
mov
or
jl
xlat
hlt
call
mov
and
sbb
add
cmps
push
into
add
cmps
sti
in
out
movs
jbe
sub
pusha
dec
rol
cmp
ds
dec
xor
in
jmp
movs
push
jle
lds
not
sbb
imul
ja
rol
aam
in
mov
hlt
mov
outs
aas
imul
or
sar
loopne
test
sbb
in
mov
(bad)
out
jg
shl
jmp
pop
imul
out
das
arpl
jbe
int3
and
ins
(bad)
ins
xor
ins
clc
xor
sbb
add
adc
pop
daa
jmp
xchg
int3
cmps
jmp
and
in
dec
mov
mov
icebp
add
out
jns
pusha
mov
fwait
sub
xor
push
dec
xor
(bad)
test
mov
push
lods
cwde
or
pop
movs
cmp
add
retf
cli
add
dec
hlt
dec
jmp
repz
leave
mov
jbe
out
inc
inc
adc
push
ret
push
pop
mov
jns
sub
xchg
jnp
inc
cmps
inc
retf
shl
jl
mov
jnp
push
ss
sbb
mov
test
cld
or
int3
jmp
daa
xchg
fsub
xor
pop
sbb
out
jp
scas
mov
sub
adc
cmp
cld
js
addr16
cmp
imul
int3
mov
inc
xchg
xor
ds
shr
outs
lahf
cs
jns
or
fs
in
mov
fdiv
call
xchg
addr16
mov
outs
mov
mov
idiv
xchg
xchg
sbb
fs
cli
mov
jmp
out
clc
pop
pop
cs
adc
in
mov
jmp
inc
vandnpd
dec
jmp
setns
and
cmc
stos
test
call
retf
inc
lds
stc
sub
inc
push
rol
adc
int
imul
add
sub
cmps
add
enter
pop
sub
xchg
xchg
aad
xchg
addr16
cld
lahf
sub
or
ror
mov
mov
outs
pop
jmp
inc
sub
dec
fist
sub
jnp
mov
mov
jmp
mov
cwde
sahf
fstp
or
xor
ror
inc
adc
pop
sub
ja
dec
aam
out
outs
sbb
in
sbb
ins
cwde
jmp
jge
jmp
push
jnp
bnd
lods
and
jmp
push
inc
inc
xchg
mov
push
mov
xlat
fldcw
dec
jecxz
retf
mov
aaa
fsubr
pop
inc
jp
jecxz
ret
test
mov
je
fild
rcl
(bad)
cmp
mov
adc
outs
scas
mov
adc
xchg
sub
cdq
lods
mov
pushf
dec
sbb
push
sbb
dec
ret
mov
retf
adc
mov
ins
mov
mov
cmp
and
aas
push
dec
and
xor
cld
outs
inc
dec
jne
inc
(bad)
mov
cmps
xor
add
inc
pop
mov
hlt
fwait
sub
pop
retf
jecxz
inc
stos
add
pop
mov
push
pop
js
dec
push
or
in
adc
xchg
mov
jno
dec
les
add
pop
mov
cmp
dec
pop
lock
mov
dec
jecxz
add
cmps
jae
mov
cs
out
jo
cld
xor
push
jo
sbb
mov
adc
pop
cmp
xor
xor
pop
inc
fxam
mov
stc
mov
movs
out
(bad)
scas
mov
retf
adc
add
cmps
cmp
mov
stos
(bad)
mov
pop
mov
std
inc
in
repnz
mov
mov
jge
or
mov
mov
sub
imul
hlt
mov
push
cmp
push
mov
jle
dec
and
jle
inc
inc
(bad)
ror
rcr
cmp
loopne
push
sbb
mov
shl
mov
xchg
pop
div
pop
sbb
adc
mov
add
inc
fs
cmps
shl
mov
stos
xchg
push
mov
mov
pop
lahf
mov
pop
inc
movntps
or
sbb
out
cmp
les
cwde
add
dec
pop
das
leave
popa
cs
dec
call
sbb
cli
inc
fdivr
retf
push
pop
cmp
stos
in
mov
pusha
xchg
push
inc
ins
fwait
in
(bad)
loopne
data16
dec
add
out
mov
push
cmps
inc
in
xchg
xchg
popf
mov
sub
mov
jg
leave
ds
mov
sbb
mov
jmp
pop
ror
fs
cmps
lods
shl
adc
add
push
add
outs
or
lahf
aad
lods
repz
push
xor
addr16
test
jne
jmp
pop
int
jg
call
mov
adc
jmp
mov
movs
retf
rcr
mov
push
adc
ss
daa
les
sub
and
push
scas
mov
sbb
movs
jo
xor
and
sar
ret
push
xchg
adc
mov
pop
stos
add
jb
movs
adc
fwait
jae
out
in
iret
mov
outs
loope
sar
and
jl
ficomp
and
xor
adc
ficomp
xchg
sub
arpl
popf
mov
hlt
cdq
or
repnz
sbb
push
stc
scas
xlat
inc
retf
out
mov
sub
movs
jns
xchg
ftst
push
scas
mov
popf
out
push
fisttp
add
inc
adc
loopne
(bad)
adc
daa
ficom
cwde
mov
mov
xchg
mov
adc
and
xchg
dec
pop
aas
or
pop
fmul
add
in
int
xor
imul
push
inc
sbb
mov
push
and
das
fstp
rcr
inc
lds
imul
dec
or
dec
fmul
xor
popf
inc
test
loopne
inc
xchg
sti
sbb
in
push
aad
sti
mov
stc
push
push
pushf
mov
sbb
xchg
jno
pop
sar
aas
pusha
jb
add
sbb
push
mov
xchg
or
xor
sub
xchg
pushf
cmp
sub
xchg
(bad)
ds
inc
sbb
iret
jnp
pop
adc
(bad)
push
sub
mov
dec
imul
cmp
inc
add
xor
js
jmp
call
or
xor
div
loopne
mov
pop
pop
dec
dec
mov
loopne
leave
aaa
xor
jb
push
push
mov
jnp
and
js
enter
mov
fistp
idiv
rcl
hlt
pop
cwde
pop
jecxz
inc
aaa
movs
jb
inc
xchg
cmp
adc
aad
sbb
push
fdiv
mov
push
jbe
xchg
imul
or
aam
jne
pop
mov
pop
(bad)
mov
cmps
stc
fist
ret
loopne
retf
dec
mov
fcomp
cmp
mov
fdivr
lock
cmps
test
loopne
pop
cmp
and
xchg
add
cwde
in
xor
sub
scas
popf
sub
adc
movs
push
xchg
mov
inc
sub
add
or
sbb
or
push
popf
add
clc
(bad)
nop
cmc
add
(bad)
ret
(bad)
pop
sub
cmp
xchg
jne
mov
(bad)
cld
ret
mov
jmp
mov
fsubp
iret
pushf
mov
out
push
inc
pop
retf
cmp
cmp
ss
lahf
add
inc
mov
push
dec
pop
lds
adc
adc
aam
outs
push
push
xchg
or
jo
push
or
cmp
add
(bad)
mov
ret
in
loope
(bad)
in
jns
idiv
cmp
test
and
xchg
push
jmp
push
cmp
dec
xor
les
outs
adc
repnz
push
call
xlat
cmp
sbb
(bad)
cld
pop
test
gs
repz
scas
add
inc
test
jmp
mov
leave
ins
push
rol
inc
ja
mov
add
add
jge
push
mov
sub
jae
int
enter
sti
test
nop
lahf
xchg
inc
gs
stos
stc
push
loope
scas
push
mov
je
retf
pop
int3
lahf
adc
mov
xchg
(bad)
(bad)
das
aam
je
fist
xor
mov
clc
arpl
fld
mov
(bad)
(bad)
push
mov
xchg
bound
(bad)
pop
mov
sub
mov
cmp
loope
mov
fstp
out
push
jmp
dec
sahf
mov
xchg
sar
jg
or
ds
out
jnp
inc
cmps
mov
aas
push
adc
xor
xchg
pop
sbb
sbb
pop
jmp
sbb
test
add
rcl
rol
inc
leave
add
aaa
inc
int3
jg
or
ds
or
cli
loop
and
iret
xchg
ret
sar
vcomisd
into
dec
(bad)
jmp
push
jae
dec
inc
out
test
push
or
push
xor
pusha
inc
xor
stc
pop
fldenv
add
outs
dec
mov
outs
lahf
into
repnz
movs
sahf
adc
pop
and
dec
aad
add
into
mov
and
jb
and
xor
jmp
jmp
mov
neg
retf
rol
popf
jae
jle
aas
adc
inc
mov
js
rol
cdq
(bad)
push
mov
shr
mov
mov
mov
pop
inc
jl
xchg
cmp
lods
push
add
je
rcl
or
jl
sbb
sub
out
dec
hlt
pop
nop
push
fsub
dec
push
jle
int3
pop
out
or
repnz
sub
aam
jmp
mov
mov
ss
inc
xor
pop
add
fdiv
mov
rcr
mov
or
pop
icebp
es
xor
(bad)
loopne
addr16
cmp
test
cdq
sbb
test
imul
add
push
in
popa
aad
repz
fwait
push
adc
push
xlat
mov
mov
movs
and
push
xor
mov
jae
bound
aam
mov
mov
add
test
jmp
ret
cs
jne
push
xor
fldcw
(bad)
test
sbb
cld
fcomi
cmp
add
xchg
mov
add
fadd
add
iret
les
mul
push
xchg
movs
pop
movs
pop
mov
push
repz
mov
pop
loope
jnp
bound
fsubr
mov
enter
nop
and
dec
ins
arpl
cdq
sub
add
dec
(bad)
cmp
mov
mov
and
dec
scas
adc
fcom
loopne
out
ror
or
mov
test
ror
cmps
scas
clc
sub
cmp
in
dec
out
ficom
mov
mov
(bad)
jge
mov
cmp
div
sahf
aam
mov
stos
jecxz
pop
push
out
mov
mov
movs
sbb
push
lahf
popf
mov
pop
test
cmp
(bad)
ds
jmp
or
and
and
arpl
sub
jmp
int
mov
inc
jne
lahf
shl
loop
or
in
in
pop
jp
not
clc
add
test
in
push
push
iret
pop
xchg
retf
add
sub
jge
adc
push
xchg
jb
and
test
bound
push
sar
out
mov
leave
xor
test
pop
fdivr
cmp
xor
mov
push
bound
cmp
or
aad
sub
std
lock
and
xlat
test
sbb
retf
mov
adc
fistp
js
call
sbb
into
sahf
cwde
sub
xchg
sbb
pop
cmc
not
add
jo
mov
mov
data16
jle
dec
jecxz
out
and
cmp
adc
shr
dec
dec
mov
daa
adc
mov
dec
lods
inc
pushf
inc
mov
lock
cs
pop
inc
jl
pop
adc
adc
js
xor
mov
or
sbb
inc
mov
add
les
test
scas
std
icebp
dec
(bad)
cs
mov
pop
sbb
cmp
or
mov
cli
jo
retf
jns
mov
nop
jmp
nop
xlat
jp
push
push
int3
xor
nop
push
jmp
add
jo
sbb
add
adc
mov
arpl
clc
iret
jg
cmc
loopne
mov
daa
int
fild
dec
or
push
mov
popf
push
cmp
inc
jne
push
mov
daa
mov
out
or
jne
jecxz
fwait
cli
cld
ror
ds
sub
out
mov
pop
cli
xor
mov
add
(bad)
push
leave
ret
dec
scas
cmp
movs
inc
mov
xor
fwait
gs
mov
sbb
out
cmp
sbb
xor
inc
mov
mov
outs
jg
jge
mov
push
retf
xlat
mov
lds
mov
(bad)
dec
mov
loope
inc
retf
aas
repz
mov
cmps
pop
cmp
or
(bad)
stos
inc
xor
cwde
jo
pop
push
cli
clc
jbe
repnz
or
stos
push
or
mov
aam
cld
movs
dec
mov
jp
push
fld
mov
in
xchg
pop
pop
mov
repnz
lods
rcl
bound
inc
das
push
sbb
fnstenv
fst
lods
sub
fcmovne
adc
or
adc
popf
fldcw
xor
rcr
rcl
retf
rcl
(bad)
jns
mov
dec
lahf
test
sub
jne
mov
or
ficom
xor
sub
sub
sub
inc
mov
jp
mov
ss
push
jbe
pop
pop
div
sbb
movs
push
sub
ret
xor
sahf
dec
cmp
adc
lahf
cmps
and
or
(bad)
js
outs
cmp
xor
adc
or
fwait
and
jno
bound
or
pop
lds
ja
hlt
mov
jno
add
dec
mov
inc
adc
out
adc
stc
push
fmulp
sub
jg
inc
clc
push
xchg
iret
add
test
fwait
push
ret
xchg
cmps
xchg
ret
sub
repnz
mov
icebp
(bad)
pop
cmp
jns
(bad)
int
and
mov
dec
inc
jnp
das
sbb
call
test
push
fwait
pop
inc
mov
mov
test
idiv
mov
call
adc
push
jo
ror
stc
fnsave
mov
int
push
(bad)
das
dec
cpuid
rcr
ins
sbb
mov
and
mov
adc
out
push
call
(bad)
mov
jnp
mov
dec
ds
cmp
and
or
nop
or
lea
stos
cmp
push
mov
push
dec
cmc
xor
jle
daa
sub
or
xchg
ret
sbb
cmp
(bad)
loopne
mov
mov
pusha
or
pop
mov
ins
(bad)
xor
mov
push
sbb
mov
dec
cmc
add
lock
mov
jg
sti
sub
sbb
lds
out
or
push
xchg
in
idiv
jl
loope
and
cs
dec
xlat
inc
mov
jnp
into
inc
retf
leave
sub
xor
pushf
retf
mov
adc
mov
rcr
push
and
repnz
or
sar
ror
mov
in
push
shl
(bad)
sub
in
in
cmp
adc
std
xor
inc
test
sub
cmp
mov
dec
cwde
inc
sub
mov
call
popf
(bad)
lahf
mov
push
xchg
add
push
xchg
xchg
jne
jle
sbb
push
push
std
jmp
daa
addr16
mov
or
in
jo
bound
xor
mov
(bad)
in
sbb
cmps
mul
sbb
jo
dec
jg
les
push
and
fnstenv
mov
sbb
(bad)
mov
pop
ds
in
dec
clc
cmp
xchg
retf
inc
mov
in
mov
push
pop
in
xor
fucomip
inc
loopne
add
pop
cmp
jge
(bad)
icebp
jecxz
push
jbe
test
and
add
aas
cmp
push
jl
adc
outs
inc
test
or
jp
ret
test
nop
out
and
jne
inc
js
xchg
fdecstp
arpl
enter
in
outs
jmp
add
fcom
mov
nop
jmp
scas
rcr
fdivr
test
mov
or
mov
sar
enter
nop
es
mov
mov
out
jp
adc
and
xchg
mov
pop
jecxz
pop
popa
add
push
jno
xchg
into
dec
sti
imul
or
jmp
leave
cld
inc
vsubps
xchg
cli
ficom
sbb
sub
in
or
ss
in
lock
sar
enter
scas
ret
jp
dec
fiadd
add
mov
mov
mov
hlt
loop
aaa
pop
sbb
inc
xchg
inc
mov
ror
clc
bound
jl
mov
in
push
sbb
das
cs
dec
cmps
mov
pop
rep
(bad)
mov
pop
pop
push
or
mov
aaa
xor
xchg
retf
rol
cdq
push
add
(bad)
(bad)
xor
retf
int3
mov
cmps
push
cmp
mov
call
sbb
nop
stos
jecxz
mov
sbb
pop
push
enter
push
addr16
scas
or
(bad)
adc
xchg
mul
jno
cmps
sbb
sbb
xor
adc
dec
retf
pusha
retf
xchg
mov
dec
mov
adc
add
pop
push
or
push
sbb
xchg
pop
call
sub
pusha
and
aas
xchg
scas
and
sub
mov
ficomp
or
push
mov
fmul
cmp
std
cmp
mov
cmp
adc
sbb
cmc
dec
mov
ja
xor
outs
push
jmp
inc
movs
and
lods
pop
or
ficom
jbe
mov
jmp
outs
jno
dec
(bad)
rcr
mov
dec
arpl
and
pop
popf
sbb
jne
inc
mov
out
adc
cmp
pusha
lods
inc
in
cld
sub
cmp
mov
pop
xor
xor
stc
dec
js
loopne
add
jne
push
cld
lods
(bad)
cdq
xor
stos
ins
jecxz
lahf
inc
fistp
outs
(bad)
int
call
xor
ja
in
gs
iret
enter
int3
jmp
fsubr
jo
cdq
push
loope
xor
nop
aam
mov
add
ret
jb
pop
dec
sti
stc
ds
cdq
pop
or
imul
rol
pop
fist
adc
mov
cwde
push
push
cwde
mov
mov
lds
stos
jae
xchg
or
popf
in
jle
sub
call
push
sub
adc
xchg
xor
inc
mov
shl
enter
jecxz
pop
pushf
fcom
sar
push
das
aam
repnz
inc
dec
mov
xor
cmps
jmp
inc
clc
fbld
jae
and
adc
test
xchg
int
loop
pop
cmc
ins
xor
inc
and
sti
ret
vpinsrw
inc
mov
call
movs
sub
pop
pop
dec
dec
nop
pop
bound
(bad)
pop
sub
xchg
and
jg
cmps
rol
add
jnp
inc
pusha
pop
cli
xchg
les
daa
adc
fisttp
out
dec
popf
and
mov
cs
scas
sub
dec
sbb
add
push
cmps
inc
fist
dec
clc
mov
daa
lea
fld
ja
xor
pop
and
sbb
xchg
loopne
add
leave
inc
push
mov
jnp
dec
sub
pop
pop
inc
dec
retf
adc
mov
repnz
jg
cdq
(bad)
mov
sbb
ret
outs
sbb
(bad)
stos
push
pop
pusha
pop
out
cmp
mov
push
retf
mov
call
call
daa
push
ja
lea
gs
call
add
pushf
das
push
xchg
in
sbb
or
cmp
mov
push
fwait
mov
iret
and
ret
or
mov
sbb
jno
push
out
popa
jmp
ret
pop
xchg
icebp
sbb
mov
mov
or
pop
and
or
(bad)
mov
jbe
jmp
mov
sub
push
je
arpl
jecxz
mov
ja
mov
inc
xchg
test
aam
push
sbb
enter
(bad)
add
and
sub
mov
jne
lods
xchg
call
mov
ins
pop
pushf
push
dec
call
rcl
daa
int3
and
mov
cli
push
xchg
inc
pushf
pop
jp
sbb
out
xlat
inc
shl
sub
xor
inc
stos
lods
movs
pop
bound
mov
mov
and
popa
jecxz
push
icebp
repz
xor
sub
pop
addr16
aad
daa
dec
or
test
imul
addr16
das
in
cli
xor
sub
dec
xchg
sub
bound
cli
outs
xchg
imul
or
inc
in
cmps
and
adc
adc
and
imul
aam
adc
sbb
pop
inc
outs
mov
xchg
in
xchg
call
dec
in
jns
inc
mov
dec
push
sub
cmc
mov
inc
std
cwde
pop
jne
mov
aaa
xchg
pop
arpl
add
lea
icebp
sbb
xchg
fdiv
sbb
mov
popf
enter
arpl
add
xor
jo
outs
jge
mov
js
rcl
cmp
scas
jecxz
xor
xchg
push
int3
dec
out
adc
sbb
cmps
dec
inc
dec
lea
cwde
movs
mov
pop
icebp
jae
adc
adc
retf
mov
mov
mov
scas
(bad)
lds
jg
retf
adc
pop
lock
pop
stc
cmps
dec
movs
add
(bad)
cmp
cld
jmp
mov
adc
jns
adc
iret
hlt
jp
sbb
adc
cmp
mov
cmps
xor
shl
jmp
mov
test
(bad)
mov
or
sbb
add
and
jmp
adc
es
mov
(bad)
ret
leave
repz
lds
inc
imul
mov
pop
sub
cmps
add
pop
and
div
jns
cmp
xor
je
iret
mov
int
repnz
or
imul
dec
cmc
int
int
dec
and
sahf
dec
test
inc
ficom
gs
enter
mov
lods
add
adc
rcl
xchg
fild
push
fnstsw
js
fistp
add
xchg
(bad)
push
sbb
stc
aaa
icebp
das
or
call
jb
movs
pop
sahf
pop
lods
js
sbb
ret
movs
push
jo
xchg
movs
inc
sahf
jo
mov
mov
sbb
inc
ret
adc
xchg
push
inc
pop
inc
sub
or
mov
sbb
cmp
les
jnp
inc
in
cmps
inc
in
je
retf
cmp
jle
leave
jo
add
std
and
stos
retf
fisttp
cmp
mov
mov
add
stos
or
call
outs
cwde
sub
mov
push
push
mov
ret
repz
clc
dec
xchg
lds
dec
jl
push
push
mov
xor
xor
ror
cmp
bound
scas
push
cmc
xchg
mov
and
out
jno
adc
sar
lods
je
ins
push
cmp
push
and
inc
cmc
jmp
jmp
(bad)
sbb
(bad)
mov
shl
jp
push
(bad)
jmp
ja
push
jle
inc
dec
je
and
and
xor
shl
(bad)
or
pop
(bad)
cmp
(bad)
jmp
mov
shl
icebp
sti
(bad)
stc
test
push
call
js
cmp
push
xor
xor
std
shl
ror
pop
aam
mov
int3
and
jp
xlat
or
pusha
ins
and
imul
clts
sbb
loop
jmp
shl
cmps
mov
repnz
push
sbb
scas
rcr
cmp
inc
jo
sub
sbb
adc
in
fst
movs
adc
xchg
pop
in
cli
(bad)
push
jnp
aad
shr
lock
dec
add
bound
inc
push
and
add
xchg
movs
ret
(bad)
out
in
ds
lods
arpl
movs
inc
mov
mov
push
dec
dec
cmp
(bad)
and
(bad)
dec
push
inc
cmp
sbb
ret
mov
dec
xor
in
(bad)
push
popf
sbb
dec
pusha
pusha
mov
repnz
mov
xchg
and
adc
aaa
icebp
std
jns
(bad)
xchg
out
cmc
stos
out
cld
add
(bad)
out
test
add
mov
pop
mov
mov
fisubr
pop
mov
test
sar
movs
jae
add
add
jae
mov
add
enter
je
ds
leave
pop
in
lea
into
cmps
in
into
(bad)
or
imul
movs
or
int
add
push
inc
(bad)
mov
pop
retf
adc
(bad)
loop
sar
xor
mul
imul
cmp
(bad)
lahf
jmp
pop
push
inc
inc
sub
ret
push
(bad)
lock
pop
adc
pop
xchg
inc
sbb
xchg
mov
ret
std
dec
xchg
pop
dec
neg
iret
pop
and
add
pop
mov
or
icebp
int
out
je
les
and
mov
lahf
push
inc
mov
das
out
inc
call
fnsave
test
adc
call
dec
cmp
cmp
or
out
daa
push
inc
xchg
pushf
jmp
(bad)
rol
sub
xor
dec
outs
call
jnp
sub
xchg
pop
cld
movs
jno
addr16
and
sub
aaa
pop
into
sar
add
push
and
cmp
cmp
adc
jmp
icebp
mov
cmps
ror
and
out
pushf
add
inc
lds
fisub
xor
daa
mov
(bad)
push
stos
jmp
in
les
jns
test
cdq
das
and
jp
int3
sub
mov
lahf
push
add
mov
dec
cmp
jae
and
mov
mov
dec
sbb
jb
ret
jae
mov
jge
jbe
cmps
cdq
(bad)
(bad)
pop
std
push
popf
imul
enter
jo
adc
mov
ins
mov
pop
mov
fcomp
adc
out
cmp
sbb
shr
mov
pusha
(bad)
mov
je
scas
and
arpl
sahf
retf
mov
mul
fdiv
xchg
iret
jmp
jmp
fwait
cmp
jecxz
mov
jp
outs
arpl
mov
push
rcr
mov
mov
sub
mov
popa
mov
call
aam
cmovb
xchg
add
xchg
jge
addr16
out
aaa
in
or
jno
cmp
in
push
push
xchg
imul
jg
gs
repnz
xchg
mov
sar
fs
xchg
out
push
ins
sahf
stos
repnz
arpl
outs
cli
sub
mov
mov
add
retf
je
in
dec
movs
jmp
retf
and
int
mov
scas
sahf
jg
popf
mov
(bad)
mov
fwait
mov
and
sti
cmp
in
push
and
adc
pop
int
dec
not
push
adc
mov
repz
pusha
std
sub
dec
repz
inc
xchg
mov
xchg
mov
pop
jmp
fmul
xchg
fstp
aad
cmp
fs
aam
lahf
retf
inc
cmp
nop
mov
jmp
call
clc
jb
ja
int3
pop
and
out
or
pop
dec
xchg
adc
movs
iret
mov
cmp
rcl
(bad)
mov
and
cld
shr
sub
(bad)
xchg
mov
inc
sub
inc
and
ja
aam
leave
sub
call
cmps
cmp
sub
arpl
leave
sbb
mov
cmp
pop
bound
jmp
adc
loop
push
into
or
jns
or
or
in
fs
pop
imul
or
pop
xchg
sub
jg
or
repz
mov
js
dec
jo
retf
add
sbb
ins
pop
add
fisub
sbb
movs
mov
sahf
pop
mov
lea
fidivr
mov
xchg
test
out
push
ins
xor
rcl
xor
cmps
test
arpl
adc
add
mov
aas
or
and
add
out
pusha
jl
aam
and
inc
add
xor
jecxz
test
cmp
nop
jne
jle
rol
hlt
and
push
mov
xchg
sub
jmp
ja
jmp
push
cwde
stos
sbb
les
add
sar
push
cmp
sub
lods
push
cwde
xor
enter
cmp
mov
sbb
mov
int3
cmp
sbb
clc
int
ds
pop
dec
ror
jns
aad
data16
mov
jnp
xor
mov
xor
add
repz
je
shr
(bad)
out
xor
and
jle
add
out
aad
cmp
sub
xor
fsub
push
mov
loopne
movs
popa
push
mov
inc
dec
mov
sub
lahf
sub
push
pop
mov
repnz
dec
adc
pop
outs
push
dec
mov
loop
inc
push
(bad)
add
mov
sbb
jmp
adc
test
int
jnp
in
jnp
cld
addr16
leave
mov
enter
dec
hlt
int
ret
sbb
outs
jmp
xor
or
or
inc
push
test
gs
sub
adc
sub
sbb
fsubr
and
sbb
ja
retf
outs
cmp
fdiv
push
fsubr
jnp
xor
xchg
and
addr16
aas
icebp
pop
add
into
jmp
and
not
cmp
sub
rcr
fadd
and
test
std
sub
in
jnp
or
cs
cmp
mov
out
std
pop
(bad)
imul
test
and
sub
ficom
ror
gs
xor
pop
dec
and
cli
dec
adc
(bad)
out
push
mov
mov
ins
pusha
imul
lods
(bad)
mov
scas
repz
inc
adc
lds
mov
jg
iret
and
sahf
sbb
push
sbb
sbb
je
inc
xchg
int
mov
fwait
push
adc
pop
(bad)
sbb
orps
push
pusha
leave
repnz
xchg
(bad)
mov
jb
xchg
mov
cmp
out
push
push
mov
jo
dec
push
repnz
fwait
mov
xchg
imul
mov
xor
stos
dec
pop
or
(bad)
jle
out
dec
pushw
and
sbb
pop
mov
add
pop
shr
add
inc
cs
(bad)
mov
into
cmp
int3
leave
push
shl
gs
pop
ret
push
clc
xchg
jmp
xor
pop
xor
ins
mov
in
pop
ror
sbb
call
(bad)
aad
test
pop
adc
adc
jne
aad
cmps
cmps
out
hlt
dec
pop
imul
sahf
jmp
inc
dec
repz
push
or
mov
daa
jp
call
xchg
mov
inc
fwait
lea
icebp
sbb
enter
les
sbb
jl
and
pop
test
lds
in
adc
mov
cmp
shr
mov
int3
add
or
or
xchg
fxch
sub
xor
fsubr
mul
mov
dec
or
popf
or
mov
icebp
mov
test
add
inc
dec
in
fiadd
out
xor
pop
mov
add
inc
xor
and
mov
out
inc
pop
adc
movs
pop
aad
leave
dec
jne
stos
aaa
sub
int
test
mov
or
jmp
add
lods
sar
clc
push
sbb
sbb
sub
shl
inc
inc
and
repnz
xlat
mov
pusha
lahf
sbb
popf
sub
jo
push
pusha
dec
xor
jle
dec
adc
and
push
add
gs
jecxz
shl
cmp
or
fistp
mov
pop
ret
lods
jb
(bad)
(bad)
pop
call
int3
xor
pusha
fcmovnu
and
loop
or
mov
dec
fimul
cdq
sub
in
ror
jns
repnz
and
fwait
scas
cmp
and
idiv
cmp
adc
pop
mov
ins
pop
push
cmp
das
or
aad
jecxz
mov
or
push
(bad)
cmp
and
std
gs
frstor
add
pop
ins
or
add
dec
sub
(bad)
xchg
inc
jp
inc
push
cmp
cld
inc
dec
mov
retf
fstp
jmp
mov
fcom
mov
adc
mov
mov
dec
jmp
js
xchg
xor
sub
jp
mov
in
cmp
clc
(bad)
jmp
jecxz
sub
lds
fadd
adc
jo
pop
or
(bad)
out
pop
push
sti
push
adc
retf
mov
pop
popf
push
cmp
scas
call
cmp
fdivr
and
cmps
nop
and
ds
imul
jmp
jb
jae
pop
pop
push
aad
mov
mov
jno
adc
or
push
pop
fcomi
lock
push
call
out
int
push
mov
(bad)
(bad)
xor
pop
dec
mov
cli
xor
cli
test
addr16
sub
leave
mov
scas
rol
ins
or
lds
add
ins
leave
sti
mov
into
ins
push
or
repz
fdiv
jne
les
in
jg
dec
lds
repnz
cmp
mov
mov
mov
sahf
ds
pop
mov
movs
jbe
pop
jnp
xor
push
mov
jle
sbb
fwait
sbb
gs
mov
inc
xlat
xor
cli
pop
pop
jle
ja
jo
push
outs
xchg
fisttp
and
cwde
js
adc
popf
ins
nop
cmp
mov
es
mov
push
(bad)
pop
movs
mov
push
daa
push
lods
mov
dec
sbb
push
(bad)
pcmpeqd
movs
inc
mov
mov
aaa
adc
fwait
mov
add
sub
dec
aas
repnz
aaa
or
(bad)
dec
sti
dec
or
jbe
ja
dec
popa
jb
and
cmp
push
jmp
inc
xchg
push
pusha
or
addr16
xchg
mov
pop
movs
xor
je
jl
cmc
jnp
push
xor
add
mov
mov
jl
push
sbb
js
into
xor
dec
cmp
jb
cmp
mov
imul
int3
push
enter
out
cld
sub
dec
xor
mov
sub
xor
xchg
mov
loop
xchg
sti
and
mov
ret
inc
lea
push
inc
and
fiadd
dec
mov
test
and
int3
mov
lea
(bad)
pushf
lds
in
mov
mov
arpl
stc
jecxz
and
ret
fldenv
jne
fwait
mov
gs
pop
fwait
sbb
add
sub
jle
nop
push
aaa
mov
cmp
sbb
mov
sysret
add
imul
mov
mov
xlat
loope
mov
sbb
cmp
lds
jbe
add
in
rol
sti
xor
and
stos
repnz
lahf
dec
xchg
je
xchg
(bad)
std
retf
xchg
cmp
jmp
out
push
adc
add
xor
aad
mov
adc
jp
push
lock
inc
fiadd
jmp
fs
pushf
xchg
lds
dec
adc
pop
xchg
leave
and
pop
jg
sahf
pop
xchg
fst
add
sub
rcl
hlt
pop
pop
test
and
jmp
pop
sub
mov
inc
jbe
or
inc
push
popf
pop
pushf
xor
xlat
add
xchg
pop
stos
cdq
xchg
mov
mov
sub
xor
push
fwait
xchg
in
out
add
push
dec
lods
ret
jle
push
imul
ret
out
pop
xor
es
adc
in
out
(bad)
xor
push
imul
js
mov
shl
add
dec
(bad)
cmp
jle
fidivr
cli
pop
sahf
add
out
retf
adc
sbb
and
shr
lods
add
mov
ds
iret
fild
rcl
std
test
jmp
mov
pop
add
xchg
mov
push
retf
in
inc
add
or
sub
cld
xor
xchg
sar
int3
xchg
outs
add
outs
mov
mov
js
(bad)
ficomp
test
nop
test
and
sbb
rcr
data16
loop
int
xor
in
mov
or
mov
and
lods
out
js
rcl
adc
mov
jnp
mov
mov
cld
push
fiadd
dec
adc
xchg
mov
jmp
inc
les
add
jmp
mov
in
je
outs
mov
rcr
retf
jp
sub
rol
aam
fs
pop
fist
xchg
jae
cs
scas
add
mov
fwait
jg
cli
sbb
mov
nop
sar
imul
fisttp
xor
call
push
push
sbb
aam
aad
mov
push
mov
retf
ror
(bad)
jl
ins
sbb
mov
jmp
mov
sti
push
fwait
lock
lods
sub
iret
jg
fld
aaa
int
pop
adc
mov
sub
lods
stc
pop
or
jmp
and
or
(bad)
enter
add
or
ins
add
sahf
pop
cmp
inc
pop
stc
es
es
jno
cmp
push
add
inc
add
xchg
es
mov
adc
icebp
jo
pop
cmps
mov
popf
sub
popa
lock
mov
mov
xchg
shl
inc
or
push
inc
loope
mov
xor
scas
inc
xchg
jle
ror
cs
rol
sbb
jae
stos
mov
inc
inc
dec
sbb
(bad)
ss
push
adc
pop
enter
inc
repz
mov
push
iret
loop
sbb
mov
and
inc
inc
ss
xlat
push
sbb
mov
icebp
push
and
call
push
scas
imul
pop
rsqrtps
test
and
jnp
inc
mov
xchg
jmp
pop
movs
ror
cmc
dec
xchg
jns
fcomp
adc
add
outs
xlat
mov
bound
mov
popa
sbb
jmp
stos
in
mov
test
sub
cmps
mov
cmp
ret
cmp
jle
pop
pop
pop
push
pop
push
mov
cmps
cmp
jbe
fist
and
push
mov
sahf
icebp
mov
jo
in
not
int3
and
pushf
add
adc
fcom
cmp
and
jnp
test
pop
mov
push
fs
in
sub
or
pop
jl
inc
xchg
lds
pop
outs
dec
stc
push
pop
ret
mov
cmp
push
add
imul
jnp
leave
scas
pop
mov
jae
ret
sbb
daa
mov
pop
ins
xor
jns
xlat
mov
mov
retf
inc
call
popf
cmc
fxch
lods
mov
rol
js
jge
(bad)
xor
or
jno
fistp
or
cmp
addr16
mov
lahf
ret
(bad)
std
cli
dec
pop
dec
add
adc
pop
lods
mov
pop
mov
sub
je
mov
pop
hlt
pop
xchg
unpckhps
in
lock
inc
mov
mov
and
jmp
sub
push
idiv
pop
mov
ja
aad
sbb
(bad)
std
out
adc
mov
or
(bad)
shr
or
loope
dec
retf
test
test
in
inc
xor
outs
jle
pop
jmp
add
dec
nop
push
imul
jns
lock
fcmovbe
das
ja
mov
xor
cwde
jge
scas
cli
jb
cdq
(bad)
push
mov
xor
xchg
stc
pop
mov
adc
fsub
dec
out
sti
aam
mov
ss
or
xchg
push
jne
mov
ins
mov
mov
test
fwait
cmp
ror
cmps
mov
sbb
mov
cdq
pushf
shl
sbb
enter
imul
(bad)
popf
push
jo
mov
movs
dec
and
mov
cs
jns
pop
sub
sub
sub
aaa
mov
lea
mov
imul
(bad)
mov
scas
cs
xor
std
js
ret
jmp
mov
arpl
dec
aas
in
jno
mov
stc
or
ss
mov
dec
inc
cwde
sbb
mov
sub
mov
add
jle
jmp
fs
push
fmul
jmp
sbb
scas
xor
or
out
mov
sub
shr
ficom
mov
jae
outs
sub
xor
retf
cmp
rcr
push
out
xchg
es
push
cmp
fwait
inc
sub
add
add
int3
in
push
jecxz
into
xor
outs
xchg
(bad)
arpl
pop
aas
retf
fst
sub
cmp
sbb
ds
out
arpl
inc
xchg
xor
fldcw
cld
inc
inc
sbb
or
into
and
in
loop
ror
xchg
stc
test
pop
lahf
repnz
mov
jge
shl
shr
mov
mov
mov
ret
or
das
sahf
mov
sbb
test
rol
jp
mov
int
and
scas
xchg
mov
cwde
sbb
movs
enter
cmp
ret
fcmovne
nop
(bad)
aas
adc
push
mov
(bad)
test
je
(bad)
cmc
push
sub
adc
dec
ins
mov
xor
xchg
jbe
sbb
add
xor
sbb
mov
arpl
xchg
push
mov
or
xchg
dec
sub
dec
in
mov
ins
pop
adc
out
ds
loope
call
mov
je
jnp
sub
mov
enter
mov
cs
test
bound
cmp
sar
call
ins
sub
dec
aaa
pop
and
jb
or
pop
cli
xor
push
sbb
inc
mov
pop
xchg
loopne
jmp
retf
sub
xchg
lds
adc
xor
push
inc
xor
arpl
xchg
cmp
rcr
clc
lds
jmp
cli
and
xchg
mov
jns
pushf
dec
jns
loope
cmps
and
sbb
daa
cmp
push
jbe
add
sbb
push
loopne
inc
pusha
jae
adc
shr
icebp
(bad)
sbb
daa
in
ss
mov
jbe
and
inc
cmp
mov
bound
ret
xor
data16
(bad)
dec
movs
mov
mov
push
(bad)
sti
mov
out
mov
rol
ins
sti
iret
mov
xor
xor
xor
jmp
leave
aam
imul
vpermilps
push
dec
nop
and
dec
sbb
adc
aam
ins
sbb
pop
sub
inc
mov
or
xor
sbb
xlat
mov
out
ror
hlt
mov
pop
jnp
in
inc
stos
push
scas
ret
or
std
xchg
rol
sahf
push
or
fisub
mov
push
fdivr
dec
call
retf
sbb
mov
adc
pop
hlt
add
push
mov
fwait
jmp
dec
inc
in
cmp
jne
lea
xchg
jne
ss
sar
push
and
scas
mov
jge
push
shr
cmp
les
fsub
popa
test
mov
fnstenv
jge
pop
jno
adc
pusha
dec
(bad)
mov
adc
cmp
sbb
outs
jns
mov
sub
aas
cmp
xor
std
outs
mov
mov
pushf
xchg
sub
ret
pop
ins
fisttp
push
scas
aam
pusha
sar
lea
addr16
mov
dec
neg
ret
push
int
pop
sar
cmp
pop
rol
and
ins
lahf
test
xor
in
daa
mov
xor
adc
sbb
xchg
xchg
pop
xor
shl
scas
add
cs
adc
sub
inc
cs
cmp
or
out
aas
xchg
(bad)
push
retf
repnz
sbb
lods
cli
dec
nop
add
(bad)
fist
retf
das
popf
cwde
mov
xor
push
inc
inc
int
sub
or
push
jmp
lahf
or
aaa
xchg
das
sub
xchg
cmps
jle
xor
mov
inc
adc
pop
sahf
push
rcr
aas
add
push
push
retf
jecxz
jne
jmp
or
das
inc
das
jns
sbb
push
scas
jae
gs
sbb
xchg
cld
jo
push
dec
sbb
icebp
call
test
ret
jle
dec
mov
stos
mov
and
add
mov
mov
rol
test
inc
and
into
and
pushf
popa
cmp
lea
add
mov
jmp
pushf
add
mov
add
inc
ret
or
retf
mov
int3
and
mov
push
xchg
mov
adc
jno
push
and
in
lahf
xor
test
lea
ret
iret
sbb
ret
ins
jl
xor
inc
in
jne
push
out
jb
xchg
mov
xchg
neg
inc
nop
addr16
ins
push
aaa
sub
scas
imul
nop
pop
mov
sbb
mov
call
jno
cs
outs
push
ins
pop
sbb
jmp
cwde
add
imul
cmp
jb
(bad)
shr
inc
inc
sbb
adc
mov
leave
sbb
add
js
hlt
sar
jp
ret
icebp
adc
call
sbb
xor
pop
sbb
push
jmp
mov
in
dec
retf
jne
xchg
push
(bad)
sub
lock
xor
ror
stc
sub
sub
xor
mov
ficom
outs
imul
inc
mov
pop
cdq
cs
xlat
and
add
dec
inc
inc
or
sbb
and
std
(bad)
sbb
(bad)
jb
or
adc
dec
fmul
scas
aad
mov
cld
sbb
jmp
movs
mov
shl
daa
mov
ret
out
int3
mov
push
xchg
xchg
sub
aad
cmp
xor
lea
mov
dec
and
sbb
popa
(bad)
out
test
xchg
enter
mov
jmp
sbb
cmp
xlat
fbld
jbe
fmul
out
loope
out
outs
hlt
(bad)
std
push
mov
inc
adc
fcomp
out
dec
xchg
pop
ins
mov
cmp
ja
adc
xchg
push
mov
aad
pop
data16
scas
mov
gs
(bad)
pusha
retf
cmp
mov
mov
mov
sti
cmp
jle
add
dec
inc
(bad)
dec
cmp
ss
push
inc
(bad)
mov
les
(bad)
adc
out
and
in
push
sub
and
gs
not
or
cwde
fisub
fadd
aas
mov
out
dec
loopne
push
aaa
mov
xor
dec
dec
adc
jae
dec
cmp
mov
cmp
outs
retf
inc
les
ret
shr
scas
rol
cmps
add
pop
adc
xchg
mov
mov
xor
lods
mov
lods
mov
sub
sbb
shl
and
and
inc
shl
hlt
gs
mov
push
inc
cld
test
mov
mov
dec
pusha
je
lahf
pop
aam
mov
add
div
cmps
out
aam
mov
out
faddp
jnp
fcom
aad
scas
push
sub
xchg
and
test
jp
jbe
xchg
cmp
cmp
mov
lods
and
push
ins
mov
xchg
jp
in
outs
dec
in
mov
sar
fwait
jnp
rol
cmp
pop
retf
cmovl
(bad)
stc
cwde
into
mov
xchg
(bad)
das
aam
call
and
das
fdiv
adc
hlt
aas
(bad)
jae
push
lock
fcos
push
sub
mov
sub
addr16
not
mov
aaa
or
leave
dec
dec
imul
jb
pop
jmp
lahf
ret
xchg
lahf
sbb
lods
outs
repz
stos
dec
in
cmp
lods
loop
aas
in
jle
pop
sti
sahf
aaa
adc
je
ret
test
fwait
out
and
sbb
push
xor
ret
sub
in
jg
mov
or
add
jmp
bound
pop
mov
pop
ss
call
mov
adc
pop
cmp
std
push
mov
or
int3
jmp
fstp
cmp
test
mov
popf
aas
xor
cwde
dec
or
jmp
xor
popf
mov
jns
ror
and
vrsqrtss
mov
jae
pop
mov
and
dec
imul
test
and
and
cmp
sahf
or
add
test
rcr
or
pop
loop
push
inc
pusha
or
adc
xchg
outs
fwait
mov
jp
or
dec
in
inc
ret
mov
ds
loope
out
fwait
cmp
call
sub
dec
push
xchg
push
fsub
adc
jns
mov
sub
nop
sbb
push
adc
jge
js
jnp
jnp
call
movs
(bad)
aad
ds
mov
push
or
jne
test
mov
mov
and
dec
out
mov
mov
cmp
sbb
add
cmp
add
mov
out
(bad)
adc
mov
push
xor
in
das
xor
call
jp
imul
mov
and
mov
std
stc
clc
cmp
imul
push
mov
cmc
or
(bad)
fcmovnu
je
fmul
mov
mov
dec
mov
mov
inc
fcmove
(bad)
aas
in
inc
jns
push
lock
xor
vcvtsd2ss
sub
xchg
and
pop
loop
mov
ror
lods
and
mov
sbb
push
cmp
sbb
push
retf
jl
ins
fidiv
lods
cli
out
inc
sbb
adc
dec
push
dec
ror
movs
push
jae
push
jo
mov
out
sub
mov
inc
das
and
pop
cmps
lds
shl
inc
out
sbb
cmp
mov
xor
aaa
dec
inc
(bad)
mov
jbe
ins
sbb
inc
(bad)
clc
sbb
pop
popa
outs
or
ror
lds
mov
imul
mov
dec
mov
pop
jb
sub
xor
adc
xchg
(bad)
div
pop
jmp
sub
sbb
sub
cmp
cld
and
xchg
repz
(bad)
or
adc
rcr
icebp
jbe
cdq
loopne
mov
xchg
fnclex
dec
pop
push
outs
or
cmp
inc
sub
push
add
mov
mov
or
retf
inc
xor
(bad)
jl
arpl
aas
push
adc
test
mov
not
xor
mov
jmp
std
adc
push
aam
test
and
dec
pop
push
mov
icebp
iret
jl
sub
pop
mov
cmp
dec
pop
out
imul
xchg
sbb
(bad)
push
cdq
xor
mov
jb
xor
mov
inc
addr16
ret
jmp
push
push
cmp
cmp
sbb
call
xor
xor
pusha
out
movs
jg
lsl
repnz
(bad)
jne
jmp
stc
pop
push
fs
(bad)
ja
sbb
sbb
js
inc
idiv
icebp
or
add
sti
mov
fadd
sbb
add
xor
arpl
arpl
sbb
test
adc
lea
and
jp
popa
add
pop
iret
retf
je
pop
or
aas
repz
ficomp
adc
scas
psadbw
repnz
pusha
cmp
jmp
push
sbb
call
jne
mov
add
push
loope
jne
xchg
gs
lods
or
jbe
das
leave
mov
xchg
retf
cld
int3
leave
lods
cmp
mov
mov
xor
lock
and
xor
(bad)
cmp
inc
sahf
jmp
movs
repnz
xor
cs
rcr
mov
mov
push
cld
ret
repz
pop
xchg
or
mov
in
pop
(bad)
scas
iret
adc
cmp
mov
push
mov
pop
inc
push
mov
sub
jne
sub
in
ds
retf
sub
lock
lods
dec
or
and
add
in
and
loop
jp
jp
push
(bad)
imul
push
lahf
push
out
mov
in
dec
cs
mov
iret
pop
hlt
jge
mov
mov
pop
retf
nop
xor
cmps
sub
into
pop
jge
sub
adc
aaa
and
push
jmp
xchg
fldln2
mov
in
push
add
mov
sbb
lea
popf
mov
push
inc
arpl
retf
pop
icebp
push
mov
mov
std
xlat
pop
xchg
push
xor
leave
jmp
cmp
jo
outs
lock
imul
mov
cli
daa
pop
pop
mov
push
inc
cs
mov
xchg
xor
adc
outs
cld
and
and
icebp
adc
loop
stc
fisub
inc
movs
and
fidivr
cmp
stos
shr
push
cmp
dec
mov
cs
sub
pop
push
or
or
test
aas
(bad)
xchg
xorps
mov
sbb
sub
mov
fldpi
cld
pop
ins
xchg
xchg
sub
nop
mov
jo
test
fwait
outs
je
inc
test
(bad)
and
dec
add
dec
adc
pop
xchg
fwait
mov
mov
inc
or
ror
mov
popf
es
mov
fiadd
icebp
rol
shl
pop
pop
add
pop
inc
in
stos
shr
jmp
arpl
jmp
xchg
jne
cli
icebp
repnz
mov
xchg
sub
adc
or
in
out
(bad)
in
cld
ficomp
das
scas
push
je
dec
xchg
jno
xlat
lds
cmps
imul
int
bnd
jge
fld
jl
retf
push
and
je
cmp
jg
push
mov
cmp
jle
(bad)
mov
repz
ins
xchg
fwait
xchg
add
sub
pop
es
pusha
adc
add
xor
jecxz
(bad)
dec
mov
inc
dec
adc
mov
rcl
mov
dec
fmul
dec
and
sbb
inc
sub
and
sbb
or
je
arpl
or
sti
adc
cmc
mov
dec
jno
inc
and
cmp
sub
std
fdivr
xor
jmp
pop
mov
ffreep
ja
movs
cmp
cmp
out
dec
lahf
hlt
rcl
inc
xchg
sbb
or
and
clc
cmps
shl
sub
sbb
pop
out
mov
jae
adc
loopne
push
js
add
mov
sbb
nop
jno
xor
movs
jnp
dec
int
sahf
int
xor
(bad)
adc
xchg
mov
cdq
adc
xchg
ss
je
lahf
rol
cmps
jo
gs
sahf
lods
mov
mov
stos
pop
jo
dec
ret
cmp
xor
sbb
addr16
mov
push
cwde
fcom
push
shl
mov
xor
lock
mov
movs
call
rcr
xchg
and
call
and
and
jecxz
fdivr
pop
xchg
int
addr16
dec
sub
out
aad
pop
xor
nop
xor
xor
adc
xlat
in
cmp
add
jp
jle
xor
inc
fstp
and
psllq
pop
dec
xor
into
and
cmps
mov
aad
cmps
(bad)
fdiv
js
push
stos
jmp
inc
cmp
(bad)
imul
movs
push
add
cs
push
sbb
cs
scas
mov
stos
mov
sub
popf
stos
mov
sub
mov
inc
movs
dec
imul
adc
movs
in
test
in
add
cmp
(bad)
mov
push
mov
sub
mov
out
mov
inc
jo
jmp
lea
xor
fwait
shr
shl
(bad)
std
inc
mov
jbe
or
cs
and
mov
aam
inc
loope
sub
cwde
or
cmc
test
and
cmp
sbb
inc
rcr
mov
ins
cli
ror
ja
pop
stos
call
inc
dec
pop
stos
and
cmc
xchg
mov
or
icebp
aaa
aad
call
not
add
leave
push
popf
push
sbb
ss
add
ins
push
neg
xchg
mov
in
sar
push
dec
push
or
adc
jne
lds
and
jns
push
aas
ss
xchg
xchg
in
jecxz
push
inc
add
push
add
shr
(bad)
pop
xchg
jne
pop
jecxz
cmp
mov
pop
std
xchg
inc
fsubr
loope
mov
outs
or
sbb
sbb
ret
cmp
mov
mov
xor
cs
pushf
int3
sahf
out
call
fldcw
leave
lea
loope
out
mov
cmp
leave
mov
call
sti
mov
call
inc
add
sbb
add
mov
pop
mov
mov
aad
aad
aam
xchg
push
mov
jge
aaa
ins
jne
sub
mov
(bad)
out
xchg
push
outs
sub
fmul
into
push
fimul
test
dec
(bad)
adc
stos
xor
stc
inc
fs
aad
jp
inc
std
daa
out
jns
outs
dec
(bad)
out
jg
push
xor
mov
cmp
push
nop
jp
(bad)
aas
out
pop
repz
jnp
sub
inc
scas
out
xchg
stos
lods
xor
jnp
add
mov
popa
ficom
loopne
stos
add
ror
das
loop
sbb
mov
mov
ret
dec
jno
xchg
pushf
cmp
movs
inc
and
fisttp
pop
xor
(bad)
cmp
sbb
push
fild
xor
cld
inc
in
add
test
popf
add
repz
scas
jne
push
leave
rol
xchg
imul
push
lods
sbb
loop
fwait
jge
add
imul
mov
push
pop
retf
mov
iret
(bad)
push
add
int3
dec
and
mov
mov
test
leave
sbb
mov
mov
ret
push
sbb
shl
jae
pop
scas
push
xchg
in
call
mov
jmp
xor
xor
cmc
outs
dec
outs
xor
ficom
jb
or
loope
jae
repnz
int
imul
in
mov
xchg
test
stc
mov
and
and
imul
dec
out
out
or
xchg
add
pusha
push
and
pop
es
rcl
fdiv
mov
int3
movs
jge
pop
push
cmp
mov
icebp
loope
add
mov
into
mov
mov
push
mov
fmul
and
inc
mov
or
push
std
and
mov
xor
dec
jl
push
imul
push
adc
sub
jmp
(bad)
es
xor
inc
push
push
fst
bswap
pop
test
sbb
adc
mov
sub
adc
aaa
mov
sub
test
pop
add
inc
in
jg
jmp
push
inc
inc
xchg
clc
add
jbe
dec
inc
sub
push
in
pop
xor
adc
(bad)
clc
inc
cmps
xchg
fild
sahf
and
fld
mov
sub
mov
sub
push
xchg
inc
lods
sbb
int3
enter
and
inc
sub
dec
pop
sbb
inc
test
aad
or
ds
mov
and
xor
push
popf
cmp
mov
rcr
xor
int
xor
push
popf
stc
dec
retf
icebp
pop
cmp
fsub
xchg
loop
imul
jno
adc
fs
dec
pop
fsubr
rcl
inc
ins
push
out
fdiv
push
stc
dec
aam
aad
lods
or
mov
mov
fwait
pop
mov
jbe
movs
pop
mov
mov
icebp
loop
por
clc
sahf
push
mul
mov
mov
push
jmp
add
xchg
dec
pop
mov
(bad)
sbb
mov
jmp
jmp
push
inc
test
push
pushf
(bad)
mov
push
hlt
out
or
or
out
xchg
cmp
mov
in
sbb
int3
outs
jg
inc
jle
push
cmp
aad
fst
out
sbb
test
add
cld
mov
push
jp
cdq
call
mov
mov
adc
mov
adc
mov
xor
push
cmc
enter
adc
mov
add
xor
les
stos
push
ss
fwait
sub
cld
fs
xchg
retf
and
js
push
out
aas
xchg
sti
imul
rcl
jmp
sbb
xor
(bad)
jb
test
mov
fiadd
cdq
pop
rcr
loopne
xor
add
xchg
fiadd
and
sub
aas
cmps
call
cwde
sub
das
push
push
or
es
js
or
mov
or
add
retf
std
cld
jmp
(bad)
jo
push
pop
push
lods
cmp
jle
jbe
repz
cmp
push
frstor
inc
cmp
popf
push
cmp
idiv
jmp
xchg
test
adc
cdq
xor
xchg
dec
mov
and
popf
pop
in
inc
popa
jo
jp
data16
mov
push
jge
or
cmc
enter
jl
mov
mov
jnp
dec
inc
aaa
inc
push
ja
fimul
aam
cld
int
sbb
push
outs
cmp
cwde
iret
jle
arpl
push
cwde
lds
xor
push
cmp
push
jmp
jmp
neg
test
xchg
sbb
add
sbb
dec
pop
sub
jb
jg
inc
dec
cmp
dec
loope
popa
mov
sub
fsubr
or
xor
fs
sub
push
xor
scas
out
dec
mov
jb
shr
sbb
inc
sbb
add
icebp
outs
add
out
jle
push
lods
cmp
ret
dec
push
push
or
push
sbb
jecxz
daa
mov
cmp
ins
das
sbb
enter
inc
call
or
mov
je
scas
jne
mov
mov
push
sbb
sbb
sbb
jmp
sbb
addr16
addr16
pop
sub
shl
mov
stos
mov
ret
popf
shl
add
(bad)
enter
and
jg
sbb
push
hlt
hlt
xchg
cmps
jl
(bad)
pop
sub
pushf
push
jmp
jbe
montmul
cmps
xchg
cli
arpl
into
call
into
and
push
dec
cmps
leave
aam
inc
(bad)
repz
xchg
es
or
and
pop
xchg
int
cli
inc
mov
popf
iret
fbld
(bad)
aaa
jae
cmp
ins
add
loopne
lea
adc
cmp
scas
xor
sahf
lods
(bad)
stc
and
or
addr16
pop
sub
dec
sub
mov
daa
and
loopne
sub
push
push
call
aaa
xor
inc
xor
push
(bad)
sti
fstp
and
jp
psubusb
or
push
fld
xchg
cmp
cmp
ret
dec
clc
push
cmp
dec
pop
sbb
call
nop
rol
cmp
mov
dec
or
mov
xor
mov
popa
sbb
pop
test
dec
inc
xor
(bad)
xchg
push
push
dec
add
icebp
jmp
pop
ja
pop
out
jne
push
sbb
fcomp
add
(bad)
dec
adc
daa
test
mov
(bad)
fdiv
sub
cmp
cmp
aam
cmp
push
jle
fwait
in
test
cmp
jo
jge
(bad)
sub
sbb
in
leave
(bad)
shufps
sub
cmp
cmp
pop
fwait
lahf
out
adc
(bad)
push
shl
test
repz
pusha
push
inc
push
outs
mov
in
inc
sub
sub
or
pop
ins
fisub
jmp
sbb
popa
fld
nop
scas
jge
adc
in
inc
pushaw
in
add
dec
je
test
lahf
push
sub
aaa
push
or
shl
xchg
pop
enter
das
dec
mov
add
jl
xchg
(bad)
dec
aas
rol
jae
fwait
xor
inc
mov
shl
(bad)
cmps
repnz
ds
mov
xchg
fabs
mov
sbb
sub
push
test
sbb
int3
call
mov
pminub
mov
xchg
or
and
adc
push
xchg
cdq
and
pop
(bad)
push
adc
loope
fmulp
cmps
inc
idiv
cmp
arpl
fisubr
data16
push
pushf
(bad)
into
(bad)
cmp
push
outs
xchg
sti
clc
and
and
pushf
rol
rol
or
mov
push
int3
xor
mov
clc
stos
and
pop
ret
pop
add
fisubr
dec
dec
mov
pop
test
gs
cmps
cmc
stos
mov
jae
mov
sti
adc
sub
jmp
cdq
push
add
mov
fild
arpl
aam
jno
inc
mov
xchg
adc
cld
dec
cs
sahf
les
or
jge
pop
push
movs
mov
mov
jecxz
mov
sub
mov
das
arpl
test
push
dec
bound
inc
ret
dec
inc
pop
push
sbb
imul
cmp
test
jns
inc
jae
sbb
jle
sub
test
inc
in
and
hlt
gs
stos
sbb
cmp
mov
xor
movs
jns
mov
inc
rcr
into
sub
outs
and
cs
ja
and
push
xchg
mov
(bad)
jo
loop
jge
out
dec
test
cmc
dec
nop
dec
sbb
pop
add
sub
adc
or
dec
xor
add
jb
leave
(bad)
jbe
repz
and
or
test
jle
clc
mov
jae
sbb
fwait
dec
push
pop
add
push
int3
or
inc
cmp
sbb
push
fs
sbb
xchg
cmps
fbld
outs
mov
pop
jge
div
sub
jmp
or
fnsave
xchg
mov
adc
or
sbb
stos
cmp
adc
imul
pop
dec
pushf
outs
sub
push
icebp
ficom
daa
hlt
dec
pop
xchg
loop
jle
mov
xchg
(bad)
das
pop
or
inc
push
dec
xor
(bad)
neg
loop
cmc
jns
adc
les
ror
jmp
mov
jecxz
scas
jns
(bad)
call
sbb
xchg
xchg
push
add
pop
(bad)
jnp
push
test
call
xchg
aam
leave
std
mov
jne
add
retf
xchg
aas
loopne
inc
(bad)
cmps
pop
nop
push
and
or
jmp
adc
xchg
add
in
ds
push
inc
fwait
and
test
nop
jl
and
cmp
leave
xor
test
mov
adc
mov
mov
or
push
mov
ins
or
test
int3
jge
adc
xor
cmp
mov
xchg
xchg
sbb
cmps
xor
scas
jb
retf
inc
adc
mov
enter
push
jae
cmp
(bad)
sbb
jle
dec
xchg
repz
adc
lock
inc
dec
lock
pop
and
fxch
ins
mov
popf
jecxz
fucomi
inc
dec
lahf
sar
aas
pushf
sub
mov
(bad)
(bad)
mov
rcr
sub
ret
dec
cmp
test
mov
ret
inc
or
xor
call
dec
jle
nop
sub
pop
mov
pop
cmp
pop
inc
mov
dec
rcr
cmps
clc
mov
or
lods
pop
hlt
scas
rol
into
aas
jne
stc
push
out
out
stos
jns
cs
into
(bad)
inc
dec
neg
call
add
jl
or
sbb
adc
fist
fwait
pushf
mov
bound
cmp
xchg
out
push
mov
in
retf
clc
lods
xor
fucomip
add
and
bound
mov
fild
adc
popf
retf
int
adc
cmp
mov
add
add
pop
mov
inc
mov
inc
push
jns
sub
or
sub
ja
sbb
out
inc
dec
fcomp
aad
mov
sub
sti
cwde
sub
jo
shr
(bad)
fstp
ret
jmp
cli
arpl
out
outs
fcmovnbe
sahf
sahf
add
and
sub
popf
inc
pop
add
in
lds
push
adc
arpl
mov
jne
data16
in
jmp
push
daa
push
sahf
jno
fistp
cmp
mov
inc
enter
pop
dec
fmul
in
sahf
outs
dec
sti
mov
inc
xchg
ins
js
repnz
and
xchg
push
(bad)
pop
or
je
jmp
fwait
push
and
(bad)
jecxz
dec
int3
jg
sub
jnp
or
(bad)
in
add
fnstenv
sub
dec
popf
pop
add
movs
mov
mov
jge
in
(bad)
aaa
mov
lods
or
xchg
add
inc
jb
call
rcr
cld
div
cmp
lahf
stc
mov
jecxz
outs
inc
loop
pop
ret
pop
or
push
adc
xchg
xor
add
popa
pop
or
(bad)
and
shl
fsubr
(bad)
jle
cs
inc
rcr
and
cli
outs
enter
clc
daa
fwait
adc
sahf
mov
call
std
bound
outs
sbb
test
xor
jb
pusha
jns
jbe
inc
call
retf
sbb
xchg
arpl
pop
arpl
mov
dec
dec
ja
lods
or
push
mov
shl
sbb
ret
sub
cmc
ss
dec
jmp
jb
rcl
daa
jo
rcl
xor
pop
leave
test
ret
icebp
int3
push
aas
inc
inc
outs
jnp
xrelease
xchg
cmp
aas
sub
push
jmp
out
repnz
mov
mov
das
push
shl
in
dec
jbe
lods
jp
pop
and
sub
mov
dec
int
mov
mov
pop
adc
mov
sbb
sbb
push
sbb
loop
sub
push
and
test
push
jno
add
not
add
adc
(bad)
sbb
xor
mov
inc
lds
mov
xchg
mov
xchg
pop
js
inc
ret
xor
fnsave
fsubr
inc
inc
xchg
mov
jno
stos
adc
mov
inc
clc
dec
inc
idiv
popa
or
loopne
inc
not
push
gs
xor
push
js
popa
mov
jo
call
lds
ficomp
push
lds
out
mov
lds
jle
jno
xor
jl
push
jl
aam
js
mov
fst
sub
hlt
cmp
mov
sbb
outs
cld
data16
adc
dec
xchg
cmp
fidiv
sub
test
or
sub
ins
mov
(bad)
pop
inc
xor
push
aad
dec
xlat
aaa
jge
rol
ss
sbb
pop
pop
leave
pop
std
loope
cmp
test
test
lods
in
xchg
jle
mov
(bad)
xor
adc
push
xor
xchg
jecxz
repz
paddw
lods
dec
sbb
xchg
outs
push
iret
jno
sbb
imul
rcr
mov
dec
lahf
inc
push
push
cmp
sar
dec
add
mov
inc
out
xor
sbb
out
or
jbe
xchg
rcl
repz
mov
sbb
sub
and
out
cld
xchg
push
lods
(bad)
cmc
aaa
dec
aad
cwde
nop
sub
lea
xor
shr
jns
lods
into
push
xor
in
xchg
pop
xor
out
loop
and
jno
and
or
mov
cmp
xchg
fistp
push
sbb
in
cli
jecxz
cmps
dec
mov
out
cdq
lahf
nop
sbb
xchg
mov
data16
xor
fstp
cmp
mov
push
jg
inc
dec
int
test
int3
ret
test
mov
movs
push
sub
or
dec
nop
pop
xlat
test
mov
mov
and
mov
push
(bad)
jp
retf
add
mov
push
dec
cmps
bound
pusha
bound
(bad)
js
adc
ror
aam
imul
aad
adc
(bad)
dec
and
(bad)
cs
xor
mov
dec
jo
xor
sar
std
cmp
mov
je
jge
and
inc
and
(bad)
push
xor
std
mov
fst
stos
dec
inc
and
aam
imul
inc
push
add
loopne
scas
add
lods
test
xchg
dec
out
sub
cmp
into
in
mov
cs
jae
(bad)
xchg
xchg
mov
dec
iret
call
push
hlt
pop
xchg
mov
movs
jae
push
xchg
cwde
cmc
fnstsw
cmp
es
mov
and
cwde
daa
div
xchg
sbb
(bad)
neg
push
mov
mov
cld
inc
pushf
pop
test
or
call
ror
or
dec
arpl
push
dec
shl
jmp
adc
shl
cmp
mov
jns
retf
mov
mov
aad
sub
cld
jae
cld
aad
pop
add
xchg
jno
mov
lea
test
aaa
push
cmp
mov
mov
clc
sbb
loope
cmp
push
adc
std
jno
add
sbb
in
jae
inc
out
out
(bad)
data16
pop
mov
or
xor
test
aas
mov
pop
and
inc
shl
lea
jno
jnp
scas
fnstcw
je
cmps
call
cmps
inc
pop
out
mov
cmps
pop
cmp
imul
in
out
fcom
dec
js
sub
inc
mov
add
xchg
mov
sbb
stos
ss
add
mov
pop
pop
out
out
cmp
xchg
mov
or
mov
mov
test
imul
repz
cmp
add
mul
outs
fiadd
sahf
in
mov
or
arpl
push
inc
and
les
mov
or
dec
inc
aam
cdq
push
jge
scas
mov
jmp
sti
push
es
out
loopne
push
push
cmp
test
pop
sub
dec
dec
or
jb
pop
(bad)
stc
push
and
ins
repz
sar
jbe
fsub
dec
adc
xchg
mov
mov
stos
mov
in
mov
push
fs
xchg
mov
xor
das
push
sbb
outs
add
fsub
xchg
fild
loope
not
xchg
dec
push
and
fldcw
cmp
inc
scas
jo
adc
stc
mov
jg
mov
clc
movs
movs
xor
add
mul
xchg
lods
sub
jae
cdq
adc
loop
sbb
or
fld
ins
and
or
pop
xchg
jmp
(bad)
(bad)
fild
lods
xchg
jo
aam
pop
sub
adc
fisttp
dec
pop
jae
mov
jbe
mov
movs
lds
xor
push
pushf
add
mov
cs
adc
test
push
ds
xor
dec
jmp
jle
cmp
les
fcomp
das
fcom
and
push
mov
mov
add
mov
sub
pop
mov
dec
out
cmp
fndisi(8087
mov
pop
ret
aaa
sub
sar
push
sbb
xor
(bad)
jp
push
inc
adc
addr16
int
ja
push
dec
test
and
cmp
js
push
xchg
jae
inc
movs
add
data16
push
pop
test
mov
add
loopne
sahf
mov
rol
data16
test
shl
jl
outs
xor
cli
sbb
add
aad
mov
pusha
aas
mov
imul
popa
mov
rol
mov
mov
leave
lds
neg
and
mov
inc
jmp
pop
fcmovbe
pop
cmp
mov
cwde
ret
fbld
dec
cwde
cld
mov
pop
mov
mov
aas
pop
xchg
fld
fwait
cmps
leave
pop
stos
fs
es
and
and
inc
scas
mov
sbb
inc
push
adc
jmp
fcmovbe
and
pop
xor
test
in
pop
test
aad
mov
sub
stc
or
adc
jns
pop
sti
cwde
pop
jnp
sahf
pop
xor
das
xchg
xor
pop
addr16
push
jmp
(bad)
mul
pop
pop
adc
push
pushf
xchg
(bad)
xor
xor
rol
fadd
test
fistp
imul
out
jmp
or
mov
push
in
aas
(bad)
aad
xor
ins
mov
arpl
add
mov
std
popa
xchg
ret
xor
lds
jmp
in
out
sar
sbb
icebp
jp
xor
fild
fiadd
dec
xchg
cmp
dec
inc
lods
les
dec
jo
adc
xor
lods
mov
inc
out
or
movs
adc
xchg
stos
jae
fsub
fsubr
xchg
movs
xor
and
or
ret
fsubr
mov
shl
mov
sub
test
dec
movs
mov
ja
adc
xor
ficomp
mov
(bad)
js
cmp
in
xor
sbb
adc
int3
jb
(bad)
and
hlt
cmp
ds
mov
les
scas
mov
mov
rcl
aas
cmp
push
scas
sub
mov
xor
add
sti
pusha
jns
mov
outs
mov
stos
inc
and
mov
inc
jbe
sbb
fst
adc
stc
retf
add
imul
ror
stos
dec
add
clc
adc
push
cld
lahf
ins
cmp
adc
ja
fcom
pusha
imul
mov
ins
in
dec
or
mov
enter
push
mov
push
xchg
jmp
xchg
pop
xor
xlat
ret
jg
iret
pop
and
mov
adc
pusha
shr
shl
cs
std
mov
mov
pop
fwait
outs
idiv
inc
lea
aam
jno
inc
add
int
and
push
test
cmp
fldenv
jb
add
cwde
cmp
adc
adc
cwde
pop
je
sbb
sub
ss
out
sbb
xchg
ret
and
js
cmp
stos
cmp
fst
(bad)
bound
jg
hlt
sub
jb
test
xor
into
cwde
dec
xchg
cmps
loope
in
push
loop
mov
int3
stos
dec
ret
test
imul
cmps
int
push
pop
das
or
js
xor
xchg
fmul
jmp
mov
mov
mov
sbb
xchg
movs
pop
push
int3
jl
sub
push
in
jb
xchg
addr16
cmp
push
sbb
enter
mov
inc
sub
cmps
rcl
jg
sahf
pushf
retf
in
shl
xor
(bad)
mov
mov
pop
clc
ja
pop
out
mov
pop
mov
mov
jg
adc
cmp
or
fistp
pmovmskb
adc
rcr
aam
aaa
sbb
add
dec
inc
or
jne
jmp
outs
xchg
xor
imul
xor
outs
repnz
push
or
sub
movs
sahf
(bad)
pop
outs
jmp
fistp
sbb
adc
lods
test
rcr
push
dec
inc
aad
daa
mov
mov
jno
push
out
loope
test
jbe
push
imul
push
adc
dec
add
add
test
sbb
or
jge
js
pop
push
stos
cmp
inc
into
leave
or
dec
sub
sbb
and
inc
and
jae
dec
cmps
hlt
add
add
jl
xchg
gs
adc
push
enter
jmp
push
jne
cs
pop
sub
cld
das
and
xchg
sub
sub
cwde
pop
jle
sbb
mov
movs
mov
xor
jl
imul
jp
sub
neg
pop
pop
dec
mov
pop
lds
scas
shl
push
hlt
fsub
(bad)
in
je
dec
add
sub
push
jecxz
into
and
ds
xor
fnstcw
loopne
jb
loope
lock
or
push
(bad)
or
jns
aad
dec
lock
and
or
mov
retf
mov
lahf
push
loopne
js
cmps
imul
rcr
add
and
lods
ss
daa
xchg
icebp
and
movs
push
stos
ins
sbb
sub
sub
add
rol
mov
inc
in
or
mov
fst
dec
jg
out
and
pop
int
push
sub
outs
add
(bad)
jle
fld
adc
retf
xor
ins
adc
mov
mov
push
push
inc
and
push
cmp
aas
cmps
mov
cmp
push
outs
push
dec
loope
or
scas
test
sbb
out
(bad)
in
push
adc
movs
pushf
sbb
movntq
add
sbb
dec
ja
add
inc
xchg
sub
jmp
xor
or
fcomp
pop
inc
mov
test
xor
repnz
push
jbe
test
xor
shl
and
cmc
(bad)
scas
fwait
repnz
mov
cld
pop
ds
imul
jl
mov
es
jbe
mov
push
add
inc
int
pop
mov
adc
mov
cmp
je
outs
pop
stos
retf
pop
repz
jmp
xor
iret
push
hlt
ins
xchg
cmp
and
imul
mov
xchg
or
cmp
mov
fwait
inc
sub
jle
mov
out
out
test
adc
or
mov
ins
xchg
push
ss
push
adc
retf
jmp
mov
ds
dec
jge
sahf
add
dec
test
mov
jns
les
std
mov
cmp
addr16
loopne
cmp
lock
shl
adc
inc
dec
in
repnz
push
add
mov
and
aam
adc
jae
mov
xchg
inc
stos
and
xchg
pop
xor
(bad)
cmp
push
inc
add
sbb
out
enter
mov
in
cmp
add
ror
mov
fsubr
ret
je
(bad)
pop
xchg
or
mov
mov
dec
loopne
inc
shl
mov
movs
or
sahf
jecxz
xchg
or
jae
adc
xchg
fidiv
push
cmp
stc
ins
mov
mov
vmwrite
mov
mov
pop
hlt
mov
retf
xlat
dec
mov
xor
mov
movs
sub
jle
jecxz
pop
in
sbb
xor
dec
ss
dec
jbe
sbb
or
js
dec
dec
test
test
push
(bad)
mov
in
nop
xchg
das
cs
jmp
je
xor
(bad)
lea
mov
pop
retf
and
popf
push
xchg
inc
ds
aas
mov
ins
mov
fsubr
mov
gs
stc
jl
leave
lea
mov
xor
sub
sub
pop
movs
pop
mov
fwait
sub
mov
add
xor
xchg
sbb
and
fst
retf
ficom
enter
loop
and
push
jbe
or
repz
in
cmp
fcmovnbe
out
outs
add
les
adc
push
std
mov
inc
xor
sbb
(bad)
sahf
sub
mov
pop
dec
dec
lods
pop
imul
in
aad
int
add
cmps
adc
add
sbb
cdq
retf
mov
les
jg
mov
popa
add
add
dec
ins
mov
aas
mov
sbb
dec
ins
lds
mov
cmps
aam
xchg
test
sub
aas
(bad)
xchg
dec
loope
mov
mov
test
(bad)
sbb
pop
push
sub
pop
ja
xchg
add
ror
push
test
cmp
push
aaa
jbe
mov
and
mov
jne
lahf
outs
adc
mov
gs
pusha
frstor
rcl
or
iret
add
mov
jo
or
push
movs
sbb
retf
push
rcr
cmp
retf
jo
into
and
inc
fistp
pop
jno
imul
add
stc
dec
pop
fcmovnb
dec
add
imul
outs
out
rol
or
add
dec
outs
cmp
xchg
scas
imul
int
in
push
sahf
or
ror
sbb
or
mov
in
cmp
aas
cmp
xchg
cmp
enter
jo
shr
dec
adc
or
xor
or
imul
xchg
mov
cmp
inc
stos
xor
popf
inc
loopne
sbb
jl
jmp
pop
(bad)
repnz
jle
repz
mov
adc
mov
lds
xchg
add
imul
ins
lds
sbb
mov
sbb
fwait
mov
push
fdivr
mov
mov
lock
cld
mov
jle
fsub
imul
mov
push
pop
add
add
mov
(bad)
aas
scas
lods
and
push
pusha
push
sub
mov
mov
and
cmp
pop
dec
cmp
stos
inc
dec
call
jo
(bad)
or
pop
xchg
add
cmp
bound
retf
xchg
mov
popa
xor
mov
xchg
movs
inc
dec
test
xor
test
outs
mov
test
push
int
dec
sar
sti
mov
cmp
and
sbb
push
inc
jle
pop
dec
jp
adc
push
out
push
jne
pop
(bad)
pop
pop
mov
ins
xor
aas
out
dec
popf
sub
fadd
scas
out
popf
cmp
stc
add
cmp
cmp
push
dec
pop
push
pop
fcmovu
add
movs
xchg
jl
mov
cld
retf
mov
push
loop
add
inc
ds
sbb
jns
sbb
cmp
movs
add
mov
movs
test
outs
sub
and
jg
in
push
mov
mov
daa
push
dec
mov
xor
jl
sbb
push
or
outs
sti
lock
(bad)
cmc
stos
mov
call
and
in
je
xlat
push
into
movs
xor
and
fsubr
js
nop
push
fwait
std
cld
fild
and
mov
inc
(bad)
aam
scas
daa
xor
das
ins
mov
ret
lea
or
adc
jns
hlt
cld
add
and
adc
and
add
jmp
push
nop
mov
retf
int
in
xor
xchg
xchg
popa
sbb
or
mov
inc
(bad)
pop
imul
mov
and
and
(bad)
xor
retf
mov
mov
xor
jb
fwait
sub
repnz
loopne
lods
sbb
hlt
out
push
dec
mov
or
cmp
mov
xchg
adc
and
out
pop
adc
push
mov
repz
iret
sub
fwait
cmp
push
pop
repnz
pusha
push
leave
(bad)
clc
into
jmp
scas
mov
mov
jge
pusha
cmp
mov
addr16
mov
xor
mov
(bad)
je
mov
sbb
push
lahf
pop
shl
dec
push
mov
mov
mov
loopne
fwait
sub
addr16
fcom
hlt
scas
pusha
test
jns
inc
into
out
loope
pop
sahf
push
xor
rol
jp
fstp
and
and
mov
push
xchg
cs
lock
stos
stc
stos
add
jmp
push
jbe
xchg
or
test
xor
(bad)
daa
jle
test
je
leave
(bad)
fiadd
push
push
fwait
test
repnz
pop
dec
ins
mov
retf
ins
stc
push
dec
push
fist
xor
mov
aaa
mov
js
enter
or
or
aam
or
push
xor
shl
aam
retf
push
in
mov
mov
jo
or
clc
loope
arpl
stc
in
aad
xchg
in
loopne
ror
aaa
cdq
sub
jnp
es
or
addr16
jb
xor
adc
inc
mov
sbb
mov
pop
(bad)
loopne
push
mov
jg
mov
cmps
add
loop
jno
or
inc
js
(bad)
int3
xlat
data16
arpl
stos
outs
push
test
mov
pop
rcr
mov
dec
cmp
into
push
scas
push
xchg
push
js
adc
xchg
mov
fs
retf
repnz
or
mov
fucomip
push
lea
or
sbb
sbb
outs
test
cmp
pop
push
arpl
sahf
mov
scas
dec
sbb
loope
sbb
jmp
mov
iret
aaa
add
jnp
and
(bad)
sub
dec
cdq
fistp
std
outs
mov
and
rcl
and
jmp
sti
outs
mov
xchg
cmp
adc
mul
repnz
sub
inc
out
and
sub
jbe
inc
outs
mov
mul
push
add
adc
enter
jns
retf
mov
retf
scas
mov
(bad)
jnp
mov
dec
sbb
push
sbb
push
pop
push
mov
stc
mov
mov
cmps
ror
jge
or
cmp
mov
nop
loope
inc
pop
lds
add
sbb
mov
mov
and
cld
adc
sbb
mov
dec
fwait
jmp
std
mov
jns
xchg
mov
jle
push
sbb
sbb
xacquire
pop
mov
pusha
repz
dec
mov
and
arpl
and
xor
push
cmp
mov
mov
jmp
add
out
into
enter
outs
cld
pushf
repnz
mov
and
(bad)
jmp
xor
inc
cmp
sbb
mov
xchg
cmps
inc
cmp
jl
out
test
rcr
push
mov
cwde
pop
repnz
sahf
retf
icebp
in
xor
call
cdq
xchg
sub
mov
jns
mov
shl
xor
cmps
jp
dec
jle
(bad)
xchg
retf
ins
aam
scas
test
data16
imul
sub
data16
mov
dec
mov
ins
adc
add
cmp
inc
retf
mov
std
and
lods
jmp
pop
leave
add
and
int3
add
test
push
push
ret
xchg
mov
sbb
ja
ins
push
adc
es
call
mov
sbb
leave
or
out
push
and
scas
stmxcsr
push
mov
sub
pop
into
add
pop
les
add
cmps
jmp
xor
nop
mov
jp
and
jg
mov
push
cmp
inc
cmp
clc
dec
inc
cli
lods
sbb
push
pop
mov
pop
sub
cmc
int
jp
popw
mov
retf
jp
and
aaa
and
pop
outs
div
pushf
inc
scas
test
dec
ud1
mov
ins
xchg
gs
xchg
mov
mov
ja
and
push
cdq
pop
xchg
mov
rcr
jnp
xchg
clc
adc
iret
or
add
jmp
mov
inc
mov
call
or
dec
popf
jbe
in
cli
inc
out
cmp
add
push
aaa
adc
int3
xor
cs
pop
shr
push
xchg
inc
mov
movs
in
inc
adc
mov
and
xor
gs
xor
dec
jmp
loope
mov
out
jle
stos
cmps
xchg
mov
sti
inc
movaps
int3
into
mov
xchg
sbb
sbb
clc
mov
push
jg
aam
js
xor
fxch
mov
sahf
pop
test
xor
jle
mov
push
mov
or
dec
xchg
enter
daa
pop
addr16
jo
inc
cmp
inc
sub
ins
jmp
std
push
mov
cmp
dec
pop
fs
xchg
mov
mov
sahf
sub
push
clc
loopne
mov
xchg
mov
das
pushf
lea
sub
shl
fbstp
sub
or
repnz
pop
xchg
jmp
sub
add
push
mov
enter
push
sar
cmps
sub
sbb
adc
push
xor
shl
in
loop
xchg
jno
ret
xchg
in
inc
xor
shl
push
jl
jae
dec
adc
cdq
jns
in
pop
mov
xor
dec
movs
mov
inc
ins
(bad)
stos
addr16
retf
xchg
pop
add
ins
jne
xor
arpl
in
aad
fsub
mov
dec
mov
inc
in
inc
mov
repnz
ja
xchg
cmp
(bad)
das
xchg
nop
in
sub
int3
pop
adc
jbe
xchg
sbb
ret
xchg
jle
mov
sbb
inc
pop
mov
mov
and
jl
fisubr
lods
push
sub
mov
pop
scas
stos
imul
out
rcl
and
mov
mov
adc
fild
inc
in
popf
(bad)
sar
mov
add
out
ror
or
popf
add
push
enter
xchg
nop
inc
push
add
xchg
(bad)
pop
inc
and
sbb
xchg
(bad)
fisttp
mov
loopne
jnp
out
imul
pop
aaa
jecxz
stc
outs
stc
and
xor
jns
(bad)
or
push
jb
mov
sub
cmp
pop
je
aas
out
(bad)
mov
shl
xor
dec
mov
jge
fcom
mov
loope
ja
push
sbb
out
xor
inc
cld
dec
pop
inc
jmp
lods
aam
or
pusha
rcr
pop
mov
popf
aad
push
call
mov
mov
idiv
in
arpl
push
fbstp
imul
jle
pop
sbb
sbb
pop
sub
or
mov
scas
stc
sub
aad
xor
out
mov
push
loopne
xor
retf
mov
(bad)
jmp
rcl
call
bound
aaa
add
mov
xor
add
mov
mov
mov
or
push
adc
repnz
out
fisubr
xchg
out
xor
leave
or
inc
or
mov
rep
jg
(bad)
in
outs
push
inc
fcom
pop
adc
adc
push
push
xor
lock
xchg
cmp
in
push
add
fdiv
xor
push
into
inc
fstp
mov
push
adc
cli
hlt
mov
push
adc
repz
push
pop
rol
pop
ret
jg
call
cmp
pusha
mov
add
sub
jp
jg
cmp
pop
dec
sub
inc
push
fwait
inc
fnsave
fs
jbe
ret
in
dec
dec
jle
push
adc
mov
mov
aam
push
or
rol
or
add
or
push
lds
adc
xor
push
ins
fs
out
jo
dec
sbb
sbb
dec
pop
cmp
jg
mov
cmp
push
mov
jnp
loope
push
xor
or
mov
sbb
push
and
xchg
push
(bad)
xchg
cmps
sti
push
sahf
test
xlat
aam
pop
stc
es
fsubr
inc
push
jl
ss
lahf
clc
gs
imul
pop
mov
int
popa
cmp
arpl
ret
or
jmp
mov
addr16
or
xchg
cmp
jae
pminub
cdq
test
cmp
mov
or
repnz
rcl
ret
cmp
dec
push
ins
retf
and
stos
lods
xchg
inc
rol
xlat
fadd
ret
stc
sbb
lahf
mov
cmp
dec
xor
mov
mov
clc
cmp
inc
lea
and
lock
dec
nop
or
inc
jns
add
inc
sbb
sbb
adc
push
hlt
push
fstp
push
xor
cmc
addr16
mov
sbb
stos
inc
inc
push
fadd
je
out
adc
popf
imul
push
mov
and
ss
and
inc
mov
mov
inc
jecxz
push
jecxz
daa
nop
xlat
inc
jns
sub
mov
in
std
stos
ins
dec
ins
jb
lea
jne
cdq
ret
retf
xlat
or
in
ficom
outs
pop
push
cld
cmc
repz
outs
aas
ret
enter
call
push
rol
pop
jp
and
add
pop
retf
(bad)
xlat
lock
cmpxchg
cmps
cld
call
sbb
jg
mov
sti
call
pop
shr
ja
pop
leave
loopne
fs
leave
mov
das
call
add
add
sbb
retf
cmc
sub
adc
lods
cs
sbb
add
push
lods
adc
dec
inc
icebp
int3
mov
jmp
jmp
adc
push
das
mov
cmp
pop
into
fndisi(8087
mov
ins
cmps
mov
daa
int
adc
outs
mov
sbb
loop
adc
mov
lods
mov
lods
mov
fstp
inc
xchg
aas
cmp
arpl
iret
inc
mov
xor
cmp
ins
pusha
(bad)
out
adc
cmp
mov
mov
cs
test
repz
lds
or
adc
test
pop
xor
mov
dec
push
test
xchg
test
dec
mov
lock
cmp
fcomp
xchg
imul
(bad)
in
dec
aas
fwait
push
mov
ja
hlt
mov
fwait
sbb
lahf
test
movzx
fldenv
xor
(bad)
sbb
leave
outs
ins
fidivr
pop
(bad)
fs
mov
xor
and
pop
xor
add
retf
ret
mov
inc
sbb
das
sub
test
cld
loope
adc
or
pushf
leave
pop
test
ss
popa
cli
out
ds
mov
mov
sub
and
repz
fbld
je
cmp
movs
pop
dec
adc
imul
jmp
int3
std
sbb
mov
and
out
xor
inc
mov
stos
cmc
stos
dec
xchg
adc
outs
or
cmps
adc
aad
test
test
xchg
hlt
mov
xchg
dec
sbb
mov
popa
mov
je
push
mov
cmps
dec
lahf
fidivr
fstp
in
jns
mov
push
cs
mov
dec
call
mov
test
minps
daa
add
repz
cmps
pop
cdq
outs
jmp
and
stos
div
adc
(bad)
std
test
jp
movs
pop
stos
or
pusha
push
dec
add
or
and
rcr
loope
add
stos
retf
add
dec
popa
xchg
mov
out
cmps
dec
and
shr
fs
jl
cmp
pushf
icebp
sti
fcomp
pop
or
inc
or
es
inc
adc
or
(bad)
iret
inc
repz
inc
sub
ins
mov
aad
mov
jmp
imul
and
xor
push
pop
clc
add
dec
push
push
repnz
scas
dec
nop
sar
cdq
mov
pop
sbb
pop
add
dec
jb
sub
jno
mov
cld
das
cs
lods
hlt
js
loopne
jne
jg
pop
inc
repz
jl
in
adc
mov
or
pop
rcl
xchg
xchg
push
xchg
repz
mov
shl
mov
add
out
cmp
das
test
int3
call
mov
inc
shl
jmp
mov
dec
pusha
mov
enter
xchg
sub
inc
outs
cmp
push
dec
cmp
fisttp
shr
xchg
adc
daa
inc
mov
mov
sub
jae
jns
imul
cld
cmp
cmp
addr16
mov
and
mov
ror
or
loopne
pop
retf
repnz
es
in
(bad)
ins
fs
cs
fcomp
inc
inc
sar
sbb
sbb
push
je
pop
mov
stos
inc
aaa
cmp
xchg
retf
fiadd
inc
cmp
inc
mov
mov
test
xchg
adc
rcl
sar
xor
div
xor
jbe
fcomp
dec
jl
in
pop
adc
cmp
jl
pop
jp
dec
sub
sub
push
or
and
cwde
dec
dec
lods
add
mov
mov
inc
aam
mov
into
cmp
adc
fwait
inc
xchg
mov
xchg
into
xor
xchg
add
xor
xor
push
lock
push
iret
ja
xor
mov
out
mov
or
call
or
call
retf
stos
add
sub
lea
js
sub
pop
fimul
repz
add
imul
mov
ss
xor
mov
xlat
cmp
ds
cmc
cmp
outs
cmp
dec
repnz
jle
loop
or
call
jnp
inc
xor
cmps
jae
xor
inc
neg
sbb
jb
inc
sti
adc
pop
xlat
sbb
out
(bad)
out
into
and
(bad)
ror
or
cs
lahf
lds
xor
jecxz
leave
or
and
dec
jns
cmps
(bad)
jo
fistp
adc
pop
ror
movs
inc
mov
das
es
clc
mov
xor
leave
push
sbb
mov
jae
(bad)
test
repz
pop
xchg
pop
sti
cmp
test
mov
inc
add
jo
aad
cmp
scas
mov
and
inc
mov
dec
loop
or
inc
int3
mov
bound
sub
xchg
cdq
cmp
pop
cmp
cwde
lea
aas
pop
mov
mov
in
push
in
push
fild
sub
cwde
icebp
pop
loope
sahf
nop
daa
push
fild
fcom
mov
movs
stc
cmp
adc
dec
fnstenv
gs
and
loop
pop
rol
pop
xchg
fbld
inc
push
out
xchg
push
in
pop
stc
sbb
add
outs
in
push
inc
ins
push
popf
push
daa
mov
jo
cmp
aaa
inc
out
imul
and
das
xchg
pop
push
ds
sbb
mov
jb
(bad)
stc
clc
fist
sbb
(bad)
sti
and
push
cmps
fst
pushf
sti
je
jno
dec
ret
imul
movs
leave
push
mov
sub
jecxz
jmp
addr16
ret
add
jle
in
loope
push
jo
cmps
adc
out
xor
push
rcpps
shl
inc
sub
out
clc
popa
jae
or
into
movs
sbb
dec
call
je
fst
pop
inc
dec
outs
pop
out
dec
xor
ret
jnp
mov
xchg
enter
fnsave
imul
inc
jmp
adc
xlat
sub
in
rcr
retf
lods
jecxz
test
xchg
mov
dec
adc
push
xor
mov
or
inc
leave
dec
mov
push
mov
mov
in
fwait
adc
leave
fucomip
sbb
push
fcom
inc
into
xchg
mov
add
push
and
mov
or
fidivr
mov
pop
jbe
dec
mov
int3
mov
mov
lea
and
push
retf
inc
leave
push
dec
mov
jg
mov
add
popf
dec
mov
sub
mov
sub
in
cwde
sub
xor
cmp
pusha
mov
pop
mov
add
or
jbe
mov
pop
cvtpi2ps
fst
loopne
cmp
push
gs
cmp
scas
pop
(bad)
sub
mov
jo
push
sub
inc
imul
mov
dec
mov
ds
cld
fimul
add
popf
scas
ss
push
popf
or
mov
dec
push
pop
jo
jne
jle
or
aad
in
hlt
sbb
pop
test
ret
ret
cdq
sbb
sbb
xlat
call
sub
fcomp
cmp
pop
and
dec
mov
mov
mov
adc
(bad)
dec
idiv
mov
sbb
cld
jecxz
inc
mov
in
dec
mov
fiadd
and
jmp
jge
sub
jb
sub
adc
add
mov
mov
or
lea
mov
or
push
xchg
cmc
sub
pop
test
fwait
cmp
mov
in
movs
out
add
test
fs
addr16
adc
lock
jb
ret
frstor
mov
retf
adc
pop
inc
(bad)
push
jbe
inc
mov
add
mov
mov
(bad)
scas
call
call
jb
cmp
push
push
mov
inc
xor
call
mov
or
fldcw
call
mov
and
jmp
outs
add
imul
lock
sar
inc
aam
adc
(bad)
int
mov
mov
mov
les
daa
jo
jmp
pop
push
mov
push
jb
and
ins
or
dec
and
dec
neg
in
sbb
push
add
pop
lahf
xchg
and
in
aam
mov
push
pop
pop
pop
out
ret
ret
mov
pop
pop
out
pushf
ins
adc
jg
in
lods
dec
mov
jnp
xchg
xor
add
repnz
adc
stos
pushf
stc
or
or
(bad)
neg
in
and
push
adc
pop
or
jmp
mov
mov
mov
xchg
adc
sub
mov
jmp
mov
jge
push
inc
icebp
mov
mov
add
pop
aaa
push
inc
test
pop
into
sar
sahf
xor
std
js
mov
adc
push
xchg
cmp
or
imul
push
pop
jmp
inc
popa
mov
mov
pushf
jle
sahf
add
jmp
jg
mov
push
xor
xchg
pop
or
fs
repz
inc
and
retf
jmp
and
imul
aaa
xor
jo
scas
xchg
int
push
xor
adc
jnp
dec
sbb
cmp
pop
jbe
push
cmp
mov
push
out
and
shl
sub
mov
mov
mov
mov
jmp
add
lods
idiv
dec
jb
push
mov
jno
mov
xchg
dec
fsubr
push
clc
jp
mov
jmp
cmp
adc
aas
scas
sbb
push
xchg
repnz
fsubr
int3
mov
ror
push
cmp
movs
push
or
and
push
xor
dec
rol
in
into
stos
mov
test
outs
dec
leave
sbb
adc
retf
test
jge
push
inc
xor
mov
inc
nop
cmp
cmp
dec
lods
call
cwde
pop
push
jb
mov
jl
jbe
popf
jl
push
movs
add
fwait
mov
in
mov
ret
xchg
mov
push
mov
sub
loope
mov
outs
push
dec
inc
add
mov
push
mov
imul
jp
dec
int3
inc
aad
xchg
aad
push
xchg
lds
pop
xor
popa
shr
mov
test
or
add
cmp
(bad)
push
and
adc
push
cwde
jno
movs
arpl
imul
loop
bound
jmp
push
push
dec
mov
repz
xchg
hlt
sub
test
(bad)
imul
push
lds
mov
cmps
iret
and
push
add
loopne
daa
mov
and
into
dec
fnstcw
es
popf
cmp
add
shl
cmp
fwait
cmp
push
imul
sar
sub
stc
mov
xlat
sub
inc
pop
sub
cmp
mov
pusha
pusha
jecxz
imul
pop
and
sub
sbb
int3
push
xor
mov
inc
addr16
push
ror
jo
repz
ds
dec
out
dec
ins
add
inc
shl
dec
sbb
mov
xchg
bound
movs
jmp
rol
push
mov
xchg
jne
dec
sbb
mov
fdivr
push
outs
mov
sub
or
add
and
add
popa
cmp
mov
nop
add
rol
add
xchg
inc
in
cmp
cmc
push
sub
mov
not
dec
jbe
das
les
aaa
loop
mov
js
cli
lods
jl
cmps
sub
mov
add
ins
xchg
mov
jle
add
cmp
out
jl
iret
pop
aad
adc
scas
cmp
sub
call
sub
and
sub
add
into
test
sub
push
pop
sar
call
xchg
loope
sar
fstp
ret
in
mov
jb
jo
pop
push
and
rol
sub
inc
ja
push
adc
or
push
sar
ficomp
fadd
mov
jo
pop
hlt
dec
pop
inc
repz
sbb
xchg
push
or
mov
clc
pop
fsub
fwait
imul
sbb
push
mov
xchg
and
push
adc
add
inc
fisttp
jno
xchg
adc
mov
int3
cmp
push
in
add
and
sub
fiadd
adc
adc
lds
clc
inc
dec
ss
pop
or
or
enter
or
sbb
(bad)
fld
or
pop
ja
or
jo
aas
leave
mov
repnz
es
hlt
mov
adc
xchg
inc
ins
sub
jmp
aad
fidiv
dec
jle
dec
test
js
push
lods
shl
dec
imul
mov
shl
jl
mov
mov
loop
sahf
mov
fiadd
push
pop
xchg
dec
mov
and
loop
jb
sub
loope
add
xchg
mov
fld
xor
sbb
adc
sar
mov
xchg
lock
pop
push
pop
loopne
aaa
int3
clts
xchg
imul
xlat
cmp
mov
jno
in
sub
jnp
sbb
frstor
fdivr
pop
pop
mov
cmp
rol
fstp
(bad)
mov
cwde
movs
push
cmp
femms
test
mov
mov
cmp
mov
pop
xchg
add
pop
xchg
out
pop
pop
cmp
xor
adc
and
pop
loopne
mov
ins
ins
sar
mov
repnz
jp
pop
ds
xchg
pop
dec
out
mov
inc
push
bnd
xor
dec
mov
mov
sub
repz
jbe
xchg
pop
lahf
jmp
mov
stc
jne
sbb
call
leave
jg
xlat
cmc
push
cmp
int3
pop
out
addr16
xor
cmp
cmps
test
mov
outs
and
push
clc
fidiv
call
fs
aas
pushf
fild
mul
push
or
nop
cmps
rcr
fisttp
cmc
sub
jmp
fbld
sar
push
mov
bound
push
fs
inc
jle
cwde
or
sti
add
inc
mov
repnz
mov
arpl
mov
test
(bad)
fs
mov
outs
nop
adc
imul
jae
cli
sub
jecxz
add
mov
mov
sub
out
jno
fld
fcomp
inc
in
cli
jbe
pop
hlt
xor
push
int
mov
fld
sub
mov
or
adc
icebp
fcom
xor
in
xchg
push
or
sub
sbb
cmp
sub
lods
lods
scas
mov
fadd
push
jg
in
sub
cmps
sub
mov
arpl
sbb
add
jo
and
in
mov
pop
in
mov
sbb
push
xor
scas
pop
scas
add
or
gs
and
shl
rol
fisubr
sub
leave
mov
cld
mov
cmps
je
lods
leave
inc
cmp
mov
dec
int
rol
stc
push
ja
jbe
pop
push
mov
add
lock
mov
mov
fcomp
sbb
mov
push
mov
popf
ins
inc
sub
cmp
pop
mov
cmp
jl
cmp
mul
addr16
fistp
jge
retf
nop
cmps
das
xchg
mov
out
scas
mov
int3
or
ins
scas
es
push
(bad)
addr16
xchg
lods
xor
(bad)
std
inc
(bad)
retf
push
dec
jp
add
and
sar
lahf
repz
loop
mov
and
mov
cmp
arpl
sub
shl
aaa
cld
mov
xchg
cmps
jbe
mov
(bad)
daa
cli
not
std
cmps
ds
jo
clc
jo
lods
or
lahf
cmc
daa
jecxz
cmp
xlat
pop
xor
test
add
and
jp
packuswb
aam
in
mov
loop
push
jno
in
pcmpeqd
push
mov
or
sub
int
mov
pushf
movs
sub
retf
popa
xor
jb
xor
xor
fidivr
mov
lods
cmp
or
mov
jno
mov
lahf
mov
retf
lods
in
mov
or
adc
lock
jnp
mov
arpl
movs
pop
push
dec
ins
lea
cmp
add
scas
and
dec
jp
repnz
les
call
sar
cmp
mov
mov
sbb
sahf
jle
push
push
cmps
pop
push
ins
mov
pop
inc
mov
imul
imul
adc
int3
(bad)
test
mov
mov
mov
lds
dec
mov
xchg
dec
into
sub
call
ss
jbe
push
push
adc
inc
pop
cwde
movs
mov
inc
outs
push
cdq
fld
test
loopne
jns
mov
mov
dec
mov
add
or
ins
cmp
or
ret
jne
inc
aam
sti
sbb
in
stos
mov
mov
push
push
jae
pop
gs
or
sub
or
inc
ins
stc
nop
add
mov
sub
push
mov
js
pop
push
xchg
jb
sbb
mov
cdq
mov
js
sti
cmps
and
mov
ja
dec
inc
cmc
push
lock
adc
ins
add
add
jmp
mov
cmp
sbb
cmps
ret
jge
retf
sbb
arpl
jge
repz
scas
mov
dec
jns
jmp
fmulp
test
outs
adc
cmps
(bad)
int
xchg
fldenv
in
jle
sub
shl
dec
out
test
aam
and
sub
mov
inc
and
push
jnp
cli
sti
int
push
mov
or
in
test
stos
push
popa
out
fdivr
arpl
movs
test
adc
cmc
repz
jl
daa
out
fbstp
repnz
adc
cmp
fadd
inc
test
test
xor
xlat
shl
push
mov
push
sbb
push
fidiv
dec
in
jle
je
hlt
clc
pop
call
rol
retf
(bad)
icebp
rcl
cmp
cmps
jno
(bad)
mov
push
je
mov
cli
and
push
outs
push
adc
cmc
(bad)
std
push
xchg
push
mov
aam
stc
pop
shl
movs
pop
test
shl
mov
push
aaa
mov
cmps
adc
movs
sbb
iret
mov
mov
mov
bound
cmc
cmc
xchg
mov
xor
cs
or
mov
fist
jp
jecxz
xor
jne
mov
stos
add
jno
cmp
js
in
lods
add
sahf
fild
xchg
xcrypt-cfb
cmps
loope
dec
addr16
mov
mov
jno
xor
xor
movs
stos
add
mov
out
inc
scas
pop
xchg
or
jnp
in
add
pop
adc
pop
mov
sub
mov
and
fnstcw
loopne
test
jg
xor
push
mov
leave
icebp
push
fs
fistp
inc
push
xor
and
es
sbb
mov
mov
push
or
pusha
jb
fwait
or
jl
pop
cmp
fcmovnbe
or
mov
stc
out
push
(bad)
js
out
int3
sti
cmp
adc
icebp
sbb
(bad)
jnp
aad
push
mov
sbb
je
add
rcl
add
sbb
mov
jmp
sbb
test
xchg
out
lds
mov
dec
retf
bound
cmps
inc
dec
call
xchg
ret
popf
cli
fdiv
repz
push
test
das
repnz
mov
out
mov
jno
ins
inc
js
(bad)
fisubr
loope
adc
cmp
(bad)
loopne
cmp
push
scas
icebp
adc
mov
add
jl
cmp
cmps
dec
mov
mov
mov
loopne
mov
jne
inc
and
movs
push
push
mov
adc
in
jb
pop
xor
push
out
jmp
clc
int
ins
lea
mov
mov
jb
in
sahf
cwde
js
pop
call
idiv
sbb
cmp
nop
ds
loope
mov
xor
xchg
out
fsub
(bad)
jge
test
sbb
cmp
(bad)
loopne
cld
pusha
fsubr
in
xchg
lock
fldcw
inc
xchg
inc
mov
push
adc
mov
inc
leave
cld
jne
mov
sub
xchg
xchg
rol
push
das
jbe
in
loope
or
push
out
fist
ret
inc
mov
fisttp
xor
movs
dec
lds
repz
dec
out
in
loope
sub
push
into
mov
repnz
imul
scas
mov
das
cmp
mov
or
dec
lahf
or
fs
jecxz
dec
mov
add
dec
daa
adc
or
pushf
and
(bad)
(bad)
out
add
call
mov
mov
fcmovbe
jns
ficomp
pop
int3
and
adc
and
adc
test
mov
dec
out
mov
sub
and
icebp
and
mov
inc
test
icebp
push
(bad)
push
imul
mov
inc
xor
lea
jle
dec
mov
aas
xor
aad
adc
jmp
add
std
mov
jge
sub
jb
xchg
sahf
or
fwait
pop
jmp
test
adc
or
loope
sub
lahf
mov
outs
and
cmc
ds
pop
sbb
mov
movs
bound
leave
in
pusha
(bad)
xor
cmp
aas
clc
mov
sbb
daa
test
mov
mov
or
aad
pop
(bad)
out
pop
mov
stos
jne
sbb
ret
and
cdq
jne
push
pushf
(bad)
mov
imul
ins
adc
cmp
pusha
(bad)
push
js
ret
stos
jno
sbb
cli
xchg
add
xor
mov
jle
jae
xor
(bad)
imul
fmulp
add
daa
jp
ds
xchg
test
jno
retf
cmp
cli
dec
and
fidiv
cmp
dec
xlat
fisttp
xor
xchg
mov
call
sar
rcr
(bad)
jae
sti
xor
jge
adc
xor
push
or
hlt
jns
pop
int
into
dec
fcom
xchg
or
loope
fimul
mov
push
out
push
clc
sbb
jge
sub
leave
dec
es
or
movs
fwait
xor
aam
pop
mov
aaa
xchg
movs
cdq
loope
ss
gs
sbb
fadd
add
aas
push
jbe
lods
enter
aas
das
or
lock
into
jmp
cmps
hlt
inc
jo
mov
lods
pop
xchg
jg
pop
mov
pop
cdq
or
mov
mov
or
jne
(bad)
mov
sti
push
sub
scas
daa
pop
push
or
mov
fisubr
adc
push
test
(bad)
mov
dec
dec
push
int
cli
inc
fstp
add
inc
or
iret
out
cmp
shl
cmps
clc
cmp
loope
inc
es
int3
pop
mov
stos
push
scas
xchg
enter
push
gs
repnz
arpl
mov
test
ret
inc
cmc
add
loop
and
mov
je
loope
cmps
call
xor
sbb
test
imul
and
mov
aad
sub
or
jge
lods
mov
into
push
xchg
xor
outs
inc
xchg
mov
jmp
xor
pop
sub
pop
scas
adc
dec
inc
enter
pop
and
shl
mov
push
xchg
enter
jmp
push
hlt
into
xchg
fwait
mov
aas
xor
pop
jmp
(bad)
push
cwde
enter
sbb
jge
sub
mov
dec
inc
std
iret
daa
jmp
out
inc
add
xchg
mov
sub
scas
jg
test
lds
stos
div
jmp
outs
dec
and
in
mov
ret
xor
xchg
rcl
pop
sbb
mov
mov
jae
ret
sbb
data16
pop
int3
adc
mov
sti
stos
push
stc
and
xchg
mov
jp
mov
mov
sbb
add
(bad)
push
retw
lods
les
outs
pop
xor
jmp
xchg
sti
stc
lahf
cmp
(bad)
rcr
aad
inc
mov
push
(bad)
xor
push
add
fiadd
jmp
test
jl
cmp
pop
bound
push
in
test
cs
adc
inc
inc
push
dec
cmp
inc
xor
imul
jno
js
sub
xlat
sub
or
mov
inc
adc
jmp
xor
outs
inc
mov
mov
movs
mov
std
xchg
shl
clc
scas
hlt
in
push
(bad)
jbe
or
jmp
push
push
mov
cmp
ja
lahf
out
sub
mov
inc
ror
mov
out
sbb
pop
test
jge
dec
add
sub
stos
lds
xchg
xchg
sub
retf
ins
enter
mov
cs
jmp
lods
jle
sub
xlat
jb
or
push
mov
cdq
add
xchg
test
jecxz
push
jmp
inc
test
stos
clc
sbb
call
pop
repnz
xor
mov
dec
mov
adc
daa
fwait
push
jbe
loope
imul
adc
pop
xchg
adc
icebp
pop
fisubr
enter
and
fsub
aad
sbb
adc
jl
pop
popa
repz
mov
mov
inc
arpl
cmp
lds
mov
sub
push
daa
dec
cld
leave
test
scas
adc
imul
or
sahf
data16
popa
mov
mov
stos
mul
(bad)
imul
scas
call
mov
neg
aas
push
dec
stc
mov
pop
dec
add
jmp
mov
fs
jae
loope
clc
fadd
and
inc
jne
(bad)
xor
int
psrlw
out
(bad)
pop
cmps
rcr
or
shr
ja
sbb
xchg
iret
test
mov
inc
jo
stc
(bad)
stos
mov
mov
aas
inc
xchg
les
push
cmps
sub
test
retf
pop
in
cmp
mov
xor
dec
jns
xor
xor
inc
dec
adc
ins
sub
aam
add
sbb
ds
rcl
mov
and
(bad)
jmp
push
jmp
sbb
jmp
das
or
adc
outs
popa
retf
call
(bad)
stc
adc
enter
xchg
std
sti
push
leave
mov
lods
ds
jns
push
icebp
es
push
lock
test
ins
sub
ins
xor
retf
jb
and
and
jge
out
arpl
ja
dec
or
(bad)
mov
jb
test
jecxz
xchg
sub
mov
jmp
stc
cmc
or
rcl
std
gs
call
ja
pop
pusha
cli
movs
mov
int
xchg
dec
xchg
dec
cdq
xchg
gs
xchg
bswap
aad
pop
adc
mov
ja
push
rcl
add
sub
sbb
(bad)
xchg
pop
lea
push
and
int
mov
outs
pop
in
out
mov
daa
lods
call
int3
jp
add
stos
lea
addr16
or
test
push
inc
or
push
cli
pop
push
test
push
mov
sub
xor
test
mov
test
ret
xchg
xchg
fisub
sbb
inc
mov
cmp
jg
(bad)
pop
jbe
(bad)
mov
push
popa
and
push
repz
ret
loopne
hlt
or
stc
sbb
pop
lahf
je
ins
ins
repnz
mov
sub
inc
loope
stos
sbb
pop
pop
fld
iret
je
mov
mov
jmp
cdq
inc
mov
pop
mov
dec
aam
or
movs
ret
shr
inc
sahf
sub
inc
leave
cmps
and
inc
aas
cld
retf
cmp
inc
jecxz
xchg
nop
jecxz
les
hlt
dec
enter
jb
xor
fisttp
push
push
icebp
or
or
mov
cli
movs
pop
stc
xchg
test
test
push
into
pop
enter
mov
packsswb
mov
mov
push
cmp
in
rol
lahf
dec
mov
jle
stc
or
vsubss
scas
not
lods
scas
mov
xchg
or
lods
push
cdq
fild
dec
sar
retf
mov
ss
not
popf
stc
add
bnd
sbb
sub
popa
jle
out
pop
or
xchg
xor
mov
push
add
lea
(bad)
jae
(bad)
stc
scas
inc
lods
push
pop
lds
pop
repnz
mov
dec
mov
inc
cmp
(bad)
push
or
inc
cmp
push
adc
sbb
scas
popa
jge
out
pop
jbe
mov
aam
fdivp
ja
clc
jl
adc
mov
jecxz
adc
push
in
(bad)
pop
call
xchg
xchg
call
jmp
mov
rol
mov
ja
rcr
icebp
scas
add
outs
pusha
daa
dec
add
sbb
in
dec
in
mov
push
stos
lods
enter
pushf
int
sub
push
mul
or
inc
jl
hlt
push
adc
mov
fldenv
cld
mov
add
dec
js
mov
iret
jl
xchg
aam
call
mov
repnz
aam
pop
dec
pop
jg
inc
outs
cmp
mov
idiv
outs
fadd
pop
inc
push
add
mov
jae
cli
ds
jmp
mov
pop
in
xor
inc
adc
push
and
or
inc
pop
cmps
pop
sbb
stos
xor
pop
jbe
add
push
adc
(bad)
dec
cmp
lahf
inc
pop
pop
in
les
mov
in
mov
mov
xchg
adc
test
test
mov
jnp
jns
dec
jne
and
ret
dec
(bad)
loope
repz
xor
rcl
sbb
outs
imul
add
xchg
pop
inc
cmp
jmp
mov
rol
cmc
mov
push
push
xor
sub
dec
adc
repnz
popf
xchg
or
(bad)
mov
cmp
fcom
add
dec
jb
in
fsub
jo
pop
pop
cld
adc
shr
fidivr
jmp
outs
in
ss
iret
repz
je
mov
popf
xor
mov
int3
jmp
add
retf
pop
adc
daa
not
adc
pop
cmp
and
jge
dec
or
fdiv
push
dec
jmp
or
xor
lds
sbb
and
mov
aas
adc
or
jo
retf
sti
shl
aad
and
ins
mov
xlat
mov
xchg
ror
in
(bad)
adc
data16
sub
scas
mov
fwait
or
out
jge
xchg
dec
fadd
(bad)
shl
xor
jg
jle
gs
in
pusha
adc
push
jo
test
sti
mov
hlt
aam
inc
cmps
es
fmul
cmp
adc
inc
adc
out
je
dec
dec
or
pusha
scas
in
sahf
sar
push
aad
jecxz
push
ret
mov
jmp
xor
ficomp
inc
xchg
push
(bad)
jp
sub
popf
jno
test
sub
mov
mov
dec
or
loop
push
or
or
shl
ss
push
pop
(bad)
popf
ret
and
lock
pop
mov
jno
in
cdq
stos
mov
fisubr
cwde
adc
neg
or
jbe
iret
bound
and
pop
js
sbb
inc
ins
and
pop
sahf
(bad)
push
cmc
sti
fidiv
(bad)
mov
cmp
push
mov
jmp
cmc
adc
nop
call
jae
popf
outs
(bad)
pop
mov
bound
cmps
and
mov
cmps
icebp
cli
imul
or
(bad)
leave
pusha
outs
cmp
push
repz
pop
fadd
xor
(bad)
out
cwde
dec
rcr
ficom
rcr
test
pop
lods
xor
inc
xor
ror
arpl
ret
pop
fwait
ins
dec
cs
jmp
adc
xchg
jecxz
stc
repnz
jmp
adc
add
or
or
and
xchg
cmp
aad
jp
daa
rcl
enter
add
fistp
out
lds
or
fdivr
pusha
lds
inc
mov
repnz
or
in
or
or
dec
loop
mov
js
sti
mov
jp
mov
mov
pop
pop
adc
sub
into
mov
outs
imul
xor
push
ja
fidiv
shl
cmp
sti
jmp
icebp
mov
xchg
adc
aas
sti
fsub
(bad)
jmp
mov
(bad)
and
mov
repnz
loope
and
mov
shl
push
mov
cmc
cs
pop
icebp
dec
ins
cwde
sbb
add
push
pop
pop
out
sub
inc
ss
inc
adc
sub
pushf
aad
pop
xchg
pushf
jge
jle
mov
inc
xchg
jae
aaa
mov
je
push
mov
inc
dec
out
adc
xchg
or
mov
cld
jnp
inc
jo
and
jno
fcomip
lea
cmp
packsswb
clc
ins
into
cld
pop
ds
icebp
add
pop
push
jnp
out
pop
movs
ret
push
push
ret
sar
mov
stc
movs
fwait
push
xchg
arpl
repnz
popa
ja
movs
loope
int
xor
cmc
fmul
test
jmp
jecxz
lds
retf
aas
repz
cmp
scas
jge
aam
add
and
cmp
jne
sub
out
sar
int
sub
sbb
jb
xchg
pop
shr
sub
aas
push
int
cwde
ret
sbb
mov
call
mov
cmp
cld
mov
push
call
and
shr
lods
sub
mov
sbb
sub
les
call
stos
xchg
mov
and
mov
ret
xchg
push
push
les
loop
hlt
inc
sbb
in
sbb
(bad)
xlat
movs
es
push
cmc
push
or
xor
xor
loopne
mov
sti
mov
jae
jns
int
leave
sti
cmc
cli
loopne
(bad)
cmp
sbb
sub
mov
mov
sbb
in
jp
mov
jae
push
and
sar
ins
sub
or
mov
sbb
cld
inc
cmps
outs
repz
jecxz
add
jp
das
mov
add
fst
mov
lods
xor
mov
ret
call
mov
cmp
loop
nop
ds
xchg
aam
or
cmp
push
into
mov
fist
xor
mov
scas
popf
mov
xor
int
sti
jmp
(bad)
jno
lods
cmps
inc
(bad)
call
repz
mov
sub
and
push
jmp
cmp
adc
inc
(bad)
and
int3
or
cwde
sub
xor
push
or
pop
test
cmp
adc
or
jb
out
in
sbb
popf
pop
js
mov
ret
mov
gs
sub
xor
dec
(bad)
lock
dec
xor
jmp
arpl
mov
clc
ins
shl
xchg
jnp
cmp
jmp
fwait
sbb
sbb
cmp
dec
and
popa
inc
and
mov
adc
xlat
inc
enter
push
ret
cmp
cmp
mov
mov
sub
out
jns
mov
aad
mov
outs
leave
mov
pop
bound
mov
jl
push
aad
inc
scas
cmps
sub
in
outs
dec
xor
ret
pop
add
add
pushf
push
leave
xor
push
xchg
and
call
jmp
repz
sub
mov
into
sbb
xlat
cmp
dec
inc
in
fnstenv
mov
int
stos
das
ror
xor
ret
push
xor
lahf
mov
push
mov
repz
fst
mov
mov
sub
push
cmp
pop
jmp
lods
rcr
das
jne
retf
rol
sahf
imul
cmp
pop
xchg
jg
or
sbb
jecxz
add
scas
jmp
jb
outs
dec
out
loopne
test
retf
xchg
(bad)
lahf
xchg
mov
cmp
adc
mov
pop
mov
add
jns
add
cmc
mov
nop
sbb
push
push
push
mov
mov
nop
jp
in
cwde
mov
ins
pop
cmp
cdq
call
int3
les
sub
cs
mov
sub
shl
enter
cmove
mov
push
fadd
cld
aas
jmp
xchg
mov
fs
jb
jmp
mov
jl
or
repnz
mov
xchg
in
add
jl
mov
lods
test
ret
adc
les
(bad)
cmp
imul
xchg
fwait
mov
pop
and
inc
(bad)
aad
xchg
inc
cmp
ret
inc
jp
mov
fwait
xchg
ja
fimul
mov
retf
clc
pop
cmps
fmul
(bad)
jb
dec
in
aas
rcr
mov
(bad)
dec
int
data16
jl
fsubr
popf
pop
xor
das
(bad)
sbb
ret
sub
lahf
imul
jl
add
pusha
jne
(bad)
sub
pop
das
sub
jge
xchg
dec
and
mov
mov
icebp
aam
xor
(bad)
xchg
add
add
mov
pop
and
or
lock
fs
sub
adc
sub
repnz
or
(bad)
retf
mov
aaa
mov
test
xchg
test
push
std
xchg
inc
mov
mov
jge
pop
test
(bad)
ss
in
scas
or
les
mov
aam
sbb
in
jecxz
mov
test
jmp
adc
sar
test
sub
int3
aaa
gs
mov
mov
not
rol
mov
cmp
cmps
add
and
xor
leave
stos
rol
mov
fnstenv
push
jno
cdq
cmp
push
repz
or
mov
enter
ds
in
mov
aas
xor
call
mov
fsub
pop
mov
out
pop
ds
int3
mov
es
retf
pop
(bad)
lods
shl
fstp
inc
shl
sbb
adc
ficomp
stos
data16
out
cmp
cld
jbe
mov
int
cwde
imul
mov
sbb
sub
ss
pop
lock
imul
mov
retf
call
fisubr
xchg
push
call
sub
sub
add
jecxz
lods
or
jb
inc
dec
mov
inc
sub
ins
adc
xchg
loop
mul
mov
pop
loopne
pop
pop
shl
pop
jae
add
rol
push
push
inc
sti
stc
lods
mov
push
rcpps
xchg
cmp
cmc
inc
mov
dec
clc
jp
pop
call
jns
mov
push
and
les
scas
out
xchg
or
or
dec
sub
cs
cwde
scas
loop
imul
fistp
cmp
dec
and
dec
xchg
xor
test
push
lea
push
rol
mov
fyl2x
or
out
neg
(bad)
cdq
xchg
inc
clc
sub
or
jno
mov
jle
inc
out
jb
jge
scas
das
or
add
inc
adc
inc
repnz
xchg
sbb
jmp
push
sbb
popa
scas
mov
inc
jne
out
clc
pushf
mov
push
pop
lods
and
mov
sbb
nop
inc
imul
push
cmps
adc
dec
cmp
push
fs
mov
sbb
sbb
movs
mov
leave
test
sti
inc
lock
jno
inc
push
add
fisub
or
mov
mov
sbb
(bad)
clc
mov
push
jb
ins
das
jo
(bad)
js
pop
addr16
mov
out
xchg
inc
adc
ror
ds
or
imul
lods
dec
or
les
or
fisttp
int
mov
movs
pop
pop
sbb
pop
daa
xchg
sub
out
leave
test
cmp
cmp
jno
loope
cmp
xor
sub
test
retf
lds
and
cmps
jle
out
fs
adc
ret
cmp
xor
jecxz
cmp
cmp
push
jo
out
out
das
push
test
xchg
cld
sbb
mov
inc
jnp
stos
pop
push
inc
add
gs
sti
scas
iret
ins
sub
mov
popa
jecxz
(bad)
ins
jl
mov
in
(bad)
lock
push
cmpxchg
pop
mov
loop
xchg
jno
ds
push
jnp
sub
adc
movs
jne
aam
dec
dec
and
test
mov
popa
sbb
adc
js
icebp
mov
dec
push
add
push
sub
sub
add
cmps
sub
cld
jmp
loopne
xchg
stc
sbb
sub
lods
loop
dec
loopne
mov
pop
jecxz
push
cmp
lds
cmps
shl
xchg
stos
add
mov
and
jo
pushf
push
sahf
cmp
int3
pop
sbb
stos
mov
xchg
retf
les
pop
pop
loope
mov
xor
pusha
xor
retf
rcl
rol
cmp
(bad)
adc
aas
imul
adc
mov
mov
dec
repz
iret
lahf
movs
ret
int3
sbb
push
mov
or
mov
loopne
push
icebp
cwde
lods
mov
cdq
sub
stos
add
scas
dec
adc
scas
cmps
(bad)
std
jge
adc
into
jg
push
lock
jp
mov
ja
mov
and
outs
sbb
int
cmc
mov
iret
dec
mul
js
ror
jbe
jle
adc
fimul
imul
std
push
fsubr
jp
or
jmp
xor
push
mov
fdivr
push
neg
jl
je
cmp
and
aas
cmp
mov
and
int3
inc
and
scas
cmps
adc
lock
jmp
mov
sub
cmp
scas
sbb
mov
mov
or
push
clc
xor
(bad)
dec
addr16
js
sub
movs
das
adc
dec
mov
cmp
sub
mov
inc
sbb
sbb
sahf
shl
outs
adc
pop
das
in
add
mov
push
loope
and
pop
loop
sbb
xchg
add
jmp
in
and
fistp
pop
aam
jo
cli
stos
adc
inc
lock
popa
std
mov
mov
movs
outs
sbb
test
lahf
out
mov
cmp
ret
jle
(bad)
loope
cli
sbb
rcl
shl
push
dec
data16
mov
stos
mov
test
xlat
jbe
or
or
xchg
inc
inc
bound
bound
cmc
in
push
mov
jg
dec
loope
sar
call
mov
push
repnz
cli
pop
sbb
repz
or
(bad)
addr16
jg
jle
mov
cmp
mov
mov
shr
repnz
call
sar
in
adc
popa
test
pop
sub
hlt
jae
leave
xor
pop
xor
cmp
add
inc
in
sbb
jecxz
xchg
call
bound
add
dec
icebp
cmp
push
jecxz
cmc
adc
lds
stos
es
mov
inc
int
lods
xor
xor
pop
lods
in
(bad)
jp
aad
inc
div
loop
jmp
add
vhaddpd
daa
dec
cmp
in
or
mov
xor
ficom
jge
sub
int
test
jmp
sbb
mov
in
mov
movs
pop
mov
lahf
addr16
outs
cmp
hlt
jg
cmp
xchg
int3
mov
cmp
mov
in
daa
push
loope
fld
outs
sbb
imul
sub
cmp
mov
adc
test
push
das
sub
xchg
or
xlat
pusha
cmp
or
lods
inc
(bad)
mov
nop
out
and
icebp
call
mov
mov
xor
test
adc
mov
ins
pop
stc
push
xor
ja
hlt
push
(bad)
ror
out
and
add
test
in
cdq
sub
pop
fist
inc
push
xor
mov
mov
ins
xchg
in
mov
fldenv
pop
mov
out
mov
cdq
sbb
cwde
shl
call
int3
or
std
pusha
je
add
sub
retf
dec
adc
push
es
sbb
retf
bound
ret
xchg
clc
or
retf
mov
ds
push
mov
push
mov
add
pop
lock
and
mov
(bad)
imul
or
nop
adc
adc
mov
scas
mov
je
jl
mov
stos
push
xchg
push
pop
fimul
repnz
sbb
cs
mov
lahf
add
cmp
fcmovu
lock
es
test
jo
push
into
mov
ins
pushf
and
(bad)
and
or
inc
xor
sub
pop
std
jbe
out
test
jle
dec
jb
and
ins
pop
iret
mov
ins
adc
dec
sbb
fsub
stc
mov
aas
push
push
pop
pop
mov
aad
(bad)
pop
(bad)
fldcw
inc
xor
int3
shl
jnp
outs
mov
adc
shr
fild
daa
and
movs
push
cmps
mov
dec
shr
lock
in
aaa
jle
mov
test
(bad)
cmp
ja
in
retf
ret
push
inc
cmp
inc
push
dec
xor
push
sbb
scas
mov
(bad)
pushf
in
stos
int3
scas
push
cmps
push
dec
cli
es
outs
aam
repz
jae
in
push
mov
push
pusha
stos
shl
dec
sbb
inc
dec
add
test
nop
or
dec
pop
(bad)
sbb
mov
je
push
sbb
sub
jnp
shl
movs
movs
retf
mov
in
loope
ret
ins
mov
dec
add
jns
popf
ror
arpl
add
dec
cmp
mov
xchg
inc
fst
push
jp
mov
popa
test
mov
jno
gs
dec
dec
repnz
lahf
cli
or
xchg
mov
push
adc
pop
pusha
fiadd
sti
xlat
cmps
and
scas
jecxz
lds
xchg
jno
add
scas
outs
sti
cmps
vmwrite
in
dec
cmp
lods
inc
mov
out
stos
in
daa
retf
xchg
pop
pop
cmp
(bad)
cmps
imul
mov
add
mov
jmp
jbe
es
jbe
popa
mov
mov
push
out
push
(bad)
in
popa
popf
inc
inc
inc
out
outs
push
jge
mov
sbb
fs
xchg
jge
or
or
popf
fisttp
ret
(bad)
in
inc
loop
and
mov
xchg
imul
into
(bad)
ins
fdiv
push
arpl
popf
jae
mov
sub
pop
bound
and
add
pop
inc
cmps
cmp
dec
mov
jg
out
stc
je
in
mov
test
in
mov
mov
mov
js
push
in
jo
cld
mov
push
(bad)
xor
cwde
inc
and
pop
test
ins
cmps
loopne
mov
pop
inc
das
test
iret
in
stos
mov
in
test
or
mov
sub
mov
cmp
ins
mov
aas
pop
mov
or
test
and
fcmovu
sbb
add
jae
(bad)
out
nop
cmp
sub
mov
dec
jae
or
inc
adc
call
add
inc
aas
fiadd
loopne
dec
movs
in
clc
out
or
idiv
(bad)
push
dec
js
movs
leave
adc
adc
fisttp
or
add
div
inc
jb
mov
in
or
(bad)
sub
imul
fdiv
clc
(bad)
icebp
mov
dec
mov
or
out
or
shl
jnp
call
std
bound
sub
sbb
mov
push
ret
fnstsw
loop
lock
ret
neg
add
dec
pop
in
pushf
and
in
les
fadd
loopne
repz
loopne
xor
push
xor
ins
je
rcl
mov
movs
shl
dec
dec
pop
daa
lahf
cmp
and
adc
std
xor
std
mov
imul
(bad)
sub
inc
int3
loopne
shl
test
mov
pop
push
pusha
and
mov
cmp
cdq
xor
cmp
out
clc
and
cli
into
pop
idiv
(bad)
push
fsubr
cs
cmp
inc
pop
pop
mov
sbb
(bad)
or
or
test
ret
pop
sbb
lahf
or
inc
jge
pop
das
jo
push
lods
std
les
not
sub
xor
loopne
add
dec
jns
sbb
mov
rol
lahf
inc
jge
sbb
test
sub
int3
pusha
loop
adc
imul
idiv
sbb
shl
fwait
cmp
imul
out
mov
fwait
test
inc
repz
adc
xor
xchg
(bad)
mov
cmp
movs
dec
(bad)
cmp
es
fidivr
(bad)
dec
in
adc
and
sar
loop
add
daa
stc
sub
leave
ds
and
test
dec
sbb
sub
sbb
fnstenv
xlat
jmp
push
add
shr
loopne
iret
cmps
jecxz
mov
mov
sub
fucomi
sbb
xor
pop
inc
or
push
stc
push
jne
ffree
cmp
pop
cmps
mov
clc
mov
add
xchg
xchg
cmp
lea
mov
frstor
imul
rcr
xor
popa
ins
outs
rcr
hlt
ja
push
js
xor
add
sub
xchg
push
scas
sub
stos
add
cs
fnstsw
fcom
aaa
es
gs
out
adc
sub
icebp
loope
pop
lods
aas
pop
xchg
(bad)
sub
mov
dec
aam
pop
dec
pusha
jp
retf
or
sbb
pop
or
cmp
ds
in
ss
leave
xor
call
jo
jge
xor
mov
inc
cmp
das
dec
lods
inc
jp
rcl
push
sbb
adc
cmp
dec
sbb
out
dec
dec
jl
sub
or
xlat
sub
cmps
aam
pop
jae
inc
call
(bad)
pop
push
mov
stos
pop
addr16
lock
repz
js
push
cmp
pusha
retf
sbb
fld
or
add
imul
adc
mov
jmp
xchg
sar
cmp
mov
dec
mov
sbb
jb
jp
sub
shl
mov
mov
call
mov
add
add
or
ret
jle
in
push
mov
mov
stos
and
inc
jnp
jb
adc
fldcw
push
fnstcw
sti
mov
dec
or
push
push
push
lea
clc
jmp
xlat
push
add
jp
mov
movzx
(bad)
cs
push
pop
cmp
sbb
ins
retf
std
xlat
test
mov
in
pavgb
xchg
out
dec
ins
add
push
add
fldcw
sub
add
sub
dec
cmps
dec
fwait
mov
out
pop
add
xor
xor
std
lods
jns
sub
mov
fucomi
int
addr16
jmp
lds
int
ror
pop
inc
sub
adc
loopne
test
inc
adc
sbb
sbb
loop
es
adc
sbb
push
retf
pop
xor
sub
aam
out
and
test
mov
dec
aas
push
or
addr16
jle
pusha
mov
pop
fimul
retf
retf
pop
push
sahf
fisttp
sar
or
pop
clc
sub
cmp
adc
mov
shl
call
pop
mov
fild
jns
int3
push
xor
mov
in
inc
and
std
push
xor
inc
pop
mov
jbe
fadd
push
and
or
(bad)
push
xor
test
jbe
pop
jnp
sbb
iret
cdq
adc
push
shl
das
xchg
stos
nop
dec
aad
fcmovnu
push
sar
outs
(bad)
push
xchg
mov
jge
aaa
jmp
xlat
mov
clc
and
mov
clc
adc
repz
inc
ds
jg
mov
loope
pop
fs
and
xchg
(bad)
adc
arpl
jmp
dec
mov
js
loop
pop
add
push
xor
cld
xchg
push
pop
ror
test
out
bound
mov
sbb
inc
and
pushf
inc
inc
jmp
(bad)
pop
add
mov
inc
sub
scas
mov
pop
cdq
or
push
add
or
push
push
out
les
inc
arpl
out
(bad)
lahf
jl
inc
dec
or
adc
push
adc
or
inc
push
dec
mov
mov
cmp
pop
test
pop
jle
dec
(bad)
jp
in
std
sbb
mov
call
mul
imul
inc
adc
test
xchg
cmp
jmp
in
scas
jno
xchg
sub
data16
dec
jp
mov
mov
gs
stc
mov
ficomp
in
out
cmps
sub
ret
xchg
jo
jle
jge
pop
sbb
mov
push
cmp
test
push
dec
dec
sbb
mov
dec
lea
ds
jb
(bad)
(bad)
dec
stos
ds
retf
mov
fnstenv
lahf
mov
jo
dec
fistp
aad
ret
mov
fdivr
js
mov
mul
xchg
sbb
std
cmp
push
cs
(bad)
(bad)
jno
mov
jge
xor
mov
cmp
xchg
sahf
sub
mov
outs
cwde
rcr
mov
xchg
sub
nop
sbb
xor
(bad)
rcr
mov
push
test
mov
fld
cmp
push
out
sar
sti
pushf
retf
pop
shl
call
repnz
xchg
call
dec
clc
clc
cmp
mov
pop
std
mov
mov
outs
push
div
scas
scas
fs
je
pop
jmp
call
jl
sbb
mov
or
jns
fcom
fmul
dec
into
and
and
in
outs
mov
push
push
retf
inc
(bad)
stc
add
jns
rol
mov
push
scas
sbb
jbe
adc
rcr
stos
shl
(bad)
add
jo
test
dec
sbb
popf
shl
lds
or
cmps
out
fist
mov
shr
aad
dec
adc
mov
pop
lods
cwde
cmps
lods
inc
hlt
jb
out
cmp
js
xchg
sbb
(bad)
mov
ins
inc
repz
sub
popa
push
(bad)
fs
adc
inc
adc
cwde
mov
rol
cdq
movs
imul
pop
clc
mov
dec
push
dec
fst
mov
fidivr
sub
aad
cld
mov
xor
push
sbb
add
std
and
adc
ins
xlat
jg
fmul
ja
sub
mov
cmp
stc
int3
out
js
mov
aas
fisttp
out
dec
inc
bound
imul
mov
sbb
fsubr
sbb
(bad)
aad
add
out
pushf
jl
lds
fldenv
xchg
add
arpl
repnz
pop
push
lods
inc
cmps
cmp
movs
(bad)
dec
cmp
sti
jp
lahf
dec
cmp
pop
mov
pop
cmp
cmp
mov
sbb
dec
popf
inc
scas
dec
xchg
dec
out
dec
shl
sbb
daa
adc
sbb
xchg
add
dec
push
sahf
jno
jge
(bad)
mov
mov
mov
push
outs
cmp
sbb
pop
inc
adc
mov
inc
inc
jmp
shl
(bad)
sbb
into
dec
sar
mov
cdq
ror
push
cdq
daa
lds
out
mov
sub
xchg
ficomp
rcl
in
xchg
dec
dec
add
adc
rcr
int
add
pop
(bad)
out
in
xchg
mov
retf
stos
jae
adc
jnp
dec
jno
(bad)
pop
mov
retf
aas
push
mov
ret
jns
jmp
aaa
mov
fadd
xor
outs
inc
sti
je
jns
pop
or
or
jmp
and
mov
ja
and
mov
and
pop
mov
out
ins
cli
xchg
and
xor
mov
das
ffree
pop
aaa
inc
jg
jle
pusha
test
arpl
mov
jmp
nop
sub
idiv
cs
xor
xor
xchg
jecxz
cmps
aaa
in
(bad)
ror
xchg
or
call
scas
cmp
jge
sub
mov
sub
retf
add
xchg
jecxz
int3
push
pop
mov
pop
inc
aam
popa
pop
sti
lods
mov
or
and
push
add
movs
ret
lahf
js
outs
jnp
test
push
pop
test
lds
xchg
mov
inc
daa
shl
xchg
pop
xor
pushf
sub
mov
pop
cdq
je
pop
outs
icebp
jmp
sub
mov
jne
jl
loope
outs
mov
lock
rcr
adc
xor
(bad)
jmp
sub
cwde
ret
pop
int
int3
jge
xor
fs
pop
dec
xchg
or
mov
add
mov
hlt
or
bound
push
enter
aam
das
inc
daa
aad
out
call
mov
repz
jge
xchg
mov
ds
inc
loopne
aas
out
stc
jp
or
arpl
adc
popf
daa
cmp
mov
mov
out
inc
push
push
jmp
out
xchg
repz
mov
arpl
mov
test
(bad)
enter
mov
cld
mov
dec
loopne
and
jp
cmp
shl
adc
lods
ret
dec
data16
jp
adc
cmps
loope
cmc
xchg
ins
mov
cmp
data16
mov
pop
test
rcr
(bad)
rcl
sbb
cmp
cmps
aas
sti
pop
int3
push
cmp
movs
jbe
int3
xor
mov
pop
push
cld
add
jle
inc
inc
dec
dec
lds
jns
push
(bad)
pop
xchg
pop
mov
aas
pop
and
scas
pushf
inc
adc
push
jne
pop
adc
or
hlt
xchg
pushf
jmp
rcr
cmp
int3
jl
push
cmc
loopne
inc
adc
mov
ss
pop
lods
xor
nop
js
mov
xchg
das
es
loopne
cmp
in
icebp
xchg
mov
addr16
adc
pop
pop
lds
cmp
es
xchg
sbb
cmp
fbstp
inc
(bad)
cli
pushf
inc
xor
jnp
(bad)
cld
div
or
mov
mov
lds
sti
outs
jle
and
cmp
test
adc
(bad)
push
aaa
mov
push
push
bound
xchg
xchg
sbb
inc
movs
and
cmp
xlat
mov
outs
xchg
inc
repz
clc
xor
push
pop
xchg
(bad)
jmp
adc
rol
sub
cwde
xor
jno
loop
popa
add
gs
mov
or
into
mov
cmp
je
pusha
push
imul
mov
sbb
test
lea
mov
add
mov
imul
and
(bad)
or
xlat
and
mov
mul
inc
sbb
fldenv
mov
cmps
bound
jno
lock
sbb
arpl
clc
outs
cmp
cld
cmc
lods
push
mov
sub
repnz
xlat
nop
jecxz
mov
dec
push
fmul
add
adc
xchg
xchg
dec
loop
iret
push
mov
jp
add
jae
ins
dec
xor
and
(bad)
cli
sbb
and
xchg
loop
inc
test
cmp
imul
xchg
add
pop
in
rcl
xchg
inc
adc
inc
inc
out
dec
mov
jecxz
fcom
mov
les
mov
popa
sti
xchg
imul
add
out
adc
and
jae
aad
out
xchg
xor
jmp
dec
pop
jge
push
dec
outs
cli
cwde
inc
sar
hlt
mov
xor
jnp
retf
cwde
imul
mov
adc
jg
shl
dec
shl
dec
stos
xchg
xor
fwait
call
cld
pop
loope
mov
cmc
imul
test
mov
jno
loop
mov
mov
je
mov
sar
int
mov
nop
mov
jmp
jo
add
jp
mov
rcl
jg
xchg
push
lds
adc
popf
jp
daa
mov
aam
out
repz
dec
and
or
jb
push
pushf
movzx
js
jl
dec
mov
retf
inc
(bad)
repz
sahf
or
jge
lods
(bad)
sub
pop
inc
dec
and
mov
fcom
xor
imul
ficom
and
pop
and
dec
pushf
adc
dec
mov
mov
pushf
or
push
scas
adc
and
adc
call
mov
fs
stos
push
cmp
mov
dec
push
adc
cmp
mov
fisttp
leave
dec
mov
and
push
mov
cmp
cmp
sar
xor
repnz
or
push
mov
xchg
nop
aad
clc
fst
gs
and
jmp
pop
cdq
bound
adc
aad
sub
fs
or
push
repnz
inc
loope
jl
jnp
cmp
pop
sub
mov
in
idiv
jae
out
adc
jge
je
clc
(bad)
sub
xchg
push
call
lds
outs
xor
stc
cmp
cmp
add
and
mov
(bad)
mov
inc
xchg
or
mov
sbb
mov
pushf
mov
jle
xlat
inc
xor
lds
fdivr
mov
and
loop
aam
dec
clc
in
add
inc
mov
push
xchg
in
add
pop
sbb
ins
loope
jp
mov
or
mov
jb
cmps
(bad)
out
xchg
aas
jns
shr
fdivr
fisub
mov
xchg
in
cmp
cmp
in
sahf
push
add
movs
inc
loope
je
push
adc
push
and
lock
and
leave
ficom
mov
test
jge
lahf
add
in
pop
add
and
jl
push
mov
xlat
push
in
stos
jnp
int3
or
pop
leave
sub
clc
xor
mov
or
jl
repnz
retf
cmp
out
ficomp
sub
popa
add
xor
inc
call
imul
and
test
mov
(bad)
cmp
test
enter
ret
jns
std
jl
gs
mov
call
retf
inc
inc
cmps
stos
popa
ffree
jl
or
pop
xor
imul
and
mov
out
jbe
mov
push
sbb
fdiv
dec
sub
cli
cmps
call
mov
mov
mov
stc
ins
and
jle
hlt
jge
cld
es
fst
retf
xor
fisubr
mov
inc
xlat
rol
fucomp
call
imul
cs
sar
arpl
outs
xor
repz
sbb
push
add
cmps
inc
scas
fstp
mov
sti
dec
add
aaa
add
out
pop
xor
jo
clc
xchg
sub
lea
push
jbe
dec
aaa
and
mov
mov
ret
in
sub
inc
retf
mov
push
or
adc
call
mov
fcom
ins
mov
push
int3
mov
push
cli
scas
sti
cli
jge
pxor
jns
bound
(bad)
sbb
xchg
icebp
mov
add
cmp
jae
enter
stos
or
stos
out
or
in
cld
lock
lea
mov
sub
inc
mov
cmp
add
das
hlt
add
sbb
test
out
jnp
and
jle
mov
ja
add
(bad)
gs
fwait
push
jle
and
jns
pushf
lea
clc
and
sti
iret
fwait
adc
push
int3
ds
push
sub
sbb
stos
das
dec
rol
sbb
out
rol
inc
mov
jae
lahf
scas
dec
pop
bnd
dec
pop
mov
ds
aas
push
in
mov
pop
in
lds
push
push
adc
mov
cli
sub
loopne
pop
popf
sbb
mov
in
inc
mov
popa
sbb
nop
xchg
pop
adc
sbb
push
sti
stos
fwait
test
sub
out
xchg
in
lods
data16
pop
jge
in
inc
mul
out
call
test
mov
sbb
mov
or
push
xor
lods
xchg
xor
cld
jno
pushf
ins
inc
bound
pop
retf
jle
xchg
push
(bad)
fstp
and
dec
dec
and
xchg
jae
and
jb
pop
clc
inc
(bad)
fisttp
lods
xchg
push
mov
sub
cmp
mov
lock
(bad)
dec
lds
(bad)
sub
int3
loopne
sub
cmp
nop
mov
mov
rol
daa
adc
es
push
pop
dec
adc
or
sub
and
pop
popf
fwait
sti
sbb
and
fsubr
std
push
arpl
or
or
pop
aam
data16
jns
push
sbb
jbe
xchg
dec
out
xchg
xchg
into
enter
test
cmps
mov
aam
out
(bad)
jno
mov
adc
jae
adc
add
pushf
jb
aad
cmp
mov
and
push
into
push
shr
rcr
sbb
inc
imul
dec
xchg
lds
popa
mov
jl
adc
stc
mov
mov
jns
push
adc
or
and
xchg
inc
shr
cmp
cmp
dec
cli
adc
lods
dec
or
jl
or
adc
adc
inc
xchg
inc
mov
pop
scas
mov
xchg
cmc
push
add
jl
in
stos
je
sub
(bad)
daa
repnz
cmp
adc
and
push
mov
jo
xchg
aas
cmp
dec
test
or
sbb
mov
and
add
jp
mov
cmp
adc
adc
iret
call
mov
pop
les
(bad)
push
fidivr
ins
jg
add
ret
or
fadd
ret
add
push
addr16
mov
fwait
push
sub
xor
clc
pop
add
imul
sbb
mov
add
pop
adc
fild
mov
and
dec
ret
and
ins
retf
mov
mov
cli
popf
and
in
mov
adc
into
pop
push
std
jne
icebp
imul
stos
jae
and
xchg
jae
mov
xor
adc
adc
idiv
test
xlat
pusha
ins
aad
push
cmp
imul
addr16
call
out
mov
jae
xchg
pop
pop
inc
retf
sub
fdiv
test
dec
hlt
or
iret
or
mov
adc
fidiv
mov
in
cmp
inc
shr
add
repz
mov
adc
xor
push
or
clc
rcl
push
add
mov
adc
int3
jge
les
(bad)
push
push
inc
xchg
pop
sbb
(bad)
dec
jns
les
mov
add
nop
cmps
sbb
clc
ret
stc
shr
aaa
cmp
sub
and
mov
inc
sti
ss
out
adc
xchg
retf
mov
cdq
popa
mov
lea
or
fistp
(bad)
std
cs
(bad)
sub
cmp
ss
enter
sub
jno
mov
pop
sub
push
cld
idiv
jle
stos
cmp
cmp
push
cmp
xor
push
fiadd
icebp
xor
aas
fucomi
jle
mov
cmp
fld
jbe
(bad)
lds
sub
and
pop
in
jge
inc
and
xchg
mov
scas
pusha
or
ret
inc
das
call
mov
jge
xor
aas
pusha
dec
push
fmulp
(bad)
dec
adc
imul
and
frndint
mov
sbb
cmps
mov
cmp
or
(bad)
repnz
mov
cmps
ja
arpl
arpl
inc
loopne
xchg
cmp
jl
outs
iret
add
jmp
xor
mov
pushf
lock
mov
xchg
sbb
xchg
adc
test
test
push
xchg
or
add
out
cdq
pop
rol
and
out
dec
out
test
mov
mov
mov
adc
dec
or
in
dec
xchg
mov
sub
jne
mov
push
gs
shl
aam
jnp
sbb
jle
stos
(bad)
sub
sub
push
pushf
loopne
pop
push
cs
mov
mov
jl
cmp
sbb
ss
std
pop
add
mov
nop
ins
jmp
rcr
out
sub
mov
leave
mov
sub
xor
xchg
(bad)
fmul
out
push
adc
xchg
add
std
dec
leave
push
ss
ret
xchg
cs
fwait
sbb
loopne
stos
ja
inc
dec
pushf
jmp
inc
push
and
pop
out
mov
in
dec
or
(bad)
idiv
pushf
fucomip
shl
mov
pop
test
out
push
call
cmps
jge
jne
rol
mov
repz
fs
mov
mov
pusha
jo
and
fnstcw
jmp
jne
pop
outs
pop
clc
jp
shl
cld
or
imul
les
xor
fwait
dec
imul
inc
cmp
ret
fs
add
xchg
and
xchg
sub
push
mov
xchg
jmp
sbb
aas
sbb
mov
inc
ds
xchg
pop
or
ins
sbb
pop
stos
add
fist
test
xchg
mov
std
aas
gs
xor
cmp
dec
and
loop
add
(bad)
not
iret
pop
sbb
int
mov
scas
and
(bad)
jle
xor
push
pop
into
(bad)
in
repnz
sbb
out
sbb
mov
in
pop
fadd
ja
sbb
daa
sbb
and
rcl
jne
out
adc
aam
outs
lods
and
jp
xchg
jno
adc
dec
mov
ret
ss
scas
jae
stc
jmp
inc
pop
nop
lahf
cmp
out
add
int3
retf
mov
dec
pop
cmp
and
lods
sbb
data16
push
hlt
dec
mov
fcomp
nop
mov
push
jg
xchg
push
aas
stc
mov
push
jne
add
test
jmp
adc
enter
aas
in
fistp
ds
push
and
inc
pop
mov
mov
cmp
pop
jl
jnp
fcomp
sbb
shl
cmp
mov
test
popa
jns
xor
loop
(bad)
lock
das
pop
jmp
(bad)
in
mov
dec
jle
stos
pop
sbb
inc
mov
scas
sbb
cmp
scas
and
dec
or
adc
xor
int3
push
mov
xor
hlt
push
neg
jecxz
xor
xchg
jmp
jmp
or
lods
std
push
mov
ret
dec
or
push
retf
and
stos
xchg
adc
cmp
push
push
cmp
fdivr
jmp
cmp
cmp
je
jne
int3
sbb
sub
data16
and
xlat
jge
mov
mov
push
or
loopne
cmc
fistp
dec
jle
xor
dec
xor
lea
je
retf
sub
imul
add
xor
arpl
xchg
aas
movs
xchg
adc
dec
lahf
popa
fs
jo
fwait
lods
bsf
lahf
cmp
fistp
int3
pop
jle
sbb
stc
adc
gs
cmp
and
lock
mov
cmp
sub
cwde
push
les
push
hlt
sbb
not
adc
cmps
es
pop
sti
loop
imul
out
cmp
cmp
mov
test
dec
int
jecxz
xor
xor
dec
jnp
mov
bound
push
mov
(bad)
xchg
dec
inc
pop
mov
pusha
push
jl
cmp
dec
push
mov
cwde
shr
or
ja
bound
cmc
retf
pop
or
or
js
(bad)
pop
iret
lock
sbb
cmps
inc
jmp
or
mov
pop
(bad)
fiadd
xchg
bsr
lea
neg
xchg
dec
dec
test
out
adc
std
mov
mov
into
lahf
(bad)
in
retf
jae
sahf
stos
sbb
pusha
xchg
mov
retf
and
xor
jmp
and
sar
mov
fcmovnb
fisttp
xchg
fistp
jns
cli
add
pop
fnstenv
lods
cwde
out
jae
cld
leave
add
xchg
dec
or
ins
xchg
jnp
adc
push
lds
inc
fisttp
cld
(bad)
out
jns
das
adc
test
mov
sub
int
outs
mov
sahf
lods
xchg
or
out
sahf
sbb
push
cmp
jecxz
mov
mov
pop
inc
cli
popa
and
movs
retf
test
lea
aas
out
mov
cmp
xor
add
xor
jne
movs
push
adc
xor
dec
jb
push
outs
xchg
sub
das
xchg
call
jo
push
add
lea
pop
add
icebp
pushf
inc
dec
pop
adc
inc
enter
jno
add
(bad)
out
(bad)
nop
jmp
mov
inc
push
pcmpgtb
pop
jnp
cmp
shr
dec
ficomp
loope
movs
xchg
ds
dec
jecxz
mov
sub
push
lds
sahf
xchg
mov
rcl
out
mov
mov
add
add
adc
rcr
cmps
mov
cmp
adc
mov
(bad)
pop
pop
lahf
xor
inc
push
and
sbb
sti
in
fsubr
mov
xchg
mov
lahf
loopne
cmp
jl
mov
adc
clc
popf
dec
dec
mov
sbb
or
lds
mov
lods
imul
or
xchg
aam
addr16
adc
push
xlat
sbb
jge
sub
cmp
lock
sbb
int3
clc
cmp
lods
pop
add
aam
xlat
mov
mov
dec
add
sub
ins
aaa
sbb
fcomp
lea
and
mov
aad
into
mov
es
cli
rol
add
shl
xchg
or
or
sbb
mov
or
cmp
fist
xchg
sub
jo
push
fs
sbb
enter
mov
in
cmps
xor
dec
(bad)
aad
dec
add
xor
adc
dec
pop
and
cs
push
mov
push
retf
mov
gs
jecxz
mov
aas
ins
enter
sbb
sbb
bound
xchg
jne
movs
inc
test
pop
inc
pop
push
mov
js
int
stc
int
repz
mov
and
mov
fldenv
xchg
shl
push
or
fistp
sti
imul
sub
cli
out
push
cmps
not
mov
(bad)
sub
mov
test
ss
lahf
xlat
out
push
fsub
in
add
push
push
in
cpuid
xor
mov
pop
inc
adc
fiadd
mov
add
pusha
gs
push
(bad)
jl
xchg
cmp
arpl
mov
dec
loope
mov
lods
adc
xchg
sti
adc
rcr
pop
gs
rcr
ret
ror
push
sub
in
add
push
je
cs
cmp
addr16
scas
js
sahf
inc
and
pop
call
cmp
push
dec
lods
cdq
pop
es
jg
xchg
dec
fs
cmp
gs
mov
xchg
xchg
dec
inc
lods
out
xlat
xchg
jnp
fldcw
adc
inc
xchg
push
into
mov
cmp
cmps
cmp
outs
mov
in
movs
pop
cli
sub
mov
jnp
pop
xchg
mov
cmp
loop
mov
pop
out
xchg
loop
cmp
xor
iret
std
or
scas
bound
aad
(bad)
(bad)
and
cmc
pushf
aaa
pop
hlt
sbb
jmp
dec
js
mov
leave
adc
pusha
mov
in
aam
aaa
sub
inc
mov
push
cdq
mov
std
adc
push
sub
fstp
dec
jnp
adc
mov
adc
fld
adc
popf
cmp
imul
cwde
xchg
push
sub
cdq
xor
xchg
mov
cmp
jnp
daa
stc
bound
cwde
fdecstp
xor
sub
popf
repz
in
jno
mov
loopne
ja
sub
adc
ret
dec
jmp
pop
xchg
mov
push
rcl
enter
sbb
aad
movs
sub
inc
fimul
push
jmp
aaa
data16
in
out
push
jmp
ja
js
mov
shl
mov
ss
pushf
cs
dec
or
repnz
sub
xchg
pushf
mov
jo
mov
xchg
fs
call
(bad)
jno
inc
mov
aaa
movs
mov
cwde
pop
pop
inc
data16
sub
sbb
and
push
dec
enter
push
mov
jbe
push
pop
retf
test
jmp
add
dec
fdivr
mov
sbb
in
mov
push
push
retf
int3
xchg
in
jl
jmp
mov
mov
mov
ds
adc
sahf
js
mov
inc
js
sbb
in
sbb
mov
neg
sub
mov
ror
sbb
and
dec
ja
ror
jg
sub
jb
leave
in
movs
inc
shl
lea
sar
dec
sub
mov
ret
mov
push
in
mov
and
pop
call
idiv
xor
mov
mov
(bad)
and
test
push
stos
cs
pslld
dec
cmp
add
addr16
aaa
inc
xchg
add
sbb
push
lock
fbstp
xchg
outs
rol
mov
sahf
mov
and
mov
aad
cmp
or
int
push
test
xchg
(bad)
addr16
out
mov
xlat
dec
sub
inc
inc
test
xchg
sub
pop
mov
leave
mov
in
stos
in
gs
out
sbb
test
fwait
pop
cld
leave
and
fwait
clc
mov
test
lock
imul
add
push
pop
fnclex
inc
inc
pop
mov
push
call
mov
lock
mov
push
mov
lock
daa
cmp
fidiv
push
outs
sbb
cmp
adc
fwait
add
out
mov
sti
ds
je
mov
or
cwde
fldenv
out
es
inc
sub
adc
xchg
(bad)
jmp
and
fadd
pop
adc
lahf
wbinvd
es
pop
scas
cmps
push
sahf
mov
cdq
fidiv
xlat
(bad)
cdq
(bad)
push
mov
add
fidiv
xor
data16
fimul
cmp
cmp
movs
sbb
and
adc
out
pop
pop
mov
mov
ret
fsubr
inc
arpl
and
jmp
jae
fs
clc
jae
loope
mov
cmp
or
out
sub
push
das
in
pop
and
jmp
fcmovb
(bad)
loopne
and
loope
add
mov
adc
scas
gs
mov
gs
ins
(bad)
inc
in
sbb
clc
test
sti
xor
pop
xor
clc
(bad)
sti
sbb
cmp
(bad)
cld
add
shl
ins
cdq
fsubr
(bad)
pop
jb
push
popa
xor
jae
push
inc
es
popa
repz
sbb
push
fadd
(bad)
scas
outs
fdivrp
mov
xchg
ins
add
sahf
xlat
or
enter
fistp
adc
jecxz
sahf
inc
nop
jge
sub
sub
mov
test
lea
inc
sbb
add
push
loope
pusha
popa
inc
cld
or
test
fisub
mov
cvtpi2ps
arpl
scas
(bad)
jb
adc
(bad)
out
das
push
popa
(bad)
jb
dec
cmps
mov
push
mov
cdq
pop
mov
lock
in
xchg
ja
mov
stos
adc
xor
iret
mov
cld
psubb
mov
mov
lods
xor
clc
pop
out
(bad)
and
test
scas
add
clc
test
mov
or
in
js
add
outs
fnstsw
dec
xlat
adc
xchg
add
sbb
cli
add
or
outs
retf
and
jmp
sub
(bad)
jns
out
xchg
je
pushf
cmps
pop
js
ins
sbb
sbb
sub
jge
mov
xor
ja
or
nop
cmp
popa
daa
mov
mov
rcl
sbb
mov
fcom
rcr
(bad)
pop
cmps
cli
push
retf
mov
jmp
cdq
imul
iret
cdq
imul
mov
pop
outs
inc
jecxz
inc
inc
push
out
pop
ins
jle
clc
repnz
add
stos
or
jl
test
add
out
cmp
push
add
jle
retf
mov
mov
push
sub
xor
out
addr16
retf
loope
outs
jecxz
add
sbb
mov
loop
adc
adc
and
imul
mov
pop
inc
mov
push
in
sub
out
jg
mov
push
rcl
mov
pop
mov
in
fwait
jns
pop
jbe
dec
stos
mov
mov
lods
fldl2e
cmp
stos
mov
xchg
stos
mov
jno
jbe
and
(bad)
jbe
scas
sub
mov
neg
add
sub
gs
inc
jle
ds
or
aaa
mov
and
ror
xchg
fwait
pop
jecxz
mov
and
push
jb
xchg
nop
push
fmul
xchg
std
aaa
push
mov
ret
add
xor
sbb
test
sub
fnstenv
bound
ss
std
call
lods
imul
jnp
out
je
adc
scas
out
inc
jne
jmp
fbstp
fst
cs
xor
xor
add
outs
test
stos
cmp
cdq
jno
push
repnz
mov
inc
xor
fisubr
int3
bound
sti
mov
push
imul
adc
cmps
ret
pop
sbb
lea
nop
adc
out
pop
ins
xor
ss
(bad)
sti
mov
pop
mov
in
adc
mov
std
test
xor
pop
pop
push
xor
pop
clc
xchg
jecxz
out
adc
mov
mov
leave
add
mov
retf
stc
push
xchg
mov
xor
pop
fwait
dec
adc
push
aam
inc
cmp
cmp
dec
inc
mov
mov
jecxz
add
test
call
jne
mov
pop
and
mov
jb
add
lds
pop
mov
fs
push
mov
jg
dec
loope
pop
inc
cld
int3
fmul
lock
inc
iret
pop
lods
jnp
fisub
ret
lds
enter
sbb
dec
xchg
sbb
push
jo
fwait
cmp
out
mov
fadd
dec
jne
xor
xor
xor
xchg
mov
shr
mov
rol
push
pushf
push
cmp
pop
push
pop
xchg
push
push
fwait
pop
imul
xor
and
add
add
repnz
xor
xchg
mov
dec
xchg
arpl
test
(bad)
mov
mov
aaa
aaa
fld
mov
mov
pop
mov
jns
int3
mov
loop
sub
inc
popf
and
clc
in
inc
cmp
push
cmp
jmp
and
inc
sub
pop
mov
jmp
inc
sbb
or
xchg
cdq
jo
xchg
push
dec
mov
mov
jae
inc
in
cld
rcl
add
adc
ds
dec
push
fs
xchg
or
div
mov
mov
inc
dec
adc
dec
sar
jecxz
xor
stos
mov
jns
cmps
and
retf
or
retf
stos
cmp
push
jmp
push
into
in
fwait
mov
cmp
mov
ins
sub
fnstsw
push
out
ficom
cmps
loop
cmps
pop
push
sub
lock
mov
jno
mov
xchg
pop
call
mov
into
sub
cli
repz
and
dec
sub
add
inc
rcl
fwait
xchg
mov
pushf
cwde
jg
adc
call
and
cmp
push
mov
jne
stc
enter
adc
add
scas
hlt
lds
jb
ss
sub
add
push
sub
into
adc
je
fsubr
xor
lods
mov
out
inc
lea
cmp
inc
pmuludq
push
add
mov
adc
out
pop
and
pop
and
aad
pusha
mov
enter
pusha
test
xor
cmp
add
dec
push
pop
sub
fsubr
add
mov
sahf
sub
jmp
mov
cli
mov
std
stos
xchg
cdq
movs
test
mov
dec
packsswb
or
ret
inc
addr16
adc
fimul
imul
cmp
mov
jg
sti
(bad)
ja
mov
add
xchg
aaa
or
and
retf
mov
mov
bound
or
pop
add
lods
dec
push
sbb
aas
adc
fs
icebp
inc
out
je
clc
repz
and
ret
jmp
stos
xchg
(bad)
push
adc
sub
leave
push
xchg
fisttp
fiadd
in
xor
js
cs
add
xor
mov
adc
jae
jae
(bad)
bound
xor
retf
or
jl
push
loope
xor
xor
xchg
bound
mov
dec
or
(bad)
ror
dec
and
rcr
jmp
jp
dec
rol
aaa
lahf
pop
dec
lock
dec
out
mov
aam
test
aaa
sbb
ror
call
mov
mov
loopne
mov
adc
cli
call
(bad)
(bad)
mov
les
or
or
xor
push
test
pop
leave
cmp
mov
dec
push
test
pushf
or
jge
mov
push
pop
mov
pop
mov
cmp
stc
inc
(bad)
pop
sahf
shr
mov
fwait
mov
fwait
pop
jno
std
test
xor
mov
push
dec
sub
mov
adc
adc
mov
inc
sbb
xor
sar
jmp
mov
xor
rol
inc
mov
pop
ror
call
pusha
jno
cmp
scas
or
inc
sbb
sub
mov
test
(bad)
sar
pop
dec
xor
movs
test
adc
xchg
sti
sti
pop
add
pop
and
ret
into
sub
jns
add
or
pop
ja
fcom
retf
jbe
sti
gs
sub
jle
or
add
cmps
or
(bad)
mov
mov
nop
add
fwait
ins
jg
hlt
ins
ins
sti
out
push
ret
mov
dec
shl
pop
push
leave
pushf
les
xor
pop
mov
pop
lea
and
push
call
or
xchg
(bad)
xchg
pop
es
call
or
sar
push
fistp
movs
xchg
push
inc
loope
dec
jp
repz
and
enter
mov
mov
inc
adc
out
out
lahf
inc
popf
xchg
add
lea
cmp
adc
leave
pop
push
pop
xchg
(bad)
cmp
jno
leave
dec
and
scas
fstp
jl
push
mov
dec
js
mov
fistp
div
mov
dec
sbb
mov
jnp
dec
or
pop
pusha
cli
pop
xlat
and
(bad)
(bad)
mov
push
psrlw
or
mov
push
movs
dec
mov
jmp
xchg
shl
idiv
int3
stos
pop
test
(bad)
cmps
push
lahf
mov
fistp
outs
pop
into
mov
cwde
in
xchg
daa
or
popf
adc
js
das
retf
stos
xchg
call
mov
jp
dec
mov
adc
dec
test
sbb
outs
mov
sbb
cmp
icebp
stc
pop
jnp
sti
push
dec
mov
loopne
ss
push
add
pop
jb
aaa
test
and
movs
inc
test
xchg
sub
stos
inc
test
mov
dec
aam
fadd
movs
or
nop
dec
lods
jg
fwait
add
gs
call
(bad)
xchg
js
dec
in
dec
addr16
push
stc
pop
(bad)
adc
add
xlat
int
inc
jbe
dec
dec
daa
inc
add
shr
call
sub
pop
jecxz
inc
cdq
rcl
pop
fld
jmp
push
(bad)
(bad)
imul
popf
sbb
ds
or
and
test
inc
jns
xor
jl
iret
cmp
mov
jns
pop
sub
icebp
es
pusha
ret
fstp
std
in
cli
lea
lahf
retf
std
and
pop
lods
pop
mov
jg
sbb
jne
add
adc
add
mov
cmps
and
jge
push
jmp
leave
ret
cmp
jae
push
xor
retf
cmp
sbb
call
in
mov
xor
mov
push
daa
and
call
jo
xchg
pop
add
retf
out
sub
shl
mov
call
ss
or
stos
push
sbb
cmp
xor
mov
sbb
and
and
js
push
push
sbb
jae
jmp
outs
add
or
mov
sti
cdq
cwde
loop
pop
data16
xchg
xor
ror
mov
sbb
mov
push
rcl
mov
dec
jle
(bad)
push
xchg
mov
dec
fwait
xchg
or
mov
out
stc
pop
pop
and
(bad)
out
push
pop
addr16
xlat
int3
push
add
xor
fsubp
add
and
std
adc
call
jae
les
xor
retf
mov
or
pop
push
xchg
and
(bad)
mov
popf
jl
jecxz
push
arpl
scas
jno
clc
cmp
mov
mov
pop
mov
mov
(bad)
adc
icebp
jo
add
mov
ror
mov
dec
fsub
add
cmp
jae
out
adc
data16
cwde
rcl
lods
(bad)
mov
fdivrp
dec
cmps
movs
arpl
iret
daa
sti
mov
lock
jne
xlat
(bad)
repz
push
fs
into
xor
add
fdiv
add
adc
cs
call
js
outs
and
dec
add
push
stos
loop
div
call
addr16
cmp
std
or
jl
pushf
lock
aam
test
stc
mov
xlat
mov
jne
jg
mov
cmp
mov
movs
test
(bad)
cdq
and
adc
gs
stos
adc
pop
std
scas
cmp
clc
fs
jmp
mov
int3
inc
sub
aas
rcl
and
stc
scas
ins
inc
(bad)
mov
inc
(bad)
xchg
(bad)
repz
(bad)
fisubr
cli
push
dec
add
stc
inc
pop
add
addr16
aad
xchg
adc
mov
fild
dec
mov
xchg
fwait
xchg
fst
pop
sub
xchg
inc
xor
fild
outs
imul
daa
mov
hlt
lock
pushf
idiv
mov
sbb
hlt
dec
ret
push
pop
add
ret
xor
in
punpckhbw
addr16
push
adc
data16
test
int3
jbe
popa
stc
jl
fwait
sbb
cmps
lea
adc
(bad)
leave
(bad)
stc
dec
mov
mov
add
sar
pop
mov
sbb
inc
mov
xchg
dec
or
shl
out
test
cli
add
xchg
cli
aad
call
adc
and
sti
mov
shl
push
dec
ins
sti
cld
mov
test
sbb
in
or
fmul
mov
call
(bad)
out
xchg
or
or
(bad)
dec
icebp
push
sbb
push
sahf
out
mov
mov
push
cmp
mul
int
(bad)
sbb
or
call
sti
push
ja
sti
popf
(bad)
xchg
inc
mov
rcl
add
adc
mov
fadd
aas
jg
mov
div
mov
sbb
mov
sbb
add
cli
addr16
push
jae
adc
pop
call
xor
popf
and
mov
inc
push
push
and
xchg
xchg
and
and
das
push
in
xchg
pusha
mov
or
scas
pop
mov
pop
mov
sbb
enterw
jmp
dec
test
push
ja
in
inc
or
mov
fs
cmp
sbb
push
xor
sub
pop
xor
or
fcomp
adc
jb
fidiv
cmps
paddsb
inc
adc
gs
dec
cmp
push
push
scas
aam
xchg
adc
dec
clc
mov
mov
cli
mov
mov
push
shl
ret
jno
sub
mov
lods
cld
sub
in
and
cmp
cmp
test
jge
nop
ss
sahf
dec
jae
mov
mov
dec
in
add
push
(bad)
lods
sbb
sub
in
dec
push
or
shl
retf
mov
sub
inc
mov
push
jno
es
inc
cmp
call
lock
aad
inc
inc
mov
inc
mov
int3
cdq
and
popa
inc
and
or
fist
sbb
ret
lock
push
mov
mov
pop
outs
mov
in
jmp
loop
mov
call
dec
test
pusha
jnp
and
stc
mov
xchg
mov
push
rcl
pushf
and
xchg
xor
dec
sub
pop
sub
mov
stos
out
sti
pop
das
fcmovb
in
xchg
push
sub
int3
aad
frstor
sub
dec
xchg
xor
push
pop
dec
icebp
cwde
mov
pusha
push
sete
jmp
mov
addr16
or
pop
push
cli
test
add
cmp
sub
sbb
adc
xchg
mov
scas
pop
out
stc
and
sbb
push
(bad)
mov
loop
aas
loope
sbb
jb
add
ja
ret
push
pop
and
sbb
inc
pop
pusha
xor
fidivr
fistp
dec
xor
aad
test
fist
bound
push
gs
mov
cmp
stos
fild
mov
imul
pop
push
call
into
jae
mov
test
adc
sti
ds
jo
jb
daa
ja
cmp
and
retf
std
popa
xchg
and
mov
mov
mov
and
repz
jl
xor
test
lock
dec
dec
stos
retf
neg
int
clc
jge
jb
inc
out
aad
ror
mov
dec
dec
repnz
dec
sub
mov
mov
into
push
sub
jmp
jecxz
add
push
push
or
cmp
mov
sbb
or
sub
pop
int3
jne
test
arpl
inc
jmp
sub
push
out
push
mov
add
adc
inc
push
xor
in
dec
dec
movs
xchg
mov
sbb
stc
add
mov
inc
test
lahf
mov
jge
mov
es
fs
pop
cmp
data16
jmp
cmovs
or
dec
xor
lea
mov
pop
sbb
faddp
not
aas
mov
lods
push
ins
adc
pop
pop
retf
jae
repz
adc
fadd
dec
add
and
test
add
movs
pop
adc
daa
aaa
dec
iret
js
jnp
and
ror
hlt
push
pop
mov
cld
outs
jl
add
not
mov
mov
fs
xor
into
xor
sar
rcl
xchg
dec
mov
arpl
inc
inc
push
mov
lods
popf
popa
retf
in
pop
push
addr16
imul
xor
popf
out
push
and
jge
hlt
in
leave
pop
mov
ret
mov
push
shl
sub
fcom
jmp
stc
pop
or
arpl
shr
gs
mov
and
sbb
(bad)
cmp
xor
dec
push
ror
inc
add
dec
test
enter
adc
mov
mov
adc
dec
mov
arpl
jle
mov
das
mov
loopne
in
sbb
adc
into
sub
int3
cwde
sub
leave
idiv
jecxz
pop
dec
cmps
in
(bad)
mov
dec
mov
adc
retf
test
mov
jae
lods
mov
xchg
push
enter
push
movs
out
add
sub
ret
scas
cmp
gs
leave
ja
push
xchg
or
mov
or
shr
lods
adc
mov
test
dec
adc
or
pop
div
and
xchg
jmp
dec
xchg
ins
cmp
mov
movs
loopne
inc
(bad)
jmp
inc
ss
enter
sti
add
push
daa
or
cmp
cdq
mov
cwde
jno
xchg
stos
mov
aad
inc
xchg
pop
mov
imul
xchg
je
xor
into
jo
and
and
mov
or
loope
fild
xlat
sub
sar
jne
dec
loopne
(bad)
inc
loopne
pop
push
call
add
adc
fsub
jmp
sbb
sar
enter
bound
pop
mov
dec
inc
cmp
mov
es
push
xor
xor
cdq
jbe
xchg
xchg
jne
adc
mov
cmp
or
fdiv
pop
ficom
and
nop
fadd
cli
in
into
in
pop
fstp
push
sahf
add
and
ds
in
std
dec
fsub
or
jbe
adc
adc
enter
cmps
ins
(bad)
inc
pop
test
cs
lahf
sub
ror
pop
into
or
ja
mov
pop
test
or
xchg
repz
mov
add
imul
mov
fwait
rol
aaa
outs
and
push
push
jle
sub
lock
dec
mov
hlt
dec
(bad)
cmp
push
cmps
das
ins
iret
enter
loope
mov
arpl
xor
into
adc
imul
sti
cwde
shl
mov
ins
movs
adc
arpl
jecxz
mov
mov
in
loop
dec
jno
(bad)
pusha
push
lods
cmp
xchg
in
clc
cmps
aaa
loope
jno
xor
inc
dec
mov
sbb
fwait
dec
xchg
inc
out
ret
xor
add
das
and
add
sbb
aam
mov
adc
inc
inc
push
mov
fsubr
cmc
pop
clc
std
pushf
mov
or
dec
push
out
test
xchg
pop
(bad)
in
mov
cmp
movs
fisubr
call
scas
fisub
fadd
je
bound
fdivr
sub
mov
popa
mov
sub
cmp
loopne
dec
jae
cmp
mov
aas
push
mov
loop
in
and
lods
int
mov
dec
test
call
les
lahf
aam
mov
shr
aaa
fidiv
sbb
dec
pop
or
inc
out
fldenv
mov
dec
add
mov
pop
xchg
iret
xchg
xchg
sbb
in
push
fisttp
pop
xchg
inc
imul
inc
sbb
(bad)
stc
loopne
retf
push
imul
shr
fs
xchg
cmps
lods
jp
cs
jnp
or
call
mov
sub
(bad)
into
cwde
outs
(bad)
movs
aas
dec
or
repz
call
cmp
call
sahf
adc
cli
hlt
inc
js
inc
das
inc
clc
gs
mov
int
pop
(bad)
(bad)
push
push
push
(bad)
mov
sub
dec
retf
rcl
enter
dec
mov
push
ret
add
movs
dec
mov
sahf
and
repnz
xchg
out
xor
jnp
fnstenv
push
outs
push
xchg
xor
xlat
cmp
mov
popf
es
sub
and
(bad)
lds
lahf
stos
pop
pop
cwde
(bad)
cwde
dec
xor
data16
xchg
iret
(bad)
stc
add
fldenv
int
inc
xor
mov
out
jns
push
retf
jl
ins
cs
or
hlt
enter
aam
push
nop
jmp
cmp
xor
and
adc
dec
imul
call
test
dec
test
xor
dec
xor
dec
in
xlat
inc
dec
fisttp
icebp
stos
pop
mov
adc
out
cld
imul
loope
jne
mov
popa
add
sub
hlt
mov
push
aaa
inc
movs
push
jns
push
lea
fwait
cmc
pop
sbb
mov
adc
dec
imul
fdivr
aam
mov
pushf
aad
call
push
jg
je
sar
push
mov
das
ins
retf
into
loop
xor
aaa
push
call
fsub
cmps
je
add
lahf
add
pop
call
mov
repz
imul
add
cdq
ins
pop
(bad)
dec
inc
mov
push
sub
push
js
lds
add
stc
imul
clc
or
mov
pusha
xchg
sti
push
std
fnsave
inc
sub
pop
out
or
push
pop
lea
xchg
(bad)
and
retf
das
and
shl
mov
dec
jmp
jne
rol
sub
adc
push
movntq
jecxz
gs
jle
mov
add
imul
rcr
sub
loope
cmp
nop
mov
fimul
sub
cmp
dec
jmp
and
jo
cld
mov
cmp
(bad)
jae
jg
mov
pushf
loope
test
mov
mov
or
sbb
ss
mov
cwde
xchg
call
aam
pop
xor
jp
or
loopne
cdq
arpl
xor
dec
cmps
jbe
push
mov
daa
pop
push
pop
aas
xchg
push
ins
(bad)
mov
dec
jl
(bad)
das
xlat
fcomp
loope
jnp
in
inc
(bad)
fidivr
fidivr
and
sbb
dec
xchg
imul
ins
popf
mov
fld
icebp
xchg
(bad)
aad
loope
sar
shr
mov
mov
mov
scas
pop
mov
das
aaa
(bad)
mov
cmp
sbb
jae
xchg
xchg
mov
inc
aad
jno
fcmove
sub
inc
jbe
or
push
loop
pop
sub
xchg
cmps
mov
sahf
push
je
adc
mov
push
inc
scas
mov
lods
push
stc
retf
pop
(bad)
out
mov
add
test
call
fiadd
les
or
dec
push
sbb
cli
int
je
fist
push
push
push
or
inc
cwde
shl
cld
and
es
sbb
repnz
or
fild
sbb
dec
in
fcom
repz
hlt
or
ror
aaa
mov
push
outs
add
movntq
bound
mov
ror
jns
xor
pop
push
js
add
xor
or
xchg
mov
sbb
or
cmp
imul
in
jl
mov
adc
cmp
popf
lahf
xchg
out
jmp
stos
pop
call
cmc
push
xor
fld
popa
mov
shl
pusha
sub
test
pop
mov
stc
pop
xor
inc
cmc
in
add
and
xlat
xor
rcl
jmp
lahf
ja
sub
cmp
icebp
stc
invd
sub
jle
add
adc
enter
cmp
in
or
les
or
sub
int
xor
mov
out
cld
xchg
pop
nop
cmp
jecxz
push
seto
pushf
scas
add
pop
test
cld
xchg
sbb
mov
push
jmp
loop
adc
fsub
xor
dec
mov
pusha
das
xchg
push
inc
mov
pop
retf
push
mov
call
sbb
jnp
scas
xchg
sbb
mov
pop
ins
and
or
sbb
push
add
add
xor
add
dec
cwde
aaa
test
add
or
lods
pop
push
imul
(bad)
int
inc
enter
cmp
jp
adc
push
fisub
xchg
push
push
mov
inc
cli
popa
les
stc
add
imul
dec
or
and
mov
daa
pop
xlat
outs
dec
movs
mov
je
rcl
xor
fsub
mov
cwde
sbb
aam
data16
neg
call
cmp
jno
inc
inc
rcl
jmp
pop
mov
test
fs
(bad)
sar
jnp
sub
test
xchg
jb
ja
or
mov
pop
mov
sub
jnp
pop
stos
in
sbb
and
mov
adc
mov
sbb
sub
or
ror
cmp
retf
pop
mov
sbb
xor
out
xor
aad
inc
scas
or
xor
sub
xor
aaa
inc
mov
lahf
stc
lods
add
mov
add
mov
clc
pushf
xor
and
push
and
dec
rol
and
mov
popf
cmps
adc
icebp
sbb
xor
pop
enter
add
or
fnstsw
cs
sahf
icebp
adc
xchg
cld
push
push
shr
test
xchg
pop
in
sbb
cs
xchg
mov
mov
push
and
sbb
into
fnstcw
out
dec
sbb
hlt
outs
ins
adc
jo
dec
cwde
mov
or
(bad)
loop
aam
bound
xlat
cdq
int3
hlt
lds
imul
add
pushf
aam
test
push
cli
mov
inc
int
shl
dec
push
sbb
mov
call
mov
jp
movs
jne
es
fcomip
scas
xchg
call
daa
adc
jo
lahf
ja
(bad)
dec
fiadd
inc
bound
sbb
mov
(bad)
adc
jno
into
test
fimul
inc
ja
mov
xor
inc
xchg
pop
pop
test
xchg
out
into
cmps
mov
dec
outs
dec
in
inc
mov
jg
not
jbe
stos
fs
rcr
adc
mov
movs
xchg
call
(bad)
out
fld
push
outs
xchg
mov
fwait
xchg
mov
push
(bad)
pop
mov
xor
mov
mov
stos
xchg
inc
mov
pop
cmp
pop
outs
sbb
cdq
mov
fisub
aam
pop
gs
pop
mov
mov
push
add
mov
xchg
loope
xor
test
jnp
scas
mov
push
cmp
cmp
fst
push
leave
addr16
sub
adc
push
mov
lea
or
jo
(bad)
inc
jecxz
cld
jo
xor
jb
movs
mov
addr16
push
shl
jmp
pop
xchg
pop
mov
cmp
sti
sbb
pop
add
test
xchg
aam
and
cmp
and
outs
out
dec
out
jo
dec
in
jmp
cmp
xor
adc
or
shr
sahf
fimul
cmp
inc
adc
stos
sbb
pop
(bad)
jg
(bad)
enter
sbb
out
jae
xchg
push
jmp
push
add
push
mov
fild
scas
push
and
mov
dec
adc
inc
stos
push
in
jecxz
call
aaa
push
ins
cli
mov
mov
inc
(bad)
mov
mov
add
aam
add
fdiv
mov
mov
enter
push
or
mov
lods
sbb
repz
pop
dec
jno
or
dec
int3
mov
(bad)
int3
xor
xor
ficomp
mov
pop
sub
mov
imul
aad
sub
loope
fnstsw
fldz
mov
sbb
or
dec
push
add
add
js
inc
jbe
push
fisubr
mov
js
icebp
addr16
ds
dec
mov
push
mov
inc
fs
adc
test
das
dec
pop
fstp
data16
or
retf
int3
popa
push
xchg
mov
ds
sub
test
mov
mov
and
mov
into
and
repnz
fldpi
lock
addr16
pop
dec
or
pushf
in
mov
inc
test
push
sbb
xor
cs
sub
xchg
push
scas
fidiv
cmp
push
les
in
pop
cld
push
and
jne
int
rcl
cmc
dec
fdiv
dec
dec
mov
mov
inc
jge
cdq
sub
xlat
rcr
loopne
dec
popa
mov
fmul
out
adc
pusha
inc
cmps
fcmovu
movs
dec
or
mov
stos
xor
daa
sub
lea
lock
retf
gs
mov
pop
adc
scas
fwait
adc
mov
in
bound
add
outs
push
retf
push
xlat
pop
xor
stos
jg
mov
stos
pop
sub
push
cs
stos
call
mov
out
inc
stos
adc
xchg
inc
aad
inc
int3
and
dec
push
push
sti
sub
aam
into
cmp
aaa
mov
or
popf
push
jae
div
mov
xchg
or
and
mov
jmp
gs
pop
or
mov
push
bound
mov
inc
shr
sub
scas
or
inc
jg
jecxz
movs
push
or
pushf
push
inc
push
shr
fwait
cmp
scas
cmps
mov
or
jecxz
dec
push
fdiv
or
sahf
dec
ds
stos
stos
and
or
push
popf
mov
pop
(bad)
and
push
test
xchg
mov
xchg
pop
xor
mov
add
loop
mov
cs
out
enter
mov
jno
cmc
add
sbb
ja
inc
out
sahf
jmp
pop
cmp
cwde
mov
or
mov
dec
dec
or
fwait
sub
inc
pop
cdq
cmps
arpl
xchg
(bad)
movs
movs
push
in
cmps
scas
mov
push
clc
add
pusha
test
xchg
dec
shr
sbb
fimul
push
ret
loopne
sti
ds
dec
push
push
repz
xor
cmps
xchg
sub
ds
std
mov
mov
sub
cwde
ds
stos
sbb
daa
lock
sahf
popa
mov
arpl
repz
jo
in
dec
or
(bad)
sub
cwde
inc
bound
xor
push
mov
fimul
sbb
jnp
not
por
in
popa
mov
pop
cmp
inc
adc
xchg
adc
mov
pop
call
sub
mov
mov
clc
xor
mov
or
not
scas
iret
xchg
sbb
mov
jmp
dec
xchg
mov
mov
jns
jb
sbb
movs
mov
jg
adc
cmp
push
mov
test
jae
xor
outs
rol
aaa
std
adc
aam
addr16
pop
test
sub
push
pop
push
retf
mul
scas
aad
imul
fbld
push
jmp
lea
out
int
leave
(bad)
mov
ret
or
cwde
mov
cmp
call
loop
repnz
mov
pop
adc
mov
xlat
pop
(bad)
push
adc
fmul
sbb
cli
cmp
adc
xlat
fs
addr16
xchg
sbb
pop
(bad)
rol
dec
stc
dec
mov
fdivr
ret
scas
xchg
dec
loop
dec
add
jb
popa
mov
ins
xor
sbb
inc
into
pop
mov
outs
inc
or
push
fs
push
cmps
std
call
inc
sub
mov
stos
pop
repz
and
cmp
movs
sbb
sub
inc
cmc
pop
or
sbb
xor
inc
fist
sti
pop
cdq
hlt
jl
(bad)
leave
jecxz
out
jmp
inc
and
cld
jg
shl
mov
retf
popf
push
gs
dec
sbb
repz
pop
popa
push
out
pop
shl
idiv
popa
pop
lea
popf
test
dec
dec
or
jo
retf
test
imul
imul
cdq
push
xchg
js
outs
mov
push
pop
and
jnp
pop
pop
int
mov
mov
dec
jle
and
stc
sbb
pop
adc
pop
pop
stos
inc
in
ror
pushf
(bad)
pop
stos
movs
push
mov
lsl
aad
sbb
bound
cmc
jle
lods
or
test
loope
sbb
jae
fsubr
dec
in
or
push
dec
inc
mov
or
cs
scas
popf
fsub
fcomp
fdivr
dec
pop
and
lods
outs
mov
sbb
mov
pop
cli
pop
aaa
cmp
jmp
sub
movs
mov
push
(bad)
cmc
lods
ror
jns
mov
dec
mov
dec
add
mov
outs
mov
rcr
and
inc
sbb
mov
scas
pop
stos
bnd
sub
sti
push
mov
fcmovu
or
test
loope
jl
pop
stos
or
addps
dec
leave
loopne
cmp
pusha
push
mov
xor
rcl
jo
dec
mov
out
xchg
hlt
mov
mov
sub
ret
xor
inc
push
mov
stc
retf
jo
outs
dec
into
jb
mov
cli
ja
pop
pcmpgtd
into
jns
imul
jb
xor
into
rcr
or
loop
dec
jne
inc
lea
inc
gs
clc
cdq
sbb
adc
xor
(bad)
icebp
out
xchg
inc
shr
mov
mov
std
or
jbe
jne
push
and
sub
inc
jae
push
push
rol
or
rcr
xchg
mov
or
std
sbb
fwait
shr
dec
jnp
mov
lahf
jge
xlat
jnp
push
(bad)
push
or
les
pop
fisub
dec
test
jle
cmp
cld
fist
xchg
adc
aam
mov
pop
mov
jbe
outs
ins
es
test
push
test
not
or
inc
jne
movs
add
std
jno
mov
pushf
sbb
adc
add
(bad)
gs
in
int
int3
mov
pop
cmp
nop
je
jne
xchg
stc
mov
es
sub
clc
pop
cmp
sbb
fild
pop
stos
adc
push
mov
push
test
adc
mov
and
cmp
xor
pop
(bad)
mul
dec
cmps
push
leave
cwde
int
or
sar
data16
aaa
inc
mov
pop
mov
rcpps
leave
movs
mov
cmp
test
xor
push
and
jb
mov
dec
sub
mov
mov
sbb
and
das
out
add
fcomip
add
push
xor
and
(bad)
(bad)
bound
pop
cmps
push
ins
test
mov
push
(bad)
clc
retf
mov
jnp
mov
in
mov
xchg
mov
arpl
and
in
aad
div
lds
popf
out
xor
outs
mov
jmp
daa
pusha
aas
rcl
loop
jg
mov
push
lahf
sbb
adc
adc
imul
jmp
dec
sahf
arpl
sbb
push
hlt
outs
cwde
xor
and
xor
pop
ss
inc
das
rol
xchg
scas
mov
popa
outs
leave
scas
mov
ficomp
pusha
pop
jl
pop
xchg
(bad)
sbb
shr
jmp
test
xchg
jnp
sbb
icebp
mov
pop
loop
pop
xor
iret
bound
mov
xchg
loopne
movs
fstp
sbb
iret
mov
push
or
pop
fsub
xchg
(bad)
popf
popf
mov
rcr
shl
outs
arpl
mov
repz
cs
dec
fst
dec
pop
jl
xchg
test
aaa
rol
adc
pop
int3
or
sub
inc
and
popf
imul
xchg
cli
add
mov
(bad)
push
test
aad
ins
inc
outs
mov
xchg
ds
cs
push
and
test
aad
(bad)
ror
lahf
lea
dec
push
mov
cs
mov
jmp
stos
shr
or
out
fs
xchg
nop
dec
jle
push
lock
icebp
mov
test
aad
inc
push
inc
leave
(bad)
into
pop
sub
aam
enter
call
mov
cs
push
mov
stos
test
add
or
sar
add
arpl
or
cli
mov
repnz
sbb
push
xor
jne
or
popa
xor
sbb
mov
rol
mov
adc
nop
add
rcr
lods
mov
and
mov
lock
fsubrp
les
push
pop
fdivr
xchg
in
inc
push
jae
pop
dec
inc
inc
adc
popf
outs
add
add
and
and
mov
arpl
mov
ds
hlt
clc
(bad)
dec
and
rol
cs
fsubp
mov
pop
mov
cs
jo
repz
sub
xor
mov
jmp
ja
stos
sub
add
not
dec
jnp
stos
xlat
pop
mov
jae
xchg
pop
mov
(bad)
jmp
add
add
jmp
call
imul
lahf
les
jp
sub
mov
sbb
xchg
mov
loop
leave
or
gs
hlt
into
pusha
pop
push
repz
jns
adc
sahf
and
cmp
inc
out
les
cmp
sub
mov
stos
jo
and
daa
jb
cmps
dec
push
xor
xchg
push
ds
fld
push
sbb
or
ss
add
push
dec
dec
inc
and
in
cwde
test
std
pop
inc
cmps
pop
into
jle
push
push
fadd
idiv
jmp
enter
push
jg
lahf
lds
push
sbb
ror
mov
call
ss
inc
ret
sbb
sbb
xor
pop
jp
sbb
test
mov
inc
xor
mov
out
arpl
lock
push
sbb
fcomp
movs
add
xchg
mov
xchg
xchg
add
loope
addr16
imul
mov
inc
push
mov
test
inc
jns
mov
push
cmc
loop
or
movs
sbb
pop
leave
sub
jbe
cdq
lock
sub
cli
lsl
jns
sub
cmp
iret
push
xchg
rcr
out
test
sub
dec
push
xor
inc
xor
int3
push
lds
fcom
push
add
inc
jmp
test
repnz
jns
aaa
not
je
cs
popf
enter
and
test
adc
mov
fldenv
jne
cmp
sbb
or
pop
jmp
ret
aam
sbb
xchg
jns
pop
or
loope
(bad)
cmp
ja
dec
ja
gs
mov
out
adc
jmp
fidivr
inc
test
mov
push
je
inc
sub
adc
into
je
cmp
xor
mov
out
push
and
aad
es
shl
fcomp
iret
inc
pop
retf
in
lea
or
loope
sahf
in
and
test
lahf
push
cmps
pop
ins
inc
and
mov
mov
push
dec
and
mov
cmp
lock
or
jno
ins
(bad)
add
(bad)
(bad)
(bad)
fldenv
cmp
pop
mov
loopne
out
lods
fidivr
xchg
inc
inc
sub
mov
and
test
cmp
dec
sbb
jbe
dec
rcr
add
call
gs
and
stc
jae
cmp
cmp
push
add
mov
mov
ja
add
js
xchg
cwde
in
dec
loop
ins
pop
mov
cdq
cmp
jnp
sub
outs
gs
int3
loope
(bad)
aaa
or
cmp
push
inc
out
or
mov
dec
jnp
in
mov
adc
outs
arpl
xor
adc
outs
mov
aaa
jecxz
dec
push
xchg
test
imul
mov
xchg
clc
aas
aas
int
inc
shr
out
lea
mov
sub
stc
pop
outs
mov
dec
dec
mov
jne
xchg
retf
jae
mov
jns
xchg
aas
retf
mov
or
int
sub
cmc
rol
mov
fldenv
lahf
adc
mov
mov
dec
(bad)
add
movs
xchg
xchg
or
pop
xchg
daa
add
jns
imul
inc
push
lock
daa
mov
sub
mov
add
int
in
sub
inc
mov
arpl
dec
jmp
cmc
jecxz
iret
clc
movs
lds
mov
mov
dec
lahf
call
jle
push
inc
sahf
repnz
xor
xchg
jl
mov
leave
push
fisub
jae
cmp
xor
mov
add
lea
sar
push
mov
repnz
clc
icebp
out
aas
cmp
or
push
je
mov
sub
pop
sub
fistp
adc
mov
call
dec
aad
xor
iret
xor
pop
fmulp
cmp
dec
mov
cmp
dec
jmp
pop
jp
add
arpl
sub
test
xchg
jecxz
dec
push
int
into
mul
ds
pop
mov
lea
fmul
dec
dec
mov
scas
or
mov
sbb
jae
cmp
pop
stc
pop
fistp
sub
neg
ins
sub
cdq
add
jmp
mov
xchg
mov
stos
and
bnd
int3
sbb
push
dec
mov
repnz
in
in
push
xchg
adc
fwait
call
cmp
loope
nop
mov
mov
adc
iret
push
ror
push
fistp
and
cmp
cmp
fsub
mov
push
jno
pop
fwait
mov
sub
mov
cmp
add
sbb
lds
cmp
jbe
ds
push
add
rcr
sbb
mov
lahf
cmp
fdivrp
or
and
xchg
cdq
jge
ret
dec
cmp
mov
or
push
xchg
pop
pop
xchg
aam
xchg
mov
shl
jb
push
mov
push
call
and
scas
cmp
or
sbb
popf
push
cwde
mov
pop
xor
mov
cmp
hlt
ja
mov
shr
sbb
mov
shl
aas
fmulp
sti
add
xlat
jmp
inc
mov
cmps
pop
adc
sub
add
add
repz
stc
les
pop
sub
inc
cs
les
dec
ror
sahf
js
lods
sub
jmp
cmp
push
fwait
jo
dec
ja
cmc
jmp
push
fcmovnb
loopne
cmp
dec
ins
fstp
mov
pop
ins
mov
adc
cmps
rcl
jg
out
xchg
test
push
lahf
lds
popa
es
mov
push
pop
outs
loopne
stc
imul
popa
cli
dec
push
stos
push
test
ja
hlt
push
les
iret
pop
daa
enter
mov
fld
and
add
mov
mov
(bad)
pop
xchg
pop
hlt
xor
outs
test
sub
xchg
cld
sbb
hlt
movs
popa
repnz
xchg
xor
mov
push
lock
jb
sbb
sub
int
test
les
clc
add
jb
add
into
cmps
mov
aaa
push
stos
shl
stc
or
sub
jl
loopne
and
cmps
or
aaa
push
test
mov
arpl
icebp
adc
and
movzx
sub
ja
jns
cmp
mov
sahf
dec
and
in
and
pop
es
pop
or
test
xor
jne
adc
cld
mov
sub
mov
jb
stos
das
cmp
rol
pop
test
mov
mov
mov
outs
push
push
push
jb
mov
push
sbb
loope
and
cmp
mov
imul
hlt
and
xor
jl
shl
sub
sub
out
outs
pop
outs
cmp
push
sbb
xchg
stc
pop
sub
ja
retf
ss
push
in
ja
cmp
cmps
jmp
xchg
stc
jnp
mov
add
sub
cli
jno
cmp
mov
lea
mov
jg
test
jecxz
or
ficomp
lods
xchg
mov
mov
sub
cwde
stos
inc
clc
fs
and
int3
movs
cdq
mov
push
mul
popf
xchg
pushf
push
rcl
sbb
sub
inc
xchg
jl
es
and
mov
xor
dec
xor
dec
add
lods
add
int
adc
jg
pop
ror
aam
or
pusha
mov
cld
adc
inc
enter
mov
xchg
into
lods
popa
in
fwait
shl
dec
int3
push
fisub
dec
mov
popf
call
das
or
cmp
push
je
imul
sub
and
and
inc
cli
daa
push
cli
mov
sahf
enter
push
shl
out
add
sub
out
bound
adc
push
dec
push
stos
mov
mov
loop
push
call
inc
or
jmp
xlat
stc
mov
mov
fwait
xchg
push
inc
adc
xchg
lds
add
test
push
dec
mov
mov
aam
or
lock
leave
clc
mov
mov
jl
sub
push
xor
aad
xchg
adc
daa
and
push
scas
lahf
popf
mov
inc
enter
jo
and
sti
add
add
add
jmp
inc
fcmove
pop
and
xlat
dec
aaa
hlt
sbb
xlat
popa
rcl
addr16
enter
mov
not
inc
mov
mov
mov
xchg
leave
inc
xchg
scas
mov
cmps
push
xor
cli
(bad)
fcom
pop
xor
mov
loope
(bad)
icebp
ds
iret
les
add
div
das
push
fsub
or
out
mov
mov
jo
loope
or
pop
mov
xor
(bad)
(bad)
loopne
pop
popf
fld
pushf
pusha
push
hlt
icebp
and
scas
int3
aaa
push
movs
ja
(bad)
push
xchg
(bad)
std
out
imul
jns
or
repnz
(bad)
cmp
dec
add
fistp
gs
movs
mov
out
push
in
adc
adc
ds
adc
gs
(bad)
out
sub
pop
sbb
mov
pop
add
sti
mov
sub
mov
repnz
xor
pop
dec
in
or
dec
arpl
sbb
jmp
mov
scas
adc
ret
(bad)
push
js
jae
xchg
or
pushf
mov
jmp
imul
cmp
push
xchg
pop
ret
mov
popf
test
mov
push
scas
in
jnp
push
mov
mov
into
je
xchg
in
and
ret
(bad)
call
std
mov
aas
xor
add
iret
or
mov
mov
rol
gs
inc
or
cmp
cmp
fwait
xchg
mov
sbb
pushf
in
inc
push
adc
lahf
mov
push
imul
or
xor
xchg
fist
fdivp
pop
inc
ins
sub
jecxz
stc
xchg
mov
pop
out
sub
pushf
aas
test
sub
jbe
pop
mov
cmc
add
scas
dec
xor
pop
scas
jecxz
cmp
cmp
dec
cdq
idiv
pop
add
cmp
push
mov
nop
(bad)
scas
and
mov
ss
je
cmps
pop
xor
movups
std
jb
ficom
test
mov
and
sbb
leave
jg
(bad)
sub
adc
jo
or
data16
in
aas
jl
jae
ss
mov
stc
dec
jp
mov
mov
add
push
adc
xor
xor
cli
mov
cmp
sub
cld
push
jne
enter
ds
mov
bsr
je
mov
and
leave
stc
int
test
mov
mov
and
adc
xchg
loopne
dec
mov
imul
clc
adc
cwde
mov
push
or
dec
jne
sbb
out
cwde
sbb
shl
out
mov
mov
adc
adc
xchg
mov
jg
icebp
int
cmp
lds
repnz
jo
(bad)
mov
rcr
fwait
stc
aam
imul
push
or
sti
inc
pop
bound
jb
pop
mov
jp
loop
aas
bound
and
cwde
arpl
out
loopne
and
push
xchg
push
and
lock
pop
loop
push
push
stos
push
mov
enter
movs
jo
push
(bad)
push
sbb
(bad)
adc
pop
call
add
das
xchg
or
sub
and
xlat
jge
pop
jl
adc
imul
shl
aas
data16
inc
add
mov
scas
(bad)
repz
neg
cmps
mov
xor
jo
adc
mov
inc
inc
or
xchg
dec
ret
mov
inc
arpl
and
frstor
dec
or
cmp
xor
push
mov
fwait
push
je
mov
dec
mov
shl
xchg
or
clc
fstenv
pushf
out
(bad)
mov
(bad)
out
call
push
dec
mov
inc
and
loop
cdq
lods
nop
and
xlat
or
adc
dec
mov
loop
ret
dec
adc
lods
push
mov
ja
add
adc
cmp
or
cmp
stc
pop
jne
out
or
xchg
sub
mov
ret
sbb
push
int
js
jnp
pop
and
dec
push
into
add
dec
mov
sbb
dec
cmp
or
dec
out
into
sub
mov
xor
lahf
icebp
leave
mov
stos
mov
mov
adc
sbb
xchg
and
pop
movs
jp
retf
sub
xchg
(bad)
jmp
das
inc
dec
and
mov
and
push
repnz
clc
sub
mov
jmp
mov
xor
jne
xchg
push
imul
jo
inc
cmp
fldenv
int3
pop
sti
add
adc
test
sahf
gs
es
jmp
clc
and
bound
test
jp
mov
xchg
shr
mov
cmp
inc
ret
push
pop
retf
sbb
adc
sti
cli
and
adc
adc
ins
bnd
sar
inc
fnstenv
sar
mov
adc
push
pop
push
repz
out
mov
idiv
loop
scas
pushf
jno
ja
imul
lahf
mov
hlt
xor
ds
jle
aas
out
imul
sti
adc
ss
or
sbb
inc
test
xlat
aas
scas
adc
pop
sbb
mov
dec
int3
movs
in
add
push
xchg
or
xchg
add
bound
pop
add
fwait
add
(bad)
retf
fiadd
mov
sbb
jne
inc
je
inc
stc
jo
mov
sbb
push
test
shl
arpl
push
stos
dec
inc
mov
add
cmc
pop
aad
xchg
push
sbb
push
add
dec
jl
or
sbb
cs
mov
xor
in
fcom
sbb
(bad)
pop
movs
mov
jnp
mov
pop
call
mov
pop
pusha
stos
popa
mov
and
mov
mov
cmp
test
in
jg
les
retf
mov
push
outs
add
dec
hlt
mov
inc
and
cmps
xor
push
mov
cmp
inc
nop
sub
cld
mov
sti
popfw
iret
in
cmp
xchg
xchg
cmp
mov
out
push
sub
jge
jmp
adc
lahf
and
push
ins
cmc
cs
int
js
lea
je
sbb
or
popf
int3
popf
fdivr
inc
xchg
lods
test
ins
lahf
push
js
test
ins
sub
xor
xchg
out
inc
retf
mov
outs
cmps
jecxz
sub
adc
push
or
outs
mov
xchg
mov
inc
das
cmc
aas
mov
loop
ins
mov
mov
push
mov
cld
push
push
jb
shl
xor
dec
and
inc
mov
std
scas
xor
les
lods
test
push
shr
(bad)
cdq
in
cmps
imul
lea
cmp
ja
stos
xor
mov
mov
pop
lea
jno
mov
or
sti
inc
ror
stos
mov
sahf
mov
scas
(bad)
jnp
aam
iret
push
sub
sub
(bad)
movs
rol
mul
cmps
pop
sbb
add
or
or
repnz
mov
mov
mov
inc
(bad)
sar
stc
inc
push
(bad)
jb
dec
mov
push
jp
out
mov
mov
mov
pop
mov
in
repz
cli
fld
stc
push
cwde
fs
retf
jg
mov
add
dec
unpcklps
xchg
pusha
xchg
popa
pop
call
scas
xor
inc
mov
sahf
lods
repz
cmp
jnp
cmp
push
cmp
cld
shl
cmp
pop
test
or
xlat
and
sbb
xchg
jecxz
aas
jge
mov
daa
sbb
sbb
cmp
or
imul
fcomp
mov
(bad)
and
ins
inc
inc
mov
test
int3
dec
jecxz
aas
jmp
and
(bad)
cmp
arpl
add
add
adc
scas
lods
mov
in
add
sbb
xor
movs
pop
pop
sbb
cmc
dec
mov
push
push
mov
lahf
xor
ret
mov
xchg
(bad)
cmps
shr
test
jmp
shr
push
(bad)
iret
inc
pop
out
mov
in
stc
pushf
retf
inc
adc
jbe
ret
jge
call
jmp
adc
mov
sahf
repnz
mov
jge
pop
jnp
call
fcmovnbe
dec
inc
mov
es
mov
jnp
push
mov
sti
pushf
arpl
mov
lods
test
mov
int3
les
and
or
jmp
jne
outs
inc
lds
xor
stos
inc
nop
mov
jg
cmc
lods
sub
or
sub
(bad)
sbb
push
je
lds
sti
push
pop
xlat
dec
jge
into
inc
or
std
sbb
sbb
inc
ret
loopne
pop
sbb
inc
pop
xchg
jl
pusha
ja
fbstp
ds
mov
ins
add
xor
xchg
dec
cmp
or
adc
ficom
dec
outs
dec
retf
cli
fwait
jecxz
xor
xchg
in
test
cmps
jp
dec
aas
sahf
sti
dec
out
(bad)
stos
pop
push
int
stc
call
pop
loopne
push
cmps
sub
or
aaa
iret
sbb
xlat
sbb
repnz
xchg
pop
int
fs
jo
inc
sub
cmp
lahf
dec
xor
or
xor
stos
cmps
or
adc
cmp
ficomp
fdiv
pop
repz
pop
sbb
mov
cli
jnp
jge
mov
mov
cmps
sub
test
std
jnp
pop
das
jecxz
sbb
idiv
sti
xchg
aaa
xchg
aas
dec
add
mov
ret
fisubr
cmp
push
lahf
mov
xor
test
push
mov
push
and
loop
inc
pop
popf
bound
jecxz
jnp
xchg
hlt
out
(bad)
pusha
push
xor
out
das
cmps
nop
push
and
or
pop
out
push
pop
imul
sbb
jg
lahf
aaa
push
jl
aad
mov
xchg
mov
imul
ins
jne
xchg
jbe
out
cld
dec
inc
ret
sub
jp
sbb
mov
mov
add
jnp
call
repz
aad
push
sbb
dec
test
loope
loope
imul
shl
test
xchg
jmp
rcr
fisub
xchg
imul
add
jmp
mov
sbb
jnp
cmps
ret
adc
das
push
push
jnp
add
(bad)
jo
mov
sbb
retf
xchg
dec
jle
mov
pushf
inc
mov
or
push
mov
and
push
stos
arpl
aaa
or
cmp
(bad)
movs
loopne
call
push
pop
ret
int
repz
std
mov
cmp
jnp
bound
loope
push
sub
shld
jns
mov
fimul
mov
and
out
push
cwde
xchg
adc
mov
mov
add
daa
lds
xchg
jmp
mov
(bad)
(bad)
push
cmc
(bad)
jae
sub
sti
(bad)
in
ret
fnstsw
sub
dec
adc
fistp
xor
inc
rcl
sub
repnz
imul
enter
inc
sub
pop
and
pop
push
mov
mov
loop
xlat
in
repnz
cmc
inc
retf
dec
pop
lods
cwde
ins
adc
rcr
cmp
push
xor
(bad)
(bad)
and
js
xlat
dec
sub
je
rcl
dec
cdq
or
sbb
in
mov
and
out
jne
or
add
call
movs
inc
xor
mov
dec
push
gs
adc
sar
sar
sbb
pop
add
sahf
mov
mov
pop
call
push
cmp
mov
mov
sbb
mov
cmp
icebp
pop
pushf
xchg
(bad)
int
pop
inc
cwde
sub
xchg
dec
jg
cld
int3
and
stos
add
outs
es
fisttp
dec
and
jg
popa
add
scas
mov
jge
cld
mov
int3
sbb
outs
pop
add
xor
dec
push
push
adc
dec
jne
jp
repz
sub
inc
sbb
stos
test
jb
xchg
inc
adc
fwait
cmp
sahf
dec
call
jge
scas
lea
retf
xor
in
mov
cmp
in
sahf
stc
pop
mov
jbe
out
ret
ret
dec
lods
retf
dec
test
xchg
mov
sbb
fnstcw
jp
ss
adc
(bad)
cmp
dec
or
jae
(bad)
dec
mov
jo
adc
js
call
push
xchg
mov
outs
xchg
add
inc
add
pop
retf
retf
dec
fs
out
stos
jge
test
loop
mov
mov
jo
and
cmp
cdq
cdq
and
mov
mov
xchg
xor
call
hlt
cmc
push
sahf
sub
cmp
sub
jecxz
inc
fadd
cmp
pop
aaa
imul
sub
add
mov
fdivr
mov
int3
xor
into
jecxz
popa
jmp
inc
clc
push
clc
inc
repz
cmc
xor
clc
cmp
(bad)
ss
in
cmp
xor
cmps
idiv
fs
les
pop
push
repnz
pop
scas
ss
pushf
inc
pop
mov
pop
test
mov
adc
pop
loope
xchg
mov
cmp
lods
mov
jp
dec
lods
jne
push
sbb
popa
push
sbb
cld
jp
mov
xchg
pop
jno
push
mov
and
xlat
pop
and
add
jnp
idiv
inc
ins
fidivr
jb
ins
or
jg
les
fs
das
or
push
jnp
push
fwait
stos
(bad)
push
or
mov
pop
pop
iret
das
or
adc
imul
lea
xchg
sbb
and
push
push
das
idiv
bnd
jnp
and
push
movs
nop
daa
adc
xchg
(bad)
popa
dec
dec
test
jae
movs
inc
xor
fidiv
add
xor
imul
jmp
out
cmp
pop
mov
in
into
push
out
mov
mov
sub
xchg
mov
enter
mov
push
and
and
pop
inc
dec
push
or
test
or
jl
div
repz
jge
aad
mov
mov
test
adc
mov
ins
(bad)
nop
inc
cmp
repnz
sub
ja
loopne
dec
xor
aaa
cs
pop
aas
or
repz
cmp
sub
jl
std
(bad)
rcr
push
rcr
pop
or
xor
add
cmp
dec
jae
jne
jecxz
out
add
push
mov
inc
hlt
xchg
iret
sbb
add
push
or
(bad)
in
inc
inc
rol
pop
push
jge
mov
loopne
xor
je
call
fyl2x
mov
pop
leave
frstor
sbb
cmp
xchg
add
sub
fst
daa
add
(bad)
pop
popf
in
lea
repz
pop
and
add
push
inc
iret
mov
pusha
enter
adc
outs
retf
mov
and
mov
xor
xor
xor
icebp
add
lahf
lods
xchg
xchg
jl
out
push
(bad)
js
mov
lods
mov
inc
pop
dec
scas
cwde
and
jge
(bad)
mov
mov
mov
sbb
fwait
dec
mov
and
sbb
ss
(bad)
out
bound
mov
mov
bound
jmp
mov
fwait
jp
cmps
int3
xchg
push
cdq
mov
adc
xor
sbb
repz
enter
dec
aam
in
sub
dec
sub
call
leave
(bad)
aam
mov
push
push
out
xor
cmps
mov
mov
mov
sbb
cmp
and
cld
mov
mov
es
jnp
mov
clc
push
push
add
repnz
les
push
sbb
out
pop
mov
int
je
test
add
neg
inc
icebp
jnp
dec
push
and
test
sbb
jmp
out
or
fistp
inc
xlat
retf
imul
stos
(bad)
jp
pushf
movs
aad
fimul
into
retf
pop
pop
cli
icebp
mov
les
iret
xor
mov
mov
shl
cmps
hlt
add
mov
cmc
inc
arpl
fild
ret
push
or
cmps
adc
adc
adc
js
out
pop
push
sub
(bad)
cmps
fmulp
or
jecxz
jl
dec
xor
xor
ins
fisubr
mov
outs
std
fcom
(bad)
in
lds
imul
inc
mov
jno
push
lods
enter
push
adc
ror
inc
in
add
or
xchg
mov
jmp
inc
push
push
jbe
daa
mov
mov
sub
aas
or
push
xchg
iret
sahf
popa
int
pop
rsm
xchg
mov
fstp
call
stos
shl
aam
jmp
mov
data16
(bad)
mov
aas
push
test
sub
sbb
stos
popa
(bad)
mov
js
push
cmp
(bad)
xchg
outs
out
xor
out
or
push
xor
lods
popf
mov
mov
out
pop
scas
pop
push
nop
inc
pop
jmp
mov
loop
in
je
xchg
loopne
test
aaa
dec
js
fwait
mov
xor
popa
adc
repz
test
sub
(bad)
loope
scas
adc
add
inc
inc
push
bts
das
(bad)
jne
xchg
test
mov
push
out
sbb
push
enter
cmp
retf
daa
or
pushf
or
cmp
rol
dec
pop
push
push
jb
cwde
jno
inc
scas
mov
imul
inc
out
sahf
ja
xor
ins
jle
(bad)
jp
(bad)
mov
sbb
call
fwait
mov
cmp
int
mov
mov
and
pop
daa
jge
test
push
sbb
retf
pop
adc
ret
xchg
mov
pop
push
mov
cmp
and
push
int3
test
unpckhps
cli
adc
shl
outs
daa
dec
xchg
pop
aam
and
mov
retf
movs
xchg
sar
mov
in
loop
push
(bad)
icebp
adc
jl
sbb
fsub
xchg
outs
sti
jnp
xchg
push
jle
xchg
pop
dec
test
jg
or
dec
add
sar
cwde
scas
dec
out
mov
imul
adc
loop
scas
ficom
adc
icebp
pop
xchg
xchg
xor
sbb
inc
fstp
inc
mov
sbb
mov
and
push
scas
out
cdq
mov
xchg
xchg
stc
cmps
(bad)
daa
or
adc
hlt
scas
int3
cmps
(bad)
sub
sahf
pusha
call
in
stos
shr
std
ret
dec
ins
xor
mul
fistp
scas
mov
in
push
(bad)
cmp
dec
in
and
dec
dec
mov
lahf
mov
enter
push
neg
out
xor
test
sub
sub
push
pop
loopne
xchg
push
call
mov
icebp
movs
sub
lds
xor
xor
outs
test
jmp
fstp
jl
lahf
sub
repnz
bound
pop
int3
retf
push
shr
and
pop
ss
loop
dec
scas
fwait
inc
loop
push
loopne
mov
mov
es
lahf
cmp
and
cli
test
test
mov
push
jmp
outs
xlat
dec
(bad)
mov
inc
dec
or
push
hlt
push
jno
fmul
push
dec
jp
xchg
ret
in
pop
imul
cmp
aaa
int3
je
or
stc
(bad)
out
mov
popa
jp
jns
or
pop
out
loope
mov
adc
fcmovnu
arpl
popa
lahf
mov
scas
pop
adc
in
test
adc
jnp
mov
jo
xchg
mov
add
cmp
aam
loope
test
sub
pusha
les
cmc
fs
and
jb
add
cmp
jp
xchg
jae
add
and
lds
xchg
mov
(bad)
aas
lock
(bad)
loop
dec
push
lea
jmp
hlt
xchg
(bad)
mov
ds
loope
push
call
add
sbb
data16
mov
fcomip
out
fwait
adc
push
retf
sub
sub
cmp
sbb
and
sti
pop
adc
retf
pushf
movs
outs
int3
js
jae
push
sub
popa
mov
cli
mov
cmp
pop
jp
inc
stos
jb
mov
fist
inc
mov
mov
test
in
repnz
dec
mov
xchg
fstp
dec
inc
rol
pushf
add
iret
dec
mov
aas
inc
push
mov
leave
dec
daa
hlt
ror
xor
sub
sbb
push
and
dec
mov
mov
out
femms
mov
movs
out
int
xor
loop
repz
inc
daa
lods
dec
out
pop
loopne
inc
mov
adc
imul
inc
(bad)
fcomp
mov
mov
push
mov
sub
mov
pop
pop
dec
lahf
sahf
into
and
jle
cmps
pushf
int
sub
adc
mov
mov
jmp
and
sub
and
sub
lds
add
fwait
stos
lods
cdq
jp
in
cmc
push
jns
push
stos
arpl
mov
inc
fadd
sub
mov
cwde
ror
adc
xchg
pop
mov
aas
daa
pop
out
sar
aaa
repnz
popa
(bad)
xor
cld
cmp
jbe
scas
mov
xlat
dec
sahf
rcl
ja
(bad)
loope
mov
ins
adc
(bad)
fnstsw
ins
mov
and
ret
push
or
jmp
fnstsw
je
and
pop
cmp
scas
jle
or
sub
mov
jne
pop
scas
push
xor
jmp
mov
pop
mov
push
idiv
dec
lods
sbb
xor
(bad)
pop
scas
stos
mov
or
outs
aam
repnz
in
add
mov
or
mov
inc
ins
pop
scas
pop
dec
or
inc
loopne
push
imul
jns
test
je
push
repz
add
mov
push
lea
jno
rol
xor
jbe
stc
jge
sub
and
push
mov
loop
in
scas
das
jle
(bad)
sti
or
aas
icebp
int3
repz
or
mov
cmp
out
jmp
ins
jmp
jp
xchg
lds
mov
xchg
cld
mov
sub
stos
das
into
outs
ffreep
dec
out
jb
pop
cs
dec
sub
jae
push
cs
repnz
mov
mov
sbb
leave
lea
jo
aad
(bad)
std
inc
(bad)
mov
addr16
xchg
and
mov
into
scas
outs
nop
push
xchg
lock
sbb
xchg
fbld
xchg
xor
rcl
mov
stos
xchg
ins
sbb
add
sar
sub
mov
sar
or
lods
sub
cld
lea
inc
jp
dec
xor
inc
xlat
int
xor
ret
movs
dec
inc
xor
in
jp
sti
out
imul
enter
fs
and
add
push
dec
mov
or
jle
(bad)
(bad)
adc
test
inc
jle
loop
into
pop
add
test
adc
pop
push
ret
jp
lods
push
retf
add
dec
lds
jp
cmc
pop
in
movs
lds
fiadd
adc
jle
jns
in
pop
icebp
pop
push
cs
push
clc
lock
cmp
inc
sbb
mov
add
add
test
idiv
mov
inc
bound
push
sahf
icebp
mul
jns
push
hlt
shr
fistp
jnp
and
aas
cs
in
push
ins
cmps
iret
push
xchg
std
mov
mov
ret
sar
pop
(bad)
dec
mov
ret
push
fistp
mov
lods
cs
lahf
bound
jle
pop
ja
add
int
dec
rcr
cmp
adc
scas
sub
fndisi(8087
(bad)
out
mov
test
jbe
lods
inc
outs
sub
jle
movs
adc
push
(bad)
imul
hlt
not
or
imul
mov
outs
das
inc
adc
cmp
inc
icebp
jg
cs
loopne
call
jge
stos
adc
dec
adc
mov
out
push
add
push
int3
pop
xor
fidivr
mov
mov
cmc
shl
push
xor
ins
and
test
mov
adc
mov
mov
or
pop
add
xchg
lahf
outs
retf
or
call
mov
push
jl
sub
int3
mov
(bad)
shl
cmp
jae
mov
or
ss
inc
jo
pop
jbe
int
inc
in
jmp
mov
sbb
push
mov
and
std
jg
mov
mov
outs
inc
retf
push
call
mov
or
mov
jmp
dec
mov
and
ret
add
pop
test
mov
jns
cmps
out
sub
(bad)
dec
push
rol
addr16
pusha
fbstp
xor
test
clc
ins
pop
mov
jle
sub
imul
pusha
jns
test
push
daa
jae
xor
stos
or
xor
mov
pop
lock
ins
iret
stos
push
ret
scas
les
or
adc
lods
mov
dec
inc
pop
cmp
cmp
(bad)
push
xchg
test
popf
sub
lods
in
pop
jbe
pop
cld
and
xor
out
push
out
out
and
in
pop
push
push
push
or
ins
fnstsw
xor
inc
inc
fsubr
dec
repz
je
sub
scas
mov
jge
test
js
fist
(bad)
in
jne
mov
add
cmps
cmps
mov
pop
daa
xor
push
outs
jl
cmps
cmps
jle
and
fistp
jae
scas
lahf
js
mov
push
cmps
push
hlt
(bad)
mov
outs
add
push
or
adc
imul
push
rcl
mov
push
push
cmp
cmp
inc
dec
or
lds
cs
mov
jl
aaa
int
shl
ret
fidiv
scas
push
or
dec
aaa
fcompp
jo
js
dec
xor
push
mov
or
xchg
int3
push
xchg
hlt
in
cwde
gs
or
dec
mov
push
shl
inc
mov
jno
push
in
sub
sahf
jb
adc
sbb
or
mul
leave
push
ins
or
mov
bound
mov
inc
call
xor
ins
push
test
les
push
push
mov
lds
jne
jo
ror
bound
jle
push
stos
mov
cmp
out
lds
jbe
cwde
mov
or
js
fisttp
in
out
(bad)
in
mov
sub
xor
xchg
dec
mov
sub
mov
adc
jp
dec
add
scas
shr
mov
pop
imul
cmp
lods
pop
xor
es
ds
ins
mov
pop
pop
sub
enter
das
xchg
xchg
sbb
popf
nop
xchg
pushf
nop
jo
sub
or
or
loop
mov
sti
and
or
jge
shl
addr16
ins
outs
dec
sbb
lea
jns
jge
lock
js
pop
pop
arpl
inc
es
fs
or
int3
mov
ins
dec
xlat
and
(bad)
jae
or
test
or
popa
and
push
or
cdq
shr
adc
shl
mov
cmp
test
in
into
push
sbb
xlat
jno
mov
mov
or
outs
repnz
jae
fnstcw
scas
or
pop
jbe
adc
hlt
add
mov
push
test
sub
pop
lods
inc
arpl
sub
pop
pop
sahf
scas
(bad)
mov
aaa
mov
sbb
neg
outs
rcl
sbb
push
idiv
mov
pushf
sbb
mov
sub
mov
je
or
rol
jno
shr
je
xor
pop
or
mov
add
xchg
out
jae
aaa
xor
xlat
or
push
dec
imul
mov
nop
add
into
loope
adc
je
mov
sbb
mov
repz
rcr
imul
xchg
sar
das
add
fimul
pop
shr
les
icebp
mov
mov
mov
xor
stos
add
mov
adc
shr
and
adc
jge
movs
push
es
test
sub
mov
jns
lea
push
sbb
or
sbb
aam
add
mov
xor
fist
ja
lods
hlt
ret
cwde
icebp
jo
lods
mov
sub
xor
sahf
daa
bound
mov
hlt
adc
movs
int
cmp
in
push
rol
mov
push
cwde
pop
leave
stc
rcr
cmp
fiadd
movs
xor
fisub
out
fisttp
jecxz
(bad)
mov
xchg
call
bnd
scas
(bad)
pop
cmp
inc
jne
add
dec
push
jmp
and
cmp
xor
inc
cmps
aas
or
scas
les
rol
fstp
fld
shr
cmps
stos
daa
repnz
mov
push
push
push
dec
pop
out
push
movs
xlat
add
das
push
in
adc
push
xor
out
pusha
xchg
push
int3
inc
je
mov
mov
jmp
push
or
inc
mov
add
or
adc
test
(bad)
fcomp
dec
fnstcw
fcmove
sbb
sbb
mov
outs
dec
stos
fs
inc
dec
cmps
pop
data16
jmp
xchg
xor
adc
fisttp
mov
repz
and
fs
mov
cmp
jne
push
and
test
adc
ret
sbb
and
bound
and
jg
mov
push
xchg
jecxz
rol
jmp
call
dec
inc
mov
jb
push
movups
ret
icebp
out
inc
mov
ret
data16
test
mov
push
aas
dec
sbb
js
test
ins
fimul
inc
dec
pop
ret
rcl
rcr
lods
cwde
cli
jb
lods
dec
cmp
sbb
in
ins
std
leave
icebp
mov
lahf
dec
rcr
push
call
cmp
pop
cmp
addr16
push
out
(bad)
fidivr
stc
sub
xor
ins
stc
push
cli
adc
repz
popa
(bad)
xor
fwait
cmps
ds
jg
mov
(bad)
popa
(bad)
add
rol
outs
int
add
mov
out
pop
(bad)
push
pushf
jecxz
dec
sahf
adc
and
mov
mov
inc
cld
mov
test
ds
jnp
jmp
or
dec
add
mov
pop
mov
mov
inc
sub
xchg
or
aad
popf
js
lea
ins
inc
(bad)
call
and
adc
jmp
clc
shl
loop
and
inc
out
call
lock
fld
ins
mov
and
dec
fs
push
lds
add
pop
push
jb
les
outs
fwait
xor
push
mov
ror
xor
stc
xlat
in
shl
pusha
xor
adc
loopne
test
mov
loope
out
pop
into
stc
and
sbb
dec
rol
pop
sub
jmp
adc
popa
mov
lds
rcl
xchg
(bad)
dec
sbb
ret
aaa
dec
push
(bad)
stc
dec
pop
xchg
push
mov
retf
ret
(bad)
and
loop
out
cwde
(bad)
std
sub
xchg
out
sbb
fld
or
stos
popa
dec
xchg
dec
push
xchg
in
mov
push
ret
fadd
add
stos
int
sbb
sub
fs
in
dec
int3
push
scas
ror
add
shl
jecxz
test
mov
sub
in
inc
lods
xchg
fwait
inc
call
mov
mov
push
adc
inc
out
mov
int3
ja
dec
xor
mov
dec
(bad)
aam
pop
lods
outs
or
dec
dec
mov
test
imul
jle
test
pop
repnz
add
sbb
fstp
loopne
(bad)
pop
or
dec
pop
(bad)
cli
(bad)
loope
pop
sbb
adc
mov
xor
into
nop
push
scas
push
dec
jl
sar
sar
enter
lock
fadd
xor
loopne
das
cmp
aaa
loope
test
lds
mov
adc
pop
adc
push
sub
fldcw
test
jo
adc
inc
test
sbb
retf
and
(bad)
int
cmp
in
ror
arpl
xor
and
dec
cmps
pop
inc
retf
stos
outs
dec
lods
jg
sub
dec
or
lods
fs
ret
sub
xchg
pusha
or
mov
fdiv
jmp
retf
inc
jb
cmp
sub
xchg
retf
popa
dec
xchg
inc
retf
cli
and
sar
scas
jmp
out
add
in
push
je
adc
cmp
pop
stc
mov
daa
pop
std
or
sbb
or
lods
les
mov
xchg
xchg
out
pop
out
push
cmp
cdq
sub
sub
pop
push
add
push
jmp
int
shl
ins
push
aaa
mov
or
dec
(bad)
fild
inc
loopne
and
or
adc
mov
(bad)
push
call
ror
xor
(bad)
jg
pop
xchg
fld
mov
imul
cmp
in
out
fldenv
lock
pop
xchg
mov
imul
xchg
inc
pop
inc
jnp
and
or
mul
push
rcl
retf
mov
(bad)
stos
and
stos
enter
pop
mov
xchg
mov
fwait
push
mov
pop
xchg
aas
fdivr
cmp
sub
mov
inc
lods
pusha
retf
mov
retf
nop
sub
retf
daa
sbb
jne
stos
out
sub
mov
xor
sub
or
loope
call
imul
mov
dec
int3
ins
es
adc
cmps
push
add
or
test
xchg
mov
jl
sbb
dec
inc
ret
sbb
pop
jnp
pop
pusha
dec
enter
cmp
mov
ret
stos
mov
icebp
fld
movs
xchg
adc
in
loop
loope
and
fcmove
xor
nop
mov
sbb
pop
in
lock
data16
in
out
hlt
mov
stc
dec
cmps
jmp
dec
into
push
(bad)
push
and
repz
mov
xchg
lock
jecxz
and
ret
push
dec
xchg
hlt
dec
mov
add
pop
adc
imul
sbb
(bad)
pop
outs
popf
outs
sub
xchg
dec
inc
cmc
push
sub
mov
jmp
mov
or
test
fsubr
sbb
into
sub
add
push
shl
xchg
mov
mov
mov
aad
mov
push
loop
retf
daa
mov
pop
xchg
jg
shl
jnp
retf
stos
push
adc
ds
jnp
mov
fdiv
add
inc
sbb
push
(bad)
adc
mov
pop
pop
push
xor
pop
pop
leave
sti
sbb
dec
cld
xchg
ret
mov
repnz
fisub
mov
sub
mov
add
jo
out
or
sti
lahf
popf
fadd
les
jp
or
add
cdq
ins
push
dec
mov
ds
sub
push
(bad)
not
adc
mov
fnstsw
jmp
test
xchg
inc
cmp
or
out
mov
daa
and
jnp
jae
jg
shr
cld
popf
ja
cli
sbb
aas
mov
dec
pop
lahf
popa
xchg
cmovbe
pop
xchg
sbb
stos
imul
dec
cli
mov
(bad)
cmp
sub
xchg
inc
or
pop
adc
test
sub
fs
pop
test
mov
nop
add
lds
test
or
ins
dec
movs
rcl
std
loope
cmp
lock
push
outs
leave
adc
cdq
inc
(bad)
dec
(bad)
or
mov
rcl
mov
hlt
sti
mov
mov
outs
jmp
pop
into
ins
dec
fstp
adc
mov
mov
sbb
mov
sub
mov
add
je
and
test
(bad)
xchg
not
sbb
pop
into
xor
xchg
jno
cdq
in
cmc
out
xor
pop
push
sbb
fcomip
sbb
clc
pop
push
mov
mov
out
xchg
repz
cdq
pop
sahf
popf
leave
(bad)
in
clc
leave
adc
iret
mov
jmp
mov
mov
add
arpl
ins
jp
fld
aaa
in
xchg
mov
(bad)
ss
pop
das
test
fs
mov
sub
in
mov
cmp
dec
shr
imul
daa
cmps
in
in
push
jo
push
adc
ds
xchg
jle
ficomp
movs
inc
inc
cli
lods
adc
sub
cs
movs
sbb
xchg
ror
enter
jno
aam
shl
int3
cmp
lea
pop
loope
not
mov
daa
mov
cmp
push
ja
mov
and
sbb
sbb
sub
nop
or
dec
mov
pop
mov
add
daa
pop
cmp
rcr
adc
call
mov
loopne
sub
sbb
add
mov
test
call
test
cwde
addr16
stc
cwde
icebp
xor
pop
bound
repz
sar
inc
int
inc
addps
xchg
(bad)
jge
fs
iret
inc
div
and
clc
pop
cmp
mov
mov
lods
or
nop
and
rcl
nop
or
mov
inc
(bad)
call
retf
popa
or
imul
imul
dec
in
test
call
dec
cmps
arpl
scas
mov
mov
mov
and
rcr
add
push
push
or
push
enter
out
gs
clc
stos
jne
cwde
inc
mov
lahf
and
inc
pushf
xchg
and
xlat
xor
cmp
xchg
cmp
xor
aas
in
pop
mov
call
sub
jnp
add
imul
iret
mov
add
test
or
dec
xlat
push
jno
xchg
adc
cli
call
leave
in
call
sub
mov
imul
add
in
mov
pop
movs
clc
jns
add
loope
pushf
lahf
cmps
inc
mov
push
mov
mov
bound
or
je
jl
sti
mov
scas
(bad)
cmp
jmp
arpl
mov
sahf
stos
js
icebp
inc
cmc
iret
xchg
cmp
jg
add
mov
jno
loope
cmp
jne
push
enter
lds
scas
sahf
inc
sar
or
and
(bad)
sub
sbb
mov
js
dec
aas
jno
sbb
imul
bound
repz
or
jbe
pop
mov
fisubr
pushf
xchg
pop
in
jmp
iret
pushf
mov
pop
(bad)
std
std
call
cs
mov
push
jne
or
pop
int
mov
pop
xlat
dec
sub
mov
xchg
fistp
jg
pop
fist
ret
or
cmp
pop
mov
fimul
clc
shl
or
ds
sub
adc
push
cmps
packssdw
ins
dec
push
sub
lods
in
scas
dec
out
nop
xor
call
jl
mov
mov
es
sbb
(bad)
pop
mov
cmp
dec
ins
sub
ret
popa
or
adc
int3
ja
iret
adc
pop
pop
cmp
cmp
nop
imul
imul
dec
mov
ss
shr
stos
popf
inc
loopne
xchg
or
xor
or
pop
rcl
dec
sti
test
jl
push
test
mov
jne
scas
push
xchg
cli
enterw
jecxz
stc
jbe
popw
pop
bound
inc
xchg
mov
and
inc
mov
add
or
cmp
sbb
inc
leave
inc
fbld
fistp
leave
int
sub
popa
sub
and
xchg
loope
enter
pop
mov
adc
ins
in
pop
inc
push
sbb
and
pop
mov
lods
stc
(bad)
out
xchg
push
push
movs
pop
pop
clc
mov
rcl
aad
aas
idiv
(bad)
and
lds
jmp
xchg
jle
movs
mov
nop
xchg
jge
rol
inc
clc
push
les
iret
call
push
xchg
repnz
add
(bad)
fsubp
sub
cmps
inc
shr
and
pushf
repz
dec
movs
adc
scas
(bad)
outs
pop
fwait
push
ins
out
popf
out
xchg
add
ja
bound
aas
out
cmps
lea
out
clc
inc
sbb
loopne
movs
adc
cs
ins
stos
cmp
push
sti
call
push
xlat
(bad)
push
(bad)
ds
cwde
mov
sbb
movs
and
pushf
fs
xor
lea
dec
cmps
fild
shl
add
xor
mov
outs
iret
nop
sbb
pop
jmp
repnz
shl
ret
shl
xor
pop
in
mov
mov
adc
in
and
clc
jo
aam
rol
jne
sub
ja
and
(bad)
aam
mov
je
ins
aas
add
jg
cmp
pop
jnp
push
add
mov
scas
cmp
adc
pop
push
nop
xchg
call
sbb
dec
sub
call
std
add
or
dec
(bad)
push
loopne
jl
les
lock
test
jecxz
push
xor
sahf
and
out
sahf
(bad)
pop
xchg
fcomip
popa
sbb
sbb
push
test
push
aaa
xchg
mov
test
push
mov
fmulp
imul
shr
jmp
adc
test
in
addr16
fild
mov
dec
mov
jnp
in
lahf
or
out
ss
(bad)
out
sbb
cmp
push
in
xor
sti
mov
adc
mov
jmp
or
pop
dec
das
(bad)
(bad)
mov
mov
repnz
mov
and
mov
jo
iret
cmp
ss
jne
cmp
cwde
lock
cmp
xor
cmps
sbb
push
sbb
sbb
dec
js
lahf
daa
ret
popf
dec
rol
cmps
push
inc
es
mov
push
push
ret
lods
xchg
(bad)
retf
int3
lods
hlt
jae
jl
out
das
call
test
(bad)
pop
mov
rol
push
dec
rcl
cmp
cmps
mov
inc
dec
push
pop
test
cld
fiadd
xchg
lods
fdivrp
inc
(bad)
push
mov
adc
mov
imul
xchg
rol
(bad)
pop
add
sbb
push
mov
leave
jae
gs
lods
xor
mov
cwde
pop
and
and
and
mov
sar
mov
rol
xchg
cmc
xchg
dec
retf
enter
dec
js
les
jp
mov
push
push
xchg
hlt
pushf
retf
in
fld
xlat
nop
xchg
popf
sbb
jne
(bad)
xchg
push
jecxz
test
sbb
fistp
sub
js
outs
dec
add
add
add
xchg
mov
cmp
sbb
push
iret
in
adc
mov
or
jle
test
ja
aaa
and
popa
adc
pop
sub
repz
mov
scas
rol
jmp
jmp
push
(bad)
lods
test
xor
xor
int
rol
ja
lods
adc
pop
test
mov
sbb
call
daa
xor
push
xor
stos
mov
and
sbb
cli
(bad)
idiv
push
aad
jnp
loopne
sub
call
mov
bound
sub
(bad)
movs
and
cmp
lods
rcr
enter
cmps
scas
jmp
pusha
xor
sub
mov
pusha
outs
es
scas
(bad)
push
mov
add
mov
inc
stos
mov
into
test
dec
adc
imul
shl
sub
jb
dec
adc
out
lods
stc
sub
cmp
daa
dec
jo
sbb
ret
test
fs
aam
movs
jmp
popf
xchg
mov
adc
mov
and
cmp
add
mov
fwait
neg
aam
xchg
fidiv
xor
frstor
movs
dec
test
loop
lods
jmp
pop
fsubr
push
add
(bad)
xchg
sub
sbb
sub
inc
scas
push
xchg
sar
cmp
inc
scas
clc
sbb
push
movs
sub
xchg
jg
gs
cmp
pushf
xlat
cmps
sahf
in
cmp
movs
sub
dec
in
neg
push
mov
adc
sbb
mov
repnz
fnsave
or
jno
pop
mov
pop
mov
das
stos
es
stos
add
sub
adc
rcr
or
cmps
push
xor
cmp
push
stos
jmp
xchg
not
and
mov
retf
gs
sbb
mov
cmps
mov
leave
dec
or
sbb
imul
fwait
ror
add
pop
loope
adc
xor
push
(bad)
repnz
mov
sub
mov
(bad)
jmp
jo
ins
rol
cmp
mov
cwde
shl
dec
sbb
push
mul
xlat
(bad)
dec
and
gs
fisub
data16
out
xlat
sbb
(bad)
imul
mov
cmp
mov
jmp
mov
lahf
sub
or
out
daa
xchg
cmp
fnstenv
gs
ja
xor
inc
jo
push
mov
ret
push
pop
mov
fnsave
loop
arpl
ja
retf
out
inc
icebp
shl
fld
pusha
sbb
shl
cld
dec
ins
ds
sub
rcr
xor
outs
pop
mov
push
mov
push
dec
div
mul
cmps
repz
dec
mov
inc
or
sahf
mov
test
gs
or
pop
add
loop
cmp
xchg
xchg
dec
push
je
test
js
sbb
out
ins
out
call
sub
out
pop
lods
clc
or
push
mov
push
fwait
test
pop
ja
cli
call
pusha
inc
mov
ss
xchg
fld
in
mov
(bad)
std
repz
(bad)
repz
push
sub
jmp
xor
xchg
test
stc
out
or
ins
sti
dec
adc
sub
jns
out
xchg
pop
fmul
mov
ins
jb
stos
xor
add
aaa
imul
dec
cs
adc
out
pop
gs
pop
lods
push
popa
dec
arpl
push
les
mov
inc
add
and
mov
addr16
or
stos
faddp
mov
xor
sbb
pop
mov
inc
out
iret
pop
test
push
outs
sahf
mov
pusha
popf
cmp
ins
or
xchg
fabs
vpunpcklbw
push
(bad)
dec
test
imul
inc
push
pop
std
mov
(bad)
adc
mov
fcmovnb
addr16
mov
lock
jg
(bad)
in
shr
jp
inc
sahf
pop
push
cmp
sub
pop
mov
xchg
pop
test
dec
rol
(bad)
in
add
test
xchg
or
dec
repz
sub
pop
cmp
push
jo
sub
stos
loope
(bad)
sub
inc
cmps
repz
mov
pop
dec
mov
cli
pop
jmp
imul
clc
cmp
mov
fwait
popf
pop
ret
or
jmp
cmps
outs
adc
push
push
and
pop
loope
icebp
out
add
(bad)
adc
mov
jno
std
pusha
mov
xchg
push
shl
jge
xchg
cmp
mov
jo
cwde
and
mov
push
and
add
or
clc
jecxz
sub
add
push
jo
xor
fld
jmp
popa
pop
cld
outs
test
rol
inc
rol
mov
enter
mov
pop
cs
lea
mov
xor
stc
jp
js
fbld
enter
iret
pop
cmp
mov
pushf
rcl
lahf
mov
test
sbb
leave
pusha
xor
inc
(bad)
adc
mov
gs
aad
in
mov
dec
and
cmp
xor
test
jb
out
adc
jmp
(bad)
jl
xchg
sbb
aas
adc
jno
sar
int3
(bad)
fst
xchg
sbb
ds
push
stc
xchg
movs
fimul
cmp
ficom
clc
aam
pop
sub
jmp
movzx
fistp
mov
test
jecxz
mov
mov
lea
jbe
xor
adc
sar
pop
rcr
in
repz
or
aad
pop
dec
mov
pop
pop
shr
mov
movs
retf
dec
inc
jbe
arpl
sbb
fwait
scas
or
test
push
cmp
xor
fsub
cmp
xchg
xchg
xchg
pushf
lock
push
mov
loope
daa
inc
lds
pop
jge
and
fmul
jb
push
rcr
ins
mov
or
sbb
int3
xchg
pop
loope
jg
sti
adc
cmps
and
in
dec
in
lods
popf
cmps
push
addr16
xor
outs
adc
cmp
leave
jbe
pop
mov
cwde
lahf
or
in
mov
jecxz
iret
jle
scas
addr16
xor
sub
setb
xor
cmps
mov
outs
pmuludq
lds
cmps
(bad)
js
inc
scas
imul
(bad)
cwde
mov
int3
or
adc
dec
(bad)
pop
jne
jo
add
adc
movs
add
mov
xchg
fcmovnbe
das
js
sbb
or
sub
pop
or
mov
push
repnz
fld
add
cmp
scas
rol
stc
jle
(bad)
imul
xchg
fidivr
int
cs
rcl
in
push
sub
jl
fisttp
(bad)
std
dec
dec
xchg
out
inc
and
movs
jmp
hlt
cdq
mov
xchg
xor
pop
movs
dec
xchg
in
daa
cmp
fwait
cmp
lea
and
repz
mov
test
mov
retf
dec
xchg
in
cld
shr
fild
or
stc
dec
retf
mov
add
mov
lods
in
lahf
sub
repz
arpl
mov
cmp
out
(bad)
pop
jge
mov
imul
ja
out
fnsave
clc
dec
inc
and
pop
test
repnz
sub
push
inc
in
and
sbb
pop
push
sub
add
(bad)
sbb
ret
xor
(bad)
enter
dec
in
aaa
enter
push
sub
cmp
xchg
adc
mov
fisttp
cs
ret
test
ret
sar
or
add
jae
fidiv
pop
arpl
xchg
cmp
mov
or
not
cmp
push
push
cmp
or
imul
sbb
pop
adc
sub
and
or
sub
xor
mov
or
and
and
imul
sub
or
xor
not
les
aaa
cmp
jl
loope
out
sub
jecxz
push
rcr
adc
mov
sti
adc
and
ins
out
or
sub
scas
mov
sub
mov
loope
cli
pop
retf
test
bound
(bad)
cmps
nop
rcr
pop
mov
and
jle
loope
test
loop
je
adc
loopne
in
in
cdq
jne
icebp
sbb
scas
adc
cmp
cmp
mov
adc
into
clc
ins
xchg
ds
(bad)
out
cmps
mov
out
fnstcw
(bad)
pusha
(bad)
mov
push
pop
enter
dec
push
jo
sbb
rcr
pop
adc
xchg
ret
pop
in
retf
sbb
mov
mov
xor
bound
mov
jno
div
popa
repnz
aad
stos
rol
jae
mov
adc
fidivr
addr16
adc
mov
rcr
mov
mov
fs
push
push
mov
mov
sub
jmp
adc
cmp
push
jb
in
jle
mov
ret
popf
jl
popa
xchg
cmc
std
sub
nop
ss
lods
nop
popa
shr
aad
scas
rcr
or
and
jmp
out
stc
imul
(bad)
jns
mov
mov
into
mov
repnz
aam
clts
add
inc
mov
scas
push
or
mov
cmp
xchg
xchg
jge
cmp
cmp
pop
fnstenv
or
jb
sahf
fld
jnp
push
hlt
ins
cmp
outs
mov
jne
inc
loopne
dec
inc
nop
jge
pop
sub
loopne
ja
(bad)
jmp
mov
out
jo
outs
aam
in
adc
mov
retf
gs
imul
cmp
dec
xchg
scas
std
cwde
fadd
(bad)
adc
add
cmps
push
adc
(bad)
jmp
cmp
sub
mov
cli
push
push
cmp
jg
jne
adc
mov
mov
jns
push
jmp
test
cmc
mov
in
cs
pusha
aad
out
(bad)
loop
iret
or
enter
jl
popa
out
shl
mov
dec
scas
test
rcr
jp
(bad)
imul
xchg
mov
enter
test
call
das
jmp
fbld
addr16
imul
popf
mov
mov
xchg
jno
push
ja
(bad)
lock
aam
cmp
cmp
inc
mov
shr
movs
rcl
bound
and
pop
push
arpl
outs
inc
scas
dec
add
fnstenv
xchg
push
dec
cmc
inc
push
bound
cmp
xchg
into
retf
adc
cmps
ins
loop
scas
pushf
mov
sub
(bad)
cmp
lods
xchg
shl
inc
mov
sub
popf
and
popf
xchg
cmp
inc
mov
out
(bad)
leave
clc
inc
(bad)
push
lods
loop
adc
dec
add
xchg
outs
out
stc
scas
ret
das
adc
pop
jmp
inc
addr16
imul
push
jge
je
(bad)
or
mov
imul
mov
mov
(bad)
in
fnop
(bad)
pushw
jmp
pop
leave
rol
(bad)
dec
mov
ret
mov
retf
xor
push
std
sub
pop
dec
sbb
push
push
or
add
sub
loope
adc
push
and
data16
xor
fmul
pop
pop
shr
je
sbb
jb
jbe
cli
adc
mov
pop
jecxz
les
(bad)
xlat
aas
rcl
mov
das
or
xchg
ins
adc
push
jae
lahf
int
mov
jbe
mov
sbb
push
inc
bound
push
jne
out
sbb
cmp
and
pushf
inc
push
cwde
es
call
sub
cmp
jmp
pop
adc
das
sahf
push
and
inc
out
xchg
push
int3
mov
mov
fucom
repnz
lock
xchg
lods
lea
xor
scas
mov
and
jl
or
cdq
mov
test
repnz
fadd
xchg
loope
xchg
push
dec
xchg
js
fwait
push
addr16
dec
mov
repz
and
push
push
pop
test
ja
sub
jbe
outs
sub
out
das
imul
enter
lahf
out
(bad)
sbb
(bad)
imul
jmp
push
jo
jmp
loop
loopne
in
push
fild
push
and
dec
cmc
(bad)
lahf
lea
xchg
popa
cwde
push
shl
daa
out
stos
pushf
(bad)
out
loop
mov
push
inc
cmp
xchg
mov
(bad)
cmp
fnsave
or
shl
pop
mov
add
pop
aad
xor
fisub
ja
movs
iret
in
enter
inc
mov
ret
pop
pop
popf
inc
push
(bad)
mov
into
movups
inc
addr16
sub
xchg
lahf
push
pusha
leave
xor
pop
fwait
repnz
adc
fwait
xor
xlat
add
and
(bad)
into
add
mov
lods
lahf
fist
div
push
jnp
outs
call
lods
jne
aaa
(bad)
xor
adc
mov
add
out
pop
push
pusha
mov
outs
inc
dec
adc
xchg
dec
cli
push
cmp
(bad)
mov
aas
stos
jnp
retf
(bad)
lock
arpl
lock
push
mov
cmps
sahf
mov
jle
or
dec
icebp
pop
les
xchg
push
clc
push
hlt
xchg
or
sub
out
imul
inc
cmp
retf
mov
jecxz
inc
sub
test
in
push
das
mov
js
shr
cmp
mov
loop
mov
mov
cmp
xchg
cdq
jg
cwde
jmp
jnp
out
and
lds
iret
aaa
rcr
pop
xor
inc
push
inc
clc
cmp
adc
lea
xchg
pop
cli
fld
push
gs
sahf
ficomp
push
and
jg
mov
push
ja
(bad)
jns
jno
dec
call
push
ja
fdiv
enter
dec
mov
sbb
jo
jbe
cmp
push
sub
aam
and
je
vmwrite
jb
sub
or
pop
fstp
test
stc
fcom
test
out
cwde
adc
out
bound
xchg
cmp
mov
mov
sub
adc
dec
mov
loop
sti
or
pushf
stc
mov
sbb
jbe
dec
adc
aam
push
fsubr
push
cmp
(bad)
push
mov
mov
mov
stos
cmps
dec
sahf
ins
xchg
shr
cwde
cmps
push
cld
mov
lods
mov
cmps
imul
sub
shl
ja
lods
jle
ror
and
movs
mov
jmp
mov
movs
dec
push
lds
jmp
movs
sub
xor
adc
xor
mov
std
mov
and
ret
cmps
out
in
ds
add
pop
xchg
fcomp
aad
pop
lds
add
adc
ret
sar
cmps
xchg
pop
add
lods
push
jo
jo
out
test
or
lea
rcr
ficom
call
pop
push
imul
call
and
inc
(bad)
cli
mov
sti
pushf
xchg
xor
push
push
jg
jno
ss
xchg
repz
ins
add
das
loope
cmp
mov
or
(bad)
shl
movs
jp
scas
jl
stos
sub
ins
add
iret
dec
mov
jg
rcr
inc
repnz
mov
shl
fsubr
sub
mov
mov
inc
fistp
push
inc
jecxz
movs
and
enter
dec
lock
in
fidiv
mov
test
ja
sub
loop
xchg
retf
xchg
je
sar
call
icebp
ret
cmp
and
mov
xchg
(bad)
mov
imul
fsubr
in
mov
mov
repnz
fisub
mov
cdq
cmp
sub
pop
adc
dec
in
rol
call
adc
fisub
push
add
mov
cmp
pop
(bad)
icebp
mov
(bad)
loopne
push
js
xchg
cmps
ins
out
xor
test
call
inc
jp
jp
jbe
gs
shl
jns
adc
xchg
mov
dec
push
mov
and
mov
les
cli
mov
adc
(bad)
mov
jmp
out
or
cs
xor
and
and
bound
cdq
fidivr
or
out
xchg
(bad)
repnz
icebp
xchg
icebp
mov
sub
(bad)
imul
inc
dec
push
push
les
movs
cmp
shl
cmp
clc
ins
(bad)
stc
cmp
lds
call
fisub
(bad)
not
pushf
pushw
ins
fmul
dec
adc
jb
jmp
mov
fistp
call
push
jb
enter
dec
clc
xor
jnp
je
dec
mov
or
dec
gs
mov
jb
sbb
adc
cmc
pop
mov
mov
inc
aad
jns
dec
cmp
rcr
adc
push
inc
mov
jns
repnz
int
rcr
jnp
sub
popf
sbb
loope
fst
std
inc
inc
cmc
jge
add
clc
inc
push
jo
sub
adc
jg
sub
xchg
pop
sbb
xchg
fsubr
lods
mov
push
jbe
call
ins
fldenv
adc
gs
dec
leavew
xor
shl
cs
mov
mov
sub
call
and
jne
push
ret
rsm
xor
push
cmp
or
add
cmp
push
and
or
repnz
mov
sti
xor
inc
or
or
xchg
mov
add
push
cdq
stos
cmc
dec
cmp
sub
pop
dec
sbb
xlat
jp
cmps
add
repz
push
test
mov
xchg
into
dec
aas
(bad)
outs
nop
inc
xor
retf
add
cmp
sbb
adc
mov
or
inc
in
jnp
dec
jnp
jnp
rcl
retf
shr
inc
pop
push
and
push
sti
sahf
mov
out
sbb
mov
adc
mov
cdq
jo
(bad)
mov
loop
(bad)
dec
sbb
aad
sbb
sub
xor
and
fisub
inc
test
mov
std
lods
mov
repz
push
cmp
sar
add
or
mov
mov
inc
aad
fs
test
gs
fdivr
or
int
shr
push
sub
sbb
inc
dec
inc
jp
dec
cdq
xor
xchg
or
popa
xor
sub
jmp
xchg
jno
and
rol
fs
test
aam
hlt
cmp
lods
sub
fmul
mov
mov
xlat
mov
mov
inc
arpl
fbld
dec
push
cmp
xlat
cmp
es
mov
pushf
dec
pop
mov
fisttp
imul
loopne
jb
or
jb
std
mov
mov
into
mov
push
stc
test
pop
je
inc
mov
rcl
repz
(bad)
xor
mov
les
(bad)
pop
fwait
xchg
and
and
pop
push
mov
inc
jle
push
sub
cwde
dec
jne
pop
retf
jmp
fsubr
hlt
mov
ja
push
xlat
ins
out
hlt
dec
and
mov
ficom
fsub
dec
jmp
jnp
xor
das
cmp
push
mov
aaa
or
jecxz
push
fdivr
jae
lock
xor
stc
push
cmp
xor
shrd
sbb
xor
dec
or
fwait
mov
mov
arpl
sub
or
int3
cmc
cmp
inc
ins
lods
dec
add
(bad)
int3
fist
or
mov
test
cdq
push
mov
fidiv
fsubr
ret
shl
fcmovbe
aam
lahf
aas
push
fs
outs
add
or
sbb
mov
push
mov
jg
sti
dec
enter
xlat
ja
(bad)
add
xchg
xchg
sbb
test
and
rol
mov
mov
popa
cmp
leave
mov
add
mov
mov
jge
push
sub
mov
jecxz
inc
xor
push
mov
jl
add
jmp
jo
sar
mov
pushf
xor
pusha
adc
stc
dec
jge
js
xchg
push
inc
lea
mov
adc
cmp
test
pop
xor
push
mov
jae
mov
jo
clc
pop
adc
cdq
ja
and
(bad)
rol
sbb
dec
lahf
xchg
data16
mov
icebp
mov
addr16
sbb
inc
xchg
xchg
mov
cmps
jge
cli
arpl
enter
sbb
push
push
push
jo
retf
ficom
mov
mov
outs
fisttp
scas
cmp
retf
aas
jns
pop
dec
dec
test
add
data16
loope
cli
inc
std
and
dec
mov
and
(bad)
mov
xchg
int3
cmp
das
aad
leave
rcr
(bad)
ret
lods
sar
and
jl
dec
cmp
pop
sbb
xor
mov
add
mov
push
sub
jmp
lods
clc
dec
mov
push
inc
sti
stc
sub
cmp
push
inc
mov
mov
and
jmp
mov
(bad)
mov
es
jecxz
jo
add
mov
sub
icebp
adc
ss
jmp
test
inc
add
mov
inc
nop
sbb
mov
loopne
xchg
jo
cmc
outs
mov
adc
push
xchg
pop
lock
out
dec
jge
and
and
xor
adc
out
fiadd
dec
aam
mov
jne
fisub
pop
or
arpl
jle
arpl
sub
aaa
outs
ret
xor
mov
cmp
mov
mov
retf
js
mov
or
movs
jb
ds
cmps
aas
xor
imul
pop
popa
pop
pushf
pop
mov
ror
ins
outs
neg
lahf
mov
sahf
(bad)
ds
test
push
iret
(bad)
mov
xchg
lea
arpl
push
call
and
cwde
sub
daa
loopne
mov
hlt
cwde
dec
enter
or
jno
sub
add
out
faddp
popa
loopne
push
pop
scas
xor
je
mov
xor
movs
jno
pusha
rcr
add
data16
rcr
sahf
inc
nop
sbb
cs
test
retf
pop
clc
call
ins
adc
push
retf
push
mov
sbb
mov
and
xor
sub
sbb
out
mov
or
xor
shl
inc
out
fsub
(bad)
xchg
xchg
adc
data16
push
cmp
int
mov
jecxz
(bad)
retf
out
in
js
inc
push
hlt
mov
and
(bad)
cmp
inc
je
std
or
inc
movs
jns
repz
adc
test
xchg
outs
sti
push
inc
(bad)
iret
push
xchg
jl
or
loopne
cmp
in
jnp
sub
push
mov
scas
aas
out
dec
ss
into
xchg
test
test
push
inc
or
(bad)
loope
pop
cmps
rol
sbb
fldenv
jne
into
ja
inc
jmp
jl
add
push
fs
and
retf
bound
push
setp
inc
out
dec
or
lea
dec
push
mov
imul
shl
retf
rol
jne
mov
loopne
mov
xor
rcl
dec
(bad)
adc
xchg
bound
add
fcompp
or
dec
dec
inc
inc
adc
clc
dec
mov
mov
adc
mov
cmp
int3
inc
ja
outs
dec
or
mov
aas
ins
and
pop
cmp
les
push
clc
fwait
cmp
or
jae
repnz
int3
adc
pushf
call
cmp
fisub
out
mov
outs
lds
xlat
add
sub
in
xor
cmp
adc
jno
sub
push
dec
mov
movs
cvttps2pi
int3
dec
jg
pusha
scas
and
pop
hlt
icebp
mov
pop
aad
shl
in
test
adc
dec
lods
jbe
push
push
sub
jmp
pop
cmp
add
xor
icebp
mov
sbb
push
(bad)
call
xchg
cmp
and
inc
das
jmp
push
jne
push
repnz
jne
imul
cmps
adc
loopne
mov
loope
jae
in
jo
popa
or
aam
push
mov
inc
test
jp
js
(bad)
ja
retf
call
and
pop
inc
pop
jne
ins
mov
inc
daa
push
popf
or
or
push
out
push
push
rcl
inc
mov
stos
mov
leave
in
jbe
outs
or
or
in
sbb
push
mov
int3
call
movs
aas
sub
pusha
xchg
adc
int
cmp
gs
stos
in
(bad)
int3
and
dec
push
mov
push
mov
xchg
lods
adc
mov
gs
rcl
mov
xlat
stos
xchg
imul
shr
das
popf
aaa
rcl
inc
fdivr
mov
inc
movs
or
mov
(bad)
(bad)
jns
mov
into
sub
repz
mov
ficomp
(bad)
mov
adc
ins
adc
adc
mov
lahf
lock
mov
mov
mov
sub
out
jle
pop
push
xchg
xor
mov
hlt
and
icebp
retf
or
mov
add
add
or
mov
pop
sar
pop
sub
rcl
gs
add
arpl
sbb
shr
adc
inc
mov
stc
or
es
jae
push
popf
and
inc
adc
jo
mov
mov
pop
lds
xchg
lahf
jns
mov
lods
sub
je
(bad)
cli
push
stc
(bad)
sti
pop
call
sahf
push
mov
push
enter
dec
pop
or
mov
movs
das
mul
xchg
sub
cmc
dec
iret
add
sar
and
das
jb
int3
gs
sahf
imul
jo
movs
push
leave
out
xchg
sub
aas
or
retf
jge
test
test
inc
xor
cmp
fst
fnclex
neg
repz
pushf
inc
es
add
or
jg
dec
mov
not
add
imul
add
clc
ins
adc
jmp
ret
push
lahf
adc
sub
or
inc
xor
iret
sub
aaa
inc
ret
lods
push
push
cmp
adc
sub
dec
mov
jge
test
mov
outs
xchg
push
jbe
into
div
push
dec
bound
leave
mov
xor
data16
push
(bad)
and
cs
xor
sub
fld
dec
in
lea
cmps
jo
outs
mov
int
pop
inc
in
add
push
inc
movs
or
pop
lea
mov
push
sbb
cli
pop
jge
jno
test
or
adc
dec
jecxz
jbe
call
in
test
pop
adc
ds
ss
ins
fistp
and
lock
xor
push
lock
sbb
out
sbb
push
push
pop
sub
cmp
(bad)
and
imul
std
sub
sbb
jge
int
fisttp
sbb
aam
sahf
xor
fld
lock
int
lds
stc
lahf
xor
cmp
(bad)
(bad)
jo
push
in
sub
pushf
div
cmp
mov
dec
fmul
loope
clc
loopne
pop
add
pop
shl
test
add
rcr
mov
mov
sbb
js
retf
dec
pop
pop
push
test
push
mov
fs
test
mov
sbb
stos
rol
int
push
cmp
scas
pop
mov
dec
sti
cmc
repz
ds
sub
mov
ds
shl
push
ficomp
lods
sbb
pop
dec
sub
sbb
mov
jge
je
lahf
cmc
out
xor
rol
hlt
inc
pop
fwait
inc
clc
cmp
xchg
mov
cld
sbb
aad
add
cmps
hlt
hlt
inc
mov
cdq
enter
pop
std
sahf
add
jge
pop
into
mov
movs
sbb
outs
adc
inc
ret
and
dec
adc
mov
adc
add
aad
xchg
ja
aaa
mov
and
add
dec
cmp
and
mov
vshufps
and
rcl
aaa
icebp
inc
shr
add
std
sub
les
and
mov
push
or
enter
push
dec
adc
repz
(bad)
ins
xchg
(bad)
jg
sub
and
jo
sub
repnz
shl
hlt
out
sbb
stc
repnz
and
retf
sahf
lock
in
mov
add
mov
test
pop
addr16
sub
sti
dec
xlat
sub
nop
gs
lahf
out
enter
dec
sbb
xor
jp
add
out
push
push
scas
sbb
mov
mov
jecxz
xor
movs
xchg
(bad)
jne
(bad)
fimul
or
adc
ja
mov
mov
pop
loope
jmp
adc
int3
loop
ror
jecxz
in
int3
popf
rcr
mov
hlt
add
ds
xor
cmps
call
mov
xor
pop
aam
sti
test
xchg
mov
xchg
ja
pop
add
dec
and
ja
lods
cli
imul
jns
mov
jnp
push
into
cmps
in
imul
jne
out
lock
xlat
outs
inc
and
gs
rcl
div
iret
pop
or
dec
mov
xor
lods
cmps
jge
lods
repz
loop
mul
cmp
add
mov
pop
mov
inc
mov
jle
push
dec
fldenv
inc
mov
mov
jnp
inc
pop
aaa
sub
push
fsub
repnz
and
loop
imul
mov
bound
jnp
pop
in
adc
mov
push
dec
jge
pop
bound
jne
mov
push
(bad)
push
fsub
push
and
lods
sbb
enter
iret
adc
or
outs
retf
or
(bad)
jge
in
cmp
and
push
sub
mov
mov
dec
pop
scas
sub
mov
cmp
adc
bound
out
xchg
or
jmp
xor
jl
or
xor
loopne
dec
mov
sub
stc
aad
cld
and
imul
pop
(bad)
sahf
mov
cmp
dec
lods
out
pop
cmp
call
add
jl
mov
setne
aas
jae
(bad)
(bad)
scas
retf
xor
popa
mov
sub
imul
sbb
fxch
add
mov
retf
test
pop
leave
and
pop
push
jl
push
cmps
jo
(bad)
stos
ins
adc
adc
push
adc
mov
mov
retf
sbb
sbb
push
mov
pop
sub
mov
xor
lods
push
push
sbb
jns
repz
aad
or
cmc
shl
xor
and
pop
pop
loopne
xchg
lds
push
bound
adc
dec
mov
inc
clc
out
xor
cmp
cmps
sbb
rcl
popf
test
push
mov
mov
sub
cmp
dec
cs
and
jb
and
pop
add
pop
mov
(bad)
jmp
scas
sub
xchg
adc
mov
adc
mov
push
mov
outs
push
ret
adc
imul
pusha
mov
mov
je
dec
jbe
jo
movs
pop
(bad)
pop
sub
outs
sub
push
push
jmp
mov
pop
clc
pop
iret
fwait
retf
push
(bad)
fistp
cmc
cmp
dec
movs
lods
pop
aad
in
jmp
xchg
cld
mov
inc
and
sub
add
mov
fsub
sbb
pop
mov
adc
sub
stos
xor
pop
lods
dec
jmp
dec
xor
jbe
mov
push
xchg
add
jmp
nop
mov
out
mov
jl
jo
stc
jmp
mov
jno
pop
sub
test
or
clc
outs
outs
add
aad
sbb
dec
call
pop
aad
movs
loope
inc
sbb
daa
mov
sub
arpl
imul
sub
dec
test
ja
pop
mov
or
leave
int3
and
shl
inc
mov
push
adc
mov
bound
gs
mov
sub
test
cld
xchg
mov
jle
out
mov
cmp
xor
aam
inc
dec
ins
scas
jmp
rol
sub
mov
jmp
out
mov
fsubr
or
cmp
pop
lods
pop
repnz
ret
pop
add
pop
pop
cwde
ret
mov
xor
mov
jo
mov
or
fimul
sub
adc
jno
xor
outs
scas
jle
rcr
push
inc
add
aaa
jmp
mov
sar
nop
pusha
xor
or
push
jp
mov
mov
outs
pop
xor
cmp
ja
cmc
pop
rol
imul
data16
mov
scas
sub
xor
pop
outs
popa
test
jp
adc
pop
pop
adc
sub
enter
jge
jmp
mov
dec
pop
or
pop
sti
ins
xor
inc
shl
push
stc
xchg
into
adc
(bad)
xchg
or
mov
aad
ss
xor
icebp
adc
pop
in
dec
dec
xor
xchg
je
retf
aaa
sar
(bad)
dec
outs
retf
ror
call
es
xor
sbb
xchg
mov
into
mov
int
mov
sub
jbe
adc
ror
repnz
push
inc
shr
ins
mov
(bad)
xor
aas
fwait
dec
shr
test
(bad)
push
mov
in
adc
pop
(bad)
push
inc
loope
ja
add
lods
outs
pop
dec
lea
mov
and
jne
dec
pusha
and
cwde
add
fwait
call
repnz
(bad)
push
cli
and
or
in
sub
mov
cli
stos
addr16
(bad)
into
mov
xor
mov
es
adc
mov
and
hlt
mov
add
cmovs
test
mov
pop
dec
shl
push
iret
add
out
sbb
jmp
std
mov
in
dec
int
gs
fimul
(bad)
pop
scas
sahf
lahf
jl
pop
out
out
lods
xchg
jmp
fidivr
neg
out
mov
mov
mov
dec
dec
clc
or
into
mov
push
jmp
aam
add
pop
mov
push
pop
xchg
iret
ja
jnp
adc
pushf
or
icebp
lods
adc
mov
or
dec
pushf
pop
mov
xor
fs
sbb
leave
ror
mov
ja
imul
jae
or
es
or
add
push
mov
mov
lods
test
cmp
imul
push
test
cld
aas
pop
jns
xchg
outs
dec
shr
popf
ja
stos
aaa
test
ret
pop
aas
outs
mov
dec
repz
gs
push
fsub
stc
loopne
dec
xchg
or
add
sub
mov
bound
push
xchg
mov
dec
stc
clc
popf
ja
and
shl
adc
movs
ins
scas
lods
jecxz
push
jmp
fwait
push
fcmovnbe
out
mov
ret
out
jns
pop
aam
jb
sbb
cwde
sahf
call
or
test
mov
and
xlat
adc
mov
test
outs
clc
shr
adc
mov
sub
push
in
mov
and
xor
mov
outs
out
sub
shl
adc
test
int
xchg
add
repz
das
les
sbb
inc
pop
add
xchg
aaa
icebp
ret
adc
fs
aad
add
and
and
pop
int3
cwde
jle
movs
inc
mov
mov
cmp
pop
call
pop
pop
pop
mov
xlat
sub
and
xor
cmps
stc
les
ret
mov
mov
inc
cdq
add
dec
mov
mov
push
imul
test
stc
call
imul
sbb
and
stos
fldcw
pusha
cmp
leave
icebp
xchg
popa
lds
addr16
pop
pop
sbb
mov
mov
sbb
test
sbb
mov
leave
mov
adc
rcl
mov
push
mov
push
xchg
mov
ret
jae
inc
in
aad
fiadd
and
out
jecxz
imul
push
mov
mov
nop
sbb
and
ja
xchg
es
out
xor
jbe
ror
call
adc
adc
ins
jno
rcl
add
xchg
int
mov
mov
call
push
hlt
outs
or
test
jnp
mov
(bad)
sahf
dec
add
mov
repnz
jl
xor
adc
sub
ins
sti
addr16
dec
pop
and
dec
repnz
out
retf
push
fmul
(bad)
repz
int3
lock
dec
in
push
jmp
sbb
pop
mov
bt
pop
add
mov
pushf
mov
pop
sub
adc
fwait
push
lods
fucom
xchg
jb
clc
in
into
retf
jbe
lock
xchg
and
imul
and
jae
add
mov
push
imul
aad
in
imul
push
(bad)
adc
adc
push
out
fs
das
cmp
add
ins
call
les
mov
in
ret
adc
stos
ret
(bad)
sub
adc
gs
xor
outs
jmp
mov
cmps
add
rcl
cmp
loope
adc
btr
and
jl
scas
jo
cli
pop
in
hlt
std
and
cmps
push
mov
push
outs
repnz
inc
and
mov
pop
cmp
inc
xchg
cmp
jle
cmp
mov
jae
ss
xchg
jae
dec
xor
add
setnp
adc
or
daa
test
xchg
push
jbe
sar
sub
xor
(bad)
pusha
sub
jecxz
wrmsr
xor
sub
dec
lea
mov
dec
cmp
in
fcom
mov
and
xor
sti
mov
aam
cmc
sub
nop
push
cld
and
pop
and
stos
mov
rep
mov
and
xchg
ja
shl
pop
icebp
(bad)
stc
stos
repnz
test
push
cli
xor
fbld
loop
bound
int3
mov
pop
sub
popa
dec
or
mov
inc
sub
pop
mov
retf
jmp
xchg
jae
pop
dec
in
(bad)
sub
pop
repnz
mov
jae
rcl
cdq
fimul
jae
or
xor
jl
mov
pop
loope
dec
inc
call
into
mov
push
mov
aad
push
sub
dec
mov
mov
dec
shl
jge
addr16
in
adc
push
in
mov
inc
enter
adc
and
xchg
imul
das
inc
cmp
jge
pop
xor
xor
sbb
dec
scas
int3
pop
inc
mov
cmp
jo
add
push
and
int3
stos
cs
movs
jle
mov
or
jns
sub
std
add
and
loope
mov
imul
add
mov
repz
sub
sub
arpl
push
xor
sbb
push
cmp
movs
mov
adc
lock
pop
shl
sbb
hlt
xchg
test
sbb
mov
aas
jp
or
mov
ror
(bad)
sbb
sbb
jo
jl
fistp
ins
fdivr
shl
jno
xchg
jbe
dec
(bad)
dec
aam
fisttp
dec
div
(bad)
test
sbb
retf
idiv
push
(bad)
sbb
in
repz
js
adc
rol
jb
ins
inc
add
sbb
loop
hlt
rcr
ss
xchg
imul
jo
repnz
jo
sbb
and
(bad)
cmp
fiadd
add
mov
push
cwde
lods
adc
xlat
scas
fsub
sbb
pop
sbb
xor
out
inc
mov
es
xor
cmps
pop
jae
rcr
sub
test
mov
jnp
js
fsubr
popf
pop
sub
push
int
xchg
daa
jge
add
repz
imul
cs
mov
pop
jne
lods
adc
rcr
sahf
jl
xchg
jle
push
test
stos
aaa
nop
ret
div
sub
rol
mov
cwde
or
lock
xlat
jne
cli
dec
pop
sahf
and
add
inc
cdq
fs
ss
aam
pop
mov
mov
movs
in
ret
mov
dec
mov
nop
sbb
mov
(bad)
out
(bad)
xchg
test
sti
ds
fidiv
jne
lods
cmc
push
and
xlat
mov
inc
inc
or
cdq
dec
dec
bound
std
mov
sbb
test
movs
sub
mov
add
fcmovb
and
(bad)
fadd
mov
and
sbb
jg
inc
cmc
pcmpgtw
mov
cmp
or
scas
int3
and
(bad)
jns
test
sbb
mov
mov
jnp
and
mov
ret
addr16
jle
cld
in
jno
movs
outs
(bad)
cs
adc
xchg
xor
xchg
mov
daa
rol
fs
sbb
fsubr
mov
sahf
ror
sbb
mov
dec
cdq
push
hlt
bsf
xchg
movs
pop
inc
dec
sbb
into
and
and
movs
retf
ins
pop
dec
xor
aas
jmp
pop
push
cld
arpl
test
in
dec
xchg
sbb
xchg
pop
xor
inc
mov
(bad)
adc
mov
jbe
mov
ret
aad
add
xor
inc
xor
mov
pop
sbb
lahf
int3
add
fst
outs
imul
add
icebp
xchg
ret
mov
sbb
sub
xchg
jecxz
add
mov
inc
sub
scas
das
sbb
add
mov
ins
sbb
in
in
arpl
(bad)
push
dec
xchg
push
hlt
jl
add
cmp
push
outs
nop
or
mov
pop
sbb
repz
sub
stc
movaps
sub
ins
scas
int3
ds
dec
mov
mov
xchg
imul
nop
iret
sub
adc
xor
adc
stos
sub
and
or
je
fcomi
int3
xor
test
pop
sub
lahf
push
int
mov
mov
out
shl
inc
outs
repz
sub
call
jmp
push
rcr
push
mov
or
push
mul
fimul
sub
add
mov
movs
stos
fwait
or
adc
push
bound
or
jl
inc
mov
lea
xchg
dec
(bad)
ret
arpl
loopne
cmp
push
test
xchg
push
jae
inc
out
call
jp
out
pop
xchg
jne
cmp
inc
jae
xor
xchg
xchg
test
fcomp
ins
daa
jle
ret
retf
out
mov
shl
jg
xor
push
fsub
dec
int
fstp
xchg
cmp
ret
test
stc
mov
call
pop
cld
sub
les
sti
push
dec
ds
shr
repnz
xchg
outs
aaa
add
cmp
in
mov
push
repnz
or
xchg
dec
scas
add
ds
mov
sbb
ss
pop
push
popf
cdq
jae
push
je
lods
das
nop
pop
jmp
push
aas
jecxz
leave
ss
cmp
test
cmps
pop
scas
or
jns
lods
jmp
xchg
mov
mov
cdq
push
xchg
imul
fcomp
adc
scas
sbb
push
(bad)
fst
xchg
push
ins
sahf
add
sbb
dec
sbb
in
call
mov
or
xor
dec
imul
jnp
xchg
dec
std
jne
and
cmps
xchg
cmp
rcr
(bad)
and
add
push
fist
mov
cld
add
pop
cli
push
sbb
shl
fst
ins
mov
stos
mov
jp
inc
inc
ds
jmp
sub
sub
jmp
in
adc
stos
loope
jno
jg
cdq
sub
test
in
jge
out
mov
jmp
leave
loope
jbe
cmp
mov
dec
js
inc
shl
push
movs
shl
or
jb
push
(bad)
push
push
repnz
fwait
push
popf
sbb
cmps
scas
(bad)
mov
hlt
std
pop
(bad)
popf
movs
fist
movs
(bad)
je
jae
repz
push
out
sbb
push
in
pop
stos
sub
jo
shr
and
jno
stos
out
push
pushf
cli
aad
les
retf
pop
cdq
fist
push
repnz
imul
test
cmp
fld
push
(bad)
push
dec
cmp
sbb
stc
push
aas
bound
sub
push
out
repnz
add
mov
in
push
fild
jne
jl
mov
popf
(bad)
cmp
imul
in
cmp
out
pop
cmp
jecxz
push
je
inc
cmps
and
int
cmps
rcr
in
xchg
(bad)
fldenv
jl
mov
jg
enter
add
outs
test
pop
cmp
fwait
jnp
imul
rcr
cmp
push
or
fstp
jo
stos
ds
dec
push
mov
test
ror
(bad)
pusha
dec
push
cld
rcl
xchg
pop
or
dec
dec
cmp
test
nop
xchg
jge
xor
popf
dec
dec
pop
dec
adc
aad
das
into
pop
stc
lods
(bad)
aam
rcl
cmp
xchg
xchg
popf
sbb
jge
cmps
push
mov
mov
push
xchg
fsubr
and
mov
mov
xchg
pop
mov
lock
xchg
and
and
pop
popa
faddp
xchg
(bad)
mov
jmp
inc
xchg
xchg
inc
dec
loopne
cmp
cmp
push
fld
mov
xor
mov
sub
jmp
cmps
aad
pop
mov
daa
or
or
push
inc
mov
or
leave
fstp
mov
adc
pop
pop
mov
fisubr
inc
mov
xchg
push
lds
mov
jg
js
clc
es
sbb
mov
hlt
sbb
pop
imul
test
inc
inc
xlat
cmps
and
inc
fisttp
jp
dec
sub
mov
pop
mov
xchg
sti
popf
stos
mov
movs
cmc
jb
clc
test
xchg
gs
inc
sub
lods
gs
adc
jb
and
mov
sbb
inc
imul
fs
cmp
xchg
sbb
daa
xor
outs
xor
addr16
inc
or
xchg
outs
jecxz
inc
cld
add
inc
mov
inc
xor
mov
pop
pusha
sub
adc
mov
clc
push
call
lods
das
in
push
sub
cmp
adc
push
retf
jae
pop
jno
mov
mov
not
mul
dec
and
or
sub
jl
cmp
inc
sub
mov
(bad)
push
jne
mov
jne
push
ss
leave
or
xor
fdiv
sbb
sbb
adc
push
pop
mov
xor
and
retf
mov
and
loope
add
in
cmp
(bad)
mov
mov
and
stos
in
sub
add
stc
jmp
adc
fisub
dec
iret
stos
xor
pop
(bad)
movs
ret
adc
fwait
pushf
outs
jmp
das
movs
or
clc
jl
or
pusha
sub
mov
jo
les
cli
push
mov
fdivr
lahf
scas
cmp
sub
mov
ret
je
addr16
add
in
adc
loopne
mov
mov
mov
pop
xor
pop
push
lahf
(bad)
sub
loope
mov
dec
pop
scas
add
sbb
cmp
cwde
bound
jge
jge
and
aas
movs
cld
mov
pushf
dec
or
retf
out
fwait
(bad)
pop
sbb
mov
icebp
jl
mov
ja
mov
mov
sbb
shl
(bad)
jecxz
mov
jne
psubusw
into
jl
test
jb
add
imul
and
adc
dec
dec
jae
and
fdivr
push
push
int3
mov
add
push
(bad)
ds
dec
jp
and
adc
fs
push
push
cs
and
lahf
xor
xchg
in
pop
fisttp
aaa
ja
inc
sbb
mov
inc
(bad)
jmp
iret
imul
mov
adc
mov
inc
adc
shl
aaa
fwait
cwde
cmp
mov
pushf
in
(bad)
test
loop
push
shl
push
popa
xor
bound
cs
sub
lods
into
cmp
addr16
xor
adc
aaa
mov
mov
test
retf
out
xchg
retf
mov
cmc
daa
shl
cwde
sub
fs
mov
mov
mov
jb
scas
ss
bound
cmp
call
pop
jmp
jns
int
imul
ficom
mov
mov
shr
jmp
cmp
inc
sbb
push
repnz
cmp
push
inc
out
fsubr
jo
mov
fwait
dec
in
inc
int
lods
mov
dec
sbb
pop
imul
xchg
xor
jmp
add
imul
mov
or
pop
push
push
jge
sub
xor
mov
adc
and
ret
jnp
and
fcmove
popf
cmp
mov
shl
repnz
out
push
ret
call
ins
aad
cmp
push
aad
inc
and
hlt
sar
lods
push
rcl
hlt
aad
xor
mov
jbe
mov
xor
push
(bad)
push
dec
aad
(bad)
dec
aaa
(bad)
mov
pop
div
(bad)
pop
shl
ds
(bad)
sub
jg
call
and
(bad)
inc
fnsave
push
mov
lahf
sbb
sub
push
ret
popa
or
push
gs
pop
cmc
jne
sub
push
mov
cmps
or
aas
sub
mov
dec
jnp
lods
xor
fmulp
repnz
mov
xlat
loop
aaa
cmc
dec
pop
call
dec
cwde
(bad)
scas
xor
ja
jne
jl
inc
stc
or
push
mov
push
inc
mov
cmp
dec
sbb
inc
movs
imul
(bad)
mov
cmp
jmp
mov
pop
scas
push
xchg
or
jne
repnz
ror
jb
cmps
jp
adc
fwait
push
mov
inc
ror
or
ret
out
(bad)
retf
and
xchg
cmc
lahf
jbe
leave
jmp
sub
dec
sbb
leave
sub
sbb
mov
xchg
mov
adc
sbb
loope
or
mov
cld
jmp
push
mov
repz
mov
bnd
arpl
mov
call
and
cmp
jbe
(bad)
scas
bound
je
ins
mov
jnp
int3
popa
fbstp
mov
push
scas
(bad)
popf
jmp
or
shl
pop
into
push
ret
pop
sahf
fidivr
jmp
dec
jmp
pushf
(bad)
sbb
hlt
aas
sub
adc
clc
fadd
retf
ficom
mov
jo
out
aam
call
imul
jo
ds
outs
je
mov
and
or
push
int3
(bad)
pop
inc
stc
sub
cld
dec
pop
cwde
call
repz
xchg
push
mov
mov
xor
cmp
call
aaa
xor
fistp
lock
mov
inc
loopne
inc
mov
adc
cmps
adc
inc
jne
cdq
inc
movd
jae
pop
imul
cs
test
fadd
das
enter
cmp
mov
mov
ror
repnz
gs
xor
addr16
(bad)
sti
test
add
test
jne
mov
xchg
cmp
push
pop
jge
sub
add
push
and
jb
sbb
(bad)
lar
and
xor
mov
cmp
push
jae
and
jno
dec
or
push
outs
mov
imul
and
push
xor
fdivr
fstp
push
adc
das
jmp
add
ficom
and
mov
inc
cmp
cdq
mov
push
mov
jecxz
fcomi
div
das
(bad)
es
xchg
xchg
jmp
sbb
pop
retf
lods
add
(bad)
xchg
inc
and
std
sbb
mov
int
mov
enter
loope
mov
aas
ficomp
fwait
loopne
std
cmps
jge
push
pusha
shl
jecxz
inc
xchg
mov
dec
test
mov
pusha
pop
sbb
mov
gs
rol
mov
cs
xchg
lahf
push
out
jo
sub
sbb
xor
leave
or
fxch
mul
and
xor
sub
mov
mov
mov
inc
xchg
sbb
add
fist
jbe
xor
mov
fist
and
or
imul
xor
out
sbb
ins
xchg
push
mov
inc
sub
aad
pop
dec
out
adc
cld
sbb
lahf
sub
mov
lahf
xchg
loopne
dec
jmp
bound
dec
mov
sub
or
cs
ins
lea
push
xor
mov
out
cli
mov
adc
mov
mov
push
inc
outs
push
ins
mov
int3
dec
popf
pop
add
push
dec
cmp
rcr
in
sahf
push
sbb
retf
addr16
es
or
jo
cdq
cs
mov
jno
test
(bad)
cmp
gs
sub
and
jle
sub
js
jg
mov
sub
and
inc
mov
mov
(bad)
push
xchg
aaa
pop
aad
sar
lods
shl
push
test
cmps
and
sbb
jno
dec
sbb
mov
daa
sahf
push
fwait
cld
adc
dec
push
in
adc
cmc
gs
ds
ret
xor
jnp
push
pop
ds
arpl
jo
dec
loop
mov
repnz
dec
xchg
aam
out
xchg
pop
clc
shl
rcr
loopne
push
loopne
movs
jo
sbb
push
loop
adc
mov
push
cmp
movs
push
cmc
sub
test
mov
xor
jnp
iret
stc
movs
outs
jmp
dec
jp
popa
jecxz
push
mov
stos
mov
xlat
jns
stos
call
push
add
jp
mov
les
test
imul
rcl
fnstenv
xor
add
cld
pop
out
ret
xchg
dec
lea
out
or
fwait
das
(bad)
out
hlt
push
retf
cli
es
aam
dec
push
jecxz
pop
mov
jp
add
stc
mov
int3
add
movs
mov
rcr
xchg
shl
push
mov
pop
pop
jg
adc
dec
lea
mov
lods
pop
les
add
push
(bad)
iret
push
jmp
data16
adc
repz
or
test
sub
(bad)
xor
jmp
mov
push
aam
aaa
mov
push
aad
adc
cmps
(bad)
repz
fdiv
(bad)
fwait
cdq
push
mov
add
nop
mov
mov
adc
cmp
pop
cld
cmp
ins
repz
ins
mov
dec
dec
mov
dec
xor
mov
and
popa
or
push
call
fild
stos
(bad)
test
and
or
test
xor
mov
sub
and
dec
lods
sbb
add
sub
jmp
or
sahf
mov
aaa
(bad)
rol
in
sti
loope
shl
dec
jmp
pop
(bad)
mov
push
mov
div
ret
fs
or
or
add
stos
dec
sbb
jp
rol
cld
dec
and
enter
imul
mov
sbb
sbb
fbld
lds
jg
pop
inc
cmc
js
jb
inc
cmc
adc
push
inc
cmps
mov
fst
cmps
mov
adc
xor
add
out
arpl
mov
cmp
dec
push
push
iret
fisttp
mov
mov
jo
pop
scas
mov
pop
jle
and
inc
lods
mov
pop
and
xchg
mov
or
int3
in
ror
jg
aad
frstor
add
dec
aas
lds
push
xchg
je
adc
sub
dec
inc
or
ret
lea
push
sub
stos
es
arpl
adc
inc
jmp
sar
(bad)
mov
sub
cmp
(bad)
pop
xchg
push
cmp
jmp
or
add
xchg
mov
aad
cmp
lods
sub
in
jns
and
dec
sahf
(bad)
icebp
ret
cld
mov
mov
xor
cmp
daa
ja
xchg
arpl
mov
aas
and
jo
(bad)
aad
sub
add
test
sbb
test
arpl
je
icebp
jnp
arpl
push
into
mov
jne
in
(bad)
test
in
out
(bad)
mov
retf
aas
sbb
(bad)
imul
stos
mov
sbb
sbb
lock
cmp
or
ret
xchg
push
xchg
fnstcw
es
jl
jge
dec
aas
fiadd
adc
mov
arpl
clc
mov
mov
stos
and
pop
pushf
dec
sub
inc
push
das
or
popa
leave
mov
ja
add
ins
inc
jge
inc
leave
jae
jo
mov
add
add
movsx
aad
shl
lds
add
mov
push
data16
jecxz
imul
stos
mov
gs
shl
pop
jge
ja
nop
dec
xor
ins
add
sub
jbe
mov
les
gs
pop
enter
(bad)
xor
(bad)
cmp
into
mov
xor
mov
imul
lods
pop
pop
xchg
xchg
in
sbb
xlat
idiv
leave
out
sub
or
inc
out
xchg
push
mov
mov
in
cmp
scas
sbb
push
xchg
jge
pop
jmp
and
mov
jns
fsubr
jecxz
add
loope
xchg
shr
sub
xor
mov
add
jae
cwde
jg
mov
push
ss
xchg
hlt
movs
in
pop
arpl
aas
add
in
(bad)
dec
xchg
dec
bnd
int
cmp
dec
xchg
clc
daa
jo
hlt
outs
mov
pusha
movs
aad
repnz
aam
cdq
add
test
and
cmps
clc
cwde
cld
mov
sub
(bad)
(bad)
push
mov
fs
sub
pop
mov
out
mov
clc
(bad)
sub
cmp
sub
mov
call
pop
ins
loopne
call
scas
dec
lods
jecxz
mov
ss
jns
mov
icebp
jle
test
test
add
addr16
mov
enter
mov
and
jb
push
js
mov
test
fnstcw
mov
fs
loop
jo
ficomp
int
pop
mov
xlat
ret
or
push
xor
cmp
sbb
iret
xor
xchg
repz
repnz
sbb
jo
add
mov
dec
xchg
icebp
jl
outs
adc
mov
out
jb
inc
pop
jbe
mov
add
push
cmps
mov
push
inc
(bad)
jmp
iret
(bad)
(bad)
lock
loope
xor
call
mov
mov
loop
and
inc
mov
push
cmps
pop
cmp
stc
jns
pop
add
push
fiadd
xor
mov
sub
out
in
arpl
fld
fstp
add
shr
dec
mov
pop
std
stc
xchg
adc
mov
loop
mov
mov
xchg
fs
cmp
sahf
xor
or
and
(bad)
(bad)
js
sub
int
jmp
(bad)
mov
cli
pop
mov
retf
in
push
push
les
call
cmps
or
hlt
stos
add
push
inc
xor
cmps
sub
ror
movs
loope
push
jmp
cwde
sbb
ins
stos
jmp
mov
sahf
jecxz
mov
imul
(bad)
and
nop
inc
jmp
push
mov
push
pop
jmp
cdq
jecxz
ins
add
nop
stos
movs
in
inc
inc
lahf
adc
cmp
xlat
jp
rcl
pop
cmp
mov
out
(bad)
mov
fs
mov
sub
sub
sub
ds
dec
into
xor
sbb
cs
push
js
sbb
xor
pop
nop
inc
sub
dec
cmc
mov
cld
popf
dec
lods
mov
jmp
push
out
cmp
retf
ins
or
lods
outs
pop
sub
inc
inc
jbe
aas
jl
test
cmp
repz
mov
dec
test
add
in
push
pop
cmp
lds
pop
mov
sub
call
and
cmc
and
or
cmc
cs
icebp
sub
or
inc
mov
add
push
lods
lods
lahf
mov
pop
aad
pop
or
or
ret
jne
out
movs
nop
cmp
scas
in
lods
mov
pop
or
(bad)
xor
cmps
and
xor
jbe
xchg
mov
mov
popf
pushf
and
or
mov
cmp
nop
fldenv
ficomp
arpl
jb
mov
and
dec
xlat
shl
mov
xchg
cmp
je
sbb
or
push
jmp
xor
(bad)
loope
dec
adc
dec
sub
xor
push
inc
fnsave
mov
loope
xchg
jg
mov
xchg
mov
arpl
mov
jbe
mov
pop
add
stc
movs
mov
cdq
rol
dec
xlat
cmc
cmp
dec
dec
or
ds
pop
sbb
mov
ror
mov
dec
pushf
xor
outs
sub
pop
push
test
or
push
adc
out
mov
or
ja
stc
push
xchg
adc
popa
xor
cmps
(bad)
int3
or
dec
fwait
inc
popf
es
pusha
outs
dec
ret
or
sbb
les
and
je
aam
std
test
and
cld
int3
xchg
cmp
ja
retf
rcl
push
pop
pop
into
jns
in
cmp
js
sub
out
xor
ds
sbb
and
call
pop
xor
inc
retf
add
jae
iret
and
cdq
push
fild
loop
nop
aad
stc
aaa
push
fnsave
(bad)
ret
and
fisub
out
call
and
dec
sub
mov
les
cwde
adc
adc
mov
hlt
xor
cmc
xor
mov
pop
pop
movs
and
xor
in
xchg
jg
pusha
and
pop
ss
mov
ins
mov
push
or
mov
jl
push
jae
aaa
das
loopne
xor
(bad)
(bad)
mov
mov
inc
(bad)
(bad)
je
pop
mov
dec
aad
div
sub
fcomp
or
aas
and
bound
or
clc
xor
mov
or
sti
inc
sub
ror
dec
mov
pop
and
xor
imul
pop
mov
cmc
mov
mov
sub
jle
fidivr
mov
pop
and
fdivr
aas
cmps
push
jno
and
mov
outs
mov
aad
scas
add
addr16
clc
test
stc
dec
push
outs
fwait
adc
cmp
and
push
(bad)
outs
xchg
jmp
loope
sar
mov
pusha
test
retf
push
pusha
shl
outs
fdivr
mov
loope
movs
inc
push
div
jb
or
mov
dec
fdivr
movs
(bad)
mov
int
xor
sahf
xchg
es
push
cs
stos
ins
ss
xor
inc
iret
fidiv
jb
fwait
bound
xchg
xor
mov
ror
sub
push
mov
xlat
jecxz
lea
(bad)
sbb
jge
(bad)
test
gs
cmp
cld
(bad)
repz
add
ins
es
mov
and
jl
arpl
xchg
imul
sbb
push
hlt
stc
pop
repz
js
popf
ret
repz
out
jns
mov
retf
mov
sbb
pop
addr16
shl
cdq
movs
or
fwait
and
add
inc
jge
or
sbb
mov
cmp
mov
jl
sar
call
push
sub
xor
(bad)
sar
(bad)
stos
and
inc
mov
mov
adc
test
in
cld
mov
test
scas
push
adc
sar
mov
cmp
lods
mov
lea
imul
add
mov
int
cwde
movs
inc
mov
in
dec
xchg
imul
jmp
arpl
xchg
out
cmc
outs
(bad)
jmp
inc
pop
int3
mov
pop
frstor
ror
sub
add
lods
sub
test
push
std
imul
xchg
adc
and
adc
cmps
add
repnz
pop
xlat
and
outs
and
cmps
out
pop
sar
dec
xchg
mov
mov
shl
inc
lods
fidivr
nop
xor
and
sub
inc
cmp
adc
icebp
ss
ret
cmp
adc
inc
ins
fistp
xchg
xor
mov
sahf
push
inc
adc
and
sub
outs
sar
fdivr
sub
cmp
aad
cmc
pop
fldcw
mov
imul
call
and
mov
aam
loope
mov
in
out
ret
xchg
push
mov
mov
inc
pushw
rcr
xchg
fs
loopne
xchg
pushf
daa
lea
sub
pushf
jg
cwde
out
call
sbb
xchg
push
inc
lods
mov
test
jnp
sub
jmp
leave
pop
cmc
lds
pop
jmp
iret
jae
pop
call
loopne
aad
stos
out
add
arpl
jno
pop
lods
inc
out
jg
mov
(bad)
not
lods
scas
xor
xchg
mov
stos
mov
push
aaa
sub
xchg
pop
pop
jmp
push
cmps
loope
aad
fstp
mov
and
cmp
and
push
push
and
pop
push
ins
add
inc
mov
jle
xchg
add
and
std
cmp
aas
or
inc
xabort
ror
or
(bad)
out
cmp
cld
bound
xchg
ins
cmps
shr
bound
icebp
cmp
retf
mov
sahf
div
or
addr16
jne
sub
jns
dec
push
bound
mov
shl
or
add
int
imul
icebp
dec
stc
push
mov
shl
cmp
jno
jp
pop
xchg
in
les
test
out
and
iret
fcomp
jb
inc
jno
cmp
or
push
or
nop
mov
ss
addr16
inc
jmp
mov
clc
cmp
xor
xchg
cmps
mov
outs
out
mov
jae
fwait
cmps
cmp
jg
nop
es
bound
out
mov
lahf
(bad)
jge
arpl
enter
out
fsubr
push
mov
fidivr
dec
in
xor
sub
push
add
mov
sahf
push
mov
mov
push
mov
sbb
stos
mov
jne
xor
pop
jbe
cmp
pop
iret
addr16
sbb
movs
lods
push
mov
(bad)
iret
or
mov
call
xchg
lods
das
test
xchg
jmp
pushf
mov
cmp
mov
mov
lods
dec
push
jle
fnstsw
xchg
loopne
cmc
or
dec
xor
fldcw
dec
imul
loope
sub
adc
adc
aam
dec
cmp
stos
shr
je
repnz
ja
repnz
shr
xchg
cmp
sar
retf
xchg
cmp
mov
test
out
mov
mov
jbe
sub
or
ret
ss
mov
es
fld
push
push
daa
xchg
into
push
xor
push
or
mov
pop
xor
(bad)
cmp
add
cmp
pop
mov
mov
jp
pop
lods
repnz
mov
mov
imul
pusha
mov
sar
jo
cld
rcr
dec
sub
xchg
xor
cli
xor
jp
push
push
xlat
push
xchg
aaa
nop
and
repz
and
jno
outs
mov
jge
test
mov
nop
lds
xchg
jo
inc
shl
mov
mov
xor
mov
in
cmp
das
loope
push
push
loope
jp
into
cmp
fidivr
addr16
push
push
test
mov
jmp
mov
stos
test
push
inc
std
and
int
mov
into
adc
scas
test
jb
into
ds
sar
mov
mov
mov
mov
pop
cmc
outs
fsubr
ss
or
movs
(bad)
aas
dec
jne
fadd
dec
mov
jmp
cmp
and
mov
push
mov
not
add
sub
push
fcmovnb
popa
rol
mov
aad
enter
rcl
or
sub
fptan
sar
and
jmp
daa
ficom
cmp
jge
out
hlt
sub
pop
xchg
and
cmp
pusha
shr
leave
outs
pop
pop
sbb
xor
push
add
or
ret
jns
push
test
fs
add
loop
mov
sbb
dec
mov
sar
(bad)
cmp
(bad)
into
push
add
ja
jmp
mov
mov
adc
mov
js
cmc
dec
pop
retf
adc
stos
cmp
pop
iret
pop
ss
loopne
stos
dec
jmp
jmp
mov
out
jg
jecxz
cmps
mov
pop
push
or
loope
in
and
inc
int
outs
rcl
popf
ficom
call
xchg
vpaddsw
mov
loop
inc
sbb
and
je
jns
sub
adc
out
repnz
addr16
mov
fs
jb
sub
rcr
mov
cdq
sub
xchg
shl
popf
les
push
sbb
fsubr
repz
(bad)
xchg
fst
pop
jl
adc
(bad)
ja
ret
add
sar
adc
push
push
icebp
lea
jl
xchg
and
push
scas
lock
xchg
adc
popf
xor
hlt
inc
pop
mov
outs
pop
jmp
dec
mov
mov
sub
fcmovbe
push
adc
xchg
xor
repnz
adc
adc
sub
ins
call
test
mov
clc
lock
mov
push
les
ja
imul
xchg
mov
out
xor
adc
scas
jg
sub
fwait
dec
(bad)
arpl
or
xchg
mov
pop
lods
pop
fcmovnu
and
sub
inc
jmp
scas
pop
idiv
int
aad
xlat
push
push
ins
stos
jp
xor
stos
xchg
fsub
stc
cmp
xlat
adc
pop
dec
repnz
fstp
loopne
jnp
jl
in
jno
pop
add
shl
pusha
mov
dec
add
loope
popa
or
push
push
retf
pushf
sbb
or
imul
inc
jmp
pop
sti
int3
or
dec
test
fucom
mov
in
jle
push
scas
or
in
mov
jl
out
ret
aaa
xchg
mov
or
movs
xor
and
or
unpckhps
lea
dec
mov
jb
pop
dec
mov
mov
jecxz
imul
imul
xchg
je
adc
adc
inc
fidiv
adc
(bad)
outs
mov
mov
sahf
mov
or
push
fcomp
fnstenv
in
push
inc
out
in
dec
sbb
and
test
out
mov
sahf
sbb
adc
mov
mov
fs
or
in
sbb
inc
nop
hlt
scas
push
out
adc
dec
clc
inc
lds
dec
and
cmp
push
pop
dec
test
cmp
div
jg
les
mov
sbb
aas
jge
mov
inc
push
enter
inc
stos
in
fnstsw
lahf
sub
xchg
push
cdq
mov
inc
jo
push
push
leave
xchg
or
inc
retf
jbe
mov
xor
mov
loope
push
and
outs
popf
fs
int3
cmp
and
mov
popf
cmp
loop
cmp
std
mov
xchg
(bad)
cmp
jg
xchg
mov
sub
xchg
in
mov
xchg
(bad)
(bad)
in
xchg
(bad)
call
dec
add
ds
sbb
mov
and
sbb
xchg
movzx
popa
lahf
ja
and
icebp
push
push
xchg
jne
rcr
test
pop
in
jb
xor
inc
adc
cmp
add
and
dec
ficom
sbb
jo
fsubr
xchg
fidiv
pop
test
mov
int3
and
mov
loopne
(bad)
jbe
int3
into
fisttp
push
add
push
arpl
es
sub
ficom
dec
jmp
aad
jp
mov
dec
iret
sti
adc
fs
pop
nop
jns
fbstp
dec
sub
les
and
mov
push
fwait
pop
repz
jnp
repnz
clc
adc
adc
outs
and
stc
fimul
cmc
jge
push
les
sub
cmps
mov
mov
jbe
push
jnp
mov
mov
iret
lods
push
mov
and
cmp
repz
int
mov
jnp
outs
ror
das
mov
test
adc
loope
lods
mov
fsub
out
fsubr
(bad)
xchg
cmp
adc
fild
mov
icebp
inc
out
cmps
xlat
fs
push
fwait
jne
xchg
push
into
loopne
pop
add
leave
inc
mov
mov
inc
jae
jb
popf
pop
cmp
ja
(bad)
das
sub
jbe
sbb
jb
xor
push
mov
dec
gs
outs
int
shr
rol
inc
xor
ss
rol
in
xor
mov
adc
or
aas
sub
clc
and
push
pop
and
jp
inc
xlat
gs
(bad)
cli
jo
sub
sbb
mov
ja
dec
data16
jae
push
and
shr
jmp
out
in
data16
add
(bad)
jmp
call
(bad)
es
push
and
jns
add
jge
repnz
fld
mov
test
cmp
fiadd
fadd
mov
sbb
outs
mov
iret
leave
fistp
fld
push
xchg
adc
scas
dec
call
repz
push
dec
cdq
xchg
in
xchg
fdiv
sbb
cs
and
add
movs
(bad)
out
sub
inc
push
ret
inc
cmps
mov
scas
cmp
xchg
stc
loope
jns
jne
inc
aas
stc
shl
adc
and
enter
inc
pop
add
int
nop
ss
shl
cmp
das
retf
hlt
pop
fldcw
and
jl
in
scas
jno
test
leave
mov
cmps
fimul
outs
stc
sub
fisub
bound
idiv
sbb
int3
or
bound
or
cs
and
adc
jo
xchg
sbb
mul
ins
inc
and
sbb
mov
dec
call
rol
xor
or
jecxz
pop
sub
ja
out
cwde
mov
mov
mov
xor
jae
push
xchg
mov
inc
add
sbb
mov
fs
lahf
adc
fsubr
and
cmps
cmp
sbb
imul
jecxz
jle
daa
xor
and
cmps
mov
mov
cmp
cli
add
pop
sbb
movs
cld
call
ret
mov
aad
sbb
mov
ja
mov
inc
out
inc
(bad)
pop
and
retf
sbb
cmp
and
jge
cld
enter
jae
push
cmp
or
fild
mov
mov
cld
sub
jg
dec
popf
push
daa
adc
cdq
jbe
bound
pop
mov
dec
call
mov
mov
inc
(bad)
imul
nop
xchg
int3
outs
ror
popf
jb
imul
inc
xor
retf
jmp
ins
xchg
mov
sbb
retf
mov
(bad)
outs
gs
aas
dec
cld
mov
nop
out
xlat
jnp
mov
sbb
mov
sti
xor
scas
lahf
cmp
cdq
(bad)
xchg
aam
pusha
pop
cmp
or
dec
ins
popa
xchg
pop
xchg
fisttp
iret
dec
jns
xchg
jmp
xchg
and
add
jns
mov
hlt
inc
imul
ss
sbb
inc
add
cmc
or
pop
pusha
push
xor
call
lea
mov
shl
cmps
ins
cld
jno
inc
dec
call
xor
sahf
imul
icebp
add
imul
(bad)
cmps
aas
popa
push
pop
sbb
cmp
xchg
or
mov
stos
push
mov
mov
mov
mov
clc
repz
test
es
rol
inc
shr
xchg
inc
(bad)
jle
inc
jecxz
arpl
mov
and
push
pop
retf
stc
iret
(bad)
sub
callw
sahf
ror
retf
cmps
mov
repz
ds
ret
les
inc
jne
xchg
popa
push
dec
mov
test
push
mov
adc
ja
test
mov
out
adc
sub
jb
les
addr16
push
icebp
out
ins
pop
call
out
adc
inc
hlt
cdq
(bad)
mov
nop
mov
push
imul
inc
jmp
pop
or
cli
mov
cmp
xor
or
cmp
add
cmp
lds
imul
pop
gs
stos
mul
dec
cmps
add
iret
sar
ins
adc
xchg
pop
sbb
mov
cmps
and
pusha
xchg
movs
mov
vmovntpd
addr16
ins
xchg
fimul
call
dec
mov
xchg
fadd
jg
xor
icebp
loop
mov
icebp
jbe
xchg
mov
push
cmc
stos
xchg
lock
inc
xchg
rol
or
jae
test
cmp
jo
and
xchg
stos
mov
sub
stos
add
movs
test
push
push
mov
jl
pop
(bad)
fnstsw
les
mov
fwait
mov
mov
call
pop
adc
mov
sub
sub
dec
xchg
out
fwait
push
ret
push
dec
popa
nop
dec
in
pop
jno
mov
cmp
jae
aaa
or
in
leave
sub
mov
aad
push
push
popf
test
push
sbb
stos
sub
repnz
std
dec
sbb
jg
mov
adc
repz
xlat
cs
ds
mov
iret
rol
sbb
call
xchg
aaa
cmp
push
push
xchg
popf
ror
cwde
cwde
sbb
sbb
not
xchg
(bad)
fnsave
shl
inc
sub
fwait
mov
scas
jns
lods
jne
(bad)
xor
push
mov
adc
mov
jge
loope
adc
sti
test
lods
jo
mov
popa
pushf
push
test
mov
mov
xchg
inc
inc
movs
or
pop
enter
mov
sbb
aam
popa
dec
fdiv
sbb
cmps
mov
dec
jne
mov
mov
dec
in
or
fisttp
mov
ja
lea
jecxz
pop
in
mov
sub
mov
pop
addr16
pop
mov
mov
inc
sbb
fidivr
sbb
aas
nop
push
jb
jne
aam
into
stc
xor
push
iret
cmp
mov
push
repnz
push
jg
and
mov
movs
sub
fdivr
adc
bound
sar
out
cmps
test
mov
or
out
fidivr
loope
push
(bad)
sbb
sar
iret
lods
xlat
adc
mov
or
ret
fimul
push
push
into
imul
push
inc
lahf
fs
sbb
add
cmp
iret
dec
jmp
jl
jg
push
mov
ss
pop
adc
dec
xchg
sub
int3
das
push
ret
inc
cmp
pushf
jno
xor
das
sbb
push
out
and
inc
inc
sub
mov
jle
adc
xchg
pop
jnp
push
jmp
mov
adc
into
int
cmps
push
jmp
movs
(bad)
es
outs
xor
test
fisubr
fadd
xchg
aaa
mov
mov
call
sahf
out
cmc
adc
mov
jmp
xlat
scas
fistp
pushf
sbb
or
push
push
popa
or
jnp
pop
xchg
xor
push
ins
sar
loop
dec
mov
out
loope
inc
(bad)
push
out
cmc
pusha
shl
add
jp
ja
ror
xor
int3
inc
scas
les
jae
xchg
ins
mov
fwait
and
mov
dec
pop
and
sub
add
dec
or
dec
mov
cmp
pop
jmp
loope
sbb
rcl
mov
adc
retf
cli
or
mov
aas
mov
adc
sbb
xchg
popa
mov
cmp
sub
adc
fsubr
jl
adc
adc
(bad)
jmp
repnz
stc
mov
pop
dec
jg
mov
call
in
stc
xchg
push
add
shl
fistp
push
stos
mov
mov
xchg
bound
(bad)
enter
dec
les
xor
inc
or
push
jmp
xchg
pop
adc
fldcw
sbb
mov
ja
add
dec
test
xchg
retf
add
rcr
scas
xor
bound
stos
push
daa
leave
aaa
mov
mov
lods
jb
jns
ror
xor
repz
repnz
jae
push
in
dec
and
sbb
xor
outs
lods
sbb
in
push
sub
pushf
ja
xlat
push
xor
movs
mov
inc
loope
mov
mov
leave
adc
pop
cmp
push
mov
fdiv
aad
hlt
stos
mov
repnz
fimul
(bad)
fs
pop
or
and
(bad)
xor
fcmovu
movs
sbb
loope
mov
jecxz
mov
movs
cmp
cmps
imul
push
pop
inc
repz
dec
xchg
cmp
pandn
ja
shl
addr16
mov
sti
loopne
add
mov
adc
imul
lahf
(bad)
lods
leave
cmc
or
add
mov
ja
jnp
sub
dec
imul
popa
movs
(bad)
push
out
in
cmp
mov
push
mov
push
add
aas
int3
sub
fs
or
add
xor
inc
adc
cmp
shl
inc
push
xlat
in
push
call
ds
pop
stos
test
loope
mov
stc
call
jge
stc
dec
fdivrp
mov
or
cmc
add
and
mov
test
lods
sub
js
orps
and
aam
bswap
aaa
fsubr
iret
push
ret
test
neg
xor
out
inc
push
sub
dec
pop
test
adc
xchg
jle
jl
and
test
jae
mov
mov
arpl
jmp
(bad)
and
gs
stos
sar
dec
lods
mov
xor
xor
scas
xchg
jnp
nop
adc
scas
xor
shl
ds
pop
bound
cmps
ret
ins
xor
add
jae
repnz
stc
fstp
ins
dec
mov
push
push
cmps
sub
jne
in
add
loop
push
cli
retf
retf
ins
cmp
pop
js
cmc
dec
sti
lods
push
xor
nop
xor
mov
cmps
add
out
stc
pop
pop
stos
(bad)
push
dec
aad
ret
push
ror
sbb
(bad)
lock
ss
add
mov
or
test
xchg
lock
stc
daa
ror
aad
jo
mov
dec
into
int3
inc
mov
jl
push
xchg
adc
ret
(bad)
fidivr
fadd
dec
outs
stos
outs
int
xor
sbb
ds
ins
mov
gs
and
fdivp
ror
add
xchg
mov
xchg
imul
ds
daa
xchg
cs
inc
xlat
xchg
int
xchg
inc
mov
fadd
sbb
in
aas
dec
mov
and
clc
outs
sub
inc
and
les
gs
sub
mov
or
pusha
cli
adc
fwait
push
bound
sbb
mov
cmps
sbb
adc
sbb
xor
aad
push
inc
inc
push
mov
adc
retf
pop
mov
arpl
mov
cmp
mov
inc
or
mov
dec
pop
aam
imul
push
sahf
aad
cdq
mov
sub
and
and
jne
pop
adc
or
inc
add
xor
push
mov
(bad)
in
mov
xchg
mov
imul
cmp
cdq
and
das
das
jae
imul
icebp
xor
icebp
sbb
jmp
inc
or
div
mov
clc
sbb
punpcklbw
adc
(bad)
jmp
jnp
push
lods
in
(bad)
dec
daa
sub
pop
push
sahf
xor
xchg
(bad)
cs
and
mov
fs
jb
adc
int
dec
inc
sub
iret
fisubr
lods
aam
push
lods
lods
sbb
lahf
retf
(bad)
hlt
les
inc
pop
and
push
or
stos
mov
test
push
dec
push
mov
fnstenv
adc
sahf
mov
repz
inc
movs
sub
mov
mov
sub
mov
movs
idiv
div
inc
fucomp
sub
jo
hlt
out
lods
int
imul
rcl
sti
pop
sbb
add
jne
(bad)
enter
(bad)
icebp
mov
ret
das
mov
mov
sub
cmp
cmp
in
and
xchg
push
ror
xchg
dec
pop
movs
push
cmp
loopne
sbb
and
ja
xchg
jl
xchg
mov
js
pusha
adc
pop
mov
repnz
ret
or
mov
frstor
mov
or
in
sub
ret
fistp
cs
jns
loope
loopne
and
in
push
rcr
ss
adc
and
clc
push
loopne
sar
lock
and
push
adc
fs
cmp
push
jns
lods
xchg
icebp
aad
add
call
pushf
fdiv
bnd
jnp
lds
pop
aas
test
mov
ja
repz
sbb
jge
stos
jns
pop
(bad)
popa
mov
ins
jne
lahf
jne
ret
aam
mov
mov
dec
jne
inc
rol
scas
retf
fstp
and
das
sub
out
dec
ss
push
mov
jmp
adc
repnz
pop
inc
cmp
jp
adc
or
inc
loope
xor
and
das
or
pushf
les
clc
xchg
mov
repz
cmp
movs
xchg
or
aaa
dec
js
je
sub
jp
shr
inc
mov
lock
nop
nop
ret
push
push
sub
minps
cmp
inc
lahf
dec
pop
cmp
pop
mov
mov
iret
popf
scas
sbb
dec
add
in
stos
push
cli
mov
mov
int3
jp
add
outs
js
faddp
lock
inc
fld
pushf
stos
bound
pop
push
adc
les
inc
dec
jne
jle
push
adc
mov
dec
adc
in
cdq
test
push
out
jl
call
push
jno
clc
dec
push
add
xchg
neg
ja
xchg
mov
scas
add
in
out
jp
outs
dec
ja
fsubr
and
loop
push
mov
cdq
adc
inc
pop
shr
(bad)
xchg
cs
rcr
add
in
mov
pop
div
ret
shl
into
(bad)
push
int
lea
lock
outs
cld
scas
ss
pop
aad
into
ins
loope
cmp
cmp
jns
sbb
(bad)
sti
and
sub
and
adc
mov
ds
adc
fdivp
add
push
xchg
sub
push
sub
outs
mov
inc
in
out
mov
stc
adc
fist
inc
sub
cwde
push
ss
int3
push
cmp
je
jns
or
movs
test
scas
push
jmp
fnstcw
xor
pop
les
out
lock
inc
mov
push
test
out
dec
and
sub
pusha
js
mov
retf
mov
sbb
test
add
sbb
fs
cmp
push
xchg
jmp
dec
and
fisubr
sbb
pop
add
(bad)
sbb
fnstcw
mov
push
adc
outs
or
push
lea
xor
arpl
ret
mov
cld
test
mov
pushf
retf
mov
sub
add
jbe
jge
mul
fist
adc
inc
enter
js
push
es
xchg
into
mov
std
sbb
call
pop
mov
dec
pop
mov
into
adc
nop
mov
fcomp
dec
jl
sbb
shr
pop
mov
sbb
xor
jmp
imul
inc
sub
or
jo
and
pop
mov
lea
in
or
add
xor
jecxz
sbb
or
and
jno
cli
cmps
push
jbe
push
inc
pop
dec
dec
sub
inc
cmp
and
adc
jno
into
aam
clc
icebp
push
mov
sbb
mov
retf
mov
in
icebp
pop
repnz
and
adc
pop
mov
cwde
xchg
cmp
or
das
fwait
jecxz
xchg
add
idiv
jmp
outs
test
push
inc
xor
xor
or
cmps
xor
je
mov
shr
adc
cmp
jns
sbb
out
adc
or
cld
dec
bound
cli
ins
hlt
jb
mov
push
cmp
mov
retf
push
out
push
mov
jp
jbe
push
mov
addr16
ror
xor
mov
sbb
call
jmp
mov
out
jae
in
div
sar
xchg
(bad)
in
out
and
push
inc
(bad)
retf
jmp
sub
jns
inc
pop
icebp
pop
out
adc
fiadd
daa
mov
mov
or
repz
sbb
not
ror
outs
cmp
pop
fs
stos
jmp
cmp
or
pop
cmp
inc
fisub
mov
xchg
movs
lahf
in
or
xor
aas
xchg
add
push
jp
call
fst
dec
inc
mov
jmp
jno
lods
lods
pop
mov
in
movs
popa
mov
imul
shl
sub
mov
div
and
pop
adc
lods
or
nop
mov
pop
shl
test
jo
or
icebp
sahf
add
adc
cmp
dec
ja
dec
mov
cld
cmp
adc
fisttp
adc
inc
imul
xor
fsubr
and
sub
jne
jmp
push
(bad)
mov
jbe
mov
mov
xchg
hlt
cmp
cmp
or
rcl
dec
push
lods
dec
rol
xor
mov
cmp
ins
jnp
mov
out
dec
test
adc
call
inc
fld
fadd
call
mov
lahf
dec
int3
(bad)
push
mov
sbb
sub
out
ja
rcr
cmp
call
push
xor
push
mov
jno
out
movs
lea
dec
pop
sub
push
scas
cs
movs
jle
imul
cmp
int
ins
jl
bound
jne
sahf
stos
xchg
lahf
pop
pop
lock
aad
lahf
fiadd
leave
sbb
test
inc
and
sar
daa
sbb
jmp
(bad)
mov
icebp
fcmovbe
dec
sbb
ret
dec
xchg
(bad)
adc
push
idiv
push
mov
adc
pop
pop
lds
jg
mov
adc
dec
cmp
sbb
or
repz
enter
jp
std
pop
jmp
fdivr
push
fchs
push
into
icebp
(bad)
in
mov
inc
rol
cmp
xor
aam
mov
push
cdq
inc
push
shl
and
fld
dec
mov
cwde
cmp
rol
mov
mov
fmul
jnp
lea
adc
cmp
or
stc
sub
push
cmp
xor
je
push
mov
xchg
out
fwait
stc
pop
ja
cli
call
psrld
mov
and
pop
jmp
ficomp
jnp
sbb
pop
and
dec
cmp
std
jo
xor
adc
mul
jb
and
adc
aam
jle
xchg
fwait
mov
lods
es
xchg
and
push
test
(bad)
cdq
push
fild
inc
mov
sbb
cmp
xchg
pushf
cmps
int3
iret
call
mov
lea
(bad)
cmp
mov
movs
gs
dec
push
jge
add
jge
std
add
out
pop
adc
fcmove
cmp
ins
ds
cld
add
rol
mov
popf
push
ds
and
inc
adc
jmp
jp
fmul
jmp
scas
mov
adc
icebp
jb
mov
jae
mov
lods
cmps
popf
addr16
mov
add
cmp
inc
fdivr
into
jecxz
cs
popa
gs
int
int
clc
ins
(bad)
mov
cdq
jns
retf
sbb
mov
dec
pop
mov
xor
das
frstor
jmp
sub
push
and
cdq
popf
repz
mov
xor
push
add
push
sub
retf
adc
js
test
add
(bad)
sbb
fiadd
jp
call
sub
fst
or
push
and
mov
aad
fst
mov
stc
adc
adc
xchg
test
push
test
and
and
mov
lock
psubw
dec
arpl
adc
sbb
and
push
imul
xor
loop
mov
ret
and
adc
sub
inc
push
or
cmp
imul
retf
out
dec
jmp
loopne
imul
lahf
adc
jae
pop
cmp
lods
not
jmp
nop
sub
rcl
mov
and
push
ds
mov
mov
pop
xchg
jb
out
add
test
aam
add
add
fwait
scas
dec
mov
aas
cdq
push
xchg
int3
(bad)
pop
push
ret
pop
data16
in
cmps
aad
cmps
cmp
sbb
jb
je
adc
jae
mov
xor
xor
cld
xor
pop
jle
ret
push
adc
aaa
sub
fcmovnbe
dec
pop
or
test
inc
inc
into
cmp
cmp
(bad)
and
in
sbb
jge
stc
(bad)
(bad)
jecxz
ds
fmul
push
cmps
pop
retf
int
(bad)
ins
and
sub
(bad)
inc
mov
sbb
mov
add
sbb
mov
in
(bad)
stos
retf
in
push
dec
jae
pop
daa
hlt
push
out
dec
(bad)
fiadd
dec
pop
cli
mov
dec
sbb
mov
nop
movs
and
cmp
sbb
lods
xor
es
fwait
and
addr16
mov
xchg
fidiv
ja
xchg
cmps
shl
jmp
ror
sub
ins
int3
ror
jg
loopne
pop
push
in
out
imul
jecxz
cld
sti
aad
mov
pop
or
std
inc
jge
fld
and
fs
ja
fnstenv
loope
push
jmp
fcomp
pop
mov
or
sbb
mov
or
cmc
mov
pop
test
xor
jge
scas
loop
ror
bound
call
xor
sub
fdivr
fs
je
in
push
ins
adc
icebp
cmp
clc
inc
mov
add
es
jne
add
cdq
mov
and
nop
sbb
dec
pop
push
pop
(bad)
loope
inc
and
and
dec
or
icebp
rol
retf
push
jnp
and
or
rol
ins
fs
bound
ficomp
sub
dec
sbb
ins
les
adc
adc
cmps
mov
jae
mov
mov
test
xchg
jmp
repz
pop
pop
dec
aas
fcomp
inc
jl
retf
call
inc
into
lea
popa
repz
loopne
sbb
cmp
in
pushf
inc
push
scas
add
in
mov
push
add
jg
mov
and
cmp
mov
add
add
in
xchg
jp
adc
inc
rcr
ins
xchg
xchg
sti
mov
fnsave
jbe
stc
mov
jae
cmp
or
popa
test
and
dec
jecxz
retf
frstor
cmp
outs
or
inc
adc
imul
rol
sahf
outs
jbe
jmp
and
sbb
sbb
inc
pop
sti
test
into
iret
add
push
push
out
sti
and
call
sbb
test
jae
xchg
pop
and
push
idiv
push
mov
loope
cmp
pop
dec
cmc
adc
stos
mov
and
xchg
cld
std
cmps
and
push
or
sub
sbb
test
lahf
scas
cmps
call
stos
or
inc
sbb
add
stos
mov
mov
jbe
sub
jge
test
mov
das
and
inc
xor
or
pop
push
add
and
xchg
inc
pop
lods
push
or
push
mov
add
sbb
inc
into
(bad)
daa
out
mov
lahf
pop
retf
push
add
xor
pushf
sbb
pushf
mov
fcomp
stc
movs
repz
in
sbb
rcr
out
sbb
daa
or
out
adc
arpl
mov
loope
lods
adc
add
sar
add
xor
push
pop
push
into
cmc
xchg
pop
movs
sub
sbb
sbb
shr
(bad)
lea
inc
int
(bad)
xchg
sar
(bad)
lea
mov
jge
pop
dec
xor
aas
shl
int3
rcr
cs
shr
xor
sti
jl
shr
xor
mov
pop
inc
mov
mov
loopne
test
mov
test
test
inc
pop
jg
stos
imul
sar
xchg
sahf
cmp
adc
(bad)
std
xchg
add
loope
jb
retf
ds
ret
add
out
leave
loope
retf
xchg
mov
icebp
jo
mov
xor
clc
jp
in
cmp
or
xchg
imul
dec
repnz
fisub
ror
mov
iret
xor
xor
dec
mov
test
stos
push
pop
not
pop
xor
repz
daa
cmps
ror
mov
adc
or
pushf
movs
movs
aaa
jmp
shl
sub
call
push
mov
xchg
pop
pusha
xor
pop
gs
pop
xor
f2xm1
push
outs
inc
or
sbb
mov
ins
add
test
pop
adc
xor
in
loope
sti
stos
push
sbb
inc
(bad)
into
xor
or
ror
inc
push
dec
cld
cmp
cdq
inc
jle
enter
xor
stos
fidiv
gs
cmp
jmp
enter
aas
movs
cmp
xchg
xchg
mov
in
mov
or
cmp
mov
push
retf
repz
mov
xor
xchg
hlt
jnp
into
xchg
aas
sbb
xchg
inc
int
movs
loope
push
push
loopne
out
lea
xor
mov
les
mov
push
xor
jne
fbstp
js
xlat
(bad)
sub
push
mov
fsub
mov
lods
cli
(bad)
and
xor
mov
xor
cmp
ja
mov
or
lahf
and
stos
fild
test
or
sbb
aam
xchg
repz
xor
pop
or
jae
retf
push
mov
and
mov
aaa
out
or
outs
dec
push
jmp
pop
dec
jno
jle
inc
sub
jae
retf
test
pop
and
jae
cmp
lds
icebp
aam
pushf
popa
test
les
jecxz
addps
sub
inc
dec
loope
add
out
call
ins
jle
xchg
push
cmps
mov
xor
jne
cmp
inc
pop
and
(bad)
pushf
aam
ror
(bad)
stos
or
(bad)
stc
push
test
add
mov
leave
data16
push
xor
jmp
push
out
test
movs
pop
jmp
pop
mov
push
mov
arpl
fcmovne
into
ins
adc
jmp
or
std
jnp
stos
jecxz
xor
pop
js
outs
ja
cmp
inc
mov
fcom
push
mov
retf
cmps
pop
sub
outs
dec
jp
dec
repnz
mov
sar
sar
jp
sub
push
mov
cmp
bound
pusha
mov
jle
or
aas
adc
shl
mov
dec
cdq
dec
mov
mov
popf
jmp
xor
jge
test
pop
push
in
cmc
ss
jmp
int3
mov
hlt
out
xlat
das
push
retf
scas
push
arpl
push
sbb
rcl
in
enter
jp
cmc
push
out
sbb
div
adc
aad
add
xor
or
pop
sbb
sbb
push
ja
adc
mov
addr16
test
ret
mov
mov
add
imul
hlt
aad
push
or
mov
xchg
xlat
inc
or
fwait
pushf
adc
mov
out
and
js
rol
enter
clc
stos
fistp
hlt
pop
leave
push
mov
(bad)
shl
mov
aaa
jp
add
cmp
retf
popf
es
sub
cdq
adc
sub
daa
retf
nop
jbe
mov
xor
retf
loop
xlat
dec
rcl
inc
dec
fsub
fld
imul
int3
ins
popf
test
xlat
(bad)
neg
pop
addr16
or
iret
add
mov
mov
or
dec
cdq
les
push
push
inc
aad
fidivr
pop
in
dec
test
mov
xchg
gs
add
enter
xor
or
out
test
dec
fldenv
jecxz
inc
shl
outs
int
in
and
scas
adc
ret
or
stos
xchg
sub
mov
add
lds
adc
imul
(bad)
call
test
or
clc
call
retf
movs
popa
cmp
sbb
adc
in
scas
daa
inc
or
shl
lahf
movs
xchg
xlat
pusha
xchg
dec
pop
push
lods
(bad)
int3
push
aam
mov
jb
cmp
ins
ins
retf
inc
pop
popa
out
mov
in
call
movs
xor
js
xchg
adc
aas
retf
gs
and
pop
jb
mov
sbb
xlat
rol
jnp
inc
jne
mov
jbe
dec
mov
mov
test
xor
lods
mov
jge
jne
xchg
jnp
ins
dec
mov
add
sub
stos
neg
push
and
pop
inc
jbe
adc
jo
or
cmps
xchg
loope
repz
and
or
aas
out
inc
ret
repz
push
(bad)
cmp
out
sbb
mov
cmps
rol
test
aas
inc
pop
ins
dec
cmp
add
ins
scas
xchg
paddq
or
pop
test
or
pop
nop
push
pop
inc
paddsw
clc
cmp
test
inc
sub
inc
call
inc
repz
mov
repnz
xchg
lfs
adc
inc
mov
fsub
into
xchg
mov
sbb
imul
mov
in
add
icebp
xchg
push
jne
jb
mov
fsub
push
stc
add
loope
daa
mov
or
sti
aaa
sub
out
arpl
cmovnp
cmp
cmp
lds
pop
test
push
mov
loop
and
outs
rcl
jl
outs
pusha
imul
dec
add
cld
cwde
push
mov
xor
add
pop
sbb
shl
dec
sub
mov
(bad)
out
pusha
xchg
pop
or
adc
mov
xchg
or
adc
imul
mov
cmp
mov
les
in
inc
inc
fild
inc
adc
sbb
cmp
xchg
data16
(bad)
hlt
sbb
call
cli
(bad)
dec
test
rcl
or
retf
retf
outs
(bad)
rol
cmc
bound
jmp
pop
jle
xor
xchg
xchg
push
sub
inc
retf
leave
bound
push
jns
cli
push
inc
imul
mov
jmp
jb
mov
aas
jmp
mov
adc
call
mov
in
ret
mov
scas
cmp
nop
add
in
(bad)
push
add
adc
fild
mov
inc
sbb
mov
xor
test
add
and
add
repnz
neg
popf
int
mov
dec
out
inc
and
and
fucomip
jb
or
push
adc
mov
dec
inc
in
push
sbb
jae
xchg
ins
or
inc
adc
sub
pop
fs
repz
loopne
stc
push
add
mov
xor
scas
and
fcomp
cmc
lea
sbb
sar
(bad)
and
outs
sbb
movs
add
cmp
sbb
push
mov
jl
pop
mov
lahf
int3
jnp
jns
cmp
repz
and
loop
fld
sbb
cmp
js
clc
mov
xchg
sbb
push
not
push
mov
mov
sub
loop
cmps
mov
je
stos
and
mov
loope
sbb
cmc
cmp
stos
aad
sub
and
xchg
inc
sub
leave
fcom
push
in
gs
test
mov
mov
(bad)
ja
push
outs
shl
ins
mov
pop
pop
pusha
scas
push
(bad)
imul
jecxz
nop
xor
jp
fcomip
popf
outs
and
adc
pop
push
push
mov
cwde
cmc
push
jmp
outs
int
xor
jae
movs
or
xor
push
jle
bound
mov
push
into
pop
pop
aaa
and
pop
int
and
jl
shl
inc
mov
call
xor
xchg
retf
jecxz
push
leave
pop
and
pushf
jmp
repz
int
push
pop
fs
jg
jno
push
fcom
arpl
and
dec
pop
bound
inc
pop
aam
ss
sahf
repnz
loop
mov
sub
and
ins
jae
pop
lahf
ss
dec
nop
imul
mov
jge
inc
aaa
clc
lods
hlt
mov
cmp
das
les
lods
mov
sub
push
mov
cmps
mov
hlt
test
add
enter
dec
jns
lods
and
out
int3
cmp
fs
push
mov
inc
movs
inc
add
dec
adc
fucom
sub
jnp
jl
retf
sub
fadd
stc
(bad)
or
test
fucomi
jmp
xlat
or
adc
mov
test
xor
scas
pop
pop
add
sbb
popa
xchg
push
stos
(bad)
mov
cmp
std
push
cwde
or
test
cwde
repnz
mov
cmp
push
jne
pushf
outs
jmp
mov
sub
jno
adc
je
loopne
dec
test
pop
cmc
adc
(bad)
movs
dec
inc
mov
mov
pop
fndisi(8087
mov
add
mov
mov
adc
pop
shl
enter
ins
sar
sar
cmp
int
outs
xchg
test
stos
jp
sbb
pushf
mov
lods
mov
inc
mov
faddp
cmps
jmp
mov
sub
adc
push
cld
push
jl
inc
or
mov
or
push
(bad)
cmc
push
jne
shl
fidivr
dec
fst
push
cmp
adc
mov
adc
mov
xchg
or
dec
push
int3
fdiv
(bad)
lds
inc
dec
mov
inc
jbe
cdq
lea
pop
(bad)
push
push
push
inc
lock
lea
movs
inc
mov
out
fstp
xchg
test
(bad)
or
cmp
adc
xor
sub
push
cmp
mov
ins
in
inc
xlat
mov
add
loope
inc
leave
test
cmp
in
iret
mov
out
loope
xchg
cli
pushf
adc
xor
dec
mov
mov
sahf
pop
push
(bad)
div
lea
jge
and
adc
pushf
or
in
push
lds
mov
sub
popf
test
sub
sbb
imul
std
daa
sub
cmp
in
jl
mov
adc
cvtps2pi
push
and
add
call
pop
cmp
fwait
pop
(bad)
dec
sbb
add
xchg
lods
int
stos
inc
loop
aas
cmps
jmp
xor
push
retf
ins
(bad)
cld
sbb
call
push
inc
ins
mov
pop
push
retf
add
repnz
mov
xor
addr16
rol
jmp
lahf
mov
cli
inc
inc
fdivr
push
icebp
clc
pop
dec
mov
dec
adc
pop
add
rcr
iret
aaa
xor
cmp
fistp
xchg
mov
cmc
or
retf
je
stos
lds
test
sub
and
inc
cmp
xlat
cmp
in
mov
push
(bad)
cdq
in
jge
aad
ror
or
cmp
xor
test
adc
mov
cmovne
hlt
(bad)
xor
pop
(bad)
fisttp
js
outs
jmp
or
and
jl
ins
dec
inc
pop
cmp
outs
push
lock
jle
mov
and
dec
or
outs
sar
jae
js
arpl
mov
jge
(bad)
fmulp
rcl
dec
into
fst
jae
inc
or
leave
lock
mov
ret
int
pop
fisub
mov
sub
sub
mov
adc
out
mov
movs
sar
out
fsub
cs
add
test
cmps
ror
es
hlt
rcr
push
sub
and
mov
mov
push
sahf
xchg
push
jno
nop
imul
cmc
jne
ja
pop
mov
push
stc
mov
icebp
pop
stc
dec
shl
adc
xchg
pop
dec
xchg
call
sbb
dec
scas
mov
js
(bad)
jecxz
aaa
jnp
std
ja
xchg
push
and
gs
call
jle
rcl
stos
xor
out
hlt
xor
cmp
ins
mov
cwde
push
aaa
lock
scas
ds
add
adc
mov
js
fist
xor
repz
fsub
add
add
push
movs
cmp
(bad)
fisubr
(bad)
dec
mov
mov
sbb
fld
inc
xor
xor
(bad)
or
inc
jno
mov
inc
add
fidiv
mov
adc
pusha
(bad)
loop
or
xor
xor
jle
push
xchg
outs
push
icebp
sub
pop
adc
ins
scas
retf
dec
add
arpl
xchg
idiv
(bad)
(bad)
in
mov
mov
mov
xor
aaa
popf
es
dec
fwait
out
push
mov
arpl
repz
fdivrp
xor
hlt
in
out
push
out
loop
pop
daa
mov
loopne
add
jecxz
dec
push
retf
or
pop
cmps
xor
push
dec
bound
mov
icebp
cmp
out
fimul
and
adc
push
lahf
sbb
fdiv
scas
add
xchg
jo
cs
enter
pop
xchg
imul
movs
(bad)
cld
sub
enter
ins
adc
add
jmp
(bad)
std
pop
mov
loop
mov
sti
jge
out
pop
std
shl
xchg
jle
or
xchg
jecxz
sahf
inc
int3
ficomp
hlt
cdq
fcomp
dec
or
int
add
iret
mov
pop
aam
mov
sbb
inc
sub
mov
dec
pop
mov
sub
push
xor
mov
push
dec
mov
xchg
repnz
xchg
mov
jae
data16
xor
(bad)
arpl
into
and
or
sbb
mov
adc
mov
enter
mov
xor
push
rcr
jns
mov
mov
dec
cwde
inc
add
popa
xor
push
push
mov
push
add
fldenv
call
scas
or
inc
mov
add
rcr
scas
cmp
das
cmp
xor
sbb
xchg
in
inc
inc
push
mov
ret
sbb
adc
xchg
dec
stc
and
fdiv
cmp
(bad)
ja
and
mov
repnz
sbb
movs
sub
sub
ja
aad
dec
pop
pop
les
dec
icebp
ret
imul
or
dec
jmp
cmps
std
aaa
stc
out
lds
sbb
stos
mov
xchg
dec
ret
pushf
cli
xor
fcmovu
dec
push
pusha
into
mov
jmp
mov
(bad)
popa
call
outs
das
in
inc
mov
leave
movs
jmp
retf
push
stos
nop
(bad)
test
inc
xchg
dec
test
ret
inc
sti
add
or
mov
test
(bad)
pop
cmc
scas
xor
and
jae
rol
test
pop
inc
sbb
stc
popa
jmp
stos
push
(bad)
xchg
pop
push
psubusw
jecxz
fnstenv
addr16
out
pop
popa
iret
and
pop
setl
les
(bad)
addr16
test
xchg
dec
add
(bad)
jmp
lock
ins
or
push
sbb
test
mov
sub
cdq
cmp
pop
outs
mov
inc
jecxz
(bad)
xor
je
inc
adc
addr16
cs
fnstsw
adc
or
movs
push
aaa
ins
or
sar
or
xor
cmp
aas
int3
div
cwde
dec
mov
sbb
mov
mov
(bad)
xchg
jge
jecxz
dec
int
and
les
shl
scas
jge
sbb
lea
ret
test
jne
js
jg
push
mov
dec
jno
call
test
repz
xchg
leave
sti
cs
xchg
add
ins
jp
jno
push
xchg
mov
in
lahf
call
jmp
(bad)
sti
arpl
inc
cmp
mov
repnz
xlat
ins
xlat
cmp
xchg
mov
mov
xchg
(bad)
stos
mov
sbb
mov
arpl
xor
lods
sbb
movs
outs
xchg
sub
adc
pop
add
pop
pop
je
adc
ret
mov
adc
pop
mov
addr16
fisttp
push
or
pop
rol
pop
jo
das
cmp
mov
sbb
(bad)
cs
frstor
fdiv
rcr
jmp
mov
xchg
loopne
mov
xor
push
lods
clc
and
ret
xor
loope
xlat
out
mov
jmp
int
jecxz
xor
cmps
sub
ja
add
retf
and
push
cmps
xor
mov
push
sub
sub
dec
in
fxch
test
xchg
loope
mov
fild
loopne
push
cmp
mov
or
movs
ficomp
retf
cmp
pop
push
pop
jne
repz
jne
pop
xchg
sub
stc
call
and
inc
out
mov
je
sbb
adc
dec
push
arpl
sbb
outs
popa
push
xchg
fs
pop
dec
pop
jg
xchg
pusha
mov
test
jmp
mov
scas
clc
push
(bad)
std
sbb
cwde
adc
sar
or
sti
popf
pop
sub
call
mov
imul
das
add
cmp
mov
shl
mov
fstp
push
or
jno
pop
xchg
sub
(bad)
nop
mov
movs
dec
xlat
fwait
xchg
add
icebp
hlt
iret
dec
push
mov
stc
and
xchg
cdq
enter
and
pop
(bad)
cli
loope
mov
add
or
push
retf
adc
pmullw
fisttp
mov
fs
cld
sub
sbb
cs
and
test
hlt
jmp
rol
int
je
lock
dec
arpl
xor
sbb
lds
mov
jno
sahf
(bad)
movs
test
mov
xlat
rol
sub
jecxz
mov
inc
out
outs
jl
fnstsw
fiadd
push
jl
mov
jle
bound
add
stc
(bad)
loop
mov
mov
aad
and
fucompp
adc
cmps
xchg
or
xor
inc
sub
fisttp
lea
mov
dec
loope
mov
push
lock
add
mov
out
imul
mov
add
scas
xlat
cmp
pop
pop
dec
les
adc
clc
movs
dec
push
mov
(bad)
dec
xchg
cdq
push
lahf
jmp
es
pop
mov
inc
shl
test
xlat
scas
into
lods
dec
dec
adc
xchg
sti
adc
xchg
out
add
adc
cmp
clc
or
add
popf
mov
addr16
xchg
ret
(bad)
cmp
icebp
xchg
push
int3
hlt
inc
fcomp
or
push
adc
mov
jbe
push
xchg
in
test
(bad)
aaa
or
loopne
cmp
cmc
mov
test
in
(bad)
mov
movs
out
js
mov
sbb
lock
sar
fnstsw
sar
mul
mov
nop
push
jmp
inc
es
neg
push
rol
mov
cmps
adc
lds
fdiv
(bad)
adc
stos
loop
loopne
test
pop
repz
mov
or
xchg
outs
xor
or
mov
cwde
fadd
cmps
dec
pop
lea
xchg
jmp
dec
sub
mov
mov
sub
xor
aad
xor
xor
xchg
cmp
and
lds
mov
cld
ror
pop
stos
popf
push
xchg
dec
(bad)
jnp
add
push
shl
inc
dec
xchg
jmp
fbld
lock
add
sbb
rol
mov
mov
push
dec
(bad)
fcomp
add
push
bound
in
mov
jb
js
add
or
cdq
aam
bound
dec
dec
cld
xchg
adc
push
(bad)
mov
cwde
jmp
and
dec
sbb
lea
mov
mov
dec
sbb
lods
sbb
mov
ror
mov
push
jbe
and
jmp
xchg
xor
xchg
inc
scas
and
xchg
cmp
rcr
sbb
stos
fst
xchg
ss
sbb
lods
call
cmp
pop
in
cmp
arpl
or
les
inc
pop
pop
mov
mov
add
jg
popa
sbb
(bad)
bound
cmp
push
inc
pop
(bad)
lea
icebp
sub
xor
cmp
ret
cld
lock
and
add
dec
push
bnd
inc
ins
arpl
jb
ret
push
xchg
shl
xor
(bad)
int
adc
jge
push
push
test
mov
bound
mov
add
ret
or
and
movs
in
adc
in
adc
mov
mov
add
adc
adc
mov
out
enter
mov
or
push
dec
(bad)
push
out
mov
push
mov
lea
fadd
fcomp
mov
gs
icebp
repz
hlt
pop
add
in
inc
retf
ins
in
jnp
mov
js
push
pop
lods
cmps
sbb
scas
xor
push
sbb
mov
sub
rdpmc
addr16
sbb
sar
pop
sub
xchg
adc
movs
in
loopne
ja
js
into
push
test
das
sbb
(bad)
enter
add
mov
aaa
outs
lds
shl
gs
add
or
cmp
or
mov
aam
jl
shr
hlt
arpl
inc
dec
stos
jmp
add
inc
mov
mov
repnz
sar
out
jle
xor
ds
push
mov
dec
loop
pop
cs
and
ret
xchg
mov
push
dec
pop
fwait
out
fdivr
inc
out
add
dec
pop
pop
mov
fucomip
daa
pop
ds
aam
push
clc
push
pop
out
repnz
push
inc
pop
cmp
into
ins
out
loopne
mov
xlat
jno
xchg
cmp
test
and
ins
outs
fstp
stc
dec
mov
sub
outs
mov
push
push
int
cwde
loope
jo
add
sahf
cmp
and
jp
push
ds
sub
clc
inc
shld
test
and
lea
jne
cmp
popf
dec
dec
pop
cs
bound
hlt
push
mov
xchg
and
pop
aas
nop
dec
push
fldenv
mov
shr
in
cld
dec
jecxz
cmp
jg
test
dec
xchg
push
jl
and
jle
jb
xor
loope
jmp
jo
xlat
imul
or
cmp
sbb
loop
fcmovnb
adc
lods
movs
retf
push
inc
call
inc
cli
xchg
idiv
clc
adc
mov
adc
stos
pop
rol
dec
iret
dec
mov
push
pop
lea
mov
pushf
mov
push
mov
mov
out
je
inc
mov
push
cmp
mov
or
or
leave
sub
pop
jb
clc
push
scas
jbe
stos
in
out
mov
iret
mov
jns
dec
nop
push
das
test
ins
jnp
dec
mov
shr
xchg
or
xchg
or
sbb
inc
xor
je
xor
shl
ds
adc
cs
add
xchg
es
and
cmp
jo
mov
adc
movs
aaa
and
xchg
mov
push
or
jmp
mov
mov
std
adc
push
retf
lahf
sub
dec
inc
xchg
jae
dec
sbb
sub
pop
mov
or
ss
xchg
mov
in
push
sub
fwait
call
xor
enter
mov
out
adc
cld
call
adc
popf
fmul
out
mov
inc
retf
dec
aas
(bad)
scas
js
addr16
dec
adc
push
sub
sub
sub
sbb
xor
cdq
cmps
loop
loope
jge
call
cwde
js
call
pushf
xchg
bound
and
add
adc
(bad)
lea
push
call
pop
fldcw
xchg
scas
(bad)
ss
sub
inc
out
mov
xchg
push
mov
add
mov
(bad)
jnp
push
pop
mov
mov
rol
adc
and
sti
ret
outs
mov
repz
jmp
mov
out
imul
stos
sbb
pop
stos
mov
push
sub
jne
popa
scas
mov
inc
jns
mov
rol
or
pop
ins
out
xchg
add
xor
fucomp
adc
arpl
je
sbb
enter
pop
mov
inc
dec
xor
pop
lea
loopne
shl
ins
std
dec
sahf
loope
cmps
and
outs
out
(bad)
shr
leave
pop
xchg
push
or
pop
and
stos
add
test
int3
mov
mov
aaa
rcr
loope
push
and
jmp
lock
lds
out
dec
stos
test
xor
push
pop
mov
mov
mov
inc
aaa
out
cli
jl
aam
ja
std
lahf
hlt
mov
stos
pushf
jle
mov
sbb
xchg
mov
fnstcw
jle
bound
jnp
push
pop
(bad)
sub
xchg
fist
pop
cmp
addr16
les
and
loope
adc
mov
sahf
push
cmp
xor
pushf
xlat
push
ret
aad
jmp
pop
loope
cmps
fs
pop
sub
loop
pop
(bad)
movs
ds
sbb
push
cmp
and
mov
pop
dec
pop
jbe
pop
xchg
mov
mov
aam
push
js
or
sbb
mov
sbb
dec
shr
push
or
test
mov
ss
mov
outs
addr16
aam
adc
cmp
or
push
add
xor
add
mov
mov
mov
dec
int3
push
mov
mov
mov
mov
lds
mov
jmp
sub
xor
jle
outs
xor
loop
or
pop
inc
xchg
cmp
mov
ret
push
add
mov
outs
add
jns
sbb
cmp
movs
call
jo
in
pop
and
enter
out
jb
xchg
mov
cwde
cmp
fs
mov
out
inc
iret
ja
pushf
and
cwde
sub
mov
and
jo
fucomip
mov
sbb
stos
jno
icebp
xchg
dec
enter
sbb
lock
jp
push
scas
and
lods
sub
add
jnp
or
int3
inc
shl
pop
aam
popa
stc
out
sub
mov
mov
in
mov
cmp
xor
jae
jns
icebp
and
jnp
in
test
mov
adc
mov
mov
adc
ins
ja
pop
ja
imul
fwait
mov
dec
inc
(bad)
mov
pop
ret
cwde
or
jno
aad
ret
pshufw
jge
sbb
mov
repnz
mov
cli
pop
sub
pop
std
push
loop
(bad)
inc
stos
cmp
and
jae
and
daa
xchg
js
mov
mov
mov
call
rcl
and
test
inc
into
dec
sbb
mov
pop
jg
fadd
ins
mov
sbb
xor
ret
mov
cmp
mov
xor
pop
mov
clc
pop
clc
(bad)
push
retf
les
mov
sub
bound
and
outs
cmps
push
fsincos
sar
sub
shr
sbb
loope
mov
iret
adc
add
pop
xchg
jl
cmps
mov
in
lahf
xchg
xchg
fmul
popa
mov
scas
mov
push
mov
inc
add
mov
add
movs
or
(bad)
xor
pop
popa
leave
and
es
xchg
mov
add
addr16
fs
pop
sub
sbb
sub
nop
sub
mov
mov
mov
sahf
enter
(bad)
fild
lahf
scas
fistp
add
shr
adc
xchg
add
dec
frstor
xor
push
das
pop
dec
push
xchg
mov
sti
add
dec
nop
mov
push
pop
scas
add
call
adc
test
addr16
sub
pop
stos
sar
add
pop
sub
push
lock
push
add
mov
inc
push
(bad)
scas
loopne
fsub
test
repz
pop
fadd
repnz
cmps
ja
push
xchg
mov
lods
and
xchg
movs
mov
and
cmps
xchg
xchg
mov
rcr
lods
rcr
xor
pop
repnz
outs
ins
ror
pop
into
test
sbb
push
frstor
and
xor
ror
mov
popa
dec
(bad)
(bad)
jbe
jmp
cs
fisttp
or
lods
lea
loope
inc
xchg
pusha
pop
mov
je
repz
pusha
sahf
push
pop
aad
fcmovnb
cmp
(bad)
or
int3
retf
fucomi
and
mov
and
pop
icebp
sub
xor
xor
adc
dec
out
adc
jmp
movs
sub
das
xor
shl
inc
adc
inc
xor
outs
ds
xor
fnstenv
imul
inc
xor
lahf
jg
retf
add
imul
pop
mov
jne
push
push
or
pop
retf
add
or
xchg
sbb
mov
pusha
mov
lock
rcl
and
out
dec
sub
dec
fsubr
sbb
xchg
add
pusha
sub
push
inc
mov
mov
xchg
out
and
xchg
jnp
xchg
jge
adc
dec
jmp
adc
out
mov
scas
cmp
inc
mov
fwait
loope
jo
push
imul
add
pop
js
ret
pop
push
cmc
imul
dec
stos
daa
sub
lock
push
push
mov
out
fsubr
lods
sub
xchg
push
clc
mov
cdq
xor
mov
aam
mov
les
call
call
cmc
fldcw
mov
inc
dec
popf
dec
jbe
mov
pop
daa
mov
and
inc
rcl
(bad)
(bad)
loope
ins
push
sub
dec
dec
pop
and
fisub
mov
sbb
jae
cmp
in
sub
test
retf
sbb
adc
test
sbb
mov
shr
sbb
retf
sbb
out
cli
test
loope
scas
bound
cdq
inc
(bad)
and
xchg
sub
cdq
int3
in
cmp
fdivr
loope
dec
push
repnz
and
cmp
push
popf
leave
out
sti
add
mov
pushf
xchg
call
jmp
cmp
fiadd
cs
repz
mov
(bad)
dec
loopne
fcom
push
mov
mov
shr
(bad)
mov
pop
mov
ins
call
mov
repnz
cmps
sbb
sub
xor
cli
(bad)
fadd
mov
clc
scas
cmp
xor
mov
jne
xor
stmxcsr
push
add
sbb
pusha
out
inc
nop
adc
loop
movs
and
test
arpl
fidiv
fcom
cmp
stc
push
les
lods
ds
cmps
push
cld
les
cmps
les
sar
fs
sbb
dec
add
aam
and
into
push
adc
(bad)
gs
loope
sub
mov
add
jmp
jnp
sbb
hlt
out
and
retf
push
iret
sbb
inc
test
mov
adc
es
call
mov
int3
jg
mov
cmp
or
xchg
rcl
and
inc
xor
jbe
out
xor
mov
lock
stc
xlat
frstor
cwde
sbb
xor
rcl
out
iret
mov
fidiv
(bad)
pop
retf
sub
xchg
inc
call
test
inc
pop
(bad)
cli
in
outs
xor
hlt
add
ret
ins
es
or
pop
lahf
lahf
sbb
mov
iret
dec
div
jo
xor
(bad)
mov
iret
retf
mov
rol
popa
in
sub
xchg
adc
jne
jae
mov
rcr
xor
cld
pop
arpl
xchg
mov
fmul
test
pop
(bad)
scas
pop
pop
cdq
stc
jae
cld
adc
add
dec
popa
sub
cmc
into
pop
dec
and
and
jmp
icebp
outs
movs
fcmovu
(bad)
cmp
sahf
lea
ins
pop
lds
push
(bad)
adc
fstp
jno
leave
nop
mov
imul
or
test
cmc
mov
push
xchg
push
call
xor
xchg
lods
hlt
dec
js
sahf
bound
push
adc
xchg
sub
lods
and
sti
xchg
xor
push
cdq
scas
adc
xor
fdiv
xchg
sbb
fmul
jb
mov
sub
push
test
or
mov
push
pop
jne
mov
inc
pop
mov
ins
out
mov
cmps
xchg
jnp
aaa
int
mov
xor
sbb
jl
clc
mov
pop
(bad)
sub
mov
mov
xchg
mov
cli
add
jge
push
jle
cmp
add
xlat
clc
jbe
sub
pop
loopne
mov
mov
lods
movs
fild
pop
aas
div
sub
(bad)
(bad)
adc
sahf
cmp
inc
or
and
movs
loopne
xor
xchg
pop
jmp
sar
mov
mov
das
cli
(bad)
lods
jmp
xchg
add
xchg
and
mov
sbb
adc
inc
add
jecxz
aad
cmp
cmps
clc
popf
cmp
call
xlat
pop
mov
call
pop
ja
pop
imul
sub
sbb
stos
xor
sub
(bad)
adc
pop
addr16
ret
mov
lock
cli
adc
jmp
lods
mov
push
cmp
or
sub
mov
loop
repnz
mov
cmp
push
mov
pop
das
leave
cmp
jge
std
test
add
cmp
cmp
(bad)
in
mov
push
dec
cmp
fdiv
or
lods
(bad)
mov
test
mov
lock
les
push
out
mov
add
mov
push
das
inc
hlt
test
sahf
das
into
adc
in
jno
mov
fimul
je
dec
outs
cmp
sbb
push
sbb
aaa
imul
and
ret
ins
ins
mov
(bad)
add
push
loopne
cmp
clc
cmp
sahf
fs
leave
xchg
cli
das
and
shl
or
mov
jnp
hlt
out
push
jmp
in
xchg
mov
fdivr
fdivr
pop
push
cmps
pop
push
(bad)
adc
mov
jl
inc
clc
scas
push
add
add
ja
add
xchg
or
(bad)
shl
jb
xlat
jge
xchg
cs
rol
xchg
adc
and
xchg
pop
inc
mov
idiv
jmp
fiadd
push
dec
int
sub
(bad)
sbb
scas
pop
xchg
push
xchg
(bad)
div
scas
(bad)
mov
sar
into
cwde
sbb
in
dec
jo
cdq
add
jno
shr
jle
lods
jno
leave
jns
mov
or
lock
(bad)
xchg
neg
jmp
mov
loopne
cmp
test
inc
xor
inc
cld
sub
js
mov
div
xor
sbb
cmc
and
push
xchg
ret
adc
lds
push
scas
pop
pusha
adc
scas
mov
sbb
leave
stos
cli
call
out
xchg
mov
int
adc
stc
push
dec
sbb
shl
jg
rcr
cmp
mov
fmul
aaa
sbb
push
aaa
fldenv
adc
aaa
inc
and
sbb
cli
cmps
xchg
imul
jno
pop
dec
cli
je
lods
dec
cmp
and
and
retf
dec
div
mov
xchg
jb
mov
and
mov
push
mov
push
xchg
mov
hlt
lds
pop
adc
xor
aaa
dec
sbb
xchg
xchg
sbb
enter
lahf
adc
(bad)
retf
add
mov
sbb
in
and
xchg
nop
test
fwait
shr
jb
sbb
frstor
and
xor
sub
and
sti
lds
out
pop
cdq
cmp
int3
sub
sub
xor
add
xchg
rcr
pop
rcl
jecxz
pushf
in
add
xor
ins
sbb
icebp
neg
and
inc
fbld
ds
pop
(bad)
loope
js
pop
cmp
cmp
mov
pop
not
retf
mov
into
sub
bound
das
jmp
mov
ret
or
outs
pop
dec
and
in
jecxz
jg
mov
arpl
sbb
ins
lea
ins
mov
jae
es
xchg
fldcw
aas
ss
cmp
mov
push
data16
daa
cmc
aam
mov
push
das
pop
jmp
xor
(bad)
push
sub
mov
jg
push
stc
in
repnz
out
mov
xchg
xchg
repz
js
mov
imul
(bad)
test
sub
sar
sbb
fs
lea
(bad)
in
or
xchg
rcl
dec
ret
inc
fs
adc
adc
ins
mov
and
dec
pop
daa
cli
or
inc
mov
lahf
add
fimul
ret
jp
pop
cmps
(bad)
loopne
mov
jmp
ficomp
outs
loopne
add
movs
test
jns
test
mov
xchg
and
movs
cld
and
inc
lea
hlt
dec
je
xchg
outs
inc
add
(bad)
addr16
and
push
sbb
xchg
repz
push
rcr
mov
xor
rcl
icebp
dec
add
and
adc
call
inc
push
lds
icebp
jmp
cmp
mov
or
lds
xchg
pop
and
out
push
lods
sbb
enter
pusha
push
stos
xchg
push
iret
sahf
stc
call
fdivr
(bad)
fisttp
cmp
jmp
xlat
pop
jnp
push
adc
outs
rol
shl
pop
mov
mov
inc
into
loop
mov
shr
mov
push
ror
cmp
test
nop
(bad)
iret
or
sbb
ret
dec
leave
outs
sbb
xchg
nop
ins
call
sbb
and
cmp
aam
cmp
clc
dec
mov
sti
jg
add
push
neg
lods
pop
in
adc
jns
xor
pop
cdq
or
pop
clc
mov
mov
and
add
retf
jo
mov
cs
dec
stc
push
pop
pop
hlt
or
outs
push
push
in
dec
mov
outs
(bad)
adc
inc
stc
mov
inc
push
inc
mov
mov
cmp
jae
movs
mov
into
ror
aad
mov
mov
cs
stos
push
inc
arpl
lds
jb
sbb
rcl
mov
mov
std
and
sbb
and
jne
xor
inc
std
cmps
mov
pusha
xchg
mov
ret
ds
push
push
xchg
into
imul
cli
stc
xchg
push
(bad)
fisttp
in
in
jbe
rcr
in
ins
fsub
jo
ins
dec
push
mov
mov
pop
sbb
cwde
test
jl
adc
jle
mov
jno
fcomp
xor
sbb
xchg
retf
add
mov
and
jmp
push
pop
pop
sub
xchg
xchg
xor
ds
jnp
and
movs
xor
dec
xchg
pop
adc
lods
adc
stos
out
add
xor
sub
retf
inc
sbb
repnz
cmp
sbb
sar
mov
hlt
cwde
xchg
lea
jle
cmps
fld
add
jecxz
shl
mov
int3
cld
jns
jge
movs
jge
ret
fbld
fbld
in
sub
mov
sti
mov
movs
mov
cmps
pop
fisub
adc
push
test
push
inc
(bad)
mov
jp
mov
sub
sbb
ds
jmp
lods
inc
pop
cdq
push
sbb
and
cmp
jbe
scas
mov
es
jne
pop
or
das
dec
shr
sub
daa
push
test
cmps
lock
mov
or
sbb
aam
inc
pop
dec
dec
mov
ret
(bad)
pop
js
int
call
aaa
pop
push
retf
lahf
or
aam
pop
adc
xchg
add
and
adc
sbb
jns
fcomp
mov
data16
mov
sub
sub
mov
loope
cld
je
ret
sbb
(bad)
movs
pop
xor
mov
adc
jmp
mov
rcr
fistp
mov
sub
outs
(bad)
cld
ja
or
fiadd
icebp
and
lds
xor
loope
jne
rol
ror
sub
bnd
out
pop
dec
test
jl
scas
in
(bad)
mov
mov
pop
ins
imul
repnz
fcomp
jno
(bad)
into
jae
pop
test
or
imul
push
pop
mov
in
mov
and
mov
mov
xchg
loopne
add
cmps
rcr
ror
cmp
addr16
adc
(bad)
js
jecxz
(bad)
cwde
enter
xor
cmc
ret
cli
pop
out
sbb
add
outs
pusha
push
or
push
and
pop
ret
aas
gs
imul
dec
push
mov
mov
sub
cmps
enter
fiadd
enter
fmul
sti
mov
cmp
cdq
hlt
push
cmc
int
mov
lods
sar
aad
(bad)
dec
cmp
leave
lea
(bad)
daa
out
xlat
pop
sbb
and
aaa
jl
shr
(bad)
sbb
jl
push
mov
adc
jle
test
or
outs
jb
jne
addr16
call
fcomp
jl
sbb
pop
jb
mov
add
mov
xor
ins
mov
sbb
in
inc
lea
push
iret
and
pop
inc
sub
sbb
add
xor
dec
push
out
in
ds
inc
call
push
icebp
mov
mov
sti
pop
add
xchg
dec
sahf
fnstcw
call
mov
scas
ss
fwait
sbb
btc
aaa
ret
mov
shl
mov
leave
retf
push
or
xchg
sub
mov
movs
inc
xchg
retf
ret
sub
inc
mov
repnz
test
adc
and
call
xlat
xor
test
lea
call
dec
push
daa
sbb
scas
lock
xchg
mov
test
repnz
pop
ins
aaa
ds
int
xor
sub
mov
mov
xchg
sub
xchg
jle
jl
ss
adc
es
stos
(bad)
mov
(bad)
cdq
xchg
mov
mov
gs
ror
sub
js
fwait
mov
cmp
xor
clc
pop
mov
lods
xchg
call
stc
idiv
ins
dec
dec
sub
and
pop
cwde
lock
mov
mov
dec
sub
ss
in
(bad)
xchg
mov
es
jns
and
mov
fistp
push
sbb
stos
dec
lods
or
push
cwde
pop
aam
dec
sbb
or
add
jg
add
daa
mov
add
pushf
jp
cdq
stc
iret
mov
jne
jge
hlt
adc
pop
(bad)
leave
sub
dec
test
pop
ret
adc
mov
sbb
sub
mov
jno
pop
out
mov
and
pop
fmul
test
push
lods
fdivr
mov
adc
ss
jg
pushf
xchg
push
jmp
sbb
sahf
jb
fstp
jo
cdq
stos
enter
cmp
xor
leave
stos
fcomp
pushf
xor
test
mov
movs
pop
xor
bound
jae
xor
push
sti
jg
xor
pop
or
pop
sbb
repz
mov
int
loope
sbb
xor
mov
push
arpl
arpl
adc
enter
add
adc
inc
(bad)
aam
ret
add
(bad)
and
popa
cmp
or
test
xor
adc
cdq
inc
(bad)
lock
cld
jl
mov
add
pop
dec
mov
gs
gs
imul
jmp
push
xchg
push
push
test
fs
add
jmp
sub
mov
test
or
lds
inc
stc
test
mov
pop
inc
pop
into
xchg
jl
(bad)
mov
lods
xor
inc
inc
outs
mov
sub
and
mov
test
and
fist
rcr
mov
bound
sub
add
rol
push
sub
clc
and
pop
cmp
jo
pop
push
out
ret
pop
sar
shr
push
xor
lods
bound
dec
push
sub
add
retf
sub
cmp
dec
xor
sub
cdq
rol
cmps
mov
enter
and
cmp
xchg
cmp
ins
pop
dec
xor
sbb
add
fcom
sbb
cli
or
sbb
push
je
outs
mov
ss
stos
mov
inc
ins
xchg
jbe
mov
loope
and
(bad)
in
imul
sub
cli
adc
mov
push
stos
out
sub
inc
lds
int
xlat
add
cmp
or
addr16
int3
sbb
prefetch
or
cwde
cli
into
call
pop
daa
pushf
mov
mov
outs
shr
mov
xchg
inc
daa
push
mov
out
dec
xor
jns
push
movs
loopne
mov
pop
imul
lahf
ins
mov
and
xchg
jbe
or
jmp
rol
aad
cmp
push
pop
xchg
not
sbb
xchg
pop
cmp
dec
dec
nop
xchg
adc
jns
int3
stos
dec
sbb
push
and
in
or
pop
jmp
xor
fcom
mov
xor
pop
stc
jb
inc
rcr
popf
xor
or
cmp
in
push
add
and
dec
loopne
in
and
cmc
addr16
cmp
call
jbe
sub
sahf
mov
retf
fcom
cmc
mov
pop
das
enter
ss
dec
and
imul
in
nop
jge
sti
push
ror
inc
jp
sub
test
(bad)
cmp
mov
aam
jo
mov
push
stos
scas
iret
mov
mov
in
(bad)
sub
cmp
leave
xchg
imul
adc
cmp
inc
rol
pop
adc
jecxz
jecxz
fdiv
jg
sbb
cs
adc
dec
lea
pop
or
sbb
ret
jae
sar
mov
mov
xor
scas
mov
sub
sub
ins
sbb
loopne
sar
sub
dec
paddd
repz
arpl
add
push
scas
call
scas
pushaw
and
dec
jle
cmp
cmp
dec
cmps
push
push
fsubr
stos
outs
inc
cwde
leave
sub
sbb
xor
jo
cmp
sbb
cmc
xchg
inc
jg
or
std
add
idiv
lods
daa
cwde
fs
(bad)
das
cwde
mov
iret
imul
enter
pop
sbb
jo
cmp
and
cdq
(bad)
mov
(bad)
sbb
gs
xchg
xlat
adc
and
(bad)
pop
sub
mov
movs
sbb
fadd
push
pop
mov
test
mov
inc
cdq
adc
xchg
(bad)
push
mov
and
or
sbb
inc
sbb
addr16
out
mov
dec
mov
sbb
mov
mov
add
mov
push
stos
outs
pop
icebp
ins
retf
in
out
pop
inc
enter
dec
das
sbb
stc
push
outs
mov
lods
add
xchg
jl
(bad)
push
ja
movlhps
aam
push
push
out
cmp
in
loop
mov
imul
pushf
sbb
shl
test
fisub
push
in
push
test
(bad)
jle
add
jl
push
rol
outs
(bad)
out
or
xor
mov
ret
sub
inc
mov
shr
push
pop
stc
jbe
jp
cmp
enter
icebp
cmp
enter
ins
loope
pushf
jle
cmp
dec
int
add
in
inc
lods
leave
into
xchg
out
mov
clc
jl
test
push
and
sbb
or
mov
or
aad
into
leave
mov
mov
test
in
push
inc
adc
xchg
xor
(bad)
(bad)
inc
rcr
repnz
(bad)
cld
or
call
add
fistp
rcr
jae
sub
mov
retf
xchg
inc
jl
push
xchg
lea
and
movs
mov
test
xchg
popf
mov
pop
or
mov
or
xchg
mov
pop
mov
(bad)
or
movs
add
je
add
das
or
out
jp
add
ret
call
outs
jo
popf
lods
sub
std
push
fisubr
lds
sahf
call
cmp
mov
fs
sbb
lock
sar
and
repz
jae
rcl
adc
pop
jns
pop
xor
out
adc
pop
es
cmp
sbb
sub
fwait
js
call
and
add
std
(bad)
sar
shl
ret
and
mov
das
jb
lods
xor
inc
sbb
repz
xchg
mov
scas
nop
adc
xchg
inc
out
ja
mov
push
inc
add
jecxz
and
inc
push
aaa
cmc
and
and
jns
clts
push
fistp
int3
xchg
movs
ins
lods
fadd
xor
stos
aaa
jne
rol
shl
popa
das
and
xor
mov
aaa
jl
adc
xor
cmp
call
dec
mov
je
add
mov
cs
push
mov
les
stc
jne
sbb
sub
jmp
lods
and
mov
enter
or
sub
je
sub
pop
mov
int
test
sbb
push
shl
inc
in
shr
jo
mov
repz
mov
xor
jae
mov
jne
push
inc
jns
cmp
sahf
pop
pushf
cdq
pop
or
adc
call
inc
xchg
or
add
inc
fs
cwde
adc
mov
and
xchg
pop
pop
dec
sub
sub
cmp
push
iret
shl
xlat
bound
mov
jae
mov
gs
adc
rsm
dec
jl
pop
mov
mov
add
jae
xchg
jb
shl
data16
sub
bnd
repnz
js
add
push
mov
pusha
aam
fstp
inc
dec
inc
or
dec
inc
mov
dec
ror
adc
in
jmp
push
imul
cmp
(bad)
sbb
and
mov
xchg
daa
aad
mov
cmp
and
(bad)
div
push
adc
inc
popa
mov
js
ror
cmps
mov
mov
mov
(bad)
fmul
les
sbb
or
xchg
pop
xchg
jbe
jmp
mov
aad
sub
inc
mov
or
jp
gs
push
mov
jge
jecxz
stos
adc
imul
call
pusha
and
(bad)
imul
call
call
push
cmp
jno
add
push
pop
sti
pop
pop
mov
add
cmp
into
stos
fnstenv
in
jno
mov
aaa
dec
fsubr
fnstenv
jmp
ins
enter
jl
inc
leave
cld
and
inc
bswap
rol
out
xlat
sub
mov
aad
mov
pop
cmp
retf
(bad)
dec
push
mov
scas
xlat
jne
sub
movs
icebp
add
mov
lea
lea
addr16
stos
jbe
cmps
ins
leave
push
jo
xchg
mov
fistp
cmp
fild
pop
pop
aaa
imul
bound
sbb
push
in
arpl
and
adc
pop
dec
mov
ja
repnz
sbb
lods
cmp
imul
push
or
in
inc
inc
gs
lods
sbb
inc
mov
scas
cli
sahf
sbb
dec
stos
mov
test
jnp
jg
imul
jmp
pop
inc
cmps
mov
and
inc
ja
out
mov
add
xchg
jecxz
inc
stc
push
cs
rol
sbb
fnstcw
(bad)
xchg
cmp
rcr
scas
push
aam
jbe
inc
out
loopne
ret
test
xchg
mov
dec
mov
fiadd
xchg
pusha
push
jbe
imul
movs
cmp
or
push
(bad)
xchg
xchg
mov
add
dec
adc
jg
mov
push
pop
pop
cwde
scas
fldcw
cmc
out
inc
popf
popf
mov
pop
dec
cli
pop
cmp
lahf
xchg
ret
cmp
cmp
sbb
inc
add
fucomi
push
add
js
daa
jo
mov
push
xor
inc
daa
pusha
jae
jmp
and
loopne
jmp
ss
mov
mov
fnsave
or
add
test
jp
(bad)
dec
mov
mov
and
inc
fistp
dec
fs
cmps
int3
fisubr
imul
(bad)
push
add
int
add
pop
addr16
in
(bad)
movs
jno
and
mov
xchg
cmc
icebp
jbe
retf
sub
push
test
mov
push
adc
ret
cwde
sbb
adc
xchg
xor
push
dec
inc
inc
bound
push
xchg
adc
dec
sbb
mov
leave
cwde
mov
xor
stos
sub
cmps
pop
bswap
test
push
pop
add
lods
sub
iret
ja
xchg
mov
int3
cs
mov
inc
dec
aad
data16
sub
leave
mov
and
cmps
ins
mov
emms
dec
fist
mov
sub
rcr
or
pop
inc
dec
push
push
mov
(bad)
cmp
jnp
push
sti
loop
dec
mov
pop
lea
mov
jl
pop
stc
push
mov
cdq
scas
pop
call
and
ja
inc
movs
jmp
xchg
cmc
sbb
outs
out
scas
fild
stos
jne
cmp
push
mov
stos
shl
cmp
mov
pop
mov
cmc
mov
test
pop
xor
(bad)
xor
pop
ins
enter
loope
aaa
imul
push
shr
jnp
dec
jp
sti
adc
(bad)
retf
dec
inc
out
xchg
fnstenv
add
loopne
imul
jl
pop
inc
enter
dec
addr16
out
fwait
stos
jno
xor
jmp
xchg
sbb
dec
fimul
fwait
(bad)
fidiv
sbb
push
lahf
mov
aaa
movs
clc
and
sbb
add
mov
mov
movs
sbb
add
stos
dec
lea
add
stc
les
inc
shl
(bad)
pop
push
mov
push
sti
xchg
stos
cdq
inc
mov
jge
and
xchg
sti
fcmovbe
mov
xchg
adc
xor
jns
rcr
push
jo
es
cmp
movs
dec
std
mov
push
add
mov
sahf
clc
popf
adc
dec
sub
fistp
sbb
dec
and
aas
mov
lock
cmp
(bad)
mov
mov
pop
mov
stos
cld
loop
xor
out
mov
movs
jae
mov
pop
xchg
stc
mov
fistp
mov
sbb
mov
pop
arpl
and
fild
xor
(bad)
pop
dec
mov
push
movs
xor
ins
or
dec
mov
jns
push
push
pop
outs
xchg
sub
outs
inc
jno
mov
pop
or
cmps
mov
ss
std
pusha
jne
pop
add
sbb
adc
xor
jae
jb
aaa
sub
jg
clc
les
push
mov
retf
loope
push
(bad)
push
daa
sti
and
xchg
fdivp
lods
cld
add
inc
adc
mov
es
or
xor
inc
sub
add
icebp
rcl
push
inc
ror
shr
test
jecxz
pop
data16
mov
fimul
push
rcl
enter
aad
sub
sbb
icebp
in
rcr
sahf
in
retf
mov
push
add
xchg
lods
ret
mov
and
jb
(bad)
mov
pop
mov
cli
pop
add
xor
retf
fsubr
cli
mov
ret
and
aas
cmp
sub
(bad)
mov
mov
adc
sub
mov
dec
enter
ins
ins
aam
xor
ins
cld
ins
loopne
sub
xchg
pushf
les
jle
scas
sbb
int
push
mov
sbb
popa
xchg
dec
(bad)
repz
sbb
cmps
imul
daa
add
int3
push
out
repnz
fwait
cmp
mov
(bad)
(bad)
and
pop
and
scas
call
push
outs
(bad)
push
pop
push
dec
nop
fs
mov
clc
cmps
and
mov
pop
int
inc
ror
and
push
fsub
xor
fbstp
out
xchg
or
mov
add
jecxz
mov
out
xor
int3
lock
lock
leave
ret
outs
imul
push
cmp
(bad)
test
test
xor
sbb
pop
aas
cli
sbb
sub
xchg
rcr
into
jecxz
and
out
je
movs
adc
inc
push
jmp
(bad)
sbb
adc
into
sub
fist
mov
sub
and
pop
nop
(bad)
push
pushf
cmps
mul
dec
adc
xchg
stc
movs
sub
sub
push
mov
push
dec
div
(bad)
mov
mov
das
adc
dec
and
or
or
xor
data16
fld
push
push
xchg
cmps
dec
hlt
and
inc
dec
inc
adc
sbb
dec
daa
cmp
ror
jp
inc
push
dec
pusha
movs
jns
in
xor
js
mov
inc
mov
jp
dec
push
pop
push
and
push
stc
dec
cmp
rcr
and
std
je
pop
pushf
and
cmp
dec
fwait
xlat
fwait
xchg
push
mov
popf
ror
jmp
pop
sub
retf
sbb
rcl
cmp
jge
ins
fsubrp
push
adc
inc
inc
(bad)
test
(bad)
mov
push
mov
and
int3
arpl
lea
stc
aam
ja
daa
enter
je
cmp
sub
push
push
rcl
pusha
js
mov
imul
fisttp
or
sub
(bad)
xor
sbb
dec
addr16
xchg
xchg
imul
test
adc
ss
ja
mov
loope
adc
not
cdq
sbb
sbb
ficomp
jb
int3
int3
xchg
gs
xor
in
lea
pop
cld
inc
sbb
mov
cmp
or
retf
icebp
and
dec
sub
test
jmp
lahf
jne
mov
mov
jecxz
loopne
rcl
mov
iret
pop
icebp
lods
push
test
pop
cmps
scas
adc
std
imul
fisttp
(bad)
sti
aad
adc
mov
jp
hlt
cmps
mov
hlt
sub
scas
and
xchg
xor
shr
scas
fs
mov
(bad)
push
fmul
cmp
push
pop
ror
je
pop
leave
xor
mov
mov
inc
push
push
lahf
mov
clc
xchg
call
ds
push
mov
fist
dec
pop
mov
out
push
pusha
mov
mov
mov
dec
push
cwde
mov
or
fcomp
push
in
add
in
stos
jo
jge
test
push
daa
adc
outs
inc
(bad)
fs
cmp
mov
int
lea
cmps
stos
jno
or
aaa
clc
add
lods
test
mov
pop
mov
sbb
jne
fwait
pop
xor
inc
inc
loopne
and
push
lods
(bad)
adc
cs
imul
sbb
fidivr
mov
xchg
pop
call
inc
xor
or
and
stos
cdq
push
mov
out
inc
fist
lods
jo
mov
push
push
mov
pop
inc
pop
retf
mul
ficomp
sbb
imul
adc
mov
(bad)
loope
(bad)
in
xor
jp
imul
lods
out
sahf
call
push
mov
dec
pop
mov
mov
das
xor
adc
sbb
mov
pop
das
popf
scas
es
icebp
out
idiv
pop
repz
push
push
(bad)
mov
inc
sub
ss
sbb
push
dec
nop
cmp
retf
lds
adc
enter
jg
jp
push
out
iret
test
retf
or
in
lods
dec
enter
fwait
lods
mov
aam
enter
xchg
push
dec
add
mov
mov
or
fsub
xchg
pop
aas
test
cmp
xchg
xchg
sub
enter
sbb
xor
mov
push
out
movs
dec
push
jo
or
test
lahf
jbe
test
push
lahf
popa
(bad)
mov
mov
sbb
pop
xchg
pop
sub
add
and
push
inc
lds
(bad)
dec
loope
dec
and
lea
pop
scas
mov
out
iret
sub
jge
mov
dec
xor
movs
je
and
jmp
sar
sti
dec
pop
add
shr
outs
leave
shl
mov
aas
inc
cmp
ret
gs
bound
xchg
dec
xor
inc
push
shl
popa
out
into
sbb
mov
add
inc
xor
pop
adc
add
mov
add
push
test
dec
xchg
addr16
aad
jmp
inc
add
psllq
adc
mov
sub
int3
pop
or
xor
adc
les
push
cdq
stos
retf
or
fs
ins
inc
or
mov
fs
xchg
mov
sbb
xchg
push
push
call
push
retf
hlt
xchg
sub
adc
sbb
(bad)
fstp
imul
xchg
test
(bad)
sahf
loop
mov
dec
xor
in
push
mov
test
daa
mov
loop
dec
out
xor
and
jnp
lds
pop
add
jp
daa
jns
xchg
mov
mov
jmp
and
in
rol
stos
xor
mov
movs
stc
push
ja
loop
ja
cmp
sahf
and
(bad)
test
ret
dec
cmc
test
xlat
inc
stc
mov
dec
rcr
adc
call
rcl
gs
or
xor
jbe
inc
mov
xchg
loop
inc
stos
cwde
(bad)
sbb
cmps
int
mov
mov
cli
in
scas
mov
pop
and
(bad)
pop
(bad)
mov
rol
add
test
cdq
add
daa
or
in
or
test
xchg
mov
addr16
sub
(bad)
dec
rcr
stos
xor
jns
dec
in
cmps
mov
(bad)
dec
or
hlt
call
repnz
adc
addr16
test
repz
gs
repnz
sbb
cmps
mov
mov
(bad)
int3
sbb
push
aas
jmp
imul
and
xor
daa
lock
cmps
inc
or
jbe
jno
xchg
cmp
aad
test
(bad)
pop
sub
fwait
aas
rcr
inc
dec
sub
out
loope
xor
mov
(bad)
retf
cmp
mov
cmp
inc
(bad)
dec
sahf
sbb
mov
jae
pop
scas
loop
add
stc
gs
bound
sbb
sbb
sub
dec
xchg
stos
xor
add
push
retf
(bad)
push
adc
scas
loopne
test
xor
mov
addr16
fs
icebp
lods
ror
in
mov
cld
xchg
inc
repz
jo
cmp
call
ret
call
stc
repz
dec
or
sar
ins
inc
aam
mov
imul
in
mov
jecxz
jb
sub
jo
retf
cmps
sub
out
in
push
sbb
and
movs
loop
or
ins
nop
ja
mov
test
jb
pop
pop
jne
sub
mov
mov
pop
jle
scas
loopne
(bad)
mov
jbe
dec
arpl
sbb
stc
movs
mov
cmp
(bad)
fisttp
in
dec
lods
jle
addr16
jno
jb
dec
lock
(bad)
xchg
dec
ja
mov
outs
into
xchg
call
in
xchg
ins
cwde
imul
xor
stos
dec
fs
imul
aam
in
jmp
das
popa
xor
repnz
lods
leave
fimul
pop
(bad)
xor
mov
sbb
(bad)
je
stc
add
cmp
or
mov
jmp
xor
sbb
mov
js
dec
jg
dec
imul
jecxz
sbb
retf
mov
sbb
dec
push
cmp
or
sbb
cdq
js
jmp
xor
sbb
pop
dec
push
mov
add
and
cs
call
xchg
jae
mov
daa
test
xor
fadd
cmp
jno
leave
pushf
xchg
movs
into
add
je
arpl
xchg
pushf
pop
mov
cmps
or
push
test
out
adc
or
shl
adc
in
push
mov
fwait
mov
jno
sbb
push
push
(bad)
mov
cmp
lock
cmps
or
outs
xor
outs
stc
rcl
movs
pop
inc
xchg
(bad)
mov
je
or
(bad)
(bad)
mov
mov
int
repnz
cmps
retf
cmp
push
jnp
xlat
adc
ja
pop
mov
xchg
pop
cmp
ret
cdq
adc
add
arpl
cmp
push
ins
imul
add
inc
fcomp
cmp
cmp
retf
jnp
xchg
mov
pop
rcr
rol
cmc
xor
jmp
out
cmp
adc
sti
add
sub
inc
push
jnp
out
jl
or
mov
stos
and
stos
xchg
mov
mov
adc
and
jb
cmp
pop
push
fdiv
enter
and
xor
outs
fidivr
(bad)
mov
jge
test
ds
dec
shl
mov
dec
imul
jo
pusha
mov
hlt
push
sub
jle
jns
loopne
mov
retf
mov
in
push
inc
in
xchg
test
in
ins
aad
sub
dec
cdq
retf
std
fsub
push
fdiv
imul
mov
fwait
sbb
mov
es
cmp
mov
jmp
or
and
out
add
(bad)
test
mov
cwde
pop
xlat
mov
ja
in
aas
hlt
mov
cmps
out
shl
mov
xchg
je
outs
cdq
dec
pop
pop
push
cmp
dec
cmp
dec
outs
call
and
(bad)
mov
mov
and
iret
pop
inc
dec
sar
or
inc
into
add
mov
inc
movs
adc
dec
mov
out
daa
xchg
or
inc
adc
pop
ins
(bad)
push
pop
xlat
jmp
outs
push
mov
fwait
and
daa
mov
xor
loop
cmp
cmc
mov
xchg
or
sbb
pop
in
mov
xlat
sub
or
loope
sbb
enter
es
pop
lods
and
lods
push
outs
fs
ret
inc
repnz
xchg
sbb
in
movs
dec
jo
mov
lods
les
jg
in
mov
inc
dec
cmp
call
push
xor
xor
dec
pop
(bad)
mov
pop
cmp
add
bound
sub
jbe
popa
nop
jmp
arpl
scas
rcr
add
ficomp
push
sbb
ja
mov
and
xor
mov
jne
xor
mov
xor
int
scas
or
xor
dec
pop
cmps
outs
mov
mov
cmc
mov
xlat
sub
add
rcr
and
shl
jmp
sub
repz
outs
cmp
xlat
imul
jg
ss
and
jmp
sti
xor
sbb
aad
mov
scas
inc
push
mov
cmp
sti
pop
cmp
sbb
repz
xlat
dec
or
and
inc
mov
sub
enter
outs
xchg
imul
out
cmc
add
sahf
cld
jnp
adc
add
push
icebp
pop
(bad)
sub
retf
sti
fwait
pop
retf
or
stos
popf
inc
jmp
push
jg
enter
je
loop
xchg
or
or
cmp
(bad)
add
lock
pop
stos
jo
sub
push
packuswb
div
cdq
lds
sar
enter
sub
frstor
dec
push
mov
pop
js
scas
lock
jns
or
(bad)
rcl
xchg
fwait
inc
sub
je
push
loope
jns
dec
add
xchg
ret
sub
fs
pmulhw
pop
sbb
push
and
mov
mov
(bad)
fst
mov
popf
jp
xchg
mov
sub
push
out
dec
xor
test
jge
jo
rcl
cdq
out
inc
out
dec
pop
fwait
lahf
ja
and
ret
in
dec
mov
test
scas
sub
push
pop
loopne
ins
fisub
cli
xchg
jmp
(bad)
int
adc
test
and
push
pop
leave
pop
ror
(bad)
test
loopne
jg
mov
sub
pop
movs
(bad)
fbstp
mov
push
push
add
sub
push
cmp
scas
and
popf
add
cmp
sbb
lds
fadd
push
fcmovnu
bound
repnz
add
add
fsubr
push
inc
sbb
inc
mov
adc
pushf
mov
push
repnz
jae
mov
push
pop
loop
stc
pop
jae
loope
das
ret
jmp
inc
repz
test
ja
xlat
mov
dec
dec
fsqrt
nop
pop
and
inc
sub
in
ins
push
mov
call
imul
std
sbb
pusha
in
sbb
jbe
push
pushf
in
movs
xor
enter
sti
arpl
in
loop
repz
outs
loop
(bad)
cs
push
(bad)
mov
rcr
scas
cli
loop
xchg
hlt
addr16
sub
push
mov
xchg
mov
loope
shr
jno
movs
xchg
pop
repz
xchg
fldenv
mov
fidiv
mov
or
mov
shl
std
sub
push
es
sahf
movs
ins
aaa
and
jbe
retf
int
jo
mov
idiv
clc
ficom
fcomp
int
lea
xor
mul
js
aaa
sub
mov
ja
push
out
dec
xchg
and
xchg
out
rcl
jbe
add
mov
push
pushf
(bad)
push
out
ret
(bad)
faddp
or
out
imul
es
shl
stc
push
fwait
les
cs
div
aaa
xor
and
mov
pop
sbb
fcom
(bad)
data16
mov
xor
xor
pusha
add
(bad)
dec
xor
mov
mov
xchg
pusha
inc
xchg
pop
leave
imul
fadd
pusha
or
test
ins
add
dec
es
fs
inc
xchg
cmc
jp
test
dec
mov
sub
add
lods
into
jg
inc
(bad)
jmp
push
jmp
lods
pop
mov
ja
scas
xchg
ins
pop
xor
stos
push
std
imul
test
dec
pop
cli
ret
mov
outs
sub
out
mov
dec
mov
jmp
cmp
pop
retf
inc
and
icebp
fld
mov
es
and
inc
fild
(bad)
xchg
push
pushf
sbb
fwait
(bad)
dec
xchg
fdivr
push
mov
xor
mov
and
shl
in
add
mov
test
rcr
call
jbe
adc
inc
femms
cmp
aad
xchg
mov
call
lahf
and
mov
xlat
lods
div
iret
pop
mov
jbe
fucomi
or
push
jp
jmp
fcmovnb
xchg
bound
xchg
sbb
mov
sbb
pop
lock
pushf
cmp
outs
sub
test
mov
push
fcom
idiv
dec
mov
fld
xor
(bad)
fnstenv
mov
mov
jmp
sbb
inc
shl
ret
jb
ror
jne
add
mov
dec
shr
pop
fst
out
fisub
fild
cmp
call
jnp
pop
cmp
dec
into
cmp
dec
repz
retf
dec
xchg
mov
ficom
into
dec
test
fsubr
test
push
das
sub
dec
and
call
jmp
fbstp
jecxz
mov
mov
in
ret
lds
fdivr
jb
clc
cmp
sbb
or
add
push
stos
(bad)
sub
sti
inc
inc
in
outs
inc
mov
ds
rcl
lahf
mov
(bad)
imul
addr16
adc
jecxz
call
mov
dec
pop
mov
push
xchg
(bad)
in
adc
sbb
pop
mov
push
cmp
xchg
jb
cli
cmp
int
add
outs
push
push
sbb
icebp
add
shl
push
popa
add
adc
xor
jecxz
add
fild
call
or
call
mov
scas
mov
dec
dec
cmp
push
rcl
(bad)
sub
cmps
adc
pop
mov
sbb
lds
add
arpl
ret
lds
adc
fisub
xor
pop
lods
fcmovnbe
movs
arpl
jmp
repz
or
xor
xchg
mov
cmp
mov
or
add
and
icebp
push
mov
(bad)
movs
outs
xchg
cmp
mov
movs
mov
cmp
xchg
mov
jns
int
jns
fld
cmc
sub
test
loope
xchg
sti
and
inc
add
jo
test
pop
sbb
push
imul
stos
mov
mov
(bad)
mov
or
dec
and
mov
push
pop
dec
inc
jge
mov
jp
jne
cmp
mov
out
outs
dec
(bad)
shr
push
jp
stos
es
iret
faddp
pop
clc
push
add
std
data16
stos
mov
mov
cmp
test
pushf
outs
and
adc
fist
hlt
sbb
aaa
jbe
adc
dec
and
push
movs
inc
stc
pusha
jo
aam
sub
xor
xor
aas
sti
mov
mov
sub
ror
cmp
lods
cmps
jnp
fyl2xp1
mov
movs
int
gs
sub
out
mov
sbb
mov
(bad)
cmp
sbb
stos
inc
(bad)
inc
sub
inc
cmp
pop
cli
mov
lock
dec
xchg
lea
or
sub
pop
mov
cmc
js
lds
(bad)
lods
push
inc
int
fs
mov
push
ds
in
mov
movs
nop
mov
dec
or
jb
jns
dec
int
nop
jns
mov
in
add
mov
aam
jns
popa
(bad)
jmp
ror
xor
sub
fimul
jns
in
pushf
jg
mov
fistp
sbb
jmp
(bad)
or
or
cmp
xchg
xchg
fdiv
or
out
cmc
pop
sub
cmp
fdivr
loop
inc
test
(bad)
(bad)
jecxz
jo
js
cmp
(bad)
mov
clc
je
sar
xchg
mov
out
in
pusha
(bad)
mov
xor
mov
push
pop
mov
xchg
cdq
push
mov
jmp
cmp
xor
pop
mov
imul
xchg
mov
pop
mov
pop
in
ds
sub
ret
mov
das
mov
daa
ja
shl
xchg
jl
adc
int
xchg
rcr
std
cmp
inc
xchg
push
test
es
mov
or
(bad)
xlat
sbb
(bad)
adc
dec
pushf
push
movs
mov
fwait
dec
or
adc
add
lods
pop
call
je
(bad)
hlt
outs
cmps
or
imul
mov
inc
sti
test
loope
cmc
adc
ins
in
mul
ds
fsub
or
mov
(bad)
out
xchg
xor
cld
faddp
push
sbb
repnz
sub
call
pusha
iret
sar
or
das
pop
sbb
pop
(bad)
xlat
jl
fisttp
sbb
adc
test
clc
cmps
aad
sub
mov
add
and
sbb
loope
mov
fnstenvw
xor
leave
les
imul
repnz
xchg
xchg
(bad)
lahf
or
ins
inc
fldpi
dec
mov
shr
jg
and
repnz
pop
aaa
shr
int3
pop
test
push
hlt
stos
dec
cmp
xor
repz
pop
sar
pushf
clc
mov
push
scas
mov
sbb
cmps
(bad)
dec
dec
addr16
xor
ret
mov
lock
pop
jmp
leave
fstp
icebp
sahf
xchg
aas
lea
or
sub
mov
dec
in
sub
in
ja
sar
mov
aam
inc
dec
test
call
enter
int
cmovbe
jno
(bad)
ss
rcl
dec
shr
dec
xlat
fsub
mov
int
xchg
in
adc
pop
jl
das
fwait
nop
leave
sbb
push
jle
(bad)
outs
ret
inc
mov
sub
push
jp
nop
jg
es
(bad)
sahf
fadd
popf
xchg
dec
jmp
test
xchg
ficom
sbb
cmp
clc
ret
pop
fcomp
retf
add
adc
sbb
cmc
outs
adc
cdq
clc
inc
xchg
test
cs
es
jmp
push
outs
data16
xor
push
mov
mov
adc
dec
fwait
in
lahf
test
outs
push
xchg
mov
in
push
aaa
or
jns
outs
pop
test
and
(bad)
stc
push
or
xchg
mov
mov
cmp
test
mov
jmp
(bad)
sbb
and
mov
test
enter
loopne
add
mov
rcr
sbb
xlat
inc
mov
idiv
jmp
and
jmp
or
mov
dec
xchg
fimul
test
jmp
adc
ins
push
inc
mov
pop
iret
retf
jg
(bad)
and
sti
stc
stos
call
mov
addr16
or
sub
inc
(bad)
inc
fstp
sub
mov
mov
xlat
add
mov
sbb
ins
(bad)
in
ss
stos
sub
add
pushf
repnz
or
(bad)
push
cmp
mov
lods
arpl
or
sub
xchg
js
inc
or
pop
(bad)
adc
call
lods
repz
pop
dec
mov
(bad)
xor
lods
push
popa
retf
sbb
into
call
div
cmp
aas
ret
jb
outs
mov
pop
fsubr
repnz
cli
je
shr
das
xor
rol
and
jo
cmps
pop
les
ret
pop
inc
inc
lods
or
loop
mov
mov
mov
ror
(bad)
jae
jo
out
int
sbb
or
adc
enter
loope
mov
sub
fisttp
sbb
jbe
test
pop
fnstcw
jbe
les
mov
sbb
stos
mov
lods
jecxz
mov
jae
jmp
add
cmps
out
shr
dec
neg
es
mov
push
or
cmp
inc
push
nop
push
lds
xchg
or
in
fcom
int3
pop
jmp
sub
mov
dec
dec
jmp
shl
out
push
inc
stc
xor
bswap
in
or
icebp
ja
cmp
cli
imul
xchg
loop
nop
add
(bad)
mov
sub
adc
add
pop
std
std
cs
add
nop
lds
or
mov
xlat
dec
in
dec
xchg
sub
movs
mov
mov
test
pop
add
sbb
mov
scas
pop
xlat
test
ret
adc
call
ds
js
mov
cmc
out
aas
lock
movs
loopne
push
lock
std
mov
mov
fldcw
lods
in
adc
and
sbb
dec
(bad)
in
add
cmp
jo
iret
xchg
inc
mov
push
hlt
ins
sub
push
xchg
fisttp
push
or
inc
cmp
ins
push
fwait
jmp
or
mov
dec
mov
ret
int3
cmp
mov
jo
aaa
adc
test
aad
jl
addr16
mov
mov
lds
add
xor
pop
mov
fmul
inc
jle
inc
ror
and
das
sub
mov
daa
pop
xchg
(bad)
iret
pop
popa
pop
inc
out
cmp
fisubr
rcl
nop
mov
pop
pop
dec
bound
test
jle
fwait
nop
ret
and
adc
ret
cmp
mov
aas
ds
sub
mov
hlt
lea
inc
movs
movs
add
test
mov
dec
fnstcw
pop
push
dec
aad
push
call
jmp
jbe
(bad)
pop
xchg
lds
leave
fist
cmps
ror
xor
pushfw
jo
or
je
ds
cmp
div
stc
in
and
add
test
mov
nop
adc
dec
and
push
xchg
into
daa
test
xchg
and
jmp
and
add
cmp
jecxz
cld
aas
sub
lea
sub
fimul
cmps
sub
loopne
sub
idiv
pop
sbb
sbb
push
aas
xor
fisub
dec
sbb
xchg
xchg
popf
add
pop
stos
aad
shl
pop
dec
dec
mov
add
fstp
dec
sbb
retf
std
cmc
dec
test
rcr
sti
rcl
lods
push
movs
xadd
and
or
sub
pop
push
cmp
loop
jae
mov
cmp
sbb
retf
lock
cli
mov
test
sub
aas
sbb
mov
adc
mov
add
clc
add
ret
and
call
xor
dec
in
fwait
mov
jno
dec
xchg
and
scas
aaa
mov
sub
lods
fadd
ja
rol
sub
(bad)
pop
imul
xor
bound
(bad)
mov
gs
out
call
xor
scas
adc
mov
mov
sub
test
xchg
je
popa
ins
inc
(bad)
imul
xor
out
pop
xchg
pop
adc
cmps
nop
cmps
xor
push
int3
in
mov
push
repz
mov
daa
ja
leave
out
popf
cmp
daa
jle
sti
stos
mov
jno
dec
push
movs
dec
les
popf
(bad)
test
lahf
(bad)
sbb
jb
lods
or
add
out
xchg
mov
and
jb
and
and
loopne
gs
imul
cmp
or
mov
inc
mov
dec
mov
cmp
mov
sar
mov
stc
leave
mov
inc
xchg
cdq
inc
add
scas
push
in
jl
jb
sub
adc
mov
jl
xchg
jle
pop
jbe
xchg
(bad)
dec
jne
aad
push
cdq
lock
lods
icebp
jmp
loopne
mov
fiadd
inc
mov
cmp
cld
pop
mov
mov
imul
jne
imul
sahf
push
ins
push
mov
sbb
test
push
sbb
cmp
mov
inc
mov
out
inc
mov
mov
outs
imul
daa
pop
xor
xchg
mov
pop
sahf
leave
mov
adc
mov
mov
add
mov
scas
jno
pop
cld
adc
or
out
mov
add
imul
mov
in
jmp
pushf
int3
out
std
stc
sub
pop
aaa
les
adc
psllq
sub
pop
cmp
push
in
cmp
movs
sbb
push
mov
and
inc
adc
xlat
movs
cmp
shl
push
jb
int3
xchg
push
aas
xchg
or
cmc
imul
inc
mov
cmp
pop
shl
into
fist
fidiv
inc
jg
push
mov
aam
arpl
or
and
dec
cli
das
xchg
xor
cli
adc
cmp
xchg
or
out
mov
call
mov
pop
retf
data16
mov
cwde
scas
out
loop
mov
add
dec
inc
pop
ja
mov
dec
aas
ror
stos
sar
dec
(bad)
sbb
mov
aam
jo
mov
popf
hlt
cld
add
aam
(bad)
ds
mov
add
or
sub
sahf
inc
(bad)
test
and
jo
cmps
xor
or
addr16
lods
inc
xor
ret
pop
xor
shr
push
push
mov
daa
sub
mov
fisttp
sub
sub
push
xchg
dec
adc
test
dec
jns
inc
test
and
sti
aam
adc
sub
inc
das
or
push
das
push
jge
sub
xor
in
fld
enter
jno
push
fild
jns
fs
push
dec
call
xor
mov
dec
push
bound
dec
or
xchg
(bad)
xchg
mov
pop
sar
mov
ins
ins
jge
out
xlat
shr
and
xchg
dec
(bad)
mov
ja
sar
aad
add
push
ja
mov
loop
fisttp
pop
mov
clc
dec
mov
cmp
dec
clc
inc
loope
int3
xor
loopne
jno
pop
pop
ins
cdq
aas
push
gs
cdq
ja
sub
inc
mov
ins
jne
sti
mov
sbb
(bad)
rol
mov
lea
(bad)
ret
dec
out
retf
mov
inc
gs
jb
dec
out
pop
call
popf
pop
pop
sub
and
xor
std
xchg
ja
fidivr
mov
fcomp
pop
fdiv
inc
mov
add
mov
call
push
xchg
push
dec
jl
push
out
xlat
(bad)
popf
or
lock
xchg
mov
mov
add
adc
jmp
fnsave
sbb
mov
push
push
in
xchg
mov
or
xchg
mov
xlat
cmp
stos
pop
cdq
fidiv
sub
imul
loopne
clc
and
mov
mov
inc
or
jne
lds
(bad)
adc
mov
(bad)
or
loop
mov
imul
add
ss
lock
movs
mov
xor
pop
sbb
dec
(bad)
jge
or
dec
or
sub
xchg
mov
push
dec
cld
lock
inc
and
pop
mov
in
xor
(bad)
jmp
mov
pop
sbb
inc
stos
fucomp
mov
aad
push
xchg
aas
test
lock
mov
lfs
mov
loopne
and
pop
pusha
xchg
add
jnp
fld
pop
cmp
push
into
test
fadd
aas
mov
lea
adc
and
cwde
and
adc
ja
hlt
fdivp
or
lock
pushf
cmp
cmps
or
mov
fdivr
xor
sub
gs
sub
es
fcomp
pusha
or
pop
ins
sub
dec
mov
out
pop
jbe
jns
arpl
ins
mov
pop
movs
inc
dec
cs
jne
(bad)
inc
call
dec
jb
pusha
jno
iret
repz
cmp
je
sar
rcl
jmp
sbb
xchg
add
mov
je
pusha
je
jecxz
in
pop
push
int
scas
cmps
mov
leave
cli
pop
dec
hlt
adc
adc
in
mov
push
xor
mov
sahf
ds
jg
cmp
cmp
inc
jae
pusha
(bad)
pusha
and
stos
xchg
rol
cmp
iret
mov
mov
int3
loop
dec
clc
and
(bad)
out
mov
jl
test
lods
push
dec
jmp
add
push
and
inc
sub
rcl
js
aas
cld
jo
imul
mov
xor
dec
pop
mov
daa
or
nop
mov
fs
cmp
mov
hlt
stc
in
sbb
int3
pop
sbb
outs
(bad)
scas
xor
jb
sbb
aas
inc
dec
inc
sub
pop
rcr
jmp
xchg
js
adc
adc
jne
retf
and
mov
mov
sahf
xchg
ins
pop
pushf
xchg
xor
mov
stos
sub
dec
push
popf
adc
int
inc
xchg
adc
pop
ins
dec
ss
jle
and
mov
xchg
adc
sub
popw
into
add
inc
or
outs
xchg
push
adc
bound
iret
sbb
into
cli
mov
push
jno
lds
shr
retf
shr
fwait
xchg
out
jle
fdivr
sbb
jl
add
lahf
xchg
call
mov
out
or
int
xor
mov
int3
(bad)
ja
and
adc
mov
add
call
jno
ds
out
mov
mov
bnd
adc
jae
sbb
and
arpl
push
mov
scas
out
retfw
out
dec
cli
inc
icebp
popa
out
rol
sbb
retf
arpl
test
(bad)
and
jg
sub
out
test
xchg
cs
jno
lock
inc
dec
sbb
rol
bound
dec
mov
test
loopne
inc
(bad)
cmp
and
xchg
inc
popf
aam
or
cld
jbe
jb
loopne
stc
(bad)
into
push
mov
addr16
fdiv
and
xor
push
ror
mov
into
and
jp
push
sbb
repnz
loope
jb
adc
jbe
outs
stc
push
shr
inc
mov
loop
xchg
shl
dec
leave
rol
ja
(bad)
es
xor
cwde
mov
dec
shl
adc
fcom
sbb
lods
int3
call
out
nop
(bad)
ins
pop
lods
cmp
aad
(bad)
call
retf
adc
lahf
imul
and
push
cli
mov
ins
mov
mov
jecxz
or
cli
repnz
outs
shr
nop
mov
jl
arpl
xchg
mov
and
dec
rcr
jecxz
xchg
shl
push
jbe
xchg
iret
push
aaa
sbb
test
xchg
sahf
je
push
mov
mov
mov
repz
mov
dec
mov
in
adc
test
and
or
jmp
pop
push
jno
mov
dec
jl
pop
jb
int3
shl
rcl
xor
jge
dec
rcl
in
test
sbb
cmps
and
call
xlat
cli
daa
inc
xchg
(bad)
imul
mov
mov
std
add
add
inc
rol
cdq
std
inc
pop
es
std
repz
jmp
cmp
cmp
pop
jo
jle
fs
inc
lods
xchg
js
hlt
xchg
mov
push
dec
pop
mov
loop
dec
pop
ins
scas
ret
or
std
or
mov
cmp
(bad)
adc
ins
mov
adc
loope
fwait
push
out
nop
cs
or
stc
(bad)
cmp
addr16
adc
adc
aam
je
shl
aas
ja
jmp
xchg
daa
add
xlat
lock
int
xor
lods
lock
daa
sub
call
or
aas
(bad)
push
dec
mov
sub
mov
push
aam
add
cmp
fdivr
retf
fist
jnp
and
mov
data16
xchg
(bad)
xchg
jo
test
adc
inc
popa
out
out
daa
add
xor
xchg
into
retf
lods
mov
hlt
daa
not
adc
xchg
pop
fs
sbb
or
stos
stos
movs
outs
es
xor
call
push
movs
out
jne
(bad)
cld
call
js
cwde
fadd
loopne
scas
in
dec
pop
test
jbe
and
inc
mov
add
movs
fisubr
aaa
pop
xor
lea
jecxz
(bad)
lock
rol
xchg
mov
mov
lock
int3
(bad)
in
aas
add
adc
call
sar
or
and
arpl
xor
add
adc
repz
mov
rcl
psllw
adc
dec
jle
movs
shr
push
scas
pop
and
mov
mov
adc
jp
pop
sbb
push
jne
xchg
aam
xor
mov
(bad)
cmp
aas
mov
mov
jae
sbb
xor
cdq
jns
stos
jmp
outs
inc
sub
jo
cwde
push
stos
pop
mov
mov
fist
hlt
aad
jbe
cwde
sbb
int
lock
pop
je
or
xor
xor
ins
or
push
lds
sub
lock
shr
aam
imul
mov
out
xchg
ret
inc
or
rol
(bad)
imul
push
cmps
icebp
xchg
inc
and
aaa
or
clc
movs
sub
sbb
lods
jecxz
call
xor
push
mov
cmps
into
sub
push
vmwrite
mov
mov
adc
(bad)
std
sbb
movs
ror
mov
xchg
inc
outs
cs
sub
mov
repnz
call
aaa
shr
jne
inc
imul
fwait
xchg
adc
ins
fs
push
sub
ss
rcl
and
push
inc
leave
cmp
cmp
pop
cmp
xchg
push
inc
call
mov
icebp
jmp
pop
push
div
int
mov
add
int3
aad
mov
fs
cmp
pushf
cmp
(bad)
mov
sub
inc
mov
adc
mov
and
push
xchg
push
lock
call
push
scas
and
movs
jnp
loope
popa
pop
mov
sub
daa
fsub
jl
jns
outs
sbb
ficomp
lds
jno
sahf
lods
adc
dec
sub
fwait
pop
inc
lods
icebp
xchg
(bad)
fidivr
das
xchg
rol
ins
adc
fld
test
adc
push
xchg
outs
loope
jmp
jb
in
fwait
cld
pusha
pop
ret
pop
pop
adc
and
ja
xor
mov
mov
pop
aad
xor
mov
repz
dec
mov
and
sahf
loope
dec
sti
jnp
jp
adc
int3
cs
mov
inc
adc
xor
mov
test
shl
inc
mov
jo
mov
leave
test
mov
jae
jp
mov
sub
cdq
cdq
mov
in
loop
aaa
call
mov
or
jb
(bad)
and
xor
jb
mov
add
sub
pop
xchg
pop
jnp
jmp
jbe
mov
les
int3
shr
mov
mov
push
push
out
mov
mov
rcl
xchg
test
xchg
out
or
fistp
dec
(bad)
lock
pop
push
imul
sub
jmp
sub
outs
xchg
(bad)
mov
sbb
adc
std
icebp
push
loopne
clc
xchg
test
mov
outs
in
sbb
or
iret
pcmpgtb
vpmacsswd
and
aad
in
fmul
mov
call
not
test
int3
mov
xor
or
or
addr16
mov
or
add
js
jnp
ja
push
cmc
push
and
xor
sub
bnd
sbb
ins
(bad)
(bad)
shr
add
adc
adc
or
das
mov
cwde
pop
cmps
je
ret
mov
in
hlt
jl
shl
lods
call
cdq
mov
dec
sub
and
jmp
xchg
xor
jg
pop
adc
cmps
pop
(bad)
lds
sbb
xlat
cwde
imul
xlat
add
movs
jmp
push
sub
(bad)
popf
sbb
mov
fucom
add
and
fiadd
mov
cld
adc
loop
jno
xchg
lock
in
mov
xor
jle
mov
jo
jno
pop
jge
mov
lods
jb
cmc
jl
push
mov
shr
repz
lods
bound
mov
sub
inc
mov
xor
pop
sbb
inc
jge
push
lods
cs
adc
jmp
sar
adc
inc
inc
cs
adc
cmp
in
stos
test
push
pop
mov
pop
mov
pop
jbe
data16
(bad)
sti
ror
jmp
inc
sbb
inc
in
out
push
mov
mov
lods
cmc
pop
cs
xor
adc
inc
inc
lock
dec
lods
fmul
push
retf
jbe
retf
pop
imul
sbb
clc
ret
movs
out
cmc
out
jno
test
fld
inc
dec
idiv
loop
dec
xchg
jp
pop
fld
sub
cmp
or
lock
scas
out
jl
aaa
ficom
xchg
xchg
pop
jmp
adc
cmp
fstp
mov
lods
xor
pop
inc
(bad)
(bad)
xchg
or
popa
call
or
outs
dec
call
mov
int
shl
out
ss
fsub
retf
jno
popa
rcl
out
or
sbb
adc
pop
sbb
dec
xor
jl
out
or
cmps
jb
and
fadd
push
push
jne
test
in
retf
inc
call
cmp
rol
mov
mov
lds
cmp
cmps
sbb
cld
ds
mov
dec
pop
imul
aad
mov
jno
daa
and
push
sub
push
aaa
pop
std
mov
push
dec
dec
cmps
jmp
sub
and
lea
mov
push
jne
mov
iret
xor
rcl
push
arpl
ret
xchg
cwde
shl
loope
cdq
pop
mov
adc
adc
div
xchg
fsub
xor
and
sub
movs
sub
fild
shl
sbb
and
cmps
jb
cld
jb
fsubp
or
pop
push
inc
mov
jno
ficomp
rcl
lods
iret
add
jecxz
gs
cmp
push
push
and
imul
(bad)
pop
in
xchg
or
fs
imul
(bad)
cmps
iret
push
dec
and
adc
xchg
xchg
inc
ds
cmp
push
mov
(bad)
std
push
daa
dec
pop
dec
xchg
in
mov
push
jae
cli
hlt
inc
movs
or
test
pop
and
adc
nop
test
(bad)
dec
mov
leave
cli
or
outs
pusha
cmp
out
outs
jbe
xor
add
cmp
cmp
dec
push
aaa
(bad)
adc
mov
add
and
loope
adc
js
icebp
push
push
and
ret
mov
pop
and
hlt
loope
dec
and
pop
cmc
pop
jmp
sub
mov
mov
dec
mov
ins
jge
cmp
pop
cmp
out
lds
dec
aam
cmp
sub
(bad)
loopne
mov
fsubp
rol
bound
inc
popf
cmc
inc
mov
pop
jp
lods
lods
dec
fidiv
sbb
adc
cmp
inc
shl
xchg
mov
cmp
mov
push
div
xchg
pushf
stos
mov
ret
mov
popf
mov
push
dec
xor
clc
push
dec
aam
je
xor
add
mov
fisubr
cmp
ins
mov
and
pop
push
pop
out
retf
jne
jl
sub
and
fcomp
mov
pop
jne
adc
xor
and
xor
and
icebp
dec
dec
mov
lea
ja
and
pusha
int3
add
xchg
add
mov
les
or
inc
clc
xchg
lods
inc
enter
xchg
cmp
mov
inc
ss
xchg
(bad)
and
sub
pop
push
xchg
mov
mov
cmps
call
test
addr16
xor
push
je
push
ret
sbb
pop
shr
(bad)
and
mov
jge
cmp
dec
mov
lods
mov
jecxz
cs
lods
(bad)
in
stc
clc
stc
add
pusha
and
pop
in
jns
mov
add
lahf
outs
xlat
mov
mov
inc
push
pop
scas
jo
(bad)
in
mov
(bad)
jb
rol
sbb
pop
dec
sahf
inc
adc
fcom
push
loope
mov
leave
xchg
pop
(bad)
dec
mov
xor
push
out
jnp
iret
or
(bad)
(bad)
cdq
test
cmps
sub
ret
sti
popa
mov
pop
sbb
int
out
mov
jmp
repnz
mov
push
sub
dec
and
cmps
mov
rcr
jbe
sahf
sub
cmp
pop
dec
mov
xchg
adc
push
pop
daa
rcr
push
clc
daa
cmc
push
rcl
jle
gs
mov
jl
(bad)
jmp
jns
pop
jae
call
xor
fcmovu
popf
or
inc
jae
mov
inc
jae
mov
mov
mov
sbb
and
push
xor
push
popf
scas
fisub
push
test
jl
mov
hlt
(bad)
in
adc
xchg
adc
mov
pop
call
stc
fs
(bad)
into
imul
mov
pop
aaa
pop
xchg
sub
mov
mov
add
mov
inc
rcl
aas
lock
popa
pop
(bad)
cmp
fcom
popf
xlat
adc
(bad)
rcr
mov
sub
inc
ins
mov
add
stos
in
dec
dec
outs
mov
pop
or
mov
repz
aam
inc
adc
inc
scas
inc
and
enter
(bad)
out
gs
sti
jne
test
or
xchg
int
in
rcl
mov
xchg
xor
mov
mov
test
in
inc
std
xchg
je
add
sub
std
leave
push
adc
addr16
add
jge
sub
out
xchg
mov
iret
in
std
add
shrd
jns
jge
mov
rol
jp
ret
ja
xor
xor
leave
mov
pop
pop
loope
sub
dec
sahf
jne
ret
xchg
js
movs
lock
adc
mov
cmp
xor
inc
push
jmp
inc
mov
stos
ret
ds
mov
retf
xchg
cmps
sbb
enter
fdiv
stos
adc
xchg
adc
ret
int
xor
push
pop
je
iret
mov
retf
and
out
or
cwde
jb
jg
dec
loope
push
inc
mov
mov
or
inc
fistp
popf
and
cs
cvtps2pd
adc
cld
les
mov
mov
mov
and
adc
sbb
inc
or
repz
jo
push
jge
sub
cmps
xchg
and
fisubr
loopne
cs
add
ins
adc
push
add
push
or
outs
lea
dec
aam
lds
pop
push
sbb
or
mov
xor
push
xor
sbb
or
test
mov
mov
aaa
ins
enter
or
jo
pop
pushf
dec
es
in
fist
and
add
daa
jnp
mov
js
rol
aad
pop
jge
or
cmp
sbb
aad
mov
stos
ins
dec
cmp
lea
and
or
sub
and
lods
push
movs
pop
mov
cld
adc
repz
jmp
xchg
jle
xchg
mov
in
stc
mov
push
ins
and
in
enterw
adc
xor
scas
sbb
call
sbb
stc
jle
rol
xchg
(bad)
jmp
sbb
and
inc
aad
addr16
jmp
out
repnz
addr16
ds
pop
cmps
lods
adc
mov
adc
pop
aad
dec
push
iret
mov
adc
fbstp
aad
hlt
fisttp
dec
test
mov
sbb
sub
fcomip
mov
in
movs
mov
and
int
xchg
loopne
icebp
test
shr
aad
xor
call
jnp
shl
in
sub
imul
ins
mov
repnz
inc
(bad)
inc
dec
jae
push
and
aaa
(bad)
repz
push
inc
mov
ror
movs
pop
js
push
mov
add
adc
das
jge
push
pop
bnd
pushf
mov
or
out
ficom
shl
mov
adc
loopne
and
cmp
push
adc
cmp
out
test
sbb
(bad)
cmp
mov
sbb
xchg
and
(bad)
cld
xlat
aaa
jmp
retf
push
das
(bad)
push
sub
adc
mov
sbb
movs
jp
repnz
pop
scas
(bad)
mov
xchg
stos
lock
dec
js
icebp
xchg
fnstcw
imul
gs
dec
jbe
aas
mov
fs
push
sub
mov
push
inc
pop
fwait
xor
in
mov
jle
call
push
or
or
add
and
adc
pushf
lods
and
jne
adc
xchg
pop
mov
out
loope
push
sar
jo
aam
mov
mov
sbb
mov
jge
xor
add
and
loope
call
push
cdq
jo
mov
adc
cld
test
cwde
mov
loope
stos
imul
adc
shl
inc
push
push
add
imul
arpl
push
jbe
ret
out
inc
aad
aam
xchg
push
add
aam
(bad)
mov
jns
push
out
mov
shl
sbb
stc
sbb
imul
jmp
sub
jns
and
pop
add
push
mov
ret
dec
xor
jo
sbb
mov
mov
retf
dec
pop
jno
stc
mov
sbb
xor
int
jle
sub
scas
in
in
retf
pop
add
leave
or
push
cmp
test
fidivr
setne
test
push
ins
cmp
jge
mov
push
mov
inc
mov
js
shr
aaa
repz
push
daa
xlat
and
and
jnp
lock
icebp
cmp
clc
sbb
cmp
and
mov
push
or
mov
int
push
pop
ror
mov
ds
iret
inc
clc
outs
adc
(bad)
mov
and
clc
and
dec
das
ins
dec
cmps
cdq
pop
repnz
ins
cs
and
add
xchg
pop
and
jl
inc
fsub
in
cmp
xlat
and
cmp
inc
adc
mov
addr16
scas
and
sar
lahf
fisub
(bad)
add
test
cli
and
dec
push
mov
adc
mov
add
adc
inc
outs
dec
mov
mov
daa
dec
(bad)
pop
mov
cli
mov
icebp
or
mov
push
sbb
adc
in
movs
inc
pop
dec
retf
std
mov
sub
pusha
(bad)
ins
or
sbb
jne
push
push
dec
cmp
inc
mov
mov
adc
stos
shr
jecxz
aad
fucomip
or
mov
jb
and
in
jge
nop
pop
ds
ins
xchg
jb
clc
scas
test
cmps
inc
push
(bad)
jge
not
fldenv
mov
mov
xor
ds
adc
in
jle
addr16
in
mov
iret
dec
jbe
gs
jnp
repz
mov
repz
int3
jbe
jge
push
xchg
gs
ds
jle
sar
jno
aas
add
fsub
fdiv
es
inc
sub
mov
outs
test
cmp
push
test
sbb
fisttp
lods
push
inc
fadd
outs
in
add
in
add
test
add
cmp
pushf
and
fbld
lock
and
sbb
xlat
and
ins
repz
sbb
out
xchg
mov
push
(bad)
out
lock
mov
jecxz
push
shr
sbb
jbe
sbb
pop
push
in
push
loopne
inc
inc
sbb
xchg
cwde
imul
sbb
popf
fstp
femms
mov
clc
call
push
dec
ins
mov
push
jp
repnz
out
pop
mov
mov
pop
xchg
scas
or
shl
add
or
mov
enter
(bad)
(bad)
fiadd
in
mov
mov
imul
mov
xlat
sbb
mov
add
jmp
stos
popa
addr16
jp
call
mov
(bad)
pop
inc
inc
add
or
dec
mov
sub
lods
rcr
jbe
lods
push
add
or
in
ins
fild
mov
jg
mov
scas
jns
pop
pop
rol
mov
pop
les
dec
xchg
or
jmp
xchg
fwait
(bad)
mov
dec
fwait
ret
rcr
add
std
or
and
jae
add
in
fisttp
adc
loopne
cdq
hlt
dec
je
rol
pop
outs
scas
pop
xor
xlat
cmp
sar
retf
xchg
(bad)
mov
sbb
fbld
and
fsubr
ror
jle
sbb
out
mov
fnsave
shr
or
ss
jns
and
inc
adc
jo
xchg
out
adc
cdq
test
sbb
mov
xchg
or
ss
jle
imul
fiadd
imul
fwait
mov
cmp
jno
xchg
aad
xor
lahf
mov
inc
les
(bad)
ficomp
adc
cwde
(bad)
xor
cmp
rcl
sub
jnp
mov
mov
repnz
inc
jle
pop
test
adc
popf
xchg
jbe
or
fidiv
push
lods
daa
inc
adc
fstp
jle
sub
sub
popf
push
fcmovb
jae
cmps
cmps
xor
test
in
push
pop
stc
int3
out
cmp
test
cmc
call
jl
cmp
shl
adc
cmp
inc
outs
(bad)
js
test
outs
loop
out
xchg
movs
in
rol
pop
test
jg
imul
fild
xor
cs
stos
add
mov
dec
and
push
clc
jmp
int3
xchg
dec
aaa
mov
and
mov
push
jmp
dec
xchg
lds
xchg
fs
lock
xchg
aad
mov
movs
mov
xor
lds
call
mov
and
sbb
sti
xor
jp
ja
mov
call
push
dec
pop
lock
(bad)
dec
retf
mov
jne
rcr
and
pop
leave
daa
push
aas
pop
les
fisub
xchg
add
aad
pop
adc
dec
dec
call
retf
mov
pop
dec
and
dec
call
fldcw
pop
hlt
sub
and
mov
int3
inc
xor
fild
pop
mov
fild
mov
in
or
ja
unpckhps
mov
push
ds
faddp
inc
daa
xor
in
inc
jae
mov
mov
or
mov
jnp
ror
arpl
out
adc
aas
nop
or
movs
in
clc
jnp
xchg
ja
cmp
clc
xchg
adc
cmp
test
adc
jmp
dec
mov
or
je
mov
adc
push
dec
enter
stos
icebp
hlt
call
or
lods
cmp
outs
xchg
sub
adc
mov
dec
xor
data16
push
sar
mov
add
cmp
fs
retf
out
pop
std
daa
dec
dec
call
mov
adc
aaa
add
push
xchg
dec
aam
out
idiv
sbb
sti
adc
mov
mov
ins
movs
cmp
fldcw
fdivr
dec
in
retf
mov
dec
scas
ficom
cmp
mov
movs
jmp
gs
stc
and
mov
aam
fnsave
cdq
jg
jb
iret
data16
jb
sti
imul
xchg
jae
inc
cs
stc
ja
out
sub
mov
pop
inc
inc
adc
jle
fdivr
outs
push
push
ja
mov
mov
mov
gs
sbb
popa
into
test
std
xor
sti
jne
cmp
xchg
sbb
add
xchg
jbe
dec
scas
mov
adc
bound
(bad)
xlat
fimul
in
dec
fisub
ins
enter
push
retf
push
sub
cmp
mov
jno
leave
jmp
xor
popa
mov
inc
jp
mov
adc
jno
pushf
xchg
mov
inc
mov
bound
dec
jb
cmp
inc
xchg
cli
jo
inc
int
scas
mov
push
ins
ror
xor
lea
push
mov
call
cmp
fwait
xchg
mov
push
and
xor
scas
aad
in
xchg
push
jo
jno
inc
retf
rcr
mov
dec
jne
adc
pop
dec
mov
cmp
cmp
adc
bound
call
adc
inc
ret
jno
jns
mov
pop
mov
xchg
inc
mov
cmp
sbb
arpl
xchg
add
inc
clc
and
call
into
or
enter
std
sub
adc
mov
or
data16
jmp
out
and
and
test
cmp
test
cmp
xor
mov
ins
sbb
test
mov
aad
cmc
jp
dec
jle
sub
jae
mov
les
sub
mov
sbb
jne
push
mov
ffree
jmp
aaa
jb
sub
jg
or
cmp
idiv
and
xor
lock
xchg
movs
jbe
xchg
push
mov
and
mov
xchg
cli
fwait
out
icebp
sub
add
test
lea
das
pusha
imul
mov
mov
push
imul
dec
movs
add
sub
outs
mov
pop
daa
(bad)
sub
mov
cli
sbb
imul
jae
aas
mov
cmps
(bad)
xor
xchg
or
fisubr
adc
cld
aaa
dec
popf
xchg
lds
mov
push
jge
fisub
mov
cmps
ret
cs
add
outs
addr16
cmp
jg
cli
test
pop
cli
cmp
outs
sbb
inc
pusha
and
cmp
outs
xor
mov
scas
cs
adc
xchg
in
sub
or
jp
(bad)
cld
sub
fdiv
pop
push
inc
mov
inc
popa
push
addr16
sub
out
es
mov
repnz
cmps
xchg
adc
or
aad
cwde
mov
cmc
jae
cmp
adc
jmp
or
cmp
data16
sbb
test
popf
xchg
jae
loopne
push
mov
push
ror
cdq
scas
rcl
fdiv
movs
cmp
mov
mov
pop
repz
jle
lahf
push
push
int3
sar
xor
test
and
pop
fnstcw
xchg
push
cs
sbb
test
xchg
xor
cmps
jne
sbb
sar
(bad)
jns
in
ficomp
push
nop
or
div
push
dec
and
fs
cmp
fst
dec
mov
xor
cmp
(bad)
stos
das
mov
and
je
scas
aad
mov
mov
sub
push
mov
and
xor
sbb
fnsave
loope
pop
mov
xchg
pop
inc
adc
pusha
pop
mov
arpl
pop
sbb
adc
call
mov
adc
loop
test
xchg
popa
pop
out
push
sahf
movs
push
daa
xor
pop
outs
and
pusha
outs
jnp
mov
mov
xchg
cmps
and
in
pop
jge
mov
stos
in
and
in
loop
jo
mov
ror
popa
aam
mov
or
mov
loop
out
movs
call
cwde
push
mov
cmp
sbb
sub
pop
jmp
add
je
addr16
popa
pop
pop
into
cli
int
cmp
addr16
add
ror
pusha
shr
shr
push
jge
or
outs
dec
or
adc
es
push
lock
jecxz
jecxz
or
dec
mov
jb
pop
push
clc
and
ins
push
std
adc
cmc
or
cmps
push
ss
mov
jmp
out
cmps
popf
and
addr16
jbe
sbb
inc
xchg
cmp
in
pop
xchg
inc
xor
ins
xor
cmp
push
and
mov
adc
inc
pushf
mov
lock
cmps
nop
lock
outs
retf
jge
dec
out
in
imul
jnp
adc
nop
mov
scas
xor
cmp
xor
stc
mov
push
sbb
pushf
cmp
sub
fsub
jmp
add
loop
div
fs
cmp
pop
ss
data16
jns
jmp
pop
and
test
sbb
cdq
sub
popa
ss
call
lahf
cmp
add
(bad)
jne
jbe
pop
hlt
jecxz
sti
bnd
or
loopne
es
ins
es
pmullw
add
(bad)
mov
mov
jae
loope
test
cs
lahf
dec
adc
adc
je
jne
leave
fild
jmp
sbb
pop
mov
imul
jns
mov
push
scas
shr
add
mov
sbb
pop
xor
mov
jae
test
push
out
inc
and
pop
cmp
fsub
pop
call
gs
scas
xchg
das
jmp
push
xchg
test
sbb
mov
dec
jecxz
call
out
jp
(bad)
icebp
xchg
mov
or
mov
pushf
inc
add
sub
ret
or
lds
add
jg
and
and
and
inc
fcmovnbe
inc
add
jnp
push
test
add
fidivr
sahf
inc
(bad)
mov
mov
fdivr
dec
cmp
xlat
mov
inc
jmp
and
dec
adc
mov
loopne
cmp
xlat
ja
test
pop
aad
jg
mov
cmp
inc
inc
mov
cmc
jmp
cmp
sub
adc
inc
shl
movs
in
sub
data16
test
cmp
(bad)
lahf
sbb
adc
push
(bad)
cdq
inc
or
pop
cmc
sbb
sahf
add
scas
inc
adc
add
shl
repz
mov
and
mov
sub
jmp
les
push
xchg
mov
scas
pop
(bad)
mov
int
(bad)
daa
dec
lods
call
mov
(bad)
adc
pop
jbe
jecxz
imul
xor
sbb
clc
jecxz
inc
or
fimul
or
popa
pop
test
repz
fisttp
ret
fwait
xchg
jne
dec
div
jg
xlat
fwait
add
adc
and
ins
jbe
sti
aad
xor
adc
or
mov
shr
mov
mov
gs
jbe
cld
pop
in
lock
adc
in
and
rep
pop
mov
add
push
pusha
jb
and
push
mov
and
mov
xor
and
sbb
and
mov
cmc
test
fwait
nop
test
jno
mov
pop
inc
pop
push
add
xor
adc
aad
fnstsw
sbb
push
movs
xor
cmp
sbb
sbb
jo
adc
cwde
adc
into
jo
xchg
shl
dec
adc
bound
mov
add
dec
xor
push
loop
jno
je
mov
ror
jmp
movs
cwde
rep
and
sbb
mov
lods
push
mov
ds
mov
mov
xlat
pop
xor
mov
xchg
or
pop
gs
and
sbb
int3
cmps
xor
cli
lods
pop
push
inc
nop
xor
jl
js
add
stc
data16
stos
pop
dec
and
ds
sbb
or
sbb
jb
shl
or
je
add
pop
(bad)
push
sub
retf
das
outs
adc
adc
dec
inc
lods
dec
test
pop
dec
lods
pushf
ins
pop
mov
or
inc
add
ror
mov
xchg
dec
inc
ror
sbb
push
ficom
(bad)
mov
repnz
mov
leave
imul
test
pusha
mov
das
push
push
cmc
clc
or
loop
das
gs
push
pop
and
lods
stc
sbb
dec
mov
mov
jg
outs
aad
mov
cmp
push
xchg
mov
es
mov
mov
cmc
sbb
pusha
xchg
idiv
cmps
adc
pop
dec
jmp
mov
daa
jecxz
add
cwde
out
jns
or
pop
mov
pop
pop
movs
leave
add
and
pop
xlat
and
out
mov
ins
sbb
xchg
loope
inc
jo
dec
out
fsubr
push
push
js
and
add
mov
dec
cmps
pop
jnp
cmps
push
cwde
inc
mov
adc
jno
iret
ror
rcl
push
ja
and
mov
sub
in
fwait
scas
sbb
sbb
stos
neg
and
test
inc
or
push
pop
dec
aaa
push
mov
dec
jne
push
ret
xor
xor
xchg
push
push
arpl
inc
mov
test
mov
out
pop
mov
mov
(bad)
pusha
js
ds
mov
retf
adc
pop
cmp
hlt
mov
inc
cdq
mov
jb
or
xor
not
add
jg
sub
mov
dec
pop
or
or
pop
gs
inc
inc
jp
daa
push
pop
sub
sbb
mov
(bad)
or
retf
add
imul
call
dec
mov
xor
jmp
test
movs
xchg
mov
retf
fist
add
movs
and
(bad)
fcom
cs
dec
lods
pop
inc
inc
out
lods
stos
mov
ret
cmp
inc
xor
adc
frstor
pop
nop
or
cdq
gs
push
adc
cli
cmp
fwait
and
stos
jle
jp
lahf
icebp
pop
shr
push
frstor
xchg
cmp
test
add
xor
sti
jnp
popa
xlat
xlat
inc
aad
aad
iret
fs
loopne
push
push
mov
xchg
outs
out
popf
pop
or
xchg
inc
mov
(bad)
sbb
sahf
repz
dec
sub
xchg
inc
xchg
push
mov
dec
dec
cmp
lea
inc
push
jb
pop
mov
or
jecxz
aad
mov
call
cmp
push
lock
jecxz
sub
js
test
std
sbb
cmp
push
sub
(bad)
cmp
or
repz
dec
(bad)
and
mov
enter
repnz
add
jge
pop
ins
rcl
or
cld
loop
xlat
js
mov
(bad)
mov
jae
xchg
jl
xchg
xchg
sub
call
push
xchg
xor
mov
pop
cmp
sub
imul
movs
or
or
jge
sahf
cmps
mov
cdq
iret
mov
or
fld
or
mov
aas
push
addr16
fwait
jbe
aam
movs
nop
ret
dec
fxch
int
out
add
inc
mov
push
es
loopne
push
push
daa
mov
cdq
(bad)
push
rcr
add
loop
cmp
or
test
push
test
into
mov
sar
adc
mov
mov
imul
pop
stos
rol
leave
mov
nop
inc
dec
aas
jmp
adc
sahf
ss
mov
adc
adc
out
and
fimul
(bad)
jmp
pop
jg
es
outs
xchg
adc
jbe
movs
push
or
scas
test
and
sar
jge
cmp
nop
push
daa
push
mov
jmp
call
aaa
xchg
shl
jnp
jmp
mov
jge
and
call
sub
fidivr
std
dec
cmc
pop
jb
repz
inc
(bad)
or
cwde
jns
fst
fld
outs
jae
push
mov
dec
out
ret
cmc
data16
jg
ret
and
dec
sub
les
pop
add
xor
jge
ss
mov
clc
add
(bad)
das
mov
or
adc
pop
(bad)
call
xor
imul
cmp
les
xor
lea
mov
mov
enter
daa
fisub
pop
clc
hlt
loope
mov
add
data16
cld
std
scas
in
clc
fsubr
sbb
mov
push
pop
int3
xchg
mov
ds
out
adc
jo
pop
lahf
into
add
ficom
push
push
sar
cld
ds
call
repz
mov
cld
lods
xchg
ja
xor
sub
pop
xchg
pop
xor
leave
xchg
addr16
cwde
add
and
mov
push
mov
dec
push
jo
lds
mov
cmps
xchg
mov
mov
xlat
pop
xlat
rol
cmp
test
pop
ins
cmc
es
dec
retf
sub
pop
xor
pop
push
push
xchg
hlt
outs
es
inc
mov
or
inc
ficomp
or
or
add
sub
sbb
ret
daa
cmp
sahf
xor
repz
sbb
mov
lahf
cwde
ret
sbb
add
sbb
idiv
pop
mov
test
pop
sub
dec
mov
jo
or
ja
push
xor
or
mov
jae
pop
adc
pop
add
and
sub
es
jle
bound
sub
and
xor
sti
xchg
pushf
cmp
inc
or
mov
cli
push
push
outs
or
jmp
(bad)
repnz
mov
xor
stc
lahf
test
lods
jmp
add
or
imul
sbb
aaa
and
add
dec
aaa
sbb
adc
mov
inc
cmp
jmp
dec
sub
inc
std
loopne
push
mov
test
adc
bound
scas
xchg
call
sbb
push
lds
inc
inc
push
sbb
std
inc
(bad)
xchg
dec
popa
sbb
sub
sahf
(bad)
(bad)
inc
jl
lahf
xchg
cmc
int
push
sbb
mov
outs
aad
ror
mov
push
leave
pop
sub
stc
and
xor
or
stos
mov
jmp
xchg
mov
retf
(bad)
push
clc
push
push
iret
cmps
pop
mov
push
mov
mov
xor
xlat
jbe
sub
or
cdq
add
pop
test
shr
xor
sets
jb
int
aam
mov
stos
cdq
cmps
js
or
jns
je
jnp
(bad)
pop
inc
test
leave
cmp
adc
iret
test
pop
xor
pop
push
out
and
sub
dec
pop
jb
int3
cmp
in
into
cld
xchg
jmp
cmp
hlt
xor
pop
in
arpl
and
mov
push
nop
sbb
jl
xchg
cld
and
push
fs
adc
lahf
shl
mov
inc
pushf
mov
aam
std
das
and
cs
and
inc
das
push
into
jno
dec
xchg
jnp
call
icebp
call
lahf
adc
(bad)
mov
mov
sti
jnp
in
in
pop
aaa
lahf
faddp
inc
mov
sub
jl
loop
mov
adc
ins
int
and
pusha
lods
xchg
ret
adc
push
int
stos
(bad)
leave
sahf
(bad)
jne
inc
adc
push
int3
lahf
add
mov
in
ins
inc
push
or
neg
mov
adc
fcomp
or
(bad)
push
cmp
adc
arpl
xchg
nop
mov
(bad)
xchg
or
push
ja
(bad)
jmp
es
xor
(bad)
mov
adc
scas
push
loopne
ret
sbb
enter
popf
aad
fisubr
out
pop
outs
sahf
in
fisttp
clc
aad
repnz
(bad)
out
xor
mov
test
inc
push
add
cmp
xchg
jmp
cmp
jl
in
mov
sub
cmp
cmp
sub
stos
in
ins
push
push
inc
cli
sbb
je
repz
sub
sbb
xor
xchg
mov
int3
pop
add
mov
sbb
pop
mov
iret
inc
bound
imul
fbstp
iret
mov
call
(bad)
xchg
in
fnstsw
add
push
stos
cwde
pop
and
mov
fstp
cmp
out
(bad)
and
xchg
movs
adc
or
pop
and
xor
pop
jg
jns
xchg
in
and
sub
jge
xor
and
pop
and
pop
retf
out
stos
pop
xlat
fbstp
ds
xchg
pcmpeqw
leave
lea
fidiv
jo
out
add
mov
sub
aad
push
push
inc
or
mov
test
add
js
push
ins
gs
jge
mov
stc
outs
and
mov
imul
inc
add
retf
push
shl
call
dec
dec
pushf
out
mov
out
retf
adc
sahf
icebp
jp
push
cwde
dec
popf
cmp
std
adc
test
mov
pop
mov
sbb
test
add
pop
jns
ror
dec
jnp
push
xor
popf
and
xor
sbb
mov
pop
or
in
push
loopne
ins
push
lods
adc
imul
int
fwait
shr
arpl
ins
push
popf
xor
and
add
pop
push
inc
(bad)
jo
test
jmp
(bad)
xchg
xchg
and
ror
sti
mov
sub
fisttp
fs
xor
or
rcr
test
mov
out
repnz
js
js
and
cmp
sbb
mov
mov
inc
scas
push
mov
mov
xchg
cwde
xlat
fcomi
(bad)
mov
sbb
out
and
mov
test
mov
popf
call
imul
jmp
test
xor
cmp
adc
push
inc
int
jb
sub
les
sub
push
test
fidiv
test
cdq
aam
pop
shl
test
pushf
ret
(bad)
adc
ds
mov
nop
popa
nop
aas
inc
arpl
xlat
repz
mov
lock
icebp
mov
dec
cmp
sbb
mov
ficomp
jo
test
lods
comiss
jmp
int
ret
lods
or
cli
and
xlat
leave
push
mov
sbb
loopne
cmp
iret
dec
push
lds
xchg
add
mov
fistp
out
xchg
aad
scas
(bad)
push
shl
call
repz
sub
(bad)
or
mov
std
xor
retf
fsubp
adc
or
xor
mov
jp
sub
mov
leave
out
fsub
cld
dec
push
mov
popf
mov
mov
cmps
inc
cmp
not
cmps
xlat
xor
ret
mov
addr16
sbb
lea
sti
daa
dec
fcom
jecxz
sbb
cdq
jle
push
leave
mov
sub
or
add
lods
cmps
leave
add
mov
clc
(bad)
ins
mov
add
mov
and
or
xlat
cmp
test
inc
adc
mov
push
repnz
xor
push
aas
mov
addr16
jle
nop
sar
xor
xor
shr
(bad)
xchg
test
shl
sbb
inc
rol
xor
adc
adc
test
rol
aad
mov
mov
pop
jmp
mov
xor
ss
shl
lds
inc
hlt
pop
in
call
push
inc
nop
mov
and
dec
mov
jg
jg
pop
mov
(bad)
jne
hlt
pop
push
les
test
fidivr
out
jbe
xchg
xchg
mov
pusha
pop
inc
std
xchg
jne
jp
dec
jecxz
inc
and
push
fild
mov
sub
xchg
(bad)
xor
icebp
sti
lods
fadd
imul
popa
xchg
push
lods
hlt
(bad)
sti
pop
push
and
sti
inc
pop
xchg
lods
inc
js
sub
(bad)
mov
adc
and
loope
dec
sub
scas
adc
imul
and
pop
sbb
je
mul
loope
mov
fcom
mov
push
adc
inc
push
stc
dec
das
sub
pop
ja
je
mov
pop
or
xchg
mov
mov
push
mov
out
or
gs
out
push
in
das
cmps
inc
aad
add
add
cli
idiv
imul
ds
js
jno
sbb
enter
fs
jle
inc
lods
xchg
test
sbb
ficomp
inc
inc
cmp
cwde
lods
nop
div
jge
inc
ss
(bad)
jg
(bad)
faddp
sub
mov
fnsave
adc
or
icebp
jmp
test
dec
mov
xchg
(bad)
inc
push
popf
mov
fwait
das
fsubr
cmp
enter
sub
and
push
je
hlt
mov
xchg
cwde
jp
dec
mov
and
loopne
jg
inc
data16
mov
shl
lods
imul
shl
je
ins
xchg
push
sub
mov
or
movs
mov
cmp
ret
mov
bound
cmp
cmp
test
test
lods
leave
xor
js
mov
or
into
inc
push
mov
outs
sub
sub
movs
add
dec
push
and
sub
(bad)
push
scas
and
dec
imul
sbb
(bad)
out
dec
loope
aam
js
das
mov
rcr
fisubr
mov
dec
pop
sbb
add
xchg
int
data16
jge
lods
xchg
hlt
mov
xchg
sub
jmp
imul
loopne
push
enter
loope
lock
mov
imul
sub
aaa
push
inc
cmp
xor
cmp
mov
pop
push
xchg
pop
int3
in
ss
call
mov
les
sahf
sub
mov
xchg
ds
repz
cmp
ror
aas
int
test
into
push
(bad)
mov
daa
sub
mov
sahf
scas
mov
js
iret
push
mov
inc
add
movs
and
inc
inc
xor
call
pop
cmp
or
leave
dec
test
imul
adc
pushf
data16
add
loope
mov
and
mov
in
aam
sahf
unpckhps
xchg
test
stc
sub
enter
mov
(bad)
jl
in
cmp
xchg
xchg
xlat
ret
test
push
fs
jl
mov
adc
xor
ret
or
cmps
inc
cmps
mov
or
jns
sbb
pop
lock
or
pop
movs
icebp
mov
dec
mov
and
retf
pop
ins
xor
jno
in
(bad)
out
std
jp
cmp
pop
and
call
adc
push
mov
outs
xchg
mov
dec
mov
enter
jo
shr
pop
xor
fiadd
sbb
clc
in
ds
add
pop
xchg
enter
aad
mov
outs
sub
hlt
scas
mov
lods
clc
sbb
cmp
push
rcl
(bad)
stos
enter
sahf
adc
ror
adc
dec
mov
repz
inc
or
dec
dec
call
(bad)
sbb
pop
bound
mov
cld
xchg
fisubr
cs
sub
xchg
sbb
pop
out
sti
jbe
jmp
in
daa
dec
daa
enter
jnp
popa
pop
jo
call
sub
mov
jmp
adc
movsx
mov
out
outs
sub
push
mov
mov
fcom
jne
push
inc
fidiv
inc
jb
dec
jno
loope
out
adc
cmp
push
(bad)
in
in
push
rcl
xchg
aam
into
(bad)
(bad)
jecxz
dec
pop
dec
cmp
ss
pop
data16
xor
xchg
sub
inc
stc
cmp
dec
(bad)
mov
ins
pop
pusha
mov
or
inc
into
jns
shr
or
imul
mov
addr16
sub
mov
jmp
mov
sbb
(bad)
jmp
lahf
std
mov
aaa
inc
pop
push
dec
pushf
ret
cli
int
mov
mov
dec
int3
cmps
mov
pop
mov
push
dec
push
fild
sbb
xchg
jl
push
fadd
pop
mov
int
xchg
retf
xchg
xchg
fsubr
cdq
inc
loop
mov
in
push
movs
jmp
xchg
popf
inc
mov
pop
or
(bad)
sti
in
adc
out
add
sbb
jb
mov
dec
xor
aam
(bad)
lahf
mov
enter
popa
(bad)
je
dec
sub
xchg
pop
data16
fisubr
cmp
or
add
sub
cmp
mov
dec
pop
dec
mov
pop
adc
sbb
cmps
nop
out
mov
pop
pop
push
ds
(bad)
mov
rol
push
loope
push
cmp
mov
ret
xor
xchg
sbb
cmp
fldenv
and
fsubrp
xchg
xchg
(bad)
adc
and
in
(bad)
dec
mov
mov
test
ins
xchg
fstp
(bad)
popa
test
xchg
out
cmps
pop
adc
loope
(bad)
or
sbb
add
mov
add
inc
das
test
jmp
add
test
pslld
aam
xor
sti
pop
scas
(bad)
mov
push
fdivr
mov
push
pop
inc
pop
mov
mov
je
pop
or
loope
cld
xchg
loope
je
loope
stos
cmp
xor
xchg
stos
not
outs
dec
inc
mov
sti
lahf
jge
sub
push
push
ins
cwde
mov
and
xchg
scas
push
das
addr16
data16
mov
xchg
mov
call
fucomp
xor
mov
loopne
test
jmp
fwait
jmp
xchg
fidivr
call
or
xor
lods
push
mov
add
adc
fstp
out
iret
call
push
stc
xchg
lods
add
in
or
es
pop
xchg
pop
ret
pop
in
sub
fisttp
push
xor
pop
add
lods
xor
jbe
mov
pop
leave
or
sub
enter
bound
add
pop
sbb
jmp
inc
jne
stos
push
cdq
push
rol
popf
pop
jno
push
les
scas
test
push
cmps
jp
inc
into
mov
inc
dec
or
inc
mov
dec
out
and
and
ja
jecxz
or
movs
mov
sbb
pop
pushf
loope
out
xchg
cdq
adc
mov
inc
xchg
and
push
ins
int3
hlt
das
cmps
data16
mov
inc
movs
movs
retf
mov
stc
pop
adc
inc
rcl
clc
adc
mov
outs
loop
pop
adc
inc
cmps
mov
fadd
push
or
jo
dec
add
scas
sub
int
stc
dec
mov
cmp
leave
xor
adc
repz
cli
mov
out
sub
out
xor
pop
ficom
scas
cli
test
in
in
adc
push
lods
or
jge
pop
shl
mov
inc
push
ficom
sub
stos
daa
xchg
inc
xchg
dec
in
jmp
and
call
mov
pop
popa
sbb
test
pop
mov
std
movs
or
xor
(bad)
data16
jno
add
mov
mov
shl
xor
pop
jecxz
xor
not
mov
mov
in
outs
fsubr
jl
xor
scas
xchg
and
outs
pop
scas
xor
or
mov
test
lahf
ret
sbb
xor
add
mov
test
dec
push
sub
push
iret
push
ret
data16
push
mov
sub
lock
push
jbe
sub
idiv
mov
add
mov
jnp
push
pusha
mov
add
jge
mov
pop
xchg
cli
jge
in
aas
mov
cmps
mov
mov
add
fscale
cmp
jmp
nop
ins
test
push
xor
retf
aas
xor
jmp
sbb
and
push
jge
push
popa
cli
xchg
int3
or
lahf
ja
push
jge
inc
mov
aas
push
sub
es
mov
inc
inc
mov
push
mov
fstp
adc
adc
shl
adc
and
dec
dec
mov
dec
dec
jge
mov
push
pop
xchg
mov
outs
bound
dec
pop
jg
test
xor
fidiv
pop
pop
stc
or
jb
dec
cmp
push
push
ss
xchg
push
mov
pop
add
adc
and
loope
push
jmp
arpl
(bad)
inc
jl
int3
xor
xor
adc
sar
lods
mov
inc
mov
mov
adc
push
push
ja
pop
jl
add
push
mul
fidiv
cmp
stos
push
xlat
jl
into
pop
xchg
cmp
mov
test
icebp
je
lods
dec
xor
imul
ret
sti
pop
push
and
mov
je
enter
jbe
call
ins
test
mov
mov
xchg
ss
jge
arpl
inc
js
xor
adc
push
dec
int3
ins
movs
xchg
ja
stos
sub
int3
icebp
xor
scas
mov
cmc
and
aam
and
push
or
pshufw
or
or
sbb
xor
xchg
aas
pop
or
xchg
shl
test
jno
movs
pop
mov
scas
mov
inc
inc
push
xor
push
and
js
mov
xchg
repnz
gs
mov
(bad)
jbe
pop
xchg
xor
stc
icebp
imul
mov
in
cdq
ds
out
adc
mov
lods
mov
add
or
jne
inc
mov
ror
push
xchg
outs
cs
clc
mov
sbb
idiv
mov
xor
loope
xchg
mov
mov
sub
add
out
jno
outs
ret
test
les
ror
jmp
or
iret
xchg
or
mov
push
mov
imul
repz
mov
jae
push
and
inc
inc
sbb
enter
sbb
loopne
js
inc
(bad)
pop
add
sti
cs
inc
mov
mov
sbb
mov
mov
and
hlt
clc
inc
iret
dec
sub
stos
in
pop
push
cmc
fsub
jl
sub
adc
mov
adc
push
dec
pop
push
cmp
fcomip
movs
jb
rcr
outs
jg
xor
out
or
fiadd
jae
push
mov
add
shl
stos
fild
xor
popa
fwait
jg
xchg
inc
es
pop
(bad)
jle
jbe
cmp
cmps
cmp
ret
ret
and
pop
es
(bad)
hlt
sub
pop
ss
lea
enter
addr16
stc
iret
nop
sbb
daa
pop
int3
mov
shr
mov
mov
test
lock
or
mov
cli
(bad)
js
push
movs
pop
fmul
fwait
imul
loope
pop
and
jmp
mov
daa
sbb
jecxz
adc
js
cmp
or
xchg
sahf
cmps
mov
mov
pop
and
(bad)
push
les
pop
jg
(bad)
test
call
sti
push
loope
sub
fstp
adc
(bad)
or
leave
or
add
ficom
(bad)
mov
xchg
arpl
add
cmps
sbb
mov
pushf
jo
mov
daa
(bad)
imul
or
sub
cmp
fcmove
nop
dec
ds
jl
push
int
pop
jne
mov
fidivr
xchg
shr
mov
pop
add
mov
jmp
mov
push
inc
pop
mov
rcl
mov
sbb
xchg
xor
retf
push
(bad)
repz
inc
aam
dec
mov
or
mov
push
sbb
xor
rcl
retf
mov
mov
xchg
dec
cmp
sahf
push
addr16
icebp
xchg
dec
jmp
mov
pop
mov
ins
fdivr
pop
sub
ficom
adc
jb
lahf
addr16
arpl
sub
imul
pop
adc
fstp
lds
(bad)
pop
aaa
xor
into
movs
fidivr
adc
push
mov
aad
loop
test
fistp
ss
(bad)
adc
lahf
daa
jmp
pop
sub
ret
rcl
sahf
cld
fsub
pop
ja
cmp
out
cmps
sub
cs
sub
xchg
(bad)
cmp
pop
pop
pop
xchg
mov
pop
adc
out
call
loopne
xlat
mov
mov
mov
pop
out
test
mov
cdq
and
sub
aas
ss
push
dec
(bad)
ss
inc
push
xchg
mov
dec
dec
mov
sahf
imul
in
sub
cdq
or
sbb
add
int
adc
or
or
xlat
(bad)
sub
xchg
dec
into
mov
in
add
mov
mov
lea
and
cmp
mov
jns
sbb
daa
sbb
(bad)
fstp
cmc
mov
dec
in
(bad)
ja
retf
push
iret
hlt
mov
clc
test
add
nop
sbb
rcr
pusha
mov
cmp
sub
lock
stc
cs
pop
jae
ins
dec
or
xchg
das
cmp
sar
dec
bound
push
add
jmp
ins
pop
cmp
cld
sbb
test
movs
mov
lahf
mov
iret
push
mov
movs
gs
fadd
ret
push
gs
pop
rcr
push
push
add
sbb
daa
(bad)
aad
mov
stc
cmp
test
push
sub
aaa
mov
pop
icebp
xchg
cmc
jnp
xchg
fnstcw
and
cmp
enter
ss
xchg
in
add
in
or
xchg
sbb
jmp
mov
push
pop
cmp
hlt
outs
sbb
pop
pop
cmp
mov
mov
push
iret
fstp
js
cwde
lea
xchg
pop
cdq
pop
sub
push
cmp
test
cmp
inc
(bad)
lock
pop
mov
mov
fisub
std
mov
pop
and
cmps
outs
arpl
or
dec
div
pop
jmp
popa
(bad)
and
xchg
mov
cmc
jmp
jo
pop
mov
jmp
jp
mov
mul
pop
mov
inc
scas
sbb
and
fs
pushf
xchg
mov
mov
data16
scas
aaa
pop
push
in
sbb
inc
push
or
pop
fstp
mov
pop
sub
js
sbb
jp
lock
stos
js
or
arpl
inc
xor
in
popf
jge
mov
and
pop
fwait
or
retf
inc
push
stos
enter
jp
call
addr16
sti
sbb
stos
push
xor
mov
cdq
cmp
repz
bound
rcr
cmp
imul
mov
and
xchg
(bad)
call
pop
imul
dec
sub
xor
(bad)
sub
jno
(bad)
stos
add
pop
es
dec
(bad)
rol
pop
cmps
dec
dec
in
push
fwait
adc
push
(bad)
mov
adc
ss
mov
addr16
imul
mov
mov
sbb
jb
inc
dec
push
jae
stos
fsubrp
inc
mov
test
cmp
test
js
ins
out
shl
inc
sbb
aaa
inc
outs
jecxz
mov
neg
ss
movs
xor
ds
sbb
dec
jmp
fcmovnb
sub
call
xor
inc
or
ror
jno
add
pop
cmp
std
push
lock
xchg
cmps
cmp
xchg
(bad)
fidiv
mov
adc
xchg
sub
add
mov
adc
xor
ja
xchg
or
lods
std
sahf
mov
gs
retf
mov
fdiv
(bad)
push
dec
lahf
cmp
mov
pop
sbb
xor
fadd
inc
out
adc
scas
or
fmul
pop
push
inc
pusha
hlt
mov
loope
aam
adc
ja
jmp
jae
stos
xchg
mov
pop
lahf
retf
mov
pop
test
outs
ret
inc
xor
mov
addr16
push
sti
inc
jecxz
push
pop
sahf
sbb
mov
mov
test
dec
pop
mov
(bad)
jp
aas
js
push
xchg
pop
jmp
fnsave
sbb
push
fistp
mov
cld
adc
xchg
fimul
and
loop
xor
es
in
sub
add
sti
mov
mov
adc
inc
or
pop
fwait
outs
add
fwait
and
in
ds
mov
xor
call
mov
mov
std
ret
lahf
je
repnz
sbb
xchg
sub
cmp
jb
sub
in
xchg
daa
int3
sub
js
gs
xchg
cwde
test
mov
dec
fwait
repnz
je
dec
call
dec
inc
fbld
sbb
pusha
imul
loop
out
inc
inc
lock
push
cmp
aad
sub
add
in
ror
and
and
xor
lahf
sub
xor
scas
xor
outs
xchg
idiv
inc
mov
mov
adc
pop
or
(bad)
cs
inc
pop
push
adc
mov
jmp
and
inc
jg
sbb
dec
mov
das
fild
shr
(bad)
xchg
das
inc
retf
fldcw
(bad)
pop
jecxz
or
xchg
les
into
mul
xchg
cwde
add
stos
or
leavew
lods
xchg
cld
cmp
or
mov
std
dec
xchg
mov
fisub
or
jle
popa
xchg
scas
retf
in
dec
stos
aad
xor
daa
pop
mov
les
repnz
mov
inc
lods
pop
sahf
les
jle
xor
push
stos
jb
mov
ins
das
push
sub
data16
mov
mov
fwait
pop
sbb
jge
adc
mov
push
into
(bad)
ins
lds
mov
int
es
jbe
mov
loopne
push
inc
add
sbb
jno
adc
inc
mov
lds
hlt
jmp
aas
test
mov
sahf
fs
imul
mov
nop
les
out
es
daa
mov
dec
push
mov
loopne
out
inc
js
xor
jge
nop
fst
aam
loope
sbb
imul
loope
push
(bad)
push
sbb
push
imul
xor
nop
cmp
mov
(bad)
jmp
lods
(bad)
or
fidivr
lods
ins
or
fwait
bound
mov
jmp
shl
popa
mov
cmp
ds
push
loope
sti
mov
addr16
scas
ss
or
mov
pop
idiv
ficomp
mov
xchg
inc
outs
mov
mov
repnz
(bad)
lock
or
mov
bound
icebp
and
pop
hlt
mov
mov
jb
fiadd
loop
sbb
push
sbb
je
xchg
adc
div
stos
mov
in
dec
retf
lods
rcr
pop
mov
sub
js
push
aas
push
or
lea
xor
lods
or
jnp
sahf
cmp
sbb
enter
cmp
fs
sub
data16
int
sub
and
mov
or
jmp
out
cmp
aaa
adc
adc
pusha
jecxz
imul
iret
jbe
in
pop
jmp
in
mov
clc
sbb
adc
or
stos
ins
cs
shr
xchg
xor
xor
dec
lods
fnsave
loopne
loope
adc
mov
jl
or
dec
sub
pop
jp
mov
popa
enter
cmp
jge
cmc
popf
pop
ins
jb
ss
dec
(bad)
jmp
cmp
sub
aas
push
mov
mov
xchg
ins
imul
fmulp
pop
sbb
movs
xchg
repnz
addr16
(bad)
pop
mov
or
cdq
inc
sub
lods
loopne
xor
cmp
test
add
push
xchg
push
loopne
mov
mov
aas
call
int
in
mov
mov
dec
fild
pop
pop
(bad)
cdq
push
test
pop
xor
adc
stos
jae
xor
outs
jge
(bad)
xchg
rcl
xlat
pop
aad
bound
cmps
mov
adc
xor
xor
mov
les
loop
lds
neg
add
test
mov
in
mov
inc
dec
dec
das
sub
cmp
scas
ins
mov
dec
jns
push
push
jl
sub
not
push
push
add
jns
xchg
push
div
adc
jbe
mov
lahf
enter
mov
enter
movs
clc
sub
aaa
sbb
fs
mov
sbb
ja
ins
lock
inc
aas
in
mov
mov
ja
mov
mov
inc
jmp
push
out
push
mov
aad
jne
mov
mov
mov
sahf
movs
test
sbb
lock
inc
xchg
add
add
dec
fcom
popa
inc
mov
out
lods
in
and
push
js
xor
adc
pop
and
dec
mov
icebp
xchg
out
mov
sti
jo
jno
mov
cmps
xor
nop
push
pushf
bsf
and
clc
xor
scas
pop
je
xor
js
lock
cmps
inc
ins
push
stc
fs
mov
add
jecxz
ins
call
xchg
pop
aam
fs
xchg
or
mov
out
imul
xor
mov
jbe
ja
repz
add
push
int
in
xor
out
xchg
mov
scas
aad
iret
inc
(bad)
cmps
or
inc
imul
int
pop
push
push
fild
mov
add
lahf
fnsave
dec
xor
pop
or
int3
xchg
xchg
xchg
dec
aam
pop
fwait
daa
dec
repnz
mov
rol
sub
sti
in
into
inc
cs
ins
xor
mov
jmp
mov
xor
pop
into
(bad)
cli
pop
inc
sbb
xor
(bad)
xor
inc
push
jmp
jb
dec
aaa
daa
xor
mov
gs
push
shl
ss
and
outs
data16
in
ss
scas
ret
jo
or
inc
mov
fmul
(bad)
xchg
jl
lock
xor
xchg
daa
adc
cmp
scas
daa
aam
sbb
inc
retf
xchg
or
shr
sbb
repnz
stos
(bad)
add
mov
adc
adc
sbb
add
push
data16
sub
pop
daa
xor
jbe
lods
ss
imul
das
out
arpl
push
in
mov
nop
add
fstp
cdq
popf
pop
jge
pop
rol
sar
cmp
inc
std
popa
cmps
inc
mov
out
leave
pop
push
fdivr
test
mov
add
adc
and
fst
popa
shr
add
inc
mov
rcl
dec
dec
out
xchg
rol
mov
sar
push
aam
(bad)
scas
xor
cmp
ins
ins
dec
aad
dec
sub
add
pop
or
outs
mov
(bad)
aam
sbb
sbb
jnp
lea
outs
mov
mov
pop
or
lds
sar
enter
fdiv
pop
push
fs
ret
sub
fmul
ja
loope
cmp
daa
mov
push
dec
adc
mov
mov
mov
or
mov
popf
enter
(bad)
sbb
enter
sbb
out
cmc
aas
cmc
popa
fistp
mov
fst
inc
movs
call
pop
xchg
mov
jmp
cmp
in
xchg
jno
jno
xchg
xchg
icebp
shr
in
jne
lock
mov
jae
cmps
and
lock
add
jns
imul
jg
imul
push
fadd
dec
xor
push
rcl
cli
mov
and
ret
fwait
imul
adc
sub
sti
cld
cld
div
fistp
out
out
xor
adc
test
int
and
aam
or
mov
pushf
fsub
dec
loope
sub
movlps
dec
inc
mulps
ins
test
into
call
out
push
(bad)
mov
add
std
ins
repz
and
inc
pop
stos
into
adc
aaa
sbb
mov
fimul
mov
xchg
mov
or
xor
lds
and
leave
fsub
je
push
inc
dec
out
cwde
adc
addr16
cwde
sub
in
and
lea
xor
push
sub
cmp
lahf
cmps
ror
and
xor
sbb
pop
call
pop
push
mov
xlat
push
stc
jl
mov
neg
mov
retf
out
js
mov
pop
push
and
int3
int
sbb
add
mov
cmps
xor
inc
outs
(bad)
jecxz
int
pop
int
enter
cli
aas
push
cs
mov
(bad)
fcmovnb
fs
cmps
cmps
jo
test
mov
lea
or
inc
xchg
jb
add
mov
clc
stos
or
aas
mov
mov
faddp
pop
shl
inc
xchg
adc
adc
push
rol
js
into
adc
fdivr
cwde
pop
push
and
ja
pushf
shr
loop
push
cmps
sub
push
(bad)
outs
xlat
neg
pop
out
pop
mov
daa
xchg
nop
mov
je
pop
or
pop
or
popa
pop
jmp
ins
jb
mov
ret
cmp
retf
or
(bad)
fild
mov
jno
popf
push
sar
(bad)
mov
test
inc
clc
cdq
repz
mov
pusha
dec
call
cs
add
add
xor
xor
mov
cld
arpl
add
mov
xlat
js
psubusw
aas
lods
cs
jmp
push
js
je
mov
dec
push
mov
dec
enter
sbb
mov
jmp
les
dec
xor
jns
ins
clc
mov
call
mov
scas
shr
and
jle
in
or
(bad)
push
mov
mov
rcr
mov
aas
scas
cmps
sbb
es
cmp
ds
leave
dec
push
xchg
jnp
(bad)
push
or
dec
jo
xor
xchg
jmpw
cdq
push
jmp
inc
mov
fmul
call
sub
and
mov
jne
in
call
or
outs
or
imul
enter
fcom
fsubr
rol
mov
mov
mov
inc
in
cld
pop
loopne
mov
stos
fsubr
aas
mov
xchg
push
mov
mov
xchg
icebp
cmps
inc
ss
(bad)
and
int3
not
in
xchg
xchg
icebp
push
or
mov
push
mov
sub
jge
scas
(bad)
cwde
jne
outs
push
xchg
mov
push
pop
loop
in
adc
rcr
sub
inc
jno
push
mov
cmps
sbb
hlt
cli
enter
or
aad
xchg
hlt
ficom
dec
xchg
cld
test
stos
jne
outs
mov
test
shr
mov
scas
xor
leave
jne
(bad)
pop
or
pusha
fwait
xor
or
out
inc
daa
rcr
dec
mov
cmp
and
ins
sub
jle
lahf
mov
cdq
sub
repz
aaa
mov
add
nop
fist
cmp
leave
outs
cli
mov
popf
fidiv
adc
fbstp
xchg
repnz
jns
in
pop
jno
cmp
fwait
adc
dec
push
add
mov
push
mov
ins
and
cmp
push
adc
stc
mov
cli
enter
loop
out
bound
adc
mov
or
addr16
rcr
call
aad
(bad)
imul
pop
mov
cmps
imul
mov
scas
outs
sbb
lock
sub
fwait
jmp
pop
inc
shr
jne
bound
jo
push
push
add
(bad)
ffreep
pushf
scas
push
jns
xor
popf
idiv
adc
and
(bad)
aam
daa
mov
retf
je
jmp
sbb
inc
jl
cmp
and
push
mov
inc
cmp
lods
jae
cmps
push
mov
ja
xor
inc
retf
stc
gs
mov
jl
jno
mov
push
sbb
into
jge
xchg
test
data16
cmp
(bad)
std
dec
add
daa
mov
jmp
dec
faddp
mov
or
mov
movs
clc
jae
sar
jmp
xor
or
mov
call
mov
ror
push
add
cmps
mov
jae
push
fdivr
dec
xor
cs
push
sub
add
mov
adc
pop
js
mov
pop
push
cmp
repnz
data16
xchg
mov
fs
jg
ja
addr16
mov
cmps
das
pop
lea
and
nop
xabort
lods
xor
sbb
xor
(bad)
fdiv
xor
ror
(bad)
out
add
jle
cwde
aaa
sub
jp
pop
mov
ror
jno
jle
adc
push
sbb
movs
dec
call
cld
fmul
dec
pop
pop
imul
fild
cmps
inc
cmp
aas
call
(bad)
fldenv
mov
enter
and
jns
gs
cs
xor
leave
in
or
arpl
jecxz
add
mov
sti
call
adc
cmps
xor
shr
adc
mov
pop
enter
jmp
mov
shl
xchg
sub
inc
mov
ja
sub
dec
addr16
sti
jle
xchg
shr
ror
inc
adc
das
cmp
xor
daa
mov
push
fwait
sub
(bad)
in
mov
cwde
outs
lods
ja
jp
std
mov
inc
test
dec
or
push
pop
cmp
je
daa
lds
aam
arpl
js
sahf
outs
dec
xor
xchg
xchg
pop
popf
fwait
pop
adc
fsub
or
and
add
mov
(bad)
(bad)
out
not
dec
mov
fstp
cmp
dec
pop
scas
add
jle
pop
xor
repz
adc
mov
mov
xchg
sub
xchg
ins
cmove
xchg
shr
jge
repnz
pusha
mov
pop
pop
push
ss
jb
or
shr
and
loope
mov
xor
call
fst
ret
sub
ret
leave
or
push
cmp
ss
les
add
(bad)
or
and
xchg
scas
test
retf
fdivr
or
jnp
and
lahf
xlat
lods
(bad)
loope
cmp
and
fs
fidivr
fsubr
or
mov
inc
inc
call
sbb
popa
and
dec
sub
inc
mov
cmps
xchg
pop
mov
cld
jno
and
cmps
sti
mov
inc
cmps
out
xchg
imul
inc
pop
cmps
sbb
mov
cs
sbb
push
fucom
and
cmps
imul
jg
push
retf
lahf
lock
fwait
xchg
pop
mov
and
jns
dec
fsub
les
shl
jecxz
push
cs
fprem1
ret
sub
dec
mov
int3
mov
das
inc
jmp
stc
loopne
lock
and
clc
cmp
inc
iret
ret
adc
dec
xchg
or
cli
mov
xor
push
int
cmp
popa
mov
sub
xchg
push
xchg
lock
loope
xor
push
repz
cmp
fnstcw
scas
push
les
cs
cmps
je
stos
fcomp
es
push
out
jo
test
int3
bound
fild
dec
jb
leave
mov
rcl
jns
mov
and
push
pop
and
sub
jg
aas
outs
mov
mov
sbb
adc
std
lock
cwde
mov
cli
std
inc
xchg
hlt
push
popw
imul
cmp
mov
cdq
push
out
jecxz
pop
test
iret
xchg
sub
pop
mov
lods
jmp
jecxz
add
or
mov
sub
fcom
shr
xchg
repnz
push
jmp
stos
or
jnp
test
test
icebp
fmul
std
inc
in
mov
push
inc
repz
ja
or
jno
not
push
icebp
pop
loopne
adc
mov
add
ins
popa
mov
pop
add
fmul
es
out
add
push
pop
imul
xchg
sti
xchg
sub
cs
sbb
jge
jl
mov
mov
cmps
ds
rol
and
add
xor
fldenv
gs
push
jp
repnz
xor
mov
pop
and
sub
mov
es
xchg
popa
nop
mov
cld
cmp
jbe
cmp
adc
push
mov
push
inc
xor
rcr
mov
enter
jb
ficomp
xor
es
xlat
sub
cwde
adc
enter
jmp
inc
dec
cmp
test
movs
ins
lea
in
mov
xchg
ins
and
xchg
loop
je
ss
add
retf
dec
aaa
mov
(bad)
sbb
shl
sar
(bad)
mov
dec
scas
outs
mov
jns
fisub
dec
cmps
ss
imul
shl
jno
or
mov
dec
cmc
mov
ret
pop
scas
mov
pop
mov
inc
pop
gs
dec
jmp
rcr
mov
lock
in
xor
pushf
dec
int
push
ret
sbb
lds
aas
cmp
inc
mov
cdq
scas
bound
dec
add
out
das
push
dec
inc
dec
imul
jle
push
shl
xor
xor
xor
sub
sbb
add
rcr
call
push
dec
enter
dec
das
push
jl
push
cmps
iret
dec
sub
dec
call
mov
mov
adc
sub
push
js
jp
mov
xor
jns
add
pop
inc
fsubr
xchg
and
iret
sub
retf
pop
and
sub
mov
dec
ret
popa
cmps
stc
repnz
out
mov
xchg
leave
retf
dec
xlat
xchg
mov
mov
(bad)
loop
in
or
aas
add
sbb
mov
or
repnz
fild
dec
arpl
stos
icebp
xor
mov
shr
adc
jg
ds
xchg
outs
sbb
cli
test
push
push
sub
mov
xor
mov
cmp
dec
(bad)
ja
into
or
mov
std
shl
cmp
cmc
add
addr16
leave
retf
push
sub
sub
add
cmp
imul
jne
mov
mov
cmp
push
cmp
pusha
and
mov
mov
xor
pop
pop
movs
push
int3
pop
xor
xor
dec
je
sbb
inc
xchg
inc
in
jmp
lahf
inc
mov
gs
ror
push
or
jecxz
fidiv
pop
pusha
xchg
or
jp
pop
icebp
ret
cld
and
mov
cmc
imul
push
xor
mov
ins
lods
inc
sar
xor
stc
pusha
pop
mov
scas
sbb
icebp
fs
ins
scas
fld
xchg
jns
nop
arpl
add
xor
pop
test
cli
sub
int
sbb
mov
push
push
bound
mov
push
ins
retf
bound
xchg
icebp
fdivr
xor
xchg
push
dec
jne
jbe
vpmaxub
lods
jl
pop
pop
imul
scas
cld
jne
dec
cmp
aaa
jnp
dec
mov
push
jne
xchg
lock
fild
loope
in
xchg
sahf
add
xchg
sub
xor
mov
fcmovb
mov
repnz
jecxz
loope
aas
cld
out
cmp
fisub
cmp
fmul
or
cli
dec
imul
add
jmp
repnz
mov
(bad)
fsub
adc
pop
dec
add
cmps
sub
dec
sub
pop
es
es
mov
imul
mov
mov
fs
xor
inc
cli
jmp
mov
push
rcr
cld
adc
push
xchg
icebp
cli
js
popa
mov
mov
fiadd
stos
cmp
mov
fcom
xchg
shl
sub
mov
sbb
add
out
out
sbb
mov
ficom
jg
jg
movs
nop
inc
movs
stos
cmps
mov
sub
xchg
ret
mov
sbb
pop
mov
xor
in
mov
(bad)
scas
mov
pop
mov
adc
popa
push
sbb
xor
add
push
inc
shl
iret
scas
add
int
adc
or
push
pop
cwde
mov
jne
aas
xchg
mov
daa
add
fadd
push
nop
pop
adc
jne
test
(bad)
stos
in
lea
cmp
nop
add
pop
pop
data16
pop
aas
movs
xor
mov
fild
push
sbb
cmps
shr
fucomp
jnp
sub
cmp
das
pop
mov
call
push
mov
(bad)
js
sbb
xor
mov
mov
pusha
mov
inc
das
out
bound
leave
xor
mov
cmp
stc
and
pop
bound
mov
shr
mov
cmp
adc
dec
or
push
aaa
out
(bad)
fldl2e
adc
cmovnp
(bad)
adc
add
and
fwait
cmp
xor
dec
xor
and
jnp
addr16
dec
cld
sbb
in
xchg
push
mov
daa
ffree
dec
fnstenv
mov
jne
ds
mov
xor
sbb
lods
movs
(bad)
jo
in
xor
ins
repnz
pop
xor
jge
push
add
inc
adc
stos
hlt
xchg
xor
sub
scas
stc
into
dec
xchg
mov
cmp
stos
mov
push
sub
sbb
stos
jmp
enter
lock
scas
in
aam
pop
jge
lods
mov
mov
clc
mov
jmp
cld
mov
and
cld
adc
out
adc
pop
mov
ffree
push
mov
call
inc
inc
into
mov
jne
and
(bad)
out
repnz
add
xchg
xor
scas
dec
inc
xchg
adc
dec
mov
stos
rcr
and
rol
pop
rol
test
adc
mov
dec
pop
xor
fiadd
test
sub
daa
or
sbb
push
lods
lea
inc
dec
sbb
add
ss
vzeroall
imul
out
adc
stos
ror
enter
scas
fadd
and
call
jb
(bad)
and
and
or
pop
mov
sbb
pop
(bad)
jnp
mov
or
retf
xor
jmp
stos
sub
jge
dec
stos
mov
mov
xor
cmp
mov
rol
xor
pop
mov
movs
jge
in
adc
push
jmp
xchg
cmp
rol
add
int
cdq
xor
jne
mov
sbb
sti
aad
je
jmp
fistp
call
into
jbe
out
push
pop
pop
icebp
out
push
xlat
stos
sar
sbb
xchg
xor
cmps
mov
imul
add
outs
fwait
pushf
jp
ss
and
xchg
es
jge
fwait
jmp
test
rcr
scas
es
inc
jmp
cwde
or
jne
loope
out
dec
pop
in
stos
cmp
int3
xor
fldcw
push
push
arpl
or
adc
rol
leave
aaa
xchg
push
mov
iret
lea
lods
aad
nop
push
add
adc
mov
mov
enter
js
mov
cld
mov
in
leave
pop
dec
xor
out
add
cdq
mov
enter
(bad)
lods
test
fisttp
cld
cmp
cmps
jl
scas
popa
sub
stos
and
into
les
push
jp
adc
mov
mov
pushf
or
pushf
in
cmp
ins
rol
xchg
mov
aad
adc
add
sub
xchg
mov
(bad)
mov
nop
retf
add
iret
stos
outs
icebp
test
mov
dec
xor
mov
jne
jne
mov
imul
loopne
mov
call
sbb
cmp
and
xchg
jns
sbb
ja
aas
inc
into
(bad)
ss
xchg
and
je
add
mov
cmp
sti
or
mov
(bad)
call
add
rol
cmps
leave
iret
sub
into
mov
mov
pop
push
sti
mov
cmp
popf
fisubr
mov
sbb
push
cwde
sub
loopne
pop
pop
ss
dec
adc
lds
bound
xchg
(bad)
adc
pop
inc
xchg
ss
pusha
cmp
and
ret
inc
fcmovne
mov
mov
xchg
ja
push
test
sbb
xor
cs
fucomip
mov
sub
or
not
je
xchg
mov
and
call
out
xchg
mov
mul
fcom
jecxz
cmc
in
ins
xchg
xchg
sahf
jo
pop
imul
push
sbb
push
mov
mov
and
or
nop
lock
adc
or
leave
in
mov
bound
add
sub
inc
sbb
fs
in
cmp
cmps
repz
es
mov
ja
mov
dec
push
imul
dec
out
and
push
cmps
aam
out
sub
or
adc
cwde
aam
cmp
and
mov
dec
loope
clc
(bad)
sub
std
push
jge
cmp
sbb
sub
lods
and
push
sub
imul
addr16
mov
aad
int
aas
jle
lds
jb
cld
cli
ret
jecxz
dec
mov
(bad)
sti
xchg
jae
lea
stos
jno
cmps
popa
adc
adc
mov
xor
sbb
(bad)
fist
xor
adc
add
leave
dec
xor
jne
rcl
int
enter
sbb
pop
cld
cmp
pop
jmp
cmps
gs
daa
adc
sti
cmps
aad
dec
aam
jge
jo
inc
ins
stc
inc
dec
and
leave
lahf
inc
cmp
sar
xor
ret
call
adc
cld
ja
sub
(bad)
and
ror
jne
dec
cmp
dec
dec
dec
inc
cmps
inc
adc
push
jge
mov
fisub
(bad)
fwait
adc
sub
popf
ret
outs
push
push
dec
add
(bad)
pop
push
pushf
loopne
cmp
lds
jp
adc
xor
and
mov
iret
mov
xor
pop
popf
fistp
ret
les
test
lahf
pop
out
or
pop
jge
mov
jnp
mov
mov
ja
pushf
arpl
and
xor
push
push
outs
fwait
stos
add
and
cs
pop
clc
sbb
xor
ja
jge
mov
and
add
outs
enter
cmps
push
adc
dec
pop
mov
mov
retf
sahf
cmp
ficom
dec
imul
je
bound
ins
mov
test
fdiv
test
cmp
shl
inc
nop
imul
and
(bad)
jo
hlt
or
fisubr
in
loopne
mov
sub
cmp
adc
jg
mov
rsqrtps
stc
aam
sub
(bad)
sbb
pop
dec
stc
in
adc
xor
leave
cmp
xchg
pop
sti
xor
cli
and
adc
fidivr
lods
xlat
fwait
scas
adc
mov
xchg
xchg
jge
sbb
inc
and
push
add
jmp
not
outs
mov
popa
push
imul
adc
not
jl
jo
cmp
movs
sbb
add
les
addr16
arpl
dec
jbe
xlat
mov
pop
ret
adc
lahf
lock
pop
test
pushf
xchg
sbb
xchg
inc
jb
ja
jno
ss
jp
das
jmp
and
jmp
cld
in
sbb
sub
gs
mov
and
aam
xchg
push
hlt
pop
mov
call
lahf
loope
pop
fsub
shl
pop
jmp
pop
sbb
loopne
cmp
dec
out
dec
out
popf
and
and
out
sbb
scas
repz
lock
test
cmc
jmp
pop
xchg
div
outs
inc
pop
imul
(bad)
pop
out
test
xor
in
mov
sbb
push
out
mov
mov
or
ss
jle
cmc
pop
sub
jp
add
stc
ficomp
xlat
stc
cs
mov
jo
add
pop
dec
rol
scas
mov
xchg
es
repz
lea
inc
daa
or
imul
sub
inc
push
push
dec
les
mov
or
hlt
dec
loop
stc
cmps
mov
sbb
cmp
mov
jne
das
inc
pop
or
inc
les
aam
les
add
xor
je
mov
or
(bad)
jb
je
dec
int3
idiv
mov
sub
mov
cmp
clc
pop
into
cmp
ds
mov
or
dec
jge
inc
mov
mov
gs
stos
jecxz
daa
cmp
or
inc
ret
call
lds
stos
jle
sbb
sar
mov
aaa
loopne
out
ret
fldlg2
fist
loopne
repz
xor
mov
adc
xchg
ins
loopne
stc
frstor
xchg
neg
push
movs
push
inc
and
add
rcr
add
out
lea
mov
into
stos
xor
dec
and
adc
jp
push
mov
cmp
pop
scas
jmp
jo
ins
cmp
xor
cmp
add
rcl
sub
cmp
fdivrp
test
push
ret
sbb
ins
retf
xchg
imul
jge
mov
loope
mov
mov
sub
cmps
rcl
inc
xor
stos
cmc
mov
and
dec
es
into
push
in
mov
mov
call
sub
add
push
sbb
pop
shl
cmovbe
rcr
push
or
fiadd
stos
mov
cmc
shl
pop
or
(bad)
push
or
or
in
lock
cmp
int
add
fldenv
leave
push
xor
sub
mov
dec
mov
mov
xor
ffreep
shr
aas
push
ret
hlt
call
pop
push
fimul
bswap
inc
nop
push
es
cmp
hlt
into
push
pop
std
xchg
test
push
push
pusha
or
ffree
cs
ss
mov
int3
sub
popa
hlt
and
sysenter
adc
out
pop
add
mov
xchg
(bad)
call
mov
mov
je
hlt
scas
pop
iret
fwait
rol
sbb
mov
repnz
test
sar
dec
outs
adc
mov
cld
push
mov
and
inc
xor
mov
add
sbb
mov
std
and
pop
adc
bound
push
fisubr
aam
jmp
mov
dec
inc
adc
bswap
push
ret
pop
adc
sahf
mov
aad
xchg
mov
jle
and
jmp
scas
mov
push
aaa
xchg
adc
out
sbb
jb
stos
jno
cmc
fmul
hlt
cdq
cmp
pop
enter
test
movs
ret
mov
xchg
inc
push
or
jle
and
je
rol
inc
dec
sbb
inc
mov
xchg
push
and
jmp
imul
xchg
add
rcl
test
cs
jns
stc
cdq
cli
xor
cwde
arpl
ja
sbb
mov
loope
cdq
xchg
fsub
call
add
xchg
(bad)
pop
push
pop
mov
fisttp
sar
adc
dec
lods
mov
sbb
ja
jns
aad
adc
imul
aam
inc
jl
add
mov
mov
lea
dec
adc
out
sti
sahf
xlat
cld
and
jae
outs
add
aad
das
sub
xchg
and
xor
dec
gs
push
mov
stos
jl
or
mov
movs
aam
xor
push
dec
mov
add
out
bound
int
cmp
pop
fiadd
retf
jno
aas
xchg
in
adc
adc
mov
jp
(bad)
sti
xor
xchg
jecxz
push
scas
jle
jno
sbb
gs
mov
jp
mov
fisub
jg
outs
sbb
cmp
xchg
data16
jl
or
xor
fs
outs
daa
mov
pop
sbb
jg
das
xchg
jle
retf
(bad)
push
xchg
push
push
jg
xchg
fstp
in
dec
add
pop
fsub
test
call
adc
mov
cmp
retf
popf
inc
pushf
bound
pusha
cli
sti
xor
adc
sbb
sub
sahf
das
cmp
sub
cmp
xor
ret
jne
dec
or
inc
xor
test
add
inc
xchg
jle
emms
add
xor
jmp
or
popf
in
(bad)
pop
pop
pop
or
in
push
jbe
ret
jp
pop
call
jno
sub
or
imul
daa
mov
int
mov
and
loope
aad
xchg
and
jnp
ret
sahf
out
ret
les
ret
jae
stos
or
jns
movs
inc
out
push
inc
xchg
adc
jo
ud2
sub
mov
jns
(bad)
xor
icebp
fnstsw
cli
or
sbb
xor
fidiv
xor
mov
jp
cmp
pop
and
test
fidiv
mov
call
dec
push
jge
mov
push
sub
mov
imul
movs
popf
jmp
or
mov
pusha
add
and
arpl
stc
mov
push
cld
mov
dec
mov
iret
mov
xchg
sti
rol
xchg
and
data16
aaa
and
sahf
movs
mov
ror
xor
mov
adc
addr16
dec
in
out
mov
repz
dec
ins
mov
xchg
(bad)
sbb
retf
mov
jae
and
iret
cmp
in
outs
add
pop
sbb
ret
call
jb
sub
sbb
inc
jmp
push
mov
ins
retf
repnz
mov
sub
rcl
inc
cmp
hlt
dec
xor
lock
scas
ins
adc
add
cmps
sar
fisub
xor
fldcw
mov
loop
push
xlat
add
cmc
popf
mov
jp
inc
enter
cli
inc
bound
push
inc
adc
pop
js
ficom
xchg
jnp
push
imul
bt
cmp
xor
pop
test
retf
sahf
pop
(bad)
fucomi
xor
(bad)
cmp
xor
in
cmp
jmp
cmp
add
popa
shl
lahf
sbb
std
cmp
jo
cmp
idiv
mov
lods
inc
scas
jbe
xchg
mov
shr
mov
gs
jnp
inc
sub
movs
push
push
dec
fwait
mov
xchg
cmp
mov
or
pop
xchg
(bad)
ss
adc
pop
pop
adc
ss
mov
repz
sub
maxps
and
mov
mov
sub
fld
lahf
pop
int
mov
inc
pushf
fwait
push
stc
js
(bad)
loopne
push
in
call
mov
aaa
test
mov
jmp
rol
mov
test
pop
or
xor
bound
(bad)
call
cmp
sahf
push
dec
lods
repnz
cs
ds
xchg
jae
mov
nop
inc
cmp
xchg
sbb
push
sbb
cmp
and
fiadd
mov
or
xchg
mov
jns
sbb
push
xor
add
cmp
inc
inc
fs
ret
daa
movs
in
inc
dec
mov
(bad)
cs
jns
push
add
adc
nop
sub
jge
test
jbe
sub
lea
fnstenv
lock
repz
or
imul
xor
dec
pop
loop
movs
xor
icebp
mov
mov
xchg
cmp
or
pop
sbb
inc
mov
nop
jmp
sbb
fisttp
leave
lock
popf
lea
aam
push
cwde
(bad)
jne
xchg
movs
loop
ret
scas
ja
mov
(bad)
mov
jb
jmp
add
and
or
and
sub
pop
xor
push
mov
outs
test
data16
push
pop
and
and
out
pop
ret
mov
cli
mov
lahf
aaa
mov
dec
cmp
std
lods
fild
stc
into
(bad)
xchg
push
ret
dec
cmps
data16
fidiv
pop
push
adc
or
cmp
sti
dec
mov
neg
push
dec
leave
cmps
cmp
cmc
mov
or
test
mov
fimul
outs
sub
mov
mov
push
push
add
fstp
pop
outs
mov
pop
mov
int3
inc
stos
cmp
cmp
cmp
nop
adc
xor
out
or
pop
push
psrlq
mov
cmp
call
add
popf
stc
mov
adc
jle
xor
mov
adc
mov
ins
dec
daa
or
out
cmp
pop
sbb
xor
pop
push
imul
mov
jae
xor
and
mov
jmp
mov
clc
or
ret
xchg
jns
add
out
lahf
and
push
mov
add
jmp
int
jl
inc
xor
and
(bad)
loopne
jb
in
loope
cmp
sub
or
leave
mov
ret
outs
jle
inc
loope
jmp
outs
shl
push
js
gs
adc
sub
and
aad
adc
dec
mov
pop
mov
fsubp
sub
in
movs
lods
xchg
sti
add
jb
add
pusha
repz
(bad)
jmp
(bad)
aas
(bad)
jl
push
ret
push
loopne
inc
dec
test
cmp
std
cmp
jmp
sub
outs
jnp
hlt
aad
pop
cdq
cld
mov
lock
call
cmp
and
xchg
jecxz
push
xor
ror
and
aas
adc
in
hlt
mov
mov
dec
retf
mov
mov
data16
(bad)
or
retf
(bad)
xor
dec
enter
fiadd
pushf
push
mov
scas
ror
mov
sti
xor
cld
jmp
cmc
push
lock
ins
add
out
cmp
mov
ja
push
jg
adc
test
jnp
xlat
popa
and
dec
lods
sub
mov
dec
jecxz
jae
(bad)
pop
fdiv
jecxz
mov
(bad)
push
not
add
adc
push
add
pop
out
cmp
mov
cmp
fisttp
call
cmp
popa
fs
in
loopne
inc
mov
iret
adc
jl
cli
mov
mov
ror
xor
int
xchg
dec
push
pusha
inc
add
out
pop
sbb
sub
nop
or
ror
test
stc
xchg
int
shl
es
dec
mov
clc
mov
cmp
sub
imul
je
dec
cmp
or
or
ds
xchg
test
(bad)
jge
sub
or
cmp
inc
lahf
mov
adc
call
ins
adc
mov
jg
mov
xchg
jg
mov
scas
sub
lahf
lds
sbb
rcl
xchg
xchg
xchg
lods
mov
cwde
add
sti
xchg
xchg
rol
xor
xchg
outs
mov
mov
cmc
xor
int
ja
and
in
mov
or
xchg
dec
cmp
movs
popf
mov
mov
pop
dec
jmp
mov
and
(bad)
aas
retf
outs
push
and
push
ja
or
cli
clc
mov
jnp
arpl
data16
imul
loopne
mov
imul
push
leave
into
sahf
int
(bad)
jge
in
icebp
repnz
test
xchg
mov
ja
int
jecxz
xchg
movs
jno
pop
sbb
rcl
dec
xchg
imul
sbb
inc
or
sti
shr
push
xchg
pop
mov
iret
stos
retf
adc
and
mov
cmp
and
or
pop
imul
aad
sti
sbb
mov
pushf
scas
xchg
mov
dec
jmp
outs
fdivr
repnz
pop
sub
clc
jecxz
retf
or
sub
xchg
jge
xchg
adc
xor
outs
loopne
inc
leave
cmp
pop
lds
fisttp
or
pop
out
sbb
sbb
push
mov
add
loop
sahf
mov
out
and
mov
push
arpl
not
sub
and
arpl
push
out
mov
add
jns
stos
push
and
test
int
or
and
test
dec
mov
pop
mov
call
daa
adc
repnz
xchg
pop
inc
jae
jecxz
fs
ret
inc
retf
mov
retf
sub
and
not
mov
(bad)
lahf
mov
cmps
and
dec
sub
in
sti
ret
mov
retf
retf
test
pop
pop
pslld
shl
mov
mov
push
mov
sbb
(bad)
out
loop
or
xor
xchg
inc
mov
data16
call
test
leave
inc
and
or
outs
sbb
dec
cwde
iret
mov
sbb
dec
add
sub
cmps
int
inc
or
fs
or
mov
pushf
inc
popa
sub
std
jbe
ins
fist
pop
cdq
aaa
sbb
mov
out
dec
inc
stc
xor
inc
mov
mov
pop
lods
fdivr
and
iretw
mov
jns
sti
mov
shl
xchg
cmp
xchg
ror
xor
cld
jb
pop
dec
outs
pop
inc
inc
mov
movs
jg
(bad)
push
ss
add
or
and
mov
test
movs
mov
mov
test
pop
adc
pop
(bad)
push
mov
fild
int
push
test
pop
test
mov
or
sar
daa
adc
aad
ror
adc
jecxz
dec
call
jbe
mov
sbb
dec
enter
push
pop
arpl
xchg
fadd
cmp
ss
pop
pop
neg
test
inc
js
lahf
std
mov
and
cmc
psrlw
add
adc
rol
(bad)
jecxz
pop
fidivr
fdivr
test
cs
lahf
pusha
int3
hlt
add
and
mov
mov
or
push
shl
test
shl
push
pop
pushf
jns
xchg
jne
cli
gs
popa
jbe
xor
call
mov
mov
mov
je
sbb
popa
stos
fist
(bad)
inc
(bad)
int3
mov
int
push
add
adc
cmp
cld
fadd
fnstcw
mov
sar
rcr
mov
jne
or
(bad)
and
loop
lea
call
inc
pop
mov
mov
aaa
sbb
adc
icebp
leave
ficom
jo
ret
xchg
add
or
push
jg
cmp
jecxz
pop
les
xchg
fsubr
mov
cwde
push
xchg
mov
push
sbb
mov
lock
popf
ds
std
add
lds
gs
leave
inc
lea
sub
test
jle
jmp
mov
pushf
dec
ror
jmp
xor
xor
xchg
inc
ror
mov
add
mov
inc
fldcw
add
ret
pop
add
jge
jl
lahf
(bad)
xchg
mov
add
add
adc
xor
outs
int
xchg
mov
mov
dec
js
outs
scas
or
hlt
and
push
xor
inc
div
out
jno
mov
push
mov
fcomi
cmp
add
cdq
mov
aas
or
cmp
ins
or
or
shr
sub
add
imul
adc
pushw
shl
ja
fnstenv
lock
scas
in
jbe
aaa
add
sahf
mov
push
xchg
pop
loope
add
pop
movs
pop
sbb
addr16
inc
jge
rol
sbb
rol
dec
iret
adc
push
mov
aam
sbb
(bad)
or
pop
or
out
dec
cmp
push
les
mov
mov
stc
ins
sbb
stos
mov
inc
pop
mov
adc
jns
mov
out
xchg
xchg
push
and
nop
push
add
push
fdivr
lahf
sti
mov
inc
jns
and
lea
inc
fwait
add
mov
sti
int3
test
(bad)
cmps
(bad)
les
cmp
adc
pusha
bound
xchg
sbb
es
cmps
or
cmps
or
(bad)
dec
sbb
pop
cmc
jmp
push
jno
mov
icebp
(bad)
cli
add
dec
pop
pop
loopne
jns
in
call
loope
ror
dec
call
xchg
cmp
call
dec
into
shl
jg
pop
rol
mov
add
mov
jb
ins
out
adc
push
push
mov
cmp
jno
cmps
cdq
(bad)
sub
xchg
shl
pop
xchg
mov
mov
cmp
popf
iret
inc
push
xor
xor
cbw
push
add
in
inc
pop
popf
and
add
call
xor
sti
jns
pop
repnz
call
out
and
xchg
mov
jmp
gs
stos
jae
es
rcl
push
imul
sahf
into
pop
cmps
xchg
ret
je
movs
int3
shl
(bad)
scas
jle
pop
es
mov
inc
mov
push
mov
xchg
movs
jo
movs
add
rcr
or
dec
retf
push
jno
add
push
and
xor
sbb
hlt
and
loope
pop
mov
lahf
scas
in
repz
inc
cmp
mov
stos
pop
ret
xchg
push
dec
xchg
leave
or
cmp
les
retf
into
or
cmp
sub
adc
push
inc
test
ja
add
add
loop
inc
loop
cmp
cwde
sti
nop
or
pop
scas
adc
clc
stos
movs
sahf
idiv
lock
adc
push
(bad)
xchg
test
lock
mov
jnp
adc
dec
cmp
mov
adc
movs
cmp
inc
aas
loope
out
xchg
(bad)
cmc
push
les
test
or
sub
pushf
int
loopne
fdivr
out
mov
mov
jae
je
dec
mov
in
je
test
les
sbb
dec
cmp
inc
xchg
and
push
movs
mov
popa
popf
shl
fnstcw
stos
ins
sub
xchg
xchg
mov
mov
ret
lock
or
into
mov
not
xchg
push
pop
jns
data16
mov
es
lods
jns
sub
mov
enter
cmp
xchg
stc
mov
xor
inc
das
popa
jno
and
jnp
or
xchg
cs
icebp
add
je
jle
icebp
and
adc
icebp
mov
mov
aas
inc
or
jae
lea
xchg
loopne
xor
pushf
outs
pop
mov
lds
add
jno
dec
repz
sbb
and
fld
aas
cs
dec
popf
shl
jbe
ret
push
or
movs
cmps
inc
lds
into
jnp
pop
clc
xchg
inc
jmp
jge
and
mov
mov
push
cmp
ins
mov
mov
sbb
ins
jmp
or
data16
sbb
mov
inc
loopne
mov
sbb
ror
sub
push
adc
dec
mov
or
lods
jo
jns
shl
mov
outs
jns
pop
imul
pop
xor
or
repnz
ret
out
push
add
adc
enter
push
stos
repnz
mov
xlat
les
inc
xlat
test
pop
cmp
push
retf
and
mov
(bad)
and
ins
scas
scas
dec
mov
cmp
push
in
and
cmp
push
aam
cmps
jl
stc
pop
ins
sahf
in
imul
pop
jbe
push
jecxz
movs
dec
pop
lods
jg
and
js
lods
push
dec
mov
leave
mov
int3
cli
mov
repnz
shl
xor
js
outs
out
scas
dec
ins
xor
repz
push
call
repnz
inc
and
pop
lock
ins
or
daa
and
mov
dec
jns
add
rcr
jae
dec
iret
movs
cmp
ffreep
les
inc
(bad)
pop
loop
inc
cmp
dec
push
xor
not
xor
or
inc
push
rol
mov
and
adc
jbe
jbe
inc
cmps
stos
add
sub
pop
loopne
dec
xor
cmp
aas
mov
cwde
xor
pop
aam
aam
fisubr
hlt
movs
xchg
out
data16
jno
inc
shl
xchg
in
sbb
and
fs
cmp
je
into
ret
popf
cli
jmp
shr
mov
xchg
es
jo
or
ins
sub
cmp
sub
jl
push
cmp
sbb
sub
repnz
push
stos
add
jl
add
push
adc
loop
dec
inc
adc
(bad)
fiadd
jp
and
dec
inc
mov
push
pop
pop
sbb
es
adc
dec
mov
in
ret
push
pop
sbb
in
and
add
stc
shr
lea
xchg
mov
or
and
scas
js
jno
ja
sub
pop
inc
ds
call
pop
mov
repnz
mov
push
sbb
jecxz
(bad)
popa
push
pop
push
sub
stc
aam
daa
mov
sbb
addr16
mov
in
sub
jbe
xchg
mov
lahf
or
addr16
pusha
repz
imul
aas
fisttp
les
xchg
push
inc
retf
pop
adc
mul
shl
sbb
pop
lahf
cmp
xchg
push
das
outs
ja
sti
jle
pop
xchg
dec
lds
pop
mov
movs
stos
mov
push
push
in
sub
inc
pushf
cli
aam
ins
jmp
pop
push
test
mov
pop
fld
cmp
and
and
adc
push
aam
adc
cld
xchg
rol
xor
aaa
ss
ret
movs
mov
xchg
dec
cmc
dec
pop
int
cmps
in
movs
jo
repnz
push
jbe
scas
in
dec
jno
and
push
xor
lods
dec
call
mov
les
(bad)
(bad)
cmp
mov
lahf
pop
xchg
out
or
aam
adc
inc
push
in
or
add
pop
outs
or
push
aas
in
sti
retf
call
push
hlt
jnp
mov
je
mov
xchg
mov
dec
or
pop
dec
dec
pop
repnz
lds
call
aaa
test
sub
clc
inc
in
and
mov
adc
hlt
in
xlat
cmp
push
mov
push
xor
jbe
(bad)
and
jp
lock
adc
cmp
stc
cmp
sub
mov
add
bound
movs
cdq
imul
aaa
pop
cwde
mov
scas
xor
dec
int
loopne
push
mov
dec
stc
pop
xor
inc
repz
(bad)
cdq
push
inc
shr
add
push
sti
jp
mov
jmp
sub
mov
sbb
dec
add
shl
fnsave
loop
(bad)
in
cld
push
push
(bad)
out
mov
xor
cmc
fnstcw
arpl
mov
sbb
shr
stos
scas
mov
outs
adc
xchg
icebp
adc
js
add
rcl
adc
mov
enter
pop
or
jmp
rcl
leave
dec
push
sub
mov
ret
(bad)
mov
inc
aas
sbb
popa
or
sbb
ret
pop
and
xchg
shr
data16
jmp
popa
dec
cs
rcl
inc
andnps
jno
dec
inc
push
fadd
adc
jmp
or
outs
jecxz
pushf
into
fsubr
cld
test
or
stos
push
rol
cmp
out
dec
outs
ds
push
cmps
sub
sbb
and
sbb
cmp
out
mov
and
inc
stos
call
shl
outs
mov
sahf
das
pop
(bad)
out
sub
sub
push
sub
mov
lea
dec
mov
lds
int
sub
fwait
in
sbb
int
mov
push
xor
mov
dec
jmp
jo
fwait
aaa
push
sub
hlt
repz
cs
lds
mov
test
movs
adc
xchg
shr
sbb
outs
mov
xor
mov
sub
out
mov
ss
mov
jno
sahf
data16
and
add
push
mov
rcl
cmps
xlat
xor
ss
lahf
aam
fs
jl
adc
call
inc
in
fnstenv
cmp
jg
inc
cmp
out
mov
mov
adc
jno
pop
or
jbe
stos
das
js
jns
mov
lods
movs
iret
add
mov
hlt
xor
addr16
outs
mov
pop
adc
xchg
sbb
in
xchg
mov
ins
dec
call
in
js
sbb
sbb
pop
jno
fidivr
sti
mov
(bad)
adc
dec
in
or
call
adc
xor
clc
movs
add
into
push
sub
sbb
pop
pop
dec
push
xchg
call
ret
jmp
popa
push
jp
jo
xor
add
les
in
xchg
clc
pop
(bad)
cmc
ret
adc
mov
xchg
and
cdq
mov
xchg
jbe
repnz
adc
popa
mov
rcl
imul
pop
outs
sbb
imul
je
rcr
ret
fsub
dec
ja
mov
cmp
cmp
push
sub
es
addr16
and
enter
cmp
mov
add
std
inc
dec
stc
xchg
mov
(bad)
jns
inc
xor
adc
(bad)
call
xor
rcl
cmps
push
fsubr
rcr
nop
pop
sti
nop
sbb
mov
call
fmul
out
adc
scas
lods
shl
popf
xor
stos
push
jmp
bound
mov
and
fwait
mov
hlt
push
je
sub
push
iret
add
std
lds
xchg
sbb
mov
jbe
lods
sbb
pop
and
sub
inc
popa
bound
dec
cdq
cmps
adc
push
xor
aam
out
pop
mov
clc
add
punpckhwd
fiadd
jnp
inc
(bad)
(bad)
(bad)
mov
hlt
int
ins
add
or
out
(bad)
(bad)
cmp
xchg
addr16
jnp
sub
mov
inc
sar
push
pop
or
mov
mov
call
jle
sbb
shl
nop
repz
cmps
xlat
lds
jb
test
pop
mov
enter
es
and
lock
fidiv
hlt
or
icebp
pop
(bad)
mov
mov
mov
sub
sbb
sbb
add
(bad)
ja
pop
fwait
jne
or
mov
xor
cmp
add
leave
mov
ret
neg
or
and
(bad)
sti
in
or
outs
movs
fbstp
xchg
dec
pusha
fcomp
es
xor
fs
push
or
add
mov
jns
retf
sbb
(bad)
add
mov
pop
dec
lock
or
call
in
ins
aaa
or
mov
(bad)
ss
out
hlt
sub
(bad)
repz
ret
cs
in
xchg
aam
neg
add
mov
ins
mov
jle
pusha
sbb
bound
mov
xchg
icebp
push
jne
(bad)
cld
(bad)
inc
cwde
out
test
and
mov
cdq
cs
cmps
ret
mov
addr16
add
xchg
int3
cmp
xchg
push
and
xor
std
loope
test
xor
mov
xchg
jecxz
outs
mov
movs
cmp
pop
and
sub
out
fild
in
bound
push
push
xchg
or
xchg
pop
or
repz
push
add
movs
push
add
dec
jb
loop
add
les
stc
add
imul
mov
sbb
mov
jecxz
inc
push
sti
push
popf
and
jecxz
sub
mov
sbb
fist
scas
add
cmp
mov
lock
pushf
mov
inc
mov
push
mov
out
pminsw
cmc
add
(bad)
sbb
scas
xchg
inc
inc
jbe
leave
ret
jmp
aas
mov
push
maxps
les
loop
mov
cmc
in
or
cld
and
div
push
(bad)
cli
cmp
xor
in
cmps
and
ss
add
push
push
and
arpl
push
push
pop
jnp
adc
mov
add
or
mov
iret
add
inc
lea
dec
dec
mov
enter
jmp
fdiv
add
cdq
push
inc
jmp
test
lods
ret
arpl
imul
mov
(bad)
sbb
lods
sub
ret
dec
cmp
sub
mov
lods
mov
inc
ja
mov
fstp
lahf
mov
sub
xor
ds
int3
call
clc
xchg
std
pop
cmps
mov
fdivr
aaa
cli
mov
dec
ds
xor
push
jb
iret
call
xchg
sar
cwde
adc
std
ror
cmps
mov
daa
and
mov
test
fwait
mov
jge
and
or
out
sub
jns
out
mov
adc
adc
adc
inc
mov
cmp
jnp
cmp
aas
jp
mov
push
mov
push
pop
lahf
imul
jne
pop
test
fst
enter
js
xchg
push
push
fwait
stos
sbb
pop
jl
jb
cmps
xor
sub
pop
out
es
out
dec
stc
push
test
movs
repnz
cld
fnsave
or
inc
out
cmp
popf
movs
add
dec
cmps
ins
jle
mov
stos
popa
into
arpl
mov
ins
dec
pop
cwde
cmp
sub
call
xchg
xor
movs
je
test
cmp
cmps
inc
push
cmp
mov
and
cld
dec
or
ret
jg
mov
or
ret
mov
sbb
aaa
mov
clc
adc
xchg
lahf
clc
pop
jl
adc
jecxz
pop
in
cld
sub
adc
aaa
js
push
xor
es
aam
mov
xor
popa
push
pop
jmp
daa
mov
mov
adc
test
lea
fisttp
iret
das
rol
mov
in
sub
jne
ret
out
mov
les
adc
adc
xor
jge
sub
add
adc
shl
jnp
in
sbb
jbe
push
inc
mov
cmp
mov
jmp
jnp
jg
aam
pop
cli
xchg
movs
xchg
pop
xchg
popa
popf
ins
cmc
xor
lds
std
mov
mov
int3
cdq
(bad)
xchg
cdq
fistp
dec
cmp
addr16
gs
ja
fs
adc
imul
sbb
movs
jb
ss
pop
mov
push
pop
repnz
jo
mov
aaa
mov
xor
pop
mov
fild
shl
gs
mov
cmps
add
not
dec
xchg
sar
jmp
mov
xchg
pop
mov
ret
in
sub
add
inc
movs
cmp
sbb
ror
shl
sbb
mov
leave
jno
and
outs
xor
jnp
pop
retf
lods
jl
fs
push
mov
jnp
lahf
mov
scas
dec
aam
aas
pop
stos
mov
mov
je
fidivr
inc
adc
push
lock
aas
ss
fistp
jl
pusha
xlat
pop
or
jae
repz
hlt
fisubr
test
shl
arpl
stos
mov
xlat
cmp
sbb
call
test
inc
loope
(bad)
loopne
jns
bound
stos
int3
xor
add
cli
or
dec
movs
jg
sbb
mov
imul
cdq
push
call
das
mov
ret
push
adc
retf
lods
cmps
cs
test
dec
pop
xor
adc
sti
xor
shl
icebp
jmp
mov
add
in
bnd
mov
inc
pushf
gs
xchg
inc
jns
jmp
cmp
xor
mov
jns
icebp
dec
adc
fisubr
inc
mov
lds
jae
popf
outs
cmp
cmc
sub
hlt
(bad)
mov
loope
imul
or
loopne
and
lahf
xor
or
sub
inc
sub
pop
pusha
fadd
mov
and
hlt
stc
fmul
aas
into
ret
sub
xor
adc
repnz
cmps
cli
cmp
add
inc
mov
data16
enter
jmp
mov
in
cmp
push
sub
sub
sub
popa
iret
mov
test
mov
xor
mov
inc
popf
mov
push
cdq
dec
repz
push
je
push
xchg
mov
mov
xchg
fbld
or
push
xchg
dec
xlat
test
or
mov
sub
cmp
rol
pop
push
aad
dec
inc
ins
push
pop
lds
mov
jbe
loopne
mov
and
imul
inc
mov
fwait
jle
jnp
cld
sbb
ins
out
movs
loop
push
pop
pop
push
mov
or
daa
pop
or
sbb
add
mov
pop
jnp
aad
xchg
pop
call
add
dec
div
inc
leave
mov
pop
repnz
cmp
test
test
jmp
mov
loop
out
push
mov
xor
pop
fcmovnb
push
imul
mov
aas
out
mov
fst
dec
in
repnz
inc
sbb
xchg
cs
inc
hlt
pop
add
xor
mov
jae
daa
mov
daa
in
mov
dec
imul
and
imul
cmc
fistp
mov
push
int3
xchg
and
daa
mov
ins
or
repnz
(bad)
pushf
aaa
mov
xor
push
mov
xor
lea
dec
loop
inc
xchg
lea
xchg
gs
xchg
and
int
hlt
mov
shrd
cmp
mov
int
cs
rcl
jp
aad
test
jmp
mov
outs
dec
movs
outs
mov
out
dec
mov
outs
jbe
mov
lds
(bad)
fisttp
push
scas
jbe
adc
fsubp
pop
sbb
ins
mov
stos
jnp
out
mov
out
pop
and
sbb
pop
cmp
xor
push
cmp
pop
or
push
xor
mov
js
fs
jo
xor
inc
dec
jns
cmp
outs
aas
push
push
or
(bad)
jecxz
icebp
repz
in
pop
icebp
popf
lock
les
ins
arpl
pop
mov
jmp
mov
sahf
inc
repnz
ficom
mov
pop
adc
jle
(bad)
es
cmp
dec
ret
movs
sbb
inc
add
cmps
inc
iret
push
int3
cmp
dec
scas
int
jb
push
int
adc
cdq
add
mov
sbb
mov
stos
repz
sahf
adc
jecxz
mov
fs
mov
xlat
cdq
pop
cmp
sbb
and
mov
(bad)
fdiv
push
lock
mov
shr
pop
mov
es
aas
stos
adc
je
and
or
and
and
int3
pop
xor
dec
jp
xor
sbb
jnp
dec
retf
movd
call
ret
ror
sbb
xor
jmp
loopne
jbe
xor
push
push
repz
jne
xchg
lods
fsubr
xor
ror
adc
lods
mov
dec
ds
pop
sbb
stos
jmp
loop
sbb
push
pop
mov
mov
cmp
stos
arpl
dec
and
lds
cmps
loope
movs
repz
or
aam
imul
es
stos
not
(bad)
in
arpl
in
clc
std
jecxz
push
test
or
iret
sub
cmp
jmp
pop
mov
mov
in
adc
sahf
sub
stos
adc
mov
xchg
gs
dec
fs
lods
(bad)
push
cdq
cmp
test
and
or
cmp
test
cmps
ss
mov
test
mov
pop
adc
xchg
xor
dec
xor
es
dec
loope
xchg
imul
push
push
and
scas
push
ror
mov
mov
or
shr
cdq
sbb
push
pop
call
pop
jbe
ret
and
fstp
imul
and
jns
adc
aad
scas
adc
xchg
repnz
ret
icebp
pop
addr16
adc
xor
retf
ret
dec
(bad)
mov
(bad)
frstor
gs
sub
stc
sbb
sbb
out
stc
in
add
into
mov
ins
shl
sub
ins
xlat
(bad)
js
fistp
cwde
mov
imul
adc
add
jb
cmp
jns
out
aad
or
in
(bad)
pop
out
sahf
outs
pushf
adc
adc
test
inc
stos
sub
popa
jge
imul
pop
jecxz
stos
fstp
mov
ror
jnp
inc
push
ins
sub
push
in
inc
adc
fnstsw
inc
push
aaa
outs
aad
sub
bound
mov
adc
fidivr
mov
inc
inc
mov
mov
dec
push
pop
and
dec
pusha
daa
lods
cmps
pop
or
loopne
out
aaa
add
fwait
or
add
aaa
mov
xlat
and
mov
arpl
cmp
loopne
jmp
pop
in
inc
in
push
inc
mov
xor
fistp
jp
jbe
mov
fadd
mov
push
inc
fld
(bad)
jbe
test
dec
xchg
sbb
sub
aad
add
lahf
xor
jnp
inc
jl
out
jge
(bad)
jmp
out
pop
das
stos
hlt
rol
xchg
scas
popa
test
int
leave
cmp
cld
ds
inc
aam
in
cmp
jle
cmp
imul
out
push
out
scas
push
xchg
out
std
mov
or
or
xchg
pop
cld
jp
cs
mov
fwait
inc
xlat
stos
pop
pop
mov
add
bound
fidiv
lds
pop
jmp
mov
(bad)
cs
mov
aam
jl
hlt
fldcw
js
lahf
aad
retf
or
clc
das
mov
fild
cmp
sahf
jp
mov
rcl
mov
setnp
mov
dec
sub
push
sbb
fnstsw
jo
test
ins
fwait
in
in
outs
mov
add
out
ret
call
gs
in
movs
test
pop
fisub
xchg
push
pop
push
cmp
sar
push
sbb
jo
lahf
cdq
cmp
(bad)
outs
and
mov
(bad)
stos
lock
inc
arpl
out
aad
mov
cmp
xchg
sub
add
sub
int3
push
xchg
jnp
add
ret
stos
aaa
add
or
jecxz
retf
xchg
jnp
popa
dec
mov
xor
mov
fs
xor
clc
xchg
dec
sbb
inc
(bad)
enter
jp
cdq
enter
loop
fisub
add
movs
inc
jge
mov
ins
movs
ror
repz
mov
push
je
mov
nop
push
and
mov
fidivr
pop
call
aaa
sub
xlat
lahf
dec
push
add
in
outs
jle
dec
cmp
retf
out
sub
cs
adc
ja
icebp
ror
dec
lds
fwait
mov
repnz
(bad)
push
addr16
add
inc
sub
(bad)
enter
sbb
sbb
retf
mov
mov
cwde
repz
jge
in
push
imul
sbb
sahf
push
add
sbb
mov
add
out
das
xchg
pushf
mov
push
pop
push
shr
xchg
xor
call
test
stos
jle
rcr
pop
enter
repz
in
retf
mov
dec
int
adc
dec
inc
in
sub
pop
mov
push
sbb
xchg
sbb
icebp
aaa
call
push
push
pushf
addr16
jo
jecxz
add
inc
mov
movs
pop
xor
(bad)
xchg
xchg
aam
jl
fisubr
jmp
and
aaa
rcr
rol
loop
and
lods
out
fdiv
ins
ss
in
or
push
mov
jecxz
mov
sub
shr
dec
cmp
sub
push
add
lahf
stc
mov
cmp
inc
fninit
add
pushf
dec
sti
sar
(bad)
sub
call
cmp
jg
stos
pop
(bad)
push
mov
jmp
fld
fimul
mov
pusha
jmp
jp
sub
inc
pop
cmps
pop
cdq
sbb
in
scas
dec
mov
add
pop
and
in
in
test
dec
push
ss
sub
xchg
jge
sti
pop
jbe
mov
hlt
or
or
sub
jecxz
adc
nop
cmps
bound
xor
stos
test
(bad)
and
mov
pop
dec
mov
call
or
stos
out
int
mov
and
ror
xor
test
mov
sqrtps
or
push
push
aad
cli
push
add
push
pop
stc
aam
inc
sub
imul
cmp
xchg
or
mov
shr
stos
lahf
in
inc
cli
enterw
dec
cmp
pop
dec
or
(bad)
inc
inc
lock
call
sub
aad
jnp
xchg
mov
(bad)
cwde
rcl
rcl
cwde
pop
shl
cdq
push
js
into
neg
lock
in
pop
pop
lahf
idiv
sbb
push
push
loope
shl
mov
test
fs
repnz
xchg
add
xor
xchg
dec
repz
enter
sbb
xchg
jo
sub
mov
cmc
adc
loop
sbb
jecxz
mov
ja
fwait
aad
aas
(bad)
ja
sar
(bad)
mov
dec
jp
dec
shr
jns
jmp
imul
dec
in
and
push
push
pop
and
dec
aas
lds
int3
imul
mov
mov
aaa
loop
loop
ss
cmc
out
dec
imul
sbb
ror
out
push
repz
das
loope
lock
inc
inc
sar
dec
(bad)
sti
jecxz
jae
xchg
xchg
es
fadd
jns
fidiv
sub
dec
retf
or
sub
addr16
shl
dec
xchg
call
mov
ror
(bad)
xor
fcomp
mov
or
mov
or
cs
inc
rcr
int
movs
aad
out
out
bound
rcl
or
ins
ja
(bad)
fbstp
inc
sahf
push
pop
xor
add
aam
push
nop
sbb
sti
les
xchg
pop
cs
add
les
fwait
push
test
and
xor
sbb
jl
es
jp
sub
inc
fstp
in
add
mov
adc
fnstcw
aad
bound
cli
xor
cmp
inc
(bad)
xor
or
or
fldenv
sti
(bad)
aad
cmps
test
xor
xor
daa
ja
pop
cmp
and
inc
cmp
dec
mov
push
dec
cmp
inc
out
sbb
gs
mov
jmp
dec
rcl
xchg
pop
daa
imul
jg
retf
mov
(bad)
adc
fidiv
(bad)
nop
cmp
mov
pushf
shl
dec
and
scas
dec
or
out
les
outs
test
je
pop
(bad)
sbb
hlt
add
cmp
cmps
lahf
(bad)
cmp
ins
fcom
fldenv
sti
ins
mov
jge
aaa
push
test
jae
jns
push
fsub
retf
xchg
test
stc
sbb
sti
sahf
adc
ret
xchg
push
je
test
(bad)
fistp
movs
repz
mov
iret
mov
fisttp
xchg
inc
(bad)
ficom
in
mov
mul
popf
xchg
fldcw
not
jb
cmps
int
(bad)
mov
gs
imul
xchg
jb
jp
or
aam
xor
movs
outs
mov
push
cmp
(bad)
ja
retf
std
js
inc
js
or
cmc
lock
mov
and
popf
bnd
int3
fs
sbb
pop
cmp
jns
pop
(bad)
push
in
adc
test
sbb
inc
mov
test
xor
jo
das
sti
cmp
sbb
fild
jmp
push
xchg
bound
mov
or
pop
(bad)
into
add
in
repz
mov
in
cmp
ss
inc
mov
pop
(bad)
cli
pop
cmps
mov
mov
add
pop
push
(bad)
jecxz
pushf
dec
push
fsubr
in
repnz
and
push
(bad)
nop
fwait
iret
imul
cmps
push
jae
cs
mov
sbb
imul
xchg
int
add
test
cmp
push
shl
inc
std
outs
adc
jmp
inc
sbb
jmp
and
xchg
xchg
and
sahf
sub
repz
in
in
shl
add
jp
mov
retf
cmp
imul
mov
xchg
scas
loop
or
cmp
imul
inc
test
pop
inc
inc
push
pop
mov
jmp
cmp
pop
mov
(bad)
mov
mov
sub
mov
jmp
mov
out
les
pop
aas
inc
pop
imul
push
inc
das
jg
xchg
pop
pushf
add
cmp
addr16
hlt
mov
sbb
mov
pop
push
std
cdq
adc
neg
pop
and
cmps
mov
in
mov
add
(bad)
fcomp
add
push
(bad)
push
push
push
cli
dec
movs
inc
inc
mov
sbb
or
cmp
shr
ror
push
lea
inc
xchg
inc
aam
dec
fld
jge
dec
scas
xor
and
dec
das
mov
enter
push
es
inc
and
lea
xor
fsubr
daa
daa
dec
outs
and
adc
gs
(bad)
sub
jae
jb
cmp
and
stos
lods
ror
scas
cmp
lods
stos
push
das
aad
bound
nop
fisubr
jge
rcr
pop
popf
pop
mov
repnz
jecxz
mov
push
xor
popf
push
repnz
mov
xchg
inc
xchg
fdivrp
loope
mov
sbb
test
or
push
out
test
int
cmps
sbb
push
sbb
jo
fcomp
pop
adc
inc
and
test
fwait
loop
dec
stos
or
push
or
add
and
or
lahf
push
push
push
test
mov
xchg
mov
aam
sub
xor
ret
fild
push
sub
xor
sbb
enter
int3
sbb
push
into
loopne
adc
repz
jge
lds
mov
and
dec
lods
mov
xchg
cwde
add
loopne
mov
out
push
les
or
leave
loop
cld
xor
push
hlt
xchg
push
pop
mov
adc
fs
rol
arpl
out
cld
push
cwde
sub
mov
(bad)
cs
adc
add
mov
cmps
sub
outs
mov
cdq
fnstcw
(bad)
shr
scas
jns
push
inc
add
adc
aaa
(bad)
test
imul
adc
mov
add
fwait
sub
sbb
cmp
popa
sbb
mov
test
out
in
pusha
add
loope
popa
ret
and
loopne
int3
sbb
mov
stc
adc
jmp
lods
jmp
aam
ret
adc
and
mov
ja
arpl
xchg
mov
in
shr
xor
mov
test
arpl
ja
leave
jl
in
jnp
cmp
jle
inc
and
mov
imul
mov
hlt
mov
shl
add
add
in
pop
movs
js
add
adc
in
pop
sub
in
and
dec
mov
movs
sbb
or
cmp
in
shl
cmp
mov
add
adc
lea
cwde
xchg
stos
mov
addr16
jl
and
das
aas
pop
fwait
je
cmp
jmp
pop
mov
ja
lods
into
call
xchg
or
int3
xor
jae
fcmove
and
mov
aad
nop
(bad)
cmp
jae
sub
xor
inc
(bad)
call
movs
call
sbb
sbb
jp
ja
jge
popf
enter
loope
jno
unpckhps
out
je
xchg
clc
ror
aaa
dec
in
into
sbb
fild
sar
sbb
sbb
gs
mov
stos
(bad)
popa
adc
pop
and
out
ficomp
and
stc
ja
data16
jge
into
sbb
imul
icebp
fisttp
mov
xor
aas
adc
(bad)
or
mov
stos
stos
adc
test
out
cmp
cld
mov
hlt
mov
(bad)
fwait
mov
add
cmps
adc
push
mov
jns
out
das
pop
popa
cmp
pop
cmp
ins
inc
xlat
jns
test
push
or
leave
rcl
(bad)
sbb
sahf
sbb
cmp
add
arpl
(bad)
out
fwait
add
mov
enter
scas
fcmovne
adc
cmp
imul
jecxz
inc
push
stos
ja
fistp
shr
pop
xor
dec
or
dec
push
fs
push
pusha
mov
repz
aam
arpl
adc
sub
je
add
aad
jmp
es
inc
xchg
int3
and
push
inc
sbb
and
xchg
sub
or
movs
int3
ins
fisttp
sbb
sub
sar
out
jne
cmp
and
cld
cli
fisttp
sub
push
dec
pop
cld
loop
movs
and
fcom
cmc
call
xchg
gs
add
mov
out
jns
and
stos
sbb
adc
jecxz
sbb
leave
mov
popf
mov
mov
push
arpl
inc
sub
xchg
cmp
or
xchg
jo
xchg
fsubr
rcr
xlat
iret
gs
clc
in
jo
mov
mov
sbb
inc
aam
mov
mov
mov
inc
test
add
mov
fwait
jnp
pop
add
and
jl
cmp
popa
loope
jge
bound
mov
dec
mov
test
add
sbb
xor
sbb
daa
ja
mov
cwde
sub
xor
call
push
out
cvtps2pi
mov
push
jg
adc
mov
push
lds
cmovns
sub
adc
lods
sub
xor
or
xlat
push
dec
repz
push
cmp
cwde
and
push
jecxz
sub
mov
pop
retf
add
xlat
cli
lods
inc
fild
xor
add
ins
mov
das
aas
dec
adc
lods
add
mov
lods
xchg
dec
dec
es
push
shr
push
mov
adc
inc
add
inc
add
xor
or
dec
mov
pop
imul
dec
jge
in
sub
pop
inc
cli
push
test
les
adc
pop
or
dec
sub
iret
inc
outs
repz
jmp
icebp
sub
retf
dec
jbe
cmp
or
sar
call
sub
adc
cmp
adc
sub
dec
das
dec
lar
adc
int3
jmp
into
adc
stos
addr16
xchg
xlat
arpl
stc
pop
xacquire
js
les
push
adc
and
push
xor
scas
xlat
cld
push
xchg
mov
push
pop
outs
sbb
jl
inc
sbb
cwde
dec
sub
xchg
push
push
mov
outs
in
stos
pop
retf
bts
rcl
mov
inc
sub
or
lods
sbb
mov
xchg
inc
stos
dec
mov
std
aam
mov
out
xor
aad
xchg
mov
cmp
mov
pop
pop
jecxz
(bad)
retf
xchg
adc
xor
mov
xchg
(bad)
aaa
int3
leave
daa
jnp
xlat
xor
dec
inc
in
das
cld
pop
repz
mov
(bad)
sub
push
dec
pop
pop
inc
push
jg
adc
dec
jg
rol
mov
and
mov
sti
mov
mov
push
nop
push
lock
retf
sub
mov
aaa
push
xor
mov
pop
jns
lds
jp
and
dec
retf
push
sub
sbb
iret
mov
or
lock
sbb
rcr
jmp
dec
jae
pop
js
add
es
inc
jno
and
mov
hlt
lea
pushf
adc
idiv
cmp
stos
mov
(bad)
out
cmp
xor
and
cmps
sub
(bad)
xchg
or
js
mov
sahf
adc
les
std
scas
adc
jmp
jmp
leave
das
push
aas
clc
or
call
sahf
lods
and
ret
pop
xchg
leave
mov
mul
push
icebp
or
and
jmp
fisttp
test
std
mov
repz
push
(bad)
or
sahf
jp
out
mov
test
out
leave
dec
leave
jo
dec
xor
mov
jmp
stos
mov
xchg
push
ret
retf
cmp
inc
mov
mov
mov
ret
jnp
lock
add
add
add
add
loope
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
in
add
repnz
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
mov
add
fiadd
add
fadd
add
mov
add
add
add
add
add
add
add
rol
add
pop
add
test
add
loopne
add
xor
add
outs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
scas
add
add
add
add
add
add
add
add
add
add
add
fld
add
outs
add
add
add
add
add
add
add
lods
add
add
add
jno
add
test
add
add
add
stos
add
add
add
or
add
movs
add
add
add
add
add
add
add
add
add
add
add
jp
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fiadd
add
jb
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
push
add
add
add
add
add
ja
add
stos
add
add
add
add
add
add
add
sub
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
retf
add
add
add
push
add
adc
add
int3
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
dec
add
add
add
pusha
add
add
add
add
add
cmps
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
mov
add
pop
add
add
add
arpl
add
xor
add
mov
add
popa
add
add
add
call
add
add
add
add
add
jbe
add
out
add
lea
add
sbb
add
cli
add
add
add
test
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
scas
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
pusha
add
add
add
pop
add
add
add
imul
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
loopne
add
sub
add
out
add
test
add
into
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
push
add
add
add
and
add
add
add
add
add
add
add
add
add
stc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
mov
add
inc
add
add
add
add
add
sahf
add
add
add
add
add
mov
add
retf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sahf
add
add
add
add
add
add
add
add
add
add
add
lea
add
rol
add
inc
add
add
add
imul
add
test
add
add
cmps
add
add
add
add
add
add
add
ret
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
leave
add
add
add
add
add
add
add
xchg
add
ins
add
add
add
add
add
add
aam
add
scas
add
add
add
add
add
push
add
add
add
scas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
mov
add
add
add
add
add
retf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xlat
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
movs
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
outs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
or
add
retf
add
add
add
add
add
test
add
fiadd
add
jb
add
lds
add
inc
add
add
add
add
push
add
add
add
ins
add
add
add
add
add
add
add
or
add
add
add
ins
add
add
add
ror
add
add
push
jae
add
pop
add
clc
or
or
mov
add
add
popa
push
out
mov
les
(bad)
hlt
push
xor
xchg
fs
xor
fdivr
jmp
rcl
mov
sub
mov
sbb
dec
jno
repz
test
ficomp
jmp
(bad)
mov
hlt
mov
imul
std
in
leave
mov
add
ins
push
arpl
psubd
or
outs
cmp
imul
addr16
add
aam
dec
std
test
movs
cli
test
xor
(bad)
leave
mov
lods
jecxz
fdiv
jne
fild
or
shr
cmp
ficom
push
xlat
enter
mov
and
mov
cdq
xchg
mov
mov
or
or
and
or
adc
stos
sbb
data16
inc
fdiv
jno
add
aad
mov
mov
movs
in
lahf
xor
mov
js
stc
add
mov
push
loope
or
ins
or
pop
arpl
hlt
push
imul
ins
sbb
xor
dec
add
in
xchg
push
ins
jnp
add
shl
adc
cmc
(bad)
fnstenv
adc
mov
mov
bound
ficom
gs
aam
pop
popa
mov
into
push
mov
je
mov
aam
movs
fisttp
xchg
fdivr
sti
hlt
(bad)
shr
imul
mov
sar
add
in
add
pop
dec
or
cmp
add
daa
adc
or
and
test
or
mov
popa
into
push
stc
ficomp
leave
fldcw
and
xlat
(bad)
pop
cmp
mov
cmp
lods
ins
mov
in
mov
mov
add
inc
aad
scas
ja
popf
adc
push
fdiv
or
test
fs
ds
or
or
push
in
dec
xchg
daa
scas
add
mov
pop
jge
xchg
(bad)
shl
add
inc
push
imul
xor
sbb
push
imul
aam
loopne
ror
int3
dec
frstor
fistp
mov
mov
aad
mov
call
xchg
shl
push
repnz
addr16
cmps
fld
mov
dec
ss
fisubr
or
scas
test
pusha
jp
inc
ret
out
pusha
fist
addr16
mov
jns
imul
and
shr
ss
push
xchg
ja
int3
add
mov
das
es
lds
or
sub
mov
cmps
call
ret
shl
sbb
ret
es
pushf
mov
ins
add
ss
jmp
addr16
jb
push
add
adc
mov
jnp
sbb
xchg
or
out
fdivr
fisttp
aam
rol
clc
mov
push
int
mov
mul
ja
outs
ja
mov
out
or
retf
pop
or
adc
sahf
gs
clc
sar
imul
ins
push
js
or
push
add
mov
cmp
cmps
not
pusha
ror
imul
push
scas
fcomp
fldenv
fild
cmp
aaa
push
scas
mov
fidivr
mov
jmp
repnz
retf
mov
cmps
mov
sar
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
mov
rol
or
es
or
imul
mov
xchg
add
in
or
(bad)
leave
and
(bad)
mov
popa
retf
dec
sub
xor
or
dec
cmp
adc
ror
loopne
inc
test
lods
adc
pop
ret
push
jne
push
push
enter
jg
fsubr
or
pop
addr16
sbb
jge
jnp
jo
pop
je
mov
cwde
push
stos
loop
mov
pusha
xchg
cmp
daa
mov
sti
movs
and
xchg
sub
ss
test
mov
sub
out
test
pop
or
ins
xor
daa
jo
sar
push
mov
dec
dec
jno
dec
sbb
(bad)
sti
push
test
xchg
cmp
cmp
lahf
popf
sti
test
sti
icebp
cmps
jns
hlt
idiv
loope
jmp
in
int
call
ja
xchg
ins
inc
xor
dec
add
scas
push
lds
stos
push
and
sbb
lds
shr
popf
mov
js
dec
push
mov
mov
mov
movs
test
ror
or
int
or
stos
xchg
js
mov
jl
nop
adc
jne
fst
outs
mov
adc
sti
shl
inc
lahf
pop
or
pop
sar
push
pushaw
fcom
xor
dec
or
push
fadd
(bad)
movs
lods
and
fs
std
daa
movs
dec
loopne
mov
cld
lods
pusha
mov
xchg
xchg
loop
das
sub
mov
das
xor
out
xchg
pop
test
popf
popf
sub
out
mov
push
add
mov
ss
cmp
repz
not
xor
loop
repz
pop
lock
ret
ds
xchg
dec
add
shr
mov
sti
fsubr
loopne
imul
mov
(bad)
dec
xor
leave
jle
lods
mov
mov
ja
or
lds
xchg
sub
mov
pop
cmp
inc
adc
inc
push
sahf
cmp
and
add
sub
sbb
cmc
push
fdiv
sub
fwait
aas
fwait
imul
(bad)
adc
pop
dec
in
xchg
or
lock
push
cli
mov
rcl
fwait
xchg
sbb
xchg
push
push
das
icebp
mov
ins
lods
clc
xlat
jo
cld
shl
sub
gs
test
out
mov
daa
xlat
add
movs
fisubr
fisubr
and
fst
loop
add
mov
leave
jle
ds
adc
jge
mov
out
stos
int3
sar
(bad)
pusha
ss
jno
neg
pop
inc
jne
sbb
xor
je
mov
ret
xor
cdq
nop
mov
lea
imul
leave
push
inc
out
dec
repnz
dec
dec
sub
or
pushf
ror
and
jnp
pusha
inc
jg
inc
add
pop
shl
xchg
push
inc
ins
xchg
xor
and
lds
dec
fwait
adc
pop
adc
xor
sbb
cmp
pop
push
pop
push
sbb
sqrtps
push
xor
popf
adc
mov
xchg
and
int
and
jmp
sub
jns
test
rcl
sub
mov
push
lods
(bad)
adc
ror
imul
jl
out
fcmovnb
retf
mov
out
lock
sbb
loop
sbb
mov
daa
stc
les
mov
lea
cmp
aad
mov
sahf
mov
lods
call
push
or
xor
ins
data16
fidivr
mov
mov
div
mov
and
mov
add
add
add
inc
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
and
add
and
add
add
add
add
add
add
add
add
add
adc
add
adc
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
and
add
adc
add
and
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
or
add
push
push
add
add
lsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jae
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
and
add
xor
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
dec
inc
add
add
add
add
or
add
jbe
xor
xor
xor
cmp
add
add
add
add
or
add
xchg
sub
add
push
je
imul
add
add
and
add
add
adc
add
and
dec
inc
add
add
add
sbb
add
and
outs
bound
add
add
add
push
lahf
mov
or
add
add
add
add
add
add
add
mov
add
add
add
push
add
add
push
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
xor
add
mov
add
add
add
adc
add
adc
add
add
add
or
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
pop
add
or
xor
push
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
or
push
add
sbb
push
add
add
add
aaa
add
add
pop
add
add
add
add
add
push
add
add
add
add
pop
add
add
add
add
add
pop
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
push
push
or
push
inc
push
or
pop
push
pop
add
add
pop
add
add
add
add
push
pop
add
add
push
pop
add
add
push
out
add
pop
add
add
pop
pop
add
add
out
add
pop
add
add
add
pop
or
or
or
and
xor
or
adc
jno
inc
add
add
add
or
lods
or
or
ror
add
add
or
adc
out
or
adc
or
adc
pop
or
or
jno
inc
push
or
xchg
or
push
add
sub
jae
sbb
or
add
add
pop
add
add
add
add
add
or
push
add
sub
or
js
mov
add
add
add
add
or
add
add
or
add
add
or
add
add
or
or
add
or
or
add
sbb
add
jae
and
mov
add
add
add
add
or
add
add
or
add
jae
and
xor
add
pop
add
add
add
add
add
les
fisttp
stc
or
inc
push
pop
push
sbb
cmps
push
push
add
add
push
push
add
add
push
pop
add
add
push
out
add
sbb
or
sub
bndldx
mov
add
adc
clts
add
out
add
ret
add
add
add
add
pop
add
add
add
adc
or
(bad)
adc
adc
add
add
adc
or
popa
adc
or
(bad)
adc
add
add
adc
or
sbb
adc
add
add
adc
dec
adc
pusha
adc
jns
pop
add
add
add
leave
adc
ficom
push
push
sbb
add
push
sbb
add
push
ds
or
push
push
sbb
add
push
ds
or
add
pop
add
add
pop
add
add
add
add
inc
push
sbb
sbb
sbb
add
add
add
sbb
or
sbb
mov
add
add
add
sbb
or
bndstx
or
add
sbb
add
add
sbb
or
add
sbb
or
add
pop
add
add
sbb
or
add
sbb
or
add
sbb
add
sbb
add
sbb
add
sbb
and
gs
xor
pop
add
add
add
add
push
mov
add
add
mov
add
add
add
pop
pop
add
add
and
add
add
and
add
add
and
add
add
and
add
add
and
or
mov
add
and
(bad)
add
es
push
or
inc
es
add
add
cmp
or
out
mov
add
add
add
sub
or
fild
jae
or
std
sub
or
sbb
cmp
or
xor
jae
or
push
sub
or
push
cmp
or
xchg
cmp
or
mov
add
add
sub
or
imul
cvtpi2ps
add
sub
or
inc
sub
sub
or
jae
cmp
add
add
mov
add
add
add
add
add
adc
call
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
or
add
add
and
add
add
or
add
adc
add
add
add
push
add
dec
add
add
add
pop
add
dec
add
add
add
pop
add
dec
add
add
add
add
or
daa
add
add
add
add
or
xor
add
adc
pop
or
add
add
add
add
push
or
dec
add
add
add
adc
scas
ud1
lea
adc
inc
add
add
add
adc
add
adc
add
add
adc
add
adc
add
add
adc
add
adc
and
add
add
add
add
adc
push
adc
add
add
add
inc
adc
add
and
push
add
add
add
or
pop
add
add
add
adc
pop
adc
dec
add
add
add
fld
js
mov
mov
adc
jnp
mov
add
add
xchg
adc
jnp
mov
add
push
or
dec
add
add
add
push
or
dec
add
add
add
pop
or
dec
add
add
add
pop
or
jge
mov
aad
add
adc
daa
pop
or
jge
mov
fld
add
adc
dec
pop
or
je
mov
loopne
add
adc
pop
pop
or
jge
pop
loop
add
add
popw
or
add
add
add
add
pop
or
add
add
add
add
pop
or
add
add
add
add
pop
or
add
add
add
add
or
add
add
add
add
add
add
add
sbb
add
xchg
add
add
sbb
add
add
add
add
add
add
add
add
or
dec
add
add
add
sbb
add
popf
add
add
add
add
sbb
add
add
adc
scas
sbb
add
add
adc
int
or
dec
add
adc
clc
sbb
add
movs
add
add
sbb
add
add
adc
adc
or
dec
add
adc
sbb
or
les
movs
add
add
add
add
sbb
add
add
add
add
sbb
add
add
add
add
sbb
add
cmps
add
add
add
or
dec
add
add
add
add
and
add
add
add
add
adc
enter
pop
add
add
add
adc
jmp
add
add
adc
neg
add
enter
add
adc
inc
sbb
rol
mov
add
add
imul
add
adc
jb
or
dec
add
add
add
add
add
add
add
add
add
add
add
add
and
add
sbb
sti
add
add
add
add
sbb
sti
add
add
add
add
push
or
dec
add
add
add
add
add
pop
or
dec
add
add
add
add
add
pop
or
dec
add
add
add
add
add
or
dec
add
add
add
and
add
push
add
mov
and
add
add
add
add
add
and
add
pop
add
add
and
add
pop
add
add
or
dec
add
mov
add
and
add
imul
add
add
add
and
add
jo
mov
add
and
add
jne
retf
add
add
and
add
mov
fiadd
add
add
inc
and
add
movs
add
add
add
add
or
inc
add
add
add
add
rol
add
add
add
add
dec
add
add
add
add
add
add
add
add
adc
xchg
and
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
sbb
add
add
add
and
add
sbb
add
add
and
add
and
inc
add
add
add
add
xor
add
add
add
add
add
and
add
add
add
add
add
call
add
add
add
(bad)
and
add
add
add
add
loop
or
imul
add
add
in
and
add
dec
add
add
add
clc
and
add
push
add
add
adc
adc
add
jbe
add
add
jmp
or
imul
add
adc
adc
add
mov
add
add
add
imul
add
adc
xchg
add
mov
add
add
and
add
rol
add
and
add
and
leave
add
add
and
leave
add
add
add
add
add
add
add
add
add
or
dec
add
add
add
add
add
add
imul
add
adc
jl
or
dec
add
add
add
and
(bad)
add
add
add
add
add
add
add
add
add
and
fild
pop
add
add
add
and
fld
sbb
add
add
loopne
or
imul
add
adc
jmp
add
add
add
mul
in
add
add
add
add
or
imul
add
adc
pop
or
dec
add
add
add
add
add
add
add
add
add
add
add
imul
add
add
jnp
add
imul
add
adc
xchg
add
dec
add
add
add
lsl
mov
add
add
add
add
add
add
add
pop
add
mov
add
adc
fisub
add
pop
add
add
add
add
add
add
add
add
daa
or
add
and
rol
add
add
or
dec
add
add
add
add
add
add
aam
mov
daa
or
add
and
(bad)
add
add
add
or
dec
add
fadd
add
add
or
sbb
and
add
add
or
sbb
sub
jmp
add
adc
lea
or
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
daa
add
add
add
frstor
or
dec
add
add
add
daa
or
in
add
add
add
add
or
dec
add
push
add
adc
add
fld
pop
add
adc
add
and
add
fld
pop
add
adc
add
aaa
sub
add
add
push
add
inc
sub
add
add
push
add
push
sub
add
add
push
add
popa
sub
add
add
push
add
jae
add
fld
pop
add
adc
add
jle
add
fld
pop
add
adc
add
mov
add
fld
pop
add
adc
add
cdq
sub
add
add
push
add
pop
add
add
add
add
add
add
xor
in
add
xor
in
add
adc
in
add
xor
in
add
add
adc
in
add
adc
in
add
add
add
add
add
pop
add
add
add
add
push
pop
adc
in
add
add
paddd
adc
cld
lar
adc
or
add
add
add
jge
mov
or
adc
adc
adc
adc
adc
adc
add
or
add
add
or
in
add
add
jge
mov
or
adc
adc
adc
adc
adc
adc
add
or
add
mov
adc
add
or
add
add
adc
add
or
add
add
jge
pop
or
add
add
add
or
add
pop
or
add
add
in
add
add
pop
add
jge
inc
or
add
out
or
add
add
add
pop
add
lahf
adc
adc
adc
adc
adc
add
add
rcl
mov
adc
adc
adc
adc
adc
adc
adc
add
add
jge
add
push
sub
mov
add
jge
mov
or
adc
adc
adc
add
or
add
add
or
add
mov
adc
adc
add
jbe
mov
adc
adc
add
or
add
add
adc
add
add
pop
add
jge
sub
add
test
sub
add
in
add
or
add
add
jge
out
or
add
add
or
add
add
sbb
out
or
add
add
adc
adc
or
or
add
adc
adc
adc
add
add
pop
add
cmc
adc
add
add
test
add
push
add
add
add
jge
mov
add
add
add
in
add
or
add
add
in
add
push
sub
dec
or
add
add
in
add
xor
in
add
or
add
add
in
add
or
add
add
add
add
or
add
add
add
or
add
add
in
add
or
add
add
or
add
add
add
or
add
add
or
add
add
push
add
add
add
add
push
add
add
push
add
add
add
add
in
add
or
add
add
add
or
add
add
in
add
add
in
add
or
add
add
in
add
add
pop
add
in
add
or
add
add
in
add
or
add
add
or
in
add
add
in
add
add
in
add
pop
or
add
mov
or
adc
add
add
jge
mov
or
add
add
or
add
add
sbb
mov
or
or
add
add
push
add
in
add
or
add
add
in
add
add
jge
mov
or
adc
adc
add
(bad)
add
add
sgdtd
in
add
add
in
add
or
add
add
or
add
add
in
add
add
in
add
or
add
add
add
add
or
add
add
in
add
add
in
add
add
in
add
or
add
add
in
add
add
in
add
add
in
add
sbb
in
add
add
jge
mov
or
add
add
jge
mov
or
adc
adc
adc
adc
add
add
jge
mov
add
add
in
add
or
add
add
in
add
or
add
add
add
in
add
or
add
add
pop
add
jge
pop
or
add
add
add
mov
adc
adc
adc
adc
add
add
push
adc
adc
or
or
add
add
add
add
add
add
in
add
adc
add
add
or
add
add
in
add
add
add
pop
add
jge
mov
add
test
mov
add
jge
add
add
in
add
add
add
test
add
push
sub
mov
add
jge
mov
add
add
pop
add
in
add
or
add
add
mov
adc
adc
add
or
add
add
add
push
sub
mov
add
jge
mov
or
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
push
adc
dec
or
jge
dec
or
test
dec
or
sbb
dec
or
sub
xor
inc
adc
push
or
or
push
adc
push
xor
or
adc
or
nop
adc
push
sbb
lods
adc
push
xor
rcl
or
retf
or
rcl
dec
or
fst
dec
or
out
dec
or
in
add
add
in
add
or
add
add
add
jge
mov
add
lahf
adc
adc
adc
add
pop
add
rcl
or
add
add
or
add
adc
add
test
mov
add
sbb
mov
add
sub
add
add
mov
add
retf
or
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
or
in
add
or
pop
add
in
add
or
in
add
adc
add
add
adc
in
add
adc
add
add
add
in
add
or
add
add
add
or
pop
add
in
add
or
pop
add
in
add
adc
in
add
add
in
add
add
or
add
add
pop
add
jge
pop
or
add
mov
add
add
push
sub
mov
add
in
add
or
add
mov
or
add
or
add
add
add
in
add
add
jge
mov
add
add
jge
mov
or
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
or
add
adc
add
or
add
add
add
add
or
in
add
add
jge
mov
or
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
or
add
add
jge
out
or
add
add
out
or
push
push
mov
add
adc
adc
into
adc
cmp
adc
sub
mov
add
in
add
or
add
add
jge
mov
or
add
or
add
mov
adc
adc
add
or
add
add
adc
add
mov
adc
adc
adc
adc
add
in
add
or
add
add
add
add
add
adc
add
add
adc
sub
mov
add
jge
mov
or
adc
adc
adc
adc
add
or
add
add
or
add
add
or
add
add
pop
add
jge
pop
or
add
add
add
add
pop
add
jge
inc
adc
xor
add
test
pop
or
add
mov
adc
add
or
add
add
or
add
add
add
pop
add
in
add
or
add
mov
add
adc
add
add
or
add
add
add
in
add
add
jge
mov
add
add
jge
mov
or
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
or
add
add
jge
out
or
add
add
add
mov
mov
adc
adc
adc
add
or
add
add
or
add
add
pop
add
in
add
add
add
adc
enter
pop
add
in
add
adc
sub
mov
add
jge
mov
or
adc
adc
add
or
add
add
jge
out
or
add
add
or
add
add
in
add
adc
mov
adc
adc
adc
adc
adc
add
add
nop
adc
add
add
or
add
add
adc
enter
in
add
push
add
add
add
add
push
push
add
add
push
add
add
push
add
add
add
push
add
in
add
or
add
add
or
add
add
add
in
add
add
in
add
add
add
pop
add
in
add
add
in
add
add
pop
add
jge
add
add
test
add
add
in
add
add
in
add
add
in
add
add
in
add
mov
push
push
push
mov
add
push
adc
imul
cmp
push
push
sub
mov
add
add
or
add
add
adc
add
add
push
push
push
mov
add
test
push
cmp
push
push
push
push
mov
add
pop
push
adc
not
push
cmp
pop
push
add
sbb
not
push
push
push
mov
add
sbb
pop
add
jge
add
push
add
sbb
add
push
sub
xor
add
sbb
dec
adc
sbb
push
adc
sbb
jbe
add
push
add
nop
adc
sbb
lahf
adc
sbb
push
push
mov
add
push
adc
inc
sbb
jge
inc
sbb
test
inc
sbb
sbb
inc
sbb
sub
xor
inc
adc
push
or
sbb
push
adc
push
xor
sbb
adc
sbb
nop
adc
push
sbb
lods
adc
push
sub
mov
add
jge
mov
or
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
and
and
and
and
and
and
and
and
and
and
sbb
in
add
add
jge
xor
or
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
in
add
add
add
add
pop
add
in
add
add
pop
add
in
add
pop
add
in
add
or
add
add
pop
add
in
add
or
add
add
in
add
or
add
add
add
jge
mov
or
sbb
in
add
adc
inc
sbb
jge
inc
sbb
test
inc
sbb
sbb
inc
sbb
sub
add
add
add
in
add
add
in
add
sbb
add
add
or
add
add
add
push
mov
add
sbb
pop
add
jge
in
push
add
sbb
in
push
sub
xor
add
add
sbb
add
add
or
add
add
sbb
add
add
add
pop
add
jge
popa
or
dec
or
in
add
sbb
adc
sub
cmp
sbb
add
add
add
pop
add
jge
popa
or
mov
add
jge
mov
add
or
add
add
or
add
add
add
or
push
push
mov
add
or
push
push
push
mov
add
sbb
adc
adc
adc
adc
adc
pushw
add
in
add
sbb
add
add
in
add
add
or
add
add
sbb
mov
add
push
adc
arpl
mov
add
add
in
add
or
add
add
add
jge
mov
add
in
add
add
pop
add
in
add
or
add
add
add
in
add
or
add
add
add
in
add
repnz
add
add
in
add
add
in
add
add
in
add
add
test
add
add
pop
add
pop
add
in
add
add
sbb
add
add
in
add
push
push
push
mov
add
add
push
mov
add
add
jge
cmps
and
add
add
sbb
push
sbb
cmps
and
add
add
add
add
or
add
add
jge
out
or
add
add
add
or
add
add
or
add
add
add
in
add
add
add
in
add
add
in
add
add
in
add
or
add
add
jge
out
or
add
add
add
add
add
in
add
add
in
add
add
in
add
or
add
add
in
add
or
add
add
jge
out
or
add
add
or
add
add
in
add
or
add
add
add
in
add
and
add
add
add
in
add
sbb
out
or
add
add
add
in
add
add
add
xor
pop
add
in
add
or
add
add
add
in
add
sbb
mov
add
pop
add
in
add
or
add
add
in
add
or
add
add
or
add
out
or
add
add
add
pop
and
add
add
adc
in
add
adc
pop
add
in
add
adc
in
add
adc
in
add
adc
pop
add
jge
jne
adc
test
jne
adc
sbb
jne
adc
in
add
adc
in
add
adc
in
add
test
adc
in
add
add
pop
add
jge
imul
add
add
add
add
adc
xchg
add
add
add
add
add
sbb
add
add
add
sbb
add
adc
stos
add
and
add
adc
stos
add
and
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
xchg
sub
add
add
add
xchg
add
add
add
add
xchg
add
add
xchg
add
add
and
add
add
add
add
add
add
sbb
add
adc
xchg
add
mov
add
add
adc
xchg
add
aam
add
add
adc
xchg
add
hlt
and
add
add
or
add
adc
xchg
add
xor
add
add
push
sbb
add
add
add
or
add
add
add
push
or
add
and
adc
stos
add
daa
add
add
add
stos
add
add
add
inc
add
add
daa
add
add
inc
add
add
daa
add
add
add
add
add
add
add
mov
add
add
add
sbb
add
add
add
inc
add
add
add
add
inc
add
add
add
add
add
add
add
mov
add
add
adc
stos
add
sub
add
add
add
add
sub
add
add
sbb
add
sub
add
add
or
add
add
add
add
sub
add
add
or
add
add
add
push
or
or
add
add
push
or
or
add
add
sub
add
add
or
or
adc
add
add
or
or
sbb
mov
add
or
or
sbb
aam
add
add
push
add
add
add
add
push
add
add
add
add
push
add
add
add
add
add
add
add
push
add
or
das
add
add
add
sub
add
add
stos
add
add
add
add
add
je
test
add
add
sbb
add
xor
add
add
sbb
add
add
add
adc
stos
add
xor
add
add
pop
xor
xor
add
add
add
add
add
add
add
add
add
push
add
add
xor
add
add
add
add
push
add
adc
xor
add
stos
add
cmp
sar
add
add
adc
push
add
cmp
add
add
or
pop
cmp
push
cmp
add
add
or
add
add
add
adc
sahf
xstore-rng
cmps
pop
cmp
movs
cmp
add
add
sbb
add
cmp
add
add
sbb
add
cmp
add
add
add
adc
cmp
sub
add
add
push
or
adc
or
add
add
or
adc
or
add
add
or
add
add
or
xor
add
add
add
cmp
add
add
add
cmp
add
add
inc
add
xchg
sub
add
add
add
lods
cmp
add
add
add
les
add
add
dec
add
cmp
add
add
add
lock
add
add
add
add
add
add
xchg
sub
add
xchg
sbb
add
xchg
sub
add
add
or
jl
add
add
xchg
sub
add
add
add
mov
add
add
sar
add
add
(bad)
or
adc
push
add
aas
add
add
(bad)
or
adc
push
add
inc
add
add
(bad)
or
arpl
push
add
inc
add
add
(bad)
or
or
push
add
add
add
(bad)
or
or
push
inc
add
add
(bad)
or
pop
or
jo
add
add
mov
adc
add
movs
inc
add
add
mov
adc
push
add
inc
add
add
mov
adc
push
add
inc
add
add
mov
adc
push
add
add
add
mov
adc
pop
add
add
add
mov
adc
add
add
add
add
inc
add
add
mov
adc
pop
add
add
add
add
pop
add
inc
add
add
add
pop
add
add
add
add
pop
add
add
pop
add
inc
add
add
add
pop
add
add
add
add
pop
add
add
add
add
in
add
add
add
pop
add
add
add
add
pop
add
add
add
add
pop
add
add
add
add
pop
add
add
add
fmul
add
add
add
int3
dec
add
add
add
pop
add
add
pop
add
push
add
add
add
pop
add
add
add
add
test
add
add
add
pop
add
add
add
add
pop
add
push
add
add
add
pop
add
add
add
add
fcom
add
xchg
add
add
push
add
add
xchg
add
adc
add
sbb
add
add
xchg
add
adc
add
cmp
add
add
add
pop
push
add
add
xchg
add
add
xchg
sub
add
xchg
sub
add
les
daa
adc
in
add
add
xchg
xchg
add
clc
push
add
add
xchg
add
add
or
add
add
(bad)
or
adc
imul
pop
add
add
(bad)
or
adc
imul
pop
add
add
(bad)
or
arpl
imul
pop
add
add
(bad)
or
or
imul
pop
add
add
(bad)
or
or
sbb
add
(bad)
or
pop
or
mov
add
add
add
mov
adc
outs
add
pop
add
add
mov
adc
outs
add
pop
add
add
mov
adc
add
add
add
mov
adc
jb
enter
add
mov
adc
jne
js
add
add
mov
adc
add
xchg
pop
add
add
add
jbe
add
add
add
add
jbe
inc
pop
add
add
xchg
xchg
add
pop
pop
add
add
les
test
add
pop
add
add
mov
adc
add
sbb
add
add
add
fs
add
add
add
ja
mov
add
add
add
ja
cwde
pop
add
add
add
ja
in
pop
add
add
add
ja
sbb
add
add
add
test
add
add
add
or
add
add
add
and
add
add
add
jo
add
add
add
jl
mov
add
add
add
adc
add
add
add
jle
cmp
add
add
add
jle
cmp
add
add
add
add
add
add
test
ins
jno
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
xchg
add
add
add
add
add
xchg
add
add
add
add
add
xchg
add
add
add
add
add
xchg
add
add
add
add
add
xchg
add
add
add
xchg
sbb
add
add
add
xchg
sub
add
test
add
add
add
add
add
or
add
add
or
add
xchg
add
add
add
or
add
add
add
add
add
or
add
mov
add
add
add
add
add
add
add
or
add
add
add
add
or
mov
add
add
add
or
mov
add
add
add
add
add
add
add
add
or
add
add
or
add
add
add
or
add
add
add
add
add
add
add
or
add
mov
add
add
add
or
stos
add
mov
add
add
add
or
stos
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
or
add
add
add
or
scas
add
lea
add
add
add
or
mov
movs
mov
add
add
add
add
add
add
add
xchg
xchg
add
lock
add
add
add
add
xchg
sub
add
add
add
xchg
xchg
add
dec
pop
add
add
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
sub
add
add
add
xchg
sub
add
add
add
add
nop
add
add
xchg
sub
add
nop
add
add
xchg
sub
add
add
add
add
cli
add
add
add
or
add
add
add
add
xchg
add
add
add
inc
cmp
add
add
jo
add
add
xchg
je
add
xchg
add
add
add
add
add
add
add
mov
add
add
add
add
add
pop
add
add
add
add
add
or
pop
xchg
add
add
xchg
sub
add
xchg
add
push
or
les
add
or
or
lock
add
add
xchg
add
or
add
add
add
mov
pop
adc
xchg
add
add
xchg
repz
add
add
add
add
add
cwde
add
add
out
stos
add
add
add
cwde
add
add
add
adc
xor
xchg
sub
add
add
add
mov
add
add
add
add
or
add
call
sub
add
fwait
add
add
xchg
sub
add
add
add
add
pushf
add
add
xchg
cmp
pop
or
add
add
add
or
add
add
or
add
xchg
(bad)
sbb
pop
add
popf
add
add
xchg
cmp
test
add
add
xchg
ins
sbb
popf
add
add
xchg
jg
test
add
add
xchg
(bad)
sbb
popf
add
add
xchg
sub
add
popf
add
add
mov
add
add
add
add
or
add
add
add
or
add
xchg
jg
pop
or
add
sahf
add
add
xchg
(bad)
sbb
daa
add
lahf
add
add
sbb
sub
sbb
add
add
xchg
add
add
add
add
xchg
add
or
add
add
xchg
add
add
mov
xchg
add
add
mov
xchg
add
add
mov
sbb
add
add
clc
mov
xchg
add
add
test
sub
add
add
push
inc
add
add
add
add
pop
cmps
add
add
test
stos
add
add
add
inc
add
add
add
inc
add
cmps
add
add
test
stos
add
add
cmps
add
add
sbb
add
inc
add
add
add
out
mov
add
test
add
add
add
add
add
add
or
arpl
dec
add
out
xchg
pop
add
pushf
test
add
add
or
add
out
jl
arpl
dec
add
out
test
add
test
add
add
push
dec
add
test
add
add
add
adc
out
lods
push
stos
or
dec
test
out
data16
push
add
add
add
or
add
add
add
or
add
add
add
or
add
mov
out
test
add
add
add
mov
add
add
(bad)
or
sbb
push
add
test
(bad)
or
sbb
add
test
(bad)
or
add
stos
add
add
mov
sbb
add
xor
(bad)
or
ins
push
push
add
add
add
or
add
add
or
dec
push
push
add
stos
add
add
mov
sbb
add
adc
add
add
mov
sbb
pop
add
stos
add
add
mov
push
jns
pop
add
add
add
xchg
sub
add
mov
adc
add
add
add
add
lods
add
add
xchg
sub
add
add
add
out
lods
push
stos
or
sub
xchg
xchg
add
cmp
add
add
xchg
je
(bad)
or
nop
mov
add
add
add
mov
add
add
out
xchg
pop
add
les
out
cdq
push
pop
add
fdiv
out
jl
arpl
jno
call
add
or
arpl
jno
clc
mov
add
add
add
add
mov
add
add
add
and
add
add
test
sub
add
add
add
xchg
sub
add
add
add
xchg
sub
add
add
add
add
mov
add
add
or
pushf
mov
add
add
emms
add
add
vmwrite
dec
mov
add
add
add
mov
add
add
add
mov
add
add
(bad)
add
mov
add
add
jle
inc
mov
add
add
or
add
add
add
jle
fdiv
(bad)
or
adc
jle
clc
mov
add
add
or
adc
jle
or
or
arpl
jle
sbb
or
or
jle
xor
add
add
(bad)
or
or
push
mov
add
add
or
pop
or
jo
add
add
mov
adc
add
mov
add
add
mov
adc
add
add
mov
adc
add
mov
add
add
add
adc
test
cld
mov
add
add
add
sbb
jbe
add
add
add
add
add
add
add
adc
add
mov
add
add
or
add
add
or
add
add
add
adc
add
mov
add
add
add
add
add
xchg
add
mov
xchg
sub
add
mov
xchg
sub
add
xchg
sub
add
mov
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pushf
add
mov
test
sbb
loopne
lahf
add
mov
test
je
xchg
push
add
add
add
movs
add
rol
add
(bad)
or
adc
movs
add
rol
add
(bad)
or
adc
movs
add
rol
add
(bad)
or
arpl
movs
add
add
add
(bad)
or
or
movs
add
add
add
or
or
add
(bad)
or
pop
or
add
mov
adc
movs
add
mov
adc
cmps
add
rol
add
mov
adc
test
clc
rol
add
mov
adc
add
ret
add
mov
sbb
cmp
add
add
mov
sbb
cmpxchg
pop
ret
add
mov
adc
add
add
add
add
add
add
add
add
add
add
add
adc
mov
add
add
add
add
add
xchg
sub
add
ret
add
add
xchg
sub
add
ret
add
add
xchg
je
je
mov
add
add
add
add
add
add
add
mov
adc
add
add
les
add
add
add
add
add
add
add
add
add
add
add
add
add
test
sub
add
add
add
xchg
sub
add
xchg
sub
add
add
add
add
add
or
add
mov
or
add
add
add
xchg
add
add
add
mov
add
adc
mov
add
mov
adc
add
add
or
add
int3
add
add
add
retf
add
add
add
add
retf
add
(bad)
or
adc
retf
add
(bad)
or
adc
retf
add
(bad)
or
arpl
retf
add
(bad)
or
or
retf
add
iret
add
add
(bad)
or
or
add
iret
add
add
(bad)
or
pop
or
add
add
add
mov
adc
add
add
add
add
mov
adc
int3
add
add
add
add
add
add
add
add
add
mov
adc
rol
movs
rol
add
add
add
sbb
psrlq
rcl
add
add
add
es
add
add
add
test
sub
add
add
add
xchg
sub
add
rol
add
add
add
add
add
add
add
add
add
add
fld
jl
add
add
xchg
sub
add
add
add
add
xchg
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
sub
add
test
sub
add
rol
add
add
in
add
add
add
test
sub
add
xchg
cmp
popa
adc
add
xchg
dec
push
popa
adc
add
rol
add
add
add
add
add
add
xchg
add
adc
repz
add
add
xchg
add
adc
rol
add
add
adc
add
aam
add
add
adc
add
add
add
add
add
xchg
jl
arpl
cli
add
aam
add
add
add
add
add
add
xchg
add
aad
add
add
add
add
add
add
add
aad
add
add
add
add
(bad)
add
add
xchg
mov
loopne
std
add
add
add
adc
add
xchg
mov
add
(bad)
add
add
xchg
mov
xor
xlat
add
add
xchg
jl
pop
add
add
add
add
xchg
les
adc
xlat
add
add
xchg
mov
add
xlat
add
add
xchg
aam
adc
fadd
add
add
add
add
add
add
add
fadd
add
add
add
lock
add
add
add
push
fld
add
add
add
test
add
add
add
add
add
add
adc
add
add
add
adc
add
fild
add
add
add
add
add
add
add
add
add
fild
add
add
add
or
add
loopne
add
add
les
daa
adc
adc
add
add
xchg
add
inc
adc
mov
add
add
xchg
add
adc
or
add
add
push
add
add
add
xchg
xchg
add
test
add
add
xchg
je
pop
add
add
add
add
add
xchg
repz
push
add
loope
add
add
adc
add
loope
add
add
adc
add
add
add
adc
add
xchg
add
adc
add
jecxz
add
add
add
mov
add
add
xchg
stos
add
adc
add
add
adc
add
xchg
stos
add
add
add
in
add
add
or
add
add
add
add
add
add
xchg
mov
add
add
add
xchg
cmp
arpl
pop
add
add
add
add
add
add
add
xchg
unpcklps
sbb
test
add
add
xchg
aam
pop
add
add
add
add
add
xchg
stos
add
sbb
nop
out
add
add
adc
add
add
add
add
add
add
add
sbb
xchg
jmp
xchg
repz
add
add
add
add
sbb
sbb
xor
add
add
xchg
sub
add
add
add
xchg
sub
add
add
add
push
push
sbb
add
add
adc
add
add
adc
add
add
add
mov
pop
lea
pop
add
add
add
add
xchg
stos
add
and
call
add
adc
add
jmp
add
add
add
add
in
add
add
xchg
add
add
add
add
add
xchg
xchg
add
push
in
add
add
xchg
add
add
add
add
add
add
add
add
add
add
xchg
cmp
adc
in
add
add
xchg
ins
sbb
add
fsubr
add
add
xchg
jg
adc
in
add
add
xchg
(bad)
sbb
add
add
add
add
add
in
add
add
xchg
je
rol
add
add
add
or
add
add
xchg
add
or
add
add
xchg
jl
adc
in
add
add
xchg
xchg
add
mov
add
add
xchg
add
or
add
in
add
add
xchg
xchg
add
dec
out
add
add
xchg
stos
add
lock
add
xchg
stos
add
lock
add
xchg
stos
add
add
xchg
add
add
lock
add
xchg
add
adc
add
xchg
sub
add
repnz
add
xchg
sbb
add
add
add
add
add
add
add
add
xchg
je
adc
repnz
add
xchg
xchg
add
in
add
add
xchg
add
add
clc
repnz
add
xchg
cmp
pop
add
add
add
add
add
add
add
add
add
add
xchg
(bad)
sbb
add
add
add
xchg
xchg
add
pop
repz
add
xchg
add
or
add
xchg
xchg
add
mov
add
or
add
add
xchg
jl
pop
add
add
add
add
add
add
add
add
xchg
xchg
add
ins
hlt
add
add
xchg
add
or
add
add
add
add
xchg
(bad)
sbb
add
add
hlt
add
add
xchg
jl
adc
hlt
add
add
xchg
(bad)
push
loopne
cmp
and
add
add
xchg
mov
add
xchg
mov
loopne
cmp
jo
add
add
xchg
les
adc
cmc
add
add
xchg
in
loopne
cmp
add
add
add
add
add
add
xchg
mov
loopne
add
add
add
add
add
add
add
xchg
mov
je
aas
add
add
add
add
mov
add
add
xchg
in
je
inc
add
out
jp
push
push
inc
add
xchg
stos
add
inc
add
add
add
xchg
je
dec
push
inc
add
cli
add
add
mov
pop
pop
add
cmp
add
add
mov
pop
lea
inc
add
add
add
xchg
add
add
add
add
sar
add
add
adc
pusha
std
add
add
xchg
add
add
add
add
adc
mov
add
add
xchg
add
add
add
add
xchg
add
add
add
adc
add
add
add
adc
pushf
add
add
add
adc
xor
add
add
xchg
add
adc
dec
add
add
add
adc
push
add
adc
mov
add
adc
or
add
add
xchg
add
add
add
add
xchg
add
add
xchg
sub
add
xchg
sub
add
add
add
add
add
in
add
add
xchg
add
add
add
add
add
(bad)
or
adc
jns
sbb
add
add
(bad)
or
adc
jns
sub
add
add
(bad)
or
arpl
jns
cmp
add
add
(bad)
or
or
jns
pop
add
add
add
or
or
jo
add
add
(bad)
or
pop
or
nop
add
add
add
add
test
add
add
mov
adc
jp
les
add
add
mov
adc
jl
loopne
add
add
mov
adc
jge
cld
add
add
add
add
adc
add
add
add
add
add
adc
add
add
mov
adc
add
push
add
add
mov
adc
add
add
xchg
stos
add
push
add
add
xchg
xchg
add
jo
add
add
xchg
je
pop
add
add
add
or
add
add
or
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
or
add
add
add
add
add
add
mov
add
add
add
mov
add
add
add
add
add
mov
or
add
add
xchg
sub
add
or
add
add
add
add
add
add
out
je
inc
adc
add
add
add
add
add
add
add
xchg
sub
add
add
add
xchg
sub
add
or
add
add
add
add
add
add
add
add
or
adc
xchg
add
or
add
add
or
adc
xchg
add
add
add
or
arpl
xchg
add
add
add
or
or
xchg
add
add
add
(bad)
or
or
add
add
or
pop
or
add
add
add
add
or
add
add
add
add
or
add
add
add
adc
xchg
add
mov
adc
add
mov
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
adc
call
add
add
add
add
sahf
add
adc
add
add
or
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
add
add
adc
add
add
add
xchg
stos
add
add
add
add
adc
add
xchg
je
jl
movs
add
xchg
sbb
jl
cmps
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
adc
add
add
add
xchg
sub
add
add
add
xchg
stos
add
add
add
lods
add
add
add
xchg
stos
add
scas
add
sbb
add
add
adc
add
sbb
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
xchg
cmp
pop
add
add
xchg
stos
add
add
add
xchg
xchg
add
sbb
add
add
xchg
stos
add
add
add
add
add
add
add
or
add
add
add
add
and
add
add
add
add
and
add
add
adc
add
add
add
add
and
add
add
add
add
and
add
add
or
add
and
add
add
or
add
add
add
xchg
je
es
add
and
add
add
add
add
add
add
add
add
add
add
xchg
cmp
arpl
lds
xchg
and
add
add
push
lds
lods
and
add
add
or
add
and
add
add
add
add
add
add
add
add
add
adc
add
xchg
stos
add
retf
add
add
or
add
add
add
xchg
sbb
dec
push
iret
add
add
add
or
add
add
add
add
xchg
sbb
add
add
add
xchg
sub
add
add
adc
add
add
add
or
add
add
add
xchg
je
arpl
fld
inc
sub
add
add
or
add
sub
add
add
add
add
xchg
je
es
add
xchg
xchg
add
shr
add
add
xchg
xchg
add
in
add
add
xchg
xchg
add
clc
sub
add
add
adc
add
add
add
xchg
je
je
fld
in
sub
add
add
add
add
add
add
add
fiadd
inc
add
add
add
fiadd
test
add
add
add
fiadd
movs
das
add
add
add
fiadd
movs
xor
add
add
adc
add
add
add
adc
add
add
add
add
jecxz
push
cmp
add
add
add
add
cmp
add
add
adc
add
add
add
xchg
stos
add
add
add
add
add
add
add
add
add
xchg
je
es
add
add
add
adc
add
add
xchg
je
dec
adc
add
add
xchg
stos
add
out
add
aas
add
add
xchg
stos
add
adc
add
add
xchg
je
(bad)
or
add
add
add
xchg
add
add
add
add
xchg
add
add
inc
add
add
xchg
add
adc
add
add
xchg
sub
add
add
add
xchg
stos
add
add
add
add
add
add
add
add
add
add
inc
add
add
xchg
stos
add
cli
add
add
add
xchg
sbb
es
add
inc
add
add
xchg
repz
add
add
add
add
xchg
stos
add
cld
add
add
add
adc
add
add
xchg
je
xchg
adc
add
add
add
inc
adc
add
add
xchg
sub
add
add
add
xchg
sub
add
add
add
add
add
add
add
add
add
xchg
je
je
add
loopne
add
add
xchg
sbb
je
add
pusha
dec
add
add
xchg
stos
add
add
nop
dec
add
add
xchg
xchg
add
movs
dec
add
add
xchg
je
add
add
dec
add
add
xchg
sbb
outs
add
add
dec
add
add
xchg
repz
add
add
add
xchg
xchg
add
cmp
add
add
xchg
stos
add
add
add
add
xchg
stos
add
or
pop
push
add
add
xchg
sub
add
add
add
add
mov
add
add
add
enter
add
xchg
sbb
add
add
add
xchg
stos
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
or
add
add
or
add
pop
add
add
xchg
sbb
dec
push
adc
or
add
add
xchg
repz
adc
cmp
add
add
adc
add
add
add
or
add
pop
add
add
xchg
les
arpl
sbb
adc
add
add
xchg
aam
arpl
sbb
dec
pop
add
add
xchg
lods
and
sbb
test
add
xchg
xchg
add
les
add
xchg
xchg
add
fcomp
add
xchg
cmp
pop
or
add
pop
add
add
xchg
cmp
pop
add
add
xchg
sub
add
pop
add
add
xchg
sbb
add
add
add
xchg
stos
add
adc
add
add
xchg
stos
add
adc
add
add
xchg
je
in
adc
add
add
xchg
sbb
add
popa
add
add
xchg
sub
add
popa
add
add
add
sbb
cmp
add
xchg
stos
add
push
sbb
pop
add
add
xchg
sub
add
add
or
add
add
add
xchg
je
test
pop
add
add
add
xchg
stos
add
add
add
add
add
xchg
je
sbb
and
nop
add
add
xchg
stos
add
and
aam
add
add
xchg
xchg
add
call
add
push
and
add
add
add
add
add
add
xchg
sub
add
add
add
xchg
xchg
add
add
add
xchg
add
add
add
add
add
xchg
xchg
add
mov
add
add
add
add
add
push
sub
mov
add
push
sub
fsub
add
add
push
sub
in
add
add
xchg
add
push
sub
and
add
add
xchg
xchg
add
cmp
add
add
push
sub
dec
push
xchg
cmp
arpl
sub
pusha
push
xchg
ins
sbb
push
xchg
jg
arpl
sub
add
add
add
add
add
push
cs
push
xchg
stos
add
push
xor
loopne
add
add
xchg
stos
add
push
aaa
add
add
add
xchg
je
ficom
cmp
mov
add
add
push
aas
add
xchg
stos
add
pop
inc
add
add
add
add
dec
add
add
push
add
add
add
add
push
add
add
add
add
push
add
add
push
add
jae
add
add
pop
push
add
add
add
xchg
add
add
add
add
add
add
add
add
add
mov
pop
sbb
pop
add
add
add
add
add
add
add
add
add
add
pop
cmps
pop
pop
add
add
add
add
add
pusha
add
add
add
add
add
popa
add
add
add
add
add
arpl
add
add
add
mov
add
add
add
add
or
add
add
add
add
or
add
add
add
les
add
add
add
loopne
add
add
xchg
sbb
add
je
add
add
add
dec
je
add
add
add
nop
je
add
add
add
movs
je
add
add
add
mov
add
add
push
push
xor
add
add
add
add
xchg
add
or
ins
add
add
add
xchg
add
or
pop
ins
add
xchg
jl
cdq
or
mov
add
pop
outs
add
add
add
sbb
jo
push
js
add
add
add
cmp
add
xchg
or
add
xchg
or
add
add
sbb
fdivr
add
add
sbb
or
add
add
xchg
add
sbb
jns
add
add
sbb
sar
add
xchg
add
or
push
jns
in
jns
add
add
sbb
inc
jp
add
add
add
jp
add
add
sbb
jo
add
add
sbb
add
jg
push
jnp
add
add
pop
add
jl
add
add
add
add
xchg
cmp
arpl
test
int3
jl
add
add
add
add
xchg
jg
arpl
test
sbb
add
add
xchg
(bad)
sbb
jge
add
add
push
xchg
js
add
add
or
push
jb
xchg
mov
add
add
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
xchg
jl
pop
add
add
xchg
(bad)
push
je
mov
dec
jg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
xchg
add
or
add
add
xchg
xchg
add
test
xchg
jl
pop
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
sbb
add
add
sbb
add
add
sbb
add
add
or
add
add
push
xchg
add
add
add
add
xchg
in
je
xchg
add
or
pop
pop
push
xchg
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
cwde
add
add
add
pop
adc
mov
add
add
sbb
add
add
push
cdq
add
xchg
sub
add
mov
add
add
sbb
add
add
or
add
add
out
jg
nop
push
pushf
add
add
add
out
(bad)
sbb
lea
add
add
sbb
add
add
sbb
add
add
or
add
add
xchg
(bad)
push
xchg
or
add
add
xchg
jl
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
je
lods
pop
movs
add
add
add
add
pop
cmps
add
test
sub
add
xchg
add
add
xchg
sub
add
xchg
add
add
xchg
sub
add
xchg
add
add
xchg
sub
add
add
add
add
or
lods
add
add
add
add
add
lods
add
add
add
add
add
mov
or
add
add
xchg
sub
add
xchg
add
add
out
xchg
add
cmp
add
add
xchg
add
sbb
add
add
add
out
je
push
mov
mov
add
add
or
or
add
add
or
add
add
push
mov
fcom
xchg
sub
add
xchg
add
add
out
xchg
add
cmp
add
add
out
je
push
mov
in
xchg
add
add
out
sbb
(bad)
or
add
add
sbb
add
xchg
add
add
xchg
jl
test
add
add
xchg
(bad)
push
xchg
or
add
add
xchg
mov
add
add
add
xchg
mov
xchg
or
add
add
xchg
les
test
add
add
xchg
in
xchg
or
add
add
or
mov
add
add
sbb
add
cwde
add
add
xchg
sub
add
add
add
out
xchg
add
mov
out
je
push
mov
add
add
add
or
or
add
add
add
xchg
add
adc
rol
call
jl
test
add
add
xchg
(bad)
push
xchg
or
add
add
xchg
mov
add
call
mov
xchg
or
add
add
xchg
les
test
add
add
xchg
in
xchg
or
add
add
mov
add
add
add
add
xchg
sub
add
fwait
add
add
xchg
stos
add
or
add
add
add
xchg
stos
add
add
add
add
add
add
add
xchg
stos
add
pushf
add
add
add
retf
add
xchg
add
add
add
add
xchg
cmp
pop
add
add
add
add
add
add
add
add
add
popf
add
add
xchg
stos
add
adc
add
add
xchg
stos
add
sbb
add
lahf
add
add
xchg
stos
add
sbb
add
add
add
xchg
je
es
add
add
add
xchg
add
add
add
add
add
or
add
add
add
xchg
stos
add
(bad)
add
add
add
add
mov
xchg
sub
add
add
mov
xchg
stos
add
fld
adc
xchg
je
push
adc
add
add
xchg
stos
add
fild
int3
mov
xchg
add
add
add
mov
xchg
unpcklps
fild
jl
add
add
xchg
sub
add
add
mov
xchg
xor
je
fild
add
add
add
add
fadd
mov
add
add
add
fld
sub
add
add
add
add
out
test
add
xchg
sub
add
add
sbb
add
add
xchg
xchg
add
loopne
add
add
xchg
xchg
add
hlt
movs
add
add
xchg
add
push
loop
or
xchg
sub
add
xchg
xchg
add
cmp
xchg
xchg
add
dec
movs
add
add
xchg
xchg
add
pusha
movs
add
add
xchg
xchg
add
je
add
add
xchg
xchg
add
mov
xchg
xchg
add
pushf
movs
add
add
add
add
add
add
movs
add
add
add
add
aam
add
add
add
add
clc
movs
add
add
add
add
add
add
add
xchg
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
sub
add
add
add
xchg
sub
add
add
sbb
add
add
xchg
sub
add
add
add
sbb
add
add
add
add
repz
test
add
add
or
add
test
add
add
push
hlt
add
test
add
add
add
add
add
add
or
test
test
les
daa
adc
movs
test
xchg
sbb
es
add
test
xchg
add
or
stos
add
add
xchg
add
or
stos
add
add
xchg
jl
arpl
clc
add
stos
add
add
xchg
(bad)
push
xor
stos
add
add
xchg
mov
add
stos
add
add
xchg
les
arpl
stc
add
add
add
xchg
jg
adc
stos
add
add
xchg
mov
add
add
add
xchg
jg
pop
add
add
add
add
or
add
add
add
sbb
add
add
out
mov
dec
or
add
add
xchg
sbb
mov
lods
add
add
xchg
sbb
lods
pop
cld
add
xchg
sbb
les
add
add
xchg
sbb
fcomp
add
add
xchg
sbb
ficomp
add
add
xchg
sbb
or
add
mov
add
add
push
add
mov
xchg
jg
nop
push
add
add
add
push
add
add
add
push
push
add
mov
xchg
(bad)
sbb
mov
xchg
jl
pop
add
add
mov
xchg
(bad)
push
je
pop
add
mov
xchg
aam
arpl
or
mov
xchg
jg
stos
push
or
mov
xchg
(bad)
sbb
mov
xchg
sbb
pop
push
or
mov
xchg
sbb
fs
or
mov
xchg
repz
add
clc
mov
xchg
add
add
add
add
add
xchg
unpcklps
add
sbb
xchg
unpcklps
add
mov
add
push
or
add
add
push
push
add
rol
add
xchg
sbb
mov
adc
rol
add
xchg
sub
add
add
rol
add
xchg
sub
add
and
add
add
xchg
sbb
xchg
push
push
add
ret
add
xchg
sbb
cdq
push
sbb
ret
add
add
xchg
sbb
movs
push
sbb
ret
add
add
xchg
sbb
jo
pop
add
les
add
add
add
add
les
add
add
add
add
les
add
add
pop
and
lds
add
add
add
add
lds
add
add
push
and
in
add
add
add
and
add
add
push
es
mov
add
add
daa
add
mov
add
add
sub
mov
add
add
sub
leave
add
add
add
sub
int
add
add
add
add
int
add
add
push
sub
into
add
add
add
sub
ins
into
add
add
add
sub
add
add
push
sub
add
add
pop
xor
rol
add
add
pop
xor
add
add
pop
ss
rol
add
add
pop
cmp
rol
add
add
push
aas
add
rol
add
add
or
or
add
add
add
inc
add
rol
add
add
pop
inc
add
aad
add
add
pop
inc
add
(bad)
add
add
add
inc
add
xlat
add
add
add
dec
add
fadd
add
add
or
js
add
add
add
dec
add
fadd
add
add
add
fiadd
add
add
add
fild
add
add
add
fild
add
add
add
add
fild
add
add
add
loopne
add
add
add
add
je
add
add
add
dec
add
loopne
add
add
pop
dec
add
loopne
add
add
pop
dec
add
loope
add
add
pop
dec
add
loope
add
add
add
sub
add
add
add
push
add
out
add
add
and
xor
add
add
add
push
add
jmp
xchg
add
or
jmp
xchg
add
or
pop
add
add
add
add
add
add
add
add
mov
pop
mov
pop
add
add
add
add
add
add
add
add
add
add
pop
sub
add
jmp
xchg
sub
add
jmp
out
scas
and
jmp
sub
add
jmp
sub
add
jmp
add
add
add
dec
jmp
add
add
push
ins
add
jmp
add
add
and
fsubr
add
add
xchg
sub
add
in
add
add
xchg
sub
add
in
add
add
xchg
sub
add
in
add
add
xchg
xchg
add
mov
add
add
xchg
cmp
cs
add
add
xchg
xchg
add
in
add
add
xchg
xchg
add
clc
in
add
add
xchg
xchg
add
or
add
add
xchg
add
or
and
add
add
xchg
cmp
pop
or
xor
add
add
xchg
ins
sbb
js
dec
in
add
add
xchg
jg
pop
or
pop
in
add
add
xchg
(bad)
sbb
jns
jo
add
add
xchg
stos
add
and
lods
in
add
add
xchg
sub
add
in
add
add
xchg
sub
add
in
add
add
xchg
xchg
add
add
add
add
xchg
xchg
add
sbb
add
add
xchg
xchg
add
inc
out
add
add
xchg
stos
add
add
out
add
add
add
jl
mov
add
add
out
add
add
xchg
or
add
out
add
add
xchg
sub
add
out
add
add
out
xchg
or
add
out
add
add
out
mov
add
out
add
add
out
mov
add
out
add
add
xchg
sub
add
out
add
add
mov
adc
add
mov
add
or
adc
jg
int3
out
add
add
mov
adc
add
in
add
add
(bad)
or
arpl
jg
add
add
add
(bad)
or
adc
jg
adc
add
add
(bad)
or
or
jg
and
add
add
(bad)
or
or
cmp
add
add
(bad)
or
pop
or
dec
lock
add
mov
adc
add
lock
add
mov
adc
add
add
add
mov
adc
test
lock
add
mov
adc
xchg
lock
add
xchg
sub
add
lock
add
mov
adc
mov
icebp
add
add
mov
adc
add
add
mov
adc
add
repnz
add
mov
adc
pop
repnz
add
mov
adc
xchg
add
repnz
add
mov
adc
xchg
add
repnz
add
mov
adc
add
add
add
or
or
add
add
or
pop
or
add
add
or
or
xchg
add
repz
add
(bad)
or
arpl
xchg
add
repz
add
(bad)
or
adc
xchg
add
repz
add
(bad)
or
adc
xchg
add
repz
add
(bad)
or
arpl
xchg
add
add
add
add
add
xchg
add
add
add
add
add
xchg
add
repz
add
xchg
sub
add
repz
add
out
stos
add
and
add
add
add
add
add
add
add
add
add
add
or
fwait
add
add
add
add
add
fwait
add
add
add
add
add
fwait
add
add
add
add
add
fwait
add
add
add
add
add
pushf
add
add
add
add
add
popf
add
hlt
add
add
test
sub
add
add
add
add
add
sahf
add
add
add
add
add
sahf
add
add
add
add
add
sahf
add
add
add
add
add
lahf
add
add
add
add
add
mov
add
add
or
add
hlt
add
add
xchg
sub
add
hlt
add
add
xchg
sub
add
hlt
add
add
mov
add
push
cmc
add
add
mov
or
and
add
add
add
adc
mov
add
add
add
adc
and
add
mov
adc
add
add
add
and
add
add
add
add
add
and
add
add
and
add
add
add
and
add
add
add
or
and
add
add
add
adc
test
aam
add
add
mov
adc
and
add
add
add
adc
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
xchg
(bad)
sbb
lods
add
stc
add
add
xchg
sub
add
stc
add
add
xchg
xchg
add
adc
add
add
xchg
add
or
add
add
or
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
adc
mov
aam
add
add
(bad)
or
adc
mov
lock
add
add
(bad)
or
arpl
mov
or
add
add
(bad)
or
or
mov
and
add
add
(bad)
or
or
add
add
or
pop
or
add
add
or
arpl
mov
je
add
add
mov
adc
add
add
add
add
add
sti
add
add
mov
adc
mov
(bad)
sti
add
add
mov
adc
add
sti
add
add
mov
adc
mov
add
add
add
add
add
add
mov
add
add
pop
mov
add
add
and
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
push
retf
add
add
add
add
add
add
add
add
push
int3
add
add
add
add
or
add
add
add
add
push
into
add
add
add
add
push
iret
add
add
add
add
and
add
add
add
add
or
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
je
cs
add
add
add
(bad)
add
or
add
add
add
add
or
add
add
add
add
or
add
add
or
add
or
add
add
or
or
xlat
add
or
mov
adc
xlat
add
or
add
xlat
add
or
add
fiadd
or
add
fld
lar
add
mov
adc
add
adc
add
add
or
add
adc
add
add
add
es
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
lock
adc
add
add
add
add
adc
add
add
add
add
adc
add
add
add
add
adc
add
add
add
push
repnz
adc
add
add
add
add
push
add
add
xchg
jg
adc
push
add
add
xchg
(bad)
sbb
add
add
push
add
add
xchg
add
or
pop
cmc
add
pop
add
add
xchg
add
adc
and
add
pop
add
add
xchg
add
or
stc
add
sbb
add
add
or
add
sbb
add
add
or
add
sbb
add
add
add
add
sbb
add
add
add
add
sbb
add
add
add
add
sbb
add
add
add
add
sbb
add
add
push
inc
sbb
add
add
push
inc
sbb
add
add
add
add
add
add
add
add
add
add
add
xchg
je
jo
add
add
xchg
je
add
add
add
add
in
add
add
xchg
add
and
add
add
pop
pop
add
add
mov
adc
or
add
add
or
add
mov
add
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
add
int
add
add
adc
add
add
fimul
add
add
int
add
add
adc
add
add
int
add
add
adc
add
add
fimul
add
add
in
add
add
add
add
in
add
add
add
add
in
add
add
add
add
jge
add
add
test
add
add
in
add
add
add
add
jge
add
add
test
add
add
in
add
add
add
add
jge
add
add
test
add
add
in
add
add
add
add
jge
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jge
add
add
in
add
add
add
add
add
add
add
and
add
add
imul
jo
add
add
in
add
add
add
add
jge
add
add
in
add
add
add
add
jge
add
add
test
add
add
in
add
add
add
add
in
add
add
add
add
add
add
add
in
add
add
add
add
in
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
add
or
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jge
add
add
test
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
or
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
jge
add
add
in
add
add
add
add
jge
add
add
in
add
add
add
add
jge
add
add
in
add
add
add
add
in
add
add
add
add
jge
add
add
test
add
add
in
add
add
add
add
jge
add
add
test
add
add
add
add
add
add
add
add
jge
add
add
in
add
add
add
add
add
add
add
add
add
add
jge
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
jge
add
add
in
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
jge
add
add
in
add
add
add
add
add
add
add
add
add
add
jge
add
add
in
add
add
add
add
add
add
add
add
add
add
jge
add
add
in
add
add
add
add
add
add
add
in
add
add
add
add
in
add
add
add
add
imul
jo
add
add
imul
jo
add
add
rcl
add
test
add
add
aam
add
add
test
add
add
mov
add
add
imul
jo
add
add
imul
jo
add
add
rcl
add
test
add
add
aam
add
add
test
add
add
mov
add
add
imul
jo
add
add
imul
jo
add
add
rcl
add
test
add
add
aam
add
add
test
add
add
mov
add
add
imul
jo
add
add
imul
jo
add
add
rcl
add
test
add
add
aam
add
add
test
add
add
mov
add
add
imul
jo
add
add
imul
jo
add
add
rcl
add
test
add
add
aam
add
add
test
add
add
mov
add
add
imul
jo
add
add
imul
jo
add
add
rcl
add
test
add
add
aam
add
add
in
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
in
add
add
add
add
in
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
in
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jge
add
add
in
add
add
add
add
jge
add
add
in
add
add
add
add
jge
add
add
test
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jge
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
jge
add
add
test
add
add
in
add
add
add
add
jge
add
add
in
add
add
add
add
jge
add
add
test
add
add
add
add
add
add
add
add
add
add
jge
add
add
test
add
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
sub
add
add
xor
add
add
add
dec
sbb
add
add
add
add
add
add
sbb
add
add
add
add
add
sub
add
add
xor
add
add
add
dec
sbb
add
add
add
or
add
add
or
add
add
add
add
add
add
add
add
add
add
jge
add
add
or
add
add
add
add
add
add
add
add
add
add
add
jge
add
add
test
add
add
sub
add
add
xor
add
add
add
dec
sbb
add
add
add
sbb
add
add
add
add
add
in
add
add
add
add
in
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
in
add
add
add
add
jge
add
add
in
add
add
add
add
add
add
or
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
jge
add
add
in
add
add
add
add
add
add
add
add
add
add
jge
add
add
in
add
add
add
add
add
add
add
jge
add
add
test
add
add
fimul
add
add
call
adc
add
add
or
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
pop
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
in
add
add
add
add
in
add
add
add
add
add
add
add
test
add
add
mov
add
add
or
add
add
push
add
add
or
add
add
push
add
add
rcl
add
add
add
pop
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jge
add
add
test
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
in
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
in
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
in
add
add
add
add
jge
add
add
test
add
add
in
add
add
add
add
jge
add
add
in
add
add
add
add
jge
add
add
in
add
add
add
add
jge
add
add
test
add
add
add
add
add
add
add
add
jge
add
add
test
add
add
add
add
add
add
add
add
jge
add
add
test
add
add
in
add
add
add
add
jge
add
add
test
add
add
in
add
add
add
add
jge
add
add
test
add
add
add
add
add
add
add
add
jge
add
add
test
add
add
in
add
add
add
add
jge
add
add
test
add
add
in
add
add
add
add
jge
add
add
test
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
or
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
or
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
jge
add
add
in
add
add
add
add
jge
add
add
in
add
add
add
add
add
add
add
add
add
add
jge
add
add
in
add
add
add
add
in
add
add
add
add
in
add
add
add
add
jge
add
add
in
add
add
add
add
jge
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
jge
add
add
in
add
add
add
add
jge
add
add
in
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
jge
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
jge
add
add
in
add
add
add
add
add
add
add
jge
add
add
in
add
add
add
add
add
add
add
in
add
add
add
add
jge
add
add
in
add
add
add
add
jge
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
in
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
jge
add
add
test
add
add
in
add
add
add
add
jge
add
add
test
add
add
in
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
jge
add
add
test
add
add
in
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jge
add
add
in
add
add
add
add
in
add
add
add
add
add
add
add
jge
add
add
in
add
add
add
add
add
add
add
add
add
add
jge
add
add
in
add
add
add
add
add
add
add
jge
add
add
in
add
add
add
add
add
add
add
jge
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jge
add
add
test
add
add
add
add
add
add
add
add
jge
add
add
test
add
add
in
add
add
add
add
jge
add
add
test
add
add
add
add
add
add
add
add
jge
add
add
in
add
add
add
add
jge
add
add
test
add
add
add
add
add
add
add
add
add
add
jge
add
add
test
add
add
add
add
add
add
add
add
in
add
add
add
add
in
add
add
add
add
in
add
add
add
add
in
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
and
add
add
add
pop
add
add
test
add
add
aam
add
add
in
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
jge
add
add
in
add
add
add
add
in
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
in
add
add
add
add
jge
add
add
test
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
in
add
add
add
add
in
add
add
add
add
add
add
add
in
add
add
add
add
jge
add
add
in
add
add
add
add
add
add
add
add
add
add
jge
add
add
in
add
add
add
add
add
add
add
jge
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jge
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jge
add
add
test
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
jge
add
add
test
add
add
in
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
sbb
add
add
rcl
add
test
add
add
aam
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jge
add
add
in
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
jge
add
add
in
add
add
add
add
in
add
add
add
add
add
add
add
in
add
add
add
add
in
add
add
add
add
jge
add
add
in
add
add
add
add
jge
add
add
test
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jge
add
add
in
add
add
add
add
jge
add
add
test
add
add
add
add
add
add
add
add
add
add
add
jge
add
add
test
add
add
in
add
add
add
add
jge
add
add
test
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
in
add
add
add
add
jge
add
add
in
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
jge
add
add
test
add
add
in
add
add
add
add
add
add
add
in
add
add
add
add
in
add
add
add
add
in
add
add
add
add
test
add
add
mov
add
add
imul
jo
add
add
imul
jo
add
add
rcl
add
test
add
add
aam
add
add
nop
add
add
xchg
add
add
in
add
add
add
add
in
add
add
add
add
jge
add
add
in
add
add
add
add
in
add
add
add
add
jge
add
add
in
add
add
add
add
in
add
add
add
add
in
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
jge
add
add
mov
add
add
add
add
add
add
or
add
add
add
add
or
add
add
add
add
add
add
in
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
jge
add
add
test
add
add
in
add
add
add
add
jge
add
add
in
add
add
add
add
jge
add
add
test
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
jge
add
add
in
add
add
add
add
jge
add
add
in
add
add
add
add
jge
add
add
mov
add
add
add
add
add
add
add
jge
add
add
test
add
add
mov
add
add
aam
add
add
call
daa
add
add
aam
add
add
call
daa
add
add
rcl
add
add
add
pop
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
jge
sbb
pusha
add
add
sbb
pusha
add
add
xor
icebp
add
add
add
add
add
add
add
add
add
add
add
add
mov
inc
add
add
mov
add
js
ins
add
outs
add
js
loope
js
int
jl
test
add
or
xchg
sbb
pop
mov
add
add
add
add
add
add
add
add
add
add
add
adc
push
add
push
add
or
and
pop
add
sub
add
add
or
inc
add
or
dec
add
or
push
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
mov
add
mov
sub
add
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
dec
add
dec
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
test
stc
add
push
lea
xor
cld
push
xchg
add
add
add
add
add
pop
lahf
add
dec
pop
stos
add
addr16
mov
push
add
adc
add
pop
adc
stc
add
add
add
add
add
pop
adc
add
add
sub
add
add
add
or
add
or
or
or
cdq
add
add
or
add
add
add
or
add
add
or
mov
add
add
adc
or
add
add
add
add
add
add
or
mov
add
add
push
or
pop
sbb
mov
push
add
add
add
je
sub
add
add
add
add
add
add
jns
test
add
add
add
aam
sbb
add
jns
hlt
or
jns
add
xor
or
or
add
sub
xor
or
or
push
sbb
imul
add
add
add
add
add
add
add
or
cmp
(bad)
or
dec
add
or
push
add
add
mov
pop
add
mov
popa
add
push
sub
mov
push
leave
add
pop
push
leave
add
or
push
imul
imul
jno
mov
mov
or
push
xchg
add
or
prefetchw
or
sub
add
add
add
fild
pop
add
loope
sbb
test
xchg
or
mov
add
leave
add
pop
or
leave
add
or
dec
add
(bad)
or
sub
add
or
sub
and
rol
xor
sub
loope
push
push
sbb
loope
(bad)
or
add
pusha
push
dec
push
push
add
das
pop
dec
add
xor
loope
jg
rol
add
add
add
inc
pop
mov
mov
add
push
inc
pop
add
sub
add
imul
add
jno
or
sub
add
sub
add
add
adc
sbb
push
adc
add
add
sub
add
add
add
add
push
repz
sub
add
add
add
add
push
pop
add
adc
pop
add
mov
leave
add
pop
push
mov
add
add
add
or
or
sub
add
sub
add
adc
mov
and
or
or
jp
loop
xchg
add
add
add
adc
inc
adc
cdq
add
add
adc
mov
add
add
add
add
cmps
adc
mov
inc
or
add
dec
or
(bad)
adc
adc
mov
fld
sub
add
adc
add
dec
push
icebp
add
dec
push
and
push
add
add
pop
or
add
movs
or
add
add
add
add
add
sub
add
push
(bad)
or
add
add
add
sbb
or
add
in
or
add
add
add
add
add
or
add
add
add
add
add
or
rol
add
add
rcr
or
je
and
push
xor
pop
add
add
or
sub
sbb
add
add
sbb
inc
add
sbb
inc
add
sbb
dec
add
add
add
ror
or
xor
test
mov
mov
mov
loopne
xchg
add
add
sbb
push
inc
add
sbb
popa
add
sbb
push
leave
add
add
cwde
pop
cmp
add
add
sub
add
add
sbb
add
jp
push
push
jns
sub
add
sbb
icebp
add
add
add
add
add
add
xlat
push
leave
add
fimul
mov
push
test
add
add
in
push
mov
push
icebp
add
add
add
popa
add
add
sbb
xchg
add
add
add
or
add
add
add
add
or
push
inc
add
sbb
sub
add
add
or
fld
pop
push
adc
add
add
add
add
pop
dec
push
xor
push
pop
pop
push
xor
sbb
stc
adc
add
pop
cld
adc
cmp
arpl
push
add
pop
add
jmp
or
add
pop
loopne
stc
add
adc
add
add
xchg
pop
xor
or
leave
add
cmp
dec
add
add
add
dec
push
leave
add
add
pop
pop
adc
add
pop
sbb
mov
pop
dec
add
mov
inc
add
and
and
or
add
and
push
inc
add
add
add
and
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
add
add
shl
push
inc
add
add
sub
add
add
cmp
sbb
adc
add
add
add
and
dec
add
and
push
leave
add
and
dec
add
and
dec
add
and
xor
dec
and
leave
add
adc
add
add
add
add
pop
aam
cmp
add
and
pop
leave
add
loopne
xor
cmp
inc
add
inc
add
adc
int
clc
sbb
jecxz
pop
add
repz
sbb
sbb
sbb
pop
and
or
sub
adc
sub
add
and
sbb
inc
and
or
test
test
test
test
test
loopne
and
sub
add
add
and
mov
xchg
and
mov
add
add
add
add
mov
leave
add
add
add
add
add
es
push
and
add
pop
add
add
add
stc
add
add
jns
popa
add
pop
add
add
add
sub
add
mov
add
jp
xor
dec
add
push
add
mov
and
and
add
pop
adc
daa
adc
add
add
add
add
add
add
add
add
add
add
add
leave
add
rol
fld
loope
sub
add
icebp
add
stc
add
or
push
add
or
add
(bad)
or
add
or
add
ror
or
add
add
add
(bad)
or
add
or
add
loopne
or
je
in
or
js
jmp
add
add
add
nop
add
or
add
cwde
add
or
add
cmp
adc
or
cmp
sbb
or
inc
add
add
or
add
jmp
or
add
daa
or
add
int3
or
add
fmul
or
cwde
add
or
add
mov
add
rol
push
or
call
add
add
add
add
add
add
or
add
add
invd
add
add
add
or
add
add
add
and
add
or
add
mov
add
add
invd
add
invd
add
into
invd
add
invd
add
sub
or
jl
fmul
or
add
invd
add
mov
out
or
and
adc
add
jmp
adc
add
adc
add
push
invd
add
invd
add
push
invd
add
invd
add
les
or
ins
add
adc
add
(bad)
or
add
or
add
leave
adc
add
invd
add
add
mov
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
adc
add
add
adc
add
add
adc
add
mov
adc
aam
fmul
or
fadd
fadd
loopne
ror
or
in
push
invd
add
add
in
add
lock
hlt
add
clc
add
cld
add
add
jmp
adc
add
push
xchg
adc
add
cdq
adc
add
push
into
adc
add
ror
or
xor
sub
or
xor
and
push
leave
invd
add
push
invd
add
(bad)
or
add
or
add
sbb
push
jge
or
push
push
adc
push
push
sbb
push
jge
or
pop
push
adc
pusha
push
das
or
add
adc
add
les
add
adc
add
ror
or
je
sub
or
js
and
push
ror
or
pushf
push
sub
or
mov
add
add
sub
pop
xor
xchg
adc
add
pop
aaa
adc
(bad)
push
or
sbb
cmp
or
sbb
inc
adc
fisttp
or
nop
pop
ror
or
xchg
pop
sub
or
cwde
pop
and
pop
sub
or
mov
add
test
(bad)
or
add
mov
push
invd
add
mov
add
rol
adc
add
ror
or
sbb
sub
or
sbb
and
or
or
add
loopne
or
sub
das
or
add
or
add
or
or
add
or
add
add
or
or
ror
or
add
sub
or
add
and
or
or
add
or
invd
add
fmul
or
sbb
mov
or
sbb
sti
pop
or
and
ror
or
sub
sub
or
sub
add
or
sbb
add
prefetcht0
add
or
or
cmp
sbb
or
inc
or
sbb
add
sbb
add
sub
or
dec
or
or
sbb
add
sbb
add
cmp
or
pusha
or
add
add
or
add
push
invd
add
push
or
jo
leave
invd
add
invd
add
ror
or
jl
fisttp
or
or
adc
add
mov
dec
sbb
add
nop
or
or
xchg
or
or
or
pushf
or
or
mov
add
test
fisttp
or
lods
or
or
mov
mov
or
xchg
adc
add
ror
push
or
les
(bad)
push
or
enter
or
int3
or
sbb
add
or
sbb
add
or
sbb
add
or
adc
add
or
adc
add
or
add
or
add
or
or
or
sbb
add
or
sbb
add
or
or
or
add
inc
sbb
add
or
or
or
dec
sbb
add
or
or
adc
jg
or
sbb
test
or
sbb
test
or
and
mov
or
and
mov
or
xor
ror
or
xor
sub
or
cmp
and
or
or
add
loopne
or
inc
or
or
add
(bad)
or
add
or
add
push
invd
add
invd
add
and
or
pop
or
leave
adc
add
sbb
add
aas
sbb
add
or
add
(bad)
push
or
je
cmp
or
js
inc
adc
aaa
adc
sti
pop
add
adc
sbb
sbb
sbb
sbb
sbb
add
or
or
add
sub
or
adc
and
or
or
add
or
or
add
das
or
add
or
or
sbb
sbb
sbb
add
ror
or
jl
sub
or
test
ror
or
mov
sub
or
mov
and
or
or
add
cwde
or
or
add
add
ror
adc
add
sub
or
sub
or
or
add
sub
or
cmp
add
add
add
or
and
add
or
and
add
or
and
add
or
and
add
or
and
add
or
and
add
or
and
add
or
or
adc
sbb
mov
add
add
add
add
or
sub
xor
cmp
inc
or
dec
or
adc
sub
inc
add
add
add
sbb
sub
inc
add
add
add
retf
add
add
add
adc
sub
pusha
add
add
add
adc
sub
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
sub
inc
add
add
add
xchg
add
add
retf
add
add
add
sbb
sub
dec
add
add
add
add
sbb
sub
arpl
retf
add
add
add
sbb
sub
imul
add
add
add
add
add
add
add
add
add
pop
mov
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
sub
inc
add
add
add
adc
sub
pusha
add
add
add
ret
add
add
adc
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
retf
add
add
add
sbb
sub
pusha
add
add
add
retf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
sub
inc
add
add
add
retf
add
add
add
ret
add
add
sbb
sub
pusha
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
and
inc
add
inc
add
pusha
add
pusha
add
add
add
mov
add
add
or
sub
rol
add
loopne
adc
sub
loopne
sbb
sub
loopne
retf
add
add
add
push
adc
sub
add
retf
add
add
add
add
push
adc
sub
inc
push
retf
add
add
add
adc
sub
pusha
push
sbb
sub
pusha
push
adc
sub
pusha
push
retf
add
add
add
add
add
add
add
add
push
sbb
sub
rol
add
add
push
adc
sub
loopne
sbb
sub
loopne
sbb
sub
loopne
adc
sub
add
adc
sub
add
sbb
sub
add
sbb
sub
and
sbb
sub
and
adc
sub
and
sbb
sub
inc
pop
sbb
sub
inc
pop
adc
sub
inc
pop
adc
sub
pusha
pop
sbb
sub
pusha
pop
adc
sub
add
add
add
add
add
add
pop
sbb
sub
loopne
adc
sub
add
sbb
sub
add
adc
sub
and
adc
sub
and
sbb
sub
inc
or
add
add
sbb
sub
pusha
or
add
add
adc
sub
or
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
sbb
sub
inc
or
add
add
sbb
sub
pusha
or
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
sbb
sub
inc
or
add
add
adc
sub
pusha
or
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
adc
sub
inc
or
add
add
sbb
sub
pusha
or
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
sbb
sub
inc
or
add
add
adc
sub
pusha
or
add
add
push
or
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
or
add
or
add
and
and
inc
or
inc
or
pusha
or
pusha
or
or
or
mov
add
add
or
ror
or
loopne
sbb
sub
loopne
adc
sub
add
sbb
sub
add
adc
sub
and
adc
sub
and
sbb
sub
inc
push
adc
sub
inc
push
sbb
sub
pusha
push
adc
sub
pusha
push
sbb
sub
or
add
add
add
add
add
push
sbb
sub
ror
add
add
push
sbb
sub
loopne
adc
sub
add
adc
sub
add
sbb
sub
add
jae
jns
and
adc
sub
and
sbb
sub
inc
movlps
sub
inc
bndstx
sub
inc
rcpps
sub
pusha
movlps
sub
pusha
bndstx
sub
or
add
add
add
add
add
movlps
sub
ror
add
add
movlps
sub
loopne
sbb
sub
add
sbb
sub
add
adc
sub
and
adc
sub
and
sbb
sub
inc
adc
add
add
sbb
sub
pusha
adc
add
add
sbb
sub
adc
add
add
add
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
sbb
sub
inc
adc
add
add
adc
sub
pusha
adc
add
add
add
add
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
adc
add
add
adc
sub
pusha
adc
add
add
adc
sub
adc
add
add
add
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
sub
inc
adc
add
add
adc
sub
pusha
adc
add
add
add
add
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
sbb
sub
inc
adc
add
add
adc
sub
pusha
adc
add
add
add
add
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
and
and
inc
adc
inc
adc
pusha
adc
pusha
adc
adc
adc
mov
add
add
adc
rcl
adc
loopne
sbb
sub
add
sbb
sub
add
adc
sub
and
sbb
sub
and
adc
sub
inc
push
sbb
sub
inc
push
adc
sub
pusha
push
adc
sub
pusha
push
sbb
sub
adc
add
add
add
add
add
push
adc
sub
rcl
add
add
push
adc
sub
loopne
sbb
sub
add
adc
sub
add
sbb
sub
and
sbb
sub
and
adc
sub
inc
pop
adc
sub
inc
pop
sbb
sub
pusha
pop
adc
sub
pusha
pop
sbb
sub
adc
add
add
add
add
add
pop
adc
sub
rcl
add
add
pop
adc
sub
loopne
sbb
sub
add
adc
sub
add
sbb
sub
and
sbb
sub
and
adc
sub
inc
sbb
add
add
sbb
sub
pusha
sbb
add
add
adc
sub
sbb
add
add
add
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
adc
sub
inc
sbb
add
add
sbb
sub
pusha
sbb
add
add
add
add
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
adc
sub
inc
sbb
add
add
sbb
sub
pusha
sbb
add
add
add
add
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
adc
sub
inc
sbb
add
add
adc
sub
pusha
sbb
add
add
add
add
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
sub
inc
sbb
add
add
sbb
sub
pusha
sbb
add
add
add
add
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
and
and
inc
sbb
inc
sbb
pusha
sbb
pusha
sbb
sbb
sbb
mov
add
add
sbb
rcr
sbb
loopne
sbb
sub
add
sbb
sub
add
adc
sub
and
adc
sub
and
sbb
sub
inc
push
sbb
sub
inc
push
adc
sub
pusha
push
sbb
sub
pusha
push
adc
sub
sbb
add
add
add
add
add
push
sbb
sub
rcr
add
add
push
sbb
sub
loopne
adc
sub
add
sbb
sub
add
adc
sub
and
adc
sub
and
sbb
sub
inc
pop
sbb
sub
inc
pop
adc
sub
pusha
pop
sbb
sub
pusha
pop
adc
sub
sbb
add
add
add
add
add
pop
adc
sub
rcr
add
add
pop
pop
or
loopne
sbb
sub
loopne
adc
sub
add
adc
sub
add
sbb
sub
and
adc
sub
and
sbb
sub
inc
and
add
add
sbb
sub
pusha
and
add
add
adc
sub
and
add
add
add
add
add
and
add
add
and
add
add
and
add
add
and
add
add
and
add
add
and
add
add
and
add
add
and
add
add
sbb
sub
inc
and
add
add
sbb
sub
pusha
and
add
add
add
add
add
add
and
add
add
and
add
add
and
add
add
and
add
add
and
add
add
and
add
add
and
add
add
and
add
add
adc
sub
inc
and
add
add
adc
sub
pusha
and
add
add
add
add
add
add
and
add
add
and
add
add
and
add
add
and
add
add
and
add
add
and
add
add
and
add
add
and
add
add
sbb
sub
inc
and
add
add
adc
sub
pusha
and
add
add
add
add
add
add
and
add
add
and
add
add
and
add
add
and
add
add
and
add
add
and
add
add
and
add
add
and
add
add
adc
sub
inc
and
add
add
adc
sub
pusha
and
add
add
add
add
add
add
and
add
add
and
add
add
and
add
add
and
add
add
and
add
and
and
inc
and
inc
and
pusha
and
pusha
and
and
and
mov
add
add
and
shl
and
loopne
adc
sub
add
adc
sub
add
sbb
sub
and
adc
sub
and
sbb
sub
inc
sbb
sub
inc
adc
sub
pusha
sbb
sub
pusha
adc
sub
and
add
add
add
add
add
sbb
sub
shl
add
add
adc
sub
loopne
sbb
sub
add
adc
sub
add
sbb
sub
and
sbb
sub
and
adc
sub
inc
daa
adc
sub
inc
daa
sbb
sub
pusha
daa
adc
sub
pusha
daa
sbb
sub
and
add
add
add
add
add
daa
adc
sub
shl
add
add
daa
sbb
sub
loopne
adc
sub
add
adc
sub
add
sbb
sub
and
sbb
sub
and
adc
sub
inc
sub
add
add
adc
sub
pusha
sub
add
add
adc
sub
sub
add
add
add
add
add
sub
add
add
sub
add
add
sub
add
add
sub
add
add
sub
add
add
sub
add
add
sub
add
add
sub
add
add
adc
sub
inc
sub
add
add
sbb
sub
pusha
sub
add
add
add
add
add
add
sub
add
add
sub
add
add
sub
add
add
sub
add
add
sub
add
add
sub
add
add
sub
add
add
sub
add
add
sbb
sub
inc
sub
add
add
sbb
sub
pusha
sub
add
add
add
add
add
add
sub
add
add
sub
add
add
sub
add
add
sub
add
add
sub
add
add
sub
add
add
sub
add
add
sub
add
add
adc
sub
inc
sub
add
add
sbb
sub
pusha
sub
add
add
add
add
add
add
sub
add
add
sub
add
add
sub
add
add
sub
add
add
sub
add
add
sub
add
add
sub
add
add
sub
add
add
sbb
sub
inc
sub
add
add
sbb
sub
pusha
sub
add
add
add
add
add
add
sub
add
add
sub
add
add
sub
add
add
sub
add
add
sub
add
and
and
inc
sub
inc
sub
pusha
sub
pusha
sub
sub
sub
mov
add
add
sub
shr
sub
loopne
adc
sub
add
sbb
sub
add
adc
sub
and
adc
sub
and
sbb
sub
inc
adc
sub
inc
sbb
sub
pusha
sbb
sub
pusha
adc
sub
sub
add
add
add
add
add
adc
sub
shr
add
add
adc
sub
loopne
sbb
sub
add
adc
sub
add
sbb
sub
and
adc
sub
and
sbb
sub
inc
das
sbb
sub
inc
das
adc
sub
pusha
das
sbb
sub
pusha
das
adc
sub
sub
add
add
add
add
add
das
adc
sub
shr
add
add
das
sbb
sub
loopne
adc
sub
add
adc
sub
add
sbb
sub
and
sbb
sub
and
adc
sub
inc
xor
add
add
adc
sub
pusha
xor
add
add
sbb
sub
xor
add
add
add
add
add
xor
add
add
xor
add
add
xor
add
add
xor
add
add
xor
add
add
xor
add
add
xor
add
add
xor
add
add
sbb
sub
inc
xor
add
add
adc
sub
pusha
xor
add
add
add
add
add
add
xor
add
add
xor
add
add
xor
add
add
xor
add
add
xor
add
add
xor
add
add
xor
add
add
xor
add
add
adc
sub
inc
xor
add
add
sbb
sub
pusha
xor
add
add
add
add
add
add
xor
add
add
xor
add
add
xor
add
add
xor
add
add
xor
add
add
xor
add
add
xor
add
add
xor
add
add
sbb
sub
inc
xor
add
add
adc
sub
pusha
xor
add
add
add
add
add
add
xor
add
add
xor
add
add
xor
add
add
xor
add
add
xor
add
add
xor
add
add
xor
add
add
xor
add
add
sbb
sub
inc
xor
add
add
adc
sub
pusha
xor
add
add
add
add
add
add
xor
add
add
xor
add
add
xor
add
add
xor
add
add
xor
add
and
and
inc
xor
inc
xor
pusha
xor
pusha
xor
xor
xor
mov
add
add
xor
shl
xor
loopne
sbb
sub
add
adc
sub
add
sbb
sub
and
adc
sub
and
sbb
sub
inc
sbb
sub
inc
adc
sub
pusha
adc
sub
pusha
sbb
sub
xor
add
add
add
add
add
sbb
sub
shl
add
add
sbb
sub
loopne
adc
sub
add
adc
sub
add
sbb
sub
and
adc
sub
and
sbb
sub
inc
aaa
adc
sub
inc
aaa
sbb
sub
pusha
aaa
adc
sub
pusha
aaa
sbb
sub
xor
add
add
add
add
add
aaa
sbb
sub
shl
add
add
aaa
adc
sub
loopne
sbb
sub
add
adc
sub
add
sbb
sub
and
adc
sub
and
sbb
sub
inc
cmp
add
add
sbb
sub
pusha
cmp
add
add
sbb
sub
cmp
add
add
add
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
adc
sub
inc
cmp
add
add
sbb
sub
pusha
cmp
add
add
add
add
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
adc
sub
inc
cmp
add
add
sbb
sub
pusha
cmp
add
add
add
add
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
adc
sub
inc
cmp
add
add
adc
sub
pusha
cmp
cdq
adc
sbb
sub
cmp
add
add
add
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
adc
sub
inc
cmp
add
add
sbb
sub
pusha
cmp
add
add
add
add
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
and
and
and
inc
cmp
inc
cmp
pusha
cmp
pusha
cmp
cmp
cmp
mov
add
add
cmp
sar
cmp
loopne
sbb
sub
add
sbb
sub
add
adc
sub
and
sbb
sub
and
adc
sub
inc
adc
sub
inc
sbb
sub
pusha
sbb
sub
pusha
adc
sub
cmp
add
add
add
add
add
adc
sub
sar
add
add
ds
or
loopne
adc
sub
loopne
sbb
sub
add
adc
sub
add
sbb
sub
and
sbb
sub
and
adc
sub
and
pop
or
add
add
adc
sub
pusha
aas
sbb
sub
pusha
aas
adc
sub
cmp
add
add
add
add
add
aas
adc
sub
sar
add
add
aas
adc
sub
loopne
pop
or
adc
aas
sbb
sub
add
add
add
inc
adc
sub
and
add
add
inc
sbb
sub
inc
inc
adc
sub
inc
inc
sbb
sub
pusha
inc
adc
sub
pusha
inc
sbb
sub
add
sub
add
sub
mov
add
add
inc
sbb
sub
rol
sub
loopne
sbb
sub
loopne
pop
or
adc
inc
adc
sub
add
add
add
inc
sbb
sub
and
or
adc
inc
adc
sub
and
add
add
sbb
sub
inc
inc
adc
sub
pusha
inc
adc
sub
pusha
inc
sbb
sub
add
sub
add
sub
mov
add
add
inc
sbb
sub
rol
sub
loopne
adc
sub
loopne
sbb
sub
add
add
add
inc
sbb
sub
and
add
add
inc
sbb
sub
inc
inc
sbb
sub
inc
inc
adc
sub
pusha
inc
adc
sub
pusha
inc
sbb
sub
add
sub
add
sub
mov
add
add
inc
adc
sub
rol
sub
loopne
adc
sub
loopne
sbb
sub
add
add
add
inc
adc
sub
and
add
add
inc
sbb
sub
inc
inc
adc
sub
inc
inc
sbb
sub
pusha
inc
adc
sub
pusha
inc
sbb
sub
add
sub
add
sub
mov
add
add
inc
adc
sub
rol
sub
loopne
adc
sub
loopne
sbb
sub
add
sub
add
sub
and
sub
and
sub
inc
inc
sbb
sub
inc
inc
adc
sub
pusha
inc
sbb
sub
pusha
inc
adc
sub
add
add
add
add
add
inc
adc
sub
rol
add
inc
adc
sub
loopne
sbb
sub
add
add
add
inc
adc
sub
and
add
add
inc
adc
sub
inc
inc
adc
sub
inc
inc
sbb
sub
pusha
inc
adc
sub
pusha
inc
sbb
sub
add
sub
add
sub
mov
add
add
inc
adc
sub
rol
sub
loopne
sbb
sub
loopne
adc
sub
add
add
add
inc
sbb
sub
and
add
add
inc
adc
sub
inc
inc
sbb
sub
inc
inc
adc
sub
pusha
inc
adc
sub
pusha
inc
sbb
sub
add
sub
add
sub
add
sub
mov
add
add
inc
adc
sub
rol
sub
loopne
sbb
sub
loopne
adc
sub
add
add
add
inc
sbb
sub
and
add
add
inc
adc
sub
inc
inc
adc
sub
inc
inc
sbb
sub
pusha
inc
sbb
sub
pusha
inc
adc
sub
add
sub
add
sub
mov
add
add
inc
adc
sub
rol
sub
loopne
adc
sub
loopne
sbb
sub
add
add
add
dec
sbb
sub
and
add
add
dec
adc
sub
inc
dec
adc
sub
inc
dec
sbb
sub
pusha
dec
sbb
sub
pusha
dec
adc
sub
or
sub
or
sub
mov
add
add
dec
adc
sub
ror
sub
loopne
sbb
sub
loopne
adc
sub
add
add
add
dec
adc
sub
and
add
add
dec
adc
sub
inc
dec
sbb
sub
inc
dec
adc
sub
pusha
dec
sbb
sub
pusha
dec
adc
sub
or
sub
or
sub
mov
add
add
dec
sbb
sub
ror
sub
loopne
sbb
sub
loopne
adc
sub
add
add
add
dec
sbb
sub
and
add
add
dec
adc
sub
inc
dec
adc
sub
inc
dec
sbb
sub
pusha
dec
sbb
sub
pusha
dec
adc
sub
or
sub
or
sub
mov
add
add
dec
adc
sub
ror
sub
loopne
sbb
sub
loopne
adc
sub
add
add
add
dec
adc
sub
and
add
add
dec
sbb
sub
inc
dec
sbb
sub
inc
dec
adc
sub
pusha
dec
sbb
sub
pusha
dec
adc
sub
or
sub
or
sub
mov
add
add
dec
sbb
sub
ror
sub
loopne
adc
sub
loopne
sbb
sub
add
sub
add
sub
and
sub
and
sub
inc
dec
sbb
sub
inc
dec
adc
sub
pusha
dec
sbb
sub
pusha
dec
adc
sub
or
add
add
add
add
dec
sbb
sub
ror
add
dec
adc
sub
loopne
sbb
sub
add
add
add
dec
sbb
sub
add
or
and
add
add
dec
sbb
sub
inc
dec
sbb
sub
inc
dec
adc
sub
inc
dec
pop
or
pusha
dec
adc
sub
pusha
dec
sbb
sub
or
sub
or
sub
mov
add
add
dec
adc
sub
ror
sub
ror
cmps
sbb
dec
sbb
sub
loopne
adc
sub
add
add
add
dec
sbb
sub
and
add
add
dec
sbb
sub
and
or
sbb
sbb
sub
inc
dec
adc
sub
pusha
dec
sbb
sub
pusha
dec
adc
sub
popa
dec
pop
or
sbb
add
add
add
add
sbb
dec
sbb
sub
ror
sub
loopne
adc
sub
loopne
sbb
sub
loope
pop
or
add
add
add
dec
adc
sub
and
add
add
dec
sbb
sub
and
or
inc
dec
pop
or
inc
dec
sbb
sub
inc
dec
adc
sub
pusha
dec
adc
sub
pusha
dec
sbb
sub
popa
dec
pop
or
sub
or
sub
mov
add
add
sbb
dec
adc
sub
ror
sub
loopne
sbb
sub
loopne
adc
sub
loope
pop
or
sbb
push
sbb
sub
add
add
add
push
pop
or
and
add
add
push
adc
sub
inc
push
sbb
sub
inc
push
adc
sub
pusha
push
adc
sub
pusha
push
sbb
sub
popa
push
pop
or
adc
sub
adc
sub
mov
add
add
push
sbb
sub
rcl
sub
loopne
adc
sub
loopne
sbb
sub
loope
pop
or
add
add
push
adc
sub
and
add
add
push
adc
sub
and
or
sub
inc
push
sbb
sub
pusha
push
sbb
sub
pusha
push
adc
sub
adc
sub
adc
sub
mov
add
add
push
sbb
sub
rcl
sub
loopne
sbb
sub
loopne
adc
sub
add
add
add
push
sbb
sub
and
add
add
push
sbb
sub
inc
push
adc
sub
inc
push
sbb
sub
pusha
push
adc
sub
pusha
push
sbb
sub
adc
sub
adc
sub
mov
add
add
push
adc
sub
rcl
sub
loopne
sbb
sub
loopne
adc
sub
add
add
add
push
sbb
sub
and
add
add
push
adc
sub
inc
push
sbb
sub
inc
push
adc
sub
pusha
push
adc
sub
pusha
push
sbb
sub
adc
sub
adc
sub
adc
arpl
mov
add
add
push
sbb
sub
rcl
sub
loopne
adc
sub
loopne
sbb
sub
add
sub
add
sub
and
sub
and
sub
inc
push
adc
sub
inc
push
sbb
sub
pusha
push
adc
sub
pusha
push
sbb
sub
adc
add
add
add
add
push
adc
sub
rcl
add
push
adc
sub
loopne
sbb
sub
add
add
add
push
sbb
sub
and
add
add
push
sbb
sub
inc
push
adc
sub
inc
push
sbb
sub
pusha
push
adc
sub
pusha
push
sbb
sub
adc
sub
adc
sub
mov
add
add
push
adc
sub
rcl
sub
loopne
adc
sub
loopne
sbb
sub
add
add
add
push
adc
sub
and
add
add
push
adc
sub
inc
push
sbb
sub
inc
push
adc
sub
pusha
push
adc
sub
pusha
push
sbb
sub
adc
sub
adc
sub
mov
add
add
push
adc
sub
rcl
sub
loopne
sbb
sub
loopne
adc
sub
add
add
add
push
adc
sub
and
add
add
push
adc
sub
inc
push
sbb
sub
inc
push
adc
sub
pusha
push
sbb
sub
pusha
push
adc
sub
adc
sub
adc
sub
mov
add
add
push
adc
sub
rcl
sub
loopne
adc
sub
loopne
sbb
sub
add
add
add
pop
adc
sub
and
add
add
pop
sbb
sub
inc
pop
adc
sub
inc
pop
sbb
sub
pusha
pop
sbb
sub
pusha
pop
adc
sub
sbb
sub
sbb
sub
mov
add
add
pop
sbb
sub
rcr
sub
loopne
adc
sub
loopne
sbb
sub
add
add
add
pop
adc
sub
and
add
add
pop
adc
sub
inc
pop
adc
sub
inc
pop
sbb
sub
pusha
pop
sbb
sub
pusha
pop
adc
sub
sbb
sub
sbb
sub
mov
add
add
pop
adc
sub
rcr
sub
loopne
sbb
sub
loopne
adc
sub
add
add
add
pop
adc
sub
and
add
add
pop
sbb
sub
inc
pop
sbb
sub
inc
pop
adc
sub
pusha
pop
adc
sub
pusha
pop
sbb
sub
sbb
sub
sbb
sub
mov
add
add
pop
sbb
sub
rcr
sub
loopne
sbb
sub
loopne
adc
sub
add
add
add
pop
adc
sub
and
add
add
pop
adc
sub
inc
pop
adc
sub
inc
pop
sbb
sub
pusha
pop
sbb
sub
pusha
pop
adc
sub
sbb
sub
sbb
sub
mov
add
add
pop
sbb
sub
rcr
sub
loopne
sbb
sub
loopne
adc
sub
add
sub
add
sub
and
sub
and
sub
inc
pop
adc
sub
inc
pop
sbb
sub
pusha
pop
adc
sub
pusha
pop
sbb
sub
sbb
add
add
add
add
pop
sbb
sub
rcr
add
pop
adc
sub
loopne
sbb
sub
add
add
add
pop
sbb
sub
and
add
add
pop
sbb
sub
inc
pop
sbb
sub
inc
pop
adc
sub
pusha
pop
adc
sub
pusha
pop
sbb
sub
sbb
sub
sbb
sub
mov
add
add
pop
adc
sub
rcr
sub
loopne
adc
sub
loopne
sbb
sub
add
add
add
pop
sbb
sub
and
add
add
pop
adc
sub
inc
pop
sbb
sub
inc
pop
adc
sub
pusha
pop
sbb
sub
pusha
pop
adc
sub
sbb
sub
sbb
sub
mov
add
add
pop
sbb
sub
rcr
sub
loopne
adc
sub
loopne
sbb
sub
add
add
add
pop
sbb
sub
and
add
add
pop
adc
sub
inc
pop
sbb
sub
inc
pop
adc
sub
pusha
pop
sbb
sub
pusha
pop
adc
sub
sbb
sub
sbb
sub
mov
add
add
pop
sbb
sub
rcr
sub
loopne
adc
sub
loopne
sbb
sub
add
add
add
pusha
adc
sub
and
add
add
pusha
sbb
sub
inc
pusha
sbb
sub
inc
pusha
adc
sub
pusha
pusha
sbb
sub
pusha
pusha
adc
sub
and
sub
and
sub
mov
add
add
pusha
sbb
sub
shl
sub
loopne
adc
sub
loopne
sbb
sub
add
add
add
popa
adc
sub
and
add
add
popa
adc
sub
inc
popa
adc
sub
inc
popa
sbb
sub
pusha
popa
sbb
sub
pusha
popa
adc
sub
and
sub
and
sub
mov
add
add
popa
sbb
sub
shl
sub
loopne
adc
sub
loopne
sbb
sub
add
add
add
bound
add
add
bound
add
add
bound
add
add
sbb
sub
inc
bound
add
add
sbb
sub
pusha
bound
add
add
add
add
add
add
bound
add
add
bound
add
add
bound
add
add
bound
add
add
arpl
add
add
arpl
add
add
arpl
add
add
arpl
add
add
adc
sub
inc
arpl
add
add
adc
sub
pusha
arpl
add
add
add
add
add
add
arpl
add
add
arpl
add
add
arpl
add
add
arpl
add
add
sbb
sub
add
sub
and
sub
and
sub
inc
adc
sub
inc
sbb
sub
pusha
sbb
sub
pusha
adc
sub
and
add
add
add
add
sbb
sub
shl
add
adc
sub
loopne
sbb
sub
add
add
add
adc
sub
and
add
add
adc
sub
inc
sbb
sub
inc
adc
sub
pusha
sbb
sub
pusha
adc
sub
and
sub
and
sub
mov
add
add
adc
sub
shl
sub
loopne
adc
sub
loopne
sbb
sub
add
add
add
sbb
sub
and
add
add
adc
sub
inc
sbb
sub
inc
adc
sub
pusha
sbb
sub
pusha
adc
sub
and
sub
and
sub
mov
add
add
sbb
sub
shl
sub
loopne
sbb
sub
loopne
adc
sub
add
add
add
sbb
sub
and
add
add
adc
sub
inc
adc
sub
inc
sbb
sub
pusha
adc
sub
pusha
sbb
sub
and
sub
and
sub
mov
add
add
sbb
sub
shl
sub
loopne
adc
sub
loopne
sbb
sub
add
add
add
push
and
add
add
push
inc
push
inc
push
pusha
push
pusha
push
sub
sub
sub
sub
mov
add
add
push
shr
sub
loopne
adc
sub
loopne
sbb
sub
add
add
add
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
push
add
add
push
add
add
push
add
add
push
add
add
adc
sub
inc
push
add
add
adc
sub
pusha
push
add
add
add
add
add
add
push
add
add
push
add
add
push
add
add
push
add
add
imul
sub
add
add
add
imul
sub
and
add
add
adc
sub
inc
imul
sub
pusha
imul
sub
pusha
imul
sub
sub
sub
sub
sub
mov
add
add
imul
sub
shr
sub
loopne
adc
sub
loopne
sbb
sub
add
sub
add
sub
and
sub
and
sub
inc
ins
adc
sub
inc
ins
sbb
sub
pusha
ins
sbb
sub
pusha
ins
adc
sub
sub
add
add
add
add
ins
sbb
sub
shr
add
ins
adc
sub
loopne
sbb
sub
add
add
add
ins
sbb
sub
and
add
add
ins
sbb
sub
inc
ins
adc
sub
inc
ins
sbb
sub
pusha
ins
sbb
sub
pusha
ins
adc
sub
sub
sub
sub
sub
mov
add
add
ins
adc
sub
shr
sub
loopne
adc
sub
loopne
sbb
sub
add
add
add
outs
adc
sub
and
add
add
outs
sbb
sub
inc
outs
adc
sub
inc
outs
sbb
sub
pusha
outs
sbb
sub
pusha
outs
adc
sub
sub
sub
sub
sub
mov
add
add
outs
sbb
sub
shr
sub
loopne
adc
sub
loopne
sbb
sub
add
add
add
outs
sbb
sub
and
add
add
outs
sbb
sub
inc
outs
adc
sub
inc
outs
sbb
sub
pusha
outs
adc
sub
pusha
outs
sbb
sub
sub
sub
sub
sub
mov
add
add
outs
adc
sub
shr
sub
loopne
sbb
sub
loopne
adc
sub
add
add
add
jo
add
add
jo
add
add
jo
add
add
adc
sub
inc
jo
add
add
adc
sub
pusha
jo
or
pusha
jo
add
add
add
add
add
add
jo
add
add
jo
add
add
jo
add
add
jo
add
add
jno
add
add
jno
add
add
jno
add
add
jno
add
add
adc
sub
inc
jno
add
add
sbb
sub
pusha
jno
add
add
add
add
add
add
jno
add
add
jno
add
add
jno
add
add
jno
add
add
jb
add
add
jb
add
add
jb
add
add
jb
add
add
adc
sub
inc
jb
add
add
sbb
sub
pusha
jb
add
add
add
add
add
add
jb
add
add
jb
add
add
jb
add
add
jb
add
add
jae
add
add
jae
add
add
jae
add
add
jae
add
add
sbb
sub
inc
jae
add
add
sbb
sub
pusha
jae
add
add
add
add
add
add
jae
add
add
jae
add
add
jae
add
add
jae
add
add
je
add
add
je
add
add
je
add
add
je
add
add
adc
sub
inc
je
add
add
sbb
sub
pusha
je
add
add
add
add
add
add
je
add
add
je
add
add
je
add
add
je
add
add
jne
add
add
jne
add
add
jne
add
add
jne
add
add
sbb
sub
inc
jne
add
add
adc
sub
pusha
jne
add
add
add
add
add
add
jne
add
add
jne
add
add
jne
add
add
jne
add
add
jbe
add
add
jbe
add
add
jbe
add
add
jbe
add
add
sbb
sub
inc
jbe
add
add
sbb
sub
pusha
jbe
add
add
add
add
add
add
jbe
add
add
jbe
add
add
jbe
add
add
jbe
add
add
ja
add
add
ja
add
add
ja
add
add
ja
add
add
sbb
sub
inc
ja
add
add
sbb
sub
pusha
ja
add
add
add
add
add
add
ja
add
add
ja
add
add
ja
add
add
ja
add
add
js
add
add
js
add
add
js
add
add
js
add
add
sbb
sub
inc
js
add
add
adc
sub
pusha
js
add
add
add
add
add
add
js
add
add
js
add
add
js
add
add
js
add
add
jns
add
add
jns
add
add
jns
add
add
jns
add
add
adc
sub
inc
jns
add
add
adc
sub
pusha
jns
add
add
add
add
add
add
jns
add
add
jns
add
add
jns
add
add
jns
add
add
jp
add
add
jp
add
add
jp
add
add
jp
add
add
sbb
sub
inc
jp
add
add
sbb
sub
pusha
jp
add
add
add
add
add
add
jp
add
add
jp
add
add
jp
add
add
jp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
adc
sub
inc
jnp
add
add
sbb
sub
pusha
jnp
add
add
add
add
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jl
add
add
jl
add
add
jl
add
add
jl
add
add
sbb
sub
inc
jl
add
add
sbb
sub
pusha
jl
add
add
add
add
add
add
jl
add
add
jl
add
add
jl
add
add
jl
add
add
jge
add
add
jge
add
add
jge
add
add
jge
add
add
adc
sub
inc
jge
add
add
adc
sub
pusha
jge
add
add
add
add
add
add
jge
add
add
jge
add
add
jge
add
add
jge
add
add
jle
add
add
jle
add
add
jle
add
add
jle
add
add
sbb
sub
inc
jle
add
add
sbb
sub
pusha
jle
add
add
add
add
add
add
jle
add
add
jle
add
add
jle
add
add
jle
add
add
jg
add
add
jg
add
add
jg
add
add
jg
add
add
adc
sub
inc
jg
add
add
sbb
sub
pusha
jg
add
add
add
add
add
add
jg
add
add
jg
add
add
jg
add
add
jg
add
add
sbb
sub
add
and
and
inc
sbb
sub
inc
adc
sub
pusha
sbb
sub
pusha
adc
sub
add
adc
sub
mov
add
add
sbb
sub
rol
sbb
sub
loopne
adc
sub
add
add
and
and
inc
adc
sbb
sbb
adc
adc
sbb
sbb
adc
sbb
adc
sbb
adc
adc
sub
add
and
and
inc
adc
sub
inc
sbb
sub
pusha
sbb
sub
pusha
adc
sub
add
sbb
sub
mov
add
add
sbb
sub
rol
sbb
sub
loopne
adc
sub
add
add
and
and
inc
adc
sub
inc
sbb
sub
pusha
adc
sub
pusha
sbb
sub
add
sbb
sub
mov
add
add
adc
sub
rol
adc
sub
loopne
sbb
sub
add
test
add
add
test
add
add
test
add
add
adc
sub
inc
test
add
add
sbb
sub
pusha
test
add
add
add
add
add
add
test
add
add
test
add
add
test
add
add
test
add
add
test
add
add
test
add
add
test
add
add
test
add
add
sbb
sub
inc
test
add
add
adc
sub
pusha
test
add
add
add
add
add
add
test
add
add
test
add
add
test
add
add
test
add
add
xchg
add
add
xchg
add
add
xchg
add
add
xchg
add
add
sbb
sub
inc
xchg
add
add
adc
sub
pusha
xchg
add
add
add
add
add
add
xchg
add
add
xchg
add
add
xchg
add
add
xchg
add
add
xchg
add
add
xchg
add
add
xchg
add
add
xchg
add
add
adc
sub
inc
xchg
add
add
sbb
sub
pusha
xchg
add
add
add
add
add
add
xchg
add
add
xchg
add
add
xchg
add
add
xchg
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
sbb
sub
inc
mov
add
add
sbb
sub
pusha
mov
add
add
add
add
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
sbb
sub
inc
mov
add
add
adc
sub
pusha
mov
add
add
add
add
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
sbb
sub
inc
mov
add
add
adc
sub
pusha
mov
add
add
add
add
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
sbb
sub
inc
mov
add
add
adc
sub
pusha
mov
add
add
add
add
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
adc
sub
inc
mov
add
add
sbb
sub
pusha
mov
add
add
add
add
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
lea
add
add
lea
add
add
lea
add
add
lea
add
add
sbb
sub
inc
lea
add
add
adc
sub
pusha
lea
add
add
add
add
add
add
lea
add
add
lea
add
add
lea
add
add
lea
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
sbb
sub
inc
mov
add
add
sbb
sub
pusha
mov
add
add
add
add
add
add
mov
add
add
mov
add
add
mov
add
add
mov
add
add
(bad)
adc
sub
add
and
and
inc
(bad)
sbb
sub
inc
(bad)
adc
sub
pusha
(bad)
sbb
sub
pusha
(bad)
adc
sub
or
(bad)
sbb
sub
mov
add
add
(bad)
sbb
sub
ror
(bad)
adc
sub
loopne
sbb
sub
add
add
and
and
inc
nop
sbb
sub
inc
nop
adc
sub
pusha
nop
sbb
sub
pusha
nop
adc
sub
adc
nop
sbb
sub
mov
add
add
nop
sbb
sub
rcl
nop
sbb
sub
loopne
adc
sub
add
add
and
and
inc
xchg
adc
sub
inc
xchg
sbb
sub
pusha
xchg
sbb
sub
pusha
xchg
adc
sub
adc
xchg
adc
sub
mov
add
add
xchg
adc
sub
rcl
xchg
sbb
sub
loopne
adc
sub
add
add
and
and
inc
xchg
sbb
sub
inc
xchg
adc
sub
pusha
xchg
sbb
sub
pusha
xchg
adc
sub
adc
xchg
adc
sub
mov
add
add
add
xchg
jnp
sub
rcl
xchg
sbb
sub
loopne
sbb
sub
loopne
jnp
sub
loopne
adc
sub
add
add
and
and
inc
xchg
adc
sub
inc
xchg
sbb
sub
pusha
xchg
sbb
sub
pusha
xchg
adc
sub
adc
xchg
adc
sub
mov
add
add
xchg
sbb
sub
rcl
xchg
adc
sub
loopne
sbb
sub
add
xchg
adc
sub
and
xchg
sbb
sub
inc
xchg
sbb
sub
inc
xchg
adc
sub
pusha
xchg
sbb
sub
pusha
xchg
adc
sub
adc
adc
sub
mov
add
add
xchg
sbb
sub
rcl
sbb
sub
loopne
adc
sub
add
add
and
and
inc
xchg
sbb
sub
inc
xchg
adc
sub
pusha
xchg
sbb
sub
pusha
xchg
adc
sub
adc
xchg
sbb
sub
mov
add
add
xchg
sbb
sub
rcl
xchg
sbb
sub
loopne
adc
sub
add
add
and
and
inc
xchg
sbb
sub
inc
xchg
adc
sub
pusha
xchg
adc
sub
pusha
xchg
sbb
sub
adc
xchg
sbb
sub
mov
add
add
xchg
adc
sub
rcl
xchg
adc
sub
loopne
sbb
sub
add
add
and
and
inc
xchg
adc
sub
inc
xchg
sbb
sub
pusha
xchg
adc
sub
pusha
xchg
sbb
sub
adc
xchg
sbb
sub
mov
add
add
xchg
adc
sub
rcl
xchg
sbb
sub
loopne
adc
sub
add
add
and
and
inc
cwde
sbb
sub
inc
cwde
adc
sub
pusha
cwde
sbb
sub
pusha
cwde
adc
sub
sbb
cwde
adc
sub
mov
add
add
cwde
adc
sub
rcr
cwde
adc
sub
loopne
sbb
sub
add
add
and
and
inc
cdq
sbb
sub
inc
cdq
adc
sub
pusha
cdq
sbb
sub
pusha
cdq
adc
sub
sbb
cdq
adc
sub
mov
add
add
cdq
sbb
sub
rcr
cdq
sbb
sub
loopne
adc
sub
add
add
and
and
inc
call
sbb
sub
pusha
call
sbb
sub
sbb
call
adc
sub
mov
add
call
adc
sub
loopne
adc
sub
loopne
sbb
sub
add
add
and
and
inc
fwait
adc
sub
inc
fwait
sbb
sub
pusha
fwait
sbb
sub
pusha
fwait
adc
sub
sbb
fwait
sbb
sub
mov
add
add
fwait
sbb
sub
rcr
fwait
adc
sub
loopne
sbb
sub
add
pushf
adc
sub
and
pushf
sbb
sub
inc
pushf
adc
sub
inc
pushf
sbb
sub
pusha
pushf
sbb
sub
pusha
pushf
adc
sub
sbb
sbb
sub
mov
add
add
pushf
sbb
sub
rcr
sbb
sub
loopne
adc
sub
add
add
and
and
inc
popf
sbb
sub
inc
popf
adc
sub
pusha
popf
adc
sub
pusha
popf
sbb
sub
sbb
popf
adc
sub
mov
add
add
popf
adc
sub
rcr
popf
sbb
sub
loopne
adc
sub
add
add
and
and
inc
sahf
adc
sub
inc
sahf
sbb
sub
pusha
sahf
adc
sub
pusha
sahf
sbb
sub
sbb
sahf
adc
sub
mov
add
add
sahf
sbb
sub
rcr
sahf
sbb
sub
loopne
adc
sub
add
add
and
and
inc
lahf
adc
sub
inc
lahf
sbb
sub
pusha
lahf
sbb
sub
pusha
lahf
adc
sub
sbb
lahf
sbb
sub
mov
add
add
lahf
sbb
sub
rcr
lahf
adc
sub
loopne
sbb
sub
add
add
and
and
inc
mov
inc
mov
pusha
mov
pusha
mov
and
mov
mov
add
add
mov
shl
mov
loopne
sbb
sub
add
add
and
and
inc
mov
inc
mov
pusha
mov
pusha
mov
and
mov
mov
add
add
mov
shl
mov
loopne
sbb
sub
add
add
and
and
inc
mov
inc
mov
pusha
mov
pusha
mov
and
mov
mov
add
add
mov
shl
mov
loopne
sbb
sub
add
add
and
and
inc
mov
inc
mov
pusha
mov
pusha
mov
and
mov
mov
add
add
mov
shl
mov
loopne
adc
sub
add
movs
sbb
sub
and
movs
sbb
sub
inc
movs
sbb
sub
inc
movs
adc
sub
pusha
movs
adc
sub
pusha
movs
sbb
sub
and
adc
sub
mov
add
add
movs
sbb
sub
shl
sbb
sub
loopne
adc
sub
add
add
and
and
inc
movs
adc
sub
inc
movs
sbb
sub
pusha
movs
adc
sub
pusha
movs
sbb
sub
and
movs
adc
sub
mov
add
add
movs
sbb
sub
shl
movs
sbb
sub
loopne
adc
sub
add
add
and
and
inc
cmps
adc
sub
inc
cmps
sbb
sub
pusha
cmps
adc
sub
pusha
cmps
sbb
sub
and
cmps
sbb
sub
mov
add
add
cmps
sbb
sub
shl
cmps
sbb
sub
loopne
adc
sub
add
add
and
and
inc
cmps
adc
sub
inc
cmps
sbb
sub
pusha
cmps
adc
sub
pusha
cmps
sbb
sub
and
cmps
sbb
sub
mov
add
add
cmps
adc
sub
shl
cmps
sbb
sub
loopne
adc
sub
add
add
and
and
inc
test
add
add
sbb
sub
pusha
test
add
add
sbb
sub
sub
test
add
add
add
add
test
add
add
test
add
add
test
add
add
test
add
add
test
add
and
and
inc
test
inc
test
pusha
test
pusha
test
sub
test
mov
add
add
test
shr
test
loopne
sbb
sub
add
add
and
and
add
add
add
xchg
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
scas
add
add
add
imul
aam
fadd
in
dec
add
add
add
add
add
add
add
pop
push
xor
jns
mov
pop
add
pop
sbb
mov
mov
or
or
test
mov
popf
or
or
or
or
or
or
or
or
or
or
or
or
ins
or
ror
(bad)
or
or
or
or
or
or
or
or
pop
or
loopne
add
cmp
push
pusha
push
gs
jae
mov
enter
xor
dec
pcmpgtb
lea
test
mov
in
(bad)
adc
jbe
nop
adc
adc
adc
adc
dec
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
jo
jns
pushf
adc
fist
sub
push
enter
or
sub
das
pop
inc
pop
addr16
rcl
pop
jbe
jnp
mov
mov
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
int3
sbb
cmp
imul
push
int
loopne
out
stc
push
and
ds
dec
pop
bound
imul
pop
test
xchg
pop
into
pop
fstp
or
sub
aas
and
and
and
in
and
and
and
and
and
and
add
add
adc
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
sbb
add
add
add
add
add
add
sub
sub
add
add
add
add
cmp
add
add
add
cmp
dec
add
push
add
add
bound
inc
add
inc
add
dec
add
add
add
cwde
add
fwait
add
mov
add
movs
add
lods
add
lods
add
mov
pop
add
add
mov
add
fiadd
ins
add
add
loope
outs
add
add
jmp
add
add
test
add
add
or
add
add
add
add
add
add
add
sub
pop
das
add
add
add
add
add
add
add
add
add
xchg
add
mov
or
shrd
add
lods
(bad)
pop
add
into
adc
adc
add
or
add
adc
or
add
adc
or
add
adc
or
add
adc
push
adc
stos
add
or
add
adc
or
add
adc
or
add
adc
or
add
adc
push
adc
stos
add
add
or
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
or
add
or
or
add
or
pushf
or
(bad)
add
sbb
(bad)
add
fwait
sbb
or
add
add
int3
sbb
or
add
add
add
int3
sbb
or
add
add
sbb
sbb
sbb
add
sbb
sbb
sbb
or
add
add
or
add
add
adc
or
add
adc
or
add
adc
or
add
adc
push
adc
je
or
add
sbb
or
add
je
jmp
add
out
adc
or
add
adc
or
add
adc
or
add
adc
push
adc
stos
add
or
add
adc
or
add
adc
or
add
adc
or
add
adc
push
adc
repz
or
add
adc
or
add
adc
or
add
adc
or
add
adc
adc
or
add
adc
or
add
adc
or
add
adc
or
add
adc
or
add
add
or
adc
or
add
or
add
adc
or
add
add
add
add
or
add
or
add
or
or
add
add
adc
or
add
add
add
add
add
or
add
or
add
or
add
add
adc
add
or
add
add
or
or
add
adc
or
add
adc
or
add
adc
or
add
adc
or
add
adc
or
add
adc
or
add
add
adc
or
add
adc
or
add
adc
or
add
adc
push
adc
stos
add
add
or
add
or
add
add
adc
or
add
adc
or
add
adc
or
add
adc
push
adc
stos
add
add
stos
add
add
add
je
mov
add
sbb
and
add
add
stos
add
add
stos
add
or
add
add
add
or
add
add
or
add
add
add
add
add
add
adc
or
add
adc
or
add
or
add
stos
add
add
or
add
or
add
or
add
add
add
add
add
add
add
or
add
or
or
add
or
or
or
add
or
or
add
adc
pop
add
stos
add
sbb
add
add
or
add
or
or
add
add
add
add
or
add
or
add
or
adc
or
add
adc
adc
or
add
adc
or
add
adc
or
add
or
add
sbb
(bad)
add
stos
add
jmp
add
repz
or
add
adc
or
add
adc
or
add
add
sbb
add
add
adc
or
add
adc
add
adc
or
add
and
add
inc
adc
or
add
or
add
sbb
mov
add
repz
sbb
add
adc
and
adc
or
add
adc
or
add
add
add
adc
add
add
repz
pushf
or
pushf
or
sbb
stos
add
add
repz
pushf
or
pushf
or
and
add
sbb
and
adc
add
or
add
add
add
add
add
add
add
add
or
adc
or
add
or
or
add
adc
or
add
adc
or
add
adc
or
add
or
or
add
adc
or
add
or
or
or
add
or
add
sbb
mov
add
sbb
(bad)
pop
add
repz
adc
or
add
or
add
add
je
inc
sbb
std
and
add
add
add
or
add
or
or
add
add
add
add
adc
add
out
adc
or
add
adc
or
add
adc
or
add
adc
push
adc
push
adc
pop
adc
(bad)
adc
or
add
adc
or
add
adc
or
add
daa
or
add
stos
add
add
stos
add
add
sub
and
add
add
or
add
or
or
add
add
or
add
add
adc
or
add
adc
or
add
daa
or
add
pop
adc
push
adc
(bad)
adc
or
add
or
add
or
add
add
adc
sbb
jmp
add
je
or
add
je
xchg
pop
or
rol
add
adc
rol
add
add
adc
add
add
adc
add
add
add
add
add
add
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
sbb
add
inc
add
add
add
sbb
add
inc
add
add
add
add
and
add
pop
add
add
add
and
add
pop
add
add
add
add
sub
add
pop
add
add
add
sub
add
xchg
sub
add
add
add
add
add
add
add
lea
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
add
add
fadd
inc
add
add
add
add
fiadd
inc
add
add
add
add
fadd
dec
add
add
add
add
fiadd
dec
add
add
add
add
loope
push
add
add
add
add
in
push
add
add
add
add
in
push
add
add
pop
add
add
add
add
add
push
add
add
and
pop
add
add
add
add
and
pop
add
add
add
add
add
add
daa
add
add
sub
arpl
add
sub
arpl
add
cmp
add
add
add
add
add
aas
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
push
add
add
pop
add
add
pop
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
leave
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
cmp
jmp
add
cmp
add
add
add
add
add
add
add
icebp
add
add
repz
add
repz
add
cmc
add
add
add
add
test
test
stc
add
add
stc
add
add
sti
add
add
sti
add
add
std
add
add
add
add
inc
add
dec
add
add
add
add
add
push
add
add
add
add
add
imul
push
add
add
add
add
add
add
or
add
outs
add
add
add
add
add
adc
add
jge
adc
add
mov
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
call
add
add
add
jmp
add
add
pop
add
add
sub
dec
add
add
add
add
sub
dec
add
add
add
add
add
das
add
add
xor
push
add
add
pop
add
add
pop
add
add
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
popa
add
add
popa
add
add
arpl
add
dec
add
add
dec
add
add
dec
add
add
push
add
add
push
add
add
add
add
push
add
add
add
imul
add
ins
add
add
ins
add
add
add
add
outs
add
add
jno
add
js
jno
add
test
jae
add
test
jne
add
xchg
jne
add
xchg
ja
add
mov
ja
add
mov
jns
add
mov
jns
add
mov
jnp
add
mov
jnp
add
lea
jge
add
mov
jge
add
nop
add
add
pop
jg
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
stc
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
dec
add
add
add
add
add
pop
add
add
pop
add
add
or
add
push
add
add
add
or
add
pushf
add
add
add
add
add
add
add
add
add
add
movs
add
add
add
add
add
add
add
add
add
add
add
add
leave
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
pop
add
or
or
and
and
and
sub
sub
cmp
cmp
inc
add
inc
add
inc
add
add
mov
pop
add
add
add
add
add
add
add
add
add
push
or
or
inc
add
movs
or
dec
add
or
dec
add
or
dec
add
or
dec
add
add
lods
or
dec
add
add
lods
or
dec
add
lods
or
push
add
lods
or
push
add
or
push
add
add
add
scas
or
push
add
add
scas
or
push
add
add
add
add
add
add
or
add
or
add
add
or
add
add
or
and
add
add
add
add
or
sub
add
add
add
add
or
inc
add
add
add
add
or
push
add
add
add
add
or
pop
add
add
add
add
add
add
add
add
add
add
jae
add
add
test
add
pop
add
add
add
add
add
add
add
add
add
add
add
dec
add
push
add
pop
add
pop
add
add
imul
ins
add
js
jp
js
jnp
js
jl
js
jge
js
jle
js
jg
js
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
in
add
add
xor
pop
add
add
add
add
add
add
add
rol
bound
add
cmp
add
js
addr16
add
add
arpl
jae
data16
push
imul
jae
arpl
ins
jae
outs
jb
imul
gs
cs
imul
inc
outs
jb
jae
push
jns
je
ins
cs
ins
ins
cs
imul
je
ins
cs
outs
jb
add
jae
gs
add
jae
gs
cs
jb
ja
outs
add
jae
gs
cs
popa
outs
popa
gs
outs
je
js
add
dec
outs
fs
gs
arpl
outs
jb
dec
jne
ins
imul
outs
add
outs
outs
ja
inc
outs
jb
jae
jo
ins
imul
inc
popa
jae
add
arpl
jae
data16
push
imul
jae
arpl
inc
jo
ins
imul
push
gs
imul
je
dec
outs
imul
add
je
xor
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
push
gs
imul
gs
outs
arpl
arpl
add
jne
addr16
je
jo
push
push
imul
jns
je
ins
cs
imul
imul
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
je
outs
je
arpl
imul
add
je
dec
jae
imul
jae
popa
outs
arpl
jae
je
inc
outs
popa
bound
imul
jns
gs
jae
je
push
popa
jbe
dec
jns
gs
imul
js
je
jae
je
push
push
ja
push
je
ins
add
jne
outs
ja
dec
outs
fs
outs
imul
je
ins
cs
push
imul
gs
addr16
inc
outs
jne
je
addr16
inc
popa
jo
arpl
jns
addr16
dec
je
ins
add
je
dec
jae
ins
imul
pop
dec
je
ins
add
ins
outs
jbe
push
popa
outs
add
je
inc
popa
jo
arpl
jns
push
jne
je
ins
gs
gs
jo
jb
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
je
bound
arpl
ins
jne
add
add
imul
inc
imul
push
jae
inc
outs
ins
jo
je
bound
gs
push
outs
fs
outs
add
jo
imul
add
je
outs
ins
jo
je
bound
gs
push
outs
fs
outs
addr16
gs
jne
je
push
jne
add
jne
addr16
imul
jb
bound
add
imul
jae
bound
je
jb
bound
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
add
imul
jae
bound
je
je
add
inc
push
push
inc
je
jb
bound
add
je
dec
popa
imul
inc
outs
jb
add
inc
jb
popa
je
dec
popa
imul
inc
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
jae
gs
bound
outs
outs
inc
je
jb
bound
add
je
imul
je
add
ins
jne
imul
add
ins
jo
je
jb
dec
imul
je
push
imul
jae
arpl
inc
gs
arpl
add
fs
jo
imul
push
arpl
jae
gs
bound
push
jns
je
ins
cs
gs
arpl
outs
add
jo
outs
ins
popa
imul
inc
jne
jb
outs
je
outs
ins
popa
imul
ins
jbe
inc
jbe
outs
je
popa
outs
fs
gs
popa
fs
push
gs
jne
arpl
gs
ins
jbe
add
fs
inc
jae
gs
bound
gs
ins
jbe
add
je
js
arpl
imul
ins
bound
dec
outs
popa
add
jb
popa
ins
add
jae
gs
cs
dec
add
jae
ins
jbe
inc
jbe
outs
je
jb
jae
addr16
dec
popa
ins
add
jb
outs
add
popa
jb
jae
imul
popa
outs
imul
jae
jne
arpl
je
gs
ins
add
je
jne
dec
popa
outs
fs
add
je
inc
jne
ins
dec
popa
ins
add
fs
data16
bound
jb
outs
add
popa
jb
inc
outs
outs
arpl
add
je
popa
outs
imul
jae
jne
arpl
popa
ins
gs
outs
jo
inc
jno
popa
ins
imul
ins
gs
ins
jne
popa
je
jb
push
jb
arpl
jae
popa
arpl
jns
push
jae
jb
addr16
inc
ins
outs
jae
inc
imul
dec
gs
outs
jb
inc
je
jb
bound
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
cs
gs
outs
add
popa
outs
fs
jb
dec
outs
fs
gs
je
jb
bound
add
arpl
jae
data16
push
imul
jae
arpl
inc
outs
ins
jo
ins
gs
gs
imul
fs
outs
fs
gs
popa
ins
gs
je
jb
bound
add
imul
ins
jbe
jb
dec
popa
jae
je
bound
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
push
push
push
je
je
arpl
je
imul
jb
jne
outs
je
js
gs
imul
pop
inc
ins
outs
jae
inc
imul
gs
outs
jbe
arpl
imul
jo
imul
je
outs
ins
add
je
dec
jae
imul
add
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
outs
je
imul
push
je
ins
jae
inc
gs
gs
jne
arpl
je
imul
popa
ins
imul
imul
jo
imul
imul
inc
jb
popa
je
dec
outs
jae
popa
outs
arpl
push
jb
push
arpl
je
add
je
jb
push
arpl
jb
jb
inc
js
gs
imul
pop
dec
outs
outs
gs
js
gs
imul
pop
dec
gs
popa
add
gs
jb
jb
push
arpl
jb
jb
push
gs
outs
jbe
add
ins
jo
outs
outs
je
inc
imul
inc
jno
popa
ins
jae
outs
add
je
popa
jae
inc
outs
fs
je
imul
jb
jne
inc
outs
ins
ins
arpl
outs
inc
je
jb
bound
add
imul
je
inc
ins
jne
popa
je
jb
imul
outs
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
ins
push
imul
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
imul
imul
jne
gs
je
jb
xor
pop
inc
ins
gs
outs
je
dec
inc
outs
jne
gs
bound
xor
inc
gs
outs
jne
gs
je
jb
addr16
inc
jne
jb
outs
je
addr16
push
popa
ins
jne
add
outs
jne
gs
je
jb
dec
outs
jbe
dec
gs
add
imul
ins
add
jne
arpl
jae
je
push
popa
ins
jne
add
ins
jne
add
je
jb
bound
add
popa
ins
add
pop
inc
js
ins
imul
je
inc
je
jb
bound
gs
popa
ins
jne
add
ins
add
je
je
jb
bound
gs
popa
ins
jne
add
je
inc
je
jb
bound
gs
popa
ins
jne
add
popa
ins
gs
popa
arpl
addr16
dec
popa
ins
gs
popa
arpl
popa
ins
add
bound
arpl
fs
outs
outs
outs
je
je
outs
outs
add
outs
jne
gs
bound
ins
popa
jae
push
jb
add
outs
je
outs
imul
add
outs
arpl
add
jne
gs
bound
push
jns
je
ins
cs
imul
arpl
popa
jae
add
je
inc
imul
jb
bound
add
je
dec
gs
inc
je
jb
bound
add
je
dec
jae
popa
ins
gs
popa
arpl
arpl
popa
je
outs
outs
add
outs
outs
je
je
outs
outs
add
je
dec
outs
arpl
dec
popa
ins
add
imul
outs
jb
push
popa
ins
jne
add
je
outs
jae
outs
outs
inc
je
jb
bound
add
je
imul
ins
jne
add
je
outs
outs
jae
popa
jns
jne
add
gs
outs
fs
imul
je
imul
outs
je
popa
outs
fs
gs
popa
fs
dec
outs
popa
add
jo
jae
outs
add
jp
inc
add
jp
add
jae
outs
fs
popa
jns
jne
add
outs
je
imul
je
outs
ins
add
je
inc
jne
outs
push
arpl
gs
imul
outs
jae
jae
je
inc
jne
outs
push
arpl
gs
outs
fs
je
push
arpl
gs
outs
fs
je
inc
ins
imul
add
je
dec
popa
js
ins
imul
jae
je
dec
imul
inc
outs
js
jae
je
dec
popa
ins
add
je
push
push
outs
outs
add
je
push
push
push
popa
jae
bound
add
je
push
imul
popa
je
add
jb
push
imul
popa
je
add
jae
ins
gs
popa
jns
jne
add
ins
gs
je
gs
ins
add
ins
outs
jb
push
je
gs
ins
add
dec
jne
ins
dec
jb
ins
jo
jns
inc
jns
add
je
add
ins
bound
add
je
imul
jns
popa
ins
add
je
dec
outs
addr16
add
arpl
jns
inc
jb
popa
je
inc
imul
jns
inc
imul
jns
outs
outs
add
ins
add
gs
je
add
xor
je
push
gs
imul
imul
je
ins
cs
arpl
imul
je
addr16
jo
jns
inc
outs
arpl
imul
je
ins
cs
gs
add
je
inc
push
inc
dec
dec
add
je
jns
gs
dec
popa
jae
inc
ins
outs
jb
je
ins
add
ins
jo
je
dec
popa
jae
add
outs
popa
gs
outs
je
ins
popa
jae
add
outs
popa
gs
outs
je
bound
arpl
ins
ins
arpl
outs
add
outs
popa
gs
outs
je
bound
arpl
jne
gs
je
jb
dec
popa
outs
popa
gs
outs
je
bound
arpl
ins
jo
jns
inc
gs
outs
jae
popa
outs
arpl
add
outs
popa
gs
outs
je
popa
jae
dec
bound
arpl
jo
jb
je
jb
add
ins
jo
jb
push
je
imul
pop
push
jb
jo
jb
imul
jo
jb
jns
popa
je
inc
outs
ins
ins
arpl
outs
add
outs
jo
jb
jns
popa
je
add
outs
jbe
jb
add
outs
ins
inc
popa
jae
ss
je
imul
push
je
imul
dec
outs
outs
jb
popa
je
outs
outs
add
outs
arpl
jae
je
jb
dec
outs
outs
add
fs
jbe
jb
outs
ins
outs
je
inc
gs
outs
ins
fs
popa
je
add
arpl
ins
inc
outs
ins
fs
inc
outs
outs
arpl
outs
popa
je
dec
bound
arpl
outs
outs
jbe
jb
imul
ins
imul
jo
push
gs
gs
outs
ins
jo
je
jb
addr16
push
imul
imul
outs
js
add
arpl
jae
data16
push
imul
jae
arpl
dec
jns
gs
imul
je
popa
ins
jne
add
je
inc
imul
ins
add
ins
gs
jns
je
ins
push
jb
js
add
arpl
jns
js
jae
jae
inc
js
jae
jae
addr16
inc
js
arpl
popa
bound
popa
je
add
jo
add
outs
popa
ins
gs
imul
inc
imul
jae
je
push
imul
jns
add
outs
arpl
jae
imul
jns
add
je
inc
jb
jne
outs
je
add
outs
arpl
jae
push
je
jb
add
outs
je
jb
jae
inc
gs
outs
gs
outs
gs
je
fs
je
jb
bound
add
gs
jbe
outs
je
jb
jae
push
gs
jne
arpl
popa
outs
popa
addr16
push
jns
je
ins
cs
gs
jne
arpl
add
ins
je
jb
dec
outs
outs
add
jae
gs
cs
ins
outs
bound
imul
add
data16
outs
arpl
jno
popa
ins
jae
addr16
inc
jae
gs
bound
addr16
push
gs
jne
arpl
popa
outs
popa
addr16
addr16
inc
jne
je
jb
add
je
inc
jne
je
jb
add
je
bound
arpl
gs
ins
add
ins
je
jb
add
dec
jns
gs
imul
cs
jns
inc
jo
ins
imul
push
gs
imul
add
jae
gs
cs
outs
outs
imul
je
outs
outs
add
popa
jne
je
outs
jae
popa
outs
arpl
popa
fs
popa
outs
fs
gs
popa
fs
popa
outs
fs
gs
outs
arpl
bound
arpl
gs
imul
add
outs
arpl
outs
outs
imul
je
push
popa
jbe
dec
jns
gs
imul
js
je
push
popa
jbe
add
je
push
popa
jbe
push
gs
imul
outs
fs
add
push
arpl
outs
ja
outs
outs
je
outs
ins
add
arpl
outs
jb
jns
arpl
imul
popa
ins
jne
push
jns
add
jne
outs
ja
inc
jbe
outs
je
popa
outs
fs
gs
popa
fs
push
push
ja
add
je
inc
gs
jne
je
inc
gs
jne
je
dec
gs
outs
jb
push
gs
popa
ins
imul
je
push
gs
imul
je
imul
gs
outs
fs
outs
popa
fs
inc
ins
outs
jae
add
outs
jb
push
jb
add
gs
popa
je
dec
outs
jae
popa
outs
arpl
popa
fs
jae
add
ins
je
jb
popa
outs
fs
add
je
dec
popa
jo
arpl
jb
outs
je
popa
ins
gs
jo
gs
outs
jne
push
popa
je
add
je
xor
dec
outs
imul
inc
jb
popa
jns
inc
jb
popa
jns
push
jne
je
ins
gs
imul
fs
add
popa
jb
pop
imul
js
gs
imul
push
outs
fs
push
imul
jo
ins
imul
inc
js
gs
imul
imul
imul
add
jae
gs
cs
jne
je
ins
gs
gs
popa
ins
imul
add
jb
popa
ins
imul
gs
add
imul
jo
imul
push
outs
fs
push
imul
pop
imul
gs
jns
add
je
push
push
inc
cmp
addr16
push
outs
imul
outs
je
jb
add
imul
jo
jb
popa
fs
jae
dec
imul
je
imul
je
jne
ins
dec
outs
imul
add
outs
outs
ja
popa
outs
fs
add
imul
je
add
ins
inc
popa
arpl
add
jb
je
popa
ins
add
ins
gs
imul
jo
je
gs
outs
popa
ins
gs
imul
je
outs
gs
je
jb
outs
outs
je
outs
addr16
add
ins
outs
jb
outs
imul
jb
outs
je
popa
jo
imul
je
add
jb
je
jb
add
outs
ins
gs
outs
add
je
inc
popa
outs
push
gs
add
je
inc
popa
outs
push
gs
gs
inc
popa
outs
push
jb
je
add
je
push
outs
jae
je
outs
outs
add
je
jne
jo
jb
gs
js
gs
imul
pop
push
outs
jae
je
outs
outs
add
jne
push
imul
gs
imul
gs
outs
jb
imul
outs
addr16
add
imul
gs
arpl
outs
je
push
jb
je
inc
jns
add
addr16
outs
je
jne
ins
inc
js
gs
imul
fs
jns
add
popa
add
jae
ins
jbe
push
outs
outs
ins
bound
add
imul
jae
add
jo
push
jb
arpl
jae
dec
popa
je
add
js
dec
imul
outs
inc
arpl
outs
add
jb
push
gs
outs
arpl
push
jb
arpl
jae
arpl
imul
push
jb
gs
outs
fs
fs
gs
outs
add
gs
gs
outs
jb
add
jbe
addr16
je
dec
outs
fs
arpl
outs
arpl
je
imul
push
jb
gs
outs
fs
fs
push
je
gs
ins
inc
js
gs
imul
arpl
ins
ins
inc
imul
arpl
gs
outs
outs
je
outs
ins
add
fs
imul
jne
ins
fs
jb
push
arpl
popa
outs
push
gs
add
outs
push
gs
popa
outs
push
jb
je
add
addr16
add
jae
je
outs
outs
add
outs
je
outs
ins
push
gs
ins
jbe
jb
inc
imul
add
addr16
outs
je
jne
dec
push
popa
outs
addr16
js
gs
imul
push
jne
jo
gs
inc
imul
add
je
add
outs
imul
outs
je
jb
jae
push
popa
ins
jne
push
jns
add
gs
outs
fs
outs
jbe
imul
push
imul
ins
ins
arpl
outs
add
je
inc
push
dec
outs
je
xor
push
popa
jb
add
ins
bound
push
je
ins
gs
inc
imul
je
jb
push
gs
jb
add
jae
push
jb
je
arpl
outs
inc
js
gs
imul
je
ins
cs
arpl
imul
jb
jo
outs
push
gs
imul
imul
jns
je
push
jb
outs
jae
outs
jb
add
ins
popa
je
push
je
gs
ins
add
jae
gs
cs
dec
cs
outs
ins
jo
gs
imul
ins
gs
imul
imul
pop
dec
push
add
je
dec
gs
inc
jb
popa
je
inc
arpl
jo
outs
jb
addr16
dec
outs
jo
je
ins
outs
arpl
imul
pop
dec
jne
jo
je
ins
outs
arpl
imul
outs
jae
outs
jb
inc
ins
outs
arpl
push
jb
outs
jae
outs
jb
inc
imul
arpl
inc
outs
ins
jo
gs
imul
add
jb
popa
jns
inc
jne
arpl
outs
inc
imul
addr16
outs
popa
fs
push
dec
outs
je
xor
push
imul
outs
popa
addr16
inc
outs
outs
imul
imul
jne
add
popa
bound
gs
je
jb
bound
add
je
inc
outs
popa
bound
ins
jne
popa
je
jb
dec
gs
outs
jb
dec
outs
jbe
imul
inc
imul
jb
inc
outs
outs
imul
imul
add
ins
je
arpl
je
gs
gs
je
add
push
arpl
gs
outs
add
jbe
imul
imul
add
jae
outs
arpl
jae
ins
je
inc
jae
outs
arpl
ins
ins
bound
imul
popa
ins
ins
bound
imul
outs
fs
outs
jbe
imul
gs
ins
je
push
gs
inc
imul
inc
ins
jne
popa
je
jb
jbe
outs
je
jb
jae
dec
arpl
push
arpl
add
ins
ins
popa
outs
fs
jbe
outs
je
jb
jae
inc
jae
arpl
ins
ins
arpl
outs
add
gs
jb
jbe
fs
inc
gs
imul
inc
imul
imul
arpl
outs
push
gs
ins
jbe
jb
push
outs
ins
jne
imul
gs
inc
outs
ins
popa
imul
inc
jb
popa
jns
imul
gs
push
jns
je
ins
cs
gs
cs
gs
popa
jb
js
jb
jae
imul
addr16
jo
imul
jb
outs
addr16
jne
ins
fs
inc
jo
outs
add
je
dec
outs
addr16
add
dec
popa
je
push
outs
je
arpl
add
je
jne
ins
push
popa
je
add
ins
bound
dec
imul
gs
imul
push
popa
ins
jne
add
js
popa
ins
jne
add
ins
gs
outs
outs
add
ins
gs
jns
je
ins
dec
outs
outs
add
je
dec
popa
jae
push
jb
je
push
imul
dec
gs
push
push
inc
jno
popa
ins
add
pop
inc
jb
popa
je
jb
push
inc
jno
popa
ins
add
je
inc
outs
popa
bound
ins
jne
popa
je
jb
addr16
push
jb
outs
je
arpl
add
je
push
jb
outs
je
arpl
add
pop
inc
jb
popa
je
jb
push
imul
gs
jae
ins
gs
inc
je
jb
bound
add
outs
outs
ja
imul
gs
jo
outs
add
je
dec
outs
ja
outs
jo
push
jne
je
popa
arpl
outs
add
ins
outs
addr16
imul
je
outs
outs
push
arpl
add
jbe
push
jns
add
jb
inc
outs
outs
jbe
jb
gs
imul
data16
imul
data16
je
imul
jne
je
outs
jne
jo
je
jne
data16
outs
jne
jo
je
data16
je
addr16
inc
popa
outs
push
gs
gs
jb
outs
jae
outs
jb
add
je
inc
popa
outs
push
jb
outs
jae
outs
jb
dec
jne
je
jo
gs
ins
outs
arpl
add
outs
push
gs
gs
jb
outs
jae
outs
jb
add
jo
je
ins
outs
arpl
imul
jo
je
ins
outs
arpl
imul
push
jb
outs
jae
outs
jb
dec
jne
je
jo
gs
ins
outs
arpl
add
imul
je
jb
dec
gs
outs
jb
push
jns
add
je
inc
ins
outs
arpl
imul
jo
outs
addr16
jo
imul
je
outs
outs
add
je
inc
ins
outs
arpl
imul
push
imul
je
dec
gs
ins
dec
gs
imul
outs
gs
je
dec
push
add
je
dec
gs
ins
inc
ins
outs
arpl
imul
outs
gs
je
dec
gs
inc
ins
outs
outs
add
je
dec
gs
push
popa
outs
outs
ins
add
js
inc
jns
gs
inc
jb
popa
je
inc
outs
arpl
jo
outs
jb
jb
bound
jns
jb
bound
add
outs
arpl
imul
popa
ins
dec
gs
imul
addr16
ins
inc
ins
outs
arpl
imul
jns
push
je
jb
push
imul
je
push
je
gs
ins
add
jns
je
push
je
gs
ins
dec
outs
fs
je
jne
data16
dec
outs
je
ins
jo
gs
outs
je
fs
js
gs
imul
gs
arpl
add
inc
inc
push
dec
inc
xor
push
data16
cmp
cmp
imul
jae
push
imul
dec
popa
outs
popa
gs
je
dec
outs
fs
jo
gs
outs
fs
imul
jae
addr16
dec
popa
jae
add
outs
arpl
outs
inc
jbe
outs
je
jb
jae
inc
pop
imul
je
outs
outs
add
push
push
outs
fs
push
imul
pop
imul
imul
imul
imul
add
popa
je
add
gs
push
je
gs
ins
add
outs
je
js
inc
outs
outs
jbe
jb
gs
push
dec
inc
inc
jb
jo
outs
push
gs
imul
imul
outs
ins
dec
jne
bound
inc
outs
gs
je
jb
inc
imul
push
popa
je
push
gs
popa
ins
imul
je
push
imul
popa
addr16
imul
ins
add
ins
jne
pop
pop
add
je
outs
outs
jae
jo
imul
ja
js
gs
imul
push
outs
fs
push
imul
pop
push
add
popa
addr16
popa
outs
popa
addr16
inc
outs
jb
popa
je
push
popa
jb
js
gs
imul
push
outs
fs
push
imul
popa
jb
dec
outs
jbe
ins
imul
inc
js
gs
imul
outs
ja
gs
imul
arpl
jbe
add
je
jns
ins
gs
popa
add
outs
jne
je
ins
inc
imul
gs
je
add
fs
push
gs
ins
jbe
push
outs
outs
ins
bound
add
ins
outs
jbe
pop
push
gs
ins
jbe
push
outs
outs
ins
bound
add
push
arpl
jae
outs
jae
fs
js
gs
imul
pop
push
gs
ins
jbe
push
outs
outs
ins
bound
add
je
push
gs
ins
jbe
push
outs
outs
ins
bound
add
je
inc
js
je
popa
je
bound
add
je
inc
js
je
popa
je
bound
add
je
inc
outs
jo
push
jb
arpl
jae
addr16
inc
ins
gs
outs
inc
arpl
outs
add
je
inc
outs
jo
push
jb
arpl
jae
push
je
gs
ins
push
jb
je
jb
dec
jae
popa
je
push
outs
outs
je
add
je
popa
je
push
outs
outs
je
inc
imul
jns
gs
jb
je
jb
push
gs
popa
arpl
addr16
inc
js
jae
jae
addr16
inc
je
jb
bound
gs
inc
imul
bound
gs
push
gs
push
jb
je
jb
push
jb
je
dec
imul
gs
ins
push
gs
fs
inc
gs
gs
jo
imul
dec
jo
outs
push
gs
add
je
gs
fs
push
gs
fs
imul
outs
push
gs
add
gs
add
outs
jne
dec
gs
jo
jb
inc
ins
gs
jb
dec
gs
outs
jb
push
outs
imul
dec
inc
ins
outs
outs
gs
bound
outs
bound
inc
outs
fs
imul
inc
jne
jb
outs
je
imul
jns
inc
gs
popa
jae
push
jb
je
push
imul
outs
imul
push
imul
inc
imul
ins
inc
outs
je
imul
pop
push
je
dec
outs
ja
push
gs
gs
imul
jb
add
pop
dec
gs
push
push
gs
pop
gs
jb
addr16
dec
outs
outs
je
add
je
inc
popa
jns
addr16
dec
outs
jne
add
je
dec
imul
gs
push
arpl
add
je
push
jae
jb
popa
ins
add
je
inc
ins
gs
outs
inc
arpl
outs
add
ins
bound
ja
jae
inc
ins
outs
outs
add
addr16
jb
add
ins
ins
popa
outs
fs
popa
jns
jne
add
imul
gs
push
jb
arpl
jae
gs
jo
jb
inc
outs
outs
je
js
inc
popa
arpl
jns
inc
jne
ins
fs
gs
outs
gs
push
popa
outs
gs
gs
popa
ins
imul
jb
imul
jb
bound
add
outs
outs
arpl
outs
inc
imul
jb
add
jne
dec
gs
jo
jb
inc
outs
outs
je
outs
ins
dec
jo
imul
outs
outs
arpl
outs
push
imul
popa
je
jb
outs
popa
fs
push
imul
imul
imul
je
outs
addr16
addr16
push
outs
jb
push
gs
outs
arpl
push
je
gs
ins
push
jb
jbe
fs
dec
imul
add
jo
popa
je
push
outs
imul
inc
jb
ins
push
arpl
fs
inc
jb
jne
push
jne
jne
add
outs
add
ins
gs
outs
fs
ins
gs
arpl
jae
add
ins
gs
push
outs
jo
dec
outs
gs
popa
ins
imul
popa
jae
push
jb
je
push
imul
inc
je
jb
bound
gs
inc
gs
outs
jbe
ins
imul
popa
jb
add
fs
inc
outs
jns
inc
gs
arpl
arpl
add
outs
outs
push
popa
bound
imul
add
outs
arpl
jae
outs
outs
je
js
add
outs
jne
je
ins
add
je
imul
inc
outs
ins
jo
jb
add
je
inc
push
push
popa
je
push
outs
outs
dec
outs
outs
addr16
js
gs
imul
je
imul
imul
outs
add
ins
bound
dec
outs
outs
add
jb
imul
outs
add
popa
addr16
je
jb
bound
add
je
outs
outs
push
arpl
add
gs
outs
jne
push
jb
jo
gs
popa
arpl
gs
jb
jo
gs
fs
je
dec
outs
imul
add
js
dec
outs
arpl
arpl
ins
fs
jne
jb
add
jae
popa
addr16
jbe
imul
push
imul
je
imul
je
outs
ins
outs
jb
ja
popa
jo
gs
outs
jae
popa
outs
arpl
push
push
add
je
inc
jne
jb
outs
je
push
add
je
inc
jne
jb
outs
je
jne
je
jb
add
je
push
gs
dec
outs
outs
add
je
outs
outs
add
je
dec
inc
dec
inc
outs
fs
popa
add
je
outs
arpl
imul
ins
imul
imul
outs
jne
outs
ins
ins
arpl
outs
add
jae
outs
dec
outs
outs
je
add
outs
ins
inc
imul
outs
jo
inc
fs
dec
outs
arpl
push
imul
pop
push
jb
arpl
jae
arpl
imul
dec
imul
outs
fs
je
outs
jb
push
gs
popa
ins
imul
imul
outs
jb
add
je
inc
jb
popa
je
outs
outs
push
imul
pop
inc
jb
popa
je
outs
outs
push
imul
addr16
dec
popa
jae
inc
arpl
jae
push
imul
pop
dec
popa
jae
inc
arpl
jae
push
imul
addr16
dec
popa
jae
push
jb
je
push
imul
push
popa
outs
gs
outs
outs
jbe
jb
gs
pop
imul
je
outs
outs
add
push
push
outs
fs
push
imul
imul
gs
gs
imul
outs
imul
imul
je
jb
add
je
jbe
je
inc
outs
outs
je
js
add
je
push
outs
je
ins
push
arpl
fs
push
gs
outs
arpl
outs
outs
add
jne
popa
je
jb
imul
imul
push
outs
inc
imul
je
add
addr16
gs
ins
jbe
jb
dec
outs
jne
je
ins
dec
jo
imul
jo
push
outs
add
ins
jne
imul
add
gs
inc
popa
arpl
jns
inc
arpl
outs
push
gs
push
jns
bound
dec
gs
jo
jb
push
popa
outs
gs
popa
arpl
jns
jae
popa
je
jae
inc
outs
outs
je
js
push
popa
bound
push
ins
jne
imul
dec
outs
jbe
jb
popa
outs
je
jne
je
jb
add
jb
add
outs
ins
jo
jb
jb
push
dec
outs
je
xor
inc
gs
jne
je
gs
bound
inc
je
jb
bound
add
outs
jne
inc
gs
outs
gs
dec
gs
outs
jb
dec
outs
popa
fs
push
imul
gs
add
gs
outs
fs
jns
inc
outs
outs
outs
arpl
outs
push
jns
add
jae
ins
bound
outs
imul
dec
outs
jne
gs
outs
gs
push
gs
je
inc
jne
jb
outs
je
dec
gs
outs
jb
dec
jo
imul
jne
popa
je
jb
jns
add
inc
js
gs
imul
pop
inc
popa
outs
push
imul
inc
popa
outs
push
imul
push
gs
outs
arpl
jb
jbe
fs
dec
ins
popa
addr16
popa
arpl
jns
inc
outs
outs
je
js
inc
jbe
outs
je
jb
jae
inc
outs
ins
popa
imul
outs
jae
inc
ins
jne
popa
je
jb
outs
outs
jbe
jb
gs
push
outs
ins
jne
imul
gs
add
ins
bound
push
popa
bound
dec
outs
jbe
add
je
outs
jb
inc
imul
imul
push
popa
outs
gs
jne
jne
add
imul
outs
add
jae
jae
popa
outs
je
outs
jbe
imul
dec
ins
popa
addr16
gs
outs
gs
inc
jne
ins
fs
gs
jo
jb
bound
ins
outs
addr16
add
ins
gs
jb
jbe
fs
push
outs
dec
outs
ja
jb
inc
imul
jns
gs
outs
gs
inc
jae
arpl
outs
jbe
jb
gs
inc
ins
jne
popa
je
jb
popa
arpl
jns
inc
outs
outs
imul
jb
bound
add
outs
outs
ja
imul
jb
inc
outs
outs
jbe
jb
gs
push
ins
jne
imul
jb
add
outs
imul
imul
jbe
jb
gs
dec
gs
outs
jb
push
imul
jb
inc
je
jb
bound
add
jbe
push
je
arpl
inc
jae
arpl
popa
arpl
inc
bound
addr16
bound
je
jb
bound
add
jne
imul
jae
inc
jae
gs
bound
imul
imul
jne
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
jae
gs
bound
jb
fs
popa
jb
inc
je
jb
bound
add
push
inc
outs
ins
jo
imul
jb
bound
add
jae
ins
bound
outs
outs
jb
popa
je
outs
outs
popa
ins
push
gs
imul
imul
jne
jo
gs
dec
ins
fs
jae
inc
je
jb
bound
add
addr16
jb
ins
gs
jb
inc
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
gs
imul
inc
jae
gs
bound
imul
outs
outs
inc
je
jb
bound
add
imul
jne
add
jae
ins
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
ins
bound
gs
jne
je
ins
imul
imul
add
add
add
pop
add
add
dec
add
push
add
add
inc
add
add
arpl
push
add
push
add
push
add
xor
bound
push
add
cmp
add
xor
outs
add
inc
add
pop
push
add
bound
ins
add
arpl
dec
add
jns
push
add
imul
add
cmp
add
bound
ins
add
arpl
imul
add
je
outs
add
add
cmp
sub
xor
mov
mov
mov
and
pop
jg
aad
cmp
mov
pop
push
sbb
mov
add
add
push
adc
or
add
or
add
add
add
sbb
add
add
sbb
adc
add
or
or
or
add
sbb
add
and
or
or
and
add
and
add
adc
add
or
add
or
add
add
add
sbb
and
add
add
add
sbb
add
add
add
add
push
add
push
add
xor
add
add
add
cmp
add
add
add
push
sbb
add
dec
jns
gs
jo
popa
je
or
xor
xor
xor
xor
add
add
push
add
adc
pop
add
push
push
add
add
push
add
sbb
pop
add
add
push
add
push
or
add
push
push
adc
add
add
add
push
add
push
push
add
adc
add
push
sbb
popa
add
add
or
add
add
or
sbb
add
push
adc
pop
add
adc
push
or
add
add
push
pop
push
adc
adc
push
adc
or
push
adc
ins
pop
push
adc
sbb
push
adc
and
adc
adc
adc
or
adc
ins
push
adc
sbb
adc
and
add
adc
add
add
add
adc
add
or
add
or
add
ins
add
add
ins
add
add
sbb
add
adc
pop
add
and
add
and
add
adc
add
or
cs
outs
ins
jo
je
jb
add
add
or
add
push
dec
jns
inc
jo
ins
imul
add
add
add
ins
or
add
dec
jns
push
jae
jb
add
add
sbb
add
or
cs
outs
jb
jae
add
add
and
add
push
dec
jns
push
bound
jb
imul
push
adc
add
adc
pop
add
xor
add
xor
add
xor
pop
add
add
xor
add
add
or
add
add
adc
add
add
sbb
add
push
push
sbb
add
add
add
add
add
add
add
sub
test
push
adc
add
add
add
add
add
xor
add
adc
add
pop
add
add
xchg
add
xchg
add
add
add
add
xor
and
push
push
push
push
pop
add
sbb
jae
gs
cs
imul
inc
outs
jb
jae
inc
outs
jb
adc
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
jo
jae
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
cs
jns
jb
push
arpl
outs
jb
jae
add
add
add
jns
je
ins
cs
bound
push
gs
imul
outs
je
arpl
jae
push
outs
popa
jo
je
jo
ins
imul
je
arpl
adc
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
jo
jae
pop
pop
dec
outs
jae
popa
outs
arpl
pop
add
add
push
adc
add
add
adc
add
adc
add
add
add
add
add
add
pop
add
adc
rcl
ror
or
adc
adc
adc
or
adc
push
adc
adc
adc
adc
add
add
adc
adc
add
adc
adc
add
push
adc
push
adc
adc
pop
and
add
adc
sldt
add
adc
push
or
add
adc
or
add
adc
push
push
pop
add
adc
adc
sbb
pop
add
adc
adc
add
adc
adc
add
add
adc
sbb
push
sbb
adc
add
adc
push
pop
add
adc
adc
or
adc
sbb
add
adc
push
add
push
add
push
add
add
or
adc
or
adc
adc
sbb
adc
sbb
add
add
adc
loope
push
sbb
adc
add
adc
and
pop
adc
adc
adc
or
push
adc
or
adc
adc
rol
add
add
fld
aad
add
add
sbb
sbb
adc
adc
add
add
push
sbb
adc
add
adc
add
or
push
adc
adc
push
adc
adc
or
add
adc
add
sbb
adc
adc
add
adc
and
add
fst
adc
pop
add
add
and
adc
pop
pop
add
add
sbb
and
sbb
add
adc
add
xor
pop
add
cmp
cmp
and
add
push
and
add
cmp
and
add
add
and
add
or
and
adc
adc
push
adc
add
add
add
add
push
add
add
push
push
add
adc
add
or
push
push
pop
or
sub
add
add
sub
add
sbb
and
push
push
adc
pop
push
adc
adc
add
push
push
add
cmp
cmp
add
push
add
dec
push
and
adc
add
add
sbb
push
push
sbb
push
add
sbb
push
add
push
adc
sbb
sbb
add
push
sbb
and
sbb
add
push
push
push
push
add
ins
push
and
add
push
sbb
and
adc
push
add
push
push
and
add
xor
push
or
add
cmp
add
sbb
cmp
add
adc
add
add
sbb
and
adc
and
add
adc
add
adc
adc
adc
add
or
add
adc
add
add
adc
adc
sbb
xor
jae
gs
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
push
adc
add
add
push
sbb
add
adc
pop
add
add
cmp
add
cmp
and
add
sbb
adc
pop
add
dec
dec
imul
je
push
imul
jne
imul
outs
jb
cs
gs
imul
imul
gs
imul
ins
gs
imul
popa
je
jb
xor
xor
xor
xor
add
add
cmp
add
or
cs
gs
imul
pop
add
push
or
add
adc
pop
add
add
pop
or
add
adc
pop
add
add
or
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
push
sbb
add
and
sub
pop
add
sbb
and
push
sbb
pop
add
push
add
add
or
add
add
add
add
pop
add
add
push
adc
push
sbb
sbb
pop
add
or
push
add
and
add
pop
add
add
add
add
or
and
or
adc
add
and
add
or
and
or
pop
add
add
add
pop
push
add
add
add
add
add
or
and
add
pop
sbb
add
or
or
or
or
sbb
add
or
or
sbb
or
or
adc
or
or
or
or
or
add
add
or
or
adc
mov
or
or
or
or
or
or
add
add
or
add
add
add
add
add
add
add
(bad)
(bad)
add
add
add
add
add
add
add
push
sbb
push
push
and
add
pop
or
inc
sbb
or
or
or
or
or
or
or
or
or
push
push
push
push
push
or
or
or
or
or
sbb
or
add
or
or
or
or
or
or
or
pop
push
or
or
or
push
and
add
or
adc
nop
pop
or
or
or
or
or
or
or
sbb
adc
or
or
or
or
or
or
or
or
or
add
or
pop
add
or
or
pop
or
or
or
add
or
pop
adc
or
or
or
or
or
or
or
or
or
or
add
sbb
or
add
add
or
add
add
add
add
add
adc
push
or
or
and
or
add
add
or
add
or
adc
sbb
add
adc
sbb
pop
add
add
pop
add
sbb
sub
pop
adc
adc
in
sbb
add
sbb
or
or
sbb
add
adc
or
add
sbb
or
and
add
pop
adc
sbb
add
add
add
or
or
(bad)
(bad)
inc
push
sbb
or
add
add
or
and
add
or
add
add
and
or
sub
or
and
add
add
adc
adc
add
jl
and
or
adc
or
add
or
and
add
je
and
or
adc
or
add
js
and
or
adc
or
sbb
add
or
add
push
adc
or
add
adc
sbb
push
and
add
and
movs
adc
adc
add
add
push
adc
adc
add
add
or
adc
pop
add
add
push
add
sbb
sub
sbb
sub
push
add
adc
add
adc
add
pop
push
add
adc
adc
or
adc
add
sbb
add
add
push
and
adc
add
and
add
adc
adc
adc
sbb
add
adc
add
add
adc
add
adc
or
add
adc
push
pop
add
adc
adc
add
and
and
and
add
and
sub
adc
add
and
push
jae
and
je
outs
fs
popa
je
inc
imul
jae
gs
add
pop
add
add
pop
sbb
add
pop
sbb
pop
add
or
add
add
pop
adc
add
adc
pop
sbb
adc
pop
pop
add
and
or
js
or
and
add
adc
adc
add
xor
xor
add
add
pop
adc
add
xor
push
or
pop
add
or
or
add
or
pop
add
push
add
sbb
pop
add
add
add
add
adc
sbb
pop
add
cmp
icebp
sbb
sub
sbb
sub
sbb
add
add
adc
add
pop
adc
or
add
adc
sbb
add
or
or
or
or
sbb
adc
or
add
push
adc
add
sbb
sbb
add
push
sbb
add
sbb
add
adc
sbb
add
push
sbb
pop
add
or
add
add
add
add
adc
xor
adc
sbb
adc
add
sbb
and
or
or
or
or
adc
adc
ins
or
or
or
or
or
or
or
or
or
pop
sbb
or
adc
and
add
adc
cmp
pop
adc
add
adc
add
adc
add
push
adc
or
sbb
pop
add
and
sbb
popf
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
sbb
sbb
add
or
or
or
or
or
or
add
add
push
add
push
push
sbb
or
add
adc
push
adc
add
adc
adc
adc
and
sub
and
add
and
adc
adc
adc
add
or
add
sbb
adc
pop
add
adc
add
adc
or
add
sub
add
push
jae
and
and
arpl
push
jb
outs
jae
popa
je
and
outs
jo
jb
jns
add
and
or
or
push
add
adc
and
outs
jae
and
jae
gs
add
add
sbb
push
add
and
jne
add
add
add
add
jns
and
add
adc
add
sbb
push
push
adc
adc
sbb
sbb
add
adc
add
push
push
push
add
add
push
add
test
or
add
add
add
sub
add
add
push
jae
and
arpl
fs
imul
jo
jb
jns
imul
add
and
jae
and
outs
arpl
popa
arpl
and
outs
jo
jb
jns
imul
add
pop
add
adc
pop
add
adc
adc
pop
or
add
push
jae
and
inc
outs
fs
inc
jb
push
ins
outs
arpl
imul
add
add
add
or
add
and
and
jb
outs
je
ins
outs
arpl
jo
outs
jo
jb
jns
imul
add
daa
add
and
and
jb
outs
je
arpl
and
outs
jo
jb
jns
imul
add
pop
add
push
sbb
sbb
and
add
add
adc
push
adc
add
sbb
sbb
push
and
add
sbb
sbb
and
add
adc
add
adc
add
sbb
push
and
sbb
add
add
add
adc
add
sbb
add
add
add
add
add
add
xor
xor
xor
xor
xor
xor
add
js
inc
add
add
dec
add
add
push
add
jne
jae
je
popa
add
and
push
jne
jae
je
popa
add
and
and
or
add
add
and
add
or
or
or
and
add
je
and
ins
and
outs
jo
jb
jns
imul
add
add
and
add
or
or
or
pop
add
sbb
or
or
push
pop
add
add
or
add
or
pop
add
sbb
sbb
add
or
add
add
add
adc
or
add
push
sbb
pop
add
or
add
or
add
or
or
or
add
and
add
or
and
pop
add
and
and
add
adc
add
adc
push
adc
and
or
or
sbb
or
and
add
and
or
or
pop
or
adc
or
or
adc
add
sbb
push
and
adc
add
sbb
add
sbb
adc
push
or
push
and
add
sbb
push
and
add
xor
xor
add
jg
add
and
or
cmp
add
add
add
add
add
add
adc
or
add
and
add
add
or
or
add
add
add
jle
add
add
add
adc
add
add
adc
push
adc
add
add
add
inc
add
add
push
push
pop
or
or
or
add
add
or
add
add
pop
add
add
add
pop
add
add
inc
add
inc
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
or
add
or
and
adc
pop
and
add
pop
add
or
sbb
push
or
or
or
or
or
or
or
or
or
and
add
adc
or
sbb
or
or
or
add
or
add
add
adc
xor
add
adc
or
or
or
sbb
pop
or
or
or
and
add
cmp
and
or
or
or
or
or
or
or
or
or
push
and
or
cmp
mov
adc
adc
add
adc
or
add
adc
pop
add
adc
pop
add
adc
and
add
add
xor
and
add
xor
sub
adc
add
adc
xor
add
adc
cmp
add
adc
add
sub
mov
adc
adc
add
cmp
add
add
adc
add
push
add
push
pop
and
push
push
add
or
add
add
inc
adc
add
pop
push
add
push
push
and
add
push
push
add
add
pop
sldt
or
adc
push
adc
push
push
add
pop
add
and
or
sbb
xor
add
add
cwde
or
add
or
add
push
adc
pop
add
adc
adc
add
adc
add
adc
add
sbb
sub
sbb
add
sbb
or
adc
adc
adc
adc
or
add
or
and
adc
add
sbb
pop
add
add
push
push
push
pop
add
adc
push
push
push
add
add
and
or
add
push
add
add
add
sub
add
adc
add
add
adc
add
add
data16
add
data16
add
data16
add
data16
add
data16
add
data16
add
add
add
add
add
add
add
push
inc
add
adc
add
add
or
add
and
add
add
add
add
sbb
and
jb
imul
inc
jns
imul
add
sub
add
push
jae
and
jb
imul
outs
addr16
outs
arpl
jo
imul
je
popa
add
add
add
add
add
push
jae
and
popa
ins
dec
gs
fs
popa
jae
push
imul
je
popa
add
add
add
add
add
push
push
jae
and
popa
inc
gs
jb
jo
outs
jb
imul
je
popa
add
add
add
add
add
and
and
outs
je
popa
ins
dec
gs
fs
popa
jae
push
imul
je
popa
add
add
add
add
add
es
jae
and
fs
inc
outs
je
popa
ins
push
arpl
fs
popa
jae
push
imul
je
popa
add
and
add
jb
jo
outs
dec
gs
fs
imul
je
popa
add
add
dec
add
jae
and
popa
ins
dec
gs
fs
imul
and
jae
gs
add
add
dec
pop
or
add
sbb
push
jo
outs
outs
imul
popa
je
jb
and
jae
gs
add
add
dec
xor
add
and
and
popa
outs
outs
imul
push
imul
and
jae
gs
add
sub
add
push
jae
and
popa
inc
gs
jb
jo
outs
jb
imul
and
jae
gs
add
daa
add
and
and
outs
je
popa
ins
dec
gs
fs
imul
and
jae
gs
add
add
dec
add
add
dec
push
push
xor
add
push
jae
and
jo
xor
outs
je
popa
ins
inc
imul
jb
imul
and
jae
gs
add
add
dec
push
pop
add
dec
add
sub
and
outs
je
popa
ins
dec
gs
fs
imul
imul
and
jae
gs
add
add
dec
add
sub
and
fs
inc
outs
je
popa
ins
inc
imul
jns
imul
and
jae
gs
add
add
mov
or
add
add
add
or
add
adc
add
sbb
add
sbb
push
or
add
or
sbb
or
or
adc
add
add
add
add
adc
add
or
or
and
push
or
adc
adc
and
outs
outs
and
jae
gs
add
add
add
or
pop
push
or
or
or
add
or
pop
push
or
or
or
add
test
and
add
add
or
or
and
and
and
or
or
add
and
and
xor
and
add
add
adc
adc
add
add
or
adc
adc
add
and
adc
and
add
sbb
sub
adc
push
add
add
add
push
add
add
push
add
adc
adc
or
and
and
adc
or
and
and
pop
or
adc
and
xor
adc
or
and
xor
sbb
or
adc
adc
add
cmp
pop
adc
or
or
or
pop
add
adc
add
sub
pop
or
lods
push
and
adc
add
sub
add
add
or
push
and
add
sub
and
add
and
pop
pop
add
or
add
adc
or
and
add
sbb
or
rol
adc
add
and
adc
and
sbb
sub
adc
adc
adc
add
adc
adc
push
adc
adc
and
sbb
or
adc
add
or
add
or
loopne
add
loopne
add
adc
and
adc
add
push
push
add
or
add
pop
adc
or
add
pop
or
add
add
pop
or
sub
test
ins
adc
add
xor
sub
sub
sbb
and
add
adc
sbb
adc
pop
add
push
push
push
push
push
or
or
or
add
and
or
sbb
sbb
leave
adc
push
and
add
sub
or
add
adc
push
and
add
sbb
pop
add
add
sbb
and
add
xor
push
adc
add
push
adc
add
or
or
add
adc
test
and
adc
test
add
add
pop
add
add
or
add
or
cwde
adc
add
add
add
add
adc
adc
or
and
add
xor
or
push
adc
or
or
or
add
adc
pop
or
push
and
or
xor
adc
or
or
pop
or
ins
sbb
or
xor
or
or
pop
add
pop
adc
push
pop
pop
adc
pop
or
adc
adc
add
and
pop
add
adc
pop
or
pop
add
or
and
add
and
or
or
pop
push
or
xor
pop
adc
sub
add
adc
adc
adc
leave
adc
sbb
adc
adc
pop
add
add
add
add
push
pop
add
xor
pop
and
or
or
es
pop
or
pop
or
or
or
or
or
or
or
or
or
or
or
cwde
sbb
or
sbb
ror
sbb
sbb
fcomp
adc
pop
adc
adc
or
add
adc
pop
pop
add
push
add
add
pop
or
add
push
push
jae
and
and
jne
je
jo
outs
jo
jb
jns
imul
add
push
sub
adc
add
inc
jns
outs
fs
add
and
add
or
or
adc
sbb
push
adc
sub
xor
or
or
sbb
push
adc
add
adc
add
push
adc
add
or
sbb
sbb
sbb
add
pop
add
in
push
add
push
adc
add
sub
sbb
and
add
and
add
pop
or
push
pop
add
pop
or
push
pop
add
adc
adc
sbb
and
adc
pop
add
fadd
and
add
sbb
adc
push
pop
add
pop
push
add
add
add
push
add
and
add
adc
sysret
pop
push
or
and
push
adc
add
add
adc
adc
pop
push
adc
add
add
adc
add
add
or
or
and
add
or
or
add
or
or
add
adc
cmp
pop
or
push
or
or
add
add
or
pop
add
adc
add
or
or
or
add
add
add
pop
push
adc
add
add
sbb
sbb
or
add
adc
push
pop
add
pop
add
add
sbb
add
xor
push
adc
or
adc
adc
sbb
adc
and
adc
sub
adc
add
cmp
add
add
daa
add
and
popa
jb
pop
imul
outs
jb
cs
inc
push
and
popa
ins
gs
jb
and
xor
add
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
sub
jb
addr16
xor
sub
and
imul
jb
gs
and
push
imul
add
dec
inc
push
push
outs
fs
gs
add
add
or
add
add
adc
add
and
jo
imul
add
add
sbb
gs
and
ins
jo
gs
imul
jb
jb
add
add
add
add
push
xor
cmp
xor
add
add
cs
inc
push
inc
jb
ins
gs
jb
sub
gs
imul
xor
adc
jb
ins
gs
jb
inc
imul
popa
ins
adc
dec
inc
push
and
popa
ins
gs
jb
and
xor
xor
xor
xor
xor
add
add
and
xor
cmp
xor
popa
xor
aaa
fs
cmp
xor
xor
add
add
push
gs
gs
jae
add
adc
add
push
push
imul
add
or
add
add
add
or
add
or
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
