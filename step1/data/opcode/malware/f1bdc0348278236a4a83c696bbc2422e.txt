xchg
cdq
jae
out
jge
jecxz
pop
xor
sbb
sbb
pop
add
pop
mov
mov
pcmpgtb
enter
mov
xor
ins
xor
pop
push
popf
xchg
adc
shl
adc
sbb
sub
xchg
pop
cmps
inc
xor
sub
mov
cmps
sub
aas
xchg
fsubrp
aaa
adc
mov
inc
adc
(bad)
ss
pop
xor
stc
call
div
xor
xor
popa
stos
mov
outs
mov
add
inc
sub
inc
not
outs
sbb
sbb
mov
jmp
mov
push
cmps
pop
xor
push
mov
mov
mov
jbe
add
adc
jbe
sub
iret
lahf
rcl
outs
stos
fcmove
jmp
fstp
sbb
fimul
cmps
pop
inc
imul
shl
sub
adc
imul
and
sbb
lahf
loopne
nop
sub
sbb
inc
cmc
or
cdq
lahf
adc
push
and
sbb
out
aam
sub
sbb
popf
lahf
ins
adc
ins
dec
pop
or
mov
pusha
mov
pop
lahf
fst
cld
mov
aaa
cdq
leave
dec
gs
dec
call
das
push
inc
lahf
cmps
(bad)
mov
fwait
stos
ror
das
push
inc
lahf
xchg
(bad)
fidiv
cmps
int3
and
das
xor
jle
or
sbb
adc
pop
and
pop
pop
pop
dec
or
mov
cdq
inc
xor
mov
jno
stos
pop
xor
push
fld
push
cmp
xlat
pop
mov
test
retf
jmp
jae
jmp
dec
adc
sub
pop
mov
stos
cmps
push
add
sbb
cld
push
and
adc
popf
aaa
lods
mov
push
ins
dec
sub
pop
movs
loopne
xor
loope
adc
pop
fdivr
add
push
mov
add
push
xchg
adc
pop
xor
mov
adc
test
jo
jl
adc
pop
mov
mov
gs
sub
inc
jnp
pop
jb
push
pop
adc
sbb
and
xor
jno
retf
push
mov
pop
fild
fstp
jmp
jno
push
mov
sbb
jmp
jns
push
mov
sbb
cld
loop
xor
popf
sub
repnz
outs
mov
cli
xor
pop
lock
rcl
lods
mov
xor
es
adc
or
sbb
ror
and
mov
xor
jle
xor
adc
fstp
xor
xor
dec
xor
call
bound
aam
daa
test
hlt
jle
aam
loopne
cmps
int3
inc
retf
adc
adc
icebp
arpl
das
xor
scas
pop
adc
mov
jmp
mov
fs
jmp
pop
inc
adc
loope
and
pop
(bad)
repz
fbld
and
sub
sub
and
imul
sbb
push
mov
mov
inc
popf
pop
pop
retf
popf
gs
in
repnz
call
popf
pop
cmp
enter
enter
scas
cmps
inc
sbb
ret
mov
sbb
lds
push
inc
or
sub
jmp
inc
pop
adc
sub
jmp
movs
(bad)
cmps
inc
call
mov
push
dec
in
mov
pop
xor
push
mov
push
push
shl
and
imul
inc
sbb
fcmovu
jne
sbb
inc
retf
push
mov
push
int3
popa
stos
mov
ins
mov
scas
inc
adc
sub
jmp
dec
int3
popa
mov
dec
int3
popa
pop
mov
ins
mov
sub
cld
cmps
and
adc
scas
inc
adc
cdq
jae
movs
ror
and
cld
nop
lock
sub
inc
sub
scas
xor
pop
sub
int3
adc
in
jno
and
adc
cmp
adc
xor
int3
mov
inc
mov
dec
sbb
lahf
not
stos
cmps
pop
cmp
mov
or
xlat
pop
int3
push
pop
rol
xchg
push
jae
sahf
pop
xor
pusha
jbe
xlat
dec
int3
push
push
shl
fwait
sbb
popa
cmps
shl
dec
outs
mov
push
push
shl
push
sub
mov
mov
sahf
inc
mov
out
mov
push
and
adc
mov
mov
pop
cmps
xor
or
icebp
sbb
adc
mov
rol
sub
shl
movs
int3
jmp
mov
pop
cmps
int3
popf
pusha
pop
icebp
popf
aaa
movs
int3
jmp
xor
and
xor
mov
cmc
xchg
mov
mov
popf
push
mov
popf
pop
jo
lahf
not
add
pop
int3
jmp
pusha
in
push
pop
cmps
int3
popf
pusha
jo
popf
aaa
movs
int3
jmp
mov
mov
aam
adc
cld
add
xlat
not
(bad)
inc
icebp
pcmpgtb
test
and
out
mov
xor
dec
adc
ror
sbb
mov
out
movs
cwde
retf
xchg
mov
xchg
pusha
cmp
retf
mov
or
push
ins
dec
imul
inc
hlt
push
mov
call
sbb
adc
scas
push
call
out
add
dec
jg
in
pop
xor
out
cmp
inc
sub
xor
pop
inc
sbb
sub
icebp
jne
dec
add
fwait
xchg
pop
pop
inc
mov
stos
lahf
aaa
or
shl
sub
iret
dec
cld
add
xlat
not
(bad)
inc
icebp
pcmpgtb
mov
jbe
xchg
cmp
dec
and
push
mov
jmp
sub
(bad)
(bad)
mov
out
sub
mov
aas
sbb
ss
in
in
push
sub
iret
and
imul
inc
sub
stos
imul
sub
int3
adc
in
jno
pop
sub
jl
mov
mov
pop
cmps
mov
sbb
push
pop
dec
inc
sbb
inc
dec
sub
jmp
or
inc
dec
dec
int
pop
(bad)
xor
pop
cli
xlat
not
(bad)
inc
hlt
push
mov
xor
mov
cmp
retf
adc
lahf
pop
adc
pop
pop
jmp
pop
xor
cmps
inc
sbb
pop
pop
adc
inc
inc
adc
ror
adc
cmps
push
popf
push
push
ins
dec
call
arpl
push
mov
push
mov
pop
xor
inc
shl
sub
jno
mov
cli
jno
repnz
jmp
push
mov
adc
inc
int3
inc
stos
loope
adc
sbb
popf
shl
jmp
push
fild
cld
add
xlat
not
(bad)
xchg
dec
jns
inc
cmc
rol
sbb
fadd
into
jmp
xor
cmps
pop
pop
adc
add
aam
in
xor
cmc
loopne
fcmovnbe
rcr
popf
popa
loope
push
mov
sbb
popf
gs
scas
aam
sbb
sbb
retf
push
mov
aam
in
mov
mov
cdq
cmp
lods
(bad)
out
cmp
xlat
push
in
cdq
aaa
inc
retf
push
mov
shl
jmp
dec
xor
pop
mov
sub
cmp
shl
stos
cdq
inc
adc
pand
pop
cmps
int3
dec
and
add
std
pop
push
icebp
sbb
adc
mov
loop
pop
mov
cmp
jmp
pop
inc
adc
jl
mov
(bad)
jno
fwait
sbb
sbb
lahf
xor
shl
add
xchg
shr
jecxz
shl
popf
popa
fimul
mov
sbb
adc
inc
xchg
mov
sbb
inc
sub
inc
stos
shr
cmp
xchg
nop
push
mov
pop
xor
pop
or
popa
scas
mov
data16
stos
rcl
aam
cmc
pop
cmps
int3
inc
dec
aaa
enter
neg
lahf
cmps
int3
adc
sub
xchg
xchg
nop
push
mov
pop
xor
popa
fdiv
jmp
arpl
cmps
or
popf
out
mov
push
pop
cmp
mov
adc
and
adc
fcom
adc
pop
pop
mov
fsubrp
jno
pop
cmps
xor
jne
xlat
icebp
push
xor
pop
mov
push
movs
ficom
push
add
jbe
sub
pop
adc
jbe
adc
add
xlat
les
mov
cld
add
jbe
repnz
hlt
and
aaa
adc
pop
shl
pop
fs
popf
cmps
fs
sbb
xchg
dec
retf
mov
xor
aam
sbb
lahf
out
arpl
mov
sbb
sbb
dec
sub
adc
aam
enter
inc
add
nop
push
mov
into
cmps
adc
pop
mov
popa
mov
ss
pop
pop
xor
jle
int
(bad)
sbb
sub
pop
xor
inc
shl
popf
popa
fimul
mov
sbb
adc
push
xchg
mov
sbb
inc
sub
inc
stos
cmps
jbe
sub
sub
mov
scas
mov
pop
xor
daa
mov
jmp
cli
xlat
not
(bad)
xchg
dec
push
pusha
inc
cmc
out
push
jg
in
mov
scas
mov
in
sub
mov
and
push
mov
mov
sub
shl
movs
xor
pop
mov
in
sub
sbb
jmp
push
stos
shl
mov
gs
pusha
cmps
ficom
mov
sbb
mov
inc
rcr
xchg
push
mov
lods
outs
xor
pop
xchg
mov
pop
xor
jp
int3
jmp
cdq
inc
push
and
adc
mov
mov
pop
pop
inc
inc
add
push
mov
sub
retf
popf
ficom
mov
push
call
popa
mov
push
mov
imul
push
call
pop
shl
push
sub
xchg
sahf
imul
jmp
ficom
mov
sub
pop
and
sbb
cld
scas
aaa
xor
sub
mov
adc
pop
pop
adc
pop
pop
adc
pop
jae
mov
add
shl
enter
enter
shl
xor
sbb
popf
arpl
sti
jmp
(bad)
adc
pusha
xor
cdq
out
lods
bound
sub
jmp
mov
xor
aam
loopne
xor
jl
mov
retf
cld
push
xor
mov
cmp
pop
int3
popa
pop
mov
jp
pop
ins
dec
stc
nop
lock
sub
cld
(bad)
xor
adc
pcmpgtb
and
mov
xlat
fs
jmp
cmps
xor
jno
dec
repnz
adc
shl
cdq
daa
popf
int3
jmp
int3
dec
stos
cdq
cmp
ja
xor
xor
adc
cs
adc
mov
jnp
pop
mov
jmp
sbb
mov
das
fdiv
jmp
cmps
arpl
mov
popf
aas
xchg
lahf
lds
fisub
mov
add
cmps
int
repnz
scas
mov
pop
arpl
sub
sbb
dec
jo
adc
aam
enter
inc
retf
push
mov
cmps
int3
inc
sub
add
shl
stos
cdq
cmp
sahf
push
xor
xor
xchg
bound
scas
mov
pop
arpl
sub
sbb
stos
pop
xor
jb
pop
in
repz
cmps
fisttp
pop
cmps
int3
xchg
push
mov
in
pop
cmps
int3
lahf
daa
xchg
int3
jmp
mov
cmp
xor
fmul
mov
cli
jno
repnz
jmp
and
repz
in
adc
aas
mov
sbb
int
mov
pop
xor
pop
cmp
add
adc
pop
pop
dec
inc
sbb
cdq
daa
movs
int3
jmp
int3
xchg
push
mov
cmps
pop
cmps
int3
lods
mov
xor
cmps
int
sub
int3
jmp
cmp
xchg
pop
xor
cmps
int3
push
repnz
jmp
retf
push
mov
pop
mov
scas
push
test
fs
ss
add
xor
cld
xchg
pop
cmps
xor
mov
pop
xor
xor
adc
mov
pop
fild
push
push
jmp
pop
xor
xor
jl
mov
into
jmp
cmps
fs
shr
aas
sub
xor
push
hlt
xchg
push
cmps
int
mov
pop
pop
aad
sbb
jl
stc
jb
dec
pop
vminsd
neg
lahf
cmps
int3
adc
sub
mov
loopne
mov
jmp
mov
loop
cmps
mov
scas
fs
jmp
pop
inc
push
fadd
adc
pop
pop
adc
mov
pop
fistp
push
cmps
int3
xchg
push
push
jmp
pop
xor
xor
jl
mov
into
jmp
cmps
fs
dec
lods
int3
jmp
popf
aas
sub
xor
push
hlt
xchg
push
cmps
int
mov
pop
pop
mov
sbb
jl
stc
jb
dec
xchg
(bad)
jmp
(bad)
sbb
sub
mov
loopne
mov
jmp
mov
loope
cmps
mov
scas
fs
jmp
pop
inc
push
fadd
adc
pop
pop
adc
mov
pop
fistp
push
push
jmp
pop
xor
sahf
mov
pop
cmps
int3
adc
cmp
adc
mov
int
sub
rcl
xor
jecxz
fild
cmps
int3
xchg
push
push
jmp
pop
xor
sahf
mov
pop
cmps
int3
adc
mov
pop
pop
inc
add
xor
lea
sub
xor
sbb
rcl
aam
jmp
dec
dec
(bad)
jmp
(bad)
sbb
sub
jle
xor
loopne
mov
jmp
mov
loopne
cmps
mov
scas
fs
jmp
pop
inc
push
fadd
adc
pop
mov
push
cmps
int
mov
sub
xchg
pop
cmps
int
repnz
out
pop
cmps
push
mov
ss
sbb
adc
mov
pop
mov
sbb
xor
fmul
jmp
cmps
xor
mov
add
jmp
cmps
mov
jmp
cmps
arpl
pop
or
popf
out
cmp
lods
fadd
adc
cmps
int
repnz
inc
sub
inc
adc
call
sub
cmp
sbb
xor
cld
out
pop
cmps
xor
popa
ficom
adc
in
jmp
cmps
xor
sub
xor
fcomp
cmp
pop
xor
fcom
adc
fcomp
adc
pop
mov
jmp
aam
mov
cmps
int3
inc
sub
jmp
pop
cmps
arpl
and
mov
jmp
xor
xchg
cmp
or
mov
xor
pop
mov
sbb
fs
adc
aam
les
int3
inc
sub
out
pop
cmps
arpl
mov
movs
mov
(bad)
xor
adc
cdq
cmp
mov
(bad)
jmp
cmps
arpl
pop
or
popf
out
cmp
(bad)
jb
stos
mov
mov
jmp
int
repnz
jmp
popa
mov
adc
fbld
xor
fadd
out
pop
xor
pop
or
jmp
ror
jmp
jge
push
pop
push
repz
xor
adc
fcomp
push
scas
pop
xor
pop
pop
int3
mov
retf
push
mov
cmps
int3
inc
dec
into
pop
adc
(bad)
sbb
cld
fucomip
pop
cmps
xor
mov
xor
pop
fild
pop
xor
mov
int
sub
int
das
fmul
jmp
cmps
arpl
jno
das
fmul
jmp
cmps
arpl
ds
daa
jb
fsub
adc
(bad)
jmp
cmps
mov
jmp
fcom
cdq
pop
leave
int3
jmp
mov
mov
aam
test
int3
xchg
dec
dec
mov
adc
stos
xchg
lahf
pop
mov
jmp
pop
popf
out
mov
xlat
and
adc
fadd
pop
mov
push
cmps
int
mov
cmps
int3
inc
retf
push
mov
cmps
int3
inc
sub
add
shl
and
cmp
lods
fadd
push
mov
cmps
int
repnz
inc
sub
inc
into
shl
sub
mov
pop
pop
cmp
pop
pop
xor
cld
sub
cmps
xor
inc
pop
xor
pop
fild
pop
xor
mov
jae
pop
push
shl
sub
jmp
int3
jmp
int3
cdq
daa
(bad)
jmp
int
and
aaa
adc
pop
shl
cmps
mov
mov
aam
cmps
pop
xor
cld
mov
jmp
ror
cmc
sub
jmp
jp
lock
fbld
xor
ficom
adc
fdivr
jl
mov
mov
pop
cmps
arpl
mov
sbb
sbb
mov
ror
jmp
xor
fcom
pop
cmps
arpl
cmps
xchg
pop
cmps
int3
lahf
daa
ror
jmp
adc
xchg
cmp
adc
pop
push
xchg
pop
cmp
jmp
xor
in
jmp
cmps
xor
es
xor
aam
jne
movs
int3
inc
pop
in
pop
jmp
cmps
fstp
push
mov
dec
pop
movs
int3
popf
jp
rcr
pop
shl
xchg
pop
cmp
jmp
sub
fadd
jmp
cmps
xor
pop
pop
adc
sub
cmps
mov
jmp
xor
loopne
mov
jmp
mov
jle
pop
mov
mov
jmp
jp
lock
das
movs
int3
jmp
unpckhps
mov
xchg
movs
int3
cdq
daa
cmp
jmp
pop
cmps
int
das
fnsave
jmp
dec
mov
neg
enter
pop
cmps
int
repnz
loopne
mov
jmp
mov
jle
pop
mov
mov
jmp
jp
lock
pop
ror
jmp
cs
scas
rcr
pop
shl
lahf
daa
(bad)
jmp
cmp
daa
jmp
mov
pop
cmps
int3
sub
pop
push
mov
pop
cmps
int3
lahf
daa
cmc
int3
jmp
cmp
pop
or
xchg
push
(bad)
jge
mov
cmps
int3
lahf
daa
mov
mov
pop
cmps
int3
sbb
or
pop
fimul
adc
pop
cmc
xchg
pop
cmps
int
mov
cmps
int3
inc
sub
inc
stos
fimul
adc
push
mov
jmp
rol
jmp
push
mov
inc
shl
popf
popa
fimul
adc
push
mov
jmp
rol
jmp
push
mov
jmp
rol
jmp
push
mov
jmp
rol
jmp
push
mov
repnz
xor
(bad)
jmp
cmps
arpl
dec
push
ins
dec
imul
jl
in
jno
retf
push
mov
pop
xor
push
adc
pop
xor
cmc
rcl
gs
dec
lahf
fistp
mov
call
retf
adc
mov
jl
pop
mov
cmps
loope
sub
shl
sub
popf
fistp
int3
xchg
lahf
fld
ror
push
pop
cmps
int3
jmp
mov
shl
mov
mov
jno
sahf
jbe
inc
inc
bound
sub
pop
hlt
pop
xor
or
int3
jmp
pop
push
jo
pop
xor
enter
pop
fs
dec
adc
sub
pop
xchg
push
sbb
jle
xor
jl
jge
adc
pop
pop
adc
out
adc
shl
inc
dec
outs
push
adc
push
lock
sub
lahf
call
and
pop
lods
pop
cmp
adc
mov
bnd
sub
in
xchg
xchg
push
mov
dec
xor
jl
mov
pop
xor
mov
leave
jae
mov
sbb
adc
pop
sti
popf
arpl
xor
mov
pop
mov
push
mov
shl
cdq
cmp
fcomp
adc
cmps
xor
push
mov
jmp
fsub
sbb
mov
push
mov
in
jno
xchg
cdq
mov
adc
jmp
loopne
pop
or
mov
inc
lods
push
mov
push
mov
mov
sbb
sbb
mov
push
mov
sbb
jmp
xor
arpl
int3
adc
movs
xor
cmps
ss
push
sbb
loop
inc
lods
push
mov
cdq
fisubr
mov
push
ds
sbb
add
sbb
test
pop
fisub
pop
cmps
int3
loop
inc
lods
push
mov
cdq
fiadd
sbb
adc
mov
repnz
scas
inc
lods
push
mov
cmps
int3
loop
inc
lods
push
mov
cdq
(bad)
mov
test
fnstcw
or
sbb
sbb
sbb
mov
pop
(bad)
pop
cmps
int3
loop
inc
lods
push
mov
cdq
fisubr
push
sti
popf
arpl
ds
sbb
adc
jecxz
xor
pop
fisub
cmps
inc
lods
push
mov
cdq
fiadd
push
or
ds
sbb
push
gs
ja
jecxz
xor
pop
ficomp
sub
ss
sbb
xchg
dec
test
mov
sbb
push
dec
pop
xor
clc
fisttp
call
fsubr
cwde
mov
mov
mov
adc
pop
xchg
clc
aas
sbb
xchg
bound
adc
mov
adc
clc
ja
jecxz
xor
stos
leave
jae
dec
cwde
xor
clc
fisttp
call
adc
cmps
ss
push
sbb
xchg
cmps
popa
lods
push
mov
pop
xor
arpl
ss
sbb
pop
dec
aam
adc
push
xor
push
sub
push
lods
pop
adc
rol
push
sub
inc
add
xor
adc
arpl
or
xor
xchg
mov
xchg
mov
fs
adc
pop
dec
cs
jge
aam
sbb
xchg
scas
inc
lods
push
mov
pop
inc
mov
add
ss
sbb
inc
sbb
xchg
arpl
adc
fnstcw
or
sbb
push
dec
dec
add
dec
push
xor
sar
jecxz
shl
sub
jno
push
pop
sub
es
xor
rol
push
sub
add
xor
arpl
adc
clc
jno
xchg
jbe
lods
out
ss
xor
push
push
test
fs
pop
cmp
and
xor
and
push
xlat
pop
int3
adc
xchg
(bad)
cmc
sub
popf
arpl
push
push
fs
mov
sbb
ss
sbb
xchg
lahf
sbb
inc
add
and
adc
adc
inc
push
and
loop
xor
lahf
(bad)
cmps
sub
xchg
scas
inc
lods
push
mov
xchg
mov
sahf
mov
pop
cmp
cmps
mov
rcl
sub
popa
scas
(bad)
mov
push
mov
xor
mov
popf
push
pop
mov
adc
pop
mov
push
mov
sbb
mov
leave
jae
fwait
pop
aas
test
pop
inc
iret
and
mov
scas
leave
jae
mov
pop
mov
adc
pop
mov
push
mov
sbb
mov
(bad)
jb
fwait
pop
aas
test
pop
inc
iret
pop
pop
inc
mov
mov
xor
sbb
jne
mov
lods
mov
xlat
not
(bad)
inc
hlt
push
mov
sti
cmp
mov
sbb
jl
jecxz
adc
out
ins
adc
shl
jl
jecxz
adc
mov
dec
mov
sbb
popf
pop
scas
aam
out
mov
push
mov
pop
xor
retf
push
mov
pop
xor
retf
push
mov
pop
xor
retf
push
mov
pop
xor
sub
ins
dec
imul
jl
pcmpgtb
and
int3
adc
in
jno
retf
push
mov
cmps
es
add
xor
out
sub
pop
mov
xlat
and
adc
sbb
popf
out
hlt
push
push
sbb
adc
ficom
mov
pop
xor
cmps
sub
push
les
pop
xor
out
xor
pop
hlt
push
jle
xor
aam
pusha
sbb
xor
(bad)
in
jno
gs
push
mov
push
jbe
mov
cmp
adc
and
cdq
xlat
mov
out
aam
cld
repnz
adc
pop
mov
add
jb
sub
mov
adc
sbb
inc
enter
enter
pop
sub
cld
dec
cmp
adc
sbb
inc
pop
sub
cdq
out
arpl
mov
jne
pop
int3
adc
in
jno
enter
add
xor
xor
jle
cmps
inc
lock
xchg
push
adc
fcomp
cmp
pop
xor
xlat
mov
xor
cmps
sub
jbe
repnz
inc
movs
das
sbb
inc
pop
dec
(bad)
mov
pop
mov
lods
or
push
mov
lock
cld
add
xlat
not
(bad)
xchg
dec
inc
hlt
push
pop
jo
inc
mov
fwait
sbb
sub
lahf
out
mov
add
adc
xchg
(bad)
lods
xor
sub
jle
xor
jle
aam
in
repnz
cld
repnz
inc
in
enter
push
or
pop
sub
jmp
imul
pop
shl
cmp
imul
or
cmp
cmps
ss
push
sbb
jmp
push
pop
jmp
dec
and
popa
or
icebp
and
mov
sbb
inc
mov
lods
out
aaa
sub
sub
sbb
xor
sub
sbb
xor
sub
sbb
xor
sub
sbb
xor
push
mov
mov
dec
mov
add
int3
adc
out
jbe
lods
out
aaa
adc
in
adc
out
daa
sub
pop
xor
mov
and
pushf
mov
fcmovu
push
lods
out
daa
add
mov
test
mov
icebp
popa
int3
ror
xchg
dec
pop
cmp
cmps
pop
push
cld
mov
push
test
xor
sbb
pop
ss
sbb
inc
dec
loop
adc
push
test
xor
add
dec
es
push
sbb
inc
repnz
dec
mov
(bad)
jmp
or
cdq
test
pop
fcmovu
adc
fcmovu
adc
sbb
lahf
out
mov
in
and
mov
adc
mov
sbb
int3
jg
dec
mov
cmps
mov
sbb
sbb
adc
pop
cmps
ss
push
sbb
xchg
sahf
addr16
popa
not
retf
pop
and
adc
adc
xchg
sahf
pop
aaa
popa
loop
retf
xchg
dec
pop
mov
movs
pop
inc
and
mov
test
movs
gs
pusha
mov
lea
pop
inc
pop
sub
movlps
pop
jbe
das
or
aaa
xchg
bound
adc
(bad)
sub
adc
dec
sub
movlps
fcmovu
pop
and
push
xlat
pop
mov
sbb
xor
pop
push
std
mov
(bad)
jmp
or
cdq
test
pop
fcmovu
adc
mov
popf
out
mov
pop
cmps
pop
retf
xchg
dec
pop
mov
adc
gs
in
jmp
popf
pop
fcmovu
push
and
adc
and
xor
ror
xchg
dec
pop
cmp
cmps
pop
movaps
push
push
jmp
int3
adc
pop
inc
or
push
push
add
or
mov
cmps
shl
add
fmul
adc
pop
xor
and
into
jmp
push
ins
dec
imul
sbb
pcmpgtb
cmps
sub
inc
sbb
inc
add
dec
pop
mov
pushf
pop
inc
sbb
mov
fmul
cld
mov
pop
mov
pop
mov
sbb
xchg
fs
int3
adc
in
jno
lods
out
data16
mov
adc
sub
cmps
loop
cmps
push
cmps
sub
test
mov
pop
inc
xor
sub
xor
lods
shr
pop
out
mov
adc
iret
mov
leave
jae
fwait
sbb
dec
mov
sahf
cmps
inc
mov
or
mov
sbb
sub
mov
or
dec
xor
cmps
leave
jae
and
sti
jmp
stos
xor
mov
xor
and
cmc
adc
pop
mov
jmp
sub
sti
jmp
mov
xor
and
cmc
adc
aaa
sub
(bad)
mov
mov
in
adc
sub
neg
std
pop
push
icebp
sbb
sbb
inc
cmc
mov
out
pop
cmps
cmc
xchg
inc
xchg
jmp
mov
dec
mov
pop
mov
movs
lahf
mov
jge
int3
adc
pop
cmps
xor
mov
xchg
jmp
sub
sbb
sar
cmps
mov
cmps
cmp
push
and
ror
pop
cmps
xor
push
test
and
je
sbb
push
xlat
pop
fmul
out
cmps
out
cmps
int3
popf
aaa
icebp
in
jmp
xor
sbb
push
ds
sbb
inc
dec
push
imul
cmps
int3
popf
cmps
int3
arpl
aaa
stos
fsubr
pop
xor
or
push
ds
xor
mov
in
jmp
cmps
pop
add
shl
push
push
mov
cmps
int3
popf
cmps
dec
adc
push
mov
jmp
push
test
leave
cdq
sub
scas
loopne
xor
daa
adc
jmp
lahf
mov
dec
cmps
int3
adc
out
cmps
out
cmps
int3
aad
pop
mov
mov
mov
nop
cmp
adc
out
cmps
out
cmps
int3
aad
pop
mov
push
mov
cmps
int3
jmp
sub
mov
jge
int3
adc
frstor
pop
cmps
int3
popf
daa
sub
pusha
push
sbb
lahf
aaa
(bad)
in
jmp
shl
aad
dec
repnz
jae
sub
(bad)
sti
pop
cmps
add
dec
js
adc
pop
xor
push
push
mov
pop
repnz
mov
jmp
fdiv
adc
pop
xor
aas
lods
fsubr
pop
das
in
daa
fucomp
jmp
or
aad
pop
xor
cmps
sub
xchg
clc
dec
cmps
int3
adc
aad
adc
xor
jmp
pop
int3
mov
pop
in
jmp
pop
cmps
(bad)
push
mov
pusha
rcr
xchg
jl
int3
adc
les
push
xchg
cmps
mov
aad
pop
xor
rol
scas
and
retf
sti
pop
cmps
inc
sbb
cmps
pop
xor
fmul
jmp
pop
xor
shr
adc
fdiv
pop
and
mov
mov
out
int3
popa
pop
mov
out
pop
cmps
push
daa
mov
jmp
pop
xor
jl
int3
cmp
xor
(bad)
sti
pop
cmps
cmp
jmp
inc
mov
jp
int3
jmp
ret
mov
pop
cmp
aaa
stos
fsubr
pop
cwde
rcl
sub
xor
sbb
popf
aaa
lods
fsubr
pop
ficom
adc
int3
(bad)
sti
pop
cmps
repnz
pop
repnz
mov
push
and
pop
cmps
mov
jmp
mov
ficom
arpl
xor
and
jmp
lods
fsubr
pop
fmul
adc
pop
xor
cmps
ss
push
sbb
xchg
pop
mov
inc
dec
retf
push
mov
pop
mov
jmp
fwait
xor
cmps
xor
shl
xchg
pusha
and
push
sub
stos
retf
mov
jmp
int3
stos
retf
mov
mov
int
jmp
shl
lahf
aaa
int
jmp
pop
xor
pop
shl
lahf
daa
(bad)
in
jmp
shl
jle
aam
lods
jge
int3
inc
pop
in
out
retf
pop
cmps
fcmovnbe
cmc
pop
xor
pop
pusha
mov
jge
int3
popa
loope
mov
jge
int3
popf
daa
in
in
jmp
pop
mov
jge
int3
xchg
pop
mov
inc
xlat
retf
adc
in
in
jmp
cwde
fstp
lock
aad
push
popa
jl
pop
xor
cmps
fmul
loopne
cmp
aaa
stos
fsubr
pop
cwde
rcl
sub
out
retf
pop
cmps
sbb
sub
and
sbb
sbb
sar
cmps
repnz
enter
int3
(bad)
sti
pop
cmps
pop
adc
pop
xor
(bad)
gs
shl
sbb
mov
push
xor
arpl
adc
shl
sbb
push
std
mov
(bad)
mov
pop
xor
mov
fadd
sti
pop
cmps
mov
adc
fcmovu
jmp
sbb
xlat
retf
pop
cmps
cmc
xchg
add
sahf
lock
int3
adc
in
xlat
retf
pop
cmps
mov
adc
jno
in
mov
xchg
call
cld
mov
dec
mov
xchg
call
cld
cmps
(bad)
adc
push
jge
outs
cmps
ss
push
sbb
sbb
nop
retf
repnz
or
and
nop
retf
xor
adc
push
std
mov
shl
and
mov
cdq
out
aaa
popf
daa
mov
mov
push
mov
lahf
daa
lods
fsubr
pop
pop
retf
cmp
mov
or
shl
int3
jmp
push
test
arpl
xchg
into
pop
cmps
cmc
adc
pop
xor
sub
xchg
sahf
xor
pop
xor
(bad)
sub
sub
xchg
sahf
fs
adc
pop
xor
(bad)
sub
sub
cmp
daa
cli
in
jmp
push
repz
dec
sbb
sub
sar
cmps
arpl
pop
test
jmp
cmps
xchg
jge
int3
cld
aam
int3
jmp
popf
aas
xchg
pop
mov
inc
push
and
(bad)
sti
pop
cmps
xor
pop
cwde
rcl
sub
rcl
mov
dec
fcmovne
pop
cmps
mov
loopne
cmps
int3
xchg
pop
lods
fsubr
pop
pop
aaa
adc
sub
jmp
sub
sbb
xchg
push
mov
jmp
push
test
leave
cdq
sub
scas
loopne
xor
daa
jbe
jmp
push
ins
dec
imul
sub
pcmpgtb
pop
lahf
das
les
arpl
adc
sbb
adc
xchg
sub
and
pop
shl
pop
xor
daa
in
adc
push
xor
stos
xchg
cdq
fist
jno
sbb
adc
stos
xchg
xchg
cdq
ds
sbb
fdiv
xor
adc
sbb
adc
dec
dec
mov
jecxz
sbb
mov
pop
pop
fcomp
and
adc
sar
xor
(bad)
mov
jbe
fs
adc
cli
xor
shl
sbb
lds
out
out
daa
(bad)
xor
fnstenv
mov
fs
pop
dec
js
sbb
popf
pusha
pop
icebp
popf
mul
push
aam
pop
xor
and
adc
sub
leave
adc
push
mov
cmps
sub
xchg
pop
sbb
and
adc
push
sbb
aam
push
mov
movs
fcmove
adc
pop
mov
pop
pop
cmp
loope
push
aam
pop
xor
and
adc
pop
mov
pop
pop
mov
cmp
lods
out
xor
push
pop
xor
push
lds
popa
inc
adc
sbb
adc
sbb
adc
lods
(bad)
pop
cmps
cmc
push
push
pop
fadd
sub
mov
mov
inc
adc
sbb
adc
push
pop
mov
push
pop
inc
lock
popf
pusha
pop
icebp
popf
mul
mov
mov
sbb
adc
std
pop
push
icebp
repz
cmc
rol
sbb
arpl
pop
(bad)
imul
sbb
popf
popa
xor
adc
pop
gs
mov
inc
mov
xchg
int3
push
and
adc
mov
mov
pushf
add
add
mov
cmps
xor
shr
jecxz
shl
sub
lock
sub
cld
fimul
xor
push
mov
in
xchg
push
mov
sbb
pop
(bad)
repz
iret
retf
pop
cmps
mov
inc
pop
sub
cdq
daa
pop
shr
pop
or
jge
pop
xor
pop
or
sbb
dec
add
sub
ins
dec
imul
out
sub
xchg
push
out
xor
xor
jle
cmps
inc
sbb
pop
frstpm(287
icebp
pop
xor
call
icebp
pcmpgtb
and
pop
adc
fnstenv
adc
xor
jle
xor
jl
pop
xor
or
adc
lahf
mov
pop
sub
xchg
fist
pusha
movs
shl
and
and
pop
scas
aam
out
mov
cld
cli
or
adc
call
dec
dec
popa
adc
shl
sbb
aam
out
mov
imul
test
retf
popf
out
int3
popa
push
or
popa
pop
pand
lock
xor
outs
bound
shl
dec
pop
mov
ins
xor
adc
pop
push
icebp
and
mov
pop
push
xor
xor
pop
pop
adc
pop
pop
adc
pop
repz
push
fcmovnbe
repz
xor
xlat
pop
add
dec
cmp
jecxz
shl
sub
pop
adc
mov
inc
mov
shl
xchg
push
jae
sahf
pop
xor
shl
jle
aam
call
scas
pand
mov
xor
jl
mov
int
mov
or
adc
mov
(bad)
lahf
out
mov
adc
push
ins
dec
imul
inc
cmc
out
add
mov
pop
xchg
mov
xor
jle
xor
adc
cdq
int3
popa
stos
mov
inc
mov
cmps
int3
popa
cmps
push
retf
jecxz
shl
sub
pop
adc
mov
inc
mov
sbb
inc
pop
sub
jmp
push
gs
or
adc
mov
inc
mov
mov
popf
pop
push
ins
frstor
mov
inc
sub
shl
movs
mov
push
pop
in
adc
push
xor
adc
or
imul
fwait
mov
popa
scas
xor
loopne
(bad)
cdq
mov
pusha
adc
(bad)
add
sbb
lods
out
aaa
or
xor
hlt
loopne
fild
push
jo
call
cld
xchg
cmps
fcomp
and
adc
pop
cmc
adc
dec
in
sbb
popf
pusha
pop
icebp
popf
mul
jno
dec
cmp
mov
pop
push
icebp
repz
sub
lahf
xlat
push
hlt
push
pop
mov
lods
mov
jbe
add
xor
(bad)
add
and
adc
or
rcl
mov
inc
mov
push
or
shl
xor
mov
xor
shl
sub
iret
dec
cld
add
xlat
not
(bad)
xchg
dec
jge
inc
cmc
loop
outs
push
dec
mov
xlat
les
mov
dec
pop
mov
dec
pop
mov
inc
pop
mov
(bad)
pop
sbb
lods
mov
cld
mov
xlat
and
adc
out
sub
sbb
sbb
cmps
fdivr
sbb
pop
adc
scas
rcr
lods
out
jbe
lods
out
ja
push
(bad)
or
cmps
xor
ficomp
mov
pop
xor
cmps
xor
shl
lods
out
jae
sub
fsub
sbb
sbb
sub
imul
push
and
adc
mov
xlat
sub
sbb
push
test
mov
xor
div
adc
dec
sar
aas
out
cmp
out
mov
out
adc
scas
push
test
data16
out
popa
adc
mov
jbe
and
mov
push
stos
shl
lods
out
popa
sbb
mov
push
inc
shl
std
pop
push
test
leave
mov
adc
loop
call
iret
imul
repz
leave
mov
test
push
mov
test
sbb
push
xor
mov
test
leave
mov
test
sub
test
leave
mov
adc
loop
cmc
loopne
mov
and
fdiv
test
leave
mov
test
push
mov
test
pusha
jmp
xor
mov
test
cmp
jae
shl
jmp
xor
mov
adc
pop
imul
andps
sbb
test
inc
mov
pop
cmps
leave
mov
test
leave
add
xor
mov
test
leave
or
xor
mov
test
leave
mov
scas
leave
mov
test
leave
inc
fdiv
leave
mov
test
leave
push
std
adc
jmp
dec
jae
not
jae
stos
sub
jno
jb
jno
dec
dec
xchg
popa
cmp
lods
mov
xor
test
leave
mov
test
fcmove
adc
leave
mov
test
loop
call
mov
test
leave
mov
test
or
popf
push
mov
test
leave
mov
test
add
stos
stos
sub
add
leave
mov
test
leave
mov
adc
fcmove
adc
leave
mov
test
loop
cmc
loopne
mov
test
jo
test
leave
mov
test
or
popf
push
mov
test
leave
mov
test
add
stos
dec
dec
xchg
xor
test
leave
mov
test
mov
mov
test
fisubr
mov
int3
xlat
popa
or
icebp
and
mov
sbb
shl
gs
and
out
mov
cld
push
cmp
popf
out
mov
popf
out
mov
hlt
sub
popf
out
push
shl
test
xor
loope
inc
mov
shl
sub
popf
jp
ret
inc
dec
xor
jmp
add
xchg
fbld
jbe
mov
push
xor
sbb
lods
pop
xor
push
test
ror
cmp
sub
(bad)
in
sub
aaa
or
es
add
xor
add
out
jle
mov
aaa
or
sub
popf
jp
ret
push
lods
out
and
adc
leave
cmp
out
mov
inc
pop
xor
jl
pop
xor
sbb
inc
dec
mov
test
or
cdq
out
cmp
mul
icebp
pop
mov
sbb
inc
sub
sbb
loope
xor
shl
sub
xchg
fs
push
jmp
test
jnp
fs
mov
pop
cmps
int3
dec
cld
add
xlat
not
(bad)
xchg
dec
imul
jmp
ror
jge
mov
cdq
bound
push
mov
jecxz
sub
push
rcr
sbb
adc
pop
add
dec
outs
xor
aam
hlt
repnz
inc
sbb
ror
pop
(bad)
sbb
call
mov
mov
repz
in
adc
dec
push
mov
jne
mov
mov
mov
in
adc
xchg
sub
jno
cmc
mov
pop
mov
pop
mov
test
dec
or
std
out
pop
xor
pop
sbb
popf
out
fadd
and
mov
lahf
mov
mov
push
aaa
mov
in
adc
pop
jmp
pop
sub
mov
in
adc
sbb
push
mov
jno
xchg
dec
mov
pop
pop
xchg
rcr
xor
cmps
or
mov
out
(bad)
fild
icebp
sbb
push
in
lahf
mov
pop
mov
mov
pop
mov
push
test
sub
rol
mov
adc
mov
mov
loope
push
mov
cdq
mov
or
or
pop
xor
pop
sbb
popf
out
fadd
and
mov
lahf
mov
mov
push
aaa
mov
in
adc
pop
jmp
push
sub
mov
in
adc
sbb
push
shl
popf
jp
jbe
sub
loopne
add
sbb
adc
lea
int3
pop
sbb
sub
sub
jno
lods
out
data16
jae
mov
push
mov
sbb
popf
scas
arpl
test
div
cmps
lock
sbb
lahf
scas
test
and
adc
dec
inc
mov
push
jbe
cmc
sbb
xor
adc
mov
call
stos
xor
jle
xor
jle
xor
jl
pop
xor
cmp
sahf
adc
adc
sbb
jle
aam
cld
repnz
inc
hlt
icebp
cmps
inc
lock
out
jp
mov
shl
sub
jns
mov
adc
adc
cdq
jae
cld
add
xlat
not
(bad)
xchg
dec
inc
xor
or
sbb
push
popf
in
ret
jecxz
shl
popf
fdiv
pusha
push
sbb
mov
mov
loope
sub
(bad)
jmp
dec
scas
js
mov
dec
bound
pop
pop
repnz
mov
add
popf
pop
shl
xchg
push
jp
adc
lahf
jbe
mov
adc
adc
out
dec
jmp
mov
mov
mov
out
movs
cwde
retf
xchg
mov
xchg
pusha
cmp
jmp
fnstenv
mov
push
inc
fbld
jmp
cmps
xor
sub
xor
fwait
(bad)
sub
shl
pop
int3
jmp
push
xchg
movs
cmps
int3
jmp
aam
jmp
cmps
int3
inc
retf
push
mov
pop
mov
jmp
mov
pop
mov
test
pop
adc
pop
pop
adc
pop
pop
adc
pop
jae
daa
mov
fist
jmp
jmp
rol
cmp
xlat
push
mov
push
adc
xor
cdq
daa
test
pop
adc
pop
in
adc
in
(bad)
jmp
jmp
jmp
mov
push
mov
in
jno
icebp
xor
retf
loopne
mov
jmp
mov
pop
mov
adc
enter
arpl
jno
das
fmul
jmp
xor
cmps
ss
push
sbb
jl
xchg
retf
push
mov
cmps
int3
inc
retf
adc
mov
adc
pop
pusha
jl
xchg
retf
push
mov
(bad)
sbb
pop
xor
stc
nop
lock
sub
lahf
xlat
dec
mov
call
push
ss
push
sbb
xchg
gs
push
mov
aam
in
repnz
call
popf
pop
cmp
enter
enter
scas
cmps
inc
sbb
ds
mov
cmps
jae
sahf
pop
xor
shl
sub
int3
popa
pop
mulps
mov
inc
call
mov
sbb
mov
call
xchg
fisttp
pop
pop
retf
popf
cmps
inc
add
je
mov
sub
jmp
dec
int3
popa
scas
cmps
inc
sbb
push
test
pop
xchg
sub
pop
adc
pop
mov
popa
mov
inc
sbb
cmp
movs
pop
xor
popf
sub
call
sbb
fdiv
ret
lods
pop
xor
out
arpl
xor
adc
pop
pop
adc
sub
jmp
push
(bad)
bound
add
xlat
inc
int3
popa
mov
inc
or
pop
int3
popa
mov
inc
call
mov
cmps
inc
call
mov
fcomp
xchg
out
pop
xor
xlat
movs
(bad)
pop
xor
popa
or
icebp
and
inc
add
sbb
jb
sbb
stos
push
sbb
je
sahf
xor
pop
mov
mov
xor
inc
shl
sub
jbe
repnz
adc
pop
pop
adc
sub
jmp
push
fld
bound
setns
inc
arpl
pop
pop
adc
sub
jmp
movs
fstp
bound
fist
jmp
lods
(bad)
sbb
adc
mov
hlt
jmp
movs
(bad)
in
xor
adc
nop
lock
sub
mov
aam
popf
pop
jo
popf
fimul
call
(bad)
jp
pop
out
xor
jne
mov
movs
out
mov
jbe
in
mov
cdq
jae
call
adc
pop
pop
adc
pop
pop
jne
sbb
cld
add
xor
movs
out
mov
push
retf
adc
xchg
movs
out
mov
pop
mov
frstor
pop
push
imul
aad
sbb
push
retf
loopne
mov
popf
inc
or
hlt
push
mov
sbb
iret
pop
fistp
mov
inc
pop
shr
call
sub
popf
pop
jo
inc
sub
inc
add
(bad)
je
mov
mov
and
cmps
pop
xor
mov
cdq
xor
rcr
mov
pushf
pop
inc
shr
gs
in
jmp
lahf
out
cmc
adc
loope
add
shl
sub
popf
jp
fsubr
sub
fst
pop
mov
pop
mov
xor
push
pop
jmp
pop
sub
cld
sbb
adc
sbb
popf
pusha
push
mov
pop
xchg
cdq
fcom
and
mov
pop
xor
add
xlat
not
(bad)
xchg
dec
dec
pusha
inc
cmc
shr
sbb
pop
cmp
push
shl
inc
dec
retf
mov
sahf
loop
and
fcmovnbe
loope
xor
ror
xor
scas
fadd
lods
out
aaa
daa
and
cmp
adc
add
xchg
pop
or
sub
jb
sbb
adc
mov
sbb
or
mov
shl
xchg
cmp
pop
loopne
adc
pop
mov
popf
jge
inc
cwde
fst
sub
popf
jne
hlt
jne
ror
cmc
xor
loopne
fs
push
pop
xor
popf
daa
jb
sbb
sbb
mov
(bad)
dec
cld
add
xlat
not
(bad)
lods
out
pop
xor
out
adc
or
sbb
dec
mov
xchg
pop
xor
pop
pop
mov
dec
cmps
into
jmp
rol
cmp
daa
mov
int3
popa
scas
mov
in
cmps
mov
stos
shl
sbb
bound
mov
pop
cmps
int
mov
mov
repz
test
adc
sub
cld
sbb
adc
fsubr
jmp
cmps
mov
pop
mov
mov
pop
movs
int3
lahf
pop
or
int3
pop
movs
int3
es
out
pop
cmps
mov
adc
push
pop
push
dec
retf
mov
cmps
int3
lods
rcl
push
mov
into
jmp
lahf
int3
popa
stos
xor
adc
jecxz
xor
shl
sub
(bad)
jmp
cmps
mov
push
and
adc
mov
mov
jmp
mov
int3
jmp
popf
cmp
jno
pop
sub
cld
data16
adc
popf
cmp
jno
pop
in
iret
jmp
cmps
fistp
push
fstp
pop
xor
cmp
dec
pop
retf
push
mov
cmps
int3
cld
cs
adc
popf
cmp
jmp
adc
rol
and
add
ja
pop
xor
pop
movs
int3
jmp
xor
push
adc
(bad)
add
inc
jnp
mov
xchg
int3
jmp
cmps
sbb
adc
push
xor
rol
and
ret
hlt
loopne
int3
mov
dec
jp
adc
(bad)
sbb
outs
in
push
mov
cmps
int3
cld
mov
xor
popf
cmp
outs
sbb
xor
rol
and
ret
hlt
loopne
int3
mov
dec
mov
adc
(bad)
sbb
test
imul
pop
cmps
mov
adc
loopne
adc
pop
stos
jecxz
fcmove
adc
jp
popf
out
xor
cmp
iret
jmp
cmps
fs
xchg
cmc
mov
push
mov
cmps
inc
xor
dec
in
push
mov
cmps
int3
inc
retf
push
mov
pop
xor
out
xor
cmp
dec
pop
retf
push
mov
cmps
int3
cld
retf
adc
popf
cmp
jno
pop
in
iret
jmp
cmps
fild
pop
xor
mov
ja
mov
pop
stos
jecxz
fcmove
adc
dec
pop
in
sbb
jmp
movs
int3
jmp
mov
stos
xor
retf
loopne
int3
mov
dec
dec
ja
mov
mov
mov
pop
stos
jecxz
fcmove
adc
jp
aad
pop
xor
cmp
iret
jmp
cmps
fs
xchg
cmc
mov
push
mov
fadd
or
xor
mov
adc
rol
lock
retf
mov
jmp
mov
push
mov
cmps
into
jmp
cmps
inc
add
fmul
jmp
cmps
arpl
jno
repnz
push
mov
mov
push
mov
pop
xor
cmps
and
cld
jmp
adc
rol
lock
inc
retf
push
mov
pop
xor
loope
xor
cmp
dec
pop
retf
push
mov
cmps
int3
cld
out
xor
popf
cmp
mov
pop
mov
mov
mov
and
jno
pop
in
iret
jmp
cmps
fisttp
push
fcmovnb
loopne
xor
cmp
dec
pop
retf
push
mov
cmps
int3
cld
push
sbb
adc
popf
cmp
jno
pop
sub
lahf
daa
movs
int3
jmp
xor
jno
mov
retf
mov
pop
stos
jecxz
fcmove
adc
dec
pop
fistp
jmp
movs
int3
jmp
mov
stos
loope
dec
mov
fdiv
jmp
cmps
mov
adc
loopne
adc
pop
stos
jecxz
fcmove
adc
dec
pop
in
sbb
jmp
movs
int3
jmp
mov
stos
mov
push
mov
pop
xor
cmps
and
cld
mov
xor
cmp
adc
rol
lock
inc
retf
push
mov
pop
xor
sbb
xlat
pop
xor
cld
(bad)
jmp
cmps
xor
in
xor
fdiv
adc
cmps
xor
mov
movs
int3
adc
das
mov
jmp
fmul
xchg
pop
cmps
int
shr
mov
jmp
in
jmp
cmps
cmp
sahf
bound
adc
rol
and
mov
mov
mov
pop
push
mov
cmps
mov
jne
hlt
jne
aam
adc
cmps
int3
inc
retf
push
mov
cmps
int3
inc
dec
(bad)
jb
mov
test
int3
xchg
sbb
mov
pop
cmps
mov
mov
cmps
int3
jmp
in
(bad)
jmp
cmps
int3
popa
mov
cmps
int3
inc
sub
iret
jmp
cmps
arpl
jno
repnz
push
mov
mov
push
mov
pop
xor
cmps
and
jl
xchg
pop
in
iret
jmp
cmps
fistp
pop
xor
mov
jb
mov
pop
stos
jecxz
fcmove
adc
dec
pop
fistp
jmp
movs
int3
jmp
mov
stos
mov
push
mov
pop
xor
cmps
and
jl
mov
iret
jmp
cmps
fucomi
loop
xor
push
cmps
into
jmp
pop
xor
cmps
mov
jmp
fmul
xchg
or
fucomip
pop
cmps
mov
ror
xor
shl
sub
retf
jmp
cmps
fimul
xor
pop
cmp
jmp
test
mov
fsub
cmps
int
lods
fisub
mov
cmps
int
sub
fucomip
pop
cmps
int3
popa
mov
push
loopne
mov
jmp
mov
push
mov
aam
loopne
movs
int3
xchg
push
jae
sahf
pop
xor
shl
jb
in
jmp
cmps
mov
lods
pusha
xor
fdiv
adc
cmps
arpl
adc
cmps
mov
jmp
cdq
pop
xor
pop
or
mov
pop
mov
jmp
in
(bad)
jmp
cmps
int3
popa
mov
movs
int3
lahf
daa
movs
int3
jmp
xor
or
mov
mov
aad
daa
loope
jmp
pop
movs
int3
popf
fs
sub
pop
xor
cmps
and
jl
xchg
pop
in
iret
jmp
cmps
fcmovnbe
popf
pop
xor
popf
pop
xor
cmp
dec
pop
retf
push
mov
cmps
int3
cld
add
adc
popf
cmp
(bad)
xor
push
xor
rol
and
ret
hlt
loopne
int3
mov
dec
and
mov
in
ret
jmp
cmps
(bad)
cdq
pop
xor
mov
cmps
int3
cdq
daa
pop
xor
pop
or
mov
icebp
mov
jecxz
cmps
mov
scas
shl
sbb
pop
cmps
int3
jl
xchg
pop
in
iret
jmp
cmps
fstp
popf
pop
xor
pushf
pop
xor
cmp
dec
pop
retf
push
mov
cmps
int3
cld
stos
xor
popf
cmp
xor
sbb
adc
rol
and
clc
retf
int3
mov
dec
mov
neg
test
fisttp
test
xor
scas
retf
pop
dec
pop
retf
push
mov
cmps
int3
cld
sbb
adc
popf
cmp
jno
pop
in
iret
jmp
cmps
(bad)
push
(bad)
pop
xor
cmp
dec
aaa
dec
push
or
adc
pop
stos
jecxz
or
jmp
xor
cld
out
xor
and
xor
push
xor
rol
and
outs
retf
int3
mov
dec
adc
sbb
mov
jo
pop
fist
test
xor
scas
retf
pop
dec
pop
retf
push
mov
cmps
int3
cld
and
and
xor
push
xor
rol
and
ret
hlt
loopne
int3
mov
dec
mov
neg
out
push
adc
loopne
adc
pop
stos
jecxz
fcmove
adc
jp
mov
pop
xor
cmp
iret
jmp
cmps
fs
xchg
cmc
mov
sub
xor
retf
int3
mov
dec
jmp
sub
(bad)
jmp
cmps
mov
adc
loopne
adc
pop
stos
jecxz
fcmove
adc
dec
pop
in
sbb
jmp
movs
int3
jmp
mov
stos
xor
retf
int3
mov
dec
ss
adc
(bad)
sbb
jb
adc
loopne
adc
pop
stos
jecxz
fcmove
adc
dec
pop
in
sbb
jmp
movs
int3
jmp
mov
stos
xor
retf
int3
mov
dec
outs
push
adc
(bad)
sbb
test
(bad)
sahf
pop
xor
cmp
dec
pop
retf
push
mov
cmps
int3
cld
scas
xor
popf
cmp
pop
or
jmp
xor
retf
arpl
outs
xor
popf
and
push
xor
push
xor
rol
and
ret
hlt
loopne
int3
mov
dec
xchg
unpcklps
test
pop
adc
sbb
jmp
movs
int3
jmp
mov
stos
mov
sub
pop
xor
cmps
and
jl
mov
iret
jmp
cmps
fistp
push
fistp
pop
xor
cmp
hlt
add
pop
xor
in
jmp
cmps
fs
test
cmc
mov
sub
mov
sub
pop
xor
cmps
and
jl
mov
iret
jmp
cmps
fld
sahf
pop
xor
jg
xor
pop
movs
int3
jmp
mov
stos
rol
cmp
inc
bound
adc
push
xor
rol
and
ret
hlt
loopne
int3
mov
dec
cmps
or
(bad)
sbb
loop
adc
loopne
adc
pop
stos
jecxz
fcmove
adc
jp
mov
rcr
cmp
iret
jmp
cmps
fs
xchg
cmc
mov
das
mov
xor
leave
loopne
int3
mov
dec
out
or
(bad)
sbb
pop
pop
adc
pop
pop
adc
pop
pop
adc
pop
jae
xlat
push
(bad)
daa
mov
jmp
mov
movs
int3
jmp
pop
adc
in
jmp
cmps
fs
pop
in
iret
jmp
cmps
int3
mov
dec
(bad)
or
cmps
xchg
pop
movs
int3
cld
mov
adc
in
iret
jmp
cmps
fcmovnb
xchg
pop
xor
daa
loope
jmp
dec
out
adc
shl
dec
cld
add
xlat
not
(bad)
xchg
dec
pop
xor
push
mov
and
pop
push
jbe
mov
in
adc
push
test
or
jg
xor
pop
or
leave
cwde
pop
xor
xor
xchg
pop
cmps
int3
jmp
xor
adc
(bad)
hlt
push
cmps
int3
xchg
inc
mov
pop
pop
mov
data16
xor
jno
retf
push
mov
(bad)
test
cmps
int3
jl
test
retf
push
mov
pop
pop
pop
mov
test
adc
gs
cli
xlat
not
(bad)
xchg
dec
lds
adc
or
sbb
loope
add
sub
mov
pop
cmps
mov
jmp
out
mov
mov
mov
into
jmp
shl
sub
adc
daa
aad
jmp
ror
cmp
jns
jbe
sub
(bad)
pop
xor
mov
stc
into
jmp
pand
pop
xor
pop
cmps
xchg
outs
xor
or
lahf
das
and
jmp
aam
push
cmps
aam
push
mov
movs
int3
jmp
mov
gs
mov
adc
fadd
pop
cmps
int3
mov
dec
dec
add
mov
cmps
int3
jmp
ror
pop
mov
and
sar
cdq
not
lahf
das
sub
jmp
aam
push
mov
sbb
jmp
pop
in
mov
pop
mov
jmp
dec
pop
adc
fcom
cld
xchg
pusha
xor
mov
fist
dec
xor
adc
xor
adc
push
movs
int3
jmp
xor
jle
xor
xor
(bad)
xor
mov
and
xor
adc
mov
jmp
xor
pop
or
jmp
mov
and
movs
int3
jmp
in
mov
mov
pop
in
mov
mov
pop
in
xchg
jmp
daa
in
into
jmp
or
sub
data16
xchg
movs
int3
jmp
cdq
inc
sbb
mov
and
pop
xor
xor
xchg
pop
cmps
int3
jmp
mov
sub
pop
mov
shr
fadd
cdq
daa
movs
int
pop
or
test
jne
int3
jmp
fdiv
shl
sbb
mov
pop
cmps
arpl
sahf
popa
xor
popf
das
shl
loope
jmp
sbb
pop
inc
mov
fcomp
pop
cmps
mov
jmp
push
shl
mov
jmp
pop
xor
pop
pop
inc
or
sahf
mov
pop
cmps
int3
adc
retf
cdq
daa
loope
jmp
or
test
dec
das
fcom
cdq
daa
loope
jmp
or
enter
enter
enter
pop
cmps
int3
jmp
xor
cld
mov
xor
cdq
cmp
dec
pop
xor
cmps
fcmovnb
xchg
pop
xor
mov
cmps
int3
jl
xchg
retf
push
mov
cmps
int3
inc
dec
sahf
add
mov
fcomp
pop
cmps
xor
mov
retf
cmp
daa
movs
int
pop
or
jle
xor
loop
xor
call
mov
ins
xor
fcomp
pop
cmps
xor
pop
gs
call
ins
mov
pop
xor
pop
pop
inc
push
retf
adc
mov
and
pop
xor
inc
shl
popf
xor
adc
pop
cmps
int3
jmp
or
rcl
xor
loopne
mov
jmp
mov
test
scas
fs
jmp
pop
inc
xor
cld
scas
jmp
pop
pop
retf
popf
gs
xchg
pop
(bad)
pop
pop
mov
std
ja
adc
pop
mov
movs
int3
jmp
aam
mov
dec
xor
adc
fcomp
je
pop
xor
fiadd
adc
xor
jmp
std
into
jmp
mov
daa
mov
movs
int3
jmp
loop
adc
shl
jmp
hlt
dec
cld
add
(bad)
cmps
pop
popfw
inc
fcmovu
add
pcmpgtb
movs
mov
aam
out
mov
rcr
cmp
dec
push
adc
fwait
push
popf
mul
jmp
(bad)
(bad)
shl
pop
sub
cld
outs
push
adc
fwait
push
popf
imul
xor
fwait
push
popf
imul
xor
out
callw
cmp
imul
data16
sbb
xor
jbe
xor
lahf
add
and
adc
out
mov
in
sub
sub
jae
dec
mov
adc
(bad)
sbb
cmp
repnz
and
scas
push
test
aam
adc
push
and
adc
pop
sbb
dec
xor
add
ror
adc
lods
out
jbe
das
sbb
callw
cmp
imul
arpl
cmps
push
retf
inc
enter
or
enter
dec
dec
add
shl
popf
pop
push
int3
inc
dec
loop
adc
aam
in
repnz
pop
xchg
pop
xor
sub
adc
shl
std
pop
push
icebp
sbb
sub
mov
pop
pusha
inc
cmc
shr
sbb
ror
adc
daa
in
jmp
sbb
mov
pop
xor
pop
or
jmp
xor
loopne
fcomi
lea
popf
fs
repz
shl
mov
shl
inc
pop
in
div
pop
cmps
(bad)
push
cmp
xlat
jnp
mov
pop
sub
cld
repnz
adc
scas
aam
daa
loope
jmp
shl
and
fmul
or
mov
mov
inc
cmps
int3
inc
hlt
mov
cmp
arpl
adc
cmps
xchg
inc
cmps
int3
cld
imul
adc
popf
cmp
pop
xchg
shr
pop
cmps
inc
sbb
sbb
mov
shl
popf
gs
fdiv
stc
nop
lock
sub
cld
push
jbe
adc
pcmpgtb
test
adc
adc
mov
int3
jmp
lahf
sbb
sub
xor
xor
adc
shr
xchg
push
jae
sahf
pop
xor
shl
jle
shr
adc
push
cmps
int3
xchg
push
pop
inc
jge
xor
push
pop
adc
(bad)
sbb
sbb
mov
test
mov
jge
int3
popf
fs
and
in
xchg
das
fdiv
hlt
pop
cmps
arpl
cmps
ins
xor
popf
cmp
inc
push
adc
push
xor
rol
and
ret
hlt
loopne
mov
jmp
mov
and
fdiv
sbb
pop
xor
sbb
adc
push
xor
rol
and
xchg
daa
mov
pop
xor
pop
pop
shr
pop
push
pop
dec
jle
xor
pop
push
fisttp
dec
fld
pop
xor
cmp
dec
add
test
mov
inc
cmps
int3
inc
dec
ret
mov
outs
in
push
mov
cmps
int3
inc
dec
fiadd
adc
(bad)
sbb
test
(bad)
pop
cmps
mov
adc
loopne
adc
pop
stos
jecxz
fcmove
adc
dec
pop
in
sbb
cdq
daa
pop
shr
pop
or
inc
xchg
pop
xor
xchg
pop
xor
cmp
dec
cmp
mov
pop
stos
jecxz
or
jmp
xor
loopne
mov
jmp
mov
mov
cmps
inc
add
dec
in
push
mov
cmps
int3
inc
retf
push
mov
cmps
int3
inc
dec
mov
adc
(bad)
add
add
loopne
adc
pop
stos
jecxz
fcmove
adc
dec
pop
in
sbb
cdq
daa
pop
shr
pop
or
lds
push
pop
push
jge
xor
pop
or
test
push
mov
mov
sub
adc
loopne
adc
pop
stos
jecxz
fcmove
adc
dec
pop
in
sbb
cdq
daa
pop
shr
pop
or
test
push
pop
pop
jge
xor
pop
or
imul
pop
xor
cmp
dec
cmp
mov
pop
stos
jecxz
or
jmp
xor
loopne
mov
jmp
mov
mov
xor
retf
mov
jmp
mov
mov
mov
and
mov
mov
daa
jl
mov
xor
pop
cmps
arpl
stos
imul
and
ret
popf
xor
loopne
mov
jmp
mov
and
stos
mov
and
mov
mov
daa
jl
mov
xor
pop
cmps
arpl
push
xor
popf
cmp
jno
das
fdiv
hlt
pop
cmps
arpl
push
push
cmp
shr
adc
push
xor
rol
and
ret
hlt
loopne
mov
jmp
mov
and
stos
fcomp
cmp
push
mov
jmp
xor
xchg
mov
mov
and
mov
adc
push
mov
mov
daa
jl
mov
xor
pop
cmps
arpl
out
xor
popf
cmp
jno
das
fdiv
hlt
pop
cmps
arpl
xchg
push
cmp
mov
int3
jmp
lahf
fcmovne
xchg
pop
xor
cmp
dec
add
test
mov
inc
cmps
int3
inc
dec
mov
neg
out
add
loopne
pop
mov
shl
xchg
gs
adc
mov
mov
and
test
cmc
mov
and
pop
mov
mov
mov
mov
pop
xor
cmps
and
jl
mov
xor
pop
cmps
arpl
push
imul
jl
test
das
fdiv
hlt
pop
cmps
arpl
xor
adc
popf
cmp
mov
pop
mov
mov
mov
daa
jl
mov
xor
pop
cmps
arpl
(bad)
imul
cld
sub
sbb
adc
rol
and
cmp
ja
pop
xor
pop
pop
shr
pop
push
pop
dec
jle
xor
pop
push
fist
xchg
pop
xor
jg
xor
pop
or
add
push
pop
adc
pop
pop
push
enter
retf
adc
or
test
movs
in
jmp
fdiv
push
fcomp
cdq
daa
pop
shr
pop
or
add
aam
in
jge
int3
inc
repnz
adc
cmps
int3
inc
pop
in
iret
retf
pop
cmps
(bad)
mov
jmp
movs
in
jmp
mov
aas
mov
mov
popf
push
scas
aad
daa
mov
cmc
dec
cld
add
xlat
not
(bad)
xchg
dec
aad
adc
or
sbb
ror
cmp
pop
(bad)
pop
pop
add
and
mov
mov
not
inc
mov
movs
int3
jmp
add
aam
daa
(bad)
jmp
shl
cld
bnd
adc
mov
cmp
cmps
int3
jl
(bad)
jno
dec
ficomp
adc
shl
jle
xor
cdq
daa
std
into
jmp
or
(bad)
xor
fadd
jl
test
retf
push
mov
(bad)
mov
cmps
int3
xchg
data16
aam
fisttp
adc
movs
int
pop
or
jmp
mov
mov
pop
xor
inc
shl
popf
cmps
xchg
fadd
cld
mov
int3
jmp
popf
aas
sbb
mov
test
das
fmul
jmp
xor
fadd
cdq
daa
movs
int
pop
or
lea
int3
jmp
fsubr
in
mov
pop
adc
fmul
cld
mov
popf
das
popf
pop
jo
popf
gs
mov
pop
cmps
int3
push
mov
mov
xor
fimul
adc
inc
push
shl
mov
jmp
pop
xor
gs
lods
pop
cmps
int3
inc
dec
mov
jmp
add
jmp
aam
lods
pop
cmps
int3
inc
enter
enter
enter
das
fmul
jmp
xor
mov
frstor
mov
dec
call
mov
fmul
pop
cmps
mov
jmp
jge
xor
jno
das
fmul
jmp
xor
popf
and
daa
es
fdivr
and
mov
jmp
xor
loopne
(bad)
mov
popf
fs
repz
mov
pop
fstp
pop
xor
pop
mov
jmp
pop
inc
fsubr
pop
xor
pop
ret
adc
mov
mov
pop
xor
pop
or
push
xor
mov
pop
adc
mov
cmps
int3
inc
dec
aas
sub
(bad)
sbb
push
mov
mov
aad
jmp
or
xor
cmp
mov
cmps
xchg
daa
aad
jmp
or
pop
mov
cdq
daa
(bad)
pop
or
mov
dec
mov
cmc
xchg
push
loopne
adc
cmps
xchg
out
xor
push
out
push
mov
pop
arpl
jno
hlt
mov
cmp
push
repz
mov
cmp
loopne
fucomi
mov
lahf
aas
(bad)
pop
fcmovu
cs
shl
adc
movs
int3
jmp
test
jmp
(bad)
sbb
mov
jmp
mov
inc
hlt
cmps
xchg
je
int3
jmp
popf
aas
popf
pop
scas
aam
daa
sub
hlt
inc
dec
mov
mov
pop
cmps
int3
adc
daa
in
into
jmp
or
test
mov
cmps
int3
cld
call
in
sub
int3
jmp
dec
sbb
shl
dec
cld
add
(bad)
cmps
pop
popfw
inc
fcmovu
add
pcmpgtb
sahf
or
popf
out
mov
cmp
push
cmps
inc
sbb
sbb
shl
das
or
jae
(bad)
jno
adc
lahf
pusha
inc
dec
inc
adc
mov
pop
(bad)
repz
popf
gs
or
xlat
push
mov
cld
mov
mov
xor
or
hlt
xor
loop
pop
adc
pop
fistp
fs
and
pop
pand
out
arpl
data16
mov
pop
xor
sub
ins
dec
stc
nop
lock
sub
cld
sub
adc
push
mov
cmps
jae
lods
xor
xor
mov
jmp
sahf
pop
adc
cmp
dec
jno
adc
lahf
mov
shr
cdq
fcom
cmps
cmp
mov
cmps
int3
inc
hlt
mov
cmp
pop
pop
adc
daa
pop
ret
jmp
or
pop
adc
push
jmp
pop
xor
rol
push
pop
xor
pand
fs
dec
cld
nop
lock
sub
adc
adc
adc
aas
hlt
push
pop
pop
xor
retf
adc
adc
pop
out
push
mov
mov
mov
or
retf
adc
cmps
push
xchg
add
xor
mov
xor
cdq
xor
call
loopne
mov
mov
aam
loopne
xor
jl
pop
xor
pop
fcomi
mov
xchg
gs
cmp
mov
push
test
fcmove
sbb
(bad)
ins
frstor
fs
fs
int3
or
sub
pop
adc
pop
pop
adc
pop
pop
adc
pop
pop
adc
leave
xor
xor
jle
xor
cmp
enter
xchg
cmps
push
nop
add
xor
cs
adc
scas
mov
adc
xchg
mov
push
mov
pop
pop
adc
xchg
fst
cmp
pop
pop
adc
xchg
jne
push
mov
pop
pop
adc
xchg
inc
cmps
push
mov
pop
mov
ror
pop
gs
cmps
push
cmp
sbb
cld
xchg
jno
adc
pop
gs
cmps
push
xor
sbb
cld
xor
enter
xchg
cmps
push
test
sbb
cld
mov
xor
pop
gs
cmps
push
pusha
add
xor
mov
mov
pop
adc
xchg
imul
adc
xchg
test
jmp
adc
xchg
int
push
mov
pop
pop
adc
xchg
rcl
mov
mov
lock
sub
mov
inc
shl
sub
fisttp
test
mov
int3
jae
retf
push
mov
mov
push
mov
pop
pop
call
loopne
fisttp
sahf
(bad)
jb
retf
push
mov
fst
xor
mov
int3
and
mov
adc
cli
pop
mov
pop
pop
retf
xor
cmps
push
cmp
jg
adc
movs
int3
and
xchg
adc
test
pop
pop
retf
xor
cmps
push
or
sbb
cld
bound
adc
movs
int3
and
(bad)
adc
mov
pop
pop
retf
xor
cmps
push
cmp
sbb
cld
ds
adc
movs
int3
and
ficom
(bad)
loop
pop
retf
xor
cmps
push
xor
sbb
cld
fidivr
adc
mov
pop
call
loopne
fisttp
pop
xor
retf
push
mov
fst
xor
or
icebp
and
fisttp
cmp
adc
lods
call
sbb
retf
iret
jmp
shl
jl
xor
mov
call
mov
cmp
out
xor
pop
arpl
retf
adc
sbb
inc
hlt
mov
xor
mov
int3
and
pop
gs
out
sbb
or
in
xor
jle
xor
adc
or
jge
xor
jno
retf
adc
mov
xor
sbb
jle
cmps
push
and
or
sub
aas
out
mov
(bad)
or
enter
mov
xor
sub
mov
jl
adc
pop
lods
push
mov
ins
lods
push
mov
sbb
mov
push
pop
jb
in
mov
inc
enter
retf
xchg
repnz
retf
loopne
pop
into
jns
xor
mov
xor
sbb
jle
xor
jle
xor
jle
xor
jle
xor
jle
xor
adc
pop
pop
sbb
dec
fucomi
xchg
popf
fs
fimul
pop
and
ins
aaa
mov
pop
fild
pop
xor
cmps
push
and
cmps
push
push
add
xor
xor
jo
jno
adc
pop
arpl
jno
retf
push
mov
jl
adc
and
xor
xchg
ins
lods
push
mov
sbb
and
xor
and
retf
adc
xor
iret
loopne
pop
into
jns
xor
mov
xor
sbb
jle
cmps
push
and
cmps
push
push
add
xor
xor
adc
mov
xor
adc
or
js
xor
jno
enter
xchg
mov
(bad)
jb
and
pop
adc
ins
pop
mov
pop
pop
adc
ins
ja
jecxz
pop
add
and
adc
xor
cmp
pop
xor
xor
into
jns
xor
mov
xor
sbb
jle
cmps
push
and
cmps
push
je
sbb
jle
xor
or
adc
dec
pop
pop
mov
xchg
retf
push
mov
jge
adc
mov
push
mov
pop
pop
adc
sbb
adc
or
cmp
xlat
xor
pop
pop
push
mov
mov
push
mov
pop
pop
adc
ins
pop
mov
pop
pop
adc
ins
push
mov
pop
pop
cmp
xor
outs
retf
xchg
repnz
retf
loopne
pop
xchg
js
xor
mov
xor
sbb
popf
pop
pop
retf
popf
xor
jmp
ins
lods
push
mov
cmp
adc
retf
adc
xor
pop
mov
xchg
retf
push
mov
jp
adc
jne
push
mov
cmps
pop
adc
ins
pop
mov
pop
pop
adc
ins
ja
jecxz
pop
add
bound
mov
pop
xor
pop
xor
xor
loopne
pop
into
jns
xor
mov
aaa
mov
sbb
xchg
push
test
xor
xchg
ins
lods
push
mov
sbb
and
xor
cmps
xor
xor
adc
mov
xor
sub
mov
jp
adc
sub
xor
xchg
ins
lods
push
mov
sbb
and
xor
adc
mov
pop
xor
jmp
iret
loopne
pop
adc
pop
adc
cli
add
pop
ins
pop
mov
pop
pop
adc
ins
ja
jecxz
pop
add
movs
xor
xor
adc
retf
adc
xor
into
loopne
pop
into
jns
xor
mov
mov
sbb
popf
pop
pop
retf
popf
xor
jmp
ins
lods
push
mov
sbb
and
xor
mov
pop
xor
xor
jmp
iret
loopne
pop
adc
(bad)
adc
cli
cmps
mov
pop
pop
adc
ins
pop
mov
pop
pop
adc
ins
push
mov
pop
pop
or
jne
adc
xor
add
pop
xor
pop
pop
adc
mov
or
adc
cli
mov
loopne
pop
adc
ins
pop
mov
pop
pop
adc
ins
push
mov
pop
pop
or
(bad)
adc
xor
adc
pop
pop
add
pop
xor
pop
pop
adc
mov
dec
adc
cli
das
and
mov
int3
and
pop
int3
and
stc
jno
enter
retf
adc
xor
jl
pop
mov
retf
push
mov
pop
pop
adc
pop
xor
jp
xor
jno
push
mov
ins
lods
push
mov
cmp
jle
xor
adc
pop
pop
add
pop
xor
pop
pop
adc
mov
(bad)
adc
cli
adc
pop
ins
pop
mov
pop
pop
adc
ins
ja
jecxz
pop
add
ret
mov
pop
pop
or
pop
xor
pop
pop
out
jnp
xor
mov
xor
add
xor
retf
mov
adc
popf
out
mov
jmp
push
ins
frstor
mov
inc
cmc
out
xor
aad
xor
lods
call
sbb
jnp
jmp
shl
jl
xor
mov
jecxz
cmps
mov
mov
cmp
mov
int3
and
stos
adc
aam
in
pand
mov
mov
mov
ins
lods
push
mov
sbb
aas
out
arpl
push
or
enter
mov
xchg
retf
push
mov
pop
fld
out
jb
enter
xchg
(bad)
jb
enter
sahf
shl
mov
xchg
dec
cmp
daa
jl
pop
mov
retf
push
mov
pop
pop
adc
ficom
adc
cli
aaa
mov
pop
mov
jecxz
xor
pop
int3
and
pop
int3
and
stc
jb
retf
adc
shl
mov
xchg
dec
cmp
daa
jl
pop
mov
retf
push
mov
pop
pop
adc
adc
cli
push
mov
pop
pop
adc
pop
pop
adc
pop
pop
adc
pop
pop
adc
pop
pop
adc
in
adc
xor
jle
xor
jle
mov
xor
pop
mov
jle
cmps
push
adc
inc
xor
pop
int3
and
pop
int3
and
stc
jno
enter
enter
retf
xchg
repnz
retf
loopne
pop
xchg
js
xor
mov
or
sbb
popf
pop
push
dec
into
loopne
pop
adc
sbb
adc
cmps
push
cld
aas
sbb
cld
xor
adc
sub
push
mov
pop
xor
pop
fld
pop
xor
ins
inc
add
pop
pop
adc
mov
sbb
cld
inc
adc
dec
pop
adc
pop
pop
pop
mov
mov
push
mov
pop
pop
adc
ins
pop
mov
pop
pop
adc
ins
push
mov
pop
pop
cmp
xor
jle
xor
adc
or
jge
xor
jno
enter
mov
clc
jno
and
pop
adc
ins
pop
mov
pop
pop
adc
ins
push
mov
pop
pop
cmp
xor
jl
pop
xor
pop
xor
pop
pop
xchg
js
xor
mov
or
sbb
cld
int
int3
jmp
pop
int3
and
pop
int3
and
stc
jb
enter
mov
xor
adc
mov
xor
sub
mov
inc
xor
sub
retf
and
mov
sbb
jle
cmps
push
push
add
xor
xor
pop
xor
call
mov
sbb
jl
xor
pop
fld
pop
xor
enter
xchg
(bad)
jb
enter
out
jb
enter
mov
pop
xor
cmp
arpl
jno
retf
push
mov
inc
xor
test
xor
xchg
ins
lods
push
mov
sbb
and
xor
mov
pop
xor
xor
jmp
iret
loopne
pop
adc
push
sub
mov
pop
pop
adc
ins
pop
mov
pop
pop
adc
ins
ja
jecxz
pop
add
mov
aad
mov
pop
xor
xor
loopne
pop
into
jns
xor
mov
or
sbb
jle
cmps
push
and
cmps
push
push
add
xor
xor
adc
pop
pop
jmp
pop
xor
xor
adc
or
jnp
xor
jno
enter
mov
cli
jno
enter
xchg
(bad)
jb
enter
ret
adc
inc
pop
xchg
mov
xor
jl
pop
mov
retf
push
mov
pop
pop
adc
pop
xor
ret
adc
inc
cmps
push
mov
pop
xor
cmps
push
and
cmps
push
je
sbb
jle
xor
jle
xor
jl
pop
mov
retf
push
mov
pop
pop
adc
pop
xor
xchg
add
push
mov
ins
lods
push
mov
cmp
jle
xor
xor
adc
or
jge
xor
jno
retf
adc
mov
or
sbb
jle
cmps
push
and
cmps
push
push
add
xor
xor
push
mov
xor
adc
or
jnp
xor
jno
enter
mov
cli
jno
dec
loope
jmp
ror
cmp
imul
(bad)
xchg
dec
dec
pusha
inc
cmc
out
data16
mov
xchg
push
xor
pop
pop
xchg
mov
xor
jle
xor
adc
fxch
popa
stos
mov
push
mov
cmps
int3
sbb
int
adc
xor
inc
dec
shr
adc
shl
popf
pop
pop
retf
popf
pand
(bad)
movs
xor
out
aaa
adc
pop
mov
push
push
or
popa
mov
push
mov
mov
cli
int3
jmp
popf
sub
enter
pop
xor
loopne
pop
inc
jnp
xor
xlat
push
int3
popa
stos
mov
repnz
cmps
mov
mov
cdq
inc
cmp
das
sbb
inc
pop
sub
jl
in
jno
retf
adc
mov
mov
cmps
mov
mov
pop
(bad)
repz
popf
gs
ins
dec
imul
sbb
pop
xor
out
or
inc
xor
sti
adc
mov
pop
cmps
int3
inc
dec
or
adc
rol
adc
dec
inc
xor
push
xor
rol
sub
dec
jmp
sub
jl
jmp
xor
pop
cmps
arpl
xchg
adc
and
push
xlat
dec
pop
int3
adc
xor
pop
or
sbb
cmps
xor
xor
movs
loopne
mov
jmp
mov
add
inc
xor
and
adc
dec
pop
add
sbb
cdq
daa
pop
int3
jmp
or
int
pop
xor
xor
movs
loopne
mov
jmp
mov
add
pop
inc
add
mov
cmps
int3
inc
dec
repnz
mov
sub
jl
call
xor
pop
cmps
arpl
ss
xor
test
iret
jmp
int3
sbb
dec
pop
xchg
adc
xor
pop
or
gs
xor
xor
xchg
mov
mov
add
push
inc
add
mov
cmps
int3
inc
dec
sbb
mov
sub
jl
jmp
adc
fdiv
jmp
cmps
arpl
mov
adc
test
mov
pop
push
inc
add
mov
cmps
int3
inc
dec
push
and
mov
sub
jl
jmp
adc
fdiv
jmp
cmps
arpl
pop
dec
xor
and
sbb
dec
pop
inc
adc
xor
pop
or
cmc
mov
xor
xor
jl
xor
adc
push
mov
cmps
int3
inc
retf
push
mov
cmps
pop
das
jnp
xor
jno
retf
push
mov
cmps
pop
aam
push
xor
inc
inc
xor
popf
sbb
daa
mov
cmc
std
mov
cli
(bad)
cmps
pop
popfw
inc
or
sub
stos
pop
or
in
sub
dec
or
pop
mov
inc
dec
pop
fsubr
pop
(bad)
sbb
cdq
inc
sbb
pop
fs
jmp
dec
pusha
pop
xor
mov
xor
pcmpgtb
sub
mov
inc
shl
popf
xor
loopne
mov
jmp
mov
add
pop
xor
cmp
retf
jmp
(bad)
adc
adc
xor
pop
or
std
mov
xor
pop
inc
add
mov
cmps
int3
inc
dec
xchg
es
rol
cmp
pop
stos
retf
jmp
pop
inc
add
mov
cmps
int3
inc
dec
mul
adc
(bad)
adc
dec
pop
adc
daa
mov
jmp
or
xor
pop
inc
add
mov
cmps
int3
inc
dec
and
adc
fcomp
jo
pop
xor
pop
inc
add
mov
cmps
int3
inc
dec
add
adc
(bad)
adc
dec
pop
pop
adc
xor
pop
or
push
mov
xor
push
inc
add
mov
cmps
int3
inc
dec
jle
adc
rol
adc
pop
stos
retf
jmp
push
inc
add
mov
cmps
int3
inc
dec
pop
es
(bad)
push
xlat
dec
pop
mov
daa
mov
jmp
or
stc
mov
xor
push
inc
add
mov
cmps
int3
inc
dec
mov
adc
rol
jecxz
shl
popf
(bad)
sbb
dec
pop
cld
adc
xor
pop
or
mov
pop
stos
retf
jmp
push
inc
add
mov
cmps
int3
inc
dec
retf
mov
cmps
int3
sbb
dec
pop
xor
sbb
cdq
daa
mov
jmp
or
ins
mov
xor
jno
das
(bad)
jecxz
cmps
arpl
movs
mov
jmp
test
out
jecxz
cmps
mov
push
mov
pop
(bad)
dec
cmps
int3
xchg
dec
mov
jmp
in
in
pop
cmps
add
fimul
adc
fld
pop
mov
test
push
or
pop
pop
add
xor
inc
fwait
int3
jmp
popf
cmp
pop
push
repz
xchg
adc
mov
pop
mov
movs
int3
jmp
push
mov
mov
movs
iret
jmp
arpl
call
call
daa
jb
adc
lahf
mov
pop
cmps
int3
adc
fmul
in
pop
cmps
arpl
jno
das
fmul
call
sub
adc
popf
aas
lods
sbb
adc
mov
int3
jmp
lahf
mov
pop
mov
sbb
call
xadd
mov
out
movs
cwde
retf
xchg
mov
push
cdq
in
in
pop
cmps
cmp
in
pop
xor
fs
mov
pop
xor
xor
ds
xor
pop
or
sbb
das
aas
adc
xor
or
xor
pop
or
in
pop
xor
retf
adc
aam
call
dec
inc
daa
adc
rol
jecxz
shl
popf
fs
call
retf
push
mov
cmps
int3
inc
dec
out
and
mov
pop
mov
jmp
mov
add
aam
call
dec
push
es
aam
call
bound
cdq
daa
movs
retf
jmp
or
jp
xor
pop
or
popa
mov
xor
das
fmul
in
pop
cmps
arpl
add
adc
pop
pop
loopne
sbb
cdq
daa
movs
iret
jmp
or
cwde
aas
cmps
int3
xchg
push
cmp
lods
fcomp
mov
movs
int3
jmp
cdq
ss
dec
mov
xchg
pop
mov
and
scas
aad
daa
(bad)
(bad)
jmp
shl
xchg
pop
mov
cmp
xchg
pop
xor
cmps
pop
test
sbb
jl
xor
pop
cmps
arpl
pop
dec
xor
popf
and
jno
das
fmul
jmp
xor
fmul
jmp
xor
fsubr
jecxz
cmps
fdiv
sub
jmp
pop
cmps
mov
cmps
movs
int
pop
jbe
add
fsubr
jecxz
cmps
cmc
nop
cmps
movs
int
pop
pop
fcomp
pop
aam
jecxz
cmps
mov
jp
int3
jmp
cs
fs
cmp
cmps
xchg
pop
cmps
int3
cdq
daa
movs
int
pop
or
jp
xor
pop
or
imul
int3
jmp
mov
pop
mov
scas
int3
jmp
in
jmp
xor
in
jecxz
cmps
mov
jle
mov
push
mov
mov
or
scas
aad
daa
xchg
(bad)
jmp
shl
cdq
daa
movs
retf
jmp
or
mov
dec
xor
adc
aam
call
dec
xor
adc
aam
call
sub
(bad)
in
pop
cmps
mov
cld
jmp
in
pop
cmps
arpl
cmps
xchg
pop
cmps
int3
jl
sub
enter
dec
push
and
or
fnsave
movs
iret
jmp
or
pop
mov
jmp
mov
fstp
mov
scas
shl
sbb
pop
cmps
int3
jmp
mov
jmp
mov
push
mov
or
inc
cpuid
mov
add
mov
push
inc
sub
cld
adc
adc
pcmpgtb
and
pop
adc
xor
xor
adc
pop
fild
mov
xor
pop
push
repz
mov
fist
pop
xor
mov
add
jo
popf
popa
shl
add
push
mov
sbb
and
dec
adc
xor
jecxz
fisttp
pop
xor
xor
leave
xchg
push
mov
pop
(bad)
dec
inc
es
shr
and
cmps
pop
xor
fadd
jmp
push
fcmovnu
mov
xor
xor
xchg
adc
cs
pop
cmps
mov
mov
int3
jmp
pop
cmp
mov
pop
inc
mov
xchg
ss
push
sbb
xchg
popa
add
adc
mov
add
cmp
inc
sub
xor
pop
inc
sbb
sub
hlt
push
sub
int3
jmp
fadd
xchg
mov
add
out
fsubrp
pop
jecxz
pop
ror
arpl
repnz
mov
add
popf
push
shl
jmp
fadd
daa
out
fsubrp
pop
cmp
fcomp
push
stos
pop
xor
daa
neg
jmp
pop
(bad)
pusha
scas
icebp
adc
(bad)
int3
jmp
lahf
mov
dec
cmps
int3
es
fcom
xor
jno
retf
push
mov
cmps
int3
inc
dec
pop
daa
adc
xor
cdq
daa
cli
fucomip
pop
or
jmp
mov
add
pop
mov
jmp
mov
rcr
mov
cmp
adc
fcom
es
int3
jmp
popf
sub
aam
mov
cmps
int3
inc
dec
cmps
and
shr
adc
mov
pop
pop
test
xor
jno
retf
push
mov
pop
fisttp
jp
jmp
popa
aam
jbe
cmps
int3
cdq
xchg
pop
in
mov
pop
shl
xchg
loopne
pop
test
sbb
jl
xor
mov
pop
mov
jmp
ins
jne
loopne
mov
mov
cld
pop
mov
xor
jno
retf
push
mov
pop
fld
mov
xor
popa
aam
test
cdq
xchg
fxam
push
mov
pop
shl
xchg
int3
loopne
pop
test
sbb
jl
xor
mov
pop
mov
loop
mov
xchg
lahf
in
mov
pop
shl
call
enter
retf
adc
xor
mov
pop
fistp
out
pop
push
enter
repnz
sbb
cmps
cmp
mov
aam
mov
dec
push
cmp
mov
push
jae
sahf
pop
xor
xor
cdq
xlat
loope
inc
das
in
sti
pop
cmps
fs
in
fcmovnb
lods
pop
xor
aam
lods
repnz
jl
mov
xchg
push
push
xor
pop
xor
daa
in
fsubr
pop
or
jns
pop
xor
pop
(bad)
jmp
(bad)
adc
mov
or
jmp
cmps
inc
mov
mov
loope
jle
xor
hlt
loopne
int3
popa
push
mov
sbb
pop
xor
inc
shl
lahf
daa
in
fsubrp
pop
shl
jmp
in
frstpm(287
scas
pop
xor
mov
xor
and
xchg
mov
adc
sbb
jl
xor
pop
(bad)
out
mov
xlat
retf
adc
xor
cld
or
adc
sbb
shl
test
adc
pop
pop
adc
fisub
adc
shl
sbb
pop
adc
scas
rcr
pop
shl
popf
popa
sahf
jbe
mov
sbb
adc
pop
xor
out
xor
pop
mov
xlat
das
sbb
inc
dec
sub
mov
ins
lods
push
mov
xor
jle
xor
jle
xor
adc
pop
pop
cmc
jns
xor
jno
enter
lods
pop
xor
and
pop
adc
xor
xor
cld
mov
pop
fisttp
adc
fistp
pop
xor
mov
jbe
cmp
xor
daa
jmp
mov
pop
xor
pop
fdiv
data16
cld
ds
xor
pop
arpl
aaa
cmc
fsubrp
pop
sahf
mov
dec
cmps
int3
adc
jo
popf
popa
aam
lods
dec
cmps
int3
inc
das
fcomp
jl
in
jno
retf
push
mov
pop
pop
adc
sub
int3
jmp
popf
sub
xchg
hlt
adc
in
jno
mov
jl
jmp
fadd
or
pop
xor
pop
or
enter
rcr
xor
xor
cld
dec
push
xor
mov
sbb
mov
jmp
xor
jle
xor
data16
pop
adc
pop
fcmovnu
scas
pop
xor
aas
adc
xor
jl
pop
xor
pop
int3
and
push
adc
mov
cdq
out
arpl
ss
xor
sbb
push
inc
or
test
xor
aam
lock
sbb
mov
nop
icebp
add
or
icebp
and
pusha
inc
cmc
out
adc
mov
pop
xor
inc
shl
sub
retf
add
frstor
sbb
mov
xor
mov
sbb
pop
push
add
es
adc
and
lahf
dec
xor
push
mov
sub
fnsave
jnp
pop
xor
mov
pop
xor
lods
call
jl
sbb
cld
mov
(bad)
jmp
mov
mov
push
mov
cmps
int3
cld
mov
popf
and
pop
aam
rcr
inc
pop
in
xlat
jmp
scas
pop
xor
mov
popf
into
jmp
or
and
stc
jb
dec
xchg
aas
adc
push
repz
int
mov
pop
cmps
int3
aas
daa
(bad)
into
jmp
fcmovu
adc
int3
(bad)
jmp
data16
int3
jmp
mov
sub
shr
pop
cmps
sbb
and
into
jmp
jb
fcomp
int3
sub
mov
cmps
int3
aas
daa
or
xchg
jle
int3
jmp
fsub
jmp
mov
sbb
dec
sbb
mov
push
mov
es
xor
mov
pop
nop
jl
sbb
popf
pop
push
push
jo
sbb
adc
fs
mov
scas
cmps
push
jl
sbb
cld
inc
mov
jmp
(bad)
fs
sbb
adc
mov
in
jno
dec
add
jmp
add
pop
movs
pop
xor
gs
xor
stos
push
mov
movs
pop
xor
mov
sbb
pop
xor
fwait
sbb
popa
stos
cmps
inc
sbb
mov
retf
jecxz
shl
popf
gs
adc
shl
xchg
gs
adc
bound
test
sbb
pusha
out
ss
add
xor
bound
and
sbb
pusha
xchg
bound
in
sbb
pusha
mov
add
xor
bound
push
mov
sbb
pusha
mov
sbb
bound
add
repz
jmp
dec
(bad)
daa
lods
int
pop
bound
push
mov
ss
sbb
pusha
stos
bound
and
sbb
popa
scas
xor
popa
mov
mov
jmp
cmps
xor
xlat
dec
(bad)
pop
xor
mov
cmps
int3
adc
cld
out
jmp
daa
or
jge
pop
xor
pop
mov
adc
mov
xor
aam
jmp
pop
ins
fisttp
test
xor
pop
inc
xor
pop
pop
adc
or
push
mov
push
xor
pop
fcomi
test
xor
jl
xor
fmul
jmp
int3
jmp
fadd
jmp
lahf
sub
xchg
cmp
adc
cmps
xor
aam
jmp
pop
ins
mov
loopne
fstp
pop
xor
pop
(bad)
jmp
(bad)
adc
pop
pop
inc
or
pop
pop
dec
inc
sbb
cdq
aas
movs
int
pop
or
call
push
push
jmp
pop
xor
xor
jle
xor
int3
loopne
pop
adc
idiv
adc
cmps
push
nop
add
xor
(bad)
push
xor
or
adc
loope
add
pop
(bad)
repz
xlat
jmp
das
fmul
jmp
into
jmp
or
jp
xor
pop
or
jge
pop
xor
mov
movs
int
pop
or
and
mov
adc
(bad)
adc
jns
adc
pop
pop
sbb
xor
mov
push
mov
int3
jae
dec
mov
adc
mov
adc
cmps
int3
jmp
xchg
int3
push
and
adc
mov
adc
xor
jl
mov
enter
test
xor
xchg
inc
cmps
push
mov
pop
fidivr
daa
movs
int
pop
pop
fsubr
lods
out
mov
pop
cmps
int3
sahf
es
into
jmp
cvtps2pi
jns
adc
pop
pop
repz
xor
mov
sbb
mov
cmp
mov
adc
cmps
int3
jmp
shl
sub
adc
adc
aam
jmp
das
fadd
jmp
pop
ret
cmps
arpl
ficom
adc
popf
and
xor
fmul
jmp
xchg
push
mov
pop
mov
pop
cmps
int3
jmp
sub
jle
xor
jl
mov
enter
stos
pop
xor
xchg
fst
sbb
pop
(bad)
mov
movs
int
pop
or
jmp
xor
int3
loopne
mov
jmp
mov
pop
mov
xor
adc
pop
mov
jmp
cmps
push
cmp
push
xor
in
jmp
xor
xor
adc
mov
adc
cmps
push
cmp
push
xor
int3
xor
fadd
(bad)
sbb
daa
movs
int
pop
or
jmp
xor
xchg
push
movs
int3
jmp
mov
push
mov
xor
adc
pop
mov
jmp
cmps
push
cmp
sbb
cld
mov
in
jmp
xor
xor
loopne
pop
adc
fidivr
adc
cmps
push
cmp
sbb
cld
xchg
push
xor
je
adc
aam
jmp
push
jae
sahf
pop
xor
fcmove
pop
(bad)
jns
adc
pop
pop
cmp
xor
mov
sbb
pop
int3
and
cmps
xor
mov
pop
cmc
xchg
pop
cmps
int3
jmp
mov
sbb
enter
mov
jmp
add
or
xor
jle
xor
ret
loopne
pop
adc
dec
cmp
cmps
push
cmp
sbb
cld
bound
adc
loopne
adc
fnstenv
adc
pop
cmps
(bad)
shl
mov
pop
ja
adc
fmul
jmp
into
jmp
or
jp
xor
pop
or
shr
dec
pop
jmp
pop
xor
pop
or
and
jbe
adc
(bad)
adc
jns
adc
pop
pop
add
mov
pop
int3
and
push
xor
mov
pop
cmc
xchg
pop
cmps
int3
jmp
mov
sbb
leave
jmp
int
pop
add
or
xor
jle
xor
ret
pop
adc
add
mov
sbb
cld
stos
pop
xor
pop
xor
fnstenv
adc
pop
cmps
mov
pop
sbb
in
lods
out
cmps
out
pop
cmps
int3
sub
dec
sub
adc
aam
jmp
das
fadd
jmp
pop
ret
cmps
arpl
pop
push
xor
popf
and
mov
int3
jmp
(bad)
jmp
enter
enter
enter
mov
(bad)
jb
dec
fidiv
adc
shl
jle
xor
jle
cmps
xchg
pop
cmps
int3
cld
xor
and
loopne
xor
aam
and
sbb
xchg
push
jae
sahf
pop
xor
shl
jle
aam
clc
pop
cmps
int3
inc
icebp
xor
(bad)
loop
int3
mov
dec
sahf
ss
xor
cdq
daa
mov
jmp
or
retf
push
mov
cmps
int3
cld
push
pop
xor
aam
jmp
pop
sbb
in
enter
dec
movs
int3
jmp
or
jmp
cmps
xchg
pop
cmps
int3
cld
and
enter
dec
movs
int3
jmp
xor
jl
mov
ret
jmp
xor
pop
test
int
mov
stc
jb
dec
repnz
jle
xor
jle
xor
jl
pop
xor
mov
adc
cmps
int3
jmp
mov
pop
push
enter
pop
in
ret
jmp
xor
mov
(bad)
adc
popa
xor
cdq
aaa
mov
jmp
or
xor
jno
pop
in
ret
jmp
xor
aam
clc
pop
cmps
int3
inc
enter
je
xor
pop
test
loope
mov
mov
ret
jmp
xor
cmps
xor
xor
xor
jle
xor
loopne
pop
ins
jp
xor
jno
retf
adc
mov
cwde
pop
cmps
mov
mov
push
lods
push
mov
pop
mov
ror
int3
popa
mov
inc
add
sub
jmp
push
fcomi
cmps
pop
xor
add
(bad)
mov
popfw
inc
fcmovu
sbb
pcmpgtb
iret
xchg
popa
popf
pop
pop
retf
popf
shl
lahf
pop
xor
push
mov
mov
dec
cmp
daa
sahf
xor
bound
nop
add
xor
cmps
push
cld
aas
sbb
cld
add
adc
sahf
enter
or
dec
les
xlat
push
int3
and
clc
jno
dec
fidiv
adc
bound
xchg
add
xor
cmps
push
cmp
pop
xor
ins
pop
mov
pop
inc
pop
pop
ins
das
and
pop
xor
xchg
inc
cmps
push
mov
jno
push
mov
pop
mov
push
pop
shl
das
xchg
jno
push
mov
jns
push
mov
pop
or
add
adc
dec
mov
shr
jno
mov
mov
push
mov
pop
or
add
adc
jnp
sub
in
jno
mov
fst
pop
mov
in
aas
adc
scas
aam
out
mov
and
jb
xlat
pop
mov
adc
ins
mov
loopne
inc
adc
inc
jnp
mov
pop
mov
pop
inc
adc
inc
pop
mov
pop
or
mov
pop
mov
adc
ins
sbb
sub
loopne
or
add
adc
pop
mov
adc
ins
mov
loopne
inc
adc
inc
das
mov
pop
cmp
(bad)
dec
int3
popa
mov
inc
add
sub
inc
icebp
mov
adc
mov
ins
dec
stc
nop
icebp
add
pop
xor
pop
mov
adc
jl
out
pop
mov
adc
jl
out
pop
mov
adc
jl
out
pop
mov
adc
jl
out
pop
mov
adc
jl
out
pop
mov
adc
jl
out
pop
mov
adc
jl
out
pop
mov
adc
rcl
inc
cmc
mov
adc
pop
mov
popa
xor
arpl
repnz
xor
popf
cmp
(bad)
jo
shl
mov
push
and
pusha
pop
mov
push
lods
out
sbb
pop
jns
out
pop
je
sbb
cmp
(bad)
pop
mov
sub
adc
pop
pop
adc
dec
pop
fsubr
pop
push
cli
xlat
sti
fcomp
adc
pop
xor
mov
pop
pop
sub
mov
shl
pop
pop
jmp
pop
xor
or
mov
pop
cmps
int3
xchg
pop
stos
popf
jecxz
aam
jmp
sbb
dec
xor
mov
sbb
pop
xor
pop
mov
adc
jl
out
pop
mov
adc
jl
out
pop
mov
adc
jl
out
pop
mov
adc
jl
out
pop
mov
adc
jl
out
pop
mov
adc
jl
out
pop
mov
adc
jl
out
pop
mov
adc
jl
out
pop
mov
adc
jl
out
pop
mov
adc
jl
out
pop
mov
adc
jl
out
pop
mov
adc
jl
out
pop
mov
adc
jl
out
pop
mov
adc
jl
out
pop
mov
adc
jl
out
pop
mov
adc
jl
out
pop
mov
adc
jl
out
pop
mov
adc
jl
out
pop
mov
adc
jl
out
pop
mov
adc
jl
out
pop
mov
adc
jl
out
pop
mov
adc
jl
out
pop
mov
adc
jl
out
pop
mov
adc
jl
out
pop
mov
adc
jl
out
pop
mov
adc
jl
out
pop
mov
adc
jl
out
pop
mov
adc
jl
out
pop
mov
adc
jl
out
pop
mov
adc
jl
out
pop
mov
adc
jl
out
pop
mov
adc
jl
out
pop
mov
adc
jl
out
pop
mov
adc
jl
out
pop
mov
adc
jl
out
pop
mov
adc
jl
out
pop
mov
adc
jl
out
pop
mov
adc
jl
out
pop
mov
adc
jl
out
pop
mov
adc
jl
out
pop
mov
adc
jl
out
pop
mov
adc
jl
out
pop
mov
adc
jl
out
pop
mov
adc
jl
out
pop
mov
adc
jl
out
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
adc
jl
loopne
pop
mov
.byte
