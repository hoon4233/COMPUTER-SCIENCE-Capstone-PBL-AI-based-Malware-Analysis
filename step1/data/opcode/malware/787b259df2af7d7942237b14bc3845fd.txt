shl
add
hlt
inc
add
hlt
inc
add
hlt
inc
add
hlt
inc
add
hlt
inc
add
hlt
inc
add
hlt
inc
add
hlt
inc
add
hlt
inc
add
hlt
inc
add
hlt
inc
add
hlt
inc
add
hlt
inc
add
hlt
inc
add
hlt
inc
add
cmc
inc
add
inc
add
hlt
inc
add
inc
add
inc
add
inc
add
cmc
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
add
cmc
inc
add
hlt
inc
add
cmc
inc
add
cmc
inc
add
cmc
inc
add
cmc
inc
add
cmc
inc
add
cmc
inc
add
cmc
inc
add
cmc
inc
add
cmc
inc
add
cmc
inc
add
cmc
inc
add
cmc
inc
add
hlt
inc
add
cmc
inc
add
cmc
inc
add
cmc
inc
add
cmc
inc
add
cmc
inc
add
cmc
inc
add
cmc
inc
add
cmc
inc
add
cmc
inc
add
cmc
inc
add
cmc
inc
add
test
inc
add
test
inc
add
test
inc
add
inc
add
test
inc
add
test
inc
add
inc
add
inc
add
test
inc
add
test
inc
add
add
test
inc
add
inc
add
add
inc
add
add
inc
add
test
inc
add
add
inc
add
add
inc
add
add
inc
add
cmc
inc
add
add
inc
add
add
test
inc
add
inc
add
inc
add
inc
add
inc
add
cmc
inc
add
inc
add
inc
add
inc
add
inc
add
test
inc
add
test
inc
add
cmc
inc
add
test
inc
add
test
inc
add
cmc
inc
add
test
inc
add
inc
add
test
inc
add
test
inc
add
test
test
test
test
test
test
inc
add
test
test
test
test
test
test
test
test
test
test
inc
add
inc
add
add
inc
add
add
inc
add
inc
add
inc
add
hlt
inc
add
add
inc
add
inc
add
test
inc
add
inc
add
test
test
test
test
test
test
test
test
test
inc
add
test
test
test
test
test
test
test
test
cmc
inc
add
inc
add
test
clc
inc
add
cmc
inc
add
test
inc
add
cmc
inc
add
clc
inc
add
inc
add
clc
inc
add
inc
add
inc
add
clc
inc
add
inc
add
clc
inc
add
inc
add
inc
add
clc
inc
add
inc
add
inc
add
clc
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
cmc
inc
add
add
cmc
inc
add
inc
add
add
test
clc
inc
add
inc
add
inc
add
inc
add
clc
add
es
je
push
sub
dec
and
xor
sub
pop
sub
jns
push
add
popa
fisubr
jb
ss
(bad)
adc
add
and
pop
jne
retf
or
ret
inc
es
add
in
gs
mov
and
ret
jb
and
inc
es
add
popa
and
add
add
outs
xchg
aaa
inc
imul
inc
es
add
popa
and
and
inc
or
outs
dec
sub
es
add
sub
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
and
sub
or
jb
cmc
add
repnz
jmp
inc
into
add
add
and
ret
daa
xor
add
ins
ins
es
add
xchg
xor
cs
add
ins
jae
xor
add
xor
fs
add
push
pop
ins
arpl
add
js
jb
push
and
sub
es
add
pop
sub
xor
ins
inc
adc
outs
arpl
inc
add
sti
sub
push
adc
stc
or
movaps
fsubr
jb
repz
sub
das
add
ficomp
popa
jo
daa
ins
outs
lds
add
push
jb
retf
daa
xor
clc
pop
ins
ins
es
add
popa
pop
je
xchg
sub
xchg
xor
add
es
loop
es
add
stos
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
stos
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
lods
add
lods
add
lods
add
lods
add
es
jmp
add
add
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
jmp
and
inc
add
lahf
retf
and
inc
add
and
dec
add
xchg
inc
add
push
inc
add
and
inc
add
xor
inc
add
and
inc
add
sub
and
inc
add
and
add
add
inc
add
push
mov
jmp
and
push
add
adc
push
add
xor
inc
add
out
inc
add
inc
add
inc
add
retf
lds
add
inc
add
iret
inc
add
iret
inc
add
mov
inc
add
iret
inc
add
iret
mov
add
inc
add
pop
add
inc
add
jg
add
pop
add
inc
add
jg
add
dec
inc
add
dec
inc
add
aas
inc
add
aas
push
add
inc
add
add
aas
inc
add
es
add
es
add
es
add
es
add
es
add
es
adc
es
lods
add
stos
(bad)
(bad)
fldcw
add
es
add
es
add
mov
add
pusha
popa
cmp
add
or
add
stos
ret
add
stos
or
es
movs
add
stos
add
es
add
es
add
imul
jl
shl
sub
es
repz
stos
sub
es
lods
add
inc
jmp
add
inc
jmp
add
push
jmp
add
add
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
add
add
inc
add
and
inc
add
and
inc
add
aas
inc
add
dec
inc
add
dec
inc
add
aas
inc
add
aas
inc
add
cmovbe
add
inc
add
inc
add
inc
add
cmovbe
add
inc
add
inc
add
inc
add
iret
inc
add
iret
inc
add
mov
inc
add
iret
inc
add
iret
inc
add
mov
inc
add
pop
add
inc
add
jg
add
pop
add
inc
add
jg
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
cmps
add
add
add
scas
cmps
add
test
cmps
add
pop
mov
add
imul
add
mov
mov
add
inc
stc
mov
and
inc
daa
mov
and
inc
imul
and
add
add
inc
push
mov
and
inc
cmc
mov
and
inc
xchg
mov
and
inc
sub
mov
and
inc
inc
mov
and
inc
lods
mov
inc
jmp
mov
inc
add
mov
inc
add
inc
add
nop
inc
add
cwde
inc
add
nop
inc
add
js
add
inc
add
inc
add
inc
add
rol
fild
jmp
mov
inc
add
ret
xchg
mov
add
mov
inc
add
mov
add
mov
test
inc
add
enter
fxam
add
cmp
out
add
in
add
in
add
in
add
out
add
add
ja
add
outs
out
add
call
add
fwait
out
add
out
add
out
add
out
add
add
ret
in
add
in
add
loop
add
rol
add
in
add
in
add
in
add
xor
cmps
add
fbld
add
jnp
add
jmp
cmps
add
inc
cmps
add
mov
add
cmps
add
push
cmps
add
test
cmps
add
sub
add
iret
cmps
add
arpl
add
add
add
imul
add
out
add
mov
stos
add
stos
stos
add
mov
add
xchg
mov
add
mov
add
inc
mov
movs
and
inc
jno
and
inc
dec
movs
and
inc
and
inc
shl
and
inc
xchg
(bad)
and
inc
mov
add
inc
aaa
(bad)
and
inc
jnp
and
inc
xlat
mov
inc
lods
mov
inc
add
and
inc
adc
and
inc
daa
mov
inc
add
inc
add
inc
add
inc
add
inc
add
cwde
inc
add
stos
inc
add
mov
inc
add
mov
add
mov
add
xchg
inc
add
inc
add
inc
add
inc
add
mov
add
mov
add
mov
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
cdq
inc
add
mov
add
test
inc
add
inc
add
inc
mov
add
jae
add
cmp
add
push
aam
add
add
inc
fadd
add
out
add
pop
out
add
dec
out
add
dec
inc
add
inc
inc
add
cmp
inc
add
int
add
cmp
add
div
add
cmovbe
add
test
xor
add
stc
inc
add
sbb
test
aad
add
xor
add
es
mov
es
mov
add
adc
or
es
mov
es
mov
mov
add
int
add
rcr
fistp
es
add
add
add
ja
add
add
add
icebp
call
push
fwait
add
push
fwait
add
movs
call
pop
fwait
add
inc
pop
fwait
and
inc
cmp
and
inc
cmp
call
aad
and
inc
out
popf
and
inc
or
popf
and
inc
aaa
popf
and
inc
pop
sahf
and
inc
gs
and
inc
pop
sahf
and
inc
test
sahf
and
inc
pop
sahf
and
inc
loope
and
inc
add
inc
add
mov
add
mov
add
cdq
inc
add
xchg
inc
add
cdq
inc
add
ret
inc
add
mov
inc
add
test
add
mov
mov
sti
xchg
aaa
test
or
add
inc
add
inc
add
inc
add
mov
inc
add
inc
add
inc
add
popf
inc
add
jmp
add
(bad)
retf
mov
enter
enter
retf
xor
add
add
loop
add
loop
add
loop
add
loope
add
add
fucom
add
imul
add
cmps
enter
enter
leave
add
sub
add
in
enter
leave
add
jae
add
mov
add
add
pop
jecxz
add
add
inc
jecxz
add
in
add
in
add
sbb
mov
add
and
add
es
mov
es
mov
lss
sub
add
xlat
mov
es
es
mov
mov
scas
add
xlat
scas
add
lds
add
xor
add
cmc
scas
add
inc
scas
add
mov
scas
add
test
scas
add
fwait
add
es
cmps
mov
add
inc
fiadd
es
in
es
std
add
(bad)
out
es
fadd
es
in
es
in
and
inc
sbb
inc
daa
mov
inc
dec
mov
inc
fadd
les
and
les
and
les
es
stc
add
(bad)
jmp
es
fiadd
les
mov
add
add
(bad)
jmp
(bad)
in
add
(bad)
call
add
inc
std
scas
and
inc
add
inc
add
inc
add
mov
inc
add
rol
mov
inc
add
inc
add
add
jnp
inc
add
and
inc
add
xlat
inc
add
aam
add
xlat
inc
add
mov
inc
add
and
fidivr
mov
cdq
dec
dec
jmp
cmp
imul
dec
push
jae
test
sbb
bound
mov
not
repz
dec
repnz
dec
inc
addr16
ds
and
ins
pop
sub
test
xor
lock
dec
jmp
in
cwde
(bad)
mov
add
xor
shr
(bad)
mov
sbb
jecxz
adc
out
add
addr16
loop
scas
ins
dec
loopne
pusha
pushf
dec
loope
ja
(bad)
(bad)
xchg
mul
sar
call
fcomp
and
adc
adc
aas
movs
sub
ins
pop
jmp
sti
in
fimul
push
fsub
sub
cli
repz
mov
dec
imul
outs
mov
push
sbb
call
jo
sub
and
push
ss
pop
and
(bad)
sar
jae
pop
mov
int3
std
popa
sub
adc
jno
aaa
inc
jno
es
jmp
daa
repz
push
push
xor
test
scas
scas
arpl
xor
out
jo
xor
es
jmp
(bad)
push
mov
and
out
jmp
popf
xor
scas
jo
xor
es
jmp
imul
jno
es
jmp
cmp
inc
mov
cmp
inc
jmp
add
inc
pop
stos
retf
in
push
xor
call
inc
lods
inc
jae
dec
mov
pushf
retf
and
popf
sbb
cs
push
retf
inc
shr
mov
xor
cmp
mov
xchg
add
jmp
sbb
xchg
fild
mov
mov
adc
adc
and
add
in
mov
jae
fnstcw
cld
and
inc
pop
dec
sbb
xchg
mov
int3
and
dec
daa
jg
jno
add
or
adc
ds
adc
in
add
adc
nop
inc
push
inc
rcl
mov
add
ja
dec
ins
xchg
rcl
mov
(bad)
mov
daa
push
add
sbb
rcl
xchg
(bad)
(bad)
mov
dec
xor
mov
rcl
push
add
je
cmp
ins
fcom
push
nop
add
sar
jmp
cmp
adc
mov
push
sahf
push
mov
add
arpl
and
push
imul
mov
sbb
mov
add
fisttp
ds
rcl
fnstcw
shl
int3
add
push
add
mov
pop
int3
std
push
loope
push
jl
js
inc
xchg
xor
aaa
cmc
retf
out
cdq
mov
stos
add
es
add
es
inc
cmps
add
mov
add
inc
in
add
inc
stc
add
inc
jmp
add
inc
or
add
add
inc
jmp
add
inc
fld
ss
fldenv
push
inc
leave
add
inc
fldenv
ss
imul
gs
loope
inc
inc
imul
gs
or
inc
jmp
es
stc
and
and
jmp
es
and
es
jmp
or
inc
jmp
or
inc
aad
adc
cmp
add
sub
test
stc
sub
jmp
sub
in
jmp
sbb
add
jmp
sub
jmp
sub
mov
fisubr
pop
add
sbb
pop
add
sub
sub
add
sub
aam
jmp
sbb
int3
add
sub
xchg
add
sub
jmp
(bad)
dec
adc
jb
jecxz
ins
inc
sub
jg
je
(bad)
dec
xor
(bad)
outs
inc
or
add
and
dec
dec
test
aas
dec
add
aas
dec
test
dec
dec
inc
add
call
add
dec
pop
add
dec
sbb
cmovs
add
dec
jl
cmovg
cmovs
add
inc
pop
add
dec
ins
add
dec
sub
iret
inc
mov
add
dec
dec
add
inc
clc
add
popf
push
add
lods
or
lods
or
es
mov
lods
or
lods
or
lods
or
es
add
lods
or
lods
or
lods
or
lods
or
lods
or
lods
or
es
add
lods
or
stos
or
es
or
stos
or
stos
or
es
or
es
add
es
or
stos
or
es
or
stos
or
ins
inc
jmp
add
inc
jmp
or
inc
test
add
inc
jmp
or
add
add
inc
jmp
add
inc
jmp
or
inc
jmp
or
inc
jmp
or
inc
jmp
add
inc
jmp
or
inc
jmp
add
inc
jmp
or
inc
jmp
add
inc
jmp
or
inc
jmp
jmp
sub
or
jmp
sbb
add
sub
xor
aam
lds
(bad)
cmp
jmp
sub
xchg
stc
and
add
sub
arpl
jmp
sbb
ret
add
sub
cmps
add
and
add
sub
cmp
add
and
add
sub
pop
add
and
clc
and
add
sub
dec
sub
mov
dec
or
iret
dec
mov
iret
dec
dec
add
inc
add
(bad)
dec
push
add
dec
add
ins
inc
sub
(bad)
dec
jne
(bad)
dec
xor
add
or
add
and
add
dec
add
add
inc
add
dec
jmp
add
add
dec
pop
add
dec
sbb
add
inc
push
add
dec
jge
cmovnp
add
fwait
add
lods
or
lods
or
lods
or
lods
or
lods
or
es
add
lods
or
lods
or
es
ret
es
and
lods
or
lods
or
lods
or
es
add
lods
or
add
add
lods
or
lods
or
lods
or
lods
or
es
add
es
or
stos
or
es
or
es
or
inc
jmp
or
inc
sti
add
inc
jmp
or
inc
jmp
or
jmp
add
inc
jmp
or
add
add
inc
test
add
inc
jmp
or
clc
add
inc
jmp
or
inc
jmp
or
inc
jmp
or
inc
jmp
add
inc
jmp
or
inc
jmp
frstor
and
jmp
sbb
jbe
sti
cmp
jmp
sbb
add
add
add
sub
lds
jmp
sbb
add
sub
xor
aad
adc
(bad)
xor
add
sbb
add
pusha
dec
add
sub
fs
sbb
add
sub
les
jmp
sbb
add
sub
aas
sbb
inc
add
xchg
cmp
cmovo
(bad)
aas
cmp
inc
add
xchg
adc
iret
aas
push
add
aas
or
iret
aas
mov
mov
inc
icebp
add
aas
push
add
adc
jb
jecxz
pop
xchg
sub
(bad)
aas
je
jg
xor
jg
leave
add
or
dec
aas
add
aas
and
aas
inc
test
add
test
aas
aas
inc
add
inc
jmp
pop
es
or
or
popf
or
es
push
es
or
or
popf
or
es
(bad)
push
es
or
or
popf
or
es
or
popf
or
popf
or
es
inc
es
or
popf
or
es
mov
es
or
add
add
popf
or
es
or
es
or
popf
or
popf
or
es
or
es
or
in
jmp
cld
and
ins
inc
jmp
or
inc
jmp
or
jmp
cld
xor
jmp
or
inc
jmp
or
jmp
or
add
add
or
inc
jmp
or
inc
test
cld
xor
jmp
or
inc
jmp
cld
sub
enter
add
xchg
inc
add
sub
retf
sbb
lahf
add
sbb
jmp
sbb
scas
add
cli
and
add
sbb
add
add
add
fisubr
add
sbb
iret
add
sub
ret
sbb
pop
mov
repz
call
sub
xor
jmp
ins
push
add
bound
add
dec
and
add
mov
add
mov
add
mov
add
xchg
loop
pop
cmp
add
mov
dec
xchg
add
cmp
add
mov
dec
rol
fidivr
adc
mov
mov
add
nop
mov
iret
mov
add
mov
(bad)
nop
repnz
mov
mov
pop
mov
add
add
je
jg
xor
dec
nop
retf
mov
or
es
sti
fs
sti
and
popf
cld
stos
es
sti
add
popf
sti
test
popf
sti
inc
es
cld
jmp
sti
pop
es
sti
sbb
popf
cld
call
sti
jl
popf
sti
cmp
popf
cld
fisub
mov
pop
es
sti
ins
es
sti
sub
popf
cld
mov
es
sti
mov
popf
sti
dec
es
cld
cli
lea
add
popf
sti
push
es
sti
adc
js
ret
or
es
sti
jb
inc
jmp
cli
pusha
inc
clc
or
inc
jmp
cli
add
and
jmp
sti
fs
jmp
or
inc
jmp
sti
sbb
jmp
or
jmp
sti
sbb
jmp
or
inc
jmp
add
jmp
sti
sbb
jmp
sti
in
inc
jmp
or
inc
jmp
sti
sbb
jns
add
push
push
add
ins
push
add
pop
push
add
pop
jle
clc
push
cmp
add
cmp
fiadd
jmp
sub
push
add
sbb
add
push
cmp
jmp
std
sub
add
cld
lods
add
push
and
jmp
fisttp
jmp
push
sub
jmp
mov
int
jmp
lods
mov
(bad)
call
sub
mul
inc
add
pop
inc
adc
test
adc
add
add
cmp
pop
cmp
inc
dec
cmp
add
add
arpl
and
pop
cmp
and
add
add
or
push
cmp
or
cmp
add
(bad)
add
adc
sbb
add
add
into
cmp
add
cmp
push
loop
popa
add
cmp
pusha
iret
cmp
add
cmp
add
cmp
add
cmp
xor
cmp
add
cmp
or
cmp
add
cmp
add
lea
adc
pop
add
xchg
add
es
add
cmps
add
cmps
add
xchg
add
es
add
mov
add
es
add
repz
mov
pop
xor
mov
sbb
push
push
ja
mov
add
aad
and
inc
mov
test
mov
call
xchg
js
mov
dec
and
mov
inc
mov
stos
inc
movs
mov
sub
mov
mov
lahf
imul
sub
add
std
mov
daa
xor
pusha
sub
dec
nop
mov
enter
mov
jo
push
mov
mov
mov
sbb
xchg
sub
sbb
lahf
mov
mov
add
add
push
aam
icebp
jmp
push
xlat
fst
add
repz
jo
xlat
add
mov
retf
push
jo
into
iret
fmulp
(bad)
mov
icebp
in
ds
cmp
cmp
das
clc
adc
cmp
ror
mov
in
jbe
aam
add
jbe
add
jo
jo
shl
mov
leave
lahf
fidivr
inc
js
fadd
lea
xchg
ror
loope
fcomp
jg
and
or
and
add
push
imul
ins
sbb
xor
(bad)
xor
push
ins
(bad)
ds
cmp
mov
(bad)
ins
mov
and
or
cld
pusha
call
ins
sti
ror
pop
mov
or
mov
dec
in
dec
fcom
shl
imul
cmp
lods
mov
sub
inc
push
add
es
aaa
or
push
add
add
or
pop
and
outs
js
push
inc
movs
scas
data16
add
mov
(bad)
int3
(bad)
and
fnstcw
jnp
rcl
xchg
mov
sbb
mov
xor
mov
cmp
inc
setbe
and
movs
inc
aad
cmc
push
shr
sbb
(bad)
(bad)
bound
into
pop
ins
xor
repnz
pop
mov
call
add
and
lods
jbe
xchg
sbb
daa
es
lds
sbb
xor
les
add
test
push
push
mov
sbb
test
mov
mov
jbe
shl
push
in
(bad)
dec
stc
cmc
xchg
popa
int
push
xor
fidiv
mov
mov
add
ins
sub
jg
inc
or
inc
sub
and
mov
sbb
xor
scas
sbb
fwait
and
jecxz
push
mov
test
cmp
mov
and
vpunpckhdq
mov
adc
sub
sti
rcr
ins
ret
je
(bad)
iret
push
in
lahf
pop
jns
and
add
in
push
retf
jecxz
pop
add
cmp
xchg
add
xchg
shl
mov
imul
mov
movs
or
xchg
mov
imul
cs
or
iret
rol
push
mov
push
pop
xchg
mov
imul
hlt
scas
outs
nop
add
mov
out
inc
add
add
xchg
adc
gs
imul
imul
ins
push
out
or
inc
mov
push
bound
mov
pop
shl
sub
imul
pop
sar
push
sti
fisub
or
sbb
mov
mov
popa
add
mov
push
sar
add
add
retf
dec
jo
ror
(bad)
std
(bad)
jae
cs
adc
inc
fwait
dec
data16
cmp
outs
jmp
popa
xchg
xchg
int3
jne
gs
add
add
add
sub
sbb
out
pusha
ss
scas
xor
jp
and
jns
outs
sahf
pop
sbb
jns
mov
mov
xchg
arpl
leave
jge
lods
fisub
ss
scas
lods
inc
nop
mov
push
out
retf
out
fldenv
jg
sbb
sti
pop
inc
and
cmc
fnstsw
pop
ja
movs
dec
mov
pushf
fist
leave
or
daa
shr
push
rol
outs
test
mov
mov
rol
or
cmps
dec
arpl
add
add
jne
int
mov
ficom
pop
pop
xchg
dec
or
in
outs
add
hlt
jne
outs
xor
dec
or
and
sbb
or
jnp
and
mov
lock
repz
ja
mov
pushf
hlt
pop
mov
lds
add
(bad)
push
jo
stos
and
out
je
lahf
std
imul
mov
or
pop
add
cmp
dec
or
mov
ret
push
(bad)
cli
adc
dec
retf
push
lea
cmp
adc
or
inc
int3
pop
ja
xlat
inc
inc
jecxz
outs
add
sub
mov
clc
jbe
xchg
iret
in
(bad)
fidivr
int3
mov
add
add
mov
bound
sahf
jns
xor
push
inc
loopne
dec
pop
out
push
push
imul
or
inc
and
shr
std
mov
or
iret
pop
or
daa
retf
mov
cmps
xor
push
movs
and
iret
aam
xchg
mov
or
adc
push
(bad)
inc
dec
jle
add
add
aas
cmp
and
rcr
xor
adc
pop
adc
xchg
dec
aam
loope
out
fwait
mov
push
inc
mov
dec
ds
std
pop
stc
xchg
sar
arpl
pop
inc
jecxz
scas
ret
mov
pop
jb
adc
sub
mov
mov
pop
out
das
repnz
pop
adc
add
add
imul
push
jl
jmp
pushw
xor
imul
out
or
sub
es
jecxz
out
mov
stos
sbb
adc
cli
sbb
push
push
pop
mov
lock
sub
es
mov
mov
mov
lock
fnsave
jle
les
sub
rol
add
add
pusha
mov
add
pushf
add
sub
dec
push
rol
adc
clc
mov
fcomp
jg
outs
ins
push
retf
add
dec
jnp
add
xchg
enter
(bad)
adc
std
repz
jno
mov
ins
iret
gs
stos
sbb
cdq
xlat
sbb
mov
ins
shr
pop
push
pop
xor
int3
cmp
pop
mov
xchg
imul
inc
jp
cmc
pop
arpl
cli
retf
or
retf
stc
push
xlat
loopne
push
xchg
scas
hlt
mov
mov
test
sbb
cmp
add
inc
push
push
sub
jmp
jns
ds
bound
cmp
cli
jmp
mov
fist
in
jno
cld
es
and
push
xor
popf
push
loope
aam
cli
neg
out
(bad)
int
pop
int3
les
lea
cmp
cli
sti
stos
mov
sub
ret
add
push
jnp
not
cmp
pop
or
pop
and
xchg
aas
aaa
leave
cmp
mov
add
retf
mov
xchg
sar
dec
scas
out
shl
and
mov
jno
inc
inc
pusha
call
pop
in
rol
push
xchg
arpl
cmp
ret
xchg
cmc
pop
rol
ja
jmp
mov
sbb
jmp
xlat
jmp
sub
inc
inc
fsub
add
add
lds
inc
xchg
rcr
pop
aas
fwait
aas
fs
xor
dec
lahf
mov
dec
int
sbb
mov
lock
inc
add
bound
cmps
int3
mov
xlat
push
cmps
pop
add
sbb
or
sub
sbb
in
sbb
xchg
xor
(bad)
lods
jb
dec
inc
mov
pop
icebp
test
fbstp
adc
push
cwde
mov
push
leave
pusha
pop
cmp
mov
cmp
dec
cmp
retf
add
repnz
mov
cmp
push
adc
aaa
mov
dec
pop
xor
cmp
xor
call
add
mov
test
daa
inc
sbb
and
add
add
pusha
lahf
and
out
pop
mov
and
ja
jo
mov
sub
pop
jno
jl
mov
mov
cmc
mov
leave
call
sbb
(bad)
popa
xchg
ja
pop
push
jbe
mov
je
fcmovnbe
jne
mov
repnz
jg
dec
or
jl
xor
js
add
add
and
leave
(bad)
sbb
loop
jle
push
mov
cli
or
test
cld
ins
push
xor
(bad)
sti
repnz
jb
scas
les
push
jmp
retf
lea
ret
and
dec
iret
xlat
pop
mov
pop
sbb
xor
xchg
ins
mov
or
pop
jb
fstp
push
test
bound
loop
ficomp
add
mov
lods
add
add
sti
push
loopne
mov
jne
outs
adc
sub
or
loop
xor
cwde
adc
push
push
push
sbb
enter
sbb
call
xor
push
cmp
retf
push
pop
gs
adc
mov
nop
pusha
jne
inc
ja
pop
adc
call
pusha
in
pop
pusha
ror
out
jecxz
add
pushf
mov
in
dec
mov
call
arpl
in
jmp
es
cld
push
dec
iret
inc
adc
pushf
sti
stos
mov
pop
clc
mov
add
add
xor
fcom
std
lock
dec
hlt
mov
mov
shl
add
fcom
pop
mov
(bad)
ret
gs
jb
mov
mov
imul
xlat
cwde
and
aam
out
sub
ret
adc
mov
ror
push
and
outs
mov
add
and
pushf
les
add
(bad)
cmp
push
ret
xchg
ret
in
mov
adc
imul
dec
retf
call
aaa
leave
enter
leave
rol
int3
cld
sbb
int
nop
ror
cli
add
aas
shr
nop
sub
sub
stos
jp
xchg
push
add
lods
and
ret
test
add
add
or
cli
xchg
inc
sub
mov
xchg
rep
jp
mov
int3
mov
iret
mov
add
add
pmulhuw
sahf
repnz
call
jae
cmps
pop
fstp
cmps
ss
pop
push
stos
push
sbb
mov
mov
jp
into
stos
add
add
add
mov
movs
mov
mov
sti
addr16
mov
loope
xlat
stos
into
stos
cmc
test
sub
js
sub
inc
pop
movs
cmp
cmps
sbb
bound
ja
out
pusha
leave
movs
mov
loop
xor
mov
popf
mov
loope
scas
sahf
dec
sbb
mov
add
mov
mov
jl
mov
add
inc
inc
pop
ret
(bad)
in
cmp
mov
cdq
in
fist
fbld
int
popf
xchg
mov
cmp
or
xor
mov
jge
icebp
sbb
loopne
xor
dec
push
inc
jne
call
mov
gs
fimul
stos
sub
or
adc
sub
dec
push
dec
xchg
jp
sbb
stos
cmc
mov
mov
and
xor
jp
cmp
(bad)
push
jo
das
rcr
in
xchg
lods
mov
in
scas
out
test
cmps
cmp
adc
pop
xor
pop
in
in
push
pop
push
or
clc
sahf
mov
lock
xlat
xchg
dec
and
add
jg
aas
cmc
(bad)
mov
inc
aad
test
ins
xchg
xchg
lahf
xor
or
lahf
fbstp
sub
es
std
mov
es
xor
call
popf
and
cmps
inc
icebp
xchg
sbb
lahf
push
lds
bound
mov
and
and
xor
rcl
mov
loopne
ret
cmp
in
or
mov
sub
pop
iret
arpl
jmp
inc
jne
f2xm1
mov
mov
jo
movs
mov
std
mov
inc
add
pop
fild
add
add
sbb
adc
jmp
ret
popa
repz
aad
dec
xchg
sbb
fmul
fiadd
pop
arpl
ret
xlat
cmps
xchg
rcl
push
sbb
pusha
mov
jecxz
jl
test
loop
fs
fstp
retf
movs
xchg
ficomp
cmp
xor
add
push
inc
adc
mov
add
add
jbe
jnp
sahf
xlat
mov
in
add
cmp
pop
and
dec
sbb
mov
jl
in
pop
shr
jns
adc
xchg
sbb
adc
outs
(bad)
fimul
cmps
mov
sub
mov
push
dec
push
cmp
mov
pop
loope
lds
lea
add
add
add
push
push
sti
push
mov
pop
and
ja
into
mov
pop
(bad)
and
je
hlt
js
in
sar
std
shl
sbb
push
adc
dec
nop
retf
in
mov
in
cmp
outs
xor
cmc
mov
fstp
ret
lock
xchg
cli
jmp
popa
mov
mov
add
add
arpl
push
cdq
(bad)
and
shr
retf
pop
out
add
int3
push
adc
cmp
jnp
mov
(bad)
bndldx
xchg
div
stos
sub
popf
adc
push
jp
movs
cmps
lock
pop
mov
jp
je
iret
mov
mov
movs
jno
call
iret
push
adc
mov
icebp
loopne
call
clc
dec
sub
das
fist
jb
jne
fcomp
jne
popa
inc
sbb
data16
push
fwait
pop
add
es
dec
mov
push
in
push
inc
das
shr
nop
mov
pop
call
loope
fwait
push
cmp
leave
and
fidivr
aas
cli
push
icebp
jp
or
movs
fsub
popf
sbb
jns
sbb
in
jns
jo
xchg
sahf
in
adc
cmp
lea
xor
sub
in
push
cmp
cmp
mov
and
scas
iret
enter
and
cmc
test
mov
sub
pop
fld
mov
rcl
or
mov
or
mov
mov
xchg
inc
int3
loop
cli
sub
jmp
push
jnp
int3
arpl
aaa
je
inc
lods
data16
inc
fsubrp
and
xor
(bad)
jmp
sub
adc
sbb
pop
or
mov
add
stos
movs
mov
pop
push
push
ja
mov
adc
sub
sbb
mov
jns
dec
xchg
add
neg
repnz
jo
retf
fadd
and
xchg
in
sub
test
pop
dec
cwde
push
stos
dec
test
xor
stc
jp
sbb
in
sbb
dec
pop
inc
ins
fprem1
addr16
bound
cmc
and
and
inc
dec
adc
and
lods
pop
jno
ret
inc
in
adc
aam
lea
std
push
mov
jp
cmps
cli
std
cmc
xchg
ins
xchg
fcmovne
(bad)
arpl
clc
inc
cmp
js
jne
das
(bad)
or
fistp
retf
xor
int3
int
sub
aad
cmps
fcmovbe
popa
xor
fwait
mov
les
adc
sub
push
mov
sbb
(bad)
sub
call
test
add
add
pushf
and
cmp
rol
pop
enter
shl
mov
dec
jae
lahf
pusha
jne
sub
imul
ret
cmc
inc
add
stc
repnz
cmps
mov
std
xchg
ds
out
and
js
adc
inc
and
inc
rcr
xlat
outs
fstp
pop
out
es
mov
and
cli
xchg
add
sub
sti
xor
adc
aas
adc
ficomp
imul
std
xlat
xor
push
xor
or
jno
jbe
push
push
bound
retf
mov
dec
aad
fnstcw
sbb
iret
push
inc
xchg
inc
lods
shr
and
add
add
jg
enter
cmp
and
adc
pop
inc
xchg
sub
mov
add
or
add
cmps
pop
ins
push
rcr
cwde
cmp
retf
and
cmc
fwait
mov
cdq
sub
setbe
sbb
jge
and
mov
jmp
call
out
scas
in
lock
add
add
add
cmp
dec
pop
test
ins
into
or
(bad)
popf
test
daa
push
sahf
mov
push
inc
add
sar
repnz
xor
push
pop
mov
dec
ss
inc
push
out
ja
jbe
lea
loopne
ja
pop
mov
fcmovu
outs
jns
out
stc
add
mov
aad
xchg
mov
add
jns
les
jnp
push
mov
data16
popa
fcom
mov
(bad)
jbe
pop
mov
std
sbb
movs
add
nop
sbb
jp
(bad)
and
shl
(bad)
dec
sbb
out
xor
mov
out
cmp
rol
das
clc
jbe
loop
inc
and
mov
and
push
add
add
outs
pop
mov
je
sub
ror
aaa
aas
retf
sahf
lods
xor
scas
adc
push
ret
and
or
push
mov
sbb
test
and
sbb
inc
mov
pop
push
sbb
bnd
xchg
fnsave
sub
aad
enter
ss
mov
aam
(bad)
cmp
inc
add
mov
add
xchg
imul
movs
aad
imul
or
jo
in
jo
iret
pop
(bad)
test
add
test
loope
shr
inc
sbb
ja
pop
loope
mov
pop
fst
daa
es
push
lock
ret
sub
or
mul
sbb
dec
iret
sbb
ficom
out
dec
mov
popa
dec
data16
add
add
lock
(bad)
mov
aas
or
xchg
jg
mul
test
push
sbb
int3
test
add
jb
add
mov
(bad)
jmp
cmp
fisubr
xchg
cmp
das
xchg
popf
or
aaa
stos
stc
shl
cld
daa
jae
add
inc
add
(bad)
dec
xor
jo
and
add
cmp
add
xor
inc
stc
or
xchg
(bad)
ja
mov
mov
mov
fxch
mov
dec
or
clc
jge
icebp
lds
iret
mov
adc
(bad)
and
xchg
mov
rcr
inc
xchg
jno
(bad)
push
pop
shl
adc
into
mov
dec
lds
test
sbb
stc
(bad)
retf
das
pop
pop
loopne
ins
sbb
lahf
inc
aas
rol
dec
push
mov
and
test
push
icebp
pop
ja
mov
mov
shr
mov
sub
int3
daa
ds
lea
int3
ds
xor
jmp
repz
dec
ficomp
data16
or
pop
cmp
sub
ss
sub
xchg
or
xlat
push
sbb
out
repnz
add
jo
pop
xchg
mov
add
(bad)
scas
jno
dec
inc
pop
mov
popa
push
pushf
outs
mov
xor
cmp
mov
and
stos
xor
leave
xchg
dec
sub
ins
cmc
jl
dec
loopne
les
into
test
arpl
enter
jecxz
leave
rcr
jbe
xchg
lds
aaa
or
test
add
(bad)
mov
add
mov
ss
jbe
jp
lea
mov
and
mov
pop
mov
and
add
test
push
enter
xor
(bad)
and
or
add
cmps
cmp
loope
and
call
test
loop
cmp
and
dec
popa
pusha
push
mov
test
sub
xor
daa
stos
cmp
cmp
push
inc
push
sub
xlat
addr16
inc
fdiv
test
je
push
sub
repnz
(bad)
jge
mov
outs
xor
xor
ret
cwde
xchg
jl
(bad)
mov
cli
movs
xlat
push
mov
cmps
jmp
add
and
cwde
dec
sub
sti
stc
leave
out
aam
mov
pop
dec
add
int
xchg
mov
adc
pop
and
mov
cmp
add
inc
or
mov
pop
add
mov
cwde
mov
(bad)
inc
push
dec
push
dec
jl
pop
es
sub
mov
sbb
add
add
xor
xchg
jne
jo
mov
push
push
xlat
mov
hlt
pop
xchg
cmps
xchg
jne
xchg
sti
mov
mov
jle
rcr
cmp
xchg
sub
dec
xor
sub
ret
pop
mov
aas
lods
push
add
imul
retf
xchg
add
or
(bad)
scas
sahf
and
lahf
dec
cmp
lods
std
mov
lahf
adc
pop
sbb
fst
inc
mov
cmp
in
arpl
out
js
xor
cwde
cmp
movs
adc
mov
icebp
or
mov
xchg
(bad)
into
push
jns
or
add
mov
out
jmp
inc
mov
add
rcl
(bad)
into
push
sahf
add
aaa
mov
sbb
bound
in
std
(bad)
jns
movs
popf
cmp
fmul
inc
sbb
add
cwde
pop
cmp
xlat
mov
or
cdq
mov
push
jb
sub
adc
into
adc
dec
ins
xchg
out
jge
daa
cmp
inc
outs
xor
add
add
mov
call
loope
imul
and
pop
add
jecxz
push
or
dec
adc
data16
cs
pop
ins
cwde
loopne
mov
jp
xor
sti
loopne
inc
loop
cld
sbb
cmp
shl
mov
jge
inc
cmp
mov
imul
pop
or
clc
push
cmp
add
add
inc
scas
mov
push
sahf
lock
xor
jb
inc
add
mov
ret
int
mov
fmul
(bad)
ret
mov
mov
or
test
(bad)
cmp
arpl
out
loope
pop
clc
fs
xchg
push
es
sub
aas
inc
sbb
mov
loope
popa
ja
mov
sbb
add
lea
in
sub
adc
icebp
fidivr
cwde
or
es
xchg
pop
fistp
dec
popf
xor
pop
mov
in
inc
dec
inc
mov
push
retf
push
or
jg
inc
out
bnd
test
xchg
push
add
jg
stc
xchg
mov
test
inc
sbb
push
xchg
sbb
es
sub
add
cdq
mov
pop
out
fmul
retf
arpl
(bad)
movs
mov
das
rcr
fisubr
rcr
cmp
lahf
xchg
rcr
rcl
adc
push
or
xchg
out
mov
cmp
cmp
rcl
pop
stos
cmp
cmc
mov
pop
xor
sbb
add
inc
mov
std
dec
ror
add
xor
push
and
movs
iret
mov
shr
movs
retf
(bad)
std
aad
sub
(bad)
pop
pop
fidivr
fadd
ins
xchg
adc
xor
sbb
mov
xor
mov
stos
mov
test
test
inc
inc
cdq
jecxz
enter
sub
xor
movs
pop
and
ss
and
sar
ins
jecxz
das
scas
dec
retf
and
sbb
add
call
add
inc
mov
xor
pop
jae
or
sub
push
addr16
ds
repnz
ins
mov
test
loop
cld
jge
lds
push
fist
test
sub
add
sub
or
cs
fidiv
sbb
jno
in
out
into
out
in
sub
mov
mov
enter
rcr
dec
(bad)
lahf
and
shl
xlat
and
pop
cmc
jmp
mov
outs
lods
add
xchg
push
mov
add
add
mov
imul
xor
jg
std
psubd
mov
les
scas
fwait
pop
add
pop
pop
les
inc
pop
inc
push
pop
ja
inc
xchg
jo
sub
ins
dec
jmp
movs
sbb
inc
mov
cwde
mov
mov
loop
inc
(bad)
adc
leave
mov
inc
jb
rcr
pop
sahf
sub
or
test
mov
cmp
ret
fs
cmp
das
imul
cmp
and
mov
icebp
or
xor
xchg
outs
bound
mov
mov
xor
stos
xor
jge
and
and
stos
adc
lahf
add
mov
pop
es
pop
retf
pop
jl
sbb
push
pushf
jbe
lock
jl
push
jne
ret
lds
jl
pop
pop
cmps
iret
push
pop
xor
sbb
aas
adc
cdq
dec
jae
jb
je
push
xor
hlt
push
and
pop
pop
enter
mov
jb
pop
(bad)
std
and
call
mov
push
mov
adc
arpl
cmp
addr16
(bad)
or
mov
shl
movs
xor
movs
in
stc
push
lahf
js
lock
adc
sub
fdivr
jmp
add
inc
lahf
mov
les
sub
stos
popf
cli
xchg
popf
retf
sar
pop
cmps
mov
int
fisttp
dec
mov
jle
punpckldq
gs
mov
inc
pop
aaa
pop
test
fstp
mov
pop
fild
in
ret
mov
lds
inc
(bad)
or
popf
outs
push
scas
mov
jns
lock
sub
jb
lods
cmp
lahf
dec
sub
dec
pop
loopne
mov
lods
mov
sahf
out
sub
jnp
mov
adc
lods
cld
push
mov
push
repz
sbb
sbb
out
retf
retf
mov
or
lds
lock
xor
adc
cli
iret
mov
into
sub
mov
popa
jnp
rcl
in
loop
dec
xchg
jnp
es
xor
jne
stc
aas
ins
cmp
leave
or
test
cwde
cmps
test
in
cmc
rol
push
mov
shl
outs
aas
push
xor
mov
xchg
loope
push
dec
jbe
add
(bad)
cs
inc
leave
into
jnp
out
mov
loope
sbb
push
sub
mov
and
stc
mov
pop
mul
clc
cmp
dec
adc
mov
pop
sar
xor
xorps
dec
loope
data16
daa
or
rol
cld
mov
jns
cmp
addr16
loopne
pop
and
sub
cld
push
sub
mov
xor
dec
lods
dec
lods
cmc
sbb
xor
jge
iret
pop
sbb
stc
jmp
arpl
out
(bad)
fild
mov
push
sbb
jg
xchg
js
dec
and
hlt
and
test
fimul
mov
xlat
push
in
add
pop
push
mov
test
loope
iret
mov
inc
bound
addr16
outs
add
dec
mov
adc
xor
cld
out
push
jb
pushf
sbb
(bad)
stc
(bad)
imul
xor
push
scas
cmps
aaa
jmp
pushf
cwde
dec
idiv
jne
(bad)
sbb
inc
out
and
es
cmp
js
loop
xlat
jns
xor
std
aaa
test
jle
popf
lahf
sbb
iret
and
or
sub
sahf
push
in
xor
mov
cmps
push
leave
xchg
sub
sbb
or
dec
(bad)
ins
dec
addr16
push
mov
inc
loope
pop
cmp
stc
int
dec
ins
inc
frstpm(287
xchg
push
jae
aaa
mov
fmulp
int3
enter
adc
daa
test
jp
xor
fimul
retf
xor
mov
in
push
xor
pop
inc
mov
xor
int
xlat
mov
stos
sti
stos
repnz
adc
mov
mov
pop
mov
mov
ror
or
pop
mov
icebp
jecxz
call
dec
add
(bad)
adc
out
bound
ins
int
jno
test
cld
xor
mov
and
in
in
mov
inc
adc
add
add
popf
(bad)
and
jnp
ds
push
and
mov
or
aas
stc
pop
push
scas
xchg
mov
lea
add
mov
sbb
xor
jl
fiadd
lods
test
bnd
cmp
push
and
ds
fstp
stos
xor
add
or
cdq
shr
jno
sbb
sub
stos
cld
je
inc
push
rol
les
not
(bad)
scas
pop
std
ficom
ds
jae
push
and
iret
int
jno
test
cdq
cmp
popa
xchg
pop
repz
(bad)
out
aad
sahf
loope
or
js
pop
mov
aam
push
mov
xchg
cmp
add
add
dec
cwde
in
sub
jmp
push
enter
mov
jno
inc
pop
ficom
mov
outs
push
pop
adc
std
add
push
push
sbb
push
pop
cmp
in
es
adc
int
sti
dec
popa
call
add
pop
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
jmp
es
jmp
es
jmp
es
jmp
es
jmp
inc
jmp
inc
in
add
inc
in
es
in
add
inc
in
es
in
add
inc
in
es
in
add
inc
in
es
jmp
repnz
add
aaa
inc
loope
das
inc
jecxz
sub
inc
out
add
inc
jmp
add
inc
jmp
add
inc
call
add
inc
jmp
es
jmp
es
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
jg
add
jg
add
dec
inc
add
dec
inc
add
aas
inc
add
aas
inc
add
dec
inc
add
dec
inc
add
cmp
inc
add
adc
cmove
add
inc
or
jnp
or
retf
inc
or
sbb
add
inc
or
pop
inc
or
stos
inc
or
fild
add
inc
or
dec
inc
or
sti
aas
or
mov
add
inc
or
sub
add
or
retf
inc
or
jge
or
std
aas
or
sbb
es
add
es
or
sti
add
cmp
es
add
es
add
mov
or
or
es
add
es
add
mov
or
or
es
add
rol
or
mov
add
es
or
repz
es
add
es
add
es
add
es
add
adc
es
add
es
add
es
add
adc
es
add
es
out
add
inc
add
add
inc
cmps
add
inc
iret
add
inc
inc
add
inc
(bad)
cs
xchg
push
inc
inc
push
inc
ja
cs
mov
add
inc
inc
push
inc
ja
cs
mov
add
inc
test
cs
cmps
add
inc
pop
add
inc
xlat
add
inc
dec
add
add
add
inc
xchg
cs
inc
push
inc
pop
add
inc
jg
cs
aaa
add
inc
scas
add
inc
pop
add
inc
jg
cs
add
and
scas
sub
call
sub
sub
cmp
test
cmp
enter
dec
sub
or
cmp
mov
cmp
clc
and
cmp
mov
sub
clc
and
cmp
mov
and
cmp
lock
cmp
mov
sub
shl
cmp
and
add
and
and
add
es
or
cmps
inc
or
push
inc
or
(bad)
inc
or
jp
or
or
add
or
retf
add
or
jmp
add
inc
or
mov
inc
or
cli
inc
or
sub
add
inc
or
pop
inc
or
adc
add
inc
or
adc
add
inc
or
jb
or
mov
inc
or
and
add
or
es
or
lock
es
add
rol
js
or
lock
es
es
es
add
or
pop
add
or
fiadd
es
add
es
add
or
fiadd
inc
or
inc
or
jle
or
jle
or
add
es
cmps
add
cmps
add
or
test
es
es
inc
adc
add
add
inc
adc
pop
inc
add
push
add
inc
push
add
pop
inc
ret
inc
add
inc
add
pop
inc
jb
pop
inc
and
inc
and
pop
inc
xchg
add
inc
and
inc
and
pop
inc
xchg
add
inc
ret
inc
ret
inc
xor
pop
inc
xor
inc
out
add
inc
out
das
inc
outs
add
inc
data16
inc
scas
add
inc
cmps
add
inc
add
and
dec
add
sub
push
and
dec
add
sub
inc
and
dec
add
and
dec
add
and
add
dec
add
dec
add
sub
push
and
dec
add
sub
push
and
add
add
dec
add
and
dec
add
sub
ss
dec
add
and
add
dec
add
dec
add
cwde
inc
or
mov
add
dec
or
sub
add
dec
or
sub
add
inc
or
clc
inc
or
call
inc
or
enter
sub
add
or
clc
inc
or
clc
inc
or
or
add
inc
or
mov
inc
or
or
add
inc
or
cwde
inc
or
cwde
inc
or
call
inc
or
pop
inc
or
cmp
add
inc
pop
add
inc
pop
add
or
add
es
add
es
add
es
add
es
pop
es
add
test
es
add
es
add
xor
pop
imul
es
add
and
pop
es
add
add
pop
cmp
pop
sub
or
stos
add
es
es
add
es
or
or
mov
es
jmp
add
inc
loope
and
sub
and
sub
and
sub
and
sub
and
sub
and
sub
and
sub
and
sub
and
sub
and
sub
and
sub
and
sub
and
sub
and
sub
and
in
inc
add
out
inc
pop
loope
dec
or
sub
dec
or
and
jecxz
dec
or
xor
repz
repz
loop
dec
or
xor
repnz
repnz
in
push
or
xor
cmc
sub
in
and
in
push
or
xor
cmc
sub
in
and
in
add
add
dec
or
hlt
sub
in
and
in
dec
or
add
dec
or
or
loope
push
push
icebp
push
push
push
add
push
add
push
add
push
rcl
push
rcl
rcl
loope
push
push
mov
push
push
rcl
rcl
adc
push
adc
sldt
add
pusha
push
(bad)
pshufw
adc
adc
adc
push
push
(bad)
cmovo
cmovo
punpcklbw
wrmsr
push
(bad)
cmovo
(bad)
adc
xor
adc
sub
adc
and
adc
sbb
adc
adc
xor
adc
cmp
sbb
xor
sbb
cmp
sbb
xor
sbb
push
inc
sbb
push
inc
sbb
push
xor
sbb
xor
sbb
and
sbb
and
sbb
pop
sbb
sbb
sbb
sbb
sbb
or
sbb
or
sbb
cmp
sbb
cmp
sbb
sub
sbb
sub
sbb
sbb
inc
add
or
pop
repnz
pop
loop
sub
pop
aad
and
pop
sbb
and
add
add
pop
std
pop
or
pop
inc
pop
in
pop
cmp
pop
xor
pop
sub
pop
and
pop
sbb
and
pop
std
pop
or
pop
inc
pop
in
pop
cmp
pop
xor
pop
sub
and
pop
int3
and
pop
add
adc
and
pop
hlt
and
in
and
pop
in
xor
and
pop
add
push
pop
sbb
add
pop
sbb
add
pop
sbb
in
inc
push
sbb
fadd
sbb
in
inc
pop
icebp
sbb
dec
or
xor
fdiv
inc
or
out
sbb
fst
push
adc
adc
adc
adc
adc
aaa
push
adc
aaa
push
adc
ss
adc
ss
adc
sbb
aad
push
adc
sbb
cmc
adc
cld
cmp
hlt
xor
add
adc
adc
push
dec
push
push
xor
push
xor
push
and
pop
adc
pop
lock
pop
pop
lock
pop
pop
xlat
pop
sbb
xlat
pop
sbb
daa
pop
sbb
daa
pop
sbb
xlat
pop
sbb
xlat
pop
sbb
(bad)
pop
sbb
(bad)
pop
sbb
(bad)
pop
sbb
(bad)
pop
sbb
es
sbb
es
sbb
xchg
pop
sbb
xchg
pop
sbb
xchg
sbb
pop
sbb
push
pop
sbb
and
pop
sbb
es
sbb
sub
sbb
sub
sbb
sbb
sbb
sbb
inc
sbb
or
xor
sbb
and
sbb
sub
add
sub
add
sub
add
sub
add
and
add
daa
add
es
add
es
add
xor
add
daa
add
es
add
es
add
es
add
es
add
es
fld
es
loope
es
sub
inc
cmp
inc
or
inc
stc
add
inc
imul
inc
sub
inc
dec
add
inc
jmp
add
inc
jmp
add
inc
call
add
inc
jmp
inc
out
es
loope
es
fld
es
fld
es
loope
es
leave
add
inc
mov
add
inc
dec
add
inc
imul
es
jmp
add
inc
add
and
sub
imul
add
sub
inc
add
xor
add
add
inc
add
cmc
inc
add
gs
jmp
and
ds
and
dec
add
and
push
add
and
push
add
and
jns
stos
and
mov
push
loope
sub
inc
add
and
push
add
and
inc
adc
pop
inc
adc
pop
inc
adc
dec
inc
adc
ins
inc
adc
pop
inc
adc
pop
inc
adc
dec
inc
adc
imul
pop
inc
adc
pop
inc
adc
add
inc
retf
add
inc
add
push
inc
add
cld
inc
add
cli
inc
pop
add
inc
or
add
inc
xor
mov
inc
rol
inc
add
mov
dec
add
push
add
mov
add
pusha
pop
add
cmp
adc
cmp
adc
sbb
adc
sbb
adc
sbb
adc
lsl
cmp
adc
es
xor
sbb
and
sbb
and
sbb
adc
sbb
pop
add
inc
add
fld
inc
es
jne
icebp
jmp
jno
add
jae
out
and
out
repz
add
cmp
outs
push
fisub
jb
retf
out
push
push
fninit
jae
ret
sub
add
es
inc
inc
es
or
jmp
and
jmp
jle
(bad)
fadd
sub
imul
inc
fnstenv
cmps
xchg
imul
inc
out
icebp
jae
shl
mov
adc
add
add
inc
leave
jecxz
pushf
shr
cmp
sti
xchg
mov
xrelease
add
cmp
or
dec
icebp
add
inc
jmp
pop
sbb
jns
imul
cmp
push
repz
inc
push
js
imul
arpl
cmp
sub
repz
inc
fimul
dec
jmp
cs
add
xor
ftst
pop
jmp
sub
fstp
je
xor
ficom
and
lahf
push
jbe
xor
inc
sbb
inc
cwde
loope
js
(bad)
cwde
or
aaa
(bad)
and
xlat
sub
push
or
popa
pusha
add
pop
mov
int3
inc
sub
dec
pop
pop
ss
inc
xchg
loop
mov
add
mov
dec
sub
mov
adc
in
in
repz
int3
mov
mov
sbb
cwde
aad
xor
rol
ret
(bad)
aam
ret
test
mov
(bad)
dec
add
popf
(bad)
les
dec
(bad)
mov
inc
data16
push
cmp
xchg
sbb
add
mov
mov
loopne
shl
sbb
add
sbb
add
lahf
jns
es
jns
sbb
add
mov
js
les
add
fwait
add
add
add
xchg
add
es
add
es
add
es
add
outs
add
es
add
es
add
es
popf
add
es
add
es
add
es
add
es
push
add
inc
or
inc
int
es
jmp
es
leave
lds
inc
call
add
inc
sbb
cdq
das
in
es
sbb
mov
loope
in
jmp
add
inc
call
and
inc
adc
inc
mov
add
inc
loope
es
inc
and
inc
rol
es
jns
inc
lock
inc
icebp
add
inc
aad
inc
hlt
add
inc
in
es
add
rol
push
rol
rol
pop
lods
test
je
inc
add
popf
test
and
mov
and
jl
add
inc
add
add
push
test
imul
add
inc
add
push
test
ins
and
test
ins
and
test
outs
and
test
outs
and
test
add
add
in
inc
add
and
push
inc
add
adc
inc
add
add
sbb
xor
add
inc
add
add
sub
dec
add
arpl
inc
add
inc
fadd
lods
inc
inc
add
inc
pop
add
inc
pop
add
inc
fs
inc
jns
add
add
inc
jnp
out
inc
add
add
add
inc
pop
add
into
add
and
add
rol
daa
ret
daa
mov
jp
add
add
mov
add
mov
jl
pop
add
add
daa
pusha
add
daa
add
daa
arpl
or
popa
add
daa
test
push
daa
jmp
adc
in
add
leave
add
fadd
push
daa
rol
pop
daa
aam
outs
daa
add
jo
in
add
mov
add
daa
rol
daa
lds
pop
daa
ret
add
daa
inc
push
add
inc
pop
add
inc
pop
add
cmp
pop
inc
xor
push
inc
xor
jg
xor
dec
inc
and
push
inc
pop
add
push
add
inc
dec
add
or
add
inc
inc
cmp
add
xchg
add
nop
add
inc
xchg
add
inc
test
cmp
add
xchg
add
inc
rol
add
add
inc
mov
add
inc
test
sub
inc
je
pop
inc
add
dec
add
add
mov
mov
xchg
add
outs
add
and
mov
add
add
push
add
add
and
jle
cs
inc
add
and
add
and
add
and
add
and
add
and
add
and
add
fwait
inc
pop
add
inc
inc
add
inc
aaa
add
inc
imul
jmp
inc
add
lods
inc
or
lods
inc
or
xor
sti
xor
add
add
repnz
mov
xor
movs
xor
inc
cmps
xor
inc
test
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
cmp
xor
cmp
stos
not
or
push
jne
mov
jbe
mov
fild
mov
enter
rol
mov
ss
or
push
pop
or
push
pop
or
push
push
or
push
pusha
or
neg
retf
mul
int3
div
int
jae
into
push
gs
push
data16
push
out
push
aad
fadd
fdiv
loope
(bad)
retf
ss
push
fbstp
int3
push
loopne
int
loope
into
push
loop
inc
mov
pop
dec
jae
pop
dec
jae
pop
aas
jae
pop
cmp
mov
pop
or
pop
add
pop
stc
je
pop
cmc
je
pop
popf
je
pop
xchg
je
push
sbb
add
ds
cmp
sub
pop
sub
add
sub
add
ds
or
das
push
add
es
dec
and
dec
and
aas
ds
cmp
mov
dec
movs
add
pushf
add
mov
cmp
scas
add
add
daa
jne
mov
daa
jae
mov
daa
jno
lahf
daa
outs
push
xchg
daa
outs
push
xchg
daa
ins
push
nop
daa
ins
push
inc
daa
push
dec
daa
test
dec
daa
test
dec
daa
add
daa
add
daa
add
daa
add
push
daa
jg
adc
jl
add
jge
add
jp
adc
jnp
or
daa
js
add
jns
jmp
jbe
(bad)
es
fldenv
xchg
push
fsub
xchg
push
(bad)
xchg
push
add
inc
push
add
inc
push
add
inc
push
add
inc
push
add
inc
push
add
inc
push
add
inc
pop
add
inc
pop
add
inc
pop
add
inc
pop
add
inc
pop
add
inc
xchg
add
inc
pop
add
inc
pop
add
inc
push
and
add
add
add
add
inc
add
push
add
add
inc
pop
add
inc
or
inc
or
inc
or
inc
or
ret
add
inc
push
add
into
add
sub
add
fadd
xor
fld
xor
fiadd
inc
sub
add
fadd
xor
and
add
sub
add
hlt
add
sub
add
and
add
sub
add
and
cmp
push
add
sub
aas
and
sub
inc
and
inc
sub
inc
and
inc
sub
and
xor
jae
dec
and
sub
aaa
and
dec
sub
add
inc
les
out
aas
mov
add
aas
leave
add
inc
enter
retf
add
inc
retf
inc
lds
xor
add
inc
xchg
add
add
inc
nop
add
dec
xchg
add
dec
add
dec
jge
sub
dec
dec
add
dec
inc
add
dec
pop
add
dec
cmp
adc
add
dec
cmp
pop
dec
xor
add
dec
push
add
adc
cli
inc
add
dec
dec
add
xor
repnz
add
es
in
add
add
push
(bad)
jo
add
imul
add
push
int
test
add
iret
add
rol
inc
xor
add
rol
push
and
add
cmp
cmp
out
add
or
add
stc
icebp
add
rol
jle
push
add
ror
add
adc
sub
add
add
mov
sub
and
add
xchg
add
xchg
add
and
add
and
add
and
add
lahf
add
mov
add
mov
add
and
add
test
outs
and
add
mov
pop
and
add
mov
popa
and
add
and
add
inc
(bad)
mov
and
push
(bad)
mov
and
sti
cld
mov
and
(bad)
cld
shl
cld
les
(bad)
(bad)
and
in
enter
mov
add
add
mov
inc
cld
pop
inc
nop
cld
and
cld
add
sti
mov
inc
(bad)
sti
mov
add
iret
sti
pushf
add
mov
push
cld
and
inc
dec
cld
add
cld
add
cld
cmp
sub
push
data16
and
sti
sbb
sti
sub
sti
sub
add
add
gs
jne
scas
sti
ja
cmps
sti
(bad)
gs
sti
pop
retw
sti
cmps
gs
gs
(bad)
lods
sti
dec
bound
sti
dec
bound
sti
xchg
inc
(bad)
sti
test
gs
sti
xchg
gs
sti
mov
es
pop
push
add
mov
dec
mov
dec
and
lods
push
and
lods
dec
and
pushf
arpl
pushf
dec
and
mov
and
std
jg
and
iret
and
(bad)
sbb
and
xor
and
and
and
xor
pushf
sub
xchg
and
sahf
sbb
xchg
xor
dec
sub
dec
and
dec
sbb
inc
xor
mov
inc
and
sbb
xor
dec
adc
mov
adc
mov
dec
and
and
and
push
and
dec
push
and
and
push
and
pop
and
dec
pop
and
push
add
and
push
cs
push
sub
jl
pop
and
push
pop
and
push
and
lds
ror
and
ror
mov
dec
sbb
cs
sbb
es
or
sbb
pop
xor
or
sbb
or
rol
or
iret
inc
or
dec
or
stos
dec
dec
or
mov
pop
push
mov
or
push
stos
or
or
mov
or
push
sbb
mov
push
or
or
dec
popf
push
gs
fwait
push
and
push
and
push
and
push
adc
pop
push
sbb
push
jns
pop
push
push
push
push
fs
push
data16
push
sbb
push
sbb
push
adc
push
out
arpl
or
pop
push
inc
fs
or
push
inc
push
or
dec
bound
or
leave
inc
stos
or
popa
stos
or
bound
or
inc
mov
bound
or
popa
sahf
or
mov
popa
mov
cld
popa
mov
movs
data16
movs
movs
or
data16
lds
xchg
xor
and
and
add
sbb
add
xor
add
sub
add
and
add
sbb
add
xor
add
sub
add
and
add
sbb
add
xor
add
sub
add
and
add
sbb
add
xor
add
sub
fist
es
aad
and
mov
and
mov
sub
mov
push
cs
dec
aaa
inc
push
add
push
arpl
add
push
mov
add
add
xor
push
movs
xor
push
mov
or
fwait
xor
push
stos
xor
push
cmp
femms
dec
xor
adc
std
xor
push
dec
xor
adc
inc
xor
push
push
nop
xor
push
(bad)
xor
push
mov
sbb
mov
sbb
movs
xor
push
retf
xor
mov
xor
push
enter
jg
and
es
mov
in
mov
out
mov
fisttp
and
call
(bad)
and
daa
sbb
sub
adc
sub
sub
push
adc
sbb
sub
pusha
adc
and
das
sbb
xor
pop
adc
sub
xor
adc
sbb
adc
cmp
xor
and
push
aaa
sbb
(bad)
aam
cmp
add
add
aad
cmp
loope
sbb
cmovo
or
inc
and
in
mov
gs
lea
bound
packssdw
punpcklbw
punpckhwd
movd
maxps
subps
(bad)
dec
inc
punpckhdq
packsswb
pcmpeqd
xorps
andps
andnps
rsqrtps
psubq
(bad)
dec
push
sldt
add
stc
dec
add
out
dec
add
fisttp
push
aaa
push
dec
push
xor
mov
sbb
or
sbb
or
(bad)
push
add
and
push
sbb
dec
xor
inc
sub
aas
and
push
sbb
cmp
test
cmp
test
cmp
xor
sbb
xor
jle
jle
add
add
jg
xor
lea
jae
mov
bound
mov
pop
xor
xor
xchg
inc
sbb
xor
sub
sub
jb
stos
sbb
xor
sub
xor
js
push
xor
pop
xor
dec
pop
xor
xor
dec
pop
xor
dec
pop
xor
dec
pop
xor
add
add
dec
popa
xor
dec
arpl
sbb
adc
dec
test
adc
dec
stos
adc
dec
lods
adc
dec
lods
adc
dec
scas
adc
mov
push
dec
mov
inc
dec
mov
inc
dec
mov
das
dec
mov
cs
mov
sbb
dec
mov
imul
or
mov
aaa
push
or
pop
add
mov
pop
mov
mov
aaa
ror
aaa
xchg
or
aaa
scas
or
fwait
or
pushf
or
cdq
or
jp
adc
js
xchg
ins
or
test
or
pop
pop
or
inc
outs
not
mov
push
daa
jge
ja
mov
mov
inc
mov
mov
test
and
xchg
mov
fs
and
and
and
push
and
arpl
retf
pop
es
loope
es
lock
es
lock
inc
loop
es
fld
es
hlt
pop
es
in
add
inc
cli
pop
es
cli
add
inc
loop
es
loop
es
ss
es
inc
es
mov
add
inc
mov
add
inc
fwait
pop
es
mov
into
inc
add
and
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
pop
inc
add
and
inc
add
add
add
add
and
outs
inc
add
and
add
inc
add
and
dec
inc
add
and
inc
add
and
add
inc
add
(bad)
add
inc
add
int3
imul
in
inc
add
jecxz
add
cld
inc
add
sar
add
dec
add
loope
add
and
add
jp
add
dec
add
cmps
jp
add
inc
add
xchg
jnp
add
inc
add
mov
add
inc
add
push
jnp
add
inc
add
movs
jp
add
jnp
add
inc
add
dec
jnp
add
dec
add
pop
jnp
add
jp
add
xchg
mov
es
add
rol
mov
es
add
es
add
es
es
add
add
jge
add
mov
es
add
ins
push
add
cmp
push
add
ds
es
push
add
inc
add
es
push
add
dec
add
es
add
or
add
mov
add
or
add
ret
push
add
repz
es
push
add
add
add
inc
addr16
es
cdq
add
inc
push
push
es
cwde
add
inc
sub
inc
jnp
es
sub
inc
jp
es
stos
push
es
push
add
inc
stos
push
es
push
add
inc
lods
push
es
aaa
add
inc
lods
push
es
ss
inc
scas
push
es
and
inc
scas
push
es
adc
inc
mov
es
add
inc
mov
add
inc
xor
inc
fld
es
and
inc
int3
add
add
add
inc
xor
add
inc
add
inc
add
repz
add
inc
add
repz
add
inc
add
rol
imul
add
rol
push
inc
add
and
inc
add
add
and
inc
add
inc
add
and
inc
add
inc
add
push
inc
add
inc
add
and
add
inc
add
jb
add
js
add
add
mov
add
test
add
rol
add
mov
add
add
inc
das
add
dec
add
add
inc
add
add
add
inc
add
adc
fisttp
or
mov
inc
add
inc
push
add
dec
add
add
add
mov
inc
adc
dec
add
es
add
sar
mov
es
jnp
es
lds
or
add
lea
dec
add
es
add
es
push
es
jnp
xor
es
jl
outs
add
test
sahf
add
xor
scas
add
es
jl
outs
add
es
jp
xchg
or
pop
jnp
es
add
adc
movs
add
es
mov
inc
add
inc
cmp
sub
inc
mov
mov
inc
add
add
add
mov
inc
nop
add
mov
inc
jno
xor
out
pop
add
inc
mov
xor
out
leave
add
inc
in
out
xor
inc
int
out
pusha
add
inc
ror
inc
leave
mov
dec
add
inc
lods
mov
mov
mov
mov
mov
add
and
add
add
add
add
sub
popa
lods
add
and
add
sub
add
sub
test
cmp
mov
add
and
add
and
add
and
add
and
add
and
add
sub
add
and
test
(bad)
and
test
add
inc
str
inc
pop
add
inc
or
xchg
aas
add
or
cmp
aas
add
or
lahf
ret
sti
inc
add
test
inc
add
ret
aas
add
sar
or
add
sar
mov
sar
sar
xor
mov
inc
pop
add
(bad)
aas
add
(bad)
aas
add
(bad)
aas
add
(bad)
aas
add
std
add
add
mov
inc
es
add
es
add
es
add
add
sub
es
es
inc
es
es
add
lea
pop
lds
mov
add
add
es
inc
es
adc
add
add
es
add
cmp
add
inc
in
and
in
inc
movs
add
inc
lahf
add
inc
cdq
test
xchg
add
inc
mov
add
add
add
ins
test
push
add
inc
ins
test
inc
mov
xor
out
int
sub
out
jmp
inc
inc
sbb
leave
test
inc
pop
add
inc
rol
inc
stc
and
mov
sub
out
sbb
inc
int
inc
add
cmp
lea
cmp
lods
stos
add
and
add
add
add
sub
popa
stos
add
and
add
and
add
and
add
and
add
and
stc
movs
add
and
add
stos
add
and
stc
movs
add
and
icebp
movs
add
and
add
and
loope
dec
add
cmp
shl
add
clc
add
clc
add
inc
pop
add
inc
verr
ds
inc
or
cmp
add
clc
ds
inc
or
add
or
(bad)
add
or
add
clc
add
adc
add
adc
cmp
add
add
add
add
inc
or
inc
clc
add
or
pop
cli
add
mov
leave
aas
es
leave
aas
xchg
es
retf
adc
push
es
aas
xor
es
retf
movs
add
mov
add
es
add
es
enter
add
es
add
cmp
aas
es
pop
es
enter
add
es
add
es
leave
aas
es
sbb
push
leave
aas
es
leave
aas
es
fld
or
stc
inc
push
add
inc
dec
leave
jmp
inc
sbb
add
inc
adc
add
inc
sub
add
inc
mov
add
inc
(bad)
inc
push
add
add
add
ror
or
jb
xor
stc
inc
fiadd
add
mov
jmp
inc
mov
add
inc
rol
inc
rol
adc
inc
hlt
add
inc
int
sub
inc
inc
ffree
sbb
and
inc
add
imul
sub
add
jmp
add
sub
add
fild
sub
std
jmp
jge
inc
add
cmp
add
cmp
xchg
fadd
sub
add
call
cmp
(bad)
fadd
and
inc
add
cmp
test
add
sub
add
inc
add
pop
add
cmp
or
xchg
ds
aas
adc
xor
add
or
pop
idiv
add
or
sub
add
adc
add
dec
adc
out
adc
add
dec
add
dec
or
mov
aas
add
adc
add
or
add
push
aas
add
dec
or
das
push
aas
add
pop
add
push
aas
add
push
aas
add
add
scas
push
aas
add
in
add
es
add
es
push
ficom
jge
cwde
fiadd
inc
push
ss
pop
push
aaa
and
add
jecxz
fcmovb
dec
jae
push
and
loopne
outs
test
(bad)
adc
push
jae
mov
ins
cmp
adc
into
and
dec
mov
test
fsubr
retf
add
add
lods
sub
and
xor
and
mov
loop
outs
mov
inc
je
jecxz
add
es
in
xor
adc
(bad)
scas
push
sbb
sbb
sbb
rcl
pop
xchg
add
jl
cmp
xor
adc
xor
adc
xor
adc
xor
adc
xor
(bad)
cmp
add
add
cmp
pop
repz
clc
and
xor
adc
xor
adc
xor
mov
pop
dec
xchg
popf
outs
push
inc
add
adc
adc
jmp
mov
xor
aaa
pusha
xor
aaa
xor
mov
pop
rcl
pop
sub
dec
in
dec
mov
add
add
add
mov
sbb
or
jge
shl
adc
xor
adc
xor
mov
ja
adc
inc
add
push
ins
jge
mov
je
sbb
jo
fst
xor
aaa
shl
add
push
pushf
xor
int
stos
pop
das
dec
xor
xchg
sub
out
sahf
xor
dec
test
pop
or
add
add
sub
mov
xor
push
dec
xor
push
pop
xor
xchg
xchg
out
mov
repz
push
cli
int3
fwait
scas
xchg
cmp
mov
dec
in
xor
dec
cld
xor
dec
or
sti
dec
fist
leave
rcr
popf
fwait
sub
aad
mov
iret
sub
dec
es
or
imul
pushf
pop
leave
or
mov
jb
cli
or
adc
push
or
sbb
shr
adc
cmc
cmp
mov
movs
idiv
cmc
movs
test
jbe
aad
fdivr
jg
dec
fnsave
inc
xlat
sti
jb
lea
mov
xchg
cli
mov
sbb
push
adc
mov
daa
inc
out
sbb
pop
inc
dec
inc
scas
pop
ds
mov
(bad)
cmp
and
push
add
inc
cmp
mov
popa
(bad)
sbb
mov
int3
int3
pop
xor
movs
dec
adc
sub
or
fscale
xor
cmp
(bad)
xor
cmc
(bad)
xor
in
xor
jns
out
xchg
iret
popa
stos
stos
cmp
push
pop
add
adc
cmp
mov
xchg
(bad)
jno
add
add
mov
loop
xchg
pop
mov
int3
repnz
add
into
mov
iret
ret
push
mov
cmp
jns
cmp
jno
cmp
cdq
daa
inc
add
pusha
pop
cmc
cmp
mov
and
mov
add
add
shl
retfw
pop
aas
icebp
pop
ss
inc
aaa
sbb
test
loop
mov
pop
cmp
or
fsubr
sbb
stc
pop
jp
loop
jb
or
jle
lock
outs
dec
add
shl
adc
in
xor
clc
movs
jmp
xchg
mov
fiadd
data16
cld
nop
retf
sti
int
add
add
fs
sbb
loop
cmps
cli
jo
cmps
cli
xor
mov
pop
mov
stos
sar
test
pop
inc
aaa
ja
js
jl
mov
mov
clc
xchg
cmp
ss
inc
in
mov
dec
mov
mov
sbb
clc
or
(bad)
icebp
in
jb
es
add
call
ret
pop
mov
(bad)
jp
push
(bad)
jbe
imul
(bad)
dec
shl
pop
or
lods
leave
scas
leave
bound
sbb
imul
ret
popf
sbb
icebp
pop
push
std
jmp
sub
pop
mov
scas
push
(bad)
sub
mov
fwait
sti
sbb
xchg
inc
jp
dec
xchg
out
sub
add
add
das
inc
(bad)
pop
adc
call
lea
push
call
dec
cmp
lea
cmp
push
inc
jmp
icebp
(bad)
pop
xchg
cmp
cmp
dec
aad
mov
jmp
jmp
xor
mov
test
shl
inc
push
aam
sbb
imul
nop
cmp
xlat
jno
push
dec
inc
sbb
xchg
sub
pavgb
loop
xchg
scas
add
sub
mov
push
test
and
bound
jmp
lock
je
(bad)
les
sub
and
adc
push
pushf
push
out
or
inc
pop
jle
mov
test
add
not
pop
out
pushf
xor
retf
cmp
sti
fbld
xchg
nop
dec
sbb
jmp
sub
jle
push
pop
mov
lahf
stos
pop
add
ret
xchg
jle
and
push
ror
jae
cmps
sbb
(bad)
inc
loope
cmp
mov
inc
es
fiadd
add
add
cmp
arpl
dec
mov
push
jl
mov
pushf
pop
jecxz
sub
cli
push
sub
(bad)
pop
push
cs
pop
ds
mov
dec
add
lea
dec
popf
sbb
mov
pop
test
in
add
es
add
es
add
jmp
add
in
add
es
add
jmp
add
fild
add
in
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
loope
add
out
add
add
std
in
in
sub
cmc
mov
xor
xor
add
es
jmp
mov
jg
cmp
mov
jae
mov
add
add
xor
dec
xchg
or
inc
pop
add
cmp
mov
jae
mov
outs
icebp
mov
sub
es
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
jmp
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
cmc
(bad)
pop
pop
cmc
(bad)
push
dec
cmc
dec
cmc
inc
cmc
(bad)
ds
(bad)
ss
(bad)
add
add
sub
(bad)
es
(bad)
push
sbb
(bad)
push
or
dec
or
inc
dec
inc
add
inc
inc
push
pop
inc
dec
(bad)
(bad)
cmp
(bad)
dec
inc
or
dec
ud0
cmp
(bad)
fdivr
(bad)
(bad)
call
cmp
(bad)
mov
cmp
dec
dec
ud0
cmp
jmp
cmp
(bad)
cmp
(bad)
(bad)
cmp
(bad)
inc
add
add
inc
add
jg
add
jg
add
pop
add
inc
add
jg
add
dec
inc
add
dec
inc
add
es
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
inc
jmp
add
inc
call
add
inc
call
add
inc
call
add
inc
call
add
add
add
inc
call
add
inc
call
add
inc
call
add
inc
call
add
inc
call
add
inc
call
add
inc
call
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
in
dec
pop
loope
ds
cs
ltr
adc
pop
push
push
pop
push
push
sbb
jae
push
pop
outs
call
and
addr16
sub
clc
xor
jnp
xor
ja
cmp
shr
cmp
dec
movs
pusha
arpl
fs
push
outs
aas
mov
jae
mov
js
xor
pop
pop
das
movs
pusha
arpl
shl
popf
push
outs
mov
mov
js
xchg
mov
add
lods
mov
xchg
xchg
xchg
(bad)
xchg
xchg
xchg
fwait
call
arpl
add
jae
jne
outs
mov
xor
frstor
ja
fstp
cmp
retf
inc
into
jmp
add
add
(bad)
rcl
pop
(bad)
rcl
mov
sbb
jmp
xor
mov
div
popa
ss
cdq
inc
jmp
(bad)
and
or
fld
sub
fst
adc
aad
adc
sbb
int
cmp
loop
and
fiadd
daa
shr
sbb
repnz
mov
repz
pop
sub
movs
xchg
test
(bad)
pop
cmp
mov
jae
mov
pop
mov
lds
and
mov
imul
push
xchg
adc
adc
jnp
(bad)
jo
imul
mov
mov
rcl
push
mov
call
mov
cmps
inc
jecxz
stos
cmp
mov
mov
xor
scas
mov
movs
pop
push
(bad)
mov
data16
cdq
pop
adc
xchg
dec
push
xlat
xchg
jb
fisttp
or
loop
(bad)
in
and
fsubrp
add
cmp
repz
not
and
sti
or
(bad)
jg
(bad)
(bad)
jle
add
pop
add
inc
add
jg
add
dec
inc
add
dec
inc
add
aas
inc
add
aas
inc
inc
cdq
inc
add
test
inc
add
aas
inc
add
cmovno
add
inc
add
inc
add
inc
inc
cmovno
add
inc
add
inc
add
inc
add
iret
inc
add
iret
inc
add
mov
inc
add
es
jmp
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
jge
jmp
fild
add
fild
add
fild
add
fild
add
fild
add
fild
jmp
cmp
jmp
fild
add
fild
add
fld
add
fld
add
fld
add
or
inc
adc
(bad)
stc
cli
das
push
add
fld
add
fld
add
fld
add
inc
jmp
xor
jmp
xor
imul
es
jmp
add
inc
jmp
add
inc
pop
xor
call
out
es
jmp
add
inc
jmp
add
inc
xor
call
add
inc
jmp
add
(bad)
call
add
inc
jmp
add
inc
imul
inc
jmp
add
inc
jmp
add
inc
add
and
inc
add
and
inc
add
ret
jg
and
dec
sbb
xor
aad
inc
add
and
dec
sbb
sub
adc
pop
push
adc
pop
push
adc
pop
push
adc
aaa
push
adc
aaa
push
sub
psubsw
dec
sbb
sub
adc
pop
push
adc
pop
push
adc
pop
push
adc
aaa
push
adc
aaa
push
sub
add
and
inc
add
and
inc
add
inc
add
inc
add
iret
inc
add
mov
inc
add
iret
inc
add
iret
inc
add
mov
inc
add
pop
add
inc
add
jg
add
pop
add
inc
add
jg
add
dec
inc
add
dec
inc
add
aas
inc
add
aas
inc
add
dec
inc
add
dec
inc
add
aas
inc
add
aas
inc
add
cmovne
add
inc
add
inc
inc
cmovne
add
fild
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fadd
add
fld
add
push
add
fld
add
fld
add
add
and
add
and
add
and
push
add
add
daa
loopne
and
(bad)
add
fdivrp
add
fdivrp
add
fdivrp
add
add
add
fadd
add
inc
call
add
inc
or
inc
mov
inc
mov
xor
inc
cmp
fs
sbb
inc
push
jb
inc
mov
mov
inc
mov
repnz
jmp
add
inc
mov
es
int
inc
add
inc
aad
mov
add
inc
enter
les
es
call
add
inc
jmp
add
inc
jmp
call
add
xchg
add
pop
add
pop
add
sub
jmp
sub
xor
popa
add
and
add
lea
add
and
inc
add
and
inc
add
and
pop
add
je
add
jae
jmp
and
inc
add
test
jno
test
pop
jo
jbe
push
add
mov
inc
lds
mov
fs
movs
addr16
scas
arpl
mov
pop
jo
scas
ins
ins
pop
inc
cli
dec
add
jo
scas
arpl
lahf
gs
add
addr16
mov
gs
outs
arpl
gs
inc
add
add
jo
movs
jb
mov
popa
outs
mov
fild
add
sahf
sahf
push
xor
jne
mov
xchg
pop
pop
adc
cs
xchg
dec
jmp
int
add
es
inc
bound
ret
xor
dec
push
mov
push
push
xor
push
(bad)
and
pusha
add
mov
push
adc
mov
hlt
or
js
dec
repz
inc
jmp
add
add
fild
add
inc
movs
fild
add
add
outs
pushf
mov
imul
inc
sub
fist
test
mov
outs
(bad)
sub
rcl
xor
loopne
sub
int
or
movs
inc
imul
popf
cmp
push
jmp
cmp
inc
push
out
xor
inc
rol
add
add
cli
inc
sbb
inc
pop
add
inc
int
ret
jmp
mov
push
jb
test
jle
test
les
lea
inc
add
sahf
addr16
dec
nop
jno
inc
ret
push
imul
xor
xchg
(bad)
outs
mov
add
add
mov
add
add
loop
adc
loop
add
loop
shl
inc
xchg
pop
add
mov
(bad)
aad
loop
add
(bad)
call
(bad)
(bad)
cmp
inc
add
dec
inc
add
xor
fmul
or
cmps
jo
(bad)
mov
jmp
inc
add
dec
cmps
jno
pop
call
aas
add
aas
add
in
inc
add
inc
add
inc
add
mov
inc
add
inc
add
add
imul
push
inc
adc
sbb
push
push
retf
dec
shl
pop
es
add
es
imul
xchg
into
push
test
imul
add
es
mov
(bad)
add
es
push
es
mov
add
repnz
repnz
add
es
add
sbb
mov
test
es
je
daa
add
es
add
sub
cmp
es
add
es
add
es
add
es
add
es
add
es
add
outs
jbe
es
fcom
xlat
mov
cmc
test
add
inc
xchg
mov
jbe
shl
jne
shl
mov
rcr
test
jne
scas
retf
stos
(bad)
je
test
fs
add
inc
xor
push
xchg
es
sub
js
add
inc
sub
sbb
mov
(bad)
cmp
test
mov
mov
out
sub
add
add
mov
gs
mov
inc
add
pushf
xchg
inc
jmp
call
movs
jle
dec
popf
and
or
inc
add
and
add
inc
add
mov
add
aad
dec
and
jb
cmp
add
add
out
fdivrp
dec
jne
outs
or
push
imul
mov
popa
outs
add
xchg
arpl
scas
ins
outs
pop
add
ins
je
xchg
jb
pop
stos
ins
sub
mov
arpl
lods
ins
arpl
outs
pusha
inc
add
xchg
mov
jb
cmps
arpl
lods
test
bound
mov
arpl
test
imul
add
add
add
xlat
inc
test
add
outs
inc
add
cmp
aaa
dec
dec
add
dec
cmp
mov
dec
add
inc
dec
add
inc
dec
add
adc
repnz
es
add
es
add
fiadd
push
test
cs
add
es
int
rcr
cmps
add
add
mov
mov
add
push
mov
inc
mov
sub
es
inc
xor
es
dec
inc
es
cmps
inc
fdivr
inc
es
daa
inc
and
inc
lea
sbb
xlat
add
es
or
add
inc
in
sub
add
inc
mov
add
inc
int3
fwait
jns
fisttp
imul
fidiv
sbb
call
es
js
cmps
xchg
push
ja
(bad)
jp
jg
jge
into
iret
pop
sub
jno
scas
(bad)
pusha
jbe
inc
xchg
mov
push
inc
sub
pop
inc
mov
sub
retf
xlat
call
inc
add
add
(bad)
and
push
aam
dec
fucomp
xchg
sub
sti
lods
and
in
or
cwde
and
and
data16
xor
and
xor
out
inc
pop
or
push
in
sub
sbb
sbb
(bad)
inc
push
repz
or
or
into
jmp
jle
sbb
in
inc
pop
ret
inc
call
add
add
(bad)
ror
jecxz
add
and
add
int
stos
stos
js
add
mov
and
stc
pop
and
dec
add
in
rol
and
stc
cmps
cmp
in
jg
add
movs
arpl
nop
mov
mov
leave
adc
retf
sbb
jecxz
out
rcr
sbb
in
out
cmp
retf
pop
sbb
hlt
xor
rcl
(bad)
dec
sbb
fisttp
inc
add
dec
retf
mov
pop
test
es
lea
in
jns
es
jge
sbb
xor
xor
and
call
(bad)
es
adc
jl
sbb
mov
outs
jbe
mov
jg
stos
sbb
test
and
int
add
add
adc
dec
push
out
das
cmp
clc
xor
dec
sbb
jmp
in
adc
iret
fistp
push
aam
inc
sub
add
inc
inc
mov
pop
fs
loopne
push
add
dec
push
adc
push
pop
es
pusha
and
out
lock
cld
and
sub
or
repnz
fpatan
clc
outs
push
or
cmp
add
inc
sbb
sbb
(bad)
aad
fdiv
ss
and
inc
jmp
repnz
sti
sub
add
and
test
ret
es
mov
in
and
jno
into
cmp
pop
pop
xor
loop
inc
or
and
sub
add
add
sbb
inc
mov
pop
and
fs
rcr
add
ins
js
jb
sub
iret
outs
cmp
outs
jg
mov
or
in
aaa
ror
fwait
call
mov
pop
dec
xlat
adc
cmc
(bad)
jmp
mov
aaa
push
cli
mov
jg
movs
shl
mov
dec
mov
add
sbb
add
mov
test
retf
mov
xchg
popf
ds
and
sub
jge
pop
mov
je
es
add
adc
inc
pop
jle
dec
dec
xchg
nop
dec
push
fwait
mov
inc
add
push
add
add
test
mov
mov
mov
jl
test
ja
mov
mov
movs
push
jg
mov
test
mov
sbb
xor
jp
xor
cs
dec
jecxz
push
xor
pop
or
mov
mov
add
es
enter
into
or
fild
neg
(bad)
inc
add
add
inc
shl
in
add
adc
fincstp
pop
ss
inc
sbb
add
inc
scas
je
call
dec
inc
movs
nop
mov
popf
and
xchg
(bad)
push
dec
jle
mov
ins
cmp
addr16
jmp
adc
xlat
fist
in
adc
inc
pop
mov
outs
sbb
push
inc
jecxz
cmovne
add
xor
sub
pop
xor
enter
(bad)
and
jmp
mov
aam
scas
add
cmp
or
inc
add
int3
inc
ret
mov
jno
(bad)
fdivr
popf
mov
fidiv
add
loope
or
sar
add
scas
sahf
js
cli
xor
and
mov
mov
retf
mov
mov
adc
add
xor
movs
shl
addr16
lea
jnp
lds
dec
test
imul
dec
ja
mov
pop
movzx
es
add
fiadd
scas
fimul
iret
xchg
out
ret
add
sar
clc
inc
adc
bound
out
sub
and
div
and
clc
cs
inc
add
ss
rcl
popf
rcl
adc
retf
(bad)
inc
inc
push
or
into
add
retf
cmp
add
into
or
int
or
sub
xor
(bad)
div
xor
mul
xor
xchg
repnz
enter
xchg
adc
fcmovnbe
mov
mov
push
dec
sbb
sbb
call
push
lock
sbb
add
add
fs
mov
xchg
jnp
fild
add
iret
sub
push
push
sub
(bad)
jmp
adc
sbb
inc
sti
sbb
and
neg
sub
add
adc
cs
push
pop
xchg
shr
xor
imul
add
push
xchg
xor
cmp
jnp
fmul
xchg
shl
add
inc
xor
outs
icebp
push
inc
push
add
push
add
add
inc
cmps
int3
jge
leave
mov
ins
lds
shl
cmp
mov
call
icebp
sub
or
fdiv
sub
sti
sbb
xchg
cmps
sub
jg
mov
add
jns
jge
jo
call
pop
les
push
push
ror
inc
pusha
ret
add
inc
mov
sahf
out
sti
int3
xchg
adc
sar
(bad)
sub
sti
retf
inc
add
mov
ja
xchg
pushf
fs
mov
add
mov
jb
inc
add
sub
cmp
jecxz
cmp
add
and
mov
and
jl
sahf
push
outs
inc
xchg
add
fcomp
push
stc
rcl
nop
cmp
stc
jnp
add
inc
stos
int3
add
dec
test
loope
call
sbb
add
movs
ins
stos
stos
dec
inc
add
pop
icebp
xor
idiv
add
add
fsubr
and
add
push
(bad)
cli
retf
cmovae
add
inc
add
das
cmp
loopne
inc
add
push
mov
loop
or
(bad)
js
sti
(bad)
jg
(bad)
xchg
or
add
ret
(bad)
stos
mov
pop
fbstp
cmp
sbb
es
push
(bad)
fadd
add
push
hlt
ds
add
sbb
std
add
add
add
fld
add
nop
add
push
int3
or
adc
add
es
jmp
(bad)
dec
pop
or
or
jl
lds
sbb
aad
pop
pop
shl
dec
push
dec
int3
inc
addr16
cmp
or
pop
adc
fwait
mov
adc
clc
dec
rcr
or
add
inc
rcr
cmp
xor
repnz
adc
imul
xor
jmp
int
in
sbb
in
add
inc
add
add
xor
rol
sbb
fild
int
int3
bound
repz
push
aam
inc
or
int3
add
inc
popa
pop
mov
push
pusha
mov
mov
add
inc
test
jae
jmp
pop
int
call
xchg
pop
jle
inc
sbb
iret
push
popa
push
pop
ins
imul
inc
pop
stos
push
jnp
mov
push
dec
test
inc
add
xchg
or
mov
test
inc
mov
jbe
pop
mov
sub
aad
add
gs
iret
cmp
fisubr
add
add
ret
(bad)
and
into
sub
and
test
push
inc
mov
push
mov
mov
push
aam
mov
imul
mov
cs
out
es
in
sub
add
xchg
iret
int3
sbb
(bad)
mov
sub
les
push
int
cld
js
mov
mov
scas
scas
cmps
jae
mov
add
add
out
test
lods
mov
cmp
cwde
pop
xor
add
out
(bad)
call
scas
ins
cmp
push
inc
add
es
retf
cmp
jmp
rol
(bad)
push
out
(bad)
pusha
cld
sbb
call
or
add
inc
xchg
jmp
addr16
push
mov
cwde
adc
mov
add
xlat
in
inc
rcl
test
retf
mov
shl
jp
mov
data16
pop
xchg
mov
popa
pusha
mov
or
jl
fimul
mov
dec
pop
add
inc
jb
xchg
imul
jp
leave
xchg
lods
imul
pop
push
into
mov
jo
push
dec
scas
mov
push
fbstp
fcmovb
dec
(bad)
mov
leave
mov
stos
imul
inc
fcom
es
xor
add
inc
mov
(bad)
jne
popf
cmps
fs
rcr
enter
stos
push
ins
mov
dec
dec
mov
ins
outs
add
mov
push
popa
call
pop
test
aas
mov
inc
daa
mov
jp
pusha
adc
pop
adc
xchg
jp
test
jmp
adc
shl
frstor
test
shr
in
jmp
ds
les
aad
das
addr16
inc
and
jecxz
and
cmc
rol
hlt
loop
sub
ret
pop
push
add
cmp
jecxz
xor
idiv
maskmovq
aad
jmp
into
jmp
sub
scas
fidiv
cli
out
adc
imul
fisubr
cmp
xlat
mov
add
inc
shl
add
(bad)
dec
add
add
sbb
hlt
in
cmp
cld
aad
rol
loope
out
stc
in
repnz
push
cmp
out
cmp
fcmovne
arpl
fcmovnbe
xor
arpl
mov
jno
cli
lods
or
nop
jne
out
xchg
or
xchg
or
popa
test
aad
xor
(bad)
arpl
mov
jo
and
call
add
mov
pusha
and
jbe
es
push
dec
mov
or
stos
pop
add
es
retf
sub
jno
js
outs
and
aam
sbb
xor
cmc
sub
jmp
sbb
in
inc
dec
pop
ror
sbb
fsub
sbb
(bad)
xchg
fimul
or
out
arpl
add
add
je
test
cmps
jbe
mov
pop
xor
jno
cmps
jbe
or
inc
ror
pusha
retf
ficom
pop
xchg
xchg
push
or
mov
jl
mov
out
jmp
push
test
ret
ins
add
jmp
inc
js
xchg
inc
sub
mov
jg
dec
jge
stos
inc
outs
jne
pop
popa
in
and
out
cmp
cs
add
mov
push
je
mov
aas
adc
mov
or
outs
adc
movaps
pop
push
and
pop
sbb
fnstenv
aas
mov
test
out
imul
add
add
repnz
xor
xchg
mov
dec
ja
fsubr
addr16
adc
jecxz
push
icebp
out
pop
div
loope
hlt
hlt
fst
mov
jno
(bad)
aad
push
add
jmp
das
mov
test
(bad)
(bad)
inc
xchg
cmp
add
cmps
sub
add
add
mov
add
pusha
(bad)
sub
pop
mov
push
inc
or
push
inc
mov
push
add
mov
das
mov
test
jbe
popf
jge
stos
div
repnz
push
push
test
fisubr
jg
call
add
pop
das
(bad)
push
adc
rol
sbb
mov
movs
or
es
or
xchg
jecxz
jmp
fidiv
shr
pop
into
jle
sbb
imul
fisub
popa
in
jl
inc
loop
mov
add
sbb
frstor
inc
enter
(bad)
or
add
inc
dec
and
test
xor
ins
push
mov
jle
int3
cld
push
dec
enter
es
cld
loop
arpl
fiadd
add
add
ss
es
push
dec
jp
das
push
mov
call
sahf
add
xor
daa
cmp
in
or
dec
mov
add
bound
inc
mov
jmp
dec
leave
cmp
and
adc
adc
or
or
push
push
out
shr
imul
inc
add
inc
add
(bad)
and
and
enter
(bad)
popf
jmp
(bad)
sbb
jp
jp
je
push
cmp
adc
mov
inc
cld
sar
mov
in
adc
out
fwait
repz
dec
out
mov
div
mov
(bad)
clc
in
aas
inc
add
pop
mov
sbb
or
cmp
adc
stos
nop
mov
push
retf
stc
push
push
add
pop
mov
fwait
ja
mov
pop
cs
ror
lea
outs
adc
hlt
pop
out
or
cmps
(bad)
pusha
jecxz
jne
add
pushf
inc
add
ins
scas
adc
xchg
cmc
or
push
stc
add
jae
inc
adc
ror
es
or
xchg
add
sbb
mov
lods
add
es
mov
mov
xchg
jge
sahf
mov
inc
xchg
jb
mov
sub
(bad)
sahf
ins
xchg
lahf
pop
xor
sbb
lock
and
lds
repz
adc
jno
adc
ins
inc
leave
call
add
add
daa
or
retf
cld
ret
cs
es
test
jecxz
mov
xor
sti
popf
inc
mov
mov
push
out
in
push
mov
pop
dec
stos
push
xlat
push
mov
jmp
bts
or
out
sbb
push
jmp
popa
pop
inc
addr16
add
add
outs
(bad)
iret
xor
fnstcw
sub
es
jge
inc
sub
add
inc
lods
mov
mov
stos
add
inc
(bad)
stc
xchg
pop
(bad)
mov
dec
pushf
rol
jns
(bad)
daa
into
daa
push
mov
add
add
(bad)
inc
pop
test
aas
and
inc
adc
test
dec
cmp
je
mov
mov
cmps
pop
mov
mov
cwde
xor
and
mov
xor
outs
jmp
shr
imul
add
add
jb
icebp
idiv
out
in
xchg
call
mov
xor
mov
stc
clc
jmp
mov
leave
stc
mov
mov
inc
add
add
add
divps
pop
push
or
gs
or
fs
or
push
dec
dec
(bad)
je
sbb
push
pop
sbb
jb
and
jp
jg
jnp
jae
jae
cmp
adc
sub
dec
sub
add
add
or
add
pcmpgtw
ins
push
or
idiv
jae
jb
js
dec
addr16
fs
rcl
idiv
jae
pop
and
lods
add
es
add
es
add
es
add
inc
add
lock
je
jo
inc
sub
inc
shl
dec
fld
inc
cmp
cmp
inc
ins
push
into
imul
jmp
jo
arpl
(bad)
dec
outs
or
inc
js
daa
ds
inc
add
dec
inc
imul
fmul
jmp
leave
push
push
data16
jb
fs
outs
shr
leave
addr16
or
inc
std
add
inc
sub
sub
and
pop
ficom
sbb
les
add
add
scas
and
and
dec
jmp
add
inc
les
push
inc
retf
add
inc
stos
add
inc
xchg
add
jns
inc
inc
add
and
inc
add
and
inc
add
dec
je
sahf
dec
push
add
push
add
inc
push
add
cmp
add
adc
add
push
add
or
add
add
add
add
icebp
add
add
add
pushw
add
pushw
add
pushw
add
pushw
add
push
add
inc
add
inc
add
lock
sbb
add
inc
add
sbb
add
cmovb
mov
inc
add
inc
add
sbb
cli
sbb
inc
add
sbb
push
sbb
js
add
js
inc
add
add
in
inc
popa
add
inc
imul
repz
cs
inc
ins
add
inc
add
rol
lods
push
popa
je
inc
add
add
inc
aas
cmp
es
dec
pusha
leave
jne
ds
es
dec
loop
jo
adc
jp
xor
sar
es
gs
es
fs
add
lods
add
es
gs
push
es
add
es
outs
es
add
es
add
xchg
add
add
add
es
test
or
dec
mov
add
add
sub
jmp
lock
push
push
inc
mov
(bad)
dec
sbb
stos
mov
imul
xor
xchg
sub
push
imul
xor
cmp
push
imul
xor
xchg
sbb
push
arpl
(bad)
mov
xchg
sbb
push
arpl
and
mov
jbe
repnz
inc
jb
fs
mov
inc
mov
popa
fs
add
and
adc
inc
add
jns
add
and
add
xor
add
jge
add
fild
add
add
dec
scas
jne
in
inc
add
add
inc
mov
add
add
shl
add
add
add
add
inc
xchg
add
stos
jns
add
xchg
add
dec
inc
add
add
lock
add
and
add
mov
inc
add
mov
add
sub
inc
add
and
mov
push
outs
pushf
and
add
jg
pop
inc
xchg
sub
mov
push
pop
push
and
pop
push
jmp
push
(bad)
je
pop
add
je
sub
xor
sub
add
aaa
xor
jo
imul
sbb
bound
sub
sbb
ins
das
aas
inc
add
daa
xor
jo
pop
das
ja
xor
mov
xchg
mov
arpl
fld
aas
es
add
into
add
add
add
add
rol
push
les
gs
xor
out
add
es
add
sbb
or
adc
es
add
inc
gs
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
rol
add
inc
fiadd
gs
mov
add
jmp
add
inc
sti
add
inc
fild
push
inc
jmp
add
inc
call
inc
test
cmp
es
cmps
dec
inc
sub
es
adc
cmp
sub
sub
dec
add
or
dec
pop
add
add
inc
sub
and
ficomp
data16
sub
ss
sub
cld
jno
and
data16
daa
add
test
popa
ror
add
mov
push
aad
sbb
and
add
mov
add
add
xor
add
and
add
add
and
je
mov
sub
jmp
pop
cmp
add
gs
cmc
inc
add
or
fs
aam
inc
jmp
(bad)
add
add
aaa
gs
mov
stc
xor
and
je
inc
xor
outs
arpl
xor
push
jne
xor
mov
daa
je
fsub
push
jb
and
add
lea
ins
push
lods
and
cmps
xor
mov
and
add
jb
test
fs
sbb
add
pop
and
inc
loop
inc
ins
jmp
pusha
outs
jecxz
add
dec
add
push
add
inc
add
inc
dec
add
dec
arpl
es
add
es
add
es
add
es
add
es
add
es
add
mov
jae
cmp
add
add
jmp
jb
mov
outs
es
add
mov
jb
retf
es
add
retf
add
mov
add
jmp
add
add
or
es
add
outs
add
es
ins
or
or
es
add
es
cmp
inc
adc
add
inc
jmp
outs
lock
fcmovb
icebp
sub
rol
add
jmp
loop
add
inc
mov
pop
movs
sub
push
mov
test
dec
(bad)
retf
push
fs
pusha
outs
mov
inc
jb
mov
add
es
sub
sti
jle
push
fs
cli
dec
or
call
push
cmp
mov
add
cmc
scas
adc
cmp
jb
push
mov
mov
fcomp
push
xchg
push
adc
sub
jae
test
adc
and
push
push
mov
push
call
push
dec
add
and
mov
mov
loop
dec
adc
lea
adc
call
push
inc
add
add
add
jb
ret
bound
add
inc
add
dec
inc
mov
mov
inc
sbb
inc
cs
adc
cld
test
pop
cs
(bad)
scas
sub
add
mov
ret
rcl
leave
cmp
lea
lahf
cmp
add
retf
add
add
stos
(bad)
jmp
(bad)
mov
arpl
fdivr
inc
les
out
in
add
and
movs
fdivrp
test
add
mov
cdq
mov
and
imul
es
add
repz
lods
mov
enter
ja
es
or
or
stos
sub
add
xor
into
jg
(bad)
fstp
les
es
cld
or
ficom
neg
mov
mov
and
movs
pop
cmp
fnstenv
test
sub
jge
mov
jecxz
adc
ret
and
inc
ror
inc
jmp
ja
mov
ror
inc
jmp
std
inc
jle
add
add
add
mov
mov
mov
popf
xchg
fist
inc
jmp
jmp
bnd
push
mov
in
mov
sar
lock
xor
cmp
arpl
fisttp
out
pushfw
(bad)
out
daa
inc
add
cmp
call
push
inc
cwde
jmp
and
inc
push
mov
(bad)
scas
imul
xchg
ds
jmp
mov
out
cmp
jb
mov
mov
stc
outs
repnz
mov
add
mov
lock
loope
fcomp
loop
push
or
sti
add
cmp
test
ds
aaa
(bad)
fsub
add
fiadd
mov
stc
(bad)
jg
jmp
cmp
sub
mov
cwde
jmp
mov
xor
test
std
push
das
daa
push
lock
hlt
push
adc
rol
push
inc
add
pop
mov
sub
mov
adc
jne
sub
jne
add
sar
pushf
cmps
push
dec
jge
jmp
sbb
mov
fsub
mov
dec
fucomi
cmp
mov
loopne
cmp
nop
adc
xchg
ja
jp
inc
in
popf
pop
lock
mov
out
or
fnstenv
add
shl
(bad)
test
jns
push
xor
daa
inc
add
add
das
jnp
sbb
clc
lods
mov
mov
add
and
ja
xor
jle
popf
jne
cmp
pop
add
add
jmp
adc
fwait
jmp
push
mov
jbe
inc
(bad)
jp
dec
push
sub
cmps
sub
sahf
sub
jbe
mov
fxtract
jno
test
rol
add
loope
jbe
cmp
retf
push
mov
cmps
cmp
in
sbb
fcmovnbe
sti
jmp
cmp
neg
inc
sbb
cmps
dec
js
cmp
sub
inc
add
dec
(bad)
out
shl
out
rol
arpl
cdq
or
jbe
(bad)
(bad)
fld
add
add
add
call
fmul
mov
loope
(bad)
jns
inc
add
into
pmuludq
or
lahf
bound
mov
jmp
xor
add
es
jne
xor
sub
adc
call
sbb
es
pop
dec
sub
test
cmp
ret
or
(bad)
xor
add
(bad)
(bad)
cmp
add
test
call
mov
std
inc
test
adc
jne
cmc
dec
lea
das
or
int3
in
mul
sar
xchg
xor
and
jnp
and
add
cvttps2pi
ins
call
add
add
es
in
mov
pushf
add
leave
sub
dec
ret
push
push
push
(bad)
xchg
fist
fwait
add
daa
fwait
add
fisub
mov
add
call
push
dec
ja
mov
adc
test
lods
popf
and
les
movs
(bad)
test
retf
(bad)
mov
ja
mov
inc
jmpw
fld
es
shr
fldenv
call
add
push
adc
pop
je
(bad)
iret
push
fdivr
leave
fsubr
cwde
mov
adc
mov
(bad)
out
xchg
dec
inc
jmp
fild
add
add
pop
aaa
sbb
fs
sbb
sbb
test
xor
arpl
test
inc
popf
or
jl
stc
lea
(bad)
cwde
lock
stos
pop
mov
lods
in
int
mov
repz
inc
call
push
adc
inc
icebp
ja
mov
inc
or
call
dec
sbb
ret
pop
popa
call
add
(bad)
sti
xchg
push
bound
dec
and
stos
js
sub
fisttp
mov
outs
push
add
and
inc
lea
gs
add
dec
mov
pushf
or
pop
push
or
dec
adc
test
dec
retf
and
push
or
add
mov
test
sbb
adc
xor
pop
stos
std
call
jge
jmp
out
dec
inc
add
dec
or
add
sbb
push
mov
inc
add
stc
mov
aas
push
jbe
int3
and
add
push
or
mov
adc
inc
mov
es
jae
es
add
mov
je
add
add
lock
sbb
adc
sub
cld
in
add
push
cmps
jns
push
xor
add
add
popf
xchg
mov
lds
push
push
lea
or
add
cs
fidivr
stos
add
fstp
add
sub
jae
push
add
push
cmp
outs
in
(bad)
(bad)
fild
fsub
ds
lods
xchg
pop
inc
adc
xor
and
or
test
push
sar
call
add
popa
aas
push
repz
push
mov
retf
xor
mov
adc
pop
jl
inc
jmp
and
add
repnz
sub
es
out
and
add
outs
sbb
cmp
ja
inc
jmp
jno
retf
jmp
adc
xor
inc
sbb
addr16
pop
sbb
icebp
and
js
or
outs
xchg
out
call
pop
mov
(bad)
shl
stc
mov
mov
mov
push
mov
repz
and
add
retf
add
and
int
lds
xchg
adc
retf
push
sar
add
test
(bad)
(bad)
dec
add
mov
and
pop
mov
xor
push
xor
add
not
(bad)
adc
cmovb
fadd
(bad)
mov
add
add
inc
mov
dec
mov
and
(bad)
je
mov
into
int
push
xchg
(bad)
(bad)
jmp
(bad)
fadd
pop
inc
mov
adc
aaa
dec
cli
add
fs
cld
jg
jne
mov
jp
cmps
add
dec
xchg
inc
adc
cpuid
les
add
adc
inc
adc
mov
lea
jmp
ret
mov
inc
mov
pop
cmps
sbb
push
xchg
or
xor
mov
test
mov
test
into
sbb
pop
jmp
and
push
sub
je
inc
scas
dec
or
mov
add
add
leave
pop
sub
lods
inc
fisttp
dec
loope
or
out
mov
addr16
jae
loope
shr
ss
sbb
sahf
inc
jb
sbb
sub
adc
loopne
es
push
cmp
xor
fild
push
pusha
stc
jmp
mov
push
out
iret
inc
xor
adc
mov
inc
popa
inc
xchg
shr
and
in
add
nop
adc
add
call
xor
add
lock
out
push
add
scas
add
inc
sar
cs
rol
into
add
retf
add
and
cwde
mov
fisubr
adc
inc
push
jb
mov
test
call
icebp
sbb
aam
add
add
int
fcos
sub
out
cmp
in
or
cs
cdq
pminub
add
clc
pop
add
(bad)
ror
mov
mov
dec
aam
mov
dec
inc
push
push
pop
lea
cmps
jne
dec
inc
test
repz
jge
aas
je
mov
out
jbe
jp
cld
cmps
push
in
dec
out
test
add
add
movs
mov
push
mov
cmps
or
jne
dec
call
xor
pop
pop
leave
or
jns
inc
ret
enter
scas
in
mov
inc
add
(bad)
jp
add
mov
pop
mov
es
les
xchg
imul
es
mov
lods
pusha
adc
es
sahf
jmp
stos
add
add
add
call
aad
pop
out
stos
cmp
hlt
add
fdivr
add
fdivrp
(bad)
cwde
push
add
es
in
js
out
js
add
call
add
and
push
test
lea
inc
icebp
cmp
int
or
in
inc
fdivr
add
inc
xchg
add
add
adc
push
mov
bound
hlt
outs
add
stos
in
es
cdq
add
sti
ret
fdivr
scas
ret
sbb
cmp
inc
jmp
add
inc
(bad)
aam
jg
sbb
push
in
adc
stos
add
fnsave
pop
ss
push
mov
inc
jmp
xor
push
es
add
leave
jmp
sbb
int
je
aas
pop
sub
inc
mov
daa
inc
add
or
ror
ins
jge
(bad)
fidivr
(bad)
jmp
(bad)
mov
and
(bad)
shl
icebp
mov
and
fwait
(bad)
jmp
pop
jmp
cmc
retf
dec
pop
test
cmps
pop
or
sahf
inc
mov
out
pop
sub
lea
aaa
push
je
jg
add
add
clc
lea
stos
cld
jmp
stos
xor
std
inc
push
mov
sbb
inc
outs
dec
push
(bad)
shl
inc
lock
inc
add
push
and
push
mov
jne
add
add
pop
pop
leave
mov
movs
hlt
push
je
sub
or
jno
inc
push
push
xor
(bad)
jnp
xor
add
(bad)
push
lods
bound
ss
xchg
ins
inc
mov
xchg
fst
call
xor
test
clc
mov
mov
lea
adc
push
pusha
fstp
ins
(bad)
je
fnstsw
jmp
ins
pop
dec
and
mov
shl
call
fimul
adc
fnstenv
mov
stc
xchg
clc
xor
stos
add
in
or
inc
mov
and
popa
sbb
(bad)
rcr
and
in
xor
fidiv
sar
inc
es
mov
add
mov
lds
xor
mov
or
pop
cs
lock
inc
repz
mov
sub
inc
pop
xor
(bad)
and
fst
in
(bad)
xchg
sbb
sub
jmp
inc
es
cld
pop
sub
jmp
fldenv
push
add
or
gs
mov
retf
sub
inc
add
xchg
jmp
push
rol
pop
icebp
jge
pop
jmp
mov
pop
ins
push
add
gs
sbb
pop
ja
(bad)
jl
cmp
add
bound
mov
retf
add
jge
in
and
cmps
imul
aas
push
aas
mov
cmp
jmp
inc
sub
add
add
clc
add
ja
sub
mov
mov
sub
mov
inc
test
loop
les
dec
ja
mov
mov
mov
add
jp
dec
inc
jne
les
and
int3
test
push
ja
xchg
aas
mov
adc
dec
pop
pop
mov
add
add
dec
mov
or
aas
add
mov
mov
mov
es
and
jmp
sbb
sbb
ret
shl
mov
cmps
jmp
pop
add
xor
add
and
dec
add
pop
ret
mov
pop
mov
gs
shl
push
popf
aas
and
sbb
xchg
and
mov
sbb
add
inc
add
fiadd
push
sub
and
fwait
add
popa
and
test
cmp
cmps
out
call
fwait
mov
arpl
inc
jmp
or
inc
jmp
ins
out
xchg
add
mov
and
sbb
arpl
stc
adc
mov
dec
mov
add
add
inc
adc
inc
jmp
xor
add
(bad)
sub
hlt
add
xchg
sub
aad
fstp
jmp
add
(bad)
jb
es
pop
pop
or
mov
es
add
nop
clc
add
mov
jae
scas
add
add
out
mov
dec
add
add
add
sar
pushf
xchg
mov
inc
test
imul
add
mov
and
les
jmp
and
inc
call
pop
mov
and
inc
add
cmp
and
adc
jae
sbb
jne
sub
push
mov
sub
pop
or
call
xchg
dec
call
test
or
mov
inc
pop
es
mov
push
inc
dec
and
inc
dec
and
aad
lea
push
(bad)
fld
xor
retf
cs
lods
add
(bad)
retf
cs
dec
dec
and
fild
inc
add
push
cmps
add
(bad)
(bad)
mov
sbb
int3
add
mov
add
add
pop
or
fs
add
popf
add
sbb
test
cld
or
push
ja
aas
mov
add
pop
sub
mov
add
and
jnp
cmp
or
add
fadd
mov
es
data16
mov
test
gs
and
add
xor
les
retf
rcl
mov
popf
pop
fnstsw
cdq
add
mov
cli
sbb
inc
pop
psubusw
ins
ret
mov
cmp
adc
inc
sar
inc
cmp
pop
es
add
inc
sahf
push
inc
xor
repz
pop
inc
enter
add
lods
lahf
mov
lods
add
retf
in
es
ins
ret
adc
(bad)
xor
mov
cmp
inc
es
sub
ror
jmp
mov
sbb
ret
inc
leave
stos
icebp
mov
mov
test
ret
push
scas
jno
call
jb
shl
push
push
rol
mov
adc
aad
push
loop
cmp
test
cmp
jb
in
ret
and
aaa
push
xchg
jbe
add
cdq
inc
adc
pop
outs
sbb
mov
add
push
jmp
test
add
or
mov
xchg
adc
add
dec
mov
mov
loopne
pop
inc
add
pop
xchg
or
into
outs
push
shr
or
mov
or
mov
outs
int
cwde
jae
inc
sub
xor
jmp
xor
jge
call
icebp
movs
xor
add
stos
jae
inc
mov
outs
popf
call
xchg
inc
mov
imul
rcl
std
add
popf
add
push
movs
mov
scas
stos
dec
xchg
aad
mov
fld
add
xchg
mov
scas
push
hlt
push
jns
repnz
fld
inc
stos
(bad)
loopne
xchg
mov
lahf
sub
push
shl
mov
(bad)
pop
inc
retf
(bad)
loopne
cmps
mov
lahf
push
clc
push
cdq
push
test
stos
(bad)
loopne
cmps
mov
scas
leave
hlt
push
jno
jmp
dec
vucomiss
add
scas
mov
push
(bad)
call
pop
inc
inc
cmp
xchg
mov
mov
mov
jp
adc
add
daa
in
cmp
add
pop
adc
jnp
xor
into
mov
icebp
(bad)
mov
jl
mov
cmps
into
clc
mov
rcr
mov
jp
cmp
jnp
add
add
jmp
jmp
fild
mov
jecxz
mov
cmp
inc
rcl
push
push
pop
pushf
or
and
inc
add
in
jle
loop
mov
test
gs
inc
das
and
mov
pushf
and
push
mov
push
inc
mov
add
test
add
add
cmc
adc
and
xchg
push
pop
(bad)
mov
and
xlat
add
jge
push
jb
(bad)
jmp
sub
fidiv
sbb
in
mov
pop
pop
inc
hlt
scas
add
inc
add
push
(bad)
mov
rcr
test
scas
add
push
mov
adc
inc
lea
push
call
mov
mov
das
jns
shr
add
shr
les
in
push
add
inc
or
or
leave
ret
push
mov
jmp
popf
xor
cmp
hlt
aas
es
or
cmp
data16
(bad)
add
and
popfw
xlat
shl
fiadd
gs
fiadd
(bad)
jecxz
xor
xchg
jo
add
retf
pop
les
and
cld
pop
cmps
cli
inc
jmp
xchg
fcmovb
jmp
call
stos
fisttp
popf
pusha
enter
inc
iret
jbe
jge
sbb
fwait
ja
ret
adc
add
add
push
push
xor
dec
mov
mov
stos
(bad)
icebp
sbb
es
adc
inc
jmp
hlt
movs
pop
or
xchg
inc
call
add
lods
cwde
xlat
fld
add
in
cmp
add
imul
inc
mov
or
sub
inc
jo
out
mov
pop
xchg
fiadd
fstp
jmp
and
sbb
data16
jmp
loope
push
and
xchg
push
ds
adc
and
mov
or
hlt
ja
jmp
repz
mov
jmp
push
div
ret
fnstsw
mov
dec
inc
sub
pop
shr
pop
rcr
gs
test
sahf
cmp
xor
inc
mov
sbb
je
jnp
lea
add
add
(bad)
aad
xchg
jl
inc
fwait
cmp
inc
mov
lea
cmp
call
inc
test
rol
mov
add
inc
add
push
into
mov
dec
popf
lea
aaa
or
out
mov
add
sub
adc
adc
xor
popf
test
inc
ret
out
fld
(bad)
test
es
inc
add
into
inc
add
jo
adc
sahf
inc
add
aas
push
lahf
cdq
cli
lods
scas
cmps
mov
lock
es
jns
sbb
jns
sub
jns
push
jb
inc
xor
(bad)
aad
inc
inc
or
and
add
ffree
je
cmp
adc
fidivr
push
adc
add
pop
(bad)
aad
pop
int3
and
ja
fiadd
fld
js
jo
pop
in
inc
jmp
out
add
add
inc
jmp
in
lods
mov
add
adc
call
add
inc
cli
stos
test
mov
and
stc
cmp
cmp
es
fist
pop
jmp
stos
test
pop
in
test
inc
scas
add
lahf
sub
sbb
lock
mov
inc
jge
add
add
add
stos
pop
add
ins
pop
add
(bad)
js
sub
mul
ds
aaa
in
fstp
call
ins
in
or
mov
mov
into
add
adc
xchg
inc
add
ret
stos
and
ins
mov
daa
inc
mov
push
inc
add
dec
sbb
add
add
add
inc
add
push
push
inc
jmp
inc
cmp
stos
popa
inc
xor
mov
inc
push
push
mov
fsubr
and
add
inc
add
ficomp
inc
mov
adc
lea
nop
add
sbb
pop
(bad)
mov
pop
sub
(bad)
je
add
mov
add
and
jg
add
outs
(bad)
adc
imul
add
lea
and
outs
into
adc
cmp
call
es
lds
and
loope
and
inc
ins
add
scas
xor
sub
push
and
sahf
or
imul
adc
lods
inc
rol
out
ds
ins
jle
daa
ins
add
popa
ins
jg
dec
jns
mov
js
dec
sahf
jp
sbb
ret
sub
scas
mov
sbb
test
sbb
cs
and
ins
ret
adc
jp
add
movs
repz
out
ins
jle
es
add
jmp
jmp
add
inc
and
stos
test
sub
xor
add
es
callw
add
add
in
jecxz
es
mov
adc
push
push
adc
xchg
sub
push
inc
ins
les
enter
inc
sbb
or
fs
mov
add
jns
call
sbb
inc
jo
or
fisubr
pop
out
es
sub
loopne
ins
mov
inc
push
out
push
push
mov
add
ficomp
(bad)
cli
call
in
add
std
xchg
adc
jmp
fild
and
sub
cmps
popa
sub
and
inc
jge
jle
add
sub
rol
add
xchg
imul
fs
movs
cmp
cdq
ror
inc
int
or
hlt
jno
inc
jmp
sahf
mov
and
addr16
inc
add
push
mov
dec
mov
mov
retf
jmp
enter
iret
inc
add
or
xor
adc
inc
ins
or
sbb
or
(bad)
cmp
dec
xor
jb
push
out
push
inc
add
hlt
mov
push
mov
shl
int3
mov
push
xchg
sbb
or
sahf
fistp
xor
pop
add
mov
add
add
ins
stos
aam
ins
add
out
adc
out
ss
jbe
je
cmp
cmp
imul
out
adc
mov
mov
call
test
daa
(bad)
daa
ins
mov
scas
nop
out
dec
push
adc
pop
dec
push
out
mov
in
mov
jmp
jmp
add
rol
inc
push
jmp
add
dec
fadd
das
jno
cld
cdq
inc
jmp
and
movs
cli
xor
add
add
shr
jg
inc
lea
fstp
(bad)
in
aam
inc
mov
adc
cmc
mov
sub
sbb
into
and
ds
lods
out
jp
out
rcr
xor
inc
cdq
nop
in
add
mov
out
and
xor
dec
int
ja
lds
(bad)
adc
add
add
push
push
ficomp
aas
cdq
loopne
sub
jns
mov
inc
adc
inc
or
jae
(bad)
call
repnz
ror
in
int
fstp
jp
jmp
into
sub
test
ds
popa
and
add
or
aad
and
lahf
cmp
add
or
and
add
or
add
push
call
pop
popf
push
add
int
cmp
dec
mov
cmp
sti
push
jne
test
sar
push
jl
add
cmp
sub
mov
mov
and
mov
inc
and
(bad)
inc
jl
fcomp
push
call
add
mov
pop
dec
popf
stc
sbb
sub
cmp
fsub
mov
ret
adc
mov
jmp
repz
stos
sub
add
sub
sbb
and
setge
call
cmp
add
xor
dec
lods
inc
shr
push
sbb
ds
jmp
push
add
lods
sub
pop
popf
daa
or
lahf
imul
loop
or
mov
adc
movs
addr16
sub
(bad)
push
test
movs
jg
mov
stos
mov
inc
mov
jmp
fist
add
xchg
leave
mov
popa
dec
(bad)
inc
xchg
lds
add
add
test
movs
jnp
xor
xor
pop
lahf
(bad)
mov
inc
out
adc
adc
push
sub
jne
add
cmp
stos
out
pop
pop
out
cwde
out
cwde
dec
mov
add
mov
pop
pop
call
add
(bad)
call
sub
rol
inc
pop
cli
mov
out
and
add
add
add
adc
in
call
add
mov
ins
leave
xlat
out
test
(bad)
jmp
sub
xchg
jbe
inc
retf
pop
in
inc
retf
inc
out
sbb
stos
jbe
jmp
mov
or
push
push
(bad)
xor
add
or
and
in
xor
push
or
and
mov
xchg
add
xor
xor
fisubr
fs
retf
jb
daa
(bad)
pop
and
in
ror
inc
add
aas
inc
mov
mov
xchg
mov
adc
add
inc
add
out
pop
add
rol
jp
and
aas
mov
test
xor
test
repz
jmp
pop
push
lea
add
add
test
or
es
add
es
inc
xor
dec
dec
mov
inc
in
loop
push
mov
inc
loopne
loop
and
jmp
mov
or
loop
push
fdiv
mov
add
pop
add
lods
pop
test
es
push
daa
pop
stc
pop
dec
and
adc
add
add
mov
mov
inc
cmp
imul
stos
inc
int
leave
jb
push
scas
bswap
ud1
cld
sbb
cmp
push
sbb
xor
push
adc
mov
daa
fst
pop
std
adc
inc
bound
add
or
sbb
push
or
rcr
add
add
adc
into
add
adc
push
ss
test
ins
lds
inc
pop
push
lods
or
push
fwait
sbb
inc
xor
jmp
cmps
mov
into
and
jnp
cmc
cmp
pushf
add
jae
inc
sub
std
and
and
movs
mov
push
sbb
add
adc
adc
add
add
add
daa
xor
sub
cwde
sbb
mov
or
daa
sbb
movs
add
dec
lds
inc
test
shl
pop
push
sub
shr
add
scas
hlt
and
retf
call
sbb
fimul
and
out
loopne
mov
mov
push
(bad)
sti
arpl
push
ud1
or
add
sub
jp
outs
mov
add
dec
icebp
mov
and
inc
add
jg
jb
das
mov
mov
add
mov
lea
mov
test
stos
jo
push
mov
daa
out
add
mov
pop
mov
mov
push
dec
push
pop
mov
lahf
cld
add
dec
push
pop
mov
mov
push
mov
data16
inc
sub
xchg
dec
mov
sub
cmp
mov
pop
push
(bad)
cli
dec
and
das
add
cmpxchg
cmp
gs
aad
rcr
movs
and
mov
sbb
add
cmp
das
and
inc
int
daa
pop
xchg
add
push
inc
jo
lods
xchg
push
in
jmp
retf
jb
cs
bound
sub
xor
sar
push
sub
adc
aas
movq
jp
dec
push
fadd
movs
test
mov
aas
sbb
fs
es
jb
cmps
pop
test
es
xchg
dec
mov
add
add
(bad)
je
jns
add
outs
repz
adc
and
xchg
add
inc
push
shl
mov
out
mov
inc
add
cmp
inc
sub
(bad)
xchg
cdq
mov
jmp
cmps
clc
xlat
push
sub
(bad)
jmp
and
mov
pop
sti
sub
and
clc
pop
sbb
mov
sahf
retf
jmp
xchg
outs
inc
outs
ins
(bad)
test
sub
bound
mov
call
jl
inc
jg
out
dec
dec
add
jne
or
dec
sbb
cmovs
add
mov
call
jb
dec
pop
jmp
add
add
inc
add
ret
inc
pop
push
adc
dec
retfw
cmp
push
push
clc
fld
mov
and
mov
mov
call
dec
sbb
jg
test
xchg
push
cmp
je
or
adc
es
pop
stos
sbb
out
lahf
pop
jb
std
arpl
or
popa
add
add
push
fucomp
out
pop
add
jo
aaa
xor
push
mov
push
outs
inc
add
pop
add
lds
mov
pop
and
inc
add
mov
add
ror
pop
sbb
popf
add
mov
je
adc
jnp
push
pop
xchg
dec
sbb
daa
inc
jmp
pushf
sub
mov
add
add
adc
retf
add
es
add
std
inc
jmp
adc
lock
adc
test
adc
push
push
(bad)
lahf
cmps
push
and
es
imul
daa
pop
pop
pop
lods
mov
or
push
daa
inc
jmp
mov
pop
or
es
fs
bound
dec
ss
add
dec
sbb
mov
sar
adc
lea
add
add
dec
movs
cli
gs
mul
sub
jmp
and
inc
xor
imul
sub
jg
sti
into
xchg
imul
mov
sbb
add
cmp
or
mov
inc
mov
add
add
inc
jbe
das
inc
pop
adc
leave
push
inc
pcmpeqb
add
jl
out
not
add
inc
out
mov
mov
jne
mov
pop
push
ret
sti
adc
pop
or
jmp
sti
adc
add
and
in
add
inc
lea
mov
push
sub
jmp
inc
sub
mov
push
inc
(bad)
stc
adc
(bad)
cmps
popf
inc
(bad)
call
into
mov
mov
or
(bad)
call
lock
mov
mov
cmps
mul
pop
push
push
rcr
jbe
xchg
push
push
add
fadd
sub
lods
je
add
add
loop
dec
push
pop
lods
(bad)
icebp
fdivr
and
sub
add
pop
add
es
jnp
or
pop
add
adc
ins
inc
add
and
or
out
inc
and
dec
jg
inc
jns
lea
or
add
pop
jmp
dec
or
lods
pop
aaa
ins
jg
addr16
xchg
call
add
xor
lods
mov
stc
jle
and
jle
pop
mov
mov
jmp
pop
or
cmp
leave
adc
sbb
pop
mov
jg
and
dec
and
add
jae
cld
pushf
test
arpl
pop
pop
or
add
add
dec
and
add
stos
in
call
dec
push
add
and
lock
(bad)
sbb
lea
push
add
and
out
stc
mov
jle
pop
sub
gs
jb
adc
ins
addr16
leave
iret
lea
test
jle
jne
inc
adc
add
xor
icebp
push
pop
mov
sub
in
jp
add
in
push
xor
lea
punpckhdq
cmps
mov
out
test
xor
mov
cmp
adc
xor
leave
jnp
ds
mov
adc
push
call
std
sbb
jle
add
cwde
jg
xor
add
cdq
jae
xlat
loope
inc
add
add
in
jne
jmp
and
enter
inc
mov
jmp
and
inc
add
out
inc
adc
jmp
out
add
or
add
lock
push
add
add
jge
retf
sbb
(bad)
cli
loope
push
imul
out
push
add
mov
cmps
dec
int3
jg
div
sbb
mov
sub
jmp
add
inc
out
cld
movs
inc
div
mov
push
push
ret
test
dec
sbb
push
call
xchg
ins
dec
leave
in
add
xchg
push
push
pop
inc
ja
mov
inc
jmp
test
xchg
fsubr
jl
pop
adc
cld
inc
jb
mov
jne
es
jo
jo
out
push
jle
xor
es
sub
dec
popf
jo
daa
push
inc
call
inc
jmp
out
sub
shr
sbb
add
add
leave
sub
and
sub
or
cs
into
mov
add
add
stos
push
sbb
or
mov
ret
cli
ret
add
add
outs
or
push
fist
xlat
int3
pop
gs
pcmpgtw
(bad)
(bad)
jmp
lods
lods
stc
inc
jle
mov
call
lea
dec
icebp
je
mov
bound
xchg
or
gs
or
mov
and
push
shl
mov
bound
add
pop
hlt
mov
jb
mov
jne
jmp
add
inc
inc
jmp
ins
sar
jae
adc
call
dec
mov
add
lock
mov
mov
repnz
call
rcl
cld
call
lds
push
inc
xor
adc
inc
test
mov
rcl
add
add
jmp
call
push
adc
call
sar
pop
push
imul
cmp
pop
cmp
scas
sbb
imul
dec
mov
(bad)
popf
mov
jg
cli
sahf
jns
jle
or
push
in
pop
jno
adc
dec
jns
pop
out
cmp
loope
xor
xor
mov
dec
jg
push
out
add
das
jmp
std
imul
lods
mov
pop
push
mov
shl
jmp
daa
cs
cmp
sbb
sbb
rcr
movs
xor
fild
js
leave
sahf
das
sub
test
clc
sti
jmp
add
inc
xchg
sbb
dec
lods
jl
bound
jmp
add
sbb
in
add
sbb
dec
hlt
push
movs
dec
(bad)
mov
dec
lods
jo
push
fcom
mov
add
inc
adc
enter
retf
stos
cmps
(bad)
aaa
mov
(bad)
jo
je
cld
xlat
sti
pop
(bad)
push
icebp
pop
inc
mov
adc
pop
mov
inc
add
cmps
fisub
loope
repz
add
add
push
push
test
and
div
ret
shl
loope
mov
call
ret
xlat
add
cmp
retf
mov
dec
leave
xlat
push
aas
mov
jmp
cmove
and
gs
ret
mov
sti
shl
test
push
cmps
retf
(bad)
(bad)
(bad)
mov
mov
inc
mov
cld
mov
mov
mov
cmp
or
adc
jmp
enter
ror
ret
push
cmp
add
push
je
retf
mov
fstp
inc
add
xor
div
inc
add
inc
ja
jmp
sbb
cmovno
mov
add
add
lods
xor
dec
mov
push
in
adc
ret
jl
loope
aad
into
push
fwait
(bad)
rcl
push
add
scas
push
push
xor
sub
imul
pop
mov
xchg
sbb
inc
mov
xor
cmc
mov
pusha
sahf
jno
loop
or
push
xor
cmp
add
adc
outs
add
push
xor
fsub
inc
cld
(bad)
and
sbb
mov
(bad)
hlt
mov
sbb
jbe
call
jl
ja
bound
cs
mov
outs
lock
pop
test
add
int3
test
pop
pop
test
dec
jmp
(bad)
mov
adc
xchg
repz
cs
(bad)
es
jb
stos
push
sti
pop
xor
and
pusha
ins
mov
push
pop
mov
leave
es
jae
dec
dec
rol
mov
arpl
xor
pop
pop
(bad)
pop
iret
in
jmp
add
sbb
sub
inc
mov
pushf
clc
add
dec
mov
inc
push
ss
scas
pop
arpl
arpl
cli
jae
retf
lds
fidiv
pop
pop
xor
call
or
adc
ror
push
inc
cmp
dec
xchg
test
mov
push
xchg
adc
fs
stos
pop
cld
add
jo
call
std
inc
add
cmp
xor
mov
pop
xor
xlat
push
jae
out
add
add
cmc
push
cmp
je
(bad)
(bad)
lods
add
hlt
inc
mov
add
inc
or
test
mov
dec
cmp
cmp
dec
add
je
pop
jae
retf
cmovno
pop
or
lea
idiv
dec
cmp
inc
mov
xor
test
inc
es
sar
push
pop
hlt
sub
push
sub
(bad)
adc
mov
stos
add
stos
je
clc
push
or
call
inc
(bad)
daa
imul
jne
push
and
sbb
add
pop
test
(bad)
bnd
call
stos
stos
pop
add
stos
test
dec
and
add
fst
and
cmp
adc
add
add
jo
add
stc
in
loopne
bound
cmp
in
mov
aas
jb
pusha
aas
loope
and
in
es
and
(bad)
aad
jp
fcmovnb
or
sahf
sahf
jp
jb
add
popf
loopne
clc
mov
ins
xchg
pop
inc
sbb
mov
xor
dec
sub
and
fwait
inc
cli
call
and
shl
pushf
xor
inc
sub
in
and
sub
xor
jmp
fstp
jmp
lea
add
lock
pop
retf
out
pop
popa
pop
dec
mov
test
push
adc
not
add
shl
jb
pop
test
sub
and
int
das
lahf
and
shl
ror
rol
mov
je
call
pop
dec
lods
sub
shl
xchg
sbb
aad
call
mov
sahf
test
adc
sub
data16
ins
add
push
(bad)
push
and
call
inc
mov
cmp
or
mov
int3
adc
call
(bad)
cmp
xchg
push
dec
push
adc
nop
cmp
bound
mov
jmp
xor
mov
fs
mov
fs
jle
add
in
push
mov
lds
mov
loopne
and
sbb
aad
stos
or
pop
loopne
or
sub
add
mov
and
inc
(bad)
push
mov
cmp
and
aas
and
fwait
cdq
jae
mov
test
adc
(bad)
stos
into
fidivr
cwde
ins
add
rol
dec
rcl
imul
adc
adc
jle
jo
daa
inc
ins
jg
fsub
add
add
add
ins
inc
cdq
jo
cmc
push
in
shl
xor
fst
pop
pop
xor
mov
call
mov
inc
jmp
sub
inc
xor
add
pop
loop
es
push
sbb
sub
inc
push
xchg
fist
sub
xor
jns
es
stos
ret
por
mov
or
cdq
xor
xchg
add
push
(bad)
cmp
aaa
call
or
pop
and
ds
bound
pop
or
inc
add
adc
je
push
push
je
scas
fmul
mov
cmp
push
inc
test
pop
enter
inc
imul
inc
test
and
add
test
int3
push
or
add
rol
jmp
and
inc
add
inc
test
icebp
daa
and
shrd
sar
push
retf
mov
retf
inc
add
out
test
inc
push
add
xor
mov
lea
sahf
xchg
std
shr
push
push
repz
and
sbb
mov
jb
push
mov
dec
lea
add
add
inc
push
lea
inc
push
push
adc
das
dec
inc
add
popa
aaa
mov
lods
dec
mov
pcmpeqw
push
push
inc
call
add
adc
cmp
pop
push
dec
mov
test
add
cs
add
xchg
adc
dec
popf
add
adc
bound
outs
repnz
sbb
add
ds
mov
inc
call
test
call
push
aas
push
add
out
and
mov
cmp
xor
mov
(bad)
lea
push
cmp
inc
jmp
adc
fsubrp
stos
jno
out
mov
add
add
inc
pop
adc
repz
pop
add
xor
enter
ins
adc
xchg
leave
ret
call
adc
inc
mov
mov
sbb
jmp
inc
and
sub
or
dec
fwait
pop
(bad)
xchg
cld
add
mov
test
mul
dec
adc
aad
add
sub
bound
inc
lea
fmul
jo
inc
push
shr
or
(bad)
adc
push
in
add
call
jmp
gs
add
inc
call
dec
xor
cli
lock
stc
mov
pop
imul
dec
(bad)
jmp
and
aaa
lods
sti
gs
mov
push
call
pop
aaa
mov
dec
add
daa
sub
mov
add
mov
mov
mov
jnp
cmps
in
(bad)
dec
inc
mov
das
mov
xchg
lds
xlat
jmp
(bad)
jg
inc
inc
dec
inc
mov
aas
mov
xor
les
cmp
add
add
ds
fnstcw
jae
das
ds
add
push
add
mov
add
dec
cmp
push
arpl
push
dec
(bad)
loope
cmp
hlt
jbe
add
pop
scas
test
out
iret
xor
and
clc
cmp
inc
mov
inc
popw
or
popf
pop
int
xchg
das
add
repz
xchg
je
add
add
or
call
in
leave
or
(bad)
sbb
dec
cmp
jle
inc
add
xchg
xor
arpl
in
cmc
mov
pop
(bad)
sbb
jmp
add
iret
mov
clc
sub
out
xchg
jmp
imul
out
sbb
cmps
clc
inc
xor
xchg
les
outs
jmp
je
add
add
cmp
js
sub
dec
test
addr16
inc
(bad)
daa
stc
mov
cmp
lods
sahf
jmp
mov
mov
stos
adc
pop
sub
mov
cmp
jge
mov
aad
jno
xor
out
cmps
clc
push
sbb
int3
sbb
les
cmc
jns
dec
and
imul
push
and
test
dec
jnp
pop
push
sahf
inc
out
push
sub
pop
nop
fcmovb
pop
sub
pop
or
sub
(bad)
aam
jne
pop
sub
hlt
cs
mov
dec
outs
mov
mov
adc
out
hlt
push
retf
pop
mov
push
push
test
cmps
add
push
fwait
test
hlt
outs
pop
add
sti
pop
sbb
adc
fsubr
add
call
pop
dec
pop
popf
push
jg
sti
jl
(bad)
mov
into
pop
int3
mov
mov
loop
fwait
push
ret
push
add
jg
sub
add
or
add
xor
push
nop
push
dec
push
aas
inc
add
leave
mov
mov
add
add
push
mov
xchg
loopne
aas
scas
fdivr
out
std
mov
sbb
add
adc
outs
mov
test
nop
(bad)
push
mov
lea
test
loope
enter
test
jbe
sbb
pop
jge
fisub
(bad)
push
jae
jmp
pop
xchg
data16
xor
jge
push
mov
adc
test
mov
(bad)
mov
lahf
xor
add
data16
jae
cdq
add
out
sbb
dec
inc
jg
xor
ds
cwde
add
and
ret
and
pop
adc
xor
lods
inc
jmp
pushf
mov
sbb
xchg
cld
test
xchg
(bad)
mov
inc
jmp
add
xchg
into
mov
xor
pop
icebp
mov
mov
mov
arpl
xchg
xor
(bad)
nop
pop
daa
inc
jmp
add
jmp
cli
outs
test
imul
hlt
dec
adc
adc
add
inc
je
cmps
cld
ds
idiv
fadd
xor
add
xor
rcl
scas
cmps
cld
push
test
(bad)
fsub
xor
sahf
xchg
add
pop
mov
inc
dec
push
inc
mov
add
mov
mov
mov
inc
mov
pop
jno
and
mov
cs
aas
lea
adc
inc
iret
punpckhdq
mov
inc
push
push
xchg
clc
push
adc
leave
inc
in
hlt
xor
lods
(bad)
(bad)
inc
in
inc
add
call
add
test
sub
pop
enter
js
xor
dec
inc
test
cwde
mov
mov
jnp
lsl
(bad)
(bad)
jg
mov
mov
adc
dec
retf
es
jae
xlat
test
stos
fbld
xor
xor
add
jae
call
mov
pop
in
add
xlat
ret
call
mov
fild
add
xchg
xchg
mov
jbe
call
(bad)
ficom
loopne
clc
mov
xor
leave
mov
add
call
mov
and
inc
jns
call
iret
xchg
mov
adc
inc
es
rcl
push
xor
jge
mov
xor
add
(bad)
push
sahf
sub
cli
movs
pop
push
mov
mov
ins
or
inc
xor
inc
ror
es
sub
add
mov
add
fadd
cmps
inc
jmp
ins
mov
pop
push
dec
es
ins
ret
xor
mov
mov
ja
add
(bad)
push
cmp
pop
mov
out
mov
and
mov
jmp
pop
fdivr
call
mov
ror
inc
inc
mov
add
add
inc
add
sbb
xchg
push
je
inc
cli
push
lods
xchg
call
fs
xchg
sub
je
fadd
addr16
cmps
inc
cli
out
lahf
into
cmp
and
(bad)
scas
xchg
std
mov
pop
mov
cli
cdq
cmc
inc
js
add
push
mov
mov
inc
add
sub
loopne
inc
mov
cmps
iret
(bad)
call
loopne
std
dec
inc
add
mov
test
push
pop
xor
xchg
jb
cmc
stc
pusha
int
call
int
cld
imul
inc
dec
adc
outs
dec
jecxz
mov
ja
(bad)
fisubr
adc
fidivr
pop
mov
retf
ja
sbb
es
mov
jle
in
add
add
add
xchg
lock
pop
push
add
aam
mov
rol
ja
outs
test
inc
sub
jb
sub
(bad)
jmp
xor
push
cwde
mov
jbe
scas
sti
sub
sbb
cli
xor
adc
out
ja
(bad)
fwait
mov
repz
xor
sub
adc
bound
sub
out
pop
inc
add
xor
lea
inc
cmp
xchg
inc
iret
xor
(bad)
mov
xchg
je
jo
scas
dec
mov
dec
adc
add
push
inc
(bad)
xor
(bad)
ja
inc
inc
sbb
dec
jne
xor
xchg
es
mov
add
iret
xchg
test
inc
inc
pushf
adc
call
add
add
mov
fistp
xchg
(bad)
je
out
cmp
es
sbb
inc
fld
test
dec
retf
inc
add
and
inc
(bad)
scas
and
cmp
cli
inc
pop
mov
movs
sub
sbb
push
sbb
mov
xchg
jp
(bad)
xor
inc
test
and
sub
out
inc
add
add
add
test
dec
xor
mov
sub
sbb
cmp
xchg
popf
rcr
jnp
fisubr
add
and
mov
inc
icebp
dec
mov
add
cld
xor
ror
hlt
or
add
jne
push
cmp
or
(bad)
mov
add
mov
add
bound
ret
pop
jb
mov
lock
adc
test
jae
mov
mov
test
push
jne
jne
mov
in
lds
test
push
adc
lock
adc
fld
add
es
add
ja
movs
inc
xor
les
fld
lods
out
int3
out
sub
push
jle
dec
add
mov
ret
sub
add
jg
fiadd
dec
add
add
dec
test
and
es
and
movs
cmp
popf
mov
jle
xchg
daa
sar
inc
cmp
scas
sub
test
xchg
outs
test
int
or
popf
mov
add
dec
out
popf
xor
sbb
xchg
test
push
mov
sti
mov
and
dec
add
xchg
inc
out
or
sbb
lods
add
out
test
cmp
(bad)
ins
bound
adc
lods
test
ss
jb
loop
daa
add
xchg
push
cmp
leave
or
add
add
jne
pop
mov
mov
aaa
call
or
iret
dec
std
fisub
mov
pop
sub
ins
fs
hlt
push
push
inc
jmp
push
hlt
(bad)
call
pop
cmp
(bad)
xor
and
inc
and
movs
push
pop
sti
gs
adc
add
add
sub
inc
and
inc
cdq
(bad)
stos
sbb
(bad)
in
stc
lock
pop
cmc
in
into
jle
js
push
xchg
cmp
lahf
sbb
add
inc
or
xor
jno
sbb
add
cli
ss
or
inc
mov
dec
cld
cdq
xchg
jne
ret
call
call
or
pop
pop
mov
or
add
mov
push
xchg
into
pop
adc
inc
jmp
or
iret
push
cmp
idiv
sti
sub
and
add
push
cmps
inc
out
in
add
stc
adc
pop
and
imul
cmps
pop
jae
mov
fdivr
sbb
adc
scas
dec
dec
adc
push
es
in
add
jmp
imul
or
ds
inc
pop
frstor
pop
es
mov
popf
addr16
adc
and
xchg
push
or
mov
cmp
fsubr
xchg
out
mov
xchg
xor
push
mov
mov
loop
mov
xor
test
call
ja
add
cmc
xchg
sub
fistp
xchg
push
or
sub
fdivr
imul
mov
cmp
idiv
into
es
jg
mov
dec
fiadd
or
rcl
adc
adc
jnp
data16
push
sub
call
mov
imul
mov
inc
jb
sub
jb
xchg
cld
or
loope
xor
scas
repnz
mov
bound
retf
jne
mov
dec
mov
or
push
bound
into
inc
icebp
pushf
xchg
cmc
gs
push
dec
adc
sub
lahf
push
sub
push
mov
hlt
cmp
lods
sub
cs
push
add
xor
int
mov
jne
clc
cmc
inc
std
jbe
inc
(bad)
(bad)
loope
xor
xchg
mov
bound
inc
test
mov
or
push
mov
mov
adc
sbb
pop
shl
cmp
jo
dec
addr16
cmp
add
add
mov
xor
mov
test
add
int
mov
div
jge
add
mov
push
push
popf
out
jnp
and
dec
dec
xchg
xchg
stos
(bad)
clc
femms
(bad)
sbb
es
push
mov
ins
aam
movs
gs
sbb
jnp
and
imul
cmp
faddp
sub
aam
mov
inc
jmp
add
(bad)
cmp
add
inc
outs
add
scas
pop
jnp
xor
or
add
inc
jg
call
inc
pop
(bad)
sub
cld
jl
mov
mov
stos
call
mov
mov
add
mov
daa
inc
pop
stos
out
jmp
test
jmp
cmp
stc
ret
leave
retf
shr
mov
xor
sub
adc
sar
ret
mov
inc
add
leave
in
cmp
jmp
out
push
add
inc
xor
jmp
and
push
sub
stos
mov
imul
mov
cld
and
add
mov
xor
test
push
push
rol
and
rcl
(bad)
jmp
scas
jg
cdq
dec
mov
es
inc
jecxz
and
rol
inc
popf
xor
and
jo
pop
popa
xor
aam
push
inc
jmp
loop
fstp
stos
call
in
xor
add
mov
add
jo
add
(bad)
jp
js
or
dec
inc
add
mov
fimul
mov
inc
inc
jb
(bad)
sub
push
mov
push
jmp
inc
(bad)
or
inc
xchg
(bad)
dec
xchg
sti
inc
xor
dec
ret
sbb
test
and
add
xor
(bad)
dec
sidtd
cli
add
push
(bad)
jmp
ss
es
adc
sbb
(bad)
fsubr
jns
jmp
sbb
ja
adc
inc
aas
cmps
fucom
push
js
(bad)
lods
dec
pop
push
push
jle
add
cmps
mov
add
pop
or
push
cmps
push
(bad)
jmp
add
add
test
push
and
lea
(bad)
std
(bad)
mov
in
js
push
adc
jmp
add
nop
inc
inc
or
fwait
or
es
aas
fs
imul
add
shl
xor
add
pop
cmp
dec
outs
stos
or
add
add
imul
outs
bound
stos
cmp
sub
out
call
inc
fs
push
pop
shl
(bad)
add
(bad)
daa
out
and
xchg
or
movs
dec
sbb
xchg
or
mov
adc
sub
jnp
and
xchg
sub
outs
adc
mul
repz
and
add
add
repz
call
fcmovb
std
out
retf
add
and
xor
cld
xchg
std
cld
test
adc
xor
add
or
sub
add
fdiv
adc
xor
push
pop
das
(bad)
cs
push
mov
scas
(bad)
int3
pop
xor
jmp
push
sub
add
xor
iret
test
cld
js
jl
mov
(bad)
jb
cmovo
sub
inc
push
and
call
lds
jne
mov
inc
inc
mov
test
adc
adc
cld
add
scas
push
fwait
push
aas
fwait
int3
movs
std
inc
ret
cmps
shr
push
int3
push
inc
repnz
or
icebp
and
sar
push
or
push
out
cmp
fiadd
cdq
sub
pop
jg
shl
inc
cmp
repnz
cmps
pop
out
jbe
(bad)
fadd
fdivr
pop
jo
lahf
dec
daa
cmp
scas
bnd
pop
iret
cmp
push
cmps
aam
jmp
pop
xor
pushf
out
sub
dec
cmp
data16
xlat
mov
add
pop
sbb
cmp
test
aaa
mov
sti
pop
ret
je
mov
xor
call
jge
test
push
into
in
dec
xchg
(bad)
cmp
mov
ja
add
dec
fdivr
mov
add
xchg
jbe
in
sub
sub
pop
data16
pop
cli
cmp
xchg
lods
cmp
push
stos
rcr
fstp
mov
dec
inc
add
out
rol
int3
mov
sbb
xor
sub
push
mov
adc
xchg
scas
sbb
jmp
es
fisubr
and
jg
push
add
jne
pop
mov
mov
cmps
pop
adc
sub
(bad)
in
xchg
push
add
inc
add
cmps
xchg
sbb
sub
add
and
test
jb
mov
jne
call
push
(bad)
cli
mov
inc
clc
mov
je
xor
bnd
inc
sub
call
or
pop
pop
les
or
dec
je
inc
cmp
sub
add
or
sti
pop
(bad)
push
sar
dec
push
jmp
test
mov
sbb
xchg
push
pop
mov
rcl
stos
or
stos
stos
jb
loope
cmp
push
es
(bad)
imul
add
add
mov
push
dec
leave
call
(bad)
sbb
ret
pop
clc
push
mov
jne
and
jb
pushf
pop
pop
ja
xor
sti
inc
add
adc
jo
mov
fild
adc
cmpps
add
add
mov
cs
rep
je
rcr
loope
jnp
lods
outs
cld
add
add
add
add
es
ficom
fnsave
test
xor
icebp
sub
jne
pop
les
mov
jl
mov
xor
inc
jb
pushf
js
pop
add
add
xor
push
add
test
inc
push
inc
mov
jo
cmp
sbb
sub
mov
sar
dec
sub
fmul
scas
daa
add
xor
ds
add
pop
xchg
cmp
sub
jo
xchg
(bad)
cmps
sbb
jmp
and
cdq
jmp
mov
dec
and
inc
push
sub
xor
(bad)
cdq
pop
cdq
push
jmp
xchg
push
cld
ret
(bad)
sbb
add
and
inc
jg
sub
jmp
pop
add
dec
and
sbb
jmp
ror
xlat
sub
lock
add
mov
daa
xchg
push
repnz
mov
lods
(bad)
call
test
aaa
mov
inc
inc
dec
add
in
pop
lea
jne
iret
lods
cmp
add
add
inc
add
mov
inc
add
ret
add
inc
add
(bad)
lds
pop
adc
ror
(bad)
(bad)
jg
adc
inc
add
(bad)
aas
inc
push
push
inc
(bad)
dec
ret
aad
inc
add
lods
fld
es
push
mov
add
adc
icebp
sahf
pop
ds
sbb
pop
pop
bndstx
test
call
add
lods
push
inc
(bad)
mov
push
and
mov
pop
ror
rol
sbb
mov
xchg
push
mov
fwait
mov
inc
call
mov
std
dec
out
inc
pusha
movs
jg
and
je
push
xchg
ins
and
daa
cmc
mov
in
inc
pop
es
out
mov
std
out
data16
push
mov
jle
and
add
xchg
je
xor
(bad)
aas
sub
inc
out
jno
ins
test
es
jns
sub
add
mov
out
xchg
xor
pop
clc
push
sahf
stc
add
test
add
add
lea
jbe
sub
div
jle
daa
ret
shr
inc
add
mov
dec
inc
pop
jmp
push
mov
sbb
add
mov
cdq
pop
inc
mov
retf
lahf
xor
mov
push
fs
(bad)
pushw
inc
jne
es
daa
sbb
xchg
retf
rol
es
sbb
pop
sub
add
add
xchg
pop
add
ins
lds
and
inc
xor
inc
scas
cld
jb
imul
std
fidivr
lock
out
inc
add
and
add
and
clc
in
xor
jno
cmp
mov
movs
(bad)
jno
adc
adc
jp
jno
mov
mov
ret
jmp
ins
rol
fs
sub
in
lahf
cmp
push
out
loopne
push
push
mov
and
add
cmp
pop
ud2
mov
cdq
or
sti
or
and
clc
add
enter
add
and
int
pop
div
sbb
call
add
add
add
xchg
enter
add
(bad)
add
cwde
jmp
not
loopne
cmps
shl
or
call
cmp
loope
sbb
add
loopne
jno
test
jae
push
push
jbe
xchg
call
cmp
inc
fs
mov
pop
bound
add
and
dec
push
cli
inc
stc
push
arpl
dec
(bad)
sbb
sub
pop
call
fnsave
inc
(bad)
sbb
not
jnp
and
sub
int3
mov
add
inc
out
je
mov
adc
rcr
lock
jnp
pop
mov
call
mov
pop
and
push
ja
shr
add
pop
and
idiv
mov
sbb
out
(bad)
std
push
ret
loope
aaa
ins
sti
gs
mov
mov
(bad)
call
loope
sub
and
and
and
cmp
in
mov
(bad)
dec
ins
jle
inc
dec
adc
in
mov
ins
(bad)
dec
dec
ds
rcl
add
arpl
ret
sbb
and
movs
scas
inc
add
(bad)
arpl
and
add
lds
popa
cld
sub
adc
lsl
(bad)
adc
cmp
je
(bad)
cmp
push
aaa
mov
jno
les
ffreep
loope
add
sahf
inc
in
or
mov
ret
mov
and
xchg
inc
add
jl
dec
add
add
fdivrp
mov
bound
cmp
add
bound
jmp
les
xlat
add
call
call
mov
inc
out
test
add
ret
icebp
je
sub
ret
sub
xor
enter
push
xchg
cs
add
es
push
jne
lods
movs
pop
mov
add
add
aas
mov
je
mov
sub
push
sub
imul
je
xchg
rol
sbb
loopne
mov
addr16
stos
add
stos
cmp
mov
inc
sub
sub
ror
(bad)
ror
sub
jno
(bad)
out
inc
dec
xchg
jp
retf
aaa
clc
lods
cmp
jno
je
sbb
shl
push
cmps
pop
call
sbb
push
leave
cmps
out
retf
daa
xor
adc
push
adc
retf
imul
xor
add
jnp
lock
movs
sub
cwde
in
jle
sahf
cmp
push
add
dec
sub
ret
in
std
and
add
arpl
jae
pop
leave
cli
(bad)
in
sub
movs
adc
loope
shl
inc
imul
inc
mov
int
sar
mov
int
mov
xchg
jo
or
push
add
sub
out
ret
add
sub
ret
sti
(bad)
stos
shl
jmp
cmps
inc
aas
jmp
fcmovbe
dec
jmp
add
add
loop
popf
jge
int3
hlt
mov
sbb
adc
or
add
xlat
imul
add
sub
call
xchg
iret
inc
movs
(bad)
repnz
ud1
add
dec
scas
xor
vmwrite
add
mov
dec
mov
add
dec
mov
inc
iret
lahf
sub
mov
inc
sbb
add
mov
es
loope
jns
sub
mov
popa
adc
mov
jmp
adc
add
mov
xchg
and
push
mov
sbb
call
dec
test
test
add
movs
repz
(bad)
test
mov
bound
(bad)
push
push
rol
xadd
sub
ret
sub
(bad)
call
xor
ss
data16
mov
(bad)
rol
add
ror
xor
sbb
adc
inc
pushf
idiv
call
retf
cmp
add
add
jmp
sbb
xlat
loopne
iret
cmp
add
leave
jbe
es
push
xor
dec
fs
daa
inc
out
jae
push
xor
cdq
mov
jb
push
es
call
inc
leave
dec
add
imul
(bad)
xor
mov
sbb
jg
pusha
icebp
cmp
jmp
add
add
inc
add
mov
mov
lds
push
jb
sub
je
aam
xor
mov
test
fimul
call
in
or
jecxz
shl
dec
jnp
stos
outs
or
xor
add
cwde
inc
add
and
pop
dec
add
cld
mov
inc
xchg
inc
add
add
iret
inc
lock
add
cmp
add
or
xchg
mov
jne
ror
adc
xchg
add
mov
lock
mov
add
pop
dec
or
dec
test
inc
jg
or
sbb
cmp
aas
or
add
sub
add
adc
das
and
sldt
add
xchg
add
(bad)
or
rcr
pop
cmp
jne
stos
sbb
add
sub
sti
inc
adc
mov
les
sub
xor
(bad)
sbb
mov
cdq
iret
or
hlt
mov
pop
call
lods
nop
js
jno
mov
sbb
movzx
push
movzx
add
add
daa
inc
fistp
push
inc
mov
repnz
cmp
add
stos
stc
add
es
ret
test
and
or
xchg
pop
clc
retf
and
add
add
add
and
movs
pop
xor
pop
lods
neg
repz
cwde
or
lds
add
add
inc
ins
adc
daa
popa
enter
sub
jle
enter
daa
scas
xor
mov
daa
imul
test
jl
inc
mov
jb
adc
jg
inc
mov
and
add
jmp
xor
shr
jg
hlt
add
shl
mov
push
inc
std
pushf
jg
jb
add
add
xor
scas
add
push
(bad)
jb
sub
inc
scas
jg
jmp
shr
adc
mul
pop
mov
test
(bad)
imul
cmp
mov
mov
bound
imul
cmp
sbb
add
dec
mov
cmp
call
add
jl
add
inc
push
pop
test
push
mov
inc
or
loopne
dec
mov
push
dec
retf
mov
or
xor
jmp
hlt
push
or
sub
int3
push
adc
adc
retf
inc
adc
or
mov
or
adc
add
jmp
or
movs
jmp
daa
sub
mov
xchg
add
es
dec
cmp
sbb
add
pop
daa
or
lods
sbb
add
popf
in
rol
mov
xor
pop
jne
xchg
pop
adc
add
movs
mov
and
inc
push
xor
sti
jns
or
push
stos
inc
add
pop
(bad)
pop
mov
jmp
mov
cmp
outs
(bad)
shl
leave
mov
shr
sbb
pop
sbb
pop
es
sti
sbb
adc
inc
jne
aam
in
adc
add
inc
xor
retf
mov
sbb
push
mov
jbe
out
mov
pusha
shl
push
mov
add
add
enter
adc
shl
fiadd
xor
cmps
add
fisub
push
addr16
inc
lods
retf
and
inc
xchg
sbb
jecxz
adc
inc
and
mov
and
cmp
mov
std
sbb
sbb
mov
and
adc
(bad)
fmul
(bad)
jle
add
add
enter
inc
cmp
jno
(bad)
fstp
push
sbb
adc
sbb
cld
dec
dec
xchg
and
or
lahf
push
(bad)
ss
leave
add
and
addr16
or
or
aas
mov
add
add
inc
cmp
or
push
je
je
and
cmp
add
out
(bad)
ins
dec
xchg
add
punpcklwd
inc
scas
cmp
cmp
cmp
cmp
lock
inc
retf
jne
mov
cmp
jb
(bad)
dec
xchg
xchg
add
inc
mov
mov
dec
iret
ins
(bad)
push
add
aaa
mov
pop
(bad)
popf
mov
sub
jle
pop
adc
mov
add
add
dec
sub
mov
fsub
push
add
out
mov
xchg
mov
add
cli
or
out
mov
cwde
cmp
or
add
xchg
mov
dec
sbb
(bad)
loope
in
(bad)
mov
add
sbb
das
sbb
test
xchg
scas
inc
and
inc
push
sub
(bad)
pop
push
mov
ret
ret
loope
out
shr
pop
scas
and
pop
cld
lods
cld
xor
rcr
std
mov
add
imul
xstore-rng
cmps
push
mov
aas
pop
mov
daa
add
jmp
push
dec
sbb
nop
sbb
mov
jo
and
fist
push
aas
add
xchg
push
fdivr
jmp
out
or
jmp
or
jmp
add
and
mov
out
shr
pop
stc
sub
nop
out
or
cmp
pushf
mov
push
sub
inc
in
and
loop
mov
and
mov
add
add
or
jmp
and
je
jp
sbb
jae
adc
cmp
fsubr
push
test
and
adc
sub
bound
jmp
wbinvd
rol
psubw
add
das
inc
or
jl
jge
stos
(bad)
jmp
call
into
and
shl
push
std
sbb
mov
push
(bad)
ficom
push
add
add
je
out
idiv
loopne
mov
add
dec
mov
push
dec
mov
or
add
jg
push
je
call
mov
dec
mov
and
mov
add
aas
sub
xchg
imul
stos
add
adc
mov
fcomp
vmwrite
push
jno
push
test
add
add
jle
pop
sbb
jmp
loope
mov
out
mov
fsub
fadd
jae
add
cld
sbb
add
popa
sbb
and
mov
icebp
inc
jg
cmp
inc
adc
hlt
mov
jg
and
jnp
sub
or
cs
addr16
pop
cmp
out
sahf
push
xchg
add
add
sub
add
aad
add
les
scas
sub
push
out
jno
push
test
inc
out
pop
ins
jnp
ror
mov
mov
cmp
popf
ret
and
cld
imul
mov
imul
inc
add
imul
inc
xchg
and
mov
xchg
jle
mov
test
add
add
pop
add
out
mov
mov
adc
jmp
adc
movzx
jmp
xor
in
push
mov
lock
jmp
lds
ins
aas
std
ja
or
ins
aaa
mov
mov
call
and
sbb
mov
push
mov
pusha
mov
paddd
test
mov
add
sbb
ror
ds
inc
add
cmovb
adc
mov
(bad)
addr16
repnz
dec
repz
or
repz
inc
or
inc
adc
push
cmpps
adc
add
add
bound
add
jnp
aas
repnz
jmp
sbb
push
add
add
mov
aaa
xlat
je
aaa
pop
ins
fadd
sub
inc
inc
daa
sar
sub
fdivr
jbe
jge
and
add
stos
pop
add
inc
jnp
cmp
cmp
outs
adc
ins
inc
cmp
pop
adc
pop
push
sbb
mov
sbb
add
xchg
xor
add
jno
(bad)
cmp
scas
addr16
sbb
add
add
pop
loop
pusha
in
add
jns
mov
sub
(bad)
adc
out
stos
jno
jp
sbb
es
xchg
jge
adc
inc
add
add
mov
out
sbb
out
movs
or
xlat
les
push
cmp
movs
mov
mul
imul
inc
xchg
in
jns
or
push
inc
mov
mov
and
xor
sub
push
add
mov
sar
arpl
sbb
pop
pop
mov
neg
loop
add
add
ss
fadd
(bad)
arpl
dec
dec
mov
and
nop
or
in
cmp
pop
aaa
xor
pop
(bad)
jb
fwait
sub
loopne
cmp
jnp
inc
push
(bad)
cs
js
loop
ss
lock
sub
pusha
cmp
je
push
jne
push
aad
add
adc
inc
add
sub
push
dec
in
mov
out
push
push
(bad)
push
sub
cmp
ja
mov
cmp
fs
dec
js
je
mov
cmc
add
ins
aam
sbb
xchg
out
enter
(bad)
inc
gs
xor
jmp
cmp
js
mov
mov
nop
mov
inc
xor
stc
inc
or
push
cmp
loope
cmp
mov
mov
pop
or
mov
je
push
(bad)
mov
add
jmp
dec
sbb
rcl
add
push
and
inc
cmps
rol
jne
jmp
int
adc
or
xchg
aas
test
push
xchg
mov
dec
call
popf
aad
mov
test
adc
(bad)
mov
lods
pop
pop
(bad)
aas
sbb
test
xchg
imul
sbb
push
js
or
sbb
add
xchg
add
xor
jns
daa
inc
and
push
xor
xlat
jg
adc
jge
imul
mov
rol
call
xor
xchg
pop
fild
add
ins
dec
test
mov
jge
mov
cld
ins
dec
test
vunpcklps
out
xchg
and
movs
pmulhw
dec
dec
add
or
inc
bound
cs
out
jg
add
or
dec
dec
movs
xlat
mov
out
xchg
and
add
sub
add
and
outs
jno
or
add
aaa
inc
mov
add
aas
ds
inc
in
(bad)
jbe
pop
add
pop
sub
dec
aad
stc
add
aad
mov
ficom
sbb
add
out
inc
mov
push
xchg
in
popf
push
jmp
adc
and
dec
or
cs
leave
pop
daa
in
add
push
dec
je
push
leave
add
dec
inc
je
jp
and
aas
inc
cmp
or
idiv
clc
mov
shl
pop
setb
frndint
mov
(bad)
sar
mov
retf
mov
inc
stc
jmp
(bad)
(bad)
cmp
or
pop
cmp
sub
(bad)
fmul
cmc
or
stos
std
cmp
add
pop
std
and
dec
adc
cmps
cli
add
dec
cld
inc
(bad)
cmp
clc
xor
bnd
adc
dec
cmp
dec
add
xor
cld
stc
ret
inc
jmp
cpuid
xchg
loope
add
es
mov
push
leave
dec
(bad)
sub
add
and
add
gs
jbe
cli
jge
call
add
(bad)
movs
and
mov
clc
mov
xor
addr16
push
add
mov
add
push
es
add
(bad)
jmp
xor
mov
or
stos
hlt
loop
sbb
push
and
inc
out
add
into
inc
inc
mov
arpl
in
add
add
add
add
pop
movs
inc
fdivr
dec
enter
and
push
das
push
imul
jmp
pop
(bad)
out
es
imul
and
add
retf
jo
add
or
jmp
loope
call
rol
(bad)
std
push
xor
or
cmps
(bad)
cld
out
push
add
add
retf
push
inc
add
and
or
inc
or
scas
cs
test
mov
std
mov
mov
or
bound
push
inc
xchg
push
mov
cld
inc
add
or
mov
sti
xor
push
mov
jne
jp
ins
je
aas
mov
adc
push
add
jae
jae
push
xchg
add
adc
push
add
cmp
dec
add
inc
add
outs
ror
inc
mov
mulps
add
scas
dec
ret
stc
mov
(bad)
je
push
mov
jmp
jnp
clc
xor
icebp
cmp
sub
xlat
int3
and
jns
in
es
xchg
jmp
mov
jmp
jge
shl
mov
push
pop
ret
mov
push
jge
xor
lock
shl
jae
adc
and
sub
jae
inc
je
jae
mov
add
out
add
jg
sub
adc
jmp
pop
repnz
adc
cmps
ret
xlat
popf
xor
arpl
or
xor
out
mov
jmp
sub
add
inc
sti
js
daa
cmps
jp
daa
mov
stos
pop
out
jns
fistp
idiv
into
jns
sub
push
pop
std
ins
inc
and
leave
out
dec
std
jmp
std
je
shl
lahf
xchg
js
inc
movs
ror
inc
sub
or
and
add
add
jge
daa
dec
push
inc
sahf
mov
adc
dec
repnz
and
fisttp
in
sbb
scas
xchg
sub
pusha
outs
hlt
and
or
fucomip
mov
in
fisub
cld
push
jg
sbb
and
int3
inc
and
std
std
push
gs
mov
mov
hlt
xor
call
push
jge
adc
stc
(bad)
fs
mov
test
xor
push
in
and
add
jmp
push
gs
adc
push
add
pop
jle
xor
idiv
(bad)
push
test
sbb
std
mov
push
add
add
and
or
push
(bad)
fist
add
inc
ins
pop
mov
ret
jle
ror
(bad)
adc
dec
leave
add
push
add
ret
jmp
das
jae
sbb
enter
cmp
clc
retf
cmova
xor
jl
add
add
push
(bad)
jmp
mov
mov
out
mov
add
(bad)
mov
arpl
add
in
adc
stc
out
test
inc
fild
out
xor
and
ror
notrack
xor
es
add
out
mov
scas
lahf
cmp
sti
es
xor
add
add
arpl
jno
jmp
mov
and
test
add
add
inc
cmps
inc
enter
mov
repnz
daa
retf
sbb
sbb
add
inc
(bad)
dec
dec
xor
mov
out
jb
jge
pusha
(bad)
adc
in
jmp
dec
push
xor
push
jb
stc
dec
push
cvttps2pi
fs
stc
push
inc
loop
jb
sbb
btr
add
add
sar
stc
push
or
push
out
lahf
xchg
ret
sti
loope
sti
mov
add
sti
ins
jno
and
or
and
outs
and
icebp
jg
rcr
jl
dec
pop
mov
mov
xor
pop
icebp
rol
xor
dec
mov
add
pop
dec
cld
std
inc
movs
ja
jmp
sbb
cmp
add
add
cli
std
jb
and
pusha
outs
and
xchg
dec
int
xchg
and
or
jl
mov
je
div
dec
jo
rcl
std
(bad)
in
rol
sahf
adc
add
inc
cmp
mov
jmp
inc
adc
(bad)
cli
pop
(bad)
dec
inc
cmp
add
call
adc
(bad)
add
inc
ss
adc
add
add
adc
cmp
dec
jle
adc
push
test
daa
(bad)
dec
add
add
adc
bswap
lea
add
enter
mov
sbb
sub
mov
data16
jne
add
inc
sti
test
(bad)
jns
iret
mov
or
and
inc
lahf
cs
out
mov
lods
cmp
mov
loope
sti
sub
div
sub
mov
lods
aad
call
pop
mov
fcom
push
(bad)
sti
in
or
cmp
sub
test
pop
add
or
push
fwait
test
pop
retf
cmps
cs
cmp
jo
shl
jecxz
je
(bad)
(bad)
das
and
repz
inc
out
sbb
jae
cmp
inc
jne
shr
sbb
cs
in
or
retf
and
movs
std
jmp
scas
add
scas
push
add
in
or
sub
xchg
addr16
pushf
das
dec
sbb
pop
inc
mov
add
jge
xlat
hlt
add
(bad)
sub
add
add
mul
lock
jo
or
add
inc
mov
and
mov
sub
arpl
and
loope
fs
and
jmp
sub
dec
mov
js
add
aas
jne
sbb
hlt
inc
pusha
(bad)
xchg
rol
sub
jbe
and
inc
mov
fs
inc
add
retf
push
pop
sbb
inc
mov
push
inc
mov
xor
shl
lock
cmp
popf
dec
jmp
cmp
push
pop
add
or
mov
test
cmp
xor
test
(bad)
(bad)
fadd
mov
sub
dec
add
test
in
inc
cli
push
or
add
cli
cmp
pushf
jb
mov
mov
push
mov
inc
aaa
dec
jecxz
and
fadd
adc
ret
jecxz
push
mov
les
or
ror
mov
(bad)
jmp
pop
mov
cmps
or
cmp
jnp
pop
sbb
aaa
(bad)
popf
cmps
fnstsw
scas
pop
loopne
jae
mov
jl
cmp
dec
(bad)
pop
in
(bad)
push
or
add
and
sub
rcr
mov
es
pop
stos
dec
push
call
lods
pop
cmp
jmp
add
fld
fadd
or
sbb
or
mov
sub
adc
inc
sti
mov
stos
and
cmp
(bad)
mov
and
cli
adc
inc
pusha
xlat
or
sub
out
jno
sub
jne
sub
push
add
das
mov
xor
std
mov
mov
xor
xor
out
pop
sbb
adc
cmp
(bad)
cmps
cs
jb
inc
test
inc
icebp
aam
lods
sbb
add
fisttp
call
adc
ja
adc
std
push
test
or
jmp
aad
call
fidiv
push
mov
or
push
inc
add
and
or
shl
dec
call
push
or
pop
mov
xor
addr16
or
jmp
add
outs
clc
jmp
call
jmp
push
dec
test
repnz
inc
xor
mov
cli
inc
and
movzx
dec
or
loope
repz
add
inc
or
aam
mov
mov
xchg
inc
mov
add
jns
and
inc
add
mov
das
test
sbb
call
xor
mov
scas
mov
les
add
sub
or
and
jmp
(bad)
add
scas
fmul
inc
popf
lahf
movs
cmp
or
add
xor
add
nop
adc
inc
out
push
add
stos
pushf
add
out
or
lods
daa
cmp
add
sbb
mov
fcom
mov
cld
dec
call
add
imul
daa
adc
sub
popa
inc
repnz
ins
xchg
xor
mov
sub
out
popf
xchg
ret
call
mov
inc
pop
sub
out
imul
out
xchg
out
pop
mov
movs
mov
xor
or
fiadd
movs
jmp
pop
and
mov
(bad)
dec
xor
in
push
popa
inc
fidivr
icebp
cmps
xor
xchg
cli
bound
inc
mov
add
sub
clc
pop
ja
and
cmps
mov
inc
and
inc
add
jo
or
and
pop
fidivr
sar
and
pop
sbb
jg
test
std
jmp
push
out
std
lods
xor
inc
aad
jmp
or
inc
add
and
cmp
add
hlt
pop
or
scas
and
jmp
fnstcw
jg
add
std
add
or
xor
call
aaa
inc
push
mov
jmp
inc
sti
adc
dec
inc
add
das
inc
add
and
push
int3
pop
repnz
inc
mov
jl
test
or
xchg
cmp
mov
test
ret
inc
repz
jmp
nop
cld
adc
iret
inc
add
cmp
add
repnz
ret
es
push
xchg
mov
scas
or
fld
test
outs
xor
jno
adc
ror
add
es
push
inc
lahf
enter
fidivr
daa
fld
jmp
out
push
inc
in
add
add
loop
or
or
jg
loope
test
add
add
out
das
(bad)
stc
lahf
adc
fdivr
inc
add
es
push
inc
scas
das
sbb
in
jge
daa
fld
jmp
out
push
inc
std
cmp
(bad)
test
mov
clc
les
in
add
jmp
dec
fadd
inc
sbb
mov
fistp
inc
out
cmp
cs
lahf
sub
adc
es
idiv
mov
clc
les
sar
xor
jmp
(bad)
dec
add
inc
sbb
mov
out
mov
out
mov
sub
add
jmp
mov
scas
mov
fucomip
rcl
jmp
mov
jmp
add
add
cmp
mov
adc
je
or
jmp
pop
xor
or
or
jmp
aaa
lods
xor
add
shr
imul
and
ins
mul
mov
pop
(bad)
xor
es
inc
add
pop
or
push
inc
adc
sti
adc
add
add
ins
dec
clc
test
test
sbb
(bad)
cld
mov
add
inc
mov
les
add
add
lock
jp
cmp
sbb
cwde
lds
aas
mov
push
pop
jae
test
mov
imul
cdq
or
dec
add
push
sbb
cmp
js
mov
es
(bad)
sub
cmp
sub
mov
out
or
clc
inc
mov
sbb
pop
jmp
fcmovnb
lods
pop
mov
cmp
mov
ret
jnp
popf
mov
sub
dec
cmp
xchg
int
fidivr
push
jbe
or
add
stos
sbb
sti
and
out
sub
jp
dec
popf
jl
inc
dec
mov
dec
push
mov
push
out
mov
icebp
outs
std
(bad)
jae
out
sbb
fisubr
stos
(bad)
fld
sub
xor
rcr
enter
iret
fidivr
bound
inc
and
scas
mov
ss
adc
add
hlt
int
jmp
inc
ret
popa
cli
aad
push
stc
inc
fadd
movs
jmp
inc
add
inc
out
and
mov
sub
push
loopne
xor
in
sub
movs
daa
(bad)
sub
xor
cli
loopne
ror
out
jecxz
test
add
std
push
and
out
sub
sub
cmps
push
out
aas
(bad)
ss
adc
cmp
dec
inc
je
movs
jmp
jmp
pop
out
pop
and
or
or
xor
or
push
cmps
jmp
cmp
cli
add
out
xlat
stc
sbb
xor
push
test
pop
(bad)
dec
test
iret
inc
or
(bad)
cld
(bad)
cmp
imul
jns
(bad)
cmp
int3
push
adc
call
in
sbb
adc
test
xchg
or
jg
test
(bad)
aad
jl
inc
jge
fcomp
mov
aad
bswap
mov
(bad)
clc
aam
ins
dec
mov
push
mov
arpl
es
add
and
sbb
add
add
test
cmp
cmps
(bad)
ret
daa
(bad)
loope
rcl
lods
cli
mov
sub
or
dec
sub
mov
inc
lock
and
std
push
stos
mul
(bad)
cdq
sub
mov
sbb
clc
out
shl
adc
imul
in
pop
sub
cwde
out
jle
adc
(bad)
fiadd
inc
xor
movs
fisttp
inc
adc
sbb
jo
xor
add
xchg
sub
cmp
lock
jno
iret
xchg
out
fild
add
enter
loop
sub
adc
jno
mov
in
out
pop
push
mov
outs
out
test
call
push
xor
jle
loopne
sub
add
add
loop
adc
xchg
sti
cmps
jnp
gs
push
loop
mov
mov
inc
sub
push
popf
xchg
and
add
xchg
inc
mov
xor
loop
stos
dec
mov
mov
jl
or
push
mov
loope
mov
fld
icebp
rol
push
daa
inc
jmp
call
add
loop
inc
clc
imul
add
add
mov
sahf
ds
mov
and
ss
icebp
jp
mov
inc
(bad)
mov
xor
add
mov
or
inc
add
and
std
jmp
(bad)
jne
(bad)
vmwrite
std
jne
inc
aad
and
je
lock
add
inc
add
add
jno
xor
push
fadd
cmp
inc
(bad)
or
mov
mov
inc
or
loopne
ffree
xor
je
les
fld
sbb
push
mov
push
aas
inc
clc
jmp
mov
add
mov
es
mov
scas
or
cdq
stc
out
dec
and
add
in
add
push
mov
popf
mov
es
bound
(bad)
push
cmc
retf
(bad)
pop
frstor
je
div
(bad)
mov
xchg
idiv
test
mov
jmp
sti
push
movs
scas
and
add
add
mov
cmps
sbb
add
icebp
inc
call
jecxz
add
add
aas
pusha
shr
xchg
es
xchg
neg
inc
fisubr
sub
ret
adc
xchg
sti
and
jmp
or
es
retf
lock
sti
and
pop
push
out
scas
sub
test
retf
cmps
scas
sub
sub
sbb
out
movs
popf
push
add
inc
out
cs
sub
sahf
lds
es
bound
mov
loope
es
sub
xor
or
aas
arpl
jae
push
cwde
nop
adc
add
jo
jae
mov
fnsave
or
enter
inc
or
and
fsubp
jae
fdivrp
bound
pop
and
jnp
std
jl
dec
mov
cli
push
inc
jmp
pop
ja
pop
sbb
leave
into
mov
cmp
in
sahf
add
sub
inc
mov
nop
pusha
jmp
or
(bad)
aas
clc
(bad)
jne
fdiv
movups
and
jne
inc
lds
lods
or
or
sbb
jne
cmp
sar
or
inc
mov
adc
mov
push
mov
add
pop
inc
and
lock
jne
xlat
mov
enter
mov
and
jne
inc
aad
call
and
mov
(bad)
inc
mov
test
ret
out
sbb
jmp
or
push
push
daa
sub
and
sbb
mov
add
mov
add
add
sbb
and
dec
(bad)
fwait
aad
hlt
call
loop
hlt
cs
add
jbe
(bad)
sti
loope
sub
cs
add
leave
jo
push
js
and
push
(bad)
(bad)
sbb
cld
add
and
dec
(bad)
sbb
adc
arpl
xchg
mov
inc
out
or
jle
dec
pop
call
out
pop
cwde
and
or
push
jmp
js
seta
inc
ds
cmp
mov
neg
pushf
setge
pop
cwde
sub
xchg
fisub
rcl
loop
imul
into
fldz
and
jb
es
clc
lods
xchg
pop
lahf
mov
lea
adc
xchg
int3
add
add
add
enter
inc
xchg
into
mov
inc
add
loop
mov
mov
bound
push
pop
scas
popa
cmp
jmp
mov
jg
test
cdq
es
or
xchg
nop
add
cmp
sbb
outs
std
pushf
cmc
fidiv
inc
push
or
cmp
std
(bad)
test
je
clc
aaa
cld
out
push
dec
add
inc
add
loope
addr16
jmp
mov
xchg
or
push
je
(bad)
push
or
or
mov
xor
or
mov
add
fcmovnb
push
or
mov
cmp
shl
(bad)
je
enter
retf
cmovne
shl
add
mov
add
add
xor
mulps
jae
inc
std
jne
aas
aad
shr
je
sar
jmp
push
add
out
cdq
fstp
cld
cmp
cs
lods
dec
adc
es
add
inc
fild
jp
jmp
mov
popf
pop
or
loopne
mov
add
xor
es
mov
xchg
pop
and
sbb
call
push
sub
add
sub
add
outs
mov
popf
(bad)
movs
rol
or
and
xchg
inc
je
inc
push
aad
shl
sub
daa
or
in
or
sub
lods
mov
pusha
enter
xor
mov
add
es
(bad)
lds
ret
cmps
add
jecxz
sbb
push
loop
mov
int
aas
dec
cmp
in
push
sbb
sub
lods
aas
stos
add
mov
inc
out
(bad)
in
and
je
xchg
sub
xor
enter
out
add
pushf
jg
arpl
arpl
fisub
add
add
aas
pusha
fldenv
std
cmp
inc
mov
sub
add
shl
push
cmps
cdq
cmp
aas
adc
mov
in
and
cmp
xchg
sar
sbb
xchg
jmp
push
(bad)
std
out
retf
add
and
pop
push
cmp
mov
mov
jmp
gs
add
nop
dec
std
add
push
adc
iret
int3
inc
and
outs
inc
add
outs
dec
add
inc
mov
add
test
cmp
mov
mov
retf
pop
lea
xor
call
xchg
out
test
adc
add
pop
pop
(bad)
inc
add
sti
(bad)
fdivr
lds
adc
add
mov
add
add
int3
call
mov
adc
xchg
cmovno
lea
cs
jb
sbb
jp
sar
sub
call
popf
lahf
in
pop
xlat
ror
in
cmp
sbb
rcr
std
lea
cmp
add
cli
push
ret
movs
lea
rcl
js
in
mov
add
ds
scas
repz
xlat
adc
jp
sbb
mov
jmp
imul
je
test
(bad)
or
mov
xchg
sbb
loopne
sbb
leave
daa
nop
xchg
fst
add
inc
pusha
mov
cld
sti
fs
dec
mov
fmul
cwde
shl
add
add
shl
lods
mov
fsubp
retf
sbb
jl
(bad)
leave
in
enter
(bad)
test
ss
pop
in
mov
or
lfs
sbb
adc
and
jb
inc
test
inc
rol
mov
and
std
std
xchg
in
js
pushf
cmc
shl
cmp
or
xchg
std
(bad)
push
xchg
or
add
outs
hlt
and
jno
std
int3
jecxz
movsx
and
or
mov
mov
push
pop
icebp
cs
psrld
test
or
test
std
jb
fidiv
sub
inc
mov
jl
or
push
pop
call
mov
mov
test
add
add
add
sbb
test
(bad)
call
xchg
adc
mov
rcr
cmp
je
inc
jg
(bad)
cmp
(bad)
jne
sub
or
pop
fdivr
rcl
je
push
rol
pop
pop
shl
lds
out
pop
ins
cmp
push
mov
rol
lods
enter
pop
fisttp
dec
mov
jno
cld
sub
xchg
adc
mov
mov
idiv
call
xor
fwait
mov
(bad)
inc
push
mov
pop
(bad)
stc
in
sti
and
in
cmp
add
and
dec
cmc
mov
loope
pop
push
jmp
xor
sub
push
test
or
dec
dec
cmp
jb
add
jecxz
test
add
repnz
push
mov
cmc
mov
jecxz
push
sub
inc
pop
adc
mov
inc
rcr
retf
jge
call
mov
and
shl
inc
test
adc
fcmovne
mov
rol
xor
iret
push
(bad)
out
sub
mov
test
sub
(bad)
fsub
sbb
into
push
cwde
mov
push
sbb
push
add
pop
ror
lods
sti
cmp
nop
sbb
mov
cmps
(bad)
xchg
fst
es
add
and
and
cmp
mov
scas
sbb
dec
xor
pop
aad
ret
ds
xor
or
movs
sub
or
into
std
push
out
std
pushf
add
push
mov
mov
cmp
jb
jns
jl
int
fst
pop
or
xor
fisubr
(bad)
je
dec
js
jmp
push
inc
add
rcl
and
cmp
std
loop
pop
or
mov
xchg
add
aam
movups
jbe
icebp
movnti
adc
mov
je
test
(bad)
jne
mov
or
jne
sbb
xlat
dec
aaa
test
xchg
jae
clc
into
inc
add
sub
jmp
mov
adc
pop
ret
loop
enter
mov
cmp
mov
add
inc
ror
ins
pop
cmp
call
(bad)
jne
call
mov
stos
(bad)
ror
adc
and
mov
ds
inc
inc
jae
les
(bad)
add
bound
mov
les
xchg
add
lods
cmps
sbb
imul
lea
cmp
lods
movs
movs
cmp
in
and
inc
adc
dec
xlat
push
jne
bound
push
cmp
mov
push
iret
jle
mov
push
stos
mov
inc
add
add
neg
(bad)
cmp
inc
repnz
pop
adc
movs
retf
call
adc
sub
stos
cli
mov
cmp
jmp
cmp
mov
je
and
out
stc
ds
rol
and
inc
es
push
test
cmp
add
add
retf
not
jns
movs
mov
test
rcr
retf
out
sti
push
fiadd
cmps
psllw
stos
scas
add
and
retf
mov
ins
loop
xor
clc
leave
and
dec
mov
cmp
inc
add
cdq
push
and
retf
std
jmp
xor
jmp
mov
and
and
retf
and
(bad)
and
adc
xor
add
scas
retf
sbb
mov
and
ret
jb
push
imul
popf
inc
jmp
add
cmp
add
dec
jnp
add
jle
or
add
(bad)
jmp
into
or
inc
xor
adc
mov
push
add
add
xor
or
jne
inc
retf
mov
(bad)
cli
leave
(bad)
jne
cs
inc
xor
inc
xor
add
cwde
enter
nop
add
(bad)
adc
add
and
sbb
(bad)
push
fild
inc
lods
inc
(bad)
mov
inc
call
sar
inc
inc
add
add
sar
mov
sar
rol
leave
mov
sar
mov
sar
jl
dec
call
add
aaa
test
dec
jae
call
sar
test
(bad)
js
sar
xor
jmp
inc
sar
cs
xor
sar
inc
sar
inc
rol
mov
xor
les
pmullw
xor
les
xchg
les
(bad)
les
jg
push
inc
les
pushf
les
pop
xchg
les
sbb
les
daa
cmp
sbb
sub
les
mov
stc
in
push
(bad)
icebp
mov
inc
(bad)
les
add
add
ret
push
(bad)
rol
(bad)
leave
cmp
ret
sar
mov
(bad)
shl
in
inc
fisub
sbb
gs
iret
mov
(bad)
push
leave
gs
jne
push
std
call
push
ds
cmc
popa
jl
in
pop
ss
xchg
xor
adc
jecxz
sub
sbb
cmp
pop
or
and
or
add
jmp
and
adc
sbb
adc
sbb
pop
mov
inc
mov
add
inc
fptan
adc
(bad)
adc
xlat
out
adc
cmp
cld
cmp
xchg
jnp
cmp
dec
add
inc
inc
inc
mov
pop
mov
(bad)
std
xchg
scas
(bad)
std
shr
(bad)
std
out
(bad)
std
pop
test
std
pop
enter
test
std
fdivr
(bad)
std
shr
add
pop
jg
(bad)
lahf
outs
add
gs
(bad)
xchg
inc
add
leave
xor
(bad)
sti
xor
(bad)
sub
inc
add
cmp
mov
mov
(bad)
(bad)
fidivr
(bad)
(bad)
faddp
sar
leave
sar
retf
sub
inc
sar
out
push
ret
add
add
fadd
inc
ret
fadd
jmp
fadd
(bad)
jmp
(bad)
fcmovu
ret
mov
sar
fcmovb
jmp
ret
fcmovb
dec
fcmovnb
call
fcmovnb
push
sbb
add
pop
mov
out
jmp
inc
mov
shl
ins
bound
call
mov
add
add
mov
repz
fsub
jno
fmulp
lahf
xor
loopne
inc
out
outs
xor
call
shl
xor
outs
(bad)
cwde
xor
cmp
fidivr
adc
es
scas
jge
jae
or
xor
ret
or
les
ror
add
adc
or
cmps
lds
inc
jo
dec
ret
or
add
add
ret
in
xchg
test
fs
xor
push
stos
jne
es
(bad)
(bad)
out
sub
push
push
enter
ret
in
or
mov
xchg
mov
add
sbb
inc
icebp
fmul
out
mov
inc
xchg
push
mov
inc
int3
dec
xchg
sub
dec
(bad)
add
inc
xchg
std
push
or
dec
in
cld
icebp
enter
inc
sbb
lea
xchg
mov
mov
inc
push
mov
in
xchg
mov
shr
cdq
enter
mov
inc
test
rcl
loop
or
(bad)
push
inc
or
pop
sbb
into
test
dec
jbe
ror
inc
inc
clc
mov
mov
add
dec
inc
add
mov
xchg
push
call
and
lods
mov
push
outs
jns
mov
jge
jmp
mov
add
cmps
lods
lea
out
out
and
and
xchg
scas
jp
sahf
ss
stos
add
lds
pop
adc
(bad)
mov
add
inc
stos
lea
stos
add
es
cmp
stos
sar
vmulsd
je
push
sbb
mov
movs
idiv
cmp
aas
xor
cmp
stos
add
mov
inc
pusha
sti
sahf
(bad)
mov
jbe
ror
(bad)
pushf
or
rcl
dec
(bad)
sbb
sub
fs
rol
push
sbb
retf
fs
rol
sbb
retf
je
mov
(bad)
jp
pop
test
int3
movs
sti
lods
ds
xor
sub
mov
and
mov
repnz
dec
and
fild
dec
jl
mov
iret
adc
pusha
or
popa
add
bound
fwait
sbb
cmp
lods
loopne
and
inc
add
and
dec
xchg
std
es
xchg
mov
loopne
push
xchg
mov
push
pop
std
push
sub
xchg
mov
cmp
sub
mov
push
jp
(bad)
enter
retf
retf
ficom
xchg
clc
sub
dec
mov
add
iret
add
movs
lods
add
fs
adc
cmp
sbb
mov
jl
aad
loop
repz
fild
clc
or
and
inc
add
push
pop
add
dec
xor
enter
test
(bad)
(bad)
mov
test
not
mov
je
mov
inc
xchg
cmp
shl
loope
inc
add
or
add
addr16
(bad)
dec
dec
lock
dec
mov
mov
jns
ds
daa
jae
xor
cmp
mov
inc
call
or
pop
repnz
test
es
fwait
mov
inc
lods
xchg
jne
cmp
(bad)
pop
dec
ja
mov
dec
aas
rcl
xchg
out
inc
add
add
xchg
add
lods
loopne
test
shr
cmp
sub
div
lods
ja
sub
lods
(bad)
imul
mov
je
inc
jno
es
scas
inc
mov
rol
stos
dec
mov
xchg
and
xchg
jbe
jmp
mov
push
add
dec
xchg
jmp
jns
sldt
add
sbb
sub
es
test
scas
sbb
inc
out
xor
jmp
jg
inc
out
fs
xchg
pop
pop
pop
jecxz
mov
and
xor
outs
add
inc
adc
dec
ins
xchg
es
out
(bad)
rol
loop
std
scas
sub
sub
out
shl
and
mov
xchg
sub
fild
xlat
and
enter
lods
sub
add
dec
and
cmp
fs
std
mov
dec
jae
test
call
mov
jno
jmp
push
cmc
pop
pop
or
mov
jp
ss
and
add
(bad)
and
je
test
inc
add
inc
sbb
push
inc
xor
add
enter
ret
clc
xor
adc
jne
jns
lock
cmp
cld
inc
add
jno
cmp
mov
popf
dec
inc
ret
xchg
jbe
es
ret
cmovl
std
(bad)
mov
jns
lock
pusha
aaa
dec
add
sbb
or
out
jmp
jns
(bad)
sbb
dec
add
add
dec
aaa
(bad)
fnsave
cmp
and
cmp
inc
jbe
jge
lods
push
nop
xor
push
push
dec
pop
and
inc
(bad)
std
xlat
inc
push
push
shl
mov
and
sub
sub
call
xor
loopne
je
push
dec
call
xchg
cld
shr
test
add
add
sbb
mov
cmps
std
std
test
test
add
mov
std
mov
aas
fwait
out
xchg
add
popf
add
xor
in
lock
out
scas
add
jae
inc
call
dec
call
mov
lods
aad
es
fs
sbb
add
es
push
cmp
aaa
outs
ja
int3
int3
fwait
(bad)
stc
jb
mov
mov
or
sar
adc
push
inc
mov
push
add
xor
(bad)
jmp
jns
je
sar
sbb
jnp
stc
sbb
push
sbb
les
daa
ss
movs
cld
inc
sahf
cmp
mov
jmp
aas
cmp
xor
fwait
cmp
or
mov
cld
dec
jmp
jne
cli
fadd
cmp
dec
sbb
xor
mov
sbb
mov
ret
inc
(bad)
sub
je
aam
je
hlt
and
mov
add
add
or
add
mov
mov
push
test
mov
clc
sub
dec
test
test
add
inc
jg
test
jns
adc
dec
lahf
cs
and
mov
pop
mov
push
test
xor
pop
mov
rcl
xchg
rol
scas
mov
dec
icebp
add
adc
xor
mov
adc
test
ds
std
cdq
(bad)
push
(bad)
cmp
sbb
xor
or
jmp
cdq
sub
and
out
popf
push
pushf
sub
sbb
dec
push
xor
mov
cmp
push
xchg
and
cmp
pop
pop
pop
out
jmp
lock
ja
push
mov
rcl
inc
es
mov
xor
pop
jmp
std
adc
fdivr
clc
sub
es
sbb
fwait
sub
call
push
cmp
push
ja
mov
xchg
aam
adc
das
jmp
xor
jnp
fisttp
lahf
dec
pop
dec
jb
cmps
test
push
lock
add
push
scas
mov
out
repz
lock
inc
out
sbb
out
push
leave
(bad)
cld
fsubr
jmp
inc
pop
xor
(bad)
push
cld
shl
mov
add
sub
cli
add
inc
add
push
mov
gs
std
jmp
pop
mov
jmp
mov
cld
cdq
lods
xor
jo
mov
shl
sub
inc
add
scas
cmp
and
inc
test
sub
popf
das
(bad)
call
sub
inc
push
xchg
mov
std
adc
mov
jns
test
push
aaa
cld
(bad)
cmp
std
fsub
mov
mov
add
ins
loop
or
and
cld
jb
mov
imul
mov
std
(bad)
cmp
cld
add
call
data16
sldt
add
cli
rol
(bad)
mov
sti
inc
cmp
sti
adc
retf
jbe
xor
jno
push
xor
jbe
and
push
ret
push
cmps
sbb
inc
mov
dec
inc
rol
inc
add
and
jl
inc
ret
es
sbb
iret
in
push
int
imul
inc
mov
mov
add
add
int3
cli
jae
imul
out
inc
clc
sbb
push
or
cmp
in
int3
dec
xor
jns
mov
xchg
jmp
adc
repz
or
pop
mov
test
add
popf
add
daa
pushf
add
scas
push
cli
xor
dec
mov
sub
jne
inc
clc
scas
pop
or
clc
inc
lods
clc
and
aam
pushf
pop
in
add
fidiv
ror
fild
sahf
pop
call
or
jmp
mov
add
mov
ror
aaa
sub
clc
scas
mov
jno
push
mov
pop
popa
xchg
add
mov
mov
and
xchg
lea
add
add
dec
jb
add
cmp
pop
adc
retf
setne
retf
add
push
adc
loopne
add
ret
in
in
sub
jmp
and
lods
push
add
push
mov
dec
inc
(bad)
lods
scas
inc
mov
inc
jbe
stos
push
or
movs
mov
(bad)
call
sub
dec
loope
add
add
mov
add
adc
inc
inc
mov
inc
inc
or
loop
sub
xchg
push
adc
push
std
stc
sub
in
hlt
jge
xchg
sysexit
inc
add
cmp
xchg
inc
or
mov
add
jmp
clc
cmp
outs
inc
mov
mov
xor
or
lea
test
adc
or
sbb
or
mov
dec
mov
mov
add
or
xadd
dec
add
fiadd
cmp
clc
add
arpl
in
cmp
popf
sub
add
add
data16
adc
jge
cmp
xchg
cmp
add
mov
sar
aad
or
(bad)
inc
add
arpl
cmps
mov
add
push
shl
and
je
addr16
push
cli
add
inc
push
jg
aaa
xor
adc
add
out
jmp
ret
jo
gs
ret
out
in
or
daa
loop
test
add
pop
inc
sar
outs
aas
mov
mov
hlt
imul
(bad)
and
add
leave
adc
call
mov
ds
or
out
scas
mov
std
mov
aaa
fild
or
rep
cli
push
aad
mov
in
jae
jnp
aaa
sbb
bound
std
aam
push
inc
jmp
xor
mov
adc
inc
add
test
lods
clc
cld
popa
push
inc
(bad)
call
and
cmp
retf
add
add
ds
jp
pop
icebp
jmp
pop
jae
inc
retf
lods
or
add
inc
das
push
mov
or
xor
add
dec
mov
inc
inc
sub
(bad)
push
(bad)
sti
arpl
cmp
push
inc
iret
ret
or
inc
add
cmp
add
add
or
add
add
dec
dec
push
jg
jg
mov
add
adc
sub
xor
dec
mov
sub
dec
adc
mov
sti
ret
hlt
scas
sub
xor
cmp
ffree
mov
(bad)
call
cmp
ss
(bad)
lods
jmp
sbb
ss
std
mov
mov
pop
jle
movs
add
je
in
es
jmp
cmp
int3
and
(bad)
call
lea
(bad)
sti
icebp
jle
jle
in
std
sbb
std
mul
mov
icebp
dec
cmp
sub
(bad)
ficomp
stos
mov
inc
or
sti
sar
das
pop
scas
mov
push
popa
das
repz
daa
jne
jg
inc
and
adc
add
and
pop
repz
xor
add
mov
loop
push
jmp
inc
test
mov
lahf
clc
retf
jnp
add
jg
mov
std
sbb
add
test
jmp
push
out
fstp
push
xor
out
fnstcw
xor
ret
lods
call
push
push
dec
std
cmp
mov
mov
add
shr
mov
std
jbe
test
stos
dec
jns
pop
mov
test
pushf
dec
cmp
push
and
arpl
sbb
je
in
xor
mov
xchg
call
and
mov
push
sub
call
and
sti
jo
daa
retf
(bad)
(bad)
cmp
(bad)
js
or
jg
mov
popf
sti
inc
sbb
cmp
mov
sub
ins
dec
jne
nop
in
dec
mov
clc
adc
or
or
or
out
(bad)
ja
sti
inc
add
add
shl
je
sub
mov
mov
push
addr16
mov
test
mov
sbb
add
in
sub
jne
in
les
fisttp
and
pop
mov
sbb
or
popf
add
out
jp
push
mov
jbe
sbb
std
call
add
(bad)
hlt
add
add
hlt
les
add
xor
clc
scas
dec
lock
inc
cmc
into
xchg
ror
out
push
mov
in
push
lds
fwait
add
es
clc
test
out
std
cmp
out
push
xchg
das
rcl
fucomi
cmc
cmp
inc
imul
pusha
(bad)
out
sub
aaa
pop
jge
test
ja
aaa
jae
loopne
test
fnstcw
adc
(bad)
ret
xor
js
cmp
aas
and
call
fcomp
xchg
mov
daa
jecxz
jne
aaa
add
jb
(bad)
sbb
in
push
pusha
imul
cmp
in
xor
in
adc
inc
cmp
bound
add
call
adc
jb
ret
(bad)
div
pop
xor
enter
pop
rol
xor
dec
push
fsub
add
or
cmp
xlat
gs
xor
je
push
ss
shl
out
fdivr
push
andnps
cmp
in
mov
aam
gs
sub
cmp
add
xchg
in
mov
cs
mov
cdq
add
xchg
jbe
xor
sbb
rol
sti
jmp
ret
clc
pop
jmp
sbb
imul
les
sbb
pop
xor
(bad)
cli
cmps
cld
adc
les
cld
add
aaa
(bad)
cmp
pop
add
and
mov
mov
(bad)
sti
aaa
jg
jo
pop
inc
lar
cs
sti
call
jne
stc
fisttp
xor
add
outs
outs
add
lock
clc
and
add
mov
out
jle
movs
mov
shl
add
inc
jns
shr
push
push
inc
cwde
sbb
sar
adc
add
add
ins
add
out
or
cmp
adc
arpl
add
push
std
sbb
cmovo
cs
and
mov
test
cli
mov
std
jae
inc
es
xor
jae
fld
jmp
xchg
jle
enter
mov
jb
repnz
lods
push
jg
pusha
dec
sar
jle
and
popf
daa
loop
dec
hlt
ss
es
pop
cmps
fwait
call
ja
sub
outs
and
sub
sub
daa
sti
pop
idiv
ret
mov
cmps
bound
and
dec
lds
lahf
push
fs
sub
dec
iret
hlt
push
xor
std
ds
leave
fwait
ror
add
ja
clc
call
(bad)
lahf
pop
scas
mov
dec
add
mov
pop
icebp
test
mov
and
sbb
fwait
jp
add
and
dec
addr16
mov
push
push
int
add
sbb
sti
call
inc
xchg
je
push
cmp
mov
lods
sti
push
push
pop
add
cmp
cwde
mov
push
shl
cmc
imul
adc
(bad)
(bad)
push
je
inc
dec
and
jne
cld
dec
daa
aas
inc
sti
adc
int3
(bad)
pop
hlt
faddp
or
(bad)
repz
das
neg
push
scas
lea
cmp
test
test
es
cld
inc
movs
iret
add
mov
mov
pop
(bad)
jnp
fdivr
push
xor
jae
in
fldcw
shl
cmp
lods
push
(bad)
add
out
inc
add
push
jmp
call
or
out
dec
std
cmp
or
push
mov
pop
pop
bsf
push
inc
es
xor
in
pop
and
and
sub
xor
add
retf
or
jp
push
out
pop
aad
es
cmps
out
xchg
ret
jne
push
add
push
dec
repz
leave
mov
dec
call
dec
scas
xchg
mov
ins
push
sub
dec
and
(bad)
dec
jle
test
imul
test
xor
and
aas
jg
push
fbstp
add
scas
es
out
sub
push
ja
push
neg
and
lea
and
jl
and
jl
and
int
mov
ins
pushw
pop
ret
and
or
and
lahf
je
push
retf
inc
add
and
cmp
das
add
mov
ss
push
jne
(bad)
jl
les
pop
(bad)
jg
retf
jl
and
lock
inc
call
ins
sbb
icebp
adc
mov
jp
je
xor
inc
inc
add
jge
std
(bad)
fadd
or
add
add
cmp
call
jb
and
ja
mov
pop
jno
xchg
add
test
mov
push
push
loopne
bound
pop
sbb
push
push
les
or
xchg
xchg
mov
push
inc
jle
mov
enter
stos
loop
and
inc
lock
(bad)
jmp
ja
mov
add
add
mov
mov
(bad)
scas
adc
pusha
mov
fwait
cmp
dec
scas
push
mov
(bad)
lods
out
dec
mov
test
mov
lods
add
mov
lods
add
mov
(bad)
in
mov
lods
add
es
cmp
test
imul
add
xchg
mov
ins
cmp
fidiv
(bad)
call
bound
add
scas
add
mov
mov
push
clc
pop
adc
jne
cmp
add
adc
or
add
retf
call
es
mov
mov
add
leave
in
out
and
add
add
xchg
or
int3
movs
mov
adc
sbb
(bad)
ficom
scas
clc
or
das
add
jnp
je
push
jae
pop
retf
and
int
in
push
int3
jmp
mov
retf
jnp
and
xchg
push
jae
dec
pop
mov
cs
outs
dec
push
sbb
xor
and
pop
xchg
inc
popa
stos
add
cmp
retf
inc
dec
cmp
xchg
call
and
cdq
std
jmp
shl
add
sub
je
movs
xchg
mov
push
xchg
inc
mov
push
(bad)
aas
jg
dec
movs
inc
in
mov
mov
push
mov
int
test
sbb
add
ret
xchg
std
(bad)
dec
dec
jg
add
inc
add
rol
std
inc
or
cmp
sar
cli
jecxz
fist
mov
push
add
test
mov
lods
add
popf
fisttp
mov
cmps
mov
push
fbstp
mov
pop
fst
jmp
add
add
xor
push
add
jl
addr16
pusha
mov
lods
add
(bad)
ret
(bad)
jmp
mov
push
leave
iret
jmp
xchg
cmp
mov
sub
lods
mov
repnz
mov
fmul
jae
inc
fcmovbe
pop
push
inc
lods
pop
jo
add
add
ficom
sbb
int3
adc
aam
jb
adc
iret
cmps
adc
and
mov
(bad)
frstor
dec
(bad)
ficomp
lods
imul
jmp
(bad)
cmp
movs
bound
retf
fwait
push
out
pop
test
adc
std
mov
inc
sti
jno
cs
scas
pop
lahf
int3
addr16
inc
mov
scas
jge
dec
sbb
add
ret
sub
mov
inc
jmp
add
xor
or
ficomp
or
shr
call
ins
bound
or
pushf
stos
xchg
std
push
dec
add
ret
cmps
popa
lods
mov
les
or
xchg
xor
leave
test
add
add
xchg
std
hlt
cmc
lods
movs
or
inc
mov
retf
inc
xor
iret
mov
add
add
push
push
push
add
test
leave
jno
dec
std
mov
pop
inc
dec
add
les
hlt
cli
add
push
std
push
js
jne
test
gs
inc
push
call
push
out
out
call
lock
fucomip
push
sbb
add
es
ror
jo
pop
pop
adc
ret
dec
xchg
jl
clc
and
xchg
mov
aas
test
mov
mov
inc
outs
ja
sbb
cdq
inc
add
adc
xor
mov
xor
out
stc
jns
test
sti
jge
xor
inc
call
mov
fld
add
ret
shl
xchg
idiv
es
je
sub
xor
dec
clc
out
and
add
repnz
and
ja
jmp
mov
inc
and
sub
add
lea
mov
and
adc
ds
inc
out
sbb
add
mov
and
ret
add
jmp
sbb
dec
out
mov
and
sti
scas
or
jmp
jl
add
inc
out
scas
xor
aaa
or
inc
push
hlt
mov
jg
sbb
push
aad
mov
add
bound
mov
out
sahf
ss
jbe
hlt
div
add
and
mov
bound
add
add
push
(bad)
mov
jl
rcl
stos
push
mov
inc
test
fldcw
sub
pushf
or
js
(bad)
call
sbb
call
es
adc
mov
mov
ins
add
inc
aaa
jmp
push
outs
in
rcl
(bad)
push
add
add
rcr
xchg
xor
test
pop
and
add
mov
inc
xchg
enter
xor
xchg
cli
aas
call
pusha
inc
and
cmp
das
xchg
push
push
addr16
push
rol
push
push
jl
call
test
add
push
mov
or
dec
adc
sub
add
xor
push
call
test
add
das
imul
in
add
mov
bound
mov
xor
fwait
xor
sbb
aas
es
or
test
sahf
add
test
sbb
add
scas
cmp
mov
add
fcom
dec
sub
add
add
push
fimul
(bad)
inc
cmp
or
mov
lds
pop
cmp
adc
jmp
sbb
jmp
jl
sbb
or
add
imul
(bad)
and
inc
add
and
inc
imul
loop
jmp
and
dec
inc
out
data16
mov
movs
rcr
scas
add
jmp
sub
fist
ret
and
repnz
cmps
(bad)
in
lds
out
jmp
sbb
(bad)
fcom
(bad)
es
out
ds
inc
inc
out
dec
(bad)
inc
inc
out
and
add
cld
pop
xor
sub
(bad)
add
add
inc
add
mov
cmp
movs
or
hlt
push
inc
push
pop
popf
add
bound
xchg
xor
inc
sub
inc
push
jb
(bad)
in
xor
push
xchg
dec
pop
adc
fwait
cmp
inc
inc
adc
fwait
sbb
jmp
xor
in
push
ficom
out
adc
and
add
movs
ror
andnps
xor
rcr
add
inc
add
rcr
dec
(bad)
cli
jne
inc
mov
hlt
in
push
cmps
mov
rcr
push
mov
push
ret
pop
mov
jge
test
push
xor
push
jmp
adc
sbb
addr16
std
xor
add
mov
add
test
jl
inc
jmp
jmp
push
push
std
(bad)
cwde
(bad)
dec
sbb
call
sub
add
es
dec
jne
dec
inc
movs
loop
call
mov
in
push
mov
and
add
mov
xor
scas
daa
push
sti
jns
call
adc
std
popa
adc
aas
out
scas
xlat
mov
stos
aam
jle
inc
add
popf
xor
adc
popa
inc
jo
xchg
pushf
jmp
out
sbb
pushf
es
out
and
add
and
es
out
rcl
call
lods
xadd
jecxz
mov
gs
dec
es
jo
push
mov
push
lods
rcl
xchg
mov
xchg
mov
xchg
jbe
inc
call
mov
xor
jnp
jge
push
shl
sbb
jb
add
out
mov
push
jb
loopne
sub
push
fnstcw
push
sbb
out
inc
push
jb
fwait
loop
sub
dec
jmp
sub
cmc
xchg
inc
cmp
push
add
in
add
stc
add
and
add
pop
repnz
ret
and
mov
cdq
frstor
push
fwait
mov
and
int
test
and
inc
add
js
(bad)
dec
or
push
mov
push
push
inc
add
add
loop
inc
(bad)
shl
repz
inc
sti
adc
mov
cld
push
gs
push
dec
add
cld
mov
aas
add
jg
sti
call
or
cmps
dec
pop
mov
mov
mov
cmps
sub
into
mov
mov
clc
push
cmp
inc
add
add
cmovo
fwait
les
xchg
aad
add
add
iret
jae
cmc
add
fwait
mov
jae
jp
or
push
test
icebp
inc
or
out
es
imul
cmps
call
add
std
cld
stos
pop
sub
push
sub
es
fild
es
xchg
(bad)
cld
adc
add
xchg
push
popf
inc
xor
xlat
leave
push
lods
(bad)
cld
ss
div
adc
add
adc
adc
sahf
dec
jp
mov
jmp
cmp
pop
es
popa
fbld
nop
out
push
test
popf
or
fwait
popf
add
xor
adc
pop
cli
xchg
into
adc
shl
sbb
add
add
mov
push
mov
xor
pop
es
daa
ss
daa
xchg
iret
xor
(bad)
pop
jmp
(bad)
pop
ret
add
add
mov
fistp
std
pushf
dec
mov
push
aas
add
test
push
(bad)
dec
inc
mov
cmc
xor
sbb
inc
jae
cmp
or
out
adc
and
xchg
add
sbb
mov
add
jp
sub
mov
add
and
adc
int3
add
adc
sub
int
inc
add
add
cmp
adc
in
aas
add
add
mov
push
xor
jge
out
mov
and
movs
sub
je
xchg
push
(bad)
ds
mul
fwait
mov
or
push
das
(bad)
xchg
(bad)
inc
jno
or
push
(bad)
ficomp
sbb
xchg
add
jne
or
shl
mov
(bad)
mov
add
(bad)
mov
fld
inc
push
jmp
mov
adc
call
sub
xor
es
cmc
push
xor
add
gs
mul
movs
inc
add
xor
add
in
pop
push
add
pop
xlat
adc
xor
je
mov
std
aaa
jbe
cmc
fisub
ret
sub
movs
(bad)
sbb
adc
cmp
pop
popf
fwait
add
mov
push
mov
push
shl
sbb
jg
push
push
inc
bound
repnz
cmps
push
sbb
repz
and
dec
and
repnz
scas
(bad)
test
and
arpl
adc
stos
clc
jp
and
jbe
pop
hlt
add
jb
and
stos
xor
stc
loop
push
dec
scas
adc
pop
xlat
cmc
adc
push
fsubr
push
fs
xor
cld
push
sbb
pop
pop
add
sub
(bad)
fnsave
xchg
push
int
mov
ins
push
dec
frstpm(287
inc
add
cmp
inc
push
mov
jmp
or
dec
mov
add
jnp
std
pop
push
xor
ins
data16
in
cmp
in
or
call
jns
ins
or
call
frstpm(287
sbb
stos
mov
(bad)
in
cmps
leave
in
sub
or
add
jne
cmp
cld
dec
jb
cli
inc
and
mov
(bad)
sti
test
adc
stos
jle
mov
push
inc
dec
adc
push
add
add
jno
mov
(bad)
(bad)
add
cmp
je
xchg
jle
jne
std
inc
and
xor
or
push
std
jae
and
call
mov
push
call
cmp
repz
inc
and
xor
or
es
and
push
ds
mov
(bad)
jmp
mov
arpl
xor
add
add
push
fcomp
in
pop
fs
add
imul
popa
mov
sbb
je
addr16
inc
add
xor
mov
fdivr
inc
lock
push
js
test
imul
outs
pop
add
imul
jmp
rcl
inc
rol
ja
je
and
add
add
adc
iret
cmp
xor
jb
xchg
cmc
jecxz
cwde
inc
out
es
and
in
ja
(bad)
ds
inc
shr
sub
das
test
sti
call
jg
out
in
cmps
add
push
fisttp
imul
jp
inc
adc
and
jmp
jl
out
gs
jo
xor
in
out
adc
add
jnp
mov
mov
shl
mov
and
adc
int
sbb
test
xor
jmp
(bad)
add
lea
adc
push
cmp
or
das
add
push
jb
sbb
mov
stc
and
dec
mov
push
js
retf
mov
(bad)
fcomp
call
gs
add
dec
mov
dec
push
rol
das
xchg
dec
xchg
dec
stos
je
push
inc
out
cmp
add
mov
xchg
xor
call
adc
call
pop
jl
call
ins
and
(bad)
push
mov
in
xor
(bad)
adc
pop
in
call
(bad)
xlat
mov
jbe
shl
and
shl
add
xor
sbb
jbe
jmp
add
push
xor
call
xor
adc
cmp
gs
xor
mov
xor
mov
add
cmp
jbe
mov
add
add
shl
jmp
idiv
sbb
lock
and
les
add
jmp
fisub
shl
add
data16
or
sbb
ret
js
add
dec
or
mov
jmp
(bad)
stos
cmp
inc
addr16
sub
and
scas
rcl
xor
sub
lods
push
mov
add
or
add
inc
cmps
dec
xor
sbb
leave
mov
add
shr
or
pusha
std
pushf
add
data16
icebp
push
cmps
add
pop
mov
adc
leave
and
js
dec
push
adc
push
adc
out
and
or
es
jb
cs
daa
dec
add
add
(bad)
call
sbb
add
dec
sub
inc
call
pusha
pop
jl
and
xor
out
xchg
out
leave
std
xchg
mov
test
jb
xor
sbb
addr16
mov
adc
adc
jo
dec
nop
test
scas
test
cli
rcl
add
add
inc
add
jl
loope
sub
cmc
xor
inc
add
out
ja
add
xor
rol
js
or
jo
push
in
or
adc
pop
clc
xor
jge
aas
aam
add
inc
add
les
(bad)
add
retf
pop
jne
scas
pop
push
jle
test
bound
jne
scas
adc
inc
mov
scas
call
in
leave
std
dec
add
dec
or
add
ins
push
std
adc
ja
ss
les
push
push
rol
(bad)
push
pop
mov
cmp
inc
das
out
leave
or
adc
and
pop
std
out
add
add
rcl
pop
(bad)
mov
jno
xchg
(bad)
add
es
sbb
sti
push
lea
mov
inc
add
push
sar
or
inc
pushf
mov
mov
jns
mov
es
je
(bad)
jb
ror
sub
push
int
test
add
add
push
cmp
(bad)
and
jbe
and
test
out
loop
sub
push
adc
lods
retf
shl
loop
push
jno
inc
lods
add
mov
jnp
ss
sahf
dec
and
pushf
psadbw
mov
rol
jnp
inc
mov
test
je
stos
add
jb
retf
fiadd
pop
mov
jmp
out
add
call
and
or
pop
out
adc
mov
ja
arpl
pop
das
jge
ret
adc
bound
bound
fiadd
jo
inc
test
xor
ins
dec
xchg
sub
ins
out
sub
retf
in
mov
in
popf
jae
mov
cld
inc
and
sar
add
add
mov
(bad)
mov
add
mov
ret
call
retf
aad
add
add
retf
xchg
std
(bad)
dec
mov
rcr
jne
or
inc
std
loopne
cmp
jno
inc
add
or
cld
(bad)
ja
mov
out
aam
add
inc
mov
mov
xchg
mov
call
aas
inc
pop
pop
fs
add
sbb
lods
and
aad
inc
push
fsubr
xchg
cmp
mov
es
lock
dec
xor
mov
ins
add
jnp
mov
push
daa
imul
cmps
or
push
push
jg
daa
sub
mov
pop
mov
add
aad
xor
addr16
push
sbb
in
adc
sbb
add
bound
data16
mov
pop
ret
and
clc
in
mov
inc
ds
movs
(bad)
je
pop
adc
out
mov
fcmovu
ja
sbb
inc
call
add
add
out
rol
fs
lods
inc
test
retf
xor
test
fs
or
out
cmp
add
leave
sub
daa
sbb
lock
in
mov
div
mov
ja
jnp
outs
fld1
and
mov
dec
push
lods
lock
dec
xchg
jmp
or
pushf
jmp
add
sbb
push
jmp
push
push
pusha
inc
js
jmp
(bad)
fst
cmp
pop
adc
rcr
jno
rcl
adc
add
inc
sub
(bad)
(bad)
call
outs
cmp
jmp
and
fisttp
add
add
jb
jb
ret
inc
adc
xlat
add
inc
cli
mov
push
call
in
xor
ret
xchg
std
jnp
inc
ret
sti
(bad)
fcomp
mov
lahf
repnz
in
push
inc
add
lods
sar
(bad)
cmp
data16
or
dec
pop
inc
add
rdtsc
add
add
xor
and
cmps
or
les
daa
jb
call
fistp
mov
clc
mov
test
jns
scas
lahf
ins
or
popf
mov
or
sbb
xchg
cli
xchg
(bad)
adc
cmps
jne
and
push
pop
or
sbb
add
fs
add
cmp
push
mov
add
add
xchg
lods
call
arpl
xor
test
scas
push
lods
call
es
adc
cs
lahf
or
mov
hlt
inc
out
cld
pop
mov
xchg
outs
dec
mov
es
jno
imul
fimul
outs
push
mov
je
mov
movs
sbb
daa
inc
out
lahf
div
add
push
shl
inc
out
ret
add
inc
out
popf
push
mov
add
mov
dec
arpl
mov
stos
(bad)
je
popf
in
neg
inc
mov
jae
mov
push
pop
(bad)
inc
and
xor
pop
in
neg
outs
pop
inc
inc
out
cmp
outs
fld1
and
imul
add
and
(bad)
call
sahf
(bad)
(bad)
call
imul
ins
loop
add
outs
ins
mov
adc
std
add
lds
inc
mov
mov
xchg
mov
adc
popf
add
push
add
add
lods
add
add
push
dec
dec
jg
push
(bad)
shl
adc
cdq
mov
push
pop
add
or
push
jmp
adc
mov
sti
call
mov
loopne
xchg
or
or
xlat
add
bsf
mov
inc
call
mov
push
aaa
ret
adc
jae
sub
add
add
adc
mov
dec
push
mov
pop
push
pop
add
call
add
pop
add
dec
sub
xchg
adc
and
das
adc
lahf
adc
call
jecxz
std
push
xchg
or
add
(bad)
mov
inc
adc
loop
aam
ja
rcr
add
add
add
(bad)
mov
push
inc
add
inc
cld
pop
xor
out
xchg
or
mov
xchg
shr
retf
push
mov
scas
das
ret
push
mov
or
test
xchg
or
add
adc
mov
ins
dec
popa
popa
ins
out
jle
lods
jae
mov
push
mov
ja
push
ds
fs
out
push
(bad)
not
xchg
mov
gs
stos
dec
fsubr
add
idiv
hlt
mov
push
add
call
cmp
std
pusha
jo
xchg
les
mov
outs
push
pop
call
fdivr
call
(bad)
sti
mov
js
(bad)
adc
js
sub
add
add
inc
xchg
xchg
les
lods
or
push
add
fdivp
ins
std
rcl
jnp
fstp
push
and
sub
popa
or
aas
jmp
js
dec
fimul
lock
mov
mov
mov
adc
call
dec
jl
push
xchg
out
push
add
mov
in
xlat
jle
add
add
add
(bad)
and
mov
mov
lds
mov
pop
pop
pop
mov
clc
into
mov
dec
mov
jmp
add
push
adc
pop
jmp
inc
jmp
test
test
js
es
cmp
call
stc
in
clc
mov
or
jb
add
add
repz
pop
add
mov
cmc
mov
mov
sbb
cdq
push
mov
in
mov
call
pop
add
and
jae
repnz
jmp
shl
and
pop
add
adc
add
xor
xor
push
add
jnp
add
scas
pop
mov
mov
into
data16
add
aam
sbb
xchg
cmp
add
pop
push
(bad)
adc
jno
inc
out
push
fsubp
pop
mov
pop
sbb
push
xor
fstp
lahf
(bad)
fidivr
out
mov
pop
pop
push
es
add
sbb
adc
push
outs
inc
out
(bad)
mov
retf
lods
ret
es
cwde
fwait
mov
cmps
std
sub
call
out
mov
cmp
adc
sub
loop
shl
(bad)
call
ficomp
mov
in
(bad)
jno
test
(bad)
aaa
mov
mov
pop
(bad)
call
int
add
fdivr
out
call
and
std
aam
push
inc
jmp
fcomip
dec
ret
cmp
cmp
mov
call
mov
jmp
add
cmp
lea
sti
xlat
cmps
inc
std
dec
out
fmul
inc
add
ret
nop
add
add
add
les
loopne
jmp
mov
inc
add
aas
lds
push
adc
call
(bad)
fldenv
add
inc
add
mov
push
call
ret
push
es
add
sbb
xor
add
mov
cmp
add
outs
jbe
out
adc
arpl
jmp
add
rcr
mov
int
or
(bad)
or
es
jl
mov
cdq
mov
and
dec
push
mov
push
push
ss
jmp
add
dec
push
inc
es
add
push
loopne
and
add
inc
push
es
out
dec
mov
and
add
es
or
add
push
and
pop
adc
and
pop
jb
inc
out
jl
push
jmp
xor
loopne
bound
test
inc
inc
cld
lods
mov
pop
jg
pusha
jmp
sbb
and
add
inc
aaa
jg
ins
jmp
gs
sub
aaa
inc
add
faddp
into
call
push
aas
add
das
cmp
ins
push
mov
add
fadd
call
hlt
fs
jmp
sub
and
add
call
and
mov
std
cmp
aas
add
pop
jg
mov
mov
add
mov
add
cmc
mov
std
xchg
or
std
xchg
cmps
call
mov
adc
ja
cmp
xchg
sti
call
push
or
xchg
jmp
xor
jge
stos
add
nop
in
and
inc
add
addr16
pextrw
fs
dec
mov
clc
mov
in
dec
mov
mov
inc
add
sub
jb
sti
dec
jecxz
pop
lea
sbb
adc
mov
mov
xor
call
dec
push
xor
mov
push
std
sbb
(bad)
jle
call
test
adc
xor
fs
je
pop
js
mov
(bad)
and
dec
cmp
in
test
out
mov
pop
in
add
out
mov
pop
mov
push
js
jo
daa
ins
add
cmps
pusha
add
adc
sub
dec
pop
dec
push
mov
loopne
push
ds
add
daa
mov
std
popf
das
sub
(bad)
paddw
or
dec
xchg
inc
cmp
inc
out
mul
aaa
cmp
jle
add
add
daa
pop
jge
xchg
call
test
ins
ds
sub
push
js
push
aad
(bad)
out
sbb
call
(bad)
jb
call
fmul
jecxz
cmc
in
(bad)
xor
add
test
lods
push
pop
in
push
popa
push
add
int3
loopne
mov
dec
add
gs
or
lea
add
add
dec
add
sar
push
pop
add
or
jnp
jg
pop
push
mov
jnp
call
jo
pop
cmp
push
repnz
mov
mov
(bad)
es
idiv
push
iret
repz
pop
inc
pushf
xor
and
sub
cmp
xchg
bound
lods
pop
std
(bad)
push
ins
adc
add
pop
xchg
shl
mov
int
inc
fld
push
nop
push
les
aas
dec
push
repnz
pop
mov
int
dec
fcomp
mov
cld
add
inc
add
and
in
add
mov
mov
inc
dec
fidiv
add
jmp
js
enter
xchg
push
loopne
movs
dec
push
lea
add
add
inc
add
rcl
sahf
mov
clc
mov
es
movs
std
push
jne
mov
ins
add
icebp
add
ins
repnz
xor
add
ins
pop
call
sbb
es
ror
cmp
inc
add
or
jmp
sub
es
push
push
add
cmc
push
fwait
scas
movs
push
pop
ds
clc
push
cmovl
sti
lds
add
pop
pop
sub
push
leave
inc
cld
out
add
dec
mov
inc
cmovns
fptan
js
mov
cmps
fwait
repz
cmps
adc
inc
out
mov
popf
enter
pop
lods
add
add
add
add
xor
sub
repnz
adc
scas
outs
push
add
cmc
mov
jne
inc
cmps
and
test
outs
icebp
pop
and
cmps
push
jmp
rep
pop
(bad)
call
aas
jb
jbe
jmp
add
pop
cmps
sar
out
hlt
out
aas
inc
add
xchg
test
xchg
popf
data16
add
add
sar
mov
leave
sbb
std
cmp
xor
cli
in
mov
std
mov
mov
jno
out
xchg
inc
add
adc
das
fcmove
jnp
call
push
pop
or
jmp
xchg
sar
cs
repz
std
push
push
ins
xor
sub
rcl
inc
add
fdiv
mov
jmp
add
add
sbb
dec
mov
lea
and
dec
lock
das
aad
test
mov
add
mov
(bad)
aas
cmp
add
push
(bad)
ret
jmp
mov
mov
test
call
dec
mov
test
std
loope
shl
in
sub
inc
mov
jne
jne
dec
jg
ins
add
call
das
lods
xchg
fisubr
mov
call
cmp
sbb
aas
es
retf
std
dec
push
aaa
push
stos
and
dec
xchg
(bad)
jae
add
add
call
xor
lea
aam
xchg
cwde
cdq
std
xor
aas
es
push
(bad)
pop
arpl
mov
ins
and
and
inc
jl
pushf
add
stos
aad
out
lods
rcl
mov
aaa
mov
and
sub
lea
mov
cmp
add
add
imul
pop
mov
push
pop
fmul
xor
out
inc
inc
out
popf
rcl
pop
sub
sbb
into
lods
xchg
aas
das
nop
mov
pop
out
movs
mov
mov
and
adc
(bad)
addr16
(bad)
sub
inc
push
cmp
adc
jmp
test
mov
cs
add
add
jmp
xor
push
in
or
out
cmc
pop
std
bound
xor
jle
push
add
inc
lds
push
push
push
adc
add
ins
(bad)
fsub
push
and
adc
sbb
cmp
fstp
push
je
or
add
add
retf
pusha
sbb
push
fistp
add
add
add
fwait
cmp
mov
mov
dec
pop
dec
xchg
outs
jle
pop
push
inc
test
sub
adc
add
call
ins
cld
jne
mov
sbb
xor
call
sti
jne
mov
call
(bad)
loope
or
test
in
es
add
es
adc
lahf
jae
es
and
mov
lahf
jae
cs
adc
mov
push
fnstcw
fisub
mov
out
or
es
and
test
es
add
es
add
mov
test
shl
pop
add
ins
sahf
xor
xchg
adc
add
add
ins
mov
and
ins
add
ins
xor
outs
pop
add
scas
inc
lods
shl
out
js
popa
fisttp
cmps
call
sbb
xor
xlat
rol
out
ins
dec
mov
pop
push
lahf
jbe
mov
inc
es
fdivr
out
adc
shl
popf
push
(bad)
fiadd
add
add
popf
inc
es
xchg
and
xor
push
aaa
xchg
and
pop
mov
xchg
pop
jl
dec
jle
ins
pop
pop
std
outs
daa
inc
(bad)
call
in
sub
xor
movs
inc
add
and
adc
fcomp
shr
es
inc
adc
outs
sub
out
add
add
add
std
ins
in
add
cwde
and
addr16
push
aaa
lahf
rcl
ds
push
jae
dec
inc
std
cmp
push
adc
mov
push
jae
xchg
rol
sahf
jno
fisubr
sub
fsub
push
add
call
int3
jne
jae
ret
jns
aas
sub
aas
add
mov
sbb
movs
mov
add
add
fs
(bad)
adc
add
aaa
test
or
add
mov
add
push
sti
adc
call
adc
xchg
adc
push
dec
push
jmp
adc
leave
inc
cld
push
mov
dec
test
rcl
test
shr
sbb
add
add
and
mov
inc
pop
popa
repz
(bad)
call
stos
test
jnp
rol
mov
mov
cmp
imul
cmps
les
daa
pop
daa
es
(bad)
imul
or
push
mov
add
aam
mov
push
xor
cmp
add
add
mov
cmp
int3
ucomiss
pop
outs
je
(bad)
not
fwait
adc
pop
cmps
inc
cmps
mov
mov
imul
mov
and
test
add
jae
cmp
jne
fld
add
div
into
call
jl
lahf
or
lods
arpl
call
(bad)
cmp
lahf
or
sbb
setnp
rcr
xchg
fcmove
mov
dec
add
push
mov
and
rol
inc
xchg
es
add
std
fcomp
hlt
out
pop
push
std
dec
ss
mov
pushf
aad
cmp
cwde
mov
mov
add
out
sub
in
and
inc
std
fs
inc
icebp
pop
mov
inc
frstor
inc
je
in
xlat
add
inc
jmp
add
add
dec
ds
scas
mov
leave
mov
fwait
jg
pop
sbb
mov
or
mov
test
mov
dec
(bad)
and
push
xchg
dec
(bad)
inc
add
add
sar
not
add
je
daa
adc
jae
adc
enter
sub
inc
xchg
les
add
mov
popa
mov
pop
cmp
push
cmp
sti
call
es
push
jle
inc
dec
sub
jns
push
hlt
jle
inc
jmp
mov
ret
das
mov
add
add
(bad)
cmp
pop
aas
add
push
jmp
xor
std
adc
shl
cld
cmp
dec
cmp
adc
push
or
add
pop
lods
add
mov
adc
xor
mov
xchg
inc
xlat
(bad)
in
dec
and
aas
ins
into
nop
dec
out
jg
cli
int3
cmp
mov
sub
repz
(bad)
xchg
fst
or
out
adc
popa
dec
inc
out
scas
or
in
ins
les
leave
jns
es
jb
sbb
popf
dec
out
push
call
push
(bad)
and
inc
fadd
fs
inc
out
scas
aad
add
ss
(bad)
daa
pop
stos
mov
add
xchg
lods
fwait
inc
out
and
mov
cmp
and
ror
je
mov
mov
jmp
and
inc
mov
xor
push
jbe
cwde
pop
sbb
add
(bad)
out
mov
mov
ror
push
dec
or
inc
jb
int3
out
or
dec
mov
(bad)
aas
jmp
mov
dec
imul
adc
xchg
or
or
inc
add
xor
xor
(bad)
pop
les
cmc
dec
gs
icebp
pop
add
push
dec
add
mov
inc
lock
pop
outs
pushf
or
mov
jge
push
test
add
add
ret
into
dec
test
(bad)
cld
or
add
mov
sub
test
enter
iret
inc
dec
mov
addr16
iret
jp
push
call
lds
sub
jecxz
cmp
cdq
aas
adc
div
mov
mov
std
jg
xor
add
cmps
xchg
pop
jbe
shl
fbld
fist
(bad)
ins
ficomp
add
pop
sbb
mov
add
sub
xor
daa
aad
xor
rol
pop
mov
mov
retf
out
sub
mov
xor
inc
in
pusha
xchg
add
test
inc
push
ror
stos
int3
add
add
xor
into
sbb
iret
iret
jp
mov
(bad)
test
lock
cmps
pop
jmp
int
jmp
sbb
hlt
inc
xor
dec
xor
xchg
inc
out
gs
inc
sub
mov
pop
cmp
inc
xor
or
imul
ja
call
scas
sbb
call
pop
dec
xor
loope
je
fsubr
pop
xchg
mov
inc
scas
mov
or
fs
sbb
cs
push
(bad)
cs
hlt
aad
inc
jmp
lock
cld
imul
pop
mov
js
pop
aaa
stc
add
and
xlat
out
jb
dec
mov
sbb
pusha
cli
pop
in
and
mov
add
add
jno
xor
add
mov
cmc
or
int
add
mov
jp
jb
ret
popf
out
jle
fild
sbb
adc
sub
jge
aas
jno
adc
clc
inc
je
xchg
mov
dec
lods
xchg
push
sbb
dec
inc
mov
jae
jno
jae
jns
jae
jl
or
jmp
or
mov
cmps
sbb
xchg
into
adc
adc
add
adc
jl
push
aam
clc
popf
xchg
std
mov
popa
int3
hlt
push
mov
(bad)
push
cmp
aaa
std
sbb
idiv
es
or
lahf
lea
and
add
data16
movs
jne
je
add
add
fisttp
and
inc
mov
xchg
jle
daa
push
stos
jbe
fcmovne
add
lock
adc
push
adc
pop
xchg
mov
sub
adc
std
inc
es
fiadd
pop
jmp
mov
mov
loope
repz
or
shl
jl
add
add
jg
inc
es
adc
inc
mov
aaa
jo
xchg
mov
fistp
mov
test
repnz
pop
pop
movs
fistp
jo
dec
shl
es
std
or
bnd
push
inc
add
jne
inc
jmp
movs
pop
cmp
das
fimul
cmps
fcom
adc
add
add
sti
jb
ret
sub
inc
and
cmp
into
mov
mov
pop
or
scas
lock
jmp
std
push
dec
add
inc
jae
arpl
sbb
cmps
aas
sbb
call
fadd
or
mov
cmc
shl
dec
add
xchg
inc
jl
mov
cwde
or
or
inc
or
sbb
ret
push
mov
dec
push
test
iret
inc
push
push
sub
mov
mov
test
aaa
arpl
call
dec
imul
xor
pop
inc
inc
cld
cli
cld
aaa
add
xor
cmp
(bad)
int3
xlat
test
or
push
inc
add
add
add
cmp
adc
cmp
add
fwait
sti
xchg
data16
and
sar
cmp
jge
jmp
cdq
aaa
dec
pop
add
jnp
js
push
in
(bad)
icebp
popf
sub
sbb
(bad)
jp
lahf
jg
push
add
mov
push
cmp
js
pop
adc
inc
or
aad
add
pop
xor
les
lods
and
sbb
out
or
cmps
jae
jae
fisttp
div
push
(bad)
aas
dec
xchg
out
and
out
xor
cmp
movs
push
test
sub
mov
movs
pop
fcmovne
jg
mov
inc
es
dec
xchg
mov
cmp
outs
sub
es
mov
bound
push
mov
dec
retf
iret
mov
mov
inc
call
mov
sub
sahf
mov
xor
rol
loopne
and
jmp
inc
dec
mov
sbb
int
inc
jne
popf
cmp
xchg
lods
mov
mov
mov
test
and
mov
jmp
and
int
push
adc
call
aas
pushw
in
loopne
bound
pop
sub
in
inc
mov
or
add
test
push
cmp
scas
dec
add
pop
call
jno
mov
lods
loope
jmp
cmp
adc
ret
dec
inc
add
aas
inc
test
add
add
test
inc
add
aas
inc
add
mov
adc
cmp
xchg
xchg
retf
and
add
add
aas
cmp
and
push
in
push
add
and
popa
push
iret
rol
inc
and
ret
jbe
xchg
into
das
mov
inc
push
call
or
and
es
and
add
cmps
dec
add
loop
loopne
sub
add
sub
jb
add
mov
loopne
sub
mov
ds
rol
mov
and
sub
add
sbb
mov
fsub
stc
push
fst
push
cmps
mov
das
jbe
inc
and
fistp
and
mov
add
popf
push
cmp
mov
or
mov
mov
inc
or
dec
mov
in
jp
jecxz
fisub
jl
sub
shl
push
ss
loopne
inc
sbb
scas
xchg
ret
fild
inc
out
data16
shr
add
mov
mov
es
fcmovnu
sbb
aas
addr16
dec
dec
out
movs
shr
es
cmp
add
inc
fwait
stc
cmps
add
imul
out
and
xchg
es
std
jle
fsub
add
add
les
jmp
and
sub
mov
mov
pop
add
and
cmps
push
je
addr16
xchg
jecxz
add
pop
and
ret
and
cwde
and
and
adc
or
and
ret
and
dec
add
popa
cmp
jmp
dec
shl
int
inc
add
mov
sar
pop
xor
and
jg
adc
inc
add
loop
mov
jb
inc
outs
pop
sbb
inc
add
add
add
test
cli
dec
test
inc
add
aas
inc
xchg
adc
push
ror
mov
mov
inc
add
inc
mov
fldcw
lock
iret
jae
inc
aas
mov
or
xchg
pop
xchg
cmp
push
dec
xor
mov
sbb
add
add
dec
int3
inc
sub
sub
add
mov
and
adc
sub
sbb
xchg
sub
sub
or
jecxz
sub
lods
jbe
push
fdivp
add
es
xlat
(bad)
sbb
cmc
fiadd
add
xchg
adc
leave
(bad)
loope
pop
add
jle
and
sub
add
xchg
mov
add
popf
mov
lahf
dec
add
add
xchg
jb
imul
out
jae
fld
inc
retf
js
jb
rol
jmp
imul
add
add
imul
loopne
sub
mov
mov
test
call
sub
add
mov
add
cmp
sti
cli
jno
lods
addr16
sbb
xor
iret
ss
ins
mov
ds
stc
gs
push
mov
lods
(bad)
mov
mov
cmp
stos
adc
jmp
push
lods
(bad)
cmp
inc
std
mov
add
ins
lods
inc
add
movs
mov
mov
sbb
sub
cmp
test
ins
mul
mov
cmp
xor
dec
cmc
mov
adc
sub
push
jae
add
loope
cdq
and
sub
sbb
mov
jns
or
push
fnstcw
enter
pop
inc
push
call
js
mov
adc
es
mov
cmp
inc
add
add
dec
dec
push
push
cmp
inc
dec
mov
push
mov
cmp
dec
inc
xor
dec
fs
adc
xchg
or
pop
xor
mov
inc
mov
adc
inc
add
test
movs
mov
loopne
xlat
push
popf
jnp
std
rdtsc
test
repnz
sar
add
add
aas
jb
dec
test
xchg
scas
inc
or
xor
pop
fsubr
rcl
mov
mov
push
rol
xor
adc
ds
aaa
call
cmp
cmp
mov
scas
inc
mov
es
adc
sbb
shr
data16
test
mov
add
add
push
sahf
inc
push
or
fsubr
inc
pop
retf
add
fild
or
cmps
add
imul
call
daa
push
cmp
pop
xor
out
ficomp
cmp
(bad)
(bad)
and
(bad)
pop
cmp
sbb
out
outs
jp
or
mov
lock
inc
out
sbb
sbb
pop
es
out
xchg
cmp
jmp
shr
std
aam
cmp
cli
cmp
ins
xor
mov
outs
pop
fnstsw
xchg
std
pushf
sbb
std
cld
mov
inc
jmp
cmps
push
or
gs
dec
lahf
cmps
push
clc
fldenv
push
out
inc
adc
and
or
pop
cmp
inc
add
add
inc
jmp
and
int
pusha
(bad)
mov
out
pop
cmp
imul
jae
cdq
push
sbb
in
add
pop
xchg
adc
dec
add
retf
sbb
in
add
push
mov
jge
mov
dec
push
push
push
adc
jno
(bad)
xchg
pop
or
mov
jbe
xor
daa
lds
inc
jb
sub
pop
add
add
sub
mov
add
add
dec
push
js
cld
adc
inc
add
aas
jnp
jb
test
or
xor
push
jmp
adc
int3
inc
and
adc
sti
xor
es
sub
daa
sub
rol
dec
inc
mov
adc
jmp
rol
dec
(bad)
mov
mov
mov
add
add
mov
ins
sbb
mov
daa
xchg
push
imul
daa
add
aas
sub
stos
call
or
ins
ror
pop
sub
sbb
data16
data16
mov
and
inc
stc
js
or
jg
cmp
sbb
scas
xlat
mov
push
xor
sldt
add
stc
xor
mov
rcr
ret
es
adc
aad
data16
inc
out
pop
inc
fs
sub
inc
out
jno
out
out
arpl
inc
out
sbb
sub
cmps
or
repnz
es
pop
add
jl
xor
sub
scas
add
loope
clc
or
cmp
cmp
xchg
adc
inc
add
add
dec
mov
cld
(bad)
rcl
scas
adc
sahf
jg
push
adc
inc
or
cld
mov
adc
add
inc
shl
repz
clc
and
xor
repz
and
test
jb
aas
mov
cmps
cs
inc
vpaddw
add
add
sub
lahf
mov
das
jnp
call
les
idiv
inc
add
vmptrld
leave
add
add
lock
or
mov
inc
xor
(bad)
inc
lock
dec
das
sar
leave
std
cmp
xor
mov
jge
xchg
inc
add
ins
adc
mov
add
add
xchg
ret
mov
jmp
xchg
inc
add
pop
push
out
push
jg
push
(bad)
loop
call
mov
pusha
mov
or
adc
and
add
cmp
mov
sbb
pop
add
dec
push
push
inc
lahf
inc
or
je
add
pop
jl
mov
lods
jb
jae
add
add
movs
shl
dec
jp
leave
lahf
inc
or
es
jecxz
pop
jmp
aas
sbb
mov
sub
and
aas
mov
or
jmp
xor
pusha
add
inc
mov
out
inc
das
(bad)
jns
add
jg
inc
out
lahf
xchg
fisttp
mov
sldt
add
jmp
pop
cmp
jmp
int
jns
mov
sub
jle
rcr
inc
jo
jmp
xor
and
sub
inc
je
loope
out
call
pop
pusha
xchg
add
xchg
add
xor
mov
mov
or
jmp
or
add
and
lock
call
xchg
das
std
jmp
cmps
sbb
call
cs
inc
mov
adc
mov
jmp
sub
in
cld
(bad)
call
add
lock
call
and
inc
add
mov
xor
add
sub
add
add
jl
call
lods
rol
dec
inc
push
nop
mov
ret
(bad)
call
pop
add
les
dec
ret
xor
mov
ja
(bad)
dec
fwait
repz
daa
mov
dec
mov
push
push
sahf
push
call
outs
adc
adc
xchg
add
aam
sti
inc
jno
dec
add
cld
call
xor
xchg
ds
mov
inc
call
jg
(bad)
jmp
call
or
std
mov
add
es
mov
(bad)
mov
sub
jne
sbb
mov
ins
ins
lock
add
stos
fucomi
push
xor
(bad)
je
ftst
(bad)
call
sbb
std
call
clc
jnp
imul
and
inc
je
sub
jno
imul
jg
inc
out
aaa
sub
out
jne
ss
adc
into
adc
inc
out
cmps
add
add
test
xor
and
add
add
cdq
call
js
sub
rcr
and
sub
mov
sub
cvtpi2ps
movs
add
leave
lods
xchg
aam
xchg
jg
sub
mov
mov
add
adc
or
inc
sbb
stc
gs
(bad)
mov
sar
gs
xchg
jno
and
jns
and
ds
and
inc
mov
add
add
imul
hlt
cmc
and
fcomp
cmp
jmp
add
push
sbb
push
sub
lods
jg
fs
cmp
fcom
xor
movsx
push
cmp
jb
ins
iret
ja
add
add
sbb
sub
retf
sub
adc
mov
mov
idiv
ficomp
clc
pminub
(bad)
sbb
push
(bad)
cli
fwait
test
mov
xor
inc
xchg
test
mov
add
inc
test
sub
xor
imul
add
xor
rcl
add
pop
es
inc
lods
leave
sub
dec
je
mov
inc
pop
sar
add
and
std
pop
or
and
jnp
inc
(bad)
or
jle
xor
imul
inc
dec
mov
daa
jmp
add
popf
lock
or
jmp
popf
pop
xor
repnz
add
jnp
dec
ret
mov
inc
ds
inc
je
stos
retf
(bad)
jg
xchg
xchg
or
cmp
in
es
sub
cmp
add
push
and
xchg
sub
inc
dec
adc
rcr
mov
inc
sub
jp
add
not
jb
adc
jmp
add
lds
cmp
and
out
sub
out
mov
adc
es
je
stc
sbb
out
inc
bound
lahf
aam
stc
movs
(bad)
loope
add
cld
xchg
jne
aas
rcl
test
daa
sar
and
xor
imul
mov
inc
je
outs
sbb
int3
and
add
inc
dec
push
sub
mov
add
and
xor
call
jo
and
test
and
mov
add
jg
xor
jge
std
gs
fs
sub
add
fcomi
and
push
or
mov
pop
xchg
mov
inc
pop
shl
mov
inc
push
gs
mov
adc
jne
mov
jmp
inc
add
push
inc
add
add
jno
(bad)
adc
jmp
mov
inc
jae
ror
add
inc
movs
xor
int3
es
pusha
mov
cmp
add
add
sbb
add
cdq
cmp
es
ins
jmp
pop
(bad)
jbe
out
pushf
imul
push
shr
not
xlat
dec
mov
pushf
cmp
es
sub
repnz
jns
push
mov
inc
inc
jle
sbb
push
sar
inc
pushf
xchg
lods
jl
jb
lock
add
add
pop
dec
add
sbb
call
es
sbb
scas
jg
ret
test
mov
mov
scas
jg
inc
sub
ret
sahf
jg
outs
cli
repz
sbb
push
cmps
add
jo
jp
das
jmp
and
(bad)
std
cmp
enter
pop
das
jg
(bad)
cmps
jo
ins
arpl
sbb
add
add
cmp
not
ret
and
pop
stc
cmp
call
jns
xor
pusha
jecxz
xchg
xor
inc
mov
jg
fadd
outs
and
stos
inc
and
out
retf
daa
std
jae
sub
repz
mov
inc
das
sahf
std
dec
hlt
add
fdivrp
shl
xchg
mov
pop
and
and
inc
push
mov
pushf
lock
ret
movs
cli
es
fcomp
aaa
int3
stos
and
add
pusha
adc
loope
sbb
bound
ret
neg
aaa
jae
add
scas
jae
(bad)
add
pop
push
xchg
mov
or
or
call
xor
aas
sbb
inc
add
test
add
js
repz
jno
in
mov
retf
mov
adc
xor
cmp
(bad)
inc
add
mov
push
add
jg
pop
jg
xchg
les
dec
sahf
dec
sar
dec
jmp
or
add
ja
pop
stos
lahf
(bad)
cmc
adc
pop
(bad)
jmp
add
mov
push
sub
fild
dec
cwde
adc
sub
fdivrp
mov
test
fst
daa
sub
xchg
and
add
fstp
std
cdq
xchg
mov
es
add
jns
jge
(bad)
inc
push
sub
mov
pop
sbb
call
shl
cmp
(bad)
rcr
enter
and
imul
scas
push
sub
fadd
and
mov
jg
xchg
loopne
out
jo
add
jle
xchg
xor
add
iret
arpl
and
es
cmps
mov
leave
int
xchg
push
push
xor
js
mov
nop
add
enter
into
imul
add
add
mov
push
popa
and
push
xor
adc
jo
sub
dec
and
lods
add
imul
sub
(bad)
jg
push
xchg
cmps
add
xchg
jg
xchg
(bad)
jg
mov
or
fld
ins
je
or
in
sti
cli
call
jecxz
inc
jmp
add
jmp
jb
dec
std
mov
jbe
adc
xor
shl
inc
mov
mov
ror
ret
dec
std
dec
or
adc
dec
rcr
or
mov
cmp
or
xor
sti
jne
xchg
jno
cmps
aam
inc
add
add
fdivp
add
sahf
push
add
mov
add
push
sub
push
pop
dec
les
iret
inc
xchg
add
add
jmp
repnz
call
add
outs
addr16
fstp
test
inc
or
es
sar
push
loope
and
xchg
add
sub
ja
push
fs
mov
push
inc
es
inc
or
cmps
push
mul
lds
dec
sahf
gs
mov
lods
aam
cmps
out
or
jne
jbe
data16
mov
sub
cmovo
stos
ins
push
inc
ins
xor
lods
xchg
push
imul
or
push
lods
enter
add
add
xchg
pop
jl
out
dec
xor
cmp
loope
sub
xor
addr16
mov
inc
lahf
or
cmps
jg
xchg
cli
js
clc
jle
xchg
test
lock
rcr
fs
sub
loope
sbb
push
adc
push
cmp
pop
test
push
inc
data16
sub
mov
inc
add
add
add
mov
fstp
sub
and
retf
inc
enter
in
fld
jae
movs
mov
fxch
sub
les
sysret
je
push
push
cmp
retf
dec
pop
je
clc
push
cmp
mov
jl
lock
add
adc
sbb
pop
call
outs
jo
sub
add
add
pop
vpsraw
div
rol
dec
or
pop
add
(bad)
stos
add
outs
xor
pop
push
(bad)
retf
call
cld
or
xor
psubb
jne
xchg
jns
mov
pop
call
(bad)
fsub
cmp
int3
inc
aas
sub
call
sub
jmp
lds
pop
in
int3
dec
inc
cmp
add
cwde
mov
adc
jnp
inc
jae
pop
(bad)
and
adc
push
aas
and
add
pop
repz
inc
pop
or
es
add
cmps
shl
call
out
adc
stc
jne
mov
sub
(bad)
add
(bad)
push
pop
sbb
sbb
add
mov
add
es
aaa
in
fiadd
adc
mov
inc
add
or
inc
add
and
outs
sub
add
or
add
es
cld
mov
mov
add
dec
mov
add
adc
adc
(bad)
retf
imul
es
inc
mov
ret
imul
jnp
sahf
dec
xor
out
ins
dec
mov
je
cli
and
mov
add
fld
mov
addr16
cli
dec
test
nop
shr
cmps
pop
pop
and
inc
adc
mov
pop
clc
popf
repnz
pop
mov
retf
jb
clc
sub
pop
jno
test
or
and
inc
mov
add
add
inc
add
sbb
mov
fbstp
add
push
mov
adc
loope
mov
std
push
xchg
stos
add
js
xchg
xchg
or
xor
adc
sub
imul
push
xchg
push
mov
dec
int3
xchg
pop
rcl
out
call
es
std
scas
mov
inc
sbb
retf
dec
stc
mov
aas
xchg
mov
push
or
les
mov
test
je
cli
rcr
call
fimul
lahf
fisttp
jmp
xchg
(bad)
(bad)
cmp
js
rcl
pop
push
aaa
sub
sub
add
push
push
(bad)
and
aas
mov
and
shld
test
js
pxor
and
call
xchg
call
mul
push
mov
mov
aam
movs
pusha
pop
add
inc
cmp
(bad)
push
lods
jmp
and
pusha
test
add
jmp
add
icebp
jle
cmp
stc
out
(bad)
sub
push
popf
dec
mov
stos
ins
adc
scas
mov
popf
push
(bad)
jl
out
push
daa
sub
or
add
push
adc
call
sbb
es
(bad)
cmp
out
adc
enter
ds
xchg
in
imul
add
es
addr16
push
xchg
jmp
data16
in
xchg
pop
cmc
dec
pop
mov
es
add
push
pop
inc
pop
inc
es
out
in
out
cmp
add
add
jecxz
sbb
clc
jb
mov
mov
fs
jp
add
test
cld
out
inc
pop
std
bound
cld
mov
retf
jmp
sub
add
out
sub
sub
xchg
mov
pop
dec
adc
movs
icebp
mov
sbb
in
dec
adc
imul
das
jmp
adc
jle
mov
xor
call
add
(bad)
or
das
and
mov
ss
(bad)
inc
push
into
stc
or
add
or
push
dec
inc
jg
add
clc
out
and
dec
inc
sbb
cmp
mov
push
cld
lea
cmp
inc
in
or
out
inc
pop
pop
in
ret
xor
jmp
jbe
clc
out
and
jg
repnz
hlt
xchg
jg
xchg
retf
inc
or
dec
push
hlt
in
or
cmps
test
aas
leave
dec
clc
je
dec
push
fcmovnb
inc
xor
imul
mov
add
add
(bad)
jnp
sbb
fdivrp
es
sbb
inc
mov
mov
es
ins
pop
jg
pop
test
xor
or
push
mov
div
lea
lds
sbb
pop
jge
cs
mov
je
leave
movs
je
dec
mov
cmc
mov
cli
mov
lahf
call
repnz
es
inc
or
cmps
(bad)
cmps
test
adc
repnz
loopne
mov
test
call
popf
inc
sub
cmps
pop
jmp
in
cdq
daa
add
or
fidiv
pop
or
stc
sub
cmp
out
cmc
or
pop
lods
mov
inc
push
inc
sbb
rol
mov
push
jp
(bad)
mov
in
int3
ins
jo
xchg
mov
add
xchg
xchg
test
dec
mov
mov
xor
sub
mov
inc
cdq
sbb
push
and
inc
dec
mov
add
(bad)
daa
add
mov
mul
mov
pop
sub
je
test
adc
pusha
out
jmp
jmp
test
inc
mov
je
and
je
dec
outs
paddw
adc
cmp
adc
std
jmp
adc
sbb
js
std
aam
jp
mov
fmul
test
sbb
pop
call
icebp
sbb
jb
dec
pushw
inc
or
cmps
jmp
mov
std
(bad)
mov
call
add
jno
cmp
add
inc
sti
cmp
cmovne
mov
mov
pop
jle
int3
sub
jl
cmp
sbb
inc
fist
(bad)
(bad)
mov
adc
call
mov
add
imul
add
push
cmp
dec
push
mov
mov
jg
es
mov
fisttp
add
lods
and
jmp
mov
sub
les
sub
ror
dec
dec
movs
aam
scas
xor
arpl
add
push
call
sub
hlt
sub
dec
add
ja
je
daa
sbb
inc
je
sub
pusha
std
mov
movs
mov
mov
xchg
imul
add
add
test
cmc
mov
sbb
test
(bad)
cmp
test
sub
mov
push
jl
ds
add
mov
inc
dec
in
out
sahf
pop
push
inc
jae
adc
jbe
fldcw
mov
mov
jge
inc
out
test
sub
ror
push
mov
scas
sbb
(bad)
jp
mov
scas
out
paddusw
lahf
jne
jmp
mov
and
ins
fwait
push
std
jmp
sahf
push
pop
mov
call
imul
add
pushf
inc
xor
sub
out
or
jmp
jae
adc
sub
(bad)
mov
sub
(bad)
push
sbb
test
aas
mov
mov
ds
movs
add
shl
jae
pop
xchg
adc
in
std
not
and
adc
inc
mov
mov
dec
(bad)
ret
jmp
jbe
clc
aam
stc
call
mov
add
(bad)
mov
inc
add
sbb
std
inc
add
add
inc
cld
cld
dec
jg
repz
sti
dec
sti
aaa
test
add
je
add
mov
adc
jne
sbb
push
pop
jns
add
inc
dec
call
lock
in
call
xor
es
out
pop
fld
std
cmp
out
aas
es
call
sbb
push
cmp
sbb
cmp
int3
pop
lods
push
add
out
add
inc
imul
cmp
fadd
je
xchg
push
or
pop
add
out
fwait
or
gs
add
movs
push
or
pop
add
and
inc
inc
es
cmp
out
aas
es
jb
cmps
add
add
mov
adc
in
pop
jecxz
mov
inc
es
sub
cmp
mov
or
or
(bad)
dec
movs
pop
jnp
cmps
mov
in
inc
cmp
scas
adc
fisub
sbb
and
or
and
or
and
or
add
sbb
ror
fimul
sbb
and
or
cmc
sbb
dec
dec
or
bound
pop
outs
cmp
pop
call
inc
or
cmps
call
(bad)
pop
call
std
mov
call
in
xchg
and
and
(bad)
cld
jge
jo
test
jmp
call
cs
push
pop
add
add
arpl
call
test
clc
jb
inc
add
jne
add
stc
cmp
test
or
add
add
adc
inc
mov
in
jb
add
xor
or
ret
inc
adc
mov
dec
push
sub
adc
and
add
(bad)
inc
and
dec
sar
dec
inc
dec
push
xchg
inc
dec
push
sub
and
and
and
adc
adc
xor
fadd
(bad)
inc
test
cmp
xor
add
add
xor
in
jl
pop
push
push
and
inc
cmps
mov
add
xchg
add
repz
jbe
sbb
inc
cmps
mov
cli
ss
cld
adc
hlt
aas
cmps
push
cmp
test
sub
rcr
sbb
push
mov
cmps
dec
adc
lock
inc
jge
inc
push
lods
out
mov
cld
mov
inc
lods
pop
jo
push
jo
mov
jge
or
ror
movs
add
in
dec
inc
out
xchg
retf
mov
push
inc
data16
inc
sub
and
jl
pop
xlat
sbb
or
xchg
xor
(bad)
pop
jae
mov
xor
add
outs
mov
push
out
cmc
shl
daa
add
or
fsubr
lds
inc
cld
out
es
cs
xor
add
inc
add
iret
ficom
sub
or
pop
adc
inc
add
(bad)
bound
jmp
les
cmc
dec
push
call
pop
pop
bound
inc
hlt
and
xor
mov
aas
add
jle
xor
pusha
sub
call
fst
sbb
pop
mov
lock
call
call
adc
dec
fs
(bad)
popa
and
push
push
add
mov
pop
sub
or
(bad)
inc
and
jns
je
xor
cmp
sbb
fwait
or
xor
or
adc
inc
push
mov
mov
sti
mov
pop
and
and
jb
aam
and
out
sbb
aas
les
and
mov
dec
lea
imul
jns
xchg
sar
inc
int
in
dec
ror
jbe
das
(bad)
movs
stos
pop
icebp
imul
jbe
pop
lods
add
dec
mov
mov
sub
hlt
ret
xor
add
imul
out
mov
std
popf
adc
dec
mov
in
aam
cmc
sub
add
cli
sar
leave
dec
adc
(bad)
cmp
add
daa
jb
cld
adc
xadd
add
rcr
pusha
dec
xlat
cdq
in
es
paddw
mov
ja
mov
sar
test
push
jno
je
std
xchg
push
add
jns
dec
fmul
cmps
(bad)
aaa
iret
sub
xor
cmps
add
xlat
add
add
movs
add
jmp
mov
(bad)
mov
inc
xchg
sub
xchg
xchg
fbstp
aaa
lods
scas
or
mov
add
daa
sbb
and
add
dec
scas
cld
imul
dec
shl
sti
pop
mov
hlt
imul
mov
sub
icebp
popa
inc
fs
xchg
inc
add
push
call
bound
sbb
and
popf
ret
add
add
xor
inc
add
jb
cld
scas
pop
enter
push
mov
inc
add
add
and
out
sub
aam
fnstcw
hlt
inc
add
in
sahf
std
inc
cmps
(bad)
call
push
xchg
push
(bad)
in
std
aam
pop
inc
jmp
loopne
adc
add
daa
jb
adc
fcomi
cmp
xchg
add
cmp
add
add
jno
xchg
call
push
test
test
add
inc
add
mov
add
ret
and
mov
add
xchg
mov
call
xor
sti
adc
hlt
xchg
aaa
repz
icebp
dec
push
lods
mov
add
push
std
sti
adc
aam
aaa
repz
push
sti
adc
jg
adc
std
push
es
dec
test
jg
push
sbb
jmp
pop
or
je
mov
cld
daa
cmp
adc
sar
xor
xor
push
repz
jae
add
leave
mov
jae
test
add
imul
pop
dec
movs
inc
add
add
add
pusha
jnp
cmps
into
mov
es
push
cld
sbb
call
jne
std
adc
inc
or
psubw
(bad)
cmp
int3
and
cmp
and
hlt
mov
wrmsr
mov
jmp
test
mov
xchg
push
cvttps2pi
inc
out
push
into
jae
movs
div
ss
mov
inc
out
mov
dec
pop
iret
rcl
sub
imul
pushf
mov
mov
or
add
in
xlat
mov
jmp
movs
not
xor
mov
mov
ret
es
dec
movs
add
sti
fucomi
add
js
push
mov
(bad)
sub
shl
push
(bad)
push
and
xchg
mov
inc
mov
lods
jp
outs
js
imul
add
add
int
aad
inc
je
outs
cmp
ret
cld
ss
adc
call
sub
and
cld
cld
mov
dec
mov
sub
int
in
movs
pop
or
js
add
inc
mov
es
xchg
cdq
out
and
out
mov
add
dec
call
ret
push
ins
add
mov
add
add
add
sti
sti
mov
or
dec
mov
push
call
mov
inc
das
shl
in
push
ds
mov
cld
(bad)
push
mov
cdq
pop
xor
push
sti
jne
jp
call
nop
sti
jne
cdq
into
add
jp
call
adc
xchg
jp
add
add
mov
push
xlat
push
call
push
rol
scas
test
push
popf
pop
fdiv
jne
dec
sar
mov
sti
mov
lds
fldcw
dec
sti
fwait
scas
xor
inc
and
jmp
push
popf
push
(bad)
jmp
cmp
sub
int
mov
popa
dec
add
in
push
push
shr
fcomp
fld
lods
test
ja
cmps
jmp
add
inc
mov
loopne
sar
fxch
sub
dec
inc
mov
jbe
js
cld
mov
add
inc
es
sub
es
mov
call
cmp
pop
out
daa
movs
jae
xor
inc
pushf
js
enter
call
add
pop
xchg
fmulp
sbb
push
inc
add
cwde
or
fnstsw
and
shl
leave
pop
out
es
adc
push
pop
ss
pop
fild
fld
mov
aas
rol
adc
jb
cmp
or
push
arpl
jmp
jl
cld
gs
push
loopne
dec
xchg
sub
add
add
sub
ret
sbb
stc
jae
stc
loop
pushf
(bad)
stc
sub
int
stc
lea
jmp
gs
sub
stc
cld
inc
adc
inc
int
xchg
push
sahf
js
fldcw
inc
inc
add
xchg
sbb
push
std
imul
pop
add
iret
add
add
sti
je
push
sti
je
push
call
jmp
shl
daa
sub
std
or
sti
ss
mov
add
sbb
push
and
call
je
pop
pop
fs
loopne
lea
push
adc
test
add
movs
mov
dec
push
jmp
jge
add
add
pusha
inc
je
pop
inc
adc
push
sar
push
inc
or
push
mov
or
pusha
retf
pop
mov
sub
inc
popf
fadd
lods
mov
pop
scas
adc
mov
in
adc
xor
jno
mov
mov
cmp
jno
sub
mov
or
(bad)
cmp
je
out
mov
data16
les
add
add
push
add
arpl
xor
inc
idiv
inc
push
push
xchg
sbb
mov
or
imul
pop
add
(bad)
es
mov
cdq
shl
add
(bad)
scas
jmp
clc
fistp
xor
out
call
push
cs
adc
mov
popa
retf
mov
pop
xor
out
jge
out
ins
dec
xchg
mov
pop
pop
cmps
popa
fild
dec
xor
add
push
fcmovne
(bad)
stos
add
xor
clc
jo
cld
pop
add
dec
in
mov
and
and
sbb
inc
test
sbb
retf
or
retf
nop
out
out
push
idiv
arpl
cwde
pop
(bad)
fadd
add
push
xchg
shl
sbb
into
push
push
jo
and
(bad)
sbb
and
jg
pop
in
add
cmc
mov
int
cmp
retf
mov
dec
jo
sbb
(bad)
aas
cmp
mov
hlt
xlat
(bad)
cmp
or
call
pop
and
pop
pop
push
adc
add
std
cmp
or
and
mov
adc
xor
aam
sti
ss
add
jg
jg
aas
stos
mov
push
sbb
mov
retf
cmc
je
leave
sbb
std
imul
std
and
ja
(bad)
jmp
jmp
jle
cwde
mov
xchg
cmp
inc
add
add
sbb
movs
push
or
sbb
mov
repz
mov
fs
jbe
sbb
add
fcom
add
scas
cmps
in
popf
sub
xchg
mov
add
int
shr
jne
and
imul
call
push
scas
cmp
jmp
mov
bound
add
inc
jb
into
stc
mov
call
push
pop
sub
inc
out
es
inc
pop
mov
bound
pop
add
lea
xor
inc
nop
xor
hlt
jge
out
and
jo
xor
add
or
mov
fiadd
cmps
and
mov
xor
clc
cmp
mov
retf
jo
mov
call
add
push
jecxz
jne
adc
jo
lds
xchg
add
and
jb
adc
pop
or
xchg
lods
fstp
mov
or
loopne
gs
xchg
xor
or
push
inc
lods
mov
adc
mov
leave
xchg
jmp
in
inc
fstp
aas
add
cld
les
and
aas
mov
or
nop
repnz
fidiv
dec
or
stos
and
adc
jge
xchg
mov
cmc
cmp
mov
inc
hlt
inc
mov
inc
pop
cmp
not
fstp
add
pop
xchg
dec
mov
mov
mov
add
xchg
cli
add
rol
mov
push
cmc
pop
mov
or
fsubr
xchg
dec
dec
or
cld
hlt
cmp
aas
xchg
cs
pop
test
or
adc
push
xchg
adc
inc
xor
push
call
lahf
mov
sti
push
adc
xchg
pop
jecxz
push
add
jmp
and
jnp
dec
sbb
lea
jbe
neg
cli
dec
ds
jl
daa
fild
mov
fld
xchg
add
es
cmp
push
mov
xchg
jbe
pop
pop
jbe
neg
(bad)
jb
gs
cmp
jmp
sub
add
stos
sub
cmp
inc
pushf
add
hlt
sar
jge
imul
xchg
jmp
outs
test
push
pop
dec
imul
sbb
ret
addr16
xchg
in
hlt
jmp
xlat
test
or
pop
imul
sub
mov
mov
mov
inc
test
dec
out
fild
add
sub
aad
out
push
fstp
lea
inc
add
fst
sbb
add
cmc
test
in
sbb
xchg
(bad)
mov
ror
mov
add
mov
jecxz
sub
(bad)
pop
cdq
mov
xchg
loopne
push
xchg
aam
jo
xchg
fstp
jb
add
add
call
outs
xchg
push
mov
mov
jmp
dec
add
mov
mov
inc
dec
loopne
push
icebp
cmp
xchg
jl
xor
xor
sahf
and
xor
add
adc
push
mov
push
mov
aam
(bad)
mov
mov
inc
das
rol
add
in
push
mov
ret
adc
add
push
dec
push
push
push
std
in
mov
push
xchg
hlt
adc
add
sub
inc
dec
dec
mov
mov
mov
pop
leave
mov
add
inc
out
iret
jmp
sub
add
mov
push
add
dec
fs
repz
add
scas
rcl
push
mov
push
inc
jnp
fs
sub
jns
sub
jno
sub
adc
xor
cld
mov
add
dec
sub
out
movs
dec
and
movs
inc
and
mov
add
inc
out
add
or
imul
lods
push
es
movs
dec
sub
lods
aaa
and
adc
ja
mov
mov
mov
rol
cli
jbe
ss
pop
add
and
mov
push
push
(bad)
mov
mov
outs
lahf
add
xchg
cmp
in
loope
imul
iret
adc
in
mov
push
jno
push
push
sbb
sub
and
add
add
add
ds
movs
lock
test
inc
or
jmp
fst
add
js
imul
xchg
stc
jne
cmp
jecxz
adc
sbb
stc
daa
(bad)
cmp
add
std
cmp
mov
les
push
xchg
std
sbb
fsubr
add
add
xor
add
dec
call
and
call
jne
sub
add
mov
mov
push
pushf
sti
call
adc
jne
inc
(bad)
push
addr16
or
add
adc
aas
push
aaa
inc
aas
inc
mov
ss
adc
jg
fwait
dec
aaa
inc
xchg
dec
fnstenv
sti
pop
or
pop
jbe
adc
adc
sub
push
xor
into
xor
(bad)
das
rcl
jmp
xchg
cwde
jp
jle
fcom
sbb
jmp
jge
cs
fistp
in
jnp
inc
push
ds
es
sti
popf
iret
xor
out
fs
or
pop
fdivr
add
jge
scas
cwde
push
mov
dec
inc
add
add
es
arpl
mov
popf
xor
pop
jecxz
dec
fisub
test
jge
stos
jbe
cmp
or
dec
inc
add
cld
push
adc
sub
jae
fsubr
repz
mov
(bad)
mov
sub
test
daa
es
out
sbb
jg
(bad)
fdiv
std
sbb
das
dec
adc
lds
lock
in
mov
in
icebp
test
stc
cmp
cld
scas
xchg
or
loopne
scas
cmp
inc
jae
adc
jb
cmp
mov
jmp
add
test
imul
jl
jno
das
mov
ds
dec
dec
jmp
mul
add
in
xchg
std
repz
inc
fdiv
xor
imul
inc
add
aam
push
inc
(bad)
jecxz
pushf
add
jo
jns
int
dec
mov
fcom
cmp
hlt
inc
add
add
xchg
popf
xchg
push
mov
cmp
jl
add
or
cmp
std
dec
stos
push
sar
inc
cld
aam
or
xchg
pop
or
mov
dec
fistp
lds
shl
inc
cmp
dec
or
dec
mov
jbe
or
ret
out
mov
in
dec
inc
push
mov
push
push
mov
sub
dec
es
adc
fcompp
xor
xchg
(bad)
cld
es
xchg
mov
and
(bad)
aad
mov
push
ss
(bad)
mov
jbe
jg
daa
fld
sub
retf
cmp
adc
push
scas
cwde
sub
xchg
fidivr
push
jae
(bad)
cmp
cwde
dec
mov
std
mov
dec
std
mov
jmp
jnp
retf
into
(bad)
mov
mov
in
pop
pop
in
popa
rcr
mov
add
pop
ret
add
cmp
pop
rcl
and
jg
add
jg
add
or
iret
cmps
addr16
aad
div
mov
out
out
jle
mov
cmovl
add
adc
fsub
pop
loop
fldcw
cs
enter
push
cmps
add
sbb
jmp
cmp
add
loope
cmp
ins
or
xor
loopne
call
adc
ret
jp
sub
data16
jae
movs
add
ss
loope
jg
call
mov
inc
adc
inc
or
jmp
leave
adc
arpl
pop
das
imul
push
mov
jb
fadd
fisttp
pop
push
or
mov
loope
call
into
mov
into
pop
push
mov
(bad)
jecxz
(bad)
push
xor
mov
dec
push
call
sti
jne
xor
aas
xor
cmps
test
call
call
or
jne
fbstp
hlt
mov
mov
inc
inc
xchg
pop
inc
(bad)
xchg
or
call
test
or
xor
sti
jne
inc
(bad)
push
pop
aad
add
add
add
in
push
movs
cmps
xor
lods
scas
xor
imul
mov
sub
movs
das
sbb
lods
daa
sbb
arpl
sub
std
inc
jge
lock
jge
movs
mov
cmc
shl
arpl
out
scas
aas
xor
inc
xchg
iret
adc
sbb
in
jge
cs
iret
jecxz
cmps
and
fcmovnu
jnp
and
or
es
popf
shl
mov
ins
cld
jno
push
sbb
mov
es
jo
ror
xchg
sub
xchg
add
inc
out
mov
sub
cmp
int
sub
pop
loop
out
int3
inc
sub
pop
in
fstp
out
idiv
pop
mul
cmc
dec
pusha
test
add
add
add
pop
pop
jae
es
repz
cmps
pop
jg
ror
dec
pusha
jmp
inc
bound
pusha
inc
push
out
xchg
cmp
mov
retf
jp
or
cmp
add
add
jb
in
sub
iret
scas
(bad)
stos
dec
push
fcomp
pop
(bad)
cmp
mov
cmp
leave
dec
ror
mov
enter
add
add
pop
cmp
int
out
jne
neg
je
test
inc
cmp
and
ret
jp
and
cmp
push
mov
pop
jmp
pop
add
fadd
or
dec
push
mov
add
sbb
or
popa
dec
call
sti
push
dec
inc
and
xlat
push
pushf
xor
cmp
add
mov
pop
aam
mov
xor
in
add
rol
push
aad
cmp
mov
out
or
hlt
call
xor
push
xchg
pusha
jno
add
add
xchg
push
icebp
dec
fcom
xchg
sub
clc
dec
xchg
in
jb
aaa
dec
sti
cmps
int3
jmp
mov
mov
jmp
adc
sub
hlt
jmp
jecxz
mov
jmp
sar
fincstp
mov
sub
lods
cmps
hlt
mov
jns
popf
and
inc
sbb
call
movs
adc
mov
jns
inc
pop
int
jmp
js
ss
sub
and
das
add
and
xchg
lods
jp
dec
add
lds
add
add
xchg
add
add
movs
sbb
lods
inc
mov
jge
out
adc
xchg
add
test
leave
stos
aaa
mov
jl
fsubr
stc
sbb
test
scas
xchg
jmp
pop
jmp
dec
ds
sub
xlat
jp
dec
mov
jp
fcomi
push
in
imul
pop
inc
push
test
jns
rol
mov
xchg
outs
shl
sub
fadd
and
fld
fadd
inc
xchg
hlt
jb
inc
and
inc
and
xor
jo
clc
cmp
loopne
mov
ret
shl
pop
aam
mov
in
adc
cs
loope
sbb
out
push
sbb
xor
inc
je
mov
or
(bad)
cli
pushf
jmp
add
pop
rol
mov
test
sub
(bad)
repz
mov
sbb
add
add
jmp
add
(bad)
or
(bad)
mov
jo
jg
sti
add
xchg
xor
pop
add
(bad)
aaa
or
push
xchg
adc
xchg
mov
inc
cdq
inc
mov
mov
jg
cmp
pop
sbb
(bad)
pop
add
adc
add
and
es
neg
xor
fdiv
call
and
xchg
and
shr
ds
repz
add
xor
xor
daa
push
cmps
pop
scas
cmps
and
cmc
and
arpl
loopne
popf
and
ja
sbb
daa
in
(bad)
out
movs
cmps
adc
lods
lahf
adc
inc
xchg
repz
adc
pop
sub
popf
daa
sub
sti
xchg
repz
pop
adc
inc
jb
enter
es
xor
add
add
xor
mov
jno
fwait
adc
(bad)
pop
rcl
or
bound
out
and
dec
jne
inc
inc
lods
or
xchg
movs
shl
cld
loope
adc
cmp
mov
es
push
lock
test
aad
xlat
lahf
cmp
jmp
rol
jmp
fucomp
cwde
and
fisttp
pop
or
inc
xor
loop
push
or
rcl
imul
das
retf
inc
in
sub
pusha
outs
dec
cmp
dec
xchg
add
cld
mov
loopne
pop
sub
retf
dec
in
adc
dec
in
mov
adc
mov
sbb
iret
and
ins
imul
add
ror
adc
ds
lock
retf
dec
jmp
xchg
sub
in
push
cdq
enter
inc
enter
mov
test
fsub
xor
add
dec
xor
data16
les
mov
scas
jg
jg
or
jge
lock
add
adc
xor
push
ret
sub
mov
inc
test
retf
inc
in
inc
mov
jl
push
cdq
bound
pop
mov
mov
jl
mov
cmp
js
or
xchg
test
jmp
add
dec
mov
sbb
pop
xor
or
repnz
or
addr16
xchg
test
add
add
pop
cwde
das
and
adc
sub
xor
push
mov
scas
lahf
pop
or
es
das
cmps
and
jae
push
adc
in
xchg
popa
in
dec
into
jmp
into
mov
popf
inc
ss
dec
or
dec
lods
das
call
fs
out
and
add
shl
add
lahf
add
test
lsl
xchg
inc
out
scas
jle
mov
jmp
inc
daa
hlt
mov
mov
jb
xor
int3
fild
dec
daa
cmps
sahf
adc
movs
ds
mov
out
cmp
pop
dec
loop
pop
push
adc
fcom
out
fld
mov
inc
out
scas
or
inc
sub
add
add
add
sub
mov
pop
(bad)
int3
je
jl
add
sahf
xchg
mov
sub
xor
add
and
or
fmul
xor
add
xor
dec
and
inc
je
sub
inc
jmp
sub
inc
call
lods
sub
(bad)
fmul
pushf
and
xor
sub
shl
xchg
and
inc
sbb
mov
adc
retf
loope
ret
enter
retf
icebp
add
loope
dec
add
retf
loope
ret
leave
dec
push
aam
dec
mov
dec
jg
sub
or
xor
dec
push
je
call
je
or
rol
je
add
(bad)
push
mov
sti
jne
mov
hlt
mov
and
jmp
lods
mov
std
xor
inc
(bad)
lods
mov
xor
sbb
(bad)
into
sbb
push
mov
xchg
jo
mov
mov
std
jns
(bad)
sti
stos
popf
xchg
or
cwde
lea
mov
add
add
(bad)
repz
sub
mov
fadd
sti
xor
push
inc
fidiv
std
sbb
jae
pop
call
xor
mov
mov
lea
lods
sbb
or
cs
lea
mov
push
neg
shl
mov
(bad)
es
and
ffree
mov
adc
add
add
call
push
aaa
add
mov
es
mov
sbb
mov
pusha
push
scas
xchg
or
jns
sub
jns
mov
stc
cli
test
cmp
cmp
movs
(bad)
in
pusha
(bad)
call
and
inc
pushaw
in
or
add
inc
(bad)
lods
sbb
data16
cmp
jmp
aad
push
ficom
lds
adc
inc
add
jbe
mov
je
xchg
sub
cld
sahf
add
test
in
test
and
mov
bound
ss
dec
data16
mov
sbb
mov
add
add
sti
mov
or
push
push
or
in
inc
and
mov
clc
std
je
cmp
not
cli
rol
inc
xchg
pop
add
enter
jg
add
jne
mul
cmp
ret
inc
push
inc
add
aas
add
sub
add
add
add
inc
add
dec
in
mov
cmp
aam
sub
jmp
mov
fimul
mov
pop
std
fwait
lahf
in
mov
call
call
cmp
mov
push
fiadd
add
pop
mov
loop
lods
loopne
ds
pop
fdivr
adc
sub
and
in
sar
pop
jbe
add
add
xchg
into
cld
cmp
aas
es
mov
add
pop
(bad)
fadd
out
daa
fld
push
sub
lock
cmp
lock
es
mov
add
popa
inc
arpl
dec
in
out
js
ds
cmp
and
sub
sti
aaa
ss
sbb
call
inc
out
xor
sub
xor
add
and
out
sub
xor
jp
cmp
icebp
xor
add
rol
add
iret
out
jo
shl
add
out
es
bound
and
(bad)
or
in
or
jmp
ds
add
out
dec
data16
call
ins
push
sbb
adc
xchg
inc
call
add
add
bound
pop
sub
add
outs
(bad)
sub
inc
push
bound
dec
in
test
inc
add
sar
in
mov
mov
fdivrp
into
add
and
int
in
or
cmps
cmp
mov
jmp
jb
dec
add
mov
xor
std
out
and
or
pop
into
cld
call
adc
int3
push
add
(bad)
mov
int
push
into
cld
(bad)
fdivr
in
jle
push
cmp
std
stos
ss
mov
mov
mov
push
xor
add
push
cwde
mov
mov
add
aam
mov
add
fadd
fist
add
ficom
add
cli
sub
mov
test
sbb
or
add
or
in
fs
push
outs
std
jmp
pop
(bad)
mov
xor
sti
inc
movs
add
ds
mov
es
jnp
pusha
mov
xchg
xchg
loop
rcr
or
fld
or
push
jl
xor
push
fld
and
mov
cmp
ja
mov
scas
add
out
in
es
sti
rep
sbb
enter
jmp
cmp
shr
stc
retf
ror
fstp
adc
out
cwde
jle
mov
popa
(bad)
shr
sub
push
(bad)
inc
dec
mov
add
inc
mov
mov
inc
add
sub
imul
add
fdiv
(bad)
mov
xor
inc
repnz
cmp
loop
pop
loop
ret
test
mov
dec
jp
sub
jae
sub
cld
pavgw
inc
dec
sbb
and
cmp
add
push
or
mov
dec
sahf
add
ins
retf
jmp
pushf
enter
push
or
add
or
jmp
in
mov
xor
add
xor
cld
push
dec
or
std
(bad)
adc
add
fadd
dec
xchg
rcl
sub
dec
nop
sti
xlat
int3
sbb
sbb
test
sar
add
add
inc
xchg
cmovne
push
lods
sub
inc
pop
xchg
das
rcl
call
idiv
sar
sti
adc
ror
or
les
sti
adc
adc
or
add
hlt
sbb
cld
test
ins
and
sbb
std
stc
clc
mov
out
jp
dec
push
fdivr
ret
pop
xchg
add
adc
add
loop
sar
pop
std
sub
std
xor
add
fld
add
fld
mov
sar
jne
adc
nop
or
stos
mov
nop
pop
add
mov
xor
cmovae
(bad)
lds
movs
cwde
sbb
pop
mov
add
mov
lea
es
sub
push
repz
fsubr
adc
jno
sub
ds
inc
add
fidiv
inc
shl
es
push
(bad)
sub
mov
xor
fiadd
es
pop
mov
es
scas
add
jl
xchg
inc
out
pop
aaa
imul
mov
es
mov
popf
es
jae
mov
bound
sar
inc
pop
adc
add
mov
mov
enter
cmp
add
(bad)
cld
mov
sub
or
cmp
jmp
cli
xchg
loope
loope
repnz
test
sub
lods
(bad)
(bad)
call
stc
rcr
and
sub
inc
mov
mov
ss
add
gs
add
cmp
or
jg
mov
jnp
dec
in
jae
imul
inc
add
shl
sti
inc
add
mov
cmp
dec
ss
test
inc
add
cld
in
or
jle
repz
stos
adc
mov
or
adc
ret
mov
or
inc
das
jno
and
fcomi
test
jg
add
pop
dec
rol
mov
mov
lds
mov
or
fadd
xor
rcl
addr16
inc
movs
cmp
and
out
lods
pop
adc
push
pop
and
clc
pop
cmp
sub
xor
mov
inc
movs
mov
pop
or
adc
cs
movs
in
repz
sub
and
addr16
push
pop
inc
test
stos
je
pop
cs
movs
ins
les
(bad)
jnp
out
push
add
imul
out
pop
mov
add
push
cmp
cdq
mov
inc
out
cmovns
adc
(bad)
jno
jmp
inc
out
mov
fidiv
adc
(bad)
sub
ret
push
in
dec
push
mov
dec
iret
sub
leave
add
jmp
in
ss
ror
xchg
inc
out
cmps
inc
pop
add
fldenv
js
(bad)
lahf
mov
sbb
add
add
lds
es
out
call
push
add
sar
mov
add
icebp
fs
pop
loop
int3
pop
push
aad
out
sub
cld
jb
dec
push
cmp
mov
sub
(bad)
pop
jmp
inc
data16
lea
inc
jmp
int
xchg
inc
cwde
inc
sub
sbb
inc
or
fiadd
add
add
inc
mov
push
clc
test
test
repz
fsub
sub
icebp
mov
dec
cmp
sub
retf
hlt
jne
dec
inc
clc
inc
sti
hlt
imul
mov
pusha
mov
mov
inc
inc
pop
call
ror
aam
add
push
popf
clc
call
cmp
je
push
jo
add
int3
cmp
dec
add
test
retf
add
pmullw
add
cmc
in
or
iret
mov
add
dec
cld
loopne
sub
cld
mov
sti
add
inc
mov
out
cmps
inc
scas
in
mov
sbb
or
push
cmp
hlt
push
add
stos
push
sbb
add
(bad)
jmp
lods
das
stc
out
aaa
pop
std
stos
jmp
movs
pop
hlt
call
dec
add
add
outs
mov
or
inc
lods
jns
lods
cmp
add
cli
hlt
sbb
add
(bad)
sti
mov
cli
arpl
std
stc
int
jge
or
shr
stos
sbb
mov
add
add
int
mov
or
mov
out
or
dec
es
mov
pop
test
hlt
sahf
mov
adc
mov
dec
xchg
mov
test
sti
cs
cmp
dec
dec
xor
cmps
cmp
add
leave
fisttp
mov
out
and
out
xor
int3
sub
movs
cmp
xor
jmp
add
or
and
cld
shl
aaa
sbb
mov
cmps
xor
sub
ret
and
es
jle
mov
mov
sbb
enter
ds
xor
imul
xor
lahf
idiv
cmp
sub
add
dec
data16
cld
pop
pop
jecxz
mov
jmp
jb
mov
cmp
pop
cmp
xor
jle
mov
pop
sar
inc
inc
ret
or
add
cmp
(bad)
cmp
adc
xor
or
cld
out
dec
add
add
call
call
push
call
jmp
cmp
call
cmp
call
jne
inc
jno
addr16
jmp
pop
pop
xchg
add
add
cmp
test
dec
mov
shl
cmp
mov
call
daa
gs
xor
xor
scas
in
push
cmps
and
jl
(bad)
cmc
int
inc
sub
in
push
cmps
add
jp
loope
(bad)
cmp
dec
sar
add
and
inc
std
es
add
gs
push
pusha
movs
add
fistp
movs
mov
pushf
call
imul
mov
(bad)
push
xor
push
inc
es
and
push
aad
jae
es
out
lahf
inc
xor
add
inc
bound
jl
sbb
es
jmp
hlt
lock
stos
pop
jno
imul
sbb
shl
or
mov
ret
push
add
cdq
push
sbb
jp
test
sbb
ja
sahf
mov
mov
cld
sahf
mov
dec
pop
push
pop
jbe
jno
mov
add
add
iret
sub
scas
dec
aaa
add
sahf
xchg
cmp
add
(bad)
jbe
push
scas
push
mov
xchg
sahf
pushf
xor
adc
aam
push
inc
jmp
mov
mov
inc
jmp
xor
jb
iret
dec
inc
je
jmp
ds
mov
jns
inc
add
sbb
add
aaa
add
shl
out
add
sub
les
sub
or
adc
add
and
add
es
add
mov
in
push
retf
add
rcl
test
cmp
sub
add
test
data16
nop
jno
jmp
xchg
jb
cmp
test
inc
mov
mov
adc
int
add
and
push
call
or
add
push
arpl
(bad)
inc
mov
push
sti
adc
(bad)
and
lea
push
xchg
dec
dec
enter
or
(bad)
(bad)
(bad)
xor
jmp
in
push
jb
and
sbb
push
or
std
stos
add
push
stos
push
dec
mov
add
(bad)
retf
inc
cs
call
mov
outs
mov
sub
dec
or
push
add
fs
add
ret
push
jae
stos
call
add
(bad)
fiadd
push
lods
sahf
or
in
xor
add
inc
inc
(bad)
add
int3
sub
or
add
sub
mov
inc
jne
out
inc
stos
out
cmps
and
scas
add
add
lods
push
adc
stos
hlt
xor
add
lea
inc
retf
add
retf
mov
add
and
cld
sub
jmp
stos
jmp
and
mov
push
call
push
fs
dec
std
stc
dec
push
jge
and
add
add
push
xor
or
in
pop
mov
jb
cmp
cld
jmp
mov
cld
jmp
es
push
mul
sub
aas
int
pop
aas
mov
inc
jns
mov
inc
jne
mov
inc
pushf
test
ret
inc
dec
mov
add
test
leave
inc
lods
(bad)
std
sbb
or
data16
pop
les
data16
std
and
or
data16
mov
data16
shl
daa
mov
test
retf
add
jo
dec
jle
push
pop
adc
add
xor
test
jmp
or
outs
cmp
add
lods
in
es
and
call
cmp
inc
add
imul
ret
xchg
lds
xor
cld
dec
sub
inc
xor
dec
stos
out
xor
add
mov
push
call
movs
inc
add
popf
pop
or
rcl
test
stos
mov
ret
out
ror
add
add
ret
shr
push
cld
leave
and
into
gs
(bad)
mov
lahf
push
call
rol
mov
fisttp
mov
push
jnp
leave
fwait
pop
test
inc
rcl
test
jno
inc
addr16
inc
pushf
xor
mov
jbe
inc
out
and
std
(bad)
jp
lods
cmp
ret
dec
mov
call
push
mov
mov
hlt
fdivr
retf
sar
mov
add
cdq
push
lock
push
test
pop
inc
mov
gs
test
and
jmp
retf
imul
fldenv
stos
mov
scas
mov
imul
add
add
and
xor
cmp
sub
std
ja
cli
mov
xchg
adc
ror
scas
adc
std
stos
popf
push
das
gs
or
xchg
jnp
in
mov
push
pusha
lods
cld
pushf
mov
lods
add
jbe
mov
push
pushf
xchg
pop
idiv
mov
psubw
int
xchg
jno
dec
inc
jb
pop
ret
jge
dec
mov
xchg
pop
idiv
into
jne
test
popa
out
add
push
ret
inc
or
dec
outs
fstp
add
mov
rcr
mov
shr
inc
ret
add
cmp
xchg
push
test
jno
mov
inc
out
or
outs
loop
add
sahf
or
es
mov
ror
push
icebp
aaa
aas
call
daa
fwait
jl
cli
movs
mov
data16
call
aas
call
xor
add
stc
push
add
movs
add
jmp
mov
or
shr
std
cmp
push
inc
es
adc
fwait
mov
adc
scas
inc
add
add
es
mov
add
add
shr
cmp
mov
dec
mov
jmp
mov
cli
ret
jg
aaa
out
push
inc
jb
shl
adc
sbb
inc
mov
xchg
sti
mov
hlt
in
ret
rcl
xor
and
dec
mov
rcl
sbb
cs
daa
add
mov
xchg
stos
push
push
mov
add
add
mov
or
adc
adc
arpl
xchg
adc
lea
test
dec
jle
sbb
add
push
inc
pop
sub
lock
pop
sbb
mov
sub
sub
cmp
aam
sbb
loope
sub
test
test
in
addr16
call
jbe
mov
inc
add
sbb
and
je
ins
mov
dec
mov
fcomi
scas
adc
add
ins
in
jno
dec
loopne
add
dec
mov
aas
lods
ror
mov
iret
stc
call
sti
adc
cmp
mov
inc
add
add
lds
push
sbb
lods
push
cli
sub
dec
inc
mov
jge
sub
push
or
inc
ror
adc
xor
push
fwait
push
push
mov
jl
(bad)
add
fwait
push
pop
lods
ficomp
jmp
retf
shl
dec
mov
sbb
sbb
fwait
add
add
add
data16
cwde
or
push
add
icebp
es
xor
test
inc
call
not
xor
push
pop
mov
cmps
xor
inc
sub
xor
fisttp
adc
mov
and
out
jle
out
sbb
cld
mov
jmp
or
cmc
cld
inc
test
add
add
lods
in
lods
fs
ret
push
sti
adc
es
jmp
sar
push
jb
scas
mov
mov
inc
out
or
mov
(bad)
lock
rcr
mov
nop
fwait
stc
add
inc
adc
outs
and
paddusw
out
arpl
sub
arpl
ins
out
ins
les
lods
pop
or
and
(bad)
mov
pusha
mov
js
and
add
push
lods
call
jp
adc
fisub
call
jb
(bad)
cmc
aad
mov
call
test
lahf
mov
sbb
and
test
sub
dec
mov
mov
test
cmc
clc
jmp
sahf
push
cld
jb
adc
cwde
sub
sti
pop
jb
lods
pop
fs
add
cmp
jb
add
jl
xchg
ds
cld
add
push
(bad)
ds
add
inc
jg
mov
jge
push
aaa
jo
inc
iret
push
push
pop
(bad)
aas
call
mov
repz
idiv
je
add
add
cmp
adc
adc
cmp
mov
sub
dec
imul
scas
clc
cli
push
sub
scas
jo
jnp
add
adc
or
dec
or
push
es
push
inc
stos
fdiv
popf
call
jno
push
cmp
pop
add
loopne
push
ret
push
mov
ins
jge
push
jno
call
dec
ret
lods
sub
(bad)
fwait
jge
fwait
lock
dec
rcl
dec
pop
cli
push
sub
sub
lods
cdq
push
std
mul
hlt
and
mov
(bad)
jno
push
mov
or
retf
clc
xor
icebp
or
pop
fld
inc
pop
sbb
div
mov
mov
jle
mov
add
sub
fimul
sub
jbe
mov
or
adc
xor
adc
jmp
(bad)
jle
mov
fisttp
sahf
inc
mov
(bad)
pop
or
pop
lahf
xchg
fistp
inc
out
not
stc
into
cli
test
cmp
out
jns
xchg
outs
into
push
fwait
cld
sahf
js
push
(bad)
inc
out
sub
cmovl
add
add
call
(bad)
call
mov
mov
mov
cld
mov
cmp
pop
xchg
mov
data16
cs
jo
jecxz
imul
lds
pop
ret
xlat
test
outs
xor
and
sbb
arpl
not
push
pop
and
add
add
xchg
nop
es
jb
jbe
or
and
cmp
add
cmps
push
and
dec
mov
fs
mov
pop
mov
add
inc
xor
cmp
(bad)
push
mov
shr
push
inc
add
or
aas
add
lock
inc
or
jno
add
cmp
or
adc
cli
add
push
sti
jne
daa
jp
pop
cs
jmp
mov
neg
sti
mov
mov
inc
dec
mov
mov
imul
hlt
push
es
jbe
jle
(bad)
popa
xor
mov
lods
fldenv
fwait
add
jbe
add
into
mov
inc
and
out
add
cld
jbe
mov
push
or
xchg
jp
jg
push
(bad)
in
cld
push
into
jbe
lods
and
loopne
fldenv
mov
ss
jns
xor
fadd
push
push
call
lods
fsubr
pop
clc
loope
shl
repnz
inc
lahf
add
inc
sbb
and
inc
es
push
jle
std
add
mov
out
popf
(bad)
jmp
inc
jb
movs
movs
push
add
ds
add
scas
jl
ret
pushf
adc
or
fiadd
sti
pop
je
call
push
cmps
stos
shl
les
jmp
les
sub
rcl
inc
ror
jp
test
and
mov
mov
and
add
add
aaa
sbb
inc
add
dec
push
or
jmp
movs
lods
sub
mov
sbb
xor
test
dec
xchg
dec
cmp
js
and
pop
jle
movs
call
fcmovb
jmp
and
test
enter
jecxz
xchg
jg
repnz
add
pop
jle
jmp
cmps
jl
and
xor
or
scas
ss
(bad)
cmc
aas
or
add
push
xchg
stc
mov
add
and
push
jl
mov
sbb
pop
jb
jae
jbe
(bad)
cmc
cmp
leave
jge
cmova
test
loopne
sbb
add
add
outs
je
aas
jle
adc
addr16
fmul
add
add
sub
and
and
cld
mov
sub
xlat
adc
add
repnz
and
ins
xor
pop
xchg
jne
dec
pushf
clc
mov
sub
xlat
mov
test
and
in
xor
stc
and
or
add
add
sub
add
push
cld
jg
stos
ins
add
fs
mov
add
mov
add
mov
add
mov
add
xchg
ins
add
xchg
inc
test
xchg
mov
add
mov
add
mov
add
cmps
add
mov
add
cmps
add
mov
add
mov
cmps
add
int3
cli
xchg
imul
std
int3
stos
adc
int3
xchg
sti
fcmovne
div
retfw
sub
push
retf
and
push
retf
sub
inc
retf
and
xor
sub
sahf
pop
add
mov
or
cmp
push
out
sbb
push
pop
popa
cmp
les
add
rol
movs
cdq
push
fstp
and
sbb
cmp
aad
retf
int
jne
mov
add
retf
and
or
std
push
adc
in
ins
enter
test
add
push
add
rol
(bad)
mov
leave
addr16
cmc
adc
jo
addr16
push
pusha
push
pop
es
jnp
inc
retf
add
mov
and
mov
and
push
pushf
or
pop
push
add
movs
and
loopne
inc
jne
into
or
dec
dec
add
inc
cmovo
or
iret
and
fcom
inc
add
hlt
cmp
pop
and
add
or
pop
sti
test
and
dec
inc
lods
jg
jnp
xchg
mov
js
dec
cld
mov
inc
add
xor
leave
inc
add
(bad)
mov
jb
test
add
add
mov
or
mov
(bad)
xor
or
lods
cmp
add
pusha
lods
xor
inc
or
in
ins
sub
loopne
adc
lock
dec
arpl
push
loopne
mov
jne
test
mov
inc
adc
aas
adc
inc
scas
test
es
std
dec
popf
cmp
sub
add
sub
xchg
add
call
mov
jmp
add
stos
jbe
out
add
add
add
push
call
cli
push
push
fld
push
dec
mov
ret
stc
add
mov
xor
xor
xchg
je
fmul
mov
push
inc
sbb
out
imul
adc
push
jmp
(bad)
dec
out
scas
pop
fistp
jmp
inc
ss
add
add
xlat
jno
pop
add
ins
lea
icebp
pop
icebp
and
pop
sbb
and
push
sbb
out
dec
or
sbb
and
push
add
dec
adc
and
or
or
push
dec
in
rcr
and
movs
inc
cmp
ins
adc
or
cmp
popf
sbb
popf
adc
mov
or
scas
or
daa
and
add
call
sub
mov
or
dec
and
sbb
add
add
jle
(bad)
mov
nop
add
add
jbe
cld
push
pushf
push
jmp
dec
pop
std
add
cmp
pop
into
inc
mov
inc
pop
cmp
dec
pop
inc
pop
lds
and
pop
inc
and
nop
cmp
inc
add
cli
fwait
cmp
mov
sub
add
fwait
cmps
jbe
inc
xor
test
aad
or
jmp
bound
add
push
add
bound
adc
sub
add
cmp
cld
cmps
and
call
clc
fidivr
or
call
push
in
cmps
push
dec
or
arpl
jmp
inc
jne
lods
cmp
add
add
xchg
jge
daa
lods
add
loopne
sti
out
js
add
mov
lods
dec
adc
ins
sbb
(bad)
imul
add
add
or
repz
(bad)
sub
dec
dec
mov
and
jecxz
call
add
les
adc
dec
inc
xor
inc
out
mov
cmps
popf
jmp
and
push
and
ret
pop
and
mov
ret
(bad)
(bad)
adc
retf
nop
mov
ret
ret
and
fsubr
and
xor
shr
inc
add
cmp
ins
lods
gs
gs
imul
and
mov
clc
cmp
(bad)
(bad)
fstp
(bad)
clc
mov
pop
test
adc
rol
(bad)
adc
adc
iret
sub
gs
push
jmp
cmc
and
adc
adc
ror
(bad)
adc
fistp
add
dec
(bad)
mul
dec
sar
inc
mov
pusha
mov
stos
data16
inc
mov
fs
inc
jecxz
addr16
or
les
inc
popa
shl
inc
lods
(bad)
dec
sub
aaa
shl
in
mov
add
aas
jns
je
ret
mul
cmp
test
xor
jno
push
or
(bad)
pop
pop
add
test
dec
inc
mov
in
mov
push
je
adc
add
adc
aas
cdq
or
es
aad
lods
cmp
sahf
test
sbb
add
cs
or
mov
sbb
pop
xor
dec
or
lods
sbb
and
and
lods
movsx
out
push
fild
daa
sub
dec
sub
inc
movs
hlt
inc
je
aad
sub
add
je
in
sbb
aad
adc
add
pusha
fdivp
or
add
add
(bad)
leave
jecxz
lock
clc
jge
stc
daa
stos
mov
in
in
jge
stc
xor
in
pusha
jle
div
and
pop
adc
dec
outs
adc
dec
jb
das
pop
sbb
dec
out
call
cmp
mul
(bad)
hlt
cmc
into
xor
inc
adc
or
(bad)
fadd
mov
ds
add
xchg
push
mov
arpl
inc
out
jmp
out
xchg
mov
(bad)
in
sahf
in
les
(bad)
xor
adc
cmp
scas
and
out
sub
lock
or
out
sub
sbb
and
adc
imul
fwait
inc
xor
jle
fcomip
popf
add
and
inc
xor
add
add
inc
add
add
fs
add
jecxz
adc
call
(bad)
out
jg
and
xor
ins
pop
jae
arpl
adc
dec
sti
sbb
xor
jno
or
adc
(bad)
aas
shl
stos
inc
cmp
sti
add
mov
add
mov
cmc
or
bswap
test
add
add
inc
mov
in
cmovs
and
jno
jg
std
push
dec
push
or
iret
(bad)
test
inc
mov
out
dec
outs
std
je
(bad)
cmc
add
sti
add
jmp
(bad)
not
jo
(bad)
call
sbb
and
cli
or
popf
ret
jne
inc
cmps
add
sbb
cmp
add
add
mov
(bad)
loopne
stc
call
mov
cmp
sbb
(bad)
pusha
xchg
repz
sbb
cmp
es
xor
call
in
sub
xor
add
(bad)
test
fimul
pop
es
cmp
call
sub
xchg
inc
test
sub
add
adc
inc
jno
xor
lods
cdq
xor
pop
pop
inc
ins
ja
inc
out
jecxz
retf
lea
inc
out
cs
jecxz
or
icebp
and
(bad)
lock
ss
ror
jp
fistp
pop
test
imul
adc
bound
in
data16
jo
xor
jl
and
mov
add
push
(bad)
cwde
or
inc
mov
cdq
(bad)
cld
fnstsw
pop
ret
jg
cmps
shl
mov
cmp
mov
out
or
push
pop
les
add
inc
add
xor
jmp
cmps
jmp
and
add
aas
and
add
add
(bad)
cld
scas
addr16
and
popf
inc
add
movs
mov
cmps
xchg
xchg
fadd
lds
rol
push
or
rol
es
add
imul
mov
sahf
cld
call
pop
in
add
jge
or
xchg
sti
or
psubsw
mov
pop
in
inc
inc
add
adc
or
rol
sub
clc
add
vmptrst
shr
cmp
xchg
sti
jmp
mov
xor
inc
adc
pop
add
es
cmp
cmp
(bad)
push
cmps
add
cmps
adc
or
xchg
hlt
fs
mov
cmp
cmps
jl
jp
(bad)
mov
ins
sbb
sbb
adc
loopne
movntq
sahf
add
sbb
ret
push
imul
les
sbb
jmp
sbb
inc
popf
dec
or
pop
and
scas
rol
popf
mov
sub
je
je
sbb
add
dec
or
es
movs
inc
and
add
inc
out
imul
out
out
push
leave
in
xchg
es
out
mov
inc
out
test
mov
or
mov
or
(bad)
out
add
add
push
ret
and
add
mov
dec
push
out
jo
mov
add
inc
lds
daa
push
dec
push
xor
cmp
loop
push
nop
sub
jmp
retf
jmp
lahf
inc
imul
(bad)
into
and
sbb
inc
or
jmp
dec
sub
jmp
lahf
inc
imul
cld
jmp
cmps
dec
js
and
inc
add
aas
jmp
jae
add
add
adc
pop
jbe
mov
pop
js
iret
repz
add
jns
add
xchg
rol
add
jbe
add
(bad)
jg
xchg
jae
nop
mov
ja
jg
add
or
dec
dec
add
out
add
jg
inc
add
push
(bad)
jg
mov
jo
int
mov
repz
add
add
push
(bad)
or
stc
dec
add
mov
and
or
inc
mov
in
es
add
cmps
jbe
jae
fstp
and
sbb
dec
push
push
or
pop
and
std
fidiv
mov
ret
xchg
push
mov
imul
xor
ds
inc
mov
add
inc
cmc
sar
movs
jns
sbb
hlt
and
es
cmp
sar
(bad)
push
jmp
sub
mov
es
mov
sahf
cmps
inc
and
mov
sbb
imul
inc
out
out
sub
sbb
fisttp
ins
pusha
sar
imul
sbb
xor
jmp
call
and
cmp
and
cmp
fist
xor
inc
xor
ret
sub
push
shl
sbb
movs
in
inc
shl
test
xor
push
sahf
inc
add
inc
mov
add
out
sahf
aas
out
cmps
mov
dec
sub
inc
ror
lahf
test
or
add
adc
and
inc
jmp
and
popa
in
inc
and
mov
cmp
and
or
push
inc
or
jmp
jb
xchg
pusha
fdivr
xchg
and
inc
(bad)
cmps
and
out
cs
add
shl
sub
fmulp
inc
adc
inc
add
mov
add
aaa
test
adc
add
xor
clc
jne
mov
inc
mov
or
stc
or
mov
push
mov
in
enter
mov
inc
test
int3
inc
add
inc
inc
cmovae
(bad)
dec
inc
cmp
inc
test
add
or
jns
bswap
arpl
dec
or
jne
or
cld
out
call
pop
dec
mov
or
call
sub
cs
sbb
add
popf
pop
pop
dec
pop
stc
or
mov
(bad)
and
sbb
cld
sbb
fld
es
jns
cs
or
xor
add
xlat
dec
add
inc
out
mov
movs
sbb
test
xchg
push
iret
jg
add
add
call
jg
add
es
or
sub
test
inc
inc
es
jle
add
inc
add
daa
inc
out
imul
daa
(bad)
inc
and
fstp
jno
out
movs
push
aam
jmp
add
and
shr
add
add
jno
daa
les
iret
stos
xchg
cdq
jo
imul
(bad)
jae
mov
outs
cli
xor
fwait
add
and
inc
lahf
daa
inc
out
pop
cmp
xchg
into
jmp
outs
add
xlat
shr
dec
xchg
es
or
test
aaa
adc
mov
aaa
or
pop
inc
add
movs
aaa
add
pop
inc
add
jmp
inc
and
inc
add
sahf
lds
dec
aas
and
ror
sahf
mov
push
xchg
sub
inc
mov
and
or
ss
add
cld
jbe
ds
lds
in
(bad)
adc
test
mov
call
shl
inc
mov
jg
dec
inc
test
add
cmp
or
test
(bad)
cmps
fucomip
adc
push
inc
add
add
int
scas
jmp
mov
inc
add
mov
ret
dec
jns
je
jle
add
mov
mov
adc
icebp
cmp
add
xor
(bad)
cld
cmp
lods
std
(bad)
jg
ret
call
es
add
or
loop
cld
push
mov
sub
mov
movs
pop
add
cld
movs
scas
and
es
mov
lock
call
dec
scas
test
add
es
rcr
std
sub
add
ins
sti
mov
cs
or
xor
xor
cmp
add
in
(bad)
or
add
add
fs
ret
fld
ins
add
pop
add
hlt
pop
addr16
cs
fild
sub
add
call
add
iret
lods
jmp
push
inc
ret
and
fisttp
ss
mov
es
jbe
ds
cld
cmps
cli
out
es
test
int3
sub
push
add
inc
jo
push
int
add
popf
out
les
add
inc
add
sar
into
and
cmps
jmp
inc
fst
dec
xor
imul
and
out
and
dec
mov
inc
retf
pop
loope
mov
lods
xor
dec
jb
cs
jo
sahf
test
add
cmc
add
sub
ret
inc
out
fmul
inc
add
jmp
dec
xchg
into
mul
xor
fdivr
sbb
cmp
pop
retf
jl
jae
sti
je
add
push
add
pop
(bad)
push
hlt
mov
jo
lds
add
jo
jnp
xchg
popa
or
ret
dec
leave
pusha
and
dec
out
(bad)
xchg
push
jb
leave
bound
add
lea
fild
inc
and
add
cmp
and
push
icebp
in
(bad)
call
or
mov
inc
add
mov
inc
xchg
in
imul
jg
cli
fs
adc
ds
xor
xchg
call
jge
aas
call
ds
dec
sbb
add
cmc
ds
pslld
add
jecxz
adc
std
ret
sbb
push
mov
sbb
sbb
data16
das
out
and
sahf
fst
mov
jle
es
jge
cmp
and
jmp
test
xchg
ret
cmps
repz
mov
add
dec
imul
jg
jge
jg
jg
dec
arpl
push
jg
jle
push
add
adc
aad
jg
inc
adc
jbe
cmp
jge
push
ret
push
pop
outs
inc
xor
movs
lock
(bad)
in
or
inc
loopne
out
leave
imul
retf
sub
movs
cmp
lahf
pop
add
scas
mov
add
daa
adc
xor
jae
and
adc
popa
out
imul
xchg
dec
xchg
jg
jbe
cli
and
and
inc
sub
sub
push
xor
and
adc
sar
adc
or
lods
or
out
mov
jnp
std
jge
int
add
ins
in
and
sub
jb
sub
cmp
cld
mov
dec
pop
adc
push
aaa
ds
or
cmovp
cli
inc
es
mov
icebp
inc
xchg
ds
gs
dec
dec
mov
xchg
ds
out
xchg
mov
add
add
inc
and
cwde
jle
push
cwde
mov
cwde
mov
cwde
jle
jmp
cdq
into
inc
pop
cdq
into
inc
jg
mov
inc
pop
call
add
pushf
ds
add
pushf
es
pop
mov
add
stos
sub
mov
sub
xchg
sub
mov
add
ret
sbb
add
add
sub
stos
sub
mov
sub
mov
add
mov
stos
add
mov
stos
add
stos
add
ret
lods
add
mov
lods
add
(bad)
lods
add
lods
add
in
daa
add
shl
add
add
add
cmps
daa
add
lahf
daa
add
mov
daa
add
cmps
daa
add
cmps
daa
add
fisub
add
fisub
add
fisub
add
fldenv
add
fldenv
add
fisub
add
fisub
add
(bad)
add
(bad)
add
int
int
inc
mov
sbb
daa
pop
sbb
int3
adc
push
or
aad
in
inc
out
cmp
and
sub
jno
mov
add
test
daa
mov
inc
xor
gs
aaa
pop
imul
push
add
xchg
loopne
pop
je
jb
imul
ins
xor
packuswb
icebp
icebp
jo
outs
bound
pop
jge
shr
add
add
pop
push
fadd
ss
or
test
popa
and
(bad)
jmp
add
jbe
pop
pop
jb
adc
les
rol
xchg
(bad)
rol
mov
enter
dec
add
aas
mov
neg
inc
pop
jg
arpl
movlps
pop
xor
add
add
jg
add
and
pop
test
adc
add
fdivr
and
xlat
leave
aam
dec
add
pop
mov
add
dec
and
int3
inc
fs
lods
add
mov
xor
push
inc
add
xchg
in
imul
push
imul
push
aaa
ins
ds
inc
add
cmc
push
add
add
out
out
pop
pop
dec
je
xor
push
not
mov
daa
imul
daa
imul
mov
out
movs
inc
or
gs
jmp
push
or
add
cmc
mov
cld
popf
cmp
cmp
inc
xchg
mov
ins
xchg
inc
or
ret
je
jb
cs
mov
dec
and
mov
mov
jmp
fs
add
inc
jo
push
ins
(bad)
xor
fisttp
mov
xchg
popa
popf
icebp
xchg
lods
pop
ja
shr
loop
aad
jp
dec
push
mov
add
ja
xcrypt-ecb
cmps
or
inc
icebp
out
mov
ja
add
jmp
add
add
out
cs
mov
gs
mov
in
repnz
pop
mov
jmp
pop
cmp
push
(bad)
push
or
int
ret
dec
in
mov
mov
clc
es
mov
loop
hlt
shl
pusha
push
and
jo
ja
adc
and
sub
(bad)
lods
ss
push
pop
cmp
test
(bad)
adc
add
cdq
add
xchg
or
retf
jmp
or
xor
xchg
fwait
cld
dec
add
mov
sub
or
xor
pop
cmp
mov
mov
push
xor
cld
mov
dec
add
dec
dec
out
pop
or
add
call
xor
jae
mov
imul
inc
ins
inc
pushf
xchg
repz
jne
sti
je
push
shl
inc
hlt
cmp
std
adc
(bad)
or
in
inc
and
bound
and
push
bnd
xchg
jb
clc
sub
jmp
imul
add
add
icebp
inc
and
add
add
aad
std
out
jb
sub
mov
mov
add
adc
mov
inc
push
jge
std
xor
push
inc
es
popf
dec
call
or
loope
mov
inc
out
sub
ins
ss
in
jno
sub
push
inc
cdq
stos
jecxz
out
cmova
ret
movs
test
mov
add
add
inc
out
push
xchg
add
add
daa
or
test
push
jbe
push
or
pop
mov
adc
mov
pusha
(bad)
push
or
push
mov
es
cmps
cmp
aaa
mov
xlat
fucom
push
jnp
iret
adc
inc
fs
cmc
(bad)
sbb
jae
xchg
adc
pop
xor
adc
cmp
inc
cmp
sar
jb
lods
or
adc
sbb
adc
cmp
adc
adc
sub
in
push
mov
gs
and
aas
(bad)
inc
add
pushf
lock
cmp
and
pop
add
gs
stos
lock
xor
adc
add
add
ret
inc
cld
nop
push
sbb
(bad)
push
ds
(bad)
ret
cmp
pop
or
pop
clc
push
cmp
mov
pop
in
inc
inc
add
sub
inc
cld
iret
mov
cld
rcr
(bad)
xchg
cmp
jo
je
out
rcr
shr
ret
push
mov
sub
inc
iret
push
push
call
add
add
pop
xchg
xchg
addr16
add
mov
push
es
mov
mov
ret
dec
mov
lahf
mul
mov
jb
div
jae
inc
mov
arpl
add
out
call
pop
or
dec
jae
std
jb
or
mov
sbb
sldt
add
sub
ret
jl
rcr
std
xor
cmovo
loopne
jb
dec
fucomp
push
idiv
push
fidivr
xor
cwde
inc
add
inc
xchg
push
mov
cdq
popa
clc
adc
inc
out
push
adc
mov
jo
mov
or
xor
mov
mov
mov
test
rol
mov
adc
retf
cwde
adc
movs
jbe
add
lahf
and
sbb
pop
pusha
fiadd
inc
cmp
aas
xor
loop
sahf
add
mov
mov
call
mov
loop
mov
add
add
xchg
mov
jo
scas
jmp
outs
cld
jmp
mov
in
and
in
push
fadd
mov
arpl
cwde
stos
jmp
push
mov
mov
mov
mov
jmp
aas
frstor
ja
dec
lock
cld
gs
cmc
sub
sub
fcom
jno
add
pop
push
lea
call
mov
add
add
push
xchg
mov
pop
mov
inc
add
(bad)
or
mov
mov
mov
lahf
(bad)
xor
or
pop
(bad)
int
ret
push
mov
(bad)
call
adc
adc
cld
pop
scas
adc
pmaxsw
pop
lahf
into
add
mov
or
rcr
jmp
sti
jne
add
add
mov
or
add
jle
xlat
mov
pusha
mov
movs
xor
inc
adc
cmp
and
mov
popf
mov
adc
shl
mov
bound
out
or
dec
(bad)
shl
test
dec
add
or
pop
pop
add
xchg
je
and
iret
pop
mov
cld
out
add
add
push
mov
stos
sbb
fsub
jbe
push
lods
ds
mov
push
push
stos
sbb
push
inc
cmps
add
adc
mov
stos
neg
scas
jmp
call
not
xchg
out
scas
imul
sub
mov
cmp
mov
outs
popa
cmp
mov
push
out
stos
xor
mov
add
add
mov
out
cmps
outs
out
sub
or
sbb
div
call
or
mov
imul
push
mov
add
scas
stc
or
jle
push
push
fcomi
and
xchg
push
std
xor
mov
(bad)
cmc
sbb
and
fwait
push
jae
ror
or
daa
mov
or
loopne
jmp
jle
(bad)
call
and
push
sahf
sahf
in
pop
fimul
xor
movs
pop
mov
jno
add
ss
mov
push
add
inc
add
mov
dec
scas
test
arpl
add
xchg
je
xchg
xchg
inc
jno
add
add
mov
dec
or
cmp
inc
add
jg
adc
mov
(bad)
(bad)
fsubr
mov
xor
xchg
xchg
mov
je
ret
sbb
je
jge
pop
mov
inc
les
add
iret
pop
pop
cli
jmp
push
mov
mov
cmps
or
add
add
mov
aad
pop
mov
add
pop
sub
ret
or
imul
adc
pop
lock
and
xchg
xchg
jge
lods
xor
xchg
data16
mov
movs
jp
je
cmc
dec
or
pop
mov
inc
inc
adc
int3
es
jge
and
ret
or
inc
add
test
xchg
(bad)
jge
and
leave
add
outs
inc
jmp
push
jo
push
mov
fidivr
cmp
mov
bound
mov
mov
clc
cld
inc
lds
add
mov
into
das
popf
push
mov
mov
sub
cmp
icebp
adc
and
and
add
shl
jmp
adc
out
lods
push
out
scas
dec
ror
sar
sbb
add
inc
add
or
fdivr
push
mov
xchg
mov
push
mov
jmp
xchg
push
cld
ins
ja
or
iret
mov
std
into
xlat
pop
push
xlat
push
pop
bound
pop
sbb
add
add
xor
(bad)
stos
adc
cs
mov
push
inc
or
sub
xor
push
xor
adc
sub
add
dec
xchg
ret
inc
sti
jb
(bad)
jmp
add
and
push
call
mov
inc
das
shl
add
cli
call
std
(bad)
mov
jmp
test
jg
add
rcl
cld
push
or
inc
or
mov
jno
cmp
call
mov
mov
cld
dec
jns
aas
cs
jmp
mov
or
scas
cld
sbb
(bad)
and
dec
std
add
scas
jae
repnz
mov
add
add
fadd
out
xchg
scas
cld
loope
cwde
std
shl
add
pop
test
cmp
jle
mov
add
mov
xchg
ss
movs
fwait
ror
adc
mov
shl
mov
mov
in
lods
xchg
push
std
cmp
push
inc
es
or
inc
jmp
mov
add
add
and
call
loop
cmp
cmp
and
cvtpi2ps
inc
out
test
cmp
pop
scas
push
xchg
push
js
stos
scas
pop
(bad)
sbb
gs
mov
dec
sbb
inc
ins
ret
adc
aas
cld
daa
inc
out
popf
(bad)
out
push
mov
loop
hlt
addr16
jp
pop
jmp
stos
(bad)
out
push
mov
inc
cld
sbb
cmp
add
call
xor
(bad)
stos
aas
jmp
stos
enter
imul
test
and
jmp
xlat
push
inc
jbe
movs
fiadd
jmp
sub
inc
xchg
(bad)
call
lock
push
ss
popa
adc
xor
add
add
add
pusha
push
shl
(bad)
call
cmps
mov
inc
fisttp
mov
xchg
arpl
push
cmp
test
idiv
adc
ret
sbb
cmp
(bad)
ret
(bad)
ret
call
bound
add
inc
pop
jmp
ret
(bad)
(bad)
jl
add
ins
inc
or
add
add
dec
xchg
popf
mov
in
nop
loope
adc
mov
adc
sti
inc
inc
push
push
scas
adc
outs
push
add
or
adc
jb
adc
fcmovnb
pop
es
(bad)
sbb
idiv
cmp
add
cmp
push
dec
scas
mov
cld
xor
inc
lock
add
inc
and
sbb
mov
dec
std
jnp
stos
jb
inc
push
inc
ss
add
daa
dec
ss
leave
js
adc
jbe
pop
and
adc
and
movs
(bad)
test
sub
jecxz
push
xor
test
cld
aad
cmps
xor
popa
aad
jnp
cmps
xor
int3
and
mov
add
add
lds
jmp
jmp
add
retf
mov
xlat
lods
push
dec
push
jbe
mov
sti
add
shl
idiv
pop
outs
cld
scas
push
adc
pop
add
rcl
cli
fwait
inc
nop
out
ret
sbb
adc
xor
add
mov
(bad)
jmp
xlat
or
sbb
sub
add
add
pop
xor
add
rcr
into
shl
inc
add
ins
jle
frstor
jmp
sub
call
inc
mov
popa
cld
inc
jne
jb
in
cld
imul
add
fs
punpckhdq
inc
add
ss
jmp
mov
add
add
add
add
cld
(bad)
iret
jnp
add
pop
std
out
xchg
cld
jmp
inc
mov
das
xlat
inc
in
shr
dec
inc
out
sub
mov
pop
cmp
data16
ficomp
lods
dec
lea
dec
(bad)
retf
call
in
mov
lahf
aad
lock
mov
out
xchg
inc
mov
clc
out
add
test
inc
bswap
add
inc
add
and
ret
inc
ret
inc
add
ins
jp
ss
or
jo
inc
xor
ret
push
cwde
jb
ins
add
sub
cmps
jb
mov
pop
cmp
repz
stos
lods
not
in
add
pop
sub
push
jnp
cs
call
xor
ffreep
xor
call
popf
dec
jp
(bad)
xor
mov
es
lods
inc
idiv
inc
out
sub
pop
xor
pop
push
and
int
es
imul
pop
xchg
cli
loope
jae
mov
push
ret
push
mov
ret
add
call
cmps
and
mov
fs
dec
push
pop
ins
dec
dec
sti
pop
push
and
or
in
pop
push
add
rcr
movs
inc
pop
test
pop
adc
push
jmp
sub
xchg
add
cwde
shr
inc
or
jmp
cmp
jmp
daa
inc
add
lods
dec
lds
inc
add
and
inc
add
xor
xor
pop
jl
gs
pop
cld
jmp
cmp
inc
add
dec
push
xchg
xor
pop
cld
mov
add
add
inc
push
movs
pop
sti
xor
mov
mov
(bad)
jg
adc
fiadd
pop
ror
cmp
add
rol
(bad)
push
pop
test
add
fild
add
inc
cmp
push
cmp
inc
add
mov
not
rol
push
push
push
push
(bad)
cmp
mov
(bad)
dec
inc
inc
fcomp
jmp
loopne
enter
mov
mov
or
and
(bad)
cld
out
ins
add
push
lahf
ja
outs
inc
mov
leave
popf
and
das
and
inc
sbb
scas
sub
stc
and
ret
(bad)
cld
cld
mov
mov
add
loop
sbb
loope
call
in
fmul
cs
call
cmp
sub
mov
xchg
jmp
jmp
jbe
nop
mov
call
cmp
cmp
out
out
mov
iret
in
leave
in
out
adc
call
sub
sub
and
test
xor
imul
push
cmc
add
popf
jmp
mov
and
mov
es
daa
inc
js
das
(bad)
and
inc
cmovno
dec
ins
in
inc
out
lahf
(bad)
jmp
cdq
aad
(bad)
mov
add
jg
ret
mov
sar
test
or
lock
add
jp
add
and
inc
xchg
rol
add
sub
les
push
lds
sub
inc
mov
or
mov
out
cld
fmul
cwde
or
mov
lds
idiv
mov
cld
aam
mov
sti
push
sub
xor
add
jecxz
sti
push
fistp
xor
inc
call
dec
leave
add
iret
sub
(bad)
mov
outs
aam
int3
inc
sti
adc
adc
aaa
sti
jmp
pusha
mov
(bad)
cmp
sti
jne
sbb
lea
or
(bad)
(bad)
out
repnz
sti
add
cli
push
retf
xchg
pop
in
mov
es
add
mov
call
std
jmp
ins
add
push
push
lea
mov
loopne
jae
mov
add
xlat
or
cmp
ror
add
outs
adc
std
jns
mov
test
push
popa
movs
test
es
lea
sbb
adc
lahf
cld
(bad)
cmp
sub
cld
cmp
cmc
aas
es
jb
test
xor
push
inc
mov
inc
out
sti
test
leave
imul
push
sub
lahf
rcl
xchg
out
dec
ror
xor
pop
std
lahf
out
mov
add
add
fdivp
adc
push
hlt
pushf
mov
pop
xchg
sbb
(bad)
movs
add
mov
jmp
add
inc
add
out
stc
xor
mov
test
mov
cmp
rcl
lock
call
(bad)
push
cld
(bad)
push
dec
xchg
cld
cs
mov
mov
add
add
(bad)
(bad)
call
nop
push
cld
call
add
repz
push
dec
dec
out
mov
or
push
pop
cld
or
ficom
jmp
mov
(bad)
call
or
cld
add
leave
inc
in
enter
mov
dec
jge
lock
inc
add
cmps
or
adc
arpl
add
add
add
test
inc
add
jno
mov
outs
in
vmwrite
dec
ret
lea
sti
(bad)
jle
and
test
(bad)
call
jbe
lea
dec
push
dec
mov
nop
cld
push
fwait
adc
retf
rcr
dec
into
xor
mov
es
leave
lods
xor
add
adc
je
(bad)
inc
sbb
mov
cmp
outs
mov
add
scas
nop
cld
jbe
lea
jbe
pop
ret
and
leave
pop
adc
std
mov
dec
fwait
cld
test
mov
aas
es
jmp
nop
push
or
or
cmp
out
cld
jno
es
add
add
(bad)
cld
pop
mov
xchg
repz
push
out
ror
xor
lahf
inc
out
inc
push
adc
mov
mov
add
push
rol
push
(bad)
adc
and
ficom
mov
push
ret
cmps
mov
mov
pushf
mov
stos
mov
mov
dec
in
or
adc
std
or
inc
push
pop
mov
call
sbb
inc
mov
xchg
mov
cld
sbb
sbb
sbb
aad
popw
jno
test
popf
aas
test
pop
pusha
mov
cld
add
add
mov
lods
les
call
scas
add
sub
lea
mov
mov
add
push
into
dec
adc
jbe
add
imul
mov
lods
sti
cmp
mov
dec
jg
mov
dec
add
leave
mov
pop
push
sar
add
push
test
add
add
xor
push
mov
sti
jmp
(bad)
jns
std
xor
push
mov
sti
push
inc
cli
add
jno
add
pop
sti
call
sbb
call
mov
(bad)
inc
sbb
ficomp
in
aas
add
adc
ins
mov
dec
cmps
cmp
mov
mov
mov
lods
pop
lods
xchg
sub
push
fucomip
std
add
xor
dec
mov
pop
jge
sbb
or
loope
mov
add
push
rcr
xchg
jb
daa
cmp
mov
das
call
lods
xlat
test
xchg
pop
add
push
inc
fadd
es
sbb
add
adc
or
push
hlt
lods
add
stos
add
pop
jmp
ror
cdq
cmp
imul
xchg
sbb
jnp
jbe
or
fwait
cmps
dec
out
outs
mov
mov
cmp
dec
jno
idiv
xor
xchg
outs
push
pop
in
es
bound
mov
add
adc
add
cli
push
cld
out
popf
push
and
ror
ficom
js
xor
pop
scas
aaa
xchg
push
mov
gs
and
inc
test
mov
cld
push
dec
jo
js
stc
jmp
jp
push
xchg
dec
jb
rol
cmc
in
push
push
push
push
fdivrp
call
inc
dec
jb
mov
ret
imul
cmp
leave
sti
dec
cld
adc
ret
neg
pop
inc
(bad)
lods
mov
jmp
push
call
and
add
inc
sti
dec
inc
or
jmp
repz
stos
stc
push
mov
mul
mov
jne
cwde
or
mov
mov
inc
add
add
mov
jg
or
adc
push
cld
push
jp
in
pop
xor
mov
inc
je
push
inc
add
clc
popf
cmp
ret
inc
iret
sahf
jmp
es
test
arpl
stos
add
push
sbb
xchg
aad
repz
test
or
cmp
es
push
pop
mov
(bad)
stos
popf
add
fs
add
mov
add
aad
xor
js
das
call
push
movs
xlat
add
icebp
shl
mov
add
popf
cmc
mov
add
push
loope
cmp
mov
adc
es
fwait
out
scas
dec
mov
mov
stos
cwde
pop
pop
out
xor
add
add
adc
enter
add
mov
mov
into
add
test
repz
stos
sub
push
mov
cmp
add
ret
push
es
add
inc
je
pop
cmc
jno
or
xchg
or
cmps
sets
adc
repz
push
jg
rcr
cmp
es
mov
add
into
push
xchg
stc
xor
or
mov
cld
push
cmc
sar
ss
in
sub
inc
(bad)
lods
call
sar
jge
sub
push
bound
cmp
aas
push
call
push
push
ret
mov
(bad)
cli
pop
imul
call
sar
pop
cmps
pop
dec
(bad)
in
add
add
fimul
je
je
jmp
out
or
push
cmp
add
sbb
mov
mov
cld
dec
or
or
sti
repnz
es
dec
stos
dec
call
mov
(bad)
nop
xor
(bad)
fisub
call
mov
sti
add
push
mov
adc
inc
(bad)
adc
cwde
sbb
xchg
mov
loopne
aam
sti
dec
pop
or
cld
repnz
cmps
out
dec
or
aaa
rol
mov
cmps
xchg
gs
and
sbb
stos
cwde
aad
push
xchg
mov
ficom
jb
xor
jle
mov
mov
dec
test
inc
mov
push
add
add
add
mov
jg
xchg
stos
jp
dec
fmul
lahf
sbb
cld
lods
lods
cmp
push
test
sub
and
es
cmp
dec
(bad)
cld
add
mov
jb
out
cmp
int3
mov
test
inc
ror
loopne
ds
iret
inc
aas
(bad)
push
inc
sub
push
xchg
ret
fwait
cwde
dec
sar
pop
or
xor
mov
add
mov
xor
sub
loop
cmp
div
xor
add
sub
cmc
test
ret
mov
cmc
sub
loopne
xchg
scas
inc
call
aad
add
sub
sbb
dec
mov
add
add
sbb
fst
std
jae
sbb
inc
add
das
inc
jmp
push
jne
test
mov
inc
push
mov
add
add
aad
inc
jmp
data16
aas
pop
test
inc
je
sub
inc
adc
rcr
mov
inc
adc
add
inc
jmp
in
xor
jl
add
inc
jmp
aas
add
mov
or
inc
add
nop
add
(bad)
leave
dec
or
cmp
(bad)
mov
inc
sti
jne
leave
in
call
jns
jne
mov
or
dec
movs
adc
inc
mov
push
push
sti
jne
mov
add
add
add
dec
push
cmovo
mov
mov
ret
push
mov
cmp
dec
adc
sub
push
das
das
push
lods
cmp
push
stos
mov
add
lods
call
(bad)
call
sub
jg
es
cwde
sbb
jmp
mov
scas
push
inc
add
add
xor
push
jns
mov
sbb
add
cwde
add
and
out
add
mov
inc
add
leave
jmp
cdq
xchg
leave
scas
sbb
xor
popf
ja
and
pop
push
push
inc
and
int3
fs
jmp
pop
pextrw
push
nop
add
push
mov
mov
cmc
icebp
inc
enterw
sti
and
loop
adc
aas
push
(bad)
lods
sti
daa
scas
popf
sub
int
js
dec
pop
inc
jb
sub
push
ss
cmps
pop
div
add
arpl
(bad)
stc
gs
pop
inc
ins
add
jmp
and
dec
add
sbb
stos
int3
sub
jae
lods
mov
jb
movs
int3
stos
and
cmp
mov
enter
push
bound
push
xor
retf
mov
inc
add
test
rcl
push
fs
pop
pop
je
in
ret
add
mov
xchg
(bad)
popa
repnz
clc
cli
and
imul
add
mov
or
test
fs
cmp
std
add
test
push
xor
push
push
pushf
mov
std
adc
dec
jle
inc
or
scas
mov
sbb
imul
pop
shr
mov
jg
repnz
add
add
int3
cmp
push
(bad)
stc
aas
and
sub
inc
add
clc
out
mov
hlt
mov
push
cwde
(bad)
(bad)
jmp
pushf
xor
sub
xor
inc
sbb
inc
mov
inc
mov
or
fild
dec
aaa
xor
clc
add
mov
add
add
mov
jb
sti
xchg
repnz
mov
es
test
shl
mov
sbb
lods
inc
es
xor
hlt
retf
fst
jmp
mov
add
cld
movs
add
jg
inc
jmp
test
jae
shl
ret
jno
jp
data16
fnstcw
add
ins
pop
popw
fiadd
pop
push
inc
pop
aas
push
xchg
je
ret
nop
jmp
xor
sub
mov
inc
call
sub
mov
mov
pop
xchg
cmp
inc
jmp
dec
cmp
cmp
jle
scas
bound
inc
jmp
dec
enter
inc
jg
adc
sbb
pop
sti
cld
cmc
inc
jbe
aaa
aas
push
popa
syscall
mov
mov
ficomp
jbe
(bad)
jmp
ror
inc
jmp
in
ret
dec
add
js
int3
stos
and
outs
push
(bad)
push
adc
cmp
or
cmp
dec
mov
add
aas
inc
mov
cmp
cmp
icebp
xor
add
and
sti
dec
cmp
(bad)
jmp
(bad)
dec
inc
mov
call
or
test
add
scas
jg
inc
mov
add
inc
iret
ins
and
jnp
ret
inc
(bad)
jae
xor
es
stos
mov
add
add
shl
push
jns
aas
int3
in
adc
cmp
repnz
push
fmul
out
or
mov
and
xchg
sub
inc
sub
ds
or
aad
clc
es
mov
jmp
sub
inc
add
xor
inc
mov
xor
popa
ds
jo
or
add
add
add
pop
sub
out
(bad)
cld
adc
repnz
es
outs
aas
inc
dec
mov
jp
(bad)
std
not
xchg
outs
shl
push
test
jp
fwait
pop
inc
bound
add
int3
push
mov
les
shl
sub
les
xchg
ins
aas
push
xchg
(bad)
out
jbe
or
add
ins
les
add
add
popw
out
inc
std
cli
sahf
cwde
jno
pushf
jne
cdq
daa
hlt
call
shl
test
cmp
xor
add
lds
push
jne
xchg
push
or
push
adc
jmp
out
sti
pop
or
push
ss
push
inc
jmp
dec
jp
push
dec
push
(bad)
jnp
cmp
call
and
jno
push
cmp
aas
xchg
push
gs
mov
and
sbb
sub
int
jmp
and
inc
mov
popf
sbb
add
imul
jne
add
imul
movs
jp
jne
ins
call
(bad)
retf
inc
cmps
mov
xchg
mov
je
inc
add
les
lea
mov
dec
inc
add
fs
iret
cmp
sub
cld
imul
sub
push
bound
rcl
jmp
add
adc
test
inc
(bad)
cli
nop
push
call
es
xlat
out
inc
add
mov
sub
fld
add
add
xchg
leave
shl
stc
mov
pop
sbb
jmp
and
mov
nop
jb
push
push
in
imul
mov
loop
xchg
inc
jb
mov
dec
mov
cld
cmp
or
sub
enter
loopne
(bad)
sub
int3
mov
xlat
out
idiv
(bad)
jl
xchg
jb
push
ins
push
sbb
cmp
ins
clc
ins
pushf
inc
jecxz
inc
jmp
enter
mov
loopne
jmp
xchg
mov
nop
in
mov
shl
inc
add
popf
nop
mov
leave
fs
aam
shr
inc
aaa
cmp
inc
iret
sub
ret
inc
lock
add
fs
out
and
aaa
mov
repnz
and
cmp
cmps
mov
test
jns
imul
icebp
and
mov
cli
add
jne
lods
cdq
cld
adc
or
xor
add
push
(bad)
jo
mov
inc
xchg
mov
add
add
jmp
push
aaa
or
or
cld
jmp
jnp
ret
xchg
and
mov
cmp
dec
jp
aam
cmps
ja
add
jo
mov
dec
cmp
mov
inc
mov
enter
ins
mov
mov
cmp
push
test
fwait
leave
dec
js
fwait
add
cmp
push
test
jmp
add
dec
inc
add
mov
xchg
push
cmp
in
sti
inc
or
push
es
aaa
sub
mov
shl
es
push
movs
mov
jae
mov
dec
fwait
out
out
scas
add
mov
imul
sub
push
dec
fnstenv
or
es
lahf
xchg
push
jnp
add
sub
aad
repz
test
and
jmp
xchg
std
pop
jl
movs
xor
cld
sub
or
fwait
stc
rcr
add
lahf
mov
int
inc
jmp
add
std
cmps
pop
es
pop
outs
scas
mov
test
fwait
inc
or
shl
inc
rcr
xor
mov
mov
out
fcmovb
fs
xor
rol
mov
jbe
neg
fadd
push
mov
ins
cmc
sub
ins
sub
jmp
push
lahf
mov
add
xchg
add
cmp
(bad)
in
and
or
icebp
ds
daa
iret
cmp
mov
(bad)
outs
push
sub
out
das
cld
sbb
leave
sub
inc
push
bound
(bad)
in
movs
push
dec
jmp
inc
push
ret
push
je
out
call
jb
mov
mov
push
and
add
add
inc
int
push
jns
and
retf
inc
add
or
push
xor
test
add
sbb
call
xchg
or
or
and
or
dec
xchg
and
or
add
or
and
or
dec
das
rol
xchg
and
cmp
add
mov
and
inc
add
mov
inc
add
(bad)
popf
and
jg
mov
iret
ret
rcl
cld
dec
test
repnz
dec
mov
mov
(bad)
cmp
inc
bnd
dec
and
mov
pop
and
popf
push
or
daa
mov
and
mov
or
inc
inc
pop
es
jmp
mov
mov
push
inc
repnz
jmp
mov
add
cmovo
pop
cmp
pop
mov
and
out
dec
fwait
pop
ins
push
mov
aas
sub
mov
mov
jmp
mov
sub
imul
xlat
pop
in
arpl
popf
inc
aad
dec
imul
rcr
pop
jnp
xchg
xchg
data16
call
or
std
pop
xor
jo
or
lods
loope
jmp
push
sub
pop
ret
shr
sub
scas
inc
dec
adc
test
xchg
pusha
fdiv
jmp
clc
adc
mov
outs
push
icebp
jp
aam
ret
pop
sbb
fmul
mov
pop
data16
data16
push
xor
lods
mov
(bad)
and
adc
cmp
xor
in
xor
jmp
cs
call
xor
ficomp
hlt
jb
ds
bound
add
xor
jp
cs
imul
pop
call
arpl
sub
add
add
and
and
push
jb
add
mov
cld
push
mov
dec
int3
or
mov
pop
xchg
mov
addr16
repz
scas
sti
add
inc
mov
mov
(bad)
jecxz
xor
push
cld
(bad)
jno
enter
push
adc
ret
sbb
add
xchg
cli
dec
sar
adc
outs
add
cmp
inc
add
add
add
shr
add
aaa
jns
or
sar
mov
mov
push
sub
fisttp
sar
rol
sbb
jmp
std
xor
retf
xchg
inc
or
cmc
mov
call
popf
jmp
daa
sbb
cmp
add
lahf
xchg
inc
add
add
sbb
cmc
push
sbb
fs
push
loopne
add
ror
cs
mov
sub
out
and
sbb
push
push
daa
sbb
inc
push
inc
jo
inc
ins
outs
mov
in
int
add
push
mov
mov
add
cmp
nop
xor
jmp
data16
add
dec
dec
cmp
jne
fnsave
pusha
aad
or
loop
es
and
gs
rcl
jo
add
mov
es
pop
in
jmp
mov
enter
cdq
outs
add
jns
lea
lock
leave
xor
jmp
loope
inc
jmp
cmps
jmp
jecxz
or
in
ja
mov
and
mov
and
inc
push
shr
jmp
jge
mov
and
sbb
pop
sub
inc
pop
call
jb
data16
push
xchg
push
mov
cld
aad
pop
inc
or
lods
or
(bad)
sbb
push
jg
add
pop
inc
and
(bad)
sahf
fnstcw
pop
inc
sub
add
int3
xor
fist
inc
inc
inc
inc
and
sahf
xchg
mov
inc
sti
jge
mov
outs
add
push
sti
(bad)
inc
dec
ret
add
(bad)
ficom
inc
bsr
and
adc
test
cmp
je
mov
and
add
add
inc
cmp
jmp
inc
add
push
outs
daa
push
sahf
(bad)
cmp
call
std
sbb
adc
push
stos
push
popf
aaa
sub
out
jmp
out
ins
(bad)
call
sbb
add
movs
mov
xor
fiadd
add
sbb
call
sbb
add
add
pop
das
pop
xor
add
push
mov
(bad)
or
ja
call
aad
mov
aad
into
dec
(bad)
mov
mov
sub
inc
jmp
shl
jmp
add
mul
add
xchg
pusha
retf
movs
outs
jmp
popf
int3
jb
cmp
leave
cmp
add
add
sub
inc
adc
jmp
sbb
int
sub
inc
je
mov
xchg
and
inc
jmp
cld
leave
shl
es
fld
push
sub
fisub
cmp
cmps
dec
mov
sti
mov
and
scas
or
xchg
pop
aaa
jmp
jns
data16
hlt
mov
add
inc
add
scas
out
lds
les
jmp
and
sti
pop
xor
pop
in
inc
mov
cmp
inc
icebp
and
pop
inc
out
mov
les
and
test
jbe
cld
cmps
fmul
adc
cld
mov
push
lods
add
add
fldcw
dec
mov
inc
jg
cli
pop
idiv
add
cmps
out
jecxz
sub
cmps
ds
or
(bad)
jg
adc
mov
mov
or
push
outs
and
test
dec
jg
dec
mov
mov
mov
dec
mov
inc
xor
(bad)
pop
mov
inc
and
test
inc
dec
push
push
ins
push
inc
inc
pop
and
add
add
daa
add
retf
sbb
add
add
aaa
sub
es
daa
fs
and
or
or
add
ret
and
lahf
jmp
inc
or
jno
cmp
or
out
popa
jno
push
cmps
and
ds
and
adc
add
loop
and
out
add
sbb
add
pop
sub
es
mov
jg
ins
lock
outs
jmp
sbb
adc
inc
dec
shr
cmp
push
aas
pusha
ins
lock
fs
shr
iret
inc
jmp
outs
scas
cld
cdq
outs
hlt
cmp
push
call
lock
pop
rcr
jmp
jnp
add
add
add
and
xor
ins
sub
xor
adc
inc
imul
movs
(bad)
es
cmp
add
mov
stos
dec
shr
cld
cmps
cmp
jne
pop
xor
add
sti
std
adc
aaa
call
dec
leave
cmovo
cmp
stos
jmp
and
and
mov
cmps
add
sub
fs
sub
lea
test
bound
dec
adc
cmovo
mov
mov
std
test
dec
or
dec
sub
and
int3
pop
or
add
inc
mov
and
iret
sbb
(bad)
cmp
dec
sti
jmp
mov
sbb
add
add
push
cld
jmp
repnz
sbb
je
fwait
aas
and
fwait
inc
adc
inc
mov
mov
test
jne
jle
lock
mov
ret
mov
xchg
cld
jmp
and
cld
push
ds
je
and
pop
mov
add
popf
add
retf
sub
xor
aad
adc
adc
add
data16
mov
ret
add
int
ins
cmps
bound
sti
call
iret
push
push
adc
test
pop
rcl
es
test
(bad)
sub
add
mov
jno
and
repnz
xchg
cs
fstp
cmp
aad
rcl
xor
dec
mov
xor
add
add
cwde
add
sub
xor
jmp
rcr
inc
jmp
shl
sbb
lock
sbb
add
xchg
(bad)
dec
adc
sub
xchg
fnstcw
pop
rcl
je
xor
dec
push
cmp
mov
loop
jp
jns
out
mov
add
add
les
ror
repz
enter
push
repz
iret
add
xor
push
cmp
add
dec
ret
and
and
xchg
or
push
call
xor
adc
and
cmp
cmc
sbb
cld
lods
and
in
push
test
jo
add
add
arpl
shl
mov
pop
jns
mov
push
leave
inc
push
sbb
mov
retf
inc
lds
add
dec
sti
xchg
sbb
stos
outs
adc
dec
mov
mov
push
ret
push
mov
jl
repz
push
call
or
sub
and
sub
add
shl
dec
call
repnz
or
add
or
inc
add
movs
pop
std
jne
repnz
mov
add
jae
adc
and
and
cs
push
cmp
sbb
adc
sbb
das
add
(bad)
out
push
inc
dec
cdq
outs
and
sbb
jae
or
and
adc
pop
lds
(bad)
jmp
add
add
sub
xor
jmp
stc
pop
adc
jnp
iret
cld
jae
imul
jnp
pop
pop
in
add
mov
imul
pushf
mov
dec
adc
test
sbb
out
xor
fisubr
cs
dec
stos
addr16
cli
das
pop
xchg
js
push
pop
xor
jmp
int3
addr16
jmp
or
jno
shl
movs
not
xchg
cld
sub
cmp
jbe
retf
iret
sub
cli
xchg
fldenv
push
sar
sbb
(bad)
jl
lds
out
jmp
pop
shl
call
jg
xchg
rol
aaa
fs
adc
leave
loope
push
aaa
iret
add
jb
fwait
out
or
movs
adc
xchg
xor
xchg
adc
pop
mov
pop
sub
inc
push
bound
(bad)
std
and
add
sti
pop
ss
inc
loope
inc
sti
cmp
lods
add
sub
mov
dec
xchg
add
cwde
hlt
in
pop
stos
xor
and
and
rol
sub
jno
cld
sub
xchg
or
das
cld
dec
movs
adc
add
inc
jmp
push
cld
adc
inc
adc
mov
cwde
or
pop
cld
pop
xchg
or
and
neg
mov
and
jg
out
loopne
cld
and
jg
inc
add
xchg
adc
iret
call
xlat
jle
out
mov
cld
and
sbb
sti
je
ret
jbe
mov
or
push
xor
outs
or
cmps
mov
mov
push
cld
jns
and
and
mov
sub
or
arpl
add
cmp
and
aas
pop
shl
add
sti
(bad)
jp
push
jle
repz
jmp
pop
retf
push
imul
loope
jmp
scas
fcmovbe
cmps
inc
les
retf
je
sub
jns
mov
jae
ds
add
(bad)
es
sub
jne
into
ret
jno
movs
aas
mov
add
add
sub
scas
jg
js
inc
ins
out
in
pusha
out
mov
lods
pop
loope
movs
cmp
stos
loope
es
and
mov
add
sbb
repz
nop
fs
arpl
stos
stc
dec
xor
add
add
mov
inc
jmp
ins
add
and
jne
jo
add
and
push
and
outs
xor
inc
inc
or
sbb
jmp
sbb
and
aad
jge
jmp
dec
retf
dec
sbb
lahf
cmp
adc
daa
call
fbstp
mov
and
add
and
int
ins
(bad)
sti
push
push
inc
xchg
fs
sbb
add
mov
ins
gs
adc
stos
sti
add
mov
sbb
sbb
ds
mov
add
jno
fdiv
mov
bound
inc
cli
cmp
push
or
jecxz
sar
add
pop
stos
xor
aas
inc
(bad)
mov
sub
popf
sbb
add
pop
(bad)
fsub
add
mov
jecxz
cmp
add
sub
mov
or
es
add
js
or
loope
imul
test
add
mov
inc
cli
daa
test
adc
or
imul
mov
mov
cld
(bad)
dec
jmp
lea
mov
jmp
push
adc
mov
pop
mov
mov
jae
pusha
or
jmp
call
lea
sub
mov
cdq
sar
outs
(bad)
cmp
and
sub
sbb
(bad)
dec
dec
arpl
or
inc
jmp
imul
jmp
add
inc
cdq
mov
iret
ud0
mov
inc
push
push
add
jnp
xchg
pop
pop
(bad)
dec
inc
push
add
enter
jg
mov
push
pusha
sbb
ins
aaa
xchg
xchg
fild
dec
outs
pop
mov
imul
jo
jle
or
ret
inc
mov
les
push
inc
jle
inc
sbb
(bad)
out
lock
into
dec
xchg
jne
push
icebp
movs
mov
nop
call
inc
adc
ret
push
adc
jle
and
cmp
jg
dec
add
and
inc
add
ret
and
and
adc
les
scas
shl
fisubr
jb
dec
mov
xor
jmp
daa
dec
add
dec
mov
dec
sbb
outs
and
xlat
xchg
xlat
cld
adc
cmp
pop
lea
dec
push
push
or
push
aad
add
call
rcr
inc
test
dec
jb
mov
call
adc
(bad)
enter
inc
cmp
stos
dec
rol
add
xor
mov
mov
rcl
sub
aad
fdiv
add
sbb
mov
js
ret
jecxz
popf
and
rcr
jb
jmp
add
lahf
ins
cld
adc
shl
pop
dec
mov
xchg
sbb
add
sbb
dec
outs
movs
sbb
stos
pop
or
add
sbb
add
mov
imul
push
sar
pop
or
add
call
pop
jmp
pop
ret
cld
out
leave
add
xchg
xchg
inc
gs
jmp
sub
push
inc
and
cmp
loope
into
dec
ins
lds
sbb
in
sbb
add
add
add
enter
inc
repnz
jmp
outs
mov
mov
aad
push
fld
les
jmp
adc
dec
adc
jmp
add
add
dec
mov
inc
add
ret
jmp
jmp
cs
cmp
sbb
xchg
out
fcomp
push
push
idiv
jno
cld
scas
mov
add
and
push
add
and
mov
jmp
addr16
pop
inc
cmp
aam
nop
jge
sub
add
and
jmp
sub
(bad)
std
jmp
inc
xchg
mov
sub
cmp
jae
add
add
(bad)
jge
pmaddwd
call
test
dec
add
inc
mov
(bad)
pop
mov
inc
jg
and
dec
or
push
mov
add
(bad)
push
jo
inc
cmps
sbb
enter
mov
add
fdiv
jecxz
jb
adc
retf
push
xchg
jmp
out
mov
mov
mov
or
(bad)
lock
cld
(bad)
xor
mov
call
imul
test
sbb
add
mov
adc
test
and
push
(bad)
jmp
xchg
ret
neg
mov
lea
test
jae
inc
add
mov
repz
sbb
mov
mul
shr
jecxz
test
push
cmp
inc
je
and
je
out
shl
idiv
xchg
icebp
lea
shl
fstp
or
mov
lock
pop
lea
inc
scas
stc
ror
rol
arpl
inc
xor
inc
cmp
aam
ret
test
add
pop
call
mov
or
scas
inc
outs
mov
jo
jmp
inc
inc
into
dec
or
add
mov
jl
add
arpl
jae
inc
add
xchg
punpckldq
ret
shl
and
and
icebp
xor
out
mov
jmp
push
adc
add
inc
push
jb
and
pop
pop
pop
add
mov
jp
cld
jmp
cdq
jo
jmp
movs
dec
nop
jmp
adc
xor
mov
and
adc
xchg
or
je
add
imul
aas
inc
pop
ret
pushf
fisttp
add
adc
lea
add
dec
lds
out
call
sbb
xchg
pop
add
dec
std
xlat
push
cmp
add
cld
xlat
jne
xchg
sub
cld
xlat
dec
dec
pop
push
mov
add
ret
call
inc
add
push
sub
adc
cld
mov
xor
dec
mov
es
stos
(bad)
pop
sbb
add
out
sbb
add
sbb
sbb
mov
mov
jbe
jne
daa
sbb
add
sbb
pop
lods
fidivr
mov
add
jmp
sbb
inc
add
ins
ret
add
es
stos
imul
pop
add
fldenv
jmp
mov
popf
sbb
inc
inc
scas
into
or
or
int
mov
jmp
nop
jmp
or
add
xchg
pop
mov
ret
sbb
jmp
inc
jmp
add
mov
jmp
das
in
lock
inc
inc
jmp
add
xchg
xchg
je
sub
es
and
dec
inc
add
out
xchg
jp
outs
sbb
cld
jmp
and
xor
cmp
pop
add
push
xchg
mov
(bad)
rcr
inc
add
mov
inc
call
add
or
ins
push
daa
ins
loope
push
(bad)
fbstp
adc
and
add
rcr
rcr
inc
sti
outs
or
jmp
gs
and
or
test
repz
adc
xchg
inc
or
shl
hlt
cli
add
mov
int3
jg
test
ret
dec
inc
add
sti
cld
add
cld
adc
cld
ins
xor
mov
inc
jbe
xchg
lea
mov
or
add
cmp
cmp
adc
and
aas
push
push
mov
push
(bad)
aas
add
adc
jp
cli
sbb
add
dec
dec
cld
lods
sub
leave
add
es
daa
mov
inc
cmp
retf
outs
jg
push
push
xchg
dec
out
daa
dec
cld
and
idiv
es
enter
cmp
sub
pop
and
mov
add
lahf
sub
out
sbb
add
push
or
imul
ss
mov
add
add
jmp
cdq
push
pop
(bad)
ins
mov
icebp
push
hlt
xor
lods
inc
jmp
push
push
pop
shr
ret
pop
mov
out
push
cdq
jmp
xlat
adc
mov
xor
adc
rcl
das
mov
adc
add
xrelease
add
ficom
fld
add
fs
push
pop
adc
leave
mov
sbb
xchg
push
sbb
sar
or
add
push
add
sbb
add
adc
push
std
sbb
dec
test
mov
ret
fldenv
push
mov
hlt
mov
stos
or
pushf
xor
ja
and
xchg
sti
je
mov
clc
and
(bad)
fstp
dec
(bad)
out
inc
jne
movs
jns
add
push
cmp
cli
inc
or
mov
push
mov
aam
leave
mov
movs
sub
rcl
dec
sbb
repnz
rcl
scas
or
test
add
add
jmp
xor
addr16
add
xchg
mov
call
test
ror
daa
inc
xor
jmp
mov
fdiv
jmp
je
es
or
gs
je
jbe
pop
stos
jb
(bad)
mov
scas
lds
inc
jmp
add
xor
aas
or
xor
push
lods
(bad)
jmp
imul
outs
mov
dec
call
aas
ja
jbe
push
cmps
mov
aas
jae
xlat
call
xchg
call
inc
(bad)
fsub
in
jbe
lahf
mov
call
scas
scas
inc
call
inc
inc
loope
jb
ror
push
cld
mov
inc
cmp
adc
add
add
mov
inc
mov
push
pop
cmp
enter
or
pop
nop
loopne
add
jmp
outs
popa
add
pop
inc
(bad)
pushf
retf
es
cdq
dec
adc
xlat
ret
cmp
loop
sub
jo
es
imul
add
or
leave
xchg
add
inc
cdq
jp
dec
add
clc
pop
push
test
pusha
loopne
call
jbe
lods
movs
and
daa
xchg
push
outs
add
sub
xchg
xchg
add
jmp
dec
pop
add
or
add
out
push
test
inc
out
dec
add
push
lea
add
fld
adc
jmp
and
retf
mov
add
add
add
jmp
adc
test
mov
cmp
xchg
jnp
sub
push
lea
dec
mov
mov
sti
mov
cwde
cld
adc
mov
dec
and
sti
dec
rcr
jg
add
sub
add
push
xchg
dec
les
jg
mov
inc
add
add
ds
adc
mov
leave
jae
sub
inc
add
cmp
je
push
xor
or
push
dec
cmc
inc
push
iret
inc
mov
push
add
mov
jmp
xor
or
cmc
sub
inc
adc
sti
mov
dec
in
(bad)
mov
mov
lods
push
xor
out
lock
add
add
in
inc
jmp
add
repz
adc
sbb
(bad)
jl
(bad)
lods
cs
dec
mov
aas
jae
and
out
int
pop
add
add
dec
mov
inc
ins
inc
xchg
dec
and
adc
retf
mov
jbe
jo
and
leave
lods
dec
pushf
retf
es
rcr
pop
cld
data16
aad
retf
retf
cmps
mov
add
inc
fidiv
jmp
dec
xor
test
xor
sub
dec
stos
push
inc
pop
xchg
mov
pop
in
hlt
add
push
add
sub
mov
sahf
sub
int3
in
push
cmc
or
rcl
add
jp
sti
aam
push
inc
jmp
jge
pop
out
int3
xor
fs
and
jmp
test
sti
jmp
and
and
push
sub
push
out
jmp
push
inc
das
test
and
cmp
fadd
and
and
mov
pop
sbb
inc
add
xchg
add
mov
movs
clc
xor
jb
pop
xor
mov
sar
push
jne
and
scas
dec
dec
aas
and
jg
and
jle
and
mov
mov
add
pop
call
add
std
inc
les
cwde
mov
xor
add
add
mov
mov
enter
jg
and
inc
add
or
pop
mov
inc
add
neg
adc
jmp
mov
out
lods
dec
sbb
jns
dec
mov
es
daa
in
dec
test
pusha
and
in
(bad)
jmp
jne
add
pusha
jnp
sahf
in
(bad)
call
jp
daa
in
jmp
mov
in
sbb
stc
les
mov
mov
xor
pop
pop
mov
inc
fdivr
sahf
add
dec
sti
push
jg
jno
fcmovnu
in
jmp
js
and
add
xchg
fimul
es
sbb
or
sti
or
pop
cmp
add
inc
jne
sbb
jmp
lods
leave
ja
inc
retf
and
fsub
mov
(bad)
bound
cli
jmp
add
dec
ins
adc
xchg
call
iret
sub
cmps
shr
iret
mov
jbe
jmp
popa
mov
or
mov
mov
out
add
(bad)
xchg
movs
jge
fstp
je
adc
sti
jmp
stc
int3
mov
cli
cli
sti
jmp
ss
sti
jmp
xchg
clc
jb
push
add
mov
(bad)
cmp
inc
add
sub
and
and
mov
xchg
jmp
mov
add
inc
add
xchg
cmp
(bad)
fdiv
and
add
add
add
(bad)
jl
call
adc
outs
loope
mov
push
cmp
test
rcr
mov
mov
(bad)
(bad)
push
and
cli
sti
(bad)
mov
inc
add
mov
(bad)
mov
pop
xchg
ja
dec
pmulhuw
outs
aas
add
mov
fisttp
enter
cmc
test
mul
daa
call
cwde
jo
aas
sub
mov
and
out
push
popa
aas
cld
sar
adc
cmp
aas
cld
aas
scas
inc
cld
and
and
pop
pop
adc
mov
xor
mov
xchg
daa
in
dec
push
aas
mov
xor
and
gs
inc
add
add
cs
inc
pusha
and
in
(bad)
call
pop
mov
loopne
inc
es
(bad)
jmp
iret
mov
loope
inc
mov
retf
jb
jne
inc
push
xchg
ins
xchg
inc
jmp
rcl
jne
add
in
xchg
ret
pop
mov
fwait
pop
sub
mov
xchg
mov
or
test
add
ficom
jmp
sbb
test
ds
fs
(bad)
shl
sub
push
xor
cli
adc
push
pop
in
add
and
in
test
jo
ds
stos
mov
idiv
sbb
push
sbb
gs
cld
sub
test
das
popa
test
imul
add
add
inc
dec
mov
not
xchg
push
add
in
pop
arpl
clc
pop
ret
or
fmul
in
push
and
push
inc
jmp
outs
cmp
pushf
jp
jo
in
push
push
sub
adc
pusha
call
xor
clc
loopne
test
inc
add
rcl
jne
mov
xchg
test
sub
add
add
add
dec
std
or
sub
add
mov
add
or
out
inc
add
adc
xchg
loop
inc
or
add
xor
mov
xor
inc
add
std
repz
adc
adc
mov
cmp
sar
xchg
sti
add
jmp
cld
sbb
adc
add
jb
cmp
jmp
mov
(bad)
aam
jle
out
sub
cld
cli
dec
xchg
add
xor
ins
repz
cmp
adc
and
sub
push
popa
or
ds
inc
es
call
mov
shl
mov
js
add
fst
xchg
fld
push
fidiv
mov
cli
cmp
mov
repz
mov
lods
int3
ds
fdiv
mov
dec
stos
enter
sub
fucompp
add
repz
mov
ds
cmp
test
mov
repz
mov
pop
push
lock
push
movs
mov
mov
add
add
add
mov
mov
sbb
in
xchg
repnz
and
in
xchg
cld
pop
js
out
jno
popa
and
jne
push
lock
sub
xchg
push
pop
cmps
std
sti
cli
in
mov
sub
fnsave
jb
cmps
int3
sub
mov
outs
loopne
inc
iret
ret
hlt
xchg
sub
add
adc
add
and
jbe
test
or
test
add
jb
add
mov
push
test
out
cli
in
(bad)
std
aas
jmp
mov
sub
cld
jae
adc
call
inc
cld
pop
adc
mov
iret
ret
inc
dec
sbb
ss
push
lock
sbb
cld
pop
sbb
(bad)
push
sti
or
repz
xor
mov
cmc
add
sub
push
mov
jmp
pushf
mov
clc
push
jecxz
imul
jae
sbb
test
ror
inc
(bad)
mov
add
es
pcmpeqb
jbe
pop
scas
test
mov
imul
add
lods
mov
out
xor
and
or
cmp
mul
inc
das
cmp
fwait
xlat
pop
gs
inc
das
and
loopne
add
xor
jmp
inc
jae
stos
daa
nop
dec
(bad)
call
popf
test
call
sbb
add
or
jge
es
xchg
jecxz
jns
add
out
xchg
jmp
pusha
pop
add
pop
mov
add
push
in
out
cmp
push
mov
jmp
pusha
ins
sub
mov
xor
test
rol
inc
jmp
std
xchg
inc
jmp
add
fdivr
pop
adc
mov
mov
sub
rcl
sub
ja
sub
jmp
(bad)
adc
je
mov
movs
xor
ret
jmp
cmp
sbb
cmp
xchg
inc
add
in
jno
and
jb
fs
jno
cmp
std
(bad)
cmp
sar
mov
add
and
out
jecxz
cwde
out
sti
pusha
jno
int3
sub
xchg
pop
and
add
(bad)
ins
in
inc
sbb
nop
xor
sti
pop
push
out
lock
in
sti
add
push
ja
sar
push
les
dec
rol
sub
adc
dec
push
daa
icebp
into
jmp
ins
mov
(bad)
mov
mov
add
xor
dec
lea
int
inc
add
add
xchg
das
and
aad
sub
shl
add
sub
jmp
sub
dec
pop
add
and
add
and
or
push
dec
add
lds
es
pop
aas
(bad)
imul
retf
push
es
lds
call
mov
(bad)
push
ror
or
movs
test
daa
out
mov
(bad)
mov
sub
dec
lods
movs
aam
xor
inc
es
or
(bad)
jmp
int
addr16
(bad)
push
(bad)
pop
push
mov
dec
mov
dec
xor
(bad)
inc
clc
ret
xor
sub
sbb
dec
sahf
push
mov
cmp
add
add
in
mov
add
out
inc
mov
or
add
popf
xor
daa
cmps
jmp
mov
mov
cli
rcr
cdq
mov
rcr
jmp
and
out
mov
jecxz
pushf
pop
mov
cmp
add
shr
loope
mov
sub
into
ss
jmp
fild
add
add
cld
add
add
aad
inc
add
(bad)
out
pusha
div
xchg
nop
sbb
and
mov
sti
mov
xor
shl
mov
jmp
jge
add
and
jmp
inc
je
xlat
cld
fdivp
jp
cld
gs
inc
jmp
push
call
sti
jmp
push
pop
cmp
cli
cmps
cmp
adc
and
push
inc
add
sar
das
jno
add
push
(bad)
ret
dec
paddw
xor
test
das
cmp
sub
out
add
in
jne
das
push
(bad)
fld
repz
ret
push
cmp
cld
(bad)
inc
sub
mov
jne
je
jmp
add
int
fdivr
push
sub
adc
js
idiv
xchg
jmp
fcomp
cmp
test
xor
call
sbb
mov
(bad)
ret
sub
jg
mov
inc
es
push
fldenv
or
ja
jmp
adc
jbe
fidiv
jp
mov
test
xor
push
int
sbb
adc
pop
sti
and
push
inc
(bad)
fisttp
bound
test
mov
xor
xor
xlat
jle
xchg
dec
test
mov
xchg
int3
out
inc
sti
add
jmp
cmp
cmp
jmp
mov
dec
push
mov
adc
aam
or
push
xor
call
pop
add
fnclex
popf
add
sbb
cli
out
ror
fstp
xchg
mov
jnp
sub
mov
sub
sbb
sbb
jecxz
test
jle
cmp
jle
aaa
xchg
in
add
lock
loopne
sbb
push
movs
je
push
(bad)
sti
aas
jmp
and
mov
add
pop
das
mov
cli
aas
jmp
sbb
mov
xor
xor
pop
xchg
(bad)
pop
adc
dec
add
inc
add
mov
int3
stos
and
mov
mov
add
cmp
add
adc
dec
(bad)
jp
mov
add
xor
je
jbe
test
cld
aas
je
xor
or
je
mov
(bad)
retf
cld
aas
sti
cmp
scas
add
inc
unpckhps
inc
jle
add
movs
push
push
in
push
call
xchg
in
jge
clc
jecxz
fiadd
push
add
add
dec
jp
iret
inc
mov
push
fist
ds
push
ja
dec
jmp
push
cmp
fistp
fild
sbb
mov
fcos
jmp
fcmovnu
push
ds
mov
shl
fcos
jmp
pop
arpl
fstp
(bad)
stos
popf
inc
add
add
pop
inc
jo
xor
and
add
fild
movs
fdivr
jmp
xchg
aas
dec
pop
into
pop
and
sub
sbb
daa
inc
jmp
(bad)
movs
test
add
mov
sub
pop
out
rcr
out
jb
pusha
leave
popa
mov
out
ror
pop
mov
sbb
add
add
jle
aam
cld
sbb
sub
sbb
xchg
pop
das
movs
add
ret
push
add
enter
inc
data16
dec
loop
and
add
lods
sub
jmp
jnp
in
cmps
adc
inc
push
add
leave
add
sub
(bad)
cmp
push
jle
and
pop
xlat
out
movs
pop
in
add
call
and
or
jmp
inc
add
aaa
data16
test
fsub
mov
adc
adc
push
and
xchg
in
jmp
pop
ins
or
jmp
outs
and
dec
data16
xchg
fldenv
xchg
(bad)
out
or
inc
ret
or
inc
xchg
daa
add
adc
lock
add
mov
aas
ficom
pop
inc
scas
pop
dec
or
xor
dec
and
cmp
call
add
inc
mov
(bad)
xor
mov
or
push
or
add
mov
inc
dec
push
test
dec
call
push
add
mov
add
add
mov
sti
mov
adc
es
push
push
inc
dec
mov
out
sahf
pop
repnz
data16
mov
jecxz
cmc
sbb
iret
mov
mov
inc
push
push
mov
popf
xor
es
iret
jb
outs
stos
out
cmp
(bad)
in
(bad)
call
stos
cmp
out
jmp
gs
add
dec
jo
mov
es
inc
(bad)
mov
mov
icebp
lahf
sti
out
mov
sub
movs
fstp
sbb
push
jmp
jp
and
mov
mov
sub
inc
push
std
sahf
mov
(bad)
dec
outs
adc
cmps
and
xor
mov
scas
or
sub
add
add
xor
mov
movs
fscale
(bad)
and
pop
(bad)
dec
je
mov
int3
and
(bad)
push
sub
mov
add
mov
es
stos
stc
out
sub
mov
push
test
mov
sti
push
test
push
mov
add
and
xchg
inc
mov
add
dec
call
bound
adc
sti
jmp
mov
pop
xchg
jae
add
into
cmp
cmp
mov
jle
cmp
add
retf
cmc
fbstp
cmp
jo
in
jle
stc
leave
inc
add
cld
adc
test
repz
ficom
in
push
sti
inc
add
add
pop
pop
xor
inc
xchg
nop
sub
mov
(bad)
cmp
pop
inc
arpl
imul
addr16
dec
call
hlt
jecxz
aam
add
jg
adc
sbb
std
jne
repnz
mov
add
test
aas
adc
or
sub
pop
bound
or
test
jmp
inc
mov
or
push
out
mov
add
add
mov
jae
jecxz
adc
aas
(bad)
jecxz
adc
cmp
es
and
addr16
jae
cmp
add
pop
loopne
adc
jmp
fmul
or
add
add
add
popf
cmps
enter
jge
dec
call
cld
xor
inc
outs
dec
jo
cs
cmp
push
scas
xor
in
cmp
cmp
imul
loope
gs
push
sub
add
cld
or
jmp
sub
in
xor
inc
test
data16
iret
scas
pop
push
fcomi
pop
cmp
add
pusha
add
imul
pop
add
iret
loopne
adc
jp
fsubr
stos
mov
xor
les
icebp
into
fld
mov
fst
inc
adc
and
sub
data16
push
fdiv
ds
push
ins
xchg
imul
sbb
outs
adc
and
(bad)
aam
ss
jmp
in
add
mov
sbb
adc
inc
xor
int3
shl
cmps
cmc
jne
out
add
das
jp
rol
add
mov
pop
inc
or
test
push
xor
pop
sbb
cdq
sbb
xchg
cli
imul
pop
mov
push
adc
inc
xchg
dec
mov
pop
pop
sbb
dec
std
ss
add
and
xchg
pop
and
dec
inc
call
ja
daa
inc
add
inc
ja
inc
or
dec
mov
in
mov
in
(bad)
idiv
jmp
in
jb
add
iret
out
dec
and
and
inc
add
add
int3
out
jmp
xor
xchg
and
jmp
out
pop
sub
sub
and
and
or
and
sar
imul
mov
jbe
jmp
mov
inc
enter
iret
cld
xor
and
cmp
xchg
or
xor
add
pop
inc
out
inc
push
jno
shr
es
sub
cmp
fnstenv
mov
sahf
or
add
xchg
push
and
in
sahf
cdq
cmp
vmulsd
xor
gs
rcr
and
dec
sub
add
inc
adc
gs
ins
inc
adc
xor
push
sahf
sti
outs
enter
sub
retf
jmp
lods
sahf
dec
add
bound
retf
jl
push
int
loope
in
repnz
sahf
xchg
in
jge
jns
sub
stos
xlat
sti
bound
push
pop
sahf
and
dec
or
jb
aas
sti
mov
fild
add
and
call
add
mov
mov
and
js
jmp
and
ror
add
in
push
arpl
mov
movs
pop
add
xor
dec
inc
add
add
mov
daa
test
aas
inc
mov
mov
hlt
test
mov
xchg
add
inc
data16
aad
add
test
push
call
push
or
push
adc
inc
(bad)
int3
push
jg
jecxz
xchg
cld
push
push
hlt
test
aam
outs
or
jmp
jge
or
(bad)
cld
xor
fisubr
in
dec
data16
inc
dec
sbb
and
pop
xchg
fwait
ds
jmp
imul
lods
popf
(bad)
xlat
ja
fwait
sti
fwait
test
out
push
add
mov
stos
xchg
aas
es
add
mov
add
stos
sub
mov
lea
cli
cmp
adc
xchg
push
mov
scas
mov
fwait
mov
test
inc
call
add
aad
and
add
add
dec
fld
es
add
movs
stc
fiadd
lods
xchg
mov
inc
stc
add
(bad)
es
aam
or
das
pop
neg
sbb
inc
fmul
aad
test
xchg
sbb
mov
sub
fs
in
pusha
shr
and
inc
push
mov
dec
in
mov
mov
push
add
js
cdq
aam
nop
int3
ret
clc
out
sbb
stc
out
fsub
cs
jecxz
xchg
(bad)
imul
push
or
ins
ds
fs
shr
jmp
outs
dec
ret
dec
sti
and
retf
inc
cmc
imul
cmp
xchg
lds
and
mov
adc
xchg
add
sub
sub
mov
dec
lea
or
(bad)
repnz
add
test
push
in
push
push
add
mov
mov
dec
clc
push
cld
test
out
sti
je
popf
xor
cli
sbb
cld
xor
add
inc
adc
inc
mov
das
xchg
mov
aas
sahf
adc
lods
(bad)
call
push
sti
(bad)
jl
pop
test
or
ret
call
push
xchg
dec
jg
jmp
pushf
add
(bad)
pop
jne
mov
arpl
mov
out
(bad)
(bad)
jmp
lahf
sbb
jle
mov
call
push
cld
stos
pushf
cwde
mov
in
mov
add
es
lods
sub
mov
call
cwde
cmp
fnstsw
ja
inc
mov
mov
fstp
fiadd
add
or
mov
loopne
adc
rol
pop
add
jno
mov
out
jmp
pushf
and
test
mov
jo
or
add
add
mov
test
add
jno
xchg
ror
add
add
pop
es
jb
adc
xchg
mov
es
or
push
jb
pop
cmps
int
xchg
and
fstp
dec
or
mov
lea
adc
inc
push
mov
imul
es
lahf
xchg
aas
test
inc
add
iret
fild
jmp
xchg
inc
add
cmps
dec
or
sub
ins
jmp
or
inc
add
test
or
inc
adc
(bad)
or
cmp
loope
adc
jb
cld
aas
jmp
fcomp
sti
sahf
mov
ror
adc
jmp
and
sti
aas
jmp
xchg
dec
and
add
add
push
adc
cmp
add
cld
push
add
mov
rcl
push
in
call
sar
int3
and
aas
xchg
rol
add
lds
sti
add
ror
ficomp
jecxz
push
sub
test
inc
add
les
call
dec
fnsave
lock
adc
add
add
push
adc
or
add
sbb
pusha
jnp
add
mov
add
mov
gs
loope
fcmove
push
out
push
scas
cmps
fdivr
(bad)
mov
popa
shr
ins
jg
mov
sub
popf
pop
jg
mov
in
dec
jle
jnp
mov
jmp
push
pop
xchg
add
jno
repz
fcomp
jb
add
add
dec
std
cmp
inc
bound
push
jp
sub
add
fnsave
pop
push
mov
sbb
xchg
out
cld
daa
(bad)
cmp
add
pop
test
inc
(bad)
scas
std
ror
jmp
pop
mov
aam
inc
sub
inc
add
inc
outs
inc
inc
add
add
inc
out
mov
jno
mov
mov
retf
jno
int
sbb
push
aad
retf
mov
test
inc
dec
jg
inc
sbb
sub
inc
out
lods
xchg
imul
cmps
inc
jmp
ins
movs
int
jmp
popf
rol
and
mov
add
add
shl
adc
inc
xchg
inc
retf
mov
and
int3
sti
jb
fadd
popa
or
sti
jmp
stos
xor
and
dec
sbb
mov
lea
ret
rcl
jo
jmp
shr
jmp
popf
dec
clc
ficomp
cmp
cmp
add
or
jg
add
ss
dec
stos
xor
mov
push
push
cmps
repz
js
ds
add
call
lock
add
mov
mov
jae
shl
lds
inc
mov
out
fisttp
repz
inc
cli
mov
and
jmp
cmp
inc
test
add
cld
jo
sbb
add
add
dec
inc
mov
xor
xchg
in
add
es
lock
scas
out
pop
(bad)
(bad)
jmp
enter
ret
jg
inc
xlat
clc
jae
xlat
lds
(bad)
fstp
lods
addr16
adc
leave
out
jnp
fnstsw
pusha
out
jae
in
sub
lock
dec
les
xchg
js
xchg
arpl
jae
add
add
mov
mov
ret
jmp
fwait
add
jp
pop
adc
mov
mov
add
jmp
inc
mov
adc
push
mov
aam
pop
test
mov
fnsave
add
das
std
icebp
and
dec
mov
adc
fld
and
adc
test
mov
cmp
out
sar
add
ins
and
jl
mov
jno
xchg
shl
fwait
std
xchg
out
xor
inc
sbb
xlat
ret
inc
jb
pop
scas
push
and
or
sbb
pop
(bad)
(bad)
in
retf
sti
adc
or
es
adc
clc
outs
mov
add
add
cmp
push
enter
and
popa
shl
add
mov
or
pushf
mov
pop
pop
push
imul
imul
inc
out
and
pusha
out
pop
fs
ret
sti
hlt
push
xor
xchg
pop
(bad)
jmp
inc
push
push
mov
jnp
jecxz
mov
sti
fimul
ja
add
add
out
mov
call
data16
inc
push
(bad)
fcmovbe
adc
imul
mov
adc
inc
stos
arpl
add
repz
xor
xlat
inc
outs
and
(bad)
cld
adc
adc
add
mov
push
jmp
adc
sub
jo
cmp
lods
adc
stos
mov
xor
fadd
add
add
out
clc
and
push
out
icebp
(bad)
data16
(bad)
jmp
fimul
movs
bound
add
into
xor
cld
cmp
cmc
aas
es
scas
mov
adc
sub
movs
rol
or
jmp
sub
fcom
(bad)
sbb
adc
jmp
pop
push
call
fcom
cmp
and
jmp
(bad)
call
out
or
dec
(bad)
inc
add
add
bound
repz
test
jno
dec
xchg
es
(bad)
hlt
jmp
test
sbb
retf
shl
add
dec
adc
es
fsub
sub
add
push
loope
jecxz
sub
add
mov
pop
mov
cmc
jl
(bad)
sar
adc
fldenv
add
mov
js
xchg
sub
sar
adc
shl
adc
pop
enter
add
add
fcomp
jp
add
vsubss
jne
ss
or
pop
push
int3
sub
ret
(bad)
cmc
jbe
push
jb
push
mov
cmp
and
daa
sar
and
jl
add
add
add
leave
pop
(bad)
outs
retf
and
or
sti
hlt
leave
xor
call
fsubr
ins
jg
push
fdiv
jo
and
and
test
push
fnsave
mov
fmul
add
(bad)
jg
mov
sar
add
dec
lds
aas
inc
add
dec
inc
cmp
add
add
or
add
sti
pop
dec
call
(bad)
mov
dec
add
ja
pop
pop
je
pop
mov
inc
add
in
cld
dec
pop
adc
ret
mov
push
outs
and
push
push
sbb
xchg
(bad)
jae
and
js
sti
dec
pop
xor
mov
dec
cmp
add
jmp
cld
lods
js
mov
dec
lock
inc
daa
scas
inc
xchg
adc
inc
ret
lahf
sub
or
fwait
mov
arpl
lods
jl
inc
mov
mov
inc
sub
and
lods
(bad)
dec
shl
call
lods
inc
add
adc
and
jmp
lods
jl
push
and
inc
jmp
call
ret
inc
int
rep
aas
(bad)
stos
out
add
inc
jg
lods
aas
or
add
inc
pop
inc
fnop
and
xchg
sub
xor
into
sub
aas
out
pushf
je
inc
pop
inc
sbb
inc
jmp
mov
cmp
jecxz
dec
mov
js
iret
in
out
add
add
sbb
push
es
jmp
or
push
inc
or
mov
inc
je
push
cmp
jne
push
ds
mov
sbb
(bad)
add
loope
shl
mov
cmp
je
xchg
inc
add
and
ds
add
jl
fnstsw
add
add
pop
mov
fidivr
call
jb
sbb
sub
push
loope
sti
pop
dec
add
pusha
jmp
xor
pop
adc
xchg
jp
lds
inc
cmp
inc
fs
push
inc
aas
and
pop
adc
and
inc
imul
mov
inc
jecxz
jb
cld
push
les
cmp
dec
stc
mov
repnz
je
cwde
cld
cmp
mov
in
(bad)
aas
mov
int3
dec
dec
std
adc
mov
pop
jle
push
aas
sti
retf
dec
je
push
xchg
clc
call
shr
cld
xor
mov
and
lods
xor
nop
cmp
add
add
lahf
jp
mov
pop
cld
jns
inc
jae
mov
(bad)
repnz
mov
es
lock
push
jb
pop
pop
adc
icebp
repz
adc
mov
lock
sahf
xchg
add
aam
ror
inc
push
inc
push
mov
out
into
dec
imul
jae
push
sbb
xor
and
adc
dec
arpl
aaa
jmp
out
fild
movs
mov
cmps
mov
pop
daa
cmp
adc
ret
mov
retf
dec
and
add
adc
sub
adc
iret
fs
push
mov
xchg
mov
mov
loope
es
scas
lock
add
push
pop
pop
loope
popw
or
inc
jmp
sub
jne
xchg
inc
out
rol
lea
sti
cmp
xlat
jmp
or
or
leave
xchg
push
sub
sti
fwait
mov
push
in
loopne
je
mov
mov
lods
aam
rcl
mov
add
add
cmp
mov
or
add
xor
(bad)
dec
add
std
add
icebp
add
add
cli
jae
xor
cld
push
jl
jle
push
dec
cld
push
push
jbe
(bad)
call
fiadd
pop
in
xchg
iret
aas
int
jne
cld
inc
jle
repz
cmp
add
add
sbb
push
adc
mov
inc
dec
or
dec
add
jmp
cmc
inc
pop
mov
sar
enter
ss
add
sub
repnz
xor
jmp
add
xor
mov
sbb
and
repz
add
lea
dec
ins
jns
daa
pop
icebp
or
and
jb
add
repnz
cdq
add
mov
pop
pop
nop
repz
lods
lods
cld
xor
aas
es
cmp
xor
inc
mov
cs
xor
test
(bad)
das
sub
xchg
or
hlt
jnp
outs
mov
loop
int
ficom
repnz
push
imul
mov
mov
pusha
in
xor
(bad)
ret
xchg
mov
mov
add
test
daa
jmp
cmp
aas
and
mov
shl
mov
(bad)
adc
nop
adc
pop
mov
dec
jp
lahf
dec
not
xor
cwde
in
adc
mov
dec
jmp
mov
(bad)
scas
es
stos
sti
lock
or
mov
bound
xchg
adc
icebp
mov
mov
idiv
mov
jbe
mov
and
xchg
xchg
(bad)
call
(bad)
mov
mov
lock
stos
and
add
add
add
aaa
mov
cmps
sbb
adc
repnz
cmp
ins
or
xor
mov
(bad)
cmp
jl
jbe
scas
int3
dec
inc
pop
ret
pop
or
inc
inc
or
add
out
rol
cmp
mov
xor
add
or
lds
mov
mov
mov
pop
and
add
add
js
add
in
or
mov
sti
adc
(bad)
aas
cmp
jmp
stos
sub
xchg
cwde
mov
daa
mov
xor
popf
cmc
and
xor
out
inc
add
(bad)
aad
xor
in
or
es
fnstcw
es
mov
add
xor
add
jne
call
and
(bad)
pop
das
and
aas
mul
data16
test
or
shl
das
pop
inc
outs
les
jmp
leave
or
mov
add
mov
adc
pop
(bad)
out
xlat
ss
cmp
adc
es
add
add
push
leave
adc
ficom
jp
jle
sub
xor
int
add
inc
dec
push
mov
mov
add
xor
push
cmp
inc
es
pop
and
(bad)
cmps
js
loopne
inc
jmp
adc
mov
inc
je
pushf
dec
add
call
ret
cmp
jmp
daa
mov
add
bound
adc
and
add
call
jp
aas
jmp
imul
jle
mov
mov
fild
pop
inc
add
mov
popf
or
mov
repz
mov
dec
pop
sub
inc
push
fidivr
je
and
and
jae
dec
mov
daa
xor
cmp
dec
and
leave
add
add
and
das
fistp
jge
add
in
sub
dec
call
call
mov
ins
idiv
cwde
jmp
je
nop
std
jmp
push
add
mov
aas
jecxz
adc
jmp
add
mov
retf
push
push
adc
dec
push
jle
jle
add
jg
inc
hlt
test
push
add
pop
adc
add
stos
jae
popa
fucomip
movs
scas
push
ret
jecxz
mov
or
lock
arpl
test
popfw
jle
ss
jle
cli
popf
jae
lods
fisub
inc
repnz
cld
add
out
loopne
sti
xchg
add
add
es
push
enter
push
lods
clc
or
test
sub
mov
add
add
popf
cmc
inc
cs
jns
nop
call
shr
(bad)
mov
dec
dec
(bad)
ror
mov
loopne
sar
nop
mov
(bad)
mov
test
data16
lea
or
stc
mov
inc
ins
aas
outs
ja
test
add
add
pusha
inc
es
jl
add
inc
retw
and
dec
cs
add
mov
gs
dec
hlt
daa
mov
icebp
add
inc
fidivr
aas
pop
dec
sbb
data16
mov
js
mov
add
jge
cli
cs
popf
sub
inc
(bad)
call
in
inc
fstp
or
lods
sti
imul
mov
loope
add
add
mov
hlt
sahf
or
(bad)
xor
inc
cmps
imul
das
xor
jmp
aaa
hlt
ret
inc
fnsave
jnp
sub
inc
bound
xor
cli
sbb
or
and
cmps
stos
jbe
sub
ror
push
leave
sub
inc
push
jb
adc
aas
cmp
add
or
std
inc
add
dec
cmp
mov
scas
add
and
bound
add
clc
pop
aaa
(bad)
repz
dec
or
xchg
cmp
add
retf
pop
xchg
cli
xor
bswap
ret
push
mov
sbb
push
adc
adc
je
or
retf
inc
bound
cmp
push
cmps
int3
cmp
iret
leave
sar
retf
jmp
mov
call
add
dec
add
cmps
inc
es
sbb
es
pop
das
data16
in
xor
or
cmps
push
das
jne
xor
ja
and
neg
mov
or
es
adc
xchg
mov
push
lahf
or
es
push
hlt
pop
mov
and
stos
fnsave
cmps
movs
sub
add
add
add
push
add
out
dec
mov
sti
rol
aas
push
pop
ret
pop
mov
movs
inc
dec
cld
cmps
mov
mov
add
pop
sub
ret
shr
pusha
jo
pop
jo
dec
push
cmp
cmp
sbb
mov
cmp
pop
inc
jmp
retf
fwait
xor
add
sub
add
pushf
mov
aas
inc
pop
faddp
sbb
inc
cmp
jb
jmp
dec
cs
inc
pusha
adc
sti
outs
stos
pop
and
lock
jmp
and
xor
inc
inc
add
mov
call
jno
(bad)
fldenv
inc
in
cli
adc
xchg
cmp
ret
inc
pop
adc
or
dec
inc
add
mov
jmp
pop
inc
add
cld
jae
push
cmp
or
fwait
(bad)
inc
xchg
push
inc
lea
push
stos
call
test
dec
pop
add
leave
fincstp
jmp
inc
cmp
jne
add
add
stos
imul
test
idiv
or
and
dec
cdq
test
jg
bound
cmp
push
push
or
pop
add
dec
inc
push
push
push
cmp
add
mov
mov
test
or
bound
jp
and
inc
call
es
mov
inc
add
add
or
pop
add
out
mov
xor
out
out
sbb
xor
xchg
add
fwait
ins
je
out
sbb
adc
xor
add
jmp
add
xor
sti
popa
push
mov
push
mov
fwait
dec
inc
call
jmp
enter
dec
popa
dec
push
sbb
jle
sbb
and
add
xchg
popf
(bad)
jmp
inc
sub
inc
or
cmp
mov
jmp
pop
bound
les
(bad)
mov
inc
jmp
div
dec
test
mov
push
add
not
pop
push
stos
cmp
icebp
push
mov
pop
cmp
add
jne
out
imul
add
add
stos
xor
add
inc
jmp
add
inc
jo
inc
je
aas
dec
je
sbb
das
and
mov
and
add
sub
jmp
sub
cmp
and
cmp
mov
cmp
loopne
and
sar
and
(bad)
aam
ss
add
add
icebp
pop
cld
jmp
mov
cmp
jp
lods
sti
jb
pop
adc
iret
inc
sti
out
xlat
fcomp
inc
pop
aas
push
test
stc
pop
mov
add
(bad)
or
shl
int
inc
mov
jae
iret
out
(bad)
mov
inc
add
cmps
div
jne
or
add
pusha
add
scas
cmp
xor
and
jne
dec
inc
add
or
add
(bad)
sbb
div
inc
cmp
pop
add
inc
add
jle
add
cwde
popf
and
inc
dec
call
mov
enter
call
sti
mov
or
mov
inc
call
add
add
add
push
out
mov
jle
or
fild
push
pop
imul
lock
ror
pop
fwait
(bad)
mov
mov
(bad)
std
jns
mov
jne
mov
mov
add
xor
dec
es
cli
cmp
cmp
and
cmps
add
inc
jmp
xor
add
add
mov
cmp
std
cmps
les
dec
xchg
in
sbb
pop
dec
ror
ins
push
retf
sbb
cmps
pop
push
push
fwait
out
out
test
dec
mov
cld
mov
cli
jge
repnz
fwait
mov
or
push
mov
cmps
mov
cmp
cmps
add
lds
inc
pop
hlt
stos
scas
xchg
sbb
add
adc
aaa
ds
and
add
adc
xor
pushf
dec
cmp
inc
sti
cmp
pushf
inc
cmp
inc
and
sti
xchg
push
xor
or
cmp
test
mov
sti
(bad)
cmps
xor
push
xchg
push
push
inc
out
cli
inc
fcomp
xchg
dec
xchg
xor
je
das
sub
jl
in
adc
mov
xor
jne
xchg
xor
gs
shrd
jne
push
je
or
lea
push
lea
add
mov
add
es
adc
add
and
call
push
cmp
inc
push
dec
adc
rcr
and
hlt
lea
div
punpckldq
les
jnp
dec
sar
dec
mov
add
pop
add
repz
es
adc
mov
shl
lea
es
lock
pop
into
(bad)
jmp
or
cli
xchg
mov
aas
add
outs
cld
push
pop
pop
dec
mov
xor
shl
jl
stos
mov
cmp
data16
pop
adc
aad
push
cdq
imul
pop
adc
jns
jl
push
sbb
sbb
sbb
es
jo
imul
les
sub
inc
jge
aad
ret
add
inc
add
aam
jmp
or
inc
mov
pop
es
ret
lods
loop
in
mov
push
mov
mov
mov
sbb
pop
xchg
xchg
aad
jmp
mov
jmp
(bad)
xor
add
cs
out
xor
inc
es
inc
sbb
ss
adc
add
add
inc
test
popa
(bad)
dec
call
sub
out
adc
adc
out
cld
(bad)
call
movs
pushf
sti
fisubr
and
inc
cmp
inc
push
shr
add
ins
and
movs
xchg
push
push
sti
(bad)
sar
sti
gs
jg
add
ror
jb
arpl
rcl
movs
cdq
or
and
mov
xchg
movs
cdq
add
add
pushf
mov
(bad)
repnz
retf
lea
inc
inc
xor
jge
mov
fadd
jmp
retf
shl
shl
mov
dec
add
cmpxchg
xchg
pop
or
push
push
call
lea
and
(bad)
call
add
add
jge
ins
mov
xor
idiv
dec
mov
test
idiv
inc
or
sbb
adc
or
jo
push
sub
je
push
icebp
jg
inc
and
cld
mov
push
add
xor
daa
stos
add
lds
(bad)
jmp
dec
sbb
(bad)
jle
cmps
jp
dec
mov
test
add
movs
call
push
call
mov
xor
add
sti
cmp
add
es
cld
or
sti
shl
sbb
xor
mov
in
in
add
repz
outs
fist
mov
push
hlt
clc
push
jbe
iret
lods
scas
jge
icebp
js
stos
jg
ins
mov
pop
inc
pop
repz
mov
add
outs
retf
stos
jl
or
push
inc
push
add
jmp
jl
jbe
lods
push
mov
cmp
sub
ror
mov
fs
outs
adc
and
jbe
xor
es
test
add
idiv
dec
add
inc
add
push
or
cmc
pop
fwait
inc
cmc
test
and
push
outs
cmp
add
add
xchg
ss
out
push
rol
mov
or
jmp
cmp
add
cmps
test
or
ficom
out
push
mov
call
popa
addr16
sti
je
cmps
pop
push
sub
or
fwait
dec
sar
add
cmp
inc
std
call
fadd
jle
and
mov
outs
leave
fiadd
add
add
ret
test
adc
mov
dec
cmp
cs
push
jne
jp
jge
dec
mov
scas
or
and
mov
jno
ret
jg
jmp
sbb
mov
and
mov
mov
jg
jmp
sbb
add
mov
jno
ret
jns
sldt
add
jo
ds
je
iret
into
and
pop
jl
leave
push
mov
inc
mov
pushf
xchg
jnp
sbb
shl
add
stc
dec
cmp
sar
out
out
sub
cmp
mov
clc
mov
enter
sbb
in
lods
mov
in
pop
pop
add
pop
lods
clc
mov
add
je
les
popa
lahf
lods
dec
mov
and
in
jge
push
xor
pop
or
push
cld
fadd
push
pop
xor
add
sbb
shl
icebp
sbb
data16
mov
dec
pop
outs
xor
in
repz
dec
push
inc
xor
add
add
add
stos
out
es
div
dec
push
icebp
call
es
sub
and
test
aas
xchg
push
push
fwait
call
add
jp
enter
xchg
pop
xor
sub
inc
jmp
dec
xor
ret
inc
cdq
std
add
adc
pop
lea
hlt
push
mov
and
sub
rol
jge
cli
fadd
add
add
xchg
retf
jmp
pop
cmp
pop
out
push
cli
pop
or
dec
xor
in
push
cs
hlt
pop
and
leave
inc
adc
and
or
mov
add
fs
pop
addr16
out
dec
ret
and
inc
add
and
cdq
sti
add
inc
not
dec
xchg
add
add
dec
(bad)
cli
ja
push
mov
adc
ret
shl
or
push
add
jle
jne
add
adc
inc
add
xlat
mov
in
mov
dec
lea
cld
div
xor
adc
test
xchg
jg
dec
inc
add
imul
jg
lea
test
pop
mov
add
mov
xchg
or
stos
cmp
lock
xchg
sub
mov
add
popf
fld
out
push
pop
jae
ret
jne
pop
push
sbb
sub
je
sbb
sti
xor
adc
es
shl
ss
or
xor
adc
sbb
stos
and
push
stos
jmp
(bad)
(bad)
out
add
add
jmp
es
or
cmps
outs
add
mov
add
mov
or
inc
cmps
dec
out
test
or
gs
repnz
inc
int3
jae
jmp
inc
es
test
in
in
test
(bad)
sbb
push
cs
mov
test
out
dec
jl
outs
test
mov
inc
dec
aam
and
je
jo
bound
xor
lods
jbe
jmp
push
dec
cs
mov
jmp
jbe
cwde
shr
add
mov
or
dec
cmp
inc
add
sub
push
aaa
xor
cli
fcom
inc
jmp
xor
adc
outs
test
sahf
pop
xor
xchg
add
add
add
mov
add
in
sti
lahf
test
in
outs
int3
mov
cs
mov
cmp
out
inc
cmp
dec
push
mov
and
xor
xchg
sbb
fmul
out
add
jl
adc
shl
call
add
jne
fdivr
or
fbld
or
mov
add
sub
cmps
push
in
push
add
mov
nop
cmp
push
or
cmp
test
pop
push
mov
xor
push
mov
enter
sti
repz
mov
xor
es
or
add
add
mov
push
adc
pop
lea
mov
jmp
call
gs
inc
fisubr
inc
cwde
jns
loope
jbe
aas
add
cmps
xchg
and
mov
mov
loopne
jecxz
xor
jmp
xor
jns
std
mov
mov
das
push
stc
mov
push
pop
rol
sti
cmp
les
and
leave
aam
and
loopne
xchg
xchg
mov
add
movs
ror
icebp
push
and
je
std
out
aam
jae
(bad)
mov
stc
pop
inc
(bad)
hlt
scas
lds
inc
outs
dec
sub
pop
push
and
sub
sbb
and
test
mov
cmp
jmp
add
sbb
sub
loopne
xor
and
dec
idiv
xor
and
jmp
and
mov
call
jmp
icebp
mov
not
loope
cmp
std
gs
lea
sti
(bad)
xor
add
xchg
sti
jmp
jmp
inc
add
inc
pop
aas
lahf
test
xchg
leave
nop
lea
inc
add
test
inc
out
pop
test
sub
inc
push
jb
(bad)
push
inc
add
(bad)
mov
call
test
inc
test
aas
inc
add
xor
test
idiv
scas
jno
enter
lea
add
add
push
div
mov
or
add
call
or
test
sub
lea
std
call
inc
add
call
add
ror
or
add
(bad)
mov
mov
jno
push
test
out
xchg
or
popf
dec
add
push
es
cmp
movs
fidivr
mov
add
popf
nop
test
inc
(bad)
jbe
add
ins
aas
add
add
es
push
inc
jl
adc
fwait
pusha
mov
dec
xor
jg
lahf
adc
inc
and
in
pop
lock
mov
call
mov
ret
popa
pusha
mov
ret
(bad)
jmp
fwait
out
jnp
(bad)
fld
add
add
inc
jne
ds
mov
xchg
fistp
cdq
jmp
cmp
(bad)
adc
aad
and
mov
sbb
or
or
mov
cmp
add
mov
popa
adc
inc
jmp
mov
in
mov
mov
jno
es
jmp
imul
xor
cld
jecxz
add
xchg
add
add
pop
repz
cmp
jmp
sub
add
bound
in
(bad)
inc
out
push
ss
cs
or
adc
in
push
das
dec
xchg
adc
out
ret
bound
and
sbb
in
xchg
and
add
mov
inc
sti
jg
mov
clc
out
inc
movaps
rol
add
add
mov
std
cmp
fisub
test
and
mov
sbb
leave
add
and
inc
add
jg
jge
jle
in
add
add
sahf
inc
seto
ja
adc
xchg
arpl
inc
call
jne
sahf
and
mov
sti
jae
(bad)
inc
dec
xchg
mov
lock
mov
mov
mov
popf
dec
fwait
mov
adc
test
imul
inc
add
popf
(bad)
aas
adc
in
push
mov
repnz
es
jecxz
out
mov
inc
inc
in
into
jo
add
lods
mov
xor
(bad)
push
push
in
cmp
out
es
cld
sub
ss
jge
ret
aaa
xor
arpl
dec
pop
dec
and
shl
rcr
push
daa
fwait
push
xor
or
out
cld
pop
inc
out
es
mov
fsub
jmp
aas
mov
add
cdq
jg
jecxz
inc
add
inc
dec
hlt
fs
pop
mov
and
inc
jmp
out
sbb
test
aas
push
dec
imul
jmp
ins
daa
inc
jmp
push
mov
inc
jmp
add
mov
cmps
cmp
xor
dec
das
push
test
add
mov
inc
add
pushf
shr
xchg
movs
pop
bound
xchg
mov
add
daa
add
and
inc
add
inc
pop
mov
int
jmp
adc
push
jb
aaa
xchg
movs
mov
jmp
inc
je
movs
mov
jmp
inc
je
movs
pop
and
mov
je
(bad)
adc
add
dec
add
push
call
aas
mov
sar
fs
mov
loopne
les
div
jb
fs
and
cli
push
sti
mov
add
inc
test
jle
add
dec
inc
scas
pop
pop
inc
scas
mov
inc
shl
ds
mov
add
add
cmc
pop
call
jp
pop
inc
jne
movs
inc
sub
xchg
sub
push
inc
add
jp
push
mov
push
div
jno
or
and
jmp
jb
jmp
leave
inc
cld
cli
cmp
ror
push
xchg
adc
popf
dec
mov
push
(bad)
(bad)
sbb
xchg
add
popf
jle
and
lahf
dec
push
fwait
aad
jg
fwait
dec
inc
sbb
cmp
mov
popf
push
cwde
lahf
add
popf
dec
sub
(bad)
jmp
test
jmp
popf
loopne
data16
mov
gs
rcl
push
inc
sar
loop
fimul
ror
cmp
mov
inc
jmp
imul
add
add
inc
jmp
imul
xor
jmp
mov
shl
es
jmp
lods
in
jmp
jmp
add
inc
in
es
jmp
add
inc
xchg
jbe
fucomip
add
cmp
es
add
sbb
add
and
cmp
call
repnz
adc
stc
cli
hlt
fldcw
inc
jmp
ror
jmp
jp
sti
jb
cmp
sub
add
and
xchg
add
mov
jg
sbb
cmp
mov
or
clc
repz
inc
adc
push
or
sti
adc
test
push
mov
popa
movs
xchg
add
or
cli
push
cli
dec
sahf
jmp
xchg
mov
ss
clc
jae
(bad)
clc
inc
add
jb
add
inc
and
inc
add
iret
inc
test
js
mul
jo
adc
jb
add
(bad)
cmp
lock
pop
mov
addr16
add
jb
shl
ror
mov
(bad)
clc
sbb
ror
inc
add
add
jb
jne
jae
or
call
push
les
dec
mov
pop
adc
(bad)
adc
lahf
mov
bound
add
push
es
xlat
test
adc
lods
into
xlat
aas
int
into
jg
movs
shl
imul
push
pop
mov
sti
lea
sub
(bad)
call
das
or
add
mov
test
popf
(bad)
mov
adc
lods
fsubrp
xchg
mov
ja
daa
popf
inc
push
and
add
popf
push
add
xchg
sbb
sub
call
pop
jp
call
fsubr
add
cwde
or
sbb
fsub
cmps
inc
xor
adc
fsubr
add
pushf
icebp
push
sub
call
hlt
cmc
cmp
xchg
js
stos
fadd
jmp
rcl
mov
retf
dec
aam
add
inc
mov
jle
test
test
test
pusha
jno
jg
das
adc
cmc
lock
cld
or
inc
jmp
adc
sub
push
pop
sbb
jae
(bad)
mov
push
adc
imul
lock
gs
test
(bad)
mov
sub
jmp
dec
dec
jge
icebp
cs
adc
adc
push
sti
cs
add
and
out
fs
(bad)
add
add
(bad)
in
sbb
pusha
sbb
cmc
retf
jae
call
or
add
dec
add
jb
add
jne
bound
jne
sub
out
stc
push
int
cmovnp
add
cmp
add
pop
add
mov
(bad)
adc
cmp
add
int3
adc
add
dec
call
lds
sub
(bad)
out
test
cmps
mov
inc
xor
mov
fldcw
idiv
ins
jbe
cs
push
lock
dec
pop
aad
add
ins
push
add
dec
or
sbb
dec
jno
sahf
add
ins
push
(bad)
daa
ins
(bad)
cli
cmp
retf
jne
in
call
dec
cmps
retf
pop
loopne
adc
push
push
or
jmp
push
add
jno
(bad)
push
jo
cld
aas
fimul
xchg
add
inc
sar
dec
sub
mov
adc
xor
and
cmp
into
mov
push
mov
jle
jmp
add
inc
(bad)
lock
xchg
ss
jmp
add
inc
loop
into
iret
and
jbe
pop
shr
add
push
or
jmp
add
adc
jge
mov
ins
pusha
retf
jb
push
inc
add
and
inc
cs
(bad)
call
out
unpcklps
xchg
test
inc
push
pop
xor
jmp
jmp
inc
sti
mov
jl
adc
cmp
leave
sub
xor
inc
sahf
aas
jmp
jo
add
test
dec
sub
inc
or
and
inc
add
in
adc
in
sti
or
push
inc
jmp
out
add
sbb
and
sub
add
add
mov
pop
fadd
sti
mov
ds
add
sti
add
mov
dec
add
aas
std
inc
add
test
adc
fs
and
xor
fmulp
inc
add
mov
inc
test
jae
mov
mov
dec
add
mov
dec
mov
add
mov
cmp
and
inc
jg
add
add
cmp
push
repnz
(bad)
push
jns
xchg
xchg
out
cs
mov
jne
mov
xchg
bound
(bad)
sti
shl
(bad)
adc
jo
jp
adc
or
jnp
xor
inc
scas
das
out
test
and
shl
fisub
sti
jae
xchg
add
xor
adc
es
aas
add
ins
or
sub
sbb
hlt
xor
scas
mov
ins
dec
shr
mov
cld
add
mov
push
test
retf
std
inc
es
and
call
imul
add
pop
jmp
clc
dec
mov
fld
inc
jl
mov
inc
ins
rcl
xchg
retf
std
inc
es
test
xor
xor
add
add
add
sbb
inc
pop
daa
cld
cli
in
jg
inc
dec
add
imul
(bad)
ja
and
sub
sub
(bad)
pop
mov
jb
inc
add
and
sub
stos
and
inc
add
pop
mov
xchg
adc
push
sub
(bad)
jno
sbb
imul
in
gs
xchg
imul
(bad)
out
js
cmps
(bad)
sbb
mov
or
or
sbb
or
sbb
or
sbb
mov
mov
mov
mov
add
add
push
mov
xor
jne
mov
ror
push
dec
adc
psubw
push
addr16
inc
mov
adc
sub
or
or
pop
ja
jne
xor
cmp
push
mov
rol
pop
push
sub
in
cmc
jge
aaa
gs
xchg
add
add
cwde
xlat
fiadd
ss
add
data16
sbb
leave
push
adc
pop
ret
jne
pop
ret
jne
repnz
sub
fstp
jecxz
inc
or
or
in
cmps
out
jl
hlt
in
push
jnp
clc
(bad)
jp
xlat
xchg
sub
jne
sahf
int
jnp
xlat
call
ret
mov
sub
or
es
fld
imul
lock
js
jp
push
cs
cmp
ret
cmp
aas
push
jmp
cli
test
cmc
and
jl
iret
mov
ret
sbb
dec
sbb
add
inc
jmp
xor
adc
imul
push
adc
push
xor
cld
jns
shr
ins
push
sub
inc
push
adc
jp
je
adc
sub
inc
add
and
popa
js
inc
fdivr
scas
gs
sbb
pop
jmp
mov
sbb
icebp
clc
jl
jmp
pop
xchg
pop
jns
jb
stc
jecxz
movs
push
(bad)
in
and
jmp
add
add
inc
add
xchg
adc
loop
add
or
push
inc
jmp
push
sbb
xchg
aas
jmp
mov
inc
dec
push
ins
or
fcomp
add
add
jecxz
fdivr
test
adc
ret
inc
(bad)
nop
mov
fdivr
jg
sbb
add
pop
cmc
cmp
cld
cs
cld
push
or
xlat
ss
add
mov
jno
(bad)
jge
sti
push
mov
call
test
push
call
xchg
mov
push
mov
in
js
inc
add
add
add
jg
into
sub
es
dec
xor
(bad)
les
cmps
and
frstor
push
out
test
pushf
mov
inc
inc
add
xlat
fucom
ins
add
jns
sbb
out
nop
inc
push
xchg
test
push
or
es
daa
sti
dec
ins
(bad)
cli
mov
ins
dec
push
outs
aas
add
call
mov
adc
es
and
ret
jecxz
pop
push
add
ret
pop
(bad)
int3
mov
add
and
adc
retf
ins
xlat
lods
jbe
stos
leave
inc
jmp
add
dec
pusha
dec
sub
stos
int3
mov
je
add
leave
sub
(bad)
jmp
xchg
aas
jb
dec
cmps
call
adc
out
jmp
mov
jmp
dec
or
add
add
test
and
add
sub
push
adc
hlt
std
push
inc
jmp
in
inc
in
xor
shr
cli
pop
jmp
adc
jns
in
(bad)
add
dec
test
repnz
adc
and
jp
cmc
inc
mov
cld
lods
dec
inc
jmp
push
mov
jb
add
add
aas
jg
lock
sub
cld
sbb
repnz
xor
test
or
je
adc
adc
mov
or
cmp
sub
mov
push
inc
mov
add
cmp
cli
pop
push
inc
mov
(bad)
(bad)
imul
mov
out
dec
test
lock
dec
pusha
dec
int3
adc
sbb
jne
sub
daa
pop
inc
fist
add
and
inc
cmp
jne
fscale
mov
dec
cmp
and
mov
add
jge
imul
and
sbb
outs
mov
add
ror
out
mov
aaa
add
pop
mov
int
test
lds
and
add
add
pop
daa
sti
mov
jne
inc
stos
adc
adc
sbb
adc
add
int
and
mov
and
(bad)
cs
es
popf
es
fstp
out
cmp
aad
clc
and
and
jnp
and
mov
pop
clc
in
rol
add
(bad)
adc
jmp
mov
ret
xchg
fstp
pop
mov
fcomp
sbb
push
mov
fidivr
sbb
dec
call
and
dec
adc
cmp
jae
or
test
out
call
inc
jmp
mov
pop
sub
or
sti
fadd
add
add
pop
push
jmp
jg
sub
jne
enter
push
pusha
adc
add
add
sub
inc
sti
popf
leave
inc
sti
cdq
sub
push
add
gs
repz
inc
sub
inc
push
jb
icebp
jmp
push
push
push
(bad)
aad
fadd
push
outs
sti
(bad)
sahf
test
and
bound
scas
scas
test
mov
imul
add
add
push
pop
sub
leave
add
lea
ret
pop
adc
jbe
mov
fdiv
add
and
jmp
sti
inc
sub
call
or
cld
jmp
je
inc
iret
scas
iret
cmp
cmp
jmp
hlt
add
jmp
cmp
call
lea
adc
inc
mov
adc
pop
inc
add
add
jnp
jae
je
enter
jb
adc
jb
pop
cmp
fs
call
jmp
fldcw
shr
mov
adc
rcl
mov
or
mov
test
xor
xchg
rol
add
stos
pushf
mov
dec
leave
test
inc
es
xor
data16
repz
pop
add
imul
push
aas
add
jno
mov
aaa
add
cmc
xchg
mov
repz
jmp
cmp
outs
iret
add
arpl
inc
pop
inc
push
mov
in
stos
in
jo
mov
in
outs
and
daa
jmp
add
pop
sbb
and
inc
jo
mov
in
les
out
xor
mov
mov
pop
fistp
sti
cmp
mov
adc
and
or
push
sub
fs
fld
jbe
ja
leave
fild
iret
sub
hlt
fistp
scas
add
xchg
inc
out
jbe
in
cwde
push
(bad)
xor
mov
cmp
inc
inc
test
mov
adc
aam
push
inc
jmp
outs
clc
push
push
and
push
in
push
inc
ss
lods
add
add
iret
xor
push
add
call
mov
lahf
aas
xor
pop
bound
add
test
cmp
(bad)
movs
pop
or
push
cmp
call
pop
adc
lahf
adc
fiadd
mov
pop
add
inc
cmp
sub
xchg
or
std
inc
add
stos
je
ret
stos
je
shr
and
dec
dec
mov
xchg
dec
push
xchg
lods
xchg
xchg
push
push
xchg
dec
add
call
cmp
pop
adc
add
je
inc
hlt
je
pop
add
mov
xchg
out
pop
(bad)
jmp
mov
test
add
mov
icebp
arpl
(bad)
jae
fidiv
fsub
enter
mov
pop
push
out
pop
sti
inc
(bad)
mov
or
add
test
stos
popf
icebp
les
sbb
lds
mov
icebp
scas
jle
test
shl
adc
rol
push
imul
cmp
pop
aam
es
or
fsubrp
mov
and
mov
and
mov
inc
inc
adc
push
test
push
test
pop
mov
mov
(bad)
inc
push
push
add
inc
jmp
mov
call
cmp
mov
loope
push
je
fst
hlt
in
cmp
xor
ins
jne
sahf
add
sbb
add
add
push
jmp
push
dec
repnz
imul
adc
sti
div
adc
sub
outs
sti
fdivr
ins
adc
push
mov
jno
ss
ins
je
sbb
jmp
or
sbb
sbb
hlt
test
add
jbe
and
pop
xchg
inc
in
cmp
add
add
jnp
dec
push
js
or
(bad)
mov
or
xchg
jbe
mov
test
scas
jmp
mov
cmp
test
test
xlat
mov
jne
ret
cmc
inc
push
push
cmp
adc
je
test
mov
div
mov
idiv
push
xor
or
es
iret
mov
push
adc
pop
sub
jmp
pop
jmp
xor
mov
es
push
cmp
fiadd
add
jb
jb
mov
test
add
mov
sub
push
inc
mov
inc
and
or
dec
mov
movs
out
das
out
dec
lea
dec
push
jbe
add
arpl
dec
push
stc
mov
ret
imul
jmp
pop
mov
(bad)
and
test
addr16
mov
add
lods
fimul
inc
fild
std
push
or
les
adc
or
addr16
dec
sub
jl
or
adc
jo
test
mov
sti
movs
icebp
sar
inc
adc
les
xchg
dec
push
sahf
adc
push
mov
out
clc
retf
and
xlat
add
mov
aas
jmp
xor
jae
and
push
ins
sti
push
inc
xor
fbld
out
ins
dec
sahf
je
data16
push
jb
push
jb
out
(bad)
push
inc
jg
mov
std
cli
push
add
sbb
xchg
push
scas
jg
pop
inc
fsub
push
bound
push
xlat
pop
dec
inc
fcomp
cmp
sub
adc
cld
sub
dec
fdiv
inc
jne
popf
jecxz
add
test
mov
xchg
cmp
mov
cmp
fnstsw
push
xor
pop
inc
mov
bound
pop
jno
push
dec
inc
add
std
test
add
not
or
dec
cld
push
jge
push
ror
pop
or
adc
pop
mov
into
and
int3
adc
call
out
cld
inc
jg
sub
add
es
jbe
cs
lds
push
lea
add
add
push
sti
pop
pop
mov
cs
push
push
ror
cmps
sti
lock
ret
je
xor
into
rol
es
dec
or
scas
sbb
repnz
or
and
leave
fs
call
test
sub
push
xor
xchg
mov
mov
retf
mov
xchg
inc
hlt
es
jmp
mov
inc
dec
mov
lods
loopne
inc
call
pop
mov
pop
arpl
lahf
push
add
jl
mov
in
les
and
pop
xchg
sti
je
push
inc
es
(bad)
mov
arpl
mul
add
jl
add
jl
cmc
push
add
fst
push
mov
cli
rcr
sub
and
cmp
add
add
ins
repnz
shl
or
es
sub
add
dec
mov
call
aaa
add
(bad)
cmps
or
mov
outs
dec
jmpw
cld
stc
and
pop
sti
ss
jne
mov
adc
gs
test
push
push
push
push
dec
fsubr
mov
leave
sub
add
add
inc
or
and
inc
mov
enter
call
adc
and
rcl
xor
aas
fnop
jge
arpl
clc
add
cld
add
aas
or
inc
add
inc
loopne
or
(bad)
sar
test
mov
mov
mov
int3
inc
add
dec
sub
add
or
add
pop
add
int3
shl
add
inc
xor
pop
or
adc
jmp
fdiv
adc
lahf
clc
div
mov
add
cmp
push
cmovs
add
inc
out
inc
out
inc
je
es
mov
stos
cmp
mov
jmp
push
or
je
xor
push
mov
ret
or
(bad)
inc
in
stos
sub
sbb
xchg
adc
ss
mov
sti
mov
push
call
imul
adc
retf
or
add
es
out
jmp
mov
or
data16
outs
jmp
xlat
loope
daa
popa
push
or
inc
fs
fwait
hlt
stos
add
(bad)
in
stos
daa
fldl2e
or
fcom
stos
or
ss
pop
aam
ss
out
fild
sbb
pop
and
adc
add
imul
faddp
add
sbb
gs
es
retw
xor
or
xor
call
add
add
inc
sub
sbb
xlat
(bad)
fisttp
adc
and
inc
sahf
sbb
in
sar
es
mov
jmp
pushf
verw
mov
inc
add
inc
dec
aam
cli
pop
sub
add
add
cli
call
retf
pop
cmc
in
add
inc
add
adc
add
pop
inc
mov
sbb
daa
cdq
add
out
cmp
sti
in
lea
xchg
mov
add
jns
call
adc
(bad)
or
(bad)
or
clc
addr16
(bad)
hlt
xchg
xchg
mov
out
inc
jmp
add
out
xor
mov
or
in
mov
inc
jnp
repz
dec
mov
add
add
in
inc
iret
adc
inc
add
mov
fdivrp
xor
outs
push
or
fidivr
add
add
call
add
jnp
xchg
cmp
out
ins
jmp
js
psubq
outs
rol
rol
dec
stos
cmp
mov
jmp
jge
cmp
or
sbb
xchg
cs
fsubr
add
mov
inc
xrelease
imul
cmp
add
lds
test
repz
rcr
pusha
and
pusha
cs
out
loopne
add
jmp
es
repz
inc
ins
inc
dec
cmp
cmp
stos
push
mov
test
ret
cmp
es
sub
test
mov
cmc
and
clc
mov
inc
jle
mov
shr
adc
jmp
inc
and
inc
push
std
push
inc
sahf
add
push
sub
xchg
mov
repz
inc
jmp
ret
sub
inc
add
add
add
jg
jle
or
inc
add
movs
loope
jmp
scas
mov
lea
loope
sbb
fcmovnb
in
jnp
sti
jmp
and
add
xchg
inc
sub
jmp
(bad)
ror
icebp
(bad)
cmp
and
enter
pop
mov
push
adc
sbb
fild
add
add
inc
xchg
mov
repz
add
fld
add
div
mov
les
inc
jecxz
pop
push
inc
add
sub
add
popa
div
cwde
adc
push
mov
add
adc
cmps
jo
add
(bad)
push
add
cmp
push
adc
idiv
mov
mov
inc
add
test
pop
xor
test
mov
mov
cmp
add
es
popf
and
test
comiss
ret
jp
or
add
inc
mov
(bad)
sar
dec
dec
dec
push
pop
jmp
repnz
movs
sti
lahf
sub
xor
and
out
mov
je
in
or
push
js
scas
idiv
push
stos
sbb
xchg
sub
jbe
repnz
imul
inc
push
pusha
fwait
lahf
xchg
inc
stos
sti
inc
test
cvtps2pd
test
js
in
das
and
and
sbb
test
das
and
mov
add
add
int
pop
adc
scas
rcr
aas
or
ins
gs
inc
pushw
xor
push
inc
inc
pop
ds
xor
push
or
hlt
nop
jle
add
retf
sub
mov
jno
arpl
scas
lahf
shl
push
retf
mov
jle
inc
mov
inc
add
mov
les
jmp
and
cwde
test
add
add
out
out
add
loop
loope
adc
or
push
jp
inc
in
js
jmp
jns
pop
jg
rcl
push
pop
je
dec
pop
jne
test
or
imul
leave
mov
mov
fcmovb
iret
mov
bound
call
fs
mov
add
add
cs
mov
xchg
add
outs
inc
mov
inc
fmul
mov
test
sub
nop
mov
and
dec
cld
push
jo
call
lea
push
aam
jnp
add
dec
push
nop
cmp
lods
icebp
idiv
mov
inc
add
xchg
or
push
mov
dec
call
call
or
es
cld
jbe
adc
xchg
and
jl
imul
cmps
sub
cli
mov
adc
call
(bad)
jmp
fld
or
cs
mov
ins
imul
add
lods
mov
lea
add
add
xchg
mov
std
mov
adc
sbb
lea
xor
ret
sti
stos
stos
adc
and
rcl
inc
inc
pop
stos
push
aam
inc
push
push
les
into
repz
mov
mov
retf
movs
adc
sahf
dec
es
ins
inc
stos
repz
not
sbb
push
aaa
(bad)
movs
lahf
imul
push
jge
les
push
pushw
push
pop
or
and
and
inc
xor
inc
inc
xor
xor
cmp
mov
jl
lahf
lds
inc
sbb
add
lea
pop
cli
call
dec
push
push
rcr
fdivr
call
xor
fsub
dec
mov
mov
adc
pusha
push
add
add
or
mov
(bad)
enter
dec
jne
mov
add
in
cmp
or
adc
cld
stc
inc
inc
jmp
xor
sar
inc
cmp
fmul
push
pop
sti
xor
xchg
cmp
in
cs
in
add
xchg
pop
and
xadd
mov
cld
je
add
add
mov
cld
dec
call
ret
mov
clc
push
inc
mov
outs
mov
and
jne
pop
arpl
(bad)
cmp
not
adc
call
mov
cmp
(bad)
inc
and
jge
js
add
(bad)
aad
jecxz
xor
xor
dec
jmp
cmovs
rol
add
call
adc
xor
mov
pushf
inc
push
mov
push
sti
adc
lock
ficom
clc
sub
jle
pop
sbb
xor
inc
adc
sbb
in
inc
call
fmul
pop
lds
pusha
(bad)
jmp
xchg
int
sub
adc
add
add
out
or
imul
enter
mov
add
inc
mov
data16
add
inc
pop
add
xchg
sbb
cli
les
add
inc
push
ss
xor
xor
dec
push
retf
pop
inc
push
psubsw
xchg
sub
inc
call
mov
pushf
adc
pop
cs
loope
jle
bound
loopne
sbb
dec
in
cmp
call
inc
data16
out
(bad)
fmul
cmc
dec
je
cmp
movs
mov
mov
and
push
dec
je
adc
push
sti
jle
test
rol
dec
push
jbe
add
and
scas
call
out
add
sub
and
inc
jg
sbb
or
mov
rcl
add
fs
aaa
sbb
inc
lea
es
out
in
add
and
shl
or
pusha
sti
pop
mov
inc
shl
adc
inc
or
pop
loope
add
xchg
adc
add
pop
retf
mov
add
cmp
shr
outs
add
cmp
sar
xchg
ror
cmp
call
jmp
js
test
xor
call
sbb
add
push
pop
dec
inc
add
mov
or
imul
push
add
add
sbb
test
aam
pop
mov
pop
xchg
adc
lock
lea
add
add
(bad)
ret
inc
add
aam
das
add
xchg
jnp
sub
ret
lea
lds
(bad)
or
ror
lods
pop
xor
enter
xchg
out
inc
sti
in
(bad)
cli
pop
inc
add
push
push
das
or
and
and
ret
lea
lds
ror
lods
pop
xchg
push
ss
test
jo
mov
xchg
mov
jns
fiadd
popf
movs
test
mov
mov
jmp
add
enter
xor
xor
aam
shl
sub
lods
setns
mov
mov
shl
fcomp
inc
sub
jl
inc
test
add
add
xchg
repnz
shl
(bad)
arpl
out
sbb
inc
es
lods
fbld
test
out
(bad)
jmp
and
pop
stos
push
dec
stos
call
and
jg
inc
fiadd
mov
jno
mov
dec
jg
pop
xlat
add
mov
and
jmp
and
imul
ja
add
add
call
pop
and
cmc
dec
and
test
mov
inc
jb
mov
leave
(bad)
gs
mov
retf
push
add
add
adc
push
dec
push
add
sub
mov
or
loop
dec
and
mov
jg
scas
enter
inc
sbb
add
sar
out
in
test
or
pop
inc
jne
mov
mov
inc
pop
mov
push
add
push
rcl
pop
shl
pop
mov
and
mov
mov
(bad)
je
icebp
call
xor
add
push
mov
inc
scas
or
sbb
out
add
out
sbb
pop
pop
imul
adc
jmp
jo
mov
mov
daa
pop
jmp
and
mov
add
pop
add
es
adc
jns
xchg
jne
mov
add
fisub
repz
(bad)
iret
jg
push
repz
cli
fldl2e
add
push
push
xchg
or
(bad)
cli
and
jmp
cmp
sub
add
add
in
pop
shr
outs
or
jb
add
adc
mov
pop
jns
sbb
test
cmp
dec
ret
add
ret
jmp
lods
push
test
fdivr
jmp
add
inc
mov
addr16
jmp
shr
mov
jmp
xchg
push
aaa
test
add
or
add
cld
or
and
dec
jne
in
enter
add
jne
jmp
and
sar
mov
or
and
or
jmp
add
pop
or
sub
ret
push
pop
xchg
test
xchg
scas
xor
mov
jge
loope
inc
lea
dec
repz
cmp
cmp
add
push
in
add
je
xor
imul
mov
inc
call
mov
int
(bad)
adc
call
inc
jg
not
int3
xor
inc
iret
add
inc
jnp
arpl
test
add
add
add
mov
mov
div
stos
ret
mov
shr
div
stos
std
(bad)
mov
mov
out
inc
sti
aas
dec
push
sti
inc
lea
es
add
pop
jmp
das
ror
add
int3
pop
add
pop
cmp
jp
sub
dec
or
lods
dec
add
adc
push
cmp
and
push
or
pop
add
es
jb
xor
(bad)
call
mov
or
ret
(bad)
and
dec
jno
xor
fwait
arpl
ret
jbe
sbb
pop
sub
xor
out
popa
dec
pop
(bad)
mov
sub
ret
push
cs
popa
pop
dec
cdq
pop
sbb
push
stos
inc
jmp
add
cmp
xor
iret
pop
dec
call
add
fsubr
xor
xor
pop
jmp
inc
scas
xor
xor
cmp
fmulp
mov
inc
jmp
pop
and
push
jle
cmp
xor
add
xor
jmp
pushf
jl
jmp
mov
cmp
add
inc
cld
jmp
add
test
icebp
nop
jp
jp
inc
cmp
add
add
add
sti
outs
mov
mov
sti
push
hlt
lock
hlt
leave
ss
jmp
lea
shl
jb
jmp
jnp
add
push
and
and
(bad)
jmp
jl
dec
sti
push
dec
das
test
sub
mov
inc
call
push
mov
sbb
gs
pop
inc
mov
xor
gs
push
bound
ds
iret
aam
or
pop
or
add
adc
shl
jno
psubsb
pop
je
in
dec
push
div
fisttp
(bad)
test
jp
in
rol
jne
rcl
and
or
repnz
jne
jge
jne
jl
jne
aam
hlt
push
xchg
mov
xor
shl
test
rcl
jecxz
xchg
dec
add
jbe
fild
je
jae
mov
dec
and
aas
fbld
ret
loope
stos
add
aaa
mul
and
and
and
arpl
sub
outs
lock
mov
cli
adc
sbb
mov
fist
out
jbe
mov
movs
pop
add
test
xchg
jne
xor
or
enter
adc
mov
adc
or
push
lds
in
out
push
fwait
dec
js
outs
sbb
cdq
call
mov
mov
sbb
pop
dec
jb
leave
push
sub
xchg
mov
add
add
call
xor
stos
cmp
adc
int3
in
scas
lahf
xchg
retf
out
repz
ins
mov
mov
and
mov
dec
add
or
push
cmp
push
popf
div
inc
add
add
sub
mov
jmp
mov
popa
pusha
pop
das
aas
lahf
mov
push
mov
and
stos
push
loopne
gs
xchg
sub
call
xlat
cli
mov
inc
mov
push
test
rol
add
cmps
data16
out
add
gs
bound
adc
sbb
in
jmp
call
adc
out
pop
mov
add
inc
(bad)
inc
dec
xor
pop
jge
ror
inc
add
inc
adc
dec
cdq
or
mov
mov
into
inc
mov
jb
call
int3
ss
(bad)
jl
lea
js
je
xor
nop
push
sti
jmp
sub
jmp
mov
aaa
add
mov
add
or
lea
dec
prefetchnta
(bad)
cld
inc
div
mov
ins
xor
and
add
mov
mov
out
inc
add
sbb
or
pusha
add
es
rcr
add
jmp
sub
shr
test
lods
aas
es
outs
cmp
sub
fiadd
xor
xchg
add
dec
xor
pushf
xchg
inc
sub
scas
aas
es
icebp
sbb
call
and
stos
cwde
je
sub
jns
push
inc
ins
mov
inc
rol
dec
ins
aad
inc
jmp
add
ds
add
lods
test
lock
add
rol
hlt
sub
add
inc
xor
daa
inc
mov
(bad)
push
jmp
mov
mov
add
add
es
mov
call
lds
ins
lar
ret
jmp
scas
jecxz
mov
inc
test
lahf
push
sbb
gs
push
mov
sub
inc
add
es
add
jo
and
and
gs
bound
adc
xchg
call
jb
xchg
sti
mov
or
cmp
push
xor
inc
jne
mov
test
movs
pop
mov
push
add
add
ins
bound
mov
mov
dec
lea
add
add
and
dec
inc
push
sets
add
out
retf
call
inc
test
pop
adc
dec
or
jne
pop
add
sbb
popa
sub
or
fnsave
sub
and
inc
and
ja
imul
push
pop
sub
pop
les
sti
push
add
dec
mov
aas
dec
push
dec
sub
clc
movs
add
jle
pop
add
test
shr
sub
repz
je
scas
or
js
dec
jno
lock
aaa
ins
add
out
lahf
cmps
je
mov
dec
jb
jle
sub
jle
and
sbb
push
add
mov
sub
cld
dec
dec
sub
test
jns
pop
xor
(bad)
addr16
add
cmp
xchg
cmp
out
test
retf
jecxz
ds
scas
add
cmp
push
pop
cmc
stc
inc
ds
dec
xor
retf
add
shl
ins
ret
mov
pop
(bad)
ja
jmp
add
push
rol
pop
xchg
ins
xchg
inc
cs
imul
push
cmp
fist
xchg
mov
js
fmul
xor
jmp
jo
inc
add
add
imul
repnz
aas
mov
arpl
or
and
and
xchg
add
fstp
dec
add
and
cmp
dec
cli
pop
jmp
push
xchg
call
cli
into
jo
and
icebp
out
push
sbb
out
add
cmp
cmc
sbb
cld
retf
jmp
ins
mov
out
and
cmc
sbb
dec
(bad)
jp
push
inc
jg
ret
adc
dec
add
ud1
js
or
ja
dec
dec
aas
fild
mov
adc
lea
mov
fdiv
mov
leave
je
mov
or
mov
jae
xchg
shl
push
imul
inc
inc
inc
out
test
inc
(bad)
jg
leave
jae
cmp
ja
in
mov
push
inc
jnp
mov
cmp
stc
sub
jg
add
add
outs
or
movs
inc
add
stos
or
pop
test
icebp
in
ja
xor
sar
jle
sub
jne
mov
sub
sub
mov
scas
push
sub
movs
ds
loope
imul
cmps
inc
jns
mov
es
sbb
aaa
ficomp
sbb
cmp
mov
jns
push
and
add
xor
add
inc
test
add
data16
daa
and
icebp
clc
and
mov
cs
sub
aad
loop
test
jmp
xor
add
call
ss
push
inc
gs
mov
popa
adc
sbb
clc
and
cs
nop
inc
jmp
pusha
stc
mov
mov
mov
xchg
xor
mov
sub
xchg
jmp
jp
or
ja
push
push
jb
dec
daa
pusha
sahf
add
std
xor
adc
pop
int
and
(bad)
mov
test
icebp
pushf
and
inc
adc
adc
jo
mov
je
mov
xchg
dec
add
sub
ins
scas
add
bound
mov
shl
sti
mov
sar
pop
cmc
xchg
or
fs
scas
add
mov
je
cmps
sbb
dec
test
sar
mov
ret
rol
jmp
ror
call
adc
add
add
outs
inc
jg
sar
dec
jne
mov
mov
loopne
retf
add
loop
in
(bad)
push
or
(bad)
push
les
dec
push
mov
push
push
mov
add
xor
mov
call
js
dec
retf
pop
into
inc
jle
mov
add
add
lahf
xor
sti
sti
sbb
dec
or
cmp
pop
jns
sub
test
push
sub
adc
pop
fwait
call
jp
jno
push
call
cmp
pop
xor
shl
add
pusha
sub
jbe
clc
and
mov
and
adc
xchg
adc
push
xor
sub
sbb
or
cmps
fldenv
mov
add
dec
xor
mov
imul
sbb
pop
stos
push
rol
call
add
inc
jmp
jmp
add
inc
push
jg
xor
mov
movs
jle
shr
(bad)
shl
adc
es
add
add
pop
sbb
inc
outs
enter
imul
mov
leave
out
push
movs
mov
imul
sub
xor
and
cld
mov
jmp
sahf
ss
lods
xchg
bound
mov
push
add
dec
outs
retf
pop
mov
loope
mov
jno
xor
imul
sub
add
sub
(bad)
in
(bad)
(bad)
and
push
jmp
movs
cmps
clc
jmp
push
les
ins
jg
or
sub
ja
movs
scas
idiv
xor
mov
lahf
cmp
iret
inc
test
cmp
jne
mov
pop
mov
mov
retf
cmps
adc
inc
out
add
sbb
jb
add
add
mov
mov
mov
adc
jno
js
loop
retf
in
or
mov
test
jecxz
sti
push
adc
scas
je
das
scas
je
pop
pushf
aas
jmp
push
jl
jnp
imul
mov
dec
mov
push
dec
mov
and
cmp
cmc
push
lods
shr
xchg
aam
repnz
popf
sub
mov
mov
(bad)
out
and
xor
repz
lods
ficomp
mov
and
add
cmp
pop
sub
repz
pop
sti
cmp
inc
mov
repnz
popf
loopne
out
mov
imul
mov
sub
pop
pop
push
jb
mov
push
inc
js
into
rol
add
add
mov
outs
adc
mov
inc
mov
inc
rol
test
adc
jge
arpl
scas
inc
inc
movd
inc
fcomp
test
mov
ds
mov
push
in
inc
out
inc
add
out
ins
inc
lods
ja
add
dec
nop
inc
jmp
push
jmp
mov
sub
inc
or
mov
inc
jmp
cli
pop
mov
ret
and
cs
jmp
sbb
fdivr
adc
addr16
xchg
mov
pop
outs
sub
push
xchg
cmp
pop
mov
and
ins
test
sti
xor
in
push
hlt
fisub
test
push
inc
cs
stc
std
call
sbb
cmp
mov
rcr
mov
shl
or
test
stos
idiv
into
xor
sub
cmp
inc
cmp
dec
mov
cli
mov
in
jae
xor
jle
mov
mov
dec
lea
xor
(bad)
fcom
mov
sbb
(bad)
add
cmp
sbb
mov
stos
idiv
adc
jge
add
mov
lea
lods
cmps
lock
xor
sub
scas
pop
ins
out
mov
push
dec
jo
jne
push
ror
xor
sar
sbb
ja
fnsave
jnp
fxch
ja
shr
inc
adc
ror
lods
js
push
adc
test
call
adc
sar
cmp
push
inc
movs
mov
or
imul
call
push
mov
ins
repnz
jmp
mov
or
pop
mov
inc
add
add
inc
pusha
shl
hlt
pop
rol
pop
(bad)
test
adc
mov
sbb
ret
shr
mov
sbb
push
aad
mov
xchg
pop
adc
test
cmp
aas
mov
lock
xchg
add
ja
sti
mov
xchg
sti
cld
mov
jmp
pushf
or
sahf
js
add
sti
push
push
mov
add
mov
or
dec
cli
mov
cmp
(bad)
call
jo
or
in
xchg
mov
call
sahf
(bad)
xor
adc
sub
jl
and
add
lods
xchg
and
je
push
jg
call
pop
cs
add
add
cmp
mov
in
xor
push
add
jg
add
mov
pushf
cdq
cld
and
div
mov
call
add
jmp
adc
ins
pop
adc
inc
dec
(bad)
cmp
adc
sbb
cmpxchg
pop
mov
int3
not
xlat
adc
push
pop
aaa
sti
(bad)
mov
cmp
adc
inc
add
add
inc
ja
sti
aad
sub
(bad)
cli
adc
or
icebp
jecxz
add
shr
rcl
ss
ss
add
cmp
retf
addr16
es
loop
cmp
sub
je
jl
int
sbb
(bad)
inc
add
add
push
or
cmp
jae
xchg
into
mov
sti
rol
jmp
mov
pop
add
mov
sbb
rcl
fild
add
mov
cmp
pop
fdivr
mov
das
xchg
inc
out
and
fsubr
stos
jns
mov
inc
js
daa
mov
cmp
fnsave
ffree
xor
sub
xchg
std
cmp
es
xchg
outs
rol
cmp
test
add
outs
cwde
inc
jmp
mov
scas
sub
dec
(bad)
and
jmp
clc
or
and
cmp
les
push
pop
inc
add
ds
adc
data16
cmps
or
int
xor
and
inc
add
xchg
dec
es
pusha
adc
and
cmp
pop
das
fisubr
bound
jge
sbb
push
and
sbb
adc
or
jmp
in
test
push
scas
add
loop
mov
cmc
out
sub
aaa
push
sbb
add
popa
(bad)
inc
mov
add
add
add
dec
call
div
call
inc
xor
stos
je
push
xor
je
stos
inc
adc
sub
push
push
inc
add
cli
add
inc
inc
jecxz
sub
dec
push
cmp
call
pop
pop
mov
popa
(bad)
inc
(bad)
dec
mov
pop
or
cmc
cdq
iret
inc
test
adc
cmp
test
js
es
add
out
sti
ss
repnz
loopne
inc
lock
adc
cmp
(bad)
pop
fs
push
sub
dec
aas
es
fld
inc
xchg
mov
sbb
xor
dec
das
out
out
add
pop
sub
sub
jl
cs
or
stc
cs
add
add
sar
inc
fcmovnb
jmp
sbb
push
(bad)
pop
xchg
es
je
repnz
inc
es
cmp
adc
ins
inc
xor
repz
mov
mul
std
daa
sub
aam
cmp
(bad)
test
pop
push
inc
add
into
and
loopne
pop
push
add
enter
and
sldt
add
push
jmp
ret
cmp
sbb
int3
inc
je
mov
push
jg
mov
mov
ror
xor
add
(bad)
dec
adc
cwde
adc
in
cdq
icebp
outs
cmp
(bad)
fsub
and
inc
xchg
or
stos
adc
push
cmp
std
in
repnz
add
xchg
ds
fdiv
xor
pusha
jno
test
adc
dec
dec
pcmpgtb
and
dec
add
(bad)
ds
cmp
in
jmp
inc
sbb
add
ds
adc
xchg
cwde
push
and
inc
jne
mov
sti
add
cmp
jbe
mov
or
cmp
adc
inc
jnp
iret
inc
je
clc
mov
or
add
add
inc
bound
mov
sti
push
push
adc
adc
dec
out
fsub
dec
call
cmp
cmp
cld
lds
pop
jmp
mov
adc
sbb
push
add
adc
inc
push
pop
jb
or
jp
in
mov
enter
inc
add
retf
mov
dec
loopne
sbb
imul
add
add
(bad)
call
scas
jne
sub
pop
sub
call
jmp
push
fnsave
sub
cmp
(bad)
jmp
mov
jb
sub
test
or
push
in
dec
mov
ins
test
xchg
shl
loop
mov
jae
add
add
add
sub
inc
inc
ins
sti
loopne
(bad)
aas
pop
cwde
push
fwait
inc
ins
or
pop
fcmovbe
adc
out
es
dec
enter
mov
sbb
inc
inc
xor
adc
stos
leave
lock
lods
pop
pusha
test
mov
mov
iret
add
dec
outs
ret
jns
imul
pop
dec
rol
add
add
sub
and
stos
fnstcw
adc
add
lods
add
es
or
sbb
test
xchg
xchg
add
out
push
cli
mov
in
xchg
pop
mov
jge
(bad)
cdq
and
mov
jns
int
daa
clc
push
fs
push
call
push
inc
jmp
sbb
sub
(bad)
cmp
xor
test
test
push
addr16
mov
or
ficomp
mov
and
mov
stos
and
bound
sub
jmp
and
stos
test
inc
jmp
fadd
stos
iret
push
(bad)
cli
imul
icebp
cmc
(bad)
dec
test
add
cmps
push
leave
test
push
xchg
(bad)
or
mov
inc
add
test
call
(bad)
or
add
inc
clc
scas
stos
jne
call
inc
test
xchg
xor
dec
push
or
lea
out
mov
fwait
mov
sti
and
mov
test
add
add
sbb
es
stc
icebp
inc
imul
sub
xchg
sbb
inc
es
mov
imul
jne
out
lock
fdivr
mov
das
clc
mov
and
loopne
and
or
adc
or
imul
shl
icebp
pop
cmp
adc
je
add
cli
fst
push
jmp
sub
inc
add
add
jno
cmp
movs
pop
rcr
stc
aam
xor
add
je
cmps
dec
inc
jmp
push
std
xchg
icebp
(bad)
sbb
in
shl
es
retf
xor
add
add
sub
sub
add
sbb
clc
mov
inc
fs
cmp
push
pop
daa
inc
jmp
mov
mov
xor
es
jmp
add
hlt
adc
jmp
push
out
jmp
mov
inc
mov
hlt
sub
inc
jmp
xor
jle
sub
in
imul
xchg
(bad)
inc
add
xor
cmc
in
stos
call
rcr
push
bound
in
movs
daa
sbb
call
add
add
push
scas
and
jmp
sbb
adc
fs
jb
xchg
and
inc
lea
jge
mov
mov
add
je
mov
sbb
jg
dec
or
(bad)
retf
cmp
adc
rol
mov
mov
jnp
sti
cmc
cmc
adc
xlat
dec
inc
add
je
push
xlat
push
push
cmp
add
inc
fstp
sbb
mov
xchg
rcl
ss
jnp
outs
sahf
xlat
call
add
div
mov
add
jl
or
adc
stos
imul
neg
push
and
popa
bound
jp
push
popf
dec
enter
add
jnp
push
xchg
test
push
sub
jne
xor
sub
je
scas
inc
sub
repnz
add
out
jne
sti
mov
push
add
cmp
in
push
popf
pusha
clc
cli
bnd
lea
cli
fdivr
xchg
lahf
inc
je
push
jp
sbb
rcl
dec
pop
pusha
sub
inc
xor
add
push
sti
fld
and
and
loope
or
pop
cmp
xchg
pop
push
int
sti
sbb
(bad)
inc
add
sub
inc
adc
and
and
cmps
sti
icebp
adc
jns
jmp
add
jmp
mov
in
cmps
(bad)
mov
xchg
cmp
dec
pop
ret
mov
retf
out
es
fnstenv
dec
add
or
add
arpl
fidivr
add
jp
in
mov
push
inc
push
adc
je
ret
in
jmp
pop
nop
das
call
xchg
push
inc
add
xchg
xchg
or
push
jo
jmp
xor
add
add
sbb
xchg
inc
out
js
mov
test
and
mov
mov
jnp
arpl
lock
pop
adc
xchg
pop
sbb
sbb
cmp
adc
mov
add
(bad)
out
or
and
push
inc
bswap
jae
repz
cmp
add
add
push
cmp
lahf
mov
cli
(bad)
mov
stc
add
inc
jecxz
inc
repz
(bad)
iret
cmc
push
sar
je
sub
dec
and
jl
push
ret
push
mov
ret
fldcw
xor
aas
outs
ss
gs
mov
in
imul
add
sub
jmp
lods
add
sub
inc
es
jno
es
mov
sbb
jae
scas
adc
das
popf
or
pop
xchg
mov
ss
call
imul
cli
cmp
rol
(bad)
jle
inc
in
add
sahf
icebp
add
add
lea
ins
outs
loopne
dec
cmc
cmc
test
in
pusha
xor
add
add
add
jmp
sub
sub
adc
ror
or
sbb
cmps
xchg
in
add
shl
jg
jmp
or
add
push
es
jmp
add
test
aam
jp
ret
add
and
push
sbb
iret
and
inc
push
(bad)
hlt
sbb
mov
pslld
das
jbe
retf
add
ins
mov
pop
stos
into
and
and
pushf
add
and
inc
add
push
mov
push
sbb
test
push
add
dec
inc
xchg
pop
cwde
and
jge
int
dec
arpl
cmps
sub
and
sbb
mov
pop
cli
dec
mov
add
(bad)
fadd
(bad)
jg
inc
and
inc
je
sbb
add
xchg
add
mov
add
rcr
xchg
xor
cdq
js
add
gs
retf
cmovbe
mov
out
ret
std
stc
and
dec
in
or
cmp
stos
mov
or
jmp
xchg
dec
push
mov
clc
out
nop
pop
sti
lahf
and
test
sbb
adc
jmp
mov
jle
pop
jp
cdq
test
and
(bad)
std
aad
mov
shr
xchg
add
or
pop
xchg
xor
test
mov
dec
shr
and
xchg
push
sti
xchg
push
cli
call
sti
lods
bound
cmp
(bad)
jmp
pop
xor
call
aaa
xor
mov
aas
pop
rol
or
mov
or
mov
out
mov
jmp
mov
mov
pop
push
movs
pop
out
es
pusha
fisttp
gs
es
jmp
mov
inc
jmp
pop
sub
dec
dec
sbb
pusha
out
shr
inc
jmp
icebp
pushf
mov
pop
fdivr
out
retf
and
and
inc
add
jb
dec
mov
scas
mov
scas
jno
rol
scas
sahf
xchg
cld
aas
add
and
and
mov
inc
icebp
push
add
cwde
clc
bound
call
push
inc
add
push
(bad)
mov
bound
xchg
or
loopne
or
lea
push
jp
pop
and
add
aas
dec
mov
add
add
dec
mov
ja
sub
inc
add
push
in
out
je
vmovd
call
push
mov
inc
or
mov
pop
cli
dec
mov
add
std
test
push
mov
cmp
xchg
add
aam
mov
mov
scas
(bad)
fsubr
cld
mov
or
add
add
add
add
mov
push
or
pop
int
es
jne
inc
rol
push
loop
sti
icebp
mov
enter
push
lods
test
gs
jo
sti
pop
repz
and
in
(bad)
pop
out
pop
pop
jp
xchg
rol
mov
push
ins
cwde
inc
sbb
imul
in
or
add
add
and
bound
jne
xchg
sar
pop
jl
mov
push
or
and
jne
inc
and
test
test
inc
xchg
sub
outs
stc
mov
cmc
(bad)
cdq
lock
cwde
cmp
or
test
cs
test
ror
es
cmps
pop
sbb
imul
jmp
push
icebp
jne
out
js
mov
iret
aas
jl
and
jecxz
fs
sbb
inc
and
push
jmp
lods
rol
jmp
(bad)
add
and
cmp
jb
aas
mov
es
add
arpl
jmp
and
add
add
addr16
push
add
sbb
inc
add
and
or
jmp
and
retf
mov
add
add
cmp
adc
and
retf
adc
add
outs
push
push
sti
sub
jmp
pop
xchg
jmp
fs
addr16
sbb
jp
add
or
pop
jmp
sub
test
pop
rcl
and
mov
test
pop
cmp
je
mov
jnp
iret
inc
dec
push
jno
cld
jo
add
add
je
adc
jecxz
adc
or
jp
or
mov
mov
mov
idiv
cwde
sahf
cdq
and
inc
dec
call
mov
add
sahf
dec
sti
(bad)
mov
fs
test
adc
pop
shl
es
or
add
stos
push
adc
cld
in
push
je
and
add
scas
out
ficom
fcmovnu
push
stos
icebp
retf
call
mov
mov
and
add
sbb
jmp
sbb
add
into
xor
jle
xchg
retf
inc
pop
cmp
out
and
and
out
lock
inc
cmp
outs
or
(bad)
jo
shr
or
push
xor
ret
adc
sub
and
or
pop
shr
or
pop
sbb
mov
sbb
mov
push
inc
push
inc
stos
add
inc
jmp
add
cld
shl
outs
pop
push
xchg
mov
call
nop
stc
retf
cmc
cmp
iret
sub
out
add
in
out
ss
jb
inc
cdq
mov
into
leave
stc
dec
cmps
add
push
lea
or
ins
pop
pop
fs
adc
adc
test
sbb
cli
jne
add
sahf
and
or
addr16
add
pop
push
or
mov
or
test
or
xor
jmp
and
mov
fdivr
(bad)
jg
(bad)
dec
or
aas
inc
dec
mov
mov
jg
inc
or
xor
inc
add
add
sar
jecxz
div
mov
idiv
mov
push
call
inc
test
je
dec
add
inc
add
push
cld
push
add
jae
and
test
jno
and
push
(bad)
push
cld
push
add
jae
and
test
jno
and
or
dec
pop
gs
enter
jnp
or
dec
pop
gs
enter
shl
(bad)
dec
je
jmp
push
shr
dec
pop
in
jns
cmps
inc
cld
std
adc
xchg
xor
push
mov
add
rcr
test
sbb
jbe
aas
(bad)
enter
cmp
adc
out
fiadd
push
popf
test
add
sub
gs
pmulhw
mov
pop
lods
fmul
xchg
fst
test
jle
xor
das
leave
mov
add
ds
shl
sbb
push
xor
imul
cmp
sbb
je
dec
inc
inc
jmp
repz
test
mov
(bad)
xchg
and
repnz
add
add
push
ficom
jbe
or
(bad)
ss
cmp
and
mov
jmp
mov
ss
jne
mov
adc
and
inc
div
daa
mov
mov
pop
dec
ret
fcom
sbb
and
mov
pop
inc
add
gs
in
std
fld
add
add
pop
ret
cs
ret
imul
xchg
sahf
retf
sahf
(bad)
je
repz
jbe
or
adc
hlt
jle
mov
in
(bad)
loopne
mov
xchg
xor
mov
inc
(bad)
add
jmp
ror
mov
cmc
adc
retf
adc
sbb
lea
mov
adc
test
mov
loopne
in
xchg
mov
add
mov
jbe
into
sbb
or
test
mov
leave
mov
or
sbb
xor
add
jle
mov
out
lods
cli
jo
inc
jne
jbe
pop
and
add
es
clc
iret
xor
add
daa
(bad)
scas
addr16
gs
push
imul
xchg
in
rcr
sub
adc
lods
cli
xor
inc
jne
rol
add
jmp
mov
mov
outs
cmp
into
stos
add
es
jp
inc
push
popf
inc
sub
sub
in
es
rcr
sub
mul
lods
add
cmps
test
mov
adc
inc
or
inc
add
mov
ret
popa
int3
loop
cdq
push
ins
jae
inc
jmp
add
dec
pop
sbb
cmps
add
inc
jo
sub
pop
adc
je
ret
add
ror
int3
mov
ret
jmp
cmp
xor
in
enter
retf
inc
icebp
jb
sti
mov
mov
inc
inc
leave
aas
jmp
cmp
shl
dec
mov
call
in
pop
push
cmp
je
sar
pushf
adc
pop
xor
sub
test
out
call
jo
dec
sti
pop
jmp
mov
out
pop
add
sub
add
add
and
and
inc
add
in
sub
inc
sub
(bad)
dec
inc
or
push
and
mov
add
xlat
mov
(bad)
fadd
mov
or
jp
xor
add
add
or
push
pop
sub
cwde
push
dec
add
add
add
dec
jl
or
push
push
aas
inc
add
add
add
inc
add
xlat
dec
add
xchg
or
xor
xchg
je
add
es
ja
push
lds
dec
and
dec
pop
not
in
ja
cs
add
jb
jmp
cmp
jmp
sbb
push
mov
in
mov
int3
dec
ret
pop
in
es
lods
pop
in
(bad)
inc
(bad)
sub
push
dec
ret
adc
cmp
in
(bad)
xor
stos
(bad)
addr16
mov
call
or
push
mov
popf
movs
test
inc
sub
jmp
dec
jl
dec
add
add
inc
mov
xor
add
add
jmp
dec
push
push
outs
shr
or
add
xchg
rcl
call
std
(bad)
test
jle
xor
test
retf
xor
(bad)
call
jbe
inc
jmp
mov
ins
in
es
inc
adc
fs
sub
jg
dec
fwait
push
je
adc
inc
add
mov
ret
add
stos
jle
jmp
test
add
add
push
pop
cld
xchg
push
lds
test
and
jae
sub
or
bound
add
arpl
jmp
sti
add
sbb
dec
loope
pop
and
xchg
stos
sub
cmc
daa
xchg
call
outs
jno
out
dec
cld
cli
jae
in
push
pop
lock
adc
cli
add
or
stos
js
mov
repz
test
sub
mov
cmp
and
sub
mov
inc
mov
xor
xor
pop
jae
clc
bound
call
lods
jle
cmp
inc
ja
rcr
add
mov
or
dec
xchg
add
mov
jmp
sub
sub
and
mov
mov
mov
jge
fsub
xchg
jmp
lock
div
out
sub
sti
add
or
pop
retf
mov
mov
jbe
add
lahf
push
movs
lods
sub
mov
jge
mov
icebp
fbstp
pop
mov
or
inc
pop
cli
loopne
mov
movs
inc
jae
push
jl
dec
mov
sti
pop
add
inc
outs
inc
jg
in
(bad)
jp
inc
cmps
add
cli
sbb
inc
inc
add
adc
fwait
cli
call
int3
cmp
out
stc
sbb
adc
add
adc
seta
shr
stc
jae
mov
inc
outs
shl
(bad)
js
adc
sub
rdtsc
ror
outs
xchg
pop
cmp
add
xchg
mov
xor
dec
push
icebp
sbb
in
pushf
mov
and
mov
outs
or
dec
sti
hlt
jmp
outs
adc
aad
je
out
clc
stc
mov
(bad)
adc
cli
cmp
push
dec
add
loope
sub
pusha
rol
push
jb
mov
repnz
out
dec
sti
hlt
jmp
sbb
jmp
jecxz
je
push
mov
cli
(bad)
jmp
in
mov
jl
and
add
add
js
je
cmps
cmc
jne
jnp
push
cld
loop
enter
add
pop
pop
retf
add
test
cmp
pop
repnz
je
lea
outs
inc
add
jp
cld
ds
add
inc
add
iret
ret
mov
jge
cld
addr16
add
xor
adc
cmc
jne
outs
add
sbb
cmc
adc
add
mov
shl
fmul
dec
jmp
pop
sub
(bad)
jnp
inc
je
sbb
adc
cmp
in
ja
cmps
and
jge
es
sahf
add
jb
daa
inc
nop/reserved
in
jp
pop
or
sbb
add
or
in
xchg
fs
(bad)
icebp
or
mov
push
jmp
fidivr
push
inc
test
push
enter
sub
into
xor
and
inc
ja
je
dec
pop
push
push
adc
es
hlt
xchg
stos
sahf
xor
mov
fwait
inc
cmp
add
and
mov
and
test
push
out
adc
jg
jmp
mov
xor
or
shl
cmp
mov
inc
ficomp
push
sub
hlt
push
call
cs
jmp
jmp
mov
add
scas
inc
das
test
in
push
mov
in
sub
xchg
lea
sahf
add
std
std
loope
jmp
sub
push
push
fisttp
pop
mov
jmp
and
inc
das
sub
sub
outs
or
cdq
and
push
add
test
out
inc
test
jns
out
cmove
fs
fnsave
pop
add
dec
add
(bad)
lock
add
test
or
sbb
xor
inc
xor
retf
mov
(bad)
xlat
lea
mov
call
test
or
mov
test
ret
lahf
pop
mov
add
sub
mov
inc
jnp
jmp
add
or
fdiv
je
inc
repz
sti
sar
add
fisttp
jmp
mov
fcom
add
es
(bad)
and
xchg
cs
je
stc
add
test
adc
(bad)
cmp
push
fnstsw
sbb
aas
jp
dec
inc
das
hlt
mov
rcl
cmp
mov
test
add
sti
iret
bound
rol
add
stos
lock
adc
mov
mov
sti
push
jno
jg
stc
cmps
jle
inc
in
mov
jl
mov
adc
fs
or
je
es
pop
(bad)
add
cmps
sahf
aas
sub
cdq
xlat
pop
mov
sar
(bad)
(bad)
jle
mov
jmp
mov
xor
fiadd
sub
pop
add
fucom
nop
jbe
ret
dec
mov
add
enter
cmp
les
or
in
daa
mov
and
(bad)
jns
(bad)
sub
and
icebp
xor
enter
lods
loopne
int
jno
aad
adc
sub
inc
in
movs
and
push
mov
cmp
add
inc
jg
daa
mov
add
cld
inc
xchg
sub
cmc
jmp
ja
(bad)
cmp
fidiv
retf
call
in
rcr
leave
not
inc
test
lahf
xchg
outs
or
fdivr
in
and
jle
bound
inc
add
iret
inc
call
test
inc
test
mov
call
mov
or
add
add
cmp
add
enter
sar
jg
inc
adc
push
mov
lea
ret
inc
jb
les
sti
test
dec
xor
cmc
test
adc
pop
lods
add
add
bnd
fnstsw
cmp
leave
js
icebp
mov
pop
aaa
and
cmc
jle
das
pop
aaa
add
loope
inc
das
icebp
idiv
sbb
add
clc
add
adc
fld
sti
das
and
movs
push
cmp
popa
jb
sti
stc
cs
fs
inc
dec
push
adc
es
inc
sti
cmp
pop
sub
mov
out
movs
ds
xor
ror
repnz
or
add
add
arpl
sbb
leave
mov
les
or
imul
scas
mov
clc
jae
data16
inc
jmp
add
sub
int
adc
mov
sub
imul
in
lahf
mov
mov
sar
jns
imul
and
dec
inc
sub
test
mul
add
sbb
call
js
cmp
ins
pop
inc
(bad)
cmp
arpl
mov
call
gs
ss
imul
jg
in
cmp
daa
jmp
out
pop
jmp
push
loope
dec
xchg
ins
in
adc
data16
xchg
or
scas
mov
clc
xchg
lds
sub
es
add
call
mov
test
ins
gs
jge
jb
ins
and
sahf
dec
dec
mov
fdivp
add
aad
inc
add
push
mov
add
push
cmp
or
add
idiv
or
fidivr
cld
cmp
mov
cmp
add
in
jns
sbb
mov
add
and
push
jnp
inc
mov
add
cli
cmp
shr
push
mov
sub
ret
jmp
pop
jp
or
fwait
lock
sbb
jae
pop
inc
(bad)
cmp
mov
sub
add
(bad)
lods
cmp
pop
fidiv
test
add
add
(bad)
sar
fnstsw
cmp
repz
es
cmp
cmp
cmp
sub
inc
pop
data16
movs
call
aas
(bad)
aaa
sti
inc
mov
lock
jbe
out
or
aaa
pop
js
mov
daa
mov
cld
aam
aaa
ror
outs
(bad)
cmc
mov
in
movs
sahf
call
cmp
mov
or
scas
adc
sub
enter
cmp
jbe
popf
adc
jmp
sbb
cmps
add
add
mov
mov
aaa
cmp
(bad)
ret
pop
mov
sti
mov
jo
lea
add
add
repz
inc
jmp
sub
hlt
imul
mov
jge
sub
ret
pop
xchg
bound
jno
jb
(bad)
stc
lods
jg
pop
(bad)
jb
sbb
in
cli
jmp
je
pop
(bad)
mov
test
sti
movs
pop
rol
or
cmps
(bad)
sti
(bad)
cmp
mov
add
leave
stos
sbb
fadd
and
xlat
push
jb
xchg
push
jb
ror
test
test
push
xor
pushf
cmovne
test
add
add
dec
sbb
mov
sub
inc
inc
cmc
jmp
xor
push
jmp
in
jne
in
test
xor
ds
inc
mov
(bad)
inc
mov
xor
add
dec
mov
jnp
pop
das
jne
adc
retf
mov
cmp
or
xor
ret
sbb
es
aas
test
or
add
sub
fwait
mov
std
(bad)
in
push
xor
repnz
xchg
mov
mov
add
pop
es
or
leave
xchg
cmps
retf
xchg
jb
pop
lods
dec
jnp
xor
jp
cmp
or
push
xchg
add
fnstsw
adc
lock
es
mov
sub
jmp
mov
pop
xor
or
xor
mov
scas
fcmovb
test
add
add
add
das
mov
or
sub
bound
js
mov
ret
std
jo
int3
in
adc
and
in
retf
jo
jg
outs
enter
cld
lock
push
repnz
loope
mov
inc
data16
es
inc
adc
int
inc
repnz
xchg
addr16
test
xor
add
je
mov
xchg
jae
inc
icebp
ret
ins
jmp
jmp
call
add
push
iretw
jmp
mov
in
sub
pop
xor
jg
adc
dec
loopne
in
(bad)
sub
cld
popa
jo
or
lds
gs
push
lahf
cmp
add
add
xchg
dec
ss
jmp
imul
idiv
sbb
push
(bad)
jp
or
idiv
pop
mov
in
(bad)
mov
mov
adc
jne
out
mov
xchg
cdq
xor
mov
in
jns
xor
addr16
adc
inc
mov
add
enter
in
push
mov
push
xor
mov
adc
jne
gs
mul
mov
test
jmp
ss
es
cmp
(bad)
jmp
(bad)
sti
icebp
xor
mov
movs
aas
xor
rcr
(bad)
mov
or
pop
xor
lods
pop
xor
out
jne
jbe
or
add
add
in
sbb
lods
mov
xchg
jne
popf
xor
enter
out
jmp
push
(bad)
jmp
call
and
and
dec
adc
xor
inc
ds
(bad)
push
mov
xor
es
rol
leave
jp
leave
test
ss
mov
jecxz
inc
and
add
xlat
inc
fld
add
test
sub
dec
or
test
sub
xchg
out
mov
ret
jl
push
add
out
loop
daa
push
inc
push
adc
inc
inc
int
inc
mov
dec
pop
add
dec
jge
pop
push
jne
out
add
fcmovnbe
xchg
push
and
mov
cmc
cmps
je
adc
add
add
jb
imul
push
xor
retf
lds
ror
in
jns
xchg
movs
out
xor
push
leave
lock
push
nop
leavew
sti
rol
jmp
jg
inc
in
cs
cmc
fidivr
mov
call
xchg
jb
push
daa
cmps
(bad)
shl
add
outs
stc
fdivr
ins
push
or
arpl
pop
cmc
sub
add
add
mov
inc
ja
add
and
mov
adc
or
cmp
add
add
mov
sbb
dec
xchg
pop
inc
add
push
or
cmp
test
scas
adc
iret
adc
mov
in
inc
add
fnstenv
call
repz
dec
retf
pop
push
call
mov
jge
ror
xor
sbb
or
sbb
lock
inc
ss
sbb
sbb
js
and
adc
sub
jecxz
js
push
fs
or
mov
cmp
adc
mov
test
sbb
call
sbb
add
add
sti
jle
push
sub
cmp
dec
mov
scas
sub
sbb
(bad)
sti
test
sub
or
inc
outs
mov
sbb
lods
sub
fistp
and
dec
fs
mov
icebp
ret
mov
loope
jl
aad
jmp
or
call
lock
(bad)
and
daa
int
or
push
out
lods
xor
inc
dec
dec
call
mov
js
dec
sub
fcom
jmp
inc
std
xor
test
stc
sbb
and
jle
hlt
mov
outs
push
jmp
fisubr
call
ss
aas
or
int
cmp
(bad)
mov
adc
(bad)
sbb
add
dec
int
shr
fdivr
fisub
jp
mov
jmp
sub
mov
xchg
mov
sbb
push
sub
add
and
fisubr
iret
inc
lds
(bad)
gs
test
and
push
mov
xor
add
inc
add
push
dec
les
jg
or
add
fcomip
inc
aam
push
pop
push
mov
adc
mov
fidivr
jle
add
popa
repz
jne
cmp
inc
push
sub
jmp
loop
push
sub
mov
in
(bad)
sti
jecxz
push
(bad)
movs
push
sbb
pop
ror
imul
and
lock
je
loopne
push
shr
test
mov
cs
je
mov
jmp
push
fstp
mov
outs
aas
or
popf
inc
inc
or
(bad)
cli
aad
ja
dec
idiv
inc
fwait
jnp
dec
not
loope
aam
xchg
sub
iret
popf
cs
(bad)
sbb
je
aaa
cmc
mov
push
inc
je
xchg
scas
and
sub
xor
daa
dec
dec
fld
inc
sar
adc
and
push
mov
push
js
and
inc
push
xchg
push
pop
jge
pop
pop
scas
call
adc
push
add
in
mov
sbb
sub
jmp
lds
xor
xor
stc
sub
and
sbb
dec
jmp
loopne
int
loopne
add
add
sub
sub
(bad)
add
fidiv
jbe
pop
add
push
fwait
sub
add
retf
add
xor
into
test
gs
push
(bad)
add
arpl
cli
(bad)
mov
bound
cli
call
inc
or
xor
(bad)
xchg
mov
inc
int
add
add
(bad)
jb
int
lds
dec
test
pop
es
jmp
adc
fcompp
mov
jmp
jns
sti
cmp
inc
es
jae
in
xor
and
es
add
(bad)
cmp
js
clc
mov
cli
push
cmp
add
add
and
mov
push
call
mov
inc
and
movs
push
sbb
inc
test
mov
add
pop
mov
test
push
pop
dec
and
push
inc
and
push
popa
mov
clc
test
dec
inc
pop
test
add
es
xor
rol
(bad)
dec
add
aaa
cli
popa
pop
and
je
add
add
cmp
cmp
and
bound
les
dec
bound
adc
lahf
cmps
fiadd
out
cmp
data16
dec
add
jnp
or
stc
jmp
dec
and
inc
outs
xor
and
mov
ret
stc
jmp
mov
or
ss
xor
loop
or
dec
xor
and
test
and
add
pop
lds
and
add
cmc
add
push
sub
mov
xlat
jno
jp
fiadd
jp
bound
addr16
push
jp
jmp
icebp
clc
xlat
mov
sti
rcl
mov
sub
out
aad
and
sbb
add
push
je
push
in
test
jns
mov
stos
add
jns
jns
jmp
pop
pop
(bad)
rol
mov
cdq
es
(bad)
fild
(bad)
ret
shl
mov
test
ds
or
sub
icebp
je
(bad)
jmp
xchg
xchg
add
or
in
mul
ret
and
ds
add
mov
or
xchg
pop
fild
(bad)
sub
(bad)
daa
inc
add
jge
push
bound
pop
out
jne
sub
es
icebp
xor
and
and
and
xor
test
aas
add
cmp
enter
stc
mov
mov
lea
movaps
inc
sar
cmc
jne
sub
les
xor
sub
test
repnz
push
(bad)
add
test
mov
sbb
xchg
enter
add
call
or
mul
or
lea
push
sbb
or
jmp
add
add
add
jmp
out
sar
jmp
mov
sti
std
or
mov
cmp
jae
pop
clc
pop
aaa
stos
inc
jmp
test
arpl
cmp
xchg
pop
lods
cmps
push
das
mov
inc
add
call
call
jne
push
sar
xchg
lods
add
lods
pop
pop
jae
mov
cs
adc
push
inc
(bad)
(bad)
cmp
sbb
mov
push
mov
ins
pop
xchg
mov
sbb
and
je
dec
or
inc
sbb
fiadd
in
(bad)
icebp
mov
fst
lods
rcl
cs
leave
xchg
push
sar
mov
daa
or
fcom
or
ja
stos
popf
push
test
cmp
cmp
inc
inc
outs
sbb
sar
jl
js
mov
lahf
imul
cld
mov
add
out
jne
adc
xor
into
aam
adc
je
pop
and
adc
adc
ins
xchg
inc
pop
and
mov
fmul
push
iret
mov
or
push
and
shl
stos
and
cli
sub
inc
push
bound
(bad)
push
inc
add
cmp
cli
bound
fdivr
push
inc
iret
add
cmp
fimul
jg
je
cld
jle
call
ret
sbb
(bad)
daa
cmp
mov
xor
sar
inc
xchg
xchg
iret
mov
mov
std
cwde
xor
lea
mov
add
push
idiv
inc
iret
mov
sar
not
retf
xchg
adc
dec
outs
and
or
gs
cli
jae
cwde
cmc
adc
fidivr
push
mov
and
jns
es
(bad)
out
jo
shl
sbb
xchg
push
enter
push
lods
idiv
ds
dec
fsub
and
add
xor
fild
call
pop
aas
je
ret
push
sbb
fisttp
stos
push
call
(bad)
jmp
push
sub
out
sub
clc
icebp
(bad)
push
inc
add
jae
or
fisttp
in
(bad)
cs
test
pop
es
or
mov
pushf
mov
add
add
les
daa
jne
mov
in
ins
adc
inc
pop
inc
dec
jle
sahf
and
mov
add
mov
pop
sbb
pop
pusha
sbb
sar
adc
sub
mov
stos
add
dec
cmp
and
bound
repnz
sahf
sbb
nop
iret
dec
vmovmskps
xchg
int3
xchg
out
dec
imul
add
in
jns
adc
and
(bad)
ds
enter
mov
dec
in
cld
test
xor
xchg
and
(bad)
das
jmp
jne
mov
aaa
call
fs
pop
jb
inc
ret
jmp
cmps
arpl
cmps
arpl
jmp
sahf
add
in
add
inc
xchg
into
sub
stos
cwde
enter
retf
dec
add
inc
call
test
mov
push
add
idiv
inc
xor
xor
in
(bad)
xor
lods
inc
add
sbb
stc
dec
xor
adc
scas
dec
sbb
dec
(bad)
lea
mov
mov
mov
imul
mov
in
jle
test
cmovb
je
add
pop
dec
mov
idiv
push
add
add
add
jmp
or
add
rcl
or
ds
xor
inc
sub
sahf
daa
(bad)
ret
add
fisttp
jge
add
add
add
call
test
ret
sahf
adc
mov
(bad)
jmp
push
inc
call
lods
xchg
xor
daa
(bad)
test
in
sub
(bad)
fld
push
in
outs
jmp
push
mov
mov
push
mov
pop
nop
lea
test
add
(bad)
sub
mov
test
dec
jg
call
sbb
or
or
retf
sub
inc
inc
xor
cmps
xchg
cmp
imul
xchg
fimul
or
test
mov
inc
imul
pop
cs
(bad)
aam
add
add
mov
std
call
jne
cli
mov
into
je
mov
call
jb
xlat
xchg
add
aam
cmp
in
dec
cmp
mov
xchg
cs
inc
(bad)
out
pop
sti
into
push
dec
jge
push
aas
test
scas
inc
add
dec
mov
inc
popf
mov
add
add
leave
cli
jmp
xor
inc
iret
dec
shl
or
shl
inc
lock
add
mov
mov
add
dec
or
mov
xchg
pop
mov
jg
add
inc
add
xor
inc
outs
div
inc
imul
pop
xor
jmp
add
add
inc
clc
mov
add
mov
call
xchg
add
jmp
outs
xchg
add
(bad)
pop
pop
push
dec
mov
cli
pop
sub
sub
aas
es
ret
add
inc
or
(bad)
(bad)
cdq
cmps
cmp
adc
mov
inc
jp
adc
movs
add
add
ss
pop
in
adc
mov
add
add
mov
sahf
ins
add
es
jno
fild
pop
(bad)
lock
out
es
mov
mov
movups
mov
adc
aaa
retf
out
hlt
mov
nop
push
pop
retf
sbb
xor
jae
rol
(bad)
mov
jmp
add
iret
cwde
stos
mov
jmp
adc
sti
fld
sub
inc
outs
mov
jae
and
xor
inc
out
scas
outs
fimul
mov
call
cld
scas
add
jmp
mov
add
xor
in
jge
push
sar
cs
ret
inc
out
sahf
inc
aaa
movs
pop
push
or
and
inc
jb
jge
clc
mov
ror
gs
lods
repnz
xchg
mov
sbb
dec
fbld
jge
cs
sbb
or
iret
jle
and
scas
cmp
les
inc
jne
xchg
xchg
add
push
lea
lea
sbb
add
inc
test
sbb
cmc
jne
sbb
cli
popa
xor
push
cmps
in
(bad)
mov
mov
mov
addr16
add
mov
mov
jmp
add
loop
retf
push
pop
jns
(bad)
adc
add
jg
je
aaa
mov
(bad)
push
inc
shl
add
add
je
ja
sub
pusha
ja
add
(bad)
out
push
aam
and
ds
js
cmp
leave
xchg
iret
or
add
pop
out
cld
jmp
pop
push
stos
fwait
cwde
cmovl
or
dec
enter
fistp
or
idiv
sti
adc
aas
es
fwait
aaa
fwait
inc
sbb
(bad)
fadd
add
add
repz
jmp
pop
out
dec
mov
pop
inc
jecxz
stos
sbb
fcomp
and
cmc
icebp
inc
mov
adc
xchg
(bad)
sbb
fld
test
mov
dec
in
aad
fsub
jl
xchg
out
sub
and
fmul
mov
clc
add
shl
and
add
cmc
lods
dec
add
fdivr
movs
add
inc
daa
pop
shl
dec
int
or
push
in
movs
add
shl
sbb
sub
xor
mov
sti
sbb
pop
leave
test
ins
mov
push
push
aad
jae
stc
retf
cmc
retf
std
mov
xor
leave
enter
xchg
leave
dec
(bad)
in
push
mov
leave
adc
cmp
add
outs
mov
addr16
mov
jae
cmp
mov
add
fimul
add
idiv
les
retf
idiv
dec
retf
mov
add
add
add
stc
cmc
je
inc
dec
inc
add
inc
bswap
ret
or
mov
(bad)
in
sub
imul
sub
(bad)
rcr
or
mov
or
adc
test
add
and
fsub
xor
hlt
pop
ret
pop
mov
inc
scas
shl
icebp
pop
fistp
or
div
not
or
or
movs
(bad)
push
rcl
in
cli
mov
cs
and
jecxz
fsubr
add
push
xchg
mov
rol
call
mov
es
out
movs
ret
pop
out
fisub
jae
xchg
ja
xchg
and
inc
stc
dec
cmp
jg
lahf
dec
add
lods
sar
popf
pop
jg
dec
sub
add
add
sub
or
sub
inc
aam
cmps
mov
pop
ins
sar
xor
pop
(bad)
sub
add
mov
call
jno
les
add
add
call
or
ret
and
inc
mov
or
loop
push
jle
sub
xor
aam
out
daa
push
cmp
xor
adc
mov
pop
(bad)
ror
ret
sub
stc
test
mov
out
xor
add
pop
out
push
mov
out
sub
or
gs
repz
push
rol
test
or
cmp
leave
and
lea
adc
sbb
stos
jp
jge
and
jge
sub
jge
and
sub
stc
jge
sub
jge
and
inc
jg
and
inc
add
mov
inc
and
int
xlat
cmp
jmp
dec
inc
add
mov
add
add
ds
push
push
not
(bad)
add
jmp
add
mov
jmp
repnz
jne
push
jne
out
aaa
call
cmp
test
mov
jne
mov
adc
cli
into
or
lds
adc
xchg
push
fdivr
addr16
push
xchg
pop
mov
push
cdq
xor
jne
jle
or
add
add
xchg
add
push
(bad)
jmp
fadd
cli
gs
fs
shl
stos
out
push
call
popf
outs
lods
push
outs
push
call
xor
push
xlat
adc
test
sar
lds
call
lods
jns
adc
add
out
mov
(bad)
mov
sti
jmp
rcr
push
ja
sbb
shr
add
and
and
dec
and
or
cld
adc
mov
mov
or
inc
out
out
test
enter
je
mov
into
mov
pop
(bad)
into
mov
cld
mov
fst
or
inc
jmp
jle
leave
xor
test
inc
sub
ds
push
rcl
out
xchg
and
pop
inc
push
jp
mov
aaa
in
fisub
push
push
cmps
mov
xor
and
jmp
pop
pop
call
lock
mov
call
or
cmp
movs
std
mov
mov
jnp
leave
cwde
push
jae
pop
aaa
fcomp
mov
cli
cmp
dec
rcr
mov
out
sar
sub
stos
cmp
sub
push
fnstcw
mov
or
shr
icebp
cmp
into
adc
dec
idiv
push
inc
sub
adc
je
add
or
xchg
dec
jnp
xchg
dec
mov
in
cmp
ss
cmp
jl
dec
retf
punpckhdq
mov
jmp
adc
rol
mov
add
pop
lock
mov
pop
dec
jmp
push
mov
(bad)
or
cmc
cmc
jne
xor
sti
(bad)
dec
mov
xor
jp
lods
(bad)
popa
movs
bound
mov
cs
cdq
pop
or
mov
fadd
adc
stos
ins
mov
lods
(bad)
jmp
xchg
call
mov
sti
inc
fdiv
sub
xchg
xor
jns
sbb
xchg
mov
ror
xchg
mov
add
jg
jb
jg
cli
inc
mov
or
das
int3
scas
je
and
jbe
sti
test
inc
ins
inc
rcl
adc
mov
pop
in
sbb
ficom
mov
das
cmc
push
xor
ret
add
mov
ret
imul
data16
pop
dec
fs
jecxz
adc
cwde
mov
fidivr
inc
shl
nop
mov
xor
inc
test
pop
retf
and
scas
add
in
push
adc
das
mov
test
sub
sbb
(bad)
in
fs
push
sti
aam
push
inc
jmp
repz
push
jb
lods
push
jmp
jns
add
xchg
adc
repnz
mov
mov
loope
inc
call
sub
inc
pop
and
stos
clc
inc
add
add
test
xchg
test
add
movs
cmp
jmpw
push
hlt
loope
inc
add
cmp
or
xchg
mov
inc
jmp
imul
inc
sub
mov
mov
push
xor
jnp
out
jmp
mov
call
out
cmp
adc
jmp
add
add
inc
test
mov
inc
adc
mov
clc
sbb
aas
repz
pop
xchg
and
mov
cmc
jmp
and
call
and
je
adc
lea
scas
mov
push
ja
lods
inc
imul
adc
lods
inc
xor
push
ror
pop
mov
gs
mov
lods
jg
sbb
inc
(bad)
stos
xchg
add
retw
inc
sti
lods
inc
fs
out
sub
sti
sub
cdq
cmp
cmc
mov
repz
es
sub
test
add
nop
addr16
mov
sbb
int3
adc
jb
(bad)
fnsave
lds
jbe
mov
or
sub
jmp
arpl
add
mov
xchg
mov
pop
test
inc
jmp
js
sbb
jmp
mov
and
pop
lods
and
pop
inc
imul
jmp
jmp
push
mov
add
mov
cli
push
push
pop
add
or
cmp
inc
sti
xor
pushf
inc
mov
mov
cli
cmps
inc
mov
(bad)
int
jmp
push
inc
add
pop
adc
jg
retf
jae
or
mov
xchg
jmp
cmp
pop
add
sbb
call
mov
add
add
lea
cmp
xor
adc
mov
call
lea
and
call
jmp
call
sbb
loope
ror
add
mov
jne
dec
sub
sbb
lahf
and
pop
into
or
cmp
adc
add
and
ret
pop
lea
push
push
and
push
and
sbb
jb
(bad)
cmp
outs
and
mov
stc
add
pop
loopne
mov
mov
xchg
aas
inc
add
adc
push
jns
ins
mov
pop
mov
pushf
adc
add
div
mov
es
pop
sti
xor
mov
add
jp
sti
sbb
push
inc
es
add
dec
inc
lds
test
push
sti
ins
push
mov
fistp
or
out
cmp
pop
mov
inc
lods
shr
mov
or
loope
xchg
imul
stos
cmp
test
xor
retf
jmp
call
adc
pop
js
add
add
and
adc
mov
push
lahf
or
aaa
jle
jecxz
int
arpl
adc
in
lods
mov
jmp
sub
(bad)
mov
lods
daa
ss
lods
daa
cs
or
sbb
inc
add
and
inc
add
and
mov
jmp
and
add
add
mov
add
mov
mul
sbb
cli
(bad)
mov
mov
out
pop
inc
add
movs
pushf
sbb
jo
je
pushf
inc
push
pusha
jbe
mov
adc
cld
sub
aad
mov
add
and
mov
lods
dec
mov
xchg
lea
inc
push
add
add
dec
(bad)
mov
mov
add
add
outs
sbb
xor
mov
inc
test
call
call
test
in
mov
sbb
loopne
inc
push
sbb
adc
dec
mov
sbb
add
xchg
mov
mov
mov
ret
add
add
mov
dec
adc
mov
sub
add
fdivr
push
call
imul
cmp
push
and
lods
movs
mov
dec
sti
xlat
xchg
xchg
or
and
push
sti
xchg
mov
dec
adc
adc
xchg
add
cli
jae
push
sti
push
pop
cmp
add
add
(bad)
je
xor
xchg
xchg
pop
inc
add
mov
mov
cmp
jl
lods
cdq
mov
mov
push
lea
test
mov
mov
xlat
sbb
cld
hlt
inc
xchg
cld
icebp
dec
fs
rcl
jbe
mov
fwait
pop
xchg
or
pushf
dec
std
sub
ins
inc
push
mov
loope
sbb
loop
push
adc
push
(bad)
(bad)
test
shr
sti
popa
cld
sbb
jnp
adc
pop
pop
call
es
ss
jne
and
cmp
dec
jmp
mov
sbb
dec
jo
scas
xchg
xlat
test
frstor
inc
lea
adc
cdq
sub
mov
add
sbb
test
dec
add
mov
pop
lea
stos
cli
out
mov
je
mov
xchg
sub
cmps
aam
mov
push
add
and
test
dec
loope
pop
clc
bound
inc
add
test
sub
(bad)
mov
adc
lock
mov
scas
shl
repz
call
xchg
jmp
out
dec
inc
add
adc
push
retf
std
sub
xor
inc
dec
(bad)
mov
inc
jnp
sbb
adc
sub
fsubr
ret
mov
jmp
inc
dec
lea
clc
dec
push
not
add
add
test
outs
add
adc
xor
dec
icebp
sbb
(bad)
cli
mov
sbb
and
cli
jno
div
test
or
push
(bad)
stc
dec
icebp
sbb
xlat
cli
cmp
cld
xchg
xor
xlat
test
dec
adc
div
call
stc
je
add
add
jae
dec
push
sbb
clc
es
push
push
and
pushf
inc
and
int3
sbb
xor
cmp
mov
test
loope
push
xor
add
stos
pop
repz
jb
arpl
lods
ror
sub
test
clc
inc
test
aaa
jmp
pop
test
stos
mov
loope
fwait
or
jno
push
inc
push
test
add
mov
sub
sbb
mov
test
shl
push
pushf
cdq
repnz
test
cmps
sbb
verr
(bad)
jmp
and
add
pop
adc
add
into
ret
mov
shr
jl
je
pop
cdq
or
inc
add
pushf
inc
callw
mov
jmp
add
dec
inc
add
lods
inc
lea
lods
dec
std
cmps
jmp
add
dec
retf
and
inc
lea
ins
test
sub
cmp
cmp
add
test
add
out
cli
add
inc
dec
lea
clc
inc
jae
push
mov
sbb
adc
les
and
cmc
call
push
add
mov
mov
or
mov
push
push
mov
xor
not
ret
mov
jmp
mov
cmc
push
jl
ret
inc
fdivr
and
jae
mov
and
pop
imul
mov
fwait
xchg
popf
dec
hlt
xchg
cmp
xor
add
add
aad
push
bound
ja
add
imul
pop
or
or
adc
add
jle
cmp
mov
fdivrp
xchg
sbb
jns
adc
dec
call
movs
push
je
sbb
es
and
das
data16
imul
push
shl
add
repnz
call
xor
in
stos
inc
imul
inc
adc
push
sar
cmps
shr
mov
outs
or
cmp
mov
add
mov
jecxz
adc
mov
inc
mov
mov
test
test
push
or
jb
jae
xor
hlt
dec
mov
add
fstp
sbb
or
repz
imul
mov
cmp
inc
add
cmc
xchg
stos
xchg
xlat
bound
xchg
push
test
in
jb
mov
sti
sbb
mov
stc
sahf
mov
inc
test
cmp
xchg
jmp
clc
add
or
loopne
stos
cli
mov
add
xlat
or
sub
mov
(bad)
call
cmps
xor
push
jle
sti
ss
xor
pop
cmc
gs
mov
xchg
xor
cli
add
cli
push
fisttp
test
dec
xor
mov
test
or
mov
ror
rcl
jne
mov
jmp
adc
out
or
test
add
inc
dec
push
lock
or
and
push
xor
mov
push
or
push
cld
jmp
xlat
shl
fmul
dec
push
daa
inc
lock
imul
jne
mov
clc
out
clc
mov
push
add
push
call
sub
jl
push
mov
inc
adc
dec
sti
sbb
xor
pop
push
adc
add
das
pop
fdiv
es
call
mov
cmp
cmp
ja
dec
dec
jnp
(bad)
add
lock
xor
add
mov
lock
out
xor
xchg
(bad)
rcl
je
es
xor
(bad)
cli
jno
dec
clc
(bad)
xor
repz
outs
inc
push
sub
add
pop
mov
int
neg
in
xor
scas
jecxz
dec
mov
lock
or
jge
into
and
leave
shl
ja
shr
mov
mov
je
push
lods
cmp
inc
data16
sbb
lock
mov
mov
stos
idiv
adc
push
stos
fchs
pop
mov
cld
lock
mov
jne
sub
mov
push
adc
sbb
push
stos
div
bound
ss
stc
jae
and
mov
movs
mov
mov
adc
push
hlt
cli
push
retf
add
dec
mov
cmp
adc
not
jbe
sar
cli
push
cmp
stos
xchg
mov
xor
xor
add
sahf
je
mov
aam
sahf
rcl
jg
aaa
push
sbb
add
jns
inc
adc
push
pop
push
xchg
add
lock
(bad)
aas
push
inc
or
(bad)
mov
or
mov
mov
cwde
loop
mov
mov
add
lock
out
call
add
xchg
add
add
lea
test
(bad)
retf
mov
(bad)
jg
inc
or
popf
mov
repnz
(bad)
mov
retf
lea
es
dec
test
ret
clc
(bad)
jmp
gs
and
inc
call
sub
or
repnz
mov
add
icebp
xchg
ror
rol
add
sub
es
dec
call
lods
jo
xchg
xor
je
ror
out
mov
out
sti
xchg
aad
out
iret
in
mov
enter
dec
lock
inc
xchg
xor
(bad)
in
test
in
js
sar
push
neg
call
js
add
add
sahf
and
fwait
or
add
sub
add
jns
xor
lahf
pop
ja
retf
mov
fadd
inc
loop
xlat
enter
jne
ret
and
inc
ins
ret
xor
inc
sbb
inc
div
push
mov
cmp
pushf
sahf
sbb
dec
sbb
cmp
xchg
sbb
add
mov
cld
jb
cdq
rcr
fwait
cli
ds
jp
pop
ja
and
test
and
pop
in
div
mov
call
sbb
xrelease
jne
inc
in
in
mov
mov
push
jnp
je
pop
lods
sbb
and
or
xchg
movs
jge
int
sub
add
add
lea
cmc
out
sbb
push
add
sbb
or
lods
cmc
inc
mov
or
cmc
jne
push
dec
fmul
fcomip
call
or
or
int3
jnp
inc
adc
pop
fs
inc
or
lahf
dec
(bad)
ficomp
dec
or
sbb
mov
jg
push
inc
add
or
xor
add
add
cmc
push
xchg
(bad)
repnz
lea
add
dec
adc
adc
or
and
out
lods
in
lea
cmp
mov
adc
out
lahf
in
adc
daa
(bad)
call
xor
es
(bad)
gs
jmp
into
adc
ds
sti
and
inc
clc
jbe
add
sub
or
out
jnp
call
add
push
mov
out
jnp
cli
cmc
rcr
(bad)
movs
in
mov
cdq
test
dec
fs
xchg
repz
cmp
fiadd
(bad)
movs
clc
or
arpl
cld
sbb
call
mov
inc
jnp
add
add
jae
jg
cwde
inc
jmp
jmp
pop
xor
cmp
push
jmp
es
and
push
inc
jmp
fild
fwait
call
call
cmp
ret
pop
test
xchg
shr
cli
sbb
jmp
fxch
std
call
add
mov
repnz
adc
or
icebp
sbb
imul
clc
push
pop
(bad)
or
and
mov
and
sahf
adc
sbb
jo
jae
sub
(bad)
out
call
cwde
sbb
mov
or
ret
adc
out
and
or
out
popa
add
pop
sets
push
pop
loopne
xor
rol
add
sbb
dec
lea
dec
push
push
or
jmp
and
rcl
add
add
call
jne
mov
dec
cmp
jg
test
sub
add
les
cmovne
(bad)
fidivr
inc
lahf
mov
add
add
mov
sbb
pop
dec
push
rcr
test
xchg
jg
daa
stos
inc
mov
loop
enter
dec
mov
stos
(bad)
call
sbb
sub
iret
push
jnp
adc
add
iret
jmp
stos
(bad)
jmp
add
add
pushf
lds
and
mov
pop
inc
jbe
adc
in
inc
movs
jge
jmp
lods
jmp
int3
enter
push
sub
push
mov
inc
ins
les
ret
mov
or
ins
xchg
xchg
jns
ror
jl
sub
cmp
add
dec
jle
dec
in
sar
repnz
test
out
mov
dec
test
in
xchg
stos
out
test
xor
sub
or
xchg
jp
test
cdq
in
cmp
div
xchg
xchg
jmp
in
push
dec
or
fwait
cli
into
dec
or
jb
hlt
push
mov
sar
add
ret
repz
jb
jo
icebp
cmc
call
clc
jnp
icebp
aad
push
loope
(bad)
fbld
push
sti
sbb
inc
fidivr
push
pop
hlt
dec
xchg
adc
inc
dec
cdq
je
inc
das
mov
(bad)
fimul
or
jbe
push
adc
inc
call
mov
sbb
add
add
add
add
lea
pop
call
push
mov
in
test
outs
js
add
adc
dec
lea
dec
push
cwde
push
or
iret
xor
mov
pop
not
retf
mov
add
daa
push
lea
push
call
mov
mov
cli
inc
add
add
mov
in
fldcw
sti
ja
xchg
stc
stos
mov
or
push
fwait
xor
cmps
xchg
add
repz
popf
xchg
jle
or
fisttp
daa
dec
sti
test
add
cli
jle
mov
mov
test
pop
xchg
sbb
int
cmp
aam
xchg
xchg
out
fdivrp
hlt
jo
xchg
add
add
mov
pop
push
inc
mov
sbb
pop
mov
sub
dec
and
push
sub
mov
sbb
nop
mov
hlt
gs
cld
shr
in
enter
push
test
add
shl
sar
mov
push
xor
push
sbb
mov
loope
mov
add
mov
cmp
xchg
sbb
(bad)
cmp
pop
mov
clc
xchg
cmp
xchg
xchg
inc
loope
xchg
xchg
or
add
bound
gs
pop
mov
dec
jge
mov
and
sub
add
cwde
cli
out
int
stc
out
test
cli
(bad)
mov
add
add
stos
xchg
mov
jmp
push
mov
test
sub
test
adc
push
(bad)
imul
push
hlt
cs
mov
inc
lea
cmp
out
mov
add
dec
push
ret
cdq
aaa
out
cmp
sti
cmp
cmp
xor
sub
mov
or
add
pusha
jne
adc
pusha
xor
outs
adc
mov
aad
ret
scas
or
jae
sub
enter
jae
jp
jmp
sbb
pop
push
cmp
dec
mov
dec
push
sbb
jge
imul
push
shr
lea
(bad)
fsqrt
scas
call
sub
add
add
fwait
inc
cmp
mov
cmp
pop
adc
shl
sub
es
xor
xchg
push
or
lahf
out
xor
dec
cld
jbe
(bad)
sbb
or
add
sub
test
call
mov
xchg
bound
clc
mov
add
daa
fwait
inc
rol
add
(bad)
sub
pushf
pop
call
or
sbb
xor
es
push
xor
xchg
cwde
adc
or
or
cld
mov
jmp
mov
add
mov
fst
cmp
fsubr
fcmovnu
mov
inc
les
(bad)
mov
les
add
add
dec
aas
fdivrp
call
xor
inc
es
jmp
mov
pop
add
(bad)
mov
pop
sti
push
pop
jle
aam
mov
jns
popf
add
sti
aam
inc
inc
jmp
sub
push
mov
icebp
push
adc
push
xor
pop
add
add
add
mov
pop
cli
fidivr
mov
bound
mov
gs
lea
or
(bad)
icebp
push
push
pop
call
aaa
movs
clc
in
test
sub
je
call
xchg
cmp
(bad)
sub
cmp
cmp
dec
push
addr16
add
aas
call
loop
bound
outs
fdivrp
dec
sbb
jmp
xor
push
daa
jae
jmp
pop
call
xor
add
adc
div
call
adc
jns
fmul
pop
xchg
out
push
push
dec
lea
dec
mov
cmc
adc
ins
into
aaa
pop
or
sub
gs
addr16
push
dec
xor
adc
pop
ins
and
lock
call
push
iret
es
adc
aas
or
jb
es
out
cli
arpl
mov
inc
sub
popa
xlat
je
xor
mov
adc
add
mov
xchg
imul
cmp
cs
cmp
add
adc
inc
imul
or
inc
mov
add
add
add
xor
outs
and
xchg
push
xor
add
shl
adc
call
ficom
sub
inc
es
push
mov
mov
cmp
mov
bound
ret
and
jmp
jg
stos
add
jmp
jnp
in
xor
mov
gs
icebp
add
dec
sub
mov
mov
lock
dec
mov
jae
mov
xchg
xchg
and
dec
add
jno
mov
or
add
sub
add
or
and
pop
add
push
cmp
arpl
aaa
cmps
dec
sbb
aam
cmp
fwait
(bad)
cli
mov
and
add
add
cmp
call
pushaw
or
bound
jo
pusha
adc
out
lea
sub
dec
push
imul
jg
add
sub
jnp
mov
test
sub
lods
xchg
lea
push
(bad)
jp
or
aas
mov
and
xchg
(bad)
mul
test
sti
adc
add
add
ins
cmp
retf
sub
(bad)
cld
or
and
cmp
into
and
cmp
mov
add
mov
loop
dec
or
add
jbe
test
mov
jae
lahf
sub
add
push
call
sub
shl
push
xchg
int3
add
add
es
jg
ins
(bad)
push
ds
(bad)
dec
hlt
cmp
inc
jmp
inc
fidiv
inc
loopne
dec
lods
cmps
sbb
push
mov
mov
dec
pop
push
aam
stos
rol
dec
icebp
(bad)
test
mov
call
rcl
psubsb
(bad)
(bad)
mov
inc
jmp
and
ret
sti
(bad)
(bad)
pushf
sbb
jmp
xor
std
icebp
cmp
fld
pop
daa
inc
jmp
pop
push
mov
out
and
loope
push
jmp
xchg
movs
test
jg
inc
jmp
jmp
mov
gs
adc
imul
das
jl
dec
sub
sub
add
add
inc
push
out
not
sub
pop
(bad)
in
mov
jae
cmps
popf
adc
cld
sbb
dec
pop
dec
aam
cmps
xchg
sti
adc
and
(bad)
in
inc
xchg
mov
sti
cld
cmp
mov
inc
xchg
dec
mov
mul
or
popa
fadd
ss
ret
fs
add
dec
jb
sahf
ds
mov
aas
fadd
fsubr
inc
mov
aas
jp
fsubr
xor
push
pop
xchg
inc
arpl
mul
sti
(bad)
mov
cmp
jne
push
lea
call
ror
add
add
ja
cwde
aas
inc
add
add
add
mov
sub
outs
cmc
jne
mov
cmc
push
call
jmp
mov
call
mov
out
pushf
ss
out
adc
inc
pop
pop
cli
jle
jo
add
fisub
arpl
into
cli
push
call
out
cdq
mov
jmp
les
add
add
pop
mov
jo
into
dec
jle
stc
jmp
mov
pop
push
iret
dec
cmc
inc
adc
es
cmp
dec
iret
cli
mov
idiv
push
mov
call
adc
jl
jg
add
and
stos
push
cmp
push
inc
jle
inc
add
test
call
mov
inc
jmp
jmp
add
add
add
jle
cmp
dec
xchg
mov
out
es
loopne
push
xor
es
sub
mov
test
add
mov
jmp
sbb
push
pop
das
xchg
imul
ins
dec
adc
aas
es
add
mov
ret
or
cmp
cmps
shl
aam
out
and
data16
call
idiv
bound
es
imul
jle
rcr
jnp
dec
and
sub
or
cmp
push
push
cmp
mov
call
push
test
sbb
arpl
push
or
fnsave
cmp
in
fst
bound
push
idiv
add
mov
sub
cmc
push
out
cli
dec
pop
shr
jbe
jmp
sub
aaa
bound
(bad)
ror
add
rcr
pop
loopne
cmc
push
xlat
cmp
call
xchg
jae
addr16
jmp
add
pop
nop
or
inc
add
add
sti
dec
jge
inc
pop
xchg
(bad)
xor
lea
push
sahf
cmc
pop
aas
inc
push
lea
dec
push
(bad)
cmp
push
inc
aas
(bad)
mov
jae
pop
(bad)
call
and
inc
sbb
loopne
in
pop
mov
lds
jnp
dec
jnp
or
imul
arpl
std
out
icebp
iret
cli
popf
jnp
cmc
cmp
sbb
and
xchg
out
ret
add
add
add
data16
loope
cs
sbb
aas
es
(bad)
or
in
mov
aad
rcl
mov
mov
jae
inc
outs
inc
or
(bad)
cmp
es
jmp
(bad)
cmp
mov
cmp
sbb
sub
popf
pop
or
repz
(bad)
sub
lds
cld
dec
push
cdq
add
add
bound
inc
lds
(bad)
lds
mov
mov
push
ret
adc
cmp
mov
ror
test
push
inc
sbb
inc
fs
sbb
call
inc
add
jnp
mov
fidiv
jmp
stc
mov
pop
jl
pop
push
inc
add
add
add
clc
pop
bound
xchg
int
add
and
adc
rcl
sub
je
lods
icebp
ss
ins
push
(bad)
jl
das
inc
xchg
ror
popf
jmp
add
push
jnp
and
dec
test
push
(bad)
leave
xchg
movs
inc
add
jb
cld
ret
inc
add
mov
inc
push
movsx
add
lock
add
mov
jge
add
push
test
add
inc
mov
or
inc
test
cmps
je
(bad)
push
mov
add
add
or
pop
ret
(bad)
std
out
pop
ss
lea
dec
call
add
sub
je
outs
cmp
add
add
sub
jl
es
cld
out
mov
cli
or
mov
into
test
js
mov
repz
ds
and
dec
add
nop
clc
cli
pop
adc
fmul
aas
xor
out
(bad)
(bad)
cld
shl
int3
cs
sub
out
sub
and
cmc
dec
js
or
cmp
(bad)
push
push
xchg
cmp
test
popf
push
add
stos
fisub
clc
adc
mov
ret
clc
stc
jns
jp
jle
pop
test
jge
(bad)
dec
dec
inc
into
aad
add
xor
retf
fcomp
jl
loope
push
retf
clc
cwde
outs
dec
and
sar
lahf
das
pop
add
xchg
xchg
jmp
jp
and
push
push
test
add
in
cdq
mul
retf
movs
xchg
cmp
jg
or
push
leave
int3
xor
adc
retf
dec
cdq
pop
dec
xchg
cmp
or
outs
add
hlt
xor
xlat
pop
data16
mov
test
sub
std
ret
cmc
cmps
mov
cld
sub
inc
jl
test
cld
mov
and
enter
je
push
mov
mov
cli
ret
ins
xchg
push
in
jle
adc
stc
add
in
(bad)
mov
call
ret
mov
or
and
(bad)
sbb
push
test
aas
and
sbb
jmp
inc
div
xchg
xor
add
mov
and
add
add
inc
and
xor
cmc
ss
jg
push
mov
inc
add
(bad)
push
add
ror
cli
not
push
mov
out
cdq
imul
mov
jp
mov
jle
dec
sti
pop
leave
cmp
aam
push
les
(bad)
mov
dec
ror
mov
push
mov
xchg
cld
xor
mov
cmp
add
add
add
and
cmp
sub
lock
fwait
sub
dec
popa
outs
es
ins
add
loopne
jae
sar
lods
pop
enter
or
push
mov
cli
mov
fsqrt
xchg
xchg
mov
cmp
mov
(bad)
adc
jns
add
push
jl
push
out
hlt
movs
test
aaa
std
mov
cmp
inc
mov
sub
sbb
inc
mov
call
add
ins
lahf
test
pop
in
add
adc
mov
lahf
in
add
retf
sub
test
jns
xor
adc
adc
inc
test
out
cmp
out
js
or
push
jnp
inc
outs
lds
add
add
out
lock
push
adc
sub
aaa
xor
jmp
add
es
cmp
test
(bad)
je
retf
call
inc
scas
ins
int
into
pusha
sbb
stos
cmp
mov
and
mov
cli
ins
gs
adc
pop
xor
mov
popa
dec
dec
fild
add
add
inc
jg
xor
push
jb
adc
movs
or
inc
bound
and
call
push
pop
lea
(bad)
movlps
mov
sub
std
mov
jo
rol
jae
aaa
aaa
or
mov
dec
lea
call
push
inc
jg
mov
add
cmp
and
outs
jp
cmp
add
sti
cmp
xor
jne
sysret
push
push
out
ins
and
add
adc
add
add
shl
loop
or
pop
popf
es
push
inc
xor
out
gs
call
inc
and
jmpw
add
add
sub
mov
mov
push
pop
cmp
js
or
push
mov
inc
pop
ss
fs
data16
sub
aaa
icebp
hlt
mov
ins
ja
sub
aaa
and
jb
inc
pop
mov
(bad)
out
pop
les
push
xor
loope
ret
rol
add
jb
or
bound
add
mov
pop
pushf
adc
fnstcw
xchg
jmp
xor
push
cs
and
push
(bad)
cmp
es
jmp
inc
shr
shr
ins
shl
and
outs
adc
bound
test
or
jmp
adc
cmp
cmp
dec
dec
add
scas
mov
clc
pusha
cmc
ret
sbb
inc
or
mov
mov
inc
je
dec
cmp
pop
inc
bound
cli
das
je
xchg
mov
ret
not
lock
sbb
push
or
mov
add
add
cdq
data16
push
jl
jns
mov
mov
pop
add
hlt
(bad)
pop
sub
jmp
pop
inc
jg
std
rcl
cli
add
add
or
call
mov
lea
pop
lea
pop
not
dec
mov
leave
std
add
mov
add
pop
or
cmc
jmp
jge
jo
mov
call
add
add
nop
test
pop
cmps
or
aas
dec
rcl
add
mov
dec
mov
inc
mov
mov
add
ret
jno
cmc
push
es
out
pop
(bad)
jmp
sub
out
sbb
rcr
daa
pop
dec
add
add
mov
stc
jbe
stos
xor
icebp
imul
ss
add
dec
sbb
mov
dec
call
jne
daa
pop
dec
stos
(bad)
jmp
xor
stc
hlt
pushf
pop
pop
pop
popf
jle
push
rol
inc
fdiv
ja
lock
inc
mov
inc
les
mov
add
add
add
inc
sbb
cdq
clc
repnz
js
inc
es
sub
mov
movs
add
sbb
push
adc
add
fldenv
es
mov
mov
sbb
inc
lds
sub
retf
dec
xor
jmp
(bad)
out
or
stos
or
push
mov
add
add
adc
pusha
adc
sub
or
sbb
xor
inc
in
ins
into
push
sbb
adc
aam
push
inc
jmp
movs
test
(bad)
mov
and
and
loop
sub
icebp
push
fnstenvw
add
rol
jg
xor
inc
adc
sti
aam
push
inc
jmp
movs
test
cli
punpckldq
aaa
push
stos
hlt
push
xchg
icebp
push
inc
jmp
add
lea
inc
push
(bad)
adc
test
push
mov
sub
das
dec
bound
aas
lea
adc
inc
rcl
not
cmp
push
or
jns
retf
sub
jg
inc
bound
xor
inc
jae
lea
add
add
aad
mov
push
or
adc
adc
sar
jnp
xor
pop
push
ret
or
bound
xor
int
adc
jbe
add
and
inc
es
fist
out
dec
adc
cmp
stc
sub
das
movs
sub
add
jae
pop
mov
sub
ret
push
lea
dec
lea
dec
sti
aad
xchg
data16
and
fcmovb
or
jb
popa
scas
sbb
or
loope
dec
sti
jne
mov
mov
inc
or
imul
ffree
(bad)
mov
cmps
sub
(bad)
les
les
ins
ror
addr16
outs
vmovhps
add
add
jbe
out
inc
mov
je
in
fsubr
lds
in
add
mov
sub
stos
test
ins
out
sub
xchg
aaa
add
sbb
loop
leave
mov
pop
or
imul
sub
jmp
daa
les
adc
stos
test
sti
jmp
scas
or
cmp
or
sub
add
sti
inc
sti
hlt
sub
add
fs
sub
outs
sub
jmp
cwde
adc
clc
or
mov
and
pusha
out
repnz
xchg
(bad)
mov
ds
and
sbb
xor
aas
jmp
push
inc
jmpw
add
xlat
push
add
cli
xor
inc
sub
mov
inc
mov
dec
pop
xor
sub
dec
inc
jecxz
mov
lock
dec
jne
cmp
add
cmp
dec
dec
push
or
enter
add
add
push
call
test
sbb
sub
fild
inc
mov
add
push
not
cmp
mov
aas
dec
dec
sbb
mov
mov
adc
es
test
pop
es
mov
add
popf
dec
xchg
push
push
popf
int
inc
cs
lods
inc
xor
cli
sub
cwde
pop
repz
dec
jp
xor
nop
add
ins
mov
inc
add
add
adc
add
dec
jne
sub
leave
mov
add
pop
stos
mov
mov
jb
js
popf
inc
inc
rcr
into
jmp
inc
jge
push
sbb
loope
cli
cmp
jno
push
not
cmps
gs
stos
sub
in
dec
xchg
and
or
add
add
inc
sbb
jnp
or
divps
mov
pop
dec
push
lock
test
inc
aad
pusha
out
fadd
push
aam
es
ds
jmp
es
jmp
cs
fsubrp
xchg
xchg
push
or
mov
in
jg
daa
out
add
aaa
push
out
ja
out
pushf
imul
call
repz
sbb
pop
jle
push
stc
push
je
outs
out
jo
cli
xchg
div
xchg
(bad)
push
jle
test
out
and
shr
ins
jmp
sbb
mov
push
mov
or
loope
ja
jmp
inc
dec
jb
cmp
push
xchg
in
xchg
add
add
add
sub
call
jne
mov
push
push
pop
call
imul
rcr
clc
call
sgdtd
aas
pushf
jb
mov
mov
add
inc
lea
mov
push
call
scas
dec
call
je
or
add
mov
dec
mov
pusha
cmp
jge
add
add
ds
shl
cld
call
fnstcw
stos
icebp
add
xor
jmp
outs
jmp
fst
cli
stos
popf
das
push
or
mov
and
mov
dec
inc
mov
pop
loope
jae
add
(bad)
jecxz
push
push
cmp
mov
push
in
stos
adc
cli
sbb
adc
mov
add
jnp
add
mov
mov
add
es
jmp
sbb
push
lods
lahf
push
ret
outs
add
inc
sbb
sub
stos
cmp
jns
pushf
data16
cld
add
jmp
mov
aas
stos
std
mov
pop
pop
ins
rol
ror
mov
ins
sub
sbb
out
sub
add
add
xchg
xchg
mov
mov
jmp
adc
pop
cmps
mov
or
pop
lock
(bad)
sub
inc
sub
gs
sub
mov
lods
jmp
sub
sub
dec
xchg
gs
ret
movs
sbb
bound
and
icebp
pop
sbb
or
jmp
and
xchg
jmp
popf
pop
pop
(bad)
xchg
push
mov
pushf
gs
jmp
jne
jle
ds
bts
and
mov
mov
inc
in
std
nop/reserved
addr16
call
mov
out
fs
out
or
cmps
sar
mov
pusha
loope
(bad)
cld
and
ret
ds
adc
add
fadd
push
or
retf
pop
push
call
add
and
or
bound
push
push
jnp
sbb
add
inc
add
ret
cmp
nop
(bad)
nop
or
cmc
xor
and
in
add
mov
(bad)
nop
loop
cmp
cmc
test
push
adc
adc
push
scas
mov
bswap
mov
cld
shr
mov
inc
xor
and
lock
and
popf
sbb
or
inc
call
xchg
(bad)
or
call
cs
(bad)
ins
(bad)
jmp
dec
sbb
xor
aaa
and
test
inc
mov
dec
xor
call
call
sbb
call
add
aad
add
arpl
sti
add
inc
and
inc
rol
es
imul
jbe
out
imul
test
dec
or
in
sub
call
pop
lods
cmp
inc
inc
cmp
mov
add
adc
pop
or
call
mov
cmp
add
es
pop
sbb
push
fdivr
pop
cmps
fiadd
call
or
aad
add
dec
sbb
mov
push
call
leave
out
mov
bnd
push
mov
sbb
cmps
lods
push
cld
aaa
jbe
mov
pushf
sub
push
push
cmp
jmp
jno
cli
push
and
leave
out
leave
sbb
shl
rcl
aad
pusha
push
retf
push
repz
mov
cli
nop
sbb
xor
xor
xchg
jmp
pop
xchg
nop
mov
xchg
or
pusha
add
or
mov
dec
jecxz
mov
popa
cmc
aaa
push
into
enter
out
or
jmp
test
lahf
aad
(bad)
ror
inc
mov
or
or
xor
add
test
iret
inc
je
xchg
mov
add
(bad)
idiv
popf
sbb
mov
inc
or
dec
push
addr16
inc
push
mov
push
call
outs
xchg
mov
cmp
jns
add
add
cmc
dec
outs
call
cmp
mov
popf
test
push
lods
sbb
inc
pop
cdq
adc
es
jmp
add
es
jmp
dec
xchg
mov
jl
aam
or
add
sbb
cmp
xlat
inc
sbb
cmp
or
add
add
inc
int
mov
fisttp
sub
inc
les
arpl
inc
outs
inc
jp
and
ja
and
stos
(bad)
call
sbb
inc
mov
pop
dec
call
retf
stos
pop
cmp
mov
lods
pushf
(bad)
sub
movs
into
call
jle
call
jmp
pop
pop
loope
test
jecxz
inc
into
pop
push
push
test
ins
cmps
sub
rcr
or
jb
xor
daa
pop
inc
add
and
fsub
scas
push
cmp
test
pop
(bad)
fisub
jecxz
pop
sub
adc
pop
or
inc
addr16
stc
inc
mov
pop
cli
ss
inc
jp
cmps
push
add
sub
inc
std
test
add
jecxz
adc
xchg
jmp
mov
shl
add
(bad)
lock
out
(bad)
dec
dec
dec
push
fdivr
out
js
aas
stos
ins
add
scas
outs
inc
or
rol
add
cmp
add
inc
call
mov
or
inc
jecxz
dec
je
and
and
cli
mov
add
(bad)
js
loop
mov
add
dec
mov
cli
(bad)
jg
jecxz
hlt
add
movs
inc
lea
fild
mov
inc
add
es
mov
push
lea
and
fsubr
pop
inc
push
loopne
cmp
cmps
cli
xor
inc
pop
in
(bad)
push
popf
mov
cmp
jnp
sbb
stos
push
inc
push
jmp
jl
cli
mov
sub
adc
shr
xor
lea
leave
movs
jae
pop
movs
jb
xor
scas
xlat
sub
mov
push
push
stos
shl
data16
movs
call
test
xor
add
add
test
inc
es
lods
add
jp
fistp
mov
add
add
inc
jmp
dec
outs
int
xor
ret
call
sub
call
add
sbb
out
push
int
or
mov
stc
push
stos
add
fwait
sbb
pop
jmp
mov
into
sub
test
add
into
neg
xor
je
dec
ins
inc
je
xlat
imul
pop
xchg
jle
jg
and
into
aas
jmp
mov
cmp
xchg
pop
cmp
out
or
daa
mov
push
bound
dec
dec
mov
mov
movs
xor
push
out
call
add
dec
mov
mov
and
push
fwait
retf
pop
cli
add
test
js
cld
mov
inc
push
cmovo
xchg
inc
jge
js
clc
data16
push
inc
dec
call
add
data16
or
mov
mov
cli
dec
aad
jmp
add
fisub
add
movs
popf
cmc
(bad)
cmp
sub
ss
mov
cli
dec
xlat
jge
iret
inc
add
push
adc
xchg
mov
or
inc
idiv
xor
jp
xchg
dec
aad
dec
das
pop
mov
je
push
pop
jle
pshufw
mov
mov
mov
imul
mov
outs
push
or
bound
jmp
aam
enter
mov
in
sbb
cmp
es
dec
lea
push
lea
push
sti
(bad)
loopne
or
call
es
adc
aam
loopne
adc
and
(bad)
(bad)
stc
inc
and
push
test
jmp
call
add
bnd
inc
add
add
add
repz
xor
add
add
jmp
repnz
pop
push
cmp
inc
ins
les
repz
add
sbb
lahf
clc
xchg
jns
jl
inc
es
push
int
mov
ins
mov
aas
retf
cmpps
add
iret
mov
fsub
push
cs
pop
cli
aas
sbb
rcr
test
test
dec
pusha
cli
je
add
cli
aam
inc
inc
jmp
cmp
mov
mov
clc
jae
xor
dec
dec
mov
pop
xchg
dec
cmp
shl
sahf
and
sub
pop
je
js
rol
push
pop
cli
bound
mov
pop
je
adc
pop
jecxz
je
xor
stc
gs
sti
add
cmc
adc
mov
add
bound
outs
inc
jg
jae
xor
adc
inc
xor
sti
push
cmc
jne
mov
cmc
adc
aam
call
ret
dec
mov
or
aas
inc
out
inc
sbb
je
sbb
mov
leave
add
add
lds
enter
dec
inc
test
sti
inc
or
mov
or
inc
cmp
fidiv
imul
mov
lods
shl
push
mov
and
push
or
ss
cmp
cmc
aas
es
jae
mov
add
jmp
add
sub
adc
push
sar
add
mov
jb
stc
mov
arpl
sti
mov
jns
add
mov
or
push
popf
cmp
movs
les
fmul
push
cmp
push
push
xor
dec
jns
cs
inc
lods
pop
dec
mov
pop
cmp
mov
es
call
stos
fsub
cmp
fucom
sub
sub
lahf
mov
popa
stc
inc
inc
fs
mov
mov
loopne
lea
icebp
push
es
test
mov
mov
mov
lods
not
cmp
pop
pop
or
xlat
push
lea
pop
retf
add
icebp
add
(bad)
push
loop
pop
popa
dec
dec
shl
sbb
pop
xor
jmp
add
mov
sti
mov
(bad)
aaa
ins
sti
in
test
cs
ret
inc
lea
call
cli
fdivr
xor
movs
iret
cli
jmp
test
scas
xor
rcr
leave
inc
mov
mov
xchg
push
push
aaa
mov
and
rcl
add
jne
jbe
cmp
or
jnp
ret
enter
lahf
push
pop
cld
sbb
mov
inc
sub
lods
jle
repz
add
or
push
cld
pop
dec
aas
or
into
popf
xchg
add
xchg
add
add
pop
idiv
push
cmp
inc
aas
mov
inc
mov
movs
xor
icebp
ja
jne
mov
test
clc
push
push
mov
cld
mov
std
jmp
pop
xchg
and
rol
lods
pop
mov
inc
and
xchg
fild
push
mov
push
or
out
push
xchg
cmps
cmps
mov
sar
sbb
add
cmps
mov
jae
sub
test
(bad)
(bad)
das
pushf
(bad)
out
cld
inc
fiadd
add
add
pop
rol
cmp
add
mov
pop
(bad)
gs
ds
mov
dec
push
xor
(bad)
and
mov
dec
cmp
jmp
add
pushf
sti
inc
mov
mov
add
(bad)
and
mov
mov
add
add
add
bound
mov
inc
mov
dec
adc
jmp
add
mov
mov
jmp
sbb
inc
mov
add
xchg
ret
sub
movs
repz
gs
lahf
imul
xor
ret
sub
movs
out
fsub
lahf
dec
fimul
add
out
aaa
inc
jmp
and
inc
lahf
sub
or
inc
jmp
and
inc
lahf
or
add
aaa
inc
jmp
and
inc
lahf
jmp
sbb
inc
jmp
sub
lahf
or
add
sahf
add
lds
pusha
sti
add
mov
outs
adc
dec
lds
mov
mov
outs
or
push
jl
mov
mov
sahf
imul
(bad)
mov
mov
fisub
(bad)
in
(bad)
mov
mov
out
dec
push
inc
dec
in
lds
or
add
es
popa
out
arpl
add
ss
add
pop
sar
mov
popa
psubsb
add
xchg
dec
ds
jp
ds
xchg
adc
popa
das
loopne
add
bnd
add
mov
popa
dec
call
imul
ds
popa
outs
pusha
cdq
(bad)
mov
(bad)
add
add
es
lahf
push
out
popa
(bad)
mov
test
mov
addr16
test
inc
mov
mov
add
data16
and
inc
cmps
mov
cmp
and
sub
and
out
jmp
call
test
pop
xchg
inc
mov
xlat
fsubr
mov
xchg
cwd
and
call
inc
es
cmp
push
mov
enter
cli
mov
and
fs
push
dec
jne
ds
or
stos
aas
cmps
jecxz
call
jae
(bad)
(bad)
cmp
out
add
dec
xor
out
add
and
loope
add
add
or
jle
inc
ret
sub
pop
sbb
jae
icebp
mov
push
and
sbb
sti
mov
mov
push
test
rol
rcl
and
ins
cmp
push
sub
popa
mov
leave
rcr
jl
dec
cli
jae
stos
outs
and
adc
cmp
fs
sub
xchg
xchg
inc
and
or
mov
lea
cmc
and
jg
push
mov
sub
mov
xor
add
inc
add
ret
inc
iret
retf
inc
inc
add
mov
inc
or
int3
inc
pop
test
add
lahf
dec
(bad)
inc
(bad)
jo
cmp
cmp
es
mov
add
jge
(bad)
jl
(bad)
add
add
fs
dec
mov
jnp
arpl
sub
lds
or
cld
sbb
fwait
add
sbb
or
ds
movs
push
movs
mov
jne
cdq
add
cld
sbb
(bad)
rcl
(bad)
cmp
gs
fcomp
movups
addr16
(bad)
in
cvttps2pi
mov
in
std
out
add
add
fwait
add
inc
add
ins
movs
add
xchg
mov
sub
inc
sub
push
ins
movs
add
inc
mov
fisub
mov
pop
sbb
jmp
xchg
repz
sbb
cmp
xchg
jmp
mov
inc
inc
(bad)
sti
add
stos
daa
mov
add
fild
jmp
xchg
sbb
inc
ficomp
sbb
lea
jmp
stc
je
sub
add
and
push
add
and
jno
jmp
in
bound
jno
jmp
in
jg
push
push
shr
test
mov
shl
jo
fisubr
sub
cli
cld
std
cmp
movs
pop
clc
mov
inc
add
pop
je
mov
sub
addr16
jno
add
add
cmc
mov
add
int3
inc
mov
inc
jg
jne
cdq
lock
int3
inc
dec
(bad)
jp
or
jg
cmp
adc
loop
push
scas
cmc
test
xor
sub
inc
dec
inc
mov
add
cmp
ds
adc
inc
loopne
fidivr
mov
push
cld
mov
sbb
sbb
mov
sbb
add
repnz
push
call
dec
sub
es
es
sub
cmp
aas
lods
es
call
fimul
add
xchg
adc
imul
sub
cmps
add
push
sbb
sbb
add
sbb
(bad)
gs
lea
mov
add
stos
mov
repnz
dec
movs
ret
mov
js
out
fucomip
sbb
gs
jmp
imul
inc
adc
and
or
ins
movs
add
add
pop
stos
add
jl
pusha
cmp
jle
mov
hlt
inc
fucomi
and
jl
push
pop
xor
mov
loope
je
fnstcw
xor
xlat
cmps
shr
popa
sub
test
dec
test
xchg
repz
sahf
jmp
call
jl
add
add
inc
out
test
pop
mov
mov
jb
mov
pusha
inc
jae
hlt
dec
fisubr
jge
inc
jmp
call
dec
mov
call
pop
fsubr
and
add
push
and
stos
and
pop
push
sub
stos
adc
das
mov
retf
pop
aad
mov
add
daa
test
push
adc
imul
ret
mov
xchg
call
ins
jmp
add
aad
or
clc
push
dec
pop
hlt
push
(bad)
icebp
add
(bad)
jl
jge
mov
lods
shl
cmp
iret
inc
jns
jnp
sti
mov
rol
or
dec
je
ret
test
mov
add
jns
in
int3
jecxz
push
nop
mov
inc
in
jge
(bad)
cmp
not
add
add
inc
add
fadd
inc
add
adc
jne
iret
jl
(bad)
push
enter
enter
enter
les
test
add
aad
popf
outs
jbe
sahf
adc
xchg
test
xor
test
es
mov
add
add
jbe
data16
lock
cld
imul
test
(bad)
(bad)
mov
aad
dec
inc
and
adc
sub
sbb
test
aas
es
or
bound
rcr
ret
mov
call
push
push
fld
jns
les
(bad)
leave
mov
add
add
mov
hlt
sti
test
cmovns
inc
mov
mov
mov
or
jbe
lds
(bad)
repnz
sub
iret
cdq
or
sub
jl
jbe
aaa
mov
mov
vpcmpeqd
popf
mov
inc
dec
(bad)
sub
gs
xchg
jne
dec
imul
ss
mov
pusha
outs
sbb
ins
cwde
or
lods
cmp
inc
data16
cmps
mov
cmp
enter
int
jno
rol
cmc
cmp
pop
dec
shl
jg
(bad)
fidivr
pop
xor
add
rol
xor
jg
ins
out
xor
daa
inc
add
xchg
(bad)
push
jb
xchg
dec
ins
out
cmp
adc
loope
inc
jmp
scas
xchg
jb
inc
addr16
in
cmps
add
mov
sbb
push
call
mov
(bad)
call
mov
sar
add
ja
push
xchg
mov
mov
or
push
add
fdiv
(bad)
jp
div
jae
jmp
sbb
lea
add
add
xchg
cmp
pop
push
push
lods
js
(bad)
mov
jae
jmp
push
shl
add
mov
std
sbb
inc
or
mov
or
jns
daa
leave
in
inc
jae
mov
mov
jmp
xor
add
sub
mov
inc
jne
xor
jg
adc
(bad)
fwait
repz
adc
add
add
retf
add
sar
or
and
cwde
mov
cmp
scas
sti
iret
add
outs
enter
cmp
xchg
push
sub
mov
(bad)
aam
inc
sbb
out
xchg
pushf
sub
mov
sbb
dec
inc
mov
jo
pop
call
push
mov
in
and
daa
das
leave
repnz
retf
inc
mov
(bad)
cs
inc
sbb
xchg
xchg
adc
pushf
sub
jge
adc
dec
cmp
test
iret
mov
repnz
call
ins
in
cmp
cdq
add
pop
push
daa
xchg
mov
rol
jle
and
out
pop
inc
cmp
cmp
shl
inc
ret
out
jb
bound
out
add
das
sub
mov
cmp
xchg
ret
xor
inc
xor
ret
sbb
cli
push
fcom
test
ss
stc
movs
popf
lea
sub
outs
out
pop
push
pop
xchg
clc
mov
or
mov
inc
jne
or
jb
mov
or
mov
cmp
imul
jnp
cmp
stc
jne
mov
or
jnp
sub
(bad)
idiv
cmp
inc
or
jnp
cmp
ret
clc
dec
or
out
jae
call
add
add
mov
mov
push
mov
adc
in
std
xchg
mov
jmp
lds
clc
inc
imul
xchg
jnp
dec
jle
std
jmp
add
push
push
pushf
inc
lods
repnz
jae
xchg
cmp
loop
xchg
fld
(bad)
rcl
push
lods
(bad)
jle
sub
das
push
stos
mov
sub
adc
pop
add
inc
sar
xor
inc
mov
es
fndisi(8087
and
mov
xchg
outs
les
push
mov
daa
(bad)
lds
mul
cmp
sbb
les
mov
std
inc
dec
jnp
jae
inc
es
add
mov
dec
out
je
vmread
inc
out
mov
cmp
mov
lock
data16
stos
add
inc
push
mov
(bad)
lods
jg
stos
clc
ins
test
inc
out
jmp
aad
inc
xchg
sbb
xor
pop
sbb
ins
repnz
callw
add
push
xchg
stc
hlt
loope
inc
jmp
shl
gs
pop
call
je
rcl
cmp
aam
add
push
xor
call
or
icebp
or
inc
mov
pop
(bad)
mov
inc
push
add
add
jl
ror
pop
cmc
inc
imul
dec
stos
or
or
bswap
jp
push
mov
add
punpckhwd
sti
(bad)
mov
add
lock
add
inc
cmp
cmp
mov
mov
je
inc
test
cwde
mov
cmc
jne
mov
ficom
iret
inc
xor
jnp
dec
push
div
inc
std
jb
jbe
test
daa
sub
std
adc
xor
sbb
push
jmp
cmp
sub
call
jmp
popa
out
inc
out
push
cmp
add
pop
das
mov
xchg
inc
lahf
out
jg
xor
shr
or
add
add
cwde
inc
jecxz
mov
std
out
pop
(bad)
dec
push
cwde
test
mov
xchg
nop
test
ins
jp
inc
fwait
and
dec
add
inc
pusha
inc
jmp
mov
out
scas
adc
cmp
mov
xor
xchg
fwait
ds
loop
mov
leave
movs
xchg
aas
add
add
mov
out
imul
add
xor
daa
add
dec
(bad)
push
inc
jo
imul
xchg
add
test
jmp
sahf
mov
das
or
test
sub
in
mov
shr
sahf
call
gs
push
inc
add
adc
jne
jb
scas
mov
pop
hlt
adc
and
ins
mov
daa
out
cmp
aas
in
cs
test
arpl
cmp
imul
jmp
adc
and
test
jo
inc
in
jo
cli
in
test
jg
sti
dec
sub
icebp
call
adc
jg
aas
adc
xchg
mov
add
add
push
add
ds
inc
ret
(bad)
cmp
dec
sub
add
jg
ds
add
sbb
dec
add
inc
cmc
adc
xchg
mov
add
dec
push
dec
add
mov
adc
inc
add
and
mov
add
es
jmp
jmp
(bad)
cmp
sbb
(bad)
cli
cs
dec
sbb
mov
es
mov
add
sbb
jg
loopne
inc
add
cmps
lds
ins
pushf
add
es
add
sbb
or
and
sbb
popa
fstp
(bad)
ins
fstp
(bad)
jns
cmp
add
add
jp
xor
adc
stos
ror
inc
adc
add
add
xor
out
es
xchg
mov
xor
sbb
test
or
add
aas
arpl
rol
inc
dec
inc
pop
inc
mov
enter
inc
cmps
xchg
jnp
cdq
cld
in
jbe
pop
add
push
pop
add
jecxz
push
push
cmp
imul
add
(bad)
in
mov
inc
pop
add
in
dec
mov
cwde
adc
and
shl
mov
add
and
jb
(bad)
mov
xor
lds
dec
mov
cmps
add
or
cmp
sbb
(bad)
and
test
mov
enter
xchg
mov
jno
add
mov
cli
fisubr
inc
and
aam
bound
push
and
xchg
scas
neg
pushf
pop
ret
push
pop
push
add
inc
adc
cmovs
and
push
adc
adc
mov
push
add
jg
std
(bad)
mov
or
push
ror
push
push
ret
push
(bad)
sti
loope
push
inc
dec
(bad)
fist
add
aas
scas
adc
dec
add
imul
add
test
aaa
add
xchg
pop
loop
xlat
scas
fsin
es
inc
mov
popf
pop
adc
xchg
sub
jmp
mov
(bad)
push
cmp
xchg
cmc
jmp
stos
fdivr
or
mov
out
sub
icebp
ds
cmps
clc
and
mov
cli
repnz
adc
cli
dec
adc
sbb
adc
fs
push
popf
jo
jecxz
mov
or
in
xor
or
dec
test
(bad)
jmp
call
es
out
jp
ficom
cmps
pop
daa
add
sub
jl
enter
inc
iretw
add
push
xchg
inc
(bad)
pop
scas
mov
adc
add
(bad)
cmps
std
add
push
pop
pop
out
imul
adc
hlt
sub
or
adc
inc
pusha
fild
cmps
cmp
xlat
(bad)
jge
punpcklbw
inc
xor
dec
hlt
out
es
mov
mov
adc
mov
cmps
add
cmp
add
sti
jge
out
xor
adc
sub
pop
or
pop
adc
sub
push
dec
mov
adc
sub
test
pusha
adc
sub
mov
and
push
adc
data16
popw
lods
adc
and
cmp
and
pushaw
sbb
sbb
test
ins
jmp
and
and
sti
scas
ins
and
pop
cli
aas
inc
push
mov
test
add
shr
adc
repnz
push
inc
mov
adc
idiv
(bad)
mov
push
call
add
loope
mov
leave
shl
add
(bad)
push
aas
xchg
mov
fmul
xchg
xchg
call
jmp
scas
xor
es
jmp
xor
adc
ja
inc
dec
ret
or
pop
xor
push
mov
movs
call
push
add
add
es
sub
mov
add
arpl
das
sub
ret
stos
pop
cwde
cli
sbb
jns
push
dec
ja
jmp
je
xchg
jmp
sti
cmp
or
je
or
imul
push
inc
repnz
pushf
add
add
pop
mov
add
add
add
add
fs
add
lea
push
and
shl
shl
cli
test
out
and
cmp
js
cmp
scas
mov
sub
rcr
rol
xchg
xchg
sbb
lea
in
and
call
mov
aas
cmp
out
cdq
mov
cmp
add
bound
jne
mov
push
stc
xchg
sbb
sub
adc
or
push
inc
inc
stc
fcom
inc
jmp
and
inc
and
lods
scas
or
add
frstor
push
xor
jmp
sbb
dec
std
xor
cli
xchg
sub
je
clc
dec
sub
sub
cmp
mov
add
sub
call
add
mov
and
add
je
mov
adc
call
jmp
scas
je
adc
add
cli
pop
push
inc
call
pop
ret
push
mov
cdq
add
mov
cli
add
mov
call
add
inc
add
arpl
inc
(bad)
xor
call
scas
je
cmps
int3
cmc
call
call
jnp
div
and
cs
push
xor
std
pop
repz
or
repz
push
ds
xchg
cli
adc
mov
xor
repnz
je
cs
xor
add
repnz
jmp
addr16
pop
xor
mov
adc
push
push
fisub
cli
push
lods
dec
or
push
push
es
cmp
repnz
div
outs
(bad)
adc
cmp
pop
sbb
je
dec
cmp
sbb
aad
adc
add
add
add
mov
sub
sbb
mov
ror
add
shl
adc
and
and
adc
ja
je
cmp
fsub
cmp
int
scas
out
je
movs
repz
test
inc
xor
lea
in
and
push
mov
pop
and
je
das
outs
and
and
shr
stc
mov
sbb
xor
scas
sbb
inc
push
push
push
cmp
stc
pushf
sub
test
cmps
clc
out
jmp
add
stos
and
xor
or
adc
push
sub
or
add
sub
js
scas
mov
sub
xchg
adc
je
adc
adc
adc
sub
push
or
ret
xor
push
cmp
ret
cmp
jg
jae
cmps
mov
inc
dec
jge
add
xchg
cmp
ret
pusha
adc
inc
in
fadd
out
shl
adc
push
mov
retf
ror
cmp
add
inc
sbb
je
jg
sbb
add
add
ins
xor
imul
rcl
bound
arpl
jle
pop
push
jecxz
add
add
mov
pop
sbb
std
pop
pop
outs
add
sti
movs
pop
jle
inc
jbe
push
imul
and
loope
call
stos
ins
icebp
and
cmp
and
push
outs
cli
stos
ins
icebp
adc
add
add
mov
aam
sbb
cli
lahf
outs
push
mov
aad
daa
arpl
push
mov
add
cmp
movs
or
ds
jmp
mov
sub
or
inc
arpl
ins
jp
push
xor
cdq
enter
jg
outs
and
test
jp
mov
jl
inc
jnp
sti
ins
mov
add
add
ds
and
sub
test
rcr
in
jnp
add
inc
add
imul
cwde
mov
xchg
cmp
add
sbb
bound
test
in
shl
cmps
neg
scas
add
(bad)
dec
cdq
aam
jns
ss
mov
iret
inc
mov
pop
cmp
fsub
pop
mov
inc
add
add
add
sub
push
repz
fbld
dec
add
adc
dec
mov
retf
ds
adc
int
stos
es
sbb
fld
in
ret
lods
xor
stos
add
out
inc
push
out
cmp
adc
sub
adc
dec
add
dec
push
sbb
(bad)
cli
pop
div
cmp
adc
mov
jne
popf
mov
add
pop
ret
dec
push
add
loope
jg
add
cmps
cmp
retf
pop
scas
mov
sub
mov
mov
xlat
mov
add
add
not
mov
add
dec
std
sub
movs
adc
inc
push
push
or
and
jo
js
je
es
cli
cmp
cmps
(bad)
mov
pop
add
es
jno
sub
add
sub
call
or
iret
addr16
out
(bad)
jmp
jmp
in
std
cli
shl
cli
fsubr
imul
mov
test
xor
sub
rol
add
add
ror
cmc
add
sub
sbb
xor
js
mov
inc
out
es
or
mov
mov
push
call
jg
sbb
ins
lods
jae
(bad)
sub
es
std
(bad)
test
xchg
cwde
adc
mov
cld
xor
pusha
outs
pop
push
call
add
jae
pop
bound
cmps
add
xchg
test
push
shl
push
and
inc
into
cmps
add
std
mov
bound
sub
inc
add
imul
jp
push
out
dec
movaps
lds
neg
adc
sbb
sbb
or
and
dec
push
xchg
fwait
inc
stc
mov
adc
rcr
lea
jnp
stc
aam
cmp
cmps
adc
rol
xchg
dec
mov
jnp
xor
inc
add
jae
sbb
(bad)
repnz
sbb
stc
hlt
cmc
xor
pinsrw
cmp
add
mul
mov
out
ror
inc
pushf
stc
inc
add
add
sub
push
test
sbb
inc
add
fwait
inc
cld
dec
popf
inc
or
div
lahf
jl
clc
xor
shl
inc
retf
ret
push
inc
inc
clc
mov
inc
add
ret
out
je
pushf
inc
add
pop
loope
movs
test
test
and
push
es
frstor
jb
mov
jle
and
dec
into
xchg
out
pop
pop
push
jp
test
cli
lock
mov
ror
enter
push
lods
leave
sub
pop
int
ins
pop
fdivr
sub
fiadd
(bad)
sub
jmp
test
addr16
xor
adc
cmps
gs
mov
and
add
rcr
shl
inc
(bad)
data16
scas
inc
lods
outs
push
pop
xchg
lock
js
sub
xor
adc
sbb
std
xor
push
inc
mov
daa
inc
out
jne
sub
imul
pop
jo
xchg
fild
mov
ret
mov
into
sub
lock
xor
daa
sbb
sbb
enter
jae
out
jne
jp
loop
daa
add
add
push
test
daa
aam
dec
dec
mov
ret
inc
add
outs
dec
mov
push
xor
test
jle
or
stc
dec
call
jae
push
pop
mov
fadd
in
push
xor
neg
je
pop
nop
in
rcr
je
mov
inc
in
fisub
(bad)
stc
push
push
je
sbb
cli
sbb
and
lea
push
test
cmc
rol
das
and
sub
lods
call
mov
loop
add
stos
je
xlat
inc
mov
pop
mov
leave
ret
push
mov
not
(bad)
call
iret
inc
xchg
call
mov
inc
push
xor
mov
cli
mov
shl
std
movsx
jo
fcom
dec
inc
cmc
adc
adc
test
sub
dec
push
loope
push
add
stc
mov
not
retf
push
aam
idiv
or
cmp
imul
push
dec
xchg
xchg
cli
xor
(bad)
xor
std
xchg
add
add
inc
enter
jmp
stos
(bad)
es
jbe
jle
mov
sti
push
ret
std
gs
icebp
pop
(bad)
cmp
jns
cli
sbb
push
inc
es
gs
inc
jne
stos
ins
lock
cdq
xchg
test
mov
push
or
arpl
dec
jle
sub
setge
test
add
sub
and
outs
aas
adc
ja
cmp
dec
out
mov
sbb
int
push
fwait
adc
mov
bound
mov
idiv
nop
out
data16
shl
sub
lods
addr16
pop
jmp
sbb
out
cld
retf
inc
add
out
add
pusha
fwait
lods
push
outs
ins
mov
sub
mov
add
ja
pop
sti
aas
pop
cmp
mov
add
push
push
jno
push
jne
jge
rcl
mov
ret
(bad)
sti
mov
mov
add
enter
sbb
sbb
jmp
std
sbb
ins
push
pop
(bad)
sbb
test
enter
ds
fsubr
mov
inc
pop
sbb
sub
rol
cld
push
dec
mov
dec
push
scas
sub
push
sub
sbb
cmp
or
or
test
jp
jle
adc
push
push
or
add
fsub
idiv
sub
push
pop
test
adc
push
sub
ins
add
js
add
push
movs
adc
lea
add
add
pushf
dec
(bad)
ret
push
lahf
je
inc
(bad)
cmc
push
pushf
cmp
rol
cli
jmp
ins
and
cmc
push
cmp
in
push
push
sbb
push
dec
xchg
mov
xchg
mov
pop
push
sar
add
xor
inc
sub
(bad)
inc
test
data16
jle
jb
dec
shl
add
sbb
std
gs
div
(bad)
cli
jbe
xlat
or
mov
sti
lock
je
cmp
or
(bad)
fdiv
popf
call
sub
mov
add
imul
dec
mov
adc
add
bt
rol
cmp
inc
mov
ins
fmul
mov
pop
push
in
add
mov
pop
ret
push
sub
mov
adc
add
jp
adc
inc
mov
and
outs
cmps
pop
fadd
inc
mov
je
pop
xchg
pop
loop
xchg
inc
out
cmps
adc
es
jmp
jo
mov
xchg
hlt
adc
xchg
in
test
cwde
repz
mov
add
add
sub
cld
mov
cli
xchg
or
cmp
push
or
ins
adc
sti
push
inc
call
(bad)
cmp
ss
(bad)
or
ins
addr16
fs
fmul
test
fisubr
bound
ss
jo
inc
sub
add
add
xor
out
inc
test
out
push
mov
adc
sbb
pop
push
lea
add
mov
cli
mov
jns
push
popf
stos
push
mov
cmp
mov
jne
ret
jg
into
or
add
mov
xor
jmp
mov
add
inc
movs
add
sub
stc
add
mov
adc
mov
sbb
mov
inc
sub
cmps
(bad)
stc
(bad)
mov
mov
dec
push
or
es
pop
aam
(bad)
sub
std
cli
sbb
jle
xor
pop
aam
push
call
push
adc
jg
dec
bound
xchg
jo
daa
sbb
dec
adc
add
add
push
rol
test
pop
cli
cmp
jmp
push
adc
jb
(bad)
or
lahf
cmps
add
pop
out
or
jl
xchg
jl
in
adc
pop
push
stos
mov
scas
xchg
inc
aaa
xchg
push
aaa
ins
xchg
mov
pop
xor
clc
mov
cmp
xor
mov
xchg
fistp
xchg
cld
ret
add
pop
cmp
imul
sbb
ret
movs
pop
movlps
sbb
dec
ret
dec
iret
aaa
mov
repz
in
inc
sbb
(bad)
inc
call
nop
add
sub
pop
in
xchg
fisttp
jbe
pop
mov
cmp
xchg
pushf
stc
call
ins
push
cmp
add
add
sar
es
sub
je
aaa
dec
sbb
dec
lock
xor
mov
bound
jmp
add
xchg
pop
mov
outs
jo
in
into
dec
sbb
push
jne
fadd
adc
jnp
aaa
add
pop
dec
or
ss
cmp
mov
sub
add
add
rol
arpl
add
cli
(bad)
push
cmp
mov
cmps
dec
jo
pop
jbe
std
push
(bad)
cmp
clc
imul
pop
out
je
cdq
into
mov
jo
not
ja
and
inc
je
xor
add
into
mov
in
ror
enter
in
je
les
jne
add
add
jo
adc
add
push
addr16
(bad)
(bad)
mov
jbe
push
rcr
je
jmp
setnp
ror
repnz
xor
std
jle
es
inc
push
nop
inc
pop
test
loopne
test
ror
mov
mov
(bad)
fidivr
jmp
inc
xchg
dec
mov
sbb
aas
es
int3
in
mov
scas
fs
cwde
pop
punpckldq
jnp
bound
mov
and
scas
stos
mov
cmp
out
aas
es
inc
or
mov
mov
adc
int
cwde
or
or
shl
mov
jecxz
and
fcomip
cmp
mov
mov
cmp
add
jecxz
adc
sar
sbb
add
std
movs
repz
add
inc
push
lahf
lds
add
jb
mov
mov
push
cmps
sub
pop
push
clc
or
push
xchg
cs
pushf
into
or
push
out
add
scas
dec
add
mov
sar
call
xchg
pop
or
jmp
pop
ret
push
xchg
or
(bad)
adc
out
mov
inc
xor
or
mov
aam
adc
and
push
iret
or
test
jp
(bad)
push
dec
test
cmp
sahf
fistp
sub
xor
sub
bound
mov
add
ins
aaa
and
ins
xor
add
add
inc
add
jge
and
lock
(bad)
and
add
mov
cmp
mov
add
inc
sbb
add
sbb
sbb
cmp
pop
mov
aad
sbb
imul
cmp
test
cmp
sbb
sar
add
in
mov
ror
es
pop
data16
test
ret
xor
adc
and
jmp
adc
pop
into
cmps
cli
rcr
stc
cs
stc
or
cld
xchg
addr16
fisubr
(bad)
das
xchg
sub
pop
movs
loopne
sti
rep
cli
push
sbb
movs
fdivrp
gs
sub
cli
sbb
adc
pop
stc
cmp
add
inc
out
pop
(bad)
loope
xchg
xor
adc
pop
cmc
push
or
sub
push
sub
mov
ds
(bad)
out
es
es
cmps
push
push
cmp
lock
cmps
add
add
add
pop
sti
pop
imul
shl
mov
or
push
aad
sub
xchg
outs
xchg
lock
or
iret
sub
cmc
or
scas
add
fmul
pop
arpl
ins
pop
sub
inc
push
jb
jae
mov
clts
push
shr
pushf
add
and
or
test
and
add
add
jo
out
push
push
mov
in
test
fldcw
je
nop
dec
(bad)
out
mov
es
rcl
ret
add
and
aad
stc
aam
xor
jmp
push
push
push
je
ds
sahf
pop
inc
push
xchg
jo
stc
hlt
cdq
cmp
aas
test
or
je
mov
jmp
sbb
jg
inc
dec
inc
add
add
adc
push
add
(bad)
sar
cmc
adc
std
adc
je
add
sub
inc
add
sbb
dec
sub
xor
xlat
not
jmp
ret
add
xor
mov
pop
sbb
add
adc
add
sub
(bad)
jb
add
add
jmp
data16
inc
sar
es
ror
daa
sbb
mov
jb
cli
sbb
add
call
push
push
push
dec
jmp
cmp
mov
sbb
jg
sbb
gs
sar
daa
ret
std
jmp
fisttp
sbb
idiv
xor
add
sahf
cmc
xlat
or
call
sbb
ins
cwde
or
pop
fdiv
cmp
ins
cs
and
inc
adc
xchg
hlt
and
ins
mov
imul
pop
add
inc
pop
stc
inc
push
cmps
add
push
add
inc
mov
mov
xor
imul
inc
pop
or
inc
out
call
add
add
int3
add
sub
das
pop
dec
popa
shr
add
mov
jns
pop
xor
add
add
inc
mov
fcom
ret
jae
pop
cmp
js
cs
jmp
add
and
repz
sbb
mov
dec
mov
and
xor
dec
jge
inc
jns
(bad)
test
add
out
inc
sub
add
shr
shl
or
lods
xchg
cs
je
fs
in
xchg
sahf
hlt
jae
dec
clc
or
das
cmp
ror
icebp
pop
js
dec
mov
sti
sub
out
push
dec
add
cli
and
or
pop
fimul
inc
jg
mov
je
in
test
cmp
pusha
mov
mov
add
add
add
mov
mov
add
mov
icebp
and
dec
push
je
dec
(bad)
retf
sub
push
addr16
mov
and
inc
add
pop
not
inc
cwde
jp
rcr
lea
sub
pop
sub
sbb
stos
stos
shl
fwait
outs
and
jmp
dec
shl
and
add
add
pop
pop
inc
push
out
icebp
mov
jmp
jae
js
and
shl
cmp
add
(bad)
xchg
jp
and
add
es
repz
es
push
adc
sbb
std
jmp
mov
mov
xlat
aaa
stos
std
test
loope
xchg
out
jl
push
cs
jmp
int3
cwde
stc
push
sub
out
aad
iret
jmp
add
fldcw
sub
inc
mov
imul
xchg
mov
mov
cmps
scas
rol
ret
jp
pop
je
jle
xchg
or
jmp
test
lsl
jmp
mov
xor
cmps
add
pop
sbb
add
add
in
fst
movs
repz
(bad)
jl
mov
inc
pop
lahf
mov
or
jl
mov
(bad)
dec
(bad)
outs
inc
stc
hlt
imul
in
inc
in
dec
inc
push
push
mov
stc
sbb
cli
jae
call
popf
push
sub
dec
add
jns
fs
das
add
and
nop
adc
mul
mov
and
popa
sar
jl
and
cs
dec
push
(bad)
stc
xchg
cdq
mov
out
test
(bad)
sbb
fs
test
cmps
jmp
mov
inc
add
inc
sub
jbe
add
(bad)
cwde
inc
or
sbb
pop
or
mov
add
xchg
jnp
call
mov
cmp
or
push
push
cmps
xchg
(bad)
mov
add
dec
ja
jmp
js
mov
jmp
xchg
jle
in
ja
stc
(bad)
call
add
nop
retf
push
lahf
cmp
stos
std
ss
jmp
xchg
sub
es
test
jo
cmp
out
dec
xor
add
add
sar
sub
ds
mov
(bad)
jmp
js
dec
mov
jmp
test
sub
es
sbb
and
fisub
mov
cli
lock
mov
dec
xor
pop
sar
fisubr
ds
fnstcw
fadd
out
and
and
int3
mov
add
add
and
adc
mov
xlat
sbb
lods
mov
and
and
mov
pop
mov
cmps
stos
fcomp
push
jg
rol
repz
mov
sbb
mov
dec
inc
xor
cmp
jg
addr16
push
sar
call
jo
gs
jp
iret
imul
add
fild
add
pop
jecxz
adc
cmp
repz
test
(bad)
stc
dec
push
sbb
jmp
pop
(bad)
(bad)
pop
aas
add
out
stos
dec
sbb
jmp
sub
outs
xchg
mov
push
stos
pop
sub
sub
(bad)
stc
rcl
sub
mov
daa
fisubr
sub
rcr
dec
inc
stc
gs
dec
dec
sbb
daa
fisubr
sub
xor
adc
ds
ror
cli
pop
mov
pop
sub
add
mov
out
jg
push
(bad)
sti
(bad)
call
push
mov
call
test
adc
xor
call
xchg
inc
call
test
out
mov
add
jnp
std
jo
dec
push
mov
pop
push
cli
mov
mov
inc
add
add
mov
test
aas
add
add
test
xchg
add
inc
out
inc
inc
inc
dec
push
cmp
jge
cmovbe
xor
fild
jmp
or
(bad)
sub
icebp
add
mov
mov
neg
and
pop
inc
mov
mov
dec
mov
stos
mov
push
xor
cwde
sbb
mov
dec
cli
(bad)
cmp
add
data16
out
cli
xor
es
jp
pop
mov
popf
or
mov
cs
cld
addr16
inc
sub
lods
ins
mov
inc
out
sub
les
out
not
and
(bad)
stc
inc
mov
sub
inc
inc
clc
loope
mov
mov
cmp
out
push
adc
xchg
call
pusha
daa
xor
jmp
add
xchg
daa
add
retf
push
test
fst
pop
xchg
mov
ret
push
stc
hlt
mov
test
and
inc
push
(bad)
cmp
cs
jp
jg
add
mov
int3
stos
and
inc
test
or
(bad)
icebp
mov
stc
ds
int
aaa
imul
std
xchg
xchg
push
bound
rol
mov
and
stc
stc
cmp
pop
(bad)
loopne
shl
mov
stos
push
dec
sub
mov
stc
stc
jo
inc
add
fidivr
mov
bound
sub
leave
add
mov
dec
jg
cwde
inc
cli
cmp
not
sbb
push
cmc
aas
push
lea
mov
inc
sub
adc
std
add
mov
ret
mov
dec
lea
jle
test
mov
dec
hlt
cmp
add
cmc
mov
dec
inc
add
add
jnp
clc
cld
xchg
je
fiadd
je
push
rcl
push
(bad)
data16
jnp
enter
lea
push
pop
pop
inc
mov
inc
cli
and
xlat
pop
sbb
xchg
clc
stos
std
mov
jnp
ds
shr
aas
fucomp
fsubr
pop
stos
std
cli
xor
out
aas
es
jae
jb
out
cmp
int
xadd
sub
add
jmp
icebp
jl
add
mov
push
lods
inc
inc
sub
std
dec
ror
xlat
lods
mov
loop
fs
and
and
cmp
daa
add
jmp
dec
sub
arpl
cmp
call
add
dec
out
cld
dec
add
cmp
xlat
and
test
movs
fadd
fldenv
outs
out
or
(bad)
loopne
cmps
add
push
mov
retf
iret
sbb
mov
in
test
stos
sub
daa
add
or
out
push
(bad)
and
xor
jmp
popa
hlt
cli
hlt
fisttp
jmp
std
push
test
add
add
rol
stos
cmp
cld
add
pop
inc
loope
cli
hlt
stc
push
inc
jmp
jmp
out
jmp
stc
out
stc
add
cld
es
push
gs
je
and
push
add
xor
in
stc
aam
push
inc
jmp
sub
cmc
pop
push
retf
add
add
push
adc
std
mov
push
cmc
inc
or
mov
push
xor
jb
mov
sahf
dec
add
cmp
jge
ret
add
test
inc
or
mov
out
fild
outs
or
stos
test
call
xor
dec
push
test
test
call
or
or
mov
idiv
and
mov
aad
push
xchg
mov
sub
xor
cmp
add
pop
xlat
mov
fsub
mov
and
cli
popf
pop
add
(bad)
cld
and
std
push
adc
add
push
add
add
fisttp
outs
mov
mov
add
add
or
cmp
movs
push
loopne
std
cli
adc
adc
es
mov
pop
sti
cmp
adc
es
mov
lock
loop
sub
add
cli
xor
retf
add
mov
push
add
mov
call
mov
mov
retf
and
rcr
ret
popa
push
inc
pop
mov
add
and
inc
inc
dec
scas
(bad)
loopne
out
inc
sbb
les
ja
mov
ror
jbe
sub
xchg
dec
inc
jg
iret
test
inc
cmp
ret
cdq
mov
je
mov
push
or
pop
comiss
idiv
adc
xor
add
in
(bad)
stos
sbb
or
xchg
dec
bound
cmp
sub
adc
adc
ss
push
outs
out
stc
jmp
xchg
mov
mov
lods
nop
stc
rcr
jmp
bound
das
out
jmp
movs
unpckhps
fidivr
push
add
dec
mov
fs
fimul
add
add
add
dec
push
xor
iret
test
das
dec
mov
and
xor
or
bound
cld
icebp
lea
xor
lock
pop
xchg
xor
idiv
shr
fld
push
in
inc
cmc
jne
push
loop
push
test
div
push
inc
jecxz
mov
sbb
sbb
jge
es
stc
arpl
cmc
pop
mov
pop
std
push
cmc
mov
icebp
fst
js
sbb
cmp
popf
pop
cmp
pop
call
pop
or
call
sbb
out
xor
sbb
aaa
mov
imul
js
shl
shl
sahf
shl
std
inc
icebp
sbb
mov
(bad)
shl
loope
and
xchg
retf
adc
retf
and
es
(bad)
cmp
(bad)
xchg
cmp
pushf
push
addr16
sub
in
repnz
in
loop
retf
add
add
or
mov
ret
pop
out
es
xchg
xchg
mov
mov
in
out
cwde
dec
cmp
daa
jl
inc
out
(bad)
pop
into
cmp
mov
imul
inc
out
cmps
mov
inc
cmp
xchg
jno
in
stc
jmp
cli
mov
(bad)
fpatan
xchg
mov
pop
xchg
jae
dec
pop
cmp
gs
test
ret
fs
pop
lahf
pop
call
add
jmp
mov
xor
stc
adc
mov
push
add
push
jbe
sub
mov
in
lods
jmp
or
stc
mov
popa
das
not
inc
mov
psrad
mov
inc
pop
outs
cdq
sti
mov
xor
and
add
retf
jne
pop
add
mov
push
aad
push
mov
lea
pop
push
mov
or
lods
add
addr16
adc
or
add
adc
add
cmp
call
inc
add
stc
or
mov
add
pop
cmp
lods
and
retf
add
je
add
add
rol
lods
sub
push
aad
add
frstor
mov
push
dec
sbb
(bad)
rol
ret
jno
(bad)
jmp
loopne
stos
test
cli
push
dec
into
dec
fwait
(bad)
xor
inc
cdq
sub
mov
or
lock
dec
push
(bad)
das
out
inc
mov
adc
aaa
daa
inc
out
popa
xchg
mov
adc
mov
cmps
add
jmp
sbb
(bad)
mov
xor
pmuludq
jmp
jl
push
add
cld
mov
hlt
mov
ins
scas
sbb
data16
push
inc
je
pop
jmp
pop
mov
cmp
add
add
add
mov
mov
add
pop
jmp
aas
jo
pop
mov
out
stc
gs
jmp
jnp
std
sbb
sar
xchg
sti
mov
mov
add
scas
or
sbb
call
jmpw
adc
out
pop
jb
mov
in
add
aas
add
je
push
inc
inc
loopne
pop
icebp
in
sub
lock
fsubr
addr16
in
stc
and
add
inc
(bad)
jmp
punpcklwd
fidivr
add
push
push
stc
dec
pop
stc
pop
mov
pop
add
iret
sbb
or
xor
xchg
push
cmc
xor
or
add
loope
cwde
xor
mov
pusha
popf
(bad)
inc
call
test
ins
or
imul
cs
imul
xlat
inc
dec
inc
(bad)
dec
or
aas
adc
es
ds
ins
mov
push
ds
es
xchg
pop
xor
sbb
test
push
sub
popf
sub
std
hlt
es
cwde
cmp
cmp
and
ss
mov
mov
pop
lods
in
daa
std
xor
pop
mov
hlt
test
cli
pop
xlat
fstp
in
jge
sub
cld
pop
cs
xchg
rcl
inc
(bad)
push
shl
call
add
add
cmp
into
or
or
fiadd
in
add
dec
or
in
es
or
mov
add
dec
addr16
inc
fs
xor
outs
out
js
inc
out
push
sbb
les
in
sub
(bad)
repnz
mov
and
out
fs
pop
es
sub
add
add
ret
add
in
shr
mov
inc
test
pop
test
cmp
or
pop
jne
hlt
add
mov
jle
cld
push
test
cmp
jae
xor
sti
in
pop
mov
jg
and
add
pop
std
(bad)
or
rol
adc
jmp
pop
xchg
call
daa
push
shl
mov
out
lock
je
mov
cli
hlt
jns
inc
jmp
and
stos
or
cmp
adc
aas
stos
add
xlat
pop
loopne
iret
mov
mov
mov
arpl
and
push
mov
ret
mov
dec
lea
pop
mov
ss
clc
inc
lds
aas
shr
in
arpl
adc
loope
ss
test
fs
dec
mov
mov
jp
mov
in
mov
idiv
sbb
add
std
call
inc
aad
sti
xor
es
mov
inc
stos
shl
in
adc
and
fild
jb
push
lea
adc
xor
je
jnp
(bad)
inc
or
add
adc
out
push
test
and
dec
add
add
push
mov
cld
jns
cmp
add
inc
dec
add
imul
mov
mov
jg
daa
inc
aam
inc
aas
int3
dec
xchg
xor
and
ret
and
xchg
xchg
push
imul
(bad)
ret
add
fadd
sub
add
mov
xchg
push
imul
loope
sbb
inc
xor
dec
pop
push
lock
xlat
jle
sub
add
inc
mov
addr16
adc
mov
and
add
arpl
jle
add
and
cmp
jmp
push
jmp
mov
adc
push
sub
iret
dec
lds
loop
cmp
inc
jmpw
data16
in
mov
jle
fdivp
in
sti
cmp
shl
xor
hlt
in
inc
jmp
shl
xchg
cmp
add
add
push
rol
nop
jmpw
cli
hlt
inc
xor
add
cdq
add
ss
mov
mov
idiv
adc
cmc
shl
add
aas
lds
dec
xor
test
dec
add
xor
pusha
jle
pop
pop
idiv
jbe
push
adc
dec
add
dec
int3
sbb
push
cmp
adc
sti
std
or
sbb
push
clc
xlat
not
or
add
cmp
iret
cmp
xchg
or
call
cmps
inc
add
(bad)
xacquire
cdq
dec
ds
add
repz
es
sub
xchg
and
in
std
jmp
in
std
out
or
cli
or
add
add
mov
and
mov
es
std
cli
xor
xor
sub
jno
xchg
popa
out
std
out
mov
cli
mov
in
std
out
sbb
cli
scas
test
or
jmp
test
inc
stos
out
je
dec
loopne
addr16
dec
inc
mov
movs
daa
out
add
inc
xchg
sbb
sub
sub
in
bnd
daa
jmp
add
add
daa
inc
aam
push
push
rol
cmp
enter
ror
and
ret
or
adc
inc
retf
sub
adc
repz
push
jmp
fdiv
add
inc
dec
(bad)
pusha
iret
stos
out
je
add
inc
outs
out
and
sbb
pop
add
fisub
sbb
sti
fnstenv
fcmovbe
mov
add
add
test
mov
dec
int
stc
imul
sbb
stc
into
pop
in
je
fiadd
pop
pop
(bad)
jecxz
fs
add
jmp
das
mov
cmc
in
mov
shl
inc
jmp
movs
fdivr
outs
cmp
adc
cmc
sub
or
add
hlt
or
pop
icebp
test
xchg
push
push
pushf
push
cmp
scas
inc
mov
add
push
std
je
jo
inc
add
cmp
pusha
ret
call
jmp
cli
loop
retf
cmp
inc
pop
and
je
movaps
dec
add
pop
lods
inc
jecxz
(bad)
add
jl
add
xchg
cmc
jl
div
adc
ja
inc
add
(bad)
ret
int
sbb
sbb
push
push
jmp
jb
add
sub
jmp
idiv
mov
xor
dec
ss
xchg
sbb
nop
sbb
inc
ror
div
(bad)
jmp
cmp
add
push
in
cli
cmp
cdq
or
fidivr
mov
xor
add
jae
adc
es
push
jl
xchg
out
mov
(bad)
div
fld
idiv
int3
mov
jg
inc
out
stos
nop
out
lods
fimul
in
fnstenv
jle
or
popf
(bad)
add
(bad)
out
cmp
enter
inc
clc
add
ror
inc
pop
es
daa
js
add
add
xor
lahf
std
(bad)
or
out
loop
pop
ja
ror
jae
fnstenv
mov
(bad)
jmp
xchg
add
inc
div
mov
sub
ja
(bad)
rcr
jae
jmp
pop
sti
in
test
xchg
xor
adc
and
fsincos
add
add
dec
rcr
int3
push
not
lods
ret
dec
push
out
mov
stc
cdq
or
adc
mov
fucomp
scas
push
stc
nop
pop
inc
add
mov
add
(bad)
fisttp
mov
sbb
es
enter
xchg
and
call
and
pop
adc
test
adc
xor
idiv
dec
pop
stc
std
push
popf
je
lods
test
mov
mov
in
(bad)
xor
add
dec
xor
cmp
test
cmp
fdiv
imul
jmp
jmp
jbe
pop
push
or
add
push
(bad)
dec
call
sbb
mov
lea
add
add
and
cmc
lods
cs
ss
fld
call
scas
cs
aaa
jnp
test
push
mov
bound
or
mov
cs
(bad)
enter
push
popf
xor
push
in
jle
xor
test
push
jmp
call
mov
mov
fsub
cli
mov
or
cli
sub
adc
add
add
in
js
pop
push
cli
ds
mov
sub
jns
bound
dec
mov
ds
ss
or
nop
mov
adc
adc
mov
std
out
data16
aam
pop
retf
sub
out
add
sub
inc
pop
shl
and
hlt
int3
mov
sbb
retf
(bad)
mov
(bad)
add
inc
arpl
aad
iret
cmp
ds
es
push
clc
inc
cmps
mov
mov
retf
mov
add
cmc
enter
je
icebp
push
fdivr
ins
bound
bound
and
xchg
and
mov
xchg
jae
dec
shl
adc
jp
(bad)
mov
add
add
push
fs
pop
or
jmp
mov
int3
or
dec
test
bound
stos
popa
fiadd
das
and
call
into
int
xor
(bad)
nop
adc
mov
pop
stc
dec
je
test
and
cmp
cmp
sub
dec
push
xchg
stc
adc
pusha
icebp
loope
push
pop
test
loope
add
dec
jne
mov
cmp
stos
bound
jge
nop
push
test
sub
loope
hlt
sbb
mov
call
sti
add
das
inc
add
les
dec
call
mov
aas
add
es
cwde
and
add
test
lods
stos
mov
mov
sub
(bad)
sub
inc
push
cld
jmp
(bad)
cli
push
add
push
cmp
mov
sbb
push
enter
jb
mov
test
(bad)
or
pop
lahf
pop
es
xchg
mov
add
dec
mov
cld
jns
adc
js
(bad)
cli
repnz
push
int3
ret
jne
push
cli
clc
fs
iret
mov
mov
jg
lahf
add
sar
mov
push
push
sub
xchg
mov
(bad)
stos
xchg
repz
fdivr
shr
stos
fpatan
add
push
retf
repz
clc
mov
mov
outs
mov
sub
add
dec
outs
inc
add
mov
and
sbb
mov
call
pushf
mov
add
cmps
fild
int
inc
add
cmp
jmp
jg
jge
and
cmp
adc
inc
into
test
aaa
enter
inc
mov
out
sbb
scas
xchg
or
inc
add
mov
add
add
into
test
(bad)
je
pop
push
and
outs
ins
call
mov
sahf
into
stc
imul
enter
inc
mov
sbb
mov
add
daa
sub
(bad)
aas
lahf
std
addr16
sar
jne
dec
call
add
add
xchg
arpl
and
rcr
movs
add
inc
aaa
jge
stos
ud0
int3
div
sahf
outs
push
push
retf
pop
leave
mov
dec
xor
jne
sahf
push
dec
mov
adc
scas
adc
repz
cmc
xor
scas
pop
rol
jnp
add
or
std
out
add
add
out
sbb
mov
pop
push
cli
and
jae
pusha
pop
and
std
(bad)
(bad)
movs
sar
add
and
pusha
mov
(bad)
(bad)
call
sub
repz
or
mov
popf
cmps
inc
inc
popf
int3
je
repz
mov
inc
lock
jb
cli
mov
push
sbb
pop
cmp
arpl
and
inc
push
(bad)
adc
xchg
cmps
iret
adc
pop
adc
mov
repnz
add
mov
shl
mov
adc
inc
xchg
xchg
aad
out
mov
ds
cwde
xor
stc
fcomi
test
into
pop
sbb
retf
sti
in
mov
je
cwde
shl
pop
jno
ins
inc
xor
push
cwde
and
add
mov
add
retf
in
(bad)
sub
inc
push
jb
dec
in
std
movs
addr16
jmp
xchg
leave
jae
mov
clc
cdq
mov
cld
cdq
or
enter
push
rol
lds
jns
add
rol
cwde
sub
xor
rol
in
cmps
adc
stc
sbb
(bad)
fadd
push
enter
div
pop
hlt
jbe
fyl2xp1
hlt
mov
jae
sbb
push
dec
sar
push
pushf
cmc
stc
aam
in
add
das
test
mov
dec
push
inc
mov
lea
inc
and
xor
clc
data16
inc
inc
xor
push
inc
or
cdq
sti
out
sub
push
mov
mov
add
add
sbb
shr
push
mov
push
mov
inc
add
mov
bnd
inc
add
mov
adc
fadd
cli
inc
add
push
lea
pusha
adc
mov
and
lea
in
adc
fiadd
test
sbb
test
pop
inc
cmp
fimul
adc
push
mov
bound
repz
push
dec
(bad)
sbb
cmp
stos
xchg
pop
cli
stc
or
adc
enter
push
lods
mov
jmp
(bad)
push
sub
xor
gs
rcr
ret
inc
fcomi
jmp
loopne
loop
jmp
hlt
sub
cs
lods
sbb
out
add
rol
add
inc
lahf
sub
cmp
sbb
sbb
mov
je
shl
out
es
aaa
mov
pop
pop
test
pop
out
jmp
retf
ins
sbb
aad
add
fs
xor
and
hlt
inc
cmp
add
add
out
jmpw
adc
jmp
mov
test
sbb
into
pop
xchg
repnz
loope
int3
xor
loope
int3
mov
outs
test
data16
sahf
jp
into
push
cmp
and
jg
(bad)
jmp
mov
pop
push
ret
inc
shl
add
add
xor
jb
push
dec
cmp
inc
cld
push
xor
stc
dec
inc
call
mov
jp
xchg
dec
mov
cld
scas
sbb
jp
xchg
dec
mov
cld
hlt
add
pop
and
or
mov
xchg
mov
push
or
inc
add
xchg
mov
add
jl
(bad)
add
push
pop
xchg
dec
mov
rol
dec
(bad)
push
sub
dec
inc
call
mov
sub
les
xlat
mov
mov
prefetcht1
mov
cli
shl
movs
sahf
stc
xchg
sbb
pop
sbb
loop
inc
call
xchg
push
test
sub
cvtps2pi
mov
push
and
jle
fidivr
(bad)
mov
ret
sbb
pop
and
xchg
push
cs
mov
and
std
jmp
and
retf
repnz
dec
pop
inc
cmp
test
aaa
aas
(bad)
enter
inc
(bad)
push
iret
(bad)
jp
jmp
ret
mov
mov
shl
das
mov
outs
push
mov
inc
and
(bad)
push
pop
ret
or
retf
sub
cmp
sub
mov
xlat
lds
pop
enter
imul
cmp
data16
or
shl
popa
fcomp
push
or
data16
and
jg
push
sub
clc
test
das
add
add
ja
sbb
sbb
jle
inc
(bad)
in
lods
inc
lods
or
mov
pop
dec
cmp
jge
mov
xchg
sub
pop
movs
or
mov
sti
adc
retf
push
mov
xchg
sub
rol
push
mov
in
(bad)
fdivr
retf
cmps
add
add
pop
add
add
out
or
icebp
pop
push
lock
mov
inc
add
jl
inc
or
mov
add
inc
add
rol
int3
push
jl
int3
push
jl
int3
call
mov
dec
push
aam
add
cmp
dec
mov
add
add
idiv
dec
inc
xchg
mov
loope
mov
stc
dec
mov
jno
iret
mov
or
aas
dec
push
add
cmp
fisttp
xchg
push
mov
scas
das
and
shr
sbb
rcr
outs
cs
lahf
xlat
adc
add
(bad)
adc
daa
sar
push
add
jmp
jp
repnz
ror
lods
fdivrp
jmp
loop
or
bound
iret
sbb
inc
sub
xchg
popa
mov
popf
dec
adc
jg
mov
xchg
stc
iret
sub
cmps
xchg
pop
es
xor
test
into
loope
fistp
jo
shr
pusha
rol
and
mov
iret
scas
out
cmp
inc
cmp
sti
cmps
mov
(bad)
(bad)
add
scas
in
pop
iret
movs
jmp
sbb
shl
dec
xor
into
mov
mov
adc
and
add
jb
into
push
push
xor
sub
enter
leave
dec
lds
aaa
adc
add
add
dec
and
les
inc
je
sahf
add
and
jmp
add
fcom
pop
lock
push
or
data16
lods
sbb
aad
mov
dec
xchg
and
add
pop
cmps
test
cmc
push
pop
mov
pop
ret
xchg
inc
in
sub
dec
push
xchg
rol
push
push
sti
dec
(bad)
push
pop
idiv
cmovbe
in
fabs
call
dec
or
test
add
xchg
mov
in
pop
dec
push
cmps
out
cmp
mov
jo
pop
pop
cmp
outs
adc
cmp
push
stc
(bad)
mov
cmp
popa
add
add
add
add
(bad)
(bad)
es
in
test
xor
sti
mov
arpl
es
std
ss
std
xchg
xchg
sbb
add
stos
std
dec
es
fistp
xlat
jl
(bad)
xor
std
add
stos
test
xchg
ins
sub
cmc
mov
jbe
xchg
adc
add
repz
jbe
xchg
and
sbb
jmp
jne
jl
inc
ds
popa
daa
cmp
sti
cmps
mov
cdq
or
lods
in
pop
int3
movs
jmp
sbb
rcr
shl
leave
cmps
cdq
xchg
retf
xor
test
repz
adc
leave
sub
pop
lock
xchg
dec
sub
cdq
jp
adc
adc
mov
pop
addr16
and
cdq
das
(bad)
dec
aam
cmps
inc
fild
and
aas
and
sub
out
and
add
pushf
dec
mov
or
out
imul
jb
mov
lods
adc
aad
mov
test
adc
and
movs
in
xchg
(bad)
dec
sar
movs
in
inc
iret
out
iret
cli
scas
xor
jae
mov
adc
fdivr
sub
mov
test
das
mov
sub
(bad)
pop
dec
xor
push
mov
(bad)
call
int3
push
std
test
mov
idiv
jp
push
test
add
add
push
add
bnd
les
test
idiv
add
into
xlat
shl
push
or
test
dec
idiv
dec
int
add
mov
mov
sbb
dec
fcomp
repz
push
sbb
cmp
(bad)
mov
push
cmp
cld
es
js
lods
pop
sbb
jl
or
cmps
cmp
outs
jge
pop
sti
mov
ror
xchg
outs
stos
pop
lods
pop
cmps
xchg
inc
retf
pop
loopne
jmp
fcomip
dec
jo
xchg
or
inc
xchg
cmps
pop
ret
sub
push
fwait
jbe
push
sub
sbb
popf
pop
fisub
sub
popa
xor
setge
or
inc
jge
jb
std
jmp
ret
sbb
js
lods
inc
popa
cld
mov
pop
pusha
shr
sub
int
in
inc
jl
call
rol
mov
jo
and
sbb
ins
(bad)
xor
pop
(bad)
sub
pop
(bad)
pushf
js
enter
adc
jg
js
xlat
lock
xchg
sub
and
sbb
jg
sbb
add
out
imul
xor
je
mov
push
cmp
jle
add
sbb
jno
in
loopne
add
rol
inc
sbb
(bad)
call
push
inc
sub
inc
jge
sbb
mov
mov
call
ret
into
pop
mov
sub
sub
mov
add
sub
adc
mov
inc
sub
enter
rol
(bad)
call
push
inc
sub
ret
or
call
or
std
test
retf
push
dec
add
push
pushf
mov
dec
idiv
cld
jp
test
retf
cli
add
inc
jmp
dec
lea
dec
test
out
or
xor
jmp
sar
mov
mov
mov
repnz
(bad)
icebp
(bad)
call
add
jl
test
cmp
sub
jle
jge
add
jmp
(bad)
mov
pusha
push
dec
popf
jmp
test
out
adc
cli
movs
add
add
ins
jb
inc
push
sbb
out
push
pop
cli
movs
add
add
pop
inc
jnp
mul
test
out
mov
cli
movs
out
test
push
add
xchg
jb
out
jnp
ss
out
icebp
or
movs
out
test
outs
add
inc
mov
add
ins
mov
adc
sar
or
repz
lea
out
pop
scas
imul
sub
mov
mov
loop
xchg
jl
jae
cmp
xor
dec
les
jmp
mov
jl
mov
xchg
test
push
add
mov
sub
es
outs
rcr
cmps
nop
retfw
and
xor
jmp
or
mov
mov
je
dec
adc
jb
addr16
bound
inc
dec
sbb
xchg
call
mov
or
cld
fs
xor
scas
dec
add
cwde
mov
sbb
and
(bad)
popa
sub
jnp
sub
pop
jb
mov
jmp
add
add
mov
test
jmp
cmps
div
call
out
aaa
mov
push
push
mov
add
je
sub
inc
jmp
retf
cmp
leave
les
push
fadd
xor
sbb
retf
mov
jnp
iret
mov
cmc
jmp
cmp
repz
mov
ror
or
add
mov
add
inc
cld
(bad)
jmp
je
cmp
fadd
push
jg
aas
xor
loope
pop
inc
add
and
mov
cld
and
sbb
inc
jns
loopne
jl
es
hlt
add
sti
lods
xchg
xor
shl
jg
and
inc
jae
xor
xchg
jb
scas
jns
leave
mov
sub
mov
(bad)
jg
xchg
lods
mov
cwde
push
je
sub
mov
into
mov
call
das
or
push
sub
mov
jbe
jl
fsub
jle
add
mov
pop
push
lods
pop
sbb
sbb
jmp
shr
js
jp
and
data16
inc
cmp
test
div
mov
das
push
int3
mov
aas
and
leave
mov
xor
mov
std
mov
outs
stos
mov
aas
and
mov
call
lods
sbb
and
mov
xchg
pop
mov
mov
out
jmp
sti
fiadd
stos
(bad)
add
add
xor
and
lock
jns
pop
push
leave
push
or
dec
adc
mov
hlt
shl
retf
inc
mov
push
push
test
int3
callw
test
cli
adc
sbb
mov
bound
std
imul
jge
dec
inc
jb
test
arpl
in
add
add
add
jnp
(bad)
(bad)
test
xor
push
(bad)
enter
cmps
pop
sub
leave
jne
(bad)
add
push
inc
lea
jmp
je
or
xor
mov
cmp
pop
inc
mov
loop
mov
int3
mov
in
mov
pop
or
dec
sbb
ret
cmp
adc
add
add
sar
scas
sar
call
mov
add
sub
test
sub
lea
pop
add
popf
jmp
mov
imul
jmp
xchg
fsub
fwait
std
dec
mov
fwait
dec
test
xor
pop
loope
push
add
fwait
std
shl
add
fwait
in
mov
mov
(bad)
xor
les
clc
mov
es
int3
push
ror
(bad)
lock
shl
jno
stos
jmp
or
popf
jmp
mov
in
jnp
sub
mov
push
ins
call
mov
add
push
outs
dec
push
mov
call
(bad)
push
inc
(bad)
rcl
sbb
shld
es
out
pushf
(bad)
add
mov
out
es
out
jmp
add
inc
pop
fiadd
dec
(bad)
inc
mov
pop
cli
inc
je
jle
out
loope
add
inc
add
fcmovnb
ret
mov
add
mov
xchg
fs
cmp
xchg
call
mov
or
(bad)
or
popf
mov
dec
fldenv
xchg
pushf
add
add
js
stos
ja
aaa
bound
add
dec
xchg
pushf
cli
das
push
repnz
dec
pop
xchg
mov
jmp
sahf
test
add
add
pop
add
ds
or
push
les
sub
scas
test
adc
push
dec
or
je
push
shl
call
aam
cld
lahf
mov
call
cmp
jnp
loopne
xor
clc
push
inc
sub
or
jnp
nop
mov
add
add
push
adc
call
cmp
jnp
add
push
mov
pop
mov
es
cmp
pop
out
or
dec
test
push
movs
je
je
es
stc
xor
inc
sub
xchg
and
call
movs
add
(bad)
jl
sahf
xchg
cmp
push
ins
xchg
(bad)
pop
out
stc
loope
pop
clc
movs
fisttp
and
add
mul
pop
stos
fidiv
lods
jo
ss
aaa
add
es
push
repnz
sti
stc
xchg
and
mul
inc
xor
inc
(bad)
std
repz
xchg
in
sub
sub
inc
pop
lods
mov
movs
lods
mov
lea
cmp
test
cmp
shr
in
mov
mov
add
cwde
mov
fwait
jmp
out
lods
data16
and
cmps
ja
rcr
rol
sar
fs
cld
xor
mov
adc
repz
es
adc
xchg
sub
and
lods
add
jae
adc
std
test
jge
out
pop
push
pop
push
cmps
xchg
gs
add
stos
in
mov
leave
test
and
aam
push
sub
inc
loope
dec
mov
ror
cmp
add
in
std
imul
rcl
cmp
cli
inc
add
cmp
jge
sbb
iret
jmp
rol
inc
pusha
sub
pop
add
int3
int3
and
add
retf
mov
ret
test
mov
add
out
loopne
dec
inc
xor
jb
mov
pop
mov
push
ret
xor
mov
mov
pop
xchg
movs
push
ret
dec
mov
cmp
mov
or
add
mov
push
sbb
inc
add
add
add
xor
add
mov
sub
add
popf
jo
popf
xor
es
mov
dec
mov
out
mov
js
jecxz
xor
and
jb
inc
mov
es
std
jae
es
js
push
mov
push
ja
es
cwde
mov
std
jmp
ss
jl
loope
and
add
add
mov
xchg
fwait
std
mov
mov
xchg
cmp
push
mov
jp
sbb
or
inc
outs
and
out
mov
and
es
xor
shl
add
inc
std
add
adc
add
adc
jmp
bound
les
mov
outs
or
inc
pop
or
add
xlat
adc
mov
out
push
adc
out
fs
test
daa
add
push
and
sub
pop
sub
inc
push
mov
out
out
add
inc
add
stos
in
enter
add
daa
clc
in
rcr
and
mov
mov
es
xchg
ror
or
add
cmp
sub
shl
pop
sar
add
in
push
mov
lahf
xchg
mov
ins
jb
push
push
cdq
push
pushf
xchg
mov
mov
adc
pusha
sbb
ja
inc
add
mov
add
jnp
mov
xor
or
add
add
sub
(bad)
ja
push
sub
data16
sub
cli
mov
jb
test
xor
jmp
mov
add
outs
mov
mov
adc
std
outs
push
dec
mov
jge
adc
rcr
call
sub
add
(bad)
ds
rol
not
adc
xor
add
(bad)
inc
add
add
add
retf
adc
xchg
jp
mov
fst
dec
xor
pop
fs
std
pop
std
mov
mov
movs
hlt
repnz
lods
mov
mov
pop
jo
int3
jb
ror
out
in
cmc
in
xchg
stos
(bad)
add
pop
stos
fst
call
xor
adc
pop
mov
push
pop
ins
loopne
add
xor
es
std
add
pop
std
jmp
inc
pop
adc
(bad)
scas
add
inc
pop
or
xor
add
adc
enter
shr
sbb
jmp
outs
and
pop
es
sbb
jge
dec
es
out
pop
dec
pop
enter
rcr
and
inc
out
es
out
fistp
jecxz
pop
js
enter
enter
mov
ret
sti
pop
or
outs
repnz
add
and
test
test
push
add
test
stos
dec
cli
fidivr
ror
jmp
sub
stc
rcl
cmp
test
add
add
push
sub
xchg
test
cmps
jg
repnz
call
and
push
fwait
test
hlt
das
xor
(bad)
call
dec
inc
add
cmp
xor
test
cwde
idiv
dec
or
push
pop
(bad)
clc
xchg
call
add
jnp
js
jge
js
test
mov
xchg
jnp
or
je
retf
or
and
clc
xchg
test
div
(bad)
clc
retf
ret
add
loop
mov
imul
clc
les
mov
test
dec
xchg
imul
dec
movs
idiv
es
js
movs
push
in
test
daa
push
lock
add
push
add
loopne
out
call
movs
lock
in
mov
or
out
stc
fwait
push
cli
mov
shr
push
mov
adc
mov
and
mov
cmp
pop
sub
stc
dec
fsub
stc
push
sub
jno
movs
push
out
test
daa
pop
clc
aam
jg
and
repnz
push
or
shufps
movs
test
jle
pushf
mov
icebp
jne
pop
inc
loop
je
fbld
push
clc
push
inc
adc
sbb
lods
xchg
mov
or
scas
mov
mov
clc
mov
mov
add
out
imul
icebp
test
sub
add
add
pop
jg
cwde
push
icebp
dec
lods
pop
loopne
mov
daa
js
mov
aaa
leave
mov
adc
int
push
pop
fwait
dec
pop
cdq
xchg
cli
push
not
call
(bad)
lock
enter
add
push
sub
(bad)
mov
into
mov
push
pop
push
adc
mov
leave
jnp
jge
sub
and
add
add
xchg
bound
int3
dec
jge
int3
mov
call
mov
pop
std
imul
and
lea
test
icebp
xchg
imul
mov
sti
add
sbb
add
push
hlt
(bad)
lock
call
or
jnp
lock
lock
test
jo
add
shr
shl
inc
push
mov
ins
idiv
lock
mov
arpl
inc
and
call
inc
sub
add
ins
js
movs
push
jmp
(bad)
pop
sub
stc
sbb
push
dec
xor
or
ja
aas
shl
jae
test
jp
cmps
xchg
jmp
mov
stc
fst
inc
cld
ja
xor
jne
call
movs
lock
fst
jbe
mov
adc
mov
and
xchg
les
les
inc
ins
ret
fiadd
mov
stos
enter
add
add
sahf
je
cli
sahf
cmp
mov
sahf
xchg
sub
pop
jae
sahf
adc
cmp
jmp
out
out
jecxz
pop
cwde
push
popf
jmp
popf
outs
xchg
shr
stos
mov
mov
scas
popf
(bad)
repz
inc
mov
jmp
js
leave
ins
sub
mov
xor
in
outs
hlt
pop
in
xchg
dec
add
fwait
jge
pop
cld
pop
sbb
test
test
pop
jbe
aaa
das
mov
inc
inc
fwait
and
adc
add
push
fwait
stc
push
jge
inc
push
or
stc
(bad)
ins
shl
rcr
dec
rol
sbb
inc
test
out
pop
adc
sub
hlt
mov
call
push
xchg
stc
sahf
(bad)
test
addr16
int3
add
fmul
int3
inc
sbb
sbb
dec
mov
sub
add
je
sub
add
test
xchg
popf
mov
sbb
or
inc
test
jg
sti
sbb
push
mov
or
or
add
add
inc
sub
mul
repz
call
sbb
pop
lea
int3
int3
jnp
int3
int3
inc
sbb
push
add
or
inc
retf
es
add
movs
or
add
lods
std
jae
xor
mov
test
fdivr
xor
dec
adc
(bad)
into
fadd
mov
adc
ins
inc
pop
in
std
retf
jmp
int3
fisubr
int3
repnz
jp
movs
cwde
icebp
push
xor
adc
mov
inc
test
mov
jae
in
je
es
pusha
sub
arpl
lods
xchg
xor
out
es
push
mov
(bad)
jmp
sbb
fmul
and
imul
mov
add
and
daa
outs
sbb
call
sbb
push
inc
out
mov
jmp
aas
xchg
dec
fmulp
jp
jg
inc
out
icebp
repnz
or
sti
jge
pushf
pusha
ds
xor
mov
xor
sub
out
imul
ins
inc
retf
ds
test
inc
add
adc
neg
add
dec
push
das
ret
xchg
test
add
pusha
ret
or
outs
mov
dec
test
cmp
and
retf
add
and
stos
(bad)
xchg
xor
call
add
adc
stc
jmp
and
lahf
add
and
inc
add
adc
add
jnp
sbb
je
sbb
pop
inc
add
hlt
add
mov
add
jg
mov
add
add
dec
inc
jmp
les
aam
add
dec
pop
dec
dec
sbb
or
xchg
sldt
xadd
or
std
xor
stos
stc
mov
add
inc
add
test
cwde
add
inc
or
inc
add
lahf
inc
add
sbb
test
adc
cld
scas
cli
jg
lods
cs
and
lods
push
nop
bound
add
lahf
push
inc
xchg
pusha
jnp
inc
lods
std
(bad)
in
and
cmc
ins
inc
test
mov
add
sub
or
out
je
cmp
add
dec
inc
or
int3
lods
push
sub
std
xchg
js
and
adc
mov
inc
outs
repz
mov
add
mov
es
ror
xchg
mov
and
out
bound
jnp
cmc
cmp
clc
movs
(bad)
mov
add
mov
jb
stos
mov
xchg
inc
retf
mov
inc
int
rol
cwde
cwde
dec
out
sub
mov
mov
lea
es
out
mov
xchg
out
cmps
mov
out
es
add
xchg
ret
inc
add
outs
adc
and
add
and
add
add
stc
mov
(bad)
xchg
stc
jmp
es
add
call
adc
and
add
and
mov
xor
jle
int3
sbb
stc
aad
push
stc
inc
xchg
pop
dec
xchg
jg
sub
sbb
int3
stos
and
inc
sbb
dec
push
push
sbb
add
add
add
xchg
cmp
or
int3
mov
int3
int3
repnz
mov
das
jnp
jg
dec
lea
push
lea
test
or
call
mov
jl
adc
cld
ret
sbb
add
dec
hlt
jge
dec
lock
dec
push
fadd
adc
cmp
adc
call
push
mov
add
add
mov
int3
cmp
int3
int3
dec
fcmovne
int3
sar
push
fstp
xor
mov
repnz
int3
js
mov
push
clc
dec
stos
push
hlt
dec
push
dec
fst
jmp
adc
pushf
cmp
xor
sub
popf
pusha
loopne
popf
enter
fnop
int3
push
ror
bound
mov
idiv
mov
les
mov
fs
and
stos
out
push
popf
fucomip
dec
jbe
ficom
jb
cmc
inc
es
daa
pop
push
xchg
cld
bndstx
xchg
imul
mov
add
cmp
jmp
(bad)
mov
mov
mov
int
dec
mov
in
icebp
push
outs
pop
fisubr
mov
aaa
(bad)
fisttp
aam
and
mov
mov
aas
sbb
(bad)
std
aas
test
cmp
idiv
das
loop
jle
ss
jecxz
call
cmc
sti
mov
loopne
int3
sbb
jmp
or
cwde
mov
sub
add
sbb
popa
lods
enter
test
je
fcom
jo
inc
add
xchg
dec
mov
and
pop
(bad)
ins
mov
and
mov
pcmpeqb
aaa
push
sbb
mov
jmp
bound
or
in
xchg
fs
mov
pop
cmp
int3
int3
stos
mov
jne
mov
test
add
add
in
adc
(bad)
push
not
mov
push
mov
add
mov
push
ret
jmp
enter
je
mov
int3
int3
mov
or
ret
or
sub
mov
add
pop
add
cmovo
mov
inc
in
inc
es
enter
idiv
pop
cmp
add
(bad)
lahf
pop
(bad)
shl
add
popf
cmp
repnz
int3
jmp
int3
fisubr
xor
xor
add
lea
sub
aam
and
aam
cwde
pop
sub
in
xchg
aaa
xor
mov
inc
add
pushf
push
or
sub
inc
add
add
cwde
sub
ss
or
mov
jb
and
pop
fld
shl
sub
pop
cmp
leave
cmp
stos
and
jmp
out
push
mov
mov
dec
push
data16
lds
inc
pop
push
cmp
push
add
cmp
pushf
pushf
mov
fsubrp
lock
pop
es
xor
mov
add
data16
cs
sub
fsub
sbb
jle
sub
pushf
dec
inc
ins
in
or
push
push
ror
(bad)
sbb
dec
sub
cmp
scas
or
mov
jb
add
add
xor
int
repz
sbb
stc
pop
sbb
sbb
and
push
loopne
dec
into
add
popf
mov
scas
pop
jmp
push
or
call
push
test
ret
add
adc
inc
mov
call
mov
(bad)
les
add
add
je
mov
dec
call
(bad)
cs
jge
mov
push
ret
cmp
cli
je
mov
push
call
ss
xor
or
or
push
ret
mov
jl
int3
mov
mov
push
sub
mov
cmp
and
cld
lods
xor
mov
adc
add
add
sbb
mov
cmp
or
ja
in
popfw
std
test
mov
inc
cmp
mov
es
dec
sbb
push
mov
xchg
aas
fcomp
out
or
dec
add
pop
call
bound
push
inc
test
sbb
push
mov
mov
cwde
push
jmp
dec
ficom
cmp
fisttp
scas
pushf
push
out
inc
xchg
(bad)
daa
(bad)
pop
add
cmp
es
out
out
(bad)
cmp
dec
pop
aam
popf
imul
mov
iret
stc
add
mov
out
xchg
mov
out
mov
std
mov
shr
mul
cmp
sub
les
add
sar
hlt
pop
push
outs
mov
add
stos
add
or
add
test
push
inc
repnz
add
add
add
dec
call
repnz
ret
ins
mov
test
xor
jae
pop
dec
jge
and
add
in
mov
jl
add
and
xor
add
stc
mov
add
add
dec
mov
xchg
sub
ins
ret
sub
out
mov
add
and
mov
jmp
test
jg
les
mov
push
mov
jg
add
and
jle
xchg
dec
inc
add
je
imul
inc
add
push
jge
icebp
cmp
xor
cli
aaa
add
push
dec
call
pop
add
mov
add
dec
push
mov
mov
push
cdq
mov
or
or
dec
(bad)
mov
(bad)
mov
inc
add
mov
je
mov
outs
adc
call
mov
pop
push
and
test
fwait
std
(bad)
jmp
mov
and
push
add
fwait
add
add
daa
daa
add
jbe
das
je
pusha
push
test
rol
cmp
popf
sub
jbe
das
call
popf
iret
popa
test
mov
call
popf
xchg
lods
fbstp
test
mov
jno
sub
pushf
std
(bad)
std
sub
jle
xchg
sar
mov
mov
mov
add
cmp
in
adc
add
ret
mov
in
jo
call
inc
fiadd
fist
mov
add
and
mov
es
out
es
dec
add
shl
daa
mov
add
test
push
sbb
sub
icebp
mov
mov
add
add
mov
data16
add
ror
sub
jmp
jecxz
rol
icebp
pop
repnz
fs
add
dec
std
mov
test
mov
adc
dec
add
lods
icebp
imul
(bad)
fstp
(bad)
stc
pop
lods
inc
jge
adc
mov
inc
cmp
(bad)
call
push
jmp
jmp
js
mov
pushf
adc
add
inc
cmp
inc
je
rol
cld
bound
(bad)
js
ds
xchg
dec
cmp
lsl
stc
(bad)
jg
ror
inc
cli
dec
clc
add
mov
ins
mov
add
add
xor
aaa
psllw
or
cmp
sbb
mov
adc
ds
icebp
mov
add
test
imul
xor
push
(bad)
aas
scas
add
mov
sub
push
ins
dec
adc
inc
mov
fsub
push
(bad)
sub
cmps
jo
(bad)
cdq
call
jle
adc
sbb
jge
add
add
cli
dec
movs
aas
std
jmp
xor
daa
dec
(bad)
and
xor
xchg
and
bound
(bad)
sbb
xchg
mov
and
jmp
adc
ins
add
out
mov
dec
inc
call
add
shr
scas
dec
out
inc
test
aam
inc
aas
add
add
add
mov
das
mov
xlat
cmp
inc
mov
lds
jae
inc
es
es
imul
das
cmps
or
es
sub
test
in
pop
int
adc
push
movs
ret
out
es
mov
sbb
xor
add
sar
lock
xor
add
and
inc
jmp
xchg
fnsave
or
(bad)
hlt
aaa
xchg
push
(bad)
(bad)
in
add
sbb
sahf
out
out
test
push
leave
push
sub
push
or
add
into
mov
push
inc
add
out
out
test
sub
pop
scas
(bad)
(bad)
call
and
inc
xor
or
jmp
cs
push
push
jo
add
add
in
nop
push
ins
bound
xchg
sub
mov
scas
jnp
push
push
inc
(bad)
jmp
sti
lahf
push
mov
jnp
inc
or
inc
movs
push
add
dec
pushf
xchg
inc
add
adc
pushf
push
jg
test
pop
retf
dec
xchg
retf
mov
dec
sbb
icebp
add
jecxz
inc
add
add
(bad)
std
mov
or
sar
cmp
jecxz
ins
test
sub
push
push
ja
add
imul
or
inc
push
adc
jmp
mov
jmp
lock
shl
pop
adc
in
ins
lods
xor
mov
imul
movs
out
clc
add
imul
add
add
adc
test
inc
add
jge
adc
aad
ret
pop
fsub
adc
test
dec
jnp
movs
scas
in
xchg
fadd
leave
rol
ficomp
das
push
stos
inc
test
ins
and
push
out
es
push
jge
and
inc
outs
inc
cs
sbb
pop
sub
jo
inc
out
push
lock
adc
mov
jp
and
shl
ret
outs
repz
dec
imul
das
in
retf
fld
mov
bound
sbb
push
adc
jnp
dec
cmp
mov
les
push
or
jns
int3
jl
jbe
enter
jbe
call
movs
cli
or
add
sub
and
ret
and
jbe
mov
dec
or
adc
test
clc
cmp
aas
dec
(bad)
mov
sbb
inc
retf
push
sub
add
or
dec
jbe
cmp
sbb
push
leave
push
sub
add
fisttp
dec
bound
or
jecxz
popa
jo
push
test
retf
sbb
add
add
inc
or
punpcklbw
cdq
rol
call
cmp
sti
pop
rol
dec
ja
xor
mov
add
cmp
or
rcl
push
cmp
(bad)
(bad)
mov
inc
ins
adc
ins
sub
jno
push
inc
cmp
nop
sti
push
std
sbb
inc
add
add
ds
dec
enter
inc
pop
mov
in
sub
in
add
ja
mov
pop
int
in
adc
imul
clc
jne
sahf
sahf
xchg
(bad)
popf
cld
mov
xchg
mov
std
call
imul
test
sub
(bad)
stos
or
inc
gs
nop
mov
cmp
xchg
mov
inc
add
add
imul
addr16
add
mov
arpl
mov
mov
cli
or
inc
repnz
enter
es
outs
movs
retf
loopne
es
imul
aaa
mov
add
iret
test
js
das
aaa
add
ret
in
int
dec
mov
inc
call
add
xchg
pop
sbb
scas
js
sbb
sub
pop
cmp
xchg
pop
push
in
loope
test
jp
or
xchg
and
daa
bound
add
fmul
outs
xor
loope
pop
add
cmps
or
jb
sub
ins
push
dec
add
out
das
retf
jmp
and
or
jecxz
fnstsw
dec
(bad)
into
shl
dec
adc
and
adc
push
cwde
pop
ins
daa
cli
and
sar
out
xchg
fnstsw
mov
lds
(bad)
cmp
push
sub
jp
inc
add
out
add
dec
add
xchg
scas
je
inc
cld
mov
add
inc
sub
sub
cmp
hlt
xchg
push
aas
inc
or
jns
add
push
add
jle
rcr
inc
pushf
xchg
jnp
add
cmp
xchg
inc
mov
or
cmp
push
add
and
xchg
inc
xlat
inc
mov
mov
mov
push
mov
inc
add
xor
add
jo
inc
es
fsub
jp
mov
fistp
(bad)
stc
daa
add
lock
jne
into
ret
retf
cld
xor
cmp
dec
inc
lods
push
pop
test
jnp
and
jp
(bad)
js
jmp
imul
in
inc
popf
sbb
mov
pop
out
(bad)
stos
or
inc
imul
add
popa
sbb
jge
es
sbb
jl
add
mov
push
and
inc
inc
and
jns
push
out
aad
outs
xor
mov
sbb
mov
sbb
ds
stos
ss
and
(bad)
cmp
stc
adc
cmp
jl
dec
sbb
call
movs
rol
es
mov
jle
cld
jmp
mov
dec
inc
mov
(bad)
(bad)
inc
mov
in
fisub
or
push
add
jmp
sbb
pop
stos
mov
int3
mov
mov
lods
jle
int3
cmp
test
sub
je
popf
aaa
sbb
shr
push
pusha
jb
xchg
adc
pop
bound
dec
xor
dec
sub
xor
and
hlt
add
dec
xchg
xor
cmp
bound
add
inc
add
scas
test
pop
dec
imul
inc
add
add
pop
lea
mov
jge
call
sub
int3
int3
mov
jmp
or
shl
mov
sbb
mov
xor
mov
cwde
push
call
push
ret
mov
pop
or
cli
jmp
stos
jns
test
add
mov
xlat
pop
dec
push
loop
or
jne
add
add
add
retf
pop
jbe
addr16
cmp
pop
adc
and
xchg
push
adc
jmp
mov
and
repnz
je
xchg
dec
and
ins
sub
inc
inc
pop
ret
iret
popf
pop
cld
jl
bound
es
dec
and
mov
stc
loope
sub
sub
inc
add
add
lds
mov
jmp
js
enter
xor
or
inc
arpl
cs
push
dec
dec
(bad)
dec
pop
leave
and
adc
jecxz
in
pop
cmp
out
mov
ds
js
out
fsubr
cmp
out
mov
(bad)
jg
jmp
add
jo
(bad)
dec
mov
sbb
pusha
inc
inc
sbb
adc
iret
jae
bound
aad
ror
inc
sar
(bad)
and
imul
jmp
sbb
xchg
jae
rep
stc
inc
pop
mov
jmp
loop
push
in
shr
dec
add
and
push
inc
jmp
ins
add
in
and
or
cdq
pusha
dec
aaa
mov
sbb
cmp
push
mov
std
and
and
call
retf
add
jae
mov
or
fstp
mov
iret
inc
add
popf
push
ret
int3
xchg
inc
out
or
pop
rcr
(bad)
sub
jg
sub
sub
or
sbb
xchg
pop
dec
call
(bad)
cld
daa
or
mov
add
jns
pop
test
mov
xor
or
mov
push
sbb
xor
stos
jmp
pop
std
test
add
inc
mov
or
mov
add
std
sub
mov
out
sub
stos
pop
xchg
xchg
mov
test
and
ss
xor
imul
std
test
ds
iret
aad
add
scas
pop
lock
cmc
call
pop
xor
jge
stos
pop
and
cmp
sub
and
outs
inc
out
stos
call
push
ds
inc
loop
cwde
push
out
cmp
out
ss
loop
es
out
out
aas
pop
adc
dec
(bad)
ficom
inc
and
movs
mov
daa
sbb
sub
iret
mov
arpl
add
lds
adc
inc
mov
inc
es
add
movs
test
es
nop
jg
inc
add
stos
push
cli
add
jp
and
inc
add
pop
outs
cli
pushf
cdq
leave
retf
cs
sbb
mov
adc
cmp
xchg
daa
out
hlt
div
jmp
call
(bad)
push
add
lods
add
dec
aad
(bad)
pop
int
adc
xchg
and
and
jo
dec
sub
call
sbb
loope
shr
inc
add
and
inc
mov
(bad)
js
aas
or
test
xchg
cmp
inc
sti
ror
mov
mov
mov
retf
sbb
or
aaa
xchg
js
inc
add
mov
add
fwait
add
mov
(bad)
cld
mov
jge
repnz
add
adc
inc
or
xchg
popf
cmps
or
retf
jle
and
lds
scas
push
sbb
stos
mov
xor
ror
jecxz
push
clc
mov
add
add
repnz
or
cdq
adc
test
lods
xchg
pop
std
jl
imul
movs
sar
es
or
lods
dec
into
loopne
fld
or
fidivr
pop
(bad)
adc
pop
mov
es
add
cmp
inc
es
retf
inc
outs
inc
inc
(bad)
cmps
cmp
add
add
mov
mov
addr16
out
es
fistp
retf
cmp
add
pop
pop
inc
push
adc
add
dec
(bad)
fmul
and
add
inc
icebp
les
stos
adc
add
cmp
ror
rol
out
ret
ins
add
hlt
mov
sbb
fiadd
add
sahf
add
or
mov
psubsw
dec
push
cwde
jge
adc
and
add
repnz
jmp
fist
cmps
out
sti
jmp
and
ins
dec
in
test
call
clc
jmp
test
clc
pop
jle
sti
push
or
mov
or
cmp
mov
inc
add
push
in
into
call
ja
in
mov
push
addr16
or
mov
pop
sbb
add
out
(bad)
enter
mov
add
add
pop
jnp
lahf
xor
and
pop
add
sti
sti
mov
xchg
loopne
cld
test
mov
test
xlat
fidiv
inc
push
hlt
push
inc
stos
pushf
sub
scas
push
adc
jmp
pop
sub
scas
sub
(bad)
mov
ror
call
popf
push
mov
aam
add
add
call
mov
jmp
pop
mov
(bad)
mov
pop
std
or
out
inc
popf
enter
data16
mov
scas
mov
jns
es
out
stos
stc
push
jg
lock
jb
mov
cli
mov
(bad)
fiadd
pop
push
push
mov
fmulp
xchg
aas
mov
lea
pop
lea
out
add
pop
lods
mov
(bad)
pop
lea
data16
stos
adc
inc
out
push
dec
outs
dec
mov
clc
into
push
push
adc
icebp
adc
imul
mov
or
test
add
jmp
and
inc
add
and
add
add
push
add
and
inc
add
stos
in
sti
jmp
and
(bad)
jmp
xchg
cmp
sub
and
sub
ret
sar
ror
sti
shr
adc
add
mov
pop
nop
xchg
add
jge
mov
mov
hlt
loop
push
adc
and
add
jae
dec
clc
add
sbb
adc
xchg
pop
inc
add
push
mov
cld
add
mov
lods
or
xchg
daa
and
aas
dec
add
inc
inc
dec
inc
add
(bad)
inc
inc
test
pop
test
add
cmp
cld
add
out
or
iret
inc
sub
dec
and
add
fmul
adc
cmp
mov
(bad)
jge
es
in
fiadd
retf
repnz
inc
sub
loop
aam
pop
mov
inc
out
dec
clc
movs
neg
inc
xor
cld
mov
test
jmp
inc
or
push
jecxz
sbb
push
call
lods
push
mov
inc
repnz
and
pop
mov
pop
add
pop
std
in
repnz
mov
fcos
test
inc
out
add
inc
adc
ss
in
es
cmp
lods
leave
out
es
data16
fidivr
cmp
add
scas
in
frstor
(bad)
pop
fs
dec
ds
lahf
add
add
add
xor
sbb
mov
jle
imul
jle
out
fmul
sub
mov
mov
and
inc
push
inc
out
es
sub
(bad)
stos
fs
out
mov
ins
add
dec
xchg
and
cmp
jmp
xchg
jp
and
test
sti
gs
pushf
cdq
mov
jge
sbb
mov
inc
(bad)
fnstenv
mov
jg
and
mov
test
dec
and
rol
in
dec
icebp
in
sbb
out
inc
rcr
repnz
jmp
and
inc
add
aad
bound
aad
call
mov
add
add
iret
cmp
adc
clc
(bad)
js
add
pop
jne
mov
fdiv
xor
dec
retf
je
add
ja
aas
sbb
or
and
mov
add
inc
loope
inc
inc
add
mov
test
jl
cld
add
retf
cmova
mov
xchg
inc
cld
test
mov
add
test
es
test
sbb
jmp
cmp
call
in
(bad)
in
xor
jl
ins
pushf
stc
sbb
std
test
jns
popa
jno
jnp
jae
add
dec
ret
in
out
sahf
std
dec
dec
stc
push
stos
call
imul
imul
mov
sbb
inc
add
jb
add
imul
and
sahf
std
into
sbb
(bad)
fld
push
arpl
fidivr
and
in
fild
pop
enter
popa
loop
mov
xchg
mov
mov
lds
jecxz
sub
test
rol
repnz
add
adc
fidiv
sti
jl
mov
mov
push
out
es
imul
out
daa
push
out
es
inc
mov
push
arpl
inc
out
pop
pusha
mov
(bad)
in
dec
jne
or
add
enter
or
mov
or
test
mov
jmp
and
add
add
pop
daa
movs
mov
inc
adc
hlt
imul
dec
daa
scas
in
repnz
inc
jge
daa
out
and
add
pusha
add
mov
dec
mov
jbe
cld
(bad)
out
loopne
mov
pop
std
shl
lds
cmp
jns
inc
add
dec
das
and
push
mov
(bad)
(bad)
push
rol
inc
jns
fbstp
ds
add
verw
jmp
enter
int3
sub
sub
add
call
dec
inc
add
jmp
dec
jmp
les
int3
lods
sti
jb
ret
jne
aas
pop
jge
ss
add
mov
fcmovb
rcr
loopne
clc
es
jge
imul
add
push
add
in
jmp
aas
inc
push
inc
lods
movs
adc
jmp
imul
test
sbb
inc
ins
std
jmp
loop
push
cmps
mov
xchg
movs
sub
inc
mov
cmp
add
call
jl
loop
xchg
lock
add
and
std
dec
mov
pop
push
ja
std
add
inc
out
xor
inc
jbe
cld
add
cld
aam
es
sbb
imul
ret
das
mov
test
adc
inc
out
addr16
stos
sbb
rol
inc
pop
ds
call
mov
and
sub
jle
bnd
retf
lods
mov
add
add
xchg
fcmovu
jmp
pop
jmp
mov
inc
stos
test
add
fwait
add
and
(bad)
dec
xor
pop
mov
mov
aas
loop
dec
jne
xor
popf
mov
cmp
div
mov
xlat
and
or
sbb
dec
mov
retf
inc
dec
pop
stc
jmp
imul
repz
pop
lock
leave
xchg
jmp
or
fisubr
dec
mov
xchg
or
bound
loopne
lock
add
scas
lds
xor
sub
pop
scas
int
mov
pop
test
inc
add
rcl
dec
inc
and
mov
add
xchg
add
sbb
mov
mov
pop
and
or
sbb
aas
lea
jle
dec
cld
add
fld
jg
pop
mov
test
cld
les
fadd
test
add
cmp
es
clc
in
jl
xlat
push
jbe
mov
out
jl
sbb
add
lahf
movs
stc
add
jmp
ins
test
sbb
stc
arpl
js
cmc
or
dec
loop
add
outs
lds
scas
inc
mov
jg
cdq
test
mov
xchg
cmp
in
in
stc
jns
fnstcw
jb
aas
in
ins
std
jmp
in
fs
add
add
mov
sub
mov
rol
mov
outs
inc
or
js
inc
pop
cmp
sbb
test
sub
jbe
and
xlat
call
inc
sub
add
sti
pop
aaa
jno
iret
lds
add
inc
rol
inc
fidivr
inc
out
lods
shl
es
cmp
retf
call
xchg
jbe
out
call
add
cld
popa
pop
out
lods
add
jns
loope
add
add
stos
sbb
stc
jnp
test
jg
test
ds
dec
popf
repz
fs
(bad)
call
jb
dec
jb
in
jmp
push
sbb
dec
stc
jae
std
adc
sbb
jl
sub
add
add
jge
mov
test
inc
add
adc
add
and
inc
add
pop
add
and
add
pop
mov
xlat
dec
lock
pop
or
cli
cmps
or
out
das
adc
adc
sbb
outs
cmp
pushf
sub
(bad)
fdivr
je
or
xlat
fsubr
xchg
call
add
xchg
or
dec
fimul
push
cld
cmovb
cld
(bad)
mov
inc
add
call
push
stc
inc
push
mov
cmp
mov
add
ins
std
jmp
movs
in
lods
adc
clc
xchg
jbe
(bad)
scas
sub
test
jmp
sub
or
push
dec
adc
mov
push
loop
push
fs
icebp
ins
std
int3
push
loop
dec
scas
aaa
lods
dec
add
loope
mov
out
sar
hlt
std
sub
out
std
dec
sbb
sbb
std
call
in
aam
inc
pop
mov
mov
out
or
(bad)
sahf
inc
out
es
jnp
pop
lahf
loop
jb
jp
dec
test
push
inc
test
pop
retf
mov
pop
fwait
jl
push
test
push
inc
jns
or
(bad)
std
lods
mov
data16
inc
fidivr
aas
out
das
mov
jp
jno
jp
js
cmp
add
retf
das
mov
gs
loop
loope
pop
imul
outs
cmp
add
add
mov
mov
lods
imul
xor
test
stos
mov
or
ret
cmp
test
dec
mov
popa
mov
and
repnz
pop
or
cmp
out
add
(bad)
pop
and
jb
xchg
out
ins
or
jmp
jmp
and
xor
outs
out
add
mov
push
imul
and
inc
add
mov
jae
add
or
iret
dec
daa
jbe
inc
loope
mov
bswap
xchg
jnp
sbb
dec
or
add
inc
add
mov
jae
int
and
inc
add
mov
aam
add
dec
pop
mov
test
cld
test
add
dec
lds
add
pop
jo
or
loopne
dec
inc
retf
loopne
xchg
dec
and
inc
pushf
lods
stc
mov
cmp
add
inc
mov
jmp
xor
call
pop
std
call
xor
gs
mov
jmp
out
mov
outs
aam
hlt
or
fisub
cld
es
iret
and
pop
sahf
dec
sub
int
push
out
pop
fs
or
pop
std
int3
push
out
push
scas
setl
sahf
mov
in
mov
out
rol
or
int3
or
jbe
std
jmp
cmp
rol
int
add
aam
out
mov
add
ja
(bad)
in
scas
out
add
add
push
sub
outs
mov
outs
adc
sub
sbb
mov
and
inc
fiadd
pop
call
ins
jo
push
cli
push
out
pop
call
jmp
push
out
jecxz
outs
push
ret
scas
sub
das
mov
lods
out
shl
test
mov
pop
or
out
cmp
leave
pop
ret
cmp
adc
sub
test
push
or
out
mov
imul
and
xchg
loop
or
cmp
sub
sbb
sub
imul
pop
xchg
shr
leave
dec
and
das
xor
jmp
pop
leave
shl
jae
(bad)
jne
iret
xor
xchg
dec
test
or
xchg
mov
xor
ss
mov
inc
add
pop
pop
jmp
xchg
jecxz
fdivr
add
jnp
pop
dec
inc
add
ret
repnz
(bad)
aas
mov
out
mov
add
add
xor
push
sti
and
xchg
push
hlt
cmp
outs
or
inc
jb
pop
mov
jb
jb
jb
test
add
push
in
hlt
or
xchg
shl
pop
push
xor
sbb
dec
sbb
adc
mov
and
lahf
mov
xchg
loop
lock
add
or
sbb
inc
cmp
test
xor
test
je
dec
data16
aam
xor
std
pop
nop
inc
es
aam
jo
test
(bad)
mov
add
push
fidivr
pop
inc
repnz
inc
out
out
fild
es
sbb
dec
out
sub
mov
movs
stos
test
cmps
mov
add
add
add
push
jbe
lods
stos
addr16
rol
es
adc
push
cmp
push
mov
ret
add
mov
inc
and
inc
fiadd
pop
xchg
in
ins
push
pop
int
fs
cmp
inc
lahf
cmp
add
mov
add
jb
cmp
daa
fimul
cmc
stos
add
fs
es
pop
test
ret
mov
cli
std
jae
jge
add
and
sub
jmp
dec
dec
xchg
movs
retf
psubsw
test
ds
and
mov
(bad)
(bad)
and
test
push
or
inc
stc
jmp
lea
jmp
test
cmp
inc
pop
pusha
outs
inc
setl
jb
xbegin
ret
ja
iret
aas
test
and
push
dec
mov
mul
lods
bound
dec
pop
test
add
xor
(bad)
mov
or
test
or
push
aaa
inc
fadd
test
sbb
fwait
mov
sbb
mov
dec
stc
dec
inc
pop
sahf
idiv
xchg
push
pop
es
pop
in
std
test
mov
aad
or
and
lahf
adc
xchg
adc
dec
pop
std
pop
lods
sar
cs
rcl
cmc
rol
add
pop
std
jmp
mov
cdq
pop
std
in
and
mov
pushf
stc
lods
mov
xchg
out
lock
add
lahf
dec
mov
aam
adc
test
xchg
test
test
cmp
inc
push
rcl
test
inc
pushfw
cmp
cs
add
daa
outs
inc
push
mov
ret
fwait
out
shl
loope
out
jae
xchg
fwait
iret
dec
sub
es
xchg
out
addr16
pop
cmp
push
shl
add
add
das
call
or
mov
fs
push
inc
xchg
nop
(bad)
out
push
mov
or
add
outs
dec
xor
add
and
ret
inc
sbb
(bad)
or
and
aad
scas
data16
call
es
xlat
add
add
add
pop
into
push
add
xchg
sbb
xchg
stos
sub
pop
xor
inc
std
xchg
and
cmp
je
jo
sbb
cmps
outs
je
mov
xor
out
mov
push
popa
ror
sbb
jecxz
imul
out
pop
add
or
imul
and
or
mov
add
add
pop
cmp
imul
punpcklwd
xor
lods
pop
cmp
mov
pop
cmp
mov
pop
cmp
jns
cmp
shl
(bad)
je
add
jne
add
add
jne
add
cmp
sar
mov
jae
add
jb
add
ins
cmp
es
fstp
add
add
mov
fdivr
fstp
aaa
fstp
cwde
sar
loopne
cmp
xlat
int3
cmp
ror
es
ror
cdq
ror
sub
or
pop
clc
and
into
test
jp
cmp
inc
repnz
(bad)
sub
iret
movs
sbb
push
ds
and
mov
add
push
aam
enter
es
pop
cdq
pop
inc
sbb
in
sub
(bad)
jb
xor
push
sub
bound
mov
mov
ins
int
xor
ss
xor
jo
shl
mov
fidiv
sti
add
mov
jno
rcr
movs
enter
enter
add
ja
enter
mov
add
and
mov
sub
sub
pop
xor
repnz
xor
repnz
xor
bnd
push
jmp
sub
in
ins
icebp
adc
dec
test
sub
test
or
clc
mov
in
int3
popf
jmp
js
lods
jmp
pop
test
(bad)
ja
and
hlt
sbb
adc
add
cdq
movs
or
in
inc
int
je
movs
sub
inc
add
mov
pop
into
lods
fs
add
jge
int3
inc
jge
int3
mov
out
je
mov
add
sub
scas
adc
loop
inc
add
(bad)
cwde
or
or
cmps
and
cmp
mov
and
lea
cli
dec
mov
test
in
inc
adc
cdq
adc
mov
jns
mov
add
xor
mov
retf
int
sub
sbb
fwait
sbb
fwait
int
and
fwait
std
and
addr16
inc
fwait
std
sub
push
mov
addr16
and
std
call
fwait
std
test
or
pop
rol
mov
out
cmps
mov
or
aad
aas
lods
lahf
stc
es
sub
sar
push
cmps
lods
mov
out
add
(bad)
jmp
lods
lahf
stc
es
and
rcl
mov
mov
lea
xor
inc
or
es
out
adc
inc
div
sbb
and
dec
push
add
es
out
sub
dec
fisttp
inc
pop
mov
pop
inc
out
es
jbe
outs
cmps
add
ja
jo
gs
add
rol
inc
push
or
ja
hlt
mov
iret
mov
ret
dec
push
add
inc
out
mov
test
test
inc
out
es
jo
ins
add
sub
xlat
test
pop
sub
test
and
jmp
test
call
gs
jmp
sahf
jmp
test
mov
inc
add
pop
inc
fwait
push
dec
add
rol
in
lock
fwait
xchg
or
add
ret
cmp
jmp
pop
outs
inc
jmp
bound
bound
daa
or
cmp
jmp
pop
inc
add
inc
add
xor
ds
xor
inc
sbb
xor
cmps
cs
ret
out
push
(bad)
aas
inc
add
pop
fimul
loop
sbb
std
pushf
addr16
cmp
test
mov
pushf
mov
cmp
mov
test
inc
sub
mov
pop
test
(bad)
add
mov
cmp
push
(bad)
jl
es
out
repz
rol
cmps
sar
popf
cmp
es
sub
add
add
mov
es
jl
addr16
in
sub
cwde
pop
push
out
loop
es
sub
test
sub
sub
mov
cmp
push
mov
push
andnps
ficom
cs
jmp
adc
push
push
sub
jnp
cwde
ror
mov
in
lods
pusha
add
sti
add
xor
push
retf
and
leave
imul
mov
out
fstp
add
xchg
ins
daa
dec
inc
push
call
mov
jne
fs
inc
out
cmp
out
add
mov
ret
es
jmp
mov
aad
es
ins
daa
dec
inc
mov
test
mov
out
xor
adc
inc
dec
jge
fsub
add
jae
jge
add
add
rol
es
push
push
add
push
mov
xchg
push
add
or
int3
popf
out
int3
mov
bswap
lods
bswap
sbb
xor
sbb
jb
dec
test
lahf
add
(bad)
jmp
mov
inc
add
dec
add
mov
ds
(bad)
push
mov
rcr
xchg
add
add
adc
ds
xchg
pushf
adc
and
inc
add
out
rol
xor
cmp
cmp
iret
inc
adc
mov
dec
ds
pop
addr16
sbb
jl
mov
pop
adc
inc
xor
push
es
cmp
add
inc
add
call
add
ror
push
in
add
or
cmp
push
pushf
mov
cmp
inc
and
js
int3
loop
mov
int3
repnz
mov
in
movs
(bad)
fild
mov
or
movs
xor
popf
pop
or
push
movs
test
and
nop
(bad)
lahf
jmp
(bad)
addr16
add
mov
std
xchg
mov
std
xchg
mov
dec
sub
cli
idiv
sub
std
xchg
cmps
jl
xor
stos
shr
and
call
inc
outs
jnp
push
out
or
sub
sbb
push
retf
mov
fadd
es
loop
pop
inc
out
popf
shr
sub
cmc
das
sub
fcomp
sub
ds
pop
ds
idiv
mov
push
add
rep
js
test
mov
pop
int
mov
int3
stos
jo
jle
fwait
scas
sbb
mov
out
add
ja
(bad)
jmp
sub
add
repz
in
jmp
call
and
add
repz
js
cmp
out
pop
adc
add
sub
jge
mov
stc
and
mov
fs
test
out
mov
test
mov
and
mov
and
fbld
jmp
and
cmp
mov
rcr
cmp
inc
mov
jno
xchg
dec
sbb
stc
inc
in
push
shl
push
je
test
fild
mov
mov
jae
inc
jl
lea
pop
or
inc
add
add
cld
jmp
sar
xchg
mov
call
add
cmp
test
xor
xchg
sub
les
pavgb
test
call
sub
sub
jnp
and
mov
push
test
jae
movs
or
movs
adc
inc
scas
xchg
cwde
jae
jno
push
popf
jmp
mov
jmp
in
movs
div
dec
pop
jp
imul
sub
add
loope
mov
mov
mov
adc
jmp
es
std
mov
add
shr
aad
mov
add
sub
inc
inc
outs
pop
cs
mov
jge
int3
stos
xchg
out
fld
adc
jnp
push
push
ins
std
xchg
cmp
add
push
push
aas
fidiv
popa
pop
sub
iret
mov
mov
cmp
in
or
sahf
xchg
and
out
mov
or
es
jp
cmp
dec
mov
jbe
inc
ds
xor
aam
cwde
ds
es
mov
dec
dec
add
inc
add
mov
aaa
add
clc
das
jae
(bad)
cdq
push
(bad)
rcr
add
pop
int3
sub
mov
jge
or
mov
and
into
ds
das
shl
stc
(bad)
mov
jle
scas
addr16
jmp
pop
dec
mov
sub
addr16
call
xchg
mov
jge
mov
jp
in
ss
jmp
pop
xor
xchg
imul
add
call
cld
xor
je
inc
lds
test
inc
add
push
jae
jb
mov
add
add
stc
push
push
inc
adc
inc
add
cwde
or
jle
sub
add
mov
icebp
(bad)
das
mov
add
es
call
adc
jae
clc
inc
imul
cwde
ss
stc
push
js
mov
cmp
nop
mov
sbb
push
sub
(bad)
icebp
push
xlat
vmulps
bound
sub
or
popa
lods
xchg
dec
jl
sub
popa
cmc
dec
sbb
xchg
jb
(bad)
stc
sub
stos
xor
push
mov
xchg
cvtpi2ps
std
adc
jns
daa
sub
xor
iret
repnz
sbb
std
(bad)
fstp
std
jmp
adc
mov
or
(bad)
cmp
inc
xchg
jo
mov
add
retf
mov
les
inc
jns
dec
jo
inc
popf
loopne
jle
out
mov
sti
lock
int3
jmp
pop
outs
or
mov
das
out
add
lock
add
cs
out
ins
and
sub
cmc
neg
jecxz
xchg
xchg
stos
cmp
add
mov
pop
dec
adc
out
inc
stos
pop
inc
(bad)
mov
add
stos
xchg
pushf
mov
xor
pop
jge
mov
and
retf
xchg
xchg
retf
push
inc
pop
hlt
xchg
xor
jbe
xor
jmp
popf
leave
xchg
xor
rcr
lods
popa
fisubr
mov
xchg
mov
int
jle
or
sub
xchg
jmp
jmp
mov
mov
and
leave
inc
lds
mov
ret
and
retf
or
add
cmp
add
test
in
add
or
pushfw
mov
dec
not
push
or
ror
jno
add
mov
or
data16
mov
shl
sbb
add
cmp
icebp
mov
ret
xchg
ret
jp
or
xchg
mov
inc
or
fsub
aad
push
iret
inc
adc
jg
icebp
inc
add
jecxz
pop
adc
sub
or
add
sbb
or
sbb
adc
outs
outs
jge
lea
shl
out
sbb
dec
dec
arpl
mov
mov
and
mov
jl
xor
std
push
jb
mov
out
mov
neg
sbb
pop
mov
mov
fimul
add
mov
jmp
into
popa
test
xchg
inc
or
xchg
jmp
add
mov
dec
sbb
inc
outs
or
mov
fisttp
mov
out
cmp
xchg
call
add
push
js
or
enter
fwait
jnp
xchg
in
jae
rcr
es
pop
xlat
sbb
add
add
push
out
add
mov
cmps
push
imul
in
clc
add
inc
sbb
test
inc
outs
mov
mov
lods
stos
aaa
or
mov
lea
inc
xchg
mov
add
mov
adc
movs
in
adc
and
and
jge
test
xor
(bad)
nop
das
inc
add
add
add
mov
push
leave
(bad)
jne
inc
add
sbb
rcl
psrlq
int
mov
out
adc
and
push
add
mov
call
add
mov
arpl
call
add
cmc
xchg
mov
add
jbe
inc
clc
inc
sar
inc
daa
or
jg
dec
in
sbb
add
aaa
inc
add
push
add
hlt
pop
or
add
add
(bad)
cld
fadd
xchg
js
mov
mov
aas
inc
mov
mov
add
sbb
cvtpi2ps
int3
out
je
icebp
lea
add
add
mov
mov
es
loop
mov
push
add
test
lods
mov
jecxz
outs
mov
shl
scas
mov
xchg
movs
fnstenv
jg
sti
push
lahf
pop
jo
push
jns
dec
cs
jecxz
and
test
push
xchg
scas
pop
adc
jmp
add
adc
mov
dec
push
mov
mov
jnp
sbb
adc
add
add
inc
mov
arpl
ror
cmps
pusha
mov
retf
push
inc
push
fsub
out
sub
jmp
mov
pusha
idiv
scas
imul
jmp
add
inc
stos
(bad)
jns
out
sbb
cmp
jmp
add
dec
add
inc
out
xor
loope
es
sub
cmp
add
add
add
shr
das
shl
cvttps2pi
ffreep
clc
sub
clc
call
loope
test
push
add
test
push
sub
add
cmps
xor
cdq
retf
clc
frstor
push
xchg
cmps
pop
ja
push
add
sahf
xchg
or
in
adc
and
mov
fwait
repz
and
add
add
das
mov
and
xchg
lea
inc
add
arpl
(bad)
add
mov
(bad)
mov
jo
jmp
jmp
jbe
bound
test
push
cmova
add
add
mov
ret
lock
pop
mov
dec
add
add
add
add
inc
mov
aas
push
adc
aad
push
pop
jle
mov
cmc
mov
adc
or
mov
pop
ret
cwde
jnp
repnz
add
lds
adc
and
mov
out
mov
popf
fmul
es
cmp
jp
add
add
mov
inc
out
bound
mov
or
call
mov
stc
push
daa
jno
xchg
mov
adc
scas
test
cmps
(bad)
mov
sti
cs
cld
fs
ds
inc
hlt
scas
mov
xchg
xchg
(bad)
cmc
inc
pop
loope
ret
es
inc
and
out
jmp
adc
mov
pop
mov
sub
stc
inc
cmp
add
icebp
push
cmp
out
inc
mov
pop
retf
lock
ficom
add
bnd
xor
out
aam
outs
sbb
sub
adc
repnz
mov
in
dec
outs
shl
mov
xchg
adc
inc
cwde
adc
add
add
dec
push
dec
in
out
es
add
dec
push
jge
fwait
mov
add
pushf
sar
retf
cs
add
xor
push
(bad)
lock
adc
and
mov
std
sar
adc
test
ror
mov
add
sbb
push
sub
mov
add
add
add
mov
sub
push
add
(bad)
sub
call
add
adc
mov
cmps
mov
cmovae
pop
add
add
or
adc
mov
cwde
leave
inc
add
sbb
inc
push
std
in
mov
or
cld
dec
xchg
pop
test
aas
add
rcl
mov
in
str
jl
push
adc
mov
mov
or
add
sbb
mov
lahf
mov
lods
inc
adc
push
stos
cwde
jg
std
jmp
xor
sbb
mov
std
clc
data16
xchg
mov
fdiv
lock
push
mov
adc
mov
lea
fsub
test
xor
call
cdq
xabort
(bad)
add
xchg
mov
mov
push
sbb
dec
xor
(bad)
imul
stc
call
leave
mov
popa
mov
aam
or
mov
rol
es
add
scas
inc
fdiv
push
repnz
scas
jmp
stos
xchg
fisttp
mov
out
out
sbb
ss
sbb
enter
mov
sahf
pusha
mov
dec
out
dec
mov
dec
add
lods
fdiv
sbb
nop
fstp
test
inc
mov
mov
cmp
out
iret
mov
pop
and
jo
adc
cmp
mov
nop
xchg
sub
or
xlat
and
int3
sbb
xchg
test
ret
mov
test
lods
inc
(bad)
call
stc
pop
test
xor
dec
ja
test
iret
push
jecxz
retf
(bad)
lea
inc
add
mov
in
or
jae
inc
add
jae
fiadd
sbb
inc
std
sbb
retf
jmp
add
hlt
cmp
mov
pushf
sbb
ins
xor
fisttp
cmp
(bad)
into
mov
adc
inc
add
push
pop
(bad)
jle
add
xlat
dec
pop
or
or
cwde
addr16
add
je
or
inc
repz
scas
cwde
xchg
add
push
loopne
mov
mov
mov
add
(bad)
cmp
rcr
mov
add
and
std
dec
push
sti
scas
scas
cli
cld
jmp
cli
cld
(bad)
fcom
add
inc
sub
push
sub
cld
in
xchg
cmp
xlat
pop
mov
or
jp
scas
and
jl
adc
std
mov
sub
(bad)
cmp
(bad)
cmp
cmps
xlat
or
ret
inc
xchg
push
(bad)
aad
jp
cs
(bad)
outs
add
call
cdq
test
div
je
aaa
inc
mov
sbb
fisubr
adc
out
(bad)
dec
outs
nop
push
scas
xor
out
out
cmp
or
leave
push
aas
int
jae
js
jae
add
add
inc
outs
fsubr
cmp
add
cmp
sbb
test
outs
stos
adc
out
(bad)
outs
scas
adc
out
and
mov
sbb
sub
loope
mov
ins
sti
mov
nop
daa
add
retf
sbb
inc
jns
es
add
cmp
xor
movs
pop
sbb
clc
movs
int
sti
mov
pop
ins
lock
and
fist
jmp
int
das
bound
xchg
mov
adc
and
mov
jno
dec
test
xor
jmp
cmp
(bad)
jb
bound
fcom
jmp
jne
pop
icebp
ins
mov
xlat
and
sbb
(bad)
in
and
mov
add
sub
add
add
add
cmps
push
ret
mov
int3
int3
rcr
int3
rcr
int3
aad
mov
(bad)
icebp
mov
dec
inc
add
mov
jae
sub
aas
inc
int3
add
popa
sbb
cmovae
jmp
inc
add
stos
inc
pop
and
add
inc
ins
and
add
call
add
into
inc
add
pop
inc
inc
cmp
add
inc
add
sub
add
sub
aas
int3
push
cmp
loop
adc
push
mov
mov
push
(bad)
leave
mov
jb
aas
int3
push
jl
cmp
adc
stc
sub
std
call
adc
sbb
pop
les
sub
std
test
jbe
cs
adc
stc
jmp
sub
scas
std
cld
jmp
sub
mov
add
sub
sbb
inc
pop
mov
jns
fnstenv
out
lahf
test
and
or
fdiv
add
jns
aas
bound
fwait
aas
pop
adc
aas
push
pop
jnp
add
add
rcr
popa
jmp
leave
mov
mov
xor
ret
xor
jae
(bad)
xlat
mov
push
adc
mov
jp
cmp
sahf
xor
add
inc
test
or
add
cmp
mov
stos
data16
mov
bswap
lods
out
int3
sbb
xor
pmaddwd
or
bound
les
fmul
adc
inc
push
bound
xor
jno
xor
test
scas
jae
jae
push
iret
jno
xor
ja
mov
aas
adc
mov
sbb
aam
arpl
fwait
iret
inc
add
inc
fmul
scas
pop
inc
mov
add
add
sbb
dec
or
mov
jle
bound
int3
int3
xor
dec
lea
cmps
sub
pop
inc
add
jg
into
lea
pop
mov
loopne
dec
xchg
pop
add
pop
mov
and
jl
dec
sub
xor
rcl
and
mov
mov
xor
mov
icebp
fmul
shl
fsubr
fild
jne
mov
daa
in
pusha
popa
retf
test
mov
int3
loop
ja
movs
sbb
test
rcl
fs
push
cmps
aam
popf
adc
(bad)
mov
add
dec
xchg
jmp
std
jmp
sub
adc
lock
mov
cmp
stos
aam
es
std
jmp
add
add
mov
test
or
sub
std
sub
into
and
gs
cmp
es
in
jo
inc
xchg
sub
popa
aam
inc
out
xchg
je
add
retf
push
dec
dec
out
fadd
add
mov
imul
das
out
sbb
adc
out
pop
nop
fdivrp
mov
add
push
adc
inc
test
out
dec
popf
xor
shl
retf
lods
jmp
inc
jo
loopne
push
push
adc
cmp
call
stc
mov
inc
push
sbb
test
pusha
out
in
pop
loopne
jmp
cmps
jae
jmp
out
aas
add
xor
dec
pusha
movs
jae
jmp
in
mov
sbb
rcl
stc
cmps
sti
lds
and
sbb
jb
outs
adc
and
aas
add
and
push
std
and
xor
jmp
and
stc
add
cwde
adc
jmp
iret
lock
mov
pop
adc
inc
or
ret
add
add
add
jb
mov
adc
push
or
dec
mov
mov
adc
inc
pop
mov
and
pop
mov
int
mov
and
jg
arpl
add
or
lods
jnp
jnp
mov
pop
inc
add
push
mov
call
stos
test
dec
inc
adc
mov
jg
sub
add
add
je
jmp
dec
jl
add
cmp
sub
push
jecxz
push
int3
jmp
int3
fidiv
add
call
call
dec
adc
jmp
sub
pusha
stc
stos
cmps
xor
es
pusha
stc
movs
loopne
mov
sub
js
es
stos
mov
push
inc
inc
data16
xchg
in
add
inc
(bad)
cs
jbe
pop
test
fst
inc
out
jne
fisubr
icebp
lahf
data16
xchg
fld
es
xchg
xor
into
push
or
dec
fcomp
sub
xor
rcr
sub
xor
jne
cs
in
add
jns
sbb
lods
in
rol
es
cmp
mov
xor
jne
cs
cld
add
push
enter
inc
add
xor
jmp
stc
pop
int3
sub
pushf
sub
test
inc
add
dec
jp
aam
test
pop
fidiv
cmp
loopne
fist
jmp
jge
add
dec
je
popa
sub
aaa
lods
int3
adc
and
mov
jp
mov
xor
pop
bound
scas
fstp
(bad)
popa
call
in
jo
xlat
adc
and
mov
add
sub
arpl
cmps
mov
dec
ret
push
pop
mov
pop
shr
mov
push
inc
dec
out
icebp
add
test
add
add
outs
stos
sti
or
mov
int3
sbb
sti
dec
int3
int3
mov
orps
xchg
popf
idiv
jnp
int3
int3
bound
push
adc
lea
cld
call
add
shl
add
add
lea
and
sbb
shl
xchg
add
push
es
call
les
cld
xor
add
add
std
push
sbb
sbb
cmp
inc
push
fs
lods
jb
adc
sbb
std
jmp
es
pop
push
std
sahf
fbld
fcomp
mov
cmp
or
(bad)
adc
sub
out
rcr
loopne
out
sbb
jmp
inc
out
das
enter
inc
into
dec
pop
enter
inc
outs
xchg
cmp
add
inc
pop
sbb
push
leave
ss
mov
imul
adc
sub
adc
pop
retf
mov
sahf
xor
mov
mov
dec
inc
cmc
int3
xchg
pusha
mov
add
add
cmp
add
pop
fwait
xor
out
xor
pop
push
lea
add
mov
rcl
jmp
mov
inc
test
dec
add
cmp
popf
ror
stc
ins
scas
mov
mov
inc
add
rol
rcl
stc
mov
inc
add
cwde
mov
test
add
add
mov
frstor
xor
loopne
int3
adc
and
xor
or
inc
stc
add
or
mov
lods
or
adc
into
add
add
stc
push
pop
ret
lahf
jnp
mov
inc
add
mov
jecxz
jmp
mov
jnp
cld
mov
add
sti
cmp
out
cmp
sar
dec
jl
mov
mov
jge
cmp
(bad)
daa
xor
inc
add
pop
xor
push
ret
sar
int3
es
mov
popf
xor
lods
add
jmp
jno
std
jl
sbb
sub
push
add
cmps
mov
stc
es
add
cmps
mov
stc
es
dec
stc
es
dec
stc
es
in
pop
sbb
and
push
lods
iret
or
pusha
sbb
pop
jge
inc
or
call
push
jmp
movs
or
xchg
add
inc
fst
out
daa
lds
fwait
adc
loope
ja
test
pop
mov
into
inc
arpl
xor
xchg
push
inc
sbb
jbe
out
das
ret
es
das
scas
sbb
jecxz
or
repz
int3
popf
add
inc
ins
call
adc
sbb
add
inc
sub
add
inc
sbb
add
jbe
in
and
std
and
rcl
and
std
mov
rcl
and
std
mov
and
std
mov
rcl
and
std
mov
and
std
mov
rcl
and
std
mov
and
std
mov
rcl
and
std
mov
and
std
xor
rcl
and
std
and
rcl
and
std
xor
or
add
ror
stc
es
adc
sub
cmp
sbb
sub
mov
mov
mov
jg
outs
inc
or
lds
call
jge
js
enter
jnp
dec
aas
jp
jg
add
retf
add
or
push
dec
inc
icebp
add
scas
push
cmp
ds
push
or
icebp
add
scas
push
add
add
scas
push
adc
add
inc
icebp
add
scas
push
rol
adc
and
or
and
daa
add
and
adc
or
and
(bad)
mul
and
mul
adc
test
add
add
push
push
jge
or
pop
stc
cmp
xchg
add
(bad)
shl
fsubrp
jl
cmps
imul
xor
xchg
outs
cmps
sbb
add
dec
inc
xor
add
mov
idiv
aaa
out
loop
fwait
mov
rcr
sub
add
stos
and
pop
mov
daa
retf
sbb
jp
sbb
movs
cld
sbb
mov
inc
test
sar
push
stos
dec
(bad)
neg
mov
jbe
push
pop
mov
movs
(bad)
inc
inc
xchg
mov
add
lock
sub
xchg
xor
add
and
adc
and
call
mov
xchg
test
and
inc
add
aas
inc
(bad)
call
and
jb
xchg
xchg
mov
and
sub
sbb
gs
xchg
push
and
test
inc
jb
gs
sahf
add
jo
mov
repz
xor
add
fild
inc
iret
inc
stc
call
mov
pop
mov
das
idiv
or
aad
mov
add
clc
or
cmp
adc
mov
sbb
adc
sbb
jl
add
clc
popa
push
(bad)
repz
or
jg
test
mov
xor
jne
mov
xor
inc
cmp
add
add
inc
movs
hlt
jnp
or
idiv
cmove
jl
cli
shl
hlt
sub
call
jb
and
loope
add
loope
ror
leave
sbb
popf
leave
sbb
mov
or
add
test
stc
gs
mov
cmp
xchg
inc
clc
xchg
ins
sbb
inc
sbb
lahf
push
and
sbb
fstp
scas
and
out
scas
push
stc
lods
push
and
popa
pop
and
sbb
call
add
clc
stos
adc
mov
ret
push
data16
inc
(bad)
out
imul
imul
es
call
add
inc
loop
es
loop
es
retf
inc
and
inc
pop
add
inc
rol
inc
retf
inc
ret
inc
mov
pop
es
stos
neg
mov
xlat
dec
push
xchg
push
es
mov
push
adc
jp
daa
inc
add
cmp
outs
jno
add
dec
add
mov
push
pop
or
dec
push
or
inc
pop
or
cmp
jns
or
jno
sbb
jns
cmp
jno
jns
pop
or
mov
jb
movs
sbb
pushf
nop
and
lods
mov
enter
and
jl
sbb
inc
or
jbe
imul
push
add
adc
jmp
add
fdivr
lds
adc
xchg
sbb
xchg
sbb
(bad)
aas
add
(bad)
mov
dec
mov
and
add
xchg
sub
mov
xor
dec
jecxz
adc
push
cmp
cmc
sbb
add
sbb
inc
jle
and
add
leave
cmps
or
pop
sar
sbb
lods
jecxz
enter
stos
cli
repz
(bad)
repz
mov
lock
es
jmp
das
hlt
sub
nop
cli
inc
popf
sar
fisub
push
(bad)
imul
lods
cmp
es
add
push
lods
dec
push
fbstp
sub
xor
in
cld
pop
es
cmp
add
inc
or
cmps
inc
loop
or
leave
das
cmps
mul
imul
add
add
in
cld
jmp
jmp
and
add
sbb
in
jl
shr
addr16
inc
in
ret
mov
out
and
in
jno
out
es
out
js
punpckhwd
jnp
adc
imul
stos
push
or
cmc
into
jmp
lock
push
pop
sub
add
add
scas
iret
xlat
add
dec
out
icebp
ja
out
push
or
lods
and
add
hlt
mov
enter
inc
addr16
js
push
push
jbe
jge
add
stos
ror
ret
jae
mov
int
jb
xlat
retf
jmp
push
leave
push
int
xor
in
dec
sub
xor
add
add
and
or
pop
mov
inc
fcmovb
retf
sar
push
jmp
add
call
shl
and
xchg
xor
cmp
pop
sub
leave
retf
inc
add
cmp
inc
add
fs
iret
fs
xor
sbb
cmp
add
(bad)
rcr
popf
and
mov
dec
std
leave
mov
xchg
cdq
movs
mov
xchg
idiv
dec
(bad)
stc
je
push
jl
neg
mov
xor
sbb
inc
dec
jnp
mov
push
sti
xchg
dec
jnp
mov
idiv
mov
or
es
jmp
jmp
loopne
add
add
dec
inc
std
addr16
and
data16
je
stc
dec
xchg
les
stos
int3
add
es
std
jmp
jmp
loopne
or
mov
jle
adc
stc
or
test
sbb
fbld
and
push
inc
or
cmp
push
adc
pop
dec
sbb
or
mov
mov
jnp
std
cli
pop
push
pop
sub
dec
dec
sub
movs
popf
neg
out
jge
das
jge
daa
pop
or
cli
daa
adc
outs
retf
and
cmp
push
or
sub
retf
idiv
test
movntps
sbb
jmp
add
sub
push
iret
or
jne
sbb
repnz
jl
repnz
pop
xor
cmp
add
add
outs
and
ret
dec
xchg
daa
or
fs
outs
and
dec
mov
out
das
jl
sub
pop
cdq
into
jmp
pop
mov
push
mul
or
add
push
and
shr
dec
aad
pop
jl
out
sbb
mov
ins
(bad)
rcr
(bad)
mov
stc
(bad)
ss
adc
inc
add
stc
and
lahf
in
jmp
inc
test
arpl
jno
and
dec
dec
je
fcom
mov
scas
bound
call
mov
mov
mov
add
data16
mov
aaa
add
repz
mov
mov
sub
lfs
ja
aam
jnp
sar
fdivr
adc
data16
leavew
xlat
lock
test
inc
add
mov
cld
retf
rcr
ror
mov
call
sbb
stc
add
je
sub
sub
and
cmp
jp
iret
inc
add
or
loopne
inc
inc
mov
xor
inc
jnp
es
movs
sub
shl
inc
bound
stc
and
inc
(bad)
cli
rol
inc
inc
fsubr
and
std
test
call
inc
add
nop
ja
or
push
add
int
test
xchg
les
mov
outs
or
fidivr
sub
mov
out
test
push
int3
loopne
dec
test
aad
or
outs
or
inc
ss
das
jp
and
shl
jmp
cmp
sti
icebp
dec
mov
or
ja
outs
xlat
inc
cmp
inc
pop
mov
ja
adc
jno
sbb
jb
sbb
inc
js
das
xchg
pop
fdivr
mov
push
ret
sbb
out
es
and
add
adc
imul
pop
sbb
ds
or
sbb
into
mov
push
iret
jmp
push
and
push
push
jmp
and
or
ds
inc
push
cmc
and
adc
in
inc
(bad)
outs
and
stc
xchg
and
rcr
cli
(bad)
fnsave
mov
and
lods
pop
cmp
and
inc
add
popa
cli
mov
and
shl
mov
adc
stc
mov
and
mov
(bad)
frstor
rol
test
push
lock
cmp
inc
sar
int
aad
mov
mov
js
sbb
xchg
sti
sub
jg
add
js
js
cmp
cmp
pop
sub
ins
adc
xchg
sbb
mov
add
dec
xchg
sbb
loop
mov
mov
dec
inc
add
lods
mov
cmp
cmp
jg
jle
std
outs
and
sbb
mov
outs
or
jnp
hlt
ja
add
xchg
and
xchg
daa
jge
cmc
jnp
sub
and
mul
jg
jmp
add
je
bsr
sbb
cdq
sub
daa
in
cld
call
stos
addr16
jecxz
movs
mov
bound
jnp
movs
mov
test
sbb
and
test
pop
adc
xchg
jle
mov
xchg
jne
fidiv
lahf
and
push
jnp
xor
je
inc
dec
add
inc
loop
xor
dec
bound
add
bound
mov
stos
jno
jl
int
inc
outs
inc
out
es
test
add
mov
push
mov
outs
in
in
ins
cmp
cmp
hlt
sbb
add
ret
out
stos
push
pusha
std
mov
ds
inc
jl
and
inc
out
retf
ins
add
pop
js
or
inc
jae
jmp
fisubr
mov
clc
jmp
jmp
outs
dec
test
push
and
push
dec
jb
and
fs
jp
ins
imul
push
imul
fwait
jge
out
cdq
test
mov
mov
clc
jmp
xchg
add
and
add
add
test
mov
clc
out
neg
test
xor
sub
xor
sub
sar
clts
sbb
nop
cld
aas
seto
inc
inc
inc
movmskps
aas
data16
test
lea
sub
ss
(bad)
sub
xlat
add
pusha
dec
iret
inc
mov
add
mov
inc
in
push
mov
sub
inc
add
(bad)
add
mov
sub
dec
cmp
add
jnp
cli
popf
mov
call
pop
jbe
xor
jae
repz
cmps
sub
jae
test
fldl2e
cld
int3
(bad)
jae
out
cmp
arpl
shr
add
add
jle
daa
sar
cmp
jmp
jge
and
idiv
imul
cld
push
push
(bad)
jns
jne
adc
jge
jno
es
shr
mov
aas
es
test
fidiv
xor
gs
jle
mov
mov
stos
add
js
add
add
sar
leave
jp
push
ds
add
sub
ins
push
pop
cmp
(bad)
pop
cmp
test
out
mov
pop
cli
js
fld
popa
shl
jnp
pop
clc
mov
iret
out
es
(bad)
xor
aad
jae
dec
lods
out
es
add
mov
jae
mov
and
and
(bad)
mov
std
adc
std
cwde
jl
clc
xor
inc
popa
and
xchg
jmp
in
clc
jmp
and
out
or
jmp
mov
push
jb
or
xor
loop
clc
jb
(bad)
sbb
in
retf
push
ja
mul
enter
add
add
jle
add
adc
mov
adc
lea
or
add
cmovbe
ror
sub
push
mov
adc
nop
add
sub
mov
cmp
xor
in
shr
ror
iret
inc
add
push
cdq
adc
cmp
add
fisttp
add
jnp
lea
(bad)
jg
bound
aam
mov
imul
loop
add
sub
out
mov
fmul
shl
and
mov
inc
push
push
loopne
xor
or
(bad)
pcmpgtd
push
lods
lahf
or
sub
inc
out
gs
fwait
test
arpl
add
popf
cmps
adc
dec
je
sub
sti
sbb
cld
jmp
test
mov
shl
jg
dec
add
es
mov
mov
mov
(bad)
aas
dec
lock
(bad)
(bad)
out
mov
aas
das
lock
lahf
push
out
mov
aas
pop
lock
jg
icebp
mov
rcr
add
add
out
jns
lods
rol
(bad)
cld
arpl
imul
rol
lods
mov
push
xchg
movs
hlt
sub
mov
push
aas
lahf
out
arpl
and
out
add
es
out
movs
clc
push
out
test
push
xchg
clc
(bad)
out
cld
clc
gs
test
and
rol
add
add
inc
add
fdiv
jmp
dec
jge
sahf
data16
shl
mov
sub
jae
stos
and
inc
add
xchg
test
lods
jae
test
jae
repnz
popa
sub
sub
push
xchg
push
int3
sbb
icebp
dec
sub
out
test
ja
push
add
test
xor
add
add
add
adc
add
lods
hlt
mov
aad
and
inc
add
les
push
pop
ret
ret
or
mov
test
out
jbe
mov
add
cwde
lods
pop
test
lods
adc
inc
push
adc
sbb
jns
cmovo
ins
lock
adc
add
sub
(bad)
pop
mov
inc
fistp
aaa
push
int3
push
push
int3
bound
push
popf
out
sub
fdivr
push
jno
pop
stc
popa
ror
mov
daa
stos
push
mov
cmp
lds
out
cmps
(bad)
mov
(bad)
add
(bad)
or
ficom
fistp
je
add
add
add
dec
cmp
pop
in
mov
dec
cmps
dec
inc
add
(bad)
(bad)
mov
inc
inc
xor
mov
or
in
jne
repnz
jl
inc
mul
add
inc
pusha
loopne
mov
out
es
pop
inc
add
push
push
aaa
cmc
cmp
xchg
mov
push
pop
shl
outs
inc
push
push
cdq
cmp
add
out
es
jmp
mov
xchg
push
rcr
xchg
sti
and
fs
dec
cmp
sbb
retf
jmp
(bad)
sbb
push
aad
add
loop
or
jns
test
lahf
test
clc
jb
push
push
xchg
push
in
push
frstor
ins
or
jo
test
sahf
push
call
adc
jne
jmp
test
xchg
dec
sbb
adc
popa
cmp
call
pop
xor
xchg
adc
imul
in
mov
cmp
add
dec
push
mov
dec
adc
or
scas
xor
stos
jecxz
retf
fs
mov
inc
mov
aaa
scas
adc
push
stc
push
mov
mov
leave
jne
jmp
jo
jmp
lods
or
mov
mov
or
mov
adc
cvtps2pi
jl
or
(bad)
mov
cmp
pop
jmp
mov
mov
lods
mov
adc
push
xor
adc
(bad)
push
test
inc
mov
dec
test
dec
and
cmp
data16
repz
pop
xchg
loop
xchg
adc
xchg
push
cli
aad
inc
mov
jbe
setg
out
cdq
xor
adc
pop
mov
add
add
stos
fidiv
dec
repnz
ins
xor
sti
lods
inc
fcom
test
jmp
gs
mov
pop
(bad)
movs
imul
(bad)
mov
adc
test
jmp
pop
stos
jmp
or
inc
jb
xchg
shl
mov
and
xor
(bad)
xor
pusha
mov
cs
es
mov
fld
and
and
fild
call
retf
rep
mov
mov
add
fimul
stc
and
addr16
xor
push
cld
outs
add
lock
je
jne
popf
xor
lods
jl
push
inc
add
inc
test
and
inc
add
add
add
call
add
pop
mov
and
add
ss
nop
mov
mov
and
inc
add
sbb
jmp
xchg
inc
in
clc
xor
pop
sbb
test
add
out
push
div
sbb
dec
jnp
fisttp
adc
add
jg
mov
add
es
adc
scas
(bad)
adc
push
aas
push
ret
dec
push
nop
je
fistp
not
in
push
pop
jl
loope
pop
mov
inc
aas
inc
sub
sub
sub
sbb
sub
enter
mov
inc
bound
es
lds
fcmovnbe
out
fdivr
dec
aad
in
test
add
add
into
dec
rol
fst
mov
pop
inc
or
sbb
loop
dec
int3
ficom
dec
int3
jb
xor
daa
jge
cs
pop
cmc
jno
adc
popa
lods
pop
xor
adc
mov
jmp
(bad)
std
jo
or
cmp
or
push
fiadd
xor
xor
(bad)
ror
add
add
inc
daa
add
out
ins
fcomp
in
mov
(bad)
pusha
ror
ins
xor
pushf
enter
inc
rcpps
stos
lea
mov
pusha
rcl
cmp
push
in
ss
add
add
shl
sbb
inc
cmps
jmp
inc
add
add
jmp
mov
mov
adc
or
dec
add
bound
or
pop
ja
jb
xlat
pop
aas
(bad)
loop
addr16
add
ds
or
pusha
cmp
sub
add
xchg
inc
push
inc
outs
loopne
jmp
jmp
call
sub
add
add
add
dec
test
fld
xchg
push
test
enter
(bad)
fisubr
fild
add
inc
add
mov
or
sbb
xchg
or
into
fmul
(bad)
cmp
outs
int3
inc
or
dec
push
sbb
mov
push
cmc
add
dec
adc
inc
add
add
inc
or
test
push
movs
idiv
pusha
cs
call
mul
inc
add
iret
inc
int3
int3
mov
int3
inc
and
dec
sar
adc
fcomp
jnp
aas
pop
inc
and
pop
push
and
fnstsw
or
stc
mov
jp
or
(bad)
mov
jnp
inc
inc
jnp
dec
inc
stc
mov
dec
sar
inc
push
int
pop
jns
lods
das
call
int
lods
jns
lods
scas
loopne
lods
lahf
loopne
popf
cmps
loopne
xlat
jbe
xlat
ja
push
fsubr
sbb
lock
iret
loopne
lods
adc
inc
shl
or
shl
psubusb
mov
dec
out
push
loop
push
fldcw
rol
add
add
add
adc
ret
ret
loope
data16
add
dec
stos
cmp
inc
pusha
sbb
or
add
ds
cmp
inc
jo
cdq
or
add
push
sub
or
adc
data16
ror
cmps
add
imul
test
push
inc
sar
mov
cmps
add
test
jle
add
add
inc
inc
push
outs
test
jmp
fisttp
cmp
mov
or
jmp
neg
shr
or
call
and
fld
push
add
add
jmp
(bad)
call
push
add
cld
sti
idiv
xchg
clc
dec
mov
stc
fadd
inc
jmp
mov
fst
cmp
inc
add
aaa
xor
clc
fisttp
adc
push
add
test
int3
mov
inc
and
loopne
jne
popa
dec
and
pusha
inc
and
fmul
test
add
ficomp
mov
enter
fs
inc
leave
jmp
popa
enter
or
add
add
cmps
jno
shl
xchg
in
neg
mul
out
mov
pusha
inc
and
sbb
add
cdq
push
cmp
cwde
pop
cmp
out
jbe
add
inc
adc
sub
cs
and
fimul
outs
imul
lods
add
popf
scas
leave
mov
repnz
mov
stos
mov
dec
int
inc
cmp
sub
lahf
sub
xchg
xlat
dec
jbe
retf
pop
jg
ds
push
push
mov
repnz
inc
int3
jmp
push
popf
pop
jne
cs
mov
ss
lahf
add
out
jecxz
mov
inc
out
jle
xor
add
sbb
jnp
jg
inc
jb
mov
push
stos
aas
bound
pop
cs
mov
mov
(bad)
sbb
ja
jb
daa
adc
or
pop
fstp
push
mov
retf
sub
jmp
por
push
dec
bnd
mov
dec
add
ret
push
add
inc
add
fdivr
outs
and
add
add
pop
push
inc
fist
in
cmp
inc
and
pop
add
clc
nop
pop
sar
in
sbb
ficomp
call
push
(bad)
rol
rol
inc
test
push
add
in
inc
shl
fwait
test
arpl
clc
mov
and
daa
or
daa
adc
std
ror
add
add
push
pop
(bad)
fisub
add
inc
call
adc
add
sub
xlat
hlt
or
shl
imul
div
les
sbb
adc
and
call
inc
sub
sar
dec
add
cmp
push
icebp
lea
add
add
adc
inc
add
mov
lock
add
or
xor
push
push
cld
pop
not
sbb
sbb
sub
xor
add
dec
mov
mov
jno
add
nop
aas
stc
or
aas
mov
es
add
test
inc
adc
hlt
repnz
and
ret
test
enterw
shl
push
push
shl
pushf
sbb
std
pushf
sbb
(bad)
(bad)
cmp
push
xor
push
data16
bound
mov
in
cmp
rol
sar
or
mov
fcom
inc
push
inc
(bad)
aas
cli
test
lahf
mov
es
rol
add
add
xor
cwde
add
jno
jle
fld
dec
je
shr
leave
sub
aam
addr16
out
ret
int3
sbb
retf
repz
inc
out
dec
jp
cmp
pop
xor
add
pop
stos
aaa
fiadd
add
(bad)
jmp
cld
(bad)
jmp
dec
(bad)
add
pop
add
fst
add
and
(bad)
pop
lea
add
push
add
and
(bad)
retf
add
rcr
add
and
(bad)
sbb
sbb
jmp
dec
(bad)
ja
pop
add
pop
add
and
(bad)
jbe
pop
add
pop
add
and
(bad)
add
add
cmp
add
sub
cmp
push
pop
cmp
mov
sub
push
push
cmp
out
cmp
jg
add
cmp
inc
add
inc
add
add
cmp
inc
add
inc
add
cmp
(bad)
jnp
inc
add
xchg
aas
inc
add
clc
sub
call
inc
add
inc
add
inc
add
mov
imul
inc
add
scas
daa
stc
fst
dec
inc
es
cld
jmp
dec
sub
mov
mov
cld
jmp
outs
sub
cdq
bound
inc
es
aaa
inc
es
cld
jmp
push
sub
jns
xor
lods
xor
in
cld
jmp
cwde
sub
sbb
mov
xor
cld
pop
pop
in
cld
pop
pop
in
cld
push
pop
in
cld
push
pop
in
cld
arpl
jmp
fwait
aaa
jmp
xchg
jmp
xor
cld
aas
pop
jmp
cmp
jmp
aaa
pop
inc
out
xor
out
push
out
pop
xor
add
xor
add
cmp
add
xor
add
xor
add
xor
add
xor
add
out
cli
xor
add
xor
add
xor
add
xor
add
out
outs
xor
add
out
sub
out
sbb
out
(bad)
xor
add
xor
add
out
pop
xor
add
out
push
xor
add
xor
add
xor
add
xor
add
xor
add
xor
jmp
and
nop
psubsw
fmul
jmp
and
movs
psubsw
mov
add
and
mov
psubsw
add
jmp
and
pop
adc
and
ror
and
or
and
xor
jmp
and
inc
psubsw
ror
jmp
inc
adc
dec
les
cmovs
adc
inc
mov
adc
add
add
inc
mov
iret
inc
mov
mov
inc
test
iret
inc
xor
iret
inc
sub
mov
inc
and
pop
adc
inc
sbb
jg
adc
pop
adc
inc
or
jg
add
dec
inc
add
dec
inc
cld
(bad)
inc
clc
(bad)
inc
hlt
cmovg
cmovg
(bad)
inc
push
adc
inc
aam
cmova
add
(bad)
movs
ss
mov
sbb
cld
(bad)
pop
(bad)
mov
sbb
cld
sub
(bad)
mov
and
cld
mov
(bad)
mov
(bad)
mov
(bad)
scas
and
cld
stos
sbb
cld
cmps
xor
cld
mov
and
cld
fwait
sbb
cld
xchg
xor
cld
xchg
sub
cld
(bad)
and
cld
mov
(bad)
xchg
(bad)
sub
cld
jg
add
add
(bad)
jnp
(bad)
ja
(bad)
aam
(bad)
loope
(bad)
retf
pop
inc
out
out
inc
out
jbe
out
bound
add
out
push
out
inc
out
xor
add
inc
out
sbb
add
inc
out
add
add
inc
out
ins
xor
add
inc
out
add
add
inc
out
dec
inc
out
inc
inc
out
xor
add
add
add
inc
out
sbb
add
inc
out
and
add
inc
out
es
out
push
inc
out
dec
inc
out
cmp
add
xor
jmp
and
jl
jmp
and
in
or
and
clc
or
and
cld
or
and
add
jmp
and
add
add
cwde
or
and
mov
or
and
movs
or
and
lods
or
and
lock
and
clc
or
and
add
jmp
dec
inc
les
dec
inc
ror
aas
inc
iret
push
aas
inc
scas
(bad)
cmove
inc
jle
inc
ud0
push
cmove
add
inc
ins
ud0
push
inc
bswap
inc
inc
push
iret
inc
inc
push
mov
inc
push
push
iret
inc
and
mov
inc
sbb
pop
push
pop
movq
movq
push
pop
push
pop
pop
jg
mov
sbb
cmps
sbb
and
es
ja
(bad)
fstp
(bad)
cs
cld
repz
add
and
cld
out
sbb
cld
jmp
(bad)
out
(bad)
jecxz
(bad)
fistp
(bad)
(bad)
(bad)
xlat
sub
cld
mov
cld
or
(bad)
shl
cld
(bad)
sub
cld
mov
sbb
cld
mov
(bad)
mov
(bad)
jns
(bad)
stos
sbb
cld
in
cmp
cld
xor
(bad)
lahf
and
cld
fwait
sbb
cld
sub
(bad)
push
push
(bad)
(bad)
and
cld
mov
add
add
(bad)
xchg
inc
out
mov
inc
out
retf
add
xor
add
out
das
xor
add
out
jb
out
int3
cmp
out
pop
aas
out
push
aas
out
push
aas
out
pop
aas
out
test
out
lods
cmp
out
(bad)
ds
test
out
push
aas
out
or
out
ds
out
xor
out
ss
out
sbb
out
cs
out
and
out
movs
cmp
jmp
and
fmul
jmp
and
fmul
jmp
and
sub
jmp
and
or
jmp
and
push
or
and
nop
or
and
add
add
xchg
or
and
pushf
or
and
xchg
or
and
pushf
or
and
movs
or
and
ror
add
inc
mov
push
dec
inc
rcl
aas
inc
(bad)
push
aas
inc
ror
dec
inc
into
push
dec
inc
retf
inc
pusha
or
inc
pop
or
dec
pop
or
dec
push
or
add
add
inc
push
or
inc
dec
or
dec
dec
or
dec
inc
or
inc
inc
or
inc
cmp
iret
inc
cmp
inc
xor
mov
inc
sub
iret
inc
sub
inc
and
mov
inc
sbb
pop
or
inc
adc
jg
adc
(bad)
or
(bad)
pop
sub
cld
add
(bad)
call
(bad)
sti
sub
(bad)
repz
add
add
(bad)
out
(bad)
jecxz
(bad)
fistp
(bad)
xlat
sub
(bad)
iret
sbb
(bad)
(bad)
sub
(bad)
mov
sub
(bad)
mov
(bad)
(bad)
sbb
(bad)
cmps
sub
(bad)
lahf
sbb
(bad)
adc
inc
out
mov
out
mov
out
mov
out
scas
ds
call
add
ds
inc
cmp
add
out
(bad)
ds
sar
out
into
ds
retf
add
out
sar
out
movs
cmp
add
cmp
add
cmp
out
mov
out
scas
cmp
out
cmps
cmp
out
ds
out
push
cmp
add
jmp
and
cmp
jmp
and
enter
int3
add
jmp
and
fadd
jmp
and
fadd
jmp
and
push
or
and
hlt
add
jmp
and
pop
add
jmp
mov
inc
mov
or
inc
xchg
or
nop
or
inc
mov
jg
test
jg
or
inc
mov
dec
inc
in
push
aas
inc
je
aas
inc
jo
dec
inc
ins
or
push
or
add
add
inc
pusha
or
inc
pop
or
inc
pop
or
inc
push
or
inc
push
or
inc
dec
or
inc
dec
or
inc
ror
inc
or
inc
dec
or
inc
dec
or
inc
inc
or
(bad)
cmp
cld
xor
cld
sbb
cld
adc
cld
or
cld
add
add
sub
cld
sti
das
(bad)
neg
(bad)
repz
(bad)
out
das
(bad)
jmp
(bad)
out
(bad)
jecxz
(bad)
fild
(bad)
fld
(bad)
xlat
pop
(bad)
rcr
(bad)
iret
das
(bad)
retf
das
(bad)
sbb
ret
pop
(bad)
mov
das
(bad)
mov
inc
out
xchg
cmp
add
out
mov
add
out
cmp
mov
add
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
out
jb
out
push
cmp
add
out
pop
cmp
add
out
cmp
jmp
and
adc
jmp
and
mov
jmp
and
mov
add
and
sbb
pop
jmp
and
pop
add
jmp
and
aam
jmp
and
jbe
jmp
and
aad
jmp
and
fld
jmp
and
inc
sub
iret
inc
ror
iret
inc
int
mov
inc
lds
iret
inc
push
or
inc
adc
mov
inc
or
pop
or
inc
test
or
inc
popf
or
out
or
xchg
or
xchg
or
lea
aas
inc
mov
aas
inc
test
dec
inc
or
aas
inc
jns
aas
inc
jne
cmovs
cmovs
inc
or
inc
mov
or
lods
cld
mov
lods
cld
mov
lods
cld
lods
sub
cld
test
sbb
cld
mov
sub
cld
cdq
sub
cld
xchg
sbb
cld
xchg
sbb
cld
lea
cld
test
cld
jge
lods
cld
jns
add
add
cld
jno
lods
cld
ins
sub
cld
imul
cld
pop
sub
cld
pop
sub
cld
push
sbb
cld
push
sbb
cld
dec
sub
cld
dec
sub
cld
inc
sbb
cld
inc
sbb
out
inc
dec
out
cmp
out
cmp
add
out
adc
add
out
or
add
out
and
add
out
sbb
add
out
xor
add
out
sub
add
out
or
dec
out
js
out
je
out
push
dec
out
dec
dec
out
dec
dec
out
inc
dec
out
pusha
dec
out
pop
dec
out
pop
dec
out
push
dec
out
lock
out
in
dec
add
and
xchg
jmp
and
cli
push
jmp
and
repnz
jmp
and
out
jmp
and
fiadd
jmp
and
into
push
jmp
and
inc
pop
jmp
and
ss
jmp
and
sub
jmp
and
push
pop
jmp
and
add
add
inc
dec
or
inc
inc
or
inc
inc
or
inc
or
inc
cmp
cmovne
or
inc
xor
inc
iret
inc
sub
iret
inc
or
inc
push
or
inc
sbb
iret
inc
push
or
inc
push
or
inc
push
or
add
jg
dec
pop
pop
jg
repnz
out
or
jmp
add
add
out
aas
inc
loop
aas
inc
fimul
dec
inc
fimul
dec
inc
(bad)
or
stos
cld
aad
stos
cld
shr
lods
cld
int
lods
cld
leave
push
lods
cld
lds
lods
cld
shr
cld
mov
push
lods
cld
mov
lods
cld
mov
lods
cld
lods
lods
cld
test
push
lods
cld
mov
lods
cld
cdq
push
lods
cld
xchg
push
lods
cld
xchg
lods
cld
lea
lods
cld
mov
add
add
lods
cld
test
lods
cld
sub
lods
cld
jns
lods
cld
jne
lods
cld
jno
lods
cld
ins
lods
cld
imul
lods
cld
popa
cs
out
fmul
add
dec
out
ror
add
add
out
pop
dec
out
pusha
dec
out
fs
out
cmp
sub
out
xor
adc
out
or
cld
dec
out
add
add
out
sbb
or
out
adc
xor
out
sub
aas
inc
out
inc
inc
out
and
out
js
out
ins
inc
out
jo
out
push
inc
out
dec
inc
out
cmp
add
and
mov
add
and
xchg
add
and
mov
jmp
and
add
add
inc
jmp
and
repnz
and
daa
add
and
pop
add
and
pop
add
and
lsl
and
retf
and
ret
and
ja
jmp
and
inc
daa
add
aas
inc
bound
dec
inc
pop
pop
dec
inc
pop
pop
aas
inc
push
pop
aas
inc
push
pop
cmovno
cmovno
inc
add
cmovno
add
inc
cmp
inc
pop
inc
pop
iret
inc
cs
iret
inc
sub
mov
inc
and
iret
inc
push
pop
iret
inc
sbb
mov
inc
adc
pop
pop
pop
pop
jg
push
pop
jg
add
pop
push
pop
push
jg
test
stos
cld
cmc
sub
cld
in
sub
cld
in
stos
cld
loope
stos
cld
(bad)
stos
cld
fldenv
stos
cld
aad
lods
cld
shl
lods
cld
int
lods
cld
test
lods
cld
sub
cld
jl
lods
cld
mov
and
cld
mov
lods
cld
lods
sub
cld
movs
sub
cld
popf
sub
add
and
cld
xchg
and
cld
mov
lods
cld
test
lods
cld
and
inc
out
in
inc
out
fadd
add
inc
out
rol
mov
inc
out
les
add
inc
out
int3
inc
out
js
out
je
out
pusha
inc
out
and
add
inc
out
sti
inc
out
out
inc
out
sub
out
sbb
add
out
add
add
inc
out
or
add
out
adc
add
out
cmp
add
out
and
add
add
and
inc
add
and
mov
add
and
stos
add
and
mov
add
and
sahf
add
and
add
add
mov
jmp
and
xchg
jmp
and
repnz
and
jmp
and
out
jmp
and
rol
jmp
jg
mov
pop
add
jg
jp
jg
jbe
dec
inc
jb
dec
inc
outs
add
aas
inc
push
aas
inc
add
bound
aas
inc
pop
add
cmovne
cmovne
inc
inc
cmovne
cmovne
add
inc
iret
inc
xor
mov
inc
es
iret
inc
push
add
mov
stos
cld
adc
sub
add
and
cld
add
sub
cld
stc
sub
cld
icebp
sub
cld
jmp
and
cld
frstor
stos
cld
fldcw
lods
cld
aad
lods
cld
shr
lods
cld
int
lods
cld
leave
sub
cld
shr
cld
mov
sub
cld
mov
lods
cld
lods
and
add
sub
cld
mov
mov
add
out
mov
out
cwde
inc
out
lods
inc
out
mov
inc
out
call
aas
out
sar
out
aam
out
mov
aas
out
sar
add
aas
out
enter
jl
out
jo
out
je
out
pop
inc
out
ins
inc
out
pusha
inc
out
fs
out
sub
add
out
adc
add
out
clc
aas
out
or
add
and
bound
and
pop
add
and
push
add
and
dec
add
and
inc
add
and
mov
cld
call
and
stos
cld
call
and
xchg
cld
call
and
xchg
cld
call
and
pop
(bad)
call
and
inc
(bad)
call
and
inc
std
add
inc
stc
add
inc
cmc
add
inc
in
add
inc
in
jg
loope
jg
fld
pop
add
inc
rol
jg
int
dec
inc
retf
inc
lds
aas
inc
rol
inc
mov
add
mov
aas
inc
mov
aas
inc
lods
add
inc
test
add
inc
mov
add
inc
push
(bad)
jp
xchg
jbe
and
jne
add
inc
add
es
add
stos
cld
jmp
sahf
cmp
imul
and
sbb
adc
add
sub
clc
clc
jbe
add
inc
inc
xchg
mov
jl
jge
mov
cmp
cld
jmp
and
sbb
int
inc
data16
jmp
les
cmp
inc
sbb
add
inc
cmp
jge
and
clc
jl
cmps
clc
xchg
inc
loopne
pushf
or
es
cld
call
mov
inc
and
push
cmc
xchg
add
add
test
mov
xchg
daa
fs
and
std
add
add
add
sti
icebp
and
fld
and
xchg
daa
fs
ror
in
dec
cmp
and
in
ds
and
mov
add
add
or
inc
mov
mov
(bad)
jnp
push
cmp
out
or
icebp
out
and
add
mov
lods
clc
mov
clc
jmp
in
add
out
inc
retf
jnp
test
add
dec
add
out
jnp
gs
pop
sub
inc
jge
inc
inc
mov
sub
lods
inc
or
xor
in
push
fsubr
stc
movs
push
leave
inc
add
mov
xchg
inc
mov
inc
int
add
iret
mov
inc
sbb
jnp
sub
ins
and
sti
sbb
add
jge
push
ins
push
out
stc
dec
push
scas
or
cmp
add
mov
add
imul
inc
cmp
ins
push
test
add
scas
or
retf
clc
xchg
mov
jl
popf
in
(bad)
cmp
inc
es
mov
add
inc
sbb
xor
loop
add
fiadd
jl
or
in
sub
add
add
push
call
in
mov
out
sar
clc
movs
push
or
adc
std
mov
fiadd
jl
mov
dec
sbb
add
mov
dec
sbb
and
ja
movs
inc
lods
es
cmp
call
add
scas
and
add
inc
out
stos
les
loope
jmp
add
cmp
jmp
scas
rol
ret
cmp
push
cmp
jmp
lods
test
add
inc
cmps
test
daa
ja
pushf
outs
add
inc
cmps
test
inc
(bad)
jbe
ret
sub
inc
dec
es
in
ficom
js
scas
dec
(bad)
in
call
and
cmp
mov
add
call
dec
dec
mov
xchg
das
pushf
push
jmp
jno
sbb
inc
retf
jl
add
shl
adc
cmp
scas
mov
pop
add
and
add
in
mov
das
jnp
inc
xor
push
push
add
push
jnp
and
add
mov
cmps
(bad)
call
lods
clc
dec
push
jnp
cmp
ins
push
xlat
mov
push
xchg
jnp
inc
test
mov
call
or
add
pop
and
push
sar
ret
lods
imul
mov
ret
or
inc
lds
and
sbb
jl
jne
mov
out
add
add
lods
idiv
mov
cld
sbb
or
stc
pop
jae
call
call
int3
ret
jp
add
add
sbb
and
jp
pushf
ja
ds
clc
and
inc
cmp
inc
sbb
in
pop
cld
add
in
xchg
cli
inc
stc
jl
xchg
cld
jb
and
daa
call
or
movs
movhlps
push
popf
in
sar
lods
pop
push
jmp
jge
add
(bad)
clc
mov
stc
xchg
sbb
call
xor
daa
push
(bad)
mov
pop
inc
data16
add
cmp
xor
dec
or
stos
and
xchg
jecxz
lods
and
inc
test
inc
add
add
inc
call
jmp
fld
inc
es
scas
loope
leave
inc
(bad)
into
(bad)
push
push
es
cmp
or
fsub
add
(bad)
xor
sub
pop
mov
mov
cdq
std
retf
push
xor
out
movs
mov
push
xor
clc
jmp
dec
call
add
sbb
push
jmp
call
sub
cmp
pop
test
cli
push
sti
out
test
inc
jae
cmps
sub
out
fld
adc
push
inc
call
stos
cmps
sub
jge
sbb
jae
xchg
pusha
cli
scas
call
jmp
dec
jge
aaa
add
add
jne
jg
or
dec
test
dec
mov
inc
sub
cmp
out
in
imul
sub
sub
add
aas
call
ret
xchg
add
add
fs
in
inc
mov
call
push
repz
fsubr
jbe
iret
xor
out
stos
idiv
jl
jne
int
(bad)
out
stos
idiv
jl
jne
mov
stos
idiv
int3
shl
xor
out
stos
idiv
fiadd
add
idiv
imul
jbe
dec
and
clc
push
pop
mov
pushf
aas
sbb
add
jp
fwait
outs
add
jg
clc
sbb
jp
pushf
outs
add
mov
cmp
out
cli
clc
jmp
daa
push
call
in
js
and
nop
cmc
clc
in
js
sub
call
movs
outs
or
adc
inc
mov
adc
cmps
mov
mov
add
and
fsubr
es
jno
fisub
fld
fidiv
dec
push
dec
test
(bad)
dec
cmps
push
cli
test
sbb
es
inc
add
pushf
add
push
test
js
inc
pushf
add
movs
sbb
inc
xchg
add
xchg
add
out
and
inc
jl
into
sub
into
ret
arpl
retf
xor
stc
jp
dec
adc
test
stc
loop
push
xor
jae
jge
mul
sub
sub
imul
fild
add
arpl
jnp
daa
xor
push
into
scas
clc
pop
stos
sub
jmp
clc
sub
sbb
ds
call
inc
or
sahf
pushf
and
stos
jl
pop
inc
jae
std
adc
push
out
out
jl
cmps
jae
int
cld
out
into
out
fs
jae
int
not
mov
cmp
add
ja
cld
call
jg
jge
add
add
ins
sbb
sbb
push
xchg
stos
test
loopne
mov
(bad)
jl
jne
cmp
idiv
or
jne
dec
adc
idiv
dec
shl
pop
or
pop
test
add
fwait
pop
call
ret
jl
push
pop
push
jnp
int
ins
adc
in
inc
shl
add
add
idiv
es
mov
jbe
mov
jmp
out
repz
movs
pusha
or
sti
scas
in
jle
lock
mov
add
rol
jl
mov
jae
adc
inc
push
jge
sub
add
ds
clc
and
jp
cdq
outs
adc
jnp
clc
or
ja
and
fwait
cld
out
push
icebp
clc
in
ja
and
mov
clc
movs
pop
pop
std
push
inc
ss
add
push
push
sub
loope
imul
cmp
and
lods
test
add
jae
push
jae
xchg
ret
icebp
std
hlt
push
pop
pop
movs
jns
fdivr
out
cmp
cmp
add
pushf
pop
out
movs
cmp
neg
mov
xor
and
lods
enter
gs
inc
pushf
adc
jbe
imul
mov
cmc
fneni(8087
jl
sbb
lock
pop
sar
(bad)
and
daa
pop
xadd
xchg
clc
scas
cmps
push
push
jmp
clc
stos
cmps
push
adc
clc
push
call
push
dec
std
sti
sub
push
cmps
cdq
clc
pop
addr16
pop
sbb
sub
push
sbb
jmp
inc
les
sub
add
push
call
and
pop
add
xchg
iret
ret
mov
inc
mov
xor
sub
cmp
sldt
add
push
mov
test
data16
push
add
sbb
loope
test
inc
add
add
std
shr
xchg
cmp
cmp
pop
jne
scas
cli
stc
fcom
pop
mov
pop
movs
je
pop
lahf
je
pop
cmps
je
pop
cmps
je
pop
pop
je
lods
cld
(bad)
stc
mov
lock
or
add
add
cmps
repz
call
mov
sbb
cmp
jb
sub
jmp
std
mov
lahf
mov
xchg
mov
jae
cmps
cmps
jae
jg
jae
ja
jae
(bad)
cdq
jae
xchg
jae
xlat
sahf
jae
out
popf
jae
addr16
je
aas
pop
je
aaa
pop
je
dec
pop
je
inc
std
jae
add
add
pop
ret
add
cs
je
lods
inc
out
mov
adc
out
call
fadd
lds
and
sahf
in
mov
gs
inc
out
mov
mov
push
repnz
addr16
push
sbb
mov
repnz
test
or
sti
lods
(bad)
jo
cs
out
lds
repnz
popa
dec
sbb
(bad)
xor
stos
es
(bad)
out
and
clc
jmp
mov
jmp
or
test
and
dec
repnz
mov
jnp
sbb
shl
clc
(bad)
jecxz
lods
aam
pushf
test
lahf
inc
or
add
add
inc
shl
add
shl
xor
lahf
push
pushf
clc
push
xor
sti
in
and
sbb
mov
pop
shr
inc
jl
pushf
loope
add
add
push
lahf
ins
or
pop
clc
adc
ins
aaa
dec
stos
cli
je
jp
clc
rcl
ins
push
daa
or
jnp
leave
adc
idiv
int3
(bad)
icebp
pop
pop
dec
call
ret
cld
test
push
clc
rcl
inc
adc
or
inc
ins
dec
mov
add
inc
add
scas
inc
dec
ins
mov
aas
inc
ja
es
test
scas
outs
cs
pop
clc
clc
or
shl
cld
jnp
add
add
ret
mov
movs
dec
add
jge
add
aaa
xor
lock
xchg
mov
add
out
lock
mov
(bad)
jmp
add
sub
and
rol
cld
jmp
and
sub
inc
push
inc
add
ss
jge
call
add
lods
jge
xor
adc
mov
add
add
stos
imul
popf
and
add
test
inc
inc
rcr
ins
fs
jmp
adc
into
and
pop
fiadd
into
push
(bad)
scas
or
mov
sar
cmp
dec
cmp
sub
nop
and
and
(bad)
es
es
mov
ficomp
fld
int3
popa
(bad)
(bad)
push
pushf
push
pop
shr
inc
jl
mov
mov
push
dec
jge
es
add
xchg
clc
ds
loope
adc
inc
retf
sbb
repz
push
sbb
mov
push
xor
jecxz
pushf
clc
push
add
sbb
sub
mov
sbb
adc
stos
mov
fucomip
cmps
xchg
or
sbb
loope
dec
call
(bad)
jl
repnz
mov
adc
dec
sbb
sbb
add
add
cli
ret
adc
inc
mov
arpl
mov
inc
xor
jg
jle
repz
add
sar
jbe
aaa
cmc
in
dec
xor
aad
mov
sar
xor
or
add
sub
enter
xor
adc
inc
gs
pop
inc
mov
add
lods
cld
test
(bad)
sti
mov
stos
sub
pop
lds
jp
mov
icebp
clc
sbb
rol
add
es
cld
jnp
adc
mov
movs
or
jl
(bad)
jno
dec
clc
loope
xor
mov
call
in
out
cmp
mul
invd
jge
xchg
adc
clc
mov
lock
jl
xchg
pusha
add
out
clc
sub
in
jmp
std
add
fs
inc
inc
cmps
mov
push
cdq
out
es
out
es
and
inc
ret
mov
cdq
out
es
out
es
xchg
cwde
adc
arpl
es
out
es
inc
fwait
jmp
mov
cwde
out
es
out
es
fwait
mov
cwde
xchg
es
adc
inc
out
es
test
inc
sbb
es
add
and
xchg
clc
mov
test
inc
add
and
xchg
clc
jno
inc
add
and
inc
add
fcomp
add
and
inc
add
leave
cwde
clc
sbb
xchg
cwde
clc
jmp
and
cwde
clc
jno
inc
add
mov
clc
jmp
and
inc
add
je
clc
pop
xor
stos
cwde
clc
jmp
jg
add
rcl
push
add
out
(bad)
sti
(bad)
jg
add
dec
inc
add
pmullw
call
mov
dec
add
dec
inc
add
sub
sti
call
das
add
push
leave
sti
dec
inc
add
inc
add
jmp
cmovae
add
inc
add
inc
add
inc
add
iret
inc
add
and
mov
sti
push
lods
sti
call
scas
sti
jmp
ins
xchg
cld
xchg
ss
cld
mov
xchg
cld
and
xchg
cld
jno
xchg
cld
imul
xchg
cld
push
jo
cld
dec
xchg
cld
inc
cs
cld
cmp
cld
xor
cld
sub
xchg
cld
and
xchg
cld
sbb
cld
adc
cld
or
cld
add
stc
inc
xchg
cld
icebp
cmps
xchg
cld
jmp
mov
xchg
cld
rcr
cld
jmp
pop
test
cld
mov
test
mov
xchg
cmp
xchg
xchg
add
mov
out
es
sbb
push
and
bound
push
mov
xchg
shl
inc
xchg
fidiv
xor
push
mov
xchg
inc
mov
xchg
xchg
or
out
es
mov
add
inc
mov
loop
test
xchg
pop
movs
retf
movs
ret
movs
mov
xchg
clc
std
adc
out
(bad)
xchg
clc
pinsrw
and
xchg
clc
inc
les
clc
imul
xchg
clc
jg
xchg
clc
push
xchg
clc
movs
xchg
clc
jmp
test
clc
mov
les
clc
pop
les
clc
jae
nop
clc
sbb
nop
clc
or
clc
pop
test
clc
add
mov
(bad)
jns
sti
call
leave
sti
call
jecxz
inc
in
dec
in
(bad)
stc
jecxz
(bad)
jmp
sti
inc
in
dec
in
(bad)
mov
mov
call
sti
jmp
sti
(bad)
sti
mov
call
mov
jmp
mov
jmp
mov
call
mov
inc
add
add
mov
call
mov
push
fdivrp
call
fdivrp
jmp
jg
cld
leave
mov
mov
stos
popf
cld
test
sbb
mov
cld
mov
cld
jns
movs
cld
jno
movs
cld
imul
pop
je
cld
push
nop
pushf
cld
dec
stos
pushf
cld
inc
mov
xor
cld
and
cmp
push
test
or
cmp
jge
cld
icebp
out
cld
jmp
inc
int
ficom
fadd
xchg
mov
test
xchg
xor
call
or
sbb
jp
and
push
inc
pop
xchg
loopne
push
xchg
mov
inc
xchg
mov
xor
xchg
cmp
sbb
les
add
repnz
dec
cmps
(bad)
clc
fbld
(bad)
clc
or
(bad)
clc
push
cmps
(bad)
clc
push
cmps
(bad)
clc
arpl
add
add
(bad)
clc
mov
nop
clc
cmps
(bad)
clc
dec
cmps
(bad)
clc
aas
cmps
(bad)
clc
daa
cmps
(bad)
clc
sub
and
(bad)
clc
iret
mov
(bad)
clc
jmp
and
inc
sub
inc
xor
inc
sub
inc
add
nop
clc
in
nop
clc
sar
inc
add
stc
mov
add
and
sti
(bad)
fnstcw
sti
jmp
mov
jmp
mov
dec
mov
push
mov
jmp
sti
jmp
mov
(bad)
out
mov
(bad)
out
mov
push
mov
sti
call
mov
dec
sti
jmp
aad
push
sti
dec
aam
(bad)
aas
inc
add
popa
mov
dec
inc
add
jmp
sti
jmp
iret
movs
cld
add
movs
cld
stc
inc
movs
cld
icebp
xor
cld
loope
movs
cld
fldenv
cld
sar
lods
cld
leave
cmp
cld
ror
out
movs
cld
mov
movs
cld
test
bound
cld
xchg
and
and
stos
cld
imul
add
movs
cld
push
add
cld
inc
cmp
cld
xor
stos
cld
sub
stos
cld
and
sbb
lods
adc
dec
lods
add
in
lods
repnz
fisubr
lea
fimul
sub
lea
scas
mov
les
mov
lea
add
add
lea
jp
stos
stos
jb
mov
movs
bound
aam
push
lea
cmps
dec
lea
inc
lea
cmps
cmp
push
cmps
sub
clc
stos
retf
fwait
ret
mov
(bad)
clc
addr16
mov
mov
(bad)
clc
stos
lea
clc
add
add
add
clc
loope
(bad)
clc
adc
(bad)
clc
or
(bad)
clc
sub
(bad)
clc
cdq
enter
ret
(bad)
clc
iret
retf
(bad)
clc
xchg
int3
(bad)
clc
xchg
mov
(bad)
clc
outs
mov
clc
or
clc
das
jge
clc
aad
(bad)
clc
ror
inc
sti
(bad)
out
loop
call
loop
(bad)
(bad)
sti
(bad)
fucom
sti
inc
add
add
loop
call
sti
inc
loope
dec
inc
add
sub
sti
call
sti
(bad)
cmp
mov
dec
mov
(bad)
fnsave
sti
call
mov
dec
mov
call
mov
push
mov
call
mov
call
mov
inc
sti
jmp
mov
cld
cmp
xchg
cld
sub
add
cmps
outs
cld
jmp
outs
cld
jmp
nop
cld
jmp
imul
cmps
xchg
cld
jmp
sahf
nop
cld
leave
cs
cld
sar
cld
mov
add
jmp
mov
nop
cld
mov
add
cmps
mov
inc
add
add
jno
jmp
dec
add
cmps
inc
out
es
cmc
add
(bad)
(bad)
out
es
out
es
repz
and
pop
xchg
adc
js
add
xchg
xchg
repnz
xchg
loop
push
xchg
fimul
push
xchg
retf
xchg
ret
xchg
mov
mov
add
add
add
inc
(bad)
xchg
mov
mov
xchg
mov
ficom
jb
retf
mov
call
mul
not
or
(bad)
out
jmp
shl
cmc
xchg
jb
xchg
jmp
and
cmps
mov
dec
ror
gs
adc
pop
sub
arpl
push
inc
add
std
jb
inc
or
jmp
push
adc
cmovae
sbb
and
sbb
shl
push
(bad)
and
add
dec
add
addr16
neg
jmp
pop
add
add
and
adc
data16
add
je
cs
pusha
jbe
dec
jno
jmp
gs
icebp
and
aas
fild
imul
inc
aas
gs
dec
jno
stos
and
inc
stos
and
dec
dec
xchg
and
sub
pop
pop
add
and
dec
adc
popa
arpl
sbb
icebp
pop
jae
popf
cld
dec
and
pop
je
dec
addr16
retf
dec
push
push
iret
call
es
inc
ret
sub
retf
arpl
inc
push
arpl
pushf
cld
cmp
xchg
cmp
jns
cld
dec
and
je
jns
push
popf
cld
mov
test
dec
js
outs
pop
stos
dec
pop
pop
rcl
dec
popf
cld
cdq
and
pop
je
stos
pop
outs
push
pop
pop
xor
pop
push
or
or
add
daa
inc
sub
dec
add
push
pop
add
and
test
push
repz
xor
inc
dec
add
iret
pop
sbb
(bad)
popa
mov
sbb
push
inc
sub
jge
repz
imul
inc
es
lods
dec
pop
mov
add
push
adc
inc
inc
add
gs
dec
push
adc
add
test
push
adc
mov
or
push
or
arpl
(bad)
sbb
cmp
mul
out
arpl
inc
add
and
push
or
in
adc
inc
add
add
push
push
imul
xchg
ins
jmp
push
test
imul
stos
sbb
(bad)
dec
and
je
addr16
dec
std
arpl
and
adc
dec
adc
mov
push
and
and
push
jg
dec
add
and
loope
popa
ins
loop
into
add
push
gs
pop
push
popa
gs
pop
inc
out
pop
add
pop
je
push
data16
add
add
icebp
push
aas
inc
mov
dec
push
pop
popa
adc
cmp
popa
nop/reserved
lock
add
inc
jne
jmp
arpl
adc
out
jmp
dec
add
inc
push
mov
or
enter
fistp
or
lock
dec
ds
shr
arpl
leave
sub
hlt
ins
cld
jmp
pop
ins
loopne
pop
arpl
add
out
pop
outs
fidivr
pop
ins
out
push
add
mov
pusha
dec
mov
inc
cmp
push
xchg
inc
push
arpl
arpl
sahf
dec
dec
adc
ret
daa
stos
pop
je
ror
xchg
dec
push
ds
cld
lods
sub
inc
jmp
mov
xor
jg
add
in
mov
clc
outs
add
inc
xchg
pop
cli
or
out
jmp
out
pop
dec
ss
fimul
push
push
mov
sti
out
push
inc
sub
adc
pusha
mov
or
add
sbb
add
or
push
test
push
test
test
shl
cmp
cmp
inc
lock
inc
pop
clc
(bad)
mov
pusha
out
push
jmp
push
and
lock
jmp
mul
pop
jne
add
add
shr
inc
push
push
in
pop
cld
in
pop
stc
inc
add
fsubr
imul
inc
out
sti
call
packsswb
fcomip
ins
(bad)
jnp
add
add
pop
jmp
push
sub
(bad)
aad
push
lds
add
fwait
or
jmp
popa
jnp
outs
lea
dec
popa
mov
inc
pop
add
jmp
inc
mov
pop
inc
sbb
push
popf
sbb
cmp
inc
outs
(bad)
sbb
jecxz
jb
or
popa
je
call
pop
je
add
add
in
add
dec
dec
gs
pop
inc
or
out
push
sub
jae
xor
(bad)
jmp
in
imul
call
jae
xchg
es
inc
inc
cdq
addr16
stos
push
addr16
test
push
fisub
xor
pop
push
add
(bad)
pusha
inc
pand
loopne
pop
arpl
ins
cld
sub
scas
pop
push
add
add
stos
pop
imul
daa
push
push
daa
popa
js
es
ins
ret
pop
add
and
popa
je
add
arpl
or
enter
mov
cmp
jp
push
arpl
jns
js
ins
cld
dec
and
popa
je
inc
aad
push
jmp
out
mov
icebp
iret
popa
jno
ret
aaa
ds
bound
xor
push
in
push
fs
xchg
ds
lock
mov
out
gs
stos
data16
add
jmp
push
addr16
out
push
loop
xor
cmp
lock
cmp
add
adc
inc
and
mov
hlt
cmovae
inc
push
add
jg
(bad)
sti
pusha
loope
or
inc
(bad)
pop
adc
push
jmp
imul
jns
add
add
stc
loopne
mov
addr16
add
add
addr16
or
js
and
clc
bound
jmp
add
jmp
std
das
lock
(bad)
jmp
vpunpckldq
jmp
add
and
hlt
pop
inc
and
sbb
pop
outs
add
je
es
pop
jae
inc
ret
add
sbb
outs
in
inc
mov
adc
lds
xchg
pop
jo
adc
xchg
jmp
dec
jmp
inc
adc
gs
inc
jge
int3
adc
repz
jbe
sbb
mov
add
and
jno
sbb
je
loopne
ins
sbb
pop
je
sbb
add
inc
cmp
out
gs
imul
jle
addr16
sub
and
pop
dec
imul
sbb
sahf
or
ins
push
sar
xchg
and
or
sahf
cmp
shl
add
adc
cmp
add
add
arpl
pop
imul
mov
dec
ins
(bad)
adc
es
inc
sbb
iret
adc
retf
pop
dec
imul
cmp
enter
es
jecxz
out
adc
in
sbb
loope
push
jg
punpcklbw
inc
dec
add
add
adc
push
test
aam
sub
rcr
add
add
mov
jmp
push
inc
idiv
push
push
in
pop
add
and
es
jmp
jmpw
adc
in
je
repnz
and
(bad)
push
addr16
fist
pop
es
clc
push
imul
dec
addr16
inc
push
(bad)
jmp
shl
jae
in
jae
and
and
js
imul
add
je
pop
cmc
pop
jmp
jmp
xchg
pop
enter
retf
add
add
sbb
call
add
and
ins
mov
inc
call
add
stc
adc
jmp
sub
arpl
loopne
mov
in
pop
int
arpl
inc
add
and
addr16
repnz
outs
or
pop
push
out
pop
add
inc
ins
jae
adc
ss
cmp
mov
or
pop
ins
push
je
xor
ds
jecxz
outs
sbb
ins
fisubr
popa
ins
jmp
je
(bad)
jo
call
inc
cmps
fild
pusha
inc
ins
jae
cvtdq2ps
xor
add
sbb
adc
gs
outs
in
aas
inc
add
sub
neg
dec
retf
or
mov
inc
retf
cs
js
push
inc
imul
and
imul
pop
aas
or
inc
mov
arpl
imul
stc
push
aas
fwait
dec
jae
xchg
xor
mov
cld
mov
and
mov
push
ins
jmp
push
imul
pop
outs
cli
out
arpl
push
je
retf
out
inc
out
popf
inc
ss
retf
out
dec
push
cli
in
cmp
out
pop
shl
adc
loopne
add
movups
sbb
pop
test
sti
bound
inc
out
addr16
aaa
jg
pop
pop
push
in
rcr
inc
and
jb
aad
inc
call
sub
pop
call
retf
add
aas
xchg
pop
cmp
fwait
bound
(bad)
xchg
pop
add
in
xchg
dec
adc
call
add
jno
arpl
bound
imul
ins
push
pop
inc
add
or
add
ins
dec
ror
imul
add
add
imul
sbb
bound
dec
adc
add
sub
jo
pop
add
dec
lock
jmp
xor
aam
out
(bad)
popa
adc
mov
cld
(bad)
mov
add
dec
imul
stos
jmp
push
push
add
inc
sub
(bad)
push
pop
imul
pop
push
dec
inc
cld
add
adc
in
sbb
repnz
cld
ficomp
aas
inc
sbb
or
pop
push
cs
je
sub
inc
jne
adc
jo
in
bound
inc
jbe
inc
jecxz
push
not
je
cli
cmp
std
pop
pop
jae
inc
cmp
dec
out
adc
adc
xchg
pop
outs
mov
sbb
rcl
jo
fldcw
add
mov
cmp
int3
dec
dec
or
pop
outs
fldcw
aaa
es
push
pop
aam
push
dec
ret
pop
sub
es
dec
call
iret
or
imul
push
test
and
jae
pop
outs
popa
aas
push
arpl
pop
dec
imul
add
and
pop
je
xchg
dec
arpl
cmp
xchg
push
pop
cld
inc
es
push
imul
pop
cld
daa
and
mov
add
fistp
add
inc
stos
pusha
repnz
shr
jne
xlat
fdivr
iret
cli
xor
push
mov
test
call
dec
dec
jecxz
inc
push
shl
sub
pop
loopne
push
test
add
jecxz
xor
add
add
cli
pop
(bad)
loop
add
sub
sbb
push
inc
in
aas
inc
test
add
adc
push
pop
jmp
inc
dec
fnsave
icebp
adc
(bad)
mov
add
bound
shl
push
jmp
enter
sti
out
pop
and
std
cmp
frstor
jmp
out
push
shl
push
lods
daa
add
push
jmp
dec
push
js
push
jmp
popa
loopne
or
inc
sub
(bad)
(bad)
sub
js
push
mov
add
and
das
add
adc
imul
adc
mov
inc
out
ret
sbb
(bad)
sbb
stos
and
add
inc
aas
add
add
sti
and
mov
data16
(bad)
call
sbb
cli
xor
(bad)
inc
movs
add
sbb
xor
push
push
cmp
cmp
inc
dec
sbb
cmp
sub
push
outs
in
inc
add
inc
daa
jo
div
outs
clc
adc
imul
jg
dec
inc
cdq
and
scas
xor
add
add
push
add
xchg
dec
add
daa
pop
adc
iret
aaa
outs
or
aam
mov
push
inc
and
pop
cld
pop
daa
stos
daa
je
rdmsr
ins
ror
aad
cld
shl
je
adc
sar
imul
cmp
ins
xchg
cmp
arpl
cld
add
es
je
push
and
jns
outs
es
dec
dec
jns
jae
inc
(bad)
xor
retf
inc
fild
jmp
mov
add
inc
stos
sub
add
xor
out
add
push
xor
fistp
cld
in
add
inc
stos
sub
adc
add
inc
aaa
xor
repnz
sub
push
out
cmps
inc
push
daa
mov
dec
xor
stc
xor
es
inc
add
adc
repz
add
inc
sub
jp
adc
sbb
std
jnp
pop
cmc
and
clc
dec
les
loope
into
or
add
and
pop
mov
lock
ins
mov
and
adc
inc
frstor
and
clc
cmp
cmp
pop
mov
lods
add
pop
jmp
or
inc
inc
or
out
push
add
sar
and
loop
inc
push
call
push
jecxz
adc
add
push
add
push
add
ins
popa
sub
pop
arpl
inc
xor
(bad)
xor
je
sbb
out
and
pop
addr16
add
sbb
add
mov
(bad)
xor
add
add
pop
pop
arpl
es
out
and
je
pop
pop
arpl
inc
push
add
sbb
fst
pop
imul
dec
inc
jb
xor
fs
add
loope
imul
add
lea
gs
push
mov
jno
sbb
daa
es
je
imul
push
dec
dec
popa
inc
pop
cld
(bad)
test
add
add
push
jl
push
pop
cld
and
call
or
add
push
aam
push
(bad)
mov
inc
js
mov
inc
or
dec
pop
stc
mov
cld
shl
cs
fnstenv
sbb
inc
and
daa
popa
iret
or
arpl
inc
add
or
inc
add
outs
xchg
jbe
or
push
inc
icebp
add
add
add
in
das
push
fst
sub
push
xor
sbb
fdivr
ss
test
stc
inc
cdq
add
leave
sub
lock
xor
(bad)
xor
adc
add
stc
mov
das
add
add
inc
and
inc
iret
add
repnz
cmp
fld
daa
retf
ficom
mov
pusha
add
loopne
dec
push
jmp
dec
jecxz
inc
jp
push
sub
arpl
push
jecxz
add
cmp
aas
jmp
add
data16
sbb
ins
stos
stc
or
push
and
popf
cmc
out
mov
repz
jmp
(bad)
and
out
fwait
inc
fbld
aaa
fstp
xlat
jmp
add
add
inc
lea
adc
xchg
adc
bound
fdiv
hlt
sub
fadd
in
add
out
aas
gs
adc
arpl
imul
rol
dec
sbb
sbb
gs
dec
imul
and
push
sub
ins
mov
and
pop
ins
dec
(bad)
gs
jo
data16
inc
dec
add
add
add
and
pop
ins
push
(bad)
je
jg
or
enter
mov
es
add
push
popa
int
gs
push
neg
add
and
xor
adc
xor
add
inc
mov
push
daa
sbb
je
inc
es
inc
pop
imul
es
outs
inc
arpl
add
add
cld
add
push
mov
arpl
xor
stos
and
jne
call
add
add
(bad)
dec
arpl
mov
push
je
iret
pop
add
int
inc
retf
out
inc
arpl
out
je
out
inc
es
inc
push
lock
retf
out
dec
xlat
fidivr
and
repz
and
add
add
and
cmp
rcr
xchg
fsub
add
inc
es
adc
repnz
adc
and
xor
adc
hlt
rol
lock
and
adc
xor
push
hlt
mov
xor
es
push
add
repnz
xor
inc
cmp
loopne
add
outs
jne
add
add
jecxz
pop
clc
fdiv
add
inc
jmp
cmc
repnz
push
jnp
arpl
and
in
cmp
pop
je
jae
jbe
cmp
bound
arpl
push
add
push
jmp
cli
loop
mov
loop
fild
pop
je
(bad)
fcos
aad
jmp
push
fistp
dec
out
bound
cmp
jbe
and
pop
fwait
dec
hlt
jae
cmp
and
bound
jecxz
pop
arpl
xor
(bad)
es
jae
xor
jecxz
push
out
and
aas
cmp
xor
arpl
je
jbe
pop
push
bound
ins
jb
xor
inc
xor
pop
jb
xor
adc
push
and
ins
jb
xor
inc
and
pop
jb
xor
adc
add
aas
add
add
rcl
pop
arpl
das
popa
je
and
popa
jo
sbb
push
pop
and
aas
dec
mov
das
popa
je
aam
arpl
mov
daa
outs
cmc
mov
add
mov
cmp
imul
arpl
adc
es
std
dec
mov
inc
jo
cmc
inc
arpl
adc
dec
arpl
and
add
jnp
aas
js
pop
cld
xor
push
pop
je
inc
and
inc
dec
addr16
pop
cld
lock
scas
sub
dec
stos
imul
and
push
daa
sahf
pop
je
sbb
adc
jae
inc
(bad)
es
xchg
cmp
inc
adc
cli
(bad)
fist
add
inc
mov
and
out
inc
inc
mov
ds
mov
repz
xchg
inc
cmp
(bad)
dec
and
(bad)
out
xor
jmp
jb
jb
adc
push
aam
xor
jmp
inc
jmp
dec
popa
lock
push
inc
cli
add
out
xor
fdiv
push
or
mov
add
dec
inc
icebp
jmp
dec
jmp
xchg
inc
adc
cmp
push
or
aad
movs
or
and
cmc
xlat
inc
dec
test
pop
add
pop
pop
add
and
push
fdivr
dec
push
xlat
cmp
and
ss
sbb
sub
outs
adc
fmul
push
out
cli
cmp
imul
and
fisubr
data16
enter
enter
and
and
pushw
je
pop
adc
pop
xor
or
jae
inc
ins
ins
mov
addr16
repz
fs
inc
ins
add
je
cmps
inc
push
outs
pushf
xor
rol
imul
add
pop
or
ins
ins
inc
add
and
je
sbb
xor
sbb
dec
add
popa
fld
add
and
outs
gs
sub
gs
pop
arpl
sbb
ins
xor
mov
out
cdq
cld
sbb
in
sub
icebp
push
js
mov
sub
(bad)
dec
jo
into
sbb
push
gs
shr
sti
rcr
ins
vcvttsd2si
push
sbb
push
cmp
sysenter
dec
fild
add
sbb
je
sub
fs
add
add
xchg
pop
and
cmp
sbb
je
sbb
daa
ds
dec
sbb
dec
xor
imul
es
dec
pop
daa
je
inc
mov
pop
es
xchg
add
or
sub
out
pop
es
scas
add
loop
sbb
loop
es
hlt
xchg
sub
clc
out
out
mov
shr
test
mov
out
add
add
leave
lock
es
xor
loop
sbb
jmp
ins
in
sub
fiadd
fdiv
(bad)
aam
inc
es
pop
add
jbe
jmp
pop
out
add
inc
cli
cmp
div
nop
cli
and
pop
ins
mov
adc
and
fsub
pop
or
add
xlat
push
jmp
and
fsub
inc
call
imul
adc
dec
stos
sbb
aaa
(bad)
cmp
in
cmp
repnz
push
jmp
pop
out
cmp
pop
cmc
(bad)
in
and
je
imul
sub
sar
cmp
cmp
out
cmp
in
jae
and
je
xor
imul
and
int3
sti
(bad)
jmp
push
into
repnz
arpl
ins
add
dec
dec
shl
gs
sti
(bad)
inc
cmp
popa
outs
mov
sub
dec
inc
sbb
pushf
cmp
fild
js
fcom
je
pusha
dec
dec
dec
inc
add
xor
dec
push
add
je
cmp
push
push
cmp
add
inc
sti
(bad)
jmp
sbb
pop
push
cmp
sub
es
cmp
push
sbb
outs
dec
mov
dec
cmp
sbb
cmp
mov
pop
imul
xor
xchg
jbe
call
aam
sbb
mov
cld
cmp
mov
ins
int
and
fsub
arpl
pop
cld
cmp
sub
arpl
add
add
cli
aaa
pop
or
add
(bad)
cmp
mov
xchg
sbb
inc
es
popa
out
push
dec
jecxz
sbb
arpl
hlt
sbb
(bad)
add
inc
cmps
push
popa
out
iret
aaa
or
ret
out
sub
inc
mov
in
xchg
sub
repz
(bad)
fisub
repnz
mov
lds
aad
(bad)
add
inc
cmps
xor
loop
sub
in
xor
xlat
jg
ret
sbb
es
leave
add
cmp
call
cmp
inc
add
pop
add
adc
jmp
outs
or
shl
adc
dec
or
shl
and
daa
or
(bad)
clc
jae
pop
loop
retf
add
and
add
jmp
out
enter
mov
cmp
ins
mov
sbb
cdq
daa
or
push
add
stos
pop
out
jne
sbb
cmc
cli
jae
pop
call
add
je
pop
push
je
imul
dec
sub
inc
arpl
imul
fild
cmp
ins
cmp
inc
inc
iret
inc
mov
push
and
xor
je
mov
inc
sub
jl
pop
popa
jnp
inc
inc
fadd
add
adc
add
add
jge
pop
ins
mov
mov
cdq
adc
gs
and
cmp
aas
inc
add
stos
and
mov
inc
dec
push
inc
fs
imul
sbb
std
adc
sub
add
xor
gs
inc
jb
xor
add
jne
push
jne
inc
jb
pop
xor
das
and
imul
cmp
imul
pop
mov
jno
jge
inc
adc
cld
xor
mov
pop
je
imul
es
aas
in
sbb
lahf
xor
mov
inc
es
dec
aas
cmc
(bad)
sbb
cld
push
aad
dec
arpl
sar
push
aad
adc
and
inc
and
sub
xchg
fbstp
and
fbstp
mov
aas
daa
dec
ror
inc
push
jmp
adc
es
xor
fcomip
das
outs
aam
sbb
cmc
das
inc
out
xor
(bad)
retf
push
es
cmc
add
aam
push
call
mov
add
inc
xchg
inc
into
or
(bad)
push
shr
xchg
and
inc
mov
das
in
jae
sti
fdivrp
jp
loope
add
jae
pop
jmp
push
in
ins
dec
sub
add
inc
out
sub
inc
div
imul
data16
shl
cmp
sar
mul
hlt
inc
and
outs
push
lock
cmp
clc
iret
dec
cmc
or
bound
sbb
push
rcl
push
out
mov
inc
rcr
and
out
sub
jg
imul
shl
das
jecxz
add
imul
je
pop
daa
pop
jb
sbb
push
inc
inc
outs
inc
aaa
push
bound
outs
imul
add
and
je
adc
and
dec
gs
pop
jae
add
add
adc
fs
pop
jno
xor
pop
bound
imul
push
add
xor
imul
inc
pop
xchg
cmp
gs
sub
shr
push
je
ficom
arpl
or
mov
pop
arpl
(bad)
dec
xchg
out
xor
in
pop
dec
sbb
jne
cmp
imul
adc
je
sbb
push
sbb
outs
push
inc
xor
dec
add
sbb
inc
inc
push
sbb
inc
xor
ja
je
outs
sub
mov
ins
add
and
push
xchg
es
push
je
cdq
push
arpl
mov
mov
inc
aam
jg
jmp
inc
inc
add
in
push
shl
das
fcomp
xchg
fs
and
daa
add
inc
and
xchg
fist
rcl
pop
loopne
sbb
mov
fist
inc
shl
xor
clc
inc
es
and
shl
xor
add
pop
fcomip
xor
inc
mov
push
clc
out
and
jmp
inc
or
mov
jmp
repz
imul
hlt
iret
pop
xchg
mul
cmp
adc
pop
mov
push
jmp
push
fsubr
inc
call
bound
cld
bound
out
cmp
add
push
inc
loop
inc
push
add
adc
dec
sbb
jmp
pop
arpl
and
loop
add
add
hlt
fimul
push
jmp
xlat
call
or
inc
loop
les
arpl
mov
xor
jg
dec
dec
rcl
inc
fwait
jns
ins
mov
or
pop
push
es
cmp
add
inc
inc
gs
repz
popf
adc
push
cmp
inc
add
je
pop
das
cmp
add
add
pop
jb
push
pop
inc
add
je
cmp
push
and
add
adc
push
sub
shl
ins
ins
mov
xor
daa
jo
push
imul
push
outs
das
arpl
pop
cld
inc
(bad)
xchg
xor
lods
xor
add
mov
cs
pop
cld
in
enter
lods
and
imul
add
retf
mov
cld
sti
and
sub
xchg
add
pop
cmp
out
or
imul
call
jmp
imul
sbb
cmp
arpl
push
stc
ins
push
sub
cld
out
cmp
imul
add
push
clc
pop
add
cld
fwait
and
fmul
and
inc
and
(bad)
aad
not
mov
cld
xlat
rol
add
add
xchg
sub
shl
sbb
out
fcomp
xor
mov
es
mov
jb
jb
and
dec
sbb
inc
sbb
jb
cmp
push
inc
sbb
loop
inc
es
inc
pusha
fmul
cmp
push
dec
inc
cmps
add
xor
fdivr
sbb
add
add
fistp
(bad)
cmp
cmc
imul
dec
call
outs
mov
cmp
jae
cmp
jmp
push
fisub
pop
call
js
push
aam
nop
hlt
fld
stc
xlat
bound
in
dec
cmp
pop
push
inc
fisub
dec
fisubr
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
mov
inc
add
pop
add
add
jg
add
pop
add
inc
add
jg
add
dec
inc
add
dec
inc
add
aas
inc
add
aas
inc
add
dec
inc
add
dec
inc
add
aas
inc
add
aas
inc
add
cmovae
add
inc
add
inc
add
inc
add
cmovae
add
inc
add
inc
add
inc
add
iret
inc
add
iret
inc
add
mov
inc
add
es
cld
jmp
pop
cld
jmp
pop
cld
jmp
pop
cld
jmp
pop
cld
jmp
pop
cld
jmp
pop
cld
jmp
pop
cld
jmp
pop
cld
jmp
pop
cld
jmp
pop
cld
jmp
pop
cld
jmp
pop
cld
jmp
pop
cld
jmp
pop
cld
inc
add
add
pop
cld
jmp
pop
cld
jmp
pop
cld
jmp
pop
cld
jmp
pop
cld
jmp
pop
cld
jmp
pop
cld
jmp
pop
cld
jmp
pop
cld
jmp
pop
cld
jmp
pop
cld
jmp
pop
cld
jmp
pop
cld
jmp
pop
cld
jmp
pop
cld
jmp
inc
out
es
out
es
out
es
out
es
out
es
out
es
out
es
out
es
out
es
out
es
out
es
out
es
out
es
out
es
out
es
out
es
out
es
out
es
cmove
inc
aas
inc
out
call
add
inc
loop
es
outs
dec
inc
pop
inc
inc
out
es
icebp
add
inc
fiadd
es
out
es
pop
inc
add
and
inc
add
and
inc
add
and
or
cmp
inc
add
cs
add
and
inc
add
and
xchg
dec
clc
cld
and
inc
add
and
inc
add
dec
clc
icebp
and
inc
add
and
inc
add
and
inc
add
test
jmp
and
add
add
inc
inc
add
inc
add
iret
inc
add
iret
lods
add
inc
add
mov
les
iret
inc
add
mov
xchg
inc
pop
add
mov
inc
jg
add
pop
cmp
push
inc
jg
add
jg
add
jecxz
adc
inc
add
aas
inc
mov
and
sub
dec
inc
add
std
xchg
inc
inc
pop
mov
mov
pop
mov
inc
das
add
and
es
jnp
es
jno
fwait
sbb
imul
cmp
jge
data16
ror
xor
ret
mov
(bad)
jmp
adc
mov
test
mov
js
jge
dec
in
mov
add
mov
or
jl
jmp
cmovne
enter
arpl
xor
(bad)
jno
imul
shl
lahf
pushf
pusha
inc
hlt
es
cmp
iret
pop
retf
imul
push
ficomp
movq
cmc
and
out
(bad)
ins
or
cdq
test
jno
inc
(bad)
mul
xchg
sahf
stos
out
ins
mov
inc
out
call
or
jl
mov
call
mov
and
pop
js
iret
pop
js
iret
cmp
cwde
fisub
jno
adc
cmp
popf
daa
pop
imul
sub
sbb
add
lock
sbb
add
inc
xchg
inc
cmp
pop
cmp
fimul
push
je
cmp
cmps
cmp
or
(bad)
jmp
mov
jnp
div
xor
(bad)
daa
add
pushf
sbb
mov
add
loopne
das
mov
lock
add
out
aas
xor
mov
repnz
cmp
xor
jmp
pop
fsub
aas
pop
fcomp
inc
mov
daa
dec
sbb
outs
or
xor
adc
and
add
cmp
icebp
loopne
add
sti
cmp
cmp
jne
xchg
cmp
rcr
sub
xchg
push
cmp
add
add
shl
mul
hlt
cmp
cdq
bound
in
(bad)
scas
lds
xor
retf
mov
inc
fistp
cmp
daa
dec
arpl
mov
mov
mov
sub
cld
jmp
inc
push
inc
es
push
inc
es
inc
es
inc
es
push
inc
es
push
inc
es
push
inc
mov
push
inc
es
stos
adc
inc
cmps
adc
inc
out
es
out
es
out
es
out
es
out
es
(bad)
inc
inc
out
es
out
es
out
es
popf
mov
inc
out
es
out
es
out
es
or
es
out
es
out
es
cmpxchg
out
es
out
es
out
es
int3
scas
inc
inc
out
es
out
es
out
es
and
add
inc
out
es
add
and
push
add
and
inc
add
and
add
add
and
inc
add
add
add
and
add
add
add
add
and
inc
add
nop
add
add
and
inc
add
rol
add
and
inc
add
rol
add
and
inc
add
inc
add
aas
inc
add
aas
inc
add
sar
cmp
dec
inc
add
aas
inc
add
aas
inc
add
mov
add
dec
add
inc
add
inc
add
movs
test
add
dec
add
inc
add
inc
add
mov
inc
add
mov
inc
add
das
or
add
mov
inc
add
aas
or
add
jg
add
jg
add
loope
add
inc
add
es
enter
add
es
add
es
mov
add
sub
add
es
cmp
es
add
mov
add
sub
add
add
add
sub
add
es
add
es
add
es
mov
add
sub
add
es
jmp
add
inc
jmp
mov
inc
jmp
add
inc
jmp
mov
inc
jmp
add
inc
jmp
mov
inc
jmp
add
inc
jmp
mov
inc
jmp
add
inc
jmp
mov
inc
jmp
add
add
add
inc
jmp
xor
inc
jmp
add
inc
jmp
xor
jmp
add
inc
add
and
add
and
inc
add
and
add
and
inc
add
and
add
jmp
and
add
and
inc
add
and
add
and
inc
add
and
add
and
inc
add
and
jle
jmp
and
inc
add
add
jg
add
jg
add
pop
or
add
add
jg
add
dec
inc
add
ss
add
inc
add
aas
inc
add
dec
inc
add
fsubr
add
inc
add
aas
inc
add
cmove
add
ss
inc
add
inc
add
inc
add
lea
add
inc
add
inc
add
movs
sub
add
inc
add
iret
inc
add
popf
sub
add
inc
add
es
call
add
sub
add
cmps
aas
add
add
es
add
es
dec
ds
add
es
push
aas
es
add
es
cwde
ds
add
es
cwde
ds
add
es
add
es
add
es
xchg
es
jmp
add
inc
jmp
add
inc
mov
add
inc
jmp
jmp
or
sbb
inc
add
sbb
inc
or
inc
loope
out
(bad)
out
loope
out
jmp
sbb
sbb
inc
add
inc
sbb
sbb
and
inc
sub
inc
mov
sbb
add
add
mov
inc
jno
inc
ins
sbb
pop
sbb
add
pop
test
cmp
je
add
and
inc
cdq
in
jge
jmp
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
adc
inc
add
sar
dec
in
call
cmp
fcomp
cmp
(bad)
cmp
gs
add
and
push
add
cwde
aas
xchg
or
aas
iret
jo
add
dec
add
fist
and
jnp
cmp
inc
sbb
sub
je
and
test
adc
xchg
xor
pop
movs
xor
sbb
adc
aam
adc
in
adc
hlt
xor
pop
add
push
pop
adc
push
pop
clc
(bad)
aas
pusha
add
mov
add
or
or
sbb
sbb
jmp
sub
retf
pop
cmp
retf
pop
dec
xor
pop
ins
xor
jl
dec
pop
mov
es
shr
mul
ror
neg
rcr
test
jmp
fcom
sti
push
and
or
int
push
add
sub
add
add
int3
cmp
popa
int
aaa
pop
int
aaa
inc
int
aaa
sbb
jnp
mov
int3
fwait
pop
ror
pop
mov
int3
retf
neg
fcomi
or
neg
sti
push
and
or
sbb
sub
cmp
ror
(bad)
pop
xor
shr
inc
push
rcr
pop
shr
jne
sar
jne
jge
popf
shr
jne
ror
jne
sar
jne
shr
ja
sar
ja
shr
jbe
ror
jbe
sar
jbe
rcr
jbe
shr
jbe
sar
jne
jge
sbb
ror
cmp
rcr
jo
xlat
sub
jo
xlat
cmp
add
add
add
shr
sub
icebp
int
jge
(bad)
fscale
sub
ror
sub
popf
jns
sub
std
js
sub
mov
push
lea
add
js
sub
jge
(bad)
jge
std
sub
sbb
pop
sbb
cs
xor
inc
add
in
add
lods
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
xor
mov
push
cmp
lahf
adc
lods
call
mov
ss
adc
cwde
cmp
pop
clc
cmp
add
add
or
arpl
adc
pop
pop
sbb
and
and
aas
(bad)
idiv
(bad)
aas
add
xchg
or
mov
mov
cmp
int3
cmp
jge
ror
fstp
(bad)
jmp
cmp
(bad)
sti
sbb
(bad)
nop
(bad)
pop
or
inc
(bad)
daa
std
push
(bad)
das
std
xor
aaa
in
xor
aas
in
pusha
mov
add
add
(bad)
cmps
pop
mov
scas
dec
vmaxss
enter
enter
mov
xchg
sub
mov
scas
adc
mov
mov
cli
push
mov
imul
leave
sbb
jmp
inc
int
imul
jo
iret
push
jo
iret
leave
outs
mov
fwait
ins
rcl
add
add
js
enter
enter
(bad)
cld
js
(bad)
push
jns
(bad)
xor
leave
ret
jbe
leave
fnstenv
leave
xchg
jbe
arpl
inc
in
sub
inc
je
aam
je
aam
jae
aam
jae
shl
jb
aam
jb
aad
jb
shl
cmp
aas
outs
add
pop
movs
sub
cmp
and
xchg
mul
cs
iret
cs
aam
cs
aam
das
pop
aam
das
add
test
inc
imul
das
(bad)
(bad)
xchg
cmp
fstp
cmp
popa
mov
xor
jge
adc
enter
jmp
and
dec
xor
jne
xor
add
add
xor
sti
xor
or
retf
xor
adc
xor
adc
xor
adc
xor
adc
leave
adc
ins
adc
xor
cvtps2pi
ds
out
push
pop
jae
pushf
or
cmp
or
cmp
int
jmp
cld
mov
or
push
or
add
add
repnz
iret
ds
std
and
sbb
jo
enter
loopne
idiv
dec
add
call
repnz
test
int
push
cmp
cmp
push
cmp
shr
jg
cmp
iret
(bad)
jno
xor
pop
sbb
shr
nop
sar
pushf
ror
clc
add
add
jno
nop
stc
(bad)
les
pop
pop
retf
adc
retf
cmps
dec
cmps
retf
ror
adc
shl
push
enter
enter
mov
sbb
test
cwde
jno
enter
enter
(bad)
pop
lds
push
(bad)
test
mov
(bad)
adc
mov
xor
sar
je
ror
add
lea
shl
jae
aam
jne
aam
jbe
shl
iret
gs
shl
xor
iret
ret
into
fistp
int
jp
int3
mov
xchg
retf
xor
leave
pop
jo
(bad)
or
mov
es
(bad)
retf
add
cmp
ins
sar
xchg
pop
jp
push
pop
jmp
xchg
xor
std
and
add
add
cs
repz
shr
cdq
das
jl
adc
(bad)
fisttp
cmp
fadd
mov
out
adc
loope
clc
jmp
and
mov
data16
xor
shl
aam
xor
shl
xchg
push
je
xor
clc
xor
lock
mov
push
int
mov
push
fnsave
clc
adc
in
xor
adc
std
xor
adc
xor
adc
xor
adc
xor
adc
xor
adc
mov
adc
js
xor
ins
xor
jne
inc
jp
xor
jp
xor
lea
clc
jns
xor
add
add
jns
xor
and
xor
xor
bound
dec
adc
inc
das
pop
adc
add
ins
cmc
adc
jne
add
jge
mov
das
lea
das
xchg
push
jle
popf
push
jle
movs
push
jle
lods
xor
jle
mov
xor
dec
das
aad
ds
test
add
add
ins
cmp
std
je
pop
std
xchg
mov
(bad)
ss
in
in
pop
bound
inc
xor
sti
ins
repnz
ins
outs
jmp
add
inc
and
jae
xor
scas
jae
xor
cli
ja
aaa
test
aaa
jp
sbb
bound
aaa
or
cmp
jbe
cmp
add
add
jne
cmp
ins
repnz
iret
push
aas
add
and
inc
jno
inc
fwait
jo
aas
les
inc
sbb
add
inc
inc
outs
inc
inc
fild
and
inc
add
push
dec
xor
push
mov
push
cmp
xor
repnz
xor
xor
xor
xor
push
xor
sbb
xor
clc
out
xor
lock
xor
clc
adc
and
pop
cmp
xor
xor
pop
pop
xor
push
imul
cmp
mov
cmp
xor
ret
adc
xor
sbb
dec
push
sbb
sub
dec
in
fisubr
add
imul
fsubr
cmp
outs
cmp
idiv
add
add
outs
cmp
adc
mov
jecxz
or
jbe
out
aas
aas
jno
dec
inc
add
dec
jb
xor
jno
xor
jno
xor
push
mov
shl
jne
xor
jecxz
jbe
cmps
push
jmp
aaa
je
inc
cmp
mov
cmp
push
cmp
inc
cmp
xchg
cmp
in
mov
movs
in
test
cmp
pop
push
cmp
cmp
addr16
stos
cmp
sub
aaa
dec
and
cmp
inc
fcom
xor
mov
add
add
sbb
(bad)
sub
add
es
xor
push
pusha
sub
dec
xor
xor
xor
xor
xor
mov
lea
fcom
cmp
icebp
sbb
cmp
jmp
cmp
ins
adc
dec
ins
ins
cmp
ins
mov
cmp
outs
sar
dec
outs
es
ins
adc
test
pop
cmp
xchg
cmp
xchg
cmp
imul
ds
jmp
add
inc
xor
jbe
xor
add
add
inc
xor
jb
xor
enter
jnp
push
cmp
imul
adc
cmp
sub
stc
dec
xor
lock
les
aaa
xor
push
push
cmp
inc
xor
mov
test
clc
sbb
inc
add
adc
xor
adc
push
cmc
push
xor
idiv
xor
not
icebp
push
pop
sub
pop
mov
popa
dec
shr
ds
sub
shl
mov
ss
cmp
test
cmp
pop
cmp
jg
leave
imul
add
cmp
jge
mov
imul
jg
idiv
and
add
fstp
cmp
cmp
cmps
push
ds
mov
push
idiv
arpl
add
je
xor
cdq
xor
jb
xor
add
outs
addr16
ins
jo
aaa
push
adc
mov
arpl
es
cmp
push
inc
cmp
pavgb
xchg
add
add
cmp
mov
aaa
xchg
repnz
cmp
arpl
cmp
push
in
cmp
inc
int3
cmp
jne
dec
xor
cmp
sub
cmp
sbb
es
xor
push
jmp
push
not
sbb
adc
fist
das
or
xor
pop
xlat
daa
inc
push
(bad)
daa
dec
cmp
push
jo
das
push
jo
das
xor
push
jo
das
push
jo
das
inc
jno
cmp
shr
mov
data16
es
jmp
add
inc
xor
sub
aaa
in
xor
in
ins
cmp
aam
xor
int3
ins
or
les
xor
ins
sti
xor
ins
repz
ins
imul
outs
jae
lods
outs
jnp
xchg
outs
jae
mov
xor
ins
xchg
xor
ins
jnp
aam
add
jmp
aaa
cli
cmp
adc
xor
or
or
and
adc
sbb
sti
push
xor
repz
sub
jmp
inc
das
repz
das
sti
not
repz
push
bound
adc
das
sti
push
jb
repz
push
sub
sub
aaa
jp
cmp
add
add
xchg
das
xor
mov
or
mov
xor
or
stos
cmp
mov
mov
in
popa
repnz
cmp
in
push
shl
add
xor
xlat
push
outs
cmp
lea
dec
fidivr
fisubr
cmp
ins
movs
cmp
ins
add
iret
icebp
idiv
mov
add
ret
xor
push
xor
inc
xor
outs
and
imul
xor
jo
xor
je
xor
push
mov
xor
jae
aaa
in
jae
aaa
imul
xchg
cmp
mov
mov
push
dec
cmp
ins
and
es
cmp
sbb
jnp
add
push
xor
push
sti
xor
aaa
xchg
mov
aaa
imul
pop
dec
xor
pop
xor
unpcklps
cs
adc
cs
hlt
repnz
push
hlt
lahf
xor
push
dec
xor
xor
adc
sub
outs
xor
push
xor
sbb
xor
or
adc
adc
xor
aaa
outs
jmp
sbb
sub
arpl
sub
xchg
pop
lods
sub
mov
xor
sub
sub
cs
pop
push
das
scas
pop
inc
das
lock
cmp
pop
pop
cmp
pusha
nop
aaa
jo
mov
cmp
data16
jmp
arpl
arpl
push
pop
and
es
pusha
xor
mov
pop
idiv
xor
xor
inc
xor
push
cmp
mov
xchg
xor
xor
xor
xor
sub
inc
xchg
sub
cmp
sub
push
arpl
xor
add
or
sbb
mov
retf
or
das
rol
das
repnz
aaa
das
add
dec
pop
xor
inc
addr16
dec
or
mov
mov
cs
sbb
cs
dec
adc
add
pop
mov
js
cmp
int3
pop
test
fwait
pop
loope
aas
cmps
idiv
cmps
inc
add
sub
push
xor
pop
cld
xor
shl
push
xchg
dec
push
sbb
lds
xor
push
cmp
dec
jno
mov
push
add
add
pop
outs
ins
cmp
movs
cmp
pop
cmp
inc
pop
dec
cmp
pop
imul
(bad)
pop
(bad)
cmp
pop
cmp
pop
dec
cmp
pop
retf
cmp
or
cmp
inc
cmp
add
cs
cs
fldcw
ins
pop
scas
sub
push
push
sub
dec
inc
sub
inc
sub
add
add
mov
add
mov
mov
sahf
xor
push
jl
mov
outs
xor
push
aas
xor
mul
xor
idiv
xor
mul
push
gs
int3
push
jmp
cmp
cmp
cmp
adc
cmp
pop
and
cmp
push
nop
pop
and
pop
xchg
sub
dec
pop
in
das
pop
mov
das
dec
pusha
mov
xor
popa
xchg
xor
pop
xchg
xor
xor
pop
dec
xor
pop
or
mov
pop
push
add
inc
les
imul
push
dec
xor
push
pusha
xor
push
mov
xor
push
add
mov
xor
xor
sub
push
scas
sub
sbb
sub
stc
imul
test
imul
pop
pop
xor
mov
dec
shr
xchg
dec
cmp
xor
cmp
cmp
cmp
pop
cmp
or
cdq
cmp
retf
or
cld
cmp
std
cs
cli
inc
cmp
dec
dec
cmp
dec
cmp
cmp
cmp
and
cmp
push
cmp
and
push
jo
cmp
jo
cmp
outs
jg
mov
and
sbb
imul
push
scas
mov
mov
ficom
ds
push
jp
rdmsr
idiv
mov
add
leave
push
je
pop
pop
xor
(bad)
push
xor
push
mov
xor
push
add
lods
push
pop
xor
jle
jno
lods
xor
loop
mov
adc
outs
pop
inc
ss
pop
imul
es
cmp
push
fidivr
add
add
push
xor
cmp
sbb
cmp
push
bound
push
mov
sub
(bad)
mov
lock
fldcw
jo
das
sub
pop
jl
adc
push
add
add
lahf
dec
mov
and
xchg
and
sub
inc
xor
sbb
daa
xlat
or
push
mov
adc
shl
(bad)
lock
xor
mov
inc
push
xor
(bad)
push
pop
xor
push
cwde
xor
mov
aaa
cmp
aaa
sbb
cmp
add
add
push
dec
cmp
push
(bad)
cmp
inc
cmp
push
push
cmp
push
pop
cmp
mov
cmp
push
aad
pusha
push
retf
ss
xchg
ss
push
pop
aaa
lods
push
jp
test
aaa
jg
ss
mov
pop
add
std
xor
ret
cmp
pop
cmp
xchg
cmp
cmp
sub
add
add
cmp
nop
cmp
cmp
cmp
push
psubusb
mov
cld
jo
add
call
or
sub
jmp
xor
int3
push
sahf
xor
idiv
mov
rcl
ss
dec
inc
aaa
or
mov
add
adc
inc
add
adc
mov
add
push
xor
add
add
push
js
inc
push
movs
xor
dec
(bad)
xor
fnstenv
outs
dec
in
xor
div
arpl
xor
mov
pop
push
push
push
push
adc
xor
push
dec
xor
push
xor
push
cmps
xor
mov
xor
fs
push
ja
movs
pop
jmp
and
dec
xor
movs
push
fdiv
push
push
pushf
ss
jbe
jl
in
aam
(bad)
or
xor
cld
xchg
sub
in
in
es
jmp
es
arpl
outs
pop
mov
es
pop
es
cmp
sbb
fs
xchg
sbb
and
or
(bad)
std
cmp
add
es
or
add
add
out
xor
push
jl
cld
push
xor
push
or
ja
stos
xor
aaa
repnz
cmp
xor
inc
xchg
xor
mov
xor
push
xor
sbb
rcl
and
aaa
dec
push
push
xor
sub
jmp
dec
push
xor
dec
jge
mov
dec
shl
inc
dec
div
add
xor
dec
push
xor
mov
(bad)
push
rdmsr
retf
push
pop
xor
push
cmps
xor
pop
push
das
add
sub
pop
sub
jmp
dec
sub
add
cmp
stos
aas
mov
(bad)
jg
ss
cld
dec
aaa
mov
sahf
aaa
jns
mov
dec
std
aad
and
es
jne
clc
lods
and
xor
push
push
pop
xor
ret
xor
push
leave
xor
xor
enter
fistp
jb
or
xchg
xor
mov
repnz
cmp
repnz
xor
ins
xor
push
xchg
(bad)
pop
xchg
xor
(bad)
xor
sbb
push
sbb
fisttp
xor
int
(bad)
adc
add
add
inc
xor
inc
xor
pop
xor
addr16
inc
addr16
xor
sub
mov
pop
xor
shl
xor
aas
push
jp
scas
push
loope
adc
aaa
call
cmp
addr16
cmp
addr16
lods
add
mov
sbb
das
data16
cmp
push
ds
icebp
add
aas
mov
jmp
add
add
sub
push
aaa
fnsave
pop
aaa
out
xor
aaa
inc
cs
adc
sub
jo
ins
rcl
icebp
hlt
sub
pop
cmc
xchg
sub
pop
cld
daa
adc
pop
aaa
xor
push
xor
pop
xor
popa
xor
jle
scas
xor
sub
sbb
cmp
leave
adc
or
dec
adc
je
add
add
xchg
xor
lock
lock
div
js
push
xor
pop
in
sub
inc
jg
call
pop
jnp
ficomp
sub
push
push
es
push
push
sub
push
jmp
add
inc
mov
xor
arpl
xchg
push
lock
push
(bad)
das
fmul
xor
pop
push
sub
leave
sub
jno
mov
mov
dec
pop
xor
add
cmp
sub
pop
mov
ins
push
or
daa
es
jmp
add
inc
cmp
push
add
xor
push
add
jecxz
popf
push
add
push
pop
adc
out
inc
xor
jmp
push
xor
xor
xor
xor
adc
xor
adc
xor
hlt
popf
xor
add
add
xchg
xor
push
ret
sub
push
inc
xchg
cs
cmp
ficom
das
stc
dec
addr16
push
inc
cdq
das
lods
cmp
das
ror
jmp
cli
sub
(bad)
xor
and
cmp
aaa
lock
add
mov
push
inc
add
loope
shl
pop
(bad)
xor
add
add
push
lods
xor
adc
shl
ss
push
aaa
mov
pop
xchg
cmp
pop
push
cmp
pop
jae
add
cmp
pop
sar
pop
pop
cmp
pop
xchg
cmp
pop
scas
cmp
pop
aad
jnp
jae
test
sar
retf
imul
aas
es
cld
jmp
popf
sub
mul
xor
add
add
sub
adc
daa
mov
cmp
(bad)
xor
sub
pop
adc
dec
pop
jne
cmps
cmovle
fmul
ds
push
sub
in
std
sub
in
xchg
sub
pop
fisubr
dec
dec
fisubr
ror
and
inc
dec
sub
(bad)
pop
(bad)
xor
pop
out
and
pop
add
call
and
cwde
dec
push
es
push
out
out
push
jae
je
jle
es
jmp
add
inc
fidiv
xor
adc
arpl
xor
push
je
mov
cmps
xor
xor
pop
xor
pop
mov
jecxz
imul
pop
push
les
mov
cs
and
adc
ins
sub
int
or
cmp
sbb
push
sbb
pop
sbb
pop
int
jnp
mov
and
add
cmp
nop
cmp
mov
dec
and
cmp
sbb
push
adc
cmp
or
cmp
cmp
cmp
mov
and
cmp
fdivr
or
cmp
inc
cld
cmp
(bad)
cmp
xor
cmp
sub
cmp
and
sbb
push
cmp
adc
lock
cmp
inc
sub
aam
cs
xor
sbb
push
cmp
and
push
adc
add
pop
cmp
cs
cmp
das
je
mov
sub
mov
shr
cmp
cmp
mov
enter
dec
sar
fs
push
fidivr
xor
in
cmp
cli
cmp
or
cs
cmp
cs
fisubr
and
xor
cs
cs
jbe
dec
cmp
cs
cmp
cs
cmp
cs
arpl
add
cmp
and
sub
test
enter
xchg
and
loopne
aad
add
add
mov
and
jmp
or
push
sbb
push
xor
addr16
ds
rcl
dec
cmp
pop
leave
sub
and
add
and
adc
inc
and
or
and
add
arpl
(bad)
and
cmps
and
pusha
and
pop
arpl
retf
push
cmp
(bad)
shl
or
das
dec
hlt
and
add
add
dec
add
cmp
and
dec
sbb
dec
les
aam
sbb
ret
dec
ins
and
dec
push
and
cmps
and
dec
xchg
and
dec
jge
add
and
inc
jmp
add
inc
in
sub
or
andps
adc
ret
adc
push
xchg
adc
push
push
adc
push
or
rcl
xchg
push
not
cwde
push
add
xor
xor
xor
xor
sahf
xor
pop
push
xor
xor
xor
xor
adc
lods
das
xor
lahf
cs
test
das
call
cmp
push
imul
mov
sub
(bad)
sbb
fdivr
sub
repz
sub
inc
add
add
cmp
cmp
scas
das
ins
cmp
test
cmp
sbb
cmp
clc
cmp
lea
adc
sub
cmp
sub
arpl
cmp
sub
cmp
daa
gs
cmp
aad
test
mov
jmp
ds
sub
and
ins
ds
sub
add
add
xchg
sub
ds
sub
mov
(bad)
aas
les
mov
add
push
cmc
(bad)
aas
inc
add
ret
ss
xor
xor
mov
pop
xor
ss
xor
lahf
adc
push
cmp
sbb
push
fwait
or
push
or
xor
adc
xor
adc
adc
adc
adc
add
add
pushf
adc
iret
adc
cli
out
cmovp
mov
mov
pop
minps
lldt
push
adc
inc
push
xor
outs
cmp
push
adc
cli
or
adc
or
jle
inc
cmp
dec
aas
sbb
adc
in
dec
dec
sbb
dec
test
pop
inc
inc
adc
sbb
daa
dec
cld
sbb
dec
dec
sbb
mov
dec
xchg
sbb
inc
jmp
add
inc
not
repnz
das
adc
push
adc
push
jle
inc
push
lods
adc
pop
adc
push
jp
call
adc
fist
inc
push
sbb
sbb
adc
mov
push
push
add
mov
dec
push
cmps
xor
(bad)
push
push
shl
sub
add
ss
xor
pop
xor
sbb
xor
xor
hlt
sub
sub
push
jae
inc
mov
ss
jnp
retf
sub
add
icebp
push
arpl
push
pop
mov
sub
mov
aaa
inc
fst
sub
or
add
add
sbb
cs
xor
add
xor
ss
xor
aaa
test
xor
fwait
xor
aaa
pop
xor
aaa
mov
xor
aaa
xchg
sub
cmp
and
mov
sub
fsub
pop
cmp
sub
cmp
sub
cmp
outs
cmp
daa
test
movs
sub
cmp
add
add
add
inc
sub
cmp
sub
cmp
sub
xchg
sub
cmp
sub
cmp
sub
cmp
adc
es
pop
das
sbb
mov
(bad)
or
paddusb
sbb
(bad)
sti
or
inc
lock
sbb
sbb
pop
pop
sbb
push
bound
out
dec
out
pop
inc
rcr
cmp
ins
sbb
les
mov
sub
sbb
and
cld
jmp
call
or
test
adc
div
push
push
pop
push
xchg
push
addr16
retf
push
add
inc
rcl
(bad)
adc
push
aaa
adc
movmskps
punpckldq
(bad)
push
dec
adc
dec
push
adc
dec
adc
enter
jnp
jmp
add
inc
in
adc
push
inc
push
xor
sbb
inc
jmp
add
inc
jb
ret
movaps
push
mov
dec
js
mov
adc
mov
sbb
dec
xchg
sbb
dec
sbb
jnp
jno
fwait
dec
add
sbb
cmp
pop
cmp
pop
cmp
add
add
add
inc
add
xor
fdiv
jb
daa
cmp
sbb
push
cmp
or
xor
inc
add
xor
xor
bound
mov
pcmpgtb
add
aas
dec
xor
and
pop
je
adc
shld
aas
je
adc
sub
cmp
mov
cmp
stos
pop
mov
aas
test
aas
mov
aas
jmp
pop
lahf
aas
push
pop
sar
sub
aas
or
add
inc
add
jns
push
xor
aaa
xor
push
outs
xor
push
cwde
xor
push
fidiv
gs
cli
xor
adc
ss
inc
xor
add
add
pop
addr16
pop
xchg
xor
pop
leave
aas
lahf
pop
add
es
mov
sbb
add
es
or
push
sbb
push
arpl
cli
add
jae
ror
and
push
add
in
jecxz
shr
int
fcom
xor
adc
cli
mov
pop
mov
add
pop
dec
mov
adc
cmp
sbb
cmp
or
hlt
and
push
add
in
sar
push
int3
cld
jmp
jnp
mov
mul
or
test
dec
xor
adc
xor
aam
sub
xor
adc
ret
xor
adc
into
adc
inc
adc
ss
adc
add
add
cmp
adc
cmp
adc
aaa
loope
cmp
loope
inc
aaa
ror
cmp
mov
loop
mov
lar
push
pminub
push
cpuid
aaa
popa
push
mov
aaa
xchg
push
jp
add
or
mov
sbb
sub
xchg
sub
gs
movs
and
dec
xor
adc
add
add
pushf
xor
ss
xor
ss
mov
push
mov
xor
push
clc
xor
xor
int
cmp
sbb
gs
sub
sub
sub
in
pop
sub
and
fistp
xor
stos
pop
lods
xor
fwait
pop
in
xor
jmp
sub
dec
pop
dec
sbb
mov
imul
retf
pop
int3
ss
pop
in
ss
pop
or
sub
aaa
mov
aaa
stos
pop
pop
aaa
mov
pop
push
aaa
mov
aaa
ret
pop
xor
pop
mov
repz
nop
aaa
jmp
cwde
aaa
jecxz
mov
aaa
xor
aaa
mov
aaa
ret
pop
enter
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
jmp
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
pop
add
add
jg
add
dec
inc
add
dec
inc
add
aas
inc
add
aas
inc
add
dec
inc
add
dec
inc
add
aas
inc
add
aas
inc
add
cmovs
add
dec
add
inc
add
inc
add
cmovs
add
dec
add
inc
add
inc
add
iret
inc
add
iret
inc
add
mov
inc
add
iret
inc
add
iret
inc
add
mov
inc
add
pop
add
in
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
jmp
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
mov
inc
add
pop
pop
jg
add
jg
add
pop
pop
jg
add
jg
add
dec
inc
add
dec
inc
add
aas
inc
add
aas
inc
add
dec
inc
add
dec
inc
add
aas
inc
add
aas
inc
add
cmove
add
inc
add
inc
add
inc
add
cmove
add
inc
add
inc
add
inc
add
iret
inc
add
iret
inc
add
mov
in
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
jmp
add
add
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
jmp
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
inc
add
inc
add
iret
inc
add
mov
inc
add
iret
inc
add
iret
inc
add
mov
inc
add
pop
add
inc
add
jg
add
pop
add
add
add
add
jg
add
dec
inc
add
dec
inc
add
aas
inc
add
aas
inc
add
dec
inc
add
dec
inc
add
aas
inc
add
aas
inc
add
cmovs
add
dec
add
inc
add
inc
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
add
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
add
add
inc
add
and
inc
add
and
inc
add
cmovne
add
inc
add
inc
inc
cmovne
add
inc
add
inc
inc
iret
inc
add
iret
inc
add
mov
inc
add
iret
inc
add
iret
inc
add
mov
inc
add
pop
pop
jg
add
jg
add
pop
pop
jg
add
jg
add
dec
inc
add
dec
inc
add
aas
inc
add
aas
inc
add
dec
inc
add
fild
add
fild
add
fild
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
add
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
add
add
inc
add
dec
inc
add
aas
inc
add
aas
inc
add
dec
inc
add
dec
inc
add
aas
inc
add
aas
inc
add
cmovno
add
inc
add
inc
add
inc
add
cmovno
add
inc
add
inc
add
inc
add
iret
inc
add
iret
inc
add
mov
inc
add
iret
inc
add
iret
inc
add
mov
inc
add
pop
add
inc
add
jg
add
pop
add
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
fld
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
add
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
jmp
add
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
and
inc
add
pop
add
add
jg
add
pop
add
inc
add
jg
add
dec
inc
add
dec
inc
add
aas
inc
add
aas
inc
add
dec
inc
add
dec
inc
add
aas
inc
add
aas
inc
add
cmovne
add
inc
add
inc
inc
cmovne
add
inc
add
inc
inc
iret
inc
add
iret
inc
add
mov
inc
add
iret
inc
add
iret
inc
add
mov
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
fild
add
xchg
mov
or
mov
jmp
mov
and
fstp
jge
data16
je
aad
lods
dec
or
outs
push
js
pop
adc
lock
or
ret
sub
mov
repnz
cmp
(bad)
cli
fwait
jle
mov
cmc
jns
inc
cld
xor
enter
jno
pop
jp
push
repnz
jns
fwait
mov
sahf
retf
fsub
repnz
or
or
lds
jnp
test
call
push
pop
(bad)
mov
adc
test
mov
mov
data16
adc
or
sbb
and
into
pushf
popa
or
rol
mov
jmp
call
mov
dec
or
cld
stc
fwait
jbe
mov
or
shl
mov
ror
bound
out
pop
push
dec
(bad)
iret
add
(bad)
xchg
sub
cmc
arpl
mov
mov
pushf
dec
lods
adc
fmul
cmp
aas
inc
aam
hlt
popa
ret
mov
in
outs
fwait
shr
mov
fbld
cmp
cmp
add
(bad)
lock
push
inc
repnz
jp
or
mov
jmp
cwde
mov
add
retf
cmp
jecxz
popf
jmp
in
inc
and
imul
add
pop
pop
shl
out
loop
pop
leave
shl
mov
jg
iret
rcr
mov
repz
int3
pop
mov
lds
stos
mov
in
jmp
dec
in
movs
ret
xchg
cs
sbb
out
aas
sub
add
xor
push
dec
fidiv
fst
(bad)
xor
cmp
cmps
aad
cli
rcr
xor
jns
or
mov
ret
jl
scas
mov
pusha
xchg
(bad)
int3
repz
or
lods
ficom
sar
xor
ret
xor
inc
mov
int
cld
popf
bound
mov
les
imul
aas
pop
pop
add
inc
ret
int3
jae
in
ret
inc
push
int
loopne
xchg
loopne
push
in
push
repnz
dec
in
mov
mov
pop
add
int
clc
popf
jns
mov
daa
add
int
call
xlat
and
push
push
int
lock
mov
mov
aas
add
int
cld
popa
mov
add
inc
add
das
iret
dec
hlt
movs
push
add
push
iret
inc
hlt
pop
mov
jae
iret
dec
lock
inc
add
int
fmul
add
jbe
add
movs
pop
add
mov
mov
push
scas
or
int
in
popf
js
mov
mov
inc
cmp
dec
xchg
mov
lahf
nop
lock
push
ror
add
add
pextrw
pextrw
pextrw
into
in
inc
cmp
add
jmp
mov
jae
sub
loop
and
inc
sbb
add
inc
inc
add
cmp
gs
mov
push
outs
add
inc
inc
add
aaa
dec
cli
gs
mov
or
cld
es
add
int
mov
(bad)
lahf
ja
sub
or
int
cld
lods
push
jge
and
ja
push
xor
mov
retf
cld
mov
fld
dec
hlt
mov
sti
add
int3
bound
vcvtps2pd
(bad)
adc
int3
ror
in
xchg
inc
add
int3
inc
xor
mov
pop
in
(bad)
pextrw
pextrw
int
mov
push
mov
add
add
push
(bad)
cmp
ret
int3
loop
(bad)
pextrw
pextrw
int
add
push
cmp
push
push
mov
inc
es
cmp
inc
es
clc
(bad)
jmp
push
add
retf
cmp
push
lods
jbe
push
popf
xchg
push
dec
jbe
mov
ret
int3
ror
in
imul
add
das
retf
cmp
mov
mov
sbb
adc
mov
inc
dec
cld
and
add
dec
scas
adc
inc
add
es
jmp
ret
int3
loop
(bad)
adc
int3
jb
(bad)
retf
cs
add
add
or
es
int3
pop
adc
int3
jb
(bad)
add
add
retf
inc
xor
inc
push
ret
js
es
jl
es
add
and
jmp
retf
cmp
mov
mov
add
jmp
mov
add
int
cld
lods
js
cmp
jae
popf
mov
mov
pop
mov
test
cli
sub
cli
add
adc
lock
test
es
mov
retf
lods
nop
add
cs
dec
clc
popf
inc
adc
jecxz
mov
retf
dec
or
xor
cld
or
retf
cmp
mov
dec
jmp
mov
add
jae
in
add
mov
retf
cmp
mov
add
retf
dec
call
scas
les
add
retf
inc
lock
pop
lock
add
add
enter
inc
mov
inc
dec
lock
ja
mov
cmp
pop
test
inc
push
popf
(bad)
loopne
fisttp
push
sub
adc
lahf
xchg
mov
jecxz
cmp
pop
sbb
push
inc
adc
inc
leave
inc
or
out
jmp
lods
jbe
mov
add
retf
cmp
mov
add
add
add
scas
jbe
(bad)
imul
add
inc
mov
sar
pop
pop
mov
cmp
pop
inc
imul
add
inc
mov
sar
xor
inc
call
add
xlat
mov
dec
(bad)
(bad)
stc
jae
dec
jb
call
sub
inc
jp
adc
sti
xlat
mov
popf
mov
(bad)
fimul
push
lods
xchg
push
ds
jmp
sar
call
adc
sub
cmp
and
mov
out
(bad)
mov
add
int
loopne
dec
idiv
leave
iret
fstp
or
int3
push
iret
in
ret
lock
je
inc
es
clc
(bad)
xlat
add
iret
cmp
std
jns
add
add
add
int
cld
popf
mov
push
lods
jno
push
lods
or
mov
ret
int3
jb
(bad)
into
in
sbb
add
push
inc
es
add
push
mov
jns
int3
repnz
vrcpps
in
add
mov
hlt
push
leave
lods
xor
hlt
into
sar
popf
mov
aam
inc
hlt
lods
sub
pop
dec
mov
add
add
jo
mov
stos
add
movs
pop
clc
add
aas
xor
lea
mov
into
push
sbb
iret
cmp
mov
aaa
mov
into
cmp
mov
cmp
into
adc
push
push
cmp
sar
jmp
xor
add
(bad)
or
int3
repnz
int3
jae
in
ret
inc
into
inc
xor
es
cld
add
mov
push
mov
lds
out
inc
clc
test
add
(bad)
lds
inc
lds
add
inc
mov
jmp
int3
add
mov
shr
cs
add
inc
inc
add
inc
add
push
in
xchg
(bad)
stc
fadd
add
and
mov
pusha
cli
inc
es
cli
inc
es
xchg
mov
pop
cli
inc
es
dec
xchg
jb
popf
call
adc
and
jmp
push
jle
loop
xor
jb
(bad)
int3
in
jmp
cmp
push
dec
dec
inc
mov
ja
int3
pop
pop
(bad)
or
int3
jae
in
add
mov
add
retf
cmp
mov
mov
inc
push
cmp
jno
mov
pop
mov
xor
or
int
call
es
add
push
mov
mov
push
add
add
imul
es
push
push
xlat
dec
lock
sbb
inc
bnd
dec
push
jne
push
inc
jb
rol
and
inc
cmp
es
mov
add
int
hlt
popf
mov
psrlw
pop
shl
lods
sub
outs
xor
je
retf
inc
call
push
sbb
adc
add
add
test
mov
adc
div
sbb
inc
pop
je
inc
jle
inc
or
jo
mov
fild
inc
and
imul
sub
dec
dec
ret
lahf
mov
jmp
retf
aam
push
cld
cmp
add
ins
sbb
out
mov
push
push
retf
adc
mov
add
inc
es
ins
or
inc
push
(bad)
jnp
cmp
dec
adc
data16
add
es
mov
jb
inc
(bad)
leave
dec
xor
aad
lock
inc
es
add
es
mov
jb
add
lock
movs
pop
pop
cli
in
add
push
push
popf
jg
push
int3
inc
not
mov
add
in
mov
retf
inc
fsubr
cld
add
retf
cmp
mov
push
mov
push
mov
pusha
cli
inc
es
xchg
loop
test
es
add
cmp
mov
enter
int3
mov
dec
xchg
enter
pop
cli
inc
sub
lds
add
push
popf
cs
cli
in
push
mov
out
call
movs
inc
fninit
mov
and
mov
xor
add
mov
push
popf
inc
pushf
cli
gs
push
mov
(bad)
cli
inc
es
jne
shl
sub
mov
push
mov
(bad)
mov
xor
test
mov
sar
es
push
lahf
shl
and
inc
jp
or
push
lods
mov
mov
push
dec
sub
mov
add
pop
hlt
call
mov
inc
es
loopne
and
xchg
(bad)
fcmovne
push
push
pop
dec
es
push
repnz
sti
add
mov
mov
jno
add
add
int3
repnz
int3
jae
in
imul
retf
int3
repnz
int3
push
mov
mov
lods
xor
inc
mov
jmp
inc
int3
sar
cld
aas
movs
test
in
push
call
movs
pop
or
cs
add
inc
push
call
iret
mov
add
add
add
add
mov
add
or
fdivr
add
jmp
inc
add
imul
add
inc
mov
add
mov
cmp
inc
call
mov
dec
shl
add
pop
add
sub
add
fisttp
(bad)
and
add
lds
add
cmp
inc
add
inc
add
movs
js
jne
pop
add
adc
movs
cmp
inc
mov
lahf
jle
mov
(bad)
cli
inc
es
xor
arpl
mov
mov
add
dec
inc
add
ss
cli
gs
mov
(bad)
sub
cld
aas
es
pusha
add
inc
mov
hlt
fcmovnb
test
add
add
movs
cwde
cli
in
not
test
xchg
cli
in
push
call
movs
pop
std
mov
ror
aad
shl
sub
mov
mov
push
push
movs
jl
gs
push
call
movs
or
dec
(bad)
mov
lock
mov
inc
fcom
cmps
sti
mov
mov
mov
hlt
movs
xchg
cli
in
add
je
or
and
idiv
jmp
mov
add
out
add
mov
hlt
add
out
mov
mov
nop
cli
in
mov
fist
add
inc
jmp
popf
js
and
mov
mov
add
sub
mov
add
imul
adc
leave
inc
add
mov
jmp
leave
inc
add
movs
jl
in
add
mov
and
mov
push
cli
inc
es
mov
pop
cli
inc
es
mov
push
cli
inc
fadd
cmp
test
lahf
cmp
es
inc
add
inc
mov
sbb
mov
dec
cli
inc
mov
push
call
movs
or
mov
enter
jae
aad
int
test
push
cld
xor
fldcw
mov
pop
cli
inc
sar
inc
add
pop
cli
in
mov
call
mov
test
inc
es
xor
add
add
fstp
add
int3
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
add
add
inc
add
cs
add
call
xor
ja
xor
movs
add
ds
add
adc
jnp
aas
jns
clc
aas
cmp
es
add
je
xor
je
xor
jae
xor
je
xor
ja
xor
ja
xor
jbe
xor
jo
xor
jo
xor
jo
xor
add
add
bound
jo
xor
outs
(bad)
xor
outs
test
pop
jno
xor
shl
xor
sbb
ss
jne
xchg
mov
ss
aad
int
jecxz
mov
ss
jno
aaa
cmp
aaa
push
jae
aaa
out
jb
aaa
pop
jae
aaa
nop
jb
aaa
mov
mov
cmp
jl
cmp
jl
cmp
add
add
jnp
cmp
jnp
cmp
jnp
cmp
jnp
cmp
jl
cmp
jl
cmp
jl
cmp
jl
cmp
jnp
cmp
cmp
jnp
scas
jnp
cmp
jnp
cmp
jnp
cmp
jnp
cmp
push
cmp
jle
cmp
inc
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
es
add
mov
adc
ret
retf
sub
retf
fisubr
push
pop
and
cmc
test
fidivr
movs
and
pop
out
jg
mov
repnz
mov
mov
sub
pop
int3
loop
clc
push
mov
int
and
mov
push
sbb
jmp
ds
push
dec
pop
cwde
fwait
or
or
and
jecxz
psubusb
out
dec
clc
dec
sbb
(bad)
sbb
push
xchg
xor
movs
test
pop
lahf
daa
mov
ins
andps
adc
and
cmp
and
bound
icebp
push
call
push
add
sub
call
into
stc
mov
mov
xor
dec
inc
and
out
ret
mul
xor
fcomp
xchg
mov
into
jb
jno
pop
xlat
mov
enter
or
bnd
imul
ret
(bad)
sbb
aaa
pop
xchg
xchg
mov
xlat
sub
loope
ins
jbe
cld
mov
push
add
scas
ror
xchg
adc
mov
rcl
lds
xor
imul
inc
mov
std
fild
inc
dec
das
paddsw
cmp
hlt
pop
lea
jecxz
ins
in
(bad)
jo
shl
fsub
inc
es
outs
adc
sahf
add
xchg
pop
jbe
hlt
adc
jl
leave
xchg
cmp
(bad)
fidiv
jg
nop
aad
mov
cdq
jae
mov
retf
xchg
lods
mov
adc
xchg
xchg
inc
icebp
jle
loop
(bad)
xchg
push
push
pop
dec
pop
int3
sub
sub
push
adc
mov
loope
pop
pop
pop
xchg
int3
lock
and
xchg
mov
cmp
mov
push
idiv
adc
inc
jg
jae
in
je
push
dec
inc
les
mov
mov
in
or
inc
clc
fsub
add
mov
mov
mov
push
mov
push
mov
push
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jae
mov
jmp
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
pop
ret
int3
push
mov
mov
pop
ret
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
mov
movzx
pop
ret
int3
push
mov
sub
mov
jmp
mov
add
mov
mov
cmp
jae
mov
mov
movzx
sar
cmp
jne
mov
mov
push
mov
push
call
add
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
jmp
mov
add
mov
mov
cmp
jae
mov
cmp
jne
push
push
call
push
push
call
push
push
push
push
push
push
push
call
mov
cmp
je
cmp
jne
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
cmp
je
mov
mov
mov
sub
shr
mov
mov
add
mov
mov
push
mov
push
mov
push
mov
push
mov
push
call
add
mov
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
lea
push
push
push
call
test
je
push
push
push
push
call
mov
mov
mov
lea
push
mov
push
push
call
test
je
push
push
push
push
call
mov
lea
push
push
mov
push
call
test
je
push
push
push
push
call
lea
push
push
mov
push
call
test
jne
push
push
push
push
call
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
pusha
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
push
push
push
push
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
mov
mov
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
mov
mov
mov
push
call
add
mov
push
mov
push
mov
add
push
call
add
mov
sub
push
mov
push
mov
push
call
add
mov
mov
pop
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
pop
jmp
call
pop
jmp
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
jmp
jmp
