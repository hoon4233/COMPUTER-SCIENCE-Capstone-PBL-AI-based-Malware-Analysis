jmp
inc
test
fsub
dec
push
daa
movs
dec
push
aaa
movs
push
push
popa
cmp
add
nop
pop
mov
call
and
push
add
in
std
arpl
arpl
call
mov
es
hlt
jcxz
movs
arpl
mov
push
das
movs
dec
push
sub
lods
mov
adc
imul
arpl
sbb
xor
adc
or
push
cwde
arpl
ror
fstp
xchg
or
push
xchg
stos
shl
(bad)
adc
es
push
rol
inc
push
jle
neg
add
add
into
popf
fwait
or
enter
jnp
xor
push
and
outs
or
loopne
mov
fsub
dec
scas
loopne
enter
cmp
call
or
push
xor
push
popa
and
and
jg
and
push
fsub
retf
xor
push
out
mov
into
in
xor
daa
aaa
cmovae
push
xor
sbb
repnz
jg
pop
cmps
test
mov
(bad)
adc
mov
inc
dec
push
outs
test
in
or
pushf
aam
shr
sti
dec
push
outs
test
in
imul
push
or
shl
pushf
jg
sbb
jmp
arpl
dec
xor
cld
inc
fsub
inc
dec
shl
inc
inc
enter
shl
inc
mov
push
les
mov
fsub
lods
jmp
js
lods
dec
sar
fmul
add
push
pop
add
test
fldenv
inc
test
sbb
(bad)
fld
arpl
inc
fsub
scas
jns
xor
cmp
cmp
arpl
inc
fsub
adc
jmp
or
push
cwde
arpl
and
add
add
push
push
push
and
movs
inc
fstp
test
lock
inc
mov
xor
call
mov
fcomp
mov
fsubr
movs
push
push
adc
cwde
jbe
jmp
fsub
test
inc
inc
(bad)
jmp
xor
test
(bad)
adc
jecxz
test
jmp
pop
or
sub
fsub
(bad)
mov
adc
fmul
or
xchg
addr16
pop
(bad)
xor
and
das
mov
or
mov
fldenv
ret
jle
mov
push
(bad)
aaa
mov
push
jbe
or
inc
push
out
mov
xor
fsub
inc
dec
in
jg
fcom
test
and
pop
movs
xchg
push
cmp
ret
jle
push
movs
mov
mov
xchg
or
mov
loop
and
fwait
ror
popf
lahf
shr
xlat
arpl
inc
mov
jmp
imul
arpl
paddd
dec
cs
test
mov
xor
pushf
cmc
pop
mov
jg
enter
xor
mov
mov
pop
test
mov
xor
fild
dec
pop
movs
retf
pop
fsub
xchg
or
(bad)
fdivr
je
cmp
arpl
mov
and
call
sub
daa
push
mov
push
movs
mov
xor
xor
pushf
cmc
push
daa
push
pushf
sub
daa
push
jl
cwde
sbb
xor
sahf
fsub
mov
addr16
xor
xchg
xchg
addr16
popf
xchg
or
(bad)
jmp
(bad)
pop
es
iret
std
xchg
int3
popf
fwait
or
and
les
lahf
sub
or
and
jbe
mov
int3
popf
lahf
cmp
data16
jle
push
add
and
jnp
arpl
mov
daa
es
popf
jae
add
test
popf
lahf
imul
fadd
xchg
in
push
es
popf
fwait
(bad)
into
sub
dec
mov
fcom
jns
pop
adc
popf
lahf
or
shr
inc
les
pushf
rol
bound
mov
daa
pushf
cmp
xchg
dec
test
arpl
inc
fdiv
(bad)
adc
mov
test
ret
jle
in
push
sar
push
out
mov
icebp
mov
jle
daa
data16
repz
les
pushf
rol
bound
xor
movs
add
inc
xor
or
icebp
xchg
or
shr
xchg
jge
test
lods
push
out
mov
and
mov
and
mov
and
jle
push
mov
test
pushf
jg
push
out
inc
daa
pushf
fistp
sub
stos
int3
xor
adc
mov
movs
ins
cmp
mov
jmp
xor
fsubr
std
dec
bound
or
fbld
or
sbb
or
and
or
shl
lds
popf
xchg
ja
sub
lds
xchg
dec
test
xor
adc
mov
and
or
and
inc
jbe
jmp
xor
dec
bound
or
fbld
or
sbb
or
and
cmp
mov
jmp
call
pop
fdivr
sbb
mov
rcl
(bad)
push
ds
sbb
or
and
inc
jbe
jmp
call
add
ins
ds
loopne
jp
sub
int
xlat
fst
jmp
and
cwde
movs
add
and
mov
cmp
(bad)
jmp
push
push
mov
or
adc
push
fwait
mov
push
movs
jg
lods
xlat
ret
push
mov
xchg
(bad)
mov
and
fisttp
xor
sbb
and
mov
and
rcl
xor
inc
arpl
push
mov
and
inc
sbb
jmp
push
ds
push
jge
pop
pusha
jmp
addr16
popf
lahf
or
hlt
pop
add
jmp
arpl
dec
mov
jmp
fcmovnb
dec
fsub
mov
pop
movs
test
jo
xchg
dec
test
xor
aas
xor
leave
fadd
das
cli
fiadd
loopne
fstp
add
and
jnp
adc
jnp
adc
call
test
rcr
push
jnp
adc
jmp
push
movs
push
sbb
jmp
(bad)
addr16
outs
and
inc
(bad)
(bad)
arpl
and
arpl
inc
xor
lock
fsubr
lds
call
into
sbb
js
and
inc
jbe
push
dec
inc
mov
inc
xor
and
retf
shr
push
mov
(bad)
fistp
jmp
push
xchg
add
cmp
or
pushf
mov
enter
fsub
inc
push
mov
add
mov
xchg
xchg
bound
pop
xor
jg
jmp
stos
inc
adc
cmp
bound
inc
mov
and
mov
add
xlat
ret
pushf
add
add
xlat
ret
ret
call
(bad)
fldenv
int3
popf
outs
and
ins
and
inc
fsub
mov
inc
lods
jnp
fstp
adc
push
jg
shl
imul
arpl
add
daa
arpl
mov
aam
push
xor
mov
pusha
add
daa
popf
jg
xor
mov
in
jg
fcom
mov
std
jmp
add
fldenv
(bad)
sub
jae
mov
retf
ror
popf
imul
fdiv
or
xor
into
popf
lahf
add
sub
pop
jmp
add
jl
xlat
out
inc
fsub
and
arpl
jp
xlat
ret
pushf
add
or
add
inc
movs
xlat
ret
es
fstp
xor
fcom
xor
fsub
cmp
into
popf
fwait
add
arpl
stos
arpl
lahf
push
mov
add
js
popf
mov
cmp
retf
ror
lods
add
enter
fsub
inc
sub
or
shr
inc
call
or
and
pop
mov
jmp
sbb
std
mov
inc
rol
mov
popa
add
mov
mov
inc
fsub
add
inc
xor
jmp
pop
mov
and
jnp
adc
pop
jg
dec
arpl
dec
sbb
xchg
sbb
xor
fcomp
dec
loope
pop
mov
pop
nop
add
arpl
jp
rol
fcom
mov
inc
rol
mov
mov
mov
add
call
js
pop
dec
jg
daa
loopne
fstp
add
mov
xchg
arpl
pop
mov
mov
xchg
dec
test
jae
adc
push
add
jmp
xchg
mov
and
or
shl
mov
xlat
fsub
dec
add
xchg
sbb
or
es
pop
mov
into
sub
cvtdq2ps
lds
daa
add
hlt
dec
in
hlt
inc
pop
push
jl
push
es
pushf
pusha
adc
fmul
add
aas
jmp
js
ret
mov
mov
pushf
mov
and
add
and
hlt
adc
and
call
mov
and
mov
push
fwait
ja
push
es
pop
mov
sub
sub
mov
loope
test
push
test
mov
push
js
pop
and
mov
je
pushf
jg
mov
lahf
xor
pushf
cmc
dec
mov
sbb
fmul
imul
arpl
inc
mov
jmp
arpl
fstp
arpl
inc
mov
jmp
arpl
add
jmp
in
xor
jmp
mov
jg
rcr
inc
fmul
or
xchg
shr
call
sub
arpl
mov
sub
lds
and
fistp
sub
out
fsub
scas
cld
push
add
xlat
cld
mov
shl
inc
fcom
mov
sbb
fsub
jg
mov
pusha
add
fsub
ret
jle
push
out
mov
test
jg
sub
inc
fsubr
pop
jbe
jmp
fsub
sub
scas
jg
daa
jmp
ins
scas
jg
daa
out
add
pop
xor
inc
dec
pop
pop
sbb
call
inc
fsub
movs
push
out
mov
push
out
mov
inc
rol
mov
mov
add
inc
xor
pop
mov
jmp
sbb
add
pop
mov
popa
add
daa
popf
jg
push
pop
jg
in
add
lds
out
imul
fsub
ret
jle
mov
sbb
call
aas
push
es
sbb
shl
das
mov
rol
inc
mov
and
sbb
jg
pop
scas
jg
daa
rcl
call
test
ds
inc
rol
mov
mov
add
inc
dec
pop
fild
cli
pushfw
jle
fsubr
fisub
(bad)
gs
jg
daa
arpl
inc
mov
call
retf
jg
daa
xor
cs
jg
sbb
or
daa
popf
jg
sbb
mov
ret
jle
in
jg
fsubr
fisub
dec
outs
out
mov
push
out
mov
mov
rol
out
inc
fsub
inc
dec
xlat
aam
loope
popf
jg
fsub
out
arpl
mov
mov
ret
ins
add
(bad)
sbb
sub
mov
and
fmul
add
fsub
pusha
mov
call
retf
jg
daa
xor
dec
cs
jg
sbb
mov
xor
movs
add
inc
fsub
sub
call
scas
xor
mov
pushf
add
jmp
out
cmp
adc
test
mov
in
jg
fcom
mov
daa
bound
das
jne
ret
xor
push
fmul
add
fsub
pusha
mov
call
retf
jg
daa
xor
into
sub
outs
mov
xor
movs
add
inc
fsub
sub
call
scas
mov
cmps
mov
pushf
add
jmp
out
cmp
adc
and
mov
in
jg
fcom
mov
daa
bound
mov
jmp
sbb
sub
mov
and
fmul
add
fsub
dec
pop
out
mov
fsub
inc
mov
pusha
add
cdq
arpl
sub
jg
sbb
mov
xor
movs
add
inc
fsub
sub
call
scas
adc
jg
pop
cmps
mov
pushf
add
jmp
out
cmp
adc
int3
je
daa
loopne
dec
in
jg
fcom
popf
sub
call
mov
daa
pushf
add
fsub
dec
pop
out
mov
fsub
mov
push
sub
into
movs
test
ins
and
mov
jo
jg
or
and
js
and
xlat
ret
mov
inc
ret
jle
fmul
add
out
mov
pop
mov
or
xor
into
popf
lahf
mov
fsub
ret
jle
mov
add
pop
push
pop
jg
clc
jmp
push
mov
pop
sbb
(bad)
push
mov
sub
enter
and
inc
pop
fidivr
mov
push
(bad)
add
inc
ins
cmps
arpl
mov
pop
out
mov
fsub
ret
jle
mov
add
pop
push
out
mov
call
mov
add
es
or
pushf
shr
dec
add
push
out
mov
loopne
xchg
jp
arpl
dec
sbb
fsub
retf
jg
daa
xor
ret
jle
mov
mov
inc
fsubr
lds
push
mov
pop
fsub
inc
push
out
mov
pop
mov
mov
daa
xor
into
popf
lahf
mov
fsub
mov
push
add
or
mov
daa
popf
jg
push
pop
jg
loopne
lds
fcom
mov
movs
lahf
or
add
add
pop
push
out
mov
loopne
xlat
arpl
jl
add
into
sbb
std
mov
(bad)
(bad)
xor
in
fsub
and
inc
daa
(bad)
js
es
call
retf
jg
daa
xor
mov
add
outs
add
xor
jle
fmul
jmp
loop
(bad)
popf
arpl
mov
daa
popf
jg
mov
pusha
add
daa
popf
jg
xor
fsub
inc
push
push
mov
out
pop
jmp
mov
pop
(bad)
jg
daa
jmp
pop
(bad)
jg
daa
xor
mov
aas
fiadd
push
(bad)
or
enter
fsub
inc
sub
or
xor
mov
and
inc
dec
pop
or
inc
fsub
and
inc
pop
mov
or
mov
call
mov
int3
pop
add
or
and
inc
dec
pop
dec
add
jae
and
mov
jl
jle
mov
mov
add
inc
dec
pop
pushf
add
popf
jg
xor
sub
jmp
pop
out
mov
push
out
mov
mov
out
mov
ins
adc
daa
loopne
push
push
test
inc
fsub
mov
out
xor
les
or
fcom
jg
daa
xor
js
xor
into
popf
lahf
cmp
(bad)
arpl
sbb
popf
jg
sbb
std
mov
fldenv
les
jg
daa
arpl
mov
call
mov
int3
pop
add
or
and
inc
dec
pop
jne
inc
fsub
cmp
inc
xlat
out
inc
fsub
ret
jle
mov
cmp
call
jg
push
pop
jg
clc
jmp
push
mov
pop
add
inc
mov
popf
jg
xlat
out
inc
fsub
cli
mov
jle
fsubr
fsub
retf
jg
daa
xor
mov
jle
xor
mov
push
movs
(bad)
into
cmp
daa
loop
loope
arpl
mov
push
arpl
mov
fsub
inc
daa
(bad)
sub
and
or
cmps
call
mov
fsub
or
or
les
pushf
rol
bound
mov
xor
inc
fcomp
retf
jg
daa
xor
ret
jle
push
out
mov
xor
jmp
dec
mov
or
mov
call
mov
fsub
or
jae
popf
arpl
mov
push
out
mov
call
mov
fdivr
daa
out
mov
js
jle
loope
sub
aad
jg
push
out
mov
call
out
mov
call
out
mov
cmp
jle
loope
ins
mov
ss
jg
pop
fidiv
es
xor
movs
add
inc
pusha
inc
add
arpl
pop
retf
jg
daa
jmp
daa
xor
ja
xor
jg
daa
arpl
dec
push
out
mov
call
ficom
pushf
xor
call
jg
push
push
jg
shr
add
pop
push
push
jg
shr
add
pop
push
push
jg
shr
pop
jbe
jmp
daa
xor
ja
xor
jg
xchg
or
ins
and
inc
mov
arpl
and
add
add
push
push
push
jo
dec
add
cmp
int3
inc
fsub
inc
pop
es
std
arpl
inc
xor
inc
fsub
inc
inc
xor
jbe
daa
loopne
(bad)
ins
and
jbe
es
daa
pushf
jg
lock
lds
push
es
test
push
daa
and
cmp
jle
es
and
jg
daa
cmp
sbb
call
add
adc
push
xchg
adc
out
(bad)
jmp
push
movs
call
sub
mov
arpl
inc
xor
adc
test
inc
fdivr
test
ja
adc
mov
movs
pop
aas
and
xchg
xor
push
mov
rol
jo
sub
inc
(bad)
std
jnp
push
fsub
(bad)
loopne
rol
movs
dec
dec
and
ficomp
arpl
pushf
cli
rol
add
ror
rol
cdq
arpl
push
fsubr
dec
push
sbb
jg
fsub
enter
inc
daa
inc
add
(bad)
aad
pop
push
fsub
imul
fst
xor
fcom
(bad)
loope
(bad)
rcr
sub
cmps
fsub
or
and
jg
and
inc
pop
outs
cwde
fcomp
pop
pop
mul
inc
cs
arpl
ficomp
cld
rol
jg
loopne
rol
ja
push
es
push
mov
inc
loopne
rol
add
and
push
fdiv
inc
jmp
arpl
inc
fsub
lea
and
push
fadd
nop
xlat
cwde
arpl
daa
pushf
jg
fnstsw
push
fsub
inc
jmp
arpl
inc
fsub
lea
and
mov
inc
and
xchg
add
mov
jnp
push
fsubr
pop
inc
and
inc
xor
test
and
xchg
(bad)
add
jo
sub
inc
(bad)
aad
pop
push
fsub
inc
xor
rol
add
jle
daa
xchg
test
and
xchg
jmp
xlat
arpl
push
fsub
inc
pushf
cli
rol
add
jle
daa
pushf
test
ins
and
push
fsubr
jo
sub
inc
(bad)
aad
pop
push
fsub
imul
inc
inc
fldenv
fcomp
arpl
mov
movs
add
cld
rol
popa
inc
fsub
stos
inc
and
inc
loopne
rol
add
(bad)
ficomp
repz
add
ins
ficomp
cld
rol
add
test
ins
and
push
fsub
fcmovnu
arpl
into
push
loopne
jg
and
inc
fcom
scas
push
bound
fcomp
sub
push
push
arpl
pop
js
or
shl
call
mov
cld
out
call
arpl
inc
fsub
jge
inc
add
(bad)
aad
pop
push
fsub
imul
hlt
repz
push
fsub
jg
and
jg
and
into
push
jecxz
pop
inc
and
xchg
xor
out
nop
arpl
add
inc
and
inc
fsub
(bad)
cdq
jmp
ret
xchg
test
icebp
fst
and
fsub
add
ins
ss
test
ret
add
popf
cwde
mov
dec
pop
jmp
cwde
push
xchg
fsub
outs
pop
call
jp
arpl
add
add
adc
fsub
mov
inc
lods
jbe
cmp
arpl
adc
lods
das
add
repz
ret
(bad)
movs
cdq
test
cld
jecxz
pop
inc
and
mov
movs
or
cmp
rol
test
cmp
and
std
mov
movs
cwde
xor
loopne
dec
dec
and
mov
movs
add
repz
cwde
into
adc
or
repz
or
pop
sbb
fcomp
out
repz
mov
cwde
arpl
pushf
pop
(bad)
(bad)
arpl
(bad)
aam
rol
cwde
into
adc
or
repz
or
retf
and
dec
and
inc
loope
mov
cwde
arpl
pushf
daa
data16
repz
inc
dec
and
sbb
mov
rcl
(bad)
(bad)
xor
jb
mov
lds
lods
xlat
ret
push
add
fsub
xor
push
in
ret
ret
dec
cmp
xchg
in
cld
rol
mov
xchg
data16
popf
fwait
or
fdiv
adc
inc
inc
mov
cmp
xchg
in
cld
rol
cmp
xchg
in
ret
ret
cmp
les
rcl
(bad)
fcomp
ficomp
or
arpl
ret
bound
or
retf
sar
fsub
inc
push
mov
add
xor
or
mov
es
fsub
(bad)
xor
mov
mov
fcomp
les
push
pop
into
sbb
in
fsub
inc
pop
es
inc
fsub
(bad)
mov
or
inc
jmp
fsubr
lds
call
inc
fcomp
jmp
fsub
movs
push
es
sbb
inc
pop
push
cmp
push
cmp
lods
mov
inc
fsub
mov
out
lds
fisub
add
jg
sub
rol
mov
push
mov
jmp
arpl
inc
mov
jmp
add
pop
daa
push
and
popf
rcl
sub
fsub
inc
lods
xlat
ret
arpl
js
sub
pushf
cmc
mov
fcomp
dec
pop
fsub
movs
push
es
sbb
inc
fcomp
retf
sar
cmp
jg
sub
rol
lods
fsubp
imul
arpl
test
inc
inc
add
xchg
xchg
call
fs
popf
xor
jmp
popf
outs
or
sub
int
push
cs
mov
jmp
fmul
sub
out
lds
mov
or
mov
int
pop
push
fsubr
lds
and
rol
inc
adc
rcl
addr16
(bad)
jmp
fst
xor
fcomp
push
enter
pusha
test
inc
fcom
add
add
push
push
mov
test
inc
lods
xlat
ret
pushf
(bad)
icebp
fcomp
mov
in
ins
ss
bound
xor
ins
ss
popa
mov
xor
ins
ss
pusha
mov
xor
ins
ss
addr16
dec
pop
imul
inc
push
ja
iret
int3
pop
inc
add
arpl
icebp
fsub
sti
call
test
out
inc
fsub
mov
into
pop
inc
dec
pop
jmp
inc
fsubr
jp
xor
icebp
int3
jne
test
mov
jle
push
out
into
and
push
inc
in
add
fimul
es
sbb
fisttp
cmp
fdiv
push
dec
outs
ss
or
push
int
cmp
fdiv
shr
push
es
adc
push
frstor
les
addr16
les
or
sub
lds
daa
add
add
push
ja
inc
fsub
lods
clc
ins
add
or
pop
pop
test
lods
ins
add
daa
bound
daa
pushf
jg
fst
xor
fsub
mov
into
and
add
addr16
or
fwait
add
fcom
ror
loopne
inc
pop
pop
xchg
push
or
outs
xchg
pop
xchg
jp
arpl
mov
in
movs
xor
jmp
loopne
add
push
addr16
inc
fsub
(bad)
in
xor
jmp
lods
aas
or
in
xor
jmp
fisub
add
add
ficomp
inc
fsub
inc
in
add
scas
les
pushf
or
enter
frstor
les
addr16
scas
fsubr
lds
pushf
pusha
test
loopne
inc
push
ss
int3
add
jnp
(bad)
cmc
adc
in
xor
xor
jnp
(bad)
cmc
jns
fwait
add
fst
mov
and
push
inc
in
hlt
dec
in
add
xchg
arpl
out
and
lea
adc
cmp
add
arpl
and
cmp
(bad)
jmp
(bad)
pushf
test
ins
and
pop
jmp
pop
mov
(bad)
daa
mov
(bad)
daa
mov
add
mov
pusha
add
neg
fsub
inc
dec
daa
data16
repz
movs
(bad)
mov
inc
jmp
mov
jg
sbb
jp
arpl
scas
fsub
xor
loopne
mov
add
mov
int3
gs
and
test
cwde
arpl
lods
(bad)
jmp
sahf
retf
or
push
xchg
sbb
push
es
pushf
jge
int3
lea
test
cwde
arpl
mov
adc
xchg
push
cdq
sbb
push
addr16
push
daa
sahf
inc
push
ss
enter
ins
and
mov
fnstenv
lds
fcomp
inc
fsub
adc
aad
push
sbb
fdivr
call
les
fistp
sub
sbb
arpl
inc
mov
jg
push
out
cwde
daa
pushf
sub
arpl
sbb
inc
ret
jg
fsub
test
ins
and
cwde
daa
pushf
xor
ins
ss
jg
pop
pop
test
and
cli
cmp
dec
outs
out
test
pushf
add
add
xor
outs
mov
push
pushf
jg
adc
aad
cmp
fdiv
push
int3
dec
retf
pop
mov
mov
rol
adc
sub
jge
dec
aad
cmp
(bad)
adc
mov
cdq
arpl
and
dec
(bad)
pop
mov
clc
repnz
jae
daa
pushf
or
pushf
jmp
(bad)
jecxz
inc
push
fadd
inc
fsubr
daa
pushf
jg
pop
nop
outs
mov
dec
nop
outs
mov
pop
pop
xchg
addr16
and
inc
fsub
icebp
dec
nop
outs
mov
push
ja
pop
inc
and
mov
ins
and
mov
dec
bound
mov
pop
pushf
jg
fst
xor
fsubr
adc
into
or
xchg
into
add
inc
cwde
arpl
ret
jg
jmp
arpl
jmp
jbe
sbb
js
daa
pushf
mov
fcomp
mov
pushf
jg
pmaxsw
pop
xor
inc
fcomp
les
outs
mov
fsub
das
daa
pushf
add
ins
test
pushf
jg
add
mov
push
es
sbb
loop
jge
pop
mov
pop
mov
mov
push
mov
bound
ss
in
fld
mov
and
(bad)
daa
arpl
daa
pushf
add
(bad)
into
add
push
fsub
ret
jg
xor
add
xor
push
jl
rcr
add
inc
fsub
int3
pop
out
pop
mov
fsub
ret
jg
xlat
in
mov
lods
xlat
ret
(bad)
pop
cwde
daa
pushf
push
scas
cwde
pusha
add
adc
xchg
popa
or
inc
adc
fsubr
adc
les
outs
mov
sub
jg
sbb
imul
lahf
or
jmp
push
div
pushf
inc
movs
(bad)
pop
xchg
popa
inc
cmps
fisub
mov
ficomp
(bad)
gs
outs
mov
fcom
aaa
mov
fsub
cmp
inc
lods
cmp
sbb
sub
out
cdq
daa
pushf
or
fsub
into
dec
call
daa
loopne
aas
(bad)
ret
jg
push
out
cdq
daa
pushf
or
inc
mov
pushf
inc
(bad)
add
int3
pop
ret
pop
mov
push
pushf
jg
(bad)
add
into
pop
iret
pop
mov
pop
pushf
jg
pop
mov
pushf
retf
pop
mov
add
jg
xor
xlat
inc
fsubr
add
jle
fistp
daa
push
ret
int3
pop
cmps
pop
mov
pop
pushf
jg
pop
mov
cmp
inc
lods
mov
mov
repz
pushf
jg
xor
int3
dec
fistp
daa
mov
lea
arpl
je
jg
xor
jg
lods
xlat
ret
aad
mov
pushf
jg
cmp
retf
jg
repz
push
cwde
daa
pushf
or
push
adc
shr
mov
sbb
mov
shr
jg
mov
nop
inc
fdiv
push
into
pop
rcr
daa
push
dec
pop
add
dec
fsubr
fldenv
int3
pop
xchg
outs
mov
in
add
pop
movs
imul
fmul
or
sub
jg
push
ja
inc
fsub
les
pushf
or
ret
jg
push
out
cdq
daa
pushf
add
xchg
daa
or
cmp
jg
push
xchg
enter
cmc
outs
push
xchg
add
lods
jge
mov
mov
push
push
xchg
add
lods
imul
(bad)
loopne
hlt
dec
xchg
mov
fst
xor
fsubr
jnp
jg
sbb
and
daa
pushf
add
jnp
jg
fldcw
in
add
xchg
int3
fcom
inc
fsub
scas
daa
out
les
jmp
pop
jmp
aaa
pushf
jg
and
int
jmp
add
fisub
pushf
repnz
pop
into
and
outs
mul
cdq
daa
pushf
inc
movs
(bad)
cmp
jl
jg
push
fs
pop
add
jecxz
jp
arpl
(bad)
in
add
xor
jecxz
jp
arpl
(bad)
in
test
arpl
(bad)
xlat
aad
in
pushf
jg
sbb
xor
ins
ss
jg
mov
mov
daa
mov
mov
aam
cmp
inc
lods
and
loop
mov
fsubr
adc
xchg
popa
or
cmp
or
add
xor
mov
daa
loop
mov
pushf
jg
fsub
xor
ins
and
mov
daa
pushf
or
pushf
jmp
(bad)
jecxz
inc
push
fadd
inc
fsubr
and
test
pop
rcl
(bad)
pop
es
jmp
and
arpl
daa
bound
xor
cmp
arpl
add
jmp
mov
jmp
in
out
add
fsub
jecxz
push
push
retf
cmp
inc
fsub
jecxz
push
js
loop
add
add
dec
fwait
jecxz
mov
push
mov
js
popf
popf
sub
jle
pushf
jbe
xor
jecxz
mov
popf
popf
add
cmp
lds
fsub
inc
xlat
aad
mov
xlat
out
inc
fsub
add
in
inc
fsub
lds
fstp
inc
fsub
and
std
mov
js
lods
add
daa
bound
test
xchg
and
dec
pop
cdq
test
shl
js
movs
add
daa
bound
add
mov
xchg
and
inc
pop
es
push
es
sbb
into
lea
movs
xchg
arpl
inc
lods
add
daa
addr16
icebp
fistp
inc
fsub
dec
and
add
add
and
ins
pop
mov
inc
xor
inc
xlat
aad
mov
lods
add
daa
bound
pop
es
pop
push
jl
stos
xchg
sub
leave
lds
ins
ss
in
add
test
popf
pushf
or
cmp
(bad)
jmp
rcr
xor
sub
add
add
jmp
jmp
in
xor
jmp
test
xchg
xor
les
(bad)
jmp
push
mov
inc
adc
cmp
arpl
inc
mov
push
xchg
addr16
pop
lahf
pop
mov
and
inc
retf
(bad)
mov
fadd
xchg
adc
arpl
mov
fsub
or
js
and
inc
jbe
cmp
mov
or
jno
add
mov
jmp
mov
adc
arpl
sbb
or
mov
out
xchg
das
das
add
arpl
inc
mov
call
mov
mov
into
push
loopne
mov
aam
hlt
inc
push
es
clc
arpl
mov
sub
inc
jbe
mov
sub
mov
into
sbb
inc
push
mov
shr
es
aaa
mov
movs
outs
xor
call
je
fsubrp
lds
lods
xchg
sar
adc
add
push
fsub
add
xchg
and
into
pop
cmp
sbb
mov
rcl
(bad)
fdiv
mov
mov
call
sub
fmul
add
jg
ror
or
fsub
mov
sbb
sub
arpl
xchg
jg
pop
pop
add
arpl
mov
adc
add
or
inc
mov
pusha
add
mov
(bad)
das
mov
push
(bad)
fldenv
inc
xchg
or
(bad)
fdiv
dec
jl
cmp
xor
movs
jmp
or
fsub
xchg
push
mov
push
movs
or
sub
inc
les
pushf
cmc
inc
jmp
popa
jmp
xor
add
jg
enter
mov
or
mov
mov
cwde
cmp
mov
or
push
push
mov
push
and
sub
cmps
inc
fcom
into
pop
mov
inc
sbb
cmp
pop
je
daa
push
mov
cdq
add
xor
rol
loop
mov
mov
pusha
add
fsub
or
pop
lods
retf
ins
ss
(bad)
xor
jb
and
inc
pop
cmps
mov
mov
xor
lods
shl
mov
sbb
push
mov
sub
sub
cmps
mov
popf
lahf
or
and
ficomp
mov
rcl
(bad)
push
push
mov
sbb
add
cmps
inc
fmul
mov
mov
arpl
push
xlat
aad
jl
or
cmps
mov
les
(bad)
jle
adc
inc
rol
cmp
add
inc
inc
sbb
aad
xchg
or
mov
(bad)
xchg
pop
mov
add
into
sbb
add
pop
les
xchg
or
inc
popa
pusha
add
and
inc
das
or
add
inc
(bad)
movs
jae
xor
add
or
imul
daa
mov
inc
das
or
add
inc
dec
outs
es
outs
daa
test
popf
pop
cmp
popa
cmc
inc
pop
push
ins
inc
pop
mov
jae
arpl
sub
bound
cmp
arpl
mov
mov
and
fs
mov
fsub
icebp
popf
popf
(bad)
icebp
pushf
data16
sbb
add
jecxz
mov
mov
add
popf
add
pminsw
cmp
lds
aam
aaa
inc
push
mov
jno
xchg
mov
in
inc
fsub
lock
lds
push
mov
dec
ins
popf
(bad)
(bad)
lock
xor
popf
xchg
add
ins
aaa
pop
fsubrp
aad
xlat
aam
inc
icebp
mov
lock
lds
outs
and
lock
xchg
fldenv
fs
popf
xchg
push
mov
fistp
sub
xlat
dec
fild
cld
pop
in
rol
clc
pop
iret
ds
sbb
adc
dec
pop
scas
xlat
dec
repz
repz
dec
and
xlat
dec
repz
dec
repz
dec
and
xlat
dec
repz
dec
repz
dec
pop
pop
xlat
dec
repz
add
adc
dec
fild
cld
or
(bad)
dec
sbb
adc
sbb
adc
dec
pop
pushf
xlat
dec
repz
repz
dec
loopne
inc
dec
repz
repz
dec
push
ins
xlat
dec
repz
dec
repz
dec
add
into
leave
sahf
jg
mov
repz
fsub
inc
xor
xlat
dec
repz
cmc
inc
mov
pop
dec
repz
push
sub
shl
adc
jmp
repz
test
xlat
dec
repz
stos
dec
repz
pop
mov
add
repz
lods
stos
adc
dec
repz
dec
repz
mov
pushf
adc
add
cwde
arpl
pop
iret
ds
arpl
call
daa
dec
repz
dec
fild
sub
dec
cmp
xlat
dec
repz
and
xlat
dec
pop
rcl
dec
repz
pop
in
rol
pop
xlat
dec
repz
repz
dec
push
push
xlat
dec
repz
dec
repz
dec
jmp
das
repz
dec
repnz
dec
repz
dec
repz
dec
(bad)
pop
iret
adc
repz
dec
bound
dec
repz
dec
fild
les
arpl
xlat
dec
pop
rcl
dec
repz
or
pop
xlat
dec
repz
repz
dec
push
push
xlat
dec
repz
dec
repz
dec
jmp
das
repz
dec
repnz
dec
repz
dec
repz
dec
ffree
dec
sbb
adc
repz
dec
bound
dec
repz
dec
add
xlat
dec
repz
xor
mov
push
xchg
stos
shl
adc
mov
popf
outs
out
popf
outs
inc
add
(bad)
jns
call
add
sub
scas
add
inc
push
mov
push
mov
pushf
fxch
sbb
aad
pop
push
jnp
lods
gs
add
arpl
xor
iret
inc
fsubr
lds
fcomp
xchg
arpl
mov
and
inc
int3
popf
(bad)
sbb
lea
xor
jmp
test
xchg
jnp
adc
into
add
pop
xlat
aad
dec
outs
cs
adc
nop
dec
outs
addr16
jp
arpl
lahf
fst
(bad)
icebp
xchg
cdq
test
add
cli
inc
fmul
mov
dec
arpl
pop
xor
into
inc
fsubr
and
or
popf
xchg
(bad)
icebp
lea
or
fsub
inc
push
es
push
mov
cli
or
arpl
cmp
inc
inc
pop
push
jl
loopne
and
es
outs
mov
loope
pop
rcr
sbb
or
mov
xchg
mov
(bad)
sbb
stos
inc
fmul
cmp
pusha
inc
push
push
mov
inc
mov
icebp
test
inc
iret
lea
inc
fcom
xchg
mov
inc
fsub
add
xor
ror
add
sbb
fisub
dec
outs
push
outs
xchg
popa
or
iret
cmp
jp
faddp
inc
push
mov
into
movs
mov
dec
outs
push
outs
xchg
popa
jg
in
cmp
inc
in
cmp
xchg
or
and
inc
popf
mov
scas
pusha
add
cwde
out
faddp
inc
push
es
iret
loop
das
stos
arpl
mov
call
inc
jns
cmp
mov
cmp
repnz
jns
cmp
mov
mov
mov
jmp
(bad)
js
int
cmp
les
faddp
inc
(bad)
cli
call
scas
mov
add
pop
scas
mov
push
pop
dec
outs
pushf
or
cmp
nop
push
pop
push
cli
call
inc
xor
int
fsubr
lds
fsubr
std
lahf
xlat
aam
into
sbb
sbb
mov
sub
call
cli
call
inc
pop
cmps
mov
adc
ret
es
iret
loop
mov
sub
mov
jbe
cli
call
inc
jns
cmp
mov
cmp
repnz
jns
cmp
mov
jb
mov
es
int
cmp
les
faddp
inc
(bad)
cli
call
into
das
pusha
mov
dec
outs
outs
xchg
cmp
xchg
sar
faddp
inc
push
outs
push
cli
call
inc
in
cmp
adc
mov
int3
int3
mul
arpl
dec
add
ret
outs
mov
inc
fsub
std
test
push
test
mov
cwde
dec
outs
es
inc
sbb
ret
mov
adc
sub
or
pop
daa
push
mov
push
es
sub
xchg
inc
fmul
or
mov
mov
lods
xchg
xchg
arpl
pop
nop
arpl
inc
fcom
pop
xor
inc
out
xor
mov
inc
adc
add
mov
sub
(bad)
inc
fcom
mov
fst
xor
fmul
add
popf
mov
sub
into
push
mov
or
arpl
xchg
xchg
add
lods
sbb
test
into
pop
loopne
push
push
cdq
or
daa
popf
jg
push
es
xor
(bad)
xchg
arpl
std
or
loop
mov
inc
mov
mov
lahf
outs
adc
push
push
push
mov
adc
daa
popf
jg
pop
es
push
es
rcl
jg
daa
arpl
xchg
arpl
inc
lods
ins
inc
ret
jg
jmp
add
jne
xchg
sahf
push
fsub
ret
jg
mov
adc
call
retf
jge
daa
xor
xchg
arpl
sub
fmul
add
or
mov
fsub
ret
jg
daa
push
mov
push
test
xchg
arpl
inc
push
out
mov
fnstcw
inc
mov
cmp
mov
pushf
jg
call
xchg
xor
xor
test
ins
and
add
es
jg
xor
retf
out
add
pop
mov
pop
add
es
jg
mov
add
rol
arpl
(bad)
xchg
arpl
scas
and
pushf
test
ins
and
inc
mov
pop
add
es
jg
mov
add
mov
das
mov
ret
push
pop
add
fsub
push
les
add
xchg
or
mov
xor
fdiv
mov
daa
data16
repz
add
inc
les
fwait
ror
popf
lahf
shr
xlat
arpl
inc
mov
jmp
imul
arpl
mov
fcom
jns
popf
fwait
jg
and
jg
enter
xor
fsub
outs
js
arpl
mov
xchg
dec
test
cld
stos
and
cdq
arpl
dec
lahf
arpl
xor
pushf
cmc
push
daa
push
mov
fsub
les
fistp
sbb
or
in
scas
into
and
xor
xchg
pop
daa
push
nop
mov
ror
add
(bad)
jmp
(bad)
(bad)
retf
push
js
pop
out
lds
mov
sub
arpl
inc
mov
jg
aam
cmc
dec
xor
enter
inc
xor
push
inc
lods
out
pushf
cmc
pop
daa
push
xchg
mov
daa
push
nop
mov
nop
arpl
mov
nop
arpl
into
and
into
pop
pushf
cmc
mov
fcom
pop
xchg
add
lods
ja
add
add
cmp
inc
add
push
gs
push
js
pop
out
lds
fisub
inc
daa
push
mov
lahf
arpl
jbe
mov
adc
push
nop
mov
lahf
arpl
mov
lahf
arpl
mov
lahf
arpl
lods
aam
ins
push
fsub
mov
pop
cmp
mov
or
addr16
shl
add
lahf
push
add
xor
fdiv
push
into
popf
fwait
or
jns
push
add
lods
dec
mov
cwde
mov
sub
fsub
inc
mov
jmp
mov
add
arpl
mov
das
jbe
inc
fsubr
xor
push
inc
lods
into
pushf
mov
or
and
jl
fsubp
ja
ret
sbb
adc
push
push
stos
test
add
addr16
inc
push
xor
push
mov
or
aam
lds
push
es
sbb
into
lea
add
outs
cmc
imul
jo
add
jg
enter
fsub
adc
js
add
aad
push
add
add
popf
lahf
push
push
fsub
(bad)
in
xor
push
xor
jecxz
jns
push
fwait
into
and
add
imul
sbb
out
inc
fsubr
pop
pop
xor
mov
mov
add
add
and
out
fsubr
xor
jmp
enter
fsub
add
inc
outs
sbb
aad
push
mov
mov
xchg
or
mov
sbb
movs
lds
pop
push
jo
jmp
adc
les
jmp
pop
movs
mov
mov
push
into
popf
xchg
mov
xor
icebp
fcom
mov
push
xor
ins
ss
jmp
jo
push
addr16
jecxz
js
cmp
pop
add
lds
xlat
aam
mov
push
fwait
cmp
arpl
xchg
pop
movs
loope
push
fwait
cmp
arpl
or
add
push
mov
cmp
call
adc
sbb
inc
fsub
inc
push
mov
aam
mov
ja
lds
sbb
or
fmul
rcl
(bad)
(bad)
add
pop
inc
mov
daa
popf
jg
pop
(bad)
ins
mov
pop
fwait
jg
daa
xor
aam
sbb
shr
inc
into
sub
into
push
push
xor
push
inc
scas
lock
js
es
xor
xor
call
dec
fsub
xor
mov
add
arpl
ret
jge
pusha
jp
inc
fcom
into
pop
mov
mov
daa
sahf
jg
gs
or
or
jge
push
fistp
adc
arpl
mov
lods
arpl
inc
fldenv
scas
pusha
and
mov
movs
or
shr
add
into
sbb
dec
mov
fcom
jns
pop
or
mov
xor
dec
mov
pop
add
xor
lds
loopne
dec
mov
pop
add
daa
popf
jg
and
inc
pop
cmps
mov
popa
imul
cmp
or
call
mov
fsub
inc
dec
push
xchg
mov
push
movs
push
(bad)
shl
inc
inc
xchg
jns
and
xor
jecxz
fsub
mov
xor
cli
and
jle
(bad)
or
scas
and
add
nop
scas
add
add
add
ja
pop
cdq
test
retf
or
call
mov
fsub
inc
dec
mov
pop
add
daa
popf
jg
cmp
add
mov
popa
imul
cmp
or
call
mov
fsub
inc
dec
xor
les
fimul
mov
loopne
inc
movs
inc
push
(bad)
mov
xchg
jns
push
fidivr
pushf
xlat
das
out
ret
mov
add
arpl
or
cmc
arpl
call
jg
mov
pop
add
pushf
arpl
test
xor
inc
fcomp
mov
arpl
mov
loopne
inc
movs
jo
mov
and
mov
fsub
adc
mov
and
jle
xor
fsub
inc
dec
xor
mov
arpl
mov
loopne
inc
movs
jo
mov
and
mov
fsub
adc
sbb
pushf
jle
xor
dec
xor
ret
inc
fcomp
mov
arpl
mov
loopne
inc
movs
inc
push
(bad)
mov
xchg
jns
push
fidivr
pushf
xlat
das
out
ret
mov
add
arpl
or
cmc
sub
arpl
push
out
mov
xor
inc
fcomp
push
mov
xor
mov
gs
push
retf
jg
daa
xor
enter
daa
popf
jg
mov
pop
add
fwait
arpl
jbe
arpl
inc
inc
xchg
jns
and
xor
fcomp
jecxz
fsub
mov
xor
cli
and
jle
(bad)
or
scas
les
add
nop
into
sub
mov
sub
add
add
ja
pop
cdq
test
retf
or
call
mov
fsub
inc
dec
xor
mov
arpl
mov
loopne
inc
movs
jo
mov
and
mov
fsub
adc
es
fsub
fisubr
call
sub
jl
es
push
les
or
mov
pop
add
push
out
mov
inc
mov
inc
int3
mov
add
fsub
fisubr
call
adc
jl
es
push
les
push
(bad)
shl
inc
inc
xchg
jns
and
push
mov
pusha
add
daa
popf
jg
and
inc
pop
cmps
mov
popa
imul
cmp
mov
and
arpl
int3
gs
jg
daa
xor
jns
and
inc
fsub
inc
push
pop
push
mov
inc
fsub
loop
pushf
jge
fmul
inc
ret
jg
fsub
outs
adc
mov
imul
out
mov
sbb
mov
push
fiadd
pushf
cmp
pushf
jge
xlat
aad
jl
fwait
cmp
arpl
test
jns
inc
fcomp
iret
stos
sbb
ja
sbb
jg
daa
jmp
arpl
sbb
arpl
cs
arpl
outs
lea
mov
jmp
push
pushf
add
(bad)
mov
add
add
daa
pushf
jg
ins
xchg
jg
daa
pushf
cmc
pop
push
out
inc
daa
pushf
ror
pop
lahf
jg
daa
xor
and
and
inc
fsub
inc
pop
xor
inc
fsub
mov
loopne
inc
movs
jo
sbb
and
mov
fsub
adc
pop
pop
fsub
dec
fsub
fisubr
call
adc
jl
es
push
les
or
xor
rol
mov
arpl
mov
loopne
inc
movs
jo
mov
and
mov
fsub
adc
add
(bad)
fsub
mov
daa
call
jg
pop
cmps
jg
daa
ins
add
es
jg
pop
(bad)
jg
daa
jmp
daa
sahf
jg
push
mov
inc
fsub
add
jmp
xchg
bound
inc
daa
pushf
or
add
jmp
adc
jle
fwait
jg
daa
ins
add
fldenv
int3
pop
fwait
jg
daa
jmp
lods
ja
push
push
and
mov
cwde
arpl
retf
jge
pop
stos
jg
pop
pop
add
jmp
sub
into
push
out
add
pop
xlat
aam
and
data16
and
pop
add
je
and
fwait
jg
pop
cmps
test
pop
xchg
jg
daa
pushf
xor
mov
sub
mov
mov
mov
js
arpl
add
push
js
arpl
dec
fsub
fisubr
call
test
jl
es
push
les
or
xor
mov
inc
fsub
mov
loopne
inc
movs
jo
mov
and
mov
fsub
adc
mov
fsub
dec
fsub
fisubr
call
sub
jl
es
push
les
jg
sub
inc
fsub
inc
push
into
arpl
mov
fcomp
mov
lock
jg
pop
cmps
mov
pop
fwait
jg
daa
push
dec
pop
lock
daa
or
repnz
jle
xor
fsub
inc
dec
xor
mov
arpl
mov
loopne
inc
movs
jo
sbb
and
mov
fsub
adc
push
jns
arpl
dec
fsub
fisubr
call
adc
jl
es
push
les
or
sbb
jge
push
movs
push
(bad)
shl
inc
inc
xchg
jns
and
push
mov
pusha
add
daa
popf
jg
push
pop
add
mov
jmp
mov
out
add
imul
arpl
inc
inc
xchg
jns
and
xor
inc
fcomp
jecxz
fsub
mov
xor
cli
and
jle
(bad)
or
scas
clc
pop
add
nop
scas
fcomp
inc
popa
imul
cmp
or
cdq
call
mov
fsub
inc
dec
pop
xchg
fwait
ins
fsub
xchg
in
cmp
arpl
les
data16
push
mov
pop
add
daa
popf
jg
sub
add
mov
popa
imul
cmp
or
call
mov
fsub
inc
dec
xor
mov
inc
fsub
mov
loopne
inc
movs
inc
push
(bad)
mov
xchg
jns
push
fidivr
pushf
xlat
das
out
ret
mov
jp
arpl
or
test
repnz
jle
xor
mov
dec
push
xchg
test
jp
arpl
inc
inc
xchg
jns
and
push
mov
pusha
add
daa
popf
jg
test
inc
pop
cmps
mov
les
jl
es
push
les
push
(bad)
shl
inc
inc
xchg
jns
and
push
mov
pusha
add
daa
popf
jg
cld
pop
add
mov
ret
inc
daa
(bad)
jl
es
push
les
add
xor
inc
fsub
mov
loopne
inc
movs
jo
mov
and
mov
fsub
adc
add
pop
push
out
mov
fidivr
es
arpl
or
push
jnp
arpl
dec
fsub
fisubr
call
sub
jl
es
push
les
call
mov
daa
mov
jnp
arpl
adc
into
jnp
arpl
dec
fsub
fisubr
call
sub
jl
es
push
les
cmp
mov
jmp
push
mov
scas
(bad)
fisubr
call
fsub
int3
gs
jg
daa
xor
scas
add
ins
mov
push
xor
inc
fsub
mov
loopne
inc
movs
jo
mov
and
mov
fsub
adc
pop
call
jle
xor
inc
dec
xor
mov
inc
fsub
mov
loopne
inc
movs
jo
mov
and
mov
fsub
adc
jbe
popf
arpl
inc
popa
imul
cmp
mov
jl
arpl
and
arpl
int3
gs
jg
daa
xor
jns
and
inc
fsub
inc
push
mov
pop
add
daa
popf
jg
push
pop
add
mov
fimul
sub
and
ror
or
xor
cmp
arpl
and
jle
xor
mov
retf
jg
daa
xor
mov
daa
pushf
xor
scas
mov
(bad)
push
mov
ins
lahf
jg
daa
mov
jo
arpl
mov
xchg
or
fsub
ret
jge
xchg
or
fsub
clc
xchg
pusha
lea
ja
push
out
mov
push
es
xor
icebp
popf
pushf
shr
push
mov
jg
daa
pushf
shr
push
fwait
mov
push
movs
jmp
out
add
pop
mov
add
ja
daa
pushf
add
fldl2t
lds
mov
call
das
xchg
mov
add
push
mov
pushf
call
das
add
pop
add
fsub
push
les
add
xchg
add
mov
cmp
push
fwait
mov
push
movs
add
inc
sahf
jg
fsubr
lds
pop
or
jmp
popf
imul
frstor
inc
fsubr
add
into
and
into
pop
push
pop
int3
popf
imul
pop
movs
test
xor
mov
fsubr
aad
push
aaa
add
adc
adc
push
mov
fsubr
add
mov
daa
mov
adc
call
jg
mov
retf
add
fstp
xor
or
mov
(bad)
and
out
arpl
mov
and
push
add
mov
push
sbb
daa
out
aam
fucomp
or
retf
or
push
test
daa
pushf
add
mov
push
add
fsub
ret
jg
pop
xchg
ins
dec
fsub
push
mov
or
mov
fsub
adc
arpl
inc
fmul
test
arpl
mov
call
das
fisub
(bad)
xor
mov
shl
es
arpl
inc
fmul
call
retf
jle
daa
xor
mov
fsub
repnz
sahf
jg
daa
(bad)
adc
push
sahf
jg
daa
(bad)
or
inc
sahf
jg
daa
(bad)
and
pop
xlat
jge
daa
xor
sub
ret
jg
shl
mov
xchg
xchg
add
arpl
mov
fsub
mov
push
out
mov
pop
lahf
jle
daa
xor
loopne
sub
out
mov
mov
or
mov
fsub
add
js
and
inc
sbb
mov
fsub
inc
fsub
and
out
mov
pop
fiadd
daa
pushf
xor
add
jg
fldenv
add
add
cmp
retf
xchg
jg
sub
jg
push
out
mov
fmul
sub
or
mov
xor
dec
pop
mov
xor
scas
pusha
push
add
test
repnz
sahf
jg
mov
pop
add
call
mov
fsub
or
add
inc
xor
mov
add
jl
daa
pushf
shr
lods
mov
mov
fsubr
inc
dec
sbb
fwait
das
xor
inc
xor
mov
fsub
add
inc
push
out
mov
stos
stos
mov
arpl
inc
pop
ficom
mov
ror
xor
arpl
inc
push
out
mov
xor
mov
fmul
sub
push
out
mov
pushf
fidivr
pop
cmps
mov
pushf
add
add
inc
sahf
jg
fmul
jge
daa
arpl
add
add
add
inc
sahf
jg
fsub
inc
fucomip
arpl
mov
in
arpl
inc
das
test
ret
jg
push
movs
(bad)
scas
test
add
jg
jl
jg
xor
xor
scas
jl
add
sbb
daa
pushf
imul
mov
xchg
addr16
pop
(bad)
mov
xchg
dec
test
arpl
into
cmp
xor
aas
rcl
(bad)
into
and
into
pop
pushf
cmc
dec
xor
and
jle
and
into
pop
pushf
cmc
dec
xor
mov
fsubr
inc
and
jl
lods
jae
jmp
or
xor
jmp
or
add
aaa
add
ins
aaa
adc
push
dec
outs
ss
or
sub
les
xor
inc
xor
mov
fsubr
inc
(bad)
aaa
xor
inc
les
mov
xchg
mov
jo
mov
add
push
xchg
add
jmp
outs
(bad)
lock
popf
or
pop
xor
fsubr
js
and
inc
mov
popf
popf
or
lock
shr
mov
es
les
ins
aaa
adc
push
dec
outs
ss
pushf
jae
pop
xor
lds
mov
rol
fmul
sub
arpl
sbb
jmp
arpl
scas
call
mov
jbe
arpl
add
cmp
sbb
mov
int3
pop
fsub
(bad)
call
xor
sbb
fsub
add
mov
pusha
jmp
addr16
pop
(bad)
daa
jmp
daa
and
sti
cmp
cmps
daa
pushf
shr
mov
mov
inc
dec
sbb
fsub
(bad)
das
es
inc
fdiv
jg
sbb
jg
xor
mov
fsub
inc
dec
shl
dec
cmps
daa
pushf
jg
aam
scas
ja
arpl
mov
ins
cmp
movs
mov
cwde
mov
sbb
mov
fsubr
add
pop
push
out
cmps
daa
pushf
rcl
xor
inc
fsubr
xor
jmp
daa
(bad)
inc
cmps
daa
pushf
push
les
mov
adc
mov
jmp
loop
js
arpl
sbb
jmp
xor
scas
inc
fdiv
(bad)
adc
mov
jae
jne
pop
movs
mov
mov
xchg
or
fsub
push
call
loopne
mov
fcom
jns
pop
or
adc
daa
loopne
dec
mov
pop
add
in
arpl
mov
or
mov
movs
call
retf
pusha
mov
in
arpl
cmps
jmp
cmp
arpl
les
data16
push
mov
pusha
add
cmp
inc
fsub
inc
dec
xor
mov
fcomp
mov
arpl
mov
loopne
inc
movs
dec
push
(bad)
mov
xchg
jns
push
fiadd
das
cmp
cmps
daa
pushf
xlat
scas
js
add
nop
scas
pop
push
add
add
ja
pop
cdq
test
int3
or
call
mov
fsub
adc
jo
sub
inc
das
out
mov
and
push
add
mov
popa
imul
cmp
or
call
mov
fsub
adc
call
arpl
mov
rcl
inc
popa
add
mov
cmp
add
cmp
inc
fsub
inc
push
daa
push
nop
das
retf
inc
push
out
cmps
daa
pushf
shr
stc
mov
and
push
add
xchg
into
sub
mov
push
imul
cmp
or
call
mov
fsub
adc
mov
fadd
cmp
arpl
adc
div
arpl
dec
fsub
fisubr
call
sub
and
push
add
mov
fstp
cmps
daa
pushf
shr
pop
cmps
mov
sub
mov
call
imul
cmp
mov
and
arpl
retf
pusha
mov
add
or
arpl
daa
xor
push
jmp
outs
push
and
mov
jmp
cmps
jmp
arpl
les
data16
push
mov
pusha
add
cmp
inc
fsub
inc
dec
mov
pop
add
cmp
inc
fsub
inc
dec
push
xchg
mov
push
movs
push
(bad)
shl
inc
inc
xchg
jns
and
push
mov
pusha
add
cmp
inc
fsub
inc
dec
mov
pop
add
cmp
inc
fsub
inc
dec
xor
inc
fcomp
mov
arpl
mov
loopne
inc
movs
ja
mov
and
mov
jmp
imul
dec
dec
add
mov
pop
arpl
daa
xor
imul
pusha
mov
jmp
jae
pop
jmp
arpl
les
data16
push
mov
pusha
add
cmp
inc
fsub
inc
dec
mov
pop
add
cmp
inc
fsub
inc
dec
xor
mov
arpl
mov
loopne
inc
movs
ja
mov
and
mov
jmp
imul
mov
xor
pushf
jg
push
mov
ja
arpl
scas
(bad)
fisubr
call
fsub
retf
pusha
mov
add
or
arpl
daa
xor
(bad)
arpl
cmp
arpl
inc
inc
xchg
jns
and
push
mov
pusha
add
cmp
inc
fsub
inc
dec
mov
pop
add
cmp
inc
fsub
inc
dec
pop
lea
push
fsub
jp
arpl
inc
inc
xchg
jns
and
push
mov
pusha
add
cmp
inc
fsub
inc
dec
xor
fcomp
mov
arpl
mov
loopne
inc
movs
dec
push
(bad)
mov
xchg
jns
push
fiadd
das
cmp
cmps
daa
pushf
xlat
scas
and
add
nop
das
or
and
push
add
mov
fimul
sub
and
scas
push
dec
add
jl
daa
pushf
add
push
out
cmps
daa
pushf
shr
mov
or
mov
fadd
xor
scas
cmp
add
jl
daa
pushf
push
jbe
and
push
xchg
test
sbb
xchg
stos
pop
add
xlat
clc
ss
jnp
push
fwait
ja
push
out
mov
pop
(bad)
sbb
daa
pushf
xor
inc
xor
test
scas
js
add
mov
mov
into
dec
idiv
daa
jmp
and
ins
fsub
scas
in
dec
add
je
daa
loop
xchg
in
arpl
inc
xor
inc
fsubr
add
sub
pop
(bad)
jge
daa
xor
mul
das
fsub
inc
push
out
mov
ja
ret
xlat
pop
add
fsub
push
les
mov
fsub
inc
fldenv
retf
jle
daa
xor
mov
fsub
mov
daa
(bad)
and
pop
xlat
jge
daa
xor
and
xchg
out
inc
fsub
out
and
mov
mul
retf
jge
daa
xor
mov
fsub
mov
pushf
jg
pop
sti
jge
daa
jmp
pushf
or
mov
mul
les
add
pop
out
mov
fsub
ret
jg
fldenv
inc
pop
ficomp
mov
les
jg
fldenv
sub
cmp
ret
test
sub
jg
push
out
mov
fmul
sub
or
mov
xor
dec
pop
loope
inc
fcomp
scas
sbb
inc
push
fwait
cmp
mov
pop
add
call
mov
fsub
or
add
inc
xor
sub
jl
daa
pushf
shr
lods
mov
stos
inc
fsubr
inc
dec
sbb
fwait
das
xor
inc
xor
stos
inc
fsub
add
inc
push
out
mov
stos
stos
mov
fsub
inc
sub
scas
mov
inc
push
fwait
test
inc
fldenv
retf
jl
daa
xor
scas
adc
inc
mov
call
retf
jl
daa
xor
imul
daa
arpl
inc
fsubr
add
pop
mov
add
pop
int
inc
fmul
cmp
out
add
pop
xor
inc
fsub
ja
mov
or
(bad)
jge
daa
xor
dec
sahf
jg
xor
push
mov
ins
idiv
daa
mov
ins
fsub
dec
add
sub
or
scas
and
inc
pop
cmps
xchg
dec
sbb
test
inc
xor
(bad)
pop
ror
sbb
adc
(bad)
adc
daa
pushf
push
les
imul
sbb
daa
pushf
add
ins
idiv
daa
mov
adc
outs
mov
xor
fsub
inc
fsub
retf
jge
daa
xor
icebp
arpl
into
pop
or
mov
fsub
bnd
jg
xor
fsubr
add
lods
fsubp
ja
mov
cmp
fsub
into
cmp
xor
aas
mov
inc
loope
pop
popf
(bad)
inc
fdiv
push
into
popf
fwait
jg
aam
retf
arpl
adc
out
aam
enter
xor
test
fsubr
inc
adc
mov
adc
lds
clc
dec
add
mov
mov
adc
fdiv
push
retf
shr
xchg
sub
dec
add
jmp
arpl
mov
sub
inc
retf
rcl
xor
cmps
inc
fdiv
or
lahf
fistp
sub
inc
enter
dec
inc
add
aas
xor
mov
fmul
test
lock
outs
and
inc
dec
cs
test
mov
das
daa
ins
add
xor
fmul
cmp
mov
add
fsub
inc
push
xchg
imul
sahf
and
arpl
inc
mov
or
adc
ins
dec
(bad)
fadd
add
add
mov
arpl
xlat
aam
mov
call
xchg
repnz
inc
fsubr
lds
fwait
bound
out
arpl
icebp
arpl
les
pusha
shr
daa
mov
je
xor
stos
inc
fsub
inc
pop
push
es
mov
call
mov
fmul
out
popf
popf
(bad)
lock
popf
add
adc
ins
dec
mov
xor
jnp
push
imul
and
inc
sub
fmul
sub
or
inc
fsub
inc
mov
jmp
arpl
dec
fsub
mov
push
or
jb
ret
xor
test
fmul
adc
xor
rol
test
fmul
adc
pop
ret
xor
inc
fmul
adc
hlt
cld
rol
test
fmul
adc
(bad)
test
xor
inc
fsub
outs
(bad)
xor
ja
push
test
cdq
arpl
lock
ja
push
mov
outs
lock
ja
push
adc
call
sub
daa
push
hlt
out
arpl
lock
into
push
or
jb
cli
rol
cmps
inc
fmul
adc
sub
rol
cmps
inc
fmul
adc
dec
rol
xor
adc
inc
rol
xor
xor
fsub
mov
push
cmp
mov
xor
test
(bad)
inc
das
xor
mov
fmul
and
and
inc
mov
jg
xor
rol
cmps
inc
fmul
jl
in
jecxz
add
fsub
jnp
and
inc
mov
jg
pop
ret
xor
fsub
ja
shl
sub
inc
and
inc
jnp
pop
push
fmul
nop
rcr
lods
fcomp
arpl
pop
dec
and
inc
jnp
adc
fmul
nop
rcr
pushf
rcr
arpl
outs
inc
and
inc
jnp
and
cwde
arpl
mov
cdq
arpl
(bad)
arpl
addr16
and
inc
jnp
sbb
fmul
nop
rcr
mov
(bad)
(bad)
arpl
into
pop
or
out
add
fsub
pop
inc
and
inc
mov
jg
pop
ret
xor
inc
fdivr
adc
add
sub
pop
pop
pop
mov
fsub
mov
and
xlat
and
jg
push
or
arpl
scas
pop
lahf
jg
pop
cmps
nop
in
cld
rol
shr
pop
xchg
les
arpl
scas
mov
add
jg
in
cld
rol
(bad)
int3
popf
lahf
stos
add
or
and
mov
or
inc
pop
xor
fwait
pop
and
inc
mov
add
mov
add
sub
and
jnp
es
popf
xchg
add
mov
call
das
sbb
ret
mov
sub
addr16
push
fsubr
js
and
inc
sub
inc
and
add
sub
bound
ins
popf
xchg
add
mov
call
das
add
ret
mov
sub
add
add
fimul
sub
or
das
fs
add
jmp
cmps
inc
fsubr
inc
sub
daa
push
test
cdq
arpl
std
arpl
jae
and
add
sub
arpl
and
arpl
das
mov
ret
mov
sub
pop
and
lods
arpl
jae
and
add
sub
arpl
aas
mov
call
das
sar
add
les
inc
jnp
and
in
push
pop
push
fmul
cmp
or
inc
mov
add
test
fsub
pop
mov
pop
add
call
inc
fadd
mov
cdq
arpl
inc
daa
push
mov
cdq
arpl
inc
daa
push
(bad)
out
arpl
push
mov
add
arpl
outs
mov
add
push
popf
call
sub
fsub
push
inc
and
jae
and
daa
js
sub
arpl
inc
fsub
shr
add
ret
out
add
lods
inc
add
sbb
int
arpl
inc
mov
call
pop
xor
inc
fmul
cmc
popf
call
inc
fcomp
scas
les
inc
mov
jg
in
cld
rol
jg
mov
dec
add
arpl
inc
fsub
shr
add
ret
out
add
aam
add
and
lahf
arpl
jae
and
daa
js
sub
bound
in
fsub
das
jbe
add
add
or
arpl
ret
sub
arpl
imul
scas
repnz
jg
mov
jg
in
cld
rol
jg
pushf
ret
rol
jmp
or
inc
fsub
inc
fsub
das
mov
ret
mov
sub
repz
aas
jmp
daa
push
mov
cdq
arpl
inc
daa
push
(bad)
out
arpl
push
mov
add
jg
fsub
push
fldenv
das
fsub
pop
mov
pop
add
call
inc
fadd
hlt
out
arpl
inc
daa
push
mov
cdq
arpl
inc
daa
push
(bad)
out
arpl
push
mov
call
das
sbb
inc
mov
add
ret
arpl
popf
add
sub
arpl
ja
and
jae
and
add
sub
arpl
jbe
arpl
inc
fdiv
call
das
add
push
in
inc
inc
mov
jg
in
cld
rol
jg
pushf
ret
rol
jmp
or
inc
fsub
inc
fsub
das
fidivr
pop
add
inc
inc
add
and
in
push
pop
push
fmul
cmp
or
inc
mov
add
xchg
das
fsub
pop
mov
pop
add
call
scas
mov
out
add
in
push
pop
push
fmul
cmp
or
inc
mov
add
xchg
das
fsub
pop
mov
and
call
scas
cld
inc
add
adc
outs
and
inc
sub
inc
and
daa
js
sub
arpl
inc
fsub
shr
add
ret
bound
fmul
add
push
in
cld
rol
jg
in
cld
rol
jg
mov
jnp
and
or
mov
pop
add
call
scas
je
add
pop
push
fmul
cmp
or
push
fmul
xchg
das
inc
arpl
inc
fmul
sahf
das
fsub
pop
mov
pop
add
call
inc
fadd
sbb
call
into
and
into
pop
mov
mov
adc
ins
pop
mov
jo
test
pop
or
call
mov
pushf
or
fdiv
jg
sbb
and
and
into
pop
or
push
fmul
or
scas
fadd
inc
mov
jg
in
cld
rol
(bad)
int3
popf
lahf
stos
add
or
and
mov
or
inc
pop
xor
fwait
pop
and
inc
mov
add
push
fsub
add
sub
and
jnp
es
popf
xchg
add
mov
call
das
adc
pop
add
inc
inc
add
pop
push
fsub
outs
sub
mov
inc
and
add
sub
bound
ins
popf
xchg
add
mov
call
das
add
ret
mov
sub
add
add
fimul
sub
or
das
fs
add
jmp
clc
mov
sub
daa
push
test
cdq
arpl
(bad)
arpl
jae
and
daa
js
sub
or
mov
pop
add
call
inc
fadd
push
test
jne
inc
mov
pop
add
fwait
bound
pop
fsub
xor
and
inc
fsub
jb
inc
inc
xor
lahf
inc
fsub
mov
jae
jne
inc
mov
call
mov
fmul
imul
jmp
pushf
mov
inc
and
inc
mov
jg
in
cld
rol
jg
mov
dec
add
or
das
(bad)
pop
mov
pop
add
call
inc
fadd
add
call
xor
rol
jg
mov
dec
add
or
inc
fsub
inc
fsub
shr
add
ret
out
add
sar
dec
pop
push
fmul
jmp
arpl
inc
daa
push
(bad)
out
arpl
push
mov
add
out
das
int3
bound
inc
mov
rcr
add
sub
arpl
xor
sub
and
add
sub
arpl
inc
fmul
add
call
das
add
push
in
cli
rol
mov
fcom
xor
rol
jg
pushf
ret
rol
call
das
js
add
call
das
retf
mov
pop
add
test
inc
jnp
sbb
mov
fmul
cmp
or
inc
fsub
out
arpl
pop
mov
pop
add
call
inc
fadd
adc
call
fcomp
push
(bad)
out
arpl
push
mov
add
arpl
pop
mov
add
(bad)
sahf
call
sub
fsub
cmp
sub
and
add
sub
arpl
mov
(bad)
or
adc
and
inc
mov
push
in
rol
mov
jg
in
cld
rol
jg
mov
jnp
(bad)
sub
arpl
pop
mov
and
call
scas
mov
jg
pop
fsub
ja
mov
pushf
mov
inc
and
daa
js
sub
or
mov
pop
add
call
scas
in
add
pop
push
fmul
cmp
or
add
mov
or
fwait
pop
and
inc
mov
add
xchg
arpl
addr16
and
jae
and
add
sub
arpl
pop
fldenv
sub
pop
xor
movs
add
sub
mov
push
in
rol
xor
jae
daa
fistp
fsub
mov
pop
mov
daa
pushf
fistp
adc
ins
pop
mov
cmp
fwait
ja
push
es
into
pop
or
inc
mov
jmp
arpl
mov
ret
into
push
loopne
mov
fsub
inc
mov
or
arpl
and
inc
add
add
js
aas
jmp
sub
or
add
jg
enter
call
scas
xchg
sar
cmps
cwde
jle
lahf
repz
or
sahf
call
mov
ror
add
shl
jmp
push
nop
das
in
ret
bound
in
pushf
add
and
inc
sbb
jmp
fdiv
(bad)
stc
outs
dec
sahf
and
xor
mov
xor
daa
pushf
jg
xor
inc
fmul
cmp
arpl
xchg
push
ds
movs
pushf
xor
call
mov
fsub
mov
xchg
or
lods
jb
lahf
push
arpl
daa
xor
shl
movs
pushf
xor
or
call
mov
fsub
cmp
addr16
push
mov
xor
daa
pushf
jg
xor
jo
sub
inc
(bad)
movs
pushf
test
leave
or
ret
jg
mov
add
daa
gs
push
mov
xor
daa
pushf
jg
xor
xchg
inc
fsub
std
mov
mov
out
mov
js
add
jg
lods
jb
les
or
arpl
daa
xor
iret
arpl
into
push
jecxz
mov
jp
ret
out
mov
mov
add
jg
lods
jb
cwde
imul
jg
daa
xor
iret
arpl
xor
or
ret
jg
mov
add
daa
outs
cmc
push
mov
xor
daa
pushf
jg
xor
fsub
std
mov
loope
ret
out
mov
enter
push
xchg
ja
push
out
mov
pop
push
jg
lods
jb
adc
or
arpl
daa
xor
into
arpl
das
call
add
daa
pushf
jg
mov
push
push
fmul
call
das
data16
inc
mov
pop
push
fmul
call
scas
sub
inc
pop
cmps
test
sub
mov
(bad)
popf
jg
xchg
dec
test
arpl
into
cmp
push
mov
aas
adc
push
fwait
test
mov
mov
pop
fsub
sbb
(bad)
xlat
adc
push
mov
shl
xlat
scas
mov
inc
xchg
adc
xchg
stos
loopne
add
xlat
stc
ficomp
jns
xchg
cmc
sub
arpl
test
mov
xor
das
pushf
jg
xor
inc
fmul
cmp
arpl
shr
fwait
jg
pop
fidiv
daa
pushf
xor
call
mov
fsub
cli
sub
xchg
das
push
rol
inc
push
out
mov
pushf
shr
pop
fidiv
daa
pushf
xor
or
call
mov
fsub
jecxz
arpl
mov
push
jecxz
mov
pushf
jg
lods
jb
inc
imul
retf
ja
daa
xor
int
add
nop
js
daa
data16
push
mov
xor
das
pushf
jg
xor
xchg
inc
fsub
cmp
inc
lods
jb
jae
and
mov
int
add
nop
js
daa
fs
push
mov
xor
das
pushf
jg
xor
xchg
inc
fsubr
jo
sub
inc
(bad)
gs
js
daa
imul
mov
xor
das
pushf
jg
xor
inc
fsub
cmp
dec
lods
jb
int3
imul
retf
ja
daa
xor
int
add
nop
js
daa
imul
add
das
pushf
jg
xor
mov
pushf
jg
lods
jb
mov
or
mov
daa
xor
int3
arpl
into
pop
xor
jmp
daa
outs
cmc
push
mov
xor
das
pushf
jg
xor
xchg
inc
fsub
cmp
dec
lods
jb
inc
ins
and
mov
int3
arpl
mov
mov
xor
fsubr
add
pop
xor
xchg
inc
fmul
lock
arpl
mov
daa
pushf
or
add
jg
push
movs
call
das
push
rol
inc
xor
inc
push
push
out
mov
pushf
add
sub
(bad)
les
ja
daa
arpl
inc
pop
lea
dec
fsub
mov
test
ret
jg
push
movs
test
pushf
mov
call
scas
cdq
mov
mov
pop
(bad)
js
daa
push
dec
pop
mov
add
jg
fsubr
fisub
(bad)
gs
jl
daa
pop
pop
jecxz
add
jg
daa
pushf
mov
inc
fsub
jg
pusha
sub
pop
mov
mov
pop
fwait
js
daa
xor
jb
and
mov
shl
sbb
add
and
test
inc
bound
or
fbld
or
jecxz
js
daa
pushf
pop
xchg
popa
add
loopne
cdq
arpl
out
arpl
ins
add
or
lahf
jle
daa
xor
shl
sub
into
push
or
out
arpl
pop
add
or
lahf
js
daa
xor
iret
arpl
or
out
add
pop
xor
inc
fcomp
xor
fsub
mov
daa
pushf
or
daa
pushf
shr
enter
push
out
mov
fs
inc
mov
pop
add
and
inc
fsub
inc
push
push
out
mov
int3
jbe
inc
push
out
mov
fdiv
or
mov
call
mov
fsub
or
or
lahf
js
daa
xor
int3
arpl
lahf
call
mov
daa
pushf
add
pop
add
mov
sbb
scas
add
add
add
into
sub
mov
gs
js
daa
imul
mov
jns
sub
mov
jl
daa
pushf
shr
pop
cmps
nop
das
push
rol
inc
push
out
mov
in
jno
inc
push
out
mov
in
ja
inc
push
out
mov
pushf
imul
push
mov
pushf
add
fstp
cmc
push
push
out
mov
pushf
inc
ret
fstp
imul
push
mov
pushf
add
or
jg
fist
into
sub
mov
ins
fwait
js
daa
out
add
pop
mov
pop
add
es
jg
xor
inc
fsub
inc
push
push
out
mov
sbb
add
dec
mov
pushf
or
mov
fsub
cli
adc
push
(bad)
cmp
inc
push
out
mov
jae
add
jl
daa
pushf
sar
daa
mov
push
fsub
ret
jg
mov
or
mov
and
adc
xor
mov
mov
jg
sub
jg
mov
repnz
fmul
sub
arpl
scas
or
add
jl
daa
pushf
rcl
(bad)
ins
mov
adc
outs
or
sahf
jg
daa
(bad)
ins
mov
retf
(bad)
ss
iret
inc
fmul
shl
arpl
int
sbb
into
jp
daa
cmp
sbb
mov
gs
mov
fcom
adc
mov
(bad)
jmp
dec
rol
inc
mov
call
scas
clc
jno
inc
push
out
test
lods
ja
scas
mov
inc
mov
push
push
pop
mov
jg
arpl
add
shl
inc
inc
dec
arpl
movs
push
out
stos
daa
pushf
or
mov
push
fsub
mov
dec
ret
xor
inc
fmul
shr
pop
mov
fsub
inc
fldenv
retf
outs
mov
ror
jmp
out
add
pop
xor
mov
in
jg
fsubr
fldenv
(bad)
fst
xor
fsubr
bound
hlt
repz
inc
xor
xchg
inc
fcomp
push
or
xchg
push
and
(bad)
dec
dec
into
or
or
and
adc
sbb
imul
xchg
inc
fsubr
imul
and
das
mov
fbld
or
push
add
mov
idiv
(bad)
pop
shr
daa
bound
ret
jg
in
test
arpl
jae
jg
fmul
or
(bad)
movs
add
je
out
stos
daa
pushf
mov
pop
shr
xor
xlat
jns
sub
mov
pop
stos
daa
pushf
shr
pop
nop
(bad)
push
fsub
inc
push
out
stos
daa
pushf
ror
pop
shr
daa
xor
enter
pop
cld
ins
mov
sbb
shr
xor
pop
pushf
jg
sbb
jmp
pushf
shr
mov
push
(bad)
sub
lahf
call
das
push
mov
pop
push
fmul
or
mov
call
mov
(bad)
call
das
dec
ret
mov
pop
add
call
into
add
into
sbb
cmp
retf
push
add
fsub
and
sub
jns
sub
mov
adc
fmul
or
mov
call
mov
(bad)
call
das
dec
ret
mov
pop
add
cdq
arpl
retf
arpl
cli
data16
push
push
inc
xchg
call
mov
jmp
fmul
sub
or
inc
inc
and
inc
push
es
fimul
sub
arpl
dec
fsub
add
or
mov
fsub
retf
jg
pop
stos
jg
pop
pop
add
push
cmp
mov
cmp
adc
push
xor
add
add
or
inc
mov
pusha
add
xor
pop
sahf
arpl
dec
fsub
add
or
mov
fsub
retf
jg
pop
stos
jg
pop
pop
add
push
cmp
mov
cmp
adc
push
xor
pop
ins
add
or
inc
mov
pusha
add
xor
inc
fcomp
inc
fcomp
push
fsub
movs
push
out
stos
daa
pushf
or
push
mov
ret
es
out
cld
rol
dec
retf
std
pop
fsubr
lds
fmul
sub
es
das
fistp
inc
mov
push
into
popf
mov
lods
or
add
pop
inc
fsub
sub
fsub
add
movs
(bad)
arpl
lahf
push
mov
add
lds
push
es
xor
pop
or
push
fmul
sub
or
inc
adc
cmps
add
sub
mov
push
in
cld
rol
xor
fmul
jmp
loopne
inc
xor
lea
pop
add
repnz
fmul
call
pop
xor
fsubr
add
(bad)
xor
xchg
inc
fmul
jmp
pushf
jg
pop
iret
outs
mov
fsubr
pop
outs
add
inc
retf
ins
mov
je
jg
mov
in
repz
das
mov
ret
bound
shl
pushf
add
fnstsw
movs
sub
inc
pop
data16
repz
shl
jg
add
into
sbb
add
pop
mov
jmp
or
dec
fsub
scas
push
outs
add
sub
fmul
sub
adc
inc
mov
jmp
xor
aam
sub
arpl
inc
daa
push
sbb
arpl
(bad)
arpl
mov
fsub
test
pop
add
fs
xor
mov
or
retf
shr
shl
fisttp
push
xchg
stos
loopne
add
xlat
clc
rcr
pop
movs
in
fsub
add
loopne
push
xlat
out
inc
fsub
dec
pop
fwait
or
add
arpl
dec
pop
adc
inc
fsub
pop
in
add
arpl
inc
xlat
out
inc
fsub
fcmovbe
arpl
add
or
add
pop
add
ins
and
mov
daa
pushf
or
mov
pop
add
and
xchg
pop
cmps
nop
into
pop
mov
daa
out
add
pop
daa
(bad)
push
push
aad
or
add
fsub
retf
jge
daa
xor
pushf
ret
rol
mov
push
xor
pushf
jg
pop
mov
push
mov
adc
cmc
pop
push
out
mov
add
jg
pop
mov
daa
dec
adc
jle
pop
mov
fld1
add
ins
pop
mov
or
cmp
pop
mov
fmul
cmp
mov
dec
fsub
mov
ins
add
in
call
inc
fadd
in
call
(bad)
das
push
mov
and
inc
pop
pop
lock
mov
pop
pop
lock
inc
fcomp
scas
cmps
test
or
or
fcomp
dec
xlat
out
inc
fsub
inc
xor
fmul
and
and
dec
daa
push
mov
pusha
jns
inc
fcom
mov
in
add
xchg
into
pop
fwait
jle
daa
loop
das
repnz
add
fst
and
fst
push
fcom
mov
fst
lods
jl
mul
add
fstp
and
ffree
and
(bad)
push
fcom
mov
pop
push
fsubr
fisub
sub
xor
add
jl
pop
and
ffree
and
fst
push
fcom
lea
push
push
nop
scas
pusha
outs
add
jg
fcomp
inc
fcomp
lods
imul
ja
push
out
mov
pop
(bad)
pop
mov
jge
jge
daa
arpl
mov
fsub
ret
jg
pop
movs
add
fsub
sbb
arpl
into
pop
or
fsub
ret
jg
mov
scas
xor
add
cmp
fmul
rcr
xor
inc
fcomp
scas
fsubr
inc
xor
js
and
inc
int
bound
daa
jmp
mov
pushf
jg
pop
xchg
jge
daa
arpl
jp
xlat
ret
ins
add
das
daa
arpl
mov
in
out
add
fsub
retf
jg
pop
stos
jg
pop
pop
add
adc
cmps
call
mov
daa
pushf
add
fsub
addr16
jmp
or
inc
daa
push
add
call
scas
mov
in
inc
fcom
mov
pop
bound
daa
xor
mov
call
mov
fsub
or
jg
fsub
ret
jg
mov
scas
xor
add
cmp
fmul
mov
xor
inc
fcomp
scas
fsubr
inc
xor
or
les
pushf
rol
bound
push
lods
inc
jmp
and
dec
fsub
jb
test
xor
inc
fsub
ret
jg
fmul
cmp
bound
daa
pop
mov
fcomp
cmp
or
nop
call
inc
fcomp
scas
dec
push
inc
xor
test
jecxz
inc
daa
pushf
jg
push
out
mov
stos
fimul
mov
push
out
mov
pop
xchg
jge
daa
xor
push
and
mov
shl
les
call
retf
jg
daa
xor
pop
ret
xor
inc
daa
pushf
jg
lods
inc
jmp
and
dec
fsub
jb
ret
xor
fmul
add
push
out
mov
pop
xchg
jge
daa
xor
push
and
mov
shl
les
call
retf
jg
daa
xor
hlt
cld
rol
mov
jecxz
inc
daa
pushf
jg
lods
inc
jmp
and
dec
fsub
jb
cld
rol
mov
mov
inc
fsub
mov
push
out
mov
pop
xchg
jge
daa
xor
in
and
mov
shl
les
call
retf
jg
daa
xor
lock
rol
mov
jecxz
inc
daa
pushf
jg
lods
inc
jmp
and
dec
fsub
jb
cld
rol
mov
mov
retf
jg
pop
stos
jg
pop
pop
add
pop
mov
das
hlt
mov
inc
mov
push
mov
fmul
imul
pushf
jle
daa
arpl
xlat
aad
mov
pop
cmp
mov
inc
mov
call
sub
fsub
jb
cld
rol
xchg
mov
fsub
ret
jg
fldl2t
add
jnp
adc
into
and
into
pop
out
add
pop
push
out
mov
cmc
mov
jne
daa
pushf
shr
pop
cmps
nop
das
daa
arpl
mov
in
inc
pop
push
fmul
add
fstp
sub
leave
mov
inc
mov
push
mov
fmul
imul
pop
popf
jle
daa
arpl
xlat
aad
mov
pop
cmp
mov
inc
mov
call
sub
fsub
jb
cld
rol
xchg
mov
ret
jg
fldz
or
les
pushf
rol
bound
shl
popf
jg
loope
repnz
push
fwait
mov
push
movs
or
mov
and
dec
pop
add
and
ins
mov
loopne
push
pusha
fstp
inc
fcom
mov
and
or
sub
fsub
pop
mov
pop
push
fmul
or
sub
jg
mov
jmp
popf
jg
xor
test
jecxz
aaa
ins
and
dec
call
stos
jg
pop
pop
add
arpl
mov
inc
and
mov
fsub
inc
push
out
mov
fimul
jo
call
mov
fsubr
or
les
pushf
rol
bound
retf
jge
daa
xor
retf
jge
daa
xor
sub
jg
xor
test
or
mov
mov
pusha
add
es
jg
mov
(bad)
je
daa
pushf
push
mov
fmul
jmp
arpl
inc
mov
add
mov
(bad)
fsub
into
pop
xchg
jle
daa
jmp
and
xchg
daa
jmp
fcomp
scas
ins
add
adc
call
jnp
arpl
mov
push
div
daa
pushf
rcl
repz
es
jg
sub
add
or
mov
xor
ret
(bad)
je
daa
pushf
push
mov
daa
mov
inc
fsub
inc
mov
ret
arpl
mov
mov
call
das
mov
xor
fsub
push
les
jmp
arpl
frstor
push
add
or
cmp
imul
xchg
mov
aam
cmc
dec
xor
ficomp
mov
les
rcl
(bad)
add
jmp
popf
outs
mov
dec
pop
mov
inc
fsub
std
push
shr
fsub
jl
out
add
in
mov
inc
fsub
mov
and
inc
jl
mov
mov
fmul
mov
inc
lods
push
rol
test
pop
mov
inc
and
pop
dec
and
inc
push
fwait
ja
push
es
pop
pop
mov
dec
and
outs
inc
and
inc
jecxz
test
cdq
arpl
dec
daa
push
mov
push
arpl
push
fcom
xchg
(bad)
in
xor
fsub
dec
daa
push
push
push
fsub
jl
inc
pop
push
fcom
lahf
(bad)
in
xor
fsub
push
daa
push
add
call
lods
shr
js
aas
jmp
jecxz
push
inc
push
jle
rcr
ret
lods
or
cld
rol
lods
fcomp
jle
fcomp
jl
inc
jecxz
pushf
rcr
jle
xlat
cwde
arpl
inc
lods
or
ret
jecxz
mov
inc
push
jle
ficomp
ret
lods
or
cld
rol
hlt
push
daa
push
xchg
mov
aam
shr
xor
sbb
add
fisttp
daa
inc
mov
arpl
mov
arpl
xlat
fsub
inc
daa
inc
nop
mov
arpl
xlat
fsub
inc
daa
inc
xchg
mov
arpl
xlat
fsub
inc
daa
inc
mov
xlat
fsub
inc
daa
inc
lods
mov
arpl
xlat
fsub
inc
daa
inc
mov
call
inc
daa
inc
mov
call
inc
(bad)
jmp
fsub
sbb
xor
or
scas
mov
inc
pop
cmps
mov
popf
lahf
mov
lahf
mov
xor
mov
sbb
test
and
mov
(bad)
(bad)
dec
mov
clc
pop
jae
fmul
jmp
pop
outs
mov
and
sub
add
movs
jp
jae
inc
stos
mov
mov
push
aaa
movs
dec
jmp
pushf
jg
and
leave
mov
dec
call
and
pop
mov
add
addr16
dec
fsub
inc
daa
inc
shl
add
les
arpl
mov
arpl
xlat
fsub
inc
daa
inc
int3
mov
arpl
xlat
fsub
inc
daa
inc
shl
arpl
mov
arpl
xlat
fsub
inc
daa
inc
fdiv
arpl
mov
arpl
xlat
fsub
inc
daa
inc
loopne
call
inc
daa
inc
in
call
inc
daa
inc
call
xlat
fsub
inc
daa
inc
in
mov
arpl
xlat
fsub
inc
daa
inc
lock
arpl
xlat
fsub
inc
daa
inc
hlt
mov
arpl
xlat
fsub
inc
daa
inc
clc
mov
arpl
xlat
fsub
inc
daa
inc
cld
mov
arpl
xlat
fsub
inc
daa
inc
add
arpl
mov
arpl
xlat
fsub
inc
daa
inc
or
arpl
mov
arpl
xlat
fsub
inc
daa
inc
adc
arpl
mov
arpl
xlat
fsub
inc
daa
inc
sbb
arpl
mov
arpl
xlat
fsub
inc
daa
inc
and
arpl
mov
arpl
xlat
fsub
inc
daa
inc
sub
arpl
mov
arpl
xlat
fsub
inc
daa
inc
xor
arpl
mov
arpl
xlat
fsub
inc
daa
inc
cmp
arpl
mov
arpl
xlat
fsub
inc
daa
inc
inc
mov
arpl
xlat
fsub
inc
daa
inc
inc
mov
arpl
xlat
fsub
inc
daa
inc
dec
mov
arpl
xlat
fsub
inc
daa
inc
dec
mov
arpl
xlat
fsub
inc
daa
inc
push
mov
arpl
xlat
fsub
inc
daa
inc
push
mov
arpl
xlat
fsub
inc
daa
inc
pop
mov
arpl
xlat
fsub
inc
daa
inc
pop
mov
arpl
xlat
fsub
inc
daa
inc
pusha
mov
arpl
xlat
fsub
inc
daa
inc
fs
arpl
xlat
fsub
inc
daa
inc
push
xlat
fsub
inc
daa
inc
ins
mov
arpl
xlat
fsub
inc
daa
inc
js
call
inc
daa
inc
jl
call
inc
daa
inc
xor
arpl
mov
arpl
xlat
fsub
inc
daa
inc
mov
fsub
inc
daa
inc
mov
fsub
inc
daa
inc
nop
mov
arpl
xlat
fsub
inc
daa
inc
xchg
mov
arpl
xlat
fsub
inc
daa
inc
cwde
mov
arpl
xlat
fsub
inc
daa
inc
pushf
mov
arpl
xlat
fsub
inc
daa
inc
mov
xlat
fsub
inc
daa
inc
movs
mov
arpl
xlat
fsub
inc
daa
inc
test
call
inc
daa
inc
lods
mov
arpl
xlat
fsub
inc
daa
inc
mov
call
inc
daa
inc
mov
call
inc
daa
inc
mov
xlat
fsub
inc
daa
inc
mov
xlat
fsub
inc
daa
inc
shl
arpl
mov
arpl
xlat
fsub
inc
daa
inc
enter
adc
fsub
inc
daa
inc
int3
mov
arpl
xlat
fsub
inc
daa
inc
shl
fsub
inc
daa
inc
aam
call
inc
daa
inc
fdiv
fsub
inc
daa
inc
fdiv
fsub
inc
daa
inc
loopne
call
inc
daa
inc
in
call
inc
daa
inc
lock
arpl
xlat
fsub
inc
daa
inc
hlt
mov
arpl
xlat
fsub
inc
daa
inc
clc
mov
arpl
xlat
fsub
inc
daa
inc
cld
mov
arpl
xlat
fsub
inc
daa
inc
add
fsub
inc
daa
inc
or
call
inc
daa
inc
adc
fsub
inc
daa
inc
adc
call
inc
daa
inc
sbb
fsub
inc
daa
inc
sbb
call
inc
daa
inc
and
fsub
inc
daa
inc
and
call
inc
daa
inc
sub
fsub
inc
daa
inc
sub
call
inc
daa
inc
cmp
fsub
inc
daa
inc
cmp
call
inc
daa
inc
inc
mov
arpl
xlat
fsub
inc
daa
inc
inc
mov
arpl
xlat
fsub
inc
daa
inc
dec
mov
arpl
xlat
fsub
inc
daa
inc
dec
mov
arpl
xlat
fsub
inc
daa
inc
push
mov
arpl
xlat
fsub
inc
daa
inc
push
mov
arpl
xlat
fsub
inc
daa
inc
pop
mov
arpl
xlat
fsub
inc
daa
inc
pop
mov
arpl
xlat
fsub
inc
daa
inc
pusha
mov
arpl
xlat
fsub
inc
daa
inc
fs
arpl
xlat
fsub
inc
daa
inc
push
xlat
fsub
inc
daa
inc
ins
mov
arpl
xlat
fsub
inc
daa
inc
jo
call
inc
daa
inc
je
call
inc
daa
inc
js
call
inc
daa
inc
jl
call
inc
